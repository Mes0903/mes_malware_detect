
1e46aa822d5151c2591d6f30eedce485add267ca8ce81f33eafd92ae441de991.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	or     DWORD PTR ds:0x42c010,0x42b004
  401013:	push   edi
  401014:	adc    DWORD PTR ds:0x42c000,0x42b014
  40101e:	push   0x42e423
  401023:	dec    DWORD PTR ds:0x42a018
  401029:	xor    edi,edi
  40102b:	not    DWORD PTR ds:0x42901c
  401031:	inc    edi
  401032:	push   edi
  401033:	push   edi
  401034:	call   DWORD PTR ds:0x42eca3
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42b01c,0x7587
  401046:	je     0x401075
  40104c:	lea    eax,[ebp-0x64]
  40104f:	not    DWORD PTR ds:0x42b004
  401055:	push   eax
  401056:	adc    DWORD PTR ds:0x42d00c,0x42d014
  401060:	call   DWORD PTR ds:0x42ec6b
  401066:	mov    DWORD PTR ds:0x42a00c,0x7907
  401070:	jmp    0x402bbe
  401075:	sub    DWORD PTR ds:0x42a010,0x42a01c
  40107f:	push   esi
  401080:	mov    esi,DWORD PTR ds:0x42ecaf
  401086:	push   0x8
  401088:	sub    DWORD PTR ds:0x429004,0x42c000
  401092:	push   0x42e433
  401097:	sub    DWORD PTR ds:0x429000,0x1be5
  4010a1:	call   esi
  4010a3:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010ad:	test   eax,eax
  4010af:	mov    DWORD PTR ds:0x42b000,0x51df
  4010b9:	je     0x4010de
  4010bf:	lea    eax,[ebp-0x64]
  4010c2:	and    DWORD PTR ds:0x42d014,0x42a004
  4010cc:	push   eax
  4010cd:	inc    DWORD PTR ds:0x42d008
  4010d3:	call   DWORD PTR ds:0x42ec6b
  4010d9:	jmp    0x402bbd
  4010de:	xor    DWORD PTR ds:0x42a008,0x429000
  4010e8:	push   ebx
  4010e9:	mov    ebx,DWORD PTR ds:0x42ec7b
  4010ef:	add    DWORD PTR ds:0x429004,0x5c52
  4010f9:	push   0x42e443
  4010fe:	adc    DWORD PTR ds:0x42c014,0x42b014
  401108:	push   edi
  401109:	push   edi
  40110a:	and    DWORD PTR ds:0x429020,0x61d3
  401114:	call   ebx
  401116:	test   eax,eax
  401118:	mov    DWORD PTR ds:0x42b018,0x2d2c
  401122:	je     0x40115f
  401128:	sbb    DWORD PTR ds:0x42a010,0x429004
  401132:	lea    eax,[ebp-0x64]
  401135:	xor    DWORD PTR ds:0x42c000,0x429008
  40113f:	push   eax
  401140:	or     DWORD PTR ds:0x429000,0x4b22
  40114a:	call   DWORD PTR ds:0x42ec6b
  401150:	mov    DWORD PTR ds:0x429004,0x6e7d
  40115a:	jmp    0x402bbc
  40115f:	push   0xc
  401161:	sbb    DWORD PTR ds:0x42d014,0x5298
  40116b:	push   0x42e467
  401170:	sbb    DWORD PTR ds:0x42c010,0x42c008
  40117a:	call   esi
  40117c:	dec    DWORD PTR ds:0x42d000
  401182:	test   eax,eax
  401184:	jne    0x401dcc
  40118a:	push   0x7
  40118c:	push   0x42e47b
  401191:	call   esi
  401193:	adc    DWORD PTR ds:0x429014,0x42900c
  40119d:	test   eax,eax
  40119f:	mov    DWORD PTR ds:0x42c000,0x2037
  4011a9:	jne    0x401dcc
  4011af:	push   0x8
  4011b1:	xor    DWORD PTR ds:0x42d010,0x429014
  4011bb:	push   0x42e48b
  4011c0:	and    DWORD PTR ds:0x42d010,0x7e73
  4011ca:	call   esi
  4011cc:	test   eax,eax
  4011ce:	mov    DWORD PTR ds:0x429014,0x43a5
  4011d8:	jne    0x401dcc
  4011de:	push   0x42e49b
  4011e3:	adc    DWORD PTR ds:0x429014,0x42b00c
  4011ed:	push   edi
  4011ee:	push   edi
  4011ef:	call   DWORD PTR ds:0x42eca3
  4011f5:	xor    DWORD PTR ds:0x429008,0xc25
  4011ff:	test   eax,eax
  401201:	mov    DWORD PTR ds:0x42b004,0x1e9f
  40120b:	jne    0x401dcc
  401211:	sbb    DWORD PTR ds:0x42b008,0x42a01c
  40121b:	push   0x42e4ab
  401220:	push   edi
  401221:	sbb    DWORD PTR ds:0x42b000,0x42b018
  40122b:	push   edi
  40122c:	sbb    DWORD PTR ds:0x42a008,0x42c00c
  401236:	call   ebx
  401238:	adc    DWORD PTR ds:0x42a01c,0xefe
  401242:	test   eax,eax
  401244:	mov    DWORD PTR ds:0x42d014,0x5190
  40124e:	jne    0x401dcc
  401254:	sub    DWORD PTR ds:0x42b000,0x721d
  40125e:	push   0xc
  401260:	add    DWORD PTR ds:0x42d018,0x42c000
  40126a:	push   0x42e4cf
  40126f:	call   esi
  401271:	test   eax,eax
  401273:	mov    DWORD PTR ds:0x42a014,0x465b
  40127d:	jne    0x401dcc
  401283:	or     DWORD PTR ds:0x42d014,0x42900c
  40128d:	push   0x7
  40128f:	push   0x42e4e3
  401294:	xor    DWORD PTR ds:0x42c014,0x14b0
  40129e:	call   esi
  4012a0:	test   eax,eax
  4012a2:	mov    DWORD PTR ds:0x42a01c,0x4b6
  4012ac:	jne    0x401dcc
  4012b2:	push   0x8
  4012b4:	or     DWORD PTR ds:0x429028,0x429010
  4012be:	push   0x42e4f3
  4012c3:	sbb    DWORD PTR ds:0x42a010,0x429008
  4012cd:	call   esi
  4012cf:	test   eax,eax
  4012d1:	mov    DWORD PTR ds:0x42a00c,0x7915
  4012db:	jne    0x401dcc
  4012e1:	or     DWORD PTR ds:0x42b000,0xa15
  4012eb:	push   0x42e503
  4012f0:	push   edi
  4012f1:	sub    DWORD PTR ds:0x42901c,0x42c008
  4012fb:	push   edi
  4012fc:	xor    DWORD PTR ds:0x42a01c,0x42d010
  401306:	call   DWORD PTR ds:0x42eca3
  40130c:	test   eax,eax
  40130e:	jne    0x401dcc
  401314:	sub    DWORD PTR ds:0x42d014,0x42a000
  40131e:	push   0x42e513
  401323:	adc    DWORD PTR ds:0x42b018,0x14c4
  40132d:	push   edi
  40132e:	xor    DWORD PTR ds:0x42c008,0x6706
  401338:	push   edi
  401339:	or     DWORD PTR ds:0x42a01c,0x6055
  401343:	call   ebx
  401345:	sub    DWORD PTR ds:0x429014,0x42b00c
  40134f:	test   eax,eax
  401351:	mov    DWORD PTR ds:0x42d00c,0x550a
  40135b:	jne    0x401dcc
  401361:	push   0xc
  401363:	push   0x42e537
  401368:	adc    DWORD PTR ds:0x42c00c,0x429018
  401372:	call   esi
  401374:	test   eax,eax
  401376:	mov    DWORD PTR ds:0x429024,0x758e
  401380:	jne    0x401dcc
  401386:	push   0x7
  401388:	adc    DWORD PTR ds:0x429010,0x1615
  401392:	push   0x42e54b
  401397:	sub    DWORD PTR ds:0x429008,0x42b01c
  4013a1:	call   esi
  4013a3:	adc    DWORD PTR ds:0x42c01c,0x7f54
  4013ad:	test   eax,eax
  4013af:	jne    0x401dcc
  4013b5:	or     DWORD PTR ds:0x429000,0x429008
  4013bf:	push   0x8
  4013c1:	sub    DWORD PTR ds:0x42a000,0x50c8
  4013cb:	push   0x42e55b
  4013d0:	call   esi
  4013d2:	xor    DWORD PTR ds:0x42a018,0x58f3
  4013dc:	test   eax,eax
  4013de:	mov    DWORD PTR ds:0x42a010,0x4d09
  4013e8:	jne    0x401dcc
  4013ee:	push   0x42e56b
  4013f3:	push   edi
  4013f4:	sbb    DWORD PTR ds:0x42c00c,0x429018
  4013fe:	push   edi
  4013ff:	call   DWORD PTR ds:0x42eca3
  401405:	sbb    DWORD PTR ds:0x42d008,0x42d004
  40140f:	test   eax,eax
  401411:	mov    DWORD PTR ds:0x42a010,0xbaa
  40141b:	jne    0x401dcc
  401421:	push   0x42e57b
  401426:	push   edi
  401427:	push   edi
  401428:	call   ebx
  40142a:	sbb    DWORD PTR ds:0x42b000,0x429014
  401434:	test   eax,eax
  401436:	mov    DWORD PTR ds:0x42d008,0x1c53
  401440:	jne    0x401dcc
  401446:	adc    DWORD PTR ds:0x42a00c,0x429024
  401450:	push   0xc
  401452:	push   0x42e59f
  401457:	sbb    DWORD PTR ds:0x429028,0x2f15
  401461:	call   esi
  401463:	test   eax,eax
  401465:	mov    DWORD PTR ds:0x42d004,0x2bd4
  40146f:	jne    0x401dcc
  401475:	mov    DWORD PTR ds:0x42d014,0xc7e
  40147f:	push   0x7
  401481:	or     DWORD PTR ds:0x42b01c,0x629c
  40148b:	push   0x42e5b3
  401490:	call   esi
  401492:	xor    DWORD PTR ds:0x429020,0x42c014
  40149c:	test   eax,eax
  40149e:	mov    DWORD PTR ds:0x42b008,0x386
  4014a8:	jne    0x401dcc
  4014ae:	push   0x8
  4014b0:	push   0x42e5c3
  4014b5:	sub    DWORD PTR ds:0x429024,0x42a008
  4014bf:	call   esi
  4014c1:	sub    DWORD PTR ds:0x42b004,0x42c018
  4014cb:	test   eax,eax
  4014cd:	mov    DWORD PTR ds:0x42900c,0x6fc8
  4014d7:	jne    0x401dcc
  4014dd:	xor    DWORD PTR ds:0x42d010,0x42901c
  4014e7:	push   0x42e5d3
  4014ec:	and    DWORD PTR ds:0x42d014,0x50c
  4014f6:	push   edi
  4014f7:	push   edi
  4014f8:	sbb    DWORD PTR ds:0x42b000,0x3361
  401502:	call   DWORD PTR ds:0x42eca3
  401508:	test   eax,eax
  40150a:	mov    DWORD PTR ds:0x42b008,0x5d56
  401514:	jne    0x401dcc
  40151a:	xor    DWORD PTR ds:0x42a000,0x4d69
  401524:	push   0x42e5e3
  401529:	and    DWORD PTR ds:0x429024,0x42a014
  401533:	push   edi
  401534:	or     DWORD PTR ds:0x42c004,0x3817
  40153e:	push   edi
  40153f:	add    DWORD PTR ds:0x429024,0x2571
  401549:	call   ebx
  40154b:	xor    DWORD PTR ds:0x429028,0x42b00c
  401555:	test   eax,eax
  401557:	mov    DWORD PTR ds:0x42b00c,0x17fe
  401561:	jne    0x401dcc
  401567:	mov    DWORD PTR ds:0x42c014,0x28c7
  401571:	push   0xc
  401573:	and    DWORD PTR ds:0x429024,0x5a57
  40157d:	push   0x42e607
  401582:	call   esi
  401584:	test   eax,eax
  401586:	mov    DWORD PTR ds:0x42b00c,0xc7e
  401590:	jne    0x401dcc
  401596:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015a0:	push   0x7
  4015a2:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015ac:	push   0x42e61b
  4015b1:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015bb:	call   esi
  4015bd:	xor    DWORD PTR ds:0x42c00c,0x55d5
  4015c7:	test   eax,eax
  4015c9:	jne    0x401dcc
  4015cf:	or     DWORD PTR ds:0x429008,0x62a0
  4015d9:	push   0x8
  4015db:	or     DWORD PTR ds:0x429020,0x42d018
  4015e5:	push   0x42e62b
  4015ea:	call   esi
  4015ec:	test   eax,eax
  4015ee:	mov    DWORD PTR ds:0x429010,0x43d8
  4015f8:	jne    0x401dcc
  4015fe:	push   0x42e63b
  401603:	sub    DWORD PTR ds:0x42a008,0x5452
  40160d:	push   edi
  40160e:	adc    DWORD PTR ds:0x42b004,0x3794
  401618:	push   edi
  401619:	add    DWORD PTR ds:0x42b018,0x429000
  401623:	call   DWORD PTR ds:0x42eca3
  401629:	add    DWORD PTR ds:0x42b014,0x42c014
  401633:	test   eax,eax
  401635:	mov    DWORD PTR ds:0x42c010,0x9db
  40163f:	jne    0x401dcc
  401645:	add    DWORD PTR ds:0x42b01c,0x42c010
  40164f:	push   0x42e64b
  401654:	push   edi
  401655:	push   edi
  401656:	call   ebx
  401658:	test   eax,eax
  40165a:	jne    0x401dcc
  401660:	sub    DWORD PTR ds:0x42a010,0x42b00c
  40166a:	push   0xc
  40166c:	xor    DWORD PTR ds:0x42a000,0x46f8
  401676:	push   0x42e66f
  40167b:	sub    DWORD PTR ds:0x429028,0x1e37
  401685:	call   esi
  401687:	not    DWORD PTR ds:0x42b000
  40168d:	test   eax,eax
  40168f:	mov    DWORD PTR ds:0x42a010,0x1824
  401699:	jne    0x401dcc
  40169f:	push   0x7
  4016a1:	neg    DWORD PTR ds:0x42d004
  4016a7:	push   0x42e683
  4016ac:	call   esi
  4016ae:	xor    DWORD PTR ds:0x429020,0x5303
  4016b8:	test   eax,eax
  4016ba:	jne    0x401dcc
  4016c0:	sub    DWORD PTR ds:0x429014,0x42c01c
  4016ca:	push   0x8
  4016cc:	not    DWORD PTR ds:0x429000
  4016d2:	push   0x42e693
  4016d7:	or     DWORD PTR ds:0x42c01c,0x7461
  4016e1:	call   esi
  4016e3:	test   eax,eax
  4016e5:	jne    0x401dcc
  4016eb:	or     DWORD PTR ds:0x42b010,0x6614
  4016f5:	push   0x42e6a3
  4016fa:	push   edi
  4016fb:	and    DWORD PTR ds:0x42b01c,0x42a008
  401705:	push   edi
  401706:	call   DWORD PTR ds:0x42eca3
  40170c:	sub    DWORD PTR ds:0x429010,0x42a018
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42b004,0x423f
  401722:	jne    0x401dcc
  401728:	push   0x42e6b3
  40172d:	and    DWORD PTR ds:0x42d014,0x5d3e
  401737:	push   edi
  401738:	push   edi
  401739:	call   ebx
  40173b:	sub    DWORD PTR ds:0x42a004,0x8003
  401745:	test   eax,eax
  401747:	jne    0x401dcc
  40174d:	push   0xc
  40174f:	push   0x42e6d7
  401754:	call   esi
  401756:	or     DWORD PTR ds:0x42a014,0x792e
  401760:	test   eax,eax
  401762:	jne    0x401dcc
  401768:	add    DWORD PTR ds:0x42d004,0x429000
  401772:	push   0x7
  401774:	sub    DWORD PTR ds:0x42c010,0x560a
  40177e:	push   0x42e6eb
  401783:	call   esi
  401785:	test   eax,eax
  401787:	mov    DWORD PTR ds:0x42b008,0x3099
  401791:	jne    0x401dcc
  401797:	xor    DWORD PTR ds:0x42a01c,0x42c010
  4017a1:	push   0x8
  4017a3:	push   0x42e6fb
  4017a8:	sub    DWORD PTR ds:0x42901c,0x42c000
  4017b2:	call   esi
  4017b4:	test   eax,eax
  4017b6:	mov    DWORD PTR ds:0x42c010,0x6a70
  4017c0:	jne    0x401dcc
  4017c6:	push   0x42e70b
  4017cb:	push   edi
  4017cc:	push   edi
  4017cd:	mov    DWORD PTR ds:0x42d01c,0x630d
  4017d7:	call   DWORD PTR ds:0x42eca3
  4017dd:	sbb    DWORD PTR ds:0x429024,0x42b018
  4017e7:	test   eax,eax
  4017e9:	mov    DWORD PTR ds:0x42901c,0x686
  4017f3:	jne    0x401dcc
  4017f9:	push   0x42e71b
  4017fe:	and    DWORD PTR ds:0x42c008,0x4bbd
  401808:	push   edi
  401809:	or     DWORD PTR ds:0x429024,0x42d000
  401813:	push   edi
  401814:	call   ebx
  401816:	and    DWORD PTR ds:0x42b018,0x1774
  401820:	test   eax,eax
  401822:	jne    0x401dcc
  401828:	push   0xc
  40182a:	or     DWORD PTR ds:0x42b000,0x3dd
  401834:	push   0x42e73f
  401839:	call   esi
  40183b:	test   eax,eax
  40183d:	jne    0x401dcc
  401843:	push   0x7
  401845:	sub    DWORD PTR ds:0x429010,0x42c004
  40184f:	push   0x42e753
  401854:	or     DWORD PTR ds:0x42d014,0x42c010
  40185e:	call   esi
  401860:	or     DWORD PTR ds:0x42b010,0x42b018
  40186a:	test   eax,eax
  40186c:	jne    0x401dcc
  401872:	push   0x8
  401874:	push   0x42e763
  401879:	call   esi
  40187b:	test   eax,eax
  40187d:	jne    0x401dcc
  401883:	and    DWORD PTR ds:0x42c004,0x42900c
  40188d:	push   0x42e773
  401892:	push   edi
  401893:	push   edi
  401894:	call   DWORD PTR ds:0x42eca3
  40189a:	mov    DWORD PTR ds:0x42a004,0x7c46
  4018a4:	test   eax,eax
  4018a6:	jne    0x401dcc
  4018ac:	push   0x42e783
  4018b1:	sbb    DWORD PTR ds:0x42b010,0x42a010
  4018bb:	push   edi
  4018bc:	push   edi
  4018bd:	or     DWORD PTR ds:0x42d014,0x42900c
  4018c7:	call   ebx
  4018c9:	test   eax,eax
  4018cb:	jne    0x401dcc
  4018d1:	adc    DWORD PTR ds:0x42c000,0x429028
  4018db:	push   0xc
  4018dd:	sub    DWORD PTR ds:0x42a014,0xc65
  4018e7:	push   0x42e7a7
  4018ec:	call   esi
  4018ee:	test   eax,eax
  4018f0:	mov    DWORD PTR ds:0x42c014,0x6571
  4018fa:	jne    0x401dcc
  401900:	push   0x7
  401902:	adc    DWORD PTR ds:0x42a014,0x42b00c
  40190c:	push   0x42e7bb
  401911:	mov    DWORD PTR ds:0x42d004,0x12ce
  40191b:	call   esi
  40191d:	dec    DWORD PTR ds:0x42a010
  401923:	test   eax,eax
  401925:	mov    DWORD PTR ds:0x42b004,0x22d3
  40192f:	jne    0x401dcc
  401935:	xor    DWORD PTR ds:0x42d018,0x7580
  40193f:	push   0x8
  401941:	mov    DWORD PTR ds:0x42d014,0x4bef
  40194b:	push   0x42e7cb
  401950:	add    DWORD PTR ds:0x42b000,0x4980
  40195a:	call   esi
  40195c:	test   eax,eax
  40195e:	jne    0x401dcc
  401964:	and    DWORD PTR ds:0x42b000,0x472c
  40196e:	push   0x42e7db
  401973:	push   edi
  401974:	push   edi
  401975:	xor    DWORD PTR ds:0x42c014,0x42b018
  40197f:	call   DWORD PTR ds:0x42eca3
  401985:	or     DWORD PTR ds:0x42900c,0x429020
  40198f:	test   eax,eax
  401991:	mov    DWORD PTR ds:0x42c00c,0x6dbd
  40199b:	jne    0x401dcc
  4019a1:	not    DWORD PTR ds:0x42b00c
  4019a7:	push   0x42e7eb
  4019ac:	or     DWORD PTR ds:0x42d000,0x4414
  4019b6:	push   edi
  4019b7:	sub    DWORD PTR ds:0x429020,0x7e0
  4019c1:	push   edi
  4019c2:	xor    DWORD PTR ds:0x42d010,0x4db0
  4019cc:	call   ebx
  4019ce:	test   eax,eax
  4019d0:	jne    0x401dcc
  4019d6:	sub    DWORD PTR ds:0x42a014,0x10f4
  4019e0:	push   0xc
  4019e2:	sub    DWORD PTR ds:0x42b004,0x42d014
  4019ec:	push   0x42e80f
  4019f1:	call   esi
  4019f3:	test   eax,eax
  4019f5:	jne    0x401dcc
  4019fb:	push   0x7
  4019fd:	xor    DWORD PTR ds:0x42b000,0x360b
  401a07:	push   0x42e823
  401a0c:	call   esi
  401a0e:	test   eax,eax
  401a10:	jne    0x401dcc
  401a16:	push   0x8
  401a18:	or     DWORD PTR ds:0x42c01c,0x6aa9
  401a22:	push   0x42e833
  401a27:	add    DWORD PTR ds:0x42d014,0x21f
  401a31:	call   esi
  401a33:	or     DWORD PTR ds:0x42d004,0x505e
  401a3d:	test   eax,eax
  401a3f:	mov    DWORD PTR ds:0x42c00c,0x1afa
  401a49:	jne    0x401dcc
  401a4f:	push   0x42e843
  401a54:	or     DWORD PTR ds:0x42b01c,0x4806
  401a5e:	push   edi
  401a5f:	push   edi
  401a60:	call   DWORD PTR ds:0x42eca3
  401a66:	or     DWORD PTR ds:0x42c018,0x6442
  401a70:	test   eax,eax
  401a72:	jne    0x401dcc
  401a78:	push   0x42e853
  401a7d:	push   edi
  401a7e:	not    DWORD PTR ds:0x42d018
  401a84:	push   edi
  401a85:	adc    DWORD PTR ds:0x429028,0x26c2
  401a8f:	call   ebx
  401a91:	sbb    DWORD PTR ds:0x42a000,0x42d010
  401a9b:	test   eax,eax
  401a9d:	mov    DWORD PTR ds:0x42b000,0x1a50
  401aa7:	jne    0x401dcc
  401aad:	adc    DWORD PTR ds:0x42c00c,0x5a53
  401ab7:	push   0xc
  401ab9:	push   0x42e877
  401abe:	or     DWORD PTR ds:0x42900c,0x964
  401ac8:	call   esi
  401aca:	sbb    DWORD PTR ds:0x429014,0x5b18
  401ad4:	test   eax,eax
  401ad6:	jne    0x401dcc
  401adc:	push   0x7
  401ade:	add    DWORD PTR ds:0x42d01c,0x42d000
  401ae8:	push   0x42e88b
  401aed:	and    DWORD PTR ds:0x42900c,0x4f3f
  401af7:	call   esi
  401af9:	xor    DWORD PTR ds:0x42a018,0x42a01c
  401b03:	test   eax,eax
  401b05:	jne    0x401dcc
  401b0b:	sbb    DWORD PTR ds:0x429018,0xc00
  401b15:	push   0x8
  401b17:	add    DWORD PTR ds:0x42c004,0x3ea1
  401b21:	push   0x42e89b
  401b26:	call   esi
  401b28:	sub    DWORD PTR ds:0x42c000,0x352b
  401b32:	test   eax,eax
  401b34:	mov    DWORD PTR ds:0x42901c,0x47d2
  401b3e:	jne    0x401dcc
  401b44:	push   0x42e8ab
  401b49:	or     DWORD PTR ds:0x42a004,0x22e5
  401b53:	push   edi
  401b54:	push   edi
  401b55:	add    DWORD PTR ds:0x42c008,0x2ef5
  401b5f:	call   DWORD PTR ds:0x42eca3
  401b65:	test   eax,eax
  401b67:	mov    DWORD PTR ds:0x429000,0xe12
  401b71:	jne    0x401dcc
  401b77:	push   0x42e8bb
  401b7c:	inc    DWORD PTR ds:0x429008
  401b82:	push   edi
  401b83:	push   edi
  401b84:	and    DWORD PTR ds:0x429020,0x42c008
  401b8e:	call   ebx
  401b90:	mov    DWORD PTR ds:0x42d01c,0x65ff
  401b9a:	test   eax,eax
  401b9c:	jne    0x401dcc
  401ba2:	add    DWORD PTR ds:0x42d00c,0x8c2
  401bac:	push   0xc
  401bae:	and    DWORD PTR ds:0x42a010,0x429020
  401bb8:	push   0x42e8df
  401bbd:	call   esi
  401bbf:	test   eax,eax
  401bc1:	jne    0x401dcc
  401bc7:	push   0x7
  401bc9:	not    DWORD PTR ds:0x42a004
  401bcf:	push   0x42e8f3
  401bd4:	call   esi
  401bd6:	test   eax,eax
  401bd8:	jne    0x401dcc
  401bde:	push   0x8
  401be0:	push   0x42e903
  401be5:	add    DWORD PTR ds:0x429028,0x63a0
  401bef:	call   esi
  401bf1:	test   eax,eax
  401bf3:	mov    DWORD PTR ds:0x42c01c,0x185a
  401bfd:	jne    0x401dcc
  401c03:	xor    DWORD PTR ds:0x42d00c,0x42c018
  401c0d:	push   0x42e913
  401c12:	push   edi
  401c13:	adc    DWORD PTR ds:0x42a008,0x42d004
  401c1d:	push   edi
  401c1e:	sbb    DWORD PTR ds:0x42d010,0x4b82
  401c28:	call   DWORD PTR ds:0x42eca3
  401c2e:	test   eax,eax
  401c30:	mov    DWORD PTR ds:0x42c00c,0x2dd4
  401c3a:	jne    0x401dcc
  401c40:	adc    DWORD PTR ds:0x42d004,0x42a004
  401c4a:	push   0x42e923
  401c4f:	push   edi
  401c50:	sbb    DWORD PTR ds:0x42c008,0x42b004
  401c5a:	push   edi
  401c5b:	sub    DWORD PTR ds:0x42a010,0x42b000
  401c65:	call   ebx
  401c67:	test   eax,eax
  401c69:	jne    0x401dcc
  401c6f:	inc    DWORD PTR ds:0x42b014
  401c75:	push   0xc
  401c77:	mov    DWORD PTR ds:0x42d01c,0xa60
  401c81:	push   0x42e947
  401c86:	sub    DWORD PTR ds:0x42c00c,0x3e85
  401c90:	call   esi
  401c92:	test   eax,eax
  401c94:	mov    DWORD PTR ds:0x42b010,0x6d5c
  401c9e:	jne    0x401dcc
  401ca4:	push   0x7
  401ca6:	and    DWORD PTR ds:0x429000,0x42b000
  401cb0:	push   0x42e95b
  401cb5:	add    DWORD PTR ds:0x42b008,0x42a018
  401cbf:	call   esi
  401cc1:	test   eax,eax
  401cc3:	mov    DWORD PTR ds:0x42c014,0x2a16
  401ccd:	jne    0x401dcc
  401cd3:	add    DWORD PTR ds:0x42d000,0x429000
  401cdd:	push   0x8
  401cdf:	push   0x42e96b
  401ce4:	call   esi
  401ce6:	test   eax,eax
  401ce8:	jne    0x401dcc
  401cee:	add    DWORD PTR ds:0x42b01c,0x42a01c
  401cf8:	push   0x42e97b
  401cfd:	sbb    DWORD PTR ds:0x429018,0x3807
  401d07:	push   edi
  401d08:	adc    DWORD PTR ds:0x42c014,0x42b01c
  401d12:	push   edi
  401d13:	call   DWORD PTR ds:0x42eca3
  401d19:	xor    DWORD PTR ds:0x42c000,0x727e
  401d23:	test   eax,eax
  401d25:	mov    DWORD PTR ds:0x42900c,0x2a1e
  401d2f:	jne    0x401dcc
  401d35:	push   0x42e98b
  401d3a:	and    DWORD PTR ds:0x42a008,0x1639
  401d44:	push   edi
  401d45:	adc    DWORD PTR ds:0x429008,0x42d000
  401d4f:	push   edi
  401d50:	sbb    DWORD PTR ds:0x42c00c,0x1404
  401d5a:	call   ebx
  401d5c:	sbb    DWORD PTR ds:0x42a000,0x162a
  401d66:	test   eax,eax
  401d68:	jne    0x401dcc
  401d6e:	add    DWORD PTR ds:0x429010,0x42ec
  401d78:	push   0xc
  401d7a:	push   0x42e9af
  401d7f:	call   esi
  401d81:	or     DWORD PTR ds:0x42a014,0x42c008
  401d8b:	test   eax,eax
  401d8d:	jne    0x401dcc
  401d93:	and    DWORD PTR ds:0x42c01c,0x53f3
  401d9d:	push   0x7
  401d9f:	sub    DWORD PTR ds:0x42c000,0x429010
  401da9:	push   0x42e9c3
  401dae:	call   esi
  401db0:	xor    DWORD PTR ds:0x42d000,0x42900c
  401dba:	test   eax,eax
  401dbc:	mov    DWORD PTR ds:0x42b010,0x732d
  401dc6:	je     0x401de7
  401dcc:	sbb    DWORD PTR ds:0x429008,0x54d2
  401dd6:	xor    eax,eax
  401dd8:	mov    DWORD PTR ds:0x429010,0xb2
  401de2:	jmp    0x402bbc
  401de7:	mov    DWORD PTR [ebp-0x10],0x0
  401dee:	dec    edi
  401def:	mov    eax,DWORD PTR [ebp-0x34]
  401df2:	mov    DWORD PTR ds:0x42b004,0x3f1
  401dfc:	mov    DWORD PTR [ebp-0x34],eax
  401dff:	mov    ecx,0xf89c85b9
  401e04:	mov    DWORD PTR ds:0x42b008,0x14
  401e0e:	cmp    DWORD PTR ds:0x42b008,0x0
  401e15:	je     0x401e57
  401e1b:	cmp    DWORD PTR ds:0x42b008,0x1c
  401e22:	jne    0x401e3d
  401e28:	push   0x42b01c
  401e2d:	push   0x429028
  401e32:	push   0x42b014
  401e37:	call   DWORD PTR ds:0x42ec73
  401e3d:	xor    edi,edi
  401e3f:	xor    edi,DWORD PTR ds:0x42b008
  401e45:	dec    edi
  401e46:	mov    DWORD PTR ds:0x42b008,edi
  401e4c:	jmp    0x401e0e
  401e51:	dec    DWORD PTR ds:0x429020
  401e57:	mov    DWORD PTR [ebp-0x8],ecx
  401e5a:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  401e61:	not    edi
  401e63:	lea    eax,[ebp-0x3c]
  401e66:	sbb    DWORD PTR ds:0x42b000,0x42b008
  401e70:	mov    DWORD PTR [ebp-0x2c],eax
  401e73:	mov    edx,DWORD PTR ds:0x42c000
  401e79:	add    edx,DWORD PTR ds:0x42c00c
  401e7f:	mov    DWORD PTR ds:0x42c000,edx
  401e85:	lea    eax,[ebp-0x38]
  401e88:	inc    edi
  401e89:	mov    DWORD PTR [ebp-0x18],eax
  401e8c:	adc    esi,esi
  401e8e:	mov    eax,ds:0x42e313
  401e93:	and    DWORD PTR ds:0x429014,ebx
  401e99:	mov    eax,DWORD PTR [eax+0x1c8]
  401e9f:	mov    eax,DWORD PTR [eax]
  401ea1:	mov    edi,DWORD PTR ds:0x42b010
  401ea7:	sub    edi,DWORD PTR ds:0x42d008
  401ead:	mov    DWORD PTR ds:0x42b010,edi
  401eb3:	mov    edx,DWORD PTR [ebp-0x18]
  401eb6:	and    DWORD PTR ds:0x42c00c,0x0
  401ec0:	jmp    0x401ed2
  401ec5:	mov    edi,DWORD PTR ds:0x42c00c
  401ecb:	inc    edi
  401ecc:	mov    DWORD PTR ds:0x42c00c,edi
  401ed2:	cmp    DWORD PTR ds:0x42c00c,0x12
  401ed9:	jae    0x401f21
  401edf:	cmp    DWORD PTR ds:0x42c00c,0xc
  401ee6:	jne    0x401efc
  401eec:	push   0x0
  401eee:	push   0x7fec
  401ef3:	push   DWORD PTR [ebp-0x28]
  401ef6:	call   DWORD PTR ds:0x42ec77
  401efc:	cmp    DWORD PTR ds:0x42c00c,0xb
  401f03:	jne    0x401f16
  401f09:	mov    edi,DWORD PTR ds:0x42c00c
  401f0f:	inc    edi
  401f10:	mov    DWORD PTR ds:0x42c00c,edi
  401f16:	jmp    0x401ec5
  401f1b:	xor    edi,DWORD PTR ds:0x42d01c
  401f21:	mov    esi,0x7510899
  401f26:	movzx  edi,WORD PTR ds:0x42b000
  401f2d:	add    DWORD PTR ds:0x42d010,edi
  401f33:	xor    eax,esi
  401f35:	movzx  edi,BYTE PTR ds:0x429008
  401f3c:	xor    DWORD PTR ds:0x429010,edi
  401f42:	mov    edi,0x3272e0
  401f47:	sub    DWORD PTR ds:0x42a004,0x2e7b
  401f51:	add    eax,edi
  401f53:	mov    DWORD PTR ds:0x429010,0xa86
  401f5d:	mov    DWORD PTR [edx],eax
  401f5f:	mov    eax,ds:0x42eaab
  401f64:	cmp    eax,0x312bc9f6
  401f69:	mov    DWORD PTR ds:0x42d014,0x7fe
  401f73:	jne    0x402159
  401f79:	mov    eax,DWORD PTR [ebp-0x8]
  401f7c:	and    DWORD PTR ds:0x42900c,0x0
  401f86:	mov    edx,DWORD PTR ds:0x42900c
  401f8c:	inc    edx
  401f8d:	mov    DWORD PTR ds:0x42900c,edx
  401f93:	cmp    DWORD PTR ds:0x42900c,0x1e
  401f9a:	jne    0x401fc5
  401fa0:	push   DWORD PTR [ebp-0x1c]
  401fa3:	push   0x1928
  401fa8:	push   0x42c014
  401fad:	push   0x166d
  401fb2:	push   0x7171
  401fb7:	push   0x2c0a
  401fbc:	push   DWORD PTR [ebp-0x1c]
  401fbf:	call   DWORD PTR ds:0x42ec7f
  401fc5:	cmp    DWORD PTR ds:0x42900c,0x1a
  401fcc:	jb     0x401f86
  401fd2:	and    DWORD PTR ds:0x42d014,0x0
  401fdc:	jmp    0x401fee
  401fe1:	mov    edx,DWORD PTR ds:0x42d014
  401fe7:	inc    edx
  401fe8:	mov    DWORD PTR ds:0x42d014,edx
  401fee:	cmp    DWORD PTR ds:0x42d014,0x1e
  401ff5:	jae    0x402082
  401ffb:	cmp    DWORD PTR ds:0x42d014,0x20
  402002:	jne    0x402021
  402008:	push   0x42c008
  40200d:	push   DWORD PTR [ebp-0xc]
  402010:	push   0x42e000
  402015:	push   DWORD PTR [ebp-0x20]
  402018:	push   DWORD PTR [ebp-0x20]
  40201b:	call   DWORD PTR ds:0x42ec83
  402021:	jmp    0x401fe1
  402026:	and    DWORD PTR ds:0x42d008,0x0
  402030:	mov    ebx,DWORD PTR ds:0x42d008
  402036:	inc    ebx
  402037:	mov    DWORD PTR ds:0x42d008,ebx
  40203d:	cmp    DWORD PTR ds:0x42d008,0x6
  402044:	jne    0x402055
  40204a:	push   0x429000
  40204f:	call   DWORD PTR ds:0x42ec8b
  402055:	cmp    DWORD PTR ds:0x42d008,0x5
  40205c:	jne    0x40206f
  402062:	mov    ebx,DWORD PTR ds:0x42d008
  402068:	inc    ebx
  402069:	mov    DWORD PTR ds:0x42d008,ebx
  40206f:	cmp    DWORD PTR ds:0x42d008,0x11
  402076:	jb     0x402030
  40207c:	sbb    edx,0x8e9
  402082:	mov    edx,DWORD PTR ds:0x42e313
  402088:	mov    edx,DWORD PTR [edx+0x198]
  40208e:	xor    DWORD PTR ds:0x42a018,edx
  402094:	xor    eax,esi
  402096:	and    DWORD PTR ds:0x42c00c,0x0
  4020a0:	jmp    0x4020b2
  4020a5:	mov    ebx,DWORD PTR ds:0x42c00c
  4020ab:	inc    ebx
  4020ac:	mov    DWORD PTR ds:0x42c00c,ebx
  4020b2:	cmp    DWORD PTR ds:0x42c00c,0x1f
  4020b9:	jae    0x4020eb
  4020bf:	cmp    DWORD PTR ds:0x42c00c,0x21
  4020c6:	jne    0x4020e0
  4020cc:	push   DWORD PTR [ebp-0x18]
  4020cf:	push   DWORD PTR [ebp-0xc]
  4020d2:	push   0x42a000
  4020d7:	push   DWORD PTR [ebp-0x24]
  4020da:	call   DWORD PTR ds:0x42ec8f
  4020e0:	jmp    0x4020a5
  4020e5:	adc    ebx,DWORD PTR ds:0x429020
  4020eb:	add    eax,edi
  4020ed:	mov    ebx,DWORD PTR ds:0x42b004
  4020f3:	sbb    DWORD PTR ds:0x42a010,ebx
  4020f9:	mov    DWORD PTR [edx],eax
  4020fb:	and    DWORD PTR ds:0x429004,0x0
  402105:	mov    eax,ds:0x429004
  40210a:	inc    eax
  40210b:	mov    ds:0x429004,eax
  402110:	cmp    DWORD PTR ds:0x429004,0x27
  402117:	jne    0x402123
  40211d:	call   DWORD PTR ds:0x42ec93
  402123:	cmp    DWORD PTR ds:0x429004,0x1a
  40212a:	jb     0x402105
  402130:	mov    eax,DWORD PTR [ebp-0x8]
  402133:	add    ebx,0x5fb6
  402139:	xor    eax,esi
  40213b:	movzx  ebx,WORD PTR ds:0x42c008
  402142:	or     DWORD PTR ds:0x42c004,ebx
  402148:	add    eax,edi
  40214a:	adc    DWORD PTR ds:0x42c014,0x5b68
  402154:	mov    ds:0x42eaab,eax
  402159:	and    eax,DWORD PTR ds:0x42d008
  40215f:	mov    eax,ds:0x42e313
  402164:	mov    eax,DWORD PTR [eax+0x18c]
  40216a:	or     DWORD PTR ds:0x42b000,0x2b6e
  402174:	mov    eax,DWORD PTR [eax]
  402176:	mov    ebx,DWORD PTR ds:0x418f49
  40217c:	mov    ebx,DWORD PTR [ebx]
  40217e:	sbb    DWORD PTR ds:0x429018,ebx
  402184:	mov    DWORD PTR [ebp-0x7c],eax
  402187:	and    DWORD PTR ds:0x429020,0x0
  402191:	mov    eax,ds:0x429020
  402196:	inc    eax
  402197:	mov    ds:0x429020,eax
  40219c:	cmp    DWORD PTR ds:0x429020,0x24
  4021a3:	jne    0x4021cd
  4021a9:	push   0x6154
  4021ae:	push   0x429028
  4021b3:	push   0x8833
  4021b8:	push   0x2ef1
  4021bd:	push   0x2977
  4021c2:	push   0x6125
  4021c7:	call   DWORD PTR ds:0x42ec97
  4021cd:	cmp    DWORD PTR ds:0x429020,0x18
  4021d4:	jb     0x402191
  4021da:	mov    ebx,0xf89c85bd
  4021df:	neg    eax
  4021e1:	mov    DWORD PTR [ebp-0x10],ebx
  4021e4:	mov    DWORD PTR ds:0x429020,0x18
  4021ee:	cmp    DWORD PTR ds:0x429020,0x0
  4021f5:	je     0x402224
  4021fb:	cmp    DWORD PTR ds:0x429020,0x26
  402202:	jne    0x40220e
  402208:	call   DWORD PTR ds:0x42ec9b
  40220e:	mov    eax,ds:0x429020
  402213:	dec    eax
  402214:	mov    ds:0x429020,eax
  402219:	jmp    0x4021ee
  40221e:	or     DWORD PTR ds:0x42a004,ecx
  402224:	mov    DWORD PTR [ebp-0x10],ebx
  402227:	and    DWORD PTR ds:0x42b014,0x0
  402231:	jmp    0x402241
  402236:	mov    eax,ds:0x42b014
  40223b:	inc    eax
  40223c:	mov    ds:0x42b014,eax
  402241:	cmp    DWORD PTR ds:0x42b014,0x1c
  402248:	jae    0x402279
  40224e:	cmp    DWORD PTR ds:0x42b014,0x22
  402255:	jne    0x40226e
  40225b:	push   0x62db
  402260:	push   0x42b018
  402265:	push   DWORD PTR [ebp-0x20]
  402268:	call   DWORD PTR ds:0x42ec9f
  40226e:	jmp    0x402236
  402273:	sbb    eax,DWORD PTR ds:0x42b00c
  402279:	mov    DWORD PTR [ebp-0x10],ebx
  40227c:	movzx  eax,BYTE PTR ds:0x429000
  402283:	add    eax,DWORD PTR ds:0x42b01c
  402289:	mov    ds:0x429000,eax
  40228e:	mov    DWORD PTR [ebp-0x18],ecx
  402291:	xor    DWORD PTR ds:0x42901c,ecx
  402297:	mov    DWORD PTR [ebp-0x10],ebx
  40229a:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  4022a1:	and    DWORD PTR ds:0x42c018,0x0
  4022ab:	mov    eax,ds:0x42c018
  4022b0:	inc    eax
  4022b1:	mov    ds:0x42c018,eax
  4022b6:	cmp    DWORD PTR ds:0x42c018,0xe
  4022bd:	jne    0x4022d8
  4022c3:	push   0x42e0b3
  4022c8:	push   0x42e0f9
  4022cd:	push   0x400000
  4022d2:	call   DWORD PTR ds:0x42eca7
  4022d8:	cmp    DWORD PTR ds:0x42c018,0xd
  4022df:	jne    0x4022f0
  4022e5:	mov    eax,ds:0x42c018
  4022ea:	inc    eax
  4022eb:	mov    ds:0x42c018,eax
  4022f0:	cmp    DWORD PTR ds:0x42c018,0x18
  4022f7:	jb     0x4022ab
  4022fd:	and    DWORD PTR ds:0x42a008,0x0
  402307:	jmp    0x402317
  40230c:	mov    eax,ds:0x42a008
  402311:	inc    eax
  402312:	mov    ds:0x42a008,eax
  402317:	cmp    DWORD PTR ds:0x42a008,0x12
  40231e:	jae    0x402362
  402324:	cmp    DWORD PTR ds:0x42a008,0x4
  40232b:	jne    0x40233c
  402331:	push   0x42e0b3
  402336:	call   DWORD PTR ds:0x42ecab
  40233c:	cmp    DWORD PTR ds:0x42a008,0x3
  402343:	jne    0x402357
  402349:	xor    eax,eax
  40234b:	add    eax,DWORD PTR ds:0x42a008
  402351:	inc    eax
  402352:	mov    ds:0x42a008,eax
  402357:	jmp    0x40230c
  40235c:	sub    DWORD PTR ds:0x429010,ebx
  402362:	mov    eax,DWORD PTR [ebp-0x8]
  402365:	xor    eax,esi
  402367:	sub    DWORD PTR ds:0x42d004,0x3268
  402371:	add    eax,edi
  402373:	mov    DWORD PTR ds:0x42901c,0x7c76
  40237d:	jmp    0x40245e
  402382:	mov    eax,DWORD PTR [ebp-0xc]
  402385:	mov    ecx,DWORD PTR [ebp-0x1c]
  402388:	xor    eax,esi
  40238a:	and    DWORD PTR ds:0x42a01c,0x42c014
  402394:	lea    eax,[eax+ecx*1+0x3272e0]
  40239b:	push   eax
  40239c:	mov    eax,DWORD PTR [ebp-0x18]
  40239f:	or     DWORD PTR ds:0x42d008,0x79cb
  4023a9:	xor    eax,esi
  4023ab:	or     DWORD PTR ds:0x42b014,0x429004
  4023b5:	lea    eax,[ebp+eax*1+0x3272e8]
  4023bc:	push   eax
  4023bd:	mov    eax,ds:0x42e313
  4023c2:	add    DWORD PTR ds:0x42c010,0x2a0c
  4023cc:	push   DWORD PTR [eax+0x1bc]
  4023d2:	sub    DWORD PTR ds:0x429014,0x775c
  4023dc:	call   0x402bd1
  4023e1:	and    ecx,DWORD PTR ds:0x42b00c
  4023e7:	mov    eax,DWORD PTR [ebp-0xc]
  4023ea:	dec    DWORD PTR ds:0x42c00c
  4023f0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4023f3:	and    DWORD PTR ds:0x429014,0x0
  4023fd:	jmp    0x40240f
  402402:	mov    edx,DWORD PTR ds:0x429014
  402408:	inc    edx
  402409:	mov    DWORD PTR ds:0x429014,edx
  40240f:	cmp    DWORD PTR ds:0x429014,0x1e
  402416:	jae    0x402455
  40241c:	cmp    DWORD PTR ds:0x429014,0x6
  402423:	jne    0x402434
  402429:	push   0x42c010
  40242e:	call   DWORD PTR ds:0x42ecb3
  402434:	cmp    DWORD PTR ds:0x429014,0x5
  40243b:	jne    0x402450
  402441:	xor    edx,edx
  402443:	add    edx,DWORD PTR ds:0x429014
  402449:	inc    edx
  40244a:	mov    DWORD PTR ds:0x429014,edx
  402450:	jmp    0x402402
  402455:	xor    eax,esi
  402457:	lea    eax,[ecx+eax*1+0x3272e0]
  40245e:	sub    ecx,ecx
  402460:	mov    ecx,DWORD PTR [ebp-0xc]
  402463:	mov    edx,DWORD PTR [ebp-0xc]
  402466:	mov    DWORD PTR ds:0x42c014,0x77e
  402470:	xor    edx,esi
  402472:	add    DWORD PTR ds:0x42d014,0x42c014
  40247c:	xor    ecx,esi
  40247e:	add    ecx,edx
  402480:	sbb    DWORD PTR ds:0x42d000,0x43eb
  40248a:	mov    edx,DWORD PTR [ebp-0xc]
  40248d:	adc    DWORD PTR ds:0x42b01c,0x42c018
  402497:	xor    edx,esi
  402499:	lea    ecx,[ecx+edx*1+0x9758a0]
  4024a0:	mov    DWORD PTR ds:0x42b008,0xdf3
  4024aa:	mov    DWORD PTR [ebp-0x1c],eax
  4024ad:	cmp    eax,ecx
  4024af:	jbe    0x402382
  4024b5:	mov    eax,DWORD PTR [ebp+0xc]
  4024b8:	mov    ds:0x42e197,eax
  4024bd:	mov    eax,DWORD PTR [ebp+0x10]
  4024c0:	mov    DWORD PTR ds:0x42d010,0x1c
  4024ca:	cmp    DWORD PTR ds:0x42d010,0x0
  4024d1:	je     0x402527
  4024d7:	cmp    DWORD PTR ds:0x42d010,0xf
  4024de:	jne    0x4024f9
  4024e4:	push   0x42900c
  4024e9:	push   0x42900c
  4024ee:	push   0x429018
  4024f3:	call   DWORD PTR ds:0x42ec73
  4024f9:	cmp    DWORD PTR ds:0x42d010,0x10
  402500:	jne    0x402513
  402506:	mov    ecx,DWORD PTR ds:0x42d010
  40250c:	dec    ecx
  40250d:	mov    DWORD PTR ds:0x42d010,ecx
  402513:	xor    ecx,ecx
  402515:	or     ecx,DWORD PTR ds:0x42d010
  40251b:	dec    ecx
  40251c:	mov    DWORD PTR ds:0x42d010,ecx
  402522:	jmp    0x4024ca
  402527:	mov    ds:0x42e3eb,eax
  40252c:	mov    eax,ds:0x42e197
  402531:	mov    ecx,DWORD PTR [ebp-0x2c]
  402534:	sub    eax,edi
  402536:	xor    eax,esi
  402538:	mov    DWORD PTR [ecx],eax
  40253a:	mov    eax,DWORD PTR [ebp-0x34]
  40253d:	cmp    eax,0xf89c85b9
  402542:	jne    0x40261f
  402548:	lea    eax,[ebp-0x48]
  40254b:	mov    DWORD PTR [ebp-0x9c],eax
  402551:	lea    eax,[ebp+0x4]
  402554:	mov    DWORD PTR [ebp-0x48],eax
  402557:	mov    eax,DWORD PTR [ebp-0x48]
  40255a:	test   eax,eax
  40255c:	je     0x402ba1
  402562:	mov    eax,DWORD PTR [ebp-0x24]
  402565:	mov    eax,DWORD PTR [ebp-0xc]
  402568:	mov    eax,DWORD PTR [ebp-0x8]
  40256b:	mov    DWORD PTR [ebp+0xc],eax
  40256e:	mov    eax,eax
  402570:	mov    eax,ds:0x42e313
  402575:	mov    eax,DWORD PTR [eax+0x1c8]
  40257b:	mov    eax,DWORD PTR [eax]
  40257d:	cdq    
  40257e:	mov    ebx,eax
  402580:	mov    eax,0xfabdbee9
  402585:	add    ebx,eax
  402587:	adc    edx,0xffffffff
  40258a:	and    DWORD PTR [ebp-0x10],0x0
  40258e:	xor    edx,0x0
  402591:	mov    DWORD PTR [ebp-0x6c],edx
  402594:	mov    edx,DWORD PTR [ebp+0xc]
  402597:	mov    DWORD PTR [ebp-0x14],edx
  40259a:	mov    ecx,0x8a29a12b
  40259f:	xor    ebx,ecx
  4025a1:	add    DWORD PTR [ebp-0x14],eax
  4025a4:	mov    edx,DWORD PTR [ebp-0x14]
  4025a7:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025ab:	xor    edx,ecx
  4025ad:	mov    DWORD PTR [ebp-0x58],edx
  4025b0:	mov    edx,DWORD PTR [ebp-0x10]
  4025b3:	xor    edx,0x0
  4025b6:	mov    DWORD PTR [ebp-0x54],edx
  4025b9:	cmp    DWORD PTR [ebp-0x58],ebx
  4025bc:	jne    0x4025ce
  4025c2:	mov    edx,DWORD PTR [ebp-0x6c]
  4025c5:	cmp    DWORD PTR [ebp-0x54],edx
  4025c8:	je     0x4025fd
  4025ce:	mov    edx,DWORD PTR ds:0x42e313
  4025d4:	mov    edx,DWORD PTR [edx+0x1c0]
  4025da:	mov    edx,DWORD PTR [edx]
  4025dc:	xor    ebx,ebx
  4025de:	add    edx,eax
  4025e0:	adc    ebx,0xffffffff
  4025e3:	xor    edx,ecx
  4025e5:	xor    ebx,0x0
  4025e8:	cmp    edx,0x70941fc1
  4025ee:	jne    0x402ba1
  4025f4:	cmp    ebx,0xffffffff
  4025f7:	jne    0x402ba1
  4025fd:	mov    edx,DWORD PTR ds:0x42e38f
  402603:	mov    ebx,DWORD PTR ds:0x42e397
  402609:	xor    edx,ebx
  40260b:	mov    DWORD PTR ds:0x42e38f,edx
  402611:	mov    ebx,DWORD PTR ds:0x42e38f
  402617:	mov    edx,DWORD PTR [ebp-0x48]
  40261a:	jmp    0x402b60
  40261f:	mov    eax,DWORD PTR [ebp-0x3c]
  402622:	cmp    eax,0xf89c85b8
  402627:	je     0x402684
  40262d:	mov    eax,DWORD PTR [ebp-0x8]
  402630:	mov    ecx,DWORD PTR [ebp-0x38]
  402633:	xor    eax,esi
  402635:	add    eax,edi
  402637:	cmp    eax,ecx
  402639:	je     0x402684
  40263f:	mov    eax,ds:0x42e313
  402644:	mov    eax,DWORD PTR [eax+0x194]
  40264a:	mov    ecx,DWORD PTR [eax]
  40264c:	mov    eax,DWORD PTR [ecx+0x3c]
  40264f:	push   DWORD PTR ds:0x42e3eb
  402655:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  402659:	push   DWORD PTR ds:0x42e197
  40265f:	add    eax,ecx
  402661:	mov    ecx,DWORD PTR ds:0x42e313
  402667:	mov    ecx,DWORD PTR [ecx+0x194]
  40266d:	push   DWORD PTR [ecx]
  40266f:	call   eax
  402671:	mov    ecx,DWORD PTR ds:0x42e313
  402677:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40267d:	mov    DWORD PTR [ecx],eax
  40267f:	jmp    0x402ba1
  402684:	mov    eax,DWORD PTR [ebp-0x8]
  402687:	mov    ecx,DWORD PTR [ebp-0x7c]
  40268a:	xor    eax,esi
  40268c:	add    eax,edi
  40268e:	cmp    eax,ecx
  402690:	jne    0x402a61
  402696:	mov    eax,DWORD PTR [ebp-0x8]
  402699:	mov    ecx,DWORD PTR ds:0x42e313
  40269f:	mov    ecx,DWORD PTR [ecx+0x198]
  4026a5:	xor    eax,esi
  4026a7:	add    eax,edi
  4026a9:	cmp    eax,DWORD PTR [ecx]
  4026ab:	jne    0x4026ca
  4026b1:	mov    eax,DWORD PTR [ebp-0x8]
  4026b4:	push   0xf89c85b9
  4026b9:	xor    eax,esi
  4026bb:	add    eax,edi
  4026bd:	push   eax
  4026be:	push   ebx
  4026bf:	push   DWORD PTR [ebp-0xc]
  4026c2:	push   DWORD PTR [ebp-0x8]
  4026c5:	call   0x40c7f6
  4026ca:	mov    eax,DWORD PTR [ebp-0xc]
  4026cd:	mov    DWORD PTR [ebp-0x40],eax
  4026d0:	mov    eax,DWORD PTR [ebp-0x8]
  4026d3:	mov    DWORD PTR [ebp-0x1c],eax
  4026d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4026d9:	xor    eax,esi
  4026db:	add    eax,edi
  4026dd:	mov    DWORD PTR [ebp+0x10],eax
  4026e0:	mov    eax,ds:0x42e193
  4026e5:	mov    eax,DWORD PTR [eax]
  4026e7:	mov    DWORD PTR [ebp+0x10],eax
  4026ea:	mov    eax,ds:0x42e39b
  4026ef:	mov    eax,DWORD PTR [eax]
  4026f1:	mov    DWORD PTR [ebp-0x18],eax
  4026f4:	mov    DWORD PTR [ebp+0xc],0xf89c87b9
  4026fb:	mov    eax,DWORD PTR [ebp+0xc]
  4026fe:	xor    eax,esi
  402700:	add    eax,edi
  402702:	mov    DWORD PTR [ebp+0xc],eax
  402705:	mov    eax,ds:0x42e313
  40270a:	mov    DWORD PTR [ebp+0xc],eax
  40270d:	mov    eax,DWORD PTR [ebp+0x10]
  402710:	mov    DWORD PTR [ebp+0xc],eax
  402713:	mov    eax,DWORD PTR [ebp+0xc]
  402716:	push   0x4
  402718:	pop    ecx
  402719:	sub    ecx,eax
  40271b:	add    ecx,DWORD PTR [ebp-0x18]
  40271e:	mov    DWORD PTR [ebp-0x2c],0xf89c85f9
  402725:	mov    DWORD PTR [ebp+0x10],ecx
  402728:	mov    DWORD PTR [ebp-0xe4],ebx
  40272e:	mov    eax,DWORD PTR [ebp+0xc]
  402731:	mov    DWORD PTR [ebp-0xe0],eax
  402737:	mov    eax,DWORD PTR [ebp+0x10]
  40273a:	mov    DWORD PTR [ebp-0xdc],eax
  402740:	mov    eax,DWORD PTR [ebp-0x2c]
  402743:	xor    eax,esi
  402745:	add    eax,edi
  402747:	mov    DWORD PTR [ebp-0xd8],eax
  40274d:	lea    eax,[ebp-0x88]
  402753:	mov    DWORD PTR [ebp-0xd4],eax
  402759:	mov    eax,DWORD PTR [ebp-0xe4]
  40275f:	xor    eax,esi
  402761:	add    eax,edi
  402763:	mov    DWORD PTR [ebp-0xe4],eax
  402769:	lea    eax,[ebp-0xe4]
  40276f:	push   eax
  402770:	mov    eax,DWORD PTR [ebp-0x40]
  402773:	xor    eax,esi
  402775:	add    eax,edi
  402777:	push   eax
  402778:	mov    eax,ds:0x42e333
  40277d:	push   0x42e289
  402782:	push   DWORD PTR [eax]
  402784:	call   0x405286
  402789:	mov    eax,DWORD PTR [ebp+0xc]
  40278c:	mov    ecx,DWORD PTR [ebp+0x10]
  40278f:	mov    DWORD PTR [ebp-0x84],ecx
  402795:	mov    ecx,DWORD PTR [ebp-0x1c]
  402798:	xor    ecx,esi
  40279a:	mov    DWORD PTR [ebp-0x18],eax
  40279d:	add    ecx,edi
  40279f:	jmp    0x402a02
  4027a4:	lea    edx,[ecx+eax*1]
  4027a7:	mov    DWORD PTR [ebp+0x10],edx
  4027aa:	mov    edx,DWORD PTR [ebp-0x84]
  4027b0:	sub    edx,ecx
  4027b2:	mov    DWORD PTR [ebp+0xc],edx
  4027b5:	mov    edx,DWORD PTR [ebp+0xc]
  4027b8:	mov    DWORD PTR [ebp-0x4c],edx
  4027bb:	mov    edx,DWORD PTR [ebp+0x10]
  4027be:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  4027c5:	mov    DWORD PTR [ebp-0x6c],edx
  4027c8:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  4027cf:	mov    edx,DWORD PTR [ebp-0x50]
  4027d2:	xor    edx,esi
  4027d4:	add    edx,edi
  4027d6:	mov    DWORD PTR [ebp+0x10],edx
  4027d9:	mov    edx,DWORD PTR [ebp-0x50]
  4027dc:	xor    edx,esi
  4027de:	add    edx,edi
  4027e0:	mov    DWORD PTR [ebp+0xc],edx
  4027e3:	mov    DWORD PTR [ebp-0x68],0xf89c85d9
  4027ea:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  4027f1:	mov    edx,DWORD PTR [ebp-0x50]
  4027f4:	mov    ebx,DWORD PTR [ebp-0x4c]
  4027f7:	xor    edx,esi
  4027f9:	add    edx,edi
  4027fb:	cmp    ebx,edx
  4027fd:	je     0x4029f6
  402803:	mov    eax,DWORD PTR [ebp-0x20]
  402806:	xor    eax,esi
  402808:	mov    edx,0xffcd8d20
  40280d:	sub    edx,eax
  40280f:	add    edx,DWORD PTR [ebp-0x4c]
  402812:	mov    eax,DWORD PTR [ebp-0x20]
  402815:	mov    ebx,DWORD PTR [ebp+0x10]
  402818:	xor    eax,esi
  40281a:	add    eax,edi
  40281c:	imul   eax,ebx
  40281f:	cmp    eax,edx
  402821:	ja     0x4029f3
  402827:	mov    edx,DWORD PTR [ebp+0x10]
  40282a:	mov    eax,DWORD PTR [ebp-0x4c]
  40282d:	mov    ebx,DWORD PTR [ebp-0x68]
  402830:	sub    eax,edx
  402832:	xor    ebx,esi
  402834:	xor    edx,edx
  402836:	add    ebx,edi
  402838:	div    ebx
  40283a:	mov    DWORD PTR [ebp+0xc],eax
  40283d:	mov    eax,DWORD PTR [ebp-0x74]
  402840:	mov    edx,DWORD PTR [ebp+0xc]
  402843:	xor    eax,esi
  402845:	add    eax,edi
  402847:	cmp    edx,eax
  402849:	jbe    0x402859
  40284f:	mov    eax,DWORD PTR [ebp-0x74]
  402852:	xor    eax,esi
  402854:	add    eax,edi
  402856:	mov    DWORD PTR [ebp+0xc],eax
  402859:	mov    eax,DWORD PTR [ebp-0x68]
  40285c:	mov    edx,DWORD PTR [ebp+0xc]
  40285f:	xor    eax,esi
  402861:	add    eax,edi
  402863:	imul   eax,edx
  402866:	mov    DWORD PTR [ebp+0xc],eax
  402869:	mov    eax,DWORD PTR [ebp-0x50]
  40286c:	mov    edx,DWORD PTR [ebp+0xc]
  40286f:	xor    eax,esi
  402871:	add    eax,edi
  402873:	cmp    edx,eax
  402875:	je     0x4029dc
  40287b:	mov    eax,DWORD PTR [ebp+0xc]
  40287e:	mov    DWORD PTR [ebp-0x34],eax
  402881:	mov    eax,DWORD PTR [ebp+0x10]
  402884:	add    eax,DWORD PTR [ebp-0x6c]
  402887:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  40288e:	mov    DWORD PTR [ebp-0x30],eax
  402891:	mov    eax,0xf89c85b8
  402896:	mov    DWORD PTR [ebp-0x5c],eax
  402899:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  4028a0:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4028a7:	mov    DWORD PTR [ebp-0x28],eax
  4028aa:	mov    eax,DWORD PTR [ebp-0x2c]
  4028ad:	xor    eax,esi
  4028af:	add    eax,edi
  4028b1:	jmp    0x402998
  4028b6:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4028bd:	mov    DWORD PTR [ebp-0x80],0xf89c85ad
  4028c4:	mov    eax,DWORD PTR [ebp-0x28]
  4028c7:	mov    edx,DWORD PTR [ebp+0xc]
  4028ca:	xor    eax,esi
  4028cc:	add    eax,edi
  4028ce:	imul   eax,edx
  4028d1:	mov    edx,DWORD PTR [ebp-0x30]
  4028d4:	mov    al,BYTE PTR [eax+edx*1]
  4028d7:	mov    BYTE PTR [ebp-0x1],al
  4028da:	mov    eax,DWORD PTR [ebp-0x28]
  4028dd:	mov    edx,DWORD PTR [ebp+0xc]
  4028e0:	xor    eax,esi
  4028e2:	add    eax,edi
  4028e4:	imul   eax,edx
  4028e7:	mov    edx,DWORD PTR [ebp-0x54]
  4028ea:	xor    edx,esi
  4028ec:	add    eax,edx
  4028ee:	mov    edx,DWORD PTR [ebp-0x30]
  4028f1:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  4028f9:	mov    edx,DWORD PTR [ebp-0x78]
  4028fc:	xor    edx,esi
  4028fe:	lea    eax,[edx+eax*1+0x3272e0]
  402905:	movzx  edx,BYTE PTR [ebp-0x1]
  402909:	xor    edx,eax
  40290b:	mov    BYTE PTR [ebp-0x1],dl
  40290e:	mov    al,BYTE PTR [ebp-0x1]
  402911:	mov    edx,DWORD PTR [ebp-0x28]
  402914:	mov    ebx,DWORD PTR [ebp+0xc]
  402917:	xor    edx,esi
  402919:	add    edx,edi
  40291b:	imul   edx,ebx
  40291e:	mov    ebx,DWORD PTR [ebp-0x30]
  402921:	mov    BYTE PTR [edx+ebx*1],al
  402924:	mov    eax,DWORD PTR [ebp-0x28]
  402927:	mov    edx,DWORD PTR [ebp+0xc]
  40292a:	xor    eax,esi
  40292c:	add    eax,edi
  40292e:	imul   eax,edx
  402931:	mov    edx,DWORD PTR [ebp-0x30]
  402934:	mov    al,BYTE PTR [eax+edx*1]
  402937:	mov    BYTE PTR [ebp-0x1],al
  40293a:	mov    eax,DWORD PTR [ebp-0x28]
  40293d:	mov    edx,DWORD PTR [ebp+0xc]
  402940:	xor    eax,esi
  402942:	add    eax,edi
  402944:	imul   eax,edx
  402947:	mov    edx,DWORD PTR [ebp-0x5c]
  40294a:	xor    edx,esi
  40294c:	add    eax,edx
  40294e:	mov    edx,DWORD PTR [ebp-0x30]
  402951:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  402959:	mov    edx,DWORD PTR [ebp-0x80]
  40295c:	xor    edx,esi
  40295e:	lea    eax,[edx+eax*1+0x3272e0]
  402965:	movzx  edx,BYTE PTR [ebp-0x1]
  402969:	xor    edx,eax
  40296b:	mov    BYTE PTR [ebp-0x1],dl
  40296e:	mov    al,BYTE PTR [ebp-0x1]
  402971:	mov    edx,DWORD PTR [ebp-0x28]
  402974:	mov    ebx,DWORD PTR [ebp+0xc]
  402977:	xor    edx,esi
  402979:	add    edx,edi
  40297b:	imul   edx,ebx
  40297e:	mov    ebx,DWORD PTR [ebp-0x30]
  402981:	mov    BYTE PTR [edx+ebx*1],al
  402984:	mov    eax,DWORD PTR [ebp-0x10]
  402987:	mov    edx,DWORD PTR [ebp-0x5c]
  40298a:	xor    eax,esi
  40298c:	xor    edx,esi
  40298e:	add    eax,edi
  402990:	add    edx,edi
  402992:	imul   eax,edx
  402995:	add    eax,DWORD PTR [ebp+0xc]
  402998:	mov    DWORD PTR [ebp+0xc],eax
  40299b:	mov    eax,DWORD PTR [ebp+0xc]
  40299e:	mov    edx,DWORD PTR [ebp-0x34]
  4029a1:	cmp    edx,eax
  4029a3:	jb     0x4028b6
  4029a9:	mov    eax,DWORD PTR [ebp-0x5c]
  4029ac:	mov    edx,DWORD PTR [ebp-0x34]
  4029af:	xor    eax,esi
  4029b1:	add    eax,edi
  4029b3:	imul   eax,edx
  4029b6:	mov    edx,DWORD PTR [ebp-0x2c]
  4029b9:	xor    edx,esi
  4029bb:	add    edx,edi
  4029bd:	or     eax,edx
  4029bf:	mov    edx,DWORD PTR [ebp-0x20]
  4029c2:	xor    edx,esi
  4029c4:	add    eax,edx
  4029c6:	mov    edx,DWORD PTR [ebp-0x20]
  4029c9:	xor    edx,esi
  4029cb:	add    eax,edx
  4029cd:	mov    edx,DWORD PTR [ebp+0x10]
  4029d0:	lea    eax,[eax+edx*1+0x64e5c0]
  4029d7:	jmp    0x4029eb
  4029dc:	mov    eax,DWORD PTR [ebp-0x20]
  4029df:	mov    edx,DWORD PTR [ebp+0x10]
  4029e2:	xor    eax,esi
  4029e4:	lea    eax,[eax+edx*1+0x3272e0]
  4029eb:	mov    DWORD PTR [ebp+0x10],eax
  4029ee:	jmp    0x402803
  4029f3:	mov    eax,DWORD PTR [ebp-0x18]
  4029f6:	mov    edx,DWORD PTR [ebp-0x40]
  4029f9:	xor    edx,esi
  4029fb:	lea    ecx,[ecx+edx*1+0x3272e0]
  402a02:	lea    edx,[ecx-0x3272e0]
  402a08:	xor    edx,esi
  402a0a:	cmp    edx,0xf89c95b9
  402a10:	jne    0x4027a4
  402a16:	mov    ecx,DWORD PTR [ebp-0x1c]
  402a19:	mov    edx,DWORD PTR [ebp-0x40]
  402a1c:	mov    ebx,DWORD PTR [ebp-0x1c]
  402a1f:	xor    edx,esi
  402a21:	mov    dl,BYTE PTR [edx+eax*1+0x3272e0]
  402a28:	xor    ecx,esi
  402a2a:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  402a31:	xor    ebx,esi
  402a33:	mov    BYTE PTR [ebx+eax*1+0x3272e0],dl
  402a3a:	mov    edx,DWORD PTR [ebp-0x40]
  402a3d:	xor    edx,esi
  402a3f:	mov    BYTE PTR [edx+eax*1+0x3272e0],cl
  402a46:	mov    eax,DWORD PTR [ebp-0x40]
  402a49:	mov    eax,DWORD PTR [ebp-0x8]
  402a4c:	xor    eax,esi
  402a4e:	add    eax,edi
  402a50:	mov    ds:0x42e397,eax
  402a55:	mov    eax,DWORD PTR [ebp-0x8]
  402a58:	xor    eax,esi
  402a5a:	add    eax,edi
  402a5c:	mov    ds:0x42e38f,eax
  402a61:	lea    eax,[ebp-0x44]
  402a64:	mov    DWORD PTR [ebp-0x90],eax
  402a6a:	lea    eax,[ebp+0x4]
  402a6d:	mov    DWORD PTR [ebp-0x44],eax
  402a70:	mov    eax,DWORD PTR [ebp-0x44]
  402a73:	test   eax,eax
  402a75:	je     0x402ba1
  402a7b:	mov    DWORD PTR [ebp-0xa0],0xf152c30
  402a85:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  402a8f:	mov    DWORD PTR [ebp-0x8c],0x373fc21
  402a99:	mov    DWORD PTR [ebp-0x94],0x72670a11
  402aa3:	call   0x40c40e
  402aa8:	mov    eax,DWORD PTR [ebp-0x24]
  402aab:	mov    eax,DWORD PTR [ebp-0xc]
  402aae:	mov    eax,DWORD PTR [ebp-0x8]
  402ab1:	mov    DWORD PTR [ebp+0xc],eax
  402ab4:	mov    eax,eax
  402ab6:	mov    eax,ds:0x42e313
  402abb:	mov    eax,DWORD PTR [eax+0x1c8]
  402ac1:	mov    eax,DWORD PTR [eax]
  402ac3:	cdq    
  402ac4:	mov    ebx,eax
  402ac6:	mov    eax,0xfabdbee9
  402acb:	add    ebx,eax
  402acd:	adc    edx,0xffffffff
  402ad0:	and    DWORD PTR [ebp-0x10],0x0
  402ad4:	xor    edx,0x0
  402ad7:	mov    DWORD PTR [ebp-0x6c],edx
  402ada:	mov    edx,DWORD PTR [ebp+0xc]
  402add:	mov    DWORD PTR [ebp-0x14],edx
  402ae0:	mov    ecx,0x8a29a12b
  402ae5:	xor    ebx,ecx
  402ae7:	add    DWORD PTR [ebp-0x14],eax
  402aea:	mov    edx,DWORD PTR [ebp-0x14]
  402aed:	adc    DWORD PTR [ebp-0x10],0xffffffff
  402af1:	xor    edx,ecx
  402af3:	mov    DWORD PTR [ebp-0x58],edx
  402af6:	mov    edx,DWORD PTR [ebp-0x10]
  402af9:	xor    edx,0x0
  402afc:	mov    DWORD PTR [ebp-0x54],edx
  402aff:	cmp    DWORD PTR [ebp-0x58],ebx
  402b02:	jne    0x402b14
  402b08:	mov    edx,DWORD PTR [ebp-0x6c]
  402b0b:	cmp    DWORD PTR [ebp-0x54],edx
  402b0e:	je     0x402b43
  402b14:	mov    edx,DWORD PTR ds:0x42e313
  402b1a:	mov    edx,DWORD PTR [edx+0x1c0]
  402b20:	mov    edx,DWORD PTR [edx]
  402b22:	xor    ebx,ebx
  402b24:	add    edx,eax
  402b26:	adc    ebx,0xffffffff
  402b29:	xor    edx,ecx
  402b2b:	xor    ebx,0x0
  402b2e:	cmp    edx,0x70941fc1
  402b34:	jne    0x402ba1
  402b3a:	cmp    ebx,0xffffffff
  402b3d:	jne    0x402ba1
  402b43:	mov    edx,DWORD PTR ds:0x42e38f
  402b49:	mov    ebx,DWORD PTR ds:0x42e397
  402b4f:	xor    edx,ebx
  402b51:	mov    DWORD PTR ds:0x42e38f,edx
  402b57:	mov    ebx,DWORD PTR ds:0x42e38f
  402b5d:	mov    edx,DWORD PTR [ebp-0x44]
  402b60:	add    DWORD PTR [edx],ebx
  402b62:	mov    edx,DWORD PTR [ebp+0xc]
  402b65:	xor    esi,edx
  402b67:	mov    edx,DWORD PTR ds:0x42e38f
  402b6d:	add    esi,edi
  402b6f:	xor    ebx,ebx
  402b71:	add    esi,eax
  402b73:	adc    ebx,0xffffffff
  402b76:	xor    edi,edi
  402b78:	xor    esi,ecx
  402b7a:	xor    ebx,0x0
  402b7d:	add    edx,eax
  402b7f:	adc    edi,0xffffffff
  402b82:	xor    edx,ecx
  402b84:	xor    edi,0x0
  402b87:	cmp    edx,esi
  402b89:	jne    0x402ba1
  402b8f:	cmp    edi,ebx
  402b91:	jne    0x402ba1
  402b97:	mov    eax,ds:0x42e38f
  402b9c:	mov    ds:0x42e397,eax
  402ba1:	mov    eax,ds:0x42e313
  402ba6:	push   0x4
  402ba8:	add    eax,0x1cc
  402bad:	push   eax
  402bae:	lea    eax,[ebp-0x24]
  402bb1:	push   eax
  402bb2:	call   0x402bd1
  402bb7:	mov    eax,DWORD PTR [ebp-0x24]
  402bba:	mov    eax,DWORD PTR [eax]
  402bbc:	pop    ebx
  402bbd:	pop    esi
  402bbe:	pop    edi
  402bbf:	leave  
  402bc0:	ret    0xc
  402bc3:	xor    eax,eax
  402bc5:	and    DWORD PTR ds:0x42901c,0x42d008
  402bcf:	inc    eax
  402bd0:	ret    
  402bd1:	push   ebp
  402bd2:	mov    ebp,esp
  402bd4:	sub    esp,0x10
  402bd7:	mov    eax,0xf89c85b9
  402bdc:	mov    DWORD PTR [ebp-0x4],eax
  402bdf:	sub    DWORD PTR ds:0x42c01c,ebx
  402be5:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  402bec:	mov    ecx,DWORD PTR [ebp-0x4]
  402bef:	mov    edx,DWORD PTR ds:0x42a010
  402bf5:	sbb    edx,DWORD PTR ds:0x42b014
  402bfb:	mov    DWORD PTR ds:0x42a010,edx
  402c01:	push   esi
  402c02:	adc    edx,DWORD PTR ds:0x42c014
  402c08:	mov    edx,0x7510899
  402c0d:	xor    ecx,edx
  402c0f:	mov    esi,0x3272e0
  402c14:	and    DWORD PTR ds:0x42a01c,0x483b
  402c1e:	push   edi
  402c1f:	or     DWORD PTR ds:0x42b018,ebx
  402c25:	mov    edi,DWORD PTR [ebp+0x10]
  402c28:	sbb    DWORD PTR ds:0x42c018,0x6469
  402c32:	add    ecx,esi
  402c34:	mov    DWORD PTR ds:0x42b00c,0x7c8c
  402c3e:	cmp    ecx,edi
  402c40:	mov    DWORD PTR ds:0x42900c,0x2470
  402c4a:	je     0x405144
  402c50:	and    DWORD PTR ds:0x42b000,0x0
  402c5a:	jmp    0x402c6c
  402c5f:	mov    edi,DWORD PTR ds:0x42b000
  402c65:	inc    edi
  402c66:	mov    DWORD PTR ds:0x42b000,edi
  402c6c:	cmp    DWORD PTR ds:0x42b000,0x1d
  402c73:	jae    0x402c9f
  402c79:	cmp    DWORD PTR ds:0x42b000,0x2c
  402c80:	jne    0x402c94
  402c86:	push   0x1
  402c88:	push   DWORD PTR [ebp-0x20]
  402c8b:	push   DWORD PTR [ebp-0x10]
  402c8e:	call   DWORD PTR ds:0x42ec77
  402c94:	jmp    0x402c5f
  402c99:	sub    edi,DWORD PTR ds:0x42c004
  402c9f:	mov    ecx,DWORD PTR [ebp-0x4]
  402ca2:	xor    DWORD PTR ds:0x42b018,0x2a2c
  402cac:	mov    edi,DWORD PTR [ebp+0x10]
  402caf:	jmp    0x405034
  402cb4:	inc    edi
  402cb5:	stos   BYTE PTR es:[edi],al
  402cb6:	pop    ss
  402cb7:	mov    edx,0x77b7a777
  402cbc:	mov    ebp,0x58deab7c
  402cc1:	enter  0xb45c,0x7a
  402cc5:	jp     0x402d41
  402cc7:	jp     0x402ccb
  402cc9:	pop    edi
  402cca:	jp     0x402d46
  402ccc:	adc    DWORD PTR [eax],ebp
  402cce:	pop    ss
  402ccf:	cmp    eax,0x2f1b2115
  402cd4:	popa   
  402cd5:	cmp    ah,BYTE PTR [ebp+0x66]
  402cd8:	pop    es
  402cd9:	pusha  
  402cda:	push   0x6a
  402cdc:	imul   esi,DWORD PTR [edx],0x6cfdd8c1
  402ce2:	inc    esp
  402ce3:	imul   edi,DWORD PTR [ebp+0x5b],0xffffffac
  402ce7:	jl     0x402d52
  402ce9:	push   ebp
  402cea:	iret   
  402ceb:	pop    ecx
  402cec:	dec    edx
  402ced:	cmp    al,0x88
  402cef:	cli    
  402cf0:	xchg   DWORD PTR [esi+0x57],esi
  402cf3:	dec    ecx
  402cf4:	jg     0x402d2d
  402cf6:	mov    WORD PTR [esi+0x3ba2bc7f],fs
  402cfc:	sub    bh,bh
  402cfe:	data16 fdivr st,st(2)
  402d01:	push   ebx
  402d02:	jg     0x402d22
  402d04:	jmp    0xe9faf63e
  402d09:	xchg   DWORD PTR [ebx],edx
  402d0b:	fimul  WORD PTR [ebx-0x54aaf0db]
  402d11:	mov    al,al
  402d13:	imul   DWORD PTR [ecx-0x27]
  402d16:	add    al,dl
  402d18:	push   cs
  402d19:	cli    
  402d1a:	es adc al,0x44
  402d1d:	or     BYTE PTR [esi],ah
  402d1f:	imul   esp,DWORD PTR [ebp+esi*4-0x51],0x13
  402d24:	pop    ebp
  402d25:	add    DWORD PTR [esi+0x2b45e5ff],esp
  402d2b:	jo     0x402d5f
  402d2d:	les    ebx,FWORD PTR [ebx-0xb]
  402d30:	sbb    bh,dl
  402d32:	je     0x402cf1
  402d34:	arpl   cx,bx
  402d36:	xchg   esp,eax
  402d37:	pop    edi
  402d38:	mov    edi,DWORD PTR [ebp+0x4d821007]
  402d3e:	repz sahf 
  402d40:	cmp    BYTE PTR [edx+0x73],dh
  402d43:	or     ebx,edx
  402d45:	sub    DWORD PTR [edx-0x77],edx
  402d48:	xor    BYTE PTR [ebx],dh
  402d4a:	push   eax
  402d4b:	jecxz  0x402d1c
  402d4d:	mov    ah,BYTE PTR ds:0xc8b7cc85
  402d53:	test   BYTE PTR [ebp-0x20],ch
  402d56:	inc    ecx
  402d57:	push   edx
  402d58:	dec    eax
  402d59:	or     BYTE PTR [esi],bh
  402d5b:	repz add ebp,DWORD PTR ss:[ecx+0x4ca7ca4b]
  402d63:	fadd   QWORD PTR [eax]
  402d65:	push   esi
  402d66:	stc    
  402d67:	push   edx
  402d68:	push   esi
  402d69:	mov    eax,ds:0xf4bf64f5
  402d6e:	inc    edx
  402d6f:	adc    al,0xab
  402d71:	adc    al,0x18
  402d73:	fst    QWORD PTR [esi-0x6ce651eb]
  402d79:	sbb    DWORD PTR [ecx+0x73],ecx
  402d7c:	dec    ebp
  402d7d:	sub    ah,ch
  402d7f:	fisubr WORD PTR [eax+0x55cbcf29]
  402d85:	or     DWORD PTR [ebx],0x23
  402d88:	out    dx,eax
  402d89:	clc    
  402d8a:	mov    bl,0xb8
  402d8c:	mov    ds:0x58468e56,al
  402d91:	outs   dx,BYTE PTR ds:[esi]
  402d92:	(bad)  
  402d93:	out    dx,al
  402d94:	cmp    DWORD PTR [eax+0x367c15e0],0xffffff97
  402d9b:	pop    ss
  402d9c:	ficom  WORD PTR [ecx+edx*4-0x71580f4]
  402da3:	jae    0x402d3b
  402da5:	test   bh,0xdd
  402da8:	push   eax
  402da9:	call   0x9ac28962
  402dae:	(bad)  
  402daf:	xchg   edi,eax
  402db0:	xchg   BYTE PTR [edx+esi*4+0x64764e45],dl
  402db7:	enter  0x6147,0xd7
  402dbb:	adc    dh,BYTE PTR ds:[eax-0x8]
  402dbf:	mov    dl,0x1a
  402dc1:	cmp    dl,BYTE PTR [ebx-0x73230208]
  402dc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dc8:	inc    ebx
  402dc9:	xchg   esi,eax
  402dca:	sub    bh,BYTE PTR [esi-0x65907b35]
  402dd0:	and    DWORD PTR [edx+0x16],edi
  402dd3:	adc    dh,BYTE PTR ds:[ebp+0x7dcaa4e5]
  402dda:	ret    0x3718
  402ddd:	mov    ecx,eax
  402ddf:	and    al,0x65
  402de1:	retf   
  402de2:	lods   eax,DWORD PTR ds:[esi]
  402de3:	stos   DWORD PTR es:[edi],eax
  402de4:	leave  
  402de5:	cwde   
  402de6:	jno    0x402d68
  402de8:	pop    esp
  402de9:	retf   0xca55
  402dec:	mov    edi,0xb86e3442
  402df1:	das    
  402df2:	dec    esi
  402df3:	inc    ebx
  402df4:	pop    esi
  402df5:	push   ds
  402df6:	shl    BYTE PTR [ebx-0x6a865006],1
  402dfc:	int    0x68
  402dfe:	popa   
  402dff:	cmp    dh,ah
  402e01:	mov    edi,gs
  402e03:	jo     0x402d89
  402e05:	jecxz  0x402dbd
  402e07:	add    al,0x93
  402e09:	push   0xc59d112f
  402e0e:	push   edi
  402e0f:	mov    es,esp
  402e11:	dec    ebp
  402e12:	call   0xde63:0x166d5343
  402e19:	xchg   ecx,eax
  402e1a:	inc    edi
  402e1b:	popa   
  402e1c:	inc    esp
  402e1d:	jl     0x402e05
  402e1f:	out    0x3d,al
  402e21:	push   edi
  402e22:	and    DWORD PTR [ebp-0x20],edx
  402e25:	mov    BYTE PTR [esi],bl
  402e27:	int3   
  402e28:	cmp    BYTE PTR [edx-0x3574f0ca],ch
  402e2e:	push   eax
  402e2f:	repz or ecx,DWORD PTR [edi+0x7e]
  402e33:	or     al,0xc8
  402e35:	aam    0x1f
  402e37:	sub    eax,0xd417b220
  402e3c:	jno    0x402e91
  402e3e:	and    BYTE PTR [esi],ch
  402e40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e41:	push   eax
  402e42:	or     DWORD PTR [eax-0x22],0x640531f4
  402e49:	push   esp
  402e4a:	imul   esp,DWORD PTR [edx-0x1d18135c],0xffffffbb
  402e51:	sbb    al,0x6e
  402e53:	push   ecx
  402e54:	push   0xf1f9f3bd
  402e59:	pop    esp
  402e5a:	outs   dx,DWORD PTR ds:[esi]
  402e5b:	jne    0x402ea4
  402e5d:	push   ss
  402e5e:	mov    esp,0x9921efa5
  402e63:	sbb    BYTE PTR [esi-0x5d4585ca],bl
  402e69:	js     0x402df5
  402e6b:	and    DWORD PTR [ecx+0x4a726365],eax
  402e71:	sub    BYTE PTR [ebx],dl
  402e73:	push   es
  402e74:	std    
  402e75:	popf   
  402e76:	push   esp
  402e77:	dec    esp
  402e78:	xchg   edi,eax
  402e79:	test   BYTE PTR [ecx-0x23],dl
  402e7c:	inc    esi
  402e7d:	test   DWORD PTR [esi+0x6483f960],edx
  402e83:	jle    0x402ea7
  402e85:	mov    al,ds:0x30a0cf4
  402e8a:	clc    
  402e8b:	out    dx,eax
  402e8c:	push   ss
  402e8d:	retf   0xfd03
  402e90:	sub    cl,BYTE PTR [eax]
  402e92:	fadd   QWORD PTR fs:[edx+eiz*1]
  402e96:	cmp    al,0x3f
  402e98:	and    al,0x84
  402e9a:	sahf   
  402e9b:	mov    eax,0x63fdcbf0
  402ea0:	out    0x9c,al
  402ea2:	xor    ch,BYTE PTR [edi+0x2fd1c4ec]
  402ea8:	or     eax,0x35cc43fe
  402ead:	repnz dec edi
  402eaf:	pop    edx
  402eb0:	popf   
  402eb1:	lea    ecx,[edx+eax*4]
  402eb4:	ins    DWORD PTR es:[edi],dx
  402eb5:	jecxz  0x402e5e
  402eb7:	or     edx,eax
  402eb9:	cmc    
  402eba:	lea    esi,[edi-0x3cc54daf]
  402ec0:	mov    eax,0xe35f9360
  402ec5:	shl    BYTE PTR [edx],1
  402ec7:	xchg   DWORD PTR [eax+ebx*8],edi
  402eca:	or     BYTE PTR ds:0x900f0486,0x3
  402ed1:	mov    bh,0x73
  402ed3:	xchg   ebx,eax
  402ed4:	cmp    al,0x56
  402ed6:	jl     0x402eaf
  402ed8:	imul   ebp,DWORD PTR [ebx+eax*4+0x5b133729],0x2e
  402ee0:	cs mov ebp,0x770460a5
  402ee6:	rol    BYTE PTR [esi],cl
  402ee8:	shl    esi,0xa5
  402eeb:	repnz mov ah,0xac
  402eee:	sbb    BYTE PTR [ebp+eax*8-0x64d1efb6],al
  402ef5:	push   ebx
  402ef6:	loop   0x402ee2
  402ef8:	mov    al,ds:0x120a6189
  402efd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402efe:	enter  0xdba9,0x7c
  402f02:	repz push 0x7a
  402f05:	inc    ecx
  402f06:	fsubr  DWORD PTR [edx+ecx*2-0x76]
  402f0a:	lds    esi,FWORD PTR [esi+0x2b21f04a]
  402f10:	lods   eax,DWORD PTR ss:[esi]
  402f12:	imul   esi,eax,0xfffffff2
  402f15:	add    ebp,DWORD PTR [ebp-0x4e]
  402f18:	test   al,0x39
  402f1a:	pusha  
  402f1b:	out    dx,al
  402f1c:	test   BYTE PTR [eax-0x5fd39469],al
  402f22:	sub    eax,0x8f05582b
  402f27:	mov    edx,ebp
  402f29:	mov    bh,0x86
  402f2b:	icebp  
  402f2c:	shl    edx,1
  402f2e:	js     0x402f56
  402f30:	pop    ds
  402f31:	mov    BYTE PTR [ebp+ebp*4-0x4d],dh
  402f35:	imul   esi,DWORD PTR [edi],0x2c75b69a
  402f3b:	dec    esp
  402f3c:	mov    ebp,0x6da7b105
  402f41:	inc    eax
  402f42:	jle    0x402eec
  402f44:	push   cs
  402f45:	dec    esi
  402f46:	adc    esi,DWORD PTR [esi]
  402f48:	call   0x1ea1:0x878715ef
  402f4f:	dec    edi
  402f50:	hlt    
  402f51:	inc    eax
  402f52:	mov    eax,ds:0x12a064ae
  402f57:	push   esp
  402f58:	sub    esp,DWORD PTR [esi+ebx*4-0x4e]
  402f5c:	ds test edi,edx
  402f5f:	jnp    0x402f86
  402f61:	xchg   ebx,eax
  402f62:	mov    ah,0xa3
  402f64:	inc    ecx
  402f65:	pop    ds
  402f66:	sbb    BYTE PTR [edi-0x9],ch
  402f69:	mov    ds:0xc8f22f92,al
  402f6e:	test   DWORD PTR [edi+esi*8],0x4eaf403c
  402f75:	je     0x402f77
  402f77:	pop    edi
  402f78:	add    esp,DWORD PTR ds:0x2aea8710
  402f7e:	sub    al,0x2d
  402f80:	jle    0x402f5a
  402f82:	nop
  402f83:	mov    al,0xe4
  402f85:	and    al,0x95
  402f87:	cwde   
  402f88:	xchg   edx,eax
  402f89:	adc    DWORD PTR [ecx+0x87c6100],ebx
  402f8f:	push   esp
  402f90:	pop    ebx
  402f91:	shr    bh,cl
  402f93:	fmul   QWORD PTR [esi+ebx*8]
  402f96:	div    DWORD PTR [edx-0x62]
  402f99:	rcr    BYTE PTR [eax],cl
  402f9b:	push   edx
  402f9c:	pop    ecx
  402f9d:	out    0x6c,eax
  402f9f:	mov    bh,0xd3
  402fa1:	pop    edx
  402fa2:	call   0x757edcff
  402fa7:	out    dx,al
  402fa8:	ret    0x1dec
  402fab:	out    0x19,eax
  402fad:	mov    al,0x9a
  402faf:	xchg   esp,eax
  402fb0:	xchg   edi,eax
  402fb1:	lods   al,BYTE PTR ds:[esi]
  402fb2:	xchg   esi,eax
  402fb3:	sub    al,0x75
  402fb5:	clc    
  402fb6:	jmp    0x402f85
  402fb8:	out    dx,al
  402fb9:	int    0x66
  402fbb:	test   al,0x60
  402fbd:	lea    edx,[ebx]
  402fbf:	sbb    DWORD PTR [ebp-0x7e],ebp
  402fc2:	add    DWORD PTR [edx+0x14],0xf84b09fc
  402fc9:	cmp    eax,DWORD PTR [eax]
  402fcb:	add    al,0x5b
  402fcd:	addr16 jl 0x402fd4
  402fd0:	mov    bl,0x5b
  402fd2:	es mov dl,0x91
  402fd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fd6:	pop    edi
  402fd7:	(bad)  
  402fd9:	bound  esi,QWORD PTR [esi-0x74]
  402fdc:	sub    eax,0xdfd51733
  402fe1:	dec    si
  402fe3:	adc    eax,0x723bbf24
  402fe8:	retf   
  402fe9:	pusha  
  402fea:	mov    edi,DWORD PTR [eax]
  402fec:	loop   0x402fd0
  402fee:	sub    esp,edx
  402ff0:	and    eax,0xfcd6578f
  402ff5:	mov    eax,0x38f822ce
  402ffa:	mov    ah,0x5b
  402ffc:	scas   al,BYTE PTR es:[edi]
  402ffd:	and    DWORD PTR [ebx-0x16],0xffffffda
  403001:	popa   
  403002:	sbb    eax,0x8aabaaac
  403007:	xlat   BYTE PTR ds:[ebx]
  403008:	clc    
  403009:	pop    ss
  40300a:	jmp    0x5ec8:0xaa7e8e89
  403011:	lods   eax,DWORD PTR ds:[esi]
  403012:	xchg   edx,eax
  403013:	mov    ch,dh
  403015:	lock pop edi
  403017:	sti    
  403018:	xchg   BYTE PTR [edi+ebp*8],bh
  40301b:	mov    dl,0xe1
  40301d:	sub    DWORD PTR [ecx-0x113b63ed],edi
  403023:	xor    eax,0xcc706f8e
  403028:	xor    esp,DWORD PTR [ecx]
  40302a:	shl    esp,0xbc
  40302d:	add    DWORD PTR [eax],ebx
  40302f:	inc    ecx
  403030:	mov    ah,0xf8
  403032:	push   0xffffffb5
  403034:	sahf   
  403035:	dec    ecx
  403036:	sbb    BYTE PTR [ecx-0x4a],al
  403039:	sbb    dh,ch
  40303b:	jno    0x40307c
  40303d:	std    
  40303e:	push   ebx
  40303f:	dec    ebx
  403040:	or     dl,cl
  403042:	inc    dl
  403044:	pop    ecx
  403045:	adc    dl,BYTE PTR [ecx]
  403047:	cmp    ebp,eax
  403049:	sbb    BYTE PTR [esi+ecx*2],bl
  40304c:	(bad)  
  40304d:	sbb    ah,bl
  40304f:	pop    edx
  403050:	mov    ds:0x7fbd9402,eax
  403055:	retf   0x75b0
  403058:	retf   
  403059:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40305a:	fisttp DWORD PTR [ecx]
  40305c:	mov    esp,DWORD PTR [ecx-0x1eff4117]
  403062:	pop    ebx
  403063:	or     bl,bh
  403065:	out    0xc0,al
  403067:	fadd   QWORD PTR [edi]
  403069:	inc    esi
  40306a:	(bad)  
  40306b:	lea    ebx,ds:0x65528334
  403071:	int    0x9
  403073:	xlat   BYTE PTR ds:[ebx]
  403074:	push   eax
  403075:	pop    esp
  403076:	aaa    
  403077:	xchg   esi,eax
  403078:	push   ebx
  403079:	in     al,0x4a
  40307b:	test   BYTE PTR [esi-0x3bbe333d],ah
  403081:	aaa    
  403082:	jle    0x403089
  403084:	in     eax,0x91
  403086:	sbb    DWORD PTR [edx+ecx*2-0x21],ebp
  40308a:	das    
  40308b:	addr16 (bad) 
  40308d:	mov    cl,0x96
  40308f:	add    bh,BYTE PTR [eax-0x5e]
  403092:	pushf  
  403093:	into   
  403094:	clc    
  403095:	iret   
  403096:	imul   edi,DWORD PTR [ebp+0x37],0xb0e76e65
  40309d:	je     0x4030c6
  40309f:	dec    esi
  4030a0:	lods   eax,DWORD PTR ds:[esi]
  4030a1:	test   esp,edx
  4030a3:	jbe    0x40303b
  4030a5:	scas   al,BYTE PTR es:[edi]
  4030a6:	fs ret 0x91f3
  4030aa:	test   eax,0xc74831fe
  4030af:	daa    
  4030b0:	es loop 0x403077
  4030b3:	mov    es:0x74a32d5e,eax
  4030b9:	loop   0x403131
  4030bb:	gs add al,cl
  4030be:	call   0xf8c5ab67
  4030c3:	scas   al,BYTE PTR es:[edi]
  4030c4:	sub    cl,ah
  4030c6:	add    esp,DWORD PTR [esi+0x4a]
  4030c9:	xor    DWORD PTR [esi+0x49343797],ecx
  4030cf:	mov    esp,0xa44f1356
  4030d4:	in     al,dx
  4030d5:	dec    ecx
  4030d6:	dec    esp
  4030d7:	xchg   edi,eax
  4030d8:	mov    esp,0x307de629
  4030dd:	lea    ebp,[esi-0x3b]
  4030e0:	hlt    
  4030e1:	jo     0x4030c3
  4030e3:	cwde   
  4030e4:	inc    edi
  4030e5:	mov    esi,0x556e796a
  4030ea:	xchg   DWORD PTR [edx],esp
  4030ec:	jnp    0x4030d2
  4030ee:	push   edi
  4030ef:	sub    DWORD PTR [eax+0x77],0xf18065f7
  4030f6:	repnz pop eax
  4030f8:	lds    edx,FWORD PTR [ecx-0x843de72]
  4030fe:	xchg   ebx,eax
  4030ff:	add    BYTE PTR [ebx-0x662e6a89],bl
  403105:	(bad)  
  403106:	jle    0x40317b
  403108:	xor    BYTE PTR [ebx-0x41bd762],dh
  40310e:	xchg   esi,eax
  40310f:	or     ecx,eax
  403111:	inc    edi
  403112:	xor    al,0xb7
  403114:	jp     0x4030ee
  403116:	push   ebx
  403117:	(bad)  
  403118:	jmp    0x40318d
  40311a:	les    ebx,FWORD PTR [edx-0x52e779d3]
  403120:	mov    al,0xe6
  403122:	add    DWORD PTR [ecx+eiz*1],ebx
  403125:	shl    edi,cl
  403127:	mov    dl,0x4a
  403129:	std    
  40312a:	add    BYTE PTR [edx+0x52],dl
  40312d:	push   es
  40312e:	icebp  
  40312f:	jge    0x403145
  403131:	add    BYTE PTR [eax+0x4912fadf],0x49
  403138:	shr    DWORD PTR [eax],1
  40313a:	cdq    
  40313b:	mov    edi,0x1b798f1e
  403140:	sub    dh,BYTE PTR [ebx+ebp*8-0x4f]
  403144:	sub    DWORD PTR [eax],ebp
  403146:	cmp    eax,0xbf92c35
  40314b:	stos   BYTE PTR es:[edi],al
  40314c:	add    ch,dh
  40314e:	mov    al,dl
  403150:	aas    
  403151:	addr16 and eax,0xaa0a77a7
  403157:	xchg   DWORD PTR [esi-0x5b83535b],ecx
  40315d:	sbb    esi,DWORD PTR [ebx+0x3403fec4]
  403163:	aaa    
  403164:	imul   eax,DWORD PTR [edi-0x34],0xd
  403168:	(bad)  
  403169:	push   ss
  40316a:	aas    
  40316b:	rcl    edi,1
  40316d:	(bad)  [esp+ecx*4+0x2d]
  403171:	js     0x403101
  403173:	cmp    BYTE PTR [edx+0x4506f140],al
  403179:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40317a:	sub    bl,BYTE PTR [ecx-0x4b339d95]
  403180:	and    BYTE PTR [eax-0x7de8b14e],cl
  403186:	inc    esp
  403187:	test   ah,ch
  403189:	jge    0x403191
  40318b:	push   ecx
  40318c:	fimul  WORD PTR [ecx+ebp*1-0x7f0e4fa9]
  403193:	lock or BYTE PTR [edi+ebx*4],ah
  403197:	adc    BYTE PTR [ebx+esi*8],0x4a
  40319b:	outs   dx,DWORD PTR ds:[esi]
  40319c:	lea    ecx,[eax]
  40319e:	or     dl,BYTE PTR [eax-0x27]
  4031a1:	test   eax,0x8023e19
  4031a6:	lds    edx,FWORD PTR [eax-0x4f0d4417]
  4031ac:	cmp    al,0x50
  4031ae:	and    eax,0xa091b92c
  4031b3:	dec    esp
  4031b4:	sbb    DWORD PTR [ebp+edi*8+0x1344317],edx
  4031bb:	xlat   BYTE PTR ds:[ebx]
  4031bc:	jne    0x403212
  4031be:	xor    al,0x34
  4031c0:	push   edi
  4031c1:	retf   0xcf5c
  4031c4:	push   esp
  4031c5:	cld    
  4031c6:	mov    cs,WORD PTR [edx-0x508ddce1]
  4031cc:	into   
  4031cd:	ds jne 0x4031f0
  4031d0:	fs (bad) 
  4031d2:	int3   
  4031d3:	fstp   TBYTE PTR [esi-0x55]
  4031d6:	xchg   ebp,eax
  4031d7:	rcr    DWORD PTR [esi],0xc0
  4031da:	xchg   esp,eax
  4031db:	push   ecx
  4031dc:	jmp    0x403246
  4031de:	mov    eax,0x41915cfe
  4031e3:	jg     0x4031d2
  4031e5:	daa    
  4031e6:	popf   
  4031e7:	push   cs
  4031e8:	ins    DWORD PTR es:[edi],dx
  4031e9:	call   0x900e0599
  4031ee:	mov    cs,WORD PTR [ecx]
  4031f0:	xlat   BYTE PTR ds:[ebx]
  4031f1:	pop    ecx
  4031f2:	pop    ds
  4031f3:	sub    BYTE PTR [edx],bh
  4031f5:	mov    ch,0xd2
  4031f7:	sub    eax,0xca86420b
  4031fc:	in     eax,dx
  4031fd:	je     0x40324a
  4031ff:	jecxz  0x4031ec
  403201:	mov    ds:0xe19716a9,al
  403206:	fdivr  QWORD PTR [esi-0x547b7226]
  40320c:	das    
  40320d:	inc    esp
  40320e:	xor    eax,0x79f8116a
  403213:	pop    ebp
  403214:	inc    ebx
  403215:	(bad)  
  403216:	call   0x1dfb:0xbd9a34b4
  40321d:	repnz push 0xffffff91
  403220:	stc    
  403221:	sar    DWORD PTR [edx],1
  403223:	nop
  403224:	sti    
  403225:	xchg   ebx,eax
  403226:	pop    es
  403227:	sbb    dh,al
  403229:	jecxz  0x403236
  40322b:	inc    ebp
  40322c:	out    0xb5,al
  40322e:	test   DWORD PTR [esi+0x6d113586],edx
  403234:	inc    edx
  403235:	add    DWORD PTR ds:0xd35071f1,ebx
  40323b:	out    0x89,al
  40323d:	and    dh,al
  40323f:	mov    edx,0x5caa17a9
  403244:	xchg   ebx,eax
  403245:	mov    esp,0x6d486d85
  40324a:	and    ecx,DWORD PTR [bp+0x1ddb]
  40324f:	sub    eax,0x8f807bd7
  403254:	mov    edi,0xd2636ccb
  403259:	loop   0x403277
  40325b:	adc    bh,dh
  40325d:	dec    ebx
  40325e:	mov    esp,0x9b8c2e11
  403263:	test   eax,0xe8c82103
  403268:	inc    ebx
  403269:	les    edi,FWORD PTR [edi]
  40326b:	scas   eax,DWORD PTR es:[edi]
  40326c:	fwait
  40326d:	pop    edx
  40326e:	sbb    BYTE PTR [eax-0x68],bl
  403271:	popa   
  403272:	push   ecx
  403273:	jbe    0x40323f
  403275:	test   eax,0x4b986674
  40327a:	or     BYTE PTR ds:0x48ae7b98,bl
  403280:	leave  
  403281:	or     ah,BYTE PTR [esi+0x4e06c6a7]
  403287:	(bad)  
  403288:	mov    ebp,0x6984ed35
  40328d:	dec    ebx
  40328e:	shl    DWORD PTR [edx],cl
  403290:	jb     0x4032fa
  403292:	repnz scas al,BYTE PTR es:[edi]
  403294:	mov    dl,0x8d
  403296:	int3   
  403297:	jp     0x4032cd
  403299:	ja     0x40329e
  40329b:	push   edi
  40329c:	cmc    
  40329d:	jge    0x40327d
  40329f:	popf   
  4032a0:	and    cl,bl
  4032a2:	pop    ebp
  4032a3:	adc    eax,0x26d8ba70
  4032a8:	ins    BYTE PTR es:[edi],dx
  4032a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032aa:	ret    
  4032ab:	and    al,0x42
  4032ad:	mov    edx,0x179842ec
  4032b2:	sub    al,0xe0
  4032b4:	adc    DWORD PTR [esi+ebx*4+0x3961c20f],0xffffffb6
  4032bc:	ss pop ds
  4032be:	cs test al,0x9c
  4032c1:	xchg   esi,eax
  4032c2:	test   ah,0xf5
  4032c5:	or     eax,0xf83f2fc2
  4032ca:	cmp    BYTE PTR [ecx+0x6e0103a2],bl
  4032d0:	ins    BYTE PTR es:[edi],dx
  4032d1:	xlat   BYTE PTR ds:[ebx]
  4032d2:	xchg   edx,eax
  4032d3:	lods   eax,DWORD PTR ds:[esi]
  4032d4:	jge    0x4032b6
  4032d6:	ret    
  4032d7:	test   BYTE PTR [ecx+0x1c],bl
  4032da:	std    
  4032db:	cld    
  4032dc:	inc    eax
  4032dd:	pop    ebx
  4032de:	inc    eax
  4032df:	pop    es
  4032e0:	and    BYTE PTR [edx+eiz*8],al
  4032e3:	xor    cl,dh
  4032e5:	sysexit 
  4032e7:	enter  0xcb4,0x7d
  4032eb:	clc    
  4032ec:	pop    ebp
  4032ed:	mov    DWORD PTR [ecx-0x51104759],edi
  4032f3:	test   DWORD PTR [eax-0x4a419255],0x386fdd66
  4032fd:	int    0x10
  4032ff:	pop    ecx
  403300:	push   ebp
  403301:	in     eax,dx
  403302:	es dec esp
  403304:	adc    ecx,0x1d74bb83
  40330a:	xor    DWORD PTR [ecx+0x46],edx
  40330d:	sub    DWORD PTR [ecx-0x36],esp
  403310:	ins    DWORD PTR es:[edi],dx
  403311:	outs   dx,BYTE PTR ds:[esi]
  403312:	xchg   BYTE PTR [ebp-0x5d71a2e2],dl
  403318:	les    ecx,FWORD PTR [eax]
  40331a:	inc    esp
  40331c:	sub    BYTE PTR [edx+0x7eae0863],cl
  403322:	xor    edi,DWORD PTR [edx]
  403324:	icebp  
  403325:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403326:	inc    ebx
  403327:	int    0x1e
  403329:	int3   
  40332a:	xor    al,0xa0
  40332c:	jmp    0xcb25:0x285dbab5
  403333:	or     BYTE PTR [eax+0x16],bl
  403336:	jnp    0x403353
  403338:	jnp    0x40338b
  40333a:	mov    al,ds:0x19bff082
  40333f:	pop    sp
  403341:	push   0x7be63e27
  403346:	fwait
  403347:	xor    dl,BYTE PTR [ecx+0x4192acbd]
  40334d:	cmp    eax,0xb73ad28
  403352:	cdq    
  403353:	(bad)  
  403355:	or     eax,0x43734f0f
  40335a:	(bad)  
  40335b:	sbb    DWORD PTR [edx+edi*4],edx
  40335e:	jle    0x4033bd
  403360:	(bad)  
  403361:	lods   al,BYTE PTR ds:[esi]
  403362:	loopne 0x40335a
  403364:	dec    edx
  403365:	mov    ebp,DWORD PTR [eax]
  403367:	mov    dh,0xb8
  403369:	xchg   esi,eax
  40336a:	rol    DWORD PTR ds:[edx],cl
  40336d:	jle    0x403368
  40336f:	pop    ds
  403370:	scas   eax,DWORD PTR es:[edi]
  403371:	shl    BYTE PTR [edi+0x3a],0x87
  403375:	fwait
  403376:	inc    ebp
  403377:	std    
  403378:	xor    ebx,DWORD PTR [esi+0x78a2700b]
  40337e:	out    0x85,eax
  403380:	jae    0x4033b2
  403382:	push   edx
  403383:	jge    0x403350
  403385:	(bad)  
  403386:	ffree  st(5)
  403388:	or     al,0x3d
  40338a:	adc    dl,BYTE PTR [esi+0x2e2a8317]
  403390:	cmp    bl,BYTE PTR [ebx-0x3c]
  403393:	or     cl,BYTE PTR [edx]
  403395:	mov    ebx,0x81625056
  40339a:	fsub   DWORD PTR [esi-0x2a4eaa5b]
  4033a0:	icebp  
  4033a1:	ins    DWORD PTR es:[edi],dx
  4033a2:	jnp    0x40338f
  4033a4:	and    esp,ecx
  4033a6:	push   esi
  4033a7:	xor    cl,cl
  4033a9:	rcl    DWORD PTR [esi+0x5cd47b0f],cl
  4033af:	inc    eax
  4033b0:	mov    ds:0xe33e743c,al
  4033b5:	xchg   DWORD PTR [edx],edi
  4033b7:	push   0xa493338d
  4033bc:	in     eax,0x71
  4033be:	or     al,0x28
  4033c0:	or     bh,ah
  4033c2:	sti    
  4033c3:	sbb    al,0xad
  4033c5:	add    eax,0xf99e26ef
  4033ca:	xchg   ch,bl
  4033cc:	mov    eax,0x4cae314a
  4033d1:	stos   DWORD PTR es:[edi],eax
  4033d2:	outs   dx,DWORD PTR ds:[esi]
  4033d3:	xchg   esp,eax
  4033d4:	sub    BYTE PTR [ecx+0x1ff576dd],bh
  4033da:	inc    edi
  4033db:	xchg   ebx,eax
  4033dc:	imul   ebx,esi,0xffffff96
  4033df:	arpl   di,si
  4033e1:	xchg   BYTE PTR [esp+eax*8],ch
  4033e4:	push   ds
  4033e5:	das    
  4033e6:	pop    es
  4033e7:	mov    dh,0xc5
  4033e9:	addr16 pop ebp
  4033eb:	xchg   ecx,eax
  4033ec:	mov    DWORD PTR [ebx+0x443c5d6],edx
  4033f2:	loop   0x40340f
  4033f4:	ret    
  4033f5:	mov    ds:0xc901f82f,eax
  4033fa:	shl    al,0xad
  4033fd:	add    DWORD PTR [esi+0x5c],edx
  403400:	into   
  403401:	jb     0x4033fd
  403403:	xchg   BYTE PTR ds:0x8a89fc1c,bh
  403409:	hlt    
  40340a:	adc    al,0x64
  40340c:	push   0xefee63c1
  403411:	adc    ah,0xb0
  403414:	mov    bh,0x52
  403416:	dec    eax
  403417:	inc    ebx
  403418:	or     DWORD PTR [ecx-0x7987fff2],edx
  40341e:	sub    eax,0x60517584
  403423:	cli    
  403424:	jmp    0x7a1b23fa
  403429:	and    BYTE PTR [eax+ecx*1-0x2cb73ad],ah
  403430:	mov    edx,0xef80e294
  403435:	and    al,0x37
  403437:	in     eax,dx
  403438:	rcl    DWORD PTR [ebx+0x2101edb6],cl
  40343e:	dec    edi
  40343f:	jmp    0xa3d9ae2b
  403444:	mov    gs,esp
  403446:	cdq    
  403447:	dec    edi
  403448:	fild   QWORD PTR [ebp-0x3949b5fa]
  40344e:	push   edx
  40344f:	dec    edi
  403450:	(bad)  
  403451:	ret    
  403452:	fisub  WORD PTR [ecx]
  403454:	bound  edx,QWORD PTR [edx]
  403456:	add    bh,BYTE PTR [esi-0x1565b309]
  40345c:	bound  ebx,QWORD PTR [ebx+ebx*1]
  40345f:	stos   BYTE PTR es:[edi],al
  403460:	icebp  
  403461:	out    dx,eax
  403462:	jnp    0x403452
  403464:	ins    BYTE PTR es:[edi],dx
  403465:	and    DWORD PTR [ebx],edi
  403467:	mov    ah,BYTE PTR [edi+0x46045b05]
  40346d:	fwait
  40346e:	and    eax,0xd7446b9f
  403473:	and    al,0xe0
  403475:	dec    esi
  403476:	sub    edx,ebp
  403478:	pop    esi
  403479:	std    
  40347a:	mov    ds:0x50ac001c,eax
  40347f:	xchg   edx,eax
  403480:	std    
  403481:	xchg   ecx,eax
  403482:	mov    esp,0x71d6d57c
  403487:	or     eax,0x1d6f9bb8
  40348c:	(bad)  
  40348d:	and    eax,0xb48adbd9
  403492:	or     esi,DWORD PTR [edx+0x3db158a6]
  403498:	pop    esp
  403499:	pop    ss
  40349a:	inc    esp
  40349b:	leave  
  40349c:	push   ds
  40349d:	ret    0x8525
  4034a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034a1:	in     al,0xf0
  4034a3:	add    edi,DWORD PTR [ebp+ebp*4+0x270439b1]
  4034aa:	xor    eax,0x3bebefa
  4034af:	rcr    DWORD PTR [esi],cl
  4034b1:	push   ecx
  4034b2:	inc    esp
  4034b3:	cmp    ah,BYTE PTR [ecx-0x24f4eacd]
  4034b9:	cwde   
  4034ba:	sbb    ebx,DWORD PTR [ecx+eax*4-0x44]
  4034be:	jmp    0x3bbd:0xe8792be4
  4034c5:	and    dl,BYTE PTR [edi]
  4034c7:	out    dx,eax
  4034c8:	in     al,dx
  4034c9:	fcmovnb st,st(3)
  4034cb:	pop    ecx
  4034cc:	jg     0x403499
  4034ce:	mov    eax,ss
  4034d0:	dec    esp
  4034d1:	jbe    0xd48e9334
  4034d7:	and    BYTE PTR [esi-0x351773],al
  4034dd:	or     eax,0xdd317217
  4034e2:	scas   eax,DWORD PTR es:[edi]
  4034e3:	out    0xc3,al
  4034e5:	jmp    0xd7558fa
  4034ea:	pusha  
  4034eb:	pop    es
  4034ec:	aad    0xcf
  4034ee:	mov    eax,ds:0x1a969e36
  4034f3:	fbld   TBYTE PTR [edi+0x3b290a73]
  4034f9:	mov    dl,0xf1
  4034fb:	mov    dl,0x46
  4034fd:	mov    dh,0x18
  4034ff:	jle    0x403536
  403501:	sub    eax,0x45b33f56
  403506:	mov    cl,0xd7
  403508:	es test edx,eax
  40350b:	cmp    eax,0x8a6d6616
  403510:	push   ds
  403511:	popa   
  403512:	jge    0x403544
  403514:	dec    DWORD PTR [eax-0x44]
  403517:	out    dx,al
  403518:	jno    0x4034b7
  40351a:	sti    
  40351b:	daa    
  40351c:	mov    ?,WORD PTR [ebp-0x77c2a854]
  403522:	and    DWORD PTR [edi+edx*4+0x112a216c],ecx
  403529:	sar    DWORD PTR [eax*2-0x3c62a188],0x2a
  403531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403532:	mov    al,0x66
  403534:	lahf   
  403535:	neg    DWORD PTR [ebx-0x7a]
  403538:	lods   al,BYTE PTR ds:[esi]
  403539:	aam    0xbc
  40353b:	push   eax
  40353c:	sub    bh,ch
  40353e:	jae    0x40354b
  403540:	out    0xce,al
  403542:	shl    DWORD PTR [eax+ecx*8],1
  403545:	mov    esi,0x10e451e2
  40354a:	inc    ebp
  40354b:	ret    
  40354c:	adc    BYTE PTR [esp+eax*8-0x7e64088c],ch
  403553:	(bad)  
  403554:	dec    eax
  403555:	add    DWORD PTR [esi],edx
  403557:	addr16 jge 0x403587
  40355a:	popf   
  40355b:	loop   0x4034ee
  40355d:	adc    dl,al
  40355f:	inc    esi
  403560:	xchg   esp,eax
  403561:	sbb    ch,ch
  403563:	jmp    0x65fa5314
  403568:	icebp  
  403569:	sub    eax,0xcbfd84fe
  40356e:	call   0xd3ae7fbb
  403573:	pop    ebp
  403574:	retf   
  403575:	mov    cl,0xd1
  403577:	and    BYTE PTR [ebp+0x63],bh
  40357a:	cwde   
  40357b:	outs   dx,DWORD PTR ds:[esi]
  40357c:	pop    esi
  40357d:	mov    bl,0x2f
  40357f:	cmp    ebx,DWORD PTR [edi-0x29d84c30]
  403585:	or     edx,DWORD PTR [ebx+eax*2+0x435dd03f]
  40358c:	in     al,dx
  40358d:	push   0xc3a32f2d
  403592:	nop
  403593:	hlt    
  403594:	out    0xc0,eax
  403596:	push   ss
  403597:	outs   dx,DWORD PTR ds:[esi]
  403598:	es lahf 
  40359a:	ins    DWORD PTR es:[edi],dx
  40359b:	inc    ecx
  40359c:	(bad)  
  40359d:	je     0x403547
  40359f:	inc    ebp
  4035a0:	stos   BYTE PTR es:[edi],al
  4035a1:	rcl    bl,1
  4035a3:	das    
  4035a4:	(bad)  
  4035a5:	shl    dh,cl
  4035a7:	cmp    ecx,DWORD PTR [eax+0x824a38a]
  4035ad:	(bad)  
  4035ae:	or     al,BYTE PTR [edx+0x372ff028]
  4035b4:	ss xchg ebp,eax
  4035b6:	xchg   esi,eax
  4035b7:	sar    BYTE PTR ds:0x14c094e6,0x66
  4035be:	xlat   BYTE PTR ds:[ebx]
  4035bf:	adc    ecx,ebx
  4035c1:	jbe    0x4035c6
  4035c3:	adc    DWORD PTR [eax],ebx
  4035c5:	or     eax,0x1759cc83
  4035ca:	push   ecx
  4035cb:	push   esi
  4035cc:	lods   eax,DWORD PTR ds:[esi]
  4035cd:	cmp    BYTE PTR [edi+0x44],ah
  4035d0:	hlt    
  4035d1:	mov    eax,ds:0xbc539398
  4035d6:	xchg   edx,eax
  4035d7:	xchg   ebp,eax
  4035d8:	fmul   QWORD PTR [esi-0x12fc3ed1]
  4035de:	push   ss
  4035df:	mov    ds:0x84e9a2d9,al
  4035e4:	or     ah,cl
  4035e6:	mov    dh,0x12
  4035e8:	(bad)  
  4035ea:	mov    BYTE PTR [ebx-0x4743a18b],cl
  4035f0:	dec    edi
  4035f1:	sub    bl,BYTE PTR ds:0x76887fa
  4035f7:	jbe    0x4035fd
  4035f9:	cmp    BYTE PTR [ebp+0x174f0993],0xed
  403600:	mov    fs,WORD PTR [edx-0x46ad9449]
  403606:	ret    0x52af
  403609:	mov    cl,cl
  40360b:	mov    cl,0xf0
  40360d:	mov    ds:0x257e6286,eax
  403612:	mov    ebx,0xc168a123
  403617:	mov    esi,0xd460eee1
  40361c:	push   eax
  40361d:	jo     0x403623
  40361f:	les    esp,FWORD PTR [esi+ecx*8]
  403622:	outs   dx,BYTE PTR ds:[esi]
  403623:	je     0x403671
  403625:	bound  edi,QWORD PTR [ecx-0x5df74109]
  40362b:	std    
  40362c:	jmp    0x4035bf
  40362e:	fsubr  DWORD PTR [esi]
  403630:	repz jmp 0x4e73ddfc
  403636:	pop    ecx
  403637:	push   esi
  403638:	jnp    0x403681
  40363a:	cdq    
  40363b:	fdivr  st,st(1)
  40363d:	stos   DWORD PTR es:[edi],eax
  40363e:	ret    0x73ea
  403641:	into   
  403642:	out    0x2d,eax
  403644:	ja     0x4035e2
  403646:	lea    edx,[eax+0x12]
  403649:	shl    BYTE PTR [esi-0x7a],cl
  40364c:	add    BYTE PTR [edi+0x108c6119],ch
  403652:	daa    
  403653:	xor    edi,ecx
  403655:	int    0xdf
  403657:	das    
  403658:	mov    ecx,0x9a9451d5
  40365d:	inc    ecx
  40365e:	mov    ds:0xc11b4379,eax
  403663:	mov    ds:0x25599537,al
  403668:	or     BYTE PTR [esi],ch
  40366a:	cmp    al,0xdb
  40366c:	cmp    bl,BYTE PTR [esi]
  40366e:	jmp    0xcfce563c
  403673:	add    edi,edx
  403675:	imul   edx,edx,0x78cc3a6a
  40367b:	dec    edi
  40367c:	les    esi,FWORD PTR cs:[edi-0x46]
  403680:	jae    0x40362e
  403682:	popf   
  403683:	mov    WORD PTR ds:0x93493f48,ss
  403689:	jecxz  0x40362e
  40368b:	mov    ss,WORD PTR [ebx+0x76]
  40368e:	out    0x2a,al
  403690:	jge    0x403679
  403692:	pop    esi
  403693:	bound  ebp,QWORD PTR [edx+0x4cfcd8ba]
  403699:	ret    0x54d0
  40369c:	push   0x33
  40369e:	or     DWORD PTR [ecx],esi
  4036a0:	dec    esi
  4036a1:	das    
  4036a2:	(bad)  
  4036a3:	stc    
  4036a4:	jmp    0x5074e87f
  4036a9:	in     eax,dx
  4036aa:	dec    ebx
  4036ab:	or     DWORD PTR [ecx-0x4ed6a4c5],edi
  4036b1:	xchg   BYTE PTR [ebx],cl
  4036b3:	(bad)  
  4036b4:	(bad)  
  4036b6:	cdq    
  4036b7:	dec    edi
  4036b8:	pop    ebx
  4036b9:	call   0xfcb9:0xafa6e6de
  4036c0:	dec    edx
  4036c1:	sub    DWORD PTR [eax+0x31],eax
  4036c4:	mov    dh,BYTE PTR [ebx-0x49b99585]
  4036ca:	gs out dx,al
  4036cc:	dec    ebp
  4036cd:	push   DWORD PTR [ebp-0xf5c4b6b]
  4036d3:	and    edx,ebx
  4036d5:	inc    esp
  4036d6:	sub    al,0x6c
  4036d8:	cmp    DWORD PTR [ebx+esi*4],0xffffffdb
  4036dc:	jmp    0x403667
  4036de:	pop    es
  4036df:	ja     0x4036cc
  4036e1:	(bad)  
  4036e3:	add    bl,BYTE PTR [ecx-0x182dd730]
  4036e9:	push   cs
  4036ea:	cld    
  4036eb:	jmp    0xb373eec4
  4036f0:	sub    BYTE PTR ds:0x8e5df795,bh
  4036f6:	xor    eax,0x1b43d72f
  4036fb:	mov    bl,0x26
  4036fd:	dec    eax
  4036fe:	ror    ecx,0x60
  403701:	sub    ebp,DWORD PTR [edx+0x13]
  403704:	inc    eax
  403705:	dec    esi
  403706:	mov    sp,ax
  403709:	cmp    al,0xa
  40370b:	cmp    DWORD PTR [ecx],0x37
  40370e:	xor    eax,0x91a8cc25
  403713:	ds je  0x80f4e39d
  40371a:	ins    DWORD PTR es:[edi],dx
  40371b:	sub    eax,eax
  40371d:	inc    edx
  40371e:	jno    0x4036d5
  403720:	inc    edi
  403721:	(bad)  
  403722:	cmp    ebx,ecx
  403724:	enter  0x5ca3,0xf0
  403728:	jmp    0xee49:0x155100bc
  40372f:	outs   dx,BYTE PTR ds:[esi]
  403730:	std    
  403731:	xor    DWORD PTR [ecx+0x5093cfa7],ecx
  403737:	pop    eax
  403738:	or     ah,BYTE PTR [esi]
  40373a:	and    ebx,DWORD PTR [ecx-0x40]
  40373d:	pusha  
  40373e:	add    eax,0x838b6e85
  403743:	fisubr WORD PTR [eax+0x694092a2]
  403749:	cld    
  40374a:	lods   al,BYTE PTR ds:[esi]
  40374b:	jnp    0x40379c
  40374d:	jnp    0x403783
  40374f:	pop    eax
  403750:	les    esp,FWORD PTR [edi+0x7fd92741]
  403756:	mov    DWORD PTR [edx+0x4890fe47],edi
  40375c:	xor    al,0xeb
  40375e:	sti    
  40375f:	and    al,0xf5
  403761:	and    al,0x20
  403763:	cmp    eax,0xa38c0c3d
  403768:	mov    al,ds:0xb371448c
  40376d:	jo     0x40374c
  40376f:	pop    ebp
  403770:	cdq    
  403771:	mov    al,0x62
  403773:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403774:	or     eax,0x2221bae2
  403779:	push   0x5f
  40377b:	add    eax,0x17769dee
  403780:	xchg   BYTE PTR [edx-0x50d56706],al
  403786:	fwait
  403787:	mov    eax,0x12bad42b
  40378c:	data16 cmp al,0xc9
  40378f:	mov    dl,0xe2
  403791:	mov    esp,0x77b69714
  403796:	push   ebx
  403797:	inc    edx
  403798:	push   eax
  403799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40379a:	fld    QWORD PTR [ebx]
  40379c:	push   esi
  40379d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40379e:	stc    
  40379f:	outs   dx,DWORD PTR ds:[esi]
  4037a0:	adc    cl,bh
  4037a2:	and    eax,0xe2578832
  4037a7:	div    edx
  4037a9:	inc    eax
  4037aa:	sbb    cl,ah
  4037ac:	sbb    al,0x54
  4037ae:	loope  0x403741
  4037b0:	hlt    
  4037b1:	loope  0x403777
  4037b3:	imul   DWORD PTR [ecx+0x63b2e235]
  4037b9:	popf   
  4037ba:	out    0xdf,eax
  4037bc:	and    bh,BYTE PTR [ecx-0xe]
  4037bf:	addr16 xchg ebx,eax
  4037c1:	popa   
  4037c2:	jp     0x4037a0
  4037c4:	jp     0x403782
  4037c6:	sbb    BYTE PTR [ebx],ch
  4037c8:	popf   
  4037c9:	aas    
  4037ca:	(bad)  
  4037cb:	aam    0x7
  4037cd:	sub    al,0x63
  4037cf:	push   ebp
  4037d0:	sub    BYTE PTR [ebx+0x5c03356],cl
  4037d6:	mov    ah,0x98
  4037d8:	lock call FWORD PTR [edi+0x62619d55]
  4037df:	ffreep st(0)
  4037e1:	xor    BYTE PTR [esi],bh
  4037e3:	xchg   esi,eax
  4037e4:	std    
  4037e5:	xchg   esi,eax
  4037e6:	mov    dl,0xf1
  4037e8:	add    al,0x95
  4037ea:	aas    
  4037eb:	dec    ecx
  4037ec:	(bad)  
  4037ed:	dec    edx
  4037ee:	sub    al,0xd5
  4037f0:	leave  
  4037f1:	sbb    esi,DWORD PTR [esi-0x472d2ea9]
  4037f7:	pop    esp
  4037f8:	xchg   edi,eax
  4037f9:	push   0x4b8efea8
  4037fe:	out    dx,eax
  4037ff:	jge    0x403797
  403801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403802:	cmp    eax,0xcfb5f73c
  403807:	std    
  403808:	inc    edx
  403809:	inc    esp
  40380a:	cmp    al,0x67
  40380c:	pusha  
  40380d:	arpl   WORD PTR ds:0x14f2b50a,di
  403813:	dec    edi
  403814:	cmp    DWORD PTR [ecx-0x5a113e15],esi
  40381a:	jp     0x403886
  40381c:	pusha  
  40381d:	icebp  
  40381e:	loop   0x403817
  403820:	pop    ecx
  403821:	xlat   BYTE PTR ds:[ebx]
  403822:	test   cl,bl
  403824:	adc    BYTE PTR [esi+0x26],ah
  403827:	jne    0x403852
  403829:	mov    bl,0x5a
  40382b:	push   ebp
  40382c:	sbb    DWORD PTR [esi-0x2a211969],0x1
  403833:	pop    ebx
  403834:	mov    ch,0x7b
  403836:	mov    ds:0xd2faa503,eax
  40383b:	sbb    eax,0xb161d247
  403840:	xor    bh,BYTE PTR [esp+edx*2]
  403843:	or     BYTE PTR [ebp+0x76],al
  403846:	mov    bl,0x12
  403848:	mov    esi,0x38e09925
  40384d:	jb     0x403883
  40384f:	cdq    
  403850:	rcr    DWORD PTR [ecx-0x53],cl
  403853:	adc    esi,ebx
  403855:	push   esp
  403856:	cmp    ebp,DWORD PTR [eax-0x23f8894f]
  40385c:	in     eax,0x9d
  40385e:	sar    ecx,cl
  403860:	pop    ecx
  403861:	cmp    al,0xdf
  403863:	(bad)  
  403864:	imul   BYTE PTR [ebx]
  403866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403867:	inc    ecx
  403868:	std    
  403869:	popf   
  40386a:	or     DWORD PTR [ebx-0x27197ff8],edx
  403870:	cmp    DWORD PTR [edx],0x3d
  403873:	rol    BYTE PTR [ebx-0x62],0x59
  403877:	retf   
  403878:	push   es
  403879:	in     eax,dx
  40387a:	push   edx
  40387b:	pop    edi
  40387c:	pusha  
  40387d:	cdq    
  40387e:	mov    ebx,0x1522e1
  403883:	bound  ebp,QWORD PTR [ecx+0x4f2ffd7d]
  403889:	cs nop
  40388b:	push   es
  40388c:	mov    dl,0xbe
  40388e:	enter  0x818d,0x25
  403892:	sbb    cl,al
  403894:	fstp   QWORD PTR [esi]
  403896:	mov    bh,0x20
  403898:	xchg   edi,eax
  403899:	mov    eax,ds:0x134007bd
  40389e:	pop    edx
  40389f:	and    BYTE PTR [ebx],dh
  4038a1:	mov    edi,DWORD PTR [ecx]
  4038a3:	sbb    al,0xbf
  4038a5:	dec    ecx
  4038a6:	test   DWORD PTR [eax+0x31],edx
  4038a9:	pushf  
  4038aa:	in     eax,0xda
  4038ac:	mov    ds,edi
  4038ae:	push   ebp
  4038af:	(bad)
  4038b2:	das    
  4038b3:	jnp    0x4038cd
  4038b5:	(bad)  [eax+0x5f]
  4038b8:	adc    eax,0xf4116a26
  4038bd:	or     bl,BYTE PTR [edx+0x6ee87e09]
  4038c3:	add    DWORD PTR [eax+0x2d831cd2],ebp
  4038c9:	lds    eax,FWORD PTR [eax]
  4038cb:	(bad)  
  4038cc:	icebp  
  4038cd:	adc    cl,0xd2
  4038d0:	mov    edi,0x382314cb
  4038d5:	aas    
  4038d6:	cmp    DWORD PTR [ebx-0x6ddf1caa],edi
  4038dc:	pop    esi
  4038dd:	les    esi,FWORD PTR [edi-0x1c]
  4038e0:	or     DWORD PTR [edx+eax*4],ecx
  4038e3:	and    DWORD PTR [edi*8-0x49e9923c],esp
  4038ea:	dec    edi
  4038eb:	sub    eax,0x6030a873
  4038f0:	loop   0x403969
  4038f2:	pop    ds
  4038f3:	jne    0x40389e
  4038f5:	jb     0x403957
  4038f7:	or     eax,0xc8dfd6fc
  4038fc:	test   DWORD PTR [ebx+0x4419f734],0x136df3f4
  403906:	dec    ebx
  403907:	pop    ebp
  403908:	cmp    cl,bh
  40390a:	sar    ebx,cl
  40390c:	xchg   esp,eax
  40390d:	and    ebx,ecx
  40390f:	jp     0x40392a
  403911:	jecxz  0x403942
  403913:	mov    ds:0xb84192d0,eax
  403918:	push   edx
  403919:	outs   dx,DWORD PTR ds:[esi]
  40391a:	mov    esi,0xbe3342e9
  40391f:	psraw  mm1,QWORD PTR [ebp+0x68]
  403923:	(bad)  
  403924:	mov    dl,0x77
  403926:	nop
  403927:	xor    al,0x84
  403929:	cli    
  40392a:	fdivr  DWORD PTR [ebx]
  40392c:	mov    fs,WORD PTR [eax+0x5c]
  40392f:	daa    
  403930:	fwait
  403931:	nop
  403932:	imul   eax,DWORD PTR [eax+0x76],0x7228d6e9
  403939:	dec    ebx
  40393a:	ins    DWORD PTR es:[edi],dx
  40393b:	mul    dh
  40393d:	or     eax,0xe0de353e
  403942:	outs   dx,BYTE PTR ds:[esi]
  403943:	pop    DWORD PTR [ecx+0x2ff35e07]
  403949:	ins    BYTE PTR es:[edi],dx
  40394a:	dec    edx
  40394b:	or     al,0x27
  40394d:	sub    ch,bh
  40394f:	inc    edx
  403950:	dec    ebx
  403951:	and    al,al
  403953:	mov    ds:0xc54a60dd,al
  403958:	jecxz  0x403947
  40395a:	sub    al,0x1b
  40395c:	retf   0x7974
  40395f:	hlt    
  403960:	mov    ebp,0x7b775b1c
  403965:	ins    BYTE PTR es:[edi],dx
  403966:	jno    0x403938
  403968:	cmp    BYTE PTR [esi+0x3f],dl
  40396b:	(bad)  
  40396e:	mov    al,ds:0x2ebd0c44
  403973:	js     0x40390a
  403975:	adc    al,0xce
  403977:	ret    
  403978:	jo     0x4039b0
  40397a:	and    eax,0xb86c615
  40397f:	in     eax,dx
  403980:	shr    ecx,1
  403982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403983:	xor    al,0xe9
  403985:	xor    eax,0x1e1fe433
  40398a:	rcl    DWORD PTR [edi+0x491f3a24],cl
  403990:	cld    
  403991:	test   DWORD PTR [esi],ebx
  403993:	pop    ebp
  403994:	pop    esp
  403995:	out    0x62,al
  403997:	jb     0x40396b
  403999:	pop    esp
  40399a:	icebp  
  40399b:	push   ss
  40399c:	sbb    edi,esp
  40399e:	icebp  
  40399f:	imul   eax,DWORD PTR [esp+edx*2-0x7c],0x1b
  4039a4:	dec    ebx
  4039a5:	sub    esi,ebx
  4039a7:	rol    DWORD PTR ds:0x66459944,0xaa
  4039ae:	xchg   ebx,edi
  4039b0:	test   eax,0x1b9ee90a
  4039b5:	pop    esi
  4039b6:	stos   BYTE PTR es:[edi],al
  4039b7:	mov    ss,WORD PTR [eax]
  4039b9:	push   ds
  4039ba:	popf   
  4039bb:	je     0x403a2c
  4039bd:	idiv   DWORD PTR [ebp-0x1630cbed]
  4039c3:	das    
  4039c4:	sbb    dh,ah
  4039c6:	jnp    0x4039e7
  4039c8:	pop    ebp
  4039c9:	lods   eax,DWORD PTR ds:[esi]
  4039ca:	mov    edi,0x1218879e
  4039cf:	adc    al,0xae
  4039d1:	pusha  
  4039d2:	sub    ebx,ecx
  4039d4:	mov    bh,0xa0
  4039d6:	in     al,dx
  4039d7:	sub    BYTE PTR [ebp+ecx*4-0xa],al
  4039db:	fmul   st,st(4)
  4039dd:	and    ebx,DWORD PTR [edi-0x38]
  4039e0:	jbe    0x4039db
  4039e2:	xchg   esp,eax
  4039e3:	ja     0x40397e
  4039e5:	mov    al,ds:0xad29298e
  4039ea:	cmp    eax,0xeea39c4
  4039ef:	jge    0x403a5a
  4039f1:	xchg   DWORD PTR [edi-0xf],esi
  4039f4:	retf   0x9ffd
  4039f7:	sbb    ch,BYTE PTR [edi-0x4629a7af]
  4039fd:	imul   eax,edi,0xffffffeb
  403a00:	pop    ds
  403a01:	call   0x475a9249
  403a06:	int3   
  403a07:	adc    BYTE PTR [ebp-0x18d24d03],bh
  403a0d:	mov    bh,0xa5
  403a0f:	mov    eax,ds:0x9a70e880
  403a14:	xchg   esp,eax
  403a15:	mov    ebx,0xb8f757f4
  403a1a:	dec    eax
  403a1b:	sbb    edx,DWORD PTR [esi+ebp*1-0x299a88f0]
  403a22:	jmp    0x403a6c
  403a24:	jb     0x403a00
  403a26:	cmc    
  403a27:	cmp    al,0x9
  403a29:	mov    edx,0xd49074ec
  403a2e:	dec    ecx
  403a2f:	dec    edi
  403a30:	shr    BYTE PTR [ebp-0x48],cl
  403a33:	iret   
  403a34:	outs   dx,BYTE PTR ds:[esi]
  403a35:	xchg   BYTE PTR [edi-0x234d58ec],dh
  403a3b:	sbb    BYTE PTR [edi],al
  403a3d:	iret   
  403a3e:	push   0x6139a552
  403a43:	ret    
  403a44:	aam    0x6e
  403a46:	or     al,0x2a
  403a48:	jbe    0x403a57
  403a4a:	(bad)  
  403a4b:	aam    0xf6
  403a4d:	jbe    0x403a8e
  403a4f:	outs   dx,DWORD PTR ds:[esi]
  403a50:	pop    edi
  403a51:	jp     0x4039dc
  403a53:	mov    WORD PTR [ebp+0x4a],es
  403a56:	xchg   edx,eax
  403a57:	xor    edi,DWORD PTR [ecx+0x4]
  403a5a:	shl    DWORD PTR [esi+ebx*4-0x34],1
  403a5e:	fadd   QWORD PTR [esi+0x21]
  403a61:	in     al,dx
  403a62:	shl    BYTE PTR [edi-0x23263363],cl
  403a68:	(bad)  
  403a69:	rcl    DWORD PTR [edi],cl
  403a6b:	leave  
  403a6c:	xor    eax,0xd08857c9
  403a71:	mov    edx,0xdf84e3b2
  403a76:	dec    edx
  403a77:	and    eax,DWORD PTR [ebp+0x4d644b99]
  403a7d:	pop    eax
  403a7e:	fisub  DWORD PTR [eax+0x3b]
  403a81:	mov    ch,0x0
  403a83:	test   BYTE PTR [ecx+0x6de21a0c],al
  403a89:	dec    ecx
  403a8a:	clc    
  403a8b:	push   ecx
  403a8c:	div    DWORD PTR [esi]
  403a8e:	rcl    BYTE PTR [esi+0x24fb66e9],1
  403a94:	sbb    DWORD PTR [ebp-0xb],0x57a18749
  403a9b:	xchg   edi,eax
  403a9c:	jecxz  0x403a8a
  403a9e:	out    0x8a,eax
  403aa0:	or     DWORD PTR [ecx],0xa41ea696
  403aa6:	ret    0xa7f3
  403aa9:	enter  0xe43e,0x70
  403aad:	ins    DWORD PTR es:[edi],dx
  403aae:	add    eax,0xb6d1aaf1
  403ab3:	sub    BYTE PTR [ebx+0x26],dh
  403ab6:	lds    edi,FWORD PTR [ebp+0x7]
  403ab9:	aam    0x62
  403abb:	bound  si,DWORD PTR [edi]
  403abe:	fisttp QWORD PTR [edx]
  403ac0:	shl    DWORD PTR ds:0x6fbfdc55,1
  403ac6:	jnp    0x403a51
  403ac8:	(bad)  
  403ac9:	pushf  
  403aca:	and    cl,BYTE PTR [eax+ecx*8]
  403acd:	es jo  0x403a74
  403ad0:	cmp    eax,0x739427a5
  403ad5:	pop    edi
  403ad6:	in     al,0xa1
  403ad8:	xor    ebp,ecx
  403ada:	ss jg  0x403a70
  403add:	inc    ebp
  403ade:	aad    0x3f
  403ae0:	mov    edx,0x3aa630ff
  403ae5:	sub    al,0xbd
  403ae7:	or     dl,dl
  403ae9:	jge    0x403aa2
  403aeb:	jge    0x403ab7
  403aed:	xor    al,0xff
  403aef:	xor    ebp,esp
  403af1:	xlat   BYTE PTR ds:[ebx]
  403af2:	int3   
  403af3:	mov    bh,0xc7
  403af5:	xchg   ecx,eax
  403af6:	add    BYTE PTR [ebp-0x29bd7411],dl
  403afc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403afd:	jmp    FWORD PTR [esi+eiz*8+0x49]
  403b01:	xchg   ebp,eax
  403b02:	xchg   BYTE PTR [esi],dh
  403b04:	into   
  403b05:	push   cs
  403b06:	xchg   ebp,eax
  403b07:	jecxz  0x403b6d
  403b09:	das    
  403b0a:	add    BYTE PTR [ebx+0x1e],bh
  403b0d:	in     al,dx
  403b0e:	data16 ins BYTE PTR es:[edi],dx
  403b10:	ds in  al,dx
  403b12:	ins    DWORD PTR es:[edi],dx
  403b13:	dec    ebx
  403b14:	sbb    ebx,DWORD PTR [edx-0x733606ad]
  403b1a:	jno    0x403ab0
  403b1c:	cmp    ebx,DWORD PTR [edi-0x35]
  403b1f:	push   ebp
  403b20:	and    BYTE PTR [eax],bl
  403b22:	faddp  st(2),st
  403b24:	pop    edx
  403b25:	mov    cl,0x39
  403b27:	adc    al,0x23
  403b29:	mov    ebx,0x533a7b0a
  403b2f:	mov    bl,0xdc
  403b31:	cmp    BYTE PTR [eax+eax*2-0x2d],bh
  403b35:	or     edi,DWORD PTR [ecx-0x26]
  403b38:	or     BYTE PTR [edi+0x24],0x38
  403b3c:	mov    ds,WORD PTR [edi+0x6912e124]
  403b42:	dec    ebp
  403b43:	jl     0x403b4a
  403b45:	mov    esi,0x542c66e8
  403b4a:	add    DWORD PTR [esi-0x306efc94],edi
  403b50:	pop    edi
  403b51:	push   esp
  403b52:	sub    BYTE PTR fs:[ecx*1+0x35c85c1c],bh
  403b5a:	fnstcw WORD PTR [ecx+0x3b]
  403b5d:	push   cs
  403b5e:	test   DWORD PTR [ecx],0x5083d98c
  403b64:	ja     0x403b52
  403b66:	imul   ebp,DWORD PTR [ebp+0x12154c18],0x3d4751be
  403b70:	sbb    BYTE PTR [edx],ch
  403b72:	fnstsw WORD PTR ds:0x6d013a3f
  403b78:	xor    eax,0xfd63a1b4
  403b7d:	inc    ebx
  403b7e:	mov    ebp,0xaacc64ce
  403b83:	or     DWORD PTR [edi],esi
  403b85:	hlt    
  403b86:	(bad)  
  403b87:	out    0x7,al
  403b89:	or     bh,0xe1
  403b8c:	out    0x7e,al
  403b8e:	jnp    0x403b62
  403b90:	mov    DWORD PTR ds:0x70d47013,ebx
  403b96:	push   ebx
  403b97:	mov    eax,ds:0x8eb6bcf8
  403b9c:	outs   dx,BYTE PTR ds:[esi]
  403b9d:	scas   al,BYTE PTR es:[edi]
  403b9e:	push   ecx
  403b9f:	neg    DWORD PTR [ebx-0x72]
  403ba2:	inc    ebx
  403ba3:	add    DWORD PTR ds:0x948801ae,edi
  403ba9:	add    dl,ah
  403bab:	nop
  403bac:	test   eax,0x60b4f710
  403bb1:	adc    BYTE PTR ds:0x7dd3524b,ah
  403bb7:	jmp    0x403bb6
  403bb9:	xchg   BYTE PTR ds:[ecx+0x30],dl
  403bbd:	test   DWORD PTR [ebx],0xddeabbda
  403bc3:	mov    bl,0x13
  403bc5:	jl     0x403ba7
  403bc7:	scas   al,BYTE PTR es:[edi]
  403bc8:	arpl   WORD PTR [edi-0x54064a16],ax
  403bce:	mov    dh,0x78
  403bd0:	adc    cl,al
  403bd2:	std    
  403bd3:	sub    dh,BYTE PTR [ebx+ecx*4]
  403bd6:	leave  
  403bd7:	jp     0x403c34
  403bd9:	lods   al,BYTE PTR ds:[esi]
  403bda:	cmp    ecx,ecx
  403bdc:	xor    DWORD PTR [edi-0x5fd25e63],ecx
  403be2:	stos   BYTE PTR es:[edi],al
  403be3:	push   0xffffffdb
  403be5:	loope  0x403c57
  403be7:	dec    edx
  403be8:	sub    ah,BYTE PTR [ecx]
  403bea:	retf   
  403beb:	add    eax,0x9b4b89e2
  403bf0:	cs scas al,BYTE PTR es:[edi]
  403bf2:	pusha  
  403bf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bf4:	dec    edi
  403bf5:	or     eax,0x7397811f
  403bfa:	popa   
  403bfb:	push   ebx
  403bfc:	push   ebx
  403bfd:	pop    ebp
  403bfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bff:	sub    DWORD PTR [edi],eax
  403c01:	outs   dx,DWORD PTR ds:[esi]
  403c02:	pop    ecx
  403c03:	dec    esi
  403c04:	sbb    dl,BYTE PTR [ecx+0x35af44b7]
  403c0a:	ret    
  403c0b:	dec    edi
  403c0c:	ret    
  403c0d:	xlat   BYTE PTR ds:[ebx]
  403c0e:	sar    ecx,cl
  403c10:	arpl   WORD PTR [ecx-0x7d],cx
  403c13:	jne    0x403c27
  403c15:	mov    ecx,0x781131ab
  403c1a:	push   ds
  403c1b:	jo     0x403c72
  403c1d:	mov    eax,ds:0x47b9726a
  403c22:	dec    edx
  403c23:	mov    bh,0xa1
  403c25:	pop    edx
  403c26:	xchg   DWORD PTR [edx],ecx
  403c28:	mov    ?,WORD PTR [edi-0x481157f8]
  403c2e:	inc    esi
  403c2f:	in     al,0x33
  403c31:	and    al,0x58
  403c33:	addr16 fs dec esi
  403c36:	jp     0x403c64
  403c38:	add    DWORD PTR [ebp-0x5157fc32],ebp
  403c3e:	imul   ecx,edx,0x4446a16e
  403c44:	mov    ?,WORD PTR [eax-0x5f]
  403c47:	outs   dx,DWORD PTR ds:[esi]
  403c48:	add    eax,0x4669fea1
  403c4d:	xor    al,0x7
  403c4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c50:	push   cs
  403c51:	fdivr  QWORD PTR [esi-0x5b76b5f7]
  403c57:	(bad)  
  403c58:	xor    bh,al
  403c5a:	in     al,dx
  403c5b:	add    DWORD PTR [ebp+0x3e],eax
  403c5e:	mov    ecx,0xb99cee20
  403c63:	add    ch,BYTE PTR [eax]
  403c65:	out    0xa3,al
  403c67:	xor    bh,BYTE PTR [eax]
  403c69:	sbb    bl,bl
  403c6b:	pop    eax
  403c6c:	add    al,0xe3
  403c6e:	xchg   ebx,eax
  403c6f:	sbb    eax,0x30ee9f87
  403c74:	stc    
  403c75:	pop    edx
  403c76:	xor    eax,0xed77631b
  403c7b:	aaa    
  403c7c:	pusha  
  403c7d:	cmp    eax,0x3c6746b5
  403c82:	aas    
  403c83:	in     al,dx
  403c84:	mov    BYTE PTR [edx+0x4ef33ccc],dl
  403c8a:	inc    edx
  403c8b:	push   ebx
  403c8c:	mov    eax,0x26dc3a5c
  403c91:	jo     0x403cd2
  403c93:	call   0x2bed:0x8772ac52
  403c9a:	push   ebp
  403c9b:	xchg   dl,al
  403c9d:	leave  
  403c9e:	aas    
  403c9f:	push   ebx
  403ca0:	repnz xchg edi,eax
  403ca2:	sbb    BYTE PTR [eax-0x64],0xe5
  403ca6:	sbb    DWORD PTR [ebx-0x2f],0x5f
  403caa:	or     bh,bh
  403cac:	mov    ds:0xdcabc6a0,al
  403cb1:	add    eax,0x9b093501
  403cb6:	mov    BYTE PTR [esi+0x66],dh
  403cb9:	int    0xe2
  403cbb:	xchg   esp,eax
  403cbc:	jmp    0x3c6c:0xadcab10d
  403cc3:	xor    al,0x60
  403cc5:	xor    al,0x45
  403cc7:	cdq    
  403cc8:	mov    ebx,0xd160c1c1
  403ccd:	push   esp
  403cce:	inc    edx
  403ccf:	lods   al,BYTE PTR ds:[esi]
  403cd0:	repnz ds fucom st(5)
  403cd4:	scas   eax,DWORD PTR es:[edi]
  403cd5:	jecxz  0x403cef
  403cd7:	jbe    0x403d58
  403cd9:	call   eax
  403cdb:	adc    eax,0x5bd167d1
  403ce0:	inc    eax
  403ce1:	jbe    0x403cd9
  403ce3:	dec    edi
  403ce4:	inc    esi
  403ce5:	test   al,0x2d
  403ce7:	mov    ah,0x1c
  403ce9:	pop    esi
  403cea:	push   DWORD PTR [ebp+0x22534def]
  403cf0:	sub    eax,0xd3a0779f
  403cf5:	xchg   edi,eax
  403cf6:	shl    ch,0x86
  403cf9:	mov    esp,0xcbac164a
  403cfe:	adc    esp,DWORD PTR [ecx+0x21f4ad54]
  403d04:	lahf   
  403d05:	popf   
  403d06:	xchg   esp,eax
  403d07:	sbb    ecx,ecx
  403d09:	push   esi
  403d0a:	jmp    0xafa1c90
  403d0f:	add    eax,0x29d8e2c9
  403d14:	push   esi
  403d15:	xchg   edx,eax
  403d16:	cmc    
  403d17:	dec    ebx
  403d18:	(bad)  [esi]
  403d1a:	xor    al,0x12
  403d1c:	sahf   
  403d1d:	test   eax,0x84f761c5
  403d22:	mov    bh,0x6a
  403d24:	popf   
  403d25:	cld    
  403d26:	mov    edx,ebx
  403d28:	arpl   WORD PTR [ebp-0x78],cx
  403d2b:	vmread DWORD PTR [edi+0x34],edx
  403d2f:	int    0xba
  403d31:	loope  0x403d66
  403d33:	shr    BYTE PTR [ecx],1
  403d35:	sbb    al,0x97
  403d37:	mov    esi,0xa271dd9d
  403d3c:	sti    
  403d3d:	cli    
  403d3e:	jae    0x403d6b
  403d40:	sub    eax,0x661a039d
  403d45:	std    
  403d46:	push   edx
  403d47:	mov    al,ds:0x51f077e8
  403d4c:	xchg   DWORD PTR [edx-0x66],edi
  403d4f:	nop
  403d50:	mov    ebp,0x2895504a
  403d55:	in     al,0xb2
  403d57:	sbb    eax,0x604b07ac
  403d5c:	in     al,0xa3
  403d5e:	leave  
  403d5f:	sar    DWORD PTR [edi],1
  403d61:	mov    eax,ds:0xa96014c2
  403d66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d67:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  403d69:	mov    edx,0xa491855e
  403d6e:	mov    ds:0x4d5d615a,eax
  403d73:	js     0x403d18
  403d75:	test   DWORD PTR [edi+0x36a9d505],ebp
  403d7b:	into   
  403d7c:	mov    eax,ds:0xacdd1269
  403d81:	les    edi,FWORD PTR [ebp+0x32597494]
  403d87:	push   es
  403d88:	out    0xf1,al
  403d8a:	mov    DWORD PTR [edx],0x3e80238e
  403d90:	fcom   QWORD PTR [eax]
  403d92:	pop    ss
  403d93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d94:	dec    ebx
  403d95:	mov    ebx,0xa80a38a0
  403d9a:	test   al,ah
  403d9c:	in     al,dx
  403d9d:	dec    edx
  403d9e:	das    
  403d9f:	outs   dx,DWORD PTR ds:[si]
  403da1:	dec    ecx
  403da2:	xchg   ecx,eax
  403da3:	ds jecxz 0x403e23
  403da6:	adc    BYTE PTR [ebx],dh
  403da8:	stos   DWORD PTR es:[edi],eax
  403da9:	jns    0x403d57
  403dab:	and    eax,0x7b90617b
  403db0:	fsubr  QWORD PTR [eax+0x7d]
  403db3:	add    eax,0xac1cb3cc
  403db8:	out    dx,eax
  403db9:	jl     0x403e25
  403dbb:	psubw  mm3,QWORD PTR [bp+di+0x1b]
  403dc0:	jmp    0x9119:0xdf2db1d8
  403dc7:	fadd   st(2),st
  403dc9:	pop    esp
  403dca:	xchg   esp,eax
  403dcb:	mov    ebx,0x169d335d
  403dd0:	pop    ss
  403dd1:	dec    edi
  403dd2:	push   edx
  403dd3:	test   al,0xbf
  403dd5:	or     ch,BYTE PTR [edx+0x366325df]
  403ddb:	mov    DWORD PTR [ecx+0x2013153e],eax
  403de1:	push   es
  403de2:	(bad)  
  403de4:	jmp    0x823c:0x1d1a9a5b
  403deb:	call   0x94a9:0x1f678e4d
  403df2:	repz cmp eax,0xbe740554
  403df8:	out    dx,al
  403df9:	mov    al,0x99
  403dfb:	shr    dh,0x35
  403dfe:	data16 fisub DWORD PTR [edi]
  403e01:	mov    cl,0x9d
  403e03:	pop    edi
  403e04:	jl     0x403e76
  403e06:	popa   
  403e07:	mov    eax,ds:0x61d08328
  403e0c:	add    al,0x5b
  403e0e:	jg     0x403dc3
  403e10:	mov    dl,0xea
  403e12:	test   al,0xb5
  403e14:	push   eax
  403e15:	jnp    0x403dc5
  403e17:	push   edx
  403e18:	cwde   
  403e19:	idiv   esi
  403e1b:	or     cl,BYTE PTR [eax-0xa4e419c]
  403e21:	(bad)  
  403e22:	popa   
  403e23:	std    
  403e24:	inc    esi
  403e25:	mov    eax,ds:0xa9a5787f
  403e2a:	lods   al,BYTE PTR ds:[esi]
  403e2b:	pop    eax
  403e2c:	mov    ah,0xe7
  403e2e:	adc    eax,0xbd344997
  403e33:	xor    cl,BYTE PTR [ebp+0x3]
  403e36:	mov    BYTE PTR [edx],cl
  403e38:	(bad)  
  403e39:	pop    edi
  403e3a:	popf   
  403e3b:	out    dx,al
  403e3c:	imul   edi,DWORD PTR [edx-0x556619dc],0xd469d8ff
  403e46:	cmp    edx,ecx
  403e48:	sub    ch,BYTE PTR [ebx]
  403e4a:	jg     0x403e8e
  403e4c:	xchg   edx,eax
  403e4d:	mov    eax,ds:0xc1a75daa
  403e52:	(bad)  
  403e54:	xchg   edx,eax
  403e55:	xor    dl,BYTE PTR [ebp-0x5f]
  403e58:	xlat   BYTE PTR ds:[ebx]
  403e59:	mov    esi,DWORD PTR [edi-0x217ec4c6]
  403e5f:	and    al,0xb0
  403e61:	loopne 0x403e92
  403e63:	arpl   WORD PTR [eax],ax
  403e65:	aaa    
  403e66:	scas   eax,DWORD PTR es:[edi]
  403e67:	sub    eax,edi
  403e69:	cmp    BYTE PTR [esi+0x52],0x72
  403e6d:	dec    eax
  403e6e:	sti    
  403e6f:	sub    BYTE PTR [esp+eiz*2],dh
  403e72:	out    0x44,eax
  403e74:	out    0xc3,al
  403e76:	in     eax,0x70
  403e78:	cmp    al,0x1b
  403e7a:	mov    esi,DWORD PTR [ebx]
  403e7c:	out    0xfe,eax
  403e7e:	add    bl,BYTE PTR [esi+0x24ec963c]
  403e84:	cmp    ch,BYTE PTR [esi-0x32]
  403e87:	xchg   esi,eax
  403e88:	fcomi  st,st(0)
  403e8a:	or     ah,BYTE PTR [ecx]
  403e8c:	fwait
  403e8d:	mov    al,ds:0x1fe6df89
  403e92:	add    edx,esi
  403e94:	stc    
  403e95:	test   eax,0x5f3f3c1b
  403e9a:	add    ch,dl
  403e9c:	jns    0x403ea0
  403e9e:	(bad)  
  403e9f:	pop    DWORD PTR [eax]
  403ea1:	test   BYTE PTR [ebp-0x4eeb3356],bh
  403ea7:	pop    esp
  403ea8:	cmc    
  403ea9:	adc    al,0xa3
  403eab:	dec    edx
  403eac:	mov    fs,WORD PTR [edx]
  403eae:	dec    edi
  403eaf:	xchg   ecx,eax
  403eb0:	dec    ebx
  403eb1:	sbb    DWORD PTR [ebp+0x3b622d84],ecx
  403eb7:	scas   al,BYTE PTR es:[edi]
  403eb8:	sub    dh,ah
  403eba:	xchg   eax,esi
  403ebc:	repz in eax,dx
  403ebe:	xchg   eax,ebp
  403ec0:	inc    ecx
  403ec1:	retf   0x2168
  403ec4:	push   ebx
  403ec5:	pop    ecx
  403ec6:	add    ah,al
  403ec8:	inc    esi
  403ec9:	lods   eax,DWORD PTR ds:[esi]
  403eca:	fdiv   st(7),st
  403ecc:	mov    bl,0xf6
  403ece:	loop   0x403ea7
  403ed0:	pop    esp
  403ed1:	ss dec eax
  403ed3:	mov    ecx,0x12e47c69
  403ed8:	cmp    eax,0xc02b415
  403edd:	jbe    0x403ed9
  403edf:	fidivr DWORD PTR [ecx+0x70]
  403ee2:	addr16 jle 0x403ecd
  403ee5:	retf   
  403ee6:	cmp    eax,0xbcea5c6e
  403eeb:	push   DWORD PTR [esi-0x45]
  403eee:	mov    BYTE PTR [edx+edx*2+0x6e],0xa0
  403ef3:	lahf   
  403ef4:	and    al,0x3b
  403ef6:	adc    bh,bl
  403ef8:	std    
  403ef9:	mul    DWORD PTR [eax]
  403efb:	int3   
  403efc:	dec    eax
  403efd:	and    BYTE PTR [edx+0x9],dh
  403f00:	push   cs
  403f01:	sbb    cl,BYTE PTR [esi+0x64]
  403f04:	in     eax,dx
  403f05:	xor    dh,dh
  403f07:	add    edi,esi
  403f09:	(bad)  
  403f0a:	sti    
  403f0b:	push   edi
  403f0c:	push   0x8
  403f0e:	push   0x44
  403f10:	das    
  403f11:	pop    edx
  403f12:	lea    esp,[edx-0xf]
  403f15:	mov    esi,0xdcd4e993
  403f1a:	mov    dh,bh
  403f1c:	push   eax
  403f1d:	xor    BYTE PTR [esi+edi*1],0xc9
  403f21:	in     eax,0x19
  403f23:	or     DWORD PTR [edi+ecx*1-0x5a],0xc90b8496
  403f2b:	or     al,0x93
  403f2d:	push   ebp
  403f2e:	retf   0xc526
  403f31:	nop
  403f32:	rol    DWORD PTR [eax*2+0x745e9c58],cl
  403f39:	jne    0x403efb
  403f3b:	jo     0x403f69
  403f3d:	setno  BYTE PTR [edi+0x1d]
  403f41:	adc    eax,0x2cd4d414
  403f46:	adc    BYTE PTR [ecx+0x2],dl
  403f49:	xchg   edi,eax
  403f4a:	mov    ebp,DWORD PTR [edi-0x56a6352d]
  403f50:	adc    DWORD PTR [ecx],eax
  403f52:	(bad)  
  403f53:	mov    bl,0x4b
  403f55:	imul   edx,DWORD PTR [esi-0x2d932238],0xffffffdf
  403f5c:	rcl    BYTE PTR [edi+0x39],1
  403f5f:	pop    edi
  403f60:	sbb    al,0x8d
  403f62:	jl     0x403fe2
  403f64:	or     al,0x8c
  403f66:	(bad)  
  403f68:	lea    edi,[ebp+ecx*8-0x47]
  403f6c:	sahf   
  403f6d:	into   
  403f6e:	mov    DWORD PTR [edi+eax*4+0x40],esi
  403f72:	iret   
  403f73:	jmp    0x3f1d22e2
  403f78:	mov    cs,WORD PTR [edx-0x64]
  403f7b:	(bad)  
  403f7c:	xor    BYTE PTR [edx-0x5f],bl
  403f7f:	jp     0x403f93
  403f81:	popf   
  403f82:	mov    dh,0x5e
  403f84:	aaa    
  403f85:	ror    BYTE PTR [ecx+0x705d0289],0x61
  403f8c:	jge    0x40400b
  403f8e:	or     cl,dl
  403f90:	mul    DWORD PTR [ecx+0x4bcbafe4]
  403f96:	data16 ficomp DWORD PTR [ecx+0x14]
  403f9a:	sbb    BYTE PTR [esi+0x18a0aeb0],bh
  403fa0:	not    DWORD PTR [esp+esi*2+0x2]
  403fa4:	(bad)  
  403fa5:	stc    
  403fa6:	fwait
  403fa7:	jl     0x403fb8
  403fa9:	dec    esp
  403faa:	gs push edx
  403fac:	push   edi
  403fad:	push   esp
  403fae:	lods   eax,DWORD PTR ds:[esi]
  403faf:	dec    eax
  403fb0:	sub    BYTE PTR [ecx-0xe],cl
  403fb3:	outs   dx,DWORD PTR ds:[esi]
  403fb4:	xor    DWORD PTR [ebp+0x4d499b38],ecx
  403fba:	pop    ds
  403fbb:	pop    ebx
  403fbc:	cld    
  403fbd:	xchg   esi,eax
  403fbe:	xor    dl,BYTE PTR [eax+0x76]
  403fc1:	jecxz  0x40402d
  403fc3:	scas   eax,DWORD PTR es:[edi]
  403fc4:	fsubrp st(0),st
  403fc6:	aas    
  403fc7:	pop    edi
  403fc8:	pop    edx
  403fc9:	dec    ebp
  403fca:	jmp    0x1a4a:0x8eecef2b
  403fd1:	xchg   ebp,eax
  403fd2:	jle    0x403ff5
  403fd4:	push   ss
  403fd5:	dec    ebx
  403fd6:	pop    ebp
  403fd7:	in     al,0x81
  403fd9:	add    ch,dh
  403fdb:	mov    ah,0xc9
  403fdd:	repnz mov dl,0xcd
  403fe0:	das    
  403fe1:	jo     0x403ffe
  403fe3:	cwde   
  403fe4:	hlt    
  403fe5:	add    BYTE PTR [edx],dl
  403fe7:	mov    DWORD PTR [edx+eax*1-0x182c1197],esi
  403fee:	pop    ds
  403fef:	dec    esi
  403ff0:	lods   eax,DWORD PTR ds:[esi]
  403ff1:	popf   
  403ff2:	je     0x404027
  403ff4:	sbb    BYTE PTR [ebp+0x11],0xb1
  403ff8:	into   
  403ff9:	hlt    
  403ffa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ffb:	int    0xb9
  403ffd:	out    0x94,al
  403fff:	in     eax,dx
  404000:	mov    ecx,0x991d09e6
  404005:	push   cs
  404006:	jbe    0x403fbd
  404008:	(bad)  
  40400a:	iret   
  40400b:	dec    edx
  40400c:	xor    esp,ecx
  40400e:	retf   
  40400f:	fwait
  404010:	ins    DWORD PTR es:[edi],dx
  404011:	xchg   DWORD PTR [ecx+0x13],esi
  404014:	xchg   ebp,eax
  404015:	xchg   ecx,eax
  404016:	sbb    DWORD PTR [ebp-0x16],eax
  404019:	aad    0x5
  40401b:	stc    
  40401c:	ss push ebp
  40401e:	in     eax,0xe8
  404020:	retf   0x903
  404023:	adc    al,0x49
  404025:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404026:	out    dx,al
  404027:	inc    esi
  404028:	es push edi
  40402a:	iret   
  40402b:	inc    ecx
  40402c:	xor    esi,eax
  40402e:	push   ecx
  40402f:	es jbe 0x403fee
  404032:	cmp    eax,0x4d3c1aff
  404037:	xor    ecx,esi
  404039:	xlat   BYTE PTR ds:[ebx]
  40403a:	dec    ecx
  40403b:	js     0x40402a
  40403d:	inc    ebx
  40403e:	sahf   
  40403f:	out    dx,eax
  404040:	mov    edx,0x37622e2b
  404045:	mov    al,ds:0xb93a9f5b
  40404a:	jge    0x40407e
  40404c:	popf   
  40404d:	nop
  40404e:	add    BYTE PTR [esi+0x39],dh
  404051:	xor    bl,BYTE PTR [edi-0x3305e18f]
  404057:	mov    ebx,0xdb9ebaac
  40405c:	add    ch,dl
  40405e:	(bad)
  404061:	cmp    al,0x98
  404063:	lock icebp 
  404065:	shr    edx,cl
  404067:	and    al,0x62
  404069:	popa   
  40406a:	xchg   BYTE PTR [ecx+0x3a],bh
  40406d:	mov    esp,0x27c2af14
  404072:	push   esi
  404073:	mov    DWORD PTR [edx+0x154f29b9],esi
  404079:	(bad)  
  40407a:	cmp    BYTE PTR [esi+0x797cbc5f],bh
  404080:	lea    esp,[esi+0x2c]
  404083:	das    
  404084:	fstp   QWORD PTR es:[edi]
  404087:	mov    esp,0x9e9d6058
  40408c:	daa    
  40408d:	xchg   ebp,eax
  40408e:	sub    dl,dl
  404090:	dec    ecx
  404091:	pop    es
  404092:	jle    0x4040c0
  404094:	arpl   WORD PTR [ebx+0x5980ccfc],sp
  40409a:	arpl   sp,di
  40409c:	xchg   DWORD PTR [edx+0x55],edi
  40409f:	pop    edx
  4040a0:	push   ecx
  4040a1:	test   ah,dh
  4040a3:	mov    eax,0xb2d6c168
  4040a8:	sar    esi,cl
  4040aa:	xor    edx,DWORD PTR ds:0x3536bdb3
  4040b0:	call   0xf2660de9
  4040b5:	cli    
  4040b6:	fcomp  QWORD PTR [ebx+0x48c31209]
  4040bc:	fstp   TBYTE PTR [esi+0x5f]
  4040bf:	nop
  4040c0:	mov    bl,dl
  4040c2:	adc    DWORD PTR [ecx+0x49ed87aa],0x1cc6f089
  4040cc:	cmp    BYTE PTR [edx],0x3f
  4040cf:	push   eax
  4040d0:	mov    DWORD PTR [edi],eax
  4040d2:	inc    eax
  4040d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040d4:	pushf  
  4040d5:	psubd  mm5,QWORD PTR [eax+esi*8+0x48]
  4040da:	loopne 0x404120
  4040dc:	bound  esi,QWORD PTR ds:0x7440961f
  4040e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040e3:	das    
  4040e4:	adc    edi,DWORD PTR [edi-0x6a]
  4040e7:	jb     0x4040b6
  4040e9:	push   ebx
  4040ea:	cdq    
  4040eb:	sbb    esi,DWORD PTR [eax+edx*4-0x248ec22f]
  4040f2:	push   0xde940d99
  4040f7:	xchg   BYTE PTR [esi],ah
  4040f9:	push   ebp
  4040fa:	jmp    0x4040f4
  4040fc:	mov    dh,0x7c
  4040fe:	aas    
  4040ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404100:	cwde   
  404101:	sbb    eax,eax
  404103:	push   es
  404104:	iret   
  404105:	fimul  WORD PTR [ecx]
  404107:	cmp    DWORD PTR [esi-0x64],0xffffff87
  40410b:	nop
  40410c:	mov    esi,0xaf28bb06
  404111:	sbb    al,0xa2
  404113:	sub    ah,BYTE PTR [edx]
  404115:	test   bh,bl
  404117:	retf   
  404118:	adc    esp,DWORD PTR [ecx+0x5]
  40411b:	push   edx
  40411c:	xor    edx,edi
  40411e:	cld    
  40411f:	xchg   DWORD PTR [edi+0xbc950e1],edi
  404125:	inc    DWORD PTR [eax-0x74912526]
  40412b:	in     al,dx
  40412c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40412d:	les    edx,FWORD PTR [ecx]
  40412f:	or     eax,DWORD PTR gs:[esi]
  404132:	repz sbb BYTE PTR [edi-0x80],al
  404136:	(bad)  
  404138:	pop    esi
  404139:	mov    dh,0xd2
  40413b:	mov    WORD PTR [eax+0x74],cs
  40413e:	inc    esp
  40413f:	pop    ebp
  404140:	pop    esi
  404141:	mov    BYTE PTR [edi+0xb],bl
  404144:	mov    cl,0xf5
  404146:	dec    ebp
  404147:	dec    eax
  404148:	test   al,0x87
  40414a:	lea    ecx,[esp+ebx*8+0x553cb8c5]
  404151:	mov    ah,0xef
  404153:	xchg   ebx,eax
  404154:	jo     0x404173
  404156:	push   esi
  404157:	pop    ebp
  404158:	(bad)  
  404159:	bsf    ebx,DWORD PTR [edi-0x2]
  40415d:	xor    DWORD PTR [eax-0x700d3553],ebx
  404163:	lahf   
  404164:	ret    
  404165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404166:	std    
  404167:	sub    DWORD PTR [edx+edx*1-0x6d],esi
  40416b:	ja     0x40412b
  40416d:	dec    ebp
  40416e:	mov    eax,0x893bda5d
  404173:	jge    0x40416a
  404175:	mov    ?,esp
  404177:	dec    eax
  404178:	loopne 0x4041cd
  40417a:	jmp    FWORD PTR [edx+0x47]
  40417d:	inc    ecx
  40417e:	ss jecxz 0x4041f7
  404181:	mov    bl,0x7c
  404183:	adc    al,0xd1
  404185:	mov    cl,0xfb
  404187:	mov    al,0xcf
  404189:	mov    ?,WORD PTR [ebp+0x3cda3c87]
  40418f:	sub    eax,0xbead1b22
  404194:	xor    ecx,esp
  404196:	fdiv   QWORD PTR [edx+0x59]
  404199:	jl     0x40412d
  40419b:	xchg   edx,eax
  40419c:	sub    edx,DWORD PTR ds:0x50902b9b
  4041a2:	cli    
  4041a3:	jne    0x4041ed
  4041a5:	and    eax,0xf27568f8
  4041aa:	sub    bh,BYTE PTR [edi]
  4041ac:	dec    esi
  4041ad:	push   ss
  4041ae:	popa   
  4041af:	and    DWORD PTR [ebp-0x2a1cc072],0x6a
  4041b6:	cmp    al,0x61
  4041b8:	jg     0x40421e
  4041ba:	sbb    dl,BYTE PTR [ecx-0x2e]
  4041bd:	out    0x1c,al
  4041bf:	inc    ebx
  4041c0:	push   cs
  4041c1:	mov    esi,0xf76745be
  4041c6:	addr16 loop 0x4041f9
  4041c9:	jnp    0x40423f
  4041cb:	out    dx,al
  4041cc:	stos   BYTE PTR es:[edi],al
  4041cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041ce:	in     eax,0x5d
  4041d0:	hlt    
  4041d1:	adc    eax,0x952e8019
  4041d6:	dec    esi
  4041d7:	stos   DWORD PTR es:[edi],eax
  4041d8:	pop    edi
  4041d9:	pop    ss
  4041da:	push   0xffffff93
  4041dc:	push   esi
  4041dd:	aas    
  4041de:	xchg   ebx,eax
  4041df:	adc    al,0x77
  4041e1:	cmp    eax,ebp
  4041e3:	(bad)  
  4041e4:	jo     0x4041ca
  4041e6:	mov    ch,0x1e
  4041e8:	xchg   esi,eax
  4041e9:	sbb    edx,DWORD PTR [ebx+0xd63de33]
  4041ef:	inc    eax
  4041f0:	lods   eax,DWORD PTR ds:[esi]
  4041f1:	fmul   DWORD PTR [esi+0x5e]
  4041f4:	pop    ds
  4041f5:	cli    
  4041f6:	sti    
  4041f7:	ja     0x40420f
  4041f9:	jbe    0x4041f8
  4041fb:	stc    
  4041fc:	pop    esi
  4041fd:	loop   0x40418a
  4041ff:	sti    
  404200:	adc    ah,BYTE PTR [edi]
  404202:	xor    al,0xda
  404204:	sti    
  404205:	jmp    0x40424f
  404207:	sbb    edx,0x334d0d26
  40420d:	push   eax
  40420e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40420f:	adc    DWORD PTR [esi],0x3b
  404212:	mov    eax,0x82fe1a88
  404217:	rcr    ebp,cl
  404219:	cmp    DWORD PTR [ecx+0x30],eax
  40421c:	clc    
  40421d:	jle    0x404280
  40421f:	mov    ch,0x7a
  404221:	sbb    eax,0xcf1e9656
  404226:	or     BYTE PTR [esi+0x71],dh
  404229:	inc    ebp
  40422a:	mov    WORD PTR [esi],?
  40422c:	(bad)  
  40422d:	loop   0x40429d
  40422f:	les    esp,FWORD PTR [ebx-0x67]
  404232:	pop    edi
  404233:	push   ebx
  404234:	sub    dl,al
  404236:	mov    al,ds:0x1548fea0
  40423b:	mov    BYTE PTR [edi],ah
  40423d:	xchg   edx,eax
  40423e:	repnz or ch,BYTE PTR [ebx]
  404241:	mov    ch,0xea
  404243:	sbb    edx,edi
  404245:	mov    ah,0xe1
  404247:	ins    DWORD PTR es:[edi],dx
  404248:	sub    al,0x99
  40424a:	js     0x4042ca
  40424c:	push   ss
  40424d:	add    eax,0x3ecc23f2
  404252:	inc    ecx
  404253:	push   ecx
  404254:	dec    esi
  404255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404256:	dec    ebx
  404257:	cmp    al,0x78
  404259:	xor    esi,DWORD PTR [edx]
  40425b:	stc    
  40425c:	test   al,0xf4
  40425e:	iret   
  40425f:	pop    eax
  404260:	pop    edx
  404261:	retf   
  404262:	or     eax,0x598d4274
  404267:	jmp    0x632c:0x7cbd9086
  40426e:	sub    BYTE PTR [edx],dl
  404270:	jno    0x404200
  404272:	or     eax,0xab39f4e9
  404277:	sbb    ebx,DWORD PTR ds:0x4125562
  40427d:	(bad)  
  40427e:	loopne 0x40424d
  404280:	inc    ebp
  404281:	sub    DWORD PTR [eax],ebp
  404283:	mov    cl,0xac
  404285:	adc    esp,eax
  404287:	sub    ah,bl
  404289:	push   ecx
  40428a:	and    al,ah
  40428c:	sbb    edi,DWORD PTR [ebx+eiz*1-0x5057ff09]
  404293:	and    eax,0xddd639f2
  404298:	or     ebp,DWORD PTR [ebx]
  40429a:	mov    al,ds:0x4a2e8362
  40429f:	inc    esi
  4042a0:	inc    edx
  4042a1:	mov    ebp,0x29610951
  4042a6:	xchg   ebx,eax
  4042a7:	mov    DWORD PTR [esi],edi
  4042a9:	jmp    0x404292
  4042ab:	pop    ss
  4042ac:	leave  
  4042ad:	sbb    esp,DWORD PTR [edi]
  4042af:	sbb    BYTE PTR ds:0x1b3e65fb,0xa
  4042b6:	ror    BYTE PTR [edx+0x4769cdad],1
  4042bc:	dec    ebx
  4042bd:	and    esi,edx
  4042bf:	in     eax,dx
  4042c0:	in     eax,0x4e
  4042c2:	dec    ecx
  4042c3:	xchg   edi,eax
  4042c4:	aaa    
  4042c5:	jb     0x4042dd
  4042c7:	lahf   
  4042c8:	jge    0x40433d
  4042ca:	out    0x56,al
  4042cc:	lods   eax,DWORD PTR ds:[esi]
  4042cd:	stc    
  4042ce:	pop    edi
  4042cf:	mov    edi,0x11ca9978
  4042d4:	stc    
  4042d5:	out    0xcc,eax
  4042d7:	sub    al,0xad
  4042d9:	cmp    eax,0xb13e7a1c
  4042de:	int3   
  4042df:	cmp    bl,BYTE PTR [edx-0x4c]
  4042e2:	aaa    
  4042e3:	ja     0x4042d4
  4042e5:	inc    ebp
  4042e6:	or     eax,0xb5defe62
  4042eb:	(bad)  
  4042ec:	xchg   ebx,eax
  4042ed:	cmp    edi,DWORD PTR ds:0xb7977d7
  4042f3:	call   0x48abc688
  4042f8:	sahf   
  4042f9:	cdq    
  4042fa:	pop    edx
  4042fb:	test   DWORD PTR [esi+ebx*1],esi
  4042fe:	xor    BYTE PTR [edi+0x29],bh
  404301:	dec    edx
  404302:	or     al,0xb1
  404304:	push   esp
  404305:	cli    
  404306:	jb     0x4042dc
  404308:	mov    bh,BYTE PTR [eax+0x5507bb87]
  40430e:	out    0x74,al
  404310:	add    DWORD PTR [esi-0x49bb5237],eax
  404316:	icebp  
  404317:	xchg   esi,eax
  404318:	xchg   ebx,eax
  404319:	mov    ebp,0xee842c0d
  40431e:	dec    edx
  40431f:	das    
  404320:	jge    0x4042a8
  404322:	and    DWORD PTR [esi+0x10],ebx
  404325:	bts    DWORD PTR [esi-0x63],ebp
  404329:	(bad)  
  40432a:	retf   
  40432b:	sub    al,0xf9
  40432d:	inc    ebx
  40432e:	scas   eax,DWORD PTR es:[edi]
  40432f:	pusha  
  404330:	add    al,0x76
  404332:	cwde   
  404333:	aas    
  404334:	addr16 mov ebp,0x5410a12b
  40433a:	mov    dl,0x6e
  40433c:	add    eax,0xb22f1724
  404341:	mov    ch,0x7f
  404343:	stos   BYTE PTR es:[edi],al
  404344:	int    0xf2
  404346:	bound  edx,QWORD PTR [ecx]
  404348:	fnstcw WORD PTR [ecx+0x5e3c4135]
  40434e:	mov    edx,0x8e7518f5
  404353:	pushf  
  404354:	add    ah,BYTE PTR [eax-0x33976500]
  40435a:	jne    0x4042dd
  40435c:	jbe    0x404300
  40435e:	sub    eax,0xcd3a09e3
  404363:	xchg   ebp,eax
  404364:	sub    edi,DWORD PTR [edx]
  404366:	ins    DWORD PTR es:[edi],dx
  404367:	iret   
  404368:	stc    
  404369:	pop    esi
  40436a:	adc    bl,BYTE PTR [esi+0x56254cd6]
  404370:	fadd   QWORD PTR [ebx-0xbed7c9a]
  404376:	add    edi,ecx
  404378:	addr16 pop ss
  40437a:	lock mov eax,0x30200d0e
  404380:	xchg   edx,eax
  404381:	dec    esp
  404382:	ins    BYTE PTR es:[edi],dx
  404383:	or     eax,0xc1a4d908
  404388:	mov    dl,0xf2
  40438a:	pop    eax
  40438b:	popf   
  40438c:	pusha  
  40438d:	xor    ch,BYTE PTR [esi]
  40438f:	fidivr DWORD PTR [ecx]
  404391:	ret    0xe097
  404394:	les    ebx,FWORD PTR [ecx-0x5d]
  404397:	mov    ebx,ebp
  404399:	mov    ebp,0x44ec9007
  40439e:	adc    DWORD PTR [ecx],ecx
  4043a0:	ficomp DWORD PTR [ebx]
  4043a2:	popf   
  4043a3:	in     al,dx
  4043a4:	dec    edx
  4043a5:	cwde   
  4043a6:	cmc    
  4043a7:	adc    al,0x7f
  4043a9:	rol    bh,0xfc
  4043ac:	jnp    0x4043f4
  4043ae:	inc    ebx
  4043af:	ins    BYTE PTR es:[edi],dx
  4043b0:	aas    
  4043b1:	jnp    0x404337
  4043b3:	imul   ecx,DWORD PTR [edx-0x62],0x96f0c9fb
  4043ba:	retf   0x34a2
  4043bd:	iret   
  4043be:	test   BYTE PTR [eax+0x76],al
  4043c1:	test   DWORD PTR [eax],esi
  4043c3:	mov    cl,0xec
  4043c5:	lods   al,BYTE PTR ds:[esi]
  4043c6:	jno    0x404354
  4043c8:	inc    esp
  4043c9:	shr    BYTE PTR [eax-0x15472d5f],1
  4043cf:	mov    bh,0x9d
  4043d1:	or     DWORD PTR [edi-0x46fbb4df],0xffffffd0
  4043d8:	and    cl,cl
  4043da:	scas   al,BYTE PTR es:[edi]
  4043db:	out    dx,eax
  4043dc:	sti    
  4043dd:	push   ebp
  4043de:	push   ecx
  4043df:	add    eax,0x132e0516
  4043e4:	sub    edx,ecx
  4043e6:	call   0xe33f:0x57dd88d
  4043ed:	push   esi
  4043ee:	jb     0x40445f
  4043f0:	out    0x3b,eax
  4043f2:	cmp    BYTE PTR [eax-0x3ef1a650],bh
  4043f8:	add    eax,0xa9a6c186
  4043fd:	and    DWORD PTR [ecx+0x79fba271],0xfc38be9b
  404407:	scas   eax,DWORD PTR es:[edi]
  404408:	or     BYTE PTR [ebx],ah
  40440a:	call   0x9ce0:0x6675c05c
  404411:	xlat   BYTE PTR ds:[ebx]
  404412:	mov    ecx,0xe90193f5
  404417:	add    BYTE PTR [edi-0x162f5b1c],ah
  40441d:	lock inc edi
  40441f:	inc    edi
  404420:	jae    0x404458
  404422:	inc    eax
  404423:	stos   DWORD PTR es:[edi],eax
  404424:	add    al,0xc3
  404426:	test   al,0xfa
  404428:	fdiv   DWORD PTR [ebp-0x519020ff]
  40442e:	jge    0x4043e6
  404430:	bound  edi,QWORD PTR [edi-0x7f759840]
  404436:	rcl    BYTE PTR [ebx],1
  404438:	push   esi
  404439:	xor    DWORD PTR [edx+0x2cac7b11],ebp
  40443f:	idiv   ch
  404441:	mov    ecx,0xdcbce1d0
  404446:	mov    ecx,cs
  404448:	xchg   esp,eax
  404449:	rcr    BYTE PTR [edx+edx*2+0x7ce20ce5],0x8f
  404451:	fmulp  st(2),st
  404453:	jno    0x40441e
  404455:	or     cl,BYTE PTR [ecx]
  404457:	pop    ecx
  404458:	xchg   edi,eax
  404459:	jnp    0x404402
  40445b:	xor    DWORD PTR [ecx+0x25b49f85],eax
  404461:	jmp    0x2e9f:0x584a0fb9
  404468:	pfmul  mm7,mm1
  40446c:	pop    esi
  40446d:	or     eax,0x12e52dc0
  404472:	jl     0x40449d
  404474:	not    BYTE PTR [ecx]
  404476:	push   ebp
  404477:	ror    edx,cl
  404479:	test   DWORD PTR [ebx],0x5e05266c
  40447f:	aam    0x4e
  404481:	les    edx,FWORD PTR [ebp-0x65c12b6d]
  404487:	jb     0x40446e
  404489:	lods   eax,DWORD PTR ds:[esi]
  40448a:	leave  
  40448b:	loopne 0x404449
  40448d:	cmp    esi,edx
  40448f:	pop    ecx
  404490:	or     eax,0xdaee5e2c
  404496:	jne    0x404506
  404498:	mov    dl,0xb3
  40449a:	dec    ebx
  40449b:	inc    esp
  40449c:	mov    esi,0xc8f8feb9
  4044a1:	sbb    dl,BYTE PTR [ebx+esi*2-0x506c309b]
  4044a8:	xchg   esi,eax
  4044a9:	stc    
  4044aa:	stos   BYTE PTR es:[edi],al
  4044ab:	or     DWORD PTR [esi-0x7e],0x6e
  4044af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044b0:	lock mov edx,0x90d11306
  4044b6:	xlat   BYTE PTR ds:[ebx]
  4044b7:	and    cl,BYTE PTR [ecx]
  4044b9:	and    al,0xad
  4044bb:	jne    0x4044c9
  4044bd:	retf   
  4044be:	nop
  4044bf:	shl    DWORD PTR [edx-0x7c],cl
  4044c2:	cli    
  4044c3:	cdq    
  4044c4:	fcmovnbe st,st(2)
  4044c6:	retf   0x3fe0
  4044c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044ca:	call   0x7cdb:0xbeefb8cf
  4044d1:	adc    ecx,DWORD PTR [esi]
  4044d3:	mov    DWORD PTR [eax+0x4beb1bc1],ecx
  4044d9:	cmp    al,0x41
  4044db:	mov    cl,0x8c
  4044dd:	mov    esp,0xc30e220f
  4044e2:	scas   eax,DWORD PTR es:[edi]
  4044e3:	cwde   
  4044e4:	jp     0x40449f
  4044e6:	les    esp,FWORD PTR [esi+ebx*8]
  4044e9:	push   ss
  4044ea:	enter  0x3f65,0x92
  4044ee:	adc    edx,DWORD PTR [ecx]
  4044f0:	into   
  4044f1:	fadd   DWORD PTR [ecx]
  4044f3:	es push ebx
  4044f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044f6:	xor    DWORD PTR [eax-0x1c92aaaa],edx
  4044fc:	jnp    0x4044d7
  4044fe:	fisttp WORD PTR [edi-0x74]
  404501:	adc    eax,0x7e1bc9af
  404506:	mov    esp,0x197188bb
  40450b:	and    BYTE PTR [edx],cl
  40450d:	shl    dh,0xa9
  404510:	and    DWORD PTR [ebx+0x69],edx
  404513:	call   FWORD PTR [ebx-0x1c]
  404516:	mov    cl,BYTE PTR [ecx+0x32]
  404519:	push   0xdfb0e8d1
  40451e:	push   esi
  40451f:	jae    0x40452a
  404521:	cwde   
  404522:	dec    ebx
  404523:	adc    eax,0x8549234b
  404528:	pop    esi
  404529:	int    0x75
  40452b:	leave  
  40452c:	js     0x404595
  40452e:	adc    DWORD PTR [edx+ebp*1],edx
  404531:	mov    cl,0x67
  404533:	aaa    
  404534:	sbb    ecx,DWORD PTR [edi+0x566baf7b]
  40453a:	cmc    
  40453b:	mov    ebp,0xb17a9ca1
  404540:	hlt    
  404541:	lea    esi,[ebx]
  404543:	data16 mov ds:0xd5657d47,al
  404549:	in     al,dx
  40454a:	ret    
  40454b:	rcr    BYTE PTR [eax+0x4a],cl
  40454e:	mov    ebx,0xae7e145c
  404553:	dec    ebx
  404554:	sub    dl,BYTE PTR [ecx+0x26]
  404557:	leave  
  404558:	neg    BYTE PTR [ebx+0x12]
  40455b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40455c:	(bad)  
  40455d:	lahf   
  40455e:	iret   
  40455f:	sub    edi,ebx
  404561:	loopne 0x4045c2
  404563:	dec    eax
  404564:	fcmovbe st,st(5)
  404566:	(bad)  
  404567:	jne    0x404581
  404569:	jb     0x40459a
  40456b:	xchg   edi,eax
  40456c:	mov    esi,0x50bb54b2
  404571:	pop    esp
  404572:	and    ch,BYTE PTR [edi-0x5356ea73]
  404578:	cdq    
  404579:	jae    0x4045eb
  40457b:	rcl    DWORD PTR [eax+0x1],0x1a
  40457f:	loope  0x40457a
  404581:	jp     0x4045a5
  404583:	dec    ecx
  404584:	push   ecx
  404585:	inc    ecx
  404586:	ins    DWORD PTR es:[edi],dx
  404587:	fadd   st(7),st
  404589:	cmp    ebx,DWORD PTR [esi]
  40458b:	push   es
  40458c:	sar    DWORD PTR [edi+0xc],cl
  40458f:	mov    ecx,0xe95f8c3c
  404594:	sar    BYTE PTR [ecx+0x3c],1
  404597:	pushf  
  404598:	sbb    eax,DWORD PTR [ebx+0x6d]
  40459b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40459c:	out    0xa1,eax
  40459e:	adc    eax,DWORD PTR [ecx-0x59]
  4045a1:	dec    ecx
  4045a2:	fst    QWORD PTR [ebx]
  4045a4:	aam    0xdb
  4045a6:	xchg   edi,eax
  4045a7:	push   cs
  4045a8:	mov    ah,dl
  4045aa:	jp     0x404534
  4045ac:	jg     0x4045f9
  4045ae:	cwde   
  4045af:	add    ebx,DWORD PTR [ebx+0x45]
  4045b2:	cld    
  4045b3:	loop   0x4045ca
  4045b5:	mov    bh,0x18
  4045b7:	jnp    0x4045cc
  4045b9:	in     eax,0x2f
  4045bb:	inc    ebp
  4045bc:	fsub   QWORD PTR [edx+0x3a]
  4045bf:	das    
  4045c0:	outs   dx,DWORD PTR ds:[esi]
  4045c1:	mov    BYTE PTR [ebx-0x3fc444da],dh
  4045c7:	push   ebp
  4045c8:	ret    0xa454
  4045cb:	rol    DWORD PTR [eax],cl
  4045cd:	jo     0x4045f5
  4045cf:	popf   
  4045d0:	call   0x9b57caa0
  4045d5:	cld    
  4045d6:	cmp    al,BYTE PTR [edx+0x36]
  4045d9:	rcr    al,cl
  4045db:	xor    bh,BYTE PTR [esp+ebx*8+0x7]
  4045df:	cs test al,0xc8
  4045e2:	rcr    BYTE PTR [edi],0xf4
  4045e5:	das    
  4045e6:	ds stc 
  4045e8:	add    BYTE PTR [ebp-0x4a8f8b09],ah
  4045ee:	aad    0xfe
  4045f0:	sti    
  4045f1:	mov    ebx,0x5134ba5a
  4045f6:	xor    eax,0xa9d609f4
  4045fb:	out    dx,eax
  4045fc:	add    BYTE PTR [esi-0x22a7370],0x32
  404603:	ja     0x4045ba
  404605:	push   esp
  404606:	mov    esp,0x106ed224
  40460b:	ins    DWORD PTR es:[edi],dx
  40460c:	adc    DWORD PTR [ebp+0x52],ebx
  40460f:	xchg   esi,eax
  404610:	add    eax,0xa25a0838
  404615:	dec    esp
  404616:	push   edx
  404617:	popa   
  404618:	pusha  
  404619:	adc    BYTE PTR [ecx+esi*2],0x2c
  40461d:	mov    esp,0x9d128e2
  404622:	add    dh,dl
  404624:	xor    BYTE PTR [ebx+edi*8],ah
  404627:	mov    bl,0x9
  404629:	cld    
  40462a:	push   esp
  40462b:	xchg   ebx,eax
  40462c:	lahf   
  40462d:	sbb    ah,BYTE PTR [esi-0x53]
  404630:	mov    edi,0x6e1a9cc0
  404635:	mov    dl,BYTE PTR [ebp-0x24927672]
  40463b:	push   esp
  40463c:	inc    ebp
  40463d:	repnz data16 cmp BYTE PTR [ecx-0x5701d076],dh
  404645:	ins    BYTE PTR es:[edi],dx
  404646:	and    bh,BYTE PTR [ebx]
  404648:	push   cs
  404649:	(bad)  [edx]
  40464b:	sahf   
  40464c:	std    
  40464d:	jns    0x404609
  40464f:	fstp   TBYTE PTR [ebx]
  404651:	pop    edx
  404652:	test   al,0xf1
  404654:	fisubr DWORD PTR [esi-0x3fa646c]
  40465a:	xor    cl,bl
  40465c:	not    BYTE PTR [eax+0x750856e8]
  404662:	sar    BYTE PTR [esi-0x4a1b985f],0x4a
  404669:	in     eax,dx
  40466a:	mov    dl,0x9a
  40466c:	fnstsw WORD PTR [eax+0x1a191e73]
  404672:	jno    0x40465a
  404674:	push   edi
  404675:	lea    ebp,[esi]
  404677:	xchg   esi,eax
  404678:	mov    ecx,0xf283a143
  40467d:	arpl   WORD PTR [esi],bx
  40467f:	sbb    ah,BYTE PTR [eax+0x223a2588]
  404685:	jg     0x4046a1
  404687:	add    al,0xc7
  404689:	and    DWORD PTR [edx+0x1ffcee9a],0x5b
  404690:	(bad)  [ebp+0x1f]
  404693:	cmp    eax,0xbd390dbe
  404698:	adc    edx,ebx
  40469a:	ffree  st(0)
  40469c:	inc    ebx
  40469d:	inc    DWORD PTR [ecx+0x29e6b61a]
  4046a3:	cmp    ebp,esp
  4046a5:	mov    al,ds:0xfee5cb68
  4046aa:	gs stos BYTE PTR es:[edi],al
  4046ac:	enter  0xb466,0x7d
  4046b0:	xchg   esi,eax
  4046b1:	fcom   DWORD PTR [edi+0x20a44ccf]
  4046b7:	mov    dh,0x38
  4046b9:	or     ebx,DWORD PTR [ecx]
  4046bb:	push   eax
  4046bc:	(bad)  
  4046bd:	je     0x40472f
  4046bf:	int3   
  4046c0:	shr    DWORD PTR [ecx],1
  4046c2:	test   BYTE PTR [edx],ah
  4046c4:	cmp    al,0x20
  4046c6:	cmp    ch,BYTE PTR [ecx-0x4195c17a]
  4046cc:	cmc    
  4046cd:	inc    edx
  4046ce:	dec    esi
  4046cf:	cli    
  4046d0:	pop    ecx
  4046d1:	fisubr WORD PTR gs:[ebx+edi*1]
  4046d5:	adc    BYTE PTR ds:0x3da2d2ac,0xf
  4046dc:	mov    ch,0x3d
  4046de:	scas   al,BYTE PTR es:[edi]
  4046df:	adc    eax,0xebe68f9a
  4046e4:	xlat   BYTE PTR ds:[ebx]
  4046e5:	push   edi
  4046e6:	fldenv [ecx-0x65486108]
  4046ec:	dec    esi
  4046ed:	hlt    
  4046ee:	mov    eax,0xaa0c3d9f
  4046f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046f4:	xchg   edx,eax
  4046f5:	pop    ebp
  4046f6:	retf   
  4046f7:	sbb    ax,0xb98b
  4046fb:	mov    ebp,0xf90e8839
  404700:	sbb    ecx,esp
  404702:	xor    BYTE PTR [eax],bh
  404704:	test   eax,0xa82c7aac
  404709:	stos   DWORD PTR es:[edi],eax
  40470a:	scas   al,BYTE PTR es:[edi]
  40470b:	sub    DWORD PTR ds:0x12e9cae2,edi
  404711:	add    al,dl
  404713:	sub    DWORD PTR ds:0xe68955fc,esi
  404719:	cmp    BYTE PTR [edx],cl
  40471b:	test   al,0x24
  40471d:	call   0x24ff:0xa01d8bd4
  404724:	add    DWORD PTR [ebp-0x1f],eax
  404727:	nop
  404728:	pop    gs
  40472a:	ds je  0x4046d9
  40472d:	inc    edx
  40472e:	mov    esi,0x816f6ed1
  404733:	loop   0x404722
  404735:	xchg   ecx,eax
  404736:	scas   eax,DWORD PTR es:[edi]
  404737:	jmp    0x7e7d:0x47ea
  40473d:	xchg   edx,eax
  40473e:	nop
  40473f:	mov    esi,0x2d88da1b
  404744:	sub    eax,DWORD PTR [ecx]
  404746:	frstor [esi]
  404748:	cmp    BYTE PTR [ecx],bl
  40474a:	ins    DWORD PTR es:[edi],dx
  40474b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40474c:	mov    esi,DWORD PTR [edi]
  40474e:	pop    eax
  40474f:	dec    ebx
  404750:	mov    DWORD PTR [esi+edx*2],eax
  404753:	les    edx,FWORD PTR [eax+0x2a555a52]
  404759:	fst    DWORD PTR [eax]
  40475b:	aad    0xf2
  40475d:	int3   
  40475e:	pop    ecx
  40475f:	hlt    
  404760:	idiv   DWORD PTR [edx]
  404762:	mov    bh,0xcd
  404764:	ins    BYTE PTR es:[edi],dx
  404765:	push   ds
  404766:	or     ebx,edi
  404768:	aam    0x85
  40476a:	dec    edi
  40476b:	and    esp,ecx
  40476d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40476e:	mov    ah,0x4e
  404770:	into   
  404771:	mov    ah,0xed
  404773:	push   ds
  404774:	lock rcl DWORD PTR [eax+0x1a84dc73],0xf2
  40477c:	cli    
  40477d:	lahf   
  40477e:	bound  eax,QWORD PTR [ebx+edx*2+0x60]
  404782:	cmp    BYTE PTR [esi],al
  404784:	and    al,dh
  404786:	aad    0x36
  404788:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404789:	lea    ebx,[ecx-0x36]
  40478c:	or     BYTE PTR [edx],0xf8
  40478f:	dec    ebx
  404790:	cmp    BYTE PTR [edi],cl
  404792:	fistp  DWORD PTR [ebx]
  404794:	(bad)  
  404795:	pop    ecx
  404796:	push   0xffffffab
  404798:	xor    eax,0x992b8ada
  40479d:	or     eax,0x7f4532eb
  4047a2:	adc    eax,0xd7abf8c2
  4047a7:	out    dx,al
  4047a8:	sbb    eax,0x80c26a8d
  4047ad:	outs   dx,DWORD PTR ds:[esi]
  4047ae:	ror    BYTE PTR [ecx-0x3dc57a1b],1
  4047b4:	in     eax,0x1f
  4047b6:	cdq    
  4047b7:	sub    esi,ebp
  4047b9:	xchg   ebx,eax
  4047ba:	dec    eax
  4047bb:	adc    DWORD PTR [ebx+0x92430f3],0x1b
  4047c2:	jne    0x40482b
  4047c4:	sbb    edx,esp
  4047c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047c7:	shr    BYTE PTR [ebp+0x77d70af4],0x76
  4047ce:	aad    0x9f
  4047d0:	sub    BYTE PTR [si-0x5b],ch
  4047d4:	aam    0x9b
  4047d6:	int3   
  4047d7:	mov    edx,0x229747bc
  4047dc:	fdivr  QWORD PTR [ebx-0x14]
  4047df:	mov    al,0xb0
  4047e1:	pop    ds
  4047e2:	jnp    0x404850
  4047e4:	aas    
  4047e5:	or     eax,0x3c1ebe3c
  4047ea:	mov    ds:0x7fb2ecf2,al
  4047ef:	cmp    bl,dl
  4047f1:	push   edi
  4047f2:	xchg   BYTE PTR [edx-0x4211a3a6],bh
  4047f8:	and    ebp,edx
  4047fa:	push   edx
  4047fb:	cmp    DWORD PTR [esi],ebp
  4047fd:	out    0x6a,eax
  4047ff:	inc    ebx
  404800:	mov    esi,0xb309e6f5
  404805:	jns    0x4047f8
  404807:	in     al,dx
  404808:	sbb    al,0xe6
  40480a:	dec    edi
  40480b:	not    DWORD PTR [eax]
  40480d:	mov    ds:0x4d7d8c00,al
  404812:	std    
  404813:	out    0x64,eax
  404815:	into   
  404816:	lock das 
  404818:	inc    eax
  404819:	push   0x6f
  40481b:	pushf  
  40481c:	or     al,0x82
  40481e:	xor    al,0x7e
  404820:	fadd   QWORD PTR [edx]
  404822:	mov    edi,0x9897147
  404827:	retf   0x375e
  40482a:	pop    edx
  40482b:	hlt    
  40482c:	xchg   esp,eax
  40482d:	ins    DWORD PTR es:[edi],dx
  40482e:	repnz push ebp
  404830:	xor    cl,al
  404832:	add    ch,BYTE PTR [edx+0x6e]
  404835:	es loope 0x4047ca
  404838:	aad    0x9e
  40483a:	cmp    al,0x36
  40483c:	aas    
  40483d:	jae    0x404837
  40483f:	push   0xffffffd8
  404841:	arpl   WORD PTR [ecx+0x71fa95af],ax
  404847:	iret   
  404848:	cs mov dh,0x6c
  40484b:	bnd jmp 0x404833
  40484e:	or     dl,cl
  404850:	(bad)  
  404851:	(bad)  
  404853:	xchg   ebp,eax
  404854:	or     ax,0x342a
  404858:	mov    bh,0x35
  40485a:	neg    DWORD PTR [edi]
  40485c:	daa    
  40485d:	cs jg  0x4047fa
  404860:	adc    edi,DWORD PTR [ebx+0x59]
  404863:	inc    ecx
  404864:	mov    al,ds:0x2eaf2234
  404869:	cdq    
  40486a:	push   ds
  40486b:	in     al,dx
  40486c:	lds    ecx,FWORD PTR [ecx+edi*2]
  40486f:	lods   eax,DWORD PTR ds:[esi]
  404870:	add    DWORD PTR [ebx],edi
  404872:	dec    esi
  404873:	mov    ecx,0xc77974be
  404878:	into   
  404879:	sub    DWORD PTR [ebp+0x333cd41a],esp
  40487f:	inc    edi
  404880:	aam    0xdb
  404882:	test   al,0x27
  404884:	dec    esp
  404885:	retf   0x1bf8
  404888:	cmp    dh,BYTE PTR [eax+0x6a24fb33]
  40488e:	out    0xed,al
  404890:	lods   al,BYTE PTR ds:[esi]
  404891:	daa    
  404892:	inc    esp
  404893:	xchg   edi,eax
  404894:	adc    edx,edx
  404896:	cmp    BYTE PTR [eax-0x724324d2],dl
  40489c:	push   es
  40489d:	mov    es,WORD PTR [esi+eax*2-0x79]
  4048a1:	mov    dh,BYTE PTR [ecx+0x1]
  4048a4:	ret    
  4048a5:	or     BYTE PTR [ecx-0x67e2409a],0xc0
  4048ac:	mov    bl,0x9
  4048ae:	add    al,0x7c
  4048b0:	pop    edi
  4048b1:	int3   
  4048b2:	push   ecx
  4048b4:	sub    al,0xd5
  4048b6:	aam    0x5f
  4048b8:	fidivr DWORD PTR [ecx]
  4048ba:	add    BYTE PTR [ebp+0x28425dda],dl
  4048c0:	add    dh,BYTE PTR [esp+ecx*2+0x3398a2bd]
  4048c7:	sub    eax,0x17bd3bad
  4048cc:	in     al,0x35
  4048ce:	into   
  4048cf:	jmp    0x2786:0xaabb5b00
  4048d6:	dec    edx
  4048d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048d8:	test   eax,0xaa58140c
  4048dd:	in     al,0x9a
  4048df:	jns    0x40494b
  4048e1:	fld    DWORD PTR [ebx-0x777a76fe]
  4048e7:	enter  0x1232,0xfe
  4048eb:	bound  ecx,QWORD PTR [esi+0x6e923a2]
  4048f1:	lods   eax,DWORD PTR ds:[esi]
  4048f2:	push   ebx
  4048f3:	cmp    ch,BYTE PTR [eax-0x145bae6f]
  4048f9:	fs and ebx,edx
  4048fc:	jo     0x4048dc
  4048fe:	or     BYTE PTR [edx+0x9db0cbf],cl
  404904:	xor    al,0x13
  404906:	and    DWORD PTR [esp+ecx*4],edx
  404909:	or     DWORD PTR [edx],ecx
  40490b:	mov    eax,0x3cf637e7
  404910:	aam    0x10
  404912:	js     0x4048d7
  404914:	(bad)  
  404915:	es out dx,eax
  404917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404918:	jl     0x4048dc
  40491a:	jne    0x4048e6
  40491c:	fimul  DWORD PTR [ecx-0x68]
  40491f:	cmc    
  404920:	mov    ch,0xff
  404922:	push   eax
  404923:	pop    ds
  404924:	out    dx,eax
  404925:	leave  
  404926:	js     0x404960
  404928:	inc    ecx
  404929:	adc    BYTE PTR [ebx-0x60],0x87
  40492d:	adc    al,0xeb
  40492f:	push   esp
  404930:	test   DWORD PTR [ecx-0x24],0x2d773534
  404937:	add    ebx,DWORD PTR [ebx+0x63]
  40493a:	retf   
  40493b:	je     0x4048de
  40493d:	and    al,0xa7
  40493f:	fisttp DWORD PTR [ecx+ecx*1]
  404942:	test   eax,0xfa4cd15b
  404947:	push   edi
  404948:	mov    bl,0x4b
  40494a:	ins    DWORD PTR es:[edi],dx
  40494b:	dec    edi
  40494c:	jb     0x404900
  40494e:	xor    eax,0xcbe0ab3d
  404953:	mov    al,ds:0xd2c89b50
  404958:	cmp    eax,0x90af1d86
  40495d:	ret    0x53f2
  404960:	test   eax,0x4163cd25
  404965:	pop    ss
  404966:	mov    dh,0x68
  404968:	inc    edi
  404969:	lods   al,BYTE PTR ds:[esi]
  40496a:	jle    0x40497b
  40496c:	clc    
  40496d:	xchg   edi,eax
  40496e:	push   ss
  40496f:	mov    ch,cl
  404971:	jle    0x404927
  404973:	jmp    0xb85d:0x47b4291
  40497a:	or     DWORD PTR [edx+0x4c],0x3b270c50
  404981:	repz aaa 
  404983:	sbb    BYTE PTR [eax],dl
  404985:	mov    ds:0x1767215f,al
  40498a:	ror    BYTE PTR [ebp+ebp*8+0x469bc8e0],0x71
  404992:	es xchg esp,eax
  404994:	gs add al,0x85
  404997:	mov    ebx,0xe36d93bf
  40499c:	popf   
  40499d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40499e:	stos   BYTE PTR es:[edi],al
  40499f:	jbe    0x404995
  4049a1:	mov    di,0xe0cc
  4049a5:	xor    al,ah
  4049a7:	adc    DWORD PTR [ecx+0x4b],ebx
  4049aa:	add    DWORD PTR [esi-0x6a95c56d],0xd356ab8f
  4049b4:	ja     0x4049ae
  4049b6:	dec    ebp
  4049b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049b8:	xchg   esp,eax
  4049b9:	stos   DWORD PTR es:[edi],eax
  4049ba:	clc    
  4049bb:	mov    bl,0x14
  4049bd:	es jnp 0x404989
  4049c0:	repnz mov bh,0xb
  4049c3:	dec    ebx
  4049c4:	mov    WORD PTR [eax],gs
  4049c6:	mov    ebx,0x13a9a784
  4049cb:	arpl   WORD PTR [esi+0x2d],si
  4049ce:	lods   al,BYTE PTR ds:[esi]
  4049cf:	jecxz  0x4049ba
  4049d1:	cli    
  4049d2:	cwde   
  4049d3:	popf   
  4049d4:	xor    eax,0xa41d0a42
  4049d9:	pusha  
  4049da:	repnz cmp ah,ah
  4049dd:	push   0x14ebcc51
  4049e2:	and    DWORD PTR [edx+0x61],0x7a
  4049e6:	not    DWORD PTR [edx]
  4049e8:	jb     0x4049ba
  4049ea:	inc    edi
  4049eb:	cmc    
  4049ec:	mov    eax,0x6461c1b6
  4049f1:	jecxz  0x4049c3
  4049f3:	fidiv  DWORD PTR [ecx-0x5c36a922]
  4049f9:	stos   DWORD PTR es:[edi],eax
  4049fa:	mov    ds:0xecc6d8f4,al
  4049ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a00:	xor    al,0xe2
  404a02:	out    0xb,eax
  404a04:	jecxz  0x404a5a
  404a06:	dec    ebx
  404a07:	mov    bl,0x33
  404a09:	push   esp
  404a0a:	test   DWORD PTR [ebp-0x5ebbb901],0x6a4ee32c
  404a14:	inc    eax
  404a15:	nop
  404a16:	je     0x4049cc
  404a18:	sub    eax,0x6a73a02d
  404a1d:	sbb    DWORD PTR [edx+0xe],ebx
  404a20:	in     eax,0x3f
  404a22:	cmp    al,0x3e
  404a24:	cld    
  404a25:	fbstp  TBYTE PTR [edx-0x72]
  404a28:	scas   eax,DWORD PTR es:[edi]
  404a29:	icebp  
  404a2a:	xchg   DWORD PTR cs:[ebp-0x75334b93],ecx
  404a31:	out    dx,al
  404a32:	out    0x50,al
  404a34:	cli    
  404a35:	ss cs fwait
  404a38:	call   0xb720df4d
  404a3d:	imul   esi,DWORD PTR [edx],0xfffffff1
  404a40:	jg     0x404a6a
  404a42:	sbb    bl,ch
  404a44:	call   0x6ff6:0x7c55fb53
  404a4b:	lods   eax,DWORD PTR ds:[esi]
  404a4c:	gs out dx,eax
  404a4e:	rol    DWORD PTR [ecx+ebp*8],1
  404a51:	inc    edi
  404a52:	push   edx
  404a53:	push   esi
  404a54:	not    BYTE PTR [ebx-0x17]
  404a57:	mov    es,ecx
  404a59:	push   ebp
  404a5a:	jmp    0xebe8:0xfcef5940
  404a61:	fcmovbe st,st(1)
  404a63:	adc    edi,DWORD PTR [ebp+0x14]
  404a66:	js     0x404a13
  404a68:	rcr    BYTE PTR [esp+edx*2+0x47],0xe5
  404a6d:	push   ebx
  404a6e:	fcomi  st,st(1)
  404a70:	lods   eax,DWORD PTR ds:[esi]
  404a71:	sub    eax,0x2886b0f4
  404a76:	aam    0x31
  404a78:	inc    esp
  404a79:	cmp    eax,0x4f8d8413
  404a7e:	and    BYTE PTR [edx+ebp*4-0xc7f5207],al
  404a85:	push   cs
  404a86:	jmp    0x404a1e
  404a88:	push   cs
  404a89:	jmp    0x404af6
  404a8b:	mov    esi,0x5341d4f
  404a90:	sub    eax,0x92a820d6
  404a95:	hlt    
  404a96:	xchg   BYTE PTR [eax-0x28587d6c],ah
  404a9c:	inc    ebx
  404a9d:	mov    al,ds:0xcddb9c30
  404aa2:	push   0x96e72332
  404aa7:	add    al,0x32
  404aa9:	xor    DWORD PTR [edi+0x27],esp
  404aac:	je     0x404ad5
  404aae:	mov    edx,0x629555b
  404ab3:	(bad)  
  404ab4:	sub    al,0x6b
  404ab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ab8:	lock enter 0x8e3d,0xe7
  404abd:	cmp    dl,bh
  404abf:	in     eax,dx
  404ac0:	mov    esp,?
  404ac2:	jg     0x404aff
  404ac4:	outs   dx,DWORD PTR ds:[esi]
  404ac5:	lds    ecx,FWORD PTR [ecx]
  404ac7:	out    0xf4,al
  404ac9:	add    al,0x85
  404acb:	inc    eax
  404acc:	and    dh,al
  404ace:	cmp    DWORD PTR ds:0xc1a68a6f,ebx
  404ad4:	lds    esp,FWORD PTR es:[ecx-0x5c334c56]
  404adb:	pop    esp
  404adc:	mov    esp,0xb8b8e5d8
  404ae1:	dec    esp
  404ae2:	popa   
  404ae3:	jb     0x404af0
  404ae5:	out    dx,eax
  404ae6:	sbb    al,0xab
  404ae8:	sbb    DWORD PTR [edx-0x7a],0x9df02c60
  404aef:	in     eax,0xeb
  404af1:	mov    ecx,0x5cba2d04
  404af6:	fldenv [esi-0x3f]
  404af9:	lods   al,BYTE PTR ds:[esi]
  404afa:	dec    ebp
  404afb:	pusha  
  404afc:	pop    esp
  404afd:	mov    bh,0x51
  404aff:	cwde   
  404b00:	test   eax,0x2bc86871
  404b05:	pop    edx
  404b06:	int    0xdb
  404b08:	test   bh,dl
  404b0a:	mov    edi,0x35835c87
  404b0f:	mov    edi,0xbe3a38e7
  404b14:	cmc    
  404b15:	xchg   ebp,eax
  404b16:	pop    esp
  404b17:	sahf   
  404b18:	shl    DWORD PTR ds:0x2b59a093,cl
  404b1e:	xlat   BYTE PTR ds:[ebx]
  404b1f:	scas   al,BYTE PTR es:[edi]
  404b20:	inc    esp
  404b21:	push   ss
  404b22:	cld    
  404b23:	loope  0x404abe
  404b25:	int3   
  404b26:	adc    al,0x51
  404b28:	jae    0x404b6c
  404b2a:	mov    BYTE PTR [ebp+0x5d95be37],dl
  404b30:	sbb    al,0xe2
  404b32:	or     esi,ebx
  404b34:	loop   0x404b12
  404b36:	adc    bl,BYTE PTR [ecx+0x41]
  404b39:	push   edx
  404b3a:	cdq    
  404b3b:	mov    ebx,0x2183107c
  404b40:	jmp    0x619e:0x3c2c89a0
  404b47:	in     al,0xf5
  404b49:	sbb    cl,al
  404b4b:	mov    WORD PTR [eax-0x8],ds
  404b4e:	dec    esi
  404b4f:	ret    0xec1d
  404b52:	or     DWORD PTR [ebx+0x7f0ad03a],ebx
  404b58:	mov    ebp,esi
  404b5a:	mov    al,0xf9
  404b5c:	sub    eax,0x784576ca
  404b61:	lods   eax,DWORD PTR ds:[esi]
  404b62:	int    0x25
  404b64:	mov    dl,BYTE PTR [edx+0x35003b58]
  404b6a:	nop
  404b6b:	ror    BYTE PTR [edx-0x7b],1
  404b6e:	push   esp
  404b6f:	mov    edi,0x88d58ee8
  404b74:	jne    0x404bb6
  404b76:	retf   0xfafc
  404b79:	sub    BYTE PTR [esi-0x2295303c],cl
  404b7f:	add    dh,BYTE PTR [esi]
  404b81:	retf   0x2f5c
  404b84:	adc    al,0x85
  404b86:	hlt    
  404b87:	aas    
  404b88:	mov    edx,0x3132ce0d
  404b8d:	icebp  
  404b8e:	test   ebp,0x46ce6177
  404b94:	out    0x5c,eax
  404b96:	aad    0x6c
  404b98:	test   DWORD PTR [edi-0x6e100096],ebp
  404b9e:	aad    0x1c
  404ba0:	mov    dl,0x85
  404ba2:	cmp    al,BYTE PTR [esi-0x45b50958]
  404ba8:	icebp  
  404ba9:	les    ecx,FWORD PTR [ebx-0x4]
  404bac:	sub    DWORD PTR [eax+0x7b],edx
  404baf:	mov    dl,0xff
  404bb1:	push   ss
  404bb2:	(bad)  
  404bb3:	or     al,0x8d
  404bb5:	(bad)  [ecx+0x45]
  404bb8:	inc    esp
  404bb9:	and    DWORD PTR [edx],ebp
  404bbb:	mov    eax,0xe33fb328
  404bc0:	loope  0x404b74
  404bc2:	ret    0x9865
  404bc5:	add    al,0xc9
  404bc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bc8:	xchg   ebx,eax
  404bc9:	jmp    0xf2c6c446
  404bce:	push   esp
  404bcf:	adc    BYTE PTR [ecx-0x805dd46],ah
  404bd5:	jnp    0x404c3f
  404bd7:	mov    eax,0x9a83191
  404bdc:	nop
  404bdd:	cmp    BYTE PTR [ecx],ah
  404bdf:	(bad)  
  404be0:	fsin   
  404be2:	sahf   
  404be3:	jne    0x404be6
  404be5:	pushf  
  404be6:	das    
  404be7:	int3   
  404be8:	cmp    al,0x6
  404bea:	adc    esp,DWORD PTR [ebp-0x5a3cd6a8]
  404bf0:	cs jbe 0x404c13
  404bf3:	sbb    al,0x24
  404bf5:	mov    DWORD PTR [ebx+0x22],0x9f6fbf27
  404bfc:	ins    DWORD PTR es:[edi],dx
  404bfd:	in     al,dx
  404bfe:	add    BYTE PTR ds:0xfa10515a,dh
  404c04:	pop    ds
  404c05:	fbld   TBYTE PTR [ebp-0x1c]
  404c08:	(bad)  
  404c09:	std    
  404c0a:	add    ecx,DWORD PTR [edx-0x3ad475f2]
  404c10:	add    ebp,DWORD PTR [ebx-0x22]
  404c13:	(bad)  
  404c15:	push   ds
  404c16:	xchg   edi,eax
  404c17:	cdq    
  404c18:	ret    0x23f4
  404c1b:	push   ds
  404c1c:	in     al,0x7a
  404c1e:	inc    eax
  404c1f:	inc    esp
  404c20:	pop    ss
  404c21:	fs push es
  404c23:	or     al,al
  404c25:	js     0x404bf5
  404c27:	or     esp,eax
  404c29:	fmul   DWORD PTR [esi+0x220324fa]
  404c2f:	sub    eax,0xdab10c1f
  404c34:	or     al,0x84
  404c36:	push   eax
  404c37:	mov    al,0x77
  404c39:	inc    esi
  404c3a:	in     al,0x5b
  404c3c:	ins    DWORD PTR es:[edi],dx
  404c3d:	ins    DWORD PTR es:[edi],dx
  404c3e:	loop   0x404cad
  404c40:	mov    ecx,0x374fa5d4
  404c45:	dec    esi
  404c46:	std    
  404c47:	(bad)  
  404c48:	(bad)  
  404c49:	push   ecx
  404c4a:	int    0xe8
  404c4c:	jno    0x404c6b
  404c4e:	mov    edi,0xe32075cd
  404c53:	paddusb mm3,QWORD PTR [edx+eax*8-0x3362a924]
  404c5b:	jmp    0x52b8:0x87a0e248
  404c62:	inc    ebp
  404c63:	call   0xc3a706e6
  404c68:	fadd   QWORD PTR [eax+0x60]
  404c6b:	cld    
  404c6c:	dec    DWORD PTR [esi]
  404c6e:	mov    bl,0x5c
  404c70:	leave  
  404c71:	and    cl,bl
  404c73:	jbe    0x404ca4
  404c75:	fs jecxz 0x404c89
  404c78:	inc    edx
  404c79:	lds    ebp,FWORD PTR [edi-0x7ecd187]
  404c7f:	(bad)  
  404c80:	fadd   st(7),st
  404c82:	loope  0x404cac
  404c84:	xchg   edi,eax
  404c85:	fdiv   DWORD PTR [edi+0x8]
  404c88:	pusha  
  404c89:	and    esp,DWORD PTR [esi+ecx*2+0x7742ab9a]
  404c90:	mov    ecx,0xfbd78f6
  404c95:	or     BYTE PTR [edx-0x4847099d],0x54
  404c9c:	ins    DWORD PTR es:[edi],dx
  404c9d:	sub    esi,0xffffffab
  404ca0:	push   eax
  404ca1:	jne    0x404c26
  404ca3:	outs   dx,BYTE PTR ds:[esi]
  404ca4:	xlat   BYTE PTR ds:[ebx]
  404ca5:	push   cs
  404ca6:	push   ss
  404ca7:	mov    cs,WORD PTR [esi+0xf55d979]
  404cad:	pop    ds
  404cae:	mov    bl,0x77
  404cb0:	pusha  
  404cb1:	mov    eax,ds:0x7cd6438a
  404cb6:	fisubr DWORD PTR [edx+eax*4]
  404cb9:	aas    
  404cba:	xor    cl,BYTE PTR [ebx-0x6076e68a]
  404cc0:	(bad)  
  404cc1:	adc    BYTE PTR [edi+0x6979f9f7],ch
  404cc7:	mov    ebp,0xc252f95
  404ccc:	mov    edi,0x79666d58
  404cd1:	loop   0x404ccf
  404cd3:	sahf   
  404cd4:	stos   BYTE PTR es:[edi],al
  404cd5:	mov    eax,0xbd10d521
  404cda:	jmp    0xceac:0xb9c9d4e1
  404ce1:	xor    eax,ebp
  404ce3:	repz (bad) 
  404ce6:	add    al,0x5b
  404ce8:	add    edi,DWORD PTR [ecx-0x15c230b]
  404cee:	sbb    al,0x1a
  404cf0:	clc    
  404cf1:	add    eax,0x51c3df5d
  404cf6:	dec    ebx
  404cf7:	pop    ss
  404cf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cf9:	mov    ebx,0x332ac3e5
  404cfe:	xchg   ebp,eax
  404cff:	jns    0x404ca3
  404d01:	mov    bh,0x51
  404d03:	push   ebp
  404d04:	adc    al,0xc6
  404d06:	and    DWORD PTR [edx+ebx*4],0xffffffaa
  404d0a:	loopne 0x404d37
  404d0c:	or     bh,ah
  404d0e:	popf   
  404d0f:	outs   dx,BYTE PTR ds:[esi]
  404d10:	loope  0x404ce2
  404d12:	cmp    DWORD PTR ds:0x746da66f,ebp
  404d18:	adc    esi,0x672b76a7
  404d1e:	cmp    BYTE PTR [edi+ecx*1+0x655fc9e5],ch
  404d25:	loopne 0x404cb5
  404d27:	xchg   edx,eax
  404d28:	rol    DWORD PTR ds:0xf2b3209f,0xa9
  404d2f:	shl    BYTE PTR [eax],0x79
  404d32:	inc    ebp
  404d33:	add    esi,DWORD PTR [edi-0x412cf9ec]
  404d39:	jp     0x404d2f
  404d3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d3c:	xor    dh,dh
  404d3e:	add    al,0x80
  404d40:	retf   
  404d41:	out    dx,al
  404d42:	xchg   esp,eax
  404d43:	or     al,0x7b
  404d45:	pop    edi
  404d46:	ss dec eax
  404d48:	ja     0x404db1
  404d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d4b:	sbb    BYTE PTR [ebp+ebp*1+0x19578bd1],ah
  404d52:	iret   
  404d53:	sub    DWORD PTR [edx-0x10039610],edx
  404d59:	and    eax,0xe997343f
  404d5e:	aam    0x9b
  404d60:	out    dx,al
  404d61:	cli    
  404d62:	outs   dx,DWORD PTR ds:[esi]
  404d63:	jno    0x404cf4
  404d65:	out    dx,al
  404d66:	ret    
  404d67:	fwait
  404d68:	sbb    ah,0x3b
  404d6b:	scas   al,BYTE PTR es:[edi]
  404d6c:	pop    esp
  404d6d:	fdivr  st(7),st
  404d6f:	fcmovnb st,st(3)
  404d71:	pop    eax
  404d72:	mov    eax,0x2053f585
  404d77:	adc    eax,DWORD PTR [edi+0x7d]
  404d7a:	not    ah
  404d7c:	adc    DWORD PTR [edi+0x771d7716],ecx
  404d82:	out    0xba,al
  404d84:	xor    BYTE PTR [ebp-0x7f],ah
  404d87:	aaa    
  404d88:	sbb    BYTE PTR [ebp+edx*4+0x30],ch
  404d8c:	cmp    dh,dl
  404d8e:	(bad)  
  404d8f:	dec    ebx
  404d90:	cmp    eax,0x172b85b6
  404d95:	std    
  404d96:	jb     0x404d67
  404d98:	jnp    0x404db2
  404d9a:	bound  esp,QWORD PTR [edx+ebx*1]
  404d9d:	outs   dx,BYTE PTR ds:[esi]
  404d9e:	pop    edi
  404d9f:	sub    DWORD PTR [edi+edi*4+0x1c],0x691b1786
  404da7:	in     eax,dx
  404da8:	test   al,0xa2
  404daa:	pusha  
  404dab:	push   cs
  404dac:	mov    WORD PTR [ebx-0x3f78fbef],fs
  404db2:	xchg   ebx,eax
  404db3:	aas    
  404db4:	mov    ebx,0xcd15c707
  404db9:	push   esp
  404dba:	popa   
  404dbb:	mov    ecx,0x7113d451
  404dc0:	jb     0x404d81
  404dc2:	icebp  
  404dc3:	dec    dh
  404dc5:	mov    cl,0xe0
  404dc7:	cmc    
  404dc8:	sub    al,0xd9
  404dca:	or     ecx,DWORD PTR [esi]
  404dcc:	(bad)  
  404dcd:	push   esi
  404dce:	xor    BYTE PTR [esi+eiz*8+0x47],0x80
  404dd3:	gs pop esi
  404dd5:	shl    DWORD PTR [ecx+0x37f9a2e5],1
  404ddb:	jns    0x404e1d
  404ddd:	into   
  404dde:	loop   0x404db8
  404de0:	xor    DWORD PTR [eax],eax
  404de2:	add    eax,0xb40b7e6e
  404de7:	inc    ebx
  404de8:	hlt    
  404de9:	stos   DWORD PTR es:[edi],eax
  404dea:	inc    edx
  404deb:	bnd jne 0x404def
  404dee:	mov    DWORD PTR [ebx-0x718a3863],edx
  404df4:	adc    esp,DWORD PTR [esi-0x1d]
  404df7:	dec    ecx
  404df8:	bound  esp,QWORD PTR [eax+0x60]
  404dfb:	lahf   
  404dfc:	xor    al,0x81
  404dfe:	and    al,0x4b
  404e00:	call   0xf1cc:0x1c9f596e
  404e07:	pop    ebx
  404e08:	scas   al,BYTE PTR es:[edi]
  404e09:	les    ebp,FWORD PTR [ebp+0x2e15fd36]
  404e0f:	cld    
  404e10:	jle    0x404e45
  404e12:	loopne 0x404da4
  404e14:	call   0xc9765a95
  404e19:	cmp    esi,ecx
  404e1b:	or     BYTE PTR [esi+0x5dbf46aa],dl
  404e21:	mov    al,0x16
  404e23:	jmp    0xd6db:0x88e25c97
  404e2a:	fs xchg ebp,eax
  404e2c:	jecxz  0x404de3
  404e2e:	sub    al,0x8e
  404e30:	loop   0x404de8
  404e32:	iret   
  404e33:	xor    al,0x20
  404e35:	daa    
  404e36:	push   cs
  404e37:	adc    dh,dl
  404e39:	in     al,dx
  404e3a:	jmp    0x404ddc
  404e3c:	xchg   edi,eax
  404e3d:	add    dl,bl
  404e3f:	inc    ebx
  404e40:	pop    edx
  404e41:	aaa    
  404e42:	dec    ecx
  404e43:	fisttp DWORD PTR ds:0x25f697ca
  404e49:	stos   DWORD PTR es:[edi],eax
  404e4a:	xchg   ecx,eax
  404e4b:	popa   
  404e4c:	dec    ebx
  404e4d:	xor    DWORD PTR ds:0xbe25abac,ecx
  404e53:	mov    al,0x67
  404e55:	add    DWORD PTR [eax+0x4f],edx
  404e58:	cli    
  404e59:	hlt    
  404e5a:	inc    eax
  404e5b:	xchg   esp,eax
  404e5c:	fild   WORD PTR [edx]
  404e5e:	pop    ebx
  404e5f:	(bad)  [esi+edx*8]
  404e62:	xchg   edi,eax
  404e63:	shl    DWORD PTR [edx+edx*2+0x1bc20273],cl
  404e6a:	xor    al,0x6c
  404e6c:	ins    BYTE PTR es:[edi],dx
  404e6d:	dec    ebx
  404e6e:	push   ebx
  404e6f:	mov    eax,ds:0xb5f8ee92
  404e74:	mov    cl,0xb4
  404e76:	cmp    eax,0x63b4ffa8
  404e7b:	pop    ds
  404e7c:	or     BYTE PTR [eax+0x6611cd5f],dh
  404e82:	push   edi
  404e83:	dec    ebx
  404e84:	mov    ds:0x730e5564,eax
  404e89:	dec    ecx
  404e8a:	pusha  
  404e8b:	pop    ebx
  404e8c:	les    ebp,FWORD PTR [edi]
  404e8e:	push   edx
  404e8f:	push   ds
  404e90:	inc    edx
  404e91:	inc    eax
  404e92:	stos   DWORD PTR es:[edi],eax
  404e93:	push   0xf07c8781
  404e98:	aas    
  404e99:	sub    eax,0xab8ec11e
  404e9e:	xrelease xchg BYTE PTR [ebx],dh
  404ea1:	pop    esi
  404ea2:	mov    DWORD PTR ds:0xab66d64e,edx
  404ea8:	fstp   QWORD PTR [ebx+0x50cf3678]
  404eae:	xor    BYTE PTR [eax],bh
  404eb0:	pushf  
  404eb1:	and    BYTE PTR [eax+0x1b139519],bh
  404eb7:	jne    0x404e49
  404eb9:	and    al,0xe5
  404ebb:	shr    edx,1
  404ebd:	lgs    edi,FWORD PTR [ebx]
  404ec0:	inc    ebp
  404ec1:	and    eax,0x3450997d
  404ec6:	mov    esp,cs
  404ec8:	and    DWORD PTR ds:0xba3b632f,ebx
  404ece:	and    eax,0xf66efe2d
  404ed3:	mov    ebx,0xb0db2176
  404ed8:	in     eax,0x62
  404eda:	sbb    ah,BYTE PTR [edx]
  404edc:	rep lods al,BYTE PTR ds:[esi]
  404ede:	outs   dx,DWORD PTR fs:[esi]
  404ee0:	shl    DWORD PTR [eax+0x57f1a78e],0x44
  404ee7:	sti    
  404ee8:	jg     0x404f63
  404eea:	lea    ebp,[eax]
  404eec:	or     BYTE PTR [edx+0x7c],dl
  404eef:	inc    ecx
  404ef0:	mov    dh,0xe
  404ef2:	jg     0x404e8d
  404ef4:	stos   BYTE PTR es:[edi],al
  404ef5:	call   0x6e8:0x547f3621
  404efc:	push   esp
  404efd:	mov    cl,0x30
  404eff:	cld    
  404f00:	test   BYTE PTR [edi+0x48],al
  404f03:	scas   al,BYTE PTR es:[edi]
  404f04:	sbb    al,0xe4
  404f06:	addr16 mov edi,0xbec5790a
  404f0d:	sti    
  404f0e:	iret   
  404f0f:	repz cmp al,0x3c
  404f12:	or     esp,ebp
  404f14:	xor    BYTE PTR [ebx+0x68eae019],0xc8
  404f1b:	dec    ecx
  404f1c:	lahf   
  404f1d:	(bad)  
  404f1e:	stos   DWORD PTR es:[edi],eax
  404f1f:	mov    bh,0x6e
  404f21:	mov    bl,0x2c
  404f23:	adc    eax,0x9fe29968
  404f28:	(bad)  
  404f29:	add    esi,0xfd1bb50e
  404f2f:	outs   dx,DWORD PTR ds:[esi]
  404f30:	fcomi  st,st(7)
  404f32:	ins    DWORD PTR es:[edi],dx
  404f33:	fbld   TBYTE PTR ds:[ecx]
  404f36:	std    
  404f37:	ror    esi,1
  404f39:	inc    ebx
  404f3a:	sub    BYTE PTR [esp+edx*2-0x79de4033],al
  404f41:	push   ebx
  404f42:	jecxz  0x404f16
  404f44:	jecxz  0x404f05
  404f46:	xor    al,0xc7
  404f48:	cmp    eax,0xf7f3bfa
  404f4d:	pop    ebx
  404f4e:	aam    0xe2
  404f50:	clc    
  404f51:	test   al,0x9
  404f53:	inc    ebp
  404f54:	inc    esp
  404f55:	(bad)  [ecx]
  404f57:	mov    edi,0x23c1217c
  404f5c:	jo     0x404fa6
  404f5e:	nop
  404f5f:	jp     0x404fdd
  404f61:	test   edi,0x139c88cd
  404f67:	and    bl,BYTE PTR [esi]
  404f69:	jmp    0xcb26b843
  404f6e:	call   0xfb4075f8
  404f73:	mov    esp,0x6a0b6f68
  404f78:	loopne 0x404fec
  404f7a:	sbb    eax,0x46fe8aa7
  404f7f:	rol    edx,0x43
  404f82:	mov    dl,0x96
  404f84:	out    0x88,eax
  404f86:	dec    ebx
  404f87:	add    ebp,DWORD PTR [ebp-0x1f]
  404f8a:	or     BYTE PTR [eax-0x74],bh
  404f8d:	jge    0x404fbd
  404f8f:	dec    edx
  404f90:	dec    ebp
  404f91:	push   ebx
  404f92:	aad    0xa0
  404f94:	xlat   BYTE PTR gs:[ebx]
  404f96:	cmp    al,0x96
  404f98:	inc    esp
  404f99:	(bad)  {k4}{z}
  404f9e:	cmp    DWORD PTR [edx+0x68],eax
  404fa1:	out    dx,al
  404fa2:	mov    ch,0x6c
  404fa4:	adc    eax,0xc76deb19
  404fa9:	push   ecx
  404faa:	dec    esp
  404fab:	int3   
  404fac:	test   BYTE PTR [ebx-0x12],cl
  404faf:	and    ebx,DWORD PTR [ecx-0xa]
  404fb2:	ja     0x404ff2
  404fb4:	pop    edi
  404fb5:	pop    ebp
  404fb6:	std    
  404fb7:	jmp    0x6a9f3a23
  404fbc:	lods   eax,DWORD PTR ds:[esi]
  404fbd:	push   eax
  404fbe:	cmp    eax,eax
  404fc0:	mov    dh,0xb4
  404fc2:	push   ecx
  404fc3:	sub    esp,0xdde62737
  404fc9:	cld    
  404fca:	stos   DWORD PTR es:[edi],eax
  404fcb:	enter  0xbbc3,0xc1
  404fcf:	test   BYTE PTR [edi],0xa
  404fd2:	repz into 
  404fd4:	mov    eax,ds:0x5168b230
  404fd9:	jl     0x404f6d
  404fdb:	sub    edi,DWORD PTR [edx-0x7e7dd554]
  404fe1:	ror    DWORD PTR [edi-0xf49ed3e],cl
  404fe7:	(bad)  
  404fe9:	mov    ds:0x20161d71,eax
  404fee:	mov    eax,0xae4fdbe8
  404ff3:	cs popa 
  404ff5:	xor    esi,eax
  404ff7:	aaa    
  404ff8:	push   esp
  404ff9:	sub    DWORD PTR [edi-0x3abe6594],eax
  404fff:	test   DWORD PTR ds:0xe820f21b,ebp
  405005:	sbb    BYTE PTR [ebx-0x45cec2db],bl
  40500b:	and    DWORD PTR [eax+ebp*1],eax
  40500e:	xchg   edi,eax
  40500f:	arpl   WORD PTR [esi-0x34521204],ax
  405015:	xchg   esp,eax
  405016:	out    dx,al
  405017:	mov    esp,0xeae4d893
  40501c:	push   es
  40501d:	ret    0xfccd
  405020:	ins    DWORD PTR es:[edi],dx
  405021:	or     DWORD PTR ds:0x8276ef6e,esi
  405027:	test   eax,edi
  405029:	(bad)  
  40502b:	pop    edi
  40502c:	mov    dh,dl
  40502e:	jecxz  0x404fb2
  405030:	push   ds
  405031:	iret   
  405032:	rcl    BYTE PTR [eax+0x33],1
  405035:	rol    BYTE PTR [ecx+0x42c0140d],0x0
  40503c:	add    al,0xa0
  40503e:	inc    edx
  40503f:	add    BYTE PTR [ebx],dh
  405041:	retf   0xd81
  405044:	adc    al,dl
  405046:	inc    edx
  405047:	add    BYTE PTR [ebp+0x300000d],ch
  40504d:	into   
  40504e:	add    edi,0xfabdbee9
  405054:	mov    DWORD PTR ds:0x42a014,0x6728
  40505e:	adc    eax,0xffffffff
  405061:	and    DWORD PTR ds:0x429014,0x42a000
  40506b:	xor    eax,0x0
  40506e:	mov    DWORD PTR [ebp-0xc],eax
  405071:	push   ebx
  405072:	add    DWORD PTR ds:0x42a000,ebx
  405078:	xor    ebx,ebx
  40507a:	xor    edi,0x8a29a12b
  405080:	sbb    eax,0xb3d
  405085:	mov    eax,ecx
  405087:	add    eax,0xfabdbee9
  40508c:	mov    DWORD PTR ds:0x42d000,0x688f
  405096:	adc    ebx,0xffffffff
  405099:	xor    eax,0x8a29a12b
  40509e:	or     DWORD PTR ds:0x42a010,0x42900c
  4050a8:	xor    ebx,0x0
  4050ab:	mov    DWORD PTR ds:0x429024,0x3d4a
  4050b5:	cmp    eax,edi
  4050b7:	jne    0x4050d6
  4050bd:	cmp    ebx,DWORD PTR [ebp-0xc]
  4050c0:	je     0x40513e
  4050c6:	jmp    0x4050d6
  4050cb:	or     esi,DWORD PTR ds:0x42b01c
  4050d1:	mov    esi,0x3272e0
  4050d6:	mov    eax,DWORD PTR [ebp-0x4]
  4050d9:	mov    edi,DWORD PTR [ebp-0x8]
  4050dc:	xor    edi,edx
  4050de:	add    edi,esi
  4050e0:	mov    esi,DWORD PTR [ebp+0x8]
  4050e3:	imul   edi,ecx
  4050e6:	mov    ebx,DWORD PTR [ebp+0xc]
  4050e9:	xor    eax,edx
  4050eb:	add    eax,ecx
  4050ed:	mov    al,BYTE PTR [ebx+eax*1+0x3272e0]
  4050f4:	mov    BYTE PTR [edi+esi*1],al
  4050f7:	mov    eax,DWORD PTR [ebp-0x8]
  4050fa:	mov    esi,DWORD PTR [ebp+0x10]
  4050fd:	xor    eax,edx
  4050ff:	xor    ebx,ebx
  405101:	add    esi,0xfabdbee9
  405107:	adc    ebx,0xffffffff
  40510a:	lea    ecx,[ecx+eax*1+0x3272e0]
  405111:	xor    edi,edi
  405113:	xor    esi,0x8a29a12b
  405119:	xor    ebx,0x0
  40511c:	mov    eax,ecx
  40511e:	add    eax,0xfabdbee9
  405123:	adc    edi,0xffffffff
  405126:	xor    eax,0x8a29a12b
  40512b:	xor    edi,0x0
  40512e:	cmp    eax,esi
  405130:	jne    0x4050cb
  405136:	cmp    edi,ebx
  405138:	jne    0x4050cb
  40513e:	mov    eax,0xf89c85b8
  405143:	pop    ebx
  405144:	pop    edi
  405145:	pop    esi
  405146:	leave  
  405147:	ret    0xc
  40514a:	push   ebp
  40514b:	mov    ebp,esp
  40514d:	push   ecx
  40514e:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  405155:	sub    ecx,0x3f14
  40515b:	mov    eax,DWORD PTR [ebp+0x8]
  40515e:	and    DWORD PTR ds:0x42b008,0x0
  405168:	xor    edx,edx
  40516a:	add    edx,DWORD PTR ds:0x42b008
  405170:	inc    edx
  405171:	mov    DWORD PTR ds:0x42b008,edx
  405177:	cmp    DWORD PTR ds:0x42b008,0xc
  40517e:	jne    0x4051a5
  405184:	push   DWORD PTR [ebp-0x10]
  405187:	push   DWORD PTR [ebp-0xc]
  40518a:	push   0x429000
  40518f:	push   0x12c2
  405194:	push   0x648f
  405199:	push   DWORD PTR [ebp-0x14]
  40519c:	push   DWORD PTR [ebp-0x20]
  40519f:	call   DWORD PTR ds:0x42ec7f
  4051a5:	cmp    DWORD PTR ds:0x42b008,0xb
  4051ac:	jne    0x4051bf
  4051b2:	mov    edx,DWORD PTR ds:0x42b008
  4051b8:	inc    edx
  4051b9:	mov    DWORD PTR ds:0x42b008,edx
  4051bf:	cmp    DWORD PTR ds:0x42b008,0x15
  4051c6:	jb     0x405168
  4051cc:	and    DWORD PTR ds:0x42900c,0x0
  4051d6:	mov    edx,DWORD PTR ds:0x42900c
  4051dc:	inc    edx
  4051dd:	mov    DWORD PTR ds:0x42900c,edx
  4051e3:	cmp    DWORD PTR ds:0x42900c,0xd
  4051ea:	jne    0x40520d
  4051f0:	push   0x42b018
  4051f5:	push   0x46e1
  4051fa:	push   0x42e0d9
  4051ff:	push   DWORD PTR [ebp-0x1c]
  405202:	push   0x1518
  405207:	call   DWORD PTR ds:0x42ec83
  40520d:	cmp    DWORD PTR ds:0x42900c,0xc
  405214:	jne    0x405229
  40521a:	xor    edx,edx
  40521c:	add    edx,DWORD PTR ds:0x42900c
  405222:	inc    edx
  405223:	mov    DWORD PTR ds:0x42900c,edx
  405229:	cmp    DWORD PTR ds:0x42900c,0x14
  405230:	jb     0x4051d6
  405236:	movsx  eax,BYTE PTR [eax]
  405239:	mov    edx,0x3272e0
  40523e:	sub    eax,edx
  405240:	mov    ecx,0x7510899
  405245:	xor    eax,ecx
  405247:	cmp    eax,0xf89c85f4
  40524c:	jne    0x40527b
  405252:	mov    eax,DWORD PTR [ebp+0x8]
  405255:	push   esi
  405256:	mov    esi,DWORD PTR [ebp+0x8]
  405259:	add    esi,DWORD PTR [eax+0x3c]
  40525c:	mov    DWORD PTR [ebp+0x8],esi
  40525f:	mov    eax,DWORD PTR [ebp-0x4]
  405262:	mov    esi,DWORD PTR [ebp+0x8]
  405265:	xor    eax,ecx
  405267:	add    eax,edx
  405269:	cmp    DWORD PTR [esi+0x54],eax
  40526c:	pop    esi
  40526d:	je     0x40527b
  405273:	mov    eax,DWORD PTR [ebp+0x8]
  405276:	jmp    0x405282
  40527b:	mov    eax,DWORD PTR [ebp-0x4]
  40527e:	xor    eax,ecx
  405280:	add    eax,edx
  405282:	leave  
  405283:	ret    0x4
  405286:	push   ebp
  405287:	mov    ebp,esp
  405289:	sub    esp,0x40
  40528c:	push   ebx
  40528d:	sub    DWORD PTR ds:0x42b010,0x42c014
  405297:	push   esi
  405298:	mov    DWORD PTR ds:0x42d018,0x7544
  4052a2:	push   edi
  4052a3:	add    DWORD PTR ds:0x42a004,0x429008
  4052ad:	lea    eax,[ebp-0x24]
  4052b0:	push   eax
  4052b1:	sub    DWORD PTR ds:0x42c014,0x154
  4052bb:	lea    eax,[ebp-0x20]
  4052be:	add    DWORD PTR ds:0x42a01c,0x42a000
  4052c8:	push   eax
  4052c9:	call   DWORD PTR ds:0x42ec87
  4052cf:	xor    DWORD PTR ds:0x429008,0x42d01c
  4052d9:	push   0x21
  4052db:	sbb    DWORD PTR ds:0x42d01c,0x42b014
  4052e5:	jmp    0x40766a
  4052ea:	push   ss
  4052eb:	xor    BYTE PTR [ecx-0xb6c4a5d],0x77
  4052f2:	es loop 0x4052d5
  4052f5:	and    ebx,ecx
  4052f7:	dec    ecx
  4052f8:	int    0xa4
  4052fa:	add    bl,BYTE PTR [edi+0x7a]
  4052fd:	jp     0x405301
  4052ff:	pop    edi
  405300:	jp     0x40537c
  405302:	dec    edx
  405303:	adc    al,0xe0
  405305:	xchg   ecx,eax
  405306:	inc    esp
  405307:	std    
  405308:	popf   
  405309:	sbb    BYTE PTR [ebx],0xe8
  40530c:	cmp    bh,dl
  40530e:	sbb    cl,BYTE PTR [edx-0x7288e5f9]
  405314:	lahf   
  405315:	jg     0x405329
  405317:	jae    0x405390
  405319:	xchg   edi,eax
  40531a:	cmp    eax,DWORD PTR [edx]
  40531c:	stos   BYTE PTR es:[edi],al
  40531d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40531e:	dec    ebx
  40531f:	sub    ecx,DWORD PTR ds:0x14d40b41
  405325:	and    al,0xa
  405327:	outs   dx,DWORD PTR ds:[esi]
  405328:	js     0x405399
  40532a:	iret   
  40532b:	pop    eax
  40532c:	scas   eax,DWORD PTR es:[edi]
  40532d:	mov    ebx,?
  40532f:	mov    al,0x25
  405331:	push   0xffffffdd
  405333:	or     al,0xf
  405335:	retf   0x91d9
  405338:	cli    
  405339:	and    al,0x75
  40533b:	je     0x4053b2
  40533d:	jno    0x405321
  40533f:	sbb    eax,0x4568cabe
  405344:	sbb    esp,DWORD PTR [eax+0x34]
  405347:	pop    ecx
  405348:	neg    BYTE PTR [eax]
  40534a:	fdiv   QWORD PTR [edi]
  40534c:	push   eax
  40534d:	loop   0x405393
  40534f:	mov    ebx,DWORD PTR [ebp-0x52]
  405352:	xchg   ch,bl
  405354:	in     al,dx
  405355:	mov    ds:0xe23481a6,eax
  40535a:	jae    0x4053cc
  40535c:	inc    edx
  40535d:	dec    ebp
  40535e:	fcom   DWORD PTR [edx]
  405360:	pop    esi
  405361:	outs   dx,BYTE PTR ds:[esi]
  405362:	pop    ecx
  405363:	add    DWORD PTR ds:0x8cf8c87d,ebp
  405369:	mov    edi,0x2ea5a954
  40536e:	fild   WORD PTR [edi+0x217ed659]
  405374:	mov    dl,BYTE PTR [edi+eax*2+0x57ad3257]
  40537b:	in     al,dx
  40537c:	xchg   esp,eax
  40537d:	int    0x2e
  40537f:	or     BYTE PTR [ebx],dh
  405381:	jp     0x405355
  405383:	cmp    DWORD PTR [ecx+0x13419cc9],edx
  405389:	sahf   
  40538a:	out    0xeb,eax
  40538c:	inc    ebx
  40538d:	adc    eax,DWORD PTR [eax+0x2abdb0b2]
  405393:	jo     0x4053c7
  405395:	inc    ebp
  405396:	pusha  
  405397:	xor    BYTE PTR [edi+0x12],bh
  40539a:	and    DWORD PTR [eax+0x6eed02cd],edx
  4053a0:	out    0x2d,al
  4053a2:	dec    ecx
  4053a3:	sub    BYTE PTR ds:[ecx+0x109cfd08],0x39
  4053ab:	inc    esi
  4053ac:	idiv   BYTE PTR [eax+0x706c044f]
  4053b2:	pop    ss
  4053b3:	aam    0x7
  4053b5:	std    
  4053b6:	cmc    
  4053b7:	cli    
  4053b8:	lods   eax,DWORD PTR ds:[esi]
  4053b9:	xchg   bp,ax
  4053bb:	push   DWORD PTR [esi+edi*4-0x41]
  4053bf:	xor    dh,BYTE PTR [ecx]
  4053c1:	out    0x80,eax
  4053c3:	icebp  
  4053c4:	(bad)  
  4053c5:	test   eax,0x43a31def
  4053ca:	cs cmp al,0xe3
  4053cd:	xchg   BYTE PTR [edx-0x45887dfa],ah
  4053d3:	pop    ebx
  4053d4:	inc    edx
  4053d6:	pop    edx
  4053d7:	cdq    
  4053d8:	sbb    DWORD PTR [ecx],ebp
  4053da:	ror    BYTE PTR [edx+0x22badd2c],cl
  4053e0:	sbb    DWORD PTR [ebx-0x4acd4ed6],edi
  4053e6:	call   0x136d0fcc
  4053eb:	add    edi,0xe59a52e5
  4053f1:	mov    DWORD PTR [ecx-0x50],eax
  4053f4:	mov    eax,ds:0x783ac79b
  4053f9:	das    
  4053fa:	add    cl,bh
  4053fc:	in     al,0x72
  4053fe:	out    0x89,eax
  405400:	inc    eax
  405401:	loope  0x40547b
  405403:	mov    bh,BYTE PTR [ecx]
  405405:	(bad)  
  405406:	enter  0x80a7,0x14
  40540a:	sub    DWORD PTR [edi],eax
  40540c:	jle    0x4053b0
  40540e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40540f:	jecxz  0x4053d4
  405411:	shl    DWORD PTR [edi+0xd],cl
  405414:	push   0xa47d5c95
  405419:	or     BYTE PTR [edx-0x17825cd0],dl
  40541f:	gs xchg esp,eax
  405421:	pop    edx
  405422:	(bad)  [edx+0x3c]
  405425:	cld    
  405426:	and    BYTE PTR [ecx-0x46],dl
  405429:	add    ch,dl
  40542b:	xchg   ecx,eax
  40542c:	sbb    DWORD PTR [edi-0x2a63ad01],esp
  405432:	fwait
  405433:	sub    al,0x97
  405435:	popf   
  405436:	or     eax,0x9c27ee1f
  40543b:	push   esp
  40543c:	xchg   ebp,eax
  40543d:	cmp    edi,DWORD PTR ds:0xb9797f63
  405443:	inc    bl
  405445:	jg     0x4054bc
  405447:	out    dx,eax
  405448:	mov    esp,0x2b7bec4f
  40544d:	adc    ah,BYTE PTR [edi+0x6d1ddbdf]
  405453:	jo     0x4054a5
  405455:	adc    DWORD PTR [ecx+0x14],ebp
  405458:	xor    al,0xf6
  40545a:	jns    0x405443
  40545c:	outs   dx,BYTE PTR ds:[esi]
  40545d:	mov    edx,0x70204553
  405462:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405463:	hlt    
  405464:	inc    edi
  405465:	retf   
  405466:	sbb    ebp,DWORD PTR [ecx+edi*1-0x36]
  40546a:	xchg   ebx,eax
  40546b:	icebp  
  40546c:	add    al,0x15
  40546e:	pop    ebp
  40546f:	cwde   
  405470:	sbb    BYTE PTR [esi+0x290e4063],ah
  405476:	cs int 0xa2
  405479:	cli    
  40547a:	sub    ah,BYTE PTR [ebx+0x1689aeb7]
  405480:	lea    ebx,[eax+eiz*1]
  405483:	gs ds mov eax,0x66650ceb
  40548a:	jle    0x4054a6
  40548c:	outs   dx,BYTE PTR ds:[esi]
  40548d:	out    0x1e,eax
  40548f:	pop    ss
  405490:	sahf   
  405491:	in     al,dx
  405492:	cmp    DWORD PTR [eax-0x52818726],0xd48c56f
  40549c:	jmp    0x467c:0x25e91fc0
  4054a3:	out    0xd,eax
  4054a5:	inc    eax
  4054a6:	fnstcw WORD PTR [esi+0x5f2f56b0]
  4054ac:	jg     0x4054e0
  4054ae:	adc    eax,eax
  4054b0:	mov    bh,0x65
  4054b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054b3:	xor    al,0x7f
  4054b6:	mov    bh,0xdc
  4054b8:	jmp    0x4054fa
  4054ba:	inc    eax
  4054bb:	xor    BYTE PTR [ecx-0x36],ch
  4054be:	mov    dh,0xeb
  4054c0:	inc    ebp
  4054c1:	out    dx,al
  4054c2:	pop    ss
  4054c3:	cli    
  4054c4:	ins    BYTE PTR es:[edi],dx
  4054c5:	sbb    esi,eax
  4054c7:	loopne 0x40551e
  4054c9:	mov    ecx,0xb19ed12f
  4054ce:	mov    ebp,0xdf2390d0
  4054d3:	jle    0x405458
  4054d5:	or     BYTE PTR [ebx-0x12],0x2f
  4054d9:	lock ret 
  4054db:	lahf   
  4054dc:	adc    edi,ebp
  4054de:	mov    esp,0x26b2cb37
  4054e3:	xchg   edi,ecx
  4054e5:	xor    dl,BYTE PTR [edi-0x4d485aa2]
  4054eb:	sbb    edi,DWORD PTR [eax]
  4054ed:	les    ebp,FWORD PTR [esi]
  4054ef:	retf   0x5966
  4054f2:	jne    0x4054a7
  4054f4:	or     eax,0xa1801f28
  4054f9:	out    dx,eax
  4054fa:	cmp    DWORD PTR [ecx],eax
  4054fc:	fdiv   st(7),st
  4054fe:	ror    DWORD PTR [edx+0x4982227f],0x84
  405505:	ficomp WORD PTR [edx+0x45]
  405508:	add    BYTE PTR [edx+0x8],0x93
  40550c:	push   0xfffffffc
  40550e:	aaa    
  40550f:	inc    esi
  405510:	pop    ecx
  405511:	or     al,BYTE PTR [ebx-0x6e]
  405514:	or     al,0x65
  405516:	xor    edx,DWORD PTR [ebx]
  405518:	add    al,0x5f
  40551a:	ror    BYTE PTR [edx],cl
  40551c:	je     0x405566
  40551e:	push   ebp
  40551f:	inc    esp
  405520:	push   0x5d00bc6b
  405525:	sar    ah,0x2c
  405528:	stc    
  405529:	or     DWORD PTR [ecx+0x27831b63],esp
  40552f:	dec    esi
  405530:	sub    ebp,esp
  405532:	fcos   
  405534:	jg     0x405580
  405536:	inc    ecx
  405537:	push   0xf76adf3a
  40553c:	dec    esi
  40553d:	mov    ebx,0x494256b7
  405542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405543:	xchg   esp,eax
  405544:	sti    
  405545:	hlt    
  405546:	mov    al,0x54
  405548:	hlt    
  405549:	add    dh,ah
  40554b:	aaa    
  40554c:	lahf   
  40554d:	retf   
  40554e:	test   eax,0x118b5d6a
  405553:	call   0x11e736ae
  405558:	inc    ecx
  405559:	mov    ah,0x46
  40555b:	stc    
  40555c:	out    dx,eax
  40555d:	and    DWORD PTR [edx],esp
  40555f:	test   DWORD PTR ds:0x1adec94,edi
  405565:	aas    
  405566:	stos   BYTE PTR es:[edi],al
  405567:	fs pmulhuw mm7,mm2
  40556b:	out    0xa3,al
  40556d:	push   0x30
  40556f:	adc    BYTE PTR [ebp+ebx*4+0x5d],0x9f
  405574:	pop    esp
  405575:	inc    eax
  405576:	xor    BYTE PTR [ecx+eiz*1-0x7c],ch
  40557a:	or     esi,DWORD PTR [eax+0x2e]
  40557d:	sbb    esp,DWORD PTR [eax]
  40557f:	test   edi,esp
  405581:	dec    edx
  405582:	out    0x5c,eax
  405584:	pusha  
  405585:	mov    eax,0x17bfb934
  40558a:	sub    BYTE PTR [ebp+0x7783df02],ch
  405590:	pop    esi
  405591:	loopne 0x4055a8
  405593:	popa   
  405594:	sbb    cl,bh
  405596:	jl     0x405560
  405598:	push   edi
  405599:	pop    es
  40559a:	jo     0x405541
  40559c:	add    dl,ah
  40559e:	daa    
  40559f:	mov    esp,0x1a493876
  4055a4:	push   esp
  4055a5:	xchg   ecx,eax
  4055a6:	sub    BYTE PTR [esp+edi*2+0x7b],0x3a
  4055ab:	add    DWORD PTR [ebp+0x52],0x76c458c
  4055b2:	jle    0x40561d
  4055b4:	mov    bh,0x16
  4055b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055b7:	call   0xb45348df
  4055bc:	pop    es
  4055bd:	rcr    DWORD PTR [edx+eax*1-0x23507156],1
  4055c4:	push   esi
  4055c5:	fimul  WORD PTR [eax]
  4055c7:	sahf   
  4055c8:	dec    eax
  4055c9:	fdivp  st(6),st
  4055cb:	xchg   ebp,eax
  4055cc:	(bad)  
  4055ce:	push   edi
  4055cf:	stos   BYTE PTR es:[edi],al
  4055d0:	lods   al,BYTE PTR ds:[esi]
  4055d1:	mov    edi,0x80f6e1fc
  4055d6:	push   eax
  4055d7:	mov    bh,0x62
  4055d9:	mov    bh,0xe
  4055db:	fimul  DWORD PTR [ebp-0x6a]
  4055de:	cwde   
  4055df:	retf   0x8206
  4055e2:	xchg   BYTE PTR [edi-0x1e],ch
  4055e5:	pop    esp
  4055e6:	pop    eax
  4055e7:	mov    bl,0x5f
  4055e9:	enter  0xb825,0x80
  4055ed:	jg     0x40557c
  4055ef:	call   0x545d:0x8e93dd31
  4055f6:	fst    QWORD PTR [ebx+esi*2-0x31]
  4055fa:	js     0x405642
  4055fc:	test   edi,0x45dfa4c9
  405602:	sub    esi,DWORD PTR [edx+ebp*8+0x31]
  405606:	pushf  
  405607:	fidiv  DWORD PTR [esi+ebp*2-0x38]
  40560b:	out    0x33,eax
  40560d:	mov    dh,0x91
  40560f:	jmp    0x54be:0x92dbd4f2
  405616:	je     0x4055d8
  405618:	ins    DWORD PTR es:[edi],dx
  405619:	or     cl,BYTE PTR [edx+eax*4+0x66]
  40561d:	sub    eax,DWORD PTR [ecx]
  40561f:	ja     0x405665
  405621:	jmp    0x405680
  405623:	add    al,0xe0
  405625:	mov    ebp,0x884f2006
  40562a:	jnp    0x40568a
  40562c:	jmp    0x405634
  40562e:	addps  xmm2,XMMWORD PTR [ecx]
  405631:	lea    edx,[ebx]
  405633:	fild   DWORD PTR [ecx-0xff1d47e]
  405639:	mov    esp,0xf093cc00
  40563e:	xchg   DWORD PTR [edi-0x46],edi
  405641:	cdq    
  405642:	sbb    al,0xd6
  405644:	ret    
  405645:	xor    al,0x5e
  405647:	and    al,0x15
  405649:	cdq    
  40564a:	pushf  
  40564b:	inc    esi
  40564c:	imul   DWORD PTR [eax+0x43]
  40564f:	iret   
  405650:	test   DWORD PTR [edi+0x5b],edx
  405653:	lahf   
  405654:	ins    DWORD PTR es:[edi],dx
  405655:	add    eax,0xcc9ceed8
  40565a:	xor    BYTE PTR [esi-0x49],bh
  40565d:	or     esi,DWORD PTR [edi]
  40565f:	dec    ebp
  405660:	xchg   edi,eax
  405661:	sbb    eax,0xd37fb73b
  405666:	jg     0x40564c
  405668:	jle    0x405663
  40566a:	imul   eax,DWORD PTR [edi-0x23],0x24
  40566e:	and    DWORD PTR [edx-0xa7e0d30],esp
  405674:	adc    DWORD PTR [eax+0x17],ebp
  405677:	dec    edi
  405678:	sti    
  405679:	mov    al,0x7f
  40567b:	xchg   BYTE PTR [edx+edi*4],bl
  40567e:	or     ch,BYTE PTR [eax-0x14f957ee]
  405684:	xchg   ebp,eax
  405685:	jbe    0x4056ae
  405687:	dec    ebx
  405688:	fimul  DWORD PTR [eax+0x18df212c]
  40568e:	add    ebp,0xfe8ea690
  405694:	cmp    ch,0x25
  405697:	fcom   DWORD PTR ds:0xc359a999
  40569d:	sub    DWORD PTR [edx-0x15722156],esi
  4056a3:	cmp    ch,BYTE PTR [ecx+ebp*4]
  4056a6:	dec    edi
  4056a7:	mov    DWORD PTR [ecx-0x50784f50],ebp
  4056ad:	(bad)  [ecx-0x38]
  4056b0:	nop
  4056b1:	lahf   
  4056b2:	test   BYTE PTR [eax],dl
  4056b4:	pop    ebx
  4056b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056b6:	jecxz  0x4056e3
  4056b8:	pop    edi
  4056b9:	push   ecx
  4056ba:	pop    esi
  4056bb:	mov    ss,WORD PTR [edx]
  4056bd:	int3   
  4056be:	push   ss
  4056bf:	es add esi,ebx
  4056c2:	or     BYTE PTR [eax+0x53],dh
  4056c5:	mov    eax,0xe5b5a76a
  4056ca:	push   eax
  4056cb:	or     esi,DWORD PTR [eax+0x52]
  4056ce:	fist   DWORD PTR [esi-0x27]
  4056d1:	pop    edi
  4056d2:	xor    ebp,ecx
  4056d4:	xchg   ecx,eax
  4056d5:	cs cli 
  4056d7:	pop    esp
  4056d8:	mov    eax,0x27be2bc5
  4056dd:	or     al,0x9a
  4056df:	ss jno 0x405669
  4056e2:	rcl    DWORD PTR [esi+edx*4+0x5919ccf4],0xfd
  4056ea:	pop    eax
  4056eb:	sub    al,dl
  4056ed:	pop    esp
  4056ee:	and    al,0x35
  4056f0:	or     dh,BYTE PTR [eax+0xa50574]
  4056f6:	fs jl  0x4056e2
  4056f9:	mov    cl,bl
  4056fb:	inc    esp
  4056fc:	pop    ebx
  4056fd:	jne    0x405701
  4056ff:	mov    ds:0xb2c6e2f5,eax
  405704:	pushf  
  405705:	jne    0x40573f
  405707:	pop    ebp
  405708:	aaa    
  405709:	call   0x9cec:0x7b17820b
  405710:	loop   0x40572e
  405712:	inc    edx
  405713:	mov    edi,0xf13f4c9c
  405718:	bound  eax,QWORD PTR [edi+0xc9000]
  40571e:	fbld   TBYTE PTR [ecx-0x766766a4]
  405724:	int    0x31
  405726:	push   esi
  405727:	dec    ecx
  405728:	mov    ebx,esi
  40572a:	cmp    BYTE PTR [ebx+ebp*2+0xa91b64f],al
  405731:	in     eax,dx
  405732:	xor    ebp,esp
  405734:	outs   dx,DWORD PTR ds:[esi]
  405735:	rcr    BYTE PTR [edi+0x4598ed30],0x81
  40573c:	mov    WORD PTR [eax+edi*1-0x54],gs
  405740:	jp     0x405783
  405742:	mov    edx,0xc49e39f6
  405747:	push   ebp
  405748:	xor    DWORD PTR [edx+0x35],ebp
  40574b:	not    DWORD PTR [esp+eiz*4-0x391093e]
  405752:	or     eax,0x152810a0
  405757:	cdq    
  405758:	(bad)  
  405759:	push   0x44
  40575b:	stos   BYTE PTR es:[edi],al
  40575c:	(bad)  
  40575d:	add    al,0x24
  40575f:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405761:	adc    ah,bl
  405763:	or     DWORD PTR fs:[ecx+eiz*4+0x1b2835bc],esi
  40576b:	add    al,0x77
  40576d:	xchg   ebp,eax
  40576e:	push   ebp
  40576f:	iret   
  405770:	repnz sub dl,BYTE PTR [esi+esi*4]
  405774:	fsub   DWORD PTR [ecx+0x5a]
  405777:	xlat   BYTE PTR ds:[ebx]
  405778:	loope  0x40577a
  40577a:	div    DWORD PTR [esi]
  40577c:	das    
  40577d:	scas   eax,DWORD PTR es:[edi]
  40577e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40577f:	out    0x96,eax
  405781:	xchg   ecx,eax
  405782:	inc    esp
  405783:	loope  0x4057b7
  405785:	stc    
  405786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405787:	cli    
  405788:	shr    al,1
  40578a:	xchg   edi,eax
  40578b:	test   eax,0x8f9ecfcf
  405790:	stos   DWORD PTR es:[edi],eax
  405791:	jge    0x405781
  405793:	add    DWORD PTR [edx+0x48],0x540d0c13
  40579a:	cmp    dl,cl
  40579c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40579d:	rol    DWORD PTR [edx+0x279005bb],0x2d
  4057a4:	int3   
  4057a5:	out    0x67,eax
  4057a7:	mov    dh,0x76
  4057a9:	add    edx,ecx
  4057ab:	nop
  4057ac:	jno    0x4057c4
  4057ae:	je     0x4057a6
  4057b0:	inc    eax
  4057b1:	test   al,0xbc
  4057b3:	sub    eax,0xf6c74171
  4057b8:	push   eax
  4057b9:	stos   BYTE PTR es:[edi],al
  4057ba:	int3   
  4057bb:	xchg   ebx,eax
  4057bc:	icebp  
  4057bd:	sahf   
  4057be:	xchg   ecx,eax
  4057bf:	pop    edx
  4057c0:	mov    dh,BYTE PTR [edi-0xcc77a50]
  4057c6:	loopne 0x4057d8
  4057c8:	in     eax,dx
  4057c9:	ds dec ebp
  4057cb:	lahf   
  4057cc:	sbb    eax,eax
  4057ce:	mov    edx,0xf0731ed0
  4057d3:	sti    
  4057d4:	(bad)  
  4057d5:	xor    BYTE PTR [edi],dh
  4057d7:	sub    eax,0xb0119d7f
  4057dc:	clc    
  4057dd:	fs jno 0x40580c
  4057e0:	ja     0x4057c1
  4057e2:	leave  
  4057e3:	nop
  4057e4:	test   eax,0xe2d17e5b
  4057e9:	(bad)  
  4057ea:	clc    
  4057eb:	ds mov esp,0x204e4cf2
  4057f1:	iret   
  4057f2:	or     eax,ebx
  4057f4:	call   0x1048de1b
  4057f9:	rcl    DWORD PTR [eax],1
  4057fb:	out    0xc5,eax
  4057fd:	or     eax,0xbf6be462
  405802:	push   es
  405803:	pop    edx
  405804:	cli    
  405805:	jge    0x40580c
  405807:	jne    0x405835
  405809:	push   edi
  40580a:	das    
  40580b:	call   0xcd8fc02
  405810:	in     eax,dx
  405811:	mov    ebx,0xaf98c5e6
  405816:	jmp    0x4057b7
  405818:	cmp    DWORD PTR [ecx+ecx*4],0x9b979b1e
  40581f:	mov    eax,0x41c6c237
  405824:	out    0x2,eax
  405826:	outs   dx,DWORD PTR ds:[esi]
  405827:	outs   dx,BYTE PTR ds:[esi]
  405828:	les    edx,FWORD PTR ds:0xf395159
  40582e:	jecxz  0x405860
  405830:	aaa    
  405831:	mov    edx,0x3c39c234
  405836:	inc    edx
  405837:	daa    
  405838:	or     DWORD PTR [edx],0xffffff88
  40583b:	outs   dx,BYTE PTR ds:[esi]
  40583c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40583d:	sbb    eax,0x57619bd0
  405842:	std    
  405843:	push   0x54ffde46
  405848:	push   es
  405849:	and    BYTE PTR [eax+0x5a],ah
  40584c:	icebp  
  40584d:	jmp    0x4058cb
  40584f:	into   
  405850:	rcr    BYTE PTR [edi],0xf1
  405853:	lahf   
  405854:	js     0x405836
  405856:	dec    esp
  405857:	dec    esi
  405858:	xchg   esi,eax
  405859:	cld    
  40585a:	push   edx
  40585b:	outs   dx,BYTE PTR ds:[esi]
  40585c:	mov    bh,0xc7
  40585e:	sbb    ecx,DWORD PTR [ebx+0x6dcc7bb5]
  405864:	(bad)  
  405865:	pop    ebx
  405866:	iret   
  405867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405868:	jl     0x4058bf
  40586a:	clc    
  40586b:	mov    BYTE PTR [eax+0x9bd7aa8],dh
  405871:	into   
  405872:	or     al,0xa9
  405874:	mov    esp,0x182eb6f2
  405879:	push   cs
  40587a:	mov    dh,0x11
  40587c:	outs   dx,BYTE PTR ds:[esi]
  40587d:	jne    0x40588d
  40587f:	das    
  405880:	mov    al,0xb7
  405882:	push   ebp
  405883:	call   0x88a9:0x23daf619
  40588a:	dec    ebx
  40588b:	xor    BYTE PTR [edi-0x4ac8239],ah
  405891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405892:	cdq    
  405893:	lods   eax,DWORD PTR fs:[esi]
  405895:	pusha  
  405896:	jmp    0x4058a5
  405898:	aas    
  405899:	cld    
  40589a:	icebp  
  40589b:	and    eax,DWORD PTR [eax]
  40589d:	sbb    BYTE PTR [ecx-0x4e],dh
  4058a0:	bound  ebx,QWORD PTR [ebx+edi*4+0x2f]
  4058a4:	addr16 or eax,0x4e9975b9
  4058aa:	jg     0x4058ba
  4058ac:	shr    ebx,1
  4058ae:	bound  ebp,QWORD PTR [esi+eax*4]
  4058b1:	cmc    
  4058b2:	xchg   ebx,eax
  4058b3:	xchg   ebp,eax
  4058b4:	pop    ecx
  4058b5:	add    eax,0x419ff83
  4058ba:	lea    esi,[ebx+0x10e3dd49]
  4058c0:	add    al,0xff
  4058c2:	dec    ecx
  4058c3:	inc    edx
  4058c4:	data16 cmp dh,cl
  4058c7:	pop    edi
  4058c8:	pop    eax
  4058c9:	cs jge 0x405862
  4058cc:	or     al,BYTE PTR [edi]
  4058ce:	xor    BYTE PTR [ebp-0x7e134362],0x20
  4058d5:	jmp    DWORD PTR [ebx+0x2e]
  4058d8:	jg     0x405942
  4058da:	loopne 0x4058c6
  4058dc:	jo     0x4058e6
  4058de:	inc    ebx
  4058df:	jmp    0x32edd832
  4058e4:	push   ss
  4058e5:	mov    edi,DWORD PTR [ecx]
  4058e7:	or     eax,0x4b170dca
  4058ec:	adc    cl,al
  4058ee:	bound  edx,QWORD PTR [edi]
  4058f0:	xor    edi,eax
  4058f2:	shl    BYTE PTR [edx+0x6ef0f36d],cl
  4058f8:	or     DWORD PTR [ebp-0x2c70afd8],eax
  4058fe:	push   cs
  4058ff:	push   ds
  405900:	add    DWORD PTR [edi],0xeb3bc39b
  405906:	clc    
  405907:	pop    ecx
  405908:	sbb    esi,DWORD PTR [edx-0xe]
  40590b:	xchg   esi,eax
  40590c:	leave  
  40590d:	add    al,0x7a
  40590f:	mov    ecx,0x19365188
  405914:	in     al,dx
  405915:	jl     0x4058d1
  405917:	cmp    ch,dh
  405919:	ficom  DWORD PTR [ebp+0x9]
  40591c:	or     DWORD PTR [ecx-0x1c],esi
  40591f:	rol    BYTE PTR [eax],cl
  405921:	or     ah,BYTE PTR [edi+0x73]
  405924:	bound  ecx,QWORD PTR [ecx]
  405926:	mov    al,ds:0x501d571a
  40592b:	lods   al,BYTE PTR ds:[esi]
  40592c:	test   eax,0x2789cf58
  405931:	lods   al,BYTE PTR ds:[esi]
  405932:	leave  
  405933:	out    0xba,eax
  405935:	xchg   esp,eax
  405936:	push   ebp
  405937:	jae    0x405982
  405939:	jns    0x40591f
  40593b:	shl    BYTE PTR [edi+0x2c35187e],0xf9
  405942:	cmp    eax,0x3dc1d125
  405947:	push   ecx
  405948:	(bad)  
  405949:	cld    
  40594a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40594b:	into   
  40594c:	ret    0xc84e
  40594f:	(bad)  
  405950:	les    ebp,FWORD PTR [edi]
  405952:	add    edx,ebx
  405954:	or     BYTE PTR [ebx+0x65],bl
  405957:	cmp    eax,0xcb4aa380
  40595c:	ja     0x40598e
  40595e:	dec    esp
  40595f:	xchg   esp,eax
  405960:	arpl   WORD PTR [ecx-0x7c1afebf],cx
  405966:	mov    ecx,DWORD PTR gs:[ebx-0x4af635a1]
  40596d:	push   edx
  40596e:	out    0x4d,eax
  405970:	dec    edx
  405971:	rol    BYTE PTR [esi-0x4ac73a93],cl
  405977:	aad    0xa1
  405979:	jl     0x4059d6
  40597b:	sbb    bl,BYTE PTR ds:0x72e24107
  405981:	into   
  405982:	fs cmp esi,edx
  405985:	cmp    al,0x1a
  405987:	sub    eax,0x1c9a8f69
  40598c:	das    
  40598d:	and    DWORD PTR [edx+ecx*8+0xc0d5bbf],ebx
  405994:	daa    
  405995:	loope  0x4059b5
  405997:	fbld   TBYTE PTR [ecx]
  405999:	inc    esp
  40599a:	mov    ebx,0x1a20e0f7
  40599f:	loop   0x40597a
  4059a1:	paddusb mm3,QWORD PTR [edi+0x40]
  4059a5:	inc    ebx
  4059a6:	add    esp,esi
  4059a8:	mov    WORD PTR [ebp+0x53dac5f3],gs
  4059ae:	or     dh,BYTE PTR [eax+0x74]
  4059b1:	jmp    0x4059ab
  4059b3:	pop    ebx
  4059b4:	cmp    BYTE PTR [ebp+0x4a],bl
  4059b7:	test   BYTE PTR [ebx],0x92
  4059ba:	scas   eax,DWORD PTR es:[edi]
  4059bb:	push   edi
  4059bc:	lods   al,BYTE PTR ds:[esi]
  4059bd:	cmc    
  4059be:	fistp  WORD PTR [edx+edi*1-0x429bdb7a]
  4059c5:	aas    
  4059c6:	push   ecx
  4059c7:	pusha  
  4059c8:	(bad)  
  4059c9:	aad    0x22
  4059cb:	sbb    BYTE PTR [ebx-0x7e],ah
  4059ce:	test   DWORD PTR [eax],ecx
  4059d0:	cmp    bl,dh
  4059d2:	mov    ebp,0xba3a1a7a
  4059d7:	sub    DWORD PTR [edi-0x62],ecx
  4059da:	mov    ds:0x283ec6cc,al
  4059df:	add    DWORD PTR [ecx-0x5d],eax
  4059e2:	xor    bh,BYTE PTR ds:0xad3a371b
  4059e8:	jp     0x405a68
  4059ea:	in     al,dx
  4059eb:	mov    ds:0xad053598,al
  4059f0:	xchg   edi,ebp
  4059f2:	mov    ebp,0x24322244
  4059f7:	or     al,BYTE PTR [edx]
  4059f9:	dec    ebp
  4059fa:	push   ds
  4059fb:	add    al,0xa0
  4059fd:	pop    esi
  4059fe:	mov    edi,0x710fff83
  405a03:	adc    esi,DWORD PTR [esi-0x5578c8f]
  405a09:	mov    bh,0xc7
  405a0b:	cmp    DWORD PTR [ebx-0x30],eax
  405a0e:	cmp    eax,0x55d2d037
  405a13:	mov    eax,ds:0x26905c8d
  405a18:	and    esp,DWORD PTR [edi]
  405a1a:	jbe    0x405a78
  405a1c:	mov    eax,0x963c54a1
  405a21:	pushf  
  405a22:	popa   
  405a23:	stos   DWORD PTR es:[edi],eax
  405a24:	xor    ah,BYTE PTR [edi+0x5d83e9bd]
  405a2a:	and    bl,BYTE PTR [ecx+edx*2-0x674f6f2]
  405a31:	dec    eax
  405a32:	jo     0x405a63
  405a34:	push   esi
  405a35:	xchg   edi,eax
  405a36:	inc    eax
  405a37:	jb     0x4059fc
  405a39:	add    eax,0x97ea9dff
  405a3e:	and    DWORD PTR [ebp-0x67],esp
  405a41:	push   ebp
  405a42:	call   0x11d0:0x35fd35fd
  405a49:	xchg   DWORD PTR ds:0x71341a5a,esi
  405a4f:	popf   
  405a50:	mov    edi,0xb5c6fc4
  405a55:	call   0xe769:0x397ebbad
  405a5c:	fiadd  DWORD PTR [esi+0x3d5dbb2e]
  405a62:	dec    edi
  405a63:	jecxz  0x405a3e
  405a65:	outs   dx,BYTE PTR ds:[esi]
  405a66:	rcl    BYTE PTR [edi-0x4c3ac38],cl
  405a6c:	adc    BYTE PTR [edx+0x1c],0x8a
  405a70:	sub    eax,DWORD PTR [edx+0x58]
  405a73:	js     0x405a0f
  405a75:	push   edx
  405a76:	mov    edx,0xc75f9c50
  405a7b:	xchg   esi,eax
  405a7c:	outs   dx,DWORD PTR ds:[esi]
  405a7d:	sub    eax,0x961fed59
  405a82:	dec    edx
  405a83:	jp     0x405a74
  405a85:	cli    
  405a86:	jmp    0xfe3a:0x34546c9a
  405a8d:	mov    ds:0xf0304321,al
  405a92:	int3   
  405a93:	dec    ecx
  405a94:	dec    esp
  405a95:	(bad)  
  405a99:	lahf   
  405a9a:	dec    ebx
  405a9b:	push   0x8aca2491
  405aa0:	add    al,ch
  405aa2:	mov    cl,BYTE PTR [esi+ebx*2+0x52fbcdff]
  405aa9:	outs   dx,DWORD PTR ds:[esi]
  405aaa:	or     BYTE PTR [ebp+0x5c01d20b],0x4
  405ab1:	rcl    cl,cl
  405ab3:	mov    ch,0xe3
  405ab5:	jge    0x405b0f
  405ab7:	mov    al,0xc4
  405ab9:	sbb    al,0xad
  405abb:	inc    esp
  405abc:	fidiv  WORD PTR [eax-0x74]
  405abf:	pop    ss
  405ac0:	add    DWORD PTR ds:0xcdb414b2,0xcde19fac
  405aca:	(bad)  
  405acb:	mov    ebx,0x455939dd
  405ad0:	in     al,dx
  405ad1:	icebp  
  405ad2:	(bad)  
  405ad3:	mov    ebp,0xce237f3e
  405ad8:	xor    DWORD PTR [ebp+0x60],edx
  405adb:	xchg   edx,eax
  405adc:	sub    ah,dh
  405ade:	mov    ebp,ebp
  405ae0:	(bad)  
  405ae1:	gs hlt 
  405ae3:	lock xchg edi,eax
  405ae5:	push   edi
  405ae6:	fldcw  WORD PTR [edi]
  405ae8:	cmc    
  405ae9:	pop    ebx
  405aea:	mov    edx,0x47fb9582
  405aef:	dec    esi
  405af0:	frstor [ecx]
  405af2:	(bad)  
  405af3:	jmp    0xc01525e3
  405af8:	mov    ds:0xc86bed0f,eax
  405afd:	mov    DWORD PTR [edi+0x7a0ded5d],edi
  405b03:	out    0xe5,al
  405b05:	mov    ds:0x3123a4e7,al
  405b0a:	not    edi
  405b0c:	dec    ebx
  405b0d:	hlt    
  405b0e:	mov    bh,0xce
  405b10:	pop    ds
  405b11:	sbb    DWORD PTR [ebx+0x1b],esp
  405b14:	mov    DWORD PTR [edx-0x3bc0052c],esi
  405b1a:	add    eax,0x6d27d22f
  405b1f:	cmp    BYTE PTR [ebx],al
  405b21:	mov    dh,BYTE PTR [edi-0x3098cfc7]
  405b27:	dec    ebp
  405b28:	jge    0x405ac7
  405b2a:	xchg   edx,eax
  405b2b:	stc    
  405b2c:	mov    BYTE PTR [edi],bh
  405b2e:	inc    edi
  405b2f:	popa   
  405b30:	ret    
  405b31:	mov    ds:0x53ccf833,al
  405b36:	pop    ecx
  405b37:	aaa    
  405b38:	pushf  
  405b39:	out    dx,al
  405b3a:	mov    esi,gs
  405b3c:	push   0x16a53fce
  405b41:	or     dh,ch
  405b43:	es pop ebp
  405b45:	(bad)  
  405b46:	pop    ebx
  405b47:	inc    ebx
  405b48:	mov    bh,0xba
  405b4a:	mov    bl,0x92
  405b4c:	mov    DWORD PTR [edx-0x50c02a19],ebx
  405b52:	mov    cl,0xf9
  405b54:	or     dl,BYTE PTR [ecx+0x6ffa310a]
  405b5a:	pop    edx
  405b5b:	shr    BYTE PTR [esi],1
  405b5d:	(bad)  
  405b5e:	loopne 0x405bb9
  405b60:	add    al,0xb3
  405b62:	jbe    0x405b2e
  405b64:	icebp  
  405b65:	fist   DWORD PTR [ecx-0x6f866db4]
  405b6b:	add    bh,al
  405b6d:	or     edi,DWORD PTR [edi-0x331b9913]
  405b73:	or     bh,dl
  405b75:	jb     0x405bb9
  405b77:	fcmovnb st,st(5)
  405b79:	sub    eax,0x4e35e0e3
  405b7e:	push   es
  405b7f:	ins    BYTE PTR es:[edi],dx
  405b80:	leave  
  405b81:	daa    
  405b82:	jne    0x405b27
  405b84:	and    BYTE PTR [edi+0x69],bh
  405b87:	add    al,0xf2
  405b89:	mov    ch,BYTE PTR [edi+0x56]
  405b8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b8d:	inc    ecx
  405b8e:	sub    al,0x7
  405b90:	dec    ebp
  405b91:	jns    0x405bb7
  405b93:	sti    
  405b94:	outs   dx,DWORD PTR ds:[esi]
  405b95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b96:	in     al,dx
  405b97:	mov    esi,0xd18f4cc7
  405b9c:	dec    edi
  405b9d:	repz inc ebx
  405b9f:	int    0xd9
  405ba1:	sub    DWORD PTR [ebp-0x5ab316f4],esi
  405ba7:	xor    bh,BYTE PTR [ecx-0x1f541284]
  405bad:	mov    dh,0x99
  405baf:	add    al,ah
  405bb1:	test   DWORD PTR [ebx],esi
  405bb3:	cs mov dh,0x64
  405bb6:	int3   
  405bb7:	ins    BYTE PTR es:[edi],dx
  405bb8:	cmp    eax,0x61f24cab
  405bbd:	ret    0xa353
  405bc0:	mov    eax,0x9ed08368
  405bc5:	xchg   ebx,eax
  405bc6:	out    dx,eax
  405bc7:	scas   eax,DWORD PTR es:[edi]
  405bc8:	mov    dl,0x99
  405bca:	pop    ss
  405bcb:	xchg   edi,eax
  405bcc:	iret   
  405bcd:	pop    ecx
  405bce:	call   0xade1:0x71ecf90e
  405bd5:	or     al,bl
  405bd7:	(bad)  
  405bd8:	stc    
  405bd9:	test   eax,0xc1b3cdd1
  405bde:	jmp    0x67f8:0x38a1f329
  405be5:	adc    ecx,DWORD PTR [ebp-0xc]
  405be8:	test   BYTE PTR [edi-0x10],cl
  405beb:	and    bh,0x9f
  405bee:	mov    cl,0xf6
  405bf0:	sbb    ebx,DWORD PTR [ebx+edi*8+0x1d0e47ed]
  405bf7:	xor    bh,BYTE PTR [esi]
  405bf9:	xor    al,0x55
  405bfb:	retf   
  405bfc:	(bad)  
  405bfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bfe:	shl    bh,1
  405c00:	retf   
  405c01:	data16 fistp QWORD PTR [edx+0x7122ae6d]
  405c08:	jle    0x405c03
  405c0a:	sub    DWORD PTR [ecx],0xd250cc72
  405c10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c11:	cdq    
  405c12:	scas   eax,DWORD PTR es:[edi]
  405c13:	popf   
  405c14:	jmp    0x405c5e
  405c16:	adc    eax,0xa57427dc
  405c1b:	jae    0x405ba7
  405c1d:	rcl    DWORD PTR [ecx],0xf9
  405c20:	pop    ebx
  405c21:	adc    eax,0x7a55c010
  405c26:	xchg   DWORD PTR [edi+0x2038ef70],edi
  405c2c:	call   0x856c:0xbde7f54c
  405c33:	dec    esi
  405c34:	inc    esp
  405c35:	aam    0xa9
  405c37:	or     bl,BYTE PTR [esi-0x5e]
  405c3a:	cmp    bl,BYTE PTR [ecx]
  405c3c:	scas   eax,DWORD PTR es:[edi]
  405c3d:	push   esi
  405c3e:	mov    cl,0xa2
  405c40:	pusha  
  405c41:	inc    edi
  405c42:	xor    ebx,DWORD PTR [edi+eiz*8]
  405c45:	xchg   esi,eax
  405c46:	or     ch,BYTE PTR [ecx+0x651b8235]
  405c4c:	jp     0x405bd6
  405c4e:	mov    ebx,0xbed78dac
  405c53:	iret   
  405c54:	in     eax,0xd9
  405c56:	hlt    
  405c57:	iret   
  405c58:	mov    ebp,DWORD PTR [ecx]
  405c5a:	imul   edx,DWORD PTR [esi+0x7c],0xffffffc5
  405c5e:	sub    esp,DWORD PTR [ebx]
  405c60:	loop   0x405c7e
  405c62:	or     BYTE PTR [ebx+0xe17699d],cl
  405c68:	sbb    ecx,DWORD PTR [edx+0x51]
  405c6b:	pop    ecx
  405c6c:	hlt    
  405c6d:	mov    dh,0xfd
  405c6f:	inc    ebx
  405c70:	lea    esi,[ebp-0x7165849c]
  405c76:	(bad)  
  405c77:	(bad)  [ecx+0xf37ec7a]
  405c7d:	sbb    edx,DWORD PTR [eax-0x6d273d7a]
  405c83:	arpl   sp,di
  405c85:	in     eax,dx
  405c86:	bound  ebp,QWORD PTR [ecx+0x61]
  405c89:	jmp    0x405cb6
  405c8b:	pop    ecx
  405c8c:	icebp  
  405c8d:	sub    al,0x9b
  405c8f:	mov    ah,0x5f
  405c91:	inc    edi
  405c92:	inc    eax
  405c93:	jp     0x405ca1
  405c95:	cmp    al,0x63
  405c97:	fisttp DWORD PTR [edi]
  405c99:	and    DWORD PTR [ebp+0x39077621],ebx
  405c9f:	loop   0x405c6c
  405ca1:	imul   DWORD PTR [ebx+0x37c7e022]
  405ca7:	shr    ebx,1
  405ca9:	cmc    
  405caa:	mov    es,WORD PTR [ecx+0x66]
  405cad:	nop
  405cae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405caf:	rcr    BYTE PTR [ecx-0x34],1
  405cb2:	scas   eax,DWORD PTR es:[edi]
  405cb3:	popf   
  405cb4:	and    ecx,DWORD PTR [esi-0x2c6968c3]
  405cba:	mov    ecx,0x904be55e
  405cbf:	loope  0x405cfe
  405cc1:	dec    eax
  405cc2:	in     eax,dx
  405cc3:	jmp    0x405cc5
  405cc5:	mov    WORD PTR ds:0x91701fe5,cs
  405ccb:	sti    
  405ccc:	push   ecx
  405ccd:	stos   DWORD PTR es:[edi],eax
  405cce:	pop    DWORD PTR [edi-0xa13e1e5]
  405cd4:	stos   BYTE PTR es:[edi],al
  405cd5:	fdiv   QWORD PTR [ebp+0x70d1bf6f]
  405cdb:	cs shl al,0x4a
  405cdf:	sub    dh,BYTE PTR [edx]
  405ce1:	pop    ds
  405ce2:	aaa    
  405ce3:	or     eax,0xb0de1fa4
  405ce8:	inc    edi
  405ce9:	jecxz  0x405c8d
  405ceb:	sbb    BYTE PTR [esi-0x1],0x19
  405cef:	mov    ecx,0xe3a080ad
  405cf4:	test   al,0xb5
  405cf6:	rcl    DWORD PTR [esi+0xe47f88],cl
  405cfc:	mov    esi,0xa807209f
  405d01:	sub    al,0xdd
  405d03:	add    DWORD PTR [ebx],edx
  405d05:	sahf   
  405d06:	cdq    
  405d07:	and    al,0xf5
  405d09:	out    dx,eax
  405d0a:	xchg   edi,eax
  405d0b:	mov    al,ds:0x60a458a8
  405d10:	sub    eax,0x1710f4a8
  405d15:	cdq    
  405d16:	mov    DWORD PTR [edx-0x17],esp
  405d19:	pop    ecx
  405d1a:	jne    0x405ca6
  405d1c:	jns    0x405d16
  405d1e:	dec    edx
  405d1f:	sbb    DWORD PTR [eax+0x47],0x39
  405d23:	cmp    dl,BYTE PTR [ecx]
  405d25:	out    0x1c,eax
  405d27:	xor    BYTE PTR [ecx+0xb],0x0
  405d2b:	and    edx,DWORD PTR [eax+0x430efa1a]
  405d31:	retf   
  405d32:	sar    ebp,0x68
  405d35:	or     edi,esp
  405d37:	sbb    eax,0x896ff522
  405d3c:	loope  0x405dab
  405d3e:	jbe    0x405d19
  405d40:	ja     0x405d5f
  405d42:	in     eax,0x7a
  405d44:	push   0xe68fe0e9
  405d49:	cmp    dh,BYTE PTR [eax+0x6eca43f3]
  405d4f:	out    dx,eax
  405d50:	(bad)  
  405d51:	sbb    dh,dh
  405d53:	cmp    eax,0x3d6bf738
  405d58:	pop    edx
  405d59:	jae    0x405ce0
  405d5b:	into   
  405d5c:	sub    ebp,esp
  405d5e:	xor    al,0x6
  405d60:	(bad)  
  405d61:	hlt    
  405d62:	rol    BYTE PTR [edx+0x3838891],0x64
  405d69:	loope  0x405d9b
  405d6b:	adc    cl,bh
  405d6d:	nop
  405d6e:	dec    esp
  405d6f:	loope  0x405d24
  405d71:	imul   eax,ebx,0xffffffc2
  405d74:	xchg   ebp,eax
  405d75:	pop    eax
  405d76:	sub    BYTE PTR [ebx-0x6eeb3479],0x2
  405d7d:	xor    DWORD PTR [edx-0xba560e4],ecx
  405d83:	shr    DWORD PTR [eax-0x65789dde],1
  405d89:	mov    edi,0xb42f9636
  405d8e:	in     al,0x45
  405d90:	das    
  405d91:	pop    ebp
  405d92:	dec    eax
  405d93:	xor    edi,ebp
  405d95:	cmp    DWORD PTR [ebp+ebp*2+0x42],ebx
  405d99:	and    ebp,DWORD PTR [ebp+0x68893b1b]
  405d9f:	fidivr DWORD PTR [esi]
  405da1:	aaa    
  405da2:	out    dx,eax
  405da3:	sbb    ebx,edx
  405da5:	or     BYTE PTR [esi-0x78],dl
  405da8:	add    ecx,ecx
  405daa:	mov    ebx,ecx
  405dac:	push   0xdb0014c8
  405db1:	dec    edx
  405db2:	data16 and al,0xf4
  405db5:	pop    eax
  405db6:	outs   dx,BYTE PTR ds:[esi]
  405db7:	int3   
  405db8:	test   eax,0x7b53c68d
  405dbd:	test   al,0xd
  405dbf:	add    al,0x9b
  405dc1:	pop    edx
  405dc2:	or     esi,edi
  405dc4:	add    cl,0x55
  405dc7:	test   eax,0xd8a7acbb
  405dcc:	add    bh,dh
  405dce:	mov    al,ds:0x3cadbee7
  405dd3:	je     0x405dc0
  405dd5:	mov    ah,0xca
  405dd7:	popa   
  405dd8:	call   0x45f8726f
  405ddd:	add    eax,0x3991149b
  405de2:	dec    ebp
  405de3:	es add al,0x25
  405de6:	or     esp,0xde201854
  405dec:	nop
  405ded:	mov    cl,0x59
  405def:	push   ebx
  405df0:	aad    0xf7
  405df2:	scas   eax,DWORD PTR es:[edi]
  405df3:	cwde   
  405df4:	jno    0x405de2
  405df6:	dec    edx
  405df7:	clc    
  405df8:	xchg   edx,eax
  405df9:	mov    al,0xc2
  405dfb:	outs   dx,DWORD PTR ds:[esi]
  405dfc:	adc    ch,BYTE PTR [edx-0x3a0ea32d]
  405e02:	lahf   
  405e03:	or     eax,0x12c274bd
  405e08:	dec    esi
  405e09:	das    
  405e0a:	mov    edx,gs
  405e0c:	out    0xb0,eax
  405e0e:	in     eax,dx
  405e0f:	in     eax,0x78
  405e11:	xchg   esi,eax
  405e12:	call   0xb976c1d3
  405e17:	mov    cl,0x10
  405e19:	fs cli 
  405e1b:	test   al,0x2f
  405e1d:	sbb    DWORD PTR [ebp+0xb],ebp
  405e20:	mov    esi,0x22ff61ac
  405e25:	pop    DWORD PTR [edi+eiz*4-0x27add2cf]
  405e2c:	push   ss
  405e2d:	test   eax,0x73e51636
  405e32:	xchg   ecx,eax
  405e33:	sbb    al,0x9c
  405e35:	enter  0xcdd9,0xbf
  405e39:	sbb    al,0x78
  405e3b:	loope  0x405e9f
  405e3d:	int3   
  405e3e:	inc    ebp
  405e3f:	test   DWORD PTR [eax+0x2901185e],esp
  405e45:	or     eax,0xca9f40e0
  405e4a:	ins    DWORD PTR es:[edi],dx
  405e4b:	dec    edi
  405e4c:	xlat   BYTE PTR ds:[ebx]
  405e4d:	cmp    esp,ebx
  405e4f:	mov    BYTE PTR [ecx],ch
  405e51:	bound  esp,QWORD PTR [edx-0x16]
  405e54:	jo     0x405e0a
  405e56:	pop    esi
  405e57:	lods   al,BYTE PTR ds:[esi]
  405e58:	add    BYTE PTR [edi-0x5b],bh
  405e5b:	or     ebp,DWORD PTR [ecx+eiz*8+0x66]
  405e5f:	pop    ds
  405e60:	sbb    eax,0xa8334535
  405e65:	jbe    0x405e4e
  405e67:	mov    dh,0x25
  405e69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e6a:	mov    al,0x4a
  405e6c:	test   al,0xdf
  405e6e:	xor    eax,0x56e70c2e
  405e73:	out    0x82,eax
  405e75:	xchg   edx,eax
  405e76:	enter  0x9f82,0x3c
  405e7a:	shl    bh,0xda
  405e7d:	pop    ecx
  405e7e:	xchg   BYTE PTR [ecx],ah
  405e80:	and    BYTE PTR [ebp+edx*4+0xe],bl
  405e84:	aad    0x2c
  405e86:	sbb    al,0x59
  405e88:	mov    eax,ds:0x76d40584
  405e8d:	xor    BYTE PTR [ebp-0x65],bh
  405e90:	jns    0x405e7d
  405e92:	ret    
  405e93:	lea    ecx,[ebx+edx*8]
  405e96:	inc    ebx
  405e97:	mov    esi,0xb808deb7
  405e9c:	push   eax
  405e9d:	retf   
  405e9e:	add    BYTE PTR [ecx+edx*4+0xe0c12f],cl
  405ea5:	pushf  
  405ea6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ea7:	in     eax,0x54
  405ea9:	scas   al,BYTE PTR es:[edi]
  405eaa:	and    edx,0x5d
  405ead:	push   edx
  405eae:	test   al,0x57
  405eb0:	loopne 0x405e93
  405eb2:	dec    eax
  405eb3:	loopne 0x405ef9
  405eb5:	cmp    BYTE PTR [ebx+0x42f7430b],al
  405ebb:	ins    DWORD PTR es:[edi],dx
  405ebc:	xchg   edi,eax
  405ebd:	mov    esp,0x29b47f8a
  405ec2:	into   
  405ec3:	cdq    
  405ec4:	mov    cl,BYTE PTR [esp+eiz*2+0x1d382b58]
  405ecb:	pushf  
  405ecc:	jl     0x405e90
  405ece:	inc    esp
  405ecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ed0:	aam    0x13
  405ed2:	jnp    0x405ec0
  405ed4:	ja     0x405ebf
  405ed6:	dec    ebp
  405ed7:	test   BYTE PTR [eax],al
  405ed9:	mov    eax,ds:0x6c35abe5
  405ede:	jge    0x405eaf
  405ee0:	aam    0xd3
  405ee2:	into   
  405ee3:	data16 or ah,BYTE PTR [ecx+0x1c]
  405ee7:	push   0x3d
  405ee9:	data16 into 
  405eeb:	fucom  st(4)
  405eed:	sub    esi,ebx
  405eef:	pop    ds
  405ef0:	xchg   esp,eax
  405ef1:	into   
  405ef2:	cmp    eax,0xa6e2ec19
  405ef7:	sub    eax,0xa4257d0a
  405efc:	sub    BYTE PTR [eax+0x7a],dh
  405eff:	in     eax,dx
  405f00:	daa    
  405f01:	adc    eax,DWORD PTR [esi+edx*8]
  405f04:	xchg   BYTE PTR [esp+ecx*4],bl
  405f07:	cli    
  405f08:	inc    ecx
  405f09:	fwait
  405f0a:	jno    0x405f7d
  405f0c:	mov    ecx,0xa4b0cba1
  405f11:	pop    ebx
  405f12:	adc    DWORD PTR [edx-0x27a6e26b],ecx
  405f18:	xchg   edx,eax
  405f19:	pop    ebp
  405f1a:	sbb    BYTE PTR [eax-0x5a],cl
  405f1d:	dec    ebx
  405f1e:	push   eax
  405f1f:	xor    eax,DWORD PTR [ebp+0x5b]
  405f22:	jbe    0x405ede
  405f24:	mov    dh,0xd5
  405f26:	push   ds
  405f27:	dec    edx
  405f28:	fsubrp st(1),st
  405f2a:	mov    BYTE PTR [edi+0x4b],cl
  405f2d:	xchg   esi,eax
  405f2e:	shl    DWORD PTR [ebx],cl
  405f30:	dec    eax
  405f31:	push   0xa7da9591
  405f36:	jo     0x405f18
  405f38:	or     DWORD PTR [edi-0x2bb0fc68],ebp
  405f3e:	xor    esp,ebx
  405f40:	or     eax,0x2da16a52
  405f45:	adc    eax,0x84bcc5e7
  405f4a:	retf   
  405f4b:	add    DWORD PTR [esi+0xe],ebx
  405f4e:	sub    DWORD PTR ds:[ecx-0x56],esp
  405f52:	push   esp
  405f53:	mov    ds:0x4553dc49,eax
  405f58:	out    0x1f,al
  405f5a:	and    BYTE PTR [esi+0x27],al
  405f5d:	mov    edx,0x1d014abf
  405f62:	sbb    eax,0x3c8039d9
  405f67:	xor    DWORD PTR [edx],edx
  405f69:	push   0x45dacace
  405f6e:	inc    ecx
  405f6f:	outs   dx,BYTE PTR ds:[esi]
  405f70:	push   esi
  405f71:	ss (bad) 
  405f75:	mov    esi,0x4389d2c5
  405f7a:	pop    esi
  405f7b:	xchg   DWORD PTR [eax+0x15],ecx
  405f7e:	jl     0x405f57
  405f80:	fisubr WORD PTR [esi+ebp*4+0x33ced4a]
  405f87:	or     BYTE PTR [ebx-0x1f],ch
  405f8a:	and    BYTE PTR [esi],dl
  405f8c:	jns    0x405f1e
  405f8e:	or     BYTE PTR [esp+ebp*2-0x77],dl
  405f92:	xor    DWORD PTR [edi+0x1a6067ad],edx
  405f98:	repz mov ebx,0x3b08df33
  405f9e:	out    dx,eax
  405f9f:	lods   eax,DWORD PTR ds:[esi]
  405fa0:	ins    BYTE PTR es:[edi],dx
  405fa1:	sbb    al,0xa
  405fa3:	test   DWORD PTR [eax-0x64def57f],0x95cfb18d
  405fad:	inc    esi
  405fae:	fwait
  405faf:	in     al,dx
  405fb0:	not    BYTE PTR [ebx]
  405fb2:	in     al,0xc3
  405fb4:	ja     0x405fd7
  405fb6:	fidivr DWORD PTR [edi-0x1cf8d7d4]
  405fbc:	loop   0x405f4b
  405fbe:	dec    edx
  405fbf:	in     eax,dx
  405fc0:	out    dx,eax
  405fc1:	cli    
  405fc2:	test   eax,0x9cf0f193
  405fc7:	fwait
  405fc8:	retf   
  405fc9:	data16 jns 0x405fa6
  405fcc:	xchg   ebp,eax
  405fcd:	retf   0x24d
  405fd0:	fcmove st,st(2)
  405fd2:	push   ebx
  405fd3:	aam    0x75
  405fd5:	inc    ebp
  405fd6:	mov    bl,0xf7
  405fd8:	or     eax,0xf718fb3
  405fdd:	ja     0x405fc8
  405fdf:	es stos DWORD PTR es:[edi],eax
  405fe1:	push   ds
  405fe2:	das    
  405fe3:	hlt    
  405fe4:	ror    DWORD PTR [ebx-0x7c],0x53
  405fe8:	out    0xb1,eax
  405fea:	dec    ecx
  405feb:	repz xor BYTE PTR [eax],dh
  405fee:	cmp    DWORD PTR [eax+ecx*1],edi
  405ff1:	cmp    bh,BYTE PTR [edx]
  405ff3:	push   esi
  405ff4:	add    ebx,DWORD PTR [eax]
  405ff6:	mov    ecx,0xa218cfd9
  405ffb:	stos   DWORD PTR es:[edi],eax
  405ffc:	stc    
  405ffd:	cmp    ah,BYTE PTR [eax+0x4]
  406000:	push   edi
  406001:	in     al,dx
  406002:	pop    edi
  406003:	mov    al,0x85
  406005:	inc    edi
  406006:	adc    dl,BYTE PTR [ebx-0x17]
  406009:	and    ebx,ebp
  40600b:	gs add eax,0x2fc415ad
  406011:	xchg   ebp,eax
  406012:	mov    ch,0x36
  406014:	jbe    0x405fd9
  406016:	popa   
  406017:	pop    ds
  406018:	scas   eax,DWORD PTR es:[edi]
  406019:	inc    edx
  40601a:	mov    ds:0x8012e237,eax
  40601f:	inc    esp
  406020:	mov    ah,0xad
  406022:	stos   BYTE PTR es:[edi],al
  406023:	(bad)  
  406024:	popf   
  406025:	sub    DWORD PTR [edi+0x6b],edx
  406028:	jo     0x406020
  40602a:	adc    eax,0x6e731e96
  40602f:	stc    
  406030:	scas   eax,DWORD PTR es:[edi]
  406031:	sbb    DWORD PTR [esi+0x247e0f39],ebx
  406037:	stc    
  406038:	push   0x77
  40603a:	pop    esp
  40603b:	jge    0x40607d
  40603d:	lods   al,BYTE PTR ds:[esi]
  40603e:	mov    ds:0xcd21ab0e,eax
  406043:	xchg   esp,eax
  406044:	push   edi
  406045:	push   ebp
  406046:	retf   
  406047:	ins    DWORD PTR es:[edi],dx
  406048:	je     0x406025
  40604a:	retf   0x21ae
  40604d:	or     cl,al
  40604f:	not    DWORD PTR [edx+eax*4+0x45]
  406053:	dec    ebp
  406054:	out    0x2b,eax
  406056:	(bad)  
  406057:	push   ebp
  406058:	cs mov esp,esi
  40605b:	dec    ebx
  40605c:	out    dx,al
  40605d:	pushf  
  40605e:	mov    bh,BYTE PTR [edx+0x44]
  406061:	xchg   esp,eax
  406062:	add    ch,al
  406064:	outs   dx,DWORD PTR ds:[esi]
  406065:	in     al,dx
  406066:	jecxz  0x40607c
  406068:	call   0x9ee6:0x17c58479
  40606f:	(bad)  
  406071:	(bad)
  406076:	and    cl,BYTE PTR [edi+0x6d4f57f7]
  40607c:	push   es
  40607d:	jo     0x406070
  40607f:	inc    ecx
  406080:	push   ss
  406081:	pop    esp
  406082:	jp     0x406102
  406084:	pop    edx
  406085:	sub    al,0x6a
  406087:	sub    eax,0x10de5f5a
  40608c:	sahf   
  40608d:	xor    cl,BYTE PTR [ecx-0x5]
  406090:	lock dec ebp
  406092:	test   al,0xa6
  406094:	xor    al,0xd6
  406096:	mov    esp,0x881fc1a1
  40609b:	outs   dx,BYTE PTR ds:[esi]
  40609c:	mov    ah,0x4e
  40609e:	mov    BYTE PTR [esi],bh
  4060a0:	fcomp  DWORD PTR [ecx+ebp*8-0x16]
  4060a4:	cdq    
  4060a5:	pusha  
  4060a6:	rol    dh,0xc5
  4060a9:	mov    ch,0xda
  4060ab:	inc    esi
  4060ac:	mov    dl,0x14
  4060ae:	xor    al,0x71
  4060b0:	cmp    BYTE PTR [ebp+eiz*4-0x6ceef7f6],al
  4060b7:	iret   
  4060b8:	cmp    al,0xa
  4060ba:	ins    DWORD PTR es:[edi],dx
  4060bb:	push   ebx
  4060bc:	cmp    BYTE PTR [ecx-0x7ae19c53],bh
  4060c2:	out    0xda,al
  4060c4:	fstp   DWORD PTR [eax+0x739c360f]
  4060ca:	jnp    0x406052
  4060cc:	jmp    0x40610f
  4060ce:	popf   
  4060cf:	adc    BYTE PTR [edi-0x2e7886c8],0x13
  4060d6:	not    BYTE PTR [esi-0x256bb01b]
  4060dc:	stos   DWORD PTR es:[edi],eax
  4060dd:	data16 jne 0x406121
  4060e0:	cmc    
  4060e1:	inc    edx
  4060e2:	ins    BYTE PTR es:[edi],dx
  4060e3:	je     0x40614f
  4060e5:	jb     0x40613b
  4060e7:	jo     0x4060d1
  4060e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060ea:	mov    ah,0xaf
  4060ed:	xor    ebp,DWORD PTR [edx+0x1]
  4060f0:	or     BYTE PTR [ebx+0x69],0x90
  4060f4:	mov    ch,0xde
  4060f6:	inc    edx
  4060f7:	xor    DWORD PTR [esi+0x779e9fc],ebp
  4060fd:	jns    0x4060df
  4060ff:	call   0xe019:0x91542fb9
  406106:	(bad)  
  406107:	mov    dh,BYTE PTR [ebx+0x57]
  40610a:	out    dx,eax
  40610b:	xchg   ebx,eax
  40610c:	sbb    DWORD PTR [eax],ebx
  40610e:	mov    BYTE PTR gs:[ecx+0x2f],al
  406112:	rcl    BYTE PTR [ebx-0x3a4b0a11],0x64
  406119:	je     0x4060dd
  40611b:	pop    eax
  40611c:	jmp    0x2c14bcd2
  406121:	cmp    cl,BYTE PTR [eax]
  406123:	(bad)  [edi+0x79161d74]
  406129:	add    edi,DWORD PTR [edx]
  40612b:	pop    es
  40612c:	ret    
  40612d:	xor    BYTE PTR [edx-0x2d84ad4f],cl
  406133:	(bad)  
  406134:	(bad)  
  406135:	cmc    
  406136:	cwde   
  406137:	ds (bad) 
  406139:	mov    al,0xed
  40613b:	ins    DWORD PTR es:[edi],dx
  40613c:	mov    al,ds:0x69690c47
  406141:	sti    
  406142:	push   ecx
  406143:	das    
  406144:	sub    ah,ch
  406146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406147:	jge    0x406187
  406149:	mov    ds:0x3a1d48ff,eax
  40614e:	aam    0x13
  406150:	jmp    0x95d1:0x938d2040
  406157:	fidiv  WORD PTR [edi-0x793c62f3]
  40615d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40615e:	lock xchg edx,eax
  406160:	sar    DWORD PTR [ebx+0x3f],0xf3
  406164:	cmp    eax,0xdb58f148
  406169:	dec    esi
  40616a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40616b:	aaa    
  40616c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40616d:	mov    eax,ds:0x2531c8a6
  406172:	sbb    al,0xd2
  406174:	enter  0xd56f,0xfe
  406178:	mov    eax,?
  40617a:	or     ebx,DWORD PTR [ebx+0x58]
  40617d:	cmp    DWORD PTR ds:0xaf92b5b4,0x5f2a9ef3
  406187:	push   ebx
  406188:	sub    al,0x7c
  40618a:	add    eax,ecx
  40618c:	fsubr  QWORD PTR [ebx+0x40]
  40618f:	and    BYTE PTR [ecx],al
  406191:	mov    al,0x9a
  406193:	sub    eax,0x28593980
  406198:	pop    esi
  406199:	push   ss
  40619a:	dec    esp
  40619b:	xor    dh,0xfb
  40619e:	jmp    0xa447a0b9
  4061a3:	test   DWORD PTR [esi-0x5095e56b],edi
  4061a9:	and    BYTE PTR [edx+ebx*1+0x8],dl
  4061ad:	sub    ebp,edi
  4061af:	dec    ebx
  4061b0:	add    DWORD PTR [ecx],edx
  4061b2:	and    BYTE PTR [edx+0x7ea29097],bl
  4061b8:	in     al,dx
  4061b9:	xchg   edx,eax
  4061ba:	sub    dh,BYTE PTR [esi+0xb]
  4061bd:	or     eax,0xfed42816
  4061c2:	and    ebp,DWORD PTR [esp]
  4061c5:	adc    ch,dl
  4061c7:	test   BYTE PTR [ebp-0x7c344ebe],cl
  4061cd:	(bad)  
  4061ce:	mov    ah,0x7d
  4061d0:	hlt    
  4061d1:	bound  eax,QWORD PTR [ebx+0x70cdb6ac]
  4061d7:	dec    esp
  4061d8:	ss ja  0x406165
  4061db:	xchg   ebx,eax
  4061dc:	push   cs
  4061dd:	shl    DWORD PTR [eax-0x13],cl
  4061e0:	repnz and al,0xe7
  4061e3:	loop   0x40624d
  4061e5:	aad    0x24
  4061e7:	ror    DWORD PTR ds:[ebx+edi*2-0x1362edef],1
  4061ef:	mov    al,0x85
  4061f1:	nop
  4061f2:	dec    ecx
  4061f3:	dec    edi
  4061f4:	int3   
  4061f5:	ins    BYTE PTR es:[edi],dx
  4061f6:	fmulp  st(2),st
  4061f8:	adc    ah,BYTE PTR [eax+esi*8-0x14]
  4061fc:	arpl   WORD PTR [esi+0x22],ax
  4061ff:	add    al,0x41
  406201:	iret   
  406202:	adc    ecx,DWORD PTR [esp+esi*4+0x38c570c4]
  406209:	mov    eax,DWORD PTR [ebp+0xc]
  40620c:	dec    ebp
  40620d:	repnz pop ebp
  40620f:	ss in  al,dx
  406211:	or     ch,ah
  406213:	or     BYTE PTR [ecx-0x59],0xc9
  406217:	jl     0x40627e
  406219:	int    0xc5
  40621b:	aaa    
  40621c:	in     al,dx
  40621d:	(bad)  
  40621e:	sub    al,0x22
  406220:	pop    ebp
  406221:	sbb    edi,esi
  406223:	ret    
  406224:	in     eax,dx
  406225:	xor    al,0x15
  406227:	stos   DWORD PTR es:[edi],eax
  406228:	inc    esp
  406229:	inc    edx
  40622a:	sbb    DWORD PTR [edx+0x6a23c8e7],eax
  406230:	xchg   esp,eax
  406231:	daa    
  406232:	and    ah,BYTE PTR [ebp-0x6dba31df]
  406238:	xchg   edx,eax
  406239:	pop    esi
  40623a:	mov    ds:0x43295a9c,al
  40623f:	cmp    BYTE PTR [edi],ch
  406241:	into   
  406242:	repz push cs
  406244:	mov    bl,0x60
  406246:	nop
  406247:	clc    
  406248:	addr16 mov eax,ds:0x2984
  40624c:	pop    ss
  40624d:	push   ss
  40624e:	aaa    
  40624f:	jecxz  0x406273
  406251:	mov    al,0xfb
  406253:	test   al,0x5
  406255:	xchg   edx,eax
  406256:	cdq    
  406257:	loopne 0x4062ce
  406259:	inc    esp
  40625a:	and    al,BYTE PTR [esi+ebx*4-0x1ea305d9]
  406261:	fistp  WORD PTR [esi-0x67ed62c3]
  406267:	loope  0x406278
  406269:	fidiv  WORD PTR [ecx-0x3eadafce]
  40626f:	xchg   ecx,eax
  406270:	repz out 0x73,al
  406273:	jp     0x406295
  406275:	and    dl,bl
  406277:	add    al,0x42
  406279:	into   
  40627a:	inc    edx
  40627b:	in     eax,dx
  40627c:	pop    edi
  40627d:	jge    0x40626c
  40627f:	sub    dl,dh
  406281:	xlat   BYTE PTR ds:[ebx]
  406282:	sti    
  406283:	in     eax,0xf3
  406285:	popa   
  406286:	add    esp,ecx
  406288:	push   0xffffffa7
  40628a:	mov    al,0xaf
  40628c:	xor    al,0x6a
  40628e:	loope  0x406287
  406290:	sar    BYTE PTR [edx+ecx*1-0x12],cl
  406294:	sbb    esp,DWORD PTR [edx]
  406296:	pusha  
  406297:	gs aam 0xa3
  40629a:	lahf   
  40629b:	mov    ds:0x6cc1aeaa,al
  4062a0:	fmul   DWORD PTR [eax-0xbc75f86]
  4062a6:	cmp    ch,BYTE PTR [eax+0x69bd7377]
  4062ac:	in     al,0x70
  4062ae:	mov    esi,0x7b73d2d3
  4062b3:	fcom   QWORD PTR [eax]
  4062b5:	and    al,0xf3
  4062b7:	std    
  4062b8:	lahf   
  4062b9:	(bad)  
  4062ba:	in     eax,0xc5
  4062bc:	mov    DWORD PTR [ecx+0x5b],edx
  4062bf:	out    dx,al
  4062c0:	sbb    bh,BYTE PTR [eax-0x619c536b]
  4062c6:	and    ebx,DWORD PTR [ebp+0x227b85f0]
  4062cc:	pop    ds
  4062cd:	xor    ah,bh
  4062cf:	ins    DWORD PTR es:[edi],dx
  4062d0:	pop    ecx
  4062d1:	iret   
  4062d2:	sbb    eax,0xe39ca81d
  4062d7:	cmp    ecx,DWORD PTR [edi-0x60]
  4062da:	mov    cs,WORD PTR [ebx+0x620d5aed]
  4062e0:	icebp  
  4062e1:	push   ecx
  4062e2:	adc    BYTE PTR [edx-0xf9129e4],0xa3
  4062e9:	adc    ah,ah
  4062eb:	or     eax,0xe99fe1c6
  4062f0:	xchg   edx,eax
  4062f1:	pop    edi
  4062f2:	cli    
  4062f3:	leave  
  4062f4:	repz bound ebx,QWORD PTR [edi+0x1c9aeb02]
  4062fb:	inc    ebx
  4062fc:	repnz cdq 
  4062fe:	repnz mov eax,ds:0x41c90fd9
  406304:	imul   edx,ebx,0xfffffff0
  406307:	call   0x4ea60e6d
  40630c:	add    DWORD PTR [ebx],edi
  40630e:	or     DWORD PTR [ebp-0x3],edx
  406311:	aad    0x2c
  406313:	iret   
  406314:	xchg   edx,eax
  406315:	inc    ebx
  406316:	mov    bl,0xb7
  406318:	je     0x4062d1
  40631a:	and    ebp,edx
  40631c:	inc    ebx
  40631d:	hlt    
  40631e:	mov    dl,0xa3
  406320:	dec    edx
  406321:	icebp  
  406322:	das    
  406323:	pop    ss
  406324:	mov    al,0xde
  406326:	mov    al,0xbc
  406328:	inc    esp
  406329:	clc    
  40632a:	jle    0x40637f
  40632c:	push   es
  40632d:	sti    
  40632e:	addr16 pusha 
  406330:	andnps xmm7,XMMWORD PTR [edi]
  406333:	je     0x406314
  406335:	ins    BYTE PTR es:[edi],dx
  406336:	fst    QWORD PTR [edi]
  406338:	fadd   DWORD PTR [edx-0x6a]
  40633b:	jnp    0x4063a3
  40633d:	retf   0xc9aa
  406340:	inc    eax
  406341:	retf   0xb29f
  406344:	enter  0xb01d,0x40
  406348:	cmp    eax,0xd1428611
  40634d:	(bad)  
  40634f:	and    bl,BYTE PTR ds:0x95767a1e
  406355:	repz jmp 0xf88f:0x9b9a38ba
  40635d:	adc    ecx,DWORD PTR [esi-0x68ae489c]
  406363:	mov    WORD PTR [esi],cs
  406365:	inc    ecx
  406366:	scas   eax,DWORD PTR es:[edi]
  406367:	ror    cl,0x6f
  40636a:	or     bh,BYTE PTR [ebx+0x7eea9b94]
  406370:	mov    ds:0xedb5c53a,al
  406375:	adc    ebx,ebx
  406377:	mov    ch,0x56
  406379:	lock aas 
  40637b:	pop    ss
  40637c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40637d:	lds    ebx,FWORD PTR [ecx]
  40637f:	int3   
  406380:	inc    edi
  406381:	test   esp,ebx
  406383:	mov    ebx,0x6850c563
  406388:	lods   al,BYTE PTR ds:[esi]
  406389:	mov    edi,0x6f490c9a
  40638e:	enter  0xc686,0xc8
  406392:	out    0x4c,al
  406394:	inc    ebp
  406395:	jb     0x4063df
  406397:	ins    DWORD PTR es:[edi],dx
  406398:	or     BYTE PTR [ebx-0xd],dl
  40639b:	pop    eax
  40639c:	shl    DWORD PTR [esi-0x18ebcc0b],cl
  4063a2:	not    BYTE PTR [esi-0x34]
  4063a5:	lds    ecx,FWORD PTR [ecx+edx*1]
  4063a8:	fwait
  4063a9:	(bad)  
  4063aa:	call   0xce31:0x6f5dbf1e
  4063b1:	add    al,0xd1
  4063b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063b4:	jo     0x4063e2
  4063b6:	and    esp,0xdd06a4a3
  4063bc:	adc    cl,BYTE PTR [ecx]
  4063be:	stos   BYTE PTR es:[edi],al
  4063bf:	or     al,0x1d
  4063c1:	outs   dx,BYTE PTR ds:[esi]
  4063c2:	aam    0x8a
  4063c4:	call   0x870f39c0
  4063c9:	out    0xeb,al
  4063cb:	jge    0x406354
  4063cd:	mov    WORD PTR [edx],ss
  4063cf:	cdq    
  4063d0:	loop   0x40635a
  4063d2:	mov    BYTE PTR [edx],bh
  4063d4:	adc    al,0x78
  4063d6:	xchg   esp,eax
  4063d7:	addr16 add edx,ebx
  4063da:	pop    es
  4063db:	or     bl,cl
  4063dd:	loope  0x4063a4
  4063df:	iret   
  4063e0:	jae    0x40640e
  4063e2:	push   0xffffff8e
  4063e4:	inc    edi
  4063e5:	xlat   BYTE PTR ds:[ebx]
  4063e6:	lahf   
  4063e7:	out    0x91,eax
  4063e9:	jge    0x406373
  4063eb:	mov    fs,WORD PTR [ecx+0x3a7b60dc]
  4063f1:	not    dh
  4063f3:	aam    0x4f
  4063f5:	pusha  
  4063f6:	and    al,0xe9
  4063f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063f9:	fnstenv [edi-0x6d]
  4063fc:	and    ebp,DWORD PTR [ebp+0x4d]
  4063ff:	retf   0x2ea
  406402:	jb     0x406431
  406404:	aad    0x91
  406406:	les    ecx,FWORD PTR [edx-0x109da8f7]
  40640c:	neg    BYTE PTR [ebp-0x685fbfcb]
  406412:	ins    BYTE PTR es:[edi],dx
  406413:	mov    ebp,0x41540c84
  406418:	outs   dx,DWORD PTR ds:[esi]
  406419:	scas   al,BYTE PTR es:[edi]
  40641a:	ss mov al,0x48
  40641d:	push   ds
  40641e:	or     BYTE PTR [esi-0x7381d696],bl
  406424:	ins    BYTE PTR es:[edi],dx
  406425:	or     BYTE PTR [ecx],al
  406427:	xor    bh,BYTE PTR [ebx-0x64]
  40642a:	xor    DWORD PTR [edx+0x55],ecx
  40642d:	gs or  eax,0xdfed322b
  406433:	je     0x406452
  406435:	retf   
  406436:	ret    
  406437:	pop    edx
  406438:	fsub   QWORD PTR [eax]
  40643a:	adc    eax,DWORD PTR [edx-0x3b]
  40643d:	ss sub ebx,esi
  406440:	mov    edi,0x4d5a8559
  406445:	dec    ebx
  406446:	sbb    dh,ch
  406448:	stc    
  406449:	cdq    
  40644a:	in     al,dx
  40644b:	test   eax,0xab5394af
  406450:	sbb    ch,BYTE PTR [edx]
  406452:	aaa    
  406453:	jnp    0x4063df
  406455:	imul   esp,DWORD PTR [esi+0x1bf03a16],0xffffffeb
  40645c:	ja     0x406451
  40645e:	lds    esi,FWORD PTR [edx]
  406460:	mov    cl,0x0
  406462:	jmp    0xcbb1:0x23df4663
  406469:	(bad)  
  40646b:	inc    BYTE PTR ds:0x5bdd5b95
  406471:	shl    BYTE PTR [esi+0xc810391],1
  406477:	test   DWORD PTR [esp+edx*2-0x67],esp
  40647b:	push   es
  40647c:	or     ecx,DWORD PTR [eax+esi*8]
  40647f:	push   es
  406480:	xor    ecx,DWORD PTR [ecx+0x5d4a3dc9]
  406486:	dec    ecx
  406487:	ret    0x3c3d
  40648a:	mov    DWORD PTR [ebx+0x5c],edi
  40648d:	or     BYTE PTR [ecx-0x6bf3f660],bl
  406493:	(bad)  
  406495:	enter  0x523c,0x1e
  406499:	into   
  40649a:	or     BYTE PTR [ecx+0x2c],0xc1
  40649e:	div    eax
  4064a0:	ss dec ecx
  4064a2:	mov    ecx,0x6addb0b2
  4064a7:	inc    edx
  4064a8:	jmp    0x325b:0xd3cb08f
  4064af:	rcr    BYTE PTR [ecx],1
  4064b1:	xchg   DWORD PTR [eax+edx*4+0x59f09cf8],ebx
  4064b8:	cdq    
  4064b9:	leave  
  4064ba:	sbb    al,dl
  4064bc:	xchg   edx,eax
  4064bd:	retf   0xf0b3
  4064c0:	fnsave fs:[ebx+0x3b8f73e2]
  4064c7:	ins    BYTE PTR es:[edi],dx
  4064c8:	fldcw  WORD PTR [edx+0x5c]
  4064cb:	cmp    eax,DWORD PTR [edx+0x864ed15]
  4064d1:	pop    ebx
  4064d2:	jae    0x40652f
  4064d4:	aad    0xb7
  4064d6:	shl    DWORD PTR [ebx+esi*2],cl
  4064d9:	inc    ebx
  4064da:	inc    esp
  4064db:	sbb    DWORD PTR [esi+0x15],eax
  4064de:	dec    edi
  4064df:	popa   
  4064e0:	push   ss
  4064e1:	or     esp,0x22
  4064e4:	push   ebp
  4064e5:	mov    ecx,0x6d2aa034
  4064ea:	inc    esp
  4064eb:	dec    edx
  4064ec:	in     eax,0x96
  4064ee:	les    ebp,FWORD PTR [ecx+ecx*1+0x32]
  4064f2:	repnz loop 0x406569
  4064f5:	scas   eax,DWORD PTR es:[edi]
  4064f6:	fisub  DWORD PTR [ebp+0x22]
  4064f9:	fidiv  WORD PTR [ecx+0x217088bb]
  4064ff:	popa   
  406500:	mov    WORD PTR [eax+0x37],?
  406503:	rcr    BYTE PTR [ebx+0x3efcad5],1
  406509:	cli    
  40650a:	mov    edi,DWORD PTR [eax-0x4b]
  40650d:	push   ds
  40650e:	in     al,dx
  40650f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406510:	(bad)
  406514:	loopne 0x4064e5
  406516:	in     al,dx
  406517:	inc    ecx
  406518:	xchg   edi,eax
  406519:	icebp  
  40651a:	scas   al,BYTE PTR es:[edi]
  40651b:	popf   
  40651c:	ret    0x3e75
  40651f:	pop    edx
  406520:	fsubr  st(3),st
  406522:	daa    
  406523:	imul   eax,DWORD PTR [edi+0x76],0x6e
  406527:	and    dl,BYTE PTR [ecx]
  406529:	inc    esp
  40652a:	push   esi
  40652b:	ja     0x4064dd
  40652d:	xchg   DWORD PTR ds:0xd2b9b2ac,ecx
  406533:	outs   dx,DWORD PTR ds:[esi]
  406534:	dec    esi
  406535:	adc    al,0x92
  406537:	xchg   edi,eax
  406538:	bound  esi,QWORD PTR [esi-0x2a]
  40653b:	mov    BYTE PTR [edx+0x504708e2],dl
  406541:	ss ret 0xda5c
  406545:	or     DWORD PTR ds:0xaf0977a6,0xd90f1f44
  40654f:	and    DWORD PTR [esp+eax*8],esp
  406552:	retf   
  406553:	add    al,0x64
  406555:	(bad)  
  406556:	or     DWORD PTR [esi+0x1b],ebp
  406559:	dec    edx
  40655a:	frstor [edx-0x7]
  40655d:	jb     0x40656a
  40655f:	test   eax,0xec5171a7
  406564:	dec    eax
  406565:	call   0xe609:0xb7d20d72
  40656c:	jno    0x406545
  40656e:	inc    edx
  40656f:	enter  0x7de3,0x38
  406573:	push   ds
  406574:	mov    eax,ds:0x3466d8c4
  406579:	mov    al,0xa0
  40657b:	daa    
  40657c:	dec    esp
  40657d:	xchg   DWORD PTR [ebx],eax
  40657f:	jp     0x4065d9
  406581:	mov    WORD PTR [edx-0x24],?
  406584:	mov    edx,0xf3cc5855
  406589:	and    DWORD PTR [esp+ecx*2],ebx
  40658c:	inc    ecx
  40658d:	sub    dh,ah
  40658f:	dec    esp
  406590:	jae    0x406589
  406592:	mov    esi,0x55d37791
  406597:	aad    0x1a
  406599:	imul   edi,DWORD PTR [esi+0x25e6c557],0xa6102e89
  4065a3:	push   ecx
  4065a4:	mov    ecx,0x8d7dcbef
  4065a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065aa:	sbb    esi,edi
  4065ac:	fwait
  4065ad:	pop    es
  4065ae:	cmp    al,BYTE PTR [esi+0x6521be32]
  4065b4:	scas   eax,DWORD PTR es:[edi]
  4065b5:	std    
  4065b6:	push   edx
  4065b7:	loope  0x4065ac
  4065b9:	mov    dh,0xca
  4065bb:	pusha  
  4065bc:	xlat   BYTE PTR ds:[ebx]
  4065bd:	jbe    0x40662e
  4065bf:	add    al,0x74
  4065c1:	mov    ecx,0xe6f3637f
  4065c6:	mov    eax,0x5e579b19
  4065cb:	or     eax,0x703fa5de
  4065d0:	in     eax,0x8c
  4065d2:	fwait
  4065d3:	stos   BYTE PTR es:[edi],al
  4065d4:	mov    eax,ds:0x92d51166
  4065d9:	icebp  
  4065da:	in     al,0xaf
  4065dc:	pop    ebp
  4065dd:	int    0xa7
  4065df:	xchg   esi,eax
  4065e0:	push   ebx
  4065e1:	lahf   
  4065e2:	repnz mov dl,0xee
  4065e5:	inc    edx
  4065e6:	lock out dx,eax
  4065e8:	sbb    BYTE PTR [ecx-0x1a4118c],al
  4065ee:	pop    eax
  4065ef:	lods   al,BYTE PTR ds:[esi]
  4065f0:	fst    QWORD PTR [edi+0x70b15ecb]
  4065f6:	inc    esi
  4065f7:	mov    ds:0x5dee5368,al
  4065fc:	sbb    al,0x1
  4065fe:	into   
  4065ff:	mov    fs,WORD PTR ds:0x758ce2ec
  406605:	mov    dh,0x2e
  406607:	xchg   ecx,eax
  406608:	loop   0x406612
  40660a:	jp     0x406643
  40660c:	js     0x40661d
  40660e:	sub    eax,0xe558bedd
  406613:	sub    eax,0x821e2bf5
  406618:	mov    edx,0x85b9c64b
  40661d:	fsubr  QWORD PTR [ebx-0x6f408eae]
  406623:	add    eax,0xd84696df
  406628:	ins    DWORD PTR es:[edi],dx
  406629:	xchg   BYTE PTR [esi+0x2417a8be],ah
  40662f:	in     eax,0xfe
  406631:	sub    DWORD PTR [edi+0x34],esp
  406634:	mov    al,0x1e
  406636:	or     DWORD PTR [ebp+0xa000053],eax
  40663c:	xchg   edx,eax
  40663d:	add    DWORD PTR [edi+0x40],0x67d36835
  406644:	scas   al,BYTE PTR es:[edi]
  406645:	jbe    0x406627
  406647:	into   
  406648:	repnz nop
  40664a:	dec    ebp
  40664b:	jae    0x4065d4
  40664d:	mov    edx,0x2325ee95
  406652:	dec    ecx
  406653:	or     BYTE PTR [ebp+0xa2b4c90],al
  406659:	bnd jle 0x4065f9
  40665c:	int3   
  40665d:	sar    DWORD PTR [ecx+0x4bf94286],cl
  406663:	xchg   ecx,eax
  406664:	sbb    ch,dh
  406666:	cmp    dh,cl
  406668:	push   ebx
  406669:	sbb    bh,BYTE PTR [si+0x72d5]
  40666e:	gs dec esp
  406670:	(bad)  
  406671:	bound  edx,QWORD PTR [eax-0xd6df68d]
  406677:	aas    
  406678:	repz sbb eax,0x6933a80b
  40667e:	neg    DWORD PTR [edx+0x2e8a013]
  406684:	inc    esp
  406685:	fidivr DWORD PTR [ebx-0x7a482cd0]
  40668b:	and    al,0xc2
  40668d:	sub    edi,DWORD PTR [ecx]
  40668f:	nop
  406690:	and    al,0x6c
  406692:	(bad)  
  406693:	(bad)  
  406694:	cmp    eax,0xf1ca45db
  406699:	mov    bl,0x2b
  40669b:	adc    al,0x3f
  40669d:	pop    ss
  40669e:	nop
  40669f:	or     eax,0x65335b6
  4066a4:	sbb    eax,0x6bac67b
  4066a9:	push   eax
  4066aa:	ins    BYTE PTR es:[edi],dx
  4066ab:	or     ch,dh
  4066ad:	sub    DWORD PTR [ebx],edi
  4066af:	xchg   DWORD PTR ss:[ecx+0x48],eax
  4066b3:	dec    ebx
  4066b4:	div    DWORD PTR ds:0xeb5cf8dc
  4066ba:	loope  0x406727
  4066bc:	(bad)  
  4066be:	xchg   ebp,eax
  4066bf:	jmp    esi
  4066c1:	test   ecx,ebx
  4066c3:	inc    edx
  4066c4:	and    esp,ecx
  4066c6:	xchg   edi,eax
  4066c7:	inc    ebp
  4066c8:	js     0x4066d7
  4066ca:	cs imul edx,esi,0x7a
  4066ce:	scas   eax,DWORD PTR es:[edi]
  4066cf:	jg     0x40671c
  4066d1:	xchg   ebp,eax
  4066d2:	cmc    
  4066d3:	call   0x5d36:0x5f24380
  4066da:	(bad)  
  4066db:	dec    ecx
  4066dc:	mov    edi,0x43ad5ba1
  4066e1:	(bad)  
  4066e2:	or     al,0xb
  4066e4:	dec    esp
  4066e5:	sar    cl,1
  4066e7:	(bad)  [esi+esi*1+0x2a6a9af5]
  4066ee:	cdq    
  4066ef:	xor    eax,0x36168645
  4066f4:	daa    
  4066f5:	pop    ebx
  4066f6:	xchg   esp,eax
  4066f7:	test   ch,ch
  4066f9:	mov    dh,0xd2
  4066fb:	int3   
  4066fc:	enter  0x3d03,0xc9
  406700:	(bad)  
  406701:	jg     0x406745
  406703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406704:	add    BYTE PTR [edi+0x684fd9a9],0xc0
  40670b:	and    DWORD PTR [ebx-0xe],0x4e4992bd
  406712:	int    0x38
  406714:	jne    0x40677d
  406716:	inc    eax
  406717:	add    eax,0xc4c5
  40671c:	int    0x1e
  40671e:	and    edx,DWORD PTR [ebx+0x31bfda52]
  406724:	stos   BYTE PTR es:[edi],al
  406725:	adc    eax,0x4971cbd2
  40672a:	hlt    
  40672b:	in     eax,dx
  40672c:	nop
  40672d:	sbb    ch,ch
  40672f:	cld    
  406730:	ret    0x1d1b
  406733:	add    al,0x4d
  406735:	(bad)  
  406736:	mov    al,0xaa
  406738:	sbb    eax,0xcfc5f6b1
  40673d:	repnz pop ebp
  40673f:	in     al,dx
  406740:	stc    
  406741:	jg     0x406759
  406743:	mov    eax,DWORD PTR [ecx-0x3f786d12]
  406749:	sbb    DWORD PTR [ebx],0x5a8512b3
  40674f:	cmp    DWORD PTR [ebp+0x78],esi
  406752:	or     al,0xd9
  406754:	xchg   ebp,eax
  406755:	in     eax,dx
  406756:	pop    ecx
  406757:	inc    ebx
  406758:	and    eax,0x3bac9c7b
  40675d:	push   cs
  40675e:	xchg   ebx,eax
  40675f:	sub    eax,0x7d0dae33
  406764:	jp     0x4066fa
  406766:	bound  esi,QWORD PTR [edx+0x38]
  406769:	daa    
  40676a:	cmp    BYTE PTR [eax-0x5a22e405],bh
  406770:	pop    ecx
  406771:	fild   WORD PTR [ebx+eax*1]
  406774:	sub    DWORD PTR [ebp+0x17],ecx
  406777:	dec    eax
  406778:	(bad)  
  406779:	push   edx
  40677a:	popa   
  40677b:	pop    ss
  40677c:	daa    
  40677d:	pop    es
  40677e:	cmp    al,0x37
  406780:	pop    DWORD PTR [esp+ebx*2+0x8]
  406784:	mov    ch,0x31
  406786:	adc    eax,0xd0ba845b
  40678b:	add    esi,DWORD PTR [ebx-0x48]
  40678e:	pop    edx
  40678f:	(bad)  
  406791:	stos   DWORD PTR es:[edi],eax
  406792:	fwait
  406793:	xor    eax,0x93d52a7c
  406798:	shr    BYTE PTR [edx-0x74],1
  40679b:	(bad)  
  40679c:	stc    
  40679d:	in     eax,dx
  40679e:	aam    0x43
  4067a0:	ret    
  4067a1:	sub    DWORD PTR [ecx-0x7d],ecx
  4067a4:	dec    edx
  4067a5:	or     BYTE PTR [eax],0x20
  4067a8:	shr    DWORD PTR [edx+0x20],0xd6
  4067ac:	jne    0x406801
  4067ae:	ret    0x71d7
  4067b1:	xchg   ebx,eax
  4067b2:	cld    
  4067b3:	ret    
  4067b4:	ret    0xc393
  4067b7:	js     0x406757
  4067b9:	pop    es
  4067ba:	jmp    0xf864c149
  4067bf:	ret    0xa25f
  4067c2:	stc    
  4067c3:	test   cl,dh
  4067c5:	stos   DWORD PTR es:[edi],eax
  4067c6:	dec    ecx
  4067c7:	jne    0x4067e0
  4067c9:	es jmp 0x4067a4
  4067cc:	mov    al,ds:0x50b5adeb
  4067d1:	and    BYTE PTR [esi-0x49],bl
  4067d4:	push   edi
  4067d5:	mov    esp,0x19d71319
  4067da:	call   0x540c:0xfbd19a05
  4067e1:	hlt    
  4067e2:	sub    eax,0xb581fb6f
  4067e7:	mov    eax,ds:0x8ccffd7f
  4067ec:	and    dl,BYTE PTR [ebx-0x36]
  4067ef:	mov    eax,0xd74601c6
  4067f4:	popa   
  4067f5:	ins    DWORD PTR es:[edi],dx
  4067f6:	dec    ebp
  4067f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067f8:	stos   BYTE PTR es:[edi],al
  4067f9:	xor    BYTE PTR [edi+eax*2-0x2],dh
  4067fd:	mov    ss,WORD PTR gs:[eax]
  406800:	dec    ebp
  406801:	inc    esi
  406802:	ja     0x406881
  406804:	xor    bh,BYTE PTR [eax-0x68]
  406807:	cli    
  406808:	in     al,dx
  406809:	push   esp
  40680a:	cmp    esp,ebp
  40680c:	jnp    0x406844
  40680e:	push   eax
  40680f:	mul    ch
  406811:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406813:	jmp    0x95ca:0x5cbed1ce
  40681a:	sub    al,0x16
  40681d:	mov    edx,0x417f4c0a
  406822:	sbb    ah,bh
  406824:	jae    0x40688f
  406826:	retf   
  406827:	inc    ebp
  406828:	loop   0x4067ba
  40682a:	hlt    
  40682b:	adc    esi,eax
  40682d:	cmp    bl,ah
  40682f:	xor    ah,cl
  406831:	in     eax,dx
  406832:	xor    al,0x91
  406834:	adc    DWORD PTR cs:[edi-0x26],0x22
  406839:	adc    ebp,esi
  40683b:	and    BYTE PTR [eax+0x60],bh
  40683e:	jmp    0x4068bc
  406840:	cmp    BYTE PTR [esi-0x16],0xab
  406844:	nop
  406845:	ja     0x406851
  406847:	ins    DWORD PTR es:[edi],dx
  406848:	jno    0x4067d0
  40684a:	xchg   edi,eax
  40684b:	(bad)  
  40684c:	fisubr WORD PTR [ecx+0x11]
  40684f:	sub    ecx,DWORD PTR [eax+ebp*4]
  406852:	clc    
  406853:	mov    eax,0xc774e6ae
  406858:	retf   
  406859:	jl     0x4068d0
  40685b:	add    BYTE PTR [edx+ebx*2],cl
  40685e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40685f:	dec    DWORD PTR [ebx+0x50]
  406862:	leave  
  406863:	daa    
  406864:	cmp    BYTE PTR [edx-0x6ae53a6f],al
  40686a:	xchg   DWORD PTR [ecx],esi
  40686c:	mov    dh,0xa0
  40686e:	je     0x4068b0
  406870:	pop    ds
  406871:	ret    0xa6e6
  406874:	cmp    DWORD PTR [ebx],ebp
  406876:	sbb    edi,DWORD PTR ds:0x5527f6a7
  40687c:	sub    BYTE PTR [edi-0x193b8fbc],0x49
  406883:	xor    al,0xe3
  406885:	les    eax,FWORD PTR [esi-0x293e1c21]
  40688b:	sub    BYTE PTR ds:0x32857f58,cl
  406891:	mov    BYTE PTR [ecx-0x38a01279],ch
  406897:	sahf   
  406898:	pop    eax
  406899:	inc    bp
  40689b:	stos   BYTE PTR es:[edi],al
  40689c:	call   0x5be18104
  4068a1:	(bad)  
  4068a2:	lock mov esi,esp
  4068a5:	aas    
  4068a6:	cmp    BYTE PTR [edi],0x8c
  4068a9:	mov    ebx,0xb7bd607
  4068ae:	mov    esp,0x85e6a770
  4068b3:	push   edx
  4068b4:	push   edi
  4068b5:	mov    esi,0xf987dbaf
  4068ba:	shl    edx,1
  4068bc:	bnd jle 0x4068b7
  4068bf:	jle    0x406865
  4068c1:	xor    esi,DWORD PTR [ecx]
  4068c3:	dec    esi
  4068c4:	repz lahf 
  4068c6:	jmp    0x3589:0xa3d4271d
  4068cd:	and    bh,BYTE PTR [eax]
  4068cf:	bnd jge 0x4068cf
  4068d2:	add    esi,ebp
  4068d4:	mov    al,ds:0x17c1ff57
  4068d9:	(bad)  
  4068da:	loope  0x40694c
  4068dc:	sbb    al,BYTE PTR [eax]
  4068de:	xchg   ecx,eax
  4068df:	addr16 jmp 0x4068ba
  4068e2:	mov    bl,BYTE PTR [esi-0x1]
  4068e5:	popf   
  4068e6:	sbb    ebp,DWORD PTR [ecx+0x2f]
  4068e9:	and    al,0xcc
  4068eb:	add    al,0x42
  4068ed:	mov    eax,DWORD PTR [edx]
  4068ef:	dec    esp
  4068f0:	arpl   WORD PTR [esi],sp
  4068f2:	iret   
  4068f3:	shl    DWORD PTR [eax],1
  4068f5:	jle    0x40688b
  4068f7:	and    dl,BYTE PTR [esi]
  4068f9:	ss nop
  4068fb:	mov    ch,BYTE PTR [ebp+0x3e]
  4068fe:	mov    esi,0xb9077e26
  406903:	push   es
  406904:	push   cs
  406905:	or     DWORD PTR ds:0x2b268c0e,eax
  40690b:	(bad)
  40690e:	fstp   DWORD PTR [ebp+0x53965765]
  406914:	or     eax,0xb76aa4db
  406919:	addr16 leave 
  40691b:	ja     0x406989
  40691d:	dec    ebp
  40691e:	mov    eax,ds:0x6b51ee8
  406923:	or     ch,bh
  406925:	ficomp DWORD PTR [ebp-0x7ad20925]
  40692b:	jb     0x4068fa
  40692d:	mov    edx,DWORD PTR [ecx-0x38b5522a]
  406933:	mov    bl,0xd7
  406935:	lea    esi,[eax-0x2d42fc02]
  40693b:	cmp    DWORD PTR [ecx],ebp
  40693d:	fild   WORD PTR [ebp+0x4f]
  406940:	scas   al,BYTE PTR es:[edi]
  406941:	nop
  406942:	test   DWORD PTR [esi-0x579afe05],ebx
  406948:	retf   
  406949:	cwde   
  40694a:	fisubr WORD PTR [eax]
  40694c:	(bad)  
  40694d:	shr    DWORD PTR [ebx+0x22030b12],1
  406953:	add    eax,0x894c2475
  406958:	xor    edx,DWORD PTR [esp]
  40695b:	mov    ah,0x7d
  40695d:	pop    ecx
  40695e:	js     0x40691e
  406960:	inc    edx
  406961:	(bad)
  406964:	and    DWORD PTR [ebp+0x1bd681b1],esi
  40696a:	jnp    0x4069a7
  40696c:	test   eax,0x28ce8f30
  406971:	aam    0xf8
  406973:	push   edi
  406974:	pop    esp
  406975:	or     eax,0xe35c1fea
  40697a:	jmp    0x1e02:0xcb7ea76a
  406981:	cmp    ah,ah
  406983:	repnz daa 
  406985:	mov    ebx,0x51a182f2
  40698a:	pop    ebx
  40698b:	xor    DWORD PTR cs:[edi],0x98744395
  406992:	mov    gs,WORD PTR [edx]
  406994:	jb     0x4069dc
  406996:	addr16 in eax,0xe2
  406999:	add    bl,BYTE PTR [esi+0x1a0416c1]
  40699f:	aas    
  4069a0:	push   cs
  4069a1:	dec    eax
  4069a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069a3:	out    0x4d,eax
  4069a5:	mov    ecx,0x64216c1f
  4069aa:	jecxz  0x406962
  4069ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069ad:	pop    es
  4069ae:	adc    al,0xd5
  4069b0:	cdq    
  4069b1:	stos   DWORD PTR es:[edi],eax
  4069b2:	aad    0x66
  4069b4:	test   BYTE PTR [ecx-0x79bdae83],bh
  4069ba:	scas   al,BYTE PTR es:[edi]
  4069bb:	mov    ebp,0x91cd2e5a
  4069c0:	add    eax,DWORD PTR [eax]
  4069c2:	mov    eax,0xa80c6bf2
  4069c7:	aas    
  4069c8:	adc    cl,bl
  4069ca:	push   cs
  4069cb:	cmp    edi,0x68
  4069ce:	push   ds
  4069cf:	sbb    bl,ch
  4069d1:	mov    ds:0xb48e08aa,al
  4069d6:	xor    eax,0xdf066913
  4069db:	xchg   ebp,eax
  4069dc:	inc    edx
  4069dd:	sbb    DWORD PTR [esi-0x2d3ac1ba],ebp
  4069e3:	rdmsr  
  4069e5:	cs cmp al,0xd8
  4069e8:	cli    
  4069e9:	test   BYTE PTR [esi+0x56],bl
  4069ec:	jge    0x4069ac
  4069ee:	sbb    al,0x2b
  4069f0:	xchg   ecx,eax
  4069f1:	vhaddpd ymm0,ymm4,YMMWORD PTR [ecx]
  4069f5:	sbb    eax,0x38e50036
  4069fa:	pop    ebx
  4069fb:	jp     0x406a39
  4069fd:	mov    dl,0xc7
  4069ff:	scas   al,BYTE PTR es:[edi]
  406a00:	add    al,BYTE PTR [esi+0x25]
  406a03:	iret   
  406a04:	jbe    0x406a1c
  406a06:	xchg   edx,eax
  406a07:	mov    ebp,0x8c148e4
  406a0c:	mov    bh,0x7b
  406a0e:	jo     0x4069b2
  406a10:	pop    es
  406a11:	test   eax,0x1c5f64a8
  406a16:	mov    ecx,0x3e644e64
  406a1b:	call   0xa7635343
  406a20:	out    0x21,eax
  406a22:	push   edx
  406a23:	dec    BYTE PTR cs:[ebp+0x33]
  406a27:	and    BYTE PTR [edi+0x264855ce],al
  406a2d:	fdiv   QWORD PTR [esi-0x79bbbe99]
  406a33:	jae    0x4069dc
  406a35:	std    
  406a36:	mov    dh,0xc2
  406a38:	push   ecx
  406a39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a3a:	jno    0x4069fc
  406a3c:	sub    edi,eax
  406a3e:	dec    eax
  406a3f:	in     eax,dx
  406a40:	test   ebp,ebx
  406a42:	add    DWORD PTR [edx+0x56],edi
  406a45:	sbb    eax,0x880f736f
  406a4a:	add    al,0x91
  406a4c:	(bad)  
  406a4d:	sbb    al,0xf7
  406a4f:	leavew 
  406a51:	in     al,dx
  406a52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a53:	mov    bh,0x3e
  406a55:	ror    DWORD PTR [edx+0x13],0x99
  406a59:	adc    eax,0x59181c69
  406a5e:	ins    BYTE PTR es:[edi],dx
  406a5f:	push   edi
  406a60:	mov    ecx,0xc575b9f
  406a65:	mov    edi,0x3121b8d6
  406a6a:	jb     0x4069f9
  406a6c:	pop    ebx
  406a6d:	(bad)  
  406a6e:	mov    ds:0xd6c0cded,al
  406a73:	mov    dh,0xed
  406a75:	and    edx,DWORD PTR [edi]
  406a77:	xchg   ebx,eax
  406a78:	adc    edx,0x1193f292
  406a7e:	push   edi
  406a7f:	inc    ebp
  406a81:	mov    edi,0xf1a9ba05
  406a86:	adc    DWORD PTR ds:0x1ca44ed0,ebx
  406a8c:	cmp    al,0x92
  406a8e:	mov    ch,bl
  406a90:	js     0x406a16
  406a92:	xor    BYTE PTR [esi-0x7b],cl
  406a95:	(bad)  
  406a96:	sbb    BYTE PTR [eax],dh
  406a98:	mov    bl,0xbb
  406a9a:	int    0x58
  406a9c:	xchg   edx,eax
  406a9d:	xchg   DWORD PTR [ebx],ebx
  406a9f:	pop    ebp
  406aa0:	rdpmc  
  406aa2:	(bad)  
  406aa3:	data16 lahf 
  406aa5:	xor    BYTE PTR ds:0x63461f93,bh
  406aab:	add    eax,0x916fb6f8
  406ab0:	mov    ch,0x90
  406ab2:	mov    bh,0x50
  406ab4:	add    BYTE PTR [ebp-0x11],0x2b
  406ab8:	mov    dh,0xf0
  406aba:	bound  esp,QWORD PTR [eax*4+0x2dc31467]
  406ac1:	sbb    bl,bh
  406ac3:	jge    0x406ab9
  406ac5:	mov    al,ds:0xd1a624a9
  406aca:	outs   dx,BYTE PTR ds:[esi]
  406acb:	add    esp,esp
  406acd:	inc    eax
  406ace:	mov    DWORD PTR [esi+0x582a568],esp
  406ad4:	pusha  
  406ad5:	cmc    
  406ad6:	pop    eax
  406ad7:	outs   dx,BYTE PTR ds:[esi]
  406ad8:	loopne 0x406a80
  406ada:	arpl   WORD PTR [esi*4-0x3d852ab6],bx
  406ae1:	pop    ecx
  406ae2:	hlt    
  406ae3:	ror    BYTE PTR [edi-0x23d277a5],cl
  406ae9:	std    
  406aea:	xchg   ecx,eax
  406aeb:	add    DWORD PTR [eax],0xa7bd7856
  406af1:	addr16 xchg esi,eax
  406af3:	enter  0xa7ce,0xea
  406af7:	outs   dx,BYTE PTR ds:[esi]
  406af8:	inc    edi
  406af9:	aas    
  406afa:	shl    DWORD PTR [ebx-0x3f],1
  406afd:	jmp    0x406b52
  406aff:	repz mov ds:0x28b62071,eax
  406b05:	mov    esp,0xc308fc6d
  406b0a:	xchg   esp,ebx
  406b0c:	pop    ds
  406b0d:	mov    eax,ds:0xbb53bd7e
  406b12:	push   esp
  406b13:	cmp    DWORD PTR [ebx+0x8a079a6],ebx
  406b19:	add    al,0xde
  406b1b:	xchg   ebp,eax
  406b1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b1d:	call   0x7af75792
  406b22:	pop    esp
  406b23:	aas    
  406b24:	inc    eax
  406b25:	push   edi
  406b26:	add    edi,DWORD PTR [edi-0x69]
  406b29:	in     al,dx
  406b2a:	addr16 ret 0x3aab
  406b2e:	int    0xc8
  406b30:	mov    esp,0xff4d99a0
  406b35:	outs   dx,BYTE PTR ds:[esi]
  406b36:	mov    ds,ecx
  406b38:	sub    ax,dx
  406b3b:	jmp    0xad45:0x9afc5681
  406b42:	mov    ebx,0x2f47ef4e
  406b47:	mul    BYTE PTR [esi-0x64]
  406b4a:	xchg   edx,eax
  406b4b:	dec    edi
  406b4c:	sub    BYTE PTR [ecx],0x79
  406b4f:	lods   eax,DWORD PTR ds:[esi]
  406b50:	xor    DWORD PTR [ebx+0x1f],esp
  406b53:	leave  
  406b54:	daa    
  406b55:	sti    
  406b56:	popf   
  406b57:	add    al,0xfc
  406b59:	sbb    DWORD PTR [edx],0xffffffae
  406b5c:	out    0xbc,al
  406b5e:	push   ecx
  406b5f:	mov    edx,eax
  406b61:	dec    ch
  406b63:	add    DWORD PTR [edx+edi*4+0x4d],0xffffffcb
  406b68:	and    dh,0xdc
  406b6b:	data16 ja 0x406b8d
  406b6e:	dec    ebp
  406b6f:	mov    eax,0x5c6db2ea
  406b74:	jnp    0x406b3f
  406b76:	popa   
  406b77:	push   esp
  406b78:	aas    
  406b79:	xlat   BYTE PTR ds:[ebx]
  406b7a:	ins    BYTE PTR es:[edi],dx
  406b7b:	cmc    
  406b7c:	push   esp
  406b7d:	jae    0x406b97
  406b7f:	loop   0x406bb9
  406b81:	ins    DWORD PTR es:[edi],dx
  406b82:	test   al,0xdf
  406b84:	outs   dx,BYTE PTR ds:[esi]
  406b85:	dec    ebp
  406b86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b87:	call   DWORD PTR [edx+0x5c079d83]
  406b8d:	or     bh,bh
  406b8f:	and    DWORD PTR [edi+0x39],esp
  406b92:	mov    bh,0x28
  406b94:	test   ecx,0x412d9285
  406b9a:	add    al,0x75
  406b9c:	ja     0x406b30
  406b9e:	aaa    
  406b9f:	mov    esi,es
  406ba1:	or     BYTE PTR [eax],al
  406ba3:	retf   0xaeac
  406ba6:	scas   eax,DWORD PTR es:[edi]
  406ba7:	test   al,0xba
  406ba9:	jg     0x406b4e
  406bab:	jb     0x406b2f
  406bad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bae:	xchg   esi,eax
  406baf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bb0:	and    DWORD PTR [edi+esi*4],esp
  406bb3:	push   ebp
  406bb4:	sub    eax,0xc7c510f4
  406bb9:	xchg   edi,eax
  406bba:	push   0xffffffbd
  406bbc:	push   DWORD PTR [edi-0x2548feb3]
  406bc2:	xor    bh,cl
  406bc4:	sti    
  406bc5:	rcr    BYTE PTR gs:[ecx-0x9628500],1
  406bcc:	in     eax,dx
  406bcd:	int    0xfb
  406bcf:	sbb    al,0x69
  406bd1:	imul   ebp,edi,0xcf698545
  406bd7:	jecxz  0x406bba
  406bd9:	ficom  DWORD PTR [ecx+0x4e]
  406bdc:	repnz gs out dx,eax
  406bdf:	mov    ah,0xed
  406be1:	les    ecx,FWORD PTR [edx+eiz*8-0x1e9b22bb]
  406be8:	dec    esp
  406be9:	push   ds
  406bea:	cmc    
  406beb:	jmp    DWORD PTR [ebx-0x65]
  406bee:	pop    ss
  406bef:	popa   
  406bf0:	call   0xa926:0x2ea9fae9
  406bf7:	mov    ds,WORD PTR [ecx-0x1c0f771d]
  406bfd:	xchg   esp,eax
  406bfe:	std    
  406bff:	dec    esi
  406c00:	or     al,0x84
  406c02:	dec    ebp
  406c03:	pop    ebp
  406c04:	xor    al,ch
  406c06:	bound  edi,QWORD PTR [edi+0x28]
  406c09:	stos   BYTE PTR es:[edi],al
  406c0a:	popf   
  406c0b:	ror    BYTE PTR [edx-0x230048dc],0xb7
  406c12:	xchg   edi,eax
  406c13:	bound  esi,QWORD PTR [edx+0x44]
  406c16:	test   al,0x80
  406c18:	(bad)  
  406c19:	sbb    eax,0xa7ce8fb5
  406c1e:	cmp    DWORD PTR [eax],0xffffff90
  406c21:	jl     0x406be4
  406c23:	push   es
  406c24:	pop    ds
  406c25:	push   0xb1dedc85
  406c2a:	or     eax,0x99fd231a
  406c2f:	icebp  
  406c30:	and    eax,0x18019f9f
  406c35:	sbb    eax,0x6ff0d4d5
  406c3a:	lods   al,BYTE PTR ds:[esi]
  406c3b:	and    DWORD PTR [ecx+0x1e60a8c4],ecx
  406c41:	aam    0x8e
  406c43:	xchg   BYTE PTR [ebp+0x38],al
  406c46:	pushf  
  406c47:	das    
  406c48:	je     0x406ca3
  406c4a:	test   eax,0x62e5ac68
  406c4f:	mov    ch,0x99
  406c51:	jecxz  0x406c7b
  406c53:	das    
  406c54:	sbb    esp,DWORD PTR [ecx]
  406c56:	pushf  
  406c57:	pushf  
  406c58:	jmp    0x406be9
  406c5a:	dec    edx
  406c5b:	dec    ecx
  406c5c:	sbb    ebx,DWORD PTR [edx+ebx*8-0x7b]
  406c60:	push   ds
  406c61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c62:	xor    al,0xd2
  406c64:	dec    esp
  406c65:	mov    eax,ds:0x13591da5
  406c6a:	retf   0xebb4
  406c6d:	cmp    esp,edx
  406c6f:	xor    al,0xdf
  406c71:	add    BYTE PTR [esi],0x57
  406c74:	test   BYTE PTR [ecx+0x55847939],bh
  406c7a:	(bad)  
  406c7b:	ins    BYTE PTR es:[edi],dx
  406c7c:	ret    
  406c7d:	imul   eax,eax,0xffffff8d
  406c80:	adc    BYTE PTR [ebp-0x3a],ah
  406c83:	mov    dh,0xb2
  406c85:	sbb    BYTE PTR [esi],ah
  406c87:	test   eax,0x73f2026c
  406c8c:	mov    al,0xe7
  406c8e:	out    0x3c,eax
  406c90:	push   esi
  406c91:	sbb    ebx,edx
  406c93:	mov    ebx,0x395858ab
  406c98:	mov    eax,0x24cac2fa
  406c9d:	fbld   TBYTE PTR [edx]
  406c9f:	mov    ds:0x242b26f8,eax
  406ca4:	shl    DWORD PTR ds:[esi],cl
  406ca7:	ror    DWORD PTR [ebp+0xcf4c82],1
  406cad:	sub    ecx,DWORD PTR [edx+0x3e]
  406cb0:	push   ss
  406cb1:	xchg   BYTE PTR [eax+0x3c6f6ac7],cl
  406cb7:	shl    BYTE PTR [eax],cl
  406cb9:	and    eax,0x427b54b0
  406cbe:	stc    
  406cbf:	clc    
  406cc0:	leave  
  406cc1:	mov    bl,0x63
  406cc3:	and    eax,ebp
  406cc5:	inc    edx
  406cc6:	jmp    0x406d2c
  406cc8:	cmp    cl,BYTE PTR [eax]
  406cca:	stos   DWORD PTR es:[edi],eax
  406ccb:	popfw  
  406ccd:	mov    BYTE PTR [esi-0x19],bh
  406cd0:	clc    
  406cd1:	xlat   BYTE PTR ds:[ebx]
  406cd2:	push   edx
  406cd3:	fisubr WORD PTR [edi+ebp*4-0x57]
  406cd7:	imul   BYTE PTR [edx+edx*8]
  406cda:	hlt    
  406cdb:	mov    BYTE PTR [ebp-0x12],ah
  406cde:	push   ss
  406cdf:	out    0xea,al
  406ce1:	jle    0x406c66
  406ce3:	popf   
  406ce4:	mov    cl,BYTE PTR [eax]
  406ce6:	push   0x36aa1c0e
  406ceb:	inc    edi
  406cec:	add    eax,edi
  406cee:	call   0x99f62e74
  406cf3:	xor    edi,DWORD PTR [ebx+0x77]
  406cf6:	sub    ecx,eax
  406cf8:	cmp    BYTE PTR [ecx-0x7c14dff7],0xc9
  406cff:	jmp    0x406cfe
  406d01:	div    DWORD PTR [esi+0x5d]
  406d04:	and    eax,DWORD PTR [ebp+0x6c]
  406d07:	daa    
  406d08:	cwde   
  406d09:	cmp    DWORD PTR [esi+0x57],ebp
  406d0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d0d:	loop   0x406c8f
  406d0f:	aaa    
  406d10:	push   cs
  406d11:	out    0x27,eax
  406d13:	cmp    BYTE PTR [esp+ebp*2-0x4f],bl
  406d17:	scas   al,BYTE PTR es:[edi]
  406d18:	jns    0x406ce1
  406d1a:	sbb    dl,BYTE PTR [ebp+0x1a]
  406d1d:	and    BYTE PTR [esi],dl
  406d1f:	lea    esp,[esi]
  406d21:	mov    ah,0x67
  406d23:	scas   eax,DWORD PTR es:[edi]
  406d24:	ja     0x406d15
  406d26:	out    0xb,eax
  406d28:	push   ecx
  406d29:	shl    cl,0x9c
  406d2c:	pop    eax
  406d2d:	js     0x406d56
  406d2f:	inc    edi
  406d30:	dec    esi
  406d31:	mov    WORD PTR [ebx+eax*4+0x737222b],gs
  406d38:	lods   al,BYTE PTR ds:[esi]
  406d39:	pop    ebx
  406d3a:	dec    ecx
  406d3b:	in     eax,dx
  406d3c:	rcr    ah,1
  406d3e:	test   eax,0xef603f2e
  406d43:	ret    
  406d44:	sub    edi,edx
  406d46:	dec    edx
  406d47:	push   ebx
  406d48:	dec    ebx
  406d49:	inc    esi
  406d4a:	pop    ss
  406d4b:	sub    BYTE PTR [ecx+eiz*8-0x16f5240b],0xbd
  406d53:	xchg   esp,eax
  406d54:	inc    eax
  406d55:	aaa    
  406d56:	pusha  
  406d57:	dec    eax
  406d58:	fistp  QWORD PTR [edi+ecx*1-0xf]
  406d5c:	sub    al,0x2d
  406d5e:	dec    esi
  406d5f:	sub    eax,ebx
  406d61:	jae    0x406d53
  406d63:	mov    gs,WORD PTR [ebx+ebx*8+0x75268517]
  406d6a:	lods   al,BYTE PTR ds:[esi]
  406d6b:	xor    ch,BYTE PTR [edx]
  406d6d:	mov    ebx,0xbf4521d6
  406d72:	sub    eax,DWORD PTR [esi]
  406d74:	pop    ds
  406d75:	loopne 0x406d64
  406d77:	stos   BYTE PTR es:[edi],al
  406d78:	adc    BYTE PTR [edx],dl
  406d7a:	mov    eax,ds:0x3734c682
  406d7f:	in     eax,dx
  406d80:	sti    
  406d81:	xlat   BYTE PTR ds:[ebx]
  406d82:	daa    
  406d83:	popa   
  406d84:	lds    si,DWORD PTR [eax]
  406d87:	push   0xffffff98
  406d89:	sahf   
  406d8a:	fsub   QWORD PTR [esi]
  406d8c:	mov    cl,0xd9
  406d8e:	popf   
  406d8f:	psraw  mm7,QWORD PTR [ebx]
  406d92:	test   eax,0xb69032d1
  406d97:	cdq    
  406d98:	imul   edx,edx,0x9722f1e4
  406d9e:	neg    BYTE PTR ss:[ecx]
  406da1:	je     0x406d38
  406da3:	ret    
  406da4:	cli    
  406da5:	je     0x406d49
  406da7:	loopne 0x406d2e
  406da9:	cli    
  406daa:	es dec esp
  406dac:	xor    ah,ch
  406dae:	mov    cl,0x40
  406db0:	pop    es
  406db1:	mov    cl,0x26
  406db3:	call   0x5d9c117b
  406db8:	enter  0x1b7f,0xfd
  406dbc:	repz jbe 0x406e0a
  406dbf:	in     eax,0xa4
  406dc1:	mov    ecx,0xc604f5ac
  406dc6:	add    DWORD PTR [edx+0xa],ecx
  406dc9:	pop    esi
  406dca:	lea    esp,[ecx+esi*2+0x7d]
  406dce:	mov    cl,0x65
  406dd0:	xchg   ebx,eax
  406dd1:	mov    eax,edx
  406dd3:	pop    ss
  406dd4:	pop    ebx
  406dd5:	stos   DWORD PTR es:[edi],eax
  406dd6:	jmp    0x409d:0x7b154c4f
  406ddd:	add    al,0xce
  406ddf:	idiv   bh
  406de1:	lea    eax,[ebx-0x1e]
  406de4:	in     eax,0x9d
  406de6:	fnstenv [edi+edx*4+0x6c]
  406dea:	test   ah,al
  406dec:	adc    al,0xb1
  406dee:	lahf   
  406def:	mov    ah,0x70
  406df1:	add    edi,edi
  406df3:	and    dh,bl
  406df5:	sahf   
  406df6:	fmul   DWORD PTR [edx+0x28]
  406df9:	int3   
  406dfa:	retf   
  406dfb:	push   ebp
  406dfc:	rcl    ebp,0x25
  406dff:	xchg   ecx,eax
  406e00:	ja     0x406e5e
  406e02:	lods   eax,DWORD PTR ds:[esi]
  406e03:	or     eax,0x96997081
  406e08:	rol    DWORD PTR [ebx+0x1a593413],0x26
  406e0f:	sbb    eax,0x81ad066b
  406e14:	xchg   esi,eax
  406e15:	sbb    DWORD PTR ds:0xdfbab53f,0x2c
  406e1c:	loop   0x406db6
  406e1e:	xchg   ebp,eax
  406e1f:	or     bl,BYTE PTR [esi-0x7a]
  406e22:	or     eax,0xfed2dbab
  406e27:	xor    eax,0x8e27c330
  406e2c:	nop    DWORD PTR [ecx]
  406e2f:	mov    eax,ds:0x63fb9344
  406e34:	or     edx,DWORD PTR [ebp+0x1cd1768c]
  406e3a:	pop    es
  406e3b:	stc    
  406e3c:	jo     0x406e1c
  406e3e:	inc    ebp
  406e40:	sbb    bh,BYTE PTR [esi+esi*1-0x5f335e5f]
  406e47:	sub    eax,ebp
  406e49:	cld    
  406e4a:	rol    bl,cl
  406e4c:	repz pop ds
  406e4e:	xor    BYTE PTR [edi+0x2b2959f3],bh
  406e54:	dec    ebp
  406e55:	sub    al,0xce
  406e57:	jl     0x406e4f
  406e59:	sahf   
  406e5a:	mov    DWORD PTR [esi-0x5f796dcb],0xc93bba0f
  406e64:	push   0x242bbb93
  406e69:	aaa    
  406e6a:	adc    DWORD PTR [edi-0x1d],ebp
  406e6d:	pop    ss
  406e6e:	sbb    DWORD PTR [edi],edi
  406e70:	adc    al,0x78
  406e72:	or     esp,esp
  406e74:	test   DWORD PTR [edi],eax
  406e76:	mov    esp,0xa9fc720f
  406e7b:	xor    ebp,DWORD PTR [edi-0x25]
  406e7e:	ja     0x406e73
  406e80:	push   DWORD PTR [edi+eiz*4]
  406e83:	(bad)  
  406e84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e85:	in     al,dx
  406e86:	rcl    BYTE PTR [eax],cl
  406e88:	in     al,dx
  406e89:	dec    edi
  406e8a:	hlt    
  406e8b:	dec    edx
  406e8c:	(bad)  
  406e8d:	aad    0x8e
  406e8f:	sbb    BYTE PTR [ebx+0x2727f05f],bh
  406e95:	mov    ecx,0x8ba793bd
  406e9a:	xchg   ecx,eax
  406e9b:	shl    ebp,0x4
  406e9e:	add    ebp,esp
  406ea0:	pextrw esi,(bad),0xc5
  406ea2:	mov    ah,0x88
  406ea4:	add    bl,dh
  406ea6:	retf   
  406ea7:	pop    eax
  406ea8:	xchg   esp,eax
  406ea9:	leave  
  406eaa:	mov    edi,0xe69e1dc4
  406eaf:	mov    dh,0x5c
  406eb1:	out    dx,al
  406eb2:	pop    es
  406eb3:	jb     0x406e77
  406eb5:	sar    DWORD PTR [edi-0x4b71e49f],1
  406ebb:	hlt    
  406ebc:	push   edi
  406ebd:	jp     0x406ec6
  406ebf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ec0:	les    esp,FWORD PTR [edi-0x39]
  406ec3:	sahf   
  406ec4:	ret    0x692c
  406ec7:	push   ss
  406ec8:	inc    edi
  406ec9:	inc    edi
  406eca:	fdiv   st,st(7)
  406ecc:	sbb    BYTE PTR [ebx+0x3c],0xa4
  406ed0:	sbb    al,0x2c
  406ed2:	pushf  
  406ed3:	fld    TBYTE PTR [ecx]
  406ed5:	imul   eax,DWORD PTR [ecx],0xffffff8f
  406ed8:	jmp    0x406f16
  406eda:	repnz xchg ebx,ebx
  406edd:	scas   al,BYTE PTR es:[edi]
  406ede:	xor    dl,BYTE PTR [ebp-0x200e1f7f]
  406ee4:	mov    BYTE PTR [ebx+edi*2-0x50e74c71],ch
  406eeb:	imul   ecx,edx,0xed8f9b3c
  406ef1:	adc    eax,0x34918590
  406ef6:	in     al,dx
  406ef7:	cmp    al,0xf4
  406ef9:	xchg   edx,eax
  406efa:	add    ebp,DWORD PTR [esi+0x5b]
  406efd:	ins    BYTE PTR es:[edi],dx
  406efe:	dec    esp
  406eff:	leave  
  406f00:	aas    
  406f01:	jae    0x406eaf
  406f03:	jae    0x406f76
  406f05:	fldenv [esi-0x79]
  406f08:	and    BYTE PTR [ebx-0x1],0x68
  406f0c:	add    edi,0xffffffb2
  406f0f:	(bad)  
  406f10:	(bad)  
  406f11:	jg     0x406f0f
  406f13:	js     0x406f10
  406f15:	(bad)  
  406f16:	push   edx
  406f17:	jg     0x406f62
  406f19:	mov    dl,0x4a
  406f1b:	fcmovbe st,st(5)
  406f1d:	rcr    DWORD PTR [edi-0x34],cl
  406f20:	jb     0x406efd
  406f22:	outs   dx,DWORD PTR ds:[esi]
  406f24:	push   ecx
  406f25:	and    DWORD PTR [ecx-0x40],ebp
  406f28:	test   eax,0xdf959964
  406f2d:	sti    
  406f2e:	pusha  
  406f2f:	sbb    eax,0xc68a1dd
  406f34:	inc    ecx
  406f35:	push   0xffffff93
  406f37:	lds    edx,FWORD PTR [edi]
  406f39:	cmp    eax,0xef01851b
  406f3e:	mov    al,ds:0x8362c5c
  406f43:	outs   dx,BYTE PTR ds:[esi]
  406f44:	cli    
  406f45:	repz es adc DWORD PTR ds:[eax-0x38],0x3f4770bf
  406f4f:	push   ebp
  406f50:	enter  0x21af,0xa7
  406f54:	jbe    0x406f1d
  406f56:	fadd   QWORD PTR [ecx]
  406f58:	sub    dl,cl
  406f5a:	xor    bh,BYTE PTR [esi+0x47]
  406f5d:	push   ecx
  406f5e:	and    bh,BYTE PTR [eax-0x2c]
  406f61:	leave  
  406f62:	js     0x406f12
  406f64:	adc    al,0x13
  406f66:	xor    BYTE PTR [ebp+eax*8-0x6],bh
  406f6a:	into   
  406f6b:	hlt    
  406f6c:	aam    0xcd
  406f6e:	add    dl,BYTE PTR [eax]
  406f70:	ins    DWORD PTR es:[edi],dx
  406f71:	cli    
  406f72:	cmp    dl,BYTE PTR [edx-0x492c9316]
  406f78:	xor    dh,bh
  406f7a:	xor    BYTE PTR ds:0x6b9e4612,dh
  406f80:	(bad)  
  406f81:	add    BYTE PTR [esi-0x63d2433b],dl
  406f87:	sub    BYTE PTR [ecx+edx*4+0x50ab3c25],ch
  406f8e:	and    edx,DWORD PTR [ecx]
  406f90:	or     edx,DWORD PTR [edi+0x5a]
  406f93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f94:	jo     0x406f84
  406f96:	xor    al,0xca
  406f98:	xchg   DWORD PTR [edx+0x1a10ec8e],esi
  406f9e:	sub    DWORD PTR fs:[edx+0x6ccfdda4],0x4f
  406fa6:	ins    DWORD PTR es:[edi],dx
  406fa7:	ins    DWORD PTR es:[edi],dx
  406fa8:	ja     0x406ff1
  406faa:	cmp    edi,DWORD PTR [edx+ecx*2]
  406fad:	or     al,0x23
  406faf:	pop    eax
  406fb0:	lods   eax,DWORD PTR ds:[esi]
  406fb1:	or     eax,0x6d3af491
  406fb6:	push   esp
  406fb7:	sbb    eax,0x6e98803d
  406fbc:	lds    ebx,FWORD PTR [edx-0x56]
  406fbf:	adc    BYTE PTR [eax+edi*2-0x2dfe292f],bh
  406fc6:	ss jno 0x407033
  406fc9:	cli    
  406fca:	jmp    0x7fdfcbfd
  406fcf:	call   0x36f:0xf5b5eef3
  406fd6:	repnz out 0x4e,eax
  406fd9:	inc    eax
  406fda:	push   0x6dd033b
  406fdf:	mov    ah,BYTE PTR [edx]
  406fe1:	lods   al,BYTE PTR ds:[esi]
  406fe2:	push   cs
  406fe3:	mov    ah,0x8c
  406fe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fe6:	sbb    bl,BYTE PTR [ecx]
  406fe8:	adc    al,0x6f
  406fea:	jb     0x406f88
  406fec:	int    0x52
  406fee:	dec    esp
  406fef:	das    
  406ff0:	mov    bh,0x47
  406ff2:	into   
  406ff3:	cmp    ecx,esp
  406ff5:	imul   edx,DWORD PTR [ebx-0x6cba01a2],0xffffff9b
  406ffc:	adc    al,0x3
  406ffe:	mov    BYTE PTR [edi+0x0],cl
  407001:	fidiv  WORD PTR [ebx-0x6d420197]
  407007:	sti    
  407008:	sub    eax,0x32e2114b
  40700d:	add    BYTE PTR [ecx],0xc6
  407010:	sbb    ebx,edi
  407012:	nop
  407013:	dec    eax
  407014:	lods   eax,DWORD PTR ds:[esi]
  407015:	xchg   ebp,eax
  407016:	not    DWORD PTR [ebx]
  407018:	ret    
  407019:	dec    esi
  40701a:	pop    ss
  40701b:	stos   DWORD PTR es:[edi],eax
  40701c:	out    0x54,al
  40701e:	nop
  40701f:	push   edx
  407020:	sub    ah,dh
  407022:	jecxz  0x40705f
  407024:	mov    ch,BYTE PTR [ebx]
  407026:	jmp    0x40709b
  407028:	mov    al,ds:0x1c56d20b
  40702d:	cmp    eax,0xd0150643
  407032:	and    dl,BYTE PTR [esi-0x59]
  407035:	push   ds
  407036:	stc    
  407037:	div    DWORD PTR [esi-0x18]
  40703a:	pop    ss
  40703b:	add    BYTE PTR [edi+0x2f665eea],0x62
  407042:	jmp    0xf444:0x440a7039
  407049:	jns    0x406fff
  40704b:	bound  edx,QWORD PTR [esi-0x3b]
  40704e:	push   cs
  40704f:	sti    
  407050:	sub    al,0x38
  407052:	ja     0x40702e
  407054:	lds    ebp,FWORD PTR [edi+0x21]
  407057:	push   ebx
  407058:	(bad)  
  407059:	inc    ebx
  40705a:	int    0xb5
  40705c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40705d:	xchg   ah,cl
  40705f:	imul   ebp,DWORD PTR [edx+edi*2],0xffffffcb
  407063:	stc    
  407064:	inc    esp
  407065:	pop    es
  407066:	add    BYTE PTR [eax-0x31],bh
  407069:	xchg   ebx,eax
  40706a:	fsub   QWORD PTR [ebx+0x7d62c819]
  407070:	push   ss
  407071:	pop    esp
  407072:	popa   
  407073:	je     0x407056
  407075:	aad    0x34
  407077:	data16 loopne 0x4070c2
  40707a:	mov    dh,0x29
  40707c:	loopne 0x407068
  40707e:	xchg   esp,eax
  40707f:	and    esi,DWORD PTR [eax+0x50]
  407082:	mov    bh,0xe6
  407084:	push   0xffffff89
  407086:	sub    DWORD PTR [ecx],0xeaa9d1cc
  40708c:	(bad)  
  40708d:	xchg   ebp,eax
  40708e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40708f:	lds    ecx,FWORD PTR [eax+esi*8]
  407092:	stos   BYTE PTR es:[edi],al
  407093:	pop    ds
  407094:	ja     0x40710f
  407096:	adc    DWORD PTR [esi-0x37b29fd2],esp
  40709c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40709d:	xchg   edx,eax
  40709e:	or     BYTE PTR [eax-0x5ec00d47],al
  4070a4:	gs cli 
  4070a6:	jnp    0x4070ee
  4070a8:	push   cs
  4070a9:	xchg   esi,eax
  4070aa:	add    eax,0x122430ee
  4070af:	mov    ebp,0x6bced0bc
  4070b4:	xchg   ebx,eax
  4070b5:	retf   0x8559
  4070b8:	in     al,0xa9
  4070ba:	and    eax,DWORD PTR [edi+0x6b]
  4070bd:	call   0x1d43de6d
  4070c2:	push   0x4b
  4070c4:	jecxz  0x407138
  4070c6:	xlat   BYTE PTR ds:[ebx]
  4070c7:	adc    DWORD PTR [ecx-0x6d],0x69
  4070cb:	add    ecx,DWORD PTR [edx+0x48594f14]
  4070d1:	std    
  4070d2:	lds    esp,FWORD PTR [ebx+eiz*1+0xf78a885]
  4070d9:	(bad)  [esi+0x1195706d]
  4070df:	inc    edx
  4070e0:	push   ebp
  4070e1:	jle    0x4070a9
  4070e3:	and    eax,0x82899922
  4070e8:	xchg   ecx,eax
  4070e9:	ds rcr BYTE PTR ds:[ebp+0x59],cl
  4070ee:	enter  0xf074,0xcb
  4070f2:	jecxz  0x4070e7
  4070f4:	push   esi
  4070f5:	scas   al,BYTE PTR es:[edi]
  4070f6:	mov    edi,0x6fe1818e
  4070fb:	sbb    BYTE PTR [esi+0x1],cl
  4070fe:	inc    ecx
  4070ff:	dec    ebp
  407100:	mov    ds,WORD PTR [edi]
  407102:	imul   ecx,ecx,0x36ee05e
  407108:	add    DWORD PTR [ebx+ebp*2+0x3073eede],edx
  40710f:	leave  
  407110:	dec    ebx
  407111:	test   al,0x61
  407113:	fmulp  st(6),st
  407115:	dec    eax
  407116:	in     eax,0x40
  407118:	xchg   ebx,eax
  407119:	ins    BYTE PTR es:[edi],dx
  40711a:	int3   
  40711b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40711c:	les    eax,FWORD PTR [ecx-0x70]
  40711f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407120:	pop    es
  407121:	ja     0x4070e7
  407123:	mov    edi,0x1055d796
  407128:	aad    0x16
  40712a:	xor    ch,ch
  40712c:	repnz mov al,0x36
  40712f:	fadd   QWORD PTR [ebp+0x6]
  407132:	mov    ch,0x4f
  407134:	pop    es
  407135:	cs sti 
  407137:	popa   
  407138:	jb     0x407183
  40713a:	xchg   ecx,eax
  40713b:	dec    esi
  40713c:	and    DWORD PTR [ecx-0x58],0x8df98866
  407143:	sub    ebx,DWORD PTR [esi]
  407145:	add    eax,0xf574a83e
  40714a:	lea    esp,[esi+0x1b]
  40714d:	sbb    eax,0xdb58cf85
  407152:	(bad)  [edi+0x63db3bc9]
  407158:	push   eax
  407159:	adc    eax,0x5175da68
  40715e:	ja     0x4071c6
  407160:	fisub  WORD PTR [ecx]
  407162:	xlat   BYTE PTR ds:[ebx]
  407163:	loop   0x40712a
  407165:	call   0x7f27:0xc0ae9b69
  40716c:	test   DWORD PTR [edi],0x424b584e
  407172:	add    ebp,DWORD PTR [esi-0xe731f5]
  407178:	lods   eax,DWORD PTR ds:[esi]
  407179:	call   0x9614:0xd9827fcd
  407180:	adc    eax,0xb2539e6d
  407185:	adc    edx,DWORD PTR [edx+0x49d939ce]
  40718b:	fdivr  st(6),st
  40718d:	dec    esi
  40718e:	les    ebx,FWORD PTR [edi-0x6a]
  407191:	je     0x407116
  407193:	leave  
  407194:	shr    ebx,0xcf
  407197:	add    edx,ebx
  407199:	ins    BYTE PTR es:[edi],dx
  40719a:	test   al,0x7a
  40719c:	jmp    0x407173
  40719e:	dec    ecx
  40719f:	rol    cl,cl
  4071a1:	test   DWORD PTR [ebx],0x8505dc7f
  4071a7:	sbb    DWORD PTR [ecx],ecx
  4071a9:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071ab:	mov    edi,0x63825ae0
  4071b0:	ins    DWORD PTR es:[edi],dx
  4071b1:	xrelease xchg BYTE PTR [ebx-0x2fd05b67],ch
  4071b8:	out    dx,eax
  4071b9:	inc    esi
  4071ba:	popa   
  4071bb:	into   
  4071bc:	jmp    0x6374434e
  4071c1:	lods   al,BYTE PTR ds:[esi]
  4071c2:	shl    DWORD PTR [edx],0xdf
  4071c5:	cmc    
  4071c6:	pushf  
  4071c7:	pop    ebx
  4071c8:	xchg   ecx,eax
  4071c9:	inc    ebp
  4071ca:	js     0x4071d7
  4071cc:	daa    
  4071cd:	in     eax,0xbe
  4071cf:	(bad)  
  4071d1:	jmp    0x60eba450
  4071d6:	mov    cl,0x17
  4071d8:	push   esp
  4071d9:	mov    al,0x2c
  4071db:	mov    ebp,0xcdb1987c
  4071e0:	jno    0x40722d
  4071e2:	jg     0x40722c
  4071e4:	add    BYTE PTR [ecx],dh
  4071e6:	lahf   
  4071e7:	icebp  
  4071e8:	or     ch,bl
  4071ea:	mov    BYTE PTR [eax-0x3f376a43],ah
  4071f0:	cmp    bh,BYTE PTR [edi-0x2f74ed7c]
  4071f6:	or     dh,BYTE PTR [edx+ecx*2-0x3c]
  4071fa:	pushf  
  4071fb:	ins    DWORD PTR es:[edi],dx
  4071fc:	nop
  4071fd:	cdq    
  4071fe:	xchg   ecx,eax
  4071ff:	sub    edx,edx
  407201:	pop    edx
  407202:	daa    
  407203:	and    DWORD PTR ss:[edx+0x50],ebx
  407207:	into   
  407208:	icebp  
  407209:	(bad)  
  40720a:	jmp    0x40726a
  40720c:	jle    0x40719b
  40720e:	add    al,0x1c
  407210:	jmp    0x7d49:0x71969d56
  407217:	rcr    BYTE PTR [ebp+0x709cf2b1],0x9a
  40721e:	lock pop edx
  407220:	js     0x407244
  407222:	mov    dl,0x84
  407224:	push   esp
  407225:	sbb    eax,0xe3d2ceb2
  40722a:	ds (bad) 
  40722c:	jne    0x40729f
  40722e:	pop    edi
  40722f:	push   ecx
  407230:	imul   edx,DWORD PTR [ebp-0x2f25fe6],0x1b
  407237:	nop
  407238:	and    al,BYTE PTR [edi+0x3f]
  40723b:	test   DWORD PTR ds:0x6899a5c0,0x1b45a270
  407245:	mov    eax,ds:0xb3c8a6a5
  40724a:	inc    edi
  40724b:	in     eax,dx
  40724c:	ficomp WORD PTR [edx]
  40724e:	sbb    DWORD PTR [edi-0x7f],edi
  407251:	mov    ecx,0x10e09e3d
  407256:	mov    dh,0x72
  407258:	mov    ebx,0xd0668a23
  40725d:	or     al,0xd8
  40725f:	adc    ecx,DWORD PTR [ebp-0x17982f3c]
  407265:	rol    BYTE PTR [edi],1
  407267:	cmp    dh,BYTE PTR [ecx+0x13]
  40726a:	rol    BYTE PTR [ebx+0x36],1
  40726d:	sbb    BYTE PTR [esi],ch
  40726f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407270:	in     al,dx
  407271:	inc    ebp
  407272:	push   edi
  407273:	xchg   ebp,eax
  407274:	adc    eax,0xbdc3ce5c
  407279:	mov    dl,0x6
  40727b:	das    
  40727c:	push   ds
  40727d:	inc    ebp
  40727e:	or     ebx,DWORD PTR [edx+0x45]
  407281:	(bad)  
  407282:	dec    esi
  407283:	sub    esi,DWORD PTR [ecx]
  407285:	inc    edi
  407286:	dec    esp
  407287:	add    DWORD PTR [esp+ecx*1+0x4cd41d31],ecx
  40728e:	shl    DWORD PTR [esi+0x543065fc],cl
  407294:	push   edx
  407295:	call   0x734d632f
  40729a:	jmp    0x407254
  40729c:	jo     0x407295
  40729e:	pop    esp
  40729f:	shr    DWORD PTR [ebx-0x6e],1
  4072a2:	pop    ss
  4072a3:	sti    
  4072a4:	out    0x89,al
  4072a6:	and    ah,BYTE PTR [eax]
  4072a8:	outs   dx,DWORD PTR ds:[esi]
  4072a9:	xor    edx,DWORD PTR [eax+0x0]
  4072ac:	xchg   edi,eax
  4072ad:	sub    ah,BYTE PTR [esi]
  4072af:	dec    esi
  4072b0:	call   0x3b3f:0xc0bc6a30
  4072b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072b8:	enter  0x2ce6,0xd2
  4072bc:	(bad)
  4072c1:	hlt    
  4072c2:	jecxz  0x4072d8
  4072c4:	cmp    BYTE PTR [ebx+0x89b1f8e],0xa5
  4072cb:	ret    0x9f5c
  4072ce:	ja     0x40726a
  4072d0:	or     esp,DWORD PTR [esi+0x3d]
  4072d3:	and    al,0x8c
  4072d5:	dec    esp
  4072d6:	aas    
  4072d7:	inc    DWORD PTR [ecx+edx*4]
  4072da:	stos   BYTE PTR es:[edi],al
  4072db:	out    0xa7,al
  4072dd:	inc    edi
  4072de:	lods   eax,DWORD PTR ds:[esi]
  4072df:	mov    BYTE PTR [edi+0x7e],ch
  4072e2:	jl     0x4072c4
  4072e4:	(bad)  
  4072e5:	fcmove st,st(4)
  4072e7:	xchg   BYTE PTR [ebx-0x5383baf1],dl
  4072ed:	(bad)  
  4072ee:	push   0x424ae896
  4072f3:	and    ah,dl
  4072f5:	add    edi,ebp
  4072f7:	arpl   sp,ax
  4072f9:	mov    ecx,0x7f072f10
  4072fe:	daa    
  4072ff:	retfw  0x50e8
  407303:	cmp    bh,ch
  407305:	test   al,0x3c
  407307:	mov    al,ds:0x96d9fa1b
  40730c:	std    
  40730d:	mov    edx,0xeb85083
  407312:	or     ch,BYTE PTR [esi+0x11]
  407315:	(bad)  
  407316:	jge    0x4072c8
  407318:	adc    DWORD PTR [esi+ebx*1-0xb9f36f4],ecx
  40731f:	gs pop ebp
  407321:	or     DWORD PTR [eax+0x33dc9de0],esi
  407327:	imul   edi,DWORD PTR [ecx],0xffffffbf
  40732a:	cmp    edx,edi
  40732c:	xlat   BYTE PTR ds:[ebx]
  40732d:	call   DWORD PTR [esi+0x12e89226]
  407333:	cs jnp 0x4072e0
  407336:	sub    esi,DWORD PTR [esi-0x61]
  407339:	push   es
  40733a:	data16 sbb BYTE PTR [eax+0x5d],cl
  40733e:	xchg   esp,eax
  40733f:	aad    0xb3
  407341:	lea    ecx,[edx-0x7f1071dc]
  407347:	leave  
  407348:	scas   eax,DWORD PTR es:[edi]
  407349:	xlat   BYTE PTR ds:[ebx]
  40734a:	pop    edx
  40734b:	adc    BYTE PTR [ecx-0xc],dl
  40734e:	or     BYTE PTR [ecx+0x6d],bl
  407351:	adc    BYTE PTR [ecx+eiz*8-0x2d],bl
  407355:	jmp    0x40731d
  407357:	mov    edx,0x94809092
  40735c:	sub    DWORD PTR [ebp+0x460093df],ecx
  407362:	sbb    al,0x48
  407364:	mov    gs,ecx
  407366:	and    esp,DWORD PTR [esi]
  407368:	add    ch,BYTE PTR [ecx-0x38d9b8a0]
  40736e:	mov    ecx,0x5892c919
  407373:	std    
  407374:	in     al,dx
  407375:	fdivr  DWORD PTR [ecx+esi*4-0x78]
  407379:	push   esp
  40737a:	push   eax
  40737b:	mov    DWORD PTR [ebx-0x22d26788],esi
  407381:	ret    0x4656
  407384:	out    dx,eax
  407385:	cmp    BYTE PTR [edi-0x4a],cl
  407388:	dec    esp
  407389:	jl     0x4073f5
  40738b:	(bad)  
  40738c:	aaa    
  40738d:	lahf   
  40738e:	or     bh,cl
  407390:	(bad)  
  407391:	cwde   
  407392:	fwait
  407393:	mov    edx,0x761e81c9
  407398:	mov    ah,0xb9
  40739a:	stos   BYTE PTR es:[di],al
  40739c:	sub    DWORD PTR [ecx+ebp*4-0x67b10a17],ebp
  4073a3:	and    dh,BYTE PTR [esi+esi*8-0x69bee708]
  4073aa:	scas   al,BYTE PTR es:[edi]
  4073ab:	inc    edi
  4073ac:	hlt    
  4073ad:	lods   al,BYTE PTR ds:[esi]
  4073ae:	jae    0x40742c
  4073b0:	dec    esi
  4073b1:	fcmovnu st,st(1)
  4073b3:	sbb    eax,0x804e0357
  4073b8:	fadd   QWORD PTR [esi+0x5c18e3da]
  4073be:	xchg   edx,eax
  4073bf:	outs   dx,BYTE PTR ds:[esi]
  4073c0:	loopne 0x407426
  4073c2:	fst    QWORD PTR [edx*8+0x52e33834]
  4073c9:	inc    eax
  4073ca:	shl    dl,0x1c
  4073cd:	mov    al,ds:0x63fd2c54
  4073d2:	pusha  
  4073d3:	ins    DWORD PTR es:[edi],dx
  4073d4:	iret   
  4073d5:	shl    BYTE PTR [ebp-0x2367518a],cl
  4073db:	lods   eax,DWORD PTR ds:[esi]
  4073dc:	ret    
  4073dd:	dec    edi
  4073de:	lea    esi,[ebx+0x6a1d64d9]
  4073e4:	inc    ebp
  4073e5:	sbb    eax,esp
  4073e7:	add    al,0x6f
  4073e9:	cdq    
  4073ea:	ds int 0xe
  4073ed:	mov    ebp,0xefaaadaa
  4073f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073f3:	cmp    al,0xb8
  4073f5:	popf   
  4073f6:	into   
  4073f7:	dec    ebp
  4073f8:	pop    edi
  4073f9:	ins    BYTE PTR es:[edi],dx
  4073fa:	mov    al,ds:0x1842cd4c
  4073ff:	ret    0xaf56
  407402:	pop    esi
  407403:	xchg   esp,eax
  407404:	pop    esp
  407405:	pop    es
  407406:	shr    DWORD PTR [ecx],1
  407408:	add    ecx,DWORD PTR [ecx]
  40740a:	mov    ch,0x2
  40740c:	push   ebp
  40740d:	fbld   TBYTE PTR [esi]
  40740f:	or     al,0x1
  407411:	inc    eax
  407412:	rol    DWORD PTR [ebx+0x4cc1726f],1
  407418:	mov    eax,0x4baca189
  40741d:	out    0x9d,al
  40741f:	ret    0x9230
  407422:	add    DWORD PTR [edi],ecx
  407424:	lea    edx,[eax-0x994366b]
  40742a:	nop
  40742b:	mov    WORD PTR [ecx-0x4ba1ecf3],?
  407431:	jo     0x407428
  407433:	lods   eax,DWORD PTR ds:[esi]
  407434:	fdivrp st(5),st
  407436:	add    eax,0x7b2ca054
  40743b:	jg     0x4074ad
  40743d:	dec    eax
  40743e:	sbb    eax,0xfb9c9921
  407443:	das    
  407444:	fcomi  st,st(0)
  407446:	pop    edx
  407447:	js     0x407497
  407449:	ins    DWORD PTR es:[edi],dx
  40744a:	sub    dl,cl
  40744c:	iret   
  40744d:	retf   
  40744e:	push   esp
  40744f:	aam    0x2b
  407451:	mov    ah,0xc7
  407453:	pop    esi
  407454:	in     eax,0x18
  407456:	arpl   WORD PTR [edx+ecx*8+0x52],cx
  40745a:	inc    esi
  40745b:	dec    ebp
  40745c:	(bad)  [si+0x7c]
  407460:	out    dx,al
  407461:	fwait
  407462:	cld    
  407463:	ins    DWORD PTR es:[edi],dx
  407464:	push   esp
  407465:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407467:	out    dx,al
  407468:	fadd   QWORD PTR [eax]
  40746a:	(bad)  
  40746b:	stos   BYTE PTR es:[edi],al
  40746c:	mov    esi,0xd831592e
  407471:	jno    0x40746e
  407473:	pop    edx
  407474:	pusha  
  407475:	or     dh,ch
  407477:	mul    cx
  40747a:	cwde   
  40747b:	lods   eax,DWORD PTR ds:[esi]
  40747c:	dec    esp
  40747d:	pop    ebx
  40747e:	arpl   WORD PTR [ebx+0x377d0b4b],dx
  407484:	outs   dx,BYTE PTR ds:[esi]
  407485:	mov    bl,0xfc
  407487:	or     DWORD PTR [ebp+0x76],ebx
  40748a:	push   ds
  40748b:	scas   al,BYTE PTR es:[edi]
  40748c:	hlt    
  40748d:	loop   0x40741a
  40748f:	jne    0x4074ac
  407491:	mov    esi,0xc2ac8386
  407496:	mov    ds:0xaa978373,eax
  40749b:	out    0x95,al
  40749d:	xchg   ebx,eax
  40749e:	icebp  
  40749f:	cs das 
  4074a1:	(bad)  
  4074a2:	mov    ch,0x4f
  4074a4:	xor    al,0x77
  4074a6:	inc    ecx
  4074a7:	push   cs
  4074a8:	mov    al,0x16
  4074aa:	add    BYTE PTR [ebx-0x48],dh
  4074ad:	mov    al,dl
  4074af:	mov    edi,0x17f26500
  4074b4:	push   ss
  4074b5:	cli    
  4074b6:	mov    bl,0x71
  4074b8:	leave  
  4074b9:	sti    
  4074ba:	sub    ah,BYTE PTR [eax+ebx*8]
  4074bd:	ror    DWORD PTR [eax+eiz*8],1
  4074c0:	mov    eax,ds:0x937f577f
  4074c5:	xchg   esp,eax
  4074c6:	xor    bh,BYTE PTR [edi+0x39e63bdd]
  4074cc:	xor    al,0x87
  4074ce:	loop   0x40752d
  4074d0:	pusha  
  4074d1:	adc    bh,BYTE PTR [edx-0x1eebd159]
  4074d7:	aad    0x37
  4074d9:	lds    si,DWORD PTR [esi+0x13]
  4074dd:	cmp    edi,DWORD PTR [esi+0x61cb23e4]
  4074e3:	dec    edi
  4074e4:	hlt    
  4074e5:	push   esp
  4074e6:	loop   0x4074ae
  4074e8:	or     DWORD PTR [eax],ebx
  4074ea:	sub    eax,0xdef9339a
  4074ef:	mov    ds:0x455a16f1,al
  4074f4:	mov    ebx,0x628bf68f
  4074f9:	push   ss
  4074fa:	push   ds
  4074fb:	jo     0x40753b
  4074fd:	mov    ah,0xe0
  4074ff:	jp     0x407523
  407501:	out    0xeb,al
  407503:	push   ebx
  407504:	inc    esp
  407505:	or     eax,0x207bf9cb
  40750a:	ins    DWORD PTR es:[edi],dx
  40750b:	lods   eax,DWORD PTR ds:[esi]
  40750c:	pop    ebx
  40750d:	xor    bh,BYTE PTR [ebx]
  40750f:	mov    ch,dh
  407511:	ss popf 
  407513:	add    eax,0x6d33e798
  407518:	int3   
  407519:	mov    ebx,0x2973abd0
  40751e:	mov    ds:0xc7c1a267,al
  407523:	je     0x4074b9
  407525:	xor    ch,BYTE PTR [edx+eax*2]
  407528:	and    bh,dh
  40752a:	add    BYTE PTR [ecx],bh
  40752c:	popa   
  40752d:	mov    ds:0x65d54e10,eax
  407532:	test   BYTE PTR [ebp+0x39a30343],cl
  407538:	test   al,0x75
  40753a:	xchg   ebx,eax
  40753b:	popa   
  40753c:	or     ecx,ebp
  40753e:	test   DWORD PTR [esi],ecx
  407540:	in     eax,0xa2
  407542:	shl    BYTE PTR [edx-0x7e],0x74
  407546:	imul   eax,DWORD PTR [ebx-0x1e],0xffffffd0
  40754a:	pop    edi
  40754b:	add    ecx,ecx
  40754d:	xor    esp,DWORD PTR [edi]
  40754f:	mov    esp,0xbde249e3
  407554:	movsx  ebp,BYTE PTR [edi+0x34]
  407558:	fsubr  QWORD PTR [ecx+ebp*4+0x616e85f5]
  40755f:	jg     0x407572
  407561:	jp     0x40754a
  407563:	rcr    BYTE PTR [ecx-0x6eb5fac8],1
  407569:	adc    cl,BYTE PTR [ebx]
  40756b:	pop    edi
  40756c:	(bad)  
  40756d:	aas    
  40756e:	push   cs
  40756f:	xor    esp,eax
  407571:	cmp    BYTE PTR [eax+0x66b2fe29],al
  407577:	and    bl,BYTE PTR [eax]
  407579:	adc    DWORD PTR ds:0x69153650,ebp
  40757f:	sbb    esi,DWORD PTR [edi]
  407581:	mov    ecx,0xe047156d
  407586:	outs   dx,BYTE PTR ds:[esi]
  407587:	mov    gs,WORD PTR [ebx+0xa]
  40758a:	pop    esp
  40758b:	adc    ebp,ebp
  40758d:	cdq    
  40758e:	xchg   ebx,eax
  40758f:	push   cs
  407590:	imul   BYTE PTR [edx-0x6f]
  407593:	mov    ebx,0xf9c95934
  407598:	adc    eax,0x96544556
  40759d:	push   es
  40759e:	sti    
  40759f:	out    dx,eax
  4075a0:	mov    al,ch
  4075a2:	pop    edi
  4075a3:	or     ebx,edi
  4075a5:	mov    ecx,DWORD PTR [edi-0x1f2254e5]
  4075ab:	add    esi,0x865488ca
  4075b1:	add    DWORD PTR [edi-0x11],eax
  4075b4:	adc    cl,0xa5
  4075b7:	jle    0x4075d3
  4075b9:	xchg   ecx,eax
  4075ba:	jne    0x407636
  4075bc:	out    0x70,eax
  4075be:	sub    esp,DWORD PTR [edx+0x3f2a5a21]
  4075c4:	scas   al,BYTE PTR es:[edi]
  4075c5:	or     edx,DWORD PTR [ebx+0xb]
  4075c8:	push   eax
  4075c9:	or     ecx,DWORD PTR [ecx+0x4b]
  4075cc:	out    0xee,eax
  4075ce:	(bad)  
  4075cf:	pop    eax
  4075d0:	nop    ebx
  4075d3:	or     al,BYTE PTR [eax+0x3a]
  4075d6:	jb     0x4075c0
  4075d8:	xor    BYTE PTR [ebp+edi*1-0x194072d4],cl
  4075df:	pop    eax
  4075e0:	mov    bl,0xbd
  4075e2:	push   ecx
  4075e3:	in     eax,dx
  4075e4:	(bad)  
  4075e5:	xor    al,al
  4075e7:	scas   al,BYTE PTR es:[edi]
  4075e8:	sbb    al,0x0
  4075ea:	gs xor eax,0xaf7fa57c
  4075f0:	mov    ah,0xd5
  4075f2:	mov    BYTE PTR [eax+0x3],al
  4075f5:	jnp    0x4075cf
  4075f7:	in     al,0x7b
  4075f9:	lea    ecx,[ebp+0x11]
  4075fc:	xchg   ah,al
  4075fe:	push   edi
  4075ff:	fwait
  407600:	outs   dx,DWORD PTR ds:[esi]
  407601:	add    esi,DWORD PTR [ecx+0x172c4dba]
  407607:	rcr    DWORD PTR [edx+esi*2-0x6a],cl
  40760b:	xchg   edx,eax
  40760c:	das    
  40760d:	hlt    
  40760e:	fcmovbe st,st(3)
  407610:	or     DWORD PTR gs:[ebx-0x50],ecx
  407614:	xchg   ebp,eax
  407615:	lock in al,dx
  407617:	les    ebp,FWORD PTR [ecx-0x7f9530d7]
  40761d:	and    BYTE PTR [edi-0x98c476f],0xc3
  407624:	cmp    eax,0x73ec899
  407629:	fs xor al,0xab
  40762c:	adc    cl,0x2e
  40762f:	outs   dx,DWORD PTR ds:[esi]
  407630:	(bad)  
  407631:	jmp    0x82ee:0x74323892
  407638:	rol    ecx,1
  40763a:	ins    DWORD PTR es:[edi],dx
  40763b:	sbb    al,0x72
  40763d:	adc    BYTE PTR [edx+eiz*2],0x65
  407641:	pop    ds
  407642:	rcr    DWORD PTR [eax-0xd],cl
  407645:	aaa    
  407646:	int    0x49
  407648:	jge    0x4075fa
  40764a:	mov    al,ds:0xd5440a5
  40764f:	lock pop ebx
  407651:	sub    dl,BYTE PTR [ecx+0x5dc5940c]
  407657:	push   ebx
  407658:	mov    eax,ds:0x602cc5ed
  40765d:	mov    ch,0xec
  40765f:	dec    ebp
  407660:	sbb    edx,DWORD PTR [ebx+0x10f7cd57]
  407666:	pushf  
  407667:	or     eax,0x3468e80f
  40766c:	add    al,0x0
  40766e:	add    BYTE PTR [ecx+0x4290180d],al
  407674:	add    BYTE PTR [eax+esi*4],dl
  407677:	inc    edx
  407678:	add    BYTE PTR [eax+0x65],ch
  40767b:	xchg   DWORD PTR [edi-0x68],esp
  40767e:	call   DWORD PTR ds:0x42ec63
  407684:	adc    eax,DWORD PTR ds:0x42d008
  40768a:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  407691:	add    DWORD PTR ds:0x429024,0x6cdb
  40769b:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4076a2:	neg    eax
  4076a4:	mov    eax,DWORD PTR [ebp-0x4]
  4076a7:	mov    esi,0x7510899
  4076ac:	dec    DWORD PTR ds:0x42c014
  4076b2:	xor    eax,esi
  4076b4:	and    DWORD PTR ds:0x42d010,ebx
  4076ba:	mov    edi,0x3272e0
  4076bf:	and    DWORD PTR ds:0x42c00c,0x622d
  4076c9:	add    eax,edi
  4076cb:	mov    DWORD PTR [ebp-0x1c],eax
  4076ce:	sub    DWORD PTR ds:0x42a008,ecx
  4076d4:	mov    eax,DWORD PTR [ebp+0x14]
  4076d7:	test   eax,eax
  4076d9:	je     0x407700
  4076df:	and    eax,DWORD PTR ds:0x42c010
  4076e5:	mov    eax,DWORD PTR [ebp+0x14]
  4076e8:	movzx  ebx,BYTE PTR ds:0x42a010
  4076ef:	sub    ebx,DWORD PTR ds:0x42b000
  4076f5:	mov    DWORD PTR ds:0x42a010,ebx
  4076fb:	mov    eax,DWORD PTR [eax]
  4076fd:	mov    DWORD PTR [ebp-0x1c],eax
  407700:	mov    eax,DWORD PTR [ebp-0x4]
  407703:	xor    DWORD PTR ds:0x42a01c,0x6981
  40770d:	xor    eax,esi
  40770f:	dec    ebx
  407710:	add    eax,edi
  407712:	sbb    ebx,0x28a0
  407718:	mov    DWORD PTR [ebp-0x8],eax
  40771b:	xor    eax,0x6e91
  407720:	mov    eax,DWORD PTR [ebp-0xc]
  407723:	neg    ebx
  407725:	xor    eax,esi
  407727:	and    DWORD PTR ds:0x429004,0x0
  407731:	jmp    0x407743
  407736:	mov    ebx,DWORD PTR ds:0x429004
  40773c:	inc    ebx
  40773d:	mov    DWORD PTR ds:0x429004,ebx
  407743:	cmp    DWORD PTR ds:0x429004,0x17
  40774a:	jae    0x40776d
  407750:	cmp    DWORD PTR ds:0x429004,0x22
  407757:	jne    0x407768
  40775d:	push   0x42d014
  407762:	call   DWORD PTR ds:0x42ec8b
  407768:	jmp    0x407736
  40776d:	add    eax,edi
  40776f:	mov    DWORD PTR [ebp-0x2c],eax
  407772:	mov    eax,DWORD PTR [ebp-0x4]
  407775:	adc    ebx,DWORD PTR ds:0x42c01c
  40777b:	xor    eax,esi
  40777d:	add    eax,edi
  40777f:	sbb    DWORD PTR ds:0x42c008,edi
  407785:	mov    DWORD PTR [ebp-0x38],eax
  407788:	and    DWORD PTR ds:0x42a000,0x0
  407792:	jmp    0x4077a2
  407797:	mov    eax,ds:0x42a000
  40779c:	inc    eax
  40779d:	mov    ds:0x42a000,eax
  4077a2:	cmp    DWORD PTR ds:0x42a000,0x1d
  4077a9:	jae    0x4077fc
  4077af:	cmp    DWORD PTR ds:0x42a000,0xc
  4077b6:	jne    0x4077d3
  4077bc:	push   0x27ff
  4077c1:	push   0x1
  4077c3:	push   0x42a000
  4077c8:	push   0x69ee
  4077cd:	call   DWORD PTR ds:0x42ec8f
  4077d3:	cmp    DWORD PTR ds:0x42a000,0xb
  4077da:	jne    0x4077eb
  4077e0:	mov    eax,ds:0x42a000
  4077e5:	inc    eax
  4077e6:	mov    ds:0x42a000,eax
  4077eb:	jmp    0x407797
  4077f0:	mov    ebx,DWORD PTR ds:0x42a004
  4077f6:	sbb    DWORD PTR ds:0x429004,ebx
  4077fc:	mov    ebx,DWORD PTR [ebp-0x4]
  4077ff:	xor    ebx,esi
  407801:	sbb    DWORD PTR ds:0x42900c,ebx
  407807:	add    ebx,edi
  407809:	mov    eax,DWORD PTR [ebp-0x2c]
  40780c:	add    DWORD PTR ds:0x42d004,0x19e2
  407816:	sub    eax,edi
  407818:	lea    ecx,[ebx-0x3272e0]
  40781e:	add    DWORD PTR ds:0x42a01c,0x7b3b
  407828:	xor    eax,esi
  40782a:	xor    DWORD PTR ds:0x42c01c,0x2532
  407834:	xor    ecx,esi
  407836:	mov    DWORD PTR ds:0x42b014,0x5b4d
  407840:	cmp    ecx,eax
  407842:	mov    DWORD PTR ds:0x42b008,0x5311
  40784c:	je     0x409eee
  407852:	mov    eax,ds:0x418f51
  407857:	mov    eax,DWORD PTR [eax]
  407859:	adc    DWORD PTR ds:0x429018,eax
  40785f:	mov    eax,DWORD PTR [ebp-0x4]
  407862:	adc    DWORD PTR ds:0x42d008,0x42a004
  40786c:	xor    eax,esi
  40786e:	adc    DWORD PTR ds:0x42a008,0x6af5
  407878:	add    eax,edi
  40787a:	cmp    ebx,eax
  40787c:	mov    DWORD PTR ds:0x42b008,0x1a7e
  407886:	jne    0x407b46
  40788c:	sub    DWORD PTR ds:0x42c008,0x42b00c
  407896:	push   DWORD PTR [ebp+0x8]
  407899:	xor    DWORD PTR ds:0x42c01c,0x42a018
  4078a3:	call   0x40514a
  4078a8:	mov    DWORD PTR ds:0x42a00c,0x1b
  4078b2:	cmp    DWORD PTR ds:0x42a00c,0x0
  4078b9:	je     0x407906
  4078bf:	cmp    DWORD PTR ds:0x42a00c,0xa
  4078c6:	jne    0x4078d2
  4078cc:	call   DWORD PTR ds:0x42ec93
  4078d2:	cmp    DWORD PTR ds:0x42a00c,0xb
  4078d9:	jne    0x4078ee
  4078df:	xor    ecx,ecx
  4078e1:	xor    ecx,DWORD PTR ds:0x42a00c
  4078e7:	dec    ecx
  4078e8:	mov    DWORD PTR ds:0x42a00c,ecx
  4078ee:	mov    ecx,DWORD PTR ds:0x42a00c
  4078f4:	dec    ecx
  4078f5:	mov    DWORD PTR ds:0x42a00c,ecx
  4078fb:	jmp    0x4078b2
  407900:	or     ecx,0x1d45
  407906:	mov    DWORD PTR [ebp-0x14],eax
  407909:	mov    eax,DWORD PTR [ebp-0x4]
  40790c:	mov    ecx,DWORD PTR [ebp-0x14]
  40790f:	xor    eax,esi
  407911:	dec    DWORD PTR ds:0x42901c
  407917:	add    eax,edi
  407919:	cmp    ecx,eax
  40791b:	je     0x40c2de
  407921:	and    DWORD PTR ds:0x42c000,0x7708
  40792b:	push   DWORD PTR [ebp-0x14]
  40792e:	push   DWORD PTR [ebp+0x8]
  407931:	xor    DWORD PTR ds:0x42a018,0x429008
  40793b:	call   0x40f0e2
  407940:	mov    DWORD PTR [ebp-0x14],eax
  407943:	and    DWORD PTR ds:0x429018,0x0
  40794d:	mov    eax,ds:0x429018
  407952:	inc    eax
  407953:	mov    ds:0x429018,eax
  407958:	cmp    DWORD PTR ds:0x429018,0x1e
  40795f:	jne    0x407987
  407965:	push   0x6c13
  40796a:	push   0x42d014
  40796f:	push   DWORD PTR [ebp-0x1c]
  407972:	push   0x4b90
  407977:	push   0x1e8a
  40797c:	push   0x4e24
  407981:	call   DWORD PTR ds:0x42ec97
  407987:	cmp    DWORD PTR ds:0x429018,0x14
  40798e:	jb     0x40794d
  407994:	mov    eax,DWORD PTR [ebp-0x4]
  407997:	mov    ecx,DWORD PTR [ebp-0x14]
  40799a:	xor    eax,esi
  40799c:	add    eax,edi
  40799e:	cmp    ecx,eax
  4079a0:	je     0x40c2de
  4079a6:	mov    DWORD PTR ds:0x42a008,0x19
  4079b0:	cmp    DWORD PTR ds:0x42a008,0x0
  4079b7:	je     0x4079e6
  4079bd:	cmp    DWORD PTR ds:0x42a008,0x24
  4079c4:	jne    0x4079d0
  4079ca:	call   DWORD PTR ds:0x42ec9b
  4079d0:	mov    eax,ds:0x42a008
  4079d5:	dec    eax
  4079d6:	mov    ds:0x42a008,eax
  4079db:	jmp    0x4079b0
  4079e0:	or     ecx,DWORD PTR ds:0x42b00c
  4079e6:	mov    eax,DWORD PTR [ebp-0x14]
  4079e9:	and    DWORD PTR ds:0x429000,0x0
  4079f3:	jmp    0x407a07
  4079f8:	xor    ecx,ecx
  4079fa:	or     ecx,DWORD PTR ds:0x429000
  407a00:	inc    ecx
  407a01:	mov    DWORD PTR ds:0x429000,ecx
  407a07:	cmp    DWORD PTR ds:0x429000,0x14
  407a0e:	jae    0x407a3d
  407a14:	cmp    DWORD PTR ds:0x429000,0x18
  407a1b:	jne    0x407a32
  407a21:	push   DWORD PTR [ebp-0x18]
  407a24:	push   0x42d000
  407a29:	push   DWORD PTR [ebp-0x1c]
  407a2c:	call   DWORD PTR ds:0x42ec9f
  407a32:	jmp    0x4079f8
  407a37:	xor    DWORD PTR ds:0x42b00c,ecx
  407a3d:	mov    eax,DWORD PTR [eax+0x18]
  407a40:	mov    DWORD PTR [ebp-0x2c],eax
  407a43:	mov    ecx,DWORD PTR ds:0x418f4d
  407a49:	mov    eax,ds:0x418f65
  407a4e:	sub    eax,ecx
  407a50:	and    ecx,DWORD PTR [ecx+eax*1]
  407a53:	mov    eax,DWORD PTR [ebp-0x14]
  407a56:	mov    ecx,DWORD PTR [ebp+0x8]
  407a59:	add    ecx,DWORD PTR [eax+0x20]
  407a5c:	mov    DWORD PTR ds:0x429014,0x11
  407a66:	cmp    DWORD PTR ds:0x429014,0x0
  407a6d:	je     0x407ac8
  407a73:	cmp    DWORD PTR ds:0x429014,0x9
  407a7a:	jne    0x407a93
  407a80:	push   0x42e127
  407a85:	push   0x42e111
  407a8a:	push   DWORD PTR [ebp-0x20]
  407a8d:	call   DWORD PTR ds:0x42eca7
  407a93:	cmp    DWORD PTR ds:0x429014,0xa
  407a9a:	jne    0x407aab
  407aa0:	mov    eax,ds:0x429014
  407aa5:	dec    eax
  407aa6:	mov    ds:0x429014,eax
  407aab:	xor    eax,eax
  407aad:	or     eax,DWORD PTR ds:0x429014
  407ab3:	dec    eax
  407ab4:	mov    ds:0x429014,eax
  407ab9:	jmp    0x407a66
  407abe:	and    DWORD PTR ds:0x42d000,0x2b86
  407ac8:	mov    DWORD PTR [ebp-0x34],ecx
  407acb:	xor    DWORD PTR ds:0x42a00c,edx
  407ad1:	mov    eax,DWORD PTR [ebp-0x14]
  407ad4:	and    DWORD PTR ds:0x429018,0x0
  407ade:	xor    ecx,ecx
  407ae0:	or     ecx,DWORD PTR ds:0x429018
  407ae6:	inc    ecx
  407ae7:	mov    DWORD PTR ds:0x429018,ecx
  407aed:	cmp    DWORD PTR ds:0x429018,0xa
  407af4:	jne    0x407b05
  407afa:	push   0x42e139
  407aff:	call   DWORD PTR ds:0x42ecab
  407b05:	cmp    DWORD PTR ds:0x429018,0x9
  407b0c:	jne    0x407b1f
  407b12:	mov    ecx,DWORD PTR ds:0x429018
  407b18:	inc    ecx
  407b19:	mov    DWORD PTR ds:0x429018,ecx
  407b1f:	cmp    DWORD PTR ds:0x429018,0x1e
  407b26:	jb     0x407ade
  407b2c:	mov    ecx,DWORD PTR [ebp+0x8]
  407b2f:	add    ecx,DWORD PTR [eax+0x24]
  407b32:	mov    DWORD PTR [ebp-0x3c],ecx
  407b35:	mov    eax,DWORD PTR [ebp-0x14]
  407b38:	mov    ecx,DWORD PTR [ebp+0x8]
  407b3b:	add    ecx,DWORD PTR [eax+0x1c]
  407b3e:	mov    DWORD PTR [ebp-0x14],ecx
  407b41:	jmp    0x409f21
  407b46:	mov    eax,DWORD PTR [ebp-0x34]
  407b49:	mov    ecx,DWORD PTR [ebp+0x8]
  407b4c:	add    ecx,DWORD PTR [eax+ebx*4]
  407b4f:	mov    DWORD PTR [ebp-0x30],ecx
  407b52:	mov    eax,DWORD PTR [ebp-0x4]
  407b55:	jmp    0x409eda
  407b5a:	icebp  
  407b5b:	pop    ebx
  407b5c:	call   DWORD PTR [edx-0x4408697d]
  407b62:	das    
  407b63:	sbb    DWORD PTR [eax],ecx
  407b65:	mov    bl,0xf
  407b67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b68:	xchg   BYTE PTR [eax],dl
  407b6a:	stos   BYTE PTR es:[edi],al
  407b6b:	cmp    al,0x7a
  407b6d:	jp     0x407b71
  407b6f:	pop    edi
  407b70:	jp     0x407bec
  407b72:	inc    esi
  407b73:	mov    dh,0x7f
  407b75:	jecxz  0x407b88
  407b77:	xchg   edx,eax
  407b78:	iret   
  407b79:	push   ds
  407b7a:	xor    BYTE PTR [edi+0x5bad9178],ch
  407b80:	jb     0x407b54
  407b82:	arpl   WORD PTR [eax+0x4646bbd2],bp
  407b88:	inc    ebp
  407b89:	cmp    al,0x81
  407b8b:	outs   dx,DWORD PTR ds:[esi]
  407b8c:	repnz or BYTE PTR [edx+eax*4+0x4696f410],0x70
  407b95:	inc    esi
  407b96:	inc    ebx
  407b97:	cli    
  407b98:	jbe    0x407b32
  407b9a:	gs mov esp,0xae56b1c8
  407ba0:	adc    al,0x7d
  407ba2:	out    0x24,eax
  407ba4:	ror    DWORD PTR [ebx-0x2a],0x75
  407ba8:	dec    ebx
  407ba9:	and    DWORD PTR es:[ecx+0x1a],eax
  407bad:	jae    0x407bf1
  407baf:	inc    esp
  407bb0:	mov    bh,0xd5
  407bb2:	pushf  
  407bb3:	lea    eax,[ecx+0x13223031]
  407bb9:	add    BYTE PTR [eax-0x10349180],al
  407bbf:	jl     0x407bc8
  407bc1:	and    ch,BYTE PTR [eax-0x3ac6cb7f]
  407bc7:	fcomp  DWORD PTR ds:0x6e37b844
  407bcd:	ficomp DWORD PTR [ebx]
  407bcf:	call   FWORD PTR [ebx-0x6607a93c]
  407bd5:	mov    WORD PTR [esi-0x51],ds
  407bd8:	mov    DWORD PTR fs:[ebx+0x5c],ebp
  407bdc:	js     0x407b8e
  407bde:	in     al,0x3b
  407be0:	mov    esp,DWORD PTR [esi]
  407be2:	rcl    DWORD PTR [edx-0x4a],cl
  407be5:	sub    eax,0x4f4922f4
  407bea:	push   ebx
  407beb:	(bad)  
  407bec:	repnz sub BYTE PTR [eax],ah
  407bef:	dec    esp
  407bf0:	ror    ebx,cl
  407bf2:	jp     0x407c1f
  407bf4:	je     0x407b95
  407bf6:	shr    dl,1
  407bf8:	ja     0x407bab
  407bfa:	jae    0x407bca
  407bfc:	fdiv   QWORD PTR ds:0xb6b61f30
  407c02:	fidiv  DWORD PTR [eax]
  407c04:	or     DWORD PTR [esi-0x29],0xf7f448fa
  407c0b:	adc    DWORD PTR [edx],0xd53c91f2
  407c11:	dec    edx
  407c12:	cmp    esi,esp
  407c14:	fld    QWORD PTR [eax+0x45]
  407c17:	aas    
  407c18:	and    BYTE PTR [eax-0x5],0x1c
  407c1c:	sbb    al,0xc5
  407c1e:	mov    dl,0x88
  407c20:	mov    ds:0xca5f3f3b,al
  407c25:	jp     0x407c33
  407c27:	and    DWORD PTR [eax],0xaa1b2e69
  407c2d:	xchg   ebx,eax
  407c2e:	sub    edi,DWORD PTR [ecx-0xa0b9f5a]
  407c34:	xor    edx,0x8cb14d90
  407c3a:	sub    BYTE PTR [eax-0xc],dl
  407c3d:	or     eax,DWORD PTR [ebx]
  407c3f:	jae    0x407c4c
  407c41:	xor    al,0xaa
  407c43:	cmp    al,0xb
  407c45:	pop    esi
  407c46:	adc    BYTE PTR [edx-0x286c7323],bh
  407c4c:	out    dx,eax
  407c4d:	inc    edi
  407c4e:	das    
  407c4f:	dec    esp
  407c50:	fs or  ah,dh
  407c53:	jno    0x407bdd
  407c55:	in     al,0x4a
  407c57:	mov    al,ds:0xab4e5492
  407c5c:	int    0x76
  407c5e:	mov    BYTE PTR [esi+0x57],cl
  407c61:	jnp    0x407c86
  407c63:	or     BYTE PTR [ecx-0x7c],dh
  407c66:	stc    
  407c67:	icebp  
  407c68:	popa   
  407c69:	aad    0xa1
  407c6b:	add    BYTE PTR [ecx+esi*1+0x53],dh
  407c6f:	popa   
  407c70:	loope  0x407cc7
  407c72:	and    al,0xa8
  407c74:	out    0x97,eax
  407c76:	fld    DWORD PTR [ebx-0x38]
  407c79:	sti    
  407c7a:	jmp    0x7a4f8070
  407c7f:	add    ebp,DWORD PTR [ebp+0x698f4be7]
  407c85:	push   ebx
  407c86:	inc    esi
  407c87:	pop    edi
  407c88:	retf   
  407c89:	xchg   ebp,eax
  407c8a:	push   es
  407c8b:	push   ecx
  407c8c:	cmp    al,0xb4
  407c8e:	sbb    bh,dh
  407c90:	std    
  407c91:	mov    esp,0xa52603fd
  407c96:	push   0x552b7401
  407c9b:	idiv   BYTE PTR [esi]
  407c9d:	jp     0x407cb4
  407c9f:	xchg   ebx,eax
  407ca0:	(bad)  
  407ca1:	mov    eax,ds:0x8de173e6
  407ca6:	lea    edi,[ecx+0x52]
  407ca9:	sbb    eax,0x3c978476
  407cae:	jae    0x407cc3
  407cb0:	stos   DWORD PTR es:[edi],eax
  407cb1:	in     eax,0xca
  407cb3:	xor    bl,BYTE PTR [ebx+0x4d]
  407cb6:	adc    eax,0xcc7f456d
  407cbb:	loopne 0x407cc8
  407cbd:	lahf   
  407cbe:	jbe    0x407cbd
  407cc0:	cld    
  407cc1:	je     0x407d34
  407cc3:	add    dl,BYTE PTR [esi-0x1f]
  407cc6:	into   
  407cc7:	inc    edi
  407cc8:	into   
  407cc9:	jbe    0x407c80
  407ccb:	or     DWORD PTR [ebp-0x45af88c5],ebx
  407cd1:	rcl    BYTE PTR [eax],cl
  407cd3:	sub    BYTE PTR fs:[ebx-0x1e782bd2],dl
  407cda:	shl    BYTE PTR [edi-0x71],cl
  407cdd:	mov    esi,0x91e4af2c
  407ce2:	cmp    al,0x37
  407ce4:	cld    
  407ce5:	dec    eax
  407ce6:	cmp    al,0x83
  407ce8:	leave  
  407ce9:	in     eax,dx
  407cea:	mov    ds:0xda9e1eda,al
  407cef:	dec    ebx
  407cf0:	imul   esi,DWORD PTR [esi+0x7a70080f],0xaea32e94
  407cfa:	adc    esp,DWORD PTR [ebx-0x17f914a3]
  407d00:	adc    DWORD PTR [edi-0x502dd49f],eax
  407d06:	xlat   BYTE PTR ds:[ebx]
  407d07:	ret    
  407d08:	sbb    dh,ch
  407d0a:	add    eax,0xe8990eba
  407d0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d10:	sbb    DWORD PTR [ecx],esi
  407d12:	icebp  
  407d13:	mov    WORD PTR [edi-0x56cb1cf6],fs
  407d19:	add    al,0x16
  407d1b:	repnz mov eax,0xf533578d
  407d21:	mov    ah,0xaa
  407d23:	(bad)  
  407d24:	daa    
  407d25:	int    0x89
  407d27:	or     edi,ebp
  407d29:	icebp  
  407d2a:	clc    
  407d2b:	and    al,BYTE PTR [eax-0x15]
  407d2e:	xor    ah,BYTE PTR [edx]
  407d30:	sub    eax,0xdb5c9863
  407d35:	in     al,0x7d
  407d37:	xor    eax,0xcb9c9cd6
  407d3c:	hlt    
  407d3d:	push   cs
  407d3e:	xor    ebp,edx
  407d40:	rcl    esi,1
  407d42:	mov    bh,0x59
  407d44:	jno    0x407ce3
  407d46:	cli    
  407d47:	dec    esp
  407d48:	test   DWORD PTR [ebx],edx
  407d4a:	sub    al,0x11
  407d4c:	imul   edi,DWORD PTR [eax+0x2c],0x8ff568c4
  407d53:	shl    DWORD PTR [esi*4+0x375ed3e6],0x21
  407d5b:	xlat   BYTE PTR ds:[ebx]
  407d5c:	dec    ebp
  407d5d:	aas    
  407d5e:	cs pop edi
  407d60:	out    0x8a,eax
  407d62:	add    edx,DWORD PTR [ebp+0x45b14636]
  407d68:	ss call 0x6daacfbc
  407d6e:	push   eax
  407d6f:	aaa    
  407d70:	imul   ecx,DWORD PTR ds:0x94a802d6,0xc6799797
  407d7a:	add    BYTE PTR [ebp+0x53],dh
  407d7d:	mov    ecx,0x27fe00b4
  407d82:	call   0x9130714e
  407d87:	pop    ebx
  407d88:	jle    0x407d34
  407d8a:	inc    edx
  407d8b:	shl    eax,1
  407d8d:	xor    eax,0xd2032f2e
  407d92:	pop    ebp
  407d93:	cmp    esi,DWORD PTR ds:0x103f9d64
  407d99:	jmp    0x407d76
  407d9b:	mov    cl,0x3e
  407d9d:	popf   
  407d9e:	ja     0x407dc2
  407da0:	adc    al,0xf2
  407da2:	pop    es
  407da3:	jl     0x407e14
  407da5:	or     al,0xfb
  407da8:	loop   0x407dc0
  407daa:	or     al,BYTE PTR [ebx-0x7546aa1]
  407db0:	test   eax,0x7dad2a5d
  407db5:	in     eax,dx
  407db6:	aad    0xdd
  407db8:	mov    al,0x73
  407dba:	(bad)  
  407dbb:	div    DWORD PTR [edx]
  407dbd:	js     0x407d94
  407dbf:	hlt    
  407dc0:	inc    edi
  407dc1:	inc    edi
  407dc2:	or     esp,DWORD PTR [edi+0x374ce7c5]
  407dc8:	inc    esp
  407dc9:	dec    edx
  407dca:	test   DWORD PTR ds:0x9ac48136,0xb4477c06
  407dd4:	test   DWORD PTR [edx],ebp
  407dd6:	dec    eax
  407dd7:	fistp  WORD PTR [ebx-0x24c4fcec]
  407ddd:	push   esi
  407dde:	sbb    al,0x75
  407de0:	jno    0x407dbb
  407de2:	and    eax,0xa475e795
  407de7:	dec    esi
  407de8:	repnz repz mov esi,0x280f66ff
  407def:	push   0x6c955673
  407df4:	inc    edx
  407df5:	or     esi,ebp
  407df7:	push   esi
  407df8:	rcr    DWORD PTR [ebp+0x60],1
  407dfb:	sub    DWORD PTR [ebx+0x732a09cb],esp
  407e01:	dec    esp
  407e02:	popf   
  407e03:	xor    BYTE PTR ds:0x3b7bce79,ah
  407e09:	in     al,dx
  407e0a:	das    
  407e0b:	push   edx
  407e0c:	les    eax,FWORD PTR [esi-0x2b]
  407e0f:	pop    edi
  407e10:	fnstenv cs:[edx-0xfefe295]
  407e17:	mov    dl,ch
  407e19:	(bad)  
  407e1a:	outs   dx,BYTE PTR ds:[esi]
  407e1b:	loop   0x407dc9
  407e1d:	call   0xc0e3:0xd8c4ce7c
  407e24:	xor    ecx,DWORD PTR [ebx-0x48182f51]
  407e2a:	xchg   edx,eax
  407e2b:	cmc    
  407e2c:	xchg   edx,eax
  407e2d:	lea    edi,gs:[edi]
  407e30:	xor    dh,BYTE PTR [ecx-0x16]
  407e33:	push   ecx
  407e34:	es aaa 
  407e36:	xor    edi,ebp
  407e38:	push   ds
  407e39:	fldenv [edx]
  407e3b:	repnz push edi
  407e3d:	les    esi,FWORD PTR [eax]
  407e3f:	bound  edx,QWORD PTR [eax+0x13]
  407e42:	pusha  
  407e43:	sub    dl,al
  407e45:	mov    ah,0x6f
  407e47:	cmp    esi,DWORD PTR [edi+0xa]
  407e4a:	inc    edx
  407e4b:	loopne 0x407ddc
  407e4d:	loope  0x407e4f
  407e4f:	popa   
  407e50:	out    0x69,eax
  407e52:	push   esi
  407e53:	pushf  
  407e54:	dec    ebp
  407e55:	xchg   dl,ah
  407e57:	xchg   edx,eax
  407e58:	stc    
  407e59:	jne    0x407ec5
  407e5b:	bound  eax,QWORD PTR ds:0x2f62f0a1
  407e61:	sbb    BYTE PTR [eax-0x4c],0x10
  407e65:	outs   dx,DWORD PTR ds:[esi]
  407e66:	out    0x92,eax
  407e68:	rol    BYTE PTR [ecx+0xe],0x67
  407e6c:	mov    eax,0x7d2560e1
  407e71:	sbb    dl,cl
  407e73:	push   ecx
  407e74:	xor    edi,ecx
  407e76:	mov    bh,0xb7
  407e78:	sub    ecx,ebp
  407e7a:	aaa    
  407e7b:	fnstenv [ebp-0x78]
  407e7e:	xchg   ebp,eax
  407e7f:	push   cs
  407e80:	inc    ebx
  407e81:	repnz sar BYTE PTR [ebp-0x70c93f9e],1
  407e88:	in     al,dx
  407e89:	push   ecx
  407e8a:	adc    al,0x18
  407e8c:	repz mov bl,0xe9
  407e8f:	xor    dl,BYTE PTR [ebx+0x4e]
  407e92:	jno    0x407e93
  407e94:	lods   al,BYTE PTR ds:[esi]
  407e95:	shl    esp,0xed
  407e98:	test   al,0x9a
  407e9a:	xor    eax,0x2d7448b2
  407e9f:	inc    esi
  407ea0:	sbb    al,0x2f
  407ea2:	adc    cl,ch
  407ea4:	and    DWORD PTR [esp+ebx*4],eax
  407ea7:	mov    esi,0x7ab64ab5
  407eac:	out    dx,al
  407ead:	cli    
  407eae:	jb     0x407f08
  407eb0:	xchg   ebx,eax
  407eb1:	dec    eax
  407eb2:	xor    DWORD PTR [ebp+0x3d],0x60
  407eb6:	sub    esp,DWORD PTR [esi]
  407eb8:	push   es
  407eb9:	out    0x3c,al
  407ebb:	das    
  407ebc:	lea    ecx,[ebp+ebx*8+0x3540bdb2]
  407ec3:	push   0x680ca76
  407ec8:	arpl   cx,di
  407eca:	pusha  
  407ecb:	xchg   ebp,eax
  407ecc:	cmc    
  407ecd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ece:	stc    
  407ecf:	mov    dl,0xae
  407ed1:	jge    0x407eb1
  407ed3:	push   ebx
  407ed4:	aaa    
  407ed5:	fistp  QWORD PTR [edi-0x15]
  407ed8:	mov    gs,WORD PTR [edx+0x25]
  407edb:	in     al,0x2b
  407edd:	clc    
  407ede:	retf   
  407edf:	(bad)
  407ee2:	(bad)  
  407ee3:	fcmovu st,st(4)
  407ee5:	pop    esp
  407ee6:	xchg   ebp,eax
  407ee7:	pop    ebp
  407ee8:	or     DWORD PTR [edx-0x7e],edx
  407eeb:	mov    ds:0x9a023a53,eax
  407ef0:	fdiv   st(3),st
  407ef2:	mov    al,0xd2
  407ef4:	adc    al,0xe1
  407ef6:	sti    
  407ef7:	fldl2e 
  407ef9:	jbe    0x407f7a
  407efb:	dec    eax
  407efc:	inc    esp
  407efd:	dec    ebx
  407efe:	retf   0x91da
  407f01:	arpl   WORD PTR [ebx+0x6e7a517c],sp
  407f07:	xchg   ecx,eax
  407f08:	xor    BYTE PTR [edi+0x58e38385],ch
  407f0e:	mov    bl,0x98
  407f10:	scas   eax,DWORD PTR es:[edi]
  407f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f12:	dec    ecx
  407f13:	mov    edi,0xbe0e0aa7
  407f18:	xchg   BYTE PTR [ecx+0x7ecf0681],dh
  407f1e:	ror    DWORD PTR [ecx-0x62dcb075],1
  407f24:	mov    ebp,0xdcc98c92
  407f29:	(bad)  
  407f2a:	int    0x6d
  407f2c:	ficomp DWORD PTR [ebp+0x4311b6cd]
  407f32:	test   ebx,eax
  407f34:	xchg   ebp,eax
  407f35:	outs   dx,BYTE PTR ds:[esi]
  407f36:	sbb    al,0x75
  407f38:	or     DWORD PTR [edi],0x261da137
  407f3e:	sbb    DWORD PTR [esi-0x79440d],ebx
  407f44:	(bad)  
  407f45:	xchg   edi,eax
  407f46:	aad    0x71
  407f48:	out    dx,eax
  407f49:	push   es
  407f4a:	sbb    ecx,DWORD PTR [edi+ebx*2+0x7a36cba1]
  407f51:	sbb    BYTE PTR [ebx],dl
  407f53:	pop    eax
  407f54:	add    esi,DWORD PTR [ebx-0x71c3e410]
  407f5a:	ret    0xe38c
  407f5d:	jb     0x407f6f
  407f5f:	sar    BYTE PTR [ebp-0x6d],0x5e
  407f63:	rcr    DWORD PTR [ebx-0x6fef5e10],0x0
  407f6a:	xor    BYTE PTR [ecx],0xbe
  407f6d:	ins    DWORD PTR es:[edi],dx
  407f6e:	jp     0x407f20
  407f70:	test   DWORD PTR [esi+0x2b],0xf6c81311
  407f77:	add    bh,al
  407f79:	pop    ss
  407f7a:	adc    DWORD PTR [edx],ecx
  407f7c:	xor    BYTE PTR [ecx+0x2813cfa6],ah
  407f82:	push   esi
  407f83:	addr16 mov edx,0x19dfe6d5
  407f89:	scas   al,BYTE PTR es:[edi]
  407f8a:	xor    DWORD PTR [edx-0x1e],0xffffffc3
  407f8e:	cmp    DWORD PTR [ecx-0x5dd080d5],ebx
  407f94:	repz sub ch,BYTE PTR [esi-0xabe1853]
  407f9b:	cmp    BYTE PTR [ebx-0x2a],ch
  407f9e:	mov    ebp,ebx
  407fa0:	push   edx
  407fa1:	aaa    
  407fa2:	push   esi
  407fa3:	aad    0x69
  407fa5:	leave  
  407fa6:	sub    bh,bh
  407fa8:	enter  0xa636,0xff
  407fac:	fsubr  DWORD PTR [ecx+0x54]
  407faf:	outs   dx,DWORD PTR ds:[esi]
  407fb0:	les    esp,FWORD PTR [esi+0x12]
  407fb3:	popa   
  407fb4:	sub    DWORD PTR [ebx+ecx*2],0xbb32e36b
  407fbb:	lds    ecx,FWORD PTR [esi-0x6e79fb3f]
  407fc1:	(bad)  
  407fc2:	rol    BYTE PTR [edi+ebp*4-0x5f],1
  407fc6:	adc    al,0x25
  407fc8:	and    DWORD PTR [edx+edi*2-0x37],esp
  407fcc:	mov    eax,0xecc5400f
  407fd1:	into   
  407fd2:	call   0xa9e2b7a8
  407fd7:	lods   al,BYTE PTR ds:[esi]
  407fd8:	ins    DWORD PTR es:[edi],dx
  407fd9:	inc    esp
  407fda:	iret   
  407fdb:	add    DWORD PTR [esi],edi
  407fdd:	or     ebx,DWORD PTR [ecx]
  407fdf:	push   eax
  407fe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fe1:	shr    eax,cl
  407fe3:	aaa    
  407fe4:	inc    edx
  407fe5:	mov    BYTE PTR [esi+0x5b4c3de3],cl
  407feb:	push   0xffffff92
  407fed:	rol    esp,cl
  407fef:	in     al,0xc5
  407ff1:	jmp    0xff1e:0xffa38c1b
  407ff8:	jo     0x408045
  407ffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ffb:	xchg   ebp,ebp
  407ffd:	jecxz  0x407faa
  407fff:	xor    bh,BYTE PTR [ebx-0x20]
  408002:	scas   al,BYTE PTR es:[edi]
  408003:	sbb    al,dl
  408005:	lds    ebp,FWORD PTR [ebx-0x34]
  408008:	sbb    DWORD PTR [ebx+ebp*8-0xa033fb3],0x6a
  408010:	fstp   QWORD PTR [eax-0x66]
  408013:	addr16 cli 
  408015:	dec    cx
  408017:	xor    DWORD PTR [eax+0x1d],0xffffffcb
  40801b:	xchg   ecx,eax
  40801c:	xor    DWORD PTR [esi],ebp
  40801e:	or     ah,BYTE PTR [ebx-0x3d]
  408021:	mov    esp,gs
  408023:	push   ds
  408024:	xchg   esp,eax
  408025:	cmp    esp,DWORD PTR [edi]
  408027:	mov    ecx,0xb6a70973
  40802c:	cli    
  40802d:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40802f:	call   0x53c0:0xd06e20fb
  408036:	dec    ebp
  408037:	push   eax
  408038:	(bad)  
  408039:	mov    eax,ds:0xefa11127
  40803e:	dec    edi
  40803f:	jmp    0x4080be
  408041:	and    eax,ebx
  408043:	rol    BYTE PTR [eax],1
  408045:	fistp  WORD PTR [eax-0x45]
  408048:	add    ecx,edi
  40804a:	dec    ebp
  40804b:	push   eax
  40804c:	mov    al,ds:0x2cde8ff4
  408051:	pop    edx
  408052:	jo     0x408076
  408054:	aas    
  408055:	(bad)  
  408056:	imul   edx,DWORD PTR [eax-0xc5e7d72],0x9f3c9808
  408060:	push   ss
  408061:	and    ah,BYTE PTR [esi-0x5a]
  408064:	(bad)  
  408065:	aam    0xb8
  408067:	jl     0x407fed
  408069:	pop    ebx
  40806a:	and    eax,0x5d7cc5e4
  40806f:	fldcw  WORD PTR gs:[ebp-0x72f6fa99]
  408076:	or     DWORD PTR [ecx],edi
  408078:	jge    0x4080cb
  40807a:	sub    cl,BYTE PTR [esi]
  40807c:	rol    BYTE PTR [edx-0x64277f39],0x77
  408083:	sub    DWORD PTR [ecx+0x2e],ecx
  408086:	outs   dx,DWORD PTR ds:[esi]
  408087:	sbb    BYTE PTR [edx+0x1ee9e3d0],dh
  40808d:	or     DWORD PTR [edx],ebp
  40808f:	(bad)  
  408091:	mov    al,0xc0
  408093:	sub    eax,0x36a265ff
  408098:	push   edi
  408099:	lods   al,BYTE PTR ds:[esi]
  40809a:	adc    al,0xa8
  40809c:	loopne 0x4080b1
  40809e:	adc    ebp,ecx
  4080a0:	jno    0x408056
  4080a2:	cdq    
  4080a3:	test   DWORD PTR [eax+edx*1-0x2f],edx
  4080a7:	outs   dx,BYTE PTR ds:[esi]
  4080a8:	dec    edx
  4080a9:	loop   0x408059
  4080ab:	push   esp
  4080ac:	jbe    0x4080d3
  4080ae:	sbb    bl,BYTE PTR [ecx+0x7b]
  4080b1:	adc    dl,al
  4080b3:	not    BYTE PTR [eax+0x7d]
  4080b6:	mov    WORD PTR [eax-0x50],fs
  4080b9:	scas   al,BYTE PTR es:[edi]
  4080ba:	in     eax,dx
  4080bb:	popf   
  4080bc:	call   0xdd03:0x2302e1ad
  4080c3:	into   
  4080c4:	xchg   esp,eax
  4080c5:	fwait
  4080c6:	xchg   ebp,eax
  4080c7:	sub    BYTE PTR [ecx],bl
  4080c9:	push   0x1584b2e3
  4080ce:	xlat   BYTE PTR ds:[ebx]
  4080cf:	jmp    0xfe14:0x3ebe2b6d
  4080d6:	test   BYTE PTR [esi+0x337d6c9c],bl
  4080dc:	cwde   
  4080dd:	sbb    al,0x8e
  4080df:	(bad)  
  4080e0:	and    eax,0x59c6285
  4080e5:	ss int3 
  4080e7:	sbb    eax,0x2b00b7ad
  4080ec:	jae    0x408121
  4080ee:	dec    edi
  4080ef:	sub    BYTE PTR [ebx],ch
  4080f1:	sbb    bl,BYTE PTR [eax+0x599149b2]
  4080f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080f8:	push   0xffffff89
  4080fa:	stos   DWORD PTR es:[edi],eax
  4080fb:	cld    
  4080fc:	sbb    cl,dl
  4080fe:	js     0x4080ce
  408100:	sbb    ah,dh
  408102:	test   BYTE PTR [eax+ebp*1+0x69ca2bcb],0x45
  40810a:	and    eax,0xc10ee08e
  40810f:	pop    esp
  408110:	push   0x4eeea7b5
  408115:	popf   
  408116:	pop    edi
  408117:	ror    DWORD PTR [edi+0x54],1
  40811a:	inc    ecx
  40811b:	mov    ah,0xce
  40811d:	jno    0x408120
  40811f:	popf   
  408120:	sub    eax,0x506623ad
  408125:	and    ah,ch
  408127:	sub    bl,0x7d
  40812a:	lods   eax,DWORD PTR ds:[esi]
  40812b:	cld    
  40812c:	sbb    ebx,DWORD PTR [ecx-0x2b]
  40812f:	clc    
  408130:	jae    0x408127
  408132:	sub    esi,DWORD PTR [ecx-0x4ebbad38]
  408138:	mov    bl,0xef
  40813a:	and    DWORD PTR [ebx+0x3d9610e2],0xffffffd4
  408141:	fisubr WORD PTR [esi]
  408143:	pop    ebx
  408144:	xchg   esi,eax
  408145:	call   0x6e52d83d
  40814a:	mov    eax,0xda39e8dd
  40814f:	push   0x6e
  408151:	inc    eax
  408152:	test   eax,0x448f67d5
  408157:	cmp    ecx,0x1934e7bf
  40815d:	add    al,0x5d
  40815f:	xchg   edi,eax
  408160:	dec    esp
  408161:	push   ss
  408162:	and    eax,0x7e279dbe
  408167:	mov    ecx,0x384a8d81
  40816c:	(bad)  
  40816d:	mov    eax,ds:0xbe9bd348
  408172:	mov    ah,0x92
  408174:	leave  
  408175:	mov    esi,ecx
  408177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408178:	in     eax,dx
  408179:	cmp    DWORD PTR [eax-0x2f],ecx
  40817c:	jg     0x4081d7
  40817e:	mov    ch,BYTE PTR [si+0x51]
  408182:	lods   eax,DWORD PTR ds:[esi]
  408183:	xchg   edx,eax
  408184:	into   
  408185:	xor    DWORD PTR [ebx-0x3d],0xdf550f58
  40818c:	xchg   esp,eax
  40818d:	mov    bh,0x2e
  40818f:	dec    edi
  408190:	jl     0x4081e6
  408192:	xor    bl,BYTE PTR [edx]
  408194:	adc    DWORD PTR [esi-0x2e36357d],edi
  40819a:	pop    ecx
  40819b:	jo     0x408171
  40819d:	fbld   TBYTE PTR [ebx+eax*1-0x3f]
  4081a1:	test   eax,0x9b051d83
  4081a6:	and    esp,DWORD PTR [ecx-0x4d]
  4081a9:	retf   0x59d
  4081ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081ad:	jecxz  0x4081f9
  4081af:	sub    ebp,DWORD PTR [eax]
  4081b1:	mov    ecx,0x9cc4373c
  4081b6:	add    eax,0xaee0a534
  4081bb:	shl    bh,1
  4081bd:	stc    
  4081be:	mov    ds:0xb68db63,eax
  4081c3:	sar    DWORD PTR [ecx+0xb],0xbe
  4081c7:	aas    
  4081c8:	lods   eax,DWORD PTR ds:[esi]
  4081c9:	int3   
  4081ca:	repz call 0x2941c1f1
  4081d0:	cmp    BYTE PTR [edi],ch
  4081d2:	rcr    BYTE PTR [ebx+ebx*8-0x3263a5e1],1
  4081d9:	call   0x4a5c:0xca384c55
  4081e0:	dec    eax
  4081e1:	jo     0x408218
  4081e3:	mov    esi,0x862167c9
  4081e8:	pop    ss
  4081e9:	sbb    al,0x51
  4081eb:	push   DWORD PTR [esi]
  4081ed:	xchg   edx,eax
  4081ee:	sti    
  4081ef:	pop    ebx
  4081f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081f1:	out    0x6a,eax
  4081f3:	mov    cl,0xda
  4081f5:	jl     0x4081f6
  4081f7:	ds cwde 
  4081f9:	and    al,0x30
  4081fb:	mov    esi,0xf8e76d2e
  408200:	mov    edi,0xb0ae50a0
  408205:	jmp    0x6b4e:0x9883d541
  40820c:	mov    esp,DWORD PTR [eax-0x2b]
  40820f:	mov    ds:0xeb00f6b4,al
  408214:	sbb    al,0x9b
  408216:	aad    0xdf
  408218:	sar    BYTE PTR [esp+esi*8],cl
  40821b:	dec    esi
  40821c:	test   al,0x77
  40821e:	arpl   WORD PTR ds:0x19a139b8,di
  408224:	or     eax,0xed640ad5
  408229:	sbb    eax,0x1e8de1a3
  40822e:	xchg   DWORD PTR [ebp-0x221efcc0],edx
  408234:	ins    BYTE PTR es:[edi],dx
  408235:	xchg   ebp,eax
  408236:	mov    ch,0x73
  408238:	dec    esp
  408239:	int    0xe6
  40823b:	ss lahf 
  40823d:	ret    
  40823e:	jno    0x40824c
  408240:	lods   eax,DWORD PTR es:[esi]
  408242:	fldenv [ecx+0x1c]
  408245:	xor    al,0x98
  408247:	lea    esi,[edi-0x6c234884]
  40824d:	sub    al,0xfe
  40824f:	nop
  408250:	and    eax,0x6cfe06fc
  408255:	stos   BYTE PTR es:[edi],al
  408256:	mov    ecx,DWORD PTR [eax]
  408258:	and    ecx,DWORD PTR [ebx+0x47]
  40825b:	lea    edx,[eax-0x3d8c054b]
  408261:	pop    ss
  408262:	jnp    0x40821e
  408264:	call   0xf975486a
  408269:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40826a:	in     eax,0x19
  40826c:	sar    DWORD PTR [ebx-0xd],0x59
  408270:	cwde   
  408271:	pop    ebx
  408272:	div    DWORD PTR [ecx-0x22]
  408275:	pop    eax
  408276:	sub    ebx,DWORD PTR [ecx-0xa]
  408279:	dec    esp
  40827a:	mov    WORD PTR [ebx+0x4b],gs
  40827d:	cdq    
  40827e:	add    DWORD PTR [ebp-0xfd4ace],0x2e
  408285:	in     al,dx
  408286:	fwait
  408287:	nop
  408288:	pop    ebx
  408289:	fild   WORD PTR ss:0x3ccd7407
  408290:	pop    ss
  408291:	scas   eax,DWORD PTR es:[edi]
  408292:	lods   eax,DWORD PTR ds:[esi]
  408293:	popa   
  408294:	xchg   esp,eax
  408295:	mov    edx,0x685cb2ae
  40829a:	jmp    FWORD PTR [edx+0x28]
  40829d:	mov    esi,0x908850bf
  4082a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082a3:	push   edx
  4082a4:	mov    bl,0xe0
  4082a6:	cli    
  4082a7:	shr    bl,0x47
  4082aa:	aam    0xa6
  4082ac:	jb     0x408325
  4082ae:	mov    esi,0xe5bd9ae7
  4082b3:	xlat   BYTE PTR ds:[ebx]
  4082b4:	sbb    BYTE PTR [ebp+0x43],dl
  4082b7:	scas   eax,DWORD PTR es:[edi]
  4082b8:	push   0xd16138fb
  4082bd:	dec    edi
  4082be:	jmp    0x53a08e23
  4082c3:	repnz ins DWORD PTR es:[edi],dx
  4082c5:	repnz nop
  4082c7:	mov    ds:0x565a3deb,al
  4082cc:	inc    esi
  4082cd:	adc    ebx,ecx
  4082cf:	pop    ds
  4082d0:	out    0x3d,al
  4082d2:	arpl   WORD PTR ss:[esi+0x29],bx
  4082d6:	ins    BYTE PTR es:[edi],dx
  4082d7:	xchg   ebp,eax
  4082d8:	pushf  
  4082d9:	sar    DWORD PTR [ecx],cl
  4082db:	fnstenv [edi+0x78]
  4082de:	(bad)  
  4082df:	adc    esi,DWORD PTR [esi+eiz*1]
  4082e2:	cmp    DWORD PTR [edi+0x7ecebbbc],edi
  4082e8:	jl     0x408289
  4082ea:	sbb    edi,DWORD PTR [edi-0x62]
  4082ed:	mov    dl,BYTE PTR [ebp-0x7b]
  4082f0:	or     BYTE PTR [ebx+0x1f],0xdd
  4082f4:	test   WORD PTR [ebx],dx
  4082f7:	inc    ebx
  4082f8:	mov    ecx,0xda5b7690
  4082fd:	test   al,0x5e
  4082ff:	push   0xd25c91a0
  408304:	test   eax,0x67a5fde7
  40830a:	icebp  
  40830b:	data16 mov al,0xa3
  40830e:	les    ebx,FWORD PTR [ebp+0x56]
  408311:	cmc    
  408312:	fdiv   st,st(7)
  408314:	mov    ch,0x40
  408316:	std    
  408317:	jge    0x40838c
  408319:	out    0xc2,al
  40831b:	mov    dl,0x8c
  40831d:	int3   
  40831e:	mov    bl,0xaf
  408320:	pop    ecx
  408321:	(bad)  
  408323:	jecxz  0x4082ac
  408325:	sahf   
  408326:	retf   0x5d96
  408329:	mov    eax,ds:0x883d775b
  40832e:	jo     0x4082ee
  408330:	mov    es,WORD PTR [ebp-0x73]
  408333:	shr    cl,0x9a
  408336:	imul   DWORD PTR [edx]
  408338:	jae    0x4083b5
  40833a:	icebp  
  40833b:	retf   
  40833c:	out    dx,al
  40833d:	sar    dl,1
  40833f:	push   edx
  408340:	(bad)
  408344:	bts    DWORD PTR [eax+0x47ec57df],ebp
  40834b:	imul   esi,DWORD PTR [ecx+0x35bbe7d8],0x365cc39
  408355:	les    ecx,FWORD PTR [ebp-0x63]
  408358:	pop    es
  408359:	xor    ebx,esi
  40835b:	test   ebx,esp
  40835d:	and    ah,BYTE PTR [eax+edi*1-0x6e]
  408361:	jbe    0x4082fb
  408363:	outs   dx,BYTE PTR ds:[esi]
  408364:	arpl   ax,sp
  408366:	push   ebp
  408367:	test   BYTE PTR [edi+0x15],ah
  40836a:	sub    eax,0x5a79fb1c
  40836f:	nop    DWORD PTR fs:0xa06fc64e
  408377:	retf   0x4ac5
  40837a:	jmp    0x491c0c28
  40837f:	pop    edx
  408380:	and    bh,BYTE PTR [ebx+0x1c07b0bb]
  408386:	das    
  408387:	pushf  
  408388:	inc    ebp
  408389:	xor    ebp,esi
  40838b:	(bad)  
  40838c:	mov    eax,ds:0x1331128
  408391:	call   0x248b8628
  408396:	dec    esi
  408397:	nop
  408398:	imul   ebx,DWORD PTR [ecx+0x57a71a87],0x7a
  40839f:	rcl    BYTE PTR [ebx],0xfd
  4083a2:	mov    cl,0xfc
  4083a4:	xchg   esi,eax
  4083a5:	scas   al,BYTE PTR es:[edi]
  4083a6:	adc    ebx,DWORD PTR [eax+0x4e]
  4083a9:	inc    esp
  4083aa:	lods   eax,DWORD PTR ds:[esi]
  4083ab:	lahf   
  4083ac:	sti    
  4083ad:	adc    BYTE PTR [ebp+0x69],dh
  4083b0:	shl    DWORD PTR [edi+0x3],cl
  4083b3:	sub    al,BYTE PTR [edx+0x3e]
  4083b6:	adc    DWORD PTR [ebx+0x7e0e95a7],eax
  4083bc:	inc    BYTE PTR [ebx-0x4f5aa8a1]
  4083c2:	into   
  4083c3:	mov    bh,ch
  4083c5:	in     al,dx
  4083c6:	sub    ebp,DWORD PTR [esi+edx*8-0x19]
  4083ca:	cmp    eax,0xf92e09b8
  4083cf:	scas   eax,DWORD PTR es:[edi]
  4083d0:	data16 mov bh,0xbf
  4083d3:	add    al,0x83
  4083d5:	jmp    0xdf60:0x59fa0802
  4083dc:	mov    ah,0xa0
  4083de:	ins    BYTE PTR es:[edi],dx
  4083df:	pop    eax
  4083e0:	xor    cl,BYTE PTR [ecx-0x77]
  4083e3:	sbb    DWORD PTR ds:0x5b7e75d5,ebx
  4083e9:	xchg   edi,eax
  4083ea:	sub    DWORD PTR [edx+ebp*8+0x7d96b1e3],edx
  4083f1:	add    ebp,edx
  4083f3:	mov    DWORD PTR [ebp+edx*8-0x27],esi
  4083f7:	outs   dx,BYTE PTR ds:[esi]
  4083f8:	xchg   edi,eax
  4083f9:	(bad)  
  4083fa:	fdiv   st,st(5)
  4083fc:	add    DWORD PTR [ebx],ecx
  4083fe:	add    al,0xc3
  408400:	mov    ds:0x58c111f7,eax
  408405:	aas    
  408406:	jbe    0x408418
  408408:	lods   al,BYTE PTR ds:[esi]
  408409:	lods   eax,DWORD PTR ds:[esi]
  40840a:	cli    
  40840b:	pop    ss
  40840c:	pop    eax
  40840d:	sbb    al,0xdd
  40840f:	lds    ebx,FWORD PTR [ecx-0x5f]
  408412:	xchg   esp,eax
  408413:	lods   eax,DWORD PTR ds:[esi]
  408414:	sti    
  408415:	loope  0x40840f
  408417:	lods   al,BYTE PTR ds:[esi]
  408418:	shl    BYTE PTR [esi-0xe],cl
  40841b:	push   ebp
  40841c:	dec    ecx
  40841d:	out    dx,eax
  40841e:	leave  
  40841f:	add    al,0x8b
  408421:	aaa    
  408422:	jne    0x4083b3
  408424:	mov    al,ds:0xb446a71
  408429:	jmp    0xd5f359ce
  40842e:	(bad)  
  40842f:	jl     0x408470
  408431:	aam    0x46
  408433:	adc    eax,0x28589a42
  408438:	mov    WORD PTR [edx-0x18],gs
  40843b:	pop    edx
  40843c:	fnstsw ax
  40843e:	aaa    
  40843f:	cli    
  408440:	xor    eax,0x5ad49794
  408445:	push   ss
  408446:	div    BYTE PTR [esi]
  408448:	shl    BYTE PTR [ebx-0x5d3cf2c1],1
  40844e:	cli    
  40844f:	inc    ebp
  408450:	or     dl,cl
  408452:	(bad)  [edx+ecx*2+0x2d358a63]
  408459:	sahf   
  40845a:	sbb    ax,0x29f2
  40845e:	xchg   edx,eax
  40845f:	fistp  QWORD PTR [edi]
  408461:	(bad)  
  408462:	pop    edx
  408463:	aaa    
  408464:	xlat   BYTE PTR ds:[ebx]
  408465:	retf   0xbec9
  408468:	push   ds
  408469:	jne    0x408411
  40846b:	mov    ecx,0x56de6ed
  408470:	fcom   QWORD PTR [esi]
  408472:	mov    dh,cl
  408474:	add    BYTE PTR [edi+0x75258603],cl
  40847a:	xchg   edx,eax
  40847b:	and    al,0x9a
  40847d:	scas   al,BYTE PTR es:[edi]
  40847e:	jmp    0x408428
  408480:	xchg   BYTE PTR ds:0xc6df812e,ah
  408486:	mov    dh,0x75
  408488:	iret   
  408489:	fcomi  st,st(2)
  40848b:	sbb    esi,DWORD PTR [ecx+0x34b1fb80]
  408491:	xor    DWORD PTR [ebx+0x661dbe2a],edx
  408497:	jecxz  0x408423
  408499:	and    esi,edi
  40849b:	xchg   BYTE PTR [ecx+0x3e],bh
  40849e:	cdq    
  40849f:	jb     0x40846a
  4084a1:	addr16 loop 0x408489
  4084a4:	sub    BYTE PTR [esi],bl
  4084a6:	test   ebx,edx
  4084a8:	je     0x408488
  4084aa:	pop    eax
  4084ab:	mov    edx,0x7f3ebf29
  4084b0:	std    
  4084b1:	out    0xd8,eax
  4084b3:	sub    DWORD PTR [edi+ecx*1-0x6f],0xffffffb3
  4084b8:	sub    edi,DWORD PTR [ebx]
  4084ba:	cli    
  4084bb:	retf   0x8ae2
  4084be:	adc    BYTE PTR [ebx+0x64ac2c76],dl
  4084c4:	adc    BYTE PTR [eax-0x66],ch
  4084c7:	inc    edx
  4084c8:	pop    esp
  4084c9:	out    dx,eax
  4084ca:	fisub  DWORD PTR [eax+ebp*4]
  4084cd:	xlat   BYTE PTR ds:[ebx]
  4084ce:	jne    0x40853d
  4084d0:	xchg   ecx,eax
  4084d1:	adc    BYTE PTR [ebx],cl
  4084d3:	adc    DWORD PTR [esi+0x52],ecx
  4084d6:	jle    0x408548
  4084d8:	leave  
  4084d9:	je     0x408526
  4084db:	clc    
  4084dc:	and    DWORD PTR [edi],eax
  4084de:	adc    DWORD PTR [eax-0x80],ebp
  4084e1:	dec    ecx
  4084e2:	inc    ebx
  4084e3:	aas    
  4084e4:	aam    0x3c
  4084e6:	sbb    BYTE PTR [edi+0x6c0796d5],0x13
  4084ed:	lahf   
  4084ee:	repz imul edx,edi,0xbb62f21
  4084f5:	adc    eax,0xf3ddb983
  4084fa:	icebp  
  4084fb:	(bad)  
  4084fc:	out    0x29,al
  4084fe:	mov    bl,0xda
  408500:	xor    al,0x58
  408502:	and    esi,esp
  408504:	iret   
  408505:	adc    al,0x74
  408507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408508:	aad    0x4
  40850a:	(bad)  
  40850b:	cmp    BYTE PTR [esi+0x3dbd471c],bl
  408511:	jmp    0x408512
  408513:	jge    0x4084ef
  408515:	pushf  
  408516:	neg    DWORD PTR [ebx+eax*1-0x47]
  40851a:	or     eax,0x4318eea
  40851f:	cmc    
  408520:	clc    
  408521:	or     eax,0x5191239e
  408526:	(bad)
  408529:	test   DWORD PTR [ebx],edx
  40852b:	cmp    bh,BYTE PTR [eax+0x23be9c5a]
  408531:	jnp    0x4085a7
  408533:	sub    eax,0x8ef42a76
  408538:	imul   ebp,ecx,0x26637e65
  40853e:	add    esi,DWORD PTR ds:0x5e1e8b4a
  408544:	call   FWORD PTR [esi]
  408546:	loopne 0x40856a
  408548:	rol    esi,cl
  40854a:	adc    ebx,DWORD PTR [bx+di+0x762c]
  40854f:	push   esp
  408550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408551:	xchg   ebp,eax
  408552:	inc    ebp
  408553:	xor    ebp,DWORD PTR [ecx+0x4c310d50]
  408559:	cs shr cl,0xf3
  40855d:	sar    BYTE PTR [esi],1
  40855f:	retf   
  408560:	xor    al,0x25
  408562:	ss call 0xdb83:0x2917cf4b
  40856a:	aaa    
  40856b:	inc    edx
  40856c:	xor    al,ah
  40856e:	mov    BYTE PTR [ebx+0x0],0x2e
  408572:	mov    ebp,0x484fda9f
  408577:	test   eax,0xee209f43
  40857c:	stos   DWORD PTR es:[edi],eax
  40857d:	mov    cl,0x23
  40857f:	leave  
  408580:	and    ecx,DWORD PTR [edx-0x54]
  408583:	mov    cl,0x61
  408585:	jmp    0x408527
  408587:	(bad)  [ebx]
  40858a:	pop    ds
  40858b:	ret    
  40858c:	aas    
  40858d:	(bad)  
  40858e:	lds    edi,FWORD PTR [edx+0x40]
  408591:	fmul   DWORD PTR [ebx+0x5400b9d4]
  408597:	xchg   ebp,eax
  408598:	ins    DWORD PTR es:[edi],dx
  408599:	pop    ss
  40859a:	fdivr  DWORD PTR [edx+0x61eae2d5]
  4085a0:	inc    ecx
  4085a1:	adc    al,0xe2
  4085a3:	jo     0x4085f3
  4085a5:	js     0x4085e9
  4085a7:	jl     0x408565
  4085a9:	add    al,0xe1
  4085ab:	aam    0xc7
  4085ad:	mov    esp,DWORD PTR [ebx]
  4085af:	outs   dx,BYTE PTR ds:[esi]
  4085b0:	das    
  4085b1:	xor    eax,0xbc4ecdbe
  4085b6:	(bad)  
  4085b7:	and    ebx,DWORD PTR [edi-0x1e5b1318]
  4085bd:	cmp    dh,BYTE PTR [ebx+0x48]
  4085c0:	stos   DWORD PTR es:[edi],eax
  4085c1:	gs pusha 
  4085c3:	pop    ebx
  4085c4:	push   edi
  4085c5:	gs xchg ebx,eax
  4085c7:	test   al,0x60
  4085c9:	jmp    0x45076189
  4085ce:	push   edx
  4085cf:	(bad)  
  4085d0:	mov    edi,0xcd2b4a53
  4085d5:	mov    cl,0xc
  4085d7:	cmp    BYTE PTR [edx],bl
  4085d9:	popf   
  4085da:	xor    DWORD PTR [edx],esi
  4085dc:	xchg   esi,eax
  4085dd:	data16 ror BYTE PTR [ecx-0x6bb9097f],cl
  4085e4:	jmp    FWORD PTR [ebp+0x59]
  4085e7:	enter  0xa9fc,0x35
  4085eb:	mov    bl,0x5
  4085ed:	rcr    dh,cl
  4085ef:	add    ch,al
  4085f1:	idiv   eax
  4085f3:	lahf   
  4085f4:	(bad)  
  4085f6:	fdivr  QWORD PTR [ebp+ebp*8-0xbadd8ac]
  4085fd:	sub    DWORD PTR [edx-0x2],ecx
  408600:	xchg   ebp,eax
  408601:	jmp    0x40860c
  408603:	rcl    BYTE PTR [esi-0x4c3f1f39],0xaa
  40860a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40860b:	sub    DWORD PTR [esi+0x29],eax
  40860e:	mov    ch,0x10
  408610:	sub    ecx,DWORD PTR [esi+0xb]
  408613:	jmp    0x59936f87
  408618:	mov    edx,0x4168c830
  40861d:	jmp    0xeafa:0x50e86ce4
  408624:	or     cl,BYTE PTR [edx-0x29]
  408627:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408628:	(bad)  [ebx]
  40862a:	inc    ebp
  40862b:	sbb    DWORD PTR [ebx-0x7f],ecx
  40862e:	fisttp DWORD PTR [ecx+0x10]
  408631:	and    DWORD PTR [ebx],esi
  408633:	gs int 0xb4
  408636:	sub    DWORD PTR [ebp-0x3647ae00],ebx
  40863c:	add    dh,dl
  40863e:	je     0x408666
  408640:	leave  
  408641:	inc    esi
  408642:	add    esi,DWORD PTR [ecx]
  408644:	(bad)  [eax-0x10]
  408647:	sahf   
  408648:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408649:	mov    al,0xe1
  40864b:	mov    ch,0x5d
  40864d:	scas   al,BYTE PTR es:[edi]
  40864e:	and    cl,BYTE PTR [edi+0x1c61d478]
  408654:	jno    0x4085fd
  408656:	push   0xffffff84
  408658:	rcl    BYTE PTR [edi],cl
  40865a:	jmp    0x957b:0x86d34e1f
  408661:	cwde   
  408662:	cs and dh,dh
  408665:	lods   al,BYTE PTR ds:[esi]
  408666:	mov    edx,0xc51d28b3
  40866b:	addr16 push es
  40866d:	(bad)  
  40866e:	push   esi
  40866f:	xor    ch,BYTE PTR [ecx+0x3a]
  408672:	cmp    BYTE PTR [ecx],ah
  408674:	inc    ecx
  408675:	xchg   esi,eax
  408676:	xor    ebp,ebp
  408678:	daa    
  408679:	add    eax,0xebd5c303
  40867e:	push   0xf1ac7af
  408683:	sbb    BYTE PTR [eax-0x4e],ah
  408686:	dec    ebx
  408687:	mov    ecx,0x894288d3
  40868c:	cmp    ah,dl
  40868e:	push   es
  40868f:	ror    BYTE PTR [esi+0x34fd491c],cl
  408695:	sahf   
  408696:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408697:	pop    esp
  408698:	je     0x408719
  40869a:	xor    BYTE PTR [eax+0x38d40b5a],ah
  4086a0:	fcomp  QWORD PTR [eax-0x7fab816]
  4086a6:	call   0x6c95:0x65117ef5
  4086ad:	(bad)  
  4086af:	and    eax,0xa8a08bff
  4086b4:	pop    esp
  4086b5:	out    dx,al
  4086b6:	lahf   
  4086b7:	les    esp,FWORD PTR [edi-0x3ecf5110]
  4086bd:	mov    dh,0x52
  4086bf:	dec    esi
  4086c0:	rcl    DWORD PTR cs:[edx+ecx*4-0x5676f895],cl
  4086c8:	add    esi,DWORD PTR [ebx+0x76]
  4086cb:	xchg   ecx,eax
  4086cc:	pop    edx
  4086cd:	out    dx,eax
  4086ce:	ss ret 0x43d2
  4086d2:	xchg   ecx,eax
  4086d3:	cmp    ah,0x77
  4086d6:	mov    ebp,0xdc2750c2
  4086db:	imul   esp,DWORD PTR [edx-0x16f124de],0xffffffd0
  4086e2:	mov    ah,0x88
  4086e4:	adc    dh,ah
  4086e6:	xchg   edx,eax
  4086e7:	sti    
  4086e8:	push   ss
  4086e9:	in     eax,0xbd
  4086eb:	(bad)  
  4086ec:	in     al,0xd3
  4086ee:	adc    ch,BYTE PTR [edx-0x34]
  4086f1:	int3   
  4086f2:	call   0xc393:0xc6367980
  4086f9:	pop    edi
  4086fa:	mov    al,0xca
  4086fc:	outs   dx,DWORD PTR ds:[esi]
  4086fd:	pop    edi
  4086fe:	pop    ds
  4086ff:	xor    BYTE PTR [ebp-0x6cec07aa],al
  408705:	push   eax
  408706:	std    
  408707:	std    
  408708:	std    
  408709:	jg     0x408690
  40870b:	fld    DWORD PTR [edx]
  40870d:	or     al,0x2e
  40870f:	data16 lahf 
  408711:	pop    eax
  408712:	xor    ah,BYTE PTR [ebx-0x7a]
  408715:	xlat   BYTE PTR ds:[ebx]
  408716:	test   DWORD PTR [esi+ebx*8],0xb97ad601
  40871d:	add    ebp,DWORD PTR [ebx]
  40871f:	ret    
  408720:	cmp    esi,DWORD PTR [esp+edx*2]
  408723:	or     edi,ebp
  408725:	sti    
  408726:	dec    ebp
  408727:	pop    ds
  408728:	pop    DWORD PTR ds:0xb8e59e6
  40872e:	mov    esp,0x6d4eeee5
  408733:	aas    
  408734:	outs   dx,DWORD PTR ds:[esi]
  408735:	cmp    edi,DWORD PTR [ecx]
  408737:	mov    edi,0x95e74be1
  40873c:	mov    edx,0xaa3a40a1
  408741:	stos   BYTE PTR es:[edi],al
  408742:	repz dec ebx
  408744:	jmp    0x1e56:0x23c1c85f
  40874b:	adc    al,0x60
  40874d:	sub    eax,0xad24b52f
  408752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408753:	mov    bl,0xdb
  408755:	pop    ebx
  408756:	bnd jge 0x40877b
  408759:	sbb    ch,BYTE PTR [edi]
  40875b:	fadd   QWORD PTR [eax]
  40875d:	mov    cl,0x4e
  40875f:	mov    ebp,0x8ea45f45
  408764:	pop    eax
  408765:	xor    BYTE PTR [ebp+edi*8+0x44],dl
  408769:	(bad)  
  40876a:	in     eax,dx
  40876b:	pop    edx
  40876c:	aam    0x4f
  40876e:	inc    ebp
  40876f:	mov    DWORD PTR [edx],edi
  408771:	pop    ecx
  408772:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408773:	pop    edi
  408774:	pop    es
  408775:	inc    edx
  408776:	adc    eax,0xefb648c9
  40877b:	add    ecx,ebx
  40877d:	les    esp,FWORD PTR [ebp-0x75]
  408780:	or     al,0xd6
  408782:	cmp    eax,0x4ab58677
  408787:	sub    dh,BYTE PTR [edi]
  408789:	ret    0xb463
  40878c:	adc    eax,0x927105f9
  408791:	nop
  408792:	fnsave [edx]
  408794:	cmp    al,BYTE PTR [edi+0x45cb16b4]
  40879a:	inc    ebx
  40879b:	cmp    dh,BYTE PTR ds:0xea2bf689
  4087a1:	mov    ch,0x7c
  4087a3:	retf   0x960e
  4087a6:	or     esi,ebp
  4087a8:	aaa    
  4087a9:	sti    
  4087aa:	push   0x51f74765
  4087af:	adc    esi,edx
  4087b1:	aas    
  4087b2:	ret    0x9f78
  4087b5:	dec    ecx
  4087b6:	test   DWORD PTR [ecx],eax
  4087b8:	es mov bl,0x70
  4087bb:	loopne 0x4087aa
  4087bd:	daa    
  4087be:	pop    ebx
  4087bf:	rcl    BYTE PTR ss:[ecx+0x55be9b73],1
  4087c6:	cmp    bh,BYTE PTR [eax-0x10]
  4087c9:	stc    
  4087ca:	inc    esi
  4087cb:	imul   ecx,DWORD PTR [ecx-0x3c],0xffffff8e
  4087cf:	cmp    dh,dl
  4087d1:	cwde   
  4087d2:	mov    es,WORD PTR [ebx+0x70]
  4087d5:	cmc    
  4087d6:	add    bl,BYTE PTR [eax]
  4087d8:	jmp    0x91ddd254
  4087dd:	xchg   BYTE PTR [edi+eiz*2-0x1ad64a05],bl
  4087e4:	pop    ecx
  4087e5:	adc    eax,0x7de8db6a
  4087ea:	aas    
  4087eb:	mov    ebp,0xca928035
  4087f0:	fidivr DWORD PTR [ebp+0x49]
  4087f3:	cmp    al,0xc1
  4087f5:	dec    esi
  4087f6:	icebp  
  4087f7:	into   
  4087f8:	dec    edi
  4087f9:	mov    cl,0xc8
  4087fb:	push   edi
  4087fc:	mov    bl,0xa1
  4087fe:	xchg   ebx,eax
  4087ff:	pop    edi
  408800:	(bad)  
  408801:	ds adc al,0x38
  408804:	les    ebp,FWORD PTR ds:0x70e10f39
  40880a:	inc    eax
  40880b:	sahf   
  40880c:	stc    
  40880d:	nop
  40880e:	aaa    
  40880f:	mov    WORD PTR [ebx+0x51],?
  408812:	mov    al,ds:0xda7d3808
  408817:	inc    ebp
  408818:	pusha  
  408819:	pop    ebx
  40881a:	and    al,0xb2
  40881c:	push   es
  40881d:	xchg   ebx,eax
  40881e:	ror    esp,cl
  408820:	mov    esp,DWORD PTR [ecx-0x12]
  408823:	jns    0x4087f9
  408825:	jo     0x408871
  408827:	push   ss
  408828:	jne    0x40885a
  40882a:	cdq    
  40882b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40882c:	rcl    BYTE PTR [eax],cl
  40882e:	scas   eax,DWORD PTR es:[edi]
  40882f:	pop    ss
  408830:	push   es
  408831:	xchg   ah,dh
  408833:	push   es
  408834:	out    dx,al
  408835:	mov    dh,0xc1
  408837:	inc    esi
  408838:	out    dx,al
  408839:	dec    esp
  40883a:	or     DWORD PTR [ebp-0x2b7dd141],edx
  408840:	jmp    0x408849
  408842:	je     0x4088a2
  408844:	pop    esi
  408845:	xor    al,0x97
  408847:	push   ebx
  408848:	inc    esp
  408849:	cmp    eax,0xe7c985e4
  40884e:	cmc    
  40884f:	and    BYTE PTR [edi],bh
  408851:	dec    eax
  408852:	xlat   BYTE PTR ds:[ebx]
  408853:	ret    
  408854:	les    edx,FWORD PTR [eax-0x14]
  408857:	and    eax,0x66e4ad28
  40885c:	test   al,0xe7
  40885e:	repz pop di
  408861:	lahf   
  408862:	gs or  eax,0xe73033a2
  408868:	bound  esi,QWORD PTR [edi+0x60]
  40886b:	mov    al,ds:0x278cbccd
  408870:	inc    eax
  408871:	push   esp
  408872:	mov    esp,0x74415d02
  408877:	adc    al,0x1f
  408879:	sub    eax,DWORD PTR ds:0x726625bc
  40887f:	pop    esp
  408880:	out    0x5b,eax
  408882:	test   BYTE PTR [edi+0x7f],bl
  408885:	in     al,0x19
  408887:	jb     0x40880b
  408889:	aas    
  40888a:	mov    eax,0xef06e792
  40888f:	mov    cl,0xc4
  408891:	adc    eax,0x72d1b6d8
  408896:	push   ebp
  408897:	call   0x5dc60c2d
  40889c:	fild   WORD PTR [esi]
  40889e:	xor    al,0x8e
  4088a0:	ret    0xc62e
  4088a3:	lds    esi,FWORD PTR [esi]
  4088a5:	pop    esp
  4088a6:	and    ah,cl
  4088a8:	dec    edi
  4088a9:	stc    
  4088aa:	out    0x73,eax
  4088ac:	sbb    BYTE PTR [eax+0x5370ebb5],bh
  4088b2:	jmp    0x262d:0xc0a25c56
  4088b9:	sbb    BYTE PTR [eax],dl
  4088bb:	add    eax,0x2515be91
  4088c0:	jl     0x40892e
  4088c2:	mov    esp,0x4678ebdf
  4088c7:	lahf   
  4088c8:	inc    edx
  4088c9:	sbb    ebp,DWORD PTR [ebx+0x0]
  4088cc:	repnz in eax,0xee
  4088cf:	sub    dh,BYTE PTR [esi-0x7b29e4b8]
  4088d5:	pop    ss
  4088d6:	gs mov al,0x5f
  4088d9:	or     eax,DWORD PTR [edi-0x261a8b63]
  4088df:	sbb    bh,ch
  4088e1:	pop    eax
  4088e2:	repz xchg edi,eax
  4088e4:	inc    ecx
  4088e5:	cld    
  4088e6:	and    BYTE PTR [edi+0x5e],0xe7
  4088ea:	repnz pop ebx
  4088ec:	hlt    
  4088ed:	add    al,0x1b
  4088ef:	int    0x69
  4088f1:	test   DWORD PTR fs:[esi-0x4e],0x7b77c3d3
  4088f9:	scas   eax,DWORD PTR es:[edi]
  4088fa:	push   es
  4088fb:	pop    ss
  4088fc:	(bad)  
  4088fd:	(bad)  
  4088fe:	test   eax,0xf847efe6
  408903:	imul   ecx,DWORD PTR [ebp+0x3],0x7b
  408907:	sbb    DWORD PTR ds:0xba0b1315,ecx
  40890d:	mov    bh,0xe5
  40890f:	repnz mov cl,0xf7
  408912:	out    dx,eax
  408913:	scas   eax,DWORD PTR es:[edi]
  408914:	push   es
  408915:	ret    
  408916:	mov    edi,DWORD PTR [ecx+0x1d7cbd57]
  40891c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40891d:	and    ebx,DWORD PTR [ecx]
  40891f:	fucomp st(5)
  408922:	push   edi
  408924:	lea    edi,ds:0xccd60a30
  40892a:	daa    
  40892b:	popf   
  40892c:	mov    bh,0x7d
  40892e:	or     ebp,DWORD PTR ds:0x1673af97
  408934:	push   ecx
  408935:	shl    BYTE PTR [edx-0x2124b922],0xc1
  40893c:	daa    
  40893d:	fadd   QWORD PTR [ebx-0x59eb112c]
  408943:	mov    ah,bl
  408945:	xchg   ch,al
  408947:	lahf   
  408948:	adc    eax,0x871e0a8f
  40894d:	xor    eax,0xb01b0068
  408953:	scas   eax,DWORD PTR es:[edi]
  408954:	sbb    ah,0xa8
  408957:	pop    ecx
  408958:	shl    BYTE PTR [eax-0x2a],0x28
  40895c:	xlat   BYTE PTR ds:[ebx]
  40895d:	iret   
  40895e:	jae    0x408945
  408960:	daa    
  408961:	push   ebx
  408962:	repnz shl BYTE PTR [esi-0x27],cl
  408966:	in     eax,0xba
  408968:	jne    0x4089ce
  40896a:	cld    
  40896b:	jnp    0x40899f
  40896d:	cmp    eax,ecx
  40896f:	lods   eax,DWORD PTR ds:[esi]
  408970:	and    al,0xbe
  408972:	mov    ebp,0x181ac137
  408977:	pop    ds
  408978:	sbb    al,0x2e
  40897a:	xlat   BYTE PTR ds:[ebx]
  40897b:	(bad)  
  40897d:	jno    0x40894b
  40897f:	mov    ch,0x7c
  408981:	test   BYTE PTR [ebp-0x18780889],bl
  408987:	add    al,0xf6
  408989:	stc    
  40898a:	add    DWORD PTR cs:[ebx],ebp
  40898d:	cmc    
  40898e:	sbb    DWORD PTR [edx],0xb45f6bba
  408994:	popa   
  408995:	daa    
  408996:	or     ecx,esp
  408998:	mov    eax,ds:0x9298636e
  40899d:	xchg   edx,eax
  40899e:	add    eax,0x7c88f084
  4089a3:	jbe    0x4089d2
  4089a5:	push   ss
  4089a6:	sbb    al,0x45
  4089a8:	mov    al,ds:0xd8001d47
  4089ad:	call   0x9c43:0x94de9f61
  4089b4:	or     al,0xe8
  4089b6:	mov    dh,0x26
  4089b8:	jle    0x408974
  4089ba:	stos   DWORD PTR es:[edi],eax
  4089bb:	test   DWORD PTR [esi+0x47],ebp
  4089be:	mov    eax,ds:0xf2f5ed59
  4089c3:	jp     0x4089ca
  4089c5:	xlat   BYTE PTR ds:[ebx]
  4089c6:	ja     0x4089be
  4089c8:	fxch   st(5)
  4089ca:	mov    edx,0x7fa30b55
  4089cf:	scas   eax,DWORD PTR es:[edi]
  4089d0:	iret   
  4089d1:	xor    al,0x51
  4089d3:	xchg   ebx,eax
  4089d4:	mov    esi,0x66e2e0fc
  4089d9:	and    ah,0x59
  4089dc:	lods   al,BYTE PTR ds:[esi]
  4089dd:	lds    ebx,FWORD PTR [edx]
  4089df:	mov    ebx,0xa451caa
  4089e4:	pusha  
  4089e5:	xchg   esp,eax
  4089e6:	jecxz  0x408a5a
  4089e8:	out    dx,al
  4089e9:	jns    0x4089dc
  4089eb:	add    eax,DWORD PTR [eax+0x26]
  4089ee:	cdq    
  4089ef:	inc    eax
  4089f0:	mov    ds:0x2e9f61ee,eax
  4089f5:	idiv   BYTE PTR [edi-0x32]
  4089f8:	and    al,0xcd
  4089fa:	inc    edi
  4089fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089fc:	push   si
  4089fe:	cmp    BYTE PTR [ebx],bh
  408a00:	sub    eax,0xe0ec5e80
  408a05:	xlat   BYTE PTR ds:[ebx]
  408a06:	pop    esp
  408a07:	push   ebp
  408a08:	jnp    0x4089e4
  408a0a:	enter  0x10d0,0xe8
  408a0e:	scas   eax,DWORD PTR es:[edi]
  408a0f:	arpl   WORD PTR [ecx-0x3d],sp
  408a12:	inc    ecx
  408a13:	or     DWORD PTR [edi-0x6f709f58],esi
  408a19:	hlt    
  408a1a:	fldenv [ebx-0x45]
  408a1d:	loopne 0x408a1a
  408a1f:	aad    0x14
  408a21:	cmc    
  408a22:	pop    edx
  408a23:	fnstenv [ebx]
  408a25:	xor    BYTE PTR [edi],0x47
  408a28:	adc    ebp,0x4c153f6
  408a2e:	push   edi
  408a2f:	jl     0x4089e8
  408a31:	push   cs
  408a32:	adc    eax,0x6fea8f3
  408a37:	xchg   ebp,eax
  408a38:	adc    eax,0x31310bdf
  408a3d:	(bad)  
  408a3e:	out    0x63,eax
  408a40:	xchg   ecx,eax
  408a41:	or     ecx,DWORD PTR [edx-0xc5b7613]
  408a47:	jle    0x408a46
  408a49:	out    0x9,eax
  408a4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a4c:	rol    bl,0xaf
  408a4f:	pop    edi
  408a50:	cwde   
  408a51:	cmp    DWORD PTR [esi+0x7b377d01],ebp
  408a57:	jbe    0x408a52
  408a59:	xchg   esi,eax
  408a5a:	inc    esi
  408a5b:	mov    cs,WORD PTR [ecx]
  408a5d:	stos   DWORD PTR es:[edi],eax
  408a5e:	sbb    DWORD PTR [edi],0x3298ef2d
  408a64:	outs   dx,BYTE PTR ds:[esi]
  408a65:	mov    esi,0x36a32341
  408a6a:	int3   
  408a6b:	ins    DWORD PTR es:[edi],dx
  408a6c:	loope  0x408ad3
  408a6e:	mov    bh,0x1f
  408a70:	mov    ds:0x5475a78f,eax
  408a75:	add    al,0x4a
  408a77:	and    dh,bl
  408a79:	or     al,0x12
  408a7b:	jge    0x408ab6
  408a7d:	shr    BYTE PTR [edx+ebp*4-0x1aaa5d12],0x75
  408a85:	adc    al,0xf
  408a87:	inc    ecx
  408a88:	add    edi,ebp
  408a8a:	push   edx
  408a8b:	push   cs
  408a8c:	jns    0x408ac9
  408a8e:	lods   al,BYTE PTR ds:[esi]
  408a8f:	into   
  408a90:	inc    ecx
  408a91:	and    eax,0xc45d654
  408a96:	xor    DWORD PTR ds:0x70fb372b,eax
  408a9c:	pop    es
  408a9d:	push   ebp
  408a9e:	jecxz  0x408a57
  408aa0:	div    DWORD PTR [ebx+0x6b]
  408aa3:	pusha  
  408aa4:	addr16 push ebp
  408aa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408aa7:	out    0x78,al
  408aa9:	call   0xe7f5:0x38539697
  408ab0:	aas    
  408ab1:	mov    ds:0x1cf56be6,al
  408ab6:	daa    
  408ab7:	adc    edi,DWORD PTR ds:0x19fd78f0
  408abd:	pop    es
  408abe:	mov    WORD PTR ds:0xe8d12d53,fs
  408ac4:	test   DWORD PTR [ebp+eiz*1-0x6],esp
  408ac8:	sti    
  408ac9:	xor    BYTE PTR [edi+0x782f66ed],al
  408acf:	(bad)  
  408ad0:	sbb    BYTE PTR ds:0x30ecff37,al
  408ad6:	mov    al,ds:0x8ce9bc58
  408adb:	ds sahf 
  408add:	cmc    
  408ade:	aad    0x54
  408ae0:	sub    ebp,ecx
  408ae2:	pop    DWORD PTR [edx+esi*4-0x76]
  408ae6:	push   es
  408ae7:	in     al,dx
  408ae8:	outs   dx,BYTE PTR ds:[esi]
  408ae9:	stos   BYTE PTR es:[edi],al
  408aea:	jmp    0x591:0x50a6637c
  408af1:	aam    0xf6
  408af3:	lahf   
  408af4:	mov    ebp,0xa6c3ff10
  408af9:	xor    eax,0xe4c7d5a7
  408afe:	or     ebx,0x8e6f2a5c
  408b04:	cmc    
  408b05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b06:	ret    
  408b07:	mov    ebp,0x54af451b
  408b0c:	call   0x9ae4:0xe330068c
  408b13:	pushf  
  408b14:	jns    0x408b3a
  408b16:	cld    
  408b17:	adc    al,BYTE PTR [edx+0x3130e6a8]
  408b1d:	mov    ds:0x11357654,eax
  408b22:	add    ch,cl
  408b24:	sub    BYTE PTR [esi-0x80],dl
  408b27:	xchg   ebp,eax
  408b28:	gs inc ebx
  408b2a:	sbb    esp,DWORD PTR [eax-0x20]
  408b2d:	sbb    al,0xb9
  408b2f:	xchg   ebx,eax
  408b30:	xchg   edx,eax
  408b31:	xchg   edx,edi
  408b33:	xchg   DWORD PTR [eax],ebx
  408b35:	pop    esp
  408b36:	ins    DWORD PTR es:[edi],dx
  408b37:	outs   dx,DWORD PTR ds:[esi]
  408b38:	inc    esp
  408b39:	mov    dh,0x7c
  408b3b:	push   es
  408b3c:	xchg   ebp,eax
  408b3d:	push   esp
  408b3e:	pushf  
  408b3f:	stc    
  408b40:	mov    eax,0xc8b5a4b
  408b45:	out    dx,al
  408b46:	(bad)  
  408b47:	xor    al,0x1c
  408b49:	retf   0x4b7a
  408b4c:	lea    esp,[esi]
  408b4e:	mov    edx,0xd8fae313
  408b53:	loop   0x408ae9
  408b55:	or     BYTE PTR [edx],dh
  408b57:	mov    eax,0x913e6b82
  408b5c:	lods   eax,DWORD PTR ds:[esi]
  408b5d:	sub    al,0x3d
  408b5f:	out    0xfa,al
  408b61:	cmp    BYTE PTR [edx-0x37],bh
  408b64:	sub    al,0xed
  408b66:	imul   ebx,DWORD PTR [ebp-0x19f1c95a],0x4c
  408b6d:	jne    0x408b96
  408b6f:	arpl   WORD PTR [eax-0x21],sp
  408b72:	mov    edx,0xf8ae4a29
  408b77:	jmp    0xcc61:0x214329cc
  408b7e:	ja     0x408b88
  408b80:	jns    0x408bf3
  408b82:	ins    DWORD PTR es:[edi],dx
  408b83:	add    al,0x82
  408b85:	pop    ds
  408b86:	mov    dl,0x65
  408b88:	cmp    eax,0xe6a83580
  408b8d:	xchg   esp,eax
  408b8e:	hlt    
  408b8f:	ins    BYTE PTR es:[edi],dx
  408b90:	push   eax
  408b91:	(bad)  
  408b92:	mov    esp,0x44e2d528
  408b97:	jge    0x408b51
  408b99:	jbe    0x408ba3
  408b9b:	mov    ch,0x44
  408b9d:	out    dx,al
  408b9e:	ins    BYTE PTR es:[edi],dx
  408b9f:	xchg   DWORD PTR [eax],ebp
  408ba1:	jecxz  0x408c1a
  408ba3:	dec    ebx
  408ba4:	jne    0x408c25
  408ba6:	adc    dl,BYTE PTR [ebp+0x46]
  408ba9:	mov    edx,0xef9785a3
  408bae:	popa   
  408baf:	rcr    DWORD PTR [esi-0x1a],0x19
  408bb3:	xor    ch,bh
  408bb5:	int    0x9a
  408bb7:	cs (bad) 
  408bb9:	js     0x408bee
  408bbb:	cmc    
  408bbc:	(bad)  
  408bbd:	jg     0x408baa
  408bbf:	xor    al,0xe9
  408bc1:	jo     0x408c21
  408bc3:	outs   dx,DWORD PTR ds:[esi]
  408bc4:	sub    edi,DWORD PTR [edx+0x3b]
  408bc7:	inc    esp
  408bc8:	sub    bl,BYTE PTR [eax+0x3c755cef]
  408bce:	fidiv  WORD PTR [edx-0x19016787]
  408bd4:	shl    BYTE PTR [ebp-0x7b],cl
  408bd7:	mov    al,0x9e
  408bd9:	hlt    
  408bda:	adc    al,dl
  408bdc:	dec    ecx
  408bdd:	retf   
  408bde:	mov    ah,0xe9
  408be0:	gs sub al,0x8d
  408be3:	retf   0xd528
  408be6:	out    dx,eax
  408be7:	outs   dx,BYTE PTR ds:[esi]
  408be8:	call   0x96f19af4
  408bed:	ret    
  408bee:	xchg   edi,eax
  408bef:	adc    bh,ah
  408bf1:	fs jg  0x408c1a
  408bf4:	ins    BYTE PTR es:[edi],dx
  408bf5:	mov    esi,DWORD PTR [ecx]
  408bf7:	enter  0x349f,0xf2
  408bfb:	and    BYTE PTR [ebp+esi*1-0x2b],ch
  408bff:	mov    DWORD PTR [ebp-0x5e1c3234],esp
  408c05:	int3   
  408c06:	cmp    eax,0x54fb3274
  408c0b:	cmp    dh,bl
  408c0d:	sub    al,0x46
  408c0f:	arpl   sp,sp
  408c11:	(bad)
  408c15:	dec    esi
  408c16:	xchg   edx,eax
  408c17:	enter  0x2e,0xbd
  408c1b:	add    ah,BYTE PTR [ecx]
  408c1d:	outs   dx,BYTE PTR ds:[esi]
  408c1e:	arpl   WORD PTR [ecx],bp
  408c20:	sbb    DWORD PTR [esi+0x3f],ebx
  408c23:	jp     0x408ca0
  408c25:	xor    ch,BYTE PTR [eax+0x2d1ae55a]
  408c2b:	xor    esp,DWORD PTR [esi+edx*4]
  408c2e:	xchg   ebx,eax
  408c2f:	imul   ebx,ebp,0x65
  408c32:	mov    edi,0xb0b0cf0f
  408c37:	sub    edx,edx
  408c39:	icebp  
  408c3a:	sub    al,0x92
  408c3c:	inc    edi
  408c3d:	xor    WORD PTR [edi-0x72615805],ax
  408c44:	loopne 0x408cb3
  408c46:	adc    al,0x28
  408c48:	loop   0x408c8c
  408c4a:	rcr    DWORD PTR [ecx],0x5
  408c4d:	bts    ecx,esp
  408c50:	scas   al,BYTE PTR es:[edi]
  408c51:	add    eax,0xe6a035f8
  408c56:	call   0xa715:0x2f508495
  408c5d:	std    
  408c5e:	cmp    BYTE PTR [edx],0x54
  408c61:	inc    esp
  408c62:	pop    ss
  408c63:	or     DWORD PTR [esi+0x57bfe59d],ecx
  408c69:	mov    edi,0x96ad51f6
  408c6e:	imul   ebx,DWORD PTR [ecx+0x2d],0xd106926e
  408c75:	mov    edx,0x4d530416
  408c7a:	mov    eax,ds:0xb9841309
  408c7f:	bound  edx,QWORD PTR [ebp-0x77]
  408c82:	lods   eax,DWORD PTR ds:[esi]
  408c83:	pop    es
  408c84:	inc    ecx
  408c85:	in     eax,dx
  408c86:	adc    al,0x58
  408c88:	int3   
  408c89:	iret   
  408c8a:	mov    dl,0xa0
  408c8c:	xchg   ecx,eax
  408c8d:	aas    
  408c8e:	adc    eax,0xa0b30073
  408c93:	(bad)  
  408c94:	dec    esi
  408c95:	xchg   edx,eax
  408c96:	jns    0x408d12
  408c98:	test   DWORD PTR [ebx],esi
  408c9a:	adc    ebp,DWORD PTR [ebx-0x5a2a5c38]
  408ca0:	mov    ds,WORD PTR ds:0x4a060684
  408ca6:	or     BYTE PTR [eax+0x59677232],bl
  408cac:	jnp    0x408d12
  408cae:	xchg   edx,eax
  408caf:	jg     0x408d03
  408cb1:	mov    bh,0x25
  408cb3:	inc    esp
  408cb4:	retf   
  408cb5:	sbb    DWORD PTR [ebp+0x94318e6],edi
  408cbb:	lea    ecx,[esi+0x54]
  408cbe:	stos   BYTE PTR es:[edi],al
  408cbf:	jle    0x408c8a
  408cc1:	mov    ebx,0xd126006f
  408cc6:	push   ds
  408cc7:	retf   
  408cc8:	cli    
  408cc9:	pop    ss
  408cca:	mov    edi,0x90a1a8a7
  408ccf:	jo     0x408cb0
  408cd1:	dec    esp
  408cd2:	pop    edi
  408cd3:	xchg   DWORD PTR [esi],edi
  408cd5:	xor    al,0x73
  408cd7:	jge    0x408cc4
  408cd9:	jnp    0x408d3d
  408cdb:	push   edi
  408cdc:	xchg   esi,eax
  408cdd:	inc    eax
  408cde:	dec    eax
  408cdf:	inc    ebx
  408ce0:	aaa    
  408ce1:	push   ecx
  408ce2:	stos   DWORD PTR es:[edi],eax
  408ce3:	push   0x3e
  408ce5:	sbb    DWORD PTR [edx-0x3c],esi
  408ce8:	sahf   
  408ce9:	bound  esp,QWORD PTR [ecx-0x674aacfe]
  408cef:	add    edi,ebp
  408cf1:	jno    0x408c87
  408cf3:	loopne 0x408c8b
  408cf5:	jmp    0x4eb2:0x15fc17d4
  408cfc:	outs   dx,DWORD PTR ds:[esi]
  408cfd:	addr16 int 0x33
  408d00:	mov    WORD PTR [edx],gs
  408d02:	popa   
  408d03:	mov    ebx,0x7ea32a6a
  408d08:	mov    eax,0x997cf74d
  408d0d:	sub    ah,0x5c
  408d10:	cdq    
  408d11:	stos   BYTE PTR es:[edi],al
  408d12:	dec    ebx
  408d13:	outs   dx,BYTE PTR ds:[esi]
  408d14:	cmp    ebx,DWORD PTR [ebp+edi*4+0x73]
  408d18:	shl    cl,cl
  408d1a:	jp     0x408cf6
  408d1c:	or     al,BYTE PTR [ecx+0x31]
  408d1f:	lods   al,BYTE PTR ds:[esi]
  408d20:	add    BYTE PTR [edi+ebx*2+0x2f],bh
  408d24:	fimul  WORD PTR [edx]
  408d26:	into   
  408d27:	call   0x3114c68b
  408d2c:	imul   edx,DWORD PTR [ecx],0xffffffd2
  408d2f:	push   cs
  408d30:	repz mov edx,0x790d2c92
  408d36:	fisub  DWORD PTR [eax]
  408d38:	out    dx,al
  408d39:	mov    cl,0xcf
  408d3b:	mov    bh,0xbd
  408d3d:	push   ecx
  408d3e:	cmp    dl,dh
  408d40:	inc    edx
  408d41:	mov    al,0xaf
  408d43:	in     eax,0x6e
  408d45:	dec    eax
  408d46:	out    dx,al
  408d47:	imul   ecx,DWORD PTR [esi-0x33],0xfffffffc
  408d4b:	inc    esp
  408d4c:	cmc    
  408d4d:	ret    
  408d4e:	(bad)  
  408d4f:	sub    eax,0x508d870d
  408d54:	sar    ebp,cl
  408d56:	sbb    esi,DWORD PTR [esi]
  408d58:	hlt    
  408d59:	imul   eax,DWORD PTR [edx],0xb48ed58
  408d5f:	and    eax,0x9c756a43
  408d64:	(bad)  
  408d65:	aad    0x30
  408d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d68:	lahf   
  408d69:	popa   
  408d6a:	xlat   BYTE PTR ds:[ebx]
  408d6b:	(bad)  [ecx+0x48]
  408d6e:	jecxz  0x408cff
  408d70:	ror    BYTE PTR [edi],cl
  408d72:	fild   WORD PTR [edi+0x5b]
  408d75:	mov    DWORD PTR [ebx],esi
  408d77:	fbld   TBYTE PTR [eax+0x6610f266]
  408d7d:	jp     0x8945cddb
  408d83:	sbb    DWORD PTR [edx],edx
  408d85:	jp     0x408d84
  408d87:	dec    eax
  408d88:	adc    ecx,DWORD PTR [esi]
  408d8a:	sub    al,0xba
  408d8c:	pushf  
  408d8d:	jb     0x408d7e
  408d8f:	fldcw  WORD PTR [ecx+0x5e]
  408d92:	lods   al,BYTE PTR ds:[esi]
  408d93:	dec    eax
  408d94:	adc    DWORD PTR [esi-0x79],esp
  408d97:	push   0x62
  408d99:	imul   edi,DWORD PTR [edi-0x306b949a],0x77
  408da0:	push   edi
  408da1:	sbb    cl,dh
  408da3:	or     ebx,DWORD PTR [eax]
  408da5:	cwde   
  408da6:	inc    edi
  408da7:	dec    ecx
  408da8:	hlt    
  408da9:	push   eax
  408daa:	mov    al,0xf6
  408dac:	xor    al,bh
  408dae:	xchg   DWORD PTR [esp+edx*8-0x7e],edi
  408db2:	int3   
  408db3:	adc    edi,esi
  408db5:	xchg   ecx,eax
  408db6:	mov    cl,0xbe
  408db8:	and    al,BYTE PTR [esi-0x20608c36]
  408dbe:	sahf   
  408dbf:	add    DWORD PTR ds:0x97d7689e,eax
  408dc5:	ss pop es
  408dc7:	dec    edx
  408dc8:	adc    BYTE PTR [ecx-0x7dd0f334],cl
  408dce:	je     0x408dbe
  408dd0:	out    dx,al
  408dd1:	stos   BYTE PTR es:[edi],al
  408dd2:	jecxz  0x408d96
  408dd4:	rcl    DWORD PTR [edi-0x11],1
  408dd7:	lods   eax,DWORD PTR ds:[esi]
  408dd8:	inc    esi
  408dd9:	rcl    DWORD PTR [edi+0x24faa0fa],cl
  408ddf:	int    0x5a
  408de1:	leave  
  408de2:	nop
  408de3:	sub    DWORD PTR [ebx],0x29a4cfad
  408de9:	loopne 0x408dcb
  408deb:	lock inc eax
  408ded:	sahf   
  408dee:	cmp    al,0x40
  408df0:	mov    es,edi
  408df2:	mov    edx,0x2f5d7910
  408df7:	in     eax,dx
  408df8:	push   es
  408df9:	mov    eax,0xf433ad2d
  408dfe:	out    dx,al
  408dff:	xchg   edi,eax
  408e00:	dec    eax
  408e01:	push   eax
  408e02:	mov    eax,0x14c5728e
  408e07:	add    ah,dl
  408e09:	jle    0x408da2
  408e0b:	cmp    BYTE PTR [esi+0x4],bh
  408e0e:	mov    ebx,0x3f1ed50c
  408e13:	mov    WORD PTR [ecx+0x5b],es
  408e16:	inc    ebx
  408e17:	or     eax,0x2ff1f76a
  408e1c:	sub    eax,ecx
  408e1e:	dec    eax
  408e1f:	adc    edi,DWORD PTR [eax+0x5a]
  408e22:	cmp    BYTE PTR [esi-0x2e38dcbe],bl
  408e28:	fild   QWORD PTR [ebx]
  408e2a:	xchg   edx,eax
  408e2b:	fld    TBYTE PTR [ecx+0x40]
  408e2e:	loop   0x408dc2
  408e30:	dec    esi
  408e31:	(bad)  
  408e32:	pop    ecx
  408e33:	imul   eax,edi,0x6f
  408e36:	mov    ds:0xc267a379,al
  408e3b:	ss mov esi,0x203281c
  408e41:	xor    ebp,DWORD PTR [ebp-0x50]
  408e44:	les    edx,FWORD PTR [edi]
  408e46:	adc    eax,0x1812aa9e
  408e4b:	xchg   edx,eax
  408e4c:	test   BYTE PTR [esi+0x44],bh
  408e4f:	add    BYTE PTR [ecx],dl
  408e51:	mov    ah,0x5f
  408e53:	imul   BYTE PTR [edx]
  408e55:	out    dx,al
  408e56:	inc    edi
  408e57:	xor    al,0x99
  408e59:	add    cl,dh
  408e5b:	shl    BYTE PTR [edi-0x19e7d124],0xbb
  408e62:	mov    edx,0x842f8ec1
  408e67:	jne    0x408ed6
  408e69:	push   cs
  408e6a:	cmp    DWORD PTR [esi-0x4220c4a4],esp
  408e70:	(bad)  
  408e71:	fidivr DWORD PTR [eax+0x3d]
  408e74:	ins    BYTE PTR es:[edi],dx
  408e75:	(bad)  
  408e76:	neg    BYTE PTR [edi+0x0]
  408e79:	mov    ebp,0x3d13c72b
  408e7e:	iret   
  408e7f:	adc    al,0x69
  408e81:	leave  
  408e82:	mov    al,0xd1
  408e84:	repnz scas al,BYTE PTR es:[edi]
  408e86:	mov    ds:0xcdcd118,al
  408e8b:	fsub   st,st(7)
  408e8d:	or     esp,DWORD PTR [ebp+0x7471fb20]
  408e93:	sub    eax,0xddc87bcf
  408e98:	pop    ebp
  408e99:	pop    ss
  408e9a:	inc    edx
  408e9b:	lods   al,BYTE PTR ds:[esi]
  408e9c:	adc    eax,0x8462a654
  408ea1:	adc    BYTE PTR fs:[ebx],cl
  408ea4:	scas   al,BYTE PTR es:[edi]
  408ea5:	sub    ebx,DWORD PTR [ebx-0x47]
  408ea8:	inc    ebp
  408ea9:	call   0x21c7:0xeac11a86
  408eb0:	ins    BYTE PTR es:[edi],dx
  408eb1:	and    eax,0xe3a4391c
  408eb6:	or     eax,ebp
  408eb8:	addr16 and al,0xe1
  408ebb:	(bad)  
  408ebd:	push   edi
  408ebe:	sbb    al,0xbd
  408ec0:	dec    DWORD PTR [edx+0x32ecfffb]
  408ec6:	mov    eax,ds:0x4776e829
  408ecb:	add    al,0x3b
  408ecd:	stos   BYTE PTR es:[edi],al
  408ece:	(bad)  
  408ecf:	cmp    BYTE PTR [edx+ebp*8+0x3357d660],bh
  408ed6:	mov    esi,0x601b8fdc
  408edb:	dec    edi
  408edc:	ret    
  408edd:	dec    esi
  408ede:	stos   DWORD PTR es:[edi],eax
  408edf:	mov    ds:0x1cbb824,eax
  408ee4:	(bad)  
  408ee5:	(bad)  
  408ee6:	(bad)  
  408ee7:	in     al,dx
  408ee8:	(bad)  [eax]
  408eea:	mov    ah,0xc4
  408eec:	popa   
  408eed:	out    0x98,al
  408eef:	mov    esi,0x387f888f
  408ef4:	les    ebp,FWORD PTR [edi+0x5c]
  408ef7:	loope  0x408e8a
  408ef9:	push   esi
  408efa:	lods   eax,DWORD PTR ds:[esi]
  408efb:	mov    cl,0xcb
  408efd:	into   
  408efe:	or     BYTE PTR [ebx+0x41],0x68
  408f02:	cdq    
  408f03:	push   ebx
  408f04:	(bad)  
  408f05:	fnstenv [esi+0x69372116]
  408f0b:	add    al,0x5c
  408f0d:	or     ch,dl
  408f0f:	fld    DWORD PTR [edi+0x4bb02cf9]
  408f15:	idiv   DWORD PTR [esi]
  408f17:	push   0xec13961d
  408f1c:	loope  0x408f2a
  408f1e:	clc    
  408f1f:	cmp    al,0xc4
  408f21:	dec    ebx
  408f22:	adc    eax,edi
  408f24:	pop    es
  408f25:	shr    DWORD PTR [esi-0x80],0x59
  408f29:	scas   al,BYTE PTR es:[edi]
  408f2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f2b:	ins    DWORD PTR es:[edi],dx
  408f2c:	xor    ah,bh
  408f2e:	aaa    
  408f2f:	jecxz  0x408f12
  408f31:	push   es
  408f32:	inc    ecx
  408f33:	inc    esi
  408f34:	sub    ebp,DWORD PTR [ebp-0x2e]
  408f37:	sub    al,BYTE PTR [edi]
  408f39:	ror    DWORD PTR [edi+0x2e],0xa5
  408f3d:	and    esp,DWORD PTR [edx+esi*4-0x38]
  408f41:	das    
  408f42:	fadd   DWORD PTR [ebp-0x26]
  408f45:	mov    ebx,0x280979e1
  408f4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f4b:	push   esi
  408f4c:	sub    al,0x9b
  408f4e:	repnz pop ds
  408f50:	fcom   QWORD PTR [edi+eax*8-0x7e]
  408f54:	in     eax,0x45
  408f56:	ss fdivrp st(4),st
  408f59:	and    ecx,DWORD PTR [ebp+0x39d6c326]
  408f5f:	shr    DWORD PTR [edx],1
  408f61:	and    BYTE PTR [ecx],bh
  408f63:	ret    0x3dad
  408f66:	ror    DWORD PTR [edx+0x2aa256bd],0xd4
  408f6d:	ss mov cl,0xc2
  408f70:	jbe    0x408fa2
  408f72:	pop    DWORD PTR [edi-0x67]
  408f75:	push   ecx
  408f76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f77:	jne    0x408f52
  408f79:	test   BYTE PTR [ecx],0xb4
  408f7c:	loopne 0x408f2a
  408f7e:	test   BYTE PTR [ebp+0x17],dl
  408f81:	pop    edx
  408f82:	cmp    al,0x8d
  408f84:	clc    
  408f85:	add    ah,ch
  408f87:	inc    esp
  408f88:	mov    al,ds:0xd401542a
  408f8d:	sbb    cl,BYTE PTR [ecx+0x73]
  408f90:	mov    dl,0x81
  408f92:	and    bh,BYTE PTR [ebx+0x161992ea]
  408f98:	adc    edi,DWORD PTR [eax]
  408f9a:	nop
  408f9b:	aad    0xed
  408f9d:	pusha  
  408f9e:	pop    ss
  408f9f:	sahf   
  408fa0:	jb     0x408fd7
  408fa2:	xchg   esi,eax
  408fa3:	mov    ds:0x32f22b9c,al
  408fa8:	mov    eax,ds:0x4dccad92
  408fad:	mov    edi,0xa8723761
  408fb2:	inc    esp
  408fb3:	jmp    0x305a:0xc775b367
  408fba:	mov    ah,bl
  408fbc:	mov    ebx,0xd0ee3072
  408fc1:	adc    ah,BYTE PTR [edi+0x5896f1c8]
  408fc7:	enter  0x7695,0xfd
  408fcb:	inc    edx
  408fcc:	cdq    
  408fcd:	push   edx
  408fce:	xchg   BYTE PTR [edx+0x6d79ed7a],bh
  408fd4:	fistp  QWORD PTR [ecx]
  408fd6:	add    eax,0xc4b829aa
  408fdb:	gs sbb esi,0xe2aa29cc
  408fe2:	inc    esp
  408fe3:	int3   
  408fe4:	ds call 0x8f8e1d55
  408fea:	cmp    DWORD PTR [eax],0x39
  408fed:	data16 (bad) 
  408fef:	popa   
  408ff0:	out    dx,eax
  408ff1:	push   esi
  408ff2:	ins    BYTE PTR es:[di],dx
  408ff4:	mov    ebx,0xdd82bb2d
  408ff9:	xchg   DWORD PTR [ecx],edx
  408ffb:	inc    ebx
  408ffc:	in     al,0x88
  408ffe:	adc    al,0xdb
  409000:	xchg   edi,eax
  409001:	scas   al,BYTE PTR es:[edi]
  409002:	jg     0x408fe2
  409004:	rol    BYTE PTR [eax+ecx*4-0x39c59f91],1
  40900b:	mov    eax,0x4308f219
  409010:	mov    ebp,0x67bb4527
  409015:	inc    edx
  409016:	ret    
  409017:	xlat   BYTE PTR ds:[ebx]
  409018:	in     al,dx
  409019:	out    0x68,al
  40901b:	mov    al,ds:0x9acb3e7d
  409020:	aas    
  409021:	pop    ebp
  409022:	sbb    ecx,DWORD PTR [ebx-0x7b9823d6]
  409028:	pop    esi
  409029:	cmc    
  40902a:	xchg   edx,eax
  40902b:	adc    eax,0x17c316f3
  409030:	sub    BYTE PTR [ebx-0x6563ffda],bl
  409036:	xchg   esp,eax
  409037:	mov    bh,0x11
  409039:	retf   0x602
  40903c:	aas    
  40903d:	and    al,0x91
  40903f:	mov    ebx,0xc5ccb2a5
  409044:	scas   eax,DWORD PTR es:[edi]
  409045:	xchg   ebx,eax
  409046:	and    DWORD PTR [esi+0x4d761a27],0xce80f0a
  409050:	mov    eax,ds:0xde2094ea
  409055:	jmp    0xe14e:0x2fc943cb
  40905c:	pop    ebp
  40905d:	dec    ebp
  40905e:	in     al,0xdb
  409060:	fidivr DWORD PTR [esi]
  409062:	out    dx,al
  409063:	cli    
  409064:	sbb    bh,0x52
  409067:	idiv   al
  409069:	(bad)  
  40906b:	sar    BYTE PTR ds:[ebx],cl
  40906e:	push   esp
  40906f:	retf   0x5b51
  409072:	les    ebp,FWORD PTR [edx+0x7e970589]
  409078:	cs stos BYTE PTR es:[edi],al
  40907a:	or     al,0xb7
  40907c:	ins    BYTE PTR es:[edi],dx
  40907d:	inc    ecx
  40907e:	test   DWORD PTR [esi],esp
  409080:	jl     0x40902f
  409082:	popa   
  409083:	jbe    0x409039
  409085:	loopne 0x409028
  409087:	adc    DWORD PTR [edi+edx*1],edi
  40908a:	hlt    
  40908b:	mov    ss,WORD PTR [esi+0x7]
  40908e:	sahf   
  40908f:	pusha  
  409090:	cmp    eax,0x26c8ccf9
  409095:	cmp    BYTE PTR [edx+ebx*8],cl
  409098:	rcr    BYTE PTR [ebx+ebp*8+0x44],0xaf
  40909d:	out    0x39,eax
  40909f:	addr16 dec ecx
  4090a1:	xor    al,BYTE PTR [eax-0x37]
  4090a4:	push   esi
  4090a5:	ds push esp
  4090a7:	xchg   DWORD PTR [edi],ebx
  4090a9:	mov    edi,0xcb93743a
  4090ae:	xor    ebp,ecx
  4090b0:	fisub  WORD PTR [edx+ebx*8-0x22]
  4090b4:	jle    0x409071
  4090b6:	push   edi
  4090b7:	sub    eax,0x53a0aa1d
  4090bc:	lahf   
  4090bd:	aad    0xd1
  4090bf:	push   eax
  4090c0:	cmp    BYTE PTR [ebx-0x12],dl
  4090c3:	jns    0x40913c
  4090c5:	icebp  
  4090c6:	or     al,0x9e
  4090c8:	cmp    DWORD PTR [edi-0x3efb4f8c],edi
  4090ce:	cwde   
  4090cf:	fild   DWORD PTR [ebp+0x17]
  4090d2:	leave  
  4090d3:	idiv   BYTE PTR [ecx-0x66da3268]
  4090d9:	pushf  
  4090da:	dec    edx
  4090db:	das    
  4090dc:	mov    al,ds:0xd951bfc9
  4090e1:	aas    
  4090e2:	aaa    
  4090e3:	arpl   WORD PTR [edi-0x40695fa],si
  4090e9:	jb     0x409149
  4090eb:	imul   esp,DWORD PTR [esi+0xe],0xffffffe0
  4090ef:	jnp    0x4090a5
  4090f1:	inc    edx
  4090f2:	int3   
  4090f3:	test   DWORD PTR fs:[edi],edx
  4090f6:	mov    ah,0x29
  4090f8:	cmp    dh,ch
  4090fa:	cmp    eax,0x8472c33b
  4090ff:	adc    dl,BYTE PTR [edx+eax*1]
  409102:	jge    0x409171
  409104:	xchg   ebp,eax
  409105:	add    BYTE PTR [ebx],bh
  409107:	sbb    BYTE PTR [edi-0x58d04e8f],dl
  40910d:	lock ins BYTE PTR es:[edi],dx
  40910f:	and    ah,bl
  409111:	sub    DWORD PTR [eax-0x6ad4ca54],ebp
  409117:	js     0x409140
  409119:	push   cs
  40911a:	daa    
  40911b:	shl    edx,0xdc
  40911e:	xor    edi,edi
  409120:	in     al,dx
  409121:	xor    bh,al
  409123:	fdiv   st(4),st
  409125:	sti    
  409126:	jbe    0x40919f
  409128:	int3   
  409129:	test   DWORD PTR ds:[ecx+eax*4+0x2be88be4],esi
  409131:	add    DWORD PTR [eax],eax
  409133:	mov    DWORD PTR [ebx-0x51],eax
  409136:	add    edi,DWORD PTR [ebx+0x1a]
  409139:	ficomp WORD PTR [ebx]
  40913b:	stos   DWORD PTR es:[edi],eax
  40913c:	cmp    BYTE PTR [edx-0x55],dh
  40913f:	inc    ebp
  409140:	inc    edi
  409141:	ret    
  409142:	mov    esp,edi
  409144:	jns    0x4091b4
  409146:	sub    ebx,ebx
  409148:	xchg   edx,eax
  409149:	es jo  0x40915c
  40914c:	clc    
  40914d:	fnstenv [ecx-0x53]
  409150:	enter  0x5805,0xc6
  409154:	sub    DWORD PTR [ebp+0x51],0x6cdf4e92
  40915b:	sub    dl,BYTE PTR [ebp-0x22b434b5]
  409161:	adc    BYTE PTR [eax],cl
  409163:	xor    ebx,0x56
  409166:	imul   ebp,DWORD PTR [edx],0x25
  409169:	dec    esi
  40916a:	arpl   WORD PTR [ecx-0x1da34245],sp
  409170:	dec    edi
  409171:	pop    es
  409172:	lods   eax,DWORD PTR ds:[esi]
  409173:	outs   dx,BYTE PTR ds:[esi]
  409174:	fnstcw WORD PTR [esi+0x4f5c7f9e]
  40917a:	fldcw  WORD PTR [ebp-0x66]
  40917d:	and    ch,BYTE PTR [ecx+0x749ed78c]
  409183:	pop    ds
  409184:	inc    edi
  409185:	test   al,0xeb
  409187:	ret    
  409188:	mov    bl,0x5f
  40918a:	cmp    DWORD PTR [ecx],eax
  40918c:	(bad)  
  40918d:	cmp    al,BYTE PTR [ecx]
  40918f:	fs mov al,0xef
  409192:	fnstsw ax
  409194:	fnsave [eax+0x68c445c6]
  40919a:	jno    0x4091d7
  40919c:	xchg   esp,eax
  40919d:	mov    bh,0x98
  40919f:	push   cs
  4091a0:	jl     0x40921e
  4091a2:	lahf   
  4091a3:	mov    al,ds:0x54a8d21b
  4091a8:	mov    ds:0x75dcdfc8,eax
  4091ad:	sub    BYTE PTR [edi-0x5e57a4e9],dl
  4091b3:	xchg   ebx,eax
  4091b4:	or     BYTE PTR [ebp+0x6d],al
  4091b7:	cmp    eax,0x93732a55
  4091bc:	aaa    
  4091bd:	jecxz  0x4091cf
  4091bf:	loopne 0x409149
  4091c1:	add    dl,BYTE PTR [esi+0x57da200b]
  4091c7:	adc    DWORD PTR [eax-0x43],eax
  4091ca:	stos   BYTE PTR es:[edi],al
  4091cb:	sub    eax,0x63aec6da
  4091d0:	xor    eax,0x42ef5028
  4091d5:	sbb    BYTE PTR [edi+ecx*4-0x5da054f],al
  4091dc:	mov    BYTE PTR [esi],ah
  4091de:	xlat   BYTE PTR ds:[ebx]
  4091df:	and    DWORD PTR [ebx-0x71f02c93],ebp
  4091e5:	ja     0x409240
  4091e7:	xchg   ebx,eax
  4091e8:	and    eax,0x6129c457
  4091ed:	or     ah,dh
  4091ef:	dec    eax
  4091f0:	mov    cl,0x0
  4091f2:	pop    sp
  4091f4:	leave  
  4091f5:	stos   DWORD PTR es:[edi],eax
  4091f6:	outs   dx,BYTE PTR ds:[esi]
  4091f7:	push   edx
  4091f8:	data16 je 0x40925f
  4091fb:	xchg   ebp,eax
  4091fc:	and    ecx,DWORD PTR [edi+0x1d]
  4091ff:	ret    
  409200:	xor    al,0x89
  409202:	and    eax,0x8f8eab47
  409207:	test   al,0xa2
  409209:	dec    eax
  40920a:	cwde   
  40920b:	push   ecx
  40920c:	in     eax,0x48
  40920e:	leave  
  40920f:	xor    edi,DWORD PTR [edi-0x720caf5b]
  409215:	mov    edi,DWORD PTR [ecx-0x1496d307]
  40921b:	in     al,dx
  40921c:	and    esp,DWORD PTR [edi-0x45]
  40921f:	pusha  
  409220:	push   ecx
  409221:	jb     0x4091ee
  409223:	push   0x601c653d
  409228:	and    ebx,DWORD PTR [edx+eax*8-0x4e]
  40922c:	add    edx,esp
  40922e:	lods   al,BYTE PTR ds:[esi]
  40922f:	cmp    al,0xde
  409231:	mov    ebx,esi
  409233:	inc    esi
  409234:	jno    0x4091f7
  409236:	into   
  409237:	push   ebx
  409238:	imul   esp,DWORD PTR [edx],0x2c
  40923b:	dec    eax
  40923c:	mul    BYTE PTR [edx-0x3b]
  40923f:	jl     0x40926d
  409241:	pop    ecx
  409242:	mov    edx,0x7bbd8f3
  409247:	div    BYTE PTR [ebx]
  409249:	sbb    ch,BYTE PTR [ecx-0x6f]
  40924c:	mov    esp,0x3ffcceb2
  409251:	inc    esi
  409252:	sar    BYTE PTR [edi-0x64],1
  409255:	and    BYTE PTR [eax+0x66d5a95],cl
  40925b:	mov    al,ds:0xe6794e81
  409260:	inc    edx
  409261:	pop    esp
  409262:	dec    ebp
  409263:	shl    edi,cl
  409265:	mov    al,0x94
  409267:	stc    
  409268:	retf   
  409269:	adc    cl,BYTE PTR [ecx-0x75895fa1]
  40926f:	aas    
  409270:	daa    
  409271:	test   eax,0x3ace4cd7
  409276:	jg     0x4092a7
  409278:	stos   DWORD PTR es:[edi],eax
  409279:	aaa    
  40927a:	dec    ebx
  40927b:	push   edx
  40927c:	les    ebp,FWORD PTR ds:[edx]
  40927f:	ror    BYTE PTR [ecx+ecx*8-0x620b397a],1
  409286:	lock cmp DWORD PTR [esi-0xc],eax
  40928a:	push   0x71
  40928c:	mov    DWORD PTR [ebp+0x1f],edi
  40928f:	push   ebx
  409290:	xchg   BYTE PTR [edx-0xd],dl
  409293:	addr16 lahf 
  409295:	mov    ecx,0x929d8402
  40929a:	bound  edi,QWORD PTR [eax]
  40929c:	js     0x4092d6
  40929e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40929f:	daa    
  4092a0:	adc    BYTE PTR [edi-0xc],dh
  4092a3:	mov    DWORD PTR [ebx],ebx
  4092a5:	je     0x4092d1
  4092a7:	(bad)
  4092ab:	and    BYTE PTR ds:0x7c049c52,cl
  4092b1:	sub    ebx,0xbd40d84d
  4092b7:	sub    edx,0x3b
  4092ba:	test   eax,0xef30ae67
  4092bf:	call   0x89d4682a
  4092c4:	inc    edi
  4092c5:	stos   BYTE PTR es:[edi],al
  4092c6:	fcomp  DWORD PTR [ecx+0x8]
  4092c9:	mov    ebp,DWORD PTR [ecx+0x5d]
  4092cc:	(bad)  
  4092cd:	call   0x29110977
  4092d2:	scas   al,BYTE PTR es:[edi]
  4092d3:	jnp    0x4092dd
  4092d5:	dec    ecx
  4092d6:	jnp    0x40930c
  4092d8:	dec    esi
  4092d9:	push   0x7d4c6b0
  4092de:	mov    WORD PTR [ebp-0x3d],?
  4092e1:	cmp    ecx,edi
  4092e3:	xor    eax,0xecbff6ac
  4092e8:	and    al,BYTE PTR [eax+0x1a]
  4092eb:	sbb    eax,0x8a657998
  4092f0:	mov    WORD PTR [ebp+esi*2-0x32ee7fa2],ds
  4092f7:	cmp    DWORD PTR [ecx+0x7b339bc],0x5e45ec53
  409301:	js     0x4092fe
  409303:	in     eax,dx
  409304:	sub    esp,eax
  409306:	or     BYTE PTR [ebp+0x3c],cl
  409309:	mov    esp,0x3067d0e
  40930e:	das    
  40930f:	ds or  eax,ebx
  409312:	lock add BYTE PTR [ebp-0x7ac25320],dl
  409319:	aas    
  40931a:	fcom   QWORD PTR [edx-0x1e91f785]
  409320:	in     eax,0xf5
  409322:	fimul  DWORD PTR [eax+0x4a]
  409325:	int    0x5e
  409327:	inc    esp
  409328:	jb     0x4092e3
  40932a:	push   edx
  40932b:	inc    ecx
  40932c:	pop    DWORD PTR [ebp+esi*4-0x45]
  409330:	ret    
  409331:	adc    ah,al
  409333:	call   0x434d:0x1d26b98b
  40933a:	sbb    al,0xec
  40933c:	pop    es
  40933d:	idiv   esp
  40933f:	mov    dl,BYTE PTR [edx+0x53]
  409342:	dec    ebp
  409343:	outs   dx,BYTE PTR ds:[esi]
  409344:	inc    edi
  409345:	mov    bh,0x3b
  409347:	mov    al,0xb
  409349:	add    dh,BYTE PTR [edx+0x57145b47]
  40934f:	out    0x41,eax
  409351:	out    dx,eax
  409352:	dec    ebx
  409353:	and    al,0xdf
  409355:	repnz repz mov al,ds:0xb1424e03
  40935c:	pop    ss
  40935d:	pop    esp
  40935e:	mov    BYTE PTR [ebx+0x39934199],bh
  409364:	push   es
  409365:	xchg   ecx,eax
  409366:	aad    0x1e
  409368:	lods   eax,DWORD PTR ds:[esi]
  40936a:	pop    eax
  40936b:	sub    ch,BYTE PTR [esi+ecx*2+0x6a]
  40936f:	call   0x3ce8:0x1fb7ccc
  409376:	jae    0x409350
  409378:	fcomp  QWORD PTR [edx+0x9cb33ed]
  40937e:	mov    al,BYTE PTR [eax]
  409380:	xlat   BYTE PTR ds:[ebx]
  409381:	stos   BYTE PTR es:[edi],al
  409382:	or     edx,DWORD PTR ds:0xd3bf618d
  409388:	iret   
  409389:	pop    ss
  40938a:	ins    BYTE PTR es:[edi],dx
  40938b:	call   FWORD PTR [eax+0x4d3fade9]
  409391:	leave  
  409392:	clc    
  409393:	rol    edi,1
  409395:	fsubr  QWORD PTR ds:0x9534c36
  40939b:	aas    
  40939c:	data16 jno 0x409389
  40939f:	jmp    0x4e6f:0xfd5a5f96
  4093a6:	sbb    ebx,DWORD PTR [edx+0x17]
  4093a9:	int    0xbc
  4093ab:	in     al,dx
  4093ac:	mov    dh,0xbc
  4093ae:	add    edx,esi
  4093b0:	push   ecx
  4093b1:	jp     0x4093e8
  4093b3:	icebp  
  4093b4:	cmp    DWORD PTR [edx+0x11],esp
  4093b7:	jmp    0xd91da138
  4093bc:	inc    ebx
  4093bd:	xor    bh,BYTE PTR [edx]
  4093bf:	(bad)  
  4093c0:	shl    BYTE PTR [ebx+0x3c],1
  4093c3:	popa   
  4093c4:	xchg   edi,eax
  4093c5:	mov    ds:0x19ccd851,eax
  4093ca:	jge    0x409376
  4093cc:	idiv   BYTE PTR [ecx-0x7f]
  4093cf:	add    dh,BYTE PTR [ebx-0x4d]
  4093d2:	push   0x4c
  4093d4:	test   ecx,edi
  4093d6:	inc    eax
  4093d7:	jo     0x40942f
  4093d9:	dec    edx
  4093da:	mov    ds:0x1ab7e4bc,eax
  4093df:	popa   
  4093e0:	call   0x47865d29
  4093e5:	mov    ah,0xe1
  4093e7:	js     0x40938b
  4093e9:	sub    BYTE PTR [esi+0x1f],dh
  4093ec:	ins    BYTE PTR es:[edi],dx
  4093ed:	dec    ebp
  4093ee:	ins    BYTE PTR es:[edi],dx
  4093ef:	mov    bl,0xe
  4093f1:	jg     0x4093e4
  4093f3:	push   ds
  4093f4:	adc    al,0x4e
  4093f6:	inc    esi
  4093f7:	outs   dx,DWORD PTR ds:[esi]
  4093f8:	lahf   
  4093f9:	loop   0x40941a
  4093fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093fc:	das    
  4093fd:	dec    ecx
  4093fe:	xchg   ebp,eax
  4093ff:	mov    bl,BYTE PTR [eax+0x38]
  409402:	mov    esp,0x108e0e60
  409407:	les    ecx,FWORD PTR [edi-0x7fee7fe7]
  40940d:	xlat   BYTE PTR ds:[ebx]
  40940e:	(bad)  
  40940f:	sbb    dh,ah
  409411:	sbb    BYTE PTR [edx],cl
  409413:	in     al,0x6
  409415:	jg     0x40945e
  409417:	jne    0x4093df
  409419:	rcr    BYTE PTR [esi+0x2f],1
  40941c:	(bad)  
  40941d:	xchg   ecx,eax
  40941e:	xor    edx,DWORD PTR [eax+esi*4+0x35]
  409422:	pushf  
  409423:	fcom   DWORD PTR [esi+0x41]
  409426:	aas    
  409427:	scas   eax,DWORD PTR es:[edi]
  409428:	push   edx
  409429:	jo     0x4093f1
  40942b:	shl    BYTE PTR [eax+0x13],1
  40942e:	jmp    0x376f80be
  409433:	daa    
  409434:	mov    eax,0xf1e26565
  409439:	test   BYTE PTR [eax+0x4a],dh
  40943c:	or     BYTE PTR [ecx-0x33],bh
  40943f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409440:	pop    esi
  409441:	inc    ebp
  409442:	nop
  409443:	push   edx
  409444:	call   0x7afa:0x525abbee
  40944b:	add    al,0x0
  40944d:	aad    0x1e
  40944f:	gs (bad) 
  409451:	adc    dh,BYTE PTR [ebx+0x7e]
  409454:	mov    esi,0x996c00be
  409459:	outs   dx,BYTE PTR ds:[esi]
  40945a:	inc    ebx
  40945b:	xchg   esp,eax
  40945c:	or     ah,BYTE PTR [edi-0x1e8dee79]
  409462:	and    ah,bh
  409464:	adc    eax,DWORD PTR [ebp+ebp*1+0x3d]
  409468:	repz inc ebx
  40946a:	pop    ss
  40946b:	stos   DWORD PTR es:[edi],eax
  40946c:	aam    0x9f
  40946e:	adc    bh,BYTE PTR [ecx+0x573ba513]
  409474:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409475:	cmp    eax,0x841f6b30
  40947a:	call   0xa89c074
  40947f:	push   ecx
  409480:	mov    dl,0x4a
  409482:	mov    WORD PTR [ebp+ecx*8-0x3c8a8652],ss
  409489:	inc    eax
  40948a:	mov    bl,0xa1
  40948c:	cdq    
  40948d:	add    dh,al
  40948f:	outs   dx,BYTE PTR ds:[esi]
  409490:	nop
  409491:	rcr    DWORD PTR [ecx+0x46],1
  409494:	cmc    
  409495:	adc    eax,DWORD PTR [ecx+0x5e]
  409498:	xchg   ecx,eax
  409499:	pop    edx
  40949a:	imul   edx,DWORD PTR [eax],0x92adc9af
  4094a0:	out    dx,eax
  4094a1:	jg     0x409508
  4094a3:	dec    BYTE PTR [ebp+0x17b33871]
  4094a9:	pop    eax
  4094aa:	jne    0x409480
  4094ac:	out    dx,al
  4094ad:	jg     0x40951e
  4094af:	addr16 pop ss
  4094b1:	xchg   ecx,eax
  4094b2:	sub    eax,0x60c6f400
  4094b7:	mov    ebp,edi
  4094b9:	ret    0xad49
  4094bc:	loop   0x409529
  4094be:	inc    esp
  4094bf:	out    dx,al
  4094c0:	enter  0x8b68,0xfc
  4094c4:	dec    ebx
  4094c5:	jl     0x40950b
  4094c7:	mov    ch,0x66
  4094c9:	mov    bh,BYTE PTR [edi-0x44]
  4094cc:	sub    bh,BYTE PTR [bp+0x49]
  4094d0:	mov    ebp,0x96c69b0b
  4094d5:	or     BYTE PTR [eax-0x7a81c993],0xb5
  4094dc:	mov    bl,0x5d
  4094de:	add    eax,0x41269c0d
  4094e3:	inc    esp
  4094e4:	rcr    DWORD PTR ds:0xa1905cae,1
  4094ea:	sbb    eax,0x239cd26
  4094ef:	sub    DWORD PTR [esi-0x44b0e18c],edi
  4094f5:	sahf   
  4094f6:	cdq    
  4094f7:	aaa    
  4094f8:	fdiv   st,st(7)
  4094fa:	mov    eax,0x1638d8fc
  4094ff:	jae    0x409578
  409501:	popf   
  409502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409503:	mov    bl,0x43
  409505:	dec    ebx
  409506:	sub    DWORD PTR [ecx-0x58],ebx
  409509:	jne    0x409563
  40950b:	fs add al,0x5a
  40950e:	or     esp,0x13
  409511:	cmp    BYTE PTR [eax-0x9],dh
  409514:	jne    0x4094c0
  409516:	cmp    al,0xa1
  409518:	pop    eax
  409519:	inc    ecx
  40951a:	jns    0x409515
  40951c:	inc    edi
  40951d:	xchg   edx,eax
  40951e:	(bad)  
  40951f:	call   0xdc082491
  409524:	add    eax,0x4a9ad7d3
  409529:	into   
  40952a:	xchg   esi,eax
  40952b:	fcomp  QWORD PTR [ebx-0x43]
  40952e:	iret   
  40952f:	lea    ecx,[esi-0x6887c6ba]
  409535:	std    
  409536:	sub    BYTE PTR [esi+0x50],0x39
  40953a:	repz jne 0x409555
  40953d:	adc    bl,BYTE PTR [ecx+ebx*4-0x4a]
  409541:	imul   ecx,DWORD PTR ds:0xc7ae9a7,0x61f47b8a
  40954b:	cmovo  ebx,DWORD PTR [eax+ecx*1+0x397fd906]
  409553:	sbb    edi,DWORD PTR [ebp+0x27]
  409556:	cmc    
  409557:	icebp  
  409558:	add    eax,0x7687b59f
  40955d:	(bad)  
  40955e:	mov    ebx,0x736f7fa9
  409563:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409564:	test   BYTE PTR [ebp+0x71e804ee],dl
  40956a:	inc    ecx
  40956b:	lods   eax,DWORD PTR ds:[esi]
  40956c:	cmp    DWORD PTR [ebx-0x8f6239b],0x5faa6672
  409576:	pop    es
  409577:	adc    ch,0xf5
  40957a:	mov    ah,0xd3
  40957c:	inc    esi
  40957d:	jns    0x4095a4
  40957f:	loop   0x40952c
  409581:	dec    eax
  409582:	cmp    bh,0x61
  409585:	sbb    DWORD PTR [esi],ebx
  409587:	mov    al,ds:0xf3fcd7ba
  40958c:	popf   
  40958d:	js     0x4095b4
  40958f:	es add eax,0x90b41877
  409595:	ja     0x409553
  409597:	adc    ebx,eax
  409599:	es js  0x4095e8
  40959c:	jno    0x4095bc
  40959e:	or     BYTE PTR [ecx+0x19],dl
  4095a1:	fst    DWORD PTR [eax-0xd97896]
  4095a7:	out    0x14,eax
  4095a9:	mov    dh,0x3a
  4095ab:	sub    eax,0xc81f4e12
  4095b0:	(bad)  [esi+0x8]
  4095b3:	and    BYTE PTR [ecx-0x1b],cl
  4095b6:	and    ah,BYTE PTR [ebx-0x1430cd74]
  4095bc:	sub    dl,BYTE PTR [edi+0x1d]
  4095bf:	cmp    bh,BYTE PTR [edx-0x32af3209]
  4095c5:	(bad)  
  4095c6:	sbb    ecx,ebp
  4095c8:	setne  BYTE PTR [ebp+0x7d713204]
  4095cf:	pop    esp
  4095d0:	mov    cl,0x89
  4095d2:	pop    edi
  4095d3:	push   ds
  4095d4:	(bad)  
  4095d5:	xchg   esi,eax
  4095d6:	mov    cl,0x50
  4095d8:	sub    ah,BYTE PTR [edi]
  4095da:	cld    
  4095db:	data16 cmp al,0xe1
  4095de:	push   esi
  4095df:	add    BYTE PTR [ecx+0x2d0b6db2],bh
  4095e5:	push   ss
  4095e6:	std    
  4095e7:	sar    BYTE PTR [ebp+0x8291225],0xe7
  4095ee:	cwde   
  4095ef:	fisub  WORD PTR [edi-0xbed8586]
  4095f5:	int3   
  4095f6:	cmp    al,BYTE PTR [esi+0x75ec11d8]
  4095fc:	stos   BYTE PTR es:[edi],al
  4095fd:	jbe    0x409661
  4095ff:	add    ecx,DWORD PTR [ebx-0x7c6346c1]
  409605:	mov    dl,0x7d
  409607:	jge    0x409617
  409609:	repz mov bh,ah
  40960c:	push   edi
  40960d:	in     al,0x8e
  40960f:	dec    edi
  409610:	ret    0xaa7a
  409613:	mov    ds:0x261b601c,al
  409618:	mov    cl,0xd4
  40961a:	outs   dx,DWORD PTR ds:[esi]
  40961b:	dec    edi
  40961c:	scas   al,BYTE PTR es:[edi]
  40961d:	scas   al,BYTE PTR es:[edi]
  40961e:	xchg   ecx,eax
  40961f:	sbb    eax,DWORD PTR [ebp-0x2f61cbb5]
  409625:	(bad)  
  409626:	cmc    
  409627:	sub    dl,ch
  409629:	dec    eax
  40962a:	stos   BYTE PTR es:[edi],al
  40962b:	jbe    0x409658
  40962d:	sbb    eax,DWORD PTR [ebx-0x2c]
  409630:	jecxz  0x4095ef
  409632:	inc    esp
  409633:	add    al,ah
  409635:	and    al,0x8e
  409637:	or     BYTE PTR [edi],ch
  409639:	mov    ebx,0x9d8fdc11
  40963e:	ds push ds
  409640:	push   ss
  409641:	ret    0x2b9c
  409644:	imul   ebp,DWORD PTR [ebx-0x39da78f2],0xffffff8e
  40964b:	fcomp  st(6)
  40964d:	(bad)  [ebx-0x41]
  409650:	and    BYTE PTR [ebx+0x31f679a9],ah
  409656:	cmp    eax,0x53dfff39
  40965b:	test   DWORD PTR [ebx+esi*1],edx
  40965e:	add    al,0x70
  409660:	mov    ah,0x79
  409662:	push   esi
  409663:	in     al,dx
  409664:	bound  edx,QWORD PTR [esi]
  409666:	cmp    BYTE PTR [esi-0x5d],0x49
  40966a:	imul   esp,DWORD PTR [ecx-0x4090db98],0xffffffdb
  409671:	xchg   ebp,eax
  409672:	xchg   ebp,eax
  409673:	imul   edx,DWORD PTR [eax-0x4b],0x29dec155
  40967a:	xchg   esi,eax
  40967b:	jmp    DWORD PTR [ecx+edi*2-0x28a4899c]
  409682:	mov    eax,0xac73a892
  409687:	or     DWORD PTR [edi+ebx*8+0x1118856],esp
  40968e:	ins    BYTE PTR es:[edi],dx
  40968f:	adc    esp,ecx
  409691:	mov    eax,ds:0x178f55ca
  409696:	loope  0x409701
  409698:	adc    eax,0xecf93cb
  40969d:	aas    
  40969e:	jbe    0x4096c8
  4096a0:	dec    ecx
  4096a1:	mov    al,ds:0x3861daae
  4096a6:	iret   
  4096a7:	inc    ecx
  4096a8:	mov    cl,0x4c
  4096aa:	sbb    al,BYTE PTR [edi-0x40fc2992]
  4096b0:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4096b2:	cmp    BYTE PTR [esi+ecx*1+0x51779fee],dh
  4096b9:	dec    ebx
  4096ba:	jae    0x40971c
  4096bc:	or     dh,BYTE PTR [ebx]
  4096be:	imul   esi,DWORD PTR [eax-0x319e97dd],0x63
  4096c5:	push   ds
  4096c6:	sti    
  4096c7:	dec    ebp
  4096c8:	or     ah,BYTE PTR [ebp+0x604a11fa]
  4096ce:	xchg   edi,eax
  4096cf:	mov    BYTE PTR [edx],ah
  4096d1:	js     0x409689
  4096d3:	jno    0x409742
  4096d5:	jmp    0x4096a6
  4096d7:	int    0x23
  4096d9:	test   DWORD PTR [ebp+0x5d403131],esi
  4096df:	push   ss
  4096e0:	sub    ah,0xe2
  4096e3:	and    DWORD PTR [edx],edx
  4096e5:	call   FWORD PTR [esi+0x121cdaed]
  4096eb:	fld    st(4)
  4096ed:	jb     0x409759
  4096ef:	sti    
  4096f0:	and    al,0xc4
  4096f2:	call   0x47c0d863
  4096f7:	sbb    BYTE PTR [ebp+0x71674802],ah
  4096fd:	fcmovnbe st,st(5)
  4096ff:	jmp    0x4096f8
  409701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409702:	push   DWORD PTR [ebx+0x1b]
  409705:	ja     0x40968f
  409707:	sub    ebp,DWORD PTR [esi+esi*1-0x578bf21a]
  40970e:	xlat   BYTE PTR ds:[ebx]
  40970f:	in     al,0xb1
  409711:	div    BYTE PTR [edi+0xe]
  409714:	sbb    ecx,esp
  409716:	enter  0x4a9e,0xaa
  40971a:	mov    al,0x32
  40971c:	popa   
  40971d:	pop    ds
  40971e:	in     eax,dx
  40971f:	cmp    edx,DWORD PTR [edi+0x377b1c53]
  409725:	fstp   st(2)
  409727:	jmp    0xc827:0x9fb5240f
  40972e:	xchg   ecx,esi
  409730:	aam    0x3a
  409732:	loope  0x4096e1
  409734:	pop    ds
  409735:	inc    edx
  409736:	test   ecx,edi
  409738:	xor    bl,BYTE PTR [edx+0x58]
  40973b:	mov    ebx,0x992eb94e
  409740:	cmp    ch,bh
  409742:	mov    ds:0x921d7f2a,eax
  409747:	inc    edi
  409748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409749:	ss push cs
  40974b:	cmp    BYTE PTR [ecx-0x38ab5afb],bh
  409751:	pop    edi
  409752:	iret   
  409753:	sar    BYTE PTR [esi],1
  409755:	pop    ebx
  409756:	data16 sahf 
  409758:	adc    ch,BYTE PTR [ecx]
  40975a:	sub    al,0x37
  40975c:	lahf   
  40975d:	sbb    eax,eax
  40975f:	cmc    
  409760:	xchg   BYTE PTR [eax+edi*2+0x1b],al
  409764:	add    al,0x77
  409766:	mov    dh,0x6
  409768:	cmp    esi,DWORD PTR [edx]
  40976a:	outs   dx,BYTE PTR ds:[esi]
  40976b:	sbb    edx,DWORD PTR [esi+0x70]
  40976e:	(bad)  
  40976f:	push   cs
  409770:	jmp    0xe220:0xbe702744
  409777:	jl     0x409702
  409779:	and    DWORD PTR [ebx+0x46],eax
  40977c:	and    eax,0xcd27127f
  409781:	in     eax,0xeb
  409783:	sub    BYTE PTR [edi],0x40
  409786:	push   eax
  409787:	fwait
  409788:	pop    es
  409789:	dec    ebp
  40978a:	std    
  40978b:	js     0x409792
  40978d:	test   eax,ebp
  40978f:	imul   esi,eax,0xffffff86
  409792:	dec    esi
  409793:	push   ss
  409794:	js     0x40975e
  409796:	cmp    al,BYTE PTR [edx]
  409798:	push   ss
  409799:	in     al,0x16
  40979b:	sub    al,0x51
  40979d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40979e:	add    al,BYTE PTR [edx-0x7b]
  4097a1:	retf   0x2e3d
  4097a4:	dec    ebx
  4097a5:	jo     0x40978d
  4097a7:	xchg   esp,eax
  4097a8:	imul   edi,DWORD PTR [ebx],0xffffffeb
  4097ab:	dec    ecx
  4097ac:	jo     0x40979b
  4097ae:	fwait
  4097af:	retf   0x5961
  4097b2:	(bad)  
  4097b3:	repnz pop ds
  4097b5:	idiv   DWORD PTR [edi-0x31]
  4097b8:	or     al,0x8f
  4097ba:	inc    ecx
  4097bb:	sbb    BYTE PTR [esi+0x2],0xf5
  4097bf:	enter  0x4772,0x7f
  4097c3:	scas   al,BYTE PTR es:[edi]
  4097c4:	lea    eax,[ecx-0x39]
  4097c7:	inc    ecx
  4097c8:	mov    ebx,0x3ba96fa
  4097cd:	call   0x107e:0xed350541
  4097d4:	pop    ds
  4097d5:	int3   
  4097d6:	(bad)
  4097da:	scas   eax,DWORD PTR es:[edi]
  4097db:	jne    0x409781
  4097dd:	(bad)  
  4097de:	fld    DWORD PTR [edi]
  4097e0:	scas   ax,WORD PTR es:[edi]
  4097e2:	pop    ss
  4097e3:	mov    edx,DWORD PTR [esp+edi*8+0x1f71aef5]
  4097ea:	mov    eax,ds:0xfa4cd1cd
  4097ef:	push   edi
  4097f0:	lock or ecx,DWORD PTR [edx+ebp*1-0x36]
  4097f5:	jp     0x4097ff
  4097f7:	jo     0x40984a
  4097f9:	shr    BYTE PTR [edx-0x54f0c516],cl
  4097ff:	jnp    0x409874
  409801:	inc    esp
  409802:	scas   eax,DWORD PTR es:[edi]
  409803:	xchg   ecx,eax
  409804:	add    bl,BYTE PTR [ebx+0x66]
  409807:	inc    ebx
  409808:	js     0x409831
  40980a:	inc    ecx
  40980b:	jb     0x4097fd
  40980d:	ins    DWORD PTR es:[edi],dx
  40980e:	push   ebx
  40980f:	lock pop edi
  409811:	and    ebp,edi
  409813:	push   edi
  409814:	mov    esi,0xc4a86ab9
  409819:	scas   eax,DWORD PTR es:[edi]
  40981a:	adc    al,0xc8
  40981c:	mov    ch,0x62
  40981e:	lods   eax,DWORD PTR ds:[esi]
  40981f:	cmc    
  409820:	pop    ebx
  409821:	jmp    0x4097e0
  409823:	clc    
  409824:	data16 lods al,BYTE PTR ds:[esi]
  409826:	adc    eax,DWORD PTR [edx-0x5613dc1a]
  40982c:	pop    eax
  40982d:	mov    ds:0x1e5fa47d,eax
  409832:	data16 jne 0x409828
  409835:	stos   DWORD PTR es:[edi],eax
  409836:	stos   DWORD PTR es:[edi],eax
  409837:	add    eax,0xd8a7e5dd
  40983c:	xchg   esp,ecx
  40983e:	pop    eax
  40983f:	das    
  409840:	jg     0x4097c9
  409842:	push   edi
  409843:	les    ecx,FWORD PTR [edx]
  409845:	xor    eax,0x32365ae1
  40984a:	cdq    
  40984b:	sbb    ch,BYTE PTR [edi]
  40984d:	xchg   esi,eax
  40984e:	adc    al,0xf8
  409850:	pop    ds
  409851:	pop    esp
  409852:	push   0xffffffbc
  409854:	or     edi,0xffffffe6
  409857:	or     DWORD PTR [edx-0x77b5fff5],esi
  40985d:	in     eax,0x5a
  40985f:	push   es
  409860:	mov    ebp,0x3fafec51
  409865:	push   edi
  409866:	in     eax,dx
  409867:	mov    al,0x90
  409869:	mov    ebp,0xfe5e3e5f
  40986e:	sub    eax,DWORD PTR [edx+edx*2+0x1bd8b50b]
  409875:	mov    ch,BYTE PTR [edi+0x5]
  409878:	bound  ebp,QWORD PTR [ebp+ecx*4+0x3c70699]
  40987f:	cmc    
  409880:	mov    edx,0xad022277
  409885:	stos   DWORD PTR es:[edi],eax
  409886:	aam    0x42
  409888:	dec    esp
  409889:	cmp    eax,0xa01c003b
  40988e:	arpl   WORD PTR [ebx],dx
  409890:	scas   eax,DWORD PTR es:[edi]
  409891:	scas   al,BYTE PTR es:[edi]
  409892:	push   cs
  409893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409894:	sbb    BYTE PTR [ebx],bh
  409896:	fabs   
  409898:	pop    edi
  409899:	pop    esi
  40989a:	aaa    
  40989b:	push   ss
  40989c:	mov    ah,0x61
  40989e:	jmp    0xd76c6f9b
  4098a3:	aam    0x81
  4098a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098a6:	cld    
  4098a7:	xor    eax,0x3d27217b
  4098ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098ad:	pop    ebx
  4098ae:	push   edx
  4098af:	dec    ebx
  4098b0:	dec    ebx
  4098b1:	aam    0xc9
  4098b3:	jmp    0x409845
  4098b5:	ins    DWORD PTR es:[edi],dx
  4098b6:	xchg   BYTE PTR [edi-0x6a],dl
  4098b9:	adc    eax,0x43ee24e3
  4098be:	lods   eax,DWORD PTR ds:[esi]
  4098bf:	pop    ss
  4098c0:	pusha  
  4098c1:	test   BYTE PTR [eax],dh
  4098c3:	mov    ecx,0x29216d50
  4098c8:	and    eax,0x60bddb73
  4098cd:	cmp    eax,DWORD PTR [eax+0x6c4453c5]
  4098d3:	js     0x409881
  4098d5:	pop    edi
  4098d6:	loope  0x409874
  4098d8:	aaa    
  4098d9:	enter  0x10a5,0x9b
  4098dd:	jg     0x4098a9
  4098df:	dec    edx
  4098e0:	int3   
  4098e1:	cmp    ch,ch
  4098e3:	ds js  0x4098a5
  4098e6:	daa    
  4098e7:	aad    0xde
  4098e9:	mov    bl,0x40
  4098eb:	dec    esp
  4098ec:	pop    edi
  4098ed:	jbe    0x409946
  4098ef:	iret   
  4098f0:	and    eax,0x574ad1ba
  4098f5:	and    esi,DWORD PTR [ebp-0x12]
  4098f8:	fidiv  DWORD PTR [edx+0x5052cdd]
  4098fe:	daa    
  4098ff:	mov    edi,0xd078ade5
  409904:	dec    eax
  409905:	push   ebp
  409906:	push   ss
  409907:	dec    ecx
  409908:	in     eax,0x6d
  40990a:	es mov bl,0xff
  40990d:	fwait
  40990e:	std    
  40990f:	dec    esi
  409910:	and    al,0x0
  409912:	lea    edx,[ebp+0x4c]
  409915:	aad    0x64
  409917:	dec    edx
  409918:	mov    ds:0x39a35f4b,al
  40991d:	dec    ebp
  40991e:	dec    ecx
  40991f:	fldenv [edx]
  409921:	jbe    0x409985
  409923:	(bad)  
  409924:	mov    bl,0x5f
  409926:	imul   esi,DWORD PTR [ecx-0x64d53b59],0x88408a24
  409930:	out    dx,eax
  409931:	jmp    DWORD PTR [esi+0x1d549686]
  409937:	inc    esp
  409938:	xchg   edi,eax
  409939:	xchg   esi,eax
  40993a:	clc    
  40993b:	and    DWORD PTR [eax],ebp
  40993d:	or     esp,esi
  40993f:	dec    ebp
  409940:	or     BYTE PTR [edi],dh
  409942:	addr16 lahf 
  409944:	adc    DWORD PTR [esi],ebp
  409946:	not    DWORD PTR [edi-0x41]
  409949:	pop    ss
  40994a:	xchg   esp,eax
  40994b:	(bad)  
  40994c:	xchg   esp,eax
  40994d:	ficom  WORD PTR [ecx+0x228b91a3]
  409953:	jmp    0xd235:0x9e560ad2
  40995a:	pop    es
  40995b:	push   es
  40995c:	loopne 0x409960
  40995e:	adc    al,BYTE PTR [edx]
  409960:	xlat   BYTE PTR ds:[ebx]
  409961:	and    eax,0x88e4c27a
  409966:	inc    eax
  409967:	sub    dl,BYTE PTR [esi]
  409969:	mov    ds,WORD PTR [edx+0x631a4297]
  40996f:	add    ch,dl
  409971:	mov    cl,0xe3
  409973:	push   cs
  409974:	(bad)  
  409975:	pop    ebp
  409976:	jnp    0x40992c
  409978:	lea    edx,[esi+0x770d264c]
  40997e:	push   0xdd30b239
  409983:	pusha  
  409984:	lods   al,BYTE PTR ds:[esi]
  409985:	jge    0x40999a
  409987:	je     0x40992c
  409989:	stc    
  40998a:	or     al,ah
  40998c:	jno    0x409987
  40998e:	and    eax,0x77e7fe2b
  409993:	in     eax,dx
  409994:	call   0xdf41:0x397ad95f
  40999b:	cmp    eax,0xb5d2d12
  4099a0:	mov    ds:0xc9d04b5,eax
  4099a5:	stc    
  4099a6:	pushf  
  4099a7:	dec    ebp
  4099a8:	aad    0x5
  4099aa:	or     eax,0x10fc4ea3
  4099af:	ins    DWORD PTR es:[edi],dx
  4099b0:	pop    ecx
  4099b1:	popf   
  4099b2:	xchg   ebp,eax
  4099b3:	xor    DWORD PTR [ecx-0x3a],ecx
  4099b6:	das    
  4099b7:	loope  0x409941
  4099b9:	inc    ecx
  4099ba:	outs   dx,DWORD PTR ds:[esi]
  4099bb:	mov    esp,0x7b47727f
  4099c0:	repz ret 
  4099c2:	mov    ecx,0x2ecd215d
  4099c7:	sbb    al,0xdc
  4099c9:	mov    ecx,0x5ef1fb88
  4099ce:	lahf   
  4099cf:	in     eax,dx
  4099d0:	shl    BYTE PTR [edi],0xf1
  4099d3:	jmp    0xb8e1030e
  4099d8:	add    DWORD PTR [esi-0x35],0x15c76a20
  4099df:	dec    eax
  4099e0:	and    BYTE PTR [ecx+0x40356891],0xc0
  4099e7:	inc    ecx
  4099e8:	cmp    BYTE PTR [ecx],dh
  4099ea:	push   ebp
  4099eb:	mov    ds:0xec078aa9,eax
  4099f0:	mov    ds:0x37ea3090,al
  4099f5:	inc    eax
  4099f6:	mov    ah,0x57
  4099f8:	popa   
  4099f9:	cmp    al,0xa0
  4099fb:	and    edx,0xb6e2fbf8
  409a01:	cmp    al,0xfc
  409a03:	and    BYTE PTR [eax],0xb4
  409a06:	(bad)  
  409a07:	outs   dx,BYTE PTR ds:[esi]
  409a08:	loop   0x409a1d
  409a0a:	repnz sbb dl,ch
  409a0d:	mov    ch,0x65
  409a0f:	jae    0x409a02
  409a11:	mov    ch,0x3d
  409a13:	and    bl,bl
  409a15:	ds mov edi,0x6f34f0f3
  409a1b:	ret    0x6ac4
  409a1e:	sub    al,0x40
  409a20:	cmp    eax,0x59337196
  409a25:	push   0x19
  409a27:	and    eax,DWORD PTR ds:[eax+0x717dcf66]
  409a2e:	inc    esi
  409a2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a30:	out    dx,al
  409a31:	push   0xffffffb9
  409a33:	sbb    BYTE PTR [edi+edx*4-0xf],bl
  409a37:	adc    DWORD PTR [eax-0xf],esi
  409a3a:	jbe    0x409a6c
  409a3c:	push   esp
  409a3d:	inc    ebx
  409a3e:	pusha  
  409a3f:	dec    ecx
  409a40:	inc    ecx
  409a41:	inc    esp
  409a42:	or     DWORD PTR [ebp-0x29],edi
  409a45:	xor    bl,BYTE PTR [ecx]
  409a47:	lock xor bl,bh
  409a4a:	xor    bh,al
  409a4c:	xor    esp,ecx
  409a4e:	or     eax,esp
  409a50:	add    ebp,DWORD PTR [eax]
  409a52:	inc    esp
  409a53:	mov    BYTE PTR [eax+0x57922a8a],al
  409a59:	mov    bh,0x15
  409a5b:	js     0x409a2b
  409a5d:	(bad)  
  409a5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a5f:	inc    bl
  409a61:	fnsave [ebp-0x19c2667]
  409a67:	xchg   edi,eax
  409a68:	xor    ax,0x6cc9
  409a6c:	xchg   BYTE PTR [edi],cl
  409a6e:	jo     0x409a50
  409a70:	xchg   DWORD PTR [ecx+0x65],ebx
  409a73:	ret    0x2d1
  409a76:	out    0xc1,eax
  409a78:	icebp  
  409a79:	sub    bh,cl
  409a7b:	xor    BYTE PTR [edi],bl
  409a7d:	out    dx,al
  409a7e:	rcl    BYTE PTR [edx-0x71fe5f95],1
  409a84:	mov    dh,0x3
  409a86:	neg    DWORD PTR [edx-0x16dfb0f9]
  409a8c:	bound  edx,QWORD PTR ds:0x15a58619
  409a92:	ins    BYTE PTR es:[edi],dx
  409a93:	pop    ss
  409a94:	dec    edi
  409a95:	fnstcw WORD PTR [ebp-0x7f]
  409a98:	sbb    dl,dl
  409a9a:	aaa    
  409a9b:	je     0x409a55
  409a9d:	pushf  
  409a9e:	pushf  
  409a9f:	shr    DWORD PTR [ebp-0x4e],cl
  409aa2:	push   0x62ed0f14
  409aa7:	je     0x409b09
  409aa9:	js     0x409b0c
  409aab:	in     al,0xbe
  409aad:	(bad)
  409ab0:	lahf   
  409ab1:	fsub   DWORD PTR [ebp-0x78030237]
  409ab7:	xchg   edi,eax
  409ab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ab9:	outs   dx,DWORD PTR ds:[esi]
  409aba:	add    al,0x20
  409abc:	xchg   esi,eax
  409abd:	and    bh,ah
  409abf:	xor    al,0xe1
  409ac1:	pushf  
  409ac2:	call   0x112a:0x16b12c20
  409ac9:	pop    esi
  409aca:	aas    
  409acb:	sbb    BYTE PTR [esi+0x4e],ch
  409ace:	and    al,0xb1
  409ad0:	loopne 0x409b1b
  409ad2:	dec    ecx
  409ad3:	push   esi
  409ad4:	inc    ecx
  409ad5:	les    esp,FWORD PTR [ebp-0x18]
  409ad8:	in     eax,0x19
  409ada:	xchg   edx,eax
  409adb:	mov    eax,0xf6d826bf
  409ae0:	test   al,0x6c
  409ae2:	outs   dx,BYTE PTR ds:[esi]
  409ae3:	mov    ch,ch
  409ae5:	pop    edx
  409ae6:	lods   al,BYTE PTR cs:[esi]
  409ae8:	sub    DWORD PTR [edi],eax
  409aea:	cmc    
  409aeb:	retf   
  409aec:	dec    eax
  409aed:	stc    
  409aee:	sub    eax,0x8ca7bd1e
  409af3:	stc    
  409af4:	xchg   BYTE PTR [edi+0x54965ec1],bl
  409afa:	mov    ds:0xd8f8bcec,al
  409aff:	fmul   st(3),st
  409b01:	fisub  WORD PTR [ecx]
  409b03:	fdiv   QWORD PTR [ebp+eiz*1+0x469ba9ab]
  409b0a:	xchg   ebx,eax
  409b0b:	cli    
  409b0c:	push   0xcf703ae9
  409b11:	ret    0x3e13
  409b14:	jmp    0x2284:0x86d844da
  409b1b:	inc    esp
  409b1c:	ss inc ecx
  409b1e:	inc    ebx
  409b1f:	dec    ecx
  409b20:	repnz enter 0x6208,0x9e
  409b25:	aaa    
  409b26:	mov    cl,0xa6
  409b28:	jbe    0x409b13
  409b2a:	test   al,0x75
  409b2c:	pop    ebp
  409b2d:	mov    edx,0xa1757a9a
  409b32:	push   edi
  409b33:	repnz (bad) 
  409b35:	dec    esp
  409b37:	sbb    eax,0x24c9d098
  409b3c:	ins    DWORD PTR es:[edi],dx
  409b3d:	sub    DWORD PTR [edi-0x558d87d6],edi
  409b43:	push   ds
  409b44:	test   eax,0x609b7c8a
  409b49:	adc    DWORD PTR [edx],0x72
  409b4c:	or     BYTE PTR [ecx],dl
  409b4e:	iret   
  409b4f:	into   
  409b50:	mov    ss:0xe172e456,al
  409b56:	aad    0x29
  409b58:	test   esi,0x26657dfd
  409b5e:	or     BYTE PTR [eax-0x11],al
  409b61:	iret   
  409b62:	pop    eax
  409b63:	repnz in al,dx
  409b65:	add    al,0xaa
  409b67:	aas    
  409b68:	cld    
  409b69:	sub    eax,0xc6b81b2e
  409b6e:	pop    ecx
  409b6f:	shl    edx,cl
  409b71:	lock jo 0x409b1d
  409b74:	jle    0x409b26
  409b76:	sbb    ch,bl
  409b78:	jae    0x409bcd
  409b7a:	adc    eax,ebp
  409b7c:	and    DWORD PTR [edi+0x3f],0xffffff86
  409b80:	nop
  409b81:	(bad)  
  409b83:	cdq    
  409b84:	test   DWORD PTR [ecx-0x74],esp
  409b87:	inc    esi
  409b88:	ficom  WORD PTR [eax+0x3687e173]
  409b8e:	add    dh,BYTE PTR [eax+0x3d069423]
  409b94:	es inc edx
  409b96:	xchg   ecx,eax
  409b97:	jmp    0x77a9:0x775b74
  409b9e:	out    dx,al
  409b9f:	xchg   edi,eax
  409ba0:	mov    eax,0x37a761b5
  409ba5:	xchg   ecx,eax
  409ba6:	and    eax,0x96bfe1b6
  409bab:	inc    ecx
  409bac:	pushf  
  409bad:	fistp  DWORD PTR [ecx+0x6b]
  409bb0:	pop    esi
  409bb1:	pop    ebp
  409bb2:	fisubr WORD PTR [ebx+0x3bb28dfb]
  409bb8:	mov    al,ds:0x3f6a192f
  409bbd:	ins    BYTE PTR es:[edi],dx
  409bbe:	lock inc edx
  409bc0:	mov    es,WORD PTR [edx]
  409bc2:	shl    BYTE PTR [ebx],0x5
  409bc5:	or     DWORD PTR [eax+0x2d],ebp
  409bc8:	aad    0x6f
  409bca:	retfw  0x3de7
  409bce:	pop    ss
  409bcf:	sub    DWORD PTR [esi+0x35bd7e65],esp
  409bd5:	ins    DWORD PTR es:[edi],dx
  409bd6:	ja     0x409b89
  409bd8:	int3   
  409bd9:	or     eax,0xebddf4dd
  409bde:	sub    BYTE PTR [ecx],0xa1
  409be1:	adc    al,0x27
  409be3:	add    BYTE PTR [esi],0xc7
  409be6:	test   BYTE PTR [ebp+ebx*8-0x64eddb2b],al
  409bed:	add    eax,0xfd963e73
  409bf2:	js     0x409c4c
  409bf4:	sahf   
  409bf5:	imul   esi,DWORD PTR [ebp+0x77],0xffffffea
  409bf9:	outs   dx,BYTE PTR ds:[esi]
  409bfa:	popf   
  409bfb:	mov    edi,0x2e62e6f0
  409c00:	retf   
  409c01:	test   DWORD PTR [edi],edx
  409c03:	add    eax,DWORD PTR [edx-0x20]
  409c06:	call   0x854a:0xfcb2622e
  409c0d:	xlat   BYTE PTR ds:[ebx]
  409c0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c0f:	(bad)  
  409c10:	cmp    esp,DWORD PTR [ecx+0x2554d665]
  409c16:	xor    BYTE PTR [ebx+0x33ee1367],dh
  409c1c:	mov    edx,0x7802c051
  409c21:	jle    0x409bf4
  409c23:	mov    eax,ds:0x4ae3dd1
  409c28:	scas   al,BYTE PTR es:[edi]
  409c29:	cli    
  409c2a:	arpl   WORD PTR [eax],ax
  409c2c:	cmp    DWORD PTR [ecx+ecx*1],ebx
  409c2f:	sahf   
  409c30:	jecxz  0x409ca0
  409c32:	retf   0xe08f
  409c35:	sbb    DWORD PTR [edi-0x3b],edx
  409c38:	int3   
  409c39:	jne    0x409c38
  409c3b:	sbb    DWORD PTR [ecx-0x30ecdb9d],ebx
  409c41:	and    BYTE PTR [ecx-0x45],dh
  409c44:	adc    ch,BYTE PTR [edx-0x31]
  409c47:	pushf  
  409c48:	jl     0x409c57
  409c4a:	pop    ds
  409c4b:	cmp    DWORD PTR [ebp+0x24],ebx
  409c4e:	jg     0x409ccb
  409c50:	inc    edi
  409c51:	sti    
  409c52:	or     DWORD PTR [eax-0x41b6792a],ecx
  409c58:	test   al,0x1e
  409c5a:	mov    ds:0x723019f6,al
  409c5f:	jne    0x409c92
  409c61:	imul   edi,DWORD PTR [esi-0x23],0xffffffc1
  409c65:	adc    BYTE PTR [edi+0x1740c3fa],dl
  409c6b:	jle    0x409c06
  409c6d:	sub    BYTE PTR [esi],ah
  409c6f:	push   ds
  409c70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c71:	(bad)  
  409c72:	je     0x409bf9
  409c74:	out    0x52,eax
  409c76:	adc    al,0x28
  409c78:	(bad)  
  409c79:	xor    al,0x6
  409c7b:	and    BYTE PTR [edi-0x70],dh
  409c7e:	stc    
  409c7f:	les    eax,FWORD PTR [ecx+0x20bdfb70]
  409c85:	jecxz  0x409c4c
  409c87:	pop    eax
  409c88:	ret    
  409c89:	fstp   TBYTE PTR [ecx+0x38]
  409c8c:	pop    esp
  409c8d:	jne    0x409ccf
  409c8f:	push   edx
  409c90:	sar    DWORD PTR [eax],1
  409c92:	mov    eax,ds:0x8aec44cd
  409c97:	mov    ebp,0x30292964
  409c9c:	xor    DWORD PTR [esi],esi
  409c9e:	out    0x43,eax
  409ca0:	pushf  
  409ca1:	pop    eax
  409ca2:	inc    eax
  409ca3:	xchg   esi,eax
  409ca4:	cdq    
  409ca5:	pop    edx
  409ca6:	sbb    DWORD PTR [edx-0x17],ecx
  409ca9:	addr16 inc edx
  409cab:	sub    eax,0x67bda970
  409cb0:	or     BYTE PTR [ebp-0x12],bl
  409cb3:	mov    eax,0x97e8436
  409cb8:	sub    al,0x92
  409cba:	dec    ebp
  409cbb:	xchg   ebp,eax
  409cbc:	dec    esi
  409cbd:	(bad)  
  409cbe:	jo     0x409cee
  409cc0:	(bad)  
  409cc2:	xlat   BYTE PTR ss:[ebx]
  409cc4:	inc    eax
  409cc5:	test   DWORD PTR [esi+0x25],eax
  409cc8:	into   
  409cc9:	fisttp QWORD PTR [ecx-0x14]
  409ccc:	sbb    DWORD PTR [edx],esi
  409cce:	mov    eax,ds:0xb4ae23a5
  409cd3:	push   edi
  409cd4:	out    dx,al
  409cd5:	jg     0x409d2d
  409cd7:	ret    0x58ff
  409cda:	adc    ebp,DWORD PTR [ecx-0x2f]
  409cdd:	add    eax,0xbf8d2068
  409ce2:	test   eax,0x78c8bfa
  409ce7:	mov    edi,DWORD PTR [ecx+0x19a739b2]
  409ced:	clc    
  409cee:	mov    ebx,0xa6ee659c
  409cf3:	cwde   
  409cf4:	dec    edx
  409cf5:	fstp   TBYTE PTR [ecx]
  409cf7:	(bad)  
  409cf9:	test   esp,edx
  409cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cfc:	mov    eax,ds:0xe79770ef
  409d01:	lods   eax,DWORD PTR ds:[esi]
  409d02:	hlt    
  409d03:	(bad)  
  409d04:	mov    dl,0x39
  409d06:	(bad)  
  409d07:	xchg   esp,eax
  409d08:	jp     0x409c9c
  409d0a:	dec    ecx
  409d0b:	js     0x409d10
  409d0d:	jecxz  0x409cdb
  409d0f:	mov    dh,0x63
  409d11:	sahf   
  409d12:	hlt    
  409d13:	xor    DWORD PTR [eax-0x59],edi
  409d16:	fwait
  409d17:	cli    
  409d18:	add    BYTE PTR [edi+0x3baafa54],dh
  409d1e:	jmp    0x24b6458a
  409d23:	out    0x99,al
  409d25:	retf   
  409d26:	fs ds and al,0xdc
  409d2a:	jno    0x409ccc
  409d2c:	inc    edi
  409d2d:	mov    dh,0x8
  409d2f:	stos   BYTE PTR es:[edi],al
  409d30:	sub    esp,DWORD PTR [ecx+0x36]
  409d33:	xchg   ebx,eax
  409d34:	jb     0x409d9a
  409d36:	adc    ah,BYTE PTR [ecx+0x2b]
  409d39:	icebp  
  409d3a:	fistp  WORD PTR [ecx-0x6d]
  409d3d:	mov    edx,0x2e81199b
  409d42:	or     bl,BYTE PTR [edi-0x66]
  409d45:	push   ecx
  409d46:	cmc    
  409d47:	mov    edi,0x62f04dfc
  409d4c:	xor    eax,0x5ea11309
  409d51:	mov    ds:0xd406e4af,eax
  409d56:	dec    edx
  409d57:	mov    ds,WORD PTR [edx+0x18]
  409d5a:	mov    cl,0x7c
  409d5c:	das    
  409d5d:	or     cl,BYTE PTR [ebx]
  409d5f:	mov    esi,0x2ddfeca3
  409d64:	sub    cl,BYTE PTR [ebx+ecx*2-0x51c41e00]
  409d6b:	adc    al,bl
  409d6d:	adc    BYTE PTR [eax+0x5e],dl
  409d70:	test   al,0xa7
  409d72:	aaa    
  409d73:	js     0x409d74
  409d75:	in     eax,0x8b
  409d77:	in     al,0xb0
  409d79:	cmp    eax,0x7178695c
  409d7e:	push   0x102c65b9
  409d83:	and    edx,0xffffff9a
  409d86:	mov    bh,0x16
  409d88:	push   edx
  409d89:	pushf  
  409d8a:	xor    eax,0x2d8464aa
  409d8f:	add    BYTE PTR [esi],0xc3
  409d92:	jmp    0x3427:0xefddd447
  409d99:	push   ecx
  409d9a:	add    eax,0x3852dad5
  409d9f:	pop    edx
  409da1:	jmp    0x409d4a
  409da3:	jecxz  0x409d79
  409da5:	test   BYTE PTR [ebx-0x6d],dl
  409da8:	cmp    ebx,DWORD PTR [ecx-0x32]
  409dab:	(bad)  
  409dac:	sub    ch,cl
  409dae:	mov    ds:0x610088fe,eax
  409db3:	and    eax,0xccb9a71e
  409db8:	adc    DWORD PTR [ebp-0x61b7b13],edi
  409dbe:	fnstenv [ebx]
  409dc0:	jg     0x409d7c
  409dc2:	(bad)  
  409dc3:	ficom  WORD PTR [ecx+eax*4-0x7c]
  409dc7:	shl    BYTE PTR [edx-0x4d],1
  409dca:	outs   dx,BYTE PTR ds:[esi]
  409dcb:	inc    esi
  409dcc:	or     BYTE PTR [esi+ebx*4],cl
  409dcf:	sahf   
  409dd0:	mov    edi,0x86db470f
  409dd5:	jno    0x409daf
  409dd7:	add    esi,DWORD PTR [ecx+0x73c6cce]
  409ddd:	lahf   
  409dde:	add    BYTE PTR [esi-0xe],dh
  409de1:	inc    esi
  409de2:	sub    dl,BYTE PTR [esi+0x38]
  409de5:	mov    esp,0x2e4ddebd
  409dea:	mov    ds:0xa28591a6,eax
  409def:	pop    esp
  409df0:	stc    
  409df1:	push   es
  409df2:	mov    esi,0xdeab221a
  409df7:	daa    
  409df8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409df9:	pusha  
  409dfa:	or     BYTE PTR [ecx-0x2eb94121],bl
  409e00:	out    0x3d,eax
  409e02:	or     eax,0x6bad0ab1
  409e07:	cmc    
  409e08:	bound  eax,QWORD PTR [edi-0x475a5a2d]
  409e0e:	pop    ecx
  409e0f:	sbb    eax,0x56b3ed99
  409e14:	sub    cl,BYTE PTR [eax-0x5a]
  409e17:	mov    BYTE PTR [ebx-0x1fed9673],0x52
  409e1e:	or     al,0xf2
  409e20:	jmp    0x881a:0x6679271a
  409e27:	repz jp 0x409e64
  409e2a:	call   0x1dc0744c
  409e2f:	shr    BYTE PTR [ebp+0x49],1
  409e32:	ins    DWORD PTR es:[edi],dx
  409e33:	xlat   BYTE PTR ds:[ebx]
  409e34:	js     0x409dd6
  409e36:	das    
  409e37:	and    dh,BYTE PTR cs:[ecx+ecx*2+0x68]
  409e3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e3d:	out    0x23,eax
  409e3f:	iret   
  409e40:	popf   
  409e41:	ins    DWORD PTR es:[edi],dx
  409e42:	les    edi,FWORD PTR [eax]
  409e44:	add    al,0xa2
  409e46:	jbe    0x409e4a
  409e48:	jmp    0xe67511cd
  409e4d:	lods   al,BYTE PTR ds:[esi]
  409e4e:	mov    ds:0xb548bb0c,al
  409e53:	mov    eax,0xce598281
  409e58:	jnp    0x409e63
  409e5a:	push   0x276858ed
  409e5f:	jl     0x409e83
  409e61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e62:	jge    0x409dfc
  409e64:	enter  0xc679,0x88
  409e68:	sub    al,0x50
  409e6a:	fsub   DWORD PTR cs:[edx-0xbd186f3]
  409e71:	xlat   BYTE PTR ds:[bx]
  409e73:	xor    DWORD PTR [ebp+eiz*2+0x534fb2f7],eax
  409e7a:	push   ds
  409e7b:	pushf  
  409e7c:	int3   
  409e7d:	push   ebx
  409e7e:	push   0x54
  409e80:	loopne 0x409e2c
  409e82:	jns    0x409e09
  409e84:	stc    
  409e85:	mov    edi,0x17e759b4
  409e8a:	or     dh,BYTE PTR [edi+0x4e]
  409e8d:	(bad)  
  409e8e:	dec    dh
  409e90:	mov    edx,0x844c0925
  409e95:	cli    
  409e96:	bound  ecx,QWORD PTR [ebx]
  409e98:	sahf   
  409e99:	mov    ch,0xc6
  409e9b:	mov    edi,ecx
  409e9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e9e:	stos   BYTE PTR es:[edi],al
  409e9f:	stc    
  409ea0:	(bad)  
  409ea1:	mov    esi,0xbbe7dd96
  409ea6:	rcr    BYTE PTR [ebp+0x5e3394d4],0x73
  409ead:	ss mov eax,0x889e1709
  409eb3:	jg     0x409edc
  409eb5:	mov    ebp,0x9e388cc8
  409eba:	(bad)
  409ebd:	call   0x3268:0xd4d55715
  409ec4:	popf   
  409ec5:	inc    ecx
  409ec6:	and    ah,dl
  409ec8:	lock mov ebx,0x87fc690a
  409ece:	add    eax,0xfa1e434e
  409ed3:	jns    0x409f16
  409ed5:	outs   dx,DWORD PTR ds:[esi]
  409ed6:	or     DWORD PTR [ebp-0x76],ecx
  409ed9:	xchg   ebx,eax
  409eda:	mov    ecx,DWORD PTR [ebp-0x30]
  409edd:	xor    eax,esi
  409edf:	add    eax,edi
  409ee1:	cmp    ecx,eax
  409ee3:	je     0x409f21
  409ee9:	jmp    0x409f12
  409eee:	mov    eax,DWORD PTR [ebp-0x4]
  409ef1:	mov    ecx,DWORD PTR [ebp-0x8]
  409ef4:	xor    eax,esi
  409ef6:	add    eax,edi
  409ef8:	cmp    ecx,eax
  409efa:	mov    eax,DWORD PTR [ebp-0x4]
  409efd:	je     0x40c2e1
  409f03:	mov    ecx,DWORD PTR [ebp-0x38]
  409f06:	xor    eax,esi
  409f08:	add    eax,edi
  409f0a:	cmp    ecx,eax
  409f0c:	je     0x40c2ea
  409f12:	lea    eax,[ebp-0x8]
  409f15:	push   eax
  409f16:	push   DWORD PTR [ebp-0x30]
  409f19:	push   DWORD PTR [ebp+0xc]
  409f1c:	call   0x41169e
  409f21:	mov    eax,DWORD PTR [ebp-0x4]
  409f24:	mov    ecx,DWORD PTR [ebp-0x8]
  409f27:	jmp    0x40c2ac
  409f2c:	inc    DWORD PTR [ebp+edi*2+0x29]
  409f30:	(bad)
  409f33:	je     0x409f70
  409f35:	fs and eax,0xad8fcaf0
  409f3b:	outs   dx,BYTE PTR ds:[esi]
  409f3c:	xor    al,BYTE PTR [eax]
  409f3e:	jp     0x409fba
  409f40:	add    bl,BYTE PTR [edi+0x7a]
  409f43:	jp     0x409f41
  409f45:	test   eax,0xf7348e40
  409f4a:	inc    ebp
  409f4b:	call   0x888311ac
  409f50:	ds stos DWORD PTR es:[edi],eax
  409f52:	imul   edx,DWORD PTR [ebx-0x32bc98c4],0xb0b3d5de
  409f5c:	cs push cs
  409f5e:	icebp  
  409f5f:	adc    al,0x96
  409f61:	loopne 0x409f70
  409f63:	inc    esi
  409f64:	mov    ecx,0x36906bea
  409f6a:	sub    DWORD PTR [ebx],ebx
  409f6c:	sbb    al,0x39
  409f6e:	pop    ss
  409f6f:	or     edx,edx
  409f71:	ins    BYTE PTR es:[edi],dx
  409f72:	cmp    BYTE PTR [ebp+0x50],cl
  409f75:	cmp    ebx,0xffffffe5
  409f78:	cmc    
  409f79:	jge    0x409f45
  409f7b:	or     al,0x8b
  409f7d:	and    al,0x11
  409f7f:	push   esi
  409f80:	loopne 0x409f03
  409f82:	cdq    
  409f83:	mov    esi,0x112767d6
  409f88:	xor    dl,0xd5
  409f8b:	push   esi
  409f8c:	int    0x99
  409f8e:	fild   WORD PTR [ecx+0x5e]
  409f91:	or     edi,DWORD PTR [esi+0x14]
  409f94:	push   esi
  409f95:	fist   DWORD PTR [eax+edi*1-0x20]
  409f9a:	mov    al,0x73
  409f9c:	xor    BYTE PTR [edi-0xa],0x1a
  409fa0:	imul   ebx,DWORD PTR [eax-0x313daff1],0x23
  409fa7:	push   eax
  409fa8:	aad    0xdc
  409faa:	ds test eax,0x51e918ae
  409fb0:	ja     0x409f66
  409fb2:	ret    0xc65c
  409fb5:	loop   0x40a026
  409fb7:	in     al,dx
  409fb8:	(bad)  
  409fb9:	xor    ebx,esi
  409fbb:	inc    esi
  409fbc:	inc    eax
  409fbd:	repnz sub DWORD PTR [ebx+0x5c1e6ad3],esi
  409fc4:	xchg   edi,eax
  409fc5:	adc    ebp,DWORD PTR [ebp+0x3d]
  409fc8:	repz adc bh,BYTE PTR [ebp+0x58]
  409fcc:	sti    
  409fcd:	lahf   
  409fce:	stos   BYTE PTR es:[edi],al
  409fcf:	push   ss
  409fd0:	inc    edi
  409fd1:	(bad)  
  409fd2:	outs   dx,DWORD PTR ds:[esi]
  409fd3:	loop   0x40a00b
  409fd5:	je     0x409f66
  409fd7:	dec    esp
  409fd8:	fwait
  409fd9:	in     eax,0xf
  409fdb:	out    0x23,eax
  409fdd:	or     eax,DWORD PTR [eax+0x66786c7e]
  409fe3:	addr16 xchg esp,eax
  409fe5:	mov    edx,DWORD PTR [edi-0x36fda51c]
  409feb:	(bad)  
  409fec:	push   ebp
  409fed:	hlt    
  409fee:	push   esi
  409fef:	jbe    0x40a034
  409ff1:	add    DWORD PTR [ecx-0x64f56c3b],ebp
  409ff7:	idiv   BYTE PTR [eax+0x74b4e458]
  409ffd:	retf   0x1fba
  40a000:	nop
  40a001:	leave  
  40a002:	jns    0x409f8b
  40a004:	jbe    0x40a061
  40a006:	push   eax
  40a007:	sbb    eax,0x1ca70dd0
  40a00c:	lods   eax,DWORD PTR fs:[esi]
  40a00e:	xchg   ecx,eax
  40a00f:	mov    bl,0x4a
  40a011:	shl    bl,cl
  40a013:	dec    esp
  40a014:	imul   ecx,esi,0xbec4084b
  40a01a:	cmp    dh,cl
  40a01c:	mov    ebp,0x78db5c4d
  40a021:	sbb    DWORD PTR [ebx-0x29fd8bd2],0xfffffff4
  40a028:	aas    
  40a029:	jae    0x40a01a
  40a02b:	jne    0x40a028
  40a02d:	cmp    edx,edx
  40a02f:	ja     0x409fd6
  40a031:	imul   ecx,DWORD PTR [eax+eax*2],0x8
  40a035:	pop    esp
  40a036:	xchg   esp,eax
  40a037:	and    ah,BYTE PTR [edi+0x31]
  40a03a:	out    dx,al
  40a03b:	jnp    0x409fe7
  40a03d:	fldenv [esp+edx*8]
  40a040:	cli    
  40a041:	inc    ebx
  40a042:	adc    BYTE PTR [ecx+esi*2-0x6d],ch
  40a046:	icebp  
  40a047:	aas    
  40a048:	sub    ebp,DWORD PTR [ebx-0x25]
  40a04b:	iret   
  40a04c:	add    BYTE PTR [esi],dh
  40a04e:	sub    dh,bl
  40a050:	(bad)  
  40a051:	out    dx,eax
  40a052:	ins    DWORD PTR es:[edi],dx
  40a053:	mov    BYTE PTR [edi],bl
  40a055:	in     eax,dx
  40a056:	sub    BYTE PTR [ebx],dh
  40a058:	pop    esp
  40a059:	stos   DWORD PTR es:[edi],eax
  40a05a:	fdiv   QWORD PTR [eax-0x2b]
  40a05d:	repz sub eax,0x1ee74ee6
  40a063:	xor    eax,0x971f20a6
  40a068:	sub    al,0x2d
  40a06a:	test   BYTE PTR [eax-0x1e99f94d],ah
  40a070:	cmp    esp,DWORD PTR [ecx+0x73e41ac5]
  40a076:	in     al,dx
  40a077:	inc    ebx
  40a078:	loopne 0x40a0bd
  40a07a:	std    
  40a07b:	mov    al,0xa6
  40a07d:	pop    eax
  40a07e:	outs   dx,DWORD PTR ds:[esi]
  40a07f:	das    
  40a080:	or     BYTE PTR [esp+edi*8+0x28cd39a9],dl
  40a087:	and    ecx,DWORD PTR [edi]
  40a089:	jmp    0x1a997a71
  40a08e:	push   eax
  40a08f:	mov    eax,0x18394285
  40a094:	inc    ecx
  40a095:	call   DWORD PTR [eax+ebx*1]
  40a098:	stos   BYTE PTR es:[edi],al
  40a099:	dec    edi
  40a09a:	pop    es
  40a09b:	cmp    eax,0x1ae13624
  40a0a0:	mov    esi,DWORD PTR [ebx]
  40a0a2:	add    ch,dl
  40a0a4:	push   edx
  40a0a5:	mov    ds:0xeee64279,al
  40a0aa:	xor    ebx,DWORD PTR [eax+0x6c0ee24b]
  40a0b0:	inc    ebp
  40a0b1:	xor    cl,dh
  40a0b3:	push   ebp
  40a0b4:	push   eax
  40a0b5:	lahf   
  40a0b6:	inc    ecx
  40a0b7:	pop    edi
  40a0b8:	in     al,0xd1
  40a0ba:	call   0xb091:0xb0adde93
  40a0c1:	and    BYTE PTR ds:0x64bea4bd,bl
  40a0c7:	adc    bh,BYTE PTR [ebx]
  40a0c9:	icebp  
  40a0ca:	nop
  40a0cb:	call   0x4bc:0xe87dc1d8
  40a0d2:	inc    ebx
  40a0d3:	and    ebx,DWORD PTR [eax+0x24]
  40a0d6:	mov    ah,0x4a
  40a0d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0d9:	int    0x74
  40a0db:	jb     0x40a12d
  40a0dd:	fisttp DWORD PTR [bp-0x444a]
  40a0e2:	fcomp  QWORD PTR [edi]
  40a0e4:	shr    BYTE PTR [esi],0xab
  40a0e7:	fsubr  QWORD PTR [edx]
  40a0e9:	mov    ebp,0xdb427eec
  40a0ee:	mov    DWORD PTR [edi],ecx
  40a0f0:	leave  
  40a0f1:	cmp    eax,0xcdbcfdf7
  40a0f6:	sbb    dh,BYTE PTR [edi-0x4eaeabe4]
  40a0fc:	lods   eax,DWORD PTR ds:[esi]
  40a0fd:	dec    edi
  40a0fe:	cmp    al,0xde
  40a100:	push   esi
  40a101:	push   cs
  40a102:	sbb    BYTE PTR [edx-0x68],0xaa
  40a106:	loope  0x40a14a
  40a108:	xor    BYTE PTR [esi+0x1d],ah
  40a10b:	outs   dx,DWORD PTR ds:[esi]
  40a10c:	aam    0x68
  40a10e:	cwde   
  40a10f:	cmp    ebp,DWORD PTR [ecx-0x24]
  40a112:	mov    eax,0xa261e8ec
  40a117:	mov    al,0x93
  40a119:	push   ss
  40a11a:	and    eax,0x1525eb0b
  40a11f:	sbb    eax,0x9d12e3
  40a124:	mov    ecx,DWORD PTR [edi+0x506db378]
  40a12a:	cld    
  40a12b:	mov    eax,0x2626eee6
  40a130:	arpl   bp,bx
  40a132:	pop    edi
  40a133:	rcr    BYTE PTR [edi+0x6ed1dc9c],1
  40a139:	dec    ebx
  40a13a:	lahf   
  40a13b:	adc    al,BYTE PTR [ebx+0x2d]
  40a13e:	rol    DWORD PTR [esi],0x7f
  40a141:	push   es
  40a142:	cmp    BYTE PTR [ebx+eiz*8+0x42f4bbe3],ah
  40a149:	(bad)  
  40a14a:	cmp    eax,0x1ed9ea46
  40a14f:	sar    DWORD PTR [ebp-0x667c8be5],cl
  40a155:	retf   
  40a156:	sti    
  40a157:	pop    ebx
  40a158:	mov    cl,0xa3
  40a15a:	out    dx,eax
  40a15b:	adc    eax,0x7b8d3418
  40a160:	xchg   cl,al
  40a162:	dec    esp
  40a163:	mov    esp,0xb849e939
  40a168:	mov    eax,0xf31aae8a
  40a16d:	arpl   WORD PTR [ebp+0x51],dx
  40a170:	into   
  40a171:	loopne 0x40a139
  40a173:	in     eax,0x9d
  40a175:	mov    dh,0x6e
  40a177:	dec    ecx
  40a178:	mov    cl,0xfe
  40a17a:	sbb    al,0x25
  40a17c:	cs jle 0x40a11a
  40a17f:	loop   0x40a16f
  40a181:	inc    esi
  40a182:	lods   eax,DWORD PTR ds:[esi]
  40a183:	pop    eax
  40a184:	and    DWORD PTR [esi+0x7e234ed4],ebx
  40a18a:	leave  
  40a18b:	rcl    dh,0x67
  40a18e:	xchg   esp,eax
  40a18f:	jo     0x40a122
  40a191:	push   edx
  40a192:	or     BYTE PTR [ecx],cl
  40a194:	cmp    eax,esi
  40a196:	or     ch,dl
  40a198:	adc    dh,BYTE PTR [esi-0x39]
  40a19b:	inc    ecx
  40a19c:	xor    eax,0xc2b9e2cc
  40a1a1:	push   ss
  40a1a2:	mov    ch,0x97
  40a1a4:	das    
  40a1a5:	xor    DWORD PTR [esi+ebx*1+0x5c],esi
  40a1a9:	sbb    edx,DWORD PTR ds:0x4f846c0d
  40a1af:	jbe    0x40a1ab
  40a1b1:	int3   
  40a1b2:	adc    bl,BYTE PTR [esi+0x74c39229]
  40a1b8:	jge    0x40a20b
  40a1ba:	jns    0x40a166
  40a1bc:	xlat   BYTE PTR ds:[ebx]
  40a1bd:	jl     0x40a1c1
  40a1bf:	mov    esi,0xb99d9d14
  40a1c4:	lock or esi,DWORD PTR [edx]
  40a1c7:	out    dx,eax
  40a1c8:	imul   BYTE PTR [edx+0x5c7e6218]
  40a1ce:	pop    ecx
  40a1cf:	(bad)  
  40a1d0:	pop    eax
  40a1d1:	test   al,0xa8
  40a1d3:	mov    DWORD PTR [edx+0x35],edi
  40a1d6:	test   BYTE PTR [edx],dl
  40a1d8:	xchg   ebp,eax
  40a1d9:	sub    ch,ch
  40a1db:	dec    esi
  40a1dc:	adc    DWORD PTR [ebx+ebx*8-0x41],eax
  40a1e0:	sbb    BYTE PTR [ebx+0x30],dl
  40a1e3:	loopne 0x40a1f9
  40a1e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1e6:	jl     0x40a1c2
  40a1e8:	arpl   WORD PTR [ecx-0x37a8d14a],cx
  40a1ee:	lahf   
  40a1ef:	shl    DWORD PTR [ebx],1
  40a1f1:	inc    ebx
  40a1f2:	popa   
  40a1f3:	ja     0x40a253
  40a1f5:	fistp  WORD PTR [ebx+0x1d]
  40a1f8:	in     eax,0xb5
  40a1fa:	je     0x40a221
  40a1fc:	imul   edx,DWORD PTR [edx-0x30],0x3f
  40a200:	dec    edx
  40a201:	pop    ebx
  40a202:	or     BYTE PTR [ebx],bl
  40a204:	cmp    dh,al
  40a206:	pop    ecx
  40a207:	sar    edx,0xbb
  40a20a:	cmc    
  40a20b:	outs   dx,DWORD PTR ds:[esi]
  40a20c:	sub    eax,0xb47e24a6
  40a211:	and    bh,BYTE PTR [eax+0x16]
  40a214:	rcl    DWORD PTR [eax-0x2c4846b],cl
  40a21a:	test   eax,0x6c553bc4
  40a21f:	je     0x40a21c
  40a221:	imul   ebp,esp,0x52
  40a224:	or     al,0x5c
  40a226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a227:	leave  
  40a228:	imul   ebx,DWORD PTR [eax-0x21e05799],0x7f
  40a22f:	push   cs
  40a230:	cmp    al,0xe2
  40a232:	mov    bh,0xf1
  40a234:	sub    DWORD PTR [ecx+0x29],edx
  40a237:	or     edx,esi
  40a239:	adc    BYTE PTR [edx+0x260ca5ed],dl
  40a23f:	pusha  
  40a240:	aam    0x19
  40a242:	aad    0x9e
  40a244:	sar    DWORD PTR [eax],0xe1
  40a247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a248:	pop    es
  40a249:	not    DWORD PTR [ebp-0x47e34b4d]
  40a24f:	xchg   BYTE PTR [eax],cl
  40a251:	jle    0x40a263
  40a253:	or     DWORD PTR [edx],edx
  40a255:	add    bl,BYTE PTR [edi-0x1a]
  40a258:	fdivrp st(3),st
  40a25a:	es in  al,dx
  40a25c:	shl    BYTE PTR [eax],1
  40a25e:	pxor   mm2,QWORD PTR [edx-0x4e]
  40a262:	ins    DWORD PTR es:[edi],dx
  40a263:	pop    ebx
  40a264:	sbb    ebx,DWORD PTR ds:0x3bceda37
  40a26a:	sbb    esp,ebp
  40a26c:	dec    esp
  40a26d:	jecxz  0x40a1ef
  40a26f:	mov    DWORD PTR ds:0xf10d4ab8,edx
  40a275:	lea    esi,[eax]
  40a277:	or     eax,0x63e4efa1
  40a27c:	or     bl,ch
  40a27e:	jl     0x40a25d
  40a280:	shl    BYTE PTR [esi+eax*1+0x7565503],0x24
  40a288:	loopne 0x40a2fc
  40a28a:	(bad)  
  40a28b:	pushf  
  40a28c:	add    BYTE PTR [ecx+eiz*4],ch
  40a28f:	rcl    BYTE PTR [ebx],0x8
  40a292:	pop    ecx
  40a293:	mov    esp,0x26482eca
  40a298:	repnz aam 0x94
  40a29b:	lods   eax,DWORD PTR ds:[esi]
  40a29c:	aaa    
  40a29d:	lods   al,BYTE PTR ds:[esi]
  40a29e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a29f:	and    eax,0xfc345d2b
  40a2a4:	cmp    al,0x39
  40a2a6:	call   0x1ce0:0x30dca43
  40a2ad:	adc    ah,dl
  40a2af:	int3   
  40a2b0:	call   0x3dd5bf16
  40a2b5:	sub    eax,0x65de9fe3
  40a2ba:	popf   
  40a2bb:	es sti 
  40a2bd:	out    dx,al
  40a2be:	jbe    0x40a297
  40a2c0:	pop    ecx
  40a2c1:	sbb    al,0x9a
  40a2c3:	adc    DWORD PTR [eax-0x7a],ebx
  40a2c6:	mov    ecx,0x96646b88
  40a2cb:	(bad)  
  40a2cc:	fnsave [esi]
  40a2ce:	push   ss
  40a2cf:	fisubr WORD PTR [edi]
  40a2d1:	dec    esp
  40a2d2:	gs fadd st,st(6)
  40a2d5:	imul   BYTE PTR [edi+0x46]
  40a2d8:	jne    0x40a2c0
  40a2da:	rcr    DWORD PTR [eax-0x3e],0x30
  40a2de:	fsub   DWORD PTR [ecx+0x293f16fe]
  40a2e4:	aad    0xf8
  40a2e6:	jae    0x40a33a
  40a2e8:	sbb    eax,0x71b2ed89
  40a2ed:	leave  
  40a2ee:	xor    dl,BYTE PTR [esp+edi*2-0x4b7e38d0]
  40a2f5:	out    0x1f,eax
  40a2f7:	jns    0x40a333
  40a2f9:	mov    al,ds:0xf84fa189
  40a2fe:	stc    
  40a2ff:	or     edi,DWORD PTR [edx-0x19]
  40a302:	adc    ebp,ebx
  40a304:	into   
  40a305:	(bad)  
  40a306:	sbb    DWORD PTR [edi+0xec87253],ebx
  40a30c:	dec    esp
  40a30d:	(bad)  
  40a30e:	aad    0x88
  40a310:	mov    cl,0x3f
  40a312:	bound  edx,QWORD PTR [ecx+edi*8]
  40a315:	cdq    
  40a316:	nop
  40a317:	jae    0x40a30b
  40a319:	or     BYTE PTR [eax-0x36],ch
  40a31c:	mov    ah,0xc
  40a31e:	neg    edx
  40a320:	sbb    DWORD PTR [ebx-0x66],ebx
  40a323:	or     edx,0x3c
  40a326:	push   eax
  40a327:	scas   eax,DWORD PTR es:[edi]
  40a328:	inc    ebp
  40a329:	jnp    0x40a380
  40a32b:	pop    ebx
  40a32c:	int3   
  40a32d:	xchg   ebx,eax
  40a32e:	sti    
  40a32f:	jmp    0x86d6:0x904ba79a
  40a336:	mov    WORD PTR [edi-0x12270002],?
  40a33c:	adc    esp,DWORD PTR ds:0x31638bff
  40a342:	(bad)  
  40a343:	xchg   DWORD PTR [ebx+0x4d362bd],ebp
  40a349:	and    DWORD PTR [edi+0x4b],eax
  40a34c:	push   cs
  40a34d:	pop    ss
  40a34e:	sub    al,0x89
  40a350:	mov    ecx,0x162783ad
  40a355:	pop    ebp
  40a356:	xchg   esi,eax
  40a357:	dec    ebp
  40a358:	into   
  40a359:	neg    esi
  40a35b:	fistp  WORD PTR [ecx]
  40a35d:	lods   eax,DWORD PTR ds:[esi]
  40a35e:	ret    0x6bdc
  40a361:	cmp    al,0x72
  40a363:	mov    ds:0xce68d4ed,eax
  40a368:	cmp    DWORD PTR [edx+0x75],ebx
  40a36b:	xchg   esp,eax
  40a36c:	into   
  40a36d:	shr    DWORD PTR [edi],1
  40a36f:	or     ebx,edi
  40a371:	add    edi,DWORD PTR [edx]
  40a373:	cmp    eax,0xa7de600
  40a378:	jae    0x40a393
  40a37a:	ins    DWORD PTR es:[edi],dx
  40a37b:	shr    BYTE PTR [eax+0x4e1c7a6d],cl
  40a381:	push   edi
  40a382:	jno    0x40a30c
  40a384:	dec    sp
  40a386:	and    eax,0x21bb94dd
  40a38b:	iret   
  40a38c:	sbb    al,0x3f
  40a38e:	fdivr  st,st(5)
  40a390:	out    dx,eax
  40a391:	add    DWORD PTR [edx],edi
  40a393:	bound  ebp,QWORD PTR [edx-0x4ef4309e]
  40a399:	sub    al,0xd3
  40a39b:	push   ds
  40a39c:	call   0x909e:0xb72ec886
  40a3a3:	out    0xd2,eax
  40a3a5:	jecxz  0x40a3b0
  40a3a7:	sbb    DWORD PTR [edx+0x2c],0x8c00f4fb
  40a3ae:	inc    esp
  40a3af:	mov    eax,0x45ac0cf5
  40a3b4:	scas   al,BYTE PTR es:[edi]
  40a3b5:	adc    eax,0x29ddbfa
  40a3ba:	pushf  
  40a3bb:	sub    ecx,DWORD PTR [ecx+eiz*1-0x4e]
  40a3bf:	sar    dh,0x8b
  40a3c2:	or     bh,BYTE PTR [esi+0x11]
  40a3c5:	xor    dl,BYTE PTR [esi-0x54]
  40a3c8:	sbb    ebp,DWORD PTR [esi+0x76]
  40a3cb:	pop    ebp
  40a3cc:	xor    eax,0xf2d5cedb
  40a3d1:	or     al,0x70
  40a3d3:	pop    ebp
  40a3d4:	mov    ebp,0xef423388
  40a3d9:	jae    0x40a3dc
  40a3db:	jge    0x40a376
  40a3dd:	sbb    al,0xbf
  40a3df:	mov    ebx,eax
  40a3e1:	ja     0x40a44f
  40a3e3:	stos   BYTE PTR es:[edi],al
  40a3e4:	or     esp,DWORD PTR [ecx+0x5a]
  40a3e7:	mov    DWORD PTR [esi+0x3b],edi
  40a3ea:	and    ebx,ebp
  40a3ec:	jnp    0x40a45a
  40a3ee:	sub    dl,dl
  40a3f0:	lahf   
  40a3f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3f2:	sub    BYTE PTR [edx-0x66],dl
  40a3f5:	hlt    
  40a3f6:	jmp    0x40a3db
  40a3f8:	out    dx,eax
  40a3f9:	test   al,0x9b
  40a3fb:	(bad)  
  40a3fd:	inc    esi
  40a3fe:	sbb    BYTE PTR [ebx-0xc420341],ch
  40a404:	pop    eax
  40a405:	mov    BYTE PTR [ecx+0x220ae8ae],dh
  40a40b:	adc    dl,al
  40a40d:	xchg   ebx,eax
  40a40e:	and    cl,bl
  40a410:	jp     0x40a491
  40a412:	arpl   di,bp
  40a414:	xor    bh,ah
  40a416:	and    BYTE PTR [ebp+0x33],0x81
  40a41a:	or     edx,DWORD PTR [esi+0x585b2b62]
  40a420:	xchg   BYTE PTR [edi],ch
  40a422:	dec    eax
  40a423:	shr    DWORD PTR [edi+esi*1-0x15],1
  40a427:	fcom   DWORD PTR ds:0x49d9ced0
  40a42d:	addr16 pop esi
  40a42f:	in     eax,dx
  40a430:	retf   
  40a431:	add    eax,0xa40b947a
  40a436:	repnz loope 0x40a428
  40a439:	pop    eax
  40a43a:	cwde   
  40a43b:	xchg   DWORD PTR [edx+0x2a],esi
  40a43e:	push   cs
  40a43f:	mov    ds:0x677ae4bd,al
  40a444:	dec    esp
  40a445:	cmp    bh,BYTE PTR [esi-0x25]
  40a448:	fcom   QWORD PTR [esi-0x3bb6d98a]
  40a44e:	ss and al,0x65
  40a451:	and    DWORD PTR [edx],edx
  40a453:	sbb    DWORD PTR [esi+ecx*1-0x1],esp
  40a457:	xchg   edx,eax
  40a458:	jb     0x40a449
  40a45a:	push   ss
  40a45b:	add    BYTE PTR [eax+0x1dac74c],dl
  40a461:	dec    edx
  40a462:	iret   
  40a463:	in     al,0xcc
  40a465:	aas    
  40a466:	enter  0x3c1d,0xaf
  40a46a:	cmc    
  40a46b:	inc    ebp
  40a46c:	out    0x5f,eax
  40a46e:	loope  0x40a436
  40a470:	sti    
  40a471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a472:	sbb    al,0x78
  40a474:	fldenv [ebx-0x3c81323e]
  40a47a:	ss push 0xffffff8e
  40a47d:	inc    edi
  40a47e:	iret   
  40a47f:	and    al,0x39
  40a481:	cmc    
  40a482:	add    eax,0xb2a98865
  40a487:	add    DWORD PTR [esi],0x735d578b
  40a48d:	out    dx,eax
  40a48e:	jmp    0x37ff:0x721f8b5e
  40a495:	or     al,0xa
  40a497:	xlat   BYTE PTR ds:[ebx]
  40a498:	mov    es,WORD PTR [eax]
  40a49a:	pop    esi
  40a49b:	popa   
  40a49c:	dec    ebp
  40a49d:	mov    eax,ds:0x12f272e0
  40a4a2:	sub    bl,al
  40a4a4:	iret   
  40a4a5:	das    
  40a4a6:	test   eax,0x774e226b
  40a4ab:	and    ebx,esp
  40a4ad:	dec    edx
  40a4ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4af:	imul   esi,DWORD PTR [edx+0x2c],0xffffff93
  40a4b3:	mov    eax,ebx
  40a4b5:	adc    ch,BYTE PTR [ecx+ebp*1]
  40a4b8:	sub    DWORD PTR [edi+0x18],esp
  40a4bb:	inc    edx
  40a4bc:	sbb    al,0xac
  40a4be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4bf:	ror    ah,cl
  40a4c1:	or     eax,0xbcab69a6
  40a4c6:	lahf   
  40a4c7:	ja     0x40a520
  40a4c9:	rol    DWORD PTR [ecx+0x5c],1
  40a4cc:	sbb    al,0x4
  40a4ce:	mov    al,0xa9
  40a4d0:	or     al,0xe8
  40a4d2:	popa   
  40a4d3:	in     al,dx
  40a4d4:	pop    ecx
  40a4d5:	and    esp,esi
  40a4d7:	mov    al,ds:0x94c1c1de
  40a4dc:	and    dh,BYTE PTR [edx]
  40a4de:	lock lock push esp
  40a4e1:	fcomi  st,st(2)
  40a4e3:	ins    DWORD PTR es:[edi],dx
  40a4e4:	idiv   DWORD PTR [ebp+0x1fdfa2fc]
  40a4ea:	cld    
  40a4eb:	dec    edx
  40a4ec:	stos   BYTE PTR es:[edi],al
  40a4ed:	imul   esi,DWORD PTR [edi+0x11],0x7c8cc93d
  40a4f4:	mov    ds:0x6ba2e673,al
  40a4f9:	ins    DWORD PTR es:[edi],dx
  40a4fa:	rol    BYTE PTR [ecx+0x1907b69],1
  40a500:	stos   DWORD PTR es:[edi],eax
  40a501:	lock hlt 
  40a503:	nop
  40a504:	push   ebp
  40a505:	out    0x92,al
  40a507:	or     al,0xac
  40a509:	mov    ebx,0xe46a5ea1
  40a50e:	or     BYTE PTR [edx+0x0],ah
  40a511:	pop    es
  40a512:	test   al,0x60
  40a514:	inc    esi
  40a515:	in     eax,0x9d
  40a517:	cmc    
  40a518:	cdq    
  40a519:	sbb    DWORD PTR [esi+0x7ea57029],ebx
  40a51f:	ror    DWORD PTR [edx+0x3d],cl
  40a522:	jo     0x40a56e
  40a524:	push   es
  40a525:	and    eax,esp
  40a527:	xchg   ebp,eax
  40a528:	iret   
  40a529:	rol    BYTE PTR [edx+0x1d],cl
  40a52c:	or     al,0xbe
  40a52e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a52f:	mov    edi,0x15ae41ce
  40a534:	xchg   ebp,eax
  40a535:	xor    eax,ecx
  40a537:	jmp    0x83be619d
  40a53c:	push   0xfcc818e2
  40a541:	cmc    
  40a542:	stos   BYTE PTR es:[edi],al
  40a543:	push   edx
  40a544:	cmc    
  40a545:	mov    ?,WORD PTR [ecx-0x28a847f2]
  40a54b:	push   eax
  40a54c:	fdiv   QWORD PTR [edi+0x72]
  40a54f:	dec    ecx
  40a550:	mov    eax,0x7a46d73d
  40a555:	(bad)  
  40a556:	xor    al,0x1c
  40a558:	sbb    eax,0xb3a2dd1a
  40a55e:	ja     0x40a586
  40a560:	sub    DWORD PTR [edi],edi
  40a562:	xchg   edi,eax
  40a563:	shl    DWORD PTR [edi],cl
  40a565:	inc    eax
  40a566:	out    0xc,eax
  40a568:	dec    edi
  40a569:	ins    DWORD PTR es:[edi],dx
  40a56a:	shr    DWORD PTR [esi+0x4880197e],0xb6
  40a571:	cmp    dh,dl
  40a573:	pop    ebp
  40a574:	mov    es,WORD PTR [ebx+esi*2]
  40a577:	sti    
  40a578:	jl     0x40a560
  40a57a:	or     eax,0x2f77cd48
  40a57f:	daa    
  40a580:	in     eax,dx
  40a581:	jnp    0x40a5f2
  40a583:	in     eax,0x6b
  40a585:	jmp    0x40a578
  40a587:	cli    
  40a588:	jne    0x40a538
  40a58a:	daa    
  40a58b:	cdq    
  40a58c:	loop   0x40a557
  40a58e:	mov    cs:0x6ef96c58,eax
  40a594:	bound  eax,QWORD PTR [edx-0x31]
  40a597:	jg     0x40a55d
  40a599:	cmc    
  40a59a:	inc    eax
  40a59b:	cmp    al,0xc0
  40a59d:	add    al,BYTE PTR [edx-0x75]
  40a5a0:	packsswb mm6,QWORD PTR [ecx]
  40a5a3:	hlt    
  40a5a4:	js     0x40a5ea
  40a5a6:	shl    DWORD PTR [ebp+0x4016ef64],cl
  40a5ac:	mov    gs,WORD PTR ds:0x83beb02d
  40a5b2:	sbb    eax,0x5bee9398
  40a5b7:	pop    ebx
  40a5b8:	(bad)  
  40a5b9:	je     0x40a548
  40a5bb:	dec    esi
  40a5bc:	push   esi
  40a5bd:	mov    ah,0xc7
  40a5bf:	div    BYTE PTR [esi+0x28]
  40a5c2:	scas   al,BYTE PTR es:[edi]
  40a5c3:	mov    dl,0x4c
  40a5c5:	mov    eax,ds:0x4036d476
  40a5ca:	push   esi
  40a5cb:	aas    
  40a5cc:	pop    eax
  40a5cd:	leave  
  40a5ce:	cmp    DWORD PTR [ecx-0x53],ecx
  40a5d1:	dec    ecx
  40a5d2:	jecxz  0x40a5f4
  40a5d4:	dec    edx
  40a5d5:	jo     0x40a5f9
  40a5d7:	sbb    al,0x98
  40a5d9:	jp     0x40a56c
  40a5db:	mov    eax,0xc1956882
  40a5e0:	add    al,0x65
  40a5e2:	push   edx
  40a5e3:	mov    eax,esp
  40a5e5:	sbb    al,ah
  40a5e7:	xor    edi,DWORD PTR [edx-0x6c]
  40a5ea:	sbb    dh,ch
  40a5ec:	sub    al,0xa7
  40a5ee:	test   eax,0x506af71a
  40a5f3:	xchg   ebp,eax
  40a5f4:	xor    al,0x30
  40a5f6:	cwde   
  40a5f7:	dec    esp
  40a5f8:	in     al,dx
  40a5f9:	popf   
  40a5fa:	stos   BYTE PTR es:[edi],al
  40a5fb:	jmp    0x40a5b0
  40a5fd:	or     DWORD PTR [eax],edi
  40a5ff:	sub    BYTE PTR [ecx+0x512a904b],bh
  40a605:	lds    eax,FWORD PTR [eax-0x68637179]
  40a60b:	fcomp  QWORD PTR [ecx+0x6385b177]
  40a611:	or     eax,0xffffffb6
  40a614:	fs jmp 0x122a2485
  40a61a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a61b:	push   ebx
  40a61c:	push   ds
  40a61d:	sahf   
  40a61e:	xchg   edx,eax
  40a61f:	and    ebp,DWORD PTR [eax+0x6afe570]
  40a625:	and    BYTE PTR [edx+0x7b],0xc9
  40a629:	or     DWORD PTR [eax],ecx
  40a62b:	dec    ebx
  40a62c:	xor    BYTE PTR [ecx-0x4],bl
  40a62f:	in     eax,0x41
  40a631:	into   
  40a632:	scas   eax,DWORD PTR es:[edi]
  40a633:	cmc    
  40a634:	js     0x40a5de
  40a636:	or     eax,0x17d10019
  40a63b:	push   esp
  40a63c:	leave  
  40a63d:	setl   BYTE PTR [edi-0x12155b2a]
  40a644:	dec    ebp
  40a645:	add    BYTE PTR [edx+0x2f],0x36
  40a649:	mov    ds:0xa91cd793,al
  40a64e:	aad    0x64
  40a650:	repz iret 
  40a652:	sbb    eax,0x760807fc
  40a657:	pop    ds
  40a658:	mov    ah,0xec
  40a65a:	test   DWORD PTR [eax+0x3b],ebp
  40a65d:	(bad)  
  40a65e:	jg     0x40a689
  40a660:	inc    edx
  40a661:	push   cs
  40a662:	shl    BYTE PTR [ecx+0x6a],cl
  40a665:	mov    ecx,0x9e2c967
  40a66a:	adc    DWORD PTR [eax+0x7a],esi
  40a66d:	mov    bh,0x9d
  40a66f:	mov    eax,ecx
  40a671:	es jnp 0x40a6ce
  40a674:	jns    0x40a66e
  40a676:	xchg   ebx,eax
  40a677:	fld    TBYTE PTR ds:0xae74aa3
  40a67d:	aaa    
  40a67e:	push   eax
  40a67f:	pusha  
  40a680:	repz aad 0x78
  40a683:	aam    0x82
  40a685:	and    DWORD PTR [ebp+0x39],ebp
  40a688:	ret    0x133
  40a68b:	(bad)  
  40a68d:	push   eax
  40a68e:	and    edx,DWORD PTR [eax]
  40a690:	das    
  40a691:	pusha  
  40a692:	mov    edi,0x47e29f93
  40a697:	jb     0x40a6da
  40a699:	dec    eax
  40a69a:	lds    esi,FWORD PTR [ebp+eax*8-0x2432c846]
  40a6a1:	pusha  
  40a6a2:	jb     0x40a68a
  40a6a4:	add    dl,bl
  40a6a6:	jl     0x40a62a
  40a6a8:	sbb    al,0x9f
  40a6aa:	iret   
  40a6ab:	inc    esi
  40a6ac:	ins    DWORD PTR es:[edi],dx
  40a6ad:	jnp    0x40a6d6
  40a6af:	adc    al,bh
  40a6b1:	pop    esp
  40a6b2:	fdecstp 
  40a6b4:	cdq    
  40a6b5:	xchg   ebx,eax
  40a6b6:	push   eax
  40a6b7:	xor    dh,dh
  40a6b9:	call   0x28ea:0x22d03384
  40a6c0:	shl    DWORD PTR [ebp+0x719c9a68],1
  40a6c6:	or     ecx,eax
  40a6c8:	or     ebp,DWORD PTR [eax-0x16]
  40a6cb:	mov    dl,BYTE PTR [eax+0x7e]
  40a6ce:	adc    BYTE PTR [eax-0x78fdd995],bl
  40a6d4:	jae    0x40a738
  40a6d6:	jns    0x40a67c
  40a6d8:	popf   
  40a6d9:	sbb    esi,esp
  40a6db:	jmp    0x64fb:0x4ae6780b
  40a6e2:	xor    eax,0xd20a7dce
  40a6e7:	push   es
  40a6e8:	daa    
  40a6e9:	mov    esi,0x30dc490f
  40a6ee:	mov    dh,0x97
  40a6f0:	cpuid  
  40a6f2:	mov    al,BYTE PTR [ebx-0x2aa39c20]
  40a6f8:	push   eax
  40a6f9:	fsubr  st,st(1)
  40a6fb:	xchg   esi,eax
  40a6fc:	(bad)  
  40a6fd:	cli    
  40a6fe:	adc    bl,BYTE PTR [edi+eax*8-0x20]
  40a702:	nop
  40a703:	mov    ah,0x3b
  40a705:	cmp    eax,0xa198c091
  40a70a:	or     ah,dh
  40a70c:	add    ch,bl
  40a70e:	sar    BYTE PTR [ebp+0x30],1
  40a711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a712:	dec    esp
  40a713:	jecxz  0x40a73f
  40a715:	inc    ebp
  40a716:	xchg   edx,eax
  40a717:	vdivss xmm7,xmm6,DWORD PTR gs:[ebp+0x23d04d38]
  40a720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a721:	xchg   ecx,eax
  40a722:	add    eax,0xfb6d2bfa
  40a727:	inc    eax
  40a728:	arpl   WORD PTR [edi-0x78f4139c],cx
  40a72e:	(bad)  
  40a72f:	jnp    0x40a75d
  40a731:	fwait
  40a732:	inc    eax
  40a733:	aad    0x22
  40a735:	(bad)  
  40a736:	xor    edx,DWORD PTR [ebp+0x118d1167]
  40a73c:	push   eax
  40a73d:	mov    edi,0xd0c69e56
  40a742:	test   al,0x8e
  40a744:	add    eax,0xbdcaa08d
  40a749:	xchg   edx,eax
  40a74a:	rol    DWORD PTR [edx+0x3e56bb20],0x9f
  40a751:	or     ecx,DWORD PTR [ebp+0x476a5e2]
  40a757:	mov    bh,0x38
  40a759:	push   0x4
  40a75b:	pop    edx
  40a75c:	dec    esi
  40a75d:	in     al,dx
  40a75e:	fadd   st,st(7)
  40a760:	dec    edi
  40a761:	jb     0x40a784
  40a763:	sbb    BYTE PTR [esi-0x109dd8cc],ah
  40a769:	sti    
  40a76a:	sub    edx,DWORD PTR [esi]
  40a76c:	out    dx,al
  40a76d:	dec    ebx
  40a76e:	hlt    
  40a76f:	sbb    BYTE PTR [edx+ecx*4+0x6],ch
  40a773:	or     dl,BYTE PTR [ecx-0xf]
  40a776:	or     bh,dh
  40a778:	js     0x40a73d
  40a77a:	sahf   
  40a77b:	mov    ds:0x9683f286,al
  40a780:	pop    eax
  40a781:	test   ecx,edx
  40a783:	popf   
  40a784:	adc    BYTE PTR [ecx],bl
  40a786:	add    eax,0xb14a9309
  40a78b:	jp     0x40a78d
  40a78d:	inc    edx
  40a78e:	inc    esi
  40a78f:	ss mov ebx,0xa9c4afc3
  40a795:	loope  0x40a7f3
  40a797:	and    al,0x2c
  40a799:	(bad)  
  40a79a:	js     0x40a79a
  40a79c:	cmp    cl,BYTE PTR [ebx]
  40a79e:	inc    ebp
  40a79f:	out    dx,al
  40a7a0:	bound  esp,QWORD PTR [eax-0xa]
  40a7a3:	repz add al,0xe3
  40a7a6:	ins    BYTE PTR es:[edi],dx
  40a7a7:	adc    DWORD PTR [edx-0x30d8db72],ecx
  40a7ad:	(bad)  
  40a7ae:	dec    esp
  40a7af:	or     eax,edi
  40a7b1:	mov    eax,DWORD PTR [edx+edx*4+0x4da8bf7e]
  40a7b8:	arpl   WORD PTR [edx-0x80],dx
  40a7bb:	sbb    al,0xdd
  40a7bd:	retf   
  40a7be:	js     0x40a7f5
  40a7c0:	pop    es
  40a7c1:	fild   QWORD PTR [ecx]
  40a7c3:	enter  0x8663,0x92
  40a7c7:	(bad)  
  40a7c8:	out    dx,eax
  40a7c9:	mov    al,0x98
  40a7cb:	in     eax,0x8d
  40a7cd:	call   0x809a:0x12a6ca08
  40a7d4:	mov    ebx,DWORD PTR [edi-0x75]
  40a7d7:	push   esi
  40a7d8:	inc    ebp
  40a7d9:	sbb    DWORD PTR [esi],esi
  40a7db:	aas    
  40a7dc:	push   ds
  40a7dd:	xor    DWORD PTR [ecx+0x30c535d],0xbba015e8
  40a7e7:	je     0x40a829
  40a7e9:	(bad)  
  40a7ea:	clc    
  40a7eb:	or     eax,0xb1508929
  40a7f0:	loop   0x40a817
  40a7f2:	test   DWORD PTR ds:0x3842988f,esp
  40a7f8:	loop   0x40a813
  40a7fa:	sub    DWORD PTR [eax-0x85e6bf0],esi
  40a800:	xor    esi,DWORD PTR [edx+0x7e74941d]
  40a806:	jp     0x40a803
  40a808:	and    dl,BYTE PTR [eax+0x6de228c6]
  40a80e:	shr    BYTE PTR [ecx+0x5e],cl
  40a811:	call   0xf49c:0x4e2fef03
  40a818:	cmp    al,0xa1
  40a81a:	pop    es
  40a81b:	test   eax,0x79dec84a
  40a820:	dec    edi
  40a821:	cdq    
  40a822:	scas   eax,DWORD PTR es:[edi]
  40a823:	sbb    al,0x20
  40a825:	aad    0xd5
  40a827:	mov    al,0x92
  40a829:	js     0x40a845
  40a82b:	test   BYTE PTR [ecx],ch
  40a82d:	and    al,0x8c
  40a82f:	ret    
  40a830:	mov    edx,0xc726610c
  40a835:	mov    ds:0x96f5d412,ax
  40a83b:	pop    ds
  40a83c:	add    BYTE PTR [ebx+edx*4+0x6e],cl
  40a840:	out    0xf2,al
  40a842:	je     0x40a877
  40a844:	lahf   
  40a845:	and    DWORD PTR [ebx-0x194cb69f],edx
  40a84b:	mov    al,0xb4
  40a84d:	js     0x40a822
  40a84f:	push   ds
  40a850:	mov    ecx,0x6de1d85d
  40a855:	sub    BYTE PTR [ecx],ah
  40a857:	rol    BYTE PTR [ebx+edx*2+0x5],1
  40a85b:	add    edi,DWORD PTR ds:0xa1394c73
  40a861:	push   eax
  40a862:	dec    ecx
  40a863:	outs   dx,DWORD PTR ds:[esi]
  40a864:	popf   
  40a865:	mov    eax,0xeb9ce4e4
  40a86a:	mov    ds:0x264a4454,eax
  40a86f:	(bad)  
  40a870:	std    
  40a871:	dec    edi
  40a872:	mov    ds:0xe1eae434,eax
  40a877:	add    al,BYTE PTR [ebp-0x58]
  40a87a:	dec    ebp
  40a87b:	push   esi
  40a87c:	pop    ecx
  40a87d:	xor    al,0x7b
  40a87f:	inc    edi
  40a880:	cli    
  40a881:	fsub   st,st(3)
  40a883:	mov    ds:0xa9927878,al
  40a888:	adc    cl,BYTE PTR [ecx-0x6c]
  40a88b:	jne    0x40a897
  40a88d:	push   esi
  40a88e:	or     ch,al
  40a890:	sbb    eax,0x501c8830
  40a895:	shl    DWORD PTR [esi],1
  40a897:	sbb    bh,BYTE PTR [ebx-0x62]
  40a89a:	dec    esi
  40a89b:	dec    ebp
  40a89c:	das    
  40a89d:	xchg   ebp,eax
  40a89e:	out    dx,eax
  40a89f:	push   ss
  40a8a0:	repz mov ch,0x4c
  40a8a3:	push   esp
  40a8a4:	std    
  40a8a5:	dec    ebx
  40a8a6:	repnz adc DWORD PTR [esi-0x5c],ebp
  40a8aa:	mov    dl,0x69
  40a8ac:	mov    esp,0x52a819a3
  40a8b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8b2:	cwde   
  40a8b3:	scas   eax,DWORD PTR es:[edi]
  40a8b4:	push   edx
  40a8b5:	test   DWORD PTR [eax-0x15f6d835],esi
  40a8bb:	popa   
  40a8bc:	mov    esp,DWORD PTR [ebx]
  40a8be:	mov    esp,0xe544b2c5
  40a8c3:	test   DWORD PTR [edx+0xf],0xbf252121
  40a8ca:	adc    ecx,esp
  40a8cc:	cld    
  40a8cd:	sub    BYTE PTR [esi],dl
  40a8cf:	mov    dh,0x0
  40a8d1:	mov    ds:0xa48d730f,al
  40a8d6:	stc    
  40a8d7:	cld    
  40a8d8:	hlt    
  40a8d9:	dec    edx
  40a8da:	sub    dl,BYTE PTR [edx+0xe28baee]
  40a8e0:	push   edi
  40a8e1:	and    BYTE PTR [edx],bl
  40a8e3:	inc    eax
  40a8e4:	les    edx,FWORD PTR [esi+0x5]
  40a8e7:	xchg   ebx,eax
  40a8e8:	cmp    BYTE PTR [edx],bl
  40a8ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8eb:	mov    ecx,0x6fed00ea
  40a8f0:	jnp    0x40a8bd
  40a8f2:	jmp    0x6d287fce
  40a8f7:	mov    edi,0x7c971bfc
  40a8fc:	(bad)  
  40a8fd:	js     0x40a92f
  40a8ff:	and    al,BYTE PTR [edx]
  40a901:	sub    eax,0xb2939088
  40a906:	shl    ebx,0xa6
  40a909:	cwde   
  40a90a:	out    0x29,al
  40a90c:	mov    eax,ds:0xe5a6a7
  40a911:	imul   ebx,DWORD PTR [ebp-0x181406d9],0xa3eeea16
  40a91b:	add    edi,DWORD PTR [edx+0x21]
  40a91e:	jg     0x40a8a5
  40a920:	push   0x7d14f1c3
  40a925:	adc    BYTE PTR [edi-0x5a0479f0],cl
  40a92b:	ja     0x40a929
  40a92d:	mov    WORD PTR [edi+eax*2+0x192d8492],cs
  40a934:	push   edx
  40a935:	xor    DWORD PTR [ecx-0x2a],0xffffffd6
  40a939:	mov    ebx,0xcf039e4a
  40a93e:	rol    BYTE PTR [ebx+0x1d570426],1
  40a944:	cld    
  40a945:	mov    esp,DWORD PTR [eax-0x1937fa7a]
  40a94b:	pop    edx
  40a94c:	mov    eax,ds:0xeef61a65
  40a951:	nop
  40a952:	add    al,0x21
  40a954:	sub    bh,bl
  40a956:	mov    cr5,ebx
  40a959:	cdq    
  40a95a:	sub    ch,BYTE PTR [edi]
  40a95c:	xchg   BYTE PTR [ecx-0x7529bac6],al
  40a962:	dec    ebp
  40a963:	xchg   ebp,eax
  40a964:	loope  0x40a919
  40a966:	pop    ebp
  40a967:	lahf   
  40a968:	daa    
  40a969:	stos   DWORD PTR es:[edi],eax
  40a96a:	inc    ebx
  40a96b:	shl    DWORD PTR [ecx+0x76],1
  40a96e:	adc    eax,DWORD PTR [eax+esi*8]
  40a971:	push   es
  40a972:	dec    esp
  40a973:	leave  
  40a974:	test   eax,0xc841b637
  40a979:	rol    BYTE PTR [ecx],cl
  40a97b:	fst    st(7)
  40a97d:	test   eax,0xb56876f6
  40a982:	jecxz  0x40a9af
  40a984:	cli    
  40a985:	mov    ?,WORD PTR [esp+ecx*8]
  40a988:	fdivr  DWORD PTR [eax+0x622d13d5]
  40a98e:	or     dh,BYTE PTR [ecx+edx*2-0x6abd2a5e]
  40a995:	add    edi,DWORD PTR [ebx+0x3e]
  40a998:	inc    ebx
  40a999:	ins    BYTE PTR es:[edi],dx
  40a99a:	cmp    ecx,esp
  40a99c:	icebp  
  40a99d:	xor    DWORD PTR [edx-0x3ef55f81],0xb21fa1f
  40a9a7:	sbb    BYTE PTR [ebp-0x56],ah
  40a9aa:	(bad)  
  40a9ab:	stc    
  40a9ac:	xchg   ecx,eax
  40a9ad:	jge    0x40aa1a
  40a9af:	adc    eax,0xf5448108
  40a9b4:	and    DWORD PTR [eax-0x40],eax
  40a9b7:	out    0x6f,eax
  40a9b9:	test   al,0xc2
  40a9bb:	mov    eax,0x1689798e
  40a9c0:	nop
  40a9c1:	cwde   
  40a9c2:	mov    BYTE PTR [eax],dl
  40a9c4:	or     eax,0x144d690c
  40a9c9:	cmp    eax,0xa7b01b64
  40a9ce:	cmp    al,0xd1
  40a9d0:	mov    ebp,0x9b8caae
  40a9d5:	xchg   ebx,eax
  40a9d6:	stos   BYTE PTR es:[edi],al
  40a9d7:	ja     0x40aa4d
  40a9d9:	inc    ecx
  40a9da:	aam    0xe3
  40a9dc:	push   esi
  40a9dd:	xor    al,0xdf
  40a9df:	data16 xchg ch,dh
  40a9e2:	repz (bad) 
  40a9e4:	xchg   ecx,eax
  40a9e5:	sti    
  40a9e6:	pop    es
  40a9e7:	cmp    dl,BYTE PTR ds:0x627d36cb
  40a9ed:	ficomp WORD PTR [edx]
  40a9ef:	sti    
  40a9f0:	jle    0x40a9d8
  40a9f2:	cmp    BYTE PTR [ecx+0x75],dl
  40a9f5:	repz dec eax
  40a9f7:	push   ebp
  40a9f8:	inc    esi
  40a9f9:	repz shr BYTE PTR [edx],cl
  40a9fc:	push   cs
  40a9fd:	mov    ah,0xca
  40a9ff:	test   al,0x5e
  40aa01:	cmp    eax,0xbf218266
  40aa06:	ret    0xe0cd
  40aa09:	retf   
  40aa0a:	mov    dh,0x94
  40aa0c:	add    DWORD PTR [edi+0x27b593e1],0xffffffef
  40aa13:	sahf   
  40aa14:	push   0x75dab574
  40aa19:	daa    
  40aa1a:	loope  0x40aa83
  40aa1c:	shr    BYTE PTR [ebx+0x4c],cl
  40aa1f:	loope  0x40aa98
  40aa21:	clc    
  40aa22:	shl    edx,cl
  40aa24:	shr    DWORD PTR [ecx-0x5b],cl
  40aa27:	and    BYTE PTR [eax+eiz*1-0x49c26e9b],0x3d
  40aa2f:	shl    DWORD PTR [edi+eiz*2+0x33f637c],0x5e
  40aa37:	push   ds
  40aa38:	jl     0x40aa72
  40aa3a:	fwait
  40aa3b:	add    bh,bh
  40aa3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa3e:	aad    0xe5
  40aa40:	sub    esp,DWORD PTR [ecx-0x31d3af16]
  40aa46:	sub    BYTE PTR [ecx-0x59991f4b],dh
  40aa4c:	rcr    BYTE PTR [esi-0x694688c7],0x52
  40aa53:	(bad)  
  40aa54:	in     eax,dx
  40aa55:	cmp    al,0xf2
  40aa57:	xor    BYTE PTR [ecx+0x6],ch
  40aa5a:	push   es
  40aa5b:	push   ss
  40aa5c:	jl     0x40aa3b
  40aa5e:	sub    ebp,eax
  40aa60:	pop    es
  40aa61:	sub    esp,0xffffffe0
  40aa64:	(bad)  
  40aa65:	shl    edx,cl
  40aa67:	push   cx
  40aa69:	xchg   DWORD PTR [edx],eax
  40aa6b:	xlat   BYTE PTR ds:[ebx]
  40aa6c:	ds inc edx
  40aa6e:	sbb    esp,DWORD PTR [ecx-0x4bdb644]
  40aa74:	cmp    al,0x1b
  40aa76:	in     al,0xdf
  40aa78:	sub    BYTE PTR [edi-0x3e0391f5],al
  40aa7e:	push   esi
  40aa7f:	dec    ebx
  40aa80:	pop    ss
  40aa81:	mov    ebp,DWORD PTR [ebp+0x4e]
  40aa84:	aam    0x29
  40aa86:	pop    es
  40aa87:	fwait
  40aa88:	mov    eax,DWORD PTR [ebp-0x15a93c99]
  40aa8e:	pop    ebp
  40aa8f:	push   0xffffffd0
  40aa91:	outs   dx,BYTE PTR ds:[esi]
  40aa92:	pop    edi
  40aa93:	cli    
  40aa94:	in     eax,0x91
  40aa96:	dec    DWORD PTR ds:0xf924a842
  40aa9c:	cmp    DWORD PTR [ebp-0x54],eax
  40aa9f:	je     0x40aa98
  40aaa1:	cld    
  40aaa2:	leave  
  40aaa3:	adc    al,ch
  40aaa5:	or     al,0xd6
  40aaa7:	xor    eax,0xcbdd5fcc
  40aaac:	or     al,0x71
  40aaae:	xor    DWORD PTR ds:0x829742be,edx
  40aab4:	loope  0x40aa94
  40aab6:	or     ebx,0xc86d4f9e
  40aabc:	das    
  40aabd:	adc    ecx,edi
  40aabf:	adc    eax,0x3ecc3416
  40aac4:	push   cs
  40aac5:	add    DWORD PTR [ebx+edi*8+0x7d],esi
  40aac9:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40aacb:	pop    esi
  40aacc:	imul   eax,DWORD PTR [esi-0x6418ddf5],0x28
  40aad3:	jmp    0xd900d5ad
  40aad8:	popa   
  40aad9:	jecxz  0x40ab27
  40aadb:	dec    ebp
  40aadc:	adc    eax,0xc5c3e2f2
  40aae1:	fs fcmovnbe st,st(1)
  40aae4:	outs   dx,BYTE PTR ds:[esi]
  40aae5:	lods   al,BYTE PTR ds:[esi]
  40aae6:	cmp    al,BYTE PTR [eax]
  40aae8:	fdivr  DWORD PTR [ebx+edi*4-0x1a26d53d]
  40aaef:	test   eax,0xff625d82
  40aaf4:	data16 xor ch,BYTE PTR [eax-0x2e5cb0a]
  40aafb:	(bad)  
  40aafc:	mov    edi,0xe52cbd22
  40ab01:	mov    eax,ds:0x61f8897b
  40ab06:	adc    dl,bl
  40ab08:	and    ecx,DWORD PTR [edx-0x3a]
  40ab0b:	rol    DWORD PTR [edx+eiz*1-0x499175b7],1
  40ab12:	int3   
  40ab13:	jmp    0x40aafb
  40ab15:	out    dx,eax
  40ab16:	add    ebp,edx
  40ab18:	adc    eax,0xfa7140d1
  40ab1d:	push   cs
  40ab1e:	fisub  DWORD PTR [edi]
  40ab20:	in     eax,dx
  40ab21:	cld    
  40ab22:	lds    esi,FWORD PTR [ebx]
  40ab24:	ins    BYTE PTR es:[edi],dx
  40ab25:	xor    bh,BYTE PTR [ebx]
  40ab27:	test   BYTE PTR [edi+0x1],dl
  40ab2a:	sbb    esp,ebp
  40ab2c:	sub    eax,0x1a6ddacf
  40ab31:	test   DWORD PTR [esi-0x3075e6fe],eax
  40ab37:	mov    ds:0xab00c8e3,eax
  40ab3c:	mov    ebx,0xd1d68fe
  40ab41:	inc    esp
  40ab42:	xchg   edx,eax
  40ab43:	mov    bl,0xb5
  40ab45:	fsub   DWORD PTR [esi-0x49]
  40ab48:	or     al,0x40
  40ab4a:	mov    WORD PTR [edx-0x14785cb7],?
  40ab50:	call   0xb916:0x9071f72a
  40ab57:	jg     0x40ab17
  40ab59:	xor    al,0x13
  40ab5b:	pusha  
  40ab5c:	stc    
  40ab5d:	xor    dl,bl
  40ab5f:	and    bl,BYTE PTR [esp+ecx*4+0x447f979c]
  40ab66:	jg     0x40abd2
  40ab68:	pause  
  40ab6a:	jl     0x40ab60
  40ab6c:	jge    0x40abbb
  40ab6e:	mov    ebp,0xae147c18
  40ab73:	add    esi,DWORD PTR [ecx]
  40ab75:	fcmovnu st,st(4)
  40ab77:	icebp  
  40ab78:	sub    al,0xe2
  40ab7a:	enter  0x5edd,0x4
  40ab7e:	sub    edx,eax
  40ab80:	jo     0x40abe3
  40ab82:	mov    bl,0x14
  40ab84:	icebp  
  40ab85:	mov    ds:0xaa556089,eax
  40ab8a:	aam    0x7c
  40ab8c:	jns    0x40abf5
  40ab8e:	dec    eax
  40ab8f:	stos   BYTE PTR es:[edi],al
  40ab90:	(bad)  
  40ab91:	out    0x45,al
  40ab93:	pop    esi
  40ab94:	mov    bh,0xe9
  40ab96:	retf   
  40ab97:	out    0xa7,eax
  40ab99:	add    DWORD PTR [edi+0x67578dc6],0xb10d8034
  40aba3:	shl    BYTE PTR [edx-0x58124bf8],1
  40aba9:	(bad)
  40abac:	mov    al,ds:0x7a8ea693
  40abb1:	inc    esp
  40abb2:	adc    BYTE PTR [ecx+esi*2-0x7d7d3fc8],ah
  40abb9:	cdq    
  40abba:	dec    eax
  40abbb:	mov    ds:0xda079ce2,eax
  40abc0:	pusha  
  40abc1:	sub    BYTE PTR [edi],0xeb
  40abc4:	ja     0x40ac13
  40abc6:	stos   BYTE PTR es:[edi],al
  40abc7:	test   BYTE PTR [edi-0x4f],cl
  40abca:	push   0xfffffff6
  40abcc:	fcomp  QWORD PTR [edx-0x4b]
  40abcf:	inc    eax
  40abd0:	test   eax,0x44a0b0b1
  40abd5:	pop    esp
  40abd6:	out    0x46,eax
  40abd8:	in     eax,0xa2
  40abda:	push   ebp
  40abdb:	std    
  40abdc:	or     DWORD PTR [ebp+0x5f],edx
  40abdf:	mov    al,ds:0xb01cf89
  40abe4:	jle    0x40ab7b
  40abe6:	pop    ecx
  40abe7:	sbb    eax,0xdf660e3e
  40abec:	sbb    al,0x28
  40abee:	out    dx,eax
  40abef:	sbb    bl,bl
  40abf1:	add    ecx,0xaf64dbfe
  40abf7:	adc    edx,ebx
  40abf9:	mov    al,ds:0xd02bcd9c
  40abfe:	repnz pop ss
  40ac00:	aaa    
  40ac01:	enter  0xbf11,0x48
  40ac05:	lods   al,BYTE PTR gs:[esi]
  40ac07:	mov    eax,ds:0xa0a2695
  40ac0c:	sti    
  40ac0d:	aad    0x8d
  40ac0f:	mov    bl,0x1f
  40ac11:	cmp    al,0xb4
  40ac13:	mov    ds:0x1b5faecc,eax
  40ac18:	js     0x40ac20
  40ac1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac1b:	cmp    eax,0x1d55935f
  40ac20:	sbb    ah,al
  40ac22:	inc    ecx
  40ac23:	rcr    BYTE PTR [edi],cl
  40ac25:	dec    edx
  40ac26:	jmp    0x40aca1
  40ac28:	fdiv   DWORD PTR [ebx-0x4f]
  40ac2b:	sub    al,0xca
  40ac2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac2e:	icebp  
  40ac2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac30:	repz test DWORD PTR [edx+eiz*2],esp
  40ac34:	pop    edi
  40ac35:	repnz leave 
  40ac37:	mul    BYTE PTR [ebx-0x12]
  40ac3a:	xor    al,0xce
  40ac3c:	scas   al,BYTE PTR es:[edi]
  40ac3d:	icebp  
  40ac3e:	sti    
  40ac3f:	test   al,0xfc
  40ac41:	rcr    BYTE PTR [ebx],cl
  40ac43:	push   0xffffffa1
  40ac45:	int    0xa
  40ac47:	mov    esi,DWORD PTR [ecx+0x1dbdfe58]
  40ac4d:	shl    dh,1
  40ac4f:	sub    ah,dl
  40ac51:	and    dh,BYTE PTR [edx+0xc4c9d7c]
  40ac57:	mov    dl,0xe2
  40ac59:	sbb    edx,edx
  40ac5b:	xchg   edx,eax
  40ac5c:	cdq    
  40ac5d:	inc    edx
  40ac5e:	test   al,0x62
  40ac60:	cmp    DWORD PTR [ebx-0x50],esp
  40ac63:	push   edx
  40ac64:	push   eax
  40ac65:	push   esi
  40ac66:	ins    BYTE PTR es:[edi],dx
  40ac67:	jns    0x40ac1a
  40ac69:	cli    
  40ac6a:	inc    edi
  40ac6b:	nop
  40ac6c:	xor    ebx,edi
  40ac6e:	dec    esp
  40ac6f:	xchg   edi,eax
  40ac70:	js     0x40acb3
  40ac72:	fiadd  DWORD PTR [edi]
  40ac74:	mov    ch,0x69
  40ac76:	jnp    0x40ac7c
  40ac78:	mov    esp,0x5bf29c0e
  40ac7d:	(bad)  
  40ac80:	aas    
  40ac81:	pop    ecx
  40ac82:	hlt    
  40ac83:	cli    
  40ac84:	push   0x1d
  40ac86:	xor    DWORD PTR [eax-0x67],ebp
  40ac89:	gs mov ebp,0xcfe510d6
  40ac8f:	popa   
  40ac90:	pop    ds
  40ac91:	or     ecx,DWORD PTR [edi]
  40ac93:	aad    0xac
  40ac95:	sub    DWORD PTR [eax],ebp
  40ac97:	dec    esp
  40ac98:	cdq    
  40ac99:	(bad)  
  40ac9a:	repnz or cl,bl
  40ac9d:	xchg   esp,eax
  40ac9e:	add    al,0x36
  40aca0:	xor    BYTE PTR [ebp-0x43cc0d8b],cl
  40aca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aca7:	push   ecx
  40aca8:	jge    0x40acf7
  40acaa:	push   0x19ba9ac0
  40acaf:	mov    ebx,0x12568ee2
  40acb4:	mov    ebp,0x5323c784
  40acb9:	xor    al,0x5
  40acbb:	das    
  40acbc:	mov    ecx,0x4dca3edb
  40acc1:	adc    cl,BYTE PTR [ebx+0x3768b7b6]
  40acc7:	adc    edi,0xda036f9b
  40accd:	popf   
  40acce:	inc    edx
  40accf:	and    ebp,DWORD PTR [esi]
  40acd1:	nop
  40acd2:	pop    esp
  40acd3:	inc    ebx
  40acd4:	dec    esp
  40acd5:	pop    edi
  40acd6:	clc    
  40acd7:	push   eax
  40acd8:	loope  0x40ac90
  40acda:	cmp    bl,BYTE PTR [ebx+0x12]
  40acdd:	or     ebx,DWORD PTR [ebx]
  40acdf:	popf   
  40ace0:	mov    al,0x95
  40ace2:	push   0x829f7495
  40ace7:	jnp    0x40acbc
  40ace9:	pop    edi
  40acea:	out    0x69,eax
  40acec:	xchg   ecx,eax
  40aced:	jne    0x40acc8
  40acef:	mov    ebx,0xca1fe901
  40acf4:	sub    eax,0xb62fdd49
  40acf9:	dec    esp
  40acfa:	mov    WORD PTR [eax-0xf152910],ds
  40ad00:	inc    ebp
  40ad01:	cmp    ecx,DWORD PTR [esi+0x57739f48]
  40ad07:	mov    BYTE PTR [eax-0x73],dl
  40ad0a:	cmp    al,0x3
  40ad0c:	add    esp,DWORD PTR [ecx-0x34]
  40ad0f:	ins    DWORD PTR es:[edi],dx
  40ad10:	and    ebx,DWORD PTR [ebx-0x46]
  40ad13:	iret   
  40ad14:	jo     0x40acdf
  40ad16:	xchg   ebx,eax
  40ad17:	xchg   esp,eax
  40ad18:	xchg   esp,eax
  40ad19:	push   edi
  40ad1a:	xchg   esp,eax
  40ad1b:	outs   dx,DWORD PTR ds:[esi]
  40ad1c:	addr16 (bad) 
  40ad1e:	pop    edi
  40ad1f:	and    DWORD PTR [ebp+ebp*1+0x1344c67d],esi
  40ad26:	call   0x7a98:0x75ce0c80
  40ad2d:	sahf   
  40ad2e:	xor    al,0xf8
  40ad30:	cwde   
  40ad31:	leave  
  40ad32:	in     eax,0x4
  40ad34:	sub    esp,edi
  40ad36:	push   ebx
  40ad37:	call   0x2e62:0x2ad51b40
  40ad3e:	les    ebx,FWORD PTR [ebx]
  40ad40:	jecxz  0x40ad7a
  40ad42:	pop    ebp
  40ad43:	sub    DWORD PTR [esi-0x109b3488],0x4765dd47
  40ad4d:	inc    edi
  40ad4e:	add    ebx,DWORD PTR [esi+0x4e3d6508]
  40ad54:	sbb    eax,ebx
  40ad56:	dec    ebx
  40ad57:	in     al,dx
  40ad58:	cmp    eax,0xe6f76f65
  40ad5d:	xchg   edx,eax
  40ad5e:	fild   DWORD PTR [edx+0x65]
  40ad61:	test   al,0xf9
  40ad63:	std    
  40ad64:	pop    ss
  40ad65:	in     eax,0x2c
  40ad67:	ins    DWORD PTR es:[edi],dx
  40ad68:	mov    esi,0xedbad1ec
  40ad6d:	xor    eax,0x1e81ee3d
  40ad72:	mov    bl,0x60
  40ad74:	cwde   
  40ad75:	xor    ebx,ecx
  40ad77:	mov    bh,0x63
  40ad79:	add    DWORD PTR [ebx-0x37774ddb],ecx
  40ad7f:	inc    ebp
  40ad80:	int    0xf0
  40ad82:	xor    BYTE PTR [ebp-0x4a],bl
  40ad85:	dec    esi
  40ad86:	mov    eax,ds:0x8fc9caeb
  40ad8b:	in     al,dx
  40ad8c:	xor    DWORD PTR [ecx+ecx*2+0x16],esi
  40ad90:	dec    esi
  40ad91:	icebp  
  40ad92:	mov    eax,DWORD PTR es:[ecx+esi*8-0x4f15fe61]
  40ad9a:	adc    DWORD PTR [eax+0x16227264],esi
  40ada0:	cmc    
  40ada1:	sbb    al,0x8e
  40ada3:	shl    DWORD PTR [ebp-0x2f9c0b17],1
  40ada9:	sub    eax,0x4b24b130
  40adae:	aam    0x76
  40adb0:	js     0x40ad3e
  40adb2:	cmp    dl,BYTE PTR [eax-0x2181eb1c]
  40adb8:	ret    0x11f7
  40adbb:	cmp    eax,0x357f3c62
  40adc0:	ja     0x40adda
  40adc2:	repz adc DWORD PTR [edx+0x7a],edx
  40adc6:	fs push es
  40adc8:	xor    esp,ecx
  40adca:	loopne 0x40ad7b
  40adcc:	in     al,0xd1
  40adce:	jmp    0x40ada6
  40add0:	repnz mov eax,ds:0xece49af6
  40add6:	jmp    0x40ae16
  40add8:	add    BYTE PTR [ebp+0x3b],0x5f
  40addc:	and    edx,DWORD PTR [edx-0x42ed09c5]
  40ade2:	add    al,0xf2
  40ade4:	sbb    DWORD PTR [esi],eax
  40ade6:	fs scas eax,DWORD PTR es:[edi]
  40ade8:	loope  0x40ae5e
  40adea:	ror    BYTE PTR [edx-0x20],cl
  40aded:	jne    0x40adf1
  40adef:	in     al,0xa7
  40adf1:	popf   
  40adf2:	test   eax,0x2d24b8c8
  40adf7:	mov    esp,DWORD PTR [edi]
  40adf9:	ins    BYTE PTR es:[edi],dx
  40adfa:	mov    ebx,esp
  40adfc:	add    ebp,esi
  40adfe:	xor    al,0x6d
  40ae00:	aam    0x53
  40ae02:	jb     0x40add9
  40ae04:	outs   dx,BYTE PTR ds:[esi]
  40ae05:	aad    0xac
  40ae07:	cmp    al,0x30
  40ae09:	and    eax,DWORD PTR ds:0xcdd527f1
  40ae0f:	rcl    BYTE PTR [edi],1
  40ae11:	sahf   
  40ae12:	enter  0x54e9,0xb5
  40ae16:	rol    cl,0x9b
  40ae19:	(bad)  
  40ae1b:	dec    ecx
  40ae1c:	sti    
  40ae1d:	rcl    BYTE PTR [esi-0x3bd6f3e5],cl
  40ae23:	add    cl,BYTE PTR [ebp+0x6b]
  40ae26:	nop
  40ae27:	sub    ebx,DWORD PTR [ecx-0x36]
  40ae2a:	das    
  40ae2b:	fmulp  st(4),st
  40ae2d:	icebp  
  40ae2e:	out    0x99,al
  40ae30:	sbb    DWORD PTR [edi],0x7b4bd3cb
  40ae36:	sti    
  40ae37:	lods   al,BYTE PTR ds:[esi]
  40ae38:	imul   esp,DWORD PTR [edi],0x6f
  40ae3b:	inc    DWORD PTR [ebx-0x7501d53f]
  40ae41:	sub    bl,dh
  40ae43:	aas    
  40ae44:	cmc    
  40ae45:	mov    al,ds:0xcc0c4497
  40ae4a:	mov    dl,0x73
  40ae4c:	dec    ebx
  40ae4d:	or     al,0xfc
  40ae4f:	adc    cl,bh
  40ae51:	enter  0x44dc,0x93
  40ae55:	and    BYTE PTR [eax],bh
  40ae57:	outs   dx,BYTE PTR ds:[esi]
  40ae58:	jmp    0x40ae4c
  40ae5a:	mov    ebx,0xfe46c9a1
  40ae5f:	xor    eax,0x64c416e
  40ae64:	xchg   ebp,eax
  40ae65:	neg    BYTE PTR [edx]
  40ae67:	and    BYTE PTR [edx+0x503a9a2],ah
  40ae6d:	and    ch,cl
  40ae6f:	fs pusha 
  40ae71:	in     al,0xd8
  40ae73:	jle    0x40ae51
  40ae75:	mov    esp,0x7c6efb47
  40ae7a:	leave  
  40ae7b:	mov    dl,0x6a
  40ae7d:	mov    al,0x3d
  40ae7f:	(bad)  [esi+0x1e]
  40ae82:	imul   ecx,edi,0xffffffec
  40ae85:	test   eax,0x8b8b0f86
  40ae8a:	sub    al,0xfb
  40ae8c:	leave  
  40ae8d:	push   ebx
  40ae8e:	(bad)  
  40ae8f:	hlt    
  40ae90:	std    
  40ae91:	cmp    eax,0xb830229f
  40ae96:	inc    esi
  40ae97:	ins    DWORD PTR es:[edi],dx
  40ae98:	jnp    0x40aec7
  40ae9a:	inc    esp
  40ae9b:	pop    ebp
  40ae9c:	es add eax,0x46
  40aea0:	pop    ss
  40aea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aea2:	cmp    eax,0xafdac852
  40aea7:	lock sbb edi,ebx
  40aeaa:	cwde   
  40aeab:	ins    BYTE PTR es:[edi],dx
  40aeac:	sbb    BYTE PTR ds:0x652571c1,bh
  40aeb2:	mov    ebx,0x6f41b84c
  40aeb7:	les    edi,FWORD PTR [ebx+0x6b]
  40aeba:	adc    DWORD PTR [edx+edi*4+0x38fadacc],esp
  40aec1:	jo     0x40aeaa
  40aec3:	enter  0x633,0x9d
  40aec7:	pop    es
  40aec8:	adc    esi,DWORD PTR [edi+ebx*2-0x74]
  40aecc:	xor    al,0xd4
  40aece:	icebp  
  40aecf:	sub    eax,0x2179f133
  40aed4:	dec    eax
  40aed5:	mov    eax,ds:0xd2d0570e
  40aeda:	add    dh,BYTE PTR [edx]
  40aedc:	push   ss
  40aedd:	rol    BYTE PTR [ebx],cl
  40aedf:	sub    eax,DWORD PTR [ebp+0x1d]
  40aee2:	daa    
  40aee3:	inc    edx
  40aee4:	lock pushf 
  40aee6:	cmp    edi,esp
  40aee8:	dec    ecx
  40aee9:	ins    BYTE PTR es:[edi],dx
  40aeea:	jo     0x40aeb1
  40aeec:	mov    ds:0x2f5ef1ca,al
  40aef1:	je     0x40af11
  40aef3:	idiv   BYTE PTR [edi]
  40aef5:	pop    ds
  40aef6:	gs mov ebp,0x9dbb96c6
  40aefc:	dec    ebp
  40aefd:	js     0x40ae9a
  40aeff:	push   es
  40af00:	retf   
  40af01:	icebp  
  40af02:	in     eax,0xce
  40af04:	push   eax
  40af05:	cmp    ebx,edi
  40af07:	pop    edx
  40af08:	clc    
  40af09:	fld    TBYTE PTR [esi+0x2a79089b]
  40af0f:	pop    esp
  40af10:	xlat   BYTE PTR ds:[ebx]
  40af11:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af13:	add    eax,0x4caa5564
  40af18:	inc    DWORD PTR [ecx+0x4e]
  40af1b:	xchg   ebp,eax
  40af1c:	sar    ebx,cl
  40af1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af1f:	lods   al,BYTE PTR ds:[esi]
  40af20:	or     esp,edx
  40af22:	mov    WORD PTR [edx+0x5f5b97be],cs
  40af28:	test   BYTE PTR [edi+0x6f3c8fba],cl
  40af2e:	cmp    al,0xb4
  40af30:	or     BYTE PTR [ebx-0xe3c594e],0xca
  40af37:	test   eax,0x547610c2
  40af3c:	dec    ebp
  40af3d:	or     eax,0x25810991
  40af42:	iret   
  40af43:	sub    edi,esp
  40af45:	xor    DWORD PTR [ebp-0x5],eax
  40af48:	idiv   edi
  40af4a:	mov    ds:0x642063a,al
  40af4f:	jmp    0xd5b5:0x919d40f8
  40af56:	adc    BYTE PTR [ebp-0x36],al
  40af59:	stos   DWORD PTR es:[edi],eax
  40af5a:	mov    ebx,0xad799c5e
  40af5f:	aaa    
  40af60:	stc    
  40af61:	test   BYTE PTR [edi+0x58e8c571],ah
  40af67:	jmp    0x40af13
  40af69:	jne    0x40afdc
  40af6b:	mov    es:0x5d78b559,al
  40af71:	clc    
  40af72:	stc    
  40af73:	lock and DWORD PTR [esi-0x60],ebx
  40af77:	aas    
  40af78:	ja     0x40aefc
  40af7a:	mov    DWORD PTR ds:0xd4c308af,0xb149a2f8
  40af84:	popa   
  40af85:	mov    edi,0x618cea1c
  40af8a:	repz lahf 
  40af8c:	and    al,0xfc
  40af8e:	xchg   BYTE PTR [eax+0x68],ch
  40af91:	cmp    DWORD PTR [esi+ebx*4+0x2651d702],eax
  40af98:	sbb    ebp,DWORD PTR [edx-0x5b659672]
  40af9e:	xchg   esi,eax
  40af9f:	das    
  40afa0:	cmp    BYTE PTR [edx+0x10013da6],al
  40afa6:	shr    BYTE PTR [esi-0x667639a4],0xb1
  40afad:	pop    esp
  40afae:	jg     0x40afa4
  40afb0:	bound  ebx,QWORD PTR [eax]
  40afb2:	dec    esp
  40afb3:	mov    ebx,0x81a56648
  40afb8:	sti    
  40afb9:	rcr    DWORD PTR [ebp+0x1542ead3],0x19
  40afc0:	adc    BYTE PTR [edx],al
  40afc2:	mov    ds:0x74a3faee,al
  40afc7:	cmp    DWORD PTR [ebp+0x31],edi
  40afca:	rcl    cl,cl
  40afcc:	ret    0x79fa
  40afcf:	je     0x40af6a
  40afd1:	sub    bh,BYTE PTR [edx]
  40afd3:	loop   0x40af6a
  40afd5:	mov    edi,0xcbb26c96
  40afda:	xlat   BYTE PTR ds:[ebx]
  40afdb:	push   edx
  40afdc:	sub    bh,BYTE PTR [edx-0xc]
  40afdf:	adc    al,ch
  40afe1:	lahf   
  40afe2:	or     ch,0x84
  40afe5:	out    0x57,al
  40afe7:	loopne 0x40afa7
  40afe9:	(bad)  [esi-0x131fe547]
  40afef:	ins    DWORD PTR es:[edi],dx
  40aff0:	inc    edi
  40aff1:	cmc    
  40aff2:	mov    ch,0x61
  40aff4:	xchg   edx,eax
  40aff5:	jne    0x40b05f
  40aff7:	int    0x3b
  40aff9:	in     eax,0x5d
  40affb:	mov    dl,BYTE PTR [edi+0x78]
  40affe:	mov    esp,0xc7da6f1c
  40b003:	loopne 0x40afbc
  40b005:	add    al,0x5c
  40b007:	adc    DWORD PTR [edi-0x328d979a],edi
  40b00d:	push   edx
  40b00e:	jnp    0x40afb8
  40b010:	(bad)  
  40b011:	and    eax,0xcfb9b66b
  40b016:	retf   
  40b017:	int    0x0
  40b019:	pop    DWORD PTR [edi-0x24b0505b]
  40b01f:	inc    esi
  40b020:	repnz fisttp WORD PTR [ebp+0x48]
  40b024:	and    ebx,DWORD PTR [esi-0x40]
  40b027:	in     al,dx
  40b028:	mov    bl,0x85
  40b02a:	sti    
  40b02b:	inc    esi
  40b02c:	sbb    dl,0xe9
  40b02f:	dec    edi
  40b030:	push   cs
  40b031:	arpl   WORD PTR [ecx],sp
  40b033:	int3   
  40b034:	jmp    0x40afc8
  40b036:	(bad)  
  40b037:	lahf   
  40b038:	mov    ebx,0x89aa95ad
  40b03d:	cmc    
  40b03e:	neg    DWORD PTR [ecx-0x2e]
  40b041:	dec    esi
  40b042:	mov    ebp,DWORD PTR [edi+0x45010720]
  40b048:	sub    edi,edi
  40b04a:	mov    eax,0xa381aa30
  40b04f:	inc    edi
  40b050:	mov    esp,0x7d06f9b
  40b055:	push   esi
  40b056:	mov    ah,0x10
  40b058:	xchg   BYTE PTR [ebx],al
  40b05a:	dec    dx
  40b05c:	inc    ebx
  40b05d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b05e:	lock pop edx
  40b060:	push   es
  40b061:	rol    DWORD PTR [ecx+ecx*8-0x7cc7be85],1
  40b068:	pop    edi
  40b069:	sbb    edx,DWORD PTR [esi-0x1399445e]
  40b06f:	and    DWORD PTR [ecx],0xa1adff2d
  40b075:	xchg   edx,eax
  40b076:	sub    cl,BYTE PTR [esi+0x60ee98b8]
  40b07c:	call   0x6a7e:0xf4bba516
  40b083:	loopne 0x40b0ff
  40b085:	iret   
  40b086:	dec    eax
  40b087:	fild   QWORD PTR [ebp-0x1b37e6b3]
  40b08d:	sub    DWORD PTR [esi+0x138e5a4a],ebp
  40b093:	add    BYTE PTR [edx],cl
  40b095:	and    ch,ah
  40b097:	scas   al,BYTE PTR es:[edi]
  40b098:	lahf   
  40b099:	push   ss
  40b09a:	and    DWORD PTR gs:[esi],esi
  40b09d:	popf   
  40b09e:	gs push esi
  40b0a0:	or     al,0x99
  40b0a2:	gs mov edx,0xaa63e626
  40b0a8:	push   0x7f35796f
  40b0ad:	pop    edx
  40b0ae:	pop    edx
  40b0af:	add    eax,0xb7605ed9
  40b0b4:	xchg   DWORD PTR [ebp+0x74],edx
  40b0b7:	(bad)  
  40b0b8:	jo     0x40b066
  40b0ba:	or     al,0x30
  40b0bc:	fdivr  QWORD PTR [ecx]
  40b0be:	dec    ebx
  40b0bf:	xor    dl,BYTE PTR [eax+0x19]
  40b0c2:	call   FWORD PTR ds:0x29f25a80
  40b0c8:	jg     0x40b0b9
  40b0ca:	es xchg esp,eax
  40b0cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0cd:	cmovno edx,DWORD PTR [ecx-0x61]
  40b0d1:	jb     0x40b09a
  40b0d3:	xchg   ebx,eax
  40b0d4:	enter  0x4609,0x68
  40b0d8:	stos   BYTE PTR es:[edi],al
  40b0d9:	(bad)  
  40b0da:	sbb    eax,0x35ecfbbb
  40b0df:	loope  0x40b069
  40b0e1:	pop    esi
  40b0e2:	lea    edx,ds:[edi-0x30]
  40b0e6:	fidiv  DWORD PTR [edi+0x10]
  40b0e9:	(bad)  
  40b0eb:	cmp    DWORD PTR [ebx+eiz*8-0x6c4328be],ecx
  40b0f2:	push   ebp
  40b0f3:	push   es
  40b0f4:	in     al,0xf1
  40b0f6:	int    0x4d
  40b0f8:	xchg   esi,eax
  40b0f9:	xor    eax,0xc587dcff
  40b0fe:	sahf   
  40b0ff:	mov    ds:0xa154fffe,eax
  40b104:	push   ecx
  40b105:	push   cs
  40b106:	dec    ecx
  40b107:	xor    eax,0xe0100eb7
  40b10c:	aam    0xd3
  40b10e:	arpl   WORD PTR [eax],dx
  40b110:	aaa    
  40b111:	fist   WORD PTR [edi-0x72]
  40b114:	mov    bh,0xa8
  40b116:	mov    ebx,DWORD PTR [ebp-0x33]
  40b119:	pop    ebx
  40b11a:	cmp    edi,edi
  40b11c:	or     bl,ch
  40b11e:	lods   al,BYTE PTR ds:[esi]
  40b11f:	adc    DWORD PTR [ebp+0x298a7357],ebp
  40b125:	xchg   ecx,eax
  40b126:	xor    eax,0xc61068cf
  40b12b:	adc    eax,DWORD PTR ds:0x226458ac
  40b131:	pop    eax
  40b132:	and    ebx,esp
  40b134:	test   al,0x54
  40b136:	sub    esi,ebx
  40b138:	jmp    0x86e7e47c
  40b13d:	add    ebp,DWORD PTR [eax+0x20]
  40b140:	dec    esp
  40b141:	iret   
  40b142:	es leave 
  40b144:	dec    ecx
  40b145:	lahf   
  40b146:	sub    al,0x6b
  40b148:	ins    DWORD PTR es:[edi],dx
  40b149:	mov    WORD PTR [edx+0x16],gs
  40b14c:	adc    DWORD PTR [ebp+ebx*1-0x58a04887],esi
  40b153:	aaa    
  40b154:	adc    ebx,esp
  40b156:	shl    BYTE PTR [edx],1
  40b158:	xchg   esp,eax
  40b159:	ret    
  40b15a:	inc    ebx
  40b15b:	pop    esp
  40b15c:	inc    esp
  40b15d:	push   edi
  40b15e:	inc    ebx
  40b15f:	cmovge esi,DWORD PTR [eax-0x54]
  40b163:	pop    esi
  40b164:	xor    bh,al
  40b166:	mov    eax,DWORD PTR [edx+eax*4-0x6f]
  40b16a:	stos   DWORD PTR es:[edi],eax
  40b16b:	pushf  
  40b16c:	xchg   edi,eax
  40b16d:	fsubrp st(2),st
  40b16f:	mov    bl,0x2e
  40b171:	sbb    dl,BYTE PTR [ecx-0x1636fa0e]
  40b177:	nop
  40b178:	xor    DWORD PTR fs:[esi-0x38],0xffffff8a
  40b17d:	xor    ebx,DWORD PTR [eax+eiz*1]
  40b180:	rol    DWORD PTR [edx+0x52],1
  40b183:	push   ebx
  40b184:	jle    0x40b16b
  40b186:	jl     0x40b19f
  40b188:	gs test al,0xe9
  40b18b:	mov    DWORD PTR [edi],esi
  40b18d:	adc    eax,0x3b92f275
  40b192:	pushf  
  40b193:	add    BYTE PTR [ecx+0x33],ch
  40b196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b197:	mov    ah,0xd0
  40b199:	in     al,dx
  40b19a:	outs   dx,BYTE PTR ds:[esi]
  40b19b:	int3   
  40b19c:	sbb    al,0x3a
  40b19e:	ret    
  40b19f:	fprem  
  40b1a1:	jno    0x40b14c
  40b1a3:	mul    DWORD PTR [esi+ebx*1+0x74]
  40b1a7:	push   ss
  40b1a8:	push   cs
  40b1a9:	mov    bl,0xa9
  40b1ab:	dec    ebx
  40b1ac:	les    ecx,FWORD PTR [ecx+0x41]
  40b1af:	aad    0xdc
  40b1b1:	aas    
  40b1b2:	lea    eax,[edi-0x33cca932]
  40b1b8:	pop    esi
  40b1b9:	fcomp  DWORD PTR [ebp+0x47b0529d]
  40b1bf:	sub    eax,0x5f9fbf1b
  40b1c4:	xor    esp,ebx
  40b1c6:	cli    
  40b1c7:	jmp    0x40b208
  40b1c9:	dec    esp
  40b1ca:	cmp    DWORD PTR [edx],edx
  40b1cc:	dec    eax
  40b1cd:	sub    BYTE PTR [eax],ah
  40b1cf:	mov    ds:0xf107445e,eax
  40b1d4:	or     ecx,DWORD PTR [edx-0x2b]
  40b1d7:	sub    edi,ebp
  40b1d9:	les    edx,FWORD PTR [ebx-0x27]
  40b1dc:	inc    ecx
  40b1dd:	dec    edi
  40b1de:	pop    edi
  40b1df:	xchg   esp,eax
  40b1e0:	xor    eax,0xc3d80393
  40b1e5:	leave  
  40b1e6:	add    BYTE PTR ds:0x6b5a20d9,dh
  40b1ec:	xchg   ebp,eax
  40b1ed:	or     bl,BYTE PTR [ebx+eiz*2-0x2d0548fd]
  40b1f4:	mov    al,0xf1
  40b1f6:	mov    dh,0xe3
  40b1f8:	js     0x40b1e3
  40b1fa:	mov    al,0xc4
  40b1fc:	add    BYTE PTR [esi+edi*4+0x2a],0x7a
  40b201:	and    eax,0x4233fcbe
  40b206:	and    al,0x9a
  40b208:	shl    BYTE PTR [eax],cl
  40b20a:	mov    cs,ebp
  40b20c:	sbb    al,0x7d
  40b20e:	loope  0x40b1ea
  40b210:	out    0xb4,al
  40b212:	imul   BYTE PTR [ecx+0x2b2a8106]
  40b218:	mov    ch,0xa3
  40b21a:	or     edi,esp
  40b21c:	cwde   
  40b21d:	add    eax,0x548d64ea
  40b222:	div    DWORD PTR ds:0x5c7942d5
  40b228:	mov    esi,0xa9e378a2
  40b22d:	mov    bh,0x9d
  40b22f:	dec    edi
  40b230:	sbb    dh,bl
  40b232:	push   eax
  40b233:	mov    ah,0x68
  40b235:	stos   BYTE PTR es:[edi],al
  40b236:	push   ecx
  40b237:	stos   DWORD PTR es:[edi],eax
  40b238:	stos   DWORD PTR es:[edi],eax
  40b239:	retf   
  40b23a:	addr16 jb 0x40b288
  40b23d:	pop    es
  40b23e:	mov    ch,0xa6
  40b240:	inc    edi
  40b241:	outs   dx,DWORD PTR ds:[esi]
  40b242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b243:	nop
  40b244:	pushf  
  40b245:	push   edx
  40b246:	jo     0x40b246
  40b248:	dec    ebx
  40b249:	mov    al,0xae
  40b24b:	cmp    esp,DWORD PTR [ecx]
  40b24d:	dec    eax
  40b24e:	pop    edx
  40b24f:	lds    esp,FWORD PTR [edi-0x5225640e]
  40b255:	(bad)  
  40b256:	pop    edi
  40b257:	cli    
  40b258:	xchg   esi,eax
  40b259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b25a:	fild   DWORD PTR [ebx-0x4159678e]
  40b260:	outs   dx,BYTE PTR ds:[esi]
  40b261:	gs mov ah,0xfb
  40b264:	add    eax,DWORD PTR [edx]
  40b266:	repnz mov dl,0xbe
  40b269:	ins    BYTE PTR es:[edi],dx
  40b26a:	pop    ecx
  40b26b:	(bad)  
  40b26c:	int    0x19
  40b26e:	fwait
  40b26f:	pop    edi
  40b270:	loopne 0x40b23d
  40b272:	bnd je 0x40b288
  40b275:	cmp    al,0xb3
  40b277:	jmp    0xed5175fb
  40b27c:	sbb    DWORD PTR [edi],0x5c4d6eaa
  40b282:	lds    ecx,FWORD PTR [edx]
  40b284:	popa   
  40b285:	ret    0x45fc
  40b288:	mov    DWORD PTR [ebx],0x32afb8de
  40b28e:	sub    bl,0xa3
  40b291:	jno    0x40b2ce
  40b293:	push   0xffffffe1
  40b295:	rcl    bl,cl
  40b297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b298:	adc    eax,0x7e7413a0
  40b29d:	push   eax
  40b29e:	lock jbe 0x40b29f
  40b2a1:	sub    DWORD PTR [edi+ebp*2-0xe44691d],eax
  40b2a8:	mov    cl,0x4d
  40b2aa:	or     DWORD PTR [esi-0x2a],edi
  40b2ad:	and    cl,ah
  40b2af:	stc    
  40b2b0:	adc    DWORD PTR [ebx-0x250805f9],0xa6703b93
  40b2ba:	std    
  40b2bb:	mov    edi,0x6ee34f18
  40b2c0:	std    
  40b2c1:	pusha  
  40b2c2:	mov    ebx,ebp
  40b2c4:	mov    esi,0xb10900db
  40b2c9:	lods   eax,DWORD PTR ds:[esi]
  40b2ca:	fild   QWORD PTR [edi-0x5ee84396]
  40b2d0:	cdq    
  40b2d1:	popf   
  40b2d2:	scas   eax,DWORD PTR es:[edi]
  40b2d3:	outs   dx,BYTE PTR ds:[esi]
  40b2d4:	sub    ebp,DWORD PTR [edi-0x27c6f1c0]
  40b2da:	out    0x3,al
  40b2dc:	xchg   esi,eax
  40b2dd:	push   ecx
  40b2de:	clc    
  40b2df:	loope  0x40b32f
  40b2e1:	(bad)  
  40b2e2:	movzx  esp,BYTE PTR [edx+0x64]
  40b2e6:	aas    
  40b2e7:	ja     0x40b32b
  40b2e9:	jb     0x40b32c
  40b2eb:	push   edi
  40b2ec:	popf   
  40b2ed:	prefetch BYTE PTR [esi]
  40b2f0:	out    0x72,eax
  40b2f2:	mov    bh,0x2c
  40b2f4:	shl    BYTE PTR [edi+0x3d3f708c],0xb0
  40b2fb:	loop   0x40b288
  40b2fd:	hlt    
  40b2fe:	sbb    al,0xef
  40b300:	sha256msg1 xmm5,XMMWORD PTR [edx-0x130e1be2]
  40b308:	bound  ecx,QWORD PTR [edi-0x15]
  40b30b:	bound  eax,QWORD PTR [edi+0x17]
  40b30e:	je     0x40b2e9
  40b310:	shr    BYTE PTR ds:[ebp+0x46],0xab
  40b315:	bound  edx,QWORD PTR [ecx]
  40b317:	clc    
  40b318:	sbb    BYTE PTR ds:0x75911353,ch
  40b31e:	pop    edi
  40b31f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b320:	and    BYTE PTR [eax],al
  40b322:	cli    
  40b323:	cmp    al,0x41
  40b325:	ss adc bl,al
  40b328:	adc    BYTE PTR [ebx+0x51],ah
  40b32b:	and    DWORD PTR [edx-0x62a81682],ebx
  40b331:	jnp    0x40b347
  40b333:	xlat   BYTE PTR ds:[ebx]
  40b334:	icebp  
  40b335:	mov    ebp,0x54950ef5
  40b33a:	inc    ebx
  40b33b:	fs rcl edi,1
  40b33e:	scas   eax,DWORD PTR es:[edi]
  40b33f:	or     BYTE PTR [esi+0x53],bl
  40b342:	or     cl,BYTE PTR [edx-0x6b]
  40b345:	mov    al,bl
  40b347:	fldcw  WORD PTR [esi-0x403bc471]
  40b34d:	mov    ch,0x27
  40b34f:	jmp    0x40b373
  40b351:	xor    edi,DWORD PTR [eax+0x1c]
  40b354:	mov    WORD PTR [ecx-0xe],es
  40b357:	push   ebp
  40b358:	push   eax
  40b359:	push   es
  40b35a:	jb     0x40b3ce
  40b35c:	aad    0x65
  40b35e:	sbb    edx,DWORD PTR [edi-0x66]
  40b361:	loop   0x40b3de
  40b363:	xchg   ecx,ebp
  40b365:	xchg   BYTE PTR [edi-0x2efc3fde],bh
  40b36b:	mov    ah,cl
  40b36d:	and    eax,0x4219432e
  40b372:	jmp    0x53e0:0xc3839a83
  40b379:	or     eax,0x13d3ddf8
  40b37e:	xchg   ecx,eax
  40b37f:	shr    BYTE PTR [esi+ecx*1],1
  40b382:	in     eax,dx
  40b383:	jno    0x40b3ba
  40b385:	push   edx
  40b386:	add    BYTE PTR ds:0x4c6ea81a,0xac
  40b38d:	loopne 0x40b34a
  40b38f:	(bad)
  40b392:	xor    al,0xe3
  40b394:	mov    esp,0x564e6cd7
  40b399:	inc    ecx
  40b39a:	push   ds
  40b39b:	jecxz  0x40b366
  40b39d:	mov    al,ds:0xd4866873
  40b3a2:	loope  0x40b40f
  40b3a4:	or     DWORD PTR [eax],0x77636300
  40b3aa:	mov    ah,0xff
  40b3ac:	test   bh,0x2b
  40b3af:	dec    edx
  40b3b0:	imul   edi,DWORD PTR [edi-0x11],0x14
  40b3b4:	cmc    
  40b3b5:	ins    DWORD PTR es:[edi],dx
  40b3b6:	pop    esi
  40b3b7:	mov    edx,0xb52cb50f
  40b3bc:	lods   al,BYTE PTR ds:[esi]
  40b3bd:	or     al,0x6c
  40b3bf:	nop
  40b3c0:	sbb    ebx,DWORD PTR [ebx+0x6cee36c2]
  40b3c6:	mov    esp,0xb3a815d3
  40b3cb:	in     ax,0xd5
  40b3ce:	sbb    bh,dl
  40b3d0:	jnp    0x40b39b
  40b3d2:	jmp    0x40b362
  40b3d4:	xchg   edx,eax
  40b3d5:	aam    0xe5
  40b3d7:	in     al,dx
  40b3d8:	or     eax,0x2dcd7b27
  40b3dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3de:	push   eax
  40b3df:	pop    esp
  40b3e0:	rol    ch,0xb3
  40b3e3:	mov    dh,0xb5
  40b3e5:	and    al,0x50
  40b3e7:	hlt    
  40b3e8:	adc    BYTE PTR [ecx+ebx*4+0x21c3f817],ah
  40b3ef:	psubb  mm7,QWORD PTR ds:0x827b2708
  40b3f6:	xchg   BYTE PTR [edi],al
  40b3f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3f9:	sar    ecx,cl
  40b3fb:	mov    DWORD PTR [esi],eax
  40b3fd:	add    eax,DWORD PTR [edi+edi*1+0x30]
  40b401:	test   BYTE PTR [edx+0x54d13f93],bh
  40b407:	xchg   esi,eax
  40b408:	iret   
  40b409:	push   es
  40b40a:	mov    ebx,0xd94b3d0f
  40b40f:	test   al,0x57
  40b411:	dec    ebp
  40b412:	imul   eax,DWORD PTR [edi+esi*4+0x4a],0xffffffbf
  40b417:	jge    0x40b3d3
  40b419:	nop
  40b41a:	mov    eax,ds:0xf68ffbb5
  40b41f:	add    dl,BYTE PTR [ebp-0x5ef102a7]
  40b425:	call   0x650b:0xd0b76583
  40b42c:	push   0x3fa14210
  40b431:	hlt    
  40b432:	icebp  
  40b433:	je     0x40b426
  40b435:	xchg   ebp,eax
  40b436:	jb     0x40b495
  40b438:	dec    eax
  40b439:	add    al,0x85
  40b43c:	mov    ah,0x1b
  40b43e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b43f:	dec    esi
  40b440:	push   0x4d
  40b442:	int3   
  40b443:	daa    
  40b444:	jno    0x40b3f7
  40b446:	pop    edx
  40b447:	pop    ds
  40b448:	out    dx,eax
  40b449:	and    BYTE PTR [ecx-0x47],ch
  40b44c:	push   ecx
  40b44d:	push   cs
  40b44e:	shrd   DWORD PTR [esi],ecx,cl
  40b451:	enter  0xca7d,0x13
  40b455:	lods   al,BYTE PTR ds:[esi]
  40b456:	(bad)  
  40b457:	sub    eax,0x1fd67355
  40b45c:	enter  0xa6f,0xe7
  40b460:	push   ds
  40b461:	imul   esp,DWORD PTR [edx-0x43b377f],0xffffff86
  40b468:	jmp    0x59d6:0x7652a128
  40b46f:	shl    ebx,1
  40b471:	mov    ebp,0x12871cdc
  40b476:	sbb    ebx,eax
  40b478:	adc    al,0x61
  40b47a:	push   eax
  40b47b:	in     eax,0x9c
  40b47d:	mov    eax,cs:0x5be44db5
  40b483:	inc    ebx
  40b484:	sub    ebp,DWORD PTR [esi-0x15e03afb]
  40b48a:	and    ah,BYTE PTR [edi]
  40b48c:	cdq    
  40b48d:	add    DWORD PTR [edi],edi
  40b48f:	cmp    al,0xe1
  40b491:	retf   
  40b492:	imul   eax,esp,0x4b
  40b495:	fs jns 0x40b443
  40b498:	nop
  40b499:	sub    bh,ah
  40b49b:	pop    ebx
  40b49c:	jne    0x40b424
  40b49e:	dec    esi
  40b49f:	jb     0x40b504
  40b4a1:	dec    esi
  40b4a2:	mov    al,bl
  40b4a4:	pusha  
  40b4a5:	mov    ecx,0x1beff528
  40b4aa:	ret    
  40b4ab:	into   
  40b4ac:	mov    ds:0xbb9e2a3b,eax
  40b4b1:	sub    al,BYTE PTR [eax+eiz*4+0x1f0a1968]
  40b4b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4b9:	ret    
  40b4ba:	xchg   esp,eax
  40b4bb:	popa   
  40b4bc:	or     cl,BYTE PTR [eax-0x73]
  40b4bf:	dec    ebp
  40b4c0:	in     eax,0xa1
  40b4c2:	or     eax,0x8c115923
  40b4c7:	pop    eax
  40b4c8:	dec    esi
  40b4c9:	push   0xffffffea
  40b4cb:	nop
  40b4cc:	out    dx,eax
  40b4cd:	push   0xffffffa5
  40b4cf:	fist   DWORD PTR [ebx+0x22]
  40b4d2:	sbb    edx,DWORD PTR [ebx]
  40b4d4:	rol    dl,0x9f
  40b4d7:	int3   
  40b4d8:	jae    0x40b490
  40b4da:	sbb    al,0xa2
  40b4dc:	push   0x53af7e84
  40b4e1:	adc    al,0x10
  40b4e3:	addr16 jns 0x40b4fa
  40b4e6:	mov    edx,0xe5945269
  40b4eb:	push   ss
  40b4ec:	int    0xa2
  40b4ee:	adc    esp,DWORD PTR [ebx+0x2003f1d0]
  40b4f4:	or     ch,BYTE PTR [ebx+0x69]
  40b4f7:	loope  0x40b55c
  40b4f9:	mov    bl,0x70
  40b4fb:	ret    0x86fc
  40b4fe:	int3   
  40b4ff:	in     eax,0xdf
  40b501:	cmp    BYTE PTR [esi],bh
  40b503:	fdivr  QWORD PTR [eax]
  40b505:	push   ss
  40b506:	int3   
  40b507:	cmc    
  40b508:	loop   0x40b490
  40b50a:	mov    cl,0x7c
  40b50c:	mov    ds:0xbcddc110,al
  40b511:	jae    0x40b508
  40b513:	xchg   esp,eax
  40b514:	jp     0x40b501
  40b516:	jle    0x40b553
  40b518:	add    eax,0x98678409
  40b51d:	inc    eax
  40b51e:	stc    
  40b51f:	mov    al,0xac
  40b521:	ins    BYTE PTR es:[edi],dx
  40b522:	jmp    0x40b58d
  40b524:	leave  
  40b525:	shl    DWORD PTR [ebp+0x20e8a785],cl
  40b52b:	data16 ja 0x40b528
  40b52e:	in     al,0xe8
  40b530:	fadd   QWORD PTR [ecx+ebp*1-0x16159329]
  40b537:	test   DWORD PTR [edi-0x15],esi
  40b53a:	inc    ecx
  40b53b:	adc    bh,BYTE PTR [eax]
  40b53d:	inc    edi
  40b53e:	adc    esi,DWORD PTR [ebx-0x49]
  40b541:	mov    cl,BYTE PTR [eax-0x7f]
  40b544:	mov    edi,0x84f3c562
  40b549:	sub    al,0x63
  40b54b:	cs dec ebx
  40b54d:	scas   eax,DWORD PTR es:[edi]
  40b54e:	push   edx
  40b54f:	stos   BYTE PTR es:[edi],al
  40b550:	aas    
  40b551:	outs   dx,DWORD PTR ds:[esi]
  40b552:	cld    
  40b553:	outs   dx,DWORD PTR ds:[esi]
  40b554:	sub    DWORD PTR [eax+edx*2-0x17],ebp
  40b558:	cmp    bh,al
  40b55a:	iret   
  40b55b:	mov    ch,BYTE PTR [eax]
  40b55d:	dec    edx
  40b55e:	sahf   
  40b55f:	fsubrp st(0),st
  40b561:	in     al,dx
  40b562:	into   
  40b563:	icebp  
  40b564:	(bad)  
  40b565:	ins    DWORD PTR es:[edi],dx
  40b566:	inc    ebx
  40b567:	fwait
  40b568:	push   ebx
  40b569:	imul   ecx,DWORD PTR [esi-0x20e965f5],0x6b844d63
  40b573:	repnz scas al,BYTE PTR es:[edi]
  40b575:	jmp    0x40b5ef
  40b577:	push   es
  40b578:	inc    eax
  40b579:	push   0x890b4a68
  40b57e:	inc    edx
  40b57f:	out    dx,eax
  40b580:	jnp    0x40b5b1
  40b582:	pop    ebp
  40b583:	add    DWORD PTR [edi-0x55d78f54],edi
  40b589:	or     BYTE PTR [edi+0x27],cl
  40b58c:	scas   eax,DWORD PTR es:[edi]
  40b58d:	mov    BYTE PTR ds:0x1d4f52d2,bl
  40b593:	dec    ebx
  40b594:	mov    al,0x70
  40b596:	setns  BYTE PTR [ebp-0x25b54d19]
  40b59d:	loopne 0x40b565
  40b59f:	and    ebp,DWORD PTR [ebx+0x5e]
  40b5a2:	or     al,0xb5
  40b5a4:	and    eax,ebx
  40b5a6:	or     cl,ch
  40b5a8:	xchg   ebp,eax
  40b5a9:	ss aam 0x44
  40b5ac:	cdq    
  40b5ad:	jmp    0xf190:0xb6fa13cd
  40b5b4:	mov    ebp,esi
  40b5b6:	fs fsub st,st(1)
  40b5b9:	adc    esi,DWORD PTR [ecx-0x5]
  40b5bc:	lea    esi,[ecx+0x19]
  40b5bf:	mov    bl,0xfb
  40b5c1:	sub    edx,ebx
  40b5c3:	mov    bl,BYTE PTR [esi+0x6dcaff7]
  40b5c9:	mov    ah,0x46
  40b5cb:	or     al,0x2b
  40b5cd:	mov    bl,0x7b
  40b5cf:	xchg   ebx,esi
  40b5d1:	shl    esp,0xd3
  40b5d4:	push   eax
  40b5d5:	dec    eax
  40b5d6:	xor    BYTE PTR [ecx+0x299b861c],ch
  40b5dc:	sar    BYTE PTR [edx-0x68a4589e],1
  40b5e2:	mov    ah,0x15
  40b5e4:	xor    eax,0x4aab5a34
  40b5e9:	xchg   ecx,eax
  40b5ea:	jne    0x40b634
  40b5ec:	sub    ah,dl
  40b5ee:	dec    ebp
  40b5ef:	xor    DWORD PTR [eax+0xf6eccea],0x4bcb660d
  40b5f9:	xor    al,0x2
  40b5fb:	(bad)  
  40b5fd:	test   BYTE PTR [ebp-0x6821536b],dl
  40b603:	hlt    
  40b604:	xchg   ecx,eax
  40b605:	push   eax
  40b606:	mov    edi,0x41daf5c2
  40b60b:	pop    eax
  40b60c:	rol    ebx,cl
  40b60e:	or     eax,0xbf87b005
  40b613:	pop    edi
  40b614:	pop    edx
  40b615:	fist   DWORD PTR [esi+0x1f879595]
  40b61b:	jge    0x40b5cc
  40b61d:	popa   
  40b61e:	or     DWORD PTR [ebx+0x76],edx
  40b621:	(bad)  
  40b622:	retf   0x56c8
  40b625:	clc    
  40b626:	xchg   esp,eax
  40b627:	xor    BYTE PTR [ebp-0x56df3481],al
  40b62d:	ss (bad) 
  40b62f:	mov    edi,0xfb3053b6
  40b634:	sbb    DWORD PTR [eax-0x2a],0xa6b8c542
  40b63b:	lahf   
  40b63c:	mov    edx,0x4a2c12eb
  40b641:	dec    edx
  40b642:	mov    WORD PTR [ebx+0x20],cs
  40b645:	outs   dx,DWORD PTR ds:[esi]
  40b646:	or     BYTE PTR [edx-0xf2708eb],0x66
  40b64d:	push   eax
  40b64e:	fcomp  QWORD PTR [ecx-0x33]
  40b651:	adc    DWORD PTR [esi+0x6adbd942],esp
  40b657:	call   0x43dc:0x1b015a08
  40b65e:	mov    bh,0xf1
  40b660:	and    al,0xb9
  40b662:	xor    eax,0x86ac199f
  40b667:	push   eax
  40b668:	pmaddwd mm2,QWORD PTR gs:[ebx+0x4]
  40b66d:	mov    esi,0x5d38e346
  40b672:	cld    
  40b673:	xlat   BYTE PTR ds:[ebx]
  40b674:	dec    ebp
  40b675:	mov    ch,0x22
  40b677:	loop   0x40b6b5
  40b679:	sbb    BYTE PTR [edi-0x69],bl
  40b67c:	mov    dh,0x96
  40b67e:	push   esp
  40b67f:	xor    DWORD PTR [ebp+ebx*2+0x3f46e42a],ebp
  40b686:	fwait
  40b687:	jmp    0xcc61f8ce
  40b68c:	imul   DWORD PTR [edx]
  40b68e:	and    BYTE PTR [eax+0x3324d5f7],ch
  40b694:	and    BYTE PTR [eax-0xeae72c8],al
  40b69a:	and    al,0x7e
  40b69c:	xor    DWORD PTR [edi],edx
  40b69e:	aad    0x5
  40b6a0:	imul   eax,DWORD PTR [ecx+0x32acf66a],0xcfa8b1e7
  40b6aa:	and    ebx,esi
  40b6ac:	retf   
  40b6ad:	mov    dl,0x47
  40b6af:	popa   
  40b6b0:	iret   
  40b6b1:	pop    ebx
  40b6b2:	sbb    DWORD PTR [edi+0x62],esp
  40b6b5:	add    DWORD PTR [ebx],edx
  40b6b7:	lods   al,BYTE PTR ds:[esi]
  40b6b8:	or     eax,0xbb89d0e7
  40b6bd:	push   ds
  40b6be:	cs jno 0x40b6e1
  40b6c1:	stos   BYTE PTR es:[edi],al
  40b6c2:	into   
  40b6c3:	lahf   
  40b6c4:	(bad)  
  40b6c5:	je     0x40b733
  40b6c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6c8:	(bad)  
  40b6c9:	mov    ah,bl
  40b6cb:	mov    bh,0x6e
  40b6cd:	dec    eax
  40b6ce:	or     edi,edi
  40b6d0:	test   BYTE PTR [ebp-0x76],cl
  40b6d3:	pusha  
  40b6d4:	inc    ebx
  40b6d5:	xchg   BYTE PTR [ebx],bl
  40b6d7:	ja     0x40b735
  40b6d9:	dec    ecx
  40b6da:	loop   0x40b754
  40b6dc:	jmp    0x390b288c
  40b6e1:	mov    esp,0x5fe2b453
  40b6e6:	(bad)  
  40b6e7:	mov    dl,0x5c
  40b6e9:	daa    
  40b6ea:	enter  0xa875,0xe9
  40b6ee:	jne    0x40b6c1
  40b6f0:	fld    DWORD PTR [ebx-0x7d]
  40b6f3:	xchg   edx,eax
  40b6f4:	pop    ebp
  40b6f5:	and    al,0xa9
  40b6f7:	pusha  
  40b6f8:	in     al,dx
  40b6f9:	adc    esi,DWORD PTR [edx-0x4237a631]
  40b6ff:	push   ecx
  40b700:	mov    edi,0xa55c1248
  40b705:	xor    DWORD PTR [edi],ecx
  40b707:	sar    BYTE PTR [ecx-0x17],0xc2
  40b70b:	in     al,0x65
  40b70d:	adc    esi,DWORD PTR [eax+0x3f6d0d86]
  40b713:	push   edi
  40b714:	dec    cl
  40b716:	leave  
  40b717:	sub    BYTE PTR [edi+0x2],dh
  40b71a:	sub    BYTE PTR [edi+ecx*8-0x6f18fe3],al
  40b721:	(bad)
  40b724:	inc    esi
  40b725:	pop    esp
  40b726:	sbb    al,0x18
  40b728:	pop    esi
  40b729:	stos   BYTE PTR es:[edi],al
  40b72a:	cmp    BYTE PTR [eax+eiz*2+0x1cf96c77],0xa1
  40b732:	xchg   DWORD PTR [ecx],eax
  40b734:	dec    ecx
  40b735:	arpl   WORD PTR [edi+0x38],dx
  40b738:	aam    0x67
  40b73a:	mov    dl,dl
  40b73c:	add    dl,BYTE PTR [esi-0x3490ef15]
  40b742:	sbb    bh,BYTE PTR [ecx-0x50]
  40b745:	jl     0x40b790
  40b747:	arpl   di,cx
  40b749:	add    eax,0x124234a6
  40b74e:	push   eax
  40b74f:	imul   edx,DWORD PTR [edx-0x7b1c7586],0xffffffaa
  40b756:	out    dx,al
  40b757:	repz pusha 
  40b759:	add    al,bh
  40b75b:	pop    ss
  40b75c:	jp     0x40b6f7
  40b75e:	in     al,dx
  40b75f:	push   eax
  40b760:	lahf   
  40b761:	xchg   ecx,eax
  40b762:	ds pop ecx
  40b764:	hlt    
  40b765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b766:	retf   
  40b767:	and    eax,0xd3431663
  40b76c:	out    0x7,al
  40b76e:	out    0xd8,al
  40b770:	int3   
  40b771:	jmp    0xa54b2e5e
  40b776:	jno    0x40b7e6
  40b778:	xchg   ebx,eax
  40b779:	sbb    eax,0x39bf295f
  40b77e:	xchg   ebp,eax
  40b77f:	iret   
  40b780:	push   edx
  40b781:	sub    DWORD PTR [edx],esi
  40b783:	cs push es
  40b785:	adc    BYTE PTR [ecx+edi*1],al
  40b788:	cmp    ah,BYTE PTR [ecx+0x182d936b]
  40b78e:	and    BYTE PTR [eax],al
  40b790:	sbb    dh,BYTE PTR [edi-0x61]
  40b793:	push   esp
  40b794:	jl     0x40b7ee
  40b796:	std    
  40b797:	adc    edx,DWORD PTR [esi-0x1f]
  40b79a:	mov    ds:0xeb4d04c2,al
  40b79f:	ficomp WORD PTR [edi-0x11801088]
  40b7a5:	xchg   DWORD PTR [edi],ebx
  40b7a7:	pop    esp
  40b7a8:	sub    dh,ah
  40b7aa:	repnz pop edi
  40b7ac:	cmp    DWORD PTR [ecx-0x55f8422],0xd7db3f7d
  40b7b6:	mov    esp,0xc1a03b77
  40b7bb:	outs   dx,DWORD PTR ds:[esi]
  40b7bc:	mov    ds:0xcb559977,al
  40b7c1:	jbe    0x40b7ba
  40b7c3:	neg    BYTE PTR cs:[eax+0x91e5656]
  40b7ca:	xor    al,0x93
  40b7cc:	inc    BYTE PTR [esi+0x2c73e317]
  40b7d2:	and    al,0xcb
  40b7d4:	loope  0x40b7b3
  40b7d6:	sbb    BYTE PTR [eax+0x60],dh
  40b7d9:	scas   eax,DWORD PTR es:[edi]
  40b7da:	dec    ecx
  40b7db:	jb     0x40b80b
  40b7dd:	push   edi
  40b7de:	sub    bl,BYTE PTR [edx]
  40b7e0:	leave  
  40b7e1:	xchg   BYTE PTR [edi],dl
  40b7e3:	cs (bad) 
  40b7e5:	fidiv  DWORD PTR [eax+0x70a30277]
  40b7eb:	mov    bl,BYTE PTR [eax+0x10]
  40b7ee:	mov    ebp,ecx
  40b7f0:	mov    al,ds:0x309ab0c1
  40b7f5:	data16 sbb al,0x58
  40b7f8:	bound  edi,QWORD PTR [edi+0x71]
  40b7fb:	inc    ecx
  40b7fc:	pushf  
  40b7fd:	sti    
  40b7fe:	adc    eax,0x3e0fdcb4
  40b803:	daa    
  40b804:	pop    edi
  40b805:	repnz inc ebp
  40b807:	mov    DWORD PTR [ebx-0x1136f19b],edx
  40b80d:	sbb    BYTE PTR [edx-0x6c5964cf],0x66
  40b814:	pop    esi
  40b815:	sub    ebp,DWORD PTR [esi-0x4a]
  40b818:	add    al,0x89
  40b81a:	mov    cl,0x6a
  40b81c:	sti    
  40b81d:	sub    DWORD PTR [ecx-0x68],ebp
  40b820:	loope  0x40b7ef
  40b822:	mov    esp,0xdc7cd2fd
  40b827:	(bad)  
  40b828:	fadd   DWORD PTR [ebx+0x553ee6ad]
  40b82e:	mov    DWORD PTR [ebx-0x2c643122],edi
  40b834:	push   ebp
  40b835:	fadd   DWORD PTR [ecx]
  40b837:	or     dl,BYTE PTR [ecx-0x773c6ada]
  40b83d:	out    dx,eax
  40b83e:	(bad)  
  40b83f:	push   0x42
  40b841:	pop    ds
  40b842:	push   esi
  40b843:	lods   al,BYTE PTR ds:[esi]
  40b844:	ja     0x40b7ce
  40b846:	fldenv [ebx+0xd40d95]
  40b84c:	cmp    eax,0x4d663298
  40b851:	add    cl,BYTE PTR [ecx-0x1f]
  40b854:	loope  0x40b883
  40b856:	jge    0x40b7d8
  40b858:	xor    eax,DWORD PTR [ecx]
  40b85a:	cs lock mov esp,0x602b9f7b
  40b861:	sub    bl,cl
  40b863:	jo     0x40b8c3
  40b865:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b866:	pop    eax
  40b867:	retf   
  40b868:	ds stc 
  40b86a:	clc    
  40b86b:	add    eax,0xc3df249c
  40b870:	imul   esp,DWORD PTR [edx-0x39],0xffffff8e
  40b874:	pop    eax
  40b875:	mov    eax,ds:0x497c7510
  40b87a:	sub    BYTE PTR [edi-0x1b],dl
  40b87d:	loope  0x40b851
  40b87f:	imul   eax,ebx,0x30
  40b882:	mov    ?,WORD PTR [ebp+0xb17131e]
  40b888:	test   dl,dh
  40b88a:	push   es
  40b88b:	mov    WORD PTR [edi-0x74],?
  40b88e:	ret    
  40b88f:	or     BYTE PTR [ebx-0x26],0x51
  40b893:	inc    edx
  40b894:	mov    DWORD PTR [ebx+0x46],edi
  40b897:	inc    esp
  40b898:	call   0x473b5511
  40b89d:	fmul   QWORD PTR [esi+0xb]
  40b8a0:	add    DWORD PTR [edx+0x57],0xf
  40b8a4:	rol    BYTE PTR [esp+eax*8+0x43],cl
  40b8a8:	pusha  
  40b8a9:	dec    ebx
  40b8aa:	or     al,0x5c
  40b8ac:	adc    ebx,DWORD PTR [edi+0x672e50a9]
  40b8b2:	jmp    0x40b8af
  40b8b4:	int3   
  40b8b5:	shl    DWORD PTR [edi-0x68],cl
  40b8b8:	pop    esi
  40b8b9:	xlat   BYTE PTR ds:[ebx]
  40b8ba:	mov    al,ds:0xcd057032
  40b8bf:	sub    eax,0x8f7abe0e
  40b8c4:	int    0xc3
  40b8c6:	dec    esp
  40b8c7:	mov    ds:0x8145f840,al
  40b8cc:	xchg   edi,eax
  40b8cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8ce:	add    eax,ebx
  40b8d0:	dec    esp
  40b8d1:	mov    bl,0xa7
  40b8d3:	repnz inc bx
  40b8d6:	xor    ah,ch
  40b8d8:	das    
  40b8d9:	xor    al,0x87
  40b8db:	ret    
  40b8dc:	cs popa 
  40b8de:	dec    esp
  40b8df:	(bad)  
  40b8e0:	mov    esi,0xa5338df4
  40b8e5:	int3   
  40b8e6:	xchg   esp,eax
  40b8e7:	or     eax,0x647f5c9a
  40b8ec:	jge    0x40b953
  40b8ee:	sub    eax,0x46f67b6a
  40b8f3:	jbe    0x40b953
  40b8f5:	scas   al,BYTE PTR es:[edi]
  40b8f6:	fistp  DWORD PTR [eax+0x7b]
  40b8f9:	xchg   ecx,eax
  40b8fa:	aam    0xc4
  40b8fc:	sbb    BYTE PTR [ebx+0x18],0xb5
  40b900:	jnp    0x40b8f0
  40b902:	inc    esi
  40b903:	cmp    al,0x23
  40b905:	cmp    al,0x82
  40b907:	pop    eax
  40b908:	push   ebp
  40b909:	mov    ch,0x77
  40b90b:	neg    BYTE PTR [ebx]
  40b90d:	mov    ch,BYTE PTR [ecx+esi*8-0x2803191c]
  40b914:	cmp    al,0x4f
  40b916:	retf   0x68b8
  40b919:	clc    
  40b91a:	aas    
  40b91b:	sub    DWORD PTR ds:[ecx+0x21],esp
  40b91f:	and    bh,0xd2
  40b922:	xchg   ebp,eax
  40b923:	(bad)  
  40b924:	xor    dh,BYTE PTR [ebx-0x7ba5d1c0]
  40b92a:	dec    edi
  40b92b:	shl    bh,cl
  40b92d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b92e:	and    dh,BYTE PTR [edx]
  40b930:	sbb    edx,ebp
  40b932:	stos   BYTE PTR es:[edi],al
  40b933:	inc    esp
  40b934:	dec    esp
  40b935:	inc    esi
  40b936:	pop    ebp
  40b937:	mov    ebx,0x5926f6f9
  40b93c:	mov    ds:0x6ce4a162,al
  40b941:	stc    
  40b942:	rcr    esp,1
  40b944:	mov    bh,BYTE PTR [edx+0x36fc3cd8]
  40b94a:	int    0xa2
  40b94c:	xchg   BYTE PTR [ecx+edi*1],ah
  40b94f:	jmp    0x40b987
  40b951:	dec    eax
  40b952:	sbb    BYTE PTR [ecx+0x6fc75fb9],ah
  40b958:	test   BYTE PTR [ebx+ebp*4],0x59
  40b95c:	jmp    0xe767:0x816ee19e
  40b963:	fs jns 0x40b9dd
  40b966:	mov    ds:0xc25174a0,eax
  40b96b:	nop
  40b96c:	mov    ch,0x8b
  40b96e:	outs   dx,DWORD PTR ds:[esi]
  40b96f:	xor    al,0xe7
  40b971:	mov    ebx,0x25b059f8
  40b976:	scas   eax,DWORD PTR es:[edi]
  40b977:	lock ror DWORD PTR [ecx],1
  40b97a:	adc    DWORD PTR [edx],edi
  40b97c:	ins    DWORD PTR es:[edi],dx
  40b97d:	push   es
  40b97e:	test   eax,0xeff742ae
  40b983:	mov    al,BYTE PTR [ecx+0x69]
  40b986:	imul   edi,DWORD PTR [edx+0x3db6b57a],0xffffffc2
  40b98d:	pop    ds
  40b98e:	stos   DWORD PTR es:[edi],eax
  40b98f:	fmul   st(4),st
  40b991:	jmp    0xe4ef:0x7d45608d
  40b998:	retf   
  40b999:	ins    DWORD PTR es:[edi],dx
  40b99a:	mov    ebp,0x45db638d
  40b99f:	test   ebx,0xdcb330f
  40b9a5:	xchg   esi,eax
  40b9a6:	xchg   ecx,eax
  40b9a7:	mov    bh,0x17
  40b9a9:	fist   WORD PTR [ebx]
  40b9ab:	pop    ss
  40b9ac:	cmc    
  40b9ad:	shr    BYTE PTR [ebp+0x12],1
  40b9b0:	xor    eax,0x109c5f35
  40b9b5:	data16 scas al,BYTE PTR es:[edi]
  40b9b7:	pop    eax
  40b9b8:	push   ebp
  40b9b9:	and    eax,0xc92cd277
  40b9be:	test   DWORD PTR [ecx-0x9a25ceb],edi
  40b9c4:	mov    esi,DWORD PTR [ebx]
  40b9c6:	pushf  
  40b9c7:	imul   esp,DWORD PTR [ecx],0xffffffb0
  40b9ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9cb:	aaa    
  40b9cc:	loope  0x40b957
  40b9ce:	push   ds
  40b9cf:	and    ch,bl
  40b9d1:	adc    DWORD PTR [edx],esp
  40b9d3:	xchg   ebx,eax
  40b9d4:	test   BYTE PTR [edx+0x3c],0x18
  40b9d8:	cmp    al,0xc9
  40b9da:	not    DWORD PTR [ebp+0x4d311698]
  40b9e0:	rcl    DWORD PTR [ebp-0x7c],0xdc
  40b9e4:	jge    0x40b9e1
  40b9e6:	fild   WORD PTR [esi+0x299b4a5a]
  40b9ec:	jmp    DWORD PTR [esp+eiz*8+0x61]
  40b9f0:	aas    
  40b9f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9f2:	jb     0x40ba04
  40b9f4:	mov    bl,0xce
  40b9f6:	jne    0x40ba05
  40b9f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9f9:	icebp  
  40b9fa:	in     eax,0x7e
  40b9fc:	jp     0x40b993
  40b9fe:	fisub  WORD PTR [eax+0x6bb2b844]
  40ba04:	inc    esi
  40ba05:	xlat   BYTE PTR ds:[ebx]
  40ba06:	in     al,0x6f
  40ba08:	cwde   
  40ba09:	addr16 jbe 0x40b9de
  40ba0c:	pop    esi
  40ba0d:	cwde   
  40ba0e:	jnp    0x40b9fa
  40ba10:	or     DWORD PTR [eax+edi*1-0x2013f5dd],ebp
  40ba17:	mov    ah,0xa0
  40ba19:	test   eax,0xfbb7bb24
  40ba1e:	push   cs
  40ba1f:	xor    edi,ebp
  40ba21:	sub    DWORD PTR [edi-0x2f32c4f7],edx
  40ba27:	rcr    BYTE PTR [edi-0x45],1
  40ba2a:	push   ebx
  40ba2b:	js     0x40b9e6
  40ba2d:	sbb    eax,0x4a4639d4
  40ba32:	(bad)  
  40ba33:	fwait
  40ba34:	ret    0x8213
  40ba37:	sahf   
  40ba38:	inc    edx
  40ba39:	das    
  40ba3a:	icebp  
  40ba3b:	pusha  
  40ba3c:	sub    al,0x3b
  40ba3e:	ret    
  40ba3f:	mov    dl,0xe4
  40ba41:	sbb    ch,0x9c
  40ba44:	(bad)  
  40ba45:	or     eax,0x5a78e5a8
  40ba4a:	shl    BYTE PTR [ebp+0x1e92f929],1
  40ba50:	daa    
  40ba51:	stc    
  40ba52:	jle    0x40ba36
  40ba54:	sbb    cl,BYTE PTR [ebp-0xa]
  40ba57:	jne    0x40ba6c
  40ba59:	jecxz  0x40b9ee
  40ba5b:	les    ecx,FWORD PTR [edi-0x4a42aff9]
  40ba61:	aam    0x60
  40ba63:	mov    al,ds:0xace62a2
  40ba68:	xchg   edi,eax
  40ba69:	popf   
  40ba6a:	bound  edx,QWORD PTR [edx-0x3c]
  40ba6d:	sbb    DWORD PTR [edi+ecx*4-0xa],ebx
  40ba71:	imul   esp,edi,0x80b90c77
  40ba77:	mov    al,ds:0xead06536
  40ba7c:	xor    DWORD PTR ds:0xa447b877,edi
  40ba82:	nop
  40ba83:	push   esp
  40ba84:	or     esi,esp
  40ba86:	mov    ?,WORD PTR [edi+0xc]
  40ba89:	inc    esi
  40ba8a:	adc    DWORD PTR [edi+0xe1e4c30],eax
  40ba90:	jge    0x40ba4a
  40ba92:	cmp    al,0x0
  40ba94:	add    eax,0xc809b36c
  40ba99:	leave  
  40ba9a:	mov    esi,0x7cd5b98b
  40ba9f:	pop    ebp
  40baa0:	or     ch,al
  40baa2:	cld    
  40baa3:	and    edi,DWORD PTR [esi-0x6e]
  40baa6:	or     eax,0x8c963722
  40baab:	shr    DWORD PTR [ebx-0x2ee531b1],0x58
  40bab2:	dec    eax
  40bab3:	dec    esp
  40bab4:	jg     0x40bab9
  40bab6:	add    BYTE PTR [ebp+0x29],dh
  40bab9:	sub    al,0x19
  40babb:	fist   DWORD PTR [ebx]
  40babd:	inc    esp
  40babe:	pop    ecx
  40babf:	jns    0x40bb01
  40bac1:	mov    ch,0x24
  40bac3:	dec    ecx
  40bac4:	pop    ecx
  40bac5:	cmp    dh,cl
  40bac7:	arpl   WORD PTR [ebx+0x4c6eb536],di
  40bacd:	in     eax,dx
  40bace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bacf:	dec    edi
  40bad0:	mov    bl,0xe8
  40bad2:	xchg   edx,eax
  40bad3:	pop    ebp
  40bad4:	add    DWORD PTR [edx+0x48],ebp
  40bad7:	into   
  40bad8:	cmp    BYTE PTR [ebx],ah
  40bada:	sub    ebx,esi
  40badc:	cdq    
  40badd:	push   es
  40bade:	jp     0x40bb3a
  40bae0:	ja     0x40bb2b
  40bae2:	mov    eax,0xca837d2e
  40bae7:	and    eax,DWORD PTR [esi+0x75d69e86]
  40baed:	stos   DWORD PTR es:[edi],eax
  40baee:	stos   DWORD PTR es:[edi],eax
  40baef:	fisttp WORD PTR [edi+0x23]
  40baf2:	imul   ebp,DWORD PTR [edi-0x1024e9a6],0x3
  40baf9:	cdq    
  40bafa:	xchg   ebx,eax
  40bafb:	cmp    eax,0x762cb4bc
  40bb00:	sbb    esi,DWORD PTR [edx]
  40bb02:	xchg   edi,eax
  40bb03:	sub    al,0xb
  40bb05:	ret    
  40bb06:	(bad)
  40bb0a:	push   ebp
  40bb0b:	pop    esi
  40bb0c:	mov    dl,0xe7
  40bb0e:	jmp    0xadb7:0x62ec94c2
  40bb15:	adc    al,0x4
  40bb17:	mov    BYTE PTR [edi+ebx*8+0x55b045c1],bh
  40bb1e:	inc    ebp
  40bb1f:	clc    
  40bb20:	les    ecx,FWORD PTR ds:0x905bb2b6
  40bb26:	bound  edi,QWORD PTR [eax+0x598e680d]
  40bb2c:	xor    DWORD PTR [ecx],edx
  40bb2e:	mul    BYTE PTR [ebx+0x2b]
  40bb31:	pop    ebp
  40bb32:	jle    0x40baf4
  40bb34:	ret    
  40bb35:	ja     0x40bb01
  40bb37:	jae    0x40bb69
  40bb39:	loopne 0x40bb75
  40bb3b:	ins    BYTE PTR es:[edi],dx
  40bb3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb3d:	jp     0x40bb09
  40bb3f:	mov    esp,0xc62b1db
  40bb44:	push   ds
  40bb45:	push   ecx
  40bb46:	sub    BYTE PTR [ebx],bh
  40bb48:	mov    cl,BYTE PTR [esi]
  40bb4a:	sbb    edx,DWORD PTR [esi]
  40bb4c:	pushf  
  40bb4d:	shl    al,0xe7
  40bb50:	add    esp,DWORD PTR [esi+eax*1]
  40bb53:	lds    esi,FWORD PTR [ecx+0x36]
  40bb56:	and    ebp,DWORD PTR [ebp-0x4a]
  40bb59:	dec    eax
  40bb5a:	mov    al,0xbc
  40bb5d:	out    dx,al
  40bb5e:	pop    ecx
  40bb5f:	cmc    
  40bb60:	mov    ebx,0x9b4a9c21
  40bb65:	mov    edx,0xd55692bf
  40bb6a:	inc    eax
  40bb6b:	lds    ebx,FWORD PTR [ebp-0x2dc9b42d]
  40bb71:	jl     0x40bbf2
  40bb73:	jle    0x40bbbd
  40bb75:	lods   al,BYTE PTR ds:[esi]
  40bb76:	fld    TBYTE PTR [eax-0x3884bda1]
  40bb7c:	bound  eax,QWORD PTR [ebx]
  40bb7e:	xor    BYTE PTR [edi-0x30],bh
  40bb81:	neg    BYTE PTR [edx+eax*4]
  40bb84:	or     DWORD PTR [eax-0x6be16d03],esp
  40bb8a:	sub    BYTE PTR [eax],dl
  40bb8c:	adc    ah,ch
  40bb8e:	xchg   ebp,eax
  40bb8f:	imul   ebx,edi,0xffffffd3
  40bb92:	adc    dl,BYTE PTR [ebp-0x22]
  40bb95:	xor    BYTE PTR [edi+0x43],al
  40bb98:	enter  0x40d5,0x8f
  40bb9c:	xchg   edi,eax
  40bb9d:	push   ebx
  40bb9e:	and    DWORD PTR [eax],esi
  40bba0:	retf   
  40bba1:	sti    
  40bba2:	(bad)  
  40bba3:	dec    ebx
  40bba4:	lds    eax,FWORD PTR [ebp-0x371b467c]
  40bbaa:	mov    dl,0xb4
  40bbac:	fldenv [eax+0x73493a66]
  40bbb2:	xchg   ebx,eax
  40bbb3:	mov    WORD PTR [eax+0x7bb2b74c],fs
  40bbb9:	inc    esi
  40bbba:	pslld  mm4,QWORD PTR [eax-0x5546c196]
  40bbc1:	xor    al,0x42
  40bbc3:	dec    eax
  40bbc4:	pop    DWORD PTR [esp+esi*2+0x7d51544a]
  40bbcb:	mov    dh,0x7e
  40bbcd:	data16 scas al,BYTE PTR es:[edi]
  40bbcf:	ds out 0x8e,al
  40bbd2:	sub    DWORD PTR [edi+0x7409dcb0],ecx
  40bbd8:	int    0x1b
  40bbda:	lock adc esi,DWORD PTR [edi+0x4966698f]
  40bbe1:	addr16 sar cl,0xe4
  40bbe5:	imul   ebp,DWORD PTR [ecx],0xffffffb6
  40bbe8:	jle    0x40bc1d
  40bbea:	aam    0xa8
  40bbec:	lea    esp,[edx+0x4c]
  40bbef:	je     0x40bb76
  40bbf1:	mov    dl,0x1d
  40bbf3:	and    edx,DWORD PTR [esi-0x7d]
  40bbf6:	xlat   BYTE PTR ds:[ebx]
  40bbf7:	adc    eax,DWORD PTR [edi-0x76]
  40bbfa:	popf   
  40bbfb:	cmc    
  40bbfc:	pusha  
  40bbfd:	and    eax,0xf4f42eee
  40bc02:	dec    ebx
  40bc03:	addr16 das 
  40bc05:	dec    esi
  40bc06:	jmp    0x40bbd3
  40bc08:	or     al,0x2d
  40bc0a:	std    
  40bc0b:	xor    BYTE PTR [edi+0x4e],al
  40bc0e:	xor    al,0x65
  40bc10:	xor    DWORD PTR [esi],0xfffffff8
  40bc13:	xchg   ecx,eax
  40bc14:	dec    esp
  40bc15:	scas   al,BYTE PTR es:[edi]
  40bc16:	cmp    BYTE PTR [ebp-0x67],cl
  40bc19:	or     dl,BYTE PTR [edi]
  40bc1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc1c:	jl     0x40bc51
  40bc1e:	pop    edi
  40bc1f:	rol    BYTE PTR [esi-0x1e],cl
  40bc22:	fstp   DWORD PTR [ebx+ebp*1-0x37]
  40bc26:	mov    ebx,0x1a881f3e
  40bc2b:	rcl    BYTE PTR [eax+eiz*2-0xd00a145],1
  40bc32:	into   
  40bc33:	mov    al,0xc5
  40bc35:	out    0xa3,al
  40bc37:	xchg   edi,eax
  40bc38:	les    edi,FWORD PTR [ebx+0x14]
  40bc3b:	rol    DWORD PTR [edi-0x1c592ae8],1
  40bc41:	mov    bh,0x1e
  40bc43:	mov    gs,WORD PTR [esi]
  40bc45:	scas   al,BYTE PTR es:[edi]
  40bc46:	ss jmp 0x40bc27
  40bc49:	shl    BYTE PTR [edi],1
  40bc4b:	sbb    BYTE PTR [ebp+0x30e10c59],dh
  40bc51:	and    DWORD PTR [ebx-0x44bdfc9d],edi
  40bc57:	mov    esp,0x11da9576
  40bc5c:	fisttp QWORD PTR [ebp-0x5]
  40bc5f:	push   esp
  40bc60:	retf   
  40bc61:	(bad)  
  40bc62:	in     al,0x29
  40bc64:	jp     0x40bcdc
  40bc66:	jnp    0x40bcaf
  40bc68:	cmp    esp,DWORD PTR ds:0x8e449a69
  40bc6e:	mov    eax,ds:0xec4a10f7
  40bc73:	cmp    al,0x1d
  40bc75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc76:	push   ebp
  40bc77:	mov    dh,0x8e
  40bc79:	cmc    
  40bc7a:	push   ebp
  40bc7b:	adc    bh,BYTE PTR [edi]
  40bc7d:	iret   
  40bc7e:	push   edi
  40bc7f:	mov    ecx,0x44b07af9
  40bc84:	cmove  ebx,DWORD PTR [edi-0x5]
  40bc88:	or     al,0xc8
  40bc8a:	aad    0x52
  40bc8c:	test   bl,cl
  40bc8e:	out    0x10,al
  40bc90:	out    dx,al
  40bc91:	daa    
  40bc92:	mov    ss,ebp
  40bc94:	jbe    0x40bcc1
  40bc96:	cmp    al,0xf8
  40bc98:	mov    esi,0x83c514cb
  40bc9d:	dec    ebp
  40bc9e:	fxch   st(0)
  40bca0:	jnp    0x40bc52
  40bca2:	in     al,0x51
  40bca4:	test   edx,esi
  40bca6:	cwde   
  40bca7:	jmp    0xac2b:0x15c29c6f
  40bcae:	xchg   esp,eax
  40bcaf:	or     al,0xa5
  40bcb1:	loopne 0x40bc34
  40bcb3:	popf   
  40bcb4:	xor    DWORD PTR [ebx-0x15],0x30
  40bcb8:	sbb    eax,0x798bba17
  40bcbd:	sbb    BYTE PTR [edx+0x36ba5253],dl
  40bcc3:	fadd   st(0),st
  40bcc5:	inc    esi
  40bcc6:	xchg   esi,eax
  40bcc7:	arpl   WORD PTR [esi+edx*8+0x4b0c181f],di
  40bcce:	test   eax,0xafef3f8c
  40bcd3:	push   edx
  40bcd4:	lods   eax,DWORD PTR ds:[esi]
  40bcd5:	test   al,0xe0
  40bcd7:	or     esi,esp
  40bcd9:	scas   eax,DWORD PTR es:[edi]
  40bcda:	shl    DWORD PTR [ebx+0x75],0xb8
  40bcde:	cmp    bh,dh
  40bce0:	push   0x26
  40bce2:	sub    bh,dh
  40bce4:	push   esi
  40bce5:	pop    edx
  40bce6:	adc    esi,ecx
  40bce8:	scas   eax,DWORD PTR es:[edi]
  40bce9:	ret    0xac2e
  40bcec:	adc    ebx,DWORD PTR ds:0xd228dae
  40bcf2:	std    
  40bcf3:	ss retf 
  40bcf5:	mov    cl,0xfc
  40bcf7:	jge    0x40bd68
  40bcf9:	add    eax,0xdbf396d
  40bcfe:	jg     0x40bd3f
  40bd00:	xor    BYTE PTR [ebx+0x35e4f9a2],0x9e
  40bd07:	aas    
  40bd08:	fsubr  DWORD PTR es:[edx+eiz*2+0x24]
  40bd0d:	lods   al,BYTE PTR ds:[esi]
  40bd0e:	pop    ss
  40bd0f:	in     al,dx
  40bd10:	xlat   BYTE PTR ds:[ebx]
  40bd11:	sub    ebp,DWORD PTR [esi]
  40bd13:	fcom   DWORD PTR [esi+0x30]
  40bd16:	into   
  40bd17:	dec    esi
  40bd18:	xor    eax,0xa50f0a6
  40bd1d:	rol    BYTE PTR [esi+ebx*1+0x12615e36],0x58
  40bd25:	fldenv [edi+0x36]
  40bd28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd29:	dec    edx
  40bd2a:	scas   eax,DWORD PTR es:[edi]
  40bd2b:	xor    bl,BYTE PTR [ebx+ebp*4+0x7641245c]
  40bd32:	xor    al,0xf5
  40bd34:	mov    ah,0xd6
  40bd36:	ror    DWORD PTR [edx+0x40],1
  40bd39:	cmc    
  40bd3a:	pusha  
  40bd3b:	enter  0x980a,0x4b
  40bd3f:	aam    0xaa
  40bd41:	fdivr  st(3),st
  40bd43:	icebp  
  40bd44:	(bad)  
  40bd45:	fild   QWORD PTR [eax+0x3]
  40bd48:	jle    0x40bd2f
  40bd4a:	sbb    al,0x6d
  40bd4c:	or     al,0x89
  40bd4e:	push   ecx
  40bd4f:	push   es
  40bd50:	adc    esi,DWORD PTR ss:[ebx+0x53]
  40bd54:	js     0x40bcfa
  40bd56:	mov    dh,0xd0
  40bd58:	lods   al,BYTE PTR ds:[esi]
  40bd59:	xlat   BYTE PTR ds:[ebx]
  40bd5a:	cmp    edi,esp
  40bd5c:	cmc    
  40bd5d:	and    BYTE PTR [edx],0x64
  40bd60:	test   eax,0x5dd3128b
  40bd65:	or     BYTE PTR [edx+0x60f3dfb3],cl
  40bd6b:	mov    ebp,0x2643c794
  40bd70:	push   ss
  40bd71:	fbstp  TBYTE PTR [edx-0x40]
  40bd74:	xchg   DWORD PTR [si],esi
  40bd77:	arpl   WORD PTR [ebp-0x63],bp
  40bd7a:	push   edx
  40bd7b:	jecxz  0x40bcfe
  40bd7d:	cdq    
  40bd7e:	mov    BYTE PTR [edi-0x7c8f9d5a],dl
  40bd84:	mov    WORD PTR [edi+0x2d],ss
  40bd87:	shl    BYTE PTR [edx+0x1cb8e5b],0x8e
  40bd8e:	mov    bl,0x76
  40bd90:	fnstcw WORD PTR [eax]
  40bd92:	outs   dx,DWORD PTR ds:[esi]
  40bd93:	push   ebx
  40bd94:	pop    edx
  40bd95:	and    edi,DWORD PTR [ecx]
  40bd97:	leave  
  40bd98:	das    
  40bd99:	add    eax,ecx
  40bd9b:	addr16 mov ah,0x13
  40bd9e:	retf   
  40bd9f:	mov    cs,WORD PTR [edx-0x6ef6e852]
  40bda5:	icebp  
  40bda6:	mov    esp,ebp
  40bda8:	aas    
  40bda9:	loope  0x40be14
  40bdab:	jmp    0x542f02d5
  40bdb0:	lahf   
  40bdb1:	popf   
  40bdb2:	or     al,0x5b
  40bdb4:	sahf   
  40bdb5:	jae    0x40bd76
  40bdb7:	push   edx
  40bdb8:	in     al,dx
  40bdb9:	cwde   
  40bdba:	int3   
  40bdbb:	jmp    0xaf29ebe3
  40bdc0:	mov    esi,esp
  40bdc2:	adc    eax,0xb8a883f3
  40bdc7:	xor    eax,0x6e6a8610
  40bdcc:	xchg   esp,eax
  40bdcd:	mov    esi,0x2a4a4b07
  40bdd2:	xchg   DWORD PTR ds:0xed253be5,ecx
  40bdd8:	xlat   BYTE PTR ds:[ebx]
  40bdd9:	push   0xffffffac
  40bddb:	adc    al,0x19
  40bddd:	push   es
  40bdde:	sub    al,0x33
  40bde0:	call   0xb859e772
  40bde5:	or     al,0x64
  40bde7:	jnp    0x40be40
  40bde9:	js     0x40bd8b
  40bdeb:	push   es
  40bdec:	nop
  40bded:	fwait
  40bdee:	call   0x11fd60e
  40bdf3:	push   es
  40bdf4:	shl    ah,cl
  40bdf6:	mov    ecx,ebp
  40bdf8:	dec    ecx
  40bdf9:	dec    esp
  40bdfa:	xchg   BYTE PTR [ecx+0x539debc4],cl
  40be00:	(bad)  
  40be01:	jbe    0x40bd91
  40be03:	inc    ecx
  40be04:	iret   
  40be05:	jge    0x40bdfd
  40be07:	push   cs
  40be08:	pop    ds
  40be09:	(bad)  
  40be0a:	and    ch,BYTE PTR gs:[edi+0x2436b981]
  40be11:	jle    0x40be1e
  40be13:	inc    eax
  40be14:	push   si
  40be16:	outs   dx,DWORD PTR ds:[esi]
  40be17:	or     edi,DWORD PTR [eax-0x260c6822]
  40be1d:	mov    dh,0x7c
  40be1f:	pop    ecx
  40be20:	js     0x40be6d
  40be22:	push   esi
  40be23:	xchg   edi,eax
  40be24:	pop    ds
  40be25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be26:	fs jbe 0x40bdaa
  40be29:	mov    eax,0xe1a9be15
  40be2e:	pushf  
  40be2f:	xor    al,0xca
  40be31:	xchg   esp,eax
  40be32:	int    0x2c
  40be34:	xchg   ebp,eax
  40be35:	mov    edx,0x2fa5b218
  40be3a:	or     BYTE PTR [ebp+eax*8-0x2d],dh
  40be3e:	push   esp
  40be3f:	sub    eax,0x7c56e5ca
  40be44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be45:	push   ds
  40be46:	out    dx,al
  40be47:	push   ss
  40be48:	mov    bh,BYTE PTR [esp+ecx*8+0x6]
  40be4c:	stc    
  40be4d:	aas    
  40be4e:	or     al,0x42
  40be50:	adc    BYTE PTR ds:0xad877627,bl
  40be56:	xlat   BYTE PTR ds:[ebx]
  40be57:	sbb    al,0x35
  40be59:	aad    0x4f
  40be5b:	add    al,BYTE PTR [edi]
  40be5d:	fcom   QWORD PTR [eax]
  40be5f:	jecxz  0x40be6e
  40be61:	lds    ebx,FWORD PTR [esi]
  40be63:	sbb    dh,BYTE PTR [ecx+eax*1+0x49]
  40be67:	mov    eax,ds:0xa6b940bb
  40be6c:	cmp    al,0xd1
  40be6e:	imul   bl
  40be70:	vshufpd xmm5,xmm5,XMMWORD PTR [eax],0x7c
  40be75:	lahf   
  40be76:	pushf  
  40be77:	in     al,0x29
  40be79:	addr16 dec ecx
  40be7b:	gs scas eax,DWORD PTR es:[edi]
  40be7d:	es aaa 
  40be7f:	cdq    
  40be80:	adc    BYTE PTR [eax+edi*4+0x7d],bl
  40be84:	repz sbb BYTE PTR [ecx+esi*8],bh
  40be88:	inc    edx
  40be89:	imul   esi,eax,0xffffff86
  40be8c:	xor    bl,BYTE PTR [ecx-0x4d22a8e0]
  40be92:	mov    eax,0x93e2aa22
  40be97:	addr16 mov bl,0x2a
  40be9a:	loope  0x40be6b
  40be9c:	mov    WORD PTR [ecx+0x58f9e1f],ds
  40bea2:	js     0x40be3b
  40bea4:	das    
  40bea5:	ins    DWORD PTR es:[edi],dx
  40bea6:	and    DWORD PTR [edx],0xfedd6b9e
  40beac:	iret   
  40bead:	inc    edx
  40beae:	retf   
  40beaf:	sahf   
  40beb0:	add    eax,0xea31b3bb
  40beb5:	pop    edi
  40beb6:	mov    ds:0xf49bf231,eax
  40bebb:	push   es
  40bebc:	bound  edx,QWORD PTR [ebx+eiz*8-0x6686e39a]
  40bec3:	je     0x40bf2c
  40bec5:	outs   dx,DWORD PTR ds:[esi]
  40bec6:	cmp    bl,al
  40bec8:	dec    ecx
  40bec9:	xchg   ebp,eax
  40beca:	pop    esi
  40becb:	sub    al,0xfa
  40becd:	xchg   esp,eax
  40bece:	push   ecx
  40becf:	ret    
  40bed0:	dec    ebx
  40bed1:	ror    BYTE PTR [ebx+0x6c9f9f26],1
  40bed7:	(bad)  
  40bed9:	ins    BYTE PTR es:[edi],dx
  40beda:	or     DWORD PTR [ebx],esi
  40bedc:	adc    dh,BYTE PTR [eax]
  40bede:	jp     0x40be6c
  40bee0:	adc    BYTE PTR [ebx],al
  40bee2:	mov    ah,0xd0
  40bee4:	loop   0x40bf1d
  40bee6:	nop
  40bee7:	cmp    ecx,eax
  40bee9:	jp     0x40be82
  40beeb:	push   edi
  40beec:	stos   DWORD PTR es:[edi],eax
  40beed:	jae    0x40beaa
  40beef:	mov    bl,0x3
  40bef1:	and    al,0x88
  40bef3:	mov    bh,0xbc
  40bef5:	sbb    eax,0x8ccc6f0a
  40befa:	mov    ebx,0x2536cf80
  40beff:	jle    0x40bf06
  40bf01:	mov    BYTE PTR [esi],al
  40bf03:	stc    
  40bf04:	or     eax,0x5d0d0708
  40bf09:	iret   
  40bf0a:	fsubr  QWORD PTR [edx]
  40bf0c:	test   bl,ch
  40bf0e:	xchg   edx,eax
  40bf0f:	aad    0x8d
  40bf11:	jmp    0x40bf15
  40bf13:	or     eax,0xb4277363
  40bf18:	outs   dx,DWORD PTR ds:[esi]
  40bf19:	adc    bl,BYTE PTR [eax+0x48]
  40bf1c:	push   eax
  40bf1d:	push   ebp
  40bf1e:	mov    BYTE PTR [ebp+0x5a20e9e7],0x8d
  40bf25:	repnz jecxz 0x40beb8
  40bf28:	sub    DWORD PTR [ebp-0x5d],0x7a
  40bf2c:	neg    ebx
  40bf2e:	mov    ebp,0x58874440
  40bf33:	mov    dl,BYTE PTR [eax]
  40bf35:	out    0xe5,eax
  40bf37:	mov    al,0x55
  40bf39:	push   eax
  40bf3a:	lahf   
  40bf3b:	jne    0x40bfa4
  40bf3d:	push   edx
  40bf3e:	cdq    
  40bf3f:	push   esp
  40bf40:	rol    BYTE PTR [ebx+ecx*8+0x2e],0x14
  40bf45:	cli    
  40bf46:	rcl    dl,cl
  40bf48:	push   esp
  40bf49:	lods   eax,DWORD PTR ds:[esi]
  40bf4a:	shr    eax,0x47
  40bf4d:	jmp    0x2248:0xd755ad24
  40bf54:	in     eax,dx
  40bf55:	ins    BYTE PTR es:[edi],dx
  40bf56:	sbb    edi,0xffffffd7
  40bf59:	sub    ch,cl
  40bf5b:	mov    DWORD PTR [ebx],esi
  40bf5d:	retf   0xd3dd
  40bf60:	pop    ebp
  40bf61:	int    0xd5
  40bf63:	mov    al,0x1a
  40bf65:	push   edi
  40bf66:	pusha  
  40bf67:	ror    DWORD PTR [esi+0x7cb484c3],cl
  40bf6d:	cmp    esi,ebp
  40bf6f:	mov    DWORD PTR [ebx],0xf9cb73a9
  40bf75:	cmp    BYTE PTR ds:0xd2f4a9ca,ah
  40bf7b:	jnp    0x40bf6c
  40bf7d:	cmp    eax,0xf5a7d368
  40bf82:	mov    esi,0x815e79a5
  40bf87:	sub    eax,esp
  40bf89:	inc    ecx
  40bf8a:	test   BYTE PTR ds:0xcae28577,dh
  40bf90:	push   edi
  40bf91:	inc    esi
  40bf92:	retf   
  40bf93:	icebp  
  40bf94:	retf   0xb2c0
  40bf97:	ret    
  40bf98:	enter  0xac6c,0x51
  40bf9c:	push   ss
  40bf9d:	cmp    esi,ecx
  40bf9f:	mov    bl,0x46
  40bfa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfa2:	lods   al,BYTE PTR ds:[esi]
  40bfa3:	inc    ecx
  40bfa4:	gs icebp 
  40bfa6:	cmp    eax,0xe2753e8d
  40bfab:	pop    ds
  40bfac:	std    
  40bfad:	dec    esp
  40bfae:	cli    
  40bfaf:	cwde   
  40bfb0:	dec    esp
  40bfb1:	js     0x40c000
  40bfb3:	pusha  
  40bfb4:	cmc    
  40bfb5:	cmp    BYTE PTR [ecx-0x50],bh
  40bfb8:	mov    edx,0x171df77
  40bfbd:	mov    WORD PTR [ecx-0x6e],ss
  40bfc0:	rcr    BYTE PTR [edx+0x29daa026],1
  40bfc6:	mov    edi,0x35d67a6f
  40bfcb:	stc    
  40bfcc:	pop    ss
  40bfcd:	cmp    ch,BYTE PTR [edx]
  40bfcf:	imul   esp,ecx,0xb753f736
  40bfd5:	xchg   esp,eax
  40bfd6:	nop
  40bfd7:	mov    eax,edi
  40bfd9:	pop    ss
  40bfda:	pusha  
  40bfdb:	sbb    eax,0x37f3c651
  40bfe0:	xlat   BYTE PTR ds:[ebx]
  40bfe1:	lods   al,BYTE PTR ds:[esi]
  40bfe2:	popf   
  40bfe3:	sub    ebx,ecx
  40bfe5:	mov    al,0x3
  40bfe7:	adc    eax,0xc03cd1f2
  40bfec:	mov    eax,ds:0xbafacdbd
  40bff1:	retf   
  40bff2:	das    
  40bff3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bff4:	push   cs
  40bff5:	jnp    0x40bfc7
  40bff7:	les    esi,FWORD PTR [eax]
  40bff9:	fmul   DWORD PTR [edi-0x108c013b]
  40bfff:	cmp    al,0x7e
  40c001:	pop    esp
  40c002:	or     al,ah
  40c004:	shl    DWORD PTR [edx],1
  40c006:	stc    
  40c007:	xlat   BYTE PTR ds:[ebx]
  40c008:	rol    DWORD PTR [ecx+0x67],cl
  40c00b:	fdiv   QWORD PTR [ebx]
  40c00d:	call   0x67f8:0x1a6154d0
  40c014:	pushf  
  40c015:	iret   
  40c016:	jge    0x40c08a
  40c018:	inc    ecx
  40c019:	sahf   
  40c01a:	fwait
  40c01b:	popf   
  40c01c:	adc    al,0xd6
  40c01e:	sbb    al,0x5b
  40c020:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c022:	sahf   
  40c023:	jle    0x40c09a
  40c025:	mov    WORD PTR [ebp-0xc],es
  40c028:	jae    0x40c080
  40c02a:	jecxz  0x40c04c
  40c02c:	repz jge 0x40bff1
  40c02f:	add    al,0x17
  40c031:	pop    ss
  40c032:	test   BYTE PTR [edx-0xd46389b],0x9c
  40c039:	gs push es
  40c03b:	inc    ebp
  40c03c:	mov    ebp,0x83f2c394
  40c041:	sbb    eax,0xe6b3592
  40c046:	dec    ecx
  40c047:	sub    DWORD PTR [edx-0x6bca2a2e],ecx
  40c04d:	inc    edx
  40c04e:	inc    ecx
  40c04f:	sbb    eax,0x8a76b49
  40c054:	or     BYTE PTR [edx+0x41],al
  40c057:	mov    BYTE PTR [edi],cl
  40c059:	mov    eax,ds:0xc8c2fb4f
  40c05e:	hlt    
  40c05f:	mov    ds:0x827478b5,al
  40c064:	sub    ebx,DWORD PTR [ecx-0x48]
  40c067:	ss call 0x9fe815fb
  40c06d:	cmp    eax,0x43fc7bca
  40c072:	mov    ch,0xc5
  40c074:	push   eax
  40c075:	inc    ebx
  40c076:	imul   ebx,DWORD PTR [ecx-0x5a],0x46ab5d81
  40c07d:	ror    DWORD PTR [ebx+0xa],0xd2
  40c081:	loope  0x40c02a
  40c083:	pop    ds
  40c084:	or     al,0xce
  40c086:	ret    
  40c087:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c088:	enter  0xd2c4,0xaf
  40c08c:	nop
  40c08d:	xlat   BYTE PTR ds:[ebx]
  40c08e:	pop    edi
  40c08f:	push   esi
  40c090:	in     al,0x80
  40c092:	popf   
  40c093:	push   esi
  40c094:	adc    DWORD PTR [eax],0x31
  40c097:	fadd   QWORD PTR [bp+si+0x36e7]
  40c09c:	mov    ecx,0x51aaee1
  40c0a1:	inc    esi
  40c0a2:	repnz test eax,0xb7c35716
  40c0a8:	hlt    
  40c0a9:	test   al,0x2c
  40c0ab:	retf   
  40c0ac:	leave  
  40c0ad:	jp     0x40c051
  40c0af:	out    0x73,al
  40c0b1:	sub    bh,ch
  40c0b3:	dec    ecx
  40c0b4:	pop    edi
  40c0b5:	cmp    eax,0xe64eff8e
  40c0ba:	jecxz  0x40c050
  40c0bc:	and    eax,0x3424950d
  40c0c1:	pop    edx
  40c0c2:	inc    edx
  40c0c3:	mov    eax,0xd22b96a5
  40c0c8:	dec    edx
  40c0c9:	cwde   
  40c0ca:	push   edx
  40c0cb:	sub    al,0x32
  40c0cd:	push   esi
  40c0ce:	jge    0x40c0d9
  40c0d0:	outs   dx,BYTE PTR ds:[esi]
  40c0d1:	call   0xe616:0xc2f73eef
  40c0d8:	adc    ebp,DWORD PTR [edx]
  40c0da:	iret   
  40c0db:	sub    BYTE PTR ds:0x6f209903,bl
  40c0e1:	dec    ebx
  40c0e2:	push   es
  40c0e3:	adc    DWORD PTR [ecx],esp
  40c0e5:	pop    esi
  40c0e6:	and    eax,DWORD PTR ds:0xd170c2e0
  40c0ec:	int3   
  40c0ed:	arpl   WORD PTR [esi+0x2b],ax
  40c0f0:	cli    
  40c0f1:	push   0xe949474d
  40c0f6:	sbb    eax,0x4ee5a2bf
  40c0fb:	(bad)  
  40c0fd:	retf   
  40c0fe:	imul   esi,DWORD PTR [eax],0x19
  40c101:	rcl    DWORD PTR [ebx+esi*4-0x7c],cl
  40c105:	ds and BYTE PTR gs:[edi],0x17
  40c10a:	and    esi,esi
  40c10c:	and    eax,0x74a289c6
  40c111:	sar    cl,cl
  40c113:	(bad)  
  40c114:	out    0x46,eax
  40c116:	pushf  
  40c117:	xor    ebx,esi
  40c119:	add    al,0x5d
  40c11b:	ds ins DWORD PTR es:[edi],dx
  40c11d:	jne    0x40c119
  40c11f:	popf   
  40c120:	push   edi
  40c121:	sti    
  40c122:	ja     0x40c1a1
  40c124:	pop    esi
  40c125:	lods   al,BYTE PTR ds:[esi]
  40c126:	sbb    dh,BYTE PTR [ecx-0x6410f3d1]
  40c12c:	sub    al,ah
  40c12e:	push   ebx
  40c12f:	imul   edi,eax,0x64
  40c132:	cmp    BYTE PTR [edx-0xcfa59fe],bl
  40c138:	jnp    0x40c178
  40c13a:	pop    ecx
  40c13b:	pop    ebx
  40c13c:	test   DWORD PTR [ebp+0x6b63a120],ebx
  40c142:	push   esp
  40c143:	lahf   
  40c144:	ja     0x40c0f9
  40c146:	push   es
  40c147:	pop    ss
  40c148:	dec    esp
  40c149:	mov    dl,0x57
  40c14b:	adc    DWORD PTR [edx+0x4e],ebx
  40c14e:	cld    
  40c14f:	push   0xffffff97
  40c151:	and    ch,BYTE PTR [eax]
  40c153:	data16 jle 0x40c1c3
  40c156:	and    BYTE PTR [edx+0x21d217c6],dl
  40c15c:	test   al,ch
  40c15e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c15f:	push   edx
  40c160:	ins    DWORD PTR es:[edi],dx
  40c161:	ficomp WORD PTR [ebx+0x8]
  40c164:	or     DWORD PTR [eax+0x1d],esp
  40c167:	ds mov ebx,0xd275c869
  40c16d:	jge    0x40c175
  40c16f:	inc    edx
  40c170:	lods   al,BYTE PTR ds:[esi]
  40c171:	into   
  40c172:	pmaddwd mm0,QWORD PTR [ecx-0x1bb6c76a]
  40c179:	(bad)  
  40c17a:	xchg   ecx,eax
  40c17b:	stos   BYTE PTR es:[edi],al
  40c17c:	outs   dx,BYTE PTR ds:[esi]
  40c17d:	rol    DWORD PTR [eax-0x5f022bdf],0x27
  40c184:	clc    
  40c185:	pop    esi
  40c186:	fst    QWORD PTR [esi]
  40c188:	sbb    al,0xc2
  40c18a:	mov    ds:0xd4bb311e,eax
  40c18f:	cmp    ebx,DWORD PTR [edx-0x4]
  40c192:	add    eax,0x27328394
  40c197:	aad    0xa1
  40c199:	lods   eax,DWORD PTR ds:[esi]
  40c19a:	lock inc edx
  40c19c:	clc    
  40c19d:	sub    eax,0x37c71823
  40c1a2:	xchg   esp,eax
  40c1a3:	es push 0xffffffc9
  40c1a6:	ss mov al,cl
  40c1a9:	mov    al,0xd7
  40c1ab:	sbb    DWORD PTR [eax],edi
  40c1ad:	add    bl,ah
  40c1af:	cmp    eax,0x2625f60c
  40c1b4:	xchg   esi,eax
  40c1b5:	mov    dh,BYTE PTR [esi+eiz*4-0x5b7114c2]
  40c1bc:	mov    esi,0x349fa9be
  40c1c1:	jmp    0xa87cb6c
  40c1c6:	fld    TBYTE PTR [ebx]
  40c1c8:	fnsave [eax]
  40c1ca:	cmp    bl,cl
  40c1cc:	adc    DWORD PTR [eax+ebp*1+0x31],edx
  40c1d0:	out    0x32,eax
  40c1d2:	jg     0x40c15c
  40c1d4:	jo     0x40c1fe
  40c1d6:	mov    BYTE PTR [ebx-0x2a],dl
  40c1d9:	(bad)  
  40c1da:	arpl   sp,ax
  40c1dc:	jo     0x40c199
  40c1de:	fld    QWORD PTR [edi-0x27]
  40c1e1:	ret    0x233c
  40c1e4:	and    DWORD PTR [esi-0x51],ecx
  40c1e7:	(bad)  
  40c1e8:	mov    ah,0x22
  40c1ea:	mov    ebp,0xb4f576ba
  40c1ef:	sbb    BYTE PTR [eax+0x1e],ah
  40c1f2:	xchg   ebx,eax
  40c1f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1f4:	push   es
  40c1f5:	jnp    0x40c1e5
  40c1f7:	loopne 0x40c190
  40c1f9:	sbb    BYTE PTR [ecx-0x76],0x8
  40c1fd:	push   cs
  40c1fe:	mov    esi,0x1d64bc25
  40c203:	popa   
  40c204:	cmp    edx,edi
  40c206:	loope  0x40c271
  40c208:	or     al,dl
  40c20a:	or     BYTE PTR [eax],0x12
  40c20d:	std    
  40c20e:	and    cl,BYTE PTR [edi-0x17581812]
  40c214:	push   cs
  40c215:	pop    ss
  40c216:	aad    0x47
  40c218:	hlt    
  40c219:	leave  
  40c21a:	cmp    al,0xf8
  40c21c:	mov    ch,0x50
  40c21e:	scas   eax,DWORD PTR es:[edi]
  40c21f:	in     eax,0xb7
  40c221:	adc    al,0x6c
  40c223:	aaa    
  40c224:	jmp    0x40c2a1
  40c226:	mov    al,0xd7
  40c228:	adc    eax,0xcd6b7f6c
  40c22d:	(bad)  
  40c22e:	int    0xb9
  40c230:	cdq    
  40c231:	lods   eax,DWORD PTR ds:[esi]
  40c232:	sbb    BYTE PTR [eax],cl
  40c234:	xchg   ebx,eax
  40c235:	add    al,0x5c
  40c237:	test   BYTE PTR [ebx+0x5b],0xb1
  40c23b:	imul   edi,DWORD PTR [ecx],0x20ced7b3
  40c241:	inc    edx
  40c242:	fwait
  40c243:	sbb    eax,0x97b2d2e6
  40c248:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c249:	(bad)  [eax+edi*4]
  40c24c:	mov    edi,DWORD PTR [ecx-0xc]
  40c24f:	and    eax,0x5a3201c
  40c254:	and    DWORD PTR [ebp+0x18255edf],eax
  40c25a:	aaa    
  40c25b:	lods   al,BYTE PTR ds:[esi]
  40c25c:	xor    al,0xaa
  40c25e:	inc    ebp
  40c25f:	jno    0x40c2aa
  40c261:	xor    eax,0xa141e9ec
  40c266:	out    0x8,al
  40c268:	adc    DWORD PTR [ebp+0x68],0x208cfa46
  40c26f:	mov    ebp,0x35c9d6d5
  40c274:	dec    ebp
  40c275:	and    DWORD PTR [esi+esi*1+0x43],ebp
  40c279:	xchg   ebp,eax
  40c27a:	add    BYTE PTR [ebp-0x74],al
  40c27d:	dec    edi
  40c27e:	jne    0x40c2e5
  40c280:	mov    ebx,0x36eda13f
  40c285:	jae    0x40c306
  40c287:	shl    BYTE PTR ds:0xa66af69b,0xe7
  40c28e:	test   al,0x76
  40c290:	mov    BYTE PTR [edi],dh
  40c292:	ja     0x40c21a
  40c294:	push   eax
  40c295:	std    
  40c296:	push   ss
  40c297:	cmp    eax,0x511be303
  40c29c:	adc    eax,0x33b24883
  40c2a1:	jnp    0x40c2ef
  40c2a3:	xor    bl,BYTE PTR [edi+ecx*4-0x44b3aa85]
  40c2aa:	dec    eax
  40c2ab:	pop    es
  40c2ac:	xor    eax,esi
  40c2ae:	add    eax,edi
  40c2b0:	cmp    ecx,eax
  40c2b2:	je     0x40c2cd
  40c2b8:	mov    eax,DWORD PTR [ebp-0x3c]
  40c2bb:	movzx  eax,WORD PTR [eax+ebx*2]
  40c2bf:	mov    ecx,DWORD PTR [ebp-0x14]
  40c2c2:	mov    eax,DWORD PTR [ecx+eax*4]
  40c2c5:	mov    DWORD PTR [ebp-0x40],eax
  40c2c8:	jmp    0x409eee
  40c2cd:	mov    eax,DWORD PTR [ebp-0xc]
  40c2d0:	xor    eax,esi
  40c2d2:	lea    ebx,[ebx+eax*1+0x3272e0]
  40c2d9:	jmp    0x407809
  40c2de:	mov    eax,DWORD PTR [ebp-0x4]
  40c2e1:	xor    eax,esi
  40c2e3:	add    eax,edi
  40c2e5:	jmp    0x40c407
  40c2ea:	mov    eax,DWORD PTR [ebp-0x40]
  40c2ed:	add    eax,DWORD PTR [ebp+0x8]
  40c2f0:	mov    DWORD PTR [ebp-0x18],eax
  40c2f3:	mov    eax,DWORD PTR [ebp-0x1c]
  40c2f6:	test   eax,eax
  40c2f8:	je     0x40c392
  40c2fe:	mov    DWORD PTR [ebp-0x28],0x0
  40c305:	push   0x3
  40c307:	xor    edx,edx
  40c309:	pop    edx
  40c30a:	add    edx,0x8
  40c30d:	push   edx
  40c30e:	pop    ecx
  40c30f:	push   0x6
  40c311:	dec    ecx
  40c312:	pop    ebx
  40c313:	dec    ebx
  40c314:	xchg   ebx,ecx
  40c316:	sub    ebx,ecx
  40c318:	xchg   ebx,ecx
  40c31a:	dec    ecx
  40c31b:	mov    eax,DWORD PTR [ebp-0x1c]
  40c31e:	imul   eax,ecx
  40c321:	sub    esp,eax
  40c323:	mov    DWORD PTR [ebp-0x28],esp
  40c326:	mov    eax,DWORD PTR [ebp-0x4]
  40c329:	xor    eax,esi
  40c32b:	add    eax,edi
  40c32d:	jmp    0x40c36b
  40c332:	mov    ecx,DWORD PTR [ebp-0xc]
  40c335:	mov    eax,DWORD PTR [ebp+0x8]
  40c338:	mov    edx,DWORD PTR [ebp+0x14]
  40c33b:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c33f:	xor    ecx,esi
  40c341:	add    ecx,edi
  40c343:	xor    edx,edx
  40c345:	div    ecx
  40c347:	mov    ecx,DWORD PTR [ebp-0x4]
  40c34a:	xor    ecx,esi
  40c34c:	lea    eax,[ecx+eax*1+0x3272e0]
  40c353:	mov    ecx,DWORD PTR [ebp+0x8]
  40c356:	mov    edx,DWORD PTR [ebp-0x28]
  40c359:	mov    DWORD PTR [edx+ecx*4],eax
  40c35c:	mov    eax,DWORD PTR [ebp-0xc]
  40c35f:	mov    ecx,DWORD PTR [ebp+0x8]
  40c362:	xor    eax,esi
  40c364:	lea    eax,[eax+ecx*1+0x3272e0]
  40c36b:	mov    DWORD PTR [ebp+0x8],eax
  40c36e:	mov    eax,DWORD PTR [ebp-0xc]
  40c371:	mov    ecx,DWORD PTR [ebp+0x14]
  40c374:	xor    eax,esi
  40c376:	add    eax,edi
  40c378:	imul   eax,DWORD PTR [ecx]
  40c37b:	mov    ecx,DWORD PTR [ebp-0x4]
  40c37e:	mov    edx,DWORD PTR [ebp+0x8]
  40c381:	xor    ecx,esi
  40c383:	lea    ecx,[ecx+edx*1+0x3272e0]
  40c38a:	cmp    ecx,eax
  40c38c:	jne    0x40c332
  40c392:	mov    eax,DWORD PTR [ebp-0x4]
  40c395:	xor    eax,esi
  40c397:	add    eax,edi
  40c399:	mov    DWORD PTR [ebp-0x10],eax
  40c39c:	mov    ebx,0x65655
  40c3a1:	add    ebx,0x3234
  40c3a7:	xchg   ebx,esi
  40c3a9:	xor    ebx,ebx
  40c3ab:	push   esi
  40c3ac:	mov    esi,ebx
  40c3ae:	pop    ebx
  40c3af:	mov    edx,esi
  40c3b1:	add    ebx,0x1002
  40c3b7:	lea    eax,[ebp-0x18]
  40c3ba:	add    edx,eax
  40c3bc:	add    edx,0x5
  40c3bf:	push   edx
  40c3c0:	inc    esi
  40c3c1:	pop    ecx
  40c3c2:	dec    ecx
  40c3c3:	xchg   ecx,eax
  40c3c4:	dec    eax
  40c3c5:	xchg   ecx,eax
  40c3c6:	dec    ecx
  40c3c7:	xchg   ecx,edx
  40c3c9:	dec    edx
  40c3ca:	push   edx
  40c3cb:	mov    edx,ebx
  40c3cd:	pop    ebx
  40c3ce:	dec    ebx
  40c3cf:	call   DWORD PTR [ebx]
  40c3d1:	cmp    DWORD PTR [ebp+0x10],esi
  40c3d4:	je     0x40c3f3
  40c3da:	xchg   edx,eax
  40c3db:	push   0xb
  40c3dd:	pop    ecx
  40c3de:	push   0x4
  40c3e0:	pop    ebx
  40c3e1:	inc    ebx
  40c3e2:	xchg   ebx,ecx
  40c3e4:	sub    ebx,ecx
  40c3e6:	xchg   ebx,ecx
  40c3e8:	dec    ecx
  40c3e9:	dec    ecx
  40c3ea:	mov    eax,DWORD PTR [ebp-0x1c]
  40c3ed:	imul   eax,ecx
  40c3f0:	add    esp,eax
  40c3f2:	xchg   edx,eax
  40c3f3:	push   eax
  40c3f4:	xor    ebx,ebx
  40c3f6:	mov    edx,esp
  40c3f8:	dec    edx
  40c3f9:	inc    ebx
  40c3fa:	add    ebx,DWORD PTR [edx+ebx*1]
  40c3fd:	dec    ebx
  40c3fe:	xor    edx,edx
  40c400:	add    DWORD PTR [ebp-0x10],ebx
  40c403:	pop    ebx
  40c404:	mov    eax,DWORD PTR [ebp-0x10]
  40c407:	pop    edi
  40c408:	pop    esi
  40c409:	pop    ebx
  40c40a:	leave  
  40c40b:	ret    0x10
  40c40e:	push   ebp
  40c40f:	mov    ebp,esp
  40c411:	sub    esp,0x7c
  40c414:	push   esi
  40c415:	xor    ecx,esi
  40c417:	push   edi
  40c418:	mov    eax,ds:0x42e313
  40c41d:	mov    DWORD PTR [ebp-0x24],eax
  40c420:	mov    eax,ds:0x42e41f
  40c425:	mov    DWORD PTR [ebp-0x34],eax
  40c428:	mov    DWORD PTR ds:0x42d01c,0x1b
  40c432:	cmp    DWORD PTR ds:0x42d01c,0x0
  40c439:	je     0x40c519
  40c43f:	cmp    DWORD PTR ds:0x42d01c,0x22
  40c446:	jne    0x40c457
  40c44c:	push   0x429028
  40c451:	call   DWORD PTR ds:0x42ecb3
  40c457:	xor    eax,eax
  40c459:	add    eax,DWORD PTR ds:0x42d01c
  40c45f:	dec    eax
  40c460:	mov    ds:0x42d01c,eax
  40c465:	jmp    0x40c432
  40c46a:	and    DWORD PTR ds:0x429010,0x0
  40c474:	xor    ecx,ecx
  40c476:	xor    ecx,DWORD PTR ds:0x429010
  40c47c:	inc    ecx
  40c47d:	mov    DWORD PTR ds:0x429010,ecx
  40c483:	cmp    DWORD PTR ds:0x429010,0x6
  40c48a:	jne    0x40c4a5
  40c490:	push   0x42a004
  40c495:	push   0x42b01c
  40c49a:	push   0x429010
  40c49f:	call   DWORD PTR ds:0x42ec73
  40c4a5:	cmp    DWORD PTR ds:0x429010,0x5
  40c4ac:	jne    0x40c4bf
  40c4b2:	mov    ecx,DWORD PTR ds:0x429010
  40c4b8:	inc    ecx
  40c4b9:	mov    DWORD PTR ds:0x429010,ecx
  40c4bf:	cmp    DWORD PTR ds:0x429010,0x16
  40c4c6:	jb     0x40c474
  40c4cc:	and    DWORD PTR ds:0x42c004,0x0
  40c4d6:	jmp    0x40c4e8
  40c4db:	mov    esi,DWORD PTR ds:0x42c004
  40c4e1:	inc    esi
  40c4e2:	mov    DWORD PTR ds:0x42c004,esi
  40c4e8:	cmp    DWORD PTR ds:0x42c004,0x1a
  40c4ef:	jae    0x40c519
  40c4f5:	cmp    DWORD PTR ds:0x42c004,0x23
  40c4fc:	jne    0x40c514
  40c502:	push   0x1
  40c504:	push   0x6fde
  40c509:	push   0x44e1
  40c50e:	call   DWORD PTR ds:0x42ec77
  40c514:	jmp    0x40c4db
  40c519:	and    DWORD PTR [ebp-0x30],0x0
  40c51d:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  40c524:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  40c52b:	mov    eax,DWORD PTR [ebp-0x10]
  40c52e:	and    DWORD PTR ds:0x429020,0x0
  40c538:	mov    ecx,DWORD PTR ds:0x429020
  40c53e:	inc    ecx
  40c53f:	mov    DWORD PTR ds:0x429020,ecx
  40c545:	cmp    DWORD PTR ds:0x429020,0x18
  40c54c:	jne    0x40c571
  40c552:	push   DWORD PTR [ebp-0x1c]
  40c555:	push   DWORD PTR [ebp-0x18]
  40c558:	push   0x42d004
  40c55d:	push   0x3a2d
  40c562:	push   DWORD PTR [ebp-0x18]
  40c565:	push   DWORD PTR [ebp-0x14]
  40c568:	push   DWORD PTR [ebp-0x1c]
  40c56b:	call   DWORD PTR ds:0x42ec7f
  40c571:	cmp    DWORD PTR ds:0x429020,0x10
  40c578:	jb     0x40c538
  40c57e:	xor    edi,ecx
  40c580:	mov    ecx,DWORD PTR [ebp-0x10]
  40c583:	mov    esi,DWORD PTR ds:0x42d000
  40c589:	and    DWORD PTR ds:0x42c018,esi
  40c58f:	sub    eax,ecx
  40c591:	sub    DWORD PTR ds:0x429028,edx
  40c597:	mov    DWORD PTR [ebp-0x10],eax
  40c59a:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  40c5a1:	mov    eax,DWORD PTR [ebp-0x18]
  40c5a4:	and    DWORD PTR ds:0x429000,0x0
  40c5ae:	jmp    0x40c5c2
  40c5b3:	xor    esi,esi
  40c5b5:	xor    esi,DWORD PTR ds:0x429000
  40c5bb:	inc    esi
  40c5bc:	mov    DWORD PTR ds:0x429000,esi
  40c5c2:	cmp    DWORD PTR ds:0x429000,0x19
  40c5c9:	jae    0x40c645
  40c5cf:	cmp    DWORD PTR ds:0x429000,0x26
  40c5d6:	jne    0x40c5f7
  40c5dc:	push   0x42a000
  40c5e1:	push   DWORD PTR [ebp-0xc]
  40c5e4:	push   0x42e000
  40c5e9:	push   DWORD PTR [ebp-0x20]
  40c5ec:	push   0x21f7
  40c5f1:	call   DWORD PTR ds:0x42ec83
  40c5f7:	jmp    0x40c5b3
  40c5fc:	mov    DWORD PTR ds:0x42a018,0x13
  40c606:	cmp    DWORD PTR ds:0x42a018,0x0
  40c60d:	je     0x40c645
  40c613:	cmp    DWORD PTR ds:0x42a018,0x21
  40c61a:	jne    0x40c62b
  40c620:	push   0x42d008
  40c625:	call   DWORD PTR ds:0x42ec8b
  40c62b:	xor    esi,esi
  40c62d:	xor    esi,DWORD PTR ds:0x42a018
  40c633:	dec    esi
  40c634:	mov    DWORD PTR ds:0x42a018,esi
  40c63a:	jmp    0x40c606
  40c63f:	sub    DWORD PTR ds:0x42d01c,edx
  40c645:	mov    ecx,DWORD PTR [ebp-0x18]
  40c648:	sbb    edi,esi
  40c64a:	sub    eax,ecx
  40c64c:	and    DWORD PTR ds:0x429020,0x0
  40c656:	jmp    0x40c66a
  40c65b:	xor    esi,esi
  40c65d:	or     esi,DWORD PTR ds:0x429020
  40c663:	inc    esi
  40c664:	mov    DWORD PTR ds:0x429020,esi
  40c66a:	cmp    DWORD PTR ds:0x429020,0x14
  40c671:	jae    0x40c6b9
  40c677:	cmp    DWORD PTR ds:0x429020,0x5
  40c67e:	jne    0x40c69a
  40c684:	push   0x2bc2
  40c689:	push   DWORD PTR [ebp-0x28]
  40c68c:	push   0x42b010
  40c691:	push   DWORD PTR [ebp-0x14]
  40c694:	call   DWORD PTR ds:0x42ec8f
  40c69a:	cmp    DWORD PTR ds:0x429020,0x4
  40c6a1:	jne    0x40c6b4
  40c6a7:	mov    esi,DWORD PTR ds:0x429020
  40c6ad:	inc    esi
  40c6ae:	mov    DWORD PTR ds:0x429020,esi
  40c6b4:	jmp    0x40c65b
  40c6b9:	mov    DWORD PTR [ebp-0x18],eax
  40c6bc:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  40c6c3:	mov    eax,DWORD PTR [ebp-0xc]
  40c6c6:	mov    ecx,DWORD PTR [ebp-0xc]
  40c6c9:	sub    eax,ecx
  40c6cb:	mov    DWORD PTR [ebp-0xc],eax
  40c6ce:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  40c6d5:	mov    eax,DWORD PTR [ebp-0x1c]
  40c6d8:	mov    ecx,DWORD PTR [ebp-0x1c]
  40c6db:	sub    eax,ecx
  40c6dd:	mov    DWORD PTR [ebp-0x1c],eax
  40c6e0:	or     DWORD PTR [ebp-0x1c],0xf89c85d9
  40c6e7:	mov    eax,DWORD PTR [ebp-0x20]
  40c6ea:	mov    ecx,DWORD PTR [ebp-0x20]
  40c6ed:	sub    eax,ecx
  40c6ef:	mov    DWORD PTR [ebp-0x20],eax
  40c6f2:	mov    eax,DWORD PTR [ebp-0x2c]
  40c6f5:	mov    ecx,DWORD PTR [ebp-0x20]
  40c6f8:	mov    esi,0x7510899
  40c6fd:	xor    eax,esi
  40c6ff:	mov    edi,0x3272e0
  40c704:	add    eax,edi
  40c706:	or     eax,ecx
  40c708:	mov    DWORD PTR [ebp-0x20],eax
  40c70b:	mov    eax,DWORD PTR [ebp-0x4]
  40c70e:	mov    ecx,DWORD PTR [ebp-0x4]
  40c711:	sub    eax,ecx
  40c713:	mov    DWORD PTR [ebp-0x4],eax
  40c716:	or     DWORD PTR [ebp-0x4],0xf89c85bc
  40c71d:	mov    eax,DWORD PTR [ebp-0xc]
  40c720:	xor    eax,esi
  40c722:	add    eax,edi
  40c724:	push   eax
  40c725:	mov    eax,DWORD PTR [ebp-0x10]
  40c728:	xor    eax,esi
  40c72a:	add    eax,edi
  40c72c:	push   eax
  40c72d:	mov    eax,DWORD PTR [ebp-0x4]
  40c730:	xor    eax,esi
  40c732:	add    eax,edi
  40c734:	push   eax
  40c735:	lea    eax,[ebp-0x7c]
  40c738:	push   eax
  40c739:	push   DWORD PTR [ebp-0x2c]
  40c73c:	push   DWORD PTR [ebp-0x28]
  40c73f:	call   0x4115b7
  40c744:	test   eax,eax
  40c746:	je     0x40c774
  40c74c:	lea    eax,[ebp-0x7c]
  40c74f:	push   eax
  40c750:	mov    eax,DWORD PTR [ebp-0x28]
  40c753:	xor    eax,esi
  40c755:	add    eax,edi
  40c757:	push   eax
  40c758:	mov    eax,DWORD PTR [ebp-0x24]
  40c75b:	add    eax,0xaa
  40c760:	push   eax
  40c761:	mov    eax,DWORD PTR [ebp-0x24]
  40c764:	mov    eax,DWORD PTR [eax+0x198]
  40c76a:	push   DWORD PTR [eax]
  40c76c:	call   0x405286
  40c771:	mov    DWORD PTR [ebp-0x14],eax
  40c774:	lea    eax,[ebp+0x4]
  40c777:	mov    DWORD PTR [ebp-0x30],eax
  40c77a:	mov    eax,DWORD PTR [ebp-0x14]
  40c77d:	test   eax,eax
  40c77f:	je     0x40c7e7
  40c785:	lea    eax,[ebp-0x8]
  40c788:	mov    DWORD PTR [ebp-0x38],eax
  40c78b:	mov    eax,DWORD PTR [ebp-0x34]
  40c78e:	mov    DWORD PTR [ebp-0x8],eax
  40c791:	mov    eax,DWORD PTR [ebp-0x8]
  40c794:	mov    ecx,DWORD PTR [ebp-0x14]
  40c797:	sub    eax,ecx
  40c799:	mov    DWORD PTR [ebp-0x8],eax
  40c79c:	mov    ecx,DWORD PTR [ebp-0x4]
  40c79f:	xor    ecx,esi
  40c7a1:	mov    eax,0xffcd8d20
  40c7a6:	sub    eax,ecx
  40c7a8:	add    DWORD PTR [ebp-0x8],eax
  40c7ab:	mov    eax,DWORD PTR [ebp-0x8]
  40c7ae:	mov    ecx,DWORD PTR [ebp-0x14]
  40c7b1:	mov    DWORD PTR [ecx+0x1],eax
  40c7b4:	mov    eax,DWORD PTR [ebp-0x14]
  40c7b7:	push   DWORD PTR [ebp-0x24]
  40c7ba:	mov    BYTE PTR [eax],0xe9
  40c7bd:	mov    eax,ds:0x42e18f
  40c7c2:	push   DWORD PTR [eax]
  40c7c4:	push   DWORD PTR ds:0x42e3eb
  40c7ca:	push   DWORD PTR ds:0x42e197
  40c7d0:	push   DWORD PTR ds:0x42e3cb
  40c7d6:	push   DWORD PTR ds:0x42e9db
  40c7dc:	push   DWORD PTR [ebp-0x28]
  40c7df:	push   DWORD PTR [ebp-0x2c]
  40c7e2:	mov    eax,DWORD PTR [ebp-0x14]
  40c7e5:	call   eax
  40c7e7:	mov    eax,DWORD PTR [ebp-0x30]
  40c7ea:	mov    ecx,DWORD PTR ds:0x42e38f
  40c7f0:	add    DWORD PTR [eax],ecx
  40c7f2:	pop    edi
  40c7f3:	pop    esi
  40c7f4:	leave  
  40c7f5:	ret    
  40c7f6:	push   ebp
  40c7f7:	mov    ebp,esp
  40c7f9:	sub    esp,0x18
  40c7fc:	adc    edx,ecx
  40c7fe:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  40c805:	add    edx,ecx
  40c807:	lea    eax,[ebp+0x14]
  40c80a:	and    DWORD PTR ds:0x42d014,0x0
  40c814:	jmp    0x40c826
  40c819:	mov    ecx,DWORD PTR ds:0x42d014
  40c81f:	inc    ecx
  40c820:	mov    DWORD PTR ds:0x42d014,ecx
  40c826:	cmp    DWORD PTR ds:0x42d014,0x18
  40c82d:	jae    0x40c86f
  40c833:	cmp    DWORD PTR ds:0x42d014,0x8
  40c83a:	jne    0x40c846
  40c840:	call   DWORD PTR ds:0x42ec93
  40c846:	cmp    DWORD PTR ds:0x42d014,0x7
  40c84d:	jne    0x40c860
  40c853:	mov    ecx,DWORD PTR ds:0x42d014
  40c859:	inc    ecx
  40c85a:	mov    DWORD PTR ds:0x42d014,ecx
  40c860:	jmp    0x40c819
  40c865:	xor    DWORD PTR ds:0x42d004,0x7da9
  40c86f:	mov    DWORD PTR [ebp-0x4],eax
  40c872:	dec    edx
  40c873:	push   esi
  40c874:	and    DWORD PTR ds:0x42b004,0x0
  40c87e:	mov    esi,DWORD PTR ds:0x42b004
  40c884:	inc    esi
  40c885:	mov    DWORD PTR ds:0x42b004,esi
  40c88b:	cmp    DWORD PTR ds:0x42b004,0x4
  40c892:	jne    0x40c8b6
  40c898:	push   DWORD PTR [ebp-0x24]
  40c89b:	push   0x42c000
  40c8a0:	push   DWORD PTR [ebp-0x1c]
  40c8a3:	push   0x1834
  40c8a8:	push   0x14e1
  40c8ad:	push   DWORD PTR [ebp-0x24]
  40c8b0:	call   DWORD PTR ds:0x42ec97
  40c8b6:	cmp    DWORD PTR ds:0x42b004,0x3
  40c8bd:	jne    0x40c8d2
  40c8c3:	xor    esi,esi
  40c8c5:	xor    esi,DWORD PTR ds:0x42b004
  40c8cb:	inc    esi
  40c8cc:	mov    DWORD PTR ds:0x42b004,esi
  40c8d2:	cmp    DWORD PTR ds:0x42b004,0x16
  40c8d9:	jb     0x40c87e
  40c8df:	mov    esi,0xf89c85b9
  40c8e4:	adc    edx,DWORD PTR ds:0x429004
  40c8ea:	mov    DWORD PTR [ebp-0xc],esi
  40c8ed:	lea    eax,[ebp-0xc]
  40c8f0:	sbb    edx,DWORD PTR ds:0x42a004
  40c8f6:	mov    DWORD PTR [ebp-0x14],eax
  40c8f9:	xor    ecx,ecx
  40c8fb:	or     ecx,DWORD PTR ds:0x418f85
  40c901:	mov    ecx,DWORD PTR [ecx]
  40c903:	adc    DWORD PTR ds:0x42c018,ecx
  40c909:	mov    eax,DWORD PTR [ebp-0xc]
  40c90c:	add    DWORD PTR ds:0x42d004,0x429008
  40c916:	mov    edx,DWORD PTR [ebp-0x14]
  40c919:	mov    ecx,0x7510899
  40c91e:	xor    eax,ecx
  40c920:	sbb    DWORD PTR ds:0x42c010,0x429000
  40c92a:	add    eax,0x3272e0
  40c92f:	xor    DWORD PTR ds:0x42c018,0x1738
  40c939:	mov    DWORD PTR [edx],eax
  40c93b:	or     DWORD PTR ds:0x42a008,0x34e
  40c945:	mov    eax,ds:0x42e18b
  40c94a:	mov    edx,DWORD PTR [ebp-0x4]
  40c94d:	mov    eax,DWORD PTR [eax]
  40c94f:	sbb    DWORD PTR ds:0x42a010,0x361f
  40c959:	add    eax,DWORD PTR [edx]
  40c95b:	dec    edx
  40c95c:	push   edi
  40c95d:	mov    DWORD PTR ds:0x42a01c,0x1f
  40c967:	cmp    DWORD PTR ds:0x42a01c,0x0
  40c96e:	je     0x40c9b5
  40c974:	cmp    DWORD PTR ds:0x42a01c,0x3
  40c97b:	jne    0x40c987
  40c981:	call   DWORD PTR ds:0x42ec9b
  40c987:	cmp    DWORD PTR ds:0x42a01c,0x4
  40c98e:	jne    0x40c9a3
  40c994:	xor    edx,edx
  40c996:	or     edx,DWORD PTR ds:0x42a01c
  40c99c:	dec    edx
  40c99d:	mov    DWORD PTR ds:0x42a01c,edx
  40c9a3:	mov    edx,DWORD PTR ds:0x42a01c
  40c9a9:	dec    edx
  40c9aa:	mov    DWORD PTR ds:0x42a01c,edx
  40c9b0:	jmp    0x40c967
  40c9b5:	mov    DWORD PTR [ebp-0x8],eax
  40c9b8:	or     edi,edi
  40c9ba:	mov    edi,DWORD PTR [ebp+0x8]
  40c9bd:	adc    edx,edx
  40c9bf:	mov    eax,ds:0x42e313
  40c9c4:	mov    eax,DWORD PTR [eax+0x198]
  40c9ca:	xor    edi,ecx
  40c9cc:	mov    edx,0x3272e0
  40c9d1:	sub    DWORD PTR ds:0x42b00c,0x42c010
  40c9db:	add    edi,edx
  40c9dd:	mov    DWORD PTR ds:0x429010,0x673c
  40c9e7:	cmp    DWORD PTR [eax],edi
  40c9e9:	je     0x40c9f6
  40c9ef:	mov    eax,DWORD PTR [eax]
  40c9f1:	jmp    0x40f0dc
  40c9f6:	mov    eax,DWORD PTR [ebp+0x18]
  40c9f9:	mov    DWORD PTR ds:0x42b01c,0x6325
  40ca03:	cmp    eax,esi
  40ca05:	jne    0x40ca1f
  40ca0b:	push   0xf89c85b8
  40ca10:	mov    DWORD PTR ds:0x42b00c,0x25aa
  40ca1a:	jmp    0x40f0cb
  40ca1f:	mov    esi,0x6599
  40ca24:	mov    esi,DWORD PTR [ebp+0x18]
  40ca27:	mov    eax,0xf89c85bb
  40ca2c:	mov    DWORD PTR ds:0x42d00c,0x595f
  40ca36:	cmp    esi,eax
  40ca38:	mov    DWORD PTR ds:0x42a008,0x11a1
  40ca42:	jne    0x40f0bb
  40ca48:	add    eax,DWORD PTR ds:0x42b004
  40ca4e:	mov    eax,DWORD PTR [ebp+0x10]
  40ca51:	xor    eax,ecx
  40ca53:	add    eax,edx
  40ca55:	and    DWORD PTR ds:0x429014,0x0
  40ca5f:	jmp    0x40ca71
  40ca64:	mov    esi,DWORD PTR ds:0x429014
  40ca6a:	inc    esi
  40ca6b:	mov    DWORD PTR ds:0x429014,esi
  40ca71:	cmp    DWORD PTR ds:0x429014,0x16
  40ca78:	jae    0x40caa5
  40ca7e:	cmp    DWORD PTR ds:0x429014,0x1b
  40ca85:	jne    0x40ca9e
  40ca8b:	push   DWORD PTR [ebp-0x28]
  40ca8e:	push   0x429018
  40ca93:	push   0x4f77
  40ca98:	call   DWORD PTR ds:0x42ec9f
  40ca9e:	jmp    0x40ca64
  40caa3:	not    esi
  40caa5:	mov    DWORD PTR [ebp-0x18],eax
  40caa8:	sub    DWORD PTR ds:0x429014,ecx
  40caae:	mov    eax,DWORD PTR [ebp+0xc]
  40cab1:	mov    esi,DWORD PTR ds:0x429008
  40cab7:	or     DWORD PTR ds:0x429028,esi
  40cabd:	mov    esi,DWORD PTR [ebp-0x8]
  40cac0:	xor    eax,ecx
  40cac2:	add    eax,edx
  40cac4:	adc    DWORD PTR ds:0x42a000,0x42a00c
  40cace:	imul   eax,DWORD PTR [esi]
  40cad1:	and    DWORD PTR ds:0x42d004,0x0
  40cadb:	mov    esi,DWORD PTR ds:0x42d004
  40cae1:	inc    esi
  40cae2:	mov    DWORD PTR ds:0x42d004,esi
  40cae8:	cmp    DWORD PTR ds:0x42d004,0x5
  40caef:	jne    0x40cb08
  40caf5:	push   0x42e0b3
  40cafa:	push   0x42e127
  40caff:	push   DWORD PTR [ebp-0x24]
  40cb02:	call   DWORD PTR ds:0x42eca7
  40cb08:	cmp    DWORD PTR ds:0x42d004,0x4
  40cb0f:	jne    0x40cb22
  40cb15:	mov    esi,DWORD PTR ds:0x42d004
  40cb1b:	inc    esi
  40cb1c:	mov    DWORD PTR ds:0x42d004,esi
  40cb22:	cmp    DWORD PTR ds:0x42d004,0x14
  40cb29:	jb     0x40cadb
  40cb2f:	mov    esi,DWORD PTR [ebp+0x8]
  40cb32:	and    DWORD PTR ds:0x42b008,0x408f
  40cb3c:	xor    esi,ecx
  40cb3e:	add    esi,edx
  40cb40:	cmp    esi,eax
  40cb42:	mov    DWORD PTR ds:0x42a000,0x45f2
  40cb4c:	mov    eax,DWORD PTR [ebp-0x4]
  40cb4f:	mov    DWORD PTR ds:0x429010,0x639a
  40cb59:	push   ebx
  40cb5a:	mov    DWORD PTR ds:0x429004,0x7615
  40cb64:	je     0x40cbb2
  40cb6a:	sub    esi,DWORD PTR ds:0x42c01c
  40cb70:	mov    esi,DWORD PTR [ebp-0x18]
  40cb73:	add    DWORD PTR [eax],esi
  40cb75:	dec    eax
  40cb76:	mov    eax,DWORD PTR [ebp-0x4]
  40cb79:	mov    esi,DWORD PTR [ebp+0xc]
  40cb7c:	adc    DWORD PTR ds:0x42c014,0x3307
  40cb86:	xor    esi,ecx
  40cb88:	add    DWORD PTR ds:0x42d004,0x3241
  40cb92:	add    esi,edx
  40cb94:	sub    DWORD PTR ds:0x42900c,0x6cc3
  40cb9e:	imul   esi,DWORD PTR [eax]
  40cba1:	mov    DWORD PTR ds:0x429000,0x39ad
  40cbab:	mov    DWORD PTR [eax],esi
  40cbad:	jmp    0x40cbb7
  40cbb2:	mov    esi,DWORD PTR [ebp+0x14]
  40cbb5:	xor    DWORD PTR [eax],esi
  40cbb7:	mov    eax,DWORD PTR [ebp-0x4]
  40cbba:	mov    edi,DWORD PTR [ebp+0x10]
  40cbbd:	xor    edi,ecx
  40cbbf:	mov    esi,0xffcd8d20
  40cbc4:	mov    ebx,esi
  40cbc6:	sub    ebx,edi
  40cbc8:	add    DWORD PTR [eax],ebx
  40cbca:	mov    eax,DWORD PTR [ebp-0x4]
  40cbcd:	mov    edi,DWORD PTR [ebp-0x8]
  40cbd0:	add    edi,DWORD PTR [eax]
  40cbd2:	mov    DWORD PTR [ebp-0x8],edi
  40cbd5:	mov    eax,DWORD PTR [ebp+0xc]
  40cbd8:	mov    edi,DWORD PTR [ebp+0xc]
  40cbdb:	xor    edi,ecx
  40cbdd:	xor    eax,ecx
  40cbdf:	lea    eax,[eax+edi*1+0x64e5c0]
  40cbe6:	mov    edi,DWORD PTR [ebp+0xc]
  40cbe9:	xor    edi,ecx
  40cbeb:	add    edi,edx
  40cbed:	imul   eax,edi
  40cbf0:	mov    edi,DWORD PTR [ebp+0xc]
  40cbf3:	xor    edi,ecx
  40cbf5:	sub    edi,eax
  40cbf7:	mov    eax,DWORD PTR [ebp-0x4]
  40cbfa:	add    edi,edx
  40cbfc:	cmp    DWORD PTR [eax],edi
  40cbfe:	mov    eax,DWORD PTR [ebp-0x4]
  40cc01:	mov    edi,DWORD PTR [ebp+0x10]
  40cc04:	jg     0x40cc17
  40cc0a:	xor    edi,ecx
  40cc0c:	mov    ebx,esi
  40cc0e:	sub    ebx,edi
  40cc10:	add    DWORD PTR [eax],ebx
  40cc12:	jmp    0x40cc1d
  40cc17:	xor    edi,ecx
  40cc19:	add    edi,edx
  40cc1b:	add    DWORD PTR [eax],edi
  40cc1d:	mov    eax,DWORD PTR [ebp-0x8]
  40cc20:	mov    edi,DWORD PTR [ebp-0x10]
  40cc23:	mov    eax,DWORD PTR [eax]
  40cc25:	xor    edi,ecx
  40cc27:	add    edi,0x3272df
  40cc2d:	jmp    0x40efd7
  40cc32:	xchg   ebx,eax
  40cc33:	rol    BYTE PTR [ebx+ebx*8-0x5],0xdb
  40cc38:	jae    0x40cbba
  40cc3a:	fs lock inc edx
  40cc3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc3e:	shr    DWORD PTR [ebp-0x1a25f507],1
  40cc44:	jp     0x40ccc0
  40cc46:	in     eax,0x5f
  40cc48:	jp     0x40ccc4
  40cc4a:	sub    al,0x8f
  40cc4c:	mov    al,0x4c
  40cc4e:	inc    ebx
  40cc4f:	(bad)  
  40cc50:	loopne 0x40cc6b
  40cc52:	fistp  WORD PTR [eax+eiz*2]
  40cc55:	sbb    al,0x61
  40cc57:	arpl   WORD PTR [edi+0x4de9a28b],cx
  40cc5d:	sbb    bh,bh
  40cc5f:	ret    0x556
  40cc62:	and    BYTE PTR [ecx+0x24],dl
  40cc65:	push   ebp
  40cc66:	adc    al,0xfe
  40cc68:	jge    0x40cc8c
  40cc6a:	dec    edi
  40cc6b:	icebp  
  40cc6c:	xchg   ecx,eax
  40cc6d:	scas   al,BYTE PTR es:[edi]
  40cc6e:	or     al,0x67
  40cc70:	mov    ah,ah
  40cc72:	add    BYTE PTR [ebx],dh
  40cc74:	nop
  40cc75:	shl    DWORD PTR fs:[esi+ebx*4-0x24],cl
  40cc7a:	dec    ebp
  40cc7b:	cmp    eax,0x1ccc68be
  40cc80:	or     DWORD PTR [eax-0x44173e8b],ecx
  40cc86:	cmp    DWORD PTR [edx-0x4a],edx
  40cc89:	cmp    edx,DWORD PTR [edi+0x77]
  40cc8c:	mov    edi,cs
  40cc8e:	int3   
  40cc8f:	adc    edx,DWORD PTR [ebx+eax*4+0x3d]
  40cc93:	aaa    
  40cc94:	cs push eax
  40cc96:	mov    esp,0x16ea547a
  40cc9b:	jmp    0x34449e7e
  40cca0:	add    al,0x3c
  40cca2:	out    dx,al
  40cca3:	dec    ecx
  40cca4:	loope  0x40cc90
  40cca6:	aaa    
  40cca7:	cmp    al,0xce
  40cca9:	es mov esp,0x54aae441
  40ccaf:	mov    cl,0x48
  40ccb1:	ins    DWORD PTR es:[edi],dx
  40ccb2:	dec    edx
  40ccb3:	gs (bad) 
  40ccb5:	mov    ds:0xd8b35b9a,eax
  40ccba:	cmp    al,0x35
  40ccbc:	popf   
  40ccbd:	frstor [esi+0x1c90916a]
  40ccc3:	or     eax,DWORD PTR [ebx]
  40ccc5:	jbe    0x40ccb3
  40ccc7:	mov    ecx,0x68bacc5f
  40cccc:	adc    eax,0x7f547e65
  40ccd1:	or     BYTE PTR [ebp+0x53de9d90],0xe6
  40ccd8:	outs   dx,BYTE PTR ds:[esi]
  40ccd9:	js     0x40cc71
  40ccdb:	jg     0x40ccae
  40ccdd:	sbb    al,0xe3
  40ccdf:	out    0x6b,eax
  40cce1:	dec    edx
  40cce2:	mov    ?,WORD PTR [edx]
  40cce4:	addr16 xchg ebp,eax
  40cce6:	or     BYTE PTR [ebp-0x6f],bh
  40cce9:	and    ebx,DWORD PTR [ecx+ecx*4+0x1a7c0704]
  40ccf0:	sbb    DWORD PTR [esi],ebx
  40ccf2:	ror    BYTE PTR [esi],0x28
  40ccf5:	inc    edi
  40ccf6:	adc    eax,0x91c2168f
  40ccfb:	retf   
  40ccfc:	xor    ebp,0x26
  40ccff:	jns    0x40ccf9
  40cd01:	rcl    DWORD PTR [ebp+eax*8+0x0],1
  40cd05:	xor    BYTE PTR [ecx-0x32ef4366],al
  40cd0b:	mov    BYTE PTR [edi],0xa3
  40cd0e:	push   edi
  40cd0f:	or     al,0xd3
  40cd11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd12:	pusha  
  40cd13:	mov    ah,BYTE PTR [edi]
  40cd15:	dec    eax
  40cd16:	or     BYTE PTR [eax+edx*1-0x396be1ae],bl
  40cd1d:	loopne 0x40cccd
  40cd1f:	push   ebp
  40cd20:	pop    edx
  40cd21:	cld    
  40cd22:	test   eax,0x99f5f494
  40cd27:	jmp    0xc4717d2b
  40cd2c:	dec    ebp
  40cd2d:	mov    al,0x45
  40cd2f:	out    dx,al
  40cd30:	dec    ebx
  40cd31:	mov    ebx,0xfcbaeb8c
  40cd36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd37:	mov    ah,0xa0
  40cd39:	ss dec edi
  40cd3b:	jmp    0xa415da31
  40cd40:	mov    cs,WORD PTR [ebx]
  40cd42:	stos   DWORD PTR es:[edi],eax
  40cd43:	dec    edi
  40cd44:	or     DWORD PTR ds:0x5aa4966e,ebx
  40cd4a:	cmp    DWORD PTR [ecx*8-0x5bd708e9],0x9a012b0f
  40cd55:	cmp    DWORD PTR [eax-0x7f],ebp
  40cd58:	dec    ebp
  40cd59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd5a:	mov    ecx,0x652418f9
  40cd5f:	cli    
  40cd60:	pop    es
  40cd61:	lahf   
  40cd62:	push   ss
  40cd63:	dec    eax
  40cd64:	sub    ebp,DWORD PTR [edx*4-0x19ebc096]
  40cd6b:	clc    
  40cd6c:	out    dx,eax
  40cd6d:	sub    ebx,DWORD PTR [ecx-0x57e70dc1]
  40cd73:	in     al,dx
  40cd74:	and    eax,0xccd39860
  40cd79:	aad    0xab
  40cd7b:	leave  
  40cd7c:	les    ebx,FWORD PTR [edi]
  40cd7e:	pop    es
  40cd7f:	sub    al,0x8
  40cd81:	pop    esi
  40cd82:	jmp    0x6320e947
  40cd87:	add    al,ch
  40cd89:	test   DWORD PTR [edi-0x26],ebx
  40cd8c:	push   ecx
  40cd8d:	dec    esi
  40cd8e:	inc    ebx
  40cd8f:	popa   
  40cd90:	mov    ecx,0x98713fe1
  40cd95:	xchg   ebx,eax
  40cd96:	fadd   QWORD PTR [eax]
  40cd98:	jle    0x40cdb4
  40cd9a:	outs   dx,BYTE PTR ds:[esi]
  40cd9b:	outs   dx,BYTE PTR ds:[esi]
  40cd9c:	push   edx
  40cd9d:	lahf   
  40cd9e:	ret    0xef0d
  40cda1:	jns    0x40cdc2
  40cda3:	rol    BYTE PTR [ebx],0xe0
  40cda6:	xor    bh,cl
  40cda8:	add    edx,ecx
  40cdaa:	inc    esp
  40cdab:	and    BYTE PTR [ecx+edi*2+0x3d],0xc6
  40cdb0:	xchg   ecx,eax
  40cdb1:	push   ebx
  40cdb2:	sbb    al,0xd5
  40cdb4:	xchg   DWORD PTR [ecx],ebp
  40cdb6:	mov    BYTE PTR [eax],cl
  40cdb8:	ror    dl,cl
  40cdba:	and    DWORD PTR [edi],ebp
  40cdbc:	fld    TBYTE PTR gs:[esp+ebp*1+0x127ae049]
  40cdc4:	pop    edx
  40cdc5:	add    eax,eax
  40cdc7:	aas    
  40cdc8:	push   esi
  40cdc9:	outs   dx,DWORD PTR ds:[esi]
  40cdca:	cdq    
  40cdcb:	inc    ebx
  40cdcc:	imul   edx,DWORD PTR [ecx+0x7d],0xffffffdd
  40cdd0:	add    al,0x60
  40cdd2:	jmp    0x6898:0x6b0310ae
  40cdd9:	dec    edi
  40cdda:	mov    bl,0x85
  40cddc:	and    eax,0x66c518ef
  40cde1:	addr16 push ds
  40cde3:	mov    ebp,0x9253a25d
  40cde8:	push   0x2f
  40cdea:	hlt    
  40cdeb:	jmp    0xa665:0x4e388c36
  40cdf2:	scas   al,BYTE PTR es:[edi]
  40cdf3:	fst    QWORD PTR [ebp+0xa4820c]
  40cdf9:	out    dx,eax
  40cdfa:	push   edx
  40cdfb:	shl    DWORD PTR [ecx+eax*4],cl
  40cdfe:	add    ebp,DWORD PTR [edx-0x5f95724d]
  40ce04:	lds    esi,FWORD PTR [ebx-0x30]
  40ce07:	push   ebp
  40ce08:	fldcw  WORD PTR [eax]
  40ce0a:	xor    ebx,ecx
  40ce0c:	cmp    eax,0x372a4935
  40ce11:	sbb    edx,DWORD PTR [ebp+0x29]
  40ce14:	add    DWORD PTR ds:0xbd8d7667,eax
  40ce1a:	ss mov bh,0xd
  40ce1d:	mov    edx,0xdff874d6
  40ce22:	std    
  40ce23:	test   al,0x84
  40ce25:	int    0xb8
  40ce27:	sub    bh,bh
  40ce29:	outs   dx,BYTE PTR ds:[esi]
  40ce2a:	inc    esp
  40ce2b:	out    dx,eax
  40ce2c:	xor    ebp,eax
  40ce2e:	aas    
  40ce2f:	stos   BYTE PTR es:[edi],al
  40ce30:	xchg   ebp,eax
  40ce31:	mov    ah,0x75
  40ce33:	mov    cl,dl
  40ce35:	icebp  
  40ce36:	inc    DWORD PTR [edi-0x13]
  40ce39:	inc    ecx
  40ce3a:	push   0xffffffa9
  40ce3c:	push   ecx
  40ce3d:	scas   eax,DWORD PTR es:[edi]
  40ce3e:	push   esp
  40ce3f:	add    al,0xcf
  40ce41:	aad    0xd8
  40ce43:	jbe    0x40cdfe
  40ce45:	mov    dl,0xab
  40ce47:	xor    BYTE PTR [ecx+0xb],bh
  40ce4a:	retf   
  40ce4b:	retf   
  40ce4c:	or     al,BYTE PTR [ebx-0x6]
  40ce4f:	push   edx
  40ce50:	push   ss
  40ce51:	jo     0x40ce6e
  40ce53:	push   cs
  40ce54:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce56:	aas    
  40ce57:	and    ecx,edx
  40ce59:	pusha  
  40ce5a:	pop    es
  40ce5b:	pop    edx
  40ce5c:	mov    esi,0xbe2e832
  40ce61:	or     edi,0xff3aadd2
  40ce67:	push   cs
  40ce68:	inc    ebp
  40ce69:	ret    
  40ce6a:	add    ecx,edi
  40ce6c:	sub    DWORD PTR [ecx],edi
  40ce6e:	addr16 mov edx,esi
  40ce71:	ins    BYTE PTR es:[edi],dx
  40ce72:	pop    edi
  40ce73:	dec    ebp
  40ce75:	push   es
  40ce76:	cli    
  40ce77:	mov    cl,0x56
  40ce79:	jns    0x40ce1b
  40ce7b:	ror    BYTE PTR [edi],cl
  40ce7d:	and    edx,DWORD PTR [edx+0x3b8b87e6]
  40ce83:	ins    BYTE PTR es:[edi],dx
  40ce84:	mov    eax,ds:0xf66b7e0a
  40ce89:	mov    ecx,0xe4139eed
  40ce8e:	mov    ecx,0x4b33afcc
  40ce93:	adc    DWORD PTR [ebp-0x19a2249b],ebx
  40ce99:	stc    
  40ce9a:	inc    edi
  40ce9b:	adc    eax,0xec28f64c
  40cea0:	jmp    0x40ceba
  40cea2:	arpl   WORD PTR [esi-0x1d],bx
  40cea5:	xor    ah,0xaa
  40cea8:	fsubr  DWORD PTR [esi]
  40ceaa:	adc    DWORD PTR ds:0xb542ff42,0x2d
  40ceb1:	or     BYTE PTR [edx],0xc7
  40ceb4:	and    bh,ch
  40ceb6:	xlat   BYTE PTR ds:[ebx]
  40ceb7:	sub    al,0xb7
  40ceb9:	daa    
  40ceba:	jecxz  0x40ce8a
  40cebc:	and    edi,DWORD PTR [ebp+0x77]
  40cebf:	mul    BYTE PTR [ecx-0xc1d1467]
  40cec5:	sbb    ebp,ebx
  40cec7:	push   ebx
  40cec8:	(bad)
  40cecb:	clc    
  40cecc:	sub    al,0x65
  40cece:	mov    ah,0xaa
  40ced0:	dec    esi
  40ced1:	mov    BYTE PTR [edx-0xe37694d],ch
  40ced7:	pop    DWORD PTR [eax]
  40ced9:	aam    0xe6
  40cedb:	popf   
  40cedc:	pop    eax
  40cedd:	fild   QWORD PTR [ebx]
  40cedf:	std    
  40cee0:	or     bh,BYTE PTR [esi]
  40cee2:	(bad)  
  40cee4:	or     ebp,DWORD PTR [edi]
  40cee6:	mov    ds:0x32788456,eax
  40ceeb:	pop    es
  40ceec:	sbb    DWORD PTR [esi],ebx
  40ceee:	sub    edx,DWORD PTR [esp+eax*4-0xf]
  40cef2:	mov    dl,0x6
  40cef4:	cmp    cl,BYTE PTR [ecx]
  40cef6:	fsubr  DWORD PTR [ebp-0x639a5c67]
  40cefc:	sub    al,0x60
  40cefe:	mov    DWORD PTR [ebp+0xe],ebp
  40cf01:	pop    ss
  40cf02:	bound  edi,QWORD PTR [esi+0x12b1ad27]
  40cf08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf09:	xor    esi,edx
  40cf0b:	imul   edx,DWORD PTR ds:0x2b8e288e,0xca4dc589
  40cf15:	fist   DWORD PTR [edi-0x45]
  40cf18:	adc    dl,dl
  40cf1a:	fstp   DWORD PTR [ecx]
  40cf1c:	jb     0x40cecc
  40cf1e:	cmp    DWORD PTR ds:0x2e04bd79,ecx
  40cf24:	fiadd  DWORD PTR [ebp+0x58e9b13c]
  40cf2a:	getsec 
  40cf2c:	ficomp WORD PTR gs:[ecx]
  40cf2f:	arpl   WORD PTR [esi+ecx*8],di
  40cf32:	inc    BYTE PTR [eax-0x31]
  40cf35:	and    al,0xbb
  40cf37:	pop    es
  40cf38:	xchg   DWORD PTR [edi-0x37],ebp
  40cf3b:	ret    0x52e5
  40cf3e:	(bad)  
  40cf3f:	sbb    edi,eax
  40cf41:	mov    edi,0x6de03255
  40cf46:	pusha  
  40cf47:	test   eax,0xab7b03ab
  40cf4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf4d:	inc    ecx
  40cf4e:	and    ebx,DWORD PTR [edi]
  40cf50:	mov    al,ds:0xa69fa966
  40cf55:	and    ah,ch
  40cf57:	mov    edx,0x65a35a36
  40cf5c:	ficomp WORD PTR [ecx+0x3d]
  40cf5f:	or     ebp,esp
  40cf61:	dec    ebp
  40cf62:	sub    DWORD PTR [edi],ecx
  40cf64:	sbb    al,0x3e
  40cf66:	pop    edx
  40cf67:	add    al,0x44
  40cf69:	retf   0xac42
  40cf6c:	mov    dl,0xf4
  40cf6e:	gs retf 
  40cf70:	adc    BYTE PTR [esi-0x23],ah
  40cf73:	sub    eax,0xeaa8857e
  40cf78:	push   ds
  40cf79:	ins    BYTE PTR es:[edi],dx
  40cf7a:	out    0x7d,eax
  40cf7c:	jae    0x40cf42
  40cf7e:	push   ebp
  40cf7f:	(bad)  
  40cf81:	shl    BYTE PTR [ebx],cl
  40cf83:	fst    QWORD PTR [edi]
  40cf85:	pop    esp
  40cf86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf87:	cmp    al,0x24
  40cf89:	xor    al,0x3e
  40cf8b:	fs pop ecx
  40cf8d:	test   eax,0x59cfa941
  40cf92:	test   eax,0x510b0aca
  40cf97:	push   edi
  40cf98:	clc    
  40cf99:	mov    dh,0x5c
  40cf9b:	leave  
  40cf9c:	call   0xdbb9fd3c
  40cfa1:	adc    al,0xc
  40cfa3:	jmp    0x40cfd8
  40cfa5:	xor    eax,0x8587a3a
  40cfaa:	xor    BYTE PTR [ebx],bl
  40cfac:	not    BYTE PTR [edi+0x360e0fbc]
  40cfb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfb3:	adc    eax,0x42dde8a2
  40cfb8:	aas    
  40cfb9:	imul   esp,DWORD PTR [edx+0x8cea044],0x5f62862d
  40cfc3:	fistp  QWORD PTR [edx]
  40cfc5:	dec    edi
  40cfc6:	std    
  40cfc7:	jmp    0x40d02b
  40cfc9:	pusha  
  40cfca:	push   esp
  40cfcb:	(bad)  
  40cfcd:	std    
  40cfce:	aas    
  40cfcf:	call   0x536f:0xb8709450
  40cfd6:	pop    eax
  40cfd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfd9:	inc    ecx
  40cfda:	mov    bl,0xcc
  40cfdc:	test   eax,0x72a59787
  40cfe1:	(bad)  
  40cfe2:	fadd   QWORD PTR [ebx+ecx*2-0x4b]
  40cfe6:	push   ds
  40cfe7:	mov    ebx,DWORD PTR [ebx-0x47]
  40cfea:	rcr    BYTE PTR [esi],cl
  40cfec:	push   es
  40cfed:	lods   al,BYTE PTR ds:[esi]
  40cfee:	in     al,dx
  40cfef:	retf   0xc615
  40cff2:	xchg   edi,eax
  40cff3:	fisttp QWORD PTR [ecx+0x5b]
  40cff6:	sbb    al,0x7
  40cff8:	adc    DWORD PTR [esi+0x3e],edx
  40cffb:	out    dx,eax
  40cffc:	out    0x1e,al
  40cffe:	les    esi,FWORD PTR [eax+0x87091f8]
  40d004:	ins    BYTE PTR es:[edi],dx
  40d005:	ror    DWORD PTR [esp+edx*4+0x32a26c91],1
  40d00c:	xor    cl,ah
  40d00e:	push   esp
  40d00f:	or     DWORD PTR [edx+ecx*4],0x14
  40d013:	mov    esi,DWORD PTR [eax-0x5b]
  40d016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d017:	lea    eax,[eax+0x46]
  40d01a:	int3   
  40d01b:	sahf   
  40d01c:	mov    edx,0xfa176642
  40d021:	and    al,0xba
  40d023:	cmp    eax,0xbcc3ff29
  40d028:	aad    0xca
  40d02a:	pop    eax
  40d02b:	icebp  
  40d02c:	cwde   
  40d02d:	jg     0x40d06d
  40d02f:	pop    ebp
  40d030:	repnz lods eax,DWORD PTR ds:[esi]
  40d032:	repnz (bad) [edi]
  40d035:	xor    DWORD PTR [edi+esi*8],eax
  40d038:	test   DWORD PTR [edi+0x643b5309],0xcd0fbfc5
  40d042:	test   DWORD PTR [esp+eiz*8-0x1b7425f5],0xdb12812d
  40d04d:	pop    eax
  40d04e:	lock mov eax,ds:0x2cd1c618
  40d054:	sbb    BYTE PTR [ebp*1-0x2d74d336],bh
  40d05b:	mov    ebx,0x63c7d440
  40d060:	out    0xc8,eax
  40d062:	mov    ebp,0x6529f441
  40d067:	das    
  40d068:	xor    BYTE PTR [ebx+0x8],0xaa
  40d06c:	push   eax
  40d06d:	mov    DWORD PTR [edi+ebp*8+0x1ec34b28],edx
  40d074:	inc    edi
  40d075:	out    dx,eax
  40d076:	push   ss
  40d077:	jnp    0x40d013
  40d079:	pop    ss
  40d07a:	ret    
  40d07b:	xchg   edi,eax
  40d07c:	and    al,0xe6
  40d07e:	(bad)  
  40d080:	arpl   WORD PTR [esi+0x67],bx
  40d083:	xchg   ecx,eax
  40d084:	hlt    
  40d085:	add    BYTE PTR [esi+0x5e],0x5d
  40d089:	call   0x4879:0xe51518aa
  40d090:	lock idiv BYTE PTR [edi]
  40d093:	ret    0x52ab
  40d096:	and    DWORD PTR [eax+esi*4],esp
  40d099:	mov    DWORD PTR [ebx-0x558eef25],ebx
  40d09f:	lods   al,BYTE PTR ds:[esi]
  40d0a0:	dec    ebp
  40d0a1:	test   bl,0x87
  40d0a4:	mov    esp,0xd82aada7
  40d0a9:	sub    eax,0xd6c6e777
  40d0ae:	mov    esp,0xe46f107a
  40d0b3:	xor    eax,0x536ac589
  40d0b8:	popf   
  40d0b9:	sub    eax,0xe0997776
  40d0be:	in     eax,dx
  40d0bf:	jecxz  0x40d09e
  40d0c1:	repnz dec ebx
  40d0c3:	out    0xe9,al
  40d0c5:	sub    BYTE PTR [edx-0x2b],bl
  40d0c8:	push   ebp
  40d0c9:	mov    esi,0x1f78c395
  40d0ce:	xchg   ebx,eax
  40d0cf:	rcr    DWORD PTR [eax-0x7d1e702b],1
  40d0d5:	fisub  WORD PTR gs:[ebp+0x332ba408]
  40d0dc:	mov    eax,ds:0x5303da2b
  40d0e1:	mov    bl,0x3e
  40d0e3:	or     eax,0xfdb3303
  40d0e8:	xchg   edx,eax
  40d0e9:	arpl   WORD PTR [edx-0x9],bx
  40d0ec:	aas    
  40d0ed:	ins    BYTE PTR es:[edi],dx
  40d0ee:	pop    ecx
  40d0ef:	mov    DWORD PTR [ecx+esi*4],ebx
  40d0f2:	pop    es
  40d0f3:	dec    ebx
  40d0f4:	push   edx
  40d0f5:	ret    0xb4f0
  40d0f8:	mov    ecx,0xebf4bed5
  40d0fd:	retf   0x6e34
  40d100:	out    dx,al
  40d101:	lock mov cl,0x32
  40d104:	push   es
  40d105:	jl     0x40d102
  40d107:	les    edi,FWORD PTR [esi-0x3c667b5a]
  40d10d:	dec    eax
  40d10e:	aaa    
  40d10f:	fcmovnu st,st(3)
  40d111:	sbb    ebp,DWORD PTR [edx+0x2307c856]
  40d117:	or     DWORD PTR [edx-0x2b6d9329],ebx
  40d11d:	push   esp
  40d11e:	xor    esp,eax
  40d120:	(bad)  
  40d121:	ficom  WORD PTR [eax]
  40d123:	sub    al,BYTE PTR [edx]
  40d125:	out    0x53,eax
  40d127:	(bad)  
  40d129:	jp     0x40d150
  40d12b:	pop    ecx
  40d12c:	push   ss
  40d12d:	call   0xf077:0x3ffb0da8
  40d134:	pusha  
  40d135:	mov    edi,0xf83671b3
  40d13a:	cmc    
  40d13b:	or     BYTE PTR [edi+eiz*1+0x46],dh
  40d13f:	pop    esp
  40d140:	xchg   DWORD PTR ds:[eax-0x1d],ecx
  40d144:	dec    ebp
  40d145:	ret    
  40d146:	arpl   WORD PTR [ecx],sp
  40d148:	inc    edi
  40d149:	leave  
  40d14a:	mov    BYTE PTR [eax+0x47],bh
  40d14d:	cmp    al,0x5c
  40d14f:	and    DWORD PTR [edx],eax
  40d151:	and    ebx,DWORD PTR ds:0xfc957c5f
  40d157:	xlat   BYTE PTR ds:[ebx]
  40d158:	add    cl,BYTE PTR [eax+0x77]
  40d15b:	mov    esi,0x3b89fb5e
  40d160:	mov    esi,ds
  40d162:	mov    cl,bh
  40d164:	rcl    DWORD PTR [edx+0x4435d2df],0x3e
  40d16b:	out    0x49,al
  40d16d:	jo     0x40d113
  40d16f:	stc    
  40d170:	icebp  
  40d171:	jmp    0x40d178
  40d173:	xchg   cl,al
  40d175:	outs   dx,BYTE PTR ds:[esi]
  40d176:	pusha  
  40d177:	mov    esp,0x7dfd3dc1
  40d17c:	xchg   esi,eax
  40d17d:	jl     0x40d136
  40d17f:	mov    DWORD PTR [eax],esi
  40d181:	daa    
  40d182:	pop    ebx
  40d183:	cmp    eax,0x6e46dce0
  40d188:	jno    0x40d10c
  40d18a:	clc    
  40d18b:	inc    eax
  40d18c:	ss ret 0x278b
  40d190:	imul   esp,DWORD PTR [ecx-0x37cba967],0x58f6304a
  40d19a:	fcom   st(7)
  40d19c:	cwde   
  40d19d:	(bad)  
  40d19e:	leave  
  40d19f:	movzx  ebx,BYTE PTR ds:0xee3a19bf
  40d1a6:	sub    BYTE PTR [eax],bh
  40d1a8:	(bad)  
  40d1a9:	mov    BYTE PTR [ebx+0xa],0x25
  40d1ad:	push   edx
  40d1ae:	or     BYTE PTR [ecx+0xc],al
  40d1b1:	sahf   
  40d1b2:	js     0x40d181
  40d1b4:	cmp    al,0xe8
  40d1b6:	inc    edi
  40d1b7:	mov    dl,cl
  40d1b9:	test   DWORD PTR [ebx],esp
  40d1bb:	add    cl,BYTE PTR [ebx-0x35ded4dd]
  40d1c1:	sbb    BYTE PTR [esi+ecx*4],cl
  40d1c4:	fs stos BYTE PTR es:[edi],al
  40d1c6:	push   ds
  40d1c7:	fadd   DWORD PTR [ebx-0x3e]
  40d1ca:	xor    al,0x38
  40d1cc:	mov    ch,0xb6
  40d1ce:	jmp    0xb4d25828
  40d1d3:	loope  0x40d171
  40d1d5:	jb     0x40d1c7
  40d1d7:	popf   
  40d1d8:	dec    ebp
  40d1d9:	jae    0x40d24b
  40d1db:	ins    DWORD PTR es:[edi],dx
  40d1dc:	mov    dh,0x3d
  40d1de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1df:	aam    0xdf
  40d1e1:	jns    0x40d204
  40d1e3:	mov    ds,WORD PTR [edx-0x6f219bc8]
  40d1e9:	mov    ah,0x7d
  40d1eb:	mov    esp,0x669224aa
  40d1f0:	(bad)  
  40d1f1:	in     eax,0x7
  40d1f3:	pusha  
  40d1f4:	out    0x4,eax
  40d1f6:	ins    BYTE PTR es:[edi],dx
  40d1f7:	jl     0x40d207
  40d1f9:	test   al,0xd4
  40d1fb:	push   0x36
  40d1fd:	rcr    ebx,1
  40d1ff:	ja     0x40d1bc
  40d201:	mov    BYTE PTR [ebp-0x4e],bl
  40d204:	cs (bad) 
  40d206:	shl    BYTE PTR [edi],1
  40d208:	sub    ecx,esp
  40d20a:	cmp    BYTE PTR [esi-0x14932202],dl
  40d210:	dec    ebx
  40d211:	pop    ds
  40d212:	xor    esi,0xa2e9ff8d
  40d218:	dec    edx
  40d219:	jns    0x40d271
  40d21b:	enter  0x4b14,0x87
  40d21f:	int3   
  40d220:	call   0x9736d402
  40d225:	(bad)  
  40d226:	fcomip st,st(0)
  40d228:	mov    al,ds:0xdcac2d87
  40d22d:	enter  0x141,0x3e
  40d231:	test   al,0x21
  40d233:	stc    
  40d234:	mov    dh,0x9
  40d236:	inc    esi
  40d237:	mov    ebx,0x57266d3d
  40d23c:	out    0x3f,eax
  40d23e:	mov    BYTE PTR ds:[eax],ch
  40d241:	(bad)  
  40d242:	stos   BYTE PTR es:[edi],al
  40d243:	mov    ch,0x33
  40d245:	in     al,dx
  40d246:	inc    ecx
  40d247:	xor    al,0x76
  40d24a:	jmp    0x40d1d1
  40d24c:	dec    ecx
  40d24d:	push   eax
  40d24e:	out    0x66,eax
  40d250:	scas   eax,DWORD PTR es:[edi]
  40d251:	cld    
  40d252:	cdq    
  40d253:	aaa    
  40d254:	fild   QWORD PTR [ebx]
  40d256:	aas    
  40d257:	xlat   BYTE PTR ds:[ebx]
  40d258:	scas   eax,DWORD PTR es:[edi]
  40d259:	dec    edi
  40d25a:	pop    ebx
  40d25b:	dec    esp
  40d25c:	stos   BYTE PTR es:[edi],al
  40d25d:	sbb    ebp,DWORD PTR [edi]
  40d25f:	sbb    DWORD PTR [esi],edi
  40d261:	fist   WORD PTR [esi-0x550dd0f2]
  40d267:	pop    es
  40d268:	(bad)
  40d26d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d26e:	scas   eax,DWORD PTR es:[edi]
  40d26f:	adc    ch,bh
  40d271:	arpl   WORD PTR [edi+0x6ced6e3b],dx
  40d277:	xchg   DWORD PTR [edx-0x53dab333],ebp
  40d27d:	pop    esi
  40d27e:	mov    ss,WORD PTR [esi+0xff93650]
  40d284:	push   esi
  40d285:	push   0x56984126
  40d28a:	fidivr DWORD PTR [edi+0x73e11976]
  40d290:	add    DWORD PTR [edx+0x3],edx
  40d293:	ins    DWORD PTR es:[edi],dx
  40d294:	int    0x3b
  40d296:	std    
  40d297:	fidivr DWORD PTR [ebx+0x43bee524]
  40d29d:	je     0x40d2ef
  40d29f:	xor    al,0x2
  40d2a1:	repnz inc ebx
  40d2a3:	inc    edi
  40d2a4:	mov    gs,esi
  40d2a6:	das    
  40d2a7:	mov    al,0xfb
  40d2a9:	sub    eax,0x6d62c744
  40d2ae:	mov    eax,0x49d8fbf1
  40d2b3:	mov    dl,0x0
  40d2b5:	fnstcw WORD PTR ds:0x4af48e3
  40d2bb:	jp     0x40d2c8
  40d2bd:	jbe    0x40d2ae
  40d2bf:	and    bl,BYTE PTR [edx+0x73]
  40d2c2:	or     BYTE PTR [edx+0x66],cl
  40d2c5:	es cmp al,0xfb
  40d2c8:	inc    esp
  40d2c9:	loopne 0x40d288
  40d2cb:	xchg   edx,eax
  40d2cc:	or     dl,al
  40d2ce:	ret    0x5782
  40d2d1:	jl     0x40d312
  40d2d3:	jne    0x40d30e
  40d2d5:	add    eax,0x10680521
  40d2da:	adc    esp,DWORD PTR [edx]
  40d2dc:	leave  
  40d2dd:	(bad)  
  40d2de:	in     al,dx
  40d2df:	cli    
  40d2e0:	inc    edx
  40d2e1:	mov    edx,0xa4686f22
  40d2e6:	shr    esi,1
  40d2e8:	xchg   dh,bl
  40d2ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2eb:	ret    0x435
  40d2ee:	add    al,0x5a
  40d2f0:	mov    edi,0x6c9cb3a9
  40d2f5:	sbb    eax,0xb78658ae
  40d2fa:	and    DWORD PTR [ecx-0x1547efd0],0x629c4dae
  40d304:	cmp    ebp,DWORD PTR [ecx+eax*2-0x48f2c7c8]
  40d30b:	fimul  WORD PTR [edx+edx*4+0x11f2d5ca]
  40d312:	push   edx
  40d313:	std    
  40d314:	push   esi
  40d315:	fldenv [ebx-0x15a0bda9]
  40d31b:	jno    0x40d2aa
  40d31d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d31e:	inc    eax
  40d31f:	mov    al,ds:0xefe2f9a3
  40d324:	lock dec ebx
  40d326:	mov    DWORD PTR [eax+ecx*2],0xf6d1f852
  40d32d:	sub    DWORD PTR [ecx],edx
  40d32f:	daa    
  40d330:	push   edx
  40d331:	scas   al,BYTE PTR es:[edi]
  40d332:	mov    ebx,DWORD PTR [eax+0x495b8484]
  40d338:	dec    edi
  40d339:	push   edx
  40d33a:	shl    al,0xc9
  40d33d:	addr16 sbb al,0xd
  40d340:	sbb    esi,DWORD PTR [esi]
  40d342:	shl    DWORD PTR [esi],cl
  40d344:	push   esi
  40d345:	or     DWORD PTR [eax],esp
  40d347:	or     DWORD PTR [ecx+0x4b536628],ecx
  40d34d:	add    al,0x8b
  40d34f:	push   ebp
  40d350:	adc    ecx,0x4163a25a
  40d356:	add    BYTE PTR [esp+esi*1],al
  40d359:	ret    
  40d35a:	fistp  QWORD PTR [edx-0x8]
  40d35d:	and    eax,0x8edbb9ef
  40d362:	push   esi
  40d363:	shr    DWORD PTR [ebx+eax*1],0x7f
  40d367:	push   0x62c892d0
  40d36c:	test   cx,cx
  40d36f:	shr    BYTE PTR [edi+edx*4+0x351f604],cl
  40d376:	sub    esp,DWORD PTR [esi+esi*4]
  40d379:	xchg   esp,eax
  40d37a:	out    dx,eax
  40d37b:	lahf   
  40d37c:	push   eax
  40d37d:	mov    ds:0xc85ecb4b,eax
  40d382:	test   al,0x11
  40d384:	(bad)  
  40d385:	outs   dx,DWORD PTR ds:[esi]
  40d386:	arpl   WORD PTR [ecx+0x30d994a7],ax
  40d38c:	sti    
  40d38d:	pop    esp
  40d38e:	jge    0x40d38c
  40d390:	pushf  
  40d391:	mov    ecx,0x8358d2e8
  40d396:	daa    
  40d397:	or     BYTE PTR [esi-0x28],cl
  40d39a:	xchg   esp,eax
  40d39b:	loop   0x40d419
  40d39d:	call   0x4efd:0x5cdd0b6d
  40d3a4:	and    BYTE PTR [edi],dh
  40d3a6:	inc    ecx
  40d3a7:	adc    al,0xe3
  40d3a9:	clc    
  40d3aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3ac:	mov    ebx,0x95462f94
  40d3b1:	and    BYTE PTR [esp+edi*1],al
  40d3b4:	pusha  
  40d3b5:	in     eax,dx
  40d3b6:	jecxz  0x40d341
  40d3b8:	mov    ebp,0xd0838efd
  40d3bd:	xchg   ebp,eax
  40d3be:	sbb    BYTE PTR [edx+0x61853f29],bl
  40d3c4:	xchg   ebx,eax
  40d3c5:	rol    esp,0xd0
  40d3c8:	not    dh
  40d3ca:	test   eax,0x9fcd119c
  40d3cf:	pop    edx
  40d3d0:	add    ebp,edx
  40d3d2:	push   es
  40d3d3:	mov    edi,0x66280e6b
  40d3d8:	jle    0x40d3b2
  40d3da:	sar    BYTE PTR [ebx+0x78a05855],0x75
  40d3e1:	inc    esp
  40d3e2:	mov    DWORD PTR [ebp-0x1c],0x46551ef3
  40d3e9:	cmp    esi,DWORD PTR [esi+ecx*8]
  40d3ec:	mov    edx,0xd614dfa
  40d3f1:	pop    ecx
  40d3f2:	ss jg  0x40d3ff
  40d3f5:	into   
  40d3f6:	cmp    ebp,ebp
  40d3f8:	repz jmp 0x7623:0xc5f54f6c
  40d400:	xchg   esp,eax
  40d401:	mov    bh,BYTE PTR [ebx+0x5d2ed160]
  40d407:	jb     0x40d3f1
  40d409:	retf   0xf8b1
  40d40c:	mov    dh,BYTE PTR [edi]
  40d40e:	pop    ebx
  40d40f:	outs   dx,DWORD PTR ds:[esi]
  40d410:	push   esp
  40d411:	call   0x7b89:0x9e9409ca
  40d418:	aaa    
  40d419:	test   DWORD PTR [eax],esi
  40d41b:	sub    DWORD PTR [esi],edi
  40d41d:	xor    ecx,DWORD PTR [edi-0x5]
  40d420:	inc    bh
  40d422:	xchg   ebp,eax
  40d423:	pop    ecx
  40d424:	pop    ebx
  40d425:	adc    al,0xad
  40d427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d428:	fisttp WORD PTR [ebx]
  40d42a:	xor    edx,ebp
  40d42c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d42d:	and    al,0x4d
  40d42f:	call   0x81903948
  40d434:	and    ecx,ebx
  40d436:	pop    ebx
  40d437:	xor    BYTE PTR [edx],0xae
  40d43a:	(bad)  
  40d43b:	pop    ecx
  40d43c:	fwait
  40d43d:	mov    edx,0xe5b69c53
  40d442:	je     0x40d42d
  40d444:	xlat   BYTE PTR ds:[ebx]
  40d445:	push   cs
  40d446:	out    dx,eax
  40d447:	icebp  
  40d448:	in     eax,0xc4
  40d44a:	mov    ebx,0xb33c9e97
  40d44f:	popf   
  40d450:	lods   eax,DWORD PTR ds:[esi]
  40d451:	outs   dx,BYTE PTR ds:[esi]
  40d452:	jb     0x40d436
  40d454:	xchg   ebx,eax
  40d455:	out    dx,eax
  40d456:	dec    ebx
  40d457:	fadd   QWORD PTR [ebp*8+0x7f1b784b]
  40d45e:	pop    ebx
  40d45f:	push   edx
  40d460:	adc    dh,BYTE PTR [edx]
  40d462:	add    eax,0xa95cb6e1
  40d467:	outs   dx,DWORD PTR ds:[esi]
  40d468:	bound  esp,QWORD PTR [edx]
  40d46a:	pop    ds
  40d46b:	cmp    BYTE PTR [edx],bl
  40d46d:	adc    DWORD PTR [edi-0x1307def5],0x93ad33c0
  40d477:	xchg   BYTE PTR [eax-0x5aead71a],dl
  40d47d:	or     DWORD PTR [ecx],ecx
  40d47f:	loopne 0x40d48b
  40d481:	imul   edi,DWORD PTR [edi-0x2c45b13a],0x71
  40d488:	(bad)  
  40d489:	(bad)  
  40d48a:	cwde   
  40d48b:	jmp    0xd71c:0xe9dc2d25
  40d492:	adc    DWORD PTR [ecx],edi
  40d494:	loope  0x40d438
  40d496:	mov    al,ds:0xa31f7261
  40d49b:	or     ecx,esp
  40d49d:	cmp    eax,0x2864370b
  40d4a2:	repz push ds
  40d4a4:	and    BYTE PTR [edx],0xcc
  40d4a7:	cmp    al,0x1
  40d4a9:	rol    DWORD PTR [ebp+0x35],0x9
  40d4ad:	xchg   esi,eax
  40d4ae:	(bad)  
  40d4af:	mov    dh,0x9b
  40d4b1:	push   es
  40d4b2:	push   0x69048296
  40d4b7:	retf   0x9ba5
  40d4ba:	and    esp,DWORD PTR [esi-0x74417259]
  40d4c0:	and    dl,cl
  40d4c2:	shl    esp,0xaa
  40d4c5:	jae    0x40d45f
  40d4c7:	test   al,0xab
  40d4c9:	jmp    0xe289:0x2643e172
  40d4d0:	pop    ss
  40d4d1:	push   ds
  40d4d2:	adc    al,dl
  40d4d4:	and    BYTE PTR [edi+0x2c68a08c],al
  40d4da:	push   0x48
  40d4dc:	sar    BYTE PTR [ebp+0x1f],0xe0
  40d4e0:	mov    al,0x42
  40d4e2:	in     eax,dx
  40d4e3:	and    DWORD PTR [eax],esi
  40d4e5:	leave  
  40d4e6:	cmp    al,0xfc
  40d4e8:	fisub  DWORD PTR ds:0x4224329
  40d4ee:	jge    0x40d560
  40d4f0:	adc    eax,0x6ba4a8a1
  40d4f5:	retf   
  40d4f6:	mov    ?,ecx
  40d4f8:	push   eax
  40d4f9:	dec    ecx
  40d4fa:	fxch   st(2)
  40d4fc:	call   0xd601ee3b
  40d501:	or     BYTE PTR [edx+0x9],dl
  40d504:	mov    bl,0x88
  40d506:	sbb    dl,BYTE PTR [eax+0x52]
  40d509:	add    eax,0x6e588b0d
  40d50e:	imul   edx,eax,0xffffff93
  40d511:	pusha  
  40d512:	shl    BYTE PTR [ebp-0x4efd110e],1
  40d518:	cdq    
  40d519:	cmp    al,0x77
  40d51b:	ror    cl,1
  40d51d:	push   ss
  40d51e:	test   eax,0xc16eafd2
  40d523:	es xchg esi,eax
  40d525:	or     edi,ecx
  40d527:	sbb    al,BYTE PTR [esi-0x77]
  40d52a:	pop    ebp
  40d52b:	sub    ecx,DWORD PTR [edi]
  40d52d:	fwait
  40d52e:	outs   dx,BYTE PTR ds:[esi]
  40d52f:	xchg   edx,eax
  40d530:	jmp    0x329:0x76be18da
  40d537:	call   0x41a8975
  40d53c:	jmp    0xa114:0x2b0d5bcb
  40d543:	nop
  40d544:	sbb    cl,ch
  40d546:	call   0x5e04:0x9044a47f
  40d54d:	ds cmp ebp,0x74
  40d551:	stc    
  40d552:	pusha  
  40d553:	mov    ds:0x24a95b84,eax
  40d558:	jns    0x40d5b8
  40d55a:	mov    BYTE PTR [esi],ch
  40d55c:	xchg   ebx,eax
  40d55d:	sbb    eax,DWORD PTR [eax]
  40d55f:	retf   0xa42a
  40d562:	sub    al,ch
  40d564:	xchg   BYTE PTR [edi],ah
  40d566:	xchg   esi,eax
  40d567:	pop    edx
  40d568:	loop   0x40d5aa
  40d56a:	stos   BYTE PTR es:[edi],al
  40d56b:	mov    eax,0xd4fe5c71
  40d570:	dec    esi
  40d571:	loop   0x40d50f
  40d573:	pop    ds
  40d574:	das    
  40d575:	imul   eax,edx,0xffffff84
  40d578:	icebp  
  40d579:	pop    ss
  40d57a:	in     eax,0x28
  40d57c:	sub    eax,0xe300de3a
  40d581:	out    dx,eax
  40d582:	and    eax,DWORD PTR ds:0x9eb44749
  40d588:	inc    ebp
  40d589:	aaa    
  40d58a:	leave  
  40d58b:	call   0x2f230151
  40d590:	out    0x16,eax
  40d592:	xchg   ebp,eax
  40d593:	push   cs
  40d594:	fs pop ds
  40d596:	mov    bh,0x70
  40d598:	lahf   
  40d599:	sub    DWORD PTR [ecx-0x2e],0xced09368
  40d5a0:	in     al,dx
  40d5a1:	mov    ds:0x3f9ab5e5,eax
  40d5a6:	retf   0x5f00
  40d5a9:	jns    0x40d60d
  40d5ab:	jecxz  0x40d56f
  40d5ad:	fld    QWORD PTR [ecx+0x59]
  40d5b0:	sub    esp,eax
  40d5b2:	push   0xdd80f3f3
  40d5b7:	mov    ds:0x4121ed95,eax
  40d5bc:	xor    DWORD PTR [edx+edi*2-0x7cee30f6],0x4acd870
  40d5c7:	pop    edi
  40d5c8:	cmp    dh,BYTE PTR [esi+0xd45cb4a]
  40d5ce:	xor    al,0x30
  40d5d0:	std    
  40d5d1:	xchg   ebp,eax
  40d5d2:	rcr    BYTE PTR ds:0xe3bb8cca,1
  40d5d8:	out    dx,al
  40d5d9:	xchg   ecx,eax
  40d5da:	add    BYTE PTR ds:0x9906,al
  40d5df:	in     al,0xdb
  40d5e1:	jecxz  0x40d613
  40d5e3:	clc    
  40d5e4:	mov    edx,0x9b0ea44
  40d5e9:	jg     0x40d59a
  40d5eb:	loop   0x40d5bd
  40d5ed:	js     0x40d60e
  40d5ef:	loop   0x40d61e
  40d5f1:	pop    edi
  40d5f2:	jmp    0x4c18:0xe67e76b1
  40d5f9:	int    0x3c
  40d5fb:	ret    0xbe8e
  40d5fe:	dec    edi
  40d5ff:	sbb    DWORD PTR [edx-0x32],eax
  40d602:	mov    ds:0x6a5a81a7,al
  40d607:	or     DWORD PTR [ebx+0x6397ae4a],esi
  40d60d:	sub    eax,0xca005ff
  40d612:	pusha  
  40d613:	add    esi,edx
  40d615:	shl    BYTE PTR [eax],cl
  40d617:	dec    esi
  40d618:	jmp    0x40d68c
  40d61a:	mov    edi,0xcbdbb00f
  40d61f:	jno    0x40d61b
  40d621:	data16 (bad) 
  40d623:	push   ebp
  40d624:	mov    edi,0x9f4965a6
  40d629:	out    dx,al
  40d62a:	push   esp
  40d62b:	loop   0x40d650
  40d62d:	jle    0x40d65a
  40d62f:	mov    dh,0x64
  40d631:	cmp    edi,DWORD PTR ds:0xb61488db
  40d637:	jno    0x40d62a
  40d639:	jle    0x40d6a4
  40d63b:	cmp    BYTE PTR [ebp-0x717a2d67],ch
  40d641:	nop
  40d642:	xor    al,0xde
  40d644:	nop
  40d645:	dec    edi
  40d646:	lods   eax,DWORD PTR ds:[esi]
  40d647:	fld    QWORD PTR [edi+0x41]
  40d64a:	das    
  40d64b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d64c:	in     eax,0xac
  40d64e:	mov    dl,0xee
  40d650:	add    cl,BYTE PTR [ebx]
  40d652:	mov    ds:0xb48ce8a2,eax
  40d657:	dec    edx
  40d658:	int3   
  40d659:	cmp    DWORD PTR [ecx+edi*8],0xd4395ee2
  40d660:	sub    al,0xda
  40d662:	retf   
  40d663:	adc    esp,0x62af6650
  40d669:	xor    ah,dl
  40d66b:	cmp    eax,0xf8c77b48
  40d670:	sti    
  40d671:	xchg   ecx,eax
  40d672:	and    dl,BYTE PTR [edx+esi*4]
  40d675:	add    eax,0x647cc30a
  40d67a:	xchg   bl,ch
  40d67c:	sti    
  40d67d:	mov    BYTE PTR [bp+0x41],bh
  40d681:	xor    ebp,ebp
  40d683:	(bad)  
  40d684:	mov    ebx,0xb9cc2f78
  40d689:	lods   eax,DWORD PTR ds:[esi]
  40d68a:	mov    edi,0xa879888c
  40d68f:	(bad)  
  40d690:	mov    ebx,0x696ca969
  40d695:	jne    0x40d6bc
  40d697:	and    dh,BYTE PTR [edi+eiz*4+0x6a]
  40d69b:	cwde   
  40d69c:	loope  0x40d6dd
  40d69e:	(bad)  
  40d69f:	jmp    0x40d635
  40d6a1:	dec    esi
  40d6a2:	in     al,0xe9
  40d6a4:	jns    0x40d645
  40d6a6:	push   esi
  40d6a7:	add    al,0x7
  40d6a9:	(bad)  
  40d6ab:	push   es
  40d6ac:	push   0xffffff94
  40d6ae:	push   edx
  40d6af:	or     al,BYTE PTR [edx-0x32]
  40d6b2:	cmc    
  40d6b3:	xor    al,0xfd
  40d6b5:	and    eax,0x6d1045c8
  40d6ba:	stos   DWORD PTR es:[edi],eax
  40d6bb:	adc    ch,ch
  40d6bd:	mov    ?,WORD PTR [ecx+eiz*2-0x25404b6c]
  40d6c4:	pushf  
  40d6c5:	adc    ch,BYTE PTR [ebx]
  40d6c7:	mov    bh,0x79
  40d6c9:	adc    al,0x79
  40d6cb:	das    
  40d6cc:	test   DWORD PTR [ebp+0x43],ebp
  40d6cf:	dec    esp
  40d6d0:	xchg   DWORD PTR [edi+edi*2-0xb],esp
  40d6d4:	das    
  40d6d5:	std    
  40d6d6:	jns    0x40d741
  40d6d8:	jg     0x40d6c4
  40d6da:	fwait
  40d6db:	and    eax,0x8a295199
  40d6e0:	mov    dh,0x7f
  40d6e2:	mov    cl,0xae
  40d6e4:	hlt    
  40d6e5:	shr    DWORD PTR [edi-0x20],1
  40d6e8:	fcom   QWORD PTR [ecx*1-0x5f437593]
  40d6ef:	push   es
  40d6f0:	adc    BYTE PTR [edx-0x398c31c],dh
  40d6f6:	jp     0x40d728
  40d6f8:	sub    DWORD PTR [eax+0x542bd083],ebx
  40d6fe:	pop    ecx
  40d6ff:	pushf  
  40d700:	xchg   esi,eax
  40d701:	dec    ebp
  40d702:	clc    
  40d703:	ss stos DWORD PTR es:[edi],eax
  40d705:	cld    
  40d706:	mov    al,0x1f
  40d708:	fdiv   DWORD PTR [ecx]
  40d70a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d70b:	xchg   edi,eax
  40d70c:	cwde   
  40d70d:	stc    
  40d70e:	xor    DWORD PTR [ebx-0x64978ebe],ecx
  40d714:	lods   eax,DWORD PTR ds:[esi]
  40d715:	icebp  
  40d716:	pop    edx
  40d717:	cwde   
  40d718:	outs   dx,DWORD PTR ds:[esi]
  40d719:	scas   al,BYTE PTR es:[edi]
  40d71a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d71b:	stos   DWORD PTR es:[edi],eax
  40d71c:	jmp    0xa3e74440
  40d721:	inc    esp
  40d722:	dec    ebx
  40d723:	rcr    BYTE PTR [edx-0x62],cl
  40d726:	dec    edx
  40d727:	sbb    ebx,DWORD PTR [esi-0x6c5a113b]
  40d72d:	sbb    eax,0xd6a786fc
  40d732:	xor    DWORD PTR [ebp+0x448ccffd],0x53aec213
  40d73c:	cmp    DWORD PTR [edx+0x65],ebp
  40d73f:	sub    eax,0x7bc5a24
  40d744:	dec    eax
  40d745:	dec    ecx
  40d746:	mov    BYTE PTR [edi-0x641fc4a6],dh
  40d74c:	rol    DWORD PTR [edi],1
  40d74e:	std    
  40d74f:	lds    ebx,FWORD PTR [ecx+0x7a]
  40d752:	jne    0x40d76c
  40d754:	out    0xf0,eax
  40d756:	repnz imul BYTE PTR [edi+ebp*2-0x4d8090b6]
  40d75e:	jl     0x40d762
  40d760:	jg     0x40d78e
  40d762:	mov    esp,DWORD PTR [edi+0x5cf597c5]
  40d768:	xor    dl,cl
  40d76a:	into   
  40d76b:	sub    eax,0xe853fa4c
  40d770:	and    eax,0xbf148322
  40d775:	add    dl,BYTE PTR [edi]
  40d777:	ja     0x40d713
  40d779:	frndint 
  40d77b:	popf   
  40d77c:	popa   
  40d77d:	out    0x46,eax
  40d77f:	add    eax,0x2e1befc0
  40d784:	xor    bl,BYTE PTR [edi]
  40d786:	inc    eax
  40d787:	inc    edx
  40d788:	arpl   WORD PTR [edx+ebx*4+0x64],sp
  40d78c:	mov    edi,DWORD PTR [eax-0x1eb95dd2]
  40d792:	int    0x16
  40d794:	popa   
  40d795:	fwait
  40d796:	mov    cl,bh
  40d798:	mov    ch,0xa7
  40d79a:	mov    al,0xb0
  40d79c:	sbb    edi,edx
  40d79e:	mov    DWORD PTR [edi+0x5e],ebx
  40d7a1:	loope  0x40d74a
  40d7a3:	push   edx
  40d7a4:	lahf   
  40d7a5:	into   
  40d7a6:	lahf   
  40d7a7:	push   edi
  40d7a8:	cmc    
  40d7a9:	int    0xe8
  40d7ab:	cmc    
  40d7ac:	sahf   
  40d7ad:	(bad)  
  40d7ae:	mov    ch,0x70
  40d7b0:	rol    BYTE PTR ds:0x7d983814,1
  40d7b6:	dec    BYTE PTR [ebx]
  40d7b8:	shl    DWORD PTR [esi-0x372a80ba],cl
  40d7be:	mov    dl,0x29
  40d7c0:	push   esp
  40d7c1:	sahf   
  40d7c2:	out    0xf8,al
  40d7c4:	lea    edx,[edx+0x1515663e]
  40d7ca:	dec    edx
  40d7cb:	lods   eax,DWORD PTR ds:[esi]
  40d7cc:	adc    BYTE PTR ss:[ecx-0x4c28315d],dl
  40d7d3:	call   0xf18b:0x99d18f5f
  40d7da:	jnp    0x40d7a5
  40d7dc:	mov    dh,0xd
  40d7de:	cmc    
  40d7df:	jae    0x40d7da
  40d7e1:	xchg   edx,eax
  40d7e2:	ds add edx,eax
  40d7e5:	std    
  40d7e6:	mov    ds,WORD PTR [ebp-0x181ed8c9]
  40d7ec:	aas    
  40d7ed:	test   al,0xaa
  40d7ef:	aam    0xef
  40d7f1:	lahf   
  40d7f2:	gs pushf 
  40d7f4:	add    BYTE PTR [ecx-0x1d21f650],ch
  40d7fa:	daa    
  40d7fb:	in     al,0xe2
  40d7fd:	aas    
  40d7fe:	push   eax
  40d7ff:	xchg   ebx,eax
  40d800:	xor    BYTE PTR [ebp+0x48b88495],bl
  40d806:	mov    ecx,DWORD PTR [edi-0x2affe49d]
  40d80c:	lods   al,BYTE PTR ds:[esi]
  40d80d:	cmp    BYTE PTR [ebx],bl
  40d80f:	mov    eax,DWORD PTR [edi]
  40d811:	(bad)
  40d815:	add    ah,cl
  40d817:	mov    ebp,0xe0102d66
  40d81c:	adc    ecx,DWORD PTR [esi+0x1add0983]
  40d822:	inc    eax
  40d823:	cli    
  40d824:	rcl    BYTE PTR [ebx],1
  40d826:	lahf   
  40d827:	push   ss
  40d828:	nop
  40d829:	callw  0xe38e
  40d82d:	psubq  mm1,QWORD PTR [edi+0x49]
  40d831:	dec    DWORD PTR [ebp+0x47]
  40d834:	sbb    DWORD PTR [eax+0xa01210a],edi
  40d83a:	dec    BYTE PTR [eax+0x64f92eea]
  40d840:	push   esi
  40d841:	pop    es
  40d842:	cmp    dl,dh
  40d844:	loop   0x40d83e
  40d846:	popf   
  40d847:	mov    ds:0x9313a902,eax
  40d84c:	sub    DWORD PTR [ecx+ebx*4-0x36334375],0x4a
  40d854:	lds    ebx,FWORD PTR [edx+edx*8]
  40d857:	cmp    eax,0x3e68a933
  40d85c:	dec    edi
  40d85d:	call   FWORD PTR [esi]
  40d85f:	lahf   
  40d860:	iret   
  40d861:	cmp    esp,DWORD PTR [edi]
  40d863:	sbb    bh,dl
  40d865:	xchg   esp,eax
  40d866:	inc    esp
  40d867:	test   BYTE PTR [edi-0x25],bl
  40d86a:	push   0x3a73aa47
  40d86f:	in     eax,0xf9
  40d871:	cmp    al,0xc0
  40d873:	mov    ds:0xd937906c,al
  40d878:	shr    DWORD PTR [ecx],cl
  40d87a:	jmp    0xdc36:0x600143d5
  40d881:	push   ebx
  40d882:	aaa    
  40d883:	mov    cs,WORD PTR [esi]
  40d885:	in     eax,dx
  40d886:	(bad)  
  40d888:	call   0x47616074
  40d88d:	add    DWORD PTR [esp+eiz*4-0x5f4eb78b],edx
  40d894:	push   cs
  40d895:	dec    esp
  40d896:	xlat   BYTE PTR ds:[ebx]
  40d897:	mov    al,0xa1
  40d899:	jo     0x40d8f8
  40d89b:	ins    DWORD PTR es:[edi],dx
  40d89c:	push   edx
  40d89d:	xchg   ebp,eax
  40d89e:	ror    BYTE PTR [ecx+ebx*1-0x6c8f8c8c],0xeb
  40d8a6:	add    ecx,DWORD PTR [eax+ebp*1+0x398286d8]
  40d8ad:	jmp    0xe7be:0x6b9168c0
  40d8b4:	inc    edi
  40d8b5:	mov    esp,0xd6b4418b
  40d8ba:	sbb    ch,BYTE PTR [ebx+eiz*1-0x3]
  40d8be:	pusha  
  40d8bf:	sahf   
  40d8c0:	popf   
  40d8c1:	lahf   
  40d8c2:	cwde   
  40d8c3:	push   0xb7b1c40e
  40d8c8:	xchg   BYTE PTR [ecx],ch
  40d8ca:	int3   
  40d8cb:	mov    dl,0x6a
  40d8cd:	fst    QWORD PTR [edi]
  40d8cf:	add    BYTE PTR [ecx-0x77],al
  40d8d2:	call   0x4ac3:0xbbf0d237
  40d8d9:	lds    esp,FWORD PTR [esi+0x7d85b5d1]
  40d8df:	mov    ah,0x6
  40d8e1:	adc    BYTE PTR [esi],al
  40d8e3:	and    DWORD PTR [esi*4+0x2f847733],ecx
  40d8ea:	and    dl,bl
  40d8ec:	xchg   DWORD PTR [edi],esp
  40d8ee:	jo     0x40d92a
  40d8f0:	fdiv   QWORD PTR [ecx+0x4870c113]
  40d8f6:	gs popa 
  40d8f8:	dec    BYTE PTR [eax]
  40d8fa:	adc    ebp,DWORD PTR [esi+eiz*2+0xd]
  40d8fe:	ins    DWORD PTR es:[edi],dx
  40d8ff:	xchg   esp,eax
  40d900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d901:	js     0x40d8ec
  40d903:	jle    0x40d88d
  40d905:	mov    al,0xc8
  40d907:	and    al,0x7e
  40d909:	mov    ecx,0xcee9a14e
  40d90e:	shl    DWORD PTR [edi+0x42],1
  40d911:	jge    0x40d93f
  40d913:	dec    ecx
  40d914:	rcr    DWORD PTR [edi+0x7b5d04b6],cl
  40d91a:	jno    0x40d976
  40d91c:	xor    DWORD PTR [ebx],esp
  40d91e:	inc    eax
  40d91f:	mov    WORD PTR [eax],gs
  40d921:	(bad)  
  40d922:	mov    eax,0x8980a9f7
  40d927:	cmp    dh,BYTE PTR [esi]
  40d929:	test   dh,cl
  40d92b:	xchg   edi,eax
  40d92c:	mov    bl,BYTE PTR [edi-0x36734a2a]
  40d932:	jae    0x40d90c
  40d934:	sbb    esp,0x68
  40d937:	mov    ch,0x7e
  40d939:	cmp    ch,BYTE PTR [esi+0x44e443bc]
  40d93f:	neg    BYTE PTR [edi+edx*4-0x3f8b6a8a]
  40d946:	cmp    BYTE PTR [ebx-0x25c440c9],dh
  40d94c:	inc    ebx
  40d94d:	jg     0x40d9a2
  40d94f:	push   es
  40d950:	sbb    DWORD PTR [ebp+0x278814a8],ebp
  40d956:	adc    ah,ch
  40d958:	pop    ebx
  40d959:	psraw  mm6,mm3
  40d95c:	jns    0x40d96c
  40d95e:	push   cs
  40d95f:	bound  esp,QWORD PTR [edi+0x36]
  40d962:	xor    eax,0x2fabf15c
  40d967:	pop    edi
  40d968:	mov    es,edi
  40d96a:	rol    BYTE PTR [eax-0x7],0xec
  40d96e:	push   ss
  40d96f:	push   ebp
  40d970:	enter  0xcc55,0x83
  40d974:	test   al,0x1b
  40d976:	jnp    0x40d99a
  40d978:	mov    dl,0x25
  40d97a:	dec    esi
  40d97b:	pop    ds
  40d97c:	sub    ch,al
  40d97e:	sahf   
  40d97f:	fcom   QWORD PTR [edx]
  40d981:	(bad)  
  40d982:	dec    BYTE PTR [edx+edx*1]
  40d985:	jle    0x40d935
  40d987:	aad    0x23
  40d989:	xchg   ebx,eax
  40d98a:	push   edx
  40d98b:	cwde   
  40d98c:	fdiv   st(6),st
  40d98e:	test   DWORD PTR [edi],edx
  40d990:	xchg   DWORD PTR [esi-0x348f1d5e],ecx
  40d996:	cmp    al,bl
  40d998:	mov    edi,0x3d9a8edd
  40d99d:	retf   
  40d99e:	ss cli 
  40d9a0:	test   eax,0xca24d961
  40d9a5:	fwait
  40d9a6:	ins    BYTE PTR es:[edi],dx
  40d9a7:	push   esi
  40d9a8:	push   edx
  40d9a9:	cwde   
  40d9aa:	pop    edx
  40d9ab:	jno    0x40d992
  40d9ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9ae:	ja     0x40d944
  40d9b0:	out    0xa7,al
  40d9b2:	enter  0x4847,0x27
  40d9b6:	loopne 0x40d9d1
  40d9b8:	adc    BYTE PTR [eax+0x6e40617d],ch
  40d9be:	rol    DWORD PTR [ebx+0x1d],cl
  40d9c1:	jp     0x40da3a
  40d9c3:	ins    DWORD PTR es:[edi],dx
  40d9c4:	pop    edx
  40d9c5:	not    DWORD PTR [edx+0x20]
  40d9c8:	sbb    DWORD PTR [ebx-0x3e3445c0],edx
  40d9ce:	inc    edx
  40d9cf:	pop    es
  40d9d0:	cs adc eax,0xec332afb
  40d9d6:	fldl2t 
  40d9d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9d9:	or     ecx,DWORD PTR [ebx+0xd2c5d48]
  40d9df:	cld    
  40d9e0:	jb     0x40d9e9
  40d9e2:	outs   dx,BYTE PTR ds:[esi]
  40d9e3:	jl     0x40da1c
  40d9e5:	retf   0xc447
  40d9e8:	dec    ebp
  40d9e9:	loopne 0x40da33
  40d9eb:	in     al,dx
  40d9ec:	mov    ebp,0xbe8db27d
  40d9f1:	add    BYTE PTR [esi+0x75],bl
  40d9f4:	and    eax,0xbc160730
  40d9f9:	push   ebx
  40d9fa:	sti    
  40d9fb:	dec    edi
  40d9fc:	cmp    dh,BYTE PTR [esi+0x40b93b37]
  40da02:	icebp  
  40da03:	inc    edi
  40da04:	or     eax,0xa3970011
  40da09:	mov    ebp,0x8450acdb
  40da0e:	pop    ebx
  40da0f:	rol    DWORD PTR ds:0x83172a17,0x2b
  40da16:	ins    DWORD PTR es:[edi],dx
  40da17:	les    edi,FWORD PTR [ebx-0x1169f2db]
  40da1d:	test   eax,0x55724412
  40da22:	sbb    dl,bh
  40da24:	fiadd  DWORD PTR [eax]
  40da26:	xchg   DWORD PTR [edi],esi
  40da28:	stos   DWORD PTR es:[edi],eax
  40da29:	arpl   cx,si
  40da2b:	pop    ebx
  40da2c:	stos   BYTE PTR es:[edi],al
  40da2d:	cmp    BYTE PTR [edi+0x27d73840],ch
  40da33:	gs fsubp st(4),st
  40da36:	inc    ebx
  40da37:	mov    ebx,?
  40da39:	xchg   ecx,eax
  40da3a:	rcl    BYTE PTR [edx],0xd8
  40da3d:	add    ch,BYTE PTR [ebx+0x48638130]
  40da43:	(bad)  
  40da44:	xor    al,0x41
  40da46:	push   ss
  40da47:	cmp    dl,dh
  40da49:	adc    ecx,eax
  40da4b:	fsub   QWORD PTR [esi+0x1029f228]
  40da51:	cs gs iret 
  40da54:	mov    esi,0x3d832938
  40da59:	je     0x40da85
  40da5b:	hlt    
  40da5c:	dec    edi
  40da5d:	iret   
  40da5e:	mov    edi,0x616bc1ae
  40da63:	in     al,dx
  40da64:	jle    0x40dad6
  40da66:	mov    eax,0xe4e33a75
  40da6b:	jp     0x40dab8
  40da6d:	or     esi,DWORD PTR [edx+0x39677457]
  40da73:	out    0x23,eax
  40da75:	mov    ds,esp
  40da77:	jo     0x40dac4
  40da79:	das    
  40da7a:	dec    eax
  40da7b:	xchg   esp,eax
  40da7c:	in     eax,dx
  40da7d:	and    BYTE PTR [edx],ah
  40da7f:	(bad)  
  40da80:	scas   eax,DWORD PTR es:[edi]
  40da81:	xor    eax,0xbaa97092
  40da86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da87:	push   ebx
  40da88:	repz sti 
  40da8a:	inc    esp
  40da8b:	cwde   
  40da8c:	push   0x55
  40da8e:	push   0xffffffd8
  40da90:	stc    
  40da91:	cdq    
  40da92:	inc    ebp
  40da93:	test   BYTE PTR [edi+0x5],dl
  40da96:	mov    esi,0xcd6ab1ba
  40da9b:	push   es
  40da9c:	mov    eax,0x6858c79c
  40daa1:	dec    edi
  40daa2:	jb     0x40dabd
  40daa4:	inc    ebp
  40daa5:	push   ecx
  40daa6:	test   BYTE PTR [ebx-0x7e7d3c64],0x5e
  40daad:	and    DWORD PTR [eax+0x73d58fa8],esi
  40dab3:	push   edi
  40dab4:	inc    edi
  40dab5:	mov    eax,ds:0xd10c01e2
  40daba:	jecxz  0x40dab3
  40dabc:	xor    bl,dl
  40dabe:	jne    0x40dafe
  40dac0:	or     DWORD PTR [esi+0x1d],0xb1887ec6
  40dac7:	adc    al,BYTE PTR [ecx-0xe5426d]
  40dacd:	sub    eax,esi
  40dacf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dad0:	int    0x9f
  40dad2:	push   es
  40dad3:	rcr    DWORD PTR [eax-0x19],cl
  40dad6:	(bad)  
  40dad7:	sar    DWORD PTR [esi+0x4ef9172b],1
  40dadd:	jns    0x40da98
  40dadf:	iret   
  40dae0:	xchg   edx,eax
  40dae1:	lods   al,BYTE PTR ds:[esi]
  40dae2:	cmp    BYTE PTR [eax+eax*1-0x134da050],dh
  40dae9:	jmp    0x2757:0x11a745f7
  40daf0:	js     0x40da92
  40daf2:	loop   0x40db00
  40daf4:	add    ebp,esi
  40daf6:	enter  0x64b9,0x6a
  40dafa:	mov    ah,cl
  40dafc:	dec    ebp
  40dafd:	adc    esi,DWORD PTR [eax-0x47eb13e0]
  40db03:	ret    0xd16a
  40db06:	mov    cl,0xd8
  40db08:	es xchg esp,eax
  40db0a:	or     DWORD PTR [eax+0xd781abd],0xffffffec
  40db11:	jecxz  0x40db6a
  40db13:	mov    esi,0x7fd432a
  40db18:	not    DWORD PTR [eax]
  40db1a:	loop   0x40dab3
  40db1c:	gs dec ebx
  40db1e:	push   edi
  40db1f:	mov    ebp,0x28f6c8ec
  40db24:	(bad)  
  40db25:	jle    0x40dafe
  40db27:	cld    
  40db28:	sti    
  40db29:	lock clc 
  40db2b:	inc    edi
  40db2c:	in     eax,dx
  40db2d:	mov    BYTE PTR [edx+0x38],cl
  40db30:	or     al,0x50
  40db32:	mov    esi,0xe9cd1749
  40db37:	mov    BYTE PTR [edx+0x56],dh
  40db3a:	xlat   BYTE PTR ds:[ebx]
  40db3b:	iret   
  40db3c:	mov    ds:0x35e651c9,eax
  40db41:	or     DWORD PTR [esi+0x29],esi
  40db44:	out    dx,al
  40db45:	aad    0x79
  40db47:	or     DWORD PTR [esi+0x49e2b9a],0xc031e790
  40db51:	fsub   QWORD PTR [ecx]
  40db53:	int3   
  40db54:	test   BYTE PTR gs:[ebx+0x12],ah
  40db58:	sub    al,0x51
  40db5a:	test   BYTE PTR [ebp+0x68],bl
  40db5d:	jnp    0x40daf7
  40db5f:	stos   DWORD PTR es:[di],eax
  40db61:	push   esi
  40db62:	pop    esp
  40db63:	test   eax,0xa3c69b75
  40db68:	xor    DWORD PTR [ebx],0x20
  40db6b:	imul   esi,DWORD PTR [edx],0x7ab4c91f
  40db71:	mov    ah,0x16
  40db73:	mov    ah,0x27
  40db75:	jb     0x40dbbd
  40db77:	les    edx,FWORD PTR [eax+0x5bde125d]
  40db7d:	sbb    al,0x4d
  40db7f:	jg     0x40db0a
  40db81:	(bad)  
  40db82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db83:	cmp    eax,0xcdf9cdcb
  40db88:	and    dh,BYTE PTR [eax+0x2b]
  40db8b:	retf   
  40db8c:	inc    BYTE PTR [edx+0x40]
  40db8f:	push   edi
  40db90:	hlt    
  40db91:	clc    
  40db92:	pop    edx
  40db93:	mov    ebx,0x2003e7ec
  40db98:	ror    BYTE PTR [ebp+0x454a3dc5],0xfd
  40db9f:	test   DWORD PTR [ebp+0x72],ebp
  40dba2:	push   ebp
  40dba3:	xchg   ecx,ebp
  40dba5:	pop    esi
  40dba6:	xchg   ecx,esi
  40dba8:	adc    BYTE PTR [eax-0x527fde90],al
  40dbae:	outs   dx,DWORD PTR ds:[esi]
  40dbaf:	cdq    
  40dbb0:	push   cs
  40dbb1:	pop    esp
  40dbb2:	pop    ebx
  40dbb3:	adc    BYTE PTR [edi-0x3d],0xf6
  40dbb7:	enter  0xd25c,0xfd
  40dbbb:	xor    eax,0xb8d19254
  40dbc0:	pusha  
  40dbc1:	and    DWORD PTR [edi-0x8],ecx
  40dbc4:	mov    esi,0x10ddf70
  40dbc9:	(bad)  
  40dbcb:	and    eax,0x251fe2ac
  40dbd0:	mov    ds:0x89359222,eax
  40dbd5:	mov    fs,WORD PTR [edi+0x35]
  40dbd8:	sti    
  40dbd9:	sub    al,0x7b
  40dbdb:	cmp    BYTE PTR [edi-0x651f150e],bl
  40dbe1:	mov    ds:0xfdd7eba3,eax
  40dbe6:	cli    
  40dbe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbe8:	in     al,0x56
  40dbea:	je     0x40dbb3
  40dbec:	pop    ebx
  40dbed:	mov    ebx,0xb563fb99
  40dbf2:	imul   esp,DWORD PTR [ecx-0x5f],0xffffffac
  40dbf6:	int    0x0
  40dbf8:	pop    esi
  40dbf9:	sbb    BYTE PTR [edi],0x41
  40dbfc:	ret    0xb7e7
  40dbff:	pop    esp
  40dc00:	cmp    eax,0x8a6c4d61
  40dc05:	add    al,0x2d
  40dc07:	cwde   
  40dc08:	es jns 0x40dbf6
  40dc0b:	(bad)  
  40dc0c:	sub    DWORD PTR [edi],edi
  40dc0e:	inc    esp
  40dc0f:	mov    dl,0x89
  40dc11:	sahf   
  40dc12:	cmp    BYTE PTR [edi],bl
  40dc14:	dec    edx
  40dc15:	adc    al,BYTE PTR [edi+edi*8-0x5a]
  40dc19:	pop    esi
  40dc1a:	dec    BYTE PTR [edx]
  40dc1c:	push   ebx
  40dc1d:	lods   al,BYTE PTR ds:[esi]
  40dc1e:	lea    ebx,[edi+0x3e]
  40dc21:	cmp    ebp,esp
  40dc23:	pop    edx
  40dc24:	nop
  40dc25:	lods   al,BYTE PTR ds:[esi]
  40dc26:	xor    DWORD PTR [ebp+esi*8+0x414c8166],edx
  40dc2d:	push   ss
  40dc2e:	add    al,0x9a
  40dc30:	call   0x16d0:0xb30ebd1f
  40dc37:	cmc    
  40dc38:	xor    bl,BYTE PTR [edx-0x74f4c702]
  40dc3e:	stc    
  40dc3f:	ss jp  0x40dbf9
  40dc42:	(bad)  
  40dc43:	gs mov bl,0xb1
  40dc46:	xchg   ebx,eax
  40dc47:	jb     0x40dbfd
  40dc49:	cmc    
  40dc4a:	inc    eax
  40dc4b:	out    dx,al
  40dc4c:	inc    edi
  40dc4d:	inc    edi
  40dc4e:	jns    0x40dc11
  40dc50:	adc    al,BYTE PTR [edx+0x4b]
  40dc53:	ss cdq 
  40dc55:	nop
  40dc56:	rcl    dl,0xbd
  40dc59:	pop    edi
  40dc5a:	rcr    DWORD PTR [ebp+0x12bf5506],1
  40dc60:	push   edi
  40dc61:	adc    BYTE PTR [ebx],dl
  40dc63:	xlat   BYTE PTR ds:[ebx]
  40dc64:	inc    edi
  40dc65:	in     al,dx
  40dc66:	push   DWORD PTR [ebx+0x4d]
  40dc69:	fidiv  WORD PTR [edi+0x785da9e3]
  40dc6f:	mov    ah,0xdb
  40dc71:	test   eax,0xd065fe3a
  40dc76:	jg     0x40dc94
  40dc78:	in     eax,0xa
  40dc7a:	es inc edx
  40dc7c:	inc    esi
  40dc7d:	fcom   QWORD PTR [si]
  40dc80:	mov    dh,0x9c
  40dc82:	call   0x7316c660
  40dc87:	cli    
  40dc88:	pop    esp
  40dc89:	enter  0xa5dc,0xb8
  40dc8d:	das    
  40dc8e:	jo     0x40dc4e
  40dc90:	inc    esp
  40dc91:	scas   al,BYTE PTR es:[edi]
  40dc92:	js     0x40dc3a
  40dc94:	inc    edi
  40dc95:	or     BYTE PTR [ebx],dl
  40dc97:	dec    eax
  40dc98:	mov    eax,0x3b445b5c
  40dc9d:	xor    al,0x84
  40dc9f:	xor    esi,DWORD PTR [ebx]
  40dca1:	mov    ebx,0x39ddd216
  40dca6:	pop    ds
  40dca7:	ja     0x40dd22
  40dca9:	xlat   BYTE PTR ds:[ebx]
  40dcaa:	cdq    
  40dcab:	or     eax,0xf7163919
  40dcb0:	cmp    BYTE PTR ds:0x433585c9,bl
  40dcb6:	xchg   edi,eax
  40dcb7:	mov    ebx,ecx
  40dcb9:	nop
  40dcba:	jecxz  0x40dca7
  40dcbc:	push   eax
  40dcbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcbe:	pop    edx
  40dcbf:	aas    
  40dcc0:	aam    0xec
  40dcc2:	out    0x5a,al
  40dcc4:	push   esp
  40dcc5:	or     al,0x6
  40dcc7:	(bad)  
  40dcc8:	cmp    DWORD PTR [esi-0x5d95784e],ebx
  40dcce:	dec    edi
  40dccf:	imul   ebx,esp,0xa9005811
  40dcd5:	nop
  40dcd6:	dec    edx
  40dcd7:	pushf  
  40dcd8:	rcl    DWORD PTR [ecx+0x5dfc2478],1
  40dcde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcdf:	xchg   ebx,eax
  40dce0:	loopne 0x40dc78
  40dce2:	fnstenv [edi+0x336f3339]
  40dce8:	stos   DWORD PTR es:[edi],eax
  40dce9:	daa    
  40dcea:	xlat   BYTE PTR ds:[ebx]
  40dceb:	mov    WORD PTR [ebp+0x71],ss
  40dcee:	mov    BYTE PTR [esi+0x4f],ch
  40dcf1:	cmp    DWORD PTR [ebx+edx*1+0x46],eax
  40dcf5:	cld    
  40dcf6:	dec    ebp
  40dcf7:	push   eax
  40dcf8:	add    BYTE PTR [esp+edx*1-0x4f],cl
  40dcfc:	ret    
  40dcfd:	(bad)  
  40dcfe:	es jmp 0xa231d036
  40dd04:	fucomp st(2)
  40dd06:	popf   
  40dd07:	mov    ah,0x30
  40dd09:	and    DWORD PTR [esi+eiz*8-0x18],edi
  40dd0d:	in     eax,0x3f
  40dd0f:	mov    ch,0xee
  40dd11:	scas   eax,DWORD PTR es:[edi]
  40dd12:	mov    edx,0x498e6d6a
  40dd17:	out    dx,eax
  40dd18:	jno    0x40dd01
  40dd1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd1b:	in     al,0xde
  40dd1d:	inc    edx
  40dd1e:	adc    edx,DWORD PTR [edx+0x17]
  40dd21:	jnp    0x40dcef
  40dd23:	daa    
  40dd24:	dec    edx
  40dd25:	sub    DWORD PTR [ecx],esi
  40dd27:	push   esi
  40dd28:	mov    ebx,0x4e12839a
  40dd2d:	pop    ebx
  40dd2e:	xor    eax,0x921ca5af
  40dd33:	cmc    
  40dd34:	cmp    dl,BYTE PTR [ecx]
  40dd36:	jne    0x40dd84
  40dd38:	sub    cl,BYTE PTR [ebx]
  40dd3a:	jb     0x40dd8f
  40dd3c:	test   DWORD PTR [ecx-0x7c],esi
  40dd3f:	or     DWORD PTR [edx-0x6798e032],esi
  40dd45:	and    DWORD PTR [ecx+0x24],esp
  40dd48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd49:	lods   eax,DWORD PTR ds:[esi]
  40dd4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd4b:	mov    bl,0x37
  40dd4d:	mov    eax,ds:0x710167c7
  40dd52:	adc    al,0x7
  40dd54:	jo     0x40ddbe
  40dd56:	daa    
  40dd57:	shl    BYTE PTR [eax-0x4de95b48],0xb3
  40dd5e:	(bad)  
  40dd5f:	fsubr  DWORD PTR [edi-0x52e2178b]
  40dd65:	mov    WORD PTR [edi-0x66],fs
  40dd68:	ins    DWORD PTR es:[edi],dx
  40dd69:	push   0x57314d5f
  40dd6e:	pop    ds
  40dd6f:	cmc    
  40dd70:	xchg   esp,eax
  40dd71:	ss jmp 0x7974:0x8dc7d62d
  40dd79:	mov    ecx,0xf994c0a2
  40dd7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd7f:	sub    cl,BYTE PTR [edi+ebp*4-0x22c3b8b8]
  40dd86:	in     eax,0xf7
  40dd88:	sbb    BYTE PTR ds:0xe2bb84da,dh
  40dd8e:	dec    DWORD PTR [edx-0x2680b0d7]
  40dd94:	movhps QWORD PTR [edx-0x1f1e78ab],xmm1
  40dd9b:	pop    edx
  40dd9c:	mov    eax,ds:0x385f3b86
  40dda1:	mov    al,0x6d
  40dda3:	mov    edx,DWORD PTR [ecx-0x26]
  40dda6:	push   eax
  40dda7:	aam    0x2b
  40dda9:	jmp    0xf6bc8cb7
  40ddae:	jb     0x40dde0
  40ddb0:	adc    eax,0xdca835c
  40ddb5:	shl    BYTE PTR [esi+0x3dad1c71],cl
  40ddbb:	sub    eax,0xccb2fcad
  40ddc0:	adc    dl,ch
  40ddc2:	sbb    BYTE PTR es:[eax+0x2957c38],dl
  40ddc9:	clc    
  40ddca:	call   0xc780:0x26d66187
  40ddd1:	pop    esi
  40ddd2:	mov    edx,0x5d4e7e02
  40ddd7:	or     esi,edx
  40ddd9:	pop    ebp
  40ddda:	shl    DWORD PTR [eax+0x742b11a1],cl
  40dde0:	les    ebp,FWORD PTR [ebx+0xc]
  40dde3:	xchg   esi,eax
  40dde4:	mov    eax,ds:0xf634deeb
  40dde9:	and    dh,bl
  40ddeb:	lahf   
  40ddec:	mov    ah,0xac
  40ddee:	dec    edx
  40ddef:	call   FWORD PTR [esi]
  40ddf1:	push   cs
  40ddf2:	loope  0x40de38
  40ddf4:	mov    bl,0xd1
  40ddf6:	sbb    eax,0x59ab9969
  40ddfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddfc:	mov    WORD PTR [esi-0x217f96ae],gs
  40de02:	mov    WORD PTR [esi],es
  40de04:	(bad)  
  40de06:	adc    esp,DWORD PTR [edi]
  40de08:	rol    DWORD PTR [edi],0x8c
  40de0b:	push   ebx
  40de0c:	fstp   TBYTE PTR [ebp-0x60576985]
  40de12:	loop   0x40de80
  40de14:	jb     0x40de19
  40de16:	inc    edx
  40de17:	loope  0x40de84
  40de19:	loop   0x40ddc2
  40de1b:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de1d:	inc    ebx
  40de1e:	ja     0x40dda3
  40de20:	xor    eax,0xdf581d7f
  40de25:	add    eax,DWORD PTR [ebx-0x21]
  40de28:	xor    al,0x56
  40de2a:	push   es
  40de2b:	push   cs
  40de2c:	dec    eax
  40de2d:	sar    BYTE PTR [ebx-0x80],cl
  40de30:	(bad)  
  40de31:	jp     0x40deae
  40de33:	fchs   
  40de35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de36:	lds    ecx,FWORD PTR [edi+0x4819de4f]
  40de3c:	lock adc ebp,DWORD PTR [ebp-0x7]
  40de40:	lods   al,BYTE PTR es:[esi]
  40de42:	ins    BYTE PTR es:[edi],dx
  40de43:	lds    ecx,FWORD PTR [eax]
  40de45:	xor    ebp,edx
  40de47:	and    BYTE PTR [edx+edx*4],bl
  40de4a:	jb     0x40de6b
  40de4c:	dec    ebx
  40de4d:	inc    esp
  40de4e:	es repnz sbb ax,0xd450
  40de54:	fld    DWORD PTR [edx+ecx*4+0x54]
  40de58:	inc    eax
  40de59:	or     esi,edi
  40de5b:	js     0x40ddf8
  40de5d:	int    0x83
  40de5f:	xchg   BYTE PTR [edi-0x7d],bl
  40de62:	mov    es,WORD PTR [ecx+0x24]
  40de65:	jns    0x40de49
  40de67:	mov    esp,0x2ad86d45
  40de6c:	nop
  40de6d:	loop   0x40de2a
  40de6f:	aaa    
  40de70:	pop    ds
  40de71:	inc    ebp
  40de72:	sbb    ah,BYTE PTR [ebx-0xec8a2f3]
  40de78:	pop    ebx
  40de79:	(bad)  
  40de7a:	frstor [edi]
  40de7c:	pop    edi
  40de7d:	jmp    DWORD PTR [edi-0x25]
  40de80:	(bad)  
  40de81:	stos   DWORD PTR es:[edi],eax
  40de82:	jb     0x40de6d
  40de84:	mov    cl,0xfd
  40de86:	mov    WORD PTR [eax],fs
  40de88:	mov    dl,0xd7
  40de8a:	xor    dl,al
  40de8c:	cmp    DWORD PTR [ecx],esp
  40de8e:	inc    edi
  40de8f:	xchg   ecx,eax
  40de90:	fdivr  DWORD PTR [eax]
  40de92:	xor    DWORD PTR ds:0xb3d917ac,eax
  40de98:	pushf  
  40de99:	fcomp  DWORD PTR [eax+eiz*2-0x55]
  40de9d:	add    DWORD PTR [ebx+edi*1],ebp
  40dea0:	sar    DWORD PTR [esi],1
  40dea2:	cmp    BYTE PTR [esi+ecx*4-0x78e0f847],al
  40dea9:	enter  0x911e,0x21
  40dead:	int3   
  40deae:	or     al,0x79
  40deb0:	push   ecx
  40deb1:	push   0xffffffa7
  40deb3:	retf   0x210d
  40deb6:	scas   al,BYTE PTR es:[edi]
  40deb7:	out    0x96,al
  40deb9:	lds    eax,FWORD PTR [ecx-0x753863db]
  40debf:	icebp  
  40dec0:	hlt    
  40dec1:	pop    eax
  40dec2:	jmp    0x6508cd37
  40dec7:	pusha  
  40dec8:	cmp    bl,dh
  40deca:	push   cs
  40decb:	pop    edi
  40decc:	pop    ds
  40decd:	mov    edi,0x29806b2f
  40ded2:	int3   
  40ded3:	repz dec edi
  40ded5:	add    eax,DWORD PTR [ecx+eiz*4+0x29]
  40ded9:	or     dl,ch
  40dedb:	pop    ss
  40dedc:	jecxz  0x40deaa
  40dede:	adc    eax,0x81e8ef97
  40dee3:	call   FWORD PTR [eax+0x7f]
  40dee6:	cld    
  40dee7:	outs   dx,BYTE PTR ds:[esi]
  40dee8:	icebp  
  40dee9:	dec    eax
  40deea:	adc    BYTE PTR [edi],bl
  40deec:	ja     0x40df13
  40deee:	clc    
  40deef:	das    
  40def0:	push   0x27c6cb84
  40def5:	push   es
  40def6:	inc    eax
  40def7:	aaa    
  40def8:	add    cl,ch
  40defa:	inc    eax
  40defb:	sahf   
  40defc:	jg     0x40df42
  40defe:	ss lock pop esp
  40df01:	jno    0x40ded9
  40df03:	sub    BYTE PTR [edi+0x19],bh
  40df06:	or     DWORD PTR [esi-0x9],ebp
  40df09:	push   cs
  40df0a:	add    ebp,0x70
  40df0d:	gs aaa 
  40df0f:	aam    0xea
  40df11:	sub    eax,0x73b58892
  40df16:	pop    esi
  40df17:	adc    edx,ecx
  40df19:	inc    eax
  40df1a:	dec    esp
  40df1b:	jmp    0x89a74124
  40df20:	shl    DWORD PTR ds:0x955d3240,0xfb
  40df27:	jno    0x40df58
  40df29:	call   0x873fc860
  40df2e:	xchg   BYTE PTR [ebp+esi*2-0x13442bc4],ch
  40df35:	or     bl,BYTE PTR [edi]
  40df37:	repnz popa 
  40df39:	xchg   edx,eax
  40df3a:	je     0x40df77
  40df3c:	mov    DWORD PTR [eax],esi
  40df3e:	sbb    esp,ebp
  40df40:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df42:	dec    ebp
  40df43:	mov    bh,cl
  40df45:	push   0xd874ce6f
  40df4a:	cmp    esp,DWORD PTR [esi-0x1f]
  40df4d:	outs   dx,BYTE PTR ds:[esi]
  40df4e:	or     dh,BYTE PTR [ebx+edi*1-0x8514e8b]
  40df55:	xchg   edi,eax
  40df56:	ins    DWORD PTR es:[edi],dx
  40df57:	jmp    0xec51:0xace16e4
  40df5e:	and    edi,DWORD PTR [esi]
  40df60:	fdivr  QWORD PTR [esi+0x622f46f3]
  40df66:	in     eax,0x86
  40df68:	test   DWORD PTR [esi+ebp*1+0x3e],ebp
  40df6c:	add    DWORD PTR [ebx],0x3920d4ec
  40df72:	dec    ecx
  40df73:	add    BYTE PTR [ebx-0x77f14395],ah
  40df79:	ss fcmove st,st(3)
  40df7c:	mov    esi,0x9e697ec1
  40df81:	loope  0x40dfbb
  40df83:	sti    
  40df84:	sbb    al,0xaa
  40df86:	jns    0x40df9e
  40df88:	add    DWORD PTR [edx],esp
  40df8a:	ins    DWORD PTR es:[edi],dx
  40df8b:	and    bh,al
  40df8d:	loop   0x40df2e
  40df8f:	test   BYTE PTR [edx+0x7b8088ea],0xcd
  40df96:	jle    0x40e015
  40df98:	cmp    ecx,eax
  40df9a:	inc    esp
  40df9b:	das    
  40df9c:	mov    cl,BYTE PTR [edx-0x468d8bc2]
  40dfa2:	mov    BYTE PTR [edx-0x5a],dh
  40dfa5:	aaa    
  40dfa6:	test   esi,edi
  40dfa8:	test   BYTE PTR [ebp+0x18],dl
  40dfab:	xlat   BYTE PTR ds:[ebx]
  40dfac:	or     eax,0x9032b8eb
  40dfb1:	daa    
  40dfb2:	cwde   
  40dfb3:	sar    bl,cl
  40dfb5:	or     ebp,DWORD PTR [edx+esi*1+0x691423c3]
  40dfbc:	mov    dh,0xb6
  40dfbe:	sahf   
  40dfbf:	jg     0x40df8a
  40dfc1:	js     0x40e03a
  40dfc3:	fmul   DWORD PTR [ebp-0x75]
  40dfc6:	stc    
  40dfc7:	mov    ds:0x807e533e,eax
  40dfcc:	pop    es
  40dfcd:	pop    ss
  40dfce:	repnz cmp cl,BYTE PTR [eax+eax*4+0x43fbec02]
  40dfd6:	scas   al,BYTE PTR es:[edi]
  40dfd7:	ror    BYTE PTR [eax+0x4b],1
  40dfda:	cmp    edi,esi
  40dfdc:	das    
  40dfdd:	ds dec eax
  40dfdf:	mov    esp,0x507a2687
  40dfe4:	sub    ebx,esi
  40dfe6:	xchg   ebx,eax
  40dfe7:	sti    
  40dfe8:	xchg   ebp,eax
  40dfe9:	cmp    DWORD PTR [ebx+0x1c8bd7da],0x8478329f
  40dff3:	xchg   edx,eax
  40dff4:	adc    al,0x9f
  40dff7:	pop    es
  40dff8:	or     esi,DWORD PTR [edi]
  40dffa:	jae    0x40e030
  40dffc:	cld    
  40dffd:	rol    DWORD PTR [edi],1
  40dfff:	daa    
  40e000:	or     eax,0xc70a3f43
  40e005:	test   eax,0x67d8ced9
  40e00a:	iret   
  40e00b:	test   BYTE PTR [ebx],bl
  40e00d:	call   0x65d3:0xf64ecba2
  40e014:	out    dx,eax
  40e015:	(bad)  
  40e016:	mov    esi,0xbc7fb664
  40e01b:	imul   esp,DWORD PTR [ecx-0x1e02f045],0xc6a487fd
  40e025:	(bad)  
  40e027:	int    0xc6
  40e029:	enter  0xb8b1,0xcd
  40e02d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e02f:	add    al,0xdf
  40e031:	pop    esi
  40e032:	adc    edi,DWORD PTR [ecx]
  40e034:	sub    eax,0x83d1d36e
  40e039:	int    0xda
  40e03b:	cmc    
  40e03c:	jo     0x40dfea
  40e03e:	push   es
  40e03f:	add    al,0x17
  40e041:	push   es
  40e042:	pop    ds
  40e043:	or     edi,ebx
  40e045:	retf   
  40e046:	xchg   BYTE PTR [edi-0x73648a26],bl
  40e04c:	sbb    al,0x8
  40e04e:	in     eax,dx
  40e04f:	jbe    0x40dfd8
  40e051:	icebp  
  40e052:	ja     0x40e07a
  40e054:	pop    ecx
  40e055:	add    eax,0x1c25113b
  40e05a:	aas    
  40e05b:	xchg   edi,eax
  40e05c:	out    0xde,al
  40e05e:	pop    eax
  40e05f:	cmp    ebx,DWORD PTR [edi-0x6ec1a8c]
  40e065:	or     DWORD PTR [ebx-0x41],ebx
  40e068:	adc    BYTE PTR [esp+edx*2-0x5a],cl
  40e06c:	pushf  
  40e06d:	cli    
  40e06e:	inc    edx
  40e06f:	shr    eax,1
  40e071:	leave  
  40e072:	lock test bh,bh
  40e075:	jns    0x40e05c
  40e077:	std    
  40e078:	or     eax,0xd21985fc
  40e07d:	sub    al,0xa6
  40e07f:	es pusha 
  40e081:	jbe    0x40e0fe
  40e083:	stc    
  40e084:	bound  esi,QWORD PTR ds:0x37438409
  40e08a:	outs   dx,DWORD PTR ds:[esi]
  40e08b:	pushf  
  40e08c:	ins    DWORD PTR es:[edi],dx
  40e08d:	sub    ah,BYTE PTR [eax]
  40e08f:	retf   
  40e090:	clc    
  40e091:	jno    0x40e04f
  40e093:	pop    es
  40e094:	sbb    eax,0xc7415f7a
  40e099:	enter  0x483c,0x6e
  40e09d:	dec    ebx
  40e09e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e09f:	shl    DWORD PTR [esi-0xb],0x97
  40e0a3:	pop    esi
  40e0a4:	xor    al,0xc8
  40e0a6:	mov    ah,0xbf
  40e0a8:	and    DWORD PTR [ebp-0x6e7b6dcb],edi
  40e0ae:	jge    0x40e0f0
  40e0b0:	ja     0x40e067
  40e0b2:	int3   
  40e0b3:	int3   
  40e0b4:	cmp    al,0x25
  40e0b6:	mov    dh,0x9a
  40e0b8:	scas   al,BYTE PTR es:[edi]
  40e0b9:	and    eax,0x2e44dc88
  40e0be:	sbb    esp,DWORD PTR [eax]
  40e0c0:	scas   eax,DWORD PTR es:[edi]
  40e0c1:	sbb    eax,0xaa88119f
  40e0c6:	adc    esp,edi
  40e0c8:	outs   dx,BYTE PTR ds:[esi]
  40e0c9:	jae    0x40e146
  40e0cb:	mov    edx,0xf3f76860
  40e0d0:	aas    
  40e0d1:	fsubp  st(6),st
  40e0d3:	dec    edi
  40e0d4:	dec    ebp
  40e0d5:	mov    ebx,0x3a294ef
  40e0da:	pop    ebx
  40e0db:	pop    es
  40e0dc:	inc    edx
  40e0dd:	mov    dl,0x9d
  40e0df:	push   edi
  40e0e0:	push   0xfffffffa
  40e0e2:	sub    bl,0x61
  40e0e5:	dec    edi
  40e0e6:	not    dl
  40e0e8:	sub    al,0xa9
  40e0ea:	js     0x40e116
  40e0ec:	push   edx
  40e0ed:	jnp    0x40e152
  40e0ef:	jecxz  0x40e08c
  40e0f1:	(bad)  
  40e0f3:	xor    ah,al
  40e0f5:	mov    ebx,0x474731cb
  40e0fa:	sub    ah,dh
  40e0fc:	push   edi
  40e0fd:	mov    cl,0xf5
  40e0ff:	ret    0xe864
  40e102:	mov    ebx,0xb07c5f56
  40e107:	xor    ah,BYTE PTR [eax+0x46]
  40e10a:	xor    DWORD PTR [edx+edx*1],esp
  40e10d:	cmp    bh,BYTE PTR [esp+edx*8]
  40e110:	pop    edx
  40e111:	mov    ah,0x1
  40e113:	and    ebp,DWORD PTR [eax]
  40e115:	popf   
  40e116:	inc    edx
  40e117:	jb     0x40e17a
  40e119:	test   BYTE PTR [eax-0x46],0xea
  40e11d:	add    edx,DWORD PTR [ebx]
  40e11f:	icebp  
  40e120:	mov    al,0xca
  40e122:	call   0xbbec646b
  40e127:	and    DWORD PTR [esi],edi
  40e129:	in     eax,dx
  40e12a:	pop    ds
  40e12b:	sbb    al,0x51
  40e12d:	and    eax,0x48830a6a
  40e132:	popf   
  40e133:	pop    edi
  40e134:	xchg   edx,eax
  40e135:	cwde   
  40e136:	mov    al,0xf9
  40e138:	mov    cl,0x41
  40e13a:	and    edi,DWORD PTR [ecx+ecx*8-0xa]
  40e13e:	sbb    dl,dh
  40e140:	add    BYTE PTR gs:[edi],cl
  40e143:	adc    eax,0x3bf4b732
  40e148:	push   eax
  40e149:	mov    eax,0xb5eed3d0
  40e14e:	pop    eax
  40e14f:	jnp    0x40e0fd
  40e151:	cmp    BYTE PTR ds:0xb864df0,bl
  40e157:	int3   
  40e158:	imul   eax,DWORD PTR [ecx],0x91b3fdcf
  40e15e:	hlt    
  40e15f:	inc    eax
  40e160:	jo     0x40e0ec
  40e162:	jmp    0x40e1c7
  40e164:	xchg   esp,eax
  40e165:	mov    cl,0x3f
  40e167:	push   cs
  40e168:	mov    BYTE PTR [ebx-0x7befc06f],0x38
  40e16f:	repz cwde 
  40e171:	ret    0x1fe2
  40e174:	leave  
  40e175:	push   ecx
  40e176:	pushf  
  40e177:	stc    
  40e178:	stos   DWORD PTR es:[edi],eax
  40e179:	jp     0x40e189
  40e17b:	retf   
  40e17c:	mov    WORD PTR [ecx+0x7c],ds
  40e17f:	xlat   BYTE PTR ds:[ebx]
  40e180:	dec    ebp
  40e181:	arpl   WORD PTR [edi+0x472e4a40],bp
  40e187:	into   
  40e188:	sbb    esp,DWORD PTR [eax]
  40e18a:	inc    esi
  40e18b:	cld    
  40e18c:	cmp    DWORD PTR [esi],eax
  40e18e:	jnp    0x40e1b1
  40e190:	mov    ebx,DWORD PTR [edx]
  40e192:	sbb    esi,ecx
  40e194:	adc    eax,ebx
  40e196:	dec    eax
  40e197:	call   0xa93d5c91
  40e19c:	int    0x9b
  40e19e:	sub    eax,0x2b17553d
  40e1a3:	dec    ebp
  40e1a4:	mov    edx,0xe193955
  40e1a9:	int3   
  40e1aa:	mov    bh,0x1a
  40e1ac:	jns    0x40e1a2
  40e1ae:	sub    ebx,0x6138dacb
  40e1b4:	mov    al,BYTE PTR cs:[ebx]
  40e1b7:	outs   dx,BYTE PTR ds:[esi]
  40e1b8:	inc    esi
  40e1b9:	jb     0x40e1b2
  40e1bb:	test   BYTE PTR [edi+edi*2+0x7d988f3d],bh
  40e1c2:	test   DWORD PTR [ebx-0x77],ebx
  40e1c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1c6:	iret   
  40e1c7:	lods   al,BYTE PTR ds:[esi]
  40e1c8:	aas    
  40e1c9:	sbb    edx,DWORD PTR [ecx+0x3b]
  40e1cc:	add    BYTE PTR [eax],bh
  40e1ce:	(bad)  
  40e1cf:	cmp    DWORD PTR [eax+ebx*8+0x25],ebx
  40e1d3:	xor    al,0xee
  40e1d5:	push   ebp
  40e1d6:	sbb    BYTE PTR [ebx],ch
  40e1d8:	into   
  40e1d9:	mov    eax,0xfc586bf1
  40e1de:	adc    dh,dl
  40e1e0:	push   esi
  40e1e1:	dec    edx
  40e1e2:	int3   
  40e1e3:	or     eax,DWORD PTR [edx+ebx*4-0x61]
  40e1e7:	enter  0x204c,0x41
  40e1eb:	dec    ebx
  40e1ec:	loopne 0x40e1a5
  40e1ee:	cwde   
  40e1ef:	xchg   ecx,eax
  40e1f0:	mov    esi,0x24666df9
  40e1f5:	loope  0x40e23e
  40e1f7:	add    DWORD PTR [edi+0x10],ebp
  40e1fa:	mov    bh,0xe3
  40e1fc:	inc    edi
  40e1fd:	pusha  
  40e1fe:	and    al,BYTE PTR [ecx+ebx*2-0x60]
  40e202:	jno    0x40e1eb
  40e204:	test   eax,0x1269fc68
  40e209:	sbb    BYTE PTR [edx+ebp*8+0x2f37e953],0xc3
  40e211:	jo     0x40e218
  40e213:	adc    ah,BYTE PTR [eax]
  40e215:	(bad)  
  40e216:	jne    0x40e1a1
  40e218:	push   edx
  40e219:	jp     0x40e1d8
  40e21b:	fdivr  st(3),st
  40e21d:	idiv   BYTE PTR [ebx+ebx*4]
  40e220:	cmp    ebx,DWORD PTR [edx]
  40e222:	into   
  40e223:	mov    cl,0xee
  40e225:	xchg   DWORD PTR [ebx+0x30403d80],eax
  40e22b:	jae    0x40e26e
  40e22d:	dec    ebp
  40e22e:	jecxz  0x40e281
  40e230:	jl     0x40e1e1
  40e232:	xor    edi,edx
  40e234:	std    
  40e235:	out    0x61,al
  40e237:	pop    eax
  40e238:	and    edx,DWORD PTR [edi]
  40e23a:	push   ebp
  40e23b:	rol    BYTE PTR [ecx-0x57],cl
  40e23e:	lahf   
  40e23f:	aad    0x3e
  40e241:	sbb    DWORD PTR [eax+ecx*1-0x3e],0xe453ee7f
  40e249:	xor    ch,BYTE PTR [edx*1+0x59346c20]
  40e250:	jg     0x40e246
  40e252:	cmp    bl,BYTE PTR [ecx+0x4b004741]
  40e258:	in     eax,0xda
  40e25a:	push   cs
  40e25b:	add    al,0x97
  40e25d:	iret   
  40e25e:	push   esi
  40e25f:	jb     0x40e226
  40e261:	inc    edx
  40e262:	and    eax,0x43237c15
  40e267:	xchg   esi,eax
  40e268:	fsubr  st(0),st
  40e26a:	outs   dx,DWORD PTR ds:[esi]
  40e26b:	imul   eax,DWORD PTR [ecx+0x7d91fd58],0x69
  40e272:	mov    bh,0xef
  40e274:	loop   0x40e1fe
  40e276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e277:	xchg   edi,eax
  40e278:	fidivr WORD PTR [ebx-0x3b9b1ace]
  40e27e:	dec    eax
  40e27f:	(bad)  
  40e281:	push   eax
  40e282:	adc    BYTE PTR [eax+0x7c3352f2],ah
  40e288:	fdivr  QWORD PTR [edi+0x1f]
  40e28b:	push   eax
  40e28c:	mov    ah,0xbc
  40e28f:	add    eax,0xde4e2436
  40e294:	xchg   BYTE PTR [edx],ah
  40e296:	nop
  40e297:	ds ss out dx,al
  40e29a:	xchg   esi,eax
  40e29b:	xor    BYTE PTR [eax+0x327f5f89],0x29
  40e2a2:	sbb    al,0xa9
  40e2a4:	mov    dl,0xa8
  40e2a6:	out    0xe9,al
  40e2a8:	adc    BYTE PTR [ecx],ch
  40e2aa:	jb     0x40e2ae
  40e2ac:	pop    ds
  40e2ad:	and    bh,dh
  40e2af:	in     eax,dx
  40e2b0:	xor    al,0x38
  40e2b2:	xor    eax,DWORD PTR [ecx-0x12]
  40e2b5:	ret    
  40e2b6:	adc    DWORD PTR [esi+0x6c],0x17
  40e2ba:	pop    edx
  40e2bb:	pop    eax
  40e2bc:	neg    BYTE PTR [edx+0x7cd94470]
  40e2c2:	or     eax,0xb6290135
  40e2c7:	int3   
  40e2c8:	xlat   BYTE PTR es:[ebx]
  40e2ca:	jmp    0xb94b713c
  40e2cf:	sub    bl,BYTE PTR [edx+0x1d]
  40e2d2:	cmp    DWORD PTR [eax+0x36],ebx
  40e2d5:	xor    al,0x67
  40e2d7:	adc    eax,0x9ed3db4
  40e2dc:	and    DWORD PTR [edx+0x4e],eax
  40e2df:	lock jnp 0x40e306
  40e2e2:	xor    dl,BYTE PTR [esp+edx*2+0x41]
  40e2e6:	pop    esp
  40e2e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2e8:	in     al,dx
  40e2e9:	or     ebp,DWORD PTR [ebx+0x7f]
  40e2ec:	mov    esi,0xda742c31
  40e2f1:	cli    
  40e2f2:	cdq    
  40e2f3:	add    al,0xd7
  40e2f5:	mov    dl,0x73
  40e2f7:	jmp    0x7b50:0xfc38eb52
  40e2fe:	jnp    0x40e37e
  40e300:	int3   
  40e301:	pushf  
  40e302:	inc    esp
  40e303:	pop    esp
  40e304:	fs dec ebx
  40e306:	nop
  40e307:	mov    edx,0x4f4de9dd
  40e30c:	repz pop ebx
  40e30e:	mov    edi,0x6345830
  40e313:	ss xchg edx,eax
  40e315:	push   ds
  40e316:	sub    eax,0x9af7d5d
  40e31b:	and    eax,0x4371866
  40e320:	or     ebp,DWORD PTR [eax+ebp*8]
  40e323:	inc    ebx
  40e324:	xor    DWORD PTR [edi+0x5cd4d23c],esp
  40e32a:	int    0x19
  40e32c:	xor    eax,0x97239598
  40e331:	push   es
  40e332:	loope  0x40e3a0
  40e334:	popa   
  40e335:	add    al,0xb3
  40e337:	ss test ax,0xebcd
  40e33c:	lds    ecx,FWORD PTR [ecx]
  40e33e:	mov    edx,0xf4e44999
  40e343:	inc    eax
  40e344:	pop    esp
  40e345:	call   0xaf3b:0x4e23919e
  40e34c:	fdivr  DWORD PTR [eax]
  40e34e:	jl     0x40e380
  40e350:	fcom   DWORD PTR [ebp-0x16]
  40e353:	mov    dh,0xb2
  40e355:	cmp    dh,BYTE PTR [ebx]
  40e357:	add    DWORD PTR [esi],esi
  40e359:	cmp    eax,0x64ef5023
  40e35e:	xchg   ecx,eax
  40e35f:	mov    esp,0x77dfe4e6
  40e364:	push   cs
  40e365:	jae    0x40e3e1
  40e367:	mov    ds:0x9d4740d4,eax
  40e36c:	ror    ebp,cl
  40e36e:	xlat   BYTE PTR ds:[ebx]
  40e36f:	push   eax
  40e370:	dec    ecx
  40e371:	push   eax
  40e372:	fimul  WORD PTR [ecx]
  40e374:	sbb    dl,BYTE PTR ds:0x1cf597f5
  40e37a:	mov    ecx,edi
  40e37c:	cmp    eax,0x3d014f06
  40e381:	imul   ebp,DWORD PTR [edi+0x5b],0xbea8bb0e
  40e388:	xor    ch,BYTE PTR [eax+0x59]
  40e38b:	inc    esp
  40e38c:	push   esi
  40e38d:	mov    bh,0x52
  40e38f:	(bad)  
  40e390:	lahf   
  40e391:	pop    esi
  40e392:	shl    BYTE PTR [ecx],0x35
  40e395:	icebp  
  40e396:	retf   
  40e397:	mov    DWORD PTR [eax+0x4c],ebp
  40e39a:	stos   BYTE PTR es:[edi],al
  40e39b:	daa    
  40e39c:	int    0x1
  40e39e:	and    bl,BYTE PTR [ebx+0x77a9f070]
  40e3a4:	std    
  40e3a5:	rcl    dh,0xed
  40e3a8:	sar    DWORD PTR [edi+0x70030c69],0x49
  40e3af:	mov    bh,0xfb
  40e3b1:	leave  
  40e3b2:	int3   
  40e3b3:	cwde   
  40e3b4:	and    BYTE PTR [esi+eiz*1],bl
  40e3b7:	cmp    BYTE PTR [ebx],cl
  40e3b9:	ficomp WORD PTR [edx+0xca180ec]
  40e3bf:	pop    eax
  40e3c0:	loop   0x40e3b7
  40e3c2:	mov    esi,0x867d0444
  40e3c7:	es clc 
  40e3c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3ca:	or     DWORD PTR [eax],esp
  40e3cc:	scas   al,BYTE PTR es:[edi]
  40e3cd:	mov    ebx,0x8948c118
  40e3d2:	test   al,0xd5
  40e3d4:	dec    ebx
  40e3d5:	and    bl,dl
  40e3d7:	repnz cmc 
  40e3d9:	xor    BYTE PTR [ebp-0x2d],bl
  40e3dc:	and    cl,dl
  40e3de:	mov    ch,0x51
  40e3e0:	ret    
  40e3e1:	jbe    0x40e419
  40e3e3:	pop    ebx
  40e3e4:	jge    0x40e3c8
  40e3e6:	data16 imul BYTE PTR ds:0x7d0fc23
  40e3ed:	push   esi
  40e3ee:	jmp    0xba45fdd5
  40e3f3:	mov    ecx,0xcd8f19c5
  40e3f8:	arpl   cx,dx
  40e3fa:	add    al,al
  40e3fc:	ror    BYTE PTR [eax],cl
  40e3fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3ff:	push   ds
  40e400:	push   ss
  40e401:	xor    edi,DWORD PTR [edx-0xa]
  40e404:	dec    ecx
  40e405:	stos   BYTE PTR es:[edi],al
  40e406:	out    dx,ax
  40e408:	xor    BYTE PTR [edx-0x52964fa9],0xc2
  40e40f:	and    edx,ecx
  40e411:	loope  0x40e461
  40e413:	jns    0x40e437
  40e415:	sbb    al,0x1c
  40e417:	aam    0xdf
  40e419:	(bad)  [esp+edi*4-0x2c467ef]
  40e420:	mov    dh,0x5b
  40e422:	adc    ah,bl
  40e424:	das    
  40e425:	jb     0x40e3a8
  40e427:	sbb    DWORD PTR [ebx+0x769a1c66],0xcc08b668
  40e431:	mov    edi,0xee3554ef
  40e436:	ret    
  40e437:	mov    bh,0x8
  40e439:	fwait
  40e43a:	mov    DWORD PTR [edi],edx
  40e43c:	es stc 
  40e43e:	fs loopne 0x40e4b0
  40e441:	pop    ebp
  40e442:	mov    es,WORD PTR [ecx+0x4]
  40e445:	or     DWORD PTR [ebx+0x28],esi
  40e448:	add    eax,0x6c5f8c72
  40e44d:	xor    al,0x33
  40e44f:	fs mov dl,0xad
  40e452:	jg     0x40e400
  40e454:	xchg   edx,eax
  40e455:	fimul  DWORD PTR [edi-0x7]
  40e458:	jae    0x40e472
  40e45a:	test   BYTE PTR [ebx-0x63329b0c],0x27
  40e461:	jae    0x40e479
  40e463:	jmp    0x40e40e
  40e465:	pop    esi
  40e466:	ds push eax
  40e468:	adc    bl,BYTE PTR [ebx]
  40e46a:	xchg   BYTE PTR cs:[edx],ch
  40e46d:	dec    ebx
  40e46e:	fisttp DWORD PTR [esi+0x27845a77]
  40e474:	ins    DWORD PTR es:[edi],dx
  40e475:	sub    al,bh
  40e477:	jge    0x40e42d
  40e479:	sbb    esp,DWORD PTR [esi]
  40e47b:	push   ebx
  40e47c:	fist   DWORD PTR [esi]
  40e47e:	shr    BYTE PTR [edx],0x80
  40e481:	cs ds xor esp,ebx
  40e485:	outs   dx,BYTE PTR ds:[esi]
  40e486:	rcr    BYTE PTR cs:[ecx+0x67a2bbec],cl
  40e48d:	sbb    bh,BYTE PTR [eax+0x67bcf35d]
  40e493:	clc    
  40e494:	add    eax,0x75066d71
  40e499:	add    bl,BYTE PTR [esi]
  40e49b:	cmp    eax,0x3e02e8d0
  40e4a0:	or     dl,0x9
  40e4a3:	sar    al,1
  40e4a5:	test   eax,0xee751a61
  40e4aa:	in     eax,0xf8
  40e4ac:	imul   eax,DWORD PTR [ebp+0x52],0xffffffd8
  40e4b0:	shr    BYTE PTR [ebp-0x7602c9db],1
  40e4b6:	mov    BYTE PTR [edi+eiz*1+0x1b],0xa6
  40e4bb:	and    DWORD PTR [edi-0x11],esp
  40e4be:	lods   eax,DWORD PTR ds:[esi]
  40e4bf:	pop    esp
  40e4c0:	cmp    al,0xeb
  40e4c2:	lods   al,BYTE PTR ds:[esi]
  40e4c3:	stos   DWORD PTR es:[edi],eax
  40e4c4:	cs xor eax,0x2810509a
  40e4ca:	push   esp
  40e4cb:	daa    
  40e4cc:	push   es
  40e4cd:	mov    ch,BYTE PTR [eax]
  40e4cf:	pop    esp
  40e4d0:	adc    dh,BYTE PTR [ebp-0x6c]
  40e4d3:	dec    eax
  40e4d4:	push   ds
  40e4d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4d6:	mov    edx,DWORD PTR ds:0xae382776
  40e4dc:	dec    ecx
  40e4dd:	cmp    BYTE PTR [esi],ah
  40e4df:	out    dx,eax
  40e4e0:	sti    
  40e4e1:	sub    eax,0x3737dea2
  40e4e6:	pop    eax
  40e4e7:	popa   
  40e4e8:	cmp    al,0xfc
  40e4ea:	pop    es
  40e4eb:	mov    ch,0x82
  40e4ed:	ret    
  40e4ee:	and    ebp,edi
  40e4f0:	sahf   
  40e4f1:	nop
  40e4f2:	cmp    esi,DWORD PTR [ecx+0x2ffda720]
  40e4f8:	pop    ebx
  40e4f9:	nop
  40e4fa:	push   0x28
  40e4fc:	nop
  40e4fd:	push   0x9665676e
  40e502:	imul   edx,DWORD PTR [eax-0x23],0x8ca7e266
  40e509:	dec    ebx
  40e50a:	mov    al,ds:0x2609e01a
  40e50f:	cmp    DWORD PTR [di],esp
  40e512:	dec    esi
  40e513:	xchg   edi,eax
  40e514:	jg     0x40e545
  40e516:	test   BYTE PTR [ebx-0x43],bh
  40e519:	xor    ebx,edx
  40e51b:	test   eax,0xc9273538
  40e520:	jo     0x40e57b
  40e522:	dec    ebx
  40e523:	mov    cl,0x3d
  40e525:	ins    BYTE PTR es:[edi],dx
  40e526:	jno    0x40e4fa
  40e528:	mov    esp,DWORD PTR [edi+0x27ca72b9]
  40e52e:	or     dl,dh
  40e530:	lods   eax,DWORD PTR ds:[esi]
  40e531:	hlt    
  40e532:	add    bh,0xd3
  40e535:	ret    
  40e536:	push   0x5b83da11
  40e53b:	ret    0x6955
  40e53e:	inc    ebx
  40e53f:	fwait
  40e540:	loopne 0x40e4ea
  40e542:	aaa    
  40e543:	dec    edx
  40e544:	jge    0x40e4c7
  40e546:	pop    edi
  40e547:	and    eax,0xa42e9ab3
  40e54c:	pop    ebx
  40e54d:	xchg   edi,eax
  40e54e:	mov    dh,0x2b
  40e550:	ds jge 0x40e53c
  40e553:	(bad)  
  40e554:	cmp    DWORD PTR [edx+0x2b0ab61d],edx
  40e55a:	(bad)
  40e55d:	out    0xb8,al
  40e55f:	sub    al,0x0
  40e561:	dec    ecx
  40e562:	xchg   edx,esi
  40e564:	xchg   esi,eax
  40e565:	jnp    0x40e54d
  40e567:	outs   dx,DWORD PTR ds:[esi]
  40e568:	pop    ss
  40e569:	mov    ah,0x90
  40e56b:	jmp    0x40e4f2
  40e56d:	fiadd  DWORD PTR [ebp+0x72735864]
  40e573:	push   eax
  40e574:	ja     0x40e586
  40e576:	shl    ecx,1
  40e578:	jnp    0x40e5cd
  40e57a:	mov    esp,0x2ba6670e
  40e57f:	pop    esi
  40e580:	outs   dx,DWORD PTR ds:[esi]
  40e581:	mov    dl,0x57
  40e583:	test   DWORD PTR [esi],ecx
  40e585:	jne    0x40e5b1
  40e587:	popa   
  40e588:	in     al,0x1e
  40e58a:	pop    ds
  40e58b:	dec    ebp
  40e58c:	addr16 or eax,0x4c3bcf73
  40e592:	das    
  40e593:	arpl   ax,sp
  40e595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e596:	push   si
  40e598:	mov    ah,0x8f
  40e59a:	sbb    al,0xad
  40e59c:	into   
  40e59d:	outs   dx,DWORD PTR ds:[esi]
  40e59e:	mov    ah,0xa4
  40e5a0:	je     0x40e581
  40e5a2:	mov    eax,0xaf82ce51
  40e5a7:	dec    ebx
  40e5a8:	ror    BYTE PTR [edx-0x1a94be71],cl
  40e5ae:	fcomp  QWORD PTR [edx]
  40e5b0:	cmp    eax,0x36766e12
  40e5b5:	xor    bh,BYTE PTR [ebx-0xe]
  40e5b8:	inc    ebx
  40e5b9:	ret    0x88ea
  40e5bc:	adc    dl,dl
  40e5be:	inc    esi
  40e5bf:	in     eax,0x17
  40e5c1:	dec    esp
  40e5c2:	sub    al,0x15
  40e5c4:	pop    es
  40e5c5:	xchg   edi,eax
  40e5c6:	pop    ecx
  40e5c7:	loopne 0x40e5a2
  40e5c9:	push   ds
  40e5ca:	push   ebp
  40e5cb:	or     esi,ecx
  40e5cd:	inc    ecx
  40e5ce:	sub    DWORD PTR [edi+eiz*4],0x3454428e
  40e5d5:	out    dx,eax
  40e5d6:	sbb    BYTE PTR ds:[ebx+0x1b],bh
  40e5da:	lock jmp 0x40e600
  40e5dd:	jmp    0x40e5c5
  40e5df:	pusha  
  40e5e0:	mov    esp,0x52aa5e53
  40e5e5:	lods   al,BYTE PTR ds:[esi]
  40e5e6:	popf   
  40e5e7:	js     0x40e633
  40e5e9:	out    dx,eax
  40e5ea:	in     al,0xd
  40e5ec:	jns    0x40e5ab
  40e5ee:	fistp  QWORD PTR [eax+0x686e45cd]
  40e5f4:	fs pop edi
  40e5f6:	mov    cl,BYTE PTR [esi+0x6c]
  40e5f9:	pop    es
  40e5fa:	jl     0x40e5b8
  40e5fc:	jae    0x40e58d
  40e5fe:	sbb    BYTE PTR [edi],0x5c
  40e601:	jl     0x40e5fa
  40e603:	mov    bl,0xbb
  40e605:	pop    ds
  40e606:	ss loopne 0x40e58f
  40e609:	js     0x40e670
  40e60b:	jno    0x40e5a8
  40e60d:	ss jb  0x40e5aa
  40e610:	sub    esi,edi
  40e612:	pop    eax
  40e613:	in     eax,dx
  40e614:	das    
  40e615:	xor    BYTE PTR [esi+0x2ebfa63],dh
  40e61b:	fimul  DWORD PTR ds:0xad99d1ec
  40e621:	xchg   esi,eax
  40e622:	in     eax,dx
  40e623:	sti    
  40e624:	retf   0xeace
  40e627:	pop    ebp
  40e628:	frstor [edi]
  40e62a:	loop   0x40e5bf
  40e62c:	iret   
  40e62d:	mov    al,0x57
  40e62f:	add    DWORD PTR [ecx+edx*1],esi
  40e632:	ins    DWORD PTR es:[edi],dx
  40e633:	and    eax,DWORD PTR [ebx+0x7e]
  40e636:	push   es
  40e637:	das    
  40e638:	rcr    BYTE PTR [edi-0x35e0e7b9],0xae
  40e63f:	cmp    DWORD PTR [ebp+eiz*1-0x8f1f7a5],edx
  40e646:	hlt    
  40e647:	add    dh,BYTE PTR [ecx-0x134000f7]
  40e64d:	dec    esi
  40e64e:	push   esi
  40e64f:	js     0x40e6b9
  40e651:	jmp    0xb2e57176
  40e656:	cmp    bl,bl
  40e658:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e659:	inc    ebx
  40e65a:	mov    ebx,0x14c35151
  40e65f:	fsubrp st(3),st
  40e661:	or     al,BYTE PTR [eax+0x20e433f9]
  40e667:	xlat   BYTE PTR ds:[ebx]
  40e668:	and    BYTE PTR [ecx],al
  40e66a:	mov    al,ds:0xd726e612
  40e66f:	push   ebp
  40e670:	push   cs
  40e671:	or     eax,0x14
  40e674:	inc    eax
  40e675:	sub    dh,BYTE PTR [edi]
  40e677:	js     0x40e6d5
  40e679:	mov    eax,0x1b92d8e
  40e67e:	add    DWORD PTR [edx],0x2bd8d287
  40e684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e685:	stos   BYTE PTR es:[edi],al
  40e686:	xchg   edi,eax
  40e687:	jae    0x40e6e4
  40e689:	in     eax,dx
  40e68a:	ins    BYTE PTR es:[edi],dx
  40e68b:	fild   QWORD PTR [ecx-0x78d505f4]
  40e691:	cs aam 0x76
  40e694:	ss out 0xb2,al
  40e697:	xchg   ebp,eax
  40e698:	in     eax,0x1
  40e69a:	sbb    eax,0x16c2c2bd
  40e69f:	retf   
  40e6a0:	add    DWORD PTR ds:0xb65e1895,edi
  40e6a6:	imul   ecx,edx,0x45
  40e6a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6aa:	cld    
  40e6ab:	pop    edx
  40e6ac:	test   eax,0x96bd5a9b
  40e6b1:	mov    edx,0xb2be982d
  40e6b6:	pop    DWORD PTR [ebp+0x6d867077]
  40e6bc:	loopne 0x40e673
  40e6be:	push   eax
  40e6bf:	jb     0x40e662
  40e6c1:	jmp    0x87bb21a4
  40e6c6:	push   cs
  40e6c7:	lods   al,BYTE PTR ds:[esi]
  40e6c8:	adc    edi,0xad2fb349
  40e6ce:	retf   
  40e6cf:	push   es
  40e6d0:	xchg   esp,eax
  40e6d1:	inc    ebp
  40e6d2:	std    
  40e6d3:	xor    al,0x8b
  40e6d5:	int3   
  40e6d6:	xchg   esp,eax
  40e6d7:	sahf   
  40e6d8:	dec    edx
  40e6d9:	jns    0x40e6ad
  40e6db:	or     BYTE PTR [edx-0x65bdc063],bh
  40e6e1:	inc    esp
  40e6e2:	adc    al,0xa6
  40e6e4:	pop    ecx
  40e6e5:	dec    edx
  40e6e6:	popa   
  40e6e7:	and    DWORD PTR [ebp+0x24ea737b],esp
  40e6ed:	mov    dh,0xb9
  40e6ef:	inc    edi
  40e6f0:	add    ebx,DWORD PTR [eax-0x67]
  40e6f3:	and    eax,0xd7c72323
  40e6f8:	add    al,0x73
  40e6fa:	mov    eax,ds:0xda10c703
  40e6ff:	aaa    
  40e700:	stc    
  40e701:	mov    al,0x35
  40e703:	lea    eax,[ebx]
  40e705:	mov    bl,BYTE PTR [edx]
  40e707:	call   0xad4:0x736d4e89
  40e70e:	nop
  40e70f:	sub    al,0x1e
  40e711:	inc    esp
  40e712:	mov    ss,WORD PTR [esi]
  40e714:	and    eax,0x85550dd0
  40e719:	rcl    DWORD PTR [ebx-0x901415a],cl
  40e71f:	out    dx,eax
  40e720:	scas   al,BYTE PTR es:[edi]
  40e721:	scas   al,BYTE PTR es:[edi]
  40e722:	pusha  
  40e723:	mov    al,0xcf
  40e725:	pop    ecx
  40e726:	cmp    bl,BYTE PTR [eax-0x7821feaa]
  40e72c:	ret    
  40e72d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e72e:	out    0xf8,al
  40e730:	fisub  DWORD PTR [ecx-0x51]
  40e733:	dec    edx
  40e734:	cmp    ebp,DWORD PTR [ebx]
  40e736:	mov    eax,0xc616c51b
  40e73b:	add    edi,DWORD PTR [edi*4+0x28c7402a]
  40e742:	gs int3 
  40e744:	in     eax,dx
  40e745:	sub    esi,ecx
  40e747:	sbb    al,0x7e
  40e749:	xor    ebx,DWORD PTR [esi-0x36]
  40e74c:	jnp    0x40e7c7
  40e74e:	xchg   esp,eax
  40e74f:	int3   
  40e750:	jns    0x40e714
  40e752:	in     eax,dx
  40e753:	inc    edi
  40e754:	call   0x32f63738
  40e759:	xor    eax,0x5f3dd5a2
  40e75e:	dec    edx
  40e75f:	fcmove st,st(7)
  40e761:	jg     0x40e796
  40e763:	arpl   WORD PTR [edx+0x33],dx
  40e766:	stc    
  40e767:	ret    
  40e768:	jbe    0x40e7b9
  40e76a:	inc    esi
  40e76b:	lea    ecx,[eax]
  40e76d:	and    cl,BYTE PTR [ebp+eax*2-0x68]
  40e771:	fprem  
  40e773:	xchg   edi,eax
  40e774:	out    0x7f,eax
  40e776:	std    
  40e777:	xchg   BYTE PTR [eax],dl
  40e779:	mov    edi,DWORD PTR [ebx+0x65e051aa]
  40e77f:	ss pop ds
  40e781:	fadd   QWORD PTR [esi+esi*8]
  40e784:	aad    0x47
  40e786:	or     DWORD PTR [ebp-0x69],0x78
  40e78a:	xchg   ecx,eax
  40e78b:	adc    al,0x80
  40e78d:	dec    ebx
  40e78e:	movzx  ebp,WORD PTR [esi]
  40e791:	cmp    bl,BYTE PTR [edi-0x65604fa6]
  40e797:	call   0xf798a95d
  40e79c:	mov    ds:0xe36b2db0,al
  40e7a1:	dec    eax
  40e7a2:	cwde   
  40e7a3:	call   0xc0bb3e94
  40e7a8:	shr    BYTE PTR [esi],cl
  40e7aa:	aaa    
  40e7ab:	inc    edx
  40e7ac:	xchg   BYTE PTR [edi-0x34],bh
  40e7af:	fmul   DWORD PTR [edi]
  40e7b1:	int    0xa5
  40e7b3:	jbe    0x40e788
  40e7b5:	jnp    0x40e7a2
  40e7b7:	adc    ch,BYTE PTR [esp+eiz*2-0x74ef0fdf]
  40e7be:	scas   al,BYTE PTR es:[edi]
  40e7bf:	mov    ebp,0x1b0bc36a
  40e7c4:	repnz push ebx
  40e7c6:	xor    esi,DWORD PTR [edx+0x4a4029b4]
  40e7cc:	loop   0x40e7ce
  40e7ce:	cmp    DWORD PTR [edx+edi*1-0x163002ef],0x3b
  40e7d6:	into   
  40e7d7:	xchg   ebx,eax
  40e7d8:	inc    ecx
  40e7d9:	mov    ecx,0x546922b0
  40e7de:	mov    dh,0x3b
  40e7e0:	cmc    
  40e7e1:	retf   
  40e7e2:	push   ebx
  40e7e3:	loop   0x40e7c1
  40e7e5:	pop    esp
  40e7e6:	inc    ecx
  40e7e7:	jbe    0x40e7fc
  40e7e9:	or     al,0xf9
  40e7eb:	push   ebx
  40e7ec:	in     al,0xbf
  40e7ee:	leave  
  40e7ef:	sbb    DWORD PTR [ecx+0x1d],ebp
  40e7f2:	pcmpeqd mm2,QWORD PTR [eax]
  40e7f5:	fild   WORD PTR [si-0xf]
  40e7f9:	nop
  40e7fa:	xchg   ebp,eax
  40e7fb:	sbb    eax,0x250d964a
  40e800:	xor    al,0xbb
  40e802:	adc    DWORD PTR [ebx],edx
  40e804:	fld    TBYTE PTR [esp+ebp*8-0x13]
  40e808:	xchg   ebp,eax
  40e809:	push   esp
  40e80a:	xor    ebp,DWORD PTR [eax]
  40e80c:	hlt    
  40e80d:	mov    ds:0x72d99b1c,al
  40e812:	out    dx,eax
  40e813:	inc    ecx
  40e814:	mov    esp,0xfb8920ac
  40e819:	aam    0xfd
  40e81b:	push   0x4894b323
  40e820:	inc    edx
  40e821:	and    ebx,edx
  40e823:	dec    edx
  40e824:	lahf   
  40e825:	push   ebx
  40e826:	in     eax,dx
  40e827:	lahf   
  40e828:	imul   BYTE PTR [ecx+0x37]
  40e82b:	and    bl,0x94
  40e82e:	mov    ah,0x60
  40e830:	jge    0x40e7f4
  40e832:	pop    ds
  40e833:	cmp    eax,0x348ab7a0
  40e838:	repnz mov ?,WORD PTR [ebx+eax*4+0x72]
  40e83d:	mov    ?,WORD PTR [bx+si-0x57]
  40e841:	inc    edx
  40e842:	call   0x76cf:0x669c6ed6
  40e849:	jbe    0x40e8b3
  40e84b:	cmp    DWORD PTR [ebp+0x326fe8fe],eax
  40e851:	adc    al,0x9
  40e853:	cmp    eax,0x26414a9f
  40e858:	(bad)  
  40e85a:	pop    ecx
  40e85b:	jmp    0xec6f57b0
  40e860:	push   esi
  40e861:	stos   BYTE PTR es:[edi],al
  40e862:	inc    eax
  40e863:	pushf  
  40e864:	xor    BYTE PTR [ebp+ebp*1-0x69922329],bh
  40e86b:	and    BYTE PTR [ebx+0x26],0xc3
  40e86f:	adc    eax,0x56fb9f04
  40e874:	mov    ds:0x1359a96a,eax
  40e879:	jnp    0x40e8a8
  40e87b:	pop    edx
  40e87c:	not    DWORD PTR [edi-0x5fe2c229]
  40e882:	arpl   WORD PTR [edx-0x27ad7e4c],sp
  40e888:	(bad)  
  40e889:	xor    BYTE PTR [ebp-0x6d820cf4],dh
  40e88f:	mov    cl,0x88
  40e891:	aad    0x41
  40e893:	add    cl,BYTE PTR [eax-0x7e]
  40e896:	dec    ebp
  40e897:	add    dh,BYTE PTR [eax+ebp*4-0x6e]
  40e89b:	cmp    al,0x5e
  40e89d:	mov    ss,WORD PTR [edi-0x6ba3538d]
  40e8a3:	xchg   BYTE PTR [esi-0x19],dl
  40e8a6:	scas   eax,DWORD PTR es:[edi]
  40e8a7:	in     al,0x2
  40e8a9:	jmp    0xf757:0x7cd398b5
  40e8b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8b1:	(bad)  
  40e8b2:	ret    0x5c3f
  40e8b5:	stc    
  40e8b6:	lods   al,BYTE PTR ds:[esi]
  40e8b7:	mov    edx,0x1964af9d
  40e8bc:	xor    cl,BYTE PTR [eax+eiz*2]
  40e8bf:	mov    bl,0x47
  40e8c1:	sar    BYTE PTR [ebp+0x12f8a75f],1
  40e8c7:	shr    esp,cl
  40e8c9:	imul   ecx,DWORD PTR [eax+0x4e],0x2f
  40e8cd:	adc    eax,0xdc06d7cb
  40e8d2:	pop    edx
  40e8d3:	cmp    eax,0xfa8d193b
  40e8d8:	mov    dl,0xa1
  40e8da:	jp     0x40e926
  40e8dc:	outs   dx,BYTE PTR ds:[esi]
  40e8dd:	mov    eax,0x83e5ad52
  40e8e2:	retf   
  40e8e3:	mov    ch,0x1e
  40e8e5:	(bad)  
  40e8e6:	(bad)  
  40e8e7:	push   edi
  40e8e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8e9:	sub    al,0xd0
  40e8eb:	push   ecx
  40e8ec:	pop    ebp
  40e8ed:	mov    esi,0x3526cacc
  40e8f2:	jnp    0x40e96a
  40e8f4:	int3   
  40e8f5:	add    BYTE PTR [eax],bl
  40e8f7:	inc    ecx
  40e8f8:	inc    ecx
  40e8f9:	mov    ch,BYTE PTR [ebx+0x43]
  40e8fc:	sbb    ebp,DWORD PTR [eax+0x3ac2b8cc]
  40e902:	mov    DWORD PTR [ebp-0x3893268b],edx
  40e908:	xor    esi,DWORD PTR [edx+0x4]
  40e90b:	push   0x9
  40e90d:	add    dh,BYTE PTR [eax-0x1d]
  40e910:	cmp    cl,bl
  40e912:	xchg   esi,eax
  40e913:	not    esp
  40e915:	mov    ch,0x27
  40e917:	loope  0x40e8be
  40e919:	in     al,dx
  40e91a:	xor    al,0x5c
  40e91c:	pop    ss
  40e91d:	pop    ds
  40e91e:	push   es
  40e91f:	jb     0x40e912
  40e921:	sti    
  40e922:	cmp    bh,BYTE PTR [edi]
  40e924:	mov    BYTE PTR [eax-0x77f58e15],dh
  40e92a:	cs dec ecx
  40e92c:	and    esi,DWORD PTR [ecx+0x58]
  40e92f:	jns    0x40e928
  40e931:	mov    cl,0x39
  40e933:	sbb    al,0xc8
  40e935:	sub    BYTE PTR [esi-0x80],0xe0
  40e939:	mov    bh,0x6c
  40e93b:	clc    
  40e93c:	push   edx
  40e93d:	and    BYTE PTR [ebx+0x56c7a474],dh
  40e943:	hlt    
  40e944:	sti    
  40e945:	inc    edi
  40e946:	cwde   
  40e947:	inc    esp
  40e948:	or     BYTE PTR [edx+eax*4+0x20],cl
  40e94c:	pop    esp
  40e94d:	xor    al,0x84
  40e94f:	add    BYTE PTR [ebp+0x14febe38],dh
  40e955:	push   edi
  40e956:	jmp    0x2399:0x8f358efe
  40e95d:	sbb    al,0x20
  40e95f:	jle    0x40e97f
  40e961:	xchg   esi,eax
  40e962:	in     eax,0xbe
  40e964:	loope  0x40e95a
  40e966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e967:	and    ebp,DWORD PTR [esi+0x1a]
  40e96a:	cs xchg edx,eax
  40e96c:	adc    al,0x46
  40e96e:	test   eax,0x215249d5
  40e973:	push   0x8f4bbba4
  40e978:	pop    ecx
  40e979:	xchg   esp,eax
  40e97a:	xor    ch,cl
  40e97c:	dec    esi
  40e97d:	dec    eax
  40e97e:	dec    ecx
  40e97f:	and    bh,BYTE PTR [eax]
  40e981:	ins    BYTE PTR es:[edi],dx
  40e982:	sub    DWORD PTR [esi],edi
  40e984:	mov    WORD PTR [esi+edx*2+0x34],cs
  40e988:	ss push es
  40e98a:	mov    edi,gs
  40e98c:	sar    DWORD PTR [eax-0x5c],1
  40e98f:	jmp    DWORD PTR [ecx+ecx*2]
  40e992:	mov    ds:0xb6bad43d,al
  40e997:	in     al,dx
  40e998:	out    dx,eax
  40e999:	jmp    0x40ea07
  40e99b:	inc    eax
  40e99c:	add    al,0xf6
  40e99e:	mov    ebp,0x2714a998
  40e9a3:	ror    DWORD PTR [esi-0x33e87ecf],0x3c
  40e9aa:	jmp    0x596:0x169a3b8f
  40e9b1:	push   ecx
  40e9b2:	add    al,0xcc
  40e9b4:	in     eax,0xa8
  40e9b6:	out    0x8c,eax
  40e9b8:	inc    ebx
  40e9b9:	sub    eax,0x9a3563eb
  40e9be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9bf:	lock add BYTE PTR [ecx],0xc1
  40e9c3:	popa   
  40e9c4:	dec    esp
  40e9c5:	jg     0x40e99d
  40e9c7:	mov    ds:0x850255c8,eax
  40e9cc:	(bad)  
  40e9cd:	repnz inc esi
  40e9cf:	adc    al,0x5e
  40e9d1:	jmp    0x8be8ef9
  40e9d6:	dec    esi
  40e9d7:	fld    st(4)
  40e9d9:	sbb    eax,0x4ee64665
  40e9de:	rol    BYTE PTR ds:0x63b88b2d,cl
  40e9e4:	(bad)  
  40e9e6:	or     al,0x30
  40e9e8:	leave  
  40e9e9:	jae    0x40e97b
  40e9eb:	cli    
  40e9ec:	(bad)  
  40e9ed:	or     ecx,DWORD PTR [esi+0x4d]
  40e9f0:	rcl    BYTE PTR [edi-0x5d50ab1f],0x11
  40e9f7:	xchg   dl,ah
  40e9f9:	add    DWORD PTR [edx+0x6],ebp
  40e9fc:	sbb    al,0xf2
  40e9fe:	xor    eax,0x9267359e
  40ea03:	inc    edi
  40ea04:	jmp    0x9544d40c
  40ea09:	mov    edx,0x1000aa9e
  40ea0e:	and    cl,BYTE PTR [ebp-0x4f]
  40ea11:	std    
  40ea12:	dec    edx
  40ea13:	jge    0x40ea2c
  40ea15:	ja     0x40ea93
  40ea17:	mov    ds:0xb1af170d,eax
  40ea1c:	pop    ss
  40ea1d:	jnp    0x40e9dd
  40ea1f:	sbb    dl,bh
  40ea21:	fisttp QWORD PTR [ebp-0x4]
  40ea24:	pop    esp
  40ea25:	adc    al,0x74
  40ea27:	dec    esi
  40ea28:	dec    ecx
  40ea29:	fadd   DWORD PTR [ebx]
  40ea2b:	ret    0xefc1
  40ea2e:	(bad)  
  40ea2f:	jb     0x40ea8d
  40ea31:	cmp    edx,DWORD PTR [ecx+0x26daa401]
  40ea37:	test   ch,0x96
  40ea3a:	popa   
  40ea3b:	and    ecx,eax
  40ea3d:	lods   eax,DWORD PTR ds:[esi]
  40ea3e:	cmp    al,0xb9
  40ea40:	sbb    BYTE PTR es:[ebx+0x1ccfb6b6],0xda
  40ea48:	iret   
  40ea49:	adc    eax,0x7c417c28
  40ea4e:	ds jne 0x40ea11
  40ea51:	xor    BYTE PTR [ebx-0x29b2dfea],cl
  40ea57:	inc    esi
  40ea58:	pop    ss
  40ea59:	inc    esp
  40ea5a:	mov    eax,ebp
  40ea5c:	out    dx,al
  40ea5d:	aas    
  40ea5e:	cwde   
  40ea5f:	call   0x50f3:0x6ceb409e
  40ea66:	into   
  40ea67:	push   0xfffffff5
  40ea69:	cwde   
  40ea6a:	adc    eax,0x39f5b1c4
  40ea6f:	inc    ebx
  40ea70:	adc    eax,0x3fa0d4d4
  40ea75:	mov    DWORD PTR [ebx-0x5f747a6d],esi
  40ea7b:	ja     0x40ea2f
  40ea7d:	repz addr16 arpl cx,bp
  40ea81:	stc    
  40ea82:	xchg   ebx,eax
  40ea83:	adc    BYTE PTR [edi-0x63],dh
  40ea86:	mov    dh,0x72
  40ea88:	bnd jge 0x40ea99
  40ea8b:	pop    edx
  40ea8c:	sub    eax,ebx
  40ea8e:	mov    al,0xe3
  40ea90:	(bad)  [edi+0x59e24412]
  40ea96:	and    DWORD PTR [ecx],ecx
  40ea98:	dec    esi
  40ea99:	xrelease xchg BYTE PTR [edx+0x969aa26],bh
  40eaa0:	in     al,0x17
  40eaa2:	sar    DWORD PTR [esi],0x86
  40eaa5:	and    esi,eax
  40eaa7:	fst    st(3)
  40eaa9:	aas    
  40eaaa:	(bad)  
  40eaab:	xchg   esp,eax
  40eaac:	cs dec ebp
  40eaae:	sub    BYTE PTR [esi],al
  40eab0:	(bad)  
  40eab1:	xchg   esi,eax
  40eab2:	mov    ecx,DWORD PTR [edi+edi*1]
  40eab5:	push   ecx
  40eab6:	push   ss
  40eab7:	mov    eax,0x52144ef
  40eabc:	add    edx,DWORD PTR [ebp+0x42ce59ef]
  40eac2:	xchg   esi,eax
  40eac3:	lahf   
  40eac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eac5:	inc    edi
  40eac6:	xchg   edx,eax
  40eac7:	loop   0x40eada
  40eac9:	iret   
  40eaca:	icebp  
  40eacb:	(bad)  
  40eacc:	dec    edi
  40eacd:	sti    
  40eace:	lahf   
  40eacf:	test   ecx,ebx
  40ead1:	jp     0x40eabf
  40ead3:	push   0x8f12588b
  40ead8:	jle    0x40eabd
  40eada:	ret    
  40eadb:	xcrypt-ecb (bad)
  40eadc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eadd:	mov    ebx,eax
  40eadf:	jbe    0x40eb53
  40eae1:	cmp    eax,0x20d063bb
  40eae6:	pop    ebx
  40eae7:	shl    BYTE PTR [ecx],0x28
  40eaea:	(bad)  
  40eaeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaec:	xor    bh,BYTE PTR [edx-0x5]
  40eaef:	and    BYTE PTR [esi-0x3c76447c],0xb7
  40eaf6:	inc    edi
  40eaf7:	in     al,0xd4
  40eaf9:	into   
  40eafa:	loope  0x40eaf9
  40eafc:	jnp    0x40eb18
  40eafe:	imul   eax,DWORD PTR [ecx],0x3f
  40eb01:	(bad)  
  40eb02:	pusha  
  40eb03:	xor    eax,0xc3d0c8f
  40eb08:	mov    al,0x8a
  40eb0a:	fwait
  40eb0b:	push   esp
  40eb0c:	mov    ds:0xde84b480,al
  40eb11:	rcr    edi,cl
  40eb13:	scas   al,BYTE PTR es:[edi]
  40eb14:	ret    
  40eb15:	div    edi
  40eb17:	mov    esp,DWORD PTR ds:0xd32ec240
  40eb1d:	jno    0x40eb04
  40eb1f:	rcl    BYTE PTR [edi],cl
  40eb21:	sub    eax,0xd91f33b
  40eb26:	inc    edx
  40eb27:	fidivr WORD PTR [esi+0x24a919fc]
  40eb2d:	pop    edi
  40eb2e:	shl    DWORD PTR [eax],1
  40eb30:	enter  0xa1d8,0x5c
  40eb34:	inc    edi
  40eb35:	xchg   edi,eax
  40eb36:	adc    DWORD PTR [edi+0x9],edi
  40eb39:	rol    BYTE PTR [edi+0x79],cl
  40eb3c:	jbe    0x40ebb2
  40eb3e:	mov    ch,0xd
  40eb40:	jge    0x40eb6c
  40eb42:	add    ah,BYTE PTR [esi-0x1595cbed]
  40eb48:	pusha  
  40eb49:	jl     0x40eb16
  40eb4b:	mov    ch,0xa6
  40eb4d:	out    dx,eax
  40eb4e:	dec    ebx
  40eb4f:	clc    
  40eb50:	imul   DWORD PTR [edx+ecx*4]
  40eb53:	cmp    DWORD PTR [ebp-0x13],esp
  40eb56:	sti    
  40eb57:	cmp    DWORD PTR [ebx+ebp*8],ebx
  40eb5a:	and    al,0x81
  40eb5c:	cmp    DWORD PTR [esi-0x34],0xb2860a1c
  40eb63:	sub    edx,DWORD PTR [edx+0x62]
  40eb66:	inc    esp
  40eb67:	xor    BYTE PTR [ecx],dh
  40eb69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb6a:	call   0x453adc14
  40eb6f:	jns    0x40ebe5
  40eb71:	test   BYTE PTR [edi],ch
  40eb73:	ins    DWORD PTR es:[edi],dx
  40eb74:	push   cs
  40eb75:	bound  ebx,QWORD PTR [ebp+ebp*4-0x3f]
  40eb79:	cwde   
  40eb7a:	nop
  40eb7b:	add    BYTE PTR [edi+edx*1],bl
  40eb7e:	or     eax,0x17400741
  40eb83:	and    ch,BYTE PTR [esi-0x77b0c32b]
  40eb89:	inc    ebp
  40eb8a:	pop    ss
  40eb8b:	add    esi,DWORD PTR [esi+0x63]
  40eb8e:	rol    BYTE PTR [edx],cl
  40eb90:	jns    0x40ebbc
  40eb92:	les    edx,FWORD PTR [ebx-0x3b]
  40eb95:	push   cs
  40eb96:	xchg   ebp,eax
  40eb97:	pop    eax
  40eb98:	fcomp  QWORD PTR [edx+0xa]
  40eb9b:	push   0x1
  40eb9d:	mov    ecx,0xaf800661
  40eba2:	jecxz  0x40eb55
  40eba4:	fcomp  DWORD PTR [ebx-0xcebfc26]
  40ebaa:	(bad)  
  40ebab:	pop    eax
  40ebac:	dec    esi
  40ebad:	pop    edx
  40ebae:	push   edi
  40ebaf:	add    DWORD PTR [ebx],ebp
  40ebb1:	std    
  40ebb2:	jne    0x40ebaf
  40ebb4:	sbb    al,0x73
  40ebb6:	xor    BYTE PTR [ebp+0xf],ah
  40ebb9:	mov    dh,ch
  40ebbb:	in     eax,dx
  40ebbc:	push   DWORD PTR [edx-0x3e]
  40ebbf:	shr    DWORD PTR [edi-0x514f5a29],0xaa
  40ebc6:	stos   BYTE PTR es:[edi],al
  40ebc7:	xchg   ebx,eax
  40ebc8:	dec    edi
  40ebc9:	xor    DWORD PTR [eax+ecx*4+0x65fc88f1],edx
  40ebd0:	sub    dh,cl
  40ebd2:	pop    es
  40ebd3:	cmp    edi,ebp
  40ebd5:	ss inc ecx
  40ebd7:	xchg   edi,eax
  40ebd8:	or     al,0x99
  40ebda:	outs   dx,BYTE PTR ds:[esi]
  40ebdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebdc:	(bad)  
  40ebdd:	jmp    0x40ec56
  40ebdf:	cmp    bl,BYTE PTR [ecx]
  40ebe1:	push   ds
  40ebe2:	mov    dh,0x9
  40ebe4:	fistp  QWORD PTR [edx]
  40ebe6:	and    eax,0xac2b3aee
  40ebeb:	aam    0x1e
  40ebed:	test   BYTE PTR [edx-0x5],al
  40ebf0:	sub    eax,0x85c43300
  40ebf5:	fucompp 
  40ebf7:	pop    esp
  40ebf8:	cwde   
  40ebf9:	test   DWORD PTR [ecx-0x4b3ae656],0x6c9af417
  40ec03:	mov    cl,0xc7
  40ec05:	outs   dx,DWORD PTR ds:[esi]
  40ec06:	loope  0x40ec71
  40ec08:	jne    0x40ebff
  40ec0a:	mov    bl,0x63
  40ec0c:	mov    ebx,0x7fed16f0
  40ec11:	sub    al,0x68
  40ec13:	je     0x40ec63
  40ec15:	aaa    
  40ec16:	aam    0x84
  40ec18:	les    ebp,FWORD PTR [ebp+0x5836a34d]
  40ec1e:	xor    eax,0xd1a27f70
  40ec23:	or     al,0x49
  40ec25:	les    ebx,FWORD PTR [edx]
  40ec27:	enter  0x6906,0x13
  40ec2b:	mov    eax,0xf78595ec
  40ec30:	mov    eax,ds:0x7df0f04a
  40ec35:	mov    al,0xf2
  40ec37:	cmp    al,0x40
  40ec39:	or     esi,DWORD PTR [ebp+0x58]
  40ec3c:	(bad)  
  40ec3d:	test   DWORD PTR [ecx+edi*1-0x49],0xfe561435
  40ec45:	cdq    
  40ec46:	fld    QWORD PTR [edi+0x31]
  40ec49:	xor    edi,ebx
  40ec4b:	inc    eax
  40ec4c:	test   BYTE PTR [ecx],bl
  40ec4e:	repnz test al,0xf1
  40ec51:	scas   eax,DWORD PTR es:[edi]
  40ec52:	nop
  40ec53:	retf   
  40ec54:	pop    ss
  40ec55:	mov    bl,0x27
  40ec57:	jmp    0x1e9a27d0
  40ec5c:	add    bh,BYTE PTR [eax-0x6904b5e4]
  40ec62:	fwait
  40ec63:	xchg   ch,ch
  40ec65:	or     al,0x7c
  40ec67:	pushf  
  40ec68:	out    0xb1,eax
  40ec6a:	sub    al,0x61
  40ec6c:	mov    edi,0x56df5016
  40ec71:	lods   al,BYTE PTR ds:[esi]
  40ec72:	into   
  40ec73:	jp     0x40ec07
  40ec75:	dec    ebx
  40ec76:	inc    edx
  40ec77:	or     al,0x8
  40ec79:	ins    DWORD PTR es:[edi],dx
  40ec7a:	jg     0x40ecba
  40ec7c:	das    
  40ec7d:	sub    BYTE PTR [ecx-0x26ec4f87],dh
  40ec83:	add    DWORD PTR [edi-0x5d77cbce],ebx
  40ec89:	imul   ecx,DWORD PTR [ebx+ecx*2+0x6f],0x26cb54c1
  40ec91:	nop
  40ec92:	into   
  40ec93:	sub    eax,0x421c49a0
  40ec98:	repnz arpl ax,si
  40ec9b:	push   edx
  40ec9c:	pushf  
  40ec9d:	xor    eax,0x7f20e5a8
  40eca2:	mov    ebp,0x957e3def
  40eca7:	sbb    BYTE PTR [eax],cl
  40eca9:	(bad)  
  40ecab:	fisubr DWORD PTR [edx-0x1bcdbc9d]
  40ecb1:	adc    cl,BYTE PTR [ebx+0x42defbfd]
  40ecb7:	sahf   
  40ecb8:	or     BYTE PTR [ebx],cl
  40ecba:	stos   BYTE PTR es:[edi],al
  40ecbb:	cld    
  40ecbc:	test   BYTE PTR gs:[edx+ecx*4],ah
  40ecc0:	push   eax
  40ecc1:	data16 fxch st(6)
  40ecc4:	aam    0x57
  40ecc6:	inc    ebx
  40ecc7:	pop    esp
  40ecc8:	icebp  
  40ecc9:	mov    esp,DWORD PTR [edx+0xf]
  40eccc:	push   es
  40eccd:	stos   BYTE PTR es:[edi],al
  40ecce:	inc    ebp
  40eccf:	xor    dh,ch
  40ecd1:	mov    WORD PTR [ecx+0x77],?
  40ecd4:	and    eax,DWORD PTR [ebp-0x39]
  40ecd7:	dec    esi
  40ecd8:	dec    ebp
  40ecd9:	jbe    0x40ecbd
  40ecdb:	mov    esi,0xaa411f43
  40ece0:	(bad)  
  40ece1:	jl     0x40ecde
  40ece3:	xor    DWORD PTR [esi],esi
  40ece5:	inc    ebp
  40ece6:	dec    ecx
  40ece7:	xchg   DWORD PTR [edi],eax
  40ece9:	mov    ah,0xca
  40eceb:	cmp    esp,DWORD PTR [ebp+0x6]
  40ecee:	inc    ecx
  40ecef:	mov    edx,DWORD PTR [edx]
  40ecf1:	stc    
  40ecf2:	cmp    edi,0x0
  40ecf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecf6:	cli    
  40ecf7:	lds    eax,FWORD PTR [esi]
  40ecf9:	stos   BYTE PTR es:[edi],al
  40ecfa:	cmp    esp,DWORD PTR [ebp-0x74d5876]
  40ed00:	jge    0x40eca1
  40ed02:	or     DWORD PTR gs:[eax+edx*4-0x192dd09e],eax
  40ed0a:	out    dx,al
  40ed0b:	std    
  40ed0c:	mov    ch,0x55
  40ed0e:	xor    eax,0xbcb170dc
  40ed13:	mov    eax,ds:0xa0339c64
  40ed18:	mov    bh,0x92
  40ed1a:	mov    eax,ds:0x500632e7
  40ed1f:	sub    ax,0x844a
  40ed23:	aaa    
  40ed24:	sub    BYTE PTR [eax+0x5545a5f6],dl
  40ed2a:	inc    edi
  40ed2b:	cmp    esp,DWORD PTR [edx]
  40ed2d:	fisub  DWORD PTR [edi]
  40ed2f:	sti    
  40ed30:	xchg   ebp,eax
  40ed31:	mov    ebx,0xd1d46986
  40ed36:	cli    
  40ed37:	add    edx,edx
  40ed39:	das    
  40ed3a:	pop    ds
  40ed3b:	in     al,0x3a
  40ed3d:	(bad)  
  40ed3e:	std    
  40ed3f:	nop
  40ed40:	call   FWORD PTR [edi+0x2ca669e3]
  40ed46:	and    DWORD PTR [ebx],0xffffffd3
  40ed49:	and    BYTE PTR [esp+ecx*8],0x1d
  40ed4d:	jnp    0x40ece3
  40ed4f:	stos   BYTE PTR es:[edi],al
  40ed50:	xchg   edx,ebp
  40ed52:	sub    al,0xc1
  40ed54:	paddq  mm0,QWORD PTR [edx-0xffc1dc]
  40ed5b:	std    
  40ed5c:	xor    DWORD PTR [ebx+edi*4+0xcc5aea0],ecx
  40ed63:	mov    cl,0x99
  40ed65:	mov    al,ds:0xc22b2e81
  40ed6a:	dec    esp
  40ed6b:	sbb    DWORD PTR [ebx-0x40fb2097],esp
  40ed71:	add    eax,0x88a48624
  40ed76:	(bad)
  40ed79:	frstor [edx+0x799fad5]
  40ed7f:	xchg   ebx,eax
  40ed80:	sbb    ecx,DWORD PTR [edx]
  40ed82:	and    DWORD PTR [ebx+0x1d4c622],esp
  40ed88:	and    eax,0x1861edc6
  40ed8d:	clc    
  40ed8e:	sub    DWORD PTR [edi],0xfffffff7
  40ed91:	sub    DWORD PTR [edi],edx
  40ed93:	and    DWORD PTR [ebp+0xa],esi
  40ed96:	xor    cl,BYTE PTR [esi-0x37ffcc71]
  40ed9c:	rcl    DWORD PTR [edi],1
  40ed9e:	les    ecx,FWORD PTR [ebx]
  40eda0:	mov    ebx,0xdc264202
  40eda5:	and    BYTE PTR [esi-0x4388c05],al
  40edab:	scas   al,BYTE PTR es:[edi]
  40edac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edad:	jl     0x40ed60
  40edaf:	dec    eax
  40edb0:	xacquire xchg DWORD PTR [ebp+0x45f7214e],ebp
  40edb7:	retf   0x3054
  40edba:	jo     0x40ee0d
  40edbc:	fbld   TBYTE PTR [edx-0x191f13be]
  40edc2:	add    edx,esp
  40edc4:	ins    DWORD PTR es:[edi],dx
  40edc5:	cli    
  40edc6:	call   0xb18d:0x7f0fd459
  40edcd:	cmp    ch,BYTE PTR [edx-0x27]
  40edd0:	or     ecx,DWORD PTR [ebx+0x223ca37f]
  40edd6:	adc    eax,0x17ecbdc7
  40eddb:	xchg   esp,eax
  40eddc:	adc    BYTE PTR [esi-0x6b],cl
  40eddf:	and    al,0x3a
  40ede1:	sbb    esp,edi
  40ede3:	jbe    0x40ee2e
  40ede5:	dec    esi
  40ede6:	sti    
  40ede7:	fisttp DWORD PTR [edx+0x3d4842ce]
  40eded:	pusha  
  40edee:	adc    DWORD PTR [esi+0x2b],0xdf2f4677
  40edf5:	jnp    0x40ee46
  40edf7:	jecxz  0x40ee0f
  40edf9:	xchg   edx,eax
  40edfa:	push   esp
  40edfb:	cdq    
  40edfc:	dec    ecx
  40edfd:	and    BYTE PTR [ebp+0x675d2b35],0x72
  40ee04:	cmc    
  40ee05:	popa   
  40ee06:	and    ebx,DWORD PTR [edx-0x7f]
  40ee09:	leave  
  40ee0a:	imul   esi,esi,0x56
  40ee0d:	shl    BYTE PTR [ebx+0x2c80b9ec],cl
  40ee13:	fnstenv [ebp+0x68]
  40ee16:	mov    dl,0xe9
  40ee18:	add    DWORD PTR [edx+0x43287904],edi
  40ee1e:	aaa    
  40ee1f:	mov    esi,0xb466ecd
  40ee24:	jg     0x40ee74
  40ee26:	pop    edi
  40ee27:	mov    dh,dh
  40ee29:	(bad)  
  40ee2b:	(bad)  
  40ee2d:	out    dx,al
  40ee2e:	mov    esp,0xb746797c
  40ee33:	inc    ebx
  40ee34:	pop    ebp
  40ee35:	lea    eax,[ecx]
  40ee37:	mov    edx,0xece6e6d7
  40ee3c:	pushf  
  40ee3d:	in     al,0x4f
  40ee3f:	icebp  
  40ee40:	dec    ecx
  40ee41:	adc    esp,edi
  40ee43:	jmp    0x40ee09
  40ee45:	jns    0x40ee78
  40ee47:	leave  
  40ee48:	ja     0x40ee71
  40ee4a:	fnstenv [eax+0x1f1fd345]
  40ee50:	push   0xffffffed
  40ee52:	ins    BYTE PTR es:[edi],dx
  40ee53:	inc    ecx
  40ee54:	or     edi,0x3a2084ca
  40ee5a:	(bad)  
  40ee5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee5c:	add    DWORD PTR [esi+eiz*2-0x1c],ebp
  40ee60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee61:	xor    BYTE PTR [edi],0xc
  40ee64:	hlt    
  40ee65:	in     al,dx
  40ee66:	xor    bl,BYTE PTR [ecx+edi*8+0x30]
  40ee6a:	or     BYTE PTR [ebp-0x4b096b9e],ah
  40ee70:	sbb    bh,BYTE PTR [ecx-0x6afa621a]
  40ee76:	loopne 0x40ee49
  40ee78:	add    eax,DWORD PTR [ebx+0x77]
  40ee7b:	mov    ch,0xa4
  40ee7d:	sub    edx,esp
  40ee7f:	mov    bl,ah
  40ee81:	scas   al,BYTE PTR es:[edi]
  40ee82:	inc    ebp
  40ee83:	and    DWORD PTR [edx+0x31],0xffffff9f
  40ee87:	inc    edi
  40ee88:	jecxz  0x40ee19
  40ee8a:	jecxz  0x40ee54
  40ee8c:	add    al,0x18
  40ee8e:	out    dx,al
  40ee8f:	dec    esp
  40ee90:	fmul   QWORD PTR [esi+edi*8]
  40ee93:	mov    ecx,0xaef6f831
  40ee98:	int    0x3d
  40ee9a:	jnp    0x40ee5e
  40ee9c:	bound  edx,QWORD PTR [esi-0x19]
  40ee9f:	mov    esi,0xa7cc924e
  40eea4:	frstor [ebx+ebx*4-0x6353bfb7]
  40eeab:	sub    eax,0x3d94bbfc
  40eeb0:	shr    BYTE PTR [ecx+0x4c],cl
  40eeb3:	jg     0x40ee8c
  40eeb5:	jmp    0xbb951cc8
  40eeba:	cmp    eax,0x6ead3147
  40eebf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eec0:	call   FWORD PTR [edx-0x31498e86]
  40eec6:	push   ebx
  40eec7:	add    edi,esi
  40eec9:	add    al,0x1a
  40eecb:	add    BYTE PTR [ecx+0xa],ah
  40eece:	(bad)  
  40eecf:	jns    0x40ef1c
  40eed1:	ds pop ss
  40eed3:	dec    esp
  40eed4:	sbb    BYTE PTR [ecx-0x7a640da5],dh
  40eeda:	aas    
  40eedb:	push   0x234768cc
  40eee0:	push   ecx
  40eee1:	sahf   
  40eee2:	sbb    DWORD PTR [ecx+edi*8+0x76],0xb1ba2429
  40eeea:	mov    ebx,0x2361f073
  40eeef:	dec    edi
  40eef0:	or     al,0x2e
  40eef2:	leave  
  40eef3:	mov    al,BYTE PTR [edx]
  40eef5:	outs   dx,DWORD PTR ds:[esi]
  40eef6:	or     eax,0xb0908f41
  40eefb:	mov    dh,0x46
  40eefd:	cli    
  40eefe:	and    al,0xaa
  40ef00:	add    al,0x82
  40ef02:	mov    bl,0x17
  40ef04:	cmp    ecx,DWORD PTR [eax-0x48]
  40ef07:	lahf   
  40ef08:	pop    bp
  40ef0a:	popf   
  40ef0b:	cld    
  40ef0c:	retf   
  40ef0d:	push   ds
  40ef0e:	(bad)  
  40ef10:	out    0x76,eax
  40ef12:	cs sub al,0xa5
  40ef15:	mul    DWORD PTR [edx-0x7c]
  40ef18:	test   al,0xfb
  40ef1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef1b:	mov    eax,0xaa24e8c7
  40ef20:	leave  
  40ef21:	or     ah,BYTE PTR [eax+0x2ee879f5]
  40ef27:	adc    DWORD PTR [ebx],0x10622f33
  40ef2d:	call   0x2cd9:0xd717821f
  40ef34:	cmp    eax,0x64c86845
  40ef39:	dec    edi
  40ef3a:	xchg   DWORD PTR [edx+0x17791764],edi
  40ef40:	xor    al,0xc8
  40ef42:	call   0x7338:0x7c24a8f3
  40ef49:	add    ebx,eax
  40ef4b:	xchg   ecx,eax
  40ef4c:	(bad)  [edi+0x619d981]
  40ef52:	pushf  
  40ef53:	or     eax,0xda47500e
  40ef58:	test   eax,0x8c5ca65a
  40ef5d:	cli    
  40ef5e:	mov    eax,0x1d7748b1
  40ef63:	sbb    al,0xc1
  40ef65:	xchg   edi,eax
  40ef66:	pop    edx
  40ef67:	mov    ds:0xe6a36756,eax
  40ef6c:	mov    dh,BYTE PTR [esi+0x1764e0bb]
  40ef72:	dec    esp
  40ef73:	mov    bh,0x9a
  40ef75:	or     eax,0x41847bad
  40ef7a:	pop    ss
  40ef7b:	(bad)  
  40ef7c:	std    
  40ef7d:	sti    
  40ef7e:	popf   
  40ef7f:	rcl    BYTE PTR [ecx+ebp*2+0x5c9692e],1
  40ef86:	lods   al,BYTE PTR ds:[esi]
  40ef87:	ds push es
  40ef89:	xlat   BYTE PTR ds:[ebx]
  40ef8a:	push   ebx
  40ef8b:	or     dl,dl
  40ef8d:	xlat   BYTE PTR ds:[ebx]
  40ef8e:	std    
  40ef8f:	pop    ecx
  40ef90:	test   al,0xf
  40ef93:	gs mov al,0x1e
  40ef96:	test   eax,0xffbf2597
  40ef9b:	out    0x96,eax
  40ef9d:	push   ebp
  40ef9e:	and    DWORD PTR [ebx+0x9],0x19
  40efa2:	fdiv   st,st(3)
  40efa4:	sub    ecx,DWORD PTR [eax-0x32]
  40efa7:	pop    esp
  40efa8:	cld    
  40efa9:	jecxz  0x40efa7
  40efab:	cwde   
  40efac:	pop    ds
  40efad:	jecxz  0x40efaa
  40efaf:	fld    QWORD PTR [edx+ecx*8+0x3e]
  40efb3:	cmp    eax,DWORD PTR [eax-0x1]
  40efb6:	xchg   DWORD PTR [eax-0x5a],esi
  40efb9:	inc    eax
  40efba:	addr16 pushf 
  40efbc:	ja     0x40f01b
  40efbe:	cwde   
  40efbf:	push   esp
  40efc0:	inc    edi
  40efc1:	in     al,dx
  40efc2:	shl    edi,cl
  40efc4:	inc    ebx
  40efc5:	xchg   edi,eax
  40efc6:	enter  0x239f,0xef
  40efca:	outs   dx,BYTE PTR ds:[esi]
  40efcb:	ror    DWORD PTR [ebp+0x5b],cl
  40efce:	nop
  40efcf:	sbb    DWORD PTR [edx-0x75],esi
  40efd2:	jbe    0x40efa2
  40efd4:	js     0x40ef67
  40efd6:	jg     0x40efcf
  40efd8:	xlat   BYTE PTR ds:[ebx]
  40efd9:	and    eax,edi
  40efdb:	movsx  di,BYTE PTR [eax+0x1]
  40efe0:	mov    ebx,0x3b50
  40efe5:	sub    di,bx
  40efe8:	mov    ebx,0x8a8c
  40efed:	xor    di,bx
  40eff0:	mov    ebx,0x4f86
  40eff5:	cmp    di,bx
  40eff8:	jne    0x40f020
  40effe:	movsx  di,BYTE PTR [eax]
  40f002:	mov    ebx,0x3b50
  40f007:	sub    di,bx
  40f00a:	mov    ebx,0x8a8c
  40f00f:	xor    di,bx
  40f012:	mov    ebx,0x4e71
  40f017:	cmp    di,bx
  40f01a:	je     0x40f030
  40f020:	mov    edi,DWORD PTR [ebp-0x10]
  40f023:	xor    edi,ecx
  40f025:	mov    ebx,esi
  40f027:	sub    ebx,edi
  40f029:	add    eax,ebx
  40f02b:	jmp    0x40efdb
  40f030:	mov    esi,DWORD PTR [ebp-0x14]
  40f033:	mov    esi,DWORD PTR [esi]
  40f035:	mov    edi,DWORD PTR [eax+0x3c]
  40f038:	lea    esi,[edi+esi*8+0x78]
  40f03c:	mov    esi,DWORD PTR [esi+eax*1]
  40f03f:	mov    DWORD PTR [ebp-0x8],esi
  40f042:	mov    esi,DWORD PTR [ebp+0x8]
  40f045:	xor    esi,ecx
  40f047:	add    esi,edx
  40f049:	mov    DWORD PTR [ebp-0x14],esi
  40f04c:	mov    esi,DWORD PTR [ebp+0x8]
  40f04f:	mov    edi,DWORD PTR [ebp-0x8]
  40f052:	xor    esi,ecx
  40f054:	add    esi,edx
  40f056:	pop    ebx
  40f057:	cmp    edi,esi
  40f059:	jne    0x40f077
  40f05f:	mov    eax,DWORD PTR [ebp+0xc]
  40f062:	xor    eax,ecx
  40f064:	mov    ecx,DWORD PTR [ebp-0x8]
  40f067:	add    eax,edx
  40f069:	imul   eax,ecx
  40f06c:	mov    DWORD PTR [ebp-0x8],eax
  40f06f:	push   DWORD PTR [ebp+0x18]
  40f072:	jmp    0x40f0cb
  40f077:	mov    ecx,DWORD PTR [ebp-0x8]
  40f07a:	add    ecx,eax
  40f07c:	mov    DWORD PTR [ebp-0x14],ecx
  40f07f:	mov    ecx,DWORD PTR [ebp-0x14]
  40f082:	mov    ecx,DWORD PTR [ecx+0xc]
  40f085:	movsx  cx,BYTE PTR [ecx+eax*1]
  40f08a:	mov    edx,0x3b50
  40f08f:	sub    cx,dx
  40f092:	mov    edx,0x8a8c
  40f097:	xor    cx,dx
  40f09a:	mov    edx,0x4e77
  40f09f:	cmp    cx,dx
  40f0a2:	jne    0x40f06f
  40f0a8:	mov    ecx,DWORD PTR ds:0x42e313
  40f0ae:	mov    ecx,DWORD PTR [ecx+0x198]
  40f0b4:	mov    DWORD PTR [ecx],eax
  40f0b6:	jmp    0x40f0dc
  40f0bb:	mov    ecx,DWORD PTR [ebp+0x18]
  40f0be:	cmp    ecx,0xf89c85b8
  40f0c4:	jne    0x40f0dc
  40f0ca:	push   eax
  40f0cb:	push   DWORD PTR [ebp+0x14]
  40f0ce:	push   DWORD PTR [ebp+0x10]
  40f0d1:	push   DWORD PTR [ebp+0xc]
  40f0d4:	push   DWORD PTR [ebp+0x8]
  40f0d7:	call   0x40c7f6
  40f0dc:	pop    edi
  40f0dd:	pop    esi
  40f0de:	leave  
  40f0df:	ret    0x14
  40f0e2:	push   ebp
  40f0e3:	mov    ebp,esp
  40f0e5:	sub    esp,0xc
  40f0e8:	xor    ecx,ecx
  40f0ea:	push   esi
  40f0eb:	mov    esi,DWORD PTR ds:0x418f55
  40f0f1:	mov    edx,DWORD PTR ds:0x418f5d
  40f0f7:	sub    edx,esi
  40f0f9:	add    esi,DWORD PTR [esi+edx*1]
  40f0fc:	mov    esi,0xf89c85b9
  40f101:	add    DWORD PTR ds:0x42c008,0x5d21
  40f10b:	mov    DWORD PTR [ebp-0x8],esi
  40f10e:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  40f115:	push   edi
  40f116:	or     edi,DWORD PTR ds:0x42a014
  40f11c:	mov    eax,eax
  40f11e:	mov    edi,DWORD PTR ds:0x42d000
  40f124:	xor    DWORD PTR ds:0x42a000,edi
  40f12a:	mov    eax,DWORD PTR [ebp-0x4]
  40f12d:	mov    edi,DWORD PTR [ebp-0x8]
  40f130:	mov    ecx,0x7510899
  40f135:	inc    DWORD PTR ds:0x429014
  40f13b:	xor    eax,ecx
  40f13d:	movzx  edx,WORD PTR ds:0x42c018
  40f144:	adc    edx,DWORD PTR ds:0x429028
  40f14a:	mov    DWORD PTR ds:0x42c018,edx
  40f150:	xor    edi,ecx
  40f152:	mov    edx,0x3272e0
  40f157:	and    DWORD PTR ds:0x429028,0x42b018
  40f161:	add    edi,edx
  40f163:	add    eax,edx
  40f165:	imul   eax,edi
  40f168:	movzx  edi,WORD PTR ds:0x42c018
  40f16f:	mov    edi,DWORD PTR [ebp+0xc]
  40f172:	cmp    edi,eax
  40f174:	mov    DWORD PTR ds:0x42d014,0x3f58
  40f17e:	je     0x4115a0
  40f184:	mov    DWORD PTR [ebp-0xc],esi
  40f187:	sub    esi,eax
  40f189:	mov    eax,DWORD PTR [ebp-0xc]
  40f18c:	xor    esi,esi
  40f18e:	add    esi,DWORD PTR ds:0x42d01c
  40f194:	adc    DWORD PTR ds:0x42c008,esi
  40f19a:	mov    esi,DWORD PTR [ebp+0xc]
  40f19d:	xor    eax,ecx
  40f19f:	add    DWORD PTR ds:0x42a014,0x1458
  40f1a9:	lea    eax,[eax*8+0x1939778]
  40f1b0:	xor    DWORD PTR ds:0x429008,0x1867
  40f1ba:	mov    eax,DWORD PTR [esi+eax*1]
  40f1bd:	or     esi,DWORD PTR ds:0x429020
  40f1c3:	mov    DWORD PTR [ebp+0xc],eax
  40f1c6:	mov    eax,DWORD PTR [ebp-0x4]
  40f1c9:	mov    DWORD PTR ds:0x42a004,0x19
  40f1d3:	cmp    DWORD PTR ds:0x42a004,0x0
  40f1da:	je     0x40f224
  40f1e0:	cmp    DWORD PTR ds:0x42a004,0x6
  40f1e7:	jne    0x40f1f8
  40f1ed:	push   0x42e000
  40f1f2:	call   DWORD PTR ds:0x42ecab
  40f1f8:	cmp    DWORD PTR ds:0x42a004,0x7
  40f1ff:	jne    0x40f212
  40f205:	mov    esi,DWORD PTR ds:0x42a004
  40f20b:	dec    esi
  40f20c:	mov    DWORD PTR ds:0x42a004,esi
  40f212:	mov    esi,DWORD PTR ds:0x42a004
  40f218:	dec    esi
  40f219:	mov    DWORD PTR ds:0x42a004,esi
  40f21f:	jmp    0x40f1d3
  40f224:	mov    esi,DWORD PTR [ebp-0x8]
  40f227:	xor    eax,ecx
  40f229:	xor    esi,ecx
  40f22b:	add    esi,edx
  40f22d:	add    eax,edx
  40f22f:	imul   eax,esi
  40f232:	mov    esi,DWORD PTR [ebp+0xc]
  40f235:	cmp    esi,eax
  40f237:	je     0x4115a0
  40f23d:	jmp    0x411585
  40f242:	xor    DWORD PTR [ebx+0x7483b0d9],ebx
  40f248:	aaa    
  40f249:	fwait
  40f24a:	mov    eax,0xed5ef52d
  40f24f:	shl    BYTE PTR [ecx],0x8c
  40f252:	inc    ebp
  40f253:	leave  
  40f254:	jp     0x40f2d0
  40f256:	inc    edi
  40f257:	pop    edi
  40f258:	jp     0x40f2d4
  40f25a:	ror    DWORD PTR [ebx+0x50],1
  40f25d:	nop
  40f25e:	cli    
  40f25f:	cmp    al,0x76
  40f261:	ss xchg ebx,eax
  40f263:	int3   
  40f264:	mov    bh,0x46
  40f266:	lock xor al,0xae
  40f269:	adc    al,0x77
  40f26b:	or     DWORD PTR [esi+0x74],ebp
  40f26e:	nop
  40f26f:	retf   0xebdc
  40f272:	lahf   
  40f273:	clc    
  40f274:	xchg   ebp,ecx
  40f276:	xchg   edi,eax
  40f277:	mov    ecx,0x9916f6cb
  40f27c:	test   eax,0xa12b1eb5
  40f281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f282:	inc    ecx
  40f283:	mov    dh,0x85
  40f285:	push   edi
  40f286:	sub    esi,edi
  40f288:	mov    ecx,DWORD PTR [edx]
  40f28a:	popf   
  40f28b:	xchg   ah,dl
  40f28d:	out    dx,al
  40f28e:	or     al,0x5f
  40f290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f291:	lock cdq 
  40f293:	pop    ebx
  40f294:	repnz in al,0x8
  40f297:	adc    edi,DWORD PTR [ebp+0x71]
  40f29a:	sub    bh,BYTE PTR [ecx-0x2d2dd4a7]
  40f2a0:	push   0xffffffeb
  40f2a2:	lock mov ds:0x975ca1e8,eax
  40f2a8:	add    eax,0x15a4ad10
  40f2ad:	shl    BYTE PTR [ebx+0x28],cl
  40f2b0:	mov    esp,0x66abe37d
  40f2b5:	ss mov bl,0x45
  40f2b8:	mov    ecx,0xe88a872d
  40f2bd:	dec    ecx
  40f2be:	inc    edx
  40f2bf:	push   ebp
  40f2c0:	mov    ah,al
  40f2c2:	into   
  40f2c3:	mov    dh,0x2b
  40f2c5:	mov    BYTE PTR [ecx-0x3a],cl
  40f2c8:	mov    eax,0x28f5b861
  40f2cd:	lds    esi,FWORD PTR [edx]
  40f2cf:	mov    esp,0xfba2f13c
  40f2d4:	repz lock xchg edi,eax
  40f2d7:	jns    0x40f2de
  40f2d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2da:	dec    eax
  40f2db:	daa    
  40f2dc:	push   es
  40f2dd:	mov    ebp,0xf2f18d8b
  40f2e2:	sbb    eax,0x1e7bc6e0
  40f2e7:	inc    eax
  40f2e8:	iret   
  40f2e9:	jmp    0x40f27a
  40f2eb:	xchg   ebp,eax
  40f2ec:	inc    ecx
  40f2ed:	dec    ebp
  40f2ee:	aaa    
  40f2ef:	hlt    
  40f2f0:	popf   
  40f2f1:	and    bh,BYTE PTR [ecx]
  40f2f3:	or     al,0x7e
  40f2f5:	jae    0x40f340
  40f2f7:	(bad)  
  40f2f8:	cmp    BYTE PTR [edx],bl
  40f2fa:	jnp    0x40f2de
  40f2fc:	xchg   esp,eax
  40f2fd:	dec    ebx
  40f2fe:	add    eax,0xf47726d5
  40f303:	aad    0x5b
  40f305:	adc    al,0x10
  40f307:	fsub   QWORD PTR [ecx+0x37]
  40f30a:	pop    ebx
  40f30b:	or     eax,DWORD PTR [ecx-0x4c]
  40f30e:	imul   BYTE PTR [eax-0x18]
  40f311:	repz daa 
  40f313:	xchg   esi,eax
  40f314:	pop    es
  40f315:	and    eax,0xf23da30a
  40f31a:	and    eax,0xb10c0e14
  40f31f:	mov    eax,ds:0x6a9d4df5
  40f324:	sbb    al,0x8e
  40f326:	mov    bh,0xe5
  40f328:	push   es
  40f329:	push   edx
  40f32a:	leave  
  40f32b:	adc    al,0xec
  40f32d:	pop    ss
  40f32e:	push   ecx
  40f32f:	pop    ebx
  40f330:	sbb    ah,0x31
  40f333:	xchg   esp,eax
  40f334:	out    0x5c,al
  40f336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f337:	test   DWORD PTR [ecx-0x40],ebp
  40f33a:	xchg   ecx,eax
  40f33b:	push   esi
  40f33c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f33d:	mov    eax,0xf3188b28
  40f342:	outs   dx,DWORD PTR ds:[esi]
  40f343:	sar    eax,cl
  40f345:	mov    dh,0xc9
  40f347:	ds ror al,cl
  40f34a:	add    al,0xf3
  40f34c:	les    ecx,FWORD PTR [edx+edx*1+0x658626fd]
  40f353:	sub    eax,DWORD PTR [esi+0x6a9fcefc]
  40f359:	cmp    ah,BYTE PTR [ebx-0x77fc40bc]
  40f35f:	outs   dx,BYTE PTR es:[esi]
  40f361:	add    eax,DWORD PTR [eax-0x25]
  40f364:	enter  0x1050,0x7a
  40f368:	mov    esp,0x1381e208
  40f36d:	sahf   
  40f36e:	pop    ss
  40f36f:	jg     0x40f3af
  40f371:	sub    edx,DWORD PTR [eax-0x9]
  40f374:	test   DWORD PTR [ecx-0x1c1edeb2],eax
  40f37a:	jecxz  0x40f2fc
  40f37c:	dec    ebp
  40f37d:	outs   dx,BYTE PTR ds:[esi]
  40f37e:	push   ebx
  40f37f:	in     eax,0xd
  40f381:	(bad)  
  40f382:	push   0xffffffb5
  40f384:	jae    0x40f3ec
  40f386:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f387:	mov    ecx,0x2373898
  40f38c:	cmc    
  40f38d:	cwde   
  40f38e:	and    edx,DWORD PTR [esi-0x35]
  40f391:	sti    
  40f392:	mov    eax,ds:0x8e02a30a
  40f397:	xchg   esi,eax
  40f398:	cmp    dh,ch
  40f39a:	mov    edi,0x566e7ed4
  40f39f:	sti    
  40f3a0:	lods   eax,DWORD PTR ds:[esi]
  40f3a1:	scas   eax,DWORD PTR es:[edi]
  40f3a2:	dec    esi
  40f3a3:	xor    cl,BYTE PTR [edx]
  40f3a5:	mov    ds:0x43bce4bf,al
  40f3aa:	ror    cl,1
  40f3ac:	ret    0xae78
  40f3af:	in     al,dx
  40f3b0:	xchg   edi,eax
  40f3b1:	mov    bl,0x72
  40f3b3:	ror    DWORD PTR [edx-0x34],0x4e
  40f3b7:	add    ch,ch
  40f3b9:	mov    ds:0xaeca4583,al
  40f3be:	jge    0x40f3d9
  40f3c0:	sub    al,BYTE PTR [edi-0x12]
  40f3c3:	mov    ebp,0x7b23fed4
  40f3c8:	scas   al,BYTE PTR es:[edi]
  40f3c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3ca:	mov    ecx,0x60424fb0
  40f3cf:	ins    BYTE PTR es:[edi],dx
  40f3d0:	mov    DWORD PTR [edx-0xe],esp
  40f3d3:	lea    edx,[ebx-0x36]
  40f3d6:	add    DWORD PTR [edi],eax
  40f3d8:	lds    ebx,FWORD PTR [ebx-0xc]
  40f3db:	push   ecx
  40f3dc:	mov    al,ds:0x7300e3ea
  40f3e1:	pop    esp
  40f3e2:	sbb    esi,esi
  40f3e4:	dec    esi
  40f3e5:	call   0xd6e7e828
  40f3ea:	cmp    eax,0xefba7bf8
  40f3ef:	bswap  esp
  40f3f1:	inc    ebx
  40f3f2:	xor    BYTE PTR [ebx],al
  40f3f4:	mov    ds:0x502e7293,al
  40f3f9:	stc    
  40f3fa:	or     DWORD PTR [ecx],eax
  40f3fc:	jno    0x40f3ce
  40f3fe:	int3   
  40f3ff:	mov    ?,esp
  40f401:	mov    eax,ds:0x405de44f
  40f406:	test   DWORD PTR [ecx+0x1d293f90],esi
  40f40c:	dec    ecx
  40f40d:	dec    edi
  40f40e:	std    
  40f40f:	jns    0x40f3f6
  40f411:	outs   dx,BYTE PTR ds:[esi]
  40f412:	cmp    BYTE PTR [ebx],al
  40f414:	jmp    0x40f439
  40f416:	int3   
  40f417:	call   0x6a7af6db
  40f41c:	aas    
  40f41d:	pop    edx
  40f41e:	cmp    al,0x33
  40f420:	jns    0x40f3cb
  40f422:	mov    eax,ds:0x94f80611
  40f427:	cwde   
  40f428:	cli    
  40f429:	outs   dx,DWORD PTR ds:[esi]
  40f42a:	loopne 0x40f42b
  40f42c:	les    ebp,FWORD PTR [edi+eiz*1]
  40f42f:	mov    eax,ds:0x871837a2
  40f434:	or     al,0x39
  40f436:	stos   DWORD PTR es:[edi],eax
  40f437:	dec    edi
  40f438:	dec    esp
  40f439:	xchg   ecx,eax
  40f43a:	daa    
  40f43b:	adc    esp,DWORD PTR [ebx+0x4]
  40f43e:	push   ecx
  40f43f:	cmp    al,0x49
  40f441:	pop    ecx
  40f442:	scas   al,BYTE PTR es:[edi]
  40f443:	ds dec edi
  40f445:	and    ecx,DWORD PTR [ecx]
  40f447:	or     ah,dh
  40f449:	cs xchg edi,eax
  40f44b:	xlat   BYTE PTR ds:[ebx]
  40f44c:	iret   
  40f44d:	xor    BYTE PTR [ecx-0x5a],dl
  40f450:	dec    esi
  40f451:	mov    ebx,0xe9d8fe70
  40f456:	lock inc esi
  40f458:	push   ebx
  40f459:	and    ebx,edi
  40f45b:	leave  
  40f45c:	cmp    bh,bh
  40f45e:	fucomi st,st(1)
  40f460:	push   ebp
  40f461:	jmp    0xb7e1:0x90f7ea01
  40f468:	push   esp
  40f469:	dec    edi
  40f46a:	xor    eax,0x6c50a9b
  40f46f:	push   edx
  40f470:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f471:	nop
  40f472:	sub    DWORD PTR [edx+0x7cb2e5cd],edx
  40f478:	jno    0x40f457
  40f47a:	push   ss
  40f47b:	retf   
  40f47c:	enter  0xce38,0x93
  40f480:	or     al,0x3b
  40f482:	(bad)  
  40f483:	jns    0x40f453
  40f485:	sahf   
  40f486:	lods   al,BYTE PTR ds:[esi]
  40f487:	test   BYTE PTR [ebx+eax*2+0x78],0x22
  40f48c:	pop    eax
  40f48d:	jl     0x40f493
  40f48f:	inc    edi
  40f490:	mov    bl,0x39
  40f492:	mov    BYTE PTR [eax],al
  40f494:	test   al,0x2a
  40f496:	(bad)  
  40f497:	hlt    
  40f498:	add    edi,DWORD PTR [ebp+0x79]
  40f49b:	mov    bl,0x5a
  40f49d:	push   ebp
  40f49e:	push   0x71
  40f4a0:	in     al,0x59
  40f4a2:	test   BYTE PTR [edi+eax*2-0xf],0x2e
  40f4a7:	in     al,0x85
  40f4a9:	mov    ds:0x56cbd58b,al
  40f4ae:	nop
  40f4af:	mov    DWORD PTR [ecx+ebp*4-0x5a],ecx
  40f4b3:	hlt    
  40f4b4:	mov    al,0x37
  40f4b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4b7:	sbb    al,0xd5
  40f4b9:	cmp    eax,0xf8a340bb
  40f4be:	mov    ecx,0xc133f3f0
  40f4c3:	cs (bad) 
  40f4c5:	es pop edx
  40f4c7:	push   edx
  40f4c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4c9:	and    ebx,eax
  40f4cb:	lods   eax,DWORD PTR ds:[esi]
  40f4cc:	or     ah,dh
  40f4ce:	push   es
  40f4cf:	call   DWORD PTR [ecx]
  40f4d1:	pusha  
  40f4d2:	push   0xf51728fa
  40f4d7:	sbb    DWORD PTR [edx],ecx
  40f4d9:	nop
  40f4da:	lea    eax,[ecx+0x33ed019c]
  40f4e0:	jp     0x40f484
  40f4e2:	test   DWORD PTR [esi-0x62],ebp
  40f4e5:	lods   al,BYTE PTR ds:[esi]
  40f4e6:	stos   DWORD PTR es:[edi],eax
  40f4e7:	dec    esp
  40f4e8:	and    ecx,DWORD PTR [ecx+eiz*8+0x6131d7a6]
  40f4ef:	sti    
  40f4f0:	les    ebp,FWORD PTR [eax+ebx*4+0x4d]
  40f4f4:	dec    ecx
  40f4f5:	retf   0x33b0
  40f4f8:	js     0x40f4a5
  40f4fa:	xor    BYTE PTR cs:[edx],0x62
  40f4fe:	and    edx,DWORD PTR [ebx+0x6bb49308]
  40f504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f505:	mov    dh,0x50
  40f507:	push   ebp
  40f508:	out    0x15,eax
  40f50a:	fisttp DWORD PTR [eax]
  40f50c:	sub    al,0x31
  40f50e:	push   edi
  40f50f:	push   es
  40f510:	dec    ebp
  40f511:	out    0x54,eax
  40f513:	push   edx
  40f514:	je     0x40f500
  40f516:	or     BYTE PTR ss:[eax+ebp*8-0x15],ch
  40f51b:	push   eax
  40f51c:	in     al,0x91
  40f51e:	cmp    ah,cl
  40f520:	pop    ds
  40f521:	dec    edi
  40f522:	(bad)  
  40f524:	(bad)  
  40f525:	call   0x3afbb944
  40f52a:	jg     0x40f4e7
  40f52c:	in     al,dx
  40f52d:	dec    ebp
  40f52e:	sbb    dh,BYTE PTR [ebp+0x2c4a2512]
  40f534:	sub    DWORD PTR [edx],edi
  40f536:	jecxz  0x40f529
  40f538:	mov    ds:0x33599c4,al
  40f53d:	imul   ebp,DWORD PTR [esp+ebx*2+0x36],0xaf001972
  40f545:	push   ebx
  40f546:	xchg   edi,eax
  40f547:	shr    DWORD PTR [esi-0x1937d16f],1
  40f54d:	fmul   st(1),st
  40f54f:	mov    cl,0xc5
  40f551:	mov    ch,0x74
  40f553:	popf   
  40f554:	pushf  
  40f555:	add    ch,BYTE PTR [eax-0x5c]
  40f558:	out    0x94,eax
  40f55a:	pusha  
  40f55b:	adc    ah,ch
  40f55d:	and    ebx,edx
  40f55f:	hlt    
  40f560:	xchg   dl,bl
  40f562:	test   eax,0x2a5f3a2d
  40f567:	daa    
  40f568:	ss aam 0x79
  40f56b:	mov    DWORD PTR [ecx-0x79],eax
  40f56e:	push   ebx
  40f56f:	int3   
  40f570:	fild   DWORD PTR [esi+0x404e5ec8]
  40f576:	jns    0x40f5d5
  40f578:	sbb    eax,0xc019538f
  40f57d:	adc    DWORD PTR [bx+di+0x1d],esi
  40f581:	(bad)  
  40f582:	and    ecx,esi
  40f584:	dec    edx
  40f585:	pop    esp
  40f586:	int    0x90
  40f588:	enter  0x6f6b,0x6c
  40f58c:	imul   eax,esi,0x497ad9fa
  40f592:	jge    0x40f5e1
  40f594:	xor    BYTE PTR [edi-0x48],0x25
  40f598:	(bad)
  40f59c:	jmp    0x6df498f1
  40f5a1:	inc    edx
  40f5a2:	add    al,0xfd
  40f5a4:	and    eax,0x2f020d91
  40f5a9:	cmp    BYTE PTR [ebx+edi*4+0x6d87ef40],bl
  40f5b0:	jne    0x40f597
  40f5b2:	ins    DWORD PTR es:[edi],dx
  40f5b3:	push   0x44
  40f5b5:	dec    edi
  40f5b6:	and    BYTE PTR [ecx+0x18],ah
  40f5b9:	ja     0x40f593
  40f5bb:	xor    esp,DWORD PTR [edx*8+0x37ef1fd]
  40f5c2:	imul   edx,DWORD PTR [edi-0x29],0xffffff84
  40f5c6:	fmul   QWORD PTR [edx]
  40f5c8:	mov    dl,0xa7
  40f5ca:	das    
  40f5cb:	jmp    0x788c:0x1b122abf
  40f5d2:	pop    edi
  40f5d3:	cmc    
  40f5d4:	fs pop ebp
  40f5d6:	lods   eax,DWORD PTR ds:[esi]
  40f5d7:	dec    esp
  40f5d8:	jmp    0xc9deaec7
  40f5dd:	xchg   DWORD PTR [ebx+ebx*4+0x37628b3d],ebp
  40f5e4:	test   al,0x10
  40f5e6:	sub    DWORD PTR es:[eax],esi
  40f5e9:	add    DWORD PTR [edi],esi
  40f5eb:	dec    eax
  40f5ec:	jl     0x40f629
  40f5ee:	push   edi
  40f5ef:	mov    BYTE PTR [edx-0x38],ah
  40f5f2:	test   DWORD PTR [edx+0x15dfb67b],esi
  40f5f8:	inc    ecx
  40f5f9:	sbb    ebp,esi
  40f5fb:	hlt    
  40f5fc:	pop    ebp
  40f5fd:	cld    
  40f5fe:	lods   eax,DWORD PTR ds:[esi]
  40f5ff:	in     al,0x50
  40f601:	ds jecxz 0x40f5f6
  40f604:	push   0xffffffa6
  40f606:	cdq    
  40f607:	sub    DWORD PTR [eax],0x1ce008df
  40f60d:	adc    DWORD PTR [esi+0x1046d7fd],ebx
  40f613:	add    edx,DWORD PTR [eax]
  40f615:	sahf   
  40f616:	into   
  40f617:	push   ebp
  40f618:	push   0x475c4a80
  40f61d:	push   ss
  40f61e:	and    eax,0x704346b3
  40f623:	fist   WORD PTR [ebx-0x51]
  40f626:	mov    al,BYTE PTR [edx]
  40f628:	mov    cl,BYTE PTR [edi+0x2b]
  40f62b:	mov    ebp,0xa50c72b5
  40f630:	inc    ebx
  40f631:	push   0x6eba4c9d
  40f636:	xor    al,0xb8
  40f638:	bound  ebp,QWORD PTR [ebp+0x6c]
  40f63b:	fmul   st(7),st
  40f63d:	outs   dx,BYTE PTR ds:[esi]
  40f63e:	xchg   ecx,eax
  40f63f:	xchg   ebp,eax
  40f640:	ds mov al,0x3
  40f643:	ss iret 
  40f645:	aad    0xd2
  40f647:	dec    edi
  40f648:	sbb    ebx,esi
  40f64a:	add    BYTE PTR [ebx+0x17],dh
  40f64d:	add    cl,BYTE PTR [esi]
  40f64f:	xor    al,0x5e
  40f651:	jg     0x40f68c
  40f653:	shl    ecx,0x5b
  40f656:	loopne 0x40f615
  40f658:	push   0x45
  40f65a:	lods   al,BYTE PTR ds:[esi]
  40f65b:	add    bl,ah
  40f65d:	inc    ecx
  40f65e:	pop    eax
  40f65f:	mov    edx,DWORD PTR [eax-0x188af09e]
  40f665:	mov    cl,0xf0
  40f667:	cli    
  40f668:	pusha  
  40f669:	ss nop
  40f66b:	fwait
  40f66c:	arpl   WORD PTR [ebx+0x60f60895],bx
  40f672:	mov    dh,0x40
  40f674:	jmp    0x322e:0x7dc9af3d
  40f67b:	or     al,BYTE PTR [ecx-0x45ad6fd]
  40f681:	sub    BYTE PTR gs:[edx+0x655952b8],ah
  40f688:	std    
  40f689:	mov    dh,0xe9
  40f68b:	pop    ebx
  40f68c:	xchg   esi,ecx
  40f68e:	jmp    0x40f630
  40f690:	mov    ebx,0xaa88df46
  40f695:	mov    esi,esp
  40f697:	or     eax,0xa9e9b137
  40f69c:	ret    0x895d
  40f69f:	xchg   ebp,eax
  40f6a0:	or     BYTE PTR [edx-0x2f0e79c0],ah
  40f6a6:	jmp    0x4a03:0x41a9138c
  40f6ad:	shl    DWORD PTR [edi],1
  40f6af:	cmp    al,0xdc
  40f6b1:	adc    esp,DWORD PTR [ebx]
  40f6b3:	sbb    al,BYTE PTR [eax+eiz*2-0x32f6c8e]
  40f6ba:	xchg   edi,eax
  40f6bb:	cmp    ah,BYTE PTR [esi+0x9]
  40f6be:	cmp    DWORD PTR [edx],esp
  40f6c0:	jl     0x40f6ac
  40f6c2:	xchg   esp,eax
  40f6c3:	or     eax,0x85f33be1
  40f6c8:	int    0x3c
  40f6ca:	fidiv  DWORD PTR [ecx+0x6f]
  40f6cd:	icebp  
  40f6ce:	das    
  40f6cf:	mov    cl,0x90
  40f6d1:	mov    dl,0x5a
  40f6d3:	daa    
  40f6d4:	pop    ss
  40f6d5:	sbb    eax,0xad93b062
  40f6da:	push   cs
  40f6db:	sbb    eax,DWORD PTR [ebx+ebp*1-0x20]
  40f6df:	xchg   ebx,eax
  40f6e0:	push   ecx
  40f6e1:	scas   al,BYTE PTR es:[edi]
  40f6e2:	sub    BYTE PTR [edi+0x28968a81],al
  40f6e8:	pop    eax
  40f6e9:	popf   
  40f6ea:	js     0x40f672
  40f6ec:	xor    eax,0xcd618725
  40f6f1:	sbb    edi,DWORD PTR [eax+0xa24e210]
  40f6f7:	pop    eax
  40f6f8:	push   0xffffffa1
  40f6fa:	push   eax
  40f6fb:	int3   
  40f6fc:	fbstp  TBYTE PTR [eax]
  40f6fe:	mov    eax,ds:0xf49bba05
  40f703:	cdq    
  40f704:	mov    WORD PTR [eax-0x33a2f4a6],gs
  40f70a:	lods   eax,DWORD PTR ds:[esi]
  40f70b:	je     0x40f6b3
  40f70d:	mov    bl,0x76
  40f70f:	inc    ebp
  40f710:	imul   ebx,DWORD PTR [ebx],0xf
  40f713:	outs   dx,BYTE PTR ds:[esi]
  40f714:	mov    esp,0x3f9f3207
  40f719:	repz inc esi
  40f71b:	xchg   DWORD PTR [ebx+0x13],ebx
  40f71e:	jae    0x40f75a
  40f720:	or     al,0xf0
  40f722:	xchg   edx,eax
  40f723:	and    al,0x2d
  40f725:	cs test al,0x0
  40f728:	push   0xa11c1dd8
  40f72d:	(bad)  
  40f72e:	fnstcw WORD PTR [eax]
  40f730:	inc    ebp
  40f731:	mov    bh,0xfe
  40f733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f734:	data16 jmp 0x40f703
  40f737:	aaa    
  40f738:	clc    
  40f739:	mov    esp,0xf61b09f5
  40f73e:	push   eax
  40f73f:	cmp    dh,ch
  40f741:	jmp    0x40f740
  40f743:	mov    ch,0x2e
  40f745:	lock push esi
  40f747:	xchg   edi,eax
  40f748:	(bad)  
  40f749:	(bad)  
  40f74a:	pop    esp
  40f74b:	jno    0x40f772
  40f74d:	pop    edx
  40f74e:	imul   ebx,DWORD PTR [ecx-0x59b84a20],0x59240a97
  40f758:	xlat   BYTE PTR ds:[ebx]
  40f759:	fistp  QWORD PTR [ecx-0x7f]
  40f75c:	mov    bl,0x8d
  40f75e:	mov    ss,WORD PTR [ebp+ecx*1+0x14]
  40f762:	pop    ebp
  40f763:	cmp    al,0x5a
  40f765:	push   eax
  40f766:	xor    eax,0x67a53072
  40f76b:	sar    DWORD PTR [ebx+0x3],cl
  40f76e:	sub    BYTE PTR [esi+0x4955ecd9],ch
  40f774:	jne    0x40f7d6
  40f776:	xchg   esp,eax
  40f777:	int    0xf9
  40f779:	sub    eax,0x64634e4e
  40f77e:	xchg   esp,eax
  40f77f:	pop    edx
  40f780:	sahf   
  40f781:	dec    edi
  40f782:	stos   DWORD PTR es:[edi],eax
  40f783:	sub    DWORD PTR [edi-0x3d],esi
  40f786:	into   
  40f787:	(bad)  [ebp-0x34]
  40f78a:	jl     0x40f78f
  40f78c:	inc    esi
  40f78d:	jp     0x40f780
  40f78f:	mov    edx,0xa9612734
  40f794:	enter  0xf0b3,0x98
  40f798:	in     al,dx
  40f799:	mov    dh,0x1f
  40f79b:	(bad)  
  40f79c:	jne    0x40f7e2
  40f79e:	js     0x40f7bc
  40f7a0:	jb     0x40f79e
  40f7a2:	push   0x32e9419c
  40f7a7:	std    
  40f7a8:	inc    ebp
  40f7a9:	and    esi,0x170c96d5
  40f7af:	push   cs
  40f7b0:	inc    ebx
  40f7b1:	sti    
  40f7b2:	and    al,BYTE PTR [edx-0x2903aea6]
  40f7b8:	in     eax,dx
  40f7b9:	imul   edi,DWORD PTR [esi],0xffffffa4
  40f7bc:	lods   eax,DWORD PTR ds:[esi]
  40f7bd:	int    0xca
  40f7bf:	repz iret 
  40f7c1:	adc    eax,0xaee6874d
  40f7c6:	leave  
  40f7c7:	stc    
  40f7c8:	xchg   edx,eax
  40f7c9:	push   cs
  40f7ca:	xchg   esp,eax
  40f7cb:	enter  0xd786,0x33
  40f7cf:	sub    eax,0x3e519573
  40f7d4:	or     ebp,DWORD PTR [esi-0x58]
  40f7d7:	or     al,0x3b
  40f7d9:	stc    
  40f7da:	push   cs
  40f7db:	scas   al,BYTE PTR es:[edi]
  40f7dc:	jae    0x40f760
  40f7de:	outs   dx,BYTE PTR ds:[esi]
  40f7df:	jnp    0x40f823
  40f7e1:	lds    ebp,FWORD PTR [esi-0x4c9dd929]
  40f7e7:	xor    eax,0x5ba3acb2
  40f7ec:	rol    DWORD PTR [edi+0x1a],cl
  40f7ef:	lods   eax,DWORD PTR ds:[esi]
  40f7f0:	mov    dh,0xed
  40f7f2:	bswap  ebx
  40f7f4:	push   esp
  40f7f5:	mov    dh,dh
  40f7f7:	jo     0x40f7b5
  40f7f9:	or     eax,0x9a3b050e
  40f7fe:	sbb    eax,0x823fa329
  40f803:	add    ch,BYTE PTR es:[edi]
  40f806:	(bad)  
  40f807:	mov    edi,eax
  40f809:	ret    0x28c9
  40f80c:	jg     0x40f7c2
  40f80e:	je     0x40f7b6
  40f810:	xchg   esi,eax
  40f811:	popa   
  40f812:	sbb    ch,BYTE PTR [ecx+0x68]
  40f815:	dec    eax
  40f816:	mov    ds:0x629261fc,eax
  40f81b:	aaa    
  40f81c:	es push ss
  40f81e:	int    0x92
  40f820:	pushf  
  40f821:	int    0x49
  40f823:	pop    edi
  40f824:	stc    
  40f825:	sub    al,bh
  40f827:	repnz lahf 
  40f829:	out    0xd1,al
  40f82b:	das    
  40f82c:	jl     0x40f890
  40f82e:	sub    DWORD PTR [edx+0x34],0x8837f20a
  40f835:	jb     0x40f7f7
  40f837:	imul   ecx,DWORD PTR [ecx-0x21fa7ccc],0xcae36477
  40f841:	cli    
  40f842:	push   cs
  40f843:	inc    eax
  40f844:	pop    edi
  40f845:	mov    edi,0xe763d05b
  40f84a:	sub    eax,0xb89f0c31
  40f84f:	adc    ebx,DWORD PTR [esi-0x76]
  40f852:	mov    bh,0x1d
  40f854:	mov    ecx,DWORD PTR [ecx+edi*4-0x32ca5198]
  40f85b:	xchg   ebx,eax
  40f85c:	ret    0x1e47
  40f85f:	fxch   st(4)
  40f861:	xor    al,0xac
  40f863:	fistp  DWORD PTR ds:0x2e61b90b
  40f869:	popf   
  40f86a:	scas   al,BYTE PTR es:[edi]
  40f86b:	pop    ebx
  40f86c:	fisttp QWORD PTR [ebx+0x7b]
  40f86f:	jle    0x40f83d
  40f871:	and    al,0x6f
  40f873:	xor    DWORD PTR [esi+0x3cd89c06],ebx
  40f879:	inc    esp
  40f87a:	or     DWORD PTR [esp+edi*1+0x43],eax
  40f87e:	imul   esp,DWORD PTR [ecx],0xffffffb0
  40f881:	cmp    DWORD PTR [esi+0x33],ecx
  40f884:	rol    esi,cl
  40f886:	cld    
  40f887:	daa    
  40f888:	and    BYTE PTR [ebp-0x2615f37b],0xb
  40f88f:	fbld   TBYTE PTR [eax+0x38a86cd9]
  40f895:	pop    esp
  40f896:	mov    ebp,0x2079496f
  40f89b:	jns    0x40f904
  40f89d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f89e:	je     0x40f8d9
  40f8a0:	das    
  40f8a1:	push   ss
  40f8a2:	jnp    0x40f872
  40f8a4:	sub    BYTE PTR [edx+esi*1-0x3d],ah
  40f8a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8a9:	mov    ch,0x93
  40f8ab:	ror    BYTE PTR [ebp+ebp*1-0x6e6281d6],cl
  40f8b2:	ficom  DWORD PTR [ebp-0x7a378287]
  40f8b8:	out    0x68,al
  40f8ba:	mov    esp,0x3ad6ba7
  40f8bf:	jg     0x40f8c3
  40f8c1:	push   0xb2f2a903
  40f8c6:	js     0x40f894
  40f8c8:	cmp    eax,0xa5a3528a
  40f8cd:	mov    BYTE PTR [edx],bh
  40f8cf:	scas   eax,DWORD PTR es:[edi]
  40f8d0:	xchg   ebx,eax
  40f8d1:	add    eax,0xbddc5efd
  40f8d6:	test   DWORD PTR [ecx+0x3e],esp
  40f8d9:	cli    
  40f8da:	lods   eax,DWORD PTR ds:[esi]
  40f8db:	push   esi
  40f8dc:	mov    dl,BYTE PTR [ecx+0x22d3e0d1]
  40f8e2:	std    
  40f8e3:	stos   DWORD PTR es:[edi],eax
  40f8e4:	pop    ebx
  40f8e5:	mov    dl,0xc3
  40f8e7:	shl    BYTE PTR [edi+0x256f019e],1
  40f8ed:	arpl   WORD PTR [ebp-0x5e],ax
  40f8f0:	xchg   esi,eax
  40f8f1:	xchg   ebp,eax
  40f8f2:	and    edx,DWORD PTR [edx-0x1]
  40f8f5:	xchg   esi,eax
  40f8f6:	dec    esi
  40f8f7:	cmc    
  40f8f8:	retf   0x660c
  40f8fb:	xor    bh,BYTE PTR [ecx-0x7701047]
  40f901:	hlt    
  40f902:	rcl    BYTE PTR [ebp-0x78d50bdf],cl
  40f908:	cmp    eax,0x1ad3b508
  40f90d:	ins    BYTE PTR es:[edi],dx
  40f90e:	loopne 0x40f93c
  40f910:	xchg   edi,eax
  40f911:	mov    al,0x6f
  40f913:	mov    al,0xd4
  40f915:	loopne 0x40f8a9
  40f917:	(bad)  
  40f919:	mov    dh,0x7c
  40f91b:	cs mov ebx,0xdb14eff0
  40f921:	mov    dl,BYTE PTR [edi+ebp*8+0x380be749]
  40f928:	sbb    al,0x37
  40f92a:	add    edi,ebp
  40f92c:	cwde   
  40f92d:	sbb    ebx,DWORD PTR ds:0x577f1cf8
  40f933:	sub    cl,0xb2
  40f936:	and    al,BYTE PTR [eax]
  40f938:	mov    bl,0xe2
  40f93a:	adc    eax,0xc096b027
  40f93f:	sub    eax,0xbf638bb4
  40f944:	and    al,0xf
  40f946:	mov    ecx,0xfe4932bc
  40f94b:	imul   esi,DWORD PTR [esi-0x51],0xfa9ddbb4
  40f952:	shl    BYTE PTR [esp+ebx*2],0xa9
  40f956:	adc    BYTE PTR [edx-0x758a2fce],dh
  40f95c:	outs   dx,BYTE PTR ds:[esi]
  40f95d:	scas   al,BYTE PTR es:[edi]
  40f95e:	mov    ds:0x899a02ad,al
  40f963:	es (bad) 
  40f965:	(bad)  
  40f966:	std    
  40f967:	pop    eax
  40f968:	push   ds
  40f969:	mov    al,BYTE PTR [esi]
  40f96b:	sub    DWORD PTR [eax],ebp
  40f96d:	pop    ss
  40f96e:	scas   al,BYTE PTR es:[edi]
  40f96f:	test   al,0xd2
  40f971:	jb     0x40f9ad
  40f973:	xchg   edi,eax
  40f974:	jo     0x40f9f1
  40f976:	shl    dl,cl
  40f978:	dec    ecx
  40f979:	jnp    0x40f975
  40f97b:	sbb    edi,DWORD PTR [eax+0x27241249]
  40f981:	bound  esp,QWORD PTR [eax-0x7d480184]
  40f987:	pop    edx
  40f988:	mov    ebx,0xaf12ced6
  40f98d:	(bad)  
  40f98e:	cld    
  40f98f:	add    bh,bh
  40f991:	mov    eax,ds:0xc17f8f6c
  40f996:	(bad)  [eax-0xe8efe55]
  40f99c:	mov    ch,dl
  40f99e:	inc    esp
  40f99f:	xor    eax,0x24773d63
  40f9a4:	and    al,0x75
  40f9a6:	mov    dl,0x67
  40f9a8:	jae    0x40f96b
  40f9aa:	fwait
  40f9ab:	push   0xc1fbd48e
  40f9b0:	sbb    ah,BYTE PTR [edx+0x1b]
  40f9b3:	jl     0x40f9fc
  40f9b5:	call   0xa23f:0xada13df4
  40f9bc:	in     eax,dx
  40f9bd:	jecxz  0x40fa1f
  40f9bf:	pop    ecx
  40f9c0:	xchg   ecx,eax
  40f9c1:	adc    DWORD PTR [eax-0x15],eax
  40f9c4:	das    
  40f9c5:	xchg   esi,eax
  40f9c6:	mov    ds:0x1c2e4dbe,al
  40f9cb:	jl     0x40f95a
  40f9cd:	and    esi,DWORD PTR [edi-0x4c8f6436]
  40f9d3:	stc    
  40f9d4:	std    
  40f9d5:	stos   BYTE PTR es:[edi],al
  40f9d6:	pushf  
  40f9d7:	std    
  40f9d8:	neg    DWORD PTR [ebx-0x6e9c3a44]
  40f9de:	add    eax,0x6361074f
  40f9e3:	in     al,dx
  40f9e4:	ret    0xcd8
  40f9e7:	cmp    dh,BYTE PTR [eax-0xc]
  40f9ea:	mov    esi,0xb8683ce5
  40f9ef:	push   cs
  40f9f0:	out    dx,al
  40f9f1:	dec    esi
  40f9f2:	mov    ebx,0x92918875
  40f9f7:	push   0xffffffe4
  40f9f9:	js     0x40fa33
  40f9fb:	inc    eax
  40f9fc:	les    ebp,FWORD PTR [esi]
  40f9fe:	lods   al,BYTE PTR ds:[esi]
  40f9ff:	pop    edx
  40fa00:	cmp    BYTE PTR [ecx+0x3d5b00ff],dl
  40fa06:	cmp    ecx,DWORD PTR [edi+0x2ed89cf4]
  40fa0c:	in     al,0xfb
  40fa0e:	iret   
  40fa0f:	sub    ah,BYTE PTR [ebx-0x72]
  40fa12:	sbb    DWORD PTR [eax],0x5ffc869d
  40fa18:	mov    ?,WORD PTR ds:0xcf7584b5
  40fa1e:	dec    eax
  40fa1f:	jp     0x40f9d4
  40fa21:	and    eax,0x56438157
  40fa26:	mov    esi,ebp
  40fa28:	es scas eax,DWORD PTR es:[edi]
  40fa2a:	das    
  40fa2b:	mul    BYTE PTR [edx]
  40fa2d:	fidiv  WORD PTR [edi+0x7cfde5ab]
  40fa33:	stc    
  40fa34:	sub    esp,DWORD PTR [edi]
  40fa36:	and    BYTE PTR [ebx],dl
  40fa38:	cmp    bh,BYTE PTR [ecx]
  40fa3a:	dec    ebx
  40fa3b:	jne    0x40fa0c
  40fa3d:	nop
  40fa3e:	push   ds
  40fa3f:	imul   esi,DWORD PTR [esi+ebp*1-0x4e385aa9],0xffffff96
  40fa47:	sbb    bl,bl
  40fa49:	add    DWORD PTR [ebx],edx
  40fa4b:	jb     0x40f9ed
  40fa4d:	sar    ah,0x1f
  40fa50:	xor    edi,DWORD PTR [edx+0x21]
  40fa53:	lahf   
  40fa54:	sub    DWORD PTR [eax],0xff3024f5
  40fa5a:	mov    eax,0x137bae7c
  40fa5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa60:	(bad)  
  40fa61:	fcom   DWORD PTR [eax+0x421679c8]
  40fa67:	repz cmc 
  40fa69:	fsub   st(0),st
  40fa6b:	rcr    BYTE PTR [ebp+eax*8-0x41],cl
  40fa6f:	data16 add dh,ah
  40fa72:	or     al,0x6a
  40fa74:	sub    al,0xb2
  40fa76:	loopne 0x40fac5
  40fa78:	test   eax,0xd94806b7
  40fa7d:	dec    ecx
  40fa7e:	popa   
  40fa7f:	cmp    BYTE PTR [esi-0x7a94ff3e],bh
  40fa85:	push   ss
  40fa86:	sub    DWORD PTR [edi-0x1c],esi
  40fa89:	repnz dec ebp
  40fa8b:	cmp    al,0x6a
  40fa8d:	mov    edi,0x6f938166
  40fa92:	push   0xa5fba60c
  40fa97:	sub    edx,DWORD PTR [edi-0x71e9f33f]
  40fa9d:	inc    ebp
  40fa9e:	dec    edx
  40fa9f:	data16 (bad) 
  40faa2:	sub    dl,BYTE PTR [eax+0x6b]
  40faa5:	mov    ebx,0x2abbd269
  40faaa:	jb     0x40fac1
  40faac:	das    
  40faad:	add    BYTE PTR [ebx-0x5aa4aa2b],dl
  40fab3:	rcr    BYTE PTR [ecx-0x64d00ab5],0x81
  40faba:	push   edi
  40fabb:	sbb    eax,0xbe1766aa
  40fac0:	dec    esi
  40fac1:	jecxz  0x40fa44
  40fac3:	pop    ss
  40fac4:	sub    DWORD PTR [edi+0x77],edi
  40fac7:	add    eax,0xa91c6f74
  40facc:	ret    
  40facd:	aas    
  40face:	int3   
  40facf:	pushf  
  40fad0:	cmp    DWORD PTR [ecx+ebp*2+0x2a],esp
  40fad4:	fwait
  40fad5:	and    BYTE PTR [edx-0x49120de],0x20
  40fadc:	in     al,0x76
  40fade:	test   DWORD PTR [ecx],ebx
  40fae0:	(bad)  
  40fae1:	lods   al,BYTE PTR ds:[esi]
  40fae2:	mov    dl,0xd3
  40fae4:	jmp    0xd860c583
  40fae9:	clc    
  40faea:	jg     0x40faf8
  40faec:	or     DWORD PTR [esi+0x172a8cf7],ecx
  40faf2:	arpl   WORD PTR [ecx],bx
  40faf4:	mov    al,dh
  40faf6:	(bad)  
  40faf7:	and    DWORD PTR [esi+0x2fcbcd02],esi
  40fafd:	lahf   
  40fafe:	mov    al,ds:0xf0b39400
  40fb03:	sbb    DWORD PTR [ecx-0x7b4529ca],edi
  40fb09:	clc    
  40fb0a:	fiadd  DWORD PTR [esi-0x72]
  40fb0d:	mov    al,ds:0x48568f41
  40fb12:	jmp    0x40fb84
  40fb14:	(bad)  
  40fb15:	jnp    0x40fb94
  40fb17:	xchg   esi,eax
  40fb18:	push   ebx
  40fb19:	enter  0xdcff,0x45
  40fb1d:	cmp    dh,ch
  40fb1f:	jp     0x40fb1f
  40fb21:	mov    bl,0x7f
  40fb23:	xlat   BYTE PTR ds:[ebx]
  40fb24:	daa    
  40fb25:	rcr    BYTE PTR [edx+0xa918c0d],cl
  40fb2b:	jnp    0x40faf3
  40fb2d:	dec    edx
  40fb2e:	mov    cl,0xa7
  40fb30:	pusha  
  40fb31:	repnz repz test BYTE PTR [edx-0x4b],ah
  40fb36:	fs addr16 pusha 
  40fb39:	shl    BYTE PTR ds:0xef24cc6f,cl
  40fb3f:	data16 repz ja 0x40faeb
  40fb43:	inc    esp
  40fb45:	add    bh,BYTE PTR [ebp-0x25ceb858]
  40fb4b:	jbe    0x40fbc5
  40fb4d:	js     0x40fb53
  40fb4f:	aaa    
  40fb50:	cmp    ebp,DWORD PTR [edx-0x3]
  40fb53:	xchg   ecx,eax
  40fb54:	add    ch,BYTE PTR [edi-0x64]
  40fb57:	mov    al,ds:0xfa81d0a3
  40fb5c:	dec    ecx
  40fb5d:	rcr    DWORD PTR [edi+0x44700d79],cl
  40fb63:	sbb    eax,0x73a9c134
  40fb68:	sub    BYTE PTR [ecx+0x2e170978],al
  40fb6e:	lea    ebp,[ecx]
  40fb70:	push   ecx
  40fb71:	push   ebx
  40fb72:	sti    
  40fb73:	unpckhps xmm0,XMMWORD PTR [edx+edi*2+0x29]
  40fb78:	pusha  
  40fb79:	adc    DWORD PTR [ebx+0x74],edx
  40fb7c:	cdq    
  40fb7d:	(bad)  
  40fb7f:	(bad)  
  40fb80:	data16 mov ah,0xe6
  40fb83:	mov    ah,BYTE PTR [edx-0x67]
  40fb86:	adc    ah,BYTE PTR [edx+0x69dae6ae]
  40fb8c:	cmp    eax,0x418ab3c3
  40fb91:	imul   eax,DWORD PTR [esi-0x6b76e66b],0xfffffff8
  40fb98:	sub    eax,0xf7eb49db
  40fb9d:	ss dec ecx
  40fb9f:	xlat   BYTE PTR ds:[ebx]
  40fba0:	cmp    BYTE PTR [ebx],cl
  40fba2:	or     eax,0xa56deadc
  40fba7:	fs xchg ebx,ebp
  40fbaa:	shr    BYTE PTR [esi-0x1d],cl
  40fbad:	sbb    BYTE PTR [esi+0x7],0x32
  40fbb1:	ins    DWORD PTR es:[edi],dx
  40fbb2:	ja     0x40fc0c
  40fbb4:	and    cl,bh
  40fbb6:	sbb    ebp,edx
  40fbb8:	add    eax,0xe14165b2
  40fbbd:	xor    esp,ebp
  40fbbf:	sbb    cl,BYTE PTR [ecx+0x5566142e]
  40fbc5:	push   cs
  40fbc6:	(bad)  
  40fbc7:	cmp    ebp,ebx
  40fbc9:	mov    dl,0x7d
  40fbcb:	xor    eax,0xd5612196
  40fbd0:	and    eax,ebx
  40fbd2:	push   ebp
  40fbd3:	jo     0x40fc4d
  40fbd5:	out    0x1f,eax
  40fbd7:	jecxz  0x40fbb4
  40fbd9:	push   es
  40fbda:	and    al,0x61
  40fbdc:	gs pop edx
  40fbde:	mov    ecx,0xfeac6b22
  40fbe3:	push   edi
  40fbe4:	fucomip st,st(0)
  40fbe6:	fiadd  WORD PTR [ebx]
  40fbe8:	adc    ch,dl
  40fbea:	rcl    bl,cl
  40fbec:	add    ebx,DWORD PTR [ebx]
  40fbee:	(bad)  
  40fbef:	xchg   ebp,eax
  40fbf0:	repz jge 0x40fb91
  40fbf3:	mov    edi,DWORD PTR [eax+0x2c9589b2]
  40fbf9:	ins    BYTE PTR es:[edi],dx
  40fbfa:	inc    esp
  40fbfb:	ins    DWORD PTR es:[edi],dx
  40fbfc:	dec    edx
  40fbfd:	fistp  QWORD PTR [edx]
  40fbff:	shr    BYTE PTR [ebx-0x2a96508],cl
  40fc05:	outs   dx,DWORD PTR ds:[esi]
  40fc06:	or     BYTE PTR [ecx-0x2b],dh
  40fc09:	xlat   BYTE PTR ds:[ebx]
  40fc0a:	imul   ebp,DWORD PTR ds:0xbc413a94,0xf7a888ae
  40fc14:	(bad)  
  40fc15:	pop    esi
  40fc16:	mov    BYTE PTR ds:0xc6fcb1cf,ah
  40fc1c:	push   ecx
  40fc1d:	adc    esi,DWORD PTR [esi]
  40fc1f:	xchg   ecx,eax
  40fc20:	leave  
  40fc21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc22:	add    BYTE PTR [edx],0xe4
  40fc25:	cmp    ah,dl
  40fc27:	mov    ah,0x39
  40fc29:	and    al,0x20
  40fc2b:	jmp    0x40fc6d
  40fc2d:	push   ss
  40fc2e:	lea    esp,[ebx+0x755ebfc6]
  40fc34:	in     al,dx
  40fc35:	imul   edx,DWORD PTR [ecx],0xfffffff9
  40fc38:	pop    ebp
  40fc39:	jae    0x40fc09
  40fc3b:	outs   dx,BYTE PTR ds:[esi]
  40fc3c:	fcom   QWORD PTR [edi-0x2a]
  40fc3f:	or     DWORD PTR [eax-0x5f321ad8],esp
  40fc45:	and    al,0xf0
  40fc47:	dec    eax
  40fc48:	add    bh,BYTE PTR [ebx]
  40fc4a:	or     bl,BYTE PTR [ebx-0x6f]
  40fc4d:	fwait
  40fc4e:	mov    ecx,0xce7ebc9b
  40fc53:	mov    dh,0x96
  40fc55:	cmp    al,0x3d
  40fc57:	add    al,0x3c
  40fc59:	fisttp QWORD PTR [edx]
  40fc5b:	cmp    bh,BYTE PTR [ecx]
  40fc5d:	mov    bl,0x5
  40fc5f:	call   0xe5156e7d
  40fc64:	lea    esi,[esi+0x5b]
  40fc67:	out    dx,eax
  40fc68:	lea    eax,[edx]
  40fc6a:	add    bh,BYTE PTR [esi-0x55]
  40fc6d:	nop
  40fc6e:	xor    esp,0x51b1039a
  40fc74:	in     al,0x7d
  40fc76:	push   ds
  40fc77:	out    0x5b,al
  40fc79:	div    BYTE PTR [esi+edx*8+0x46]
  40fc7d:	enter  0xc088,0xe7
  40fc81:	(bad)  
  40fc82:	(bad)  
  40fc83:	les    esp,FWORD PTR [ecx+0x11de8d4c]
  40fc89:	das    
  40fc8a:	push   0x35
  40fc8c:	mov    dl,BYTE PTR [ecx-0x217934c4]
  40fc92:	add    DWORD PTR [edx+0xb],ebp
  40fc95:	iret   
  40fc96:	inc    ebx
  40fc97:	rcr    BYTE PTR [esi+0x78],cl
  40fc9a:	shld   DWORD PTR [edx+0x21fc927f],ecx,cl
  40fca1:	jl     0x40fcfe
  40fca3:	sti    
  40fca4:	cmp    al,0x67
  40fca6:	jmp    0x74ab3e
  40fcab:	ins    DWORD PTR es:[di],dx
  40fcad:	push   0x3df2f157
  40fcb2:	adc    dl,al
  40fcb4:	int3   
  40fcb5:	add    BYTE PTR [ebp+0x46917eb7],0xff
  40fcbc:	(bad)  
  40fcbd:	mov    ebx,0x5ad9a39c
  40fcc2:	mov    ebx,0x8c3c0f63
  40fcc7:	(bad)  
  40fcc8:	jns    0x40fcbe
  40fcca:	aam    0xa9
  40fccc:	cmp    eax,0xcb3020f2
  40fcd1:	jne    0x40fcb0
  40fcd3:	das    
  40fcd4:	test   DWORD PTR [edi+eax*2],0x7f8311f8
  40fcdb:	adc    ah,dl
  40fcdd:	xor    DWORD PTR [edx-0x7745682f],esp
  40fce3:	imul   ebp,DWORD PTR [edx+ebx*2],0x32
  40fce7:	out    dx,eax
  40fce8:	sar    BYTE PTR [eax+0x1f5723b6],1
  40fcee:	push   esi
  40fcef:	adc    ch,BYTE PTR [ebp+0x5e]
  40fcf2:	inc    ebx
  40fcf3:	ret    0x9a09
  40fcf6:	(bad)
  40fcf9:	out    dx,al
  40fcfa:	jge    0x40fd76
  40fcfc:	cli    
  40fcfd:	xchg   ecx,eax
  40fcfe:	js     0x40fd22
  40fd00:	das    
  40fd01:	arpl   bp,ax
  40fd03:	push   es
  40fd04:	inc    edx
  40fd05:	popa   
  40fd06:	pop    esi
  40fd07:	push   ebp
  40fd08:	loopne 0x40fd45
  40fd0a:	jecxz  0x40fd50
  40fd0c:	test   DWORD PTR [esi+0x30982f63],eax
  40fd12:	std    
  40fd13:	add    al,0x98
  40fd15:	jle    0x40fcdd
  40fd17:	aaa    
  40fd18:	jnp    0x40fd51
  40fd1a:	aad    0x9b
  40fd1c:	cmp    BYTE PTR [eax+0x73],al
  40fd1f:	jno    0x40fcce
  40fd21:	in     eax,0xe4
  40fd23:	sahf   
  40fd24:	add    eax,0xc8f5cd3e
  40fd29:	fwait
  40fd2a:	xchg   edi,ebx
  40fd2c:	hlt    
  40fd2d:	sub    al,0x2
  40fd2f:	mov    esp,0x17014bb
  40fd34:	ins    DWORD PTR es:[edi],dx
  40fd35:	pop    esi
  40fd36:	rol    edx,1
  40fd38:	lods   eax,DWORD PTR ds:[esi]
  40fd39:	test   DWORD PTR [esp+edi*1],edi
  40fd3c:	push   ds
  40fd3d:	fiadd  DWORD PTR ds:0x48f01e80
  40fd43:	das    
  40fd44:	(bad)  
  40fd46:	icebp  
  40fd47:	fadd   st(2),st
  40fd49:	mov    eax,0xe109a6dc
  40fd4e:	cmp    eax,0x8195d109
  40fd53:	push   es
  40fd54:	(bad)  
  40fd55:	cdq    
  40fd56:	hlt    
  40fd57:	popa   
  40fd58:	sbb    al,0x69
  40fd5a:	fidivr DWORD PTR [esi]
  40fd5c:	jno    0x40fd6e
  40fd5e:	sub    DWORD PTR [esp+edx*4-0x3a],ebp
  40fd62:	outs   dx,BYTE PTR ds:[esi]
  40fd63:	sub    BYTE PTR [ebx-0xfcfdc6b],al
  40fd69:	xchg   di,ax
  40fd6b:	and    bh,BYTE PTR ss:[edx]
  40fd6e:	pop    ebp
  40fd6f:	and    dh,BYTE PTR [edi]
  40fd71:	loopne 0x40fd80
  40fd73:	mov    gs,WORD PTR [edx+esi*2]
  40fd76:	test   ecx,ebp
  40fd78:	lea    ecx,[esi]
  40fd7a:	call   0x8cb51f4b
  40fd7f:	and    BYTE PTR [edi-0x1ac0df4],cl
  40fd85:	inc    BYTE PTR [ecx+ecx*4+0x35]
  40fd89:	dec    esi
  40fd8a:	mov    ebx,ebp
  40fd8c:	js     0x40fdb2
  40fd8e:	ss xchg edx,eax
  40fd90:	out    dx,eax
  40fd91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd92:	push   ss
  40fd93:	and    DWORD PTR [ebp+0x6fcea1b7],ecx
  40fd99:	and    BYTE PTR [edi+esi*8],cl
  40fd9c:	dec    ebx
  40fd9d:	(bad)  
  40fd9e:	out    0x24,eax
  40fda0:	cmp    DWORD PTR ds:0x50493e0f,0x4a7acc7c
  40fdaa:	cmp    eax,0xffffffb1
  40fdad:	fmulp  st(7),st
  40fdaf:	cdq    
  40fdb0:	stos   BYTE PTR es:[edi],al
  40fdb1:	sbb    eax,0xb2f1862f
  40fdb6:	sbb    al,bh
  40fdb8:	push   DWORD PTR [edx+0x30291fa5]
  40fdbe:	daa    
  40fdbf:	cmp    BYTE PTR [ebx+esi*4-0x5],0xfe
  40fdc4:	ins    DWORD PTR es:[edi],dx
  40fdc5:	loope  0x40fe08
  40fdc7:	inc    ecx
  40fdc8:	(bad)  
  40fdc9:	cmp    dl,ah
  40fdcb:	in     eax,dx
  40fdcc:	xchg   ebp,eax
  40fdcd:	es sub bl,al
  40fdd0:	jne    0x40fe30
  40fdd2:	scas   eax,DWORD PTR es:[edi]
  40fdd3:	push   ebp
  40fdd4:	xor    edx,esi
  40fdd6:	and    al,0xc3
  40fdd8:	(bad)  
  40fdd9:	mov    ah,BYTE PTR [esi-0x285f8902]
  40fddf:	inc    esp
  40fde0:	push   es
  40fde1:	sub    al,0xd5
  40fde3:	cwde   
  40fde4:	outs   dx,DWORD PTR ds:[esi]
  40fde5:	jle    0x40fe02
  40fde7:	out    0x61,al
  40fde9:	mov    edi,0x1f90f20d
  40fdee:	and    al,0x69
  40fdf0:	jg     0x40fd85
  40fdf2:	repnz sti 
  40fdf4:	cdq    
  40fdf5:	(bad)  
  40fdf6:	(bad)  
  40fdf8:	xlat   BYTE PTR ds:[ebx]
  40fdf9:	cmc    
  40fdfa:	xchg   ecx,eax
  40fdfb:	jecxz  0x40fe58
  40fdfd:	stos   BYTE PTR es:[edi],al
  40fdfe:	mov    ds:0x1aee0d39,eax
  40fe03:	add    edi,DWORD PTR [ebp+ebx*4+0x7e20da37]
  40fe0a:	enter  0x1d4a,0x24
  40fe0e:	icebp  
  40fe0f:	adc    al,BYTE PTR [eax+0x7392d497]
  40fe15:	ret    0x31e2
  40fe18:	div    DWORD PTR [edi+0x69]
  40fe1b:	cmc    
  40fe1c:	outs   dx,BYTE PTR cs:[esi]
  40fe1e:	adc    ebp,esp
  40fe20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe21:	ret    0x84a3
  40fe24:	lock cmp eax,0x481c9178
  40fe2a:	mov    bh,0xd8
  40fe2c:	dec    esp
  40fe2d:	out    0x77,al
  40fe2f:	sbb    ebp,edx
  40fe31:	ja     0x40fdda
  40fe33:	inc    esi
  40fe34:	ins    DWORD PTR es:[edi],dx
  40fe35:	cdq    
  40fe36:	popa   
  40fe37:	mov    edi,0x16373688
  40fe3c:	mov    ebx,edi
  40fe3e:	mov    ds:0x844f53a1,eax
  40fe43:	data16 int 0x4a
  40fe46:	pop    eax
  40fe47:	jb     0x40fe69
  40fe49:	es popf 
  40fe4b:	push   ebp
  40fe4c:	sub    eax,0x616daa12
  40fe51:	push   ebx
  40fe52:	sub    eax,0x918d9836
  40fe57:	push   ebp
  40fe58:	pop    ecx
  40fe59:	adc    dh,0xd8
  40fe5c:	ins    DWORD PTR es:[edi],dx
  40fe5d:	fistp  DWORD PTR [esi]
  40fe5f:	lds    edx,FWORD PTR [eax-0x35daa6fb]
  40fe65:	and    DWORD PTR [ebp-0x3d],esp
  40fe68:	mov    esi,DWORD PTR [edx+0x5f]
  40fe6b:	add    DWORD PTR [edi-0x516dfd11],esi
  40fe71:	test   DWORD PTR [ebp-0x65],ebp
  40fe74:	mov    ds:0x5bd79a43,eax
  40fe79:	aas    
  40fe7a:	ins    DWORD PTR es:[edi],dx
  40fe7b:	mov    ch,0x4c
  40fe7d:	mov    DWORD PTR [ebp-0x93643fd],esi
  40fe83:	inc    ebx
  40fe84:	jmp    0x8f626fb1
  40fe89:	loope  0x40fe33
  40fe8b:	xor    edi,DWORD PTR [eax+ebp*1]
  40fe8e:	mov    al,ds:0xfe346de5
  40fe93:	dec    edx
  40fe94:	cmp    eax,eax
  40fe96:	idiv   dh
  40fe98:	mov    ah,bl
  40fe9a:	jp     0x40feaf
  40fe9c:	push   ds
  40fe9d:	adc    DWORD PTR [edx-0xa7cadc4],ecx
  40fea3:	add    ebp,DWORD PTR [eax+0x4ec49222]
  40fea9:	push   0x43
  40feab:	call   0xaa6a119f
  40feb0:	fs jl  0x40fed9
  40feb3:	and    eax,0x45ebb92b
  40feb8:	jg     0x40fee7
  40feba:	mov    eax,ds:0x6870dfdc
  40febf:	mov    cl,BYTE PTR [esi]
  40fec1:	and    esi,0x7b
  40fec4:	and    BYTE PTR [ebp+ebx*1+0x5d8434c0],bh
  40fecb:	fnsave [ecx]
  40fecd:	mov    edx,0x90ac1577
  40fed2:	xchg   edx,eax
  40fed3:	cdq    
  40fed4:	mov    ah,0xf4
  40fed6:	mov    esp,0x7f19911c
  40fedb:	sub    BYTE PTR [edi],bl
  40fedd:	fs sub bh,BYTE PTR cs:[edi+0x263ef1cb]
  40fee5:	sbb    ebx,edi
  40fee7:	and    dh,BYTE PTR [ebx+0x2952e0a1]
  40feed:	xor    ecx,DWORD PTR [edx]
  40feef:	or     al,BYTE PTR [eax+ecx*8]
  40fef2:	sub    bl,BYTE PTR [esi]
  40fef4:	ins    DWORD PTR es:[edi],dx
  40fef5:	hlt    
  40fef6:	fisubr WORD PTR [edi-0x43214ebc]
  40fefc:	rol    cl,1
  40fefe:	mov    al,0x6f
  40ff00:	mov    ss,ebx
  40ff02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff03:	cmc    
  40ff04:	jae    0x40ff6c
  40ff06:	inc    esi
  40ff07:	inc    edx
  40ff08:	in     al,dx
  40ff09:	sbb    eax,edx
  40ff0b:	push   esi
  40ff0c:	in     eax,0x6d
  40ff0e:	jle    0x40ff77
  40ff10:	int3   
  40ff11:	ficom  WORD PTR [ecx-0x5]
  40ff14:	packuswb mm1,QWORD PTR [ecx-0x14]
  40ff18:	mov    ah,0xdb
  40ff1a:	inc    esp
  40ff1b:	push   eax
  40ff1c:	sub    al,0x6d
  40ff1e:	pop    ss
  40ff1f:	lahf   
  40ff20:	ret    
  40ff21:	jle    0x40fec3
  40ff23:	cmp    DWORD PTR [edx+0x10],0xac717264
  40ff2a:	imul   DWORD PTR [esp+ebx*1+0x28]
  40ff2e:	stos   DWORD PTR es:[edi],eax
  40ff2f:	cmp    BYTE PTR [edi+eax*1],bh
  40ff32:	sbb    BYTE PTR [esi-0xe],0x1c
  40ff36:	jns    0x40ffa6
  40ff38:	iret   
  40ff39:	and    DWORD PTR [ebx-0x741309ba],edi
  40ff3f:	stos   BYTE PTR es:[edi],al
  40ff40:	push   0xffffffe4
  40ff42:	push   ebp
  40ff43:	push   ebp
  40ff44:	jecxz  0x40ff73
  40ff46:	sbb    DWORD PTR [edx+0x7b1f965b],0x9caa2850
  40ff50:	ret    
  40ff51:	push   esp
  40ff52:	jg     0x40ff37
  40ff54:	lock or eax,0x4849858b
  40ff5a:	or     eax,0xe065da28
  40ff5f:	pop    edx
  40ff60:	pop    ebx
  40ff61:	cli    
  40ff62:	mov    esi,DWORD PTR [ebp-0x3c29c47f]
  40ff68:	mov    esp,0xc2ba6022
  40ff6d:	jno    0x40ff87
  40ff6f:	push   cx
  40ff71:	mov    cl,0x8b
  40ff73:	xsha1  (bad)
  40ff74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff75:	js     0x74be7874
  40ff7b:	loop   0x40ffa6
  40ff7d:	je     0x40ff3e
  40ff7f:	jnp    0x40ffdb
  40ff81:	mov    ebx,0x45a8f0aa
  40ff86:	in     al,dx
  40ff87:	(bad)  
  40ff89:	(bad)
  40ff8c:	fisubr WORD PTR [edx]
  40ff8e:	leave  
  40ff8f:	xchg   edi,eax
  40ff90:	aam    0xb8
  40ff92:	daa    
  40ff93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff94:	jne    0x40ff83
  40ff96:	stc    
  40ff97:	cli    
  40ff98:	dec    DWORD PTR [ecx-0x47]
  40ff9b:	jp     0x410002
  40ff9d:	aas    
  40ff9e:	int3   
  40ff9f:	lahf   
  40ffa0:	jnp    0x40ffd6
  40ffa2:	push   ebp
  40ffa3:	or     BYTE PTR [edi+0x7a],ah
  40ffa6:	pop    eax
  40ffa7:	iret   
  40ffa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffa9:	cs mov ebx,0x3240e87c
  40ffaf:	out    0x6d,eax
  40ffb1:	or     ebp,esi
  40ffb3:	xor    ebx,DWORD PTR [esi+0x1b7667c9]
  40ffb9:	mov    edi,0x8f7cff5
  40ffbe:	popa   
  40ffbf:	and    bh,BYTE PTR [esi+ebx*4+0x4523886a]
  40ffc6:	or     BYTE PTR [ecx-0x53],bl
  40ffc9:	inc    ebx
  40ffca:	push   ss
  40ffcb:	and    edx,eax
  40ffcd:	or     eax,0xe47835b1
  40ffd2:	loop   0x40ffe1
  40ffd4:	push   edx
  40ffd5:	stc    
  40ffd6:	mov    edi,0x376fd385
  40ffdb:	or     DWORD PTR [ebx+eax*1],edx
  40ffde:	lods   eax,DWORD PTR ds:[esi]
  40ffdf:	cdq    
  40ffe0:	and    bh,BYTE PTR [edx+esi*2]
  40ffe3:	stos   BYTE PTR es:[edi],al
  40ffe4:	(bad)  
  40ffe5:	adc    bl,ah
  40ffe7:	stos   DWORD PTR es:[edi],eax
  40ffe8:	fwait
  40ffe9:	test   al,0x36
  40ffeb:	jns    0x410030
  40ffed:	iret   
  40ffee:	mov    ecx,0xfe0603c3
  40fff3:	mov    ecx,0xe29cee4
  40fff8:	dec    ebx
  40fff9:	rol    DWORD PTR [ecx-0x71],0x9c
  40fffd:	ja     0x40ffbc
  40ffff:	lahf   
  410000:	cmp    bh,dh
  410002:	imul   ebx,DWORD PTR [edi-0x19db4847],0x5bd35f9e
  41000c:	jns    0x410075
  41000e:	fild   WORD PTR [esi]
  410010:	push   ds
  410011:	xchg   ebp,eax
  410012:	sti    
  410013:	int    0x60
  410015:	ficomp WORD PTR [eax-0x52]
  410018:	sub    ebx,eax
  41001a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41001b:	scas   al,BYTE PTR es:[edi]
  41001c:	cmp    DWORD PTR [esi+0x74567655],ebp
  410022:	pushf  
  410023:	sub    al,0x29
  410025:	jl     0x41008a
  410027:	les    edi,FWORD PTR [ecx+0x4e3901bb]
  41002d:	jle    0x410007
  41002f:	xchg   edi,eax
  410030:	adc    al,0xb0
  410032:	dec    esi
  410033:	gs lahf 
  410035:	or     al,0x13
  410037:	popf   
  410038:	cmp    eax,ebx
  41003a:	fnstcw WORD PTR [edi]
  41003c:	loop   0x40fff3
  41003e:	mov    ah,0xfb
  410040:	jp     0x40fff5
  410042:	rol    al,0xc6
  410045:	sahf   
  410046:	imul   ecx,esi,0xffffffa5
  410049:	ret    0x5b54
  41004c:	sbb    ah,BYTE PTR [edi+0x3b]
  41004f:	gs xchg ebx,eax
  410051:	sti    
  410052:	shl    DWORD PTR [eax],0xa1
  410055:	pop    edi
  410056:	xchg   DWORD PTR [edx-0x6d],esp
  410059:	call   0x76e86cda
  41005e:	sub    eax,0xef062c64
  410063:	push   ebp
  410064:	pop    esp
  410065:	xor    al,0xbe
  410067:	and    BYTE PTR [edi],al
  410069:	cmp    eax,0x3837f25
  41006e:	push   ebx
  41006f:	imul   ebp,DWORD PTR [esp+edx*2-0x70955ef2],0x59fde594
  41007a:	adc    esp,DWORD PTR [ebp-0x29]
  41007d:	leave  
  41007e:	mov    ebp,cs
  410080:	aaa    
  410081:	inc    esp
  410082:	jge    0x41009f
  410084:	dec    ebx
  410085:	ins    BYTE PTR es:[edi],dx
  410086:	test   DWORD PTR ss:[eax],esp
  410089:	xor    ebp,DWORD PTR [eax+0x3cb2b6d4]
  41008f:	or     BYTE PTR [edi],cl
  410091:	stos   DWORD PTR es:[edi],eax
  410092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410093:	cmp    BYTE PTR [ebx+0x48],cl
  410096:	pushf  
  410097:	pop    eax
  410098:	lds    edi,FWORD PTR [edx-0x5c]
  41009b:	pop    ebp
  41009c:	inc    ecx
  41009d:	sub    eax,0xd0a4543d
  4100a3:	in     eax,0xfd
  4100a5:	jg     0x410103
  4100a7:	and    eax,0x8f3beda8
  4100ac:	xlat   BYTE PTR ds:[ebx]
  4100ad:	in     eax,0x80
  4100af:	or     bl,cl
  4100b1:	lahf   
  4100b2:	dec    ebx
  4100b3:	int    0x60
  4100b5:	pop    eax
  4100b6:	ss pop esi
  4100b8:	pop    ecx
  4100b9:	pop    edx
  4100ba:	das    
  4100bb:	xchg   ecx,eax
  4100bc:	(bad)  
  4100bd:	loop   0x41005e
  4100bf:	ror    al,0x97
  4100c2:	in     al,0x91
  4100c4:	out    dx,al
  4100c5:	inc    ecx
  4100c6:	sbb    eax,0xf28b6aeb
  4100cb:	adc    al,0xfc
  4100cd:	pop    esp
  4100ce:	jg     0x410074
  4100d0:	les    ebx,FWORD PTR [esi+edx*2-0x72b46bfd]
  4100d7:	sbb    DWORD PTR [esi-0x70],0xb03223b8
  4100de:	lods   al,BYTE PTR ds:[esi]
  4100df:	push   ecx
  4100e0:	cmp    al,0x9e
  4100e2:	jl     0x4100c9
  4100e4:	scas   eax,DWORD PTR es:[edi]
  4100e5:	jo     0x4100c8
  4100e7:	daa    
  4100e8:	hlt    
  4100e9:	loop   0x4100bb
  4100eb:	sbb    al,0x9c
  4100ed:	or     al,BYTE PTR [ebx]
  4100ef:	xchg   ecx,eax
  4100f0:	pop    esp
  4100f1:	sahf   
  4100f2:	cmp    al,BYTE PTR [ecx]
  4100f4:	(bad)  
  4100f5:	pop    edi
  4100f6:	pop    ebp
  4100f7:	js     0x4100a7
  4100f9:	push   edi
  4100fa:	adc    ecx,DWORD PTR [edx+esi*2-0x39]
  4100fe:	into   
  4100ff:	icebp  
  410100:	gs sbb al,0x42
  410103:	xor    ecx,DWORD PTR [eax]
  410105:	dec    edx
  410106:	mov    ecx,0x9b42a3ea
  41010b:	call   0x48de4cd9
  410110:	push   esi
  410111:	fist   WORD PTR [esi+0x676fcd8d]
  410117:	jnp    0x4100f5
  410119:	pop    eax
  41011a:	retf   0xd7f7
  41011d:	adc    DWORD PTR [ecx-0x65452f06],ecx
  410123:	pop    ebx
  410124:	(bad)  
  410125:	cld    
  410126:	bound  edx,QWORD PTR [edx+0x68]
  410129:	add    DWORD PTR ds:0xcd1965d0,0x0
  410130:	shl    DWORD PTR [ecx+edi*2-0x42],1
  410134:	lock inc ebp
  410136:	in     eax,dx
  410137:	xchg   DWORD PTR [ebp+0x15],ebp
  41013a:	pushf  
  41013b:	loop   0x4100db
  41013d:	(bad)  
  41013e:	(bad)  
  410140:	stos   DWORD PTR es:[edi],eax
  410141:	mov    BYTE PTR [eax],al
  410143:	inc    ecx
  410144:	or     ebp,edi
  410146:	or     ah,cl
  410148:	repnz xchg ebx,eax
  41014a:	cdq    
  41014b:	aam    0xbc
  41014d:	and    eax,0xe0bca9e6
  410152:	ror    BYTE PTR [edx+0xb],1
  410155:	cwde   
  410156:	ror    DWORD PTR [eax],1
  410158:	xchg   esi,eax
  410159:	dec    BYTE PTR [ecx+0x29]
  41015c:	mov    ecx,0x9f118cec
  410161:	pop    DWORD PTR [ebx+ecx*4-0x90bc023]
  410168:	(bad)  
  410169:	mov    eax,ds:0xda88525b
  41016e:	sbb    cl,bh
  410170:	adc    BYTE PTR [ebx-0x25],dl
  410173:	fidiv  WORD PTR [edi+0x1cb7bec6]
  410179:	nop
  41017a:	les    ebx,FWORD PTR cs:[ecx+0x48]
  41017e:	ss push ebx
  410180:	and    eax,0xcf097a8c
  410185:	lds    ecx,FWORD PTR [ebx]
  410187:	aaa    
  410188:	sub    DWORD PTR [ecx-0x6a],0x14fc7ef5
  41018f:	pop    ecx
  410190:	les    eax,FWORD PTR [ecx+0x3ddf2a78]
  410196:	ret    
  410197:	mov    ebp,0x58710388
  41019c:	inc    ebx
  41019d:	mov    edi,0x4cac4156
  4101a2:	popf   
  4101a3:	cmp    BYTE PTR ss:[esi-0x63a87d96],ah
  4101aa:	jp     0x4101e2
  4101ac:	jae    0x4101cc
  4101ae:	adc    esp,eax
  4101b0:	sub    eax,0x798950af
  4101b5:	add    BYTE PTR [ecx],0x46
  4101b8:	jecxz  0x410160
  4101ba:	shr    BYTE PTR [edi+0x57c768ec],cl
  4101c0:	sub    ebx,0x6eeaebc4
  4101c6:	push   eax
  4101c7:	inc    ecx
  4101c8:	ja     0x410225
  4101ca:	inc    ecx
  4101cb:	sahf   
  4101cc:	cli    
  4101cd:	lods   al,BYTE PTR ds:[esi]
  4101ce:	xor    ebx,DWORD PTR [ebp+ebp*8-0x4c43201]
  4101d5:	pop    ds
  4101d6:	jmp    0x817e:0x6811588
  4101dd:	inc    esp
  4101de:	and    ecx,DWORD PTR [edi]
  4101e0:	jmp    0xfb035a16
  4101e5:	popa   
  4101e6:	ins    DWORD PTR es:[edi],dx
  4101e7:	outs   dx,BYTE PTR ds:[esi]
  4101e8:	je     0x4101dc
  4101ea:	xchg   ebx,eax
  4101eb:	lock jns 0xbdb4ebd4
  4101f2:	jp     0x410190
  4101f4:	xchg   ecx,ecx
  4101f6:	ins    DWORD PTR es:[edi],dx
  4101f7:	popf   
  4101f8:	jl     0x410279
  4101fa:	or     al,0xd7
  4101fc:	add    DWORD PTR [ecx],eax
  4101fe:	dec    ecx
  4101ff:	cmp    cl,BYTE PTR [eax+esi*8]
  410202:	sub    DWORD PTR [eax+0x3b17d5dd],edi
  410208:	push   eax
  410209:	popa   
  41020a:	mov    al,ds:0xcf610ce
  41020f:	not    dl
  410211:	test   DWORD PTR [esi],esp
  410213:	mov    ?,ebp
  410215:	sub    al,0x5f
  410217:	repnz out dx,al
  410219:	push   edx
  41021a:	pop    esi
  41021b:	push   esp
  41021c:	push   ss
  41021d:	adc    al,BYTE PTR [esi-0x492881f6]
  410223:	cs jl  0x4101e0
  410226:	into   
  410227:	xchg   ebp,eax
  410228:	xor    DWORD PTR [ebx+0x72d4567f],ebp
  41022e:	mov    cl,0xc2
  410230:	test   DWORD PTR ds:0x4a7c81db,esp
  410236:	mov    esp,0xc0fcd48b
  41023b:	push   ecx
  41023c:	aas    
  41023d:	js     0x4101cc
  41023f:	fdivr  st(0),st
  410241:	out    0x18,eax
  410243:	push   ebx
  410244:	jno    0x4101e0
  410246:	ss popf 
  410248:	iret   
  410249:	push   edx
  41024a:	inc    edi
  41024b:	push   ebp
  41024c:	out    0x2a,eax
  41024e:	hlt    
  41024f:	push   cs
  410250:	push   ds
  410251:	out    dx,al
  410252:	pop    eax
  410253:	fsubr  st(7),st
  410255:	add    al,0x5f
  410257:	push   ebx
  410258:	xchg   ecx,eax
  410259:	call   0xc60e:0x349bdab7
  410260:	icebp  
  410261:	int    0x0
  410263:	cmp    edi,DWORD PTR [esi]
  410265:	lock mov ah,0xc7
  410268:	arpl   WORD PTR [edi+0x7a3ceaf],si
  41026e:	or     eax,0xa9ee0722
  410273:	test   BYTE PTR [esi+0x30],cl
  410276:	mov    dl,bh
  410278:	xchg   ecx,eax
  410279:	mov    edx,ebx
  41027b:	lea    ebp,[esi+0x38]
  41027e:	repz jp 0x4102d4
  410281:	jne    0x410265
  410283:	add    eax,0x3d73ed58
  410288:	xchg   DWORD PTR [edi-0x4c],esp
  41028b:	mov    dl,0x73
  41028d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41028e:	and    BYTE PTR [eax+0x3f0ed727],ch
  410294:	pushf  
  410295:	push   eax
  410296:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410297:	xchg   esi,eax
  410298:	pop    eax
  410299:	cmc    
  41029a:	stos   BYTE PTR es:[edi],al
  41029b:	push   esi
  41029c:	jb     0x4102e6
  41029e:	inc    ecx
  41029f:	dec    esi
  4102a0:	ins    DWORD PTR es:[edi],dx
  4102a1:	inc    ebx
  4102a2:	jg     0x4102d9
  4102a4:	je     0x4102b9
  4102a6:	push   cs
  4102a7:	js     0x41028b
  4102a9:	xor    eax,DWORD PTR [ebx+0x47]
  4102ac:	push   ecx
  4102ad:	jns    0x4102fe
  4102af:	push   ss
  4102b0:	sub    edi,esi
  4102b2:	sub    dh,BYTE PTR [ebx+esi*4-0x4fce8e9f]
  4102b9:	push   edi
  4102ba:	xchg   esp,eax
  4102bb:	inc    edi
  4102bc:	sahf   
  4102bd:	xchg   ebx,eax
  4102be:	jmp    0x4102b4
  4102c0:	shr    BYTE PTR [eax+0x4429545f],0xf6
  4102c7:	pop    ss
  4102c8:	mov    edi,0xe67b1564
  4102cd:	(bad)  
  4102ce:	call   DWORD PTR [ebp+edi*8+0x67]
  4102d2:	inc    eax
  4102d3:	aad    0xd6
  4102d5:	sbb    eax,0xa6b7631c
  4102da:	pop    esp
  4102db:	pop    ebp
  4102dc:	pop    ebp
  4102dd:	out    0x19,al
  4102df:	mov    esp,cs
  4102e1:	fdiv   QWORD PTR cs:[bx-0x2]
  4102e6:	or     eax,0xc46a635c
  4102eb:	ret    
  4102ec:	aaa    
  4102ed:	(bad)  
  4102ee:	(bad)  
  4102ef:	push   0xffffffce
  4102f1:	dec    ecx
  4102f2:	sbb    cl,BYTE PTR [esi+0x3453ac35]
  4102f8:	mov    DWORD PTR [esi],0x531299bf
  4102fe:	mov    ebx,edx
  410300:	aad    0x47
  410302:	nop
  410303:	push   es
  410304:	jb     0x41028d
  410306:	je     0x410366
  410308:	xchg   ebx,eax
  410309:	arpl   WORD PTR [edi+ebx*1],si
  41030c:	stos   DWORD PTR es:[edi],eax
  41030d:	iret   
  41030e:	hlt    
  41030f:	xchg   edx,eax
  410310:	inc    ebp
  410311:	fdiv   QWORD PTR [edx+0x6d]
  410314:	push   ebx
  410315:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410316:	xchg   ebp,eax
  410317:	xchg   BYTE PTR [edi+0x54],cl
  41031a:	jns    0x4102a7
  41031c:	test   BYTE PTR [esi+eiz*8-0x3d37de50],ah
  410323:	mov    es,WORD PTR [edx+ecx*4]
  410326:	repz lds esp,FWORD PTR [edi-0x59]
  41032a:	mov    ds:0xac8b24e3,al
  41032f:	out    dx,eax
  410330:	in     al,0x65
  410332:	fxch   st(5)
  410334:	pop    ecx
  410335:	dec    edx
  410336:	rcr    BYTE PTR [ebp+0x13],1
  410339:	pop    ebx
  41033a:	pop    ebx
  41033b:	mov    dl,0x5b
  41033d:	xchg   ecx,eax
  41033e:	pop    ecx
  41033f:	mov    esp,0xba7029a1
  410344:	retf   
  410345:	pop    ss
  410346:	scas   eax,DWORD PTR es:[edi]
  410347:	cld    
  410348:	pop    ds
  410349:	dec    ebx
  41034a:	jnp    0x410326
  41034c:	xor    BYTE PTR fs:[ecx+eiz*8-0x33],dh
  410351:	fs arpl si,bx
  410354:	or     ch,BYTE PTR [ebp-0x3e9158f0]
  41035a:	mul    BYTE PTR [eax+0x30]
  41035d:	jne    0x4103d3
  41035f:	dec    edx
  410360:	adc    al,0xf2
  410362:	xor    esp,ebp
  410364:	mov    edi,0x9ad340ce
  410369:	pop    esp
  41036a:	ss push eax
  41036c:	(bad)
  41036f:	add    eax,0xe05dd10
  410374:	adc    dh,BYTE PTR ds:[ebp+0x27]
  410378:	lock fsub DWORD PTR [eax+0x79]
  41037c:	pop    edi
  41037d:	dec    ebp
  41037e:	and    BYTE PTR [ecx-0x47dacc4d],0x53
  410385:	out    0xb0,al
  410387:	inc    edi
  410388:	sbb    al,0xcc
  41038a:	sbb    eax,DWORD PTR ds:0x20d57c84
  410390:	mov    ds:0xe51feb2e,eax
  410395:	add    edx,esi
  410397:	jns    0x410369
  410399:	in     al,0x98
  41039b:	or     edx,DWORD PTR [edi]
  41039d:	mov    BYTE PTR [eax+0x6496205b],0x8f
  4103a4:	cmp    DWORD PTR [edi],ebp
  4103a6:	ret    0xfd7d
  4103a9:	mov    DWORD PTR [edi-0x51aec0f],eax
  4103af:	xor    ebp,ecx
  4103b1:	lods   eax,DWORD PTR ds:[esi]
  4103b2:	and    al,0x8c
  4103b4:	mov    ch,al
  4103b6:	jecxz  0x41042b
  4103b8:	jl     0x4103d3
  4103ba:	(bad)  
  4103bb:	ficomp WORD PTR [ebx+eiz*1]
  4103be:	adc    bh,bl
  4103c0:	ins    BYTE PTR es:[edi],dx
  4103c1:	pop    edx
  4103c2:	xchg   esp,eax
  4103c3:	or     BYTE PTR [edx-0x3a],al
  4103c6:	cmp    ch,bl
  4103c8:	scas   eax,DWORD PTR es:[edi]
  4103c9:	cld    
  4103ca:	cmp    al,0xbe
  4103cc:	jnp    0x4103f1
  4103ce:	mov    eax,ds:0x332feb26
  4103d3:	pop    eax
  4103d4:	(bad)  
  4103d5:	std    
  4103d6:	(bad)  
  4103d7:	out    dx,al
  4103d8:	inc    ebx
  4103d9:	jmp    0x6a46e9ca
  4103de:	mov    dh,0xf6
  4103e0:	or     eax,0xe941121e
  4103e5:	pop    ecx
  4103e6:	lods   eax,DWORD PTR ds:[esi]
  4103e7:	jle    0x4103b5
  4103e9:	add    BYTE PTR [edi+0x203eaeb3],ah
  4103ef:	das    
  4103f0:	and    al,0x67
  4103f2:	mov    esi,0x114d72ce
  4103f7:	call   0xd78c1646
  4103fc:	mov    bl,0xf6
  4103fe:	stos   DWORD PTR es:[edi],eax
  4103ff:	mov    eax,ds:0x59b4e87c
  410404:	xchg   cl,ah
  410406:	xchg   DWORD PTR [bx+di-0x27],ebp
  41040a:	xchg   ebp,eax
  41040b:	xchg   ebp,eax
  41040c:	dec    edx
  41040d:	push   esi
  41040e:	retf   
  41040f:	push   edi
  410410:	dec    esi
  410411:	outs   dx,DWORD PTR ds:[esi]
  410412:	sub    eax,DWORD PTR [edi]
  410414:	gs add ecx,edx
  410417:	push   cs
  410418:	pusha  
  410419:	rol    BYTE PTR [ebp+0x1dd588dd],cl
  41041f:	mov    es,edi
  410421:	jbe    0x410415
  410423:	dec    ecx
  410424:	sbb    esi,edi
  410426:	arpl   WORD PTR [edi-0x35],bp
  410429:	je     0x410449
  41042b:	(bad)  
  41042c:	xor    edi,DWORD PTR [edx]
  41042e:	rcl    ebx,1
  410430:	add    esi,DWORD PTR [ebx+0x70]
  410433:	lods   eax,DWORD PTR ds:[esi]
  410434:	sbb    eax,DWORD PTR [esi]
  410436:	rcl    DWORD PTR [edi-0x74],0x59
  41043a:	fwait
  41043b:	inc    edx
  41043c:	sub    BYTE PTR [edi+0x28fac637],cl
  410442:	jle    0x410468
  410444:	test   BYTE PTR [eax],bl
  410446:	dec    edx
  410447:	test   BYTE PTR [eax-0x3ee25b06],0xe9
  41044e:	outs   dx,BYTE PTR ds:[esi]
  41044f:	pcmpgtd mm4,QWORD PTR [edi]
  410452:	jge    0x410471
  410454:	mov    bh,0x5a
  410456:	adc    esi,DWORD PTR [ebx]
  410458:	mov    cl,0x23
  41045a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41045b:	cld    
  41045c:	xor    esi,DWORD PTR [edx-0x73]
  41045f:	sub    eax,0x843545d2
  410464:	lea    eax,[esi-0x68]
  410467:	sbb    ebp,0xffffffbc
  41046a:	fcomp  DWORD PTR [ecx+0x3c]
  41046d:	aad    0xc2
  41046f:	sub    al,0x6
  410471:	(bad)  
  410472:	retf   
  410473:	ds jmp 0x410406
  410476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410477:	int    0x3c
  410479:	fcom   DWORD PTR [ebp+0x7a55d1dc]
  41047f:	dec    ebp
  410480:	inc    ebx
  410481:	popa   
  410482:	out    dx,eax
  410483:	xor    DWORD PTR [edx],eax
  410485:	cmp    ecx,DWORD PTR [ebx+0x3b71f28]
  41048b:	gs cwde 
  41048d:	sbb    esi,0x5fbef5f8
  410493:	shl    DWORD PTR [esi+eax*2],0xc5
  410497:	hlt    
  410498:	bound  esp,QWORD PTR [ecx-0x6fa96bd]
  41049e:	adc    eax,0x8c6d6166
  4104a3:	jno    0x410440
  4104a5:	push   edx
  4104a6:	nop
  4104a7:	jbe    0x410515
  4104a9:	pushf  
  4104aa:	jle    0x4104f8
  4104ac:	dec    esp
  4104ad:	mov    edx,0x1ae2d496
  4104b2:	aam    0x83
  4104b4:	cmp    eax,0x866b2ab7
  4104b9:	sti    
  4104ba:	clc    
  4104bb:	sbb    edi,DWORD PTR [esi]
  4104bd:	jge    0x4104c6
  4104bf:	mov    DWORD PTR [ebx],edi
  4104c1:	rcl    DWORD PTR [ecx],1
  4104c3:	int3   
  4104c4:	cmp    cl,BYTE PTR [edx+0x7c]
  4104c7:	out    dx,eax
  4104c8:	fisttp DWORD PTR [eax+0x18]
  4104cb:	adc    cl,BYTE PTR [ecx]
  4104cd:	lods   al,BYTE PTR ds:[esi]
  4104ce:	pushf  
  4104cf:	outs   dx,DWORD PTR ds:[esi]
  4104d0:	lahf   
  4104d1:	xchg   edi,eax
  4104d2:	imul   ebx,ebx,0x27
  4104d5:	stos   BYTE PTR es:[edi],al
  4104d6:	lods   eax,DWORD PTR ds:[esi]
  4104d7:	mov    cl,0x53
  4104d9:	inc    eax
  4104da:	(bad)  
  4104db:	cmp    esp,DWORD PTR [esi+0x6b]
  4104de:	gs jne 0x4104aa
  4104e1:	and    BYTE PTR [ebp+0x21a9c697],ch
  4104e7:	pop    esi
  4104e8:	test   al,0x9e
  4104ea:	cmp    esi,DWORD PTR ds:0x110e5098
  4104f0:	inc    ebp
  4104f1:	ret    0x8c61
  4104f4:	or     DWORD PTR [ebp+0x50],edi
  4104f7:	cmp    edx,ecx
  4104f9:	add    DWORD PTR [edi+0x2891d7f8],0x2e
  410500:	(bad)  
  410501:	retf   0x1f54
  410504:	cdq    
  410505:	cwde   
  410506:	cmp    ecx,DWORD PTR [ecx+0x66fbf543]
  41050c:	sbb    BYTE PTR [edx-0x78b7fc0e],al
  410512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410513:	adc    al,0x26
  410515:	add    eax,0x85cc9a80
  41051a:	jl     0x41053a
  41051c:	repz cmp dl,BYTE PTR [ebx+0x2c]
  410520:	cmp    esi,DWORD PTR [ebp-0x26]
  410523:	lods   eax,DWORD PTR ds:[esi]
  410524:	cwde   
  410525:	mov    eax,edi
  410527:	jno    0x410595
  410529:	dec    ebx
  41052a:	jno    0x4104ed
  41052c:	iret   
  41052d:	mov    ecx,0x79e442b3
  410532:	inc    ebp
  410533:	nop
  410534:	ins    BYTE PTR es:[edi],dx
  410535:	fsubr  DWORD PTR [eax+0x1710037f]
  41053b:	lds    ebx,FWORD PTR [ebx+0x1]
  41053e:	sub    cl,BYTE PTR [ecx+edx*1+0x75]
  410542:	in     eax,0x38
  410544:	mov    ch,0x54
  410546:	inc    esp
  410547:	or     ebp,DWORD PTR ds:0x45255d6a
  41054d:	addr16 sub eax,0x538b6be7
  410553:	repz cmp BYTE PTR [ecx+0x70],dl
  410557:	sbb    eax,0x1af25db1
  41055c:	cmp    esp,DWORD PTR [esi]
  41055e:	(bad)  
  41055f:	mov    edx,0xf4824e00
  410564:	mov    bh,0xd8
  410566:	mov    esp,0x2924db78
  41056b:	mov    eax,ds:0x7603d191
  410570:	test   BYTE PTR [ecx-0x7ffbdb3e],ah
  410576:	xchg   ebx,eax
  410577:	ret    
  410578:	mov    edi,0xd53192cc
  41057d:	fidivr WORD PTR [ecx-0x3b]
  410580:	jno    0x410519
  410582:	xor    ch,ah
  410584:	icebp  
  410585:	lods   eax,DWORD PTR ds:[esi]
  410586:	push   cs
  410587:	retf   
  410588:	test   al,0xee
  41058a:	mov    ebp,0x92e8b808
  41058f:	shl    eax,0x48
  410592:	jnp    0x410563
  410594:	xor    eax,0xe046e3fa
  410599:	int    0x64
  41059b:	rcr    cl,0x83
  41059e:	hlt    
  41059f:	hlt    
  4105a0:	es mov bh,0x1f
  4105a3:	retf   
  4105a4:	cmp    DWORD PTR [esi+0x9],esi
  4105a7:	js     0x410545
  4105a9:	add    ch,BYTE PTR [ebp+0x76fc24bc]
  4105af:	and    DWORD PTR [ebp-0xa9accb3],0xf184117b
  4105b9:	stos   DWORD PTR es:[edi],eax
  4105ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105bb:	adc    eax,0x4d5d7981
  4105c0:	xor    DWORD PTR [eax+0x32],ebx
  4105c3:	xlat   BYTE PTR ds:[ebx]
  4105c4:	and    ah,BYTE PTR [eax]
  4105c6:	loope  0x41062b
  4105c8:	push   es
  4105c9:	test   al,0xde
  4105cb:	add    ecx,DWORD PTR fs:[ecx-0x498fe14e]
  4105d2:	ror    BYTE PTR [eax],1
  4105d4:	sahf   
  4105d5:	inc    esp
  4105d6:	into   
  4105d7:	dec    esi
  4105d8:	adc    eax,0x2dee269c
  4105dd:	xor    DWORD PTR [ebx-0x1897535c],ebp
  4105e3:	inc    ebp
  4105e4:	loopne 0x410601
  4105e6:	icebp  
  4105e7:	lods   eax,DWORD PTR ds:[esi]
  4105e8:	repnz sub ah,ah
  4105eb:	fstp   DWORD PTR [eax-0x3d]
  4105ee:	lahf   
  4105ef:	sar    BYTE PTR [edi],cl
  4105f1:	mov    gs,WORD PTR [eax+0x7df8146a]
  4105f7:	dec    esp
  4105f8:	push   0xea0fd9bb
  4105fd:	inc    edi
  4105fe:	cmp    al,0xa9
  410600:	imul   esp,esi,0xffffff9d
  410603:	mov    edi,0xb3eef6f5
  410608:	mov    ss,WORD PTR [edi+0x6]
  41060b:	call   0x31d9354d
  410610:	stos   DWORD PTR es:[edi],eax
  410611:	mov    bl,0x23
  410613:	je     0x41060b
  410615:	inc    esi
  410616:	ficomp DWORD PTR [ecx]
  410618:	jmp    0x410623
  41061a:	xlat   BYTE PTR ds:[ebx]
  41061b:	scas   eax,DWORD PTR es:[edi]
  41061c:	xchg   ah,bl
  41061e:	xor    bl,dh
  410620:	or     DWORD PTR [esi+0x76],0x805a481f
  410627:	xor    ecx,DWORD PTR [ecx+0x582b0007]
  41062d:	mov    dh,0xbe
  41062f:	mov    ?,ebp
  410631:	lahf   
  410632:	inc    ecx
  410633:	cs mov esp,edx
  410636:	inc    eax
  410637:	or     eax,0x600494c0
  41063c:	enter  0x8576,0xb
  410640:	ja     0x41069b
  410642:	out    dx,al
  410643:	jl     0x4105ea
  410645:	pop    es
  410646:	or     ecx,edi
  410648:	fisttp QWORD PTR [edx-0x3e3f87b9]
  41064e:	mov    DWORD PTR [edi-0x7e0e7ed5],ecx
  410654:	adc    ah,ah
  410656:	mov    bh,0x73
  410658:	cmp    DWORD PTR [edi+0x65],esp
  41065b:	add    al,0xb2
  41065d:	imul   esp,esp,0xffffffb6
  410660:	popf   
  410661:	xlat   BYTE PTR ds:[ebx]
  410662:	adc    BYTE PTR [eax+0x43],bh
  410665:	jae    0x4105fc
  410667:	pop    es
  410668:	cmp    al,bh
  41066a:	sbb    eax,0xc1ffd20b
  41066f:	in     eax,0x83
  410671:	xor    eax,esp
  410673:	dec    ebx
  410674:	pop    edi
  410675:	call   DWORD PTR [esi+0x64]
  410678:	(bad)  
  410679:	scas   eax,DWORD PTR es:[edi]
  41067a:	lea    esp,[esp+ecx*4+0x63]
  41067e:	mov    cs,WORD PTR [ecx-0x4]
  410681:	mov    bh,0xc9
  410683:	dec    edx
  410684:	mov    esi,DWORD PTR [ebx-0x3f858401]
  41068a:	mov    bl,0x39
  41068c:	cs loope 0x4106bd
  41068f:	mov    DWORD PTR [ebp-0x21e3964a],ecx
  410695:	rol    esp,1
  410697:	daa    
  410698:	dec    esp
  410699:	sub    al,0xd
  41069b:	cmp    ebp,DWORD PTR ds:[edi-0x4f]
  41069f:	fdivr  st,st(2)
  4106a1:	adc    eax,0x4c1453d4
  4106a6:	mov    cl,bl
  4106a8:	in     eax,0x80
  4106aa:	sbb    al,0x32
  4106ac:	sahf   
  4106ad:	hlt    
  4106ae:	daa    
  4106af:	xchg   esi,eax
  4106b1:	je     0x410686
  4106b3:	jecxz  0x41072c
  4106b5:	jmp    0x4106ec
  4106b7:	rcr    DWORD PTR [eax-0x3bf7839],0xb3
  4106be:	adc    dl,BYTE PTR [edx]
  4106c0:	retf   
  4106c1:	xchg   esp,eax
  4106c2:	in     eax,dx
  4106c3:	popf   
  4106c4:	test   eax,0xa2f728d4
  4106ca:	dec    esp
  4106cb:	xor    ah,ah
  4106cd:	out    dx,eax
  4106ce:	push   ebp
  4106cf:	cs pop esp
  4106d1:	lock jmp 0x49ee:0xebfd16c9
  4106d9:	and    cl,ah
  4106db:	adc    al,0x7f
  4106dd:	leave  
  4106de:	add    esi,DWORD PTR es:[edi]
  4106e1:	add    edx,esi
  4106e3:	sub    al,0xd1
  4106e5:	dec    ebp
  4106e6:	out    0x5,al
  4106e8:	and    cl,BYTE PTR [eax]
  4106ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106eb:	mov    bh,0x16
  4106ed:	call   FWORD PTR ds:0xe7def6a6
  4106f3:	xchg   esp,eax
  4106f4:	pop    ebp
  4106f5:	push   ebp
  4106f6:	(bad)  
  4106f8:	or     bh,BYTE PTR [ecx+0x26]
  4106fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106fc:	pushf  
  4106fd:	test   eax,0xd608d245
  410702:	icebp  
  410703:	sbb    eax,0x2c68b405
  410709:	rol    BYTE PTR [ebx-0x706e5baa],1
  41070f:	loopne 0x4106be
  410711:	jle    0x410789
  410713:	fs pushf 
  410715:	ins    DWORD PTR es:[edi],dx
  410716:	mov    ebx,0x91714d22
  41071b:	rcl    DWORD PTR [edx+0x5fa838f3],0xe6
  410722:	xchg   ebp,eax
  410723:	js     0x410724
  410725:	test   eax,0x63fa273a
  41072a:	xchg   ecx,eax
  41072b:	dec    ebp
  41072c:	xchg   edi,eax
  41072d:	pushf  
  41072e:	aaa    
  41072f:	add    eax,DWORD PTR [esi+0x1b33a01a]
  410735:	stos   DWORD PTR es:[edi],eax
  410736:	popa   
  410737:	in     al,0x6e
  410739:	int3   
  41073a:	or     eax,0x77eee56b
  41073f:	and    ch,BYTE PTR [esi+0x34417ceb]
  410745:	add    BYTE PTR [edx-0x5027a2bd],0x2c
  41074c:	shl    BYTE PTR [edx+0x57e7ee50],1
  410752:	cmp    ebp,edi
  410754:	xor    eax,DWORD PTR [edx]
  410756:	fs ds pop eax
  410759:	pop    esp
  41075a:	pop    ebx
  41075b:	shl    BYTE PTR [eax+0x66],cl
  41075e:	cdq    
  41075f:	jnp    0x4106e8
  410761:	cmp    eax,0x2c07ab97
  410766:	mov    eax,ds:0xce2fc8e7
  41076b:	push   esp
  41076c:	aam    0xad
  41076e:	dec    ecx
  41076f:	bnd jo 0x410766
  410772:	push   eax
  410773:	test   DWORD PTR [ecx-0x18],edx
  410776:	clc    
  410777:	mov    bl,0xeb
  410779:	add    al,ch
  41077b:	mov    bl,0x8f
  41077d:	into   
  41077e:	mov    ebp,0xf58bdd92
  410783:	std    
  410784:	inc    ebx
  410785:	dec    ebp
  410786:	xor    BYTE PTR [esi],0x89
  410789:	outs   dx,BYTE PTR ds:[esi]
  41078a:	lock int3 
  41078c:	imul   eax,esi,0xc55d53ee
  410792:	retf   0xd73
  410795:	(bad)  
  410796:	not    DWORD PTR [ebp+0x5dba3ae4]
  41079c:	(bad)  
  41079d:	push   esp
  41079e:	xor    dl,dl
  4107a0:	or     edi,DWORD PTR [ecx]
  4107a2:	sbb    esi,DWORD PTR [edx+edx*1+0xe]
  4107a6:	mov    dh,0x43
  4107a8:	mov    dh,0x7d
  4107aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107ab:	mov    edi,DWORD PTR [edx+0x2c]
  4107ae:	std    
  4107af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107b0:	push   ebp
  4107b1:	cld    
  4107b2:	inc    ebx
  4107b3:	mov    dh,0x2f
  4107b5:	xor    DWORD PTR [ebp+eiz*1-0x78],0x35
  4107ba:	xor    al,BYTE PTR [esi+0x4c]
  4107bd:	xchg   DWORD PTR [edi-0x1eed85b2],ebp
  4107c3:	xchg   esp,eax
  4107c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107c5:	mov    ebx,0x11926ec8
  4107ca:	jbe    0x4107e0
  4107cc:	inc    ebx
  4107cd:	mov    ds:0xc9e108df,eax
  4107d2:	sbb    ebp,DWORD PTR [esi+0x3]
  4107d5:	(bad)  
  4107d6:	(bad)  
  4107d7:	and    eax,DWORD PTR [eax+0x2b506252]
  4107dd:	push   ds
  4107de:	jp     0x41079c
  4107e0:	cmp    BYTE PTR [ecx+ecx*4+0x13d57ac3],bh
  4107e7:	dec    eax
  4107e8:	mov    al,ds:0x2f4b1811
  4107ed:	out    dx,eax
  4107ee:	mov    cs,WORD PTR [ebx+0x573a2ac7]
  4107f4:	lock cmp DWORD PTR [eax+ebx*2],0xfffffff5
  4107f9:	enter  0xd5e,0x9f
  4107fd:	dec    edx
  4107fe:	les    edx,FWORD PTR [esi+0x70]
  410801:	inc    esi
  410802:	std    
  410803:	bound  esi,QWORD PTR [edi]
  410805:	aas    
  410806:	mov    ds:0x5676b63c,eax
  41080b:	pop    ebp
  41080c:	dec    edi
  41080d:	push   eax
  41080e:	inc    esi
  41080f:	gs mov eax,0x2103ffcc
  410815:	xor    dh,dh
  410817:	retf   0xc112
  41081a:	rcr    BYTE PTR [edi+esi*8-0x24d6539b],cl
  410821:	push   edi
  410822:	dec    esp
  410823:	push   edi
  410824:	inc    ecx
  410825:	out    0x1e,al
  410827:	push   ebx
  410828:	dec    ebp
  410829:	rcl    DWORD PTR [ecx-0x5379a95f],0x2e
  410830:	repnz mov esp,0x4cf4ecba
  410836:	mov    dl,0xad
  410838:	xor    al,0xe2
  41083a:	inc    edi
  41083b:	outs   dx,BYTE PTR ds:[esi]
  41083c:	mov    BYTE PTR [eax],cl
  41083e:	std    
  41083f:	arpl   WORD PTR [ecx-0x41],cx
  410842:	(bad)  
  410843:	sbb    bh,BYTE PTR [edx+0x70e76606]
  410849:	(bad)  
  41084a:	jp     0x410876
  41084c:	stos   DWORD PTR es:[edi],eax
  41084d:	jg     0x4107e9
  41084f:	pop    ebx
  410850:	pusha  
  410851:	mov    edx,0x771e882f
  410856:	add    ch,bl
  410858:	sbb    al,0x7
  41085a:	sbb    al,0xa6
  41085c:	or     dh,0x2b
  41085f:	sbb    BYTE PTR [edx],cl
  410861:	lods   al,BYTE PTR ds:[esi]
  410862:	pop    ebp
  410863:	or     BYTE PTR [edx+0x5d1cb29d],ch
  410869:	xor    edi,DWORD PTR [edx]
  41086b:	repz mov eax,ds:0xb636d55
  410871:	jb     0x410842
  410873:	sti    
  410874:	les    ecx,FWORD PTR [ebx]
  410876:	push   cs
  410877:	push   edi
  410878:	fldenv [esi]
  41087a:	jmp    0x9eac:0xafa5d3fc
  410881:	mov    ah,0x2
  410883:	nop
  410884:	adc    al,0x71
  410886:	retf   
  410887:	xor    BYTE PTR [ecx-0x45],ch
  41088a:	ds mov dh,0xb1
  41088d:	clc    
  41088e:	out    dx,eax
  41088f:	inc    eax
  410890:	add    BYTE PTR gs:[esi],bl
  410893:	mov    bl,0x90
  410895:	xor    DWORD PTR [edi],edi
  410897:	add    BYTE PTR [ecx+0x41],ah
  41089a:	enter  0x94e8,0x88
  41089e:	mov    esp,edx
  4108a0:	inc    ebx
  4108a1:	fidiv  WORD PTR [ebx-0x7d5dff5e]
  4108a7:	and    eax,0x694b1665
  4108ac:	int3   
  4108ad:	pop    ecx
  4108ae:	push   ebp
  4108af:	inc    ebx
  4108b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108b1:	mov    ecx,esi
  4108b3:	or     eax,0x43030712
  4108b8:	jg     0x4108c5
  4108ba:	dec    ecx
  4108bb:	test   BYTE PTR [edx-0x6739fe7c],bh
  4108c1:	sub    al,0xb7
  4108c3:	popa   
  4108c4:	inc    edx
  4108c5:	adc    eax,0xd45dda
  4108ca:	lds    edx,FWORD PTR [edi+0x637b837a]
  4108d0:	xor    edi,DWORD PTR [edx]
  4108d2:	xchg   esp,eax
  4108d3:	push   esp
  4108d4:	ror    DWORD PTR [edi],0xf8
  4108d7:	in     eax,dx
  4108d8:	lods   eax,DWORD PTR ds:[esi]
  4108d9:	lahf   
  4108da:	cmp    al,0x93
  4108dc:	js     0x410959
  4108de:	stos   BYTE PTR es:[edi],al
  4108df:	pop    edi
  4108e0:	xchg   esp,eax
  4108e1:	ins    BYTE PTR es:[edi],dx
  4108e2:	mov    eax,0x96ff4adf
  4108e7:	pop    DWORD PTR [edi+0x3b5bc2ff]
  4108ed:	shl    DWORD PTR [esi-0x39],cl
  4108f0:	or     BYTE PTR [esi-0x3610a6c4],dl
  4108f6:	cdq    
  4108f7:	and    ebp,edx
  4108f9:	adc    edx,DWORD PTR [edi]
  4108fb:	out    0x36,eax
  4108fd:	dec    ebx
  4108fe:	shl    DWORD PTR [eax],cl
  410900:	ret    0x4304
  410903:	scas   eax,DWORD PTR es:[edi]
  410904:	xlat   BYTE PTR ds:[ebx]
  410905:	test   DWORD PTR [ecx],0x52b58caf
  41090b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41090c:	dec    ecx
  41090d:	fiadd  WORD PTR [edi-0x2d]
  410910:	imul   ecx,edx,0x346e2aa1
  410916:	push   edx
  410917:	arpl   WORD PTR [ebp+edi*8-0x1a],di
  41091b:	shl    BYTE PTR [edi-0x7a],cl
  41091e:	adc    DWORD PTR [esi-0x18be1225],edx
  410924:	repz inc ecx
  410926:	lods   eax,DWORD PTR ds:[esi]
  410927:	loop   0x410986
  410929:	dec    esi
  41092a:	sbb    DWORD PTR [ecx+0x5c],ebp
  41092d:	lahf   
  41092e:	cmp    eax,0xa0df0a0d
  410933:	gs fucomi st,st(1)
  410936:	and    eax,0x5c040f63
  41093b:	mov    eax,0x8b3e211d
  410940:	fdivrp st(2),st
  410942:	sbb    DWORD PTR [edx+edx*4+0x6],esp
  410946:	sub    eax,0x40d937eb
  41094b:	aad    0x3d
  41094d:	push   0x64
  41094f:	ss pop esi
  410951:	xor    bl,BYTE PTR [eax]
  410953:	push   eax
  410954:	aad    0xa6
  410956:	inc    esp
  410957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410958:	lods   eax,DWORD PTR ds:[esi]
  410959:	cwde   
  41095a:	xchg   DWORD PTR [ebp+0x16d2e27d],esi
  410960:	add    esp,DWORD PTR [edi+0x733d9f1]
  410966:	xchg   edi,eax
  410967:	cwde   
  410968:	xor    eax,0x953718c9
  41096d:	clc    
  41096e:	stos   BYTE PTR es:[edi],al
  41096f:	pop    ss
  410970:	or     BYTE PTR gs:[eax-0x6c33797e],dl
  410977:	sar    DWORD PTR [edx+0x1dabae6],0x91
  41097e:	(bad)  
  41097f:	pop    ebp
  410980:	enter  0xd045,0x7
  410984:	fcmovnu st,st(1)
  410986:	sbb    edi,DWORD PTR [edx-0x7f]
  410989:	xchg   ecx,eax
  41098a:	add    DWORD PTR [ebp+0x7cb1af6d],0x4caf1d20
  410994:	leave  
  410995:	and    al,0xfe
  410997:	(bad)  
  410998:	fnop   
  41099a:	fs (bad) 
  41099c:	mov    al,0x9f
  41099e:	stos   DWORD PTR es:[edi],eax
  41099f:	bound  edi,QWORD PTR [edi]
  4109a1:	mov    ah,0xa1
  4109a3:	lods   eax,DWORD PTR ds:[esi]
  4109a4:	sub    DWORD PTR [edi+0x5e],esp
  4109a7:	ja     0x410932
  4109a9:	clc    
  4109aa:	push   0x56
  4109ac:	out    0x59,eax
  4109ae:	ficom  DWORD PTR [ecx+ebx*4+0x1e4bd23a]
  4109b5:	mov    edx,0xbc310845
  4109ba:	xor    al,0xfa
  4109bc:	ror    BYTE PTR [eax-0x3322f1fc],0xbb
  4109c3:	mov    ds:0xb533fc8c,eax
  4109c8:	sub    al,0x17
  4109ca:	add    dh,BYTE PTR [edx]
  4109cc:	nop
  4109cd:	je     0x4109f7
  4109cf:	popa   
  4109d0:	pusha  
  4109d1:	add    bh,al
  4109d3:	cmp    eax,0xb004913d
  4109d8:	jle    0x4109db
  4109da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109db:	(bad)  
  4109dc:	and    BYTE PTR [esi+0x4ca78e4f],ch
  4109e2:	ins    DWORD PTR es:[edi],dx
  4109e3:	outs   dx,BYTE PTR ds:[esi]
  4109e4:	rol    BYTE PTR gs:[edx-0x3f],0x2f
  4109e9:	mov    esp,0x8fe4a600
  4109ee:	pop    eax
  4109ef:	and    eax,0x38cb42a2
  4109f4:	test   al,0x2
  4109f6:	push   esi
  4109f7:	sub    ah,bl
  4109f9:	jmp    DWORD PTR [ebp+0x30]
  4109fc:	imul   ebp,ebp,0x440770a0
  410a02:	cmp    BYTE PTR [ebx+0x30a443f2],dh
  410a08:	inc    esi
  410a09:	inc    ebx
  410a0a:	cwde   
  410a0b:	in     eax,0xa4
  410a0d:	and    ch,bh
  410a0f:	es pop es
  410a11:	mov    cl,0xf1
  410a13:	mov    edi,0xfe972c4d
  410a18:	dec    eax
  410a19:	pop    ecx
  410a1a:	xchg   esp,eax
  410a1b:	and    ch,BYTE PTR [edx-0x4cfb1f10]
  410a21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a22:	pop    edx
  410a23:	scas   eax,DWORD PTR es:[edi]
  410a24:	(bad)  
  410a25:	std    
  410a26:	inc    edx
  410a27:	inc    esi
  410a28:	push   0x2d
  410a2a:	and    dh,dh
  410a2c:	adc    eax,0xb532fd1f
  410a31:	js     0x410a24
  410a33:	aaa    
  410a34:	adc    ch,bl
  410a36:	lea    edi,[edx]
  410a38:	scas   eax,DWORD PTR es:[edi]
  410a39:	xor    esi,DWORD PTR [edx+esi*8-0x24]
  410a3d:	sub    al,0xb1
  410a3f:	inc    BYTE PTR [ecx-0x1b50b86d]
  410a45:	jns    0x4109d6
  410a47:	add    ebx,DWORD PTR [edx+0x4e]
  410a4a:	and    ecx,DWORD PTR [ebx]
  410a4c:	cs jmp 0x96d3:0x7cc706da
  410a54:	mov    al,ds:0x9903b6db
  410a59:	mov    es,WORD PTR [esi+0x62]
  410a5c:	sub    ah,BYTE PTR [ebp+0x63]
  410a5f:	sbb    ecx,DWORD PTR [esi-0x6f]
  410a62:	mov    edi,0x910065c9
  410a67:	xchg   ecx,eax
  410a68:	mov    BYTE PTR [esi+0x18151a6d],bh
  410a6e:	xor    al,0xb2
  410a70:	in     eax,0x4
  410a72:	push   esi
  410a73:	fs inc edi
  410a75:	inc    esi
  410a76:	mov    bl,0x2f
  410a78:	(bad)  
  410a79:	ins    BYTE PTR es:[edi],dx
  410a7a:	dec    esp
  410a7b:	cmp    ebp,DWORD PTR [edx]
  410a7d:	push   ebx
  410a7e:	sbb    BYTE PTR [edi],cl
  410a80:	lods   al,BYTE PTR ds:[esi]
  410a81:	push   cs
  410a82:	mov    esi,0xc05f5664
  410a87:	push   eax
  410a88:	inc    eax
  410a89:	sub    edi,DWORD PTR [eax-0x2a]
  410a8c:	out    dx,eax
  410a8d:	and    esp,edx
  410a8f:	icebp  
  410a90:	dec    esi
  410a91:	lahf   
  410a92:	sub    DWORD PTR [edi-0x6fa17ab1],edi
  410a98:	cmp    al,0xe0
  410a9b:	xor    DWORD PTR [esi-0x14],edi
  410a9e:	test   eax,edx
  410aa0:	xchg   esp,eax
  410aa1:	mov    edx,0x9bc31b02
  410aa6:	test   eax,0x3dafebfe
  410aab:	stos   DWORD PTR es:[edi],eax
  410aac:	ja     0x410b05
  410aae:	mov    ebx,?
  410ab0:	cmp    ebx,DWORD PTR [edi]
  410ab2:	dec    edx
  410ab3:	cmp    DWORD PTR [ecx+0x7b30714e],ecx
  410ab9:	cmp    BYTE PTR [esi+0x55],0x61
  410abd:	int    0xab
  410abf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ac0:	mov    esi,0x1c92a98c
  410ac5:	mov    cl,BYTE PTR [ebx]
  410ac7:	mov    dl,ch
  410ac9:	rcr    BYTE PTR [eax-0x4122a28e],0xb3
  410ad0:	lods   eax,DWORD PTR ds:[esi]
  410ad1:	adc    DWORD PTR [esp+ecx*2],eax
  410ad4:	and    ch,0x7d
  410ad7:	iret   
  410ad8:	sub    eax,0x915799b8
  410add:	xlat   BYTE PTR ds:[ebx]
  410ade:	or     al,0x6a
  410ae0:	xchg   ebx,eax
  410ae1:	dec    ebx
  410ae2:	iret   
  410ae3:	shl    DWORD PTR [ebx-0x21af3a6f],1
  410ae9:	sbb    al,0x4c
  410aeb:	xor    esi,DWORD PTR [ecx]
  410aed:	sbb    ch,BYTE PTR [esi+0x502d7a7e]
  410af3:	popf   
  410af4:	cmp    BYTE PTR [ebp-0x47],ch
  410af7:	add    eax,0x68cf37b6
  410afc:	and    BYTE PTR [ebx],al
  410afe:	in     al,dx
  410aff:	sbb    BYTE PTR [eax-0x7d],al
  410b02:	je     0x410b4d
  410b04:	ds out 0x6b,eax
  410b07:	mov    dl,BYTE PTR [esi-0x48]
  410b0a:	div    edi
  410b0c:	in     al,0x1f
  410b0e:	adc    eax,0xf34532d6
  410b13:	into   
  410b14:	cmp    al,0x44
  410b16:	mov    edx,0x58764b00
  410b1b:	scas   eax,DWORD PTR es:[edi]
  410b1c:	sahf   
  410b1d:	xchg   edx,eax
  410b1e:	in     al,0xf2
  410b20:	out    dx,al
  410b21:	xchg   ebp,eax
  410b22:	nop
  410b23:	stos   BYTE PTR es:[edi],al
  410b24:	(bad)  
  410b25:	jo     0x410b11
  410b27:	sbb    BYTE PTR [eax-0x251ed522],al
  410b2d:	ss mov ch,0xa0
  410b30:	cwde   
  410b31:	cdq    
  410b32:	sbb    BYTE PTR [esi-0x313ff4ae],dl
  410b38:	test   al,0x6e
  410b3a:	cmp    eax,0x984976a2
  410b3f:	mov    edx,0xb44188cf
  410b44:	xchg   edi,eax
  410b45:	cmp    BYTE PTR [edi-0x5b569fa6],ch
  410b4b:	and    ch,BYTE PTR [edi]
  410b4d:	jmp    0x410b90
  410b4f:	xor    eax,0xe4c5044c
  410b54:	shl    DWORD PTR [edx+0x50],cl
  410b57:	loope  0x410b3a
  410b59:	out    0x1,al
  410b5b:	aad    0xc7
  410b5d:	sub    dl,BYTE PTR [eax+0xc]
  410b60:	retf   0xf2bc
  410b63:	or     DWORD PTR [edi],0xeb69c941
  410b69:	rcl    BYTE PTR [edx-0x528e5b01],1
  410b6f:	test   eax,0xc9054876
  410b74:	mov    bl,0x38
  410b76:	(bad)  
  410b77:	jnp    0x410bf8
  410b79:	inc    ebp
  410b7a:	mov    esp,0x61f03b9c
  410b7f:	cmc    
  410b80:	ds and eax,0xf6465b42
  410b86:	xchg   ebp,eax
  410b87:	ss addr16 mov bl,0xd5
  410b8b:	je     0x410c07
  410b8d:	lods   eax,DWORD PTR ds:[esi]
  410b8e:	fmul   DWORD PTR [ebx]
  410b90:	loopne 0x410b83
  410b92:	std    
  410b93:	lea    edx,[edi+0x172a8d47]
  410b99:	fs int3 
  410b9b:	mov    ebx,0x578cfadd
  410ba0:	test   DWORD PTR [ecx-0x354242c],0xcde7b501
  410baa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bab:	(bad)  
  410bac:	loope  0x410bf1
  410bae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410baf:	sub    al,BYTE PTR [eax+0x7ed20d23]
  410bb5:	xchg   DWORD PTR [eax],esi
  410bb7:	push   esp
  410bb8:	pop    edi
  410bb9:	rcr    BYTE PTR [edi-0xe],1
  410bbc:	adc    ebp,DWORD PTR [ecx]
  410bbe:	dec    ecx
  410bbf:	inc    eax
  410bc0:	jno    0x410b74
  410bc2:	push   edi
  410bc3:	or     ebp,DWORD PTR [esi]
  410bc5:	cmc    
  410bc6:	stos   DWORD PTR es:[edi],eax
  410bc7:	pop    ds
  410bc8:	jb     0x410bbf
  410bca:	leave  
  410bcb:	sbb    ah,BYTE PTR [ecx+0x1]
  410bce:	fiadd  WORD PTR [edx]
  410bd0:	shl    DWORD PTR [esp+eiz*4+0x54],1
  410bd4:	(bad)  
  410bd6:	fiadd  WORD PTR [edx-0x40324b29]
  410bdc:	xor    eax,0x8920bf99
  410be1:	sbb    BYTE PTR [esi-0x19],0xa0
  410be5:	push   ds
  410be6:	xor    BYTE PTR ss:[ebx],cl
  410be9:	mov    eax,0x365ba4c5
  410bee:	xchg   edx,eax
  410bef:	dec    ebp
  410bf0:	dec    esi
  410bf1:	outs   dx,BYTE PTR ds:[esi]
  410bf2:	or     al,0xd9
  410bf4:	inc    esp
  410bf5:	inc    eax
  410bf6:	mov    esp,0x701dc2d5
  410bfb:	add    al,0x4f
  410bfd:	(bad)  
  410bfe:	mov    dl,0x29
  410c00:	scas   eax,DWORD PTR es:[edi]
  410c01:	mov    dh,0xcd
  410c03:	in     eax,dx
  410c04:	js     0x410bc4
  410c06:	aam    0xc4
  410c08:	retf   0x19c8
  410c0b:	nop
  410c0c:	int3   
  410c0d:	jmp    0x410b9c
  410c0f:	add    DWORD PTR [edx+0x3a],edx
  410c12:	pop    ebp
  410c13:	mov    ebx,0x863c5cb3
  410c18:	pop    ebp
  410c19:	pop    ebp
  410c1a:	cwde   
  410c1b:	in     al,0x6a
  410c1d:	push   0xa7815137
  410c22:	sbb    ebx,DWORD PTR [edx]
  410c24:	aad    0x6e
  410c26:	fidiv  DWORD PTR [edi-0x64e1b3a7]
  410c2c:	pop    edi
  410c2d:	sub    DWORD PTR [esi-0x5afde8a0],ebp
  410c33:	push   ebx
  410c34:	mov    ds:0x3dedaa2e,eax
  410c39:	pop    ss
  410c3a:	das    
  410c3b:	sub    eax,0x28e1c09d
  410c40:	xchg   bh,ch
  410c42:	lds    ebp,FWORD PTR [ebx-0x64]
  410c45:	imul   edi,ebp,0x3c
  410c48:	pandn  mm6,QWORD PTR [edi-0x56ae3dd1]
  410c4f:	inc    esp
  410c50:	pop    edi
  410c51:	es call 0x5ca8:0xec456594
  410c59:	ss mov ah,0xe2
  410c5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c5d:	push   0xffffff88
  410c5f:	pop    ebp
  410c60:	xchg   ebx,eax
  410c61:	push   ebp
  410c62:	in     eax,0xb6
  410c64:	pop    DWORD PTR [ecx+0x11]
  410c67:	cmp    esi,DWORD PTR [ebx+0x73]
  410c6a:	ror    DWORD PTR [ecx+0xf],0x8b
  410c6e:	jecxz  0x410c5c
  410c70:	sub    edx,edi
  410c72:	push   ss
  410c73:	sbb    cl,dh
  410c75:	sub    eax,0xa486df78
  410c7a:	push   ecx
  410c7b:	xchg   ebp,eax
  410c7c:	imul   ebx,esp,0xf
  410c7f:	sbb    DWORD PTR [ebp+0x1a],eax
  410c82:	aas    
  410c83:	test   al,0xba
  410c85:	lods   eax,DWORD PTR ds:[esi]
  410c86:	(bad)  
  410c87:	lock adc edx,DWORD PTR [edi+ebp*2]
  410c8b:	leave  
  410c8c:	add    DWORD PTR [eax-0x6c4567f5],ebx
  410c92:	jge    0x410c33
  410c94:	mov    cl,0xdc
  410c96:	test   eax,0x329a7405
  410c9b:	mov    ah,0x47
  410c9d:	fs ins DWORD PTR es:[edi],dx
  410c9f:	sbb    eax,0xb3466769
  410ca4:	jbe    0x410c70
  410ca6:	fcom   DWORD PTR [eax-0x78]
  410ca9:	lds    ebp,FWORD PTR [esi+0x61904528]
  410caf:	arpl   WORD PTR [ecx+0x2e149d03],ax
  410cb5:	add    BYTE PTR [eax+0x5266aa17],ah
  410cbb:	popa   
  410cbc:	(bad)  
  410cbd:	(bad)  
  410cbe:	adc    DWORD PTR [esi+0x13],esp
  410cc1:	dec    esi
  410cc2:	and    esi,DWORD PTR [ebp+0x26]
  410cc5:	or     eax,0xef7b9dd9
  410cca:	mov    esp,0xd9b7a8b2
  410ccf:	sbb    al,0x8f
  410cd1:	clc    
  410cd2:	(bad)  
  410cd4:	cmp    al,0x8e
  410cd6:	cmp    BYTE PTR [ebp-0x31],ah
  410cd9:	xor    al,0x78
  410cdb:	and    BYTE PTR [eax-0x3],ch
  410cde:	add    ebp,DWORD PTR [ebx]
  410ce0:	add    eax,0x5fc26c70
  410ce5:	sbb    esp,DWORD PTR [ecx-0x7a]
  410ce8:	sar    esi,cl
  410cea:	mov    ebx,0x6e5a1f7f
  410cef:	xchg   ebp,eax
  410cf0:	xchg   ecx,eax
  410cf1:	push   edi
  410cf2:	fdivr  DWORD PTR [edx+0x5cda2e90]
  410cf8:	dec    ecx
  410cf9:	aas    
  410cfa:	leave  
  410cfb:	neg    BYTE PTR [edi*4+0x7aa81042]
  410d02:	and    BYTE PTR [edx-0x2b],dh
  410d05:	sub    DWORD PTR [ecx],ebp
  410d07:	push   ebp
  410d08:	inc    ebx
  410d09:	mov    ecx,0x77bcea74
  410d0e:	inc    eax
  410d0f:	(bad)  
  410d10:	fistp  QWORD PTR [eax-0x6ebcca73]
  410d16:	add    eax,0x4223c3ac
  410d1c:	mov    bl,0x60
  410d1e:	out    0x29,al
  410d20:	imul   ecx,DWORD PTR [esi-0x2162fc30],0xe7f97796
  410d2a:	add    ebp,esi
  410d2c:	cmp    BYTE PTR [esi+0x24ceb115],cl
  410d32:	inc    ebx
  410d33:	daa    
  410d34:	push   eax
  410d35:	cli    
  410d36:	and    al,0xdd
  410d38:	int3   
  410d39:	push   ds
  410d3a:	xchg   edx,eax
  410d3b:	fs enter 0x9f8c,0x32
  410d40:	adc    al,BYTE PTR [edi+eax*8]
  410d43:	in     al,0x27
  410d45:	xchg   ecx,eax
  410d46:	xor    eax,0xae48e4e0
  410d4b:	pop    ss
  410d4c:	jl     0x410cf3
  410d4e:	outs   dx,DWORD PTR ds:[esi]
  410d4f:	cld    
  410d50:	(bad)
  410d53:	imul   ebp,DWORD PTR [eax+0x1c],0x2308fe64
  410d5a:	inc    ebx
  410d5b:	dec    ebp
  410d5c:	repnz pop esp
  410d5e:	aad    0xfb
  410d60:	mov    ecx,0xe3c6c617
  410d65:	mov    ds:0x6aabaac1,eax
  410d6a:	sbb    BYTE PTR [edx],dh
  410d6c:	adc    DWORD PTR [esi-0x4e4ace0c],edx
  410d72:	xchg   ebx,eax
  410d73:	cmp    bl,BYTE PTR [ebp+0x2e9e0230]
  410d79:	not    BYTE PTR [ecx]
  410d7b:	inc    esi
  410d7c:	loope  0x410dc8
  410d7e:	or     eax,0xc318856d
  410d83:	dec    esp
  410d84:	dec    esi
  410d85:	aam    0xa8
  410d87:	jecxz  0x410d78
  410d89:	jg     0x410de7
  410d8b:	repnz push ebp
  410d8d:	inc    edx
  410d8e:	(bad)  
  410d8f:	and    al,0xe6
  410d91:	sbb    bl,bl
  410d93:	xchg   cl,dh
  410d95:	mov    al,0x23
  410d97:	fadd   st(4),st
  410d99:	push   ss
  410d9a:	mov    cl,0xa1
  410d9c:	in     eax,0x16
  410d9e:	inc    eax
  410d9f:	pop    ecx
  410da0:	pop    esi
  410da1:	stos   BYTE PTR es:[edi],al
  410da2:	sbb    eax,0xb2d5a429
  410da7:	dec    esp
  410da8:	cld    
  410da9:	pop    edi
  410daa:	into   
  410dab:	cmp    DWORD PTR [eax],edi
  410dad:	sbb    bh,cl
  410daf:	pop    ds
  410db0:	in     eax,dx
  410db1:	xor    eax,0xbcb9293f
  410db6:	cwde   
  410db7:	imul   ebp,ebp,0x7c
  410dba:	mov    fs,WORD PTR [edi-0x42]
  410dbd:	jmp    0x410dbc
  410dbf:	mov    dh,0xe0
  410dc1:	adc    ch,BYTE PTR [edx]
  410dc3:	lock call 0xef21ea2c
  410dc9:	das    
  410dca:	sub    al,0xdc
  410dcc:	stc    
  410dcd:	pop    edx
  410dce:	mov    WORD PTR [edx+0x6475be80],cs
  410dd4:	or     cl,ch
  410dd6:	add    al,0x91
  410dd8:	stos   DWORD PTR es:[edi],eax
  410dd9:	cli    
  410dda:	iret   
  410ddb:	mov    ah,0x20
  410ddd:	iret   
  410dde:	stos   BYTE PTR es:[edi],al
  410ddf:	lods   al,BYTE PTR ds:[esi]
  410de0:	push   edx
  410de1:	sub    ah,bl
  410de3:	add    BYTE PTR [edi],dl
  410de5:	popa   
  410de6:	push   ss
  410de7:	inc    esi
  410de8:	into   
  410de9:	ins    BYTE PTR es:[edi],dx
  410dea:	bound  ebp,QWORD PTR [edi+0x51]
  410ded:	or     BYTE PTR [ebp-0x693342f7],bh
  410df3:	retf   0x1df8
  410df6:	jecxz  0x410dc8
  410df8:	jmp    0x410dc4
  410dfa:	cmp    al,BYTE PTR [ecx-0x51558e5b]
  410e00:	push   eax
  410e01:	and    al,0x8b
  410e03:	or     ah,bl
  410e05:	inc    eax
  410e06:	iret   
  410e07:	out    dx,eax
  410e08:	shl    esi,cl
  410e0a:	mov    cl,0x94
  410e0c:	xchg   BYTE PTR [ecx+ebx*2+0x5b4ff93],ch
  410e13:	icebp  
  410e14:	clc    
  410e15:	push   ebx
  410e16:	(bad)  
  410e17:	sub    ebx,DWORD PTR [ebp+0x107be992]
  410e1d:	mov    esi,0x556e27d1
  410e22:	popa   
  410e23:	aaa    
  410e24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e25:	mov    ecx,DWORD PTR [esi-0x4b]
  410e28:	xchg   ebx,eax
  410e29:	or     eax,0x15022ee3
  410e2e:	ja     0x410db4
  410e30:	in     al,0xf0
  410e32:	rol    dh,0x77
  410e35:	sbb    edi,ebx
  410e37:	add    al,0x7d
  410e39:	add    BYTE PTR [ecx-0x7f9c71bb],al
  410e3f:	cmp    DWORD PTR [esi+0x78],0x36
  410e43:	ja     0x410e05
  410e45:	sub    DWORD PTR [edx-0x74],esi
  410e48:	sub    DWORD PTR [ecx+0x5daa0276],esi
  410e4e:	scas   eax,DWORD PTR es:[edi]
  410e4f:	addr16 cmp eax,0x7d550819
  410e55:	ins    DWORD PTR es:[edi],dx
  410e56:	inc    eax
  410e57:	sub    BYTE PTR [eax+0x554619b9],ah
  410e5d:	ret    
  410e5e:	out    dx,eax
  410e5f:	ins    BYTE PTR es:[edi],dx
  410e60:	retf   
  410e61:	ins    BYTE PTR es:[edi],dx
  410e62:	nop
  410e63:	int3   
  410e64:	dec    eax
  410e65:	ds mov bl,0x18
  410e68:	sbb    ebp,DWORD PTR [ebx-0x60b263a]
  410e6e:	imul   edx,DWORD PTR [edx-0x75],0x60b2219c
  410e75:	add    al,0x56
  410e77:	or     al,ah
  410e79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e7a:	sahf   
  410e7b:	loope  0x410eae
  410e7d:	mov    edi,0x5c25cc74
  410e82:	test   dh,dl
  410e84:	pop    ds
  410e85:	in     eax,dx
  410e86:	repnz shl BYTE PTR [esi-0x36c98993],0x6e
  410e8e:	sbb    DWORD PTR [eax+eax*2+0x55ec0dfb],edx
  410e95:	cdq    
  410e96:	aas    
  410e97:	lds    edi,FWORD PTR [esi]
  410e99:	es jle 0x410ee2
  410e9c:	sbb    ah,ch
  410e9e:	fwait
  410e9f:	jne    0x410e4a
  410ea1:	pop    ebx
  410ea2:	jl     0x410eeb
  410ea4:	stos   BYTE PTR es:[edi],al
  410ea5:	sub    BYTE PTR [ebx],bl
  410ea7:	add    esi,DWORD PTR [edi-0x77b6a04b]
  410ead:	jae    0x410ec7
  410eaf:	add    cl,BYTE PTR [edx]
  410eb1:	jno    0x410ecc
  410eb3:	xor    BYTE PTR [edx-0x170773ef],0x72
  410eba:	test   DWORD PTR [ebx-0x27],ecx
  410ebd:	jecxz  0x410f28
  410ebf:	dec    ecx
  410ec0:	or     cl,BYTE PTR [edx+0x4a2a599a]
  410ec6:	mov    ah,0xe0
  410ec8:	jge    0x410ecf
  410eca:	bound  ebp,QWORD PTR [edx]
  410ecc:	bound  edi,QWORD PTR gs:[edx]
  410ecf:	cdq    
  410ed0:	push   eax
  410ed1:	mov    eax,ds:0x75b1a7fa
  410ed6:	or     BYTE PTR [eax],al
  410ed8:	lods   al,BYTE PTR ds:[esi]
  410ed9:	xchg   ebx,eax
  410eda:	jne    0x410ef5
  410edc:	icebp  
  410edd:	push   ebx
  410ede:	jmp    0x519e:0xb97fc9c5
  410ee5:	mov    al,ds:0xed491561
  410eea:	gs and cl,ah
  410eed:	mov    bl,0xd2
  410eef:	gs sahf 
  410ef1:	sub    DWORD PTR [esi-0x4],ebx
  410ef4:	lods   al,BYTE PTR ds:[esi]
  410ef5:	fisub  DWORD PTR [bp+di-0x40]
  410ef9:	xor    BYTE PTR ds:0x53d300d5,ah
  410eff:	add    eax,0x9237663b
  410f04:	sub    al,0x1f
  410f06:	inc    esi
  410f07:	sub    BYTE PTR [ebp+0x7709a491],bh
  410f0d:	cmp    DWORD PTR [edx+eiz*4],ebp
  410f10:	sbb    BYTE PTR [edi+0x57fde32a],dh
  410f16:	pop    ss
  410f17:	jb     0x410eb1
  410f19:	dec    edx
  410f1a:	xchg   edi,eax
  410f1b:	cmp    DWORD PTR [eax+ebp*1+0x221588d7],ebx
  410f22:	out    0x7d,eax
  410f24:	push   eax
  410f25:	mov    al,0xf8
  410f27:	or     ch,BYTE PTR ds:0xd171ba60
  410f2d:	and    eax,edi
  410f2f:	xchg   edi,eax
  410f30:	aad    0xb5
  410f32:	fidiv  WORD PTR [esi]
  410f34:	jne    0x410ef7
  410f36:	out    0x8,eax
  410f38:	dec    edx
  410f39:	sbb    BYTE PTR [ebx+0x7e0aa5cf],0xc9
  410f40:	push   esp
  410f41:	js     0x410f6c
  410f43:	cld    
  410f44:	jns    0x410ecc
  410f46:	(bad)  cs:[esi+0x7f]
  410f4a:	or     DWORD PTR [eax-0x7a712cc2],ecx
  410f50:	cmc    
  410f51:	mov    cl,0x2d
  410f53:	add    al,0xf
  410f55:	das    
  410f56:	retf   
  410f57:	sub    esp,DWORD PTR [edx-0x59]
  410f5a:	ror    DWORD PTR [edi+0x38802fc3],cl
  410f60:	lods   al,BYTE PTR ds:[esi]
  410f61:	aam    0x9b
  410f63:	jmp    0x306420ab
  410f68:	mov    ds:0x71fdea81,eax
  410f6d:	mov    ebp,0x8f30e02b
  410f72:	mov    edi,0x9fb13f24
  410f77:	push   esi
  410f78:	call   0xab4d:0x5ab218a8
  410f7f:	adc    DWORD PTR ds:[edi-0x204d5922],ecx
  410f86:	xchg   BYTE PTR [esi],dl
  410f88:	pushf  
  410f89:	jmp    0x2f92:0xb65d8733
  410f90:	and    BYTE PTR [eax+ebx*2+0x48bc9d82],0x20
  410f98:	outs   dx,DWORD PTR ds:[esi]
  410f99:	sbb    BYTE PTR [eax-0x41],dl
  410f9c:	pop    esp
  410f9d:	mov    al,0x5c
  410f9f:	sahf   
  410fa0:	add    al,0x82
  410fa2:	je     0x410ff9
  410fa4:	cmp    al,0x9f
  410fa6:	scas   al,BYTE PTR es:[edi]
  410fa7:	dec    edi
  410fa8:	mov    bh,BYTE PTR [esi-0x1b]
  410fab:	cmp    DWORD PTR [esp+ecx*1-0x6f],esi
  410faf:	(bad)  
  410fb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fb2:	add    eax,0xc1c643fb
  410fb7:	lods   al,BYTE PTR ds:[esi]
  410fb8:	enter  0xe059,0x5b
  410fbc:	push   edx
  410fbd:	ret    0x98f5
  410fc0:	push   ebx
  410fc1:	sahf   
  410fc2:	cmp    al,0x79
  410fc4:	je     0x410fa1
  410fc6:	mov    al,BYTE PTR [esi+0x4970a80d]
  410fcc:	ror    ecx,cl
  410fce:	test   eax,0x7548972f
  410fd3:	jle    0x411001
  410fd5:	in     eax,0xec
  410fd7:	fld    st(0)
  410fd9:	mov    ds:0xc2891e3f,al
  410fde:	and    DWORD PTR [edi],edi
  410fe0:	mov    ebx,0x7d0b0228
  410fe5:	ss movs DWORD PTR es:[edi],DWORD PTR cs:[esi]
  410fe8:	iret   
  410fe9:	xchg   edi,eax
  410fea:	sub    ebx,DWORD PTR [edx]
  410fec:	inc    esi
  410fed:	(bad)  
  410fee:	sti    
  410fef:	jb     0x411029
  410ff1:	mov    bh,BYTE PTR [eax]
  410ff3:	test   al,0x70
  410ff5:	loope  0x411062
  410ff7:	cmc    
  410ff8:	pop    es
  410ff9:	out    dx,eax
  410ffa:	xchg   esi,eax
  410ffb:	mov    cl,0xdc
  410ffd:	into   
  410ffe:	loope  0x410f85
  411000:	push   es
  411001:	ret    
  411002:	or     al,BYTE PTR [eax+eiz*8]
  411005:	lock (bad) 
  411007:	retf   0x5d49
  41100a:	cli    
  41100b:	cs dec edx
  41100d:	xor    eax,0xd61fa196
  411012:	or     eax,0x82c09bd2
  411017:	mov    bh,BYTE PTR [eax-0x22be0666]
  41101d:	repz pop ecx
  41101f:	or     DWORD PTR [ecx+0x4a],edi
  411022:	int    0x5e
  411024:	inc    edx
  411025:	jns    0x41107e
  411027:	sbb    ch,BYTE PTR [ebx+0x39]
  41102a:	cld    
  41102b:	(bad)  
  41102c:	std    
  41102d:	inc    ebp
  41102e:	xor    DWORD PTR [ecx+0x6c],esi
  411031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411032:	dec    ebp
  411033:	ss mov ecx,0xff429ed
  411039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41103a:	cmc    
  41103b:	fwait
  41103c:	ror    BYTE PTR [edx],1
  41103e:	test   eax,0x762e5975
  411043:	cmp    DWORD PTR [esi],0xffffffec
  411046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411047:	mov    ebx,0xb61c2a3a
  41104c:	ds xchg esp,eax
  41104e:	loope  0x411055
  411050:	mov    dl,0xfe
  411052:	retf   
  411053:	shl    DWORD PTR [eax+eiz*8],0xb
  411057:	sub    al,0x9d
  411059:	in     eax,dx
  41105a:	cld    
  41105b:	ss pushf 
  41105d:	in     al,0x3d
  41105f:	jbe    0x411097
  411061:	out    0x18,eax
  411063:	mov    dh,0xa8
  411065:	pop    edx
  411066:	pop    es
  411067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411068:	loope  0x4110cf
  41106a:	cwde   
  41106b:	call   0x1d261577
  411070:	dec    ebx
  411071:	into   
  411072:	out    0x92,al
  411074:	int    0x39
  411076:	add    al,0x1a
  411078:	jle    0x411074
  41107a:	or     BYTE PTR [esi+0x43],0x6c
  41107e:	lods   eax,DWORD PTR ds:[esi]
  41107f:	sub    bl,BYTE PTR [edx-0x7d]
  411082:	jecxz  0x411098
  411084:	sbb    DWORD PTR [edi],edi
  411086:	out    0xfd,al
  411088:	lods   eax,DWORD PTR ds:[esi]
  411089:	pop    ecx
  41108a:	xor    DWORD PTR [eax+0x59],eax
  41108d:	mov    fs,WORD PTR [ebx]
  41108f:	cli    
  411090:	fadd   DWORD PTR [esi]
  411092:	jmp    0x41110b
  411094:	push   0x5b
  411096:	sbb    al,0x61
  411098:	out    0x76,eax
  41109a:	push   esi
  41109b:	or     al,0xb0
  41109d:	ins    BYTE PTR es:[edi],dx
  41109e:	fild   WORD PTR [ecx+0x50]
  4110a1:	test   BYTE PTR [edx],0x91
  4110a4:	inc    esp
  4110a5:	out    dx,al
  4110a6:	imul   ah
  4110a8:	ins    DWORD PTR es:[edi],dx
  4110a9:	push   cs
  4110aa:	cld    
  4110ab:	in     eax,0x82
  4110ad:	adc    al,BYTE PTR [ebx+0x300338f0]
  4110b3:	mov    dl,0xe
  4110b5:	and    bh,BYTE PTR [edx+0x2]
  4110b8:	sar    DWORD PTR [esi],0x0
  4110bb:	es xor al,0x24
  4110be:	fisttp DWORD PTR [ecx+0x6c]
  4110c1:	ret    0xbe49
  4110c4:	sub    esp,eax
  4110c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110c7:	sbb    al,0xcd
  4110c9:	cmp    eax,0xfce0217a
  4110ce:	jecxz  0x411105
  4110d0:	out    0x97,al
  4110d2:	add    al,0xb1
  4110d4:	push   0x40
  4110d6:	imul   esi,DWORD PTR [edx+0x20],0x40
  4110da:	aaa    
  4110db:	push   ds
  4110dc:	out    0xc3,eax
  4110de:	lods   al,BYTE PTR ds:[esi]
  4110df:	xlat   BYTE PTR ds:[ebx]
  4110e0:	(bad)  
  4110e1:	sub    BYTE PTR [ebp-0x6593e608],dl
  4110e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110e8:	mov    es,WORD PTR [ebp+0x7e]
  4110eb:	shl    ch,cl
  4110ed:	call   0xead2:0x5a6f4e6e
  4110f4:	ror    BYTE PTR [esi+eiz*8+0x39b313cd],0x1
  4110fc:	dec    edx
  4110fd:	cwde   
  4110fe:	test   BYTE PTR [ebx],dl
  411100:	dec    edx
  411101:	(bad)  
  411102:	mov    ds:0x586f6fac,eax
  411107:	xchg   esi,eax
  411108:	retf   
  411109:	icebp  
  41110a:	(bad)  
  41110b:	mov    ebp,0x5e2a4caf
  411110:	fld    QWORD PTR [ebx]
  411112:	loop   0x411111
  411114:	pop    es
  411115:	aam    0xb1
  411117:	push   cs
  411118:	(bad)  
  411119:	xor    BYTE PTR [ebx+0x22],bl
  41111c:	pop    es
  41111d:	fiadd  DWORD PTR [eax]
  41111f:	mov    esp,0xe0629fa9
  411124:	xchg   ebx,eax
  411125:	push   edx
  411126:	pop    edi
  411127:	and    dh,BYTE PTR [esp+edi*1-0x4ad37e15]
  41112e:	sbb    BYTE PTR cs:[esi],bl
  411131:	mov    al,0xe8
  411133:	bound  ebx,QWORD PTR [esp+eiz*8+0x3fb6de7c]
  41113a:	inc    edx
  41113b:	jp     0x4110d0
  41113d:	jl     0x4110cd
  41113f:	retf   
  411140:	and    eax,0xef9b27dd
  411145:	(bad)  
  411146:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411147:	xchg   BYTE PTR [ebx-0x7713546],bh
  41114d:	jne    0x411128
  41114f:	dec    ecx
  411150:	add    al,0xa
  411152:	sub    esp,DWORD PTR [esi]
  411154:	and    al,0x2d
  411156:	and    BYTE PTR ds:0xcb410ccb,al
  41115c:	jb     0x411144
  41115e:	mov    eax,ds:0xff7a2839
  411163:	lods   al,BYTE PTR ds:[esi]
  411164:	les    ecx,FWORD PTR [esi]
  411166:	sub    eax,0x4b1d47fd
  41116b:	jbe    0x41116a
  41116d:	adc    ah,BYTE PTR [esi+0x2fc2e95e]
  411173:	jecxz  0x41116e
  411175:	mov    al,ds:0x21744298
  41117a:	sub    al,0xb6
  41117c:	inc    eax
  41117d:	xlat   BYTE PTR ds:[ebx]
  41117e:	adc    esp,DWORD PTR [edi-0x32]
  411181:	mov    cl,0xdb
  411183:	pop    edi
  411184:	xchg   esi,eax
  411185:	cli    
  411186:	dec    esi
  411187:	std    
  411188:	jnp    0x4111dc
  41118a:	pop    edi
  41118b:	xor    ecx,DWORD PTR [edx+0x9fb473b]
  411191:	(bad)  
  411192:	daa    
  411193:	dec    ebp
  411194:	fidiv  DWORD PTR [eax-0x16e62112]
  41119a:	xchg   DWORD PTR ss:[edi-0x7b7bb635],edx
  4111a1:	sub    al,BYTE PTR [ecx-0xe]
  4111a4:	mov    cl,0xc4
  4111a6:	out    dx,al
  4111a7:	sbb    BYTE PTR [esi+0xb22c15],bl
  4111ad:	bnd jmp 0x411137
  4111b0:	or     DWORD PTR [edx+0x63],0x7e453c7a
  4111b7:	(bad)
  4111bb:	jne    0x411156
  4111bd:	test   al,0x83
  4111bf:	test   BYTE PTR [ebx-0x18],al
  4111c2:	out    0x34,eax
  4111c4:	retf   
  4111c5:	or     eax,0xc5b6a29e
  4111ca:	jbe    0x41119f
  4111cc:	sub    DWORD PTR [edx+0x52],ecx
  4111cf:	and    esp,DWORD PTR [ebx]
  4111d1:	adc    al,0x5a
  4111d3:	lock lods eax,DWORD PTR ds:[esi]
  4111d5:	push   ebx
  4111d6:	out    0xff,al
  4111d8:	push   0x6dc4328f
  4111dd:	pusha  
  4111de:	sbb    edi,DWORD PTR [ebx-0x5c]
  4111e1:	jmp    DWORD PTR [ecx+0x4a]
  4111e4:	out    0x49,eax
  4111e6:	dec    esi
  4111e7:	in     al,dx
  4111e8:	sahf   
  4111e9:	dec    edi
  4111ea:	mov    esp,0x19334209
  4111ef:	push   edi
  4111f0:	mov    dh,BYTE PTR [ebx]
  4111f2:	add    DWORD PTR [edi+edi*8],eax
  4111f5:	jnp    0x411193
  4111f7:	aad    0xc0
  4111f9:	add    al,0xb0
  4111fb:	int    0xe8
  4111fd:	retf   
  4111fe:	xor    DWORD PTR [edi],eax
  411200:	jbe    0x4111db
  411202:	hlt    
  411203:	cmp    al,0x9a
  411205:	mov    ebx,DWORD PTR [edi]
  411207:	clc    
  411208:	adc    eax,0x58901c71
  41120d:	ficomp DWORD PTR [ebx+0x47]
  411210:	sub    al,0x37
  411212:	(bad)  
  411213:	hlt    
  411214:	push   eax
  411215:	js     0x4111a9
  411217:	mov    fs,WORD PTR [ebx-0x2cb3d268]
  41121d:	sub    BYTE PTR ds:0x59178c04,0xdc
  411224:	fnstenv [edx]
  411226:	arpl   cx,cx
  411228:	adc    BYTE PTR ss:[ecx-0x4],ah
  41122c:	lea    ebp,[esi+0x27c79d99]
  411232:	aad    0x57
  411234:	iret   
  411235:	scas   eax,DWORD PTR es:[edi]
  411236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411237:	cmc    
  411238:	sahf   
  411239:	addr16 dec ebx
  41123b:	or     cl,BYTE PTR [esi]
  41123d:	jl     0x4112be
  41123f:	in     eax,0xf7
  411241:	mov    ds:0x2cb8710a,al
  411246:	dec    ecx
  411247:	inc    ecx
  411248:	xchg   edi,eax
  411249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41124a:	pop    es
  41124b:	jg     0x41128e
  41124d:	add    DWORD PTR [ebx],ebp
  41124f:	jmp    0xeeb3b4e
  411254:	mov    ah,0x71
  411256:	jns    0x411221
  411258:	dec    ecx
  411259:	xchg   ecx,eax
  41125a:	ss retf 0x4e03
  41125e:	sbb    dl,BYTE PTR [ebp+0x355f436]
  411264:	fadd   QWORD PTR [eax-0x64]
  411267:	fsub   QWORD PTR ds:0xb65208c3
  41126d:	mov    esp,cs
  41126f:	stos   BYTE PTR es:[edi],al
  411270:	ins    DWORD PTR es:[edi],dx
  411271:	mov    esi,0x8de665c3
  411276:	pop    ebp
  411277:	pop    esp
  411278:	in     eax,0xca
  41127a:	mov    ebx,0x8099b452
  41127f:	jb     0x4112f5
  411281:	das    
  411282:	mov    cl,0x6e
  411284:	add    DWORD PTR [edx-0x1c],0x63
  411288:	push   ecx
  411289:	lea    ecx,[ebx-0x50bae68a]
  41128f:	xor    DWORD PTR [ebx],0x68
  411292:	xor    eax,0xda637447
  411297:	stos   DWORD PTR es:[edi],eax
  411298:	cmp    al,0xbf
  41129a:	clc    
  41129b:	xor    esp,DWORD PTR [edi-0x32e5ea9]
  4112a1:	psubsb mm0,mm4
  4112a4:	mov    WORD PTR [ebx+0x7],ds
  4112a7:	and    DWORD PTR [ebp+ecx*4-0x25],eax
  4112ab:	adc    al,0x57
  4112ad:	outs   dx,DWORD PTR ds:[esi]
  4112ae:	xlat   BYTE PTR ds:[ebx]
  4112af:	bound  eax,QWORD PTR [edi-0x14]
  4112b2:	inc    ecx
  4112b3:	push   0xffffffa8
  4112b5:	shr    BYTE PTR [edi-0x42],1
  4112b8:	ret    
  4112b9:	mov    eax,ds:0xe91f3714
  4112be:	nop
  4112bf:	push   esi
  4112c0:	outs   dx,DWORD PTR ds:[esi]
  4112c1:	repz push es
  4112c3:	adc    al,0xee
  4112c5:	mov    dh,0x1f
  4112c7:	call   0xe3a7:0xaad718a8
  4112ce:	in     eax,0x37
  4112d0:	mov    edx,0x411fe9a2
  4112d5:	push   edx
  4112d6:	pop    es
  4112d7:	shl    BYTE PTR ds:0xda8a1654,0x6b
  4112de:	jns    0x4112a0
  4112e0:	push   ecx
  4112e1:	and    BYTE PTR [ebp+0x33],bl
  4112e4:	je     0x411321
  4112e6:	mov    edx,0x11f5fb7d
  4112eb:	dec    ebx
  4112ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112ed:	sub    ecx,DWORD PTR [edi]
  4112ef:	pop    ebp
  4112f0:	xchg   edx,eax
  4112f1:	mov    ah,0xc7
  4112f3:	repz int3 
  4112f5:	inc    ecx
  4112f6:	loopne 0x411352
  4112f8:	xchg   BYTE PTR [ebp+0x59],al
  4112fb:	cli    
  4112fc:	out    0x65,eax
  4112fe:	imul   esi,DWORD PTR [ecx],0x70
  411301:	xchg   esi,eax
  411302:	in     al,dx
  411303:	or     al,0x2a
  411305:	das    
  411306:	popa   
  411307:	xchg   edi,eax
  411308:	xor    ecx,DWORD PTR [ecx-0x79a1cd8e]
  41130e:	adc    BYTE PTR [edx-0x3],ch
  411311:	push   cs
  411312:	sbb    ch,BYTE PTR [ebp+0x5c]
  411315:	or     eax,0x919fa706
  41131a:	pop    ecx
  41131b:	loopne 0x411387
  41131d:	ja     0x41136f
  41131f:	repz adc DWORD PTR [ebp+0xdc6437],esi
  411326:	mov    ebx,0x951e74d4
  41132b:	shl    BYTE PTR gs:[eax-0x3ececa6b],cl
  411332:	push   ds
  411333:	pop    edx
  411334:	hlt    
  411335:	mov    dh,0x4
  411337:	jne    0x41138c
  411339:	aam    0x66
  41133b:	cld    
  41133c:	push   ds
  41133d:	xchg   DWORD PTR [ecx-0x13],eax
  411340:	mov    eax,0x7cdfd35c
  411345:	call   FWORD PTR [ecx]
  411347:	adc    edi,DWORD PTR [edi]
  411349:	inc    ebx
  41134a:	fdivp  st(0),st
  41134c:	add    al,0xb
  41134e:	call   0x5d02:0xb57c5f52
  411355:	xor    BYTE PTR [edi],dh
  411357:	rol    edx,cl
  411359:	mov    ah,0x33
  41135b:	(bad)  
  41135c:	xor    esp,edi
  41135e:	dec    ecx
  41135f:	sahf   
  411360:	adc    eax,0x14447f82
  411365:	loope  0x4113a6
  411367:	cwde   
  411368:	xchg   edi,eax
  411369:	jmp    0xbb4ca10e
  41136e:	or     al,bl
  411370:	sub    al,0x12
  411372:	lods   eax,DWORD PTR ds:[esi]
  411373:	add    esi,DWORD PTR [ebx]
  411375:	cli    
  411376:	dec    edi
  411377:	mov    ecx,0x59a95970
  41137c:	and    ebp,DWORD PTR [ecx-0x5d]
  41137f:	ds mov esp,0xc8b60220
  411385:	mov    edx,0x7509a077
  41138a:	aam    0xd7
  41138c:	clc    
  41138d:	ins    BYTE PTR es:[edi],dx
  41138e:	hlt    
  41138f:	xor    al,0x11
  411391:	lahf   
  411392:	pop    es
  411393:	arpl   WORD PTR [ecx-0xb],bx
  411396:	xchg   edi,eax
  411397:	inc    ebp
  411398:	jbe    0x41137b
  41139a:	pusha  
  41139b:	test   eax,0xc4bf628e
  4113a0:	jge    0x411388
  4113a2:	fdivr  QWORD PTR [ecx+0x72]
  4113a5:	loopne 0x411386
  4113a7:	clc    
  4113a8:	sub    DWORD PTR [edx-0x33],esp
  4113ab:	call   0xae37cd3a
  4113b0:	pushf  
  4113b1:	xor    eax,0x722d61bc
  4113b6:	inc    ecx
  4113b7:	scas   eax,DWORD PTR es:[edi]
  4113b8:	jb     0x4113fc
  4113ba:	jmp    0x16d5:0x5cb7c85e
  4113c1:	add    BYTE PTR [ebx],dh
  4113c3:	lods   al,BYTE PTR ds:[esi]
  4113c4:	outs   dx,DWORD PTR ds:[esi]
  4113c5:	adc    ecx,esp
  4113c7:	stos   BYTE PTR es:[edi],al
  4113c8:	xchg   DWORD PTR [edx+0x46fdc6f3],ebx
  4113ce:	cmc    
  4113cf:	test   al,0x18
  4113d1:	sub    al,0x39
  4113d3:	syscall 
  4113d5:	xchg   bh,dl
  4113d7:	cld    
  4113d8:	pop    ebx
  4113d9:	pop    DWORD PTR [ecx+esi*4]
  4113dc:	sbb    ebx,DWORD PTR [edx+0x78]
  4113df:	and    bh,BYTE PTR [ebx-0x8]
  4113e2:	imul   edx,eax,0x50
  4113e5:	repz mov esi,0xb68fce5
  4113eb:	push   0xffffff8b
  4113ed:	mov    ds:0xde34804f,eax
  4113f2:	xchg   DWORD PTR [edx+ebp*8],ecx
  4113f5:	(bad)  
  4113f6:	outs   dx,DWORD PTR ds:[esi]
  4113f7:	and    bl,ch
  4113f9:	adc    ebx,DWORD PTR ds:0xcb3a26ad
  4113ff:	out    0x95,eax
  411401:	enter  0x8785,0xf7
  411405:	and    cl,BYTE PTR [eax]
  411407:	adc    DWORD PTR [edi+eiz*1-0x63],edx
  41140b:	aam    0x2b
  41140d:	mov    ds:0xb0efd9ad,eax
  411412:	and    BYTE PTR [ebp+0x27],0x49
  411416:	xchg   esi,eax
  411417:	mov    ds:0x538f321e,eax
  41141d:	retf   0x1bd1
  411420:	(bad)  
  411421:	lea    ebp,[edx+0x7]
  411424:	pop    ss
  411425:	ror    BYTE PTR [edx],1
  411427:	jbe    0x4113fb
  411429:	cwde   
  41142a:	inc    edi
  41142b:	adc    DWORD PTR [edi],ebx
  41142d:	push   ss
  41142e:	stos   BYTE PTR es:[edi],al
  41142f:	jmp    0x7258:0x4ab9e69e
  411436:	fidiv  DWORD PTR [ecx+0x4e802056]
  41143c:	jno    0x411470
  41143e:	sahf   
  41143f:	(bad)  
  411440:	push   esp
  411441:	adc    BYTE PTR [esi],ah
  411443:	pop    ds
  411444:	cmp    al,bl
  411446:	cmp    esp,DWORD PTR [ebx*8+0x33076007]
  41144d:	cdq    
  41144e:	jecxz  0x41147b
  411450:	inc    esi
  411451:	ja     0x411476
  411453:	lahf   
  411454:	stc    
  411455:	aaa    
  411456:	repz fwait
  411458:	pop    ss
  411459:	sub    eax,0x9a7944a9
  41145e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41145f:	ss mov edi,0x7a5abca2
  411465:	push   ds
  411466:	cwde   
  411467:	cmp    al,0x44
  411469:	sbb    cl,BYTE PTR [ebx]
  41146b:	adc    DWORD PTR [eax-0x5f],esi
  41146e:	es pop eax
  411470:	aam    0x62
  411472:	mov    ds:0x8615d06e,al
  411477:	hlt    
  411478:	xor    edx,ecx
  41147a:	xchg   edx,eax
  41147b:	test   BYTE PTR [ebx+0x56],bl
  41147e:	je     0x411494
  411480:	imul   edx,DWORD PTR [ebp-0x42],0xffffff88
  411484:	test   BYTE PTR [esi+edi*2],bh
  411487:	mov    dl,0xb5
  411489:	cmc    
  41148a:	sar    DWORD PTR [edx+0x4a904bf1],0xca
  411491:	xor    BYTE PTR [ebx-0x4b],bl
  411494:	lock jmp 0x5289:0x34bed100
  41149c:	ret    0x27b7
  41149f:	test   eax,0xaad02c21
  4114a4:	sub    eax,0xe701895b
  4114a9:	add    BYTE PTR [ecx-0x99f0c6c],bh
  4114af:	pushf  
  4114b0:	je     0x4114b5
  4114b2:	or     esp,DWORD PTR [ecx+0x6737d979]
  4114b8:	imul   esp,esi,0xd85f8ec8
  4114be:	daa    
  4114bf:	push   edx
  4114c0:	mov    WORD PTR [edi-0x36],fs
  4114c3:	in     eax,dx
  4114c4:	ror    BYTE PTR [ecx-0x5c73e7ee],1
  4114ca:	xor    cl,BYTE PTR [ecx]
  4114cc:	ret    0x110d
  4114cf:	mov    ds:0xc3fc4ed2,al
  4114d4:	ins    BYTE PTR es:[edi],dx
  4114d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114d6:	aaa    
  4114d7:	js     0x4114c2
  4114d9:	jbe    0x4114e9
  4114db:	add    edi,eax
  4114dd:	call   0x5472:0x7b4e81b5
  4114e4:	sbb    ebx,DWORD PTR [ecx-0x4c025e91]
  4114ea:	xor    al,0x46
  4114ec:	add    BYTE PTR ds:0x3e7d6130,ch
  4114f2:	aaa    
  4114f3:	out    dx,al
  4114f4:	sub    al,0x2
  4114f6:	and    BYTE PTR [eax+0x20],ch
  4114f9:	push   ss
  4114fa:	inc    ebp
  4114fb:	pop    edi
  4114fc:	test   BYTE PTR [ebx-0x39],dh
  4114ff:	inc    ebx
  411500:	pop    ebx
  411501:	ja     0x4114df
  411503:	mov    al,0xf2
  411505:	xor    eax,0xac4f046b
  41150a:	lds    ebx,FWORD PTR [ebp+0x4c]
  41150d:	fcomp  DWORD PTR [ebp+0x4ec6c33]
  411514:	or     eax,0x21033c81
  411519:	clc    
  41151a:	in     eax,0xcb
  41151c:	jge    0x41153e
  41151e:	popf   
  41151f:	sub    cl,ch
  411521:	ret    0x3e60
  411524:	mov    ch,0x16
  411526:	fidivr WORD PTR [eax+edi*2-0x49]
  41152a:	add    eax,0x518bd460
  41152f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411530:	add    al,0xa4
  411532:	into   
  411533:	adc    ebx,edi
  411535:	jo     0x41150d
  411537:	retf   
  411538:	inc    esp
  411539:	popf   
  41153a:	jne    0x4114d0
  41153c:	(bad)  
  41153d:	mov    ds:0xdf78c793,al
  411542:	rol    DWORD PTR [ecx],0x95
  411545:	push   esp
  411546:	cmp    esp,edx
  411548:	xor    al,0xe9
  41154a:	(bad)  
  41154b:	push   ecx
  41154c:	push   ebp
  41154d:	jmp    0x110066bf
  411552:	lock mov esp,0xf6275cdb
  411558:	aaa    
  411559:	push   ebx
  41155a:	out    0x80,al
  41155c:	inc    edi
  41155d:	mov    dl,0x9b
  41155f:	iret   
  411560:	xchg   BYTE PTR [ebp-0x32],cl
  411563:	jg     0x41150d
  411565:	fimul  DWORD PTR ds:0xdb120766
  41156b:	and    DWORD PTR [ebp-0x82fea24],eax
  411571:	xor    DWORD PTR [esi+0x8],ecx
  411574:	loope  0x411528
  411576:	test   BYTE PTR [bx+si+0x13ab],dl
  41157b:	data16 sub al,0xc5
  41157e:	(bad)  
  41157f:	push   0xa39e738
  411584:	add    al,0x8b
  411586:	inc    ebp
  411587:	cld    
  411588:	xor    eax,ecx
  41158a:	mov    ecx,DWORD PTR [ebp+0xc]
  41158d:	add    eax,edx
  41158f:	imul   eax,ecx
  411592:	add    eax,DWORD PTR [ebp+0x8]
  411595:	mov    DWORD PTR [ebp+0xc],eax
  411598:	mov    eax,DWORD PTR [ebp+0xc]
  41159b:	jmp    0x4115b1
  4115a0:	mov    eax,DWORD PTR [ebp-0x4]
  4115a3:	mov    esi,DWORD PTR [ebp-0x8]
  4115a6:	xor    esi,ecx
  4115a8:	xor    eax,ecx
  4115aa:	add    esi,edx
  4115ac:	add    eax,edx
  4115ae:	imul   eax,esi
  4115b1:	pop    edi
  4115b2:	pop    esi
  4115b3:	leave  
  4115b4:	ret    0x8
  4115b7:	push   ebp
  4115b8:	mov    ebp,esp
  4115ba:	push   ecx
  4115bb:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  4115c2:	xor    DWORD PTR ds:0x42c000,0x5835
  4115cc:	mov    eax,DWORD PTR [ebp-0x4]
  4115cf:	mov    edx,DWORD PTR [ebp+0x10]
  4115d2:	adc    DWORD PTR ds:0x42c018,0x22a2
  4115dc:	mov    ecx,0x7510899
  4115e1:	xor    eax,ecx
  4115e3:	sbb    DWORD PTR ds:0x42a014,0x72a0
  4115ed:	add    eax,0x3272e0
  4115f2:	or     DWORD PTR ds:0x42d000,0x42a000
  4115fc:	mov    DWORD PTR [edx],eax
  4115fe:	and    DWORD PTR ds:0x42b014,0x0
  411608:	jmp    0x411618
  41160d:	mov    eax,ds:0x42b014
  411612:	inc    eax
  411613:	mov    ds:0x42b014,eax
  411618:	cmp    DWORD PTR ds:0x42b014,0x1d
  41161f:	jae    0x411664
  411625:	cmp    DWORD PTR ds:0x42b014,0x9
  41162c:	jne    0x41163d
  411632:	push   0x429004
  411637:	call   DWORD PTR ds:0x42ecb3
  41163d:	cmp    DWORD PTR ds:0x42b014,0x8
  411644:	jne    0x411655
  41164a:	mov    eax,ds:0x42b014
  41164f:	inc    eax
  411650:	mov    ds:0x42b014,eax
  411655:	jmp    0x41160d
  41165a:	and    DWORD PTR ds:0x42c01c,0x369c
  411664:	mov    eax,DWORD PTR [ebp+0xc]
  411667:	xor    eax,ecx
  411669:	push   esi
  41166a:	mov    esi,DWORD PTR [ebp+0x10]
  41166d:	mov    edx,0x3272e0
  411672:	add    eax,edx
  411674:	mov    DWORD PTR [esi+0x4],eax
  411677:	mov    eax,DWORD PTR [ebp+0x14]
  41167a:	mov    esi,DWORD PTR [ebp+0x10]
  41167d:	mov    DWORD PTR [esi+0x8],eax
  411680:	mov    eax,DWORD PTR [ebp+0x18]
  411683:	mov    esi,DWORD PTR [ebp+0x10]
  411686:	mov    DWORD PTR [esi+0xc],eax
  411689:	mov    eax,DWORD PTR [ebp+0x1c]
  41168c:	mov    esi,DWORD PTR [ebp+0x10]
  41168f:	mov    DWORD PTR [esi+0x10],eax
  411692:	mov    eax,DWORD PTR [ebp+0x8]
  411695:	xor    eax,ecx
  411697:	add    eax,edx
  411699:	pop    esi
  41169a:	leave  
  41169b:	ret    0x18
  41169e:	push   ebp
  41169f:	mov    ebp,esp
  4116a1:	sub    esp,0x9c
  4116a7:	add    eax,DWORD PTR ds:0x429004
  4116ad:	mov    ecx,DWORD PTR [ebp+0x8]
  4116b0:	movzx  eax,BYTE PTR ds:0x42901c
  4116b7:	adc    DWORD PTR ds:0x42b010,eax
  4116bd:	mov    eax,0x8a8c
  4116c2:	adc    DWORD PTR ds:0x42b00c,0x7010
  4116cc:	xor    ax,WORD PTR [ecx+0x20]
  4116d0:	mov    ecx,0x3b50
  4116d5:	or     DWORD PTR ds:0x429020,0x42a018
  4116df:	add    ax,cx
  4116e2:	xor    DWORD PTR ds:0x42c014,0x42d014
  4116ec:	movzx  eax,ax
  4116ef:	mov    DWORD PTR [ebp-0x10],eax
  4116f2:	mov    BYTE PTR [ebp-0x1],0x79
  4116f6:	adc    ecx,DWORD PTR ds:0x42b000
  4116fc:	lea    eax,[ebp-0x1]
  4116ff:	mov    DWORD PTR [ebp-0xc],eax
  411702:	sub    ecx,0x24e1
  411708:	mov    al,BYTE PTR [ebp-0x1]
  41170b:	or     DWORD PTR ds:0x42c01c,0x3fe4
  411715:	mov    ecx,DWORD PTR [ebp-0xc]
  411718:	and    DWORD PTR ds:0x42900c,0x42a000
  411722:	xor    al,0x73
  411724:	or     DWORD PTR ds:0x429024,0x42900c
  41172e:	sub    al,0x9
  411730:	or     DWORD PTR ds:0x429010,0x42d008
  41173a:	mov    BYTE PTR [ecx],al
  41173c:	and    DWORD PTR ds:0x429010,0x6711
  411746:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  41174d:	xor    DWORD PTR ds:0x42c004,ecx
  411753:	push   ebx
  411754:	mov    DWORD PTR ds:0x42901c,0x1f
  41175e:	cmp    DWORD PTR ds:0x42901c,0x0
  411765:	je     0x4117b8
  41176b:	cmp    DWORD PTR ds:0x42901c,0xf
  411772:	jne    0x41178d
  411778:	push   0x429024
  41177d:	push   0x42d010
  411782:	push   0x42d004
  411787:	call   DWORD PTR ds:0x42ec73
  41178d:	cmp    DWORD PTR ds:0x42901c,0x10
  411794:	jne    0x4117a8
  41179a:	xor    eax,eax
  41179c:	or     eax,DWORD PTR ds:0x42901c
  4117a2:	dec    eax
  4117a3:	mov    ds:0x42901c,eax
  4117a8:	mov    eax,ds:0x42901c
  4117ad:	dec    eax
  4117ae:	mov    ds:0x42901c,eax
  4117b3:	jmp    0x41175e
  4117b8:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  4117bf:	mov    ecx,DWORD PTR [ebp-0x18]
  4117c2:	add    DWORD PTR ds:0x42c004,0x3f3f
  4117cc:	push   esi
  4117cd:	add    DWORD PTR ds:0x42c018,edx
  4117d3:	mov    eax,0x7510899
  4117d8:	mov    DWORD PTR ds:0x42c01c,0x1b
  4117e2:	cmp    DWORD PTR ds:0x42c01c,0x0
  4117e9:	je     0x411895
  4117ef:	cmp    DWORD PTR ds:0x42c01c,0x2b
  4117f6:	jne    0x41180f
  4117fc:	push   DWORD PTR [ebp-0x24]
  4117ff:	push   0x19b0
  411804:	push   0x7260
  411809:	call   DWORD PTR ds:0x42ec77
  41180f:	xor    esi,esi
  411811:	xor    esi,DWORD PTR ds:0x42c01c
  411817:	dec    esi
  411818:	mov    DWORD PTR ds:0x42c01c,esi
  41181e:	jmp    0x4117e2
  411823:	and    DWORD PTR ds:0x429020,0x0
  41182d:	xor    esi,esi
  41182f:	add    esi,DWORD PTR ds:0x429020
  411835:	inc    esi
  411836:	mov    DWORD PTR ds:0x429020,esi
  41183c:	cmp    DWORD PTR ds:0x429020,0x10
  411843:	jne    0x41186e
  411849:	push   0x1225
  41184e:	push   0x6cf4
  411853:	push   0x42a010
  411858:	push   DWORD PTR [ebp-0x28]
  41185b:	push   DWORD PTR [ebp-0x10]
  41185e:	push   0x51d6
  411863:	push   0x29de
  411868:	call   DWORD PTR ds:0x42ec7f
  41186e:	cmp    DWORD PTR ds:0x429020,0xf
  411875:	jne    0x411888
  41187b:	mov    esi,DWORD PTR ds:0x429020
  411881:	inc    esi
  411882:	mov    DWORD PTR ds:0x429020,esi
  411888:	cmp    DWORD PTR ds:0x429020,0x1b
  41188f:	jb     0x41182d
  411895:	xor    ecx,eax
  411897:	mov    esi,0x3272e0
  41189c:	push   edi
  41189d:	add    ecx,esi
  41189f:	mov    DWORD PTR ds:0x429024,0x3aa4
  4118a9:	jmp    0x4118cd
  4118ae:	mov    dl,BYTE PTR [ebp-0x1]
  4118b1:	mov    DWORD PTR ds:0x42a004,0x1ec
  4118bb:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  4118c2:	mov    DWORD PTR ds:0x429024,0x3051
  4118cc:	inc    ecx
  4118cd:	mov    DWORD PTR ds:0x42c000,0x19d9
  4118d7:	cmp    ecx,0x40
  4118da:	jb     0x4118ae
  4118e0:	mov    edx,DWORD PTR [ebp-0x18]
  4118e3:	add    DWORD PTR ds:0x42a004,0x42c00c
  4118ed:	xor    edx,eax
  4118ef:	adc    DWORD PTR ds:0x42c00c,0x429010
  4118f9:	add    edx,esi
  4118fb:	mov    DWORD PTR ds:0x42c004,0x7d7
  411905:	jmp    0x4119f4
  41190a:	mov    edi,DWORD PTR [ebp+0x8]
  41190d:	movzx  ecx,WORD PTR ds:0x42b018
  411914:	sub    ecx,DWORD PTR ds:0x42a004
  41191a:	mov    DWORD PTR ds:0x42b018,ecx
  411920:	mov    ecx,0x8a8c
  411925:	dec    DWORD PTR ds:0x42a00c
  41192b:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411930:	mov    edi,0x3b50
  411935:	and    DWORD PTR ds:0x42a018,0x6b4e
  41193f:	add    cx,di
  411942:	and    DWORD PTR ds:0x429028,0x42b01c
  41194c:	movzx  ecx,cx
  41194f:	mov    DWORD PTR [ebp-0xc],ecx
  411952:	and    DWORD PTR ds:0x42b008,0x0
  41195c:	jmp    0x41196e
  411961:	mov    ecx,DWORD PTR ds:0x42b008
  411967:	inc    ecx
  411968:	mov    DWORD PTR ds:0x42b008,ecx
  41196e:	cmp    DWORD PTR ds:0x42b008,0x16
  411975:	jae    0x4119ca
  41197b:	cmp    DWORD PTR ds:0x42b008,0x5
  411982:	jne    0x4119a5
  411988:	push   0x42b01c
  41198d:	push   DWORD PTR [ebp-0x28]
  411990:	push   0x42e111
  411995:	push   0x1c03
  41199a:	push   0x29bc
  41199f:	call   DWORD PTR ds:0x42ec83
  4119a5:	cmp    DWORD PTR ds:0x42b008,0x4
  4119ac:	jne    0x4119bf
  4119b2:	mov    ecx,DWORD PTR ds:0x42b008
  4119b8:	inc    ecx
  4119b9:	mov    DWORD PTR ds:0x42b008,ecx
  4119bf:	jmp    0x411961
  4119c4:	add    ecx,0x3957
  4119ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4119cd:	movzx  ecx,WORD PTR [ecx+edx*4]
  4119d1:	or     DWORD PTR ds:0x42a00c,0x1f94
  4119db:	xor    ecx,0x8a8c
  4119e1:	add    ecx,edi
  4119e3:	mov    edi,DWORD PTR ds:0x42a000
  4119e9:	mov    edi,DWORD PTR [ebp-0xc]
  4119ec:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  4119f3:	inc    edx
  4119f4:	mov    DWORD PTR ds:0x42a00c,0x4266
  4119fe:	mov    ecx,DWORD PTR [ebp-0x10]
  411a01:	mov    DWORD PTR ds:0x42c014,0x5a0e
  411a0b:	cmp    edx,ecx
  411a0d:	mov    DWORD PTR ds:0x42c014,0x51cd
  411a17:	jne    0x41190a
  411a1d:	sub    DWORD PTR ds:0x429004,ebx
  411a23:	mov    ecx,DWORD PTR [ebp-0x18]
  411a26:	adc    edx,0x568c
  411a2c:	mov    edx,DWORD PTR [ebp+0x10]
  411a2f:	and    DWORD PTR ds:0x42a000,0x0
  411a39:	jmp    0x411a4b
  411a3e:	mov    edi,DWORD PTR ds:0x42a000
  411a44:	inc    edi
  411a45:	mov    DWORD PTR ds:0x42a000,edi
  411a4b:	cmp    DWORD PTR ds:0x42a000,0x18
  411a52:	jae    0x411a91
  411a58:	cmp    DWORD PTR ds:0x42a000,0xf
  411a5f:	jne    0x411a70
  411a65:	push   0x42b00c
  411a6a:	call   DWORD PTR ds:0x42ec8b
  411a70:	cmp    DWORD PTR ds:0x42a000,0xe
  411a77:	jne    0x411a8c
  411a7d:	xor    edi,edi
  411a7f:	xor    edi,DWORD PTR ds:0x42a000
  411a85:	inc    edi
  411a86:	mov    DWORD PTR ds:0x42a000,edi
  411a8c:	jmp    0x411a3e
  411a91:	xor    ecx,eax
  411a93:	and    DWORD PTR ds:0x42d018,0x0
  411a9d:	mov    edi,DWORD PTR ds:0x42d018
  411aa3:	inc    edi
  411aa4:	mov    DWORD PTR ds:0x42d018,edi
  411aaa:	cmp    DWORD PTR ds:0x42d018,0xf
  411ab1:	jne    0x411acd
  411ab7:	push   0x3d1c
  411abc:	push   DWORD PTR [ebp-0x24]
  411abf:	push   0x42c010
  411ac4:	push   DWORD PTR [ebp-0x20]
  411ac7:	call   DWORD PTR ds:0x42ec8f
  411acd:	cmp    DWORD PTR ds:0x42d018,0xe
  411ad4:	jne    0x411ae7
  411ada:	mov    edi,DWORD PTR ds:0x42d018
  411ae0:	inc    edi
  411ae1:	mov    DWORD PTR ds:0x42d018,edi
  411ae7:	cmp    DWORD PTR ds:0x42d018,0x1c
  411aee:	jb     0x411a9d
  411af4:	add    ecx,esi
  411af6:	mov    DWORD PTR ds:0x42a014,0x11ec
  411b00:	mov    DWORD PTR [edx],ecx
  411b02:	mov    ecx,DWORD PTR [ebp-0x18]
  411b05:	adc    edi,0xc83
  411b0b:	xor    ecx,eax
  411b0d:	sbb    DWORD PTR ds:0x429010,ecx
  411b13:	add    ecx,esi
  411b15:	or     DWORD PTR ds:0x42d010,edx
  411b1b:	mov    DWORD PTR [ebp-0xc],ecx
  411b1e:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  411b25:	mov    DWORD PTR [ebp-0x14],0xf89c85a9
  411b2c:	mov    DWORD PTR ds:0x42c014,0x1e
  411b36:	cmp    DWORD PTR ds:0x42c014,0x0
  411b3d:	je     0x411b6a
  411b43:	cmp    DWORD PTR ds:0x42c014,0x21
  411b4a:	jne    0x411b56
  411b50:	call   DWORD PTR ds:0x42ec93
  411b56:	xor    edi,edi
  411b58:	xor    edi,DWORD PTR ds:0x42c014
  411b5e:	dec    edi
  411b5f:	mov    DWORD PTR ds:0x42c014,edi
  411b65:	jmp    0x411b36
  411b6a:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  411b71:	mov    ecx,DWORD PTR [ebp-0x14]
  411b74:	or     edi,DWORD PTR ds:0x42c018
  411b7a:	mov    DWORD PTR [ebp+0x8],ecx
  411b7d:	mov    ecx,DWORD PTR [ebp+0x8]
  411b80:	xor    ecx,eax
  411b82:	add    DWORD PTR ds:0x42c00c,edi
  411b88:	add    ecx,esi
  411b8a:	mov    DWORD PTR ds:0x42c010,0x3ca8
  411b94:	mov    ecx,0x242ebed
  411b99:	mov    edi,DWORD PTR ds:0x42a004
  411b9f:	mov    edi,0xf641bea
  411ba4:	je     0x4145ae
  411baa:	mov    edx,DWORD PTR [ebp+0x8]
  411bad:	mov    ebx,DWORD PTR [ebp-0x8]
  411bb0:	jmp    0x413f6f
  411bb5:	mov    edx,0x77290712
  411bba:	pshufw mm2,QWORD PTR [ecx-0x127d1cb5],0x1c
  411bc2:	jno    0x411be6
  411bc4:	cli    
  411bc5:	adc    ch,BYTE PTR [esi+0x5fd87a7a]
  411bcb:	jp     0x411c47
  411bcd:	push   esi
  411bce:	jmp    0xab49ef26
  411bd3:	dec    esi
  411bd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bd5:	xor    dh,ah
  411bd7:	xchg   edi,eax
  411bd8:	retf   0xd73a
  411bdb:	mov    cl,0x99
  411bdd:	mov    WORD PTR [ebp-0x7],fs
  411be0:	mov    cl,0x2
  411be2:	adc    eax,0x63c6b23d
  411be7:	xchg   dh,dh
  411be9:	pop    ebx
  411bea:	mov    al,0xc4
  411bec:	add    ebp,DWORD PTR [ecx+0x62]
  411bef:	adc    bl,BYTE PTR [ebp-0x10]
  411bf2:	mov    ax,0x45c9
  411bf6:	inc    eax
  411bf7:	jl     0x411c66
  411bf9:	stc    
  411bfa:	test   al,0xf6
  411bfc:	ins    BYTE PTR es:[edi],dx
  411bfd:	shr    edx,cl
  411bff:	pop    edi
  411c00:	dec    edx
  411c01:	sub    esi,ebx
  411c03:	aas    
  411c04:	sub    al,0x7c
  411c06:	sbb    al,0x82
  411c08:	jecxz  0x411b9f
  411c0a:	xor    DWORD PTR [edi-0x10],esi
  411c0d:	int3   
  411c0e:	jae    0x411c78
  411c10:	xchg   edx,eax
  411c11:	cdq    
  411c12:	inc    ebp
  411c13:	jne    0x411c5d
  411c15:	ins    BYTE PTR es:[edi],dx
  411c16:	dec    ebx
  411c17:	loope  0x411c29
  411c19:	jmp    0x411c56
  411c1b:	xchg   edi,eax
  411c1c:	dec    DWORD PTR [esi]
  411c1e:	jb     0x411bec
  411c20:	lods   al,BYTE PTR ds:[esi]
  411c21:	mov    dh,0xc6
  411c24:	ror    BYTE PTR [edi],0x5c
  411c27:	ins    DWORD PTR es:[edi],dx
  411c28:	mov    ebx,0xcd4c94a5
  411c2d:	arpl   WORD PTR [ebp+0x2d3db9d5],sp
  411c33:	xchg   BYTE PTR [ebx-0x58b7d21a],dl
  411c39:	pop    eax
  411c3a:	jl     0x411c52
  411c3c:	sub    al,0x84
  411c3e:	jge    0x411c90
  411c40:	mov    cl,0x7
  411c42:	or     BYTE PTR [edi+0xc6ae9aa],0x28
  411c49:	add    BYTE PTR [ebx+0x43b359fd],al
  411c4f:	xchg   ebx,eax
  411c50:	pop    gs
  411c52:	push   ecx
  411c53:	inc    ebp
  411c54:	mov    ebx,0xc5e3a5ce
  411c59:	or     DWORD PTR [ebp-0x1814ffd],eax
  411c5f:	addr16 sub eax,0x806ac4d1
  411c65:	sub    bl,dl
  411c67:	mov    bl,BYTE PTR [ebp+0x52]
  411c6a:	dec    esi
  411c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c6c:	sbb    cl,cl
  411c6e:	inc    ebx
  411c6f:	dec    eax
  411c70:	pop    es
  411c71:	cmc    
  411c72:	mov    bh,0x58
  411c74:	rcl    DWORD PTR [ebp-0x4b],0x27
  411c78:	fcomp  DWORD PTR fs:[ebx-0x27d60389]
  411c7f:	sar    DWORD PTR [eax+0xb],1
  411c82:	inc    eax
  411c83:	xor    DWORD PTR [edx],edi
  411c85:	lods   eax,DWORD PTR ds:[esi]
  411c86:	aad    0x4c
  411c88:	and    esp,DWORD PTR [ebx-0x70f75a94]
  411c8e:	or     al,0xaa
  411c90:	in     al,0x34
  411c92:	mov    bh,0x7
  411c94:	lods   al,BYTE PTR ds:[esi]
  411c95:	mov    DWORD PTR [edx],ecx
  411c97:	(bad)  
  411c98:	lods   eax,DWORD PTR ds:[esi]
  411c99:	mov    bl,0x9a
  411c9b:	jp     0x411c4f
  411c9d:	or     BYTE PTR [edx+eax*2+0x56634273],bl
  411ca4:	call   0xb0e3:0x59d4ee8b
  411cab:	push   cs
  411cac:	retf   
  411cad:	(bad)  
  411cae:	ret    
  411caf:	fcmovb st,st(0)
  411cb1:	dec    esp
  411cb2:	push   0x5173ccd0
  411cb7:	ret    0x9f98
  411cba:	iret   
  411cbb:	adc    esi,0x870deb6b
  411cc1:	std    
  411cc2:	dec    esp
  411cc3:	xor    bh,BYTE PTR [eax+0x53]
  411cc6:	popf   
  411cc7:	int3   
  411cc8:	xor    DWORD PTR [ecx],esp
  411cca:	enter  0x34b9,0x19
  411cce:	jns    0x411d42
  411cd0:	sub    BYTE PTR [ebp-0x5b30d370],bl
  411cd6:	outs   dx,DWORD PTR ds:[esi]
  411cd7:	pop    ebx
  411cd8:	push   edx
  411cd9:	xlat   BYTE PTR ds:[ebx]
  411cda:	dec    esi
  411cdb:	es push es
  411cdd:	dec    edi
  411cde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cdf:	xchg   esi,eax
  411ce0:	pushf  
  411ce1:	test   ah,cl
  411ce3:	add    dl,cl
  411ce5:	stc    
  411ce6:	dec    ecx
  411ce7:	ja     0x411c9b
  411ce9:	ret    0xcb22
  411cec:	das    
  411ced:	push   0x750d61f9
  411cf2:	enter  0xa08c,0x43
  411cf6:	sbb    eax,0x4e2ec045
  411cfb:	enter  0xf48,0xe4
  411cff:	test   eax,0xcb7c3ae2
  411d04:	fwait
  411d05:	pop    ebp
  411d06:	jge    0x411d67
  411d08:	push   esi
  411d09:	clc    
  411d0a:	mov    eax,ds:0xfd0e786b
  411d0f:	xchg   ebp,eax
  411d10:	or     dh,BYTE PTR [edx+0x4d89caf4]
  411d16:	imul   esi,DWORD PTR [esi-0x42],0x20
  411d1a:	jecxz  0x411d12
  411d1c:	adc    cl,0x1a
  411d1f:	fld    QWORD PTR ds:0xc7dbd623
  411d25:	fmul   DWORD PTR [edx-0x3c540f3b]
  411d2b:	daa    
  411d2c:	mov    ebx,0x7f7a69f9
  411d31:	aam    0xd4
  411d33:	xchg   ebx,eax
  411d34:	(bad)  
  411d35:	cld    
  411d36:	dec    edx
  411d37:	sti    
  411d38:	test   DWORD PTR [ecx],0x7b286173
  411d3e:	sbb    BYTE PTR [ecx-0x2fedf1bd],0x13
  411d45:	dec    ebp
  411d46:	out    dx,al
  411d47:	jbe    0x411d3e
  411d49:	mov    eax,ds:0x23ddad65
  411d4e:	lds    eax,FWORD PTR [eax-0x68]
  411d51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d52:	hlt    
  411d53:	cmp    eax,0x2660835b
  411d58:	sub    DWORD PTR [edx+0x62e11b50],0xffffffe7
  411d5f:	cld    
  411d60:	cmp    ebx,ecx
  411d62:	pop    esi
  411d63:	jb     0x411d13
  411d65:	add    DWORD PTR [esi],ebp
  411d67:	cwde   
  411d68:	es jmp 0xad9c7a3c
  411d6e:	pop    ebp
  411d6f:	mov    al,ds:0x4c3fc564
  411d74:	jbe    0x411de6
  411d76:	ret    0x5080
  411d79:	jae    0x411db9
  411d7b:	arpl   WORD PTR [ecx-0x10d61ee4],di
  411d81:	jecxz  0x411d17
  411d83:	pop    ds
  411d84:	inc    esi
  411d85:	cmp    ah,BYTE PTR [eax+0x4e]
  411d88:	xchg   ebp,eax
  411d89:	dec    edx
  411d8a:	cld    
  411d8b:	cdq    
  411d8c:	adc    bl,BYTE PTR [ebx]
  411d8e:	addr16 push eax
  411d90:	push   edi
  411d91:	jbe    0x411d29
  411d93:	jbe    0x411d7f
  411d95:	sar    BYTE PTR [esi],0x7e
  411d98:	and    DWORD PTR [eax-0x30f56d4c],edi
  411d9e:	ss and esi,eax
  411da1:	dec    esi
  411da2:	add    dh,BYTE PTR [ebx-0x18807bdb]
  411da8:	pushf  
  411da9:	and    bh,BYTE PTR [ecx+0x70]
  411dac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dad:	xor    eax,DWORD PTR [edi+eiz*2+0x5a]
  411db1:	rcl    DWORD PTR [esi-0x6c],1
  411db4:	div    DWORD PTR [ecx-0x96eebd5]
  411dba:	xchg   edi,eax
  411dbb:	xchg   esp,eax
  411dbc:	int3   
  411dbd:	(bad)  
  411dbe:	fcmove st,st(0)
  411dc0:	jmp    0xf1fdde7f
  411dc5:	mov    bl,0xeb
  411dc7:	dec    edi
  411dc8:	pushf  
  411dc9:	xor    esp,DWORD PTR [edx]
  411dcb:	sub    al,0xb2
  411dcd:	lahf   
  411dce:	dec    esp
  411dcf:	inc    edi
  411dd0:	xor    dl,bh
  411dd2:	retf   0xc502
  411dd5:	push   ds
  411dd6:	dec    esi
  411dd7:	fst    QWORD PTR [ebx-0x40]
  411dda:	test   al,0xde
  411ddc:	xchg   esi,eax
  411ddd:	cmc    
  411dde:	dec    ah
  411de0:	mov    ah,0x73
  411de2:	pushf  
  411de3:	xchg   edx,eax
  411de4:	cmp    eax,0x61c340db
  411de9:	outs   dx,DWORD PTR ds:[esi]
  411dea:	sti    
  411deb:	iret   
  411dec:	xor    ebx,DWORD PTR [esi+0x57]
  411def:	pop    ecx
  411df0:	add    BYTE PTR [edx+0x642d67ac],cl
  411df6:	lahf   
  411df7:	jmp    0x3c696bc2
  411dfc:	jne    0x411e7a
  411dfe:	xor    DWORD PTR [esi-0x42],0xffffffff
  411e02:	fnsave [edi+0x33]
  411e05:	punpckhwd mm4,QWORD PTR [eax]
  411e08:	mov    ebp,0x1c8d5b08
  411e0d:	mov    al,ds:0x50c1ded9
  411e12:	cmp    edx,DWORD PTR [edi-0x23]
  411e15:	sahf   
  411e16:	paddusb mm2,QWORD PTR [esi]
  411e19:	cmp    ah,BYTE PTR [ecx]
  411e1b:	mov    eax,ds:0xcfdbddee
  411e20:	mov    eax,0xf0f247e6
  411e25:	and    al,0x42
  411e27:	mov    dh,0x4f
  411e29:	fsub   QWORD PTR [eax]
  411e2b:	fdivr  DWORD PTR [ebp+0x56]
  411e2e:	je     0x411df1
  411e30:	dec    eax
  411e31:	xchg   ebx,eax
  411e32:	push   edx
  411e33:	cmp    cl,al
  411e35:	test   DWORD PTR [esp+eiz*2-0x2d],esi
  411e39:	add    ah,BYTE PTR [ecx]
  411e3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e3c:	cmp    BYTE PTR [ebx+0x4041f08d],0x52
  411e43:	xchg   ebx,eax
  411e44:	mov    eax,ds:0x255632c7
  411e49:	push   esp
  411e4a:	xor    DWORD PTR [edi],esp
  411e4c:	add    ebp,DWORD PTR [ebx-0x7654ffda]
  411e52:	data16 in al,0x28
  411e55:	jg     0x411e71
  411e57:	xchg   edi,eax
  411e58:	mov    cs,WORD PTR [ebp+0x31]
  411e5b:	ss pop edx
  411e5d:	jb     0x411deb
  411e5f:	adc    BYTE PTR [ebx],cl
  411e61:	gs popf 
  411e63:	adc    DWORD PTR [esi+edx*1-0x6f],eax
  411e67:	sar    edx,cl
  411e69:	mov    ecx,0xc66215d3
  411e6e:	adc    DWORD PTR [ecx+0x5e],0x15ffa341
  411e75:	fnstcw WORD PTR [edx-0x63b0284e]
  411e7b:	mov    dh,0x40
  411e7d:	scas   al,BYTE PTR es:[edi]
  411e7e:	in     al,dx
  411e7f:	aam    0xbc
  411e81:	loope  0x411eb2
  411e83:	mov    cl,BYTE PTR [edx+0x1db00bd]
  411e89:	gs or  eax,0x21c1b435
  411e8f:	push   ebp
  411e90:	cmc    
  411e91:	and    ebp,DWORD PTR [ecx-0x3fd7ff8f]
  411e97:	inc    ebp
  411e98:	cmp    ah,BYTE PTR ds:0x1f2f6ad0
  411e9e:	xor    eax,0xbb292ebb
  411ea3:	ret    
  411ea4:	cwde   
  411ea5:	gs mov edi,0xcf75fc4f
  411eab:	sbb    edi,edx
  411ead:	test   eax,0x28350352
  411eb2:	test   eax,0xc71255a8
  411eb7:	add    al,0x6b
  411eb9:	mov    bh,dh
  411ebb:	popa   
  411ebc:	push   0x5ca9d5e5
  411ec1:	mov    bh,0x16
  411ec3:	inc    ecx
  411ec4:	cmp    esp,DWORD PTR [ecx+eax*2]
  411ec7:	mov    ds:0x75fc9a36,al
  411ecc:	mov    edx,eax
  411ece:	ins    BYTE PTR es:[edi],dx
  411ecf:	into   
  411ed0:	popa   
  411ed1:	stos   DWORD PTR es:[edi],eax
  411ed2:	pop    ebp
  411ed3:	ficom  WORD PTR [esi+0x64]
  411ed6:	mov    ebp,0x3373ca40
  411edb:	aam    0xec
  411edd:	jns    0x411eb1
  411edf:	mov    BYTE PTR [ecx-0x4e96c835],dh
  411ee5:	push   esi
  411ee6:	pop    ebx
  411ee7:	js     0x411e8b
  411ee9:	(bad)  
  411eea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411eeb:	pop    edi
  411eec:	sti    
  411eed:	je     0x411eb0
  411eef:	js     0x411f69
  411ef1:	mov    eax,ds:0xc0f7ce04
  411ef6:	and    ecx,ebp
  411ef8:	lea    esp,[edi+esi*1+0x1952c7ba]
  411eff:	xor    DWORD PTR [ebp*2-0x382a968d],0x118c7bee
  411f0a:	inc    esi
  411f0b:	mov    ch,0x7d
  411f0d:	nop
  411f0e:	mov    eax,0x99732242
  411f13:	rcl    BYTE PTR [ebp-0x5],0x2
  411f17:	dec    eax
  411f18:	jae    0x411f96
  411f1a:	test   DWORD PTR [ebp-0x80],ebp
  411f1d:	mov    ebx,0x9785766a
  411f22:	mov    dh,0x9e
  411f24:	and    DWORD PTR [ebp+0x1c3750af],edx
  411f2a:	xchg   edx,eax
  411f2b:	inc    edi
  411f2c:	inc    ecx
  411f2d:	xor    eax,0xf539d35d
  411f32:	into   
  411f33:	mov    bl,0x28
  411f35:	adc    eax,0x812ce9bb
  411f3a:	cmp    BYTE PTR [esi-0x23519d85],0x98
  411f41:	mov    edi,0xef4ac8c4
  411f46:	add    edi,DWORD PTR [eax-0x7e]
  411f49:	ror    DWORD PTR [esi],cl
  411f4b:	mul    DWORD PTR [ecx+eiz*8]
  411f4e:	loope  0x411f8b
  411f50:	fxch   st(1)
  411f52:	pop    edi
  411f53:	xor    BYTE PTR [ebx-0x3e5787ea],cl
  411f59:	imul   edx,DWORD PTR [ebx+0x6b],0xbe25c206
  411f60:	ror    DWORD PTR [ebx+0x246dd6e0],1
  411f66:	or     DWORD PTR [ebx],ecx
  411f68:	sbb    bl,al
  411f6a:	push   es
  411f6b:	ins    BYTE PTR es:[edi],dx
  411f6c:	dec    edx
  411f6d:	out    dx,eax
  411f6e:	inc    ebx
  411f6f:	xor    esp,DWORD PTR ds:0xcbe4c487
  411f75:	inc    ecx
  411f76:	jne    0x411f22
  411f78:	dec    eax
  411f79:	out    dx,al
  411f7a:	mov    eax,0xf0b84458
  411f7f:	sub    eax,0x33d91489
  411f84:	fs addr16 pop ss
  411f87:	sbb    edx,DWORD PTR [eax-0x19]
  411f8a:	sti    
  411f8b:	lods   al,BYTE PTR ds:[esi]
  411f8c:	adc    ecx,DWORD PTR [ebx]
  411f8e:	data16 lock jnp 0x411f9c
  411f92:	mov    eax,ds:0x69e0a76c
  411f97:	stc    
  411f98:	jmp    0xf9d13bdd
  411f9d:	into   
  411f9e:	and    esi,esi
  411fa0:	in     eax,dx
  411fa1:	div    ah
  411fa3:	cmp    eax,0x389fd7b5
  411fa8:	push   0xffffffc5
  411faa:	lock jmp 0x411fa7
  411fad:	test   al,0xe0
  411faf:	push   cs
  411fb0:	adc    bl,BYTE PTR [ebx-0x6d9a07fc]
  411fb6:	push   edx
  411fb7:	mov    ebx,0xa77605d7
  411fbc:	scas   al,BYTE PTR es:[edi]
  411fbd:	in     eax,dx
  411fbe:	or     bh,BYTE PTR ds:0x9adb4764
  411fc4:	push   esp
  411fc5:	out    0xd2,eax
  411fc7:	or     DWORD PTR [ecx-0x62],esp
  411fca:	adc    BYTE PTR [ebx],0x7b
  411fcd:	scas   eax,DWORD PTR es:[edi]
  411fce:	pop    es
  411fcf:	clc    
  411fd0:	repz xor eax,0x9c34f604
  411fd6:	mov    esp,0xf60180e6
  411fdb:	(bad)  
  411fdd:	inc    esi
  411fde:	push   ds
  411fdf:	mov    cl,0xe3
  411fe1:	(bad)
  411fe5:	pop    esp
  411fe6:	pusha  
  411fe7:	not    DWORD PTR [eax+0x1582ffd9]
  411fed:	sub    al,0xd6
  411fef:	add    DWORD PTR [ebx+0x48],0x2d
  411ff3:	cmc    
  411ff4:	mov    ebx,0x2699608f
  411ff9:	arpl   WORD PTR [edx-0x29],ax
  411ffc:	scas   al,BYTE PTR es:[edi]
  411ffd:	outs   dx,BYTE PTR ds:[esi]
  411ffe:	mov    ch,0xd4
  412000:	adc    al,cl
  412002:	add    eax,DWORD PTR [eax-0x5bd2730c]
  412008:	adc    DWORD PTR [esi-0x6a90deda],esi
  41200e:	lahf   
  41200f:	cdq    
  412010:	data16 stc 
  412012:	sbb    eax,0x171a4811
  412017:	fmul   st(2),st
  412019:	cs or  al,0x23
  41201c:	jo     0x412007
  41201e:	inc    eax
  41201f:	inc    edx
  412020:	push   ecx
  412021:	dec    BYTE PTR [ecx+0x5f]
  412024:	push   ss
  412025:	push   es
  412026:	sbb    eax,0x1f0ee6fe
  41202b:	sbb    BYTE PTR [esi-0x65],0xd
  41202f:	outs   dx,BYTE PTR ds:[esi]
  412030:	adc    DWORD PTR [esi+eax*2+0x67e76f41],0x54
  412038:	inc    edi
  412039:	lea    edi,[ecx]
  41203b:	sub    DWORD PTR [ebx],esi
  41203d:	lods   eax,DWORD PTR ds:[esi]
  41203e:	jle    0x4120a5
  412040:	mov    edx,0xcabfc124
  412045:	jecxz  0x4120a1
  412047:	xor    edx,DWORD PTR [eax]
  412049:	sar    esi,cl
  41204b:	mov    edi,0x8b5b79a9
  412050:	cdq    
  412051:	jbe    0x412077
  412053:	int3   
  412054:	inc    edi
  412055:	dec    ebx
  412056:	fidivr DWORD PTR ds:[edx+0x79ea2317]
  41205d:	xchg   ecx,eax
  41205e:	sahf   
  41205f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412060:	dec    ebp
  412061:	fmul   QWORD PTR [ebp+0x3f]
  412064:	pop    ebx
  412065:	xor    DWORD PTR [ecx+0x35],eax
  412068:	xor    bl,ch
  41206a:	popf   
  41206b:	xchg   bl,ch
  41206d:	pusha  
  41206e:	(bad)  [ecx-0x29]
  412071:	loop   0x4120a7
  412073:	push   edx
  412074:	mov    ds:0x5026396a,al
  412079:	imul   edi,ebx,0x4
  41207c:	scas   al,BYTE PTR es:[edi]
  41207d:	push   ss
  41207e:	popa   
  41207f:	test   BYTE PTR [eax],ch
  412081:	cmp    eax,0x2e75e3e4
  412086:	xor    BYTE PTR [esi-0x569c004d],dh
  41208c:	sti    
  41208d:	sub    DWORD PTR [eax+0x7541bdcf],0x1a87e116
  412097:	inc    ecx
  412098:	mov    bl,0xdd
  41209a:	cmp    DWORD PTR [edi],edi
  41209c:	repnz (bad) 
  41209e:	mov    bh,0x21
  4120a0:	adc    BYTE PTR [eax],0x4a
  4120a3:	cs jmp 0x3482de43
  4120a9:	test   BYTE PTR ds:0x54f1a784,dh
  4120af:	hlt    
  4120b0:	mov    ss,WORD PTR [edx]
  4120b2:	aam    0x5c
  4120b4:	(bad)  
  4120b5:	push   ss
  4120b6:	hlt    
  4120b7:	xchg   ecx,eax
  4120b8:	cdq    
  4120b9:	pop    ds
  4120ba:	sti    
  4120bb:	test   DWORD PTR [eax],eax
  4120bd:	test   eax,0x3520cbb8
  4120c2:	clc    
  4120c3:	ds dec esp
  4120c5:	fstp   QWORD PTR [ebx]
  4120c7:	pand   mm5,QWORD PTR [esp+edi*2]
  4120cb:	adc    eax,0x39d3885a
  4120d0:	test   al,0x2c
  4120d2:	xchg   DWORD PTR [edx-0x22b11c08],ebp
  4120d8:	xor    al,0xba
  4120da:	cmp    al,0xcd
  4120dc:	call   0xae97:0x49259b6a
  4120e3:	bound  esp,QWORD PTR [ebx]
  4120e5:	xrelease xchg BYTE PTR [ecx-0x1],dl
  4120e9:	add    bl,BYTE PTR [eax+0x7f]
  4120ec:	lods   al,BYTE PTR ds:[esi]
  4120ed:	push   cs
  4120ee:	leave  
  4120ef:	mov    eax,0x39b49d42
  4120f4:	cmp    BYTE PTR [edx+0x46c336d9],dl
  4120fa:	xchg   ebp,eax
  4120fb:	repz push edi
  4120fd:	push   ecx
  4120fe:	dec    eax
  4120ff:	cmp    eax,0x3ec8e833
  412104:	pop    esi
  412105:	sbb    ecx,edx
  412107:	jne    0x412165
  412109:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41210b:	push   ebx
  41210c:	jns    0x412101
  41210e:	xor    bl,0xe2
  412111:	repz and bh,BYTE PTR [edx-0x32f5ff]
  412118:	dec    ebp
  412119:	test   ebp,esi
  41211b:	jnp    0x41214f
  41211d:	nop
  41211e:	mov    al,ds:0x43cbd58e
  412123:	pop    es
  412124:	mov    esp,0x1390287a
  412129:	fst    DWORD PTR [ecx]
  41212b:	pop    edi
  41212c:	xor    al,0xbc
  41212e:	jnp    0x4121af
  412130:	inc    edx
  412131:	mov    dl,0x56
  412133:	les    esp,FWORD PTR [ecx+0x56]
  412136:	stos   DWORD PTR es:[edi],eax
  412137:	popf   
  412138:	mov    ah,0x8e
  41213a:	sbb    BYTE PTR [ecx-0x1d],bh
  41213d:	pop    eax
  41213e:	push   edi
  41213f:	or     eax,0xd101626a
  412144:	call   0xbe2d9a4f
  412149:	xchg   edi,eax
  41214a:	(bad)  [ebx-0x690210aa]
  412150:	outs   dx,DWORD PTR ds:[esi]
  412151:	sub    ch,BYTE PTR [ecx-0x7b730bc5]
  412157:	shl    BYTE PTR [ebx+0x31],1
  41215a:	cmc    
  41215b:	xchg   edi,eax
  41215c:	dec    eax
  41215d:	call   0x8d7f:0x5ad557d8
  412164:	(bad)  
  412166:	push   0xffffff90
  412168:	repz push edi
  41216a:	icebp  
  41216b:	inc    esi
  41216c:	clc    
  41216d:	test   al,0x1b
  41216f:	je     0x4121d0
  412171:	push   ecx
  412172:	mov    esp,0xda42f6d0
  412177:	push   ebp
  412178:	loop   0x4121f7
  41217a:	data16 cli 
  41217c:	jmp    0xf7df:0x115b4be5
  412183:	jns    0x41219a
  412185:	xchg   edi,eax
  412186:	(bad)  
  412187:	dec    esp
  412188:	popf   
  412189:	in     eax,dx
  41218a:	aas    
  41218b:	stos   BYTE PTR es:[edi],al
  41218c:	mov    al,ds:0x78b7b341
  412191:	jmp    0xf9155468
  412196:	call   0x66e0:0x1fa3b638
  41219d:	fld    TBYTE PTR [eax+eax*2-0x35]
  4121a1:	shl    esp,cl
  4121a3:	jg     0x412143
  4121a5:	xor    eax,0x82eb5271
  4121aa:	push   0x56
  4121ac:	push   eax
  4121ad:	xlat   BYTE PTR ds:[ebx]
  4121ae:	mov    bl,0x6f
  4121b0:	les    ebx,FWORD PTR [ecx+esi*1+0x4e]
  4121b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121b5:	fist   DWORD PTR ds:[ecx-0x659882d8]
  4121bc:	xchg   edx,eax
  4121bd:	pop    ecx
  4121be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121bf:	mov    ebx,0x956a8609
  4121c4:	jno    0x4121cb
  4121c6:	push   esp
  4121c7:	in     eax,0x88
  4121c9:	push   ebp
  4121ca:	imul   edx,DWORD PTR [ebx],0xa
  4121cd:	shl    DWORD PTR [ebp-0x4f99917b],0xf4
  4121d4:	sub    eax,DWORD PTR [edx+0x5e]
  4121d7:	pop    ds
  4121d8:	jecxz  0x412179
  4121da:	and    BYTE PTR [edx],bl
  4121dc:	into   
  4121dd:	sti    
  4121de:	jmp    0xd99e815c
  4121e3:	lods   al,BYTE PTR ds:[esi]
  4121e4:	ficomp DWORD PTR [esi-0x723816df]
  4121ea:	push   0xffffffbf
  4121ec:	jmp    0x41224c
  4121ee:	push   0xffffffa2
  4121f0:	and    al,0xe7
  4121f2:	inc    edx
  4121f3:	test   eax,0xa3f3ec01
  4121f8:	push   cs
  4121f9:	mov    ebx,0x226591f5
  4121fe:	js     0x41222f
  412200:	jno    0x412252
  412202:	out    0xc6,al
  412204:	and    edi,DWORD PTR [ebx+0x6c585903]
  41220a:	add    DWORD PTR [edx+0x55],eax
  41220d:	and    DWORD PTR [esp+ecx*4],eax
  412210:	mov    edi,0xc0b1f34e
  412215:	int3   
  412216:	sbb    al,0x8e
  412218:	sub    al,0xa
  41221a:	dec    esp
  41221b:	mov    al,0x3e
  41221d:	xchg   ebx,eax
  41221e:	clc    
  41221f:	adc    DWORD PTR [ebx],0x71a5ebcc
  412225:	push   ebp
  412226:	sbb    al,0x9f
  412228:	test   BYTE PTR [ecx+0x7e4f978e],0x5e
  41222f:	stos   BYTE PTR es:[edi],al
  412230:	fisubr WORD PTR ds:0xc76379ac
  412236:	cwde   
  412237:	es dec esp
  412239:	pop    esi
  41223a:	js     0x412268
  41223c:	push   edi
  41223d:	mov    al,0x39
  41223f:	iret   
  412240:	std    
  412241:	adc    al,0xd6
  412243:	jg     0x412293
  412245:	xchg   ebx,eax
  412246:	dec    edi
  412247:	mov    eax,ds:0xe3e4bba8
  41224c:	cmp    BYTE PTR [esi-0x213a6871],al
  412252:	add    dh,BYTE PTR [eax+0x6b3287d1]
  412258:	rol    dl,1
  41225a:	xor    eax,0x69a91aa
  41225f:	cmp    al,0x53
  412261:	(bad)  [edx-0x7059f7b1]
  412267:	cmp    DWORD PTR [edi+0x7b],0x580a9deb
  41226e:	fst    DWORD PTR [edi+0x62]
  412271:	ins    DWORD PTR es:[edi],dx
  412272:	data16 sahf 
  412274:	(bad)  
  412275:	ins    DWORD PTR es:[edi],dx
  412276:	and    BYTE PTR [edi+0x7ea17a4b],0xa5
  41227d:	repz mov ebp,0xc0434c50
  412283:	jp     0x4122f3
  412285:	mov    dh,0xfa
  412287:	bound  ebp,QWORD PTR [ebx]
  412289:	loopne 0x4122bf
  41228b:	add    DWORD PTR [ebx+0x9fe8454],edi
  412291:	out    0xff,eax
  412293:	cmp    eax,0xb443dde
  412298:	sub    BYTE PTR [esi+edx*4+0x4a],ah
  41229c:	or     dh,BYTE PTR [esi]
  41229e:	aad    0x32
  4122a0:	ret    
  4122a1:	jl     0x412290
  4122a3:	mov    ah,al
  4122a5:	imul   esp,DWORD PTR [edx+0x37c8f254],0x22
  4122ac:	inc    edx
  4122ad:	pop    edi
  4122ae:	test   BYTE PTR [ecx+eax*4-0x3],ch
  4122b2:	test   DWORD PTR [edx],edx
  4122b4:	mov    edx,0x67f3ee31
  4122b9:	lahf   
  4122ba:	call   0x36cbb5a6
  4122bf:	jmp    0x412304
  4122c1:	ja     0x4122ec
  4122c3:	push   ebp
  4122c4:	or     DWORD PTR [edi-0x54f628db],esp
  4122ca:	scas   al,BYTE PTR es:[edi]
  4122cb:	push   0x53
  4122cd:	adc    DWORD PTR [esi+0x53],esp
  4122d0:	mov    esi,edi
  4122d2:	inc    ebx
  4122d3:	mov    edi,0x4a6b2c4b
  4122d8:	jmp    0x412307
  4122da:	or     DWORD PTR [ebp+0x5d],ecx
  4122dd:	sub    al,0xb4
  4122df:	fisubr WORD PTR [esi+0x2d]
  4122e2:	xor    al,0xe4
  4122e4:	call   0x927bcf39
  4122e9:	adc    dh,bh
  4122eb:	shl    BYTE PTR [ebp-0x6bbea6a6],cl
  4122f1:	call   0x3153:0xaa950009
  4122f8:	push   cx
  4122fa:	mov    eax,0x48cd2d5f
  4122ff:	mov    DWORD PTR [ebp+0x7c154256],edi
  412305:	dec    esp
  412306:	lds    ecx,FWORD PTR ds:0xc4176340
  41230c:	jmp    0xd4d2:0xf9e740eb
  412313:	jmp    0x4122d7
  412315:	xor    dh,0x44
  412318:	push   es
  412319:	(bad)  
  41231b:	cdq    
  41231c:	int3   
  41231d:	xchg   esp,eax
  41231e:	or     esp,edi
  412320:	mov    bh,0x29
  412322:	lds    esi,FWORD PTR [ebx]
  412324:	inc    esp
  412325:	xor    eax,0x423789f8
  41232a:	and    al,0xa5
  41232c:	sub    al,0x0
  41232e:	xchg   ebp,eax
  41232f:	inc    ecx
  412330:	sbb    al,0x2c
  412332:	out    dx,al
  412333:	sub    ecx,DWORD PTR ds:0x8ea0ad1f
  412339:	inc    ecx
  41233a:	ja     0x4123ab
  41233c:	jecxz  0x412335
  41233e:	in     eax,0x47
  412340:	es mov bh,0xa8
  412343:	clc    
  412344:	or     ch,BYTE PTR [esi]
  412346:	add    dl,BYTE PTR [ebp-0x1c706681]
  41234c:	jl     0x4123b2
  41234e:	mov    cs,WORD PTR ds:0x9542f62d
  412354:	imul   esp,DWORD PTR [ecx],0xffffffec
  412357:	jg     0x412396
  412359:	and    BYTE PTR [ebp-0x47189392],bl
  41235f:	inc    esi
  412360:	in     al,dx
  412361:	test   eax,0x16318c66
  412366:	leave  
  412367:	inc    ebx
  412368:	xor    ebx,DWORD PTR [ecx+ebx*2+0x329f18d3]
  41236f:	add    ecx,DWORD PTR [eax+edx*2-0x40]
  412373:	mov    ch,bl
  412375:	pop    ebx
  412376:	(bad)  
  412377:	retf   0x1b00
  41237a:	mov    al,BYTE PTR [eax+edi*2+0x47]
  41237e:	add    al,0xc5
  412380:	push   eax
  412381:	push   esi
  412382:	pop    ebp
  412383:	int    0x3f
  412385:	push   edi
  412386:	fdivr  QWORD PTR [ebp-0x6c]
  412389:	mov    cl,0x73
  41238b:	out    0xc5,al
  41238d:	dec    ebx
  41238e:	stos   DWORD PTR es:[edi],eax
  41238f:	or     al,0xa6
  412391:	in     al,0x2c
  412393:	data16 (bad) es:0x758af227
  41239b:	jg     0x41237d
  41239d:	push   es
  41239e:	ins    DWORD PTR es:[edi],dx
  41239f:	adc    cl,0xb9
  4123a2:	inc    ebx
  4123a3:	push   eax
  4123a4:	mov    ebp,0xf32275c1
  4123a9:	push   cs
  4123aa:	repz retf 0x518b
  4123ae:	cld    
  4123af:	mov    eax,eax
  4123b1:	repnz loope 0x4123e9
  4123b4:	xor    al,0x6b
  4123b6:	pop    es
  4123b7:	dec    ecx
  4123b8:	in     eax,0x4a
  4123ba:	test   ecx,edi
  4123bc:	xchg   edi,eax
  4123bd:	xchg   DWORD PTR [ecx],edi
  4123bf:	push   ds
  4123c0:	mov    cl,BYTE PTR [edi]
  4123c2:	sar    DWORD PTR [edi+0x2c],0x20
  4123c6:	sub    al,0x1d
  4123c8:	pusha  
  4123c9:	jmp    DWORD PTR ds:0x457794d
  4123cf:	jno    0x4123fe
  4123d1:	mov    cl,0xe5
  4123d3:	int3   
  4123d4:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123d6:	xchg   edi,eax
  4123d7:	and    cl,BYTE PTR [edi+0x65]
  4123da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123db:	inc    ecx
  4123dc:	jp     0x41244d
  4123de:	retf   0x97cb
  4123e1:	lods   eax,DWORD PTR ds:[esi]
  4123e2:	mov    al,0xbf
  4123e4:	int    0x80
  4123e6:	sahf   
  4123e7:	inc    ebp
  4123e8:	pop    ss
  4123e9:	push   ecx
  4123ea:	or     eax,0x4e05ae15
  4123ef:	fwait
  4123f0:	fs sahf 
  4123f2:	(bad)  
  4123f4:	fdiv   QWORD PTR ds:0x3b75580b
  4123fa:	mov    ebp,0xccfab7ef
  4123ff:	loopne 0x412425
  412401:	push   cs
  412402:	mov    WORD PTR [esi],?
  412404:	xor    esp,edi
  412406:	mov    ebx,DWORD PTR [edx+eiz*2+0x5cb26d34]
  41240d:	or     DWORD PTR [edx-0x58cbc7cd],esp
  412413:	icebp  
  412414:	sub    DWORD PTR [ecx+0x52],esi
  412417:	icebp  
  412418:	xchg   BYTE PTR [edi-0x2aa3b619],cl
  41241e:	bound  esp,QWORD PTR [esi-0xd42eb9e]
  412424:	(bad)
  412427:	mov    BYTE PTR [ebx+0x69],dl
  41242a:	mov    ebp,0xb1f66bf6
  41242f:	jmp    0x403a:0x76dcbdd1
  412436:	and    BYTE PTR [ebx+0x64],cl
  412439:	jnp    0x412496
  41243b:	test   al,0xfa
  41243d:	sub    BYTE PTR [edi],0xdd
  412440:	dec    esi
  412441:	cmp    BYTE PTR [edi-0x32],cl
  412444:	pop    ds
  412445:	cmp    ebx,0x3daefaf6
  41244b:	(bad)  
  41244c:	sub    edi,esp
  41244e:	(bad)  
  412450:	pcmpgtd mm2,QWORD PTR [edi-0x70]
  412454:	add    ebx,DWORD PTR [edx]
  412456:	addr16 jp 0x4124b1
  412459:	mov    ch,0x1a
  41245b:	push   0xffffffba
  41245d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41245e:	xchg   DWORD PTR [edi-0x45da21fa],edx
  412464:	mov    esi,0xf0b892ef
  412469:	jmp    0x2009:0xc9773cf8
  412470:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412471:	jb     0x4124cd
  412473:	and    ebp,esi
  412475:	mov    bh,0x16
  412477:	retf   
  412478:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412479:	mov    edx,DWORD PTR [edx+0x27332095]
  41247f:	(bad)  
  412480:	mov    ch,0x9c
  412482:	clc    
  412483:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412485:	repz scas eax,DWORD PTR es:[edi]
  412487:	dec    edi
  412488:	pextrw esi,mm7,0x8
  41248c:	mov    eax,ds:0xb5db91ae
  412491:	out    dx,eax
  412492:	jo     0x412510
  412494:	jecxz  0x41246c
  412496:	call   0x33fc:0x9e064060
  41249d:	add    dh,dh
  41249f:	dec    edx
  4124a0:	xchg   BYTE PTR [edi],ah
  4124a2:	jnp    0x4124c4
  4124a4:	sub    al,0x41
  4124a6:	aaa    
  4124a7:	ficom  WORD PTR [ecx]
  4124a9:	pop    ss
  4124aa:	lea    ebp,[eax*4+0x7e4c83c2]
  4124b1:	lahf   
  4124b2:	mov    ah,0xf6
  4124b4:	imul   ecx,DWORD PTR [edi],0x4fda28b0
  4124ba:	and    BYTE PTR [edx],bl
  4124bc:	bound  ecx,QWORD PTR [esi]
  4124be:	(bad)  
  4124bf:	pop    ebx
  4124c0:	jp     0x4124d5
  4124c2:	loope  0x4124a2
  4124c4:	outs   dx,BYTE PTR ds:[esi]
  4124c5:	or     dl,BYTE PTR [ebp+0x6c026e90]
  4124cb:	pop    ss
  4124cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124cd:	and    eax,DWORD PTR [ebx+0x7772a692]
  4124d3:	mov    cl,BYTE PTR [ebp+0x1]
  4124d6:	ret    
  4124d7:	and    eax,0xc860c95a
  4124dc:	out    0x77,al
  4124de:	ja     0x4124a7
  4124e0:	pop    es
  4124e1:	add    al,0x29
  4124e3:	cmp    DWORD PTR [edx+0x6f],ebp
  4124e6:	mov    eax,ds:0x5d3a5875
  4124eb:	and    ebx,DWORD PTR [eax+edx*4+0x12]
  4124ef:	ficom  WORD PTR [edx]
  4124f1:	sbb    bl,BYTE PTR [ecx]
  4124f3:	(bad)  
  4124f4:	ficom  DWORD PTR [edi+0x434edbb2]
  4124fa:	scas   al,BYTE PTR es:[edi]
  4124fb:	sub    DWORD PTR [esi],edi
  4124fd:	gs dec esp
  4124ff:	pop    edi
  412500:	or     dl,BYTE PTR cs:[ecx+0x5c]
  412504:	pop    esi
  412505:	mov    eax,ebx
  412507:	dec    edx
  412508:	mov    al,0xa0
  41250a:	dec    ebx
  41250b:	or     DWORD PTR [eax-0x6ca3648b],esp
  412511:	in     eax,dx
  412512:	out    0xea,al
  412514:	fistp  WORD PTR [eax]
  412516:	pop    eax
  412517:	test   DWORD PTR [esp-0x66],esp
  41251b:	je     0x4124f2
  41251d:	xor    DWORD PTR [edi+0x57],0xf401aedb
  412524:	and    BYTE PTR [ebx],ch
  412526:	je     0x41255c
  412528:	jbe    0x4124d6
  41252a:	xor    ebx,DWORD PTR [eax+0x791419be]
  412530:	cmp    dh,cl
  412532:	dec    ecx
  412533:	jp     0x4124fe
  412535:	stc    
  412536:	pop    ecx
  412537:	stos   DWORD PTR es:[edi],eax
  412538:	data16 (bad) 
  41253a:	jge    0x4124c6
  41253c:	push   0xffffffe5
  41253e:	xchg   ecx,eax
  41253f:	addr16 inc esp
  412541:	stos   BYTE PTR es:[edi],al
  412542:	add    cl,bl
  412544:	(bad)  
  412545:	mov    edi,0xa83cb1a1
  41254a:	sub    dh,bh
  41254c:	xchg   esp,eax
  41254d:	mov    eax,ds:0x3b950ecc
  412552:	push   0xbc0b75c1
  412557:	sbb    al,0xc9
  412559:	enter  0x9e86,0x3a
  41255d:	jno    0x41259b
  41255f:	cmc    
  412560:	in     eax,0x4c
  412562:	dec    edi
  412563:	mov    al,0xbe
  412565:	ds mov eax,0x4fec7bb7
  41256b:	out    dx,eax
  41256c:	test   al,0xed
  41256e:	xor    eax,0x26a3e762
  412573:	(bad)  
  412574:	jp     0x41259d
  412576:	mov    ds:0x40f9b106,al
  41257b:	rcl    BYTE PTR [ebp+edi*4-0x3a6f1fbe],0x91
  412583:	mov    ecx,0x7159c05f
  412588:	inc    esi
  412589:	aas    
  41258a:	xor    BYTE PTR [edx],bl
  41258c:	mov    ebx,0x6ec3df2f
  412591:	add    esp,edi
  412593:	sahf   
  412594:	inc    esi
  412595:	sbb    esi,DWORD PTR [eax]
  412597:	push   ds
  412598:	pop    eax
  412599:	adc    al,BYTE PTR [ebp+0x5c8c4675]
  41259f:	push   eax
  4125a0:	jmp    0x412541
  4125a2:	sub    DWORD PTR [eax],ecx
  4125a4:	sub    esi,DWORD PTR [eax-0x2]
  4125a7:	xor    al,0x95
  4125a9:	test   BYTE PTR [ecx],bl
  4125ab:	push   0xffffffa6
  4125ad:	sub    al,0x5
  4125af:	pop    ecx
  4125b0:	les    ebx,FWORD PTR [ebp-0x50]
  4125b3:	int    0xb7
  4125b5:	xor    ecx,DWORD PTR [esi+0x20]
  4125b8:	arpl   WORD PTR [edi],sp
  4125ba:	popf   
  4125bb:	sbb    ch,BYTE PTR [esi-0x31]
  4125be:	cwde   
  4125bf:	fisttp QWORD PTR [esi+0x58]
  4125c2:	xor    ebx,ecx
  4125c4:	shr    BYTE PTR [ebx+0x1ae44e14],cl
  4125ca:	(bad)  
  4125cb:	dec    eax
  4125cc:	int    0x66
  4125ce:	stc    
  4125cf:	out    0x77,eax
  4125d1:	sub    ecx,DWORD PTR [eax]
  4125d3:	inc    ebp
  4125d4:	jne    0x41258c
  4125d6:	mov    WORD PTR [edx+0x2f6f38b8],gs
  4125dc:	push   es
  4125dd:	mov    eax,DWORD PTR [eax+ebx*1-0x28]
  4125e1:	add    BYTE PTR gs:[ebx],ch
  4125e4:	repnz mov eax,?
  4125e7:	(bad)  es:[edx+ebp*4+0x367c4cc0]
  4125ef:	call   0xd10:0x38899281
  4125f6:	(bad)  
  4125f8:	mov    ecx,0xac4cbfa6
  4125fd:	into   
  4125fe:	xchg   ebp,eax
  4125ff:	adc    bh,BYTE PTR [ebx+0x6c3308ff]
  412605:	jl     0x4125d4
  412607:	jmp    0xcd72:0x40449f10
  41260e:	push   ecx
  41260f:	ins    BYTE PTR es:[edi],dx
  412610:	sub    eax,0xb0037ac8
  412615:	and    al,0x6f
  412617:	dec    edx
  412618:	enter  0xb731,0xe
  41261c:	push   esi
  41261d:	xchg   ebx,eax
  41261e:	xchg   edx,eax
  41261f:	dec    esi
  412620:	test   eax,0xe03e9259
  412625:	jmp    0x920c:0xc21aed6
  41262c:	(bad)  
  41262d:	mov    ds:0x59e182f7,eax
  412632:	(bad)  
  412633:	pop    eax
  412634:	push   edi
  412635:	and    eax,0x7a910dac
  41263a:	sub    DWORD PTR [ebp+0x122749f9],esp
  412640:	jge    0x41265a
  412642:	mov    es,WORD PTR [esi]
  412644:	mov    cs,WORD PTR [edi-0x66]
  412647:	add    al,0x46
  412649:	mov    dl,0xd4
  41264b:	jmp    0xa0ca:0x928340b3
  412652:	outs   dx,DWORD PTR ds:[esi]
  412653:	add    ah,BYTE PTR [ecx+0x7b8aaf30]
  412659:	cld    
  41265a:	jle    0x41269a
  41265c:	cmp    DWORD PTR [edi],0x419cf050
  412662:	ins    DWORD PTR es:[edi],dx
  412663:	loope  0x4126c3
  412665:	mov    bh,0x10
  412667:	inc    ecx
  412668:	data16 sub al,BYTE PTR [esp+ecx*2]
  41266c:	cdq    
  41266d:	fsubr  QWORD PTR [edx+0x3c52c900]
  412673:	push   esi
  412674:	xchg   esp,eax
  412675:	je     0x412686
  412677:	push   edi
  412678:	int3   
  412679:	cmp    eax,ebp
  41267b:	adc    BYTE PTR [edi-0x19bb67cb],dl
  412681:	inc    ecx
  412682:	div    BYTE PTR [esi+0x2b8f3b6c]
  412688:	xor    DWORD PTR [ebp-0x74],ebx
  41268b:	cld    
  41268c:	jmp    0xc4e4:0x7d17f2d4
  412693:	(bad)  
  412694:	jg     0x4126bc
  412696:	mov    bh,0x3
  412698:	int    0x6
  41269a:	pop    esi
  41269b:	xchg   ebp,eax
  41269c:	(bad)  
  41269d:	mov    dh,0xf3
  41269f:	adc    edx,eax
  4126a1:	mov    eax,0xaba885ec
  4126a6:	adc    eax,0x1163f4a4
  4126ab:	test   al,0x1
  4126ad:	leave  
  4126ae:	ds push 0xad9ab31d
  4126b4:	mul    BYTE PTR [edx-0x229db80d]
  4126ba:	sub    eax,0x9a047721
  4126bf:	mov    ch,0x8a
  4126c1:	int    0x8c
  4126c3:	dec    esp
  4126c4:	jge    0x4126f7
  4126c6:	fs adc al,0xaf
  4126c9:	not    BYTE PTR [edx+0x47]
  4126cc:	xor    al,0xd
  4126ce:	jmp    0x857bc21a
  4126d3:	nop
  4126d4:	sbb    DWORD PTR [ebx],edi
  4126d6:	into   
  4126d7:	sbb    BYTE PTR [eax+0x779edf8e],dh
  4126dd:	mov    WORD PTR [eax-0x7add24c1],ds
  4126e3:	call   0xfdde:0x718cc22c
  4126ea:	jmp    0xf0cf:0xe508591e
  4126f1:	or     al,0x9d
  4126f3:	out    0xb7,eax
  4126f5:	cdq    
  4126f6:	mov    bl,0xb0
  4126f8:	sbb    ah,BYTE PTR [ebp-0x3d4de940]
  4126fe:	or     eax,0xaf754125
  412703:	fisub  WORD PTR [edi]
  412705:	pop    es
  412706:	sbb    esp,edi
  412708:	add    ch,BYTE PTR [ecx]
  41270a:	mov    dl,ch
  41270c:	std    
  41270d:	imul   BYTE PTR [esi-0x7963441b]
  412713:	mov    ah,0x6a
  412715:	xchg   esi,eax
  412716:	sub    DWORD PTR [edi-0x61520af4],edx
  41271c:	xchg   esp,eax
  41271d:	jo     0x412706
  41271f:	fwait
  412720:	pop    ebp
  412721:	fwait
  412722:	imul   ebp,DWORD PTR [edx],0x78
  412725:	fldpi  
  412727:	jge    0x412769
  412729:	pop    es
  41272a:	sbb    DWORD PTR [ebx+eiz*8+0x27620a1e],0x7b44b91a
  412735:	jecxz  0x412722
  412737:	adc    edx,DWORD PTR [eax+0xb]
  41273a:	adc    bh,al
  41273c:	cmovl  esp,eax
  41273f:	sub    edx,ebp
  412741:	inc    ecx
  412742:	repnz rol BYTE PTR [esi-0x40982b4c],1
  412749:	pop    esi
  41274a:	dec    ebp
  41274b:	shl    DWORD PTR [ecx+0x48],1
  41274e:	dec    edx
  41274f:	sbb    al,0x12
  412751:	inc    esp
  412752:	fisttp QWORD PTR [esi-0x67]
  412755:	push   ss
  412756:	mov    edx,0x16950d98
  41275b:	cmp    al,BYTE PTR [edi+0x6c]
  41275e:	fmul   QWORD PTR [ebp-0x46b3313c]
  412764:	xor    eax,0x38c963d6
  412769:	std    
  41276a:	push   edx
  41276b:	sbb    eax,0x5298d120
  412770:	dec    ebx
  412771:	js     0x4127e8
  412773:	add    eax,0x82fd69f2
  412778:	iret   
  412779:	sbb    BYTE PTR [edx-0x66],0xb3
  41277d:	sub    edx,ebx
  41277f:	mov    edi,0x556167d0
  412784:	mov    bl,0x5a
  412786:	jae    0x412795
  412788:	jmp    0x4127f8
  41278a:	jl     0x4127c5
  41278c:	sub    eax,0xfdf7389f
  412791:	sti    
  412792:	jns    0x412807
  412794:	(bad)  
  412795:	xchg   esi,eax
  412796:	mov    ebx,0x5bb1e556
  41279b:	add    BYTE PTR [ebx-0x55f5c4c5],bh
  4127a1:	imul   ebx,DWORD PTR gs:[edx],0x813b7d29
  4127a8:	jae    0x412794
  4127aa:	mov    edx,0xd2f68b96
  4127af:	into   
  4127b0:	mov    eax,0xe96636b6
  4127b5:	in     al,0x8e
  4127b7:	retf   0x3a8b
  4127ba:	aaa    
  4127bb:	cmp    eax,0x25b06705
  4127c0:	rcl    BYTE PTR [edx],1
  4127c2:	push   ebx
  4127c3:	add    ebx,esp
  4127c5:	outs   dx,BYTE PTR ds:[esi]
  4127c6:	ds pop ebp
  4127c8:	out    0x71,eax
  4127ca:	fadd   QWORD PTR [eax-0x612fdaeb]
  4127d0:	(bad)  
  4127d1:	sti    
  4127d2:	cwde   
  4127d3:	mov    esi,0xfeae630c
  4127d8:	int3   
  4127d9:	int3   
  4127da:	push   edi
  4127db:	xchg   DWORD PTR [edx+0x57],ebp
  4127de:	jecxz  0x412853
  4127e0:	aaa    
  4127e1:	sahf   
  4127e2:	push   DWORD PTR [ebx+0x26]
  4127e5:	or     BYTE PTR [edi+0x53f959ed],0x8b
  4127ec:	iret   
  4127ed:	(bad)  
  4127ee:	push   DWORD PTR [edx+esi*4]
  4127f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127f2:	bound  edx,QWORD PTR [ebx]
  4127f4:	push   0x8f976b33
  4127f9:	imul   ecx,esi,0xffffffeb
  4127fc:	stos   BYTE PTR es:[edi],al
  4127fd:	rcr    DWORD PTR ds:[ebx+eax*2-0x3f],1
  412802:	int    0x4c
  412804:	or     eax,0x2c32fde5
  412809:	adc    BYTE PTR ds:0xd4659d4a,dh
  41280f:	icebp  
  412810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412811:	mov    bh,BYTE PTR [edx+eax*1-0x50]
  412815:	(bad)  
  412816:	jge    0x4127c3
  412818:	xchg   ebp,eax
  412819:	sub    BYTE PTR [eax+0x57dddae7],dh
  41281f:	sub    eax,ebp
  412821:	jl     0x412853
  412823:	pop    edx
  412824:	mov    WORD PTR [ebx+0x15],gs
  412827:	repz sbb BYTE PTR [eax],ah
  41282a:	mov    esp,0x3d40b669
  41282f:	push   ds
  412830:	in     eax,0x60
  412832:	xlat   BYTE PTR ds:[ebx]
  412833:	dec    ecx
  412834:	ss pop esp
  412836:	int3   
  412837:	xchg   esp,eax
  412838:	push   ebx
  412839:	push   0xe2fd6e72
  41283e:	or     bh,bh
  412840:	add    BYTE PTR [esi-0x21],ah
  412843:	xor    ah,BYTE PTR [edx+0x3e7572ce]
  412849:	fwait
  41284a:	dec    edi
  41284b:	test   eax,0xd4d8e36e
  412850:	ins    DWORD PTR es:[edi],dx
  412851:	push   esi
  412852:	cmp    cl,0x64
  412855:	dec    edi
  412856:	jecxz  0x41282b
  412858:	push   edi
  412859:	inc    ecx
  41285a:	and    BYTE PTR [edx+0x478c1459],ch
  412860:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412861:	cs inc ebx
  412863:	bound  esp,QWORD PTR [ebp-0x7da9bafc]
  412869:	cwde   
  41286a:	jle    0x41287b
  41286c:	jno    0x412809
  41286e:	mov    ebx,ebx
  412870:	jbe    0x4128ae
  412872:	adc    al,0x4d
  412874:	mov    DWORD PTR [ebp-0x340f79dc],esp
  41287a:	fcmovnbe st,st(4)
  41287c:	push   ss
  41287d:	in     al,0x5c
  41287f:	into   
  412880:	adc    al,0x73
  412882:	mov    ch,0x8b
  412884:	std    
  412885:	inc    esi
  412886:	and    bh,bl
  412888:	sub    ebx,DWORD PTR [eax]
  41288a:	(bad)  [ecx+0x380d6acf]
  412890:	mov    WORD PTR [ecx],es
  412892:	mov    es,WORD PTR [edi-0x24]
  412895:	loop   0x412824
  412897:	lds    ecx,FWORD PTR ds:0xa66ab604
  41289d:	and    edi,DWORD PTR [ecx-0x2a]
  4128a0:	sub    al,0x8b
  4128a2:	cmp    bl,BYTE PTR [esi]
  4128a4:	pop    esp
  4128a5:	push   0x46b26d8c
  4128aa:	mov    dl,0x6d
  4128ac:	xchg   edx,eax
  4128ad:	jae    0x412863
  4128af:	fwait
  4128b0:	mov    eax,ds:0x4267062f
  4128b5:	jno    0x4128ec
  4128b7:	mov    eax,ds:0xacfc6c3e
  4128bc:	or     al,0xd7
  4128be:	sbb    eax,0xccb6752e
  4128c3:	int3   
  4128c4:	dec    ecx
  4128c5:	push   ecx
  4128c6:	xchg   edx,eax
  4128c7:	fild   QWORD PTR ds:0xeb500657
  4128cd:	jbe    0x4128ef
  4128cf:	and    eax,DWORD PTR [esi]
  4128d1:	rol    BYTE PTR [esi-0x70c6c49f],1
  4128d7:	cmp    bl,BYTE PTR [edx-0xc]
  4128da:	inc    esi
  4128db:	adc    BYTE PTR [ebx+edx*1],cl
  4128de:	int3   
  4128df:	mov    dh,bl
  4128e1:	int    0xd1
  4128e3:	mov    edi,0x5ea2057e
  4128e8:	cdq    
  4128e9:	aam    0x15
  4128eb:	adc    esp,DWORD PTR [edi+0x2f]
  4128ee:	dec    eax
  4128ef:	ret    
  4128f0:	mov    bl,0x20
  4128f2:	cmp    esi,esi
  4128f4:	inc    eax
  4128f5:	add    BYTE PTR [ecx],bh
  4128f7:	mov    ds:0xb440154b,al
  4128fc:	inc    eax
  4128fd:	add    DWORD PTR [ebx+0x68dd902f],edi
  412903:	mov    ds:0xea4dc973,al
  412908:	and    dl,dl
  41290a:	mov    al,ds:0x921b0a2b
  41290f:	aad    0xb1
  412911:	mov    ch,0x2e
  412913:	das    
  412914:	adc    eax,0x3434dd3d
  412919:	cwde   
  41291a:	aaa    
  41291b:	loope  0x412957
  41291d:	mov    eax,ds:0x91c3bef
  412922:	jle    0x4128fd
  412924:	inc    esi
  412925:	and    BYTE PTR [eax+0x76],al
  412928:	ret    0x3a0a
  41292b:	pop    ecx
  41292c:	out    0x34,al
  41292e:	mov    dh,0x74
  412930:	(bad)  
  412931:	adc    al,BYTE PTR [eax+0x27027855]
  412937:	inc    ecx
  412938:	rol    dl,cl
  41293a:	xchg   ebp,eax
  41293b:	jg     0x412981
  41293d:	xchg   edx,eax
  41293e:	jne    0x412906
  412940:	shrd   DWORD PTR [ecx],ecx,cl
  412943:	cwde   
  412944:	xor    BYTE PTR [esi+0x24],al
  412947:	mov    eax,ds:0xf97f9b32
  41294c:	rcr    DWORD PTR [eax+0x33],0xa0
  412950:	mov    edi,0xedfed411
  412955:	pop    ecx
  412956:	mov    ch,0xce
  412958:	das    
  412959:	add    ebx,edi
  41295b:	int    0x51
  41295d:	push   0x73
  41295f:	inc    dl
  412961:	dec    ebx
  412962:	xchg   edi,eax
  412963:	rcl    BYTE PTR [esi],1
  412965:	sbb    ebp,DWORD PTR [eax]
  412967:	mov    dh,0xa7
  412969:	jmp    0xe276fb56
  41296e:	leave  
  41296f:	shl    DWORD PTR [eax],1
  412971:	mov    cl,0x70
  412973:	rol    BYTE PTR [ebp+0x5957f1db],cl
  412979:	call   0xe3a9:0xab299f07
  412980:	pop    esp
  412981:	in     al,0xa
  412983:	and    ebx,DWORD PTR [ebp+esi*2+0x6dd22e45]
  41298a:	pop    edi
  41298b:	xchg   ebx,eax
  41298c:	pusha  
  41298d:	sti    
  41298e:	mov    DWORD PTR [ebx+0x57],ecx
  412991:	adc    BYTE PTR [ecx+0x66],al
  412994:	enter  0xbad2,0x3c
  412998:	and    BYTE PTR [eax],cl
  41299a:	aaa    
  41299b:	fsub   QWORD PTR [esp+eax*2-0x15623db]
  4129a2:	push   ebx
  4129a3:	fnstenv [edx-0x3da39638]
  4129a9:	int3   
  4129aa:	lahf   
  4129ab:	fisttp WORD PTR [eax-0x5e3607b7]
  4129b1:	pop    ds
  4129b2:	dec    eax
  4129b3:	mov    edi,0xced2983b
  4129b8:	pop    edx
  4129b9:	mov    ebx,0xcc523578
  4129be:	dec    edx
  4129bf:	dec    edx
  4129c0:	ins    BYTE PTR es:[edi],dx
  4129c1:	scas   al,BYTE PTR es:[edi]
  4129c2:	imul   esp,DWORD PTR ds:0x34568a53,0x2b3b0da7
  4129cc:	dec    eax
  4129cd:	je     0x41298e
  4129cf:	out    0x17,eax
  4129d1:	mov    edx,DWORD PTR [ebp+0x0]
  4129d4:	sahf   
  4129d5:	jne    0x4129d2
  4129d7:	pushf  
  4129d8:	shr    esp,0x4d
  4129db:	loope  0x412a1f
  4129dd:	xchg   ebx,eax
  4129de:	aas    
  4129df:	push   es
  4129e0:	jno    0x412a0b
  4129e2:	xchg   edx,eax
  4129e3:	lahf   
  4129e4:	inc    edx
  4129e5:	(bad)  
  4129e6:	es out 0xf8,al
  4129e9:	ret    0xcc26
  4129ec:	aad    0x98
  4129ee:	add    DWORD PTR [edi+0x19],0xffffffa5
  4129f2:	add    eax,0xbc8f9cc6
  4129f7:	fisttp DWORD PTR [edx]
  4129f9:	cld    
  4129fa:	scas   al,BYTE PTR es:[edi]
  4129fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129fc:	cmp    al,0x16
  4129fe:	aas    
  4129ff:	nop
  412a00:	retf   
  412a01:	inc    edi
  412a02:	push   cs
  412a03:	daa    
  412a04:	and    eax,0x65d81b6e
  412a09:	mov    ecx,0xfa6a8133
  412a0e:	sub    eax,0xd562b2fb
  412a13:	mov    DWORD PTR [edi],edx
  412a15:	push   esi
  412a16:	mov    BYTE PTR [ecx-0x8],ah
  412a19:	jbe    0x412a0a
  412a1b:	mov    dl,0xd7
  412a1d:	or     al,0x7d
  412a1f:	dec    eax
  412a20:	add    esi,DWORD PTR [eax-0x6b]
  412a23:	dec    esp
  412a24:	call   0x297c:0x33d142c1
  412a2b:	div    BYTE PTR ds:0xdc10ab13
  412a31:	in     eax,dx
  412a32:	lods   al,BYTE PTR ds:[esi]
  412a33:	pushf  
  412a34:	scas   al,BYTE PTR es:[edi]
  412a35:	mov    al,ds:0x69d7fd02
  412a3a:	add    edx,DWORD PTR [ecx-0x54]
  412a3d:	push   eax
  412a3e:	in     eax,dx
  412a3f:	ins    DWORD PTR es:[edi],dx
  412a40:	pushf  
  412a41:	add    bl,bl
  412a43:	sbb    DWORD PTR [edx],ebp
  412a45:	sbb    DWORD PTR ds:0x149aaef6,edx
  412a4b:	fisub  DWORD PTR [edx-0x42]
  412a4e:	outs   dx,BYTE PTR ds:[esi]
  412a4f:	(bad)  
  412a50:	fst    DWORD PTR [eax]
  412a52:	sbb    edx,DWORD PTR gs:[ebp+0x72]
  412a56:	mov    cl,0x5f
  412a58:	adc    BYTE PTR [ebx+eax*1+0x31],dh
  412a5c:	sbb    ebp,DWORD PTR [ecx+0x38]
  412a5f:	add    BYTE PTR [ecx-0x7f],0x87
  412a63:	jno    0x412a30
  412a65:	vhsubpd xmm6,xmm6,xmm6
  412a69:	stc    
  412a6a:	lea    edi,[edi+0x39]
  412a6d:	jns    0x412a52
  412a6f:	in     eax,0xd1
  412a71:	scas   eax,DWORD PTR es:[edi]
  412a72:	cmp    al,0x90
  412a74:	je     0x412ac1
  412a76:	and    eax,0x6d2e2624
  412a7b:	jae    0x412a62
  412a7d:	mov    eax,0x7f15caa1
  412a82:	fiadd  WORD PTR [esi]
  412a84:	std    
  412a85:	add    bh,BYTE PTR [ebx-0x3]
  412a88:	stos   BYTE PTR es:[edi],al
  412a89:	push   0xa7511f3a
  412a8e:	dec    esi
  412a8f:	mov    ah,0x26
  412a91:	addr16 add ebp,esi
  412a94:	js     0x412a92
  412a96:	sbb    esi,0x5f
  412a99:	hlt    
  412a9a:	mov    ah,0xf5
  412a9c:	mov    al,0x6
  412a9e:	out    0x1d,eax
  412aa0:	cmp    eax,0xb7ff7fd0
  412aa5:	or     DWORD PTR [edi-0x2bb05d5c],eax
  412aab:	mov    al,0xd0
  412aad:	lds    ebx,FWORD PTR ds:[ebx+ecx*2]
  412ab1:	mov    WORD PTR [ebp+eax*4-0x5],?
  412ab5:	mov    ds:0xce471279,eax
  412aba:	stos   DWORD PTR es:[edi],eax
  412abb:	xchg   edx,eax
  412abc:	fisttp DWORD PTR [ebx-0x78]
  412abf:	aam    0xea
  412ac1:	inc    ebx
  412ac2:	add    DWORD PTR [ecx+0x7de8dc5],ebx
  412ac8:	in     eax,dx
  412ac9:	or     al,0x38
  412acb:	pop    esp
  412acc:	mov    cl,cl
  412ace:	xor    eax,0xe245d9bc
  412ad3:	lods   al,BYTE PTR ds:[esi]
  412ad4:	cmp    BYTE PTR [ebp-0x6c50e15e],bl
  412ada:	lahf   
  412adb:	xchg   edx,eax
  412adc:	ret    
  412add:	jns    0x412b28
  412adf:	cmp    edi,DWORD PTR [ecx+edi*1-0x1d]
  412ae3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ae4:	add    edx,DWORD PTR [edi+0x45]
  412ae7:	adc    ecx,eax
  412ae9:	arpl   WORD PTR [ebx-0x7db724c6],dx
  412aef:	xor    esp,ebx
  412af1:	scas   eax,DWORD PTR es:[edi]
  412af2:	add    DWORD PTR [ecx-0xc],0xfcdc25d9
  412af9:	ret    
  412afa:	jp     0x412b73
  412afc:	xor    eax,0x3a36e3e7
  412b01:	imul   ebx,ecx,0xffffffb7
  412b04:	jae    0x412b36
  412b06:	mov    bh,0xbe
  412b08:	loop   0x412ac8
  412b0a:	cld    
  412b0b:	xor    al,0xc8
  412b0d:	fist   WORD PTR es:0x76a95bd
  412b14:	jg     0x412b5d
  412b16:	push   0xfffffff6
  412b18:	out    dx,al
  412b19:	sti    
  412b1a:	xor    ah,BYTE PTR [ebp-0x22]
  412b1d:	loopne 0x412b9e
  412b1f:	sbb    edx,DWORD PTR [edx-0x54]
  412b22:	xor    ch,BYTE PTR [edi-0x7448e06d]
  412b28:	xor    al,0xe8
  412b2a:	or     DWORD PTR [eax],eax
  412b2c:	pop    ds
  412b2d:	sub    al,0x38
  412b2f:	sub    dh,dh
  412b31:	test   eax,esp
  412b33:	aaa    
  412b34:	cmp    eax,0x8ddb4e10
  412b39:	rcl    BYTE PTR [esi+0x69],1
  412b3c:	sub    BYTE PTR [eax+0x7b35254c],0xeb
  412b43:	(bad)  
  412b44:	imul   edi,DWORD PTR [ebp+0x10],0xdd6370d6
  412b4b:	and    ebx,DWORD PTR gs:[eax+0x1b]
  412b4f:	aad    0x6
  412b51:	lods   eax,DWORD PTR ds:[esi]
  412b52:	call   0x5174:0xf3df9f3c
  412b59:	jge    0x412bcd
  412b5b:	sar    dh,1
  412b5d:	mov    dh,0x5c
  412b5f:	rcr    BYTE PTR [edi],cl
  412b61:	push   ebx
  412b62:	sub    al,0x26
  412b64:	pop    ebp
  412b65:	add    al,0xb8
  412b67:	shr    DWORD PTR [edi-0x18],cl
  412b6a:	push   ebx
  412b6b:	fld    QWORD PTR [ebx]
  412b6d:	adc    ecx,edx
  412b6f:	nop
  412b70:	dec    edx
  412b71:	pop    eax
  412b72:	call   0xd4a8:0x4975cdde
  412b79:	in     al,0x95
  412b7b:	dec    ecx
  412b7c:	js     0x412bbb
  412b7e:	bound  ebp,QWORD PTR [ecx+0x55]
  412b81:	dec    esi
  412b82:	dec    edx
  412b83:	fimul  WORD PTR [esi+0x1b]
  412b86:	retf   0xb53a
  412b89:	mov    ds:0x6ff41dd,al
  412b8e:	fidivr WORD PTR [ecx]
  412b90:	cmp    DWORD PTR [esp+edi*4+0x2d7aa2d1],0x1a
  412b98:	xchg   esi,eax
  412b99:	fbstp  TBYTE PTR [esi+0x5c]
  412b9c:	cmp    eax,0x8294d5bf
  412ba1:	jmp    0xa105c533
  412ba6:	adc    BYTE PTR [edi-0x80],dh
  412ba9:	pop    edi
  412baa:	pop    es
  412bab:	add    ah,al
  412bad:	mov    ds:0xd36d5cb5,al
  412bb2:	out    dx,eax
  412bb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bb4:	jle    0x412b67
  412bb6:	out    0xd5,al
  412bb8:	les    eax,FWORD PTR [eax+ebp*4+0x63]
  412bbc:	fs mov edi,0x194d9be3
  412bc2:	mov    eax,ds:0x40d02af3
  412bc7:	mov    bl,0x2b
  412bc9:	es sahf 
  412bcb:	xchg   BYTE PTR [esi+0x503c65e8],bh
  412bd1:	out    dx,al
  412bd2:	lea    edx,[esi+0x7d]
  412bd5:	dec    edx
  412bd6:	add    DWORD PTR [ebx-0x5afe1864],0x2a
  412bdd:	dec    edi
  412bde:	pop    es
  412bdf:	pop    ebx
  412be0:	enter  0x9df,0x4
  412be4:	mov    ch,0xf0
  412be6:	dec    edi
  412be7:	ficom  DWORD PTR [edi]
  412be9:	retf   0xb824
  412bec:	jno    0x412beb
  412bee:	(bad)  
  412bef:	jge    0x412b93
  412bf1:	aaa    
  412bf2:	mov    al,0xf8
  412bf4:	jne    0x412bbe
  412bf6:	imul   ecx,DWORD PTR [eax+ebp*1],0x2401fbdf
  412bfd:	pop    ebp
  412bfe:	int3   
  412bff:	out    0x5a,eax
  412c01:	scas   al,BYTE PTR es:[edi]
  412c02:	pushf  
  412c03:	mov    bl,0xa2
  412c05:	sub    al,0xaf
  412c07:	jmp    0xb50f1943
  412c0c:	ins    DWORD PTR es:[edi],dx
  412c0d:	cdq    
  412c0e:	cmp    ecx,DWORD PTR [esi+0x220c8a7]
  412c14:	pop    edx
  412c15:	dec    esp
  412c16:	jb     0x412c3a
  412c18:	daa    
  412c19:	mov    BYTE PTR [eax],al
  412c1b:	std    
  412c1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c1d:	out    dx,al
  412c1e:	inc    edx
  412c1f:	inc    ecx
  412c20:	inc    ebx
  412c21:	sti    
  412c22:	jmp    0xd520:0x18bb3d4a
  412c29:	pop    esi
  412c2a:	loope  0x412c1f
  412c2c:	push   ecx
  412c2d:	pop    esi
  412c2e:	sbb    ebp,edx
  412c30:	fsubr  QWORD PTR [ebp+edi*2+0x4643e637]
  412c37:	mov    esi,0xc18018
  412c3c:	cs nop
  412c3e:	mov    eax,ds:0x556260be
  412c43:	pop    ebp
  412c44:	jmp    0x412c2f
  412c46:	jnp    0x412bf6
  412c48:	je     0x412ca8
  412c4a:	or     dl,BYTE PTR [ebx]
  412c4c:	lea    ebx,[ecx-0xf8f47f9]
  412c52:	push   eax
  412c53:	sbb    ah,ah
  412c55:	in     al,0x1e
  412c57:	aad    0xc6
  412c59:	retf   0xf89a
  412c5c:	popf   
  412c5d:	lods   eax,DWORD PTR ds:[esi]
  412c5e:	or     edx,esi
  412c60:	pop    ebp
  412c61:	(bad)  
  412c62:	pop    ebp
  412c63:	in     eax,dx
  412c64:	in     eax,0x9e
  412c66:	rol    DWORD PTR [ecx+0x668f3fda],0xe2
  412c6d:	cmp    BYTE PTR [eax-0x44],ch
  412c70:	adc    ecx,DWORD PTR [ebx-0x34]
  412c73:	sti    
  412c74:	dec    edi
  412c75:	cmp    BYTE PTR cs:[ebx+0xa717ba9],ah
  412c7c:	jmp    0x412cf1
  412c7e:	jge    0x412c2e
  412c80:	getsec 
  412c82:	mov    ss,ebp
  412c84:	xchg   esp,esp
  412c86:	and    DWORD PTR [edi-0x5e],ebp
  412c89:	cmp    bh,BYTE PTR [ebp-0x73]
  412c8c:	popa   
  412c8d:	test   al,0x86
  412c8f:	jns    0x412d0e
  412c91:	mov    ecx,0xefe8fb91
  412c96:	add    eax,0xf1aa1881
  412c9b:	mov    esp,0xbd54714b
  412ca0:	push   esi
  412ca1:	out    dx,al
  412ca2:	dec    edx
  412ca3:	add    al,BYTE PTR [ebx+0x38572549]
  412ca9:	or     al,BYTE PTR [esi-0x5b92c8c6]
  412caf:	add    edx,edx
  412cb1:	lods   eax,DWORD PTR ds:[esi]
  412cb2:	lahf   
  412cb3:	scas   al,BYTE PTR es:[edi]
  412cb4:	pop    es
  412cb5:	mov    cs,edi
  412cb7:	cli    
  412cb8:	dec    edx
  412cb9:	call   0x73032f2e
  412cbe:	je     0x412cef
  412cc0:	fld    QWORD PTR [edi+0x1ce3c121]
  412cc6:	(bad)  
  412cc7:	int3   
  412cc8:	out    0xc1,al
  412cca:	loop   0x412d38
  412ccc:	hlt    
  412ccd:	jns    0x412c6d
  412ccf:	sbb    dh,BYTE PTR [ebx-0x21679ded]
  412cd5:	stos   DWORD PTR es:[edi],eax
  412cd6:	daa    
  412cd7:	inc    edi
  412cd8:	out    0x4d,eax
  412cda:	push   ss
  412cdb:	xor    al,0xab
  412cdd:	sbb    al,0x8b
  412cdf:	leave  
  412ce0:	loop   0x412d24
  412ce2:	jmp    0x412cf1
  412ce4:	nop
  412ce5:	push   ebx
  412ce6:	ret    
  412ce7:	push   esp
  412ce8:	sub    edi,esi
  412cea:	ja     0x412c8a
  412cec:	or     BYTE PTR [edx-0x35],0xaf
  412cf0:	jb     0x412d60
  412cf2:	fchs   
  412cf4:	rcr    BYTE PTR [eax+0x4f4be8c0],1
  412cfa:	push   ss
  412cfb:	ficomp DWORD PTR ds:0x7773ec3c
  412d01:	push   edx
  412d02:	xchg   ebp,eax
  412d03:	lock sub esp,DWORD PTR [ebp+0x6166f893]
  412d0a:	sub    eax,DWORD PTR [edi]
  412d0c:	adc    eax,0x85a6f068
  412d11:	adc    esi,DWORD PTR [esi]
  412d13:	hlt    
  412d14:	ja     0x412cab
  412d16:	push   esp
  412d17:	bound  edx,QWORD PTR [edi+eiz*8-0x2]
  412d1b:	retf   0x5ddd
  412d1e:	xor    al,0x9c
  412d20:	and    al,0xf0
  412d22:	lods   eax,DWORD PTR ds:[esi]
  412d23:	leave  
  412d24:	mov    edi,esi
  412d26:	jl     0x412d79
  412d28:	int    0x5
  412d2a:	call   0xc81ea1f2
  412d2f:	daa    
  412d30:	adc    ebp,0x7f
  412d33:	pop    edi
  412d34:	mov    eax,ds:0x6e298e6d
  412d39:	and    al,0x48
  412d3b:	jb     0x412d57
  412d3d:	hlt    
  412d3e:	fcom   QWORD PTR [esi-0x3c]
  412d41:	cmp    bh,BYTE PTR [ebx]
  412d43:	pop    edi
  412d44:	and    eax,0x75a8ad3f
  412d49:	adc    dh,BYTE PTR [esi+0x6a]
  412d4c:	mov    WORD PTR [ebx],ss
  412d4e:	ss lock and al,0x96
  412d52:	ins    DWORD PTR es:[edi],dx
  412d53:	popa   
  412d54:	dec    ebx
  412d55:	mov    DWORD PTR [ebx-0x6cec1734],eax
  412d5b:	lods   al,BYTE PTR ds:[esi]
  412d5c:	adc    ah,ah
  412d5e:	lea    eax,[ecx+edi*2-0x41]
  412d62:	cmp    ch,BYTE PTR [esi-0x1436fdf3]
  412d68:	ret    0x3917
  412d6b:	mov    al,BYTE PTR [esi-0x5a]
  412d6e:	ins    DWORD PTR es:[edi],dx
  412d6f:	dec    edx
  412d70:	jne    0x412d11
  412d72:	jmp    0xdb8f96ce
  412d77:	lahf   
  412d78:	loop   0x412dc5
  412d7a:	mov    al,ds:0x190f64ee
  412d7f:	les    ebx,FWORD PTR [edx]
  412d81:	push   0xffffffbd
  412d83:	sti    
  412d84:	jb     0x412d7e
  412d86:	or     al,0xb6
  412d88:	jbe    0x412d7f
  412d8a:	mov    ebp,DWORD PTR [ecx]
  412d8c:	(bad)  
  412d8d:	mov    fs,WORD PTR [esi]
  412d8f:	xchg   esi,eax
  412d90:	aaa    
  412d91:	aad    0x1a
  412d93:	jp     0x412dec
  412d95:	inc    eax
  412d96:	(bad)  
  412d97:	loopne 0x412d2b
  412d99:	or     ch,BYTE PTR [ebx-0x23]
  412d9c:	cdq    
  412d9d:	mov    ah,0x29
  412d9f:	push   0xb9105d0d
  412da4:	xchg   edi,eax
  412da5:	scas   eax,DWORD PTR es:[edi]
  412da6:	pop    ecx
  412da7:	mov    cl,0x6a
  412da9:	mov    ds:0xf22edb5a,eax
  412dae:	stc    
  412daf:	add    al,0x9c
  412db1:	inc    eax
  412db2:	jae    0x412e00
  412db4:	aas    
  412db5:	xchg   DWORD PTR [edi-0x61ed7f42],esi
  412dbb:	mov    dl,0xe
  412dbd:	mov    cl,0xae
  412dbf:	outs   dx,BYTE PTR ds:[esi]
  412dc0:	bound  esi,QWORD PTR [esi-0x7c5e70a8]
  412dc6:	cmp    esp,DWORD PTR ds:0x52d42d53
  412dcc:	fs ins DWORD PTR es:[edi],dx
  412dce:	fcmovbe st,st(6)
  412dd0:	and    bh,BYTE PTR [ecx-0x454dfa9e]
  412dd6:	test   dl,0x55
  412dd9:	and    DWORD PTR [eax+eiz*2],ebp
  412ddc:	into   
  412ddd:	adc    al,0x86
  412ddf:	mov    al,ds:0x1e0ba2c5
  412de4:	shl    bl,0x99
  412de7:	(bad)  
  412de8:	sub    eax,0x5244c739
  412ded:	sub    al,0x47
  412def:	sub    BYTE PTR [ebx+0x49d78bb7],bh
  412df5:	aaa    
  412df6:	dec    esp
  412df7:	sbb    DWORD PTR [esi-0x1f30a8d6],edx
  412dfd:	xchg   esi,eax
  412dfe:	pop    edx
  412dff:	jl     0x412d8c
  412e01:	sti    
  412e02:	lea    esp,[eax]
  412e04:	xor    DWORD PTR [edx+0x6c07067f],0x7
  412e0b:	jo     0x412dc7
  412e0d:	inc    DWORD PTR [eax-0x59]
  412e10:	sbb    eax,0x141e5f74
  412e15:	mov    ebx,0x1b010ff2
  412e1a:	sbb    bl,0x76
  412e1d:	cld    
  412e1e:	lods   eax,DWORD PTR ds:[esi]
  412e1f:	xchg   esp,eax
  412e20:	ror    BYTE PTR [edi-0x2d],cl
  412e23:	ror    DWORD PTR [eax+0x4c3ee037],cl
  412e29:	pop    eax
  412e2a:	es dec eax
  412e2c:	lea    eax,[eax-0x15]
  412e2f:	cld    
  412e30:	xchg   ecx,eax
  412e31:	jle    0x412df3
  412e33:	cld    
  412e34:	pop    ebx
  412e35:	js     0x412dc5
  412e37:	jp     0x412dbd
  412e39:	clc    
  412e3a:	out    0xa0,al
  412e3c:	mov    eax,ds:0x697d3a30
  412e41:	dec    eax
  412e42:	sbb    al,0x91
  412e44:	in     al,0x82
  412e46:	jnp    0x412dfa
  412e48:	in     eax,dx
  412e49:	ds xchg ecx,eax
  412e4b:	aad    0x12
  412e4d:	sbb    BYTE PTR [esi-0x7e],al
  412e50:	sub    BYTE PTR [esi-0x64],dh
  412e53:	out    dx,al
  412e54:	mov    esp,DWORD PTR [ecx+0x1659c826]
  412e5a:	dec    ecx
  412e5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e5c:	jae    0x412e6c
  412e5e:	push   edx
  412e5f:	outs   dx,BYTE PTR ds:[esi]
  412e60:	cmp    BYTE PTR [edx+0x76976493],0x1d
  412e67:	mov    ch,0x6d
  412e69:	or     DWORD PTR [esi+0x4c],edx
  412e6c:	(bad)  
  412e6e:	cmp    eax,0xa869b13c
  412e73:	test   al,0x12
  412e75:	out    dx,al
  412e76:	jmp    0xa70443e8
  412e7b:	inc    edx
  412e7c:	jbe    0x412eef
  412e7e:	lods   eax,DWORD PTR ds:[esi]
  412e7f:	push   ss
  412e80:	cmp    dh,BYTE PTR [ebx]
  412e82:	xlat   BYTE PTR ds:[ebx]
  412e83:	fcmovnbe st,st(5)
  412e85:	jae    0x412e08
  412e87:	pop    eax
  412e88:	push   cs
  412e89:	js     0x412ed0
  412e8b:	jmp    0x1518:0x20393072
  412e92:	jns    0x412e3c
  412e94:	scas   eax,DWORD PTR es:[edi]
  412e95:	or     eax,0x7cfe216b
  412e9a:	ret    0x8592
  412e9d:	add    ebp,DWORD PTR [ecx+edi*4]
  412ea0:	in     eax,dx
  412ea1:	push   ecx
  412ea2:	xchg   ebp,eax
  412ea3:	mov    WORD PTR [eax],cs
  412ea5:	stos   BYTE PTR es:[edi],al
  412ea6:	jae    0x412ee9
  412ea8:	in     al,0x85
  412eaa:	aas    
  412eab:	adc    dh,bl
  412ead:	out    0x93,eax
  412eaf:	jb     0x412ef2
  412eb1:	stos   BYTE PTR es:[edi],al
  412eb2:	xchg   BYTE PTR [ecx],dl
  412eb4:	ret    
  412eb5:	add    ah,dh
  412eb7:	mov    esp,DWORD PTR [esi-0x72]
  412eba:	int3   
  412ebb:	lods   eax,DWORD PTR ds:[esi]
  412ebc:	in     eax,0x3c
  412ebe:	in     al,dx
  412ebf:	ret    
  412ec0:	and    DWORD PTR [esi+0x642c7cb3],0x2a4467c3
  412eca:	adc    DWORD PTR [esi],edi
  412ecc:	mov    ds:0xac675532,eax
  412ed1:	mov    cl,0x93
  412ed3:	into   
  412ed4:	jecxz  0x412f2e
  412ed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ed7:	(bad)  
  412ed8:	jg     0x412e9b
  412eda:	retf   0x9842
  412edd:	in     al,0x98
  412edf:	inc    eax
  412ee0:	and    dl,BYTE PTR [edi+0x217e31fa]
  412ee6:	xchg   BYTE PTR [edi],ch
  412ee8:	icebp  
  412ee9:	mov    eax,0xcba194c1
  412eee:	push   ss
  412eef:	push   ds
  412ef0:	in     al,dx
  412ef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ef2:	and    al,0x16
  412ef4:	xchg   esp,eax
  412ef5:	sbb    ecx,esp
  412ef7:	pushf  
  412ef8:	jno    0x412ea9
  412efa:	outs   dx,DWORD PTR ds:[esi]
  412efb:	test   eax,0x18d0a59d
  412f00:	or     esp,esp
  412f02:	sar    bh,1
  412f04:	mov    esi,0xefec5daf
  412f09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f0a:	inc    ebx
  412f0b:	or     eax,0x93cede34
  412f10:	cwde   
  412f11:	dec    esp
  412f12:	xor    al,0xfc
  412f14:	xor    al,0x3a
  412f16:	fnstsw WORD PTR [edi-0x28]
  412f19:	pop    esp
  412f1a:	enter  0xdc04,0xec
  412f1e:	shl    esi,0x49
  412f21:	push   es
  412f22:	inc    esp
  412f23:	xchg   BYTE PTR [ebx],dh
  412f25:	ret    0xc6ac
  412f28:	inc    eax
  412f29:	push   ebx
  412f2a:	mov    ecx,DWORD PTR ds:0xc92c880d
  412f30:	push   0xa80fcbaf
  412f35:	fcom   DWORD PTR [edx+0xd3ce32e]
  412f3b:	leave  
  412f3c:	cmp    BYTE PTR [esi],0x22
  412f3f:	and    ch,BYTE PTR [eax+edi*1+0x0]
  412f43:	in     al,0xb2
  412f45:	dec    ecx
  412f46:	mov    ebp,DWORD PTR [ecx+0x7a]
  412f49:	or     eax,0x7db5d4f3
  412f4e:	call   0x3301:0x5d1afbdb
  412f55:	daa    
  412f56:	mov    edi,0x8e7439ea
  412f5b:	dec    esp
  412f5c:	test   al,0x43
  412f5e:	inc    esi
  412f5f:	mov    edi,DWORD PTR [edx-0x4b8da9b9]
  412f65:	fnsavew [ecx-0x73085af3]
  412f6c:	sbb    DWORD PTR [ecx+eiz*2+0x7a04697e],eax
  412f73:	add    BYTE PTR [edx+edx*2-0x1e4ac312],0x95
  412f7b:	xchg   edx,eax
  412f7c:	xor    DWORD PTR [ecx+ebx*4+0x484d08e9],ebx
  412f83:	call   0xdedb:0x13dec174
  412f8a:	popf   
  412f8b:	mov    bl,0x9b
  412f8d:	(bad)  
  412f8e:	cwde   
  412f8f:	(bad)  
  412f90:	sar    BYTE PTR [esp+edx*8-0xf],cl
  412f94:	das    
  412f95:	es jecxz 0x412f41
  412f98:	or     cl,ah
  412f9a:	out    0x63,eax
  412f9c:	(bad)
  412fa0:	push   ebp
  412fa1:	por    mm6,QWORD PTR [ecx-0x42]
  412fa5:	pop    ecx
  412fa6:	das    
  412fa7:	nop
  412fa8:	das    
  412fa9:	inc    esi
  412faa:	push   ebp
  412fab:	leave  
  412fac:	int3   
  412fad:	bswap  edx
  412faf:	retf   
  412fb0:	push   0xce14e030
  412fb5:	in     al,0x41
  412fb7:	add    esi,ebp
  412fb9:	aam    0xc9
  412fbb:	jnp    0x413001
  412fbd:	push   ecx
  412fbe:	das    
  412fbf:	jno    0x412f54
  412fc1:	pop    es
  412fc2:	stc    
  412fc3:	add    DWORD PTR ds:0x10454fda,ecx
  412fc9:	mov    edx,0x9557e386
  412fce:	adc    eax,0x4b7a2430
  412fd3:	or     eax,0x7a23e2af
  412fd8:	mov    ?,WORD PTR [ebx]
  412fda:	mov    ds:0x9824e7c7,eax
  412fdf:	retf   
  412fe0:	add    dh,cl
  412fe2:	pop    ebp
  412fe3:	push   ecx
  412fe4:	call   0xb5e5485d
  412fe9:	and    al,0x27
  412feb:	jmp    0x412fd9
  412fed:	and    DWORD PTR [ecx+0x6c],0x40
  412ff1:	dec    edx
  412ff2:	xchg   DWORD PTR [esi-0x221854],ebx
  412ff8:	pop    esi
  412ff9:	mov    ebx,0x6d5821fb
  412ffe:	jp     0x412fc5
  413000:	cs pop esp
  413002:	outs   dx,BYTE PTR ds:[esi]
  413003:	xor    bl,BYTE PTR [ecx+0x0]
  413006:	mov    eax,ds:0x65f75529
  41300b:	mov    ecx,0x97d0dd70
  413010:	scas   al,BYTE PTR es:[edi]
  413011:	mov    al,ds:0x8265bafe
  413016:	cmp    ecx,ebx
  413018:	cmp    ebx,ecx
  41301a:	(bad)  
  41301b:	daa    
  41301c:	xchg   ecx,eax
  41301d:	cmp    eax,0xc851a79
  413022:	push   edi
  413023:	jle    0x412fc9
  413025:	(bad)  
  413027:	cmp    al,0xad
  413029:	cmp    ecx,ebp
  41302b:	setb   BYTE PTR [esi+0x7f]
  41302f:	mov    ebx,0x2f96c16f
  413034:	mov    cl,0x7f
  413036:	ret    0xb5fe
  413039:	and    eax,0x33c05819
  41303e:	sbb    eax,0x3f7db8b3
  413043:	out    0xbe,eax
  413045:	dec    edx
  413046:	(bad)  [edi]
  413048:	xchg   esi,eax
  413049:	jnp    0x413080
  41304b:	xchg   ebx,eax
  41304c:	jl     0x413030
  41304e:	pop    ebx
  41304f:	adc    DWORD PTR [edx],0x19c5a208
  413055:	push   edi
  413056:	(bad)  [edi-0x31657ecf]
  41305c:	xor    eax,0x68ec28b7
  413061:	cwde   
  413062:	cmc    
  413063:	inc    ebx
  413064:	xor    dh,BYTE PTR [ecx-0x7]
  413067:	out    0x93,al
  413069:	test   al,0x7d
  41306b:	mov    bh,0x2b
  41306d:	inc    edx
  41306e:	call   FWORD PTR [ecx]
  413070:	push   es
  413071:	out    0x18,eax
  413073:	pop    ss
  413074:	std    
  413075:	or     al,0x22
  413077:	imul   esi,ebp,0x47521003
  41307d:	dec    edx
  41307e:	mov    ch,0x3d
  413080:	dec    BYTE PTR ds:0xd87c1414
  413086:	mov    BYTE PTR [ecx-0x6d],dh
  413089:	cli    
  41308a:	push   0xffffffea
  41308c:	leave  
  41308d:	shl    DWORD PTR [eax*8-0x306c0b9a],cl
  413094:	jmp    0x2e56:0xcd215b5e
  41309b:	in     al,dx
  41309c:	cld    
  41309d:	das    
  41309e:	push   es
  41309f:	sar    DWORD PTR [edi],cl
  4130a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130a2:	mov    esp,0x68a68bca
  4130a7:	xchg   esi,eax
  4130a8:	cmp    eax,0x33aac0c0
  4130ad:	outs   dx,DWORD PTR ds:[esi]
  4130ae:	clc    
  4130af:	or     eax,0x15ca4820
  4130b4:	data16 dec BYTE PTR [edi-0x3ddacca7]
  4130bb:	into   
  4130bc:	fld    QWORD PTR [eax-0x628cde1b]
  4130c2:	lods   eax,DWORD PTR ds:[esi]
  4130c3:	rol    edi,1
  4130c5:	ficom  DWORD PTR [edi+eiz*4]
  4130c8:	jbe    0x41306b
  4130ca:	je     0x4130c5
  4130cc:	mov    ah,BYTE PTR ds:0xf264eb6f
  4130d2:	ret    
  4130d3:	jmp    0x3717f6ee
  4130d8:	adc    edi,DWORD PTR [ebx]
  4130da:	dec    ecx
  4130db:	fwait
  4130dc:	int3   
  4130dd:	out    dx,al
  4130de:	fwait
  4130df:	mov    fs,WORD PTR [eax]
  4130e1:	call   0x48a9b1ab
  4130e6:	sub    cl,bl
  4130e8:	outs   dx,BYTE PTR ds:[esi]
  4130e9:	mov    ebp,0x3c764900
  4130ee:	dec    edi
  4130ef:	xlat   BYTE PTR ds:[ebx]
  4130f0:	inc    BYTE PTR [esi+0x32e62065]
  4130f6:	das    
  4130f7:	dec    edi
  4130f8:	mov    esi,0xa2c593e8
  4130fd:	ret    
  4130fe:	stc    
  4130ff:	cli    
  413100:	jl     0x41309b
  413102:	retf   0xea81
  413105:	mov    ds:0x4f3a078e,al
  41310a:	sbb    cl,BYTE PTR [ecx]
  41310c:	push   es
  41310d:	inc    esi
  41310e:	or     eax,0xa5bdcc0a
  413113:	or     al,0x66
  413115:	gs inc esi
  413117:	outs   dx,BYTE PTR ds:[esi]
  413118:	sub    bh,bl
  41311a:	jno    0x41317c
  41311c:	mov    ds:0xd0814605,eax
  413121:	shl    DWORD PTR [ebp-0x1ea19669],cl
  413127:	pushf  
  413128:	les    esi,FWORD PTR [edi+0x68]
  41312b:	inc    ebx
  41312c:	aad    0xf3
  41312e:	mov    ebx,0x3ee3a9a6
  413133:	out    dx,al
  413134:	(bad)  
  413135:	pop    esp
  413136:	out    dx,al
  413137:	data16 mov dh,0x3a
  41313a:	and    edi,DWORD PTR [ecx-0x188be438]
  413140:	lods   al,BYTE PTR ds:[esi]
  413141:	mov    bl,0xef
  413143:	das    
  413144:	ja     0x41313b
  413146:	dec    eax
  413147:	fiadd  WORD PTR ds:[ebp-0x44cb47d5]
  41314e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41314f:	push   edi
  413150:	sub    dl,BYTE PTR [ebx-0x7d]
  413153:	and    DWORD PTR [edi],edi
  413155:	sbb    al,0x16
  413157:	sbb    dl,cl
  413159:	rol    BYTE PTR [ecx],1
  41315b:	mov    ebp,0x823cec32
  413160:	or     BYTE PTR [ecx-0x51],bh
  413163:	dec    esi
  413164:	sub    edx,DWORD PTR [eax]
  413166:	(bad)  
  413167:	ss sub al,0x85
  41316a:	jg     0x41314f
  41316c:	or     eax,0x23805ed5
  413171:	pusha  
  413172:	ror    DWORD PTR ds:0x28d908d9,1
  413178:	inc    edi
  413179:	inc    edi
  41317a:	jbe    0x4130fd
  41317c:	aam    0xe6
  41317e:	clc    
  41317f:	das    
  413180:	push   edi
  413181:	cmp    edx,ebp
  413183:	jne    0x41314d
  413185:	retf   0x528e
  413188:	(bad)  
  41318a:	scas   al,BYTE PTR es:[edi]
  41318b:	(bad)  
  41318c:	fst    DWORD PTR [ecx]
  41318e:	jge    0x4131f4
  413190:	adc    ebx,0xfffffff2
  413193:	hlt    
  413194:	xor    al,0x45
  413196:	inc    edx
  413197:	cmp    dl,BYTE PTR [ecx+0x14]
  41319a:	test   BYTE PTR [esi-0x4bc839e1],0xc9
  4131a1:	sahf   
  4131a2:	or     cl,BYTE PTR [edx-0x5629ca3a]
  4131a8:	addr16 dec ecx
  4131aa:	add    ebx,DWORD PTR [edx]
  4131ac:	mov    al,ds:0xe7890b88
  4131b1:	outs   dx,BYTE PTR ds:[esi]
  4131b2:	lods   al,BYTE PTR ds:[esi]
  4131b3:	test   BYTE PTR [eax-0x54],ch
  4131b6:	sub    dh,BYTE PTR [edi-0x2a]
  4131b9:	pop    es
  4131ba:	int3   
  4131bb:	dec    esp
  4131bc:	mov    eax,ds:0xcac45363
  4131c1:	cmp    esi,esp
  4131c3:	stos   BYTE PTR es:[edi],al
  4131c4:	sbb    BYTE PTR [edx+ebx*1-0x64a2e33f],dh
  4131cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131cc:	rcl    BYTE PTR [edi],1
  4131ce:	lods   eax,DWORD PTR ds:[esi]
  4131cf:	jo     0x4131df
  4131d1:	fcmovu st,st(2)
  4131d3:	in     eax,0xe2
  4131d5:	es cmp dl,bh
  4131d8:	push   ecx
  4131d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131da:	xchg   edi,eax
  4131db:	nop
  4131dc:	cmp    DWORD PTR [ecx],eax
  4131de:	mov    esp,0x174e189
  4131e3:	jne    0x413182
  4131e5:	push   esi
  4131e6:	popf   
  4131e7:	out    dx,al
  4131e8:	mov    cl,0x34
  4131ea:	fcomp  DWORD PTR [edi+0x7b]
  4131ed:	pusha  
  4131ee:	aaa    
  4131ef:	dec    eax
  4131f0:	jo     0x4131cd
  4131f2:	scas   eax,DWORD PTR es:[edi]
  4131f3:	fnstsw WORD PTR [edi]
  4131f5:	lds    ecx,FWORD PTR [edx+eiz*1]
  4131f8:	std    
  4131f9:	add    ebp,DWORD PTR ds:0x3f28f25a
  4131ff:	and    eax,0xc5eee291
  413204:	stos   BYTE PTR es:[edi],al
  413205:	stc    
  413206:	jecxz  0x413278
  413208:	sub    al,0x7a
  41320a:	or     ch,BYTE PTR [edx-0x4b]
  41320d:	fsubrp st(0),st
  41320f:	sub    al,0xc6
  413211:	rcr    ebx,cl
  413213:	cld    
  413214:	push   es
  413215:	xchg   esp,eax
  413216:	test   BYTE PTR [eax+0x42],dh
  413219:	inc    ecx
  41321a:	add    eax,0xc3c18ef8
  41321f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413220:	addr16 (bad) 
  413222:	mov    edx,0xd3ba8d2e
  413227:	xor    edi,DWORD PTR [eax+0x58]
  41322a:	adc    bl,cl
  41322c:	ja     0x413215
  41322e:	push   ds
  41322f:	inc    esi
  413230:	mov    cl,0x96
  413232:	inc    edi
  413233:	ret    
  413234:	ins    DWORD PTR es:[edi],dx
  413235:	sbb    edx,DWORD PTR [esi+0x159e8555]
  41323b:	aaa    
  41323c:	into   
  41323d:	fidivr DWORD PTR [edi+0x18]
  413240:	mov    ?,WORD PTR [eax+edi*4-0x80]
  413244:	adc    DWORD PTR [ecx],esp
  413246:	aam    0xe8
  413248:	in     eax,0xc7
  41324a:	fsubr  st(7),st
  41324c:	jo     0x413202
  41324e:	in     eax,0x16
  413250:	dec    esi
  413251:	mov    ebp,0x2156706
  413256:	dec    esp
  413257:	mov    BYTE PTR [ecx],al
  413259:	sbb    al,0x90
  41325b:	inc    esp
  41325c:	sbb    DWORD PTR [esi+0x6e4135bf],esp
  413262:	int    0x97
  413264:	out    0x87,al
  413266:	(bad)  
  413267:	mov    ecx,0x51d068bb
  41326c:	or     dh,dl
  41326e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41326f:	dec    edi
  413270:	xchg   ecx,eax
  413271:	call   0xa054:0xab55cf6e
  413278:	cdq    
  413279:	xor    DWORD PTR [ebx+0xa],edx
  41327c:	rol    esp,cl
  41327e:	jne    0x4132ba
  413280:	pop    eax
  413281:	or     al,0xfe
  413284:	bound  eax,QWORD PTR [esi-0x60]
  413287:	jno    0x413257
  413289:	(bad)  
  41328a:	add    cl,BYTE PTR [ebp-0x3b]
  41328d:	aas    
  41328e:	sti    
  41328f:	mov    ebx,0x7ffc047e
  413294:	(bad)  
  413296:	adc    edi,DWORD PTR [ecx+ebp*1+0x5890e1ab]
  41329d:	jbe    0x413316
  41329f:	cld    
  4132a0:	imul   edi,DWORD PTR [esi+esi*1],0xa85b1774
  4132a7:	push   esp
  4132a8:	mov    eax,esi
  4132aa:	and    edi,DWORD PTR [ecx+eiz*2+0x24f0c2ca]
  4132b1:	push   0x9
  4132b3:	(bad)  
  4132b4:	std    
  4132b5:	xlat   BYTE PTR ds:[ebx]
  4132b6:	popf   
  4132b7:	xor    BYTE PTR [esi+edx*1],ch
  4132ba:	aaa    
  4132bb:	mov    al,ds:0x89f09d1d
  4132c0:	inc    esi
  4132c1:	push   cs
  4132c2:	imul   edx,DWORD PTR [ebp-0x38],0xffffffce
  4132c6:	retf   
  4132c7:	pop    edx
  4132c8:	xor    DWORD PTR [eax],0xffffff8b
  4132cb:	cmc    
  4132cc:	push   cs
  4132cd:	call   0x67ffedf7
  4132d2:	pop    ebp
  4132d3:	fcom   DWORD PTR [ebp+0x11e25f4a]
  4132d9:	shr    DWORD PTR [edi-0x3d],1
  4132dc:	mov    esi,0xa6cda67e
  4132e1:	inc    ebx
  4132e2:	ds push ss
  4132e4:	fadd   st(3),st
  4132e6:	test   eax,0x792a6c34
  4132eb:	arpl   WORD PTR [edx],si
  4132ed:	sti    
  4132ee:	int3   
  4132ef:	call   0xbc51b38e
  4132f4:	push   esp
  4132f5:	and    bl,BYTE PTR [edi-0x2b]
  4132f8:	push   0x804c07e8
  4132fd:	add    eax,0x16edcab8
  413302:	cmp    ecx,DWORD PTR [edi+ebx*8]
  413305:	paddusb mm1,QWORD PTR [ecx+0x5a]
  413309:	mov    ah,0x17
  41330b:	fiadd  DWORD PTR [ebx+0x61]
  41330e:	(bad)
  413311:	(bad)  
  413312:	ins    BYTE PTR es:[edi],dx
  413313:	fild   QWORD PTR [edx]
  413315:	int3   
  413316:	mov    al,ds:0xd8a8f593
  41331b:	ret    0xbedb
  41331e:	mov    bh,0xa
  413320:	fdivr  st(1),st
  413322:	mov    DWORD PTR [edi],edi
  413324:	sub    BYTE PTR [ebx],al
  413326:	pop    edx
  413327:	xchg   esp,edi
  413329:	iret   
  41332a:	loopne 0x413319
  41332c:	mov    cl,0x30
  41332e:	sub    edi,DWORD PTR [ebx+0x71306653]
  413334:	test   BYTE PTR ds:0xd43e1a05,0xfd
  41333b:	(bad)  
  41333c:	pop    esp
  41333d:	add    esi,esi
  41333f:	ja     0x413349
  413341:	jle    0x4132fd
  413343:	daa    
  413344:	ss push 0xa9c440df
  41334a:	popf   
  41334b:	les    ebx,FWORD PTR [eax-0x6b9d9c]
  413351:	scas   al,BYTE PTR es:[edi]
  413352:	test   al,0xb2
  413354:	add    eax,0x55c28c44
  413359:	ret    0x48ed
  41335c:	cli    
  41335d:	fs iret 
  41335f:	int    0xdd
  413361:	xchg   DWORD PTR [eax],eax
  413363:	cld    
  413364:	adc    BYTE PTR [ecx],0x5a
  413367:	in     eax,dx
  413368:	bound  eax,QWORD PTR ss:[edi]
  41336b:	adc    ch,BYTE PTR [esp+eax*1-0x64ae3ae5]
  413372:	mov    ah,0x99
  413374:	retf   
  413375:	cwde   
  413376:	or     BYTE PTR [esi+ecx*1+0x3116c6b1],dh
  41337d:	inc    ebp
  41337e:	retf   0x6ffe
  413381:	sub    BYTE PTR [eax-0x1f11e4d4],dl
  413387:	clc    
  413388:	fucomi st,st(5)
  41338a:	push   ds
  41338b:	mov    WORD PTR [eax],es
  41338d:	in     al,0x1d
  41338f:	inc    eax
  413390:	aas    
  413391:	mov    DWORD PTR [edi],ebp
  413393:	cli    
  413394:	stc    
  413395:	std    
  413396:	and    DWORD PTR [edx+0x692e0899],ebp
  41339c:	(bad)  
  41339e:	aas    
  41339f:	pushf  
  4133a0:	shl    BYTE PTR [eax+ecx*2-0x1b4e25c4],cl
  4133a7:	mov    es,WORD PTR [edi-0x76]
  4133aa:	adc    al,0xd6
  4133ac:	repz and al,0x5d
  4133af:	loope  0x413398
  4133b1:	scas   eax,DWORD PTR es:[edi]
  4133b2:	inc    ecx
  4133b3:	enter  0xb6e6,0x99
  4133b7:	daa    
  4133b8:	push   ebp
  4133b9:	aas    
  4133ba:	loop   0x4133e0
  4133bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133bd:	lods   al,BYTE PTR ds:[esi]
  4133be:	mov    ebx,0x27bda4fa
  4133c3:	lea    edi,[edi]
  4133c5:	xchg   esp,eax
  4133c6:	loopne 0x4133e8
  4133c8:	dec    esp
  4133c9:	in     al,dx
  4133ca:	mov    ds:0x8419d0d1,al
  4133cf:	in     eax,0x82
  4133d1:	stos   BYTE PTR es:[edi],al
  4133d2:	adc    ecx,eax
  4133d4:	mov    edi,0xd5aaf1b4
  4133d9:	sub    al,BYTE PTR [ebp-0x5cfc244b]
  4133df:	mov    edi,gs
  4133e1:	push   ecx
  4133e2:	dec    ebx
  4133e3:	data16 mov ah,al
  4133e6:	mov    bl,0xa0
  4133e8:	mov    ds:0xfa975a1c,al
  4133ed:	mov    eax,ds:0x2a7db465
  4133f2:	in     eax,dx
  4133f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133f4:	leave  
  4133f5:	cmp    al,0x73
  4133f7:	pop    edx
  4133f8:	lods   al,BYTE PTR ds:[esi]
  4133f9:	int    0x99
  4133fb:	push   edx
  4133fc:	cmp    DWORD PTR [esi-0x66],ebx
  4133ff:	call   0x8768e43b
  413404:	clc    
  413405:	sbb    cl,BYTE PTR [edi-0x6a]
  413408:	aam    0x95
  41340a:	jle    0x413425
  41340c:	lods   eax,DWORD PTR ds:[esi]
  41340d:	clc    
  41340e:	push   ecx
  41340f:	int3   
  413410:	loopne 0x413475
  413412:	xchg   edi,eax
  413413:	pop    edi
  413414:	(bad)  
  413415:	imul   BYTE PTR [edi]
  413417:	(bad)  
  413418:	test   edi,edi
  41341a:	xor    DWORD PTR [eax],edx
  41341c:	out    0x43,al
  41341e:	(bad)  
  41341f:	fld    st(1)
  413421:	leave  
  413422:	and    ecx,esi
  413424:	dec    edx
  413425:	outs   dx,BYTE PTR ds:[esi]
  413426:	cwde   
  413427:	sub    ebx,DWORD PTR [edi-0x70]
  41342a:	fst    DWORD PTR [esi-0x6343bbc9]
  413430:	jb     0x413459
  413432:	dec    esp
  413433:	rcl    BYTE PTR [eax],1
  413435:	loope  0x413455
  413437:	pop    ss
  413438:	inc    edi
  413439:	lods   eax,DWORD PTR ds:[esi]
  41343a:	cmp    DWORD PTR [eax+0xca85894],ebp
  413440:	call   0xe36a:0x103800af
  413447:	dec    edi
  413448:	lods   eax,DWORD PTR ds:[esi]
  413449:	lods   eax,DWORD PTR ds:[esi]
  41344a:	int3   
  41344b:	cmp    ebp,DWORD PTR [ecx]
  41344d:	cli    
  41344e:	repnz cmp al,0x5d
  413451:	sbb    esi,edi
  413453:	cmc    
  413454:	xchg   edx,eax
  413455:	lahf   
  413456:	outs   dx,BYTE PTR ds:[esi]
  413457:	js     0x413468
  413459:	pop    ecx
  41345a:	or     eax,0x69f2fc48
  41345f:	xchg   BYTE PTR [eax-0x35],cl
  413462:	ret    
  413463:	inc    esp
  413464:	test   BYTE PTR [edx+0x2a],ah
  413467:	shl    dl,0x77
  41346a:	nop
  41346b:	es push ebp
  41346d:	sbb    ch,dl
  41346f:	imul   esi,eax,0x72
  413472:	adc    ah,BYTE PTR [eax-0x42a6acf0]
  413478:	or     BYTE PTR [edi-0x4f],0xb7
  41347c:	jg     0x4134e9
  41347e:	mov    WORD PTR [eax],gs
  413480:	inc    ebp
  413481:	les    esp,FWORD PTR [esi]
  413483:	sahf   
  413484:	sub    eax,DWORD PTR [ebp+0x1c523fa2]
  41348a:	fwait
  41348b:	loopne 0x4134e0
  41348d:	xchg   eax,eax
  41348f:	dec    BYTE PTR [eax+eiz*4-0x7f]
  413493:	loop   0x41341d
  413495:	mov    ebp,0x8a87ad38
  41349a:	jae    0x413519
  41349c:	mov    gs,edx
  41349e:	or     BYTE PTR [edi+0x50],bl
  4134a1:	pop    ds
  4134a2:	mov    ch,0x19
  4134a4:	(bad)  
  4134a5:	fisub  DWORD PTR [ebx-0x7f]
  4134a8:	stos   BYTE PTR es:[edi],al
  4134a9:	and    ch,BYTE PTR [ebp+0x28]
  4134ac:	mov    DWORD PTR [eax+0x7e9c97b0],eax
  4134b2:	stos   DWORD PTR es:[edi],eax
  4134b3:	stos   BYTE PTR es:[edi],al
  4134b4:	jmp    0x395f:0x603edfec
  4134bb:	push   0x30e52906
  4134c0:	xor    al,0x27
  4134c2:	cmp    al,0x82
  4134c4:	lds    edx,FWORD PTR [ebx]
  4134c6:	mov    WORD PTR [edx-0x39],?
  4134c9:	clc    
  4134ca:	mov    ebx,0xf7c94274
  4134cf:	pop    esi
  4134d0:	pop    esp
  4134d1:	pushf  
  4134d2:	sub    DWORD PTR [eax-0x50],eax
  4134d5:	add    esi,DWORD PTR [esi+0x35c326bf]
  4134db:	arpl   dx,bp
  4134dd:	jnp    0x4134f8
  4134df:	cmp    dh,al
  4134e1:	cs xchg esi,eax
  4134e3:	cli    
  4134e4:	and    al,0x8f
  4134e6:	aaa    
  4134e7:	mov    ebp,0xa82fcaee
  4134ec:	cmp    edi,DWORD PTR [ecx+0x61739a05]
  4134f2:	pushw  ss
  4134f4:	fisub  WORD PTR [edx]
  4134f6:	sbb    al,0x51
  4134f8:	push   edx
  4134f9:	dec    esp
  4134fa:	(bad)  
  4134fc:	std    
  4134fd:	or     BYTE PTR [ebx-0x4774e45b],bl
  413503:	cmc    
  413504:	jecxz  0x4134fc
  413506:	cld    
  413507:	into   
  413508:	inc    ebp
  413509:	or     BYTE PTR [ebp-0x2aff3590],ah
  41350f:	daa    
  413510:	ror    BYTE PTR [ecx+0x34fa7557],cl
  413516:	push   cs
  413517:	in     al,dx
  413518:	jg     0x413515
  41351a:	sub    al,0x7
  41351c:	stos   BYTE PTR es:[edi],al
  41351d:	mov    esp,DWORD PTR [edx-0xa]
  413520:	hlt    
  413521:	sbb    dl,BYTE PTR [eax+0x10]
  413524:	pop    eax
  413525:	pusha  
  413526:	sahf   
  413527:	add    BYTE PTR [ebp-0x6c],bh
  41352a:	das    
  41352b:	ja     0x41359c
  41352d:	popa   
  41352e:	out    0x0,eax
  413530:	out    0xcb,al
  413532:	mov    esp,0xac1b407b
  413537:	add    bl,ch
  413539:	clc    
  41353a:	sbb    eax,0x6eb5dc0a
  41353f:	mov    esp,0x50eeef1f
  413544:	out    dx,al
  413545:	xchg   esp,eax
  413546:	jmp    0x413509
  413548:	pusha  
  413549:	mov    ds:0x520cd13c,eax
  41354e:	aad    0xb6
  413550:	sbb    ah,BYTE PTR [edx]
  413552:	dec    eax
  413553:	cmp    al,ah
  413555:	jb     0x41353a
  413557:	push   ebx
  413558:	fld    TBYTE PTR [eax]
  41355a:	xchg   BYTE PTR [ecx-0x24],dl
  41355d:	out    dx,al
  41355e:	mov    BYTE PTR [esi],cl
  413560:	test   eax,0xdd503847
  413565:	sub    BYTE PTR [edx],dl
  413567:	cdq    
  413568:	ja     0x413545
  41356a:	lods   eax,DWORD PTR ds:[esi]
  41356b:	dec    edi
  41356c:	jp     0x413553
  41356e:	sbb    DWORD PTR [esi+0x16],esp
  413571:	test   eax,0x90683aff
  413576:	repz (bad) 
  413579:	jmp    0x34adb6ad
  41357e:	(bad)  
  41357f:	js     0x413550
  413581:	xchg   DWORD PTR [ecx-0x31a098a6],esi
  413587:	in     al,dx
  413588:	mov    ecx,0x1d6fe903
  41358d:	push   cs
  41358e:	outs   dx,BYTE PTR ds:[esi]
  41358f:	xchg   ebx,eax
  413590:	or     dh,BYTE PTR [ebx-0x40]
  413593:	(bad)  
  413594:	jecxz  0x413575
  413596:	cmp    al,0x5c
  413598:	out    0x1f,al
  41359a:	cmp    al,0xc7
  41359c:	aas    
  41359d:	cmc    
  41359e:	lahf   
  41359f:	jp     0x413536
  4135a1:	cli    
  4135a2:	sahf   
  4135a3:	cmp    bh,bl
  4135a5:	dec    edx
  4135a6:	sbb    al,0x3a
  4135a8:	mov    dh,0x6b
  4135aa:	ins    BYTE PTR es:[edi],dx
  4135ab:	outs   dx,DWORD PTR ds:[esi]
  4135ac:	jp     0x413564
  4135ae:	xlat   BYTE PTR ds:[ebx]
  4135af:	stc    
  4135b0:	ret    0x538
  4135b3:	mov    ds:0x7c8c6a7d,eax
  4135b8:	jmp    0x29fd:0x8cee407a
  4135bf:	stos   DWORD PTR es:[edi],eax
  4135c0:	cvtps2pd xmm1,QWORD PTR [eax]
  4135c3:	daa    
  4135c4:	xchg   DWORD PTR [eax],edx
  4135c6:	mov    ds:0xeabfc688,al
  4135cb:	xor    eax,0x2b47e2b7
  4135d0:	push   ebp
  4135d1:	daa    
  4135d2:	sbb    al,0x88
  4135d4:	test   BYTE PTR [edi+0x49acbc8a],bh
  4135da:	sbb    BYTE PTR [edi],bl
  4135dc:	(bad)  
  4135dd:	xchg   edx,eax
  4135de:	jecxz  0x41358c
  4135e0:	hlt    
  4135e1:	and    al,0x97
  4135e3:	push   es
  4135e4:	xor    eax,0xd157b5
  4135e9:	cmp    al,0x15
  4135eb:	add    eax,0x68010c53
  4135f0:	aad    0xff
  4135f2:	adc    eax,0xeb6e0036
  4135f7:	mov    ds:0x43e6a565,eax
  4135fc:	jne    0x413585
  4135fe:	mov    bl,0xcc
  413600:	iret   
  413601:	jmp    0x806377c7
  413606:	leave  
  413607:	sub    BYTE PTR ds:0x6222b042,0x4
  41360e:	gs rsm 
  413611:	pop    ebx
  413612:	sub    eax,0x412e723a
  413617:	ja     0x413651
  413619:	rcl    BYTE PTR gs:[esi-0x5d64fc67],1
  413620:	clc    
  413621:	jp     0x413633
  413623:	xor    DWORD PTR [eax+0x6d1444f2],edx
  413629:	ja     0x4135d2
  41362b:	fldcw  WORD PTR [ecx+ebp*2-0x3fe1460]
  413632:	push   ebx
  413633:	lods   eax,DWORD PTR ds:[esi]
  413634:	jle    0x41364b
  413636:	test   DWORD PTR [eax-0x53d70ae1],edi
  41363c:	push   es
  41363d:	es ss dec eax
  413640:	pop    ss
  413641:	and    bl,cl
  413643:	(bad)
  413646:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413647:	push   ss
  413648:	iret   
  413649:	outs   dx,DWORD PTR ds:[esi]
  41364a:	in     al,0x40
  41364c:	pop    ecx
  41364d:	dec    esp
  41364e:	inc    esi
  41364f:	pop    eax
  413650:	ds (bad) 
  413652:	scas   eax,DWORD PTR es:[edi]
  413653:	jmp    0x4136d3
  413655:	stos   DWORD PTR es:[edi],eax
  413656:	stos   DWORD PTR es:[edi],eax
  413657:	mov    dh,0xb2
  413659:	out    dx,eax
  41365a:	pop    ecx
  41365b:	imul   ecx,ebx,0xec45ebb3
  413661:	seta   ch
  413664:	inc    DWORD PTR [edx]
  413666:	daa    
  413667:	jmp    0xb60e:0xd9c51833
  41366e:	mov    bl,0x76
  413670:	xor    bl,BYTE PTR [ecx-0x4cab986]
  413676:	gs adc al,0x60
  413679:	add    eax,0xbebe264f
  41367e:	fs sbb bl,cl
  413681:	dec    ebp
  413682:	dec    esi
  413683:	and    eax,0x91f5dcfb
  413688:	sbb    BYTE PTR [esi],bh
  41368a:	xchg   edi,eax
  41368b:	push   eax
  41368c:	ficom  DWORD PTR [ebx+0x46771db6]
  413692:	push   esi
  413693:	in     al,dx
  413694:	leave  
  413695:	sbb    ebx,DWORD PTR [edx]
  413697:	push   cs
  413698:	sub    BYTE PTR ds:0x4d787732,bh
  41369e:	ins    DWORD PTR es:[edi],dx
  41369f:	jmp    0x88a233d0
  4136a4:	arpl   WORD PTR [edx-0x64],di
  4136a7:	(bad)  
  4136a8:	(bad)  
  4136a9:	icebp  
  4136aa:	dec    eax
  4136ab:	popa   
  4136ac:	out    dx,eax
  4136ad:	loopne 0x4136d2
  4136af:	jmp    0x41371c
  4136b1:	retf   0x15f8
  4136b4:	cmp    BYTE PTR [edx+esi*4],cl
  4136b7:	push   cs
  4136b8:	fsubr  QWORD PTR [ebp+0xe5c1b0f]
  4136be:	test   eax,0xfd9b3187
  4136c3:	int3   
  4136c4:	and    DWORD PTR [ecx],edi
  4136c6:	lods   eax,DWORD PTR ds:[esi]
  4136c7:	dec    ecx
  4136c8:	add    BYTE PTR [eax*1+0xc7a4df],dh
  4136cf:	sub    eax,0xf8179602
  4136d4:	xor    ecx,DWORD PTR [edx+edx*4-0x69]
  4136d8:	xchg   edi,eax
  4136d9:	enter  0x88bd,0x17
  4136dd:	sbb    DWORD PTR [edx-0x3f],ecx
  4136e0:	out    dx,eax
  4136e1:	push   cs
  4136e2:	and    al,BYTE PTR [eax+0xbf37365]
  4136e8:	jl     0x4136a7
  4136ea:	xor    bl,BYTE PTR [eax+0x1e99efe0]
  4136f0:	xchg   esp,eax
  4136f1:	pop    esp
  4136f2:	(bad)  
  4136f3:	dec    edx
  4136f4:	fst    st(1)
  4136f6:	and    al,0xf4
  4136f8:	stos   BYTE PTR es:[edi],al
  4136f9:	lahf   
  4136fa:	lea    ecx,[ebx]
  4136fc:	call   0x3b26:0xd6e6d1d6
  413703:	pop    ds
  413704:	test   BYTE PTR [ebx+0x20],al
  413707:	add    ebx,ecx
  413709:	repnz out dx,al
  41370b:	jno    0x41368f
  41370d:	lods   al,BYTE PTR ds:[esi]
  41370e:	mov    WORD PTR [ecx+0x4be20d78],?
  413714:	mov    ah,0xaf
  413716:	test   DWORD PTR [ebx+0x64],edx
  413719:	(bad)  
  41371b:	cmp    DWORD PTR [ecx],0x66
  41371e:	sbb    eax,0x6447f5f
  413723:	loop   0x4136dd
  413725:	fwait
  413726:	pop    edi
  413727:	fst    DWORD PTR [edi]
  413729:	xchg   DWORD PTR [esi+0x11b1b08c],esi
  41372f:	xlat   BYTE PTR ds:[ebx]
  413730:	and    DWORD PTR [edx],edx
  413732:	mov    edi,0x2ff4fa01
  413737:	fbld   TBYTE PTR [ebx]
  413739:	and    DWORD PTR [edi-0x1c],esi
  41373c:	sub    DWORD PTR [ebx],ecx
  41373e:	sbb    al,0x35
  413740:	rep ins BYTE PTR es:[edi],dx
  413742:	sbb    al,0xa3
  413744:	std    
  413745:	push   esi
  413746:	push   0x4e
  413748:	cld    
  413749:	mov    es,esi
  41374b:	pop    esp
  41374c:	mov    eax,0xec5bf878
  413751:	inc    ebp
  413752:	shr    edi,1
  413754:	xor    ebx,edi
  413756:	bound  ecx,QWORD PTR [edx]
  413758:	adc    al,0xd1
  41375a:	push   edx
  41375b:	mov    eax,ds:0x48fb0c52
  413760:	inc    esi
  413761:	ins    BYTE PTR es:[edi],dx
  413762:	retf   
  413763:	push   eax
  413764:	out    dx,eax
  413765:	xchg   edx,eax
  413766:	adc    eax,0x76190bab
  41376b:	and    BYTE PTR [eax+0x62],dh
  41376e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41376f:	mov    ch,0x39
  413771:	push   0x2f86e231
  413776:	push   cs
  413777:	std    
  413778:	rcl    DWORD PTR [edi+0x37],cl
  41377b:	cmp    esp,DWORD PTR fs:[eax]
  41377e:	idiv   BYTE PTR [ebx-0x191f907b]
  413784:	jmp    0x82167f18
  413789:	jb     0x413731
  41378b:	sub    BYTE PTR [esi+0x67],bl
  41378e:	pop    esp
  41378f:	je     0x41372c
  413791:	jns    0x4137b7
  413793:	loop   0x413809
  413795:	inc    edx
  413796:	loopne 0x41380a
  413798:	fdivr  QWORD PTR [esi]
  41379a:	mov    ds:0x91b1fded,eax
  41379f:	mov    esi,0x456bc180
  4137a4:	push   ebx
  4137a5:	xor    bl,BYTE PTR [edx]
  4137a7:	xchg   ah,dh
  4137a9:	imul   ebx,DWORD PTR [edi+0x4382d39b],0x3a37d54c
  4137b3:	fs pop edx
  4137b5:	inc    edi
  4137b6:	jecxz  0x41379d
  4137b8:	mov    al,0x84
  4137ba:	inc    ebp
  4137bb:	xor    eax,0xda2855dc
  4137c0:	sub    al,0xd7
  4137c2:	cdq    
  4137c3:	pop    ebp
  4137c4:	mov    al,BYTE PTR [eax+0x6a36fac0]
  4137ca:	pop    edx
  4137cb:	add    al,0xef
  4137cd:	fmul   DWORD PTR [ecx]
  4137cf:	jmp    0x315949b9
  4137d4:	fld    TBYTE PTR [edi+esi*2]
  4137d7:	icebp  
  4137d8:	mov    ds:0x6c75f977,eax
  4137dd:	push   cs
  4137de:	cmp    al,0x85
  4137e0:	fisubr DWORD PTR [edi-0xd]
  4137e3:	jge    0x41378d
  4137e5:	or     bl,al
  4137e7:	pop    esi
  4137e8:	popa   
  4137e9:	pop    esp
  4137ea:	mov    edi,0x718d53a5
  4137ef:	jne    0x413799
  4137f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137f2:	dec    ebp
  4137f3:	or     bl,ch
  4137f5:	or     esi,DWORD PTR [ecx+0x63]
  4137f8:	ins    BYTE PTR es:[edi],dx
  4137f9:	leave  
  4137fa:	cmp    al,0x54
  4137fc:	xchg   BYTE PTR [ebx],cl
  4137fe:	ja     0x41380b
  413800:	(bad)  
  413801:	fimul  WORD PTR [eax]
  413803:	clc    
  413804:	pop    ecx
  413805:	mov    BYTE PTR [edi-0x11ed8b29],0xc3
  41380c:	mov    WORD PTR [esi+0x6c2c19ff],?
  413812:	mov    dl,0x49
  413814:	sub    DWORD PTR [eax],0xc109d15
  41381a:	loope  0x413867
  41381c:	cmp    edx,eax
  41381e:	inc    ebp
  41381f:	push   0x8e8183d7
  413824:	mov    edi,0xa0a6098d
  41382a:	mov    ds,WORD PTR [edx]
  41382c:	aad    0xcb
  41382e:	cli    
  41382f:	dec    ecx
  413830:	in     eax,0xa6
  413832:	inc    ebp
  413833:	sbb    eax,ecx
  413835:	nop
  413836:	and    eax,0x7a1ba0a1
  41383b:	and    al,0x3a
  41383d:	xor    dl,BYTE PTR [ebx+0x4c7d13d2]
  413843:	in     al,dx
  413844:	jle    0x4138b6
  413846:	inc    edi
  413847:	scas   eax,DWORD PTR es:[edi]
  413848:	into   
  413849:	xchg   DWORD PTR [ecx+0x44150eda],ebx
  41384f:	fistp  QWORD PTR [eax+0x55c48661]
  413855:	pop    esp
  413856:	jle    0x41386e
  413858:	jl     0x4138ab
  41385a:	scas   eax,DWORD PTR es:[edi]
  41385b:	cs and cl,al
  41385e:	repz mul DWORD PTR [esi-0x18ef34bd]
  413865:	fs pusha 
  413867:	pusha  
  413868:	loop   0x413810
  41386a:	mov    edi,0xe61b8b57
  41386f:	aad    0x68
  413871:	ss dec esi
  413873:	sub    ecx,esi
  413875:	lods   al,BYTE PTR ds:[esi]
  413876:	lods   al,BYTE PTR ds:[esi]
  413877:	jg     0x41388b
  413879:	loopne 0x413897
  41387b:	cmp    BYTE PTR [ebp+0x33],0xf2
  41387f:	adc    BYTE PTR [edi],0xc
  413882:	and    BYTE PTR [ebx],al
  413884:	sub    DWORD PTR [edi+0x613c2db3],edi
  41388a:	ja     0x41384b
  41388c:	clc    
  41388d:	push   esi
  41388e:	push   eax
  41388f:	call   0x6638:0xaf89d0f9
  413896:	ror    edx,cl
  413898:	inc    esi
  413899:	sbb    eax,0xfbf14ea1
  41389e:	push   esi
  41389f:	call   0x52b2b4fb
  4138a4:	lods   al,BYTE PTR ds:[esi]
  4138a5:	stos   BYTE PTR es:[edi],al
  4138a6:	int    0x75
  4138a8:	(bad)  
  4138a9:	dec    eax
  4138aa:	leave  
  4138ab:	mov    ch,0xb
  4138ad:	dec    edi
  4138ae:	push   0xffffff9f
  4138b0:	mov    ds:0x97abcfda,eax
  4138b5:	jne    0x41392a
  4138b7:	and    eax,0xb26105ba
  4138bc:	and    BYTE PTR [ebx],al
  4138be:	mov    ebx,0x34004662
  4138c3:	int    0xba
  4138c5:	jno    0x4138c3
  4138c7:	je     0x41390c
  4138c9:	(bad)  
  4138ca:	jle    0x413895
  4138cc:	jae    0x413883
  4138ce:	cmc    
  4138cf:	out    dx,al
  4138d0:	xchg   DWORD PTR [esi+0x6],eax
  4138d3:	mov    ecx,0xd3dc9cb9
  4138d8:	xchg   ebp,eax
  4138d9:	xor    esi,esi
  4138db:	jle    0x41394b
  4138dd:	fcomp  QWORD PTR [ebp-0x683f4412]
  4138e3:	stc    
  4138e4:	ret    0x1a46
  4138e7:	cmp    eax,0x1b8d0f2
  4138ec:	jmp    0x413901
  4138ee:	int3   
  4138ef:	popf   
  4138f0:	push   edx
  4138f1:	push   0x13c6ff2e
  4138f6:	cmp    al,BYTE PTR [esi+0x7]
  4138f9:	(bad)  
  4138fb:	jne    0x4138eb
  4138fd:	fmul   DWORD PTR [edi]
  4138ff:	aas    
  413900:	aas    
  413901:	dec    edx
  413902:	pop    ecx
  413903:	pop    ecx
  413904:	retf   
  413905:	daa    
  413906:	pusha  
  413907:	xor    BYTE PTR [ecx+0x197bc1c1],0x2b
  41390e:	ds inc ebp
  413910:	out    dx,eax
  413911:	loopne 0x413894
  413913:	stos   BYTE PTR es:[edi],al
  413914:	and    BYTE PTR [ebx-0x6bfe1731],0xad
  41391b:	xor    ch,BYTE PTR [esi+0x5b308778]
  413921:	sbb    ebx,DWORD PTR [ebx-0x1dc9a238]
  413927:	dec    ebp
  413928:	xor    eax,0x4a936acd
  41392d:	ror    dl,cl
  41392f:	or     eax,0x810dacad
  413935:	fisub  DWORD PTR [eax+0x4c400b02]
  41393b:	push   0xc0c76385
  413940:	adc    bl,ch
  413942:	dec    edi
  413943:	retf   
  413944:	mov    ah,0x68
  413946:	mov    eax,ds:0x6d04ae3
  41394b:	and    cl,bh
  41394d:	push   esp
  41394e:	adc    DWORD PTR [edi+0x6f67e5c3],esi
  413954:	sbb    eax,0x95c59f5
  413959:	std    
  41395a:	inc    edi
  41395b:	or     dh,BYTE PTR [eax+0xb]
  41395e:	cdq    
  41395f:	shr    bl,1
  413961:	push   esp
  413962:	cmp    eax,0x8828ea72
  413967:	dec    edi
  413968:	pop    edi
  413969:	inc    ebp
  41396a:	pop    esi
  41396b:	cmp    DWORD PTR [esi-0x5bac86c3],0x5c
  413972:	das    
  413973:	ror    BYTE PTR [edx+ebx*2+0x5a],cl
  413977:	mov    edi,0x2b581f22
  41397c:	inc    esp
  41397d:	pop    edx
  41397e:	repnz push cs
  413980:	cmp    eax,DWORD PTR [ebx+0x61a15db]
  413986:	div    DWORD PTR [edi-0x7d676ec7]
  41398c:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41398e:	pusha  
  41398f:	iret   
  413990:	out    0x1e,al
  413992:	ds ds mov ecx,0x87b0c0e5
  413999:	mov    bh,0x11
  41399b:	add    eax,0x128a0a85
  4139a0:	push   es
  4139a1:	ja     0x4139ef
  4139a3:	add    ah,dh
  4139a5:	add    BYTE PTR [ebx],dl
  4139a7:	fstp   TBYTE PTR [esi+0x21]
  4139aa:	xchg   esp,eax
  4139ab:	outs   dx,DWORD PTR ds:[esi]
  4139ac:	xor    BYTE PTR [ecx*1+0x2ffcaa25],bh
  4139b3:	mov    edi,0xf0a19890
  4139b8:	dec    esi
  4139b9:	ins    BYTE PTR es:[edi],dx
  4139ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139bb:	mov    esp,esp
  4139bd:	cwde   
  4139be:	adc    edx,DWORD PTR [ecx-0x60]
  4139c1:	rcr    DWORD PTR [ebx],0x55
  4139c4:	arpl   WORD PTR [ebp-0x43c739d4],di
  4139ca:	(bad)  
  4139cb:	add    ch,BYTE PTR [eax-0x21a34a16]
  4139d1:	xor    BYTE PTR [ecx-0x5d50d0ab],bl
  4139d7:	mov    fs,ebp
  4139d9:	dec    eax
  4139da:	pusha  
  4139db:	mov    dh,0x4a
  4139dd:	pop    eax
  4139de:	inc    ecx
  4139df:	icebp  
  4139e0:	sub    edx,esp
  4139e2:	vmovaps ymm0,YMMWORD PTR [eax+ebx*8-0x7e]
  4139e8:	xchg   ebx,eax
  4139e9:	or     BYTE PTR [ebx+0x20],bh
  4139ec:	sahf   
  4139ed:	ret    0x3886
  4139f0:	fcmovb st,st(7)
  4139f2:	lods   eax,DWORD PTR ds:[esi]
  4139f3:	sbb    esp,ecx
  4139f5:	out    dx,eax
  4139f6:	pop    edx
  4139f7:	in     al,0x4b
  4139f9:	dec    ebx
  4139fa:	and    edi,edi
  4139fc:	(bad)  
  4139fd:	jbe    0x413a21
  4139ff:	push   eax
  413a00:	test   bl,ah
  413a02:	cli    
  413a03:	jae    0x413990
  413a05:	cmp    eax,0x1d115e52
  413a0a:	ss sub al,0xf1
  413a0d:	ins    BYTE PTR es:[edi],dx
  413a0e:	add    DWORD PTR [ebx+0x62],0xffffff8e
  413a12:	pop    ecx
  413a13:	adc    ah,cl
  413a15:	mov    ebx,0x2de31e26
  413a1a:	pop    esi
  413a1b:	nop
  413a1c:	pop    eax
  413a1d:	mov    bh,0x35
  413a1f:	daa    
  413a20:	aas    
  413a21:	pusha  
  413a22:	pop    ds
  413a23:	jo     0x413a46
  413a25:	outs   dx,BYTE PTR ds:[esi]
  413a26:	mov    ebp,0x5df3e607
  413a2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a2d:	sbb    ah,BYTE PTR [edi-0x5]
  413a30:	rcl    BYTE PTR [ebp-0x74],cl
  413a33:	xchg   BYTE PTR [ecx],ah
  413a35:	jae    0x413a7c
  413a37:	mov    al,0x5b
  413a39:	push   esi
  413a3a:	adc    al,0xc6
  413a3c:	rol    bh,cl
  413a3e:	out    dx,al
  413a3f:	into   
  413a40:	mov    esp,DWORD PTR [ebx+0x6c866a8b]
  413a46:	push   0x76
  413a48:	mov    ss,WORD PTR ds:0xccad1bf5
  413a4e:	cld    
  413a4f:	(bad)  
  413a50:	adc    edx,DWORD PTR [ecx]
  413a52:	xlat   BYTE PTR ds:[ebx]
  413a53:	push   esi
  413a54:	pop    es
  413a55:	inc    ebp
  413a56:	or     al,0x2d
  413a58:	xchg   ecx,eax
  413a59:	lea    ebp,[edx]
  413a5b:	repz fld DWORD PTR ds:0x29f83329
  413a62:	push   edx
  413a63:	nop
  413a64:	mov    edi,0x5f06ba4d
  413a69:	mov    bh,0x26
  413a6b:	jecxz  0x413ab6
  413a6d:	loopne 0x413a7f
  413a6f:	push   ecx
  413a70:	(bad)  
  413a73:	sbb    DWORD PTR [edx],esp
  413a75:	addr16 fwait
  413a77:	or     ebp,DWORD PTR [eax+eax*1]
  413a7a:	push   ds
  413a7b:	xchg   BYTE PTR [esi+0x466def30],ch
  413a81:	arpl   WORD PTR [eax+0x3b3e6691],di
  413a87:	add    BYTE PTR ds:0x6f30eab4,dh
  413a8d:	std    
  413a8e:	hlt    
  413a8f:	scas   eax,DWORD PTR es:[edi]
  413a90:	mov    WORD PTR [edx],es
  413a92:	ret    
  413a93:	mov    eax,0xc1ef6d9b
  413a98:	pop    ecx
  413a99:	sbb    ebp,DWORD PTR [ebp-0x49]
  413a9c:	retf   0x9914
  413a9f:	jnp    0x413b16
  413aa1:	nop
  413aa2:	xlat   BYTE PTR ds:[ebx]
  413aa3:	into   
  413aa4:	cmp    BYTE PTR [edx],ch
  413aa6:	or     eax,esp
  413aa8:	std    
  413aa9:	xor    BYTE PTR [edx+0x2de4a00e],dh
  413aaf:	addr16 or eax,0x315fa112
  413ab5:	int    0x23
  413ab7:	call   0x4ca561b
  413abc:	sub    BYTE PTR [eax+0x45],0xdd
  413ac0:	sbb    DWORD PTR [ecx-0x1f],0xd758bc90
  413ac7:	or     DWORD PTR [ebx-0x23f35648],edi
  413acd:	jo     0x413a96
  413acf:	scas   al,BYTE PTR es:[edi]
  413ad0:	sub    al,0x11
  413ad2:	(bad)  
  413ad3:	push   eax
  413ad4:	adc    cl,BYTE PTR ds:0xb4b56135
  413ada:	push   eax
  413adb:	int    0xc5
  413add:	mov    ds:0x8f6d0cab,eax
  413ae2:	mov    BYTE PTR [esi-0xd],ah
  413ae5:	push   ecx
  413ae6:	ret    
  413ae7:	push   0xa16f55b3
  413aec:	mov    al,ds:0xdc419a7b
  413af1:	pusha  
  413af2:	(bad)  
  413af3:	lock mov dh,0x80
  413af6:	lock cmc 
  413af8:	adc    edi,edi
  413afa:	dec    edx
  413afb:	mov    dh,bh
  413afd:	push   0xffffff91
  413aff:	and    BYTE PTR ds:0x26c01971,dh
  413b05:	xor    eax,0x4b65032f
  413b0a:	push   cs
  413b0b:	jo     0x413abe
  413b0d:	ret    0x31b6
  413b10:	pop    ebp
  413b11:	and    ch,BYTE PTR [edx+ecx*8-0x75cdfa46]
  413b18:	lods   al,BYTE PTR ds:[esi]
  413b19:	cwde   
  413b1a:	inc    edi
  413b1b:	push   esp
  413b1c:	nop
  413b1d:	ins    BYTE PTR es:[edi],dx
  413b1e:	add    esi,DWORD PTR [edx-0x10f80441]
  413b24:	in     eax,dx
  413b25:	sub    eax,0xdc8f1f5a
  413b2a:	dec    eax
  413b2b:	cwde   
  413b2c:	add    ebx,DWORD PTR [esp+ebx*2+0x5f43afd8]
  413b33:	push   edx
  413b34:	sub    BYTE PTR [esi],bl
  413b36:	jle    0x413b28
  413b38:	call   0xf57c:0x5e58b308
  413b3f:	(bad)  
  413b40:	gs cld 
  413b42:	xchg   edi,eax
  413b43:	in     eax,dx
  413b44:	js     0x413b0c
  413b46:	stos   DWORD PTR es:[edi],eax
  413b47:	mov    ds:0xe8ee736d,al
  413b4c:	add    al,0x36
  413b4e:	sub    al,0x1e
  413b50:	aas    
  413b51:	js     0x413b98
  413b53:	xlat   BYTE PTR ds:[ebx]
  413b54:	sub    ebp,esi
  413b56:	cmp    esp,DWORD PTR [eax+0x34206447]
  413b5c:	cmc    
  413b5d:	data16 dec BYTE PTR [ecx]
  413b60:	xchg   esp,eax
  413b61:	and    eax,0x9e3b20c9
  413b66:	fwait
  413b67:	push   ss
  413b68:	or     BYTE PTR [ebp+0xa],ah
  413b6b:	stc    
  413b6c:	test   eax,0xa4ca5feb
  413b71:	sbb    esp,edx
  413b73:	mov    BYTE PTR [esi],cl
  413b75:	mov    BYTE PTR [ebp-0x80],0xcb
  413b79:	jo     0x413bc9
  413b7b:	das    
  413b7c:	or     eax,0x3e08060f
  413b81:	pop    ebx
  413b82:	sub    ecx,DWORD PTR [edx]
  413b84:	xor    al,0x21
  413b86:	inc    edi
  413b87:	idiv   BYTE PTR [ecx-0xaf5f679]
  413b8d:	pusha  
  413b8e:	push   ebp
  413b8f:	loopne 0x413b77
  413b91:	bound  esi,QWORD PTR [ebp-0x80]
  413b94:	add    al,BYTE PTR [edi-0x1e2d1e35]
  413b9a:	push   eax
  413b9b:	xchg   ebx,eax
  413b9c:	xor    DWORD PTR [edx+ebp*1],0x8ffc8a27
  413ba3:	mov    ch,ch
  413ba5:	jg     0x413b5f
  413ba7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ba8:	xor    BYTE PTR [esi],dh
  413baa:	mov    al,ds:0x80961a52
  413baf:	sbb    DWORD PTR [ebx],edx
  413bb1:	shr    DWORD PTR [ecx+0x43],1
  413bb4:	mov    ch,0x12
  413bb6:	push   ebp
  413bb7:	sbb    al,0x99
  413bb9:	ror    DWORD PTR [edx+0xb286928],0x76
  413bc0:	call   0xd31e0c87
  413bc5:	maxps  xmm3,XMMWORD PTR [ebp-0x48209b88]
  413bcc:	mov    dh,0xda
  413bce:	push   edi
  413bcf:	or     ebp,esp
  413bd1:	pop    es
  413bd2:	or     bh,BYTE PTR [ebp+0x2d60f3d2]
  413bd8:	xor    eax,0x3f95e820
  413bdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bde:	loopne 0x413c25
  413be0:	and    al,BYTE PTR [eax+0x6f]
  413be3:	int    0x82
  413be5:	inc    ecx
  413be6:	fistp  DWORD PTR [esi+0x317c1737]
  413bec:	stc    
  413bed:	loopne 0x413b72
  413bef:	mov    bh,0x8f
  413bf1:	pushf  
  413bf2:	sub    eax,0x3c02d4c3
  413bf7:	lds    ebp,FWORD PTR ds:0x67b834a
  413bfd:	sbb    ah,BYTE PTR [edx+eiz*2+0x7ef35671]
  413c04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c05:	nop
  413c06:	inc    eax
  413c07:	dec    edi
  413c08:	inc    esi
  413c09:	and    bl,bh
  413c0b:	shl    BYTE PTR [esi+0x45],1
  413c0e:	jge    0x413be0
  413c10:	scas   eax,DWORD PTR es:[edi]
  413c11:	test   BYTE PTR [eax],ah
  413c13:	pop    eax
  413c14:	es or  al,cl
  413c17:	arpl   WORD PTR [ecx],dx
  413c19:	(bad)  
  413c1a:	scas   eax,DWORD PTR es:[edi]
  413c1b:	mov    eax,ds:0x631cd5d3
  413c20:	cdq    
  413c21:	xor    ecx,DWORD PTR [edx-0x4a]
  413c24:	push   ecx
  413c25:	es dec edx
  413c27:	mov    fs,WORD PTR [edx+0x7c]
  413c2a:	pop    ds
  413c2b:	loop   0x413c18
  413c2d:	int3   
  413c2e:	dec    ebp
  413c2f:	sbb    BYTE PTR [ecx+0x2b],0x58
  413c33:	sbb    al,BYTE PTR [edi]
  413c35:	sbb    edi,DWORD PTR ds:0x53db5300
  413c3b:	or     esp,DWORD PTR [edi+0x86115d3]
  413c41:	in     al,0x61
  413c43:	rcr    BYTE PTR [edi],cl
  413c45:	(bad)  
  413c46:	sti    
  413c47:	push   esp
  413c48:	push   edx
  413c49:	xor    ebp,DWORD PTR [edi+edx*1-0x74]
  413c4d:	loope  0x413c17
  413c4f:	(bad)
  413c52:	dec    edi
  413c53:	jle    0x413be0
  413c55:	mov    ds:0x800338f8,eax
  413c5a:	inc    esi
  413c5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c5c:	adc    edi,esp
  413c5e:	xor    eax,0xc521bd23
  413c63:	pop    ecx
  413c64:	imul   esi,DWORD PTR [ebx],0x69fb4f70
  413c6a:	fs test al,0x13
  413c6d:	xor    al,0x97
  413c6f:	dec    ebx
  413c70:	imul   ebx,DWORD PTR [esi],0x933da6c5
  413c76:	(bad)  
  413c77:	cmp    al,0x1b
  413c79:	adc    DWORD PTR [eax-0x41],edi
  413c7c:	dec    ebx
  413c7d:	ret    
  413c7e:	and    edi,DWORD PTR [esi-0x13]
  413c81:	lock xchg ecx,eax
  413c83:	cli    
  413c84:	shl    DWORD PTR ds:0x6fdb066c,1
  413c8a:	clc    
  413c8b:	pop    esp
  413c8c:	ror    DWORD PTR [eax-0x415a291],cl
  413c92:	mov    esi,0x9bca8ef
  413c97:	dec    eax
  413c98:	and    DWORD PTR [ecx-0x357821ed],ecx
  413c9e:	call   0xcc54:0x79590e2a
  413ca5:	xchg   esi,eax
  413ca6:	aas    
  413ca7:	pop    ss
  413ca8:	mov    es,WORD PTR [ebx]
  413caa:	jmp    0x40729fe8
  413caf:	xlat   BYTE PTR ds:[ebx]
  413cb0:	retf   
  413cb1:	repnz ficomp WORD PTR [edi]
  413cb4:	dec    esi
  413cb5:	cwde   
  413cb6:	or     edx,DWORD PTR [ecx]
  413cb8:	pop    esi
  413cb9:	int3   
  413cba:	lahf   
  413cbb:	inc    edi
  413cbc:	or     edx,esi
  413cbe:	rcr    BYTE PTR [esp+ebx*1-0x2b],1
  413cc2:	mov    cs,WORD PTR [ebx+0x58]
  413cc5:	or     DWORD PTR [edi-0x64e2b0d1],edx
  413ccb:	inc    eax
  413ccc:	scas   al,BYTE PTR es:[edi]
  413ccd:	adc    esi,ebx
  413ccf:	or     ecx,ebp
  413cd1:	jmp    0x8b5b4ef4
  413cd6:	cli    
  413cd7:	lahf   
  413cd8:	push   esi
  413cd9:	inc    edx
  413cda:	outs   dx,DWORD PTR ds:[esi]
  413cdb:	adc    DWORD PTR ds:0x1dbe0525,esp
  413ce1:	jle    0x413d08
  413ce3:	rcl    BYTE PTR [edx+0x58927f84],cl
  413ce9:	jge    0x413ce3
  413ceb:	push   ecx
  413cec:	jb     0x413c89
  413cee:	popf   
  413cef:	jbe    0x413cec
  413cf1:	jns    0x413ca2
  413cf3:	xchg   esp,eax
  413cf4:	add    al,0x59
  413cf6:	mov    ebx,0xfa987e36
  413cfb:	mov    eax,0x43a23cf7
  413d00:	xor    ah,BYTE PTR [ebx-0x31]
  413d03:	loop   0x413cda
  413d05:	std    
  413d06:	mov    ebp,0x6bf6d8e7
  413d0b:	or     DWORD PTR [ecx+0x5193bfcb],esi
  413d11:	inc    edx
  413d12:	neg    DWORD PTR [edx+ebx*2+0x5aea9592]
  413d19:	xor    DWORD PTR [ecx],edi
  413d1b:	dec    ebx
  413d1c:	push   eax
  413d1d:	cwde   
  413d1e:	jg     0x413d03
  413d20:	repz pop esi
  413d22:	push   ebp
  413d23:	lds    ecx,FWORD PTR [ebx+0x47]
  413d26:	xchg   edx,eax
  413d27:	sbb    ebp,DWORD PTR [ebp+eiz*1+0x6c]
  413d2b:	call   0x2be7:0x1763734a
  413d32:	aaa    
  413d33:	arpl   WORD PTR [edx+0xc],si
  413d36:	mov    dl,0x9a
  413d38:	cmp    edi,ebp
  413d3a:	mov    dl,0x69
  413d3c:	popa   
  413d3d:	jmp    0x121b:0xa80b5509
  413d44:	push   ecx
  413d45:	popa   
  413d46:	dec    esp
  413d47:	fdivr  QWORD PTR [edi+0x4f9eb4fb]
  413d4d:	ins    BYTE PTR es:[edi],dx
  413d4e:	mov    eax,ds:0xca5d5f00
  413d53:	jbe    0x413d77
  413d55:	and    eax,0x7a5e5bcd
  413d5a:	rcl    DWORD PTR [esi+0x1f],1
  413d5d:	jae    0x413d02
  413d5f:	mov    ds:0xb24c6fea,al
  413d64:	sbb    eax,0xbf1e9e07
  413d69:	addr16 mov edx,0x528e59ce
  413d6f:	fldenv [ebx-0x4c]
  413d72:	mov    cl,0x5e
  413d74:	iret   
  413d75:	test   al,0xf5
  413d78:	dec    ebp
  413d79:	stos   BYTE PTR es:[edi],al
  413d7a:	mov    ds:0xa58fc2a1,al
  413d7f:	sub    BYTE PTR [esi],0x50
  413d82:	pop    edx
  413d83:	adc    BYTE PTR [eax+0x313bb6e8],cl
  413d89:	imul   ebp,edi,0xffffff9f
  413d8c:	or     al,BYTE PTR [edi+0x6f]
  413d8f:	push   edx
  413d90:	adc    ebx,DWORD PTR [ebx+0x5]
  413d93:	mov    cl,0x3e
  413d95:	pop    esp
  413d96:	out    dx,eax
  413d97:	push   esi
  413d98:	dec    edi
  413d99:	call   0x3d23:0x90ff81f0
  413da0:	out    dx,eax
  413da1:	popa   
  413da2:	fs test eax,0x68c2411a
  413da8:	lahf   
  413da9:	adc    eax,0xa6143434
  413dae:	sub    DWORD PTR [esi+0x65],edx
  413db1:	xor    DWORD PTR [bp+di-0x15],ecx
  413db5:	add    eax,0x89ade8f3
  413dba:	ret    0x8af7
  413dbd:	xchg   ecx,eax
  413dbe:	out    0x41,al
  413dc0:	pop    esp
  413dc1:	inc    ebx
  413dc2:	dec    ebp
  413dc3:	add    ah,BYTE PTR [edx-0x6ab7b8a2]
  413dc9:	pusha  
  413dca:	in     eax,0xdb
  413dcc:	cmp    ebx,DWORD PTR [edx]
  413dce:	mov    ch,al
  413dd0:	inc    ecx
  413dd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dd2:	push   eax
  413dd3:	xor    al,al
  413dd5:	popf   
  413dd6:	mov    cl,0x27
  413dd8:	jl     0x413e3e
  413dda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ddb:	ja     0x413d7c
  413ddd:	ret    
  413dde:	push   ebx
  413ddf:	jae    0x413de3
  413de1:	scas   eax,DWORD PTR es:[edi]
  413de2:	jge    0x413d84
  413de4:	stos   BYTE PTR es:[edi],al
  413de5:	xor    BYTE PTR [ecx+0x72],bl
  413de8:	test   DWORD PTR [edi-0x5a],0x34ad6964
  413def:	inc    si
  413df1:	enter  0x90ba,0x24
  413df5:	out    dx,eax
  413df6:	std    
  413df7:	mov    ch,0xa3
  413df9:	xor    eax,0x5dd46101
  413dfe:	cmp    BYTE PTR [ebx+0x3754cb1b],cl
  413e04:	scas   al,BYTE PTR es:[edi]
  413e05:	(bad)  
  413e06:	mov    al,ds:0x2f103c0b
  413e0b:	dec    ecx
  413e0c:	fxch   st(7)
  413e0e:	scas   eax,DWORD PTR es:[edi]
  413e0f:	jo     0x413e29
  413e11:	inc    edi
  413e12:	fadd   QWORD PTR [ecx]
  413e14:	rcl    BYTE PTR [ecx+0x1f77317a],cl
  413e1a:	dec    ebx
  413e1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e1c:	add    bl,bh
  413e1e:	inc    edi
  413e1f:	call   0x4d3f:0x7f27bf7d
  413e26:	test   BYTE PTR [ecx-0x1a],ah
  413e29:	imul   ecx,edi,0xbde1f937
  413e2f:	test   BYTE PTR [edx-0x3b7c371e],al
  413e35:	and    al,0x27
  413e37:	adc    eax,0xa60520c3
  413e3c:	push   ebp
  413e3d:	jnp    0x413e31
  413e3f:	jecxz  0x413e4f
  413e41:	fist   DWORD PTR [ebx-0x67]
  413e44:	mov    bh,BYTE PTR [ebx]
  413e46:	and    ah,BYTE PTR [eax]
  413e48:	pop    es
  413e49:	jmp    0x137bdbf0
  413e4e:	test   eax,0xc366c2c7
  413e54:	xchg   ebx,eax
  413e55:	jne    0x413ddd
  413e57:	inc    eax
  413e58:	push   0x66cee73f
  413e5d:	pop    ecx
  413e5e:	mov    ebp,0xf67fc668
  413e63:	sub    al,0x6d
  413e65:	or     al,0x93
  413e67:	mov    esp,0xb93a86a2
  413e6c:	push   eax
  413e6d:	adc    esi,DWORD PTR [edx-0x5]
  413e70:	mov    es,ecx
  413e72:	cmp    BYTE PTR [eax+0x5b8b77c],0x46
  413e79:	xchg   esp,eax
  413e7a:	push   eax
  413e7b:	inc    ebx
  413e7c:	int    0xbd
  413e7e:	jge    0x413e1d
  413e80:	mov    ah,dh
  413e82:	call   0xa3b11111
  413e87:	cli    
  413e88:	out    0x3e,al
  413e8a:	jnp    0x413ebf
  413e8c:	pop    ebx
  413e8d:	jbe    0x413e4e
  413e8f:	(bad)  
  413e91:	sub    al,0xdf
  413e93:	fstp   st(6)
  413e95:	cmp    eax,0x11bef762
  413e9a:	test   BYTE PTR [ebp+0xe40f98b],dh
  413ea0:	ret    0xf042
  413ea3:	jecxz  0x413f03
  413ea5:	add    ebp,eax
  413ea7:	stos   DWORD PTR es:[edi],eax
  413ea8:	loope  0x413ea3
  413eaa:	fiadd  WORD PTR [edi+ebx*4]
  413ead:	dec    eax
  413eae:	shl    DWORD PTR [eax+0x6cea811d],cl
  413eb4:	in     eax,dx
  413eb5:	outs   dx,DWORD PTR ds:[esi]
  413eb6:	jo     0x413ebc
  413eb8:	jnp    0x413efe
  413eba:	add    dh,al
  413ebc:	outs   dx,BYTE PTR ds:[esi]
  413ebd:	jae    0x413ea3
  413ebf:	(bad)  
  413ec0:	test   DWORD PTR [ebx+eax*4-0x17],edx
  413ec4:	loopne 0x413f0f
  413ec6:	shl    BYTE PTR [edi],cl
  413ec8:	mov    BYTE PTR [ecx-0x41ea764c],0x49
  413ecf:	pop    edi
  413ed0:	fld    DWORD PTR [esi-0x42851166]
  413ed6:	pop    eax
  413ed7:	ins    BYTE PTR es:[edi],dx
  413ed8:	cli    
  413ed9:	sbb    BYTE PTR [ebx+0x5],cl
  413edc:	nop
  413edd:	pop    es
  413ede:	lods   eax,DWORD PTR ds:[esi]
  413edf:	cdq    
  413ee0:	sbb    al,0xa1
  413ee2:	das    
  413ee3:	xor    al,0x3c
  413ee5:	jb     0x413efb
  413ee7:	sub    eax,0xb0df1db2
  413eec:	pop    ebx
  413eed:	test   DWORD PTR [esi+eax*1-0x34e02b1b],esi
  413ef4:	das    
  413ef5:	add    eax,0xcca60cc5
  413efa:	dec    ah
  413efc:	inc    ebx
  413efd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413efe:	sar    BYTE PTR [edx+0x3f],1
  413f01:	ror    BYTE PTR [ebp-0x1c],0x70
  413f05:	and    al,0x57
  413f07:	nop
  413f08:	or     DWORD PTR [ebx],esi
  413f0a:	mov    al,0x7f
  413f0c:	mov    eax,ebp
  413f0e:	inc    ebp
  413f0f:	jmp    0x413f70
  413f11:	outs   dx,BYTE PTR ds:[esi]
  413f12:	shl    DWORD PTR [ebp-0x5b],0x64
  413f16:	pusha  
  413f17:	and    BYTE PTR [edx-0x333adcbc],ch
  413f1d:	jl     0x413f64
  413f1f:	fisttp QWORD PTR [ebp+0x2bd6b52f]
  413f25:	jg     0x413ef8
  413f27:	les    ecx,FWORD PTR [esi]
  413f29:	xchg   edx,esp
  413f2b:	push   es
  413f2c:	mov    al,0x26
  413f2e:	dec    edx
  413f2f:	xor    esi,DWORD PTR ss:[edx-0x45]
  413f33:	(bad)  
  413f34:	outs   dx,BYTE PTR ds:[esi]
  413f35:	ja     0x413eed
  413f37:	xor    BYTE PTR [edi-0x66],ch
  413f3a:	mov    ch,0x19
  413f3c:	xor    DWORD PTR [ebp-0x52],eax
  413f3f:	inc    ecx
  413f40:	xchg   ebx,eax
  413f41:	or     cl,BYTE PTR [ecx-0x48a99ae4]
  413f47:	out    0x36,eax
  413f49:	cld    
  413f4a:	(bad)  
  413f4b:	sbb    DWORD PTR [ecx],eax
  413f4d:	mov    bl,0xd8
  413f4f:	adc    ch,BYTE PTR [edx+eiz*4-0x5]
  413f53:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  413f55:	push   ds
  413f56:	aam    0x9c
  413f58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f59:	mov    eax,0x27510da
  413f5e:	mov    edx,0xadd83b57
  413f63:	push   0x4e
  413f65:	ss jmp 0x413f03
  413f68:	into   
  413f69:	push   edi
  413f6a:	dec    esi
  413f6b:	mov    bh,0x9a
  413f6d:	(bad)  
  413f6e:	ins    BYTE PTR es:[edi],dx
  413f6f:	xor    edx,eax
  413f71:	xor    ebx,eax
  413f73:	xor    DWORD PTR ds:0x42b00c,0x42900c
  413f7d:	sub    edx,ebx
  413f7f:	mov    DWORD PTR ds:0x42b010,0x4d7f
  413f89:	sub    edx,esi
  413f8b:	or     ebx,0x6e50
  413f91:	xor    edx,eax
  413f93:	mov    DWORD PTR ds:0x429008,0x2a34
  413f9d:	mov    DWORD PTR [ebp+0x8],edx
  413fa0:	mov    edx,DWORD PTR [ebp+0x8]
  413fa3:	mov    ebx,DWORD PTR [ebp-0x58]
  413fa6:	add    edx,0x5708f8
  413fac:	or     DWORD PTR ds:0x42c008,0x42c014
  413fb6:	imul   edx,ebx
  413fb9:	and    DWORD PTR ds:0x42d000,0x0
  413fc3:	jmp    0x413fd5
  413fc8:	mov    ebx,DWORD PTR ds:0x42d000
  413fce:	inc    ebx
  413fcf:	mov    DWORD PTR ds:0x42d000,ebx
  413fd5:	cmp    DWORD PTR ds:0x42d000,0x1c
  413fdc:	jae    0x414018
  413fe2:	cmp    DWORD PTR ds:0x42d000,0x1d
  413fe9:	jne    0x41400d
  413fef:	push   DWORD PTR [ebp-0x10]
  413ff2:	push   0x42c004
  413ff7:	push   0x1feb
  413ffc:	push   DWORD PTR [ebp-0x28]
  413fff:	push   DWORD PTR [ebp-0x28]
  414002:	push   0x72a4
  414007:	call   DWORD PTR ds:0x42ec97
  41400d:	jmp    0x413fc8
  414012:	adc    ebx,0x7a0c
  414018:	mov    DWORD PTR [ebp-0x58],edx
  41401b:	and    DWORD PTR ds:0x429000,0x0
  414025:	jmp    0x414037
  41402a:	mov    edx,DWORD PTR ds:0x429000
  414030:	inc    edx
  414031:	mov    DWORD PTR ds:0x429000,edx
  414037:	cmp    DWORD PTR ds:0x429000,0x19
  41403e:	jae    0x414083
  414044:	cmp    DWORD PTR ds:0x429000,0x4
  41404b:	jne    0x414057
  414051:	call   DWORD PTR ds:0x42ec9b
  414057:	cmp    DWORD PTR ds:0x429000,0x3
  41405e:	jne    0x414071
  414064:	mov    edx,DWORD PTR ds:0x429000
  41406a:	inc    edx
  41406b:	mov    DWORD PTR ds:0x429000,edx
  414071:	jmp    0x41402a
  414076:	movzx  edx,BYTE PTR ds:0x42901c
  41407d:	or     DWORD PTR ds:0x42c008,edx
  414083:	mov    edx,DWORD PTR [ebp+0x8]
  414086:	mov    DWORD PTR ds:0x429004,0x6b93
  414090:	mov    ebx,DWORD PTR [ebp-0x54]
  414093:	add    DWORD PTR ds:0x42c00c,0x429000
  41409d:	add    edx,0x64f8da
  4140a3:	xor    DWORD PTR ds:0x42b004,0x45d1
  4140ad:	or     edx,ebx
  4140af:	mov    DWORD PTR [ebp-0x54],edx
  4140b2:	not    ebx
  4140b4:	mov    edx,DWORD PTR [ebp+0x8]
  4140b7:	mov    ebx,DWORD PTR [ebp-0x50]
  4140ba:	add    edx,ecx
  4140bc:	xor    edx,ebx
  4140be:	adc    DWORD PTR ds:0x42d008,0x7f53
  4140c8:	mov    DWORD PTR [ebp-0x50],edx
  4140cb:	mov    edx,DWORD PTR [ebp+0x8]
  4140ce:	not    ebx
  4140d0:	mov    ebx,DWORD PTR [ebp-0x4c]
  4140d3:	sub    DWORD PTR ds:0x42a01c,0x30e3
  4140dd:	add    edx,edi
  4140df:	sub    DWORD PTR ds:0x42d01c,0x42d000
  4140e9:	and    edx,ebx
  4140eb:	sub    DWORD PTR ds:0x42b018,0x3308
  4140f5:	mov    DWORD PTR [ebp-0x4c],edx
  4140f8:	and    DWORD PTR ds:0x42c018,0x0
  414102:	jmp    0x414114
  414107:	mov    ebx,DWORD PTR ds:0x42c018
  41410d:	inc    ebx
  41410e:	mov    DWORD PTR ds:0x42c018,ebx
  414114:	cmp    DWORD PTR ds:0x42c018,0x1c
  41411b:	jae    0x414160
  414121:	cmp    DWORD PTR ds:0x42c018,0x9
  414128:	jne    0x41413f
  41412e:	push   DWORD PTR [ebp-0x1c]
  414131:	push   0x429028
  414136:	push   DWORD PTR [ebp-0x20]
  414139:	call   DWORD PTR ds:0x42ec9f
  41413f:	cmp    DWORD PTR ds:0x42c018,0x8
  414146:	jne    0x41415b
  41414c:	xor    ebx,ebx
  41414e:	add    ebx,DWORD PTR ds:0x42c018
  414154:	inc    ebx
  414155:	mov    DWORD PTR ds:0x42c018,ebx
  41415b:	jmp    0x414107
  414160:	mov    edx,DWORD PTR [ebp+0x8]
  414163:	mov    ebx,DWORD PTR [ebp-0x48]
  414166:	mov    DWORD PTR ds:0x429008,0x1eac
  414170:	lea    edx,[ebx+edx*1+0x241fc1f]
  414177:	and    DWORD PTR ds:0x42900c,0x77ed
  414181:	mov    DWORD PTR [ebp-0x48],edx
  414184:	mov    edx,DWORD PTR [ebp+0x8]
  414187:	mov    ebx,0xfa5e15e2
  41418c:	sub    ebx,edx
  41418e:	add    ebx,DWORD PTR [ebp-0x44]
  414191:	sub    DWORD PTR ds:0x42a010,0x32d9
  41419b:	mov    DWORD PTR [ebp-0x44],ebx
  41419e:	mov    edx,DWORD PTR [ebp+0x8]
  4141a1:	or     DWORD PTR ds:0x429000,0x42b018
  4141ab:	xor    edx,eax
  4141ad:	add    edx,esi
  4141af:	mov    DWORD PTR ds:0x42d004,0x438b
  4141b9:	jne    0x411baa
  4141bf:	mov    DWORD PTR ds:0x42c008,0x3945
  4141c9:	jmp    0x4145ae
  4141ce:	mov    edx,DWORD PTR [ebp-0xc]
  4141d1:	sub    edx,esi
  4141d3:	and    DWORD PTR ds:0x429004,0x0
  4141dd:	jmp    0x4141ef
  4141e2:	mov    ebx,DWORD PTR ds:0x429004
  4141e8:	inc    ebx
  4141e9:	mov    DWORD PTR ds:0x429004,ebx
  4141ef:	cmp    DWORD PTR ds:0x429004,0x10
  4141f6:	jae    0x414243
  4141fc:	cmp    DWORD PTR ds:0x429004,0x9
  414203:	jne    0x41421e
  414209:	push   0x42e127
  41420e:	push   0x42e000
  414213:	push   0x400000
  414218:	call   DWORD PTR ds:0x42eca7
  41421e:	cmp    DWORD PTR ds:0x429004,0x8
  414225:	jne    0x414238
  41422b:	mov    ebx,DWORD PTR ds:0x429004
  414231:	inc    ebx
  414232:	mov    DWORD PTR ds:0x429004,ebx
  414238:	jmp    0x4141e2
  41423d:	sub    DWORD PTR ds:0x42b004,ecx
  414243:	xor    edx,eax
  414245:	mov    DWORD PTR [ebp-0x5c],edx
  414248:	sub    DWORD PTR ds:0x42b000,edx
  41424e:	mov    edx,DWORD PTR [ebp-0x10]
  414251:	sbb    DWORD PTR ds:0x429000,0x7854
  41425b:	mov    ebx,DWORD PTR [ebp-0x8]
  41425e:	inc    DWORD PTR ds:0x42d010
  414264:	xor    edx,eax
  414266:	add    DWORD PTR ds:0x42c008,0x42b018
  414270:	xor    ebx,eax
  414272:	mov    DWORD PTR ds:0x42a01c,0x61e1
  41427c:	sub    edx,ebx
  41427e:	sub    DWORD PTR ds:0x42c014,0x2136
  414288:	sub    edx,esi
  41428a:	xor    edx,eax
  41428c:	mov    DWORD PTR ds:0x42a01c,0x74d4
  414296:	mov    DWORD PTR [ebp-0x10],edx
  414299:	mov    edx,DWORD PTR [ebp-0x14]
  41429c:	mov    DWORD PTR ds:0x42a008,0x2bcf
  4142a6:	mov    DWORD PTR [ebp+0x8],edx
  4142a9:	jmp    0x414392
  4142ae:	mov    edx,DWORD PTR [ebp+0x8]
  4142b1:	neg    ebx
  4142b3:	mov    ebx,DWORD PTR [ebp-0x8]
  4142b6:	xor    DWORD PTR ds:0x429000,0x42b004
  4142c0:	xor    edx,eax
  4142c2:	add    DWORD PTR ds:0x42a01c,0x429024
  4142cc:	xor    ebx,eax
  4142ce:	sub    edx,ebx
  4142d0:	and    DWORD PTR ds:0x429028,edi
  4142d6:	sub    edx,esi
  4142d8:	xor    edx,eax
  4142da:	mov    DWORD PTR [ebp+0x8],edx
  4142dd:	mov    ebx,DWORD PTR ds:0x429000
  4142e3:	adc    DWORD PTR ds:0x42a018,ebx
  4142e9:	mov    edx,DWORD PTR [ebp+0x8]
  4142ec:	xor    ebx,ebx
  4142ee:	xor    ebx,DWORD PTR ds:0x429014
  4142f4:	adc    ebx,DWORD PTR ds:0x42b000
  4142fa:	mov    DWORD PTR ds:0x429014,ebx
  414300:	mov    ebx,DWORD PTR [ebp-0x58]
  414303:	xor    DWORD PTR ds:0x42a004,0x429028
  41430d:	add    edx,0x5708f8
  414313:	imul   edx,ebx
  414316:	xor    ebx,ebx
  414318:	or     ebx,DWORD PTR ds:0x42a018
  41431e:	add    ebx,DWORD PTR ds:0x42d010
  414324:	mov    DWORD PTR ds:0x42a018,ebx
  41432a:	mov    DWORD PTR [ebp-0x58],edx
  41432d:	mov    ebx,DWORD PTR ds:0x42a014
  414333:	sbb    DWORD PTR ds:0x42d008,ebx
  414339:	mov    edx,DWORD PTR [ebp+0x8]
  41433c:	xor    ebx,ebx
  41433e:	xor    ebx,DWORD PTR ds:0x42a00c
  414344:	add    DWORD PTR ds:0x429004,ebx
  41434a:	mov    ebx,DWORD PTR [ebp-0x54]
  41434d:	add    edx,0x64f8da
  414353:	or     edx,ebx
  414355:	mov    DWORD PTR [ebp-0x54],edx
  414358:	mov    edx,DWORD PTR [ebp+0x8]
  41435b:	mov    ebx,DWORD PTR [ebp-0x50]
  41435e:	add    edx,ecx
  414360:	xor    edx,ebx
  414362:	mov    DWORD PTR [ebp-0x50],edx
  414365:	mov    edx,DWORD PTR [ebp+0x8]
  414368:	mov    ebx,DWORD PTR [ebp-0x4c]
  41436b:	add    edx,edi
  41436d:	and    edx,ebx
  41436f:	mov    DWORD PTR [ebp-0x4c],edx
  414372:	mov    edx,DWORD PTR [ebp+0x8]
  414375:	mov    ebx,DWORD PTR [ebp-0x48]
  414378:	lea    edx,[ebx+edx*1+0x241fc1f]
  41437f:	mov    DWORD PTR [ebp-0x48],edx
  414382:	mov    edx,DWORD PTR [ebp+0x8]
  414385:	mov    ebx,0xfa5e15e2
  41438a:	sub    ebx,edx
  41438c:	add    ebx,DWORD PTR [ebp-0x44]
  41438f:	mov    DWORD PTR [ebp-0x44],ebx
  414392:	mov    edx,DWORD PTR [ebp+0x8]
  414395:	xor    edx,eax
  414397:	add    edx,esi
  414399:	jne    0x4142ae
  41439f:	mov    edx,DWORD PTR [ebp-0xc]
  4143a2:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4143a9:	mov    bl,BYTE PTR [ebp-0x1]
  4143ac:	cmp    dl,bl
  4143ae:	je     0x41448c
  4143b4:	mov    ecx,DWORD PTR [ebp-0x5c]
  4143b7:	mov    edx,DWORD PTR [ebp-0xc]
  4143ba:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4143c1:	mov    ebx,DWORD PTR [ebp+0xc]
  4143c4:	xor    ecx,eax
  4143c6:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e0]
  4143cd:	jne    0x4145c0
  4143d3:	mov    ecx,DWORD PTR [ebp-0x5c]
  4143d6:	mov    edx,DWORD PTR [ebp+0xc]
  4143d9:	xor    ecx,eax
  4143db:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e0]
  4143e3:	mov    edx,DWORD PTR [ebp-0x18]
  4143e6:	xor    edx,eax
  4143e8:	add    edx,esi
  4143ea:	cmp    ecx,edx
  4143ec:	mov    ecx,DWORD PTR [ebp-0x14]
  4143ef:	mov    DWORD PTR [ebp+0x8],ecx
  4143f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4143f5:	je     0x416a87
  4143fb:	xor    ecx,eax
  4143fd:	add    ecx,esi
  4143ff:	mov    ecx,0x242ebed
  414404:	je     0x414514
  41440a:	mov    edx,DWORD PTR [ebp+0x8]
  41440d:	mov    ebx,DWORD PTR [ebp-0x8]
  414410:	xor    edx,eax
  414412:	xor    ebx,eax
  414414:	sub    edx,ebx
  414416:	sub    edx,esi
  414418:	xor    edx,eax
  41441a:	mov    DWORD PTR [ebp+0x8],edx
  41441d:	mov    edx,DWORD PTR [ebp+0x8]
  414420:	mov    ebx,DWORD PTR [ebp-0x58]
  414423:	add    edx,0x5708f8
  414429:	imul   edx,ebx
  41442c:	mov    DWORD PTR [ebp-0x58],edx
  41442f:	mov    edx,DWORD PTR [ebp+0x8]
  414432:	mov    ebx,DWORD PTR [ebp-0x54]
  414435:	add    edx,0x64f8da
  41443b:	or     edx,ebx
  41443d:	mov    DWORD PTR [ebp-0x54],edx
  414440:	mov    edx,DWORD PTR [ebp+0x8]
  414443:	mov    ebx,DWORD PTR [ebp-0x50]
  414446:	add    edx,ecx
  414448:	xor    edx,ebx
  41444a:	mov    DWORD PTR [ebp-0x50],edx
  41444d:	mov    edx,DWORD PTR [ebp+0x8]
  414450:	mov    ebx,DWORD PTR [ebp-0x4c]
  414453:	add    edx,edi
  414455:	and    edx,ebx
  414457:	mov    DWORD PTR [ebp-0x4c],edx
  41445a:	mov    edx,DWORD PTR [ebp+0x8]
  41445d:	mov    ebx,DWORD PTR [ebp-0x48]
  414460:	lea    edx,[ebx+edx*1+0x241fc1f]
  414467:	mov    DWORD PTR [ebp-0x48],edx
  41446a:	mov    edx,DWORD PTR [ebp+0x8]
  41446d:	mov    ebx,0xfa5e15e2
  414472:	sub    ebx,edx
  414474:	add    ebx,DWORD PTR [ebp-0x44]
  414477:	mov    DWORD PTR [ebp-0x44],ebx
  41447a:	mov    edx,DWORD PTR [ebp+0x8]
  41447d:	xor    edx,eax
  41447f:	add    edx,esi
  414481:	jne    0x41440a
  414487:	jmp    0x414514
  41448c:	mov    edx,DWORD PTR [ebp-0x14]
  41448f:	mov    DWORD PTR [ebp+0x8],edx
  414492:	jmp    0x414507
  414497:	mov    edx,DWORD PTR [ebp+0x8]
  41449a:	mov    ebx,DWORD PTR [ebp-0x8]
  41449d:	xor    edx,eax
  41449f:	xor    ebx,eax
  4144a1:	sub    edx,ebx
  4144a3:	sub    edx,esi
  4144a5:	xor    edx,eax
  4144a7:	mov    DWORD PTR [ebp+0x8],edx
  4144aa:	mov    edx,DWORD PTR [ebp+0x8]
  4144ad:	mov    ebx,DWORD PTR [ebp-0x58]
  4144b0:	add    edx,0x5708f8
  4144b6:	imul   edx,ebx
  4144b9:	mov    DWORD PTR [ebp-0x58],edx
  4144bc:	mov    edx,DWORD PTR [ebp+0x8]
  4144bf:	mov    ebx,DWORD PTR [ebp-0x54]
  4144c2:	add    edx,0x64f8da
  4144c8:	or     edx,ebx
  4144ca:	mov    DWORD PTR [ebp-0x54],edx
  4144cd:	mov    edx,DWORD PTR [ebp+0x8]
  4144d0:	mov    ebx,DWORD PTR [ebp-0x50]
  4144d3:	add    edx,ecx
  4144d5:	xor    edx,ebx
  4144d7:	mov    DWORD PTR [ebp-0x50],edx
  4144da:	mov    edx,DWORD PTR [ebp+0x8]
  4144dd:	mov    ebx,DWORD PTR [ebp-0x4c]
  4144e0:	add    edx,edi
  4144e2:	and    edx,ebx
  4144e4:	mov    DWORD PTR [ebp-0x4c],edx
  4144e7:	mov    edx,DWORD PTR [ebp+0x8]
  4144ea:	mov    ebx,DWORD PTR [ebp-0x48]
  4144ed:	lea    edx,[ebx+edx*1+0x241fc1f]
  4144f4:	mov    DWORD PTR [ebp-0x48],edx
  4144f7:	mov    edx,DWORD PTR [ebp+0x8]
  4144fa:	mov    ebx,0xfa5e15e2
  4144ff:	sub    ebx,edx
  414501:	add    ebx,DWORD PTR [ebp-0x44]
  414504:	mov    DWORD PTR [ebp-0x44],ebx
  414507:	mov    edx,DWORD PTR [ebp+0x8]
  41450a:	xor    edx,eax
  41450c:	add    edx,esi
  41450e:	jne    0x414497
  414514:	mov    edx,DWORD PTR [ebp-0x14]
  414517:	mov    DWORD PTR [ebp+0x8],edx
  41451a:	jmp    0x41458f
  41451f:	mov    edx,DWORD PTR [ebp+0x8]
  414522:	mov    ebx,DWORD PTR [ebp-0x8]
  414525:	xor    edx,eax
  414527:	xor    ebx,eax
  414529:	sub    edx,ebx
  41452b:	sub    edx,esi
  41452d:	xor    edx,eax
  41452f:	mov    DWORD PTR [ebp+0x8],edx
  414532:	mov    edx,DWORD PTR [ebp+0x8]
  414535:	mov    ebx,DWORD PTR [ebp-0x58]
  414538:	add    edx,0x5708f8
  41453e:	imul   edx,ebx
  414541:	mov    DWORD PTR [ebp-0x58],edx
  414544:	mov    edx,DWORD PTR [ebp+0x8]
  414547:	mov    ebx,DWORD PTR [ebp-0x54]
  41454a:	add    edx,0x64f8da
  414550:	or     edx,ebx
  414552:	mov    DWORD PTR [ebp-0x54],edx
  414555:	mov    edx,DWORD PTR [ebp+0x8]
  414558:	mov    ebx,DWORD PTR [ebp-0x50]
  41455b:	add    edx,ecx
  41455d:	xor    edx,ebx
  41455f:	mov    DWORD PTR [ebp-0x50],edx
  414562:	mov    edx,DWORD PTR [ebp+0x8]
  414565:	mov    ebx,DWORD PTR [ebp-0x4c]
  414568:	add    edx,edi
  41456a:	and    edx,ebx
  41456c:	mov    DWORD PTR [ebp-0x4c],edx
  41456f:	mov    edx,DWORD PTR [ebp+0x8]
  414572:	mov    ebx,DWORD PTR [ebp-0x48]
  414575:	lea    edx,[ebx+edx*1+0x241fc1f]
  41457c:	mov    DWORD PTR [ebp-0x48],edx
  41457f:	mov    edx,DWORD PTR [ebp+0x8]
  414582:	mov    ebx,0xfa5e15e2
  414587:	sub    ebx,edx
  414589:	add    ebx,DWORD PTR [ebp-0x44]
  41458c:	mov    DWORD PTR [ebp-0x44],ebx
  41458f:	mov    edx,DWORD PTR [ebp+0x8]
  414592:	xor    edx,eax
  414594:	add    edx,esi
  414596:	jne    0x41451f
  41459c:	mov    edx,DWORD PTR [ebp-0x8]
  41459f:	mov    ebx,DWORD PTR [ebp-0xc]
  4145a2:	xor    edx,eax
  4145a4:	lea    edx,[edx+ebx*1+0x3272e0]
  4145ab:	mov    DWORD PTR [ebp-0xc],edx
  4145ae:	mov    edx,DWORD PTR [ebp-0x10]
  4145b1:	xor    edx,eax
  4145b3:	add    edx,esi
  4145b5:	jne    0x4141ce
  4145bb:	jmp    0x418e50
  4145c0:	mov    ecx,DWORD PTR [ebp-0x14]
  4145c3:	mov    DWORD PTR [ebp+0x8],ecx
  4145c6:	jmp    0x41463f
  4145cb:	mov    ecx,DWORD PTR [ebp+0x8]
  4145ce:	mov    edx,DWORD PTR [ebp-0x8]
  4145d1:	xor    ecx,eax
  4145d3:	xor    edx,eax
  4145d5:	sub    ecx,edx
  4145d7:	sub    ecx,esi
  4145d9:	xor    ecx,eax
  4145db:	mov    DWORD PTR [ebp+0x8],ecx
  4145de:	mov    ecx,DWORD PTR [ebp+0x8]
  4145e1:	mov    edx,DWORD PTR [ebp-0x58]
  4145e4:	add    ecx,0x5708f8
  4145ea:	imul   ecx,edx
  4145ed:	mov    DWORD PTR [ebp-0x58],ecx
  4145f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4145f3:	mov    edx,DWORD PTR [ebp-0x54]
  4145f6:	add    ecx,0x64f8da
  4145fc:	or     ecx,edx
  4145fe:	mov    DWORD PTR [ebp-0x54],ecx
  414601:	mov    ecx,DWORD PTR [ebp+0x8]
  414604:	mov    edx,DWORD PTR [ebp-0x50]
  414607:	add    ecx,0x242ebed
  41460d:	xor    ecx,edx
  41460f:	mov    DWORD PTR [ebp-0x50],ecx
  414612:	mov    ecx,DWORD PTR [ebp+0x8]
  414615:	mov    edx,DWORD PTR [ebp-0x4c]
  414618:	add    ecx,edi
  41461a:	and    ecx,edx
  41461c:	mov    DWORD PTR [ebp-0x4c],ecx
  41461f:	mov    ecx,DWORD PTR [ebp+0x8]
  414622:	mov    edx,DWORD PTR [ebp-0x48]
  414625:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41462c:	mov    DWORD PTR [ebp-0x48],ecx
  41462f:	mov    ecx,DWORD PTR [ebp+0x8]
  414632:	mov    edx,0xfa5e15e2
  414637:	sub    edx,ecx
  414639:	add    edx,DWORD PTR [ebp-0x44]
  41463c:	mov    DWORD PTR [ebp-0x44],edx
  41463f:	mov    ecx,DWORD PTR [ebp+0x8]
  414642:	xor    ecx,eax
  414644:	add    ecx,esi
  414646:	jne    0x4145cb
  41464c:	jmp    0x418e5c
  414651:	mov    ecx,DWORD PTR [ebp+0x8]
  414654:	mov    edx,DWORD PTR [ebp-0x8]
  414657:	xor    ecx,eax
  414659:	xor    edx,eax
  41465b:	sub    ecx,edx
  41465d:	sub    ecx,esi
  41465f:	xor    ecx,eax
  414661:	mov    DWORD PTR [ebp+0x8],ecx
  414664:	mov    ecx,DWORD PTR [ebp+0x8]
  414667:	mov    edx,DWORD PTR [ebp-0x58]
  41466a:	add    ecx,0x5708f8
  414670:	imul   ecx,edx
  414673:	mov    DWORD PTR [ebp-0x58],ecx
  414676:	mov    ecx,DWORD PTR [ebp+0x8]
  414679:	mov    edx,DWORD PTR [ebp-0x54]
  41467c:	add    ecx,0x64f8da
  414682:	or     ecx,edx
  414684:	mov    DWORD PTR [ebp-0x54],ecx
  414687:	mov    ecx,DWORD PTR [ebp+0x8]
  41468a:	mov    edx,DWORD PTR [ebp-0x50]
  41468d:	add    ecx,0x242ebed
  414693:	xor    ecx,edx
  414695:	mov    DWORD PTR [ebp-0x50],ecx
  414698:	mov    ecx,DWORD PTR [ebp+0x8]
  41469b:	mov    edx,DWORD PTR [ebp-0x4c]
  41469e:	add    ecx,edi
  4146a0:	and    ecx,edx
  4146a2:	mov    DWORD PTR [ebp-0x4c],ecx
  4146a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4146a8:	mov    edx,DWORD PTR [ebp-0x48]
  4146ab:	lea    ecx,[edx+ecx*1+0x241fc1f]
  4146b2:	mov    DWORD PTR [ebp-0x48],ecx
  4146b5:	jmp    0x416a74
  4146ba:	sub    dl,BYTE PTR [esi]
  4146bc:	jg     0x41469d
  4146be:	imul   edi,DWORD PTR [ebx-0x76],0x7b
  4146c2:	stc    
  4146c3:	nop
  4146c4:	inc    esp
  4146c5:	sub    al,0xe2
  4146c7:	ins    BYTE PTR es:[edi],dx
  4146c8:	fs cs jo 0x41473f
  4146cc:	jp     0x414748
  4146ce:	fcomp  DWORD PTR [edi+0x7a]
  4146d1:	jp     0x414720
  4146d3:	int    0x5d
  4146d5:	xchg   ecx,eax
  4146d6:	pop    ebp
  4146d7:	jno    0x414731
  4146d9:	stc    
  4146da:	repz test al,0xf1
  4146dd:	sahf   
  4146de:	xchg   edi,eax
  4146df:	(bad)  [eax-0x49ead8fd]
  4146e5:	fcomp  st(4)
  4146e7:	and    ch,BYTE PTR ds:0x17cded24
  4146ed:	and    edi,ebp
  4146ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146f0:	fmul   st,st(0)
  4146f2:	lahf   
  4146f3:	jb     0x41471c
  4146f5:	gs movs DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4146f8:	sbb    al,0x3d
  4146fa:	push   edi
  4146fb:	pop    ecx
  4146fc:	int3   
  4146fd:	pop    es
  4146fe:	sub    al,0x7a
  414700:	iret   
  414701:	inc    edi
  414702:	sbb    al,0x29
  414704:	sbb    dl,BYTE PTR [eax+0x4057cd9d]
  41470a:	enter  0x45b5,0xba
  41470e:	iret   
  41470f:	dec    eax
  414710:	iret   
  414711:	out    dx,eax
  414712:	adc    al,0x4d
  414714:	out    0x22,al
  414716:	mov    ebx,0x77323e6c
  41471b:	sbb    ebx,DWORD PTR [ecx+ebx*4]
  41471e:	mov    dl,0xc9
  414720:	and    eax,0xcad11bef
  414725:	hlt    
  414726:	repz push edx
  414728:	(bad)  
  414729:	shl    ecx,1
  41472b:	cmp    esp,ebp
  41472d:	sub    DWORD PTR [ecx+0x1f],esp
  414730:	cmp    BYTE PTR [ebp-0xc],ah
  414733:	aad    0x84
  414735:	ss fyl2xp1 
  414738:	aad    0x93
  41473a:	mov    ebp,ebp
  41473c:	and    ecx,ecx
  41473e:	push   es
  41473f:	jge    0x41477f
  414741:	xchg   esp,eax
  414742:	rcr    DWORD PTR [eax-0x7e],1
  414745:	imul   ebp,DWORD PTR [edi-0x59742c1c],0xf7200a3f
  41474f:	fsubr  QWORD PTR [esi+0x76]
  414752:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414753:	mov    DWORD PTR [ecx],edx
  414755:	dec    ebp
  414756:	popa   
  414757:	sti    
  414758:	aad    0x28
  41475a:	mov    DWORD PTR [ebp+0x79],ebp
  41475d:	pusha  
  41475e:	loop   0x4146ea
  414760:	loop   0x41477b
  414762:	or     DWORD PTR [ebx+0x621984f1],esp
  414768:	imul   ebp,DWORD PTR [ebx-0xf1657f3],0xffffffc1
  41476f:	mov    ecx,DWORD PTR [esi+0x52]
  414772:	out    0xe2,al
  414774:	push   ss
  414775:	cwde   
  414776:	push   edx
  414777:	out    dx,al
  414778:	xchg   ecx,eax
  414779:	push   es
  41477a:	mov    edi,0x4116839
  41477f:	imul   esi,DWORD PTR [eax+eax*2],0x15
  414783:	or     BYTE PTR [edi+0x3670a0a3],0xcb
  41478a:	xchg   ebx,eax
  41478b:	mov    ebx,0x73dfa9e7
  414790:	sbb    esp,DWORD PTR [ebx-0x29]
  414793:	ret    
  414794:	cwde   
  414795:	scas   eax,DWORD PTR es:[edi]
  414796:	jae    0x4147b1
  414798:	stos   BYTE PTR es:[edi],al
  414799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41479a:	sub    eax,edx
  41479c:	(bad)  
  41479e:	add    BYTE PTR [ecx+0x684edbca],0x3a
  4147a5:	mov    dl,0x16
  4147a7:	nop
  4147a8:	jbe    0x4147d8
  4147aa:	lahf   
  4147ab:	inc    ebp
  4147ac:	mov    ah,0xb4
  4147ae:	jle    0x4147a6
  4147b0:	loopne 0x4147f0
  4147b2:	sbb    esi,DWORD PTR [ebp-0x7a4683ec]
  4147b8:	push   edi
  4147b9:	dec    ecx
  4147ba:	pop    edx
  4147bb:	scas   eax,DWORD PTR es:[edi]
  4147bc:	std    
  4147bd:	arpl   WORD PTR [edx+eiz*8-0x45],bp
  4147c1:	pop    es
  4147c2:	out    0x2d,eax
  4147c4:	inc    esp
  4147c5:	test   edi,esi
  4147c7:	(bad)  
  4147c8:	inc    edi
  4147c9:	jmp    0x41478e
  4147cb:	jle    0x4147af
  4147cd:	or     al,0x73
  4147cf:	lock sbb edi,DWORD PTR [ebp+0x4a2318c1]
  4147d6:	mov    al,0x4d
  4147d8:	pop    ebp
  4147d9:	fadd   QWORD PTR [edi+0x63d1677]
  4147df:	xchg   ebp,eax
  4147e0:	push   ecx
  4147e1:	jmp    0x4e3722c2
  4147e6:	inc    ecx
  4147e7:	xchg   ecx,eax
  4147e8:	int3   
  4147e9:	int    0x2a
  4147eb:	dec    ecx
  4147ec:	push   0xced38da6
  4147f1:	jl     0x41477b
  4147f3:	add    al,0xc
  4147f5:	cwde   
  4147f6:	dec    ecx
  4147f7:	aad    0x60
  4147f9:	mov    DWORD PTR [edx+eax*1+0x1c],ecx
  4147fd:	push   cs
  4147fe:	inc    ebp
  4147ff:	push   0x6fc022f0
  414804:	(bad)  
  414805:	jg     0x414876
  414807:	jle    0x4147ae
  414809:	xchg   esp,eax
  41480a:	sub    DWORD PTR [eax],ebx
  41480c:	pop    ebx
  41480d:	scas   eax,DWORD PTR es:[edi]
  41480e:	and    al,0xff
  414810:	iret   
  414811:	jecxz  0x414884
  414813:	mov    ds:0xd91a8db7,eax
  414818:	adc    bl,BYTE PTR [ecx+eax*2-0x68]
  41481c:	inc    esi
  41481d:	xchg   ecx,eax
  41481e:	adc    eax,0xb9bd2568
  414823:	stc    
  414824:	or     BYTE PTR [ebx-0x450c0b65],cl
  41482a:	dec    ebx
  41482b:	adc    al,BYTE PTR [eax+0x4354fc84]
  414831:	stos   DWORD PTR es:[edi],eax
  414832:	push   eax
  414833:	or     BYTE PTR [edi-0x4b0a8a05],dl
  414839:	stc    
  41483a:	cmc    
  41483b:	xchg   BYTE PTR [edx-0x6c1c33fd],ah
  414841:	scas   eax,DWORD PTR es:[edi]
  414842:	xor    al,0xc7
  414844:	mul    BYTE PTR [ecx]
  414846:	inc    edi
  414847:	xlat   BYTE PTR ds:[ebx]
  414848:	rcr    BYTE PTR [ebx+0x3c4bb57f],0x51
  41484f:	pop    es
  414850:	mov    edx,fs
  414852:	push   es
  414853:	dec    ebx
  414854:	cmp    BYTE PTR [esi+ecx*1],dh
  414857:	aaa    
  414858:	scas   al,BYTE PTR es:[edi]
  414859:	cmp    dl,BYTE PTR [ecx+0x3c86b84d]
  41485f:	jp     0x414822
  414861:	mov    esi,0x427f0fab
  414866:	ret    0x48b2
  414869:	or     dh,bl
  41486b:	xchg   esp,eax
  41486c:	xchg   ebp,eax
  41486d:	add    al,0x80
  41486f:	jle    0x4148ae
  414871:	lahf   
  414872:	sub    BYTE PTR [ebx+0x66],cl
  414875:	cmp    DWORD PTR [eax],0x2fe1a74c
  41487b:	pop    ds
  41487c:	in     eax,0x8a
  41487e:	in     al,0xce
  414880:	dec    ecx
  414881:	xor    eax,0x4187c401
  414886:	divps  xmm6,XMMWORD PTR [esp+ecx*1-0x5534bd14]
  41488e:	mov    bl,0xe5
  414890:	fwait
  414891:	mov    bl,0xbc
  414893:	mov    ecx,0x2ea48917
  414898:	or     ah,0x67
  41489b:	call   0x98608490
  4148a0:	or     BYTE PTR [ebx+0x69d36441],al
  4148a6:	pop    eax
  4148a7:	mov    es,WORD PTR [ebp+0x61]
  4148aa:	scas   al,BYTE PTR es:[edi]
  4148ab:	push   0x67fb8c04
  4148b0:	mov    ch,bh
  4148b2:	les    ebp,FWORD PTR [ebx]
  4148b4:	and    DWORD PTR [edi],ecx
  4148b6:	es sti 
  4148b8:	inc    esp
  4148b9:	push   ebp
  4148ba:	inc    ecx
  4148bb:	imul   eax,ebp,0xffffff92
  4148be:	mov    al,0xd5
  4148c0:	mov    bl,0x77
  4148c2:	xchg   esp,eax
  4148c3:	jne    0x414865
  4148c5:	push   eax
  4148c6:	xchg   esi,eax
  4148c7:	xchg   ecx,eax
  4148c8:	sbb    edi,DWORD PTR [edi+ecx*4-0x23047fa2]
  4148cf:	das    
  4148d0:	fldcw  WORD PTR ds:0x13fa968a
  4148d6:	gs clc 
  4148d8:	aad    0x65
  4148da:	xchg   DWORD PTR [ecx+0x71],edx
  4148dd:	dec    edx
  4148de:	pushf  
  4148df:	cmp    edx,DWORD PTR ds:0x253399ee
  4148e5:	push   ss
  4148e6:	imul   eax,DWORD PTR [ecx],0xffffffd2
  4148e9:	aad    0x36
  4148eb:	mov    ecx,DWORD PTR [ebx]
  4148ed:	in     eax,0x7b
  4148ef:	mov    esi,0x86b3c0a2
  4148f4:	xchg   ebx,eax
  4148f5:	(bad)  
  4148f6:	fs aam 0x80
  4148f9:	jb     0x41491c
  4148fb:	sub    BYTE PTR [esi],ah
  4148fd:	mov    WORD PTR [esi-0x66c3aeb3],?
  414903:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414904:	xchg   edi,eax
  414905:	leave  
  414906:	je     0x4148fc
  414908:	mov    esi,0xc55c7171
  41490d:	daa    
  41490e:	ficomp WORD PTR ds:0x6b384f0
  414914:	cmp    al,0x9
  414916:	sti    
  414917:	fimul  DWORD PTR [edi+0x25]
  41491a:	mov    dl,0xb6
  41491c:	fcom   QWORD PTR [ebp-0xc1b10f1]
  414922:	pop    edx
  414923:	pop    ss
  414924:	mov    bl,0xbb
  414926:	sbb    ebp,DWORD PTR [eax+0x3f9483a9]
  41492c:	mov    esi,0x6185f78a
  414931:	push   DWORD PTR [eax-0x468f335e]
  414937:	push   ss
  414938:	inc    edx
  414939:	pusha  
  41493a:	jbe    0x41495e
  41493c:	test   al,0xce
  41493e:	mov    esp,0x2b757144
  414943:	(bad)  
  414944:	xchg   edi,eax
  414945:	inc    edx
  414946:	cs mov ch,0x80
  414949:	mov    ah,0x11
  41494b:	push   ecx
  41494c:	fdivr  DWORD PTR [edi]
  41494e:	sar    edi,1
  414950:	retf   0xb40f
  414953:	fdivrp st(4),st
  414955:	pop    ds
  414956:	mov    esp,0xad87ef77
  41495b:	hlt    
  41495c:	stc    
  41495d:	cdq    
  41495e:	(bad)  
  41495f:	in     eax,dx
  414960:	dec    eax
  414961:	xchg   edi,eax
  414962:	outs   dx,DWORD PTR ds:[esi]
  414963:	xchg   ecx,eax
  414964:	repnz ror DWORD PTR [ebx+ebx*2-0x588d1400],1
  41496c:	je     0x41497b
  41496e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41496f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414970:	ins    DWORD PTR es:[edi],dx
  414971:	xchg   bp,ax
  414973:	inc    edi
  414974:	loop   0x41492f
  414976:	mov    ds:0x34945fdf,al
  41497b:	jmp    0x79ccdaa2
  414980:	aad    0x4a
  414982:	pop    ebx
  414983:	cmc    
  414984:	repz das 
  414986:	ret    
  414987:	shl    dl,0xe3
  41498a:	ja     0x4149e4
  41498c:	mov    ebx,0x8b049d7b
  414991:	out    dx,eax
  414992:	sub    edx,ebx
  414994:	lods   eax,DWORD PTR ds:[esi]
  414995:	add    ebx,DWORD PTR [esi+0x6484325d]
  41499b:	jno    0x4149bf
  41499d:	xor    DWORD PTR [edx-0x1c],ebp
  4149a0:	mov    bl,BYTE PTR [ebx-0x71a13747]
  4149a6:	jle    0x4149b9
  4149a8:	mov    esi,0xa62c14b2
  4149ad:	add    al,0x21
  4149af:	hlt    
  4149b0:	xchg   edx,eax
  4149b1:	pop    esp
  4149b2:	xchg   ebp,eax
  4149b3:	dec    edx
  4149b4:	es inc eax
  4149b6:	jne    0x414945
  4149b8:	and    DWORD PTR [eax+ebp*4-0x7cfa0d6e],0x120a59c3
  4149c3:	xor    DWORD PTR [esi+0x45],0x41
  4149c7:	sub    eax,0xfb2805d4
  4149cc:	push   ebx
  4149cd:	iret   
  4149ce:	fnstenv [esi]
  4149d0:	push   0x24ef747a
  4149d5:	push   edx
  4149d6:	test   BYTE PTR [ecx+eax*8-0x78cc682e],cl
  4149dd:	js     0x4149fc
  4149df:	sbb    al,0x82
  4149e1:	je     0x4149d0
  4149e3:	into   
  4149e4:	(bad)  
  4149e5:	mov    esp,0xf368118
  4149ea:	bnd jle 0x4149d1
  4149ed:	sbb    ebp,ecx
  4149ef:	bound  di,DWORD PTR [ecx]
  4149f2:	icebp  
  4149f3:	fwait
  4149f4:	xchg   ebx,eax
  4149f5:	dec    esp
  4149f6:	push   ecx
  4149f7:	retf   0x3f7
  4149fa:	hlt    
  4149fb:	fild   DWORD PTR [ebx+0x4e]
  4149fe:	cmc    
  4149ff:	add    BYTE PTR [eax],bl
  414a01:	cmp    cx,bp
  414a04:	imul   edx,DWORD PTR [esi+0x1c],0x2f
  414a08:	push   ds
  414a09:	sub    eax,0x669bf965
  414a0e:	fistp  DWORD PTR [edx-0x31]
  414a11:	and    al,BYTE PTR [ebx+0xa2d479b]
  414a17:	in     eax,0xc4
  414a19:	in     al,dx
  414a1a:	das    
  414a1b:	mov    ecx,0x858d60f5
  414a20:	data16 fbstp TBYTE PTR [edi+0x1f]
  414a24:	ja     0x414a98
  414a26:	mov    al,0x55
  414a28:	jp     0x414a29
  414a2a:	ror    BYTE PTR [edx-0x63],cl
  414a2d:	sub    eax,0xe949c6c3
  414a32:	xor    DWORD PTR [esi+eiz*4],0x716856bd
  414a39:	push   edi
  414a3a:	icebp  
  414a3b:	jmp    0x8ae8fc23
  414a40:	not    BYTE PTR [eax+0x5d]
  414a43:	dec    ebx
  414a44:	leave  
  414a45:	cmp    bl,BYTE PTR [edx]
  414a47:	cmp    eax,0xbca9d372
  414a4c:	mov    gs,eax
  414a4e:	xchg   ebp,eax
  414a4f:	scas   eax,DWORD PTR es:[edi]
  414a50:	push   es
  414a51:	push   es
  414a52:	mov    dl,0xd9
  414a54:	mov    ch,0x1a
  414a56:	lds    esp,FWORD PTR [ebp-0x66]
  414a59:	scas   eax,DWORD PTR es:[edi]
  414a5a:	xchg   ebp,eax
  414a5b:	call   0x387f:0x2bd9626e
  414a62:	pop    edi
  414a63:	sub    esp,DWORD PTR [esi-0x1d]
  414a66:	imul   esi,DWORD PTR [ecx],0xe5e8c513
  414a6c:	sbb    ch,cl
  414a6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a6f:	inc    edi
  414a70:	mov    ch,0x8e
  414a72:	iret   
  414a73:	ja     0x414a09
  414a75:	nop
  414a76:	mov    ds:0xcb7f04ec,eax
  414a7b:	aas    
  414a7c:	adc    esi,esp
  414a7e:	into   
  414a7f:	mov    ds:0x844abce2,al
  414a84:	mov    WORD PTR [eax-0x13],cs
  414a87:	dec    ecx
  414a88:	scas   eax,DWORD PTR es:[edi]
  414a89:	rcl    DWORD PTR [edx-0x41754ab9],0x5a
  414a90:	jbe    0x414a28
  414a92:	mov    DWORD PTR ds:0x62043603,esi
  414a98:	(bad)  [edi+0x73a4ded]
  414a9e:	xchg   esi,eax
  414a9f:	out    dx,eax
  414aa0:	or     DWORD PTR [ebx],edi
  414aa2:	cwde   
  414aa3:	ss pop esp
  414aa5:	mov    ecx,0x1aea1d23
  414aaa:	cmp    al,BYTE PTR [ebx]
  414aac:	ins    DWORD PTR es:[edi],dx
  414aad:	dec    ecx
  414aae:	mov    WORD PTR [edi-0x37],gs
  414ab1:	adc    bh,BYTE PTR [edi]
  414ab3:	or     ebp,DWORD PTR [edx+0x5a]
  414ab6:	leave  
  414ab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ab8:	sbb    BYTE PTR [ecx-0x2e],dl
  414abb:	loop   0x414b2e
  414abd:	adc    eax,0xb42e76a9
  414ac2:	je     0x414b02
  414ac4:	push   eax
  414ac5:	aaa    
  414ac6:	in     eax,dx
  414ac7:	enter  0xca22,0xce
  414acb:	out    0xd0,al
  414acd:	jmp    0x414b15
  414acf:	cmc    
  414ad0:	adc    ebx,DWORD PTR [bp+si+0x703a]
  414ad5:	jnp    0x2f37da23
  414adb:	arpl   WORD PTR [edi],bx
  414add:	and    esi,DWORD PTR [ebp-0x14]
  414ae0:	(bad)  [edx+0x142d96ff]
  414ae6:	idiv   DWORD PTR [esi+edx*1-0x3]
  414aea:	aam    0x48
  414aec:	in     eax,0xa8
  414aee:	dec    esi
  414aef:	sbb    esi,DWORD PTR [edi]
  414af1:	int    0x8d
  414af3:	jnp    0x414aac
  414af5:	js     0x414a88
  414af7:	xor    ebp,DWORD PTR [esp+ecx*1+0x58a271ea]
  414afe:	dec    esp
  414aff:	push   esi
  414b00:	(bad)  
  414b01:	dec    edi
  414b02:	mov    ebp,0xa1640925
  414b07:	pop    DWORD PTR [ecx+0xf]
  414b0a:	jl     0x414ade
  414b0c:	cs scas ax,WORD PTR es:[edi]
  414b0f:	jecxz  0x414b57
  414b11:	aaa    
  414b12:	and    al,0x4e
  414b14:	lods   al,BYTE PTR ds:[esi]
  414b15:	dec    esi
  414b16:	stos   DWORD PTR es:[edi],eax
  414b17:	and    al,0x4d
  414b19:	push   eax
  414b1a:	push   esp
  414b1b:	mov    esi,0x3cdf1da5
  414b20:	xor    ecx,DWORD PTR [eax+ecx*2]
  414b23:	jbe    0x414b79
  414b25:	stc    
  414b26:	dec    eax
  414b27:	jecxz  0x414af6
  414b29:	mov    BYTE PTR [eax+0x28aa8a81],0x78
  414b30:	pop    ds
  414b31:	mov    ds:0xc047ad30,al
  414b36:	stc    
  414b37:	xor    BYTE PTR [edi],al
  414b39:	cld    
  414b3a:	ins    DWORD PTR es:[edi],dx
  414b3b:	xor    al,0x68
  414b3d:	(bad)  
  414b3e:	push   edi
  414b3f:	xlat   BYTE PTR ds:[ebx]
  414b40:	xor    BYTE PTR [edi],ah
  414b42:	push   esp
  414b43:	test   eax,0x46160dad
  414b48:	mov    DWORD PTR [esi-0x4a],ecx
  414b4b:	aas    
  414b4c:	(bad)  
  414b4d:	fiadd  WORD PTR [edx-0x56]
  414b50:	sub    eax,0x2bf83833
  414b55:	jmp    0x414bc9
  414b57:	test   DWORD PTR [edx+0x61],0x18ff24a2
  414b5e:	repz mov ds:0xff7c683e,al
  414b64:	aas    
  414b65:	sti    
  414b66:	adc    al,0xb0
  414b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b69:	mov    esi,0xe2e5f1d4
  414b6e:	sub    DWORD PTR [edx],0xe8f8fc0f
  414b74:	mov    ecx,0x5ace410c
  414b79:	iret   
  414b7a:	mov    eax,0xbd1d0d67
  414b7f:	in     eax,0x6e
  414b81:	mov    edi,0x540306af
  414b86:	sbb    esi,DWORD PTR [esi-0x2a]
  414b89:	test   DWORD PTR ds:0xb8d61403,esi
  414b8f:	xchg   DWORD PTR [ebp-0x1052a3ce],ebx
  414b95:	iret   
  414b96:	jle    0x414c0d
  414b98:	cdq    
  414b99:	js     0x414b57
  414b9b:	(bad)  
  414b9c:	adc    ch,bl
  414b9e:	lahf   
  414b9f:	pusha  
  414ba0:	mov    edx,0xde47fc8b
  414ba5:	test   al,0xd2
  414ba7:	inc    edx
  414ba8:	xor    WORD PTR [esi],si
  414bab:	ret    0x7b9c
  414bae:	add    eax,0xd72a42ea
  414bb3:	inc    edx
  414bb4:	test   al,0x83
  414bb6:	xor    DWORD PTR [eax+0x2c],ebp
  414bb9:	es shl ebx,cl
  414bbc:	dec    ecx
  414bbd:	pushf  
  414bbe:	std    
  414bbf:	xchg   esp,eax
  414bc0:	jle    0x414bbd
  414bc2:	call   0x56c7:0xdbfff142
  414bc9:	add    eax,0xac2b5e14
  414bce:	cmc    
  414bcf:	scas   eax,DWORD PTR es:[edi]
  414bd0:	jg     0x414bb6
  414bd2:	mov    cl,BYTE PTR [ebp-0x2e07cfd2]
  414bd8:	xchg   edx,eax
  414bd9:	retf   
  414bda:	imul   eax,DWORD PTR fs:[ebx],0xa84191c
  414be1:	or     edi,ebx
  414be3:	mov    esp,0x947ef827
  414be8:	lock push eax
  414bea:	lahf   
  414beb:	imul   edx,DWORD PTR [ebp+0x25b828d1],0x96c46b11
  414bf5:	fwait
  414bf6:	xchg   esp,eax
  414bf7:	mov    cl,0x94
  414bf9:	lds    ebp,FWORD PTR [ebp+0x5f]
  414bfc:	and    al,ah
  414bfe:	inc    ebp
  414bff:	ja     0x414b87
  414c01:	sub    eax,0x5d72480a
  414c06:	mov    ebp,0xb0b04e05
  414c0b:	je     0x414c45
  414c0d:	ret    0x78a
  414c10:	jl     0x414c3e
  414c12:	mov    WORD PTR [ebx+0x6df0e113],ss
  414c18:	mov    al,ds:0xfa99bc52
  414c1d:	jp     0x414be0
  414c1f:	(bad)  
  414c20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c21:	push   edx
  414c22:	test   al,0x60
  414c24:	addr16 popa 
  414c26:	and    DWORD PTR [ecx-0x4a],esi
  414c29:	xchg   edx,eax
  414c2a:	pusha  
  414c2b:	push   0xf
  414c2d:	(bad)  
  414c2e:	sysenter 
  414c30:	fwait
  414c31:	mov    esp,0xcd9d34c7
  414c36:	mov    edi,0xadfcd73c
  414c3b:	pop    ss
  414c3c:	mov    ds:0x7506aae3,al
  414c41:	repz mov ds,edx
  414c44:	lods   al,BYTE PTR ds:[esi]
  414c45:	fidivr DWORD PTR [esi]
  414c47:	add    DWORD PTR [edi-0x52],edi
  414c4a:	mov    dh,0x4a
  414c4c:	pop    es
  414c4d:	adc    ecx,ebp
  414c4f:	and    DWORD PTR [eax-0x7311d816],eax
  414c55:	mov    bh,0x18
  414c57:	or     al,0xd1
  414c59:	or     al,0x32
  414c5b:	idiv   DWORD PTR [ecx+0x7879c616]
  414c61:	imul   ebx,esp,0xf7a10fc3
  414c67:	add    edi,eax
  414c69:	xlat   BYTE PTR ds:[ebx]
  414c6a:	sub    dl,0x81
  414c6d:	(bad)  
  414c6e:	push   ebx
  414c6f:	push   ds
  414c70:	cmp    DWORD PTR [esp+ebx*2],edx
  414c73:	outs   dx,DWORD PTR ds:[esi]
  414c74:	pop    esp
  414c75:	daa    
  414c76:	gs push ecx
  414c78:	enter  0x7c69,0xb4
  414c7c:	add    esp,DWORD PTR [edi-0x18d95916]
  414c82:	fwait
  414c83:	jg     0x414d04
  414c85:	ins    BYTE PTR es:[edi],dx
  414c86:	bound  ebp,QWORD PTR [esi+0x1f5ab16d]
  414c8c:	aas    
  414c8d:	sub    BYTE PTR [edx],ah
  414c8f:	add    eax,0xed331b96
  414c94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c95:	adc    BYTE PTR [edi+edi*1],bl
  414c98:	pop    esp
  414c99:	pushf  
  414c9a:	mov    ds:0x41154c89,al
  414c9f:	sti    
  414ca0:	and    BYTE PTR [ebx],0xd7
  414ca3:	out    dx,al
  414ca4:	add    ah,BYTE PTR [ecx-0x606a2c2a]
  414caa:	mov    ebx,0x8e6131ee
  414caf:	es cmp dl,dl
  414cb2:	mov    ds:0x5b57b4ca,eax
  414cb7:	fs mov ch,0x1c
  414cba:	cwde   
  414cbb:	xchg   edi,eax
  414cbc:	dec    ecx
  414cbd:	jp     0x414c5b
  414cbf:	xchg   ebp,eax
  414cc0:	das    
  414cc1:	(bad)  
  414cc2:	and    dh,BYTE PTR [edx]
  414cc4:	leave  
  414cc5:	pop    ds
  414cc6:	jmp    DWORD PTR [edx-0xe]
  414cc9:	mov    WORD PTR [ecx+0x20],cs
  414ccc:	ret    0x21b5
  414ccf:	aam    0xc4
  414cd1:	push   es
  414cd2:	mov    ch,0x5b
  414cd4:	xor    BYTE PTR [ebx],0xdc
  414cd7:	clc    
  414cd8:	push   0xffffffd0
  414cda:	(bad)  
  414cdb:	and    al,0xbf
  414cdd:	dec    BYTE PTR [edi+eax*2+0x5133e4eb]
  414ce4:	out    dx,eax
  414ce5:	leave  
  414ce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ce7:	cmp    esi,eax
  414ce9:	adc    eax,0x446d4853
  414cee:	xor    eax,0xb26c62d9
  414cf3:	out    dx,eax
  414cf4:	pop    ebx
  414cf5:	pop    ds
  414cf6:	xchg   edi,eax
  414cf7:	test   eax,0x2bb69e1b
  414cfc:	(bad)
  414d00:	std    
  414d01:	ud2    
  414d03:	add    BYTE PTR [ebp-0x5e],al
  414d06:	call   FWORD PTR [ebx]
  414d08:	call   0xb3209867
  414d0d:	test   al,0x3c
  414d0f:	xchg   edi,eax
  414d10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d11:	in     al,0xb7
  414d13:	jbe    0x414cb8
  414d15:	inc    ebx
  414d16:	sbb    esp,eax
  414d18:	out    0xbb,al
  414d1a:	in     eax,0xd5
  414d1c:	pop    edx
  414d1d:	or     ecx,ecx
  414d1f:	std    
  414d20:	push   ss
  414d21:	scas   al,BYTE PTR es:[edi]
  414d22:	cs loopne 0x414d09
  414d25:	hlt    
  414d26:	call   0x7fd5:0x496444c4
  414d2d:	pop    ebp
  414d2e:	ds repnz popa 
  414d31:	rcl    BYTE PTR [eax+0x5102afd7],1
  414d37:	pushf  
  414d38:	and    al,0xaa
  414d3a:	cmc    
  414d3b:	retf   
  414d3c:	cmc    
  414d3d:	sbb    BYTE PTR [eax-0x3c],al
  414d40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d41:	adc    esi,eax
  414d43:	outs   dx,BYTE PTR ds:[esi]
  414d44:	cmp    eax,DWORD PTR [ebx-0x657d7c5b]
  414d4a:	push   ds
  414d4b:	ret    
  414d4c:	mov    al,0x3f
  414d4e:	outs   dx,WORD PTR ds:[esi]
  414d50:	xor    ebp,ebx
  414d52:	mov    bl,0x29
  414d54:	jecxz  0x414d52
  414d56:	mov    edi,0x1bf4069b
  414d5b:	jmp    0xf6436c4d
  414d60:	mov    ebx,0x7632f572
  414d65:	pop    esp
  414d66:	inc    ebp
  414d67:	lods   eax,DWORD PTR ds:[esi]
  414d68:	or     eax,0xb59f55b4
  414d6d:	retf   0x3881
  414d70:	call   0x291:0x41ff7cd6
  414d77:	sub    DWORD PTR [esi],eax
  414d79:	add    dl,cl
  414d7b:	test   bh,bl
  414d7d:	cmp    dl,BYTE PTR [ebx+0x77]
  414d80:	or     eax,0x32f8448d
  414d85:	scas   al,BYTE PTR es:[edi]
  414d86:	dec    eax
  414d87:	jle    0x414d2c
  414d89:	loop   0x414d65
  414d8b:	jle    0x414d7c
  414d8d:	out    dx,al
  414d8e:	ins    DWORD PTR es:[edi],dx
  414d8f:	rcl    esi,0xe0
  414d92:	aad    0x87
  414d94:	(bad)
  414d98:	leave  
  414d99:	xor    ebp,DWORD PTR [edi-0x4f]
  414d9c:	sti    
  414d9d:	inc    esp
  414d9e:	add    eax,0xe285724d
  414da3:	les    ebx,FWORD PTR [esi]
  414da5:	push   esi
  414da6:	pop    ds
  414da7:	pop    esi
  414da8:	mov    ebp,0xd3072e40
  414dad:	mov    edi,0xdc4f76d2
  414db2:	and    bh,BYTE PTR [eax-0x65b58503]
  414db8:	into   
  414db9:	(bad)  
  414dba:	mov    WORD PTR [ecx-0x57d65fb5],es
  414dc0:	pop    ds
  414dc1:	sbb    eax,0x6d22a646
  414dc6:	cmp    eax,DWORD PTR [eax+0x2]
  414dc9:	out    dx,al
  414dca:	pop    eax
  414dcb:	in     eax,0x5c
  414dcd:	std    
  414dce:	xor    DWORD PTR [esi],edx
  414dd0:	xor    al,BYTE PTR [edx-0xaa7ba65]
  414dd6:	in     al,dx
  414dd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dd8:	mov    ds:0xb3d6d512,al
  414ddd:	(bad)  
  414dde:	mov    esi,0xf0c2292
  414de3:	int    0x85
  414de5:	or     bh,BYTE PTR [edi+ecx*1-0x2cad4e6d]
  414dec:	mov    BYTE PTR ds:0x5de47087,bh
  414df2:	and    BYTE PTR [eax],dh
  414df4:	adc    cl,BYTE PTR [esi+0x72]
  414df7:	dec    edi
  414df8:	out    0x83,al
  414dfa:	out    0xf4,eax
  414dfc:	imul   ebp,ebx,0x1e
  414dff:	gs repnz mov esi,0xbccc4caf
  414e06:	cli    
  414e07:	jmp    0x414dfa
  414e09:	call   0x2cd9:0x768997a2
  414e10:	retf   0x41cf
  414e13:	jmp    0xeaf1cac2
  414e18:	fistp  DWORD PTR [ebp+0x7bad4c75]
  414e1e:	shl    BYTE PTR [ebp+0x155a35e5],1
  414e24:	cdq    
  414e25:	aaa    
  414e26:	test   BYTE PTR [edx+0xe964df3],0xff
  414e2d:	inc    edx
  414e2e:	out    0x5c,eax
  414e30:	xor    BYTE PTR [edi-0x49],al
  414e33:	(bad)  
  414e34:	int3   
  414e35:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  414e37:	jbe    0x414e3b
  414e39:	xchg   edx,eax
  414e3a:	sti    
  414e3b:	jne    0x414dce
  414e3d:	(bad)
  414e41:	and    dh,BYTE PTR [esi+0x3b]
  414e44:	scas   al,BYTE PTR es:[edi]
  414e45:	ins    DWORD PTR es:[edi],dx
  414e46:	stos   BYTE PTR es:[edi],al
  414e47:	fdiv   QWORD PTR [edi-0x2b3577eb]
  414e4d:	jle    0x414e7d
  414e4f:	push   0x1d84883b
  414e54:	lods   eax,DWORD PTR ds:[esi]
  414e55:	inc    edi
  414e56:	dec    esp
  414e57:	into   
  414e58:	aaa    
  414e59:	pop    ebx
  414e5a:	enter  0x2049,0x35
  414e5e:	cmp    DWORD PTR [edx],esp
  414e60:	jo     0x414e93
  414e62:	and    ecx,ecx
  414e64:	das    
  414e65:	out    0xbd,eax
  414e67:	dec    ebx
  414e68:	and    DWORD PTR [edi+0x5d],edx
  414e6b:	lods   eax,DWORD PTR ds:[esi]
  414e6c:	test   DWORD PTR [edx+ecx*1],ebp
  414e6f:	mov    ch,0xb0
  414e71:	xor    eax,0x2f9eeaf3
  414e76:	or     al,0xa8
  414e78:	mov    edx,0xcada618c
  414e7d:	jbe    0x414eac
  414e7f:	inc    edx
  414e80:	ins    DWORD PTR es:[edi],dx
  414e81:	repz add al,0xf6
  414e84:	adc    eax,0xc24e6450
  414e89:	xor    ebp,edi
  414e8b:	fcom   QWORD PTR ds:0xefd57143
  414e91:	xor    BYTE PTR [eax-0x280506bd],ah
  414e97:	aam    0x93
  414e99:	pop    ebp
  414e9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e9b:	or     eax,DWORD PTR [esi+0x10a05759]
  414ea1:	aam    0xa9
  414ea3:	(bad)  
  414ea4:	and    BYTE PTR [esi-0x57],dh
  414ea7:	stos   BYTE PTR es:[edi],al
  414ea8:	inc    esp
  414ea9:	ret    0x10d3
  414eac:	inc    esp
  414ead:	push   0x1c
  414eaf:	inc    DWORD PTR [esp+edi*4+0xbab3093]
  414eb6:	cli    
  414eb7:	lahf   
  414eb8:	sub    BYTE PTR [ebp+0x60b9bb9b],0xd7
  414ebf:	dec    ebp
  414ec0:	lods   eax,DWORD PTR ds:[esi]
  414ec1:	fs (bad) 
  414ec3:	fdiv   st,st(0)
  414ec5:	sub    DWORD PTR [ecx+0x7ec6f766],ecx
  414ecb:	cmp    BYTE PTR [edx-0x5d08dfd8],ah
  414ed1:	std    
  414ed2:	or     ebp,DWORD PTR [edx-0x2a0fe1ef]
  414ed8:	cmp    al,0xad
  414eda:	mov    edx,0x8357ef63
  414edf:	ds ja  0x414f2c
  414ee2:	xchg   edx,eax
  414ee3:	je     0x414ef5
  414ee5:	push   ecx
  414ee6:	cld    
  414ee7:	pop    eax
  414ee8:	cmc    
  414ee9:	and    BYTE PTR [edi+eiz*2],cl
  414eec:	loop   0x414edd
  414eee:	add    eax,ebp
  414ef0:	push   cs
  414ef1:	rcr    DWORD PTR [edi-0x7],cl
  414ef4:	cdq    
  414ef5:	out    dx,al
  414ef6:	push   edi
  414ef7:	sbb    edi,DWORD PTR [ecx+edx*2-0x4]
  414efb:	push   es
  414efc:	cmc    
  414efd:	or     eax,0xafb4abe4
  414f02:	cld    
  414f03:	shr    BYTE PTR [edx],1
  414f05:	sar    DWORD PTR [ebp+0x3efbb4c9],cl
  414f0b:	pop    eax
  414f0c:	push   0xe616d5b2
  414f11:	add    eax,0x4f7febe0
  414f16:	add    eax,0x482fad4b
  414f1b:	dec    DWORD PTR [edi+edi*1]
  414f1e:	(bad)  
  414f1f:	(bad)  
  414f22:	rcr    dl,1
  414f24:	push   ebp
  414f25:	pop    ebx
  414f26:	ins    BYTE PTR es:[edi],dx
  414f27:	pop    es
  414f28:	pusha  
  414f29:	xor    bl,al
  414f2b:	dec    eax
  414f2c:	dec    eax
  414f2d:	cdq    
  414f2e:	sbb    ebx,DWORD PTR [edx]
  414f30:	std    
  414f31:	std    
  414f32:	push   ss
  414f33:	and    DWORD PTR [edi],esp
  414f35:	cmp    BYTE PTR [edi-0x62],bh
  414f38:	jecxz  0x414f9b
  414f3a:	pop    edx
  414f3b:	call   0x9fb6:0x303ecf75
  414f42:	ss jo  0x414f86
  414f45:	xchg   edi,eax
  414f46:	xchg   esi,eax
  414f47:	inc    ebx
  414f48:	in     eax,dx
  414f49:	xchg   ebx,eax
  414f4a:	aaa    
  414f4b:	and    bl,BYTE PTR [ebx+0x516597af]
  414f51:	ds adc al,0xd0
  414f54:	or     BYTE PTR [ebp-0x57ce023c],bh
  414f5a:	retf   0x39e9
  414f5d:	stos   DWORD PTR es:[edi],eax
  414f5e:	fld    st(7)
  414f60:	sbb    edi,ebx
  414f62:	gs ja  0x414f3b
  414f65:	pop    ebp
  414f66:	dec    esp
  414f67:	rol    DWORD PTR [eax-0xa],1
  414f6a:	mov    ?,WORD PTR [edx+0x8]
  414f6d:	out    0xb,al
  414f6f:	add    al,0xe
  414f71:	sbb    edi,DWORD PTR [ecx]
  414f73:	ror    DWORD PTR [esi+0x5e],cl
  414f76:	add    edx,esp
  414f78:	jae    0x414fec
  414f7a:	cld    
  414f7b:	pop    esi
  414f7c:	call   0xb5229d42
  414f81:	mov    ebp,0xa2f1860e
  414f86:	xor    eax,DWORD PTR [esi+0x751c9719]
  414f8c:	(bad)  
  414f8d:	rol    BYTE PTR [edi],1
  414f8f:	fnop   
  414f91:	mov    edx,0xcc7aa2c4
  414f96:	sub    eax,0x57e5a680
  414f9b:	mov    ebx,DWORD PTR ss:[ebx-0x68]
  414f9f:	mov    eax,ds:0x9b97aa2f
  414fa4:	mov    al,0xf
  414fa6:	push   ds
  414fa7:	jno    0x414f85
  414fa9:	stos   DWORD PTR es:[edi],eax
  414faa:	shl    BYTE PTR [edi-0x37],cl
  414fad:	mov    cl,0x78
  414faf:	in     eax,dx
  414fb0:	cdq    
  414fb1:	push   DWORD PTR fs:[ecx-0x55]
  414fb5:	pop    es
  414fb6:	loope  0x414f48
  414fb8:	pop    ebp
  414fb9:	retf   0x9eb3
  414fbc:	repnz mov bl,0x40
  414fbf:	inc    esp
  414fc0:	clc    
  414fc1:	cdq    
  414fc2:	cmp    eax,0x3347d23d
  414fc7:	inc    ebx
  414fc8:	adc    DWORD PTR [edi-0x1335c6f7],ebx
  414fce:	cmp    esi,DWORD PTR [edi+0x39345f8b]
  414fd4:	xor    DWORD PTR [edx-0x22],esi
  414fd7:	push   edi
  414fd8:	jge    0x57ae4ff2
  414fde:	pop    ecx
  414fdf:	dec    ebx
  414fe0:	dec    ebp
  414fe1:	sbb    ch,cl
  414fe3:	pushf  
  414fe4:	add    bl,BYTE PTR [esi-0x5991cc2c]
  414fea:	call   0xdc70:0xaf0d581d
  414ff1:	jne    0x414fe2
  414ff3:	(bad)  
  414ff5:	pop    esp
  414ff6:	std    
  414ff7:	cmp    BYTE PTR [eax-0x5d398aa0],dh
  414ffd:	dec    esp
  414ffe:	pop    ecx
  414fff:	fst    QWORD PTR [ebx+0x61]
  415002:	push   es
  415003:	xor    DWORD PTR [eax+0x5d],edx
  415006:	jp     0x415002
  415008:	leave  
  415009:	cli    
  41500a:	hlt    
  41500b:	call   0x481413c3
  415010:	and    ebx,DWORD PTR [ebx-0x18]
  415013:	jp     0x415005
  415015:	cmp    cl,ch
  415017:	jnp    0x41504b
  415019:	inc    edx
  41501a:	mov    dh,BYTE PTR [edx]
  41501c:	mov    eax,ds:0xf852f5dd
  415021:	retf   0x588
  415024:	xchg   ebx,eax
  415025:	stos   BYTE PTR es:[edi],al
  415026:	jecxz  0x414fc9
  415028:	cdq    
  415029:	out    dx,al
  41502a:	sbb    BYTE PTR [edx+edx*4],0xeb
  41502e:	or     esp,esp
  415030:	mov    al,ds:0x1fc61e
  415035:	stc    
  415036:	inc    ecx
  415037:	xchg   ebx,eax
  415038:	or     al,0x11
  41503a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41503b:	iret   
  41503c:	dec    ebp
  41503d:	push   ebx
  41503e:	add    dh,BYTE PTR cs:[ecx]
  415041:	test   eax,0xba9eea75
  415046:	ds mov dl,0x3c
  415049:	call   0x16439080
  41504e:	push   ds
  41504f:	adc    al,0xfc
  415051:	or     BYTE PTR [esi-0x77],dl
  415054:	push   ss
  415055:	mov    dl,0x94
  415057:	fwait
  415058:	test   DWORD PTR [esi],esi
  41505a:	push   esi
  41505b:	ror    DWORD PTR [esi-0x63],1
  41505e:	xlat   BYTE PTR ds:[ebx]
  41505f:	into   
  415060:	ja     0x415035
  415062:	in     al,0xf3
  415064:	out    0xae,eax
  415066:	lods   al,BYTE PTR ds:[esi]
  415067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415068:	sub    ebp,ebx
  41506a:	dec    ebp
  41506b:	mov    al,0x9
  41506d:	or     edi,edx
  41506f:	xchg   ecx,eax
  415070:	dec    edx
  415071:	mov    cl,al
  415073:	or     eax,0xb33949c8
  415078:	pop    edi
  415079:	call   0x652b9a80
  41507e:	(bad)  
  41507f:	sub    ah,dh
  415081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415082:	(bad)  
  415083:	rcr    DWORD PTR [edx-0x3b2bf6c9],cl
  415089:	lods   al,BYTE PTR ds:[esi]
  41508a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41508b:	sahf   
  41508c:	mov    eax,0xb109d8f8
  415091:	mov    bl,0xf3
  415093:	cmp    al,0xa
  415095:	and    BYTE PTR [eax+0x4b],ch
  415098:	jl     0x4150ec
  41509a:	sar    DWORD PTR [eax-0x7c910add],cl
  4150a0:	std    
  4150a1:	mov    ah,0x26
  4150a3:	sub    al,0x91
  4150a5:	in     al,dx
  4150a6:	xor    ecx,DWORD PTR [edi]
  4150a8:	popa   
  4150a9:	xchg   ebx,eax
  4150aa:	in     eax,dx
  4150ab:	mov    ebp,0x34ac90b8
  4150b0:	mov    dl,0x89
  4150b2:	ret    
  4150b3:	scas   eax,DWORD PTR es:[edi]
  4150b4:	inc    ebp
  4150b5:	dec    edx
  4150b6:	inc    ebx
  4150b7:	stc    
  4150b8:	ss sub cl,BYTE PTR cs:[eax+0x6f7f7d1c]
  4150c0:	cli    
  4150c1:	imul   ebx,DWORD PTR [edx-0x45093698],0x58
  4150c8:	sbb    eax,0xd2caa732
  4150cd:	cmp    DWORD PTR [ebx+eax*8],esi
  4150d0:	fst    DWORD PTR [ebp-0x2c575114]
  4150d6:	push   es
  4150d7:	pop    eax
  4150d8:	jne    0x415069
  4150da:	js     0x415139
  4150dc:	xchg   dh,bl
  4150de:	in     al,0xec
  4150e0:	or     eax,0x399fb2b0
  4150e5:	retf   
  4150e6:	outs   dx,BYTE PTR ds:[esi]
  4150e7:	push   es
  4150e8:	fcomp  QWORD PTR [eax]
  4150ea:	pop    esp
  4150eb:	into   
  4150ec:	or     ecx,esp
  4150ee:	adc    cl,BYTE PTR [edx]
  4150f0:	mov    ch,0xeb
  4150f2:	fist   WORD PTR [edx+0x56ca9a2a]
  4150f8:	push   DWORD PTR [esi+edx*1-0xa]
  4150fc:	dec    ebx
  4150fd:	and    BYTE PTR [edx+eiz*8],dl
  415100:	adc    ch,dh
  415102:	jnp    0x415129
  415104:	ror    bl,0x75
  415107:	fnstcw WORD PTR [ecx-0x6b19f4e6]
  41510d:	out    dx,al
  41510e:	jae    0x4150cb
  415110:	clc    
  415111:	push   esp
  415112:	in     eax,dx
  415113:	xchg   ebx,eax
  415114:	fisubr WORD PTR [edi-0x39]
  415117:	jle    0x415177
  415119:	aam    0x8c
  41511b:	and    ch,cl
  41511d:	rcl    DWORD PTR [edx-0x2d],0xd1
  415121:	pop    esp
  415122:	mov    dh,BYTE PTR [ebx]
  415124:	inc    ebp
  415125:	adc    al,0xb3
  415127:	jecxz  0x4150dc
  415129:	adc    BYTE PTR [esi+0x77fc4bbb],ah
  41512f:	dec    ebx
  415130:	pushf  
  415131:	pop    ss
  415132:	sub    ch,bh
  415134:	sub    al,0xef
  415136:	adc    DWORD PTR [edi-0x60996c76],edx
  41513c:	mov    dl,0xc3
  41513e:	xor    eax,0x76cd7718
  415143:	push   esi
  415144:	jns    0x415162
  415146:	das    
  415147:	outs   dx,DWORD PTR ds:[esi]
  415148:	idiv   DWORD PTR [ebx]
  41514a:	in     eax,0xc1
  41514c:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41514e:	pop    edx
  41514f:	dec    esi
  415150:	nop
  415151:	push   ebx
  415152:	adc    eax,0xdf4f4bad
  415158:	adc    edi,DWORD PTR [edx-0x70bfaed8]
  41515e:	jnp    0x4151b2
  415160:	push   cs
  415161:	dec    edx
  415162:	mov    esi,0x66f97c34
  415167:	push   ebp
  415168:	or     eax,DWORD PTR [ebp-0x7a]
  41516b:	fs (bad) 
  41516d:	(bad)  
  41516e:	out    dx,eax
  41516f:	jb     0x4150fc
  415171:	xor    BYTE PTR [ecx],0x90
  415174:	xchg   ebx,eax
  415175:	sbb    ebp,0xfffffffd
  415178:	cmc    
  415179:	ds (bad) 
  41517b:	mov    eax,0x6054f626
  415180:	mov    edi,0x3ca5a370
  415185:	data16 sti 
  415187:	push   DWORD PTR [edi+ebp*4-0x60]
  41518b:	fisttp WORD PTR [ecx+0x6]
  41518e:	clc    
  41518f:	mov    dh,0x7c
  415191:	jbe    0x41511b
  415193:	int3   
  415194:	pop    es
  415195:	jle    0x41517a
  415197:	outs   dx,DWORD PTR ds:[esi]
  415198:	sub    eax,0x70b57372
  41519d:	push   edx
  41519e:	ret    0xe92c
  4151a1:	xchg   edx,eax
  4151a2:	jmp    0xa054e92b
  4151a7:	sub    al,0x8a
  4151a9:	add    al,0x7b
  4151ab:	rcl    BYTE PTR [ecx+edx*1-0x131b6ac7],1
  4151b2:	sub    DWORD PTR [edi],0xffffff9f
  4151b5:	rol    DWORD PTR fs:[edx-0x3f0d35c1],1
  4151bc:	mov    al,0xcf
  4151be:	push   edx
  4151bf:	mov    ds:0xf98b5fdf,al
  4151c4:	push   edi
  4151c5:	and    eax,0x7342d73e
  4151ca:	mov    bh,0x73
  4151cc:	xchg   edi,eax
  4151cd:	out    dx,al
  4151ce:	xlat   BYTE PTR ds:[ebx]
  4151cf:	fwait
  4151d0:	add    eax,0xf1ca31fe
  4151d5:	and    cl,BYTE PTR [ebp+0x7a7ac54f]
  4151db:	test   BYTE PTR [eax-0x2a0ba5aa],bl
  4151e1:	xor    cl,BYTE PTR [esi+0x27]
  4151e4:	ss dec edi
  4151e6:	sbb    BYTE PTR [esi+0x78e11c75],0x37
  4151ed:	test   al,0xd3
  4151ef:	xchg   edx,eax
  4151f0:	aaa    
  4151f1:	pop    ebx
  4151f2:	stos   BYTE PTR es:[edi],al
  4151f3:	pop    ss
  4151f4:	add    BYTE PTR [eax-0x5f],cl
  4151f7:	out    dx,eax
  4151f8:	data16 scas al,BYTE PTR es:[edi]
  4151fa:	inc    edi
  4151fb:	arpl   WORD PTR [ebx],si
  4151fd:	in     eax,0x9a
  4151ff:	and    eax,0x885d3f6e
  415204:	jns    0x415214
  415206:	lock fs and al,0x1d
  41520a:	lea    eax,[edx-0x45]
  41520d:	(bad)  [esi+edx*1+0x42]
  415211:	in     al,0xa8
  415213:	loope  0x415272
  415215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415216:	push   edi
  415217:	xchg   edi,eax
  415218:	clc    
  415219:	mov    ecx,0x80867428
  41521e:	mov    DWORD PTR [edx-0x30c2722e],eax
  415224:	test   eax,0x9a8829ec
  415229:	pop    esi
  41522a:	xchg   BYTE PTR [ebx-0x1e2907dc],cl
  415230:	(bad)  
  415231:	cmp    BYTE PTR [edi],dh
  415233:	in     eax,0x4b
  415235:	cli    
  415236:	mov    edi,0x42706f9c
  41523b:	inc    edx
  41523c:	adc    DWORD PTR [edi+eiz*8-0x7ea528c9],0x673ff50f
  415247:	jno    0x4151e4
  415249:	rol    esi,0xa4
  41524c:	repnz mov bl,0xf1
  41524f:	mov    BYTE PTR [ebx+edi*2],bl
  415252:	jnp    0x41522e
  415254:	test   DWORD PTR [edx+ebx*4-0x2a34e327],eax
  41525b:	push   eax
  41525c:	inc    ecx
  41525d:	ins    BYTE PTR es:[edi],dx
  41525e:	sbb    edx,DWORD PTR [esi+ebx*8+0x4]
  415262:	test   DWORD PTR [ebp-0x6eec4f98],0x1e5b677
  41526c:	xchg   BYTE PTR [ebx+0x18],cl
  41526f:	sbb    ecx,ebp
  415271:	push   ss
  415272:	cdq    
  415273:	mov    edx,0x73cb0273
  415278:	dec    ebp
  415279:	add    BYTE PTR [ecx-0x4c7a95fa],dl
  41527f:	inc    ebx
  415280:	or     BYTE PTR [edi-0x17],cl
  415283:	mov    ch,0xb7
  415285:	gs call 0xd856:0x412e7c28
  41528d:	fst    QWORD PTR [edi-0x58]
  415290:	jmp    0x279d:0x250e173e
  415297:	jmp    0xbcde:0x5fa010db
  41529e:	jl     0x41527e
  4152a0:	inc    eax
  4152a1:	(bad)  
  4152a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152a3:	(bad)  
  4152a4:	fsubr  QWORD PTR [ecx]
  4152a6:	xchg   ecx,eax
  4152a7:	mov    WORD PTR [ecx+0x59dba624],fs
  4152ad:	pop    esi
  4152ae:	inc    edx
  4152af:	sub    dl,BYTE PTR [esp+esi*2]
  4152b2:	call   0x27896c50
  4152b7:	cmp    edx,DWORD PTR [ecx-0x8]
  4152ba:	xor    al,0x42
  4152bc:	inc    edi
  4152bd:	or     BYTE PTR [esi+0x34],dl
  4152c0:	das    
  4152c1:	xor    al,0x50
  4152c3:	sbb    BYTE PTR [edx+esi*2-0x73b30991],cl
  4152ca:	mov    esi,0x6324db10
  4152cf:	mov    ds:0x29e4466d,eax
  4152d4:	lods   al,BYTE PTR ds:[esi]
  4152d5:	cmp    BYTE PTR [ecx],bl
  4152d7:	sub    ebx,esi
  4152d9:	cmp    bh,BYTE PTR ss:[ebp-0x47]
  4152dd:	mov    ebx,DWORD PTR [esi-0xf]
  4152e0:	call   0xdb621cf4
  4152e5:	jne    0x4152c3
  4152e7:	rcr    esp,0xce
  4152ea:	test   al,0xf1
  4152ec:	adc    al,0xe
  4152ee:	lds    ecx,FWORD PTR [ecx+0x141075d8]
  4152f4:	popa   
  4152f5:	mov    ebx,0xb9710422
  4152fa:	outs   dx,DWORD PTR ds:[esi]
  4152fb:	mov    edx,0x869c7108
  415300:	les    ecx,FWORD PTR [eax+0x28]
  415303:	(bad)  
  415304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415305:	dec    edi
  415306:	mov    BYTE PTR [ebx-0x40],dh
  415309:	lods   eax,DWORD PTR ds:[esi]
  41530a:	xlat   BYTE PTR ds:[ebx]
  41530b:	xor    al,0x45
  41530d:	mov    ds:0x207c69c6,al
  415312:	(bad)  
  415313:	xor    ch,ah
  415315:	mov    eax,ds:0x403faa46
  41531a:	add    al,0x71
  41531c:	adc    DWORD PTR [edi+ebp*1+0x689d28e4],ebp
  415323:	lahf   
  415324:	(bad)  
  415325:	mov    edx,0x4cc5d3e4
  41532a:	pop    edx
  41532b:	fnstcw WORD PTR [ebp+0x4a30e84b]
  415331:	push   edx
  415332:	mov    ch,0xa3
  415334:	or     DWORD PTR [ebx-0x53e5f082],0x7fedbc48
  41533e:	je     0x41535f
  415340:	in     al,dx
  415341:	or     DWORD PTR [edi+eiz*4],edi
  415344:	bound  edi,QWORD PTR [eax]
  415346:	js     0x4153a0
  415348:	mov    al,0x45
  41534a:	push   0xffffffe9
  41534c:	and    BYTE PTR [esi+0x6c418c8e],cl
  415352:	lods   eax,DWORD PTR ds:[esi]
  415353:	or     ch,ch
  415355:	fdivr  QWORD PTR [eax+edx*8+0x40b700a]
  41535c:	mov    ebx,0x6ab7310d
  415361:	gs fs adc esp,edi
  415365:	inc    eax
  415366:	push   ss
  415367:	(bad)  
  415369:	jge    0x415338
  41536b:	call   0xd0a062d3
  415370:	mov    ebx,ecx
  415372:	mov    ecx,0x58eba35f
  415377:	adc    eax,0x4e3db65d
  41537c:	mov    bl,0x3a
  41537e:	dec    edi
  41537f:	mov    edx,0x39528443
  415384:	(bad)  
  415385:	xchg   edx,eax
  415386:	jmp    0xc13f:0x8564cbb1
  41538d:	imul   esi,DWORD PTR [eax],0x6fa6afe
  415393:	fs cmp al,0x7d
  415396:	xchg   ebx,eax
  415397:	nop
  415398:	dec    esi
  415399:	cmp    bh,bh
  41539b:	scas   al,BYTE PTR es:[edi]
  41539c:	mov    bh,0x74
  41539e:	fpatan 
  4153a0:	sahf   
  4153a1:	jp     0x4153e8
  4153a3:	or     al,0x7a
  4153a5:	(bad)  
  4153a6:	sbb    bl,ah
  4153a8:	sub    eax,0x1fa5784d
  4153ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153ae:	push   ebx
  4153af:	cmp    eax,0x244450ca
  4153b4:	cdq    
  4153b5:	scas   eax,DWORD PTR es:[edi]
  4153b6:	sub    al,0xce
  4153b8:	cs mov dl,0x53
  4153bb:	fwait
  4153bc:	popf   
  4153bd:	inc    esi
  4153be:	aas    
  4153bf:	dec    edx
  4153c0:	sub    DWORD PTR [edi-0x2986d4d1],esp
  4153c6:	and    eax,DWORD PTR [eax-0x79af98f6]
  4153cc:	ins    BYTE PTR es:[edi],dx
  4153cd:	push   0x1c
  4153cf:	xchg   BYTE PTR [ebx],dl
  4153d1:	adc    esp,esi
  4153d3:	dec    edi
  4153d4:	test   bl,ah
  4153d6:	pop    edi
  4153d7:	(bad)  
  4153d8:	ins    BYTE PTR es:[edi],dx
  4153d9:	dec    ebx
  4153da:	retf   
  4153db:	inc    ecx
  4153dc:	popf   
  4153dd:	loop   0x415407
  4153df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153e0:	mov    ecx,0x3a254a49
  4153e5:	jp     0x415407
  4153e7:	sub    DWORD PTR [edx+0x4f],0x83b0cf8f
  4153ee:	add    ebx,DWORD PTR [ecx]
  4153f0:	jl     0x415444
  4153f2:	daa    
  4153f3:	sub    eax,0xfb100512
  4153f8:	and    BYTE PTR [ebx+0x3c],ch
  4153fb:	xor    BYTE PTR [edx+ebx*1-0x2ed96ac4],0xfb
  415403:	xor    edx,DWORD PTR [edx+0x63b595c2]
  415409:	fisttp WORD PTR [ecx+edi*8-0x3]
  41540e:	jecxz  0x4153fc
  415410:	push   eax
  415411:	jnp    0x4153e2
  415413:	rcl    DWORD PTR [eax+edi*4+0x2f8e2a83],cl
  41541a:	pop    edi
  41541b:	into   
  41541c:	pop    esp
  41541d:	adc    BYTE PTR [edi],bl
  41541f:	sahf   
  415420:	cld    
  415421:	push   DWORD PTR [ecx+ebp*2-0x29]
  415425:	stc    
  415426:	js     0x41543c
  415428:	jno    0x4153c7
  41542a:	jb     0x4153c9
  41542c:	dec    esi
  41542d:	sub    eax,0xe02ad466
  415432:	cld    
  415433:	setnp  BYTE PTR [edx-0x25]
  415437:	fnstcw WORD PTR [ecx-0x453c1e69]
  41543d:	sub    eax,0xd6bba402
  415442:	shl    dl,cl
  415444:	jb     0x41547d
  415446:	mov    eax,0x3927768d
  41544b:	outs   dx,DWORD PTR ds:[esi]
  41544c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41544d:	xchg   edx,eax
  41544e:	popa   
  41544f:	push   eax
  415450:	inc    esp
  415451:	lds    ecx,FWORD PTR [esi-0x62]
  415454:	bnd jnp 0x41548c
  415457:	sahf   
  415458:	sub    cl,dl
  41545a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41545b:	inc    eax
  41545c:	leave  
  41545d:	fcom   QWORD PTR [edx+0x6036eb59]
  415463:	xor    ch,BYTE PTR ds:0x9d567c19
  415469:	xchg   BYTE PTR [esi],dh
  41546b:	cmp    al,0x7e
  41546d:	sar    ebp,cl
  41546f:	outs   dx,DWORD PTR ds:[esi]
  415470:	sahf   
  415471:	inc    esp
  415472:	fadd   st(1),st
  415474:	xchg   esp,eax
  415475:	call   0x4535:0x5af22154
  41547c:	mov    esp,0x3373e18f
  415481:	(bad)  
  415482:	test   bh,0xe0
  415485:	xor    eax,0xb3e54ace
  41548a:	not    ch
  41548c:	mov    edx,0x74a8f74c
  415491:	int    0x54
  415493:	sbb    esi,edx
  415495:	xchg   DWORD PTR [ecx+0x5476943b],ebp
  41549b:	mov    dh,BYTE PTR [eax+ebx*2]
  41549e:	std    
  41549f:	aas    
  4154a0:	jb     0x4154dc
  4154a2:	clc    
  4154a3:	xor    dl,BYTE PTR [eax-0x1]
  4154a6:	xchg   edx,eax
  4154a7:	or     esp,DWORD PTR [edi+eax*1-0x5eaefbb5]
  4154ae:	or     BYTE PTR [edx-0x4d6c75ea],bh
  4154b4:	pusha  
  4154b5:	cwde   
  4154b6:	add    eax,0x5b14619
  4154bb:	pop    edi
  4154bc:	fcom   DWORD PTR ds:0x67ffc86b
  4154c2:	cld    
  4154c3:	jmp    0x41547c
  4154c5:	or     eax,DWORD PTR [esi-0x1e]
  4154c8:	pusha  
  4154c9:	loope  0x415502
  4154cb:	xchg   edi,eax
  4154cc:	in     eax,dx
  4154cd:	mov    ecx,DWORD PTR [ebx+0x19]
  4154d0:	fwait
  4154d1:	fwait
  4154d2:	xchg   edi,eax
  4154d3:	ret    
  4154d4:	stos   DWORD PTR es:[edi],eax
  4154d5:	jge    0x415507
  4154d7:	cs pop es
  4154d9:	pop    eax
  4154da:	add    bh,bl
  4154dc:	sub    ah,bh
  4154de:	pop    esi
  4154df:	repz dec ecx
  4154e1:	sahf   
  4154e2:	inc    bl
  4154e4:	ja     0x4154f0
  4154e6:	or     BYTE PTR [esi+ecx*4],bl
  4154e9:	retf   0x5ee3
  4154ec:	dec    ebp
  4154ed:	push   cs
  4154ee:	xor    eax,0x4d67908
  4154f3:	inc    ecx
  4154f4:	sub    DWORD PTR [ebx],0x6d8b2b2d
  4154fa:	je     0x415569
  4154fc:	(bad)  
  4154fd:	mov    cl,0x78
  4154ff:	retf   
  415500:	fmul   QWORD PTR [edi+0x3c]
  415503:	xchg   esp,eax
  415504:	fnstenv [eax+0x6100d6e4]
  41550a:	lods   al,BYTE PTR ds:[esi]
  41550b:	lahf   
  41550c:	sub    al,0x5f
  41550e:	(bad)  
  41550f:	mov    ah,0x12
  415511:	pop    edx
  415512:	push   cs
  415513:	stc    
  415514:	inc    esp
  415515:	pushf  
  415516:	(bad)  
  415517:	jecxz  0x4154f5
  415519:	out    0xa1,al
  41551b:	adc    ch,BYTE PTR [ebp-0x43]
  41551e:	mov    dh,0x96
  415520:	lahf   
  415521:	popa   
  415522:	dec    esp
  415523:	pop    ebp
  415524:	stos   BYTE PTR es:[edi],al
  415525:	mov    esi,DWORD PTR [esi]
  415527:	xchg   ebp,eax
  415528:	inc    ecx
  415529:	mov    bh,0xd2
  41552b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41552c:	mov    ds:0x7342780b,eax
  415531:	xchg   edx,eax
  415532:	ror    BYTE PTR [edi-0x30],cl
  415535:	sub    al,0xc2
  415537:	fs cmp eax,0xcedbbc39
  41553d:	stos   DWORD PTR es:[edi],eax
  41553e:	fcom   QWORD PTR [esi]
  415540:	cmc    
  415541:	pop    esp
  415542:	lds    esi,FWORD PTR [edx+0x18]
  415545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415546:	push   ebp
  415547:	ffreep st(4)
  415549:	xor    edi,ebp
  41554b:	jge    0x4154d8
  41554d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41554e:	inc    BYTE PTR [ebp-0xbe76a30]
  415554:	ds call 0xf1fd:0x5ab1e4ca
  41555c:	mov    esi,0xe40fab5d
  415561:	pop    edi
  415562:	pop    eax
  415563:	pop    edx
  415564:	idiv   BYTE PTR cs:[ebx]
  415567:	std    
  415568:	push   cs
  415569:	or     eax,DWORD PTR [eax+0x4e24a42f]
  41556f:	fbstp  TBYTE PTR [ecx-0x37]
  415572:	ret    
  415573:	(bad)  
  415574:	jmp    0x41553d
  415576:	push   ebp
  415577:	outs   dx,DWORD PTR ds:[esi]
  415578:	or     BYTE PTR [ebp+0x5e],bl
  41557b:	iret   
  41557c:	dec    BYTE PTR [eax]
  41557e:	aad    0xf9
  415580:	jmp    FWORD PTR [ebx]
  415582:	rcl    DWORD PTR [edx+0x29],cl
  415585:	dec    eax
  415586:	jmp    0x25b9:0x4d36bff5
  41558d:	dec    edi
  41558e:	cmp    DWORD PTR [esi-0x74b2089b],esi
  415594:	cs idiv esi
  415597:	std    
  415598:	xor    bh,BYTE PTR [ecx]
  41559a:	(bad)  
  41559c:	in     al,0xde
  41559e:	xchg   edx,eax
  41559f:	data16 jb 0x415539
  4155a2:	jl     0x4155e8
  4155a4:	and    BYTE PTR [ebp+0x1e],al
  4155a7:	or     DWORD PTR ds:0x2005cda2,0xffffffa0
  4155ae:	aas    
  4155af:	pmaxub mm2,QWORD PTR [eax]
  4155b2:	fcmovu st,st(3)
  4155b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155b5:	gs ins BYTE PTR es:[edi],dx
  4155b7:	push   ss
  4155b8:	(bad)  
  4155b9:	shl    BYTE PTR [esi],1
  4155bb:	sub    esp,DWORD PTR [esi+0x22d88ad]
  4155c1:	xor    edi,esp
  4155c3:	rcl    BYTE PTR [eax],1
  4155c5:	test   BYTE PTR [eax+ecx*8-0x1c],bl
  4155c9:	mov    edi,0xe76f9c16
  4155ce:	pop    es
  4155cf:	ret    
  4155d0:	dec    eax
  4155d1:	mov    eax,ds:0xe07197f5
  4155d6:	jp     0x4155d9
  4155d8:	ret    
  4155d9:	xchg   ebx,eax
  4155da:	jne    0x4155b2
  4155dc:	les    esi,FWORD PTR [ebx+esi*2-0x3b33faaa]
  4155e3:	xchg   ebx,eax
  4155e4:	je     0x4155d4
  4155e6:	dec    eax
  4155e7:	arpl   WORD PTR [esi],dx
  4155e9:	mov    BYTE PTR [ebx+0x6637f8e8],dh
  4155ef:	aas    
  4155f0:	rol    BYTE PTR [edi-0x42815b9],cl
  4155f6:	push   0xffffffc1
  4155f8:	push   eax
  4155f9:	cmp    DWORD PTR [ebp-0x1021f754],ebp
  4155ff:	rcl    BYTE PTR [edi+0xd],cl
  415602:	push   ds
  415603:	sbb    DWORD PTR [edi+0x55],ecx
  415606:	ja     0x415623
  415608:	fcmove st,st(0)
  41560a:	mov    al,ds:0x81ad822b
  41560f:	push   ebx
  415610:	mov    esp,0x92b7e1c1
  415615:	mov    esi,0x517b574a
  41561a:	jg     0x4155d7
  41561c:	dec    esi
  41561d:	clc    
  41561e:	mov    es,WORD PTR [ebp+0x60df368c]
  415624:	ror    BYTE PTR [edi+0x5f9dc748],0x75
  41562b:	aaa    
  41562c:	mov    esp,0xf358edd1
  415631:	rol    DWORD PTR [esi+ecx*8-0x4dbacc07],1
  415638:	call   FWORD PTR ds:0x847811ee
  41563e:	pop    edx
  41563f:	sbb    BYTE PTR [ecx-0x40],bh
  415642:	push   cs
  415643:	pop    ebp
  415644:	stc    
  415645:	cmp    al,0x90
  415647:	imul   ebp,DWORD PTR [ebp+0x2a],0x49
  41564b:	out    0x11,al
  41564d:	cwde   
  41564e:	pop    ebp
  41564f:	xchg   esp,eax
  415650:	xchg   esi,eax
  415651:	mov    ss,WORD PTR [edi]
  415653:	cmp    ch,BYTE PTR gs:[ecx-0x1f]
  415657:	arpl   WORD PTR [eax+ecx*8],bp
  41565a:	or     BYTE PTR [eax],cl
  41565c:	jno    0x4156d4
  41565e:	jmp    DWORD PTR [edx]
  415660:	hlt    
  415661:	xchg   ah,ch
  415663:	ja     0x41565c
  415665:	mov    ah,0xc6
  415667:	lea    esi,[ebp+0x177954cd]
  41566d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41566e:	xor    ecx,esp
  415670:	test   ah,ch
  415672:	sub    DWORD PTR [edi+ebp*4],edx
  415675:	push   0x2d899594
  41567a:	adc    DWORD PTR [ecx-0x3c],0xa822d286
  415681:	neg    BYTE PTR [esi+edi*2+0x6266b25]
  415688:	jns    0x41569b
  41568a:	pop    ebp
  41568b:	and    al,BYTE PTR [ecx-0x70]
  41568e:	ins    DWORD PTR es:[edi],dx
  41568f:	sahf   
  415690:	mov    eax,ds:0xa98da33a
  415695:	xchg   esi,eax
  415696:	test   DWORD PTR ds:0x4b8d70c7,esp
  41569c:	es mov esp,0x5d296af1
  4156a2:	retf   0xd92
  4156a5:	pop    edx
  4156a6:	in     eax,0xfb
  4156a8:	mov    bl,0x82
  4156aa:	mov    bh,0x58
  4156ac:	loopne 0x415722
  4156ae:	inc    ebp
  4156af:	test   al,0x35
  4156b1:	bound  ebp,QWORD PTR [ebx]
  4156b3:	jb     0x41568d
  4156b5:	mov    dh,0x7d
  4156b7:	arpl   bp,bx
  4156b9:	mov    bh,0xa7
  4156bb:	mov    ecx,0x54a42582
  4156c0:	push   0x3c2e8900
  4156c5:	arpl   WORD PTR [esi+edx*1],ax
  4156c8:	mov    ah,0xe0
  4156ca:	jmp    0x4156e4
  4156cc:	sbb    DWORD PTR [ebx+0x7bc8fdf7],ebx
  4156d2:	adc    ebp,DWORD PTR [ecx]
  4156d4:	pop    eax
  4156d5:	mov    ebp,0x30aa0251
  4156da:	cs (bad) 
  4156dc:	cmp    DWORD PTR [eax],edx
  4156de:	dec    eax
  4156df:	sub    ebp,DWORD PTR [edi-0x21]
  4156e2:	mov    dl,0xed
  4156e4:	in     al,0x71
  4156e6:	pop    edx
  4156e7:	mov    bh,0x30
  4156e9:	jb     0x415677
  4156eb:	(bad)  
  4156ec:	lock adc dl,BYTE PTR [ecx-0x7a]
  4156f0:	mov    al,0xbf
  4156f2:	scas   eax,DWORD PTR es:[edi]
  4156f3:	push   es
  4156f4:	jb     0x4156d4
  4156f6:	pop    ebx
  4156f7:	sbb    DWORD PTR [eax],0xca661f98
  4156fd:	hlt    
  4156fe:	jp     0x415708
  415700:	mov    edx,0x6767e7aa
  415705:	push   edi
  415706:	xor    dl,BYTE PTR cs:[ebx-0x3c700e51]
  41570d:	adc    edx,esi
  41570f:	inc    ebp
  415710:	dec    ecx
  415711:	fmul   DWORD PTR [ebx+ebp*8]
  415714:	int3   
  415715:	xchg   ecx,eax
  415716:	gs mov ah,0xc1
  415719:	pop    ds
  41571a:	out    dx,eax
  41571b:	je     0x415757
  41571d:	and    bl,BYTE PTR [ebx-0x2953ac22]
  415723:	je     0x41579b
  415725:	nop
  415726:	jo     0x41574c
  415728:	mov    ds:0x2ec1c29a,al
  41572d:	and    BYTE PTR [esi+0x10575ac],dl
  415733:	shl    DWORD PTR [edx],1
  415735:	dec    ecx
  415736:	test   al,0xd5
  415738:	stos   BYTE PTR es:[edi],al
  415739:	xchg   ebx,eax
  41573a:	stos   BYTE PTR es:[edi],al
  41573b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41573c:	or     eax,0xa94785d6
  415742:	nop
  415743:	jo     0x415774
  415745:	scas   al,BYTE PTR es:[edi]
  415746:	fstp   QWORD PTR [edx+0x5bf26d5f]
  41574c:	(bad)  
  41574d:	fild   DWORD PTR [ecx]
  41574f:	dec    ebx
  415750:	mov    esp,0x67b2bda5
  415755:	sub    ebx,edx
  415757:	adc    al,0x93
  415759:	(bad)  
  41575a:	fcom   QWORD PTR [eax+0x264fb186]
  415760:	mov    edx,0x4ee869d3
  415765:	(bad)  [eax+0x625ef70d]
  41576b:	sub    DWORD PTR [ecx-0x59],0x738a851d
  415772:	push   eax
  415773:	xor    BYTE PTR [ecx],0x85
  415776:	sub    DWORD PTR [esi],ebx
  415778:	aam    0x63
  41577a:	repz daa 
  41577c:	and    DWORD PTR [edi-0x2],eax
  41577f:	mov    edx,esi
  415781:	jne    0x41578d
  415783:	scas   eax,DWORD PTR es:[edi]
  415784:	das    
  415785:	adc    eax,0x895013fe
  41578a:	das    
  41578b:	adc    dh,al
  41578d:	sub    al,0x4e
  41578f:	pop    ds
  415790:	mov    al,0x66
  415792:	adc    edx,ecx
  415794:	das    
  415795:	push   cs
  415796:	add    cl,bl
  415798:	and    al,0xde
  41579a:	arpl   WORD PTR [ecx],bx
  41579c:	pop    esi
  41579d:	ins    DWORD PTR es:[edi],dx
  41579e:	mov    ds:0x29f231cb,eax
  4157a3:	in     eax,0xef
  4157a5:	pop    ecx
  4157a6:	push   ebp
  4157a7:	cmp    al,BYTE PTR [eax+0xa]
  4157aa:	in     eax,dx
  4157ab:	mov    bh,0x98
  4157ad:	lea    edi,[edi-0x4f2a87de]
  4157b3:	xchg   edx,eax
  4157b4:	adc    ah,bh
  4157b6:	sbb    ebp,ecx
  4157b8:	retf   0x940b
  4157bb:	enter  0xf9fd,0x15
  4157bf:	cmp    al,0x67
  4157c1:	inc    ebx
  4157c2:	push   ecx
  4157c3:	inc    ecx
  4157c4:	cli    
  4157c5:	dec    eax
  4157c6:	push   ebx
  4157c7:	icebp  
  4157c8:	sub    al,0x38
  4157ca:	scas   eax,DWORD PTR es:[edi]
  4157cb:	or     edx,eax
  4157cd:	dec    esp
  4157ce:	sar    ebp,0x69
  4157d1:	sub    cl,BYTE PTR [ebx+ebp*8]
  4157d4:	add    ebx,ebp
  4157d6:	xchg   ecx,eax
  4157d7:	popa   
  4157d8:	xchg   BYTE PTR [esp+eiz*8-0x7d],dl
  4157dc:	out    0x82,al
  4157de:	loopne 0x415778
  4157e0:	lea    esi,[ebx+eax*1]
  4157e3:	inc    ecx
  4157e4:	xchg   edx,eax
  4157e5:	xor    eax,0x9264bfcf
  4157ea:	outs   dx,BYTE PTR ds:[esi]
  4157eb:	call   0xf127:0xe4b59ccb
  4157f2:	leave  
  4157f3:	fiadd  WORD PTR [eax+0x6e7c92ba]
  4157f9:	push   ebp
  4157fa:	ins    DWORD PTR es:[edi],dx
  4157fb:	in     al,0xec
  4157fd:	ret    
  4157fe:	mov    bl,0xc2
  415800:	fild   WORD PTR [esi-0x3807bce4]
  415806:	mov    eax,0xff183dea
  41580b:	xchg   ebx,eax
  41580c:	(bad)  
  41580d:	adc    ecx,DWORD PTR [esi+0x715d40e5]
  415813:	adc    al,0xd8
  415815:	into   
  415816:	push   edx
  415817:	push   0xffffffb6
  415819:	push   ecx
  41581a:	mov    ch,0x9e
  41581c:	sbb    DWORD PTR [edi+ecx*4+0x46],0x1304e2a2
  415824:	xlat   BYTE PTR ds:[ebx]
  415825:	push   ecx
  415826:	aad    0x7e
  415828:	out    dx,al
  415829:	int3   
  41582a:	les    esi,FWORD PTR [ebp-0x52a2733f]
  415830:	sub    DWORD PTR [ebx+esi*8+0x2d],esp
  415834:	ficomp WORD PTR [ecx]
  415836:	push   edi
  415837:	jl     0x415804
  415839:	ss mov ah,0xd3
  41583c:	shl    BYTE PTR [esi],0x6a
  41583f:	or     eax,0x64c5a7fc
  415844:	scas   eax,DWORD PTR es:[edi]
  415845:	clc    
  415846:	jp     0x41588e
  415848:	ins    DWORD PTR es:[edi],dx
  415849:	fldcw  WORD PTR [eax-0x77189e5]
  41584f:	mov    ebp,0xba5abc01
  415854:	mov    edi,0x2ec917d1
  415859:	pop    edx
  41585a:	neg    DWORD PTR [eax-0x79]
  41585d:	ja     0x4157f1
  41585f:	out    0xc7,eax
  415861:	shl    BYTE PTR [ebp+0x738e8fc5],cl
  415867:	add    dl,BYTE PTR [edx-0xb9c8d69]
  41586d:	popa   
  41586e:	leave  
  41586f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415870:	push   ecx
  415871:	lods   al,BYTE PTR ds:[esi]
  415872:	xchg   DWORD PTR [ebp+0x31382fc9],eax
  415878:	leave  
  415879:	lds    eax,FWORD PTR [edx+0x1fedc46c]
  41587f:	push   edi
  415880:	pop    ecx
  415881:	and    dl,BYTE PTR [eax+0x1fe2b41a]
  415887:	ss stos DWORD PTR es:[edi],eax
  415889:	stos   BYTE PTR es:[edi],al
  41588a:	fwait
  41588b:	(bad)  
  41588c:	xor    BYTE PTR [ebx+0x16],dh
  41588f:	mov    ah,ah
  415891:	sub    BYTE PTR [esi+0x1635cc0b],dl
  415897:	pop    ebp
  415898:	int3   
  415899:	imul   eax
  41589b:	pop    ss
  41589c:	cld    
  41589d:	inc    ecx
  41589e:	dec    edx
  4158a0:	jle    0x415844
  4158a2:	mov    ds:0xf3239458,al
  4158a7:	pop    ds
  4158a8:	mov    es,edi
  4158aa:	imul   esp,ebx,0xabbb8da4
  4158b0:	lsl    ecx,sp
  4158b3:	mov    BYTE PTR [esi],ah
  4158b5:	push   ss
  4158b6:	push   ebp
  4158b7:	in     eax,dx
  4158b8:	mov    gs,WORD PTR [edx+ebx*1+0x777b3963]
  4158bf:	push   edx
  4158c0:	rol    BYTE PTR [edi+0x7e],0x92
  4158c4:	inc    eax
  4158c5:	sub    ch,bl
  4158c7:	test   al,0xb3
  4158c9:	scas   al,BYTE PTR es:[edi]
  4158ca:	push   ds
  4158cb:	je     0x415880
  4158cd:	add    BYTE PTR [esi],al
  4158cf:	sub    DWORD PTR [ebx+ebp*1+0x682150fd],eax
  4158d6:	sub    eax,0x6e7e7091
  4158db:	or     cl,BYTE PTR [eax-0x68]
  4158de:	data16 jl 0x415950
  4158e1:	jl     0x4158ed
  4158e3:	jmp    FWORD PTR [esi]
  4158e5:	mov    edi,0x93405286
  4158ea:	in     eax,dx
  4158eb:	and    eax,0x99f543b1
  4158f0:	xchg   edx,eax
  4158f1:	retf   
  4158f2:	dec    eax
  4158f3:	es addr16 jle 0x41589b
  4158f7:	pop    edi
  4158f8:	jg     0x4158df
  4158fa:	(bad)  
  4158fb:	mov    bh,0x5b
  4158fd:	sub    dl,BYTE PTR [eax-0x6]
  415900:	outs   dx,BYTE PTR ds:[esi]
  415901:	xlat   BYTE PTR ds:[ebx]
  415902:	push   eax
  415903:	dec    eax
  415904:	mov    ecx,0xa91fca12
  415909:	shl    DWORD PTR [edi*1+0x74872fa0],0x7d
  415911:	ret    
  415912:	jb     0x41593d
  415914:	mov    ds:0x615cc0f5,al
  415919:	popa   
  41591a:	arpl   WORD PTR [esi],bp
  41591c:	or     dh,BYTE PTR [esi+eax*2+0x4b]
  415920:	outs   dx,BYTE PTR ds:[esi]
  415921:	es stos DWORD PTR es:[edi],eax
  415923:	add    BYTE PTR [edi+ebp*8-0x3a636f24],dh
  41592a:	icebp  
  41592b:	xchg   edx,eax
  41592c:	cli    
  41592d:	mov    ch,0xc2
  41592f:	out    dx,al
  415930:	fdiv   st(3),st
  415932:	ins    DWORD PTR es:[edi],dx
  415933:	clc    
  415934:	or     ebp,ebx
  415936:	mov    ds:0xa0c98372,al
  41593b:	pop    ds
  41593c:	mov    ebp,0x4f4fe39b
  415941:	pop    es
  415942:	ins    BYTE PTR es:[edi],dx
  415943:	sahf   
  415944:	arpl   ax,dx
  415946:	or     dh,BYTE PTR [esi-0x375f19b0]
  41594c:	imul   ebx,DWORD PTR [ebx-0x1e9be550],0xffffff9f
  415953:	icebp  
  415954:	rol    DWORD PTR [edi],0xd3
  415957:	fs sahf 
  415959:	mov    bh,0x8
  41595b:	sbb    eax,0x96f6ce11
  415960:	sbb    DWORD PTR [eax+esi*4],ecx
  415963:	jecxz  0x4159b3
  415965:	inc    esp
  415966:	lods   eax,DWORD PTR ds:[esi]
  415967:	mov    bl,0xf3
  415969:	push   cs
  41596a:	rcr    DWORD PTR [esi+0x5f],cl
  41596d:	(bad)  
  41596e:	fdivr  QWORD PTR ss:[edi+0x5f]
  415972:	pop    edx
  415973:	jo     0x415990
  415975:	cli    
  415976:	jmp    0x415988
  415978:	ins    BYTE PTR es:[edi],dx
  415979:	fcom   QWORD PTR [edi+edi*2]
  41597c:	sti    
  41597d:	jmp    0xa6e19d24
  415982:	je     0x4159cc
  415984:	dec    esi
  415985:	or     ecx,DWORD PTR [ebp-0x29]
  415988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415989:	pop    ecx
  41598a:	hlt    
  41598b:	or     DWORD PTR [ebx],ecx
  41598d:	inc    ebp
  41598e:	add    bl,bh
  415990:	cmp    BYTE PTR ds:0x60959400,dl
  415996:	hlt    
  415997:	in     eax,0xb9
  415999:	pop    ds
  41599a:	aaa    
  41599b:	test   eax,0x3579ed7
  4159a0:	cli    
  4159a1:	dec    esp
  4159a2:	jbe    0x41592c
  4159a4:	loop   0x41597a
  4159a6:	inc    esp
  4159a7:	jle    0x41594b
  4159a9:	ins    BYTE PTR es:[edi],dx
  4159aa:	das    
  4159ab:	pushf  
  4159ac:	jb     0x41596d
  4159ae:	iret   
  4159af:	jmp    0x415946
  4159b1:	mov    al,ds:0x650f7782
  4159b6:	xchg   BYTE PTR [edi-0x3f],bh
  4159b9:	mov    WORD PTR [ebx],ds
  4159bb:	pop    ds
  4159bc:	dec    ebx
  4159bd:	and    ebx,DWORD PTR [edx]
  4159bf:	or     esp,DWORD PTR [ecx+0x215f5e8b]
  4159c5:	sub    ebp,DWORD PTR [ebx]
  4159c7:	mov    edx,0x10087a00
  4159cc:	jmp    0x6605:0x46ac790a
  4159d3:	xchg   ebx,eax
  4159d4:	pop    ebp
  4159d5:	jmp    0xca4f6a98
  4159da:	(bad)  
  4159db:	adc    al,0x35
  4159dd:	xor    edi,DWORD PTR [esi]
  4159df:	jmp    0x30:0xc070cdcb
  4159e6:	dec    edi
  4159e7:	xchg   edi,eax
  4159e8:	mov    esi,0x9a059fa6
  4159ed:	sti    
  4159ee:	fcom   st(6)
  4159f0:	add    bh,BYTE PTR [edi+eiz*4]
  4159f3:	arpl   cx,sp
  4159f5:	push   edx
  4159f6:	adc    esi,eax
  4159f8:	daa    
  4159f9:	es sti 
  4159fb:	das    
  4159fc:	jnp    0x41598c
  4159fe:	xchg   esp,eax
  4159ff:	stos   DWORD PTR es:[edi],eax
  415a00:	clc    
  415a01:	and    esp,DWORD PTR [esi]
  415a03:	std    
  415a04:	mov    al,0xa8
  415a06:	pusha  
  415a07:	fs test dl,bl
  415a0a:	mov    WORD PTR [ecx-0x64d531ee],ds
  415a10:	lds    edx,FWORD PTR [edi+esi*8-0x1c]
  415a14:	test   eax,0x63a8f210
  415a19:	mov    dh,0x90
  415a1b:	mov    edi,0xc424cfa9
  415a20:	into   
  415a21:	pop    esi
  415a22:	hlt    
  415a23:	add    ebx,DWORD PTR [di+0x3f04]
  415a28:	imul   ecx,DWORD PTR [edx+esi*8+0x2a636500],0xffffffc3
  415a30:	(bad)  
  415a31:	and    DWORD PTR [ebp+0xb],edx
  415a34:	mov    ebx,0xc7a02100
  415a39:	lahf   
  415a3a:	jb     0x4159fa
  415a3c:	les    eax,FWORD PTR [eax+0x51]
  415a3f:	sub    al,0xed
  415a41:	sbb    edx,eax
  415a43:	js     0x415a77
  415a45:	cmp    DWORD PTR [ecx-0x2a],edx
  415a48:	inc    ebx
  415a49:	dec    ebx
  415a4a:	test   al,0x67
  415a4c:	into   
  415a4d:	push   ds
  415a4e:	aas    
  415a4f:	pushf  
  415a50:	mov    gs,eax
  415a52:	add    al,0x99
  415a54:	add    cl,ch
  415a56:	pop    eax
  415a57:	shl    BYTE PTR [edi+0x338184fa],cl
  415a5d:	adc    al,BYTE PTR [ebx]
  415a5f:	test   DWORD PTR [eax+0x39991173],esi
  415a65:	dec    edx
  415a66:	inc    ebp
  415a67:	dec    edx
  415a68:	call   0xcb203b0b
  415a6d:	in     al,dx
  415a6e:	sbb    eax,DWORD PTR [eax-0x57af1522]
  415a74:	test   DWORD PTR [eax-0x7a],esp
  415a77:	addr16 mov ebp,0x484d1004
  415a7d:	fdivr  DWORD PTR [ebp+0xcd17cc0]
  415a83:	pop    ss
  415a84:	cmp    al,0x48
  415a86:	das    
  415a87:	inc    ebp
  415a88:	add    al,0xaa
  415a8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a8b:	push   ecx
  415a8c:	jl     0x415af2
  415a8e:	loope  0x415a10
  415a90:	push   0xffffffad
  415a92:	sti    
  415a93:	test   al,0x45
  415a95:	mov    eax,ds:0xfd2da99
  415a9a:	jp     0x415ac5
  415a9c:	popa   
  415a9d:	lds    ecx,FWORD PTR [ebx-0x58f0d73f]
  415aa3:	mov    dl,0x91
  415aa5:	or     DWORD PTR [ecx],esi
  415aa7:	int3   
  415aa8:	popf   
  415aa9:	mov    cl,0xa9
  415aab:	xlat   BYTE PTR fs:[ebx]
  415aad:	sbb    BYTE PTR [edi],0xb6
  415ab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ab1:	emms   
  415ab3:	adc    al,0x36
  415ab5:	arpl   WORD PTR [esi+0x5cc84d79],ax
  415abb:	mov    ds:0x6e89987f,eax
  415ac0:	retf   
  415ac1:	xchg   BYTE PTR [edi],bl
  415ac3:	mov    dl,0xf3
  415ac5:	xor    eax,0x926c8598
  415aca:	scas   al,BYTE PTR es:[edi]
  415acb:	mov    ch,BYTE PTR [edx+0x21718038]
  415ad1:	mov    cl,0x3b
  415ad3:	cdq    
  415ad4:	xor    al,0x4
  415ad6:	or     ecx,DWORD PTR [ecx]
  415ad8:	or     edi,esp
  415ada:	and    al,0x76
  415adc:	mov    DWORD PTR [eax],edi
  415ade:	add    eax,0xed7bbd02
  415ae3:	(bad)  
  415ae4:	push   esi
  415ae5:	call   0x2d21:0xf13d58da
  415aec:	je     0x415b46
  415aee:	arpl   WORD PTR [esi+0x5a],si
  415af1:	imul   edx,DWORD PTR [eax-0x7658a975],0xffffffd3
  415af8:	pushf  
  415af9:	out    0xd4,al
  415afb:	sub    dl,al
  415afd:	and    bh,BYTE PTR [esi-0x2d39ed27]
  415b03:	jecxz  0x415b3f
  415b05:	and    esp,DWORD PTR [esi+0x12a54a47]
  415b0b:	inc    eax
  415b0c:	jo     0x415aa7
  415b0e:	mov    fs,WORD PTR [ebp+0x1]
  415b11:	fst    QWORD PTR [ebx-0x49]
  415b14:	iret   
  415b15:	popf   
  415b16:	xor    al,0xc4
  415b18:	iret   
  415b19:	add    al,0xae
  415b1b:	push   esp
  415b1c:	loopne 0x415ac6
  415b1e:	inc    ebp
  415b1f:	push   ds
  415b20:	xor    bl,BYTE PTR [edx+ecx*4-0x61500212]
  415b27:	fwait
  415b28:	inc    esi
  415b29:	fstp   TBYTE PTR [ecx-0x432eaae4]
  415b2f:	dec    edx
  415b30:	jmp    0xc5bea05b
  415b35:	lds    ebx,FWORD PTR [edi+0xb]
  415b38:	adc    edx,DWORD PTR [ecx+esi*4-0x26476ad0]
  415b3f:	mov    ebp,0x590967cb
  415b44:	jo     0x415b50
  415b46:	fucomp st(2)
  415b48:	mov    esi,0xf4a1b36f
  415b4d:	or     eax,0x2ba24bf4
  415b52:	dec    eax
  415b53:	mov    esp,0x62bddaa7
  415b58:	lods   eax,DWORD PTR ds:[esi]
  415b59:	cwde   
  415b5a:	jge    0x415b75
  415b5c:	mov    ebx,0x90501f34
  415b61:	test   BYTE PTR [ebp-0x4649404b],dh
  415b67:	aam    0x32
  415b69:	lock mov esp,0xe439ccc0
  415b6f:	pop    esi
  415b70:	push   ds
  415b71:	sub    dh,al
  415b73:	cwde   
  415b74:	xchg   edx,eax
  415b75:	je     0x415bee
  415b77:	ds mov ah,0x8a
  415b7a:	push   edi
  415b7b:	scas   eax,DWORD PTR es:[edi]
  415b7c:	sub    BYTE PTR [edx+0x18],bh
  415b7f:	and    esi,edx
  415b81:	cs nop
  415b83:	xchg   esp,eax
  415b84:	or     BYTE PTR ds:0x54578d4,cl
  415b8a:	pop    eax
  415b8b:	adc    al,0x2d
  415b8d:	jbe    0x45a5f6e
  415b93:	std    
  415b94:	mov    ebx,0x9dc45ed1
  415b99:	dec    eax
  415b9a:	sbb    eax,0x98a30d7a
  415b9f:	sahf   
  415ba0:	mov    ds:0xc28d2bbb,eax
  415ba5:	lahf   
  415ba6:	push   esp
  415ba7:	jmp    0x415ba3
  415ba9:	mov    gs,WORD PTR [ecx]
  415bab:	push   ecx
  415bac:	mov    ds:0x4b3791f8,eax
  415bb1:	pop    ss
  415bb2:	repnz out 0x44,al
  415bb5:	add    BYTE PTR [eax],bl
  415bb7:	dec    ebp
  415bb8:	fstp   QWORD PTR [ecx+eiz*8-0x1d]
  415bbc:	dec    ecx
  415bbd:	fdivr  DWORD PTR [eax]
  415bbf:	xchg   bh,ah
  415bc1:	mov    ah,0xb0
  415bc3:	retf   0x4a36
  415bc6:	xchg   ebp,eax
  415bc7:	pop    es
  415bc8:	in     eax,dx
  415bc9:	adc    eax,0x38579430
  415bce:	es fwait
  415bd0:	fwait
  415bd1:	or     DWORD PTR ds:0xfbc66124,edi
  415bd7:	(bad)  
  415bd8:	jbe    0x415bc4
  415bda:	imul   ecx,DWORD PTR [ecx-0x49],0xfffffff4
  415bde:	call   0x6b61:0x4b31ec61
  415be5:	push   es
  415be6:	inc    ebp
  415be7:	dec    esp
  415be8:	mov    ebp,0x2175ffdc
  415bed:	add    al,0x62
  415bef:	shl    DWORD PTR [edi+0x3128cd67],cl
  415bf5:	in     al,0x7f
  415bf7:	int3   
  415bf8:	sbb    al,0xd
  415bfa:	xchg   bh,ah
  415bfc:	pop    ebp
  415bfd:	into   
  415bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bff:	push   ebx
  415c00:	ficomp DWORD PTR [esi]
  415c02:	mov    dh,0xe2
  415c04:	xchg   DWORD PTR [edx-0x62],edi
  415c07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c08:	pushf  
  415c09:	dec    ecx
  415c0a:	fs ss popf 
  415c0d:	ss (bad) 
  415c0f:	mov    esi,0xcb71600c
  415c14:	mov    BYTE PTR [ecx],cl
  415c16:	pop    ds
  415c17:	lods   al,BYTE PTR ds:[esi]
  415c18:	in     al,0x44
  415c1a:	mov    eax,0x6e2e665e
  415c1f:	imul   esi,DWORD PTR [eax-0x73],0xe979b3bc
  415c26:	test   al,0x7c
  415c28:	nop
  415c29:	in     al,dx
  415c2a:	sub    bl,BYTE PTR [ebx+0x4bf5b22f]
  415c30:	add    DWORD PTR [ebp-0x13936ee8],ebp
  415c36:	clc    
  415c37:	inc    ebp
  415c38:	pop    edx
  415c39:	les    edi,FWORD PTR [ebx+eax*4+0x79]
  415c3d:	xlat   BYTE PTR ds:[ebx]
  415c3e:	aam    0xe5
  415c40:	stos   BYTE PTR es:[edi],al
  415c41:	out    dx,al
  415c42:	mov    ebp,0x6ad85922
  415c47:	mov    esp,0x813e0759
  415c4c:	sbb    DWORD PTR [eax+0x57],ebx
  415c4f:	sar    DWORD PTR [edx],cl
  415c51:	and    al,0x3
  415c53:	je     0x415c07
  415c55:	sahf   
  415c56:	hlt    
  415c57:	cmp    DWORD PTR [ebx],ebx
  415c59:	rcl    edi,1
  415c5b:	sbb    eax,0x5ca1fdfc
  415c60:	icebp  
  415c61:	jg     0x415cc9
  415c63:	loopne 0x415cad
  415c65:	cmp    eax,0xd77d8939
  415c6a:	push   edx
  415c6b:	mov    DWORD PTR [edi],edx
  415c6d:	out    0x7f,eax
  415c6f:	sbb    eax,0x162ed619
  415c74:	dec    ebx
  415c75:	or     al,0xf
  415c77:	js     0x415c58
  415c79:	shl    DWORD PTR [edx-0x438b4749],1
  415c7f:	shr    DWORD PTR [eax+esi*4],cl
  415c82:	out    dx,eax
  415c83:	pop    es
  415c84:	sbb    al,0x10
  415c86:	and    BYTE PTR ds:0x75bafaf,bl
  415c8c:	adc    al,0x46
  415c8e:	mov    esi,0xcd3df71a
  415c93:	cwde   
  415c94:	and    esp,DWORD PTR [eax+0x39549110]
  415c9a:	jmp    0x2325:0x192001eb
  415ca1:	out    0xa5,al
  415ca3:	jl     0x415cc7
  415ca5:	je     0x415c9b
  415ca7:	pop    es
  415ca8:	arpl   WORD PTR [ebx-0x65],bx
  415cab:	xor    al,0xe5
  415cad:	inc    edx
  415cae:	xor    al,0x79
  415cb0:	xchg   DWORD PTR [ebx+ecx*1-0x49b7e3b6],ebx
  415cb7:	daa    
  415cb8:	xor    edx,esi
  415cba:	adc    BYTE PTR [ebx+ecx*2],cl
  415cbd:	iret   
  415cbe:	pop    ss
  415cbf:	xlat   BYTE PTR ds:[ebx]
  415cc0:	shr    edx,0xf1
  415cc3:	call   0xc8ed0701
  415cc8:	(bad)  
  415cc9:	xchg   edx,eax
  415cca:	lea    ebx,[ebx]
  415ccc:	imul   ebx,DWORD PTR [esi-0x1d],0xd00395b2
  415cd3:	shl    BYTE PTR [eax+0x5d],1
  415cd6:	das    
  415cd7:	mov    BYTE PTR [ebx-0x20c0a479],ah
  415cdd:	frstor [ecx]
  415cdf:	(bad)  
  415ce0:	push   ecx
  415ce1:	(bad)  
  415ce2:	push   0xffffffb1
  415ce4:	cmp    eax,edx
  415ce6:	mov    esp,0xc2d40e7a
  415ceb:	fistp  DWORD PTR [ebx]
  415ced:	fwait
  415cee:	jmp    0xe67:0xa0a9cbc
  415cf5:	sub    dl,BYTE PTR [ebp-0x595775df]
  415cfb:	inc    eax
  415cfc:	or     eax,ebx
  415cfe:	shr    BYTE PTR [esi+edi*2],0xab
  415d02:	mov    ch,0x7b
  415d04:	mov    BYTE PTR ds:0x1bf2d935,bl
  415d0a:	inc    ebp
  415d0b:	out    dx,al
  415d0c:	xchg   edi,eax
  415d0d:	jo     0x415d42
  415d0f:	or     ch,BYTE PTR [ebp-0x24]
  415d12:	push   ecx
  415d13:	fsub   DWORD PTR [edx]
  415d15:	sahf   
  415d16:	xchg   DWORD PTR [ebx-0xf],esp
  415d19:	adc    eax,0xe3ddc754
  415d1e:	popa   
  415d1f:	jmp    0x77ac:0x8ef98623
  415d26:	cmc    
  415d27:	shl    DWORD PTR [ebx-0x32f93bc8],cl
  415d2d:	jno    0x415cd7
  415d2f:	xor    al,0xb9
  415d31:	stos   DWORD PTR es:[edi],eax
  415d32:	hlt    
  415d33:	clc    
  415d34:	inc    edi
  415d35:	je     0x415cc3
  415d37:	inc    ebp
  415d38:	mov    dl,0x50
  415d3a:	outs   dx,BYTE PTR ds:[esi]
  415d3b:	push   eax
  415d3c:	cmp    al,0x69
  415d3e:	sbb    eax,0x14fbfa56
  415d43:	aas    
  415d44:	fidiv  WORD PTR [ecx-0x12e8c656]
  415d4a:	adc    eax,0x6aa78991
  415d4f:	ins    BYTE PTR es:[edi],dx
  415d50:	xor    BYTE PTR [esi],al
  415d52:	stos   BYTE PTR es:[edi],al
  415d53:	imul   edi,DWORD PTR [eax-0x1b],0xb6234299
  415d5a:	adc    eax,0x3daf19d3
  415d5f:	mov    dh,0x27
  415d61:	fstp   DWORD PTR [edi+0xe]
  415d64:	dec    ebp
  415d65:	pop    ecx
  415d66:	(bad)  [esi-0x3c]
  415d69:	mov    DWORD PTR [eax],ebp
  415d6b:	mov    esi,esi
  415d6d:	das    
  415d6e:	dec    eax
  415d6f:	aad    0xe9
  415d71:	inc    ecx
  415d72:	push   ecx
  415d73:	xchg   esp,eax
  415d74:	push   ebx
  415d75:	int    0xf0
  415d77:	(bad)  
  415d79:	jns    0x415d19
  415d7b:	(bad)  
  415d7c:	mov    cl,0x2b
  415d7e:	and    al,0x8
  415d80:	push   esi
  415d81:	inc    esi
  415d82:	das    
  415d83:	hlt    
  415d84:	(bad)  
  415d85:	push   edi
  415d86:	and    esi,DWORD PTR [ecx-0x2a]
  415d89:	arpl   WORD PTR [ebx+0x3e],bx
  415d8c:	aam    0x38
  415d8e:	cmp    eax,0xbfd8950c
  415d93:	jle    0x415d5a
  415d95:	test   BYTE PTR ds:0x1d9429f2,ah
  415d9b:	fsubr  DWORD PTR [edi-0x80]
  415d9e:	push   0x78e76e99
  415da3:	cs out 0x11,al
  415da6:	(bad)  
  415da7:	jo     0x415db8
  415da9:	inc    edi
  415daa:	or     ch,ch
  415dac:	enter  0x998f,0x19
  415db0:	jecxz  0x415e1e
  415db2:	push   eax
  415db3:	or     eax,0xec171210
  415db8:	cmp    BYTE PTR [ebx-0x60],cl
  415dbb:	sbb    dl,BYTE PTR [ecx+0x75eca940]
  415dc1:	pop    edi
  415dc2:	cmp    edi,ebp
  415dc4:	sbb    ch,al
  415dc6:	sti    
  415dc7:	shl    BYTE PTR [esi],1
  415dc9:	leave  
  415dca:	cmp    ecx,edx
  415dcc:	push   0xffffffc6
  415dce:	mov    ecx,0x57c606af
  415dd3:	dec    esp
  415dd4:	xor    eax,0x2e3f2435
  415dd9:	xchg   BYTE PTR ds:0xf147b23,dl
  415ddf:	retf   
  415de0:	out    dx,al
  415de1:	cmp    edi,ecx
  415de3:	cmp    al,0xde
  415de5:	xchg   ebx,eax
  415de6:	aad    0xf6
  415de8:	test   DWORD PTR [edx+edx*4+0x3a],0x1d9b3b0d
  415df0:	jne    0x415dd8
  415df2:	ss add eax,0x142d468
  415df8:	out    dx,eax
  415df9:	mov    bh,0xa0
  415dfb:	sar    al,0x3b
  415dfe:	loope  0x415dbd
  415e00:	ss pop es
  415e02:	jge    0x415e04
  415e04:	mul    DWORD PTR [edi-0x1b2c1430]
  415e0a:	dec    ebp
  415e0b:	sub    al,0x6a
  415e0d:	int    0x65
  415e0f:	dec    esi
  415e10:	pop    esi
  415e11:	ins    DWORD PTR es:[edi],dx
  415e12:	cmp    BYTE PTR [eax-0x453bf0c5],al
  415e18:	mov    al,ds:0xe3766243
  415e1d:	adc    DWORD PTR [edi],edi
  415e1f:	mov    DWORD PTR [edx+esi*4+0x72],0xcc994b6e
  415e27:	retf   0x75d3
  415e2a:	cdq    
  415e2b:	into   
  415e2c:	xor    BYTE PTR [esi+ecx*4],dh
  415e2f:	inc    esi
  415e30:	adc    eax,0x28517837
  415e35:	pop    edx
  415e36:	icebp  
  415e37:	into   
  415e38:	lahf   
  415e39:	inc    ecx
  415e3a:	pushf  
  415e3b:	ja     0x415e6b
  415e3d:	lock in al,0xc7
  415e40:	push   ds
  415e41:	jo     0x415e39
  415e43:	xor    cl,BYTE PTR [ebx+0x59]
  415e46:	loopne 0x415ea3
  415e48:	aam    0xdf
  415e4a:	stos   DWORD PTR es:[edi],eax
  415e4b:	add    eax,0x5aec40f8
  415e50:	jge    0x415e56
  415e52:	ss or  al,0xc7
  415e55:	std    
  415e56:	cmp    ebx,edi
  415e58:	lods   eax,DWORD PTR ds:[esi]
  415e59:	push   ss
  415e5a:	int    0xc4
  415e5c:	inc    esp
  415e5d:	test   DWORD PTR [ebx-0x76],esp
  415e60:	addr16 mov al,ds:0x8ff6
  415e64:	sub    DWORD PTR [eax],edx
  415e66:	icebp  
  415e67:	add    DWORD PTR [edi],ebp
  415e69:	mov    ah,0x46
  415e6b:	cld    
  415e6c:	mov    ds:0xe7626e4c,al
  415e71:	out    dx,al
  415e72:	cmp    ebx,esi
  415e74:	and    DWORD PTR [esi],ecx
  415e76:	or     DWORD PTR [edx],ebx
  415e78:	lea    esi,[eax+0x39d7543a]
  415e7e:	ins    DWORD PTR es:[edi],dx
  415e7f:	leave  
  415e80:	cmp    DWORD PTR [edi-0x43de7e4d],0x1021cb93
  415e8a:	fwait
  415e8b:	popa   
  415e8c:	cmp    eax,0x4a6ddb26
  415e91:	outs   dx,BYTE PTR ds:[esi]
  415e92:	shr    DWORD PTR [ecx],0x49
  415e95:	mov    esp,0x50a4fef2
  415e9a:	(bad)  
  415e9c:	cmp    BYTE PTR [eax+0x76],bh
  415e9f:	sti    
  415ea0:	lar    eax,si
  415ea3:	fsub   st,st(5)
  415ea5:	sbb    al,0xc
  415ea7:	pop    es
  415ea8:	pop    eax
  415ea9:	jo     0x415eb0
  415eab:	in     al,dx
  415eac:	out    0x1f,al
  415eae:	mov    bh,0x6c
  415eb0:	jmp    0x415ef6
  415eb2:	jb     0x415e5c
  415eb4:	fwait
  415eb5:	cmp    BYTE PTR [edx],cl
  415eb7:	js     0x415f1a
  415eb9:	or     DWORD PTR [eax],esi
  415ebb:	xor    eax,0x925c8ebc
  415ec0:	cmp    DWORD PTR [edx-0x6e346efd],ebx
  415ec6:	sub    ebx,ebp
  415ec8:	push   DWORD PTR [ebp+0x33cf7861]
  415ece:	xor    dl,BYTE PTR [edx-0x16b5ae4]
  415ed4:	mov    eax,0xecddd998
  415ed9:	daa    
  415eda:	leave  
  415edb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415edc:	and    DWORD PTR [esi+edx*1],esi
  415edf:	xor    BYTE PTR [eax+esi*4-0x7c],dl
  415ee3:	jge    0x415f1d
  415ee5:	xchg   edx,eax
  415ee6:	sbb    ah,BYTE PTR [edx+0xe]
  415ee9:	gs inc ebp
  415eeb:	das    
  415eec:	jle    0x415f40
  415eee:	out    0x6f,al
  415ef0:	(bad)  
  415ef1:	jl     0x415e7f
  415ef3:	outs   dx,DWORD PTR ds:[esi]
  415ef4:	popa   
  415ef5:	out    dx,eax
  415ef6:	test   BYTE PTR [edi+0x1c],dl
  415ef9:	enter  0x55be,0xbf
  415efd:	pop    DWORD PTR [ebx+0x21]
  415f00:	jecxz  0x415f5a
  415f02:	dec    eax
  415f03:	sub    dh,BYTE PTR [ecx+esi*8+0x8]
  415f07:	jecxz  0x415e97
  415f09:	mov    DWORD PTR [ebx+eiz*8+0x4f],ebx
  415f0d:	mov    dh,0xc6
  415f0f:	mov    eax,0xb29f1c17
  415f14:	adc    al,0x26
  415f16:	aas    
  415f17:	mov    edx,0x2305cb50
  415f1c:	dec    ecx
  415f1d:	and    eax,0xb1e1207b
  415f22:	dec    edx
  415f23:	popa   
  415f24:	mov    ah,dl
  415f26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f27:	imul   eax,eax,0xeee19d69
  415f2d:	adc    ah,al
  415f2f:	add    al,BYTE PTR [edi]
  415f31:	xchg   ecx,eax
  415f32:	fcmovnu st,st(4)
  415f34:	test   DWORD PTR [edx-0x18],esi
  415f37:	adc    edi,DWORD PTR [ecx]
  415f39:	loope  0x415fba
  415f3b:	mov    edi,0x927f8c7a
  415f40:	mov    ch,0x6c
  415f42:	aad    0x30
  415f44:	js     0x415f8e
  415f46:	lods   eax,DWORD PTR ds:[esi]
  415f47:	outs   dx,BYTE PTR ds:[esi]
  415f48:	jp     0x415f61
  415f4a:	xor    DWORD PTR [edx+0x4e],ebx
  415f4d:	push   esi
  415f4e:	(bad)  
  415f4f:	(bad)  
  415f50:	and    eax,0xc95897fe
  415f55:	(bad)  
  415f56:	dec    esi
  415f57:	push   cs
  415f58:	mov    edi,0x248556
  415f5d:	loopne 0x415f69
  415f5f:	int    0x25
  415f61:	or     cl,0x8a
  415f64:	jnp    0x415fc2
  415f66:	dec    ebx
  415f67:	adc    DWORD PTR [ecx-0x3e],edi
  415f6a:	out    dx,al
  415f6b:	ins    BYTE PTR es:[edi],dx
  415f6c:	dec    edi
  415f6d:	aad    0x68
  415f6f:	adc    DWORD PTR [edi+0x1a55651],esp
  415f75:	dec    edi
  415f76:	daa    
  415f77:	es nop
  415f79:	xlat   BYTE PTR cs:[ebx]
  415f7b:	mov    bh,0x4f
  415f7d:	jnp    0x415fac
  415f7f:	pop    edi
  415f80:	cmp    DWORD PTR [eax-0x19],esp
  415f83:	dec    ebp
  415f84:	imul   ebp,DWORD PTR [ecx+0x4e],0xc492f59a
  415f8b:	les    ebp,FWORD PTR ds:0x9951d857
  415f91:	rcr    ch,0x29
  415f94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f95:	add    al,0x38
  415f97:	stos   DWORD PTR es:[edi],eax
  415f98:	ins    BYTE PTR es:[edi],dx
  415f99:	stc    
  415f9a:	aas    
  415f9b:	sbb    al,0x53
  415f9d:	jo     0x415f3e
  415f9f:	or     al,0xbe
  415fa1:	into   
  415fa2:	mov    eax,ds:0xbf17c626
  415fa7:	test   al,0xd3
  415fa9:	mov    fs,WORD PTR [eax]
  415fab:	je     0x415fa4
  415fad:	sub    cl,BYTE PTR [ebx]
  415faf:	pop    es
  415fb0:	cld    
  415fb1:	sti    
  415fb2:	dec    edx
  415fb3:	inc    esi
  415fb4:	fadd   st(3),st
  415fb6:	mov    bh,0x8f
  415fb8:	test   al,0xc1
  415fba:	(bad)  
  415fbc:	jg     0x415feb
  415fbe:	pop    ds
  415fbf:	fidiv  WORD PTR [ebx]
  415fc1:	in     al,0x1d
  415fc3:	inc    edx
  415fc4:	dec    esi
  415fc5:	in     eax,0x6
  415fc7:	stc    
  415fc8:	(bad)  
  415fc9:	xlat   BYTE PTR ds:[ebx]
  415fca:	push   ebp
  415fcb:	xor    al,ah
  415fcd:	je     0x415f93
  415fcf:	inc    esp
  415fd0:	xchg   edi,eax
  415fd1:	out    0x96,eax
  415fd3:	aam    0xf3
  415fd5:	mov    dl,0xdc
  415fd7:	test   al,0x7e
  415fd9:	push   eax
  415fda:	sbb    ebp,DWORD PTR [esi+0x6a]
  415fdd:	or     edi,DWORD PTR ds:0x40e08f58
  415fe3:	jmp    0xb10b:0xa28ea16
  415fea:	sub    al,0xb8
  415fec:	push   edx
  415fed:	push   ebx
  415fee:	lods   al,BYTE PTR ds:[esi]
  415fef:	jns    0x415f7a
  415ff1:	ds ret 0x9f2
  415ff5:	fstp   TBYTE PTR [ebp-0x3c]
  415ff8:	and    BYTE PTR [eax+0x5e76ea4c],0x37
  415fff:	ins    BYTE PTR es:[edi],dx
  416000:	enter  0xc38d,0x6e
  416004:	adc    al,0xc9
  416006:	jnp    0x415fa6
  416008:	sbb    bh,dh
  41600a:	imul   ebx,DWORD PTR [esi-0x9],0xa914ee00
  416011:	cmp    ebx,DWORD PTR [esi+0x0]
  416014:	sub    BYTE PTR [eax+0x698ab39b],dl
  41601a:	fs pop eax
  41601c:	sub    eax,0x295df982
  416021:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416022:	jecxz  0x41600c
  416024:	pusha  
  416025:	xchg   DWORD PTR [edx-0x58],ecx
  416028:	xchg   DWORD PTR [ebx],esi
  41602a:	or     dh,0x20
  41602d:	pop    ds
  41602e:	shl    DWORD PTR [esi],0xe3
  416031:	(bad)  
  416032:	xchg   edx,eax
  416033:	mov    al,ds:0x4af9678c
  416038:	jmp    0xbaae:0xaf1cfae2
  41603f:	inc    esp
  416040:	push   eax
  416041:	sub    al,0xd9
  416043:	call   0xaae4ac90
  416048:	ret    
  416049:	mov    ebx,0xc9786a9a
  41604e:	sar    DWORD PTR [ebx-0x1b710dbe],0xe8
  416055:	ins    DWORD PTR es:[edi],dx
  416056:	and    eax,0xeb1e8fe2
  41605b:	sbb    ebp,DWORD PTR [edi+0x19d04976]
  416061:	nop
  416062:	or     dh,BYTE PTR [edx]
  416064:	or     bh,ah
  416066:	or     esi,esi
  416068:	neg    bh
  41606a:	jg     0x59efbf32
  416070:	push   ds
  416071:	hlt    
  416072:	add    DWORD PTR [ebx+0x7493cf27],0x1b3bbb5a
  41607c:	mov    ds:0xcf197257,eax
  416081:	es dec ecx
  416083:	in     al,0x7d
  416085:	imul   edi,DWORD PTR [ebp-0x51],0x58
  416089:	stos   DWORD PTR es:[edi],eax
  41608a:	loope  0x4160a4
  41608c:	xor    eax,0x9b66ad2d
  416091:	sbb    eax,0x7fe4240d
  416096:	ins    DWORD PTR es:[edi],dx
  416097:	cwde   
  416098:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41609a:	sbb    ch,BYTE PTR [ebp+0x4b988ffc]
  4160a0:	stc    
  4160a1:	sar    BYTE PTR [eax],1
  4160a3:	in     eax,dx
  4160a4:	stc    
  4160a5:	imul   BYTE PTR [eax]
  4160a7:	sahf   
  4160a8:	xchg   ecx,eax
  4160a9:	fstp   DWORD PTR ss:[edx]
  4160ac:	mov    al,ds:0x7d9382f9
  4160b1:	mov    dh,0x8f
  4160b3:	and    BYTE PTR [eax],0x97
  4160b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160b7:	js     0x416048
  4160b9:	xor    bl,BYTE PTR [eax+0x35865c0d]
  4160bf:	inc    edi
  4160c0:	xchg   edi,eax
  4160c1:	mov    ecx,0x33cb2786
  4160c6:	mov    cs,WORD PTR [ecx+0x4af34cff]
  4160cc:	jno    0x4160e2
  4160ce:	nop
  4160cf:	mov    esp,0xeba61788
  4160d4:	test   DWORD PTR [edx+0x37586a79],0xad53cbfe
  4160de:	xchg   edi,eax
  4160df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160e0:	loope  0x4160e9
  4160e2:	or     BYTE PTR gs:[esi+0xf180c21],0xd0
  4160ea:	dec    eax
  4160eb:	fs (bad) 
  4160ed:	push   0xb396e302
  4160f2:	adc    ebp,0x88f18477
  4160f8:	xor    DWORD PTR [ecx],ebp
  4160fa:	das    
  4160fb:	(bad)  
  4160fd:	not    BYTE PTR [ecx-0x5d36c25c]
  416103:	xor    ecx,DWORD PTR [eax]
  416105:	das    
  416106:	xchg   ebx,eax
  416107:	or     ah,BYTE PTR [esi-0xa]
  41610a:	clc    
  41610b:	and    eax,0x56abf89c
  416110:	adc    bl,ah
  416112:	sbb    eax,0xa7b86d5a
  416117:	scas   al,BYTE PTR es:[edi]
  416118:	jns    0x4160b7
  41611a:	mov    BYTE PTR ds:0x5f514960,ch
  416120:	push   ss
  416121:	cld    
  416122:	sub    bh,BYTE PTR [ebp-0x4c389ede]
  416128:	in     al,dx
  416129:	loop   0x4160f9
  41612b:	xchg   esp,eax
  41612c:	scas   eax,DWORD PTR es:[edi]
  41612d:	xchg   esp,eax
  41612e:	sbb    BYTE PTR [eax+0x3],cl
  416131:	jnp    0x4161ae
  416133:	adc    DWORD PTR [eax+ecx*4-0x7f],edi
  416137:	outs   dx,BYTE PTR ds:[esi]
  416138:	push   ecx
  416139:	sub    BYTE PTR [ebx+ebp*8],0x71
  41613d:	iret   
  41613e:	mov    ds:0x83f5c852,eax
  416143:	ins    BYTE PTR es:[edi],dx
  416144:	xor    al,0xc0
  416146:	lahf   
  416147:	scas   eax,DWORD PTR es:[edi]
  416148:	mov    eax,ds:0x2eb5f78f
  41614d:	xchg   BYTE PTR [esi+0x3a9a12df],cl
  416153:	add    al,0x66
  416155:	mov    eax,ds:0x4c6112fa
  41615a:	imul   ebp,eax,0xe2783749
  416160:	fcomp  DWORD PTR [eax+eiz*1-0x5bb261ce]
  416167:	btc    ebp,edx
  41616a:	mov    ecx,0x6e2386f8
  41616f:	shr    DWORD PTR [edx+0x258ce67e],0x57
  416176:	mov    esi,DWORD PTR [eax]
  416178:	popa   
  416179:	clc    
  41617a:	mov    bh,0x5b
  41617c:	cdq    
  41617d:	mov    esp,0x5a7d4b49
  416182:	push   edi
  416183:	test   BYTE PTR [edx],dl
  416185:	outs   dx,BYTE PTR ds:[esi]
  416186:	shr    BYTE PTR [ecx-0x12],0x6a
  41618a:	inc    ebx
  41618b:	push   ecx
  41618c:	test   eax,0xe1aeb9cf
  416191:	jbe    0x41611f
  416193:	iret   
  416194:	or     ah,BYTE PTR [esi+0x78]
  416197:	ficom  DWORD PTR [ebx]
  416199:	xor    edi,ebx
  41619b:	sub    ecx,esp
  41619d:	or     dl,dh
  41619f:	add    eax,0x94305d5c
  4161a4:	mov    edx,DWORD PTR [edi+0xa123d10]
  4161aa:	mov    esp,0x1181205
  4161af:	mov    WORD PTR [ebp+ebx*2+0x36],gs
  4161b3:	push   ecx
  4161b4:	mov    esi,0x2a0e7da0
  4161b9:	pop    esi
  4161ba:	rcr    DWORD PTR [ecx],cl
  4161bc:	adc    esp,DWORD PTR [eax]
  4161be:	les    ecx,FWORD PTR [edi]
  4161c0:	or     al,0xbb
  4161c2:	adc    al,BYTE PTR [ebx]
  4161c4:	push   cs
  4161c5:	sbb    al,ch
  4161c7:	cmp    bl,0x4d
  4161ca:	xchg   BYTE PTR ds:0xeef624b6,dh
  4161d0:	inc    ebx
  4161d1:	push   ss
  4161d2:	adc    DWORD PTR [ebx-0x1b],0xcc943d2f
  4161d9:	or     BYTE PTR [edx+0x32],bh
  4161dc:	xchg   BYTE PTR [eax-0x69],al
  4161df:	ret    0x2122
  4161e2:	push   ebp
  4161e3:	(bad)  
  4161e4:	push   ebx
  4161e5:	fsubr  st,st(1)
  4161e7:	xor    ecx,esi
  4161e9:	or     BYTE PTR [edi+0x9],al
  4161ec:	imul   eax,DWORD PTR [ebp+edi*4+0xc68a845],0xd8d928cd
  4161f7:	push   ds
  4161f8:	in     al,dx
  4161f9:	test   eax,0xc94d9c0f
  4161fe:	pushf  
  4161ff:	adc    al,0xf4
  416201:	inc    esi
  416202:	mov    WORD PTR [esi],cs
  416204:	inc    esp
  416205:	pusha  
  416206:	pop    edx
  416207:	(bad)  
  416208:	aas    
  416209:	cmp    bl,BYTE PTR [edi]
  41620b:	pop    ebx
  41620c:	out    0x84,al
  41620e:	cwde   
  41620f:	clc    
  416210:	sbb    ecx,ebx
  416212:	fist   WORD PTR [ebp*2+0x687f0286]
  416219:	cmp    eax,0xabbc60ce
  41621e:	outs   dx,DWORD PTR ds:[esi]
  41621f:	mov    al,0x68
  416221:	(bad)  
  416222:	out    0x38,eax
  416224:	jo     0x4161ec
  416226:	xchg   DWORD PTR [esp+ebp*1+0x68],edi
  41622a:	mov    dl,0x3c
  41622c:	(bad)
  416230:	call   0x599532b7
  416235:	dec    eax
  416236:	or     eax,0xfed344e3
  41623b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41623c:	push   eax
  41623d:	or     al,0xc1
  41623f:	leave  
  416240:	pop    eax
  416241:	inc    ecx
  416242:	lods   al,BYTE PTR ds:[esi]
  416243:	dec    ecx
  416244:	jmp    0x8811:0x8c651b03
  41624b:	add    BYTE PTR [edx],bh
  41624d:	cwde   
  41624e:	or     ecx,DWORD PTR [eax+0x24]
  416251:	adc    ch,ch
  416253:	scas   al,BYTE PTR es:[edi]
  416254:	leave  
  416255:	cdq    
  416256:	lods   al,BYTE PTR ds:[si]
  416258:	mov    ds:0x4c619429,eax
  41625d:	in     al,0x86
  41625f:	mov    cl,0x55
  416261:	mov    ah,0xee
  416263:	lds    edi,FWORD PTR [esi-0x3c]
  416266:	add    edi,ebx
  416268:	pop    esi
  416269:	loope  0x416271
  41626b:	cs dec esp
  41626d:	push   esp
  41626e:	cdq    
  41626f:	and    al,0xc
  416271:	dec    ebx
  416272:	push   ebp
  416273:	push   edx
  416274:	mov    cl,bh
  416276:	jae    0x416231
  416278:	jle    0x41622d
  41627a:	icebp  
  41627b:	add    eax,0xab21ef18
  416280:	xchg   edi,eax
  416281:	and    eax,0x28179280
  416286:	jo     0x4162f1
  416288:	mov    ds:0x56e0dbb0,al
  41628d:	sub    al,0x8c
  41628f:	lds    ebp,FWORD PTR [edi+0x5a63fbc6]
  416295:	dec    edi
  416296:	or     cl,BYTE PTR [ebx-0x7efc018]
  41629c:	test   BYTE PTR [eax],ch
  41629e:	inc    ebx
  41629f:	call   0xed06:0x4ffb3b2a
  4162a6:	or     dh,BYTE PTR [ebp-0x57]
  4162a9:	xchg   DWORD PTR [edi-0x6],ecx
  4162ac:	and    eax,0x74354528
  4162b1:	or     eax,0xdcd29d22
  4162b6:	clc    
  4162b7:	ret    
  4162b8:	push   0xf
  4162ba:	xchg   ebx,eax
  4162bb:	pop    ebp
  4162bc:	push   ebp
  4162bd:	sbb    bh,0x50
  4162c0:	outs   dx,BYTE PTR ds:[esi]
  4162c1:	(bad)  
  4162c2:	jmp    0x416289
  4162c4:	ds lahf 
  4162c6:	pop    esi
  4162c7:	xchg   ebx,eax
  4162c8:	lock into 
  4162ca:	jns    0x416299
  4162cc:	and    al,0x71
  4162ce:	hlt    
  4162cf:	(bad)  
  4162d0:	(bad)  
  4162d1:	imul   ebx,esp,0xe449858f
  4162d7:	or     esi,DWORD PTR ds:0x1bd49ff3
  4162dd:	dec    esp
  4162de:	push   cs
  4162df:	mov    al,ds:0x255e06f9
  4162e4:	mov    ebx,0x674c07e4
  4162e9:	inc    ebx
  4162ea:	xor    al,0x2d
  4162ec:	call   0x7c0e0045
  4162f1:	push   ecx
  4162f2:	mov    ds:0x2d2319ae,al
  4162f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162f8:	shr    DWORD PTR [esi+0x58],cl
  4162fb:	das    
  4162fc:	aam    0xc9
  4162fe:	lods   al,BYTE PTR ds:[esi]
  4162ff:	xchg   ah,dl
  416301:	sub    ebp,DWORD PTR [esi+0x46]
  416304:	xchg   ebx,eax
  416305:	mov    edi,0xa5ebaeda
  41630a:	retf   0x45b5
  41630d:	push   ebp
  41630e:	(bad)  
  41630f:	(bad)  [eax-0x28]
  416312:	push   ds
  416313:	sub    esp,DWORD PTR [esi-0x650b5286]
  416319:	fild   DWORD PTR [eax]
  41631b:	stos   BYTE PTR es:[edi],al
  41631c:	cmp    al,0xef
  41631e:	inc    eax
  41631f:	loopne 0x416354
  416321:	lea    esi,[edi+0x46c60523]
  416327:	(bad)  
  416329:	mov    dl,BYTE PTR [ecx]
  41632b:	add    bl,BYTE PTR [edi]
  41632d:	repnz hlt 
  41632f:	jecxz  0x41639d
  416331:	sub    eax,0x496d4426
  416336:	call   0xb040:0x556ee382
  41633d:	cmp    al,0xce
  41633f:	dec    edx
  416340:	fwait
  416341:	int    0x33
  416343:	push   eax
  416344:	jns    0x416330
  416346:	inc    eax
  416347:	loopne 0x4162ee
  416349:	push   edi
  41634a:	mov    ch,0xc8
  41634c:	xchg   ecx,eax
  41634d:	ffree  st(3)
  41634f:	pop    ecx
  416350:	inc    ecx
  416351:	mov    eax,ds:0x699e16d3
  416356:	push   0xffffffd2
  416358:	in     al,0xa8
  41635a:	je     0x41635b
  41635c:	pop    ebx
  41635d:	test   al,0x2c
  41635f:	add    dh,BYTE PTR [eax-0x4c1cb94f]
  416365:	cwde   
  416366:	outs   dx,BYTE PTR ds:[esi]
  416367:	shl    BYTE PTR [ecx-0x7c],0xef
  41636b:	cli    
  41636c:	and    DWORD PTR [eax],0x46fa2be0
  416372:	fs jae 0x416329
  416375:	jl     0x41636a
  416377:	jmp    DWORD PTR [ebx]
  416379:	push   eax
  41637a:	pop    ecx
  41637b:	xchg   esi,eax
  41637c:	jno    0x41632e
  41637e:	jmp    0xd5a1:0x6fac5c0c
  416385:	stos   DWORD PTR es:[edi],eax
  416386:	pop    esi
  416387:	scas   al,BYTE PTR es:[edi]
  416388:	add    eax,0x60532e97
  41638d:	outs   dx,DWORD PTR ds:[esi]
  41638e:	jecxz  0x41633b
  416390:	xor    ch,BYTE PTR [edi]
  416392:	sbb    BYTE PTR [ebx+0x641362ef],dl
  416398:	sahf   
  416399:	push   0x5d
  41639b:	std    
  41639c:	ss retf 0xe7c6
  4163a0:	pusha  
  4163a1:	leave  
  4163a2:	cmp    eax,0x4384e705
  4163a7:	std    
  4163a8:	sub    bh,BYTE PTR [edi+ecx*4+0x59aacf84]
  4163af:	jecxz  0x416344
  4163b1:	into   
  4163b2:	mov    WORD PTR [ebx+0x38],cs
  4163b5:	(bad)  
  4163b6:	aam    0xee
  4163b8:	out    0xac,al
  4163ba:	mov    cs,WORD PTR [edi+edx*2]
  4163bd:	adc    eax,DWORD PTR [ebp+0x4d4643ab]
  4163c3:	cmp    al,0xbd
  4163c5:	mov    ebp,0xd52f8577
  4163ca:	sbb    BYTE PTR [ecx],dl
  4163cc:	mov    bh,0x82
  4163ce:	adc    DWORD PTR [ecx+0x3a],edi
  4163d1:	push   cs
  4163d2:	pop    es
  4163d3:	push   0x17ccab12
  4163d8:	dec    edi
  4163d9:	adc    bl,dl
  4163db:	pop    esi
  4163dc:	in     al,dx
  4163dd:	out    dx,eax
  4163de:	or     BYTE PTR [edx+0x13],cl
  4163e1:	xchg   edi,eax
  4163e2:	xlat   BYTE PTR ds:[ebx]
  4163e3:	lock add eax,0xb1a000ef
  4163e9:	test   al,0x85
  4163eb:	sub    eax,0xe5fa801e
  4163f0:	es out 0xf7,eax
  4163f3:	ins    DWORD PTR es:[edi],dx
  4163f4:	fcomp  DWORD PTR [eax-0x70]
  4163f7:	stos   BYTE PTR es:[edi],al
  4163f8:	dec    ebp
  4163f9:	into   
  4163fa:	push   esp
  4163fb:	in     al,0x1a
  4163fd:	push   eax
  4163fe:	inc    eax
  4163ff:	jno    0x41645a
  416401:	pop    esi
  416402:	(bad)  
  416404:	arpl   di,dx
  416406:	call   0xbd16:0x7d1aaf0e
  41640d:	xor    BYTE PTR [ebp+0x6c429956],bl
  416413:	dec    ecx
  416414:	test   eax,0x2efad3bb
  416419:	mov    al,0xce
  41641b:	je     0x416419
  41641d:	adc    BYTE PTR [ebx+0x5],dh
  416420:	or     DWORD PTR [ebp-0x1291c838],edx
  416426:	es cmp eax,0xd7278251
  41642c:	imul   edi,DWORD PTR [edi+0x6dd98f80],0xffffffbf
  416433:	adc    al,0xe7
  416435:	sbb    bl,dl
  416437:	enter  0x208,0xd2
  41643b:	sub    ch,dl
  41643d:	mov    dh,0xa6
  41643f:	rol    DWORD PTR [ecx+0x27ee0011],0x48
  416446:	push   0x79
  416448:	cmp    bl,dh
  41644a:	inc    edi
  41644b:	push   0xffffff8a
  41644d:	sbb    al,BYTE PTR [ebp-0x12]
  416450:	scas   al,BYTE PTR es:[edi]
  416451:	sub    BYTE PTR [edi],dh
  416453:	cwde   
  416454:	ret    
  416455:	retf   0xa818
  416458:	aas    
  416459:	loopne 0x4164ba
  41645b:	jle    0x41644b
  41645d:	or     eax,ecx
  41645f:	jle    0x41644d
  416461:	jbe    0x41645c
  416463:	jmp    0x4164a1
  416465:	and    al,al
  416467:	jnp    0x4164c2
  416469:	mov    esi,0x6403ab40
  41646e:	shl    BYTE PTR [ecx],0xad
  416471:	cmp    BYTE PTR [ebp+0x3a0634ed],bl
  416477:	jg     0x416494
  416479:	mov    bh,0xa
  41647b:	cmp    BYTE PTR [eax+0x6e],bh
  41647e:	xor    BYTE PTR [eax+0x38],dh
  416481:	xchg   ebx,eax
  416482:	xchg   esp,eax
  416483:	imul   ebx,DWORD PTR [edi-0x52],0xc783dc58
  41648a:	push   0xe034071f
  41648f:	fidiv  WORD PTR [edi]
  416491:	div    DWORD PTR [ecx+0x41a53277]
  416497:	es pop ds
  416499:	jmp    0x8415:0xe50a858c
  4164a0:	cmp    al,0x34
  4164a2:	add    BYTE PTR [edx+0x8],0xd5
  4164a6:	jmp    0x8db1a95c
  4164ab:	outs   dx,DWORD PTR ds:[esi]
  4164ac:	rcr    BYTE PTR [esi-0x59],1
  4164af:	inc    esi
  4164b0:	outs   dx,BYTE PTR ds:[esi]
  4164b1:	ins    DWORD PTR es:[edi],dx
  4164b2:	dec    ecx
  4164b3:	sub    DWORD PTR [eax+esi*2-0x2e709da2],ecx
  4164ba:	cmp    eax,0xa72a358c
  4164bf:	setb   BYTE PTR [edx+ebx*4-0x7b]
  4164c4:	mov    eax,0x70c8ada3
  4164c9:	loop   0x4164a1
  4164cb:	mov    WORD PTR ds:0xa472a313,es
  4164d1:	xor    ebp,DWORD PTR [edi]
  4164d3:	hlt    
  4164d4:	sbb    al,0xb0
  4164d6:	ret    0x4940
  4164d9:	rol    edx,cl
  4164db:	stc    
  4164dc:	ret    0xc2a7
  4164df:	rol    DWORD PTR [ebp+0x46],cl
  4164e2:	add    BYTE PTR [eax],ch
  4164e4:	in     al,dx
  4164e5:	dec    edi
  4164e6:	fst    DWORD PTR [edi+0x7f520c7a]
  4164ec:	mov    ds:0xaa25ad9f,eax
  4164f1:	mov    ds:0x111f4dbd,eax
  4164f6:	sub    ah,BYTE PTR [edx]
  4164f8:	and    eax,0x9567167a
  4164fd:	jno    0x4164c7
  4164ff:	cmp    BYTE PTR [edx+0x70],bl
  416502:	cli    
  416503:	das    
  416504:	out    0x8d,eax
  416506:	pushf  
  416507:	or     BYTE PTR [ebx-0x4b9c0f1c],ah
  41650d:	xchg   esi,eax
  41650e:	aad    0xbc
  416510:	stos   BYTE PTR es:[edi],al
  416511:	iret   
  416512:	mov    ebx,0x28de86da
  416517:	fcom   DWORD PTR [edx+ebp*2]
  41651a:	and    al,0xfd
  41651c:	push   edx
  41651d:	cdq    
  41651e:	das    
  41651f:	imul   edi,edx,0x80d33609
  416525:	and    DWORD PTR ds:0x92869c44,ebp
  41652b:	sar    DWORD PTR [ebp-0x11e000c],1
  416531:	popf   
  416532:	push   esp
  416533:	and    BYTE PTR [eax],cl
  416535:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416536:	push   ecx
  416537:	or     cl,BYTE PTR [eax]
  416539:	xor    bh,0x3e
  41653c:	add    DWORD PTR ds:0x69c105c0,eax
  416542:	jno    0x416507
  416544:	sti    
  416545:	ret    
  416546:	mov    ebp,0x5e74765b
  41654b:	pop    edx
  41654c:	fs es and eax,0x66a51248
  416553:	push   ss
  416554:	int    0x4f
  416556:	xchg   ecx,eax
  416557:	sbb    BYTE PTR [esi+0x2],0x72
  41655b:	jmp    0x4165a1
  41655d:	jnp    0x416566
  41655f:	lock xor al,0x17
  416562:	pop    ebx
  416563:	jmp    0x4165c6
  416565:	pop    edx
  416566:	std    
  416567:	jg     0x41659d
  416569:	and    al,0x4
  41656b:	or     eax,0xfb68762d
  416570:	adc    ah,BYTE PTR [ecx]
  416572:	push   ecx
  416573:	push   edi
  416574:	fistp  WORD PTR ds:0x11cfd5fb
  41657a:	enter  0x6ce2,0x37
  41657e:	jno    0x416537
  416580:	pop    ss
  416581:	cld    
  416582:	out    0x29,al
  416584:	inc    edi
  416585:	cmp    BYTE PTR [eax-0x640b91a],0x2f
  41658c:	mov    bh,0xba
  41658e:	mov    ch,0xc1
  416590:	pop    ds
  416591:	mulps  xmm4,XMMWORD PTR [edi]
  416594:	sub    eax,DWORD PTR [edi+0x20639a17]
  41659a:	sub    eax,0xd7e9849c
  41659f:	jae    0x4165d3
  4165a1:	push   eax
  4165a2:	(bad)  
  4165a3:	fld    TBYTE PTR [eax]
  4165a5:	cmp    esp,esp
  4165a7:	rol    DWORD PTR [edx+0x7d],0xf7
  4165ab:	in     al,dx
  4165ac:	pop    es
  4165ad:	out    0x76,al
  4165af:	lea    edi,[edx-0x4c66c291]
  4165b5:	ins    BYTE PTR es:[edi],dx
  4165b6:	fwait
  4165b7:	dec    ebx
  4165b8:	push   0x25393c9
  4165bd:	hlt    
  4165be:	aam    0xae
  4165c0:	inc    ebx
  4165c1:	mov    dh,0x20
  4165c3:	mov    ecx,0x51d70fce
  4165c8:	mov    eax,?
  4165ca:	cwde   
  4165cb:	push   esi
  4165cc:	aas    
  4165cd:	push   cs
  4165ce:	xor    ebp,DWORD PTR [edx-0x69]
  4165d1:	jecxz  0x416652
  4165d3:	ss mov ebp,0x14e37484
  4165d9:	pop    ebx
  4165da:	xor    dl,ah
  4165dc:	xlat   BYTE PTR ds:[ebx]
  4165dd:	cwde   
  4165de:	and    DWORD PTR [ebx+0x393a6599],0xeb997ad0
  4165e8:	sub    al,0xa9
  4165ea:	and    esp,DWORD PTR [edx]
  4165ec:	loop   0x416616
  4165ee:	shr    DWORD PTR [edi],0x8b
  4165f1:	mov    dh,BYTE PTR [edi+0x56124de3]
  4165f7:	and    edi,edi
  4165f9:	clc    
  4165fa:	stos   DWORD PTR es:[edi],eax
  4165fb:	fidiv  WORD PTR [esp+edi*4+0x568e0725]
  416602:	mov    ah,0x8c
  416604:	add    eax,0x55149a2d
  416609:	jbe    0x41661f
  41660b:	in     eax,dx
  41660c:	cld    
  41660d:	mov    ebx,DWORD PTR ds:0xb44dd1ab
  416613:	retf   0xd0e4
  416616:	push   0x43
  416618:	out    0x25,al
  41661a:	sub    al,0xc2
  41661c:	mov    al,al
  41661e:	mov    bh,0x1a
  416620:	cli    
  416621:	cli    
  416622:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  416624:	shr    BYTE PTR [eax+0x49],1
  416627:	push   ebx
  416628:	mov    edx,0xe6dc775a
  41662d:	sub    DWORD PTR [ebx+edx*2-0x5d3100ce],esi
  416634:	adc    esi,DWORD PTR [eax+0x58b5a68c]
  41663a:	mov    bl,0x38
  41663c:	or     eax,0x847154c9
  416641:	xor    eax,0x1a57ad21
  416646:	cmp    DWORD PTR [edi+0xd],ebx
  416649:	arpl   WORD PTR [eax],dx
  41664b:	ins    BYTE PTR es:[edi],dx
  41664c:	icebp  
  41664d:	jae    0x4165f2
  41664f:	out    dx,al
  416650:	push   cs
  416651:	data16 fst QWORD PTR [ebp-0x31]
  416655:	lock dec BYTE PTR [ecx+0x4218cc82]
  41665c:	aam    0x2f
  41665e:	xor    al,0x6
  416660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416661:	mov    dh,0xf4
  416663:	add    BYTE PTR [ecx+0x522aeba6],ah
  416669:	mov    eax,ds:0x124fb768
  41666f:	adc    BYTE PTR [edi*8+0x7bcdbdb9],dl
  416676:	arpl   WORD PTR ds:0x2481fe0d,bp
  41667c:	(bad)  
  41667d:	fstp   DWORD PTR [ebp-0x22e5b4f9]
  416683:	mov    dh,0xf7
  416685:	pop    ebp
  416686:	repnz sbb edi,DWORD PTR [esi]
  416689:	jne    0x416670
  41668b:	pusha  
  41668c:	cmp    edx,DWORD PTR [ebp+0x6471d5dc]
  416692:	aas    
  416693:	mov    al,0xef
  416695:	lahf   
  416696:	xlat   BYTE PTR ds:[ebx]
  416697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416698:	adc    DWORD PTR [ebp-0x3edff7c],ebx
  41669e:	repz adc al,0xf1
  4166a1:	cmp    edi,edx
  4166a3:	out    0x25,al
  4166a5:	inc    ebx
  4166a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166a7:	mov    WORD PTR [esi-0x6e],?
  4166aa:	or     cl,0x72
  4166ad:	and    edx,esp
  4166af:	push   ss
  4166b0:	ins    DWORD PTR es:[edi],dx
  4166b1:	pop    edi
  4166b2:	les    ebp,FWORD PTR [eax]
  4166b4:	cli    
  4166b5:	sub    edx,DWORD PTR [edi-0x3]
  4166b8:	mov    WORD PTR [edx+esi*8-0x20],gs
  4166bc:	mov    gs,WORD PTR [edx+0x6b180b1f]
  4166c2:	(bad)  
  4166c5:	arpl   WORD PTR [bp+0x3638],sp
  4166ca:	jecxz  0x41671f
  4166cc:	or     cl,BYTE PTR [eax]
  4166ce:	rcr    DWORD PTR [ebx],0xc
  4166d1:	pop    es
  4166d2:	sub    al,0xb0
  4166d4:	call   edi
  4166d6:	sub    edx,DWORD PTR [edx+edx*2]
  4166d9:	dec    ebx
  4166da:	mov    ds:0xa94ed623,al
  4166df:	add    ebp,DWORD PTR [ebx+0x2d8fa612]
  4166e5:	in     al,dx
  4166e6:	add    eax,0x8086e7b6
  4166eb:	jns    0x41672a
  4166ed:	pop    esp
  4166ee:	gs inc eax
  4166f0:	std    
  4166f1:	call   0x7bee2cb5
  4166f6:	sbb    eax,0xca2e20d4
  4166fb:	fst    DWORD PTR [ebp-0x24]
  4166fe:	stos   DWORD PTR es:[edi],eax
  4166ff:	pop    esi
  416700:	fsub   st,st(4)
  416702:	imul   ebp,edi,0x58
  416705:	or     BYTE PTR [ebx+0xf],al
  416708:	mov    bh,0xcc
  41670a:	add    eax,0x4950e04b
  41670f:	xchg   edi,eax
  416710:	and    BYTE PTR [edi-0x19],cl
  416713:	jg     0x4166e6
  416715:	dec    edx
  416716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416717:	ret    
  416718:	jo     0x41669b
  41671a:	jne    0x41674d
  41671c:	scas   al,BYTE PTR es:[edi]
  41671d:	cmc    
  41671e:	sti    
  41671f:	fmulp  st(4),st
  416721:	jns    0x4166c2
  416723:	dec    ebx
  416724:	push   ss
  416725:	fs imul ebp
  416728:	add    cl,BYTE PTR [edx-0x1d979cc7]
  41672e:	push   eax
  41672f:	jae    0x4166d9
  416731:	and    BYTE PTR [ebp-0x14],0xb8
  416735:	push   edi
  416736:	dec    ebp
  416737:	mov    bl,0xda
  416739:	pusha  
  41673a:	adc    al,0x90
  41673c:	sub    eax,0x30932c68
  416741:	in     al,0xd0
  416743:	xchg   edi,eax
  416744:	imul   ebx,DWORD PTR [edi-0x7b],0x637ae7c9
  41674b:	pop    ebp
  41674c:	clc    
  41674d:	nop
  41674e:	sub    ch,ah
  416750:	mov    edx,0x9e8d943e
  416755:	cli    
  416756:	jne    0x416716
  416758:	push   es
  416759:	add    dl,BYTE PTR ds:0x4bcd3d1e
  41675f:	neg    DWORD PTR [edi+ebx*2+0x34bfee69]
  416766:	xchg   ecx,eax
  416767:	sbb    BYTE PTR [ebp-0x77471fef],cl
  41676d:	rcl    BYTE PTR [ecx+0x4bf8f045],0x3b
  416774:	arpl   WORD PTR [esi+0x3cd45060],bp
  41677a:	mov    bh,0x58
  41677c:	jbe    0x4167f1
  41677e:	fcmove st,st(2)
  416780:	lea    esp,[ebp+0x5f]
  416783:	mov    WORD PTR [ecx],?
  416785:	push   0x45
  416787:	je     0x4167d6
  416789:	sahf   
  41678a:	inc    ecx
  41678b:	push   ebp
  41678c:	inc    eax
  41678d:	inc    ebx
  41678e:	sub    eax,0xbc46b36a
  416793:	loope  0x4167cc
  416795:	inc    ebx
  416796:	aad    0x87
  416798:	sub    edi,DWORD PTR [ecx+edx*8-0x1b40c68e]
  41679f:	in     al,0x4b
  4167a1:	and    bh,BYTE PTR [edi-0x5b]
  4167a4:	xor    BYTE PTR [eax*4+0x65cf1272],bh
  4167ab:	outs   dx,BYTE PTR ds:[esi]
  4167ac:	mov    ecx,0x25f21a0e
  4167b1:	out    0x1d,al
  4167b3:	and    esp,DWORD PTR [edi+0x13ac7ae9]
  4167b9:	shr    BYTE PTR [edx-0x4cf17a56],0x10
  4167c0:	int3   
  4167c1:	push   0xffffffa5
  4167c3:	push   0x35
  4167c5:	push   ss
  4167c6:	xor    BYTE PTR [ebp+0x1a79634e],bh
  4167cc:	jae    0x4167eb
  4167ce:	fild   WORD PTR [edx+0x3f]
  4167d2:	ins    BYTE PTR es:[edi],dx
  4167d3:	sub    al,0x32
  4167d5:	mov    eax,DWORD PTR [edx+ebp*4+0xd5ca9a4]
  4167dc:	sahf   
  4167dd:	xchg   esi,eax
  4167de:	fldcw  WORD PTR [edx]
  4167e0:	dec    esi
  4167e1:	mov    bl,BYTE PTR [edx]
  4167e3:	pop    edx
  4167e4:	sbb    esp,DWORD PTR [edi-0x661d5c23]
  4167ea:	push   ds
  4167eb:	xor    al,0xc9
  4167ed:	cmp    ebx,eax
  4167ef:	scas   al,BYTE PTR es:[edi]
  4167f0:	pop    eax
  4167f1:	xchg   edi,eax
  4167f2:	jmp    0x41682d
  4167f4:	adc    eax,0xf7845e40
  4167f9:	in     eax,0xa0
  4167fb:	in     al,dx
  4167fc:	mov    ecx,DWORD PTR [edi+ecx*1+0x3c5b0bd2]
  416803:	ds cs ins DWORD PTR es:[edi],dx
  416806:	fldenv [esi-0x19]
  416809:	fadd   QWORD PTR [eax+0x3662138b]
  41680f:	cmp    eax,0x29714eb6
  416814:	mov    ?,WORD PTR [eax+0x476cc102]
  41681a:	retf   0x9046
  41681d:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41681f:	lods   eax,DWORD PTR ds:[esi]
  416820:	ror    DWORD PTR ds:0xa3adff1a,1
  416826:	cmp    dl,BYTE PTR [esi+0x33]
  416829:	jg     0x41686a
  41682b:	adc    DWORD PTR [eax-0x57],edx
  41682e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41682f:	and    ebp,DWORD PTR [ebx]
  416831:	cmp    ch,BYTE PTR [edi*8-0xda2229c]
  416838:	cdq    
  416839:	cmp    dl,BYTE PTR [esi-0x76]
  41683c:	mov    cl,0xa1
  41683e:	call   0xbc9f51e2
  416843:	and    dl,BYTE PTR [ebx-0x11066cd3]
  416849:	sbb    eax,0x2c3fc19
  41684e:	repz mov eax,0xb24ef7fe
  416854:	adc    eax,0xc4196e62
  416859:	loope  0x4168d3
  41685b:	mov    bh,0x77
  41685d:	adc    ch,BYTE PTR [edx-0x5866756d]
  416863:	adc    DWORD PTR [edi-0x62],ecx
  416866:	adc    al,0x0
  416868:	sbb    DWORD PTR ds:0x8b528af8,edi
  41686e:	popa   
  41686f:	repz js 0x4168a4
  416872:	inc    esp
  416873:	sbb    edx,edx
  416875:	stc    
  416876:	scas   eax,DWORD PTR es:[edi]
  416877:	mov    eax,0xbebed99
  41687c:	jno    0x41688d
  41687e:	(bad)  
  41687f:	cmp    BYTE PTR [si+0x97],ah
  416884:	sbb    BYTE PTR [ecx+0xd],bh
  416887:	pop    ds
  416888:	jmp    0xa3199648
  41688d:	lea    esp,[eax-0x49]
  416890:	push   es
  416891:	sti    
  416892:	xchg   edi,eax
  416893:	jecxz  0x41687d
  416895:	(bad)  
  416896:	es sbb eax,0xeef32854
  41689c:	pop    eax
  41689d:	sbb    eax,DWORD PTR [ebp+0x2b]
  4168a0:	xchg   dl,ch
  4168a2:	push   ss
  4168a3:	push   ebp
  4168a4:	pop    eax
  4168a5:	vmread ebp,edi
  4168a8:	push   ebp
  4168a9:	aaa    
  4168aa:	nop
  4168ab:	mov    eax,ds:0xbb6cfa70
  4168b0:	or     al,0x75
  4168b2:	mov    eax,ds:0xdff1874f
  4168b7:	or     bh,dh
  4168b9:	pop    eax
  4168ba:	ret    0xa66b
  4168bd:	loope  0x416927
  4168bf:	jae    0x416893
  4168c1:	ret    0x6bb
  4168c4:	adc    ebp,edx
  4168c6:	dec    eax
  4168c7:	and    bl,BYTE PTR [eax]
  4168c9:	jae    0x4168fe
  4168cb:	cs fcmovnbe st,st(2)
  4168ce:	adc    ebp,DWORD PTR [edi+eax*2-0x708f0f75]
  4168d5:	push   ss
  4168d6:	sar    DWORD PTR [edi-0x2b1658bd],1
  4168dc:	sbb    BYTE PTR [esi-0x37],ch
  4168df:	aad    0x3f
  4168e1:	cs mov eax,0x5281e1ae
  4168e7:	cdq    
  4168e8:	inc    ecx
  4168e9:	scas   al,BYTE PTR es:[edi]
  4168ea:	or     edi,ebx
  4168ec:	sbb    eax,0xf08ee79a
  4168f1:	xchg   ecx,eax
  4168f2:	mov    dl,0x24
  4168f4:	pop    ds
  4168f5:	inc    ecx
  4168f6:	imul   ecx,DWORD PTR [esi],0x34c9de5b
  4168fc:	(bad)  
  4168fe:	add    bh,bl
  416900:	pop    ebx
  416901:	je     0x416899
  416903:	mov    edi,0x608ac01a
  416908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416909:	fdivr  QWORD PTR [edi+0x5e]
  41690c:	das    
  41690d:	xor    ebp,ebx
  41690f:	pop    edi
  416910:	xchg   ecx,eax
  416911:	or     ecx,DWORD PTR [ecx]
  416913:	jecxz  0x4168bc
  416915:	lock out 0xce,eax
  416918:	xchg   ebp,eax
  416919:	retf   
  41691a:	fild   WORD PTR [eax+0x51ceda46]
  416920:	push   es
  416921:	xlat   BYTE PTR ds:[ebx]
  416922:	ja     0x4168e0
  416924:	pop    ss
  416925:	cmp    al,0x47
  416927:	xchg   ebp,eax
  416928:	(bad)  
  416929:	(bad)  
  41692a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41692b:	or     dl,BYTE PTR [esi+0x4db178c1]
  416931:	mov    cl,0xd1
  416933:	or     BYTE PTR [esi+0xaa9c5a2],cl
  416939:	pop    ebx
  41693a:	fsub   DWORD PTR [esi+0x47b89f7]
  416940:	pop    ss
  416941:	test   DWORD PTR [esi+eax*4-0x61c2a00c],0xf85ab327
  41694c:	mov    ah,0xff
  41694e:	gs dec ecx
  416950:	add    eax,0x4f6345c
  416955:	xor    al,0xea
  416957:	add    BYTE PTR gs:[ebp+ebp*2+0x2eeefd92],bl
  41695f:	(bad)  
  416961:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416962:	sub    al,0xed
  416964:	mov    al,BYTE PTR [edi+0x47d9ec4]
  41696a:	jmp    0x4168f1
  41696c:	xor    edi,esi
  41696e:	popa   
  41696f:	mov    edi,0xcc0bdc2c
  416974:	stos   BYTE PTR es:[edi],al
  416975:	icebp  
  416976:	mov    ebp,ecx
  416978:	rol    ecx,0x9c
  41697b:	mov    eax,ds:0xe2b0c596
  416980:	mov    ebp,0x2b93983a
  416985:	cmp    eax,0x3cc581f7
  41698a:	iret   
  41698b:	jnp    0x416994
  41698d:	bound  ecx,QWORD PTR ds:0x3be25352
  416993:	cmp    al,0x7b
  416995:	inc    esi
  416996:	pop    ss
  416997:	cmp    DWORD PTR [ecx-0x9],0x23357a97
  41699e:	push   ebp
  41699f:	mov    eax,0x8cbfd1a1
  4169a4:	and    esi,DWORD PTR [esi+0x1774250e]
  4169aa:	sub    cl,BYTE PTR [edx]
  4169ac:	inc    eax
  4169ad:	dec    ecx
  4169ae:	xchg   esp,eax
  4169af:	adc    DWORD PTR [eax],edx
  4169b1:	sub    BYTE PTR [edi-0x40fa257a],dh
  4169b7:	mov    ebp,0xa95d18c8
  4169bc:	inc    ebp
  4169bd:	aas    
  4169be:	mov    edx,esi
  4169c0:	mov    ecx,0x603e9a7c
  4169c5:	xchg   ecx,eax
  4169c6:	xchg   DWORD PTR [eax],esi
  4169c8:	repnz dec ecx
  4169ca:	loopne 0x416994
  4169cc:	cmp    ah,cl
  4169ce:	or     al,0x50
  4169d0:	outs   dx,DWORD PTR cs:[esi]
  4169d2:	pop    ebx
  4169d3:	xchg   ebp,eax
  4169d4:	fcom   st(5)
  4169d6:	popa   
  4169d7:	pop    ebp
  4169d8:	cmp    DWORD PTR [edi-0x44ff6c53],ecx
  4169de:	scas   eax,DWORD PTR es:[edi]
  4169df:	sbb    eax,0x599a3dfa
  4169e4:	popa   
  4169e5:	cdq    
  4169e6:	or     DWORD PTR [ecx-0x49],eax
  4169e9:	inc    eax
  4169ea:	inc    ebx
  4169eb:	lods   al,BYTE PTR ds:[esi]
  4169ec:	out    dx,al
  4169ed:	(bad)  
  4169ee:	xchg   edi,eax
  4169ef:	sub    BYTE PTR [ecx-0x16],ch
  4169f2:	add    eax,DWORD PTR [ebx]
  4169f4:	adc    DWORD PTR [ebx-0x48b8d7b6],eax
  4169fa:	xor    bh,BYTE PTR [edi]
  4169fc:	popa   
  4169fd:	jp     0x416995
  4169ff:	cli    
  416a00:	push   es
  416a01:	cld    
  416a02:	std    
  416a03:	add    BYTE PTR [ecx-0x36],ah
  416a06:	stos   DWORD PTR es:[edi],eax
  416a07:	lods   al,BYTE PTR ds:[esi]
  416a08:	add    eax,0x846c886e
  416a0d:	bound  esp,QWORD PTR [ebx+0x8]
  416a10:	add    DWORD PTR [ebx+0x78],edx
  416a13:	push   0xffffffe4
  416a15:	push   ds
  416a16:	mov    edx,0x21dadce5
  416a1b:	adc    cl,ah
  416a1d:	fadd   DWORD PTR [ebp+0x58]
  416a20:	fadd   st(5),st
  416a22:	mov    ebp,0x87c0a2b9
  416a27:	call   0xd099:0xb608f2d5
  416a2e:	mov    WORD PTR [ecx+0x5db916c7],?
  416a34:	mov    ds:0xad354381,al
  416a39:	push   ecx
  416a3a:	in     eax,dx
  416a3b:	ret    
  416a3c:	daa    
  416a3d:	std    
  416a3e:	pop    ebx
  416a3f:	loopne 0x416a46
  416a41:	out    dx,al
  416a42:	sub    eax,0xcf08056d
  416a47:	addr16 fs push esp
  416a4a:	cld    
  416a4b:	mov    dh,0x94
  416a4d:	mov    ebp,0xb51a5739
  416a52:	add    edx,edi
  416a54:	iret   
  416a55:	xor    esp,DWORD PTR [eax+0x25]
  416a58:	cmp    al,cl
  416a5a:	aas    
  416a5b:	ins    BYTE PTR es:[edi],dx
  416a5c:	fistp  WORD PTR [edx-0x25cc17e3]
  416a62:	fidivr WORD PTR [ebx+0x26142a73]
  416a68:	jno    0x416aa9
  416a6a:	sub    BYTE PTR [esp+edi*2+0x35],0x94
  416a6f:	or     al,0x30
  416a71:	adc    eax,0x4d8bba96
  416a76:	or     BYTE PTR [edx-0x5a1ea1e],bh
  416a7c:	sub    edx,ecx
  416a7e:	add    edx,DWORD PTR [ebp-0x44]
  416a81:	mov    DWORD PTR [ebp-0x44],edx
  416a84:	mov    ecx,DWORD PTR [ebp+0x8]
  416a87:	xor    ecx,eax
  416a89:	add    ecx,esi
  416a8b:	jmp    0x418e4a
  416a90:	(bad)  
  416a91:	clc    
  416a92:	fsub   st,st(6)
  416a94:	mov    ah,0xc6
  416a96:	mov    ah,0xe8
  416a98:	mov    cl,0x4b
  416a9a:	cmp    DWORD PTR [eax+eiz*8-0x29ec6f09],edi
  416aa1:	push   edi
  416aa2:	jns    0x416b1e
  416aa4:	fcomp  DWORD PTR [edi+0x7a]
  416aa7:	jp     0x416b28
  416aa9:	mov    eax,0x44ef885c
  416aae:	cli    
  416aaf:	rep ins DWORD PTR es:[edi],dx
  416ab1:	aaa    
  416ab2:	lds    esp,FWORD PTR [edx-0x21cd29ec]
  416ab8:	inc    BYTE PTR [ecx-0x4b]
  416abb:	xchg   esi,ecx
  416abd:	call   0x38b16757
  416ac2:	or     al,0x56
  416ac4:	mov    ch,0x26
  416ac6:	fst    DWORD PTR [ebx]
  416ac8:	mov    eax,ds:0x6c06b9fc
  416acd:	pushf  
  416ace:	dec    eax
  416acf:	pop    eax
  416ad0:	adc    eax,0x74a7429c
  416ad5:	dec    ebx
  416ad6:	mov    al,ds:0xcf1c2052
  416adb:	push   ds
  416adc:	inc    edi
  416add:	xchg   esp,eax
  416ade:	daa    
  416adf:	gs xchg ebx,edi
  416ae2:	outs   dx,DWORD PTR ds:[esi]
  416ae3:	xlat   BYTE PTR ds:[ebx]
  416ae4:	(bad)  
  416ae6:	leave  
  416ae7:	jns    0x416b1e
  416ae9:	les    edi,FWORD PTR [edi]
  416aeb:	mov    bh,0x36
  416aed:	cwde   
  416aee:	mov    edx,0x1e28108f
  416af3:	pop    es
  416af4:	mov    ebp,0xc7ebce9c
  416af9:	push   0x16
  416afb:	dec    esi
  416afc:	push   esp
  416afd:	sub    DWORD PTR [edx+eiz*1],esi
  416b00:	std    
  416b01:	std    
  416b02:	pop    edi
  416b03:	xor    DWORD PTR [esi],esi
  416b05:	lds    esp,FWORD PTR [ebx-0x6f]
  416b08:	scas   eax,DWORD PTR es:[edi]
  416b09:	push   ebp
  416b0a:	scas   eax,DWORD PTR es:[edi]
  416b0b:	mov    WORD PTR [edi],es
  416b0d:	mov    BYTE PTR [esi-0x38],ch
  416b10:	sti    
  416b11:	retf   0x6c7c
  416b14:	xor    DWORD PTR [ebx-0x6eefeee7],edi
  416b1a:	arpl   WORD PTR [esp+edx*1-0x4a8a63ff],sp
  416b21:	inc    edx
  416b22:	ds pop ebp
  416b24:	xchg   ebx,eax
  416b25:	cdq    
  416b26:	push   ds
  416b27:	sub    eax,0x6f54a211
  416b2c:	inc    ecx
  416b2d:	inc    esp
  416b2e:	enter  0xbab4,0xe
  416b32:	loopne 0x416b0e
  416b34:	add    bh,cl
  416b36:	push   es
  416b37:	sar    DWORD PTR fs:0xe70016d9,0x74
  416b3f:	cmp    ecx,ebp
  416b41:	fs mov bh,0xb6
  416b44:	outs   dx,DWORD PTR ds:[esi]
  416b45:	mov    dl,0xa9
  416b47:	(bad)  
  416b48:	adc    eax,0xb24376f5
  416b4d:	jne    0x416ba1
  416b4f:	shl    DWORD PTR [edx-0x54],0x45
  416b53:	pminub mm0,QWORD PTR [edi-0x8]
  416b57:	adc    DWORD PTR [ebp-0x24],ebp
  416b5a:	dec    edx
  416b5b:	sar    BYTE PTR [esi],1
  416b5d:	dec    eax
  416b5e:	and    BYTE PTR [edi+0x62],dh
  416b61:	xchg   ebx,eax
  416b62:	mov    ah,0x57
  416b64:	test   BYTE PTR [edi],0x54
  416b67:	jmp    0xc628d11f
  416b6c:	test   DWORD PTR [edx+0x33],eax
  416b6f:	or     BYTE PTR [esi+0x2a],ch
  416b72:	out    0xf4,eax
  416b74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b75:	fst    DWORD PTR [ebx+0x30]
  416b78:	call   0xec9e0d07
  416b7d:	mov    ebp,0x1473884b
  416b82:	sti    
  416b83:	out    0xf1,al
  416b85:	pop    ebx
  416b86:	mov    eax,ds:0x7b09334
  416b8b:	stos   BYTE PTR es:[edi],al
  416b8c:	dec    ecx
  416b8d:	loop   0x416b47
  416b8f:	cld    
  416b90:	loopne 0x416bdd
  416b92:	xchg   esp,eax
  416b93:	pop    edi
  416b94:	ins    BYTE PTR es:[edi],dx
  416b95:	push   cs
  416b96:	pusha  
  416b97:	pop    ecx
  416b98:	mov    edi,0xacf6721b
  416b9d:	lock sbb edx,ebp
  416ba0:	imul   ebx,DWORD PTR [edx-0x32],0x3e
  416ba4:	pop    ecx
  416ba5:	pusha  
  416ba6:	and    ch,0x5f
  416ba9:	aas    
  416baa:	mov    eax,0x603ab046
  416baf:	jae    0x416b91
  416bb1:	push   eax
  416bb2:	dec    edx
  416bb3:	xlat   BYTE PTR ds:[ebx]
  416bb4:	xchg   ebx,eax
  416bb5:	aaa    
  416bb6:	pop    es
  416bb7:	sbb    BYTE PTR [ebx-0x5237be34],dh
  416bbd:	outs   dx,DWORD PTR ds:[esi]
  416bbe:	jne    0x416b84
  416bc0:	lahf   
  416bc1:	pop    ecx
  416bc2:	fidivr DWORD PTR [esi+0x76]
  416bc5:	clc    
  416bc6:	sar    DWORD PTR [eax+0x41],cl
  416bc9:	inc    edx
  416bca:	sbb    DWORD PTR [ebp+0x66d9503b],edi
  416bd0:	call   0x6d5a:0xd6ca5868
  416bd7:	sbb    DWORD PTR [esi-0x5fc3e6c0],eax
  416bdd:	inc    esp
  416bdf:	jne    0x416bd1
  416be1:	cmp    dh,BYTE PTR [ebx]
  416be3:	hlt    
  416be4:	jne    0x416c3e
  416be6:	jbe    0xe988697
  416bec:	loopne 0x416c29
  416bee:	mov    edi,0x23cb0a91
  416bf3:	push   es
  416bf4:	aad    0x97
  416bf6:	pop    edx
  416bf7:	stc    
  416bf8:	lods   eax,DWORD PTR ds:[esi]
  416bf9:	sbb    BYTE PTR [ebx-0x6c13437a],ch
  416bff:	inc    esp
  416c00:	sub    eax,0xec7ee2c0
  416c05:	fwait
  416c06:	(bad)  
  416c07:	jne    0x416bf1
  416c09:	lods   eax,DWORD PTR ds:[esi]
  416c0a:	out    dx,eax
  416c0b:	mov    WORD PTR [ebx+edi*4],gs
  416c0e:	mov    eax,ds:0xc65acc80
  416c13:	xchg   ecx,eax
  416c14:	jecxz  0x416c32
  416c16:	pop    esp
  416c17:	push   ebx
  416c18:	mov    al,0x4c
  416c1a:	in     al,dx
  416c1b:	lods   eax,DWORD PTR ds:[esi]
  416c1c:	push   esi
  416c1d:	mov    esp,0xfc58ce33
  416c22:	add    DWORD PTR [ebx],eax
  416c24:	push   ecx
  416c25:	fisttp QWORD PTR gs:[eax+ebp*2-0xb]
  416c2a:	rcr    ecx,1
  416c2c:	cs jmp 0x416c7f
  416c2f:	dec    ebx
  416c30:	clc    
  416c31:	pusha  
  416c32:	js     0x416bf9
  416c34:	jo     0x416bc1
  416c36:	xor    BYTE PTR [edx],cl
  416c38:	loop   0x416bbd
  416c3a:	mov    dh,0x24
  416c3c:	mov    bh,0xa0
  416c3e:	idiv   ecx
  416c40:	jb     0x416c52
  416c42:	fld    DWORD PTR [ebx+edi*1+0x3f6182d6]
  416c49:	(bad)  
  416c4b:	sti    
  416c4c:	test   eax,0xd07f0819
  416c51:	or     ebx,DWORD PTR ds:0x25a7fba3
  416c57:	cmp    esp,DWORD PTR [ebx]
  416c59:	mov    eax,ds:0xcbe1781e
  416c5e:	dec    esi
  416c5f:	add    DWORD PTR [edi-0x4e],ecx
  416c62:	int3   
  416c63:	call   0x6ab7f1f5
  416c68:	mov    al,BYTE PTR [eax+0x4]
  416c6b:	into   
  416c6c:	push   cs
  416c6d:	ds mov eax,0xcfbc6d33
  416c73:	cmp    dh,bl
  416c75:	test   eax,0xe6536ba
  416c7a:	pop    ss
  416c7b:	sub    eax,DWORD PTR [edi+eiz*1+0xd]
  416c7f:	sbb    bl,BYTE PTR [eax+0x481aaf73]
  416c85:	loopne 0x416ca4
  416c87:	repz call 0x365a:0xd0da479d
  416c8f:	push   esi
  416c90:	push   edx
  416c91:	data16 aam 0xf9
  416c94:	data16 xchg BYTE PTR [esp+edx*8+0x1376046d],cl
  416c9c:	aam    0x61
  416c9e:	mov    bl,0x9a
  416ca0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ca1:	(bad)  
  416ca2:	xlat   BYTE PTR ds:[ebx]
  416ca3:	cld    
  416ca4:	shl    DWORD PTR [ecx],cl
  416ca6:	inc    eax
  416ca7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ca8:	es lds ebx,FWORD PTR ss:[ebx]
  416cac:	sub    eax,edi
  416cae:	xchg   esp,eax
  416caf:	push   edx
  416cb0:	test   al,0x0
  416cb2:	or     al,BYTE PTR [edi]
  416cb4:	push   es
  416cb5:	dec    edi
  416cb6:	adc    DWORD PTR [edi],ebp
  416cb8:	sbb    al,0x1c
  416cba:	addr16 popf 
  416cbc:	pop    esi
  416cbd:	mov    ds:0x1ee4ce8e,eax
  416cc2:	jg     0x416c9f
  416cc4:	sbb    ah,BYTE PTR [ebx-0x37]
  416cc7:	mov    dh,bh
  416cc9:	ret    0x4701
  416ccc:	lds    ecx,FWORD PTR [edx-0x65]
  416ccf:	in     eax,dx
  416cd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cd1:	scas   eax,DWORD PTR es:[edi]
  416cd2:	loopne 0x416d18
  416cd4:	stos   BYTE PTR es:[edi],al
  416cd5:	add    ebp,DWORD PTR [edi+0x75]
  416cd8:	fmul   QWORD PTR [eax]
  416cda:	call   0xba1d:0xc8ef9bd2
  416ce1:	dec    eax
  416ce2:	pop    edx
  416ce3:	xchg   ah,ch
  416ce5:	int3   
  416ce6:	jo     0x416c6a
  416ce8:	popf   
  416ce9:	(bad)  
  416cea:	lock sub eax,0xa31b6a25
  416cf0:	inc    edi
  416cf1:	push   ds
  416cf2:	mov    al,0x95
  416cf4:	inc    eax
  416cf5:	hlt    
  416cf6:	fisub  DWORD PTR [edx]
  416cf8:	mov    edx,0x8d596a3f
  416cfd:	push   cs
  416cfe:	mov    ds:0xe9bcc3c5,al
  416d03:	sahf   
  416d04:	ins    DWORD PTR es:[edi],dx
  416d05:	ss mov cl,0xe7
  416d08:	mov    esp,0xee2476bb
  416d0d:	inc    ecx
  416d0e:	and    eax,0xc6843c28
  416d13:	inc    ebx
  416d14:	xlat   BYTE PTR ds:[ebx]
  416d15:	dec    esi
  416d16:	sub    al,0x2f
  416d18:	test   BYTE PTR [ebx+0x1c881357],ch
  416d1e:	or     cl,BYTE PTR [ecx-0xc]
  416d21:	fld    TBYTE PTR [ebx+ecx*8]
  416d24:	pop    ss
  416d25:	mov    ss,WORD PTR [ebx]
  416d27:	pop    edi
  416d28:	cmp    ebx,DWORD PTR [edi-0x2087e559]
  416d2e:	iret   
  416d2f:	sub    BYTE PTR [esi+0x40b6bdd0],al
  416d35:	sbb    DWORD PTR [ebp+edi*1-0x648b02dc],ebx
  416d3c:	(bad)  
  416d3e:	push   ebp
  416d3f:	ret    0x6e19
  416d42:	sub    ecx,DWORD PTR [ecx-0x6f]
  416d45:	jne    0x416da7
  416d47:	xor    BYTE PTR [ecx-0x55],bh
  416d4a:	add    dh,bl
  416d4c:	mov    esp,0x24b4253b
  416d51:	aaa    
  416d52:	sbb    dh,dl
  416d54:	in     al,dx
  416d55:	cmp    ebp,DWORD PTR [ecx-0x16]
  416d58:	inc    esp
  416d59:	inc    ecx
  416d5a:	in     al,0x3b
  416d5c:	xchg   ebx,eax
  416d5d:	in     eax,0x5f
  416d5f:	sbb    DWORD PTR [esi-0x49445202],esp
  416d65:	setg   BYTE PTR [edx-0x3fc8aee9]
  416d6c:	pusha  
  416d6d:	mov    al,ds:0x9bb5ff2
  416d72:	imul   di,dx,0x5367
  416d77:	(bad)  
  416d79:	push   esi
  416d7a:	jnp    0x416d63
  416d7c:	xor    eax,0xed8d8d
  416d81:	lods   eax,DWORD PTR ds:[esi]
  416d82:	add    eax,0xce2fcddc
  416d87:	inc    edx
  416d88:	xor    ecx,edx
  416d8a:	mov    eax,0x895ccc4d
  416d8f:	loope  0x416d70
  416d91:	xchg   ebx,eax
  416d92:	or     ch,BYTE PTR [ebp+ebp*1-0x2a0ed8ce]
  416d99:	mov    edi,0x63fd78b6
  416d9e:	jge    0x416d70
  416da0:	bound  eax,QWORD PTR [edi+0x49bcdb11]
  416da6:	enter  0xf3a1,0x4
  416daa:	shl    BYTE PTR [ebx],0x1
  416dad:	pop    esi
  416dae:	call   0x3211:0x8e7e1e8c
  416db5:	sub    eax,0x489d43c6
  416dba:	xchg   BYTE PTR [ebp+edi*2-0x6dc6c530],dl
  416dc1:	hlt    
  416dc2:	push   es
  416dc3:	ja     0x416e2a
  416dc5:	pushf  
  416dc6:	mov    al,ds:0x4d189084
  416dcb:	xor    ecx,DWORD PTR [esi]
  416dcd:	jae    0x416e46
  416dcf:	inc    esi
  416dd0:	lock mov ah,0x80
  416dd3:	push   edx
  416dd4:	nop
  416dd5:	mov    BYTE PTR [ecx+0x4471136c],ch
  416ddb:	test   esi,edx
  416ddd:	stos   BYTE PTR es:[edi],al
  416dde:	push   ss
  416ddf:	out    0xce,eax
  416de1:	ins    BYTE PTR es:[edi],dx
  416de2:	inc    edi
  416de3:	or     al,0x62
  416de5:	xchg   ecx,eax
  416de6:	in     al,0xcb
  416de8:	gs into 
  416dea:	test   eax,0xa471c69b
  416def:	and    ah,ch
  416df1:	fidiv  WORD PTR [esi-0x61]
  416df4:	pop    ebx
  416df5:	rol    BYTE PTR [eax+0x30630833],0x20
  416dfc:	ret    
  416dfd:	or     dl,BYTE PTR [edi+0x5b]
  416e00:	xchg   ebx,eax
  416e01:	movlps xmm6,QWORD PTR [edx+0x66]
  416e05:	pop    edi
  416e06:	fisubr WORD PTR [edi]
  416e08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e0a:	sbb    eax,0x8a0adf2c
  416e0f:	test   BYTE PTR [ebx+0x30],dh
  416e12:	or     edx,DWORD PTR [ecx+0x6080679]
  416e18:	pusha  
  416e19:	xchg   edx,eax
  416e1a:	ret    0xb49d
  416e1d:	mov    ds:0xab0c2db4,eax
  416e22:	rol    bh,1
  416e24:	call   FWORD PTR [ecx]
  416e26:	loop   0x416ea7
  416e28:	rcr    DWORD PTR [ebx],cl
  416e2a:	xor    al,bl
  416e2c:	mov    DWORD PTR [esi+0x20528823],eax
  416e32:	fsub   DWORD PTR [edi-0x66]
  416e35:	ja     0x416e3d
  416e37:	lods   eax,DWORD PTR ds:[esi]
  416e38:	xchg   ebp,eax
  416e39:	lea    ecx,[edx-0x7f102452]
  416e3f:	cmp    al,0x5e
  416e41:	inc    esi
  416e42:	daa    
  416e43:	daa    
  416e44:	push   es
  416e45:	sub    DWORD PTR [ecx-0x21c5be8b],esp
  416e4b:	mov    cs,edx
  416e4d:	fsubr  DWORD PTR [ecx]
  416e4f:	sbb    bl,bl
  416e51:	adc    BYTE PTR [ebp-0x22],0x8c
  416e55:	popa   
  416e56:	mov    ds:0x2d17019e,eax
  416e5b:	gs xchg esi,eax
  416e5d:	je     0x416e11
  416e5f:	mov    al,0xc7
  416e61:	sub    ebx,DWORD PTR [ecx+0x69322b00]
  416e67:	ficomp WORD PTR [edx-0x2e]
  416e6a:	adc    bl,BYTE PTR ds:0x91cb1ba8
  416e70:	ins    DWORD PTR es:[edi],dx
  416e71:	xor    ah,ch
  416e73:	mov    bl,0x8a
  416e75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e76:	mov    eax,ds:0x470a0f9b
  416e7b:	scas   al,BYTE PTR es:[edi]
  416e7c:	jno    0x416eea
  416e7e:	mov    bh,0x50
  416e80:	std    
  416e81:	and    eax,0x588769a7
  416e86:	inc    esp
  416e87:	pop    edx
  416e88:	pop    edi
  416e89:	aaa    
  416e8a:	das    
  416e8b:	jae    0x416e8b
  416e8d:	div    BYTE PTR [edi+0x3b]
  416e90:	mov    eax,ds:0x49aa1653
  416e95:	stc    
  416e96:	sti    
  416e97:	mov    dh,0x23
  416e99:	pop    edx
  416e9a:	and    ecx,DWORD PTR [edx+0x4afa35a]
  416ea0:	pop    ebx
  416ea1:	mov    WORD PTR [eax+0x24b9c0f8],fs
  416ea7:	sbb    bh,dl
  416ea9:	xor    dl,BYTE PTR [edx+ebx*4]
  416eac:	cdq    
  416ead:	xlat   BYTE PTR ds:[ebx]
  416eae:	ds xchg ecx,eax
  416eb0:	(bad)  [ecx-0x5a]
  416eb3:	add    DWORD PTR [edi],esp
  416eb5:	jnp    0x416e8a
  416eb7:	out    dx,al
  416eb8:	add    al,0x33
  416eba:	cld    
  416ebb:	push   edi
  416ebc:	mov    ss,WORD PTR [esi+0x48d25bac]
  416ec2:	lods   eax,DWORD PTR ds:[esi]
  416ec3:	or     al,0xfc
  416ec5:	jno    0x416e59
  416ec7:	pop    eax
  416ec8:	jp     0x416eb4
  416eca:	push   esp
  416ecb:	jle    0x416ec5
  416ecd:	or     BYTE PTR [esi+edi*1+0x4a],dh
  416ed1:	fsub   st(1),st
  416ed3:	jo     0x416ee7
  416ed5:	hlt    
  416ed6:	inc    edx
  416ed7:	popa   
  416ed8:	out    0x51,al
  416eda:	arpl   WORD PTR [edi],bp
  416edc:	push   ebx
  416edd:	popf   
  416ede:	jne    0x416f3a
  416ee0:	leave  
  416ee1:	mov    edi,DWORD PTR [edi+0x4aa839e1]
  416ee7:	inc    ecx
  416ee8:	xchg   ecx,eax
  416ee9:	inc    edi
  416eea:	pavgb  mm4,QWORD PTR [ecx-0xe]
  416eee:	fnstcw WORD PTR ds:0x2c44e1da
  416ef4:	push   esi
  416ef5:	mul    BYTE PTR ds:0x6e8af687
  416efb:	lds    esi,FWORD PTR [ebx-0xa7f4fb5]
  416f01:	cmp    DWORD PTR [edi-0x75],esi
  416f04:	dec    eax
  416f05:	jne    0x416e98
  416f07:	(bad)  
  416f08:	in     al,dx
  416f09:	xor    dl,dl
  416f0b:	mov    bh,dl
  416f0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f0e:	mov    al,ds:0x9c282675
  416f13:	popf   
  416f14:	call   0xb5868edc
  416f19:	push   0xffffffc8
  416f1b:	pop    edi
  416f1c:	out    0xa0,eax
  416f1e:	xor    DWORD PTR [eax],ecx
  416f20:	mov    ebx,0xb1904e90
  416f25:	or     ch,ch
  416f27:	je     0x416f41
  416f29:	jle    0x416f3c
  416f2b:	js     0x416efc
  416f2d:	xchg   ecx,eax
  416f2e:	shl    cl,1
  416f30:	aam    0x78
  416f32:	out    dx,al
  416f33:	mov    ebp,0x96b6d539
  416f38:	pop    ss
  416f39:	test   al,0xf1
  416f3b:	xchg   ecx,eax
  416f3c:	sar    dl,0x7a
  416f3f:	lds    ecx,FWORD PTR [ecx+0x55]
  416f42:	cmp    BYTE PTR [ebp+0x7114abcf],dl
  416f48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f49:	xchg   esp,eax
  416f4a:	stos   DWORD PTR es:[edi],eax
  416f4b:	adc    al,0x72
  416f4d:	push   edi
  416f4e:	push   esi
  416f4f:	aas    
  416f50:	loope  0x416f9e
  416f52:	call   0xc2e4:0x185a16df
  416f59:	pop    edi
  416f5a:	jne    0x416eeb
  416f5c:	xchg   edi,esi
  416f5e:	inc    ecx
  416f5f:	ret    
  416f60:	jp     0x416f2c
  416f62:	pushf  
  416f63:	ins    BYTE PTR es:[edi],dx
  416f64:	lods   al,BYTE PTR ds:[esi]
  416f65:	pop    ebx
  416f66:	sbb    BYTE PTR [esi+0x47479a58],dl
  416f6c:	shl    BYTE PTR [esi-0x22],1
  416f6f:	fwait
  416f70:	shl    ecx,0x9a
  416f73:	(bad)  
  416f74:	pop    edx
  416f75:	mov    al,0x3e
  416f77:	fsubr  QWORD PTR [esp+eiz*2]
  416f7a:	cmp    ebp,DWORD PTR [esi+esi*4+0x10e8b695]
  416f81:	(bad)  [ebx-0x7a9f467a]
  416f87:	stos   BYTE PTR es:[edi],al
  416f88:	or     ah,dh
  416f8a:	ins    BYTE PTR es:[edi],dx
  416f8b:	je     0x416f65
  416f8d:	xor    ebp,DWORD PTR [ecx]
  416f8f:	aas    
  416f90:	inc    edx
  416f91:	adc    al,BYTE PTR [eax-0x5f975374]
  416f97:	inc    edx
  416f98:	in     eax,dx
  416f99:	adc    BYTE PTR [eax+0x37b47108],0xfa
  416fa0:	jle    0x416f83
  416fa2:	jecxz  0x416ff2
  416fa4:	retf   0x17e8
  416fa7:	arpl   WORD PTR [ebx-0x3aede02b],cx
  416fad:	fmul   st,st(3)
  416faf:	je     0x416f46
  416fb1:	test   BYTE PTR [ebx+0x273cace8],bh
  416fb7:	xchg   ecx,eax
  416fb8:	addr16 mov ds:0x9540,al
  416fbc:	into   
  416fbd:	std    
  416fbe:	ja     0x416ffd
  416fc0:	imul   ebp
  416fc2:	and    dh,dh
  416fc4:	loopne 0x416f95
  416fc6:	fistp  QWORD PTR [edx+0x1e]
  416fc9:	push   es
  416fca:	aaa    
  416fcb:	icebp  
  416fcc:	scas   al,BYTE PTR es:[edi]
  416fcd:	sub    al,0xf5
  416fcf:	sbb    ch,BYTE PTR [ebx-0x36]
  416fd2:	int3   
  416fd3:	add    al,0xcb
  416fd5:	xchg   esi,eax
  416fd6:	xchg   ebp,eax
  416fd7:	mov    eax,ds:0x7501db73
  416fdc:	mov    DWORD PTR ds:[esp+ebp*8-0x6c],edi
  416fe1:	mov    ah,0xf9
  416fe3:	fdiv   QWORD PTR [ebp-0x73050db9]
  416fe9:	add    eax,0xf2ee3390
  416fee:	cmp    eax,0x6bdae61a
  416ff3:	push   cs
  416ff4:	add    eax,0x70
  416ff7:	and    BYTE PTR ds:0xa31a94e0,al
  416ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ffe:	cmp    BYTE PTR [ebp+0xa],bh
  417001:	or     DWORD PTR [ecx+0x7071a9d1],esi
  417007:	push   eax
  417008:	sbb    DWORD PTR [ecx-0x552ed124],edx
  41700e:	pop    edx
  41700f:	sbb    eax,0xea0d12e7
  417014:	add    al,0x2d
  417016:	sub    dh,0xd
  417019:	fnstenv [eax-0xc]
  41701c:	ror    BYTE PTR [ebp-0x2e],cl
  41701f:	aad    0x23
  417021:	push   edx
  417022:	push   0xffffff8e
  417024:	dec    esp
  417025:	rol    BYTE PTR [edx+edi*2-0x6096c3be],1
  41702c:	dec    esi
  41702d:	mov    WORD PTR [edi+ebx*2],fs
  417030:	add    bh,cl
  417032:	pop    edx
  417033:	sbb    eax,0xc1327d1f
  417038:	mov    ?,WORD PTR [edi-0x2876f6fa]
  41703e:	cwde   
  41703f:	pusha  
  417040:	adc    DWORD PTR ds:0xc36096bb,ecx
  417046:	inc    ebx
  417047:	add    DWORD PTR [ebp-0x7e],0xd6b5a593
  41704e:	sbb    eax,0x67e14732
  417053:	jae    0x41700d
  417055:	add    bh,BYTE PTR ds:0xc58c7823
  41705b:	xorps  xmm0,xmm3
  41705e:	lea    ebp,[esi]
  417060:	and    ch,BYTE PTR [ecx-0x2c]
  417063:	mov    cl,0x61
  417065:	or     ch,BYTE PTR [ebx+0x46]
  417068:	or     bh,BYTE PTR [ebx]
  41706a:	adc    al,0x6d
  41706c:	sub    bl,0xae
  41706f:	jg     0x417059
  417071:	aam    0xa9
  417073:	je     0x417093
  417075:	push   ebp
  417076:	cmp    DWORD PTR [esi],esp
  417078:	inc    edx
  417079:	sub    bh,BYTE PTR [esi-0x37]
  41707c:	inc    ecx
  41707d:	hlt    
  41707e:	mov    ebx,0x34453cec
  417083:	push   esp
  417084:	cli    
  417085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417086:	inc    ecx
  417087:	and    eax,0xa6cfa716
  41708c:	ss out 0xe3,al
  41708f:	loop   0x4170a8
  417091:	dec    edi
  417092:	das    
  417093:	inc    esi
  417094:	push   es
  417095:	mov    ebx,0x66ad30fe
  41709a:	inc    edx
  41709b:	xor    eax,0x5b566684
  4170a0:	mov    bl,0x45
  4170a2:	retf   
  4170a3:	mov    esp,0xfc82b5f0
  4170a8:	nop
  4170a9:	sti    
  4170aa:	or     ecx,DWORD PTR ds:0xa35b4b68
  4170b0:	xor    DWORD PTR [edx-0x78678446],ecx
  4170b6:	add    eax,0xe6802028
  4170bb:	outs   dx,BYTE PTR ds:[esi]
  4170bc:	sbb    BYTE PTR [edx-0x88771f8],al
  4170c2:	enter  0xe7a1,0xe1
  4170c6:	shl    BYTE PTR ds:0xd6946c8a,0x7a
  4170cd:	inc    ecx
  4170ce:	mov    edi,0x449aab63
  4170d3:	sub    ch,BYTE PTR [edx-0x26]
  4170d6:	dec    ecx
  4170d7:	pop    ss
  4170d8:	fdiv   QWORD PTR [ebx+0xbaeefd5]
  4170de:	inc    ebp
  4170df:	mov    WORD PTR [ebp+0x79],gs
  4170e2:	cli    
  4170e3:	or     BYTE PTR [ecx-0x69],dl
  4170e6:	sub    BYTE PTR [eax-0x59f7e243],dl
  4170ec:	jns    0x417116
  4170ee:	inc    ebx
  4170ef:	sbb    ecx,ecx
  4170f1:	pushf  
  4170f2:	jns    0x417172
  4170f4:	add    eax,DWORD PTR [edx+ebx*4]
  4170f7:	sti    
  4170f8:	mov    DWORD PTR [ebx+0x32],esp
  4170fb:	mov    edi,ss
  4170fd:	mov    esi,0x4ba81cb0
  417102:	(bad)  
  417103:	pop    eax
  417104:	leave  
  417105:	jle    0x41710e
  417107:	mov    ds:0xe052c336,al
  41710c:	inc    eax
  41710d:	lea    esp,[ecx+ebp*4-0x4e]
  417111:	fsubr  st,st(1)
  417113:	and    edx,DWORD PTR [ecx]
  417115:	sub    al,0x53
  417117:	enter  0xb70e,0x4b
  41711b:	or     dl,ch
  41711d:	xchg   esp,eax
  41711e:	inc    esp
  41711f:	adc    BYTE PTR [esi+0x16],dh
  417122:	jp     0x4170e6
  417124:	rcl    DWORD PTR [edx+0x7f],0xce
  417128:	push   ecx
  417129:	stos   DWORD PTR es:[edi],eax
  41712a:	or     BYTE PTR [edx],bl
  41712c:	or     BYTE PTR [ecx],0xc
  41712f:	inc    ecx
  417130:	adc    DWORD PTR [edi-0x73b2e7e1],0xffffffe5
  417137:	adc    cl,dl
  417139:	dec    eax
  41713a:	clc    
  41713b:	xchg   esp,eax
  41713c:	or     eax,0xa5f0bd96
  417141:	jne    0x41713f
  417143:	cmc    
  417144:	retf   0xc917
  417147:	push   ebx
  417148:	cmp    ebx,DWORD PTR [esi-0xb9f9795]
  41714e:	sbb    BYTE PTR [eax+eax*2-0x2106cf8f],bh
  417155:	pop    esi
  417156:	mov    al,BYTE PTR [edx]
  417158:	jmp    0xc25c:0xecd5f730
  41715f:	stos   DWORD PTR es:[edi],eax
  417160:	mov    edx,0x7ef7076e
  417165:	push   cs
  417166:	pop    ebp
  417167:	imul   ebx,DWORD PTR [ecx+0xe],0x27
  41716b:	push   edx
  41716c:	cmp    edx,eax
  41716e:	sub    DWORD PTR [ebx],esp
  417170:	inc    ecx
  417171:	fisub  WORD PTR [edx]
  417173:	or     DWORD PTR ds:0xf243d932,esi
  417179:	ins    DWORD PTR es:[edi],dx
  41717a:	add    al,BYTE PTR [ebx+ecx*4]
  41717d:	inc    ebp
  41717e:	iret   
  41717f:	fwait
  417180:	clc    
  417181:	jmp    0x7bf6:0x9311e3c3
  417188:	push   esi
  417189:	jae    0x4171f2
  41718b:	sub    dl,BYTE PTR [esi]
  41718d:	dec    eax
  41718e:	mov    esp,0x973713f1
  417193:	cmc    
  417194:	and    cl,dl
  417196:	xchg   BYTE PTR [edx+ebp*4+0x333e93ab],dl
  41719d:	les    ebp,FWORD PTR [ebx]
  41719f:	aas    
  4171a0:	not    eax
  4171a2:	icebp  
  4171a3:	call   0xae0a518c
  4171a8:	ins    DWORD PTR es:[edi],dx
  4171a9:	cwde   
  4171aa:	or     al,0x3d
  4171ac:	(bad)  
  4171ad:	loopne 0x417217
  4171af:	nop
  4171b0:	and    BYTE PTR [ebp+ecx*8+0x3e],ah
  4171b4:	push   esp
  4171b5:	jle    0x4171e5
  4171b7:	jle    0x417182
  4171b9:	outs   dx,DWORD PTR ds:[esi]
  4171ba:	adc    DWORD PTR ds:0xd3487eb3,edx
  4171c0:	add    dl,BYTE PTR [eax]
  4171c2:	xchg   bh,al
  4171c4:	xlat   BYTE PTR ds:[ebx]
  4171c5:	and    ah,BYTE PTR [edi+0x2d6da8c1]
  4171cb:	sub    esi,edx
  4171cd:	jne    0x417215
  4171cf:	fadd   DWORD PTR [eax+0x1b]
  4171d2:	cld    
  4171d3:	popf   
  4171d4:	or     al,0xfe
  4171d6:	dec    esp
  4171d7:	out    dx,al
  4171d8:	out    dx,al
  4171d9:	enter  0x2799,0x98
  4171dd:	popa   
  4171de:	cmp    BYTE PTR [edx+0x7e3d3aae],0xe7
  4171e5:	push   ds
  4171e6:	rcl    BYTE PTR [esi-0x6d],0x32
  4171ea:	and    BYTE PTR [edi],ch
  4171ec:	mov    ch,0xb4
  4171ee:	and    eax,0x7a19857e
  4171f3:	add    eax,0x5648200
  4171f8:	pushf  
  4171f9:	(bad)  
  4171fa:	push   cs
  4171fb:	(bad)  
  4171fc:	jno    0x4171ea
  4171fe:	test   DWORD PTR [edi+0x8],esp
  417201:	nop
  417202:	sbb    DWORD PTR [eax-0x65],edx
  417205:	dec    ebp
  417206:	push   esi
  417207:	or     eax,0x29e2b000
  41720c:	test   esp,eax
  41720e:	ret    0xd8bf
  417211:	mov    ebx,0x90c5e683
  417216:	es jnp 0x41720c
  417219:	sub    DWORD PTR [edx+0x48],ebp
  41721c:	xchg   esi,eax
  41721d:	mov    dl,0x30
  41721f:	popa   
  417220:	fcmovbe st,st(6)
  417222:	mov    ebp,0xa38d4600
  417227:	lock fdivrp st(5),st
  41722a:	sbb    eax,0x32abdcc8
  41722f:	pop    eax
  417230:	popa   
  417231:	stos   BYTE PTR es:[edi],al
  417232:	leave  
  417233:	and    al,0xcf
  417235:	and    eax,0xc420b879
  41723a:	mul    DWORD PTR [eax+0x3322e9e9]
  417240:	and    DWORD PTR [ebp+0x52],eax
  417243:	push   eax
  417244:	pusha  
  417245:	imul   esp,DWORD PTR [edx-0x2],0xffffffc5
  417249:	cs cmp eax,0xf76de947
  41724f:	pop    edi
  417250:	ins    DWORD PTR es:[edi],dx
  417251:	enter  0x7a22,0x5
  417255:	sub    ebx,DWORD PTR gs:[eax+0x47]
  417259:	out    dx,al
  41725a:	mov    WORD PTR [ecx],?
  41725c:	pop    edx
  41725d:	pop    ds
  41725e:	pop    ebx
  41725f:	daa    
  417260:	sbb    eax,0xe975c72f
  417265:	inc    edi
  417266:	in     eax,dx
  417267:	fidivr DWORD PTR ss:[ebp-0x53d64def]
  41726e:	gs adc al,0x8e
  417271:	mov    ds:0x2c6df310,al
  417276:	xlat   BYTE PTR ds:[ebx]
  417277:	jle    0x417243
  417279:	inc    edx
  41727a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41727c:	sti    
  41727d:	xlat   BYTE PTR ds:[ebx]
  41727e:	loop   0x41720e
  417280:	daa    
  417281:	lds    eax,FWORD PTR ds:0x327da2d
  417287:	cmp    DWORD PTR ss:[esi],esi
  41728a:	sbb    BYTE PTR [bx+si-0x458e],al
  41728f:	in     eax,0xe8
  417291:	mov    edx,0x99bfa49b
  417296:	add    ebx,edi
  417298:	fbld   TBYTE PTR [ebp+0x5c5bb654]
  41729e:	push   ebx
  41729f:	dec    eax
  4172a0:	jl     0x4172fd
  4172a2:	outs   dx,DWORD PTR ds:[esi]
  4172a3:	sub    bl,BYTE PTR [ecx]
  4172a5:	xchg   ebx,eax
  4172a6:	mov    ch,0x77
  4172a8:	add    ah,BYTE PTR [edi+0x7cc6ccb0]
  4172ae:	push   0x43
  4172b0:	into   
  4172b1:	add    dh,bl
  4172b3:	add    al,0x1e
  4172b5:	add    DWORD PTR [ecx],ebp
  4172b7:	adc    al,0x9d
  4172b9:	jmp    0x31e5:0x1a15edd
  4172c0:	out    dx,al
  4172c1:	push   ebx
  4172c2:	movntq (bad),mm5
  4172c3:	out    0xed,eax
  4172c5:	rol    DWORD PTR [ebx+0x38ca3fa8],cl
  4172cb:	cmp    bl,BYTE PTR [ebp+0x48]
  4172ce:	push   ebp
  4172cf:	mov    ah,0x4f
  4172d1:	psubsw mm0,QWORD PTR [ecx]
  4172d4:	pop    ss
  4172d5:	xor    ah,ch
  4172d7:	into   
  4172d8:	outs   dx,DWORD PTR ds:[esi]
  4172d9:	inc    esp
  4172da:	mov    edx,0xc0dc7b7
  4172df:	hlt    
  4172e0:	push   0xffffffda
  4172e2:	mov    ds:0xaa8d1208,al
  4172e7:	lahf   
  4172e8:	xchg   edx,eax
  4172e9:	shl    al,1
  4172eb:	int    0x80
  4172ed:	imul   esi,DWORD PTR [edi+esi*8-0x62],0x79
  4172f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172f3:	dec    edx
  4172f4:	inc    edx
  4172f5:	dec    edi
  4172f6:	inc    esi
  4172f7:	jmp    0x7468b0c8
  4172fc:	jg     0x4172b9
  4172fe:	push   0xb34b2d75
  417303:	test   ecx,ebx
  417305:	es loopne 0x417351
  417308:	cmp    dh,BYTE PTR [ecx+0x2473f3a8]
  41730e:	xchg   esp,eax
  41730f:	jmp    0xf1cad66
  417314:	shl    DWORD PTR [edx+0xa],0x80
  417318:	stos   BYTE PTR es:[edi],al
  417319:	shl    ebp,0xc3
  41731c:	dec    esp
  41731d:	loopne 0x4172b1
  41731f:	leave  
  417320:	imul   ebp
  417322:	(bad)  
  417323:	js     0x4172f1
  417325:	test   al,0x5c
  417327:	mov    ds:0xe25b7683,eax
  41732c:	mov    ebp,0xbd0bef2e
  417331:	xor    BYTE PTR ds:0x30d45f5f,bl
  417337:	lods   al,BYTE PTR ds:[esi]
  417338:	outs   dx,DWORD PTR ds:[esi]
  417339:	bnd jb 0x417310
  41733c:	je     0x417332
  41733e:	push   eax
  41733f:	push   ss
  417340:	mov    eax,ds:0x6c08130a
  417345:	mov    ds:0xe8521f54,eax
  41734a:	daa    
  41734b:	retf   
  41734c:	les    edi,FWORD PTR [edi]
  41734e:	xchg   esi,eax
  41734f:	repz or BYTE PTR [edx],bl
  417352:	test   eax,0x9ef9dd93
  417357:	cmp    edi,esi
  417359:	push   ebx
  41735a:	and    al,0x2a
  41735c:	or     eax,0x8dd6be9a
  417361:	in     al,dx
  417362:	jg     0x417333
  417364:	sub    al,0xd1
  417366:	jge    0x4173b5
  417368:	(bad)
  41736b:	jae    0x4173ab
  41736d:	call   0x7:0xf00382db
  417374:	xchg   eax,esi
  417376:	or     esi,DWORD PTR [edi-0x11]
  417379:	js     0x4173b1
  41737b:	les    edx,FWORD PTR [eax]
  41737d:	add    ah,BYTE PTR [edx-0x3883aa14]
  417383:	fucomp st(5)
  417385:	fistp  WORD PTR [esi+0x3f69a66f]
  41738b:	test   eax,0xbf52f54b
  417390:	xlat   BYTE PTR ds:[ebx]
  417391:	mov    eax,0x2033fd1c
  417396:	xchg   ebx,eax
  417397:	leave  
  417398:	pop    ebp
  417399:	lods   eax,DWORD PTR ds:[esi]
  41739a:	mov    ss:0x87455615,al
  4173a0:	push   ebx
  4173a1:	ja     0x41738e
  4173a3:	mov    dl,0xa
  4173a5:	mov    BYTE PTR [edi-0x2e5da50e],cl
  4173ab:	repnz sbb al,BYTE PTR [ebp-0x13ffe2cf]
  4173b2:	pop    ss
  4173b3:	call   FWORD PTR [ebp-0x4c]
  4173b6:	pop    es
  4173b7:	cmp    DWORD PTR ds:0xf75af84f,esp
  4173bd:	push   ss
  4173be:	or     bh,cl
  4173c0:	ja     0x417382
  4173c2:	sbb    eax,0x343b0d1a
  4173c7:	call   0xd7c2:0xfb88297c
  4173ce:	jns    0x4173b4
  4173d0:	popa   
  4173d1:	jmp    0x7391:0x94fd9c14
  4173d8:	cli    
  4173d9:	lahf   
  4173da:	ds into 
  4173dc:	fadd   st(4),st
  4173de:	xchg   edx,eax
  4173df:	cmp    eax,0xb2b220e9
  4173e4:	std    
  4173e5:	ror    DWORD PTR [ecx-0x3e],cl
  4173e8:	xor    eax,0x5707d9d6
  4173ed:	test   BYTE PTR [esi-0xfd5c12b],cl
  4173f3:	sbb    bl,BYTE PTR [esp+edx*4-0x49584dc9]
  4173fa:	bound  edi,QWORD PTR [edx+0x2d]
  4173fd:	test   eax,0xea944e90
  417402:	cmp    al,0x12
  417404:	jbe    0x41740b
  417406:	lahf   
  417407:	jmp    0x41747e
  417409:	outs   dx,BYTE PTR ds:[esi]
  41740a:	(bad)  
  41740b:	ins    BYTE PTR es:[edi],dx
  41740c:	les    edx,FWORD PTR [edx+0x52]
  41740f:	(bad)  
  417410:	cmp    al,0x81
  417412:	pop    ss
  417413:	push   ds
  417414:	mov    esi,0xe24b07ef
  417419:	test   esi,esp
  41741b:	and    edi,esp
  41741d:	out    0x83,al
  41741f:	jl     0x417449
  417421:	cmp    ch,BYTE PTR [ecx+eiz*8]
  417424:	xor    eax,0x8b628d81
  417429:	daa    
  41742a:	repz xchg esi,eax
  41742c:	dec    edx
  41742d:	scas   eax,DWORD PTR es:[edi]
  41742e:	sti    
  41742f:	pop    esi
  417430:	ins    DWORD PTR es:[edi],dx
  417431:	leave  
  417432:	sub    dl,dh
  417434:	pop    ss
  417435:	mov    edi,0x996c2cc5
  41743a:	xor    eax,0x2146d66a
  41743f:	data16 xor BYTE PTR [edi],0x3e
  417443:	mov    edi,0x1c1385a5
  417448:	adc    ah,ch
  41744a:	jmp    0xe8a4:0x6424db10
  417451:	call   0x6cec2305
  417456:	scas   al,BYTE PTR es:[edi]
  417457:	mov    cl,0x6c
  417459:	int3   
  41745a:	mov    dl,0x0
  41745c:	mov    edi,0x23975b59
  417461:	(bad)  [edi+0x687a5282]
  417467:	mov    edx,0xa61616a5
  41746c:	sub    BYTE PTR [eax+0x273a3d4e],0xa2
  417473:	xchg   esi,eax
  417474:	lds    edi,FWORD PTR [edi]
  417476:	xor    ebp,DWORD PTR [ecx+ecx*2+0x59]
  41747a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41747b:	cli    
  41747c:	inc    edx
  41747d:	das    
  41747e:	cdq    
  41747f:	pop    es
  417480:	fwait
  417481:	adc    cl,dh
  417483:	sub    BYTE PTR [esi],al
  417485:	push   ecx
  417486:	push   ecx
  417487:	dec    esi
  417488:	lods   eax,DWORD PTR ds:[esi]
  417489:	push   0x7cf8ca48
  41748e:	pusha  
  41748f:	nop
  417490:	test   BYTE PTR [edx-0x3b5b3a6],bh
  417496:	repz xor ch,BYTE PTR [ebp-0x2e]
  41749a:	adc    ch,BYTE PTR [ebx-0x717f9ad2]
  4174a0:	cdq    
  4174a1:	jns    0x4174b4
  4174a3:	jb     0x417497
  4174a5:	pop    es
  4174a6:	mov    gs,edx
  4174a8:	push   ss
  4174a9:	jge    0x41750b
  4174ab:	pop    ecx
  4174ac:	xchg   edx,eax
  4174ad:	lahf   
  4174ae:	dec    ebp
  4174af:	mov    edx,0x9d9900c5
  4174b4:	(bad)  
  4174b5:	or     DWORD PTR [edi+0x61a023d3],edi
  4174bb:	js     0x4174e8
  4174bd:	test   BYTE PTR [eax+0x1a],dl
  4174c0:	push   edi
  4174c1:	push   ebp
  4174c2:	jg     0x417536
  4174c4:	lock inc ecx
  4174c6:	leave  
  4174c7:	cmp    dl,BYTE PTR [edx]
  4174c9:	sar    BYTE PTR [ecx+0x2d],1
  4174cc:	or     eax,0x4a44b9de
  4174d1:	mov    edi,DWORD PTR [ebx-0x47233de6]
  4174d7:	loop   0x4174ea
  4174d9:	les    ebp,FWORD PTR [ebx-0x9c8e63c]
  4174df:	outs   dx,DWORD PTR ds:[esi]
  4174e0:	outs   dx,BYTE PTR ds:[esi]
  4174e1:	out    dx,al
  4174e2:	pop    ecx
  4174e3:	pop    ecx
  4174e4:	ins    BYTE PTR es:[edi],dx
  4174e5:	dec    esp
  4174e6:	pop    ebx
  4174e7:	mov    cl,0xe1
  4174e9:	scas   al,BYTE PTR es:[edi]
  4174ea:	ret    0xedc4
  4174ed:	push   0xffffffc1
  4174ef:	jb     0x417484
  4174f1:	les    edx,FWORD PTR ds:0xf42ded80
  4174f7:	ret    
  4174f8:	sbb    DWORD PTR [edx],edi
  4174fa:	sub    al,0xc0
  4174fc:	push   es
  4174fd:	mov    bl,0xb3
  4174ff:	dec    ecx
  417500:	xchg   esi,eax
  417501:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417502:	mov    ah,cl
  417504:	sub    esi,edi
  417506:	cld    
  417507:	ret    
  417508:	outs   dx,DWORD PTR ds:[esi]
  417509:	dec    ebx
  41750a:	js     0x417550
  41750c:	xchg   BYTE PTR [ebx+0x6e6e7d0],cl
  417512:	mov    WORD PTR [ebx],gs
  417514:	out    dx,al
  417515:	push   edx
  417516:	push   0x81bb1ffe
  41751b:	loope  0x4174b2
  41751d:	pusha  
  41751e:	push   ebp
  41751f:	push   ss
  417520:	scas   eax,DWORD PTR es:[edi]
  417521:	sar    BYTE PTR [ebx+esi*1+0x78],cl
  417525:	ja     0x417578
  417527:	pop    es
  417528:	adc    dl,BYTE PTR [eax+0x7c]
  41752b:	add    cl,dh
  41752d:	int    0xbb
  41752f:	retf   
  417530:	mov    al,ds:0xa981c66d
  417535:	lods   al,BYTE PTR ds:[esi]
  417536:	int    0x2a
  417538:	add    eax,esi
  41753a:	or     bh,BYTE PTR [ecx]
  41753c:	adc    esi,ebx
  41753e:	jno    0x4174e1
  417540:	out    dx,eax
  417541:	sub    DWORD PTR gs:[ecx-0x13],ecx
  417545:	out    0x30,eax
  417547:	psubq  mm0,mm0
  41754a:	data16 cmc 
  41754c:	xchg   esp,eax
  41754d:	mov    ecx,0xe56f7d90
  417552:	imul   ebp,edx,0xd8c19ec7
  417558:	(bad)  
  41755a:	push   0xce9bfa92
  41755f:	or     DWORD PTR [ebx+eiz*8+0x534ddec6],ebx
  417566:	(bad)  
  417567:	daa    
  417568:	in     eax,0xa0
  41756a:	call   0x78d6c0a7
  41756f:	xchg   ecx,eax
  417570:	dec    ecx
  417571:	push   eax
  417572:	setne  al
  417575:	pop    ss
  417576:	cld    
  417577:	rcr    ch,0x5d
  41757a:	or     eax,0x5f24fa9a
  41757f:	jnp    0x4175c9
  417581:	inc    ebp
  417582:	mov    al,ds:0xb9879c07
  417587:	pop    edi
  417588:	sbb    ebx,DWORD PTR [eax-0x56]
  41758b:	loopne 0x4175fb
  41758d:	mov    fs,ebx
  41758f:	ja     0x417593
  417591:	push   esi
  417592:	pop    ebp
  417593:	outs   dx,DWORD PTR ds:[esi]
  417594:	xor    BYTE PTR [edi+0x37],bl
  417597:	leave  
  417598:	inc    eax
  417599:	cli    
  41759a:	hlt    
  41759b:	cmp    BYTE PTR [esi-0x74],bh
  41759e:	clc    
  41759f:	jbe    0x417593
  4175a1:	clc    
  4175a2:	inc    ecx
  4175a3:	ins    BYTE PTR es:[edi],dx
  4175a4:	push   eax
  4175a5:	out    0x66,eax
  4175a7:	fs (bad) 
  4175a9:	pop    ebx
  4175aa:	mov    dh,0x32
  4175ac:	int    0x59
  4175ae:	dec    eax
  4175af:	out    dx,eax
  4175b0:	aad    0xa6
  4175b2:	xor    al,0x99
  4175b4:	sub    eax,0xea16a4fc
  4175b9:	jmp    0x7ba8:0x6e7a253e
  4175c0:	sub    al,BYTE PTR [edx+0x2c]
  4175c3:	test   eax,0xb5db1315
  4175c8:	scas   eax,DWORD PTR es:[edi]
  4175c9:	jno    0x417638
  4175cb:	in     al,0x32
  4175cd:	or     al,bl
  4175cf:	call   0xd2fa0860
  4175d4:	pop    ecx
  4175d5:	imul   ecx,ecx,0xfffffffe
  4175d8:	mov    ah,0xd8
  4175da:	dec    esi
  4175db:	jl     0x417611
  4175dd:	call   0xdf36a776
  4175e2:	test   DWORD PTR [ecx],edi
  4175e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175e5:	sti    
  4175e6:	xor    DWORD PTR ds:[ebp-0x4b4debab],ebx
  4175ed:	dec    ax
  4175ef:	(bad)  
  4175f1:	dec    ebx
  4175f2:	xor    al,0xd9
  4175f4:	data16 ss jbe 0x417588
  4175f8:	jg     0x4175c3
  4175fa:	lea    esi,[ecx]
  4175fc:	imul   ebp,ecx,0xe7f88ff0
  417602:	loope  0x41764d
  417604:	outs   dx,DWORD PTR ds:[esi]
  417605:	pop    ebp
  417606:	dec    esp
  417607:	inc    edx
  417608:	test   BYTE PTR [eax+0x38],dh
  41760b:	jnp    0x41767d
  41760d:	repz dec eax
  41760f:	(bad)
  417612:	call   0x6c99:0xf9666dd
  417619:	jecxz  0x4175de
  41761b:	lods   al,BYTE PTR ds:[esi]
  41761c:	inc    edi
  41761d:	fprem  
  41761f:	jno    0x417696
  417621:	xor    DWORD PTR [ebx+edi*4+0x10],ebp
  417625:	in     eax,dx
  417626:	jo     0x4175cf
  417628:	inc    esp
  417629:	enter  0x4fb2,0xf2
  41762d:	leave  
  41762e:	jmp    DWORD PTR [ebx+0x4b]
  417631:	loop   0x417635
  417633:	sub    ecx,DWORD PTR [ebx]
  417635:	mov    eax,0x8f6f35e2
  41763a:	fldcw  WORD PTR [ebx]
  41763c:	int3   
  41763d:	js     0x417692
  41763f:	dec    esp
  417640:	(bad)  
  417641:	mov    esp,0xdb02d940
  417646:	push   edx
  417647:	inc    eax
  417648:	loope  0x41764e
  41764a:	das    
  41764b:	dec    ecx
  41764c:	fs inc esp
  41764e:	push   ds
  41764f:	jo     0x41763e
  417651:	adc    eax,0x5ffc5f9c
  417656:	rcl    BYTE PTR [ecx-0x32bb53f8],cl
  41765c:	out    0x3a,al
  41765e:	sbb    ebx,edi
  417660:	mov    cl,0xa9
  417662:	leave  
  417663:	inc    esp
  417664:	ret    
  417665:	in     eax,0xd0
  417667:	jmp    0x5f73e2b4
  41766c:	call   0x4ec27659
  417671:	pushf  
  417672:	icebp  
  417673:	push   ebx
  417674:	xor    eax,0xf7e1a9cb
  417679:	fld    QWORD PTR [esi-0x77]
  41767c:	pusha  
  41767d:	jae    0x417699
  41767f:	adc    eax,0x4468b170
  417684:	mov    eax,0xe08f5e23
  417689:	sub    al,0x5
  41768b:	xchg   edi,eax
  41768c:	ss mov ecx,0x79002a01
  417692:	dec    ebx
  417693:	cmp    DWORD PTR [edx+0x13a29750],ebx
  417699:	adc    ch,BYTE PTR [ecx-0x55392c5f]
  41769f:	sub    edx,DWORD PTR [ecx]
  4176a1:	ror    DWORD PTR [edi-0x5110abe],cl
  4176a7:	in     eax,dx
  4176a8:	mov    ebx,0xd4977d2d
  4176ad:	test   al,0x7f
  4176af:	shl    DWORD PTR [eax-0x75e73d44],1
  4176b5:	iret   
  4176b6:	out    dx,al
  4176b7:	iret   
  4176b8:	push   ss
  4176b9:	je     0x41770f
  4176bb:	mov    ds:0xf4c2127,eax
  4176c0:	push   ebp
  4176c1:	ins    DWORD PTR es:[edi],dx
  4176c2:	outs   dx,DWORD PTR ds:[esi]
  4176c3:	call   0x6db9:0xde7740f1
  4176ca:	mov    esp,0x8d766709
  4176cf:	in     al,dx
  4176d0:	int3   
  4176d1:	ins    DWORD PTR es:[edi],dx
  4176d2:	mov    bh,dl
  4176d4:	(bad)  
  4176d5:	in     eax,0x12
  4176d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176d8:	xlat   BYTE PTR ds:[ebx]
  4176d9:	arpl   WORD PTR [ebx-0x1],bp
  4176dc:	mov    DWORD PTR [eax],ebx
  4176de:	and    ch,ch
  4176e0:	adc    eax,0xd11de12
  4176e5:	es aas 
  4176e7:	inc    edx
  4176e8:	jo     0x417723
  4176ea:	xor    ebx,DWORD PTR [edx-0x57ee922d]
  4176f0:	pop    ecx
  4176f1:	repz fnstsw ax
  4176f4:	adc    al,0x64
  4176f6:	in     al,dx
  4176f7:	clc    
  4176f8:	(bad)  
  4176f9:	push   0x40
  4176fb:	test   al,0x25
  4176fd:	loope  0x41776f
  4176ff:	dec    esp
  417700:	test   eax,ebx
  417702:	(bad)  
  417703:	cwde   
  417704:	in     eax,dx
  417705:	sbb    esp,DWORD PTR [ebp-0x5d]
  417708:	inc    edx
  417709:	jge    0x4176d7
  41770b:	mov    ebp,0x709d83a9
  417710:	rcr    DWORD PTR [edx-0x6a],0x42
  417714:	jg     0x417760
  417716:	jmp    FWORD PTR [ebp+0x60]
  417719:	neg    ecx
  41771b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41771c:	cdq    
  41771d:	xchg   DWORD PTR [edi+0x4ef2fdd1],ebx
  417723:	mov    ecx,0x8812e7b3
  417728:	add    edx,ebp
  41772a:	pop    esi
  41772b:	jnp    0x417746
  41772d:	mov    dh,0xc
  41772f:	or     BYTE PTR [edi+0x4f],0x60
  417733:	sbb    ecx,DWORD PTR [esi+ecx*1-0x64e09eb7]
  41773a:	jmp    0x417700
  41773c:	fcmovnbe st,st(7)
  41773e:	pop    edi
  41773f:	outs   dx,BYTE PTR ds:[esi]
  417740:	lock imul eax,esi,0xffffffee
  417744:	jnp    0x4176e9
  417746:	stos   BYTE PTR es:[edi],al
  417747:	xchg   ecx,eax
  417748:	addr16 push 0x15fb2127
  41774e:	lea    edx,[ebp+0x2a221403]
  417754:	inc    ecx
  417755:	pushf  
  417756:	adc    esi,DWORD PTR [eax]
  417758:	sbb    BYTE PTR [esi],ah
  41775a:	ins    DWORD PTR es:[edi],dx
  41775b:	stos   BYTE PTR es:[edi],al
  41775c:	jmp    0x2aa7:0xd48628ee
  417763:	scas   al,BYTE PTR es:[edi]
  417764:	add    ecx,DWORD PTR cs:[ecx]
  417767:	retf   
  417768:	dec    ebx
  417769:	jae    0x417722
  41776b:	pop    esi
  41776c:	mov    ebp,0x263257ff
  417771:	mov    esi,0x521cdeb5
  417776:	fs sub eax,0x96884c28
  41777c:	jo     0x417791
  41777e:	sbb    BYTE PTR ds:0x663e1df0,al
  417784:	sub    edi,ecx
  417786:	cmp    cl,BYTE PTR [ebp+edx*8+0xfecc91a]
  41778d:	fmul   st,st(1)
  41778f:	push   esi
  417790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417791:	xchg   edx,eax
  417792:	or     BYTE PTR [esi-0x62],ah
  417795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417796:	test   al,0x33
  417798:	not    ecx
  41779a:	enter  0x3110,0xe5
  41779e:	mov    esp,0x766cc36b
  4177a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177a4:	or     ecx,esi
  4177a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177a7:	retf   
  4177a8:	not    edx
  4177aa:	jg     0x417772
  4177ac:	pop    es
  4177ad:	xor    al,0x5e
  4177af:	mov    eax,0x56ae561a
  4177b4:	sbb    cl,BYTE PTR [edx]
  4177b6:	add    edx,ebx
  4177b8:	cmp    dh,cl
  4177ba:	pop    esi
  4177bb:	(bad)
  4177be:	pop    esp
  4177bf:	add    cl,ch
  4177c1:	or     BYTE PTR [esi+0x45],dh
  4177c4:	mov    eax,ds:0x9cb2830b
  4177c9:	jae    0x417785
  4177cb:	cld    
  4177cc:	(bad)  [eax+0x5]
  4177cf:	jp     0x417791
  4177d1:	jb     0x417832
  4177d3:	inc    esi
  4177d4:	xchg   edx,eax
  4177d5:	pop    eax
  4177d6:	ret    
  4177d7:	neg    al
  4177d9:	dec    esp
  4177da:	or     dl,al
  4177dc:	fxch   st(7)
  4177de:	in     al,0x6f
  4177e0:	push   ecx
  4177e1:	and    DWORD PTR [edx+0xf],eax
  4177e4:	add    edx,esi
  4177e6:	pop    edx
  4177e7:	ja     0x4177b5
  4177e9:	dec    edi
  4177eb:	pusha  
  4177ec:	jnp    0x4177b8
  4177ee:	mov    dh,0x44
  4177f0:	adc    esp,DWORD PTR [ebx-0x2197cac1]
  4177f6:	into   
  4177f7:	cmp    al,0xa4
  4177f9:	lahf   
  4177fa:	adc    eax,0x3c179ee8
  4177ff:	rol    BYTE PTR ds:0x8959c82d,1
  417805:	daa    
  417806:	mov    ecx,0x38e2b8b6
  41780b:	cmp    bh,BYTE PTR [edi+0x31]
  41780e:	or     DWORD PTR [esi],ebp
  417810:	mov    dl,0x4c
  417812:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417813:	jmp    0x459bab61
  417818:	aam    0xa6
  41781a:	and    edi,DWORD PTR [ecx+0x3fbe9a18]
  417820:	test   eax,0x966c670f
  417825:	push   ebx
  417826:	xchg   esp,eax
  417827:	jbe    0x417879
  417829:	push   ecx
  41782a:	stos   DWORD PTR es:[edi],eax
  41782b:	fidiv  DWORD PTR [edx+0x4b]
  41782e:	(bad)  
  41782f:	fucomip st,st(3)
  417831:	das    
  417832:	ins    BYTE PTR es:[edi],dx
  417833:	ret    
  417834:	std    
  417835:	imul   ecx,DWORD PTR [ecx],0x360226d0
  41783b:	cdq    
  41783c:	or     dh,dl
  41783e:	sub    eax,ecx
  417840:	shl    BYTE PTR ds:[esi],0x15
  417844:	test   DWORD PTR [edi],ecx
  417846:	add    BYTE PTR [ebp+0xd],ch
  417849:	sti    
  41784a:	and    BYTE PTR [edi-0x53c30b56],bh
  417850:	test   BYTE PTR [esi-0x433fb85c],cl
  417856:	mov    ds:0x28f15329,eax
  41785b:	test   eax,0x8c205da
  417860:	pop    eax
  417861:	aam    0xd9
  417863:	frstor [edx+0x77c98507]
  417869:	jmp    0xb002:0xa2b9e376
  417870:	jmp    0x41780e
  417872:	ret    
  417873:	inc    ebp
  417874:	cmp    DWORD PTR [ecx+0x8],edi
  417877:	test   al,0x20
  417879:	(bad)  
  41787a:	cmp    BYTE PTR [eax-0x2d],ah
  41787d:	mov    ds:0x5efcc4f4,al
  417882:	push   ebp
  417883:	adc    dl,bl
  417885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417886:	(bad)  
  417887:	lods   al,BYTE PTR ds:[esi]
  417888:	test   eax,0xee9149f5
  41788d:	sbb    ch,dh
  41788f:	push   ebx
  417890:	sbb    BYTE PTR [esi-0x37aa2b1f],al
  417896:	mov    ebp,DWORD PTR [edi+0x7]
  417899:	or     esp,edi
  41789b:	dec    ebp
  41789c:	add    dl,BYTE PTR [edx-0x1d]
  41789f:	(bad)  
  4178a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178a2:	fcomp  DWORD PTR [ebx+0x35]
  4178a5:	xchg   BYTE PTR [edx-0x53a4b53b],bl
  4178ab:	in     eax,0x21
  4178ad:	lods   al,BYTE PTR ds:[esi]
  4178ae:	sbb    ebx,DWORD PTR [eax-0x5c22a116]
  4178b4:	push   edi
  4178b5:	sub    BYTE PTR [edi],al
  4178b7:	push   ecx
  4178b8:	ds stos DWORD PTR es:[edi],eax
  4178ba:	(bad)  
  4178bb:	jo     0x417853
  4178bd:	xchg   edi,eax
  4178be:	test   eax,0x89858d2e
  4178c3:	popf   
  4178c4:	mov    eax,ds:0xb4886d4
  4178c9:	es mov edx,0x903f979a
  4178cf:	(bad)  
  4178d0:	mov    ds:0xce27281,al
  4178d5:	test   eax,0xc9542ba8
  4178da:	ret    0xd07f
  4178dd:	(bad)  
  4178de:	mov    ecx,0x1168dcb7
  4178e3:	(bad)  
  4178e4:	xchg   esi,eax
  4178e5:	icebp  
  4178e6:	push   0xdddfaecd
  4178eb:	das    
  4178ec:	adc    eax,ebx
  4178ee:	lds    ebp,FWORD PTR [ecx-0x484f4a90]
  4178f4:	or     cl,dl
  4178f6:	xchg   esi,eax
  4178f7:	pop    ebp
  4178f8:	push   esp
  4178f9:	mov    esi,0x7b46582b
  4178fe:	jae    0x41797e
  417900:	test   BYTE PTR [edx+0x3],al
  417903:	push   ebx
  417904:	pop    ss
  417905:	mov    dl,0x95
  417907:	pop    esi
  417908:	ror    DWORD PTR [ebx-0x4d],1
  41790b:	loopne 0x41798b
  41790d:	lods   eax,DWORD PTR cs:[esi]
  41790f:	xchg   ebp,eax
  417910:	inc    eax
  417911:	jno    0x4178ec
  417913:	call   0x128:0x273da4a
  41791a:	aaa    
  41791b:	or     BYTE PTR [esi],bl
  41791d:	mov    ah,0xeb
  41791f:	adc    eax,0x7d6f8b01
  417924:	imul   edx,DWORD PTR [edx],0xcc2fa733
  41792a:	js     0x417951
  41792c:	outs   dx,BYTE PTR ds:[esi]
  41792d:	xor    BYTE PTR [esi-0x25],ah
  417930:	enter  0x79c2,0x7f
  417934:	cmp    DWORD PTR [ebx+0x296a6cfd],esi
  41793a:	hlt    
  41793b:	jbe    0x4178f7
  41793d:	push   es
  41793e:	xchg   edi,eax
  41793f:	and    al,0xf9
  417941:	jmp    0x41799d
  417943:	adc    BYTE PTR [ebp-0x1b41d5f8],cl
  417949:	mov    edx,0x1bda4d7a
  41794e:	loope  0x41795f
  417950:	lods   al,BYTE PTR ds:[esi]
  417951:	pushf  
  417952:	cmp    edi,DWORD PTR [eax+ebp*8]
  417955:	stc    
  417956:	mov    bh,0x49
  417958:	bound  ebp,QWORD PTR [edi]
  41795a:	ror    BYTE PTR [esi+0x3e],cl
  41795d:	ins    BYTE PTR es:[edi],dx
  41795e:	mov    ecx,0x779ca937
  417963:	mov    ah,0xe7
  417965:	lea    edi,[edx-0xf0d0948]
  41796b:	inc    ecx
  41796c:	or     edi,DWORD PTR [ebp-0x7de212c3]
  417972:	mov    edi,0x1eb5ee41
  417977:	lahf   
  417978:	push   0x2a
  41797a:	adc    DWORD PTR [eax],esi
  41797c:	adc    cl,BYTE PTR [esi-0x6e3fe040]
  417982:	sti    
  417983:	loop   0x417954
  417985:	add    BYTE PTR [edx+ecx*4],dl
  417988:	std    
  417989:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41798a:	inc    BYTE PTR [edi+eiz*2]
  41798d:	adc    eax,0xe1afe05e
  417992:	pop    esi
  417993:	jns    0x41795e
  417995:	sub    BYTE PTR [esi],dh
  417997:	xchg   ecx,eax
  417998:	add    esp,DWORD PTR [edx-0x3b3839fa]
  41799e:	mov    edi,DWORD PTR [edi-0x14ad92a9]
  4179a4:	adc    cl,dh
  4179a6:	or     eax,0x702090a3
  4179ab:	and    ebx,eax
  4179ad:	adc    al,ah
  4179af:	into   
  4179b0:	(bad)  
  4179b1:	adc    eax,0xf9539418
  4179b6:	dec    ebp
  4179b7:	inc    ebx
  4179b8:	xchg   ebp,eax
  4179b9:	pop    edi
  4179ba:	gs xchg ebp,eax
  4179bc:	fistp  DWORD PTR [ecx+0x56]
  4179bf:	jge    0x417a37
  4179c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179c2:	dec    esp
  4179c3:	xchg   edi,eax
  4179c4:	cld    
  4179c5:	add    bh,BYTE PTR [edi]
  4179c7:	rcr    DWORD PTR [edx+esi*8+0x7e],cl
  4179cb:	inc    eax
  4179cc:	add    BYTE PTR ds:0x2923770d,bl
  4179d2:	popa   
  4179d3:	pop    edi
  4179d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179d5:	mov    esp,0x447a1b63
  4179da:	cs xchg edi,eax
  4179dc:	in     al,0xdc
  4179de:	push   ss
  4179df:	mov    BYTE PTR [edi],bh
  4179e1:	sub    al,0x59
  4179e3:	aas    
  4179e4:	ins    DWORD PTR es:[edi],dx
  4179e5:	or     eax,0xe2fe1939
  4179ea:	jo     0x417a52
  4179ec:	in     eax,dx
  4179ed:	ds xor al,0xd6
  4179f0:	test   al,0x1c
  4179f2:	inc    esi
  4179f3:	cmp    cl,ah
  4179f5:	mov    ecx,ecx
  4179f7:	mov    ds:0x7de20b18,eax
  4179fc:	inc    ecx
  4179fd:	scas   al,BYTE PTR es:[edi]
  4179fe:	not    al
  417a00:	ret    
  417a01:	fisttp DWORD PTR [edx-0x50]
  417a04:	(bad)  
  417a05:	push   esi
  417a06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a07:	pop    ebp
  417a08:	test   ch,bh
  417a0a:	push   eax
  417a0b:	lods   eax,DWORD PTR ds:[esi]
  417a0c:	loope  0x4179c7
  417a0e:	sti    
  417a0f:	mov    ebx,0x4a5c613b
  417a14:	sar    DWORD PTR [ecx+0x9],1
  417a17:	jb     0x417a6d
  417a19:	jg     0x4179ba
  417a1b:	aad    0x6d
  417a1d:	mov    WORD PTR [ebp-0x391b818],cs
  417a23:	inc    eax
  417a24:	call   0xe86c:0x750504f4
  417a2b:	dec    edx
  417a2c:	adc    BYTE PTR [ecx],0x84
  417a2f:	xchg   edi,eax
  417a30:	rcl    BYTE PTR [ebp+0x25],0xd7
  417a34:	in     al,0x73
  417a36:	(bad)  
  417a37:	jns    0x417a16
  417a39:	xor    eax,0x1114aac2
  417a3e:	mov    ds:0xfc343f05,al
  417a43:	sti    
  417a44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a45:	pop    es
  417a46:	rep lods al,BYTE PTR ds:[esi]
  417a48:	pop    esi
  417a49:	test   ebx,eax
  417a4b:	adc    DWORD PTR [eax+0x75],edi
  417a4e:	loopne 0x417a96
  417a50:	sub    DWORD PTR [ebx],edx
  417a52:	bnd jns 0x417ac2
  417a55:	cmp    eax,0x1aa42b7d
  417a5a:	gs jge 0x417a49
  417a5d:	jle    0x417a91
  417a5f:	fdiv   QWORD PTR [ebx]
  417a61:	gs pop esp
  417a63:	outs   dx,BYTE PTR ds:[esi]
  417a64:	test   BYTE PTR [ecx+0x28],ch
  417a67:	xchg   ecx,esp
  417a69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a6a:	addr16 iret 
  417a6c:	jmp    0x8d84:0x476b1d7f
  417a73:	lock mov al,0xf9
  417a76:	inc    ebx
  417a77:	jbe    0x417aea
  417a79:	out    0x93,al
  417a7b:	sbb    bh,BYTE PTR ds:[ebx-0x4]
  417a7f:	fst    QWORD PTR [ebx]
  417a81:	jmp    0xc5899594
  417a86:	mov    edi,0x3d24bdd4
  417a8b:	jae    0x417ad7
  417a8d:	adc    al,0x66
  417a8f:	dec    ebx
  417a90:	(bad)  
  417a91:	sbb    ebp,edx
  417a93:	aam    0x92
  417a95:	push   es
  417a96:	call   0xca1:0xf76d9679
  417a9d:	sbb    BYTE PTR [ebx+0x43],0x17
  417aa1:	arpl   bp,cx
  417aa3:	inc    edi
  417aa4:	jle    0x417a2f
  417aa6:	daa    
  417aa7:	jno    0x417b1a
  417aa9:	clc    
  417aaa:	(bad)  
  417aab:	out    dx,al
  417aac:	mov    ds:0xd956d227,eax
  417ab1:	sub    BYTE PTR [edx-0x565225ab],cl
  417ab7:	test   BYTE PTR [ebx],0x7f
  417aba:	push   0xfffffff0
  417abc:	and    dh,BYTE PTR [ecx]
  417abe:	(bad)  
  417abf:	mov    esp,0xf37bbfca
  417ac4:	xchg   esi,eax
  417ac5:	out    dx,al
  417ac6:	pop    ds
  417ac7:	loop   0x417a72
  417ac9:	js     0x417af8
  417acb:	repnz call 0x2537:0xb39b0694
  417ad3:	rcl    eax,1
  417ad5:	adc    DWORD PTR [ebp+edx*1-0x9383f33],edx
  417adc:	test   DWORD PTR [eax-0xf4a566b],esp
  417ae2:	outs   dx,BYTE PTR ds:[esi]
  417ae3:	in     al,0x2b
  417ae5:	outs   dx,DWORD PTR ds:[esi]
  417ae6:	mov    bh,0x32
  417ae8:	and    ebx,DWORD PTR [ebp-0x3d]
  417aeb:	jno    0x417a77
  417aed:	dec    eax
  417aee:	ja     0x417aa1
  417af0:	jmp    0x8ef:0x10b0da05
  417af7:	mov    edi,0x80ecc1a3
  417afc:	xor    DWORD PTR [esi-0x1],eax
  417aff:	xchg   BYTE PTR [esi],ch
  417b01:	cmp    al,0xfe
  417b03:	xor    eax,0x7b7f4679
  417b08:	fbstp  TBYTE PTR [eax]
  417b0a:	(bad)  
  417b0b:	(bad)  
  417b0c:	jg     0x417ac9
  417b0e:	pusha  
  417b0f:	imul   ecx,DWORD PTR [esi],0x77
  417b12:	xchg   ebx,eax
  417b13:	mov    al,ds:0x4019fb48
  417b18:	sbb    BYTE PTR [eax-0x66],dl
  417b1b:	sti    
  417b1c:	jecxz  0x417ae7
  417b1e:	push   ebp
  417b1f:	mov    ecx,0xcbc2a630
  417b24:	fdivr  QWORD PTR [edx-0x2ed3acd]
  417b2a:	lea    ecx,ss:[eax+0x61]
  417b2e:	daa    
  417b2f:	scas   al,BYTE PTR es:[edi]
  417b30:	mov    ?,WORD PTR [esi]
  417b32:	inc    ebp
  417b33:	mov    ch,BYTE PTR [ebx]
  417b35:	in     al,dx
  417b36:	pop    edi
  417b37:	aad    0x15
  417b39:	push   ss
  417b3a:	rol    BYTE PTR [esi],1
  417b3c:	add    al,0xdb
  417b3e:	xchg   edx,eax
  417b3f:	pop    ebx
  417b40:	adc    BYTE PTR ds:0x36c81082,al
  417b46:	stos   DWORD PTR es:[edi],eax
  417b47:	sti    
  417b48:	push   ebp
  417b49:	dec    eax
  417b4a:	hlt    
  417b4b:	repz std 
  417b4d:	mov    cl,0x2d
  417b4f:	stc    
  417b50:	adc    edx,DWORD PTR [ebx+0x1f]
  417b53:	mov    bh,0x2d
  417b55:	iret   
  417b56:	mov    cs,WORD PTR [ebp+0x32473517]
  417b5c:	je     0x417b35
  417b5e:	and    DWORD PTR [edx+0x1e167ecc],ecx
  417b64:	and    al,0xc7
  417b66:	inc    edi
  417b67:	sti    
  417b68:	loope  0x417bab
  417b6a:	sbb    bl,cl
  417b6c:	lods   al,BYTE PTR ds:[esi]
  417b6d:	xor    BYTE PTR [edi+eiz*2+0x55],al
  417b71:	lahf   
  417b72:	ds inc eax
  417b74:	mov    ch,0xc1
  417b76:	xchg   edi,eax
  417b77:	inc    ebp
  417b78:	sar    DWORD PTR [ecx],0xda
  417b7b:	test   edi,esp
  417b7d:	(bad)  
  417b7e:	es push 0xffffffdb
  417b81:	imul   BYTE PTR [ebx+0x127e1be4]
  417b87:	xchg   edx,eax
  417b88:	jg     0x417b61
  417b8a:	dec    ecx
  417b8b:	icebp  
  417b8c:	push   es
  417b8d:	mov    dh,0x4f
  417b8f:	sbb    eax,0xf7d3fa1b
  417b94:	pop    esp
  417b95:	adc    DWORD PTR [ecx-0x9],eax
  417b98:	dec    esi
  417b99:	pusha  
  417b9a:	out    dx,eax
  417b9b:	aam    0x66
  417b9d:	cli    
  417b9e:	gs pop ebp
  417ba0:	jmp    0xfd21:0xcffcd0f2
  417ba7:	fs (bad) 
  417ba9:	and    eax,0x451c1d00
  417bae:	repnz (bad) [eax-0x29585ce]
  417bb5:	inc    edi
  417bb6:	test   BYTE PTR [ecx],ch
  417bb8:	mov    bh,0x1a
  417bba:	dec    ebp
  417bbb:	mov    bl,0x38
  417bbd:	les    eax,FWORD PTR [eax-0x37]
  417bc0:	mov    ebx,0xea6154df
  417bc5:	xor    al,0x20
  417bc7:	loope  0x417bf8
  417bc9:	and    ah,BYTE PTR [eax-0x4aebf762]
  417bcf:	mov    al,ds:0xe018004a
  417bd4:	scas   eax,DWORD PTR es:[edi]
  417bd5:	mov    ds:0xaf45c75c,eax
  417bda:	xor    eax,0xfef54452
  417bdf:	xor    al,0xa6
  417be1:	imul   ecx,DWORD PTR [ebx+0x4d0e85ec],0x3a
  417be8:	pop    ss
  417be9:	lea    ecx,ds:0xca0239c9
  417bef:	es pop edi
  417bf1:	(bad)  
  417bf3:	inc    ebx
  417bf4:	add    eax,0x8d563732
  417bf9:	(bad)  
  417bfa:	pop    esi
  417bfb:	mov    al,BYTE PTR [eax-0x24]
  417bfe:	ja     0x417c11
  417c00:	inc    ebp
  417c01:	loop   0x417c04
  417c03:	mov    fs,WORD PTR [esi-0x21]
  417c06:	adc    al,BYTE PTR [eax-0x67acdbe]
  417c0c:	add    al,BYTE PTR [ebx-0x608d3bcf]
  417c12:	xor    eax,DWORD PTR [esp+eax*1]
  417c15:	inc    edi
  417c16:	jp     0x417ba6
  417c18:	sub    DWORD PTR [ecx-0x15],esi
  417c1b:	int3   
  417c1c:	sbb    ebx,esp
  417c1e:	jns    0x417c64
  417c20:	repz mov bh,0x19
  417c23:	imul   eax,DWORD PTR [esi+edi*1],0x8e57bfa0
  417c2a:	mov    dl,0xd6
  417c2c:	loop   0x417c8a
  417c2e:	adc    ecx,ecx
  417c30:	cmp    edx,esi
  417c32:	inc    ecx
  417c33:	out    0xb,al
  417c35:	or     al,0x61
  417c37:	ins    BYTE PTR es:[edi],dx
  417c38:	fsub   DWORD PTR [edi-0x2ba6b64]
  417c3e:	pop    esp
  417c3f:	shr    ah,cl
  417c41:	fimul  DWORD PTR [bx+0x2ccd]
  417c46:	(bad)  
  417c47:	dec    eax
  417c48:	xchg   ebp,eax
  417c49:	rcl    BYTE PTR [esp],1
  417c4c:	adc    ah,bh
  417c4e:	hlt    
  417c4f:	dec    ebp
  417c50:	faddp  st(0),st
  417c52:	ins    DWORD PTR es:[edi],dx
  417c53:	cmp    ebp,DWORD PTR [edi]
  417c55:	and    al,0x66
  417c57:	add    eax,0x64155e61
  417c5c:	mov    al,0x92
  417c5e:	jo     0x417caa
  417c60:	xchg   edi,eax
  417c61:	sbb    eax,0x429b75d3
  417c66:	or     al,0x64
  417c68:	fild   WORD PTR [ecx]
  417c6a:	inc    ebp
  417c6b:	dec    esi
  417c6c:	pusha  
  417c6d:	fcom   DWORD PTR [ecx+0x426644e3]
  417c73:	push   esp
  417c74:	mov    cs,ebp
  417c76:	push   ecx
  417c77:	dec    DWORD PTR [esp+edi*1-0x78121720]
  417c7e:	mov    bh,BYTE PTR [edx+0x19]
  417c81:	std    
  417c82:	pop    ds
  417c83:	test   BYTE PTR [ebx-0x385cf16b],0x48
  417c8a:	push   ebx
  417c8b:	dec    ecx
  417c8c:	cld    
  417c8d:	sti    
  417c8e:	mov    dh,0xab
  417c90:	rcr    DWORD PTR [eax-0x57],1
  417c93:	out    0xb7,eax
  417c95:	push   edx
  417c96:	xchg   ecx,eax
  417c97:	sar    BYTE PTR [eax+ebp*2-0x53332c05],cl
  417c9e:	(bad)  [ecx]
  417ca0:	sub    eax,0x50c7e5f
  417ca5:	jge    0x417c82
  417ca7:	adc    DWORD PTR [esi+0x35082755],edx
  417cad:	xor    al,0xb6
  417caf:	fwait
  417cb0:	push   cs
  417cb1:	pop    ecx
  417cb2:	push   edx
  417cb3:	rcr    dh,cl
  417cb5:	gs xor eax,0x19f11dd2
  417cbb:	neg    BYTE PTR [ebp+0x6]
  417cbe:	outs   dx,BYTE PTR ds:[esi]
  417cbf:	xchg   BYTE PTR [ebx],al
  417cc1:	(bad)  
  417cc3:	pop    eax
  417cc4:	call   0x60aafbaa
  417cc9:	scas   eax,DWORD PTR es:[edi]
  417cca:	pop    ebx
  417ccb:	and    dl,al
  417ccd:	jmp    0xedb6083b
  417cd2:	ja     0x417d3e
  417cd4:	push   es
  417cd5:	call   0xf609f302
  417cda:	push   ss
  417cdb:	cmp    DWORD PTR [esi+0x3],esi
  417cde:	mov    eax,ds:0x2bd7221c
  417ce3:	imul   ebx,DWORD PTR [ebp+ebx*8+0x17],0xffffff86
  417ce8:	rol    BYTE PTR [edi+0x5644481b],0xf
  417cef:	mov    al,ds:0x7a911a72
  417cf4:	or     esi,DWORD PTR [eax-0xa]
  417cf7:	dec    ecx
  417cf8:	and    BYTE PTR [esi-0x41843774],bh
  417cfe:	lea    edx,[eax+0x17bbf3ec]
  417d04:	push   0xb9ed3ed2
  417d09:	stc    
  417d0a:	inc    ecx
  417d0b:	mov    WORD PTR [esi],?
  417d0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d0e:	pushf  
  417d0f:	int    0x37
  417d11:	mov    edi,ebp
  417d13:	add    dl,BYTE PTR [esi-0x18]
  417d16:	xor    ecx,eax
  417d18:	pop    ebp
  417d19:	(bad)  
  417d1a:	arpl   WORD PTR [eax],ax
  417d1c:	cli    
  417d1d:	mov    dh,0xdd
  417d1f:	repz neg dh
  417d22:	xor    al,BYTE PTR [ebx-0x6cbe0021]
  417d28:	test   al,0x6c
  417d2a:	push   ss
  417d2b:	jmp    0xcc19:0x66312a6b
  417d32:	jl     0x417d01
  417d34:	fldenv [esi+0x43b838b3]
  417d3a:	xchg   esi,eax
  417d3b:	cmp    BYTE PTR [esi],0xe5
  417d3e:	cld    
  417d3f:	push   esp
  417d40:	sub    cl,BYTE PTR [ebp+0x474ca9c3]
  417d46:	jo     0x417d41
  417d48:	sub    DWORD PTR [esi-0x32],0xac37f473
  417d4f:	and    al,0x31
  417d51:	dec    ecx
  417d52:	pusha  
  417d53:	mov    DWORD PTR [edi],edx
  417d55:	xchg   esi,eax
  417d56:	jno    0x417db1
  417d58:	iret   
  417d59:	(bad)  
  417d5a:	adc    ebx,DWORD PTR [esi-0x55d1eda]
  417d60:	pushf  
  417d61:	push   ss
  417d62:	sbb    esp,DWORD PTR [ecx+0x4]
  417d65:	inc    ecx
  417d66:	out    dx,eax
  417d67:	out    dx,eax
  417d68:	cmc    
  417d69:	mov    WORD PTR [edi],?
  417d6b:	pusha  
  417d6c:	dec    ecx
  417d6d:	ret    
  417d6e:	inc    esi
  417d6f:	arpl   WORD PTR [edi*1-0x58d8131c],dx
  417d76:	xchg   ebx,eax
  417d77:	inc    esp
  417d78:	mov    ds:0x16ceec97,al
  417d7d:	ds cmp ebx,edi
  417d80:	or     ebp,ebx
  417d82:	mov    DWORD PTR [ebx-0x5d],ebp
  417d85:	pop    ebx
  417d86:	call   0x88115de1
  417d8b:	iret   
  417d8c:	xor    BYTE PTR [ecx-0x47],dl
  417d8f:	mov    bh,0xe
  417d91:	push   ecx
  417d92:	xor    bh,dl
  417d94:	fs dec edi
  417d96:	stc    
  417d97:	and    eax,ecx
  417d99:	sbb    BYTE PTR [edx],bh
  417d9b:	sbb    al,0xb2
  417d9d:	or     bl,BYTE PTR ds:0x6fc44c1b
  417da3:	jle    0x417d56
  417da5:	push   eax
  417da6:	cmp    ch,BYTE PTR ds:0xfe05e0d0
  417dac:	aas    
  417dad:	retf   
  417dae:	mov    bl,0xe0
  417db0:	fdivr  st,st(0)
  417db2:	xor    esp,DWORD PTR [edi-0x5801073b]
  417db8:	mov    ds:0xb42e9df4,eax
  417dbd:	sub    eax,0xc2714751
  417dc2:	xor    al,0x6
  417dc4:	addr16 adc cl,dl
  417dc7:	(bad)  
  417dc9:	xchg   edi,eax
  417dca:	dec    ebp
  417dcb:	cmp    dl,BYTE PTR [esi]
  417dcd:	fs repz cld 
  417dd0:	jp     0x417dd2
  417dd2:	mov    ?,WORD PTR [ebx]
  417dd4:	ret    0x24a7
  417dd7:	loope  0x417df5
  417dd9:	sbb    al,0x46
  417ddb:	inc    ebp
  417ddc:	sub    al,0x6c
  417dde:	bound  ebx,QWORD PTR [edx+eiz*8]
  417de1:	fst    QWORD PTR [esi+0x37]
  417de4:	daa    
  417de5:	nop
  417de6:	mov    ah,0x38
  417de8:	repz clc 
  417dea:	mov    cl,0x40
  417dec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ded:	jl     0x417dba
  417def:	cs pusha 
  417df1:	and    al,0x56
  417df3:	inc    ebx
  417df4:	popa   
  417df5:	mov    eax,ds:0xcd8ddd66
  417dfa:	test   esi,ebx
  417dfc:	jns    0x417e1d
  417dfe:	xor    DWORD PTR [ebp+eax*1+0xd27fa84],edx
  417e05:	(bad)  
  417e06:	sub    cl,BYTE PTR [ecx+0x42608ad]
  417e0c:	sub    eax,0xee2d6bed
  417e11:	shl    DWORD PTR [edx-0x28],cl
  417e14:	cmp    ah,BYTE PTR [esi-0x678f6556]
  417e1a:	shl    cl,1
  417e1c:	add    al,0x3f
  417e1e:	adc    BYTE PTR [eax],bl
  417e20:	int3   
  417e21:	gs ds cdq 
  417e24:	repnz gs scas eax,DWORD PTR es:[edi]
  417e27:	mov    edx,0x3d875c33
  417e2c:	xor    DWORD PTR [edx-0x9],0xd3bdccd9
  417e33:	dec    esp
  417e34:	add    eax,0x6e380b18
  417e39:	jns    0x417e01
  417e3b:	mov    dh,0x15
  417e3d:	sbb    cl,al
  417e3f:	std    
  417e40:	stos   DWORD PTR es:[edi],eax
  417e41:	shl    BYTE PTR [ecx],cl
  417e43:	adc    edx,DWORD PTR [edi]
  417e45:	icebp  
  417e46:	inc    eax
  417e47:	lods   eax,DWORD PTR ds:[esi]
  417e48:	div    BYTE PTR [ecx+eiz*4-0x35]
  417e4c:	add    BYTE PTR [ebp-0x61b60104],bh
  417e52:	dec    ecx
  417e53:	int3   
  417e54:	pushf  
  417e55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e56:	or     eax,0x20903bc5
  417e5b:	arpl   WORD PTR gs:[esi+esi*2],cx
  417e5f:	call   0xd6d0f2aa
  417e64:	jbe    0x417ee2
  417e66:	mov    bl,0xe0
  417e68:	push   edi
  417e69:	sub    al,0x4a
  417e6b:	fcomp  DWORD PTR [esi+0x73a13181]
  417e71:	mov    ecx,0xdce15844
  417e76:	lea    eax,[eax+0x1bd73c39]
  417e7c:	ja     0x417ed6
  417e7e:	cmp    al,0x72
  417e80:	aaa    
  417e81:	and    eax,DWORD PTR [eax-0x26]
  417e84:	jp     0x417e9c
  417e86:	ss aaa 
  417e88:	mov    edi,0xbf7ecd91
  417e8d:	js     0x417e70
  417e8f:	std    
  417e90:	cmp    DWORD PTR [ebx+0x34b122b3],0xc7b221a
  417e9a:	sub    al,0xa7
  417e9c:	mov    al,0x7a
  417e9e:	(bad)  
  417e9f:	out    0xa2,eax
  417ea1:	mov    es,ebp
  417ea3:	inc    esi
  417ea4:	ins    DWORD PTR es:[edi],dx
  417ea5:	xchg   ebx,eax
  417ea6:	cmc    
  417ea7:	inc    ecx
  417ea8:	jmp    0x417e8c
  417eaa:	adc    eax,0x7a7a128b
  417eaf:	(bad)  
  417eb0:	inc    eax
  417eb1:	popa   
  417eb2:	mov    ah,0xd0
  417eb4:	cmp    al,0x62
  417eb6:	mov    bh,bh
  417eb8:	mov    ebp,ecx
  417eba:	or     cl,BYTE PTR [edi-0xcf0cc69]
  417ec0:	addr16 in eax,0x62
  417ec3:	cmp    ebp,DWORD PTR ds:0x32bec8d9
  417ec9:	fcmovnb st,st(2)
  417ecb:	push   0xffffffa4
  417ecd:	(bad)  
  417ece:	mov    bh,0xd3
  417ed0:	icebp  
  417ed1:	pop    edi
  417ed2:	ret    0x99cc
  417ed5:	mov    ebx,0x55ad897
  417eda:	daa    
  417edb:	jbe    0x417f51
  417edd:	jb     0x417e7d
  417edf:	inc    eax
  417ee0:	imul   ebx,DWORD PTR ds:0xa3451df,0x70
  417ee7:	int    0x9e
  417ee9:	mov    cl,0xc
  417eeb:	inc    esi
  417eec:	xchg   edi,eax
  417eed:	xor    ecx,eax
  417eef:	fisubr DWORD PTR [edx+0x4a]
  417ef2:	mov    ch,0x22
  417ef4:	or     BYTE PTR [eax+0x7faead29],al
  417efa:	mov    ds:0x9f6b8be0,eax
  417eff:	mov    ss,esi
  417f01:	ds cmc 
  417f03:	mov    esp,0x6d45b86d
  417f08:	repz cmp eax,0xc5449a0f
  417f0e:	mov    esp,0x5f2a907b
  417f13:	fisub  DWORD PTR [edi]
  417f15:	or     al,0xd7
  417f17:	bound  esp,QWORD PTR [eax]
  417f19:	sbb    eax,0x2c080061
  417f1e:	into   
  417f1f:	push   es
  417f20:	pop    ds
  417f21:	repz pop ss
  417f23:	sub    bl,BYTE PTR [esi+0x4dbb8417]
  417f29:	pop    esi
  417f2a:	movq   QWORD PTR [ecx+eiz*4+0x18],mm1
  417f2f:	repnz cmc 
  417f31:	sbb    BYTE PTR [edx-0x924b42f],al
  417f37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f38:	aaa    
  417f39:	push   cs
  417f3a:	loope  0x417f0b
  417f3c:	aam    0xa6
  417f3e:	call   0x6d413c54
  417f43:	jns    0x417ecb
  417f45:	cmp    DWORD PTR [ecx],ebx
  417f47:	jae    0x417ede
  417f49:	loop   0x417fb5
  417f4b:	hlt    
  417f4c:	inc    ecx
  417f4d:	fdivr  st,st(4)
  417f4f:	js     0x417fb9
  417f51:	gs add al,0x8
  417f54:	ror    BYTE PTR [edx-0x1fab4edf],1
  417f5a:	mov    ds:0x262354ea,al
  417f5f:	loope  0x417f3f
  417f61:	lea    ebx,ds:0x9e38200f
  417f67:	add    ebp,edx
  417f69:	adc    al,BYTE PTR [ecx]
  417f6b:	loopne 0x417f51
  417f6d:	mov    edx,0xe04f1664
  417f72:	jecxz  0x417fc6
  417f74:	(bad)  
  417f75:	mov    dl,0x29
  417f77:	mov    cs,WORD PTR [ecx-0x7eeb482c]
  417f7d:	je     0x417fda
  417f7f:	add    al,0x6
  417f81:	fsubr  QWORD PTR [esi]
  417f83:	into   
  417f84:	pop    edx
  417f85:	addr16 dec ecx
  417f87:	cvtps2pd xmm2,QWORD PTR [ebx]
  417f8a:	ret    
  417f8b:	fucomi st,st(7)
  417f8d:	jmp    0x4d5f:0x5cfbdced
  417f94:	sbb    esi,DWORD PTR [ecx-0x35]
  417f97:	arpl   WORD PTR [esi+0x5dc28dba],sp
  417f9d:	or     DWORD PTR [ecx-0x1ca4252a],edi
  417fa3:	add    bl,BYTE PTR [ebp-0xf]
  417fa6:	out    0x6f,al
  417fa8:	push   ds
  417fa9:	cwde   
  417faa:	lods   eax,DWORD PTR ds:[esi]
  417fab:	cld    
  417fac:	clc    
  417fad:	lods   al,BYTE PTR ds:[esi]
  417fae:	add    DWORD PTR [ecx-0x12],0xffffffcc
  417fb2:	pop    esi
  417fb3:	jb     0x418011
  417fb5:	adc    DWORD PTR [ebx+0x7e],ebp
  417fb8:	pop    edx
  417fb9:	(bad)  
  417fba:	iret   
  417fbb:	push   ecx
  417fbc:	test   al,0xc2
  417fbe:	out    0xc2,al
  417fc0:	push   edx
  417fc1:	jns    0x417fe7
  417fc3:	frstor [edi]
  417fc5:	mov    es,WORD PTR [edi+0xf]
  417fc8:	or     esi,edi
  417fca:	fidivr WORD PTR [edx+0x5c8bffc9]
  417fd0:	mov    BYTE PTR [edi],bh
  417fd2:	sbb    BYTE PTR [esi+esi*8+0x18cdbefc],0xa8
  417fda:	pop    ebx
  417fdb:	aam    0xf7
  417fdd:	cwde   
  417fde:	xor    eax,0xb95dd2b9
  417fe3:	jbe    0x417ff3
  417fe5:	aaa    
  417fe6:	sub    al,0x21
  417fe8:	sub    eax,0xb7e81955
  417fed:	push   0x8
  417fef:	jp     0x417f86
  417ff1:	mov    WORD PTR ds:0xbf672167,cs
  417ff7:	adc    eax,0x81f136e8
  417ffc:	xor    al,0xab
  417ffe:	cld    
  417fff:	mov    bl,0x23
  418001:	retf   
  418002:	leave  
  418003:	(bad)
  418006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418007:	xor    eax,edi
  418009:	xchg   ebx,eax
  41800a:	inc    ecx
  41800b:	mov    ds:0x8f4e4610,al
  418010:	int    0x71
  418012:	out    0x7a,al
  418014:	dec    ecx
  418015:	xchg   edi,eax
  418016:	sub    ah,BYTE PTR [esi]
  418018:	dec    ecx
  418019:	lods   eax,DWORD PTR ds:[esi]
  41801a:	lock add edx,DWORD PTR [ebp-0x671aaccc]
  418021:	fcomp  QWORD PTR [ebx-0x126a3191]
  418027:	test   al,0xc2
  418029:	mov    eax,0x75c1395b
  41802e:	and    eax,0x84ca3b66
  418033:	mov    DWORD PTR [esp+edi*8],ebp
  418036:	daa    
  418037:	ret    0xb846
  41803a:	ja     0x417fec
  41803c:	test   al,0x90
  41803e:	repz cld 
  418040:	fisubr DWORD PTR [ebp+0x66]
  418043:	push   ecx
  418044:	arpl   WORD PTR [ecx],ax
  418046:	aam    0x54
  418048:	mov    ah,0x39
  41804a:	sbb    bh,al
  41804c:	dec    ecx
  41804d:	mov    ds:0x116eb891,eax
  418052:	xchg   ebp,eax
  418053:	imul   ecx,DWORD PTR [eax],0x41444896
  418059:	push   0xffffffcf
  41805b:	xchg   ebp,eax
  41805c:	push   DWORD PTR [eax-0x40]
  41805f:	push   0xab1d8567
  418064:	pop    ds
  418065:	xor    DWORD PTR [esi],ebp
  418067:	xor    DWORD PTR [ebx+0x389c9f0e],ecx
  41806d:	push   ds
  41806e:	push   edi
  41806f:	inc    edi
  418070:	adc    BYTE PTR [ecx+0x78],ah
  418073:	and    BYTE PTR [ebp+0x9],ah
  418076:	dec    ebx
  418077:	ror    BYTE PTR [esi+edx*2+0x1ce4ebf0],0xe7
  41807f:	fisub  DWORD PTR [edi-0x56405868]
  418085:	mov    eax,0x52646efb
  41808a:	lods   eax,DWORD PTR ds:[esi]
  41808b:	cmp    ebp,DWORD PTR [bx+si]
  41808e:	hlt    
  41808f:	es mov ebp,0xa1e3ffba
  418095:	or     BYTE PTR [ecx+0x53265836],cl
  41809b:	(bad)  
  41809c:	imul   edx,DWORD PTR [edi+0xb],0x78318dc7
  4180a3:	outs   dx,BYTE PTR ds:[esi]
  4180a4:	bnd es jle 0x4180d7
  4180a8:	(bad)  
  4180a9:	xor    al,0x68
  4180ab:	or     cl,0x8b
  4180ae:	sub    al,0x7b
  4180b0:	in     eax,dx
  4180b1:	test   DWORD PTR [ebp+ebp*1-0x40c788bc],ebx
  4180b8:	stos   BYTE PTR es:[edi],al
  4180b9:	retf   
  4180ba:	push   0xe2fb90fd
  4180bf:	or     esi,DWORD PTR [esi]
  4180c1:	or     edi,0xfffffff6
  4180c4:	jb     0x4180ba
  4180c6:	addr16 clc 
  4180c8:	aaa    
  4180c9:	test   DWORD PTR [edx],0x8b6acf17
  4180cf:	sbb    DWORD PTR [ecx*8-0x3ab29d40],esi
  4180d6:	gs xchg ebx,eax
  4180d8:	and    ecx,esp
  4180da:	ja     0x418103
  4180dc:	jne    0x418105
  4180de:	mov    dl,0xb6
  4180e0:	in     eax,dx
  4180e1:	scas   al,BYTE PTR es:[edi]
  4180e2:	call   0xf3aef903
  4180e7:	lahf   
  4180e8:	ja     0x4180e1
  4180ea:	in     eax,0x6
  4180ec:	xchg   DWORD PTR [ebp+0x5f],ebx
  4180ef:	or     al,0xb2
  4180f1:	daa    
  4180f2:	(bad)
  4180f5:	mov    bl,0x82
  4180f7:	cwde   
  4180f8:	icebp  
  4180f9:	leave  
  4180fa:	dec    esi
  4180fb:	lds    eax,FWORD PTR ds:0x1afac01
  418101:	ss into 
  418103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418104:	data16 fsubr st,st(3)
  418107:	icebp  
  418108:	rcr    DWORD PTR [edi-0x2d],0x4
  41810c:	jno    0x4180f7
  41810e:	pop    es
  41810f:	clc    
  418110:	vcvtsi2sd xmm7,xmm7,DWORD PTR [eax+ebx*4]
  418115:	cmp    DWORD PTR [ebx-0x68],ebp
  418118:	outs   dx,DWORD PTR ds:[esi]
  418119:	push   edx
  41811a:	xor    eax,0xd4c8f4b0
  41811f:	sbb    al,BYTE PTR [eax-0x7c94bc3b]
  418125:	data16 mov ds:0x7a632c4a,al
  41812b:	sbb    al,BYTE PTR [ecx]
  41812d:	les    edi,FWORD PTR [ebx+0x7f]
  418130:	add    WORD PTR [esi-0x3924aa97],cx
  418137:	mov    dl,0xf
  418139:	retf   
  41813a:	retf   0xeb89
  41813d:	adc    al,BYTE PTR [eax]
  41813f:	out    dx,al
  418140:	sbb    eax,0x5ccd3cbb
  418145:	gs cmc 
  418147:	and    DWORD PTR [edx+eax*8-0x19],esi
  41814b:	sub    eax,0x8fae60b7
  418150:	fist   DWORD PTR [edi+0x40]
  418153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418154:	rcr    DWORD PTR [ebx+0x39],1
  418157:	(bad)  
  418158:	mov    DWORD PTR [ecx+eax*1],esi
  41815b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41815c:	stos   BYTE PTR es:[edi],al
  41815d:	hlt    
  41815e:	push   cs
  41815f:	jl     0x41813b
  418161:	sub    BYTE PTR [edi-0x1d350987],0x60
  418168:	inc    ebx
  418169:	jle    0x4181d3
  41816b:	int3   
  41816c:	xchg   ebp,eax
  41816d:	cld    
  41816e:	adc    al,0x46
  418170:	cmp    BYTE PTR [ebp-0x384e86d9],ah
  418176:	dec    ebx
  418177:	jmp    0x9c40c127
  41817c:	xchg   BYTE PTR [ecx],bl
  41817e:	enter  0x93cc,0x69
  418182:	cmc    
  418183:	push   ecx
  418184:	fstp   TBYTE PTR [esi]
  418186:	ins    BYTE PTR es:[edi],dx
  418187:	sbb    BYTE PTR [eax+eiz*4],bh
  41818a:	push   edi
  41818b:	and    eax,0xfd382c30
  418190:	cli    
  418191:	xchg   ebp,eax
  418192:	bound  ecx,QWORD PTR [ebx+eiz*8]
  418195:	xlat   BYTE PTR ds:[ebx]
  418196:	pop    esp
  418197:	ds sub eax,0x47233ce
  41819d:	ins    BYTE PTR es:[edi],dx
  41819e:	repz aas 
  4181a0:	sbb    BYTE PTR [edx+0x7155ba77],al
  4181a6:	rcr    esi,cl
  4181a8:	gs lock nop
  4181ab:	mov    ch,0xb6
  4181ad:	xor    eax,0xfc5abfad
  4181b2:	shl    edx,cl
  4181b4:	pop    es
  4181b5:	sub    dh,BYTE PTR [eax+ecx*8-0x79]
  4181b9:	xchg   esp,eax
  4181ba:	mov    edx,DWORD PTR [edi]
  4181bc:	sti    
  4181bd:	and    edi,DWORD PTR [eax-0x429a6d4d]
  4181c3:	or     esp,esi
  4181c5:	pop    ebx
  4181c6:	js     0x418208
  4181c8:	sbb    al,0x7
  4181ca:	or     al,BYTE PTR ds:[ebx-0x1765a29e]
  4181d1:	xor    edi,DWORD PTR [ecx-0x11ded0c5]
  4181d7:	cmc    
  4181d8:	mov    ?,WORD PTR [edx]
  4181da:	ja     0x418203
  4181dc:	retf   0x9d68
  4181df:	rol    BYTE PTR [edx],1
  4181e1:	in     al,0x76
  4181e3:	pop    eax
  4181e4:	cmp    DWORD PTR [eax+0x69],0x3d8f99fc
  4181eb:	add    al,0x27
  4181ed:	mov    al,ds:0xc695b4cd
  4181f2:	cmp    BYTE PTR gs:[ecx],0x9b
  4181f6:	fwait
  4181f7:	jns    0x418263
  4181f9:	sub    dl,ah
  4181fb:	jmp    0x418259
  4181fd:	pop    es
  4181fe:	imul   esp,ebp,0x21
  418201:	push   0x5e
  418203:	pop    esi
  418204:	cli    
  418205:	cmp    dh,BYTE PTR [ecx+0x1d]
  418208:	mov    gs,WORD PTR [edi]
  41820a:	clc    
  41820b:	xor    eax,0x78c98b1d
  418210:	dec    ebx
  418211:	and    BYTE PTR [edi],al
  418213:	jnp    0x41827f
  418215:	scas   eax,DWORD PTR es:[edi]
  418216:	call   0x904f7d2e
  41821b:	rcl    BYTE PTR [edx-0x28eaa3c8],cl
  418221:	in     al,0x34
  418223:	mov    WORD PTR [edx+0x184ae71f],?
  418229:	ret    
  41822a:	mov    cl,0x15
  41822c:	inc    edi
  41822d:	or     ecx,DWORD PTR ss:[ebx+eiz*2]
  418231:	inc    ebp
  418232:	js     0x418219
  418234:	sub    BYTE PTR [edx-0x1a956ebd],ah
  41823a:	in     al,0x4b
  41823c:	popa   
  41823d:	or     bh,BYTE PTR [ecx+0x60]
  418240:	pop    es
  418241:	fwait
  418242:	sub    eax,0x94be116e
  418247:	or     DWORD PTR [edi-0x5fed74f5],esi
  41824d:	sahf   
  41824e:	sbb    DWORD PTR [edi],eax
  418250:	test   DWORD PTR [ecx+0x7fd5a021],eax
  418256:	popw   es
  418258:	loop   0x4181e5
  41825a:	cdq    
  41825b:	test   eax,0x437f6206
  418260:	mov    ch,0x5
  418262:	xor    DWORD PTR [ebx-0x72],ebx
  418265:	test   eax,0x3b00cf91
  41826a:	pop    esi
  41826b:	push   ecx
  41826c:	jmp    0xaec1:0x957eacfa
  418273:	xchg   ebx,eax
  418274:	push   es
  418275:	lods   eax,DWORD PTR ds:[esi]
  418276:	mov    ah,ah
  418278:	inc    edx
  418279:	mov    WORD PTR [esp+edx*1+0x77],ds
  41827d:	inc    esi
  41827e:	ds dec esi
  418280:	stos   DWORD PTR es:[edi],eax
  418281:	test   DWORD PTR [ebp+ebp*1-0x363a32ae],esi
  418288:	inc    ebx
  418289:	outs   dx,DWORD PTR ds:[esi]
  41828a:	or     BYTE PTR [ecx-0x3],0x21
  41828e:	and    ebx,0x37
  418291:	xchg   ecx,eax
  418292:	sub    bh,0x57
  418295:	enter  0x25d3,0x3a
  418299:	dec    eax
  41829a:	mov    ebp,0xdab466c2
  41829f:	dec    ebx
  4182a0:	mov    ah,0x85
  4182a2:	mov    DWORD PTR [ecx-0xb],esp
  4182a5:	cwde   
  4182a6:	jecxz  0x4182a0
  4182a8:	adc    BYTE PTR [ebx],0xe3
  4182ab:	push   ecx
  4182ac:	popf   
  4182ad:	mov    edx,0x11d55200
  4182b2:	or     eax,0x4758f5
  4182b7:	data16 and ah,BYTE PTR [ebp-0x4a]
  4182bb:	and    eax,0x7d2c37ce
  4182c0:	sbb    al,0xc0
  4182c2:	shl    esi,0x4e
  4182c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182c6:	scas   eax,DWORD PTR es:[edi]
  4182c7:	test   eax,0x8c5fa780
  4182cc:	cmp    bl,ch
  4182ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182cf:	dec    esi
  4182d0:	data16 clc 
  4182d2:	stos   BYTE PTR es:[edi],al
  4182d3:	loope  0x4182d4
  4182d5:	(bad)  
  4182d6:	in     al,dx
  4182d7:	out    dx,eax
  4182d8:	inc    edx
  4182d9:	out    0x1f,al
  4182db:	jmp    0x4182e7
  4182dd:	mov    eax,0x48c16d97
  4182e2:	xchg   esp,eax
  4182e3:	dec    esi
  4182e4:	mov    al,0x1d
  4182e6:	xchg   edi,eax
  4182e7:	outs   dx,WORD PTR ds:[esi]
  4182e9:	push   eax
  4182ea:	jno    0x418310
  4182ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182ed:	jecxz  0x418363
  4182ef:	adc    ch,BYTE PTR [ebx+0x39]
  4182f2:	cdq    
  4182f3:	mov    bh,0x95
  4182f5:	inc    ebx
  4182f6:	mov    dl,0x27
  4182f8:	add    DWORD PTR [ecx],eax
  4182fa:	inc    ebp
  4182fb:	leave  
  4182fc:	test   BYTE PTR [ebx+0xee06e1e],dl
  418302:	push   esi
  418303:	fbstp  TBYTE PTR [eax+0x49]
  418306:	sub    edx,DWORD PTR [ebx-0x754e8e5e]
  41830c:	aaa    
  41830d:	cmp    BYTE PTR [esp+ebp*8-0x443d3ad0],ch
  418314:	popf   
  418315:	sub    esi,esi
  418317:	cmp    bh,ah
  418319:	push   ecx
  41831a:	jp     0x418379
  41831c:	mov    eax,ds:0x47046bf8
  418321:	or     dl,BYTE PTR [ebp-0x3d]
  418324:	dec    ebp
  418325:	push   edx
  418326:	aas    
  418327:	dec    esp
  418328:	fld    QWORD PTR [esp+edx*1+0x40]
  41832c:	sub    BYTE PTR [edx-0x8769c2a],ah
  418332:	test   BYTE PTR [ebp+0x3b],dh
  418335:	cmp    eax,0xbf655932
  41833a:	pop    esi
  41833b:	or     eax,0xd080ff08
  418340:	mov    ss,WORD PTR [ecx-0x3e]
  418343:	cmp    esp,DWORD PTR [ebx]
  418345:	fldenv ds:0xcbdf8b75
  41834b:	(bad)  
  41834d:	sub    al,0xd0
  41834f:	sub    al,0x9
  418351:	jmp    FWORD PTR [edi+0x366feb7a]
  418357:	mov    edx,0x798fa9ad
  41835c:	jo     0x4183ae
  41835e:	dec    ebp
  41835f:	gs pushf 
  418361:	pop    ss
  418362:	add    DWORD PTR [ebx-0x39a3c7bc],ebx
  418368:	adc    edx,DWORD PTR [edx]
  41836a:	or     DWORD PTR [eax+0x4f],edi
  41836d:	add    eax,0x8b959c8b
  418372:	fdiv   DWORD PTR ds:0xe3942a8b
  418378:	stc    
  418379:	clc    
  41837a:	or     al,0x69
  41837c:	fwait
  41837d:	mov    bh,bl
  41837f:	repnz xchg ebx,eax
  418381:	mov    ebx,0xad5b407c
  418386:	lahf   
  418387:	or     cl,BYTE PTR [eax]
  418389:	popa   
  41838a:	or     cl,BYTE PTR [edi+0x142f5a49]
  418390:	(bad)  
  418392:	pop    esp
  418393:	push   0xbdde3a17
  418398:	das    
  418399:	add    BYTE PTR [ebx],ch
  41839b:	push   0x3b
  41839d:	and    al,0x34
  41839f:	pusha  
  4183a0:	in     eax,dx
  4183a1:	add    eax,0x12d70e8
  4183a6:	repz loop 0x41840d
  4183a9:	pushf  
  4183aa:	hlt    
  4183ab:	ret    
  4183ac:	and    BYTE PTR [edx-0x7f14ccbd],0x2e
  4183b3:	shl    DWORD PTR [ebx+ebx*4-0x48],cl
  4183b7:	sub    esp,esp
  4183b9:	sub    DWORD PTR [ebx-0x5d],edi
  4183bc:	push   esp
  4183bd:	loop   0x41836a
  4183bf:	ret    
  4183c0:	sub    eax,0x9cd5a6bc
  4183c5:	mov    ds:0x8d34ca88,al
  4183ca:	mov    dl,0x73
  4183cc:	fs dec esp
  4183ce:	dec    eax
  4183cf:	dec    edi
  4183d0:	hlt    
  4183d1:	mov    DWORD PTR [ebx-0x2b],esi
  4183d4:	pop    esp
  4183d5:	repz dec ebx
  4183d7:	xchg   ebx,eax
  4183d8:	adc    DWORD PTR ds:0x6b03eff4,eax
  4183de:	adc    BYTE PTR [esi],dl
  4183e0:	inc    edi
  4183e1:	adc    bl,BYTE PTR [ebp+0x13]
  4183e4:	push   ds
  4183e5:	sbb    esp,DWORD PTR [ebx-0x31]
  4183e8:	adc    eax,0xece5fd18
  4183ed:	and    eax,DWORD PTR [ebx+0x6725b25e]
  4183f3:	or     cl,BYTE PTR [esi+edx*4+0x586c341b]
  4183fa:	mov    cl,0x11
  4183fc:	xor    DWORD PTR [eax+0x51],0x4bfe3217
  418403:	jne    0x418431
  418405:	add    al,0x60
  418407:	pusha  
  418408:	lock and eax,0x3d79e5b7
  41840e:	adc    BYTE PTR [ecx],bh
  418410:	out    0x6f,al
  418412:	cmp    cl,BYTE PTR [edx+0x9c9e187]
  418418:	test   al,0x82
  41841a:	add    eax,0xb56fe355
  41841f:	push   edx
  418420:	shl    BYTE PTR ds:0xc72a78e3,0xb5
  418427:	imul   ebp,edx,0x5e16a29a
  41842d:	call   0xfc29a8ec
  418432:	imul   BYTE PTR [esi-0x5090dfd8]
  418438:	xor    ah,cl
  41843a:	mov    ds:0x53a13547,eax
  41843f:	adc    edi,ecx
  418441:	inc    edi
  418442:	popa   
  418443:	mov    edx,0x13f6999c
  418448:	xchg   esp,eax
  418449:	das    
  41844a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41844b:	ss pop ss
  41844d:	adc    DWORD PTR [ebx+0x2c],0x4e
  418451:	and    dl,BYTE PTR [esi+0x77aee438]
  418457:	(bad)  
  418458:	cmc    
  418459:	adc    DWORD PTR [edi+0x73f142fb],0x9c0beb9c
  418463:	and    eax,0x7f238761
  418468:	xlat   BYTE PTR ds:[ebx]
  418469:	cwde   
  41846a:	inc    ebx
  41846b:	or     al,0xf9
  41846d:	or     DWORD PTR [ebp-0x1ddf1723],ebx
  418473:	jg     0x4183f9
  418475:	sub    DWORD PTR [edx-0x34ad9056],ecx
  41847b:	(bad)  
  41847c:	mov    ch,0xd4
  41847e:	pushf  
  41847f:	test   dh,dl
  418481:	dec    esi
  418482:	cmp    esi,DWORD PTR ds:0xf4dd4ef5
  418488:	xchg   esp,eax
  418489:	cld    
  41848a:	pop    ds
  41848b:	push   esi
  41848c:	xchg   ebp,eax
  41848d:	sub    BYTE PTR [edx],cl
  41848f:	sub    DWORD PTR [esi+0x12],0x74
  418493:	or     DWORD PTR [edi-0xa],0x7bcbbf22
  41849a:	mov    esp,0x712c5ca1
  41849f:	outs   dx,BYTE PTR ds:[esi]
  4184a0:	inc    ebx
  4184a1:	mov    ds:0x555b6eb4,al
  4184a6:	in     al,dx
  4184a7:	cmp    DWORD PTR [edx],ecx
  4184a9:	xor    edi,DWORD PTR [eax]
  4184ab:	inc    esi
  4184ac:	call   0x406ebbb1
  4184b1:	sbb    ebx,DWORD PTR [edx-0x2f98dc33]
  4184b7:	ins    DWORD PTR es:[edi],dx
  4184b8:	and    BYTE PTR [ebx+0x46],0x8d
  4184bc:	repnz mov BYTE PTR [edx+0x5c],bl
  4184c0:	or     DWORD PTR [eax],ebp
  4184c2:	jnp    0x418531
  4184c4:	test   DWORD PTR [edx+0x46],ebp
  4184c7:	fadd   st,st(3)
  4184c9:	iret   
  4184ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184cb:	addr16 inc esi
  4184cd:	adc    ah,BYTE PTR [ebx+0x71]
  4184d0:	cmp    ebp,ecx
  4184d2:	push   esp
  4184d3:	ror    DWORD PTR [edi],0xcb
  4184d6:	add    cl,BYTE PTR [ecx-0x48]
  4184d9:	daa    
  4184da:	add    ecx,DWORD PTR [ecx]
  4184dc:	pop    ds
  4184dd:	dec    ebp
  4184de:	mov    ecx,ebp
  4184e0:	into   
  4184e1:	outs   dx,BYTE PTR ds:[esi]
  4184e2:	call   0x9df:0x6c50b9ed
  4184e9:	fld    QWORD PTR [ecx+0x3a]
  4184ec:	enter  0xb152,0xf0
  4184f0:	xchg   ebp,eax
  4184f1:	retf   0x97dc
  4184f4:	hlt    
  4184f5:	ficom  WORD PTR [edi-0x747e7d34]
  4184fb:	ret    
  4184fc:	sbb    al,0x50
  4184fe:	lock inc esp
  418500:	inc    edi
  418501:	mov    ah,0xde
  418503:	ins    DWORD PTR es:[edi],dx
  418504:	or     ebp,DWORD PTR [ebx+0x31]
  418507:	ror    BYTE PTR [ecx-0x6f685ab4],0xf1
  41850e:	cmp    BYTE PTR ds:0x8baa79f3,ah
  418514:	mov    al,ds:0x5a21314e
  418519:	mov    eax,DWORD PTR [edi+0x2b]
  41851c:	dec    esp
  41851d:	cmc    
  41851e:	or     esp,DWORD PTR [eax-0x49]
  418521:	adc    eax,0x5341a488
  418526:	std    
  418527:	repnz pop ds
  418529:	mov    al,ds:0x5cc76ce7
  41852e:	adc    esi,DWORD PTR [esi]
  418530:	dec    eax
  418531:	xchg   ebp,eax
  418532:	and    eax,0xd5fd567e
  418537:	dec    BYTE PTR [ebx]
  418539:	mov    bh,0x39
  41853b:	shl    BYTE PTR [ebp+0x10],0x13
  41853f:	ficom  DWORD PTR [edi]
  418541:	pop    es
  418542:	add    ebp,esi
  418544:	jne    0x41850e
  418546:	pusha  
  418547:	mov    ebx,esp
  418549:	mov    ecx,0xf0fc08c1
  41854e:	sub    eax,0x3b12fe3f
  418553:	or     edx,ebx
  418555:	push   ecx
  418556:	sub    bl,BYTE PTR [ecx+0x63]
  418559:	daa    
  41855a:	xchg   ebx,eax
  41855b:	sbb    edi,DWORD PTR [edi+0x49]
  41855e:	outs   dx,DWORD PTR ds:[esi]
  41855f:	mov    bh,0xe7
  418561:	jmp    0x418516
  418563:	xchg   esp,eax
  418564:	or     al,0xca
  418566:	pop    esi
  418567:	pop    ss
  418568:	push   esi
  418569:	fist   DWORD PTR [ebx+0x37]
  41856c:	adc    bh,BYTE PTR [edi+0x3d]
  41856f:	cmp    edx,DWORD PTR [edx+eax*2+0xf]
  418573:	popf   
  418574:	mov    cl,0xdf
  418576:	jl     0x418503
  418578:	dec    ebp
  418579:	push   ebp
  41857a:	les    ebx,FWORD PTR [eax]
  41857c:	sbb    BYTE PTR [eax],0xc0
  41857f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418580:	mov    eax,0x74a98c0a
  418585:	aaa    
  418586:	fild   DWORD PTR [esi]
  418588:	inc    esi
  418589:	dec    esp
  41858a:	shr    DWORD PTR [esi],cl
  41858c:	pop    edi
  41858d:	mov    cl,0xf4
  41858f:	sar    BYTE PTR [edi],0x87
  418592:	jl     0x4185da
  418594:	sbb    eax,0x10837837
  418599:	aaa    
  41859a:	jbe    0x418602
  41859c:	jmp    0xeda5:0x5b7ad44d
  4185a3:	ja     0x418552
  4185a5:	dec    esp
  4185a6:	jae    0x418574
  4185a8:	sub    al,BYTE PTR [edi+0x17a5276c]
  4185ae:	out    0xdd,al
  4185b0:	mov    cl,0x5b
  4185b2:	test   al,0x5b
  4185b4:	call   0xaab1:0xd013ee7
  4185bb:	and    BYTE PTR [ecx],cl
  4185bd:	call   0x6cda637b
  4185c2:	hlt    
  4185c3:	mov    ecx,0x5b6c9262
  4185c8:	jle    0x4185ba
  4185ca:	cmp    BYTE PTR [ebx],ch
  4185cc:	das    
  4185cd:	leave  
  4185ce:	dec    edi
  4185cf:	jnp    0x4185d2
  4185d1:	ret    
  4185d2:	fmul   DWORD PTR [edi+0xbb3699c]
  4185d8:	or     eax,0x2fff7e6
  4185dd:	add    esi,DWORD PTR [edx]
  4185df:	inc    esi
  4185e0:	cmc    
  4185e1:	dec    eax
  4185e2:	enter  0x5256,0xdf
  4185e6:	out    dx,al
  4185e7:	mov    dl,0xc4
  4185e9:	inc    ebx
  4185ea:	lds    edx,FWORD PTR [edx-0x2b]
  4185ed:	jge    0x4185e2
  4185ef:	rcl    edi,0x1d
  4185f2:	xchg   esi,eax
  4185f3:	stos   BYTE PTR es:[edi],al
  4185f4:	outs   dx,DWORD PTR ds:[esi]
  4185f5:	popa   
  4185f6:	inc    eax
  4185f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185f8:	repnz and ebx,eax
  4185fb:	(bad)  [edx-0x64]
  4185fe:	imul   edx,DWORD PTR [edi+eiz*1-0x1ab4b538],0x2aad5e5c
  418609:	mov    dh,0x4b
  41860b:	jbe    0x418638
  41860d:	pop    edx
  41860e:	addr16 xchg esi,eax
  418610:	mov    ebx,0x9282e2c7
  418615:	pop    es
  418616:	test   al,0xcf
  418618:	inc    edx
  418619:	mov    ebx,DWORD PTR [ecx-0x9]
  41861c:	push   es
  41861d:	(bad)  
  41861e:	mov    dl,0x96
  418620:	cmc    
  418621:	scas   eax,DWORD PTR es:[edi]
  418622:	xchg   ecx,eax
  418623:	rol    DWORD PTR [eax],cl
  418625:	ficom  WORD PTR [ebx+0x2586eee3]
  41862b:	mov    bl,0x78
  41862d:	mov    al,ds:0x6a02db5
  418632:	aam    0xd9
  418634:	pop    es
  418635:	test   BYTE PTR [esi+0x44],ch
  418638:	test   DWORD PTR [edx-0x71],ecx
  41863b:	dec    eax
  41863c:	(bad)  
  41863d:	push   0xffffffdd
  41863f:	out    0x4d,eax
  418641:	adc    bh,dl
  418643:	mul    BYTE PTR [edx-0x1eb30e7]
  418649:	fs push edx
  41864b:	cwde   
  41864c:	and    BYTE PTR ds:0xd064109f,ch
  418652:	inc    edx
  418653:	jnp    0x418617
  418655:	sbb    al,0xf0
  418657:	adc    al,0x66
  418659:	aaa    
  41865a:	adc    ebp,esp
  41865c:	add    esp,DWORD PTR [ecx+0x40214abc]
  418662:	repnz bound ecx,QWORD PTR [edi]
  418665:	push   edx
  418666:	dec    esp
  418667:	jns    0x4186e0
  418669:	mov    edi,0x9530147b
  41866e:	test   eax,0xe9d65ea6
  418673:	xchg   BYTE PTR [eax+0x44d23b17],dh
  418679:	cmp    DWORD PTR [edi+edx*1-0x160dcec],eax
  418680:	nop
  418681:	cld    
  418682:	jl     0x4186ac
  418684:	push   0xffffffbf
  418686:	aaa    
  418687:	in     al,0xf3
  418689:	add    BYTE PTR [edx+0x5],0xcb
  41868d:	popa   
  41868e:	jae    0x4186dd
  418690:	repz add bh,ch
  418693:	cmp    eax,DWORD PTR [eax+0x18]
  418696:	call   FWORD PTR ss:[ebx+0x5d]
  41869a:	push   0x6bc37cbd
  41869f:	adc    al,0xdb
  4186a1:	(bad)  
  4186a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186a3:	mov    bh,BYTE PTR [edi-0x84e2d2f]
  4186a9:	mov    ecx,0xc367366
  4186ae:	adc    al,0x33
  4186b0:	(bad)  
  4186b1:	pop    ebp
  4186b2:	xchg   ebx,eax
  4186b3:	jae    0x418670
  4186b5:	pop    ebp
  4186b6:	popa   
  4186b7:	adc    ecx,DWORD PTR [ebx-0xb]
  4186ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186bb:	xor    DWORD PTR [edx],ecx
  4186bd:	lds    ecx,FWORD PTR [edx+0xd73a286]
  4186c3:	imul   ebp,DWORD PTR [eax+0x76701ae6],0x5e9750e8
  4186cd:	test   al,0x4d
  4186cf:	lock sbb al,0x67
  4186d3:	push   ebx
  4186d4:	jnp    0x418704
  4186d6:	mov    edi,eax
  4186d8:	add    al,0x8d
  4186da:	rcl    DWORD PTR [eax-0x15],0xd
  4186de:	mov    ebp,0x8333c64d
  4186e3:	push   edx
  4186e4:	mul    DWORD PTR [edi+0x5038d8ec]
  4186ea:	pop    esp
  4186eb:	push   0xffffffe5
  4186ed:	or     ebp,edx
  4186ef:	inc    ebx
  4186f0:	sub    esp,DWORD PTR [ebp-0x6b]
  4186f3:	bound  eax,QWORD PTR [ebp+0x349640f3]
  4186f9:	test   DWORD PTR [ecx-0x5e774271],edi
  4186ff:	test   al,0x8f
  418701:	mov    bh,0xad
  418703:	in     eax,0xe3
  418705:	mov    ds:0x7d265337,eax
  41870a:	jg     0x418693
  41870c:	(bad)  [esi+0x507de506]
  418712:	aaa    
  418713:	or     dl,BYTE PTR [esi+0x6e9dcccc]
  418719:	iret   
  41871a:	gs jns 0x4186bf
  41871d:	sti    
  41871e:	aam    0x5d
  418720:	fidivr DWORD PTR [ecx]
  418722:	mov    cl,0xe9
  418724:	jb     0x41873e
  418726:	or     DWORD PTR es:[ecx],eax
  418729:	loope  0x4187a2
  41872b:	jae    0x41871a
  41872d:	dec    edx
  41872e:	je     0x4186e5
  418730:	loope  0x4186f6
  418732:	adc    dl,ch
  418734:	stos   BYTE PTR es:[edi],al
  418735:	sbb    dl,BYTE PTR [edi-0x29210f1e]
  41873b:	les    ecx,FWORD PTR [edi-0x45]
  41873e:	outs   dx,BYTE PTR ds:[esi]
  41873f:	mov    ds:0xdc283d50,eax
  418744:	mov    al,0x28
  418746:	stc    
  418747:	(bad)  
  418748:	fbstp  TBYTE PTR [eax-0x79]
  41874b:	or     BYTE PTR [edx+0x7f],ah
  41874e:	mov    eax,ds:0xd5b57323
  418753:	in     eax,0xd1
  418755:	inc    ebx
  418756:	xchg   esi,eax
  418757:	mov    esi,0xd6eb2526
  41875c:	lea    esp,[eax+0x59953597]
  418762:	sub    eax,DWORD PTR [esi-0x398b54f7]
  418768:	in     al,dx
  418769:	mov    edx,0x31fbcd5a
  41876e:	shl    BYTE PTR [edi+0xe],0xe5
  418772:	sbb    al,0x31
  418774:	arpl   WORD PTR [eax-0x3393a98],si
  41877a:	jae    0x4187d3
  41877c:	imul   DWORD PTR [ebx+0x5b]
  41877f:	je     0x418790
  418781:	jecxz  0x418799
  418783:	mov    eax,ds:0x910802b9
  418788:	or     edi,DWORD PTR [eax]
  41878a:	sbb    eax,eax
  41878c:	cmovnp esp,ecx
  41878f:	sub    BYTE PTR [ecx-0x614c9e77],ch
  418795:	push   0xda8391c5
  41879a:	leave  
  41879b:	sub    ah,bh
  41879d:	jecxz  0x4187ab
  41879f:	or     eax,0xa9b99515
  4187a4:	sti    
  4187a5:	call   0x992d306d
  4187aa:	xlat   BYTE PTR ds:[ebx]
  4187ab:	repz xlat BYTE PTR ds:[ebx]
  4187ad:	std    
  4187ae:	stos   DWORD PTR es:[edi],eax
  4187af:	mov    edx,0x118553fc
  4187b4:	outs   dx,DWORD PTR ds:[esi]
  4187b5:	push   edi
  4187b6:	push   cs
  4187b7:	mov    bl,0x65
  4187b9:	sub    dh,dh
  4187bb:	sbb    al,0xc5
  4187bd:	mov    bh,0x31
  4187bf:	adc    BYTE PTR [edi],bl
  4187c1:	(bad)  
  4187c2:	or     BYTE PTR [edi+0x4fb22934],bh
  4187c8:	or     al,0x39
  4187ca:	fwait
  4187cb:	jecxz  0x41876f
  4187cd:	out    dx,eax
  4187ce:	cmc    
  4187cf:	scas   al,BYTE PTR es:[edi]
  4187d0:	les    ebp,FWORD PTR [ebp-0x71ad3ff3]
  4187d6:	or     dh,BYTE PTR [ebx]
  4187d8:	daa    
  4187d9:	repnz cli 
  4187db:	jge    0x41882b
  4187dd:	popf   
  4187de:	mov    al,ds:0x724ff172
  4187e3:	push   ds
  4187e4:	fwait
  4187e5:	out    dx,eax
  4187e6:	lahf   
  4187e7:	fist   DWORD PTR [ebx-0x64]
  4187ea:	in     eax,dx
  4187eb:	xor    DWORD PTR [edi-0x63],ecx
  4187ee:	in     eax,dx
  4187ef:	dec    DWORD PTR [ebp+0x5d80ecde]
  4187f5:	retf   
  4187f6:	fwait
  4187f7:	xchg   ebp,eax
  4187f8:	das    
  4187f9:	add    ecx,ecx
  4187fb:	ret    0xdf30
  4187fe:	int    0x91
  418800:	cmp    BYTE PTR [ebx+0x38c0ceb4],0x17
  418807:	out    dx,eax
  418808:	sbb    BYTE PTR [ebp-0x7b],ah
  41880b:	mov    edx,0x3b6ba954
  418810:	pusha  
  418811:	fbld   TBYTE PTR [esp+ebx*8]
  418814:	(bad)  
  418815:	ja     0x4187f1
  418817:	call   0x11ba:0x16d52186
  41881e:	pop    ss
  41881f:	pop    ss
  418820:	sbb    DWORD PTR [ebx-0x5d6c7706],0xffffffe9
  418827:	and    ah,BYTE PTR [edx]
  418829:	xchg   ebx,eax
  41882a:	add    bh,BYTE PTR [ecx-0x42]
  41882d:	fsubr  QWORD PTR ds:0x6b7129d0
  418833:	gs push esi
  418835:	cdq    
  418836:	(bad)  
  418837:	dec    eax
  418838:	xchg   ecx,eax
  418839:	pop    esi
  41883a:	lea    ebp,[ecx-0x553a6ca7]
  418840:	sub    edi,DWORD PTR [eax-0x55]
  418843:	mov    BYTE PTR [edi],ah
  418845:	in     eax,0x49
  418847:	mov    cl,0xb2
  418849:	in     eax,dx
  41884a:	mov    esi,0x2ec6a7fa
  41884f:	adc    BYTE PTR ds:0x4f8dde8a,al
  418855:	sub    DWORD PTR [ebx+0x27],eax
  418858:	jno    0x418894
  41885a:	mov    ecx,0x69ccab0e
  41885f:	sbb    al,0xc4
  418861:	cmc    
  418862:	sbb    BYTE PTR [esi],ah
  418864:	dec    ebx
  418865:	and    eax,0xd608af10
  41886a:	les    esp,FWORD PTR [eax]
  41886c:	jl     0x4188df
  41886e:	jb     0x4188b5
  418870:	dec    ebx
  418871:	xchg   BYTE PTR [edx+0x14797d42],ah
  418877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418878:	fcomp  st(7)
  41887a:	sbb    BYTE PTR [edi-0x7fe48fc1],bl
  418880:	sub    ax,0xff41
  418884:	std    
  418885:	inc    ebx
  418886:	and    dh,cl
  418888:	xchg   edi,eax
  418889:	aam    0xb5
  41888b:	mov    esi,edi
  41888d:	or     eax,0xbd4d1628
  418892:	stc    
  418893:	test   DWORD PTR [ebp-0x66e01649],esp
  418899:	std    
  41889a:	into   
  41889b:	jb     0x4188c7
  41889d:	mov    cl,0x8c
  41889f:	leave  
  4188a0:	test   eax,0x733d80c8
  4188a5:	cmp    ebp,DWORD PTR [eax]
  4188a7:	adc    esi,DWORD PTR [edi]
  4188a9:	fnstsw WORD PTR [bp+si+0xe]
  4188ad:	jne    0x41885b
  4188af:	sahf   
  4188b0:	xrelease xchg BYTE PTR [esi-0x61],dh
  4188b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188b5:	pop    eax
  4188b6:	mov    esi,?
  4188b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188b9:	stc    
  4188ba:	not    BYTE PTR [ebx-0x5f]
  4188bd:	(bad)  [ecx-0xd]
  4188c0:	daa    
  4188c1:	scas   eax,DWORD PTR es:[edi]
  4188c2:	or     al,0xdf
  4188c4:	cwde   
  4188c5:	jno    0x418944
  4188c7:	and    eax,0x72608bab
  4188cc:	jb     0x4188d5
  4188ce:	in     al,dx
  4188cf:	scas   al,BYTE PTR es:[edi]
  4188d0:	pop    esp
  4188d1:	pop    ebx
  4188d2:	dec    edx
  4188d3:	hlt    
  4188d4:	cwde   
  4188d5:	dec    ecx
  4188d6:	xor    eax,0x8792169
  4188db:	mov    WORD PTR [esp+edx*1-0x23ba53de],ss
  4188e2:	addr16 adc dl,0xc0
  4188e6:	cli    
  4188e7:	add    DWORD PTR [eax+0x7a],edi
  4188ea:	lock (bad) 
  4188ec:	jg     0x418906
  4188ee:	imul   edi,edi,0xe35e2e9e
  4188f4:	push   edx
  4188f5:	shr    BYTE PTR [esi+0x5d0ea076],cl
  4188fb:	mov    ebp,0x1093f56c
  418900:	dec    ebp
  418901:	push   0xb9a93919
  418906:	add    ah,BYTE PTR [ecx-0x329c6fb9]
  41890c:	push   0xf686ea1a
  418911:	xor    edi,DWORD PTR [eax+0x39]
  418914:	nop
  418915:	inc    eax
  418916:	popa   
  418917:	fstp   TBYTE PTR [edi-0x1e]
  41891a:	test   BYTE PTR [ebx],dl
  41891c:	leave  
  41891d:	mov    dl,0xd1
  41891f:	cmp    al,0xc4
  418921:	pop    ebx
  418922:	jae    0x4189a0
  418924:	xchg   ecx,eax
  418925:	or     DWORD PTR [esi+eiz*2],ecx
  418928:	mov    cl,0x1c
  41892a:	cdq    
  41892b:	sub    dh,al
  41892d:	test   eax,edx
  41892f:	push   ds
  418930:	and    cl,BYTE PTR [ecx]
  418932:	rol    DWORD PTR [ecx],0x3f
  418935:	push   ss
  418936:	retf   
  418937:	and    ch,BYTE PTR [ecx+eax*1]
  41893a:	sar    ch,1
  41893c:	inc    ecx
  41893d:	cmp    BYTE PTR [ecx-0x79],cl
  418940:	mov    DWORD PTR [ecx],edi
  418942:	sti    
  418943:	dec    esp
  418944:	test   al,0x12
  418946:	imul   edi,DWORD PTR [ecx+edx*4],0x59a812e2
  41894d:	test   al,0xfa
  41894f:	je     0x4189c0
  418951:	pop    ebp
  418952:	push   edi
  418953:	sahf   
  418954:	repnz xlat BYTE PTR ds:[ebx]
  418956:	aas    
  418957:	cld    
  418958:	xchg   DWORD PTR [edx-0x4324f6f5],ebp
  41895e:	fistp  WORD PTR [edx+0x98118e5]
  418964:	dec    ebp
  418965:	cli    
  418966:	outs   dx,BYTE PTR ds:[esi]
  418967:	shl    BYTE PTR [edi+esi*1-0x55],1
  41896b:	adc    eax,0xd74fed6f
  418970:	aad    0x5a
  418972:	call   DWORD PTR [edi+ebp*1+0x469459c4]
  418979:	adc    bl,BYTE PTR [ebp+0x5d]
  41897c:	and    eax,0xb85cfec4
  418981:	cdq    
  418982:	mov    edx,0x40e7e9f0
  418987:	pop    ss
  418988:	push   ebx
  418989:	mov    dh,0x99
  41898b:	xor    eax,0x427d6941
  418990:	ret    
  418991:	cmp    ebp,edi
  418993:	mov    esi,0x7a6d3444
  418998:	fisubr DWORD PTR [ebx]
  41899a:	retf   
  41899b:	in     eax,0xa7
  41899d:	in     eax,dx
  41899e:	or     ebx,DWORD PTR [esi+eiz*4+0x5589880]
  4189a5:	shl    bl,1
  4189a7:	push   eax
  4189a8:	ss cld 
  4189aa:	shl    BYTE PTR [ebx+0x3c741379],1
  4189b0:	mov    al,0x2d
  4189b2:	(bad)  
  4189b3:	jnp    0x4189f2
  4189b5:	mov    ch,0x28
  4189b7:	not    ah
  4189b9:	imul   ecx,DWORD PTR ss:[ecx+0x42],0x32
  4189be:	ror    ebp,cl
  4189c0:	and    al,0x52
  4189c2:	mov    dh,0xe2
  4189c4:	outs   dx,BYTE PTR ds:[esi]
  4189c5:	cmp    dl,ah
  4189c7:	fs repnz scas eax,DWORD PTR es:[edi]
  4189ca:	bound  edx,QWORD PTR [edx+0x5cb34e67]
  4189d0:	lods   al,BYTE PTR ds:[esi]
  4189d1:	xlat   BYTE PTR ds:[ebx]
  4189d2:	lods   al,BYTE PTR ds:[esi]
  4189d3:	mov    cl,0xb4
  4189d5:	addr16 mov edi,0x3ce94bdf
  4189db:	jmp    0x418969
  4189dd:	leave  
  4189de:	dec    ebp
  4189df:	out    0x1c,eax
  4189e1:	dec    esi
  4189e2:	push   edi
  4189e3:	loopne 0x418a4d
  4189e5:	mov    ebp,0x5d32142a
  4189ea:	pop    ebp
  4189eb:	mov    ds,WORD PTR [ebx-0x48d928b2]
  4189f1:	outs   dx,DWORD PTR ds:[esi]
  4189f2:	push   cs
  4189f3:	adc    DWORD PTR [ebx+0x38],0xf389c7a3
  4189fa:	pop    ebp
  4189fb:	(bad)  
  4189fc:	(bad)  
  4189fd:	mov    edi,0xe367bb21
  418a02:	sbb    esp,DWORD PTR [ebx+0x6a]
  418a05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a06:	in     al,0xc6
  418a08:	xchg   esi,eax
  418a09:	push   es
  418a0a:	push   es
  418a0b:	mov    edx,0x756b509f
  418a10:	(bad)  
  418a11:	sbb    edx,ecx
  418a13:	fwait
  418a14:	jecxz  0x418a6e
  418a16:	and    al,0x28
  418a18:	sub    eax,DWORD PTR [bp+di-0x1a]
  418a1c:	mov    dl,0xa5
  418a1e:	imul   DWORD PTR [edx-0x11]
  418a21:	xchg   ecx,eax
  418a22:	mov    dl,0xca
  418a24:	hlt    
  418a25:	out    0xbe,eax
  418a27:	stos   DWORD PTR es:[edi],eax
  418a28:	pop    esi
  418a29:	adc    DWORD PTR [eax],esp
  418a2b:	mov    edx,0x4937b02b
  418a30:	cli    
  418a31:	add    DWORD PTR [esi-0x719bbeb5],esi
  418a37:	mov    ?,WORD PTR [esi+0x26]
  418a3a:	mov    edi,0xb62109b5
  418a3f:	call   0x5b9d:0xc1a9f5d0
  418a46:	pop    edx
  418a47:	repz pusha 
  418a49:	repnz adc ebx,esp
  418a4c:	or     bh,BYTE PTR [edx]
  418a4e:	int    0xf8
  418a50:	rcl    BYTE PTR ds:0x2a3063e8,1
  418a56:	push   0xffffff8d
  418a58:	and    DWORD PTR [ebx+eiz*8],0xd4a7540c
  418a5f:	xchg   ebx,eax
  418a60:	dec    esi
  418a61:	xchg   DWORD PTR [eax+0x5dca1330],ebx
  418a67:	hlt    
  418a68:	int    0x15
  418a6a:	enter  0x1957,0x65
  418a6e:	std    
  418a6f:	data16 ins BYTE PTR es:[edi],dx
  418a71:	mov    ds:0xc128a9e4,eax
  418a76:	(bad)  
  418a77:	xchg   ebp,eax
  418a78:	jecxz  0x418a47
  418a7a:	fidiv  WORD PTR [esi+eax*1+0x5bb9c875]
  418a81:	rep outs dx,BYTE PTR ds:[esi]
  418a83:	xor    ch,bl
  418a85:	enter  0x9bab,0xf
  418a89:	inc    ebp
  418a8a:	out    dx,al
  418a8b:	cld    
  418a8c:	outs   dx,DWORD PTR ds:[esi]
  418a8d:	aaa    
  418a8e:	out    dx,eax
  418a8f:	scas   eax,DWORD PTR es:[edi]
  418a90:	and    BYTE PTR [ebx-0x11700cd4],bh
  418a96:	leave  
  418a97:	iret   
  418a98:	sub    eax,0x5837261b
  418a9d:	dec    esi
  418a9e:	je     0x418a99
  418aa0:	mov    edx,0x8ab6ac44
  418aa5:	mov    eax,0x12798f70
  418aaa:	sub    eax,0xb34d0459
  418aaf:	jb     0x418add
  418ab1:	add    BYTE PTR [ebp+0x7f],bl
  418ab4:	jp     0x418a36
  418ab6:	fild   DWORD PTR [edx]
  418ab8:	(bad)  
  418ab9:	fild   WORD PTR [ecx]
  418abb:	cmp    BYTE PTR [ecx+0xa],ah
  418abe:	jmp    0xd1bcb322
  418ac3:	xor    ebp,0x9def96b3
  418ac9:	dec    edi
  418aca:	mov    ecx,0xa0ee7b7f
  418acf:	mov    ebp,DWORD PTR [ecx+edi*1]
  418ad2:	dec    ebx
  418ad3:	popa   
  418ad4:	cmp    ebp,DWORD PTR [ecx]
  418ad6:	ja     0x418aca
  418ad8:	outs   dx,DWORD PTR ds:[esi]
  418ad9:	inc    eax
  418ada:	mov    ah,0xa7
  418adc:	hlt    
  418add:	test   DWORD PTR [edx+0x4],eax
  418ae0:	dec    BYTE PTR [edi+0x117d495c]
  418ae6:	stc    
  418ae7:	cmp    bh,BYTE PTR [ebx-0xf0ec58f]
  418aed:	jl     0x418b21
  418aef:	(bad)  
  418af0:	jmp    0xda57:0x32d4a67f
  418af7:	sub    al,0x41
  418afa:	dec    edi
  418afb:	cld    
  418afc:	fwait
  418afd:	push   ebx
  418afe:	outs   dx,BYTE PTR ds:[esi]
  418aff:	and    dl,bl
  418b01:	leave  
  418b02:	cmc    
  418b03:	lods   eax,DWORD PTR ds:[esi]
  418b04:	fiadd  DWORD PTR [ebx+eiz*2-0x249c1449]
  418b0b:	mov    ebp,0x70cb3e01
  418b10:	xchg   edi,eax
  418b11:	fist   WORD PTR [ebx+0x4c0632ab]
  418b17:	and    dl,BYTE PTR ds:0xc90ef844
  418b1d:	ds adc edi,ecx
  418b20:	loope  0x418b30
  418b22:	cmp    DWORD PTR [edx+ebp*8],edx
  418b25:	das    
  418b26:	cmp    cl,bh
  418b28:	vcvtsi2sd xmm4,xmm6,esp
  418b2c:	pop    ebp
  418b2d:	xor    edx,esi
  418b2f:	xchg   esp,eax
  418b30:	imul   ecx,DWORD PTR [eax-0x2e],0xa34816b3
  418b37:	loopne 0x418ad6
  418b39:	fisubr DWORD PTR [edi+esi*8]
  418b3c:	sub    edx,esi
  418b3e:	outs   dx,DWORD PTR ds:[esi]
  418b3f:	stc    
  418b40:	rol    DWORD PTR [esi],0xc9
  418b43:	fsubr  QWORD PTR [edx+0x28]
  418b46:	push   gs
  418b48:	(bad)  
  418b49:	pop    edi
  418b4a:	xchg   edi,eax
  418b4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b4c:	(bad)  
  418b4d:	pop    eax
  418b4e:	mov    esi,0x23ae5f4c
  418b53:	mov    eax,ds:0x4a512e8f
  418b58:	add    al,0xd4
  418b5a:	xor    DWORD PTR [edx-0x14],edx
  418b5d:	add    DWORD PTR [esi+0x1d],esp
  418b60:	xor    dh,BYTE PTR [ebp-0x66]
  418b63:	xor    eax,0xa22baff5
  418b68:	cmp    ebp,DWORD PTR [ebx+0x300f7021]
  418b6e:	sbb    BYTE PTR [ecx-0xb76db41],dl
  418b74:	lods   al,BYTE PTR ds:[esi]
  418b75:	sub    eax,0x459914bc
  418b7a:	and    bl,BYTE PTR [edi+0x5c]
  418b7d:	inc    eax
  418b7e:	loopne 0x418b1b
  418b80:	mov    cl,0x15
  418b82:	pushf  
  418b83:	into   
  418b84:	pusha  
  418b85:	popa   
  418b86:	sub    al,0x64
  418b88:	mov    al,0x92
  418b8a:	scas   eax,DWORD PTR es:[edi]
  418b8b:	icebp  
  418b8c:	repnz sbb al,0x50
  418b8f:	or     BYTE PTR [edx+0xdd42f77],ah
  418b95:	call   0x5289:0xd380a75e
  418b9c:	xchg   DWORD PTR [eax+0x21a7d024],ecx
  418ba2:	aas    
  418ba3:	pusha  
  418ba4:	mov    ch,0xfc
  418ba6:	mov    ch,0xa4
  418ba8:	or     dh,bh
  418baa:	shl    ch,cl
  418bac:	dec    ebp
  418bad:	loop   0x418b53
  418baf:	sbb    bh,BYTE PTR [ecx-0x2924928a]
  418bb5:	sbb    al,0x5c
  418bb8:	xchg   dh,al
  418bba:	lods   al,BYTE PTR ds:[esi]
  418bbb:	pop    ds
  418bbc:	(bad)  
  418bbd:	data16 in al,0xb
  418bc0:	icebp  
  418bc1:	jle    0x418b80
  418bc3:	mov    edi,0x6d115814
  418bc8:	mov    es,WORD PTR [eax]
  418bca:	pushf  
  418bcb:	retf   0xbe5a
  418bce:	cmp    ch,BYTE PTR [edi-0x4be7e47d]
  418bd4:	aad    0xf2
  418bd6:	call   0x6193:0x211dc09
  418bdd:	pushf  
  418bde:	cdq    
  418bdf:	outs   dx,DWORD PTR ds:[esi]
  418be0:	dec    eax
  418be1:	imul   edx,DWORD PTR cs:[ebx+0x6f7c795],0x49de9bd2
  418bec:	and    DWORD PTR [esi],ecx
  418bee:	data16 mov dh,0x18
  418bf1:	bound  edi,QWORD PTR [ecx+0x19]
  418bf4:	shr    DWORD PTR [esi-0xf],0xae
  418bf8:	ret    
  418bf9:	cmp    bh,ch
  418bfb:	stos   DWORD PTR es:[edi],eax
  418bfc:	ret    
  418bfd:	outs   dx,BYTE PTR ds:[esi]
  418bfe:	dec    ebp
  418bff:	mov    dh,0x35
  418c01:	or     BYTE PTR [ebp-0x64],dl
  418c04:	add    DWORD PTR [edi+0x5768a98d],0x7f
  418c0b:	test   BYTE PTR [ebp+edi*2-0x3a],bl
  418c0f:	jmp    0x418c22
  418c11:	pop    ds
  418c12:	inc    esi
  418c13:	sbb    DWORD PTR ds:0x4480f56a,ebp
  418c19:	push   esi
  418c1b:	jae    0x418c74
  418c1d:	pop    edx
  418c1e:	xchg   esi,eax
  418c1f:	ins    DWORD PTR es:[edi],dx
  418c20:	lods   eax,DWORD PTR ds:[esi]
  418c21:	xchg   esp,eax
  418c22:	rcr    BYTE PTR [ecx],cl
  418c24:	inc    eax
  418c25:	fnstcw WORD PTR [esi+0x51c41c2d]
  418c2b:	pop    es
  418c2c:	ds push edx
  418c2e:	ins    DWORD PTR es:[edi],dx
  418c2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c30:	cmp    DWORD PTR [edx-0x10e2834d],ecx
  418c36:	pop    ebx
  418c37:	aas    
  418c38:	sbb    al,BYTE PTR [esi+0x6f]
  418c3b:	sbb    eax,esi
  418c3d:	xchg   ecx,eax
  418c3e:	pop    ds
  418c3f:	aad    0x60
  418c41:	(bad)  
  418c42:	js     0x418cae
  418c44:	sbb    al,dl
  418c46:	mov    gs,WORD PTR [ecx+0x7b]
  418c49:	in     al,0x4a
  418c4b:	push   ebp
  418c4c:	popf   
  418c4d:	les    edi,FWORD PTR [ebx]
  418c4f:	arpl   WORD PTR [eax+0x5d],dx
  418c52:	(bad)  
  418c53:	fmul   QWORD PTR [ecx-0x29]
  418c56:	pop    ds
  418c57:	sbb    eax,0xd56029cf
  418c5c:	jmp    0x418c2e
  418c5e:	sbb    edi,DWORD PTR [edx-0x45]
  418c61:	outs   dx,DWORD PTR ds:[esi]
  418c62:	or     dh,BYTE PTR [bx+di+0x7e63]
  418c67:	push   ebp
  418c68:	cli    
  418c69:	aaa    
  418c6a:	xor    edi,edi
  418c6c:	sub    al,0x9d
  418c6e:	xchg   edx,eax
  418c6f:	and    al,0x0
  418c71:	xor    al,0xb2
  418c73:	ja     0x418c6a
  418c75:	cmp    esp,DWORD PTR [ebp-0x73]
  418c78:	clc    
  418c79:	xchg   ebx,eax
  418c7a:	xchg   edx,eax
  418c7b:	push   ecx
  418c7c:	jae    0x418c34
  418c7e:	dec    ecx
  418c7f:	fsubr  QWORD PTR [edx]
  418c81:	mov    bl,0xa2
  418c83:	(bad)  
  418c84:	jmp    0x418c72
  418c86:	pop    ebp
  418c87:	jb     0x418c0c
  418c89:	push   ecx
  418c8a:	je     0x418cf9
  418c8c:	mov    eax,0x720508c6
  418c91:	cwde   
  418c92:	sub    ecx,DWORD PTR [edx+0x38ff3458]
  418c98:	or     eax,0xff2d25e
  418c9d:	arpl   ax,ax
  418c9f:	sti    
  418ca0:	popf   
  418ca1:	jg     0x418c35
  418ca3:	test   BYTE PTR [edx+eax*2-0x41d3903d],dh
  418caa:	imul   esp,DWORD PTR [ebx-0x53],0x1f973eba
  418cb1:	push   eax
  418cb2:	push   ecx
  418cb3:	pop    edx
  418cb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cb5:	mov    DWORD PTR [ebp-0x14d1d85],eax
  418cbb:	push   0x1f
  418cbd:	add    DWORD PTR [edi],0x650bb08a
  418cc3:	add    cl,BYTE PTR [esi]
  418cc5:	xchg   edx,eax
  418cc6:	dec    esp
  418cc7:	inc    esi
  418cc8:	shl    DWORD PTR [ebx],0x53
  418ccb:	dec    esi
  418ccc:	stc    
  418ccd:	loopne 0x418cc6
  418ccf:	aad    0x9f
  418cd1:	push   ebp
  418cd2:	arpl   WORD PTR [eax],bp
  418cd4:	sbb    BYTE PTR [ecx],ah
  418cd6:	in     eax,dx
  418cd7:	(bad)  [eax-0x64]
  418cda:	in     eax,dx
  418cdb:	ficom  WORD PTR [ecx]
  418cdd:	(bad)  
  418cde:	loopne 0x418d35
  418ce0:	in     eax,dx
  418ce1:	mov    ecx,0xf3195d24
  418ce6:	pop    ecx
  418ce7:	sub    ch,BYTE PTR [eax-0x54e2f8d4]
  418ced:	addr16 mov ebx,0xa4caf7c2
  418cf3:	dec    DWORD PTR [edi]
  418cf5:	loopne 0x418d68
  418cf7:	sub    eax,0x4663b85b
  418cfc:	enter  0xbecc,0x4a
  418d00:	cmp    bl,BYTE PTR [ecx]
  418d02:	inc    edi
  418d03:	dec    ebx
  418d04:	inc    ecx
  418d05:	ret    0xfe38
  418d08:	cmp    al,0x85
  418d0a:	xchg   edx,eax
  418d0b:	xor    al,0xde
  418d0d:	dec    esp
  418d0e:	daa    
  418d0f:	retf   
  418d10:	not    BYTE PTR [ebp-0x125fb2b9]
  418d16:	cmp    BYTE PTR [edi+0x22754688],dl
  418d1c:	push   es
  418d1d:	fs (bad) 
  418d1f:	js     0x418d58
  418d21:	add    eax,0x1ad07758
  418d26:	xor    eax,0xe3e35f93
  418d2b:	push   cs
  418d2c:	fcmovnb st,st(4)
  418d2e:	pop    esi
  418d2f:	shr    BYTE PTR [ecx],1
  418d31:	xor    BYTE PTR [edi+0x51],bl
  418d34:	ret    
  418d35:	add    eax,0xba2e9171
  418d3a:	lock test eax,0x1507ace2
  418d40:	mov    bl,0x42
  418d42:	loope  0x418ccf
  418d44:	inc    ebp
  418d45:	sbb    BYTE PTR [ebx],ch
  418d47:	inc    esi
  418d48:	cdq    
  418d49:	mov    WORD PTR [edi+0x78],cs
  418d4c:	xchg   DWORD PTR [edi],esi
  418d4e:	inc    ebx
  418d4f:	stos   DWORD PTR es:[edi],eax
  418d50:	out    0x76,eax
  418d52:	stc    
  418d53:	jecxz  0x418dbd
  418d55:	pop    esi
  418d56:	test   eax,0xc91c547f
  418d5b:	(bad)  
  418d5c:	icebp  
  418d5d:	(bad)  
  418d5e:	shl    BYTE PTR [esi-0x3ba9c835],1
  418d64:	cld    
  418d65:	xrelease xchg DWORD PTR [eax+0x6f8748ab],esp
  418d6c:	adc    bh,al
  418d6e:	aaa    
  418d6f:	add    BYTE PTR [ecx+0x35],dl
  418d72:	fld    QWORD PTR [ecx]
  418d74:	fisttp QWORD PTR [ecx+0x34f5a422]
  418d7a:	pusha  
  418d7b:	repz shl DWORD PTR [eax+eax*2+0xe],0xdb
  418d81:	cmc    
  418d82:	lahf   
  418d83:	(bad)  
  418d85:	xchg   edx,eax
  418d86:	call   DWORD PTR [edi]
  418d88:	rol    esi,1
  418d8a:	dec    eax
  418d8b:	leave  
  418d8c:	sbb    BYTE PTR [edi],0x70
  418d8f:	fadd   QWORD PTR ds:0x96192991
  418d95:	mov    WORD PTR [edi-0x2],?
  418d98:	jl     0x418d6b
  418d9a:	(bad)  
  418d9b:	cmc    
  418d9c:	and    eax,0x913d4286
  418da1:	imul   edi,DWORD PTR [edx-0x76de780e],0xffffffac
  418da8:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  418daa:	inc    edi
  418dab:	in     al,0x55
  418dad:	xchg   ebx,eax
  418daf:	dec    ebp
  418db0:	inc    esp
  418db1:	mov    cl,0x8f
  418db3:	ins    BYTE PTR es:[edi],dx
  418db4:	xor    bh,ah
  418db6:	sub    DWORD PTR [edx-0x39],0x152ecca0
  418dbd:	and    esi,edx
  418dbf:	pop    es
  418dc0:	in     al,0x3c
  418dc2:	fs in  al,dx
  418dc4:	mov    dl,0x2f
  418dc6:	push   eax
  418dc7:	jne    0x418e46
  418dc9:	xchg   BYTE PTR [esi+0x26],bh
  418dcc:	adc    DWORD PTR [ebx+0x32],edi
  418dcf:	in     eax,0x75
  418dd1:	pop    ebx
  418dd2:	lea    edi,[ebx-0x4c297a22]
  418dd8:	lea    edx,[esi]
  418dda:	stc    
  418ddb:	sub    eax,0xdc598682
  418de0:	cmc    
  418de1:	mov    eax,0x6ec29d59
  418de6:	cld    
  418de7:	std    
  418de8:	jb     0x418d77
  418dea:	push   esi
  418deb:	inc    ebp
  418dec:	mov    edx,0xb32febae
  418df1:	pop    ebp
  418df2:	mov    bl,0xcb
  418df4:	imul   eax,DWORD PTR [ebp+0x7c],0xffffffb4
  418df8:	inc    BYTE PTR [ecx+0x36]
  418dfb:	call   0x6872854
  418e00:	(bad)  
  418e01:	sub    BYTE PTR [ecx+0x66],bl
  418e04:	iret   
  418e05:	fmulp  st(2),st
  418e07:	push   ebx
  418e08:	mov    BYTE PTR [esp+edx*2-0x7cdfad6e],cl
  418e0f:	stos   BYTE PTR es:[edi],al
  418e10:	dec    ebp
  418e11:	cwde   
  418e12:	dec    esp
  418e13:	popf   
  418e14:	mov    ds:0x4d01cc34,eax
  418e19:	addr16 push esi
  418e1b:	xchg   BYTE PTR [edi],ah
  418e1d:	out    0x6b,al
  418e1f:	cdq    
  418e20:	icebp  
  418e21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e22:	push   ss
  418e23:	mov    cl,BYTE PTR [ebx]
  418e25:	ss in  al,dx
  418e27:	repnz pop ebp
  418e29:	sub    dh,BYTE PTR [eax+0x515fcf04]
  418e2f:	ficomp WORD PTR [esi+edx*2+0x39]
  418e33:	int3   
  418e34:	xor    ch,BYTE PTR [ebx+0x23]
  418e37:	test   esp,edx
  418e39:	mov    ?,WORD PTR [eax-0x3a]
  418e3c:	mov    ch,0x53
  418e3e:	xchg   esi,eax
  418e3f:	mov    ecx,0xead08369
  418e44:	add    BYTE PTR ds:0x72ecb244,cl
  418e4a:	jne    0x414651
  418e50:	mov    ecx,DWORD PTR [ebp-0x8]
  418e53:	xor    ecx,eax
  418e55:	mov    eax,DWORD PTR [ebp+0x10]
  418e58:	add    ecx,esi
  418e5a:	mov    DWORD PTR [eax],ecx
  418e5c:	pop    edi
  418e5d:	pop    esi
  418e5e:	pop    ebx
  418e5f:	leave  
  418e60:	ret    0xc
  418e63:	add    BYTE PTR [eax-0x5ffbffbe],ah
  418e69:	inc    edx
  418e6a:	add    BYTE PTR [eax],cl
  418e6c:	mov    al,ds:0xa00c0042
  418e71:	inc    edx
  418e72:	add    BYTE PTR [eax],dl
  418e74:	mov    al,ds:0xa0140042
  418e79:	inc    edx
  418e7a:	add    BYTE PTR [eax],bl
  418e7c:	mov    al,ds:0xa01c0042
  418e81:	inc    edx
  418e82:	add    BYTE PTR [eax],al
  418e84:	rol    BYTE PTR [edx+0x0],1
  418e87:	add    al,0xd0
  418e89:	inc    edx
  418e8a:	add    BYTE PTR [eax],cl
  418e8c:	rol    BYTE PTR [edx+0x0],1
  418e8f:	or     al,0xd0
  418e91:	inc    edx
  418e92:	add    BYTE PTR [eax],dl
  418e94:	rol    BYTE PTR [edx+0x0],1
  418e97:	adc    al,0xd0
  418e99:	inc    edx
  418e9a:	add    BYTE PTR [eax],bl
  418e9c:	rol    BYTE PTR [edx+0x0],1
  418e9f:	sbb    al,0xd0
  418ea1:	inc    edx
	...
  418eb2:	add    BYTE PTR [eax],al
  418eb4:	sub    al,0x84
  418eb6:	pop    esi
  418eb7:	dec    ebp
  418eb8:	add    BYTE PTR [eax],al
  418eba:	add    BYTE PTR [eax],al
  418ebc:	add    al,BYTE PTR [eax]
  418ebe:	add    BYTE PTR [eax],al
  418ec0:	cmp    eax,0xb0000000
  418ec5:	pop    DWORD PTR [ecx]
  418ec7:	add    BYTE PTR [eax+0x183],dh
  418ecd:	add    BYTE PTR [eax],al
  418ecf:	add    BYTE PTR [eax],al
  418ed1:	add    BYTE PTR [eax],al
  418ed3:	add    BYTE PTR [esp+eax*4],ch
  418ed6:	pop    esi
  418ed7:	dec    ebp
  418ed8:	add    BYTE PTR [eax],al
  418eda:	add    BYTE PTR [eax],al
  418edc:	add    cl,BYTE PTR [edi+0x10001]
  418ee2:	add    BYTE PTR [eax],al
  418ee4:	add    DWORD PTR [eax],eax
  418ee6:	add    BYTE PTR [eax],al
  418ee8:	add    DWORD PTR [eax],eax
  418eea:	add    BYTE PTR [eax],al
  418eec:	clc    
  418eed:	mov    es,WORD PTR [ecx]
  418eef:	add    ah,bh
  418ef1:	mov    es,WORD PTR [ecx]
  418ef3:	add    BYTE PTR [eax],al
  418ef5:	pop    DWORD PTR [ecx]
  418ef7:	add    bl,al
  418ef9:	sub    eax,DWORD PTR [eax]
  418efb:	add    BYTE PTR [esi],cl
  418efd:	pop    DWORD PTR [ecx]
  418eff:	add    BYTE PTR [eax],al
  418f01:	add    BYTE PTR [ecx+edi*2+0x6e],al
  418f05:	popa   
  418f06:	ins    DWORD PTR es:[edi],dx
  418f07:	imul   ebp,DWORD PTR [ecx+0x43],0x747361
  418f0e:	aas    
  418f0f:	inc    edi
  418f10:	gs je  0x418f68
  418f13:	jae    0x418f7a
  418f15:	jb     0x418f66
  418f17:	bound  ebp,QWORD PTR [edx+0x65]
  418f1a:	arpl   WORD PTR [ebx+edx*2+0x65],si
  418f1e:	arpl   WORD PTR [ebp+0x72],si
  418f21:	imul   esi,DWORD PTR [ecx+edi*2+0x47],0x73557465
  418f29:	gs jb  0x418f7b
  418f2c:	bound  ebp,QWORD PTR [edx+0x65]
  418f2f:	arpl   WORD PTR [ebx+edx*2+0x65],si
  418f33:	arpl   WORD PTR [ebp+0x0],si
  418f36:	nop
  418f37:	inc    edx
  418f38:	add    BYTE PTR [eax+edx*4],al
  418f3b:	inc    edx
  418f3c:	add    BYTE PTR [eax],cl
  418f3e:	nop
  418f3f:	inc    edx
  418f40:	add    BYTE PTR [eax+edx*4],cl
  418f43:	inc    edx
  418f44:	add    BYTE PTR [eax],dl
  418f46:	nop
  418f47:	inc    edx
  418f48:	add    BYTE PTR [eax+edx*4],dl
  418f4b:	inc    edx
  418f4c:	add    BYTE PTR [eax],bl
  418f4e:	nop
  418f4f:	inc    edx
  418f50:	add    BYTE PTR [eax+edx*4],bl
  418f53:	inc    edx
  418f54:	add    BYTE PTR [eax],ah
  418f56:	nop
  418f57:	inc    edx
  418f58:	add    BYTE PTR [eax+edx*4],ah
  418f5b:	inc    edx
  418f5c:	add    BYTE PTR [eax],ch
  418f5e:	nop
  418f5f:	inc    edx
  418f60:	add    BYTE PTR [eax],al
  418f62:	mov    al,0x42
  418f64:	add    BYTE PTR [eax+esi*4],al
  418f67:	inc    edx
  418f68:	add    BYTE PTR [eax],cl
  418f6a:	mov    al,0x42
  418f6c:	add    BYTE PTR [eax+esi*4],cl
  418f6f:	inc    edx
  418f70:	add    BYTE PTR [eax],dl
  418f72:	mov    al,0x42
  418f74:	add    BYTE PTR [eax+esi*4],dl
  418f77:	inc    edx
  418f78:	add    BYTE PTR [eax],bl
  418f7a:	mov    al,0x42
  418f7c:	add    BYTE PTR [eax+esi*4],bl
  418f7f:	inc    edx
  418f80:	add    BYTE PTR [eax],al
  418f82:	rol    BYTE PTR [edx+0x0],0x4
  418f86:	rol    BYTE PTR [edx+0x0],0x8
  418f8a:	rol    BYTE PTR [edx+0x0],0xc
  418f8e:	rol    BYTE PTR [edx+0x0],0x10
  418f92:	rol    BYTE PTR [edx+0x0],0x14
  418f96:	rol    BYTE PTR [edx+0x0],0x18
  418f9a:	rol    BYTE PTR [edx+0x0],0x1c
  418f9e:	rol    BYTE PTR [edx+0x0],0x0
	...
  418fae:	add    BYTE PTR [eax],al
  418fb0:	push   edx
  418fb1:	push   ebx
  418fb2:	inc    esp
  418fb3:	push   ebx
  418fb4:	div    DWORD PTR ds:0xcae21233
  418fba:	dec    eax
  418fbb:	inc    ecx
  418fbc:	adc    DWORD PTR [edx],0xc9deb6bb
  418fc2:	xor    esp,DWORD PTR [esi+0x1]
  418fc8:	inc    ebx
  418fc9:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  418fcd:	jb     0x419041
  418fcf:	outs   dx,BYTE PTR gs:[esi]
  418fd1:	je     0x419017
  418fd3:	popa   
  418fd4:	je     0x419037
  418fd6:	pop    esp
  418fd7:	dec    ebp
  418fd8:	outs   dx,DWORD PTR ds:[esi]
  418fd9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  418fe1:	ins    BYTE PTR es:[edi],dx
  418fe2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  418fe9:	dec    esi
  418fea:	gs ja  0x418fed
  418fed:	mov    edx,DWORD PTR [ebp-0x14]
  418ff0:	sub    esp,0xe4
  418ff6:	push   ebx
  418ff7:	mov    eax,ebx
  418ff9:	xchg   ecx,eax
  418ffa:	mov    eax,DWORD PTR [ebp+0x8]
  418ffd:	cmp    eax,0xf89c85b9
  419002:	jne    0x419394
  419008:	mov    eax,DWORD PTR [ebp+0xc]
  41900b:	cmp    eax,0xf89c85b8
  419010:	jne    0x419394
  419016:	mov    eax,DWORD PTR [ebp+0x24]
  419019:	mov    DWORD PTR [ebp-0x4],eax
  41901c:	mov    BYTE PTR [ebp-0x18],0x3
  419020:	mov    BYTE PTR [ebp-0x17],0x1e
  419024:	mov    BYTE PTR [ebp-0x16],0x1
  419028:	mov    BYTE PTR [ebp-0x15],0x4f
  41902c:	mov    BYTE PTR [ebp-0x14],0x48
  419030:	mov    BYTE PTR [ebp-0x13],0x7a
  419034:	mov    BYTE PTR [ebp-0x20],0xd
  419038:	mov    BYTE PTR [ebp-0x1f],0xf
  41903c:	mov    BYTE PTR [ebp-0x1e],0x1d
  419040:	mov    BYTE PTR [ebp-0x1d],0x8
  419044:	mov    BYTE PTR [ebp-0x1c],0x4f
  419048:	mov    BYTE PTR [ebp-0x1b],0x48
  41904c:	mov    BYTE PTR [ebp-0x1a],0x7a
  419050:	mov    BYTE PTR [ebp-0x28],0xf
  419054:	mov    BYTE PTR [ebp-0x27],0x2
  419058:	push   esi
  419059:	mov    BYTE PTR [ebp-0x26],0x6
  41905d:	mov    BYTE PTR [ebp-0x25],0xf3
  419061:	push   edi
  419062:	mov    BYTE PTR [ebp-0x24],0x19
  419066:	mov    BYTE PTR [ebp-0x23],0xa
  41906a:	push   0x73
  41906c:	mov    BYTE PTR [ebp-0x22],0x1
  419070:	xor    edi,edi
  419072:	mov    BYTE PTR [ebp-0x21],0x7a
  419076:	xor    esi,esi
  419078:	pop    edx
  419079:	mov    eax,0xf7
  41907e:	lea    ecx,[ebp+esi*1-0x18]
  419082:	movzx  ebx,BYTE PTR [ecx]
  419085:	xor    ebx,edx
  419087:	add    ebx,eax
  419089:	inc    esi
  41908a:	mov    BYTE PTR [ecx],bl
  41908c:	cmp    esi,0x6
  41908f:	jb     0x41907e
  419091:	xor    esi,esi
  419093:	lea    ecx,[ebp+esi*1-0x20]
  419097:	movzx  ebx,BYTE PTR [ecx]
  41909a:	xor    ebx,edx
  41909c:	add    ebx,eax
  41909e:	inc    esi
  41909f:	mov    BYTE PTR [ecx],bl
  4190a1:	cmp    esi,0x7
  4190a4:	jb     0x419093
  4190a6:	xor    esi,esi
  4190a8:	lea    ecx,[ebp+esi*1-0x28]
  4190ac:	movzx  ebx,BYTE PTR [ecx]
  4190af:	xor    ebx,edx
  4190b1:	add    ebx,eax
  4190b3:	push   0x8
  4190b5:	mov    BYTE PTR [ecx],bl
  4190b7:	inc    esi
  4190b8:	pop    ecx
  4190b9:	cmp    esi,ecx
  4190bb:	jb     0x4190a8
  4190bd:	lea    eax,[ebp-0x2c]
  4190c0:	mov    DWORD PTR [ebp-0x8],eax
  4190c3:	mov    esi,DWORD PTR [ebp-0x8]
  4190c6:	mov    eax,0x7113fcef
  4190cb:	mov    DWORD PTR [esi],eax
  4190cd:	mov    esi,DWORD PTR [ebp-0x2c]
  4190d0:	cmp    esi,eax
  4190d2:	jne    0x4190e2
  4190d4:	mov    DWORD PTR [ebp-0x8],0xf89c85b9
  4190db:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  4190e2:	mov    eax,DWORD PTR [ebp-0x4]
  4190e5:	mov    eax,DWORD PTR [eax+0x18c]
  4190eb:	cmp    DWORD PTR [eax],edi
  4190ed:	jne    0x41933d
  4190f3:	mov    eax,DWORD PTR [ebp-0x4]
  4190f6:	mov    eax,DWORD PTR [eax+0x17c]
  4190fc:	mov    DWORD PTR [eax],edi
  4190fe:	mov    eax,DWORD PTR [ebp-0x4]
  419101:	mov    eax,DWORD PTR [eax+0x180]
  419107:	mov    DWORD PTR [eax],edi
  419109:	mov    edi,0x4e3c
  41910e:	mov    eax,0x4f8f
  419113:	mov    WORD PTR [ebp-0x78],ax
  419117:	mov    eax,edi
  419119:	mov    WORD PTR [ebp-0x76],ax
  41911d:	add    eax,0x43
  419120:	mov    WORD PTR [ebp-0x74],ax
  419124:	lea    eax,[edi+0x3]
  419127:	mov    WORD PTR [ebp-0x72],ax
  41912b:	mov    eax,0x4fac
  419130:	mov    WORD PTR [ebp-0x70],ax
  419134:	lea    eax,[edi-0x4]
  419137:	mov    WORD PTR [ebp-0x6e],ax
  41913b:	add    eax,0x45
  41913e:	mov    WORD PTR [ebp-0x6c],ax
  419142:	lea    eax,[edi-0x2]
  419145:	mov    WORD PTR [ebp-0x6a],ax
  419149:	mov    eax,edi
  41914b:	mov    WORD PTR [ebp-0x68],ax
  41914f:	dec    eax
  419150:	mov    WORD PTR [ebp-0x66],ax
  419154:	mov    eax,0x99ff
  419159:	mov    WORD PTR [ebp-0x64],ax
  41915d:	mov    eax,0x8288
  419162:	mov    WORD PTR [ebp-0x62],ax
  419166:	mov    eax,0xd78d
  41916b:	mov    WORD PTR [ebp-0x60],ax
  41916f:	add    eax,0x1c
  419172:	mov    WORD PTR [ebp-0x5e],ax
  419176:	mov    eax,0x27aa
  41917b:	mov    WORD PTR [ebp-0x5c],ax
  41917f:	mov    eax,0x47aa
  419184:	mov    WORD PTR [ebp-0x5a],ax
  419188:	lea    eax,[edi-0x3]
  41918b:	mov    WORD PTR [ebp-0x58],ax
  41918f:	mov    DWORD PTR [ebp-0x10],0xf306020f
  419196:	mov    DWORD PTR [ebp-0xc],0x7a010a19
  41919d:	lea    eax,[ebp-0x10]
  4191a0:	mov    bl,BYTE PTR [eax]
  4191a2:	xor    bl,dl
  4191a4:	sub    bl,0x9
  4191a7:	mov    BYTE PTR [eax],bl
  4191a9:	inc    eax
  4191aa:	dec    ecx
  4191ab:	jne    0x4191a0
  4191ad:	lea    eax,[ebp-0x10]
  4191b0:	mov    DWORD PTR [ebp-0xb8],eax
  4191b6:	lea    eax,[ebp-0xbc]
  4191bc:	push   eax
  4191bd:	mov    eax,DWORD PTR [ebp+0xc]
  4191c0:	mov    ebx,0x7510899
  4191c5:	xor    eax,ebx
  4191c7:	mov    esi,0x3272e0
  4191cc:	add    eax,esi
  4191ce:	push   eax
  4191cf:	mov    eax,DWORD PTR [ebp-0x4]
  4191d2:	add    eax,0x66
  4191d5:	push   eax
  4191d6:	mov    eax,DWORD PTR [ebp-0x4]
  4191d9:	mov    eax,DWORD PTR [eax+0x198]
  4191df:	mov    DWORD PTR [ebp-0xbc],0x1
  4191e9:	push   DWORD PTR [eax]
  4191eb:	mov    eax,DWORD PTR [ebp+0x10]
  4191ee:	call   eax
  4191f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4191f3:	xor    ecx,ebx
  4191f5:	add    ecx,esi
  4191f7:	mov    DWORD PTR [ebp-0x8],eax
  4191fa:	cmp    eax,ecx
  4191fc:	jne    0x419217
  4191fe:	mov    eax,ds:0x33730bee
  419203:	or     eax,0x22150bef
  419208:	mov    ds:0x33730bee,eax
  41920d:	add    eax,0x3372e90f
  419212:	mov    ds:0x33730bee,eax
  419217:	mov    ecx,0x4f84
  41921c:	mov    eax,ecx
  41921e:	mov    WORD PTR [ebp-0x40],ax
  419222:	mov    eax,0x4e71
  419227:	mov    edx,eax
  419229:	mov    WORD PTR [ebp-0x3e],dx
  41922d:	lea    edx,[ecx+0x15]
  419230:	mov    WORD PTR [ebp-0x3c],dx
  419234:	add    edx,0xfffffff8
  419237:	mov    WORD PTR [ebp-0x3a],dx
  41923b:	lea    edx,[ecx+0xf]
  41923e:	mov    WORD PTR [ebp-0x38],dx
  419242:	add    edx,0x1b
  419245:	mov    WORD PTR [ebp-0x36],dx
  419249:	lea    edx,[ecx+0x21]
  41924c:	mov    WORD PTR [ebp-0x34],dx
  419250:	mov    WORD PTR [ebp-0x32],cx
  419254:	mov    ecx,edi
  419256:	mov    WORD PTR [ebp-0x30],cx
  41925a:	lea    ecx,[edx-0x1]
  41925d:	mov    edx,ecx
  41925f:	mov    WORD PTR [ebp-0x54],dx
  419263:	mov    edx,eax
  419265:	mov    WORD PTR [ebp-0x52],dx
  419269:	add    edx,0x8
  41926c:	mov    WORD PTR [ebp-0x50],dx
  419270:	mov    WORD PTR [ebp-0x4e],ax
  419274:	add    eax,0x2
  419277:	mov    WORD PTR [ebp-0x4c],ax
  41927b:	lea    eax,[ecx-0x16]
  41927e:	mov    WORD PTR [ebp-0x4a],ax
  419282:	add    eax,0xfffffff7
  419285:	mov    WORD PTR [ebp-0x48],ax
  419289:	mov    WORD PTR [ebp-0x46],cx
  41928d:	mov    WORD PTR [ebp-0x44],di
  419291:	mov    eax,DWORD PTR [ebp+0x8]
  419294:	movzx  ecx,WORD PTR [ebp-0x54]
  419298:	xor    eax,ebx
  41929a:	add    eax,esi
  41929c:	xor    eax,ecx
  41929e:	mov    WORD PTR [ebp-0x54],ax
  4192a2:	mov    eax,DWORD PTR [ebp+0x8]
  4192a5:	movzx  ecx,WORD PTR [ebp-0x40]
  4192a9:	xor    eax,ebx
  4192ab:	add    eax,esi
  4192ad:	xor    eax,ecx
  4192af:	mov    WORD PTR [ebp-0x40],ax
  4192b3:	xor    eax,eax
  4192b5:	mov    WORD PTR [ebp-0xd0],ax
  4192bc:	mov    WORD PTR [ebp-0xe4],ax
  4192c3:	mov    edi,DWORD PTR [ebp+0x24]
  4192c6:	lea    eax,[ebp-0xd0]
  4192cc:	lea    edx,[ebp-0x54]
  4192cf:	mov    DWORD PTR [ebp-0xbc],0x2
  4192d9:	mov    DWORD PTR [ebp-0xb8],eax
  4192df:	call   0x41bcc3
  4192e4:	mov    DWORD PTR [ebp-0xb4],eax
  4192ea:	lea    eax,[ebp-0xbc]
  4192f0:	push   eax
  4192f1:	mov    eax,DWORD PTR [ebp+0xc]
  4192f4:	xor    eax,ebx
  4192f6:	add    eax,esi
  4192f8:	push   eax
  4192f9:	lea    eax,[ebp-0x78]
  4192fc:	push   eax
  4192fd:	push   DWORD PTR [ebp-0x8]
  419300:	mov    eax,DWORD PTR [ebp+0x10]
  419303:	call   eax
  419305:	mov    edi,DWORD PTR [ebp+0x24]
  419308:	lea    eax,[ebp-0xe4]
  41930e:	lea    edx,[ebp-0x40]
  419311:	mov    DWORD PTR [ebp-0xb8],eax
  419317:	call   0x41bcc3
  41931c:	mov    DWORD PTR [ebp-0xb4],eax
  419322:	lea    eax,[ebp-0xbc]
  419328:	push   eax
  419329:	mov    eax,DWORD PTR [ebp+0xc]
  41932c:	xor    eax,ebx
  41932e:	add    eax,esi
  419330:	push   eax
  419331:	lea    eax,[ebp-0x78]
  419334:	push   eax
  419335:	push   DWORD PTR [ebp-0x8]
  419338:	mov    eax,DWORD PTR [ebp+0x10]
  41933b:	call   eax
  41933d:	mov    eax,DWORD PTR [ebp+0x14]
  419340:	push   DWORD PTR [ebp-0x4]
  419343:	push   DWORD PTR [ebp+0x20]
  419346:	push   DWORD PTR [ebp+0x1c]
  419349:	push   DWORD PTR [ebp+0x18]
  41934c:	push   DWORD PTR [ebp+0x10]
  41934f:	push   DWORD PTR [ebp+0x8]
  419352:	push   DWORD PTR [ebp+0xc]
  419355:	call   0x41a4ec
  41935a:	add    DWORD PTR [ebp-0x4],eax
  41935d:	mov    eax,DWORD PTR [ebp-0x4]
  419360:	mov    eax,DWORD PTR [ebp-0x4]
  419363:	mov    edi,DWORD PTR [eax+0x190]
  419369:	mov    eax,DWORD PTR [ebp-0x4]
  41936c:	mov    eax,DWORD PTR [eax+0x18c]
  419372:	mov    esi,DWORD PTR [eax]
  419374:	lea    ecx,[ebp+0x4]
  419377:	mov    edx,DWORD PTR [ecx]
  419379:	cmp    edx,esi
  41937b:	jb     0x419392
  41937d:	mov    eax,DWORD PTR [edi]
  41937f:	mov    edi,DWORD PTR [eax+0x3c]
  419382:	mov    edi,DWORD PTR [edi+eax*1+0x50]
  419386:	add    edi,esi
  419388:	cmp    edx,edi
  41938a:	jae    0x419392
  41938c:	sub    eax,esi
  41938e:	add    eax,edx
  419390:	mov    DWORD PTR [ecx],eax
  419392:	pop    edi
  419393:	pop    esi
  419394:	pop    ebx
  419395:	leave  
  419396:	ret    0x20
  419399:	push   edi
  41939a:	push   esi
  41939b:	push   ebx
  41939c:	push   ebp
  41939d:	mov    ebp,esp
  41939f:	mov    eax,DWORD PTR [ebp+0x24]
  4193a2:	add    DWORD PTR [ebp+0x28],eax
  4193a5:	push   eax
  4193a6:	cld    
  4193a7:	mov    esi,DWORD PTR [ebp+0x18]
  4193aa:	add    DWORD PTR [ebp+0x1c],esi
  4193ad:	push   esi
  4193ae:	mov    esi,DWORD PTR [ebp+0x14]
  4193b1:	lods   eax,DWORD PTR ds:[esi]
  4193b2:	xchg   edx,eax
  4193b3:	push   edx
  4193b4:	mov    cl,BYTE PTR [esi-0x2]
  4193b7:	or     eax,0xffffffff
  4193ba:	shl    eax,cl
  4193bc:	not    eax
  4193be:	push   eax
  4193bf:	mov    cl,dh
  4193c1:	or     eax,0xffffffff
  4193c4:	shl    eax,cl
  4193c6:	not    eax
  4193c8:	push   eax
  4193c9:	add    cl,dl
  4193cb:	mov    edi,esi
  4193cd:	sub    esp,0xc
  4193d0:	sub    eax,eax
  4193d2:	inc    eax
  4193d3:	push   eax
  4193d4:	push   eax
  4193d5:	push   eax
  4193d6:	push   eax
  4193d7:	push   eax
  4193d8:	push   edi
  4193d9:	sub    esi,esi
  4193db:	push   esi
  4193dc:	or     ebx,0xffffffff
  4193df:	mov    eax,0x300
  4193e4:	shl    eax,cl
  4193e6:	lea    ecx,[eax+0x736]
  4193ec:	mov    eax,0x4000400
  4193f1:	shr    ecx,1
  4193f3:	rep stos DWORD PTR es:[edi],eax
  4193f5:	push   0x5
  4193f7:	pop    ecx
  4193f8:	call   0x4196e3
  4193fd:	loop   0x4193f8
  4193ff:	lea    esi,[esi]
  419401:	lea    edi,[edi]
  419403:	mov    edi,DWORD PTR [ebp-0x4]
  419406:	mov    eax,DWORD PTR [ebp-0x10]
  419409:	sub    edi,DWORD PTR [ebp+0x24]
  41940c:	and    eax,edi
  41940e:	mov    DWORD PTR [ebp-0x18],eax
  419411:	mov    al,0x0
  419413:	call   0x4196fb
  419418:	jne    0x4194b3
  41941e:	mov    cl,BYTE PTR [ebp-0xc]
  419421:	and    edi,DWORD PTR [ebp-0x14]
  419424:	shl    edi,cl
  419426:	sub    cl,0x8
  419429:	neg    cl
  41942b:	shr    esi,cl
  41942d:	pop    eax
  41942e:	add    edi,esi
  419430:	pop    esi
  419431:	lea    edi,[edi+edi*2]
  419434:	shl    edi,0x8
  419437:	cmp    al,0x7
  419439:	pop    edx
  41943a:	lea    ecx,[esi+edi*2+0xe6c]
  419441:	push   ecx
  419442:	push   esi
  419443:	mov    esi,0x100
  419448:	push   eax
  419449:	mov    al,0x1
  41944b:	jb     0x419481
  41944d:	mov    edi,DWORD PTR [ebp-0x4]
  419450:	sub    edi,DWORD PTR [ebp-0x24]
  419453:	movzx  edi,BYTE PTR [edi]
  419456:	mov    ebp,DWORD PTR [ebp-0x34]
  419459:	shl    edi,1
  41945b:	mov    ecx,esi
  41945d:	and    esi,edi
  41945f:	add    ecx,esi
  419461:	lea    ebp,[ebp+ecx*2+0x0]
  419465:	call   0x41971a
  41946a:	mov    ecx,eax
  41946c:	shr    esi,0x8
  41946f:	and    ecx,0x1
  419472:	cmp    esi,ecx
  419474:	mov    esi,0x100
  419479:	jne    0x419489
  41947b:	cmp    eax,esi
  41947d:	jb     0x419456
  41947f:	jmp    0x419495
  419481:	mov    ebp,DWORD PTR [ebp-0x34]
  419484:	call   0x41971a
  419489:	inc    eax
  41948a:	inc    esi
  41948b:	sub    eax,0x1
  41948e:	sub    esi,0x1
  419491:	cmp    eax,esi
  419493:	jb     0x419481
  419495:	pop    edx
  419496:	inc    edx
  419497:	cmp    edx,0x5
  41949a:	dec    edx
  41949b:	mov    ecx,edx
  41949d:	jb     0x4194ae
  41949f:	inc    edx
  4194a0:	cmp    edx,0xb
  4194a3:	dec    edx
  4194a4:	mov    cl,0x4
  4194a6:	dec    cl
  4194a8:	jb     0x4194ae
  4194aa:	mov    cl,0x7
  4194ac:	dec    cl
  4194ae:	sub    edx,ecx
  4194b0:	push   edx
  4194b1:	jmp    0x419502
  4194b3:	mov    al,0xc1
  4194b5:	dec    al
  4194b7:	call   0x41970b
  4194bc:	jne    0x4194d2
  4194be:	pop    eax
  4194bf:	pop    edi
  4194c0:	pop    edx
  4194c1:	pop    ecx
  4194c2:	pop    edx
  4194c3:	pop    ecx
  4194c4:	push   DWORD PTR [esp]
  4194c7:	push   ecx
  4194c8:	push   edx
  4194c9:	mov    edx,0x664
  4194ce:	mov    cl,0x0
  4194d0:	jmp    0x419545
  4194d2:	mov    al,0xcd
  4194d4:	dec    al
  4194d6:	call   0x41970b
  4194db:	jne    0x41950b
  4194dd:	mov    al,0xf1
  4194df:	dec    al
  4194e1:	call   0x4196fb
  4194e6:	jne    0x41953b
  4194e8:	pop    eax
  4194e9:	cmp    al,0x7
  4194eb:	mov    al,0x9
  4194ed:	jb     0x4194f1
  4194ef:	mov    al,0xb
  4194f1:	push   eax
  4194f2:	mov    esi,DWORD PTR [ebp-0x4]
  4194f5:	sub    esi,DWORD PTR [ebp-0x24]
  4194f8:	cmp    esi,DWORD PTR [ebp+0x24]
  4194fb:	jb     0x4196d2
  419501:	lods   al,BYTE PTR ds:[esi]
  419502:	mov    edi,DWORD PTR [ebp-0x4]
  419505:	stos   BYTE PTR es:[edi],al
  419506:	jmp    0x419699
  41950b:	mov    al,0xd8
  41950d:	call   0x41970b
  419512:	mov    esi,DWORD PTR [ebp-0x28]
  419515:	je     0x419532
  419517:	mov    al,0xe4
  419519:	call   0x41970b
  41951e:	mov    esi,DWORD PTR [ebp-0x2c]
  419521:	je     0x41952c
  419523:	mov    esi,DWORD PTR [ebp-0x30]
  419526:	mov    ecx,DWORD PTR [ebp-0x2c]
  419529:	mov    DWORD PTR [ebp-0x30],ecx
  41952c:	mov    ecx,DWORD PTR [ebp-0x28]
  41952f:	mov    DWORD PTR [ebp-0x2c],ecx
  419532:	mov    ecx,DWORD PTR [ebp-0x24]
  419535:	mov    DWORD PTR [ebp-0x28],ecx
  419538:	mov    DWORD PTR [ebp-0x24],esi
  41953b:	pop    eax
  41953c:	pop    edi
  41953d:	pop    ecx
  41953e:	mov    edx,0xa68
  419543:	mov    cl,0x8
  419545:	add    edx,edi
  419547:	push   edx
  419548:	push   edi
  419549:	cmp    al,0x7
  41954b:	mov    al,cl
  41954d:	jb     0x419551
  41954f:	add    al,0x3
  419551:	push   eax
  419552:	mov    ebp,DWORD PTR [ebp-0x34]
  419555:	call   0x419718
  41955a:	jne    0x419570
  41955c:	mov    eax,DWORD PTR [ebp-0x18]
  41955f:	mov    edi,DWORD PTR [ebp-0x34]
  419562:	shl    eax,0x3
  419565:	sub    ecx,ecx
  419567:	push   0x8
  419569:	pop    esi
  41956a:	lea    edi,[edi+eax*2+0x4]
  41956e:	jmp    0x4195a5
  419570:	mov    ebp,DWORD PTR [ebp-0x34]
  419573:	add    ebp,0x2
  419576:	call   0x419718
  41957b:	jne    0x419595
  41957d:	mov    eax,DWORD PTR [ebp-0x18]
  419580:	mov    edi,DWORD PTR [ebp-0x34]
  419583:	shl    eax,0x3
  419586:	push   0x8
  419588:	pop    ecx
  419589:	push   0x8
  41958b:	pop    esi
  41958c:	lea    edi,[edi+eax*2+0x104]
  419593:	jmp    0x4195a5
  419595:	mov    edi,0x204
  41959a:	add    edi,DWORD PTR [ebp-0x34]
  41959d:	push   0x10
  41959f:	pop    ecx
  4195a0:	mov    esi,0x100
  4195a5:	mov    DWORD PTR [ebp-0x1c],ecx
  4195a8:	sub    eax,eax
  4195aa:	inc    eax
  4195ab:	mov    ebp,edi
  4195ad:	call   0x41971a
  4195b2:	mov    ecx,eax
  4195b4:	sub    ecx,esi
  4195b6:	jb     0x4195ab
  4195b8:	add    DWORD PTR [ebp-0x1c],ecx
  4195bb:	cmp    DWORD PTR [ebp-0x3c],0x4
  4195bf:	jae    0x419675
  4195c5:	add    DWORD PTR [ebp-0x3c],0x7
  4195c9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4195cc:	cmp    ecx,0x4
  4195cf:	jb     0x4195d4
  4195d1:	push   0x3
  4195d3:	pop    ecx
  4195d4:	mov    edi,DWORD PTR [ebp-0x38]
  4195d7:	shl    ecx,0x6
  4195da:	sub    eax,eax
  4195dc:	inc    eax
  4195dd:	push   0x40
  4195df:	pop    esi
  4195e0:	lea    edi,[edi+ecx*2+0x360]
  4195e7:	mov    ebp,edi
  4195e9:	call   0x41971a
  4195ee:	mov    ecx,eax
  4195f0:	sub    ecx,esi
  4195f2:	jb     0x4195e7
  4195f4:	mov    DWORD PTR [ebp-0x18],ecx
  4195f7:	mov    DWORD PTR [ebp-0x24],ecx
  4195fa:	cmp    ecx,0x4
  4195fd:	jb     0x419672
  4195ff:	mov    esi,ecx
  419601:	and    DWORD PTR [ebp-0x24],0x1
  419605:	shr    esi,1
  419607:	or     DWORD PTR [ebp-0x24],0x2
  41960b:	dec    esi
  41960c:	cmp    ecx,0xe
  41960f:	jae    0x41962a
  419611:	mov    eax,0x2af
  419616:	sub    eax,ecx
  419618:	mov    ecx,esi
  41961a:	shl    BYTE PTR [ebp-0x24],cl
  41961d:	add    eax,DWORD PTR [ebp-0x24]
  419620:	shl    eax,1
  419622:	add    eax,DWORD PTR [ebp-0x38]
  419625:	mov    DWORD PTR [ebp-0x34],eax
  419628:	jmp    0x419657
  41962a:	sub    esi,0x4
  41962d:	call   0x4196d7
  419632:	shr    ebx,1
  419634:	shl    DWORD PTR [ebp-0x24],1
  419637:	cmp    DWORD PTR [ebp-0x20],ebx
  41963a:	jb     0x419642
  41963c:	inc    DWORD PTR [ebp-0x24]
  41963f:	sub    DWORD PTR [ebp-0x20],ebx
  419642:	dec    esi
  419643:	jne    0x41962d
  419645:	mov    eax,0x644
  41964a:	add    eax,DWORD PTR [ebp-0x38]
  41964d:	mov    DWORD PTR [ebp-0x34],eax
  419650:	shl    DWORD PTR [ebp-0x24],0x4
  419654:	push   0x4
  419656:	pop    esi
  419657:	sub    edi,edi
  419659:	inc    edi
  41965a:	mov    eax,edi
  41965c:	mov    ebp,DWORD PTR [ebp-0x34]
  41965f:	call   0x41971a
  419664:	test   al,0x1
  419666:	je     0x41966b
  419668:	or     DWORD PTR [ebp-0x24],edi
  41966b:	shl    edi,1
  41966d:	dec    esi
  41966e:	jne    0x41965c
  419670:	jmp    0x419672
  419672:	inc    DWORD PTR [ebp-0x24]
  419675:	mov    ecx,DWORD PTR [ebp-0x1c]
  419678:	add    ecx,0x2
  41967b:	mov    edi,DWORD PTR [ebp-0x4]
  41967e:	mov    eax,edi
  419680:	sub    eax,DWORD PTR [ebp+0x24]
  419683:	cmp    DWORD PTR [ebp-0x24],eax
  419686:	ja     0x4196d2
  419688:	mov    esi,edi
  41968a:	sub    esi,DWORD PTR [ebp-0x24]
  41968d:	mov    edx,DWORD PTR [ebp+0x28]
  419690:	lods   al,BYTE PTR ds:[esi]
  419691:	stos   BYTE PTR es:[edi],al
  419692:	cmp    edi,edx
  419694:	jae    0x419699
  419696:	dec    ecx
  419697:	jne    0x419690
  419699:	mov    DWORD PTR [ebp-0x4],edi
  41969c:	movzx  esi,al
  41969f:	cmp    edi,DWORD PTR [ebp+0x28]
  4196a2:	jb     0x419403
  4196a8:	call   0x4196d7
  4196ad:	sub    eax,eax
  4196af:	lea    ebp,[esp+0x3c]
  4196b3:	mov    edx,DWORD PTR [ebp+0x20]
  4196b6:	mov    esi,DWORD PTR [ebp-0x8]
  4196b9:	sub    esi,DWORD PTR [ebp+0x18]
  4196bc:	mov    DWORD PTR [edx],esi
  4196be:	mov    edx,DWORD PTR [ebp+0x2c]
  4196c1:	mov    edi,DWORD PTR [ebp-0x4]
  4196c4:	sub    edi,DWORD PTR [ebp+0x24]
  4196c7:	mov    DWORD PTR [edx],edi
  4196c9:	leave  
  4196ca:	pop    ebx
  4196cb:	pop    esi
  4196cc:	pop    edi
  4196cd:	ret    0x1c
  4196d0:	pop    esi
  4196d1:	pop    eax
  4196d2:	sub    eax,eax
  4196d4:	inc    eax
  4196d5:	jmp    0x4196af
  4196d7:	cmp    ebx,0x1000000
  4196dd:	jb     0x4196e0
  4196df:	ret    
  4196e0:	shl    ebx,0x8
  4196e3:	push   esi
  4196e4:	mov    esi,DWORD PTR [ebp-0x8]
  4196e7:	cmp    esi,DWORD PTR [ebp+0x1c]
  4196ea:	jae    0x4196d0
  4196ec:	mov    eax,DWORD PTR [ebp-0x20]
  4196ef:	shl    eax,0x8
  4196f2:	lods   al,BYTE PTR ds:[esi]
  4196f3:	mov    DWORD PTR [ebp-0x20],eax
  4196f6:	mov    DWORD PTR [ebp-0x8],esi
  4196f9:	pop    esi
  4196fa:	ret    
  4196fb:	mov    ecx,DWORD PTR [ebp-0x3c]
  4196fe:	movzx  eax,al
  419701:	shl    ecx,0x4
  419704:	add    eax,DWORD PTR [ebp-0x18]
  419707:	add    eax,ecx
  419709:	jmp    0x419711
  41970b:	movzx  eax,al
  41970e:	add    eax,DWORD PTR [ebp-0x3c]
  419711:	mov    ebp,DWORD PTR [ebp-0x38]
  419714:	lea    ebp,[ebp+eax*2+0x0]
  419718:	sub    eax,eax
  41971a:	lea    ebp,[ebp+eax*2+0x0]
  41971e:	cmp    ebx,0x1000000
  419724:	jae    0x419742
  419726:	mov    ecx,DWORD PTR [esp+0x38]
  41972a:	shl    DWORD PTR [esp+0x20],0x8
  41972f:	cmp    ecx,DWORD PTR [esp+0x5c]
  419733:	jae    0x4196d1
  419735:	mov    dl,BYTE PTR [ecx]
  419737:	inc    DWORD PTR [esp+0x38]
  41973b:	shl    ebx,0x8
  41973e:	mov    BYTE PTR [esp+0x20],dl
  419742:	mov    ecx,ebx
  419744:	movzx  edx,WORD PTR [ebp+0x0]
  419748:	shr    ecx,0xb
  41974b:	imul   ecx,edx
  41974e:	cmp    DWORD PTR [esp+0x20],ecx
  419752:	jae    0x41976b
  419754:	mov    ebx,ecx
  419756:	mov    ecx,0x800
  41975b:	sub    ecx,edx
  41975d:	shr    ecx,0x5
  419760:	add    WORD PTR [ebp+0x0],cx
  419764:	add    eax,eax
  419766:	lea    ebp,[esp+0x40]
  41976a:	ret    
  41976b:	shr    edx,0x5
  41976e:	sub    DWORD PTR [esp+0x20],ecx
  419772:	sub    ebx,ecx
  419774:	sub    WORD PTR [ebp+0x0],dx
  419778:	add    eax,eax
  41977a:	add    eax,0x1
  41977d:	lea    ebp,[esp+0x40]
  419781:	ret    
  419782:	push   ebp
  419783:	mov    ebp,esp
  419785:	sub    esp,0x104
  41978b:	push   ebx
  41978c:	push   esi
  41978d:	push   edi
  41978e:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  419795:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41979c:	mov    eax,DWORD PTR [ebp+0x8]
  41979f:	mov    DWORD PTR [ebp+0x8],eax
  4197a2:	mov    ecx,DWORD PTR [ebp-0x14]
  4197a5:	mov    ebx,0x7510899
  4197aa:	xor    ecx,ebx
  4197ac:	mov    eax,0x3272e0
  4197b1:	add    ecx,eax
  4197b3:	mov    DWORD PTR [ebp-0x28],ecx
  4197b6:	mov    ecx,DWORD PTR [ebp-0x14]
  4197b9:	xor    ecx,ebx
  4197bb:	add    ecx,eax
  4197bd:	mov    DWORD PTR [ebp-0x40],ecx
  4197c0:	mov    ecx,DWORD PTR [ebp-0x14]
  4197c3:	xor    ecx,ebx
  4197c5:	add    ecx,eax
  4197c7:	mov    DWORD PTR [ebp-0x3c],ecx
  4197ca:	mov    ecx,DWORD PTR [ebp-0x14]
  4197cd:	xor    ecx,ebx
  4197cf:	add    ecx,eax
  4197d1:	mov    DWORD PTR [ebp-0xa0],ecx
  4197d7:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  4197de:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  4197e5:	mov    DWORD PTR [ebp-0x4c],0xf89c85bd
  4197ec:	push   0x25
  4197ee:	pop    ecx
  4197ef:	mov    DWORD PTR [ebp-0x2c],ecx
  4197f2:	mov    DWORD PTR [ebp-0x2c],ecx
  4197f5:	push   0x65
  4197f7:	pop    ecx
  4197f8:	mov    DWORD PTR [ebp-0x2c],ecx
  4197fb:	mov    DWORD PTR [ebp-0x2c],ecx
  4197fe:	mov    DWORD PTR [ebp-0x2c],0x4d
  419805:	mov    DWORD PTR [ebp-0x2c],0x43
  41980c:	mov    ecx,DWORD PTR [ebp-0x14]
  41980f:	xor    ecx,ebx
  419811:	add    ecx,eax
  419813:	mov    DWORD PTR [ebp-0x2c],ecx
  419816:	mov    ecx,DWORD PTR [ebp-0x14]
  419819:	xor    ecx,ebx
  41981b:	add    ecx,eax
  41981d:	mov    DWORD PTR [ebp-0x2c],ecx
  419820:	mov    DWORD PTR [ebp-0x24],0x257
  419827:	mov    DWORD PTR [ebp-0x34],0x35
  41982e:	mov    DWORD PTR [ebp-0x10],0x79
  419835:	lea    edi,[ebp-0xe4]
  41983b:	lea    esi,[ebp-0x104]
  419841:	call   0x41a45b
  419846:	dec    DWORD PTR [ebp-0x10]
  419849:	jne    0x419835
  41984b:	dec    DWORD PTR [ebp-0x34]
  41984e:	jne    0x41982e
  419850:	dec    DWORD PTR [ebp-0x24]
  419853:	jne    0x419827
  419855:	mov    DWORD PTR [ebp-0x24],0x400d
  41985c:	mov    eax,DWORD PTR [ebp-0x14]
  41985f:	xor    eax,ebx
  419861:	mov    esi,0x3272e0
  419866:	add    eax,esi
  419868:	mov    DWORD PTR [ebp-0x8],eax
  41986b:	mov    eax,DWORD PTR [ebp-0x14]
  41986e:	and    DWORD PTR [ebp-0x94],0x0
  419875:	xor    eax,ebx
  419877:	add    eax,esi
  419879:	mov    DWORD PTR [ebp-0x38],eax
  41987c:	mov    eax,fs:0x18
  419882:	mov    DWORD PTR [ebp-0x94],eax
  419888:	mov    eax,DWORD PTR [eax+0x30]
  41988b:	mov    DWORD PTR [ebp-0x98],eax
  419891:	mov    eax,DWORD PTR [eax+0xc]
  419894:	mov    DWORD PTR [ebp-0xc0],eax
  41989a:	mov    eax,DWORD PTR [ebp+0x8]
  41989d:	lea    ecx,[ebp-0x94]
  4198a3:	mov    DWORD PTR [eax+0x1a0],ecx
  4198a9:	mov    eax,DWORD PTR [ebp+0x8]
  4198ac:	lea    ecx,[ebp-0x98]
  4198b2:	mov    DWORD PTR [eax+0x1a4],ecx
  4198b8:	mov    eax,DWORD PTR [ebp+0x8]
  4198bb:	push   DWORD PTR [ebp+0x8]
  4198be:	lea    ecx,[ebp-0xc0]
  4198c4:	mov    DWORD PTR [eax+0x1a8],ecx
  4198ca:	call   0x41bc94
  4198cf:	mov    ecx,DWORD PTR [ebp-0x14]
  4198d2:	xor    ecx,ebx
  4198d4:	add    ecx,esi
  4198d6:	cmp    ecx,eax
  4198d8:	je     0x419bb5
  4198de:	mov    eax,DWORD PTR [ebp+0x8]
  4198e1:	mov    eax,DWORD PTR [eax+0x194]
  4198e7:	mov    ecx,DWORD PTR [eax]
  4198e9:	mov    eax,DWORD PTR [ebp+0x8]
  4198ec:	mov    eax,DWORD PTR [eax+0x194]
  4198f2:	mov    eax,DWORD PTR [eax]
  4198f4:	add    eax,DWORD PTR [ecx+0x3c]
  4198f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4198fa:	mov    ecx,DWORD PTR [ecx+0x1d8]
  419900:	lea    edx,[ebp-0xc4]
  419906:	push   edx
  419907:	mov    edx,DWORD PTR [ebp+0x8]
  41990a:	mov    edx,DWORD PTR [edx+0x18c]
  419910:	mov    edx,DWORD PTR [edx]
  419912:	add    edx,DWORD PTR [eax+0x88]
  419918:	push   0x4
  41991a:	push   DWORD PTR [eax+0x8c]
  419920:	push   edx
  419921:	call   DWORD PTR [ecx+0x1c]
  419924:	push   DWORD PTR [ebp+0x8]
  419927:	mov    edi,DWORD PTR [ebp+0x8]
  41992a:	mov    eax,DWORD PTR [ebp+0x8]
  41992d:	mov    edx,DWORD PTR [eax+0x1b8]
  419933:	mov    DWORD PTR [ebp-0x68],0x80e0f06
  41993a:	mov    DWORD PTR [ebp-0x64],0x10a051f
  419941:	mov    WORD PTR [ebp-0x60],0x7a39
  419947:	mov    DWORD PTR [ebp-0x90],0x23f0f21
  419951:	mov    DWORD PTR [ebp-0x8c],0x6390819
  41995b:	mov    DWORD PTR [ebp-0x88],0x2419020a
  419965:	mov    DWORD PTR [ebp-0x84],0x81d050d
  41996f:	mov    DWORD PTR [ebp-0x80],0x7a391f01
  419976:	mov    DWORD PTR [ebp-0x7c],0x23f0f21
  41997d:	mov    DWORD PTR [ebp-0x78],0x6390819
  419984:	mov    DWORD PTR [ebp-0x74],0x2419020a
  41998b:	mov    DWORD PTR [ebp-0x70],0x81d050d
  419992:	mov    DWORD PTR [ebp-0x6c],0x7a131f01
  419999:	call   0x41bcc3
  41999e:	push   eax
  41999f:	mov    eax,DWORD PTR [ebp+0x8]
  4199a2:	mov    eax,DWORD PTR [eax+0x1a8]
  4199a8:	push   DWORD PTR [eax]
  4199aa:	call   0x41b965
  4199af:	test   eax,eax
  4199b1:	jne    0x419a03
  4199b3:	mov    eax,DWORD PTR [ebp+0x8]
  4199b6:	mov    eax,DWORD PTR [eax+0x1d8]
  4199bc:	mov    edi,DWORD PTR [ebp+0x8]
  4199bf:	add    eax,0x4
  4199c2:	mov    DWORD PTR [ebp-0x20],eax
  4199c5:	mov    eax,DWORD PTR [ebp+0x8]
  4199c8:	mov    edx,DWORD PTR [eax+0x1b8]
  4199ce:	call   0x41bcc3
  4199d3:	push   eax
  4199d4:	mov    eax,DWORD PTR [ebp-0x20]
  4199d7:	call   DWORD PTR [eax]
  4199d9:	test   eax,eax
  4199db:	jne    0x419a03
  4199dd:	mov    eax,DWORD PTR [ebp+0x8]
  4199e0:	mov    eax,DWORD PTR [eax+0x1d8]
  4199e6:	mov    edi,DWORD PTR [ebp+0x8]
  4199e9:	add    eax,0x10
  4199ec:	mov    DWORD PTR [ebp-0x20],eax
  4199ef:	mov    eax,DWORD PTR [ebp+0x8]
  4199f2:	mov    edx,DWORD PTR [eax+0x1b8]
  4199f8:	call   0x41bcc3
  4199fd:	push   eax
  4199fe:	mov    eax,DWORD PTR [ebp-0x20]
  419a01:	call   DWORD PTR [eax]
  419a03:	mov    eax,DWORD PTR [ebp-0x14]
  419a06:	mov    ecx,DWORD PTR [ebp-0x24]
  419a09:	xor    eax,ebx
  419a0b:	add    eax,esi
  419a0d:	cmp    eax,ecx
  419a0f:	je     0x419b8e
  419a15:	mov    eax,DWORD PTR [ebp-0x18]
  419a18:	xor    eax,ebx
  419a1a:	mov    ecx,0xffcd8d20
  419a1f:	sub    ecx,eax
  419a21:	add    ecx,DWORD PTR [ebp-0x24]
  419a24:	mov    eax,DWORD PTR [ebp-0x8]
  419a27:	cmp    eax,ecx
  419a29:	ja     0x419b8e
  419a2f:	mov    DWORD PTR [ebp-0x34],0x0
  419a36:	push   DWORD PTR [ebp+0x8]
  419a39:	mov    edi,DWORD PTR [ebp+0x8]
  419a3c:	mov    eax,DWORD PTR [ebp+0x8]
  419a3f:	mov    edx,DWORD PTR [eax+0x1b4]
  419a45:	call   0x41bcc3
  419a4a:	push   eax
  419a4b:	mov    eax,DWORD PTR [ebp+0x8]
  419a4e:	mov    eax,DWORD PTR [eax+0x1a8]
  419a54:	push   DWORD PTR [eax]
  419a56:	call   0x41b965
  419a5b:	mov    ecx,DWORD PTR [ebp+0x8]
  419a5e:	mov    ecx,DWORD PTR [ecx+0x19c]
  419a64:	mov    DWORD PTR [ecx],eax
  419a66:	mov    eax,DWORD PTR [ebp+0x8]
  419a69:	mov    edi,DWORD PTR [eax+0x1d8]
  419a6f:	mov    esi,DWORD PTR [ebp+0x8]
  419a72:	xor    eax,eax
  419a74:	lea    edx,[ebp-0x7c]
  419a77:	call   0x41bcf9
  419a7c:	push   eax
  419a7d:	mov    eax,DWORD PTR [ebp+0x8]
  419a80:	mov    eax,DWORD PTR [eax+0x19c]
  419a86:	push   DWORD PTR [eax]
  419a88:	call   DWORD PTR [edi+0x8]
  419a8b:	mov    DWORD PTR [ebp-0x20],eax
  419a8e:	mov    eax,DWORD PTR [ebp+0x8]
  419a91:	mov    edi,DWORD PTR [eax+0x1d8]
  419a97:	mov    esi,DWORD PTR [ebp+0x8]
  419a9a:	xor    eax,eax
  419a9c:	lea    edx,[ebp-0x90]
  419aa2:	call   0x41bcf9
  419aa7:	push   eax
  419aa8:	mov    eax,DWORD PTR [ebp+0x8]
  419aab:	mov    eax,DWORD PTR [eax+0x19c]
  419ab1:	push   DWORD PTR [eax]
  419ab3:	call   DWORD PTR [edi+0x8]
  419ab6:	and    DWORD PTR [ebp-0x1c],0x0
  419aba:	mov    eax,DWORD PTR [ebp-0x1c]
  419abd:	and    eax,0x7
  419ac0:	add    eax,0x31
  419ac3:	push   eax
  419ac4:	call   DWORD PTR [ebp-0x20]
  419ac7:	test   eax,eax
  419ac9:	jne    0x419ad0
  419acb:	and    DWORD PTR [ebp-0x10],eax
  419ace:	jmp    0x419af8
  419ad0:	mov    eax,DWORD PTR [ebp+0x8]
  419ad3:	mov    edi,DWORD PTR [eax+0x1d8]
  419ad9:	mov    esi,DWORD PTR [ebp+0x8]
  419adc:	xor    eax,eax
  419ade:	lea    edx,[ebp-0x68]
  419ae1:	call   0x41bcf9
  419ae6:	push   eax
  419ae7:	mov    eax,DWORD PTR [ebp+0x8]
  419aea:	mov    eax,DWORD PTR [eax+0x198]
  419af0:	push   DWORD PTR [eax]
  419af2:	call   DWORD PTR [edi+0x8]
  419af5:	mov    DWORD PTR [ebp-0x10],eax
  419af8:	inc    DWORD PTR [ebp-0x1c]
  419afb:	cmp    DWORD PTR [ebp-0x1c],0x10
  419aff:	jb     0x419aba
  419b01:	mov    eax,DWORD PTR [ebp-0x18]
  419b04:	mov    esi,DWORD PTR [ebp+0x8]
  419b07:	xor    eax,ebx
  419b09:	mov    edi,0x3272e0
  419b0e:	add    eax,edi
  419b10:	lea    edx,[ebp-0xe4]
  419b16:	call   0x41bcf9
  419b1b:	push   eax
  419b1c:	mov    eax,DWORD PTR [ebp-0x14]
  419b1f:	mov    esi,DWORD PTR [ebp+0x8]
  419b22:	xor    eax,ebx
  419b24:	add    eax,edi
  419b26:	lea    edx,[ebp-0x104]
  419b2c:	call   0x41bcf9
  419b31:	push   eax
  419b32:	call   DWORD PTR [ebp-0x10]
  419b35:	mov    ecx,DWORD PTR [ebp-0x14]
  419b38:	xor    ecx,ebx
  419b3a:	add    ecx,edi
  419b3c:	cmp    ecx,eax
  419b3e:	jne    0x419b47
  419b40:	mov    DWORD PTR [ebp-0x34],0x1
  419b47:	mov    eax,DWORD PTR [ebp-0x18]
  419b4a:	mov    ecx,DWORD PTR [ebp-0x8]
  419b4d:	xor    eax,ebx
  419b4f:	lea    eax,[eax+ecx*1+0x3272e0]
  419b56:	mov    DWORD PTR [ebp-0x8],eax
  419b59:	mov    eax,DWORD PTR [ebp-0x34]
  419b5c:	test   eax,eax
  419b5e:	je     0x419b72
  419b60:	mov    eax,DWORD PTR [ebp-0x18]
  419b63:	mov    ecx,DWORD PTR [ebp-0x38]
  419b66:	xor    eax,ebx
  419b68:	lea    eax,[eax+ecx*1+0x3272e0]
  419b6f:	mov    DWORD PTR [ebp-0x38],eax
  419b72:	mov    eax,DWORD PTR [ebp-0x18]
  419b75:	xor    eax,ebx
  419b77:	mov    ecx,0xffcd8d20
  419b7c:	sub    ecx,eax
  419b7e:	add    ecx,DWORD PTR [ebp-0x24]
  419b81:	mov    eax,DWORD PTR [ebp-0x8]
  419b84:	cmp    eax,ecx
  419b86:	jbe    0x419a2f
  419b8c:	mov    esi,edi
  419b8e:	mov    eax,DWORD PTR [ebp-0x38]
  419b91:	mov    ecx,DWORD PTR [ebp-0x8]
  419b94:	cmp    ecx,eax
  419b96:	jne    0x419ba9
  419b98:	push   DWORD PTR [ebp+0x8]
  419b9b:	lea    eax,[ebp-0x40]
  419b9e:	push   eax
  419b9f:	call   0x41c772
  419ba4:	mov    DWORD PTR [ebp-0x28],eax
  419ba7:	jmp    0x419bb5
  419ba9:	mov    eax,DWORD PTR [ebp-0x28]
  419bac:	mov    ecx,DWORD PTR [ebp-0x18]
  419baf:	xor    ecx,ebx
  419bb1:	add    ecx,esi
  419bb3:	xor    DWORD PTR [eax],ecx
  419bb5:	mov    eax,DWORD PTR [ebp-0x14]
  419bb8:	mov    ecx,DWORD PTR [ebp-0x28]
  419bbb:	xor    eax,ebx
  419bbd:	add    eax,esi
  419bbf:	cmp    eax,ecx
  419bc1:	je     0x41a339
  419bc7:	mov    eax,DWORD PTR [ebp-0x14]
  419bca:	mov    ecx,DWORD PTR [ebp-0x40]
  419bcd:	xor    eax,ebx
  419bcf:	add    eax,esi
  419bd1:	cmp    eax,ecx
  419bd3:	je     0x41a339
  419bd9:	mov    eax,DWORD PTR [ebp-0x14]
  419bdc:	xor    eax,ebx
  419bde:	add    eax,esi
  419be0:	jmp    0x419bfe
  419be2:	mov    edi,DWORD PTR [ebp-0x28]
  419be5:	mov    cl,al
  419be7:	and    cl,0x1f
  419bea:	or     dl,0xff
  419bed:	sub    dl,cl
  419bef:	add    BYTE PTR [edi+eax*1],dl
  419bf2:	mov    ecx,DWORD PTR [ebp-0x18]
  419bf5:	xor    ecx,ebx
  419bf7:	lea    eax,[eax+ecx*1+0x3272e0]
  419bfe:	mov    ecx,DWORD PTR [ebp-0x40]
  419c01:	cmp    eax,ecx
  419c03:	jb     0x419be2
  419c05:	mov    eax,DWORD PTR [ebp-0x40]
  419c08:	mov    DWORD PTR [ebp-0x24],eax
  419c0b:	mov    eax,DWORD PTR [ebp-0x28]
  419c0e:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  419c15:	mov    DWORD PTR [ebp-0xbc],eax
  419c1b:	mov    edi,0xf89c85b8
  419c20:	mov    DWORD PTR [ebp-0x30],edi
  419c23:	mov    eax,DWORD PTR [ebp-0x38]
  419c26:	xor    eax,ebx
  419c28:	add    eax,esi
  419c2a:	mov    DWORD PTR [ebp-0xc],eax
  419c2d:	mov    eax,DWORD PTR [ebp-0x38]
  419c30:	xor    eax,ebx
  419c32:	add    eax,esi
  419c34:	mov    DWORD PTR [ebp-0x8],eax
  419c37:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  419c3e:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  419c45:	mov    eax,DWORD PTR [ebp-0x38]
  419c48:	mov    ecx,DWORD PTR [ebp-0x24]
  419c4b:	xor    eax,ebx
  419c4d:	add    eax,esi
  419c4f:	cmp    ecx,eax
  419c51:	je     0x419e50
  419c57:	jmp    0x419e2c
  419c5c:	mov    ecx,DWORD PTR [ebp-0xc]
  419c5f:	mov    eax,DWORD PTR [ebp-0x24]
  419c62:	sub    eax,ecx
  419c64:	mov    ecx,DWORD PTR [ebp-0x48]
  419c67:	xor    ecx,ebx
  419c69:	add    ecx,esi
  419c6b:	xor    edx,edx
  419c6d:	div    ecx
  419c6f:	mov    DWORD PTR [ebp-0x8],eax
  419c72:	mov    eax,DWORD PTR [ebp-0x54]
  419c75:	mov    ecx,DWORD PTR [ebp-0x8]
  419c78:	xor    eax,ebx
  419c7a:	add    eax,esi
  419c7c:	cmp    ecx,eax
  419c7e:	jbe    0x419c8a
  419c80:	mov    eax,DWORD PTR [ebp-0x54]
  419c83:	xor    eax,ebx
  419c85:	add    eax,esi
  419c87:	mov    DWORD PTR [ebp-0x8],eax
  419c8a:	mov    eax,DWORD PTR [ebp-0x48]
  419c8d:	mov    ecx,DWORD PTR [ebp-0x8]
  419c90:	xor    eax,ebx
  419c92:	add    eax,esi
  419c94:	imul   eax,ecx
  419c97:	mov    DWORD PTR [ebp-0x8],eax
  419c9a:	mov    eax,DWORD PTR [ebp-0x38]
  419c9d:	mov    ecx,DWORD PTR [ebp-0x8]
  419ca0:	xor    eax,ebx
  419ca2:	add    eax,esi
  419ca4:	cmp    ecx,eax
  419ca6:	je     0x419e1a
  419cac:	mov    eax,DWORD PTR [ebp-0x8]
  419caf:	mov    DWORD PTR [ebp-0x10],eax
  419cb2:	mov    eax,DWORD PTR [ebp-0xc]
  419cb5:	add    eax,DWORD PTR [ebp-0xbc]
  419cbb:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  419cc2:	mov    DWORD PTR [ebp-0x34],edi
  419cc5:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  419ccf:	mov    DWORD PTR [ebp-0x8],eax
  419cd2:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  419cd9:	mov    DWORD PTR [ebp-0x1c],edi
  419cdc:	mov    eax,DWORD PTR [ebp-0x20]
  419cdf:	xor    eax,ebx
  419ce1:	add    eax,esi
  419ce3:	jmp    0x419dd9
  419ce8:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  419cf2:	mov    DWORD PTR [ebp-0xb8],0xf89c85ad
  419cfc:	mov    eax,DWORD PTR [ebp-0x1c]
  419cff:	mov    ecx,DWORD PTR [ebp-0x44]
  419d02:	xor    eax,ebx
  419d04:	add    eax,esi
  419d06:	imul   eax,ecx
  419d09:	mov    ecx,DWORD PTR [ebp-0x8]
  419d0c:	mov    al,BYTE PTR [eax+ecx*1]
  419d0f:	mov    BYTE PTR [ebp-0x2],al
  419d12:	mov    eax,DWORD PTR [ebp-0x1c]
  419d15:	mov    ecx,DWORD PTR [ebp-0x44]
  419d18:	xor    eax,ebx
  419d1a:	add    eax,esi
  419d1c:	imul   eax,ecx
  419d1f:	mov    ecx,DWORD PTR [ebp-0xa8]
  419d25:	xor    ecx,ebx
  419d27:	add    eax,ecx
  419d29:	mov    ecx,DWORD PTR [ebp-0x8]
  419d2c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  419d34:	mov    ecx,DWORD PTR [ebp-0xb0]
  419d3a:	xor    ecx,ebx
  419d3c:	lea    eax,[ecx+eax*1+0x3272e0]
  419d43:	movzx  ecx,BYTE PTR [ebp-0x2]
  419d47:	xor    ecx,eax
  419d49:	mov    BYTE PTR [ebp-0x2],cl
  419d4c:	mov    al,BYTE PTR [ebp-0x2]
  419d4f:	mov    ecx,DWORD PTR [ebp-0x1c]
  419d52:	mov    edx,DWORD PTR [ebp-0x44]
  419d55:	xor    ecx,ebx
  419d57:	add    ecx,esi
  419d59:	imul   ecx,edx
  419d5c:	mov    edx,DWORD PTR [ebp-0x8]
  419d5f:	mov    BYTE PTR [ecx+edx*1],al
  419d62:	mov    eax,DWORD PTR [ebp-0x1c]
  419d65:	mov    ecx,DWORD PTR [ebp-0x44]
  419d68:	xor    eax,ebx
  419d6a:	add    eax,esi
  419d6c:	imul   eax,ecx
  419d6f:	mov    ecx,DWORD PTR [ebp-0x8]
  419d72:	mov    al,BYTE PTR [eax+ecx*1]
  419d75:	mov    BYTE PTR [ebp-0x2],al
  419d78:	mov    eax,DWORD PTR [ebp-0x1c]
  419d7b:	mov    ecx,DWORD PTR [ebp-0x44]
  419d7e:	xor    eax,ebx
  419d80:	add    eax,esi
  419d82:	imul   eax,ecx
  419d85:	mov    ecx,DWORD PTR [ebp-0x34]
  419d88:	xor    ecx,ebx
  419d8a:	add    eax,ecx
  419d8c:	mov    ecx,DWORD PTR [ebp-0x8]
  419d8f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  419d97:	mov    ecx,DWORD PTR [ebp-0xb8]
  419d9d:	xor    ecx,ebx
  419d9f:	lea    eax,[ecx+eax*1+0x3272e0]
  419da6:	movzx  ecx,BYTE PTR [ebp-0x2]
  419daa:	xor    ecx,eax
  419dac:	mov    BYTE PTR [ebp-0x2],cl
  419daf:	mov    al,BYTE PTR [ebp-0x2]
  419db2:	mov    ecx,DWORD PTR [ebp-0x1c]
  419db5:	mov    edx,DWORD PTR [ebp-0x44]
  419db8:	xor    ecx,ebx
  419dba:	add    ecx,esi
  419dbc:	imul   ecx,edx
  419dbf:	mov    edx,DWORD PTR [ebp-0x8]
  419dc2:	mov    BYTE PTR [ecx+edx*1],al
  419dc5:	mov    eax,DWORD PTR [ebp-0x2c]
  419dc8:	mov    ecx,DWORD PTR [ebp-0x34]
  419dcb:	xor    eax,ebx
  419dcd:	xor    ecx,ebx
  419dcf:	add    eax,esi
  419dd1:	add    ecx,esi
  419dd3:	imul   eax,ecx
  419dd6:	add    eax,DWORD PTR [ebp-0x44]
  419dd9:	mov    DWORD PTR [ebp-0x44],eax
  419ddc:	mov    eax,DWORD PTR [ebp-0x44]
  419ddf:	mov    ecx,DWORD PTR [ebp-0x10]
  419de2:	cmp    ecx,eax
  419de4:	jb     0x419ce8
  419dea:	mov    eax,DWORD PTR [ebp-0x34]
  419ded:	mov    ecx,DWORD PTR [ebp-0x10]
  419df0:	xor    eax,ebx
  419df2:	add    eax,esi
  419df4:	imul   eax,ecx
  419df7:	mov    ecx,DWORD PTR [ebp-0x20]
  419dfa:	xor    ecx,ebx
  419dfc:	add    ecx,esi
  419dfe:	or     eax,ecx
  419e00:	mov    ecx,DWORD PTR [ebp-0x30]
  419e03:	xor    ecx,ebx
  419e05:	add    eax,ecx
  419e07:	mov    ecx,DWORD PTR [ebp-0x30]
  419e0a:	xor    ecx,ebx
  419e0c:	add    eax,ecx
  419e0e:	mov    ecx,DWORD PTR [ebp-0xc]
  419e11:	lea    eax,[eax+ecx*1+0x64e5c0]
  419e18:	jmp    0x419e29
  419e1a:	mov    eax,DWORD PTR [ebp-0x30]
  419e1d:	mov    ecx,DWORD PTR [ebp-0xc]
  419e20:	xor    eax,ebx
  419e22:	lea    eax,[eax+ecx*1+0x3272e0]
  419e29:	mov    DWORD PTR [ebp-0xc],eax
  419e2c:	mov    eax,DWORD PTR [ebp-0x30]
  419e2f:	xor    eax,ebx
  419e31:	mov    ecx,0xffcd8d20
  419e36:	sub    ecx,eax
  419e38:	add    ecx,DWORD PTR [ebp-0x24]
  419e3b:	mov    eax,DWORD PTR [ebp-0x30]
  419e3e:	mov    edx,DWORD PTR [ebp-0xc]
  419e41:	xor    eax,ebx
  419e43:	add    eax,esi
  419e45:	imul   eax,edx
  419e48:	cmp    eax,ecx
  419e4a:	jbe    0x419c5c
  419e50:	mov    eax,DWORD PTR [ebp-0x14]
  419e53:	mov    ecx,DWORD PTR [ebp-0x40]
  419e56:	mov    eax,DWORD PTR [ebp+0x8]
  419e59:	mov    edx,DWORD PTR [ebp-0x4c]
  419e5c:	mov    eax,DWORD PTR [eax+0x1d8]
  419e62:	xor    edx,ebx
  419e64:	add    edx,esi
  419e66:	push   edx
  419e67:	mov    edx,DWORD PTR [ebp-0x3c]
  419e6a:	xor    edx,ebx
  419e6c:	add    edx,esi
  419e6e:	push   edx
  419e6f:	push   ecx
  419e70:	mov    DWORD PTR [ebp-0x2c],ecx
  419e73:	mov    ecx,DWORD PTR [ebp-0x14]
  419e76:	xor    ecx,ebx
  419e78:	add    ecx,esi
  419e7a:	push   ecx
  419e7b:	call   DWORD PTR [eax+0x14]
  419e7e:	mov    edi,eax
  419e80:	mov    eax,DWORD PTR [ebp-0x14]
  419e83:	xor    eax,ebx
  419e85:	add    eax,esi
  419e87:	cmp    eax,edi
  419e89:	je     0x419ee4
  419e8b:	mov    eax,DWORD PTR [ebp-0x14]
  419e8e:	jmp    0x419eb1
  419e90:	mov    ecx,DWORD PTR [ebp-0x28]
  419e93:	xor    eax,ebx
  419e95:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  419e9c:	mov    BYTE PTR [eax+edi*1+0x3272e0],cl
  419ea3:	mov    ecx,DWORD PTR [ebp-0x18]
  419ea6:	xor    ecx,ebx
  419ea8:	lea    eax,[ecx+eax*1+0x3272e0]
  419eaf:	xor    eax,ebx
  419eb1:	mov    ecx,DWORD PTR [ebp-0x40]
  419eb4:	sub    ecx,esi
  419eb6:	xor    ecx,ebx
  419eb8:	cmp    eax,ecx
  419eba:	jne    0x419e90
  419ebc:	mov    eax,DWORD PTR [ebp+0x8]
  419ebf:	mov    ecx,DWORD PTR [ebp-0x50]
  419ec2:	mov    eax,DWORD PTR [eax+0x1d8]
  419ec8:	xor    ecx,ebx
  419eca:	add    ecx,esi
  419ecc:	push   ecx
  419ecd:	mov    ecx,DWORD PTR [ebp-0x14]
  419ed0:	xor    ecx,ebx
  419ed2:	add    ecx,esi
  419ed4:	push   ecx
  419ed5:	push   DWORD PTR [ebp-0x28]
  419ed8:	call   DWORD PTR [eax+0x18]
  419edb:	mov    eax,DWORD PTR [ebp-0x2c]
  419ede:	mov    DWORD PTR [ebp-0x28],edi
  419ee1:	mov    DWORD PTR [ebp-0x40],eax
  419ee4:	mov    edi,DWORD PTR [ebp-0x28]
  419ee7:	mov    eax,DWORD PTR [ebp-0x18]
  419eea:	mov    ecx,DWORD PTR [ebp-0x14]
  419eed:	xor    eax,ebx
  419eef:	mov    DWORD PTR [ebp-0x2c],edi
  419ef2:	add    eax,esi
  419ef4:	mov    DWORD PTR [ebp-0x5c],0x39122a12
  419efb:	mov    DWORD PTR [ebp-0x58],0x27123f12
  419f02:	jmp    0x419f36
  419f04:	xor    ecx,ebx
  419f06:	mov    dl,BYTE PTR [ebp+ecx*1+0x327284]
  419f0d:	xor    dl,0x73
  419f10:	sub    dl,0x9
  419f13:	mov    DWORD PTR [ebp-0x3c],ecx
  419f16:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272e0]
  419f1e:	movzx  edx,dl
  419f21:	cmp    ecx,edx
  419f23:	jne    0x419f40
  419f25:	mov    ecx,DWORD PTR [ebp-0x18]
  419f28:	mov    edx,DWORD PTR [ebp-0x3c]
  419f2b:	xor    ecx,ebx
  419f2d:	lea    ecx,[ecx+edx*1+0x3272e0]
  419f34:	xor    ecx,ebx
  419f36:	cmp    ecx,0xf89c85b1
  419f3c:	jne    0x419f04
  419f3e:	jmp    0x419f47
  419f40:	mov    eax,DWORD PTR [ebp-0x14]
  419f43:	xor    eax,ebx
  419f45:	add    eax,esi
  419f47:	mov    ecx,DWORD PTR [ebp-0x14]
  419f4a:	xor    ecx,ebx
  419f4c:	add    ecx,esi
  419f4e:	cmp    ecx,eax
  419f50:	je     0x41a0c3
  419f56:	mov    eax,DWORD PTR [edi+0x8]
  419f59:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  419f60:	mov    DWORD PTR [ebp-0x3c],0xf89cc316
  419f67:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  419f6e:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  419f75:	mov    DWORD PTR [ebp-0x10],eax
  419f78:	mov    eax,DWORD PTR [ebp+0x8]
  419f7b:	mov    ecx,DWORD PTR [ebp-0x20]
  419f7e:	xor    ecx,ebx
  419f80:	add    ecx,esi
  419f82:	push   ecx
  419f83:	mov    ecx,DWORD PTR [ebp-0x48]
  419f86:	mov    eax,DWORD PTR [eax+0x1d8]
  419f8c:	xor    ecx,ebx
  419f8e:	add    ecx,esi
  419f90:	push   ecx
  419f91:	mov    ecx,DWORD PTR [ebp-0x3c]
  419f94:	xor    ecx,ebx
  419f96:	add    ecx,esi
  419f98:	push   ecx
  419f99:	mov    ecx,DWORD PTR [ebp-0xc]
  419f9c:	xor    ecx,ebx
  419f9e:	add    ecx,esi
  419fa0:	push   ecx
  419fa1:	call   DWORD PTR [eax+0x14]
  419fa4:	mov    edi,eax
  419fa6:	mov    eax,DWORD PTR [ebp+0x8]
  419fa9:	mov    ecx,DWORD PTR [ebp-0x20]
  419fac:	mov    eax,DWORD PTR [eax+0x1d8]
  419fb2:	xor    ecx,ebx
  419fb4:	add    ecx,esi
  419fb6:	push   ecx
  419fb7:	mov    ecx,DWORD PTR [ebp-0x48]
  419fba:	xor    ecx,ebx
  419fbc:	add    ecx,esi
  419fbe:	push   ecx
  419fbf:	mov    ecx,DWORD PTR [ebp-0xc]
  419fc2:	push   DWORD PTR [ebp-0x10]
  419fc5:	xor    ecx,ebx
  419fc7:	add    ecx,esi
  419fc9:	push   ecx
  419fca:	call   DWORD PTR [eax+0x14]
  419fcd:	mov    ecx,DWORD PTR [ebp-0xc]
  419fd0:	xor    ecx,ebx
  419fd2:	add    ecx,esi
  419fd4:	mov    DWORD PTR [ebp-0x20],eax
  419fd7:	cmp    ecx,edi
  419fd9:	je     0x41a366
  419fdf:	mov    ecx,DWORD PTR [ebp-0xc]
  419fe2:	xor    ecx,ebx
  419fe4:	add    ecx,esi
  419fe6:	cmp    ecx,eax
  419fe8:	je     0x41a366
  419fee:	mov    DWORD PTR [ebp-0x3c],0xf89c85ba
  419ff5:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  419ffc:	mov    ecx,DWORD PTR [ebp-0x3c]
  419fff:	xor    cl,0x99
  41a002:	sub    cl,0x20
  41a005:	mov    BYTE PTR [edi],cl
  41a007:	mov    ecx,DWORD PTR [ebp-0xc]
  41a00a:	xor    cl,0x99
  41a00d:	sub    cl,0x20
  41a010:	mov    BYTE PTR [edi+0x1],cl
  41a013:	mov    ecx,DWORD PTR [ebp-0x4c]
  41a016:	xor    cl,0x99
  41a019:	sub    cl,0x20
  41a01c:	mov    BYTE PTR [edi+0x2],cl
  41a01f:	and    DWORD PTR [ebp-0xb4],0x0
  41a026:	and    DWORD PTR [ebp-0xa4],0x0
  41a02d:	lea    ecx,[ebp-0xa4]
  41a033:	push   ecx
  41a034:	push   DWORD PTR [ebp-0x10]
  41a037:	push   eax
  41a038:	lea    eax,[ebp-0xb4]
  41a03e:	push   eax
  41a03f:	mov    eax,DWORD PTR [ebp-0x2c]
  41a042:	push   DWORD PTR [eax+0xc]
  41a045:	mov    eax,DWORD PTR [ebp-0x28]
  41a048:	add    eax,0x10
  41a04b:	push   eax
  41a04c:	push   edi
  41a04d:	call   0x419399
  41a052:	mov    DWORD PTR [ebp-0x3c],eax
  41a055:	mov    eax,DWORD PTR [ebp+0x8]
  41a058:	mov    ecx,DWORD PTR [ebp-0x50]
  41a05b:	mov    eax,DWORD PTR [eax+0x1d8]
  41a061:	xor    ecx,ebx
  41a063:	add    ecx,esi
  41a065:	push   ecx
  41a066:	mov    ecx,DWORD PTR [ebp-0xc]
  41a069:	xor    ecx,ebx
  41a06b:	add    ecx,esi
  41a06d:	push   ecx
  41a06e:	push   edi
  41a06f:	call   DWORD PTR [eax+0x18]
  41a072:	mov    eax,DWORD PTR [ebp-0x3c]
  41a075:	add    eax,0xffcd8d20
  41a07a:	xor    eax,ebx
  41a07c:	cmp    eax,0xf89c85b9
  41a081:	mov    eax,DWORD PTR [ebp+0x8]
  41a084:	mov    eax,DWORD PTR [eax+0x1d8]
  41a08a:	mov    ecx,DWORD PTR [ebp-0x50]
  41a08d:	jne    0x41a0b0
  41a08f:	xor    ecx,ebx
  41a091:	add    ecx,esi
  41a093:	push   ecx
  41a094:	mov    ecx,DWORD PTR [ebp-0xc]
  41a097:	xor    ecx,ebx
  41a099:	add    ecx,esi
  41a09b:	push   ecx
  41a09c:	push   DWORD PTR [ebp-0x28]
  41a09f:	call   DWORD PTR [eax+0x18]
  41a0a2:	mov    eax,DWORD PTR [ebp-0x20]
  41a0a5:	mov    DWORD PTR [ebp-0x28],eax
  41a0a8:	mov    eax,DWORD PTR [ebp-0x10]
  41a0ab:	mov    DWORD PTR [ebp-0x40],eax
  41a0ae:	jmp    0x41a0c3
  41a0b0:	xor    ecx,ebx
  41a0b2:	add    ecx,esi
  41a0b4:	push   ecx
  41a0b5:	mov    ecx,DWORD PTR [ebp-0xc]
  41a0b8:	xor    ecx,ebx
  41a0ba:	add    ecx,esi
  41a0bc:	push   ecx
  41a0bd:	push   DWORD PTR [ebp-0x20]
  41a0c0:	call   DWORD PTR [eax+0x18]
  41a0c3:	mov    eax,DWORD PTR [ebp-0x40]
  41a0c6:	mov    DWORD PTR [ebp-0x38],eax
  41a0c9:	mov    eax,DWORD PTR [ebp-0x28]
  41a0cc:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41a0d3:	mov    DWORD PTR [ebp-0x3c],eax
  41a0d6:	mov    edi,0xf89c85b8
  41a0db:	mov    DWORD PTR [ebp-0x30],edi
  41a0de:	mov    eax,DWORD PTR [ebp-0x24]
  41a0e1:	xor    eax,ebx
  41a0e3:	add    eax,esi
  41a0e5:	mov    DWORD PTR [ebp-0xc],eax
  41a0e8:	mov    eax,DWORD PTR [ebp-0x24]
  41a0eb:	xor    eax,ebx
  41a0ed:	add    eax,esi
  41a0ef:	mov    DWORD PTR [ebp-0x10],eax
  41a0f2:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  41a0f9:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  41a100:	mov    eax,DWORD PTR [ebp-0x24]
  41a103:	mov    ecx,DWORD PTR [ebp-0x38]
  41a106:	xor    eax,ebx
  41a108:	add    eax,esi
  41a10a:	cmp    ecx,eax
  41a10c:	je     0x41a302
  41a112:	jmp    0x41a2de
  41a117:	mov    ecx,DWORD PTR [ebp-0xc]
  41a11a:	mov    eax,DWORD PTR [ebp-0x38]
  41a11d:	sub    eax,ecx
  41a11f:	mov    ecx,DWORD PTR [ebp-0x48]
  41a122:	xor    ecx,ebx
  41a124:	add    ecx,esi
  41a126:	xor    edx,edx
  41a128:	div    ecx
  41a12a:	mov    DWORD PTR [ebp-0x10],eax
  41a12d:	mov    eax,DWORD PTR [ebp-0x20]
  41a130:	mov    ecx,DWORD PTR [ebp-0x10]
  41a133:	xor    eax,ebx
  41a135:	add    eax,esi
  41a137:	cmp    ecx,eax
  41a139:	jbe    0x41a145
  41a13b:	mov    eax,DWORD PTR [ebp-0x20]
  41a13e:	xor    eax,ebx
  41a140:	add    eax,esi
  41a142:	mov    DWORD PTR [ebp-0x10],eax
  41a145:	mov    eax,DWORD PTR [ebp-0x48]
  41a148:	mov    ecx,DWORD PTR [ebp-0x10]
  41a14b:	xor    eax,ebx
  41a14d:	add    eax,esi
  41a14f:	imul   eax,ecx
  41a152:	mov    DWORD PTR [ebp-0x10],eax
  41a155:	mov    eax,DWORD PTR [ebp-0x24]
  41a158:	mov    ecx,DWORD PTR [ebp-0x10]
  41a15b:	xor    eax,ebx
  41a15d:	add    eax,esi
  41a15f:	cmp    ecx,eax
  41a161:	je     0x41a2cc
  41a167:	mov    eax,DWORD PTR [ebp-0x10]
  41a16a:	mov    DWORD PTR [ebp-0x34],eax
  41a16d:	mov    eax,DWORD PTR [ebp-0xc]
  41a170:	add    eax,DWORD PTR [ebp-0x3c]
  41a173:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  41a17a:	mov    DWORD PTR [ebp-0x10],edi
  41a17d:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41a184:	mov    DWORD PTR [ebp-0x1c],eax
  41a187:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  41a18e:	mov    DWORD PTR [ebp-0x8],edi
  41a191:	mov    eax,DWORD PTR [ebp-0x54]
  41a194:	xor    eax,ebx
  41a196:	add    eax,esi
  41a198:	jmp    0x41a28b
  41a19d:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41a1a7:	mov    DWORD PTR [ebp-0x9c],0xf89c85ad
  41a1b1:	mov    eax,DWORD PTR [ebp-0x8]
  41a1b4:	mov    ecx,DWORD PTR [ebp-0x18]
  41a1b7:	xor    eax,ebx
  41a1b9:	add    eax,esi
  41a1bb:	imul   eax,ecx
  41a1be:	mov    ecx,DWORD PTR [ebp-0x1c]
  41a1c1:	mov    al,BYTE PTR [eax+ecx*1]
  41a1c4:	mov    BYTE PTR [ebp-0x1],al
  41a1c7:	mov    eax,DWORD PTR [ebp-0x8]
  41a1ca:	mov    ecx,DWORD PTR [ebp-0x18]
  41a1cd:	xor    eax,ebx
  41a1cf:	add    eax,esi
  41a1d1:	imul   eax,ecx
  41a1d4:	mov    ecx,DWORD PTR [ebp-0x4c]
  41a1d7:	xor    ecx,ebx
  41a1d9:	add    eax,ecx
  41a1db:	mov    ecx,DWORD PTR [ebp-0x1c]
  41a1de:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41a1e6:	mov    ecx,DWORD PTR [ebp-0xac]
  41a1ec:	xor    ecx,ebx
  41a1ee:	lea    eax,[ecx+eax*1+0x3272e0]
  41a1f5:	movzx  ecx,BYTE PTR [ebp-0x1]
  41a1f9:	xor    ecx,eax
  41a1fb:	mov    BYTE PTR [ebp-0x1],cl
  41a1fe:	mov    al,BYTE PTR [ebp-0x1]
  41a201:	mov    ecx,DWORD PTR [ebp-0x8]
  41a204:	mov    edx,DWORD PTR [ebp-0x18]
  41a207:	xor    ecx,ebx
  41a209:	add    ecx,esi
  41a20b:	imul   ecx,edx
  41a20e:	mov    edx,DWORD PTR [ebp-0x1c]
  41a211:	mov    BYTE PTR [ecx+edx*1],al
  41a214:	mov    eax,DWORD PTR [ebp-0x8]
  41a217:	mov    ecx,DWORD PTR [ebp-0x18]
  41a21a:	xor    eax,ebx
  41a21c:	add    eax,esi
  41a21e:	imul   eax,ecx
  41a221:	mov    ecx,DWORD PTR [ebp-0x1c]
  41a224:	mov    al,BYTE PTR [eax+ecx*1]
  41a227:	mov    BYTE PTR [ebp-0x1],al
  41a22a:	mov    eax,DWORD PTR [ebp-0x8]
  41a22d:	mov    ecx,DWORD PTR [ebp-0x18]
  41a230:	xor    eax,ebx
  41a232:	add    eax,esi
  41a234:	imul   eax,ecx
  41a237:	mov    ecx,DWORD PTR [ebp-0x10]
  41a23a:	xor    ecx,ebx
  41a23c:	add    eax,ecx
  41a23e:	mov    ecx,DWORD PTR [ebp-0x1c]
  41a241:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41a249:	mov    ecx,DWORD PTR [ebp-0x9c]
  41a24f:	xor    ecx,ebx
  41a251:	lea    eax,[ecx+eax*1+0x3272e0]
  41a258:	movzx  ecx,BYTE PTR [ebp-0x1]
  41a25c:	xor    ecx,eax
  41a25e:	mov    BYTE PTR [ebp-0x1],cl
  41a261:	mov    al,BYTE PTR [ebp-0x1]
  41a264:	mov    ecx,DWORD PTR [ebp-0x8]
  41a267:	mov    edx,DWORD PTR [ebp-0x18]
  41a26a:	xor    ecx,ebx
  41a26c:	add    ecx,esi
  41a26e:	imul   ecx,edx
  41a271:	mov    edx,DWORD PTR [ebp-0x1c]
  41a274:	mov    BYTE PTR [ecx+edx*1],al
  41a277:	mov    eax,DWORD PTR [ebp-0x2c]
  41a27a:	mov    ecx,DWORD PTR [ebp-0x10]
  41a27d:	xor    eax,ebx
  41a27f:	xor    ecx,ebx
  41a281:	add    eax,esi
  41a283:	add    ecx,esi
  41a285:	imul   eax,ecx
  41a288:	add    eax,DWORD PTR [ebp-0x18]
  41a28b:	mov    DWORD PTR [ebp-0x18],eax
  41a28e:	mov    eax,DWORD PTR [ebp-0x18]
  41a291:	mov    ecx,DWORD PTR [ebp-0x34]
  41a294:	cmp    ecx,eax
  41a296:	jb     0x41a19d
  41a29c:	mov    eax,DWORD PTR [ebp-0x10]
  41a29f:	mov    ecx,DWORD PTR [ebp-0x34]
  41a2a2:	xor    eax,ebx
  41a2a4:	add    eax,esi
  41a2a6:	imul   eax,ecx
  41a2a9:	mov    ecx,DWORD PTR [ebp-0x54]
  41a2ac:	xor    ecx,ebx
  41a2ae:	add    ecx,esi
  41a2b0:	or     eax,ecx
  41a2b2:	mov    ecx,DWORD PTR [ebp-0x30]
  41a2b5:	xor    ecx,ebx
  41a2b7:	add    eax,ecx
  41a2b9:	mov    ecx,DWORD PTR [ebp-0x30]
  41a2bc:	xor    ecx,ebx
  41a2be:	add    eax,ecx
  41a2c0:	mov    ecx,DWORD PTR [ebp-0xc]
  41a2c3:	lea    eax,[eax+ecx*1+0x64e5c0]
  41a2ca:	jmp    0x41a2db
  41a2cc:	mov    eax,DWORD PTR [ebp-0x30]
  41a2cf:	mov    ecx,DWORD PTR [ebp-0xc]
  41a2d2:	xor    eax,ebx
  41a2d4:	lea    eax,[eax+ecx*1+0x3272e0]
  41a2db:	mov    DWORD PTR [ebp-0xc],eax
  41a2de:	mov    eax,DWORD PTR [ebp-0x30]
  41a2e1:	xor    eax,ebx
  41a2e3:	mov    ecx,0xffcd8d20
  41a2e8:	sub    ecx,eax
  41a2ea:	add    ecx,DWORD PTR [ebp-0x38]
  41a2ed:	mov    eax,DWORD PTR [ebp-0x30]
  41a2f0:	mov    edx,DWORD PTR [ebp-0xc]
  41a2f3:	xor    eax,ebx
  41a2f5:	add    eax,esi
  41a2f7:	imul   eax,edx
  41a2fa:	cmp    eax,ecx
  41a2fc:	jbe    0x41a117
  41a302:	push   DWORD PTR [ebp+0x8]
  41a305:	mov    eax,DWORD PTR [ebp+0x8]
  41a308:	push   DWORD PTR [eax+0x1cc]
  41a30e:	lea    eax,[ebp-0xa0]
  41a314:	push   eax
  41a315:	mov    eax,DWORD PTR [ebp+0x8]
  41a318:	mov    eax,DWORD PTR [eax+0x1c4]
  41a31e:	push   DWORD PTR [eax]
  41a320:	mov    eax,DWORD PTR [ebp+0x8]
  41a323:	mov    eax,DWORD PTR [eax+0x1c0]
  41a329:	push   DWORD PTR [eax]
  41a32b:	push   DWORD PTR [ebp-0x40]
  41a32e:	push   DWORD PTR [ebp-0x28]
  41a331:	call   0x41ae07
  41a336:	mov    DWORD PTR [ebp-0x3c],eax
  41a339:	mov    eax,DWORD PTR [ebp-0x14]
  41a33c:	mov    ecx,DWORD PTR [ebp-0x28]
  41a33f:	xor    eax,ebx
  41a341:	add    eax,esi
  41a343:	cmp    eax,ecx
  41a345:	je     0x41a366
  41a347:	mov    eax,DWORD PTR [ebp+0x8]
  41a34a:	mov    ecx,DWORD PTR [ebp-0x50]
  41a34d:	mov    eax,DWORD PTR [eax+0x1d8]
  41a353:	xor    ecx,ebx
  41a355:	add    ecx,esi
  41a357:	push   ecx
  41a358:	mov    ecx,DWORD PTR [ebp-0x14]
  41a35b:	xor    ecx,ebx
  41a35d:	add    ecx,esi
  41a35f:	push   ecx
  41a360:	push   DWORD PTR [ebp-0x28]
  41a363:	call   DWORD PTR [eax+0x18]
  41a366:	pop    edi
  41a367:	pop    esi
  41a368:	pop    ebx
  41a369:	leave  
  41a36a:	ret    0x4
  41a36d:	push   ebp
  41a36e:	mov    ebp,esp
  41a370:	push   ecx
  41a371:	push   ecx
  41a372:	lea    eax,[ebp-0x8]
  41a375:	mov    DWORD PTR [ebp-0x4],eax
  41a378:	push   esi
  41a379:	mov    esi,DWORD PTR [ebp-0x4]
  41a37c:	mov    eax,0xf881ba0f
  41a381:	mov    DWORD PTR [esi],eax
  41a383:	mov    esi,DWORD PTR [ebp-0x8]
  41a386:	cmp    esi,eax
  41a388:	pop    esi
  41a389:	jne    0x41a393
  41a38b:	mov    BYTE PTR [ecx+0xa],0x7a
  41a38f:	mov    BYTE PTR [edx+0x8],0x2f
  41a393:	mov    BYTE PTR [edx+0xa],0x7a
  41a397:	mov    BYTE PTR [ecx+0x2],0x4
  41a39b:	leave  
  41a39c:	ret    
  41a39d:	push   ebp
  41a39e:	mov    ebp,esp
  41a3a0:	push   ecx
  41a3a1:	push   ecx
  41a3a2:	lea    eax,[ebp-0x8]
  41a3a5:	mov    DWORD PTR [ebp-0x4],eax
  41a3a8:	mov    edx,DWORD PTR [ebp-0x4]
  41a3ab:	mov    eax,0xf88b0be3
  41a3b0:	mov    DWORD PTR [edx],eax
  41a3b2:	mov    edx,DWORD PTR [ebp-0x8]
  41a3b5:	cmp    edx,eax
  41a3b7:	jne    0x41a3c8
  41a3b9:	mov    eax,DWORD PTR [ebp+0x8]
  41a3bc:	mov    BYTE PTR [ecx+0x9],0xe
  41a3c0:	mov    BYTE PTR [eax+0x7],0x47
  41a3c4:	mov    BYTE PTR [ecx+0x6],0xf
  41a3c8:	mov    BYTE PTR [ecx+0x3],0x1e
  41a3cc:	leave  
  41a3cd:	ret    0x4
  41a3d0:	push   ebp
  41a3d1:	mov    ebp,esp
  41a3d3:	push   ecx
  41a3d4:	push   ecx
  41a3d5:	lea    eax,[ebp-0x8]
  41a3d8:	mov    DWORD PTR [ebp-0x4],eax
  41a3db:	mov    edx,DWORD PTR [ebp-0x4]
  41a3de:	mov    eax,0x7e0da0f
  41a3e3:	mov    DWORD PTR [edx],eax
  41a3e5:	mov    edx,DWORD PTR [ebp-0x8]
  41a3e8:	cmp    edx,eax
  41a3ea:	jne    0x41a3f0
  41a3ec:	mov    BYTE PTR [ecx+0x7],0x47
  41a3f0:	mov    eax,DWORD PTR [ebp+0x8]
  41a3f3:	mov    BYTE PTR [ecx+0x1],0x1
  41a3f7:	mov    BYTE PTR [eax+0x9],0x2e
  41a3fb:	leave  
  41a3fc:	ret    0x4
  41a3ff:	push   ebp
  41a400:	mov    ebp,esp
  41a402:	push   ecx
  41a403:	push   ecx
  41a404:	lea    eax,[ebp-0x8]
  41a407:	mov    DWORD PTR [ebp-0x4],eax
  41a40a:	push   esi
  41a40b:	mov    esi,DWORD PTR [ebp-0x4]
  41a40e:	mov    eax,0x7060e3e
  41a413:	mov    DWORD PTR [esi],eax
  41a415:	mov    esi,DWORD PTR [ebp-0x8]
  41a418:	cmp    esi,eax
  41a41a:	pop    esi
  41a41b:	jne    0x41a427
  41a41d:	mov    BYTE PTR [edx+0x4],0xb
  41a421:	mov    WORD PTR [ecx+0x3],0xb1e
  41a427:	mov    BYTE PTR [edx],0x3f
  41a42a:	leave  
  41a42b:	ret    
  41a42c:	push   ebp
  41a42d:	mov    ebp,esp
  41a42f:	push   ecx
  41a430:	push   ecx
  41a431:	lea    eax,[ebp-0x8]
  41a434:	mov    DWORD PTR [ebp-0x4],eax
  41a437:	mov    edx,DWORD PTR [ebp-0x4]
  41a43a:	mov    eax,0xf8870b3f
  41a43f:	mov    DWORD PTR [edx],eax
  41a441:	mov    edx,DWORD PTR [ebp-0x8]
  41a444:	cmp    edx,eax
  41a446:	jne    0x41a453
  41a448:	mov    eax,DWORD PTR [ebp+0x8]
  41a44b:	mov    BYTE PTR [ecx+0x8],0xf
  41a44f:	mov    BYTE PTR [eax+0x1],0x1
  41a453:	mov    BYTE PTR [ecx+0x5],0xf3
  41a457:	leave  
  41a458:	ret    0x4
  41a45b:	push   esi
  41a45c:	mov    ecx,edi
  41a45e:	call   0x41a42c
  41a463:	mov    edx,edi
  41a465:	mov    ecx,esi
  41a467:	mov    BYTE PTR [esi],0x1f
  41a46a:	call   0x41a3ff
  41a46f:	push   esi
  41a470:	mov    ecx,edi
  41a472:	mov    BYTE PTR [esi+0x5],0xf3
  41a476:	call   0x41a3d0
  41a47b:	push   esi
  41a47c:	mov    BYTE PTR [esi+0x6],0xf
  41a480:	call   0x41a39d
  41a485:	mov    BYTE PTR [esi+0x2],0x4
  41a489:	mov    edx,esi
  41a48b:	jmp    0x41a36d
  41a490:	push   ebp
  41a491:	mov    ebp,esp
  41a493:	push   ecx
  41a494:	mov    ecx,DWORD PTR [edx+0x194]
  41a49a:	push   esi
  41a49b:	mov    esi,DWORD PTR [ebp+0x8]
  41a49e:	mov    esi,DWORD PTR [esi]
  41a4a0:	mov    DWORD PTR [ecx],esi
  41a4a2:	mov    ecx,DWORD PTR [edx+0x194]
  41a4a8:	mov    ecx,DWORD PTR [ecx]
  41a4aa:	mov    esi,DWORD PTR [edx+0x190]
  41a4b0:	mov    DWORD PTR [esi],ecx
  41a4b2:	mov    eax,DWORD PTR [edx+0x194]
  41a4b8:	mov    ecx,DWORD PTR [eax]
  41a4ba:	mov    ecx,DWORD PTR [ecx+0x3c]
  41a4bd:	add    ecx,DWORD PTR [eax]
  41a4bf:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  41a4c6:	mov    eax,DWORD PTR [ebp-0x4]
  41a4c9:	movzx  ecx,WORD PTR [ecx+0x16]
  41a4cd:	xor    eax,0x7510899
  41a4d2:	add    eax,0x3272e0
  41a4d7:	pop    esi
  41a4d8:	test   ecx,eax
  41a4da:	je     0x41a4e8
  41a4dc:	mov    eax,DWORD PTR [edx+0x1c8]
  41a4e2:	mov    DWORD PTR [eax],0xf89c85b8
  41a4e8:	leave  
  41a4e9:	ret    0x4
  41a4ec:	push   ebp
  41a4ed:	mov    ebp,esp
  41a4ef:	sub    esp,0x70
  41a4f2:	and    DWORD PTR [ebp-0x20],0x0
  41a4f6:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  41a4fd:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  41a504:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  41a50b:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41a512:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  41a519:	mov    eax,DWORD PTR [ebp+0x20]
  41a51c:	mov    eax,DWORD PTR [eax+0x194]
  41a522:	mov    DWORD PTR [ebp-0xc],eax
  41a525:	mov    eax,DWORD PTR [ebp+0x20]
  41a528:	push   ebx
  41a529:	push   esi
  41a52a:	mov    esi,DWORD PTR [eax+0x190]
  41a530:	mov    eax,DWORD PTR [ebp+0x20]
  41a533:	mov    eax,DWORD PTR [eax+0x18c]
  41a539:	mov    DWORD PTR [ebp-0x8],eax
  41a53c:	mov    eax,DWORD PTR [eax]
  41a53e:	push   edi
  41a53f:	mov    DWORD PTR [ebp-0x4],esi
  41a542:	test   eax,eax
  41a544:	jne    0x41a551
  41a546:	push   DWORD PTR [ebp+0x1c]
  41a549:	mov    edx,DWORD PTR [ebp+0x20]
  41a54c:	call   0x41a490
  41a551:	mov    eax,DWORD PTR [esi]
  41a553:	mov    ebx,DWORD PTR [esi]
  41a555:	add    ebx,DWORD PTR [eax+0x3c]
  41a558:	mov    eax,DWORD PTR [ebp+0xc]
  41a55b:	mov    ecx,DWORD PTR [ebp-0x8]
  41a55e:	mov    ecx,DWORD PTR [ecx]
  41a560:	mov    esi,0x7510899
  41a565:	xor    eax,esi
  41a567:	mov    edi,0x3272e0
  41a56c:	add    eax,edi
  41a56e:	cmp    eax,ecx
  41a570:	jne    0x41a7a8
  41a576:	mov    eax,DWORD PTR [ebp-0xc]
  41a579:	mov    eax,DWORD PTR [eax]
  41a57b:	mov    DWORD PTR [ebp-0x10],eax
  41a57e:	mov    eax,DWORD PTR [ebx+0x50]
  41a581:	mov    DWORD PTR [ebp-0x68],eax
  41a584:	mov    eax,DWORD PTR [ebp-0x18]
  41a587:	xor    eax,esi
  41a589:	add    eax,edi
  41a58b:	mov    DWORD PTR [ebp-0x64],eax
  41a58e:	mov    eax,DWORD PTR [ebp-0x14]
  41a591:	and    DWORD PTR [ebp-0x6c],0x0
  41a595:	xor    eax,esi
  41a597:	add    eax,edi
  41a599:	mov    DWORD PTR [ebp-0x60],eax
  41a59c:	lea    eax,[ebp-0x70]
  41a59f:	push   eax
  41a5a0:	mov    eax,DWORD PTR [ebp+0x8]
  41a5a3:	xor    eax,esi
  41a5a5:	add    eax,edi
  41a5a7:	push   eax
  41a5a8:	mov    eax,DWORD PTR [ebp+0x20]
  41a5ab:	add    eax,0xaa
  41a5b0:	push   eax
  41a5b1:	mov    eax,DWORD PTR [ebp+0x20]
  41a5b4:	mov    eax,DWORD PTR [eax+0x198]
  41a5ba:	mov    DWORD PTR [ebp-0x70],0x4
  41a5c1:	push   DWORD PTR [eax]
  41a5c3:	mov    eax,DWORD PTR [ebp+0x10]
  41a5c6:	call   eax
  41a5c8:	mov    ecx,DWORD PTR [ebp-0xc]
  41a5cb:	mov    ecx,DWORD PTR [ecx]
  41a5cd:	mov    edx,DWORD PTR [ebp-0x8]
  41a5d0:	mov    DWORD PTR [ebp-0x6c],eax
  41a5d3:	mov    DWORD PTR [ebp+0x1c],eax
  41a5d6:	mov    DWORD PTR [edx],ecx
  41a5d8:	mov    ecx,DWORD PTR [ebp-0x4]
  41a5db:	mov    DWORD PTR [ecx],eax
  41a5dd:	mov    eax,DWORD PTR [ebx+0x50]
  41a5e0:	mov    DWORD PTR [ebp-0x68],eax
  41a5e3:	mov    eax,DWORD PTR [ebp-0x1c]
  41a5e6:	xor    eax,esi
  41a5e8:	add    eax,edi
  41a5ea:	mov    DWORD PTR [ebp-0x64],eax
  41a5ed:	lea    eax,[ebp-0x20]
  41a5f0:	mov    DWORD PTR [ebp-0x60],eax
  41a5f3:	lea    eax,[ebp-0x70]
  41a5f6:	push   eax
  41a5f7:	mov    eax,DWORD PTR [ebp+0x8]
  41a5fa:	xor    eax,esi
  41a5fc:	add    eax,edi
  41a5fe:	push   eax
  41a5ff:	mov    eax,DWORD PTR [ebp+0x20]
  41a602:	add    eax,0xee
  41a607:	push   eax
  41a608:	mov    eax,DWORD PTR [ebp+0x20]
  41a60b:	mov    eax,DWORD PTR [eax+0x198]
  41a611:	mov    DWORD PTR [ebp-0x70],0x4
  41a618:	push   DWORD PTR [eax]
  41a61a:	mov    eax,DWORD PTR [ebp+0x10]
  41a61d:	call   eax
  41a61f:	test   eax,eax
  41a621:	je     0x41a646
  41a623:	and    DWORD PTR [ebp+0xc],0x0
  41a627:	cmp    DWORD PTR [ebx+0x50],0x0
  41a62b:	jbe    0x41a646
  41a62d:	mov    eax,DWORD PTR [ebp+0x1c]
  41a630:	mov    ecx,DWORD PTR [ebp-0x10]
  41a633:	sub    ecx,eax
  41a635:	mov    dl,BYTE PTR [ecx+eax*1]
  41a638:	inc    DWORD PTR [ebp+0xc]
  41a63b:	mov    BYTE PTR [eax],dl
  41a63d:	mov    edx,DWORD PTR [ebp+0xc]
  41a640:	inc    eax
  41a641:	cmp    edx,DWORD PTR [ebx+0x50]
  41a644:	jb     0x41a635
  41a646:	mov    edx,DWORD PTR [ebp+0x1c]
  41a649:	mov    ecx,DWORD PTR [edx+0x3c]
  41a64c:	add    ecx,edx
  41a64e:	mov    eax,DWORD PTR [ecx+0xa0]
  41a654:	mov    ebx,DWORD PTR [ecx+0x28]
  41a657:	add    eax,edx
  41a659:	sub    edx,DWORD PTR [ebp-0x10]
  41a65c:	add    ebx,DWORD PTR [ebp+0x1c]
  41a65f:	mov    DWORD PTR [ebp+0xc],edx
  41a662:	mov    DWORD PTR [ebp-0x2c],ecx
  41a665:	mov    DWORD PTR [ebp-0x14],ebx
  41a668:	mov    DWORD PTR [ebp-0x8],0x0
  41a66f:	jmp    0x41a6eb
  41a671:	add    edx,0xfffffff8
  41a674:	shr    edx,1
  41a676:	mov    DWORD PTR [ebp-0x18],edx
  41a679:	je     0x41a6d7
  41a67b:	lea    edx,[eax+0x8]
  41a67e:	mov    DWORD PTR [ebp-0x4],edx
  41a681:	mov    edx,DWORD PTR [ebp-0x18]
  41a684:	mov    DWORD PTR [ebp-0x18],edx
  41a687:	mov    edx,DWORD PTR [ebp-0x4]
  41a68a:	movzx  edx,WORD PTR [edx]
  41a68d:	mov    DWORD PTR [ebp-0x24],edx
  41a690:	and    edx,0xfff
  41a696:	mov    DWORD PTR [ebp-0x28],edx
  41a699:	mov    edx,DWORD PTR [ebp-0x24]
  41a69c:	shr    edx,0xc
  41a69f:	add    edx,0xffcd8d20
  41a6a5:	xor    edx,esi
  41a6a7:	cmp    edx,0xf89c85ba
  41a6ad:	jne    0x41a6ce
  41a6af:	mov    edx,DWORD PTR [ebp-0x28]
  41a6b2:	add    edx,DWORD PTR [ebp+0x1c]
  41a6b5:	mov    ebx,DWORD PTR [eax]
  41a6b7:	cmp    DWORD PTR [ebx+edx*1],0x0
  41a6bb:	je     0x41a6cb
  41a6bd:	mov    ecx,DWORD PTR [ebp+0xc]
  41a6c0:	add    ecx,DWORD PTR [ebx+edx*1]
  41a6c3:	mov    ebx,DWORD PTR [eax]
  41a6c5:	mov    DWORD PTR [edx+ebx*1],ecx
  41a6c8:	mov    ecx,DWORD PTR [ebp-0x2c]
  41a6cb:	mov    ebx,DWORD PTR [ebp-0x14]
  41a6ce:	add    DWORD PTR [ebp-0x4],0x2
  41a6d2:	dec    DWORD PTR [ebp-0x18]
  41a6d5:	jne    0x41a687
  41a6d7:	mov    edx,DWORD PTR [ebp-0xc]
  41a6da:	add    DWORD PTR [ebp-0x8],edx
  41a6dd:	mov    edx,DWORD PTR [ebp-0x8]
  41a6e0:	cmp    edx,DWORD PTR [ecx+0xa4]
  41a6e6:	jae    0x41a6f9
  41a6e8:	add    eax,DWORD PTR [ebp-0xc]
  41a6eb:	mov    edx,DWORD PTR [eax+0x4]
  41a6ee:	mov    DWORD PTR [ebp-0xc],edx
  41a6f1:	test   edx,edx
  41a6f3:	jne    0x41a671
  41a6f9:	mov    eax,DWORD PTR [ebp-0x10]
  41a6fc:	mov    DWORD PTR [ebp-0x6c],eax
  41a6ff:	mov    DWORD PTR [ebp-0x70],0x4
  41a706:	mov    eax,DWORD PTR [ecx+0x50]
  41a709:	mov    DWORD PTR [ebp-0x68],eax
  41a70c:	mov    eax,DWORD PTR [ebp-0x1c]
  41a70f:	xor    eax,esi
  41a711:	add    eax,edi
  41a713:	mov    DWORD PTR [ebp-0x64],eax
  41a716:	lea    eax,[ebp-0x20]
  41a719:	mov    DWORD PTR [ebp-0x60],eax
  41a71c:	lea    eax,[ebp-0x70]
  41a71f:	push   eax
  41a720:	mov    eax,DWORD PTR [ebp+0x8]
  41a723:	xor    eax,esi
  41a725:	add    eax,edi
  41a727:	push   eax
  41a728:	mov    eax,DWORD PTR [ebp+0x20]
  41a72b:	add    eax,0xee
  41a730:	push   eax
  41a731:	mov    eax,DWORD PTR [ebp+0x20]
  41a734:	mov    eax,DWORD PTR [eax+0x198]
  41a73a:	push   DWORD PTR [eax]
  41a73c:	mov    eax,DWORD PTR [ebp+0x10]
  41a73f:	call   eax
  41a741:	mov    eax,DWORD PTR [ebp+0x20]
  41a744:	mov    eax,DWORD PTR [eax+0x180]
  41a74a:	add    eax,DWORD PTR [ebp+0xc]
  41a74d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a750:	push   DWORD PTR [ebp+0x18]
  41a753:	mov    DWORD PTR [eax],ecx
  41a755:	push   DWORD PTR [ebp+0x14]
  41a758:	push   DWORD PTR [ebp+0x1c]
  41a75b:	call   ebx
  41a75d:	mov    eax,DWORD PTR [ebp+0xc]
  41a760:	add    eax,DWORD PTR [ebp+0x20]
  41a763:	lea    ecx,[ebp+0x4]
  41a766:	mov    DWORD PTR [ebp+0x20],eax
  41a769:	mov    eax,DWORD PTR [ebp+0x20]
  41a76c:	mov    eax,DWORD PTR [ebp+0x20]
  41a76f:	mov    edx,DWORD PTR [eax+0x190]
  41a775:	mov    eax,DWORD PTR [ebp+0x20]
  41a778:	mov    eax,DWORD PTR [eax+0x18c]
  41a77e:	mov    esi,DWORD PTR [eax]
  41a780:	cmp    DWORD PTR [ecx],esi
  41a782:	jb     0x41a7a3
  41a784:	mov    esi,DWORD PTR [edx]
  41a786:	mov    edi,DWORD PTR [edx]
  41a788:	mov    esi,DWORD PTR [esi+0x3c]
  41a78b:	lea    esi,[edi+esi*1+0x50]
  41a78f:	mov    edi,DWORD PTR [eax]
  41a791:	add    edi,DWORD PTR [esi]
  41a793:	cmp    DWORD PTR [ecx],edi
  41a795:	jae    0x41a7a3
  41a797:	mov    esi,DWORD PTR [eax]
  41a799:	mov    eax,DWORD PTR [ecx]
  41a79b:	mov    edx,DWORD PTR [edx]
  41a79d:	sub    eax,esi
  41a79f:	add    edx,eax
  41a7a1:	mov    DWORD PTR [ecx],edx
  41a7a3:	mov    eax,DWORD PTR [ebp+0xc]
  41a7a6:	jmp    0x41a7e9
  41a7a8:	push   DWORD PTR [ebp+0x20]
  41a7ab:	call   0x419782
  41a7b0:	mov    eax,DWORD PTR [ebp+0x20]
  41a7b3:	mov    eax,DWORD PTR [eax+0x1c8]
  41a7b9:	mov    eax,DWORD PTR [eax]
  41a7bb:	xor    eax,esi
  41a7bd:	add    eax,edi
  41a7bf:	mov    eax,DWORD PTR [ebp+0x20]
  41a7c2:	jne    0x41a7da
  41a7c4:	mov    ecx,DWORD PTR [ebp+0x20]
  41a7c7:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41a7cd:	push   DWORD PTR [ecx]
  41a7cf:	mov    eax,DWORD PTR [eax+0x1d8]
  41a7d5:	call   DWORD PTR [eax+0x28]
  41a7d8:	jmp    0x41a7e7
  41a7da:	mov    eax,DWORD PTR [eax+0x17c]
  41a7e0:	mov    ecx,DWORD PTR [eax]
  41a7e2:	lea    eax,[ebp+0x4]
  41a7e5:	add    DWORD PTR [eax],ecx
  41a7e7:	xor    eax,eax
  41a7e9:	pop    edi
  41a7ea:	pop    esi
  41a7eb:	pop    ebx
  41a7ec:	leave  
  41a7ed:	ret    0x1c
  41a7f0:	push   ebp
  41a7f1:	mov    ebp,esp
  41a7f3:	sub    esp,0x1c
  41a7f6:	push   esi
  41a7f7:	mov    esi,eax
  41a7f9:	mov    eax,DWORD PTR [ecx+0x190]
  41a7ff:	cmp    DWORD PTR [eax],0x0
  41a802:	je     0x41a912
  41a808:	test   edx,edx
  41a80a:	je     0x41a912
  41a810:	test   esi,esi
  41a812:	je     0x41a912
  41a818:	mov    eax,DWORD PTR [esi+0x88]
  41a81e:	test   eax,eax
  41a820:	je     0x41a90d
  41a826:	cmp    DWORD PTR [esi+0x8c],0x10
  41a82d:	je     0x41a90d
  41a833:	cmp    DWORD PTR [esi+0x34],edx
  41a836:	je     0x41a90d
  41a83c:	mov    esi,DWORD PTR [ecx+0x18c]
  41a842:	and    DWORD PTR [ebp-0x10],0x0
  41a846:	mov    ecx,edx
  41a848:	sub    ecx,DWORD PTR [esi]
  41a84a:	add    eax,edx
  41a84c:	movzx  edx,WORD PTR [eax+0xc]
  41a850:	mov    DWORD PTR [ebp-0x1c],ecx
  41a853:	movzx  ecx,WORD PTR [eax+0xe]
  41a857:	add    ecx,edx
  41a859:	je     0x41a90d
  41a85f:	lea    ecx,[eax+0x14]
  41a862:	push   ebx
  41a863:	mov    DWORD PTR [ebp-0x18],ecx
  41a866:	mov    esi,0x7fffffff
  41a86b:	push   edi
  41a86c:	test   DWORD PTR [ecx],esi
  41a86e:	je     0x41a8ef
  41a870:	mov    edx,DWORD PTR [ecx]
  41a872:	and    DWORD PTR [ebp-0xc],0x0
  41a876:	and    edx,esi
  41a878:	add    edx,eax
  41a87a:	movzx  edi,WORD PTR [edx+0xe]
  41a87e:	movzx  ebx,WORD PTR [edx+0xc]
  41a882:	add    edi,ebx
  41a884:	je     0x41a8ef
  41a886:	lea    ecx,[edx+0x14]
  41a889:	mov    DWORD PTR [ebp-0x14],ecx
  41a88c:	test   DWORD PTR [ecx],esi
  41a88e:	je     0x41a8d1
  41a890:	mov    ecx,DWORD PTR [ecx]
  41a892:	and    DWORD PTR [ebp-0x8],0x0
  41a896:	and    ecx,esi
  41a898:	add    ecx,eax
  41a89a:	movzx  edi,WORD PTR [ecx+0xe]
  41a89e:	movzx  ebx,WORD PTR [ecx+0xc]
  41a8a2:	add    edi,ebx
  41a8a4:	je     0x41a8d1
  41a8a6:	lea    edi,[ecx+0x14]
  41a8a9:	mov    DWORD PTR [ebp-0x4],edi
  41a8ac:	mov    edi,DWORD PTR [ebp-0x4]
  41a8af:	mov    edi,DWORD PTR [edi]
  41a8b1:	test   edi,edi
  41a8b3:	je     0x41a8bb
  41a8b5:	mov    ebx,DWORD PTR [ebp-0x1c]
  41a8b8:	add    DWORD PTR [edi+eax*1],ebx
  41a8bb:	movzx  edi,WORD PTR [ecx+0xe]
  41a8bf:	movzx  ebx,WORD PTR [ecx+0xc]
  41a8c3:	inc    DWORD PTR [ebp-0x8]
  41a8c6:	add    DWORD PTR [ebp-0x4],0x8
  41a8ca:	add    edi,ebx
  41a8cc:	cmp    DWORD PTR [ebp-0x8],edi
  41a8cf:	jb     0x41a8ac
  41a8d1:	movzx  edi,WORD PTR [edx+0xe]
  41a8d5:	movzx  ebx,WORD PTR [edx+0xc]
  41a8d9:	mov    ecx,DWORD PTR [ebp-0x14]
  41a8dc:	inc    DWORD PTR [ebp-0xc]
  41a8df:	add    ecx,0x8
  41a8e2:	add    edi,ebx
  41a8e4:	mov    DWORD PTR [ebp-0x14],ecx
  41a8e7:	cmp    DWORD PTR [ebp-0xc],edi
  41a8ea:	jb     0x41a88c
  41a8ec:	mov    ecx,DWORD PTR [ebp-0x18]
  41a8ef:	movzx  edx,WORD PTR [eax+0xe]
  41a8f3:	movzx  edi,WORD PTR [eax+0xc]
  41a8f7:	inc    DWORD PTR [ebp-0x10]
  41a8fa:	add    ecx,0x8
  41a8fd:	add    edx,edi
  41a8ff:	mov    DWORD PTR [ebp-0x18],ecx
  41a902:	cmp    DWORD PTR [ebp-0x10],edx
  41a905:	jb     0x41a86c
  41a90b:	pop    edi
  41a90c:	pop    ebx
  41a90d:	xor    eax,eax
  41a90f:	inc    eax
  41a910:	jmp    0x41a914
  41a912:	xor    eax,eax
  41a914:	pop    esi
  41a915:	leave  
  41a916:	ret    
  41a917:	push   ebp
  41a918:	mov    ebp,esp
  41a91a:	mov    ecx,DWORD PTR [ecx+0x190]
  41a920:	mov    eax,DWORD PTR [ebp+0xc]
  41a923:	sub    esp,0x10
  41a926:	push   ebx
  41a927:	xor    ebx,ebx
  41a929:	push   esi
  41a92a:	push   edi
  41a92b:	cmp    DWORD PTR [ecx],ebx
  41a92d:	je     0x41a9b5
  41a933:	cmp    eax,ebx
  41a935:	je     0x41a9b5
  41a937:	cmp    DWORD PTR [eax+0x78],ebx
  41a93a:	jne    0x41a941
  41a93c:	xor    eax,eax
  41a93e:	inc    eax
  41a93f:	jmp    0x41a9b7
  41a941:	mov    eax,DWORD PTR [eax+0x78]
  41a944:	add    eax,DWORD PTR [ebp+0x8]
  41a947:	mov    ecx,DWORD PTR [eax+0x1c]
  41a94a:	mov    edx,DWORD PTR [eax+0x24]
  41a94d:	mov    esi,DWORD PTR [eax+0x14]
  41a950:	mov    edi,DWORD PTR [eax+0x18]
  41a953:	add    ecx,DWORD PTR [ebp+0x8]
  41a956:	add    edx,DWORD PTR [ebp+0x8]
  41a959:	mov    DWORD PTR [ebp-0x4],esi
  41a95c:	cmp    esi,edi
  41a95e:	ja     0x41a963
  41a960:	mov    DWORD PTR [ebp-0x4],edi
  41a963:	mov    DWORD PTR [ebp-0x8],ebx
  41a966:	cmp    DWORD PTR [ebp-0x4],ebx
  41a969:	jbe    0x41a93c
  41a96b:	cmp    ebx,DWORD PTR [eax+0x14]
  41a96e:	jae    0x41a976
  41a970:	movzx  esi,WORD PTR [edx+ebx*2]
  41a974:	jmp    0x41a978
  41a976:	mov    esi,ebx
  41a978:	lea    esi,[ecx+esi*4]
  41a97b:	mov    edi,DWORD PTR [esi]
  41a97d:	test   edi,edi
  41a97f:	je     0x41a9aa
  41a981:	add    edi,DWORD PTR [ebp+0x8]
  41a984:	mov    DWORD PTR [ebp-0x10],edi
  41a987:	cmp    edi,eax
  41a989:	jbe    0x41a99b
  41a98b:	mov    ebx,DWORD PTR [ebp+0xc]
  41a98e:	mov    ebx,DWORD PTR [ebx+0x7c]
  41a991:	add    ebx,eax
  41a993:	cmp    edi,ebx
  41a995:	jae    0x41a99b
  41a997:	mov    esi,DWORD PTR [esi]
  41a999:	jmp    0x41a9a3
  41a99b:	sub    edi,DWORD PTR [ebp+0x8]
  41a99e:	mov    DWORD PTR [esi],edi
  41a9a0:	mov    esi,DWORD PTR [ebp-0x10]
  41a9a3:	test   esi,esi
  41a9a5:	je     0x41a9b5
  41a9a7:	mov    ebx,DWORD PTR [ebp-0x8]
  41a9aa:	inc    ebx
  41a9ab:	mov    DWORD PTR [ebp-0x8],ebx
  41a9ae:	cmp    ebx,DWORD PTR [ebp-0x4]
  41a9b1:	jb     0x41a96b
  41a9b3:	jmp    0x41a93c
  41a9b5:	xor    eax,eax
  41a9b7:	pop    edi
  41a9b8:	pop    esi
  41a9b9:	pop    ebx
  41a9ba:	leave  
  41a9bb:	ret    0x8
  41a9be:	push   ebp
  41a9bf:	mov    ebp,esp
  41a9c1:	sub    esp,0x2c
  41a9c4:	mov    edx,0xf89c85b9
  41a9c9:	mov    DWORD PTR [ebp-0x4],edx
  41a9cc:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41a9d3:	mov    eax,DWORD PTR [ebp-0x4]
  41a9d6:	mov    ecx,DWORD PTR [ebp-0x4]
  41a9d9:	mov    ecx,DWORD PTR [ebp-0x4]
  41a9dc:	mov    ecx,DWORD PTR [ebp-0x4]
  41a9df:	mov    ecx,DWORD PTR [ebp-0x4]
  41a9e2:	mov    ecx,DWORD PTR [ebp-0x4]
  41a9e5:	push   ebx
  41a9e6:	mov    ebx,DWORD PTR [ebp+0x10]
  41a9e9:	push   esi
  41a9ea:	mov    esi,0x7510899
  41a9ef:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41a9f6:	mov    ecx,DWORD PTR [ebp-0x4]
  41a9f9:	mov    ebx,DWORD PTR [ebx+0x190]
  41a9ff:	push   edi
  41aa00:	mov    edi,0x3272e0
  41aa05:	xor    ecx,esi
  41aa07:	xor    eax,esi
  41aa09:	add    eax,edi
  41aa0b:	add    ecx,edi
  41aa0d:	mov    DWORD PTR [ebp-0x18],eax
  41aa10:	cmp    ecx,DWORD PTR [ebx]
  41aa12:	je     0x41ac93
  41aa18:	mov    ebx,DWORD PTR [ebp-0x4]
  41aa1b:	mov    ecx,DWORD PTR [ebp+0xc]
  41aa1e:	xor    ebx,esi
  41aa20:	add    ebx,edi
  41aa22:	cmp    ebx,ecx
  41aa24:	je     0x41ac93
  41aa2a:	mov    ebx,DWORD PTR [ebp-0x4]
  41aa2d:	mov    ecx,DWORD PTR [ecx+0x80]
  41aa33:	xor    ebx,esi
  41aa35:	add    ebx,edi
  41aa37:	cmp    ecx,ebx
  41aa39:	je     0x41ac8e
  41aa3f:	add    ecx,DWORD PTR [ebp+0x8]
  41aa42:	mov    DWORD PTR [ebp-0x2c],ecx
  41aa45:	mov    ebx,edx
  41aa47:	xor    ebx,esi
  41aa49:	add    ebx,edi
  41aa4b:	mov    DWORD PTR [ebp-0x10],ebx
  41aa4e:	mov    ebx,DWORD PTR [ebp-0x10]
  41aa51:	cmp    ebx,edx
  41aa53:	je     0x41aa67
  41aa55:	mov    edx,DWORD PTR [ebp-0x10]
  41aa58:	mov    ebx,DWORD PTR [ebp-0x4]
  41aa5b:	imul   edx,edx,0x14
  41aa5e:	xor    ebx,esi
  41aa60:	add    ebx,edi
  41aa62:	cmp    DWORD PTR [edx+ecx*1],ebx
  41aa65:	jne    0x41aa7e
  41aa67:	mov    edx,DWORD PTR [ebp-0x10]
  41aa6a:	mov    ebx,DWORD PTR [ebp-0x4]
  41aa6d:	imul   edx,edx,0x14
  41aa70:	xor    ebx,esi
  41aa72:	add    ebx,edi
  41aa74:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41aa78:	je     0x41ac80
  41aa7e:	mov    eax,DWORD PTR [ebp-0x4]
  41aa81:	mov    ebx,DWORD PTR [ebp-0x4]
  41aa84:	mov    eax,DWORD PTR [ebp-0x10]
  41aa87:	imul   eax,eax,0x14
  41aa8a:	add    eax,ecx
  41aa8c:	mov    ecx,DWORD PTR [eax+0x10]
  41aa8f:	add    ecx,DWORD PTR [ebp+0x8]
  41aa92:	xor    ebx,esi
  41aa94:	mov    DWORD PTR [ebp-0x1c],ecx
  41aa97:	mov    ecx,DWORD PTR [ebp-0x4]
  41aa9a:	mov    edx,DWORD PTR [ebp-0x4]
  41aa9d:	xor    ecx,esi
  41aa9f:	add    ecx,edi
  41aaa1:	xor    edx,esi
  41aaa3:	mov    DWORD PTR [ebp-0x24],ecx
  41aaa6:	mov    ecx,DWORD PTR [eax]
  41aaa8:	add    edx,edi
  41aaaa:	add    ebx,edi
  41aaac:	cmp    ecx,edx
  41aaae:	je     0x41aab6
  41aab0:	add    ecx,DWORD PTR [ebp+0x8]
  41aab3:	mov    DWORD PTR [ebp-0x24],ecx
  41aab6:	mov    ecx,DWORD PTR [ebp-0x4]
  41aab9:	xor    ecx,esi
  41aabb:	add    ecx,DWORD PTR [eax+0xc]
  41aabe:	mov    eax,DWORD PTR [ebp+0x8]
  41aac1:	lea    eax,[ecx+eax*1+0x3272e0]
  41aac8:	mov    DWORD PTR [ebp+0xc],eax
  41aacb:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  41aad2:	mov    eax,DWORD PTR [ebp+0x10]
  41aad5:	push   DWORD PTR [ebp+0xc]
  41aad8:	mov    eax,DWORD PTR [eax+0x1d8]
  41aade:	call   DWORD PTR [eax]
  41aae0:	mov    ecx,DWORD PTR [ebp-0x4]
  41aae3:	xor    ecx,esi
  41aae5:	add    ecx,edi
  41aae7:	mov    DWORD PTR [ebp-0xc],eax
  41aaea:	cmp    ecx,eax
  41aaec:	jne    0x41ab00
  41aaee:	mov    eax,DWORD PTR [ebp+0x10]
  41aaf1:	push   DWORD PTR [ebp+0xc]
  41aaf4:	mov    eax,DWORD PTR [eax+0x1d8]
  41aafa:	call   DWORD PTR [eax+0xc]
  41aafd:	mov    DWORD PTR [ebp-0xc],eax
  41ab00:	mov    DWORD PTR [ebp-0x20],0x7f661b00
  41ab07:	mov    DWORD PTR [ebp-0x20],0xf89c9990
  41ab0e:	mov    eax,DWORD PTR [ebp-0x4]
  41ab11:	xor    eax,esi
  41ab13:	add    eax,edi
  41ab15:	cmp    eax,DWORD PTR [ebp-0xc]
  41ab18:	jne    0x41ab3d
  41ab1a:	mov    eax,DWORD PTR [ebp-0x8]
  41ab1d:	mov    ecx,DWORD PTR [ebp-0x20]
  41ab20:	xor    eax,esi
  41ab22:	xor    ecx,esi
  41ab24:	lea    ebx,[ebx+eax*1+0x3272e0]
  41ab2b:	mov    eax,DWORD PTR [ebp+0x10]
  41ab2e:	mov    eax,DWORD PTR [eax+0x1d8]
  41ab34:	add    ecx,edi
  41ab36:	imul   ecx,ebx
  41ab39:	push   ecx
  41ab3a:	call   DWORD PTR [eax+0x24]
  41ab3d:	mov    eax,DWORD PTR [ebp-0x4]
  41ab40:	xor    eax,esi
  41ab42:	add    eax,edi
  41ab44:	cmp    eax,DWORD PTR [ebp-0xc]
  41ab47:	jne    0x41ab58
  41ab49:	mov    eax,DWORD PTR [ebp-0x28]
  41ab4c:	xor    eax,esi
  41ab4e:	add    eax,edi
  41ab50:	cmp    ebx,eax
  41ab52:	jbe    0x41aad2
  41ab58:	mov    eax,DWORD PTR [ebp-0x4]
  41ab5b:	xor    eax,esi
  41ab5d:	add    eax,edi
  41ab5f:	cmp    eax,DWORD PTR [ebp-0xc]
  41ab62:	jne    0x41ab7b
  41ab64:	mov    eax,DWORD PTR [ebp-0x8]
  41ab67:	mov    ecx,DWORD PTR [ebp-0x18]
  41ab6a:	xor    eax,esi
  41ab6c:	lea    eax,[ecx+eax*1+0x3272e0]
  41ab73:	mov    DWORD PTR [ebp-0x18],eax
  41ab76:	jmp    0x41ac6a
  41ab7b:	mov    DWORD PTR [ebp-0x14],0x1121b01
  41ab82:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41ab89:	mov    ebx,DWORD PTR [ebp-0x4]
  41ab8c:	xor    ebx,esi
  41ab8e:	add    ebx,edi
  41ab90:	jmp    0x41ac57
  41ab95:	mov    eax,DWORD PTR [ebp-0x4]
  41ab98:	xor    eax,esi
  41ab9a:	add    eax,edi
  41ab9c:	mov    DWORD PTR [ebp-0x14],eax
  41ab9f:	mov    eax,DWORD PTR [ebp-0x4]
  41aba2:	xor    eax,esi
  41aba4:	add    eax,edi
  41aba6:	mov    DWORD PTR [ebp+0xc],eax
  41aba9:	mov    ecx,DWORD PTR [ebp-0x4]
  41abac:	mov    eax,DWORD PTR [ebp-0x24]
  41abaf:	xor    ecx,esi
  41abb1:	add    ecx,edi
  41abb3:	cmp    ecx,eax
  41abb5:	je     0x41abbd
  41abb7:	mov    eax,DWORD PTR [eax+ebx*4]
  41abba:	mov    DWORD PTR [ebp-0x14],eax
  41abbd:	mov    eax,DWORD PTR [ebp-0x1c]
  41abc0:	mov    eax,DWORD PTR [eax+ebx*4]
  41abc3:	mov    DWORD PTR [ebp+0xc],eax
  41abc6:	mov    eax,DWORD PTR [ebp-0x4]
  41abc9:	mov    ecx,DWORD PTR [ebp-0x14]
  41abcc:	xor    eax,esi
  41abce:	add    eax,edi
  41abd0:	cmp    eax,ecx
  41abd2:	je     0x41abfd
  41abd4:	mov    eax,DWORD PTR [ebp-0x4]
  41abd7:	mov    ecx,DWORD PTR [ebp-0x14]
  41abda:	xor    eax,esi
  41abdc:	add    eax,edi
  41abde:	shr    ecx,0x1f
  41abe1:	cmp    eax,ecx
  41abe3:	je     0x41abfd
  41abe5:	mov    ecx,DWORD PTR [ebp-0x14]
  41abe8:	mov    eax,DWORD PTR [ebp+0x10]
  41abeb:	mov    eax,DWORD PTR [eax+0x1d8]
  41abf1:	movzx  ecx,cx
  41abf4:	push   ecx
  41abf5:	push   DWORD PTR [ebp-0xc]
  41abf8:	call   DWORD PTR [eax+0x8]
  41abfb:	jmp    0x41ac16
  41abfd:	mov    eax,DWORD PTR [ebp+0xc]
  41ac00:	add    eax,DWORD PTR [ebp+0x8]
  41ac03:	mov    ecx,DWORD PTR [ebp+0x10]
  41ac06:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ac0c:	add    eax,0x2
  41ac0f:	push   eax
  41ac10:	push   DWORD PTR [ebp-0xc]
  41ac13:	call   DWORD PTR [ecx+0x8]
  41ac16:	mov    DWORD PTR [ebp+0xc],eax
  41ac19:	mov    eax,DWORD PTR [ebp-0x4]
  41ac1c:	mov    ecx,DWORD PTR [ebp+0xc]
  41ac1f:	xor    eax,esi
  41ac21:	add    eax,edi
  41ac23:	cmp    eax,ecx
  41ac25:	mov    eax,DWORD PTR [ebp-0x8]
  41ac28:	jne    0x41ac3b
  41ac2a:	mov    ecx,DWORD PTR [ebp-0x18]
  41ac2d:	xor    eax,esi
  41ac2f:	lea    eax,[ecx+eax*1+0x3272e0]
  41ac36:	mov    DWORD PTR [ebp-0x18],eax
  41ac39:	jmp    0x41ac4b
  41ac3b:	mov    ecx,DWORD PTR [ebp+0xc]
  41ac3e:	xor    eax,esi
  41ac40:	add    eax,edi
  41ac42:	imul   eax,ecx
  41ac45:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ac48:	mov    DWORD PTR [ecx+ebx*4],eax
  41ac4b:	mov    eax,DWORD PTR [ebp-0x8]
  41ac4e:	xor    eax,esi
  41ac50:	lea    ebx,[ebx+eax*1+0x3272e0]
  41ac57:	mov    eax,DWORD PTR [ebp-0x4]
  41ac5a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ac5d:	xor    eax,esi
  41ac5f:	add    eax,edi
  41ac61:	cmp    DWORD PTR [ecx+ebx*4],eax
  41ac64:	jne    0x41ab95
  41ac6a:	mov    edx,DWORD PTR [ebp-0x10]
  41ac6d:	mov    eax,DWORD PTR [ebp-0x18]
  41ac70:	mov    ecx,DWORD PTR [ebp-0x2c]
  41ac73:	sub    edx,0x3272df
  41ac79:	xor    edx,esi
  41ac7b:	jmp    0x41aa45
  41ac80:	mov    ecx,DWORD PTR [ebp-0x4]
  41ac83:	xor    ecx,esi
  41ac85:	add    ecx,edi
  41ac87:	cmp    eax,ecx
  41ac89:	mov    eax,DWORD PTR [ebp-0x4]
  41ac8c:	jne    0x41ac96
  41ac8e:	mov    eax,DWORD PTR [ebp-0x8]
  41ac91:	jmp    0x41ac96
  41ac93:	mov    eax,DWORD PTR [ebp-0x4]
  41ac96:	xor    eax,esi
  41ac98:	add    eax,edi
  41ac9a:	pop    edi
  41ac9b:	pop    esi
  41ac9c:	pop    ebx
  41ac9d:	leave  
  41ac9e:	ret    0xc
  41aca1:	push   ebp
  41aca2:	mov    ebp,esp
  41aca4:	sub    esp,0x28
  41aca7:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41acae:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41acb5:	mov    eax,DWORD PTR [ebp+0xc]
  41acb8:	mov    DWORD PTR [ebp+0xc],eax
  41acbb:	push   esi
  41acbc:	mov    eax,eax
  41acbe:	mov    eax,DWORD PTR [ebp-0x4]
  41acc1:	mov    esi,DWORD PTR [ebp+0x8]
  41acc4:	mov    ecx,0x7510899
  41acc9:	xor    eax,ecx
  41accb:	mov    edx,0x3272e0
  41acd0:	add    eax,edx
  41acd2:	cmp    esi,eax
  41acd4:	je     0x41adfb
  41acda:	mov    eax,DWORD PTR [ebp+0x8]
  41acdd:	mov    esi,DWORD PTR [ebp+0x8]
  41ace0:	add    esi,DWORD PTR [eax+0x3c]
  41ace3:	push   edi
  41ace4:	mov    DWORD PTR [ebp+0xc],esi
  41ace7:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  41acee:	mov    eax,DWORD PTR [ebp-0x1c]
  41acf1:	mov    esi,DWORD PTR [ebp-0x4]
  41acf4:	mov    edi,DWORD PTR [ebp+0xc]
  41acf7:	xor    esi,ecx
  41acf9:	xor    eax,ecx
  41acfb:	add    esi,edx
  41acfd:	cmp    DWORD PTR [edi+eax*8+0x1939778],esi
  41ad04:	je     0x41adf5
  41ad0a:	mov    esi,DWORD PTR [ebp+0xc]
  41ad0d:	mov    eax,DWORD PTR [ebp+0x8]
  41ad10:	add    eax,DWORD PTR [esi+0xa0]
  41ad16:	mov    esi,DWORD PTR [ebp+0x8]
  41ad19:	mov    edi,DWORD PTR [ebp+0xc]
  41ad1c:	sub    esi,DWORD PTR [edi+0x34]
  41ad1f:	mov    edi,DWORD PTR [ebp-0x4]
  41ad22:	xor    edi,ecx
  41ad24:	add    edi,edx
  41ad26:	mov    DWORD PTR [ebp-0x24],esi
  41ad29:	cmp    esi,edi
  41ad2b:	je     0x41adf5
  41ad31:	mov    esi,DWORD PTR [ebp-0x4]
  41ad34:	xor    esi,ecx
  41ad36:	add    esi,edx
  41ad38:	mov    DWORD PTR [ebp-0x8],esi
  41ad3b:	push   ebx
  41ad3c:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41ad43:	jmp    0x41addf
  41ad48:	mov    esi,DWORD PTR [ebp-0x4]
  41ad4b:	xor    esi,ecx
  41ad4d:	lea    edi,[ebx-0x8]
  41ad50:	add    esi,edx
  41ad52:	shr    edi,1
  41ad54:	cmp    esi,edi
  41ad56:	jae    0x41adc5
  41ad58:	sub    edi,esi
  41ad5a:	lea    ebx,[eax+esi*2+0x8]
  41ad5e:	mov    DWORD PTR [ebp-0x18],edi
  41ad61:	movzx  esi,WORD PTR [ebx]
  41ad64:	and    esi,0xfff
  41ad6a:	mov    DWORD PTR [ebp-0x14],esi
  41ad6d:	mov    edi,DWORD PTR [ebp-0x14]
  41ad70:	mov    esi,DWORD PTR [eax]
  41ad72:	sub    esi,edx
  41ad74:	add    edi,esi
  41ad76:	movzx  esi,WORD PTR [ebx]
  41ad79:	shr    esi,0xc
  41ad7c:	xor    edi,ecx
  41ad7e:	mov    DWORD PTR [ebp-0x20],edi
  41ad81:	mov    DWORD PTR [ebp-0x14],esi
  41ad84:	mov    esi,DWORD PTR [ebp-0x20]
  41ad87:	mov    edi,DWORD PTR [ebp+0x8]
  41ad8a:	xor    esi,ecx
  41ad8c:	lea    esi,[esi+edi*1+0x3272e0]
  41ad93:	mov    DWORD PTR [ebp-0x20],esi
  41ad96:	mov    esi,DWORD PTR [ebp-0x10]
  41ad99:	mov    edi,DWORD PTR [ebp-0x14]
  41ad9c:	xor    esi,ecx
  41ad9e:	add    esi,edx
  41ada0:	cmp    edi,esi
  41ada2:	jne    0x41adba
  41ada4:	mov    esi,DWORD PTR [ebp-0x10]
  41ada7:	mov    edi,DWORD PTR [ebp-0x14]
  41adaa:	xor    esi,ecx
  41adac:	add    esi,edx
  41adae:	cmp    edi,esi
  41adb0:	jne    0x41adba
  41adb2:	mov    esi,DWORD PTR [ebp-0x20]
  41adb5:	mov    edi,DWORD PTR [ebp-0x24]
  41adb8:	add    DWORD PTR [esi],edi
  41adba:	add    ebx,0x2
  41adbd:	dec    DWORD PTR [ebp-0x18]
  41adc0:	jne    0x41ad61
  41adc2:	mov    ebx,DWORD PTR [ebp-0xc]
  41adc5:	add    DWORD PTR [ebp-0x8],ebx
  41adc8:	mov    esi,DWORD PTR [ebp-0x1c]
  41adcb:	mov    edi,DWORD PTR [ebp-0x8]
  41adce:	mov    ebx,DWORD PTR [ebp+0xc]
  41add1:	xor    esi,ecx
  41add3:	cmp    edi,DWORD PTR [ebx+esi*8+0x193977c]
  41adda:	jae    0x41adf4
  41addc:	add    eax,DWORD PTR [ebp-0xc]
  41addf:	mov    esi,DWORD PTR [ebp-0x4]
  41ade2:	mov    ebx,DWORD PTR [eax+0x4]
  41ade5:	xor    esi,ecx
  41ade7:	add    esi,edx
  41ade9:	mov    DWORD PTR [ebp-0xc],ebx
  41adec:	cmp    ebx,esi
  41adee:	jne    0x41ad48
  41adf4:	pop    ebx
  41adf5:	mov    eax,DWORD PTR [ebp-0x28]
  41adf8:	pop    edi
  41adf9:	jmp    0x41adfe
  41adfb:	mov    eax,DWORD PTR [ebp-0x4]
  41adfe:	xor    eax,ecx
  41ae00:	add    eax,edx
  41ae02:	pop    esi
  41ae03:	leave  
  41ae04:	ret    0x8
  41ae07:	push   ebp
  41ae08:	mov    ebp,esp
  41ae0a:	sub    esp,0xcc
  41ae10:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41ae17:	mov    DWORD PTR [ebp-0x24],0xf89c85b8
  41ae1e:	mov    eax,DWORD PTR [ebp-0x4]
  41ae21:	push   ebx
  41ae22:	push   esi
  41ae23:	mov    esi,0x7510899
  41ae28:	xor    eax,esi
  41ae2a:	push   edi
  41ae2b:	mov    edi,0x3272e0
  41ae30:	add    eax,edi
  41ae32:	mov    DWORD PTR [ebp-0x1c],eax
  41ae35:	mov    eax,DWORD PTR [ebp-0x4]
  41ae38:	xor    eax,esi
  41ae3a:	add    eax,edi
  41ae3c:	mov    DWORD PTR [ebp-0x8],eax
  41ae3f:	mov    ebx,DWORD PTR [ebp+0x20]
  41ae42:	mov    eax,DWORD PTR [ebp-0x14]
  41ae45:	mov    ecx,DWORD PTR [ebp-0x14]
  41ae48:	xor    eax,ecx
  41ae4a:	mov    DWORD PTR [ebp-0x14],eax
  41ae4d:	add    DWORD PTR [ebp-0x14],0xf89cb5b9
  41ae54:	mov    eax,DWORD PTR [ebp-0xc]
  41ae57:	mov    ecx,DWORD PTR [ebp-0xc]
  41ae5a:	xor    eax,ecx
  41ae5c:	mov    DWORD PTR [ebp-0xc],eax
  41ae5f:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  41ae66:	mov    eax,DWORD PTR [ebp-0x10]
  41ae69:	mov    ecx,DWORD PTR [ebp-0x10]
  41ae6c:	xor    eax,ecx
  41ae6e:	mov    DWORD PTR [ebp-0x10],eax
  41ae71:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  41ae78:	mov    eax,DWORD PTR [ebp-0x20]
  41ae7b:	mov    ecx,DWORD PTR [ebp-0x20]
  41ae7e:	xor    eax,ecx
  41ae80:	mov    DWORD PTR [ebp-0x20],eax
  41ae83:	add    DWORD PTR [ebp-0x20],0xf89f05b9
  41ae8a:	mov    eax,0x9471
  41ae8f:	mov    WORD PTR [ebp+0x20],ax
  41ae93:	mov    eax,DWORD PTR [ebp+0x8]
  41ae96:	test   eax,eax
  41ae98:	je     0x41b2f5
  41ae9e:	mov    eax,DWORD PTR [ebp+0xc]
  41aea1:	test   eax,eax
  41aea3:	je     0x41b2f5
  41aea9:	mov    eax,DWORD PTR [ebp+0x18]
  41aeac:	test   eax,eax
  41aeae:	je     0x41b2f5
  41aeb4:	mov    ax,WORD PTR [ebp+0x20]
  41aeb8:	mov    ecx,0x8a8c
  41aebd:	xor    ax,cx
  41aec0:	mov    ecx,0x3b50
  41aec5:	add    ax,cx
  41aec8:	mov    ecx,DWORD PTR [ebp+0x8]
  41aecb:	cmp    WORD PTR [ecx],ax
  41aece:	jne    0x41b2f5
  41aed4:	mov    eax,DWORD PTR [ebp-0x4]
  41aed7:	xor    eax,esi
  41aed9:	add    eax,edi
  41aedb:	mov    DWORD PTR [ebp-0x30],eax
  41aede:	mov    eax,DWORD PTR [ebp-0x4]
  41aee1:	mov    ecx,DWORD PTR [ebp+0x8]
  41aee4:	mov    eax,DWORD PTR [ebp+0x8]
  41aee7:	add    eax,DWORD PTR [ecx+0x3c]
  41aeea:	mov    DWORD PTR [ebp+0xc],eax
  41aeed:	mov    eax,DWORD PTR [eax+0x50]
  41aef0:	test   eax,eax
  41aef2:	je     0x41b2f5
  41aef8:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  41aeff:	mov    eax,DWORD PTR [ebp-0x2c]
  41af02:	xor    eax,esi
  41af04:	add    eax,edi
  41af06:	mov    DWORD PTR [ebp-0x2c],eax
  41af09:	mov    eax,DWORD PTR [ebp-0x4]
  41af0c:	mov    eax,DWORD PTR [ebx+0x190]
  41af12:	mov    ecx,DWORD PTR [eax]
  41af14:	mov    ecx,DWORD PTR [ecx+0x3c]
  41af17:	add    ecx,DWORD PTR [eax]
  41af19:	mov    eax,DWORD PTR [ebp-0x4]
  41af1c:	mov    eax,DWORD PTR [ebx+0x18c]
  41af22:	mov    edx,DWORD PTR [eax]
  41af24:	mov    DWORD PTR [ebp-0x18],ecx
  41af27:	mov    DWORD PTR [ebp+0x20],edx
  41af2a:	cmp    edx,edx
  41af2c:	jne    0x41af61
  41af2e:	mov    eax,DWORD PTR [ebx+0x1d8]
  41af34:	lea    edx,[ebp-0x1c]
  41af37:	push   edx
  41af38:	mov    edx,DWORD PTR [ebp-0xc]
  41af3b:	xor    edx,esi
  41af3d:	add    edx,edi
  41af3f:	push   edx
  41af40:	push   DWORD PTR [ecx+0x50]
  41af43:	push   DWORD PTR [ebp+0x20]
  41af46:	call   DWORD PTR [eax+0x1c]
  41af49:	mov    ecx,DWORD PTR [ebp-0x18]
  41af4c:	mov    eax,DWORD PTR [ecx+0x54]
  41af4f:	mov    ecx,DWORD PTR [ecx+0x50]
  41af52:	sub    ecx,eax
  41af54:	add    eax,DWORD PTR [ebp+0x20]
  41af57:	push   ecx
  41af58:	push   eax
  41af59:	call   0x41b909
  41af5e:	mov    edx,DWORD PTR [ebp+0x20]
  41af61:	mov    eax,DWORD PTR [ebx+0x194]
  41af67:	mov    DWORD PTR [eax],edx
  41af69:	mov    eax,DWORD PTR [ebp+0xc]
  41af6c:	push   DWORD PTR [eax+0x54]
  41af6f:	push   DWORD PTR [ebp+0x8]
  41af72:	push   edx
  41af73:	call   0x41b7b0
  41af78:	mov    ecx,DWORD PTR [ebp+0x20]
  41af7b:	mov    eax,DWORD PTR [ecx+0x3c]
  41af7e:	add    eax,ecx
  41af80:	movzx  ecx,WORD PTR [eax+0x14]
  41af84:	lea    ecx,[ecx+eax*1+0x18]
  41af88:	mov    DWORD PTR [ebp+0x18],ecx
  41af8b:	mov    ecx,DWORD PTR [ebp-0x4]
  41af8e:	movzx  edx,WORD PTR [eax+0x6]
  41af92:	xor    ecx,esi
  41af94:	add    ecx,edi
  41af96:	mov    DWORD PTR [ebp+0xc],eax
  41af99:	cmp    edx,ecx
  41af9b:	je     0x41b049
  41afa1:	mov    ecx,DWORD PTR [ebp-0x4]
  41afa4:	xor    ecx,esi
  41afa6:	add    ecx,edi
  41afa8:	mov    DWORD PTR [ebp-0x8],ecx
  41afab:	mov    ecx,DWORD PTR [ebp-0x24]
  41afae:	movzx  edx,WORD PTR [eax+0x6]
  41afb2:	xor    ecx,esi
  41afb4:	sub    edx,ecx
  41afb6:	sub    edx,edi
  41afb8:	cmp    DWORD PTR [ebp-0x8],edx
  41afbb:	ja     0x41b049
  41afc1:	mov    edx,DWORD PTR [ebp+0x18]
  41afc4:	add    edx,0x8
  41afc7:	mov    DWORD PTR [ebp+0x18],edx
  41afca:	jmp    0x41afcf
  41afcc:	mov    edx,DWORD PTR [ebp+0x18]
  41afcf:	mov    eax,DWORD PTR [eax+0x38]
  41afd2:	lea    ecx,[eax-0x1]
  41afd5:	mov    DWORD PTR [ebp-0x34],eax
  41afd8:	mov    eax,DWORD PTR [edx]
  41afda:	test   ecx,eax
  41afdc:	je     0x41afe5
  41afde:	not    ecx
  41afe0:	and    eax,ecx
  41afe2:	add    eax,DWORD PTR [ebp-0x34]
  41afe5:	push   eax
  41afe6:	mov    eax,DWORD PTR [edx+0x4]
  41afe9:	add    eax,DWORD PTR [ebp+0x20]
  41afec:	push   eax
  41afed:	call   0x41b909
  41aff2:	mov    edx,DWORD PTR [ebp-0x4]
  41aff5:	mov    eax,DWORD PTR [ebp+0x18]
  41aff8:	mov    ecx,DWORD PTR [eax+0x8]
  41affb:	xor    edx,esi
  41affd:	add    edx,edi
  41afff:	cmp    ecx,edx
  41b001:	je     0x41b01a
  41b003:	push   ecx
  41b004:	mov    ecx,DWORD PTR [ebp+0x8]
  41b007:	add    ecx,DWORD PTR [eax+0xc]
  41b00a:	mov    eax,DWORD PTR [eax+0x4]
  41b00d:	add    eax,DWORD PTR [ebp+0x20]
  41b010:	push   ecx
  41b011:	push   eax
  41b012:	call   0x41b7b0
  41b017:	mov    eax,DWORD PTR [ebp+0x18]
  41b01a:	mov    ecx,DWORD PTR [ebp-0x24]
  41b01d:	mov    edx,DWORD PTR [ebp-0x8]
  41b020:	add    eax,0x28
  41b023:	xor    ecx,esi
  41b025:	lea    ecx,[edx+ecx*1+0x3272e0]
  41b02c:	mov    edx,DWORD PTR [ebp+0xc]
  41b02f:	mov    DWORD PTR [ebp+0x18],eax
  41b032:	mov    eax,DWORD PTR [ebp-0x24]
  41b035:	movzx  edx,WORD PTR [edx+0x6]
  41b039:	xor    eax,esi
  41b03b:	sub    edx,eax
  41b03d:	mov    eax,DWORD PTR [ebp+0xc]
  41b040:	sub    edx,edi
  41b042:	mov    DWORD PTR [ebp-0x8],ecx
  41b045:	cmp    ecx,edx
  41b047:	jbe    0x41afcc
  41b049:	mov    edx,DWORD PTR [ebx+0x18c]
  41b04f:	mov    ecx,DWORD PTR [ebp+0x20]
  41b052:	cmp    ecx,DWORD PTR [edx]
  41b054:	jne    0x41b07d
  41b056:	mov    eax,DWORD PTR [ebx+0x1d8]
  41b05c:	lea    edx,[ebp-0x1c]
  41b05f:	push   edx
  41b060:	mov    edx,DWORD PTR [ebp-0x10]
  41b063:	xor    edx,esi
  41b065:	add    edx,edi
  41b067:	push   edx
  41b068:	mov    edx,DWORD PTR [ebp-0x18]
  41b06b:	push   DWORD PTR [edx+0x54]
  41b06e:	push   ecx
  41b06f:	call   DWORD PTR [eax+0x1c]
  41b072:	test   eax,eax
  41b074:	je     0x41b2e6
  41b07a:	mov    eax,DWORD PTR [ebp+0xc]
  41b07d:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41b083:	mov    ecx,DWORD PTR [ecx]
  41b085:	xor    ecx,esi
  41b087:	add    ecx,edi
  41b089:	je     0x41b211
  41b08f:	and    DWORD PTR [ebp-0x28],0x0
  41b093:	and    DWORD PTR [ebp+0x8],0x0
  41b097:	mov    eax,0xf89c851d
  41b09c:	lea    ecx,[eax-0x8]
  41b09f:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41b0a6:	mov    DWORD PTR [ebp-0x48],0xf89c850d
  41b0ad:	mov    DWORD PTR [ebp-0x44],eax
  41b0b0:	mov    DWORD PTR [ebp-0x40],ecx
  41b0b3:	mov    DWORD PTR [ebp-0x3c],ecx
  41b0b6:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  41b0bd:	mov    edx,DWORD PTR [ebp+0x8]
  41b0c0:	mov    ecx,0x899
  41b0c5:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41b0ca:	mov    edx,0x72e0
  41b0cf:	add    cx,dx
  41b0d2:	mov    edx,DWORD PTR [ebp+0x8]
  41b0d5:	inc    DWORD PTR [ebp+0x8]
  41b0d8:	cmp    DWORD PTR [ebp+0x8],0x6
  41b0dc:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41b0e4:	jb     0x41b0bd
  41b0e6:	mov    ecx,0xf89c850b
  41b0eb:	mov    DWORD PTR [ebp-0xa4],eax
  41b0f1:	mov    DWORD PTR [ebp-0x90],eax
  41b0f7:	mov    DWORD PTR [ebp-0x68],eax
  41b0fa:	mov    DWORD PTR [ebp-0x64],eax
  41b0fd:	lea    eax,[ecx-0x1]
  41b100:	mov    edx,0xf89c85ff
  41b105:	mov    DWORD PTR [ebp-0x58],eax
  41b108:	mov    DWORD PTR [ebp-0x54],eax
  41b10b:	mov    DWORD PTR [ebp-0xa8],0xf89c85f5
  41b115:	mov    DWORD PTR [ebp-0xa0],ecx
  41b11b:	mov    DWORD PTR [ebp-0x9c],edx
  41b121:	mov    DWORD PTR [ebp-0x98],0xf89c8510
  41b12b:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41b135:	mov    DWORD PTR [ebp-0x8c],0xf89c85fc
  41b13f:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41b149:	mov    DWORD PTR [ebp-0x84],0xf89c850d
  41b153:	mov    DWORD PTR [ebp-0x80],ecx
  41b156:	mov    DWORD PTR [ebp-0x7c],0xf89c8500
  41b15d:	mov    DWORD PTR [ebp-0x78],edx
  41b160:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41b167:	mov    DWORD PTR [ebp-0x70],ecx
  41b16a:	mov    DWORD PTR [ebp-0x6c],0xf89c85f8
  41b171:	mov    DWORD PTR [ebp-0x60],ecx
  41b174:	mov    DWORD PTR [ebp-0x5c],0xf89c851c
  41b17b:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  41b182:	xor    eax,eax
  41b184:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41b18b:	xor    cl,0x99
  41b18e:	sub    cl,0x20
  41b191:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41b198:	inc    eax
  41b199:	cmp    eax,0x17
  41b19c:	jb     0x41b184
  41b19e:	mov    eax,DWORD PTR [ebx+0x1d8]
  41b1a4:	lea    ecx,[ebp-0xb4]
  41b1aa:	push   ecx
  41b1ab:	call   DWORD PTR [eax+0x4]
  41b1ae:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41b1b4:	lea    edx,[ebp-0xcc]
  41b1ba:	push   edx
  41b1bb:	push   eax
  41b1bc:	call   DWORD PTR [ecx+0x8]
  41b1bf:	lea    ecx,[ebp-0x28]
  41b1c2:	push   ecx
  41b1c3:	mov    ecx,DWORD PTR [ebx+0x18c]
  41b1c9:	push   DWORD PTR [ecx]
  41b1cb:	call   eax
  41b1cd:	mov    eax,DWORD PTR [ebp-0x28]
  41b1d0:	test   eax,eax
  41b1d2:	je     0x41b20e
  41b1d4:	mov    DWORD PTR [ebp+0x8],eax
  41b1d7:	jmp    0x41b1e3
  41b1d9:	mov    eax,DWORD PTR [eax]
  41b1db:	mov    DWORD PTR [ebp-0x28],eax
  41b1de:	cmp    eax,DWORD PTR [ebp+0x8]
  41b1e1:	je     0x41b1f0
  41b1e3:	mov    edx,DWORD PTR [eax+0x18]
  41b1e6:	mov    ecx,DWORD PTR [ebx+0x18c]
  41b1ec:	cmp    edx,DWORD PTR [ecx]
  41b1ee:	jne    0x41b1d9
  41b1f0:	mov    edx,DWORD PTR [eax+0x18]
  41b1f3:	mov    ecx,DWORD PTR [ebx+0x18c]
  41b1f9:	cmp    edx,DWORD PTR [ecx]
  41b1fb:	jne    0x41b20e
  41b1fd:	mov    edx,DWORD PTR [ebp-0x18]
  41b200:	mov    ecx,DWORD PTR [ebx+0x190]
  41b206:	mov    edx,DWORD PTR [edx+0x28]
  41b209:	add    edx,DWORD PTR [ecx]
  41b20b:	mov    DWORD PTR [eax+0x1c],edx
  41b20e:	mov    eax,DWORD PTR [ebp+0xc]
  41b211:	push   ebx
  41b212:	push   eax
  41b213:	push   DWORD PTR [ebp+0x20]
  41b216:	call   0x41a9be
  41b21b:	test   eax,eax
  41b21d:	je     0x41b2e6
  41b223:	push   DWORD PTR [ebp+0xc]
  41b226:	mov    ecx,ebx
  41b228:	push   DWORD PTR [ebp+0x20]
  41b22b:	call   0x41a917
  41b230:	test   eax,eax
  41b232:	je     0x41b2e6
  41b238:	mov    eax,DWORD PTR [ebp+0xc]
  41b23b:	mov    edx,DWORD PTR [ebp+0x20]
  41b23e:	mov    ecx,ebx
  41b240:	call   0x41a7f0
  41b245:	test   eax,eax
  41b247:	je     0x41b2e6
  41b24d:	push   ebx
  41b24e:	push   DWORD PTR [ebp+0x20]
  41b251:	call   0x41aca1
  41b256:	test   eax,eax
  41b258:	je     0x41b2e6
  41b25e:	mov    eax,DWORD PTR [ebx+0x18c]
  41b264:	mov    edx,DWORD PTR [ebp+0x20]
  41b267:	cmp    edx,DWORD PTR [eax]
  41b269:	jne    0x41b285
  41b26b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41b271:	lea    ecx,[ebp-0x1c]
  41b274:	push   ecx
  41b275:	push   DWORD PTR [ebp-0x1c]
  41b278:	mov    ecx,DWORD PTR [ebp-0x18]
  41b27b:	push   DWORD PTR [ecx+0x54]
  41b27e:	push   edx
  41b27f:	call   DWORD PTR [eax+0x1c]
  41b282:	mov    edx,DWORD PTR [ebp+0x20]
  41b285:	mov    eax,DWORD PTR [ebx+0x1c8]
  41b28b:	mov    eax,DWORD PTR [eax]
  41b28d:	xor    eax,esi
  41b28f:	add    eax,edi
  41b291:	je     0x41b2ca
  41b293:	mov    ecx,DWORD PTR [ebp+0xc]
  41b296:	mov    eax,DWORD PTR [ecx+0x28]
  41b299:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  41b2a0:	mov    esi,DWORD PTR [ebp+0x8]
  41b2a3:	push   DWORD PTR [ebp+0x14]
  41b2a6:	xor    esi,0x899
  41b2ac:	push   DWORD PTR [ebp+0x10]
  41b2af:	add    esi,0x72e0
  41b2b5:	or     WORD PTR [ecx+0x16],si
  41b2b9:	add    eax,edx
  41b2bb:	push   edx
  41b2bc:	call   eax
  41b2be:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b8
  41b2c8:	jmp    0x41b2d4
  41b2ca:	mov    eax,DWORD PTR [ebp+0xc]
  41b2cd:	mov    eax,DWORD PTR [eax+0x28]
  41b2d0:	add    eax,edx
  41b2d2:	call   eax
  41b2d4:	mov    DWORD PTR [ebp-0x8],eax
  41b2d7:	mov    eax,DWORD PTR [ebp-0x8]
  41b2da:	mov    ecx,DWORD PTR [ebp+0x1c]
  41b2dd:	mov    DWORD PTR [ecx],eax
  41b2df:	mov    DWORD PTR [ebp-0x30],0x1
  41b2e6:	cmp    DWORD PTR [ebp-0x30],0x0
  41b2ea:	jne    0x41b2f0
  41b2ec:	and    DWORD PTR [ebp+0x20],0x0
  41b2f0:	mov    eax,DWORD PTR [ebp+0x20]
  41b2f3:	jmp    0x41b2f7
  41b2f5:	xor    eax,eax
  41b2f7:	pop    edi
  41b2f8:	pop    esi
  41b2f9:	pop    ebx
  41b2fa:	leave  
  41b2fb:	ret    0x1c
  41b2fe:	push   ebp
  41b2ff:	mov    ebp,esp
  41b301:	movzx  edx,WORD PTR [ecx+0x6]
  41b305:	movzx  eax,WORD PTR [ecx+0x14]
  41b309:	push   ebx
  41b30a:	push   edi
  41b30b:	xor    edi,edi
  41b30d:	lea    eax,[eax+ecx*1+0x18]
  41b311:	test   edx,edx
  41b313:	je     0x41b334
  41b315:	mov    ecx,DWORD PTR [eax+0xc]
  41b318:	lea    ebx,[ecx+esi*1]
  41b31b:	cmp    DWORD PTR [ebp+0x8],ebx
  41b31e:	jb     0x41b32c
  41b320:	mov    ebx,DWORD PTR [eax+0x8]
  41b323:	add    ebx,ecx
  41b325:	add    ebx,esi
  41b327:	cmp    DWORD PTR [ebp+0x8],ebx
  41b32a:	jb     0x41b336
  41b32c:	add    eax,0x28
  41b32f:	inc    edi
  41b330:	cmp    edi,edx
  41b332:	jb     0x41b315
  41b334:	xor    eax,eax
  41b336:	pop    edi
  41b337:	pop    ebx
  41b338:	pop    ebp
  41b339:	ret    0x4
  41b33c:	push   ebp
  41b33d:	mov    ebp,esp
  41b33f:	sub    esp,0x28
  41b342:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  41b349:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  41b350:	mov    DWORD PTR [ebp-0x28],0xf89c85bb
  41b357:	mov    eax,0x4f9d
  41b35c:	mov    WORD PTR [ebp-0xc],ax
  41b360:	mov    eax,0x4e7d
  41b365:	mov    WORD PTR [ebp-0x4],ax
  41b369:	mov    eax,0x4fa6
  41b36e:	mov    WORD PTR [ebp-0x8],ax
  41b372:	add    eax,0xffffffe0
  41b375:	mov    WORD PTR [ebp-0x8],ax
  41b379:	mov    eax,DWORD PTR [ebp+0x8]
  41b37c:	mov    DWORD PTR [ebp-0x14],eax
  41b37f:	mov    eax,DWORD PTR [ebp+0xc]
  41b382:	mov    DWORD PTR [ebp-0x18],eax
  41b385:	mov    eax,DWORD PTR [ebp-0x10]
  41b388:	push   ebx
  41b389:	mov    ecx,0x7510899
  41b38e:	xor    eax,ecx
  41b390:	push   esi
  41b391:	mov    esi,DWORD PTR [ebp-0x14]
  41b394:	mov    edx,0x3272e0
  41b399:	add    eax,edx
  41b39b:	push   edi
  41b39c:	cmp    esi,eax
  41b39e:	je     0x41b59c
  41b3a4:	mov    eax,DWORD PTR [ebp-0x10]
  41b3a7:	mov    esi,DWORD PTR [ebp-0x18]
  41b3aa:	xor    eax,ecx
  41b3ac:	add    eax,edx
  41b3ae:	cmp    esi,eax
  41b3b0:	je     0x41b59c
  41b3b6:	mov    eax,DWORD PTR [ebp-0x10]
  41b3b9:	xor    eax,ecx
  41b3bb:	add    eax,edx
  41b3bd:	mov    DWORD PTR [ebp-0x20],eax
  41b3c0:	mov    eax,DWORD PTR [ebp-0x10]
  41b3c3:	xor    eax,ecx
  41b3c5:	add    eax,edx
  41b3c7:	mov    DWORD PTR [ebp-0x24],eax
  41b3ca:	movzx  esi,WORD PTR [ebp-0x4]
  41b3ce:	movzx  edi,WORD PTR [ebp-0xc]
  41b3d2:	mov    eax,0x8a8c
  41b3d7:	xor    si,ax
  41b3da:	mov    ebx,0x8a8c
  41b3df:	xor    di,bx
  41b3e2:	mov    eax,0x3b50
  41b3e7:	add    si,ax
  41b3ea:	add    di,ax
  41b3ed:	sub    edi,esi
  41b3ef:	mov    WORD PTR [ebp-0xc],di
  41b3f3:	mov    esi,DWORD PTR [ebp-0x20]
  41b3f6:	mov    edi,DWORD PTR [ebp-0x14]
  41b3f9:	mov    si,WORD PTR [edi+esi*2]
  41b3fd:	mov    WORD PTR [ebp+0x8],si
  41b401:	mov    esi,DWORD PTR [ebp-0x24]
  41b404:	mov    edi,DWORD PTR [ebp-0x18]
  41b407:	mov    si,WORD PTR [edi+esi*2]
  41b40b:	mov    WORD PTR [ebp+0xc],si
  41b40f:	mov    esi,0x72e0
  41b414:	jmp    0x41b521
  41b419:	mov    edi,DWORD PTR [ebp-0x10]
  41b41c:	mov    bx,WORD PTR [ebp+0xc]
  41b420:	xor    edi,0x899
  41b426:	add    edi,esi
  41b428:	cmp    bx,di
  41b42b:	je     0x41b54b
  41b431:	mov    edi,DWORD PTR [ebp-0x10]
  41b434:	mov    ebx,DWORD PTR [ebp+0x10]
  41b437:	xor    edi,ecx
  41b439:	add    edi,edx
  41b43b:	cmp    ebx,edi
  41b43d:	mov    di,WORD PTR [ebp+0xc]
  41b441:	mov    bx,WORD PTR [ebp+0x8]
  41b445:	je     0x41b4d8
  41b44b:	cmp    bx,di
  41b44e:	je     0x41b4e1
  41b454:	mov    di,WORD PTR [ebp-0x4]
  41b458:	mov    ebx,0x8a8c
  41b45d:	xor    di,bx
  41b460:	mov    bx,WORD PTR [ebp+0x8]
  41b464:	add    di,ax
  41b467:	cmp    bx,di
  41b46a:	jb     0x41b492
  41b46c:	mov    di,WORD PTR [ebp-0x8]
  41b470:	mov    ebx,0x8a8c
  41b475:	xor    di,bx
  41b478:	mov    bx,WORD PTR [ebp+0x8]
  41b47c:	add    di,ax
  41b47f:	cmp    bx,di
  41b482:	ja     0x41b492
  41b484:	movzx  edi,WORD PTR [ebp+0x8]
  41b488:	movzx  ebx,WORD PTR [ebp-0xc]
  41b48c:	add    edi,ebx
  41b48e:	mov    WORD PTR [ebp+0x8],di
  41b492:	mov    di,WORD PTR [ebp-0x4]
  41b496:	mov    ebx,0x8a8c
  41b49b:	xor    di,bx
  41b49e:	mov    bx,WORD PTR [ebp+0xc]
  41b4a2:	add    di,ax
  41b4a5:	cmp    bx,di
  41b4a8:	jb     0x41b4d0
  41b4aa:	mov    di,WORD PTR [ebp-0x8]
  41b4ae:	mov    ebx,0x8a8c
  41b4b3:	xor    di,bx
  41b4b6:	mov    bx,WORD PTR [ebp+0xc]
  41b4ba:	add    di,ax
  41b4bd:	cmp    bx,di
  41b4c0:	ja     0x41b4d0
  41b4c2:	movzx  edi,WORD PTR [ebp+0xc]
  41b4c6:	movzx  ebx,WORD PTR [ebp-0xc]
  41b4ca:	add    edi,ebx
  41b4cc:	mov    WORD PTR [ebp+0xc],di
  41b4d0:	mov    di,WORD PTR [ebp+0xc]
  41b4d4:	mov    bx,WORD PTR [ebp+0x8]
  41b4d8:	cmp    bx,di
  41b4db:	jne    0x41b59c
  41b4e1:	mov    edi,DWORD PTR [ebp-0x28]
  41b4e4:	mov    ebx,DWORD PTR [ebp-0x14]
  41b4e7:	xor    edi,ecx
  41b4e9:	lea    edi,[edi+ebx*1+0x3272e0]
  41b4f0:	mov    DWORD PTR [ebp-0x14],edi
  41b4f3:	mov    edi,DWORD PTR [ebp-0x28]
  41b4f6:	mov    ebx,DWORD PTR [ebp-0x18]
  41b4f9:	xor    edi,ecx
  41b4fb:	lea    edi,[edi+ebx*1+0x3272e0]
  41b502:	mov    DWORD PTR [ebp-0x18],edi
  41b505:	mov    edi,DWORD PTR [ebp-0x20]
  41b508:	mov    ebx,DWORD PTR [ebp-0x14]
  41b50b:	mov    di,WORD PTR [ebx+edi*2]
  41b50f:	mov    WORD PTR [ebp+0x8],di
  41b513:	mov    edi,DWORD PTR [ebp-0x24]
  41b516:	mov    ebx,DWORD PTR [ebp-0x18]
  41b519:	mov    di,WORD PTR [ebx+edi*2]
  41b51d:	mov    WORD PTR [ebp+0xc],di
  41b521:	mov    edi,DWORD PTR [ebp-0x10]
  41b524:	mov    bx,WORD PTR [ebp+0x8]
  41b528:	xor    edi,0x899
  41b52e:	add    edi,esi
  41b530:	cmp    bx,di
  41b533:	jne    0x41b419
  41b539:	mov    esi,DWORD PTR [ebp-0x1c]
  41b53c:	xor    esi,ecx
  41b53e:	mov    ecx,DWORD PTR [ebp-0x10]
  41b541:	add    esi,edx
  41b543:	imul   esi,ecx
  41b546:	mov    DWORD PTR [ebp-0x10],esi
  41b549:	jmp    0x41b55d
  41b54b:	mov    edx,DWORD PTR [ebp-0x10]
  41b54e:	xor    edx,ecx
  41b550:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b553:	lea    ecx,[edx+ecx*1+0x3272e0]
  41b55a:	mov    DWORD PTR [ebp-0x1c],ecx
  41b55d:	mov    edx,DWORD PTR [ebp-0x20]
  41b560:	mov    esi,DWORD PTR [ebp-0x14]
  41b563:	mov    si,WORD PTR [esi+edx*2]
  41b567:	mov    ecx,eax
  41b569:	sub    si,cx
  41b56c:	mov    edx,0x8a8c
  41b571:	xor    si,dx
  41b574:	mov    ecx,0x4e3c
  41b579:	cmp    si,cx
  41b57c:	jne    0x41b597
  41b57e:	mov    esi,DWORD PTR [ebp-0x24]
  41b581:	mov    edi,DWORD PTR [ebp-0x18]
  41b584:	mov    si,WORD PTR [edi+esi*2]
  41b588:	sub    si,ax
  41b58b:	xor    si,dx
  41b58e:	cmp    si,cx
  41b591:	jne    0x41b597
  41b593:	xor    eax,eax
  41b595:	jmp    0x41b5a3
  41b597:	xor    eax,eax
  41b599:	inc    eax
  41b59a:	jmp    0x41b5a3
  41b59c:	mov    eax,DWORD PTR [ebp-0x1c]
  41b59f:	xor    eax,ecx
  41b5a1:	add    eax,edx
  41b5a3:	pop    edi
  41b5a4:	pop    esi
  41b5a5:	pop    ebx
  41b5a6:	leave  
  41b5a7:	ret    0xc
  41b5aa:	push   ebp
  41b5ab:	mov    ebp,esp
  41b5ad:	push   ecx
  41b5ae:	mov    cx,WORD PTR [eax]
  41b5b1:	push   esi
  41b5b2:	mov    esi,0x3b50
  41b5b7:	sub    cx,si
  41b5ba:	mov    esi,0x8a8c
  41b5bf:	xor    cx,si
  41b5c2:	mov    esi,0x4e3c
  41b5c7:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41b5ce:	mov    edx,0xf89c85b9
  41b5d3:	cmp    cx,si
  41b5d6:	je     0x41b635
  41b5d8:	push   ebx
  41b5d9:	push   edi
  41b5da:	movzx  ecx,cx
  41b5dd:	mov    edi,0xffcd8d20
  41b5e2:	mov    esi,0x7510899
  41b5e7:	mov    ebx,0x4f80
  41b5ec:	cmp    cx,bx
  41b5ef:	jne    0x41b5f4
  41b5f1:	mov    DWORD PTR [ebp-0x4],edx
  41b5f4:	lea    edx,[edi+0x1]
  41b5f7:	xor    edx,esi
  41b5f9:	mov    edi,edx
  41b5fb:	xor    edi,esi
  41b5fd:	mov    cx,WORD PTR [eax+edi*2+0x64e5c0]
  41b605:	mov    ebx,0x3b50
  41b60a:	sub    cx,bx
  41b60d:	mov    ebx,0x8a8c
  41b612:	xor    cx,bx
  41b615:	mov    ebx,0x4e3c
  41b61a:	cmp    cx,bx
  41b61d:	jne    0x41b5e7
  41b61f:	mov    ecx,DWORD PTR [ebp-0x4]
  41b622:	pop    edi
  41b623:	pop    ebx
  41b624:	cmp    ecx,0xf89c8586
  41b62a:	je     0x41b635
  41b62c:	xor    ecx,esi
  41b62e:	lea    eax,[eax+ecx*2+0x64e5c2]
  41b635:	pop    esi
  41b636:	leave  
  41b637:	ret    
  41b638:	push   ebp
  41b639:	mov    ebp,esp
  41b63b:	push   ecx
  41b63c:	push   esi
  41b63d:	push   edi
  41b63e:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41b645:	mov    esi,0xf89c85b9
  41b64a:	call   0x41b5aa
  41b64f:	mov    edi,eax
  41b651:	mov    al,BYTE PTR [edi]
  41b653:	add    al,0x9
  41b655:	xor    al,0x73
  41b657:	cmp    al,0x7a
  41b659:	je     0x41b6bc
  41b65b:	mov    eax,edi
  41b65d:	mov    edx,0xffcd8d20
  41b662:	mov    ecx,0x7510899
  41b667:	push   ebx
  41b668:	mov    ax,WORD PTR [eax]
  41b66b:	mov    ebx,0x3b50
  41b670:	sub    ax,bx
  41b673:	mov    ebx,0x8a8c
  41b678:	xor    ax,bx
  41b67b:	mov    ebx,0x4e52
  41b680:	cmp    ax,bx
  41b683:	jne    0x41b688
  41b685:	mov    DWORD PTR [ebp-0x4],esi
  41b688:	lea    esi,[edx+0x1]
  41b68b:	xor    esi,ecx
  41b68d:	mov    edx,esi
  41b68f:	xor    edx,ecx
  41b691:	lea    eax,[edi+edx*2+0x64e5c0]
  41b698:	mov    bl,BYTE PTR [eax]
  41b69a:	add    bl,0x9
  41b69d:	xor    bl,0x73
  41b6a0:	cmp    bl,0x7a
  41b6a3:	jne    0x41b668
  41b6a5:	mov    eax,DWORD PTR [ebp-0x4]
  41b6a8:	pop    ebx
  41b6a9:	cmp    eax,0xf89c8586
  41b6ae:	je     0x41b6bc
  41b6b0:	xor    eax,ecx
  41b6b2:	xor    ecx,ecx
  41b6b4:	mov    WORD PTR [edi+eax*2+0x64e5c0],cx
  41b6bc:	mov    eax,edi
  41b6be:	pop    edi
  41b6bf:	pop    esi
  41b6c0:	leave  
  41b6c1:	ret    
  41b6c2:	push   ebp
  41b6c3:	mov    ebp,esp
  41b6c5:	push   ecx
  41b6c6:	push   esi
  41b6c7:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41b6ce:	mov    esi,0xf89c85b9
  41b6d3:	call   0x41b5aa
  41b6d8:	mov    cx,WORD PTR [eax]
  41b6db:	mov    edx,0x3b50
  41b6e0:	sub    cx,dx
  41b6e3:	mov    edx,0x8a8c
  41b6e8:	xor    cx,dx
  41b6eb:	mov    edx,0x4e3c
  41b6f0:	cmp    cx,dx
  41b6f3:	je     0x41b74c
  41b6f5:	push   ebx
  41b6f6:	push   edi
  41b6f7:	movzx  ecx,cx
  41b6fa:	mov    edx,0xffcd8d20
  41b6ff:	mov    edi,0x7510899
  41b704:	mov    ebx,0x4e52
  41b709:	cmp    cx,bx
  41b70c:	jne    0x41b711
  41b70e:	mov    DWORD PTR [ebp-0x4],esi
  41b711:	lea    esi,[edx+0x1]
  41b714:	xor    esi,edi
  41b716:	mov    edx,esi
  41b718:	xor    edx,edi
  41b71a:	mov    cx,WORD PTR [eax+edx*2+0x64e5c0]
  41b722:	mov    ebx,0x3b50
  41b727:	sub    cx,bx
  41b72a:	mov    ebx,0x8a8c
  41b72f:	xor    cx,bx
  41b732:	mov    ebx,0x4e3c
  41b737:	cmp    cx,bx
  41b73a:	jne    0x41b704
  41b73c:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41b743:	pop    edi
  41b744:	pop    ebx
  41b745:	je     0x41b74c
  41b747:	xor    eax,eax
  41b749:	inc    eax
  41b74a:	jmp    0x41b74e
  41b74c:	xor    eax,eax
  41b74e:	pop    esi
  41b74f:	leave  
  41b750:	ret    
  41b751:	push   ebp
  41b752:	mov    ebp,esp
  41b754:	push   ecx
  41b755:	mov    eax,DWORD PTR [ebp+0x8]
  41b758:	movzx  ecx,WORD PTR [eax]
  41b75b:	push   esi
  41b75c:	lea    eax,[ecx-0x3b50]
  41b762:	mov    esi,0x8a8c
  41b767:	push   edi
  41b768:	xor    eax,esi
  41b76a:	mov    edi,0x4e3c
  41b76f:	mov    DWORD PTR [ebp-0x4],edx
  41b772:	cmp    ax,di
  41b775:	je     0x41b7a2
  41b777:	mov    eax,DWORD PTR [ebp+0x8]
  41b77a:	sub    eax,edx
  41b77c:	mov    DWORD PTR [ebp+0x8],eax
  41b77f:	jmp    0x41b784
  41b781:	mov    eax,DWORD PTR [ebp+0x8]
  41b784:	mov    WORD PTR [edx],cx
  41b787:	add    edx,0x2
  41b78a:	movzx  edi,WORD PTR [eax+edx*1]
  41b78e:	mov    ecx,edi
  41b790:	add    edi,0xffffc4b0
  41b796:	xor    edi,esi
  41b798:	mov    eax,0x4e3c
  41b79d:	cmp    di,ax
  41b7a0:	jne    0x41b781
  41b7a2:	xor    eax,eax
  41b7a4:	pop    edi
  41b7a5:	mov    WORD PTR [edx],ax
  41b7a8:	mov    eax,DWORD PTR [ebp-0x4]
  41b7ab:	pop    esi
  41b7ac:	leave  
  41b7ad:	ret    0x4
  41b7b0:	push   ebp
  41b7b1:	mov    ebp,esp
  41b7b3:	sub    esp,0x18
  41b7b6:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41b7bd:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41b7c4:	mov    eax,DWORD PTR [ebp-0x14]
  41b7c7:	xor    eax,0x7510899
  41b7cc:	add    eax,0x3272e0
  41b7d1:	mov    DWORD PTR [ebp-0x8],eax
  41b7d4:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  41b7db:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41b7e2:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41b7e9:	mov    eax,DWORD PTR [ebp-0x14]
  41b7ec:	xor    eax,0x7510899
  41b7f1:	mov    ecx,DWORD PTR [ebp-0x8]
  41b7f4:	lea    eax,[ecx+eax*1+0x3272e0]
  41b7fb:	mov    ecx,DWORD PTR [ebp-0x18]
  41b7fe:	xor    ecx,0x7510899
  41b804:	add    ecx,0x3272e0
  41b80a:	mov    edx,DWORD PTR [ebp+0x10]
  41b80d:	imul   edx,ecx
  41b810:	cmp    eax,edx
  41b812:	jae    0x41b905
  41b818:	mov    eax,DWORD PTR [ebp+0x10]
  41b81b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b81e:	sub    eax,ecx
  41b820:	mov    ecx,DWORD PTR [ebp-0x10]
  41b823:	xor    ecx,0x7510899
  41b829:	add    ecx,0x3272e0
  41b82f:	cmp    eax,ecx
  41b831:	jbe    0x41b863
  41b833:	mov    eax,DWORD PTR [ebp+0x8]
  41b836:	add    eax,DWORD PTR [ebp-0x8]
  41b839:	mov    ecx,DWORD PTR [ebp+0xc]
  41b83c:	add    ecx,DWORD PTR [ebp-0x8]
  41b83f:	mov    edx,DWORD PTR [ecx]
  41b841:	mov    DWORD PTR [eax],edx
  41b843:	mov    ecx,DWORD PTR [ecx+0x4]
  41b846:	mov    DWORD PTR [eax+0x4],ecx
  41b849:	mov    eax,DWORD PTR [ebp-0x10]
  41b84c:	xor    eax,0x7510899
  41b851:	mov    ecx,DWORD PTR [ebp-0x8]
  41b854:	lea    eax,[ecx+eax*1+0x3272e0]
  41b85b:	mov    DWORD PTR [ebp-0x8],eax
  41b85e:	jmp    0x41b900
  41b863:	mov    eax,DWORD PTR [ebp+0x10]
  41b866:	mov    ecx,DWORD PTR [ebp-0x8]
  41b869:	sub    eax,ecx
  41b86b:	mov    ecx,DWORD PTR [ebp-0xc]
  41b86e:	xor    ecx,0x7510899
  41b874:	add    ecx,0x3272e0
  41b87a:	cmp    eax,ecx
  41b87c:	jbe    0x41b8a5
  41b87e:	mov    eax,DWORD PTR [ebp+0x8]
  41b881:	add    eax,DWORD PTR [ebp-0x8]
  41b884:	mov    ecx,DWORD PTR [ebp+0xc]
  41b887:	add    ecx,DWORD PTR [ebp-0x8]
  41b88a:	mov    ecx,DWORD PTR [ecx]
  41b88c:	mov    DWORD PTR [eax],ecx
  41b88e:	mov    eax,DWORD PTR [ebp-0xc]
  41b891:	xor    eax,0x7510899
  41b896:	mov    ecx,DWORD PTR [ebp-0x8]
  41b899:	lea    eax,[ecx+eax*1+0x3272e0]
  41b8a0:	mov    DWORD PTR [ebp-0x8],eax
  41b8a3:	jmp    0x41b900
  41b8a5:	mov    eax,DWORD PTR [ebp+0x10]
  41b8a8:	mov    ecx,DWORD PTR [ebp-0x8]
  41b8ab:	sub    eax,ecx
  41b8ad:	mov    ecx,DWORD PTR [ebp-0x4]
  41b8b0:	xor    ecx,0x7510899
  41b8b6:	add    ecx,0x3272e0
  41b8bc:	cmp    eax,ecx
  41b8be:	jbe    0x41b8e9
  41b8c0:	mov    eax,DWORD PTR [ebp+0x8]
  41b8c3:	add    eax,DWORD PTR [ebp-0x8]
  41b8c6:	mov    ecx,DWORD PTR [ebp+0xc]
  41b8c9:	add    ecx,DWORD PTR [ebp-0x8]
  41b8cc:	mov    cx,WORD PTR [ecx]
  41b8cf:	mov    WORD PTR [eax],cx
  41b8d2:	mov    eax,DWORD PTR [ebp-0x4]
  41b8d5:	xor    eax,0x7510899
  41b8da:	mov    ecx,DWORD PTR [ebp-0x8]
  41b8dd:	lea    eax,[ecx+eax*1+0x3272e0]
  41b8e4:	mov    DWORD PTR [ebp-0x8],eax
  41b8e7:	jmp    0x41b900
  41b8e9:	mov    eax,DWORD PTR [ebp+0x8]
  41b8ec:	add    eax,DWORD PTR [ebp-0x8]
  41b8ef:	mov    ecx,DWORD PTR [ebp+0xc]
  41b8f2:	add    ecx,DWORD PTR [ebp-0x8]
  41b8f5:	mov    cl,BYTE PTR [ecx]
  41b8f7:	mov    BYTE PTR [eax],cl
  41b8f9:	mov    eax,DWORD PTR [ebp-0x8]
  41b8fc:	inc    eax
  41b8fd:	mov    DWORD PTR [ebp-0x8],eax
  41b900:	jmp    0x41b7e9
  41b905:	leave  
  41b906:	ret    0xc
  41b909:	push   ebp
  41b90a:	mov    ebp,esp
  41b90c:	push   ecx
  41b90d:	push   ecx
  41b90e:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41b915:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41b91c:	xor    eax,eax
  41b91e:	inc    eax
  41b91f:	je     0x41b961
  41b921:	mov    eax,DWORD PTR [ebp-0x4]
  41b924:	xor    eax,0x7510899
  41b929:	add    eax,0x3272e0
  41b92e:	cmp    DWORD PTR [ebp+0xc],eax
  41b931:	jne    0x41b935
  41b933:	jmp    0x41b961
  41b935:	mov    eax,DWORD PTR [ebp-0x8]
  41b938:	xor    eax,0x7510899
  41b93d:	add    eax,0x3272e0
  41b942:	mov    ecx,DWORD PTR [ebp+0xc]
  41b945:	sub    ecx,eax
  41b947:	mov    DWORD PTR [ebp+0xc],ecx
  41b94a:	mov    eax,DWORD PTR [ebp-0x4]
  41b94d:	xor    eax,0x7510899
  41b952:	add    eax,0x3272e0
  41b957:	mov    ecx,DWORD PTR [ebp+0x8]
  41b95a:	add    ecx,DWORD PTR [ebp+0xc]
  41b95d:	mov    BYTE PTR [ecx],al
  41b95f:	jmp    0x41b91c
  41b961:	leave  
  41b962:	ret    0x8
  41b965:	push   ebp
  41b966:	mov    ebp,esp
  41b968:	sub    esp,0x21c
  41b96e:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41b975:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  41b97c:	mov    eax,DWORD PTR [ebp+0x10]
  41b97f:	mov    eax,DWORD PTR [ebp-0x4]
  41b982:	mov    ecx,DWORD PTR [ebp+0x8]
  41b985:	push   esi
  41b986:	push   edi
  41b987:	mov    edi,0x7510899
  41b98c:	xor    eax,edi
  41b98e:	mov    esi,0x3272e0
  41b993:	add    eax,esi
  41b995:	cmp    eax,ecx
  41b997:	mov    eax,DWORD PTR [ebp-0x4]
  41b99a:	jne    0x41b9a5
  41b99c:	xor    eax,edi
  41b99e:	add    eax,esi
  41b9a0:	jmp    0x41ba51
  41b9a5:	mov    ecx,DWORD PTR [ebp+0xc]
  41b9a8:	xor    eax,edi
  41b9aa:	add    eax,esi
  41b9ac:	cmp    eax,ecx
  41b9ae:	jne    0x41b9b5
  41b9b0:	mov    eax,DWORD PTR [ebp-0x4]
  41b9b3:	jmp    0x41b99c
  41b9b5:	lea    eax,[ebp-0x21c]
  41b9bb:	mov    DWORD PTR [ebp-0x8],eax
  41b9be:	mov    eax,DWORD PTR [ebp+0xc]
  41b9c1:	mov    DWORD PTR [ebp-0x10],eax
  41b9c4:	mov    eax,DWORD PTR [ebp-0x4]
  41b9c7:	xor    eax,edi
  41b9c9:	add    eax,esi
  41b9cb:	mov    DWORD PTR [ebp+0x10],eax
  41b9ce:	mov    eax,DWORD PTR [ebp+0xc]
  41b9d1:	push   ebx
  41b9d2:	call   0x41b6c2
  41b9d7:	mov    ebx,eax
  41b9d9:	mov    eax,DWORD PTR [ebp+0x8]
  41b9dc:	mov    eax,DWORD PTR [eax+0x14]
  41b9df:	jmp    0x41ba39
  41b9e1:	mov    eax,DWORD PTR [ebp+0xc]
  41b9e4:	sub    eax,0x8
  41b9e7:	mov    DWORD PTR [ebp-0xc],eax
  41b9ea:	mov    eax,DWORD PTR [ebp-0xc]
  41b9ed:	mov    eax,DWORD PTR [eax+0x28]
  41b9f0:	call   0x41b5aa
  41b9f5:	mov    DWORD PTR [ebp+0x10],eax
  41b9f8:	push   DWORD PTR [ebp+0x10]
  41b9fb:	mov    edx,DWORD PTR [ebp-0x8]
  41b9fe:	call   0x41b751
  41ba03:	mov    eax,DWORD PTR [ebp-0x4]
  41ba06:	xor    eax,edi
  41ba08:	add    eax,esi
  41ba0a:	cmp    eax,ebx
  41ba0c:	jne    0x41ba16
  41ba0e:	mov    eax,DWORD PTR [ebp-0x8]
  41ba11:	call   0x41b638
  41ba16:	mov    eax,DWORD PTR [ebp-0x14]
  41ba19:	xor    eax,edi
  41ba1b:	add    eax,esi
  41ba1d:	push   eax
  41ba1e:	push   DWORD PTR [ebp-0x10]
  41ba21:	push   DWORD PTR [ebp-0x8]
  41ba24:	call   0x41b33c
  41ba29:	mov    ecx,DWORD PTR [ebp-0x4]
  41ba2c:	xor    ecx,edi
  41ba2e:	add    ecx,esi
  41ba30:	cmp    eax,ecx
  41ba32:	je     0x41ba57
  41ba34:	mov    eax,DWORD PTR [ebp+0xc]
  41ba37:	mov    eax,DWORD PTR [eax]
  41ba39:	mov    DWORD PTR [ebp+0xc],eax
  41ba3c:	mov    eax,DWORD PTR [ebp+0x8]
  41ba3f:	mov    ecx,DWORD PTR [ebp+0xc]
  41ba42:	add    eax,0x14
  41ba45:	cmp    ecx,eax
  41ba47:	jne    0x41b9e1
  41ba49:	mov    eax,DWORD PTR [ebp-0x4]
  41ba4c:	xor    eax,edi
  41ba4e:	add    eax,esi
  41ba50:	pop    ebx
  41ba51:	pop    edi
  41ba52:	pop    esi
  41ba53:	leave  
  41ba54:	ret    0xc
  41ba57:	mov    eax,DWORD PTR [ebp-0xc]
  41ba5a:	mov    eax,DWORD PTR [eax+0x18]
  41ba5d:	jmp    0x41ba50
  41ba5f:	push   ebp
  41ba60:	mov    ebp,esp
  41ba62:	mov    eax,DWORD PTR [ebp+0xc]
  41ba65:	sub    esp,0x10
  41ba68:	cmp    DWORD PTR [ebp+0x8],0x0
  41ba6c:	push   ebx
  41ba6d:	push   esi
  41ba6e:	push   edi
  41ba6f:	je     0x41bb24
  41ba75:	test   eax,eax
  41ba77:	je     0x41bb24
  41ba7d:	movzx  eax,WORD PTR [eax+0x20]
  41ba81:	mov    ecx,eax
  41ba83:	mov    DWORD PTR [ebp-0x10],eax
  41ba86:	xor    edx,edx
  41ba88:	and    DWORD PTR [ebp-0x8],edx
  41ba8b:	mov    eax,0x8a8c
  41ba90:	xor    ecx,eax
  41ba92:	add    ecx,0x3b50
  41ba98:	mov    DWORD PTR [ebp-0xc],ecx
  41ba9b:	and    DWORD PTR [ebp-0x4],0x0
  41ba9f:	xor    ecx,ecx
  41baa1:	push   0x78
  41baa3:	pop    edi
  41baa4:	cmp    cx,WORD PTR [ebp-0xc]
  41baa8:	jae    0x41bb0e
  41baaa:	lea    esi,[edx-0x3b50]
  41bab0:	xor    esi,eax
  41bab2:	movzx  ecx,WORD PTR [ebp-0x4]
  41bab6:	mov    ebx,DWORD PTR [ebp+0xc]
  41bab9:	lea    ecx,[ebx+ecx*4]
  41babc:	cmp    WORD PTR [ecx+0x2],si
  41bac0:	jne    0x41baf9
  41bac2:	movzx  ecx,WORD PTR [ecx]
  41bac5:	mov    edi,0x4e3c
  41baca:	cmp    cx,di
  41bacd:	jne    0x41badb
  41bacf:	mov    ebx,DWORD PTR [ebp+0x8]
  41bad2:	movzx  edi,dx
  41bad5:	cmp    BYTE PTR [edi+ebx*1],0x0
  41bad9:	je     0x41bb08
  41badb:	mov    ebx,DWORD PTR [ebp+0x8]
  41bade:	movzx  edi,dx
  41bae1:	movsx  di,BYTE PTR [edi+ebx*1]
  41bae6:	mov    ebx,0x3b50
  41baeb:	sub    di,bx
  41baee:	xor    di,ax
  41baf1:	cmp    cx,di
  41baf4:	je     0x41bb08
  41baf6:	push   0x7a
  41baf8:	pop    edi
  41baf9:	inc    DWORD PTR [ebp-0x4]
  41bafc:	mov    cx,WORD PTR [ebp-0xc]
  41bb00:	cmp    WORD PTR [ebp-0x4],cx
  41bb04:	jb     0x41bab2
  41bb06:	jmp    0x41bb0e
  41bb08:	inc    DWORD PTR [ebp-0x8]
  41bb0b:	push   0x79
  41bb0d:	pop    edi
  41bb0e:	mov    esi,DWORD PTR [ebp+0x8]
  41bb11:	movzx  ecx,dx
  41bb14:	cmp    BYTE PTR [ecx+esi*1],0x0
  41bb18:	je     0x41bb2d
  41bb1a:	inc    edx
  41bb1b:	cmp    edi,0x7a
  41bb1e:	jne    0x41ba9b
  41bb24:	xor    eax,eax
  41bb26:	pop    edi
  41bb27:	pop    esi
  41bb28:	pop    ebx
  41bb29:	leave  
  41bb2a:	ret    0x8
  41bb2d:	mov    ecx,DWORD PTR [ebp-0x8]
  41bb30:	add    ecx,0xffffc4b0
  41bb36:	xor    cx,ax
  41bb39:	xor    eax,eax
  41bb3b:	cmp    cx,WORD PTR [ebp-0x10]
  41bb3f:	sete   al
  41bb42:	jmp    0x41bb26
  41bb44:	push   ebp
  41bb45:	mov    ebp,esp
  41bb47:	sub    esp,0x50
  41bb4a:	push   edi
  41bb4b:	mov    edi,eax
  41bb4d:	mov    eax,DWORD PTR [edi+0x1a8]
  41bb53:	cmp    DWORD PTR [eax],0x0
  41bb56:	jne    0x41bb5f
  41bb58:	xor    eax,eax
  41bb5a:	jmp    0x41bc8f
  41bb5f:	push   0x2c
  41bb61:	push   DWORD PTR [ebp+0x8]
  41bb64:	call   0x41b909
  41bb69:	mov    edx,DWORD PTR [edi+0x1ac]
  41bb6f:	lea    eax,[edi+0x22]
  41bb72:	mov    DWORD PTR [ebp-0x4c],eax
  41bb75:	lea    eax,[edi+0x44]
  41bb78:	mov    DWORD PTR [ebp-0x48],eax
  41bb7b:	lea    eax,[edi+0x66]
  41bb7e:	mov    DWORD PTR [ebp-0x44],eax
  41bb81:	lea    eax,[edi+0x88]
  41bb87:	mov    DWORD PTR [ebp-0x40],eax
  41bb8a:	lea    eax,[edi+0xaa]
  41bb90:	mov    DWORD PTR [ebp-0x3c],eax
  41bb93:	lea    eax,[edi+0xcc]
  41bb99:	mov    DWORD PTR [ebp-0x38],eax
  41bb9c:	lea    eax,[edi+0xee]
  41bba2:	mov    DWORD PTR [ebp-0x34],eax
  41bba5:	lea    eax,[edi+0x110]
  41bbab:	mov    DWORD PTR [ebp-0x30],eax
  41bbae:	lea    eax,[edi+0x132]
  41bbb4:	mov    DWORD PTR [ebp-0x2c],eax
  41bbb7:	lea    eax,[edi+0x154]
  41bbbd:	push   edi
  41bbbe:	mov    DWORD PTR [ebp-0x50],edi
  41bbc1:	mov    DWORD PTR [ebp-0x28],eax
  41bbc4:	call   0x41bcc3
  41bbc9:	push   eax
  41bbca:	mov    eax,DWORD PTR [edi+0x1a8]
  41bbd0:	push   DWORD PTR [eax]
  41bbd2:	call   0x41b965
  41bbd7:	mov    DWORD PTR [ebp-0x10],eax
  41bbda:	test   eax,eax
  41bbdc:	je     0x41bc8f
  41bbe2:	mov    ecx,DWORD PTR [eax+0x3c]
  41bbe5:	push   ebx
  41bbe6:	push   esi
  41bbe7:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41bbeb:	add    esi,eax
  41bbed:	mov    edi,DWORD PTR [esi+0x24]
  41bbf0:	mov    ecx,DWORD PTR [esi+0x1c]
  41bbf3:	mov    edx,DWORD PTR [esi+0x20]
  41bbf6:	mov    ebx,DWORD PTR [esi+0x18]
  41bbf9:	add    edi,eax
  41bbfb:	mov    DWORD PTR [ebp-0x20],edi
  41bbfe:	mov    edi,DWORD PTR [esi+0x14]
  41bc01:	add    ecx,eax
  41bc03:	add    edx,eax
  41bc05:	mov    DWORD PTR [ebp-0xc],ecx
  41bc08:	mov    DWORD PTR [ebp-0x1c],edx
  41bc0b:	mov    DWORD PTR [ebp-0x8],edi
  41bc0e:	cmp    edi,ebx
  41bc10:	ja     0x41bc15
  41bc12:	mov    DWORD PTR [ebp-0x8],ebx
  41bc15:	xor    ebx,ebx
  41bc17:	mov    DWORD PTR [ebp-0x18],ebx
  41bc1a:	cmp    DWORD PTR [ebp-0x8],ebx
  41bc1d:	jbe    0x41bc8d
  41bc1f:	jmp    0x41bc24
  41bc21:	mov    edx,DWORD PTR [ebp-0x1c]
  41bc24:	mov    edi,DWORD PTR [ebp-0x20]
  41bc27:	movzx  edi,WORD PTR [edi+ebx*2]
  41bc2b:	cmp    ebx,DWORD PTR [esi+0x18]
  41bc2e:	jae    0x41bc8d
  41bc30:	cmp    edi,DWORD PTR [esi+0x14]
  41bc33:	jae    0x41bc8d
  41bc35:	mov    ebx,DWORD PTR [edx+ebx*4]
  41bc38:	mov    edx,DWORD PTR [ebp+0x8]
  41bc3b:	mov    edi,DWORD PTR [ecx+edi*4]
  41bc3e:	mov    DWORD PTR [ebp-0x4],edx
  41bc41:	lea    edx,[ebp-0x50]
  41bc44:	add    ebx,eax
  41bc46:	add    edi,eax
  41bc48:	sub    edx,DWORD PTR [ebp+0x8]
  41bc4b:	mov    DWORD PTR [ebp-0x14],0xb
  41bc52:	mov    DWORD PTR [ebp-0x24],edx
  41bc55:	mov    edx,DWORD PTR [ebp-0x4]
  41bc58:	cmp    DWORD PTR [edx],0x0
  41bc5b:	jne    0x41bc78
  41bc5d:	mov    eax,DWORD PTR [ebp-0x24]
  41bc60:	push   DWORD PTR [eax+edx*1]
  41bc63:	push   ebx
  41bc64:	call   0x41ba5f
  41bc69:	mov    ecx,DWORD PTR [ebp-0xc]
  41bc6c:	test   eax,eax
  41bc6e:	je     0x41bc75
  41bc70:	mov    eax,DWORD PTR [ebp-0x4]
  41bc73:	mov    DWORD PTR [eax],edi
  41bc75:	mov    eax,DWORD PTR [ebp-0x10]
  41bc78:	add    DWORD PTR [ebp-0x4],0x4
  41bc7c:	dec    DWORD PTR [ebp-0x14]
  41bc7f:	jne    0x41bc55
  41bc81:	mov    ebx,DWORD PTR [ebp-0x18]
  41bc84:	inc    ebx
  41bc85:	mov    DWORD PTR [ebp-0x18],ebx
  41bc88:	cmp    ebx,DWORD PTR [ebp-0x8]
  41bc8b:	jb     0x41bc21
  41bc8d:	pop    esi
  41bc8e:	pop    ebx
  41bc8f:	pop    edi
  41bc90:	leave  
  41bc91:	ret    0x4
  41bc94:	push   ebp
  41bc95:	mov    ebp,esp
  41bc97:	mov    eax,DWORD PTR [ebp+0x8]
  41bc9a:	push   esi
  41bc9b:	push   DWORD PTR [eax+0x1d8]
  41bca1:	lea    esi,[eax+0x198]
  41bca7:	mov    eax,DWORD PTR [ebp+0x8]
  41bcaa:	call   0x41bb44
  41bcaf:	mov    ecx,DWORD PTR [esi]
  41bcb1:	mov    DWORD PTR [ecx],eax
  41bcb3:	mov    eax,DWORD PTR [esi]
  41bcb5:	xor    ecx,ecx
  41bcb7:	cmp    DWORD PTR [eax],ecx
  41bcb9:	pop    esi
  41bcba:	setne  cl
  41bcbd:	mov    eax,ecx
  41bcbf:	pop    ebp
  41bcc0:	ret    0x4
  41bcc3:	mov    ecx,DWORD PTR [edi+0x188]
  41bcc9:	push   ebx
  41bcca:	jmp    0x41bcdf
  41bccc:	xor    eax,0x8a8c
  41bcd1:	add    eax,0x3b50
  41bcd6:	mov    WORD PTR [ecx],ax
  41bcd9:	add    ecx,0x2
  41bcdc:	add    edx,0x2
  41bcdf:	movzx  eax,WORD PTR [edx]
  41bce2:	mov    ebx,0x4e3c
  41bce7:	cmp    ax,bx
  41bcea:	jne    0x41bccc
  41bcec:	xor    eax,eax
  41bcee:	mov    WORD PTR [ecx],ax
  41bcf1:	mov    eax,DWORD PTR [edi+0x188]
  41bcf7:	pop    ebx
  41bcf8:	ret    
  41bcf9:	push   edi
  41bcfa:	mov    edi,eax
  41bcfc:	mov    eax,DWORD PTR [esi+0x188]
  41bd02:	shl    edi,0x6
  41bd05:	add    eax,edi
  41bd07:	jmp    0x41bd13
  41bd09:	xor    cl,0x73
  41bd0c:	sub    cl,0x9
  41bd0f:	mov    BYTE PTR [eax],cl
  41bd11:	inc    eax
  41bd12:	inc    edx
  41bd13:	mov    cl,BYTE PTR [edx]
  41bd15:	cmp    cl,0x7a
  41bd18:	jne    0x41bd09
  41bd1a:	mov    BYTE PTR [eax],0x0
  41bd1d:	mov    eax,DWORD PTR [esi+0x188]
  41bd23:	add    eax,edi
  41bd25:	pop    edi
  41bd26:	ret    
  41bd27:	push   ebp
  41bd28:	mov    ebp,esp
  41bd2a:	sub    esp,0x38
  41bd2d:	push   ebx
  41bd2e:	mov    ebx,0xf89c85b9
  41bd33:	mov    DWORD PTR [ebp-0x4],ebx
  41bd36:	lea    eax,[ebx-0x1]
  41bd39:	push   esi
  41bd3a:	mov    DWORD PTR [ebp-0x24],eax
  41bd3d:	mov    ecx,DWORD PTR [ebp-0x4]
  41bd40:	mov    edx,DWORD PTR [ebp+0x8]
  41bd43:	mov    esi,0x7510899
  41bd48:	push   edi
  41bd49:	xor    ecx,esi
  41bd4b:	mov    edi,0x3272e0
  41bd50:	add    ecx,edi
  41bd52:	cmp    edx,ecx
  41bd54:	je     0x41bec2
  41bd5a:	mov    ecx,DWORD PTR [ebp-0x4]
  41bd5d:	mov    edx,DWORD PTR [ebp+0xc]
  41bd60:	xor    ecx,esi
  41bd62:	add    ecx,edi
  41bd64:	cmp    edx,ecx
  41bd66:	je     0x41bec2
  41bd6c:	mov    ecx,DWORD PTR [ebp+0x10]
  41bd6f:	mov    DWORD PTR [ebp-0x18],ecx
  41bd72:	mov    ecx,DWORD PTR [ebp+0xc]
  41bd75:	mov    DWORD PTR [ebp-0x14],ecx
  41bd78:	mov    ecx,DWORD PTR [ebp+0x8]
  41bd7b:	mov    DWORD PTR [ebp-0x1c],0xf89c8504
  41bd82:	mov    DWORD PTR [ebp-0x20],eax
  41bd85:	mov    DWORD PTR [ebp-0x10],ebx
  41bd88:	mov    DWORD PTR [ebp+0xc],eax
  41bd8b:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41bd92:	mov    eax,DWORD PTR [ebp+0xc]
  41bd95:	mov    DWORD PTR [ebp-0xc],ecx
  41bd98:	xor    eax,esi
  41bd9a:	mov    ecx,0xffcd8d20
  41bd9f:	sub    ecx,eax
  41bda1:	add    ecx,DWORD PTR [ebp-0x14]
  41bda4:	mov    DWORD PTR [ebp+0x8],ecx
  41bda7:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  41bdae:	jmp    0x41beb2
  41bdb3:	mov    eax,DWORD PTR [ebp+0xc]
  41bdb6:	mov    ecx,DWORD PTR [ebp+0xc]
  41bdb9:	xor    eax,esi
  41bdbb:	xor    ecx,esi
  41bdbd:	lea    ecx,[eax+ecx*1+0x64e5c0]
  41bdc4:	mov    eax,DWORD PTR [ebp+0x8]
  41bdc7:	xor    edx,edx
  41bdc9:	div    ecx
  41bdcb:	mov    eax,DWORD PTR [ebp+0x10]
  41bdce:	mov    ecx,DWORD PTR [ebp+0xc]
  41bdd1:	xor    eax,esi
  41bdd3:	xor    ecx,esi
  41bdd5:	sub    eax,ecx
  41bdd7:	cmp    edx,eax
  41bdd9:	jne    0x41be6e
  41bddf:	mov    eax,DWORD PTR [ebp+0x8]
  41bde2:	add    eax,DWORD PTR [ebp-0xc]
  41bde5:	mov    dl,BYTE PTR [eax]
  41bde7:	mov    eax,DWORD PTR [ebp-0x10]
  41bdea:	mov    ecx,DWORD PTR [ebp-0x8]
  41bded:	xor    eax,esi
  41bdef:	xor    ecx,esi
  41bdf1:	add    eax,edi
  41bdf3:	add    ecx,edi
  41bdf5:	cmp    eax,ecx
  41bdf7:	jae    0x41be3f
  41bdf9:	lea    ecx,[eax-0x3272e0]
  41bdff:	mov    DWORD PTR [ebp-0x4],ecx
  41be02:	mov    ebx,DWORD PTR [ebp-0x4]
  41be05:	xor    ebx,esi
  41be07:	add    ebx,0x7f55d8fb
  41be0d:	lea    ecx,[ebp+eax*4-0x38]
  41be11:	mov    DWORD PTR [ecx],ebx
  41be13:	mov    ebx,DWORD PTR [ecx]
  41be15:	cmp    ebx,0x244ecbda
  41be1b:	jbe    0x41be25
  41be1d:	add    DWORD PTR [ecx],0x405fc1d
  41be23:	jmp    0x41be2b
  41be25:	add    DWORD PTR [ecx],0xfdaf43e3
  41be2b:	mov    ecx,DWORD PTR [ebp-0x8]
  41be2e:	xor    ecx,esi
  41be30:	inc    eax
  41be31:	inc    DWORD PTR [ebp-0x4]
  41be34:	add    ecx,edi
  41be36:	cmp    eax,ecx
  41be38:	jb     0x41be02
  41be3a:	mov    ebx,0xf89c85b9
  41be3f:	mov    eax,DWORD PTR [ebp-0x18]
  41be42:	test   eax,eax
  41be44:	jne    0x41be4e
  41be46:	xor    dl,0x73
  41be49:	sub    dl,0x9
  41be4c:	jmp    0x41be64
  41be4e:	mov    eax,DWORD PTR [ebp-0x1c]
  41be51:	xor    al,0x99
  41be53:	mov    cl,0x20
  41be55:	sub    cl,al
  41be57:	add    dl,cl
  41be59:	mov    ecx,DWORD PTR [ebp-0x20]
  41be5c:	xor    cl,0x99
  41be5f:	sub    cl,0x20
  41be62:	ror    dl,cl
  41be64:	xor    eax,eax
  41be66:	mov    eax,DWORD PTR [ebp+0x8]
  41be69:	add    eax,DWORD PTR [ebp-0xc]
  41be6c:	mov    BYTE PTR [eax],dl
  41be6e:	mov    eax,DWORD PTR [ebp+0x8]
  41be71:	mov    ecx,DWORD PTR [ebp-0x10]
  41be74:	sub    eax,edi
  41be76:	xor    eax,esi
  41be78:	cmp    eax,ecx
  41be7a:	jne    0x41bea0
  41be7c:	mov    eax,DWORD PTR [ebp+0x10]
  41be7f:	mov    ecx,DWORD PTR [ebp+0xc]
  41be82:	xor    eax,esi
  41be84:	xor    ecx,esi
  41be86:	sub    eax,ecx
  41be88:	sub    eax,edi
  41be8a:	xor    eax,esi
  41be8c:	mov    DWORD PTR [ebp+0x10],eax
  41be8f:	mov    eax,DWORD PTR [ebp+0xc]
  41be92:	xor    eax,esi
  41be94:	mov    ecx,0xffcd8d20
  41be99:	sub    ecx,eax
  41be9b:	add    ecx,DWORD PTR [ebp-0x14]
  41be9e:	jmp    0x41beaf
  41bea0:	mov    eax,DWORD PTR [ebp+0xc]
  41bea3:	xor    eax,esi
  41bea5:	mov    ecx,0xffcd8d20
  41beaa:	sub    ecx,eax
  41beac:	add    ecx,DWORD PTR [ebp+0x8]
  41beaf:	mov    DWORD PTR [ebp+0x8],ecx
  41beb2:	mov    eax,DWORD PTR [ebp+0x10]
  41beb5:	cmp    eax,ebx
  41beb7:	jne    0x41bdb3
  41bebd:	mov    eax,DWORD PTR [ebp-0x24]
  41bec0:	jmp    0x41bec5
  41bec2:	mov    eax,DWORD PTR [ebp-0x4]
  41bec5:	xor    eax,esi
  41bec7:	add    eax,edi
  41bec9:	pop    edi
  41beca:	pop    esi
  41becb:	pop    ebx
  41becc:	leave  
  41becd:	ret    0xc
  41bed0:	push   ebp
  41bed1:	mov    ebp,esp
  41bed3:	sub    esp,0x14
  41bed6:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  41bedd:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  41bee4:	mov    eax,DWORD PTR [ebx]
  41bee6:	mov    DWORD PTR [ebp-0x8],eax
  41bee9:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  41bef0:	push   esi
  41bef1:	push   edi
  41bef2:	mov    DWORD PTR [ebp-0x14],0xead718d9
  41bef9:	mov    edi,DWORD PTR [ebp-0x4]
  41befc:	mov    ecx,DWORD PTR [ebp-0x10]
  41beff:	mov    eax,0x7510899
  41bf04:	xor    edi,eax
  41bf06:	mov    edx,0x3272e0
  41bf0b:	xor    ecx,eax
  41bf0d:	add    edi,edx
  41bf0f:	add    ecx,edx
  41bf11:	imul   edi,ecx
  41bf14:	jmp    0x41bf5c
  41bf16:	mov    ecx,DWORD PTR [ebp-0x8]
  41bf19:	mov    esi,DWORD PTR [ebp-0x4]
  41bf1c:	xor    ecx,eax
  41bf1e:	xor    esi,eax
  41bf20:	add    ecx,edx
  41bf22:	add    esi,edx
  41bf24:	test   esi,ecx
  41bf26:	mov    esi,DWORD PTR [ebp-0x8]
  41bf29:	mov    ecx,DWORD PTR [ebp-0x4]
  41bf2c:	je     0x41bf43
  41bf2e:	xor    ecx,eax
  41bf30:	xor    esi,eax
  41bf32:	add    ecx,edx
  41bf34:	add    esi,edx
  41bf36:	shr    esi,cl
  41bf38:	mov    ecx,DWORD PTR [ebp-0x14]
  41bf3b:	xor    ecx,eax
  41bf3d:	add    ecx,edx
  41bf3f:	xor    esi,ecx
  41bf41:	jmp    0x41bf4d
  41bf43:	xor    esi,eax
  41bf45:	xor    ecx,eax
  41bf47:	add    esi,edx
  41bf49:	add    ecx,edx
  41bf4b:	shr    esi,cl
  41bf4d:	mov    DWORD PTR [ebp-0x8],esi
  41bf50:	mov    ecx,DWORD PTR [ebp-0x4]
  41bf53:	xor    ecx,eax
  41bf55:	lea    edi,[edi+ecx*1+0x3272e0]
  41bf5c:	mov    ecx,DWORD PTR [ebp-0xc]
  41bf5f:	mov    esi,DWORD PTR [ebp-0x4]
  41bf62:	xor    esi,eax
  41bf64:	xor    ecx,eax
  41bf66:	sub    ecx,esi
  41bf68:	cmp    edi,ecx
  41bf6a:	jbe    0x41bf16
  41bf6c:	mov    eax,DWORD PTR [ebp-0x8]
  41bf6f:	pop    edi
  41bf70:	mov    DWORD PTR [ebx],eax
  41bf72:	mov    eax,DWORD PTR [ebp-0x8]
  41bf75:	pop    esi
  41bf76:	leave  
  41bf77:	ret    
  41bf78:	push   ebp
  41bf79:	mov    ebp,esp
  41bf7b:	sub    esp,0x420
  41bf81:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41bf88:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41bf8f:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  41bf96:	push   ebx
  41bf97:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41bf9e:	mov    eax,DWORD PTR [ebp-0x14]
  41bfa1:	push   esi
  41bfa2:	mov    esi,0x7510899
  41bfa7:	push   edi
  41bfa8:	xor    eax,esi
  41bfaa:	mov    edi,0x3272e0
  41bfaf:	add    eax,edi
  41bfb1:	mov    DWORD PTR [ebp-0x8],eax
  41bfb4:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  41bfbb:	mov    DWORD PTR [ebp-0x4],0xead718d9
  41bfc2:	mov    DWORD PTR [ebp-0x10],0x8
  41bfc9:	mov    ecx,ecx
  41bfcb:	mov    eax,DWORD PTR [ebp-0xc]
  41bfce:	mov    ecx,DWORD PTR [ebp-0x14]
  41bfd1:	xor    eax,esi
  41bfd3:	xor    ecx,esi
  41bfd5:	add    eax,edi
  41bfd7:	add    ecx,edi
  41bfd9:	imul   eax,ecx
  41bfdc:	jmp    0x41c00f
  41bfde:	mov    eax,DWORD PTR [ebp-0x4]
  41bfe1:	sub    eax,edi
  41bfe3:	xor    eax,esi
  41bfe5:	mov    DWORD PTR [ebp-0x8],eax
  41bfe8:	lea    ebx,[ebp-0x8]
  41bfeb:	call   0x41bed0
  41bff0:	mov    DWORD PTR [ebp-0x8],eax
  41bff3:	mov    eax,DWORD PTR [ebp-0x8]
  41bff6:	mov    ecx,DWORD PTR [ebp-0x4]
  41bff9:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41c000:	mov    eax,DWORD PTR [ebp-0xc]
  41c003:	mov    ecx,DWORD PTR [ebp-0x4]
  41c006:	xor    eax,esi
  41c008:	lea    eax,[eax+ecx*1+0x3272e0]
  41c00f:	mov    DWORD PTR [ebp-0x4],eax
  41c012:	mov    eax,DWORD PTR [ebp-0x18]
  41c015:	mov    ecx,DWORD PTR [ebp-0xc]
  41c018:	xor    ecx,esi
  41c01a:	xor    eax,esi
  41c01c:	sub    eax,ecx
  41c01e:	mov    ecx,DWORD PTR [ebp-0x4]
  41c021:	cmp    ecx,eax
  41c023:	jbe    0x41bfde
  41c025:	mov    eax,DWORD PTR [ebp-0x1c]
  41c028:	xor    eax,esi
  41c02a:	add    eax,edi
  41c02c:	mov    DWORD PTR [ebp-0x8],eax
  41c02f:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41c036:	mov    ebx,ebx
  41c038:	jmp    0x41c09b
  41c03a:	mov    ecx,DWORD PTR [ebp-0x20]
  41c03d:	mov    eax,DWORD PTR [ebp-0x8]
  41c040:	xor    ecx,esi
  41c042:	add    ecx,edi
  41c044:	shr    eax,cl
  41c046:	mov    DWORD PTR [ebp-0x4],eax
  41c049:	mov    eax,DWORD PTR [ebp+0x8]
  41c04c:	mov    cl,BYTE PTR [eax]
  41c04e:	mov    BYTE PTR [ebp+0xb],cl
  41c051:	mov    cl,BYTE PTR [ebp+0xb]
  41c054:	mov    edx,DWORD PTR [ebp-0x8]
  41c057:	movzx  ecx,cl
  41c05a:	xor    ecx,edx
  41c05c:	mov    DWORD PTR [ebp+0x8],ecx
  41c05f:	mov    ecx,DWORD PTR [ebp-0x18]
  41c062:	mov    edx,DWORD PTR [ebp+0x8]
  41c065:	xor    ecx,esi
  41c067:	add    ecx,edi
  41c069:	and    ecx,edx
  41c06b:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41c072:	mov    edx,DWORD PTR [ebp-0x4]
  41c075:	xor    ecx,edx
  41c077:	mov    DWORD PTR [ebp-0x8],ecx
  41c07a:	mov    ecx,DWORD PTR [ebp-0xc]
  41c07d:	xor    ecx,esi
  41c07f:	lea    eax,[eax+ecx*1+0x3272e0]
  41c086:	mov    DWORD PTR [ebp+0x8],eax
  41c089:	mov    eax,DWORD PTR [ebp-0xc]
  41c08c:	xor    eax,esi
  41c08e:	mov    ecx,0xffcd8d20
  41c093:	sub    ecx,eax
  41c095:	add    ecx,DWORD PTR [ebp-0x10]
  41c098:	mov    DWORD PTR [ebp-0x10],ecx
  41c09b:	mov    eax,DWORD PTR [ebp-0x14]
  41c09e:	mov    ecx,DWORD PTR [ebp-0x10]
  41c0a1:	xor    eax,esi
  41c0a3:	add    eax,edi
  41c0a5:	cmp    ecx,eax
  41c0a7:	jne    0x41c03a
  41c0a9:	mov    eax,DWORD PTR [ebp-0x1c]
  41c0ac:	mov    ecx,DWORD PTR [ebp-0x8]
  41c0af:	xor    eax,esi
  41c0b1:	add    eax,edi
  41c0b3:	pop    edi
  41c0b4:	pop    esi
  41c0b5:	xor    eax,ecx
  41c0b7:	pop    ebx
  41c0b8:	leave  
  41c0b9:	ret    0x4
  41c0bc:	push   ebp
  41c0bd:	mov    ebp,esp
  41c0bf:	mov    eax,DWORD PTR [ebp+0x1c]
  41c0c2:	mov    ecx,DWORD PTR [ebp+0x8]
  41c0c5:	mov    edx,DWORD PTR [ebp+0x10]
  41c0c8:	mov    eax,DWORD PTR [eax+0x190]
  41c0ce:	mov    eax,DWORD PTR [eax]
  41c0d0:	sub    esp,0x64
  41c0d3:	push   ebx
  41c0d4:	push   esi
  41c0d5:	push   edi
  41c0d6:	mov    edi,0x7510899
  41c0db:	xor    ecx,edi
  41c0dd:	mov    ebx,0x3272e0
  41c0e2:	add    ecx,ebx
  41c0e4:	cmp    ecx,edx
  41c0e6:	jne    0x41c0f7
  41c0e8:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41c0f2:	jmp    0x41c5f4
  41c0f7:	mov    ecx,DWORD PTR [ebp+0x8]
  41c0fa:	mov    esi,DWORD PTR [ebp+0x14]
  41c0fd:	mov    edx,DWORD PTR [esi]
  41c0ff:	xor    ecx,edi
  41c101:	add    ecx,ebx
  41c103:	cmp    edx,ecx
  41c105:	je     0x41c5af
  41c10b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c10e:	mov    DWORD PTR [ebp-0x1c],eax
  41c111:	mov    DWORD PTR [ebp+0x1c],ecx
  41c114:	mov    ecx,DWORD PTR [ebp+0x18]
  41c117:	mov    eax,DWORD PTR [esi]
  41c119:	mov    DWORD PTR [ebp-0x20],eax
  41c11c:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  41c123:	mov    edx,0xf89c85b8
  41c128:	mov    DWORD PTR [ebp-0x8],edx
  41c12b:	mov    eax,DWORD PTR [ebp+0x1c]
  41c12e:	mov    DWORD PTR [ebp+0x1c],eax
  41c131:	mov    eax,DWORD PTR [ebp+0x1c]
  41c134:	mov    eax,DWORD PTR [eax+0x190]
  41c13a:	mov    eax,DWORD PTR [eax]
  41c13c:	mov    DWORD PTR [ebp-0x24],ecx
  41c13f:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c142:	mov    ecx,DWORD PTR [ecx+0x190]
  41c148:	mov    ecx,DWORD PTR [ecx]
  41c14a:	add    ecx,DWORD PTR [eax+0x3c]
  41c14d:	mov    DWORD PTR [ebp+0x10],ecx
  41c150:	mov    eax,DWORD PTR [ebp+0x8]
  41c153:	xor    eax,edi
  41c155:	add    eax,ebx
  41c157:	mov    DWORD PTR [ebp-0x4],eax
  41c15a:	mov    eax,DWORD PTR [ebp+0x8]
  41c15d:	xor    eax,edi
  41c15f:	add    eax,ebx
  41c161:	mov    DWORD PTR [ebp+0x18],eax
  41c164:	mov    eax,DWORD PTR [ebp+0x10]
  41c167:	mov    eax,DWORD PTR [eax+0x50]
  41c16a:	sub    eax,0xc
  41c16d:	mov    DWORD PTR [ebp-0x28],eax
  41c170:	mov    eax,DWORD PTR [ebp+0x10]
  41c173:	mov    eax,DWORD PTR [eax+0x38]
  41c176:	mov    ecx,DWORD PTR [ebp+0x10]
  41c179:	dec    eax
  41c17a:	test   DWORD PTR [ecx+0x54],eax
  41c17d:	mov    eax,DWORD PTR [ebp+0x10]
  41c180:	je     0x41c19a
  41c182:	mov    eax,DWORD PTR [eax+0x38]
  41c185:	mov    ecx,DWORD PTR [ebp+0x10]
  41c188:	mov    ecx,DWORD PTR [ecx+0x54]
  41c18b:	dec    eax
  41c18c:	not    eax
  41c18e:	and    ecx,eax
  41c190:	mov    eax,DWORD PTR [ebp+0x10]
  41c193:	mov    eax,DWORD PTR [eax+0x38]
  41c196:	add    eax,ecx
  41c198:	jmp    0x41c19d
  41c19a:	mov    eax,DWORD PTR [eax+0x54]
  41c19d:	mov    DWORD PTR [ebp+0x1c],eax
  41c1a0:	mov    eax,DWORD PTR [ebp+0x8]
  41c1a3:	xor    eax,edi
  41c1a5:	add    eax,ebx
  41c1a7:	mov    DWORD PTR [ebp+0x18],eax
  41c1aa:	mov    eax,DWORD PTR [ebp+0x8]
  41c1ad:	xor    eax,edi
  41c1af:	add    eax,ebx
  41c1b1:	mov    DWORD PTR [ebp+0x18],eax
  41c1b4:	mov    eax,DWORD PTR [ebp+0x8]
  41c1b7:	mov    ecx,DWORD PTR [ebp-0x24]
  41c1ba:	xor    eax,edi
  41c1bc:	add    eax,ebx
  41c1be:	mov    DWORD PTR [ecx],eax
  41c1c0:	mov    DWORD PTR [ebp+0x18],edx
  41c1c3:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  41c1ca:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  41c1d1:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  41c1d8:	mov    eax,DWORD PTR [ebp-0x8]
  41c1db:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c1de:	xor    eax,edi
  41c1e0:	add    eax,ebx
  41c1e2:	imul   eax,ecx
  41c1e5:	mov    ecx,DWORD PTR [ebp+0x8]
  41c1e8:	mov    edx,DWORD PTR [ebp-0x28]
  41c1eb:	xor    ecx,edi
  41c1ed:	lea    ecx,[ecx+edx*1+0x3272e0]
  41c1f4:	cmp    eax,ecx
  41c1f6:	jae    0x41c5a8
  41c1fc:	mov    eax,DWORD PTR [ebp+0x8]
  41c1ff:	xor    eax,edi
  41c201:	add    eax,ebx
  41c203:	mov    DWORD PTR [ebp+0x18],eax
  41c206:	mov    eax,DWORD PTR [ebp+0x1c]
  41c209:	add    eax,DWORD PTR [ebp-0x1c]
  41c20c:	mov    DWORD PTR [ebp-0x4],eax
  41c20f:	push   DWORD PTR [ebp-0x4]
  41c212:	mov    esi,DWORD PTR [ebp-0x1c]
  41c215:	mov    ecx,DWORD PTR [ebp+0x10]
  41c218:	call   0x41b2fe
  41c21d:	mov    DWORD PTR [ebp+0xc],eax
  41c220:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  41c227:	mov    eax,DWORD PTR [ebp-0x18]
  41c22a:	xor    eax,edi
  41c22c:	add    eax,ebx
  41c22e:	push   eax
  41c22f:	lea    eax,[ebp-0x40]
  41c232:	push   eax
  41c233:	call   0x41b909
  41c238:	mov    eax,DWORD PTR [ebp+0xc]
  41c23b:	test   eax,eax
  41c23d:	je     0x41c28d
  41c23f:	mov    eax,DWORD PTR [ebp-0x18]
  41c242:	xor    eax,edi
  41c244:	add    eax,ebx
  41c246:	push   eax
  41c247:	push   DWORD PTR [ebp+0xc]
  41c24a:	lea    eax,[ebp-0x40]
  41c24d:	push   eax
  41c24e:	call   0x41b7b0
  41c253:	mov    eax,DWORD PTR [ebp-0x4]
  41c256:	mov    DWORD PTR [ebp-0x18],eax
  41c259:	mov    eax,DWORD PTR [ebp-0x18]
  41c25c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c25f:	sub    eax,ecx
  41c261:	mov    DWORD PTR [ebp-0x18],eax
  41c264:	mov    eax,DWORD PTR [ebp+0xc]
  41c267:	mov    ecx,DWORD PTR [ebp+0xc]
  41c26a:	mov    eax,DWORD PTR [eax+0x10]
  41c26d:	add    eax,DWORD PTR [ecx+0xc]
  41c270:	mov    ecx,DWORD PTR [ebp-0x18]
  41c273:	cmp    ecx,eax
  41c275:	jb     0x41c28d
  41c277:	mov    eax,DWORD PTR [ebp+0xc]
  41c27a:	mov    eax,DWORD PTR [eax+0xc]
  41c27d:	mov    ecx,DWORD PTR [ebp+0xc]
  41c280:	add    eax,DWORD PTR [ecx+0x8]
  41c283:	mov    ecx,DWORD PTR [ebp-0x18]
  41c286:	sub    eax,ecx
  41c288:	jmp    0x41c57b
  41c28d:	push   0xc
  41c28f:	push   DWORD PTR [ebp-0x4]
  41c292:	lea    eax,[ebp-0x4c]
  41c295:	push   eax
  41c296:	call   0x41b7b0
  41c29b:	mov    eax,0xf89c85b9
  41c2a0:	mov    DWORD PTR [ebp-0x2c],eax
  41c2a3:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  41c2aa:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  41c2b1:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  41c2b8:	lea    ecx,[ebp-0x2c]
  41c2bb:	mov    DWORD PTR [ebp-0xc],ecx
  41c2be:	lea    ecx,[ebp-0x30]
  41c2c1:	mov    DWORD PTR [ebp-0x10],ecx
  41c2c4:	lea    ecx,[ebp-0x34]
  41c2c7:	mov    DWORD PTR [ebp+0xc],ecx
  41c2ca:	lea    ecx,[ebp-0x38]
  41c2cd:	mov    DWORD PTR [ebp-0x14],ecx
  41c2d0:	mov    ecx,DWORD PTR [ebp+0x8]
  41c2d3:	xor    ecx,edi
  41c2d5:	add    ecx,ebx
  41c2d7:	mov    DWORD PTR [ebp-0x18],ecx
  41c2da:	jmp    0x41c4d6
  41c2df:	cmp    eax,0xf89c85bb
  41c2e4:	je     0x41c4e8
  41c2ea:	mov    ecx,DWORD PTR [ebp-0x8]
  41c2ed:	xor    ecx,edi
  41c2ef:	mov    esi,eax
  41c2f1:	add    ecx,ebx
  41c2f3:	mov    DWORD PTR [ebp+0x18],ecx
  41c2f6:	mov    eax,DWORD PTR [ebp-0x18]
  41c2f9:	xor    esi,edi
  41c2fb:	lea    eax,[eax+esi*1+0x3272e0]
  41c302:	mov    DWORD PTR [ebp-0x18],eax
  41c305:	mov    eax,DWORD PTR [ebp-0x8]
  41c308:	mov    ecx,DWORD PTR [ebp-0x18]
  41c30b:	xor    eax,edi
  41c30d:	add    eax,ebx
  41c30f:	cmp    ecx,eax
  41c311:	jne    0x41c326
  41c313:	mov    eax,DWORD PTR [ebp+0x8]
  41c316:	xor    eax,edi
  41c318:	add    eax,ebx
  41c31a:	push   eax
  41c31b:	push   0xc
  41c31d:	lea    eax,[ebp-0x4c]
  41c320:	push   eax
  41c321:	call   0x41bd27
  41c326:	mov    eax,DWORD PTR [ebp-0xc]
  41c329:	mov    eax,DWORD PTR [eax]
  41c32b:	xor    eax,edi
  41c32d:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c334:	mov    ecx,DWORD PTR [ebp+0x8]
  41c337:	xor    ecx,edi
  41c339:	movzx  eax,al
  41c33c:	add    ecx,ebx
  41c33e:	cmp    eax,ecx
  41c340:	je     0x41c4be
  41c346:	mov    eax,DWORD PTR [ebp-0x10]
  41c349:	mov    eax,DWORD PTR [eax]
  41c34b:	xor    eax,edi
  41c34d:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c354:	mov    ecx,DWORD PTR [ebp+0x8]
  41c357:	xor    ecx,edi
  41c359:	movzx  eax,al
  41c35c:	add    ecx,ebx
  41c35e:	cmp    eax,ecx
  41c360:	je     0x41c4be
  41c366:	mov    eax,DWORD PTR [ebp+0xc]
  41c369:	mov    eax,DWORD PTR [eax]
  41c36b:	xor    eax,edi
  41c36d:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c374:	mov    ecx,DWORD PTR [ebp+0x8]
  41c377:	xor    ecx,edi
  41c379:	movzx  eax,al
  41c37c:	add    ecx,ebx
  41c37e:	cmp    eax,ecx
  41c380:	je     0x41c4be
  41c386:	mov    eax,DWORD PTR [ebp-0x14]
  41c389:	mov    eax,DWORD PTR [eax]
  41c38b:	xor    eax,edi
  41c38d:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c394:	mov    ecx,DWORD PTR [ebp+0x8]
  41c397:	xor    ecx,edi
  41c399:	movzx  eax,al
  41c39c:	add    ecx,ebx
  41c39e:	cmp    eax,ecx
  41c3a0:	je     0x41c4be
  41c3a6:	mov    eax,DWORD PTR [ebp-0x10]
  41c3a9:	mov    eax,DWORD PTR [eax]
  41c3ab:	xor    eax,edi
  41c3ad:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c3b4:	mov    ecx,DWORD PTR [ebp-0xc]
  41c3b7:	mov    ecx,DWORD PTR [ecx]
  41c3b9:	xor    ecx,edi
  41c3bb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c3c2:	xor    al,cl
  41c3c4:	mov    ecx,DWORD PTR [ebp+0xc]
  41c3c7:	mov    ecx,DWORD PTR [ecx]
  41c3c9:	xor    ecx,edi
  41c3cb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c3d2:	or     al,cl
  41c3d4:	mov    ecx,DWORD PTR [ebp-0xc]
  41c3d7:	mov    ecx,DWORD PTR [ecx]
  41c3d9:	xor    ecx,edi
  41c3db:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41c3e2:	cmp    cl,al
  41c3e4:	jne    0x41c4be
  41c3ea:	mov    eax,DWORD PTR [ebp+0xc]
  41c3ed:	mov    eax,DWORD PTR [eax]
  41c3ef:	xor    eax,edi
  41c3f1:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c3f8:	mov    ecx,DWORD PTR [ebp-0x10]
  41c3fb:	mov    ecx,DWORD PTR [ecx]
  41c3fd:	xor    ecx,edi
  41c3ff:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c406:	xor    al,cl
  41c408:	mov    ecx,DWORD PTR [ebp-0x14]
  41c40b:	mov    ecx,DWORD PTR [ecx]
  41c40d:	xor    ecx,edi
  41c40f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c416:	or     al,cl
  41c418:	mov    ecx,DWORD PTR [ebp-0x10]
  41c41b:	mov    ecx,DWORD PTR [ecx]
  41c41d:	xor    ecx,edi
  41c41f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41c426:	cmp    cl,al
  41c428:	jne    0x41c4be
  41c42e:	mov    eax,DWORD PTR [ebp-0x14]
  41c431:	mov    eax,DWORD PTR [eax]
  41c433:	xor    eax,edi
  41c435:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c43c:	mov    ecx,DWORD PTR [ebp+0xc]
  41c43f:	mov    ecx,DWORD PTR [ecx]
  41c441:	xor    ecx,edi
  41c443:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c44a:	xor    al,cl
  41c44c:	mov    ecx,DWORD PTR [ebp-0xc]
  41c44f:	mov    ecx,DWORD PTR [ecx]
  41c451:	xor    ecx,edi
  41c453:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c45a:	or     al,cl
  41c45c:	mov    ecx,DWORD PTR [ebp+0xc]
  41c45f:	mov    ecx,DWORD PTR [ecx]
  41c461:	xor    ecx,edi
  41c463:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41c46a:	cmp    cl,al
  41c46c:	jne    0x41c4be
  41c46e:	mov    eax,DWORD PTR [ebp-0x14]
  41c471:	mov    eax,DWORD PTR [eax]
  41c473:	xor    eax,edi
  41c475:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c47c:	mov    ecx,DWORD PTR [ebp-0xc]
  41c47f:	mov    ecx,DWORD PTR [ecx]
  41c481:	xor    ecx,edi
  41c483:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c48a:	xor    al,cl
  41c48c:	mov    ecx,DWORD PTR [ebp-0x10]
  41c48f:	mov    ecx,DWORD PTR [ecx]
  41c491:	xor    ecx,edi
  41c493:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c49a:	or     al,cl
  41c49c:	mov    ecx,DWORD PTR [ebp-0x14]
  41c49f:	mov    ecx,DWORD PTR [ecx]
  41c4a1:	xor    ecx,edi
  41c4a3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41c4aa:	cmp    cl,al
  41c4ac:	jne    0x41c4be
  41c4ae:	lea    eax,[ebp-0x4c]
  41c4b1:	push   eax
  41c4b2:	call   0x41bf78
  41c4b7:	mov    ecx,DWORD PTR [ebp-0x44]
  41c4ba:	cmp    eax,ecx
  41c4bc:	je     0x41c4c8
  41c4be:	mov    eax,DWORD PTR [ebp+0x8]
  41c4c1:	xor    eax,edi
  41c4c3:	add    eax,ebx
  41c4c5:	mov    DWORD PTR [ebp+0x18],eax
  41c4c8:	mov    eax,DWORD PTR [ebp-0x8]
  41c4cb:	xor    eax,edi
  41c4cd:	lea    eax,[eax+esi*1+0x3272e0]
  41c4d4:	xor    eax,edi
  41c4d6:	mov    ecx,DWORD PTR [ebp+0x8]
  41c4d9:	mov    edx,DWORD PTR [ebp+0x18]
  41c4dc:	xor    ecx,edi
  41c4de:	add    ecx,ebx
  41c4e0:	cmp    edx,ecx
  41c4e2:	je     0x41c2df
  41c4e8:	mov    eax,DWORD PTR [ebp+0x8]
  41c4eb:	mov    ecx,DWORD PTR [ebp+0x18]
  41c4ee:	xor    eax,edi
  41c4f0:	add    eax,ebx
  41c4f2:	cmp    ecx,eax
  41c4f4:	jne    0x41c507
  41c4f6:	mov    eax,DWORD PTR [ebp-0x8]
  41c4f9:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c4fc:	xor    eax,edi
  41c4fe:	lea    eax,[eax+ecx*1+0x3272e0]
  41c505:	jmp    0x41c57e
  41c507:	push   0x18
  41c509:	push   DWORD PTR [ebp-0x4]
  41c50c:	lea    eax,[ebp-0x64]
  41c50f:	push   eax
  41c510:	call   0x41b7b0
  41c515:	mov    eax,DWORD PTR [ebp+0x8]
  41c518:	mov    ecx,DWORD PTR [ebp-0x18]
  41c51b:	xor    eax,edi
  41c51d:	add    eax,ebx
  41c51f:	cmp    eax,ecx
  41c521:	je     0x41c536
  41c523:	mov    eax,DWORD PTR [ebp+0x8]
  41c526:	xor    eax,edi
  41c528:	add    eax,ebx
  41c52a:	push   eax
  41c52b:	push   0x18
  41c52d:	lea    eax,[ebp-0x64]
  41c530:	push   eax
  41c531:	call   0x41bd27
  41c536:	mov    eax,DWORD PTR [ebp-0x4]
  41c539:	add    eax,0x18
  41c53c:	mov    DWORD PTR [ebp+0x18],eax
  41c53f:	push   DWORD PTR [ebp-0x50]
  41c542:	push   DWORD PTR [ebp+0x18]
  41c545:	mov    eax,DWORD PTR [ebp-0x54]
  41c548:	add    eax,DWORD PTR [ebp-0x20]
  41c54b:	push   eax
  41c54c:	call   0x41b7b0
  41c551:	mov    eax,DWORD PTR [ebp+0x8]
  41c554:	mov    ecx,DWORD PTR [ebp-0x18]
  41c557:	xor    eax,edi
  41c559:	add    eax,ebx
  41c55b:	cmp    eax,ecx
  41c55d:	je     0x41c570
  41c55f:	push   0x0
  41c561:	push   DWORD PTR [ebp-0x50]
  41c564:	mov    eax,DWORD PTR [ebp-0x54]
  41c567:	add    eax,DWORD PTR [ebp-0x20]
  41c56a:	push   eax
  41c56b:	call   0x41bd27
  41c570:	mov    eax,DWORD PTR [ebp-0x24]
  41c573:	mov    ecx,DWORD PTR [ebp-0x50]
  41c576:	add    DWORD PTR [eax],ecx
  41c578:	mov    eax,DWORD PTR [ebp-0x50]
  41c57b:	add    eax,DWORD PTR [ebp+0x1c]
  41c57e:	mov    DWORD PTR [ebp+0x1c],eax
  41c581:	mov    eax,DWORD PTR [ebp-0x8]
  41c584:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c587:	xor    eax,edi
  41c589:	add    eax,ebx
  41c58b:	imul   eax,ecx
  41c58e:	mov    ecx,DWORD PTR [ebp+0x8]
  41c591:	mov    edx,DWORD PTR [ebp-0x28]
  41c594:	xor    ecx,edi
  41c596:	lea    ecx,[ecx+edx*1+0x3272e0]
  41c59d:	cmp    eax,ecx
  41c59f:	jb     0x41c1fc
  41c5a5:	mov    esi,DWORD PTR [ebp+0x14]
  41c5a8:	mov    eax,DWORD PTR [ebp-0x20]
  41c5ab:	mov    DWORD PTR [esi],eax
  41c5ad:	jmp    0x41c5f4
  41c5af:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5b2:	mov    edx,DWORD PTR [ebp+0xc]
  41c5b5:	xor    ecx,edi
  41c5b7:	xor    edx,edi
  41c5b9:	add    ecx,ebx
  41c5bb:	add    edx,ebx
  41c5bd:	cmp    ecx,edx
  41c5bf:	jne    0x41c5d3
  41c5c1:	mov    eax,ds:0x7f642d1e
  41c5c6:	imul   eax,eax,0x9f15fcef
  41c5cc:	mov    ds:0x7f642d1e,eax
  41c5d1:	jmp    0x41c5f4
  41c5d3:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5d6:	xor    ecx,edi
  41c5d8:	add    ecx,ebx
  41c5da:	cmp    eax,ecx
  41c5dc:	je     0x41c5ea
  41c5de:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  41c5e8:	jmp    0x41c5f4
  41c5ea:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  41c5f4:	pop    edi
  41c5f5:	pop    esi
  41c5f6:	pop    ebx
  41c5f7:	leave  
  41c5f8:	ret    0x18
  41c5fb:	push   ebp
  41c5fc:	mov    ebp,esp
  41c5fe:	and    esp,0xfffffff8
  41c601:	mov    eax,DWORD PTR [ebp+0x20]
  41c604:	sub    esp,0x14
  41c607:	push   ebx
  41c608:	mov    ebx,DWORD PTR [ebp+0x14]
  41c60b:	push   esi
  41c60c:	push   edi
  41c60d:	cmp    eax,0xf89c85b9
  41c612:	jne    0x41c61e
  41c614:	push   0xf89c85b8
  41c619:	jmp    0x41c750
  41c61e:	mov    eax,DWORD PTR [ebp+0x20]
  41c621:	cmp    eax,0xf89c85b8
  41c626:	jne    0x41c632
  41c628:	push   0xf89c85bb
  41c62d:	jmp    0x41c750
  41c632:	mov    eax,DWORD PTR [ebp+0x20]
  41c635:	cmp    eax,0xf89c85bb
  41c63a:	jne    0x41c646
  41c63c:	push   0xf89c85ba
  41c641:	jmp    0x41c750
  41c646:	mov    eax,DWORD PTR [ebp+0x20]
  41c649:	cmp    eax,0xf89c85ba
  41c64e:	jne    0x41c65a
  41c650:	push   0xf89c85bd
  41c655:	jmp    0x41c750
  41c65a:	mov    ecx,DWORD PTR [ebp+0x20]
  41c65d:	mov    eax,0xf89c85be
  41c662:	cmp    ecx,eax
  41c664:	jne    0x41c720
  41c66a:	mov    eax,DWORD PTR [ebp+0x10]
  41c66d:	mov    DWORD PTR [esp+0xc],eax
  41c671:	mov    eax,DWORD PTR [ebp+0x18]
  41c674:	mov    DWORD PTR [esp+0x14],eax
  41c678:	mov    eax,DWORD PTR [ebp+0xc]
  41c67b:	mov    DWORD PTR [esp+0x18],eax
  41c67f:	mov    eax,DWORD PTR [ebp+0x8]
  41c682:	mov    DWORD PTR [esp+0x10],eax
  41c686:	mov    eax,DWORD PTR [esp+0x10]
  41c68a:	mov    ecx,DWORD PTR [esp+0x14]
  41c68e:	mov    edi,0x7510899
  41c693:	xor    eax,edi
  41c695:	mov    esi,0x3272e0
  41c69a:	add    eax,esi
  41c69c:	mov    DWORD PTR [ecx],eax
  41c69e:	mov    eax,DWORD PTR [esp+0xc]
  41c6a2:	mov    eax,DWORD PTR [eax+0x194]
  41c6a8:	mov    ecx,DWORD PTR [eax]
  41c6aa:	mov    eax,DWORD PTR [esp+0xc]
  41c6ae:	mov    eax,DWORD PTR [eax+0x194]
  41c6b4:	mov    eax,DWORD PTR [eax]
  41c6b6:	add    eax,DWORD PTR [ecx+0x3c]
  41c6b9:	mov    ecx,DWORD PTR [esp+0xc]
  41c6bd:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41c6c3:	mov    ecx,DWORD PTR [ecx+0x14]
  41c6c6:	push   0x4
  41c6c8:	push   0x3000
  41c6cd:	push   DWORD PTR [eax+0x50]
  41c6d0:	push   0x0
  41c6d2:	call   ecx
  41c6d4:	mov    DWORD PTR [ebx],eax
  41c6d6:	mov    eax,DWORD PTR [esp+0x10]
  41c6da:	push   DWORD PTR [esp+0xc]
  41c6de:	xor    eax,edi
  41c6e0:	add    eax,esi
  41c6e2:	mov    DWORD PTR [esp+0x20],eax
  41c6e6:	lea    eax,[esp+0x20]
  41c6ea:	push   eax
  41c6eb:	push   ebx
  41c6ec:	push   DWORD PTR [esp+0x20]
  41c6f0:	push   DWORD PTR [esp+0x28]
  41c6f4:	push   DWORD PTR [esp+0x24]
  41c6f8:	call   0x41c0bc
  41c6fd:	mov    eax,DWORD PTR [esp+0x10]
  41c701:	mov    ecx,DWORD PTR [ebx]
  41c703:	xor    eax,edi
  41c705:	add    eax,esi
  41c707:	cmp    ecx,eax
  41c709:	je     0x41c767
  41c70b:	mov    eax,DWORD PTR [esp+0x18]
  41c70f:	mov    ecx,DWORD PTR [esp+0x14]
  41c713:	xor    eax,edi
  41c715:	add    eax,esi
  41c717:	imul   eax,DWORD PTR [esp+0x1c]
  41c71c:	mov    DWORD PTR [ecx],eax
  41c71e:	jmp    0x41c767
  41c720:	mov    ecx,DWORD PTR [ebp+0x20]
  41c723:	cmp    ecx,0xf89c85bd
  41c729:	jne    0x41c732
  41c72b:	push   0xf89c85bc
  41c730:	jmp    0x41c750
  41c732:	mov    ecx,DWORD PTR [ebp+0x20]
  41c735:	cmp    ecx,0xf89c85bc
  41c73b:	jne    0x41c744
  41c73d:	push   0xf89c85bf
  41c742:	jmp    0x41c750
  41c744:	mov    ecx,DWORD PTR [ebp+0x20]
  41c747:	cmp    ecx,0xf89c85bf
  41c74d:	jne    0x41c767
  41c74f:	push   eax
  41c750:	push   DWORD PTR [ebp+0x1c]
  41c753:	push   DWORD PTR [ebp+0x18]
  41c756:	push   ebx
  41c757:	push   DWORD PTR [ebp+0x10]
  41c75a:	push   DWORD PTR [ebp+0xc]
  41c75d:	push   DWORD PTR [ebp+0x8]
  41c760:	call   0x41c5fb
  41c765:	mov    DWORD PTR [ebx],eax
  41c767:	mov    eax,DWORD PTR [ebx]
  41c769:	pop    edi
  41c76a:	pop    esi
  41c76b:	pop    ebx
  41c76c:	mov    esp,ebp
  41c76e:	pop    ebp
  41c76f:	ret    0x1c
  41c772:	push   ebp
  41c773:	mov    ebp,esp
  41c775:	sub    esp,0xc
  41c778:	mov    eax,0xf89c85b9
  41c77d:	mov    DWORD PTR [ebp-0x8],eax
  41c780:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41c787:	mov    ecx,DWORD PTR [ebp-0x8]
  41c78a:	xor    ecx,0x7510899
  41c790:	add    ecx,0x3272e0
  41c796:	mov    DWORD PTR [ebp-0x4],ecx
  41c799:	mov    ecx,DWORD PTR [ebp+0xc]
  41c79c:	push   eax
  41c79d:	mov    DWORD PTR [ebp+0xc],ecx
  41c7a0:	push   DWORD PTR [ebp+0xc]
  41c7a3:	lea    eax,[ebp-0x4]
  41c7a6:	push   DWORD PTR [ebp+0x8]
  41c7a9:	push   eax
  41c7aa:	push   DWORD PTR [ebp+0xc]
  41c7ad:	push   DWORD PTR [ebp-0xc]
  41c7b0:	push   DWORD PTR [ebp-0x8]
  41c7b3:	call   0x41c5fb
  41c7b8:	mov    DWORD PTR [ebp-0x4],eax
  41c7bb:	mov    eax,DWORD PTR [ebp-0x4]
  41c7be:	leave  
  41c7bf:	ret    0x8
  41c7c2:	jg     0x41c778
  41c7c4:	jge    0xf7418799
  41c7ca:	xor    BYTE PTR [ebp-0x404c6e92],0xe5
  41c7d1:	and    eax,0x13f3e
  41c7d6:	daa    
  41c7d7:	add    eax,DWORD PTR [eax]
  41c7d9:	add    BYTE PTR [ecx],ah
  41c7db:	fisubr WORD PTR [edi-0x7f]
  41c7de:	cmp    cl,cl
  41c7e0:	and    al,0x2c
  41c7e2:	shl    ebx,1
  41c7e4:	fld    QWORD PTR [esi]
  41c7e6:	shl    ebx,0x50
  41c7e9:	cdq    
  41c7ea:	ds jne 0x41c849
  41c7ed:	add    BYTE PTR [ecx-0x631a14e1],al
  41c7f3:	ror    BYTE PTR [ebp+0x3],cl
  41c7f6:	inc    eax
  41c7f7:	or     al,0xd
  41c7f9:	mov    al,0xee
  41c7fb:	add    DWORD PTR [ecx-0x212c9a92],esi
  41c801:	jle    0x41c7f9
  41c803:	hlt    
  41c804:	adc    ebp,DWORD PTR [ecx]
  41c806:	jnp    0x41c864
  41c808:	sbb    BYTE PTR [esi+0x4e],cl
  41c80b:	aaa    
  41c80c:	test   DWORD PTR [ecx+ecx*4+0xb7eca49],ebx
  41c813:	inc    ebp
  41c814:	jle    0x41c7ba
  41c816:	lds    ebx,FWORD PTR [ebp-0x5]
  41c819:	add    eax,0x31d5e6f7
  41c81e:	jae    0x41c86d
  41c820:	mov    eax,0xdd124625
  41c825:	dec    ebp
  41c826:	test   DWORD PTR [ecx+0x2bc8c725],ecx
  41c82c:	repz or bh,BYTE PTR [ecx+0x1f]
  41c830:	inc    edx
  41c831:	pop    edi
  41c832:	test   al,0xd3
  41c834:	cmc    
  41c835:	or     eax,DWORD PTR [edx-0x1427905e]
  41c83b:	push   0x8bc535a9
  41c840:	mov    al,ds:0x2dda125d
  41c845:	popa   
  41c846:	out    0xe3,eax
  41c848:	stos   BYTE PTR es:[edi],al
  41c849:	sub    DWORD PTR [edi],0x56
  41c84c:	or     ebx,DWORD PTR [edi]
  41c84e:	jbe    0x41c850
  41c850:	pop    ds
  41c851:	ss and al,0xe5
  41c854:	jae    0x41c88c
  41c856:	add    BYTE PTR [ecx-0x2a],cl
  41c859:	xchg   ebx,eax
  41c85a:	pop    ebx
  41c85b:	(bad)  
  41c85c:	adc    BYTE PTR [ebp+0x75],dh
  41c85f:	mov    ds:0xe5a19cec,ax
  41c865:	or     dh,cl
  41c867:	xchg   ebp,eax
  41c868:	inc    eax
  41c869:	mov    ch,0xa5
  41c86b:	pop    ds
  41c86c:	xchg   esi,eax
  41c86d:	(bad)  
  41c86e:	xchg   esp,eax
  41c86f:	mov    WORD PTR [ecx+eax*4+0x46],ds
  41c873:	aam    0xcb
  41c875:	aaa    
  41c876:	mov    WORD PTR [ebx],ds
  41c878:	inc    esp
  41c879:	xor    cl,BYTE PTR [esp+eax*4-0x6d]
  41c87d:	in     al,dx
  41c87e:	xor    ch,cl
  41c880:	and    eax,0x97189bc0
  41c885:	fs pop eax
  41c887:	sbb    al,0x5e
  41c889:	sub    BYTE PTR [eax-0xa],cl
  41c88c:	pusha  
  41c88d:	push   es
  41c88e:	mov    bh,0xc1
  41c890:	cdq    
  41c891:	mov    dh,0xd8
  41c893:	xor    ch,BYTE PTR [eax]
  41c895:	das    
  41c896:	xchg   esi,eax
  41c897:	adc    eax,DWORD PTR [ebx+ebx*8-0x4f]
  41c89b:	jmp    0x41c891
  41c89d:	xor    dl,BYTE PTR [ebp-0x3a75a86e]
  41c8a3:	dec    ecx
  41c8a4:	cwde   
  41c8a5:	data16 mov bl,BYTE PTR [ebx]
  41c8a8:	gs out dx,al
  41c8aa:	and    bh,BYTE PTR [edi+0x4e11ee51]
  41c8b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8b1:	xchg   esp,eax
  41c8b2:	add    BYTE PTR [edx],bl
  41c8b4:	lods   eax,DWORD PTR ds:[si]
  41c8b6:	sbb    eax,0x74a7bb57
  41c8bb:	inc    eax
  41c8bc:	rol    BYTE PTR [ebx+0x24],cl
  41c8bf:	iret   
  41c8c0:	inc    edx
  41c8c1:	xchg   ebx,eax
  41c8c2:	sub    dl,bl
  41c8c4:	pop    eax
  41c8c5:	adc    ah,al
  41c8c7:	push   edx
  41c8c8:	scas   eax,DWORD PTR es:[edi]
  41c8c9:	jno    0x41c8fb
  41c8cb:	into   
  41c8cc:	dec    ecx
  41c8cd:	fmul   QWORD PTR [edi]
  41c8cf:	xor    al,0x94
  41c8d1:	add    edx,DWORD PTR [ebx]
  41c8d3:	out    0xe6,al
  41c8d5:	or     edi,DWORD PTR [esi+ebx*8+0x5c63765f]
  41c8dc:	mov    ebp,0xff80c7c5
  41c8e1:	xor    eax,0x956f87c8
  41c8e6:	in     eax,0x9a
  41c8e8:	sbb    DWORD PTR [ebp-0x7c],edi
  41c8eb:	and    DWORD PTR [esi],esp
  41c8ed:	(bad)  
  41c8ee:	mov    cl,0x51
  41c8f0:	test   BYTE PTR [esi],0x95
  41c8f3:	ror    BYTE PTR [esi+0x69],0x79
  41c8f7:	pop    eax
  41c8f8:	inc    ebx
  41c8f9:	cld    
  41c8fa:	jnp    0x41c95e
  41c8fc:	mov    bh,BYTE PTR [ebp+0x5b]
  41c8ff:	fistp  QWORD PTR [edi-0x212ca2a3]
  41c905:	or     DWORD PTR ds:0xd35c7f01,esi
  41c90b:	mov    dl,0xea
  41c90d:	(bad)  
  41c90f:	rcl    DWORD PTR [edi+ecx*1-0x558f2988],cl
  41c916:	stos   DWORD PTR es:[edi],eax
  41c917:	nop
  41c918:	sub    al,0x7a
  41c91a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c91b:	test   DWORD PTR [edi+ecx*2+0x1bcf7ebc],edx
  41c922:	cmp    al,0xd3
  41c924:	test   BYTE PTR [ebx],dl
  41c926:	push   cs
  41c927:	aad    0xd3
  41c929:	cld    
  41c92a:	sub    esp,edi
  41c92c:	rcr    BYTE PTR [esi+edi*2],1
  41c92f:	dec    eax
  41c930:	ins    DWORD PTR es:[edi],dx
  41c931:	loop   0x41c948
  41c933:	push   es
  41c934:	mov    ch,0xe6
  41c936:	or     bl,BYTE PTR [edi]
  41c938:	xchg   ebx,eax
  41c939:	cld    
  41c93a:	stos   DWORD PTR es:[edi],eax
  41c93b:	popf   
  41c93c:	and    edx,DWORD PTR [esi]
  41c93e:	adc    BYTE PTR [ecx+0x7d],0xdf
  41c942:	shl    ecx,cl
  41c944:	shl    BYTE PTR [eax-0x78],0x66
  41c948:	sbb    eax,0xb0d68082
  41c94d:	jmp    0x41c932
  41c94f:	add    al,0x61
  41c951:	sti    
  41c952:	leave  
  41c953:	sbb    ebp,DWORD PTR [ecx]
  41c955:	xor    DWORD PTR [edx+0x6d],edx
  41c958:	addr16 adc eax,eax
  41c95b:	mov    esi,0x8669d202
  41c960:	popf   
  41c961:	fstp   DWORD PTR [esi]
  41c963:	fwait
  41c964:	out    dx,eax
  41c965:	mov    ds:0x6db0493b,al
  41c96a:	mov    cs,esi
  41c96c:	xchg   ebp,eax
  41c96d:	mov    esp,DWORD PTR [ebx+0x35]
  41c970:	mov    al,ds:0x5242eb8a
  41c975:	xor    ecx,DWORD PTR [ecx]
  41c977:	aaa    
  41c978:	and    BYTE PTR [eax-0x5d],ah
  41c97b:	add    bh,BYTE PTR [ebp-0x71]
  41c97e:	push   eax
  41c97f:	jbe    0x41c9fd
  41c981:	jb     0x41c962
  41c983:	cdq    
  41c984:	adc    DWORD PTR [ebp-0x70fad11c],0xffffff80
  41c98b:	mov    esp,DWORD PTR [edx+edx*8]
  41c98e:	or     ebx,DWORD PTR [edx+0x79]
  41c991:	pop    ss
  41c992:	fcom   DWORD PTR [edi]
  41c994:	mov    esp,0x6494a3c5
  41c999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c99a:	jno    0x41c9f9
  41c99c:	push   0x21
  41c99e:	mov    bl,0xdf
  41c9a0:	xor    al,0xef
  41c9a2:	mov    eax,ds
  41c9a4:	mov    bh,0xd
  41c9a6:	jle    0x41c9e1
  41c9a8:	or     DWORD PTR es:[eax+0x5c],0x7a5723c7
  41c9b0:	mov    ebp,0x86cf0a5a
  41c9b5:	les    ebp,FWORD PTR [esp+ebp*4+0x633118e]
  41c9bc:	mov    ds,WORD PTR [esi]
  41c9be:	dec    esi
  41c9bf:	or     al,0x6b
  41c9c1:	repnz sub BYTE PTR [ebp+0x60208805],al
  41c9c8:	mov    ecx,0xa6994604
  41c9cd:	mov    al,ds:0xccb8a71b
  41c9d2:	pop    esi
  41c9d3:	mov    esp,0xd015311a
  41c9d8:	mov    eax,0x49dc2f2c
  41c9dd:	mov    dh,0x77
  41c9df:	add    eax,DWORD PTR [ebx+0x26]
  41c9e2:	int    0x47
  41c9e4:	lds    ebp,FWORD PTR ss:[ebx]
  41c9e7:	sub    ebp,eax
  41c9e9:	enter  0x848d,0x1a
  41c9ed:	cmp    eax,0x3fe9f3d
  41c9f2:	cli    
  41c9f3:	adc    DWORD PTR [ecx+0x43a9d7f1],0x6464e831
  41c9fd:	outs   dx,BYTE PTR ds:[esi]
  41c9fe:	inc    eax
  41c9ff:	nop
  41ca00:	shr    esp,1
  41ca02:	rcr    ebp,1
  41ca04:	shl    DWORD PTR [edx+0x21],cl
  41ca07:	shl    DWORD PTR [eax+0x7e63b8],0xa6
  41ca0e:	out    dx,al
  41ca0f:	test   DWORD PTR [ebp+ebp*8+0x32],0x15efcf7e
  41ca17:	(bad)  
  41ca18:	xlat   BYTE PTR ds:[ebx]
  41ca19:	and    eax,0x13e08fad
  41ca1e:	ins    DWORD PTR es:[edi],dx
  41ca1f:	adc    al,0x34
  41ca21:	xor    al,0xe7
  41ca23:	aas    
  41ca24:	add    eax,0xeb99830d
  41ca29:	push   cs
  41ca2a:	in     eax,0x1f
  41ca2c:	cmp    BYTE PTR [edx],dh
  41ca2e:	mov    ah,0xcc
  41ca30:	jmp    0x8a896fc7
  41ca35:	cmp    edi,esp
  41ca37:	or     BYTE PTR [edx+eax*2],0xeb
  41ca3b:	inc    esi
  41ca3c:	cmp    BYTE PTR [edx-0x23e3a874],al
  41ca42:	outs   dx,DWORD PTR ds:[esi]
  41ca43:	ret    0xd0da
  41ca46:	les    esi,FWORD PTR [edx+0x2da0c2f4]
  41ca4c:	lods   al,BYTE PTR ds:[esi]
  41ca4d:	inc    eax
  41ca4e:	xor    al,BYTE PTR [eax]
  41ca50:	fmul   QWORD PTR [ebx+ebp*1+0x67]
  41ca54:	mov    bh,0xa5
  41ca56:	add    al,0x92
  41ca58:	mov    ebx,0xf535a732
  41ca5d:	push   es
  41ca5e:	test   BYTE PTR [edx+0x3b],ch
  41ca61:	call   0x31c1:0x5a97b035
  41ca68:	mul    BYTE PTR [eax]
  41ca6a:	cmc    
  41ca6b:	fdivp  st(2),st
  41ca6d:	push   0xbf89bd3f
  41ca72:	xchg   ecx,eax
  41ca73:	mov    ebp,0x980ac86b
  41ca78:	cmp    edi,DWORD PTR [esi]
  41ca7a:	push   eax
  41ca7b:	repz repz pop esp
  41ca7e:	icebp  
  41ca7f:	shl    BYTE PTR [ebx+edx*8],0x9a
  41ca83:	adc    eax,DWORD PTR [edx+0x2f89b6e5]
  41ca89:	sub    DWORD PTR [ebx-0x7e75c815],esp
  41ca8f:	sub    edx,esp
  41ca91:	pop    esi
  41ca92:	div    BYTE PTR ds:0x79730df
  41ca98:	imul   esi,DWORD PTR ds:0x64c532c9,0x90f3351d
  41caa2:	lock adc al,0xd3
  41caa5:	retf   
  41caa6:	mov    ds:0x6daf54f3,eax
  41caab:	jns    0x41ca4c
  41caad:	jnp    0x41caeb
  41caaf:	rol    ebx,0x6b
  41cab2:	cmp    al,0xa6
  41cab4:	mov    cl,0xf7
  41cab6:	xor    BYTE PTR [ebx],bh
  41cab8:	vmwrite eax,DWORD PTR [ebp-0x54]
  41cabc:	icebp  
  41cabd:	bound  ebx,QWORD PTR ds:0x94afd453
  41cac3:	xor    edx,DWORD PTR [esi]
  41cac5:	fwait
  41cac6:	in     eax,0xf9
  41cac8:	mov    ds:0xf544aa73,al
  41cacd:	sbb    ah,BYTE PTR [ecx]
  41cacf:	adc    eax,0x31513dea
  41cad4:	push   esi
  41cad5:	jmp    0x7ec1:0xf25af63d
  41cadc:	adc    cl,bl
  41cade:	mov    ebx,0xe070dcc
  41cae3:	lahf   
  41cae4:	and    al,0x50
  41cae6:	adc    ebp,esp
  41cae8:	lods   al,BYTE PTR ds:[esi]
  41cae9:	in     eax,0x76
  41caeb:	cli    
  41caec:	(bad)  
  41caed:	out    0x52,eax
  41caef:	fs pushf 
  41caf1:	lea    edx,[bx+di-0x6e]
  41caf5:	shl    ch,0x95
  41caf8:	ins    DWORD PTR es:[edi],dx
  41caf9:	fdiv   DWORD PTR [ecx+0x43]
  41cafc:	bound  esi,QWORD PTR [ebp+0x3d]
  41caff:	mov    bl,0x2a
  41cb01:	add    BYTE PTR [edi+0x4c],dh
  41cb04:	idiv   dh
  41cb06:	(bad)  
  41cb07:	(bad)  
  41cb08:	jg     0x41cad7
  41cb0a:	mov    ah,0x6b
  41cb0c:	mov    dh,0x14
  41cb0e:	xlat   BYTE PTR ds:[ebx]
  41cb0f:	xor    bh,BYTE PTR [edx-0x36]
  41cb12:	gs inc edx
  41cb14:	add    DWORD PTR [eax],eax
  41cb16:	daa    
  41cb17:	add    eax,DWORD PTR [eax]
  41cb19:	add    bh,ah
  41cb1b:	xchg   esi,edi
  41cb1d:	sub    eax,0x2a713fb
  41cb22:	adc    cl,BYTE PTR [ecx+0x6c9a176e]
  41cb28:	jmp    0xe091052e
  41cb2d:	xchg   esi,eax
  41cb2e:	xchg   DWORD PTR [eax],edx
  41cb30:	int3   
  41cb31:	adc    al,0x34
  41cb33:	pushf  
  41cb34:	rcl    DWORD PTR [ecx+ebp*4-0x28],0x9a
  41cb39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb3a:	jmp    DWORD PTR [ebx+0x54afa6a4]
  41cb40:	ja     0x41cb6b
  41cb42:	(bad)
  41cb45:	mov    dl,0x3a
  41cb47:	jge    0x41cb6f
  41cb49:	push   0x430a1a5d
  41cb4e:	and    al,0xfc
  41cb50:	mov    WORD PTR [ebp-0x7b042ccd],?
  41cb56:	pop    ecx
  41cb57:	imul   esi,DWORD PTR ds:0x5dc2c117,0xffffffbf
  41cb5e:	adc    bh,BYTE PTR [ebx]
  41cb60:	sbb    eax,0x6c901bf
  41cb65:	adc    bh,BYTE PTR [edi-0x4b8be9f2]
  41cb6b:	cmp    ebx,ebx
  41cb6d:	adc    al,0xb2
  41cb6f:	in     eax,0x60
  41cb71:	dec    ebp
  41cb72:	mov    ecx,0x6d7e148f
  41cb77:	sub    eax,0x87c64c96
  41cb7c:	sbb    eax,0x36cd7587
  41cb81:	mov    ch,0x84
  41cb83:	clc    
  41cb84:	ficomp DWORD PTR [edi+0x2]
  41cb87:	clc    
  41cb88:	fisub  WORD PTR [esi]
  41cb8a:	imul   ebp,ecx,0xaa8898a6
  41cb90:	sbb    dl,BYTE PTR ds:0x9bd99f13
  41cb96:	gs (bad) 
  41cb98:	xor    cl,BYTE PTR [edx+0x44]
  41cb9b:	xor    DWORD PTR [edi+0x53f29afb],edi
  41cba1:	or     eax,0x8db77fb7
  41cba6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cba7:	and    dl,dl
  41cba9:	add    DWORD PTR [eax+0x29],esp
  41cbac:	out    0xe1,al
  41cbae:	imul   esi
  41cbb0:	xchg   DWORD PTR [edi-0x3e],esp
  41cbb3:	mov    ?,WORD PTR [ecx]
  41cbb5:	pop    esp
  41cbb6:	xor    eax,0x5018051d
  41cbbb:	imul   esi,DWORD PTR [edi-0x412a3126],0xb2118078
  41cbc5:	adc    DWORD PTR [ecx+0x72b10420],ebx
  41cbcb:	test   DWORD PTR [ecx-0x5f],0xf4722f83
  41cbd2:	ret    0xf021
  41cbd5:	cwde   
  41cbd6:	mov    dl,0x93
  41cbd8:	jmp    0x41cbf7
  41cbda:	dec    esp
  41cbdb:	mov    ecx,0x6b31cbc1
  41cbe0:	inc    edx
  41cbe1:	out    dx,al
  41cbe2:	call   0x8e7e933e
  41cbe7:	test   DWORD PTR [bp+si],edx
  41cbea:	push   ss
  41cbeb:	nop
  41cbec:	sub    DWORD PTR [eax+0x54],edi
  41cbef:	add    BYTE PTR [ebp-0x14],cl
  41cbf2:	cmp    eax,esi
  41cbf4:	push   0x7150227b
  41cbf9:	and    bl,dh
  41cbfb:	lods   al,BYTE PTR ds:[esi]
  41cbfc:	xchg   edx,eax
  41cbfd:	(bad)  
  41cbff:	loopne 0x41cbe6
  41cc01:	pop    eax
  41cc02:	(bad)  
  41cc04:	(bad)  
  41cc06:	lods   al,BYTE PTR ds:[esi]
  41cc07:	xor    bl,BYTE PTR [edi]
  41cc09:	frstor [ebp+ebx*4-0x7e43f24]
  41cc10:	sub    ah,BYTE PTR [eax]
  41cc12:	cdq    
  41cc13:	xor    eax,0x67c20ac
  41cc18:	sbb    al,0x8f
  41cc1a:	dec    edi
  41cc1b:	lods   al,BYTE PTR ds:[esi]
  41cc1c:	or     BYTE PTR [ebx+0x3091208d],0x8e
  41cc23:	aas    
  41cc24:	xchg   edx,eax
  41cc25:	int3   
  41cc26:	push   edx
  41cc27:	inc    edx
  41cc28:	push   cs
  41cc29:	mov    edx,0xf74b6941
  41cc2e:	popa   
  41cc2f:	jns    0x41cc4b
  41cc31:	sub    al,0x2f
  41cc33:	cmp    dl,BYTE PTR [edx-0x69]
  41cc36:	(bad)  
  41cc37:	sbb    DWORD PTR [edx],edx
  41cc39:	adc    BYTE PTR [edx-0x1a],ah
  41cc3c:	(bad)  
  41cc3d:	fwait
  41cc3e:	lods   eax,DWORD PTR ds:[esi]
  41cc3f:	mov    ecx,0x67c92523
  41cc44:	mov    ch,0x4d
  41cc46:	sete   cl
  41cc49:	and    esi,DWORD PTR gs:[eax-0xa]
  41cc4d:	xchg   edi,eax
  41cc4e:	fldln2 
  41cc50:	fs adc eax,0x86e80d65
  41cc56:	mov    edi,0x413860a0
  41cc5b:	cmp    ah,BYTE PTR [ebx]
  41cc5d:	test   al,ch
  41cc5f:	lods   eax,DWORD PTR ds:[esi]
  41cc60:	fisttp WORD PTR [ebp+0x152e4def]
  41cc66:	jl     0x41cbfb
  41cc68:	mov    bl,0x2b
  41cc6a:	(bad)  
  41cc6b:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41cc6d:	ror    al,cl
  41cc6f:	xchg   ebp,eax
  41cc70:	mov    al,ds:0x124f818
  41cc75:	add    al,0x18
  41cc77:	xchg   edi,eax
  41cc78:	imul   ebx,DWORD PTR [ebx+0x7ebef5f3],0x3a
  41cc7f:	sbb    al,0x63
  41cc81:	sub    eax,0x543cdec5
  41cc86:	addr16 jmp 0x48cf4167
  41cc8c:	pop    ecx
  41cc8d:	mov    al,0xe4
  41cc8f:	jg     0x41cc4d
  41cc91:	ins    DWORD PTR es:[edi],dx
  41cc92:	cmp    DWORD PTR [edx+ecx*2],ebx
  41cc95:	(bad)  
  41cc97:	test   dh,al
  41cc99:	std    
  41cc9a:	jp     0x41cc1e
  41cc9c:	jb     0x41cc89
  41cc9e:	sub    al,0xcf
  41cca0:	lods   eax,DWORD PTR ds:[esi]
  41cca1:	cld    
  41cca2:	lods   al,BYTE PTR ds:[esi]
  41cca3:	mov    ecx,0xf2e1e5dc
  41cca8:	add    ebp,esi
  41ccaa:	jp     0x41cd02
  41ccac:	jns    0x41cd23
  41ccae:	imul   ecx,ebp,0x639ee1a3
  41ccb4:	(bad)
  41ccb7:	sahf   
  41ccb8:	push   esp
  41ccb9:	outs   dx,BYTE PTR ds:[esi]
  41ccba:	pop    ebp
  41ccbb:	cmp    BYTE PTR [ebx],0xe2
  41ccbe:	xchg   esi,eax
  41ccbf:	adc    ch,BYTE PTR [ecx]
  41ccc1:	loope  0x41cd0e
  41ccc3:	sub    ah,0x6c
  41ccc6:	sub    cl,0x20
  41ccc9:	mov    esp,0xdd3e1fd1
  41ccce:	cmp    BYTE PTR [edx-0x1c],dl
  41ccd1:	aaa    
  41ccd2:	pop    esp
  41ccd3:	add    esi,DWORD PTR [eax+0x65]
  41ccd6:	(bad)  
  41ccd7:	push   eax
  41ccd8:	scas   al,BYTE PTR es:[edi]
  41ccd9:	repnz inc esp
  41ccdb:	mov    eax,ds:0x7dd3caa2
  41cce0:	jp     0x41cd31
  41cce2:	out    0xb8,eax
  41cce4:	fisttp QWORD PTR ds:0x90aa291d
  41ccea:	push   ebp
  41cceb:	mov    ds:0xe775d25,eax
  41ccf0:	lfs    eax,FWORD PTR [ebx+0x52b93dce]
  41ccf7:	push   0x9
  41ccf9:	cmp    al,0x3
  41ccfb:	push   ebp
  41ccfc:	imul   esi,ebx,0x7838b16c
  41cd02:	sub    bl,0xe3
  41cd05:	jb     0x41cd17
  41cd07:	shr    BYTE PTR [ecx-0x699e17fc],1
  41cd0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd0e:	or     ebp,edx
  41cd10:	xchg   ebx,eax
  41cd11:	les    edi,FWORD PTR [esi+0x6c667012]
  41cd17:	add    cl,bh
  41cd19:	push   ebp
  41cd1a:	jle    0x41cd1c
  41cd1c:	in     eax,0xf7
  41cd1e:	(bad)  
  41cd21:	(bad)  
  41cd24:	not    BYTE PTR [edx+0x24]
  41cd27:	or     al,0xe8
  41cd29:	mov    ecx,eax
  41cd2b:	(bad)  
  41cd2c:	adc    BYTE PTR [esp+ebp*8],al
  41cd2f:	(bad)  
  41cd30:	lea    edx,[ebx-0x10ce00f7]
  41cd36:	jmp    0xf80a:0x72ed564f
  41cd3d:	mov    ch,0x3e
  41cd3f:	or     dl,BYTE PTR [ecx-0x12]
  41cd42:	retf   
  41cd43:	push   0xffffff89
  41cd45:	sub    ch,cl
  41cd47:	arpl   bx,bp
  41cd49:	and    BYTE PTR [ebx+0x5216bd40],bl
  41cd4f:	std    
  41cd50:	push   ebx
  41cd51:	pop    es
  41cd52:	int    0xe7
  41cd54:	xchg   esp,eax
  41cd55:	sub    eax,0x9e3db027
  41cd5a:	pop    edx
  41cd5b:	or     DWORD PTR [eax+0x1372a571],eax
  41cd61:	sub    al,0xf6
  41cd63:	dec    ebp
  41cd64:	(bad)  
  41cd65:	pop    ebx
  41cd66:	sbb    BYTE PTR [ecx-0x15b14a93],0xa4
  41cd6d:	imul   ebx,DWORD PTR [esp+ebx*4+0x5e],0x4dd64e52
  41cd75:	mov    ds:0x169449ee,eax
  41cd7a:	sahf   
  41cd7b:	arpl   WORD PTR [eax+0x1199546c],dx
  41cd81:	int    0x68
  41cd83:	addr16 iret 
  41cd85:	(bad)  
  41cd86:	push   esi
  41cd87:	jo     0x41cded
  41cd89:	mov    ah,0x4c
  41cd8b:	inc    esp
  41cd8c:	scas   eax,DWORD PTR es:[edi]
  41cd8d:	lds    eax,FWORD PTR [esi-0x25db9fe5]
  41cd93:	adc    al,0x8a
  41cd95:	and    ah,BYTE PTR [esi+0x77e318b7]
  41cd9b:	or     bl,bh
  41cd9d:	cwde   
  41cd9e:	jmp    0x773a:0x6e5add21
  41cda5:	jb     0x41ce22
  41cda7:	adc    bl,BYTE PTR [eax+0x2a]
  41cdaa:	and    eax,0x88b37a65
  41cdaf:	loopne 0x41cdba
  41cdb1:	xchg   bh,cl
  41cdb3:	xchg   BYTE PTR [eax+ecx*1+0x78],cl
  41cdb7:	mov    ecx,0x7626cfc9
  41cdbc:	jle    0x41cd44
  41cdbe:	pop    ebp
  41cdbf:	call   0x8d28:0xf6a3f700
  41cdc6:	add    BYTE PTR [edx],dh
  41cdc8:	or     DWORD PTR [ebx],0x6aefdfd8
  41cdce:	lods   eax,DWORD PTR ds:[esi]
  41cdcf:	ret    
  41cdd0:	iret   
  41cdd1:	clc    
  41cdd2:	pusha  
  41cdd3:	clc    
  41cdd4:	cmp    DWORD PTR [ecx],0x502db971
  41cdda:	cdq    
  41cddb:	pop    esp
  41cddc:	int3   
  41cddd:	dec    eax
  41cdde:	lods   eax,DWORD PTR ds:[esi]
  41cddf:	xchg   esi,eax
  41cde0:	cmp    eax,0x3c1bdc8
  41cde5:	push   edx
  41cde6:	fsub   DWORD PTR [edi-0x7c]
  41cde9:	mov    al,0xfb
  41cdeb:	sub    eax,0x4afe7e44
  41cdf0:	xchg   ecx,eax
  41cdf1:	xor    al,0x31
  41cdf3:	push   edi
  41cdf4:	sbb    edi,DWORD PTR [edi]
  41cdf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdf7:	cwde   
  41cdf8:	or     ebx,DWORD PTR [eax]
  41cdfa:	adc    eax,0x119b1f6b
  41cdff:	adc    BYTE PTR ds:0xdee30348,0xad
  41ce06:	mov    DWORD PTR [ebp-0x4524c7f5],0xeb60218
  41ce10:	outs   dx,DWORD PTR ds:[esi]
  41ce11:	ror    BYTE PTR [edx-0x32],cl
  41ce14:	pop    ebx
  41ce15:	std    
  41ce16:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41ce18:	dec    ebx
  41ce19:	cmp    al,0xf1
  41ce1b:	add    eax,0x695ec60d
  41ce20:	cs in  al,0x7
  41ce23:	or     BYTE PTR [edi-0x72],bl
  41ce26:	jb     0x41ce28
  41ce28:	shl    ebp,0xba
  41ce2b:	test   DWORD PTR [edx],edi
  41ce2d:	scas   eax,DWORD PTR es:[edi]
  41ce2e:	pop    ds
  41ce2f:	loopne 0x41ce65
  41ce31:	mov    edx,0x5af96d44
  41ce36:	ins    BYTE PTR es:[edi],dx
  41ce37:	ins    DWORD PTR es:[edi],dx
  41ce38:	ds call 0xc27c:0x78eedfe5
  41ce40:	ja     0x41ce42
  41ce42:	pop    es
  41ce43:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  41ce49:	pop    ds
  41ce4a:	xchg   BYTE PTR [ebx],bl
  41ce4c:	mov    edx,0xaf752d0
  41ce51:	js     0x41cddf
  41ce53:	inc    ebp
  41ce54:	add    DWORD PTR [eax],eax
  41ce56:	daa    
  41ce57:	add    eax,DWORD PTR [eax]
  41ce59:	add    BYTE PTR [eax],ah
  41ce5b:	or     BYTE PTR [edi+0x2d],ah
  41ce5e:	lahf   
  41ce5f:	or     DWORD PTR [eax+0x17e373f6],eax
  41ce65:	imul   esp,ebx,0x5b
  41ce68:	retf   
  41ce69:	mov    edi,0xdc6d37da
  41ce6e:	or     DWORD PTR [esi],0x3f
  41ce71:	(bad)  
  41ce72:	jnp    0x41ce68
  41ce74:	sbb    eax,ecx
  41ce76:	mov    al,0x8a
  41ce78:	cmp    ch,BYTE PTR [eax-0x20]
  41ce7b:	dec    ebx
  41ce7c:	dec    ebx
  41ce7d:	dec    edx
  41ce7e:	outs   dx,BYTE PTR cs:[esi]
  41ce80:	xor    al,0x3e
  41ce82:	add    eax,DWORD PTR [ebx-0xa1dac30]
  41ce88:	enter  0xfd7f,0xd9
  41ce8c:	cmp    BYTE PTR gs:[ebx],dl
  41ce8f:	jns    0x41cf0c
  41ce91:	lods   al,BYTE PTR ds:[esi]
  41ce92:	jb     0x41cef7
  41ce94:	xor    al,0x5c
  41ce96:	mov    ah,al
  41ce98:	adc    eax,0x423a7a05
  41ce9d:	push   ebp
  41ce9e:	mov    cl,0x43
  41cea0:	into   
  41cea1:	outs   dx,DWORD PTR ds:[esi]
  41cea2:	test   DWORD PTR [eax-0x600e320b],ebx
  41cea8:	cwde   
  41cea9:	dec    edx
  41ceaa:	leave  
  41ceab:	cmc    
  41ceac:	imul   esi,DWORD PTR [ebx+0x5bc86e4f],0x3d729b80
  41ceb6:	and    esp,edx
  41ceb8:	mov    bh,0xc9
  41ceba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cebb:	lock xor ah,BYTE PTR ds:[ebp+0x5e]
  41cec0:	or     ebp,DWORD PTR [edx]
  41cec2:	je     0x41cf41
  41cec4:	jns    0x41ce7b
  41cec6:	les    edx,FWORD PTR [ecx]
  41cec8:	std    
  41cec9:	call   0x4931:0x3c8b45c9
  41ced0:	xchg   BYTE PTR [ebx+0x4faa02c7],dh
  41ced6:	fmulp  st(6),st
  41ced8:	jns    0x41ce9d
  41ceda:	int3   
  41cedb:	add    al,0x79
  41cedd:	jno    0x41ce66
  41cedf:	cli    
  41cee0:	popf   
  41cee1:	mov    dh,0x79
  41cee3:	xor    esi,DWORD PTR [esi]
  41cee5:	or     ch,al
  41cee7:	fbstp  TBYTE PTR [edx-0x4f57f8d]
  41ceed:	in     eax,dx
  41ceee:	(bad)  
  41ceef:	in     al,0xc5
  41cef1:	jne    0x41cf49
  41cef3:	inc    edx
  41cef4:	mov    ah,0xb0
  41cef6:	fiadd  WORD PTR [edi*1+0x7bb3aed5]
  41cefd:	sub    DWORD PTR [esp+eiz*8-0x3f],eax
  41cf01:	jnp    0x41cf5a
  41cf03:	icebp  
  41cf04:	xor    al,0x8c
  41cf06:	sbb    eax,0x2f33a652
  41cf0b:	popa   
  41cf0c:	push   edx
  41cf0d:	outs   dx,DWORD PTR ds:[esi]
  41cf0e:	jne    0x41cf09
  41cf10:	(bad)  
  41cf12:	sub    eax,DWORD PTR [esi]
  41cf14:	(bad)  
  41cf15:	add    DWORD PTR [ebp+0x253caed9],0xffffffa4
  41cf1c:	mov    ch,0x50
  41cf1e:	push   ecx
  41cf1f:	sub    ebp,edx
  41cf21:	cli    
  41cf22:	int    0x4d
  41cf24:	xor    eax,0xdf7f2174
  41cf29:	add    esi,DWORD PTR [ebp+0x23f1bc6c]
  41cf2f:	int    0x5
  41cf31:	ins    BYTE PTR es:[edi],dx
  41cf32:	dec    edi
  41cf33:	and    al,BYTE PTR [ecx-0x690989df]
  41cf39:	inc    eax
  41cf3a:	es aas 
  41cf3c:	add    esp,DWORD PTR [ebp+0x7a2a865a]
  41cf42:	cmp    al,0x26
  41cf44:	mov    bl,0x77
  41cf46:	sbb    ebp,DWORD PTR [esi+0x5e]
  41cf49:	xor    DWORD PTR [ebp-0x25],edx
  41cf4c:	pop    es
  41cf4d:	jg     0x41cf6d
  41cf4f:	mov    dl,0xd5
  41cf51:	sbb    dh,0x83
  41cf54:	add    BYTE PTR [esi+0x41],ch
  41cf57:	lds    esi,FWORD PTR [esp+edx*8-0x4c5e36ff]
  41cf5e:	jno    0x41cf12
  41cf60:	outs   dx,BYTE PTR ds:[esi]
  41cf61:	clc    
  41cf62:	cmp    al,0x7a
  41cf64:	cs mov al,0x53
  41cf67:	leave  
  41cf68:	sbb    ecx,DWORD PTR [eax+eiz*8]
  41cf6b:	push   ecx
  41cf6c:	add    al,0x95
  41cf6e:	pop    esp
  41cf6f:	pop    ecx
  41cf70:	dec    ecx
  41cf71:	xor    ebx,edx
  41cf73:	ror    BYTE PTR [eax+0x4d513379],cl
  41cf79:	push   ss
  41cf7a:	jmp    0x4f9c:0x53009ded
  41cf81:	(bad)  
  41cf82:	xchg   ebx,eax
  41cf83:	mov    ecx,0xccb8a5ba
  41cf88:	daa    
  41cf89:	test   BYTE PTR [ebp+0x4a7665a4],0xcf
  41cf90:	mov    dl,0x3a
  41cf92:	adc    DWORD PTR [eax-0x55],edx
  41cf95:	stos   BYTE PTR es:[edi],al
  41cf96:	loope  0x41cf93
  41cf98:	sub    BYTE PTR [edi-0x6425926c],dl
  41cf9e:	adc    edi,DWORD PTR [ecx+0x78]
  41cfa1:	pop    ss
  41cfa2:	cmp    DWORD PTR [eax+ecx*4-0x2b841a7b],ebp
  41cfa9:	(bad)  
  41cfaa:	push   eax
  41cfab:	mov    ch,0xf1
  41cfad:	outs   dx,BYTE PTR ds:[esi]
  41cfae:	dec    ebx
  41cfaf:	inc    eax
  41cfb0:	sbb    DWORD PTR [edx],esi
  41cfb2:	push   esi
  41cfb3:	jae    0x41cf97
  41cfb5:	sbb    eax,0x8b755f84
  41cfba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfbb:	cmp    ecx,DWORD PTR [ecx-0x5f]
  41cfbe:	std    
  41cfbf:	mov    ebx,0xee64ddc6
  41cfc4:	dec    esi
  41cfc5:	jns    0x41cfbe
  41cfc7:	bswap  edx
  41cfc9:	or     ebp,ebx
  41cfcb:	rcr    BYTE PTR [ebx+ebx*2],1
  41cfce:	(bad)  [ecx+0x48]
  41cfd1:	xchg   BYTE PTR [esi-0x40],dl
  41cfd4:	sti    
  41cfd5:	pop    ecx
  41cfd6:	mov    ds:0x72b35aba,al
  41cfdb:	sahf   
  41cfdc:	adc    dl,BYTE PTR [edi+0x53]
  41cfdf:	sahf   
  41cfe0:	fisttp QWORD PTR [ecx+ecx*1-0x10]
  41cfe4:	push   esp
  41cfe5:	ror    edi,cl
  41cfe7:	and    BYTE PTR [ecx+0x19],0xf5
  41cfeb:	push   esi
  41cfec:	jp     0x41cfb3
  41cfee:	loop   0x41cf91
  41cff0:	adc    edi,DWORD PTR [esi-0x11]
  41cff3:	dec    ebp
  41cff4:	scas   al,BYTE PTR es:[edi]
  41cff5:	ret    0xd825
  41cff8:	push   ds
  41cff9:	mov    ?,WORD PTR [eax]
  41cffb:	cmp    eax,0xebaa6cd
  41d000:	ror    BYTE PTR [edi+0x69040c1c],1
  41d006:	imul   eax,ebp,0x1e
  41d009:	retf   
  41d00a:	lds    ecx,FWORD PTR [ebx+eax*2+0x34]
  41d00e:	mov    ecx,0x9b74376b
  41d013:	xor    esi,esi
  41d015:	lods   eax,DWORD PTR ds:[esi]
  41d016:	jno    0x41cfbc
  41d018:	fld    QWORD PTR [esp+edi*1+0x34]
  41d01c:	cmp    esp,ebp
  41d01e:	xor    al,0xae
  41d020:	xchg   ebp,eax
  41d021:	aas    
  41d022:	mov    al,ds:0x63873d68
  41d027:	xchg   edi,eax
  41d028:	adc    BYTE PTR [eax-0x3],cl
  41d02b:	xchg   DWORD PTR [edx+0x10aa1b03],ebx
  41d031:	xchg   ecx,eax
  41d032:	(bad)  
  41d033:	sbb    BYTE PTR gs:[eax-0x1f],al
  41d037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d038:	fs jno 0x41d08d
  41d03b:	pop    eax
  41d03c:	mov    dh,0x64
  41d03e:	sub    al,0x24
  41d040:	jnp    0x41d02f
  41d042:	xchg   esp,eax
  41d043:	cmp    al,0xd
  41d045:	imul   esp,DWORD PTR [esi+edx*4+0x3871c3e5],0xcba54c88
  41d050:	sub    cl,BYTE PTR [ecx]
  41d052:	jmp    0x41d029
  41d054:	xor    BYTE PTR [eax+0x2fe827b],bl
  41d05a:	outs   dx,DWORD PTR ds:[esi]
  41d05b:	shl    esp,cl
  41d05d:	push   edi
  41d05e:	xchg   ebp,edi
  41d060:	fistp  WORD PTR ds:0x5ad1e51c
  41d066:	lahf   
  41d067:	arpl   WORD PTR [ebp-0x666785cc],cx
  41d06d:	in     al,0x91
  41d06f:	jmp    0xbe03088
  41d074:	ret    
  41d075:	arpl   WORD PTR [edx+edi*2-0x20d2c32a],bx
  41d07c:	dec    ebp
  41d07d:	add    bh,BYTE PTR [ebx+0x3eaa51de]
  41d083:	pop    esi
  41d084:	mov    cl,0x28
  41d086:	fmul   QWORD PTR [ebx+ebp*2-0x5c]
  41d08a:	pop    ebx
  41d08b:	pop    eax
  41d08c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d08d:	into   
  41d08e:	jle    0x41d105
  41d090:	or     ah,ch
  41d092:	adc    esi,DWORD PTR [edx-0x1d7e83ff]
  41d098:	xchg   esi,eax
  41d099:	sbb    BYTE PTR [ebp-0x59dc31a4],dh
  41d09f:	jne    0x41d038
  41d0a1:	xchg   DWORD PTR [eax-0x1f],esi
  41d0a4:	test   al,bh
  41d0a6:	jle    0x41d11e
  41d0a8:	scas   al,BYTE PTR es:[edi]
  41d0a9:	push   ds
  41d0aa:	or     DWORD PTR [edx],esp
  41d0ac:	xchg   ecx,eax
  41d0ad:	ins    DWORD PTR es:[edi],dx
  41d0ae:	xor    edi,DWORD PTR [eax]
  41d0b0:	cmp    cl,bh
  41d0b2:	sbb    DWORD PTR ds:[eax+ecx*4+0x276588ae],ecx
  41d0ba:	in     al,0x89
  41d0bc:	sbb    eax,0xfaa6ab9e
  41d0c1:	mov    dh,0x98
  41d0c3:	dec    esi
  41d0c4:	call   0xa208ee8b
  41d0c9:	mov    bl,0x60
  41d0cb:	scas   eax,DWORD PTR es:[edi]
  41d0cc:	es nop
  41d0ce:	xor    al,0xb3
  41d0d0:	in     eax,dx
  41d0d1:	push   0x1d
  41d0d3:	pop    es
  41d0d4:	sbb    eax,0x501f8ec0
  41d0d9:	push   esi
  41d0da:	mov    al,0x9c
  41d0dc:	and    bl,bh
  41d0de:	jne    0x41d122
  41d0e0:	dec    ebp
  41d0e1:	push   es
  41d0e2:	jnp    0x41d06c
  41d0e4:	sub    BYTE PTR [eax],bh
  41d0e6:	gs sub eax,0x258af6dc
  41d0ec:	mov    esi,0x5cf8ef1a
  41d0f1:	ret    
  41d0f2:	xchg   DWORD PTR [esi-0x4007b03c],edx
  41d0f8:	in     eax,0x52
  41d0fa:	hlt    
  41d0fb:	imul   eax,DWORD PTR [edx],0xffffffe6
  41d0fe:	cwde   
  41d0ff:	sahf   
  41d100:	in     eax,dx
  41d101:	dec    esp
  41d102:	stos   DWORD PTR es:[edi],eax
  41d103:	mov    ecx,0x41b342bd
  41d108:	add    BYTE PTR [edi],0x4e
  41d10b:	pop    edx
  41d10c:	jne    0x41d0b6
  41d10e:	push   ecx
  41d10f:	stos   BYTE PTR es:[edi],al
  41d110:	dec    eax
  41d111:	pop    ecx
  41d112:	sti    
  41d113:	shr    DWORD PTR [ebp-0x4857b77c],0x44
  41d11a:	call   edi
  41d11c:	sub    al,0x8b
  41d11e:	dec    eax
  41d11f:	jmp    0xd50085d2
  41d124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d125:	pop    ebx
  41d126:	lods   eax,DWORD PTR ds:[esi]
  41d127:	jge    0x41d13e
  41d129:	pop    edi
  41d12a:	pushf  
  41d12b:	scas   eax,DWORD PTR es:[edi]
  41d12c:	leave  
  41d12d:	push   0xffffffa0
  41d12f:	or     esi,DWORD PTR [ecx]
  41d131:	add    edx,DWORD PTR [eax+eiz*8+0x4666a57e]
  41d138:	sub    bh,ch
  41d13a:	inc    esp
  41d13b:	in     al,dx
  41d13c:	imul   ebp,DWORD PTR [ebx],0x2b
  41d13f:	lods   al,BYTE PTR ds:[esi]
  41d140:	dec    eax
  41d141:	sbb    eax,0x3c3a6d47
  41d146:	out    0x63,al
  41d148:	aaa    
  41d149:	dec    esp
  41d14a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d14b:	jmp    0xb94f:0x4ba0d9c8
  41d152:	or     cl,BYTE PTR [ebx]
  41d154:	rcl    DWORD PTR [ebp+0x7d],cl
  41d157:	dec    edx
  41d158:	loope  0x41d16d
  41d15a:	div    BYTE PTR [edi+0x76]
  41d15d:	inc    edi
  41d15e:	in     eax,0x54
  41d160:	dec    ecx
  41d161:	das    
  41d162:	pop    esi
  41d163:	or     BYTE PTR [ecx-0x80],al
  41d166:	stos   BYTE PTR es:[edi],al
  41d167:	mov    ds:0x533f9bb6,eax
  41d16c:	cmp    ah,BYTE PTR [edi+ebx*4-0x66bff04d]
  41d173:	popf   
  41d174:	sbb    eax,0xc08563d4
  41d179:	call   0x8793:0x31386aca
  41d180:	xor    DWORD PTR [eax],eax
  41d182:	push   ds
  41d183:	add    al,0xa7
  41d185:	(bad)  
  41d186:	mov    edi,0xf6dd7ee7
  41d18b:	jp     0x41d156
  41d18d:	push   esi
  41d18e:	aad    0xc7
  41d190:	pop    esi
  41d191:	push   esi
  41d192:	mov    bl,0x48
  41d194:	add    DWORD PTR [eax],eax
  41d196:	daa    
  41d197:	add    eax,DWORD PTR [eax]
  41d199:	add    BYTE PTR [ebx+0x51189a94],cl
  41d19f:	retf   
  41d1a0:	dec    edx
  41d1a1:	mov    esp,0x464232ef
  41d1a6:	daa    
  41d1a7:	idiv   DWORD PTR cs:[esp+0x6f63bc9f]
  41d1af:	dec    edx
  41d1b0:	ins    DWORD PTR es:[edi],dx
  41d1b1:	cmc    
  41d1b2:	retf   0x74a8
  41d1b5:	pop    ecx
  41d1b6:	jne    0x41d1d5
  41d1b8:	xchg   esi,eax
  41d1b9:	sbb    eax,0x20aa557c
  41d1be:	push   edx
  41d1bf:	aad    0x89
  41d1c1:	or     DWORD PTR [ecx],esp
  41d1c3:	dec    ebp
  41d1c4:	(bad)  
  41d1c5:	mov    ebx,0xb4c955d8
  41d1ca:	fisttp QWORD PTR [edx-0x49ba244b]
  41d1d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1d1:	retf   0xd029
  41d1d4:	dec    ebx
  41d1d5:	xchg   DWORD PTR [esi-0x3d],ebp
  41d1d8:	sub    al,0xaf
  41d1da:	cwde   
  41d1db:	push   esi
  41d1dc:	popf   
  41d1dd:	test   BYTE PTR [edx],0x9b
  41d1e0:	enter  0xde49,0x58
  41d1e4:	and    edx,0x6c
  41d1e7:	rcr    DWORD PTR [edi-0x35],1
  41d1ea:	hlt    
  41d1eb:	and    DWORD PTR [ebx],0x4fca2050
  41d1f1:	mov    edx,0x821d838c
  41d1f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1f7:	(bad)  
  41d1f8:	test   eax,0x7e285a87
  41d1fd:	into   
  41d1fe:	gs xor dl,bh
  41d201:	push   esp
  41d202:	add    edx,ebx
  41d204:	push   esp
  41d205:	scas   al,BYTE PTR es:[edi]
  41d206:	sub    esi,DWORD PTR [ebp+0x31]
  41d209:	call   0xed3f:0x5eddb9fc
  41d210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d211:	es addr16 (bad) 
  41d214:	push   ecx
  41d215:	ins    DWORD PTR es:[edi],dx
  41d216:	pop    ss
  41d217:	and    cl,dl
  41d219:	dec    edi
  41d21a:	jmp    0x413a05e8
  41d21f:	ss loop 0x41d255
  41d222:	sti    
  41d223:	add    BYTE PTR [ecx-0x5d],ch
  41d226:	mov    esi,0xb29dcf9
  41d22b:	sub    eax,0x934793e9
  41d230:	cmp    DWORD PTR [ebx],edx
  41d232:	or     edi,DWORD PTR [esp+esi*4-0x51]
  41d236:	push   ebp
  41d237:	jmp    0xe35ce9bf
  41d23c:	sub    ch,BYTE PTR [eax+ebp*1]
  41d23f:	jmp    0xb7251d6c
  41d244:	fsincos 
  41d246:	xchg   ebp,eax
  41d247:	dec    eax
  41d248:	fisttp QWORD PTR [edx-0x2deefabb]
  41d24e:	clc    
  41d24f:	das    
  41d250:	or     DWORD PTR [ebx-0x24c06690],esi
  41d256:	fimul  DWORD PTR [ecx+0x384d3457]
  41d25c:	stc    
  41d25d:	lods   al,BYTE PTR ds:[esi]
  41d25e:	dec    ecx
  41d25f:	add    al,0xa4
  41d261:	ds push ss
  41d263:	fsub   DWORD PTR [ecx+0xd677071]
  41d269:	jne    0x41d236
  41d26b:	cwde   
  41d26c:	data16 loope 0x41d2d9
  41d26f:	inc    esi
  41d270:	cmp    edi,DWORD PTR [ebp+0x5f9d0596]
  41d276:	out    dx,eax
  41d277:	jae    0x41d295
  41d279:	ins    DWORD PTR es:[edi],dx
  41d27a:	sbb    eax,0xbaccb814
  41d27f:	(bad)  
  41d280:	repz repz jle 0x41d28b
  41d284:	mov    ah,0x2
  41d286:	(bad)  
  41d287:	daa    
  41d288:	mov    dh,0x2c
  41d28a:	rcl    esp,0x1b
  41d28d:	mov    bl,0xb7
  41d28f:	mov    dh,0xf4
  41d291:	std    
  41d292:	jne    0x41d2fe
  41d294:	pop    edx
  41d295:	add    eax,0x6c33d444
  41d29a:	ins    DWORD PTR es:[edi],dx
  41d29b:	add    DWORD PTR [ecx],edi
  41d29d:	jmp    0x41d2ac
  41d29f:	nop
  41d2a0:	fisttp WORD PTR [ecx+edi*2-0x78]
  41d2a4:	ret    0x89f5
  41d2a7:	sbb    eax,0xa0b76727
  41d2ac:	or     cl,BYTE PTR [ebx-0x4726bb38]
  41d2b2:	sar    DWORD PTR [esi+0xf],0xc
  41d2b6:	ficomp DWORD PTR [ebp+0x78e567a4]
  41d2bc:	cwde   
  41d2bd:	mov    ah,BYTE PTR [ecx-0x703f97d1]
  41d2c3:	inc    ecx
  41d2c4:	test   al,0x33
  41d2c6:	cdq    
  41d2c7:	push   esp
  41d2c8:	mov    DWORD PTR [edi],esi
  41d2ca:	aam    0x28
  41d2cc:	outs   dx,DWORD PTR ds:[esi]
  41d2cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2ce:	loope  0x41d34d
  41d2d0:	dec    ebp
  41d2d1:	push   edx
  41d2d2:	in     eax,dx
  41d2d3:	(bad)  
  41d2d4:	leave  
  41d2d5:	xchg   edi,eax
  41d2d6:	xchg   ebp,eax
  41d2d7:	xchg   DWORD PTR [edx+0x3319ff4b],eax
  41d2dd:	les    ebx,FWORD PTR fs:[ebx+0x4e]
  41d2e1:	lock mov eax,ds:0xf462452f
  41d2e7:	adc    cl,dh
  41d2e9:	clc    
  41d2ea:	push   es
  41d2eb:	(bad)  
  41d2ed:	jmp    0x41d2c1
  41d2ef:	mov    DWORD PTR [edx-0x40],0x5177752
  41d2f6:	js     0x41d377
  41d2f8:	pop    edx
  41d2f9:	push   esp
  41d2fa:	(bad)  
  41d2fb:	out    0x6b,al
  41d2fd:	dec    edx
  41d2fe:	std    
  41d2ff:	pop    esp
  41d300:	ins    BYTE PTR es:[edi],dx
  41d301:	and    al,0xfe
  41d303:	cs jl  0x41d305
  41d306:	and    al,BYTE PTR [edi+0x41a410f1]
  41d30c:	jae    0x41d325
  41d30e:	push   ds
  41d30f:	out    dx,eax
  41d310:	adc    BYTE PTR [ebp+ebx*1+0x21aec8e0],dh
  41d317:	pop    edx
  41d318:	pop    es
  41d319:	and    edi,DWORD PTR [ebx+0x14]
  41d31c:	add    al,0x1a
  41d31e:	jmp    FWORD PTR [bx+si]
  41d321:	add    bl,BYTE PTR [eax+0x37]
  41d324:	inc    ebx
  41d325:	inc    ecx
  41d326:	or     ah,BYTE PTR [ecx]
  41d328:	pop    ds
  41d329:	add    bh,ch
  41d32b:	and    DWORD PTR [eax-0x7f1cdb2c],edi
  41d331:	or     eax,0xada5536f
  41d336:	jmp    0x41d335
  41d338:	xor    eax,DWORD PTR ds:0x53a7ac2
  41d33e:	or     bl,0x77
  41d341:	mov    ch,0x1d
  41d343:	adc    dh,BYTE PTR [ebx-0x6b7c2e1]
  41d349:	scas   eax,DWORD PTR es:[edi]
  41d34a:	(bad)  [esi]
  41d34c:	shl    DWORD PTR [ebx+0x5a1cf293],cl
  41d352:	xlat   BYTE PTR ds:[ebx]
  41d353:	out    dx,al
  41d354:	ins    DWORD PTR es:[di],dx
  41d356:	push   cs
  41d357:	lahf   
  41d358:	test   BYTE PTR [ebx+eax*8],0xfe
  41d35c:	les    edx,FWORD PTR [ecx-0x61130682]
  41d362:	adc    al,0x3a
  41d364:	sub    eax,0x6a8b3bee
  41d369:	sbb    al,BYTE PTR [ecx+0x3311f6cd]
  41d36f:	in     al,dx
  41d370:	sub    dh,dh
  41d372:	out    dx,eax
  41d373:	fs or  al,0xfb
  41d376:	ja     0x41d3a9
  41d378:	imul   ebp,DWORD PTR [edi+0x9],0xe722f646
  41d37f:	cwde   
  41d380:	inc    ecx
  41d381:	(bad)  
  41d382:	imul   ebp,edx,0xffffffac
  41d385:	adc    ebp,edx
  41d387:	jp     0x41d39b
  41d389:	sti    
  41d38a:	dec    edi
  41d38b:	fsubr  DWORD PTR ds:0x934d8987
  41d391:	test   eax,ebx
  41d393:	mov    dl,0x7f
  41d395:	cdq    
  41d396:	mov    fs,WORD PTR [ebp-0x474aeb82]
  41d39c:	cs fucomi st,st(5)
  41d39f:	xor    BYTE PTR [ecx+0x1f1669e9],dl
  41d3a5:	loopne 0x41d3e7
  41d3a7:	jmp    0x8895:0xdaba27b8
  41d3ae:	add    DWORD PTR [esi],ebp
  41d3b0:	sbb    eax,0x34ccd402
  41d3b5:	add    esi,DWORD PTR [edi-0x44fba8a4]
  41d3bb:	fist   WORD PTR [ebx]
  41d3bd:	mov    cl,0x6d
  41d3bf:	outs   dx,BYTE PTR ds:[esi]
  41d3c0:	(bad)  
  41d3c2:	(bad)  
  41d3c3:	sahf   
  41d3c4:	adc    al,0x91
  41d3c6:	sahf   
  41d3c7:	aas    
  41d3c8:	in     al,0x94
  41d3ca:	aam    0x5a
  41d3cc:	cmc    
  41d3cd:	cmp    eax,0x2ee4af75
  41d3d2:	rcl    DWORD PTR [esi-0x65cb8e0f],cl
  41d3d8:	adc    BYTE PTR [ebp+0x34],dh
  41d3db:	mov    BYTE PTR [ebp-0x1a],ah
  41d3de:	aad    0x16
  41d3e0:	push   ds
  41d3e1:	or     ecx,DWORD PTR [edi+0x67]
  41d3e4:	bound  ecx,QWORD PTR [esi+0x7132c308]
  41d3ea:	ror    BYTE PTR [edx+0x9],1
  41d3ed:	test   eax,0xa96930f2
  41d3f2:	dec    ebx
  41d3f3:	dec    edx
  41d3f4:	pop    ebp
  41d3f5:	not    BYTE PTR [ebp-0x2135063d]
  41d3fb:	nop
  41d3fc:	sub    dl,0xaa
  41d3ff:	mov    edx,0xf110a98e
  41d404:	(bad)  
  41d405:	(bad)  
  41d407:	jp     0x41d3c1
  41d409:	sub    ah,BYTE PTR [edx+edi*1+0x1e3f24de]
  41d410:	inc    ebx
  41d411:	test   BYTE PTR [eax+0x6e],ah
  41d414:	and    esp,esp
  41d416:	cli    
  41d417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d418:	pushf  
  41d419:	pop    ds
  41d41a:	mov    BYTE PTR [ebx],bl
  41d41c:	xchg   ebp,eax
  41d41d:	imul   eax,DWORD PTR [edx],0x1a
  41d420:	(bad)  [edx]
  41d422:	mov    BYTE PTR [eax+0xa],bh
  41d425:	leave  
  41d426:	or     al,0x6f
  41d428:	ja     0x41d3d3
  41d42a:	jp     0x41d3fc
  41d42c:	mov    edi,0xc7310b0b
  41d431:	nop
  41d432:	xchg   edi,eax
  41d433:	xor    al,dh
  41d435:	adc    cl,BYTE PTR [esi+0x2f]
  41d438:	dec    esi
  41d439:	pop    esp
  41d43a:	xchg   edi,eax
  41d43b:	call   0x2352:0xec200ea8
  41d442:	mov    edi,0xe3dae003
  41d447:	cmp    ch,dl
  41d449:	sub    ecx,DWORD PTR [esi]
  41d44b:	mov    DWORD PTR [edi],ecx
  41d44d:	jmp    0x942c306a
  41d452:	pop    es
  41d453:	inc    ebx
  41d454:	arpl   WORD PTR ds:0xa783fe9a,bx
  41d45a:	ds lahf 
  41d45c:	mov    cs,ebp
  41d45e:	mov    al,ds:0xfebb011
  41d463:	xchg   BYTE PTR [esi*4+0x2f800972],ch
  41d46a:	(bad)  
  41d46d:	mov    DWORD PTR [esi],esp
  41d46f:	(bad)  
  41d470:	(bad)  
  41d471:	inc    esi
  41d472:	xchg   ebx,eax
  41d473:	xchg   esp,eax
  41d474:	out    dx,eax
  41d475:	ret    0xb92d
  41d478:	xor    al,0xbe
  41d47a:	sub    eax,esp
  41d47c:	sub    al,0xe9
  41d47e:	lods   al,BYTE PTR ds:[esi]
  41d47f:	or     ch,BYTE PTR [edi-0x68]
  41d482:	imul   edi,DWORD PTR [ecx-0x72],0x17899410
  41d489:	push   esi
  41d48a:	outs   dx,BYTE PTR ds:[esi]
  41d48b:	and    ch,BYTE PTR [ebp+0xc]
  41d48e:	and    BYTE PTR [ebx],dh
  41d490:	arpl   WORD PTR [ebx+0x3f21425],sp
  41d496:	dec    edi
  41d497:	adc    eax,0xf479a99c
  41d49c:	and    BYTE PTR [esi+0x7],cl
  41d49f:	enter  0xbae2,0x49
  41d4a3:	test   DWORD PTR [ebp-0x33c10c16],edx
  41d4a9:	js     0x41d4b6
  41d4ab:	jnp    0x41d459
  41d4ad:	push   cs
  41d4ae:	and    ch,BYTE PTR ds:0x744da5f1
  41d4b4:	ss jmp 0xc34:0xd7c2a945
  41d4bc:	cli    
  41d4bd:	cdq    
  41d4be:	xchg   dl,ch
  41d4c0:	xchg   esi,eax
  41d4c1:	add    BYTE PTR [eax-0x77],bh
  41d4c4:	hlt    
  41d4c5:	mov    al,0xf5
  41d4c7:	std    
  41d4c8:	jl     0x41d493
  41d4ca:	dec    edi
  41d4cb:	pop    ds
  41d4cc:	cmp    DWORD PTR [ebx+0x2f],ebp
  41d4cf:	push   ebx
  41d4d0:	popf   
  41d4d1:	dec    esi
  41d4d2:	fimul  DWORD PTR [ebx+0x1]
  41d4d5:	add    BYTE PTR [edi],ah
  41d4d7:	add    eax,DWORD PTR [eax]
  41d4d9:	add    BYTE PTR [ebx+eax*2],bh
  41d4dc:	(bad)  
  41d4dd:	sti    
  41d4de:	push   cs
  41d4df:	sub    BYTE PTR [ebx],bl
  41d4e1:	pop    edx
  41d4e2:	pop    eax
  41d4e3:	adc    DWORD PTR [edx+0x428dbc61],esp
  41d4e9:	jne    0x41d502
  41d4eb:	mov    dh,0xe3
  41d4ed:	das    
  41d4ee:	imul   ebx,DWORD PTR [ebx-0x70],0xffffff94
  41d4f2:	inc    BYTE PTR [ecx-0x1f3f428c]
  41d4f8:	sub    eax,0x6f5ed8dd
  41d4fd:	loop   0x41d495
  41d4ff:	pop    esp
  41d500:	cmp    BYTE PTR [ebx+edi*4],dl
  41d503:	and    BYTE PTR [edx-0x56da8757],al
  41d509:	das    
  41d50a:	loope  0x41d4b3
  41d50c:	cs push ecx
  41d50e:	fisubr DWORD PTR [edx+ebp*4-0x4e]
  41d512:	sub    bh,BYTE PTR [eax-0x3c]
  41d515:	es push cs
  41d517:	fimul  WORD PTR [ecx-0x14]
  41d51a:	inc    edx
  41d51b:	inc    edi
  41d51c:	or     DWORD PTR [ebp+eax*8-0x347e8224],ecx
  41d523:	ds jge 0x41d4ea
  41d526:	sbb    eax,0xb7c1882
  41d52b:	lds    eax,FWORD PTR [esi+edx*1-0x46c68674]
  41d532:	mov    ds:0x909a86bf,al
  41d537:	mov    esi,0x875fcaac
  41d53c:	jno    0x41d586
  41d53e:	xor    esi,DWORD PTR [edx-0x4d8962be]
  41d544:	push   ecx
  41d545:	jmp    0xdf6e:0xe5a48417
  41d54c:	or     al,BYTE PTR [ebp-0x77]
  41d54f:	jnp    0x41d4f1
  41d551:	add    DWORD PTR [ecx],esi
  41d553:	xchg   BYTE PTR [edi-0x6a],cl
  41d556:	test   al,0x2d
  41d558:	ds push esi
  41d55a:	jbe    0x41d4e6
  41d55c:	xor    DWORD PTR [ebx],esp
  41d55e:	outs   dx,DWORD PTR ds:[esi]
  41d55f:	dec    eax
  41d560:	(bad)  
  41d561:	fdivr  DWORD PTR [edi+eax*4]
  41d564:	mov    bh,0x2c
  41d566:	mov    eax,ds:0xb9095410
  41d56b:	and    ah,bh
  41d56d:	pop    edx
  41d56e:	jbe    0x41d542
  41d570:	dec    eax
  41d571:	popa   
  41d572:	jecxz  0x41d5af
  41d574:	mov    dl,0x67
  41d576:	push   ss
  41d577:	inc    esp
  41d578:	sbb    al,dh
  41d57a:	es jo  0x41d5a2
  41d57d:	dec    ecx
  41d57e:	mov    al,0x57
  41d580:	pop    ebp
  41d581:	jmp    0x41d56d
  41d583:	and    DWORD PTR [ebx],0x52
  41d586:	test   BYTE PTR [edi-0x1c],al
  41d589:	popa   
  41d58a:	mov    ebp,0xc02664c9
  41d58f:	sbb    dh,BYTE PTR [esi-0x64]
  41d592:	lahf   
  41d593:	adc    eax,0xb577c8d1
  41d598:	nop
  41d599:	sahf   
  41d59a:	jno    0x41d590
  41d59c:	nop
  41d59d:	and    edx,DWORD PTR [edx+0x12]
  41d5a0:	adc    al,0x25
  41d5a2:	outs   dx,DWORD PTR ds:[esi]
  41d5a3:	enter  0x768a,0xce
  41d5a7:	push   0x4f40c309
  41d5ac:	mov    ch,0xdd
  41d5ae:	xchg   ebx,eax
  41d5af:	cld    
  41d5b0:	mov    al,ds:0x27c1731d
  41d5b5:	sti    
  41d5b6:	ror    BYTE PTR [ebx-0x2a128758],0xa5
  41d5bd:	xchg   DWORD PTR [eax-0x139f451e],ecx
  41d5c3:	dec    edx
  41d5c4:	std    
  41d5c5:	ss or  al,0xc7
  41d5c8:	lods   al,BYTE PTR ds:[esi]
  41d5c9:	push   ds
  41d5ca:	sahf   
  41d5cb:	std    
  41d5cc:	rcl    DWORD PTR [ecx+0x1e],1
  41d5cf:	jns    0x41d5e4
  41d5d1:	in     eax,0x87
  41d5d3:	fsubr  DWORD PTR [edi-0x5c01238]
  41d5d9:	sub    BYTE PTR [esi+0x27c6ab79],0xbd
  41d5e0:	loopne 0x41d656
  41d5e2:	mov    ds:0x8a79328,eax
  41d5e7:	fist   WORD PTR [edi+ecx*2]
  41d5ea:	pop    ss
  41d5eb:	cmp    BYTE PTR ds:0x6229d1c0,dl
  41d5f1:	adc    al,0x42
  41d5f3:	stc    
  41d5f4:	pop    esi
  41d5f5:	(bad)  
  41d5f7:	cmp    eax,0x509ae59c
  41d5fc:	cmp    ecx,DWORD PTR ds:0xfe3cd3f9
  41d602:	iret   
  41d603:	int3   
  41d604:	call   0x123e59c4
  41d609:	cmp    edx,DWORD PTR [eax+0x24b07f8b]
  41d60f:	iret   
  41d610:	jecxz  0x41d64c
  41d612:	test   al,0xde
  41d614:	outs   dx,DWORD PTR ds:[esi]
  41d615:	clc    
  41d616:	lahf   
  41d617:	bound  edx,QWORD PTR [ebp+0x65612261]
  41d61d:	or     al,0x10
  41d61f:	xchg   ecx,eax
  41d620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d621:	mov    edx,0x9386f5cb
  41d626:	idiv   DWORD PTR [ebp+0x23542a08]
  41d62c:	push   0x96945c5a
  41d631:	xchg   ebp,eax
  41d632:	add    al,0x60
  41d634:	stos   BYTE PTR es:[edi],al
  41d635:	adc    bh,al
  41d637:	in     eax,0xe8
  41d639:	adc    al,0x76
  41d63b:	cs int3 
  41d63d:	push   edi
  41d63e:	mov    bh,BYTE PTR [edx]
  41d640:	imul   ebx,eax,0xffffff9a
  41d643:	scas   al,BYTE PTR es:[edi]
  41d644:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41d646:	dec    esi
  41d647:	xchg   ebp,eax
  41d648:	and    BYTE PTR [ebx-0x78],0xcf
  41d64c:	adc    DWORD PTR [ecx],ebp
  41d64e:	mov    bl,0x99
  41d650:	clc    
  41d651:	(bad)  [ebx+0x18]
  41d654:	imul   ebx,DWORD PTR [ebx],0xffffff92
  41d657:	cmp    al,0xc4
  41d659:	fistp  QWORD PTR [eax+0x69]
  41d65c:	and    dh,BYTE PTR [edi+0x17]
  41d65f:	aad    0x87
  41d661:	ins    BYTE PTR es:[edi],dx
  41d662:	adc    DWORD PTR [ecx],esp
  41d664:	mov    ds:0xdff5581d,al
  41d669:	jnp    0x41d674
  41d66b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d66c:	inc    edx
  41d66d:	inc    bp
  41d66f:	in     eax,dx
  41d670:	add    ebp,DWORD PTR [ebx-0x6f]
  41d673:	lock iret 
  41d675:	pop    eax
  41d676:	mov    dh,0x32
  41d678:	cli    
  41d679:	lods   al,BYTE PTR ds:[esi]
  41d67a:	fnstenv [esi-0x3965a83f]
  41d680:	xor    al,0x10
  41d682:	not    BYTE PTR [ebx-0x74]
  41d685:	xor    edx,DWORD PTR [ecx]
  41d687:	jecxz  0x41d69a
  41d689:	sahf   
  41d68a:	cmp    DWORD PTR [ebx+0x69],edi
  41d68d:	xchg   esi,eax
  41d68e:	jns    0x41d6e7
  41d690:	stc    
  41d691:	adc    eax,esp
  41d693:	ins    BYTE PTR es:[edi],dx
  41d694:	scas   eax,DWORD PTR es:[edi]
  41d695:	shl    BYTE PTR [eax+0x2f8f26e5],0x1c
  41d69c:	mov    esp,0x38e824c1
  41d6a1:	adc    BYTE PTR [edi-0x39],bh
  41d6a4:	inc    eax
  41d6a5:	push   esi
  41d6a6:	dec    eax
  41d6a7:	fdivr  QWORD PTR [ecx+0x7d]
  41d6aa:	inc    edx
  41d6ab:	jo     0x41d62d
  41d6ad:	into   
  41d6ae:	dec    ebx
  41d6af:	push   es
  41d6b0:	mov    ah,0x28
  41d6b2:	pop    ebp
  41d6b3:	out    0x39,al
  41d6b5:	xor    dh,ah
  41d6b7:	lahf   
  41d6b8:	bound  edi,QWORD PTR [edi]
  41d6ba:	sahf   
  41d6bb:	push   es
  41d6bc:	neg    BYTE PTR [eax+0x361203e2]
  41d6c2:	pop    edi
  41d6c3:	cmp    eax,0x9fc6b76f
  41d6c8:	lock cmp eax,0x250efb8e
  41d6ce:	jno    0x41d66e
  41d6d0:	movhps QWORD PTR [ebx],xmm4
  41d6d3:	pushf  
  41d6d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6d5:	push   cs
  41d6d6:	fdivr  DWORD PTR [ebp+0x14]
  41d6d9:	jle    0x41d73f
  41d6db:	cmp    al,0x3
  41d6dd:	add    al,0xb8
  41d6df:	cli    
  41d6e0:	adc    eax,0x97584ccc
  41d6e5:	dec    edi
  41d6e6:	or     ch,cl
  41d6e8:	repnz aas 
  41d6ea:	push   es
  41d6eb:	test   DWORD PTR [ebp*2-0x1130053b],ebx
  41d6f2:	push   ss
  41d6f3:	nop
  41d6f4:	xchg   ebp,edi
  41d6f6:	sbb    eax,DWORD PTR [edi]
  41d6f8:	test   al,dl
  41d6fa:	add    edx,DWORD PTR ss:[esi-0x3c]
  41d6fe:	push   ss
  41d6ff:	jge    0x41d6d0
  41d701:	fucomip st,st(0)
  41d703:	sahf   
  41d704:	mov    BYTE PTR [ebx+0x3cfbc289],bh
  41d70a:	pop    edi
  41d70b:	imul   eax,DWORD PTR fs:[edx],0x32c96510
  41d712:	cmp    BYTE PTR [ebx+0x3cb5dbaa],dh
  41d718:	dec    ecx
  41d719:	or     DWORD PTR [ebp-0x46429252],eax
  41d71f:	les    edi,FWORD PTR [eax+0x61]
  41d722:	pop    DWORD PTR [edx-0x1c8faf54]
  41d728:	pop    edx
  41d729:	loop   0x41d797
  41d72b:	sar    BYTE PTR [esi-0x44],1
  41d72e:	sbb    ah,bl
  41d730:	scas   al,BYTE PTR es:[edi]
  41d731:	mov    dl,0x26
  41d733:	mov    cl,0x1f
  41d735:	mov    edx,0x5378a53e
  41d73a:	(bad)  
  41d73b:	shl    BYTE PTR [edi+0x42eac056],0x70
  41d742:	or     BYTE PTR [ebx-0x4d],al
  41d745:	arpl   WORD PTR [esi],dx
  41d747:	ror    al,cl
  41d749:	and    ecx,DWORD PTR [eax]
  41d74b:	rcl    DWORD PTR [edi+0x4af6ecec],0x33
  41d752:	inc    edx
  41d753:	test   eax,0x4170af32
  41d758:	inc    edx
  41d759:	mov    cl,0xd5
  41d75b:	jae    0x41d7da
  41d75d:	push   ecx
  41d75e:	int3   
  41d75f:	pop    esi
  41d760:	out    0x40,al
  41d762:	out    0x77,al
  41d764:	add    al,ah
  41d766:	dec    esi
  41d767:	lds    ebp,FWORD PTR [esi]
  41d769:	mov    al,BYTE PTR [edx-0x7c]
  41d76c:	sar    ebp,0x9f
  41d76f:	fisubr DWORD PTR [ecx-0x4d]
  41d772:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d773:	push   ss
  41d774:	sbb    bl,0x16
  41d777:	ret    0x116a
  41d77a:	mov    ds:0x311ff968,al
  41d77f:	xor    al,0xc9
  41d781:	mov    edi,0x9fb9bc2
  41d786:	jp     0x41d7e1
  41d788:	fist   WORD PTR [ecx]
  41d78a:	fsubp  st(6),st
  41d78c:	mov    esp,0x4bcbe25
  41d791:	cmp    esp,DWORD PTR [esi]
  41d793:	push   esi
  41d794:	jo     0x41d71e
  41d796:	cld    
  41d797:	push   DWORD PTR [eax+0x5a]
  41d79a:	arpl   dx,cx
  41d79c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d79d:	sbb    BYTE PTR [edx],0xfb
  41d7a0:	mov    BYTE PTR [ebx+ecx*1-0x58],dl
  41d7a4:	cmp    BYTE PTR [ecx+0x69],0x68
  41d7a8:	in     al,0xee
  41d7aa:	mov    ch,BYTE PTR [ebx+eiz*4+0x3a837035]
  41d7b1:	mov    ah,0x9c
  41d7b3:	and    esi,DWORD PTR ds:0x912479e3
  41d7b9:	fwait
  41d7ba:	adc    al,0xa5
  41d7bc:	add    BYTE PTR [edi+0x3ede96d8],cl
  41d7c2:	addr16 jg 0x41d74c
  41d7c5:	xchg   BYTE PTR [esi],bl
  41d7c7:	fnop   
  41d7c9:	mov    ecx,0x2aaf8321
  41d7ce:	mov    ds:0x9437301f,eax
  41d7d3:	mov    ds:0xac1ed529,eax
  41d7d8:	or     eax,0x5a464513
  41d7dd:	int    0x73
  41d7df:	lahf   
  41d7e0:	imul   esi,DWORD PTR [ebp+ecx*2-0x2a],0xffffffba
  41d7e5:	ins    BYTE PTR es:[edi],dx
  41d7e6:	pushf  
  41d7e7:	jbe    0x41d7c3
  41d7e9:	loope  0x41d859
  41d7eb:	mov    BYTE PTR [edi],0x62
  41d7ee:	jbe    0x41d79f
  41d7f0:	xchg   ecx,eax
  41d7f1:	fild   QWORD PTR [esp+ecx*1-0x2f38fde6]
  41d7f8:	cmp    dh,BYTE PTR [esi]
  41d7fa:	inc    edx
  41d7fb:	dec    ebx
  41d7fc:	sti    
  41d7fd:	nop
  41d7fe:	cdq    
  41d7ff:	outs   dx,BYTE PTR ds:[esi]
  41d800:	cmp    eax,0xb78a5c00
  41d805:	imul   esi,edi,0x7f
  41d808:	fdivr  QWORD PTR [edi-0x2621f8a7]
  41d80e:	sub    cl,BYTE PTR gs:[ecx+eax*1+0x14f01]
  41d816:	daa    
  41d817:	add    eax,DWORD PTR [eax]
  41d819:	add    BYTE PTR [edi+0x5dd35314],al
  41d81f:	or     esp,DWORD PTR [eax+0x4d]
  41d822:	push   edx
  41d823:	test   eax,0x7c519f33
  41d828:	jmp    0x9b:0xcc1c016a
  41d82f:	cmp    bl,BYTE PTR [ecx]
  41d831:	cmp    al,dh
  41d833:	(bad)  
  41d834:	stc    
  41d835:	xchg   esi,eax
  41d836:	mov    dl,0x18
  41d838:	pop    es
  41d839:	adc    al,0xad
  41d83b:	(bad)  
  41d83c:	jb     0x41d8b7
  41d83e:	fild   DWORD PTR [esi-0x20]
  41d841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d842:	outs   dx,DWORD PTR ds:[esi]
  41d843:	xor    al,0xab
  41d845:	and    BYTE PTR [edx-0x25],cl
  41d848:	loop   0x41d846
  41d84a:	mov    edx,0xed3b6733
  41d84f:	jmp    DWORD PTR [ecx]
  41d851:	lods   eax,DWORD PTR ds:[esi]
  41d852:	add    ebx,esp
  41d854:	imul   edi,DWORD PTR ds:[edx-0x477cc708],0xffffffd7
  41d85c:	push   eax
  41d85d:	fs ds inc ecx
  41d860:	int    0xac
  41d862:	xchg   ecx,eax
  41d863:	cld    
  41d864:	in     al,dx
  41d865:	xchg   ebp,eax
  41d866:	dec    edi
  41d867:	in     al,dx
  41d868:	mov    ds:0xbad5c997,al
  41d86d:	push   esi
  41d86f:	(bad)  
  41d870:	cmp    ch,BYTE PTR [esi+0x61]
  41d873:	push   0xffffffdd
  41d875:	pop    ebp
  41d876:	cwde   
  41d877:	push   ebp
  41d878:	and    al,0xbd
  41d87a:	lahf   
  41d87b:	ret    
  41d87c:	xor    esi,DWORD PTR [eax+0xcebc011]
  41d882:	push   edi
  41d883:	push   edx
  41d884:	(bad)  
  41d885:	femms  
  41d887:	addr16 push ecx
  41d889:	ja     0x41d904
  41d88b:	fcom   QWORD PTR [edx-0x39edf2b]
  41d891:	mov    eax,0xaab08e81
  41d896:	jmp    0x81cf:0x3e81fba
  41d89d:	leave  
  41d89e:	and    dl,BYTE PTR [edi+0x49112f1e]
  41d8a4:	loop   0x41d88e
  41d8a6:	aaa    
  41d8a7:	test   eax,0xbedfa0d9
  41d8ac:	sbb    ecx,DWORD PTR [ebp+0x20]
  41d8af:	addr16 push 0xffffff8e
  41d8b2:	repnz aad 0xe5
  41d8b5:	sbb    ebp,DWORD PTR [ecx+0x5a]
  41d8b8:	jp     0x41d885
  41d8ba:	mov    eax,ds:0x3a49fc95
  41d8bf:	dec    ebx
  41d8c0:	and    al,0x56
  41d8c2:	test   eax,0x350ee9ae
  41d8c7:	das    
  41d8c8:	loop   0x41d929
  41d8ca:	xchg   esi,eax
  41d8cb:	xchg   bh,bh
  41d8cd:	dec    edi
  41d8ce:	fwait
  41d8cf:	inc    ebp
  41d8d0:	fs push ebp
  41d8d2:	repz icebp 
  41d8d4:	cwde   
  41d8d5:	jo     0x41d8f1
  41d8d7:	mov    WORD PTR [ecx-0x5c],fs
  41d8da:	addr16 ret 
  41d8dc:	inc    edi
  41d8dd:	sbb    esi,DWORD PTR [ecx+0x67]
  41d8e0:	test   DWORD PTR [ecx],eax
  41d8e2:	aam    0x83
  41d8e4:	in     al,dx
  41d8e5:	fucomp st(0)
  41d8e7:	test   eax,0xbebd4e62
  41d8ec:	frstor [esi]
  41d8ee:	in     al,dx
  41d8ef:	rol    BYTE PTR [edi],1
  41d8f1:	push   0x2b
  41d8f3:	std    
  41d8f4:	xor    esp,DWORD PTR [eax+edx*1]
  41d8f7:	(bad)  
  41d8f8:	mov    ds:0xa3ef1471,eax
  41d8fd:	aaa    
  41d8fe:	xchg   esp,eax
  41d8ff:	cwde   
  41d900:	xchg   DWORD PTR [esi],ebx
  41d902:	das    
  41d903:	lahf   
  41d904:	add    ebx,eax
  41d906:	xor    eax,0xd5568758
  41d90b:	pop    ecx
  41d90c:	inc    ecx
  41d90d:	div    BYTE PTR ds:0x37037aee
  41d913:	jl     0x41d938
  41d915:	ins    BYTE PTR es:[edi],dx
  41d916:	xchg   edi,eax
  41d917:	xchg   BYTE PTR [ecx-0x23abc7a1],dl
  41d91d:	sbb    esp,eax
  41d91f:	repnz les eax,FWORD PTR [edi-0x13]
  41d923:	es push 0x4f500ae2
  41d929:	(bad)  
  41d92a:	xchg   edi,eax
  41d92b:	mov    ds:0xb7b9bda0,eax
  41d930:	enter  0x21e3,0x53
  41d934:	cmp    dh,BYTE PTR [ecx+0x54694711]
  41d93a:	call   0xa107bc01
  41d93f:	addr16 sub esp,edx
  41d942:	int    0x25
  41d944:	pop    ss
  41d945:	in     al,0x2a
  41d947:	lahf   
  41d948:	mov    bh,0x0
  41d94a:	int3   
  41d94b:	sub    DWORD PTR [edi],esi
  41d94d:	in     eax,0x5f
  41d94f:	inc    eax
  41d950:	jns    0x41d902
  41d952:	retf   
  41d953:	mov    bh,0x64
  41d955:	cdq    
  41d956:	rcr    DWORD PTR [eax+0x748386d],0xb5
  41d95d:	add    ecx,DWORD PTR [edi]
  41d95f:	mov    bh,0xe8
  41d961:	shl    DWORD PTR [edi+0x51],0x2a
  41d965:	xchg   ecx,eax
  41d966:	cmp    DWORD PTR [ebp-0xc],ecx
  41d969:	pushf  
  41d96a:	lods   al,BYTE PTR ds:[esi]
  41d96b:	(bad)  
  41d96d:	sbb    DWORD PTR [edx-0x4],ebp
  41d970:	in     eax,0xce
  41d972:	sub    DWORD PTR [edi-0x44],ebx
  41d975:	mov    eax,0x947df44c
  41d97a:	push   ds
  41d97b:	xor    DWORD PTR [eax-0x40402b2],ecx
  41d981:	cmp    eax,0x7ad406b5
  41d986:	scas   eax,DWORD PTR es:[edi]
  41d987:	nop
  41d988:	test   BYTE PTR ds:0xd92bc326,0xf7
  41d98f:	xor    bl,dh
  41d991:	stos   DWORD PTR es:[edi],eax
  41d992:	pop    edx
  41d993:	cwde   
  41d994:	adc    dh,BYTE PTR [esi-0x54]
  41d997:	mov    eax,0x52e6c248
  41d99c:	cmp    edx,esp
  41d99e:	pop    es
  41d99f:	or     edx,ebx
  41d9a1:	and    esp,edx
  41d9a3:	pop    ebx
  41d9a4:	and    eax,0xbbc44252
  41d9a9:	jmp    0x8fe1:0xe68b14be
  41d9b0:	fimul  DWORD PTR [ecx+0x7e]
  41d9b3:	jbe    0x41d972
  41d9b5:	jae    0x41d942
  41d9b7:	out    0x8c,eax
  41d9b9:	push   ecx
  41d9ba:	pop    edi
  41d9bb:	cs push ss
  41d9bd:	lahf   
  41d9be:	adc    ebp,DWORD PTR ds:0x6619
  41d9c3:	(bad)  
  41d9c4:	adc    BYTE PTR [eax-0x34f9b514],cl
  41d9ca:	loopne 0x41da2f
  41d9cc:	lock in al,0x89
  41d9cf:	mov    ds:0xb1180cd1,eax
  41d9d4:	xor    al,0x5b
  41d9d6:	stc    
  41d9d7:	pcmpeqd mm3,QWORD PTR [ebp+0x6b]
  41d9db:	dec    edx
  41d9dc:	adc    eax,ebx
  41d9de:	and    dh,BYTE PTR [edi+0xc]
  41d9e1:	ror    BYTE PTR [edi],1
  41d9e3:	ja     0x41da47
  41d9e5:	rcr    BYTE PTR [ecx-0x35ce7ef9],1
  41d9eb:	cmp    ebp,DWORD PTR [eax-0x66024ac6]
  41d9f1:	vorps  ymm4,ymm2,YMMWORD PTR [eax]
  41d9f5:	xlat   BYTE PTR ds:[ebx]
  41d9f6:	jp     0x41d9bc
  41d9f8:	mov    ecx,es
  41d9fa:	(bad)  
  41d9fb:	lahf   
  41d9fc:	push   esi
  41d9fd:	std    
  41d9fe:	not    BYTE PTR [esi-0x1c]
  41da01:	inc    esp
  41da02:	call   0x7cb53e74
  41da07:	xchg   BYTE PTR [edx+0x7fc05115],cl
  41da0d:	mov    edx,0xa87d5476
  41da12:	xchg   edi,eax
  41da13:	mov    cl,0xd3
  41da15:	repnz xchg edx,eax
  41da17:	mov    dl,0xd6
  41da19:	cwde   
  41da1a:	push   ecx
  41da1b:	pop    esp
  41da1c:	das    
  41da1d:	out    0xa2,eax
  41da1f:	aas    
  41da20:	add    eax,0xb5657457
  41da25:	fsubr  st(2),st
  41da27:	adc    al,0x97
  41da29:	push   0xffffffda
  41da2b:	jmp    0x41d9fd
  41da2d:	push   0xffffffa2
  41da2f:	inc    ebp
  41da30:	cmp    BYTE PTR [ecx-0x47],0xe3
  41da34:	add    al,0x65
  41da36:	aam    0x5d
  41da38:	dec    esp
  41da39:	mov    dl,dh
  41da3b:	arpl   cx,cx
  41da3d:	sub    DWORD PTR [esi-0x778a068b],ebx
  41da43:	shl    dl,0xb5
  41da46:	mov    al,0xe7
  41da48:	ss jl  0x41d9e6
  41da4b:	lods   al,BYTE PTR ds:[esi]
  41da4c:	and    eax,DWORD PTR [ebp+edx*1-0xa]
  41da50:	adc    ch,BYTE PTR ds:0xd1b962a9
  41da56:	cld    
  41da57:	int3   
  41da58:	and    al,0x34
  41da5a:	jbe    0x41d9e0
  41da5c:	jo     0x41da67
  41da5e:	inc    eax
  41da5f:	in     al,dx
  41da60:	sahf   
  41da61:	lea    ebp,[edx]
  41da63:	int    0xff
  41da65:	popf   
  41da66:	fidivr WORD PTR fs:[edi]
  41da69:	inc    edi
  41da6a:	pop    es
  41da6b:	add    edi,DWORD PTR [eax-0x5e944dac]
  41da71:	xor    esi,DWORD PTR [edx]
  41da73:	dec    edi
  41da74:	inc    edx
  41da75:	imul   ecx,DWORD PTR [esi],0x13f96b13
  41da7b:	adc    eax,0x3d8793df
  41da80:	mov    ah,0x49
  41da82:	cmp    DWORD PTR [ecx+0x231e02d5],esi
  41da88:	jp     0x41daf0
  41da8a:	jmp    0x41da3d
  41da8c:	(bad)  
  41da8d:	mov    cl,0xfd
  41da8f:	dec    ebp
  41da90:	pop    esp
  41da91:	test   BYTE PTR [ebx-0x26dc139b],ch
  41da97:	je     0x41db0a
  41da99:	add    DWORD PTR ds:0x85bc0469,0x21c87773
  41daa3:	shr    DWORD PTR [eax+esi*8-0x1339f8b],cl
  41daaa:	jae    0x41dad4
  41daac:	push   cs
  41daad:	inc    ecx
  41daae:	out    0x5e,al
  41dab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dab1:	les    ebp,FWORD PTR es:[esp+edx*8-0x20]
  41dab6:	pop    ebx
  41dab7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dab8:	popa   
  41dab9:	push   ss
  41daba:	push   ds
  41dabb:	adc    edi,DWORD PTR [ebp-0x52f42f]
  41dac1:	out    dx,al
  41dac2:	jmp    0x8b45ad52
  41dac7:	clc    
  41dac8:	in     eax,dx
  41dac9:	mov    edx,0xa877d355
  41dace:	and    BYTE PTR [edi+0x59],dl
  41dad1:	out    0xe7,eax
  41dad3:	xor    DWORD PTR [ebx+0x3a],esi
  41dad6:	in     al,0xb7
  41dad8:	xchg   ecx,eax
  41dad9:	or     bh,dh
  41dadb:	or     al,0x8b
  41dadd:	dec    eax
  41dade:	fisubr WORD PTR [edx]
  41dae0:	pop    ebp
  41dae1:	xchg   esp,eax
  41dae2:	js     0x41dade
  41dae4:	push   0x53
  41dae6:	rcl    BYTE PTR [esi+0x5a2c5d50],0x6e
  41daed:	cmp    eax,0x670cdcd6
  41daf2:	rol    bh,1
  41daf4:	mov    al,ds:0x63f72834
  41daf9:	(bad)  
  41dafa:	pop    ss
  41dafb:	pop    edx
  41dafc:	ret    
  41dafd:	cdq    
  41dafe:	pop    ss
  41daff:	in     eax,dx
  41db00:	dec    edi
  41db01:	adc    BYTE PTR [esi-0x1a],al
  41db04:	mov    ebp,DWORD PTR [edx*4-0x13872cb6]
  41db0b:	push   edx
  41db0c:	js     0x41db4f
  41db0e:	cmp    bh,BYTE PTR [eax-0x55b38ffa]
  41db14:	dec    edx
  41db15:	pop    es
  41db16:	adc    eax,eax
  41db18:	mov    edi,0x8ff9d3d1
  41db1d:	dec    ebp
  41db1e:	jp     0x41db3c
  41db20:	shr    DWORD PTR [ecx+0xc],cl
  41db23:	out    dx,al
  41db24:	nop
  41db25:	nop
  41db26:	hlt    
  41db27:	sbb    al,0x54
  41db29:	or     DWORD PTR [edx+0x70fbdf7b],edi
  41db2f:	sar    BYTE PTR [edi+0x754177ea],1
  41db35:	mov    ah,0x56
  41db37:	adc    bh,ch
  41db39:	adc    BYTE PTR [ebp-0x9276d18],ch
  41db3f:	mov    dl,0x54
  41db41:	add    BYTE PTR [edi-0x402578e6],ah
  41db47:	(bad)  
  41db49:	jg     0x41daf7
  41db4b:	pop    ss
  41db4c:	aad    0x14
  41db4e:	data16 in al,0x9b
  41db51:	jo     0x41db7b
  41db53:	push   edx
  41db54:	add    DWORD PTR [eax],eax
  41db56:	daa    
  41db57:	add    eax,DWORD PTR [eax]
  41db59:	add    BYTE PTR [ecx-0x55aeac1a],dh
  41db5f:	iret   
  41db60:	push   edi
  41db61:	jmp    0x41dbba
  41db63:	mov    BYTE PTR [edi-0x5a],dl
  41db66:	popa   
  41db67:	cmp    al,0x9b
  41db69:	cmp    ebp,ecx
  41db6b:	xchg   esi,eax
  41db6c:	jb     0x41db2a
  41db6e:	addr16 jo 0x41db31
  41db71:	xchg   edx,eax
  41db72:	and    eax,0xf9efb2a9
  41db77:	inc    esp
  41db78:	push   eax
  41db79:	lds    ecx,FWORD PTR [ebx-0x7294db12]
  41db7f:	pop    esp
  41db80:	mov    edx,0x1bcac0a9
  41db85:	arpl   ax,bp
  41db87:	pop    ebp
  41db88:	or     DWORD PTR ds:0x70f98541,esp
  41db8e:	or     dl,BYTE PTR [eax]
  41db90:	retf   0x9e6e
  41db93:	lods   al,BYTE PTR ds:[esi]
  41db94:	int    0x9d
  41db96:	dec    edi
  41db97:	jns    0x41dbd4
  41db99:	out    dx,al
  41db9a:	jp     0x41dba0
  41db9c:	imul   esi,DWORD PTR [eax+0x2d],0x1cc97c4c
  41dba3:	shl    BYTE PTR [ebx-0x6628235],0x89
  41dbaa:	sar    DWORD PTR [edx],cl
  41dbac:	push   0xc9fbc577
  41dbb1:	xlat   BYTE PTR ds:[ebx]
  41dbb2:	add    al,0xfb
  41dbb4:	cld    
  41dbb5:	xchg   ecx,eax
  41dbb6:	dec    edx
  41dbb7:	int    0x3e
  41dbb9:	mov    esp,DWORD PTR [esi+0x68922ca]
  41dbbf:	aaa    
  41dbc0:	cmp    eax,0x399224e4
  41dbc5:	mov    bh,0x1
  41dbc7:	mov    ds:0x25fa8fe8,al
  41dbcc:	adc    al,0xa5
  41dbce:	aaa    
  41dbcf:	aad    0x92
  41dbd1:	inc    ebp
  41dbd2:	(bad)  
  41dbd3:	out    dx,eax
  41dbd4:	je     0x41dbd1
  41dbd6:	inc    esp
  41dbd7:	inc    edx
  41dbd8:	push   cs
  41dbd9:	or     eax,0xf189b0c8
  41dbde:	jmp    0x9e51:0xe0a4972d
  41dbe5:	jb     0x41dc20
  41dbe7:	pop    ds
  41dbe8:	test   DWORD PTR [edx+eiz*2],ebx
  41dbeb:	pusha  
  41dbec:	test   al,0xb5
  41dbee:	daa    
  41dbef:	shl    edx,1
  41dbf1:	lods   al,BYTE PTR ds:[esi]
  41dbf2:	les    ebx,FWORD PTR fs:[eax]
  41dbf5:	jmp    0x41dbc7
  41dbf7:	jo     0x41dc11
  41dbf9:	and    DWORD PTR [edx+0x78],0x44
  41dbfd:	jb     0x41dc45
  41dbff:	or     BYTE PTR [edx+0x2a54e2bf],dl
  41dc05:	push   ds
  41dc06:	dec    ebp
  41dc07:	xchg   ebp,eax
  41dc08:	cs iret 
  41dc0a:	inc    esp
  41dc0b:	sub    esi,edx
  41dc0d:	adc    DWORD PTR ds:0xd13f93a9,esi
  41dc13:	mov    ch,BYTE PTR [esi-0x52]
  41dc16:	stos   BYTE PTR es:[edi],al
  41dc17:	cmp    edx,DWORD PTR [ecx-0xc]
  41dc1a:	test   al,0x6f
  41dc1c:	sbb    al,0x32
  41dc1e:	loope  0x41dc55
  41dc20:	test   eax,0x3062b6ae
  41dc25:	xor    BYTE PTR [ecx+0x71c92bdb],ah
  41dc2b:	jns    0x41dc50
  41dc2d:	xchg   DWORD PTR [ebx+0x50],edx
  41dc30:	inc    edi
  41dc31:	and    DWORD PTR [edi-0x48],0xfffffff8
  41dc35:	add    ebx,DWORD PTR [edi+0x1e]
  41dc38:	pop    ds
  41dc39:	push   ss
  41dc3a:	jb     0x41dc80
  41dc3c:	xor    bh,BYTE PTR [edi]
  41dc3e:	and    BYTE PTR [ecx+0xda98ab9],al
  41dc44:	sbb    BYTE PTR [ecx],dl
  41dc46:	fwait
  41dc47:	or     esi,DWORD PTR [edi-0x3b27f537]
  41dc4d:	or     dl,BYTE PTR [edx+esi*2+0x5]
  41dc51:	in     al,dx
  41dc52:	jp     0x41dc7b
  41dc54:	addr16 inc edi
  41dc56:	mov    cl,0x1
  41dc58:	pinsrw mm1,esi,0x8c
  41dc5c:	adc    ecx,DWORD PTR [edx-0x62]
  41dc5f:	mov    edi,0x4e56de97
  41dc64:	(bad)  
  41dc66:	in     al,dx
  41dc67:	push   es
  41dc68:	dec    eax
  41dc69:	lea    edx,[edi-0x199994b7]
  41dc6f:	jnp    0x41dc74
  41dc71:	xchg   ebx,eax
  41dc72:	retf   0x4fb5
  41dc75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc76:	pop    esi
  41dc77:	int    0x22
  41dc79:	pushf  
  41dc7a:	xchg   edx,edx
  41dc7c:	push   ds
  41dc7d:	mov    ecx,0xe87f96a
  41dc82:	pop    esi
  41dc83:	enter  0x2851,0x6b
  41dc87:	sbb    cl,BYTE PTR [edx+esi*1-0x170e104c]
  41dc8e:	xor    al,0xc2
  41dc90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc91:	int    0xa6
  41dc93:	call   0xf2f5:0x7c7bf593
  41dc9a:	dec    ecx
  41dc9b:	jae    0x41dd09
  41dc9d:	ret    0xa035
  41dca0:	pop    esi
  41dca1:	mov    dh,0xbc
  41dca3:	xchg   edx,eax
  41dca4:	lds    ebp,FWORD PTR ss:[ebx+0x50]
  41dca8:	xlat   BYTE PTR ds:[ebx]
  41dca9:	pop    ecx
  41dcaa:	mov    dl,BYTE PTR [edx-0x61]
  41dcad:	leave  
  41dcae:	(bad)  
  41dcaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcb0:	xlat   BYTE PTR ds:[ebx]
  41dcb1:	sbb    edx,edx
  41dcb3:	pushf  
  41dcb4:	dec    ecx
  41dcb5:	inc    eax
  41dcb6:	inc    edi
  41dcb7:	fs push ecx
  41dcb9:	cmp    BYTE PTR [esi],ah
  41dcbb:	pop    es
  41dcbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcbd:	fidiv  WORD PTR ds:0xc4ab282a
  41dcc3:	push   0xc2f56f8e
  41dcc8:	mov    al,0x72
  41dcca:	jo     0x41dc9e
  41dccc:	sub    ebp,esi
  41dcce:	stos   DWORD PTR es:[edi],eax
  41dccf:	xor    BYTE PTR [ecx-0x45],0x9e
  41dcd3:	xchg   esp,eax
  41dcd4:	fdivr  st(2),st
  41dcd6:	add    al,0x39
  41dcd8:	mov    edx,0x6365bc88
  41dcdd:	cmp    ch,dh
  41dcdf:	outs   dx,DWORD PTR ds:[esi]
  41dce0:	sub    DWORD PTR [edi],ebx
  41dce2:	lods   eax,DWORD PTR ds:[esi]
  41dce3:	test   eax,0x600a86b4
  41dce8:	lods   eax,DWORD PTR ds:[esi]
  41dce9:	sbb    eax,0x8ea1be3e
  41dcee:	lock lock (bad) 
  41dcf1:	sbb    dl,BYTE PTR [ebp-0x27]
  41dcf4:	call   0xe784:0x5f059c8a
  41dcfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcfd:	enter  0xfc4c,0x19
  41dd01:	inc    ebp
  41dd02:	mov    al,0xa1
  41dd04:	fs jmp 0x41dd4e
  41dd07:	out    0xbb,al
  41dd09:	mov    edi,0xb511d35f
  41dd0e:	scas   al,BYTE PTR es:[edi]
  41dd0f:	jmp    0x7805:0x2b9c466a
  41dd16:	inc    esi
  41dd17:	jmp    0x41dc9c
  41dd19:	int3   
  41dd1a:	fistp  WORD PTR [ebx-0x340fb86f]
  41dd20:	xchg   esp,eax
  41dd21:	mov    ecx,0x2bf80e6e
  41dd26:	push   0x60f6664e
  41dd2b:	lahf   
  41dd2c:	mov    dh,0x3f
  41dd2e:	push   ecx
  41dd2f:	fisttp WORD PTR [esi]
  41dd31:	add    eax,0xeaa04ebb
  41dd36:	imul   BYTE PTR ds:0x9c344d
  41dd3c:	xor    ecx,DWORD PTR [ebx+0x62]
  41dd3f:	ja     0x41ddc0
  41dd41:	in     eax,0xd1
  41dd43:	ret    
  41dd44:	(bad)  
  41dd45:	xor    BYTE PTR [edx-0x3b291fbb],al
  41dd4b:	aam    0xc4
  41dd4d:	stc    
  41dd4e:	dec    ecx
  41dd4f:	adc    BYTE PTR [ebx-0x62],bh
  41dd52:	inc    eax
  41dd53:	sahf   
  41dd54:	sbb    eax,0x83a72200
  41dd59:	sub    DWORD PTR [ebp+0x3249e1d2],esp
  41dd5f:	repz fsincos 
  41dd62:	lods   al,BYTE PTR ds:[esi]
  41dd63:	and    ecx,DWORD PTR [edi+0x2203d53f]
  41dd69:	inc    esp
  41dd6a:	dec    edi
  41dd6b:	loopne 0x41dd2b
  41dd6d:	jo     0x41ddec
  41dd6f:	cmp    al,0xab
  41dd71:	xor    esi,DWORD PTR [ecx]
  41dd73:	push   ebp
  41dd74:	jns    0x41ddc5
  41dd76:	sar    DWORD PTR [esi],1
  41dd78:	mov    ds:0xcba82a9e,al
  41dd7d:	ror    esi,0x37
  41dd80:	test   al,0xa7
  41dd82:	adc    al,0xd4
  41dd84:	es sbb eax,0x441bf564
  41dd8a:	jne    0x41ddea
  41dd8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd8d:	push   esi
  41dd8e:	jge    0x41dd2a
  41dd90:	imul   edx,DWORD PTR [ebp+0x76],0x89d883a7
  41dd97:	in     al,0xcf
  41dd99:	add    esp,DWORD PTR [edx+0x29]
  41dd9c:	jno    0x41de15
  41dd9e:	inc    esp
  41dd9f:	and    BYTE PTR [edx-0x7ca722cc],bl
  41dda5:	fadd   st,st(6)
  41dda7:	jnp    0x41de03
  41dda9:	sub    ecx,DWORD PTR [edx+0x4b]
  41ddac:	mov    bl,0x1b
  41ddae:	(bad)  
  41ddaf:	in     eax,dx
  41ddb0:	or     BYTE PTR [edx],bh
  41ddb2:	std    
  41ddb3:	out    0x43,eax
  41ddb5:	or     BYTE PTR [esi+0x7212a992],ch
  41ddbb:	sub    eax,0xfb2ef40e
  41ddc0:	enter  0x143d,0xfc
  41ddc4:	xchg   dh,dh
  41ddc6:	mov    ah,BYTE PTR [ebp-0x2ded0a79]
  41ddcc:	(bad)  
  41ddce:	ret    0xa10b
  41ddd1:	sub    al,0x94
  41ddd3:	arpl   WORD PTR [edi-0x3],ax
  41ddd6:	xor    DWORD PTR [edx+0x39],edi
  41ddd9:	dec    esp
  41ddda:	and    dl,0x61
  41dddd:	lea    ebx,[edi-0x47]
  41dde0:	mov    ebx,0xc3517df5
  41dde5:	in     al,0x53
  41dde7:	pop    es
  41dde8:	sysexit 
  41ddea:	popa   
  41ddeb:	hlt    
  41ddec:	out    dx,eax
  41dded:	pusha  
  41ddee:	mov    ds:0xfe44ddf9,eax
  41ddf3:	aaa    
  41ddf4:	(bad)  
  41ddf5:	rcr    BYTE PTR [esi+0x71],1
  41ddf8:	jp     0x41ddcb
  41ddfa:	cmc    
  41ddfb:	retf   0x3a76
  41ddfe:	mov    BYTE PTR [ecx+0x49cd9472],dl
  41de04:	xchg   ecx,eax
  41de05:	add    DWORD PTR [ebp+0x36],0x6f11bad9
  41de0c:	inc    esp
  41de0d:	scas   eax,DWORD PTR es:[edi]
  41de0e:	add    esi,DWORD PTR [eax-0x7a07d11c]
  41de14:	push   esi
  41de15:	sbb    DWORD PTR [esi-0x16feec94],esp
  41de1b:	cmp    eax,DWORD PTR [esi-0x48]
  41de1e:	sub    eax,DWORD PTR [ebx]
  41de20:	aad    0xf4
  41de22:	xchg   ebx,eax
  41de23:	ss xchg edi,eax
  41de25:	in     al,dx
  41de26:	repz test al,0xab
  41de29:	mov    cl,0x3a
  41de2b:	push   edi
  41de2c:	scas   al,BYTE PTR es:[edi]
  41de2d:	fadd   st(1),st
  41de2f:	sbb    BYTE PTR [edx+edx*4],bh
  41de32:	retf   0x4cc3
  41de35:	scas   al,BYTE PTR es:[edi]
  41de36:	xor    BYTE PTR [ebp-0x7d],0xac
  41de3a:	mov    cl,0xd9
  41de3c:	pop    ss
  41de3d:	lea    ecx,[ecx-0x4c]
  41de40:	mov    gs,WORD PTR [ecx+eiz*1+0x2a]
  41de44:	scas   al,BYTE PTR es:[edi]
  41de45:	hlt    
  41de46:	lds    ebx,FWORD PTR [esi+0x54c8a2a3]
  41de4c:	push   ecx
  41de4d:	push   edi
  41de4e:	inc    esi
  41de4f:	out    dx,al
  41de50:	push   esp
  41de51:	das    
  41de52:	and    eax,0x852b346f
  41de57:	and    edi,edx
  41de59:	pop    ds
  41de5a:	fistp  QWORD PTR [edx]
  41de5c:	fcomi  st,st(3)
  41de5e:	sbb    BYTE PTR [esi+edi*1],0xcf
  41de62:	push   edx
  41de63:	cdq    
  41de64:	fwait
  41de65:	test   al,0x8e
  41de67:	cmp    BYTE PTR [edi],ch
  41de69:	aaa    
  41de6a:	cmp    edi,ebp
  41de6c:	daa    
  41de6d:	add    al,BYTE PTR [edx-0x127ea701]
  41de73:	data16 sub BYTE PTR [ebp-0x50],ah
  41de77:	lods   al,BYTE PTR ds:[esi]
  41de78:	mov    cl,0x26
  41de7a:	je     0x41dea6
  41de7c:	or     edx,DWORD PTR [edx+0xcd3dfb]
  41de82:	popf   
  41de83:	paddd  mm4,QWORD PTR [esi+edi*8-0x6c0200b]
  41de8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de8c:	mov    bl,0x6e
  41de8e:	pushf  
  41de8f:	out    dx,al
  41de90:	xchg   edi,eax
  41de91:	daa    
  41de92:	dec    edi
  41de93:	push   ebp
  41de94:	add    DWORD PTR [eax],eax
  41de96:	daa    
  41de97:	add    eax,DWORD PTR [eax]
  41de99:	add    dl,bl
  41de9b:	xlat   BYTE PTR ds:[ebx]
  41de9c:	add    BYTE PTR [edi+eiz*1-0x75218ced],0x38
  41dea4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dea5:	test   BYTE PTR [ebx+0x52],ch
  41dea8:	xor    BYTE PTR [edx+ebp*4],dl
  41deab:	imul   ebx,DWORD PTR [edx],0x211fa291
  41deb1:	sbb    edi,DWORD PTR [esi]
  41deb3:	cmp    eax,0xfb5911cb
  41deb8:	cld    
  41deb9:	push   eax
  41deba:	in     al,dx
  41debb:	imul   esi,ecx,0x7f
  41debe:	fcom   QWORD PTR [ebx+0x24]
  41dec1:	pusha  
  41dec2:	call   0x431e:0xa0d03d38
  41dec9:	sahf   
  41deca:	adc    cl,ch
  41decc:	pop    esp
  41decd:	push   es
  41dece:	fiadd  WORD PTR [edx]
  41ded0:	repnz push eax
  41ded2:	js     0x41dea6
  41ded4:	sahf   
  41ded5:	shl    BYTE PTR [ebx-0x3e],0x42
  41ded9:	hlt    
  41deda:	jae    0x41df28
  41dedc:	cs mov dl,0x9c
  41dedf:	pop    ebx
  41dee0:	sahf   
  41dee1:	and    BYTE PTR [esi-0x1bc68a2c],dh
  41dee7:	mov    ebx,0xfad5c567
  41deec:	push   ds
  41deed:	adc    eax,0x3b347e1f
  41def2:	ror    BYTE PTR [edi+0x72dcaedb],1
  41def8:	add    al,0xb0
  41defa:	pop    ebp
  41defb:	jno    0x41df6f
  41defd:	outs   dx,BYTE PTR ds:[esi]
  41defe:	jg     0x41debc
  41df00:	xchg   ebp,eax
  41df01:	in     al,dx
  41df02:	adc    DWORD PTR [ebp+0x38a3adde],ebp
  41df08:	repnz rcr BYTE PTR [ebp+0x0],1
  41df0c:	idiv   DWORD PTR ds:0x8ef81694
  41df12:	fild   WORD PTR [esi-0x5f]
  41df15:	fsubr  DWORD PTR [eax-0x2e]
  41df18:	lahf   
  41df19:	sbb    eax,0xb5e93aae
  41df1e:	(bad)  
  41df20:	sti    
  41df21:	inc    edi
  41df22:	jl     0x41df6d
  41df24:	ds jmp 0xbf24:0x3c7480eb
  41df2c:	dec    eax
  41df2d:	mov    bl,cl
  41df2f:	push   edi
  41df30:	lahf   
  41df31:	pop    ecx
  41df32:	fsub   DWORD PTR [eax+eax*2]
  41df35:	add    ebx,DWORD PTR [ecx-0x64]
  41df38:	jle    0x41df7c
  41df3a:	pop    ebp
  41df3b:	push   es
  41df3c:	clc    
  41df3d:	cmp    ebx,edx
  41df3f:	mov    ah,0xa7
  41df41:	or     esp,DWORD PTR [eax]
  41df43:	mov    eax,ds:0xea33a877
  41df48:	imul   ebx,esp,0xdd5c1227
  41df4e:	(bad)  
  41df4f:	xchg   esp,eax
  41df50:	mov    cl,BYTE PTR [edi-0x53]
  41df53:	icebp  
  41df54:	out    dx,eax
  41df55:	sbb    ecx,0xffffffd5
  41df58:	loope  0x41deff
  41df5a:	adc    esi,DWORD PTR [eax]
  41df5c:	fist   DWORD PTR [esi-0x3ae0f84a]
  41df62:	and    BYTE PTR [edx],bl
  41df64:	dec    esp
  41df65:	sbb    esp,DWORD PTR [edx+eax*1]
  41df68:	mov    ebx,0xc5061f6f
  41df6d:	jg     0x41df6c
  41df6f:	fcomp  QWORD PTR [ebx+0x25002680]
  41df75:	mov    dh,0x87
  41df77:	sbb    eax,0xc2ad888e
  41df7c:	mov    dl,0x19
  41df7e:	scas   eax,DWORD PTR es:[edi]
  41df7f:	push   0xe7b90640
  41df84:	popa   
  41df85:	mov    BYTE PTR ds:0xb52896c3,cl
  41df8b:	fisttp DWORD PTR [edx-0x1d3394fd]
  41df91:	ins    DWORD PTR es:[edi],dx
  41df92:	icebp  
  41df93:	mov    ds:0x7301cfe6,al
  41df98:	leave  
  41df99:	jo     0x41df58
  41df9b:	and    al,0x27
  41df9d:	pop    edx
  41df9e:	ins    DWORD PTR es:[edi],dx
  41df9f:	mov    dl,0xf6
  41dfa1:	mov    ds:0x22e27b02,al
  41dfa6:	adc    ch,ch
  41dfa8:	stos   BYTE PTR es:[edi],al
  41dfa9:	xor    edi,DWORD PTR [eax+0x25a68a92]
  41dfaf:	mov    ebp,0x1519c95d
  41dfb4:	rcl    BYTE PTR [ecx],1
  41dfb6:	jne    0x41dfa8
  41dfb8:	pop    edx
  41dfb9:	cli    
  41dfba:	push   esi
  41dfbb:	daa    
  41dfbc:	or     al,0x73
  41dfbe:	push   cs
  41dfbf:	add    eax,0xa976fe1e
  41dfc4:	and    edx,DWORD PTR [ecx+eax*4+0x76]
  41dfc8:	dec    edx
  41dfc9:	add    esi,DWORD PTR [edi]
  41dfcb:	in     eax,dx
  41dfcc:	mov    edx,0x61f881c8
  41dfd1:	loope  0x41df89
  41dfd3:	rcr    DWORD PTR [eax+0x47],0xe4
  41dfd7:	sub    ch,ah
  41dfd9:	sub    BYTE PTR ds:[ebx+0x6a12c5ad],al
  41dfe0:	jae    0x41df75
  41dfe2:	pushf  
  41dfe3:	pusha  
  41dfe4:	or     BYTE PTR [edi],cl
  41dfe6:	sub    eax,0x17b5f5ad
  41dfeb:	sub    bh,BYTE PTR [ebx]
  41dfed:	popf   
  41dfee:	ja     0x41df7b
  41dff0:	shr    BYTE PTR [ebx-0x6e],1
  41dff3:	inc    ebx
  41dff4:	inc    edi
  41dff5:	(bad)  
  41dff6:	ins    BYTE PTR es:[edi],dx
  41dff7:	or     bl,BYTE PTR [edx+0x1981632d]
  41dffd:	pusha  
  41dffe:	sbb    DWORD PTR [edx],0x27
  41e001:	adc    edx,edi
  41e003:	mov    ch,0x6c
  41e005:	mov    edi,0xc0160d3c
  41e00a:	lea    esp,[ebx-0x6298179a]
  41e010:	sbb    bl,0x91
  41e013:	(bad)  
  41e014:	sbb    cl,BYTE PTR [edx]
  41e016:	fnstcw WORD PTR [ebx-0x23cf9370]
  41e01c:	push   ss
  41e01d:	ror    ebx,cl
  41e01f:	dec    esp
  41e020:	fldcw  WORD PTR [eax-0x43a50031]
  41e026:	add    eax,0x2e3c017e
  41e02b:	mov    eax,0xe47eacc7
  41e030:	ret    0x837e
  41e033:	xchg   ebp,eax
  41e034:	cwde   
  41e035:	pushf  
  41e036:	cmp    al,0xcd
  41e038:	jb     0x41dfd0
  41e03a:	je     0xc49e402b
  41e040:	fs cmp al,0x79
  41e043:	push   cs
  41e044:	jg     0x41e078
  41e046:	jg     0x41e0ae
  41e048:	dec    esp
  41e049:	inc    ebx
  41e04a:	mov    esp,0x9efae712
  41e04f:	and    eax,0x70f79c63
  41e054:	fidiv  DWORD PTR [edi-0x55]
  41e057:	sahf   
  41e058:	lahf   
  41e059:	xor    al,0x7e
  41e05b:	pop    edi
  41e05c:	xchg   DWORD PTR [ecx+0x4e],ebx
  41e05f:	dec    bl
  41e061:	lea    ecx,ds:[si-0x3a4a]
  41e067:	jmp    0xeec16a80
  41e06c:	mov    al,0xdc
  41e06e:	pop    ebp
  41e06f:	push   ecx
  41e070:	pop    ebp
  41e071:	inc    eax
  41e072:	lods   al,BYTE PTR ds:[esi]
  41e073:	cli    
  41e074:	ds push ss
  41e076:	repnz std 
  41e078:	jo     0x41e0ad
  41e07a:	lds    esi,FWORD PTR [eax+ebx*2-0x2c]
  41e07e:	push   ds
  41e07f:	sub    al,0x55
  41e081:	lahf   
  41e082:	cmp    DWORD PTR [ebp-0x5435ff67],eax
  41e088:	adc    cl,BYTE PTR [eax+0x479bf5b]
  41e08e:	xchg   esi,eax
  41e08f:	mov    esp,0xb30d059b
  41e094:	pushf  
  41e095:	fwait
  41e096:	jp     0x41e02c
  41e098:	mov    al,al
  41e09a:	or     eax,0x5644085c
  41e09f:	xchg   ebx,eax
  41e0a0:	push   esi
  41e0a1:	mov    cl,0xfc
  41e0a3:	inc    esi
  41e0a4:	in     al,dx
  41e0a5:	jmp    0x41e02f
  41e0a7:	das    
  41e0a8:	cwde   
  41e0a9:	retf   0x5daa
  41e0ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0ad:	xor    BYTE PTR [esi-0x57],al
  41e0b0:	push   ecx
  41e0b1:	jne    0x41e039
  41e0b3:	push   esp
  41e0b4:	dec    esi
  41e0b5:	and    ah,BYTE PTR [eax-0x17851965]
  41e0bb:	pop    esp
  41e0bc:	lea    edx,[eax-0x576d3b7e]
  41e0c2:	pop    ds
  41e0c3:	(bad)  ss:0x6256df4e
  41e0ca:	push   es
  41e0cb:	sub    BYTE PTR [ebx],ch
  41e0cd:	push   eax
  41e0ce:	(bad)  
  41e0cf:	sub    edi,DWORD PTR [ebx-0x30]
  41e0d2:	fadd   QWORD PTR [edi+eax*1-0x386e8535]
  41e0d9:	addr16 xor eax,0xf0988759
  41e0df:	mov    dh,0xb8
  41e0e1:	sahf   
  41e0e2:	mov    ecx,0xe462ba76
  41e0e7:	sub    al,0x2d
  41e0e9:	pop    ebp
  41e0ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0eb:	mov    edi,0xc06453f3
  41e0f0:	icebp  
  41e0f1:	lock or eax,0x90f8e46b
  41e0f7:	mov    esp,0x9e1b36b4
  41e0fc:	in     al,dx
  41e0fd:	test   BYTE PTR [ebp-0x73],bh
  41e100:	bt     edx,0xcc
  41e104:	jl     0x41e0f0
  41e106:	mov    eax,ds:0x837a7c27
  41e10b:	inc    ebp
  41e10c:	div    DWORD PTR [ebp+0x789947ad]
  41e112:	rol    bh,cl
  41e114:	js     0x41e140
  41e116:	scas   al,BYTE PTR es:[edi]
  41e117:	stc    
  41e118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e119:	cdq    
  41e11a:	adc    ch,BYTE PTR [edx+0x1f]
  41e11d:	inc    esp
  41e11e:	neg    BYTE PTR [esi-0x1f]
  41e121:	ss xor ah,0x80
  41e125:	adc    al,0x92
  41e127:	loop   0x41e10e
  41e129:	je     0x41e0d4
  41e12b:	out    0x51,eax
  41e12d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e12e:	mov    dl,0x3f
  41e130:	jae    0x41e0e8
  41e132:	outs   dx,BYTE PTR ds:[esi]
  41e133:	lock mov edx,0x36b36fa4
  41e139:	mov    bl,0xb7
  41e13b:	pushf  
  41e13c:	mov    cl,0x2b
  41e13e:	adc    eax,0xc2ebc47
  41e143:	in     eax,dx
  41e144:	test   eax,0x1c787e06
  41e149:	(bad)  
  41e14b:	ins    BYTE PTR es:[edi],dx
  41e14c:	pop    edi
  41e14d:	jae    0x41e168
  41e14f:	add    al,0x13
  41e151:	sbb    BYTE PTR [edx+0xb84d4c7],0x3b
  41e158:	xchg   ebp,eax
  41e159:	inc    eax
  41e15a:	mov    dh,0x1e
  41e15c:	shr    BYTE PTR [eax],cl
  41e15e:	aad    0x3
  41e160:	mov    ss,WORD PTR [edi+0x44c744a2]
  41e166:	xchg   esp,eax
  41e167:	jmp    0x21bf:0x587341fc
  41e16e:	xchg   DWORD PTR [eax-0x6e],edx
  41e171:	into   
  41e172:	sub    BYTE PTR [ebp+0x68],bh
  41e175:	ror    bh,1
  41e177:	mov    bh,0x41
  41e179:	pop    eax
  41e17a:	aam    0xec
  41e17c:	shl    ecx,1
  41e17e:	fidivr DWORD PTR [edx]
  41e180:	mov    esp,0x5604f6e6
  41e185:	fs sahf 
  41e187:	cdq    
  41e188:	xchg   esi,eax
  41e189:	mov    ds:0x6728b207,al
  41e18e:	bndstx [esi+edi*8+0x4e],bnd3
  41e193:	push   edx
  41e194:	jmp    0xeeffa4bc
  41e199:	ds push esi
  41e19b:	pop    ebx
  41e19c:	ret    
  41e19d:	cld    
  41e19e:	xlat   BYTE PTR ds:[ebx]
  41e19f:	adc    bl,BYTE PTR [ecx+0x22182594]
  41e1a5:	sub    dh,BYTE PTR [esi-0x6319740e]
  41e1ab:	mov    ds:0xf5c8c69e,eax
  41e1b0:	cwde   
  41e1b1:	inc    esp
  41e1b2:	mov    al,0x6b
  41e1b4:	sbb    DWORD PTR [eax-0x69],edi
  41e1b7:	pop    ebp
  41e1b8:	aad    0xda
  41e1ba:	es jl  0x41e15b
  41e1bd:	or     ecx,DWORD PTR [edx+0x2000be9c]
  41e1c3:	push   ss
  41e1c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1c5:	lea    esi,[esi+0x25bf29bf]
  41e1cb:	lods   eax,DWORD PTR ds:[esi]
  41e1cc:	and    dl,al
  41e1ce:	mov    ebx,0x76a24ba9
  41e1d3:	pop    eax
  41e1d4:	add    DWORD PTR [eax],eax
  41e1d6:	daa    
  41e1d7:	add    eax,DWORD PTR [eax]
  41e1d9:	add    BYTE PTR [edi-0x6e],cl
  41e1dc:	dec    edx
  41e1dd:	jae    0x41e204
  41e1df:	sbb    DWORD PTR [ebx],esi
  41e1e1:	rcl    BYTE PTR [esi-0x71],cl
  41e1e4:	and    al,cl
  41e1e6:	inc    ebp
  41e1e7:	pusha  
  41e1e8:	push   edx
  41e1e9:	aad    0xe4
  41e1eb:	bound  ebp,QWORD PTR [ebp+0x3b56495]
  41e1f1:	cmp    ebp,ecx
  41e1f3:	cmp    edx,DWORD PTR [eax]
  41e1f5:	retf   0x94d6
  41e1f8:	lahf   
  41e1f9:	dec    edi
  41e1fb:	in     al,0x2a
  41e1fd:	inc    edx
  41e1fe:	mov    WORD PTR [eax-0x18],ds
  41e201:	les    edi,FWORD PTR [ebx-0x51]
  41e204:	xchg   esp,eax
  41e205:	data16 mov cl,0x68
  41e208:	sar    ecx,1
  41e20a:	(bad)  
  41e20c:	je     0x41e1b2
  41e20e:	xchg   DWORD PTR [ecx-0x4e],esi
  41e211:	ja     0x41e1b1
  41e213:	or     edi,DWORD PTR [edx]
  41e215:	sub    al,0x49
  41e217:	jg     0x41e1f3
  41e219:	iret   
  41e21a:	std    
  41e21b:	fwait
  41e21c:	mov    ch,0x96
  41e21e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e21f:	add    eax,0x5abe7349
  41e224:	mov    eax,DWORD PTR [ebx+ecx*2]
  41e227:	mov    esi,0x57affa5d
  41e22c:	sbb    ecx,DWORD PTR [ecx+0x1f]
  41e22f:	pusha  
  41e230:	shr    BYTE PTR [ecx+0xc],cl
  41e233:	lods   eax,DWORD PTR ds:[esi]
  41e234:	and    BYTE PTR [ebx+0x56f27d9f],bh
  41e23a:	(bad)  
  41e23b:	add    eax,DWORD PTR [edi-0x1f]
  41e23e:	popf   
  41e23f:	inc    esp
  41e240:	rcl    DWORD PTR [ecx+0x5f904425],0x3
  41e247:	jae    0x41e20d
  41e249:	pop    edx
  41e24a:	jl     0x41e20c
  41e24c:	aad    0x51
  41e24e:	xor    edx,DWORD PTR [edx+0x2a]
  41e251:	jns    0x41e1d3
  41e253:	push   edi
  41e254:	mov    eax,0xbc82b2de
  41e259:	xchg   edx,eax
  41e25a:	jmp    0x7cd4:0xb7bf2977
  41e261:	inc    ecx
  41e262:	aam    0x4d
  41e264:	test   DWORD PTR [esi+0x1474aba6],ebp
  41e26a:	test   eax,0xa2d82067
  41e26f:	cdq    
  41e270:	adc    eax,0xf85b6d0d
  41e275:	sub    al,0x6
  41e277:	mov    cl,0x22
  41e279:	(bad)  
  41e27a:	mov    ah,0x7b
  41e27c:	and    dl,BYTE PTR [eax-0x8be0a1a]
  41e282:	popa   
  41e283:	sub    dl,al
  41e285:	adc    DWORD PTR [esi+0x76897dad],0x67f2c872
  41e28f:	mov    eax,edx
  41e291:	js     0x41e2ae
  41e293:	loopne 0x41e21e
  41e295:	in     eax,0x2c
  41e297:	in     al,dx
  41e298:	(bad)  
  41e299:	cmp    DWORD PTR [ecx+0x36cdcdd2],ebp
  41e29f:	push   eax
  41e2a0:	xchg   DWORD PTR [eax-0x77a2219b],edx
  41e2a6:	jmp    0xf22e:0x479e30b3
  41e2ad:	loopne 0x41e323
  41e2af:	dec    edi
  41e2b0:	call   0x7905c9fd
  41e2b5:	xor    DWORD PTR [edx+0x7dd3362c],0x7bbb2c76
  41e2bf:	xchg   ebp,eax
  41e2c0:	out    dx,eax
  41e2c1:	mov    ecx,0xb0236657
  41e2c6:	call   0x3577:0x75af25d8
  41e2cd:	leave  
  41e2ce:	fdivr  DWORD PTR [eax+0x3328ff28]
  41e2d5:	or     ah,BYTE PTR [ebp+0x14fcc4f5]
  41e2db:	loopne 0x41e27a
  41e2dd:	stc    
  41e2de:	outs   dx,BYTE PTR ds:[esi]
  41e2df:	out    0x61,al
  41e2e1:	sub    bl,BYTE PTR [esi-0xd526eaf]
  41e2e7:	mov    WORD PTR [eax-0xc],ds
  41e2ea:	push   eax
  41e2eb:	push   ds
  41e2ec:	cld    
  41e2ed:	pop    ebx
  41e2ee:	pop    es
  41e2ef:	je     0x41e309
  41e2f1:	jmp    0x48dc:0x29174fd
  41e2f8:	nop
  41e2f9:	mov    BYTE PTR ds:0xa1eadb91,dh
  41e2ff:	imul   ecx,DWORD PTR [edi-0x21a1ef5e],0x18
  41e306:	dec    ebx
  41e307:	sar    BYTE PTR [ecx+0x1454eb55],1
  41e30d:	xor    eax,0x83050a87
  41e312:	test   eax,0xe9061be8
  41e317:	ss jmp 0xca37:0x37a80dda
  41e31f:	inc    eax
  41e320:	pop    ecx
  41e321:	lahf   
  41e322:	xor    DWORD PTR ds:0x78a4c050,0xffffffec
  41e329:	call   0x65bf:0x99d0704c
  41e330:	lock jb 0x41e2f8
  41e333:	stos   DWORD PTR es:[edi],eax
  41e334:	push   esp
  41e335:	mov    bh,0x7a
  41e337:	xchg   ecx,eax
  41e338:	int    0xe7
  41e33a:	sub    DWORD PTR [ecx],eax
  41e33c:	(bad)  
  41e33e:	sar    ecx,0x2c
  41e341:	mov    ebx,0xbd2da9bc
  41e346:	jnp    0x41e3b9
  41e348:	in     al,0x93
  41e34a:	xor    eax,0xbaaa59c4
  41e34f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e350:	xchg   ch,al
  41e352:	test   BYTE PTR [ebx+0x49a6b358],0x57
  41e359:	test   al,0x4d
  41e35b:	pop    edi
  41e35c:	mov    edi,0xbdc561e1
  41e361:	mov    al,ds:0x8ccb6693
  41e366:	mov    ebx,0x5ecadbf7
  41e36b:	cwde   
  41e36c:	mov    bl,0x44
  41e36e:	js     0x41e389
  41e370:	loop   0x41e3c7
  41e372:	jge    0x41e377
  41e374:	jl     0x41e3c3
  41e376:	xchg   ebx,eax
  41e377:	bsr    esp,DWORD PTR ds:0x3c921a71
  41e37e:	mov    edi,0x91a20e54
  41e383:	cmp    ch,BYTE PTR [edi]
  41e385:	sub    al,0x68
  41e387:	jmp    0xf6d38487
  41e38c:	ror    DWORD PTR [edx+0x18],0x61
  41e390:	jl     0x41e3dc
  41e392:	int    0xb7
  41e394:	push   ss
  41e395:	int3   
  41e396:	loop   0x41e36d
  41e398:	add    bl,BYTE PTR [edi-0x49207cff]
  41e39e:	lods   eax,DWORD PTR ds:[esi]
  41e39f:	jo     0x41e34c
  41e3a1:	xor    al,0x84
  41e3a3:	fidiv  WORD PTR [edi+0x5c]
  41e3a6:	adc    BYTE PTR [ecx],dl
  41e3a8:	popa   
  41e3a9:	mov    al,0x52
  41e3ab:	pushf  
  41e3ac:	mov    ebx,0xa206d49d
  41e3b1:	and    BYTE PTR [ebp+0x59],bl
  41e3b4:	and    eax,edx
  41e3b6:	mov    dl,bl
  41e3b8:	je     0x41e3f2
  41e3ba:	mov    WORD PTR [ecx-0x21],gs
  41e3bd:	and    DWORD PTR [esi+0x5e],esp
  41e3c0:	fxch   st(0)
  41e3c2:	scas   eax,DWORD PTR es:[edi]
  41e3c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3c4:	sbb    eax,0xbb9a649f
  41e3c9:	dec    edi
  41e3ca:	stos   DWORD PTR es:[edi],eax
  41e3cb:	push   ecx
  41e3cc:	lods   eax,DWORD PTR ds:[esi]
  41e3cd:	cs out dx,al
  41e3cf:	sbb    DWORD PTR [eax+0x8],ebx
  41e3d2:	lods   al,BYTE PTR ds:[esi]
  41e3d3:	pop    edi
  41e3d4:	push   ecx
  41e3d5:	mov    bl,0x3a
  41e3d7:	scas   eax,DWORD PTR es:[edi]
  41e3d8:	mov    ch,0x36
  41e3da:	into   
  41e3db:	xor    BYTE PTR es:[ecx-0x61da9d2a],dh
  41e3e2:	scas   al,BYTE PTR es:[edi]
  41e3e3:	xchg   BYTE PTR [ebx+0x525a7859],ch
  41e3e9:	mov    eax,ds:0x6e37873d
  41e3ee:	inc    BYTE PTR [eax]
  41e3f0:	ret    
  41e3f1:	mov    al,ds:0x354daaa5
  41e3f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3f7:	stc    
  41e3f8:	xchg   esi,eax
  41e3f9:	test   al,0x4a
  41e3fb:	adc    BYTE PTR [eax],0xbc
  41e3fe:	xchg   esp,eax
  41e3ff:	imul   edi,DWORD PTR [edx-0x5644ade],0x5fbdd1b5
  41e409:	add    DWORD PTR [esi+esi*8-0x26],edi
  41e40d:	inc    edi
  41e40e:	push   ss
  41e40f:	sbb    eax,esi
  41e411:	fcmovnu st,st(2)
  41e413:	mov    edx,0x76986bc
  41e418:	pop    edx
  41e419:	jo     0x41e452
  41e41b:	out    dx,al
  41e41c:	pop    esp
  41e41d:	mov    ebp,0x87c63a0f
  41e422:	repnz jmp 0xac4f:0xe6498517
  41e42a:	sbb    bh,ch
  41e42c:	sub    dh,BYTE PTR [edx-0x32]
  41e42f:	sbb    DWORD PTR [ebx+0x7ffacc8b],edx
  41e435:	loop   0x41e403
  41e437:	das    
  41e438:	push   cs
  41e439:	add    BYTE PTR [edi],0xe7
  41e43c:	xor    al,0xca
  41e43e:	hlt    
  41e43f:	xor    BYTE PTR [ecx+0x45344198],dh
  41e445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e446:	pop    esp
  41e447:	mov    al,ds:0xecf3ebec
  41e44c:	call   0x535ce255
  41e451:	sahf   
  41e452:	rol    BYTE PTR [edx+0x147ba7b1],cl
  41e458:	mov    eax,0xeec85c75
  41e45d:	leave  
  41e45e:	inc    edi
  41e45f:	(bad)  
  41e461:	mov    al,ds:0x4179143f
  41e466:	je     0x41e3ea
  41e468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e469:	hlt    
  41e46a:	push   cs
  41e46b:	imul   ebp,DWORD PTR [ebp-0x6a],0x9f7a160
  41e472:	mov    cl,0xce
  41e474:	jp     0x41e4ec
  41e476:	call   0x853:0x81289aa7
  41e47d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e47e:	test   DWORD PTR [edx-0x1],esp
  41e481:	popf   
  41e482:	or     eax,0xe7b1190e
  41e487:	adc    cl,BYTE PTR [ecx+ebx*8+0x14]
  41e48b:	rol    DWORD PTR [ecx+0x599f71ca],0xf7
  41e492:	out    0xd5,al
  41e494:	xlat   BYTE PTR ds:[ebx]
  41e495:	cmp    eax,0x5f009ce0
  41e49a:	jmp    0xe3b07a82
  41e49f:	dec    ecx
  41e4a0:	xchg   esp,eax
  41e4a1:	into   
  41e4a2:	sti    
  41e4a3:	cld    
  41e4a4:	jne    0x41e4ed
  41e4a6:	xor    BYTE PTR [ebp+0x1d62f080],bh
  41e4ac:	xor    al,BYTE PTR [edi]
  41e4ae:	das    
  41e4af:	adc    ebx,DWORD PTR [ebp-0x37]
  41e4b2:	iret   
  41e4b3:	repz fs out dx,eax
  41e4b6:	pop    ebp
  41e4b7:	lds    edi,FWORD PTR [edi+0x5c1670ab]
  41e4bd:	mov    ebp,DWORD PTR [ebx]
  41e4bf:	mov    edx,0xcbb98c85
  41e4c4:	retf   
  41e4c5:	mov    eax,0x32f1946f
  41e4ca:	push   ecx
  41e4cb:	dec    esi
  41e4cc:	call   0x2c7e60d6
  41e4d1:	pop    edi
  41e4d2:	cs push cs
  41e4d4:	dec    ebx
  41e4d5:	arpl   bp,bx
  41e4d7:	sbb    al,0x50
  41e4d9:	pop    es
  41e4da:	pop    esi
  41e4db:	xchg   edi,eax
  41e4dc:	adc    DWORD PTR [edi],ebp
  41e4de:	adc    DWORD PTR [edx-0x34901b4],edx
  41e4e4:	int    0xc3
  41e4e6:	arpl   WORD PTR [ecx+0x4ad630bc],bp
  41e4ec:	pop    eax
  41e4ed:	dec    DWORD PTR [ebx-0x42]
  41e4f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4f1:	nop
  41e4f2:	push   ebx
  41e4f3:	jp     0x41e499
  41e4f5:	fnstenv [eax-0x7d01cb44]
  41e4fb:	pop    ebp
  41e4fc:	shrd   esp,ebp,0x72
  41e500:	mov    DWORD PTR [eax],eax
  41e502:	mov    al,0x33
  41e504:	cmp    ch,BYTE PTR [ecx+0x3bb3a9bb]
  41e50a:	test   DWORD PTR [edi+0x519a0cbe],esi
  41e510:	je     0x41e516
  41e512:	popf   
  41e513:	pop    ebx
  41e514:	add    DWORD PTR [eax],eax
  41e516:	daa    
  41e517:	add    eax,DWORD PTR [eax]
  41e519:	add    cl,dl
  41e51b:	adc    dl,ah
  41e51d:	sub    eax,0xff02c904
  41e522:	cmp    ecx,DWORD PTR [ebp+0x495ddff3]
  41e528:	sti    
  41e529:	inc    ecx
  41e52a:	fisttp DWORD PTR [ebp-0x6b]
  41e52d:	jns    0x41e598
  41e52f:	add    al,0x1b
  41e531:	push   esp
  41e532:	push   ecx
  41e533:	mov    ch,0xcd
  41e535:	(bad)  
  41e536:	pop    edi
  41e537:	xor    al,0x3
  41e539:	and    DWORD PTR [ecx+0x6a08d890],0xa6468889
  41e543:	rol    BYTE PTR [ebx],0xca
  41e546:	jge    0x41e58b
  41e548:	pop    es
  41e549:	inc    ebp
  41e54a:	mov    ch,0x14
  41e54c:	fwait
  41e54d:	pop    ecx
  41e54e:	dec    edi
  41e54f:	push   esp
  41e550:	xor    DWORD PTR [edi+eax*4],edx
  41e553:	mov    edx,0x8208a3a4
  41e558:	xor    edi,DWORD PTR gs:[eax+0x6f923614]
  41e55f:	(bad)  
  41e560:	adc    eax,0xcf989f04
  41e565:	dec    edx
  41e566:	test   DWORD PTR [ebx+0x72],eax
  41e569:	(bad)  
  41e56a:	sub    eax,0xf0f0113a
  41e56f:	xchg   DWORD PTR [edi+0x1199ced4],eax
  41e575:	push   ds
  41e576:	xor    BYTE PTR [edi],cl
  41e578:	imul   edx,ecx,0xf97c9a1b
  41e57e:	lods   al,BYTE PTR ds:[si]
  41e580:	add    eax,0xc69f0caa
  41e585:	add    BYTE PTR [ebx],0x3e
  41e588:	out    dx,eax
  41e589:	xchg   ebp,eax
  41e58a:	inc    ebx
  41e58b:	stos   BYTE PTR es:[edi],al
  41e58c:	ds icebp 
  41e58e:	sub    esi,DWORD PTR [ebx+0x4d]
  41e591:	add    dh,bl
  41e593:	fnstenv [ebp-0x48]
  41e596:	addr16 iret 
  41e598:	and    DWORD PTR [esi-0x4cccdf2d],0xffffffec
  41e59f:	clc    
  41e5a0:	inc    edx
  41e5a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5a2:	lods   al,BYTE PTR ds:[esi]
  41e5a3:	mov    bh,0x9a
  41e5a5:	repz fistp QWORD PTR [ebp+0x75]
  41e5a9:	xchg   ebp,eax
  41e5aa:	ds nop
  41e5ac:	je     0x41e56a
  41e5ae:	jle    0x41e5ff
  41e5b0:	push   edi
  41e5b1:	mov    DWORD PTR [eax],0xc43558dd
  41e5b7:	push   ds
  41e5b8:	bound  ebp,QWORD PTR [ecx]
  41e5ba:	push   eax
  41e5bb:	mov    esp,0x4beaab06
  41e5c0:	push   ss
  41e5c1:	ret    
  41e5c2:	(bad)  
  41e5c3:	repz lahf 
  41e5c5:	cwde   
  41e5c6:	out    0xb7,al
  41e5c8:	gs das 
  41e5ca:	imul   ebx,DWORD PTR [eax],0x1e
  41e5cd:	shl    BYTE PTR [edx-0xd],0x59
  41e5d1:	mov    WORD PTR [ecx],es
  41e5d3:	cld    
  41e5d4:	inc    ebx
  41e5d5:	out    0xf5,eax
  41e5d7:	div    DWORD PTR [ebx-0x436208c0]
  41e5dd:	cld    
  41e5de:	loopne 0x41e632
  41e5e0:	bound  esi,QWORD PTR [edi-0xb9a0a95]
  41e5e6:	in     eax,dx
  41e5e7:	jp     0x41e626
  41e5e9:	inc    ebx
  41e5ea:	rcr    DWORD PTR [ebx-0x51],cl
  41e5ed:	push   ss
  41e5ee:	sub    DWORD PTR [esi+0x2a],esi
  41e5f1:	ds mov dh,0x18
  41e5f4:	xor    al,0xdb
  41e5f6:	adc    BYTE PTR [ebx+0x104b93bb],dh
  41e5fc:	(bad)  
  41e5fd:	adc    dl,BYTE PTR [ebp-0x3]
  41e600:	lea    ecx,[ebx+0x5f31cbcd]
  41e606:	jne    0x41e5c2
  41e608:	fwait
  41e609:	mov    dl,0x96
  41e60b:	lea    edi,[esi+0x71]
  41e60e:	lock scas al,BYTE PTR es:[edi]
  41e610:	icebp  
  41e611:	popf   
  41e612:	sbb    dl,BYTE PTR [eax+0x13]
  41e615:	(bad)  
  41e616:	and    eax,0xcbe77e89
  41e61b:	addr16 mov ds:0xbd1b,al
  41e61f:	sbb    BYTE PTR ds:[ecx+0x2a],bh
  41e623:	and    eax,0x8b452bcc
  41e628:	push   edx
  41e629:	mov    ebx,0x46a022bc
  41e62e:	inc    edx
  41e62f:	lea    ecx,[ecx+0x53f392d8]
  41e635:	mov    al,ds:0xc449c541
  41e63a:	call   0x4ad5d9c9
  41e63f:	pop    eax
  41e640:	sahf   
  41e641:	and    eax,0x442cad5b
  41e646:	push   ebx
  41e647:	push   ebx
  41e648:	push   DWORD PTR [ebp-0x22]
  41e64b:	jge    0x41e613
  41e64d:	cs and al,0x83
  41e650:	cmp    bh,BYTE PTR [ecx]
  41e652:	int3   
  41e653:	iret   
  41e654:	jmp    0x2c7b4b40
  41e659:	mov    ah,0xde
  41e65b:	sub    eax,0x993e6cc
  41e660:	shl    BYTE PTR [edx-0x29baadb],0xbd
  41e667:	push   es
  41e668:	icebp  
  41e669:	fimul  WORD PTR [edx+eiz*8+0x137928fb]
  41e670:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e671:	mov    bl,0x39
  41e673:	jns    0x41e676
  41e675:	cmp    eax,0x3c1ff1d6
  41e67a:	test   BYTE PTR [esi-0x7],bh
  41e67d:	dec    edi
  41e67e:	push   ebx
  41e67f:	icebp  
  41e680:	or     BYTE PTR [esp+edi*2+0x6],ch
  41e684:	add    BYTE PTR [edx+ecx*2+0x78],bl
  41e688:	dec    eax
  41e689:	jno    0x41e6ed
  41e68b:	out    dx,al
  41e68c:	mov    bl,0x85
  41e68e:	fmul   st,st(0)
  41e690:	push   esp
  41e691:	test   DWORD PTR gs:[eax+0x3a48926],0x8cd8135a
  41e69c:	sub    ecx,DWORD PTR [ebx-0x7f]
  41e69f:	(bad)  
  41e6a0:	aas    
  41e6a1:	fiadd  WORD PTR [eax+0x63fae241]
  41e6a7:	nop
  41e6a8:	je     0x41e662
  41e6aa:	test   BYTE PTR [ebp+edi*1-0x6a4a882b],dh
  41e6b1:	cmp    dl,dh
  41e6b3:	js     0x41e734
  41e6b5:	cld    
  41e6b6:	rol    DWORD PTR [ebx],1
  41e6b8:	mov    ah,0x54
  41e6ba:	clc    
  41e6bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6bc:	xor    DWORD PTR [esp+ebp*2-0x5bd90ba0],ebp
  41e6c3:	call   0xc7bccd78
  41e6c8:	mov    ds:0x91605d5f,al
  41e6cd:	add    DWORD PTR [ecx+0x493ae2ac],edi
  41e6d3:	xchg   esi,eax
  41e6d4:	in     al,0xd5
  41e6d6:	dec    esi
  41e6d7:	jmp    0x9fbf:0x3f93801
  41e6de:	stc    
  41e6df:	add    eax,0xc3688f08
  41e6e4:	xor    cl,BYTE PTR [edx]
  41e6e6:	cmovns ebp,DWORD PTR [ebx]
  41e6e9:	xlat   BYTE PTR ds:[ebx]
  41e6ea:	dec    esp
  41e6eb:	jmp    0x4980:0x725f16fc
  41e6f2:	jo     0x41e702
  41e6f4:	dec    esp
  41e6f5:	pop    eax
  41e6f6:	setae  BYTE PTR [ecx]
  41e6f9:	retf   
  41e6fa:	lock jne 0x41e694
  41e6fd:	xor    BYTE PTR [eax-0x65],ch
  41e700:	push   ecx
  41e701:	push   edx
  41e702:	loop   0x41e77f
  41e704:	sub    ah,BYTE PTR [esi-0x6881b353]
  41e70a:	jmp    0xfa77:0x6eb341ff
  41e711:	std    
  41e712:	nop
  41e713:	repnz push edx
  41e715:	pop    edx
  41e716:	inc    ebx
  41e718:	fst    QWORD PTR [edx+0xf]
  41e71b:	rcl    edx,1
  41e71d:	icebp  
  41e71e:	ds in  al,dx
  41e720:	mov    dl,0x2d
  41e722:	mov    bl,0xd3
  41e724:	lods   eax,DWORD PTR ds:[esi]
  41e725:	ins    BYTE PTR es:[edi],dx
  41e726:	dec    edx
  41e727:	mov    ebp,edx
  41e729:	lea    edi,[ebx-0x36b4c5c3]
  41e72f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e730:	jo     0x41e742
  41e732:	mov    cl,0x6
  41e734:	cmp    BYTE PTR [ebx+ebp*1-0x4061443c],ah
  41e73b:	mov    cl,0xd6
  41e73d:	imul   eax,DWORD PTR [ebp-0x2a],0x160015cf
  41e744:	sbb    cl,BYTE PTR [ebp-0x3d]
  41e747:	dec    edx
  41e748:	add    BYTE PTR [edx-0x60],ch
  41e74b:	shl    eax,cl
  41e74d:	fbstp  TBYTE PTR [edx-0x74]
  41e750:	jns    0x41e76c
  41e752:	dec    ebx
  41e753:	xor    DWORD PTR [edx+0x1d9dd6e3],esi
  41e759:	fs push ss
  41e75b:	mov    edx,0x69832edf
  41e760:	mov    DWORD PTR [eax-0x1ccd4180],ebp
  41e766:	cmp    DWORD PTR [edi+0x212bfa32],0xd771e0ec
  41e770:	xchg   DWORD PTR [ecx-0x4c],esi
  41e773:	dec    ebx
  41e774:	xchg   esi,eax
  41e775:	mov    ecx,0x423ad476
  41e77a:	repnz ins DWORD PTR es:[edi],dx
  41e77c:	pop    ds
  41e77d:	gs and al,0x4f
  41e780:	mov    bh,0xd5
  41e782:	inc    eax
  41e783:	jmp    DWORD PTR [edx]
  41e785:	dec    ebp
  41e786:	cmp    eax,DWORD PTR [ecx-0x59]
  41e789:	pop    ss
  41e78a:	xchg   edx,eax
  41e78b:	into   
  41e78c:	outs   dx,DWORD PTR ds:[esi]
  41e78d:	pop    eax
  41e78e:	(bad)  
  41e78f:	mov    dl,0xa0
  41e791:	push   0x69ac90ea
  41e796:	js     0x41e7bf
  41e798:	retf   
  41e799:	loopne 0x41e813
  41e79b:	(bad)  
  41e79c:	sbb    ch,BYTE PTR [edi-0x2e40ac42]
  41e7a2:	sub    edi,ecx
  41e7a4:	leave  
  41e7a5:	cmp    eax,eax
  41e7a7:	stc    
  41e7a8:	leave  
  41e7a9:	sub    eax,0x8466434e
  41e7ae:	adc    BYTE PTR [eax+ebp*4],cl
  41e7b1:	mov    dh,0xb6
  41e7b3:	les    ebx,FWORD PTR [ebp+0x674aff82]
  41e7b9:	xor    bh,ah
  41e7bb:	sbb    eax,0xb1f7954
  41e7c0:	dec    edx
  41e7c1:	inc    ecx
  41e7c2:	mov    cl,0x26
  41e7c4:	loopne 0x41e781
  41e7c6:	pop    ecx
  41e7c7:	out    0x4d,al
  41e7c9:	nop
  41e7ca:	xor    eax,0x78b5fbe8
  41e7cf:	xchg   DWORD PTR [eax+0x73],edi
  41e7d2:	ja     0x41e82b
  41e7d4:	inc    edi
  41e7d5:	retf   0x393c
  41e7d8:	cmc    
  41e7d9:	jmp    0x54b48517
  41e7de:	cmp    ebp,DWORD PTR [edx-0x52]
  41e7e1:	es dec ecx
  41e7e3:	adc    BYTE PTR [esi-0x31595465],bh
  41e7e9:	out    dx,al
  41e7ea:	push   ss
  41e7eb:	push   ds
  41e7ec:	mov    DWORD PTR [esi-0x78],edi
  41e7ef:	mov    ds:0xadc81372,al
  41e7f4:	(bad)  
  41e7f6:	test   al,0xc6
  41e7f8:	push   0xffffff8c
  41e7fa:	jno    0x41e812
  41e7fc:	cmc    
  41e7fd:	aad    0x69
  41e7ff:	xor    eax,0x69c1a01
  41e804:	scas   al,BYTE PTR es:[edi]
  41e805:	out    dx,al
  41e806:	ins    DWORD PTR es:[edi],dx
  41e807:	pop    ds
  41e808:	scas   al,BYTE PTR es:[edi]
  41e809:	mov    bl,0x2d
  41e80b:	pop    eax
  41e80c:	imul   BYTE PTR [edi+edi*4-0x3c]
  41e810:	mov    WORD PTR [esi+0x1ccecf4d],ds
  41e816:	(bad)  
  41e817:	mov    al,0xad
  41e819:	mov    ds:0x774a288f,al
  41e81e:	dec    esi
  41e81f:	pop    es
  41e820:	(bad)  
  41e821:	or     BYTE PTR gs:[edx+0x8b9cda2],dl
  41e828:	dec    eax
  41e829:	int    0x9
  41e82b:	xchg   ecx,eax
  41e82c:	int3   
  41e82d:	add    esp,DWORD PTR [ebx-0x2f6012ed]
  41e833:	jl     0x41e7c2
  41e835:	pusha  
  41e836:	inc    BYTE PTR [ecx-0x60c33688]
  41e83c:	fwait
  41e83d:	xlat   BYTE PTR ds:[ebx]
  41e83e:	outs   dx,DWORD PTR ds:[esi]
  41e83f:	repz add al,BYTE PTR [eax]
  41e842:	test   eax,0xff94c95e
  41e847:	xchg   edi,eax
  41e848:	std    
  41e849:	jg     0x41e855
  41e84b:	in     al,0x99
  41e84d:	pop    ecx
  41e84e:	in     al,dx
  41e84f:	loopne 0x41e857
  41e851:	push   esi
  41e852:	les    ebx,FWORD PTR [esi+0x1]
  41e855:	add    BYTE PTR [edi],ah
  41e857:	add    eax,DWORD PTR [eax]
  41e859:	add    BYTE PTR [ebx+edi*8+0xc],dl
  41e85d:	gs cli 
  41e85f:	push   0x38
  41e861:	fsincos 
  41e863:	popa   
  41e864:	push   ds
  41e865:	test   eax,0x4028a082
  41e86a:	xor    ecx,eax
  41e86c:	and    esp,DWORD PTR [ebx+0x3b]
  41e86f:	sub    ch,BYTE PTR [edx+0x27]
  41e872:	and    ebx,DWORD PTR [ebx+0x73]
  41e875:	aas    
  41e876:	aas    
  41e877:	mov    cl,0x13
  41e879:	jne    0x41e8dc
  41e87b:	mov    ah,0x96
  41e87d:	shl    BYTE PTR [eax+0x5ad52ebd],0x2a
  41e884:	jno    0x41e808
  41e886:	test   DWORD PTR [eax],esi
  41e888:	lock or edi,DWORD PTR [esi]
  41e88b:	add    ecx,DWORD PTR [edi-0x3247c295]
  41e891:	push   edx
  41e892:	sub    DWORD PTR [ebx],edi
  41e894:	mov    eax,ebx
  41e896:	xchg   ecx,eax
  41e897:	adc    BYTE PTR [ecx],dh
  41e899:	test   al,0x39
  41e89b:	iret   
  41e89c:	rol    BYTE PTR [edx-0x2c],1
  41e89f:	aad    0xcf
  41e8a1:	or     edi,DWORD PTR [esi]
  41e8a3:	cmp    eax,0xfd0ac8da
  41e8a8:	dec    edx
  41e8a9:	imul   edx,DWORD PTR [edx],0x1499570b
  41e8af:	adc    BYTE PTR [edi-0x3f],ch
  41e8b2:	les    esp,FWORD PTR [eax-0x43]
  41e8b5:	xor    BYTE PTR [eax+0x16852cfa],0x71
  41e8bc:	hlt    
  41e8bd:	sahf   
  41e8be:	jo     0x41e8c2
  41e8c0:	ficom  DWORD PTR [ebx]
  41e8c2:	xchg   DWORD PTR [ecx],edi
  41e8c4:	jmp    0x41e891
  41e8c6:	mov    ebp,0x25bd3240
  41e8cb:	mov    ebp,0x212f5a14
  41e8d0:	jne    0x41e8de
  41e8d2:	loop   0x41e855
  41e8d4:	push   ebp
  41e8d5:	pushf  
  41e8d6:	frstor [ecx]
  41e8d8:	aam    0x2e
  41e8da:	scas   eax,DWORD PTR es:[edi]
  41e8db:	fidivr DWORD PTR [esi+0x34]
  41e8de:	mov    al,ds:0x8b976a2c
  41e8e3:	sbb    esp,DWORD PTR [ecx+0x68]
  41e8e6:	gs jnp 0x41e89c
  41e8e9:	push   eax
  41e8ea:	out    dx,eax
  41e8eb:	pop    ebx
  41e8ec:	sub    edx,DWORD PTR [ecx+0x6b]
  41e8ef:	mov    ds:0x260544e5,eax
  41e8f4:	pop    ss
  41e8f5:	iret   
  41e8f6:	mov    ds:0x44dbbdd5,al
  41e8fb:	ins    BYTE PTR es:[edi],dx
  41e8fc:	pop    ebp
  41e8fd:	aas    
  41e8fe:	cmc    
  41e8ff:	icebp  
  41e900:	adc    DWORD PTR [edx],ecx
  41e902:	imul   edx,ecx,0x5f3e8094
  41e908:	pop    eax
  41e909:	sbb    edx,ebx
  41e90b:	popa   
  41e90c:	sbb    dh,dh
  41e90e:	les    edi,FWORD PTR [eax]
  41e910:	push   ebx
  41e911:	sahf   
  41e912:	push   ecx
  41e913:	hlt    
  41e914:	sub    DWORD PTR [ecx+edx*1+0x35],0x70
  41e919:	xlat   BYTE PTR fs:[ebx]
  41e91b:	mov    esi,0x195d62b
  41e920:	xchg   esi,eax
  41e921:	imul   ecx,DWORD PTR [eax],0x1f
  41e924:	pop    es
  41e925:	xor    BYTE PTR [ebx+0x4a],dl
  41e928:	dec    ecx
  41e929:	add    BYTE PTR [ebp+0x4a],al
  41e92c:	outs   dx,DWORD PTR ds:[esi]
  41e92d:	daa    
  41e92e:	call   0x7c2f5f69
  41e933:	sar    BYTE PTR [edi+esi*4-0x1cc644c3],0xef
  41e93b:	xchg   ecx,eax
  41e93c:	mov    edi,esp
  41e93e:	retf   0x5b2a
  41e941:	mov    dh,0x4e
  41e943:	push   es
  41e944:	push   ebp
  41e945:	inc    esp
  41e946:	xor    bl,BYTE PTR [ebx]
  41e948:	and    BYTE PTR [esi-0x5bcefc63],bl
  41e94e:	sbb    DWORD PTR [esi+0x25],0x31
  41e952:	leave  
  41e953:	dec    edx
  41e954:	sub    dh,BYTE PTR [ecx-0x2b]
  41e957:	fs pop ss
  41e959:	jne    0x41e939
  41e95b:	int    0xdb
  41e95d:	sub    eax,0x740a2b8b
  41e962:	pop    ebx
  41e963:	jae    0x41e950
  41e965:	inc    edx
  41e966:	les    esp,FWORD PTR [esi+ecx*1-0x5b]
  41e96a:	sbb    DWORD PTR [eax],edi
  41e96c:	mov    ds:0x21cfd056,al
  41e971:	cs in  eax,0x5d
  41e974:	jae    0x41e9e0
  41e976:	call   0x749c:0x9ffc94f8
  41e97d:	cmp    eax,0x5934695d
  41e982:	outs   dx,BYTE PTR ds:[esi]
  41e983:	loope  0x41e922
  41e985:	(bad)  
  41e986:	aam    0x4a
  41e988:	ja     0x41e9b4
  41e98a:	mov    dh,0xa2
  41e98c:	adc    DWORD PTR [ebx],esp
  41e98e:	fucomip st,st(0)
  41e990:	ja     0x41e9e5
  41e992:	or     eax,0xaf2b70f7
  41e997:	push   es
  41e998:	mov    WORD PTR [edx+0x28445a0a],es
  41e99e:	jns    0x41e9e3
  41e9a0:	aas    
  41e9a1:	lahf   
  41e9a2:	mov    ah,0x12
  41e9a4:	push   ds
  41e9a5:	xor    ah,BYTE PTR ds:0x8d81fe31
  41e9ab:	adc    esi,DWORD PTR [ecx+0x32]
  41e9ae:	dec    esi
  41e9af:	fisub  DWORD PTR [ecx]
  41e9b1:	dec    BYTE PTR [edx]
  41e9b3:	mov    BYTE PTR [edx],ch
  41e9b5:	inc    ebp
  41e9b6:	shl    BYTE PTR [ecx],cl
  41e9b8:	adc    dl,BYTE PTR [edx-0x57]
  41e9bb:	sbb    dh,BYTE PTR [ebp+0x64]
  41e9be:	fucomi st,st(3)
  41e9c0:	rol    ebx,cl
  41e9c2:	dec    eax
  41e9c3:	sbb    DWORD PTR es:[ecx+0x7fb7bd76],ebp
  41e9ca:	mov    bl,0xed
  41e9cc:	and    bl,cl
  41e9ce:	iret   
  41e9cf:	ror    DWORD PTR [ecx+0x0],cl
  41e9d2:	jg     0x41ea4c
  41e9d4:	push   ss
  41e9d5:	jne    0x41e99e
  41e9d7:	pop    ecx
  41e9d8:	jnp    0x41e9a0
  41e9da:	stos   DWORD PTR es:[edi],eax
  41e9db:	mov    ch,BYTE PTR [ebx]
  41e9dd:	shr    BYTE PTR [eax+0xe],0x7a
  41e9e1:	stc    
  41e9e2:	add    eax,0xef84f123
  41e9e7:	jl     0x41ea2d
  41e9e9:	retf   0x9ccc
  41e9ec:	or     ah,BYTE PTR [ecx]
  41e9ee:	mov    esi,0x5bb83053
  41e9f3:	push   ebx
  41e9f4:	mov    dh,BYTE PTR [eax-0x3a]
  41e9f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9f8:	aam    0x5e
  41e9fa:	adc    al,0x9f
  41e9fc:	sub    bl,BYTE PTR [edi+eiz*1-0x11004b21]
  41ea03:	shl    DWORD PTR [ebp+0x10d61218],cl
  41ea09:	pusha  
  41ea0a:	jae    0x41e990
  41ea0c:	xlat   BYTE PTR ds:[ebx]
  41ea0d:	ins    DWORD PTR es:[edi],dx
  41ea0e:	rcl    DWORD PTR [edx+0x12],cl
  41ea11:	pop    ebx
  41ea12:	js     0x41ea64
  41ea14:	retf   0xa6e8
  41ea17:	push   ecx
  41ea18:	inc    edi
  41ea19:	repz and eax,0x6c942dbe
  41ea1f:	mov    bl,0x31
  41ea21:	xor    eax,0x7b7b1aa8
  41ea26:	mov    dh,0x6b
  41ea28:	mov    fs,WORD PTR [esp+esi*2]
  41ea2b:	je     0x41ea73
  41ea2d:	fsubr  DWORD PTR [ebp+edi*1-0x6]
  41ea31:	popa   
  41ea32:	aam    0x1f
  41ea34:	inc    ebx
  41ea35:	ins    BYTE PTR es:[edi],dx
  41ea36:	pop    ebx
  41ea37:	push   ecx
  41ea38:	adc    edx,DWORD PTR [edi+0x3d]
  41ea3b:	scas   al,BYTE PTR es:[edi]
  41ea3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea3d:	test   BYTE PTR [ecx+0x59bb75c6],bh
  41ea43:	and    ah,BYTE PTR [edi-0x5e]
  41ea46:	aas    
  41ea47:	cld    
  41ea48:	adc    DWORD PTR [ecx],edi
  41ea4a:	sbb    edi,DWORD PTR [si+0x6eb3]
  41ea4f:	mov    al,0x96
  41ea51:	pop    esp
  41ea52:	mov    dl,0x99
  41ea54:	daa    
  41ea55:	mov    ds:0xc83e627d,al
  41ea5a:	lea    edx,[esi]
  41ea5c:	mov    ?,WORD PTR [esi]
  41ea5e:	arpl   WORD PTR [edx],bx
  41ea60:	sti    
  41ea61:	cmp    eax,0x87219b6c
  41ea66:	sbb    BYTE PTR es:[ebp-0x7b997832],ch
  41ea6d:	outs   dx,BYTE PTR ds:[esi]
  41ea6e:	ret    
  41ea6f:	iret   
  41ea70:	xor    eax,0x22821aee
  41ea75:	pop    ds
  41ea76:	sbb    BYTE PTR [edi+0x2e],bl
  41ea79:	mov    edi,0xfe56e6f8
  41ea7e:	shl    DWORD PTR [esi+ebx*2+0x4bec363b],1
  41ea85:	dec    ebx
  41ea86:	inc    eax
  41ea87:	cdq    
  41ea88:	xor    al,0xff
  41ea8a:	push   0x8ca8f8a4
  41ea8f:	imul   ebx,DWORD PTR [edi+0x2d],0x15
  41ea93:	lods   eax,DWORD PTR ds:[esi]
  41ea94:	stos   BYTE PTR es:[edi],al
  41ea95:	call   0x8f70:0x9a15689f
  41ea9c:	xchg   esi,eax
  41ea9d:	std    
  41ea9e:	out    0xeb,al
  41eaa0:	mov    ch,BYTE PTR [ebp+0x3187b5f7]
  41eaa6:	pop    edi
  41eaa7:	push   edi
  41eaa8:	call   0x69ed3cc7
  41eaad:	popf   
  41eaae:	cmp    BYTE PTR ds:0xa64f77c,ah
  41eab4:	pop    ss
  41eab5:	mov    BYTE PTR [edi-0x618bb252],bl
  41eabb:	outs   dx,DWORD PTR ds:[esi]
  41eabc:	inc    esi
  41eabd:	xor    al,0xc4
  41eabf:	es lods eax,DWORD PTR es:[esi]
  41eac2:	loopne 0x41eb32
  41eac4:	push   esi
  41eac5:	ret    0x89e2
  41eac8:	dec    eax
  41eac9:	cmp    al,0x16
  41eacb:	fwait
  41eacc:	inc    eax
  41eacd:	xor    DWORD PTR [edx+0x7b943008],eax
  41ead3:	lock in al,0x8c
  41ead6:	sub    BYTE PTR [ebp-0x15],0x7a
  41eada:	mov    esp,0xdbaee746
  41eadf:	jno    0x41eb59
  41eae1:	(bad)  
  41eae2:	pop    edx
  41eae3:	cmp    ebp,DWORD PTR [ecx+0x6463fd00]
  41eae9:	mov    dl,0xa6
  41eaeb:	or     DWORD PTR [ebp-0xa],ebx
  41eaee:	aam    0xcb
  41eaf0:	outs   dx,BYTE PTR ds:[esi]
  41eaf1:	pop    ecx
  41eaf2:	test   DWORD PTR [eax+0x22],edx
  41eaf5:	sbb    al,0x63
  41eaf7:	sahf   
  41eaf8:	pop    ebp
  41eaf9:	and    eax,0x3ec673df
  41eafe:	fist   WORD PTR [edi+0x77222a70]
  41eb04:	cdq    
  41eb05:	loopne 0x41eabe
  41eb07:	scas   al,BYTE PTR es:[edi]
  41eb08:	fst    st(1)
  41eb0a:	xchg   BYTE PTR [edx+0x95ca8ce],al
  41eb10:	imul   edi,esi,0x2
  41eb13:	mov    dh,dl
  41eb15:	pop    ss
  41eb16:	mov    al,ds:0x1a7dd841
  41eb1b:	dec    ebp
  41eb1c:	rol    dh,1
  41eb1e:	rcl    dl,cl
  41eb20:	xchg   edi,eax
  41eb21:	sub    DWORD PTR [esi],0x69f79034
  41eb27:	scas   al,BYTE PTR es:[di]
  41eb29:	mov    esi,0x3e057460
  41eb2e:	les    edi,FWORD PTR [esi]
  41eb30:	lock js 0x41eb79
  41eb33:	jp     0x41eb76
  41eb35:	js     0x41eb4e
  41eb37:	ins    DWORD PTR es:[edi],dx
  41eb38:	pop    edi
  41eb39:	rol    BYTE PTR [ebx+0x186e7474],0x5b
  41eb40:	xor    esp,esi
  41eb42:	push   0xba05bcd
  41eb47:	mov    dl,0x3e
  41eb49:	xor    DWORD PTR [esi-0x28],esi
  41eb4c:	mov    ebx,0x2513dfe4
  41eb51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb52:	lods   al,BYTE PTR ds:[esi]
  41eb53:	inc    ebp
  41eb54:	mov    ds:0xf7848b7,eax
  41eb59:	xchg   ecx,eax
  41eb5a:	shl    ebp,1
  41eb5c:	ficom  WORD PTR [eax-0x18]
  41eb5f:	sar    ah,1
  41eb61:	dec    ecx
  41eb62:	in     al,dx
  41eb63:	push   ebp
  41eb64:	mov    ah,0x57
  41eb66:	mov    bh,0x36
  41eb68:	mov    bl,0xef
  41eb6a:	add    BYTE PTR [ebp-0x7c1b90ac],al
  41eb70:	popf   
  41eb71:	dec    eax
  41eb72:	in     eax,dx
  41eb73:	inc    esp
  41eb74:	push   edx
  41eb75:	xchg   ebx,eax
  41eb76:	dec    ecx
  41eb77:	nop
  41eb78:	dec    ebx
  41eb79:	call   0x2a0c:0xef4baf47
  41eb80:	adc    al,BYTE PTR [eax]
  41eb82:	mov    ebx,0x7d7539cf
  41eb87:	idiv   edi
  41eb89:	iret   
  41eb8a:	std    
  41eb8b:	mov    ecx,DWORD PTR [esi+0x6ef6350f]
  41eb91:	cmp    eax,0x161eb
  41eb96:	daa    
  41eb97:	add    eax,DWORD PTR [eax]
  41eb99:	add    al,dh
  41eb9b:	int    0x8e
  41eb9d:	bswap  ebp
  41eb9f:	stos   BYTE PTR es:[edi],al
  41eba0:	mov    cl,0xe3
  41eba2:	das    
  41eba3:	dec    edi
  41eba4:	aas    
  41eba5:	je     0x41ec19
  41eba7:	inc    esi
  41eba8:	push   0x4b
  41ebaa:	xchg   ecx,eax
  41ebab:	loop   0x41ebb8
  41ebad:	les    ecx,FWORD PTR [edx-0x13]
  41ebb0:	iret   
  41ebb1:	lds    esi,FWORD PTR [edx-0x3f41c9ea]
  41ebb7:	xchg   DWORD PTR [ebx-0x79372559],ebx
  41ebbd:	xchg   esi,eax
  41ebbe:	lahf   
  41ebbf:	call   0xacaee71b
  41ebc4:	fstp   TBYTE PTR [ecx+ebp*1-0x54ee9dae]
  41ebcb:	and    eax,0xb5a858f2
  41ebd0:	cmp    eax,ecx
  41ebd2:	pushf  
  41ebd3:	xor    al,0xdc
  41ebd5:	aas    
  41ebd6:	mov    ds:0x1ed92f62,eax
  41ebdb:	and    BYTE PTR [esi-0x14d85b19],dl
  41ebe1:	ja     0x41ec5c
  41ebe3:	es jle 0x41ebf4
  41ebe6:	xor    ecx,ebx
  41ebe8:	(bad)  
  41ebe9:	loope  0x41eb70
  41ebeb:	enter  0x3a9e,0x18
  41ebef:	jno    0x41ebb9
  41ebf1:	push   ebp
  41ebf2:	enter  0x8eb2,0xcb
  41ebf6:	jecxz  0x41ebd5
  41ebf8:	sbb    al,0x2b
  41ebfa:	out    0x36,al
  41ebfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebfd:	ror    DWORD PTR [ecx],1
  41ebff:	mov    edi,ebp
  41ec01:	rcr    BYTE PTR [eax],1
  41ec03:	les    edx,FWORD PTR [eax-0x15]
  41ec06:	add    edx,DWORD PTR [esi+0x69]
  41ec09:	jne    0x41ebac
  41ec0b:	pop    esp
  41ec0c:	sub    eax,0xc27cb57d
  41ec11:	jae    0x41ec82
  41ec13:	add    eax,DWORD PTR [eax]
  41ec15:	cmp    ecx,edx
  41ec17:	mov    cl,0xd
  41ec19:	out    dx,eax
  41ec1a:	jge    0x41ec8d
  41ec1c:	push   edi
  41ec1d:	imul   eax,DWORD PTR ds:0x42893fa0,0x4f1efcd
  41ec27:	pop    eax
  41ec28:	add    al,0xaf
  41ec2a:	addr16 in al,dx
  41ec2c:	jmp    0x893f5997
  41ec31:	mov    edx,0x7c2c59f
  41ec36:	push   edx
  41ec37:	or     DWORD PTR [edi+ebx*1],ecx
  41ec3a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec3c:	js     0x41ebf1
  41ec3e:	(bad)  
  41ec3f:	sub    ecx,esi
  41ec41:	mov    dl,0x2a
  41ec43:	idiv   al
  41ec45:	push   cs
  41ec46:	cmp    DWORD PTR [eax+esi*8+0x2],esp
  41ec4a:	jge    0x41ecb9
  41ec4c:	das    
  41ec4d:	inc    DWORD PTR [edi-0x7a]
  41ec50:	loopne 0x41ecb7
  41ec52:	cmc    
  41ec53:	adc    BYTE PTR [edi],dh
  41ec55:	push   eax
  41ec56:	pop    edx
  41ec57:	mov    ebp,0xe253cc61
  41ec5c:	enter  0x342,0xbb
  41ec60:	pop    esi
  41ec61:	mov    ds:0x392b61e4,eax
  41ec66:	dec    ebp
  41ec67:	ret    0x4f2
  41ec6a:	push   ss
  41ec6b:	pushf  
  41ec6c:	(bad)
  41ec70:	mov    ah,BYTE PTR [ebx-0x3b17c6b6]
  41ec76:	pop    esp
  41ec77:	sub    esp,esp
  41ec79:	add    ebp,DWORD PTR [eax]
  41ec7b:	arpl   WORD PTR [edx+0x58],bx
  41ec7e:	adc    ebx,DWORD PTR fs:[ecx+0x4b1e8f38]
  41ec85:	scas   al,BYTE PTR es:[edi]
  41ec86:	jl     0x41ecbb
  41ec88:	adc    eax,0x48e928bd
  41ec8d:	in     al,dx
  41ec8e:	pop    esp
  41ec8f:	sti    
  41ec90:	adc    bl,ch
  41ec92:	sbb    DWORD PTR [ecx-0x3f],0xfffffffd
  41ec96:	and    DWORD PTR [esi-0x25f96d76],ecx
  41ec9c:	lods   eax,DWORD PTR ds:[esi]
  41ec9d:	fild   QWORD PTR [esi-0x7fd36a31]
  41eca3:	add    bl,ah
  41eca5:	inc    edi
  41eca6:	or     ebx,ebx
  41eca8:	mov    dl,0x29
  41ecaa:	hlt    
  41ecab:	clc    
  41ecac:	add    bl,bh
  41ecae:	jno    0x41ec72
  41ecb0:	xchg   BYTE PTR ds:0x5d92d8df,ch
  41ecb6:	add    cl,BYTE PTR [edx+0x43]
  41ecb9:	bound  ebp,QWORD PTR [edx]
  41ecbb:	daa    
  41ecbc:	mov    al,ds:0x6ad66359
  41ecc1:	cmp    esi,DWORD PTR ds:[ebp-0x26]
  41ecc5:	dec    eax
  41ecc6:	in     eax,dx
  41ecc7:	aas    
  41ecc8:	sbb    cl,dh
  41ecca:	mov    ?,WORD PTR [esi+0x4b]
  41eccd:	sahf   
  41ecce:	daa    
  41eccf:	adc    ecx,DWORD PTR cs:[ecx]
  41ecd2:	or     bh,ch
  41ecd4:	shl    dh,0x8d
  41ecd7:	sub    eax,esi
  41ecd9:	sbb    BYTE PTR [ebp+0x77],ah
  41ecdc:	inc    ebx
  41ecdd:	hlt    
  41ecde:	lock arpl WORD PTR [esi+0x3e37de37],bp
  41ece5:	pop    esi
  41ece6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ece7:	out    0xc,eax
  41ece9:	sar    bh,0x28
  41ecec:	and    eax,0x30f4d89e
  41ecf1:	mov    eax,0x812cc4b
  41ecf6:	test   al,0x47
  41ecf8:	mov    al,ds:0xc5d8da6b
  41ecfd:	xchg   edi,eax
  41ecfe:	cmp    ch,al
  41ed00:	add    ebx,DWORD PTR [eax+0x7e]
  41ed03:	inc    ebp
  41ed04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed05:	in     al,dx
  41ed06:	jno    0x41ed14
  41ed08:	or     bh,BYTE PTR [ebp+eiz*2+0x6834b531]
  41ed0f:	dec    eax
  41ed10:	sbb    eax,0xb07f4d5d
  41ed15:	mov    bh,0x4b
  41ed17:	iret   
  41ed18:	jecxz  0x41ecdf
  41ed1a:	sbb    eax,0x145606c6
  41ed1f:	scas   al,BYTE PTR es:[edi]
  41ed20:	jb     0x41ed66
  41ed22:	sub    BYTE PTR [edx+ebx*1-0x5869d76a],bl
  41ed29:	mov    esi,0x9b34c724
  41ed2e:	cli    
  41ed2f:	cmp    ebp,DWORD PTR [ecx-0x13669054]
  41ed35:	(bad)  
  41ed36:	push   0x2ab07424
  41ed3b:	loopne 0x41ed54
  41ed3d:	mov    al,ds:0x6373426
  41ed42:	push   esp
  41ed43:	pop    eax
  41ed44:	(bad)  
  41ed45:	(bad)  
  41ed46:	stc    
  41ed47:	or     dl,cl
  41ed49:	ins    DWORD PTR es:[edi],dx
  41ed4a:	jbe    0x41ecfd
  41ed4c:	ret    
  41ed4d:	push   edx
  41ed4e:	gs or  dh,cl
  41ed51:	outs   dx,DWORD PTR ds:[esi]
  41ed52:	mov    dl,BYTE PTR [esi]
  41ed54:	cmc    
  41ed55:	ss fucomp st(3)
  41ed58:	push   edi
  41ed59:	lods   al,BYTE PTR ds:[esi]
  41ed5a:	fadd   DWORD PTR [edi+0x50]
  41ed5d:	aam    0xf7
  41ed5f:	xor    al,0xf6
  41ed61:	or     al,0x1f
  41ed63:	xchg   esi,eax
  41ed64:	xchg   DWORD PTR [eax],eax
  41ed66:	icebp  
  41ed67:	mov    ch,0xd9
  41ed69:	jmp    0x41eda7
  41ed6b:	pop    es
  41ed6c:	add    BYTE PTR [ebx+edi*2-0x5d189d14],0xf5
  41ed74:	test   DWORD PTR [esi-0x4c05c00f],edx
  41ed7a:	ins    DWORD PTR es:[edi],dx
  41ed7b:	mov    ah,0x6e
  41ed7d:	loope  0x41eda5
  41ed7f:	imul   esi,DWORD PTR [esi],0x90ff9747
  41ed85:	xchg   esp,eax
  41ed86:	jae    0x41edd6
  41ed88:	sub    DWORD PTR [ebx+0x209ef39b],edi
  41ed8e:	sbb    bh,BYTE PTR [edx]
  41ed90:	and    cl,bh
  41ed92:	cmp    BYTE PTR [ebx+0x2b2d94e4],ah
  41ed98:	stc    
  41ed99:	inc    eax
  41ed9a:	test   eax,0x493dacd
  41ed9f:	sub    eax,0x41458a90
  41eda4:	(bad)  
  41eda6:	mov    dl,0x73
  41eda8:	adc    DWORD PTR [esi+0x13],esi
  41edab:	sbb    DWORD PTR [ebp+0x5b],ebx
  41edae:	dec    ebx
  41edaf:	retf   
  41edb0:	popf   
  41edb1:	adc    ch,BYTE PTR [edx]
  41edb3:	mov    eax,0x3f11de46
  41edb8:	xchg   esi,eax
  41edb9:	jg     0x41ee0e
  41edbb:	int    0xcc
  41edbd:	dec    ecx
  41edbe:	sub    cl,BYTE PTR [esi+0x8663afe]
  41edc4:	(bad)  
  41edc5:	daa    
  41edc6:	dec    ebx
  41edc7:	sub    dh,0x4c
  41edca:	add    ecx,DWORD PTR [eax+esi*2]
  41edcd:	inc    esp
  41edce:	xchg   esi,eax
  41edcf:	pop    ebx
  41edd0:	cmp    bh,BYTE PTR [edx-0x5e]
  41edd3:	pop    esp
  41edd4:	leave  
  41edd5:	shl    eax,cl
  41edd7:	jg     0x41ee41
  41edd9:	test   ebp,eax
  41eddb:	shr    DWORD PTR [ecx],cl
  41eddd:	clc    
  41edde:	add    ebp,DWORD PTR [edx+0x6d]
  41ede1:	div    DWORD PTR [edx]
  41ede3:	push   ebx
  41ede4:	push   ecx
  41ede5:	(bad)  
  41ede7:	push   DWORD PTR [eax-0x75]
  41edea:	lods   al,BYTE PTR ds:[esi]
  41edeb:	cmp    dl,0xbc
  41edee:	mov    al,ds:0xf467bc7e
  41edf3:	out    0x91,al
  41edf5:	pop    esi
  41edf6:	dec    ecx
  41edf7:	leave  
  41edf8:	outs   dx,BYTE PTR ds:[esi]
  41edf9:	daa    
  41edfa:	dec    edx
  41edfb:	pop    es
  41edfc:	in     al,dx
  41edfd:	aas    
  41edfe:	adc    bh,al
  41ee00:	xchg   ecx,ecx
  41ee02:	push   edx
  41ee03:	dec    ecx
  41ee04:	fdiv   DWORD PTR [ebp-0x46265b91]
  41ee0a:	pop    esi
  41ee0b:	mov    edx,0x765a04bc
  41ee10:	dec    eax
  41ee11:	mov    bh,0x2a
  41ee13:	loope  0x41ee11
  41ee15:	pop    ebx
  41ee16:	xchg   edi,eax
  41ee17:	loop   0x41ee19
  41ee19:	xlat   BYTE PTR ds:[ebx]
  41ee1a:	fisub  DWORD PTR [edi]
  41ee1c:	mov    ch,0x54
  41ee1e:	into   
  41ee1f:	adc    ebx,esi
  41ee21:	push   es
  41ee22:	dec    BYTE PTR [edi+0x294da383]
  41ee28:	jp     0x41eddb
  41ee2a:	ret    0xeaa3
  41ee2d:	(bad)  
  41ee2e:	xlat   BYTE PTR ds:[ebx]
  41ee2f:	mov    al,0x50
  41ee31:	loop   0x41ede9
  41ee33:	fs jnp 0x41ee8e
  41ee36:	fiadd  DWORD PTR [ecx+eiz*4]
  41ee39:	out    dx,al
  41ee3a:	push   ebx
  41ee3b:	scas   al,BYTE PTR es:[edi]
  41ee3c:	fwait
  41ee3d:	add    BYTE PTR [esi-0x7e],bh
  41ee40:	cmovge eax,DWORD PTR ds:0x4ed410f9
  41ee47:	rep ins DWORD PTR es:[edi],dx
  41ee49:	jbe    0x41ee7d
  41ee4b:	adc    eax,0x728a9da2
  41ee50:	pusha  
  41ee51:	pushf  
  41ee52:	nop
  41ee53:	push   edi
  41ee54:	push   esi
  41ee55:	jne    0x41ee56
  41ee57:	pop    esp
  41ee58:	add    BYTE PTR [ebx-0x10],bh
  41ee5b:	das    
  41ee5c:	outs   dx,DWORD PTR ds:[esi]
  41ee5d:	stos   BYTE PTR es:[edi],al
  41ee5e:	fbld   TBYTE PTR [ebx+esi*4+0x46]
  41ee62:	cmp    al,0x75
  41ee65:	or     esp,DWORD PTR [ecx-0x79]
  41ee68:	xchg   esp,eax
  41ee69:	out    0xe0,eax
  41ee6b:	enter  0x3688,0xed
  41ee6f:	mov    cl,0x51
  41ee71:	cmp    esi,DWORD PTR [edi]
  41ee73:	fwait
  41ee74:	ds and eax,0xff4df359
  41ee7a:	icebp  
  41ee7b:	jmp    0x68e2fde9
  41ee80:	loope  0x41eeeb
  41ee82:	pop    esi
  41ee83:	xor    dl,ch
  41ee85:	xchg   ebx,eax
  41ee86:	(bad)  
  41ee87:	xchg   ebp,eax
  41ee88:	xchg   BYTE PTR [ecx+ecx*1+0x7d],bh
  41ee8c:	push   edi
  41ee8d:	mov    eax,0x3ce28334
  41ee92:	mov    DWORD PTR [edx-0x6],esi
  41ee95:	rol    DWORD PTR [ebx-0x147e4732],1
  41ee9b:	std    
  41ee9c:	push   0xadc00d5b
  41eea1:	xlat   BYTE PTR ds:[ebx]
  41eea2:	out    0x6c,al
  41eea4:	adc    dh,BYTE PTR [ecx]
  41eea6:	jbe    0x41eeca
  41eea8:	fiadd  WORD PTR [esi+esi*2+0x29a4524d]
  41eeaf:	and    dh,BYTE PTR [ecx]
  41eeb1:	daa    
  41eeb2:	mov    esp,0x8b8afd49
  41eeb7:	sub    edx,DWORD PTR [eax]
  41eeb9:	cmp    DWORD PTR [edi+0x6d1b3cfc],0xffffffaa
  41eec0:	lahf   
  41eec1:	add    dh,ch
  41eec3:	ret    0x2d9d
  41eec6:	mov    ebp,0x3fc3fe7f
  41eecb:	out    dx,eax
  41eecc:	mov    edi,0xed9e337
  41eed1:	fist   WORD PTR [edx]
  41eed3:	add    DWORD PTR gs:[eax],eax
  41eed6:	daa    
  41eed7:	add    eax,DWORD PTR [eax]
  41eed9:	add    BYTE PTR [ecx-0x2c1d4a49],bl
  41eedf:	fmul   st(0),st
  41eee1:	lods   al,BYTE PTR ds:[esi]
  41eee2:	icebp  
  41eee3:	add    ch,BYTE PTR [esi-0x69]
  41eee6:	pop    esi
  41eee7:	js     0x41eedd
  41eee9:	xchg   DWORD PTR [ebx+0x5e],ebp
  41eeec:	clc    
  41eeed:	imul   ecx,ecx,0xffffffe9
  41eef0:	inc    ebx
  41eef1:	test   BYTE PTR [ecx],al
  41eef3:	mov    ch,0x20
  41eef5:	jl     0x41eef1
  41eef7:	or     al,0xfe
  41eef9:	push   cs
  41eefa:	cmp    DWORD PTR [ecx+0x480f1035],ecx
  41ef00:	or     eax,0x2d3cf846
  41ef05:	xor    DWORD PTR [edx-0x6d],0x18
  41ef09:	outs   dx,BYTE PTR ds:[esi]
  41ef0a:	fnsave [ecx-0x15]
  41ef0d:	fwait
  41ef0e:	icebp  
  41ef0f:	aas    
  41ef10:	cmp    DWORD PTR [edx-0x1e],0xbe4a81ad
  41ef17:	sbb    ch,BYTE PTR [ebx+0x17]
  41ef1a:	int3   
  41ef1b:	stos   BYTE PTR es:[edi],al
  41ef1c:	call   0xeab6:0x2cdc7a0
  41ef23:	test   DWORD PTR [ebp-0x35],edx
  41ef26:	fdiv   DWORD PTR [esi]
  41ef28:	ret    
  41ef29:	mov    bl,0xd1
  41ef2b:	mov    dh,0x76
  41ef2d:	imul   ebx,DWORD PTR [edx+0x4b],0xffffffe1
  41ef31:	pop    ebx
  41ef32:	sti    
  41ef33:	fdiv   QWORD PTR [ecx+0x55]
  41ef36:	dec    edx
  41ef37:	cwde   
  41ef38:	out    0xd2,eax
  41ef3a:	(bad)  
  41ef3b:	or     eax,0xa5734f57
  41ef40:	adc    al,0xbd
  41ef42:	dec    ebp
  41ef43:	mov    eax,ebp
  41ef45:	mov    ?,WORD PTR [edx+edi*2+0x2a]
  41ef49:	icebp  
  41ef4a:	xchg   esi,eax
  41ef4b:	fmul   QWORD PTR [edx]
  41ef4d:	cmp    DWORD PTR [ebx-0x3d],ebp
  41ef50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef51:	mov    BYTE PTR [ebx+0x1e66bf4a],dh
  41ef57:	and    eax,ebp
  41ef59:	mov    ebx,0xde72e50
  41ef5e:	call   DWORD PTR [esi]
  41ef60:	add    bl,BYTE PTR [eax+eax*1]
  41ef63:	adc    DWORD PTR [ebp+0x55ca2f6],0x7
  41ef6a:	icebp  
  41ef6b:	mov    ds:0x983882ec,eax
  41ef70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef71:	push   ss
  41ef72:	or     DWORD PTR [ecx+0x7a0c91f9],ebp
  41ef78:	ja     0x41ef18
  41ef7a:	jmp    0x8f5:0xf0ac1681
  41ef81:	cld    
  41ef82:	std    
  41ef83:	pop    esi
  41ef84:	dec    edi
  41ef85:	mov    ds:0xc454fc01,al
  41ef8a:	xchg   edx,eax
  41ef8b:	mov    ds:0x6a03931c,eax
  41ef90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef91:	sar    BYTE PTR [edx+0x68],1
  41ef94:	dec    ecx
  41ef95:	test   eax,0x42df7ac7
  41ef9a:	hlt    
  41ef9b:	pop    ecx
  41ef9c:	ret    
  41ef9d:	jl     0x41efe6
  41ef9f:	sbb    DWORD PTR [edx],esi
  41efa1:	in     eax,0xa3
  41efa3:	rol    BYTE PTR [ebp+0x738a5318],0x6e
  41efaa:	adc    eax,0x90fd49c
  41efaf:	jl     0x41f01e
  41efb1:	adc    DWORD PTR [edx-0xf54aabb],ebx
  41efb7:	xor    eax,0xb6035ddd
  41efbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efbd:	or     bh,BYTE PTR [edi]
  41efbf:	(bad)  
  41efc1:	inc    edi
  41efc2:	xchg   bl,ch
  41efc4:	cmc    
  41efc5:	or     BYTE PTR [ebx-0x91ea2a],ah
  41efcb:	loope  0x41eff8
  41efcd:	retf   
  41efce:	mov    al,0xfc
  41efd0:	cmp    esi,esp
  41efd2:	mov    cl,0x92
  41efd4:	push   ecx
  41efd5:	fisub  DWORD PTR [edi-0x63]
  41efd8:	add    al,0x1c
  41efda:	xchg   edi,eax
  41efdb:	or     esi,DWORD PTR [eax-0x4cebc256]
  41efe1:	ja     0x41f030
  41efe3:	pop    ss
  41efe4:	sub    DWORD PTR [eax+esi*2+0x31],edi
  41efe8:	lock add DWORD PTR [ecx],esp
  41efeb:	sbb    BYTE PTR fs:[ebx],0xf1
  41efef:	inc    ebx
  41eff0:	cld    
  41eff1:	rol    esi,0x6
  41eff4:	ud1    ebp,DWORD PTR [esi]
  41eff7:	xlat   BYTE PTR ds:[ebx]
  41eff8:	add    DWORD PTR [esi-0x63a1cb0f],edi
  41effe:	cli    
  41efff:	dec    esi
  41f000:	enter  0x6aac,0xdd
  41f004:	hlt    
  41f005:	sub    ecx,DWORD PTR ds:0xb624380
  41f00b:	add    DWORD PTR [ebp*8+0x1d64fc89],esp
  41f012:	jg     0x41ef9b
  41f014:	or     eax,0xa5caeee2
  41f019:	das    
  41f01a:	pop    ebp
  41f01b:	sub    DWORD PTR [eax],esp
  41f01d:	and    bl,BYTE PTR [esi+0x26]
  41f020:	mov    ebx,0xd9ddb2e8
  41f025:	cwde   
  41f026:	mov    ebp,0x8285fd2a
  41f02b:	add    ebx,DWORD PTR [ecx+0x3a59e9b7]
  41f031:	push   cs
  41f032:	pop    ecx
  41f033:	test   al,dh
  41f035:	jo     0x41eff1
  41f037:	mov    cl,0xf5
  41f039:	les    eax,FWORD PTR [ebx]
  41f03b:	push   eax
  41f03c:	add    dl,bl
  41f03e:	dec    edi
  41f03f:	pusha  
  41f040:	repnz out dx,al
  41f042:	enter  0xfbc9,0x80
  41f046:	cmp    al,0x25
  41f048:	xor    DWORD PTR [ebp+edx*2-0x3],ecx
  41f04c:	pop    ecx
  41f04d:	xor    dl,BYTE PTR [ebx+edx*2+0x5d]
  41f051:	pop    eax
  41f052:	jmp    FWORD PTR [eax+0xa]
  41f055:	cmc    
  41f056:	push   esp
  41f057:	mov    ds:0x5ba663cf,al
  41f05c:	in     al,0x94
  41f05e:	pop    ebp
  41f05f:	sub    ebx,DWORD PTR [ebx+0xd32208c]
  41f065:	test   DWORD PTR [edi-0x4f4d7457],edi
  41f06b:	ret    
  41f06c:	jmp    0x41f028
  41f06e:	jo     0x41f05e
  41f070:	sub    al,0xe0
  41f072:	adc    ah,BYTE PTR [ecx-0x5a]
  41f075:	pop    es
  41f076:	xor    bh,ah
  41f078:	shl    BYTE PTR ds:0x90840eb2,1
  41f07e:	inc    esp
  41f07f:	mov    edx,0xb00464be
  41f084:	popa   
  41f085:	cmp    edx,DWORD PTR [edi]
  41f087:	ss (bad) 
  41f089:	std    
  41f08a:	inc    eax
  41f08b:	pop    es
  41f08c:	int3   
  41f08d:	cwde   
  41f08e:	ret    0xd27a
  41f091:	mov    ah,0xc0
  41f093:	xchg   ebx,eax
  41f094:	int3   
  41f095:	inc    esp
  41f096:	jg     0x41f042
  41f098:	outs   dx,BYTE PTR ds:[esi]
  41f099:	add    al,ah
  41f09b:	add    ah,dl
  41f09d:	mov    al,ds:0xffb55791
  41f0a2:	jg     0x41f112
  41f0a4:	sub    eax,0xdc511b6c
  41f0a9:	out    dx,eax
  41f0aa:	xor    edx,DWORD PTR ds:0x36dd4337
  41f0b0:	fs pop esi
  41f0b2:	cld    
  41f0b3:	fisubr DWORD PTR [esi]
  41f0b5:	test   ecx,ecx
  41f0b7:	stc    
  41f0b8:	pop    edx
  41f0b9:	retf   
  41f0ba:	jnp    0x41f0a7
  41f0bc:	in     al,dx
  41f0bd:	xor    al,0xb8
  41f0bf:	xor    BYTE PTR es:[esi],bh
  41f0c2:	and    BYTE PTR [esi-0x63],ch
  41f0c5:	inc    ebx
  41f0c6:	push   ecx
  41f0c7:	or     al,0x6b
  41f0c9:	sbb    esi,DWORD PTR [ebp+0x1e]
  41f0cc:	fmulp  st(6),st
  41f0ce:	push   es
  41f0cf:	ret    0xc77
  41f0d2:	pop    eax
  41f0d3:	or     esp,DWORD PTR [edi]
  41f0d5:	jne    0x41f14b
  41f0d7:	push   ebx
  41f0d8:	xchg   DWORD PTR [esi-0x72],esi
  41f0db:	jg     0x41f146
  41f0dd:	and    dh,BYTE PTR [edi]
  41f0df:	sbb    al,0xc2
  41f0e1:	mov    BYTE PTR [edi-0x6c],ch
  41f0e4:	mov    eax,ds:0x66cfb3a1
  41f0e9:	jne    0x41f15f
  41f0eb:	push   0x46
  41f0ed:	pop    eax
  41f0ee:	push   edx
  41f0ef:	jnp    0x41f140
  41f0f1:	aam    0xa9
  41f0f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0f4:	test   DWORD PTR [ebx-0x39],0xa6201a9f
  41f0fb:	cdq    
  41f0fc:	out    dx,eax
  41f0fd:	in     eax,dx
  41f0fe:	push   esi
  41f0ff:	cmp    al,0x8f
  41f101:	(bad)  
  41f102:	sar    BYTE PTR [edi+0x79],1
  41f105:	dec    ecx
  41f106:	stc    
  41f107:	pusha  
  41f108:	cmp    BYTE PTR [ebx],al
  41f10a:	pop    ebx
  41f10b:	int    0x3d
  41f10d:	mov    esp,0xc0bd0a88
  41f112:	xor    al,0x64
  41f114:	loope  0x41f0b1
  41f116:	pusha  
  41f117:	push   edx
  41f118:	js     0x41f0c8
  41f11a:	je     0x41f12a
  41f11c:	inc    esp
  41f11d:	inc    esi
  41f11e:	(bad)  
  41f11f:	enter  0x43b4,0x4f
  41f123:	xchg   ebp,eax
  41f124:	push   cs
  41f125:	lods   al,BYTE PTR ds:[esi]
  41f126:	outs   dx,DWORD PTR ds:[esi]
  41f127:	out    0xd7,eax
  41f129:	jns    0x41f19a
  41f12b:	mov    eax,ds:0xe4449dfe
  41f130:	adc    ah,bl
  41f132:	fs jns 0x41f108
  41f135:	jle    0x41f19c
  41f137:	mov    bl,dh
  41f139:	push   ds
  41f13a:	bound  esp,QWORD PTR [ebx]
  41f13c:	xchg   ebx,eax
  41f13d:	mov    ebp,0x2cb7743c
  41f142:	sub    eax,0x701ba7ce
  41f147:	ret    
  41f148:	add    eax,DWORD PTR [eax]
  41f14a:	xor    eax,0x8e1e265b
  41f14f:	jne    0x41f162
  41f151:	cwde   
  41f152:	adc    BYTE PTR [ebp-0x66],al
  41f155:	ins    DWORD PTR es:[edi],dx
  41f156:	nop
  41f157:	mov    cl,0x48
  41f159:	std    
  41f15a:	push   esi
  41f15b:	retf   0x89c2
  41f15e:	and    dh,BYTE PTR [edi]
  41f160:	push   edi
  41f161:	nop
  41f162:	ret    
  41f163:	jbe    0x41f189
  41f165:	mov    bl,0xcd
  41f167:	mov    ds:0x5cb543d,al
  41f16c:	sti    
  41f16d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f16e:	push   edi
  41f16f:	jno    0x41f137
  41f171:	xchg   esi,eax
  41f172:	jmp    0xbcb3:0xfb261451
  41f179:	gs enter 0xb5c6,0x5b
  41f17e:	mov    ch,0x48
  41f180:	test   DWORD PTR [ecx-0x585a33bf],0xf4989ca2
  41f18a:	cli    
  41f18b:	jb     0x41f1a9
  41f18d:	and    BYTE PTR [ebx-0x29cb328c],al
  41f193:	add    BYTE PTR [edi+edi*8],bl
  41f196:	push   esp
  41f197:	adc    ah,BYTE PTR ds:0xae2dea09
  41f19d:	cmp    DWORD PTR [edi-0x25],0x79c393fc
  41f1a4:	imul   edi,DWORD PTR [ecx],0xffffffba
  41f1a7:	(bad)  
  41f1a8:	jmp    0xe68f:0x6ff0015b
  41f1af:	or     al,0x71
  41f1b1:	adc    DWORD PTR [esi-0x215a235b],0xd4451cac
  41f1bb:	pop    esp
  41f1bc:	and    DWORD PTR [ebx+edx*1-0x7b],0x47
  41f1c1:	icebp  
  41f1c2:	push   esi
  41f1c3:	mov    esp,0x55d54309
  41f1c8:	xchg   BYTE PTR [ecx+ecx*2+0x76dfc16d],ah
  41f1cf:	(bad)  
  41f1d0:	sub    BYTE PTR [eax+edi*2+0x4d],bh
  41f1d4:	and    al,0xf7
  41f1d6:	pop    esp
  41f1d7:	jmp    0x7c0f:0x3026008
  41f1de:	mov    bl,0x86
  41f1e0:	and    esp,DWORD PTR [ebp+ebp*2-0xa]
  41f1e4:	push   cs
  41f1e5:	pop    esp
  41f1e6:	je     0x41f170
  41f1e8:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41f1ea:	out    0xfd,eax
  41f1ec:	(bad)  
  41f1ed:	stc    
  41f1ee:	out    dx,eax
  41f1ef:	dec    edi
  41f1f0:	out    dx,eax
  41f1f1:	xchg   WORD PTR [edi-0x4c8c8a80],sp
  41f1f8:	fidiv  DWORD PTR [edi]
  41f1fa:	retf   
  41f1fb:	add    ebx,DWORD PTR [edi+0x15]
  41f1fe:	sbb    al,0x82
  41f200:	push   eax
  41f201:	add    BYTE PTR [ebx-0x2a],dl
  41f204:	(bad)  
  41f205:	push   esi
  41f206:	(bad)  
  41f207:	jle    0x41f204
  41f209:	xlat   BYTE PTR ds:[ebx]
  41f20a:	outs   dx,DWORD PTR ds:[esi]
  41f20b:	mov    ah,0x77
  41f20d:	call   0x6839:0x8e8ecd4c
  41f214:	add    DWORD PTR [eax],eax
  41f216:	daa    
  41f217:	add    eax,DWORD PTR [eax]
  41f219:	add    bh,al
  41f21b:	mov    ebp,0xf5f535c3
  41f220:	mov    dh,0xf9
  41f222:	retf   0x19f8
  41f225:	mov    dh,0xa5
  41f227:	pop    ecx
  41f228:	(bad)  
  41f229:	iret   
  41f22a:	sub    DWORD PTR [edi],esp
  41f22c:	in     al,dx
  41f22d:	cdq    
  41f22e:	pop    ss
  41f22f:	scas   eax,DWORD PTR es:[edi]
  41f230:	lods   eax,DWORD PTR ds:[esi]
  41f231:	mov    al,0xb3
  41f233:	mov    esp,0x4e71b4a8
  41f238:	jne    0x41f24e
  41f23a:	out    dx,eax
  41f23b:	je     0x41f1ee
  41f23d:	jae    0x41f296
  41f23f:	lahf   
  41f240:	sub    BYTE PTR [edx-0x5515d306],bh
  41f246:	test   DWORD PTR [ecx-0x33c85da2],ecx
  41f24c:	mov    eax,0x687e8ece
  41f251:	out    dx,al
  41f252:	int3   
  41f253:	mov    eax,0xe23d603a
  41f258:	pop    ecx
  41f259:	nop
  41f25a:	cdq    
  41f25b:	push   0xdcf6cc01
  41f260:	xchg   esp,eax
  41f261:	lahf   
  41f262:	lahf   
  41f263:	mov    ds:0x5268474f,al
  41f268:	push   0xf613aa60
  41f26d:	push   0x43
  41f26f:	jl     0x41f244
  41f271:	mov    dh,0x6f
  41f273:	xor    al,0x1a
  41f275:	cmp    BYTE PTR [esi+0x55],bh
  41f278:	push   ds
  41f279:	inc    ebp
  41f27a:	mov    ah,0x70
  41f27c:	inc    ebx
  41f27d:	sub    cl,BYTE PTR [edx]
  41f27f:	lock jp 0x41f2e3
  41f282:	pop    eax
  41f283:	sub    DWORD PTR ds:0x582843ef,ebx
  41f289:	mov    al,0x95
  41f28b:	in     eax,0xd2
  41f28d:	and    eax,0xb02437b5
  41f292:	int    0x4c
  41f294:	mov    esi,0xb2e9ec09
  41f299:	nop
  41f29a:	and    al,0xcd
  41f29c:	fdiv   DWORD PTR [esi]
  41f29e:	adc    BYTE PTR [edi-0x59],ch
  41f2a1:	in     al,dx
  41f2a2:	cld    
  41f2a3:	jp     0x41f2aa
  41f2a5:	sbb    ebx,DWORD PTR ds:0xcdf52b8f
  41f2ab:	das    
  41f2ac:	addr16 adc al,0xb7
  41f2af:	mov    esi,esi
  41f2b1:	out    0x4f,al
  41f2b3:	jmp    0x3e0011b8
  41f2b8:	cld    
  41f2b9:	popf   
  41f2ba:	pop    ds
  41f2bb:	xor    esi,DWORD PTR [ebp-0x5aa73a39]
  41f2c1:	lock inc ecx
  41f2c3:	mov    cl,0xee
  41f2c5:	add    al,BYTE PTR [ecx]
  41f2c7:	jae    0x41f323
  41f2c9:	add    al,0x75
  41f2cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2cc:	gs into 
  41f2ce:	jae    0xb834130d
  41f2d4:	add    al,BYTE PTR [edi]
  41f2d6:	or     al,0x96
  41f2d8:	push   es
  41f2d9:	adc    ah,BYTE PTR [edx]
  41f2db:	push   ds
  41f2dc:	sub    cl,cl
  41f2de:	push   ds
  41f2df:	mov    dl,0xcd
  41f2e1:	stc    
  41f2e2:	inc    edi
  41f2e3:	and    cl,BYTE PTR [edx-0x56fae42c]
  41f2e9:	xor    al,0x34
  41f2eb:	mov    esp,DWORD PTR [esi]
  41f2ed:	js     0x41f346
  41f2ef:	fsub   DWORD PTR [edx+0xfec8702]
  41f2f5:	and    edx,DWORD PTR [eax-0x7f]
  41f2f8:	das    
  41f2f9:	sbb    esi,DWORD PTR ds:0x5f582b44
  41f2ff:	or     al,0x6b
  41f301:	or     eax,0xee42b427
  41f306:	pop    es
  41f307:	das    
  41f308:	ss jae 0x41f33a
  41f30b:	sub    ebp,DWORD PTR [ebx]
  41f30d:	daa    
  41f30e:	xchg   esp,eax
  41f30f:	xchg   ah,cl
  41f311:	and    ecx,DWORD PTR [edx+ecx*1]
  41f314:	jp     0x41f33e
  41f316:	cmp    bh,al
  41f318:	test   dh,ah
  41f31a:	inc    ecx
  41f31b:	aaa    
  41f31c:	cli    
  41f31d:	outs   dx,BYTE PTR ds:[esi]
  41f31e:	aad    0x49
  41f320:	stc    
  41f321:	loope  0x41f327
  41f323:	add    eax,0x9b3dfa4e
  41f328:	or     edi,DWORD PTR [ebx]
  41f32a:	aad    0x39
  41f32c:	loope  0x41f2b8
  41f32e:	out    0xce,al
  41f330:	mov    cl,0x5f
  41f332:	push   cs
  41f333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f334:	dec    ecx
  41f335:	sti    
  41f336:	jae    0x41f35f
  41f338:	or     cl,BYTE PTR [ebp-0x61ee6363]
  41f33e:	scas   eax,DWORD PTR es:[edi]
  41f33f:	test   eax,0x7104bb87
  41f344:	mov    ecx,ebx
  41f346:	es leave 
  41f348:	jmp    0x194b9954
  41f34d:	jecxz  0x41f327
  41f34f:	call   0xa1:0xbff2e68
  41f356:	or     eax,0xe4a71feb
  41f35b:	cmp    esi,esi
  41f35d:	dec    edx
  41f35e:	push   esp
  41f35f:	push   ecx
  41f361:	fwait
  41f362:	mov    ebp,0xe4c53f2d
  41f367:	add    al,0x3c
  41f369:	ja     0x41f397
  41f36b:	sub    ah,BYTE PTR [edi-0x51be3601]
  41f371:	xor    DWORD PTR [ebp-0xe],ecx
  41f374:	inc    ecx
  41f375:	bnd jmp 0x41f31e
  41f378:	retf   
  41f379:	or     eax,0xb7e489fc
  41f37e:	daa    
  41f37f:	fwait
  41f380:	adc    DWORD PTR [esi-0x20ecb64f],0x1
  41f387:	xchg   esi,eax
  41f388:	jne    0x41f312
  41f38a:	dec    esi
  41f38b:	cs nop
  41f38d:	or     eax,0x4d857bce
  41f392:	data16 (bad) 
  41f395:	rcr    BYTE PTR [esi],cl
  41f397:	inc    ebp
  41f398:	hlt    
  41f399:	xchg   BYTE PTR [edx],ah
  41f39b:	cmp    ebx,DWORD PTR ds:0xacddb835
  41f3a1:	repz shr edi,1
  41f3a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3a5:	or     DWORD PTR [esi+0x4a9c8bed],esi
  41f3ab:	mov    BYTE PTR [edx+0x15],bl
  41f3ae:	pop    esi
  41f3af:	outs   dx,BYTE PTR ds:[esi]
  41f3b0:	rcr    bh,0xa6
  41f3b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3b4:	sub    ebx,DWORD PTR [edi-0x48]
  41f3b7:	cmp    BYTE PTR [edi-0x2a],dh
  41f3ba:	add    edx,DWORD PTR [ebx]
  41f3bc:	mov    al,ds:0x891d06a3
  41f3c1:	mov    BYTE PTR ds:[eax],0xde
  41f3c5:	inc    ebp
  41f3c6:	lods   al,BYTE PTR ds:[esi]
  41f3c7:	adc    ebx,DWORD PTR [ebp+edi*4+0x17]
  41f3cb:	into   
  41f3cc:	sahf   
  41f3cd:	mov    cs,WORD PTR [ebp+0x4a]
  41f3d0:	fwait
  41f3d1:	jg     0x41f3f7
  41f3d3:	outs   dx,BYTE PTR ss:[esi]
  41f3d5:	jmp    0x263e:0x3ef699d6
  41f3dc:	cmp    cl,ah
  41f3de:	add    DWORD PTR [ecx+0x5fda162a],esi
  41f3e4:	xchg   DWORD PTR [edi-0x5afda246],ebx
  41f3ea:	mov    esi,0x24842f21
  41f3ef:	lea    ebp,[eax+0x71]
  41f3f2:	aam    0x36
  41f3f4:	mov    dh,0x1e
  41f3f6:	jge    0x41f3b9
  41f3f8:	ins    DWORD PTR es:[edi],dx
  41f3f9:	xor    eax,0xf2aa1872
  41f3fe:	push   es
  41f3ff:	retf   
  41f400:	jg     0x41f41e
  41f402:	imul   edi,DWORD PTR [edi],0xb31a2c9a
  41f408:	adc    al,BYTE PTR [ebp+ebx*8+0x21]
  41f40c:	int    0xd9
  41f40e:	lock jle 0x41f3c7
  41f411:	sar    dl,1
  41f413:	test   ebp,0x621ae423
  41f419:	adc    dh,BYTE PTR [ebp-0x479558f4]
  41f41f:	dec    edi
  41f420:	leave  
  41f421:	mov    al,ds:0xfec6378c
  41f426:	mov    ah,0xbe
  41f428:	sar    DWORD PTR [esi],0xc3
  41f42b:	mov    DWORD PTR [edi+0xc],esp
  41f42e:	pop    eax
  41f42f:	mov    bl,0x5f
  41f431:	aad    0xf4
  41f433:	iret   
  41f434:	add    esp,eax
  41f436:	fdiv   st(5),st
  41f438:	pop    esi
  41f439:	pop    es
  41f43a:	mov    ecx,esp
  41f43c:	fsubr  QWORD PTR [ebx+0x13e7100c]
  41f442:	gs das 
  41f444:	or     ah,BYTE PTR [esi-0x70]
  41f447:	xchg   esi,eax
  41f448:	out    0xe9,al
  41f44a:	mov    edx,0x2ecccf6b
  41f44f:	in     eax,0xdc
  41f451:	sub    DWORD PTR [esi-0x48871d2],eax
  41f457:	xlat   BYTE PTR ds:[ebx]
  41f458:	loope  0x41f41e
  41f45a:	int    0xaf
  41f45c:	push   ebx
  41f45d:	nop
  41f45e:	ror    DWORD PTR [ebx-0x42],1
  41f461:	lods   al,BYTE PTR ds:[esi]
  41f462:	pusha  
  41f463:	ret    0xea7c
  41f466:	mov    bl,0x83
  41f468:	jo     0x41f481
  41f46a:	mov    ds:0x7b18863f,al
  41f46f:	sub    bh,al
  41f471:	stc    
  41f472:	xchg   DWORD PTR [ecx-0x11bd03ba],ebp
  41f478:	inc    ebx
  41f479:	mov    edx,0x106f6a89
  41f47e:	sbb    ch,dl
  41f480:	xor    al,0xa8
  41f482:	push   0x87236119
  41f487:	and    DWORD PTR [esi+0x4],edi
  41f48a:	or     al,0x4e
  41f48c:	test   BYTE PTR [esi+0x16],bl
  41f48f:	ror    DWORD PTR [esi],0x45
  41f492:	pop    ecx
  41f493:	stc    
  41f494:	xchg   esi,eax
  41f495:	and    eax,0x5071d99d
  41f49a:	int    0xa2
  41f49c:	arpl   WORD PTR [eax+0x51],dx
  41f49f:	popf   
  41f4a0:	int3   
  41f4a1:	repz fstp st(1)
  41f4a4:	xchg   BYTE PTR [edi+0x14816f29],al
  41f4aa:	fadd   DWORD PTR [edx]
  41f4ac:	sub    bh,BYTE PTR [ecx-0x1d]
  41f4af:	jo     0x41f443
  41f4b1:	fisubr WORD PTR [esp+eax*4-0x33552ef7]
  41f4b8:	inc    esi
  41f4b9:	imul   esi,DWORD PTR [esi-0x39],0x6441d3aa
  41f4c0:	lods   al,BYTE PTR ds:[esi]
  41f4c1:	lods   al,BYTE PTR ds:[esi]
  41f4c2:	mov    al,ds:0x87e901e8
  41f4c7:	pop    esp
  41f4c8:	cs mov ah,0x9b
  41f4cb:	pop    ds
  41f4cc:	sub    al,0x69
  41f4ce:	or     bl,bl
  41f4d0:	fdiv   DWORD PTR [eax]
  41f4d2:	sub    BYTE PTR [edx],ah
  41f4d4:	jbe    0x41f52f
  41f4d6:	(bad)  
  41f4d7:	in     al,dx
  41f4d8:	sbb    DWORD PTR [edx+0x5b],ebx
  41f4db:	pusha  
  41f4dc:	outs   dx,BYTE PTR ds:[esi]
  41f4dd:	sbb    eax,0x6ae4b220
  41f4e2:	adc    DWORD PTR [eax],esi
  41f4e4:	(bad)  
  41f4e6:	jo     0x41f496
  41f4e8:	inc    eax
  41f4e9:	xchg   esp,eax
  41f4ea:	in     eax,dx
  41f4eb:	push   es
  41f4ec:	sbb    dh,bh
  41f4ee:	and    BYTE PTR [esi*2+0x1809e22f],bh
  41f4f5:	fadd   DWORD PTR [ecx+0x42]
  41f4f8:	(bad)  
  41f4f9:	retf   
  41f4fa:	shl    DWORD PTR [ebp-0x4948b529],cl
  41f500:	and    al,0x35
  41f502:	jecxz  0x41f4d1
  41f504:	jb     0x41f4bb
  41f506:	enter  0x30cf,0x0
  41f50a:	(bad)  
  41f50b:	lahf   
  41f50c:	jne    0x41f4bf
  41f50e:	call   FWORD PTR es:[ebx-0x56]
  41f512:	inc    esp
  41f513:	mov    ds:0xdcce7a20,eax
  41f518:	loope  0x41f4c6
  41f51a:	mov    dh,0xcc
  41f51c:	mov    ebx,0xbcce7eea
  41f521:	loop   0x41f4a6
  41f523:	out    0xda,eax
  41f525:	aam    0xcf
  41f527:	cmc    
  41f528:	inc    esi
  41f529:	ja     0x41f56b
  41f52b:	mov    ebp,0x695166da
  41f530:	(bad)  
  41f531:	test   eax,0xd1a413c5
  41f536:	mov    ds:0x4b9b3010,eax
  41f53b:	(bad)  
  41f53c:	imul   esp,ebp,0xfffffff5
  41f53f:	pop    esp
  41f540:	mov    al,BYTE PTR [eax]
  41f542:	adc    DWORD PTR [esi],ecx
  41f544:	or     dl,ch
  41f546:	pop    ds
  41f547:	out    dx,al
  41f548:	repz jmp FWORD PTR [edi-0x2d30fbda]
  41f54f:	cmp    esi,DWORD PTR [edi+ecx*4+0x16b60]
  41f556:	daa    
  41f557:	add    eax,DWORD PTR [eax]
  41f559:	add    al,dh
  41f55b:	adc    al,BYTE PTR [esi+0x4e961218]
  41f561:	iret   
  41f562:	scas   eax,DWORD PTR es:[edi]
  41f563:	push   cs
  41f564:	xchg   BYTE PTR [edx],bl
  41f566:	in     al,0x72
  41f568:	sbb    BYTE PTR [ebp-0x77],dl
  41f56b:	(bad)  
  41f56c:	mov    DWORD PTR [ebx-0x512b31ec],edx
  41f572:	mov    WORD PTR [edi],es
  41f574:	into   
  41f575:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f576:	mov    ds:0x9996c5ed,al
  41f57b:	repz rol DWORD PTR [ecx-0x61],1
  41f57f:	xchg   BYTE PTR [esi],bl
  41f581:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f582:	mov    DWORD PTR [edi+0x3e],edi
  41f585:	test   esp,eax
  41f587:	dec    ebx
  41f588:	sti    
  41f589:	lods   al,BYTE PTR ds:[esi]
  41f58a:	sbb    eax,0x8a96d63a
  41f58f:	push   esp
  41f590:	and    bh,BYTE PTR [edi]
  41f592:	adc    BYTE PTR [eax+0x132aeab4],bh
  41f598:	ror    BYTE PTR [ecx+0x0],0xf6
  41f59c:	add    ch,al
  41f59e:	dec    edx
  41f59f:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41f5a1:	push   ebx
  41f5a3:	dec    edi
  41f5a4:	xchg   esi,eax
  41f5a5:	imul   esi,DWORD PTR [edx],0xffffffac
  41f5a8:	add    BYTE PTR ds:0xc50707da,0xf4
  41f5af:	mov    ds:0x23b483a4,al
  41f5b4:	adc    eax,0xce48889c
  41f5b9:	xor    ebp,ebx
  41f5bb:	mov    bl,0xad
  41f5bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5be:	sbb    edi,ecx
  41f5c0:	jp     0x41f5d8
  41f5c2:	inc    ebp
  41f5c3:	out    dx,al
  41f5c4:	and    bh,BYTE PTR [esi+0x6886ee35]
  41f5ca:	jo     0x41f62f
  41f5cc:	mov    DWORD PTR [ecx-0x703c2a1e],edx
  41f5d2:	dec    ecx
  41f5d3:	sub    al,BYTE PTR [eax+ecx*8-0x5e]
  41f5d7:	call   0x513:0xd6fd1ae5
  41f5de:	and    DWORD PTR [edi-0x743da374],ebp
  41f5e4:	mov    bl,BYTE PTR [eax+0x0]
  41f5e7:	sbb    eax,0x9c8d4101
  41f5ec:	jl     0x41f59b
  41f5ee:	imul   ebx,DWORD PTR [ecx],0x122f4dcc
  41f5f4:	out    dx,eax
  41f5f5:	and    ecx,DWORD PTR [ebp-0x1cb5191e]
  41f5fb:	stos   BYTE PTR es:[edi],al
  41f5fc:	sub    ebx,ecx
  41f5fe:	pop    ebp
  41f5ff:	or     eax,0x29604dd7
  41f604:	cs xchg edi,eax
  41f606:	jmp    0x963835da
  41f60b:	mov    gs,esi
  41f60d:	fsub   QWORD PTR [edi-0x23]
  41f610:	shl    ecx,1
  41f612:	add    DWORD PTR [ebx+0x45b14cbe],0xffffffa9
  41f619:	loop   0x41f691
  41f61b:	fld    DWORD PTR [ebx+ebp*2-0x3b4211ed]
  41f622:	pop    ebp
  41f623:	and    BYTE PTR [edx+0x1f387b6e],cl
  41f629:	cld    
  41f62a:	adc    dh,BYTE PTR [eax]
  41f62c:	xor    eax,0x994006e9
  41f631:	out    dx,eax
  41f632:	int    0x57
  41f634:	mov    edi,0x3af43898
  41f639:	pop    edi
  41f63a:	stos   BYTE PTR es:[edi],al
  41f63b:	rol    BYTE PTR [ebx-0x4ba2d0a4],cl
  41f641:	pusha  
  41f642:	je     0x41f67b
  41f644:	mov    ecx,0x64ebfa5a
  41f649:	ins    BYTE PTR es:[edi],dx
  41f64a:	jl     0x41f63b
  41f64c:	sub    al,0x32
  41f64e:	test   BYTE PTR [esi-0x47],0x57
  41f652:	shl    DWORD PTR [ecx+0x363ddbfb],0x7f
  41f659:	jl     0x41f6a7
  41f65b:	pop    ebx
  41f65c:	ins    BYTE PTR es:[edi],dx
  41f65d:	xchg   edi,eax
  41f65e:	fild   WORD PTR [eax-0x7e23256f]
  41f664:	xchg   ebp,eax
  41f665:	push   edi
  41f666:	mov    bl,0x94
  41f668:	pop    ebp
  41f669:	jo     0x41f69f
  41f66b:	add    BYTE PTR [edx],cl
  41f66d:	jmp    0x17aa1742
  41f672:	inc    ebp
  41f673:	adc    al,0x67
  41f675:	sub    al,0x3f
  41f677:	push   edi
  41f678:	repnz std 
  41f67a:	jmp    0x76eb:0xef960f53
  41f681:	add    BYTE PTR [edx-0x40],0x91
  41f685:	rcr    BYTE PTR gs:[ebp-0x27],0xec
  41f68a:	fcom   QWORD PTR [esi+0x480623b0]
  41f690:	push   ebp
  41f691:	mov    bl,0xdc
  41f693:	mov    bp,sp
  41f696:	mov    esp,DWORD PTR [ebp-0x30]
  41f699:	pop    ebx
  41f69a:	cdq    
  41f69b:	xchg   ebx,eax
  41f69c:	add    BYTE PTR [esi+eax*8],0xfc
  41f6a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6a1:	add    DWORD PTR fs:[ecx+0x67],0xffffffa7
  41f6a6:	nop
  41f6a7:	pop    edx
  41f6a8:	jnp    0x41f672
  41f6aa:	jo     0x41f6b4
  41f6ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6ad:	mov    al,ds:0xd0cd4eb
  41f6b2:	mov    ch,0x46
  41f6b4:	xor    al,0x4e
  41f6b6:	push   ebp
  41f6b7:	inc    esp
  41f6b8:	mov    ch,0x4a
  41f6ba:	or     BYTE PTR [eax-0x62],bh
  41f6bd:	(bad)  
  41f6be:	and    esi,DWORD PTR [eax]
  41f6c0:	(bad)  
  41f6c2:	fs into 
  41f6c4:	mov    esi,0xba677ca2
  41f6c9:	xor    eax,0x896d2830
  41f6ce:	mov    BYTE PTR [ebx],cl
  41f6d0:	xchg   DWORD PTR [edi-0x75d1b64a],edx
  41f6d6:	in     eax,dx
  41f6d7:	pop    ecx
  41f6d8:	mov    WORD PTR [ecx+eiz*4-0x73bcd999],gs
  41f6df:	and    dh,BYTE PTR [edi+0x52dabee0]
  41f6e5:	xchg   edx,eax
  41f6e6:	xor    ecx,DWORD PTR [eax]
  41f6e8:	(bad)  
  41f6ea:	add    BYTE PTR [edx+edi*1-0x65],bh
  41f6ee:	or     cl,BYTE PTR [ebp+0x45]
  41f6f1:	test   dl,bh
  41f6f3:	int    0x1e
  41f6f5:	pop    esp
  41f6f6:	jmp    0x5bdc:0xf96fd42c
  41f6fd:	cwde   
  41f6fe:	ret    
  41f6ff:	and    ebp,DWORD PTR [esi]
  41f701:	mov    edx,?
  41f703:	shl    BYTE PTR [esi-0x2b52274b],0xb
  41f70a:	aaa    
  41f70b:	cs ds aam 0xe6
  41f70f:	aad    0xc9
  41f711:	arpl   WORD PTR [ecx-0x75],si
  41f714:	in     eax,0x3b
  41f716:	and    al,0x4f
  41f718:	(bad)  
  41f719:	ds mov dl,0xed
  41f71c:	in     al,0x2c
  41f71e:	sub    BYTE PTR [edx+0x78],cl
  41f721:	xchg   edx,eax
  41f722:	add    eax,0x5585fc04
  41f727:	aam    0x8
  41f729:	sub    al,0xb0
  41f72b:	mov    dl,BYTE PTR [edx]
  41f72d:	jmp    0x41f7aa
  41f72f:	stos   BYTE PTR es:[edi],al
  41f730:	push   0x17cf6ecd
  41f735:	mov    esi,0xae27db12
  41f73a:	cld    
  41f73b:	sbb    eax,DWORD PTR [eax]
  41f73d:	mov    bh,0x68
  41f73f:	pop    edx
  41f740:	inc    ebx
  41f741:	pop    ebx
  41f742:	test   eax,0x8add54cf
  41f747:	adc    dl,BYTE PTR [ecx+eax*8+0x424188b8]
  41f74e:	sbb    eax,DWORD PTR [edx+0x6612661d]
  41f754:	fsub   DWORD PTR [edi+0x1d28864f]
  41f75a:	push   ss
  41f75b:	les    esi,FWORD PTR ds:0x40937cb0
  41f761:	xor    al,0x82
  41f763:	rol    BYTE PTR [ebp-0x26a73590],1
  41f769:	dec    esp
  41f76a:	lahf   
  41f76b:	push   ds
  41f76c:	pop    ss
  41f76d:	sub    eax,0xff436f39
  41f772:	jno    0x41f730
  41f774:	sub    ecx,DWORD PTR [edi]
  41f776:	xor    ebx,ecx
  41f778:	jmp    0x41f7d6
  41f77a:	inc    edx
  41f77b:	das    
  41f77c:	dec    ebp
  41f77d:	xor    BYTE PTR ds:0x844faf97,0xb5
  41f784:	add    al,0xce
  41f786:	mov    ebx,0x19d1012d
  41f78b:	retf   0xcdc1
  41f78e:	arpl   WORD PTR [ebp+edx*8+0x4730e359],sp
  41f795:	jae    0x41f7c3
  41f797:	stc    
  41f798:	xlat   BYTE PTR ds:[ebx]
  41f799:	in     eax,dx
  41f79a:	in     eax,dx
  41f79b:	sbb    al,0x43
  41f79d:	adc    bh,cl
  41f79f:	add    esp,DWORD PTR [ebp+0x0]
  41f7a2:	(bad)
  41f7a7:	sbb    bl,BYTE PTR [ecx]
  41f7a9:	test   cl,ch
  41f7ab:	stos   DWORD PTR es:[edi],eax
  41f7ac:	mov    al,0x65
  41f7ae:	dec    BYTE PTR [esi+0x66cbe1b8]
  41f7b4:	ins    BYTE PTR es:[edi],dx
  41f7b5:	add    eax,0xdd93269e
  41f7ba:	cwde   
  41f7bb:	call   0x59f9aeec
  41f7c0:	and    DWORD PTR [edi+0x24],eax
  41f7c3:	ret    
  41f7c4:	cld    
  41f7c5:	sti    
  41f7c6:	mov    ebp,0x94047c81
  41f7cb:	pop    esp
  41f7cc:	daa    
  41f7cd:	scas   al,BYTE PTR es:[edi]
  41f7ce:	fld    TBYTE PTR [edi-0x3e]
  41f7d1:	repz xchg di,ax
  41f7d4:	pop    edx
  41f7d5:	sub    al,0x73
  41f7d7:	lds    esp,FWORD PTR [eax]
  41f7d9:	mov    dl,0xca
  41f7db:	dec    edx
  41f7dc:	pop    es
  41f7dd:	aas    
  41f7de:	fld    TBYTE PTR [edx-0x14]
  41f7e1:	shr    eax,0x7b
  41f7e4:	out    dx,al
  41f7e5:	in     al,dx
  41f7e6:	test   al,0x7e
  41f7e8:	push   edi
  41f7e9:	mov    ds:0x422ca6d3,al
  41f7ee:	inc    eax
  41f7ef:	bound  ebp,QWORD PTR [ebx+eiz*8+0x2a54f457]
  41f7f6:	mov    edi,0x70ea88bc
  41f7fb:	mov    cl,0x30
  41f7fd:	(bad)  
  41f7fe:	ja     0x41f7ee
  41f800:	ins    DWORD PTR es:[edi],dx
  41f801:	fdivr  QWORD PTR [edx-0x42]
  41f804:	int    0xad
  41f806:	aad    0x3d
  41f808:	les    eax,FWORD PTR [ecx]
  41f80a:	inc    esp
  41f80b:	les    esi,FWORD PTR ds:0xd4c101c0
  41f811:	fld    TBYTE PTR [ecx-0x47]
  41f814:	jp     0x41f879
  41f816:	jno    0x41f856
  41f818:	clc    
  41f819:	clc    
  41f81a:	int    0xb3
  41f81c:	jno    0x41f81d
  41f81e:	(bad)  
  41f81f:	sub    eax,0xd267b6e6
  41f824:	push   es
  41f825:	sub    DWORD PTR [ebx-0x7919797d],ebp
  41f82b:	xchg   edi,esp
  41f82d:	push   dx
  41f82f:	adc    al,0x4b
  41f831:	mov    dh,0x77
  41f833:	and    DWORD PTR [ebx],ecx
  41f835:	div    DWORD PTR [ecx-0x1d]
  41f838:	mov    edi,ecx
  41f83a:	jp     0x41f86b
  41f83c:	or     bl,dh
  41f83e:	jne    0x41f80c
  41f840:	int3   
  41f841:	push   cs
  41f842:	inc    edi
  41f843:	mov    edi,0xee9a95e4
  41f848:	fst    QWORD PTR [eax-0x53]
  41f84b:	cmp    DWORD PTR [esi],ecx
  41f84d:	rcl    ebp,1
  41f84f:	adc    BYTE PTR [ecx+0x5aacc4d8],dh
  41f855:	scas   eax,DWORD PTR es:[edi]
  41f856:	enter  0x882b,0x2f
  41f85a:	fmulp  st(4),st
  41f85c:	inc    edi
  41f85d:	mov    DWORD PTR [ebx+0x2ab9e251],ebx
  41f863:	vmwrite eax,DWORD PTR ds:0xc930a0ea
  41f86a:	pop    DWORD PTR [ebp-0x7f]
  41f86d:	mov    eax,0xb4539eb7
  41f872:	test   BYTE PTR [ecx],bl
  41f874:	sub    ebx,DWORD PTR [ecx]
  41f876:	jge    0x41f836
  41f878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f879:	jb     0x41f8dd
  41f87b:	pusha  
  41f87c:	sbb    DWORD PTR [edi],0xffffffc7
  41f87f:	push   ebp
  41f880:	pop    edi
  41f881:	add    cl,cl
  41f883:	xchg   esi,eax
  41f884:	ins    DWORD PTR es:[edi],dx
  41f885:	mov    dh,0x7f
  41f887:	(bad)  
  41f888:	(bad)  
  41f88a:	aam    0xd9
  41f88c:	inc    ebx
  41f88d:	fcom   DWORD PTR [esi+0x9]
  41f890:	pop    ebx
  41f891:	scas   eax,DWORD PTR es:[edi]
  41f892:	xchg   DWORD PTR [esi+0x1],ebp
  41f895:	add    BYTE PTR [edi],ah
  41f897:	add    eax,DWORD PTR [eax]
  41f899:	add    BYTE PTR [edi-0xd],bl
  41f89c:	call   0xef9f1683
  41f8a1:	imul   ebp,DWORD PTR [esi+0x25d294a0],0xcbd88197
  41f8ab:	sbb    DWORD PTR [esi+0x67],ebx
  41f8ae:	cdq    
  41f8af:	in     al,0x35
  41f8b1:	call   0x2ac0:0xc276ff49
  41f8b8:	sub    al,0x4
  41f8ba:	fwait
  41f8bb:	jno    0x41f8f0
  41f8bd:	shl    BYTE PTR [ebp+0x47],1
  41f8c0:	fcomp  DWORD PTR [esi+ebx*2-0x66e3684]
  41f8c7:	adc    dl,bh
  41f8c9:	push   0x3b89261a
  41f8ce:	adc    ch,al
  41f8d0:	mov    al,0xac
  41f8d2:	push   esi
  41f8d3:	cmp    esp,DWORD PTR [esi-0x3f]
  41f8d6:	js     0x41f93e
  41f8d8:	scas   al,BYTE PTR es:[edi]
  41f8d9:	xchg   BYTE PTR [ecx-0x3a],ah
  41f8dc:	xor    al,0xb7
  41f8de:	pop    ebx
  41f8df:	push   edi
  41f8e0:	lea    ecx,[ebp+0x1d]
  41f8e3:	jo     0x41f8d5
  41f8e5:	xor    dl,ah
  41f8e7:	xlat   BYTE PTR ds:[ebx]
  41f8e8:	lahf   
  41f8e9:	stc    
  41f8ea:	mov    bl,cl
  41f8ec:	dec    eax
  41f8ed:	xchg   edi,eax
  41f8ee:	aaa    
  41f8ef:	cmp    DWORD PTR [edi],esp
  41f8f1:	xchg   ecx,eax
  41f8f2:	add    dh,BYTE PTR [ecx-0x25]
  41f8f5:	popa   
  41f8f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8f7:	call   0x17c2f016
  41f8fc:	in     al,0x9f
  41f8fe:	sub    ch,bl
  41f900:	cld    
  41f901:	iret   
  41f902:	push   ebx
  41f903:	leave  
  41f904:	push   edx
  41f905:	sub    edi,DWORD PTR [edi]
  41f907:	push   si
  41f909:	(bad)
  41f90c:	adc    eax,0x6e3b65dd
  41f911:	inc    esi
  41f912:	mov    dl,0xa8
  41f914:	cli    
  41f915:	sub    BYTE PTR [ebp+0x5870b694],ch
  41f91b:	adc    al,0x59
  41f91d:	aad    0x2a
  41f91f:	in     eax,0xdb
  41f921:	outs   dx,DWORD PTR ds:[esi]
  41f922:	or     ebx,DWORD PTR [eax]
  41f924:	shl    DWORD PTR [edx-0x80],0x25
  41f928:	dec    edx
  41f929:	imul   ecx,DWORD PTR ds:0x9508e9d3,0xffffffc8
  41f930:	or     cl,BYTE PTR [ecx+0x31d8ed49]
  41f936:	or     DWORD PTR [esi],0x2cd5c8af
  41f93c:	lahf   
  41f93d:	xchg   esp,eax
  41f93e:	or     DWORD PTR [edx+0x5decf0b2],esp
  41f944:	pop    DWORD PTR [ebp+ebp*2-0x5e]
  41f948:	inc    ecx
  41f949:	leave  
  41f94a:	or     DWORD PTR [ebp+0x43],esp
  41f94d:	ds add al,0x6b
  41f950:	sar    BYTE PTR [eax],1
  41f952:	add    al,0xbf
  41f954:	cmp    BYTE PTR [ebx],dl
  41f956:	dec    ebx
  41f957:	(bad)  
  41f958:	shr    BYTE PTR [ebp+0x792c9a58],cl
  41f95e:	test   DWORD PTR [ebx-0x2ed175e5],0xa82627fb
  41f968:	and    eax,DWORD PTR [bx+si]
  41f96b:	inc    eax
  41f96c:	leave  
  41f96d:	ret    
  41f96e:	mov    bh,BYTE PTR [ebx]
  41f970:	out    dx,eax
  41f971:	out    0x3a,al
  41f973:	ins    DWORD PTR es:[edi],dx
  41f974:	inc    edi
  41f975:	xchg   BYTE PTR [edx+0x8],bl
  41f978:	fs xchg edx,eax
  41f97a:	add    eax,0xc52d6943
  41f97f:	push   edx
  41f980:	call   0x6b3:0x60cf09b1
  41f987:	lods   eax,DWORD PTR ds:[esi]
  41f988:	dec    edx
  41f989:	(bad)
  41f98d:	pop    ebx
  41f98e:	mov    edx,0x3ca8080a
  41f993:	and    ch,BYTE PTR ds:0x925f3ebc
  41f999:	add    DWORD PTR [ebx],esi
  41f99b:	pop    edx
  41f99c:	mov    ch,0xb4
  41f99e:	scas   al,BYTE PTR es:[edi]
  41f99f:	jl     0x41f94d
  41f9a1:	cld    
  41f9a2:	pop    esp
  41f9a3:	mov    dl,0xc4
  41f9a5:	mov    ebx,0x95528678
  41f9aa:	inc    esp
  41f9ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9ac:	das    
  41f9ad:	push   0xffffffd7
  41f9af:	mov    ds:0x6dcb910,al
  41f9b4:	retf   0x5a21
  41f9b7:	cmc    
  41f9b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9b9:	lahf   
  41f9ba:	inc    esi
  41f9bb:	and    ah,cl
  41f9bd:	add    edi,DWORD PTR [esi+0x59]
  41f9c0:	adc    DWORD PTR [edi+eiz*8-0x6197df8e],0x6ca008c0
  41f9cb:	loop   0x41fa30
  41f9cd:	ror    DWORD PTR [ebp-0xd732b72],1
  41f9d3:	out    0x55,al
  41f9d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9d6:	addr16 sub al,0x29
  41f9d9:	(bad)  
  41f9da:	repz jg 0x41fa14
  41f9dd:	jp     0x41f9fa
  41f9df:	les    esi,FWORD PTR [ebx+0x21]
  41f9e2:	in     al,dx
  41f9e3:	inc    esi
  41f9e4:	test   eax,0x62a532a6
  41f9e9:	pushf  
  41f9ea:	mov    dl,0xa4
  41f9ec:	dec    eax
  41f9ed:	sub    DWORD PTR [edi+edx*1+0x2205c163],eax
  41f9f4:	mov    ah,bh
  41f9f6:	dec    esi
  41f9f7:	add    DWORD PTR [edx],ecx
  41f9f9:	arpl   WORD PTR [esi-0x8],di
  41f9fc:	das    
  41f9fd:	dec    eax
  41f9fe:	data16 lahf 
  41fa00:	int3   
  41fa01:	sub    al,dl
  41fa03:	mov    WORD PTR [ecx+eax*1],gs
  41fa06:	jmp    0x41f9e8
  41fa08:	xor    BYTE PTR [eax+edi*1],0x86
  41fa0c:	jne    0x41f9b6
  41fa0e:	bound  ecx,QWORD PTR [ebx]
  41fa10:	pop    esp
  41fa11:	or     BYTE PTR [ecx],ch
  41fa13:	repnz pushf 
  41fa15:	fwait
  41fa16:	add    BYTE PTR [ebx+0x2],bl
  41fa19:	ds push ecx
  41fa1b:	mov    bh,0x5f
  41fa1d:	cmp    eax,0x30
  41fa20:	jne    0x41fa9a
  41fa22:	jge    0x41fa2d
  41fa24:	cmp    ch,BYTE PTR [esp+eiz*4]
  41fa27:	mov    bh,0x75
  41fa29:	adc    eax,0xe750b3eb
  41fa2e:	fsubr  QWORD PTR [esi]
  41fa30:	in     eax,dx
  41fa31:	js     0x41f9ce
  41fa33:	adc    esp,esi
  41fa35:	dec    ebp
  41fa36:	out    0xda,eax
  41fa38:	or     BYTE PTR [ecx],bh
  41fa3a:	jmp    0xba86:0x35e02336
  41fa41:	mov    dh,0x6f
  41fa43:	push   cs
  41fa44:	and    eax,0x79367c31
  41fa49:	ds xchg ecx,eax
  41fa4b:	test   al,0x55
  41fa4d:	xor    DWORD PTR [ebp-0x26],0x1cc5ac0c
  41fa54:	stos   BYTE PTR es:[edi],al
  41fa55:	(bad)  
  41fa56:	push   esp
  41fa57:	mov    BYTE PTR [ecx],cl
  41fa59:	jle    0x41fa95
  41fa5b:	test   al,0x26
  41fa5d:	sub    ecx,DWORD PTR [edi+eiz*4-0x6f]
  41fa61:	dec    edi
  41fa62:	push   eax
  41fa63:	shr    ebp,cl
  41fa65:	ja     0x41fac7
  41fa67:	sub    al,BYTE PTR [eax]
  41fa69:	pop    ebx
  41fa6a:	or     ah,BYTE PTR [edi]
  41fa6c:	fldenv [ebx+0xf]
  41fa6f:	clc    
  41fa70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa71:	and    BYTE PTR [esi+0x7eb05d05],ch
  41fa77:	(bad)  [edi-0x80]
  41fa7a:	jge    0x41faf0
  41fa7c:	test   eax,0x555b2a03
  41fa81:	pop    esi
  41fa82:	pop    esi
  41fa83:	xchg   ecx,eax
  41fa84:	jmp    0x41fa93
  41fa86:	adc    ebp,esi
  41fa88:	inc    ebp
  41fa89:	mov    ds:0xffea9d50,eax
  41fa8e:	call   0xa3e8:0x9bd3dd0f
  41fa95:	sbb    DWORD PTR [edx-0x5ce72142],0x1fc1730d
  41fa9f:	jns    0x41faf9
  41faa1:	test   eax,edx
  41faa3:	dec    ebx
  41faa4:	int    0x76
  41faa6:	pop    esp
  41faa7:	std    
  41faa8:	or     esp,ebx
  41faaa:	je     0x41fa65
  41faac:	fwait
  41faad:	xchg   ebp,eax
  41faae:	call   0x458c:0xd735697c
  41fab5:	popf   
  41fab6:	add    BYTE PTR [ecx-0x27736ffc],dh
  41fabc:	push   ss
  41fabd:	repz (bad) [edx]
  41fac0:	inc    ebp
  41fac1:	mov    edi,0xb595932a
  41fac6:	pop    ecx
  41fac7:	and    BYTE PTR [ecx-0x2],cl
  41faca:	repnz sub al,0x95
  41facd:	pop    ds
  41face:	out    dx,eax
  41facf:	arpl   WORD PTR [eax-0x55faba64],bp
  41fad5:	xchg   ecx,eax
  41fad6:	push   ebp
  41fad7:	mov    al,ds:0x3ed79c93
  41fadc:	nop
  41fadd:	add    BYTE PTR [esi+0x6c4135f6],bl
  41fae3:	call   0x9c68f01d
  41fae8:	jmp    0x41fa97
  41faea:	lods   eax,DWORD PTR ds:[esi]
  41faeb:	ins    DWORD PTR es:[edi],dx
  41faec:	lea    esi,[ecx-0x71]
  41faef:	mov    ds:0x68962100,eax
  41faf4:	sub    ebx,DWORD PTR [di]
  41faf7:	mov    BYTE PTR [ecx+0x78cc90ab],bl
  41fafd:	and    edi,eax
  41faff:	push   0x9da96f5
  41fb04:	adc    dl,ah
  41fb06:	push   ebx
  41fb07:	and    ebp,DWORD PTR [eax-0x42a3ce93]
  41fb0d:	rol    BYTE PTR [ebp-0x9250083],cl
  41fb13:	sbb    DWORD PTR [edx-0x5b0904fa],eax
  41fb19:	mov    dl,0x37
  41fb1b:	mov    dl,0x9c
  41fb1d:	dec    esp
  41fb1e:	std    
  41fb1f:	in     al,dx
  41fb20:	repz sbb esp,DWORD PTR [esi]
  41fb23:	jge    0x41fb7b
  41fb25:	repz push ebx
  41fb27:	sbb    ecx,DWORD PTR [eax+0x3f]
  41fb2a:	adc    eax,0xef41eb94
  41fb2f:	cld    
  41fb30:	int3   
  41fb31:	je     0x41fafd
  41fb33:	fidivr WORD PTR [ebx]
  41fb35:	add    eax,eax
  41fb37:	xor    dl,0xb5
  41fb3a:	(bad)  
  41fb3b:	jbe    0x41fb69
  41fb3d:	ds cli 
  41fb3f:	mov    dl,0x41
  41fb41:	xor    eax,0xc4eafb11
  41fb46:	loop   0x41fad6
  41fb48:	xchg   edi,eax
  41fb49:	push   ecx
  41fb4a:	addr16 int3 
  41fb4c:	scas   eax,DWORD PTR es:[edi]
  41fb4d:	rol    BYTE PTR [edi-0x7c],1
  41fb50:	xchg   BYTE PTR [eax-0xa249437],dl
  41fb56:	loope  0x41fae5
  41fb58:	fstp   DWORD PTR [ebx]
  41fb5a:	and    BYTE PTR [eax+0x3a66e788],bh
  41fb60:	add    esi,DWORD PTR ds:0x1ee9975c
  41fb66:	jae    0x41fb7a
  41fb68:	dec    ebp
  41fb69:	jecxz  0x41fbb0
  41fb6b:	fld    TBYTE PTR [edi]
  41fb6d:	mov    eax,0x822ed4b
  41fb72:	cmp    bl,dl
  41fb74:	call   0x6571:0x372e32a9
  41fb7b:	pop    esp
  41fb7c:	mov    ds,esi
  41fb7e:	jmp    0xd718fc94
  41fb83:	adc    al,0x94
  41fb85:	retf   0x32dc
  41fb88:	push   ds
  41fb89:	push   edx
  41fb8a:	xchg   BYTE PTR [edi],bh
  41fb8c:	rcr    cl,0x30
  41fb8f:	dec    edx
  41fb90:	test   eax,0xf2fcb89c
  41fb95:	sbb    eax,0xa770f64d
  41fb9a:	loopne 0x41fbd2
  41fb9c:	xchg   edx,ecx
  41fb9e:	xchg   ebp,eax
  41fb9f:	jno    0x41fbd5
  41fba1:	scas   eax,DWORD PTR es:[edi]
  41fba2:	mov    BYTE PTR [ebx+0x66d93b7d],bl
  41fba8:	hlt    
  41fba9:	jno    0x41fc06
  41fbab:	jo     0x41fb3b
  41fbad:	sbb    BYTE PTR [edx],al
  41fbaf:	sahf   
  41fbb0:	pop    edx
  41fbb1:	or     DWORD PTR [esi+0x3f],ebx
  41fbb4:	sbb    ebx,DWORD PTR [ebx]
  41fbb6:	out    dx,al
  41fbb7:	inc    esi
  41fbb8:	ins    BYTE PTR es:[edi],dx
  41fbb9:	jbe    0x41fbc0
  41fbbb:	sbb    eax,0xed4b0ae6
  41fbc0:	fadd   QWORD PTR [eax]
  41fbc2:	dec    eax
  41fbc3:	out    dx,eax
  41fbc4:	ja     0x41fc31
  41fbc6:	idiv   ebx
  41fbc8:	pop    esp
  41fbc9:	out    dx,eax
  41fbca:	dec    esp
  41fbcb:	mul    BYTE PTR [esi-0x7d]
  41fbce:	stos   BYTE PTR es:[edi],al
  41fbcf:	dec    edi
  41fbd0:	std    
  41fbd1:	or     ch,BYTE PTR [esi+0x27000171]
  41fbd7:	add    eax,DWORD PTR [eax]
  41fbd9:	add    BYTE PTR [edi+0x77f79924],ch
  41fbdf:	adc    al,0x7d
  41fbe1:	mov    al,bl
  41fbe3:	(bad)  
  41fbe4:	cmp    dh,cl
  41fbe6:	retf   
  41fbe7:	mov    esi,0xd48c5dbc
  41fbec:	or     eax,0xfe16b5f5
  41fbf1:	in     al,0xc4
  41fbf3:	data16 fcmovnbe st,st(1)
  41fbf6:	mov    cl,0x1e
  41fbf8:	add    ebx,eax
  41fbfa:	je     0x41fc66
  41fbfc:	sahf   
  41fbfd:	xlat   BYTE PTR ds:[ebx]
  41fbfe:	mov    DWORD PTR [edi+0x19],esi
  41fc01:	jb     0x41fc28
  41fc03:	push   0xffffffa3
  41fc05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc06:	stc    
  41fc07:	repnz adc eax,0x3c05a37b
  41fc0d:	xchg   edi,eax
  41fc0e:	dec    edx
  41fc0f:	cmp    dh,bh
  41fc11:	out    0x34,al
  41fc13:	outs   dx,BYTE PTR ds:[esi]
  41fc14:	shl    DWORD PTR [eax],cl
  41fc16:	shl    bl,1
  41fc18:	mov    ah,0x98
  41fc1a:	sar    BYTE PTR [esi],1
  41fc1c:	or     BYTE PTR [edx],dh
  41fc1e:	xor    bh,0xb5
  41fc21:	cmp    DWORD PTR [edx],edx
  41fc23:	les    esi,FWORD PTR [edx]
  41fc25:	clc    
  41fc26:	xor    edi,ebx
  41fc28:	mov    ecx,0x35d59bd6
  41fc2d:	je     0x41fca0
  41fc2f:	adc    bh,bh
  41fc31:	cmp    al,0x58
  41fc33:	or     eax,0xb0ebde16
  41fc38:	fidivr DWORD PTR [ebp+0x32]
  41fc3b:	rcl    DWORD PTR [ecx],0x29
  41fc3e:	aad    0x72
  41fc40:	aas    
  41fc41:	add    DWORD PTR [eax],eax
  41fc43:	fsub   DWORD PTR [edx-0x5b]
  41fc46:	loop   0x41fbe8
  41fc48:	and    eax,0xf4288e0b
  41fc4d:	adc    DWORD PTR [edx],0xabd75db6
  41fc53:	pop    ecx
  41fc54:	call   0x6dd3:0xbf800a42
  41fc5b:	outs   dx,BYTE PTR ds:[esi]
  41fc5c:	aas    
  41fc5d:	fisubr WORD PTR ds:0x387f3ad1
  41fc63:	sub    esi,DWORD PTR [eax-0x4134800a]
  41fc69:	je     0x41fc0f
  41fc6b:	push   esi
  41fc6c:	mov    al,ds:0xc12b0564
  41fc71:	and    BYTE PTR [eax+0x51747c85],cl
  41fc77:	sbb    dh,BYTE PTR [eax-0x477a0b67]
  41fc7d:	inc    eax
  41fc7e:	cwde   
  41fc7f:	dec    eax
  41fc80:	mov    ds:0x525c579b,eax
  41fc85:	sub    al,0xbd
  41fc87:	retf   0x398c
  41fc8a:	cmp    dl,BYTE PTR [ebx+0x795d7eea]
  41fc90:	mov    eax,ds:0x912ee303
  41fc95:	out    dx,al
  41fc96:	jle    0x41fc72
  41fc98:	ins    BYTE PTR es:[edi],dx
  41fc99:	in     eax,dx
  41fc9a:	retf   0x6ecb
  41fc9d:	fdiv   DWORD PTR [ecx+0x50]
  41fca0:	mov    ds:0xa74f3c0a,eax
  41fca5:	push   edx
  41fca6:	jmp    0x76a9:0xfdaaa0e3
  41fcad:	adc    ax,0xecda
  41fcb1:	push   ebx
  41fcb2:	push   ss
  41fcb3:	mov    ds:0x8179751a,al
  41fcb8:	pop    ebp
  41fcb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcba:	outs   dx,DWORD PTR ds:[esi]
  41fcbb:	jno    0x41fd28
  41fcbd:	xchg   esi,eax
  41fcbe:	inc    edi
  41fcbf:	push   edi
  41fcc0:	mov    bh,0x42
  41fcc2:	imul   edi,DWORD PTR [ebx],0x195239be
  41fcc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcc9:	cld    
  41fcca:	mov    gs,WORD PTR [edx+0x13]
  41fccd:	push   es
  41fcce:	iret   
  41fccf:	fdivrp st(0),st
  41fcd1:	sbb    eax,0x13de4579
  41fcd6:	mov    ch,0x61
  41fcd8:	inc    eax
  41fcd9:	mov    dh,0x88
  41fcdb:	imul   esp,DWORD PTR ds:0x5533f06c,0xfffffff5
  41fce2:	icebp  
  41fce3:	add    al,0x5
  41fce5:	bnd js 0x41fd16
  41fce8:	inc    esp
  41fce9:	retf   
  41fcea:	mov    ds:0x2f762dbc,al
  41fcef:	pop    ecx
  41fcf0:	jbe    0x41fc8d
  41fcf2:	inc    ecx
  41fcf3:	push   edi
  41fcf4:	dec    eax
  41fcf5:	lds    ecx,FWORD PTR [ebx]
  41fcf7:	mov    al,dh
  41fcf9:	arpl   WORD PTR [ecx-0x71e79954],si
  41fcff:	cwde   
  41fd00:	sub    DWORD PTR [ecx-0x77],ebx
  41fd03:	jecxz  0x41fd7d
  41fd05:	loop   0x41fcaf
  41fd07:	and    eax,0x64c1da7
  41fd0c:	add    dh,BYTE PTR [esi-0x7d9c93b9]
  41fd12:	dec    esi
  41fd13:	mov    bl,0xe2
  41fd15:	or     DWORD PTR [ebx+0x1],ecx
  41fd18:	adc    eax,0xaa356461
  41fd1d:	fs mov cl,0x36
  41fd20:	rol    DWORD PTR [ecx+0x15],1
  41fd23:	push   0x65
  41fd25:	pop    ss
  41fd26:	xchg   DWORD PTR [ebx-0x802b82],ebp
  41fd2c:	popf   
  41fd2d:	inc    ebx
  41fd2e:	dec    eax
  41fd2f:	sub    ebx,esp
  41fd31:	pop    ebp
  41fd32:	sub    DWORD PTR [ebp+0x551087a6],0xf62acef3
  41fd3c:	jnp    0x41fcce
  41fd3e:	inc    esi
  41fd3f:	sahf   
  41fd40:	mov    dh,0x8e
  41fd42:	ins    DWORD PTR es:[edi],dx
  41fd43:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd45:	mov    al,0xcc
  41fd47:	mov    cl,BYTE PTR [ebp+0x18b2848d]
  41fd4d:	int    0x97
  41fd4f:	and    BYTE PTR gs:[ebx],bl
  41fd52:	dec    ecx
  41fd53:	retf   
  41fd54:	mov    ah,0x7e
  41fd56:	mov    cl,0xe7
  41fd58:	rcr    cl,1
  41fd5a:	fsubr  QWORD PTR [edi+edi*2]
  41fd5d:	stos   DWORD PTR es:[edi],eax
  41fd5e:	mov    dh,0x31
  41fd60:	fiadd  WORD PTR [edi]
  41fd62:	pop    eax
  41fd63:	sbb    BYTE PTR [edi+0xa],dh
  41fd66:	or     edx,DWORD PTR [ebx-0x4f80ec37]
  41fd6c:	adc    DWORD PTR [ecx-0x29],eax
  41fd6f:	mov    al,ds:0x1c8daa29
  41fd74:	mov    cl,0x4b
  41fd76:	add    ebx,DWORD PTR ss:[esi]
  41fd79:	js     0x41fdbb
  41fd7b:	arpl   WORD PTR [ebx],sp
  41fd7d:	jmp    0x41fd2e
  41fd7f:	add    BYTE PTR [ecx-0x34],bl
  41fd82:	xchg   ecx,eax
  41fd83:	inc    edi
  41fd84:	test   eax,0xf06f8f1b
  41fd89:	pop    eax
  41fd8a:	aad    0xd1
  41fd8c:	and    cl,al
  41fd8e:	int    0x60
  41fd90:	call   0xbde1f02b
  41fd95:	jmp    DWORD PTR [ebx-0x60]
  41fd98:	arpl   WORD PTR [edi-0x78],bp
  41fd9b:	cld    
  41fd9c:	outs   dx,BYTE PTR ds:[esi]
  41fd9d:	pop    ecx
  41fd9e:	bound  eax,QWORD PTR [edx+0x7ac868fb]
  41fda4:	repnz cmp eax,0x9b00e19b
  41fdaa:	retf   
  41fdab:	scas   al,BYTE PTR es:[edi]
  41fdac:	or     al,BYTE PTR [ebp-0x4f]
  41fdaf:	mov    ds:0xd4c2ae04,eax
  41fdb4:	iret   
  41fdb5:	xor    al,0x50
  41fdb7:	sbb    al,0x19
  41fdb9:	dec    esp
  41fdba:	adc    edx,ecx
  41fdbc:	mov    bl,0xf2
  41fdbe:	ja     0x41fdfe
  41fdc0:	jns    0x41fd48
  41fdc2:	xchg   esp,eax
  41fdc3:	jae    0x41fe43
  41fdc5:	pushf  
  41fdc6:	loopne 0x41fd5a
  41fdc8:	dec    ebp
  41fdc9:	call   0x5d5f4f66
  41fdce:	sub    al,BYTE PTR [ebx]
  41fdd0:	dec    esi
  41fdd1:	nop
  41fdd2:	xchg   ebp,eax
  41fdd3:	inc    ebx
  41fdd4:	ins    DWORD PTR es:[edi],dx
  41fdd5:	sbb    al,0x65
  41fdd7:	push   ds
  41fdd8:	sahf   
  41fdd9:	sub    eax,eax
  41fddb:	pop    es
  41fddc:	jb     0x41fd8d
  41fdde:	xor    BYTE PTR [ecx+0x1a],0xdb
  41fde2:	mov    dl,0x1c
  41fde4:	sbb    eax,0x2d22447c
  41fde9:	xchg   ebx,eax
  41fdea:	pop    eax
  41fdeb:	dec    edx
  41fdec:	inc    edx
  41fded:	adc    eax,0x7a42ab4b
  41fdf2:	mov    bh,0x5e
  41fdf4:	sbb    ah,BYTE PTR [eax-0x5a8f292f]
  41fdfa:	mov    ds:0x20df4378,eax
  41fdff:	(bad)
  41fe02:	mov    ah,0x2a
  41fe04:	xchg   esp,eax
  41fe05:	daa    
  41fe06:	shl    DWORD PTR [edi+0x3e],1
  41fe09:	push   esi
  41fe0a:	sti    
  41fe0b:	pop    ss
  41fe0c:	aam    0x24
  41fe0e:	les    eax,FWORD PTR [esi]
  41fe10:	inc    esi
  41fe11:	pop    ebp
  41fe12:	xchg   ebx,eax
  41fe13:	jno    0x41fe01
  41fe15:	outs   dx,BYTE PTR ds:[esi]
  41fe16:	dec    esp
  41fe17:	gs loopne 0x41fdbe
  41fe1a:	lds    ecx,FWORD PTR [eax+0x4557475c]
  41fe20:	loope  0x41fe96
  41fe22:	ror    DWORD PTR [eax],1
  41fe24:	sub    DWORD PTR [esi],eax
  41fe26:	fwait
  41fe27:	adc    DWORD PTR [edi-0xe585eb7],eax
  41fe2d:	repz int3 
  41fe2f:	mov    al,ds:0x961a90b6
  41fe34:	xor    DWORD PTR [eax+0x4d],0xa4b9a227
  41fe3b:	sbb    DWORD PTR [eax-0x7b2d5b56],ebx
  41fe41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe42:	fsubr  QWORD PTR [edx]
  41fe44:	mov    ecx,0x8452aafd
  41fe49:	jae    0x41fe9a
  41fe4b:	jle    0x41fec4
  41fe4d:	loope  0x41feca
  41fe4f:	pop    ebp
  41fe50:	call   0x404d4f8
  41fe55:	lods   eax,DWORD PTR ds:[esi]
  41fe56:	and    DWORD PTR [ebp+0x34],0xa432160e
  41fe5d:	and    al,0xcb
  41fe5f:	test   DWORD PTR [edi],0x4e548c95
  41fe65:	imul   ebx,DWORD PTR [edx],0xffffffa0
  41fe68:	and    ebx,DWORD PTR [eax]
  41fe6a:	cmp    al,0x45
  41fe6c:	stc    
  41fe6d:	in     eax,0x28
  41fe6f:	sub    al,0x1a
  41fe71:	repnz les ebp,FWORD PTR [esi+0x707ddd4d]
  41fe78:	inc    edi
  41fe79:	cmp    eax,ebx
  41fe7b:	mov    dl,0xd8
  41fe7d:	xchg   DWORD PTR [esi],eax
  41fe7f:	into   
  41fe80:	shl    BYTE PTR [esi],cl
  41fe82:	sbb    DWORD PTR [esi+edi*4-0x3],0x4b568415
  41fe8a:	sbb    BYTE PTR [edx+edi*1],dh
  41fe8d:	dec    edx
  41fe8e:	sti    
  41fe8f:	pop    ebx
  41fe90:	outs   dx,DWORD PTR ds:[esi]
  41fe91:	call   0x3816c87
  41fe96:	mov    eax,ds:0xd8aef9ad
  41fe9b:	pusha  
  41fe9c:	shr    BYTE PTR [ecx],cl
  41fe9e:	cli    
  41fe9f:	(bad)  
  41fea0:	mov    al,ds:0xd0499269
  41fea5:	iret   
  41fea6:	aam    0x88
  41fea8:	out    dx,eax
  41fea9:	xchg   ecx,eax
  41feaa:	pop    esp
  41feab:	sbb    DWORD PTR [edx+0x144f506c],0x58e2a670
  41feb5:	and    dh,ah
  41feb7:	dec    edi
  41feb8:	shl    esp,1
  41feba:	push   ecx
  41febb:	xor    dh,bl
  41febd:	or     BYTE PTR [esi],0xea
  41fec0:	and    eax,0x18fa77b8
  41fec5:	add    bl,dl
  41fec7:	loope  0x41feb2
  41fec9:	pop    edi
  41feca:	cld    
  41fecb:	push   edx
  41fecc:	out    dx,eax
  41fecd:	mov    esi,0xf759560d
  41fed2:	enter  0x728f,0xf7
  41fed6:	mov    edi,0xb0773244
  41fedb:	push   ss
  41fedc:	sub    BYTE PTR [ebx+0x3],bl
  41fedf:	and    eax,0xa59c8362
  41fee4:	or     edx,ebp
  41fee6:	pop    edx
  41fee7:	jge    0x41fee3
  41fee9:	xchg   esp,eax
  41feea:	mov    ch,0xaf
  41feec:	loopne 0x41fe89
  41feee:	stos   BYTE PTR es:[edi],al
  41feef:	repnz or cl,BYTE PTR [eax-0x42]
  41fef3:	pop    ss
  41fef4:	inc    ebx
  41fef5:	and    eax,0xc64ed305
  41fefa:	sub    bl,cl
  41fefc:	fsubrp st(2),st
  41fefe:	mov    dl,0x9f
  41ff00:	popa   
  41ff01:	add    BYTE PTR [eax+0x5be35ae3],dh
  41ff07:	sti    
  41ff08:	mov    ecx,0x72415ff3
  41ff0d:	test   DWORD PTR [ebp-0x80],ecx
  41ff10:	jl     0x41ff75
  41ff12:	aad    0x74
  41ff14:	add    DWORD PTR [eax],eax
  41ff16:	daa    
  41ff17:	add    eax,DWORD PTR [eax]
  41ff19:	add    BYTE PTR [edi-0x10],al
  41ff1c:	inc    eax
  41ff1d:	add    edi,DWORD PTR ss:[eax-0x339c31f0]
  41ff24:	sub    cl,BYTE PTR ds:0x5ad4c37
  41ff2a:	mov    esi,0xfcd026df
  41ff2f:	xchg   edx,eax
  41ff30:	lds    eax,FWORD PTR [eax]
  41ff32:	mov    BYTE PTR [ebx],ch
  41ff34:	add    DWORD PTR [esi-0x3be13891],ebp
  41ff3a:	leave  
  41ff3b:	dec    esp
  41ff3c:	icebp  
  41ff3d:	test   DWORD PTR [ebx-0xc45ed6b],0xf26567a3
  41ff47:	aaa    
  41ff48:	jnp    0x41ff71
  41ff4a:	pop    edx
  41ff4b:	push   eax
  41ff4c:	mov    eax,0x52841e10
  41ff51:	add    eax,0x43734b61
  41ff56:	pop    ss
  41ff57:	aas    
  41ff58:	dec    eax
  41ff59:	mov    ds:0xc7a9a795,eax
  41ff5e:	xchg   ebp,eax
  41ff5f:	(bad)  
  41ff60:	cld    
  41ff61:	push   edi
  41ff62:	jb     0x41ff17
  41ff64:	imul   edi,DWORD PTR ds:0xcdafceff,0xffffff89
  41ff6b:	or     al,0x90
  41ff6d:	mov    dh,0xaa
  41ff6f:	pop    edi
  41ff70:	add    ah,0x61
  41ff73:	(bad)  
  41ff75:	rcr    BYTE PTR [eax-0x77],cl
  41ff78:	mov    ah,0x6b
  41ff7a:	push   ss
  41ff7b:	fwait
  41ff7c:	and    al,0xa9
  41ff7e:	lds    ecx,FWORD PTR [esi+0x1503d120]
  41ff84:	loope  0x420000
  41ff86:	add    DWORD PTR [edi-0x26],ebp
  41ff89:	(bad)  
  41ff8a:	(bad)  
  41ff8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff8c:	inc    BYTE PTR [edi-0x49]
  41ff8f:	fsubr  QWORD PTR [ebp+eax*8-0x71f46fd]
  41ff96:	xchg   ecx,eax
  41ff97:	sub    esi,edi
  41ff99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff9a:	aam    0x23
  41ff9c:	jnp    0x41ffb6
  41ff9e:	push   ecx
  41ff9f:	mov    fs,WORD PTR [edi+0x68]
  41ffa2:	mov    al,0x26
  41ffa4:	pop    eax
  41ffa5:	add    al,0x61
  41ffa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffa8:	cdq    
  41ffa9:	nop
  41ffaa:	fdivr  st(1),st
  41ffac:	jmp    0x3d524105
  41ffb1:	mov    esp,0x465ade1
  41ffb6:	lock inc esp
  41ffb8:	rcl    ecx,0x96
  41ffbb:	sub    DWORD PTR [edi],esi
  41ffbd:	and    esp,DWORD PTR [esi]
  41ffbf:	call   0xa6bf:0x4f3a5fd8
  41ffc6:	cwde   
  41ffc7:	and    al,0x4a
  41ffc9:	popa   
  41ffca:	mov    ebp,0x19a3db10
  41ffcf:	inc    edi
  41ffd0:	popa   
  41ffd1:	lock or ah,BYTE PTR [ebx]
  41ffd4:	add    BYTE PTR [ebx],ch
  41ffd6:	or     ebp,esp
  41ffd8:	cmp    bh,dh
  41ffda:	push   edi
  41ffdb:	push   ds
  41ffdc:	rcl    DWORD PTR [eax+0x68d7a5e],0x6f
  41ffe3:	jns    0x41ff7f
  41ffe5:	in     al,0xe0
  41ffe7:	idiv   esi
  41ffe9:	mov    ds:0xddb7f0c0,al
  41ffee:	xor    al,0x68
  41fff0:	jp     0x41ff93
  41fff2:	cs ret 0xf5eb
  41fff6:	sti    
  41fff7:	add    DWORD PTR [ebx-0x43f1d58b],ebx
  41fffd:	dec    ebp
  41fffe:	jb     0x41ff97
  420000:	mov    fs,WORD PTR [eax+0x41]
  420003:	ret    
  420004:	add    eax,0x8e475510
  420009:	loopne 0x420043
  42000b:	cli    
  42000c:	cmp    eax,0x19f9d2a0
  420011:	sbb    eax,0xadddb244
  420016:	or     al,0xd9
  420018:	jo     0x420053
  42001a:	xor    eax,0x5b6052f6
  42001f:	inc    ebp
  420020:	add    esi,DWORD PTR [eax]
  420022:	dec    esi
  420023:	and    esi,ebx
  420025:	jb     0x420036
  420027:	mul    BYTE PTR [edi+0x30]
  42002a:	xor    DWORD PTR [ebp+0x0],ebx
  42002d:	pop    esi
  42002e:	mov    esi,0x393633fd
  420033:	push   es
  420034:	icebp  
  420035:	nop
  420036:	fstp   DWORD PTR [edx+0x20dfed69]
  42003c:	push   0x71
  42003e:	or     al,0x53
  420040:	mov    ds,WORD PTR [ebx+0x4]
  420043:	jo     0x420060
  420045:	push   ss
  420046:	stos   BYTE PTR es:[edi],al
  420047:	pop    ebx
  420048:	in     eax,dx
  420049:	adc    eax,DWORD PTR [ecx]
  42004b:	test   BYTE PTR [edx+0x6c],0xbc
  42004f:	loope  0x420062
  420051:	mov    al,ds:0xed1bd084
  420056:	inc    ecx
  420057:	mov    eax,ds:0x4f0154e2
  42005c:	cmp    esp,DWORD PTR [ebx-0xa78e0c1]
  420062:	repz retf 
  420064:	xchg   edx,eax
  420065:	inc    esi
  420066:	xor    BYTE PTR [ebp-0x53a9fa64],bh
  42006c:	js     0x42004f
  42006e:	lods   al,BYTE PTR ds:[esi]
  42006f:	push   esp
  420070:	push   eax
  420071:	enter  0x45d5,0x31
  420075:	les    ecx,FWORD PTR [ebp+0x28]
  420078:	(bad)  
  420079:	out    0xc5,eax
  42007b:	(bad)  
  42007c:	ss cwde 
  42007e:	stos   DWORD PTR es:[edi],eax
  42007f:	add    BYTE PTR [eax+0x7e],ch
  420082:	gs stc 
  420084:	out    0xad,al
  420086:	pop    ebp
  420087:	std    
  420088:	xor    DWORD PTR [esi],ecx
  42008a:	das    
  42008b:	adc    al,0x4d
  42008d:	push   esp
  42008e:	popf   
  42008f:	cmp    edx,DWORD PTR [ebx-0x7cad852e]
  420095:	ror    DWORD PTR [ecx+eiz*8],0x36
  420099:	pop    esi
  42009a:	in     eax,0xc3
  42009c:	or     BYTE PTR [eax+0x22],0x37
  4200a0:	push   edx
  4200a1:	dec    eax
  4200a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200a3:	pop    eax
  4200a4:	pop    ebp
  4200a5:	pop    ebp
  4200a6:	push   0xa07d278
  4200ab:	mov    ecx,0x1327e3ce
  4200b0:	dec    BYTE PTR [ebp+0x857a06]
  4200b6:	add    dh,ah
  4200b8:	(bad)  
  4200b9:	iret   
  4200ba:	jmp    0xa624d57e
  4200bf:	pop    ds
  4200c0:	lods   eax,DWORD PTR ds:[esi]
  4200c1:	xchg   ah,dh
  4200c3:	push   edx
  4200c4:	mov    DWORD PTR [edx-0x42],ebp
  4200c7:	fldcw  WORD PTR [ebp+0x73b654fb]
  4200cd:	aad    0x4a
  4200cf:	sub    al,0xd4
  4200d1:	mov    ah,0xfe
  4200d3:	arpl   WORD PTR [ebx+edi*1+0xc],cx
  4200d7:	stc    
  4200d8:	loop   0x42013f
  4200da:	lock pop ebp
  4200dc:	cmp    al,0x89
  4200de:	xor    ecx,DWORD PTR [ebx+0x3dd9314c]
  4200e4:	rol    DWORD PTR [esi-0x26],0x9f
  4200e8:	inc    ebp
  4200e9:	aad    0x76
  4200eb:	jmp    0x908e:0xd4903e99
  4200f2:	dec    ecx
  4200f3:	rcr    esp,cl
  4200f5:	lea    ebx,[edi+0x7a04713]
  4200fb:	sub    al,0x84
  4200fd:	pop    ss
  4200fe:	aad    0xee
  420100:	xchg   DWORD PTR [edi],esp
  420102:	push   eax
  420103:	sahf   
  420104:	inc    ecx
  420105:	sahf   
  420106:	push   edx
  420107:	jg     0x420121
  420109:	xor    ebx,edi
  42010b:	lock inc ecx
  42010d:	or     eax,DWORD PTR ds:0xb0181762
  420113:	and    DWORD PTR [ebx-0x5e39e3c1],ebx
  420119:	(bad)  
  42011a:	push   edx
  42011b:	out    0xa5,eax
  42011d:	xor    eax,0x79a07ee4
  420122:	xor    esp,DWORD PTR [eax-0xd]
  420125:	outs   dx,DWORD PTR ds:[esi]
  420126:	add    eax,0xe0f26f1f
  42012b:	mov    edx,0x2a0532b2
  420130:	stc    
  420131:	sub    bl,BYTE PTR ds:0x7d832b67
  420137:	fdiv   DWORD PTR [edi-0x55]
  42013a:	xor    al,0x18
  42013c:	add    al,0x99
  42013e:	ins    BYTE PTR es:[edi],dx
  42013f:	mov    esi,0x25a1a652
  420144:	adc    eax,0x6d75ffae
  420149:	jmp    0x420174
  42014b:	mov    ah,0xd3
  42014d:	mov    dl,0xdc
  42014f:	test   eax,0xf0722524
  420154:	inc    eax
  420155:	push   0x65d2f66e
  42015a:	pop    ds
  42015b:	mov    eax,ds:0x450bb26d
  420160:	ins    BYTE PTR es:[edi],dx
  420161:	cmp    bh,al
  420163:	aaa    
  420164:	stos   BYTE PTR es:[edi],al
  420165:	jnp    0x4200ec
  420167:	pop    edi
  420168:	cmc    
  420169:	mov    bh,BYTE PTR [esi-0x10]
  42016c:	sar    DWORD PTR [edx+0x3ab9e6c9],cl
  420172:	and    al,0x7e
  420174:	js     0x4201a8
  420176:	aam    0x34
  420178:	mov    WORD PTR [ecx],es
  42017a:	jecxz  0x420194
  42017c:	outs   dx,BYTE PTR ds:[esi]
  42017d:	add    BYTE PTR [ecx+0x15ad2de4],dh
  420183:	mov    bh,0x57
  420185:	pushf  
  420186:	dec    ebx
  420187:	pop    ecx
  420188:	mov    eax,0x3b6ee7bb
  42018d:	xchg   esi,eax
  42018e:	xchg   dl,al
  420190:	leave  
  420191:	hlt    
  420192:	int    0xe4
  420194:	in     eax,0x37
  420196:	leave  
  420197:	pop    ebx
  420198:	cmp    al,0x98
  42019a:	hlt    
  42019b:	or     eax,0x923f7f22
  4201a0:	jp     0x4201ca
  4201a2:	add    esp,DWORD PTR [esi+0x23]
  4201a5:	mov    dl,0xa5
  4201a7:	jno    0x420163
  4201a9:	fimul  DWORD PTR [ecx-0xa3a1367]
  4201af:	ja     0x42016d
  4201b1:	dec    esp
  4201b2:	dec    eax
  4201b3:	ds fucomip st,st(7)
  4201b6:	stc    
  4201b7:	and    ecx,DWORD PTR [esi]
  4201b9:	stc    
  4201ba:	test   bh,bh
  4201bc:	and    dh,cl
  4201be:	dec    edx
  4201bf:	shl    DWORD PTR [ebp+0x68],1
  4201c2:	loop   0x42023b
  4201c4:	adc    ecx,0x17
  4201c7:	pop    ebp
  4201c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201c9:	mov    edx,0xb2b3948
  4201ce:	dec    esp
  4201cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201d0:	inc    eax
  4201d1:	std    
  4201d2:	adc    eax,0x45915c4
  4201d7:	mov    ah,0x2e
  4201d9:	xchg   ebp,eax
  4201da:	adc    eax,0x42b24bae
  4201df:	xchg   esp,eax
  4201e0:	xchg   DWORD PTR [esi+ebx*4-0x213804f],edx
  4201e7:	adc    al,0x92
  4201e9:	adc    bl,BYTE PTR [edx]
  4201eb:	fld    QWORD PTR [edi+0x6d]
  4201ee:	and    al,0x17
  4201f0:	lock addr16 push esi
  4201f3:	loope  0x42026f
  4201f5:	fiadd  DWORD PTR [ecx]
  4201f7:	pop    ebp
  4201f8:	sbb    esp,DWORD PTR gs:[ecx]
  4201fb:	xor    ch,BYTE PTR [edi-0x35]
  4201fe:	aaa    
  4201ff:	(bad)  
  420200:	sti    
  420201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420202:	mov    al,ds:0xfb00453c
  420207:	cmp    ah,BYTE PTR [edx-0x2fe09627]
  42020d:	enter  0x1f27,0x27
  420211:	stos   DWORD PTR es:[edi],eax
  420212:	inc    eax
  420213:	loopne 0x4201d4
  420215:	push   0x17
  420217:	push   ebp
  420218:	sbb    cl,BYTE PTR [eax+0x2f]
  42021b:	leave  
  42021c:	mov    bl,0xba
  42021e:	and    edx,DWORD PTR [ecx]
  420220:	dec    edi
  420221:	std    
  420222:	inc    edx
  420223:	jae    0x4201d5
  420225:	icebp  
  420226:	pushf  
  420227:	xor    dh,al
  420229:	fsubrp st(6),st
  42022b:	jb     0x4201ff
  42022d:	xchg   edi,eax
  42022e:	mov    esi,0x874e7814
  420233:	inc    ebp
  420234:	in     al,0xf5
  420236:	imul   eax,DWORD PTR [esp+esi*4+0x5f70afc6],0xffffffe9
  42023e:	pop    edx
  42023f:	cld    
  420240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420241:	add    BYTE PTR ds:0xbf06168e,dh
  420247:	sahf   
  420248:	xor    eax,0xa0e807bf
  42024d:	mov    edx,0x508571d5
  420252:	cld    
  420253:	ja     0x420256
  420255:	add    BYTE PTR [edi],ah
  420257:	add    eax,DWORD PTR [eax]
  420259:	add    BYTE PTR [ebx],bh
  42025b:	lock sti 
  42025d:	test   DWORD PTR [ebp+0x23990ecd],0x388b8132
  420267:	cdq    
  420268:	(bad)  
  420269:	stos   DWORD PTR es:[edi],eax
  42026a:	dec    ebp
  42026b:	call   0x2b6e786a
  420270:	jle    0x420291
  420272:	icebp  
  420273:	mov    edx,0xe5d4a0df
  420278:	mov    eax,0x365528ea
  42027d:	addr16 and eax,edi
  420280:	jmp    0xe2490d3f
  420285:	out    dx,eax
  420286:	mov    eax,ds:0xdf8f52f0
  42028b:	or     eax,DWORD PTR [eax+0x33]
  42028e:	ror    BYTE PTR [edi-0x1aab1648],1
  420294:	pushf  
  420295:	mov    bl,ah
  420297:	lea    ebp,[eax+0x6c4e1020]
  42029d:	pop    esi
  42029e:	inc    esp
  42029f:	popf   
  4202a0:	cmp    bl,dh
  4202a2:	ja     0x4202c7
  4202a4:	loopne 0x420316
  4202a6:	mov    al,0xd3
  4202a8:	lock retf 
  4202aa:	imul   esp,DWORD PTR [edi+0x65e8f01d],0x48d3b70b
  4202b4:	or     al,0x29
  4202b6:	add    bh,BYTE PTR [esi-0x28]
  4202b9:	mov    edi,0xd7b46d51
  4202be:	rcl    BYTE PTR [edx],0xea
  4202c1:	(bad)  
  4202c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202c3:	inc    ebp
  4202c4:	sbb    DWORD PTR [eax],ebp
  4202c6:	outs   dx,DWORD PTR ds:[esi]
  4202c7:	pop    edi
  4202c8:	xor    BYTE PTR [eax-0x4c],0x57
  4202cc:	sub    al,0x8f
  4202ce:	push   cs
  4202cf:	adc    al,0x88
  4202d1:	xchg   BYTE PTR [di-0x3033],ch
  4202d6:	shr    DWORD PTR [esi-0xf31a46b],0x66
  4202dd:	(bad)  
  4202de:	aaa    
  4202df:	out    dx,al
  4202e0:	ja     0x42031f
  4202e2:	mov    bh,0x9
  4202e4:	clc    
  4202e5:	jle    0x420290
  4202e7:	cmp    DWORD PTR [ebx],esp
  4202e9:	dec    edi
  4202ea:	xchg   esp,eax
  4202eb:	inc    ecx
  4202ec:	pop    ebx
  4202ed:	imul   esi,DWORD PTR [ebp-0x1f],0x56
  4202f1:	imul   edi,DWORD PTR [ebp+0xbf3e750],0x6b6e7238
  4202fb:	je     0x420300
  4202fd:	fld    st(2)
  4202ff:	mov    WORD PTR [esi-0x4e],cs
  420302:	inc    ebx
  420303:	repz cmp esi,DWORD PTR [edi]
  420306:	test   BYTE PTR [edi+0x457b1e12],cl
  42030c:	das    
  42030d:	cwde   
  42030e:	adc    BYTE PTR [esi-0x42],cl
  420311:	push   edx
  420312:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420313:	rcr    bl,0x9
  420316:	out    dx,al
  420317:	sbb    BYTE PTR [eax-0x2d],ch
  42031a:	icebp  
  42031b:	mov    WORD PTR [edi],fs
  42031d:	inc    BYTE PTR [ecx+0x28]
  420320:	mov    bh,0x63
  420322:	imul   eax,ebp,0x7b
  420325:	pop    ss
  420326:	int3   
  420327:	aam    0x36
  420329:	push   eax
  42032a:	fmulp  st(1),st
  42032c:	daa    
  42032d:	add    eax,0x59450f90
  420332:	push   eax
  420333:	add    ch,BYTE PTR [ebx-0x66]
  420336:	sbb    bh,BYTE PTR [edi+0x7144e007]
  42033c:	dec    ebp
  42033d:	ins    BYTE PTR es:[edi],dx
  42033e:	les    edx,FWORD PTR [esi]
  420340:	outs   dx,BYTE PTR ds:[esi]
  420341:	out    0x79,al
  420343:	or     cl,BYTE PTR ds:0xd2d2556a
  420349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42034a:	push   esi
  42034b:	jmp    0xa5d91dc5
  420350:	sub    ecx,DWORD PTR [ecx-0x67]
  420353:	int3   
  420354:	sbb    esi,0xfffffffb
  420357:	fstp   TBYTE PTR [ecx-0x18ad9861]
  42035d:	push   eax
  42035e:	xor    bl,BYTE PTR [eax]
  420360:	hlt    
  420361:	or     ebx,DWORD PTR [ecx-0x7]
  420364:	dec    ebx
  420365:	jg     0x420305
  420367:	pop    ss
  420368:	inc    edi
  420369:	jp     0x42033c
  42036b:	shr    BYTE PTR [ebp+0x44],1
  42036e:	das    
  42036f:	push   edx
  420370:	(bad)  
  420371:	fisubr DWORD PTR [ecx]
  420373:	retf   0x6652
  420376:	xor    DWORD PTR [edi],eax
  420378:	jnp    0x42033e
  42037a:	push   es
  42037b:	ret    
  42037c:	push   esi
  42037d:	out    dx,al
  42037e:	jns    0x4203e3
  420380:	sbb    bh,dl
  420382:	mov    eax,ds:0x3f4453fd
  420387:	iret   
  420388:	dec    eax
  420389:	xchg   DWORD PTR [edi],edi
  42038b:	arpl   si,sp
  42038d:	aas    
  42038e:	enter  0x6380,0xed
  420392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420393:	mov    BYTE PTR [eax],bl
  420395:	cmp    al,0xb4
  420397:	and    ah,BYTE PTR [ebx]
  420399:	ror    eax,cl
  42039b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42039c:	sub    esp,DWORD PTR [ebp-0x15]
  42039f:	inc    ebx
  4203a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203a1:	in     eax,0xa3
  4203a3:	adc    eax,0x428dcdf8
  4203a8:	cmp    DWORD PTR [edx],ebx
  4203aa:	in     al,dx
  4203ab:	pop    ebp
  4203ac:	daa    
  4203ad:	outs   dx,BYTE PTR ds:[esi]
  4203ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203af:	ins    DWORD PTR es:[edi],dx
  4203b0:	or     eax,0x370148ee
  4203b5:	jne    0x4203fe
  4203b7:	sub    BYTE PTR [ebx-0x60],bl
  4203ba:	mov    esi,0x9dba722e
  4203bf:	cmp    BYTE PTR [ebp+0x9c26c64],0x18
  4203c6:	add    BYTE PTR [edi+0x2c],dl
  4203c9:	xlat   BYTE PTR ds:[ebx]
  4203ca:	add    al,0x1c
  4203cc:	pop    edi
  4203cd:	and    BYTE PTR [ebp-0x9a8d1a4],bl
  4203d3:	rol    BYTE PTR [esi],cl
  4203d5:	scas   al,BYTE PTR es:[edi]
  4203d6:	jle    0x420456
  4203d8:	mov    BYTE PTR [edi+0x37476084],al
  4203de:	inc    esp
  4203df:	and    DWORD PTR [edi],esi
  4203e1:	fsubr  QWORD PTR [ebx-0x65]
  4203e4:	mov    ebp,0x7b0195b
  4203e9:	push   cs
  4203ea:	jbe    0x420425
  4203ec:	outs   dx,DWORD PTR ds:[esi]
  4203ed:	adc    BYTE PTR [ebp-0x3e],cl
  4203f0:	into   
  4203f1:	inc    edi
  4203f2:	or     ecx,DWORD PTR [ecx+0xf]
  4203f5:	fidivr WORD PTR [edx+0x36]
  4203f8:	push   es
  4203f9:	xor    bl,ch
  4203fb:	outs   dx,DWORD PTR ds:[esi]
  4203fc:	jbe    0x4203e2
  4203fe:	jbe    0x4203e8
  420400:	jg     0x420399
  420402:	or     al,0xf1
  420404:	daa    
  420405:	sbb    BYTE PTR [eax],bh
  420407:	icebp  
  420408:	out    0x61,eax
  42040a:	mov    esp,ebx
  42040c:	mov    ah,BYTE PTR [eax+0x53]
  42040f:	ror    BYTE PTR ss:[ebx+ebx*2],0xac
  420414:	push   cs
  420415:	stc    
  420416:	(bad)  
  420417:	jmp    0x4203ff
  420419:	bound  edi,QWORD PTR [ebp-0x3c]
  42041c:	outs   dx,DWORD PTR ds:[esi]
  42041d:	rcl    DWORD PTR ds:0x78e4c917,1
  420423:	adc    bl,bl
  420425:	sbb    eax,0xd0542a8
  42042a:	adc    al,0xf6
  42042c:	xchg   edx,eax
  42042d:	inc    eax
  42042e:	and    eax,0x9c778348
  420433:	and    dh,bh
  420435:	push   0x70
  420437:	daa    
  420438:	xor    edi,DWORD PTR [edi-0x22]
  42043b:	mov    fs,WORD PTR [esp+ebp*8]
  42043e:	pop    es
  42043f:	pop    eax
  420440:	idiv   BYTE PTR [edx-0x29]
  420443:	lahf   
  420444:	aam    0xf7
  420446:	pop    esp
  420447:	imul   edx,DWORD PTR [ebx+0x2faecdde],0x25da8bb1
  420451:	push   eax
  420452:	lods   eax,DWORD PTR ds:[esi]
  420453:	aas    
  420454:	xchg   esp,eax
  420455:	inc    ebx
  420456:	sahf   
  420457:	xor    BYTE PTR [ecx-0x7aa44821],bh
  42045d:	sub    esi,DWORD PTR [edx]
  42045f:	idiv   BYTE PTR [edi+0x25]
  420462:	fwait
  420463:	ss clc 
  420465:	xchg   ebx,eax
  420466:	or     BYTE PTR [ebp-0x31],al
  420469:	(bad)  
  42046a:	std    
  42046b:	push   ds
  42046c:	fild   QWORD PTR [ebp+0x27]
  42046f:	test   dl,bh
  420471:	or     eax,0x80679658
  420476:	idiv   DWORD PTR [ebx+0x4a]
  420479:	js     0x420447
  42047b:	das    
  42047c:	xchg   esi,eax
  42047d:	aam    0xbf
  42047f:	dec    ebx
  420480:	(bad)  
  420481:	mov    dh,0x93
  420483:	add    cl,BYTE PTR [edi+eax*2-0x18c63ec9]
  42048a:	or     ecx,DWORD PTR ds:0xf6fc17e2
  420490:	sbb    esp,DWORD PTR [ecx]
  420492:	popa   
  420493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420494:	push   eax
  420495:	mov    DWORD PTR [eax-0x72],eax
  420498:	cmpxchg DWORD PTR [eax-0x32],ebp
  42049c:	mov    edi,0xb8240c41
  4204a1:	and    al,0xa1
  4204a3:	sbb    DWORD PTR [ebp+0x70ee541e],esi
  4204a9:	lods   eax,DWORD PTR ds:[esi]
  4204aa:	jae    0x4204d3
  4204ac:	inc    esi
  4204ad:	mov    ds:0x7dce2a13,al
  4204b2:	jecxz  0x420452
  4204b4:	test   DWORD PTR [ebx+edx*1+0x129e47b1],esi
  4204bb:	dec    ecx
  4204bc:	push   es
  4204bd:	sbb    BYTE PTR [ebp+0x15885c41],bh
  4204c3:	retf   0x117a
  4204c6:	cld    
  4204c7:	rol    dh,0xfb
  4204ca:	fld    DWORD PTR [ebx+0x19]
  4204cd:	gs gs (bad) 
  4204d1:	out    dx,eax
  4204d2:	push   eax
  4204d3:	adc    DWORD PTR [ebp-0x9],edi
  4204d6:	repz jbe 0x420474
  4204d9:	(bad)  
  4204da:	pushf  
  4204db:	jnp    0x42054d
  4204dd:	mov    edi,0x21ebbf79
  4204e2:	inc    ecx
  4204e3:	ja     0x420506
  4204e5:	imul   edi,DWORD PTR gs:[ebx+0x49],0xdcfc1e7e
  4204ed:	icebp  
  4204ee:	and    DWORD PTR [ecx-0x15],ecx
  4204f1:	pop    es
  4204f2:	cmp    esi,esi
  4204f4:	xchg   ebx,eax
  4204f5:	lods   eax,DWORD PTR ds:[esi]
  4204f6:	push   ss
  4204f7:	popa   
  4204f8:	scas   al,BYTE PTR es:[edi]
  4204f9:	cwde   
  4204fa:	repz push ebp
  4204fc:	mov    ds:0xd0541af0,eax
  420501:	pop    ss
  420502:	jmp    DWORD PTR ds:0xa573c95f
  420508:	mov    ch,0xbc
  42050a:	xlat   BYTE PTR ds:[ebx]
  42050b:	xchg   esp,eax
  42050c:	add    al,0xa8
  42050e:	dec    eax
  42050f:	xor    eax,0xa2887c41
  420514:	mov    eax,ebx
  420516:	imul   edi,edi,0xffffffd2
  420519:	icebp  
  42051a:	rol    BYTE PTR ds:0x8ea81c33,1
  420520:	aad    0x2
  420522:	test   BYTE PTR [ebx+0x64],dl
  420525:	cmc    
  420526:	xor    al,0x2d
  420528:	cmc    
  420529:	mov    dh,0x53
  42052b:	mov    ebp,0xe0815b86
  420530:	out    0x37,al
  420532:	ret    0x4575
  420535:	cmp    DWORD PTR [edx],0xffffff9d
  420538:	inc    ebp
  420539:	xor    edi,ebx
  42053b:	sub    al,0xd5
  42053d:	sub    al,0x7c
  42053f:	jmp    0x5073:0xc0daf763
  420546:	fnsave [ecx]
  420548:	test   al,0x14
  42054a:	adc    cl,BYTE PTR [edx-0x47]
  42054d:	sub    BYTE PTR [edx],0xec
  420550:	xchg   BYTE PTR ds:0xd68a7b48,dh
  420556:	mov    DWORD PTR [edx],ecx
  420558:	or     eax,0x35835355
  42055d:	in     al,0x48
  42055f:	xchg   esi,eax
  420560:	in     eax,0xa4
  420562:	mov    edi,0x77bccffe
  420567:	adc    DWORD PTR [edx],edx
  420569:	pop    esi
  42056a:	inc    edx
  42056b:	sub    esp,DWORD PTR [ebp-0x63]
  42056e:	out    dx,eax
  42056f:	das    
  420570:	int3   
  420571:	icebp  
  420572:	mov    ebp,0xdfb8f572
  420577:	jmp    0x604b93f6
  42057c:	sub    edi,edi
  42057e:	call   DWORD PTR [esi+0x1e]
  420581:	add    cl,bh
  420583:	std    
  420584:	in     eax,dx
  420585:	mov    cl,0xed
  420587:	mov    cl,0xfd
  420589:	std    
  42058a:	pop    ds
  42058b:	xor    dl,0xed
  42058e:	leave  
  42058f:	sub    al,BYTE PTR [ecx+0x17b23a1]
  420595:	add    BYTE PTR [edi],ah
  420597:	add    eax,DWORD PTR [eax]
  420599:	add    dh,dl
  42059b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42059c:	add    esp,esp
  42059e:	jbe    0x42053f
  4205a0:	mov    cl,0x88
  4205a2:	push   es
  4205a3:	je     0x420547
  4205a5:	mov    BYTE PTR ds:0xf3ad8b72,cl
  4205ab:	push   ds
  4205ac:	mov    al,ds:0x5615ca7f
  4205b1:	mov    ds:0x8d1508ee,al
  4205b6:	mov    eax,ds:0x1f743786
  4205bb:	ja     0x420592
  4205bd:	mov    DWORD PTR [ecx-0xb208086],0x13a84716
  4205c7:	inc    edx
  4205c8:	test   bl,bl
  4205ca:	push   eax
  4205cb:	adc    dh,dl
  4205cd:	jno    0x4205d6
  4205cf:	mov    bl,0x21
  4205d1:	cwde   
  4205d2:	bound  ebx,QWORD PTR [ebp+0x2f02dbfc]
  4205d8:	shr    BYTE PTR [edi+ecx*2-0x3c1001ef],1
  4205df:	(bad)  
  4205e0:	retf   0x592a
  4205e3:	jmp    0x4205bb
  4205e5:	cmp    eax,0x75cf2acc
  4205ea:	fild   WORD PTR [edx+eax*1-0x5742b375]
  4205f1:	arpl   WORD PTR [edi],bx
  4205f3:	push   esi
  4205f4:	mov    eax,ds:0x644cc5db
  4205f9:	jns    0x420610
  4205fb:	jb     0x42061a
  4205fd:	inc    edx
  4205fe:	xchg   esi,eax
  4205ff:	dec    ebp
  420600:	push   0xffffff80
  420602:	outs   dx,BYTE PTR ds:[esi]
  420603:	add    ebp,ebp
  420605:	retf   0x7ec8
  420608:	push   cs
  420609:	xor    DWORD PTR [ecx],esi
  42060b:	sti    
  42060c:	xor    al,BYTE PTR [esi-0x6e]
  42060f:	shr    DWORD PTR ds:0xbf9bca8,1
  420615:	xor    esp,DWORD PTR [esi]
  420617:	and    ah,BYTE PTR [edi-0x2ad2fbe5]
  42061d:	xor    al,0x63
  42061f:	les    ebp,FWORD PTR [ebx]
  420621:	test   al,0x5a
  420623:	jg     0x4205f3
  420625:	in     eax,0x2b
  420627:	repnz scas al,BYTE PTR es:[edi]
  420629:	sub    BYTE PTR es:[esi-0x1d],dl
  42062d:	pop    edx
  42062e:	adc    al,BYTE PTR [esi+0x21]
  420631:	mov    WORD PTR [eax],ds
  420633:	stos   DWORD PTR es:[edi],eax
  420634:	test   BYTE PTR [ebx],ch
  420636:	enter  0xff1b,0x1a
  42063a:	loop   0x420624
  42063c:	jne    0x4205fa
  42063e:	pcmpeqw mm4,mm4
  420641:	xchg   edx,eax
  420642:	dec    esp
  420643:	out    dx,al
  420644:	add    DWORD PTR ds:0xbc108ff5,0xfffffff5
  42064b:	or     al,0x5b
  42064d:	dec    ebp
  42064e:	(bad)  
  42064f:	ffreep st(4)
  420651:	cmc    
  420652:	sub    BYTE PTR ds:0xdebf3287,dh
  420658:	sub    ebx,DWORD PTR ds:0x26befdd8
  42065e:	and    eax,DWORD PTR [esi]
  420660:	and    bh,dl
  420662:	(bad)  fs:[edi-0x515f4bce]
  420669:	xchg   ebp,eax
  42066a:	jmp    0x7fb45b75
  42066f:	sbb    BYTE PTR [ebx+0x29ceb341],dh
  420675:	test   DWORD PTR [edi],0xf009ad0e
  42067b:	mov    bh,0xf
  42067d:	pop    esi
  42067e:	aam    0xa5
  420680:	imul   esi,DWORD PTR [esi-0xbb44b01],0x59e1a794
  42068a:	shl    BYTE PTR [ebp+0x1f0ad20],1
  420690:	repz sahf 
  420692:	sub    esi,edx
  420694:	pop    edx
  420695:	push   edx
  420696:	push   ecx
  420697:	mov    cl,0x56
  420699:	xchg   bl,ch
  42069b:	(bad)  
  42069c:	pop    ds
  42069d:	scas   al,BYTE PTR es:[edi]
  42069e:	pop    ds
  42069f:	inc    esi
  4206a0:	sub    DWORD PTR [ecx+0xa],edi
  4206a3:	in     al,0xb8
  4206a5:	mov    dl,0xfd
  4206a7:	xchg   BYTE PTR [esi+0x4c351950],ah
  4206ad:	push   es
  4206ae:	imul   ebp,DWORD PTR [esi],0xbe3ac239
  4206b4:	repz shr dl,cl
  4206b7:	sbb    BYTE PTR [esi+0x2c953b58],bh
  4206bd:	retf   
  4206be:	outs   dx,BYTE PTR ds:[esi]
  4206bf:	(bad)  
  4206c0:	out    dx,eax
  4206c1:	(bad)  
  4206c2:	cld    
  4206c3:	pop    ebp
  4206c5:	push   0xffffff9b
  4206c7:	lds    ebp,FWORD PTR ds:0xe886750d
  4206cd:	push   edi
  4206ce:	inc    esp
  4206cf:	mov    ds:0x90c6ebe1,eax
  4206d4:	retf   
  4206d5:	mov    eax,ds:0x56181328
  4206da:	and    eax,0x3813545f
  4206df:	adc    BYTE PTR [esi-0x281b00b5],0x70
  4206e6:	mov    DWORD PTR [ecx+0x64],edi
  4206e9:	cld    
  4206ea:	(bad)  
  4206ec:	cli    
  4206ed:	jp     0x420728
  4206ef:	xor    ebx,edi
  4206f1:	add    DWORD PTR [ebp+0x37408135],eax
  4206f7:	into   
  4206f8:	cmp    al,0x8e
  4206fa:	add    BYTE PTR [ecx-0x1f],bh
  4206fd:	(bad)  
  4206fe:	ins    DWORD PTR es:[edi],dx
  4206ff:	inc    ebp
  420700:	mov    ds:0x110d0f57,eax
  420705:	in     al,dx
  420706:	iret   
  420707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420708:	adc    al,BYTE PTR [edi]
  42070a:	mov    cl,ch
  42070c:	into   
  42070d:	aas    
  42070e:	push   cs
  42070f:	mov    dl,0xc5
  420711:	jo     0x42078c
  420713:	and    DWORD PTR [ebx-0x147b941b],edx
  420719:	jmp    0x420737
  42071b:	(bad)  
  42071d:	fsubr  DWORD PTR [esi]
  42071f:	rol    DWORD PTR [eax-0x2d632f5f],1
  420725:	xor    eax,0xbf1a5055
  42072a:	lea    esi,[eax+0x3bd9a845]
  420730:	leave  
  420731:	add    DWORD PTR [edx+eiz*2+0x2b76f0e9],esi
  420738:	and    eax,0xe2fb3d23
  42073d:	pop    ebp
  42073e:	mov    dl,0x70
  420740:	inc    ebp
  420741:	mov    bh,0xe7
  420743:	mov    BYTE PTR [edx-0x5],dh
  420746:	fimul  DWORD PTR [eax+0x5f]
  420749:	rol    BYTE PTR [esp+edx*1+0x39],1
  42074d:	mov    dh,0xc
  42074f:	rol    DWORD PTR [ecx+0x2],1
  420752:	sbb    eax,ebp
  420754:	jp     0x420763
  420756:	push   ss
  420757:	mov    ds:0x54fc74dd,eax
  42075c:	btc    eax,ecx
  42075f:	mov    edi,0x9d68e0c2
  420764:	lea    ebp,ds:0x391ec31d
  42076a:	not    DWORD PTR [edx]
  42076c:	push   ecx
  42076d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42076e:	inc    esp
  42076f:	mov    ebx,0x36fd8fdb
  420774:	add    eax,0x2b045dc7
  420779:	dec    ebx
  42077a:	loopne 0x42070c
  42077c:	aaa    
  42077d:	sub    DWORD PTR [ecx+0x6aa82233],ecx
  420783:	dec    edx
  420784:	mov    DWORD PTR [ebp+0x36],0x61577aef
  42078b:	xchg   BYTE PTR [edx-0x2c],bl
  42078e:	in     eax,0x97
  420790:	push   es
  420791:	mov    ah,0x68
  420793:	out    dx,eax
  420794:	icebp  
  420795:	sbb    esp,DWORD PTR [eax]
  420797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420798:	popf   
  420799:	jns    0x42079f
  42079b:	call   0x719c6034
  4207a0:	pop    edx
  4207a1:	sub    eax,0x244900d8
  4207a6:	(bad)
  4207aa:	mov    al,ds:0x205ed215
  4207af:	sub    BYTE PTR ds:0x1d8c272c,ah
  4207b5:	mov    edi,0x687d78fa
  4207ba:	cs and eax,0xba13fa94
  4207c0:	push   ss
  4207c1:	pop    eax
  4207c2:	push   ecx
  4207c3:	xor    cl,BYTE PTR [ecx]
  4207c5:	xlat   BYTE PTR ds:[ebx]
  4207c6:	int3   
  4207c7:	sahf   
  4207c8:	adc    cl,dh
  4207ca:	cmp    esp,DWORD PTR [edi+edi*1]
  4207cd:	aas    
  4207ce:	fld    TBYTE PTR [ebx]
  4207d0:	out    dx,al
  4207d1:	sbb    al,0x99
  4207d3:	jbe    0x420756
  4207d5:	or     al,0xb8
  4207d7:	aas    
  4207d8:	out    0xea,al
  4207da:	lea    ecx,[esi+esi*2+0x3]
  4207de:	(bad)  
  4207df:	dec    ebx
  4207e0:	add    DWORD PTR [eax+0x258f0c7a],0x46
  4207e7:	outs   dx,BYTE PTR ds:[esi]
  4207e8:	fld    DWORD PTR [esp+edi*2-0x4a]
  4207ec:	mov    dh,0x5e
  4207ee:	pop    esi
  4207ef:	fistp  DWORD PTR [ebp+0x32]
  4207f2:	mov    dl,0x4f
  4207f4:	mov    edx,0xecaefd17
  4207f9:	(bad)  
  4207fa:	xchg   esp,eax
  4207fb:	mov    ds:0x6270d562,eax
  420800:	hlt    
  420801:	xlat   BYTE PTR ds:[ebx]
  420802:	xor    al,0xd
  420804:	jnp    0x420802
  420806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420807:	retf   0xa48e
  42080a:	adc    ebp,ecx
  42080c:	js     0x420841
  42080e:	xor    BYTE PTR ds:0x9f77c830,ah
  420814:	pop    edi
  420815:	add    dl,ah
  420817:	repz mov eax,0x2754f524
  42081d:	push   cs
  42081e:	add    al,0xf2
  420820:	sbb    BYTE PTR [ecx-0x37],cl
  420823:	sub    BYTE PTR [edx],bh
  420825:	xchg   ebx,eax
  420826:	(bad)  
  420827:	(bad)  
  420828:	push   ebp
  420829:	cmp    al,0x34
  42082b:	xor    ch,BYTE PTR [esi+0x69b3f265]
  420831:	sub    DWORD PTR [esi+ebp*2],0x41a405d8
  420838:	xchg   esp,eax
  420839:	or     esp,DWORD PTR [edi]
  42083b:	dec    edi
  42083c:	sub    DWORD PTR [ecx+edx*2-0x39315f1],eax
  420843:	jae    0x42085a
  420845:	lock stos BYTE PTR es:[edi],al
  420847:	add    eax,0x83348789
  42084c:	popa   
  42084d:	fs xchg eax,esi
  420850:	mov    bl,0x5b
  420852:	mov    ebx,0xd6d5d509
  420857:	jnp    0x4208cd
  420859:	(bad)  
  42085a:	and    BYTE PTR [edi],ch
  42085c:	stos   DWORD PTR es:[edi],eax
  42085d:	or     BYTE PTR [esp+ecx*4],ch
  420860:	xor    esi,DWORD PTR ds:0x2e3f9e46
  420866:	xor    edi,0xffffff84
  420869:	sub    edx,DWORD PTR [edx]
  42086b:	mov    edi,0x76dd48e
  420870:	ja     0x4208cf
  420872:	push   es
  420873:	in     al,0x23
  420875:	cmp    al,0xf7
  420877:	xchg   ebp,eax
  420878:	dec    esi
  420879:	jae    0x42084b
  42087b:	cmp    dl,dl
  42087d:	nop
  42087e:	mov    dh,BYTE PTR [esi-0x6f]
  420881:	sub    al,0xfa
  420883:	and    DWORD PTR [ecx+0x76e67f7b],edx
  420889:	sti    
  42088a:	fstp   DWORD PTR [edi+0x4c]
  42088d:	mov    bl,0x4e
  42088f:	enter  0xb335,0xa3
  420893:	(bad)  
  420894:	mov    ecx,DWORD PTR [eax]
  420896:	in     al,0x71
  420898:	jbe    0x4208ba
  42089a:	push   0xadff0119
  42089f:	in     eax,0x64
  4208a1:	int    0x91
  4208a3:	jecxz  0x4208ba
  4208a5:	cmc    
  4208a6:	push   ebp
  4208a7:	fchs   
  4208a9:	mov    ds:0x3a5b3460,al
  4208ae:	out    0x11,eax
  4208b0:	iret   
  4208b1:	push   0x8aa65b1d
  4208b6:	jecxz  0x420851
  4208b8:	mov    cl,BYTE PTR [edx]
  4208ba:	cwde   
  4208bb:	push   ecx
  4208bc:	jge    0x42090b
  4208be:	test   DWORD PTR [eax],esi
  4208c0:	or     al,0x0
  4208c2:	repnz rol BYTE PTR ds:0xf6d53751,0xe3
  4208ca:	out    dx,al
  4208cb:	sub    ebp,esp
  4208cd:	andnps xmm1,xmm1
  4208d0:	in     eax,0xd4
  4208d2:	dec    edx
  4208d3:	jle    0x4208d6
  4208d5:	add    BYTE PTR [edi],ah
  4208d7:	add    eax,DWORD PTR [eax]
  4208d9:	add    BYTE PTR [edi],bh
  4208db:	jge    0x420873
  4208dd:	loope  0x420902
  4208df:	adc    DWORD PTR [eax],edx
  4208e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208e2:	call   0xc941:0xc6b5005a
  4208e9:	pop    ebp
  4208ea:	mov    ebp,0x56d9981
  4208ef:	push   es
  4208f0:	push   ecx
  4208f1:	cli    
  4208f2:	cmp    ebx,DWORD PTR [ecx-0x668a46e5]
  4208f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208f9:	sahf   
  4208fa:	pop    ss
  4208fb:	mov    al,0x30
  4208fd:	shr    edx,cl
  4208ff:	out    dx,eax
  420900:	xchg   ecx,eax
  420901:	mov    esp,0x3e080642
  420906:	pop    ecx
  420907:	push   cs
  420908:	iret   
  420909:	xorps  xmm5,xmm0
  42090c:	xchg   ebx,eax
  42090d:	in     eax,dx
  42090e:	push   ds
  42090f:	lods   al,BYTE PTR ds:[esi]
  420910:	mov    ah,0xf
  420912:	inc    ecx
  420913:	das    
  420914:	dec    ecx
  420915:	pop    ebx
  420916:	dec    edx
  420917:	push   ds
  420918:	out    0xd2,eax
  42091a:	into   
  42091b:	jecxz  0x420999
  42091d:	iret   
  42091e:	data16 fstp DWORD PTR [ecx+0x14]
  420922:	gs nop
  420924:	stc    
  420925:	fnstsw WORD PTR fs:0x746054fb
  42092c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42092d:	mov    ah,0xeb
  42092f:	jmp    0x5246:0x104a7619
  420936:	sub    ebp,edx
  420938:	jecxz  0x42094d
  42093a:	int    0x7f
  42093c:	sahf   
  42093d:	dec    ecx
  42093e:	stos   DWORD PTR es:[edi],eax
  42093f:	pop    edi
  420940:	pop    eax
  420941:	adc    eax,0x4cb92dd6
  420946:	test   BYTE PTR [edx+0x2d6b93b0],bl
  42094c:	jb     0x4209ab
  42094e:	je     0x4209b0
  420950:	cs and al,0x18
  420953:	cmp    ah,BYTE PTR [edx]
  420955:	(bad)  
  420956:	dec    BYTE PTR [ecx+0x0]
  420959:	xchg   esi,eax
  42095a:	fbld   TBYTE PTR [ecx+eiz*2]
  42095d:	xchg   ecx,eax
  42095e:	cmp    DWORD PTR [esi+0xb],ecx
  420961:	mov    DWORD PTR [edx],edx
  420963:	dec    ebp
  420964:	and    bh,BYTE PTR ds:0x2bf68a44
  42096a:	mov    cl,0xa4
  42096c:	push   eax
  42096d:	dec    eax
  42096e:	loop   0x4209a5
  420970:	addr16 inc ecx
  420972:	(bad)  
  420973:	and    al,ch
  420975:	pop    es
  420976:	rol    BYTE PTR [edx+edx*8-0x2dc2bda9],1
  42097d:	scas   eax,DWORD PTR es:[edi]
  42097e:	push   es
  42097f:	cmp    al,0x3
  420981:	mov    dl,0x45
  420983:	nop
  420984:	mov    al,ds:0x1d8b7b50
  420989:	mov    DWORD PTR [edx],ecx
  42098b:	adc    ebp,eax
  42098d:	or     al,0xb4
  42098f:	cmp    cl,BYTE PTR [eax+0x97331f0]
  420995:	imul   DWORD PTR [ebp-0x3f]
  420998:	sahf   
  420999:	data16 prefetchwt1 (bad)
  42099b:	or     eax,0xba29ddd0
  4209a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209a1:	add    dh,BYTE PTR [edx-0x2b]
  4209a4:	lds    esi,FWORD PTR [ebp+0x4405b0d]
  4209aa:	outs   dx,BYTE PTR ds:[esi]
  4209ab:	leave  
  4209ac:	ret    0xd020
  4209af:	sub    eax,0x3a588a
  4209b4:	(bad)  
  4209b6:	jnp    0x4209ec
  4209b8:	mov    bl,0xda
  4209ba:	mov    ds:0x35a8d821,eax
  4209bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209c0:	xor    DWORD PTR ds:0x9a9b40c3,ecx
  4209c6:	sbb    bl,bl
  4209c8:	mov    WORD PTR [edi+edi*1+0x26],gs
  4209cc:	jg     0x420a1d
  4209ce:	cmp    esi,ebx
  4209d0:	pop    ecx
  4209d1:	gs jno 0x4209c0
  4209d4:	sub    BYTE PTR [edi],ah
  4209d6:	iret   
  4209d7:	sub    DWORD PTR [ebp+0x5c],ebp
  4209da:	aad    0x78
  4209dc:	ss mov dl,0x14
  4209df:	cwde   
  4209e0:	jmp    0x2cb:0x2e9fcdcf
  4209e7:	mov    bh,0xce
  4209e9:	mov    al,0xab
  4209eb:	scas   eax,DWORD PTR es:[edi]
  4209ec:	cmp    eax,0x6c7205d9
  4209f1:	imul   eax
  4209f3:	dec    eax
  4209f4:	les    edi,FWORD PTR [eax-0x20]
  4209f7:	add    ch,bh
  4209f9:	pop    ss
  4209fa:	call   0xa94b:0xf9fceae8
  420a01:	test   al,0x9a
  420a03:	adc    eax,eax
  420a05:	idiv   BYTE PTR [ebx+0x53bb2d7a]
  420a0b:	loopne 0x420a4f
  420a0d:	in     eax,dx
  420a0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a0f:	int    0xb1
  420a11:	inc    esi
  420a12:	add    eax,0x8cd5e296
  420a17:	iret   
  420a18:	and    al,0x8e
  420a1a:	lock call 0x7151:0x305d21d9
  420a22:	jns    0x4209fe
  420a24:	jl     0x420a43
  420a26:	mov    edx,0x2dad6efc
  420a2b:	push   edx
  420a2c:	xchg   BYTE PTR [ecx],al
  420a2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a2f:	jmp    0x420a5f
  420a31:	call   0xec064e0
  420a36:	hlt    
  420a37:	das    
  420a38:	and    DWORD PTR [ebx+edx*2+0x34f6172f],0x8c62a139
  420a43:	test   DWORD PTR [ecx],edi
  420a45:	sub    dl,cl
  420a47:	add    eax,0xd15ee32b
  420a4c:	dec    esp
  420a4d:	and    al,0x71
  420a4f:	dec    ebx
  420a50:	enter  0x37c0,0x79
  420a54:	inc    edi
  420a55:	sub    DWORD PTR ds:[ebx+0x0],ecx
  420a59:	cmp    DWORD PTR [edx],0xffffff9e
  420a5c:	sbb    BYTE PTR [ecx],ch
  420a5e:	fld    TBYTE PTR [ebx-0x1c9951bc]
  420a64:	dec    edi
  420a65:	scas   al,BYTE PTR es:[edi]
  420a66:	mov    esi,0x25a0a3a2
  420a6b:	add    bh,BYTE PTR [ebp+0x6f]
  420a6e:	mov    ebp,0xf8b85705
  420a73:	lds    esi,FWORD PTR [ecx+0x55]
  420a76:	adc    BYTE PTR [esp+eax*8],bl
  420a79:	mov    edx,0xf732b320
  420a7e:	or     ebx,ebx
  420a80:	push   ebp
  420a81:	jnp    0x420a2a
  420a83:	push   esp
  420a84:	sub    al,0x6b
  420a86:	in     eax,0xb6
  420a88:	mov    gs,WORD PTR [ecx-0x79]
  420a8b:	aad    0x50
  420a8d:	add    eax,DWORD PTR [eax]
  420a8f:	mov    ds:0xe80c827f,eax
  420a94:	xlat   BYTE PTR ds:[ebx]
  420a95:	ds push ss
  420a97:	shr    BYTE PTR [ecx],1
  420a99:	mov    esp,0x188bfc12
  420a9e:	jb     0x420ac0
  420aa0:	cmc    
  420aa1:	mov    eax,ds:0x60b5ccae
  420aa6:	pop    ebx
  420aa7:	cdq    
  420aa8:	mov    gs,WORD PTR [edx+0x12828097]
  420aae:	dec    ebx
  420aaf:	or     cl,BYTE PTR [ebx]
  420ab1:	lea    ebx,[esi-0x48]
  420ab4:	shl    BYTE PTR [ecx-0x49269029],0xf6
  420abb:	pop    esi
  420abc:	jge    0x420a59
  420abe:	sub    dh,BYTE PTR [eax-0x5883023a]
  420ac4:	pcmpeqd mm1,QWORD PTR [ebx]
  420ac7:	pop    es
  420ac8:	pop    ss
  420ac9:	cmp    DWORD PTR [ebp-0x27],edx
  420acc:	(bad)  
  420acd:	loope  0x420aa5
  420acf:	pushf  
  420ad0:	test   DWORD PTR [edi+0x65],esp
  420ad3:	mov    dl,0xd9
  420ad5:	push   0xffffffda
  420ad7:	cmp    al,0xc6
  420ad9:	sub    al,BYTE PTR [edx-0x71]
  420adc:	push   esp
  420add:	jmp    0x15990f85
  420ae2:	(bad)
  420ae6:	pop    eax
  420ae7:	or     eax,0x9a3d2dd7
  420aec:	mov    ebp,0x7d9df037
  420af1:	arpl   WORD PTR [ecx+0x5d9e7f0a],bx
  420af7:	cmp    edx,DWORD PTR [esi]
  420af9:	dec    eax
  420afa:	cli    
  420afb:	in     al,dx
  420afc:	mov    al,ds:0xdf750af9
  420b01:	fnstenv [edi]
  420b03:	cld    
  420b04:	push   0xffffffe3
  420b06:	mov    bh,0x76
  420b08:	dec    ebp
  420b09:	stc    
  420b0a:	push   ds
  420b0b:	test   ebp,ecx
  420b0d:	xor    al,BYTE PTR [ebx+eax*4+0x68]
  420b11:	daa    
  420b12:	aas    
  420b13:	(bad)  
  420b14:	(bad)  
  420b15:	cmp    eax,0x4ae9c160
  420b1a:	add    DWORD PTR [edx+0x18e6ca4b],edi
  420b20:	mov    dl,0xe9
  420b22:	sub    DWORD PTR ds:0x44f752a1,ebp
  420b28:	ror    DWORD PTR [esi],0xb5
  420b2b:	dec    ecx
  420b2c:	inc    esi
  420b2d:	mov    ebx,0x4c8e5ef0
  420b32:	in     al,dx
  420b33:	pop    ebx
  420b34:	call   0xe69a:0x4870ea34
  420b3b:	add    ah,dh
  420b3d:	jp     0x420b5e
  420b3f:	retf   
  420b40:	mov    ebp,0x88760d46
  420b45:	outs   dx,DWORD PTR ds:[esi]
  420b46:	std    
  420b47:	and    ah,BYTE PTR [ecx+0x36]
  420b4a:	jp     0x420ba7
  420b4c:	jg     0x420af2
  420b4e:	cmp    esi,ecx
  420b50:	adc    dh,al
  420b52:	jl     0x420b3a
  420b54:	jl     0x420b88
  420b56:	sbb    eax,0xfe68f030
  420b5b:	dec    esi
  420b5c:	and    edx,DWORD PTR [ebx-0x42]
  420b5f:	das    
  420b60:	mov    edx,0x3b06a3fe
  420b65:	sbb    DWORD PTR [ebx+0x56],esi
  420b68:	mov    edx,0x209d825d
  420b6d:	sbb    dl,dl
  420b6f:	push   cs
  420b70:	pusha  
  420b71:	bnd ret 
  420b73:	push   ds
  420b74:	fisubr WORD PTR [ebp+0x4194ef9d]
  420b7a:	stc    
  420b7b:	inc    ecx
  420b7c:	cdq    
  420b7d:	das    
  420b7e:	sbb    eax,DWORD PTR [ebx+0x469f7332]
  420b84:	adc    eax,0x88a9d31b
  420b89:	shl    DWORD PTR [eax+0x11],0xd2
  420b8d:	jae    0x420b7d
  420b8f:	push   cs
  420b90:	aaa    
  420b91:	stos   BYTE PTR es:[edi],al
  420b92:	push   ecx
  420b93:	outs   dx,BYTE PTR ds:[esi]
  420b94:	or     dl,dl
  420b96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b97:	fdivr  QWORD PTR [edx+0x3]
  420b9a:	(bad)  
  420b9b:	xor    ax,0x7ad6
  420b9f:	add    esp,DWORD PTR [edi-0x31]
  420ba2:	mov    ds:0x37251452,al
  420ba7:	leave  
  420ba8:	add    al,0xfb
  420baa:	and    al,0x47
  420bac:	jmp    0xa026ebfa
  420bb1:	adc    al,0xb8
  420bb3:	aam    0xf7
  420bb5:	sbb    esp,DWORD PTR [esi+0x63]
  420bb8:	xor    ah,ah
  420bba:	and    BYTE PTR [ebx-0x21],0x65
  420bbe:	(bad)  
  420bbf:	jle    0x420ba8
  420bc1:	ss mov dl,0xcd
  420bc4:	xor    al,0x2b
  420bc6:	pop    ds
  420bc7:	jae    0x420b76
  420bc9:	push   ebx
  420bca:	test   BYTE PTR [ebp-0x6a],ah
  420bcd:	mov    ch,0x99
  420bcf:	stos   BYTE PTR es:[edi],al
  420bd0:	push   ecx
  420bd1:	mov    dl,0xb2
  420bd3:	cmp    BYTE PTR [edx],ah
  420bd5:	and    esi,ecx
  420bd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bd8:	sbb    BYTE PTR [ebp-0x4ccd41f],bh
  420bde:	and    DWORD PTR [esi+0x4b],eax
  420be1:	add    DWORD PTR [eax-0x23db9913],edx
  420be7:	jmp    0x420c2a
  420be9:	(bad)  
  420bea:	xchg   ecx,eax
  420beb:	and    esi,ebp
  420bed:	push   ds
  420bee:	out    dx,eax
  420bef:	jmp    0x873a:0x4bd8506a
  420bf6:	push   0x1cea1881
  420bfb:	pop    esp
  420bfc:	das    
  420bfd:	out    0xfd,eax
  420bff:	repz inc ecx
  420c01:	add    BYTE PTR [ebx+0x41],al
  420c04:	popa   
  420c05:	data16 arpl WORD PTR [esi+0x47],sp
  420c09:	rcr    DWORD PTR gs:[edi+0x16],cl
  420c0d:	xor    BYTE PTR [edi+0x71b055a3],bl
  420c13:	add    DWORD PTR [ecx],0x32700
  420c19:	add    BYTE PTR [ecx+ecx*2],dh
  420c1c:	in     eax,dx
  420c1d:	leave  
  420c1e:	rol    BYTE PTR [esp+esi*4],0x3e
  420c22:	clc    
  420c23:	dec    eax
  420c24:	pop    edx
  420c25:	and    bl,BYTE PTR fs:[esi]
  420c28:	repz arpl WORD PTR [ecx-0x8],ax
  420c2c:	sbb    ch,BYTE PTR [ebp+0x6c059925]
  420c32:	sti    
  420c33:	mov    eax,0xeb50ace3
  420c38:	push   0xffffffbd
  420c3a:	je     0x420c96
  420c3c:	mov    ah,0x85
  420c3e:	xchg   ebx,eax
  420c3f:	fcom   DWORD PTR [ecx-0x2623f2bd]
  420c45:	pop    es
  420c46:	enter  0xa560,0xe
  420c4a:	sbb    al,0x4f
  420c4c:	fdivp  st(4),st
  420c4e:	lea    edx,[edi-0x6a009d36]
  420c54:	mov    esp,0xc282dac2
  420c59:	push   ecx
  420c5a:	loopne 0x420cd3
  420c5c:	(bad)  
  420c5d:	sti    
  420c5e:	stc    
  420c5f:	dec    ebp
  420c60:	pop    ss
  420c61:	sbb    BYTE PTR [eax-0x1031421d],0x97
  420c68:	mov    eax,ds:0xe32015fb
  420c6d:	stc    
  420c6e:	jne    0x420c3f
  420c70:	je     0x420c8a
  420c72:	sti    
  420c73:	pop    eax
  420c74:	mov    ds,WORD PTR [eax]
  420c76:	les    ebp,FWORD PTR [eax-0x7c]
  420c79:	adc    dh,BYTE PTR [ecx]
  420c7b:	add    bh,BYTE PTR [edi]
  420c7d:	js     0x420c4e
  420c7f:	xchg   ebx,eax
  420c80:	inc    edx
  420c81:	push   edi
  420c82:	call   0x457fab1c
  420c87:	pop    esi
  420c88:	xchg   ebx,eax
  420c89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c8a:	mov    ebp,0x3c78ef3f
  420c8f:	ds ret 
  420c91:	lock pop es
  420c93:	sub    ch,ch
  420c95:	xor    dl,cl
  420c97:	pop    ss
  420c98:	sub    eax,0xe18011c2
  420c9d:	or     dl,bl
  420c9f:	push   eax
  420ca0:	cmc    
  420ca1:	xchg   edx,eax
  420ca2:	pusha  
  420ca3:	mov    WORD PTR [edi],fs
  420ca5:	sub    BYTE PTR [esi+0x34ea5f6b],dh
  420cab:	ja     0x420d05
  420cad:	test   BYTE PTR [ebx-0x65],ch
  420cb0:	shl    cl,cl
  420cb2:	push   edx
  420cb3:	test   DWORD PTR [eax],ecx
  420cb5:	xchg   ebx,eax
  420cb6:	or     al,0xd5
  420cb8:	nop
  420cb9:	ins    BYTE PTR es:[edi],dx
  420cba:	call   DWORD PTR [ebx+ebx*4-0x407f2724]
  420cc1:	lock mov esi,0xd045de8e
  420cc7:	or     al,0xc5
  420cc9:	mov    BYTE PTR [edi+ebx*4+0x53],bl
  420ccd:	xor    DWORD PTR ds:0x782dcd7b,esp
  420cd3:	xchg   edx,eax
  420cd4:	lods   al,BYTE PTR ds:[esi]
  420cd5:	out    dx,eax
  420cd6:	xchg   ebx,eax
  420cd7:	fstp   st(5)
  420cd9:	rol    DWORD PTR [esi+0x194a0418],1
  420cdf:	mov    esp,0x7ce078df
  420ce4:	fild   WORD PTR [esi+esi*2-0xc]
  420ce8:	dec    esp
  420ce9:	(bad)  
  420cea:	adc    eax,0x96fe2398
  420cef:	add    ecx,DWORD PTR [edx]
  420cf1:	mov    ds:0x544a7479,eax
  420cf6:	or     ebx,eax
  420cf8:	add    al,0xb9
  420cfa:	push   esp
  420cfb:	ja     0x420c8f
  420cfd:	cmp    DWORD PTR [edi+0x3c],0xffffffbf
  420d01:	test   BYTE PTR [ecx-0xf],ah
  420d04:	test   eax,0xafdb3480
  420d09:	fstp   DWORD PTR [ebx+0x15ef9d76]
  420d0f:	icebp  
  420d10:	inc    edi
  420d11:	xor    al,0x9
  420d13:	outs   dx,BYTE PTR ds:[esi]
  420d14:	inc    ebx
  420d15:	ins    BYTE PTR es:[edi],dx
  420d16:	push   ebx
  420d17:	popf   
  420d18:	cmp    ebp,ebp
  420d1a:	aaa    
  420d1b:	mov    ?,WORD PTR [edi-0x36f72e8e]
  420d21:	or     DWORD PTR [eax+0x1c],0x65c93864
  420d28:	arpl   WORD PTR [ebx],ax
  420d2a:	out    0xd3,al
  420d2c:	inc    eax
  420d2d:	(bad)  
  420d2e:	pop    es
  420d2f:	lock int 0xf0
  420d32:	in     eax,0x79
  420d34:	cmp    ecx,DWORD PTR [ecx+0x4f]
  420d37:	add    esi,DWORD PTR ds:0xdcae1733
  420d3e:	inc    ecx
  420d3f:	and    DWORD PTR [esp+ebx*2-0x6853bbc4],edx
  420d46:	inc    eax
  420d47:	adc    dh,ah
  420d49:	ror    bl,cl
  420d4b:	call   0x598588c2
  420d50:	dec    ecx
  420d51:	in     al,0xd0
  420d53:	cmc    
  420d54:	jg     0x420d64
  420d56:	inc    ebx
  420d57:	mov    dh,0xf8
  420d59:	xor    BYTE PTR [edi+0x20],dh
  420d5c:	and    edi,DWORD PTR [edx+0x24cdd9eb]
  420d62:	retf   0x4fce
  420d65:	enter  0x6651,0x5c
  420d69:	add    esi,ebp
  420d6b:	cwde   
  420d6c:	dec    ecx
  420d6d:	retf   
  420d6e:	mov    ah,0xd6
  420d70:	inc    esp
  420d71:	xchg   ebp,eax
  420d72:	pop    edx
  420d73:	jg     0x420d7f
  420d75:	fbstp  TBYTE PTR [edx-0x31353982]
  420d7b:	add    cl,BYTE PTR [ebp-0x85792bb]
  420d81:	dec    WORD PTR [ecx+0x6a24414]
  420d88:	outs   dx,DWORD PTR ds:[esi]
  420d89:	in     eax,0xd4
  420d8b:	adc    al,0x3f
  420d8d:	xor    eax,0x11d7ac61
  420d92:	jge    0x420dac
  420d94:	frstor [edx]
  420d96:	(bad)  
  420d97:	push   edx
  420d98:	jo     0x420dad
  420d9a:	inc    edi
  420d9b:	fcmovbe st,st(5)
  420d9d:	(bad)  
  420d9e:	test   al,0xcd
  420da0:	sahf   
  420da1:	cld    
  420da2:	jle    0x420dd3
  420da4:	xlat   BYTE PTR ds:[ebx]
  420da5:	arpl   WORD PTR [edx+0x62],bx
  420da8:	dec    edx
  420da9:	loope  0x420dbb
  420dab:	mov    esi,DWORD PTR [ebx]
  420dad:	aas    
  420dae:	repz jbe 0x420d9a
  420db1:	mov    WORD PTR [ebp+0x385af936],ss
  420db7:	scas   al,BYTE PTR es:[edi]
  420db8:	pop    edi
  420db9:	in     eax,0x57
  420dbb:	nop
  420dbc:	add    BYTE PTR [esi-0x40],0x0
  420dc0:	nop
  420dc1:	push   edx
  420dc2:	push   esi
  420dc3:	(bad)  
  420dc5:	xchg   esp,eax
  420dc6:	jle    0x420e07
  420dc8:	pop    edx
  420dc9:	add    ecx,edx
  420dcb:	(bad)  
  420dcc:	mov    bl,0x68
  420dce:	and    ebp,DWORD PTR [edi+0x10]
  420dd1:	fbstp  TBYTE PTR [edi+0x43]
  420dd4:	inc    esi
  420dd5:	js     0x420d89
  420dd7:	xor    edx,esi
  420dd9:	in     ax,dx
  420ddb:	sub    esi,DWORD PTR [ecx+0x7f]
  420dde:	sbb    eax,0xefee423c
  420de3:	pop    edi
  420de4:	jp     0x420e5a
  420de6:	ds jecxz 0x420e63
  420de9:	inc    ebx
  420dea:	aad    0xe1
  420dec:	call   0xd543:0xe0a213bb
  420df3:	adc    BYTE PTR [ebp-0x184d5e66],al
  420df9:	dec    eax
  420dfa:	loope  0x420daf
  420dfc:	daa    
  420dfd:	loop   0x420e3e
  420dff:	rcr    BYTE PTR [ebp+0x5a90e559],1
  420e05:	jp     0x420d8d
  420e07:	push   edi
  420e08:	std    
  420e09:	adc    BYTE PTR [edi],ah
  420e0b:	sub    eax,ecx
  420e0d:	add    DWORD PTR [edi+ecx*4+0x26dc5385],ebx
  420e14:	mov    dh,0xb2
  420e16:	loopne 0x420db0
  420e18:	jns    0x420e97
  420e1a:	imul   edi,DWORD PTR [edx+0x5e377eca],0xe15a6c2b
  420e24:	mov    dh,0xd9
  420e26:	mov    ds:0xc03bfc4c,al
  420e2b:	mov    esp,es
  420e2d:	cmp    al,0x5
  420e2f:	sbb    BYTE PTR [ebp-0x35],ah
  420e32:	out    0x24,eax
  420e34:	popf   
  420e35:	pop    esi
  420e36:	gs mov bh,0x9c
  420e39:	inc    esp
  420e3a:	sbb    DWORD PTR [ecx-0x64542242],ecx
  420e40:	outs   dx,DWORD PTR ds:[esi]
  420e41:	adc    DWORD PTR [edi+0x3513177a],edi
  420e47:	push   ds
  420e48:	add    eax,0xa6177300
  420e4d:	mov    ah,0x41
  420e4f:	mov    ah,0xf2
  420e51:	mov    cx,0x7c75
  420e55:	sbb    eax,0x84da1f7a
  420e5a:	push   eax
  420e5b:	jmp    0x11a3:0x1ab3a1cd
  420e62:	imul   ebp,DWORD PTR [edx-0x66],0xde4cd3d5
  420e69:	inc    esp
  420e6a:	mov    esp,0xf3aa7c72
  420e6f:	scas   al,BYTE PTR es:[edi]
  420e70:	sub    bh,BYTE PTR [ebx-0x24]
  420e73:	cmp    dl,BYTE PTR [edi]
  420e75:	jmp    0x420eb1
  420e77:	or     ah,BYTE PTR [ecx-0x6af07426]
  420e7d:	jmp    0x420e33
  420e7f:	jp     0x420e11
  420e81:	das    
  420e82:	int    0x85
  420e84:	aaa    
  420e85:	dec    edx
  420e86:	xor    cl,BYTE PTR [ebp+0x7d]
  420e89:	gs shl BYTE PTR fs:[ecx-0x6f],1
  420e8e:	daa    
  420e8f:	popf   
  420e90:	inc    ebx
  420e91:	ja     0x420e7e
  420e93:	push   ss
  420e94:	push   ss
  420e95:	jo     0x420f0f
  420e97:	lea    ecx,[edi]
  420e99:	push   edi
  420e9a:	sub    ah,ch
  420e9c:	jecxz  0x420eaa
  420e9e:	fist   DWORD PTR [ebp+0x405dda68]
  420ea4:	inc    eax
  420ea5:	inc    esi
  420ea6:	or     al,0x2a
  420ea8:	out    0xc6,eax
  420eaa:	ds jbe 0x420e5f
  420ead:	aam    0x6e
  420eaf:	xchg   BYTE PTR [edx+0x54],ch
  420eb2:	xor    ch,BYTE PTR [esi+ecx*2]
  420eb5:	and    BYTE PTR ss:[edx+eax*2],dh
  420eb9:	out    dx,eax
  420eba:	rep ins DWORD PTR es:[edi],dx
  420ebc:	lods   al,BYTE PTR ds:[esi]
  420ebd:	mov    esi,0x5fcd2bab
  420ec2:	repz rcr DWORD PTR [ebx+0x56f8d97f],cl
  420ec9:	jg     0x420ebf
  420ecb:	mov    edx,0x62d136e
  420ed0:	sub    BYTE PTR [eax],bl
  420ed2:	pop    edi
  420ed3:	pop    ss
  420ed4:	out    0xa7,eax
  420ed6:	das    
  420ed7:	and    ah,BYTE PTR ds:0x5ba08124
  420edd:	fstp   TBYTE PTR [ebx-0x16f653bd]
  420ee3:	les    edx,FWORD PTR [ebp+0x31a5f46b]
  420ee9:	pop    ebp
  420eea:	or     BYTE PTR [edi],al
  420eec:	mov    DWORD PTR [ebp-0x64493af1],eax
  420ef2:	add    DWORD PTR [ebp+0x29],ebp
  420ef5:	mov    eax,0x299255d
  420efa:	ret    0x6c04
  420efd:	les    esp,FWORD PTR [ebx]
  420eff:	(bad)  
  420f01:	test   DWORD PTR [edx+0x2d0445f9],esi
  420f07:	into   
  420f08:	hlt    
  420f09:	pop    esp
  420f0a:	or     al,0x84
  420f0c:	xchg   ebp,eax
  420f0d:	fwait
  420f0e:	or     edi,eax
  420f10:	pop    ss
  420f11:	push   ebx
  420f12:	ins    DWORD PTR es:[edi],dx
  420f13:	fidivr WORD PTR [eax-0xb]
  420f16:	lods   al,BYTE PTR ds:[esi]
  420f17:	ds push esi
  420f19:	ss dec ebx
  420f1b:	sbb    DWORD PTR [eax],esi
  420f1d:	xchg   ecx,eax
  420f1e:	or     eax,0xe468487e
  420f23:	dec    ebx
  420f24:	sar    BYTE PTR [edi],0x89
  420f27:	ret    
  420f28:	call   0xde854f3
  420f2d:	in     eax,dx
  420f2e:	adc    DWORD PTR [ebp-0x47e71bf4],esi
  420f34:	iret   
  420f35:	les    ecx,FWORD PTR [ebx+0x1f0310a1]
  420f3b:	xor    ebx,ebp
  420f3d:	in     al,dx
  420f3e:	popf   
  420f3f:	sbb    eax,0xea8b00f7
  420f44:	rcr    DWORD PTR [ebx],cl
  420f46:	repz cmp ecx,ebx
  420f49:	cli    
  420f4a:	in     al,dx
  420f4b:	jg     0x420f84
  420f4d:	loopne 0x420f5c
  420f4f:	scas   eax,DWORD PTR es:[edi]
  420f50:	xchg   edi,eax
  420f51:	xor    DWORD PTR [eax+0x27000184],ebx
  420f57:	add    eax,DWORD PTR [eax]
  420f59:	add    bl,ch
  420f5b:	pushf  
  420f5c:	pop    ebx
  420f5d:	jmp    0x857b:0xb0e212d2
  420f64:	pushf  
  420f65:	dec    edi
  420f66:	inc    eax
  420f67:	cld    
  420f68:	cmp    dh,BYTE PTR [ebp-0x2d]
  420f6b:	push   es
  420f6c:	cs aaa 
  420f6e:	or     eax,0xa726de50
  420f73:	mov    cl,0x3a
  420f75:	mov    esp,0xa5e684b7
  420f7a:	sub    eax,0x6bcdec3f
  420f7f:	fsubrp st(4),st
  420f81:	sub    dh,dl
  420f83:	pop    eax
  420f84:	mov    ah,0x9f
  420f86:	loopne 0x420fc4
  420f88:	push   0x199b33d7
  420f8d:	pop    eax
  420f8e:	jge    0x420f26
  420f90:	mov    ch,BYTE PTR [esi+0x10]
  420f93:	rcr    edx,1
  420f95:	or     edx,DWORD PTR [ecx]
  420f97:	rcl    BYTE PTR [ecx-0x30],cl
  420f9a:	xchg   ebp,eax
  420f9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f9c:	or     ebp,DWORD PTR es:[edi]
  420f9f:	cmp    ch,BYTE PTR [edi+0x55]
  420fa2:	rcl    ebp,0xdc
  420fa5:	(bad)  
  420fa6:	lea    ebx,[ecx-0x280929d0]
  420fac:	in     al,dx
  420fad:	aas    
  420fae:	in     eax,0xa7
  420fb0:	push   0xffffffda
  420fb2:	mov    BYTE PTR [esi-0x4],al
  420fb5:	dec    ebx
  420fb6:	and    edi,eax
  420fb8:	add    ebp,DWORD PTR [ecx+0x786d075d]
  420fbe:	jl     0x420f93
  420fc0:	fsubr  DWORD PTR [ebx]
  420fc2:	mov    ah,BYTE PTR [edi-0x6b]
  420fc5:	push   esp
  420fc6:	retf   
  420fc7:	ss pusha 
  420fc9:	les    esp,FWORD PTR [eax]
  420fcb:	push   ecx
  420fcc:	stos   DWORD PTR es:[edi],eax
  420fcd:	and    bl,BYTE PTR [edi+0x66]
  420fd0:	jb     0x420f6b
  420fd2:	mov    ds:0xf01bd929,eax
  420fd7:	in     al,0x24
  420fd9:	push   eax
  420fda:	ja     0x42101e
  420fdc:	add    BYTE PTR [eax-0x7c],bl
  420fdf:	icebp  
  420fe0:	jl     0x421034
  420fe2:	cmp    al,0x62
  420fe4:	out    dx,eax
  420fe5:	hlt    
  420fe6:	pushf  
  420fe7:	dec    eax
  420fe8:	xor    DWORD PTR [edi],0x307f6169
  420fee:	sbb    DWORD PTR [esi-0xb5e69cb],ebp
  420ff4:	sbb    eax,0x2e22bf6b
  420ff9:	es cld 
  420ffb:	dec    ebx
  420ffc:	pop    esp
  420ffd:	sbb    al,0x6f
  420fff:	push   edi
  421000:	dec    esp
  421001:	inc    esp
  421002:	sti    
  421003:	xor    DWORD PTR [edi],0xfffffffe
  421006:	repz int 0xc8
  421009:	pop    ss
  42100a:	mov    ds:0x5d100c92,al
  42100f:	push   ss
  421010:	mov    esi,0x11d4934a
  421015:	sbb    DWORD PTR ds:0x9ab93f42,0x4d
  42101c:	cmp    eax,0xc4146281
  421021:	loopne 0x420ff4
  421023:	fdiv   QWORD PTR es:[ecx]
  421026:	cmc    
  421027:	dec    esi
  421028:	adc    eax,0x275176ea
  42102d:	and    dh,BYTE PTR [edi]
  42102f:	add    al,0x27
  421031:	pushf  
  421032:	mov    edi,0x3e53bfbe
  421037:	jno    0x421034
  421039:	ds adc al,0xc6
  42103c:	adc    al,0x67
  42103e:	mov    bl,bh
  421040:	pop    edx
  421041:	add    eax,0xfef22deb
  421046:	push   esp
  421047:	lds    esp,FWORD PTR [ecx+0x3c]
  42104a:	xor    al,0xe7
  42104c:	jns    0x420fda
  42104e:	jmp    0xa9ae:0xcc01dfc7
  421055:	(bad)  
  421056:	jns    0x4210d2
  421058:	mov    ds:0xcaf7b203,al
  42105d:	or     ebx,ebp
  42105f:	iret   
  421060:	(bad)  
  421062:	sbb    DWORD PTR [ecx],eax
  421064:	or     DWORD PTR [edi],ebp
  421066:	test   al,0xcc
  421068:	iret   
  421069:	pop    es
  42106a:	xchg   esp,eax
  42106b:	repnz mov bh,0xf2
  42106e:	mov    dh,0x76
  421070:	adc    eax,0x4a3b8d9
  421075:	sub    eax,0xff7e9c1d
  42107a:	add    dl,al
  42107c:	mov    WORD PTR [edx],es
  42107e:	adc    edi,eax
  421080:	and    eax,0x154a66f5
  421085:	arpl   WORD PTR [esi+0xb9b2d82],sp
  42108b:	jnp    0x42104d
  42108d:	sub    edx,ebp
  42108f:	fcom   QWORD PTR [esi+0x5d]
  421092:	out    0xc1,al
  421094:	mov    ds:0x647b59f4,al
  421099:	fwait
  42109a:	loopne 0x421113
  42109c:	push   cs
  42109d:	into   
  42109e:	sbb    eax,DWORD PTR [ebx]
  4210a0:	and    bl,BYTE PTR [ebx-0x1505e627]
  4210a6:	adc    eax,0xb4ad026d
  4210ab:	dec    eax
  4210ac:	adc    DWORD PTR [esi],0x52
  4210af:	mov    DWORD PTR [esi-0x24d40339],ecx
  4210b5:	clc    
  4210b6:	adc    DWORD PTR [edx-0x50],0x27
  4210ba:	adc    bh,BYTE PTR [edx+0x7d]
  4210bd:	stc    
  4210be:	or     ecx,DWORD PTR [ebp-0x4d]
  4210c1:	and    eax,0x6a44008a
  4210c6:	sahf   
  4210c7:	xor    al,0x92
  4210c9:	arpl   WORD PTR [ecx+0x6],ax
  4210cc:	push   0xffffffc2
  4210ce:	aas    
  4210cf:	gs in  al,0xfd
  4210d2:	retf   0x5037
  4210d5:	leave  
  4210d6:	xor    BYTE PTR [esi],cl
  4210d8:	mov    dl,0x5a
  4210da:	mov    edi,esi
  4210dc:	popf   
  4210dd:	xchg   esp,eax
  4210de:	aad    0x2b
  4210e0:	daa    
  4210e1:	xor    BYTE PTR [ebp-0x3e],dh
  4210e4:	fst    DWORD PTR [ebx+0x47]
  4210e7:	adc    al,0xc7
  4210e9:	int    0xbd
  4210eb:	or     eax,0x13d780cb
  4210f1:	mov    esi,0xbec50802
  4210f6:	nop
  4210f7:	in     al,dx
  4210f8:	dec    edx
  4210f9:	jmp    0xa61ec511
  4210fe:	and    eax,0xe15d123c
  421103:	jecxz  0x4210ba
  421105:	sbb    al,0x8a
  421107:	jp     0x42117e
  421109:	jmp    0x32b7:0xd8db52d4
  421110:	adc    esp,DWORD PTR [eax]
  421112:	xchg   edx,eax
  421113:	sbb    eax,0x3504c5db
  421118:	repnz imul edi,ebx,0x36531944
  42111f:	pop    es
  421120:	inc    edi
  421121:	fld    QWORD PTR [edi-0x13]
  421124:	(bad)  
  421126:	add    al,0x93
  421128:	dec    edi
  421129:	adc    al,0x7f
  42112b:	jne    0x421159
  42112d:	adc    eax,ebp
  42112f:	ja     0x42115f
  421131:	(bad)  
  421132:	pop    edx
  421133:	dec    ebx
  421134:	(bad)  
  421135:	leave  
  421136:	push   es
  421137:	loop   0x4211a9
  421139:	xor    BYTE PTR ds:0x561babc3,ch
  42113f:	inc    ebx
  421140:	(bad)  
  421141:	mov    DWORD PTR [esi-0xa],ebx
  421144:	aas    
  421145:	mov    bh,0x78
  421147:	les    esi,FWORD PTR [ecx+edx*8]
  42114a:	(bad)  
  42114b:	jge    0x4210e5
  42114d:	(bad)  
  42114e:	lds    edx,FWORD PTR [esi+0x7abc4287]
  421154:	(bad)  
  421155:	loope  0x4211a2
  421157:	push   edi
  421158:	add    DWORD PTR ds:0xc3c93545,0xa91f321b
  421162:	push   cs
  421163:	adc    al,BYTE PTR [esi+eiz*4+0x7ec95fe5]
  42116a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42116b:	jge    0x4211bb
  42116d:	push   ebp
  42116e:	dec    ebx
  42116f:	(bad)  
  421170:	in     eax,dx
  421171:	mov    bl,0xeb
  421173:	daa    
  421174:	xchg   ecx,eax
  421175:	rcr    DWORD PTR [edi+0x3d184938],cl
  42117b:	cmc    
  42117c:	dec    esp
  42117d:	cdq    
  42117e:	mov    dl,0xe8
  421180:	inc    ebx
  421181:	sbb    bh,BYTE PTR [edi]
  421183:	es push cs
  421185:	adc    BYTE PTR [ecx+0x3475b67],0x17
  42118c:	daa    
  42118d:	xor    DWORD PTR [eax+edi*4],esp
  421190:	es or  eax,0xd327e8ad
  421196:	sahf   
  421197:	push   esi
  421198:	jmp    0x421189
  42119a:	mov    bl,ch
  42119c:	or     eax,0x9be5b454
  4211a1:	dec    ebx
  4211a2:	xchg   esi,esi
  4211a4:	lock daa 
  4211a6:	stos   DWORD PTR es:[edi],eax
  4211a7:	jb     0x4211f0
  4211a9:	lds    ebx,FWORD PTR [edx-0x734802e5]
  4211af:	push   ebx
  4211b0:	sbb    esp,DWORD PTR [edx+eax*2-0x60]
  4211b4:	not    BYTE PTR [ecx+ecx*4+0x21f6913b]
  4211bb:	outs   dx,BYTE PTR ds:[esi]
  4211bc:	repnz mov ds:0xdaa2e795,al
  4211c2:	ss lock and al,0x8c
  4211c6:	adc    al,0x46
  4211c8:	rol    BYTE PTR [edx],0x7b
  4211cb:	adc    al,0x8
  4211cd:	sbb    al,0x81
  4211cf:	or     al,0x2d
  4211d1:	daa    
  4211d2:	ret    0x8c27
  4211d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211d6:	inc    edx
  4211d7:	mov    edx,0x951bab0c
  4211dc:	ja     0x42115e
  4211de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211df:	bnd js 0x421254
  4211e2:	add    DWORD PTR [edi-0x58],ecx
  4211e5:	xchg   al,bh
  4211e7:	adc    BYTE PTR es:[edx],dl
  4211ea:	adc    esi,esp
  4211ec:	dec    ecx
  4211ed:	push   edi
  4211ee:	das    
  4211ef:	mov    ebp,0xc847e325
  4211f4:	or     eax,esp
  4211f6:	ins    DWORD PTR es:[edi],dx
  4211f7:	(bad)
  4211fc:	jo     0x421201
  4211fe:	popa   
  4211ff:	js     0x421245
  421201:	dec    edx
  421202:	mov    eax,0x32b291f1
  421207:	addr16 jmp 0x6a6:0x1de494e2
  42120f:	sbb    al,BYTE PTR [esi]
  421211:	dec    edi
  421212:	and    BYTE PTR [ecx-0x59],bh
  421215:	jmp    0x4a35:0xf354aa51
  42121c:	or     esi,DWORD PTR [esp+esi*4-0x70]
  421220:	adc    al,0x6d
  421222:	push   ebx
  421223:	adc    DWORD PTR [edi-0x3b],0xc7b62b50
  42122a:	cdq    
  42122b:	dec    edi
  42122c:	mov    eax,ds:0x6f1eff6d
  421231:	push   ds
  421232:	cmp    dh,BYTE PTR [edx-0x715fd3b3]
  421238:	xor    eax,0x37fbe8e1
  42123d:	pop    esi
  42123e:	pop    eax
  42123f:	inc    edx
  421240:	jno    0x42124e
  421242:	push   ds
  421243:	sar    DWORD PTR [eax+esi*8-0x68cdc84],cl
  42124a:	push   esi
  42124b:	xor    eax,0x93c54fc9
  421250:	cmp    al,0x7b
  421252:	enter  0x1032,0xe1
  421256:	lahf   
  421257:	pop    ebx
  421258:	es push 0xffffff97
  42125b:	and    DWORD PTR [edi+0x4f],esp
  42125e:	and    eax,0xbc00aa31
  421263:	mov    bh,0xf1
  421265:	popa   
  421266:	jg     0x42124e
  421268:	pop    esi
  421269:	sbb    ecx,ebx
  42126b:	popaw  
  42126d:	sbb    al,0x17
  42126f:	bound  edi,QWORD PTR [edi]
  421271:	jle    0x421243
  421273:	adc    eax,0xdf4a738c
  421278:	xchg   edx,eax
  421279:	mov    eax,0x5b20c2fb
  42127e:	inc    eax
  42127f:	lods   al,BYTE PTR ds:[esi]
  421280:	rol    BYTE PTR [eax],1
  421282:	shl    BYTE PTR [edx],cl
  421284:	xchg   esi,eax
  421285:	call   0x1e52:0x6adebef6
  42128c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42128d:	and    bh,BYTE PTR [ecx-0x40ab56a1]
  421293:	xchg   DWORD PTR [ecx],eax
  421295:	add    BYTE PTR [edi],ah
  421297:	add    eax,DWORD PTR [eax]
  421299:	add    BYTE PTR [esi+0xf],cl
  42129c:	adc    al,0xcb
  42129e:	jae    0x4212a0
  4212a0:	fwait
  4212a1:	(bad)  
  4212a2:	iret   
  4212a3:	mov    cs,WORD PTR [ecx]
  4212a5:	test   DWORD PTR [ebp-0x35dd958f],eax
  4212ab:	pop    es
  4212ac:	pop    eax
  4212ad:	clc    
  4212ae:	hlt    
  4212af:	sub    edi,DWORD PTR [esp+eax*2+0x2]
  4212b3:	cmp    BYTE PTR [edx],ah
  4212b5:	mov    ds:0x3232c3c7,al
  4212ba:	int3   
  4212bb:	xchg   edx,eax
  4212bc:	xchg   ecx,eax
  4212bd:	loop   0x4212fd
  4212bf:	push   edx
  4212c0:	int    0xc0
  4212c2:	mov    BYTE PTR [ebx],0x90
  4212c5:	fisub  DWORD PTR [ebp+0x64b5e8e]
  4212cb:	rcr    DWORD PTR ds:0xbdba13ec,0x41
  4212d2:	sub    bl,bh
  4212d4:	jb     0x421275
  4212d6:	iret   
  4212d7:	retf   0x6d1
  4212da:	dec    ecx
  4212db:	fwait
  4212dc:	mov    ebx,edi
  4212de:	cdq    
  4212df:	adc    ebp,DWORD PTR [ebp-0x45ab2484]
  4212e5:	cli    
  4212e6:	rol    DWORD PTR [ecx+edi*2-0x2a],1
  4212ea:	nop
  4212eb:	xchg   esp,eax
  4212ec:	and    al,0xd8
  4212ee:	dec    edi
  4212ef:	ins    BYTE PTR es:[edi],dx
  4212f0:	out    0x3b,eax
  4212f2:	sub    eax,0xf123bcdf
  4212f7:	push   esp
  4212f8:	test   eax,0xa9c6d7d9
  4212fd:	shl    BYTE PTR [eax+0x6f7a8aad],1
  421303:	inc    esi
  421304:	jb     0x421384
  421306:	xor    al,0x3d
  421308:	xchg   ebx,eax
  421309:	mov    cl,0x49
  42130b:	and    esp,DWORD PTR [edi]
  42130d:	fiadd  WORD PTR [esi-0x4a1ebee3]
  421313:	cmp    eax,0xa4a130b2
  421318:	jge    0x4212e5
  42131a:	(bad)  
  42131b:	push   eax
  42131c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42131d:	pop    edx
  42131e:	in     eax,0x3f
  421320:	aaa    
  421321:	push   es
  421322:	and    al,0x10
  421324:	push   ebp
  421325:	aad    0x5e
  421327:	aad    0xc6
  421329:	test   DWORD PTR [esi-0x28],0x737a84e7
  421330:	imul   ebx,DWORD PTR [esp+edi*1-0x64680e94],0xa3d63955
  42133b:	rcl    al,0xce
  42133e:	dec    ebp
  42133f:	xchg   ebp,eax
  421340:	xor    ah,BYTE PTR [eax+0x1c0b7ac2]
  421346:	rcr    ecx,cl
  421348:	sub    BYTE PTR [ecx+0x2a],0xbc
  42134c:	fisubr DWORD PTR [ecx-0x4b]
  42134f:	sti    
  421350:	dec    ebp
  421351:	lods   al,BYTE PTR ds:[esi]
  421352:	test   BYTE PTR [edx-0x4e],dl
  421355:	pop    eax
  421356:	pop    DWORD PTR [edx+0x5f]
  421359:	fmul   DWORD PTR ds:0x9a977b6c
  42135f:	push   es
  421360:	int3   
  421361:	or     DWORD PTR [ebp+0x7579fe4b],edi
  421367:	or     BYTE PTR [ecx],bl
  421369:	call   0xb715d27e
  42136e:	retf   0x49cc
  421371:	popf   
  421372:	mov    ah,al
  421374:	inc    ebx
  421375:	clc    
  421376:	xchg   edx,eax
  421377:	(bad)  
  421378:	or     bl,BYTE PTR [edi-0x23]
  42137b:	loop   0x4213df
  42137d:	pop    eax
  42137e:	and    BYTE PTR [edx+0xc],dh
  421381:	inc    esp
  421382:	pushf  
  421383:	mov    dh,0x67
  421385:	jp     0x4213cc
  421387:	push   ecx
  421388:	and    ecx,esi
  42138a:	out    dx,eax
  42138b:	test   DWORD PTR [esi],0xc68e8238
  421391:	ror    DWORD PTR [edi+edx*8],0x6d
  421395:	inc    edi
  421396:	mov    cs,WORD PTR [ebp-0x703568d2]
  42139c:	mov    dl,0xc
  42139e:	gs ror DWORD PTR fs:[ebp+0x7f8c4095],0xd7
  4213a7:	pop    esi
  4213a8:	xor    al,0x5
  4213aa:	and    BYTE PTR [eax+0x5f00b713],dl
  4213b0:	push   es
  4213b1:	mov    ds:0x1cffc495,eax
  4213b6:	push   cs
  4213b7:	fsubrp st(5),st
  4213b9:	adc    ecx,esi
  4213bb:	mov    al,0xbb
  4213bd:	sub    dh,BYTE PTR [edx-0x12]
  4213c0:	sub    DWORD PTR [edx+0x3b06dc34],ebp
  4213c6:	fst    DWORD PTR [edx-0x3b08c260]
  4213cc:	xchg   edi,eax
  4213cd:	inc    ebp
  4213ce:	call   0xfe8b4bbb
  4213d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213d4:	cmp    edx,DWORD PTR [edi-0xb909feb]
  4213da:	lds    edi,FWORD PTR [ecx-0x11]
  4213dd:	cmp    esi,ebp
  4213df:	in     eax,dx
  4213e0:	pop    ecx
  4213e1:	fistp  DWORD PTR [edi+0x61]
  4213e4:	mov    edx,0x4649ca31
  4213e9:	test   DWORD PTR [ecx-0x1f],esp
  4213ec:	test   esi,0xfeb31274
  4213f2:	stos   DWORD PTR es:[edi],eax
  4213f3:	jae    0x42144a
  4213f5:	enter  0x8f6f,0x25
  4213f9:	ins    DWORD PTR es:[edi],dx
  4213fa:	xor    al,0xae
  4213fc:	ss dec esi
  4213fe:	rdtsc  
  421400:	jns    0x421418
  421402:	aaa    
  421403:	cmp    bh,BYTE PTR [eax*4-0x73f2b095]
  42140a:	cmp    al,0xde
  42140c:	out    dx,eax
  42140d:	xor    DWORD PTR [eax+edi*8],edi
  421410:	ins    BYTE PTR es:[edi],dx
  421411:	cmp    edi,DWORD PTR [ecx]
  421413:	push   esp
  421414:	mov    edx,0x89e1288c
  421419:	aad    0x10
  42141b:	jmp    0x4213cf
  42141d:	and    bl,BYTE PTR [edi-0x56]
  421420:	xor    al,dh
  421422:	mov    ah,0x51
  421424:	std    
  421425:	add    ch,BYTE PTR [ebx]
  421427:	in     eax,0xd2
  421429:	data16 add al,0xa8
  42142c:	mov    DWORD PTR [esi-0x1c],esp
  42142f:	ss popf 
  421431:	aad    0xa
  421433:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421435:	mov    ds:0x3c70f163,eax
  42143a:	push   edi
  42143b:	out    0xf7,al
  42143d:	frstor [esi]
  42143f:	pop    esp
  421440:	sbb    DWORD PTR [edi+ecx*4-0x54],esi
  421444:	test   al,0x34
  421446:	xchg   edx,eax
  421447:	sbb    edi,DWORD PTR [edx]
  421449:	ror    BYTE PTR [esi+0x36],cl
  42144c:	imul   DWORD PTR [esi+edx*1-0x12]
  421450:	xlat   BYTE PTR ds:[ebx]
  421451:	ror    ebp,cl
  421453:	(bad)  
  421454:	push   cs
  421455:	fwait
  421456:	push   esp
  421457:	fldcw  WORD PTR [esi]
  421459:	imul   esi,DWORD PTR [edi],0x49
  42145c:	mov    ds:0x6877f867,eax
  421461:	cmp    edx,DWORD PTR [ebx-0x76]
  421464:	js     0x421453
  421466:	lds    ecx,FWORD PTR [eax+eiz*2+0x352b90e4]
  42146d:	xchg   edi,eax
  42146e:	in     al,dx
  42146f:	les    ecx,FWORD PTR [eax-0x7d]
  421472:	repnz xchg ebp,eax
  421474:	xchg   esi,eax
  421475:	outs   dx,DWORD PTR ds:[esi]
  421476:	pop    ds
  421477:	add    edi,ebp
  421479:	test   eax,0x65438f7f
  42147e:	mov    ebx,0x51630167
  421483:	not    DWORD PTR [edi+0x3806f71d]
  421489:	push   ebp
  42148a:	scas   eax,DWORD PTR es:[edi]
  42148b:	pop    ds
  42148c:	out    0xbb,eax
  42148e:	dec    esi
  42148f:	js     0x4214e2
  421491:	retf   
  421492:	fwait
  421493:	push   edx
  421494:	std    
  421495:	pop    ebp
  421496:	fistp  QWORD PTR [esi+0x699d4dab]
  42149c:	xchg   ebx,eax
  42149d:	xor    BYTE PTR [edi-0x6481ceb7],ah
  4214a3:	xlat   BYTE PTR ds:[ebx]
  4214a4:	int3   
  4214a5:	dec    ebp
  4214a6:	xchg   DWORD PTR ds:0x9fcf90f1,ecx
  4214ac:	mov    edi,0xc55108cd
  4214b1:	sbb    eax,0xfe98c49f
  4214b6:	pop    ebx
  4214b7:	cmp    BYTE PTR [ecx-0x4f32f3bb],bh
  4214bd:	lock cmp eax,0x830423fe
  4214c3:	and    eax,0x4f25d0d4
  4214c8:	int    0x34
  4214ca:	cmp    al,0x6d
  4214cc:	imul   BYTE PTR [ebx]
  4214ce:	sub    al,0x5b
  4214d0:	mov    ebx,0x697df591
  4214d5:	or     DWORD PTR [edi-0x35],ebx
  4214d8:	pop    edx
  4214d9:	push   es
  4214da:	mov    ebp,0xc07c7f16
  4214df:	loop   0x421466
  4214e1:	repnz out dx,eax
  4214e3:	cli    
  4214e4:	pop    edi
  4214e5:	inc    eax
  4214e6:	xchg   edx,eax
  4214e7:	scas   al,BYTE PTR es:[edi]
  4214e8:	cmp    esi,esi
  4214ea:	push   ss
  4214eb:	and    al,0x4a
  4214ed:	jl     0x42155c
  4214ef:	inc    esi
  4214f0:	fimul  WORD PTR [esi]
  4214f2:	mov    eax,0xe9f427c9
  4214f7:	inc    ebx
  4214f8:	in     eax,0x8d
  4214fa:	ins    DWORD PTR es:[edi],dx
  4214fb:	and    ch,BYTE PTR [eax]
  4214fd:	fnstenv [eax+0x7bfa1584]
  421503:	xor    al,0x34
  421505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421506:	mov    al,ds:0x831352e2
  42150b:	push   ss
  42150c:	pushf  
  42150d:	shr    DWORD PTR [esi-0x26],1
  421510:	and    edx,edi
  421512:	jns    0x4214b0
  421514:	stos   BYTE PTR es:[edi],al
  421515:	cmp    DWORD PTR [edx+0x8],esp
  421518:	adc    DWORD PTR [ebp-0x6],edx
  42151b:	mov    ah,BYTE PTR [esi+0x22]
  42151e:	xchg   BYTE PTR [eax],al
  421520:	jb     0x4214e1
  421522:	mov    eax,0x2df83b63
  421527:	add    eax,0x73dff1f9
  42152c:	retf   0xebdd
  42152f:	jns    0x4214da
  421531:	cmc    
  421532:	shl    BYTE PTR [edx+0x9],1
  421535:	push   DWORD PTR [ebx]
  421537:	les    edi,FWORD PTR [esi]
  421539:	shl    al,0xd5
  42153c:	test   eax,0x1c0ec553
  421541:	out    dx,eax
  421542:	push   ebx
  421543:	mov    edx,0x3ca0de13
  421548:	mov    BYTE PTR [edx+0x1574115a],al
  42154e:	or     ecx,0xf63ba1ae
  421554:	jno    0x42156b
  421556:	imul   ecx,DWORD PTR [edx+0x2],0x58379b1d
  42155d:	sahf   
  42155e:	xor    dh,dl
  421560:	popa   
  421561:	mov    al,0x98
  421563:	mov    ds:0x1abd6fff,eax
  421568:	ja     0x42152c
  42156a:	sub    BYTE PTR [edi-0x11],dh
  42156d:	jl     0x421506
  42156f:	test   cl,bh
  421571:	inc    eax
  421572:	push   ss
  421573:	nop
  421574:	xchg   ebp,eax
  421575:	inc    edx
  421576:	fimul  DWORD PTR [edx]
  421578:	jl     0x4215f9
  42157a:	mov    BYTE PTR [edi-0x589c5016],ah
  421580:	push   esp
  421581:	cmp    edx,DWORD PTR [eax-0x39]
  421584:	fadd   st,st(5)
  421586:	hlt    
  421587:	icebp  
  421588:	sbb    eax,DWORD PTR [ebp-0x4f4d03c5]
  42158e:	bound  ecx,QWORD PTR [eax+0x67581e7b]
  421594:	push   es
  421595:	stc    
  421596:	lock daa 
  421598:	push   ss
  421599:	mov    ecx,0xcc6b6249
  42159e:	and    eax,0xf5689700
  4215a3:	test   al,0xc2
  4215a5:	mov    edi,0xd2db8fe0
  4215aa:	popa   
  4215ab:	(bad)  
  4215ac:	sub    ebp,DWORD PTR [edx+0x63b3bc22]
  4215b2:	pop    esp
  4215b3:	dec    ecx
  4215b4:	retf   0xf45c
  4215b7:	out    0x89,eax
  4215b9:	out    0x61,eax
  4215bb:	not    DWORD PTR [eax]
  4215bd:	scas   al,BYTE PTR es:[edi]
  4215be:	xchg   DWORD PTR [eax+0x5c],esp
  4215c1:	add    ch,bl
  4215c3:	cmp    al,0x8f
  4215c5:	mov    esp,0x7dffbfef
  4215ca:	add    al,BYTE PTR [ebp-0x407723f]
  4215d0:	fxch   st(2)
  4215d2:	out    0x8a,al
  4215d4:	add    DWORD PTR [eax],eax
  4215d6:	daa    
  4215d7:	add    eax,DWORD PTR [eax]
  4215d9:	add    BYTE PTR [ebx+0x1f],ch
  4215dc:	in     al,dx
  4215dd:	(bad)  
  4215de:	ret    
  4215df:	inc    esp
  4215e0:	cmp    bh,BYTE PTR [ecx]
  4215e2:	adc    ch,al
  4215e4:	dec    edi
  4215e5:	and    BYTE PTR [ecx+0x3ab0f268],dh
  4215eb:	mov    dl,0x20
  4215ed:	cld    
  4215ee:	loopne 0x421576
  4215f0:	paddusb mm5,QWORD PTR [ecx+0x19]
  4215f4:	sbb    DWORD PTR [edi-0x59],ecx
  4215f7:	sbb    ebx,DWORD PTR [ebx+edx*8-0x241115d9]
  4215fe:	xor    al,0x70
  421600:	xchg   esp,eax
  421601:	and    dh,al
  421603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421604:	sub    eax,0xa5ac351f
  421609:	js     0x421642
  42160b:	mov    bl,0x69
  42160d:	je     0x4215d5
  42160f:	adc    BYTE PTR [ebp-0x64],0x43
  421613:	jno    0x42168a
  421615:	in     eax,0x47
  421617:	cmp    DWORD PTR [esp+eax*4-0x7b],esi
  42161b:	push   ds
  42161c:	je     0x4215ba
  42161e:	fbld   TBYTE PTR [edi+0x30]
  421621:	dec    edi
  421622:	leave  
  421623:	ins    BYTE PTR es:[edi],dx
  421624:	dec    esi
  421625:	sbb    DWORD PTR [esi],ebp
  421627:	push   DWORD PTR [edi]
  421629:	adc    ch,cl
  42162b:	dec    BYTE PTR [edx+0x5a]
  42162e:	popf   
  42162f:	out    0xe5,al
  421631:	push   edi
  421632:	loope  0x42166f
  421634:	loopne 0x4215f5
  421636:	jmp    0xc48be6f1
  42163b:	and    ecx,0xffffffbe
  42163e:	add    edx,ebx
  421640:	cli    
  421641:	gs jnp 0x4215d3
  421644:	push   ebp
  421645:	sti    
  421646:	leave  
  421647:	add    edi,DWORD PTR [edx+0x66]
  42164a:	push   esp
  42164b:	(bad)  
  42164c:	sbb    al,0x45
  42164e:	sub    DWORD PTR [ecx],eax
  421650:	pop    ebx
  421651:	or     cl,BYTE PTR [esi]
  421653:	jl     0x4216c4
  421655:	aas    
  421656:	cmp    eax,0xd09cd319
  42165b:	pshufw mm3,mm4,0xa6
  42165f:	sbb    eax,0xf1648218
  421664:	mov    al,0x51
  421666:	cs mov bl,0x8a
  421669:	mov    eax,ds:0x134db2ab
  42166e:	outs   dx,DWORD PTR ds:[esi]
  42166f:	cli    
  421670:	sar    DWORD PTR [esi],cl
  421672:	sahf   
  421673:	xlat   BYTE PTR ds:[ebx]
  421674:	or     BYTE PTR [eax-0x78],cl
  421677:	pop    eax
  421678:	sbb    DWORD PTR [ecx-0x350e6285],0xfffffff6
  42167f:	and    eax,0x93ce9577
  421684:	dec    edx
  421685:	xor    eax,0xa1d3f685
  42168a:	(bad)  
  42168b:	cmp    dh,BYTE PTR [edi+0x6]
  42168e:	dec    edi
  42168f:	std    
  421690:	test   bh,dh
  421692:	pop    esi
  421693:	sub    edx,DWORD PTR [edx-0x120ce381]
  421699:	cld    
  42169a:	or     dl,BYTE PTR [esi-0x76ec8d63]
  4216a0:	mov    ds:0xb0196a21,eax
  4216a5:	mov    ecx,0xfaab1cc2
  4216aa:	mov    ah,0x13
  4216ac:	sbb    dh,bh
  4216ae:	sub    DWORD PTR [ebx+esi*8+0x58],ebx
  4216b2:	add    al,0xd5
  4216b4:	xchg   BYTE PTR ds:[esi+ecx*1-0x54],al
  4216b9:	das    
  4216ba:	inc    esi
  4216bb:	dec    edi
  4216bc:	ins    BYTE PTR es:[edi],dx
  4216bd:	dec    ecx
  4216be:	push   es
  4216bf:	loop   0x42172d
  4216c1:	adc    eax,0xf82279da
  4216c6:	mov    esp,0x36035d5e
  4216cb:	jns    0x421654
  4216cd:	imul   eax,DWORD PTR [ecx+0x2e7441e6],0x478a6144
  4216d7:	retf   
  4216d8:	movlps xmm1,QWORD PTR [eax+ebp*2+0x4f]
  4216dd:	xchg   edx,eax
  4216de:	xchg   BYTE PTR [edx-0x7b3ad5ab],bl
  4216e4:	mov    ah,BYTE PTR [ebp-0x25d90a52]
  4216ea:	jno    0x421767
  4216ec:	cli    
  4216ed:	lods   eax,DWORD PTR ds:[esi]
  4216ee:	int    0x66
  4216f0:	xor    eax,0x23d4054f
  4216f5:	mov    ecx,0xfe0d2a86
  4216fa:	or     ch,BYTE PTR [edi-0x4a]
  4216fd:	std    
  4216fe:	inc    eax
  4216ff:	fiadd  WORD PTR [ecx+0x31]
  421702:	shl    BYTE PTR [eax+0x7b],cl
  421705:	push   0xb6bfdbf7
  42170a:	inc    dl
  42170c:	pop    esp
  42170d:	loopne 0x421724
  42170f:	fstp   QWORD PTR [edi]
  421711:	scas   eax,DWORD PTR es:[edi]
  421712:	mov    WORD PTR [eax+0x71],ss
  421715:	repz test eax,0xe2f7bf4b
  42171b:	scas   al,BYTE PTR es:[edi]
  42171c:	xlat   BYTE PTR ds:[ebx]
  42171d:	dec    eax
  42171e:	int    0x82
  421720:	jo     0x421706
  421722:	or     al,0x2
  421724:	fdivr  DWORD PTR ds:0x5580d159
  42172a:	scas   al,BYTE PTR es:[edi]
  42172b:	or     DWORD PTR [esi+0x1259142d],edi
  421731:	ins    BYTE PTR es:[edi],dx
  421732:	push   es
  421733:	cmp    eax,0xde8eaa4d
  421738:	adc    eax,0x1cfb8a40
  42173d:	test   DWORD PTR [ebp-0x17],eax
  421740:	dec    edx
  421741:	into   
  421742:	xchg   edi,eax
  421743:	aas    
  421744:	loop   0x4217c2
  421746:	jns    0x421711
  421748:	repnz push cs
  42174a:	sbb    BYTE PTR [ebp-0x1d],ah
  42174d:	jmp    0x58f4:0xeade3071
  421754:	pop    ecx
  421755:	int    0x14
  421757:	es adc al,dh
  42175a:	rol    BYTE PTR [esi],1
  42175c:	test   al,0xe5
  42175e:	mov    cl,0xb0
  421760:	jp     0x4216e3
  421762:	stos   BYTE PTR es:[edi],al
  421763:	pushf  
  421764:	(bad)  
  421765:	icebp  
  421766:	dec    ebx
  421767:	jmp    0x9e4ccca
  42176c:	mov    bh,0x46
  42176e:	(bad)  
  42176f:	mov    dh,0x7c
  421771:	and    DWORD PTR ds:0x3b518de,ebp
  421777:	sub    esp,DWORD PTR [ecx+ebp*4]
  42177a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42177b:	or     BYTE PTR [eax-0x6149bb72],0x3e
  421782:	xor    al,0x13
  421784:	fcmovnb st,st(5)
  421786:	rcl    edx,0x18
  421789:	xor    eax,0x9d4cc408
  42178e:	int3   
  42178f:	bsf    ecx,DWORD PTR [esp+eax*1+0x2e]
  421794:	jp     0x4217c9
  421796:	scas   eax,DWORD PTR es:[edi]
  421797:	loope  0x421778
  421799:	mov    esp,0x73940ddf
  42179e:	jns    0x4217e9
  4217a0:	add    bl,BYTE PTR [eax-0x8]
  4217a3:	dec    esp
  4217a4:	sti    
  4217a5:	xchg   esi,eax
  4217a6:	cdq    
  4217a7:	cwde   
  4217a8:	ror    ecx,0xb6
  4217ab:	push   ebp
  4217ac:	inc    esp
  4217ad:	push   eax
  4217ae:	scas   eax,DWORD PTR es:[edi]
  4217af:	and    eax,0x1af5a330
  4217b4:	mov    dl,0x5b
  4217b6:	pop    ebx
  4217b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217b8:	add    BYTE PTR ds:0x4d24d15f,bl
  4217be:	or     al,0x80
  4217c0:	rcr    BYTE PTR [edi+0x12],0x11
  4217c4:	xchg   ecx,eax
  4217c5:	sub    eax,0x18c9762f
  4217ca:	adc    ch,BYTE PTR [ebx+0x38]
  4217cd:	or     DWORD PTR [edx+0x8],esp
  4217d0:	dec    esp
  4217d1:	call   0xf5c9:0x74600b50
  4217d8:	das    
  4217d9:	pop    esp
  4217da:	mov    ebx,0xe234b47e
  4217df:	xor    BYTE PTR [ebp-0x4da401d0],dl
  4217e5:	lahf   
  4217e6:	adc    eax,0xcf00281e
  4217eb:	fidiv  DWORD PTR [ecx]
  4217ed:	dec    ebp
  4217ee:	push   ecx
  4217ef:	out    0xf,eax
  4217f1:	loopne 0x4217d4
  4217f3:	mov    dl,0x52
  4217f5:	rol    DWORD PTR [ebx],cl
  4217f7:	rcl    edi,0x97
  4217fa:	or     bx,WORD PTR [eax-0x6ff830b1]
  421801:	ror    BYTE PTR [edi+eax*4+0x10],0x5c
  421806:	add    DWORD PTR [eax],ebp
  421808:	bound  ebp,QWORD PTR [edx+0x479ce459]
  42180e:	push   ds
  42180f:	mov    bh,BYTE PTR [ebp+edi*4-0x5c]
  421813:	pushf  
  421814:	xor    ah,BYTE PTR [edi-0xc]
  421817:	sahf   
  421818:	push   0x1e8f60be
  42181d:	js     0x4217c8
  42181f:	lahf   
  421820:	sbb    ch,0xc7
  421823:	sbb    ebx,DWORD PTR [edx]
  421825:	jl     0x421851
  421827:	inc    eax
  421828:	mov    WORD PTR [ecx+0x1],es
  42182b:	add    al,0xbc
  42182d:	cld    
  42182e:	xor    al,0xc5
  421830:	mov    esi,0x1ed5018c
  421835:	fisubr DWORD PTR [edx]
  421837:	stos   BYTE PTR es:[edi],al
  421838:	js     0x421815
  42183a:	xor    BYTE PTR [ebp+0x4],bh
  42183d:	sbb    BYTE PTR [edi],0xe0
  421840:	xchg   edi,eax
  421841:	cmp    BYTE PTR [esi-0x2e],ch
  421844:	not    DWORD PTR cs:[edi+eax*2]
  421848:	mov    dh,0x8
  42184a:	xchg   ebp,eax
  42184b:	rcl    BYTE PTR [ecx],0x9
  42184e:	cmp    dl,bl
  421850:	out    0x67,eax
  421852:	adc    eax,0x927a67ab
  421857:	(bad)  
  421858:	push   ds
  421859:	dec    ebx
  42185a:	ret    
  42185b:	lods   eax,DWORD PTR ds:[esi]
  42185c:	mov    ds:0x39a9fe5c,eax
  421861:	(bad)  
  421863:	xchg   BYTE PTR [ebp-0x58],dl
  421866:	jp     0x42184f
  421868:	das    
  421869:	in     al,0xaa
  42186b:	adc    eax,0x6c0b2a1e
  421870:	adc    BYTE PTR [edi+0x7a],ch
  421873:	in     al,dx
  421874:	push   esp
  421875:	mov    ebx,0x1544814
  42187a:	mov    esi,0x60974e57
  42187f:	shl    DWORD PTR [ebx-0x55],1
  421882:	aam    0x6
  421884:	outs   dx,DWORD PTR ds:[esi]
  421885:	imul   DWORD PTR [edi-0x308d2419]
  42188b:	in     eax,0xa
  42188d:	sbb    al,0x19
  42188f:	aaa    
  421890:	jne    0x4218c0
  421892:	push   ecx
  421893:	test   DWORD PTR [edi],0x254615c0
  421899:	cwde   
  42189a:	adc    eax,0x2eaec8be
  42189f:	xor    eax,esp
  4218a1:	shl    BYTE PTR [edx+ecx*2+0x14],1
  4218a5:	dec    ecx
  4218a6:	aas    
  4218a7:	fcmovne st,st(7)
  4218a9:	shr    DWORD PTR [ecx+0x6db2146e],cl
  4218af:	adc    ebp,DWORD PTR gs:[ebx-0x21a9ba68]
  4218b6:	push   ebx
  4218b7:	bound  eax,QWORD PTR [ebx]
  4218b9:	sahf   
  4218ba:	mov    bl,0xaa
  4218bc:	xor    bh,BYTE PTR [esi]
  4218be:	repz fisubr WORD PTR [ebx]
  4218c1:	mov    bl,0x82
  4218c3:	jnp    0x421922
  4218c5:	mov    bl,0xfa
  4218c7:	outs   dx,BYTE PTR ds:[esi]
  4218c8:	xchg   esi,eax
  4218c9:	mov    esp,0x852db9d1
  4218ce:	inc    ebp
  4218cf:	cmp    BYTE PTR [ebx+0x49647624],ch
  4218d5:	mov    bl,0x39
  4218d7:	xchg   ecx,eax
  4218d8:	sub    ebx,ebx
  4218da:	sbb    BYTE PTR [ecx-0x20],al
  4218dd:	and    edi,DWORD PTR [ecx-0x25]
  4218e0:	(bad)  
  4218e1:	sbb    al,0x4b
  4218e3:	inc    ecx
  4218e4:	mov    dl,0x5b
  4218e6:	outs   dx,BYTE PTR ds:[esi]
  4218e7:	stos   BYTE PTR es:[edi],al
  4218e8:	shl    DWORD PTR [eax+0x15],1
  4218eb:	test   al,0x57
  4218ed:	cmp    edx,DWORD PTR [edx-0x38]
  4218f0:	mov    WORD PTR ds:0xbefb1d4f,?
  4218f6:	push   ds
  4218f7:	retf   
  4218f8:	repz lea ebp,[ecx]
  4218fb:	shl    ch,cl
  4218fd:	sahf   
  4218fe:	push   cs
  4218ff:	add    ebx,eax
  421901:	add    BYTE PTR [esi-0x4fd6421],dh
  421907:	inc    esi
  421908:	mov    edi,0x5e25f0ff
  42190d:	and    eax,0xe4008c66
  421912:	or     eax,0x2700018e
  421917:	add    eax,DWORD PTR [eax]
  421919:	add    dh,ch
  42191b:	xor    ebx,DWORD PTR [edx-0x79]
  42191e:	sub    edi,DWORD PTR [eax+0x56]
  421921:	fnstcw WORD PTR [ebx+0xebdf05c]
  421927:	cmp    al,0x96
  421929:	icebp  
  42192a:	jg     0x42197d
  42192c:	lods   eax,DWORD PTR ds:[esi]
  42192d:	fld    QWORD PTR [ebx]
  42192f:	ja     0x4218fa
  421931:	jbe    0x4218f4
  421933:	icebp  
  421934:	xchg   ebx,eax
  421935:	xchg   esi,eax
  421936:	mov    edx,0x3ec3647e
  42193b:	sub    al,0x9
  42193d:	fsub   DWORD PTR [ecx]
  42193f:	pop    eax
  421940:	pop    eax
  421941:	mov    bh,0xe2
  421943:	mov    ebp,0x49d1c014
  421948:	pop    ss
  421949:	xor    BYTE PTR [ebx+ecx*4-0x6adfed43],ch
  421950:	xchg   esp,eax
  421951:	lahf   
  421952:	std    
  421953:	pop    es
  421954:	xchg   ebx,eax
  421955:	in     al,dx
  421956:	inc    esi
  421957:	enter  0x14d2,0xed
  42195b:	or     DWORD PTR [ebx],eax
  42195d:	jno    0x421952
  42195f:	mov    WORD PTR [edx+0x1e62e456],cs
  421965:	mov    ebx,0xbeffd5ac
  42196a:	jno    0x421908
  42196c:	inc    edi
  42196d:	push   es
  42196e:	jle    0x42195d
  421970:	hlt    
  421971:	pop    ds
  421972:	ins    DWORD PTR es:[edi],dx
  421973:	adc    BYTE PTR [edi-0x43eaf3cf],dh
  421979:	es scas al,BYTE PTR es:[edi]
  42197b:	push   eax
  42197c:	jmp    0x84ce:0x205ec363
  421983:	repz lahf 
  421985:	push   0x2a2d07c0
  42198a:	inc    edi
  42198b:	push   0x74
  42198d:	stos   DWORD PTR es:[edi],eax
  42198e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42198f:	sub    BYTE PTR [ebp+0x5a],bl
  421992:	out    dx,eax
  421993:	outs   dx,BYTE PTR ds:[esi]
  421994:	lea    edi,[eax+0x57d61d9e]
  42199a:	mov    ecx,0xa0e9352b
  42199f:	xchg   edi,eax
  4219a0:	cmp    eax,0xaf1f1ad7
  4219a5:	dec    eax
  4219a6:	loope  0x42192b
  4219a8:	arpl   WORD PTR ds:0x453c2b04,ax
  4219ae:	js     0x421a04
  4219b0:	sahf   
  4219b1:	inc    ecx
  4219b2:	add    eax,0xad05af5c
  4219b7:	xchg   edx,eax
  4219b8:	scas   eax,DWORD PTR es:[edi]
  4219b9:	dec    edx
  4219ba:	inc    edx
  4219bb:	jno    0xf4d8fca0
  4219c1:	jmp    0x5f5a0ff1
  4219c6:	sahf   
  4219c7:	jle    0x421970
  4219c9:	inc    ebp
  4219ca:	inc    eax
  4219cb:	and    BYTE PTR [ebx+esi*1],al
  4219ce:	inc    ecx
  4219cf:	addr16 jb 0x421a30
  4219d2:	mov    dh,0xe2
  4219d4:	dec    esp
  4219d5:	leave  
  4219d6:	scas   eax,DWORD PTR es:[edi]
  4219d7:	neg    BYTE PTR [ebp+eiz*8-0x7662d824]
  4219de:	sub    DWORD PTR [eax-0x59c7445a],ebp
  4219e4:	ror    al,1
  4219e6:	adc    esp,DWORD PTR [esi]
  4219e8:	and    BYTE PTR [edx],cl
  4219ea:	pop    ss
  4219eb:	lods   eax,DWORD PTR ds:[esi]
  4219ec:	std    
  4219ed:	jbe    0x421990
  4219ef:	sahf   
  4219f0:	adc    al,0x5c
  4219f2:	call   0x31e9:0xcad1174
  4219f9:	popf   
  4219fa:	ficom  DWORD PTR [ebp+0x6a]
  4219fd:	stos   BYTE PTR es:[edi],al
  4219fe:	adc    bl,bl
  421a00:	inc    ebp
  421a01:	into   
  421a02:	ds addr16 jns 0x421a44
  421a06:	pusha  
  421a07:	sbb    ecx,DWORD PTR [ecx+0x6a]
  421a0a:	jb     0x4219dc
  421a0c:	inc    ebp
  421a0d:	lahf   
  421a0e:	xor    ch,BYTE PTR [ebp-0x78dc91de]
  421a14:	mov    gs,WORD PTR [edx]
  421a16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a17:	and    bh,BYTE PTR [ecx+0x11]
  421a1a:	pop    ecx
  421a1b:	or     BYTE PTR [ecx],dh
  421a1d:	aaa    
  421a1e:	pop    ss
  421a1f:	imul   eax,DWORD PTR [ebp+0x39ff38fd],0x3e
  421a26:	push   0x290ed9c4
  421a2b:	adc    DWORD PTR [esi-0x9],esi
  421a2e:	mov    eax,ebp
  421a30:	inc    edx
  421a31:	icebp  
  421a32:	arpl   WORD PTR [ebx],bx
  421a34:	adc    eax,0x55c40630
  421a39:	pop    ebx
  421a3a:	stc    
  421a3b:	daa    
  421a3c:	push   ss
  421a3d:	push   0x22
  421a3f:	icebp  
  421a40:	sub    al,0xfd
  421a42:	jmp    0x421a7e
  421a44:	cmp    esp,DWORD PTR [edx-0x19b376c3]
  421a4a:	mov    ebp,0xfb5f25dc
  421a4f:	add    dh,al
  421a51:	mov    ah,0x33
  421a53:	sbb    eax,0x43238ae0
  421a58:	cmp    BYTE PTR [ebx+ecx*2],0x5a
  421a5c:	jg     0x421a12
  421a5e:	aaa    
  421a5f:	out    dx,al
  421a60:	int3   
  421a61:	push   es
  421a62:	mov    ecx,0x3e4d1566
  421a67:	pop    ss
  421a68:	dec    edx
  421a69:	lahf   
  421a6a:	sar    DWORD PTR [ebx+esi*1],1
  421a6d:	sbb    ebx,ecx
  421a6f:	loope  0x421a3e
  421a71:	cdq    
  421a72:	lods   eax,DWORD PTR ds:[esi]
  421a73:	pop    ss
  421a74:	hlt    
  421a75:	push   eax
  421a76:	mov    al,ah
  421a78:	push   ebx
  421a79:	xor    eax,DWORD PTR [esi]
  421a7b:	cwde   
  421a7c:	sbb    DWORD PTR [ebp+0x1f],0x6883281
  421a83:	xchg   ebp,eax
  421a84:	push   eax
  421a85:	imul   edx,DWORD PTR [eax+0x68831152],0xfffffffa
  421a8c:	sti    
  421a8d:	jae    0x421a76
  421a8f:	dec    eax
  421a90:	pop    ebx
  421a91:	xchg   DWORD PTR [ecx+0x5f1b9fb6],ebp
  421a97:	cdq    
  421a98:	adc    DWORD PTR [ebx],0x5b
  421a9b:	sahf   
  421a9c:	mov    ecx,0x358afa8e
  421aa1:	or     BYTE PTR [esi],al
  421aa3:	xor    edx,DWORD PTR [ebx+0x69]
  421aa6:	adc    BYTE PTR [edx+ecx*4-0x62a3a2d9],al
  421aad:	test   DWORD PTR [edi+0x5b],edx
  421ab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ab1:	mov    ebx,0xed1afb90
  421ab6:	and    ch,dl
  421ab8:	xchg   edi,eax
  421ab9:	lea    ebp,[edi-0x4920b64a]
  421abf:	cli    
  421ac0:	int    0xb3
  421ac2:	and    edi,DWORD PTR [eax+0x29]
  421ac5:	mov    ds:0xa753d8eb,eax
  421aca:	in     al,dx
  421acb:	xor    DWORD PTR [ebp-0x1a],0x1c
  421acf:	fwait
  421ad0:	stc    
  421ad1:	cmp    edi,esp
  421ad3:	cmp    esi,DWORD PTR [edx]
  421ad5:	cmp    bh,BYTE PTR ds:0xdf780550
  421adb:	fsubrp st(4),st
  421add:	add    DWORD PTR [eax],ebp
  421adf:	data16 (bad) 
  421ae2:	arpl   WORD PTR [ebx-0x40],sp
  421ae5:	lods   eax,DWORD PTR ds:[esi]
  421ae6:	sar    DWORD PTR [ebx-0x3],cl
  421ae9:	inc    ebx
  421aea:	jmp    0x35c2:0x400ad9b6
  421af1:	or     DWORD PTR [edx-0x10fd5693],ebp
  421af7:	cs xchg edi,eax
  421af9:	fisttp QWORD PTR [edx+ebp*2]
  421afc:	lea    ecx,[eax]
  421afe:	mov    bx,0xf1d
  421b02:	push   esi
  421b03:	lods   eax,DWORD PTR ds:[esi]
  421b04:	mov    ecx,0xe4641205
  421b09:	in     al,0xf0
  421b0b:	retf   
  421b0c:	mov    esp,db4
  421b0f:	inc    ebx
  421b10:	or     dl,BYTE PTR [esi-0x2e]
  421b13:	sbb    eax,0x422e8d7e
  421b18:	xor    al,0xeb
  421b1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b1b:	pop    esp
  421b1c:	dec    ebp
  421b1d:	int3   
  421b1e:	cdq    
  421b1f:	mov    eax,0xd8ecb8b6
  421b24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b25:	sbb    al,0x34
  421b27:	and    al,0xea
  421b29:	and    dh,BYTE PTR [edx+ebp*1-0x26a2188c]
  421b30:	inc    ecx
  421b31:	jmp    0x421b91
  421b33:	sbb    eax,esp
  421b35:	inc    ebp
  421b36:	jmp    0x421af9
  421b38:	pop    esi
  421b39:	and    al,0xd0
  421b3b:	mov    al,ds:0xc5b340b6
  421b40:	cs inc ebx
  421b42:	mov    esi,0xd051694b
  421b47:	inc    ebx
  421b48:	inc    edx
  421b49:	sbb    eax,DWORD PTR ds:0x7a4e1395
  421b4f:	mov    dh,0x68
  421b51:	jne    0x421b26
  421b53:	xchg   ecx,eax
  421b54:	mov    esi,0xc10d4507
  421b59:	ds jae 0x421b38
  421b5c:	push   ebx
  421b5d:	int    0xc0
  421b5f:	cld    
  421b60:	loop   0x421b9f
  421b62:	sbb    eax,0xcd8a53d1
  421b67:	in     eax,dx
  421b68:	cmp    al,0x96
  421b6a:	daa    
  421b6b:	retf   0x3434
  421b6e:	jo     0x421b99
  421b70:	lods   al,BYTE PTR ds:[esi]
  421b71:	xlat   BYTE PTR ds:[ebx]
  421b72:	stos   BYTE PTR es:[edi],al
  421b73:	in     eax,dx
  421b74:	pop    ss
  421b75:	fld    TBYTE PTR [edx]
  421b77:	pop    ecx
  421b78:	in     al,dx
  421b79:	pop    eax
  421b7a:	pushf  
  421b7b:	xor    edi,DWORD PTR [ebx-0x70]
  421b7e:	cli    
  421b7f:	jge    0x421b7e
  421b81:	aaa    
  421b82:	adc    BYTE PTR [ecx],bh
  421b84:	fwait
  421b85:	and    DWORD PTR [edi],esp
  421b87:	jg     0x421b9c
  421b89:	xchg   ebx,eax
  421b8a:	mov    eax,ds:0xdd39b3d6
  421b8f:	int    0x54
  421b91:	retf   
  421b92:	mov    BYTE PTR [esi+0x19be5266],dh
  421b98:	or     ah,0x8b
  421b9b:	and    BYTE PTR [esi+0x8318e0d],al
  421ba1:	mov    eax,0x36721121
  421ba6:	xchg   ebx,eax
  421ba7:	pop    ecx
  421ba8:	sti    
  421ba9:	dec    ebp
  421baa:	xor    bh,BYTE PTR [esi-0xc8cacb7]
  421bb0:	xchg   ecx,eax
  421bb1:	jecxz  0x421b4d
  421bb3:	xor    DWORD PTR [ecx+eax*1+0x4b],0x287aae72
  421bbb:	jge    0x421c30
  421bbd:	aam    0x25
  421bbf:	xchg   edx,eax
  421bc0:	sub    esi,ebx
  421bc2:	push   0xffffffec
  421bc4:	call   esp
  421bc6:	repz leave 
  421bc8:	sbb    BYTE PTR [ebp+0x12],bh
  421bcb:	in     eax,0x3a
  421bcd:	lods   eax,DWORD PTR ds:[esi]
  421bce:	fisttp DWORD PTR [ebx]
  421bd0:	jp     0x421bd7
  421bd2:	lods   eax,DWORD PTR ds:[esi]
  421bd3:	cs fsubr st(7),st
  421bd6:	lahf   
  421bd7:	retf   0x6110
  421bda:	fcmovnu st,st(0)
  421bdc:	xor    eax,0xf610bcff
  421be1:	jo     0x421c33
  421be3:	mov    ebp,0x524985e8
  421be8:	xchg   ecx,eax
  421be9:	sahf   
  421bea:	mov    bl,0xad
  421bec:	fcomp  QWORD PTR [esi-0x667aed78]
  421bf2:	pop    eax
  421bf3:	xchg   edi,edi
  421bf5:	push   ebp
  421bf6:	in     al,0xc0
  421bf8:	fistp  WORD PTR [ebx-0x6a]
  421bfb:	jo     0x421b86
  421bfd:	xchg   DWORD PTR [edi+0xc4575dd],ebp
  421c03:	scas   eax,DWORD PTR es:[edi]
  421c04:	sub    dh,BYTE PTR [esi]
  421c06:	dec    ebx
  421c07:	push   esi
  421c08:	xchg   esp,eax
  421c09:	ds mov edi,0x6e5d86b4
  421c0f:	and    BYTE PTR [ebp-0x3a],cl
  421c12:	jnp    0x421c4d
  421c14:	arpl   WORD PTR [eax+0x7c67d187],ax
  421c1a:	and    edi,DWORD PTR [eax-0x548f9163]
  421c20:	mov    ebx,DWORD PTR [edi-0x36]
  421c23:	cwde   
  421c24:	sbb    BYTE PTR [esi+0x609a8b4f],ch
  421c2a:	daa    
  421c2b:	push   edi
  421c2c:	mov    edx,0xedbd04e4
  421c31:	mov    edi,0xea875edc
  421c36:	jb     0x421c9e
  421c38:	scas   al,BYTE PTR es:[edi]
  421c39:	adc    BYTE PTR [edi],ch
  421c3b:	cs out 0xc9,eax
  421c3e:	in     al,dx
  421c3f:	fldcw  WORD PTR [eax]
  421c41:	add    al,bh
  421c43:	mov    ah,0x7f
  421c45:	cmp    eax,0xf5faff7f
  421c4a:	jle    0x421c4e
  421c4c:	xor    eax,DWORD PTR [esi-0x5a]
  421c4f:	jnp    0x421c24
  421c51:	jmp    0x43ad8a
  421c56:	daa    
  421c57:	add    eax,DWORD PTR [eax]
  421c59:	add    BYTE PTR [eax-0x53abd403],ch
  421c5f:	sub    ecx,DWORD PTR [edx-0x3026d4e]
  421c65:	sub    esi,DWORD PTR [ecx+0x13bd7cd6]
  421c6b:	push   ds
  421c6c:	sbb    dh,bh
  421c6e:	jae    0x421c55
  421c70:	clc    
  421c71:	push   esp
  421c72:	and    eax,0xa2484615
  421c77:	or     al,0x7e
  421c79:	jg     0x421ccd
  421c7b:	(bad)  
  421c7c:	aam    0xe2
  421c7e:	aad    0x44
  421c80:	push   ds
  421c81:	mov    esi,?
  421c83:	loopne 0x421c77
  421c85:	xchg   esi,eax
  421c86:	lea    esi,[ecx-0x74dd49e]
  421c8c:	clc    
  421c8d:	inc    ebx
  421c8e:	lods   eax,DWORD PTR ds:[esi]
  421c8f:	sbb    esp,ebx
  421c91:	dec    ebp
  421c92:	ret    
  421c93:	mov    cl,0xb4
  421c95:	fld    TBYTE PTR [ebp-0x3fbb2df1]
  421c9b:	xor    dl,BYTE PTR [edi+0x5f57b70]
  421ca1:	mov    WORD PTR [ebx-0x5a],?
  421ca4:	aad    0x5c
  421ca6:	(bad)  
  421ca7:	mov    bh,0xe5
  421ca9:	mov    ecx,0xa80a70e
  421cae:	sbb    BYTE PTR [edx+0x654e9b25],0x8e
  421cb5:	push   DWORD PTR [edx+0x8]
  421cb8:	sahf   
  421cb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cba:	mov    al,0xb1
  421cbc:	in     eax,0x2
  421cbe:	and    BYTE PTR [ecx-0x1],bl
  421cc1:	shl    BYTE PTR [edx+0x24],cl
  421cc4:	pop    esi
  421cc5:	and    esp,DWORD PTR [edx]
  421cc7:	cmp    eax,0xe20a079f
  421ccc:	jnp    0x421cf5
  421cce:	ja     0x421c96
  421cd0:	lock ret 
  421cd2:	xchg   ecx,eax
  421cd3:	int    0xf4
  421cd5:	add    BYTE PTR [eax-0x27],bh
  421cd8:	pop    ebp
  421cd9:	mov    ch,0xea
  421cdb:	mov    dh,0x1f
  421cdd:	add    al,0xe3
  421cdf:	imul   edi,esp,0xd654cca9
  421ce5:	pop    edi
  421ce6:	ret    
  421ce7:	ret    0xa981
  421cea:	mov    esi,0xffc5472f
  421cef:	xchg   ebx,eax
  421cf0:	into   
  421cf1:	dec    ecx
  421cf2:	and    eax,0x711af81e
  421cf7:	or     eax,0x9a31a299
  421cfc:	xor    ecx,DWORD PTR [eax+0x4f732da]
  421d02:	sbb    esi,DWORD PTR gs:0xe98f2210
  421d09:	lock setnp BYTE PTR [edi]
  421d0d:	dec    DWORD PTR [ebx]
  421d0f:	dec    esp
  421d10:	(bad)  
  421d11:	retf   
  421d12:	jmp    0x421ca8
  421d14:	dec    DWORD PTR [eax+0x35d24ba5]
  421d1a:	xchg   ebx,eax
  421d1b:	fimul  DWORD PTR [edx]
  421d1d:	pushf  
  421d1e:	outs   dx,DWORD PTR ds:[esi]
  421d1f:	call   0x64a6a809
  421d24:	mov    ?,WORD PTR [ebx+esi*2-0x50b15731]
  421d2b:	outs   dx,BYTE PTR ds:[esi]
  421d2c:	fsub   DWORD PTR [ebx-0x9]
  421d2f:	ret    0x958b
  421d32:	or     DWORD PTR [edi+edi*1-0x21],ecx
  421d36:	fld    QWORD PTR [esi+0x4cd55177]
  421d3c:	(bad)  [edi+0x26]
  421d3f:	test   al,0xd6
  421d41:	test   DWORD PTR [esi+0x4624b484],ecx
  421d47:	add    DWORD PTR [edx+0x1c71382a],esp
  421d4d:	sbb    al,dh
  421d4f:	cmp    al,0x50
  421d51:	shl    esp,0x0
  421d54:	addr16 xchg esp,eax
  421d56:	push   ecx
  421d57:	pop    esi
  421d58:	int    0x32
  421d5a:	cdq    
  421d5b:	mov    gs,edx
  421d5d:	pop    esp
  421d5e:	mov    BYTE PTR ds:0x1806a35f,al
  421d64:	sub    al,0x63
  421d66:	pop    edi
  421d67:	or     ecx,DWORD PTR [ebx]
  421d69:	push   es
  421d6a:	cmp    DWORD PTR [ebp-0x577ac31],edi
  421d70:	outs   dx,BYTE PTR ds:[esi]
  421d71:	dec    edi
  421d72:	sub    DWORD PTR [edx-0x50c19b11],edi
  421d78:	add    edx,DWORD PTR [ecx-0x815abe6]
  421d7e:	mov    eax,ds:0x3ce76c94
  421d83:	dec    ecx
  421d84:	shl    BYTE PTR [edi],cl
  421d86:	xor    esi,edi
  421d88:	mov    dh,0x47
  421d8a:	bound  ebp,QWORD PTR [esi]
  421d8c:	je     0x421d5e
  421d8e:	fldenv [ecx-0x609f368c]
  421d94:	xchg   edx,eax
  421d95:	mov    BYTE PTR [edx-0x5e70f70e],ah
  421d9b:	mov    edi,0x460ecd7
  421da0:	push   edi
  421da1:	pop    ecx
  421da2:	inc    eax
  421da3:	inc    ecx
  421da4:	mov    bh,0x30
  421da6:	addr16 jo 0x421e03
  421da9:	push   eax
  421daa:	xlat   BYTE PTR ds:[ebx]
  421dab:	push   0x34
  421dad:	pop    es
  421dae:	in     eax,0x5f
  421db0:	jbe    0x421d45
  421db2:	stos   BYTE PTR es:[edi],al
  421db3:	push   ecx
  421db4:	sbb    eax,0x7f
  421db7:	(bad)  
  421db8:	sbb    al,0xe9
  421dba:	dec    ebp
  421dbb:	pop    ebp
  421dbc:	in     al,0x4e
  421dbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dbf:	test   al,0x1
  421dc1:	jo     0x421d9e
  421dc3:	sub    ah,ah
  421dc5:	fsubrp st(6),st
  421dc7:	js     0x421d95
  421dc9:	ret    0xb566
  421dcc:	daa    
  421dcd:	lahf   
  421dce:	jmp    0xddc4ffb1
  421dd3:	leave  
  421dd4:	ja     0x421d57
  421dd6:	mul    BYTE PTR [edx+eiz*2-0xd88c11b]
  421ddd:	mov    cl,0x4b
  421ddf:	or     al,0xe8
  421de1:	(bad)  
  421de3:	xlat   BYTE PTR ds:[ebx]
  421de4:	jno    0x421d94
  421de6:	mov    BYTE PTR [eax-0x9],ah
  421de9:	xchg   ebp,eax
  421dea:	clc    
  421deb:	mov    BYTE PTR [bp-0x78],al
  421def:	and    ebx,DWORD PTR [eax]
  421df1:	xchg   ebx,eax
  421df2:	jnp    0x421e5b
  421df4:	push   esp
  421df5:	in     eax,dx
  421df6:	lods   al,BYTE PTR ds:[esi]
  421df7:	mov    cl,0x22
  421df9:	out    dx,al
  421dfa:	cdq    
  421dfb:	mov    dh,0x82
  421dfd:	nop
  421dfe:	xchg   esp,eax
  421dff:	lods   al,BYTE PTR ds:[esi]
  421e00:	xchg   ecx,eax
  421e01:	xlat   BYTE PTR ds:[ebx]
  421e02:	dec    ecx
  421e03:	jp     0x421e46
  421e05:	popf   
  421e06:	fwait
  421e07:	xchg   ecx,eax
  421e08:	mov    esi,0x88287010
  421e0d:	(bad)  [edx+0x445f86ad]
  421e13:	jp     0x421e8a
  421e15:	add    BYTE PTR [edx+0x3c1d5155],ch
  421e1b:	mov    BYTE PTR [eax+eiz*8+0x30],ch
  421e1f:	bound  eax,QWORD PTR [esi-0x61]
  421e22:	adc    ebp,DWORD PTR [edi]
  421e24:	sub    al,0x6d
  421e26:	aas    
  421e27:	dec    ebp
  421e28:	xchg   esp,eax
  421e29:	out    0xf2,eax
  421e2b:	xchg   esi,eax
  421e2c:	scas   al,BYTE PTR es:[edi]
  421e2d:	stos   BYTE PTR es:[edi],al
  421e2e:	mov    esi,0x8c11925a
  421e33:	xor    ecx,DWORD PTR [ebx]
  421e35:	pop    edx
  421e36:	push   ecx
  421e37:	scas   al,BYTE PTR es:[edi]
  421e38:	mov    bl,0xef
  421e3a:	mov    bh,0xa3
  421e3c:	jo     0x421dd5
  421e3e:	iret   
  421e3f:	mov    dl,0x69
  421e41:	cli    
  421e42:	pandn  mm3,mm1
  421e45:	pop    ds
  421e46:	mov    WORD PTR [ebp+0x7b],cs
  421e49:	not    cl
  421e4b:	mov    dl,0xa1
  421e4d:	cmc    
  421e4e:	inc    ebx
  421e4f:	jp     0x421e65
  421e51:	sub    BYTE PTR [eax],0x92
  421e54:	mov    dl,0x6b
  421e56:	xchg   esi,eax
  421e57:	or     eax,0x973facef
  421e5c:	or     DWORD PTR [ebx-0x23],esi
  421e5f:	out    dx,al
  421e60:	cmp    dh,BYTE PTR [eax-0x8]
  421e63:	add    cl,ah
  421e65:	call   0xb6374544
  421e6a:	and    DWORD PTR [edi+0x4009c735],0x50
  421e71:	or     eax,0xdcd72f66
  421e76:	xor    eax,0x2f7dd3d8
  421e7b:	shl    BYTE PTR [ebp-0x18d72ed9],0x9
  421e82:	enter  0xe41b,0x73
  421e86:	cmp    al,BYTE PTR [esi+0x787b1311]
  421e8c:	or     dl,al
  421e8e:	inc    eax
  421e8f:	sbb    bl,BYTE PTR [ebx]
  421e91:	add    eax,0x99a37815
  421e96:	sbb    esp,DWORD PTR [ebx]
  421e98:	ins    BYTE PTR es:[edi],dx
  421e99:	sbb    DWORD PTR [ebx+0x4c],ebp
  421e9c:	jns    0x421e41
  421e9e:	out    dx,eax
  421e9f:	pop    esi
  421ea0:	loopne 0x421eee
  421ea2:	sub    BYTE PTR ds:0xfc4b0585,al
  421ea8:	mov    bh,0xdc
  421eaa:	fs popa 
  421eac:	dec    ebp
  421ead:	int3   
  421eae:	rol    DWORD PTR [edx+0x79bdfbaa],0x61
  421eb5:	mov    DWORD PTR [edx],edx
  421eb7:	retf   0x7fa2
  421eba:	das    
  421ebb:	inc    edx
  421ebc:	enter  0xcb73,0xed
  421ec0:	fs call 0x2da24bfa
  421ec6:	ror    BYTE PTR [ebx],0x6b
  421ec9:	mov    ch,0x3a
  421ecb:	loope  0x421ea9
  421ecd:	mov    ch,BYTE PTR [ebp+0x26]
  421ed0:	scas   al,BYTE PTR es:[edi]
  421ed1:	pop    esi
  421ed2:	sub    BYTE PTR [ecx-0x7f],0x83
  421ed6:	dec    esp
  421ed7:	inc    ebx
  421ed8:	add    al,0x30
  421eda:	inc    esp
  421edb:	add    BYTE PTR [edx+0x2f],ah
  421ede:	neg    BYTE PTR [ebx+0x4cf65437]
  421ee4:	inc    ecx
  421ee5:	xor    cl,ch
  421ee7:	or     eax,0x27de5e8b
  421eec:	iret   
  421eed:	jmp    0xfc6a:0xede2d0a7
  421ef4:	jg     0x421ee2
  421ef6:	and    dl,ah
  421ef8:	shl    BYTE PTR [edi-0x26acb04a],0x99
  421eff:	popf   
  421f00:	fisubr WORD PTR [ebp+0x32]
  421f03:	push   0x1d
  421f05:	sahf   
  421f06:	test   BYTE PTR [ecx+0x6d],0xd7
  421f0a:	sub    esp,DWORD PTR [ebx+0x7a]
  421f0d:	test   al,0xd9
  421f0f:	pop    edi
  421f10:	sbb    DWORD PTR [esi+0x6e750863],edx
  421f16:	test   eax,0xe331efdb
  421f1b:	dec    esi
  421f1c:	push   ebp
  421f1d:	dec    esi
  421f1e:	loop   0x421edd
  421f20:	rcl    edx,0xa4
  421f23:	sti    
  421f24:	sub    al,bh
  421f26:	clc    
  421f27:	cdq    
  421f28:	inc    edx
  421f29:	dec    esp
  421f2a:	xchg   DWORD PTR ss:[edx+0x21de2405],ecx
  421f31:	push   es
  421f32:	loope  0x421f2e
  421f34:	div    DWORD PTR [esi+0x35]
  421f37:	and    al,0x78
  421f39:	or     BYTE PTR [eax-0x2560c8b4],dh
  421f3f:	int3   
  421f40:	push   es
  421f41:	in     eax,0x91
  421f43:	cdq    
  421f44:	mov    al,ds:0x74be17c4
  421f49:	push   ss
  421f4a:	pop    edx
  421f4b:	mov    dl,0x18
  421f4d:	cmp    BYTE PTR [eax-0x6dae4b30],ch
  421f53:	cmp    esp,DWORD PTR [edx-0x41]
  421f56:	cmp    eax,0x6649bba2
  421f5b:	jle    0x421eef
  421f5d:	pop    ebp
  421f5e:	fld    QWORD PTR [ecx+0x28d91586]
  421f64:	sbb    edx,DWORD PTR [ecx+0x7aa390c6]
  421f6a:	pop    ebp
  421f6b:	or     DWORD PTR [ebx+edi*4-0x58],edx
  421f6f:	inc    ecx
  421f70:	and    al,BYTE PTR [edx+0x61c592c2]
  421f76:	cld    
  421f77:	inc    ebp
  421f78:	add    BYTE PTR [esi+0x7ffcb54f],0x59
  421f7f:	iret   
  421f80:	inc    edx
  421f81:	add    BYTE PTR [ecx],bh
  421f83:	sbb    al,0x89
  421f85:	out    0xad,eax
  421f87:	idiv   DWORD PTR [edi-0x22]
  421f8a:	mov    DWORD PTR [edx+0x79],ebp
  421f8d:	cmp    DWORD PTR [ecx+edx*2-0x71],0x1945bb0
  421f95:	add    BYTE PTR [edi],ah
  421f97:	add    eax,DWORD PTR [eax]
  421f99:	add    ch,bh
  421f9b:	sub    dh,BYTE PTR [eax+0x25]
  421f9e:	xchg   edx,eax
  421f9f:	or     ecx,edx
  421fa1:	mov    DWORD PTR [ebp*8-0x3b829498],ebp
  421fa8:	mov    eax,0x8eeb8203
  421fad:	cmp    cl,ch
  421faf:	mov    ebp,0x3089414f
  421fb4:	add    DWORD PTR [edx+ecx*8],0x5aabc961
  421fbb:	mov    esi,0x5eb6d9b6
  421fc0:	xor    eax,0xab0b1d12
  421fc5:	jmp    0x405d:0xbd4ff4c6
  421fcc:	mov    bl,0x34
  421fce:	mov    ebx,0x9efa2d4a
  421fd3:	int3   
  421fd4:	ficom  DWORD PTR [eax+0x71]
  421fd7:	xchg   esp,eax
  421fd8:	jbe    0x421f91
  421fda:	pop    ebp
  421fdb:	cmc    
  421fdc:	push   ecx
  421fdd:	and    eax,0x5c8d1c71
  421fe2:	out    0xd5,eax
  421fe4:	jae    0x422051
  421fe6:	inc    BYTE PTR [edx-0x3e]
  421fe9:	or     DWORD PTR [ebp-0x33350bd1],ecx
  421fef:	ss jo  0x421f9f
  421ff2:	adc    edi,esi
  421ff4:	sar    DWORD PTR [ebx-0x2e],1
  421ff7:	stc    
  421ff8:	ins    DWORD PTR es:[edi],dx
  421ff9:	leave  
  421ffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ffb:	mov    edx,0x384cf3af
  422000:	sub    esi,esp
  422002:	push   es
  422003:	adc    eax,0xab95cc98
  422008:	in     eax,dx
  422009:	mov    dh,0xd3
  42200b:	dec    edi
  42200c:	arpl   WORD PTR [esi],si
  42200e:	enter  0x8580,0xd2
  422012:	xlat   BYTE PTR ds:[ebx]
  422013:	jl     0x421fbc
  422015:	xchg   BYTE PTR [edx],bl
  422017:	adc    ch,BYTE PTR [edi-0x36560ee4]
  42201d:	or     ch,BYTE PTR [edi+0x46]
  422020:	push   esp
  422021:	xchg   DWORD PTR [eax+ecx*4-0x6814ea5b],ebx
  422028:	and    DWORD PTR [esi-0x1],ecx
  42202b:	pushf  
  42202c:	in     eax,dx
  42202d:	mov    bh,0xc
  42202f:	mov    ds:0x2b403c68,eax
  422034:	mov    eax,ds:0xc2a4de79
  422039:	sbb    DWORD PTR [esi-0x23f9c791],esi
  42203f:	jle    0x421fe9
  422041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422042:	push   esi
  422043:	jmp    0x6a953603
  422048:	add    eax,0x17ace745
  42204d:	xor    BYTE PTR [esi+0x2d03282a],bh
  422053:	mov    BYTE PTR [ebx+edi*2],dl
  422056:	lahf   
  422057:	xchg   BYTE PTR [esp+eax*4-0x282f26e2],bh
  42205e:	data16 jge 0x422036
  422061:	or     DWORD PTR [edx+0x18],edi
  422064:	inc    DWORD PTR [edi+0x6d85039a]
  42206a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42206b:	test   dl,dl
  42206d:	dec    esp
  42206e:	daa    
  42206f:	lock sbb al,0x6a
  422072:	xchg   esi,eax
  422073:	xchg   edx,eax
  422074:	jb     0x42207a
  422076:	call   0xca04:0x7b5df9d7
  42207d:	int3   
  42207e:	cwde   
  42207f:	adc    dh,BYTE PTR [eax]
  422081:	push   cs
  422082:	sub    DWORD PTR [edx],0xffffff9f
  422085:	(bad)  
  422086:	rcr    BYTE PTR [ecx-0x75],cl
  422089:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42208a:	call   0x2abc2dd9
  42208f:	mov    al,0x50
  422091:	(bad)  
  422092:	fisttp QWORD PTR [eax]
  422094:	fsubrp st(0),st
  422096:	inc    edx
  422097:	leave  
  422098:	fistp  QWORD PTR [edi-0x65e8975e]
  42209e:	jnp    0x4220ab
  4220a0:	popa   
  4220a1:	mov    ds,WORD PTR [ebx+0x10]
  4220a4:	jb     0x4220aa
  4220a6:	adc    BYTE PTR [edx],al
  4220a8:	pop    ecx
  4220a9:	test   DWORD PTR [ebp+0x2ea95adc],ebp
  4220af:	fisub  DWORD PTR ds:0x5089e631
  4220b5:	shr    DWORD PTR [esi+0x19a3a6ff],cl
  4220bb:	xchg   edx,eax
  4220bc:	es retf 0x541a
  4220c0:	jg     0x4220c3
  4220c2:	out    0xdd,eax
  4220c4:	inc    ebp
  4220c5:	push   eax
  4220c6:	hlt    
  4220c7:	xchg   esi,eax
  4220c8:	in     al,dx
  4220c9:	retf   0x1c3d
  4220cc:	push   ds
  4220cd:	push   DWORD PTR [ebx]
  4220cf:	sub    DWORD PTR [ebp-0x58],ebp
  4220d2:	mov    DWORD PTR [edx],esi
  4220d4:	shl    DWORD PTR [esi],cl
  4220d6:	jmp    0x42208c
  4220d8:	and    dl,ch
  4220da:	push   edi
  4220db:	jnp    0x422116
  4220dd:	clc    
  4220de:	sbb    ecx,DWORD PTR [ecx-0x210cdaa]
  4220e4:	xchg   ebx,eax
  4220e5:	adc    eax,0xa7b941e1
  4220ea:	hlt    
  4220eb:	out    0x6,eax
  4220ed:	xlat   BYTE PTR ds:[ebx]
  4220ee:	inc    edx
  4220ef:	retf   
  4220f0:	in     al,dx
  4220f1:	xchg   ecx,eax
  4220f2:	daa    
  4220f3:	push   edi
  4220f4:	js     0x4220af
  4220f6:	dec    esp
  4220f7:	jmp    0x42209f
  4220f9:	scas   eax,DWORD PTR es:[edi]
  4220fa:	mov    al,0xeb
  4220fc:	stc    
  4220fd:	jns    0x4220e7
  4220ff:	jg     0x4220e1
  422101:	xchg   ebp,eax
  422102:	mov    esp,0x2580aceb
  422107:	push   esi
  422108:	int3   
  422109:	sti    
  42210a:	fst    QWORD PTR [edi]
  42210c:	lods   al,BYTE PTR es:[esi]
  42210e:	mov    edi,0xebc9d45f
  422113:	jb     0x4220ee
  422115:	fidiv  WORD PTR [ebp+0x17e42f42]
  42211b:	push   edx
  42211c:	cs cmc 
  42211e:	or     ah,cl
  422120:	xor    ecx,DWORD PTR [eax+ecx*2+0x1f77b644]
  422127:	stos   BYTE PTR es:[edi],al
  422128:	pop    ebp
  422129:	mov    al,0x54
  42212b:	bound  ebx,QWORD PTR [ebx+ebp*1+0x18]
  42212f:	cmp    edi,DWORD PTR [ecx]
  422131:	outs   dx,DWORD PTR ds:[esi]
  422132:	xor    edi,esp
  422134:	xor    BYTE PTR [edi+ebp*4],bl
  422137:	mov    bh,0x3e
  422139:	xchg   ecx,eax
  42213a:	les    ebp,FWORD PTR [ebx+ebx*2-0xb]
  42213e:	dec    ecx
  42213f:	push   esi
  422140:	cmp    DWORD PTR [ebx+0x3e],esi
  422143:	pop    esp
  422144:	pop    ebp
  422145:	and    eax,ecx
  422147:	mov    ebp,0x843f6d76
  42214c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42214d:	sbb    eax,0xf5ea322c
  422152:	jae    0x422148
  422154:	jo     0x4221bb
  422156:	sbb    esi,DWORD PTR [eax-0x74db6f88]
  42215c:	cmp    al,0x82
  42215e:	mov    ah,BYTE PTR [edi+0x46afb966]
  422164:	mov    ah,0xaa
  422166:	test   eax,0x9b11a252
  42216b:	sbb    ebp,esi
  42216d:	stos   DWORD PTR es:[edi],eax
  42216e:	push   ebp
  42216f:	add    ecx,eax
  422171:	fwait
  422172:	leave  
  422173:	(bad)  
  422174:	xchg   ecx,eax
  422175:	iret   
  422176:	pop    esp
  422177:	pop    es
  422178:	dec    esp
  422179:	push   es
  42217a:	mov    al,ds:0xadfe787a
  42217f:	lods   al,BYTE PTR ds:[esi]
  422180:	int3   
  422181:	pop    es
  422182:	cmp    ah,BYTE PTR [edx-0x3a207bb5]
  422188:	pusha  
  422189:	call   0xcff7:0x1a5a877c
  422190:	jbe    0x4221f5
  422192:	sbb    eax,0x4a9cfb5f
  422197:	sbb    bh,bl
  422199:	inc    esi
  42219a:	loope  0x422214
  42219c:	stos   BYTE PTR es:[edi],al
  42219d:	inc    esi
  42219e:	aad    0x8b
  4221a0:	sbb    DWORD PTR [ebx+0x62],esi
  4221a3:	add    bh,BYTE PTR [ebp+0x73]
  4221a6:	iret   
  4221a7:	pop    ss
  4221a8:	lds    ebp,FWORD PTR [eax+edi*4+0x46]
  4221ac:	xor    al,0x11
  4221ae:	inc    esp
  4221af:	cmp    DWORD PTR [eax-0x7],esi
  4221b2:	orps   xmm0,XMMWORD PTR [ebx]
  4221b5:	call   0x42063a0b
  4221ba:	mov    esi,eax
  4221bc:	jp     0x422152
  4221be:	daa    
  4221bf:	mov    cl,0x39
  4221c1:	lea    esp,[ecx+0x359dd475]
  4221c7:	mov    ebp,0x17b9963
  4221cc:	and    al,0x90
  4221ce:	push   ecx
  4221cf:	pop    edx
  4221d0:	inc    edx
  4221d1:	cld    
  4221d2:	std    
  4221d3:	inc    ecx
  4221d4:	fwait
  4221d5:	lds    ecx,FWORD PTR [ebx+0x796eeb84]
  4221db:	and    BYTE PTR [ebp+ecx*2-0x29e6acc],cl
  4221e2:	jg     0x4221a8
  4221e4:	push   ebx
  4221e5:	xchg   esp,eax
  4221e6:	gs or  eax,0x359503b3
  4221ec:	ror    bh,0xd3
  4221ef:	xchg   edx,eax
  4221f0:	fs into 
  4221f2:	nop
  4221f3:	cwde   
  4221f4:	test   eax,0xd4997881
  4221f9:	(bad)  [ebx+ecx*8-0x4367f340]
  422200:	pushf  
  422201:	mov    edi,0x475a6456
  422206:	push   ecx
  422207:	repnz rol al,1
  42220a:	adc    DWORD PTR [edi],0x37
  42220d:	xchg   ebx,eax
  42220e:	ffreep st(0)
  422210:	loopne 0x4221e2
  422212:	loop   0x4221f9
  422214:	repnz sub DWORD PTR [ebx],ebp
  422217:	add    DWORD PTR [edi],0x9385e20f
  42221d:	pushf  
  42221e:	cwde   
  42221f:	cld    
  422220:	mov    ecx,0x321a0724
  422225:	and    al,BYTE PTR [ebp-0x31]
  422228:	int3   
  422229:	jge    0x42226a
  42222b:	fsub   DWORD PTR [ebx-0x5]
  42222e:	and    DWORD PTR [eax+0xb],eax
  422231:	addr16 das 
  422233:	aas    
  422234:	mov    WORD PTR [edx+0x442a7e50],ds
  42223a:	sub    DWORD PTR [ecx+0xf1b18c4],edx
  422240:	in     eax,dx
  422241:	rol    BYTE PTR [edx],cl
  422243:	add    DWORD PTR [ebp-0x1a],ebp
  422246:	test   DWORD PTR [edx+0x727d7bac],esp
  42224c:	mov    ebp,DWORD PTR [edx-0x29579c46]
  422252:	leave  
  422253:	mov    cl,0xdd
  422255:	jno    0x42226d
  422257:	ds sub al,0x92
  42225a:	or     cl,BYTE PTR [edx-0xb67e528]
  422260:	retf   0x5aa6
  422263:	bound  ecx,QWORD PTR [eax]
  422265:	add    al,0xd6
  422267:	fldenv [ecx+eiz*8+0x52]
  42226b:	nop
  42226c:	xor    esi,DWORD PTR [ecx-0x36]
  42226f:	mov    ecx,DWORD PTR [ebp+ecx*8+0x60df5258]
  422276:	xchg   esi,eax
  422277:	push   esp
  422278:	popf   
  422279:	popf   
  42227a:	jno    0x422286
  42227c:	or     al,0x11
  42227e:	lock call FWORD PTR [edi+0x49]
  422282:	popa   
  422283:	ja     0x4222e3
  422285:	aas    
  422286:	loop   0x4222e1
  422288:	cmp    cl,BYTE PTR [ebx]
  42228a:	add    al,0x31
  42228c:	push   es
  42228d:	xor    DWORD PTR [eax+0x13],eax
  422290:	or     ebx,DWORD PTR [ecx+0x593dac14]
  422296:	daa    
  422297:	aaa    
  422298:	or     eax,0xcdd2def4
  42229d:	sbb    DWORD PTR fs:[edi],0xbfb7966c
  4222a4:	sahf   
  4222a5:	int3   
  4222a6:	or     ecx,DWORD PTR [edi+0x71]
  4222a9:	and    bl,BYTE PTR [esi+0x32]
  4222ac:	retf   
  4222ad:	in     al,dx
  4222ae:	out    dx,eax
  4222af:	hlt    
  4222b0:	sbb    eax,edx
  4222b2:	jnp    0x4222bd
  4222b4:	xchg   ebp,eax
  4222b5:	ins    DWORD PTR es:[edi],dx
  4222b6:	xor    bh,al
  4222b8:	push   ebx
  4222b9:	fwait
  4222ba:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4222bc:	cmp    DWORD PTR [edi+ebp*4-0xe],ebp
  4222c0:	push   0x0
  4222c2:	gs mov ah,0x18
  4222c5:	fcompp 
  4222c7:	(bad)  
  4222c8:	out    0xbf,eax
  4222ca:	gs mov ah,0x46
  4222cd:	not    BYTE PTR [eax-0x7d4a697f]
  4222d3:	xchg   edi,eax
  4222d4:	add    DWORD PTR [eax],eax
  4222d6:	daa    
  4222d7:	add    eax,DWORD PTR [eax]
  4222d9:	add    BYTE PTR [ecx+esi*8-0x3bcb7be2],al
  4222e0:	and    al,bh
  4222e2:	mov    ecx,0xd93085b2
  4222e7:	inc    ebp
  4222e8:	mov    WORD PTR [esi-0x29809ae5],fs
  4222ee:	xor    eax,ebx
  4222f0:	and    al,0x20
  4222f2:	stc    
  4222f3:	popf   
  4222f4:	xchg   ebx,eax
  4222f5:	cmp    bh,BYTE PTR [edi]
  4222f7:	sahf   
  4222f8:	cmp    ebp,ebp
  4222fa:	sbb    edi,DWORD PTR [eax]
  4222fc:	mov    eax,0x3dc5f64f
  422301:	outs   dx,BYTE PTR ds:[esi]
  422302:	nop
  422303:	sub    eax,0xeded2377
  422308:	pop    es
  422309:	fmul   QWORD PTR [ebx]
  42230b:	in     al,dx
  42230c:	sub    dl,BYTE PTR [esi+0x63463471]
  422312:	out    0x1e,eax
  422314:	push   ecx
  422315:	xor    DWORD PTR [ecx+eax*1+0x44],0x69
  42231a:	gs cmc 
  42231c:	push   ebx
  42231d:	fs mov cl,0x5f
  422320:	adc    BYTE PTR [edi+0x6ec4326],dl
  422326:	sub    bl,ah
  422328:	mov    dh,0xc9
  42232a:	cmp    BYTE PTR [ebp-0x27b3a81d],al
  422330:	cmp    DWORD PTR [ecx-0x4d],0x2f3b1976
  422337:	inc    edx
  422338:	repnz outs dx,BYTE PTR ds:[esi]
  42233a:	sub    eax,esp
  42233c:	xor    DWORD PTR [eax-0x799ec933],eax
  422342:	jbe    0x4222d7
  422344:	ds push ecx
  422346:	arpl   bx,si
  422348:	enter  0xada7,0x97
  42234c:	dec    eax
  42234d:	xor    al,0x8d
  42234f:	push   eax
  422350:	arpl   cx,bx
  422352:	and    eax,0xcb66f1f8
  422357:	mov    ah,0xad
  422359:	iret   
  42235a:	aas    
  42235b:	into   
  42235c:	mov    esi,cs
  42235e:	and    eax,0xa470b994
  422363:	push   0x295f673e
  422368:	fdiv   st,st(5)
  42236a:	inc    ebp
  42236b:	push   ss
  42236c:	mov    BYTE PTR [ebp-0x27],bl
  42236f:	mov    cl,0x51
  422371:	xchg   ebp,eax
  422372:	fild   WORD PTR [esi]
  422374:	inc    ecx
  422375:	hlt    
  422376:	aaa    
  422377:	push   0xffffffe9
  422379:	test   BYTE PTR [ebx+0x5a],cl
  42237c:	jge    0x422358
  42237e:	(bad)  
  42237f:	mov    edi,0x3a5bdb37
  422384:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422385:	mov    bh,0x9e
  422387:	imul   BYTE PTR [ebp+0x53]
  42238a:	je     0x4223c4
  42238c:	cdq    
  42238d:	dec    ebp
  42238e:	(bad)  
  42238f:	jge    0x4223ce
  422391:	xchg   bl,ah
  422393:	loope  0x4223f0
  422395:	pop    ebx
  422396:	add    al,0xe6
  422398:	push   ebp
  422399:	jbe    0x4223f9
  42239b:	hlt    
  42239c:	xor    DWORD PTR [edi],ebp
  42239e:	fidivr WORD PTR [edx+ebp*1-0x24100b83]
  4223a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223a7:	adc    al,0xf7
  4223a9:	leave  
  4223aa:	mov    ebx,0xa7a291ae
  4223af:	mov    ch,0x48
  4223b1:	adc    BYTE PTR [edx],bl
  4223b3:	sar    BYTE PTR [eax-0xb],0xc6
  4223b7:	mov    ebx,0x1a6b640d
  4223bc:	or     eax,0x6a73267e
  4223c1:	(bad)  [eax-0x47e38299]
  4223c7:	inc    ebx
  4223c8:	pop    es
  4223c9:	jb     0x422404
  4223cb:	sbb    al,0x8b
  4223cd:	or     esi,0x101826f5
  4223d3:	jmp    0x203c01c9
  4223d8:	cmp    eax,0xb4126c48
  4223dd:	xchg   ebp,eax
  4223de:	jle    0x42239b
  4223e0:	dec    edx
  4223e1:	mov    eax,0x42693ead
  4223e6:	outs   dx,DWORD PTR ds:[esi]
  4223e7:	in     eax,0xdd
  4223e9:	sbb    DWORD PTR [edi-0x6f],esi
  4223ec:	aad    0x41
  4223ee:	loop   0x4223e6
  4223f0:	jb     0x42237c
  4223f2:	loop   0x4223a0
  4223f4:	push   edx
  4223f5:	mov    dl,0x58
  4223f7:	mov    ebp,ebx
  4223f9:	dec    esp
  4223fa:	stos   BYTE PTR es:[edi],al
  4223fb:	mov    al,0xfa
  4223fd:	ret    
  4223fe:	sub    DWORD PTR [ecx-0x35],esp
  422401:	call   0x6f211b89
  422406:	mov    al,BYTE PTR [edx-0x3f9de030]
  42240c:	les    ebx,FWORD PTR [ecx]
  42240e:	xor    bl,cl
  422410:	cs int 0x2a
  422413:	popa   
  422414:	push   eax
  422415:	jno    0x4223df
  422417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422418:	pop    ebp
  422419:	lods   eax,DWORD PTR ds:[esi]
  42241a:	imul   ecx,DWORD PTR [ebp-0x4ff68a2f],0xffffff80
  422421:	pop    es
  422422:	jo     0x422487
  422424:	call   0xe52e64e9
  422429:	push   edx
  42242a:	dec    esi
  42242b:	mov    bh,0xad
  42242d:	adc    esp,esi
  42242f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422430:	dec    ebx
  422431:	das    
  422432:	out    0x5d,eax
  422434:	fcom   QWORD PTR [ebx+eax*2]
  422437:	(bad)  
  422438:	hlt    
  422439:	or     ecx,DWORD PTR [ebp-0x78d4ab7e]
  42243f:	mov    ch,0x1e
  422441:	shl    DWORD PTR [edi+0xe],cl
  422444:	mov    dh,0x24
  422446:	push   ss
  422447:	jecxz  0x4223d3
  422449:	ins    BYTE PTR es:[edi],dx
  42244a:	inc    ebx
  42244b:	aam    0x63
  42244d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42244e:	fdivr  DWORD PTR [ebx-0x8dd1c9e]
  422454:	ins    BYTE PTR es:[edi],dx
  422455:	cmp    cl,BYTE PTR [eax+0x6a]
  422458:	cmp    DWORD PTR [ebp+0x7],ebx
  42245b:	push   ebp
  42245c:	xor    al,0xbf
  42245e:	loope  0x42247c
  422460:	xlat   BYTE PTR ds:[ebx]
  422461:	out    0xb9,al
  422463:	mov    al,0x7b
  422465:	ret    
  422466:	dec    DWORD PTR [esi]
  422468:	xchg   edi,eax
  422469:	ret    0x7162
  42246c:	pusha  
  42246d:	mov    al,0xd5
  42246f:	xchg   edx,eax
  422470:	dec    ebx
  422471:	mov    ebx,0x7d8f6ed4
  422476:	in     eax,0xf7
  422478:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422479:	andnps xmm7,XMMWORD PTR [ecx+0x11609725]
  422480:	pop    edi
  422481:	mov    ecx,0xc9bf9b95
  422486:	adc    al,0xc1
  422488:	into   
  422489:	dec    ebp
  42248a:	sbb    ecx,DWORD PTR [edi]
  42248c:	push   eax
  42248d:	add    cl,BYTE PTR [eax+0x366c9e9]
  422493:	adc    DWORD PTR [edi-0x6c],esp
  422496:	and    eax,DWORD PTR [edx-0x5c]
  422499:	adc    eax,0xad466e09
  42249e:	mov    esp,DWORD PTR [ebx+edx*4-0xa8d14fb]
  4224a5:	cmp    eax,0x1d0069cd
  4224aa:	inc    esp
  4224ab:	and    DWORD PTR [edx+0xd2934f4],0xffffff9c
  4224b2:	dec    esp
  4224b3:	push   es
  4224b4:	add    al,cl
  4224b6:	fcmovu st,st(2)
  4224b8:	ret    0xf91d
  4224bb:	xor    al,0x42
  4224bd:	arpl   bx,di
  4224bf:	mov    ch,0xfa
  4224c1:	(bad)  
  4224c2:	adc    cl,dl
  4224c4:	pop    eax
  4224c5:	or     BYTE PTR [esi+0x597fdc99],dl
  4224cb:	push   ecx
  4224cc:	scas   eax,DWORD PTR es:[edi]
  4224cd:	mov    ah,0xc0
  4224cf:	xchg   BYTE PTR [esi+0x2d],al
  4224d2:	mov    ds:0x72db2cb2,al
  4224d7:	sbb    eax,0x77dcccab
  4224dc:	aaa    
  4224dd:	clc    
  4224de:	loopne 0x4224e8
  4224e0:	scas   eax,DWORD PTR es:[edi]
  4224e1:	rcr    DWORD PTR [esi+eiz*4],cl
  4224e4:	retf   
  4224e5:	pop    ecx
  4224e6:	pop    esp
  4224e7:	inc    eax
  4224e8:	push   esi
  4224e9:	sub    eax,0x451ce832
  4224ee:	and    BYTE PTR [edi+0x33],ah
  4224f1:	ret    
  4224f2:	jp     0x42254c
  4224f4:	cs js  0x42247e
  4224f7:	mov    bl,0xaa
  4224f9:	les    esp,FWORD PTR [ebx]
  4224fb:	mov    bl,0x47
  4224fd:	jno    0x4224ef
  4224ff:	jae    0x4224f1
  422501:	scas   eax,DWORD PTR es:[edi]
  422502:	sar    BYTE PTR [ebp+0x76a840c],0x50
  422509:	fmul   DWORD PTR [ebp+0x1b]
  42250c:	hlt    
  42250d:	mov    ebp,0x14b60f0c
  422512:	sbb    DWORD PTR [edx-0x42],ecx
  422515:	ss (bad) 
  422517:	in     eax,0x9c
  422519:	pop    ebp
  42251a:	pop    eax
  42251b:	bound  ebx,QWORD PTR [edi+0x3c]
  42251e:	jno    0x42253a
  422520:	ins    BYTE PTR es:[edi],dx
  422521:	das    
  422522:	and    BYTE PTR [eax],ch
  422524:	inc    ecx
  422525:	or     al,0x1f
  422527:	and    al,0xd3
  422529:	sbb    eax,0x93b88fb7
  42252e:	popf   
  42252f:	iret   
  422530:	inc    esp
  422531:	jbe    0x42256a
  422533:	je     0x42258f
  422535:	(bad)  
  422536:	adc    BYTE PTR [eax],dh
  422538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422539:	xchg   di,ax
  42253b:	imul   esp,DWORD PTR [edx],0xffffffb2
  42253e:	data16 xor al,0xde
  422541:	cmc    
  422542:	(bad)  
  422543:	dec    ebx
  422544:	(bad)  
  422545:	adc    BYTE PTR [ecx],bl
  422547:	sbb    BYTE PTR [edi-0x44840131],cl
  42254d:	sub    DWORD PTR [eax-0x3663191f],0xffffffa5
  422554:	sbb    al,0x4
  422556:	xchg   ecx,eax
  422557:	aad    0x5e
  422559:	xchg   ecx,eax
  42255a:	jb     0x422518
  42255c:	push   0x82526f0a
  422561:	rol    DWORD PTR [ecx+0x53],cl
  422564:	int3   
  422565:	push   ecx
  422566:	clc    
  422567:	mov    esp,0x40ab4d23
  42256c:	mov    edi,0x14c85a3c
  422571:	pop    ecx
  422572:	pop    ebp
  422573:	shl    dh,1
  422575:	scas   eax,DWORD PTR es:[edi]
  422576:	fidivr WORD PTR [eax-0xcaf2fb2]
  42257c:	mov    esp,0xe0774b6b
  422581:	call   0xa98e:0x8308e740
  422588:	and    ebx,DWORD PTR [esi+0x53]
  42258b:	int3   
  42258c:	in     al,0xe4
  42258e:	lea    eax,[ebp+0xe]
  422591:	cwde   
  422592:	dec    edi
  422593:	jns    0x4225cf
  422595:	mov    al,BYTE PTR [esi+0x3f]
  422598:	cdq    
  422599:	popf   
  42259a:	retf   0xada9
  42259d:	loop   0x4225ae
  42259f:	inc    ebx
  4225a0:	jl     0x42260c
  4225a2:	adc    al,0xba
  4225a4:	dec    ebp
  4225a5:	xor    dl,bl
  4225a7:	and    eax,0xe2020e37
  4225ac:	(bad)  
  4225ad:	imul   edx,DWORD PTR [esi],0x7b
  4225b0:	or     eax,0xb00fe06d
  4225b5:	mov    dl,0x82
  4225b7:	shr    DWORD PTR [edx-0x32d6d21f],cl
  4225bd:	je     0x4225b7
  4225bf:	adc    esi,esp
  4225c1:	cmp    DWORD PTR [eax+0x1a],edx
  4225c4:	dec    esp
  4225c5:	popa   
  4225c6:	pop    es
  4225c7:	out    dx,al
  4225c8:	aas    
  4225c9:	cmp    eax,0x3e6fa39
  4225ce:	cmp    ch,ch
  4225d0:	stos   BYTE PTR es:[edi],al
  4225d1:	mov    bh,0x51
  4225d3:	sbb    al,0x26
  4225d5:	jp     0x4225b2
  4225d7:	jmp    esp
  4225d9:	mov    al,ds:0xc967d342
  4225de:	push   esp
  4225df:	ins    DWORD PTR es:[edi],dx
  4225e0:	dec    esp
  4225e1:	and    al,0xe0
  4225e3:	mov    BYTE PTR [esi],bh
  4225e5:	dec    esi
  4225e6:	pusha  
  4225e7:	or     al,0x9
  4225e9:	(bad)  
  4225ea:	test   DWORD PTR [ebp+ebp*2+0x42],0x36bda6ed
  4225f2:	aas    
  4225f3:	into   
  4225f4:	(bad)  
  4225f6:	aas    
  4225f7:	and    BYTE PTR [ecx+0x4],bl
  4225fa:	out    0xd5,eax
  4225fc:	jge    0x4225c8
  4225fe:	ret    
  4225ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422600:	in     eax,dx
  422601:	add    BYTE PTR [edx],dl
  422603:	fsub   DWORD PTR [ebx+0x72]
  422606:	jmp    0x422603
  422608:	adc    edi,eax
  42260a:	sub    edi,DWORD PTR [ebx-0x2a4f7709]
  422610:	push   0x19aa90b
  422615:	add    BYTE PTR [edi],ah
  422617:	add    eax,DWORD PTR [eax]
  422619:	add    BYTE PTR [ebx+ebx*1-0x6],dh
  42261d:	push   es
  42261e:	or     eax,0x5ff651bc
  422623:	push   0x50eee362
  422628:	loope  0x4225b0
  42262a:	jae    0x4225ea
  42262c:	nop
  42262d:	inc    edx
  42262e:	daa    
  42262f:	aad    0xa1
  422631:	and    dl,BYTE PTR [eax]
  422633:	outs   dx,DWORD PTR ds:[esi]
  422634:	mov    ecx,0x49372cfb
  422639:	nop
  42263a:	pop    es
  42263b:	rcl    DWORD PTR [edx+0x2c],0x67
  42263f:	bound  eax,QWORD PTR [edx+0x46]
  422642:	ins    DWORD PTR es:[edi],dx
  422643:	pop    esi
  422644:	dec    edi
  422645:	in     eax,dx
  422646:	cld    
  422647:	xchg   edi,eax
  422648:	fcmovb st,st(5)
  42264a:	xor    esi,DWORD PTR ss:[eax-0x99a20a4]
  422651:	mov    ebp,DWORD PTR [edx+0x32]
  422654:	outs   dx,DWORD PTR ds:[esi]
  422655:	pop    eax
  422656:	mov    WORD PTR ss:[ebx+0xa],ss
  42265a:	loope  0x422637
  42265c:	xchg   ebp,eax
  42265d:	scas   eax,DWORD PTR es:[edi]
  42265e:	jg     0x422680
  422660:	bound  ebp,QWORD PTR cs:[ebx]
  422663:	scas   eax,DWORD PTR es:[edi]
  422664:	fs inc edi
  422666:	xor    DWORD PTR [ebx-0x54],ebx
  422669:	xchg   ebp,eax
  42266a:	or     esp,ebx
  42266c:	sub    BYTE PTR [esi],bl
  42266e:	lds    esi,FWORD PTR [edx+0x51411ce0]
  422674:	add    al,0xe8
  422676:	push   0xdf1ef108
  42267b:	iret   
  42267c:	push   edx
  42267d:	lahf   
  42267e:	pop    ss
  42267f:	jbe    0x422616
  422681:	stos   BYTE PTR es:[edi],al
  422682:	jae    0x422628
  422684:	outs   dx,DWORD PTR ds:[esi]
  422685:	and    edx,0xffffffa7
  422688:	or     eax,0xa0156d70
  42268d:	jb     0x422670
  42268f:	push   esp
  422690:	jp     0x4226aa
  422692:	jae    0x422647
  422694:	iret   
  422695:	jmp    0x49c4517b
  42269a:	scas   al,BYTE PTR es:[edi]
  42269b:	mov    WORD PTR [eax-0x1dd0c86b],fs
  4226a1:	mov    ah,0xc4
  4226a3:	add    DWORD PTR [edx+esi*2+0x60a50774],edi
  4226aa:	and    eax,0x92bef9c7
  4226af:	ret    
  4226b0:	cmp    eax,0xb1e5d8dc
  4226b5:	xor    BYTE PTR [ecx+0x15],bh
  4226b8:	jmp    0x42268f
  4226ba:	sbb    DWORD PTR [eax-0x14b9a82b],esi
  4226c0:	cmc    
  4226c1:	fcomp  st(4)
  4226c3:	sar    BYTE PTR [esi],cl
  4226c5:	adc    BYTE PTR [eax+0x313676cf],al
  4226cb:	jmp    0x3e840922
  4226d0:	jns    0x4226b7
  4226d2:	push   ebx
  4226d3:	cmp    dl,BYTE PTR [edx+0x27]
  4226d6:	cmp    eax,0x14fb3a4f
  4226db:	mov    dl,0x8c
  4226dd:	in     al,0x81
  4226df:	repnz std 
  4226e1:	sbb    DWORD PTR [ebx+edi*8+0x5cc45d91],esi
  4226e8:	stc    
  4226e9:	imul   edx,DWORD PTR [ebx+0x338dd4c7],0x45
  4226f0:	sbb    eax,0xd686f12e
  4226f5:	inc    edi
  4226f6:	jbe    0x422716
  4226f8:	ret    0xd2e6
  4226fb:	push   ebp
  4226fc:	adc    bl,BYTE PTR [ebx-0x73b44b40]
  422702:	xchg   ebx,eax
  422703:	mov    dh,ah
  422705:	adc    eax,0xebe23dbc
  42270a:	shr    DWORD PTR [esi+ebx*1-0x22],0xbb
  42270f:	ret    0xa28f
  422712:	jo     0x42271e
  422714:	fcmovnu st,st(0)
  422716:	xor    eax,0xb79a040e
  42271b:	into   
  42271c:	psraw  mm6,QWORD PTR [edi-0x73]
  422720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422721:	jbe    0x4226d2
  422723:	push   edi
  422724:	sti    
  422725:	push   es
  422726:	lahf   
  422727:	and    al,BYTE PTR [ecx]
  422729:	fidiv  WORD PTR [eax+0x388e212f]
  42272f:	inc    esi
  422730:	ja     0x422726
  422732:	scas   eax,DWORD PTR es:[edi]
  422733:	arpl   dx,si
  422735:	inc    esi
  422736:	adc    ch,BYTE PTR [ecx+0x25e06cb2]
  42273c:	add    dl,dh
  42273e:	inc    ecx
  42273f:	xchg   ebp,eax
  422740:	cmp    DWORD PTR [ebx-0x3e],0x20
  422744:	out    0xd6,eax
  422746:	sub    ecx,DWORD PTR [edi+ebp*8+0x8aebcb9]
  42274d:	push   edx
  42274e:	jb     0x4226d5
  422750:	scas   al,BYTE PTR es:[edi]
  422751:	mov    ah,0x99
  422753:	dec    esi
  422754:	icebp  
  422755:	pop    edi
  422756:	scas   al,BYTE PTR es:[edi]
  422757:	test   DWORD PTR [esp+ebx*1],esi
  42275a:	repz je 0x42275d
  42275d:	stos   DWORD PTR es:[edi],eax
  42275e:	sbb    edx,DWORD PTR [esi]
  422760:	loop   0x422765
  422762:	rol    BYTE PTR [eax+0x25],0x70
  422766:	sbb    al,0xf6
  422768:	sti    
  422769:	mov    ebx,0xa7c42b9e
  42276e:	mov    dl,0xf3
  422770:	cdq    
  422771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422772:	not    BYTE PTR [esi]
  422774:	mov    esp,0x4012f0f6
  422779:	lock fld QWORD PTR [ebx]
  42277c:	adc    al,al
  42277e:	sahf   
  42277f:	out    0x3d,eax
  422781:	mov    dh,BYTE PTR [eax+esi*8]
  422784:	xor    ah,BYTE PTR [esi+0x3c]
  422787:	test   eax,0x4fbdd83b
  42278c:	mov    cl,0x86
  42278e:	inc    ecx
  42278f:	push   ecx
  422790:	dec    ecx
  422791:	inc    eax
  422792:	repz mov ch,0x68
  422795:	retf   0x5f2c
  422798:	popa   
  422799:	pusha  
  42279a:	mov    ebp,0x8ad104bf
  42279f:	jmp    0xc021:0xd2b01e57
  4227a6:	das    
  4227a7:	xchg   esp,eax
  4227a8:	fnstsw WORD PTR [esi-0x7c74a775]
  4227ae:	xchg   edi,eax
  4227af:	jg     0x4227e5
  4227b1:	xchg   edi,eax
  4227b2:	push   cs
  4227b3:	add    BYTE PTR [edx-0x2d],ah
  4227b6:	cwde   
  4227b7:	pop    ecx
  4227b8:	(bad)  
  4227b9:	aas    
  4227ba:	push   edx
  4227bb:	mov    bh,BYTE PTR [ebp+0x34fcbe9e]
  4227c1:	and    edx,ecx
  4227c3:	jecxz  0x422790
  4227c5:	and    al,0x58
  4227c7:	adc    eax,0x21f955d8
  4227cc:	sub    bh,BYTE PTR [eax+0x25]
  4227cf:	sub    BYTE PTR ds:[edi],dl
  4227d2:	add    BYTE PTR [ebx-0x3b8388c0],0x2f
  4227d9:	std    
  4227da:	aam    0x2
  4227dc:	stos   DWORD PTR es:[edi],eax
  4227dd:	jl     0x44a753d8
  4227e3:	dec    ebx
  4227e4:	and    edi,esi
  4227e6:	adc    ebp,edx
  4227e8:	data16 gs clc 
  4227eb:	mov    edx,esp
  4227ed:	loop   0x422787
  4227ef:	fbstp  TBYTE PTR [eax]
  4227f1:	mov    cl,0xbf
  4227f3:	dec    ebx
  4227f4:	or     BYTE PTR [ebx-0x3e310be],cl
  4227fa:	ins    DWORD PTR es:[edi],dx
  4227fb:	pop    edx
  4227fc:	adc    edx,ebx
  4227fe:	jae    0x42284a
  422800:	sti    
  422801:	cld    
  422802:	(bad)  
  422803:	mov    WORD PTR [ebx+0x5509666],gs
  422809:	das    
  42280a:	repnz cmp al,0x45
  42280d:	les    ecx,FWORD PTR fs:[ebx+0x13]
  422811:	pop    ss
  422812:	out    0x42,al
  422814:	add    ah,BYTE PTR [edi-0x58]
  422817:	jmp    ecx
  422819:	nop
  42281a:	push   esp
  42281b:	in     al,0xeb
  42281d:	sub    BYTE PTR [edx+0x184bb2e0],ah
  422823:	add    DWORD PTR [ecx+esi*8+0x6ad3eece],0xffffffbf
  42282b:	test   eax,0x1e463141
  422830:	jp     0x422853
  422832:	sbb    cl,ch
  422834:	ins    BYTE PTR es:[edi],dx
  422835:	daa    
  422836:	jle    0x422878
  422838:	or     esp,DWORD PTR [edi]
  42283a:	mov    ch,0xd8
  42283c:	xchg   edi,eax
  42283d:	mov    ebp,0x784a759f
  422842:	arpl   WORD PTR [edx+0x30],di
  422845:	fstp   QWORD PTR [ecx-0x7cd0aa65]
  42284b:	movsx  edi,BYTE PTR [eax]
  42284e:	mov    esi,0xda6aac17
  422853:	fnstenv [edi+0x12]
  422856:	mov    edi,0xf9e6b6fa
  42285b:	push   cs
  42285c:	sbb    cl,BYTE PTR fs:[edx+eax*2]
  422860:	pop    edx
  422861:	iret   
  422862:	inc    edi
  422863:	mov    DWORD PTR [ecx],ebx
  422865:	std    
  422866:	sahf   
  422867:	fst    QWORD PTR [edi]
  422869:	sbb    eax,0x56cb48bd
  42286e:	or     DWORD PTR ss:[edx+0x28],edx
  422872:	out    dx,al
  422873:	fld    TBYTE PTR [edi]
  422875:	jns    0x42283d
  422877:	mov    dl,0x3d
  422879:	sub    DWORD PTR [esp+ecx*1+0x5448a15b],edi
  422880:	repnz pop esp
  422882:	and    DWORD PTR [eax],esi
  422884:	pop    esi
  422885:	cli    
  422886:	fldenv [ebx]
  422888:	dec    edi
  422889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42288a:	rcl    BYTE PTR [ecx],cl
  42288c:	add    BYTE PTR [ebx-0x67a21818],ah
  422892:	jge    0x4228a6
  422894:	mov    ebp,0x96378e86
  422899:	(bad)  
  42289a:	repnz pop edi
  42289c:	xor    eax,0x163adb06
  4228a1:	(bad)  
  4228a2:	loopne 0x4228a0
  4228a4:	hlt    
  4228a5:	fist   WORD PTR [ecx]
  4228a7:	jle    0x4228bf
  4228a9:	rol    DWORD PTR [edx],cl
  4228ab:	xor    esi,DWORD PTR [edi+ebp*8+0x24]
  4228af:	xchg   edi,eax
  4228b0:	in     ax,dx
  4228b2:	or     bh,BYTE PTR [ecx]
  4228b4:	pop    ecx
  4228b5:	mov    cl,bh
  4228b7:	jno    0x422925
  4228b9:	loope  0x42284b
  4228bb:	ja     0x422881
  4228bd:	cs push edi
  4228bf:	icebp  
  4228c0:	pusha  
  4228c1:	les    esi,FWORD PTR [edi-0x2eb6e1ac]
  4228c7:	ja     0x422921
  4228c9:	adc    eax,0x4ab5132d
  4228ce:	or     dl,BYTE PTR [ebx-0x28d767a]
  4228d4:	mov    cl,0x9c
  4228d6:	int3   
  4228d7:	pop    ebx
  4228d8:	add    ch,BYTE PTR [esi+0x43cfe357]
  4228de:	addr16 es jnp 0x4228c3
  4228e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228e3:	add    edx,DWORD PTR [edx-0x6e632730]
  4228e9:	xchg   BYTE PTR [edi-0x30],bl
  4228ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228ed:	imul   ebp,ebx,0xffffffd9
  4228f0:	es cli 
  4228f2:	sbb    DWORD PTR [esi-0x5535cf9e],ebp
  4228f8:	pushf  
  4228f9:	out    0x68,al
  4228fb:	xor    eax,0x55c6a24a
  422900:	and    BYTE PTR [esi+edi*8],0xca
  422904:	cs in  al,dx
  422906:	push   cs
  422907:	(bad)  
  422908:	in     al,dx
  422909:	jle    0x4228f4
  42290b:	(bad)  
  42290c:	nop
  42290d:	sbb    al,0x10
  42290f:	in     al,0xce
  422911:	leave  
  422912:	dec    esp
  422913:	loopne 0x4228ae
  422915:	xlat   BYTE PTR ds:[ebx]
  422916:	push   cs
  422917:	lods   eax,DWORD PTR ds:[esi]
  422918:	loopne 0x42289c
  42291a:	inc    esi
  42291b:	into   
  42291c:	je     0x4228ea
  42291e:	ret    
  42291f:	xchg   ebx,eax
  422920:	ins    DWORD PTR es:[edi],dx
  422921:	test   eax,0xbb65f7d
  422926:	xchg   ebx,eax
  422927:	mov    bh,0x68
  422929:	inc    ecx
  42292a:	addr16 adc eax,0x801f63a
  422930:	pop    ss
  422931:	fcmovnu st,st(3)
  422933:	imul   esp,DWORD PTR ds:0x5c4e6899,0xb2028940
  42293d:	lods   al,BYTE PTR ds:[esi]
  42293e:	out    dx,al
  42293f:	dec    edx
  422940:	inc    edx
  422941:	add    BYTE PTR [esi],cl
  422943:	and    BYTE PTR [eax-0x404051c1],cl
  422949:	xor    DWORD PTR [ebx-0x196d7643],edx
  42294f:	sub    ch,dl
  422951:	adc    edx,eax
  422953:	popf   
  422954:	add    DWORD PTR [eax],eax
  422956:	daa    
  422957:	add    eax,DWORD PTR [eax]
  422959:	add    BYTE PTR [ebp+0x11],al
  42295c:	iret   
  42295d:	int    0x4f
  42295f:	jl     0x422986
  422961:	leave  
  422962:	sahf   
  422963:	xor    esi,ebp
  422965:	dec    ecx
  422966:	sbb    edx,DWORD PTR [edx]
  422968:	stos   BYTE PTR es:[edi],al
  422969:	test   DWORD PTR [esp+edx*2-0x2b5b4f51],ecx
  422970:	mov    ds:0x736fb4be,eax
  422975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422976:	jg     0x422904
  422978:	inc    edx
  422979:	mov    fs,WORD PTR ds:0xa7e6bdf7
  42297f:	inc    eax
  422980:	sub    al,0xaa
  422982:	or     al,0xcd
  422984:	jbe    0x42296a
  422986:	add    dh,BYTE PTR [edi+0x19a1408c]
  42298c:	push   ds
  42298d:	les    ebx,FWORD PTR [eax-0x291ecb4e]
  422993:	pop    ebp
  422994:	inc    esp
  422995:	inc    ebp
  422996:	mov    bl,0x13
  422998:	xlat   BYTE PTR ds:[ebx]
  422999:	fsub   st,st(2)
  42299b:	push   esp
  42299c:	pop    eax
  42299d:	inc    esp
  42299e:	xor    DWORD PTR [ebx+0x459089ee],edx
  4229a4:	xchg   ebp,eax
  4229a5:	pop    eax
  4229a6:	test   al,0x19
  4229a8:	rol    DWORD PTR [edx],cl
  4229aa:	call   DWORD PTR [edi]
  4229ac:	or     al,0xc
  4229ae:	fiadd  WORD PTR [edi-0x30073de6]
  4229b4:	jl     0x422a20
  4229b6:	cmp    ah,dh
  4229b8:	push   0xffffffb2
  4229ba:	ds popa 
  4229bc:	imul   ebp,DWORD PTR [eax+eiz*2+0x59],0x6603af58
  4229c4:	sub    edx,edi
  4229c6:	cmp    DWORD PTR [esi+0x12],0x87609d3e
  4229cd:	sti    
  4229ce:	fwait
  4229cf:	es mov dh,0x27
  4229d2:	popa   
  4229d3:	out    0x98,al
  4229d5:	sbb    ax,0x5398
  4229d9:	das    
  4229da:	push   cs
  4229db:	not    edx
  4229dd:	cmp    esi,DWORD PTR [ecx+0x2a]
  4229e0:	sub    edx,ecx
  4229e2:	(bad)  
  4229e3:	and    DWORD PTR [eax+0x9],esp
  4229e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229e7:	dec    edi
  4229e8:	xor    edi,0xdf6eba36
  4229ee:	js     0x42299b
  4229f0:	test   DWORD PTR [edi],edi
  4229f2:	xor    eax,DWORD PTR [ebp-0x57]
  4229f5:	outs   dx,DWORD PTR ds:[esi]
  4229f6:	shl    DWORD PTR [edi-0x3666840a],1
  4229fc:	loop   0x422a31
  4229fe:	adc    eax,0x9c4bbe23
  422a03:	in     eax,0xd2
  422a05:	pop    esi
  422a06:	mov    dl,0x66
  422a08:	pusha  
  422a09:	xchg   dh,ch
  422a0b:	inc    ebp
  422a0c:	xlat   BYTE PTR ds:[ebx]
  422a0d:	pop    eax
  422a0e:	or     eax,0xc9245768
  422a13:	sbb    bl,BYTE PTR [ebp-0x7307683e]
  422a19:	mov    bh,0x5e
  422a1b:	pop    bx
  422a1d:	pop    ds
  422a1e:	inc    esi
  422a1f:	repz or BYTE PTR fs:[ebp-0x80],dl
  422a24:	mov    cl,BYTE PTR [edx+0x7f]
  422a27:	or     BYTE PTR [edx],dl
  422a29:	inc    eax
  422a2b:	cmp    al,0x11
  422a2d:	adc    BYTE PTR [edx+0x55],cl
  422a30:	push   cs
  422a31:	cmp    DWORD PTR [esp+ecx*1+0x528b5d1],edx
  422a38:	jnp    0x4229f6
  422a3a:	cli    
  422a3b:	pop    esi
  422a3c:	mov    al,ds:0xd7b40874
  422a41:	inc    edx
  422a42:	not    DWORD PTR [edx-0x6c]
  422a45:	fsubr  DWORD PTR [esi*1-0x79b656dd]
  422a4c:	push   esi
  422a4d:	mov    dl,0xf5
  422a4f:	dec    eax
  422a50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a51:	sbb    al,0xee
  422a53:	and    ecx,DWORD PTR [esi+0x48]
  422a56:	repz push 0x35c4d313
  422a5c:	test   BYTE PTR [edi-0x45bb94f7],ah
  422a62:	dec    ebx
  422a63:	mov    dl,0x36
  422a65:	mov    ch,0xca
  422a67:	jns    0x422a14
  422a69:	mov    dh,0x6d
  422a6b:	mov    esi,0x88a60a86
  422a70:	scas   al,BYTE PTR es:[edi]
  422a71:	(bad)  
  422a73:	retf   0xbbe8
  422a76:	mov    ebx,0x36bdfd47
  422a7b:	ja     0x422a9e
  422a7d:	xor    BYTE PTR [ebp+0x3c67f7e7],cl
  422a83:	mov    bh,0x7f
  422a85:	sbb    esp,DWORD PTR [ebx+eax*4+0x1176acc8]
  422a8c:	add    BYTE PTR [edx*2+0x28735cc7],dl
  422a93:	pop    es
  422a94:	arpl   WORD PTR [ebp+0x39],sp
  422a97:	cli    
  422a98:	pop    ebp
  422a99:	pop    ds
  422a9a:	xor    DWORD PTR [ebx+0x547c1423],edi
  422aa0:	cmp    BYTE PTR [esi],bl
  422aa2:	pop    ds
  422aa3:	icebp  
  422aa4:	fcom   QWORD PTR [ebx]
  422aa6:	ja     0x422acd
  422aa8:	ins    BYTE PTR es:[edi],dx
  422aa9:	shl    BYTE PTR ds:0x36f70b17,1
  422aaf:	std    
  422ab0:	fidiv  WORD PTR [edi+edi*2+0x415dd197]
  422ab7:	in     eax,dx
  422ab8:	int3   
  422ab9:	hlt    
  422aba:	mov    ch,0xde
  422abc:	jmp    0x1e4ffce8
  422ac1:	push   esi
  422ac2:	pop    eax
  422ac3:	fmulp  st(5),st
  422ac5:	retf   0x9227
  422ac8:	fistp  DWORD PTR [esi]
  422aca:	inc    ebx
  422acb:	repnz cld 
  422acd:	jp     0x422a86
  422acf:	push   ecx
  422ad0:	mov    eax,ds:0x8fcf9a3e
  422ad5:	int    0x91
  422ad7:	adc    ah,cl
  422ad9:	addps  xmm3,xmm5
  422adc:	(bad)  
  422add:	out    dx,al
  422ade:	and    ah,al
  422ae0:	cmp    esi,ebp
  422ae2:	adc    edx,esi
  422ae4:	jnp    0x422b32
  422ae6:	lahf   
  422ae7:	fldcw  WORD PTR [edi+0x2e]
  422aea:	push   ecx
  422aeb:	fnstsw WORD PTR [ebp-0x6e0b0154]
  422af1:	xor    eax,0x3537ee38
  422af6:	sbb    DWORD PTR [eax+0x6],ebx
  422af9:	ror    BYTE PTR [edi],cl
  422afb:	adc    dh,BYTE PTR [ebx]
  422afd:	popf   
  422afe:	ja     0x422a86
  422b00:	add    eax,0xd3e957a0
  422b05:	test   eax,0x4ac5be6b
  422b0a:	pop    edi
  422b0b:	mov    ecx,0x85e83609
  422b10:	ret    
  422b11:	imul   edx,DWORD PTR [ecx],0xffffffe4
  422b14:	add    eax,0x90dd9681
  422b19:	xor    eax,0x74bd45f3
  422b1e:	test   al,0xe5
  422b20:	dec    ecx
  422b21:	pop    esp
  422b22:	shl    BYTE PTR [ebp+0x29],1
  422b25:	xchg   edi,eax
  422b26:	and    BYTE PTR [edx],bh
  422b28:	das    
  422b29:	rcl    ebp,cl
  422b2b:	sbb    BYTE PTR [esi+0x3510d132],bl
  422b31:	je     0x422afd
  422b33:	fistp  DWORD PTR ds:0x7b12f378
  422b39:	adc    eax,0x1ffc1ed7
  422b3e:	cli    
  422b3f:	mov    bl,0xeb
  422b41:	mov    eax,0xb867dad2
  422b46:	sbb    BYTE PTR [esi-0x47ef314c],bl
  422b4c:	inc    esi
  422b4d:	mov    ss,WORD PTR [ecx+0x68]
  422b50:	and    ah,BYTE PTR [ecx]
  422b52:	mov    WORD PTR [eax],fs
  422b54:	cld    
  422b55:	dec    edx
  422b56:	pushf  
  422b57:	cs lahf 
  422b59:	push   eax
  422b5a:	rcr    DWORD PTR [ecx-0x576a5afe],cl
  422b60:	xor    esi,DWORD PTR [eax+0x8]
  422b63:	enter  0xb7f0,0x7
  422b67:	test   edx,edi
  422b69:	cmp    ebp,ebp
  422b6b:	dec    ebx
  422b6c:	xchg   esi,eax
  422b6d:	xchg   DWORD PTR [esi+0x59],eax
  422b70:	das    
  422b71:	sbb    ch,BYTE PTR [edi]
  422b73:	or     eax,0x88f51b0a
  422b78:	nop
  422b79:	dec    ecx
  422b7a:	sbb    BYTE PTR [ecx-0x72],bl
  422b7d:	cdq    
  422b7e:	ret    0x3fcd
  422b81:	std    
  422b82:	add    BYTE PTR [ecx+ebx*4],0xa
  422b86:	loop   0x422b8a
  422b88:	inc    DWORD PTR [ecx+0x3a]
  422b8b:	mov    ah,0xcc
  422b8d:	push   ebp
  422b8e:	xchg   ebp,eax
  422b8f:	sub    ecx,DWORD PTR [edx]
  422b91:	mov    cl,0x69
  422b93:	jo     0x422c13
  422b95:	push   ds
  422b96:	mov    ch,0xd7
  422b98:	cmp    al,0xe6
  422b9a:	mov    ah,dh
  422b9c:	sbb    ah,BYTE PTR [edi-0x43]
  422b9f:	fcomp  QWORD PTR [esi]
  422ba1:	fisttp QWORD PTR [ecx+0x11]
  422ba4:	fs ret 0x2594
  422ba8:	shl    BYTE PTR [ebx+0x6dda6041],cl
  422bae:	scas   al,BYTE PTR es:[edi]
  422baf:	and    eax,DWORD PTR [edi-0x2b]
  422bb2:	retf   
  422bb3:	outs   dx,BYTE PTR ds:[esi]
  422bb4:	scas   al,BYTE PTR es:[edi]
  422bb5:	jecxz  0x422bd7
  422bb7:	or     ch,bh
  422bb9:	dec    ebx
  422bba:	repz pop ecx
  422bbc:	push   cs
  422bbd:	or     BYTE PTR [eax-0x17],bl
  422bc0:	cmp    BYTE PTR [edi],bh
  422bc2:	bound  esp,QWORD PTR [edx+ecx*1-0x68b25cea]
  422bc9:	(bad)  
  422bcb:	out    dx,al
  422bcc:	daa    
  422bcd:	sbb    ah,BYTE PTR [ebx]
  422bcf:	rol    BYTE PTR [si+0x7fcd],0x79
  422bd5:	cmp    al,0x10
  422bd7:	das    
  422bd8:	sub    eax,0x29a2257d
  422bdd:	fiadd  DWORD PTR [edx+0x16]
  422be0:	and    ebx,DWORD PTR [ecx+edi*4+0x75490f40]
  422be7:	jnp    0x422c33
  422be9:	pushf  
  422bea:	bound  esi,QWORD PTR [ecx-0x15f58be]
  422bf0:	adc    DWORD PTR [ecx],edi
  422bf2:	jg     0x422b7c
  422bf4:	int3   
  422bf5:	push   eax
  422bf6:	add    ah,bh
  422bf8:	mov    dl,0xcc
  422bfa:	mov    ebp,0x6bba1f50
  422bff:	int3   
  422c00:	mov    eax,ecx
  422c02:	inc    ebx
  422c03:	sub    DWORD PTR [ecx],ebp
  422c05:	or     BYTE PTR [ecx-0x5a],al
  422c08:	inc    eax
  422c09:	shl    DWORD PTR [edi-0x75],cl
  422c0c:	inc    esi
  422c0d:	dec    ecx
  422c0e:	sbb    ecx,DWORD PTR [ebx-0x4fd8a52c]
  422c14:	(bad)  
  422c15:	jecxz  0x422c4f
  422c17:	div    esi
  422c19:	jge    0x422bb4
  422c1b:	mov    dl,0x95
  422c1d:	cwde   
  422c1e:	add    eax,eax
  422c20:	in     al,0xb0
  422c22:	pushaw 
  422c24:	mov    bl,0x24
  422c26:	dec    eax
  422c27:	dec    ebx
  422c28:	mov    edi,0x2651fb3d
  422c2d:	dec    esp
  422c2e:	clc    
  422c2f:	in     al,0x8d
  422c31:	dec    edx
  422c32:	sub    ah,BYTE PTR [eax-0x68]
  422c35:	pop    ss
  422c36:	lahf   
  422c37:	push   edi
  422c38:	sar    BYTE PTR [ebx+0x32967a0f],0xd1
  422c3f:	push   esi
  422c40:	inc    esi
  422c41:	fsub   st,st(7)
  422c43:	mov    ds:0xb57eb428,eax
  422c48:	jno    0x422be6
  422c4a:	dec    ebp
  422c4b:	xchg   ecx,eax
  422c4c:	sar    DWORD PTR [eax+0x52f65d31],0x22
  422c53:	jle    0x422cbd
  422c55:	jle    0x422bef
  422c57:	sub    DWORD PTR [ecx-0x329a4005],edx
  422c5d:	pop    eax
  422c5e:	mov    eax,ds:0xe3f2fd1b
  422c63:	jmp    0xf4bc:0x8719b7de
  422c6a:	xchg   esp,eax
  422c6b:	mov    dl,bh
  422c6d:	out    0x5b,eax
  422c6f:	xchg   esp,eax
  422c70:	(bad)  
  422c71:	jg     0x422c63
  422c73:	jne    0x422ccf
  422c75:	mov    cl,0xf0
  422c77:	dec    ebx
  422c78:	(bad)  
  422c79:	rcr    DWORD PTR [esi+eiz*8],0xa8
  422c7d:	sqrtps xmm7,XMMWORD PTR [ecx]
  422c80:	pushf  
  422c81:	add    BYTE PTR [edi+edi*4+0x63],bl
  422c85:	push   eax
  422c86:	jecxz  0x422c64
  422c88:	jg     0x422c49
  422c8a:	popa   
  422c8b:	hlt    
  422c8c:	mov    esi,0x7bcaa1d
  422c91:	xor    edi,0x270001a0
  422c97:	add    eax,DWORD PTR [eax]
  422c99:	add    BYTE PTR [esi+0x6d],dh
  422c9c:	inc    edx
  422c9d:	sbb    BYTE PTR [edi+0x760ffc2b],0x6b
  422ca4:	in     al,0x13
  422ca6:	aad    0x82
  422ca8:	sub    DWORD PTR [edx],0xffffffd2
  422cab:	loopne 0x422c7b
  422cad:	cmp    al,0x35
  422caf:	sbb    DWORD PTR [ebp+0x7d],ebx
  422cb2:	sub    BYTE PTR [eax-0x62428294],dh
  422cb8:	sub    cl,BYTE PTR [eax-0x7a]
  422cbb:	inc    edi
  422cbc:	mov    ecx,0x8bf55aea
  422cc1:	cmp    al,0xe9
  422cc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cc4:	jae    0x422d11
  422cc6:	outs   dx,BYTE PTR ds:[esi]
  422cc7:	test   BYTE PTR [eax+0x75],0xc6
  422ccb:	jmp    edi
  422ccd:	mul    BYTE PTR [esi-0x61]
  422cd0:	and    bh,bl
  422cd2:	out    dx,eax
  422cd3:	lds    ecx,FWORD PTR [edi]
  422cd5:	pusha  
  422cd6:	fild   QWORD PTR [ebp-0x1552c427]
  422cdc:	or     edx,DWORD PTR [bp+0x7f]
  422ce0:	mov    bh,0x9
  422ce2:	push   ss
  422ce3:	fmul   st(4),st
  422ce5:	aam    0xb3
  422ce7:	dec    edi
  422ce8:	loopne 0x422d31
  422cea:	aad    0x6c
  422cec:	pop    ds
  422ced:	sbb    ch,ch
  422cef:	mov    esi,0x47838a6f
  422cf4:	or     ecx,DWORD PTR [eax+0x48e31527]
  422cfa:	mov    ecx,DWORD PTR [ecx]
  422cfc:	aad    0x98
  422cfe:	mov    esi,0x72b6d19f
  422d03:	and    al,0x77
  422d05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d06:	push   eax
  422d07:	pusha  
  422d08:	and    al,0x85
  422d0a:	sbb    ebp,DWORD PTR [edx+ebx*1]
  422d0d:	cmp    BYTE PTR [ebx+0x7efd8201],dh
  422d13:	icebp  
  422d14:	cmp    al,BYTE PTR [ebx-0x53]
  422d17:	mov    esp,0x8779c043
  422d1c:	ds test ch,0x2a
  422d20:	mov    esi,0x409646af
  422d25:	fisttp WORD PTR [eax-0x1f046bee]
  422d2b:	mov    BYTE PTR [edx+0x48a6d724],dl
  422d31:	dec    esp
  422d32:	mov    eax,0xa51a3961
  422d37:	mov    BYTE PTR [esi],ch
  422d39:	xor    BYTE PTR [esi+0x8404722],ch
  422d3f:	lods   eax,DWORD PTR ds:[esi]
  422d40:	je     0x422cfb
  422d42:	pop    ecx
  422d43:	sub    ah,BYTE PTR [ebx-0x67ef2f43]
  422d49:	jge    0x422d1e
  422d4b:	adc    eax,0x83c82559
  422d50:	cmp    al,0x2a
  422d52:	add    al,0xa0
  422d54:	inc    ebp
  422d55:	push   ds
  422d56:	pop    ecx
  422d57:	dec    DWORD PTR [ebx-0x7780cdf7]
  422d5d:	mov    ebp,0xe02bba59
  422d62:	retf   0x6d38
  422d65:	mov    esp,0x44af999
  422d6a:	out    0x68,al
  422d6c:	mov    BYTE PTR [ecx+0x48e92a56],bh
  422d72:	test   DWORD PTR [ecx+0x1f],esi
  422d75:	(bad)
  422d78:	dec    esp
  422d79:	rcr    BYTE PTR [ebx-0x30],0xd1
  422d7d:	mov    esp,ebx
  422d7f:	jle    0x422de9
  422d81:	dec    ebp
  422d82:	add    BYTE PTR [edx+ecx*1+0x13],ah
  422d86:	inc    esi
  422d87:	dec    edx
  422d88:	and    ch,BYTE PTR [edx+0x6dacc0ed]
  422d8e:	inc    ebp
  422d8f:	jl     0x422d31
  422d91:	fiadd  WORD PTR [eax-0x57]
  422d94:	mov    bh,0x10
  422d96:	(bad)  
  422d97:	lock dec esi
  422d99:	sub    esp,DWORD PTR [ebp-0x53]
  422d9c:	mov    dl,0x15
  422d9e:	ret    0xaf87
  422da1:	ins    BYTE PTR es:[edi],dx
  422da2:	in     al,0x7b
  422da4:	ins    BYTE PTR es:[edi],dx
  422da5:	test   ch,bl
  422da7:	jp     0x422d91
  422da9:	push   ebx
  422daa:	xchg   DWORD PTR [edi],eax
  422dac:	scas   eax,DWORD PTR es:[edi]
  422dad:	push   eax
  422dae:	retf   
  422daf:	sub    ah,BYTE PTR [ebx]
  422db1:	lods   al,BYTE PTR ds:[esi]
  422db2:	sub    ch,BYTE PTR [ebx]
  422db4:	fwait
  422db5:	scas   al,BYTE PTR es:[edi]
  422db6:	xor    al,0x1f
  422db8:	cli    
  422db9:	adc    edi,DWORD PTR [edx]
  422dbb:	jg     0x422d7f
  422dbd:	jmp    0xd17c8d30
  422dc2:	inc    esp
  422dc3:	dec    ecx
  422dc4:	add    BYTE PTR [ebp-0x7e6fecef],bh
  422dca:	fcmovnb st,st(4)
  422dcc:	fcmovbe st,st(2)
  422dce:	jle    0x422e37
  422dd0:	icebp  
  422dd1:	sbb    dh,BYTE PTR [esi]
  422dd3:	scas   eax,DWORD PTR es:[edi]
  422dd4:	bound  esi,QWORD PTR [ebx]
  422dd6:	xor    esp,ebx
  422dd8:	ret    
  422dd9:	div    DWORD PTR [ecx]
  422ddb:	push   esp
  422ddc:	cmc    
  422ddd:	push   ecx
  422dde:	xor    edx,DWORD PTR [ecx-0x57]
  422de1:	xchg   BYTE PTR [ecx],ch
  422de3:	mov    BYTE PTR [eax],cl
  422de5:	aaa    
  422de6:	fdivr  QWORD PTR [eax+eiz*4]
  422de9:	jg     0x422dd0
  422deb:	and    esi,DWORD PTR [edi+0x66]
  422dee:	lods   eax,DWORD PTR ds:[esi]
  422def:	scas   al,BYTE PTR es:[edi]
  422df0:	push   eax
  422df1:	stc    
  422df2:	pop    esp
  422df3:	mov    ch,0x55
  422df5:	lods   eax,DWORD PTR ds:[esi]
  422df6:	mov    cl,0xd7
  422df8:	adc    DWORD PTR [esi+0x2f54cd77],eax
  422dfe:	mov    ah,0x6e
  422e00:	mov    DWORD PTR [eax+0x44cc1d36],ebx
  422e06:	xchg   esi,eax
  422e07:	jne    0x422e09
  422e09:	xor    DWORD PTR [ebx+ebp*4-0x41],edx
  422e0d:	mov    cl,0x6
  422e0f:	adc    BYTE PTR [eax-0x2f8f9e97],dh
  422e15:	das    
  422e16:	gs or  dh,dh
  422e19:	add    DWORD PTR [esi],esi
  422e1b:	add    eax,0x79d22ab9
  422e20:	sbb    DWORD PTR [eax],edx
  422e22:	inc    edx
  422e23:	lods   al,BYTE PTR ds:[esi]
  422e24:	pop    edi
  422e25:	pop    ebp
  422e26:	or     eax,0xaa2605b
  422e2b:	pop    ecx
  422e2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e2d:	and    DWORD PTR [ecx-0x42],edi
  422e30:	call   0x99da:0xc6c6c5ed
  422e37:	mov    ecx,0x21fae110
  422e3c:	loop   0x422dce
  422e3e:	xor    ebp,DWORD PTR [eax-0x260571e1]
  422e44:	lds    esi,FWORD PTR [edx]
  422e46:	fmul   st(6),st
  422e48:	loop   0x422e5b
  422e4a:	lds    esi,FWORD PTR [edi+0x45]
  422e4d:	ins    DWORD PTR es:[edi],dx
  422e4e:	add    ebx,esp
  422e50:	(bad)  
  422e51:	and    ebp,DWORD PTR [esi+0x2e]
  422e54:	xor    dh,BYTE PTR [esi]
  422e56:	or     eax,0xbf5f889b
  422e5b:	(bad)  
  422e5c:	xlat   BYTE PTR ds:[ebx]
  422e5d:	je     0x422ed4
  422e5f:	adc    DWORD PTR [edx+0x24],ebp
  422e62:	(bad)  [edx-0x59]
  422e65:	retf   0x19ee
  422e68:	cli    
  422e69:	call   0x54d65af7
  422e6e:	mov    WORD PTR [ecx+0x7c],ss
  422e71:	or     dl,BYTE PTR [edx-0x7d]
  422e74:	mov    ecx,0xc0b60fb4
  422e79:	mov    dh,0x98
  422e7b:	aam    0xa
  422e7d:	pushf  
  422e7e:	in     al,dx
  422e7f:	xchg   esi,eax
  422e80:	clc    
  422e81:	cwde   
  422e82:	jns    0x422e17
  422e84:	imul   edx,DWORD PTR [edx-0x55],0xffffff83
  422e88:	cdq    
  422e89:	js     0x422e5c
  422e8b:	mov    al,cs:0xaff3c287
  422e91:	mov    ds:0x79dce88,eax
  422e96:	pop    ebx
  422e97:	bound  ebp,QWORD PTR [esi-0x62]
  422e9a:	adc    ebx,DWORD PTR [edx-0x6b]
  422e9d:	lods   al,BYTE PTR ds:[esi]
  422e9e:	push   esp
  422e9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ea0:	mov    dh,ch
  422ea2:	mov    eax,0xc1232c8c
  422ea7:	call   0xf949:0xd602a4c6
  422eae:	xor    al,0x7d
  422eb0:	ret    
  422eb1:	jle    0x422f23
  422eb3:	stc    
  422eb4:	test   DWORD PTR [ebx],ebp
  422eb6:	call   0xa8d4e235
  422ebb:	mov    bl,0xa3
  422ebd:	add    BYTE PTR ds:0x29957aca,dl
  422ec3:	sbb    al,0x51
  422ec5:	dec    edx
  422ec6:	stos   BYTE PTR es:[edi],al
  422ec7:	test   BYTE PTR [esi-0x27],al
  422eca:	cmc    
  422ecb:	push   eax
  422ecc:	retf   0xd49c
  422ecf:	dec    ebx
  422ed0:	mov    al,BYTE PTR [eax-0x64]
  422ed3:	inc    esi
  422ed4:	cmp    esp,edx
  422ed6:	mov    edi,DWORD PTR [edx+0x2f]
  422ed9:	and    DWORD PTR [edx-0x55e050d4],esp
  422edf:	add    cl,BYTE PTR [eax+0x4a991c95]
  422ee5:	repz imul eax,DWORD PTR [esi],0x788ef303
  422eec:	pop    edi
  422eed:	lds    esp,FWORD PTR [ecx]
  422eef:	inc    ebx
  422ef0:	or     eax,0xf8f2b4ce
  422ef5:	sub    eax,0xbc56e236
  422efa:	mov    bl,0x74
  422efc:	push   eax
  422efd:	repz mov WORD PTR [edi],cs
  422f00:	push   esi
  422f01:	cmp    ebx,esi
  422f03:	xchg   edi,eax
  422f04:	inc    edi
  422f05:	sti    
  422f06:	adc    eax,0xcbd14518
  422f0b:	add    eax,0x467a5ba9
  422f10:	push   ss
  422f11:	cld    
  422f12:	sbb    edi,DWORD PTR [esi-0x62590906]
  422f18:	test   DWORD PTR [ecx],esi
  422f1a:	lahf   
  422f1b:	out    dx,al
  422f1c:	mov    ds:0x586ebe87,al
  422f21:	gs loop 0x422ef6
  422f24:	inc    esp
  422f25:	or     al,0x2
  422f27:	pop    ebx
  422f28:	imul   ecx,ecx,0xffffffb1
  422f2b:	jns    0x422f50
  422f2d:	push   eax
  422f2e:	add    esp,edi
  422f30:	dec    ebx
  422f31:	add    dl,BYTE PTR [ebx]
  422f33:	lahf   
  422f34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f35:	adc    eax,0x10dfa577
  422f3a:	sar    DWORD PTR [esi+0x4d067c55],cl
  422f40:	dec    edx
  422f41:	mov    ch,dh
  422f43:	call   0x915bd1ec
  422f48:	xlat   BYTE PTR ds:[ebx]
  422f49:	and    ecx,DWORD PTR [edi-0x45]
  422f4c:	sub    esp,DWORD PTR [ebp-0x1]
  422f4f:	aas    
  422f50:	jecxz  0x422ee0
  422f52:	sub    BYTE PTR [esi-0x67],ah
  422f55:	pop    ss
  422f56:	loopne 0x422f69
  422f58:	scas   eax,DWORD PTR es:[edi]
  422f59:	sbb    al,0xc6
  422f5b:	mov    BYTE PTR [edi],ah
  422f5d:	and    eax,0x2c569917
  422f62:	or     DWORD PTR [eax],ecx
  422f64:	add    eax,0x71b50e0d
  422f69:	loop   0x422efa
  422f6b:	xor    al,BYTE PTR [eax+ebp*4]
  422f6e:	mov    ecx,0x61ba9d88
  422f73:	iret   
  422f74:	xor    al,0xd7
  422f76:	fdivr  QWORD PTR [ebp+0x25]
  422f79:	xchg   BYTE PTR [ebp+0x5d],bh
  422f7c:	pop    es
  422f7d:	push   ss
  422f7e:	mov    bl,0x89
  422f80:	retf   
  422f81:	pop    eax
  422f82:	ins    DWORD PTR es:[edi],dx
  422f83:	aad    0x8c
  422f85:	xchg   ebx,eax
  422f86:	stos   DWORD PTR es:[edi],eax
  422f87:	lock push ebx
  422f89:	icebp  
  422f8a:	pop    edi
  422f8b:	xor    DWORD PTR [ecx],esp
  422f8d:	xor    eax,DWORD PTR [esi+0xb]
  422f90:	pushf  
  422f91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f92:	push   ebx
  422f93:	fstp   QWORD PTR [ecx]
  422f95:	push   ss
  422f96:	es sbb al,0xa6
  422f99:	bound  esp,QWORD PTR [esi+0x12affbbc]
  422f9f:	xchg   esi,eax
  422fa0:	dec    ebp
  422fa1:	mov    ds:0xb784b6be,eax
  422fa6:	jmp    0xc2de51aa
  422fab:	jo     0x422fe1
  422fad:	mov    BYTE PTR [ebp-0x3b],bl
  422fb0:	outs   dx,DWORD PTR ds:[esi]
  422fb1:	jae    0x422ffa
  422fb3:	(bad)  
  422fb4:	js     0x422f9a
  422fb6:	cmp    BYTE PTR [edx-0x7],bh
  422fb9:	je     0x422fc3
  422fbb:	xchg   ebp,eax
  422fbc:	aam    0x4f
  422fbe:	cmp    cl,BYTE PTR [esi+0x55430072]
  422fc4:	pusha  
  422fc5:	(bad)  
  422fc6:	jbe    0x422f87
  422fc8:	out    dx,eax
  422fc9:	fnstsw WORD PTR [edx-0x4bbca93d]
  422fcf:	arpl   bx,si
  422fd1:	and    eax,0x1a41e
  422fd6:	daa    
  422fd7:	add    eax,DWORD PTR [eax]
  422fd9:	add    BYTE PTR [ebp-0x48],ch
  422fdc:	xor    bh,ah
  422fde:	js     0x422ff5
  422fe0:	nop
  422fe1:	test   BYTE PTR [ebx-0x2f87590f],al
  422fe7:	or     eax,0x8422eb02
  422fec:	dec    ecx
  422fed:	loope  0x423003
  422fef:	inc    ecx
  422ff0:	nop
  422ff1:	pop    edx
  422ff2:	jmp    0x422fdb
  422ff4:	(bad)
  422ff7:	sbb    ebp,DWORD PTR [eax+0xc]
  422ffa:	jne    0x42300d
  422ffc:	cmp    ch,bl
  422ffe:	inc    esi
  422fff:	mov    ch,ah
  423001:	mov    al,ds:0xaffb44e6
  423006:	test   DWORD PTR [esi-0x73992f36],0x15fbc93a
  423010:	push   cs
  423011:	mov    ds:0xd234f70e,al
  423016:	std    
  423017:	(bad)  
  423018:	test   BYTE PTR [ebx-0x3ed085ec],0x4b
  42301f:	mov    edx,0xef113229
  423024:	imul   edi,ebp,0x57
  423027:	adc    dh,BYTE PTR [ebp+0x8]
  42302a:	loop   0x4230a6
  42302c:	pop    ds
  42302d:	in     eax,dx
  42302e:	dec    esi
  42302f:	les    edx,FWORD PTR [edi+0x17]
  423032:	mov    dl,bl
  423034:	pop    ebp
  423035:	dec    DWORD PTR [ecx+eax*8]
  423038:	repnz mov eax,0xe804a5a4
  42303e:	add    bl,bh
  423040:	xor    ebp,DWORD PTR [ecx-0x1b43107a]
  423046:	mov    dl,ch
  423048:	ja     0x422ff6
  42304a:	int3   
  42304b:	mov    al,ds:0x866f490a
  423050:	or     DWORD PTR [edi+0x47],edx
  423053:	jmp    0x80614536
  423058:	sbb    al,0xad
  42305a:	mov    ah,0xf8
  42305c:	mov    ds:0xb023a1ef,al
  423061:	in     al,0xec
  423063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423064:	jmp    0x3b333acf
  423069:	pop    edx
  42306a:	inc    esi
  42306b:	ja     0x423006
  42306d:	in     eax,0xce
  42306f:	and    al,0x31
  423071:	aad    0x4d
  423073:	inc    ecx
  423074:	(bad)  
  423075:	jmp    0x4575:0x4ba72021
  42307c:	addr16 out 0xc2,eax
  42307f:	mov    edi,0xb54a7a42
  423084:	hlt    
  423085:	sub    BYTE PTR [edi-0xe],cl
  423088:	cmc    
  423089:	ds mov dh,0xe5
  42308c:	scas   eax,DWORD PTR es:[edi]
  42308d:	jae    0x423049
  42308f:	add    BYTE PTR [ecx+0x1f],ch
  423092:	ja     0x423094
  423094:	in     al,0xe4
  423096:	loop   0x423049
  423098:	and    DWORD PTR [eax+0x24e45a93],0x23
  42309f:	and    eax,0x2924dc35
  4230a4:	add    BYTE PTR [ecx+0x59271521],cl
  4230aa:	test   DWORD PTR [eiz*2+0x465a6a52],ebx
  4230b1:	add    cl,BYTE PTR [edx-0x51]
  4230b4:	daa    
  4230b5:	fcom   DWORD PTR [ebp+edi*2-0x629be810]
  4230bc:	je     0x423062
  4230be:	xlat   BYTE PTR ds:[ebx]
  4230bf:	xchg   ebx,eax
  4230c0:	mov    ch,0xea
  4230c2:	add    cl,ah
  4230c4:	mov    cl,0x57
  4230c6:	and    bl,BYTE PTR [edx-0x14]
  4230c9:	pop    ebx
  4230ca:	jno    0x423093
  4230cc:	mov    ecx,0xe7f4d4f
  4230d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230d2:	stc    
  4230d3:	imul   ebx,DWORD PTR [eax*1+0xbf8310e],0xe319844f
  4230de:	push   es
  4230df:	int3   
  4230e0:	mov    eax,0x89764138
  4230e5:	fcom   DWORD PTR [ecx+edi*1+0x28e0b6d6]
  4230ec:	or     ah,dh
  4230ee:	cmp    DWORD PTR [edi+ebx*4+0x3b],eax
  4230f2:	(bad)  
  4230f3:	test   DWORD PTR [edi-0x3],ecx
  4230f6:	out    0x82,eax
  4230f8:	mov    bh,al
  4230fa:	cdq    
  4230fb:	push   esi
  4230fc:	xchg   esp,eax
  4230fd:	std    
  4230fe:	cmp    eax,0x1d05057
  423103:	inc    eax
  423104:	es cmp dl,ah
  423107:	rcl    esp,0x15
  42310a:	iret   
  42310b:	pop    esi
  42310c:	jmp    0xb64c:0xddcbeaa
  423113:	leave  
  423114:	pop    esp
  423115:	cmp    eax,0x75c675bd
  42311a:	dec    edx
  42311b:	mov    bl,0x65
  42311d:	sub    eax,0x3014f668
  423122:	jecxz  0x42318b
  423124:	xor    ah,BYTE PTR [ebx-0x30]
  423127:	xchg   esp,eax
  423128:	ret    0xbe6e
  42312b:	dec    esp
  42312c:	pop    ds
  42312d:	dec    edi
  42312e:	adc    ebx,ecx
  423130:	inc    ecx
  423131:	sub    dh,BYTE PTR [ecx+0x36cdc88b]
  423137:	sahf   
  423138:	fist   WORD PTR ds:0xcf64e235
  42313e:	pop    esi
  42313f:	data16 cmp BYTE PTR [esp-0x26986add],dh
  423147:	inc    eax
  423148:	(bad)  
  423149:	cmp    eax,0x9e113636
  42314e:	dec    esi
  42314f:	and    al,bh
  423151:	jns    0x42314b
  423153:	pop    ebp
  423154:	mov    dh,0x1a
  423156:	cwde   
  423157:	pop    edi
  423158:	cmp    esi,DWORD PTR [ecx]
  42315a:	xchg   ecx,eax
  42315b:	fadd   st(5),st
  42315d:	xor    DWORD PTR ds:0xa682b8a2,eax
  423163:	push   0x2cee7405
  423168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423169:	gs ja  0x42315d
  42316c:	sub    esi,DWORD PTR [ecx+0x77]
  42316f:	push   0xffffff8c
  423171:	and    eax,0xcdd1cd57
  423176:	mov    ebp,0x9f76f702
  42317b:	ins    BYTE PTR es:[edi],dx
  42317c:	imul   DWORD PTR [edi+0x682c410f]
  423182:	pop    es
  423183:	inc    ecx
  423184:	adc    BYTE PTR [edx+esi*1-0x7e],dh
  423188:	lock pusha 
  42318a:	add    dl,BYTE PTR [esi+0xf]
  42318d:	mov    edx,0x2ddf0472
  423192:	sub    al,BYTE PTR [ecx]
  423194:	dec    ecx
  423195:	fdivr  QWORD PTR [ebp-0x3e]
  423198:	jle    0x423140
  42319a:	sbb    edx,edx
  42319c:	in     al,dx
  42319d:	and    DWORD PTR [esp+eiz*8],ecx
  4231a0:	inc    ebx
  4231a1:	sub    al,0xed
  4231a3:	xor    al,0x90
  4231a5:	xor    DWORD PTR [edx],ecx
  4231a7:	in     eax,0x9f
  4231a9:	imul   BYTE PTR [esi]
  4231ab:	repz adc ebp,DWORD PTR [ebp+0x49]
  4231af:	or     ebp,DWORD PTR [edi+0x4b]
  4231b2:	mov    BYTE PTR [ebx],0xa6
  4231b5:	push   es
  4231b6:	(bad)  
  4231b7:	(bad)  
  4231b8:	adc    bh,al
  4231ba:	xchg   edx,eax
  4231bb:	or     esi,DWORD PTR [edx+0x37d08da5]
  4231c1:	xor    BYTE PTR [esi],bh
  4231c3:	scas   al,BYTE PTR es:[edi]
  4231c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231c5:	sub    esp,DWORD PTR [ecx+0x3cde6b35]
  4231cb:	fsub   QWORD PTR [ebx]
  4231cd:	jp     0x423211
  4231cf:	int3   
  4231d0:	inc    esp
  4231d1:	imul   ebx,DWORD PTR [edi-0x3e7433fa],0x7f94bec2
  4231db:	push   eax
  4231dc:	xor    dl,BYTE PTR [edx+eax*8]
  4231df:	mov    al,0x51
  4231e1:	pop    ds
  4231e2:	jo     0x42317c
  4231e4:	(bad)  [esi+0x25f00be3]
  4231ea:	mov    bh,0xfb
  4231ec:	fisttp WORD PTR [eax*8-0x6b358395]
  4231f3:	ror    DWORD PTR ds:0xdd4b51df,0x15
  4231fa:	add    DWORD PTR [eax+0x5],ecx
  4231fd:	xchg   ebx,eax
  4231fe:	mov    WORD PTR [ecx],es
  423200:	xchg   esi,eax
  423201:	dec    eax
  423202:	sbb    al,0x20
  423204:	cs cmp eax,0x912017a
  42320a:	out    0xed,al
  42320c:	divps  xmm7,XMMWORD PTR [edx]
  42320f:	shl    DWORD PTR [eax],1
  423211:	out    0xb7,al
  423213:	(bad)  
  423214:	jmp    0x6982:0x1e0c6409
  42321b:	leave  
  42321c:	jle    0x423272
  42321e:	xchg   edx,eax
  42321f:	or     DWORD PTR [ecx],edi
  423221:	pop    edi
  423222:	dec    edi
  423223:	xchg   ebx,eax
  423224:	mov    ah,0x5f
  423226:	push   ecx
  423227:	inc    DWORD PTR [esi]
  423229:	cld    
  42322a:	enter  0x2cef,0x50
  42322e:	js     0x423224
  423230:	daa    
  423231:	cwde   
  423232:	outs   dx,BYTE PTR ds:[esi]
  423233:	jnp    0x4231ff
  423235:	xor    BYTE PTR [ebx+eiz*1-0x21],0x8
  42323a:	ficom  DWORD PTR [ecx+0x7b]
  42323d:	add    ecx,DWORD PTR [ecx]
  42323f:	xlat   BYTE PTR ds:[ebx]
  423240:	add    BYTE PTR [ebx+0x46926408],0x25
  423247:	jl     0x4232b2
  423249:	out    0x10,al
  42324b:	or     eax,0xedd5d622
  423250:	xor    esi,edx
  423252:	dec    esi
  423253:	mov    WORD PTR [ebx-0x52051680],?
  423259:	mov    dl,0xda
  42325b:	fdivr  QWORD PTR [ecx+0x42288305]
  423261:	inc    esp
  423262:	ret    0x82be
  423265:	fisubr WORD PTR [ebx]
  423267:	jl     0x4232e1
  423269:	adc    BYTE PTR [edi-0x7d18eaf0],ah
  42326f:	cmc    
  423270:	sahf   
  423271:	mov    esi,0x5435fb05
  423276:	sahf   
  423277:	mov    WORD PTR [edi],ds
  423279:	fs dec ebx
  42327b:	popf   
  42327c:	jmp    0x6773f830
  423281:	cld    
  423282:	push   cs
  423283:	mov    edx,ds
  423285:	pop    ecx
  423286:	dec    BYTE PTR [esi+0x4b4a8d51]
  42328c:	dec    esi
  42328d:	xchg   ebp,eax
  42328e:	adc    bl,BYTE PTR [ebx-0x3b]
  423291:	cli    
  423292:	or     DWORD PTR [edx+0x7a6bebf4],esp
  423298:	push   esi
  423299:	push   edx
  42329a:	push   ds
  42329b:	popa   
  42329c:	sbb    dl,ch
  42329e:	xor    ax,0x5059
  4232a2:	das    
  4232a3:	xchg   esp,eax
  4232a4:	or     edx,DWORD PTR [eax]
  4232a6:	add    DWORD PTR [edi+0x334a352a],edi
  4232ac:	or     al,0x2e
  4232ae:	sub    BYTE PTR [esi],dl
  4232b0:	call   0x4e38801
  4232b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232b6:	jmp    0x42330e
  4232b8:	jecxz  0x42325e
  4232ba:	adc    DWORD PTR [edx],ebp
  4232bc:	icebp  
  4232bd:	jge    0x42326a
  4232bf:	mov    edx,0x65a88b42
  4232c4:	jmp    0x423320
  4232c6:	mov    esi,0x8ac23866
  4232cb:	and    BYTE PTR ds:0x1668904f,0x30
  4232d2:	int    0xe3
  4232d4:	or     edx,esp
  4232d6:	push   ds
  4232d7:	push   ss
  4232d8:	out    0x5d,al
  4232da:	jmp    0xc083:0xeb7f121a
  4232e1:	mov    al,ds:0x748731e9
  4232e6:	out    dx,al
  4232e7:	and    edi,DWORD PTR [ebx]
  4232e9:	idiv   BYTE PTR [ebp+0x3a]
  4232ec:	(bad)
  4232f0:	sbb    DWORD PTR [edx-0x28],0x2d3632e0
  4232f7:	ror    DWORD PTR [edi],cl
  4232f9:	iret   
  4232fa:	loopne 0x4232bb
  4232fc:	dec    esi
  4232fd:	and    eax,edi
  4232ff:	mov    ebp,0x2d5700c5
  423304:	pop    es
  423305:	call   0x55de:0xeddfba7f
  42330c:	inc    ecx
  42330d:	adc    al,0x70
  42330f:	stc    
  423310:	dec    ecx
  423311:	pop    DWORD PTR [ebp-0x59]
  423314:	add    DWORD PTR [eax],eax
  423316:	daa    
  423317:	add    eax,DWORD PTR [eax]
  423319:	add    BYTE PTR [eax+eax*1-0x2],ah
  42331d:	or     al,0xcd
  42331f:	ds repz loop 0x4232b1
  423323:	push   edi
  423324:	outs   dx,DWORD PTR ds:[esi]
  423325:	fsubp  st(4),st
  423327:	(bad)  
  423329:	push   cs
  42332a:	outs   dx,BYTE PTR ds:[esi]
  42332b:	inc    eax
  42332c:	retf   
  42332d:	cmp    BYTE PTR [eax-0x49],dh
  423330:	addr16 (bad) 
  423332:	push   esi
  423333:	icebp  
  423334:	push   edi
  423335:	(bad)  
  423337:	mov    ebp,0xe90648e7
  42333c:	jp     0x423340
  42333e:	shl    ah,1
  423340:	jbe    0x4233b6
  423342:	sar    BYTE PTR [eax],0x73
  423345:	fwait
  423346:	in     al,0x86
  423348:	stc    
  423349:	shl    BYTE PTR [esp+ebp*4+0x6c],cl
  42334d:	fmul   st(5),st
  42334f:	call   0x91574811
  423354:	or     al,0x82
  423356:	add    dh,BYTE PTR [ebx]
  423358:	sti    
  423359:	(bad)  
  42335a:	loopne 0x423333
  42335c:	adc    eax,0xf6acaf6
  423361:	push   ebx
  423362:	aaa    
  423363:	loopne 0x423397
  423365:	imul   esp,DWORD PTR [esi-0x5e313eb9],0xffffffc8
  42336c:	push   0x11
  42336e:	cs iret 
  423370:	ror    BYTE PTR [eax],cl
  423372:	and    ecx,DWORD PTR [eax]
  423374:	rcr    BYTE PTR [eax],0x2b
  423377:	push   edx
  423378:	sbb    dl,BYTE PTR [ecx]
  42337a:	jmp    0x4233c5
  42337c:	jns    0x42339b
  42337e:	push   ds
  42337f:	dec    DWORD PTR [edx]
  423381:	or     al,0x2e
  423383:	lds    ebx,FWORD PTR [eax+eax*4-0x62]
  423387:	fcomp  QWORD PTR [edx+0x547e9a53]
  42338d:	push   es
  42338e:	jge    0x423311
  423390:	shl    dh,1
  423392:	shl    DWORD PTR [esi+0x3f],1
  423395:	cmp    DWORD PTR [edx+0x30],esp
  423398:	out    0x61,eax
  42339a:	jo     0x423371
  42339c:	xchg   ebp,eax
  42339d:	in     eax,0x85
  42339f:	arpl   WORD PTR [eax+0x634e26ce],si
  4233a5:	pushf  
  4233a6:	ss jae 0x42334e
  4233a9:	iret   
  4233aa:	adc    eax,0x6b22dae6
  4233af:	or     al,0xd2
  4233b1:	adc    DWORD PTR [esi-0x1aebc9f4],ecx
  4233b7:	in     eax,dx
  4233b8:	fld    st(4)
  4233ba:	sbb    ebx,ecx
  4233bc:	dec    ecx
  4233bd:	les    eax,FWORD PTR [ecx-0x4]
  4233c0:	or     dl,dh
  4233c2:	data16 or BYTE PTR [ecx+0x65],0x83
  4233c7:	push   ebp
  4233c8:	nop
  4233c9:	iret   
  4233ca:	mov    eax,ds:0x134e210b
  4233cf:	addr16 sub ebp,eax
  4233d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233d3:	jb     0x4233e5
  4233d5:	popa   
  4233d6:	pop    edi
  4233d7:	lods   eax,DWORD PTR ds:[esi]
  4233d8:	mov    ah,0xf7
  4233da:	call   0x5248:0x8b4b8fbe
  4233e1:	sahf   
  4233e2:	outs   dx,DWORD PTR ds:[esi]
  4233e3:	icebp  
  4233e4:	inc    ecx
  4233e5:	call   0x3ae95f14
  4233ea:	xor    DWORD PTR [eax+eiz*8],edi
  4233ed:	ret    
  4233ee:	add    al,0xe4
  4233f0:	ja     0x423387
  4233f2:	stc    
  4233f3:	push   edi
  4233f4:	xor    BYTE PTR [ebp+0x5d],ch
  4233f7:	test   BYTE PTR [ecx+0x1e],dl
  4233fa:	jnp    0x4233d4
  4233fc:	out    dx,eax
  4233fd:	pushf  
  4233fe:	mov    al,0xf4
  423400:	jg     0x423384
  423402:	add    DWORD PTR [edi],edi
  423404:	xor    eax,0x2ae47775
  423409:	fcom   DWORD PTR [ecx-0x2c079e90]
  42340f:	mov    ecx,0x32532062
  423414:	(bad)  
  423415:	fadd   DWORD PTR [esi-0x42]
  423418:	cmp    dl,BYTE PTR [edx]
  42341a:	imul   ecx,esp,0x60191040
  423420:	(bad)  
  423421:	bound  edi,QWORD PTR [edi+0x6]
  423424:	jo     0x4233f9
  423426:	nop
  423427:	ja     0x4233b7
  423429:	jb     0x42347e
  42342b:	test   al,0xcd
  42342d:	sub    BYTE PTR [edi-0xbd4f69e],ch
  423433:	inc    esp
  423434:	add    al,0x58
  423436:	push   ds
  423437:	push   0xffffffc3
  423439:	or     BYTE PTR ds:0x42e0,bl
  42343e:	and    DWORD PTR [eax-0x2d],ecx
  423441:	push   edx
  423442:	jns    0x4233f3
  423444:	repz rol BYTE PTR [ebx-0x3247b3fe],1
  42344b:	fs dec eax
  42344d:	out    dx,al
  42344e:	dec    ecx
  42344f:	dec    ecx
  423450:	mov    eax,ds:0x379ac795
  423455:	jle    0x42346b
  423457:	mov    DWORD PTR [edi],esp
  423459:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42345a:	les    ebp,FWORD PTR [ebx-0x6aae9958]
  423460:	call   0xf346:0x2f3461cf
  423467:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423468:	cli    
  423469:	sbb    ah,bh
  42346b:	test   al,0xba
  42346d:	xor    eax,0x95a182a1
  423472:	pop    esp
  423473:	add    al,0xad
  423475:	mov    ah,0x60
  423477:	lock pop eax
  423479:	mov    eax,0xc3ded985
  42347e:	retf   
  42347f:	pop    edx
  423480:	adc    eax,0x4aae072f
  423485:	inc    eax
  423486:	addr16 mov es:0x3577,al
  42348b:	ins    BYTE PTR es:[edi],dx
  42348c:	lds    edi,FWORD PTR [eax-0x25]
  42348f:	int    0xdb
  423491:	inc    eax
  423492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423493:	popf   
  423494:	pop    eax
  423495:	add    BYTE PTR [eax],dl
  423497:	popa   
  423498:	adc    BYTE PTR [edi+0x6],al
  42349b:	scas   eax,DWORD PTR es:[edi]
  42349c:	lahf   
  42349d:	sbb    BYTE PTR [edi-0x7b],0x98
  4234a1:	mov    DWORD PTR [esi+0x355702be],edi
  4234a7:	xlat   BYTE PTR ds:[ebx]
  4234a8:	pop    es
  4234a9:	push   eax
  4234aa:	and    eax,0x9600ceb9
  4234af:	xor    BYTE PTR [edi-0x34],cl
  4234b2:	ds ds stos BYTE PTR es:[edi],al
  4234b5:	stos   DWORD PTR es:[edi],eax
  4234b6:	sbb    DWORD PTR [edx+0x224c822f],edx
  4234bc:	inc    ebx
  4234bd:	jecxz  0x423475
  4234bf:	push   0xffffffa1
  4234c1:	sbb    BYTE PTR [eax-0x2e],ah
  4234c4:	jnp    0x42345c
  4234c6:	mov    cl,0xa3
  4234c8:	sbb    BYTE PTR [edi],ch
  4234ca:	neg    BYTE PTR [eax+ebp*2]
  4234cd:	je     0x423527
  4234cf:	loope  0x4234f6
  4234d1:	test   DWORD PTR [ebx+0x3b],ebp
  4234d4:	imul   ecx,DWORD PTR [ebx-0x4f],0xffffffd6
  4234d8:	push   esp
  4234d9:	les    edx,FWORD PTR [ebx]
  4234db:	jmp    0x4234e8
  4234dd:	imul   edx,esi,0x2
  4234e0:	cwde   
  4234e1:	cmp    edi,DWORD PTR [ecx]
  4234e3:	inc    ebp
  4234e4:	xor    ebp,esp
  4234e6:	fild   DWORD PTR [ecx+0x13]
  4234e9:	(bad)  
  4234ea:	or     bl,BYTE PTR [ecx+0x68]
  4234ed:	cwde   
  4234ee:	push   esi
  4234ef:	arpl   si,si
  4234f1:	std    
  4234f2:	adc    dh,BYTE PTR [edx+0x5dcf4a78]
  4234f8:	and    BYTE PTR [esi],dh
  4234fa:	scas   eax,DWORD PTR es:[edi]
  4234fb:	dec    esp
  4234fc:	mov    DWORD PTR [edx+0x75],ebp
  4234ff:	sbb    ebp,DWORD PTR [ebp+0x6b1f3dfc]
  423505:	dec    edi
  423506:	jecxz  0x4234d3
  423508:	adc    BYTE PTR [edx-0x6764d00c],bl
  42350e:	bound  edi,QWORD PTR [eax+0x4662ed4f]
  423514:	jp     0x423594
  423516:	or     cl,BYTE PTR [ebx]
  423518:	mov    dl,0x8e
  42351a:	sbb    DWORD PTR [edx+0x71],ebp
  42351d:	sub    bh,BYTE PTR [esi-0x1a65457f]
  423523:	dec    esp
  423524:	loop   0x42350c
  423526:	jno    0x423562
  423528:	jns    0x42358d
  42352a:	in     al,0xba
  42352c:	add    DWORD PTR [ecx],0x2d7ee589
  423532:	sahf   
  423533:	jns    0x4234bb
  423535:	(bad)  
  423536:	dec    ebp
  423537:	add    DWORD PTR [ebx],edi
  423539:	jne    0x423572
  42353b:	jg     0x4235a0
  42353d:	pusha  
  42353e:	cld    
  42353f:	call   0x443a3ca3
  423544:	xor    ebp,ecx
  423546:	mov    ebx,0x8fa79211
  42354b:	xor    ebx,DWORD PTR [esi+0x5c]
  42354e:	jb     0x423565
  423550:	inc    esp
  423551:	ss pop esi
  423553:	das    
  423554:	lods   al,BYTE PTR ds:[esi]
  423555:	popf   
  423556:	adc    cl,dl
  423558:	(bad)  
  423559:	ds dec eax
  42355b:	cdq    
  42355c:	add    al,0xea
  42355e:	stos   BYTE PTR es:[edi],al
  42355f:	fs leave 
  423561:	addr16 and eax,0x427cbd61
  423567:	cmp    BYTE PTR [ecx-0x3c],0x50
  42356b:	int    0xa1
  42356d:	sub    bh,ch
  42356f:	fsubr  st,st(7)
  423571:	(bad)  
  423572:	jmp    0x5f31:0x90a8bfbb
  423579:	sbb    al,bl
  42357b:	stc    
  42357c:	fisub  WORD PTR [edi-0x17]
  42357f:	jnp    0x423596
  423581:	pusha  
  423582:	cmp    DWORD PTR [edi+ebx*2-0x1e],ebx
  423586:	in     eax,0xc6
  423588:	call   0x55f27cfb
  42358d:	fcomp  st(7)
  42358f:	int    0x95
  423591:	or     esp,DWORD PTR [edx]
  423593:	mov    cl,0xe6
  423595:	mov    dl,0xb5
  423597:	or     DWORD PTR [ecx+0x44d3345b],esp
  42359d:	jno    0x423570
  42359f:	rcr    bh,0x39
  4235a2:	test   al,0x67
  4235a4:	shl    DWORD PTR [edx],1
  4235a6:	pop    ebp
  4235a7:	inc    ebp
  4235a8:	mov    ecx,0xfbb095c9
  4235ad:	xchg   edx,eax
  4235ae:	mov    cl,0xaf
  4235b0:	pop    ss
  4235b1:	out    dx,eax
  4235b2:	adc    edx,edx
  4235b4:	pop    edx
  4235b5:	(bad)  
  4235b6:	icebp  
  4235b7:	add    BYTE PTR [esi],al
  4235b9:	pop    edx
  4235ba:	jmp    0xa30a51fa
  4235bf:	into   
  4235c0:	stc    
  4235c1:	inc    ebx
  4235c2:	jmp    0x8725:0xe65a5e8b
  4235c9:	fs (bad) 
  4235cb:	mov    dh,BYTE PTR [edi+esi*4]
  4235ce:	ins    BYTE PTR es:[edi],dx
  4235cf:	adc    bh,BYTE PTR [ebx-0x17]
  4235d2:	gs aad 0x89
  4235d5:	push   edx
  4235d6:	inc    ecx
  4235d7:	dec    esi
  4235d8:	dec    ebx
  4235d9:	dec    edi
  4235da:	stos   DWORD PTR es:[edi],eax
  4235db:	or     ah,ch
  4235dd:	repz out dx,eax
  4235df:	fist   DWORD PTR [ecx]
  4235e1:	push   edx
  4235e2:	mov    WORD PTR [ebp+0x7c],ss
  4235e5:	stos   DWORD PTR es:[edi],eax
  4235e6:	sbb    ecx,DWORD PTR [edi*1-0x20ab8dff]
  4235ed:	jbe    0x4235bb
  4235ef:	cdq    
  4235f0:	test   al,0x0
  4235f2:	and    esp,edx
  4235f4:	jmp    0x4235dc
  4235f6:	xor    BYTE PTR [edx+ecx*2],ah
  4235f9:	mov    ds:0x123af664,al
  4235fe:	jmp    0x20e9:0xbe7a104e
  423605:	loopne 0x423669
  423607:	mov    esi,0xe434afcf
  42360c:	mov    dh,0xc1
  42360e:	or     al,0x3f
  423610:	xchg   edi,eax
  423611:	or     DWORD PTR [edi+ebx*2-0x36],ebp
  423615:	bound  ecx,QWORD PTR [eax+0x78eaf60]
  42361b:	xchg   ebp,eax
  42361c:	push   edi
  42361d:	cli    
  42361e:	ret    0x988c
  423621:	mov    esi,0xe14da790
  423626:	push   edi
  423627:	les    ebx,FWORD PTR [edi]
  423629:	sub    DWORD PTR [edx-0x27],edi
  42362c:	cwde   
  42362d:	xlat   BYTE PTR ds:[ebx]
  42362e:	repz and ebp,eax
  423631:	jne    0x42369b
  423633:	pop    esp
  423634:	mov    esi,0x952f9295
  423639:	in     al,0xd6
  42363b:	mov    edx,ecx
  42363d:	fstp   DWORD PTR [edi+0x6c004ef6]
  423643:	sub    ch,BYTE PTR [ebx]
  423645:	outs   dx,DWORD PTR es:[esi]
  423647:	daa    
  423648:	ins    DWORD PTR es:[edi],dx
  423649:	push   0xfffffff2
  42364b:	push   esp
  42364c:	stos   DWORD PTR es:[edi],eax
  42364d:	adc    eax,DWORD PTR [edi+0x6c47a063]
  423653:	stos   BYTE PTR es:[edi],al
  423654:	add    DWORD PTR [eax],eax
  423656:	daa    
  423657:	add    eax,DWORD PTR [eax]
  423659:	add    BYTE PTR [esi+0x18e34c97],bh
  42365f:	sbb    BYTE PTR [esi-0x273f7dda],0xae
  423666:	mov    dl,0x5b
  423668:	pushf  
  423669:	cmp    al,0x1e
  42366b:	hlt    
  42366c:	add    ebx,DWORD PTR [esi-0x27]
  42366f:	les    ebx,FWORD PTR [edx+0x45dcdc8e]
  423675:	xor    BYTE PTR [edx-0x78],bh
  423678:	es pop edx
  42367a:	scas   al,BYTE PTR es:[edi]
  42367b:	cmp    al,0x8e
  42367d:	enter  0x2692,0xad
  423681:	sbb    eax,0x538e6381
  423686:	loopne 0x423647
  423688:	shr    BYTE PTR [ebx],cl
  42368a:	dec    esp
  42368b:	hlt    
  42368c:	mov    cl,BYTE PTR [ecx+eiz*8]
  42368f:	sbb    eax,0x2f84fc24
  423694:	mov    ds:0xcab0421,eax
  423699:	xchg   ecx,eax
  42369a:	push   0x17
  42369c:	pop    ebp
  42369d:	frstor [eax-0x2866dcc5]
  4236a3:	(bad)  
  4236a4:	leave  
  4236a5:	stos   BYTE PTR es:[edi],al
  4236a6:	mov    al,0xca
  4236a8:	sbb    BYTE PTR [edi],ch
  4236aa:	add    cl,ch
  4236ac:	int    0xb
  4236ae:	pop    edx
  4236af:	pop    ds
  4236b0:	out    0x6f,al
  4236b2:	mov    edi,DWORD PTR [ebx]
  4236b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236b5:	mov    es,WORD PTR [ecx-0x3d]
  4236b8:	sub    eax,0x28cb1a4
  4236bd:	jl     0x4236f7
  4236bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236c0:	push   ebp
  4236c1:	(bad)  
  4236c3:	push   es
  4236c4:	push   ecx
  4236c5:	mov    al,ds:0xb3a5b1c1
  4236ca:	(bad)  
  4236cb:	and    al,0x7c
  4236cd:	adc    ah,ch
  4236cf:	adc    al,0x7e
  4236d1:	and    eax,0xc7f1b958
  4236d6:	hlt    
  4236d7:	jno    0x4236bb
  4236d9:	pop    ds
  4236da:	mov    cl,0x1f
  4236dc:	mov    cl,0x1
  4236de:	hlt    
  4236df:	adc    eax,edi
  4236e1:	fs inc eax
  4236e3:	call   0xac28:0xbd60bacb
  4236ea:	cmp    al,0x46
  4236ec:	xlat   BYTE PTR ds:[ebx]
  4236ed:	inc    esp
  4236ee:	mov    ds:0x569f14fa,al
  4236f3:	jb     0x4236c1
  4236f5:	popa   
  4236f6:	or     bh,BYTE PTR [ecx-0x2d1c80c0]
  4236fc:	imul   esi,DWORD PTR [edx+ebp*4],0x60804da7
  423703:	xor    dl,BYTE PTR gs:[edx]
  423706:	add    eax,0x6a362b52
  42370b:	std    
  42370c:	and    al,0x8b
  42370e:	cld    
  42370f:	xchg   ebx,eax
  423710:	xchg   DWORD PTR [ebp-0x34],edi
  423713:	sub    al,0xfa
  423715:	inc    eax
  423716:	xchg   esi,eax
  423717:	sbb    eax,0x65a68b80
  42371c:	pop    ebp
  42371d:	in     eax,dx
  42371e:	jmp    0x423721
  423720:	fisub  DWORD PTR [eax-0x6a7a7caa]
  423726:	jne    0x42379b
  423728:	and    ebp,DWORD PTR [ecx-0x5e]
  42372b:	repz bound ebp,QWORD PTR [edx-0x7ffdf1b3]
  423732:	push   ebx
  423733:	jo     0x423740
  423735:	jge    0x423768
  423737:	mov    bx,0x141
  42373b:	xchg   esi,eax
  42373c:	dec    esp
  42373d:	fwait
  42373e:	in     al,dx
  42373f:	in     eax,dx
  423740:	sbb    eax,0x32279260
  423745:	or     esp,DWORD PTR ds:0x75a22771
  42374b:	ret    0x13ea
  42374e:	mov    ds:0x3dc44ffb,al
  423753:	jnp    0x42371b
  423755:	push   eax
  423756:	xchg   ebp,eax
  423757:	aad    0x8f
  423759:	mov    ecx,DWORD PTR [edx]
  42375b:	pop    esp
  42375c:	out    0xaa,al
  42375e:	add    dl,bl
  423760:	push   0x68336a3
  423765:	and    dl,ah
  423767:	adc    cl,cl
  423769:	pusha  
  42376a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42376b:	pop    ebp
  42376c:	sbb    DWORD PTR [edi],edi
  42376e:	(bad)  [ebx+0x76]
  423771:	mov    ecx,edi
  423773:	lds    ecx,FWORD PTR [edx+ebx*8-0x3782def2]
  42377a:	sub    al,0x3b
  42377c:	ss ds mov cl,bh
  423780:	retf   
  423781:	jns    0x42378c
  423783:	sbb    eax,0x45ccdb3d
  423788:	xchg   ecx,eax
  423789:	ja     0x4237c1
  42378b:	cmp    BYTE PTR [ebp+0x257ee756],bl
  423791:	call   0x47ab3d68
  423796:	out    0xd7,eax
  423798:	enter  0xebec,0x82
  42379c:	and    dh,dl
  42379e:	jle    0x423782
  4237a0:	jno    0x4237fc
  4237a2:	(bad)  
  4237a3:	pop    eax
  4237a4:	cmp    ebx,ecx
  4237a6:	imul   eax,DWORD PTR [ecx-0x1256f490],0x37
  4237ad:	std    
  4237ae:	bound  esp,QWORD PTR es:[edi+ecx*1-0x3f]
  4237b3:	xor    eax,0x13906520
  4237b8:	mov    dh,0x25
  4237ba:	lods   eax,DWORD PTR ds:[esi]
  4237bb:	test   BYTE PTR [edx],0xfd
  4237be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237bf:	pop    edx
  4237c0:	int    0xe
  4237c2:	fnsave [eax-0x5791c404]
  4237c8:	sbb    eax,0xc00b75b5
  4237cd:	sar    DWORD PTR [ebp+0x6ac3da22],cl
  4237d3:	jo     0x4237da
  4237d5:	imul   eax,DWORD PTR [eax+0x5e],0xf365cb1e
  4237dc:	mov    ds:0xee289da4,eax
  4237e1:	fidivr DWORD PTR [edx]
  4237e3:	ror    BYTE PTR [esp+ecx*2],cl
  4237e6:	stc    
  4237e7:	sar    BYTE PTR [esi-0x22],1
  4237ea:	push   esi
  4237eb:	sahf   
  4237ec:	or     bh,BYTE PTR [ebx-0x28b0809a]
  4237f2:	xchg   edi,eax
  4237f3:	mov    cl,0xd8
  4237f5:	mov    eax,ds:0x98e024
  4237fa:	xchg   esi,eax
  4237fb:	jno    0x423825
  4237fd:	fisub  WORD PTR cs:[eax+ebx*2+0x1a]
  423802:	bnd jb 0x423822
  423805:	xor    dh,al
  423807:	call   0xde63:0x9ef300e5
  42380e:	call   0x1a76:0xaccfe749
  423815:	push   esp
  423816:	cdq    
  423817:	ins    BYTE PTR es:[edi],dx
  423818:	sbb    eax,0x62c839a3
  42381d:	cs dec ebp
  42381f:	cmp    al,0x2b
  423821:	dec    ebx
  423822:	inc    ebp
  423823:	pusha  
  423824:	push   ebx
  423825:	dec    esi
  423826:	jb     0x423882
  423828:	push   cs
  423829:	out    dx,al
  42382a:	push   esi
  42382b:	icebp  
  42382c:	repz sti 
  42382e:	mov    dh,0xad
  423830:	addr16 mov ah,0x8c
  423833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423834:	sub    al,0xbe
  423836:	dec    esp
  423837:	and    BYTE PTR [ebp+0x18],bl
  42383a:	lods   al,BYTE PTR ds:[esi]
  42383b:	fcomp  DWORD PTR [ecx]
  42383d:	(bad)  
  42383e:	repnz pop es
  423840:	in     eax,dx
  423841:	jg     0x423831
  423843:	jecxz  0x4237c9
  423845:	loopne 0x423823
  423847:	or     al,0x6d
  423849:	cld    
  42384a:	ss mov ch,0x7
  42384d:	sar    BYTE PTR [edx-0xc],cl
  423850:	inc    esp
  423851:	jnp    0x423823
  423853:	jo     0x4237ef
  423855:	and    ebp,DWORD PTR [ebx+edx*4]
  423858:	xchg   esi,eax
  423859:	xor    BYTE PTR [ebx-0x2f],al
  42385c:	rcl    DWORD PTR [ebx],0x24
  42385f:	mov    esp,0x261cd4ea
  423864:	(bad)  
  423865:	std    
  423866:	jp     0x4237fb
  423868:	fldcw  WORD PTR [ebp+0x41970ac5]
  42386e:	stc    
  42386f:	into   
  423870:	xchg   ecx,eax
  423871:	out    0x9e,eax
  423873:	xchg   esi,eax
  423874:	mov    ds:0xa99a9ad9,eax
  423879:	add    DWORD PTR [eax-0x10],edi
  42387c:	inc    ecx
  42387d:	ret    0x895d
  423880:	shl    edx,0x4
  423883:	(bad)  
  423884:	sub    eax,0xd6cb3e66
  423889:	pop    esp
  42388a:	out    dx,al
  42388b:	stc    
  42388c:	in     al,0xd1
  42388e:	retf   
  42388f:	push   ds
  423890:	es mov esi,ebp
  423893:	lock mov ah,0xda
  423896:	pop    edi
  423897:	lods   al,BYTE PTR ds:[esi]
  423898:	push   ebp
  423899:	sub    ah,al
  42389b:	jl     0x4238f8
  42389d:	and    DWORD PTR ds:0xbc6e2998,edx
  4238a3:	mov    eax,0xd0926dab
  4238a8:	inc    ebx
  4238a9:	push   ecx
  4238aa:	and    eax,0x3ba2c3c0
  4238af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238b0:	bound  ebp,QWORD PTR [ecx-0x3b]
  4238b3:	add    dh,bh
  4238b5:	imul   ecx,ebx,0x25e5c0bb
  4238bb:	shl    DWORD PTR [ebp-0x6fa614f1],1
  4238c1:	push   es
  4238c2:	aam    0x38
  4238c4:	dec    edi
  4238c5:	stos   DWORD PTR es:[edi],eax
  4238c6:	call   0x75201fdb
  4238cb:	xchg   esp,eax
  4238cc:	mov    ds:0xe133af68,eax
  4238d1:	arpl   WORD PTR [edx-0x69d365d7],si
  4238d7:	mov    edx,0xb9160617
  4238dc:	lock pop esi
  4238de:	cmp    eax,0x2468b73b
  4238e3:	mov    eax,ds:0xb0aff1da
  4238e8:	and    al,0xa6
  4238ea:	hlt    
  4238eb:	xor    al,0x96
  4238ed:	push   ecx
  4238ee:	in     eax,dx
  4238ef:	imul   edi,DWORD PTR [edx-0x2c],0xf9d59aa6
  4238f6:	sbb    al,0xa3
  4238f8:	test   esi,ebp
  4238fa:	push   es
  4238fb:	push   ebp
  4238fc:	mov    ebp,0x3ecb33d8
  423901:	addr16 xor al,0x5c
  423904:	fnstenv [ebp-0x5ad1d6ad]
  42390a:	pop    ds
  42390b:	popf   
  42390c:	mov    ax,0x8923
  423910:	mov    ch,0x7
  423912:	add    ecx,DWORD PTR [ecx-0x47e17a11]
  423918:	inc    ebx
  423919:	imul   esp,DWORD PTR [esi],0x7c
  42391c:	pop    esp
  42391d:	imul   edx,DWORD PTR ds:0xf33761ea,0x21
  423924:	inc    edx
  423925:	ss jmp 0xb83e:0x42deea16
  42392d:	cdq    
  42392e:	int3   
  42392f:	fadd   DWORD PTR [esi+0x2307cce]
  423935:	lock outs dx,DWORD PTR ds:[esi]
  423937:	pop    edi
  423938:	cmp    cl,ch
  42393a:	shr    ah,0x6c
  42393d:	add    BYTE PTR [esi-0x486fb61],ch
  423943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423944:	sbb    ecx,DWORD PTR [esi]
  423946:	stos   DWORD PTR es:[edi],eax
  423947:	inc    ebp
  423948:	loope  0x423979
  42394a:	push   ss
  42394b:	(bad)
  42394e:	mov    dl,0xb1
  423950:	dec    esp
  423951:	mov    ecx,0x5ac8f00c
  423956:	out    dx,eax
  423957:	repnz adc al,ah
  42395a:	mov    al,ds:0x981b118e
  42395f:	imul   ebx,ebp,0x303b1fa7
  423965:	sub    DWORD PTR [ebp-0x6c],edx
  423968:	cmp    ch,dh
  42396a:	pop    ds
  42396b:	test   eax,0x5fff97eb
  423970:	xor    DWORD PTR [eax+edx*1+0x7c],0x62b8d7f4
  423978:	mov    bl,0xb9
  42397a:	dec    edi
  42397b:	aaa    
  42397c:	leave  
  42397d:	mov    edi,ecx
  42397f:	push   es
  423980:	pop    esp
  423981:	add    BYTE PTR [ebx-0x73],al
  423984:	pop    ds
  423985:	and    bh,bl
  423987:	mov    dl,0x7f
  423989:	out    dx,eax
  42398a:	add    BYTE PTR [ebx+0x655f2710],dl
  423990:	mov    eax,ds:0x1ad93ac
  423995:	add    BYTE PTR [edi],ah
  423997:	add    eax,DWORD PTR [eax]
  423999:	add    BYTE PTR [esi],ch
  42399b:	call   0xcbffd45d
  4239a0:	repz push 0x3e954d28
  4239a6:	cdq    
  4239a7:	and    edi,esi
  4239a9:	aaa    
  4239aa:	lock xchg esp,eax
  4239ac:	and    DWORD PTR [eax+0x177a3f19],esp
  4239b2:	lods   al,BYTE PTR ds:[esi]
  4239b3:	stos   DWORD PTR es:[edi],eax
  4239b4:	and    DWORD PTR [ebx],edx
  4239b6:	fisubr WORD PTR [ebp-0x11]
  4239b9:	retf   0xadb6
  4239bc:	(bad)  
  4239be:	mov    ecx,0xc8e762cd
  4239c3:	or     ch,BYTE PTR [eax-0x220d858]
  4239c9:	or     al,0x97
  4239cb:	inc    esp
  4239cc:	mov    fs,WORD PTR [edi-0x17]
  4239cf:	push   ebp
  4239d0:	fdivr  DWORD PTR [edx-0x64007875]
  4239d6:	xchg   ecx,eax
  4239d7:	mov    cs,WORD PTR [edi+0x5e]
  4239da:	sub    ecx,DWORD PTR [edx+0x27]
  4239dd:	jns    0x423a29
  4239df:	sbb    bh,BYTE PTR [eax-0x153f61ae]
  4239e5:	add    BYTE PTR [ebp+0x7870d3b7],0xca
  4239ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239ed:	retf   0xae95
  4239f0:	jmp    0x423a2b
  4239f2:	fstp   DWORD PTR [ebx+0x2fef7c8]
  4239f8:	jae    0x42399a
  4239fa:	ins    BYTE PTR es:[edi],dx
  4239fb:	or     eax,0x59b65596
  423a00:	retf   
  423a01:	in     al,dx
  423a02:	adc    BYTE PTR [ebx+edx*8+0x29],ah
  423a06:	fadd   QWORD PTR [ebp-0xf]
  423a09:	jbe    0x4239f8
  423a0b:	push   ebp
  423a0c:	mov    bh,0x36
  423a0e:	push   cs
  423a0f:	mov    cl,BYTE PTR [eax+0x2ad3982a]
  423a15:	dec    esp
  423a16:	lds    ebx,FWORD PTR [ebp+0x53]
  423a19:	mov    dh,0x42
  423a1b:	push   ds
  423a1c:	scas   eax,DWORD PTR es:[edi]
  423a1d:	push   ebx
  423a1e:	(bad)  
  423a1f:	xor    BYTE PTR [ebp+0x64],bh
  423a22:	js     0x4239b2
  423a24:	pushf  
  423a25:	mov    edi,edx
  423a27:	push   esp
  423a28:	popa   
  423a29:	adc    eax,0xf3af1a27
  423a2e:	cmp    ebx,esi
  423a30:	mov    ds:0x887f358,al
  423a35:	imul   edx,DWORD PTR [edi+0x42],0x265029bb
  423a3c:	fadd   DWORD PTR [ecx]
  423a3e:	mov    dl,0xc3
  423a40:	mov    ds:0xdc42e8d6,eax
  423a45:	cmp    BYTE PTR [esi],ah
  423a47:	sbb    dh,BYTE PTR [esi+edi*1-0x4a36a631]
  423a4e:	or     edi,esi
  423a50:	pop    edx
  423a51:	inc    edx
  423a52:	push   eax
  423a53:	enter  0xb95b,0x51
  423a57:	jns    0x423ad1
  423a59:	sub    ebp,DWORD PTR [ecx+0x28a11b13]
  423a5f:	stos   DWORD PTR es:[edi],eax
  423a60:	aam    0x5c
  423a62:	pop    eax
  423a63:	sub    al,0xa9
  423a65:	in     al,0xdd
  423a67:	stos   DWORD PTR es:[edi],eax
  423a68:	mov    WORD PTR [eax+ecx*8+0x63],cs
  423a6c:	pop    es
  423a6d:	sbb    eax,0x9c400655
  423a72:	push   cs
  423a73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a74:	add    eax,0xb8a123a9
  423a79:	add    DWORD PTR [ebx-0x59],esi
  423a7c:	(bad)  
  423a7d:	mov    dl,0xba
  423a7f:	je     0x423a7c
  423a81:	xor    ah,al
  423a83:	push   esp
  423a84:	cmp    eax,0xd47ba14c
  423a89:	popf   
  423a8a:	fisubr WORD PTR [edi-0x72]
  423a8d:	int3   
  423a8e:	push   ebp
  423a8f:	push   es
  423a90:	and    dl,BYTE PTR [esi+0xe33607c]
  423a96:	lea    eax,[ebp+0x7f]
  423a99:	xchg   BYTE PTR ss:[ebp+0x5068cec2],ch
  423aa0:	sub    ch,BYTE PTR [eax+eax*2-0x4b]
  423aa4:	xchg   ebp,eax
  423aa5:	lods   eax,DWORD PTR ds:[esi]
  423aa6:	and    al,0xa5
  423aa8:	in     eax,dx
  423aa9:	nop
  423aaa:	js     0x423a4c
  423aac:	inc    esi
  423aad:	adc    dl,BYTE PTR [eax+0x22]
  423ab0:	xchg   DWORD PTR [edi+0x4adbefc5],esi
  423ab6:	jne    0x423a99
  423ab8:	jae    0x423a70
  423aba:	hlt    
  423abb:	mov    edi,0x946535df
  423ac0:	sub    al,bl
  423ac2:	div    DWORD PTR [ebp+0x11384a6f]
  423ac8:	push   0x64177b4e
  423acd:	aad    0x7f
  423acf:	push   ss
  423ad0:	inc    edx
  423ad1:	xchg   esp,eax
  423ad2:	mov    dl,0x60
  423ad4:	dec    esi
  423ad5:	fdiv   QWORD PTR [eax+0x43]
  423ad8:	loopne 0x423af6
  423ada:	out    dx,eax
  423adb:	pop    esi
  423adc:	push   esp
  423add:	dec    ebp
  423ade:	push   edi
  423adf:	push   eax
  423ae0:	movq   mm3,QWORD PTR [edx+eax*8]
  423ae4:	mov    bh,0x58
  423ae6:	neg    DWORD PTR [esi+0x48e500bc]
  423aec:	fnstcw WORD PTR [ebx]
  423aee:	fmul   QWORD PTR ds:0x2686dbe3
  423af4:	imul   edx,esp,0xffffffd8
  423af7:	jl     0x423b32
  423af9:	jb     0x423aaf
  423afb:	mov    edx,0x5d8d9ba2
  423b00:	shl    BYTE PTR [edi-0x3f60a1dc],cl
  423b06:	data16 fistp QWORD PTR [ecx]
  423b09:	jl     0x423ae4
  423b0b:	push   0xffffff86
  423b0d:	and    DWORD PTR [ebp+0x629d0fa5],ecx
  423b13:	pop    ss
  423b14:	pop    es
  423b15:	mov    ds:0xe10dd8a8,eax
  423b1a:	pop    eax
  423b1b:	pushf  
  423b1c:	xor    al,0x84
  423b1e:	inc    edx
  423b1f:	and    al,0x9e
  423b21:	and    DWORD PTR gs:[edx],ebp
  423b24:	xchg   edi,eax
  423b25:	popf   
  423b26:	add    BYTE PTR [ecx+0x53066e46],dl
  423b2c:	mov    al,ds:0x177b3a27
  423b31:	nop
  423b32:	mov    ch,0xf2
  423b34:	add    bl,cl
  423b36:	call   0x12d1:0x677296a2
  423b3d:	or     al,0xa0
  423b3f:	inc    ecx
  423b40:	imul   esi,DWORD PTR [eax+0x20063f8d],0x19041479
  423b4a:	test   eax,0xfe34333b
  423b4f:	add    eax,0x857fb7e6
  423b54:	mov    dh,0x6b
  423b56:	dec    BYTE PTR [ebx+0x1fd55cc8]
  423b5c:	inc    edx
  423b5d:	adc    DWORD PTR [edx],ebp
  423b5f:	pop    ebx
  423b60:	mov    ebp,0x5965d239
  423b65:	jmp    0x49ee:0x6ec7c5b
  423b6c:	(bad)  
  423b6d:	cld    
  423b6e:	dec    ecx
  423b6f:	cmc    
  423b70:	and    al,BYTE PTR [edi]
  423b72:	xchg   ebx,eax
  423b73:	add    ch,BYTE PTR ds:0xdf09359f
  423b79:	fcmovb st,st(3)
  423b7b:	lods   eax,DWORD PTR ds:[esi]
  423b7c:	pop    ebp
  423b7d:	and    BYTE PTR [ebp+0x76],ch
  423b80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b81:	dec    ebx
  423b82:	(bad)  
  423b83:	mov    cs,WORD PTR [edx-0x50698edd]
  423b89:	rcl    BYTE PTR [eax-0x41767700],cl
  423b8f:	lock cmp cl,BYTE PTR [eax+0x122a04dc]
  423b96:	sbb    BYTE PTR [edx],al
  423b98:	push   0xffffffaa
  423b9a:	aad    0x55
  423b9c:	daa    
  423b9d:	pop    esp
  423b9e:	mov    dl,0xf
  423ba0:	fwait
  423ba1:	dec    edx
  423ba2:	retf   
  423ba3:	test   eax,0x698d9688
  423ba8:	mov    ebp,0xd35e65cb
  423bad:	pop    ebp
  423bae:	ins    DWORD PTR es:[edi],dx
  423baf:	add    eax,0x996055db
  423bb4:	arpl   WORD PTR [eax],ax
  423bb6:	imul   edx,DWORD PTR [ebp+edi*2-0x7],0xffffff94
  423bbb:	push   ds
  423bbc:	in     eax,dx
  423bbd:	leave  
  423bbe:	(bad)  
  423bbf:	mov    esi,0xa15b7924
  423bc4:	add    BYTE PTR [eax+0x3ef316b1],dl
  423bca:	nop
  423bcb:	and    al,0x34
  423bcd:	mov    ds:0xf1e1ff2e,al
  423bd2:	mov    BYTE PTR ds:0xfdccfde4,al
  423bd8:	pop    es
  423bd9:	sbb    al,0xd3
  423bdb:	fdivr  DWORD PTR [edi-0x1a]
  423bde:	cld    
  423bdf:	lds    esi,FWORD PTR [esp+ebx*8-0x59a2ae47]
  423be6:	retf   0x3bab
  423be9:	push   ds
  423bea:	sti    
  423beb:	sahf   
  423bec:	retf   
  423bed:	inc    esi
  423bee:	ss jae 0x423b8b
  423bf1:	es jb  0x423c18
  423bf4:	cwde   
  423bf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bf6:	push   esi
  423bf7:	fldl2e 
  423bf9:	sti    
  423bfa:	out    0x23,al
  423bfc:	and    BYTE PTR ds:0xa3c23eaf,bh
  423c02:	pop    ecx
  423c03:	cmp    DWORD PTR [ebp+0x30764e6f],0x1a662e9d
  423c0d:	dec    eax
  423c0e:	test   al,0xf5
  423c10:	adc    al,0x78
  423c12:	mov    bh,cl
  423c14:	xchg   DWORD PTR [eax],esi
  423c16:	icebp  
  423c17:	push   esp
  423c18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c19:	rcr    dh,0x83
  423c1c:	rcl    BYTE PTR [ecx],0xe6
  423c1f:	or     al,0x15
  423c21:	adc    ch,BYTE PTR [esi-0x11]
  423c24:	int3   
  423c25:	mov    ds:0x17c27036,al
  423c2a:	out    dx,al
  423c2b:	xchg   edi,eax
  423c2c:	or     BYTE PTR [esi],bh
  423c2e:	pop    ebx
  423c2f:	in     eax,dx
  423c30:	aad    0x29
  423c32:	pop    ds
  423c33:	mov    cl,0xab
  423c35:	xchg   ebp,eax
  423c36:	call   0xe693:0x568c1643
  423c3d:	jae    0x423c40
  423c3f:	bound  ebp,QWORD PTR [esi+ecx*1]
  423c42:	call   0x30d83124
  423c47:	mov    ah,bl
  423c49:	or     DWORD PTR [edx+0x70c88fe],esp
  423c4f:	inc    ebx
  423c50:	repnz rcl dl,0x83
  423c54:	stc    
  423c55:	push   esi
  423c56:	cwde   
  423c57:	mov    dl,0xfd
  423c59:	fsubr  QWORD PTR [ebx+0x6]
  423c5c:	in     al,0x68
  423c5e:	rcr    eax,cl
  423c60:	mov    ds:0x28f1c0b7,al
  423c65:	adc    DWORD PTR [ecx],ebp
  423c67:	mov    eax,0xa6173a8c
  423c6c:	out    dx,eax
  423c6d:	(bad)  
  423c6e:	hlt    
  423c6f:	mov    edx,0x9899230a
  423c74:	mov    esp,0xf718431d
  423c79:	in     al,dx
  423c7a:	sbb    al,0x63
  423c7c:	test   esp,edx
  423c7e:	shl    DWORD PTR [eax-0x3b6573ad],1
  423c84:	jle    0x423c6d
  423c86:	mov    al,ds:0xcb9d4eb1
  423c8b:	in     eax,0xba
  423c8d:	or     bh,BYTE PTR [ecx+eiz*1-0x1c]
  423c91:	(bad)  
  423c92:	and    esi,DWORD PTR [ecx+0x378e5380]
  423c98:	or     ch,dh
  423c9a:	dec    ebp
  423c9b:	sbb    esp,DWORD PTR [edi+0x3767eb69]
  423ca1:	fstp   QWORD PTR [eax+0x4b]
  423ca4:	sub    BYTE PTR [esi+0x68374c77],ch
  423caa:	sbb    dh,BYTE PTR ds:0x715e0b1a
  423cb0:	adc    eax,esi
  423cb2:	inc    edx
  423cb3:	pop    ds
  423cb4:	dec    edi
  423cb5:	cmp    BYTE PTR [ebx-0x5e],ah
  423cb8:	lock inc esi
  423cba:	je     0x423c52
  423cbc:	test   al,0xce
  423cbe:	xchg   esi,eax
  423cbf:	jl     0x423ca7
  423cc1:	add    ah,dh
  423cc3:	cmp    DWORD PTR [edx-0x2002081],edx
  423cc9:	mov    ebx,0xc0721507
  423cce:	in     al,dx
  423ccf:	inc    ebp
  423cd0:	push   ecx
  423cd1:	test   eax,0x1b0ba
  423cd6:	daa    
  423cd7:	add    eax,DWORD PTR [eax]
  423cd9:	add    BYTE PTR [eax+0x966343],dl
  423cdf:	push   edi
  423ce0:	sahf   
  423ce1:	jbe    0x423c9e
  423ce3:	mov    ebx,0x27d3dd89
  423ce8:	stc    
  423ce9:	fsubr  DWORD PTR [edx-0x48]
  423cec:	nop
  423ced:	jns    0x423d53
  423cef:	aam    0x96
  423cf1:	imul   edx,DWORD PTR [ebp+0x14],0xcbd60516
  423cf8:	add    DWORD PTR [esi+ecx*1],0xf12cef29
  423cff:	jge    0x423cda
  423d01:	pushw  ss
  423d03:	adc    ebp,DWORD PTR [eax]
  423d05:	sbb    DWORD PTR [ecx-0x79],ebx
  423d08:	aas    
  423d09:	minps  xmm2,XMMWORD PTR [ecx+0x0]
  423d0d:	sar    edi,cl
  423d0f:	and    BYTE PTR [edx-0x72],dh
  423d12:	inc    ebx
  423d13:	(bad)  
  423d14:	xchg   edx,eax
  423d15:	jne    0x423cc7
  423d17:	jb     0x423d21
  423d19:	push   0x5610d744
  423d1e:	ret    0x6041
  423d21:	push   esi
  423d22:	push   0xffffffba
  423d24:	retf   0x3554
  423d27:	or     ecx,DWORD PTR [esi-0x1ba872f0]
  423d2d:	ret    
  423d2e:	ja     0x423d07
  423d30:	push   ds
  423d31:	aas    
  423d32:	out    0x85,eax
  423d34:	xor    DWORD PTR [edx-0x5d],0xf1de5bf6
  423d3b:	lahf   
  423d3c:	test   al,0x96
  423d3e:	jge    0x423ce2
  423d40:	bound  ecx,QWORD PTR [ebp+0x48]
  423d43:	sahf   
  423d44:	mov    bh,0x3e
  423d46:	push   cs
  423d47:	dec    edi
  423d48:	adc    ebx,edx
  423d4a:	imul   esi,DWORD PTR [ebp+0x1b9c2080],0xda0f217b
  423d54:	pop    edx
  423d55:	test   al,0x75
  423d57:	jl     0x423dbd
  423d59:	in     eax,0xa1
  423d5b:	popa   
  423d5c:	fdivr  QWORD PTR [ebp-0x41]
  423d5f:	mov    ebx,ebp
  423d61:	push   0xffffff9b
  423d63:	ror    BYTE PTR [eax+edi*8],cl
  423d66:	sahf   
  423d67:	xchg   ebx,eax
  423d68:	bound  esp,QWORD PTR [edx+edi*2+0x68397df7]
  423d6f:	fdiv   QWORD PTR [edx]
  423d71:	mov    BYTE PTR [ebx],cl
  423d73:	pop    edi
  423d74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d75:	xchg   ebx,eax
  423d76:	aam    0x12
  423d78:	int    0x84
  423d7a:	scas   al,BYTE PTR es:[edi]
  423d7b:	push   esp
  423d7c:	and    edi,edx
  423d7e:	sub    eax,0x5c0108f
  423d83:	loope  0x423d94
  423d85:	sub    eax,0xafb40f6e
  423d8a:	lahf   
  423d8b:	imul   edi,DWORD PTR [esi+0x408e7099],0xffffffc7
  423d92:	inc    esi
  423d93:	jmp    0x999d:0xd53110ac
  423d9a:	addr16 cmp al,0xfe
  423d9d:	and    edx,edx
  423d9f:	sbb    al,0x47
  423da1:	push   ecx
  423da2:	and    cl,ch
  423da4:	xchg   esi,eax
  423da5:	cmc    
  423da6:	adc    ebp,DWORD PTR [eax+edi*8]
  423da9:	adc    DWORD PTR [eax],ebp
  423dab:	pop    eax
  423dac:	or     eax,0xed30a4bf
  423db1:	repz jb 0x423d54
  423db4:	sub    eax,0x31f8fab3
  423db9:	test   eax,0x817c73df
  423dbe:	mov    cl,0x96
  423dc0:	inc    ecx
  423dc1:	outs   dx,DWORD PTR ds:[esi]
  423dc2:	ja     0x423d4c
  423dc4:	dec    edx
  423dc5:	jmp    0x70b03ba1
  423dca:	(bad)  
  423dcb:	jmp    0x423df2
  423dcd:	or     DWORD PTR [ebx+eiz*1+0x4d14935e],eax
  423dd4:	jmp    0x423daf
  423dd6:	xor    edi,DWORD PTR [eax-0x5048694b]
  423ddc:	out    0x95,al
  423dde:	call   0xdb92c07d
  423de3:	ss jge 0x423d9e
  423de6:	push   ss
  423de7:	cwde   
  423de8:	xchg   BYTE PTR [edx-0x7],bh
  423deb:	push   ebx
  423dec:	inc    ebp
  423ded:	push   edx
  423dee:	inc    DWORD PTR [eax]
  423df0:	test   eax,0x4efcd512
  423df5:	mov    eax,ds:0xd1655531
  423dfa:	xor    ecx,DWORD PTR [edx+0x7793273c]
  423e00:	pop    ecx
  423e01:	repnz sbb DWORD PTR [ebx+eiz*8],0xb4f36f3f
  423e09:	or     eax,0x80a59ef5
  423e0e:	xchg   edi,eax
  423e0f:	push   ebx
  423e10:	push   ecx
  423e11:	inc    ecx
  423e12:	push   ebx
  423e13:	sub    dh,BYTE PTR [edx+0x70]
  423e16:	test   esi,edx
  423e18:	and    eax,0x7bb1e286
  423e1d:	call   DWORD PTR [ebp+0x452215b5]
  423e23:	mov    WORD PTR [esi-0x5dd6549e],fs
  423e29:	push   ds
  423e2a:	sbb    al,0xb6
  423e2c:	stos   BYTE PTR es:[edi],al
  423e2d:	test   al,0xdc
  423e2f:	(bad)  [esi+0x16]
  423e32:	add    al,0x84
  423e34:	es pop ecx
  423e36:	and    ah,bh
  423e38:	jno    0x423def
  423e3a:	push   ebp
  423e3b:	sub    DWORD PTR [edi],edx
  423e3d:	add    DWORD PTR [ecx],ebx
  423e3f:	cmp    al,0xde
  423e41:	push   eax
  423e42:	lds    esi,FWORD PTR ds:0xcc43f5d8
  423e48:	dec    ebx
  423e49:	pop    eax
  423e4a:	xchg   esp,eax
  423e4b:	icebp  
  423e4c:	imul   edi,edi,0xffffff93
  423e4f:	(bad)  
  423e50:	push   cs
  423e51:	stos   DWORD PTR es:[edi],eax
  423e52:	bound  ebx,QWORD PTR [edi-0x14a63e43]
  423e58:	adc    eax,0x9a58eda7
  423e5d:	pop    ds
  423e5e:	or     DWORD PTR [ebx],ecx
  423e60:	xchg   ecx,eax
  423e61:	and    DWORD PTR ds:0xb1b995da,0xf9d50173
  423e6b:	mov    bl,0x3a
  423e6d:	cli    
  423e6e:	push   0x489ff298
  423e73:	scas   eax,DWORD PTR es:[edi]
  423e74:	clc    
  423e75:	pusha  
  423e76:	addr16 aaa 
  423e78:	jbe    0x423e2d
  423e7a:	jp     0x423e55
  423e7c:	push   0xffffffa8
  423e7e:	cli    
  423e7f:	(bad)  
  423e80:	push   es
  423e81:	adc    BYTE PTR [esi-0x40ab8d86],ch
  423e87:	popf   
  423e88:	pusha  
  423e89:	aam    0xe2
  423e8b:	fmul   DWORD PTR [esi]
  423e8d:	mov    cl,0xc3
  423e8f:	retf   
  423e90:	xchg   esi,eax
  423e91:	and    BYTE PTR [esi+0x73],ah
  423e94:	and    al,0x6b
  423e96:	mov    eax,ds:0xec4d6c18
  423e9b:	in     eax,dx
  423e9c:	(bad)  
  423e9d:	rcr    ah,1
  423e9f:	mov    ebp,0xea646e32
  423ea4:	inc    esi
  423ea5:	dec    ecx
  423ea6:	test   al,0xf1
  423ea8:	or     DWORD PTR ds:[eax+0x71],0x4c
  423ead:	jle    0x423ea0
  423eaf:	push   es
  423eb0:	adc    ah,BYTE PTR [esi-0x67]
  423eb3:	add    esp,DWORD PTR [edi+0x583ca669]
  423eb9:	pop    esi
  423eba:	push   ebx
  423ebb:	sbb    edx,0x24
  423ebe:	retf   
  423ebf:	ss pop es
  423ec1:	xlat   BYTE PTR ds:[ebx]
  423ec2:	cld    
  423ec3:	mov    ss,esp
  423ec5:	pop    es
  423ec6:	sbb    al,0x1c
  423ec8:	div    BYTE PTR [ecx]
  423eca:	sub    ch,BYTE PTR [ecx+0x11]
  423ecd:	or     BYTE PTR [ecx+0x62],dl
  423ed0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ed1:	add    BYTE PTR [eax+0x2],cl
  423ed4:	inc    eax
  423ed5:	xchg   esi,eax
  423ed6:	fs dec esi
  423ed8:	cmp    ecx,DWORD PTR [esi-0x20aba8fb]
  423ede:	inc    ecx
  423edf:	in     al,0x74
  423ee1:	sub    BYTE PTR [ebp+0x54],cl
  423ee4:	jb     0x423ea4
  423ee6:	push   0xe66c3a3c
  423eeb:	(bad)  
  423eec:	les    esi,FWORD PTR [esi-0x42101c5f]
  423ef2:	or     al,0x44
  423ef4:	out    0xdf,eax
  423ef6:	loope  0x423ef5
  423ef8:	into   
  423ef9:	pop    edx
  423efa:	mov    cl,0x2a
  423efc:	loopne 0x423f48
  423efe:	mov    edx,0xdd829f58
  423f03:	lods   al,BYTE PTR ds:[esi]
  423f04:	push   0xffffffc4
  423f06:	cmp    DWORD PTR [edx+eax*1-0x74fc5e69],eax
  423f0d:	jg     0x423f30
  423f0f:	mov    ebx,0xb95e4989
  423f14:	mov    bh,0x4f
  423f16:	nop
  423f17:	call   0xce5:0xd87ad814
  423f1e:	aam    0xe3
  423f20:	xor    bh,ah
  423f22:	or     BYTE PTR [eax],0x86
  423f25:	mov    edi,0x9bf40c79
  423f2a:	imul   ebp,DWORD PTR [edi+0x26],0x655f8ccb
  423f31:	lea    esp,[esi-0x24]
  423f34:	les    ebp,FWORD PTR [ebx]
  423f36:	push   ds
  423f37:	data16 mov ds:0xf9411e4e,al
  423f3d:	sbb    ah,dl
  423f3f:	add    dh,BYTE PTR ds:0x6da03fd2
  423f45:	or     eax,0x9bfddfc2
  423f4a:	pop    ecx
  423f4b:	loope  0x423f85
  423f4d:	loope  0x423f91
  423f4f:	push   cs
  423f50:	sub    eax,0x1c48790a
  423f55:	hlt    
  423f56:	sbb    cl,BYTE PTR [edx-0x54e4f526]
  423f5c:	test   al,0x99
  423f5e:	xor    ebx,DWORD PTR [edi]
  423f60:	dec    ebx
  423f61:	int    0xdc
  423f63:	push   ds
  423f64:	scas   al,BYTE PTR es:[edi]
  423f65:	add    DWORD PTR [ebx-0x3bcf4877],edi
  423f6b:	jmp    0x423fbb
  423f6d:	sub    ah,dh
  423f6f:	jbe    0x423f14
  423f71:	(bad)  
  423f72:	xor    ecx,ecx
  423f74:	jmp    0x423f4c
  423f76:	imul   dl
  423f78:	jmp    0x4e55149a
  423f7d:	sbb    ch,BYTE PTR [ebx+0x356871d6]
  423f83:	aaa    
  423f84:	sbb    al,BYTE PTR [esi-0x2c2933f9]
  423f8a:	mov    ds:0x7785b9e3,al
  423f8f:	mov    edx,0xb77a50cd
  423f94:	sahf   
  423f95:	inc    eax
  423f96:	dec    edi
  423f97:	adc    eax,0x3cf20d36
  423f9c:	push   esi
  423f9d:	add    BYTE PTR [eax],bh
  423f9f:	cmp    al,0x1
  423fa1:	pop    ebx
  423fa2:	dec    esp
  423fa3:	mov    eax,0x97860e3f
  423fa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423fa9:	mov    dh,0xf3
  423fab:	mov    edi,0xb648f09f
  423fb0:	lods   al,BYTE PTR ds:[esi]
  423fb1:	jmp    0x42402d
  423fb3:	and    al,0xfb
  423fb5:	jecxz  0x423fb2
  423fb7:	sar    DWORD PTR [esi+0x7],0x37
  423fbb:	out    0xce,eax
  423fbd:	mov    ss,WORD PTR [eax+0x7f]
  423fc0:	inc    edx
  423fc1:	push   0x770f8a81
  423fc6:	and    al,0xba
  423fc8:	and    eax,0xd29d64ae
  423fcd:	mov    ebp,0xc1f74bda
  423fd2:	xchg   BYTE PTR [edx+eiz*8-0x3],bh
  423fd6:	out    dx,al
  423fd7:	jb     0x423f62
  423fd9:	and    eax,0xf4719434
  423fde:	pop    ss
  423fdf:	xchg   ebx,eax
  423fe0:	neg    DWORD PTR [ebx]
  423fe2:	sbb    BYTE PTR [eax-0x5cd2f29],0xb0
  423fe9:	inc    ebp
  423fea:	pop    ebx
  423feb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fec:	sub    BYTE PTR [edi],cl
  423fee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fef:	or     edi,DWORD PTR [edx+0x72f17c65]
  423ff5:	cdq    
  423ff6:	int3   
  423ff7:	jbe    0x423f7c
  423ff9:	mov    edx,0x422bbfb1
  423ffe:	popa   
  423fff:	fild   WORD PTR [edx+0x243e5400]
  424005:	sbb    DWORD PTR [esi+0x1b],ebp
  424008:	jge    0x424089
  42400a:	(bad)  
  42400b:	mov    eax,0x9689cfc0
  424010:	loope  0x424026
  424012:	loope  0x423fc7
  424014:	add    DWORD PTR [eax],eax
  424016:	daa    
  424017:	add    eax,DWORD PTR [eax]
  424019:	add    dh,bl
  42401b:	(bad)  
  42401c:	pop    ebp
  42401d:	pop    edx
  42401e:	xchg   ebp,eax
  42401f:	sub    eax,0x94091609
  424024:	int3   
  424025:	out    0x66,eax
  424027:	sbb    cl,dl
  424029:	fincstp 
  42402b:	loopne 0x423fcf
  42402d:	ret    0xc304
  424030:	pop    si
  424032:	addr16 or al,0x80
  424035:	adc    ebp,DWORD PTR [edi-0x1e]
  424038:	fstp   DWORD PTR [edx+edx*1-0x72eb4547]
  42403f:	xchg   ebp,eax
  424040:	not    DWORD PTR [edi+0x31696a7d]
  424046:	jmp    0x424094
  424048:	mov    al,0x74
  42404a:	mul    cl
  42404c:	aam    0x6
  42404e:	adc    BYTE PTR [edi+0x7fa4d7b5],0xbd
  424055:	rcr    DWORD PTR [edx+0x69a948c6],cl
  42405b:	xor    edi,DWORD PTR [edx]
  42405d:	adc    DWORD PTR [edx-0x45d20747],esp
  424063:	nop
  424064:	pushf  
  424065:	push   ss
  424066:	int    0x63
  424068:	lods   eax,DWORD PTR ds:[esi]
  424069:	imul   ebp,DWORD PTR [esi],0x96c2b004
  42406f:	mov    dl,0x14
  424071:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424072:	dec    edi
  424073:	pusha  
  424074:	mov    dl,0x8a
  424076:	pop    ebx
  424077:	jecxz  0x424033
  424079:	in     eax,0xca
  42407b:	sub    ebp,DWORD PTR [ecx+0x35dcbd40]
  424081:	sbb    dh,BYTE PTR [ebx-0x23]
  424084:	cli    
  424085:	inc    edi
  424086:	xor    ebx,edx
  424088:	mov    bl,0x51
  42408a:	inc    edx
  42408b:	or     esi,eax
  42408d:	or     al,0x67
  42408f:	xchg   DWORD PTR [eax+0x12566f40],ebp
  424095:	or     DWORD PTR [ebx-0xbe314be],0x5f62c7e3
  42409f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240a0:	dec    ebx
  4240a1:	sar    DWORD PTR [ebx+0x3f],cl
  4240a4:	xchg   esp,eax
  4240a5:	add    dh,BYTE PTR [edx*4+0x4d505a03]
  4240ac:	jle    0x424030
  4240ae:	sub    eax,0x9c37307
  4240b3:	dec    ebx
  4240b4:	mov    al,0xb3
  4240b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240b7:	sbb    DWORD PTR [eax-0x58],esp
  4240ba:	jmp    0x6953:0x4de0049c
  4240c1:	int3   
  4240c2:	dec    edi
  4240c3:	dec    ebx
  4240c4:	cmp    BYTE PTR [ebx-0x7043e7e2],dl
  4240ca:	pop    esi
  4240cb:	leave  
  4240cc:	arpl   WORD PTR gs:[eax-0x51],bp
  4240d0:	ror    DWORD PTR [edi-0x2316043d],cl
  4240d6:	(bad)  
  4240d7:	mov    BYTE PTR [esi+0x72],bl
  4240da:	sbb    al,0x36
  4240dc:	rcr    dl,1
  4240de:	push   cs
  4240df:	and    al,0x11
  4240e1:	pop    edi
  4240e2:	mov    cl,0x59
  4240e4:	dec    ecx
  4240e5:	cs inc eax
  4240e7:	push   es
  4240e8:	cli    
  4240e9:	mov    al,ds:0x9c84ad44
  4240ee:	loop   0x4240ac
  4240f0:	sub    eax,0xae863cc5
  4240f5:	and    al,0xee
  4240f7:	mov    ebx,0x8c6db06e
  4240fc:	xlat   BYTE PTR ds:[ebx]
  4240fd:	pop    ecx
  4240fe:	xchg   ecx,eax
  4240ff:	dec    esp
  424100:	xchg   esp,eax
  424101:	jbe    0x424129
  424103:	cdq    
  424104:	adc    BYTE PTR [edi],0x36
  424107:	sbb    dl,ch
  424109:	xchg   edx,eax
  42410a:	test   BYTE PTR [eax],ch
  42410c:	data16 mov WORD PTR [ebx],gs
  42410f:	fidivr WORD PTR [ecx+eiz*1]
  424112:	and    eax,eax
  424114:	push   ecx
  424115:	clc    
  424116:	and    ch,cl
  424118:	std    
  424119:	xchg   ecx,eax
  42411a:	inc    ebp
  42411b:	shl    ecx,1
  42411d:	sub    al,0x90
  42411f:	lods   al,BYTE PTR ds:[esi]
  424120:	dec    ecx
  424121:	xor    esp,DWORD PTR [edi]
  424123:	xor    eax,0xe3557468
  424128:	stc    
  424129:	sub    DWORD PTR [ebx],edi
  42412b:	and    ah,bh
  42412d:	mov    bh,0x35
  42412f:	aas    
  424130:	sar    BYTE PTR [ecx],cl
  424132:	jbe    0x4240f4
  424134:	xor    edx,DWORD PTR [ecx]
  424136:	push   eax
  424137:	dec    eax
  424138:	xor    al,0xb3
  42413a:	cld    
  42413b:	aad    0x45
  42413d:	fs mov ecx,0x8a4c758d
  424143:	ja     0x424176
  424145:	rcl    BYTE PTR [ecx],cl
  424147:	fsub   QWORD PTR ds:0x2008917a
  42414d:	lahf   
  42414e:	sbb    al,0x33
  424150:	in     al,0x72
  424152:	out    0x5a,al
  424154:	ss pop ds
  424156:	cwde   
  424157:	jmp    0x62894941
  42415c:	(bad)  
  42415d:	lods   eax,DWORD PTR ds:[esi]
  42415e:	inc    ecx
  42415f:	jmp    0x42419e
  424161:	mov    esp,0x8a1ce5dc
  424166:	xor    eax,0xda26e690
  42416b:	mov    DWORD PTR [ecx],eax
  42416d:	pop    ss
  42416e:	adc    ch,BYTE PTR [ebp+0x7]
  424171:	lea    di,[eax]
  424174:	mov    bl,0x2b
  424176:	and    eax,esp
  424178:	fs pop eax
  42417a:	pushf  
  42417b:	dec    ebx
  42417c:	in     eax,dx
  42417d:	cdq    
  42417e:	jle    0x424183
  424180:	fwait
  424181:	into   
  424182:	nop
  424183:	fcmovbe st,st(5)
  424185:	stos   BYTE PTR es:[edi],al
  424186:	pusha  
  424187:	add    DWORD PTR [edi],ebp
  424189:	repnz fidiv WORD PTR [ebx-0x58]
  42418d:	push   edi
  42418e:	(bad)  
  42418f:	fs stc 
  424191:	ret    
  424192:	pop    ds
  424193:	xchg   edi,eax
  424194:	icebp  
  424195:	dec    ebp
  424196:	cdq    
  424197:	xor    BYTE PTR [ebx-0x6],dh
  42419a:	mov    al,ds:0x2873a6db
  42419f:	loopne 0x4241a1
  4241a1:	sub    bl,BYTE PTR [ecx]
  4241a3:	push   ds
  4241a4:	cmc    
  4241a5:	add    ah,ch
  4241a7:	jecxz  0x4241e1
  4241a9:	ficom  WORD PTR [ecx-0x67]
  4241ac:	lock and DWORD PTR [ebx],0xfffffff3
  4241b0:	hlt    
  4241b1:	mov    ah,al
  4241b3:	out    0x24,al
  4241b5:	aam    0xd
  4241b7:	pop    esi
  4241b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4241b9:	push   esi
  4241ba:	mov    eax,ds:0xcdc684bd
  4241bf:	inc    eax
  4241c0:	push   0xe2afba25
  4241c5:	mov    eax,ds:0x906db85
  4241ca:	add    eax,0x75758b10
  4241cf:	inc    edi
  4241d0:	test   BYTE PTR ds:0x18cdfcad,dl
  4241d6:	xchg   edx,eax
  4241d7:	call   0x9c2c3e
  4241dc:	cwde   
  4241dd:	nop
  4241de:	cmp    eax,0xe4070b9c
  4241e3:	call   0x3f76:0xbb711f75
  4241ea:	daa    
  4241eb:	mov    eax,0xa20929e2
  4241f0:	imul   ebp,DWORD PTR ds:0x2a199b2b,0x3ba6445f
  4241fa:	test   esp,0x7f75049a
  424200:	imul   ecx,DWORD PTR [eax-0x473bbf69],0xa057248f
  42420a:	mov    edi,0x874240d2
  42420f:	mov    WORD PTR [eax+0x1d],cs
  424212:	into   
  424213:	pusha  
  424214:	neg    BYTE PTR [ebp+0x2dacaaf]
  42421a:	ret    0x8d8f
  42421d:	cmp    al,0xcd
  42421f:	sbb    eax,0xb995dc68
  424224:	or     DWORD PTR [esp+ebp*8],edx
  424227:	sub    BYTE PTR [edx+0x1d],al
  42422a:	pop    edi
  42422b:	mov    dh,0x1c
  42422d:	je     0x4241bb
  42422f:	retf   0x6463
  424232:	push   ecx
  424233:	cmp    DWORD PTR [edi-0x3d6aebc0],esi
  424239:	and    dl,BYTE PTR [edx]
  42423b:	jns    0x424253
  42423d:	fs push ebp
  42423f:	xor    eax,0xedfd297c
  424244:	(bad)  
  424245:	mov    ebx,0x68329f5f
  42424a:	jae    0x4241cf
  42424c:	int    0x54
  42424e:	in     eax,dx
  42424f:	push   esp
  424250:	mov    bh,0x76
  424252:	push   esp
  424253:	lds    esi,FWORD PTR [esi]
  424255:	div    BYTE PTR [ebx]
  424257:	cdq    
  424258:	lods   al,BYTE PTR ds:[esi]
  424259:	push   edx
  42425a:	enter  0xbb56,0x7b
  42425e:	fadd   DWORD PTR [edx+0xa]
  424261:	xchg   DWORD PTR [eax+0xe],esp
  424264:	mov    ch,0xe5
  424266:	in     al,0x69
  424268:	div    DWORD PTR [ebx+0x15b993cf]
  42426e:	fdivr  DWORD PTR [eax+ebx*2]
  424271:	jmp    0x94a2:0xaeadee24
  424278:	jo     0x42424f
  42427a:	das    
  42427b:	outs   dx,DWORD PTR ds:[esi]
  42427c:	dec    edx
  42427d:	ins    DWORD PTR es:[edi],dx
  42427e:	cmp    dh,BYTE PTR [esi]
  424280:	out    0x9f,eax
  424282:	adc    DWORD PTR [edi],esp
  424284:	(bad)  
  424286:	out    dx,eax
  424287:	xor    BYTE PTR [ebx+0x3b],dl
  42428a:	pushf  
  42428b:	push   ebp
  42428c:	scas   al,BYTE PTR es:[edi]
  42428d:	inc    esp
  42428e:	cmp    al,0x89
  424290:	mov    WORD PTR [ebp+esi*1+0x3ef3febf],fs
  424297:	shl    DWORD PTR [ebp-0x64be9b65],cl
  42429d:	mov    ah,0xb8
  42429f:	mov    ecx,0x94335d33
  4242a4:	and    eax,0x2251275e
  4242a9:	push   eax
  4242aa:	mov    bl,0x34
  4242ac:	pop    ecx
  4242ad:	mov    al,bl
  4242af:	lods   eax,DWORD PTR ds:[esi]
  4242b0:	popf   
  4242b1:	int3   
  4242b2:	gs es inc eax
  4242b5:	call   0x161b:0xa787b74e
  4242bc:	mov    ebp,0x2f93e881
  4242c1:	jmp    FWORD PTR [eax-0xf]
  4242c4:	sub    al,0x3b
  4242c6:	dec    esp
  4242c7:	xor    ah,BYTE PTR [edx+ecx*2]
  4242ca:	ins    DWORD PTR es:[edi],dx
  4242cb:	mov    bh,bl
  4242cd:	inc    ecx
  4242ce:	bound  ecx,QWORD PTR [esi+0x648890f]
  4242d4:	mov    ah,0xbf
  4242d6:	repz jp 0x4242c8
  4242d9:	mov    ds:0xd8c43b0,eax
  4242de:	cli    
  4242df:	mov    ebp,0xd3afa74c
  4242e4:	stos   DWORD PTR es:[edi],eax
  4242e5:	cmp    BYTE PTR [esi+0x1a],bl
  4242e8:	xor    cl,BYTE PTR [ebx+0x16fbb220]
  4242ee:	mov    ds:0x4c1c5e7e,al
  4242f3:	dec    ecx
  4242f4:	sti    
  4242f5:	pop    esp
  4242f6:	or     ebp,DWORD PTR [edi+0x6efcab92]
  4242fc:	loop   0x424335
  4242fe:	cli    
  4242ff:	lods   al,BYTE PTR ds:[esi]
  424300:	sbb    esp,DWORD PTR [eax]
  424302:	jae    0x42429b
  424304:	mov    BYTE PTR [esi],bl
  424306:	inc    edx
  424307:	push   eax
  424308:	dec    esp
  424309:	mov    DWORD PTR [ebp+0x3e375b9f],eax
  42430f:	push   ss
  424310:	mov    ebp,0x3183c8c0
  424315:	dec    ecx
  424316:	push   0x3ca4e645
  42431b:	mov    esi,0x211be970
  424320:	pop    ebp
  424321:	clc    
  424322:	lds    edi,FWORD PTR ds:0x72eddded
  424328:	mov    ebp,0xa73b620a
  42432d:	mov    esp,0xec79c2b2
  424332:	add    bl,ch
  424334:	dec    edx
  424335:	rcl    esp,cl
  424337:	out    0x3c,al
  424339:	loopne 0x4243b8
  42433b:	push   ds
  42433c:	int3   
  42433d:	push   edx
  42433e:	mov    ebx,0xbe000d31
  424343:	jmp    0xfbbf:0xff74ef74
  42434a:	dec    ecx
  42434b:	mov    bl,0x98
  42434d:	xor    ah,BYTE PTR [ecx+0x8c676c4]
  424353:	mov    bh,0x1
  424355:	add    BYTE PTR [edi],ah
  424357:	add    eax,DWORD PTR [eax]
  424359:	add    BYTE PTR [edx-0x62],bl
  42435c:	out    0x59,al
  42435e:	(bad)  
  424360:	int3   
  424361:	adc    ebp,DWORD PTR [esi-0xb167864]
  424367:	cmp    DWORD PTR [edx-0x429fb940],ecx
  42436d:	bnd jp 0x42431e
  424370:	lahf   
  424371:	mov    eax,esp
  424373:	iret   
  424374:	xchg   esi,eax
  424375:	push   esi
  424376:	or     dl,BYTE PTR [ecx+ecx*2]
  424379:	psrlq  mm6,QWORD PTR [esp+esi*4]
  42437d:	or     BYTE PTR [edx],cl
  42437f:	cdq    
  424380:	es cwde 
  424382:	jb     0x4243d4
  424384:	push   cs
  424385:	into   
  424386:	add    eax,DWORD PTR [eax]
  424388:	mov    ebp,0x956ee71a
  42438d:	and    eax,0xd0800b9a
  424392:	xor    BYTE PTR [ebp+0x78771af3],0xd0
  424399:	fadd   DWORD PTR [ecx+0x11f0afbc]
  42439f:	mov    edi,0xa6d10276
  4243a4:	jo     0x424337
  4243a6:	test   DWORD PTR ds:0xe7428af1,0xa0c77c1e
  4243b0:	fstp   QWORD PTR [eax-0x32258490]
  4243b6:	(bad)  [edi]
  4243b8:	ins    DWORD PTR es:[edi],dx
  4243b9:	mov    al,0x25
  4243bb:	jno    0x4243fa
  4243bd:	int3   
  4243be:	inc    esi
  4243bf:	and    dl,ah
  4243c1:	mov    dl,0x86
  4243c3:	ret    0x45a
  4243c6:	jg     0x424389
  4243c8:	mov    esi,0x44d62b04
  4243cd:	or     al,cl
  4243cf:	out    dx,al
  4243d0:	lds    esi,FWORD PTR [edx]
  4243d2:	mov    dl,0x2a
  4243d4:	and    eax,0x6d17a430
  4243d9:	xlat   BYTE PTR ds:[ebx]
  4243da:	cli    
  4243db:	ins    BYTE PTR es:[edi],dx
  4243dc:	xchg   esi,eax
  4243dd:	jne    0x4243c0
  4243df:	or     BYTE PTR [edx],0x19
  4243e2:	cmc    
  4243e3:	rcr    BYTE PTR [edx],cl
  4243e5:	mov    ebx,0xe020a6e9
  4243ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4243eb:	adc    al,0x94
  4243ed:	(bad)  
  4243ee:	clc    
  4243ef:	out    0x27,al
  4243f1:	js     0x42445b
  4243f3:	dec    edx
  4243f4:	push   edx
  4243f5:	sbb    edx,esi
  4243f7:	out    dx,al
  4243f8:	in     al,0x66
  4243fa:	fs xchg edi,eax
  4243fc:	cmp    al,0xe0
  4243fe:	sub    DWORD PTR [esi],0xa96fd697
  424404:	xor    edi,ecx
  424406:	mov    ecx,0x3f79be53
  42440b:	inc    edi
  42440c:	or     al,0xa7
  42440e:	ins    BYTE PTR es:[edi],dx
  42440f:	push   eax
  424410:	stos   DWORD PTR es:[edi],eax
  424411:	fnstenv [esi+ebx*2-0x12d74fc6]
  424418:	call   0xebd7:0x6a4c3dff
  42441f:	add    edi,DWORD PTR [ecx]
  424421:	mov    ecx,0xb0963641
  424426:	out    0xfe,eax
  424428:	sub    eax,0xed4aa151
  42442d:	fsubr  DWORD PTR [edi-0x1798ba55]
  424433:	div    BYTE PTR [eax-0x41b417c3]
  424439:	lock adc DWORD PTR [ebp-0x5a3f23cd],ecx
  424440:	sub    BYTE PTR [ebx-0x54],0xa2
  424444:	inc    ebp
  424445:	cmp    BYTE PTR [eax-0x36e04ea8],cl
  42444b:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42444d:	cld    
  42444e:	ja     0x4243e0
  424450:	sbb    esi,DWORD PTR [ecx]
  424452:	inc    ebp
  424453:	fistp  DWORD PTR [ebx+0x47a25562]
  424459:	and    BYTE PTR [edx+0x1d],ah
  42445c:	pusha  
  42445d:	ins    BYTE PTR es:[edi],dx
  42445e:	mov    dh,BYTE PTR [esp+edi*8-0x52]
  424462:	hlt    
  424463:	push   ecx
  424464:	cmp    ah,dl
  424466:	and    BYTE PTR [edx+0x11],al
  424469:	mov    al,BYTE PTR [edx-0x60f208c8]
  42446f:	test   DWORD PTR [edi],edx
  424471:	mov    dl,0x2b
  424473:	(bad)  [ecx-0x5f]
  424476:	inc    ebx
  424477:	jmp    0x4244be
  424479:	imul   ebp,DWORD PTR [eax-0x40],0xffffff91
  42447d:	or     eax,0x851bfb91
  424482:	ror    DWORD PTR [ecx],0x63
  424485:	or     ebx,DWORD PTR [ecx+eiz*8+0x1c]
  424489:	(bad)  
  42448b:	xor    eax,DWORD PTR [ebp-0x4df556]
  424491:	sub    al,0xe9
  424493:	pop    edx
  424494:	xor    ah,al
  424496:	or     eax,0xbedd7b48
  42449b:	dec    eax
  42449c:	and    ebx,esp
  42449e:	push   0x84ec2ded
  4244a3:	les    edi,FWORD PTR [esi+esi*2]
  4244a6:	push   ebx
  4244a7:	sti    
  4244a8:	rol    BYTE PTR [edx+edx*2+0x4],0xeb
  4244ad:	sti    
  4244ae:	sahf   
  4244af:	call   0xa256527a
  4244b4:	(bad)  
  4244b5:	or     al,0xd
  4244b7:	and    al,bl
  4244b9:	mov    BYTE PTR [edx+0x7a],ah
  4244bc:	jle    0x4244a7
  4244be:	pushf  
  4244bf:	or     edi,ebp
  4244c1:	push   cs
  4244c2:	mul    cl
  4244c4:	in     al,dx
  4244c5:	or     BYTE PTR [ebx+0x6f],ah
  4244c8:	inc    eax
  4244c9:	fimul  WORD PTR [edi+ebx*2]
  4244cc:	mov    ah,0x7a
  4244ce:	adc    eax,0x43916e02
  4244d3:	les    edi,FWORD PTR [esi-0x5]
  4244d6:	in     al,dx
  4244d7:	jp     0x424537
  4244d9:	mov    ecx,0x2e778e79
  4244de:	sbb    al,0x6d
  4244e0:	sbb    eax,0x54971ebc
  4244e5:	mov    edx,0x1e840760
  4244ea:	or     DWORD PTR [ebx],eax
  4244ec:	scas   eax,DWORD PTR es:[edi]
  4244ed:	call   0xc801:0x4a6484bc
  4244f4:	je     0x42451f
  4244f6:	pusha  
  4244f7:	cwde   
  4244f8:	sbb    eax,0xa9cf448e
  4244fd:	popa   
  4244fe:	or     al,0xaf
  424500:	ins    DWORD PTR es:[edi],dx
  424501:	sub    eax,0x2d859f33
  424506:	dec    esi
  424507:	xor    edi,DWORD PTR [eax-0x29319c7d]
  42450d:	es ds push ss
  424510:	das    
  424511:	aad    0xc0
  424513:	nop
  424514:	mov    ebp,0x14edd1ef
  424519:	cmp    eax,0xd7bb4348
  42451e:	aam    0xcb
  424520:	les    esp,FWORD PTR [esi-0x20]
  424523:	pop    es
  424524:	cdq    
  424525:	sbb    esi,esp
  424527:	adc    al,BYTE PTR [eax-0x1e886f21]
  42452d:	mov    dh,0xe1
  42452f:	std    
  424530:	(bad)  
  424531:	dec    ecx
  424532:	pop    esi
  424533:	fadd   QWORD PTR [eax+0x3f4dc7f9]
  424539:	or     BYTE PTR [ebx],0x57
  42453c:	dec    edx
  42453d:	mov    ecx,0x1c453e77
  424542:	(bad)  
  424543:	call   0x93ae:0xd6ae49c8
  42454a:	bound  edi,QWORD PTR [esi+0x38]
  42454d:	(bad)  
  42454e:	jmp    0x4244d9
  424550:	aam    0x3
  424552:	das    
  424553:	sub    esp,eax
  424555:	enter  0x33cc,0xda
  424559:	test   DWORD PTR [esi-0x25b201aa],ebp
  42455f:	fsubr  DWORD PTR [edx+0x31e44745]
  424565:	mov    ecx,ds
  424567:	sub    dl,BYTE PTR [ebp-0x76d9e591]
  42456d:	adc    DWORD PTR [edi+0x7b12a9c],edx
  424573:	stc    
  424574:	js     0x424560
  424576:	or     eax,0x31ee8afe
  42457b:	xchg   esi,eax
  42457c:	fdiv   st(1),st
  42457e:	and    eax,0x60a89994
  424583:	or     BYTE PTR [ebx+edi*4],0x97
  424587:	fnstsw WORD PTR fs:[eax-0x65cec926]
  42458e:	and    eax,0xa7631675
  424593:	shl    BYTE PTR [eax+0x2ef0e3c8],1
  424599:	push   edx
  42459a:	call   0x8dcd:0xe92a85cc
  4245a1:	mov    al,ds:0xe1889400
  4245a6:	stos   BYTE PTR es:[edi],al
  4245a7:	jg     0x4245d3
  4245a9:	or     eax,0x75e1f81b
  4245ae:	cdq    
  4245af:	xlat   BYTE PTR ds:[ebx]
  4245b0:	or     eax,0x489407de
  4245b5:	ss cmc 
  4245b7:	inc    eax
  4245b8:	inc    edx
  4245b9:	outs   dx,DWORD PTR ds:[esi]
  4245ba:	mov    WORD PTR [edi],fs
  4245bc:	inc    esi
  4245bd:	aas    
  4245be:	iret   
  4245bf:	out    dx,eax
  4245c0:	jae    0x42455b
  4245c2:	inc    esp
  4245c3:	mov    dl,0xef
  4245c5:	pop    ds
  4245c6:	out    dx,eax
  4245c7:	xor    al,0x58
  4245c9:	mov    edx,0x3ea76d04
  4245ce:	lods   eax,DWORD PTR ds:[esi]
  4245cf:	dec    ebp
  4245d0:	pop    ebx
  4245d1:	jae    0x4245df
  4245d3:	fld    QWORD PTR [eax-0x62c4c6b4]
  4245d9:	cmp    ch,bl
  4245db:	or     eax,0x180a02ba
  4245e0:	xlat   BYTE PTR ds:[ebx]
  4245e1:	test   eax,0xe4d7aced
  4245e6:	add    al,0x92
  4245e8:	mov    al,ds:0xb12d9712
  4245ed:	pop    ebp
  4245ee:	scas   al,BYTE PTR es:[edi]
  4245ef:	xchg   edx,eax
  4245f0:	int3   
  4245f1:	popa   
  4245f2:	or     dh,0xce
  4245f5:	ret    0xdf2e
  4245f8:	and    bl,BYTE PTR [edx]
  4245fa:	jbe    0x424609
  4245fc:	adc    DWORD PTR [ecx],ecx
  4245fe:	retf   
  4245ff:	xchg   esp,eax
  424600:	and    al,0xe0
  424602:	mov    esp,0x82dac5bd
  424607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424608:	sub    edi,DWORD PTR [edi+0x1d]
  42460b:	retf   0x67b8
  42460e:	inc    ecx
  42460f:	xchg   edi,eax
  424610:	imul   eax,DWORD PTR [edi+0x78],0xffffffb4
  424614:	test   eax,0xf3600de5
  42461a:	aaa    
  42461b:	fwait
  42461c:	je     0x42461e
  42461e:	xchg   esp,eax
  42461f:	(bad)  
  424620:	and    BYTE PTR [eax+ecx*1-0x2d],ch
  424624:	div    BYTE PTR [ebp+0x8162a41]
  42462a:	cmp    edi,eax
  42462c:	aam    0x77
  42462e:	aas    
  42462f:	cwde   
  424630:	jnp    0x424620
  424632:	push   esp
  424633:	ror    DWORD PTR [edx],1
  424635:	xchg   esi,eax
  424636:	sub    bl,BYTE PTR [esi]
  424638:	fist   DWORD PTR [esi+0x1f813600]
  42463e:	clc    
  42463f:	xchg   esi,eax
  424640:	add    BYTE PTR [ecx+ebx*2+0x3e],ah
  424644:	xor    BYTE PTR [eax+edx*4],0x55
  424648:	mov    dl,0x70
  42464a:	push   0x52
  42464c:	pop    ebp
  42464d:	pop    edi
  42464e:	int3   
  42464f:	mov    ah,0x4c
  424651:	cmp    edi,DWORD PTR [eax+eiz*4]
  424654:	hlt    
  424655:	xchg   ecx,eax
  424656:	mov    al,BYTE PTR ds:0x918e234f
  42465c:	pushf  
  42465d:	repnz out dx,eax
  42465f:	popf   
  424660:	in     al,dx
  424661:	sub    bh,BYTE PTR [ecx]
  424663:	xor    DWORD PTR cs:[ecx-0x4703d489],esi
  42466a:	dec    edx
  42466b:	jae    0x4246ab
  42466d:	imul   ecx,DWORD PTR ds:0x6acb5f4a,0xef701bfd
  424677:	lock jmp 0x4245fd
  42467a:	pop    eax
  42467b:	mov    dh,BYTE PTR ss:[edi]
  42467e:	ret    
  42467f:	sub    eax,0x454b00cc
  424684:	mov    edx,0x5fffbeee
  424689:	in     eax,0x54
  42468b:	stos   BYTE PTR es:[edi],al
  42468c:	clc    
  42468d:	adc    DWORD PTR [edx+eiz*4],edx
  424690:	jp     0x424704
  424692:	das    
  424693:	mov    edx,0x3270001
  424698:	add    BYTE PTR [eax],al
  42469a:	into   
  42469b:	adc    ah,BYTE PTR gs:[ebp+0x49]
  42469f:	dec    eax
  4246a0:	sbb    al,0x8b
  4246a2:	data16 sbb ah,dl
  4246a5:	out    0xc7,al
  4246a7:	sub    DWORD PTR [ecx+0x89c4565],edi
  4246ad:	inc    eax
  4246ae:	add    al,0xd9
  4246b0:	(bad)  
  4246b2:	fs call 0x23a3af49
  4246b8:	dec    edx
  4246b9:	pop    ebp
  4246ba:	(bad)  
  4246bb:	lds    ebx,FWORD PTR [bp+di-0x4ec5]
  4246c0:	div    bh
  4246c2:	shl    DWORD PTR [edx-0x270e101],0x24
  4246c9:	jno    0x424689
  4246cb:	into   
  4246cc:	mov    DWORD PTR [ebx],ebp
  4246ce:	sbb    ch,ch
  4246d0:	test   DWORD PTR [ebx],ebp
  4246d2:	js     0x5d9d2ef4
  4246d8:	(bad)  
  4246d9:	mov    edi,0xbbd600ae
  4246de:	jns    0x4246f4
  4246e0:	dec    eax
  4246e1:	shl    DWORD PTR fs:[ecx+0x2b56e206],cl
  4246e8:	je     0x4246b5
  4246ea:	jnp    0x42466d
  4246ec:	outs   dx,BYTE PTR ds:[esi]
  4246ed:	jg     0x4246e8
  4246ef:	mov    esi,0xf4a3c413
  4246f4:	ja     0x4246d4
  4246f6:	dec    eax
  4246f7:	cmp    DWORD PTR [esi],ebp
  4246f9:	scas   eax,DWORD PTR es:[edi]
  4246fa:	or     BYTE PTR [ebp+0x79f9d2d0],0x2c
  424701:	xchg   ebp,eax
  424702:	out    dx,al
  424703:	hlt    
  424704:	pop    ebx
  424705:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424706:	push   es
  424707:	daa    
  424708:	cmp    ch,BYTE PTR [ebx+0x54]
  42470b:	out    dx,al
  42470c:	and    bl,BYTE PTR [ebp-0x6faa514d]
  424712:	aaa    
  424713:	mov    bh,0xf2
  424715:	int    0xe8
  424717:	add    al,0xb3
  424719:	adc    ecx,0xffffffe2
  42471c:	cwde   
  42471d:	loop   0x4246a6
  42471f:	das    
  424720:	(bad)  
  424721:	mov    edi,cs
  424723:	lock pop edi
  424725:	ror    DWORD PTR ds:0xcb702583,cl
  42472b:	aam    0x20
  42472d:	test   BYTE PTR [ebx+0x512377ac],al
  424733:	xor    dh,BYTE PTR [eax]
  424735:	sahf   
  424736:	(bad)  
  424737:	call   0x1218:0xe5c8431
  42473e:	jb     0x424751
  424740:	add    al,0x8d
  424742:	dec    ebp
  424743:	leave  
  424744:	sub    al,0x65
  424746:	pop    esp
  424747:	jmp    0xc3176965
  42474c:	lea    esi,[edx-0x79b3a6ed]
  424752:	add    DWORD PTR [edi+0x476bde5],edx
  424758:	jne    0x424772
  42475a:	pop    ecx
  42475b:	jns    0x4247d9
  42475d:	cmp    DWORD PTR [edi+0x1a0bebbc],edi
  424763:	cli    
  424764:	mov    eax,0x97a5f859
  424769:	(bad)  
  42476a:	or     dl,BYTE PTR [ebx+0x6edd19e9]
  424770:	frstor [esi]
  424772:	daa    
  424773:	mov    esp,0xb413777b
  424778:	sti    
  424779:	sub    DWORD PTR [edx-0x4acf9357],0xd39a0212
  424783:	push   ebp
  424784:	cmp    ecx,DWORD PTR [esi-0x15241d87]
  42478a:	jge    0x424776
  42478c:	push   es
  42478d:	jno    0x424776
  42478f:	ret    
  424790:	fs aaa 
  424792:	ins    DWORD PTR es:[di],dx
  424794:	pop    es
  424795:	xchg   esp,eax
  424796:	pop    esi
  424797:	fsubr  DWORD PTR [ebx]
  424799:	dec    edx
  42479a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42479b:	adc    eax,ebp
  42479d:	jns    0x4247ef
  42479f:	jmp    esi
  4247a1:	fiadd  WORD PTR [esi-0x5ec2fdc1]
  4247a7:	sub    BYTE PTR ds:0x9469a6dd,al
  4247ad:	inc    ecx
  4247ae:	xchg   ebx,eax
  4247af:	push   ds
  4247b0:	mov    bl,0x0
  4247b2:	retf   0x3b16
  4247b5:	inc    esp
  4247b6:	cdq    
  4247b7:	(bad)  
  4247b9:	push   0x4dd4ef0e
  4247be:	aad    0xc9
  4247c0:	stc    
  4247c1:	adc    DWORD PTR [ebx-0x438546a3],eax
  4247c7:	neg    BYTE PTR ds:0x4cabe870
  4247cd:	xchg   ebx,eax
  4247ce:	pop    esp
  4247cf:	cli    
  4247d0:	cmp    ebx,DWORD PTR ds:0x6aa5c75
  4247d6:	in     al,dx
  4247d7:	imul   ebp,DWORD PTR es:[edi-0x41],0xffffffeb
  4247dc:	mov    esi,0x533cc369
  4247e1:	stos   BYTE PTR es:[edi],al
  4247e2:	dec    esp
  4247e3:	data16 jge 0x424853
  4247e6:	nop
  4247e7:	mov    ?,WORD PTR [ebx+0x41]
  4247ea:	mov    eax,ds:0x7370d91c
  4247ef:	inc    ebp
  4247f0:	jle    0x42483e
  4247f2:	adc    DWORD PTR [edi],ebp
  4247f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247f5:	adc    al,0x39
  4247f7:	xor    DWORD PTR [eax],ebp
  4247f9:	in     al,0x7
  4247fb:	daa    
  4247fc:	lahf   
  4247fd:	outs   dx,BYTE PTR ds:[esi]
  4247fe:	hlt    
  4247ff:	enter  0x4b93,0x55
  424803:	or     al,0x3f
  424805:	and    BYTE PTR [esi+0x25],0xd3
  424809:	loopne 0x42485e
  42480b:	or     DWORD PTR [ebx+0x6616985f],eax
  424811:	ret    0xabc5
  424814:	cmp    al,0xab
  424816:	xchg   edi,eax
  424817:	mov    al,ds:0xf391e8ab
  42481c:	loopne 0x42483f
  42481e:	inc    edx
  42481f:	push   ds
  424820:	data16 add BYTE PTR [edx-0x3b],bh
  424824:	jnp    0x4247f9
  424826:	stc    
  424827:	loop   0x424840
  424829:	test   al,0x8f
  42482b:	dec    ecx
  42482c:	fdiv   QWORD PTR [esp+edx*8-0x269db90a]
  424833:	fwait
  424834:	std    
  424835:	xor    DWORD PTR [ecx-0x55],0x61527d5b
  42483c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42483d:	cmp    al,0x33
  42483f:	jns    0x4247db
  424841:	test   DWORD PTR [esi],0x6d436ed1
  424847:	mov    BYTE PTR [esi+0x7af3062b],bl
  42484d:	add    bl,dh
  42484f:	test   eax,0x434321c5
  424854:	inc    edx
  424855:	push   cs
  424856:	rol    bh,0xa9
  424859:	sbb    ecx,0x47
  42485c:	pop    ss
  42485d:	fs (bad) 
  42485f:	fnstcw WORD PTR [ecx+esi*8+0x64]
  424863:	push   0x31d9e6b9
  424868:	dec    edx
  424869:	xor    dh,bh
  42486b:	cmp    BYTE PTR [edx-0xc],bl
  42486e:	je     0x424892
  424870:	push   ss
  424871:	and    BYTE PTR [ecx+ecx*4],0x90
  424875:	aaa    
  424876:	jmp    0x4248b8
  424878:	(bad)  
  424879:	stc    
  42487a:	pop    ebp
  42487b:	nop
  42487c:	xor    al,0x3f
  42487e:	stc    
  42487f:	mov    ds:0x25723bea,al
  424884:	or     BYTE PTR [ebp+0x10c15171],dh
  42488a:	xchg   esi,eax
  42488b:	imul   edx,ecx,0x636a7e95
  424891:	int    0x7f
  424893:	jl     0x424842
  424895:	xor    eax,0xc3170473
  42489a:	mov    WORD PTR [ebx+0x65],ss
  42489d:	mov    ah,0x1f
  42489f:	je     0x4248e4
  4248a1:	and    eax,0x83603812
  4248a6:	stc    
  4248a7:	add    DWORD PTR [edi-0x38e66089],0xffffff81
  4248ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248af:	pop    ebp
  4248b0:	stos   DWORD PTR es:[edi],eax
  4248b1:	add    al,0xd8
  4248b3:	not    BYTE PTR [ebx-0x14ba5361]
  4248b9:	in     al,dx
  4248ba:	xchg   esi,eax
  4248bb:	iret   
  4248bc:	sub    ebp,DWORD PTR [ebx]
  4248be:	loopne 0x4248af
  4248c0:	clc    
  4248c1:	iret   
  4248c2:	les    ebx,FWORD PTR [edi+0x3d31a9f8]
  4248c8:	push   0xffffffda
  4248ca:	and    DWORD PTR [ebp+0x18],esp
  4248cd:	ror    ecx,1
  4248cf:	pop    es
  4248d0:	adc    BYTE PTR [ecx+0x41b52243],0x5b
  4248d7:	std    
  4248d8:	data16 cli 
  4248da:	dec    esp
  4248db:	cmp    esp,DWORD PTR [ebp+esi*4-0x34]
  4248df:	fsubr  DWORD PTR [edi+edi*1-0x435b786d]
  4248e6:	jb     0x42493b
  4248e8:	imul   esp,DWORD PTR [edi-0x39],0xffffff9b
  4248ec:	jnp    0x4248b6
  4248ee:	jl     0x424915
  4248f0:	cdq    
  4248f1:	(bad)  
  4248f2:	xchg   ecx,eax
  4248f3:	sti    
  4248f4:	mov    bh,0xfc
  4248f6:	mov    esi,0x87d333b4
  4248fb:	dec    esp
  4248fc:	paddq  mm0,QWORD PTR gs:0x7cf1d90c
  424904:	(bad)  
  424906:	int3   
  424907:	repz push eax
  424909:	pusha  
  42490a:	xchg   DWORD PTR [ecx+0x17fed8d9],eax
  424910:	add    ch,BYTE PTR [edx-0xc]
  424913:	fs xchg esp,eax
  424915:	aaa    
  424916:	je     0x4248f5
  424918:	pop    edi
  424919:	mov    edi,0x237276
  42491e:	push   edx
  42491f:	sub    eax,0x2a429b8a
  424924:	or     ebx,DWORD PTR cs:[ecx-0x64ae79fb]
  42492b:	bound  edx,QWORD PTR [ebx-0x5ab1a856]
  424931:	in     al,dx
  424932:	xchg   bh,ah
  424934:	add    al,0x88
  424936:	inc    edi
  424937:	mov    DWORD PTR [ecx],ebx
  424939:	aas    
  42493a:	inc    edx
  42493b:	xchg   edi,eax
  42493c:	mov    cl,0x9c
  42493e:	adc    DWORD PTR [ebp+0x74],ecx
  424941:	adc    bl,BYTE PTR [edx+0x386b9b54]
  424947:	pusha  
  424948:	mov    ecx,DWORD PTR [edx]
  42494a:	jo     0x4248d9
  42494c:	test   BYTE PTR [esp+edi*2-0x3153d099],ch
  424953:	sahf   
  424954:	dec    edi
  424955:	mov    BYTE PTR [eax],0xa2
  424958:	xchg   BYTE PTR [ecx-0x4bfd231e],ch
  42495e:	repz xor DWORD PTR [edx+0xeaa6179],ecx
  424965:	inc    esi
  424966:	daa    
  424967:	mov    ebp,0x54f715fe
  42496c:	shl    DWORD PTR [ecx-0xf790c],cl
  424972:	lock xlat BYTE PTR ds:[ebx]
  424974:	data16 stos BYTE PTR es:[edi],al
  424976:	mov    dl,0x60
  424978:	repnz out 0xa5,eax
  42497b:	dec    eax
  42497c:	out    0xb0,al
  42497e:	cmc    
  42497f:	mov    ebp,es
  424981:	(bad)  
  424982:	das    
  424983:	cmc    
  424984:	rcr    DWORD PTR [edx+0x1a9492ed],0xa4
  42498b:	test   edi,esi
  42498d:	xchg   ecx,ecx
  42498f:	stc    
  424990:	mov    dl,BYTE PTR [eax]
  424992:	add    BYTE PTR [ebx-0x26],0x7b
  424996:	mov    ecx,0x3b42f7c
  42499b:	or     al,0xb8
  42499e:	push   0x23
  4249a0:	cmp    dh,BYTE PTR [edx-0x79]
  4249a3:	mov    esp,0xd83927f1
  4249a8:	mov    eax,ds:0xdc8f0d20
  4249ad:	shr    ebx,cl
  4249af:	cmp    BYTE PTR [esi-0x3d010ff2],0x65
  4249b6:	test   DWORD PTR [eax+0x44],ebx
  4249b9:	inc    ebp
  4249ba:	mov    al,0xfc
  4249bc:	pop    eax
  4249bd:	int    0xac
  4249bf:	jae    0x424a02
  4249c1:	add    BYTE PTR [edx-0x5b61f90],ch
  4249c7:	fldcw  WORD PTR [ebx-0x35bf70d]
  4249cd:	loopne 0x4249fb
  4249cf:	jecxz  0x4249b2
  4249d1:	call   0x44072c
  4249d6:	daa    
  4249d7:	add    eax,DWORD PTR [eax]
  4249d9:	add    BYTE PTR [ebx-0x28],bh
  4249dc:	pop    edx
  4249dd:	lods   eax,DWORD PTR ds:[esi]
  4249de:	xchg   DWORD PTR [edi],esi
  4249e0:	sbb    cl,BYTE PTR [edi]
  4249e2:	lods   eax,DWORD PTR ds:[esi]
  4249e3:	cmp    al,0x8a
  4249e5:	je     0x4249ec
  4249e7:	mov    ds:0x564788c8,eax
  4249ec:	aad    0xbc
  4249ee:	gs sub al,0x17
  4249f1:	lea    eax,[esi+0x6b]
  4249f4:	adc    BYTE PTR [ebx+0x7a94a4ab],0xcd
  4249fb:	ins    DWORD PTR es:[edi],dx
  4249fc:	push   0x4549381d
  424a01:	ret    
  424a02:	in     al,0xaf
  424a04:	fnstenv [edx+esi*2]
  424a07:	mov    dl,0x19
  424a09:	(bad)  
  424a0b:	retf   
  424a0c:	jmp    0xd21236b8
  424a11:	shl    DWORD PTR [ebp+0x5a],cl
  424a14:	mov    ds:0xe11f767e,al
  424a19:	push   esi
  424a1a:	jnp    0x424a56
  424a1c:	mov    dl,0xc2
  424a1e:	jnp    0x424a15
  424a20:	adc    al,0x18
  424a22:	cli    
  424a23:	aam    0x4b
  424a25:	adc    edi,0xfffffffa
  424a28:	dec    ebx
  424a29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a2a:	sbb    dh,BYTE PTR [ecx-0x1c027d33]
  424a30:	das    
  424a31:	push   ds
  424a32:	ins    DWORD PTR es:[edi],dx
  424a33:	xor    eax,0x25267cf3
  424a38:	aaa    
  424a39:	xchg   esp,eax
  424a3a:	add    DWORD PTR [eax],esp
  424a3c:	mov    al,0xe7
  424a3e:	shr    BYTE PTR [eax+0x2fd546f1],0x94
  424a45:	xchg   ch,bh
  424a47:	shl    ebx,0x19
  424a4a:	mov    eax,0x562fa8c5
  424a4f:	mov    ch,0xb0
  424a51:	adc    eax,0xf5dbcf91
  424a56:	lahf   
  424a57:	outs   dx,DWORD PTR ds:[esi]
  424a58:	stos   BYTE PTR es:[edi],al
  424a59:	adc    eax,0x5e867a93
  424a5e:	push   esi
  424a5f:	or     eax,0x875c6433
  424a64:	(bad)  
  424a65:	cld    
  424a66:	sbb    al,0x50
  424a68:	retf   
  424a69:	sbb    al,0x49
  424a6b:	push   es
  424a6c:	push   esp
  424a6d:	lds    eax,FWORD PTR [ecx-0x5596b269]
  424a73:	adc    cl,BYTE PTR [edx+ecx*1+0x43331a4f]
  424a7a:	cmp    al,0xb3
  424a7c:	call   0x4ed7bafe
  424a81:	mov    ds:0xac0299a8,eax
  424a86:	dec    esi
  424a87:	cmp    al,0xf3
  424a89:	es pop es
  424a8b:	loope  0x424a71
  424a8d:	std    
  424a8e:	test   DWORD PTR [eax],edx
  424a90:	pop    esp
  424a91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a92:	call   0x19c65346
  424a97:	jae    0x424b16
  424a99:	adc    al,0xcc
  424a9b:	in     al,dx
  424a9c:	in     eax,0xe
  424a9e:	pop    ebx
  424a9f:	test   eax,0x6b04a47a
  424aa4:	stos   DWORD PTR es:[edi],eax
  424aa5:	iret   
  424aa6:	and    dl,BYTE PTR [ebp+0x6c71ee55]
  424aac:	adc    al,0xd7
  424aae:	mov    bl,0xe6
  424ab0:	sub    bl,BYTE PTR [eax-0x1a328b37]
  424ab6:	stos   DWORD PTR es:[edi],eax
  424ab7:	xchg   esp,eax
  424ab8:	add    al,0x70
  424aba:	daa    
  424abb:	adc    dh,BYTE PTR [edx]
  424abd:	dec    edx
  424abe:	sbb    DWORD PTR [ebx+0x38bd33a7],ecx
  424ac4:	int3   
  424ac5:	pop    ds
  424ac6:	stos   BYTE PTR es:[edi],al
  424ac7:	mov    ecx,0xc2a013ac
  424acc:	out    0x27,eax
  424ace:	or     esi,ecx
  424ad0:	outs   dx,BYTE PTR ds:[esi]
  424ad1:	pop    eax
  424ad2:	mov    ecx,0x2e164df4
  424ad7:	xchg   ecx,eax
  424ad8:	fdivrp st(6),st
  424ada:	adc    DWORD PTR [edi-0x25],esi
  424add:	out    0xc7,eax
  424adf:	nop
  424ae0:	mov    edi,DWORD PTR [ebp+eiz*2+0x223583be]
  424ae7:	xchg   esi,eax
  424ae8:	cmp    DWORD PTR [ebp-0x3ad55a48],ebx
  424aee:	loope  0x424b67
  424af0:	sbb    al,0x52
  424af2:	das    
  424af3:	xor    BYTE PTR [ecx],bh
  424af5:	std    
  424af6:	into   
  424af7:	mov    WORD PTR [edx+0x5f],ds
  424afa:	mov    bl,0x18
  424afc:	mov    eax,ds:0xf7d64f63
  424b01:	mov    BYTE PTR [esi+0x6bd1cf8b],dh
  424b07:	add    eax,0x6a25afce
  424b0c:	mov    DWORD PTR [edx+ecx*1+0xf],edi
  424b10:	cmp    edx,edx
  424b12:	add    eax,DWORD PTR [eax]
  424b14:	push   cs
  424b15:	pop    ds
  424b16:	ficomp DWORD PTR [edi-0x2c]
  424b19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b1a:	jg     0x424abb
  424b1c:	outs   dx,BYTE PTR ds:[esi]
  424b1d:	xchg   DWORD PTR [esi-0x5f876c1a],esi
  424b23:	push   cs
  424b24:	cdq    
  424b25:	and    cl,BYTE PTR [eax+ebp*8+0x1f]
  424b29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b2a:	add    dh,BYTE PTR [ebx-0x6a35b0e9]
  424b30:	ja     0x424aca
  424b32:	inc    esp
  424b33:	inc    esi
  424b34:	stos   BYTE PTR es:[edi],al
  424b35:	jge    0x424b99
  424b37:	data16 stos BYTE PTR es:[edi],al
  424b39:	fwait
  424b3a:	jo     0x424ba4
  424b3c:	mov    ds:0xe9b78a0c,al
  424b41:	fnstcw WORD PTR [ebp-0x492974da]
  424b47:	in     al,0x7
  424b49:	repz mul BYTE PTR [eax-0x96e6576]
  424b50:	(bad)  
  424b51:	in     al,0xea
  424b53:	push   es
  424b54:	rcr    BYTE PTR [edi+esi*8+0x3],1
  424b58:	pop    ds
  424b59:	adc    eax,0x5ca2b72a
  424b5e:	push   ecx
  424b5f:	cs stos BYTE PTR es:[edi],al
  424b61:	adc    BYTE PTR [ecx+0x2a],ah
  424b64:	sbb    DWORD PTR [edi],0x4f28193d
  424b6a:	idiv   DWORD PTR [esi+0x3b66bfef]
  424b70:	je     0x424b5c
  424b72:	bound  edi,QWORD PTR [edx+eiz*8-0x46db8680]
  424b79:	sbb    dl,BYTE PTR [ebx]
  424b7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b7c:	inc    eax
  424b7d:	stc    
  424b7e:	sbb    esp,DWORD PTR [esp+esi*1-0x73]
  424b82:	fstp   TBYTE PTR [ebp-0x25]
  424b85:	jo     0x424be1
  424b87:	jns    0x424bef
  424b89:	cmp    DWORD PTR [ebp+0x42],0xae50fc2
  424b90:	pop    esi
  424b91:	xor    BYTE PTR [edx],ch
  424b93:	fs xchg ebp,eax
  424b95:	or     eax,0x6e24ce49
  424b9a:	xchg   BYTE PTR [esi-0x65],dl
  424b9d:	mov    esp,0x9d988689
  424ba2:	sbb    BYTE PTR [eax],al
  424ba4:	cmp    dh,BYTE PTR [edx]
  424ba6:	out    dx,al
  424ba7:	ins    BYTE PTR es:[edi],dx
  424ba8:	sqrtps xmm7,XMMWORD PTR [esi+ebp*2+0xe]
  424bad:	shl    dh,0x97
  424bb0:	jno    0x424bbf
  424bb2:	stos   BYTE PTR es:[edi],al
  424bb3:	test   DWORD PTR [ebx],ecx
  424bb5:	lahf   
  424bb6:	bound  edi,QWORD PTR [edx]
  424bb8:	cmp    al,0x5a
  424bba:	fcom   st(3)
  424bbc:	and    ch,BYTE PTR [edi+0x23]
  424bbf:	call   0x153f:0x55db63d3
  424bc6:	fidiv  WORD PTR [esi+0x69f21473]
  424bcc:	mov    cl,BYTE PTR [edi+edi*2]
  424bcf:	xor    ch,BYTE PTR [eax]
  424bd1:	loop   0x424b99
  424bd3:	jmp    0x8d13:0xf26a3bb1
  424bda:	popf   
  424bdb:	in     al,0x34
  424bdd:	test   DWORD PTR [esi+ebp*8+0x21],ebp
  424be1:	mov    ds:0xc226b8fc,al
  424be6:	jbe    0x424c1b
  424be8:	or     DWORD PTR [ecx],eax
  424bea:	out    0x7,eax
  424bec:	sbb    BYTE PTR [ecx+0xcb35912],cl
  424bf2:	or     ecx,DWORD PTR [ecx-0x6]
  424bf5:	dec    edi
  424bf6:	(bad)  
  424bf8:	push   0xb5b69d6c
  424bfd:	cmp    eax,esp
  424bff:	aam    0x6a
  424c01:	jno    0x424b8f
  424c03:	mov    eax,0x76640996
  424c08:	jecxz  0x424bed
  424c0a:	jns    0x424c87
  424c0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c0d:	aas    
  424c0e:	sar    DWORD PTR [eax-0x76033a43],cl
  424c14:	mov    cl,0x99
  424c16:	call   0x7a18:0x16797f1
  424c1d:	fwait
  424c1e:	loope  0x424ba7
  424c20:	adc    DWORD PTR [eax],ecx
  424c22:	jmp    0xeefd65ee
  424c27:	sbb    eax,0x3e3dbe60
  424c2c:	jecxz  0x424bdb
  424c2e:	imul   DWORD PTR [esi+0x4]
  424c31:	imul   DWORD PTR [ebp+0x24]
  424c34:	popf   
  424c35:	mov    edx,0xfd3984e7
  424c3a:	mov    edi,0x430a697d
  424c3f:	loop   0x424c84
  424c41:	dec    edi
  424c42:	push   esi
  424c43:	out    dx,eax
  424c44:	and    BYTE PTR [esi],al
  424c46:	pop    es
  424c47:	mov    ds:0x3686e3eb,al
  424c4c:	jne    0x424c6c
  424c4e:	sub    DWORD PTR [edi-0x48aa005],edx
  424c54:	pop    es
  424c55:	mov    al,ds:0xcdf9fc57
  424c5a:	loopne 0x424c62
  424c5c:	mov    ebp,0x9047c270
  424c61:	imul   eax,DWORD PTR [esi-0x37170c4],0x2
  424c68:	jae    0x424bfb
  424c6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c6b:	outs   dx,BYTE PTR ds:[si]
  424c6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c6e:	jb     0x424c50
  424c70:	inc    esp
  424c71:	popf   
  424c72:	mov    edi,eax
  424c74:	test   BYTE PTR [edx-0x75ac0e4a],0x22
  424c7b:	sbb    BYTE PTR [ecx+0x241d0eac],al
  424c81:	adc    DWORD PTR [ecx],0x449f3048
  424c87:	outs   dx,BYTE PTR ds:[esi]
  424c88:	push   cs
  424c89:	fdiv   DWORD PTR [edi]
  424c8b:	sub    DWORD PTR [ecx+0x346ed628],ecx
  424c91:	jecxz  0x424cfd
  424c93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c94:	call   0xbd29:0xcb06a990
  424c9b:	push   es
  424c9c:	push   edi
  424c9d:	into   
  424c9e:	or     eax,0xcbcf28a3
  424ca3:	fs pop ebx
  424ca5:	(bad)  
  424ca6:	or     eax,0x8450b49b
  424cab:	jne    0x424c60
  424cad:	repz out dx,eax
  424caf:	dec    eax
  424cb0:	dec    edi
  424cb1:	jo     0x424cb8
  424cb3:	div    cl
  424cb5:	(bad)  
  424cb6:	aas    
  424cb7:	lea    ebp,[edx+ebx*1-0x50]
  424cbb:	scas   al,BYTE PTR es:[edi]
  424cbc:	jne    0x424d29
  424cbe:	sar    BYTE PTR [edi-0x7588c4a4],1
  424cc4:	hlt    
  424cc5:	dec    esp
  424cc6:	add    eax,0x42f1130f
  424ccb:	mov    dh,0xa1
  424ccd:	xchg   edx,eax
  424cce:	nop
  424ccf:	lock fcom QWORD PTR [ebx+0x54878296]
  424cd6:	(bad)  
  424cd7:	fisttp DWORD PTR ds:0x5c44b2b3
  424cdd:	dec    edi
  424cde:	scas   eax,DWORD PTR es:[edi]
  424cdf:	fidiv  DWORD PTR [edi+0x45]
  424ce2:	dec    BYTE PTR ds:0x46e79df4
  424ce8:	repnz xchg edx,eax
  424cea:	sub    cl,BYTE PTR [ecx-0x28795279]
  424cf0:	adc    DWORD PTR [ebx+0x3a3e057],ecx
  424cf6:	and    eax,ebx
  424cf8:	aas    
  424cf9:	mov    fs,edi
  424cfb:	jecxz  0x424d68
  424cfd:	in     al,0xef
  424cff:	pop    ebp
  424d00:	daa    
  424d01:	add    BYTE PTR [edx-0x79],cl
  424d04:	push   edx
  424d05:	dec    esp
  424d06:	(bad)  
  424d08:	pop    esi
  424d09:	xchg   eax,esp
  424d0b:	js     0x424c8e
  424d0d:	mov    ebx,0xdc194ad5
  424d12:	jge    0x424cd4
  424d14:	add    DWORD PTR [eax],eax
  424d16:	daa    
  424d17:	add    eax,DWORD PTR [eax]
  424d19:	add    BYTE PTR [ecx+ecx*2],ch
  424d1c:	outs   dx,BYTE PTR ds:[esi]
  424d1d:	test   eax,0xfad167b5
  424d22:	repz or ah,ah
  424d25:	adc    BYTE PTR [eax-0x531dda23],0x90
  424d2c:	sub    DWORD PTR [eax-0x54],0x13
  424d30:	jo     0x424d11
  424d32:	pop    ecx
  424d33:	mov    dl,0xd3
  424d35:	iret   
  424d36:	icebp  
  424d37:	ins    DWORD PTR es:[edi],dx
  424d38:	xlat   BYTE PTR ds:[ebx]
  424d39:	out    0x7b,al
  424d3b:	jbe    0x424d0e
  424d3d:	dec    ebp
  424d3e:	test   al,0xab
  424d40:	xchg   edi,eax
  424d41:	mov    ebp,0x9e94dbac
  424d46:	adc    edi,DWORD PTR [edi]
  424d48:	out    0xb0,al
  424d4a:	push   ss
  424d4b:	fwait
  424d4c:	jns    0x424d11
  424d4e:	jo     0x424d66
  424d50:	cmc    
  424d51:	(bad)  
  424d53:	xchg   ebx,eax
  424d54:	nop
  424d55:	pusha  
  424d56:	sub    BYTE PTR [eax],ah
  424d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d59:	out    dx,eax
  424d5a:	xchg   DWORD PTR [eax-0x8],ecx
  424d5d:	xchg   ecx,eax
  424d5e:	in     al,dx
  424d5f:	dec    ebp
  424d60:	(bad)  
  424d61:	add    al,0x82
  424d63:	dec    BYTE PTR ds:0xd0c2af77
  424d69:	jecxz  0x424d5a
  424d6b:	cmp    al,al
  424d6d:	sahf   
  424d6e:	loope  0x424d21
  424d70:	ja     0x424d6b
  424d72:	mov    eax,ds:0xb4372068
  424d77:	pop    esp
  424d78:	leave  
  424d79:	inc    edi
  424d7a:	sbb    al,bh
  424d7c:	jecxz  0x424dba
  424d7e:	outs   dx,DWORD PTR ds:[esi]
  424d7f:	pop    ebx
  424d80:	inc    eax
  424d81:	pop    esp
  424d82:	and    BYTE PTR [ebx+0x6c7edd4f],bh
  424d88:	mov    bl,0xa0
  424d8a:	mov    ah,0x70
  424d8c:	ficom  DWORD PTR [ebp-0x1de37465]
  424d92:	es mov ecx,0xdac1d6ec
  424d98:	mov    ss,WORD PTR [ebp+0x7da45f10]
  424d9e:	jl     0x424df9
  424da0:	dec    edi
  424da1:	cmp    eax,0xcda6a2aa
  424da6:	xchg   esp,eax
  424da7:	pop    esi
  424da8:	and    DWORD PTR [ecx],edx
  424daa:	push   0x49
  424dac:	daa    
  424dad:	jmp    0xc140:0xa57d234c
  424db4:	jg     0x424e34
  424db6:	jbe    0x424d87
  424db8:	arpl   WORD PTR [edx],ax
  424dba:	jmp    0x26f4:0x39eb7da0
  424dc1:	jmp    0x229ce5db
  424dc6:	mov    al,0x93
  424dc8:	mov    edi,0x7554a81c
  424dcd:	rcl    esp,1
  424dcf:	cmp    ecx,eax
  424dd1:	and    DWORD PTR [ebx+0x54f5896e],ebx
  424dd7:	xchg   DWORD PTR ds:0x8d30785c,esp
  424ddd:	fxch   st(6)
  424ddf:	inc    esi
  424de0:	rcl    DWORD PTR [esi],1
  424de2:	pop    esp
  424de3:	in     al,0xb0
  424de5:	sub    esp,DWORD PTR [edi-0x5dc6420b]
  424deb:	std    
  424dec:	adc    eax,0x15874cbf
  424df1:	push   es
  424df2:	xor    BYTE PTR ds:0xfd30e9c1,cl
  424df8:	test   BYTE PTR [ebp-0xf],0x68
  424dfc:	shr    BYTE PTR [eax+0x4597cefd],0xbb
  424e03:	mov    cs,esp
  424e05:	or     BYTE PTR [edx+eiz*1+0x309742a9],dh
  424e0c:	pop    esp
  424e0d:	cs sti 
  424e0f:	gs daa 
  424e11:	mov    esi,DWORD PTR [ebp+0x51]
  424e14:	shl    DWORD PTR [edi-0x1cd5bc94],1
  424e1a:	fmul   st(6),st
  424e1c:	pusha  
  424e1d:	sub    eax,0x6f8ec282
  424e22:	xchg   BYTE PTR [ebx+0x20d0ae96],cl
  424e28:	pop    esp
  424e29:	xlat   BYTE PTR ds:[ebx]
  424e2a:	xchg   esp,eax
  424e2b:	pusha  
  424e2c:	mov    bh,0x66
  424e2e:	xchg   BYTE PTR [edx-0x4f],cl
  424e31:	fsubr  DWORD PTR [ebp+0xa]
  424e34:	xchg   BYTE PTR [edi],bl
  424e36:	dec    ebx
  424e37:	mov    bh,0x9a
  424e39:	int    0xdd
  424e3b:	fcmove st,st(1)
  424e3d:	xchg   edi,eax
  424e3e:	mov    dl,0x12
  424e40:	mov    ecx,0x9ea863ff
  424e45:	inc    edx
  424e46:	repnz rcr DWORD PTR [edi],1
  424e49:	xchg   ecx,eax
  424e4a:	mov    ebx,0xaf59e123
  424e4f:	and    al,0x8d
  424e51:	push   cs
  424e52:	dec    eax
  424e53:	mov    ds:0x585528ee,al
  424e58:	retf   
  424e59:	dec    edx
  424e5a:	mov    al,BYTE PTR [edi+0x62]
  424e5d:	ret    
  424e5e:	adc    DWORD PTR [ebx+ecx*2],edx
  424e61:	xor    DWORD PTR [eax+eiz*4],ebp
  424e64:	out    0x46,eax
  424e66:	or     DWORD PTR [ebp+edx*8-0x298dd53c],ebx
  424e6d:	adc    edx,ecx
  424e6f:	lock lea edi,[ebx-0x2274cb4b]
  424e76:	cmp    eax,0x285b8259
  424e7b:	fcom   DWORD PTR [edi+0x7]
  424e7e:	cmc    
  424e7f:	mov    dl,0xf6
  424e81:	mov    ecx,0x15175ee1
  424e86:	jl     0x424f04
  424e88:	bound  esi,QWORD PTR ds:0xfcacadc2
  424e8e:	cmc    
  424e8f:	jp     0x424e6b
  424e91:	mov    ecx,0x144dca1d
  424e96:	inc    ebx
  424e97:	adc    DWORD PTR [edi+0x3d67b4ff],eax
  424e9d:	aaa    
  424e9e:	dec    esi
  424e9f:	ret    0xb83d
  424ea2:	sbb    al,0xe4
  424ea4:	stos   BYTE PTR es:[edi],al
  424ea5:	not    DWORD PTR [ebx-0x65]
  424ea8:	sbb    BYTE PTR [edi-0x701a50ef],dh
  424eae:	ja     0x424ef4
  424eb0:	rcl    dh,cl
  424eb2:	mov    WORD PTR [edx+0x75],?
  424eb5:	add    DWORD PTR [ecx-0x41],0xffffffb5
  424eb9:	push   ebx
  424eba:	push   ebp
  424ebb:	push   edi
  424ebc:	sub    al,0x62
  424ebe:	cmp    DWORD PTR [ecx-0x272687d2],ebp
  424ec4:	add    DWORD PTR [ebx],esp
  424ec6:	pop    ebx
  424ec7:	cmp    DWORD PTR [esi-0x2d],ebx
  424eca:	push   ss
  424ecb:	xchg   edi,eax
  424ecc:	xor    al,0x24
  424ece:	nop
  424ecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ed0:	push   ds
  424ed1:	test   DWORD PTR [ebx+edx*4-0x2d],ebp
  424ed5:	scas   al,BYTE PTR es:[edi]
  424ed6:	dec    edx
  424ed7:	sub    al,0xad
  424ed9:	test   al,0xb8
  424edb:	popf   
  424edc:	mov    edx,eax
  424ede:	mov    fs,WORD PTR [esi]
  424ee0:	lds    ebp,FWORD PTR [edx+0x6d]
  424ee3:	ret    0xf185
  424ee6:	aaa    
  424ee7:	daa    
  424ee8:	ins    DWORD PTR es:[edi],dx
  424ee9:	mov    bl,0x45
  424eeb:	sbb    esp,DWORD PTR [edx]
  424eed:	adc    eax,0x7a4799b6
  424ef2:	xchg   ecx,eax
  424ef3:	and    bl,BYTE PTR [edx+ebp*4]
  424ef6:	sbb    ebp,esi
  424ef8:	add    eax,0xa6741924
  424efd:	divps  xmm3,XMMWORD PTR [edi+0x36]
  424f01:	push   ebp
  424f02:	in     al,0xb4
  424f04:	sub    BYTE PTR [esi+0x32d324c4],ch
  424f0a:	and    ecx,edx
  424f0c:	jns    0x424f74
  424f0e:	popf   
  424f0f:	imul   ecx,DWORD PTR [ecx-0x663cb89a],0xffffffd9
  424f16:	gs adc bh,dh
  424f19:	mov    eax,0x27c72514
  424f1e:	retf   0x6dd8
  424f21:	lods   eax,DWORD PTR ds:[esi]
  424f22:	and    dh,ch
  424f24:	retf   
  424f25:	imul   edi,DWORD PTR [esi+0x13],0x28e45c67
  424f2c:	xlat   BYTE PTR ds:[ebx]
  424f2d:	inc    esi
  424f2e:	sub    BYTE PTR [ebp+0x62],ah
  424f31:	mov    al,ds:0x90aa7f03
  424f36:	adc    ebp,DWORD PTR [esi]
  424f38:	push   es
  424f39:	fsub   QWORD PTR [ebp-0x2c1fd144]
  424f3f:	push   ecx
  424f40:	data16 or al,0x70
  424f43:	xor    eax,0xeca619e1
  424f48:	lds    esp,FWORD PTR [esi+0x4a]
  424f4b:	and    BYTE PTR [esp+ebx*2+0x68],ch
  424f4f:	mov    BYTE PTR [ebx-0x56a4c53f],cl
  424f55:	nop
  424f56:	add    bh,BYTE PTR [edx+0x4f]
  424f59:	jecxz  0x424f90
  424f5b:	xor    al,0xee
  424f5d:	or     al,0xcd
  424f5f:	int3   
  424f60:	xchg   edx,eax
  424f61:	adc    eax,0x4c32686f
  424f66:	xor    DWORD PTR ds:0x788fc679,eax
  424f6c:	jnp    0x424f76
  424f6e:	xor    ebx,edx
  424f70:	jmp    0xd7a6:0xa284e3cc
  424f77:	mov    al,ds:0x29bf438
  424f7c:	out    dx,eax
  424f7d:	out    dx,eax
  424f7e:	mov    ecx,0xca5b1065
  424f83:	mov    ch,0xcf
  424f85:	pop    ebx
  424f86:	add    dh,bh
  424f88:	push   es
  424f89:	inc    eax
  424f8a:	pop    eax
  424f8b:	mov    dh,0x1e
  424f8d:	std    
  424f8e:	lea    esp,[eax]
  424f90:	cmp    eax,0x5ab34b66
  424f95:	pop    esp
  424f96:	jno    0x424fdb
  424f98:	mov    dh,BYTE PTR [edx]
  424f9a:	or     BYTE PTR [eax-0xc],bl
  424f9d:	leave  
  424f9e:	cdq    
  424f9f:	loop   0x42501f
  424fa1:	mov    al,0x24
  424fa3:	stos   BYTE PTR es:[edi],al
  424fa4:	cmp    WORD PTR [ecx],bx
  424fa7:	pusha  
  424fa8:	cmp    BYTE PTR [esi-0x79],0xc9
  424fac:	jo     0x424fa9
  424fae:	call   0x14f7:0x4154dde4
  424fb5:	sub    bl,BYTE PTR [ecx+0x761e3f1d]
  424fbb:	push   ds
  424fbc:	les    edx,FWORD PTR [ecx]
  424fbe:	fild   QWORD PTR [eax]
  424fc0:	xchg   ebp,eax
  424fc1:	mov    bl,0x7e
  424fc3:	(bad)  
  424fc4:	push   ebp
  424fc5:	jge    0x424f9f
  424fc7:	cwde   
  424fc8:	or     BYTE PTR [edx-0x24],al
  424fcb:	mov    ds:0xd2daa27b,eax
  424fd0:	xchg   ebx,eax
  424fd1:	imul   ebx,DWORD PTR [ebp-0x469922e3],0xffffffa0
  424fd8:	lock mov esi,0xc6e3595d
  424fde:	fsubr  QWORD PTR [esi]
  424fe0:	dec    esp
  424fe1:	ret    0xb88f
  424fe4:	jl     0x425024
  424fe6:	sar    BYTE PTR [eax-0x1914ea81],0x9a
  424fed:	into   
  424fee:	(bad)  
  424fef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ff0:	xchg   esi,eax
  424ff1:	pop    esp
  424ff2:	sbb    ecx,eax
  424ff4:	sar    BYTE PTR [ebp-0x60779c4],cl
  424ffa:	punpcklbw mm1,DWORD PTR [ebp-0x386d2d61]
  425001:	std    
  425002:	jnp    0x424f93
  425004:	inc    edx
  425005:	mov    eax,?
  425007:	mov    ds:0x34bcbdf6,al
  42500c:	in     eax,dx
  42500d:	lods   eax,DWORD PTR ds:[esi]
  42500e:	repz div DWORD PTR ss:[eax]
  425012:	dec    DWORD PTR [edx+0xc41593f]
  425018:	jp     0x42502e
  42501a:	jge    0x424fd6
  42501c:	cmp    DWORD PTR [ecx+0x59dae3f9],esi
  425022:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425023:	xlat   BYTE PTR ds:[ebx]
  425024:	or     edi,DWORD PTR [edx-0x7b4ffe68]
  42502a:	fild   WORD PTR [edx+0x2f]
  42502d:	test   dl,al
  42502f:	ins    BYTE PTR es:[edi],dx
  425030:	xchg   esp,eax
  425031:	setg   BYTE PTR [di+0x2228]
  425037:	cs push edi
  425039:	cmp    cl,bl
  42503b:	push   eax
  42503c:	adc    al,0xaa
  42503e:	mov    ds:0xa00d5b6,al
  425043:	xchg   edx,eax
  425044:	jl     0x42507f
  425046:	cld    
  425047:	dec    DWORD PTR [edi-0x4d]
  42504a:	in     al,dx
  42504b:	jo     0x425004
  42504d:	lea    esi,[esi+eax*2]
  425050:	fcomp  DWORD PTR [edx-0x5c]
  425053:	ret    
  425054:	add    DWORD PTR [eax],eax
  425056:	daa    
  425057:	add    eax,DWORD PTR [eax]
  425059:	add    BYTE PTR [edx],bh
  42505b:	and    al,0x1
  42505d:	(bad)  
  42505e:	mov    bl,0x30
  425060:	mov    eax,ds:0x53cf5bcb
  425065:	push   esp
  425066:	out    0x56,eax
  425068:	pop    eax
  425069:	(bad)
  42506c:	stos   DWORD PTR es:[edi],eax
  42506d:	loop   0x425008
  42506f:	inc    ecx
  425070:	fidiv  WORD PTR [edi]
  425072:	clc    
  425073:	xlat   BYTE PTR ds:[ebx]
  425074:	shl    BYTE PTR [eax],cl
  425076:	pop    esp
  425077:	cdq    
  425078:	fwait
  425079:	rol    BYTE PTR [edi+0x5a],0x1f
  42507d:	mov    ah,0xe
  42507f:	call   0x7334:0xe3d380da
  425086:	jmp    0x8566:0xe69b19b9
  42508d:	inc    ecx
  42508e:	mov    ch,BYTE PTR [ebx-0x24ac0bf8]
  425094:	pop    ss
  425095:	jp     0x4250fe
  425097:	imul   ebx,DWORD PTR [eax],0x7200549b
  42509d:	cli    
  42509e:	cs popf 
  4250a0:	int3   
  4250a1:	gs xchg esi,eax
  4250a3:	xor    ebx,DWORD PTR [eax]
  4250a5:	imul   edx,DWORD PTR [ecx],0x4c
  4250a8:	push   ss
  4250a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4250aa:	jae    0x42502d
  4250ac:	out    0xef,eax
  4250ae:	cmp    DWORD PTR [edx-0x77],eax
  4250b1:	pop    ebp
  4250b2:	sub    al,dl
  4250b4:	mov    gs,esi
  4250b6:	cld    
  4250b7:	je     0x42503e
  4250b9:	ds dec ecx
  4250bb:	xchg   DWORD PTR [ecx-0xd5d6e2b],ebx
  4250c1:	dec    edi
  4250c2:	sbb    al,0x93
  4250c4:	push   esp
  4250c5:	mov    ecx,0x6a0a249f
  4250ca:	pop    edx
  4250cb:	sbb    al,0xdb
  4250cd:	fs sbb esi,edi
  4250d0:	jg     0x4250c0
  4250d2:	sub    eax,0x73f118b1
  4250d7:	cwde   
  4250d8:	loop   0x42514d
  4250da:	dec    ebp
  4250db:	pop    ecx
  4250dc:	sbb    eax,0xa8677ea8
  4250e1:	jg     0x42510f
  4250e3:	test   BYTE PTR [edx],bh
  4250e5:	nop
  4250e6:	cmp    ecx,DWORD PTR [ecx-0x4c]
  4250e9:	jge    0x4250ea
  4250eb:	add    esi,DWORD PTR [eax]
  4250ed:	pop    es
  4250ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4250ef:	dec    ecx
  4250f0:	fisttp WORD PTR [eax+0x16]
  4250f3:	retf   
  4250f4:	fwait
  4250f5:	add    BYTE PTR [ebx],dh
  4250f7:	mov    edx,0x2405653f
  4250fc:	(bad)  
  4250fd:	call   0xeed6:0x6f3ba3ac
  425104:	add    eax,0xe917a73a
  425109:	mov    BYTE PTR [ecx+0xa],dh
  42510c:	mov    bh,0xed
  42510e:	mov    esi,0xcf305c64
  425113:	popa   
  425114:	cld    
  425115:	jnp    0x4250c1
  425117:	out    dx,al
  425118:	rcl    BYTE PTR [edi+0x28f64b70],cl
  42511e:	(bad)  
  42511f:	sbb    al,cl
  425121:	leave  
  425122:	adc    BYTE PTR [esi],0x92
  425125:	xchg   edi,eax
  425126:	dec    ebx
  425127:	and    al,0xf8
  425129:	and    edx,ebx
  42512b:	xor    al,0x51
  42512d:	pop    es
  42512e:	hlt    
  42512f:	sti    
  425130:	daa    
  425131:	ret    0x6961
  425134:	jae    0x425196
  425136:	test   DWORD PTR [edx-0x5],0x56470958
  42513d:	sahf   
  42513e:	cmp    eax,0x6aaa87e5
  425143:	retf   0x8192
  425146:	or     al,0x19
  425148:	retf   
  425149:	sbb    DWORD PTR [edx],0x59
  42514c:	lods   eax,DWORD PTR ds:[esi]
  42514d:	int    0xb2
  42514f:	jne    0x425184
  425151:	popa   
  425152:	bound  edi,QWORD PTR [edi+edx*8-0x28]
  425156:	push   ss
  425157:	sub    BYTE PTR [ebx+0x7d95d1be],al
  42515d:	rcr    BYTE PTR [ecx-0x2b13c8db],0xbd
  425164:	sub    BYTE PTR [esi-0x74],0x18
  425168:	inc    ecx
  425169:	aam    0x29
  42516b:	fisub  DWORD PTR [ebp+0x1a8dc893]
  425171:	push   0x2752b0bd
  425176:	cdq    
  425177:	popa   
  425178:	mov    eax,0x4f1d9f
  42517d:	mov    ds:0xb8fb9278,eax
  425182:	cmp    BYTE PTR [esi],dl
  425184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425185:	pop    ds
  425186:	xor    edx,DWORD PTR [esi+0x54]
  425189:	icebp  
  42518a:	lods   al,BYTE PTR ds:[esi]
  42518b:	nop
  42518c:	std    
  42518d:	fwait
  42518e:	inc    edi
  42518f:	mov    bh,0x5e
  425191:	inc    ebp
  425192:	xchg   esi,eax
  425193:	jg     0x4251e0
  425195:	aam    0x75
  425197:	xor    ax,0xea5a
  42519b:	fst    st(7)
  42519d:	rol    DWORD PTR ds:0x9ea9e3fc,1
  4251a3:	sbb    eax,0x82f1b8b1
  4251a8:	jmp    0x42517c
  4251aa:	sbb    eax,0xf9daf3ed
  4251af:	stos   BYTE PTR es:[edi],al
  4251b0:	shl    DWORD PTR [eax-0x24],1
  4251b3:	xchg   BYTE PTR [ebx],dl
  4251b5:	(bad)  
  4251b6:	loop   0x4251bf
  4251b8:	sub    eax,0x4af52546
  4251bd:	adc    bl,BYTE PTR [edx]
  4251bf:	loop   0x4251f5
  4251c1:	repnz mov ch,0x24
  4251c4:	and    dl,cl
  4251c6:	jg     0x4251f3
  4251c8:	mov    ds:0x4e5b859c,al
  4251cd:	mov    eax,ds:0x57496139
  4251d2:	sbb    DWORD PTR [esi+0x2e2046cc],0xffffffa4
  4251d9:	icebp  
  4251da:	addr16 hlt 
  4251dc:	in     eax,0xf3
  4251de:	inc    esi
  4251df:	sahf   
  4251e0:	dec    edi
  4251e1:	add    dl,BYTE PTR [ecx+0x4]
  4251e4:	dec    ebp
  4251e5:	(bad)  
  4251e6:	sbb    cl,BYTE PTR [edx-0x1]
  4251e9:	jg     0x42525e
  4251eb:	loopne 0x4251b5
  4251ed:	pusha  
  4251ee:	dec    ecx
  4251ef:	push   edx
  4251f0:	dec    esi
  4251f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251f2:	add    eax,0xeef1d99b
  4251f7:	pop    es
  4251f8:	xchg   edx,eax
  4251f9:	imul   BYTE PTR [ecx]
  4251fb:	lods   al,BYTE PTR ds:[esi]
  4251fc:	out    dx,eax
  4251fd:	push   es
  4251fe:	mov    ebx,0x5ecb584e
  425203:	mov    ecx,0x55b8da1
  425208:	jne    0x42520d
  42520a:	cmp    dh,BYTE PTR [ecx+eax*4+0xa]
  42520e:	and    al,0xdf
  425210:	pusha  
  425211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425212:	mov    dh,BYTE PTR [ebp+0x69]
  425215:	aam    0xdd
  425217:	ins    BYTE PTR es:[edi],dx
  425218:	mov    esi,0xbd13121a
  42521d:	div    BYTE PTR [ebp+0x651c7a2b]
  425223:	mov    ecx,0xdfbc137c
  425228:	add    BYTE PTR [edi+ecx*1],bh
  42522b:	jb     0x4251b2
  42522d:	shl    edi,0xa0
  425230:	xchg   edi,eax
  425231:	sbb    bh,0x25
  425234:	sar    esi,1
  425236:	out    0xa9,eax
  425238:	cmp    dl,BYTE PTR [edx]
  42523a:	scas   eax,DWORD PTR es:[edi]
  42523b:	loop   0x4251d9
  42523d:	add    eax,DWORD PTR [ecx+0x212b49b]
  425243:	ret    
  425244:	add    bl,bh
  425246:	div    ah
  425248:	mov    eax,0x35455abc
  42524d:	jmp    0x4c54a234
  425252:	hlt    
  425253:	inc    eax
  425254:	arpl   WORD PTR [edx+0x6574138b],bx
  42525a:	push   eax
  42525b:	(bad)
  42525f:	in     eax,0x6
  425261:	int    0xcf
  425263:	shl    BYTE PTR [esp+edi*2+0x173675b],1
  42526a:	fisttp QWORD PTR ss:[ebx+0x529e36c7]
  425271:	cmp    DWORD PTR [edx-0x2cbd395e],ecx
  425277:	pusha  
  425278:	into   
  425279:	clc    
  42527a:	and    esp,edi
  42527c:	inc    esi
  42527d:	add    edi,ebp
  42527f:	retf   0x5c58
  425282:	cld    
  425283:	cmp    DWORD PTR [esp+edi*8],eax
  425286:	hlt    
  425287:	inc    edi
  425288:	je     0x42528d
  42528a:	jecxz  0x4252cf
  42528c:	xor    al,dh
  42528e:	mov    cl,0x83
  425290:	mov    al,ds:0xe20d9131
  425295:	sub    esp,esi
  425297:	inc    ebp
  425298:	adc    BYTE PTR [ecx-0x5eefab4d],0x3f
  42529f:	outs   dx,DWORD PTR ds:[esi]
  4252a0:	daa    
  4252a1:	stc    
  4252a2:	js     0x425232
  4252a4:	mov    bl,0xb8
  4252a6:	sbb    DWORD PTR [ecx+0x56],0xffffff9a
  4252aa:	jnp    0x425312
  4252ac:	mov    esp,0x776af367
  4252b1:	and    ah,cl
  4252b3:	jne    0x425314
  4252b5:	mov    esi,0x167b60c
  4252ba:	daa    
  4252bb:	mov    DWORD PTR [ebx],edi
  4252bd:	push   ebp
  4252be:	mov    WORD PTR [ecx+0x3e],cs
  4252c1:	test   al,0x9c
  4252c3:	mov    dh,0x8e
  4252c5:	rol    bl,1
  4252c7:	inc    ecx
  4252c8:	xor    al,BYTE PTR [ebp-0x7d]
  4252cb:	aad    0xe4
  4252cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4252ce:	jle    0x4252aa
  4252d0:	dec    eax
  4252d1:	scas   al,BYTE PTR es:[edi]
  4252d2:	lahf   
  4252d3:	push   ecx
  4252d4:	mov    ch,0x5d
  4252d6:	sbb    bh,BYTE PTR [edx+0x27]
  4252d9:	jge    0x42534b
  4252db:	mov    edx,0xdbace904
  4252e0:	inc    eax
  4252e1:	jge    0x4252af
  4252e3:	dec    ebp
  4252e4:	jne    0x425324
  4252e6:	stc    
  4252e7:	popf   
  4252e8:	retf   0x7ed1
  4252eb:	icebp  
  4252ec:	mov    edi,?
  4252ee:	enter  0x7652,0x9e
  4252f2:	ror    DWORD PTR [edx],1
  4252f4:	aaa    
  4252f5:	js     0x4252cb
  4252f7:	ret    0x4740
  4252fa:	xchg   esi,eax
  4252fb:	int3   
  4252fc:	sub    ebp,0xffffffcd
  4252ff:	lds    ebx,FWORD PTR ss:[edi-0x411e4972]
  425306:	or     cl,BYTE PTR [ecx]
  425308:	mov    ebx,DWORD PTR [esi]
  42530a:	inc    ebp
  42530b:	and    al,0xb5
  42530d:	cdq    
  42530e:	rcr    DWORD PTR [ebx+0x4d],0xcc
  425312:	push   0xc00476d0
  425317:	jge    0x4252be
  425319:	pop    ecx
  42531a:	test   eax,0xd32e1947
  42531f:	sub    ebx,DWORD PTR [eax]
  425321:	and    ch,BYTE PTR cs:[eax+0x65]
  425325:	je     0x4252b1
  425327:	loope  0x4252dc
  425329:	jne    0x4252c9
  42532b:	pop    ss
  42532c:	in     eax,dx
  42532d:	jae    0x425301
  42532f:	(bad)  
  425330:	int    0x67
  425332:	stc    
  425333:	adc    bh,BYTE PTR [esi-0x60422bed]
  425339:	mov    esp,0x9787cd7
  42533e:	xchg   ebx,eax
  42533f:	jmp    0x2c8455e8
  425344:	push   edi
  425345:	or     al,0xae
  425347:	loopne 0x425331
  425349:	push   ecx
  42534a:	stc    
  42534b:	push   edx
  42534c:	loop   0x42537d
  42534e:	cmp    DWORD PTR [ecx-0x5f],ecx
  425351:	xor    eax,0x192eb82f
  425356:	jnp    0x425320
  425358:	xchg   ecx,eax
  425359:	or     DWORD PTR [ebp-0x7c],eax
  42535c:	gs xchg edi,eax
  42535e:	pop    ebp
  42535f:	jb     0x425347
  425361:	mov    eax,ds:0xc5497b76
  425366:	cwde   
  425367:	inc    esi
  425368:	leave  
  425369:	jl     0x42532b
  42536b:	push   es
  42536c:	xor    BYTE PTR [ecx+edi*8],cl
  42536f:	sar    BYTE PTR [esi+ecx*2],cl
  425372:	das    
  425373:	mov    dh,0x74
  425375:	shl    bl,1
  425377:	sub    DWORD PTR [eax],0xffffff85
  42537a:	add    al,0x19
  42537c:	aas    
  42537d:	pusha  
  42537e:	and    BYTE PTR [ebp+0x37],0x0
  425382:	ret    
  425383:	and    ecx,edx
  425385:	dec    eax
  425386:	repz clc 
  425388:	fld    TBYTE PTR [ebx+0x202892a0]
  42538e:	dec    esp
  42538f:	dec    ecx
  425390:	sub    al,0xaf
  425392:	retf   
  425393:	mov    BYTE PTR [ecx],0x0
  425396:	daa    
  425397:	add    eax,DWORD PTR [eax]
  425399:	add    cl,dh
  42539b:	mov    ah,0x2a
  42539d:	stos   DWORD PTR es:[edi],eax
  42539e:	inc    ecx
  42539f:	mov    esp,0xa103f252
  4253a4:	int    0xfe
  4253a6:	jb     0x4253ae
  4253a8:	jno    0x425407
  4253aa:	icebp  
  4253ab:	sbb    DWORD PTR [eax],0xaf635cf3
  4253b1:	arpl   WORD PTR [eax],sp
  4253b3:	hlt    
  4253b4:	ins    BYTE PTR es:[edi],dx
  4253b5:	int3   
  4253b6:	xor    esp,DWORD PTR ds:[edx-0x52cfdbf0]
  4253bd:	jl     0x42542b
  4253bf:	loopne 0x42535b
  4253c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253c2:	fadd   QWORD PTR [eax-0x19f0b20d]
  4253c8:	push   edi
  4253c9:	aam    0xef
  4253cb:	push   ss
  4253cc:	jmp    0x85bbe604
  4253d1:	inc    ebp
  4253d2:	out    dx,eax
  4253d3:	sbb    eax,0x16d2535
  4253d8:	std    
  4253d9:	pop    ebx
  4253da:	or     eax,0xd7e66489
  4253df:	push   0x49
  4253e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253e2:	sbb    DWORD PTR [ecx+0x35],0xbc3112f8
  4253e9:	js     0x4253a8
  4253eb:	fwait
  4253ec:	lds    ecx,FWORD PTR [eax-0x5b1a7004]
  4253f2:	icebp  
  4253f3:	add    edi,edx
  4253f5:	scas   eax,DWORD PTR es:[edi]
  4253f6:	int    0x6a
  4253f8:	push   ecx
  4253f9:	add    al,0x3a
  4253fb:	fcmovnbe st,st(0)
  4253fd:	push   esi
  4253fe:	lock lock popf 
  425401:	inc    eax
  425402:	stos   DWORD PTR es:[edi],eax
  425403:	les    eax,FWORD PTR [edx-0x3e]
  425406:	popa   
  425407:	xchg   DWORD PTR [ebp+esi*1-0x1b],ebp
  42540b:	dec    ecx
  42540c:	sub    ebx,DWORD PTR [edx+0x12]
  42540f:	jl     0x4253ab
  425411:	(bad)  
  425412:	imul   ecx,DWORD PTR [esi+ebp*1-0x47],0x2b70376d
  42541a:	jo     0x4253f8
  42541c:	add    DWORD PTR [edx+0x6b09a18f],0x5e
  425423:	and    al,0x3e
  425425:	scas   eax,DWORD PTR es:[edi]
  425426:	mov    al,ds:0xe9f3dcec
  42542b:	mov    edx,DWORD PTR [eax]
  42542d:	dec    ecx
  42542e:	mov    ebx,0x773df810
  425433:	sahf   
  425434:	mov    al,ds:0x3fcc7678
  425439:	cmp    dl,BYTE PTR [eax-0x6]
  42543c:	loopne 0x4253db
  42543e:	call   0x7eb713c1
  425443:	outs   dx,DWORD PTR ds:[esi]
  425444:	jb     0x425417
  425446:	xchg   DWORD PTR [bp+di+0x57],esp
  42544a:	jecxz  0x425433
  42544c:	add    BYTE PTR [edx-0x34875a8d],ah
  425452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425453:	outs   dx,DWORD PTR ds:[esi]
  425454:	adc    cl,BYTE PTR ds:0xa60aecd4
  42545a:	push   esi
  42545b:	mov    eax,ds:0xd5764215
  425460:	stos   BYTE PTR es:[edi],al
  425461:	inc    eax
  425462:	out    dx,eax
  425463:	inc    ebx
  425464:	add    eax,0x8a9004e4
  425469:	xor    al,0xd5
  42546b:	mov    ecx,0x5b27043
  425470:	mov    ds:0x4c027eab,eax
  425475:	adc    DWORD PTR [esi-0x18],esi
  425478:	mov    BYTE PTR [edx+0x78335d1a],dl
  42547e:	fnstenv [ecx-0xe]
  425481:	gs stos DWORD PTR es:[edi],eax
  425483:	movq   QWORD PTR [eax],mm6
  425486:	jmp    0xee29:0x325b5316
  42548d:	jecxz  0x425411
  42548f:	jle    0x425430
  425491:	push   eax
  425492:	mov    BYTE PTR [edi],bl
  425494:	xchg   esp,eax
  425495:	rcl    DWORD PTR [eax+edi*2+0x54],1
  425499:	sub    dl,ch
  42549b:	in     al,dx
  42549c:	in     eax,0x4f
  42549e:	fldenv [edx+0x22]
  4254a1:	jnp    0x425444
  4254a3:	ret    0x9b43
  4254a6:	mov    dl,0x9c
  4254a8:	call   WORD PTR [esi-0x3b]
  4254ac:	or     eax,0x10072785
  4254b1:	and    eax,0xbf84d01d
  4254b6:	sbb    BYTE PTR [ecx+0x4251fad5],0xdf
  4254bd:	inc    ebx
  4254be:	mov    dl,dh
  4254c0:	lahf   
  4254c1:	add    BYTE PTR [ebx+ebx*4-0x40],dl
  4254c5:	ror    DWORD PTR [esi+0x13e5dcf7],0x4
  4254cc:	out    0xde,al
  4254ce:	and    BYTE PTR [ecx+0x3a3e37d],0x35
  4254d5:	cmc    
  4254d6:	pop    ds
  4254d7:	dec    esp
  4254d8:	(bad)  
  4254d9:	sar    DWORD PTR [ecx+0x23faab27],1
  4254df:	call   0xd3a2:0xd86109eb
  4254e6:	sbb    esi,edi
  4254e8:	cmp    ah,ch
  4254ea:	sbb    bh,bl
  4254ec:	and    BYTE PTR [ebp+0x3f],ch
  4254ef:	test   al,0x1d
  4254f1:	ins    DWORD PTR es:[edi],dx
  4254f2:	mov    ebp,0xe753f2c1
  4254f7:	xor    BYTE PTR ds:0xbf6ac56b,0xba
  4254fe:	mov    ss,WORD PTR [ebx+0x42]
  425501:	icebp  
  425502:	push   ebp
  425503:	cmp    DWORD PTR [eax-0x3e],ebx
  425506:	ret    0xb67c
  425509:	leave  
  42550a:	ja     0x42550e
  42550c:	sbb    ebx,eax
  42550e:	ins    DWORD PTR es:[edi],dx
  42550f:	es addr16 inc edi
  425512:	mov    ebx,0x47ede017
  425517:	inc    ebx
  425518:	imul   esi,ebx,0xffffff90
  42551b:	or     al,0x1b
  42551d:	jge    0x425508
  42551f:	push   eax
  425520:	sub    edx,DWORD PTR [ebx-0x26]
  425523:	lahf   
  425524:	push   eax
  425525:	pop    eax
  425526:	repz push 0xffffffba
  425529:	mov    ds:0xef45c4e4,eax
  42552e:	jle    0x425549
  425530:	daa    
  425531:	sub    DWORD PTR [edx+edi*2],esp
  425534:	sub    DWORD PTR [ecx+0x4],0x79f47fab
  42553b:	mov    dl,0x9e
  42553d:	mov    eax,0x53625557
  425542:	daa    
  425543:	add    al,bl
  425545:	mov    BYTE PTR [ebx-0x1cdfa698],0x13
  42554c:	dec    edx
  42554d:	(bad)  
  42554f:	add    BYTE PTR [eax+ebp*8-0x7534dd19],bh
  425556:	call   0x29c1:0xc1e6f364
  42555d:	sub    eax,0xb06fe777
  425562:	mov    ah,0x26
  425564:	push   ecx
  425565:	popf   
  425566:	pushf  
  425567:	fst    DWORD PTR [esp+ebp*2-0x5fa8ab0d]
  42556e:	scas   al,BYTE PTR es:[edi]
  42556f:	aam    0x3
  425571:	mov    ecx,0xd21bf80b
  425576:	xchg   esp,eax
  425577:	fld    DWORD PTR [ecx+0x2f]
  42557a:	xor    DWORD PTR [esi],0xffffffb9
  42557d:	dec    esp
  42557e:	imul   ecx,DWORD PTR [ebx],0x49040067
  425584:	adc    edx,DWORD PTR [eax-0x3e]
  425587:	jns    0x425601
  425589:	push   esp
  42558a:	push   ecx
  42558b:	test   DWORD PTR [edx+0x5697f96f],esp
  425591:	test   DWORD PTR [ebx-0x37],ecx
  425594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425595:	mov    esi,0xf7523f8f
  42559a:	mov    eax,0x7faef917
  42559f:	and    eax,0x2e557118
  4255a4:	data16 out 0xdb,al
  4255a7:	shl    DWORD PTR [ebp-0x9db071e],1
  4255ad:	jne    0x4255ad
  4255af:	pop    ebp
  4255b0:	icebp  
  4255b1:	or     DWORD PTR [ebx],esi
  4255b3:	leave  
  4255b4:	mov    cl,0x6e
  4255b6:	mov    ds:0xeabaf2e6,eax
  4255bb:	pop    ebx
  4255bc:	test   al,0x87
  4255be:	xor    cl,dl
  4255c0:	in     al,0x78
  4255c2:	rol    DWORD PTR [edx-0x3c],0x32
  4255c6:	faddp  st(5),st
  4255c8:	adc    eax,edi
  4255ca:	xchg   edi,eax
  4255cb:	dec    esp
  4255cc:	(bad)  
  4255cd:	xchg   edi,eax
  4255ce:	add    eax,DWORD PTR [ebx+0x6c]
  4255d1:	add    ah,BYTE PTR [edx-0x76]
  4255d4:	addr16 mov esi,0xa6b64527
  4255da:	jmp    0x6642:0xd6deed0a
  4255e1:	sbb    dl,dh
  4255e3:	pop    ds
  4255e4:	rcl    DWORD PTR ds:0xb4b242dc,0x9f
  4255eb:	or     al,BYTE PTR [ecx]
  4255ed:	mov    ds:0xb045fa8f,eax
  4255f2:	std    
  4255f3:	shl    DWORD PTR [esi+0xe6c181],cl
  4255f9:	push   ebx
  4255fa:	and    ecx,DWORD PTR [eax-0x4c]
  4255fd:	jb     0x425665
  4255ff:	fisttp DWORD PTR [ebx]
  425601:	fwait
  425602:	xchg   DWORD PTR [ecx-0x418e6571],ebp
  425608:	push   esp
  425609:	addr16 or eax,0x98f2d483
  42560f:	into   
  425610:	dec    ebx
  425611:	out    0xfa,eax
  425613:	pop    ecx
  425614:	xchg   ebp,eax
  425615:	mov    ebp,0x4fed6023
  42561a:	ret    0x2be5
  42561d:	ja     0x425643
  42561f:	cli    
  425620:	outs   dx,DWORD PTR ds:[esi]
  425621:	jecxz  0x4255da
  425623:	iret   
  425624:	fisttp QWORD PTR [eax+0x649c2c81]
  42562a:	daa    
  42562b:	lods   al,BYTE PTR ds:[esi]
  42562c:	mov    ch,0x15
  42562e:	call   0x25ed:0xd228a2df
  425635:	fistp  DWORD PTR [ecx]
  425637:	cdq    
  425638:	cmp    edi,0x3cbbc66d
  42563e:	xor    cl,BYTE PTR [edx+0xe1d3e3d]
  425644:	jnp    0x425649
  425646:	adc    eax,0xcdf80638
  42564b:	xor    BYTE PTR [esi],cl
  42564d:	ds xchg ch,dl
  425650:	add    al,0xf8
  425652:	rol    DWORD PTR [esp+eiz*2-0x18128428],cl
  425659:	lahf   
  42565a:	aas    
  42565b:	and    BYTE PTR [esi+edi*2],ch
  42565e:	adc    BYTE PTR [ebx-0x4c7fd3b5],dh
  425664:	arpl   WORD PTR [ecx-0x4a0cd0ba],ax
  42566a:	fld    DWORD PTR [ebx]
  42566c:	stos   DWORD PTR es:[edi],eax
  42566d:	repnz sub al,0x6c
  425670:	inc    edx
  425671:	(bad)  
  425672:	mov    dh,0x35
  425674:	rol    BYTE PTR [edx+0x6e9c4b5b],cl
  42567a:	sbb    DWORD PTR [esi],ecx
  42567c:	ins    DWORD PTR es:[edi],dx
  42567d:	xchg   ecx,eax
  42567e:	push   esi
  42567f:	mov    ch,0x5a
  425681:	ret    
  425682:	push   ss
  425683:	pop    edx
  425684:	xchg   esi,eax
  425685:	cld    
  425686:	jge    0x425687
  425688:	test   al,0x8d
  42568a:	loopne 0x425689
  42568c:	test   eax,0x2f15c37f
  425691:	mov    ds:0x6dfab168,eax
  425696:	jecxz  0x4256cb
  425698:	dec    esi
  425699:	test   al,0x33
  42569b:	imul   ebp,edx,0x64
  42569e:	int3   
  42569f:	jp     0x4256e4
  4256a1:	icebp  
  4256a2:	loop   0x4256bf
  4256a4:	sbb    bl,BYTE PTR [esi-0x9]
  4256a7:	ja     0x42567c
  4256a9:	ins    BYTE PTR es:[edi],dx
  4256aa:	bound  esp,QWORD PTR [ebp+0x78]
  4256ad:	jne    0x42562f
  4256af:	xchg   edx,eax
  4256b0:	call   0xbb01ef3a
  4256b5:	push   ss
  4256b6:	(bad)  
  4256b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4256b8:	push   esp
  4256b9:	sbb    al,al
  4256bb:	cmp    BYTE PTR gs:[edx],cl
  4256be:	pop    edi
  4256bf:	mov    dh,0x51
  4256c1:	add    BYTE PTR [edx-0x101610a7],bl
  4256c7:	call   FWORD PTR [esi+0x5c5d437b]
  4256cd:	mov    cl,0xf4
  4256cf:	cmp    bl,BYTE PTR [eax]
  4256d1:	inc    esi
  4256d2:	repnz leave 
  4256d4:	add    DWORD PTR [eax],eax
  4256d6:	daa    
  4256d7:	add    eax,DWORD PTR [eax]
  4256d9:	add    BYTE PTR [ebx],al
  4256db:	fild   QWORD PTR [ecx+ebx*2]
  4256de:	dec    ebx
  4256df:	mov    edx,0xa97cd417
  4256e4:	(bad)
  4256e7:	inc    ecx
  4256e8:	jae    0x42570d
  4256ea:	lock jmp 0xcb7fe939
  4256f0:	ja     0x4256df
  4256f2:	rcl    dh,cl
  4256f4:	inc    edi
  4256f6:	or     eax,0x518d3aec
  4256fb:	and    al,0x1a
  4256fd:	jb     0x4256a5
  4256ff:	sbb    al,BYTE PTR [ebp+0x7]
  425702:	push   ebp
  425703:	retf   0x978b
  425706:	imul   eax,DWORD PTR [esi+ecx*1+0x3d8baed6],0x53
  42570e:	fidiv  WORD PTR [ebp+0xe0bf1ae]
  425714:	fdivr  DWORD PTR [ebx+0x36b8ad7f]
  42571a:	mov    ebp,cs
  42571c:	stos   BYTE PTR es:[edi],al
  42571d:	ds ins BYTE PTR es:[edi],dx
  42571f:	ret    0x5aa4
  425722:	ins    BYTE PTR es:[edi],dx
  425723:	fisttp WORD PTR [ebx]
  425725:	or     ebp,eax
  425727:	jb     0x425773
  425729:	xlat   BYTE PTR ds:[ebx]
  42572a:	sub    BYTE PTR [ebx],bl
  42572c:	or     ch,BYTE PTR [edx+eax*4]
  42572f:	aam    0x76
  425731:	mov    al,0xad
  425733:	mov    al,ds:0x2555c135
  425738:	or     eax,0xea518f3b
  42573d:	and    al,0xbe
  42573f:	or     DWORD PTR [ebx],ebp
  425741:	fmul   DWORD PTR [edi-0x68]
  425744:	or     dl,BYTE PTR [edi-0x5a]
  425747:	mov    ch,0x78
  425749:	pop    ebp
  42574a:	imul   esi,edi,0xe4cd0313
  425750:	int    0xa
  425752:	pop    edx
  425753:	and    ecx,ebx
  425755:	adc    BYTE PTR [edx+0x38],0x54
  425759:	xor    DWORD PTR [edx],ebx
  42575b:	loop   0x42579c
  42575d:	aaa    
  42575e:	nop
  42575f:	repnz pusha 
  425761:	mov    cl,BYTE PTR [edx+eax*1+0x661783e4]
  425768:	rcl    esp,1
  42576a:	push   edi
  42576b:	sbb    al,BYTE PTR [esi-0x6f95c425]
  425771:	inc    eax
  425772:	test   eax,0x5624dc7a
  425777:	mov    BYTE PTR [ebp-0x345a43c],al
  42577d:	dec    esi
  42577e:	jmp    0xd92eee74
  425783:	pop    ds
  425784:	shl    BYTE PTR [eax+0x571d987],cl
  42578a:	dec    eax
  42578b:	push   edi
  42578c:	dec    esp
  42578d:	dec    esi
  42578e:	test   al,0x57
  425790:	or     BYTE PTR [edx+0x5c968826],ah
  425796:	add    al,0x9
  425798:	mov    bh,0x65
  42579a:	jmp    0x4257c6
  42579c:	pushf  
  42579d:	popa   
  42579e:	sub    DWORD PTR [edi-0xb],esp
  4257a1:	in     al,dx
  4257a2:	aam    0x3d
  4257a4:	aaa    
  4257a5:	mov    edi,0x45f79b33
  4257aa:	fwait
  4257ab:	jge    0x4257b0
  4257ad:	fisub  DWORD PTR [ecx+0x2e]
  4257b0:	fnstsw WORD PTR es:[edi-0xa3ea28a]
  4257b7:	mov    dh,0x9f
  4257b9:	and    esi,esi
  4257bb:	inc    ebx
  4257bc:	out    dx,eax
  4257bd:	div    DWORD PTR [esi-0x5b]
  4257c0:	pop    es
  4257c1:	repnz mov esi,0xd8761d66
  4257c7:	push   ss
  4257c8:	add    eax,0x5d563eb8
  4257cd:	call   0xa10e7900
  4257d2:	iret   
  4257d3:	into   
  4257d4:	dec    edx
  4257d5:	xchg   edx,eax
  4257d6:	and    eax,0x9b83a667
  4257db:	mov    al,0x6c
  4257dd:	and    DWORD PTR [ecx],0xb0071bc1
  4257e3:	fdivr  DWORD PTR [ebx-0x65]
  4257e6:	and    bh,ch
  4257e8:	and    DWORD PTR [esi+0x7e],ebx
  4257eb:	stc    
  4257ec:	rol    DWORD PTR [edx-0x714c27ad],cl
  4257f2:	mov    ds:0x470ee846,eax
  4257f7:	mov    cl,BYTE PTR [ebx+eax*2-0x15acc73e]
  4257fe:	call   0x47ab:0xa807547b
  425805:	fwait
  425806:	cmp    ch,cl
  425808:	push   ebp
  425809:	loopne 0x42579f
  42580b:	fcomp  DWORD PTR [ebp+0x5abbde90]
  425811:	sub    al,0x66
  425813:	out    dx,al
  425814:	jo     0x42584c
  425816:	imul   BYTE PTR [edx-0x6b]
  425819:	cmp    BYTE PTR [edi+0x23],dh
  42581c:	stos   DWORD PTR es:[edi],eax
  42581d:	or     edx,0xc73b8cb6
  425823:	jg     0x425882
  425825:	loope  0x4257f7
  425827:	mov    esp,0x380283e
  42582c:	aam    0x4d
  42582e:	sub    ebp,edi
  425830:	inc    ecx
  425831:	or     ecx,edi
  425833:	xchg   ebx,eax
  425834:	adc    DWORD PTR [esi-0x31],ebp
  425837:	mov    al,0x82
  425839:	fdiv   st,st(1)
  42583b:	mov    WORD PTR [esi+0x42],cs
  42583e:	push   esi
  42583f:	bswap  ebp
  425841:	inc    esp
  425842:	in     eax,dx
  425843:	ret    0x9bc
  425846:	add    al,0x10
  425848:	cmp    BYTE PTR [esi-0x2f],cl
  42584b:	icebp  
  42584c:	push   ss
  42584d:	pop    edx
  42584e:	popa   
  42584f:	mov    dh,0x1b
  425851:	inc    esi
  425852:	div    DWORD PTR ds:0x96bd4938
  425858:	ss stos BYTE PTR es:[edi],al
  42585a:	mov    WORD PTR [edi],cs
  42585c:	adc    ebp,DWORD PTR [esi-0x312b3d2]
  425862:	mov    ebx,0x8aff7e70
  425867:	not    ah
  425869:	xchg   ecx,eax
  42586a:	pop    ebx
  42586b:	out    dx,al
  42586c:	adc    edi,esi
  42586e:	in     al,0x96
  425870:	jmp    0x8868:0xed3d670d
  425877:	jo     0x4258e6
  425879:	xor    DWORD PTR [esp+edx*4+0x58de9a23],edi
  425880:	mov    edx,0x7522e7b2
  425885:	iret   
  425886:	inc    esp
  425887:	iret   
  425888:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425889:	sahf   
  42588a:	cmp    al,0xc
  42588c:	popf   
  42588d:	(bad)
  425890:	inc    ebx
  425891:	shr    cl,cl
  425893:	or     DWORD PTR ds:0x65532f03,ebp
  425899:	xchg   edi,eax
  42589a:	add    al,0x21
  42589c:	mov    bl,0xe2
  42589e:	iret   
  42589f:	fdivr  QWORD PTR [esi+0x6a]
  4258a2:	(bad)  
  4258a3:	fstp   TBYTE PTR ds:[ebx-0x4b]
  4258a7:	scas   eax,DWORD PTR es:[edi]
  4258a8:	mov    ah,0xe2
  4258aa:	jge    0x4258d9
  4258ac:	ret    0x37e5
  4258af:	das    
  4258b0:	sbb    eax,0xc349a52
  4258b5:	hlt    
  4258b6:	pop    edi
  4258b7:	xchg   DWORD PTR [esi+0x59],esi
  4258ba:	ins    DWORD PTR es:[edi],dx
  4258bb:	sub    BYTE PTR [eax+0x4f],0x15
  4258bf:	fisubr WORD PTR [ebx+0x11]
  4258c2:	xchg   esp,eax
  4258c3:	ret    0x7daa
  4258c6:	test   DWORD PTR [edx+0x3c],esp
  4258c9:	int    0xac
  4258cb:	in     eax,0xef
  4258cd:	icebp  
  4258ce:	push   ebp
  4258cf:	stc    
  4258d0:	sahf   
  4258d1:	ja     0x4258fb
  4258d3:	rcr    ecx,1
  4258d5:	mov    ebp,0xfe042078
  4258da:	jno    0x4258c5
  4258dc:	lds    ebp,FWORD PTR [esi+0x35]
  4258df:	(bad)  
  4258e0:	sbb    edi,DWORD PTR [edx+0x21]
  4258e3:	mov    ebp,0x3fc2863
  4258e8:	pop    edx
  4258e9:	mov    dh,0x12
  4258eb:	inc    esi
  4258ec:	cmp    DWORD PTR [esi],esp
  4258ee:	dec    edx
  4258ef:	mov    es,WORD PTR [ebx]
  4258f1:	adc    al,0xcc
  4258f3:	pop    ds
  4258f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4258f5:	fst    DWORD PTR [edx]
  4258f7:	out    0xa5,al
  4258f9:	pop    edi
  4258fa:	mov    cs,WORD PTR [esi]
  4258fc:	pop    ecx
  4258fd:	aam    0x5
  4258ff:	gs push ss
  425901:	into   
  425902:	push   eax
  425903:	mov    ds:0x7b3fffea,al
  425908:	sbb    dh,cl
  42590a:	adc    BYTE PTR [edi],dl
  42590c:	pop    ss
  42590d:	shl    BYTE PTR [ebx],0xb0
  425910:	repz std 
  425912:	sub    eax,0x8dc54d79
  425917:	rol    BYTE PTR fs:[esi-0x2d],1
  42591b:	jg     0x42593f
  42591d:	mov    ebx,gs
  42591f:	inc    edx
  425920:	and    DWORD PTR [eax+0x5502c5ee],esi
  425926:	ins    BYTE PTR es:[edi],dx
  425927:	pop    ebp
  425928:	ret    0x107c
  42592b:	sub    edx,DWORD PTR [eax-0x5d]
  42592e:	dec    ebx
  42592f:	retf   
  425930:	fcmovnb st,st(7)
  425932:	inc    bl
  425934:	inc    eax
  425935:	push   ds
  425936:	and    eax,0x42f39c29
  42593b:	mov    esi,0x7bbc9a43
  425940:	iret   
  425941:	and    ah,BYTE PTR [esp+ebp*4]
  425944:	adc    ch,ah
  425946:	cdq    
  425947:	and    DWORD PTR [edx],edx
  425949:	mov    bl,0x1c
  42594b:	in     eax,dx
  42594c:	xchg   DWORD PTR [edx],ebp
  42594e:	adc    BYTE PTR [esp+eiz*8],cl
  425951:	inc    DWORD PTR [ecx-0x8]
  425954:	nop
  425955:	scas   al,BYTE PTR es:[edi]
  425956:	imul   edi,DWORD PTR [eax+0x7d],0x1239bd25
  42595d:	loopne 0x4259d2
  42595f:	vmovaps ymm4,ymm0
  425963:	sbb    eax,0xe7160181
  425968:	out    0x0,eax
  42596a:	ins    DWORD PTR es:[edi],dx
  42596b:	movzx  ebx,di
  42596e:	mov    eax,ds:0xfc82f3ca
  425973:	sub    al,0x2d
  425975:	push   esp
  425976:	not    BYTE PTR [eax+0x50]
  425979:	sbb    edi,ecx
  42597b:	dec    edi
  42597c:	(bad)  
  42597e:	push   ebx
  42597f:	mov    cl,0x57
  425981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425982:	pusha  
  425983:	ret    
  425984:	xchg   ebx,eax
  425985:	and    ebp,ebp
  425987:	retf   0xcf7f
  42598a:	je     0x4259d1
  42598c:	xchg   ebx,eax
  42598d:	lods   al,BYTE PTR ds:[esi]
  42598e:	shl    bl,0xc0
  425991:	xchg   ecx,eax
  425992:	dec    edi
  425993:	push   es
  425994:	or     ebp,esi
  425996:	xchg   BYTE PTR [edi+ecx*1+0x42],ch
  42599a:	ret    0x6bc3
  42599d:	shl    eax,1
  42599f:	and    al,BYTE PTR [ebx+0x9]
  4259a2:	minsd  xmm6,QWORD PTR [ebx-0x59]
  4259a7:	cmp    eax,0xd99628d6
  4259ac:	sub    DWORD PTR [ebp+0x2f],edi
  4259af:	(bad)  
  4259b0:	cmp    eax,0xb3000eac
  4259b5:	mov    edx,0x5d32b8d
  4259ba:	hlt    
  4259bb:	push   0xffffff9d
  4259bd:	xchg   esp,eax
  4259be:	cmp    eax,0x7b805166
  4259c3:	retf   
  4259c4:	inc    ebp
  4259c5:	inc    ecx
  4259c6:	pop    esi
  4259c7:	jbe    0x425974
  4259c9:	and    BYTE PTR [ecx-0x79],0xbe
  4259cd:	out    0x1e,al
  4259cf:	inc    ebp
  4259d0:	cli    
  4259d1:	mov    fs,WORD PTR [eax-0xcce3e21]
  4259d7:	sub    DWORD PTR [ebx],edi
  4259d9:	sbb    edx,DWORD PTR [edx]
  4259db:	xlat   BYTE PTR ds:[ebx]
  4259dc:	loope  0x425a03
  4259de:	xor    al,0xf5
  4259e0:	sub    al,0xf
  4259e2:	or     bh,BYTE PTR [edi+0x7b]
  4259e5:	shl    ebx,cl
  4259e7:	test   eax,0x94e70209
  4259ec:	sub    BYTE PTR [esi],ch
  4259ee:	popaw  
  4259f0:	aas    
  4259f1:	xor    DWORD PTR [esi+ebx*8],ebx
  4259f4:	sti    
  4259f5:	mov    ah,0xc0
  4259f7:	adc    al,0xb
  4259f9:	aad    0xb8
  4259fb:	jno    0x425a14
  4259fd:	cli    
  4259fe:	mov    DWORD PTR [ebp-0x3f72ffc6],0xf74f3707
  425a08:	mov    ebp,0x532a00fa
  425a0d:	fnstsw WORD PTR [eax+ebp*2]
  425a10:	push   esi
  425a11:	or     BYTE PTR [ecx],bl
  425a13:	int    0x1
  425a15:	add    BYTE PTR [edi],ah
  425a17:	add    eax,DWORD PTR [eax]
  425a19:	add    BYTE PTR [edx+ecx*2-0x30],dh
  425a1d:	ins    DWORD PTR es:[edi],dx
  425a1e:	xlat   BYTE PTR ds:[ebx]
  425a1f:	icebp  
  425a20:	call   0xd3fd:0x39a6f826
  425a27:	les    edi,FWORD PTR [ebx]
  425a29:	call   0x823a:0x7c4d7885
  425a30:	jmp    0x1fc5:0x97d4bf98
  425a37:	lea    edi,[ebx]
  425a39:	or     ecx,ebx
  425a3b:	out    0x6a,al
  425a3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a3e:	inc    edi
  425a3f:	push   edi
  425a40:	cmp    al,0xc8
  425a42:	jmp    0x4259de
  425a44:	hlt    
  425a45:	das    
  425a46:	sbb    ebp,DWORD PTR [eax-0x2853c403]
  425a4c:	mov    ch,0x1b
  425a4e:	(bad)
  425a51:	cdq    
  425a52:	and    eax,0xe8aed502
  425a57:	fs pop ecx
  425a59:	ror    DWORD PTR [esi-0x9fcf58e],cl
  425a5f:	or     al,0x37
  425a61:	mov    bl,0x88
  425a63:	jo     0x425a51
  425a65:	mov    BYTE PTR [ebx+0x4067c7d1],ch
  425a6b:	mov    esp,0xe61b6465
  425a70:	adc    DWORD PTR [edx+0x177455f5],ebp
  425a76:	dec    eax
  425a77:	fsqrt  
  425a79:	jge    0x425ae4
  425a7b:	inc    ebx
  425a7c:	nop
  425a7d:	(bad)  
  425a7f:	adc    DWORD PTR [edx+0x6b6fe901],0x3591a830
  425a89:	retf   
  425a8a:	scas   al,BYTE PTR es:[edi]
  425a8b:	mov    ds:0x653b0698,al
  425a90:	xchg   edx,eax
  425a91:	mov    ecx,0x3eed0bd
  425a96:	sub    ecx,0xffffffc1
  425a99:	in     eax,dx
  425a9a:	int    0xc8
  425a9c:	arpl   WORD PTR [edi+0x5a41d8fe],dx
  425aa2:	mov    ecx,0x2b9db361
  425aa7:	arpl   ax,bp
  425aa9:	mov    ah,0xc9
  425aab:	cwde   
  425aac:	or     edi,ebp
  425aae:	cli    
  425aaf:	pop    edx
  425ab0:	out    dx,eax
  425ab1:	(bad)  
  425ab2:	lock add BYTE PTR [ecx+ebp*8+0x2c02df1e],dl
  425aba:	add    DWORD PTR [edx+0x774aa2d6],edi
  425ac0:	inc    ebp
  425ac1:	pop    ebp
  425ac2:	push   esi
  425ac3:	loop   0x425a66
  425ac5:	jmp    0xd85a1092
  425aca:	shr    BYTE PTR [eax],0xab
  425acd:	add    al,0x3
  425acf:	push   edx
  425ad0:	sti    
  425ad1:	(bad)  
  425ad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ad3:	add    eax,0x146676a
  425ad8:	xchg   edi,eax
  425ad9:	xchg   esi,eax
  425ada:	fbstp  TBYTE PTR [esi]
  425adc:	jecxz  0x425af5
  425ade:	and    eax,0xc6b4fe5c
  425ae3:	xchg   esp,eax
  425ae4:	pop    es
  425ae5:	mov    al,0xf
  425ae7:	lahf   
  425ae8:	jmp    0x8d5d:0x8b76da27
  425aef:	imul   BYTE PTR [ebx-0x2f02549d]
  425af5:	xchg   DWORD PTR [edi+0x7814189f],esp
  425afb:	dec    DWORD PTR [esi]
  425afd:	pop    ss
  425afe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425aff:	mov    BYTE PTR ds:0x36ec803c,dh
  425b05:	arpl   sp,di
  425b07:	xor    BYTE PTR ds:0xfcd2629e,al
  425b0d:	call   0xf55a:0x1a4388cc
  425b14:	mov    bh,0x1d
  425b16:	push   es
  425b17:	test   ch,cl
  425b19:	in     eax,dx
  425b1a:	ret    
  425b1b:	xor    eax,0xf47c339f
  425b20:	and    eax,0xb7f60fa3
  425b25:	sbb    eax,0xcb948395
  425b2a:	cmp    bl,BYTE PTR [edx]
  425b2c:	in     eax,0xe2
  425b2e:	mov    esi,0x5c298d28
  425b33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b34:	ja     0x425b88
  425b36:	mov    WORD PTR [edx-0x2006d2d5],ss
  425b3c:	in     eax,0x14
  425b3e:	mov    DWORD PTR [edx+eax*8-0x729fd89c],ebp
  425b45:	bound  edi,QWORD PTR [esi+0x24]
  425b48:	mov    ds:0x5ac67e71,al
  425b4d:	icebp  
  425b4e:	inc    ebx
  425b4f:	inc    edi
  425b50:	cmp    DWORD PTR [edx],ebp
  425b52:	jp     0x425af5
  425b54:	inc    esp
  425b55:	mov    cl,0x6b
  425b57:	adc    BYTE PTR [ebx],al
  425b59:	inc    ebp
  425b5a:	popa   
  425b5b:	dec    ecx
  425b5c:	rol    ebx,cl
  425b5e:	cli    
  425b5f:	push   esi
  425b60:	and    ebx,DWORD PTR [edx-0x240c4210]
  425b66:	inc    esp
  425b67:	outs   dx,DWORD PTR ds:[esi]
  425b68:	pushf  
  425b69:	cs in  al,0x9f
  425b6c:	ret    
  425b6d:	and    BYTE PTR [edx+eiz*2-0x48],ch
  425b71:	xchg   bl,bh
  425b73:	cdq    
  425b74:	fild   DWORD PTR [edi]
  425b76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b77:	sub    al,0x13
  425b79:	sar    DWORD PTR [edx-0x78],0xdb
  425b7d:	inc    edi
  425b7e:	mov    esi,0xa560e36f
  425b83:	xor    al,0x17
  425b85:	mov    ch,0xd8
  425b87:	lods   al,BYTE PTR ds:[esi]
  425b88:	inc    esp
  425b89:	pop    esi
  425b8a:	sub    al,0xd8
  425b8c:	test   eax,0x3841f97e
  425b91:	retf   
  425b92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b93:	push   esp
  425b94:	sub    al,0xbe
  425b96:	clc    
  425b97:	icebp  
  425b98:	mov    ebp,0x5f48ce7d
  425b9d:	jl     0x425b5b
  425b9f:	xchg   ecx,eax
  425ba0:	push   ss
  425ba1:	std    
  425ba2:	and    edi,eax
  425ba4:	push   ds
  425ba5:	in     eax,0x6b
  425ba7:	mov    WORD PTR [edi-0x41af6625],fs
  425bad:	das    
  425bae:	sbb    BYTE PTR [ebp+edi*2-0x5b],bh
  425bb2:	pop    edi
  425bb3:	push   esi
  425bb4:	add    DWORD PTR [edx],ebp
  425bb6:	inc    ebx
  425bb7:	(bad)  
  425bb8:	jae    0x425b75
  425bba:	lea    eax,[edi+0x157d35e5]
  425bc0:	out    0x73,eax
  425bc2:	dec    ebx
  425bc3:	imul   ecx,DWORD PTR [esi],0x2
  425bc6:	push   ebp
  425bc7:	pop    ebx
  425bc8:	lds    eax,FWORD PTR [edi+0x3c3bb01a]
  425bce:	neg    BYTE PTR [eax]
  425bd0:	xchg   esi,eax
  425bd1:	ret    
  425bd2:	adc    DWORD PTR [ecx+0x48],ecx
  425bd5:	mov    bl,0x54
  425bd7:	cld    
  425bd8:	fldenv [edx]
  425bda:	mov    bl,0x43
  425bdc:	mov    ecx,0xb81cd69b
  425be1:	push   eax
  425be2:	mov    al,0x72
  425be4:	cmp    BYTE PTR [ebx+edx*1+0x39f3bbf1],al
  425beb:	in     al,0x84
  425bed:	push   ds
  425bee:	sub    ecx,ebx
  425bf0:	pop    ecx
  425bf1:	adc    DWORD PTR [ebx-0x64],ebx
  425bf4:	jns    0x425c63
  425bf6:	cmp    edx,0xffffffd7
  425bf9:	aam    0x14
  425bfb:	sbb    al,0x66
  425bfd:	jl     0x425c58
  425bff:	dec    esi
  425c00:	rcl    BYTE PTR [edi+0x717fb506],0x96
  425c07:	pusha  
  425c08:	pop    ss
  425c09:	loop   0x425bdf
  425c0b:	add    dl,BYTE PTR fs:[eax+0x32]
  425c0f:	fsubr  DWORD PTR [eax]
  425c11:	inc    eax
  425c12:	push   0x41c33f5d
  425c17:	xchg   edi,eax
  425c18:	xchg   edi,eax
  425c19:	pandn  mm3,QWORD PTR [eax]
  425c1c:	sahf   
  425c1d:	sub    al,0x0
  425c1f:	xor    ah,cl
  425c21:	ss out dx,al
  425c23:	and    ah,BYTE PTR [ebp+edx*1-0x7ead2ad1]
  425c2a:	adc    eax,0x12ef2976
  425c2f:	add    DWORD PTR cs:[ebx+0x74],edx
  425c33:	cmp    BYTE PTR [esi],cl
  425c35:	clc    
  425c36:	fdivr  DWORD PTR ds:0x35add264
  425c3c:	and    cl,BYTE PTR [ebx+0x4c]
  425c3f:	imul   edi,ebp,0xf5b24dd1
  425c45:	fsub   QWORD PTR [edi]
  425c47:	cmp    al,0x22
  425c49:	jno    0x425c62
  425c4b:	xchg   edx,eax
  425c4c:	push   eax
  425c4d:	sbb    eax,DWORD PTR [ebp+0x67accc0f]
  425c53:	test   DWORD PTR [ecx-0x108583aa],0x76b7a99d
  425c5d:	mov    ds:0xc11fed92,al
  425c62:	pusha  
  425c63:	out    dx,eax
  425c64:	(bad)  
  425c65:	out    dx,eax
  425c66:	pop    ss
  425c67:	push   esi
  425c68:	aaa    
  425c69:	mov    dl,0x7
  425c6b:	jne    0x425cb1
  425c6d:	mov    edi,0xf8b420c5
  425c72:	dec    ecx
  425c73:	inc    ecx
  425c74:	pop    ebp
  425c75:	call   0xeb35:0x93d4294e
  425c7c:	shr    DWORD PTR [edx+0x1c],1
  425c7f:	mov    WORD PTR [ebx],es
  425c81:	in     eax,0xa8
  425c83:	popa   
  425c84:	dec    edx
  425c85:	jae    0x425c3a
  425c87:	inc    esi
  425c88:	jmp    0x97a3d8
  425c8d:	fist   DWORD PTR [edx+ebp*8-0x7c]
  425c91:	test   ah,0x2d
  425c94:	sub    al,0x37
  425c96:	xor    ecx,esp
  425c98:	ins    DWORD PTR es:[edi],dx
  425c99:	fsubr  st(3),st
  425c9b:	cld    
  425c9c:	stc    
  425c9d:	jb     0x425cef
  425c9f:	pop    ebx
  425ca0:	jmp    FWORD PTR [edi+0x69]
  425ca3:	mov    ch,dl
  425ca5:	lods   al,BYTE PTR ds:[esi]
  425ca6:	fdiv   DWORD PTR [eax+eax*1]
  425ca9:	jo     0x425c41
  425cab:	inc    edi
  425cac:	fdivr  QWORD PTR [ecx-0x7fa58e96]
  425cb2:	sub    DWORD PTR [edi+0x41],ebx
  425cb5:	std    
  425cb6:	mov    ss,ebp
  425cb8:	cld    
  425cb9:	leave  
  425cba:	lods   al,BYTE PTR ds:[esi]
  425cbb:	mov    esi,0x67cacad
  425cc0:	jge    0x425d36
  425cc2:	jg     0x425d30
  425cc4:	es dec edi
  425cc6:	rcl    BYTE PTR [edi],1
  425cc8:	jae    0x425cbe
  425cca:	pop    edx
  425ccb:	clc    
  425ccc:	test   DWORD PTR [edx+ecx*2-0x54d5a246],ebx
  425cd3:	test   eax,0x733b27e1
  425cd8:	adc    eax,0x52dcec16
  425cdd:	cmp    DWORD PTR [ecx-0x19dda413],0x77
  425ce4:	cld    
  425ce5:	and    ch,BYTE PTR [ecx+0x58ef17f0]
  425ceb:	cmp    DWORD PTR [ebx],eax
  425ced:	fld    DWORD PTR [eax]
  425cef:	dec    eax
  425cf0:	fstp   DWORD PTR [eax+0x5b371bf1]
  425cf6:	push   esp
  425cf7:	(bad)  
  425cf8:	jp     0x425d6a
  425cfa:	lahf   
  425cfb:	frstor [edx-0x22]
  425cfe:	ins    DWORD PTR es:[edi],dx
  425cff:	(bad)  
  425d00:	inc    DWORD PTR [edx]
  425d02:	pop    edi
  425d03:	int3   
  425d04:	sub    DWORD PTR [esi+eax*1+0x58eb2a97],eax
  425d0b:	scas   al,BYTE PTR es:[edi]
  425d0c:	pop    ss
  425d0d:	xchg   DWORD PTR [edi],esi
  425d0f:	jne    0x425cca
  425d11:	jae    0x425d35
  425d13:	cwde   
  425d14:	in     eax,0x3d
  425d16:	xchg   ecx,eax
  425d17:	lods   eax,DWORD PTR ds:[esi]
  425d18:	fstp   DWORD PTR ds:0x1ca321dc
  425d1e:	jmp    0x50ef0ca4
  425d23:	scas   eax,DWORD PTR es:[edi]
  425d24:	jle    0x425d6e
  425d26:	mov    ds:0x59c79668,al
  425d2b:	inc    esp
  425d2c:	mov    ds:0x9714c8f,al
  425d31:	dec    eax
  425d32:	or     BYTE PTR [ecx-0x25],dh
  425d35:	lea    edi,[esi+esi*2-0x1e]
  425d39:	fld    TBYTE PTR [ebx+0x3163500c]
  425d3f:	and    BYTE PTR [esi+0x0],dl
  425d42:	mov    al,0x8a
  425d44:	call   0xfa2657ca
  425d49:	mov    ebx,0x99242062
  425d4e:	cmc    
  425d4f:	in     eax,0xf8
  425d51:	mov    eax,0x1d040
  425d56:	daa    
  425d57:	add    eax,DWORD PTR [eax]
  425d59:	add    BYTE PTR ds:0x4ad6d4cb,bl
  425d5f:	fs or  al,0xc5
  425d62:	mov    ah,0xfc
  425d64:	jge    0x425d34
  425d66:	enter  0xa957,0xe9
  425d6a:	mov    ah,0x7
  425d6c:	std    
  425d6d:	push   0xc1e911e1
  425d72:	popf   
  425d73:	pop    ebx
  425d74:	jno    0x425d00
  425d76:	hlt    
  425d77:	mov    ds,ebx
  425d79:	loopne 0x425df4
  425d7b:	mov    ds:0xf531f10f,al
  425d80:	add    ebx,DWORD PTR [ebx+0x60c5058d]
  425d86:	adc    BYTE PTR [edx-0x14b7bbcb],dh
  425d8c:	addr16 mov edx,0x8c970ba7
  425d92:	aas    
  425d93:	push   edx
  425d94:	in     eax,dx
  425d95:	sub    BYTE PTR [edx-0x7c],bl
  425d98:	retf   
  425d99:	mov    bl,0x5
  425d9b:	int    0xd9
  425d9d:	push   eax
  425d9e:	adc    al,0xdf
  425da0:	xchg   DWORD PTR [eax],ecx
  425da2:	in     al,dx
  425da3:	mov    ds,ecx
  425da5:	aas    
  425da6:	scas   al,BYTE PTR es:[edi]
  425da7:	addr16 int 0xfb
  425daa:	or     al,0xf2
  425dac:	(bad)  
  425dae:	jmp    0x425d82
  425db0:	iret   
  425db1:	inc    esp
  425db2:	scas   al,BYTE PTR es:[edi]
  425db3:	push   ebp
  425db4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425db5:	dec    ebp
  425db6:	dec    ebp
  425db7:	ret    0xcdf0
  425dba:	add    esp,DWORD PTR [edx+eiz*4-0x382b61ef]
  425dc1:	inc    esp
  425dc2:	and    bh,BYTE PTR [edi-0x2aa7b165]
  425dc8:	fisttp QWORD PTR [edx-0x6e]
  425dcb:	cdq    
  425dcc:	das    
  425dcd:	mov    bl,0xae
  425dcf:	fisub  DWORD PTR [esi]
  425dd1:	xchg   ebx,eax
  425dd2:	retf   0x5bef
  425dd5:	or     eax,DWORD PTR [eax]
  425dd7:	loope  0x425de1
  425dd9:	dec    edx
  425dda:	cmp    BYTE PTR [ebx-0x5c],0x3
  425dde:	mov    cl,BYTE PTR [edx-0x1acb48d6]
  425de4:	sub    al,0x64
  425de6:	shr    DWORD PTR [ebp-0x76a702d],1
  425dec:	pop    di
  425dee:	je     0x425e1e
  425df0:	mov    esi,esp
  425df2:	and    dl,bh
  425df4:	dec    esi
  425df5:	ret    0x3a78
  425df8:	ss sub al,0xf
  425dfb:	add    DWORD PTR [esi],eax
  425dfd:	fbstp  TBYTE PTR [edx-0x6d4261b1]
  425e03:	out    dx,eax
  425e04:	into   
  425e05:	(bad)  
  425e06:	adc    ch,BYTE PTR [ebx+0x3cdf3db4]
  425e0c:	mov    eax,0x73c82723
  425e11:	in     al,0x4a
  425e13:	sub    ecx,DWORD PTR [eax+0x5b86de66]
  425e19:	push   edi
  425e1a:	repz push ebx
  425e1c:	mov    al,0xff
  425e1e:	xchg   ah,dl
  425e20:	push   0x81818817
  425e25:	xor    eax,DWORD PTR [edx+0x74]
  425e28:	es adc al,0xdd
  425e2b:	nop
  425e2c:	fs mov bh,0x1
  425e2f:	loopne 0x425e47
  425e31:	jge    0x425e70
  425e33:	jae    0x425ea0
  425e35:	call   0x8ce:0x881ff8cc
  425e3c:	loope  0x425e61
  425e3e:	or     esi,DWORD PTR [esi+0x31ef30e8]
  425e44:	jbe    0x425ea2
  425e46:	add    al,0x51
  425e48:	outs   dx,DWORD PTR ds:[esi]
  425e49:	add    esi,DWORD PTR [ebp-0x19d1bef2]
  425e4f:	pop    ecx
  425e50:	dec    edi
  425e51:	xlat   BYTE PTR ds:[ebx]
  425e52:	jg     0x425df3
  425e54:	xor    eax,0xcbbeb3c1
  425e59:	xchg   DWORD PTR [ecx+0x43],ebx
  425e5c:	and    BYTE PTR [edi],cl
  425e5e:	add    al,BYTE PTR [edi+0x3e]
  425e61:	xor    eax,0x2902f0aa
  425e66:	cmp    al,0x16
  425e68:	jmp    0xacce933f
  425e6d:	loopne 0x425e4a
  425e6f:	pop    edi
  425e70:	adc    esp,esi
  425e72:	jno    0x425e2f
  425e74:	fldcw  WORD PTR [ecx-0x45549a5f]
  425e7a:	or     BYTE PTR [esi+0x4cad86f4],ch
  425e80:	fstp   QWORD PTR [esi]
  425e82:	lods   eax,DWORD PTR ds:[esi]
  425e83:	or     DWORD PTR [ebx+0x716d3abb],0x34
  425e8a:	xlat   BYTE PTR ds:[ebx]
  425e8b:	popw   ss
  425e8d:	mov    dh,0x6c
  425e8f:	(bad)  
  425e90:	pop    edx
  425e91:	mov    bl,0x1d
  425e93:	jg     0x425e17
  425e95:	push   ebx
  425e96:	add    eax,0x63d0a7d3
  425e9b:	mov    bl,0x4a
  425e9d:	fsub   st(4),st
  425e9f:	in     eax,0x96
  425ea1:	mov    eax,0x1fdc1569
  425ea6:	out    dx,eax
  425ea7:	and    BYTE PTR [edx],ch
  425ea9:	int3   
  425eaa:	mov    eax,0x87b54e1b
  425eaf:	inc    ebp
  425eb0:	sbb    BYTE PTR [edi],dl
  425eb2:	out    0x32,al
  425eb4:	push   esi
  425eb5:	mov    esi,DWORD PTR [ebp+0x1f64431a]
  425ebb:	rol    ebp,cl
  425ebd:	push   ss
  425ebe:	cmc    
  425ebf:	lds    edi,FWORD PTR [edx]
  425ec1:	out    0x56,eax
  425ec3:	or     eax,0xdb88e913
  425ec8:	psubusw mm5,QWORD PTR [eax]
  425ecb:	in     al,dx
  425ecc:	xor    eax,0xbffd6336
  425ed1:	fmul   DWORD PTR [ecx-0x52a13536]
  425ed7:	ret    
  425ed8:	das    
  425ed9:	es ret 0x7cdd
  425edd:	out    0x23,al
  425edf:	aas    
  425ee0:	or     al,bh
  425ee2:	mov    ebx,0x95275fbd
  425ee7:	cdq    
  425ee8:	mov    ebx,0x6beee43
  425eed:	sti    
  425eee:	jg     0x425f10
  425ef0:	stos   BYTE PTR es:[edi],al
  425ef1:	or     al,0x6c
  425ef3:	cmp    ebp,DWORD PTR [edi-0x7a32b5bb]
  425ef9:	test   eax,0x48461e38
  425efe:	fsub   DWORD PTR [ebp*1+0x6054f5ad]
  425f05:	sbb    bh,BYTE PTR [edi-0x43]
  425f08:	ins    DWORD PTR es:[edi],dx
  425f09:	(bad)  
  425f0a:	fadd   DWORD PTR [eax-0xb5fc498]
  425f10:	lods   eax,DWORD PTR ds:[esi]
  425f11:	mov    esp,0xe1b23285
  425f16:	(bad)  
  425f17:	dec    eax
  425f18:	les    edi,FWORD PTR [esi+0x1e]
  425f1b:	dec    esp
  425f1c:	cmp    esp,esi
  425f1e:	dec    edi
  425f1f:	xchg   esi,eax
  425f20:	shl    BYTE PTR [edi+eax*8+0x39d972af],0x8a
  425f28:	push   cs
  425f29:	xchg   bh,ch
  425f2b:	pop    ebx
  425f2c:	xlat   BYTE PTR ds:[ebx]
  425f2d:	adc    BYTE PTR [ebp-0x1c8652ed],ch
  425f33:	push   eax
  425f34:	adc    edx,ebx
  425f36:	neg    BYTE PTR [ecx]
  425f38:	rcr    BYTE PTR ds:0xf74bae1e,1
  425f3e:	in     al,dx
  425f3f:	mov    edi,0xe438f053
  425f44:	dec    ebx
  425f45:	push   edx
  425f46:	cmp    ah,BYTE PTR [ecx]
  425f48:	dec    ecx
  425f49:	lods   al,BYTE PTR ds:[esi]
  425f4a:	jl     0x425ed7
  425f4c:	mov    bl,0xe6
  425f4e:	call   0x2cd1:0x967de85f
  425f55:	fnstsw WORD PTR [edx-0x14d0088f]
  425f5b:	xchg   ecx,eax
  425f5c:	add    dh,BYTE PTR [edi+edi*2+0x1e7c9288]
  425f63:	dec    esi
  425f64:	bound  eax,QWORD PTR [ebp+0x5b0b6b9b]
  425f6a:	out    0x77,eax
  425f6c:	xchg   esp,eax
  425f6d:	nop
  425f6e:	ins    DWORD PTR es:[edi],dx
  425f6f:	call   0xc80f:0xdb83a38d
  425f76:	xchg   edi,eax
  425f77:	out    dx,eax
  425f78:	dec    ebx
  425f79:	dec    sp
  425f7b:	jmp    0x87c02a6d
  425f80:	jae    0x425fb8
  425f82:	icebp  
  425f83:	jae    0x425fe0
  425f85:	mov    edi,0xc3546b98
  425f8a:	xchg   dl,ch
  425f8c:	or     DWORD PTR [eax+0x107ff34e],esp
  425f92:	test   al,0xf1
  425f94:	cwde   
  425f95:	push   ebx
  425f96:	lds    eax,FWORD PTR [eax-0x561397cd]
  425f9c:	icebp  
  425f9d:	sub    esp,esi
  425f9f:	mov    gs,edx
  425fa1:	cmc    
  425fa2:	pop    ecx
  425fa3:	and    BYTE PTR [edx+0x4b],0x31
  425fa7:	call   0x8a1d1ca4
  425fac:	(bad)  
  425fae:	stc    
  425faf:	push   edx
  425fb0:	cs (bad) 
  425fb2:	cli    
  425fb3:	mov    ch,0x11
  425fb6:	dec    ebx
  425fb7:	repnz stc 
  425fb9:	fistp  WORD PTR [edx]
  425fbb:	mov    ds:0xe20ca32f,al
  425fc0:	sbb    ebp,DWORD PTR [esi]
  425fc2:	fsubr  QWORD PTR [eax-0x3ce0caed]
  425fc8:	call   0x7c54:0x74cc5b03
  425fcf:	mov    cl,0x65
  425fd1:	fwait
  425fd2:	mov    ch,0x2e
  425fd4:	mov    WORD PTR [edi+0xb],ss
  425fd7:	dec    ebx
  425fd8:	jns    0x425f9e
  425fda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425fdb:	shr    DWORD PTR [edi+edi*2],0xe6
  425fdf:	int3   
  425fe0:	js     0x425fd5
  425fe2:	js     0x425fdf
  425fe4:	jb     0x425fad
  425fe6:	mov    ds:0x12ee0944,al
  425feb:	fidivr DWORD PTR [edx+eiz*8-0x59]
  425fef:	(bad)  
  425ff0:	mov    bh,0xcb
  425ff2:	pop    edx
  425ff3:	iret   
  425ff4:	shl    edi,cl
  425ff6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ff7:	popa   
  425ff8:	dec    eax
  425ff9:	mov    dh,BYTE PTR [esi+0x25]
  425ffc:	push   0xffffffdc
  425ffe:	icebp  
  425fff:	test   ebx,ebp
  426001:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426002:	jge    0x425fd7
  426004:	sbb    eax,0x4671a6ef
  426009:	cmp    DWORD PTR [ebx+esi*1+0x75],esp
  42600d:	ja     0x425fe8
  42600f:	rcl    esp,1
  426011:	mov    eax,0x2ebe8508
  426016:	xlat   BYTE PTR ds:[ebx]
  426017:	pop    ecx
  426018:	pop    ds
  426019:	jg     0x425fc2
  42601b:	xchg   edi,eax
  42601c:	neg    BYTE PTR [edi+0x2a]
  42601f:	int    0x46
  426021:	popf   
  426022:	stos   BYTE PTR es:[edi],al
  426023:	aaa    
  426024:	or     ah,BYTE PTR ds:0x7381125d
  42602a:	inc    edi
  42602b:	ffree  st(7)
  42602d:	xor    ch,BYTE PTR [edx+ebp*2+0x4e]
  426031:	cld    
  426032:	lds    esp,FWORD PTR [ebp+0x16]
  426035:	out    0x8b,al
  426037:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426038:	jne    0x42605e
  42603a:	xchg   edx,eax
  42603b:	scas   eax,DWORD PTR es:[edi]
  42603c:	sub    esp,DWORD PTR [esi+0x74d23bbb]
  426042:	dec    ebp
  426043:	pop    ebx
  426044:	popa   
  426045:	mov    esi,ebp
  426047:	jns    0x42608b
  426049:	mov    al,0x22
  42604b:	pushf  
  42604c:	push   esp
  42604d:	hlt    
  42604e:	inc    esp
  42604f:	cld    
  426050:	cmc    
  426051:	inc    edi
  426052:	lods   eax,DWORD PTR ds:[esi]
  426053:	inc    eax
  426054:	or     al,0x1e
  426056:	push   esi
  426057:	daa    
  426058:	xor    ebp,DWORD PTR [esi+esi*2+0x438e4151]
  42605f:	pop    es
  426060:	sbb    cl,bl
  426062:	xchg   ebp,eax
  426063:	xor    BYTE PTR [ebp-0x58c7c8d4],ah
  426069:	xchg   BYTE PTR [eax-0x9],dl
  42606c:	(bad)  
  42606d:	fisttp WORD PTR [eax+0xe]
  426070:	stc    
  426071:	sub    edx,DWORD PTR [eax]
  426073:	mov    esi,0xa3155a3c
  426078:	rcr    edi,cl
  42607a:	aad    0x28
  42607c:	sub    eax,0x5d6d4217
  426081:	add    BYTE PTR [edx-0x39253b74],cl
  426087:	ficomp DWORD PTR [esi+0x2983e7dc]
  42608d:	mov    WORD PTR [ecx+edi*2-0x2c9875da],?
  426094:	add    DWORD PTR [eax],eax
  426096:	daa    
  426097:	add    eax,DWORD PTR [eax]
  426099:	add    BYTE PTR ds:0xccd84605,bl
  42609f:	fs test eax,0xdd8fe666
  4260a5:	mov    edx,0x1d922555
  4260aa:	js     0x42609f
  4260ac:	mov    ebx,0x39e8ba1d
  4260b1:	(bad)  
  4260b2:	daa    
  4260b3:	sub    eax,0x351650bb
  4260b8:	mov    ecx,0x197a4936
  4260bd:	jmp    0x19dd6bb8
  4260c2:	rcl    BYTE PTR [eax],0x35
  4260c5:	popf   
  4260c6:	out    dx,al
  4260c7:	fcomi  st,st(4)
  4260c9:	pop    es
  4260ca:	mov    dl,0xe2
  4260cc:	push   ebx
  4260cd:	jb     0x4260e5
  4260cf:	inc    ebp
  4260d0:	ror    BYTE PTR [edi],cl
  4260d2:	jns    0x4260ba
  4260d4:	mov    eax,ds:0x1679be4b
  4260d9:	(bad)  
  4260da:	push   cs
  4260db:	ins    DWORD PTR es:[edi],dx
  4260dc:	jno    0x4260bb
  4260de:	hlt    
  4260df:	jg     0x4260d2
  4260e1:	jl     0x4260e4
  4260e3:	outs   dx,DWORD PTR ds:[esi]
  4260e4:	cmc    
  4260e5:	add    bh,0x4f
  4260e8:	xor    BYTE PTR [ecx+0x16bbb00f],ah
  4260ee:	xchg   edi,eax
  4260ef:	pop    edx
  4260f0:	cld    
  4260f1:	mov    al,ds:0xb1c186aa
  4260f6:	dec    eax
  4260f7:	push   esp
  4260f8:	or     BYTE PTR [ecx-0x3a24c23a],0xad
  4260ff:	test   BYTE PTR [ebx-0x4d72e6ea],dh
  426105:	enter  0xf3b6,0x39
  426109:	push   ss
  42610a:	fisubr DWORD PTR ds:0x98b858b5
  426110:	mov    ds:0xb355e314,al
  426115:	add    eax,0xb241973d
  42611a:	mov    al,0x6f
  42611c:	cmp    al,0x8c
  42611e:	jmp    0x4260cf
  426120:	test   al,ah
  426122:	in     eax,dx
  426123:	jo     0x426120
  426125:	test   eax,0x2b6d58ef
  42612a:	repz adc BYTE PTR [bp+di+0x6da6],dl
  426130:	jl     0x4260fa
  426132:	inc    eax
  426133:	mov    esi,0xb2e7ba9a
  426138:	cmp    DWORD PTR [esi-0x383a30e8],0x83360db7
  426142:	jae    0x426182
  426144:	push   es
  426145:	adc    ch,al
  426147:	or     BYTE PTR [ebx],ch
  426149:	sub    ecx,esp
  42614b:	cs adc eax,0x3e3f98f
  426151:	out    0xcf,eax
  426153:	sti    
  426154:	ins    DWORD PTR es:[edi],dx
  426155:	mov    esp,DWORD PTR [esi+0x373a96f1]
  42615b:	into   
  42615c:	mov    edx,0x62df8996
  426161:	xchg   esp,eax
  426162:	inc    edi
  426163:	aas    
  426164:	fild   QWORD PTR [edi-0x7d]
  426167:	or     ebx,DWORD PTR [ebp+0x2961614d]
  42616d:	(bad)  
  42616e:	mov    DWORD PTR [edx-0x4e],edx
  426171:	jbe    0x42616f
  426173:	retf   0xb71c
  426176:	out    0x60,al
  426178:	mov    eax,ds
  42617a:	mov    WORD PTR [edx],cs
  42617c:	imul   eax,DWORD PTR ds:0x1154220c,0xffce5be2
  426186:	mov    DWORD PTR [ebp-0x6bf40d7a],esi
  42618c:	lods   al,BYTE PTR ds:[esi]
  42618d:	mov    ds:0xbc78a70,eax
  426192:	cld    
  426193:	je     0x4261a2
  426195:	dec    esi
  426196:	(bad)  
  426197:	loope  0x426192
  426199:	add    al,0x83
  42619b:	jge    0x426184
  42619d:	mov    ecx,0xab8ac671
  4261a2:	test   al,0x93
  4261a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261a5:	xor    bl,BYTE PTR [esi-0x21b0d64f]
  4261ab:	dec    ebx
  4261ac:	adc    BYTE PTR [esi+0x2e44a15f],cl
  4261b2:	fucomp st(0)
  4261b4:	pop    es
  4261b5:	test   al,0xc8
  4261b7:	fcom   DWORD PTR [edx*8+0x12dc759c]
  4261be:	test   DWORD PTR [ebx+edi*4],ecx
  4261c1:	popa   
  4261c2:	dec    esp
  4261c3:	popa   
  4261c4:	stc    
  4261c5:	push   esp
  4261c6:	aas    
  4261c7:	dec    esi
  4261c8:	setp   BYTE PTR ds:[ebx]
  4261cc:	out    dx,al
  4261cd:	inc    ebx
  4261ce:	js     0x4261c7
  4261d0:	xchg   esp,eax
  4261d1:	std    
  4261d2:	mov    ebx,0x8ae0a0a8
  4261d7:	cmc    
  4261d8:	rcl    ah,0x8a
  4261db:	fdiv   QWORD PTR [edx+eiz*4-0x59]
  4261df:	gs mov ebx,0xddb9b3e6
  4261e5:	or     edi,DWORD PTR [eax+eiz*1+0x6]
  4261e9:	cmp    ah,BYTE PTR [edx]
  4261eb:	xor    al,dl
  4261ed:	ror    BYTE PTR [edi],cl
  4261ef:	sub    al,0xc3
  4261f1:	xchg   ecx,eax
  4261f2:	mov    edx,0x6586306e
  4261f7:	sar    DWORD PTR [ebp+0x58],cl
  4261fa:	xor    DWORD PTR [esi],ecx
  4261fc:	mov    ecx,0x7be5ec07
  426201:	in     al,0x90
  426203:	into   
  426204:	mov    al,ds:0x28c35e98
  426209:	inc    eax
  42620a:	(bad)  
  42620c:	jae    0x42622d
  42620e:	cmp    DWORD PTR [ebx-0x67681b41],esp
  426214:	dec    esp
  426215:	sbb    bl,BYTE PTR [edx-0x1]
  426218:	cmp    al,ch
  42621a:	and    eax,0xf51937ab
  42621f:	dec    ecx
  426220:	idiv   DWORD PTR [eax+0x2e7ee111]
  426226:	mov    dl,0xc
  426228:	xchg   DWORD PTR [eax-0x665b4c3b],edx
  42622e:	sub    bh,al
  426230:	mov    esi,esp
  426232:	jb     0x42625f
  426234:	xchg   ebx,eax
  426235:	xchg   esp,eax
  426236:	and    cl,dh
  426238:	mov    WORD PTR [ecx],?
  42623a:	pushf  
  42623b:	add    al,0xb6
  42623d:	or     DWORD PTR [ebp+edx*2-0x61c9f6b7],0xd
  426245:	inc    esp
  426246:	push   es
  426247:	loop   0x426202
  426249:	push   ebx
  42624a:	outs   dx,BYTE PTR ds:[esi]
  42624b:	sub    BYTE PTR [esi+0x64cb7332],ah
  426251:	icebp  
  426252:	mov    eax,ds:0xe8785703
  426258:	fbstp  TBYTE PTR [ecx]
  42625a:	sahf   
  42625b:	mov    al,0xaf
  42625d:	fldz   
  42625f:	sub    BYTE PTR [ecx-0x3a],0x96
  426263:	jle    0x4262ab
  426265:	xchg   ecx,eax
  426266:	cs test eax,0xb2dfa36
  42626c:	(bad)  
  42626d:	sub    BYTE PTR [ecx-0x72],ah
  426270:	jno    0x426268
  426272:	in     al,dx
  426273:	sahf   
  426274:	scas   al,BYTE PTR es:[edi]
  426275:	jmp    0x4261fe
  426277:	inc    ebp
  426278:	aaa    
  426279:	jns    0x426238
  42627b:	add    cl,al
  42627d:	pop    ebp
  42627e:	xchg   DWORD PTR [ecx],ecx
  426280:	pop    ebx
  426281:	scas   al,BYTE PTR es:[edi]
  426282:	push   edi
  426283:	sbb    BYTE PTR [ebx],0xe1
  426286:	push   ss
  426287:	cmp    BYTE PTR [ebp-0x45b1881],al
  42628d:	stos   DWORD PTR es:[edi],eax
  42628e:	imul   ebx,DWORD PTR [edx+0x5a9cceaa],0x40
  426295:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426296:	ja     0x426278
  426298:	push   ebp
  426299:	fsub   DWORD PTR [edx]
  42629b:	xchg   ebx,eax
  42629c:	call   0x7e60:0xfd0cf083
  4262a3:	dec    esi
  4262a4:	add    al,0xa9
  4262a6:	cmp    DWORD PTR ds:0xcc987e3f,0xfffffff1
  4262ad:	clc    
  4262ae:	jnp    0x426303
  4262b0:	sbb    bh,BYTE PTR [edi]
  4262b2:	hlt    
  4262b3:	rol    DWORD PTR [edx-0x72],cl
  4262b6:	mov    eax,ds:0x966bde75
  4262bb:	mov    al,ds:0x9ed0e460
  4262c0:	push   esi
  4262c1:	nop
  4262c2:	test   DWORD PTR [edx+0x72],ebx
  4262c5:	ret    
  4262c6:	std    
  4262c7:	push   esp
  4262c8:	add    eax,0x9fbb2323
  4262cd:	push   ebx
  4262ce:	std    
  4262cf:	in     al,dx
  4262d0:	jbe    0x4262ad
  4262d2:	jmp    0xde87:0xafc8f33e
  4262d9:	jae    0x426345
  4262db:	fcom   st(6)
  4262dd:	fld    QWORD PTR [ecx+0x6a2e1d11]
  4262e3:	pop    ecx
  4262e4:	adc    eax,0x17d0b63a
  4262e9:	in     al,dx
  4262ea:	push   ebp
  4262eb:	pop    edx
  4262ec:	nop
  4262ed:	ret    0x87ed
  4262f0:	test   eax,0xb9125c24
  4262f5:	pop    esp
  4262f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262f7:	adc    DWORD PTR [edi+0x22],esi
  4262fa:	out    0x25,al
  4262fc:	xchg   edx,eax
  4262fd:	scas   eax,DWORD PTR es:[edi]
  4262fe:	sahf   
  4262ff:	push   esp
  426300:	push   esp
  426301:	and    eax,esp
  426303:	push   esi
  426304:	jecxz  0x426374
  426306:	lds    edx,FWORD PTR [esi+0x53]
  426309:	scas   eax,DWORD PTR es:[edi]
  42630a:	enter  0x31b3,0x7a
  42630e:	les    ebp,FWORD PTR [ecx-0x78]
  426311:	and    DWORD PTR [edx],esi
  426313:	pop    ecx
  426314:	xchg   edi,eax
  426315:	out    dx,al
  426316:	neg    BYTE PTR ds:0x87a957b
  42631c:	sub    cl,BYTE PTR [eax]
  42631e:	ret    0x1cf
  426321:	adc    ah,bh
  426323:	data16 cmc 
  426325:	xor    bl,0x58
  426328:	push   esp
  426329:	sti    
  42632a:	outs   dx,DWORD PTR ds:[esi]
  42632b:	xlat   BYTE PTR ds:[ebx]
  42632c:	jecxz  0x426323
  42632e:	xor    dl,BYTE PTR [edi-0x58]
  426331:	add    al,0xb1
  426333:	xchg   esi,eax
  426334:	sbb    BYTE PTR ss:[eax],0xdb
  426338:	jne    0x4262f2
  42633a:	(bad)  
  42633b:	std    
  42633c:	(bad)
  426340:	jno    0x426336
  426342:	mov    edi,0x6c229cb6
  426347:	jne    0x4262cc
  426349:	adc    eax,DWORD PTR [ebx-0x5a126b12]
  42634f:	jo     0x426386
  426351:	add    esp,DWORD PTR [edx-0x25e1e64c]
  426357:	sbb    edi,DWORD PTR [edi]
  426359:	cmp    eax,DWORD PTR [eax+0x63]
  42635c:	sbb    DWORD PTR [edi],ebx
  42635e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42635f:	mov    bh,0xb8
  426361:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426362:	mov    ds:0x149ce283,eax
  426367:	mov    bh,0xe7
  426369:	cli    
  42636a:	sub    DWORD PTR [ecx-0x7],esi
  42636d:	fst    DWORD PTR [eax]
  42636f:	mov    BYTE PTR [edx+0x458765d1],bl
  426375:	inc    edx
  426376:	sti    
  426377:	enter  0xb2f,0x58
  42637b:	lods   eax,DWORD PTR ds:[esi]
  42637c:	gs icebp 
  42637e:	push   0xc07f2794
  426383:	clc    
  426384:	cs ins BYTE PTR es:[edi],dx
  426386:	inc    BYTE PTR [edi+esi*1]
  426389:	rcr    DWORD PTR [ebx-0x51c8f537],0x88
  426390:	lock iret 
  426392:	dec    esi
  426393:	jg     0x4263c7
  426395:	hlt    
  426396:	pop    ss
  426397:	or     BYTE PTR [eax],cl
  426399:	sub    cl,BYTE PTR [eax+0x1f45fa4c]
  42639f:	js     0x426358
  4263a1:	rcr    DWORD PTR [eax],1
  4263a3:	adc    al,0x4
  4263a5:	sar    BYTE PTR [esi-0x16],1
  4263a8:	dec    esi
  4263a9:	(bad)  
  4263ab:	cmp    al,0xa6
  4263ad:	call   0x6747:0x69cafdcf
  4263b4:	or     DWORD PTR [edx],esp
  4263b6:	mov    ds:0x34b60436,al
  4263bb:	mov    edx,DWORD PTR [esp+ebx*2+0x4f]
  4263bf:	mov    ch,0x95
  4263c1:	add    BYTE PTR [eax-0x56],al
  4263c4:	pop    edx
  4263c5:	sbb    bh,dl
  4263c7:	cli    
  4263c8:	inc    eax
  4263c9:	cli    
  4263ca:	outs   dx,BYTE PTR ds:[esi]
  4263cb:	jmp    0xd2de:0x4b9ce400
  4263d2:	mov    ss,esi
  4263d4:	add    DWORD PTR [eax],eax
  4263d6:	daa    
  4263d7:	add    eax,DWORD PTR [eax]
  4263d9:	add    BYTE PTR [eax-0x71ca803b],bh
  4263df:	cmp    eax,esi
  4263e1:	repz push es
  4263e3:	mov    ds:0x8fb3b995,al
  4263e8:	retf   0x258f
  4263eb:	bound  ebx,QWORD PTR [esp+eiz*8-0x14]
  4263ef:	out    dx,al
  4263f0:	or     edi,DWORD PTR [edx+0x34dc710f]
  4263f6:	jb     0x426405
  4263f8:	adc    al,0x97
  4263fa:	nop
  4263fb:	out    dx,al
  4263fc:	pop    ebx
  4263fd:	mov    ah,0x72
  4263ff:	pop    ds
  426400:	push   ds
  426401:	(bad)  
  426402:	std    
  426403:	(bad)  
  426404:	pop    ecx
  426405:	pop    eax
  426406:	xchg   esi,eax
  426407:	jle    0x426437
  426409:	dec    ebp
  42640a:	xor    al,0x1
  42640c:	inc    eax
  42640d:	dec    ecx
  42640e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42640f:	mov    al,ds:0x1fa1c219
  426414:	fdivp  st(0),st
  426416:	inc    edi
  426417:	or     dl,BYTE PTR [edi+0x73b266e3]
  42641d:	shl    DWORD PTR [ebx+0x13f13c04],0xef
  426424:	or     esp,esi
  426426:	nop
  426427:	fsub   QWORD PTR [ebx-0x3c445003]
  42642d:	push   ds
  42642e:	and    eax,0x4159ce0
  426433:	rcr    BYTE PTR [ecx+0x4a],1
  426436:	or     dl,ah
  426438:	aas    
  426439:	add    cl,BYTE PTR [esi+0x36]
  42643c:	xor    dh,BYTE PTR [ebx+0x24319aa2]
  426442:	or     edx,DWORD PTR [edi+0x481d1916]
  426448:	or     eax,0x68502496
  42644d:	ffreep st(0)
  42644f:	fstp   TBYTE PTR [ebp+0x46925348]
  426455:	dec    eax
  426456:	inc    esp
  426457:	or     edx,DWORD PTR [edi]
  426459:	mov    ah,0x66
  42645b:	enter  0x4777,0xac
  42645f:	gs cdq 
  426461:	inc    ecx
  426462:	mov    eax,ds:0x1051b21d
  426467:	jecxz  0x42647f
  426469:	in     al,dx
  42646a:	pop    ecx
  42646b:	xor    BYTE PTR [edx],ch
  42646d:	lea    esi,[edx]
  42646f:	shl    DWORD PTR [eax+0xc],cl
  426472:	ficom  WORD PTR [edx+0x8]
  426475:	in     eax,dx
  426476:	repz jp 0x426412
  426479:	and    eax,0x50e053ce
  42647e:	ret    0x362d
  426481:	cmp    ah,bl
  426483:	aas    
  426484:	push   ds
  426485:	adc    al,BYTE PTR [ebx-0x7da518e5]
  42648b:	push   0x17a62398
  426490:	xor    BYTE PTR [edx-0x28562c0],0x8e
  426497:	inc    ecx
  426498:	and    ebp,DWORD PTR [edx+0x18fbaa98]
  42649e:	adc    DWORD PTR [ebx+0x2090a1bd],eax
  4264a4:	mov    WORD PTR [edx],ds
  4264a6:	rcl    dl,0xba
  4264a9:	std    
  4264aa:	cmp    DWORD PTR [edx-0x40191c22],eax
  4264b0:	xchg   edx,eax
  4264b1:	test   BYTE PTR [ebx-0x30],ah
  4264b4:	gs cmc 
  4264b6:	in     eax,0xea
  4264b8:	and    esi,eax
  4264ba:	jecxz  0x42648b
  4264bc:	fidivr WORD PTR [edi-0x23ba0100]
  4264c2:	test   DWORD PTR [eax+0x53df88c8],esi
  4264c8:	cwde   
  4264c9:	jne    0x4264aa
  4264cb:	add    edx,ebp
  4264cd:	lahf   
  4264ce:	push   edx
  4264cf:	mov    bl,0xf5
  4264d1:	fucomi st,st(3)
  4264d3:	mov    esp,0xffeb1080
  4264d8:	inc    eax
  4264d9:	es popf 
  4264db:	das    
  4264dc:	jnp    0x426463
  4264de:	repz test eax,0xc9ebe1ff
  4264e4:	sub    al,0x2b
  4264e6:	bound  edi,QWORD PTR [esi-0x28c4a695]
  4264ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4264ed:	jns    0x426496
  4264ef:	and    al,0x8b
  4264f1:	inc    ebx
  4264f2:	or     cl,ah
  4264f4:	gs pop ebx
  4264f6:	lods   al,BYTE PTR ds:[esi]
  4264f7:	sahf   
  4264f8:	outs   dx,BYTE PTR ds:[esi]
  4264f9:	stc    
  4264fa:	mov    DWORD PTR [edx+0x44],esi
  4264fd:	mov    ah,0x6
  4264ff:	lea    ecx,[edi+0x709262fb]
  426505:	or     bh,dh
  426507:	je     0x426491
  426509:	lods   al,BYTE PTR ds:[esi]
  42650a:	cmc    
  42650b:	ins    BYTE PTR es:[edi],dx
  42650c:	and    ecx,edx
  42650e:	test   ecx,esp
  426510:	mov    ds:0xc5539074,eax
  426515:	pop    ebx
  426516:	jmp    0x426594
  426518:	fs mov esi,0x592bd187
  42651e:	ins    DWORD PTR es:[edi],dx
  42651f:	mov    ecx,?
  426521:	sub    BYTE PTR [ecx+0x24],dl
  426524:	sub    DWORD PTR [esi],ecx
  426526:	std    
  426527:	iret   
  426528:	push   es
  426529:	pushf  
  42652a:	sbb    al,BYTE PTR [eax+0x46]
  42652d:	lods   eax,DWORD PTR ds:[esi]
  42652e:	or     eax,0xa18551a9
  426533:	out    dx,al
  426534:	mov    ds:0x9d9d8ee7,al
  426539:	adc    ch,ch
  42653b:	loop   0x426550
  42653d:	xlat   BYTE PTR ds:[ebx]
  42653e:	ficomp DWORD PTR [ecx+0x3d]
  426541:	pushf  
  426542:	jns    0x426503
  426544:	jle    0x4264eb
  426546:	cdq    
  426547:	ss pop edi
  426549:	mov    ?,WORD PTR [edi]
  42654b:	inc    edx
  42654c:	loopne 0x426588
  42654e:	and    ebx,DWORD PTR [eax-0x3954f5ec]
  426554:	loop   0x426593
  426556:	inc    edx
  426557:	inc    eax
  426558:	mov    ah,0x61
  42655a:	and    BYTE PTR [edx-0xf68fe55],cl
  426560:	pop    edi
  426561:	int    0x91
  426563:	dec    eax
  426564:	mov    al,ds:0x8e0a741e
  426569:	data16 sub cl,BYTE PTR fs:[edi-0x776024b]
  426571:	imul   edi,DWORD PTR [esi+0x3d],0xffffffe6
  426575:	sbb    eax,0xa6376cf7
  42657a:	sbb    BYTE PTR ds:0xe9620def,bh
  426580:	sbb    eax,0x7c4cd995
  426585:	outs   dx,DWORD PTR ds:[esi]
  426586:	stos   BYTE PTR es:[edi],al
  426587:	retf   
  426588:	xor    DWORD PTR [ebx],0x44de706a
  42658e:	ins    BYTE PTR es:[edi],dx
  42658f:	loopne 0x42654b
  426591:	fs push esi
  426593:	pop    es
  426594:	mov    eax,ds:0x732b2ceb
  426599:	push   ecx
  42659a:	xchg   ebp,eax
  42659b:	add    eax,0xe8dcb16e
  4265a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4265a1:	jg     0x42661c
  4265a3:	sahf   
  4265a4:	outs   dx,DWORD PTR ds:[esi]
  4265a5:	ja     0x4265d1
  4265a7:	pusha  
  4265a8:	cdq    
  4265a9:	nop
  4265aa:	lods   al,BYTE PTR ds:[esi]
  4265ab:	jno    0x4265d9
  4265ad:	adc    eax,0xe37c37b4
  4265b2:	or     eax,0x8fca20cb
  4265b7:	in     al,0x8b
  4265b9:	mov    esi,0xbe28d446
  4265be:	cld    
  4265bf:	les    edx,FWORD PTR [eax-0x2c]
  4265c2:	cmp    ecx,0xffffff90
  4265c5:	ds inc esp
  4265c7:	add    BYTE PTR [edi-0x62864f21],dl
  4265cd:	rol    BYTE PTR [ebx+0x2a695b62],cl
  4265d3:	and    bl,bh
  4265d5:	jmp    0xd72986d4
  4265da:	dec    esp
  4265db:	popa   
  4265dc:	and    eax,0x19929b10
  4265e1:	cmp    dl,al
  4265e3:	in     al,0x51
  4265e5:	inc    edi
  4265e6:	out    dx,al
  4265e7:	aas    
  4265e8:	adc    ebx,esi
  4265ea:	add    esi,DWORD PTR [ecx-0x541c3dfa]
  4265f0:	retf   0x6c78
  4265f3:	adc    al,BYTE PTR ds:0x827a4771
  4265f9:	cmp    esp,DWORD PTR [bx]
  4265fc:	shl    DWORD PTR [esi],0x52
  4265ff:	outs   dx,BYTE PTR ds:[esi]
  426600:	cld    
  426601:	ss pop ecx
  426603:	or     eax,0xb36e3658
  426608:	push   esp
  426609:	retf   0xce8c
  42660c:	or     ah,BYTE PTR [eax-0x7aca02e9]
  426612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426613:	jmp    0xdfbc0359
  426618:	inc    ebp
  426619:	scas   al,BYTE PTR es:[edi]
  42661a:	call   0xf810:0x57144082
  426621:	jmp    0x5530:0x40f92695
  426628:	dec    ecx
  426629:	add    DWORD PTR [esi],ebp
  42662b:	mov    dl,0xcf
  42662d:	ret    0xe9db
  426630:	inc    esp
  426631:	or     DWORD PTR [edi+0x1e961e1],edx
  426637:	inc    esp
  426638:	es pop ss
  42663a:	enter  0xd234,0x74
  42663e:	cwde   
  42663f:	dec    ecx
  426640:	push   edx
  426641:	fidiv  DWORD PTR [esi-0x67]
  426644:	call   0x7c6c:0xb58922e7
  42664b:	out    dx,al
  42664c:	xchg   ebx,eax
  42664d:	pop    ebp
  42664e:	inc    esi
  42664f:	inc    ecx
  426650:	push   cs
  426651:	daa    
  426652:	sub    al,0x98
  426654:	cdq    
  426655:	mov    bh,0x2b
  426658:	sbb    ebp,DWORD PTR [ecx]
  42665a:	or     cl,dl
  42665c:	shl    BYTE PTR [ecx+0x54],0xcd
  426660:	ss and al,0xa3
  426663:	push   edi
  426664:	(bad)  
  426665:	cli    
  426666:	push   cs
  426667:	ja     0x426667
  426669:	xchg   ebx,eax
  42666a:	pop    ebp
  42666b:	pop    es
  42666c:	mov    ah,0xdb
  42666e:	inc    ebp
  42666f:	repnz dec eax
  426671:	mov    ebp,0xb403ec3e
  426676:	clc    
  426677:	out    0xea,eax
  426679:	gs call 0xd6226b5b
  42667f:	mov    WORD PTR ds:0xa39771d7,cs
  426685:	jmp    0x533:0x9d8188de
  42668c:	repz shl edx,1
  42668f:	jne    0x426618
  426691:	and    al,0xfb
  426693:	pop    edi
  426694:	pop    edi
  426695:	mov    cl,0xd8
  426697:	inc    edi
  426698:	xor    eax,ecx
  42669a:	nop
  42669b:	lahf   
  42669c:	in     al,0x1a
  42669e:	jno    0x42667c
  4266a0:	mov    gs,WORD PTR [ecx+ebx*1]
  4266a3:	jb     0x4266c3
  4266a5:	retf   0xe099
  4266a8:	xchg   DWORD PTR [edx+0x1d],ebp
  4266ab:	push   esi
  4266ac:	shl    BYTE PTR [eax-0x56],cl
  4266af:	mov    eax,ds:0xf016b057
  4266b4:	push   ss
  4266b5:	repz out dx,al
  4266b7:	pop    esp
  4266b8:	retf   0x8f81
  4266bb:	jecxz  0x426739
  4266bd:	(bad)  
  4266be:	ins    DWORD PTR es:[edi],dx
  4266bf:	mov    edx,0xeff9f17f
  4266c4:	xlat   BYTE PTR ds:[ebx]
  4266c5:	xlat   BYTE PTR ds:[ebx]
  4266c6:	fwait
  4266c7:	or     BYTE PTR [eax],ah
  4266c9:	and    BYTE PTR [edx+0x18b9ce65],ch
  4266cf:	int3   
  4266d0:	idiv   BYTE PTR [edi-0x62]
  4266d3:	cmp    ebp,0x727a0d81
  4266d9:	das    
  4266da:	sub    DWORD PTR [edx],esp
  4266dc:	stos   BYTE PTR es:[edi],al
  4266dd:	(bad)  
  4266df:	push   cs
  4266e0:	test   al,0x29
  4266e2:	cdq    
  4266e3:	sub    al,0x90
  4266e5:	jle    0x42675b
  4266e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266e8:	ja     0x426688
  4266ea:	fiadd  WORD PTR [ebp+0x51]
  4266ed:	inc    ebp
  4266ee:	test   BYTE PTR [ebx-0x2b59b891],ah
  4266f4:	sbb    DWORD PTR [bx-0x35],esp
  4266f8:	cmp    cl,ch
  4266fa:	test   BYTE PTR [ebx+0x4c38d89a],cl
  426700:	adc    al,BYTE PTR [eax]
  426702:	mov    dh,0xe4
  426704:	xlat   BYTE PTR ds:[ebx]
  426705:	push   esp
  426706:	xlat   BYTE PTR ds:[ebx]
  426707:	ja     0x4266c0
  426709:	out    0xf3,al
  42670b:	ss icebp 
  42670d:	mov    esp,0x3bac75bf
  426712:	mov    ch,0xd9
  426714:	add    DWORD PTR [eax],eax
  426716:	daa    
  426717:	add    eax,DWORD PTR [eax]
  426719:	add    BYTE PTR [ebx],bl
  42671b:	js     0x4266e2
  42671d:	mov    bh,0xd8
  42671f:	pop    es
  426720:	popa   
  426721:	fistp  QWORD PTR [eiz*4+0x319f37d1]
  426728:	addr16 inc ebx
  42672a:	int3   
  42672b:	pop    ds
  42672c:	add    ebp,DWORD PTR [edx]
  42672e:	jnp    0x426738
  426730:	(bad)  
  426731:	jg     0x4266de
  426733:	pop    ds
  426734:	mov    ebp,0xce2e6f72
  426739:	bound  ecx,QWORD PTR [ebp+0x68e1cd17]
  42673f:	pop    ecx
  426740:	dec    esp
  426741:	or     al,bh
  426743:	js     0x426724
  426745:	mov    dh,0xac
  426747:	xlat   BYTE PTR ds:[ebx]
  426748:	xor    al,BYTE PTR [edx-0x3c730d98]
  42674e:	xor    eax,0xbb4ecb62
  426753:	fstp   TBYTE PTR [eax+esi*1-0x14e696ef]
  42675a:	xor    al,BYTE PTR [ebp+ecx*1+0x716d65a]
  426761:	add    al,0xc3
  426763:	leave  
  426764:	mov    esp,0x1b372cb
  426769:	jg     0x4267e3
  42676b:	in     al,0x45
  42676d:	es cmp ah,cl
  426770:	pop    es
  426771:	pop    es
  426772:	jb     0x4267bc
  426774:	push   cs
  426775:	cmc    
  426776:	mov    ch,BYTE PTR [edx-0x52]
  426779:	ja     0x42670b
  42677b:	sub    eax,0xdb835848
  426780:	dec    esp
  426781:	scas   eax,DWORD PTR es:[edi]
  426782:	ror    BYTE PTR [edx],1
  426784:	mov    ds:0x6ed97354,al
  426789:	push   esi
  42678a:	add    cl,dh
  42678c:	outs   dx,DWORD PTR ds:[esi]
  42678d:	dec    eax
  42678e:	pop    es
  42678f:	pop    edi
  426790:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426791:	ja     0x426808
  426793:	cmp    al,0x6
  426795:	dec    ecx
  426796:	adc    BYTE PTR [esi-0x11400475],dl
  42679c:	jmp    0x6936:0x83d66674
  4267a3:	jp     0x426766
  4267a5:	mov    ds:0x715be6d4,al
  4267aa:	dec    ecx
  4267ab:	mov    edx,0xf80e6f8d
  4267b0:	mov    dl,0x91
  4267b2:	jmp    0x7dc0:0x3fe16f57
  4267b9:	daa    
  4267ba:	jg     0xf9579414
  4267c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267c1:	sar    esp,0x54
  4267c4:	mov    ah,0x3f
  4267c6:	sbb    esi,DWORD PTR [ebp+0x42f7f77e]
  4267cc:	jns    0x4267e3
  4267ce:	sbb    eax,DWORD PTR [ebp-0x3f]
  4267d1:	cmp    BYTE PTR [edi],ah
  4267d3:	pop    ecx
  4267d4:	popf   
  4267d5:	pusha  
  4267d6:	jl     0x4267c6
  4267d8:	mov    ds:0x24045eae,eax
  4267dd:	inc    ebp
  4267de:	dec    esi
  4267df:	xchg   DWORD PTR [edi+0x69],ecx
  4267e2:	or     ebx,DWORD PTR ds:0x4b3848ed
  4267e8:	(bad)
  4267eb:	sti    
  4267ec:	leave  
  4267ed:	inc    esi
  4267ee:	call   0xf632a3b
  4267f3:	push   ebx
  4267f4:	sub    DWORD PTR [ebx-0x23],eax
  4267f7:	out    0xf2,al
  4267f9:	xchg   esp,eax
  4267fa:	push   ds
  4267fb:	mov    cl,0x2e
  4267fd:	push   ebp
  4267fe:	in     eax,0xd2
  426800:	jge    0x42685b
  426802:	cmp    al,0x51
  426804:	sbb    dh,0x6d
  426807:	jp     0x42684b
  426809:	pushf  
  42680a:	sub    al,0xe3
  42680c:	mov    cl,0xdd
  42680e:	pop    es
  42680f:	dec    eax
  426810:	fsubr  DWORD PTR [eax]
  426812:	repnz imul ecx,DWORD PTR [ecx+0x74],0x6e
  426817:	dec    ecx
  426818:	sub    esi,esp
  42681a:	sbb    eax,esp
  42681c:	or     BYTE PTR [ecx],0xb0
  42681f:	mov    eax,0xb5ca21c5
  426824:	push   es
  426825:	mov    ebx,0x723b018c
  42682a:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  42682c:	sbb    BYTE PTR [ebx-0x1baff591],0xe0
  426833:	xor    ebp,DWORD PTR [edx]
  426835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426836:	ins    DWORD PTR es:[edi],dx
  426837:	les    ecx,FWORD PTR [edi]
  426839:	fmul   DWORD PTR [eax]
  42683b:	adc    bh,BYTE PTR [eax-0x576c8964]
  426841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426842:	add    bh,dl
  426844:	test   ah,ah
  426846:	push   es
  426847:	dec    ecx
  426848:	inc    ebp
  426849:	ret    0x9099
  42684c:	push   edx
  42684d:	push   ebx
  42684e:	ret    
  42684f:	mov    ah,BYTE PTR [edx-0x3f]
  426852:	int3   
  426853:	mov    ebx,0x399df76d
  426858:	mov    BYTE PTR [ecx+0x4c],ch
  42685b:	mov    esi,0xd6e78d39
  426860:	jg     0x4268a6
  426862:	add    bh,bl
  426864:	jmp    0x4268bd
  426866:	cmp    ah,bl
  426868:	test   eax,0xa3262760
  42686d:	lea    ecx,[ecx-0x13465183]
  426873:	mov    DWORD PTR [edx+esi*4+0x7a],ebp
  426877:	mov    ds:0x67d67195,al
  42687c:	and    eax,0x342d8eca
  426881:	test   al,0x18
  426883:	push   0xffffff98
  426885:	lea    esp,[esp+eax*8]
  426888:	out    dx,eax
  426889:	test   WORD PTR [esi+0x2abbb24],si
  426890:	add    ah,dh
  426892:	adc    dl,bl
  426894:	mov    cl,0x54
  426896:	lea    esi,[ebp+0x2f]
  426899:	bound  ebp,QWORD PTR [ebp+edx*8-0x8007d6a]
  4268a0:	push   ebx
  4268a1:	in     eax,0x71
  4268a3:	shl    ch,cl
  4268a5:	imul   eax,DWORD PTR ds:0xabd0e5b4,0x732a6d3f
  4268af:	(bad)  
  4268b1:	test   DWORD PTR [edx],eax
  4268b3:	dec    edi
  4268b4:	fild   QWORD PTR [esi+0x53079891]
  4268bb:	ror    DWORD PTR [esi+0x61],1
  4268be:	sbb    BYTE PTR [esi+ebp*4],dh
  4268c1:	inc    ebp
  4268c2:	sbb    DWORD PTR [ecx+0x5f926428],edx
  4268c8:	add    dh,bl
  4268ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268cb:	sbb    ecx,DWORD PTR [eax+0x10]
  4268ce:	(bad)  
  4268cf:	fistp  QWORD PTR ds:0x302b1bc7
  4268d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4268d6:	push   edx
  4268d7:	inc    ebx
  4268d8:	vmwrite esp,DWORD PTR [esp+esi*4-0x385e5e90]
  4268e0:	jns    0x4268d5
  4268e2:	dec    ebp
  4268e3:	inc    eax
  4268e4:	fidiv  WORD PTR [edx+0x6f]
  4268e7:	fild   WORD PTR [esi]
  4268e9:	jge    0x4268b9
  4268eb:	out    dx,al
  4268ec:	int3   
  4268ed:	sbb    eax,DWORD PTR [edi+0x7387158a]
  4268f3:	ja     0x426878
  4268f5:	daa    
  4268f6:	mov    esp,0x2d755e
  4268fb:	push   edx
  4268fc:	inc    ebx
  4268fd:	(bad)  
  4268ff:	push   eax
  426900:	das    
  426901:	clc    
  426902:	test   eax,0x79734065
  426907:	call   0x5b30:0xad930546
  42690e:	mov    esi,0x2b1a9245
  426913:	imul   DWORD PTR [edx]
  426915:	enter  0x434b,0x41
  426919:	and    edi,ecx
  42691b:	add    ebx,edi
  42691d:	ins    BYTE PTR es:[edi],dx
  42691e:	in     eax,dx
  42691f:	xor    di,WORD PTR [ebx-0x3b]
  426923:	aad    0xfb
  426925:	jns    0x426932
  426927:	das    
  426928:	sub    eax,0x70072ab9
  42692d:	cmp    bh,BYTE PTR [esp+edx*2+0x1a]
  426931:	jno    0x426961
  426933:	and    BYTE PTR ds:0x2a02a6c9,cl
  426939:	mov    ecx,0x2ebb1fc5
  42693e:	xchg   ebx,eax
  42693f:	aaa    
  426940:	inc    si
  426942:	pusha  
  426943:	and    DWORD PTR [esi+esi*1-0x24],eax
  426947:	ret    0x5242
  42694a:	fadd   DWORD PTR [esi]
  42694c:	add    DWORD PTR [edx+ebx*8],edx
  42694f:	mov    WORD PTR [ecx],ds
  426951:	test   DWORD PTR [ebp-0x14c94419],ecx
  426957:	mov    ecx,0x615a6526
  42695c:	jle    0x4269d5
  42695e:	outs   dx,DWORD PTR ds:[esi]
  42695f:	xor    eax,0xbfd16d5e
  426964:	loopne 0x4269ac
  426966:	mov    WORD PTR [ecx],?
  426968:	ret    0x4c79
  42696b:	call   0x8a7ea56c
  426970:	pusha  
  426971:	push   esp
  426972:	fsubr  st(3),st
  426974:	test   BYTE PTR [edx],ch
  426976:	in     eax,dx
  426977:	shl    BYTE PTR [esi],cl
  426979:	call   0x29d6:0x65a06897
  426980:	aam    0x1b
  426982:	in     al,dx
  426983:	mov    cl,0x49
  426985:	outs   dx,DWORD PTR ds:[esi]
  426986:	pop    ebx
  426987:	mul    BYTE PTR [edx]
  426989:	push   edx
  42698a:	scas   al,BYTE PTR es:[edi]
  42698b:	call   0xa4d94a0
  426990:	sbb    bl,cl
  426992:	mov    ebx,0xe7c6d6fc
  426997:	xchg   esi,eax
  426998:	cmp    esp,DWORD PTR [ebx+0x29d0f72a]
  42699e:	mov    ch,0x1a
  4269a0:	fwait
  4269a1:	push   esi
  4269a2:	pop    edx
  4269a3:	and    al,BYTE PTR [ecx]
  4269a5:	retf   0x4648
  4269a8:	cmp    al,0xd1
  4269aa:	sti    
  4269ab:	int    0xd4
  4269ad:	in     eax,0xa3
  4269af:	add    BYTE PTR [eax],dl
  4269b1:	sub    eax,0x95e9a6b8
  4269b6:	xchg   ebp,eax
  4269b7:	cmp    DWORD PTR [esi],edi
  4269b9:	fisttp DWORD PTR [eax]
  4269bb:	rol    BYTE PTR [edi],1
  4269bd:	add    ah,BYTE PTR [edi+ebp*4+0x74331d43]
  4269c4:	pop    esp
  4269c5:	mov    eax,ds:0x294484b2
  4269ca:	sbb    al,0xd2
  4269cc:	fild   DWORD PTR [ecx+0x1630dac7]
  4269d2:	mov    ch,0xdf
  4269d4:	push   edx
  4269d5:	cmp    cl,bh
  4269d7:	jbe    0x4269e8
  4269d9:	mov    esp,0xa562ece9
  4269de:	ja     0x4269f1
  4269e0:	mov    edi,0xa02ff8f4
  4269e5:	xor    al,0xaf
  4269e7:	cli    
  4269e8:	aam    0x15
  4269ea:	lea    esi,[edi]
  4269ec:	sti    
  4269ed:	sbb    ch,bh
  4269ef:	mov    ebx,esi
  4269f1:	mov    eax,ds:0x73b2728b
  4269f6:	mov    ah,0x99
  4269f8:	pop    edi
  4269f9:	jno    0x4269b7
  4269fb:	pushf  
  4269fc:	clc    
  4269fd:	daa    
  4269fe:	pop    ebp
  4269ff:	adc    ecx,DWORD PTR [edi+0x1e]
  426a02:	ret    0x3b02
  426a05:	(bad)  
  426a06:	xchg   esp,eax
  426a07:	mov    dh,0xb2
  426a09:	and    bl,BYTE PTR [edi+0x216cd72]
  426a0f:	jmp    0x1b34a90f
  426a14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a15:	or     BYTE PTR [esi-0x71637cff],bh
  426a1b:	cmp    DWORD PTR [ecx-0x6e],ecx
  426a1e:	out    dx,al
  426a1f:	jecxz  0x426a03
  426a21:	out    dx,eax
  426a22:	mov    eax,ds:0x3f40e850
  426a27:	pop    edi
  426a28:	ficom  DWORD PTR [ebp+0x5c]
  426a2b:	daa    
  426a2c:	xchg   ebp,eax
  426a2d:	xor    esp,DWORD PTR [edi-0x51]
  426a30:	push   eax
  426a31:	(bad)  
  426a32:	nop
  426a33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a34:	jmp    0x426a50
  426a36:	jmp    0xce89:0x8fdac65f
  426a3d:	add    DWORD PTR [edi+0x1b],0x24
  426a41:	add    dl,bh
  426a43:	rcl    DWORD PTR ds:0xfac73d07,cl
  426a49:	push   DWORD PTR ds:0xb41c7bfe
  426a4f:	dec    ebx
  426a50:	aad    0x4b
  426a52:	(bad)  
  426a54:	add    DWORD PTR [eax],eax
  426a56:	daa    
  426a57:	add    eax,DWORD PTR [eax]
  426a59:	add    BYTE PTR [edi],cl
  426a5b:	ins    DWORD PTR es:[edi],dx
  426a5c:	cmp    ebx,DWORD PTR [edi-0x50]
  426a5f:	aas    
  426a60:	shl    BYTE PTR [eax-0x73],0xfd
  426a64:	mul    DWORD PTR [eax]
  426a66:	xchg   esp,eax
  426a67:	mov    al,0xca
  426a69:	adc    ebp,0xf3499770
  426a6f:	or     edi,0x5da2e455
  426a75:	(bad)  
  426a77:	in     al,0x2d
  426a79:	(bad)  
  426a7a:	enter  0x5f7f,0xcc
  426a7e:	sbb    BYTE PTR [eax],0x96
  426a81:	pop    edi
  426a82:	xchg   ecx,eax
  426a83:	imul   ebx,DWORD PTR [ebx],0xee8f60e4
  426a89:	fbld   TBYTE PTR [edi+0x297ef1ea]
  426a8f:	fstp   DWORD PTR [edi+0xb499642]
  426a95:	fs dec esp
  426a97:	xchg   ecx,eax
  426a98:	aam    0xec
  426a9a:	out    dx,eax
  426a9b:	dec    esi
  426a9c:	nop
  426a9d:	mov    eax,0x44168b2a
  426aa2:	fisttp DWORD PTR ds:0xc3612673
  426aa8:	into   
  426aa9:	pop    ss
  426aaa:	push   0xf93a2ccd
  426aaf:	inc    ebp
  426ab0:	sub    ah,dl
  426ab2:	mov    eax,0xde5b3aab
  426ab7:	xor    eax,0x96609c65
  426abc:	stc    
  426abd:	push   eax
  426abe:	pop    ecx
  426abf:	cmp    eax,0xec3358d4
  426ac4:	pop    esi
  426ac5:	pop    ds
  426ac6:	repnz and al,0x1d
  426ac9:	push   eax
  426aca:	jge    0x426b1f
  426acc:	or     dh,dl
  426ace:	rcr    DWORD PTR ds:0x28ba7923,1
  426ad4:	sub    ah,BYTE PTR [eax+0x42]
  426ad7:	cwde   
  426ad8:	inc    esp
  426ad9:	jns    0x426b30
  426adb:	jb     0x426ae9
  426add:	setg   BYTE PTR [ebx-0x15]
  426ae1:	xor    DWORD PTR [ecx-0x2478ce36],esi
  426ae7:	and    eax,0x305f756d
  426aec:	xchg   BYTE PTR [edx+0x7eab2d4b],dl
  426af2:	ror    DWORD PTR [ebx],1
  426af4:	mov    ecx,0x46d20da9
  426af9:	sbb    eax,0xecae6972
  426afe:	jmp    0x3987c635
  426b03:	movsx  ecx,WORD PTR [esi]
  426b06:	sbb    bh,BYTE PTR [eax]
  426b08:	in     al,0x57
  426b0a:	adc    esi,ebp
  426b0c:	ss sbb eax,0x6bbf5e4e
  426b12:	ds cmp eax,0xeed80b19
  426b18:	sti    
  426b19:	add    bh,BYTE PTR [ebp-0x3f]
  426b1c:	aam    0x6e
  426b1e:	popa   
  426b1f:	add    al,0x4e
  426b21:	call   0x3907:0xda651f2
  426b28:	xchg   esp,eax
  426b29:	fs mov al,0x43
  426b2c:	and    al,0xc3
  426b2e:	sar    DWORD PTR [ecx+0x5e],0xdb
  426b32:	fwait
  426b33:	push   edx
  426b34:	in     eax,dx
  426b35:	cmp    DWORD PTR [ecx-0x3bf883c5],eax
  426b3b:	pop    ss
  426b3c:	mov    esi,0x5eb9563d
  426b41:	push   ecx
  426b42:	daa    
  426b43:	sbb    esp,DWORD PTR [edi]
  426b45:	xlat   BYTE PTR ds:[ebx]
  426b46:	(bad)  
  426b47:	loop   0x426b93
  426b49:	xor    ecx,DWORD PTR [edx]
  426b4b:	inc    esi
  426b4c:	std    
  426b4d:	pop    eax
  426b4e:	adc    bh,BYTE PTR [eax-0x1a]
  426b51:	xchg   BYTE PTR [ebp-0x4def7da0],ah
  426b57:	mul    BYTE PTR [ecx+0x27c3a769]
  426b5d:	lods   eax,DWORD PTR ds:[esi]
  426b5e:	(bad)  
  426b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b60:	push   edi
  426b61:	inc    edx
  426b62:	fmul   QWORD PTR [esi-0xd]
  426b65:	mov    ds:0x4f902087,eax
  426b6a:	pop    esp
  426b6b:	pop    ecx
  426b6c:	sub    esp,DWORD PTR [ecx]
  426b6e:	dec    ecx
  426b6f:	push   es
  426b70:	adc    BYTE PTR [edi+0x43],0xd5
  426b74:	pop    edx
  426b75:	ror    DWORD PTR [esi],cl
  426b77:	int3   
  426b78:	lock ror DWORD PTR [eax],0x5
  426b7c:	cmp    DWORD PTR [ebx+0x49],0xa1022f06
  426b83:	lds    eax,FWORD PTR [edx-0x3a]
  426b86:	stc    
  426b87:	sti    
  426b88:	jle    0x426b48
  426b8a:	in     al,0x6b
  426b8c:	pop    ecx
  426b8d:	repz mov al,0x7
  426b90:	jnp    0x426c11
  426b92:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  426b94:	bound  edi,QWORD PTR [ecx+0x1a927fa6]
  426b9a:	lock inc ebx
  426b9c:	fmulp  st(3),st
  426b9e:	pop    esp
  426b9f:	jl     0x426c07
  426ba1:	into   
  426ba2:	mov    ebp,0xf0ea13c1
  426ba7:	jge    0x426bec
  426ba9:	jns    0x426c19
  426bab:	push   edx
  426bac:	mov    esi,0x6856c964
  426bb1:	cmp    DWORD PTR [eax-0x29],ecx
  426bb4:	mov    dh,0x3d
  426bb6:	push   0x5e
  426bb8:	mov    ebp,DWORD PTR [ebp-0x80]
  426bbb:	dec    ebx
  426bbc:	stos   BYTE PTR es:[edi],al
  426bbd:	mov    cl,0xb9
  426bbf:	mov    ch,0xea
  426bc1:	xchg   ecx,eax
  426bc2:	ja     0x426b87
  426bc4:	push   cs
  426bc5:	push   es
  426bc6:	cmp    al,bh
  426bc8:	outs   dx,DWORD PTR ds:[esi]
  426bc9:	ret    0x189b
  426bcc:	arpl   WORD PTR [edx-0x7],cx
  426bcf:	or     dl,bl
  426bd1:	test   DWORD PTR ds:0x9da9dc01,ebp
  426bd7:	call   FWORD PTR [esi+0x3f11e975]
  426bdd:	int    0xda
  426bdf:	cmp    edx,DWORD PTR [eax]
  426be1:	push   ss
  426be2:	push   ebx
  426be3:	inc    esi
  426be4:	pop    edi
  426be5:	mov    al,ds:0xcce70b52
  426bea:	repz data16 or bh,BYTE PTR [ecx-0x59]
  426bef:	int3   
  426bf0:	xchg   ebx,eax
  426bf1:	pop    ss
  426bf2:	pop    esp
  426bf3:	pop    ebx
  426bf4:	cwde   
  426bf5:	cmp    eax,0x569a47e2
  426bfa:	jle    0x426b7d
  426bfc:	(bad)  
  426bfd:	fs mov ebx,0x2d0c0a25
  426c03:	int    0xe
  426c05:	pop    ds
  426c06:	sub    eax,0xd9dc635a
  426c0b:	std    
  426c0c:	xchg   ecx,eax
  426c0d:	inc    eax
  426c0e:	jne    0x426c20
  426c10:	fndisi(8087 only) 
  426c12:	icebp  
  426c13:	sbb    BYTE PTR fs:[edi-0x718114f3],0xc8
  426c1b:	sub    eax,0xbf8ed5f
  426c20:	jle    0x426c88
  426c22:	out    dx,eax
  426c23:	addr16 mov esi,0x32959d24
  426c29:	sub    DWORD PTR [eax],esi
  426c2b:	sti    
  426c2c:	mov    DWORD PTR [edx-0x53],edx
  426c2f:	pop    edi
  426c30:	cwde   
  426c31:	retf   0x8eb2
  426c34:	and    DWORD PTR gs:0xea2cd2d0,eax
  426c3b:	pop    ebx
  426c3c:	add    eax,0x91e9fb6d
  426c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c42:	out    0x9b,eax
  426c44:	daa    
  426c45:	je     0x426c79
  426c47:	mov    bl,0x4c
  426c49:	and    DWORD PTR [esi-0x12],ecx
  426c4c:	adc    al,0x58
  426c4e:	mov    eax,ds:0x40ba4e86
  426c53:	in     al,dx
  426c54:	dec    ecx
  426c55:	cwde   
  426c56:	mov    al,ds:0x63618ed5
  426c5b:	mov    BYTE PTR [ebx],dh
  426c5d:	adc    al,cl
  426c5f:	and    dh,bl
  426c61:	lea    edi,[ecx-0x18]
  426c64:	inc    ebx
  426c65:	mov    DWORD PTR ds:0x96953a3c,edi
  426c6b:	in     al,dx
  426c6c:	jo     0x426bf1
  426c6e:	dec    edx
  426c6f:	or     BYTE PTR [edi],0x65
  426c72:	cmp    BYTE PTR [edi+esi*8+0x54],ah
  426c76:	in     al,dx
  426c77:	xor    ebx,DWORD PTR [ebx-0x74]
  426c7a:	and    BYTE PTR [edi+0xcff4d7a],ah
  426c80:	and    DWORD PTR [ebx],ebp
  426c82:	fidivr WORD PTR [ebx]
  426c84:	scas   al,BYTE PTR es:[edi]
  426c85:	cmc    
  426c86:	aas    
  426c87:	mov    ds:0x8715d601,eax
  426c8c:	shl    dl,0x10
  426c8f:	jp     0x426cda
  426c91:	push   ebp
  426c92:	cwde   
  426c93:	xor    eax,0xcf5995e7
  426c98:	neg    DWORD PTR [ebp-0x7650df89]
  426c9e:	mov    edi,0xede6df77
  426ca3:	push   edx
  426ca4:	lds    ebp,FWORD PTR [ecx]
  426ca6:	sub    edx,esp
  426ca8:	push   ds
  426ca9:	jmp    0x426d02
  426cab:	pusha  
  426cac:	out    dx,al
  426cad:	inc    ebx
  426cae:	pusha  
  426caf:	out    dx,eax
  426cb0:	inc    esp
  426cb1:	(bad)  
  426cb2:	call   0xbadb:0x153e5920
  426cb9:	out    dx,eax
  426cba:	or     eax,0x205f46d
  426cbf:	xlat   BYTE PTR ds:[ebx]
  426cc0:	or     DWORD PTR [eax-0x2],ecx
  426cc3:	inc    esi
  426cc4:	into   
  426cc5:	xor    eax,0x8569fe28
  426cca:	mov    ecx,DWORD PTR [ebp+0x14]
  426ccd:	bound  edi,QWORD PTR [ecx-0x59e2729d]
  426cd3:	cld    
  426cd4:	push   esi
  426cd5:	cmp    eax,0xac1885ff
  426cda:	mov    esi,cs
  426cdc:	in     eax,dx
  426cdd:	jl     0x426c96
  426cdf:	xchg   ebx,eax
  426ce0:	push   es
  426ce1:	sub    al,0x34
  426ce3:	or     cl,cl
  426ce5:	ret    
  426ce6:	cli    
  426ce7:	stc    
  426ce8:	mov    ebp,0x4cc22b99
  426ced:	pop    eax
  426cee:	out    dx,eax
  426cef:	out    dx,eax
  426cf0:	jge    0x426ca5
  426cf2:	in     al,dx
  426cf3:	ins    BYTE PTR es:[edi],dx
  426cf4:	xchg   edx,eax
  426cf5:	and    cl,dl
  426cf7:	sbb    BYTE PTR [edi+esi*4-0x53],ch
  426cfb:	cmc    
  426cfc:	dec    esp
  426cfd:	push   cs
  426cfe:	xchg   ebp,eax
  426cff:	jbe    0x426d29
  426d01:	inc    edi
  426d02:	jae    0x426cca
  426d04:	leave  
  426d05:	mov    ds:0xea4446ae,eax
  426d0a:	add    al,dl
  426d0c:	push   es
  426d0d:	dec    esp
  426d0e:	jmp    0x426d8d
  426d10:	xchg   esp,eax
  426d11:	push   ecx
  426d12:	(bad)  
  426d14:	inc    eax
  426d15:	pushf  
  426d16:	pop    ebx
  426d17:	mov    ecx,0x7e106800
  426d1c:	push   edi
  426d1d:	adc    dh,BYTE PTR [edx+edx*2-0x2b8473d7]
  426d24:	jae    0x426d2e
  426d26:	jae    0x426da6
  426d28:	rcr    cl,0xca
  426d2b:	cld    
  426d2c:	jmp    0x197cffb8
  426d31:	int    0x1b
  426d33:	pop    ss
  426d34:	lds    edx,FWORD PTR [eax]
  426d36:	dec    edi
  426d37:	aas    
  426d38:	test   eax,0xb6e8f6f5
  426d3d:	retf   0x6757
  426d40:	mov    dh,0x7a
  426d42:	pusha  
  426d43:	add    bl,BYTE PTR [eax+0x5c]
  426d46:	lods   al,BYTE PTR ds:[esi]
  426d47:	add    DWORD PTR [esi],ecx
  426d49:	ret    0x60d4
  426d4c:	fisub  DWORD PTR [ebx+0x78]
  426d4f:	iret   
  426d50:	mov    ecx,0xc702611e
  426d55:	pop    esi
  426d56:	cli    
  426d57:	popa   
  426d58:	sbb    DWORD PTR [ecx+esi*1+0x3],ebx
  426d5c:	sub    dh,BYTE PTR ds:[edx]
  426d5f:	out    0xb8,al
  426d61:	sbb    al,BYTE PTR [esi-0x37]
  426d64:	sahf   
  426d65:	pop    DWORD PTR ds:0xbe81fed3
  426d6b:	pushf  
  426d6c:	dec    edx
  426d6d:	jg     0x426d55
  426d6f:	and    BYTE PTR [edx],0xcd
  426d72:	push   eax
  426d73:	and    esi,DWORD PTR [edi+0x5c825cad]
  426d79:	(bad)  
  426d7a:	daa    
  426d7b:	xchg   ecx,eax
  426d7c:	sub    al,ch
  426d7e:	sbb    eax,0xcf00e63e
  426d83:	neg    BYTE PTR [ebp-0x308442b0]
  426d89:	(bad)  
  426d8a:	out    dx,eax
  426d8b:	lods   al,BYTE PTR ds:[esi]
  426d8c:	(bad)  
  426d8d:	push   ss
  426d8e:	in     eax,0x69
  426d90:	(bad)  
  426d91:	retf   0xe003
  426d94:	add    DWORD PTR [eax],eax
  426d96:	daa    
  426d97:	add    eax,DWORD PTR [eax]
  426d99:	add    BYTE PTR [ecx+0x6b],ah
  426d9c:	and    BYTE PTR [edx],0x7
  426d9f:	fild   QWORD PTR [edi]
  426da1:	loope  0x426def
  426da3:	push   0xfffffff2
  426da5:	sbb    DWORD PTR [edi-0x21865a42],0xffffffd5
  426dac:	xchg   dl,bh
  426dae:	aas    
  426daf:	leave  
  426db0:	or     dh,0xa5
  426db3:	and    BYTE PTR [ecx-0x36],al
  426db6:	idiv   ah
  426db8:	push   ds
  426db9:	ja     0x426d48
  426dbb:	gs and al,0x41
  426dbe:	jge    0x426d91
  426dc0:	in     eax,dx
  426dc1:	in     al,dx
  426dc2:	js     0x426e13
  426dc4:	and    eax,DWORD PTR [eax+0x3d]
  426dc7:	add    DWORD PTR [edi-0x66],eax
  426dca:	sbb    DWORD PTR [edx+ebx*2+0x5fb4d02f],edi
  426dd1:	xchg   DWORD PTR [edi+0x59],eax
  426dd4:	sbb    dl,dl
  426dd6:	(bad)  
  426dd7:	out    0x53,al
  426dd9:	out    dx,al
  426dda:	ins    DWORD PTR es:[edi],dx
  426ddb:	(bad)  
  426ddc:	pop    ds
  426ddd:	cli    
  426dde:	xor    eax,0xc3cc4d6b
  426de3:	add    ch,cl
  426de5:	mov    al,0x41
  426de7:	xor    eax,0xd961a265
  426dec:	jmp    0x7411:0xa391a119
  426df3:	ins    BYTE PTR es:[edi],dx
  426df4:	adc    DWORD PTR [ebx+0x75267174],esi
  426dfa:	mov    edx,0x8213680f
  426dff:	mov    eax,0x95d0dd8b
  426e04:	into   
  426e05:	adc    bh,dh
  426e07:	xchg   dl,dl
  426e09:	adc    BYTE PTR [edx+ecx*2],cl
  426e0c:	sub    DWORD PTR [esi],0xc76fdf84
  426e12:	loop   0x426e60
  426e14:	adc    bl,BYTE PTR [ebp-0x19]
  426e17:	in     eax,0x10
  426e19:	inc    ebp
  426e1a:	iret   
  426e1b:	in     eax,0xb4
  426e1d:	mov    ebx,0x959b503a
  426e22:	pop    ebx
  426e23:	iret   
  426e24:	aas    
  426e25:	xchg   edi,eax
  426e26:	sub    eax,0xeaf4ab10
  426e2b:	xchg   edx,eax
  426e2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e2d:	push   ebx
  426e2e:	push   ebx
  426e2f:	cmp    dl,BYTE PTR [ebx-0xc9df437]
  426e35:	push   eax
  426e36:	push   es
  426e37:	clc    
  426e38:	jnp    0x426ea9
  426e3a:	hlt    
  426e3b:	jmp    0x426e39
  426e3d:	mov    dh,0xac
  426e3f:	mov    ah,0xb
  426e41:	or     BYTE PTR [esi-0x37],bl
  426e44:	pop    edx
  426e45:	push   ds
  426e46:	xchg   ecx,eax
  426e47:	jmp    0x42badd46
  426e4c:	xor    ecx,DWORD PTR [ecx+0x5b]
  426e4f:	and    dh,BYTE PTR [esp+esi*8-0x72]
  426e53:	(bad)  
  426e54:	cld    
  426e55:	aam    0x30
  426e57:	neg    DWORD PTR ds:0x8aaa3542
  426e5d:	dec    esp
  426e5e:	cmp    eax,0x2715f7e7
  426e63:	and    al,0x22
  426e65:	jmp    0x4c81:0xe66198fa
  426e6c:	or     eax,ebp
  426e6e:	imul   eax,edx,0x2f98d9d
  426e74:	sub    eax,0x38ad5caa
  426e79:	rcr    DWORD PTR [ebx],cl
  426e7b:	mov    ds:0xb0098eca,eax
  426e80:	mov    ebx,0x44d93ef6
  426e85:	jno    0x426e6d
  426e87:	sahf   
  426e88:	xlat   BYTE PTR ds:[ebx]
  426e89:	shl    DWORD PTR [ecx-0x4081d633],cl
  426e8f:	inc    esp
  426e90:	into   
  426e91:	icebp  
  426e92:	std    
  426e93:	mov    al,ds:0x8fb11921
  426e98:	addr16 sahf 
  426e9a:	sar    DWORD PTR [esi+0x49568735],1
  426ea0:	and    BYTE PTR [eax+ebp*8-0x449c8cd7],bh
  426ea7:	ja     0x426e6c
  426ea9:	add    eax,0xa96c4d3b
  426eae:	mov    ebp,0x528f9ba0
  426eb3:	cmp    eax,0xa19f8df9
  426eb8:	jl     0x426f2f
  426eba:	lea    edi,[eax-0x50be82ac]
  426ec0:	aaa    
  426ec1:	jg     0x426e5a
  426ec3:	ud1    edi,DWORD PTR [edx-0x114c6560]
  426eca:	pop    ss
  426ecb:	in     al,dx
  426ecc:	or     esi,DWORD PTR [eax-0x7011b56b]
  426ed2:	pop    esp
  426ed3:	ret    
  426ed4:	add    DWORD PTR [eax+0x29],ebx
  426ed7:	cmp    BYTE PTR [ecx+0x32],0xb9
  426edb:	mov    esp,0x1582b808
  426ee0:	dec    edi
  426ee1:	pop    ebp
  426ee2:	cmp    al,0x5e
  426ee4:	aad    0x40
  426ee6:	dec    esi
  426ee7:	sub    dl,BYTE PTR [ebx+0x72]
  426eea:	jmp    0x6ffe98a7
  426eef:	push   esi
  426ef0:	and    esp,0xffffffcf
  426ef3:	ret    0xa82d
  426ef6:	(bad)  
  426ef7:	loope  0x426f1c
  426ef9:	jbe    0x426f04
  426efb:	push   esp
  426efc:	test   al,0xb2
  426efe:	sti    
  426eff:	and    bl,BYTE PTR [edx+0x28a099db]
  426f05:	adc    eax,0xbd094a0c
  426f0a:	pop    edi
  426f0b:	dec    edi
  426f0c:	rcr    dl,0xde
  426f0f:	cmp    eax,DWORD PTR [edi+edi*8]
  426f12:	pop    ds
  426f13:	or     DWORD PTR [edx],esp
  426f15:	mov    bh,0xc7
  426f17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f18:	or     eax,0xed2cc9c6
  426f1d:	test   ebx,ebx
  426f1f:	cmp    esi,ebx
  426f21:	test   DWORD PTR [ebx],edi
  426f23:	push   edx
  426f24:	shl    DWORD PTR [edx+ebp*1],0x3e
  426f28:	pop    ebx
  426f29:	add    ecx,DWORD PTR [ebx-0x7c]
  426f2c:	mov    al,ds:0xc7e682b
  426f31:	and    ebx,DWORD PTR ds:0x9e8acd2d
  426f37:	popa   
  426f38:	jle    0x426f94
  426f3a:	or     al,BYTE PTR [ebx+0x57c157ee]
  426f40:	(bad)  
  426f41:	scas   eax,DWORD PTR es:[edi]
  426f42:	daa    
  426f43:	push   ecx
  426f44:	shl    BYTE PTR [edx-0x78],0x54
  426f48:	in     eax,0xa3
  426f4a:	ds out dx,eax
  426f4c:	jecxz  0x426f47
  426f4e:	enter  0xc521,0x5d
  426f52:	dec    ebp
  426f53:	add    eax,0xf7cfdb10
  426f58:	add    edi,0xd7eb8acb
  426f5e:	push   es
  426f5f:	out    0x87,al
  426f61:	fidivr WORD PTR ds:0x8d1b37bd
  426f67:	hlt    
  426f68:	mov    eax,fs:0x6a24ec77
  426f6e:	das    
  426f6f:	aam    0x8d
  426f71:	and    al,0x7e
  426f73:	xchg   esp,eax
  426f74:	add    eax,0x78931e69
  426f79:	xlat   BYTE PTR ds:[ebx]
  426f7a:	sub    BYTE PTR [eax+0x45672395],dl
  426f80:	inc    edi
  426f81:	or     edi,DWORD PTR [esi+edx*2+0xf]
  426f85:	mov    ch,0x3d
  426f87:	neg    DWORD PTR [ebx-0x4989345e]
  426f8d:	dec    eax
  426f8e:	push   edx
  426f8f:	aad    0xa9
  426f91:	loope  0x426fdb
  426f93:	push   eax
  426f94:	faddp  st(1),st
  426f96:	(bad)  
  426f97:	das    
  426f98:	xchg   DWORD PTR [esi],esp
  426f9a:	xor    BYTE PTR [ebx-0x18],cl
  426f9d:	sahf   
  426f9e:	xchg   edi,eax
  426f9f:	jmp    0x7ae3:0x2ba5f528
  426fa6:	push   edi
  426fa7:	stc    
  426fa8:	cmc    
  426fa9:	sub    BYTE PTR [ecx+0x1f608f70],cl
  426faf:	mov    esi,0x7a117c06
  426fb4:	push   es
  426fb5:	xchg   BYTE PTR [eax-0x1e5d4bd5],cl
  426fbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fbc:	dec    ebp
  426fbd:	adc    DWORD PTR [edx],0x56
  426fc0:	mov    eax,ds:0x974fc53a
  426fc5:	mov    cl,0x30
  426fc7:	fwait
  426fc8:	ins    DWORD PTR es:[edi],dx
  426fc9:	jl     0x426f4b
  426fcb:	(bad)  
  426fcc:	fisubr WORD PTR [esi+0x4d]
  426fcf:	jns    0x42701c
  426fd1:	(bad)  
  426fd3:	push   ecx
  426fd4:	adc    DWORD PTR [eax+0x6d],esp
  426fd7:	test   eax,0x3f746890
  426fdc:	and    ebx,DWORD PTR [eax-0x1b0042e8]
  426fe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fe3:	jno    0x426fb5
  426fe5:	xor    ch,BYTE PTR [ebx+0x7ac78439]
  426feb:	je     0x426f75
  426fed:	pusha  
  426fee:	pop    ss
  426fef:	out    dx,eax
  426ff0:	test   BYTE PTR [edx+0x54],0x47
  426ff4:	inc    esp
  426ff5:	retf   0x336b
  426ff8:	shr    ch,cl
  426ffa:	sbb    al,0x9c
  426ffc:	mov    ah,0x54
  426ffe:	push   edx
  426fff:	mov    ebx,0x9a23138e
  427004:	ss enter 0xd0ae,0xa8
  427009:	xchg   DWORD PTR ds:0xb69a3236,ebx
  42700f:	mov    al,0xb
  427011:	call   0xfcc8:0xf9106c8e
  427018:	scas   al,BYTE PTR es:[edi]
  427019:	fsubr  DWORD PTR [ebp+0x46]
  42701c:	cmp    dh,ch
  42701e:	push   0xdfe3edbc
  427023:	repnz out dx,al
  427025:	int    0x8e
  427027:	mov    dh,0xf3
  427029:	out    0xe4,al
  42702b:	sub    esi,DWORD PTR [ebp+0x173a7455]
  427031:	dec    esp
  427032:	icebp  
  427033:	pop    eax
  427034:	xlat   BYTE PTR ds:[ebx]
  427035:	les    ebp,FWORD PTR [ebp-0x2b]
  427038:	pop    ecx
  427039:	sub    esi,ecx
  42703b:	call   0xa881124b
  427040:	popf   
  427041:	pushf  
  427042:	fbld   TBYTE PTR [eax+0x51]
  427045:	push   esp
  427046:	into   
  427047:	jns    0x4270b2
  427049:	inc    esi
  42704a:	into   
  42704b:	xor    BYTE PTR ds:0x1b544b5e,ah
  427051:	sbb    eax,0x68173d10
  427056:	inc    esi
  427057:	cwde   
  427058:	(bad)  
  427059:	out    0x6,eax
  42705b:	mov    eax,0x4cefab91
  427060:	mov    esp,0xb473415f
  427065:	leave  
  427066:	xor    ebx,esi
  427068:	inc    eax
  427069:	mov    bh,0x6b
  42706b:	sub    edi,ebp
  42706d:	jbe    0x427051
  42706f:	ficomp WORD PTR [edx-0x7b]
  427072:	push   es
  427073:	push   es
  427074:	scas   eax,DWORD PTR es:[edi]
  427075:	ret    0xe062
  427078:	out    0xe5,eax
  42707a:	dec    ecx
  42707b:	push   ds
  42707c:	aad    0xf2
  42707e:	ss mov bh,ch
  427081:	fs (bad) 
  427083:	ss repnz inc ebx
  427086:	pop    edi
  427087:	or     esi,DWORD PTR [ebx+0x1e836eec]
  42708d:	push   esi
  42708e:	mov    ds:0xe32f727b,ax
  427094:	scas   eax,DWORD PTR es:[edi]
  427095:	loop   0x4270b8
  427097:	scas   al,BYTE PTR es:[edi]
  427098:	jnp    0x4270ad
  42709a:	cmp    BYTE PTR [edi],bh
  42709c:	xchg   DWORD PTR [edi],edi
  42709e:	stos   BYTE PTR es:[edi],al
  42709f:	fcom   QWORD PTR [ebx]
  4270a1:	cs ret 0x90e7
  4270a5:	repnz cli 
  4270a7:	fnstsw WORD PTR [ecx+0x56]
  4270aa:	cmp    eax,0xfe3d453c
  4270af:	xor    al,0x58
  4270b1:	pop    ebx
  4270b2:	inc    ecx
  4270b3:	push   ds
  4270b4:	sbb    dh,0xd6
  4270b7:	rcr    BYTE PTR [esi+eax*1],0xd7
  4270bb:	rcl    BYTE PTR [ebx+0x3dbaae5a],cl
  4270c1:	add    BYTE PTR [eax+0x23],ch
  4270c4:	sub    eax,0x7b1e6f1e
  4270c9:	ja     0x4270a9
  4270cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270cc:	ss mov al,0xf9
  4270cf:	outs   dx,DWORD PTR gs:[esi]
  4270d1:	shr    BYTE PTR [edx],1
  4270d3:	jecxz  0x4270d6
  4270d5:	add    BYTE PTR [edi],ah
  4270d7:	add    eax,DWORD PTR [eax]
  4270d9:	add    BYTE PTR [ecx+0x2f],bl
  4270dc:	cmp    bl,BYTE PTR [ebx-0x53c75457]
  4270e2:	jno    0x4270d8
  4270e4:	loope  0x42708e
  4270e6:	repnz (bad) 
  4270e8:	les    esi,FWORD PTR [esi-0x4426a77]
  4270ee:	mov    ebx,0xdc509d3b
  4270f3:	cld    
  4270f4:	stos   BYTE PTR es:[edi],al
  4270f5:	rcl    DWORD PTR [edx-0x53],1
  4270f8:	fisttp DWORD PTR gs:[edx+0x63]
  4270fc:	mov    edx,0x577688b0
  427101:	hlt    
  427102:	or     al,0x3d
  427104:	retf   0x90e
  427107:	or     ah,BYTE PTR [edi+0x58]
  42710a:	push   ebx
  42710b:	imul   DWORD PTR [ebx-0x1490f0c2]
  427111:	mov    eax,ds:0x4a1a1359
  427116:	call   0x5e6:0x6324bade
  42711d:	jbe    0x427153
  42711f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427120:	adc    cl,ch
  427122:	mov    dl,0x5c
  427124:	adc    eax,0x9307ff6c
  427129:	add    al,0x6d
  42712b:	ret    0xa808
  42712e:	pop    esi
  42712f:	inc    DWORD PTR [ebx+0x22cb9e3a]
  427135:	or     DWORD PTR [edx-0x6],ebx
  427138:	(bad)  
  427139:	cmc    
  42713a:	or     DWORD PTR [edi-0x6b2a0181],ecx
  427140:	gs inc ebp
  427142:	test   eax,0x74f40939
  427147:	mov    esp,0x25bbc72e
  42714c:	(bad)
  42714f:	add    al,0x33
  427151:	push   es
  427152:	add    cl,ch
  427154:	and    BYTE PTR [ecx+0xc72c7d2],0xfe
  42715b:	xor    DWORD PTR [eax-0x54],0x61
  42715f:	mov    edi,0x1fcab119
  427164:	pop    ebx
  427165:	push   ecx
  427166:	push   edx
  427167:	outs   dx,BYTE PTR ds:[esi]
  427168:	pop    ds
  427169:	sbb    BYTE PTR [eax+0x2d7c6422],0x24
  427170:	add    edx,edx
  427172:	fadd   DWORD PTR [edi+0x72aad885]
  427178:	test   dl,0xc
  42717b:	(bad)  [edi-0x35]
  42717e:	out    dx,al
  42717f:	adc    ah,0x81
  427182:	pop    esi
  427183:	shr    esp,cl
  427185:	pop    edi
  427186:	xor    al,BYTE PTR [eax+ebx*2+0x66f2238c]
  42718d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42718e:	push   ecx
  42718f:	(bad)  
  427190:	fdivr  QWORD PTR [eax]
  427192:	mov    cl,0xc2
  427194:	dec    edi
  427195:	fiadd  WORD PTR [esi+0x1c]
  427198:	jno    0x42715d
  42719a:	test   BYTE PTR [edi+0x25f0cb49],bh
  4271a0:	dec    esp
  4271a1:	outs   dx,DWORD PTR ds:[esi]
  4271a2:	ret    0xc8de
  4271a5:	mov    eax,DWORD PTR [esi]
  4271a7:	push   ecx
  4271a8:	pop    ds
  4271a9:	dec    edi
  4271aa:	mov    gs,WORD PTR [ecx]
  4271ac:	xchg   esi,eax
  4271ad:	lods   al,BYTE PTR ds:[esi]
  4271ae:	inc    esi
  4271af:	icebp  
  4271b0:	sub    eax,0x23f4f3be
  4271b5:	sbb    ebx,ebx
  4271b7:	push   esp
  4271b8:	cld    
  4271b9:	gs add cl,ah
  4271bc:	aaa    
  4271bd:	adc    al,0xa6
  4271bf:	sbb    eax,0x1d020df6
  4271c4:	mov    dh,0xd3
  4271c6:	inc    ebp
  4271c7:	jae    0x42715a
  4271c9:	mov    ds:0x2ff4927d,eax
  4271ce:	jb     0x42720c
  4271d0:	jnp    0x4271f6
  4271d2:	shl    al,1
  4271d4:	test   DWORD PTR [edx],ebp
  4271d6:	fsub   DWORD PTR [edx+0x79e89aea]
  4271dc:	xor    al,0x92
  4271de:	leave  
  4271df:	jmp    0x427175
  4271e1:	js     0x42724e
  4271e3:	daa    
  4271e4:	cwde   
  4271e5:	mov    esi,0x49d10b59
  4271ea:	call   0x8413:0xcef36383
  4271f1:	push   eax
  4271f2:	jb     0x427258
  4271f4:	sub    al,0x62
  4271f6:	ret    0x6c1a
  4271f9:	cdq    
  4271fa:	(bad)  
  4271fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4271fd:	or     eax,0x6b9dc530
  427202:	inc    ebp
  427203:	sub    BYTE PTR [eax-0x1a],0x38
  427207:	push   0x31
  427209:	adc    edi,DWORD PTR [edi]
  42720b:	and    bl,ah
  42720d:	cli    
  42720e:	jo     0x4271a7
  427210:	pavgb  mm1,QWORD PTR [ecx+0x2d0c8b20]
  427217:	jnp    0x42723e
  427219:	aam    0x18
  42721b:	stos   DWORD PTR es:[edi],eax
  42721c:	jg     0x427238
  42721e:	push   0xe61b4efb
  427223:	pop    ecx
  427224:	or     eax,0xf75fe8e8
  427229:	fstp   DWORD PTR [ebp+0x55a1a214]
  42722f:	into   
  427230:	fstp   TBYTE PTR [esi+0x20]
  427233:	inc    ebp
  427234:	fsubr  st(6),st
  427236:	adc    al,0x83
  427238:	push   ss
  427239:	sub    cl,BYTE PTR [ebp+0x58e6af97]
  42723f:	cmp    al,0x91
  427241:	dec    eax
  427242:	xchg   edx,eax
  427243:	or     al,0xda
  427245:	shl    BYTE PTR [esi],1
  427247:	sahf   
  427248:	dec    edi
  427249:	test   DWORD PTR [ebp+0x616b94d3],0x979f24b4
  427253:	repnz out 0x1f,al
  427256:	adc    al,0x4e
  427258:	push   eax
  427259:	jmp    0x65c54ff6
  42725e:	enter  0xfff8,0x17
  427262:	lahf   
  427263:	xchg   esi,eax
  427264:	dec    ebp
  427265:	pop    ecx
  427266:	cmp    al,0xa9
  427268:	jp     0x427277
  42726a:	ins    DWORD PTR es:[edi],dx
  42726b:	or     DWORD PTR [esi-0x11],edi
  42726e:	popf   
  42726f:	outs   dx,DWORD PTR ds:[esi]
  427270:	sbb    eax,0xd8a13135
  427275:	jb     0x4272ae
  427277:	in     al,0x5b
  427279:	in     eax,0x5a
  42727b:	and    al,0x45
  42727d:	push   ss
  42727e:	repz bound ebx,QWORD PTR [ebx-0xf]
  427282:	jns    0x42723d
  427284:	hlt    
  427285:	clc    
  427286:	pop    es
  427287:	xchg   ebp,eax
  427288:	mov    DWORD PTR [edx],ebx
  42728a:	mov    WORD PTR [edx+0x26],di
  42728e:	fdivr  DWORD PTR [ecx+0x1f]
  427291:	sbb    ah,bl
  427293:	cmp    cl,BYTE PTR [ebx]
  427295:	sbb    ebp,DWORD PTR [eax-0x4f]
  427298:	adc    al,0xb
  42729a:	jle    0x42722f
  42729c:	pop    eax
  42729d:	repnz fist WORD PTR [esi]
  4272a0:	mov    eax,0xc73d3dbe
  4272a5:	leave  
  4272a6:	sar    BYTE PTR [ecx-0x11801f59],0x99
  4272ad:	aad    0xfc
  4272af:	cdq    
  4272b0:	icebp  
  4272b1:	jmp    0x42725b
  4272b3:	vmwrite esp,DWORD PTR [ebx]
  4272b6:	dec    ebx
  4272b7:	xor    BYTE PTR [ebx-0xeaf7cfa],dl
  4272bd:	ss mov ebx,0xc0e9b534
  4272c3:	loop   0x42732f
  4272c5:	(bad)  
  4272c6:	sbb    DWORD PTR cs:[edx+0x1cdbd8b6],esp
  4272cd:	in     al,dx
  4272ce:	and    al,0x38
  4272d0:	adc    ah,BYTE PTR [ecx]
  4272d2:	dec    esi
  4272d3:	retf   0x2dd4
  4272d6:	mov    dl,0xa9
  4272d8:	push   esp
  4272d9:	mov    WORD PTR [eax-0x6290c53f],ss
  4272df:	mov    BYTE PTR [edi-0x79e00f8f],dl
  4272e5:	add    DWORD PTR [edi],eax
  4272e7:	lock add al,0x6d
  4272ea:	or     BYTE PTR [ecx-0x57],cl
  4272ed:	xchg   esi,eax
  4272ee:	pop    ss
  4272ef:	mov    ah,0xfe
  4272f1:	call   0xf90e92f4
  4272f6:	xor    eax,0xd4b9f127
  4272fb:	mov    ebx,0x884d9291
  427300:	and    DWORD PTR [edi+ebp*2-0x265a0ec9],edx
  427307:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427308:	popa   
  427309:	sub    eax,0x6df0732a
  42730e:	out    dx,eax
  42730f:	cmp    BYTE PTR [ebx+0x5f],0x8c
  427313:	jmp    0xada70ac2
  427318:	pop    esp
  427319:	push   DWORD PTR [eax]
  42731b:	and    dh,bh
  42731d:	call   0xd94c:0xcff1ba6b
  427324:	push   edi
  427325:	mov    ch,dl
  427327:	sbb    dh,BYTE PTR [eax+0x356fbb07]
  42732d:	jg     0x427302
  42732f:	sub    eax,0xbd992c1d
  427334:	enter  0x3bb,0xc3
  427338:	ss push edi
  42733a:	adc    al,0xba
  42733c:	mov    ch,BYTE PTR [edi-0x38]
  42733f:	in     al,dx
  427340:	push   0xffffffc5
  427342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427343:	sbb    al,0x96
  427345:	outs   dx,DWORD PTR ds:[esi]
  427346:	mov    esp,0x796f30c5
  42734b:	sub    eax,0x15e61ce1
  427350:	repnz mov dl,0xb9
  427353:	sbb    esp,DWORD PTR [esp+edx*8-0x4e508791]
  42735a:	in     al,0x1e
  42735c:	push   0x61
  42735e:	(bad)  [ebx+0x40f4ddd1]
  427364:	or     ah,BYTE PTR [edi+0x10]
  427367:	mov    dh,0xc1
  427369:	cmc    
  42736a:	cwde   
  42736b:	mov    ecx,0x33b8e819
  427370:	repz mov ds:0x46b037e5,eax
  427376:	lea    ecx,[esi+0x59dd1a80]
  42737c:	dec    esi
  42737d:	or     DWORD PTR [edx+0x65],ebx
  427380:	push   cs
  427381:	sahf   
  427382:	cld    
  427383:	test   DWORD PTR [ebx],ecx
  427385:	dec    esi
  427386:	(bad)  
  427387:	sub    DWORD PTR [eax+0xb],esi
  42738a:	les    ebx,FWORD PTR [edi]
  42738c:	popa   
  42738d:	cmp    al,0x92
  42738f:	or     bl,BYTE PTR [edi-0x7f]
  427392:	clc    
  427393:	inc    esp
  427394:	xchg   eax,esi
  427396:	push   ebp
  427397:	lea    esi,[eax]
  427399:	inc    esi
  42739a:	test   BYTE PTR [ebx+0x3504653],bh
  4273a0:	in     eax,0x2b
  4273a2:	sbb    esi,edx
  4273a4:	call   0xe5140512
  4273a9:	pop    esp
  4273aa:	push   edx
  4273ab:	sti    
  4273ac:	and    esi,DWORD PTR gs:[eax]
  4273af:	imul   ebp,DWORD PTR [edx+esi*4+0x56],0xfffffff1
  4273b4:	leave  
  4273b5:	add    al,0x52
  4273b7:	ja     0x42733f
  4273b9:	mov    dh,0xf3
  4273bb:	mov    WORD PTR [edx],gs
  4273bd:	pushf  
  4273be:	inc    esi
  4273bf:	js     0x4273ac
  4273c1:	jne    0x4273cc
  4273c3:	jno    0x4273bb
  4273c5:	scas   eax,DWORD PTR es:[edi]
  4273c6:	push   esp
  4273c7:	jne    0x4273cc
  4273c9:	add    DWORD PTR [edx],0x7f
  4273cc:	outs   dx,DWORD PTR ds:[esi]
  4273cd:	jmp    0x427422
  4273cf:	push   cs
  4273d0:	dec    eax
  4273d1:	fbld   TBYTE PTR [ebx+0x21515ee3]
  4273d7:	cwde   
  4273d8:	cmp    BYTE PTR [edi+0x36],al
  4273db:	pushf  
  4273dc:	jb     0x4273c4
  4273de:	xchg   ebx,eax
  4273df:	xor    DWORD PTR [edi+edx*4],0x5
  4273e3:	adc    al,0xf
  4273e5:	xchg   edx,eax
  4273e6:	into   
  4273e7:	popf   
  4273e8:	outs   dx,BYTE PTR ds:[esi]
  4273e9:	adc    DWORD PTR [ebp+0x1754cfb1],0x59760a68
  4273f3:	and    edx,esi
  4273f5:	jmp    0x4273b2
  4273f7:	daa    
  4273f8:	mov    ebp,0x9a74f2bf
  4273fd:	add    edi,edx
  4273ff:	ins    DWORD PTR es:[edi],dx
  427400:	or     al,BYTE PTR [eax]
  427402:	cdq    
  427403:	enter  0x9ff8,0xf9
  427407:	mov    edi,0xdf92ceff
  42740c:	push   ds
  42740d:	outs   dx,BYTE PTR ds:[esi]
  42740e:	repz xchg ecx,edx
  427411:	mov    eax,ds:0x1e651
  427416:	daa    
  427417:	add    eax,DWORD PTR [eax]
  427419:	add    BYTE PTR [ebp+0x60797d6e],cl
  42741f:	or     BYTE PTR [eax],bh
  427421:	add    bh,BYTE PTR [eax]
  427423:	or     eax,0xd526726e
  427428:	sub    eax,0xbf157932
  42742d:	bound  ebp,QWORD PTR [ebx-0x1]
  427430:	fs loopne 0x42744f
  427433:	sahf   
  427434:	(bad)  
  427435:	icebp  
  427436:	sub    BYTE PTR [eax],ch
  427438:	stos   BYTE PTR es:[edi],al
  427439:	pop    edx
  42743a:	sahf   
  42743b:	addr16 lock jo 0x4273c4
  42743f:	xor    al,BYTE PTR [edx-0xa]
  427442:	dec    ebx
  427443:	fldcw  WORD PTR [edi-0x22]
  427446:	ficom  DWORD PTR [ecx+0x5]
  427449:	es mov ecx,0x7bb213cf
  42744f:	pop    edi
  427450:	outs   dx,BYTE PTR ds:[esi]
  427451:	in     eax,0x9d
  427453:	sub    eax,0x41d1307e
  427458:	(bad)
  42745b:	pop    ss
  42745c:	stos   WORD PTR es:[edi],ax
  42745e:	je     0x4274ae
  427460:	in     al,dx
  427461:	cmp    ebx,edx
  427463:	sbb    esi,DWORD PTR [esi-0x582a3123]
  427469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42746a:	adc    eax,0x51168dac
  42746f:	mov    esp,0xb9f3da34
  427474:	leave  
  427475:	xor    edi,DWORD PTR [edi+0x78]
  427478:	mov    al,ds:0xc68c16b6
  42747d:	adc    al,0x42
  42747f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427480:	sbb    BYTE PTR [ebp+0x4ec9da8a],ch
  427486:	mov    ch,ah
  427488:	xor    DWORD PTR [edi+eax*2],ecx
  42748b:	and    eax,DWORD PTR [ebp+0x3880c723]
  427491:	stos   DWORD PTR es:[edi],eax
  427492:	or     dl,BYTE PTR [eax+ebx*8]
  427495:	outs   dx,DWORD PTR ds:[esi]
  427496:	enter  0x3bf6,0x5d
  42749a:	inc    esi
  42749b:	and    dh,BYTE PTR [eax+0x1d]
  42749e:	dec    esi
  42749f:	mov    al,0x76
  4274a1:	push   ss
  4274a2:	xchg   ecx,eax
  4274a3:	lds    ecx,FWORD PTR [edi]
  4274a5:	sahf   
  4274a6:	add    al,0x72
  4274a8:	fimul  DWORD PTR [edx+0x1a214969]
  4274ae:	lock inc eax
  4274b0:	mov    dh,0xd8
  4274b2:	addr16 pop eax
  4274b4:	int3   
  4274b5:	fcomp  DWORD PTR [eax+0x40]
  4274b8:	lock add eax,0x84c432ad
  4274be:	pop    es
  4274bf:	imul   esi,DWORD PTR [ecx],0xf2dd49b7
  4274c5:	imul   ebp,DWORD PTR [ebx+0x76d74a63],0x3d1a61d
  4274cf:	(bad)  
  4274d0:	ins    DWORD PTR es:[edi],dx
  4274d1:	xor    edi,DWORD PTR [edi-0x47]
  4274d4:	mov    ch,0x7a
  4274d6:	ds nop
  4274d8:	mov    ebx,0xc245f18f
  4274dd:	dec    ebx
  4274de:	sbb    eax,0x93f54491
  4274e3:	or     eax,DWORD PTR gs:[edx]
  4274e6:	(bad)  
  4274e7:	jne    0x4274f2
  4274e9:	stos   DWORD PTR es:[edi],eax
  4274ea:	div    DWORD PTR [edi-0x3adaabbb]
  4274f0:	adc    esp,edx
  4274f2:	pop    edi
  4274f3:	or     eax,0xa1955d28
  4274f8:	xchg   esp,eax
  4274f9:	cmp    cl,ah
  4274fb:	int3   
  4274fc:	add    DWORD PTR [edi-0x3],edx
  4274ff:	mov    bl,BYTE PTR [edi]
  427501:	jnp    0x427531
  427503:	call   0x53b1:0x7848017d
  42750a:	add    dl,ah
  42750c:	add    ebx,DWORD PTR [edi]
  42750e:	xchg   ebp,eax
  42750f:	int    0x5a
  427511:	shl    dl,1
  427513:	ins    DWORD PTR es:[edi],dx
  427514:	lods   al,BYTE PTR ds:[esi]
  427515:	cmp    esi,ebx
  427517:	push   ds
  427518:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427519:	and    BYTE PTR [edi-0x25],ah
  42751c:	adc    BYTE PTR [ebx+eiz*4+0x7f6d9f1b],bh
  427523:	mov    edx,DWORD PTR [esi-0x5f]
  427526:	sbb    eax,DWORD PTR [edx+0x17]
  427529:	nop
  42752a:	jmp    0x5cbcbaf7
  42752f:	clc    
  427530:	push   edi
  427531:	fwait
  427532:	and    al,al
  427534:	and    DWORD PTR [ecx-0x46],ebx
  427537:	xchg   edx,eax
  427538:	aad    0x3b
  42753a:	cmp    al,0x5
  42753c:	bound  esp,QWORD PTR [ecx]
  42753e:	push   ecx
  42753f:	shl    BYTE PTR [edx-0x51c4e61b],1
  427545:	jns    0x42755b
  427547:	mov    cl,0xb8
  427549:	enter  0x3d57,0x7f
  42754d:	dec    edx
  42754e:	dec    edx
  42754f:	inc    ebx
  427550:	jno    0x427519
  427552:	daa    
  427553:	lahf   
  427554:	pop    esi
  427555:	addr16 mov eax,ds:0x1e23
  427559:	inc    ebp
  42755a:	data16 sub al,0x76
  42755d:	mov    ebp,0xda36ce07
  427562:	and    DWORD PTR [ebx],ebp
  427564:	jle    0x427586
  427566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427567:	shl    BYTE PTR [ecx],cl
  427569:	pop    esi
  42756a:	fld    DWORD PTR [edi+0x53]
  42756d:	arpl   si,bp
  42756f:	xor    al,0xb0
  427571:	xor    al,0x5f
  427573:	icebp  
  427574:	in     al,0xab
  427576:	inc    edx
  427577:	lods   eax,DWORD PTR es:[esi]
  427579:	sub    bh,ah
  42757b:	ins    BYTE PTR es:[edi],dx
  42757c:	mov    BYTE PTR ds:0x58da0fc7,bl
  427582:	fisttp QWORD PTR [eax+0x4247a512]
  427588:	mov    dl,0xe1
  42758a:	retf   
  42758b:	shl    BYTE PTR [edi+0x64],0xa9
  42758f:	jae    0x42753c
  427591:	fsubr  DWORD PTR [eax-0x6ff3aa6f]
  427597:	push   edi
  427598:	rol    DWORD PTR [edx+0x10],1
  42759b:	jno    0x4275ff
  42759d:	test   eax,0x5d533d08
  4275a2:	pop    eax
  4275a3:	lahf   
  4275a4:	loopne 0x42760d
  4275a6:	stos   BYTE PTR es:[edi],al
  4275a7:	inc    edx
  4275a8:	cmp    bh,BYTE PTR [ecx-0x70]
  4275ab:	stc    
  4275ac:	aad    0xb0
  4275ae:	ss dec eax
  4275b0:	lock into 
  4275b2:	adc    al,0x6c
  4275b4:	cdq    
  4275b5:	data16 sub dh,BYTE PTR [esi]
  4275b8:	adc    eax,0x2296266c
  4275bd:	sub    ebx,esi
  4275bf:	imul   ebp,DWORD PTR [edi+0x4e],0x1bc19d5e
  4275c6:	pop    esi
  4275c7:	add    ebp,DWORD PTR [edx-0x1a]
  4275ca:	je     0x42760a
  4275cc:	rcr    BYTE PTR [ebx+ecx*4-0x52532d67],1
  4275d3:	in     al,0x5a
  4275d5:	je     0x42757c
  4275d7:	adc    eax,0x13383d6d
  4275dc:	test   BYTE PTR [esi+0x2c],cl
  4275df:	(bad)  [edx-0x40f19574]
  4275e5:	adc    eax,0xf5dc028e
  4275ea:	sub    al,0x32
  4275ec:	push   esi
  4275ed:	adc    al,0x10
  4275ef:	mov    BYTE PTR [eax],ch
  4275f1:	pop    ebx
  4275f2:	push   esi
  4275f3:	xor    ebp,edx
  4275f5:	bound  edi,QWORD PTR [esp+edx*8+0x2abb0aa4]
  4275fc:	fstp   TBYTE PTR [ebp-0x61086d48]
  427602:	addr16 jbe 0x42764b
  427605:	(bad)  
  427606:	int    0x27
  427608:	adc    DWORD PTR [ebp-0x19],esp
  42760b:	cmp    ebx,DWORD PTR [ecx+eax*2-0x6f]
  42760f:	sbb    al,0x3e
  427611:	jne    0x427653
  427613:	jmp    0x427675
  427615:	push   0x6e3652c4
  42761a:	mov    edx,0x82062435
  42761f:	cli    
  427620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427621:	xor    al,0x41
  427623:	daa    
  427624:	or     eax,0xa6fa28fa
  427629:	mov    ebp,0xff661b8f
  42762e:	(bad)  
  427630:	xchg   edx,eax
  427631:	mov    BYTE PTR gs:[ebp+0x2b],ch
  427635:	jae    0x427689
  427637:	fisub  WORD PTR [ecx]
  427639:	pop    es
  42763a:	xchg   ecx,eax
  42763b:	test   al,0x1f
  42763d:	add    ebx,DWORD PTR [ecx+edx*2-0x7d5dcc1]
  427644:	mov    ecx,esp
  427646:	movups XMMWORD PTR [ecx],xmm3
  427649:	lock dec ecx
  42764b:	mov    esp,0xe6fdf10c
  427650:	int    0x31
  427652:	ins    BYTE PTR es:[edi],dx
  427653:	cs xor esp,edx
  427656:	rol    DWORD PTR [esi],cl
  427658:	ret    
  427659:	scas   al,BYTE PTR es:[edi]
  42765a:	mov    ds:0x14f6e50b,eax
  42765f:	outs   dx,DWORD PTR fs:[esi]
  427661:	aad    0x7
  427663:	jle    0x427607
  427665:	lea    ebx,[edx-0x77793a3f]
  42766b:	loopne 0x4275f6
  42766d:	mov    ss,WORD PTR [ecx-0x11]
  427670:	mov    ?,ebx
  427672:	mov    ds:0xa38ae5fc,al
  427677:	and    al,0x3c
  427679:	pop    esp
  42767a:	mov    edx,0x54f190a2
  42767f:	mov    edi,0x87e6ab12
  427684:	xor    edi,DWORD PTR [ebx+0x32]
  427687:	in     al,0x36
  427689:	inc    esp
  42768a:	int3   
  42768b:	retf   0x12b
  42768e:	shl    BYTE PTR [edi],1
  427690:	pop    fs
  427692:	or     dh,BYTE PTR [ebx]
  427694:	xor    ebp,DWORD PTR [edx]
  427696:	pop    edx
  427697:	inc    BYTE PTR [eax-0x37]
  42769a:	mov    ecx,0x86d25d2d
  42769f:	popa   
  4276a0:	ret    0x9bea
  4276a3:	push   0xffffff8d
  4276a5:	inc    edi
  4276a6:	fs test eax,0xb8a68fb
  4276ac:	mov    ecx,0xe101322b
  4276b1:	xchg   edi,eax
  4276b2:	fisub  WORD PTR [edi+0x7287551c]
  4276b8:	ins    BYTE PTR es:[edi],dx
  4276b9:	std    
  4276ba:	scas   eax,DWORD PTR es:[edi]
  4276bb:	(bad)  
  4276bd:	sbb    DWORD PTR [esi+0x584602f1],0xffffffe1
  4276c4:	retf   
  4276c5:	aaa    
  4276c6:	and    BYTE PTR [edx-0x3f219389],bh
  4276cc:	or     BYTE PTR [edi-0x4e],al
  4276cf:	out    0x2f,al
  4276d1:	fs or  al,0xc3
  4276d4:	dec    ebp
  4276d5:	leave  
  4276d6:	mov    WORD PTR [ecx-0x1c737ef2],cs
  4276dc:	leave  
  4276dd:	add    DWORD PTR ds:0xe9828f47,0x2902996c
  4276e7:	lods   eax,DWORD PTR ds:[esi]
  4276e8:	push   esi
  4276e9:	fdiv   DWORD PTR [ecx+0xf]
  4276ec:	imul   edx,edi,0xffffff9c
  4276ef:	xchg   DWORD PTR ds:0xd6acc4e4,ebp
  4276f5:	cmp    al,0xfd
  4276f7:	out    dx,al
  4276f8:	jns    0x4276d0
  4276fa:	adc    al,0x6b
  4276fc:	pop    edi
  4276fd:	mov    ebx,0xef5cbb29
  427702:	imul   eax,DWORD PTR [edx+0x4a],0xffffffe4
  427706:	mov    ds:0x6007ed7d,al
  42770b:	and    BYTE PTR [ecx+0x2b2dd6e8],dl
  427711:	pop    es
  427712:	sbb    al,0xc5
  427714:	ja     0x4276fc
  427716:	sub    cl,al
  427718:	test   BYTE PTR ds:0x41499617,al
  42771f:	ss pop ss
  427721:	push   cs
  427722:	lea    edi,[ebp+0x43]
  427725:	mov    edx,0x20aac1c3
  42772a:	pop    eax
  42772b:	popf   
  42772c:	pop    esi
  42772d:	ds xchg dh,al
  427730:	mov    fs,WORD PTR [ebp-0x6e]
  427733:	arpl   WORD PTR [ecx+0x5ded777f],bp
  427739:	pusha  
  42773a:	mov    ah,0xe4
  42773c:	add    eax,0xdfcbddcb
  427741:	add    BYTE PTR [ecx+0xa],bh
  427744:	sbb    BYTE PTR gs:[edi+0x7f],dh
  427748:	jge    0x4277b5
  42774a:	int3   
  42774b:	outs   dx,BYTE PTR ds:[esi]
  42774c:	xchg   esi,esi
  42774e:	mov    al,0x36
  427750:	jmp    0x2700:0x1e978f3
  427757:	add    eax,DWORD PTR [eax]
  427759:	add    al,cl
  42775b:	data16 int 0xe8
  42775e:	not    BYTE PTR [ecx-0x636c368a]
  427764:	(bad)  
  427765:	in     eax,dx
  427766:	(bad)  [ecx+esi*8-0x1a5a2b44]
  42776d:	jmp    0xfd18:0xa0e0d19c
  427774:	inc    ebp
  427775:	inc    edi
  427776:	rol    DWORD PTR [edx],1
  427778:	out    0x17,al
  42777a:	or     DWORD PTR [edi-0x6f],ebx
  42777d:	fdiv   QWORD PTR [ebx]
  42777f:	push   esp
  427780:	imul   ebx,DWORD PTR [ecx],0x65
  427783:	jmp    0xa537:0xc0419d89
  42778a:	sbb    esi,esi
  42778c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42778d:	nop
  42778e:	bound  ebx,QWORD PTR [edi+0x51]
  427791:	and    ch,0xe8
  427794:	inc    ecx
  427795:	mov    edx,DWORD PTR [edx-0x35]
  427798:	pop    ebp
  427799:	or     DWORD PTR [eax-0x29],ebp
  42779c:	in     al,dx
  42779d:	sti    
  42779e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42779f:	dec    edi
  4277a0:	cld    
  4277a1:	and    bl,BYTE PTR [edx]
  4277a3:	sbb    cl,bh
  4277a5:	push   edx
  4277a6:	stos   DWORD PTR es:[edi],eax
  4277a7:	lahf   
  4277a8:	push   es
  4277a9:	push   ebp
  4277aa:	pop    edx
  4277ab:	cmp    edx,DWORD PTR [ebx-0x3670f67c]
  4277b1:	jns    0x427817
  4277b3:	and    edx,DWORD PTR [ebp-0x1a5330e0]
  4277b9:	in     eax,0x88
  4277bb:	sbb    dl,BYTE PTR [ebx-0x3a]
  4277be:	xchg   DWORD PTR [ebp+0x347ed16b],edi
  4277c4:	cwde   
  4277c5:	xchg   edi,eax
  4277c6:	int3   
  4277c7:	add    al,0xfe
  4277c9:	mov    esp,0x8a50e181
  4277ce:	out    0xa,eax
  4277d0:	or     al,0x8c
  4277d2:	mov    ds:0xc6a5913a,al
  4277d8:	push   ebx
  4277d9:	mov    ds:0xce54ad9c,al
  4277de:	xor    eax,ecx
  4277e0:	jns    0x4277b4
  4277e2:	repnz push eax
  4277e4:	(bad)  [ebp+eiz*8+0x166b4848]
  4277eb:	(bad)  
  4277ec:	clc    
  4277ed:	adc    BYTE PTR [eax],dh
  4277ef:	sbb    bl,BYTE PTR [ebp-0x60b50461]
  4277f5:	mov    cs,WORD PTR [edi+edi*2]
  4277f8:	stc    
  4277f9:	xor    BYTE PTR [edx],al
  4277fb:	sahf   
  4277fc:	push   ebp
  4277fd:	cmc    
  4277fe:	push   es
  4277ff:	sub    al,0x10
  427801:	sub    edi,esi
  427803:	aam    0xe
  427805:	add    eax,0x7d435dff
  42780a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42780b:	loopne 0x4277d4
  42780d:	fimul  DWORD PTR [edi]
  42780f:	loopne 0x427882
  427811:	(bad)  
  427812:	fsub   QWORD PTR ds:0xed97610f
  427818:	test   esp,edx
  42781a:	and    eax,DWORD PTR [esi-0x1ef614dc]
  427820:	inc    ebp
  427821:	test   eax,0x730f09ba
  427826:	pop    edx
  427827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427828:	mov    edx,0xf5fa3f0
  42782d:	or     edx,DWORD PTR ds:0xac30816c
  427833:	adc    eax,0x259ea78a
  427839:	shr    BYTE PTR [ecx],cl
  42783b:	or     DWORD PTR [edi+0x6e],edx
  42783e:	push   edx
  42783f:	add    ebp,esp
  427841:	rol    BYTE PTR [esi],cl
  427843:	out    dx,al
  427844:	jmp    0x99b8:0x70e447a0
  42784b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42784c:	shl    DWORD PTR [edx-0x21536426],cl
  427852:	outs   dx,DWORD PTR gs:[esi]
  427854:	dec    edx
  427855:	sahf   
  427856:	fsin   
  427858:	in     al,dx
  427859:	mov    esi,0x6b1a52cf
  42785e:	pop    ebp
  42785f:	(bad)  
  427860:	mov    ?,WORD PTR [ebx+0x3977c049]
  427866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427867:	cmp    DWORD PTR [ecx-0x13],edx
  42786a:	(bad)  
  42786b:	mov    esp,0x58189516
  427870:	mov    cl,0x8b
  427872:	ror    BYTE PTR [ecx-0x35230230],cl
  427878:	loopne 0x4278b7
  42787a:	fwait
  42787b:	lods   eax,DWORD PTR ds:[esi]
  42787c:	repnz jmp 0xf63:0x21309096
  427884:	ror    BYTE PTR [esi+0x7e],0x34
  427888:	push   edi
  427889:	inc    edx
  42788a:	or     ebp,DWORD PTR [ecx+0x49]
  42788d:	clc    
  42788e:	scas   al,BYTE PTR es:[edi]
  42788f:	nop
  427890:	cmp    ch,BYTE PTR [esi]
  427892:	sbb    edi,DWORD PTR [ecx-0xd8c1e2a]
  427898:	in     eax,0x29
  42789a:	xor    DWORD PTR [esi],esi
  42789c:	mov    bl,0x44
  42789e:	fisttp WORD PTR [ebx+0x6d]
  4278a1:	sbb    al,0xc
  4278a3:	out    0x4e,al
  4278a5:	mov    al,0x8
  4278a7:	sub    BYTE PTR [ecx+0x66f2105a],ch
  4278ad:	add    BYTE PTR ds:0x37d6a2b5,dl
  4278b3:	jmp    0xf985:0x5046a1ed
  4278ba:	inc    edi
  4278bb:	jns    0x4278c3
  4278bd:	xchg   edx,eax
  4278be:	sahf   
  4278bf:	pop    ss
  4278c0:	adc    eax,0x54667ede
  4278c5:	in     al,dx
  4278c6:	xor    al,0xaf
  4278c8:	and    ch,BYTE PTR [ebx]
  4278ca:	add    BYTE PTR [esi],0xbe
  4278cd:	add    edi,DWORD PTR [ebx-0x55]
  4278d0:	jo     0x4278bf
  4278d2:	pop    es
  4278d3:	xchg   ecx,eax
  4278d4:	fdivrp st(1),st
  4278d6:	mov    al,0xea
  4278d8:	adc    DWORD PTR [ecx-0x45fe8563],0x3b
  4278df:	cmp    al,0x6d
  4278e1:	or     eax,0xdf4d2e0f
  4278e6:	mov    BYTE PTR [eax],ah
  4278e8:	jmp    0x42786f
  4278ea:	cmp    ah,BYTE PTR [edx]
  4278ec:	jge    0x42789e
  4278ee:	xor    eax,0x4654a682
  4278f3:	imul   edx,DWORD PTR [edi-0x14],0x5e
  4278f7:	pop    ss
  4278f8:	pusha  
  4278f9:	dec    edi
  4278fa:	jmp    0x2b95:0x67f05ab3
  427901:	or     al,0xc4
  427903:	lahf   
  427904:	mov    ch,bh
  427906:	shl    BYTE PTR [eax+0x4c],cl
  427909:	pop    eax
  42790a:	icebp  
  42790b:	loop   0x4278a3
  42790d:	jns    0x4278b2
  42790f:	mov    ah,0xe6
  427911:	hlt    
  427912:	pop    ebx
  427913:	push   0x28
  427915:	dec    eax
  427916:	sub    ebp,eax
  427918:	(bad)  
  427919:	mov    edx,0x4651a894
  42791e:	mov    ebx,0x68e677d3
  427923:	stos   BYTE PTR es:[edi],al
  427924:	dec    esi
  427925:	call   0x5e4141ea
  42792a:	mov    bh,0x1b
  42792c:	or     esp,DWORD PTR [esp+edx*4]
  42792f:	inc    eax
  427930:	mov    bl,BYTE PTR [ebx]
  427932:	in     al,dx
  427933:	ficom  DWORD PTR [esi-0x56a9fd35]
  427939:	xchg   ebp,eax
  42793a:	test   BYTE PTR [eax+eax*8],bl
  42793d:	pop    edx
  42793e:	mov    DWORD PTR ds:0xad3f3a43,ebp
  427944:	push   ebx
  427945:	add    esi,ecx
  427947:	loope  0x427939
  427949:	add    eax,0x7623d5c4
  42794e:	outs   dx,BYTE PTR ds:[esi]
  42794f:	mov    ds:0x78cf0464,eax
  427954:	jne    0x42794b
  427956:	jecxz  0x42791b
  427958:	and    al,BYTE PTR [ebx]
  42795a:	mov    DWORD PTR [edi-0x457ff317],edi
  427960:	adc    al,0x8d
  427962:	mov    edi,0xf9e46399
  427967:	inc    eax
  427968:	and    DWORD PTR [edx-0x17],ecx
  42796b:	mov    al,0x35
  42796d:	sahf   
  42796e:	inc    edi
  42796f:	sub    al,0x7e
  427971:	lahf   
  427972:	out    0x35,al
  427974:	lahf   
  427975:	pop    ss
  427976:	in     eax,0x6e
  427978:	xchg   ecx,eax
  427979:	lods   al,BYTE PTR ds:[esi]
  42797a:	push   cs
  42797b:	jp     0x4279ed
  42797d:	or     esi,DWORD PTR [ecx-0x5a3e81d7]
  427983:	jmp    0x6503b16a
  427988:	mov    ch,BYTE PTR [edi]
  42798a:	into   
  42798b:	into   
  42798c:	stos   DWORD PTR es:[edi],eax
  42798d:	in     eax,0x7f
  42798f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427990:	mov    ebx,0x5b9e316e
  427995:	dec    ebx
  427996:	jne    0x427971
  427998:	or     al,0x6e
  42799a:	add    ch,dl
  42799c:	push   ecx
  42799d:	hlt    
  42799e:	push   edx
  42799f:	leave  
  4279a0:	dec    edi
  4279a1:	adc    al,0x25
  4279a3:	daa    
  4279a4:	pop    ds
  4279a5:	lahf   
  4279a6:	or     DWORD PTR [ecx+ebx*8-0x6ceff4d0],ebx
  4279ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4279ae:	(bad)  
  4279af:	jb     0x42799a
  4279b1:	ret    0x62ce
  4279b4:	or     DWORD PTR [eax+0x14a3ae8],ebp
  4279ba:	fidiv  WORD PTR [edx+0x54]
  4279bd:	and    al,0x1c
  4279bf:	sahf   
  4279c0:	retf   0xcae2
  4279c3:	sbb    cl,dh
  4279c5:	pushf  
  4279c6:	mov    bh,0x36
  4279c8:	outs   dx,DWORD PTR ds:[esi]
  4279c9:	clc    
  4279ca:	pop    edx
  4279cb:	add    BYTE PTR [esi-0x16],bh
  4279ce:	xor    bl,BYTE PTR [ebx+eiz*8]
  4279d1:	mov    WORD PTR [ebx],?
  4279d3:	retf   0x3284
  4279d6:	mov    DWORD PTR [edi+0x638f88c],esi
  4279dc:	sub    esp,eax
  4279de:	and    edi,edx
  4279e0:	fsubr  st(1),st
  4279e2:	mov    eax,ds:0x9d651a2a
  4279e7:	xor    al,0xd3
  4279e9:	mov    ebx,DWORD PTR [ebx]
  4279eb:	ins    DWORD PTR es:[edi],dx
  4279ec:	pusha  
  4279ed:	cwde   
  4279ee:	aad    0x2b
  4279f0:	call   0xec61f53a
  4279f5:	xchg   edx,eax
  4279f6:	daa    
  4279f7:	xchg   ebx,eax
  4279f8:	(bad)  
  4279f9:	mov    ebx,DWORD PTR [edx*2-0x4c1d0ef0]
  427a00:	icebp  
  427a01:	jbe    0x427a2e
  427a03:	fist   DWORD PTR [ecx+0x57ad3237]
  427a09:	jb     0x4279a2
  427a0b:	sbb    ebx,ebp
  427a0d:	inc    edi
  427a0e:	cmp    esp,DWORD PTR [eax]
  427a10:	scas   eax,DWORD PTR es:[edi]
  427a11:	daa    
  427a12:	pop    ss
  427a13:	fisttp WORD PTR [esi-0x2f]
  427a16:	loop   0x427a57
  427a18:	dec    esi
  427a19:	jnp    0x4279f3
  427a1b:	mov    dl,0x1d
  427a1d:	gs pop ebx
  427a1f:	mov    cl,BYTE PTR [edi+0x73]
  427a22:	or     al,0x97
  427a24:	xchg   DWORD PTR [eax-0x66ac5cdf],esp
  427a2a:	(bad)  
  427a2b:	mov    ebp,0xbbf7df79
  427a30:	pusha  
  427a31:	dec    ecx
  427a32:	mov    ds:0x5b2610a4,eax
  427a37:	and    DWORD PTR [esi+ecx*1],edx
  427a3a:	lahf   
  427a3b:	or     eax,0xbda35952
  427a40:	mov    cl,0xd2
  427a42:	xor    eax,0xa8e51015
  427a47:	cmp    al,0xc8
  427a49:	mov    ch,0x5c
  427a4b:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  427a4d:	xchg   ebp,eax
  427a4e:	fneni(8087 only) 
  427a50:	inc    ebp
  427a51:	in     al,dx
  427a52:	jg     0x427a46
  427a54:	aad    0xe3
  427a56:	adc    al,0xe0
  427a58:	xor    bh,dh
  427a5a:	pop    esi
  427a5b:	and    ebp,DWORD PTR [edi-0x79]
  427a5e:	cs mov ebx,0xb37fd563
  427a64:	adc    al,0x6
  427a66:	repnz xchg edi,eax
  427a68:	popf   
  427a69:	fst    DWORD PTR [eax-0x53]
  427a6c:	icebp  
  427a6d:	add    BYTE PTR [ecx],dh
  427a6f:	mov    ebp,DWORD PTR [esi-0x1c5b052]
  427a75:	fcomip st,st(5)
  427a77:	inc    esp
  427a78:	cmc    
  427a79:	xchg   edi,eax
  427a7a:	fsubrp st(5),st
  427a7c:	inc    ebx
  427a7d:	inc    ecx
  427a7e:	outs   dx,BYTE PTR ds:[esi]
  427a7f:	fistp  DWORD PTR [esi]
  427a81:	add    BYTE PTR [ecx+0x3],bl
  427a84:	rol    DWORD PTR [ebx+ebx*8-0x3a],0xdd
  427a89:	pop    ds
  427a8a:	sub    ebp,DWORD PTR [esi-0x7c7bc146]
  427a90:	je     0x427a99
  427a92:	lahf   
  427a93:	in     al,dx
  427a94:	add    DWORD PTR [eax],eax
  427a96:	daa    
  427a97:	add    eax,DWORD PTR [eax]
  427a99:	add    cl,dl
  427a9b:	and    eax,0xf08d7c72
  427aa0:	stc    
  427aa1:	pusha  
  427aa2:	std    
  427aa3:	hlt    
  427aa4:	cmp    ch,BYTE PTR [eax+eiz*4-0x11]
  427aa8:	aas    
  427aa9:	cmp    DWORD PTR [esp+eax*2-0x4e7d8054],0x74e0b25b
  427ab4:	loopne 0x427b35
  427ab6:	mov    ds:0xa8b72b85,eax
  427abb:	imul   edi,DWORD PTR [esi-0x56],0xb72213c9
  427ac2:	inc    ecx
  427ac3:	mov    eax,ds:0x775120a8
  427ac8:	jmp    FWORD PTR [edx-0x4813a30f]
  427ace:	fcmove st,st(6)
  427ad0:	(bad)  
  427ad1:	fbld   TBYTE PTR [edi-0x59]
  427ad4:	jnp    0x427ab1
  427ad6:	shl    DWORD PTR [ebx-0x68],1
  427ad9:	mov    ah,0xa8
  427adb:	jmp    0x678a:0xc019455f
  427ae2:	in     al,0xe5
  427ae4:	sub    al,0x54
  427ae6:	or     cl,ch
  427ae8:	push   dx
  427aea:	xchg   esp,eax
  427aeb:	dec    edx
  427aec:	test   BYTE PTR [eax],al
  427aee:	mov    ah,0xc8
  427af0:	xor    eax,0x7f5b0289
  427af5:	add    al,0x13
  427af7:	mov    edi,0xe9a0aca7
  427afc:	outs   dx,BYTE PTR ds:[esi]
  427afd:	je     0x427a9e
  427aff:	cmp    DWORD PTR [ebx-0x1ebb50dc],eax
  427b05:	ss and eax,0x78dc296c
  427b0b:	iret   
  427b0c:	out    dx,al
  427b0d:	and    ebx,esp
  427b0f:	(bad)  
  427b10:	outs   dx,DWORD PTR ds:[esi]
  427b11:	clc    
  427b12:	or     DWORD PTR [ebx],edx
  427b14:	cmp    eax,0x48e19044
  427b19:	loope  0x427b97
  427b1b:	add    ecx,DWORD PTR [edx-0x2]
  427b1e:	dec    eax
  427b1f:	pop    edx
  427b20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b21:	and    al,0xdb
  427b23:	in     eax,0xd8
  427b25:	mov    eax,ds:0x5382c9d6
  427b2a:	lock jp 0x427ad6
  427b2d:	or     al,0xdb
  427b2f:	adc    cl,BYTE PTR [edx+ebx*1]
  427b32:	jb     0x427b41
  427b34:	test   al,0x35
  427b36:	jge    0x427b6d
  427b38:	mov    ebp,0x1c509a65
  427b3d:	ret    
  427b3e:	inc    eax
  427b3f:	shl    BYTE PTR [edi+edi*4+0x4],1
  427b43:	dec    eax
  427b44:	addr16 (bad) 
  427b46:	jge    0x427b97
  427b48:	cmp    esp,edx
  427b4a:	dec    ecx
  427b4b:	adc    ebp,DWORD PTR [edx-0x6e]
  427b4e:	mov    BYTE PTR [edi+0x4e],0xbf
  427b52:	repz add eax,0xb2686018
  427b58:	push   ss
  427b59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b5a:	adc    DWORD PTR [ebx+eax*8+0x5],esi
  427b5e:	jae    0x427aec
  427b60:	fcom   DWORD PTR [ecx+eiz*2+0x7d923860]
  427b67:	mov    DWORD PTR [ebp+0x10],edx
  427b6a:	push   esi
  427b6b:	jb     0x427b27
  427b6d:	xchg   edx,eax
  427b6e:	jge    0x427b44
  427b70:	pop    eax
  427b71:	mov    bh,0x1a
  427b73:	cmp    edi,esp
  427b75:	aas    
  427b76:	clc    
  427b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b78:	imul   esp,DWORD PTR [ecx-0x74971c24],0xffffff9b
  427b7f:	xchg   esi,eax
  427b80:	into   
  427b81:	aad    0xce
  427b83:	in     al,dx
  427b84:	cmp    esi,edi
  427b86:	push   ecx
  427b87:	dec    edi
  427b88:	xor    eax,0x480bd4cf
  427b8d:	(bad)  
  427b8e:	cs jp  0x427bd8
  427b91:	sub    BYTE PTR [ecx],bl
  427b93:	cld    
  427b94:	test   BYTE PTR [esi+ecx*1],dl
  427b97:	pop    ecx
  427b98:	adc    ecx,DWORD PTR [edx]
  427b9a:	mov    eax,DWORD PTR [esi+0x3f]
  427b9d:	mov    ah,0x43
  427b9f:	lods   al,BYTE PTR ds:[esi]
  427ba0:	test   bh,dl
  427ba2:	out    0xd2,al
  427ba4:	dec    ebp
  427ba5:	sbb    DWORD PTR [esi+0x5bc483ad],esi
  427bab:	mov    ch,BYTE PTR [esi+0x26]
  427bae:	jp     0x427be8
  427bb0:	xchg   DWORD PTR [ebx-0xbb3663e],esp
  427bb6:	dec    ebp
  427bb7:	data16 std 
  427bb9:	inc    esi
  427bba:	ja     0x427b4e
  427bbc:	ds rcl cl,cl
  427bbf:	lods   eax,DWORD PTR es:[esi]
  427bc1:	push   esp
  427bc2:	jecxz  0x427bcf
  427bc4:	nop
  427bc5:	inc    edx
  427bc6:	call   0xdb72:0xc658
  427bcc:	div    DWORD PTR [edx+0x5ee3a989]
  427bd2:	mov    ebx,0x3379a64d
  427bd7:	lock push eax
  427bd9:	scas   eax,DWORD PTR es:[edi]
  427bda:	dec    edx
  427bdb:	add    ebx,DWORD PTR [eax+0x78272015]
  427be1:	out    0x2a,al
  427be3:	repnz sahf 
  427be5:	mov    bl,0xa5
  427be7:	ss pop edi
  427be9:	add    DWORD PTR [eax-0x910c30a],eax
  427bef:	and    eax,0x1f4ec31c
  427bf4:	sbb    bh,bh
  427bf6:	jno    0x427c22
  427bf8:	or     BYTE PTR [ecx-0x29be3ba5],bh
  427bfe:	hlt    
  427bff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c00:	or     eax,0xba6bdd14
  427c05:	pop    edx
  427c06:	pushf  
  427c07:	in     al,0x14
  427c09:	push   esi
  427c0a:	cmp    al,0x97
  427c0c:	scas   al,BYTE PTR es:[edi]
  427c0d:	dec    ecx
  427c0e:	mov    BYTE PTR [edx-0x3707b829],dh
  427c14:	gs sbb al,0xc6
  427c17:	adc    al,0x66
  427c19:	jg     0x427b9b
  427c1b:	and    BYTE PTR [eax],ah
  427c1d:	push   eax
  427c1e:	call   0xefd6b642
  427c23:	and    al,0xed
  427c25:	daa    
  427c26:	vcmppd xmm4,xmm6,XMMWORD PTR [eax-0x69],0x69
  427c2c:	ret    
  427c2d:	fld    TBYTE PTR [ebx-0x7d]
  427c30:	push   edx
  427c31:	mov    cs,WORD PTR [ebx+0x332ac046]
  427c37:	pop    ebp
  427c38:	mov    al,ds:0xc2114d5a
  427c3d:	retf   0xd51b
  427c40:	ds popa 
  427c42:	push   ebp
  427c43:	ja     0x427bc9
  427c45:	ficomp WORD PTR [ebx+ebp*4+0x56]
  427c49:	inc    ebp
  427c4a:	fld    QWORD PTR [si]
  427c4d:	adc    al,0x33
  427c4f:	or     al,0x7b
  427c51:	and    BYTE PTR [esi+0x6b],dh
  427c54:	out    dx,al
  427c55:	fcomp  QWORD PTR [edi+edi*1+0x504f3e1d]
  427c5c:	cmp    al,0xd9
  427c5e:	popa   
  427c5f:	sub    cl,BYTE PTR [edi]
  427c61:	jo     0x427cd4
  427c63:	xor    bh,ah
  427c65:	mov    eax,0x2efa275a
  427c6a:	dec    esi
  427c6b:	loope  0x427ca4
  427c6d:	inc    ecx
  427c6e:	add    eax,esp
  427c70:	inc    esp
  427c71:	pop    ds
  427c72:	outs   dx,BYTE PTR ds:[esi]
  427c73:	push   esi
  427c74:	fild   WORD PTR [edi+0x53c940a1]
  427c7a:	jmp    0x3e79:0x91696c94
  427c81:	(bad)  
  427c82:	push   es
  427c83:	push   ebp
  427c84:	pop    ds
  427c85:	mov    ds:0x473d06ba,al
  427c8a:	jae    0x427c88
  427c8c:	inc    eax
  427c8d:	and    DWORD PTR [eax-0x4281d1ed],eax
  427c93:	out    dx,al
  427c94:	cmp    eax,0x75568bd6
  427c99:	sub    ch,dh
  427c9b:	mov    esp,0x1615d185
  427ca0:	popf   
  427ca1:	push   cs
  427ca2:	sub    al,0x71
  427ca4:	test   eax,0xd7de4380
  427ca9:	test   eax,0x5f2575ab
  427cae:	sub    esp,ebx
  427cb0:	xor    al,0x9c
  427cb2:	(bad)
  427cb5:	cs mov dl,0x9d
  427cb8:	mov    ch,0xe8
  427cba:	cmc    
  427cbb:	mov    al,ds:0xa8aad094
  427cc0:	jmp    0x8528fe15
  427cc5:	dec    ebp
  427cc6:	sbb    ah,dl
  427cc8:	push   ds
  427cc9:	jg     0x427d05
  427ccb:	mov    ah,0x81
  427ccd:	push   cs
  427cce:	(bad)  
  427ccf:	mov    esp,0x33e81d4f
  427cd4:	imul   edx,DWORD PTR [eax+edi*2-0x50c642d7],0x3b
  427cdc:	pop    edx
  427cdd:	mov    edi,0x47a0b3c5
  427ce2:	jno    0x427d06
  427ce4:	inc    edx
  427ce5:	mov    cl,0x3a
  427ce7:	or     eax,0x43a3912d
  427cec:	sar    BYTE PTR [edi],cl
  427cee:	adc    bh,0x98
  427cf1:	mov    edx,edx
  427cf3:	fs xchg esp,eax
  427cf6:	mov    dl,0x7c
  427cf8:	xor    eax,0x5904e339
  427cfd:	pusha  
  427cfe:	popf   
  427cff:	push   es
  427d00:	and    edx,DWORD PTR [eax+0x6d]
  427d03:	mov    edi,0x54ed754e
  427d08:	je     0x427ca3
  427d0a:	jbe    0x427d43
  427d0c:	out    dx,eax
  427d0d:	jno    0x427cf5
  427d0f:	dec    edx
  427d10:	or     bl,bl
  427d12:	arpl   WORD PTR [edx],ax
  427d14:	push   0x45
  427d16:	push   DWORD PTR [edi]
  427d18:	sbb    al,0x75
  427d1a:	mov    esi,0x5abdbff2
  427d1f:	aaa    
  427d20:	(bad)  
  427d21:	clc    
  427d22:	xchg   ecx,eax
  427d23:	xchg   esi,eax
  427d24:	or     BYTE PTR [ebx],cl
  427d26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d27:	std    
  427d28:	jge    0x427da8
  427d2a:	mov    dh,0xd9
  427d2c:	cld    
  427d2d:	adc    BYTE PTR [edi+0x7613ee4],bl
  427d33:	inc    ebp
  427d34:	ss retf 0x121d
  427d38:	psrad  mm1,QWORD PTR [ebx-0x292b5cc0]
  427d3f:	daa    
  427d40:	dec    ebx
  427d41:	dec    BYTE PTR ds:0x77d3ef6f
  427d47:	pusha  
  427d48:	mov    ecx,0xcd49fc4d
  427d4d:	(bad)  
  427d4e:	jl     0x427d62
  427d50:	mov    dl,0xa
  427d52:	adc    eax,0x2105530b
  427d57:	sbb    ah,BYTE PTR [ecx]
  427d59:	(bad)  
  427d5a:	and    al,ch
  427d5c:	add    ecx,0x2990fe82
  427d62:	xchg   esp,eax
  427d63:	mov    bh,0xde
  427d65:	cli    
  427d66:	jmp    0x427dde
  427d68:	sbb    ebp,DWORD PTR [esi+0x7147af66]
  427d6e:	pop    ebp
  427d6f:	call   0x3faa9404
  427d74:	push   ecx
  427d75:	repz pop es
  427d77:	push   ss
  427d78:	xchg   ebp,eax
  427d79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d7a:	sbb    eax,0xd6e8bfb1
  427d7f:	jmp    0x427d65
  427d81:	mov    WORD PTR [esi+0x73dd9337],?
  427d87:	jmp    0x21363fb
  427d8c:	jns    0x427df1
  427d8e:	add    BYTE PTR [eax+0x16],ah
  427d91:	dec    edx
  427d92:	repnz out 0xa0,eax
  427d95:	push   ds
  427d96:	pop    ebp
  427d97:	cmp    eax,0x3f497e6a
  427d9c:	add    eax,DWORD PTR [eax+esi*2-0x41]
  427da0:	mov    ah,0x37
  427da2:	or     cl,BYTE PTR [edi-0x49865cd2]
  427da8:	lods   al,BYTE PTR ds:[esi]
  427da9:	(bad)  
  427dab:	scas   eax,DWORD PTR es:[edi]
  427dac:	inc    esp
  427dad:	sbb    bh,bl
  427daf:	outs   dx,BYTE PTR ds:[esi]
  427db0:	outs   dx,DWORD PTR ds:[esi]
  427db1:	mov    al,ds:0x973c4739
  427db6:	push   DWORD PTR [ebp-0x2e]
  427db9:	adc    al,0xe5
  427dbb:	adc    BYTE PTR [ebp+0x0],0x3b
  427dbf:	test   esi,eax
  427dc1:	add    BYTE PTR [ebx],bl
  427dc3:	daa    
  427dc4:	pushf  
  427dc5:	cli    
  427dc6:	mov    esp,0x2ae77ffb
  427dcb:	scas   al,BYTE PTR es:[edi]
  427dcc:	aad    0xf
  427dce:	and    DWORD PTR [eax+edi*4+0x1efc646],0x0
  427dd6:	daa    
  427dd7:	add    eax,DWORD PTR [eax]
  427dd9:	add    al,dl
  427ddb:	popa   
  427ddc:	pop    edi
  427ddd:	or     eax,0x1e7d23d9
  427de2:	out    dx,eax
  427de3:	push   ds
  427de4:	add    DWORD PTR [esi-0x39b4ccc1],esp
  427dea:	fld    QWORD PTR [esi+0x4166cef0]
  427df0:	ret    0x525a
  427df3:	(bad)  [ecx]
  427df5:	xchg   ebp,eax
  427df6:	dec    esi
  427df7:	fist   WORD PTR [edx]
  427df9:	push   edx
  427dfa:	rcr    ebx,cl
  427dfc:	jg     0x427d96
  427dfe:	dec    esp
  427dff:	add    DWORD PTR [ebx+0x64d34f07],edx
  427e05:	dec    ecx
  427e06:	inc    BYTE PTR [ecx]
  427e08:	call   0xea2d420a
  427e0d:	mov    ah,0x94
  427e0f:	sti    
  427e10:	in     al,0x21
  427e12:	ins    DWORD PTR es:[edi],dx
  427e13:	dec    ebx
  427e14:	xor    ch,dh
  427e16:	arpl   WORD PTR [eax+eiz*2+0x3],si
  427e1a:	sbb    BYTE PTR [esi-0x7dcc45ff],0x47
  427e21:	mov    dh,0xdd
  427e23:	push   edi
  427e24:	or     al,0x94
  427e27:	(bad)  
  427e28:	jle    0x427e85
  427e2a:	ret    0x7dbb
  427e2d:	mov    DWORD PTR [edx+0x70e849ed],edx
  427e33:	xor    dl,BYTE PTR [eax-0x20]
  427e36:	gs ja  0x427e45
  427e39:	mov    ds:0x87d2e00f,eax
  427e3e:	pop    edx
  427e3f:	pusha  
  427e40:	data16 arpl WORD PTR [ecx+0xc15b014],di
  427e47:	repnz push ebx
  427e49:	add    esi,DWORD PTR [eax+0x35942335]
  427e4f:	shl    BYTE PTR [edi-0x7b],cl
  427e52:	jno    0x427ecb
  427e54:	mov    dl,0xbf
  427e56:	js     0x427e63
  427e58:	add    ah,dh
  427e5a:	dec    edi
  427e5b:	(bad)  
  427e5c:	sbb    bh,bl
  427e5e:	je     0x427eab
  427e60:	lock or eax,0xf0eb6457
  427e66:	mov    esp,0xd1486263
  427e6b:	addr16 mov eax,0x5ebd672e
  427e71:	ins    DWORD PTR es:[edi],dx
  427e72:	add    esp,esp
  427e74:	das    
  427e75:	sub    ebx,DWORD PTR ds:0x94ce17ab
  427e7b:	dec    BYTE PTR [esi]
  427e7d:	daa    
  427e7e:	pop    ss
  427e7f:	dec    esp
  427e80:	sahf   
  427e81:	inc    ebp
  427e82:	xchg   edx,eax
  427e83:	jbe    0x427e73
  427e85:	push   0xabf065d0
  427e8a:	(bad)  
  427e8b:	cmp    eax,0x52d3058d
  427e90:	mov    ch,0x7d
  427e92:	sub    DWORD PTR [ebp-0x68],eax
  427e95:	iret   
  427e96:	cmp    DWORD PTR fs:[ecx+edx*2-0x1f],esi
  427e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e9c:	xchg   esp,eax
  427e9d:	add    al,0xdb
  427e9f:	xchg   ebx,eax
  427ea0:	inc    edi
  427ea1:	shl    DWORD PTR [ecx+0x179cdecf],cl
  427ea7:	push   ss
  427ea8:	stc    
  427ea9:	nop
  427eaa:	add    eax,0x8fe51e92
  427eaf:	push   ecx
  427eb0:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427eb2:	cld    
  427eb3:	pop    DWORD PTR [esi+0x24167031]
  427eb9:	push   ds
  427eba:	aas    
  427ebb:	and    ch,BYTE PTR [ecx+esi*8+0x4e]
  427ebf:	cli    
  427ec0:	pop    ss
  427ec1:	pop    esp
  427ec2:	pushf  
  427ec3:	stos   DWORD PTR es:[edi],eax
  427ec4:	push   ebx
  427ec5:	xchg   ebx,eax
  427ec6:	jne    0x427eb7
  427ec8:	les    edi,FWORD PTR ds:0xf293599
  427ece:	xor    ebx,ecx
  427ed0:	jb     0x427f47
  427ed2:	add    DWORD PTR [edi],esi
  427ed4:	out    dx,al
  427ed5:	cmp    ebp,DWORD PTR [ebx+0x18]
  427ed8:	rol    ebx,cl
  427eda:	and    edx,DWORD PTR [edx-0x39]
  427edd:	outs   dx,BYTE PTR ds:[si]
  427edf:	popf   
  427ee0:	call   0xd5169869
  427ee5:	cmp    eax,0x3f322a60
  427eea:	or     eax,0x4cc78422
  427eef:	data16 outs dx,BYTE PTR ds:[esi]
  427ef1:	int3   
  427ef2:	pop    ds
  427ef3:	pop    esi
  427ef4:	and    al,ch
  427ef6:	gs inc eax
  427ef8:	inc    ebp
  427ef9:	test   DWORD PTR [ebx],ebp
  427efb:	lods   al,BYTE PTR ds:[esi]
  427efc:	adc    edx,ebp
  427efe:	adc    eax,edx
  427f00:	int    0xad
  427f02:	inc    ecx
  427f03:	(bad)  
  427f04:	loop   0x427f04
  427f06:	cmp    BYTE PTR [ecx-0x8b1a72b],bh
  427f0c:	cmp    DWORD PTR [ecx-0x67],esp
  427f0f:	pop    edx
  427f10:	dec    esp
  427f11:	and    al,BYTE PTR [ebp-0x33]
  427f14:	sbb    ch,BYTE PTR [esi-0x2b628ba1]
  427f1a:	jnp    0x427f74
  427f1c:	retf   
  427f1d:	test   al,0xd4
  427f1f:	lds    esi,FWORD PTR [edi-0x479af89d]
  427f25:	mov    cl,0x1a
  427f27:	push   edi
  427f28:	dec    edx
  427f29:	pop    es
  427f2a:	inc    edi
  427f2b:	inc    esp
  427f2c:	cmp    eax,0xba41a02c
  427f31:	and    al,bl
  427f33:	mov    al,BYTE PTR [edi]
  427f35:	and    DWORD PTR [esi],esi
  427f37:	inc    ecx
  427f38:	mov    edx,0x2c079d62
  427f3d:	inc    edx
  427f3e:	aad    0x19
  427f40:	out    dx,al
  427f41:	cmp    DWORD PTR [ebp-0x2f341f02],esp
  427f47:	ins    BYTE PTR es:[edi],dx
  427f48:	pop    eax
  427f49:	sub    DWORD PTR [ebx-0x5b],edi
  427f4c:	sub    eax,0x4b868901
  427f51:	fucomp st(7)
  427f53:	retf   
  427f54:	fild   DWORD PTR [edx+edi*8]
  427f57:	sbb    DWORD PTR [edx+esi*8+0x5caec49b],ecx
  427f5e:	fidivr WORD PTR [edi]
  427f60:	cmp    DWORD PTR [edi+0x28e545d4],esi
  427f66:	ss aaa 
  427f68:	mov    esp,0x2db3a1
  427f6d:	loop   0x427fd7
  427f6f:	push   edi
  427f70:	mov    BYTE PTR [edx],bl
  427f72:	ss mov edx,0x10a3f39c
  427f78:	imul   eax,ebx,0x58
  427f7b:	outs   dx,DWORD PTR ds:[esi]
  427f7c:	jns    0x427fc4
  427f7e:	mov    edi,0x3c5cf4a1
  427f83:	sub    DWORD PTR [ecx-0x16],esp
  427f86:	(bad)  
  427f87:	and    edx,edx
  427f89:	mov    al,ds:0xa6853bad
  427f8e:	popf   
  427f8f:	sar    DWORD PTR [edx+0x38c00b22],0xea
  427f96:	les    esi,FWORD PTR [edi+0x23]
  427f99:	mov    ebp,ebp
  427f9b:	pusha  
  427f9c:	loop   0x427f83
  427f9e:	pop    eax
  427f9f:	je     0x427f88
  427fa1:	lahf   
  427fa2:	popa   
  427fa3:	imul   esi,DWORD PTR [eax+0x4d6db054],0xce76fb3b
  427fad:	and    esi,edi
  427faf:	test   ecx,ecx
  427fb1:	lds    edi,FWORD PTR [eax-0x3b507640]
  427fb7:	call   FWORD PTR [edi-0x35]
  427fba:	fistp  DWORD PTR [ebp-0x68]
  427fbd:	mov    ds:0xc83195f4,al
  427fc2:	jns    0x427fb3
  427fc4:	lds    ebx,FWORD PTR [esi]
  427fc6:	cmp    al,0x5d
  427fc8:	ret    0x7230
  427fcb:	cmp    al,0x2e
  427fcd:	test   al,0x8f
  427fcf:	mov    ds:0xdf495a80,al
  427fd4:	in     al,0x4e
  427fd6:	adc    eax,0xb729f52a
  427fdb:	aam    0x68
  427fdd:	xchg   edi,eax
  427fde:	mov    eax,0x5626d443
  427fe3:	mov    dh,0x7a
  427fe5:	or     eax,0xc3019045
  427fea:	popa   
  427feb:	add    BYTE PTR [edi+ebp*2-0x13a91776],dh
  427ff2:	std    
  427ff3:	fidiv  DWORD PTR [ecx-0x370f63a3]
  427ff9:	dec    ecx
  427ffa:	adc    dl,BYTE PTR [ecx+0x33da22a]
  428000:	cmp    BYTE PTR [esi+0x4ec8d5ee],dl
  428006:	inc    ecx
  428007:	movsx  esp,BYTE PTR [ecx+0x5b53183f]
  42800e:	xor    BYTE PTR [esi],al
  428010:	push   ebx
  428011:	mov    eax,ds:0x9cde25d9
  428016:	js     0x428081
  428018:	pushf  
  428019:	sbb    esi,DWORD PTR [edx]
  42801b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42801c:	enter  0x8041,0xb2
  428020:	outs   dx,DWORD PTR ds:[esi]
  428021:	push   0xbce44249
  428026:	(bad)  
  428027:	(bad)  
  428028:	pop    ebx
  428029:	add    ebx,ebx
  42802b:	and    bh,BYTE PTR [ecx+0x21e4e0eb]
  428031:	adc    ecx,DWORD PTR [esi+edi*1]
  428034:	stc    
  428035:	test   DWORD PTR [edi],0x6063a63a
  42803b:	jge    0x428094
  42803d:	fst    QWORD PTR [ebx+0x72b2be9c]
  428043:	gs pop esi
  428045:	adc    DWORD PTR [ebx+0x513f6d3e],esp
  42804b:	and    DWORD PTR [ebp+0x6173d25d],edi
  428051:	push   esp
  428052:	jnp    0x42802a
  428054:	jbe    0x428029
  428056:	(bad)  
  428057:	mov    ebp,0xd8c61f88
  42805c:	push   edx
  42805d:	clc    
  42805e:	jnp    0x42803f
  428060:	jne    0x4280a1
  428062:	ss and al,0xbf
  428065:	push   edx
  428066:	mov    ecx,0x1d824c6b
  42806b:	sbb    al,0xde
  42806d:	lods   eax,DWORD PTR ds:[esi]
  42806e:	fisttp DWORD PTR [ebx+0x4d]
  428071:	jl     0x4280d1
  428073:	icebp  
  428074:	xchg   edi,eax
  428075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428076:	ins    DWORD PTR es:[edi],dx
  428077:	xor    al,dh
  428079:	loop   0x428053
  42807b:	xlat   BYTE PTR ds:[ebx]
  42807c:	mov    esi,0x25ff69b
  428081:	rcl    BYTE PTR [eax],cl
  428083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428084:	add    DWORD PTR [ecx],edx
  428086:	sbb    DWORD PTR [edx+0x592ca7fd],edx
  42808c:	pop    ebp
  42808d:	(bad)  
  42808e:	push   ebx
  42808f:	call   0xc29259ba
  428094:	fistp  WORD PTR [eax]
  428096:	popf   
  428097:	xor    eax,0x313c1be1
  42809c:	ret    0xd1e3
  42809f:	cwde   
  4280a0:	cld    
  4280a1:	fmul   DWORD PTR ds:0x21ed440d
  4280a7:	or     ch,cl
  4280a9:	jns    0x4280b8
  4280ab:	mov    ah,0x92
  4280ad:	mov    ds:0x8c6dda25,eax
  4280b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280b3:	cli    
  4280b4:	call   0x91a0:0xee62403d
  4280bb:	mov    al,0x4d
  4280bd:	cmp    al,0x7
  4280bf:	sar    BYTE PTR [eax-0x4d],cl
  4280c2:	call   DWORD PTR [ecx-0x56]
  4280c5:	scas   eax,DWORD PTR es:[edi]
  4280c6:	sbb    ch,BYTE PTR [edx+0x6b]
  4280c9:	das    
  4280ca:	add    ebp,ebx
  4280cc:	add    eax,0x5b685ef7
  4280d1:	das    
  4280d2:	and    al,BYTE PTR [eax+0x4c25acb2]
  4280d8:	rcr    BYTE PTR [ebx+0x39a36f53],1
  4280de:	mov    ds:0xa41fd866,al
  4280e3:	fild   QWORD PTR [eax-0x195d44cb]
  4280e9:	jae    0x42809d
  4280eb:	and    eax,0x20fa94fb
  4280f0:	and    BYTE PTR [ebx-0x51],ch
  4280f3:	and    dh,0x6d
  4280f6:	dec    ecx
  4280f7:	imul   ebx,DWORD PTR ds:0x5980fc15,0xffffffaa
  4280fe:	or     al,0x6d
  428100:	loope  0x428102
  428102:	call   0xdafe:0xfef82244
  428109:	bound  di,DWORD PTR [eax-0x62a38b8b]
  428110:	std    
  428111:	in     eax,0xed
  428113:	repnz add DWORD PTR [eax],eax
  428116:	daa    
  428117:	add    eax,DWORD PTR [eax]
  428119:	add    BYTE PTR [edx+0x38807aff],bh
  42811f:	and    eax,0xeb83274b
  428124:	xchg   ecx,eax
  428125:	enter  0xfdf5,0xd1
  428129:	rcr    BYTE PTR [ecx+eiz*8-0x62],0xb7
  42812e:	mov    esp,DWORD PTR [edi]
  428130:	mov    ch,0xf1
  428132:	jl     0x428179
  428134:	fwait
  428135:	xor    eax,0x93af3765
  42813a:	test   eax,0xb4505bcd
  42813f:	les    ebp,FWORD PTR [ecx+esi*1]
  428142:	jb     0x42813d
  428144:	xor    eax,0x171bb8f5
  428149:	jae    0x428128
  42814b:	cli    
  42814c:	dec    edx
  42814d:	cmp    edi,DWORD PTR es:[ecx+0x69]
  428151:	jmp    0xd6144735
  428156:	outs   dx,BYTE PTR ds:[esi]
  428157:	jmp    0xfd03ac31
  42815c:	imul   edx,DWORD PTR [edi+esi*8+0x334696c5],0x6e
  428164:	(bad)  
  428165:	inc    eax
  428166:	xor    al,0xb0
  428168:	adc    ah,BYTE PTR [esi]
  42816a:	test   DWORD PTR [eax-0x3e],0x1b97d6b8
  428171:	add    BYTE PTR [edx-0x3175a5b9],dl
  428177:	dec    eax
  428178:	hlt    
  428179:	ins    DWORD PTR es:[edi],dx
  42817a:	mov    dl,0x9d
  42817c:	outs   dx,BYTE PTR ds:[esi]
  42817d:	cli    
  42817e:	call   0xfae90631
  428183:	outs   dx,BYTE PTR ds:[esi]
  428184:	cld    
  428185:	(bad)  
  428186:	add    dh,BYTE PTR [eax-0x19]
  428189:	pop    edi
  42818a:	not    DWORD PTR [ebx]
  42818c:	pop    ecx
  42818d:	mov    ch,0xe7
  42818f:	js     0x428165
  428191:	jmp    0x79c47f80
  428196:	test   eax,0x5c901b27
  42819b:	jo     0x4281e7
  42819d:	and    ah,BYTE PTR [edi-0x71c17d30]
  4281a3:	test   al,0x97
  4281a5:	inc    ebx
  4281a6:	sub    ah,BYTE PTR ds:0x3e54b10b
  4281ac:	or     DWORD PTR [ebx-0x2],esp
  4281af:	xchg   DWORD PTR [eax+0x7d62c72d],edi
  4281b5:	out    dx,al
  4281b6:	and    esi,DWORD PTR ds:0x99a4959a
  4281bc:	and    al,0x20
  4281be:	js     0x428234
  4281c0:	(bad)  
  4281c1:	mov    ecx,0x3fea23db
  4281c6:	popa   
  4281c7:	nop
  4281c8:	test   BYTE PTR [edi+0x5e],dl
  4281cb:	pop    esi
  4281cc:	xchg   ebp,eax
  4281cd:	xchg   edx,eax
  4281ce:	xor    cl,BYTE PTR [ebx]
  4281d0:	cdq    
  4281d1:	mov    bl,0xe6
  4281d3:	pop    es
  4281d4:	cld    
  4281d5:	dec    ebx
  4281d6:	outs   dx,DWORD PTR ds:[esi]
  4281d7:	add    edx,esi
  4281d9:	sub    al,0x18
  4281db:	adc    al,0x66
  4281dd:	or     esp,DWORD PTR [edi]
  4281df:	mov    bl,0x7f
  4281e1:	in     eax,dx
  4281e2:	cmp    BYTE PTR [ebx+ecx*8],0x2d
  4281e6:	sbb    cl,BYTE PTR [edx]
  4281e8:	int    0x14
  4281ea:	xchg   esp,eax
  4281eb:	xor    dl,BYTE PTR [edi+eiz*2+0xc]
  4281ef:	and    dh,bh
  4281f1:	jl     0x428239
  4281f3:	sub    eax,0x9a1d2854
  4281f8:	pop    ds
  4281f9:	shl    BYTE PTR [edx],0x3a
  4281fc:	mov    BYTE PTR [esi-0x7f],dl
  4281ff:	test   edi,0x15417631
  428205:	xor    bh,dh
  428207:	mov    bh,0xc2
  428209:	push   ecx
  42820a:	dec    ecx
  42820b:	mov    eax,ds:0xfceb6a08
  428210:	adc    BYTE PTR [edx],ch
  428212:	jne    0x428288
  428214:	xlat   BYTE PTR ds:[ebx]
  428215:	pushf  
  428216:	loope  0x428236
  428218:	pushf  
  428219:	(bad)  
  42821a:	mov    ebp,0xb975f2ea
  42821f:	outs   dx,BYTE PTR ds:[esi]
  428220:	sbb    al,0xb5
  428222:	push   ecx
  428223:	or     DWORD PTR fs:[ecx],0xffffffa5
  428227:	cmp    eax,0xdb6af1cc
  42822c:	push   ds
  42822d:	(bad)  [edi-0x4009ae7c]
  428233:	fld    TBYTE PTR [eax+ebx*2+0x24]
  428237:	mov    bl,0x4a
  428239:	sub    eax,0xa2db92af
  42823e:	in     al,0xcf
  428240:	xor    esp,esp
  428242:	rcr    DWORD PTR [edi-0x3b],0x3d
  428246:	xlat   BYTE PTR ds:[ebx]
  428247:	(bad)
  42824b:	xchg   esi,eax
  42824c:	sub    al,0x98
  42824e:	cmp    BYTE PTR [ecx+ebx*4-0x43621a20],dh
  428255:	sbb    eax,0xc3c3c8c5
  42825a:	addr16 pusha 
  42825c:	mov    esi,0xbee4e1d6
  428261:	aad    0xf5
  428263:	(bad)  
  428264:	ss add eax,0x5cd79823
  42826a:	sub    eax,0x4a2b6cb7
  42826f:	ja     0x4282d1
  428271:	sub    eax,0x9f4f516
  428276:	mov    esp,0x78d1ab62
  42827b:	test   eax,0x2617cb24
  428280:	and    ebx,DWORD PTR [edi-0x3df173f9]
  428286:	out    0x9b,al
  428288:	mov    esi,0xf9506b1c
  42828d:	outs   dx,DWORD PTR ds:[esi]
  42828e:	test   DWORD PTR [ebx],ebx
  428290:	mov    dh,bl
  428292:	push   ds
  428293:	pop    esp
  428294:	hlt    
  428295:	inc    ecx
  428296:	mov    ds:0xb121971b,al
  42829b:	and    ebx,DWORD PTR [esi+0x27]
  42829e:	mov    dh,0xba
  4282a0:	adc    dh,dh
  4282a2:	ds iret 
  4282a4:	mov    al,0x3
  4282a6:	xchg   DWORD PTR [esi-0x2105db09],edi
  4282ac:	xchg   BYTE PTR [ecx+0x44],cl
  4282af:	pop    ecx
  4282b0:	inc    ecx
  4282b1:	xor    dh,BYTE PTR [edx-0x31]
  4282b4:	pop    edi
  4282b5:	push   cs
  4282b6:	xchg   BYTE PTR [ebx],bl
  4282b8:	jnp    0x428314
  4282ba:	push   es
  4282bb:	mov    al,ds:0xb18930d9
  4282c0:	jecxz  0x4282f0
  4282c2:	and    BYTE PTR [eax+0x58ae2bf4],al
  4282c8:	jae    0x428298
  4282ca:	pusha  
  4282cb:	std    
  4282cc:	cmp    BYTE PTR [esi+0x73],dl
  4282cf:	test   BYTE PTR [esi+edx*8+0x360689b1],0xf2
  4282d7:	adc    cl,BYTE PTR [edx+0x27]
  4282da:	cmp    ah,bl
  4282dc:	fmul   DWORD PTR [edx+0x20f97450]
  4282e2:	out    dx,al
  4282e3:	adc    BYTE PTR [ebx+ebx*4-0x4317f099],bh
  4282ea:	jns    0x4282d5
  4282ec:	or     al,0x5b
  4282ee:	add    esp,DWORD PTR [edi]
  4282f0:	(bad)  
  4282f1:	or     BYTE PTR [edx],dh
  4282f3:	iret   
  4282f4:	repnz mov dl,0x95
  4282f7:	cli    
  4282f8:	loope  0x4282e6
  4282fa:	mov    ebx,0x590305a0
  4282ff:	out    dx,eax
  428300:	mov    ebp,0x43b812c1
  428305:	mov    ebx,0x3930029e
  42830a:	(bad)  
  42830b:	pop    ebp
  42830c:	mov    ch,0xc5
  42830e:	das    
  42830f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428310:	inc    eax
  428311:	or     bh,BYTE PTR ds:0x3ccda406
  428317:	repnz add ah,BYTE PTR [ebx+0x20]
  42831b:	aam    0xe8
  42831d:	test   BYTE PTR [edi-0x2e],ch
  428320:	scas   eax,DWORD PTR es:[edi]
  428321:	mov    ebx,0xd4cbc5ca
  428326:	test   al,0xc5
  428328:	or     BYTE PTR [ecx+0x787d7432],ch
  42832e:	adc    DWORD PTR [esp+edi*4-0x7fc4338f],0x36
  428336:	(bad)  
  428338:	xchg   esi,eax
  428339:	lock and bl,bh
  42833c:	cmp    esi,0xffffff86
  42833f:	cwde   
  428340:	call   0x13c3baee
  428345:	or     esp,DWORD PTR [esi+eiz*1]
  428348:	cli    
  428349:	fdiv   st(7),st
  42834b:	add    DWORD PTR [esi-0x70],edi
  42834e:	mov    esi,0xacfea6df
  428353:	pop    edi
  428354:	xor    bh,dl
  428356:	int    0xdd
  428358:	bound  ebp,QWORD PTR [eax+0x544bc39c]
  42835e:	ins    BYTE PTR es:[edi],dx
  42835f:	pop    eax
  428360:	adc    BYTE PTR [ecx+0xf],bl
  428363:	outs   dx,BYTE PTR ds:[esi]
  428364:	adc    cl,dh
  428366:	sbb    al,0x47
  428368:	(bad)  
  428369:	inc    ecx
  42836a:	shl    DWORD PTR [ecx+0x6aaaa8b0],cl
  428370:	and    DWORD PTR [eax-0x668475d],eax
  428376:	ds dec esp
  428378:	cmp    ebp,DWORD PTR [esi]
  42837a:	and    BYTE PTR cs:[eax+0x5056d5d4],dl
  428381:	sub    al,0x82
  428383:	sbb    BYTE PTR [esi-0x6e],cl
  428386:	push   edx
  428387:	(bad)  
  428388:	fsubr  DWORD PTR [ebx]
  42838a:	sub    DWORD PTR [edi],esi
  42838c:	loop   0x428393
  42838e:	cli    
  42838f:	xor    DWORD PTR [esi+0x71],eax
  428392:	cwde   
  428393:	xchg   ecx,eax
  428394:	xchg   ebp,eax
  428395:	out    0x63,al
  428397:	stos   DWORD PTR es:[edi],eax
  428398:	iret   
  428399:	je     0x4283b8
  42839b:	adc    DWORD PTR [edi+0x37],eax
  42839e:	(bad)  
  42839f:	adc    BYTE PTR [ecx+eiz*1-0x41],bh
  4283a3:	mov    ch,BYTE PTR [ecx-0x2c]
  4283a6:	ffree  st(7)
  4283a8:	sbb    al,0xf7
  4283aa:	adc    dl,BYTE PTR [edx]
  4283ac:	sbb    BYTE PTR [ebx-0x35],cl
  4283af:	inc    edi
  4283b0:	dec    ebx
  4283b1:	and    eax,0x23602167
  4283b6:	test   eax,0x51ceefb5
  4283bb:	call   0xae9dbc58
  4283c0:	sti    
  4283c1:	mov    eax,ds:0xe2b1c6d4
  4283c6:	pop    esi
  4283c7:	iret   
  4283c8:	add    DWORD PTR [esi-0x78],ebp
  4283cb:	stos   BYTE PTR es:[edi],al
  4283cc:	inc    esp
  4283cd:	add    DWORD PTR [eax],eax
  4283cf:	xor    eax,0xb19d3e11
  4283d4:	push   ebx
  4283d5:	ds imul edi,ecx,0xffffff8a
  4283d9:	div    BYTE PTR es:[ebp+0x70]
  4283dd:	adc    ecx,DWORD PTR [esi]
  4283df:	rcr    BYTE PTR [ecx+eiz*1],0x3
  4283e3:	out    0xdb,al
  4283e5:	xor    al,0xda
  4283e7:	imul   esi,ebp,0x46
  4283ea:	dec    ebx
  4283eb:	sbb    BYTE PTR [esi+0x2bb5d9ae],dl
  4283f1:	dec    esi
  4283f2:	int3   
  4283f3:	sub    DWORD PTR [ebp-0x56],edx
  4283f6:	xor    eax,0x24f0269d
  4283fb:	in     eax,dx
  4283fc:	jno    0x42846d
  4283fe:	repnz mov ebx,es
  428401:	pop    edi
  428402:	jl     0x428422
  428404:	out    0xd0,eax
  428406:	test   eax,edx
  428408:	stos   DWORD PTR es:[edi],eax
  428409:	into   
  42840a:	shr    BYTE PTR [edx-0x713521f2],cl
  428410:	or     al,0xe2
  428412:	push   ebx
  428413:	jl     0x428435
  428415:	and    dl,BYTE PTR [ecx]
  428417:	mov    DWORD PTR [ecx-0x25871db4],edx
  42841d:	in     al,0xf
  42841f:	mov    ah,0x20
  428421:	stos   BYTE PTR es:[edi],al
  428422:	pop    eax
  428423:	cld    
  428424:	or     eax,0xff23fe7b
  428429:	sbb    ebx,eax
  42842b:	and    al,0x8
  42842d:	stc    
  42842e:	dec    eax
  42842f:	pop    es
  428430:	sub    ecx,ebx
  428432:	pop    edi
  428433:	pop    esp
  428434:	les    edx,FWORD PTR es:[eax+edx*1]
  428438:	pop    edi
  428439:	mov    ch,0x9a
  42843b:	pusha  
  42843c:	les    esp,FWORD PTR [eax+0x8a8159]
  428442:	nop
  428443:	stos   DWORD PTR es:[edi],eax
  428444:	es ret 
  428446:	aas    
  428447:	iret   
  428448:	cmc    
  428449:	sti    
  42844a:	pushf  
  42844b:	ds loop 0x42843a
  42844e:	cs ret 
  428450:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428451:	push   esp
  428452:	adc    al,0xf6
  428454:	add    DWORD PTR [eax],eax
  428456:	daa    
  428457:	add    eax,DWORD PTR [eax]
  428459:	add    BYTE PTR [esi],al
  42845b:	inc    esi
  42845c:	out    0xca,eax
  42845e:	js     0x42842a
  428460:	rcl    BYTE PTR [esi-0x12],1
  428463:	test   al,0x10
  428465:	fiadd  WORD PTR [edi-0x3556904a]
  42846b:	test   eax,0x4d45ed49
  428470:	retf   
  428471:	push   0xccd782a8
  428476:	outs   dx,DWORD PTR ds:[esi]
  428477:	loope  0x428495
  428479:	imul   BYTE PTR [esi+0x38]
  42847c:	(bad)  
  42847d:	std    
  42847e:	and    ebp,DWORD PTR [ebp-0x18b4745d]
  428484:	or     edx,eax
  428486:	fdivr  QWORD PTR [ebx-0x6]
  428489:	cli    
  42848a:	imul   ecx,DWORD PTR [eax],0x932f95b
  428490:	cld    
  428491:	or     DWORD PTR [ecx-0x560f6735],edx
  428497:	(bad)  
  428498:	stos   BYTE PTR es:[edi],al
  428499:	fnstenv [edi+0x3b]
  42849c:	mov    DWORD PTR [ebx-0x16],ecx
  42849f:	outs   dx,BYTE PTR ds:[esi]
  4284a0:	xchg   DWORD PTR [esi+ebx*1+0x29],esp
  4284a4:	ror    DWORD PTR [ebp+0x9],0x9f
  4284a8:	idiv   DWORD PTR [ebp+eax*1+0x5646a495]
  4284af:	add    cl,ah
  4284b1:	push   eax
  4284b2:	and    ebx,esi
  4284b4:	out    0xf4,eax
  4284b6:	jmp    0x42844c
  4284b8:	xchg   esi,eax
  4284b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4284ba:	adc    esi,esp
  4284bc:	xor    al,0x53
  4284be:	push   ss
  4284bf:	arpl   WORD PTR [esp+eiz*8+0x111e519e],sp
  4284c6:	fmulp  st(5),st
  4284c8:	dec    ebx
  4284c9:	mov    edx,0xa980ec4a
  4284ce:	fidivr WORD PTR [edx]
  4284d0:	mov    edx,0x58455762
  4284d5:	inc    esi
  4284d6:	fst    QWORD PTR [edx+0x2042462c]
  4284dc:	into   
  4284dd:	sbb    DWORD PTR [ebx],ebx
  4284df:	adc    ecx,DWORD PTR [edi+0x7190ae88]
  4284e5:	mov    dh,0x36
  4284e7:	jo     0x428509
  4284e9:	mov    edx,0x377b8a5a
  4284ee:	or     al,cl
  4284f0:	int    0x55
  4284f2:	mov    ds:0x81dd8fc1,al
  4284f7:	push   0xb395a38
  4284fc:	xchg   ebx,eax
  4284fd:	mov    esp,DWORD PTR [eax-0x558f46bc]
  428503:	cmp    al,0xe3
  428505:	push   esi
  428506:	int3   
  428507:	leave  
  428508:	call   0x9eee:0x48944a43
  42850f:	shr    DWORD PTR [eax],cl
  428511:	popa   
  428512:	cmp    dl,BYTE PTR [edx-0x66f83950]
  428518:	or     ebp,DWORD PTR [ecx]
  42851a:	mov    eax,0x802b796b
  42851f:	in     eax,0x55
  428521:	js     0x4284b9
  428523:	jge    0x4284a8
  428525:	ror    BYTE PTR [ebp+eax*4+0x1629952c],0xd9
  42852d:	cli    
  42852e:	enter  0x395,0xce
  428532:	loop   0x4284e2
  428534:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  428536:	jbe    0x428588
  428538:	clc    
  428539:	stos   DWORD PTR es:[edi],eax
  42853a:	add    ecx,DWORD PTR [ebp-0x4653c9b5]
  428540:	or     edi,edx
  428542:	out    0xa3,eax
  428544:	push   ecx
  428545:	adc    al,0xa6
  428547:	jns    0x42850b
  428549:	jp     0x42852f
  42854b:	mov    ds:0x6cfeade8,eax
  428550:	lock xchg BYTE PTR [ecx+0x55],ch
  428554:	inc    edx
  428555:	nop
  428556:	fld    DWORD PTR fs:[esi-0x15445fb]
  42855d:	add    al,0xcd
  42855f:	xor    eax,0x9166b09a
  428564:	out    0xb5,eax
  428566:	dec    ebp
  428567:	fidivr WORD PTR [edx-0x33]
  42856a:	jb     0x428570
  42856c:	xor    al,0xd3
  42856e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42856f:	xlat   BYTE PTR ds:[ebx]
  428570:	pop    ebp
  428571:	out    0xa0,eax
  428573:	idiv   BYTE PTR ds:0x25457666
  428579:	pop    edx
  42857a:	(bad)  
  42857b:	mov    ds:0x4b411fe7,eax
  428580:	retf   0x867e
  428583:	mov    eax,ds:0x449841f2
  428588:	loope  0x4285d7
  42858a:	ficomp WORD PTR [ebp+0x6eb055d4]
  428590:	lahf   
  428591:	fs mov esi,0xaa5006a7
  428597:	dec    edi
  428598:	mov    eax,ebp
  42859a:	mov    dl,0x72
  42859c:	jp     0x4285fa
  42859e:	adc    ah,BYTE PTR [ebp+0x8]
  4285a1:	stc    
  4285a2:	sub    ch,BYTE PTR [ebx]
  4285a4:	ins    BYTE PTR es:[edi],dx
  4285a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4285a6:	jne    0x4285f1
  4285a8:	cmp    al,0x2a
  4285aa:	mov    ds:0xdc11f015,al
  4285af:	pop    ecx
  4285b0:	pop    edx
  4285b1:	xor    al,0xf
  4285b3:	sub    DWORD PTR [esi+0x30],edx
  4285b6:	add    al,0x49
  4285b8:	pop    edx
  4285b9:	xor    BYTE PTR [edx+0x3e],0x30
  4285bd:	aas    
  4285be:	xchg   ebx,eax
  4285bf:	(bad)  
  4285c0:	dec    ebp
  4285c1:	scas   eax,DWORD PTR es:[edi]
  4285c2:	pop    esi
  4285c3:	mov    WORD PTR [ebx],gs
  4285c5:	push   cs
  4285c6:	fld    DWORD PTR [eax]
  4285c8:	retf   
  4285c9:	push   edx
  4285ca:	and    DWORD PTR [ebx+0xb384eeb],eax
  4285d0:	jns    0x4285d0
  4285d2:	pop    es
  4285d3:	outs   dx,BYTE PTR ds:[esi]
  4285d4:	int3   
  4285d5:	cmc    
  4285d6:	push   ebx
  4285d7:	push   0xa433b0cf
  4285dc:	inc    edi
  4285dd:	adc    al,0xb1
  4285df:	test   eax,0xd265e2a7
  4285e4:	test   BYTE PTR [ebx],cl
  4285e6:	pusha  
  4285e7:	push   ebp
  4285e8:	ins    BYTE PTR es:[edi],dx
  4285e9:	inc    edi
  4285ea:	icebp  
  4285eb:	push   ebx
  4285ec:	inc    esi
  4285ed:	push   esp
  4285ee:	push   0xffffffd5
  4285f0:	sub    al,0x55
  4285f2:	retf   0xd2d7
  4285f5:	or     eax,0x393616e0
  4285fa:	shr    BYTE PTR [ebp+0x32],cl
  4285fd:	pusha  
  4285fe:	sbb    eax,0xe161f3a0
  428603:	stos   DWORD PTR es:[edi],eax
  428604:	push   ecx
  428605:	or     DWORD PTR [eax-0x6],esi
  428608:	cmp    BYTE PTR [edi-0x5945c1dc],0xde
  42860f:	sbb    esp,eax
  428611:	and    eax,0x5bb0cc3c
  428616:	enter  0xe88b,0xd1
  42861a:	sbb    BYTE PTR [esi],dl
  42861c:	das    
  42861d:	mov    bh,0xe3
  42861f:	dec    edi
  428620:	jb     0x428654
  428622:	test   eax,0x3cb38da2
  428627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428628:	into   
  428629:	and    DWORD PTR [ecx+ebx*4],esp
  42862c:	ss mov ebp,0x37da5b88
  428632:	pop    ebp
  428633:	sub    DWORD PTR ds:[ecx-0x4d],0x8b8c9004
  42863b:	mov    eax,ds:0x25d308cc
  428640:	gs jp  0x428615
  428643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428644:	and    BYTE PTR [ebx-0x78],bl
  428647:	xor    DWORD PTR [ecx],0x870bf5f0
  42864d:	mov    cl,BYTE PTR [ebp-0x2a29e10c]
  428653:	mov    ah,0x5
  428655:	rcl    bh,1
  428657:	push   esp
  428658:	pop    esi
  428659:	add    ch,cl
  42865b:	nop
  42865c:	lea    ecx,[edx+ebx*8+0x3e355805]
  428663:	hlt    
  428664:	cdq    
  428665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428666:	lods   al,BYTE PTR ds:[esi]
  428667:	fcmovbe st,st(3)
  428669:	add    BYTE PTR [edx],ch
  42866b:	(bad)  
  42866c:	clc    
  42866d:	in     eax,0x87
  42866f:	adc    BYTE PTR [ebp-0x5381dd51],dl
  428675:	xchg   ecx,eax
  428676:	push   ds
  428677:	out    0xf8,al
  428679:	add    ebx,DWORD PTR [ecx]
  42867b:	outs   dx,BYTE PTR ds:[esi]
  42867c:	ret    0x3df2
  42867f:	mov    ch,0x44
  428681:	fistp  DWORD PTR [ebx-0x17]
  428684:	mov    dh,0x7a
  428686:	mov    BYTE PTR [edx+0x3ff6add4],al
  42868c:	and    DWORD PTR [edx+ebp*8+0x5cd89b2c],esi
  428693:	hlt    
  428694:	adc    DWORD PTR [ecx-0x6cdc2148],ecx
  42869a:	jae    0x4286b1
  42869c:	add    DWORD PTR [di],0x60
  4286a0:	xor    al,0x50
  4286a2:	push   0x7ac9471e
  4286a7:	popa   
  4286a8:	imul   esi,edi,0xaec05398
  4286ae:	or     ah,BYTE PTR [ebx-0x501536c5]
  4286b4:	sub    al,0xdd
  4286b6:	push   ebx
  4286b7:	dec    ebx
  4286b8:	xchg   edi,eax
  4286b9:	dec    edi
  4286ba:	fwait
  4286bb:	in     al,0x6e
  4286bd:	mov    edi,0xc6b4d337
  4286c2:	leave  
  4286c3:	add    ecx,edx
  4286c5:	adc    eax,0x3a7d0086
  4286ca:	clc    
  4286cb:	jnp    0x42865c
  4286cd:	xchg   bl,cl
  4286cf:	shr    DWORD PTR [esi],1
  4286d1:	sub    BYTE PTR [esi+0x77064ed7],al
  4286d7:	xlat   BYTE PTR ds:[ebx]
  4286d8:	xor    edi,0x51174a30
  4286de:	mov    dh,0xb6
  4286e0:	inc    edi
  4286e1:	ins    BYTE PTR es:[edi],dx
  4286e2:	jbe    0x428667
  4286e4:	outs   dx,BYTE PTR ds:[esi]
  4286e5:	in     al,0x2a
  4286e7:	in     al,dx
  4286e8:	mov    cs,WORD PTR [eax-0x1c]
  4286eb:	push   ebp
  4286ec:	mov    dh,BYTE PTR ds:0xa34b6392
  4286f2:	mov    BYTE PTR [edx+ecx*4],al
  4286f5:	imul   edx,ebx,0xffffffc1
  4286f8:	es pop edx
  4286fa:	or     al,0x67
  4286fc:	fnstenv [edx-0x5e]
  4286ff:	push   edi
  428700:	test   BYTE PTR [edi],0x5
  428703:	xchg   ebx,eax
  428704:	fidiv  DWORD PTR [eax+0x22]
  428707:	inc    BYTE PTR [esp+edx*2+0x4e15f7bc]
  42870e:	mov    eax,ds:0x7011f8f8
  428713:	ins    DWORD PTR es:[edi],dx
  428714:	ins    DWORD PTR es:[edi],dx
  428715:	cmp    esi,DWORD PTR [esi]
  428717:	mov    bh,0xd0
  428719:	div    DWORD PTR [edi-0x2656bf0f]
  42871f:	je     0x4286db
  428721:	push   ds
  428722:	xor    al,0x8e
  428724:	pop    ebx
  428725:	fiadd  DWORD PTR [esi+0xb]
  428728:	jae    0x42874a
  42872a:	xor    esi,eax
  42872c:	xchg   edi,eax
  42872d:	jmp    0x4286c9
  42872f:	push   0xb458badd
  428734:	retf   
  428735:	mov    al,ds:0xd7b4b37f
  42873a:	arpl   WORD PTR [eax+0x7e7714b4],sp
  428740:	jge    0x428770
  428742:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428743:	das    
  428744:	ret    0x8d6c
  428747:	leave  
  428748:	clc    
  428749:	pop    es
  42874a:	fidiv  DWORD PTR [edx-0x42]
  42874d:	inc    ch
  42874f:	bnd jb 0x428751
  428752:	and    ch,BYTE PTR [ecx-0x74]
  428755:	(bad)  
  428756:	dec    ebx
  428757:	in     al,dx
  428758:	fld    DWORD PTR [edi+0x64]
  42875b:	mov    al,ds:0x37f7a230
  428760:	out    0xd0,al
  428762:	add    al,0x60
  428764:	inc    ebx
  428765:	(bad)  
  428766:	cs std 
  428768:	fwait
  428769:	pop    ecx
  42876a:	inc    esp
  42876b:	loope  0x428779
  42876d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42876e:	push   esi
  42876f:	cmp    al,BYTE PTR [ebp+0x3a90f6c3]
  428775:	arpl   WORD PTR [eax-0x5],si
  428778:	pop    edx
  428779:	inc    esi
  42877a:	jo     0x42877f
  42877c:	aas    
  42877d:	push   ecx
  42877e:	xor    BYTE PTR [eax+0x39fd005c],dh
  428784:	xor    eax,0xfd1cf514
  428789:	stc    
  42878a:	int    0xea
  42878c:	xor    al,al
  42878e:	pop    edx
  42878f:	sub    edi,DWORD PTR [esi]
  428791:	cmp    DWORD PTR [ebx],edi
  428793:	stc    
  428794:	add    DWORD PTR [eax],eax
  428796:	daa    
  428797:	add    eax,DWORD PTR [eax]
  428799:	add    BYTE PTR [ebp+0x4],dl
  42879c:	mov    al,ds:0xdce1004d
  4287a1:	je     0x428773
  4287a3:	loopne 0x428778
  4287a5:	ja     0x4287a5
  4287a7:	call   0xfdc6:0x724c1705
  4287ae:	dec    ecx
  4287af:	adc    ebp,DWORD PTR [ecx]
  4287b1:	dec    eax
  4287b2:	fstp   DWORD PTR [esi-0x136d8019]
  4287b9:	sub    eax,0xb9a2bbda
  4287be:	cmc    
  4287bf:	and    al,0x43
  4287c1:	popf   
  4287c2:	mov    WORD PTR [ebp-0x12c83e11],fs
  4287c8:	or     DWORD PTR [eax-0x69],0xffffff95
  4287cc:	rol    ebx,0x98
  4287cf:	fistp  WORD PTR ds:0x61116de6
  4287d5:	fninit 
  4287d7:	dec    esi
  4287d8:	sbb    eax,0xce0e903
  4287dd:	cmp    DWORD PTR [ecx],ecx
  4287df:	and    cl,BYTE PTR [eax-0x1e]
  4287e2:	cld    
  4287e3:	fstp   DWORD PTR [edx+edi*8-0x27896de]
  4287ea:	movq   mm5,QWORD PTR [ebx+0x7e]
  4287ee:	xchg   BYTE PTR [edi+0xf],bl
  4287f1:	ds jb  0x428837
  4287f4:	pop    eax
  4287f5:	adc    al,0xc2
  4287f7:	daa    
  4287f8:	add    BYTE PTR [edx+ecx*2],ch
  4287fb:	mov    WORD PTR [eax-0x2c],ss
  4287fe:	retf   
  4287ff:	dec    ebp
  428800:	(bad)  
  428801:	popa   
  428802:	pop    ebp
  428803:	icebp  
  428804:	adc    al,0x10
  428806:	cmp    ah,BYTE PTR fs:[ecx-0x16]
  42880a:	push   es
  42880b:	loope  0x428841
  42880d:	loope  0x4287d7
  42880f:	push   ss
  428810:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428811:	xor    BYTE PTR [ecx],ch
  428813:	jp     0x42884e
  428815:	inc    esp
  428816:	mov    ebx,0x41409db0
  42881b:	shl    DWORD PTR fs:[ebp+esi*4-0x54],1
  428820:	mov    edx,0xec9e2da6
  428825:	and    eax,0xe7396159
  42882a:	retf   
  42882b:	js     0x42886a
  42882d:	in     al,dx
  42882e:	jns    0x428800
  428830:	add    BYTE PTR [ebx+edi*8],0x80
  428834:	fsubr  DWORD PTR [edi]
  428836:	push   cs
  428837:	inc    eax
  428838:	and    dl,ah
  42883a:	mov    dh,0x3
  42883c:	imul   edi,DWORD PTR [edi+ebx*4-0x29a80cbd],0x45acbdca
  428847:	add    edx,DWORD PTR [edx+0x58]
  42884a:	xlat   BYTE PTR ds:[ebx]
  42884b:	sbb    eax,0x5d94fa97
  428850:	push   ebx
  428851:	call   0xe767:0x8195f0c3
  428858:	jge    0x4287e6
  42885a:	and    DWORD PTR [esi],esp
  42885c:	and    ebx,DWORD PTR [eax-0x6c]
  42885f:	mov    edi,0x81587993
  428864:	adc    BYTE PTR [edx+0x78],dh
  428867:	stc    
  428868:	lods   al,BYTE PTR ds:[esi]
  428869:	std    
  42886a:	stc    
  42886b:	ficom  DWORD PTR [edi+0x15]
  42886e:	retf   
  42886f:	ret    0x6f5b
  428872:	jne    0x4288d3
  428874:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428875:	inc    ebp
  428876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428877:	addr16 sub ebx,eax
  42887a:	sbb    DWORD PTR [edi-0x547bdf4],eax
  428880:	sbb    eax,0x97fa9608
  428885:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428886:	bound  edx,QWORD PTR [edx-0x5baebac2]
  42888c:	mov    ah,dl
  42888e:	scas   al,BYTE PTR es:[edi]
  42888f:	call   0x459a:0xdb35a1bb
  428896:	pop    esi
  428897:	inc    edi
  428898:	xor    dh,ah
  42889a:	cmc    
  42889b:	xchg   DWORD PTR [edi-0x7fa09a9a],ebp
  4288a1:	test   eax,0xf79c8f45
  4288a6:	lods   eax,DWORD PTR ds:[esi]
  4288a7:	mov    eax,ds:0x4454b96a
  4288ac:	push   eax
  4288ad:	xor    esp,DWORD PTR [edi]
  4288af:	(bad)  
  4288b0:	js     0x4288be
  4288b2:	jmp    0x4288a5
  4288b4:	lods   eax,DWORD PTR ds:[esi]
  4288b5:	fst    DWORD PTR [ecx+0x6d423802]
  4288bb:	rcl    DWORD PTR ss:[ebx+0x7c921e9],cl
  4288c2:	mov    ecx,0xfb7fd099
  4288c7:	je     0x428945
  4288c9:	push   ecx
  4288ca:	pop    ss
  4288cb:	mov    ds:0x54af9116,al
  4288d0:	ret    0x7125
  4288d3:	sbb    cl,BYTE PTR [edi-0x52]
  4288d6:	mov    ds:0xe11da992,eax
  4288db:	fcomp  DWORD PTR [esi+0x30]
  4288de:	std    
  4288df:	mov    edi,0x8edf83dd
  4288e4:	arpl   WORD PTR [ebx+0x5a08d5dd],sp
  4288ea:	fsub   QWORD PTR [edx]
  4288ec:	(bad)  
  4288ee:	gs mov ah,0x79
  4288f1:	jae    0x4288f1
  4288f3:	add    eax,0xd2fe25cc
  4288f8:	inc    esp
  4288f9:	ficom  DWORD PTR [ebp+0x50]
  4288fc:	and    BYTE PTR [edx],dl
  4288fe:	mov    esp,0xcf4b51d4
  428903:	fidiv  WORD PTR [ecx-0x4a]
  428906:	ins    DWORD PTR es:[edi],dx
  428907:	and    bl,BYTE PTR [ebp+0x30]
  42890a:	and    DWORD PTR [ebx-0x354cb53f],esi
  428910:	imul   esi,DWORD PTR [esp+edi*2-0x5ff809dc],0xffffff83
  428918:	shr    BYTE PTR [eax+0x30508863],cl
  42891e:	dec    eax
  42891f:	cdq    
  428920:	iret   
  428921:	in     eax,0xb1
  428923:	add    al,0xa4
  428925:	inc    esi
  428926:	add    eax,0xe72fd9e6
  42892b:	sub    al,0x14
  42892d:	not    BYTE PTR [ebx]
  42892f:	bound  ebp,QWORD PTR [edi]
  428931:	jp     0x4288ba
  428933:	ret    0x40ab
  428936:	int    0x23
  428938:	jnp    0x42897d
  42893a:	xor    BYTE PTR [ebp-0x39],bh
  42893d:	jecxz  0x4289b4
  42893f:	sbb    DWORD PTR [ebp+0x543bc49d],esi
  428945:	mov    edx,0x2604acd1
  42894a:	pop    edi
  42894b:	mov    ch,ah
  42894d:	ss popf 
  42894f:	es daa 
  428951:	dec    ebx
  428952:	xor    BYTE PTR [bx+di+0x6bfa],ah
  428957:	in     eax,dx
  428958:	cmp    DWORD PTR [ebp+0x69],esi
  42895b:	or     cl,BYTE PTR [ebp-0x22]
  42895e:	jmp    0x950b2708
  428963:	lock adc cl,BYTE PTR [ecx]
  428966:	pop    ds
  428967:	xchg   esp,eax
  428968:	push   edi
  428969:	adc    al,0x13
  42896b:	add    eax,DWORD PTR [ebp-0x55610c0b]
  428971:	dec    esp
  428972:	jne    0x4289a2
  428974:	mov    ecx,0x2b6470b6
  428979:	sar    DWORD PTR [ebx+0x26],1
  42897c:	sub    edx,DWORD PTR [ebx-0x38]
  42897f:	add    eax,0xa63c9a83
  428984:	and    esp,DWORD PTR [esi]
  428986:	sub    al,0xdf
  428988:	out    0xcb,eax
  42898a:	sahf   
  42898b:	dec    ebp
  42898c:	pusha  
  42898d:	mov    esp,0x3e96856a
  428992:	add    al,0x46
  428994:	push   es
  428995:	push   eax
  428996:	push   edi
  428997:	jp     0x428954
  428999:	adc    ch,bl
  42899b:	pop    ss
  42899c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42899d:	mov    bl,0xfe
  42899f:	xchg   edx,eax
  4289a0:	outs   dx,BYTE PTR ds:[esi]
  4289a1:	push   esp
  4289a2:	sbb    BYTE PTR [ebx+0x257b8f4f],bh
  4289a8:	outs   dx,DWORD PTR ds:[esi]
  4289a9:	mov    ebx,DWORD PTR [ecx+0x23]
  4289ac:	sahf   
  4289ad:	xchg   ebx,eax
  4289ae:	xor    eax,0x21527bf4
  4289b3:	lds    ebx,FWORD PTR [ebx+edx*4+0x170a0585]
  4289ba:	mov    dh,0x15
  4289bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4289bd:	neg    BYTE PTR [edx+0x18c4607e]
  4289c3:	data16 lods al,BYTE PTR ds:[esi]
  4289c5:	sbb    DWORD PTR [ecx],edx
  4289c7:	push   bx
  4289c9:	or     ebp,DWORD PTR [ecx]
  4289cb:	out    dx,eax
  4289cc:	lock mov ebx,0xca226354
  4289d2:	sbb    eax,0x36faec60
  4289d7:	mov    esp,0x793fca7a
  4289dc:	fild   DWORD PTR [ecx-0x62]
  4289df:	push   dx
  4289e1:	test   eax,0x733792b5
  4289e6:	inc    ebx
  4289e7:	mov    edx,0xb3913ecf
  4289ec:	inc    esp
  4289ed:	fnstsw WORD PTR [edi-0x7]
  4289f0:	fstp   QWORD PTR [edi]
  4289f2:	push   cs
  4289f3:	pop    eax
  4289f4:	sbb    dh,BYTE PTR [ebp+0x63]
  4289f7:	push   ecx
  4289f8:	mov    cl,0x32
  4289fa:	data16 mov BYTE PTR [eax],0x5e
  4289fe:	lds    edx,FWORD PTR [esi+0x4bc09fe1]
  428a04:	jg     0x42899e
  428a06:	mov    BYTE PTR [ecx],cl
  428a08:	ror    BYTE PTR [ebx],0x34
  428a0b:	push   0xbe2de682
  428a10:	pusha  
  428a11:	push   ebx
  428a12:	xor    BYTE PTR [ebx],0x6a
  428a15:	cmp    eax,0x21e42f36
  428a1a:	pop    eax
  428a1b:	jle    0x428a70
  428a1d:	lock popa 
  428a1f:	inc    eax
  428a20:	test   DWORD PTR ds:0x8668c413,edx
  428a26:	sbb    DWORD PTR [esi-0x1f2d422c],ecx
  428a2c:	jbe    0x428a0d
  428a2e:	imul   edx,DWORD PTR [ebp+ebp*8+0x7dcace82],0x34bad810
  428a39:	mov    eax,ds:0x38841aa5
  428a3e:	retf   0xf441
  428a41:	xchg   edx,eax
  428a42:	int3   
  428a43:	sbb    dl,BYTE PTR [edx-0x20f44318]
  428a49:	repz add eax,0x83c988e0
  428a4f:	jge    0x428a5a
  428a51:	and    al,0x30
  428a53:	mov    fs,WORD PTR [ebp-0x7a]
  428a56:	or     dh,bh
  428a58:	inc    eax
  428a59:	add    al,0x58
  428a5b:	std    
  428a5c:	add    al,BYTE PTR [ecx]
  428a5e:	jle    0x4289ed
  428a60:	ret    0xe7a4
  428a63:	jmp    0x133b:0x61ea917e
  428a6a:	adc    bl,ch
  428a6c:	(bad)  
  428a6e:	imul   edi,DWORD PTR [ebx+0x7bb8412d],0xffffffa4
  428a75:	in     eax,0xd4
  428a77:	outs   dx,DWORD PTR ds:[esi]
  428a78:	mov    ch,0xc8
  428a7a:	push   eax
  428a7b:	mov    bh,0xf8
  428a7d:	in     al,0xbd
  428a7f:	sti    
  428a80:	popa   
  428a81:	xor    al,0x47
  428a83:	inc    ebx
  428a84:	dec    ecx
  428a85:	cmp    BYTE PTR [eax+eiz*1],al
  428a88:	add    DWORD PTR [ebx-0x42ba1f05],ebp
  428a8e:	retf   
  428a8f:	test   al,0xc9
  428a91:	cmp    al,0xc7
  428a93:	enter  0x8178,0xe0
  428a97:	rol    DWORD PTR [ebp+0x7ae175aa],cl
  428a9d:	stc    
  428a9e:	cs addr16 xor al,0x79
  428aa2:	scas   al,BYTE PTR es:[edi]
  428aa3:	cmp    DWORD PTR [ecx+ebx*1],esi
  428aa6:	arpl   WORD PTR [ecx+0x78],cx
  428aa9:	fsubp  st(4),st
  428aab:	pushf  
  428aac:	xor    DWORD PTR [esi],esp
  428aae:	daa    
  428aaf:	icebp  
  428ab0:	cli    
  428ab1:	iret   
  428ab2:	add    bh,BYTE PTR [edx]
  428ab4:	test   eax,0x14690c75
  428ab9:	repnz and DWORD PTR [edx-0x4],ebp
  428abd:	cli    
  428abe:	test   DWORD PTR [edi],edx
  428ac0:	pop    esp
  428ac1:	add    BYTE PTR [ecx-0x7d39faf],ch
  428ac7:	cmp    eax,0x8ba9d5ed
  428acc:	mov    ebx,0xb83ee992
  428ad1:	or     al,0x62
  428ad3:	cld    
  428ad4:	add    DWORD PTR [eax],eax
  428ad6:	or     al,0x0
  428ad8:	add    BYTE PTR [eax],al
  428ada:	lds    esi,FWORD PTR [ebp+ebx*1+0x5]
  428ade:	mov    dh,0x59
  428ae0:	pop    ss
  428ae1:	add    al,0xa4
  428ae3:	jbe    0x428b1d
  428ae5:	push   cs
	...
